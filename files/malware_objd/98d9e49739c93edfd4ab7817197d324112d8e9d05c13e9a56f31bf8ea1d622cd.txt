
98d9e49739c93edfd4ab7817197d324112d8e9d05c13e9a56f31bf8ea1d622cd.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x90
  401009:	push   esi
  40100a:	and    DWORD PTR ds:0x42a010,0x0
  401014:	jmp    0x401024
  401019:	mov    eax,ds:0x42a010
  40101e:	inc    eax
  40101f:	mov    ds:0x42a010,eax
  401024:	cmp    DWORD PTR ds:0x42a010,0x1d
  40102b:	jae    0x401072
  401031:	cmp    DWORD PTR ds:0x42a010,0xc
  401038:	jne    0x40104c
  40103e:	push   0x42900c
  401043:	push   DWORD PTR [ebp-0x18]
  401046:	call   DWORD PTR ds:0x424014
  40104c:	cmp    DWORD PTR ds:0x42a010,0xb
  401053:	jne    0x401067
  401059:	xor    eax,eax
  40105b:	xor    eax,DWORD PTR ds:0x42a010
  401061:	inc    eax
  401062:	mov    ds:0x42a010,eax
  401067:	jmp    0x401019
  40106c:	adc    ecx,0xcd5
  401072:	push   edi
  401073:	mov    DWORD PTR ds:0x42b004,0x1e
  40107d:	cmp    DWORD PTR ds:0x42b004,0x0
  401084:	je     0x4010e3
  40108a:	cmp    DWORD PTR ds:0x42b004,0x2b
  401091:	jne    0x4010bf
  401097:	push   DWORD PTR [ebp-0x10]
  40109a:	push   0x42b010
  40109f:	push   0x2447
  4010a4:	push   0x42b00c
  4010a9:	push   0x8949
  4010ae:	push   DWORD PTR [ebp-0x14]
  4010b1:	push   DWORD PTR [ebp-0x10]
  4010b4:	push   0x13a5
  4010b9:	call   DWORD PTR ds:0x424018
  4010bf:	xor    esi,esi
  4010c1:	or     esi,DWORD PTR ds:0x42b004
  4010c7:	dec    esi
  4010c8:	mov    DWORD PTR ds:0x42b004,esi
  4010ce:	jmp    0x40107d
  4010d3:	mov    eax,ds:0x42a004
  4010d8:	adc    eax,DWORD PTR ds:0x42b00c
  4010de:	mov    ds:0x42a004,eax
  4010e3:	mov    eax,ds:0x421952
  4010e8:	mov    DWORD PTR [ebp-0x2c],eax
  4010eb:	and    DWORD PTR ds:0x428010,0x0
  4010f5:	mov    ecx,DWORD PTR ds:0x428010
  4010fb:	inc    ecx
  4010fc:	mov    DWORD PTR ds:0x428010,ecx
  401102:	cmp    DWORD PTR ds:0x428010,0x2d
  401109:	jne    0x401118
  40110f:	push   DWORD PTR [ebp-0xc]
  401112:	call   DWORD PTR ds:0x42401c
  401118:	cmp    DWORD PTR ds:0x428010,0x1f
  40111f:	jb     0x4010f5
  401125:	mov    eax,ds:0x421a5e
  40112a:	and    DWORD PTR ds:0x42b008,ebx
  401130:	mov    DWORD PTR [ebp-0x3c],eax
  401133:	sbb    DWORD PTR ds:0x42b010,ebx
  401139:	and    DWORD PTR [ebp-0x34],0x0
  40113d:	or     eax,0x2114
  401142:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  401149:	xor    eax,eax
  40114b:	or     eax,DWORD PTR ds:0x429008
  401151:	xor    DWORD PTR ds:0x428008,eax
  401157:	mov    DWORD PTR [ebp-0x30],0xf89c85b5
  40115e:	mov    eax,DWORD PTR [ebp-0x1c]
  401161:	add    edi,DWORD PTR ds:0x429008
  401167:	mov    ecx,DWORD PTR [ebp-0x1c]
  40116a:	add    edi,esi
  40116c:	xor    eax,ecx
  40116e:	add    DWORD PTR ds:0x428024,edx
  401174:	mov    DWORD PTR [ebp-0x1c],eax
  401177:	and    DWORD PTR ds:0x42c000,0x0
  401181:	xor    eax,eax
  401183:	or     eax,DWORD PTR ds:0x42c000
  401189:	inc    eax
  40118a:	mov    ds:0x42c000,eax
  40118f:	cmp    DWORD PTR ds:0x42c000,0x19
  401196:	jne    0x4011a8
  40119c:	push   DWORD PTR [ebp-0x1c]
  40119f:	push   DWORD PTR [ebp-0xc]
  4011a2:	call   DWORD PTR ds:0x424020
  4011a8:	cmp    DWORD PTR ds:0x42c000,0x14
  4011af:	jb     0x401181
  4011b5:	or     DWORD PTR [ebp-0x1c],0xf89cb5b6
  4011bc:	xor    DWORD PTR ds:0x428014,0x3e14
  4011c6:	mov    eax,DWORD PTR [ebp-0x28]
  4011c9:	sbb    edi,ecx
  4011cb:	mov    ecx,DWORD PTR [ebp-0x28]
  4011ce:	and    DWORD PTR ds:0x42a008,0x0
  4011d8:	mov    esi,DWORD PTR ds:0x42a008
  4011de:	inc    esi
  4011df:	mov    DWORD PTR ds:0x42a008,esi
  4011e5:	cmp    DWORD PTR ds:0x42a008,0x7
  4011ec:	jne    0x40121a
  4011f2:	push   0x42b018
  4011f7:	push   0x2bd6
  4011fc:	push   DWORD PTR [ebp-0x14]
  4011ff:	push   0x428004
  401204:	push   DWORD PTR [ebp-0x20]
  401207:	push   0x4234de
  40120c:	push   0x1e5d
  401211:	push   DWORD PTR [ebp-0x28]
  401214:	call   DWORD PTR ds:0x424024
  40121a:	cmp    DWORD PTR ds:0x42a008,0x6
  401221:	jne    0x401234
  401227:	mov    esi,DWORD PTR ds:0x42a008
  40122d:	inc    esi
  40122e:	mov    DWORD PTR ds:0x42a008,esi
  401234:	cmp    DWORD PTR ds:0x42a008,0x16
  40123b:	jb     0x4011d8
  401241:	sub    DWORD PTR ds:0x42c00c,0x2ac6
  40124b:	xor    eax,ecx
  40124d:	dec    ecx
  40124e:	mov    DWORD PTR [ebp-0x28],eax
  401251:	and    DWORD PTR ds:0x428018,0x0
  40125b:	jmp    0x40126d
  401260:	mov    edi,DWORD PTR ds:0x428018
  401266:	inc    edi
  401267:	mov    DWORD PTR ds:0x428018,edi
  40126d:	cmp    DWORD PTR ds:0x428018,0x1f
  401274:	jae    0x4012b7
  40127a:	cmp    DWORD PTR ds:0x428018,0x11
  401281:	jne    0x401298
  401287:	push   0x4738
  40128c:	push   DWORD PTR [ebp-0x10]
  40128f:	push   DWORD PTR [ebp-0x24]
  401292:	call   DWORD PTR ds:0x424028
  401298:	cmp    DWORD PTR ds:0x428018,0x10
  40129f:	jne    0x4012b2
  4012a5:	mov    edi,DWORD PTR ds:0x428018
  4012ab:	inc    edi
  4012ac:	mov    DWORD PTR ds:0x428018,edi
  4012b2:	jmp    0x401260
  4012b7:	add    DWORD PTR [ebp-0x28],0xf89f05b6
  4012be:	mov    eax,DWORD PTR [ebp-0x18]
  4012c1:	and    DWORD PTR ds:0x428020,0x0
  4012cb:	mov    ecx,DWORD PTR ds:0x428020
  4012d1:	inc    ecx
  4012d2:	mov    DWORD PTR ds:0x428020,ecx
  4012d8:	cmp    DWORD PTR ds:0x428020,0x15
  4012df:	jne    0x4012f5
  4012e5:	push   0x4235a5
  4012ea:	push   0x423629
  4012ef:	call   DWORD PTR ds:0x424030
  4012f5:	cmp    DWORD PTR ds:0x428020,0x14
  4012fc:	jb     0x4012cb
  401302:	mov    ecx,DWORD PTR [ebp-0x18]
  401305:	and    DWORD PTR ds:0x42b000,0x0
  40130f:	jmp    0x401321
  401314:	mov    edi,DWORD PTR ds:0x42b000
  40131a:	inc    edi
  40131b:	mov    DWORD PTR ds:0x42b000,edi
  401321:	cmp    DWORD PTR ds:0x42b000,0x19
  401328:	jae    0x401378
  40132e:	cmp    DWORD PTR ds:0x42b000,0xa
  401335:	jne    0x401359
  40133b:	push   DWORD PTR [ebp-0x18]
  40133e:	push   0x3609
  401343:	push   DWORD PTR [ebp-0xc]
  401346:	push   DWORD PTR [ebp-0x18]
  401349:	push   0x6b70
  40134e:	push   0x42901c
  401353:	call   DWORD PTR ds:0x424038
  401359:	cmp    DWORD PTR ds:0x42b000,0x9
  401360:	jne    0x401373
  401366:	mov    edi,DWORD PTR ds:0x42b000
  40136c:	inc    edi
  40136d:	mov    DWORD PTR ds:0x42b000,edi
  401373:	jmp    0x401314
  401378:	xor    eax,ecx
  40137a:	mov    DWORD PTR [ebp-0x18],eax
  40137d:	add    DWORD PTR [ebp-0x18],0xf89c85f6
  401384:	mov    eax,DWORD PTR [ebp-0x24]
  401387:	mov    ecx,DWORD PTR [ebp-0x24]
  40138a:	xor    eax,ecx
  40138c:	mov    DWORD PTR [ebp-0x24],eax
  40138f:	add    DWORD PTR [ebp-0x24],0xf89c85d6
  401396:	mov    eax,DWORD PTR [ebp-0x14]
  401399:	mov    ecx,DWORD PTR [ebp-0x14]
  40139c:	xor    eax,ecx
  40139e:	mov    DWORD PTR [ebp-0x14],eax
  4013a1:	mov    eax,DWORD PTR [ebp-0x20]
  4013a4:	mov    ecx,DWORD PTR [ebp-0x14]
  4013a7:	mov    esi,0x7510893
  4013ac:	xor    eax,esi
  4013ae:	mov    edi,0x3272db
  4013b3:	add    eax,edi
  4013b5:	xor    eax,ecx
  4013b7:	mov    DWORD PTR [ebp-0x14],eax
  4013ba:	mov    eax,DWORD PTR [ebp-0x10]
  4013bd:	mov    ecx,DWORD PTR [ebp-0x10]
  4013c0:	sub    eax,ecx
  4013c2:	mov    DWORD PTR [ebp-0x10],eax
  4013c5:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  4013cc:	mov    al,BYTE PTR [ebp-0x1]
  4013cf:	movzx  ecx,BYTE PTR [ebp-0x1]
  4013d3:	movzx  eax,al
  4013d6:	sub    ecx,eax
  4013d8:	mov    BYTE PTR [ebp-0x1],cl
  4013db:	movzx  eax,BYTE PTR [ebp-0x1]
  4013df:	xor    eax,0xffffff99
  4013e2:	mov    BYTE PTR [ebp-0x1],al
  4013e5:	mov    eax,DWORD PTR [ebp-0x20]
  4013e8:	xor    eax,esi
  4013ea:	add    eax,edi
  4013ec:	mov    DWORD PTR [ebp-0x14],eax
  4013ef:	lea    eax,[ebp-0x40]
  4013f2:	mov    DWORD PTR [ebp-0x38],eax
  4013f5:	lea    eax,[ebp-0x38]
  4013f8:	mov    DWORD PTR [ebp-0x44],eax
  4013fb:	lea    eax,[ebp-0x44]
  4013fe:	mov    DWORD PTR [ebp-0x8],eax
  401401:	lea    eax,[ebp-0x8]
  401404:	mov    DWORD PTR [ebp-0x48],eax
  401407:	mov    eax,DWORD PTR [ebp-0x18]
  40140a:	xor    eax,esi
  40140c:	add    eax,edi
  40140e:	push   eax
  40140f:	mov    eax,DWORD PTR [ebp-0x1c]
  401412:	xor    eax,esi
  401414:	add    eax,edi
  401416:	push   eax
  401417:	mov    eax,DWORD PTR [ebp-0x10]
  40141a:	xor    eax,esi
  40141c:	add    eax,edi
  40141e:	push   eax
  40141f:	lea    eax,[ebp-0x90]
  401425:	push   eax
  401426:	push   DWORD PTR [ebp-0x20]
  401429:	push   DWORD PTR [ebp-0x30]
  40142c:	call   0x40914a
  401431:	test   eax,eax
  401433:	je     0x401464
  401439:	lea    eax,[ebp-0x90]
  40143f:	push   eax
  401440:	mov    eax,DWORD PTR [ebp-0x30]
  401443:	xor    eax,esi
  401445:	add    eax,edi
  401447:	push   eax
  401448:	mov    eax,DWORD PTR [ebp-0x2c]
  40144b:	add    eax,0xaa
  401450:	push   eax
  401451:	mov    eax,DWORD PTR [ebp-0x2c]
  401454:	mov    eax,DWORD PTR [eax+0x198]
  40145a:	push   DWORD PTR [eax]
  40145c:	call   0x405c6f
  401461:	mov    DWORD PTR [ebp-0x40],eax
  401464:	lea    eax,[ebp+0x4]
  401467:	mov    DWORD PTR [ebp-0x34],eax
  40146a:	mov    eax,DWORD PTR [ebp-0x8]
  40146d:	mov    eax,DWORD PTR [eax]
  40146f:	mov    eax,DWORD PTR [eax]
  401471:	mov    eax,DWORD PTR [eax]
  401473:	test   eax,eax
  401475:	je     0x4038ab
  40147b:	lea    eax,[ebp-0xc]
  40147e:	mov    DWORD PTR [ebp-0x4c],eax
  401481:	mov    eax,DWORD PTR [ebp-0x3c]
  401484:	mov    DWORD PTR [ebp-0xc],eax
  401487:	mov    eax,DWORD PTR [ebp-0x8]
  40148a:	mov    eax,DWORD PTR [eax]
  40148c:	mov    eax,DWORD PTR [eax]
  40148e:	mov    eax,DWORD PTR [eax]
  401490:	sub    DWORD PTR [ebp-0xc],eax
  401493:	mov    ecx,DWORD PTR [ebp-0x10]
  401496:	xor    ecx,esi
  401498:	mov    eax,0xffcd8d25
  40149d:	sub    eax,ecx
  40149f:	jmp    0x403854
  4014a4:	out    dx,al
  4014a5:	add    eax,0x6723a723
  4014aa:	outs   dx,BYTE PTR ds:[esi]
  4014ab:	sbb    DWORD PTR [edx+0x1b],0xf
  4014af:	hlt    
  4014b0:	stos   BYTE PTR es:[edi],al
  4014b1:	push   edx
  4014b2:	jne    0x401464
  4014b4:	bound  esp,QWORD PTR [edx+0x62]
  4014b7:	(bad)  
  4014b8:	retf   0x625f
  4014bb:	bound  ecx,QWORD PTR [ecx]
  4014bd:	sub    eax,DWORD PTR [edi]
  4014bf:	pop    edx
  4014c0:	add    eax,0x792c0356
  4014c5:	pop    ebx
  4014c6:	jne    0x40150f
  4014c8:	xchg   edi,eax
  4014c9:	dec    ebx
  4014ca:	jb     0x401510
  4014cc:	jno    0x4014f3
  4014ce:	iret   
  4014cf:	retf   
  4014d0:	hlt    
  4014d1:	inc    ebp
  4014d2:	aam    0x97
  4014d4:	cdq    
  4014d5:	add    ebp,DWORD PTR [edx]
  4014d7:	pop    esp
  4014d8:	jno    0x401544
  4014da:	mov    es,WORD PTR [edx-0x43be3b9c]
  4014e0:	daa    
  4014e1:	mov    ecx,0x54f9627
  4014e6:	shr    BYTE PTR [ebp+eax*1+0x2],1
  4014ea:	adc    cl,al
  4014ec:	(bad)  
  4014ed:	(bad)  [esi-0x78]
  4014f0:	and    BYTE PTR [esi+0x31c900b0],dl
  4014f6:	dec    esi
  4014f7:	fbstp  TBYTE PTR [edx-0x62cc368d]
  4014fd:	mov    cs,WORD PTR [eax+0x78]
  401500:	jo     0x4014b8
  401502:	dec    edi
  401503:	pushf  
  401504:	pop    eax
  401505:	jae    0x401491
  401507:	sti    
  401508:	push   es
  401509:	push   0xc72c3d54
  40150e:	pop    esi
  40150f:	cmp    BYTE PTR [edx+0x6c],dl
  401512:	add    ecx,DWORD PTR [edi]
  401514:	push   ss
  401515:	jge    0x40153e
  401517:	mov    ebx,0xa6ab63c3
  40151c:	mov    esp,0xc531c291
  401521:	stc    
  401522:	inc    ebx
  401523:	popf   
  401524:	xchg   edx,eax
  401525:	in     eax,0x12
  401527:	fstp   QWORD PTR [edx]
  401529:	jg     0x4014c9
  40152b:	cmp    ecx,edi
  40152d:	mov    al,ds:0xdb808269
  401532:	dec    ecx
  401533:	loop   0x4014ee
  401535:	inc    eax
  401536:	or     BYTE PTR [ebx],0x2c
  401539:	inc    ebx
  40153a:	pop    ecx
  40153b:	mov    ecx,0xda183803
  401540:	xor    ebx,DWORD PTR [esi+0x22]
  401543:	sbb    ch,BYTE PTR [ebx+ecx*1]
  401546:	inc    esi
  401547:	add    esp,DWORD PTR [eax-0x32d94fe1]
  40154d:	dec    ebp
  40154e:	nop
  40154f:	xchg   edi,eax
  401550:	dec    esi
  401551:	mov    cl,0x25
  401553:	pop    ecx
  401554:	les    ebp,FWORD PTR [eax]
  401556:	sub    eax,ecx
  401558:	vpsubusw xmm0,xmm7,XMMWORD PTR [edi-0x25]
  40155d:	mov    edi,0xdb06d0ab
  401562:	test   al,0x7e
  401564:	bound  edx,QWORD PTR [ebp+0x268b1b46]
  40156a:	in     eax,0xc2
  40156c:	push   ds
  40156d:	sub    DWORD PTR [ebp+0x6c],0x51
  401571:	imul   ebp,edx,0x30ad0cb4
  401577:	add    eax,0x190c16e7
  40157c:	test   al,0x85
  40157e:	jmp    0x4015b2
  401580:	cmp    BYTE PTR [edx+esi*8-0xd],dl
  401584:	(bad)  
  401585:	mov    ecx,0x4dee1f3b
  40158a:	je     0x401589
  40158c:	(bad)  
  40158e:	fnstenv [edi]
  401590:	dec    ecx
  401591:	mov    ebp,0x1dd2fa9a
  401596:	or     cl,cl
  401598:	add    edx,DWORD PTR [ecx+esi*2-0x25]
  40159c:	lds    ebx,FWORD PTR [ecx+0x57e58fd8]
  4015a2:	jmp    0xd4008ea8
  4015a7:	test   al,0xc5
  4015a9:	xchg   edi,eax
  4015aa:	jnp    0x401601
  4015ac:	test   al,0xcd
  4015ae:	scas   eax,DWORD PTR es:[edi]
  4015af:	fidivr WORD PTR [esi]
  4015b1:	xchg   ecx,eax
  4015b2:	ror    DWORD PTR [esi+0x23],cl
  4015b5:	sbb    ecx,DWORD PTR [ebx]
  4015b7:	cdq    
  4015b8:	push   es
  4015b9:	test   DWORD PTR [edx+0x7288a3f],eax
  4015bf:	les    edx,FWORD PTR [edi+edi*4]
  4015c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4015c3:	les    edi,FWORD PTR [edi+ebx*2]
  4015c6:	imul   ecx,ecx,0x56ab9301
  4015cc:	push   eax
  4015cd:	cmp    DWORD PTR [edi-0x74],edi
  4015d0:	dec    ebx
  4015d1:	mov    ds:0xd7eb4157,al
  4015d6:	popa   
  4015d7:	or     DWORD PTR fs:[ebx],ecx
  4015da:	adc    dl,0x83
  4015dd:	scas   eax,DWORD PTR es:[edi]
  4015de:	loopne 0x40156d
  4015e0:	cld    
  4015e1:	sahf   
  4015e2:	lods   eax,DWORD PTR ds:[esi]
  4015e3:	jo     0x401634
  4015e5:	sub    cl,BYTE PTR [ebx-0x691b3546]
  4015eb:	fisttp WORD PTR [eax+0x79]
  4015ee:	and    eax,0xcf10ad8e
  4015f3:	in     eax,dx
  4015f4:	pop    edi
  4015f5:	xlat   BYTE PTR ds:[ebx]
  4015f6:	inc    ecx
  4015f7:	iret   
  4015f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4015f9:	pslld  mm5,QWORD PTR [esi-0x7d]
  4015fd:	adc    al,0xaf
  4015ff:	fdiv   DWORD PTR [ebx]
  401601:	das    
  401602:	pop    edi
  401603:	sub    esi,esi
  401605:	das    
  401606:	push   ecx
  401607:	pop    esi
  401608:	and    edx,edi
  40160a:	add    eax,0xa5244557
  40160f:	(bad)  
  401610:	in     al,0xd0
  401612:	mov    dh,0x40
  401614:	xor    ah,ah
  401616:	mov    gs,WORD PTR [eax-0x7e68399f]
  40161c:	push   ebp
  40161d:	std    
  40161e:	imul   edi,DWORD PTR [ebx],0xc1fb2a79
  401624:	push   eax
  401625:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401626:	or     al,0x3
  401628:	ret    
  401629:	out    dx,al
  40162a:	pop    edx
  40162b:	or     DWORD PTR [ecx-0x6118833f],ebx
  401631:	popf   
  401632:	popa   
  401633:	mov    edx,0xf249bab0
  401638:	add    eax,0x76ce923a
  40163d:	psraw  mm0,mm4
  401640:	xchg   esp,eax
  401641:	mov    ds:0x99dc050,al
  401646:	dec    ebx
  401647:	xor    al,0x63
  401649:	rol    BYTE PTR [ebx-0x54],1
  40164c:	pusha  
  40164d:	icebp  
  40164e:	and    dl,BYTE PTR [eax+0x13]
  401651:	retf   
  401652:	cld    
  401653:	test   BYTE PTR [esp+esi*8],bl
  401656:	js     0x4015e3
  401658:	in     eax,dx
  401659:	jno    0x40165c
  40165b:	adc    ch,bh
  40165d:	(bad)  
  40165f:	or     eax,0x738d60c4
  401664:	out    0xf7,al
  401666:	push   es
  401667:	rol    BYTE PTR [eax+edx*4+0x2fdd95dc],1
  40166e:	pop    edx
  40166f:	jl     0x4016c2
  401671:	inc    ebx
  401672:	mov    ah,0xe1
  401674:	pop    esp
  401675:	call   0xa80:0xd721e809
  40167c:	test   DWORD PTR [esi+0x28],edx
  40167f:	pop    esp
  401680:	gs inc edi
  401682:	es in  al,dx
  401684:	lds    ecx,FWORD PTR [ecx]
  401686:	xor    ah,bl
  401688:	lds    eax,FWORD PTR [ebp-0x671de1d9]
  40168e:	jae    0x401639
  401690:	ror    esi,1
  401692:	sub    BYTE PTR [ebx-0x1d6f632c],0x10
  401699:	fdivrp st(5),st
  40169b:	out    0x78,eax
  40169d:	(bad)  
  40169e:	cld    
  40169f:	aam    0xc1
  4016a1:	or     dl,dl
  4016a3:	test   BYTE PTR [ecx],0x36
  4016a6:	sahf   
  4016a7:	test   ecx,esi
  4016a9:	dec    esp
  4016aa:	xor    bh,BYTE PTR [ebx]
  4016ac:	repnz repnz mov dl,0xcf
  4016b0:	repz mov bl,0x41
  4016b3:	cmp    DWORD PTR [esi],edx
  4016b5:	pop    ss
  4016b6:	imul   esi,ebx,0xfffffff2
  4016b9:	ret    
  4016ba:	dec    esp
  4016bb:	int    0xc9
  4016bd:	psubb  mm5,QWORD PTR [ebx-0x70]
  4016c1:	cli    
  4016c2:	xor    al,0x9
  4016c4:	ja     0x401664
  4016c6:	xchg   ebp,eax
  4016c7:	(bad)
  4016ca:	sub    esp,DWORD PTR ds:0xf4a68e5a
  4016d0:	cmovnp esp,edi
  4016d3:	jmp    0x1cea:0x3713794b
  4016da:	jp     0x4016d3
  4016dc:	cmp    eax,0x5ac44ab4
  4016e1:	out    0xb9,al
  4016e3:	fiadd  DWORD PTR [edi]
  4016e5:	mov    al,0x20
  4016e7:	fmul   QWORD PTR [ecx]
  4016e9:	sbb    ebp,ebx
  4016eb:	mov    eax,0xd27de478
  4016f0:	stos   DWORD PTR es:[edi],eax
  4016f1:	xchg   ecx,eax
  4016f2:	inc    ecx
  4016f3:	popf   
  4016f4:	cs inc edx
  4016f6:	outs   dx,BYTE PTR ds:[esi]
  4016f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4016f8:	push   eax
  4016f9:	loope  0x4016b4
  4016fb:	sbb    eax,0x6a6f8bd5
  401700:	dec    esp
  401701:	fcmovb st,st(3)
  401703:	imul   esp,DWORD PTR ds:0xa7933cb7,0x2ac06eec
  40170d:	push   edi
  40170e:	push   ds
  40170f:	sbb    al,0x3
  401711:	jns    0x4016ab
  401713:	(bad)  
  401714:	iret   
  401715:	adc    ebx,0xffffffb1
  401718:	lods   al,BYTE PTR ds:[esi]
  401719:	enter  0x14b2,0x2f
  40171d:	iret   
  40171e:	lock jl 0x4016c8
  401721:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401722:	pop    ebx
  401723:	add    bl,BYTE PTR fs:[ecx+esi*1+0x25]
  401728:	das    
  401729:	cmp    eax,0x6c5ba40b
  40172e:	cmp    bl,bl
  401730:	arpl   bx,bp
  401732:	mov    al,ds:0x369abe58
  401737:	adc    BYTE PTR [esi-0x63],bl
  40173a:	cwde   
  40173b:	repnz std 
  40173d:	hlt    
  40173e:	fdivr  st(6),st
  401740:	mov    ah,ah
  401742:	lods   eax,DWORD PTR ds:[esi]
  401743:	ins    DWORD PTR es:[edi],dx
  401744:	adc    esi,edi
  401746:	xchg   DWORD PTR [esi],ebx
  401748:	and    eax,0x640af267
  40174d:	jb     0x40173e
  40174f:	mov    ebp,ecx
  401751:	shl    DWORD PTR [ebx+0x6e],0x4d
  401755:	daa    
  401756:	push   ebx
  401757:	stc    
  401758:	lock jmp 0x2a981114
  40175e:	cmp    DWORD PTR ds:0x73152564,0x64562668
  401768:	(bad)  [edx-0x60]
  40176b:	adc    dl,BYTE PTR [edi-0x31455e07]
  401771:	jg     0x401797
  401773:	ins    BYTE PTR es:[edi],dx
  401774:	lods   eax,DWORD PTR ds:[esi]
  401775:	push   cs
  401776:	mov    ds:0xb20f01e3,al
  40177b:	daa    
  40177c:	dec    esp
  40177d:	pop    ebp
  40177e:	add    edx,eax
  401780:	(bad)  
  401781:	enter  0xa32f,0x82
  401785:	rol    BYTE PTR [edx+ebx*2-0x72],0x61
  40178a:	mov    ds,ecx
  40178c:	in     al,dx
  40178d:	pop    ecx
  40178e:	push   ebx
  40178f:	xlat   BYTE PTR ds:[ebx]
  401790:	cld    
  401791:	sbb    al,0x1
  401793:	orps   xmm7,XMMWORD PTR [ebx+0x6794bbfe]
  40179a:	sbb    BYTE PTR [esi],0xc4
  40179d:	and    al,0xac
  40179f:	stos   BYTE PTR es:[edi],al
  4017a0:	xchg   ebx,eax
  4017a1:	lds    eax,FWORD PTR [edx+0x9]
  4017a4:	pusha  
  4017a5:	(bad)  
  4017a6:	in     al,dx
  4017a7:	stos   BYTE PTR es:[edi],al
  4017a8:	pop    ds
  4017a9:	add    eax,0x5ead1b54
  4017ae:	retf   
  4017af:	jb     0x4017fe
  4017b1:	outs   dx,BYTE PTR ds:[esi]
  4017b2:	aas    
  4017b3:	ret    0x3d15
  4017b6:	push   ebx
  4017b7:	pop    esp
  4017b8:	enter  0xd8f8,0x86
  4017bc:	ins    DWORD PTR es:[edi],dx
  4017bd:	push   ebp
  4017be:	mov    bh,BYTE PTR [ecx+0x68]
  4017c1:	pop    eax
  4017c2:	cmp    esp,DWORD PTR [ebx]
  4017c4:	out    dx,al
  4017c5:	retf   0xe351
  4017c8:	shr    BYTE PTR [ebp+edx*4-0x15fa9f3c],1
  4017cf:	stc    
  4017d0:	shl    BYTE PTR [esi],1
  4017d2:	enter  0x3f2c,0xd3
  4017d6:	lea    ebp,[ebx-0x52]
  4017d9:	jns    0x4017b2
  4017db:	cmp    BYTE PTR [esp+ebx*8-0x27257a9e],0x39
  4017e3:	xor    al,0x10
  4017e5:	rcr    DWORD PTR [esi+eax*2],1
  4017e8:	sbb    BYTE PTR [ecx+0x2c],dl
  4017eb:	cld    
  4017ec:	arpl   WORD PTR [ebx-0x21ae091c],sp
  4017f2:	rcl    ecx,0xc7
  4017f5:	mov    ds:0x8db0e414,eax
  4017fa:	dec    edx
  4017fb:	push   DWORD PTR [ebx+0x47]
  4017fe:	or     eax,0xe3b20326
  401803:	xchg   edi,eax
  401804:	mov    dh,0x2f
  401806:	dec    edi
  401807:	mov    ebp,0xc5b0cf9b
  40180c:	pop    esp
  40180d:	jmp    FWORD PTR [ecx-0x50]
  401810:	xor    ebx,esi
  401812:	in     al,dx
  401813:	and    ah,BYTE PTR [ebx-0x6eb3e1fc]
  401819:	mov    ebp,0x5110f77c
  40181e:	xor    al,0x92
  401820:	push   eax
  401821:	(bad)  
  401822:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401823:	scas   eax,DWORD PTR es:[edi]
  401824:	in     al,0xf6
  401826:	cmp    BYTE PTR [edx+0x3d],ch
  401829:	pop    edx
  40182a:	out    dx,al
  40182b:	bnd ja 0x4017b9
  40182e:	inc    BYTE PTR [eax-0x75596b07]
  401834:	div    esi
  401836:	gs xchg ah,dh
  401839:	adc    DWORD PTR [edi+0x6f],ebp
  40183c:	push   0xffffffed
  40183e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40183f:	and    esp,ebp
  401841:	fisttp DWORD PTR [edx-0x39]
  401844:	neg    BYTE PTR [esp+edi*8-0x7bf7952d]
  40184b:	imul   edx,esi,0x95f9c136
  401851:	mov    dl,BYTE PTR [ecx+0x2a]
  401854:	xor    cl,BYTE PTR [edx-0xc]
  401857:	cmp    BYTE PTR [ecx+ebp*1+0x52],ah
  40185b:	sti    
  40185c:	mov    bl,0xca
  40185e:	lds    edi,FWORD PTR [ebp+0x508ebdef]
  401864:	test   DWORD PTR [ebp+0x38dd9cee],edi
  40186a:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40186c:	inc    ebp
  40186d:	mov    ecx,DWORD PTR [edi+edi*4]
  401870:	sbb    edi,ebp
  401872:	mov    ebx,0x49901a11
  401877:	dec    ebx
  401878:	daa    
  401879:	pop    edi
  40187a:	je     0x4018c6
  40187c:	mov    ebx,0xea337ada
  401881:	add    eax,0xebfc5719
  401886:	stos   BYTE PTR es:[edi],al
  401887:	jmp    0x401846
  401889:	dec    esi
  40188a:	xlat   BYTE PTR ds:[ebx]
  40188b:	xchg   ecx,eax
  40188c:	and    dl,BYTE PTR [ebx]
  40188e:	pop    edi
  40188f:	lods   al,BYTE PTR ds:[esi]
  401890:	mov    dh,0x2a
  401892:	adc    ebx,edi
  401894:	inc    esp
  401895:	mov    BYTE PTR [esi+0x7110bb44],0x73
  40189c:	mov    ch,0xb0
  40189e:	pusha  
  40189f:	sbb    al,0xf4
  4018a1:	pop    eax
  4018a2:	add    al,0xf3
  4018a4:	sub    DWORD PTR [ebp+0x76df540e],0xffffffb3
  4018ab:	push   esi
  4018ac:	mov    es,WORD PTR [ebx]
  4018ae:	jmp    0xe73e:0xe0718a0d
  4018b5:	mov    bl,0xa1
  4018b7:	fstp   DWORD PTR [ecx-0x28]
  4018ba:	inc    edi
  4018bb:	das    
  4018bc:	inc    eax
  4018bd:	gs lock aaa 
  4018c0:	cli    
  4018c1:	add    BYTE PTR [ecx+0x4b],bh
  4018c4:	mov    ecx,0xdada15f4
  4018c9:	sub    ebx,ebx
  4018cb:	cmp    eax,0x5f72a184
  4018d0:	pop    ss
  4018d1:	out    0x91,al
  4018d3:	nop
  4018d4:	or     edx,DWORD PTR [eax]
  4018d6:	(bad)  [eax-0x2d8157d3]
  4018dc:	mov    al,ds:0x8a67b3c8
  4018e1:	xchg   ecx,eax
  4018e2:	add    edi,DWORD PTR [edx]
  4018e4:	inc    esi
  4018e5:	out    dx,eax
  4018e6:	leave  
  4018e7:	iret   
  4018e8:	ss xor eax,0x89aee755
  4018ee:	sub    dl,BYTE PTR [edi]
  4018f0:	xor    eax,0xeb4ad039
  4018f5:	lods   eax,DWORD PTR ds:[esi]
  4018f6:	les    edx,FWORD PTR cs:0xab6b2d38
  4018fd:	sub    DWORD PTR [edi+0x4d0ca9ce],esi
  401903:	add    al,0xdd
  401905:	add    eax,ecx
  401907:	or     al,0xa1
  401909:	push   esi
  40190a:	sti    
  40190b:	fmul   DWORD PTR [edx+eiz*8+0x3a]
  40190f:	add    BYTE PTR [ebp+0x5],0xfb
  401913:	add    ebx,DWORD PTR [edx-0x51f105b6]
  401919:	pushf  
  40191a:	aas    
  40191b:	push   ebp
  40191c:	xchg   esi,eax
  40191d:	jg     0x4018eb
  40191f:	sub    ebx,esi
  401921:	stos   BYTE PTR es:[edi],al
  401922:	ret    0x2fad
  401925:	js     0x4018da
  401927:	mov    dl,0x88
  401929:	pusha  
  40192a:	or     eax,0x7b579916
  40192f:	push   edi
  401930:	xchg   edx,eax
  401931:	xor    esp,DWORD PTR [edx]
  401933:	inc    ebx
  401934:	lock call 0xcf66:0xd351a64b
  40193c:	es or  al,0x12
  40193f:	popa   
  401940:	jl     0x40196a
  401942:	pop    ecx
  401943:	inc    ebx
  401944:	ret    0xcc6b
  401947:	inc    eax
  401948:	cli    
  401949:	popf   
  40194a:	rcr    BYTE PTR [ebp+0x7b],1
  40194d:	adc    bl,BYTE PTR ds:0x7022ea87
  401953:	mov    dl,0x40
  401955:	xchg   edx,eax
  401956:	sub    bh,BYTE PTR [edx+0x75b6067]
  40195c:	test   eax,0x32ccfec
  401961:	call   FWORD PTR [ebx]
  401963:	xchg   edx,esi
  401965:	stos   DWORD PTR es:[edi],eax
  401966:	imul   edx,DWORD PTR [edi],0x5
  401969:	mov    cl,0x8c
  40196b:	fimul  WORD PTR [eax-0x43]
  40196e:	in     al,0x5b
  401970:	retf   
  401971:	(bad)  
  401972:	inc    edx
  401973:	sub    ch,BYTE PTR [ecx-0x4b0e8009]
  401979:	jge    0x4019f3
  40197b:	or     ch,BYTE PTR [ebx]
  40197d:	pminub mm1,mm1
  401980:	or     dh,BYTE PTR [ebx]
  401982:	sub    DWORD PTR [ebx],ebx
  401984:	imul   ecx,DWORD PTR [ebx],0x859da82
  40198a:	or     al,0xea
  40198c:	adc    al,0xd
  40198e:	enter  0x2603,0xdb
  401992:	jmp    0x40199f
  401994:	add    esi,DWORD PTR [eax+0x4e]
  401997:	jbe    0x401942
  401999:	push   esp
  40199a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40199b:	fidiv  WORD PTR [edx+ebx*8+0x37217dd0]
  4019a2:	dec    ecx
  4019a3:	push   0xd890a263
  4019a8:	pushf  
  4019a9:	pop    ebx
  4019aa:	mov    ch,0x5
  4019ac:	adc    al,0x75
  4019ae:	sti    
  4019af:	(bad)  
  4019b0:	jno    0x9ea07e96
  4019b6:	jae    0x4019c6
  4019b8:	popf   
  4019b9:	or     al,0xde
  4019bb:	addr16 add al,0x4b
  4019be:	adc    al,0x3d
  4019c0:	mov    esi,DWORD PTR [ebx+0x5c2a6990]
  4019c6:	daa    
  4019c7:	jmp    0x30f150e6
  4019cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4019cd:	aaa    
  4019ce:	mov    ecx,esi
  4019d0:	inc    esi
  4019d1:	pop    ebp
  4019d2:	cdq    
  4019d3:	or     ebx,DWORD PTR [ebx-0x2513d6e5]
  4019d9:	js     0x401987
  4019db:	sbb    eax,0x5e351df1
  4019e0:	cmp    al,0xc1
  4019e2:	rcr    dh,0x86
  4019e5:	fist   WORD PTR [ebx-0x54]
  4019e8:	or     dh,ah
  4019ea:	je     0xa0ad39d1
  4019f0:	ds adc ecx,edx
  4019f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4019f4:	(bad)  
  4019f5:	xor    dh,BYTE PTR cs:[edx]
  4019f8:	mov    BYTE PTR [esp+ecx*1+0x767687f9],dh
  4019ff:	and    esi,DWORD PTR [edx-0x3121b150]
  401a05:	mov    ebp,0x640081bb
  401a0a:	popa   
  401a0b:	rcr    BYTE PTR [ebp-0x5c],1
  401a0e:	or     edi,DWORD PTR [eax]
  401a10:	repnz out 0x6,al
  401a13:	sub    bh,0x6e
  401a16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a18:	inc    ebx
  401a19:	fdivr  st(6),st
  401a1b:	out    dx,al
  401a1c:	mov    esp,0xfc8a3751
  401a21:	test   al,0x71
  401a23:	rcl    esp,1
  401a25:	lock dec ebx
  401a27:	or     ch,BYTE PTR [ebp+0x580ee500]
  401a2d:	ins    BYTE PTR es:[edi],dx
  401a2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a2f:	dec    edx
  401a30:	pop    edx
  401a31:	or     dh,bh
  401a33:	cmp    esp,DWORD PTR [eax]
  401a35:	pop    ebx
  401a36:	enter  0x531a,0x25
  401a3a:	pop    ss
  401a3b:	and    ah,bl
  401a3d:	outs   dx,DWORD PTR ds:[esi]
  401a3e:	push   es
  401a3f:	cwde   
  401a40:	or     DWORD PTR [ebp-0xe],ecx
  401a43:	push   edx
  401a44:	xor    eax,0xc1847191
  401a49:	in     eax,dx
  401a4a:	lods   eax,DWORD PTR ds:[esi]
  401a4b:	and    eax,esi
  401a4d:	rcl    BYTE PTR [edi+0x1750bd26],0x59
  401a54:	retfw  
  401a56:	mov    ds:0xbdea0ad6,al
  401a5b:	arpl   WORD PTR [ebx+0x67],bp
  401a5e:	pop    esi
  401a5f:	loop   0x401a07
  401a61:	add    edx,DWORD PTR [edi+0x16]
  401a64:	xor    edx,ecx
  401a66:	sahf   
  401a67:	rcr    DWORD PTR [ecx+edi*1+0x400dfbd5],1
  401a6e:	dec    ebx
  401a6f:	push   esi
  401a70:	jb     0x4019fb
  401a72:	mov    al,ds:0x79f42d50
  401a77:	jne    0x401aa2
  401a79:	or     edi,DWORD PTR [ebx+0x37a9e570]
  401a7f:	das    
  401a80:	bnd jg 0x401ace
  401a83:	sbb    eax,0x3280892b
  401a88:	xor    bh,cl
  401a8a:	sub    esi,DWORD PTR [esi]
  401a8c:	addr16 pop eax
  401a8e:	retf   
  401a8f:	inc    ebp
  401a90:	inc    esp
  401a91:	mov    ds:0xe92724a1,eax
  401a96:	test   al,0xa4
  401a98:	scas   ax,WORD PTR es:[edi]
  401a9a:	in     eax,0xa8
  401a9c:	sub    ch,BYTE PTR [ebp-0x57]
  401a9f:	inc    edx
  401aa0:	inc    esi
  401aa1:	xor    eax,0x23296cbd
  401aa6:	dec    ebx
  401aa7:	sub    eax,0x2788ef7e
  401aac:	bound  eax,QWORD PTR [edx-0x78]
  401aaf:	cld    
  401ab0:	add    DWORD PTR [edi-0x23141e31],ecx
  401ab6:	sbb    dh,BYTE PTR [edi-0x10]
  401ab9:	add    ebx,DWORD PTR [esi+0x4e0a512f]
  401abf:	aaa    
  401ac0:	xor    DWORD PTR [ebx+0x0],0x7f
  401ac4:	xor    ebp,esp
  401ac6:	div    BYTE PTR [esp+esi*1-0x48]
  401aca:	out    dx,al
  401acb:	jl     0x401b09
  401acd:	jle    0x401abf
  401acf:	cwde   
  401ad0:	mov    ecx,0x92270ba8
  401ad5:	cld    
  401ad6:	test   ebx,esi
  401ad8:	and    BYTE PTR [ebx+0x4c90de55],dl
  401ade:	mov    al,ds:0xc66c20da
  401ae3:	push   cs
  401ae4:	push   esp
  401ae5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ae6:	shl    BYTE PTR [ecx+0x48fdb41a],0x6b
  401aed:	outs   dx,BYTE PTR ds:[esi]
  401aee:	pop    ss
  401aef:	or     eax,0x86422f36
  401af4:	dec    ecx
  401af5:	cld    
  401af6:	pushf  
  401af7:	icebp  
  401af8:	in     eax,0x7f
  401afa:	std    
  401afb:	out    0xaa,eax
  401afd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401afe:	adc    DWORD PTR [ebx+0x28],edi
  401b01:	fisub  DWORD PTR [edi-0x2ba3f63e]
  401b07:	and    al,0xcb
  401b09:	test   eax,0x40da5cc7
  401b0e:	inc    eax
  401b0f:	iret   
  401b10:	cmp    edi,DWORD PTR [ebx]
  401b12:	loope  0x401b44
  401b14:	pop    ds
  401b15:	mov    ch,0xf0
  401b17:	jnp    0x401aac
  401b19:	pop    eax
  401b1a:	(bad)  
  401b1b:	jmp    0xb0341eac
  401b20:	sahf   
  401b21:	je     0x401b54
  401b23:	lea    esp,[ebx+0x7b60442f]
  401b29:	mov    al,ds:0x6bf6b08b
  401b2e:	popf   
  401b2f:	data16 mov al,ds:0xfce15f81
  401b35:	xchg   DWORD PTR [ecx],ebx
  401b37:	scas   eax,DWORD PTR es:[edi]
  401b38:	std    
  401b39:	pop    es
  401b3a:	jbe    0x401add
  401b3c:	(bad)  
  401b3d:	jg     0x401b41
  401b3f:	mov    dh,0x41
  401b41:	out    0x8b,eax
  401b43:	cdq    
  401b44:	xor    BYTE PTR [edx],cl
  401b46:	xor    BYTE PTR [eax+ebp*2],bh
  401b49:	push   0xe01b5eee
  401b4e:	sub    edi,esi
  401b50:	repnz fstp QWORD PTR [esi+0x5094be62]
  401b57:	push   ebx
  401b58:	(bad)  
  401b59:	daa    
  401b5a:	sahf   
  401b5b:	mov    DWORD PTR [ebx],0x1eaf9c5b
  401b61:	nop
  401b62:	out    dx,al
  401b63:	sahf   
  401b64:	and    edx,edx
  401b66:	addr16 xchg ebx,eax
  401b68:	inc    esi
  401b69:	fwait
  401b6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b6b:	fldl2t 
  401b6d:	xchg   ecx,eax
  401b6e:	iret   
  401b6f:	jmp    0x14fff3a5
  401b74:	fnstenv [esp+eax*8]
  401b77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b78:	add    al,0x4e
  401b7a:	xor    BYTE PTR [esi-0x6e],ah
  401b7d:	jmp    0xc1e4:0xdf1691ea
  401b84:	cmp    DWORD PTR [ebp-0x1fcd9805],0x3b
  401b8b:	add    ecx,edi
  401b8d:	jae    0x401b7a
  401b8f:	shl    edi,0xe6
  401b92:	inc    esi
  401b93:	in     al,dx
  401b94:	aas    
  401b95:	inc    edi
  401b96:	jl     0x401b4a
  401b98:	push   edx
  401b99:	(bad)  
  401b9a:	push   esp
  401b9b:	dec    edi
  401b9c:	cdq    
  401b9d:	and    BYTE PTR [edi-0x2],0x60
  401ba1:	in     al,dx
  401ba2:	int    0xb3
  401ba4:	pop    ss
  401ba5:	cwde   
  401ba6:	cld    
  401ba7:	and    eax,0x70158d92
  401bac:	or     dh,dl
  401bae:	stc    
  401baf:	push   0xa909a3b8
  401bb4:	pop    ecx
  401bb5:	leave  
  401bb6:	mov    bl,0x2f
  401bb8:	mov    BYTE PTR [edi-0x1d1ad777],bl
  401bbe:	xchg   esp,eax
  401bbf:	in     eax,0x22
  401bc1:	push   edx
  401bc2:	data16 xchg BYTE PTR [ebx-0x47843d1d],al
  401bc9:	mov    WORD PTR [ecx],cs
  401bcb:	xchg   ecx,eax
  401bcc:	jbe    0x401b99
  401bce:	pop    es
  401bcf:	mov    edx,0xf6b03dd8
  401bd4:	pop    edi
  401bd5:	xor    eax,0xd22251d8
  401bda:	test   al,0x60
  401bdc:	xchg   ecx,eax
  401bdd:	mov    esi,0xa48fc904
  401be2:	mov    ebp,ebx
  401be4:	push   esp
  401be5:	jmp    0x4990:0xb60a900f
  401bec:	and    eax,0x3cd69505
  401bf1:	mov    BYTE PTR [ebx],bl
  401bf3:	mov    ah,0x5f
  401bf5:	call   FWORD PTR [ebx+0x0]
  401bf8:	je     0x401bd7
  401bfa:	iret   
  401bfb:	je     0x401c65
  401bfd:	push   ebp
  401bfe:	pop    es
  401bff:	push   eax
  401c00:	stos   DWORD PTR es:[edi],eax
  401c01:	clc    
  401c02:	into   
  401c03:	pop    edi
  401c04:	jge    0x401c72
  401c06:	in     eax,0x42
  401c08:	jmp    0x755c0bb1
  401c0d:	or     BYTE PTR [eax-0x11],bh
  401c10:	fisubr DWORD PTR ds:0xb8be40e4
  401c16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c17:	shld   DWORD PTR [edx-0x13a4a5c0],ecx,0x21
  401c1f:	sbb    DWORD PTR [edi+edi*8+0x799cd2a9],esp
  401c26:	leave  
  401c27:	mov    BYTE PTR [eax-0x749e8496],dh
  401c2d:	sbb    al,0xe0
  401c2f:	movsx  eax,WORD PTR [ebp+eiz*2+0x52]
  401c34:	imul   ebx,DWORD PTR [edx],0x204ee74a
  401c3a:	add    eax,0x6b42318b
  401c3f:	out    dx,eax
  401c40:	mov    ebx,0x785e0e4c
  401c45:	dec    ebp
  401c46:	cmp    al,BYTE PTR [esi-0x10]
  401c49:	fldcw  WORD PTR [esi+ecx*2-0x6a8eb583]
  401c50:	push   esp
  401c51:	je     0x401c5d
  401c53:	sbb    al,0x22
  401c55:	mov    edx,0x94228917
  401c5a:	cld    
  401c5b:	mov    ch,0xb
  401c5d:	adc    esp,DWORD PTR [esi]
  401c5f:	adc    ecx,DWORD PTR ds:0x86c5ed25
  401c65:	test   eax,0x3e5c0cda
  401c6a:	and    BYTE PTR [ecx+0x79df2496],0x9b
  401c71:	sub    BYTE PTR [eax],0x3e
  401c74:	in     al,0x23
  401c76:	adc    DWORD PTR [ecx+0x4c5f3ab5],0xffffffbe
  401c7d:	mov    ds:0xcd28771f,eax
  401c83:	jge    0x401cab
  401c85:	pushf  
  401c86:	(bad)  
  401c88:	iret   
  401c89:	jmp    0xf80dd8aa
  401c8e:	jmp    0x896e:0xe38baa5e
  401c95:	aas    
  401c96:	xchg   edi,eax
  401c97:	or     BYTE PTR [ebp-0x1a],bl
  401c9a:	mov    BYTE PTR [ebx],al
  401c9c:	dec    esp
  401c9d:	xlat   BYTE PTR ds:[ebx]
  401c9e:	jmp    0xe21e63a0
  401ca3:	and    DWORD PTR [ecx-0x6a9b87ee],eax
  401ca9:	mov    dh,0xee
  401cab:	(bad)  
  401cac:	mov    bl,0xed
  401cae:	sti    
  401caf:	in     al,dx
  401cb0:	mov    DWORD PTR [edi],ecx
  401cb2:	outs   dx,BYTE PTR es:[esi]
  401cb4:	mov    edx,cs
  401cb6:	outs   dx,DWORD PTR ds:[esi]
  401cb7:	arpl   di,bx
  401cb9:	daa    
  401cba:	repz stc 
  401cbc:	mov    DWORD PTR [edx],edx
  401cbe:	inc    edi
  401cbf:	mov    dl,0x11
  401cc1:	fs ja  0x401c4c
  401cc4:	test   eax,0x8f20fccf
  401cc9:	jb     0x401c9a
  401ccb:	retf   0x64fd
  401cce:	enter  0x4cbe,0xa6
  401cd2:	hlt    
  401cd3:	sub    eax,0x690bab76
  401cd8:	loop   0x401cef
  401cda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401cdb:	and    al,BYTE PTR [eax]
  401cdd:	push   esi
  401cde:	ss ds bnd ret 0x3a1b
  401ce4:	pop    esi
  401ce5:	test   esi,ebp
  401ce7:	call   0xd292:0xb3927bba
  401cee:	test   eax,0xe60fc1d8
  401cf3:	pop    ebx
  401cf4:	adc    BYTE PTR [edi],dh
  401cf6:	push   eax
  401cf7:	fisub  DWORD PTR [ecx-0x22da7d90]
  401cfd:	add    eax,DWORD PTR [edx-0x16]
  401d00:	mov    bl,0x2d
  401d02:	mov    ds:0x99954429,eax
  401d07:	cdq    
  401d08:	test   dh,al
  401d0a:	pop    es
  401d0b:	inc    esi
  401d0c:	sub    dh,BYTE PTR [ebp+0x362a3aa4]
  401d12:	jns    0x401caa
  401d14:	imul   ebx,DWORD PTR [ebp+0x31],0x6b625796
  401d1b:	cld    
  401d1c:	adc    al,BYTE PTR ss:[esi+0x1d6476bb]
  401d23:	shl    ecx,1
  401d25:	es cdq 
  401d27:	jo     0x401cb4
  401d29:	add    DWORD PTR [esi],esi
  401d2b:	imul   esi,DWORD PTR [eiz*4+0x36ed99a8],0x407601e6
  401d36:	fst    DWORD PTR [edx+ebx*1+0x352c1a32]
  401d3d:	(bad)  
  401d3e:	jb     0x401d5d
  401d40:	aaa    
  401d41:	mov    esi,0xbfedf106
  401d46:	xor    dl,BYTE PTR [edi-0x6a]
  401d49:	arpl   WORD PTR [ebx+ebx*1-0x20],si
  401d4d:	fild   WORD PTR [esi+0x2f]
  401d50:	stc    
  401d51:	pop    ecx
  401d52:	xchg   esp,eax
  401d53:	push   edx
  401d54:	ret    0x3e49
  401d57:	les    eax,FWORD PTR [ecx-0x682b9178]
  401d5d:	pop    edx
  401d5e:	outs   dx,BYTE PTR ds:[esi]
  401d5f:	push   ebp
  401d60:	pop    eax
  401d61:	test   al,0x69
  401d63:	lds    ebx,FWORD PTR [edx-0x15]
  401d66:	and    BYTE PTR [eax],cl
  401d68:	fisttp DWORD PTR [ebp-0x51356abb]
  401d6e:	ss out dx,al
  401d70:	outs   dx,BYTE PTR ds:[esi]
  401d71:	sbb    ebp,DWORD PTR [eax+0xc4651]
  401d77:	rcl    BYTE PTR [edx-0x4a829fa3],1
  401d7d:	mov    eax,ds:0x40d9010d
  401d82:	adc    DWORD PTR [edi-0x4cbd379e],0xfffffff2
  401d89:	clc    
  401d8a:	xor    edx,eax
  401d8c:	retf   
  401d8d:	imul   edi,DWORD PTR [esp+eax*8+0x52],0xffffffa9
  401d92:	pop    ds
  401d93:	les    edi,FWORD PTR [edi]
  401d95:	sbb    BYTE PTR [eax+eiz*8+0x47f3e1f0],bl
  401d9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d9d:	sbb    BYTE PTR [edx+0x35],al
  401da0:	inc    edi
  401da1:	inc    esi
  401da2:	or     BYTE PTR [edi-0x6e],bh
  401da5:	or     al,0x9
  401da7:	push   esp
  401da8:	inc    eax
  401da9:	or     cl,BYTE PTR [ecx-0x4c4b3456]
  401daf:	inc    ebp
  401db0:	test   eax,0x952f6748
  401db5:	and    ecx,DWORD PTR [ecx+esi*4+0x45d8af27]
  401dbc:	test   eax,0xc3dba61e
  401dc1:	mov    ebx,0x73946ff7
  401dc6:	sub    ecx,DWORD PTR [esi-0x243c2ac1]
  401dcc:	ins    BYTE PTR es:[edi],dx
  401dcd:	sub    dl,dl
  401dcf:	retf   
  401dd0:	cli    
  401dd1:	scas   eax,DWORD PTR es:[edi]
  401dd2:	sbb    eax,0xa94225e5
  401dd7:	mov    bl,0x37
  401dd9:	bound  eax,QWORD PTR [eax]
  401ddb:	xor    cl,BYTE PTR [eax-0x35eef96a]
  401de1:	pusha  
  401de2:	scas   al,BYTE PTR es:[edi]
  401de3:	addr16 adc eax,0x36c5b97c
  401de9:	dec    ebp
  401dea:	jp     0x401d8d
  401dec:	add    ebp,edi
  401dee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401def:	xor    dh,0x6b
  401df2:	aas    
  401df3:	push   eax
  401df4:	das    
  401df5:	and    al,0xef
  401df7:	data16 sbb dl,bl
  401dfa:	pop    edi
  401dfb:	jo     0x401e4f
  401dfd:	ja     0x401daa
  401dff:	push   esp
  401e00:	jp     0x401e64
  401e02:	adc    eax,0x17f8770f
  401e07:	retf   
  401e08:	stc    
  401e09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e0a:	mov    WORD PTR [edi],gs
  401e0c:	cwde   
  401e0d:	cdq    
  401e0e:	add    eax,DWORD PTR ds:0x18dabf1e
  401e14:	dec    ecx
  401e15:	mov    dl,0xf3
  401e17:	leave  
  401e18:	sub    esi,ecx
  401e1a:	push   ebx
  401e1b:	push   esi
  401e1c:	leave  
  401e1d:	(bad)  
  401e1e:	ins    DWORD PTR es:[edi],dx
  401e1f:	cmp    eax,DWORD PTR [esi+0x61b9662f]
  401e25:	sbb    al,BYTE PTR [edx-0x56]
  401e28:	bswap  edx
  401e2a:	xchg   esp,eax
  401e2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e2c:	cmp    ah,BYTE PTR [esi]
  401e2e:	inc    edx
  401e2f:	ret    
  401e30:	pop    ecx
  401e31:	sbb    eax,0x78edc32c
  401e36:	cmc    
  401e37:	add    al,BYTE PTR [edx-0xb]
  401e3a:	jle    0x401e81
  401e3c:	jecxz  0x401e5a
  401e3e:	pop    ecx
  401e3f:	bound  eax,QWORD PTR [ebp-0x59b4c005]
  401e45:	and    eax,0x9aca370c
  401e4a:	adc    ebp,DWORD PTR [eax-0x43]
  401e4d:	mov    dl,0xab
  401e4f:	pushf  
  401e50:	or     ebx,DWORD PTR [ebp+0x4fab26a]
  401e56:	push   ebp
  401e57:	scas   al,BYTE PTR es:[edi]
  401e58:	je     0x401e28
  401e5a:	aaa    
  401e5b:	test   DWORD PTR [ebx-0x1d1f0aeb],ebp
  401e61:	xchg   ecx,eax
  401e62:	sbb    eax,0xf45b9184
  401e67:	adc    esi,edi
  401e69:	ret    
  401e6a:	push   esp
  401e6b:	call   0x315457e2
  401e70:	outs   dx,DWORD PTR ds:[esi]
  401e71:	sbb    ebx,0x1ef34646
  401e77:	or     DWORD PTR [ecx+0x3d],esi
  401e7a:	addr16 out dx,al
  401e7c:	sub    eax,0xec751122
  401e81:	(bad)  
  401e83:	or     DWORD PTR [edx],0xffffffb7
  401e86:	or     ebp,eax
  401e88:	jge    0x401e7c
  401e8a:	test   BYTE PTR [ebx],dh
  401e8c:	mov    bl,0x69
  401e8e:	fiadd  WORD PTR [ebp+0x48fea2f3]
  401e94:	jg     0x401e79
  401e96:	inc    ebx
  401e97:	xlat   BYTE PTR ds:[ebx]
  401e98:	jne    0x401eb1
  401e9a:	stos   DWORD PTR es:[edi],eax
  401e9b:	inc    edi
  401e9c:	or     DWORD PTR [ecx-0x7e2f0cf1],esi
  401ea2:	popf   
  401ea3:	js     0x401ee1
  401ea5:	dec    eax
  401ea6:	xlat   BYTE PTR ds:[ebx]
  401ea7:	mov    ebp,0xbb16d1bc
  401eac:	retf   0x7eb7
  401eaf:	or     dl,cl
  401eb1:	stc    
  401eb2:	pop    ss
  401eb3:	add    eax,0x87fc81a7
  401eb8:	xchg   edi,eax
  401eb9:	popf   
  401eba:	ror    BYTE PTR [ecx+0x640cd959],1
  401ec0:	or     BYTE PTR [ebx],dl
  401ec2:	arpl   WORD PTR ds:0xd2e4352e,bx
  401ec8:	mov    ds,edi
  401eca:	mov    ecx,0x5e1481be
  401ecf:	jns    0x401eff
  401ed1:	in     al,0xd9
  401ed3:	adc    edi,DWORD PTR [edx+ebx*4-0x53e5f5b1]
  401eda:	test   DWORD PTR [ebp+ecx*1+0x6ab08a33],ebp
  401ee1:	ret    0x9d1b
  401ee4:	cmc    
  401ee5:	and    al,0xb
  401ee7:	(bad)  
  401ee8:	ss jae 0x401f5c
  401eeb:	add    DWORD PTR [edi+0x6bc5e8e9],esi
  401ef1:	push   edx
  401ef2:	jmp    0xc711a6e7
  401ef7:	out    dx,al
  401ef8:	inc    eax
  401ef9:	jecxz  0x401f0b
  401efb:	inc    edx
  401efc:	test   cl,ch
  401efe:	out    dx,al
  401eff:	xchg   BYTE PTR [edx],al
  401f01:	js     0x401e86
  401f03:	pop    ebx
  401f04:	push   edx
  401f05:	pop    ds
  401f06:	jecxz  0x401ef2
  401f08:	mov    bh,0x5c
  401f0a:	inc    ecx
  401f0b:	outs   dx,DWORD PTR ds:[esi]
  401f0c:	icebp  
  401f0d:	int    0xab
  401f0f:	xlat   BYTE PTR ds:[ebx]
  401f10:	repz jnp 0x401f7f
  401f13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f14:	jle    0x401f88
  401f16:	ja     0x401f60
  401f18:	pop    ecx
  401f19:	cmp    ebx,DWORD PTR [ebx]
  401f1b:	sahf   
  401f1c:	mov    edx,0x7144c109
  401f21:	stc    
  401f22:	xchg   ebp,eax
  401f23:	dec    edx
  401f24:	adc    DWORD PTR [esi],eax
  401f26:	adc    cl,al
  401f28:	repnz add ecx,DWORD PTR [ebx+0x35c026a3]
  401f2f:	mov    ds:0xf0f29c07,eax
  401f34:	xchg   esi,eax
  401f35:	mov    dh,dh
  401f37:	outs   dx,BYTE PTR ds:[esi]
  401f38:	stc    
  401f39:	daa    
  401f3a:	jmp    0xd9d039d9
  401f3f:	add    DWORD PTR [eax+0x35],esp
  401f42:	dec    edx
  401f43:	int    0x8c
  401f45:	jb     0x401fbd
  401f47:	mov    al,0x8
  401f49:	enter  0x4d7e,0x1e
  401f4d:	xchg   ebx,eax
  401f4e:	fild   QWORD PTR [edi-0x5a]
  401f51:	fidivr WORD PTR [edx]
  401f53:	imul   BYTE PTR [ebp+0xcc92650]
  401f59:	hlt    
  401f5a:	ss clc 
  401f5c:	(bad)  [edi+eax*8]
  401f5f:	call   0x23978437
  401f64:	cmp    eax,0x329ce8ea
  401f69:	fiadd  DWORD PTR [edx]
  401f6b:	sub    BYTE PTR [esi-0x64],0xea
  401f6f:	add    ebp,DWORD PTR [ecx+0x7d34d9e0]
  401f75:	mov    bl,BYTE PTR [eax]
  401f77:	add    ebx,DWORD PTR [esi]
  401f79:	sub    esp,ecx
  401f7b:	fs jp  0x401fe7
  401f7e:	dec    al
  401f80:	mov    eax,ds:0x75c0fdac
  401f85:	pop    ss
  401f86:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  401f88:	or     ch,0x51
  401f8b:	mov    dl,0x31
  401f8d:	xor    ch,BYTE PTR [ecx-0x771cfc7b]
  401f93:	or     al,0x0
  401f95:	call   0x61254719
  401f9a:	sti    
  401f9b:	int    0x27
  401f9d:	pushf  
  401f9e:	push   edx
  401f9f:	repnz mov ah,BYTE PTR [ebp-0x7b]
  401fa3:	das    
  401fa4:	add    al,0xf
  401fa6:	stos   BYTE PTR es:[edi],al
  401fa7:	rcl    cl,0x36
  401faa:	xor    ch,BYTE PTR [ecx]
  401fac:	jmp    0x315e:0x41f746d5
  401fb3:	jle    0x40202c
  401fb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401fb6:	fdivr  DWORD PTR [ecx]
  401fb8:	test   eax,0x310378fe
  401fbd:	icebp  
  401fbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401fbf:	sbb    esi,esi
  401fc1:	pop    ds
  401fc2:	jp     0x402018
  401fc4:	cmp    BYTE PTR [eax-0xc819949],bh
  401fca:	xchg   esp,eax
  401fcb:	mov    ah,0xa7
  401fcd:	and    BYTE PTR [edi],dl
  401fcf:	gs in  al,dx
  401fd1:	scas   al,BYTE PTR es:[edi]
  401fd2:	cld    
  401fd3:	es push ebx
  401fd5:	dec    ecx
  401fd6:	loopne 0x401f6d
  401fd8:	cmp    DWORD PTR [edx-0x5f3cf08f],0x9
  401fdf:	outs   dx,BYTE PTR ds:[esi]
  401fe0:	sbb    DWORD PTR [edx],edx
  401fe2:	jmp    0x57991368
  401fe7:	imul   esp,DWORD PTR [ebx-0x590d23ea],0x6e20519d
  401ff1:	or     dl,BYTE PTR [ebx+ecx*4]
  401ff4:	fild   DWORD PTR [edx+eax*2-0xbab9d5]
  401ffb:	ror    BYTE PTR [edi-0xb1e66d7],1
  402001:	xlat   BYTE PTR ds:[ebx]
  402002:	aam    0x48
  402004:	sbb    BYTE PTR [ebx+0x5f],bh
  402007:	sar    BYTE PTR [ebx],cl
  402009:	pop    ecx
  40200a:	lea    ebp,[ebp+0x3d]
  40200d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40200e:	lahf   
  40200f:	out    dx,eax
  402010:	repnz or edx,DWORD PTR ds:0xae4c2ccd
  402017:	inc    eax
  402018:	mov    ecx,0xda6fa6ea
  40201d:	std    
  40201e:	mov    esi,0xbd9a7958
  402023:	pushf  
  402024:	mov    ebp,0xd9c3a245
  402029:	pop    esi
  40202a:	mov    ch,0xb8
  40202c:	or     al,0x84
  40202e:	xchg   eax,edx
  402030:	mov    ds:0xe113550a,eax
  402035:	inc    esi
  402036:	ret    0x208b
  402039:	fbld   TBYTE PTR [ebp+0x21b2a7ce]
  40203f:	push   edi
  402040:	xlat   BYTE PTR ds:[ebx]
  402041:	js     0x402054
  402043:	pop    eax
  402044:	cmp    eax,0xffead31
  402049:	dec    edx
  40204a:	jecxz  0x401fef
  40204c:	lods   eax,DWORD PTR ds:[esi]
  40204d:	and    bl,BYTE PTR [ecx]
  40204f:	jmp    0x46b004c9
  402054:	adc    bh,bh
  402056:	xchg   esp,eax
  402057:	jb     0x402041
  402059:	in     al,0xaf
  40205b:	mov    edi,0xd6afe4a5
  402060:	push   es
  402061:	or     eax,0x64a2a02b
  402066:	test   eax,0x908fe832
  40206b:	ja     0x4020c1
  40206d:	ja     0x402034
  40206f:	imul   edx,DWORD PTR [ebp-0x3d],0x7f02d002
  402076:	das    
  402077:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402078:	pop    esi
  402079:	inc    ebp
  40207a:	loope  0x4020c0
  40207c:	sbb    BYTE PTR [ebx+ebp*1-0x72eac62d],bh
  402083:	or     esi,edx
  402085:	cmp    edx,esp
  402087:	sar    BYTE PTR gs:[esi+ebp*4-0x35657aee],cl
  40208f:	or     al,0x67
  402091:	lock xor esi,DWORD PTR ds:0x24d7db86
  402098:	sbb    al,0xf9
  40209a:	scas   al,BYTE PTR es:[edi]
  40209b:	data16 xchg al,bh
  40209e:	inc    edi
  40209f:	aam    0x2f
  4020a1:	fiadd  WORD PTR [ecx+0x6d3500d4]
  4020a7:	sti    
  4020a8:	rol    BYTE PTR [eax],0x22
  4020ab:	inc    edi
  4020ac:	icebp  
  4020ad:	mov    al,0x4e
  4020af:	popf   
  4020b0:	ja     0x4020ae
  4020b2:	(bad)  
  4020b3:	mov    WORD PTR [ebx],fs
  4020b5:	dec    ecx
  4020b6:	ret    
  4020b7:	retf   
  4020b8:	test   al,0xf5
  4020ba:	and    DWORD PTR [edi],esi
  4020bc:	fldenv ds:0xf6ae2f40
  4020c2:	pop    ss
  4020c3:	mov    bl,0x55
  4020c5:	shr    BYTE PTR [ebp+0x72],1
  4020c8:	xlat   BYTE PTR ds:[ebx]
  4020c9:	addr16 sbb esp,edi
  4020cc:	pop    ecx
  4020cd:	add    eax,0x5d920bbf
  4020d2:	sub    BYTE PTR [esp+ecx*4-0x64],dh
  4020d6:	sub    DWORD PTR [eax-0x28c9d077],0x46
  4020dd:	mov    esi,0xa3a935b5
  4020e2:	jno    0x4020ed
  4020e4:	pop    ds
  4020e5:	jge    0x40208c
  4020e7:	mov    edi,0x8902785c
  4020ec:	sbb    DWORD PTR [edi+0x30a35386],eax
  4020f2:	push   ds
  4020f3:	test   DWORD PTR [ebx-0x33],ebx
  4020f6:	ror    BYTE PTR [ebx-0x6f73e914],0x71
  4020fd:	mov    bl,0x77
  402100:	mov    esi,0x90d438f6
  402105:	mov    bl,BYTE PTR [esi-0x37274e73]
  40210b:	and    ebp,DWORD PTR ds:0x6b80d6a7
  402111:	dec    edx
  402112:	sbb    dh,BYTE PTR [eax]
  402114:	xchg   edi,eax
  402115:	ficomp DWORD PTR [esi]
  402117:	pop    esi
  402118:	retf   
  402119:	sahf   
  40211a:	retf   
  40211b:	in     al,dx
  40211c:	jae    0x4020ea
  40211e:	(bad)  
  40211f:	aaa    
  402120:	and    esp,DWORD PTR [edi-0x3428dd18]
  402126:	push   esp
  402127:	cmp    DWORD PTR [eax+0x49f23529],0xffffffe1
  40212e:	inc    eax
  40212f:	or     bh,dh
  402131:	loopne 0x40219b
  402133:	cmp    DWORD PTR [edx+0x25],0x8366fcfe
  40213a:	adc    al,0xb2
  40213c:	cli    
  40213d:	mov    al,ds:0x540e58f0
  402142:	sbb    al,0x99
  402144:	out    dx,al
  402145:	aam    0xcf
  402147:	ret    0x5eb0
  40214a:	and    al,0xaa
  40214c:	in     eax,0x8
  40214e:	je     0x40216b
  402150:	(bad)  
  402151:	stos   DWORD PTR es:[edi],eax
  402152:	mov    ds:0xfc1229e2,eax
  402157:	push   esi
  402158:	jo     0x4020ef
  40215a:	int    0x6
  40215c:	jecxz  0x4021ab
  40215e:	sbb    cl,BYTE PTR [edi+ebx*1+0x3a60d240]
  402165:	adc    edi,esi
  402167:	daa    
  402168:	sbb    DWORD PTR [eax+0x2687e358],ecx
  40216e:	addr16 dec esi
  402170:	ds stos DWORD PTR es:[edi],eax
  402172:	rol    DWORD PTR [esi],cl
  402174:	in     al,dx
  402175:	dec    ebp
  402176:	sub    esp,DWORD PTR [ebp-0x4d]
  402179:	mov    al,ds:0x67e91e85
  40217e:	aaa    
  40217f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402180:	sti    
  402181:	adc    DWORD PTR [ebx+esi*8-0x14],edi
  402185:	out    0x98,eax
  402187:	fs push 0xfe5496dc
  40218d:	push   ds
  40218e:	dec    BYTE PTR [edi]
  402190:	into   
  402191:	stos   DWORD PTR es:[edi],eax
  402192:	dec    ecx
  402193:	push   ebp
  402194:	pushf  
  402195:	mov    ah,0xfa
  402197:	add    BYTE PTR ds:0x9f44db85,ah
  40219d:	icebp  
  40219e:	mov    ?,esi
  4021a0:	mov    ebp,DWORD PTR [edx+ecx*4+0x4641ca48]
  4021a7:	(bad)  
  4021a8:	ja     0x40217e
  4021aa:	xchg   ecx,eax
  4021ab:	adc    BYTE PTR [esi],bh
  4021ad:	sub    DWORD PTR [ebx+0x59],edi
  4021b0:	jbe    0x40214b
  4021b2:	call   0x6f829d60
  4021b7:	xchg   edi,eax
  4021b8:	push   ds
  4021b9:	(bad)  
  4021ba:	fptan  
  4021bc:	pop    es
  4021bd:	inc    edi
  4021be:	loop   0x4021c8
  4021c0:	sar    DWORD PTR [ebx-0x28da84a2],1
  4021c6:	lahf   
  4021c7:	(bad)  
  4021c8:	into   
  4021c9:	pushf  
  4021ca:	or     eax,0xf70dc0a5
  4021cf:	dec    eax
  4021d0:	jecxz  0x402204
  4021d2:	or     al,0xb2
  4021d4:	cdq    
  4021d5:	leave  
  4021d6:	dec    esp
  4021d7:	inc    ebp
  4021d8:	es cs dec ecx
  4021db:	fcomip st,st(2)
  4021dd:	test   al,0xf2
  4021df:	and    DWORD PTR [edi+0x69],0xffffffcf
  4021e3:	pop    ebp
  4021e4:	xchg   ebx,eax
  4021e5:	pushf  
  4021e6:	push   es
  4021e7:	mov    al,0x8d
  4021e9:	aad    0x3b
  4021eb:	and    DWORD PTR [eax+ecx*2-0x10],ebx
  4021ef:	sbb    al,BYTE PTR [ecx]
  4021f1:	test   eax,0x29d5a78b
  4021f6:	rcr    DWORD PTR [edx+0x21],0x44
  4021fa:	push   ecx
  4021fb:	test   al,0x56
  4021fd:	mov    ds:0x90a5821c,eax
  402202:	call   0xade:0x4d56ad8d
  402209:	xor    ecx,DWORD PTR [ebx+ecx*4]
  40220c:	add    eax,DWORD PTR [eax-0x6]
  40220f:	xchg   esi,eax
  402210:	outs   dx,DWORD PTR ds:[esi]
  402211:	mov    ch,0x4c
  402213:	std    
  402214:	mov    BYTE PTR [esi+0x50f43ed1],cl
  40221a:	sub    al,0x24
  40221c:	pop    edi
  40221d:	mov    al,0x11
  40221f:	pusha  
  402220:	and    eax,0xacaa9dc
  402225:	ret    0xad15
  402228:	in     eax,dx
  402229:	fimul  WORD PTR [eax]
  40222b:	mov    bh,0x21
  40222d:	xor    bh,BYTE PTR [eax-0x3e]
  402230:	pop    esi
  402231:	xor    eax,0x623a202a
  402236:	outs   dx,DWORD PTR ds:[esi]
  402237:	outs   dx,BYTE PTR ds:[esi]
  402238:	hlt    
  402239:	aad    0x24
  40223b:	test   DWORD PTR [ecx-0x6ae861a0],edi
  402241:	mov    bl,0x43
  402243:	mov    DWORD PTR [edi+edi*8-0x72],esi
  402247:	push   ds
  402248:	mov    ds:0x8f6413ad,eax
  40224d:	cwde   
  40224e:	test   DWORD PTR [ecx],edi
  402250:	enter  0xfc0d,0x96
  402254:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402255:	mov    dl,0x62
  402257:	sub    edx,DWORD PTR [edi+0x19c4db99]
  40225d:	fdivr  DWORD PTR [ecx]
  40225f:	sbb    BYTE PTR [ebp+0x7e39d46a],dh
  402265:	jl     0x4022c8
  402267:	fadd   st(1),st
  402269:	push   ecx
  40226a:	xchg   esp,eax
  40226b:	bound  ebx,QWORD PTR [ecx+0x17]
  40226e:	fwait
  40226f:	ret    0xbd09
  402272:	sbb    ch,dh
  402274:	adc    eax,0xf57591b5
  402279:	nop
  40227a:	stc    
  40227b:	bound  esp,QWORD PTR [ebp-0x13]
  40227e:	cmp    eax,DWORD PTR [edi-0x60e5d861]
  402284:	inc    ebp
  402285:	and    edi,DWORD PTR [ecx]
  402287:	fstp   DWORD PTR [edx+0x3223e3d8]
  40228d:	out    dx,al
  40228e:	loope  0x40227a
  402290:	dec    ecx
  402291:	sahf   
  402292:	(bad)  
  402293:	or     al,0x4f
  402295:	fiadd  WORD PTR [ecx]
  402297:	sub    BYTE PTR [ebp-0xad20f5b],dh
  40229d:	test   al,0xe6
  40229f:	popa   
  4022a0:	ins    DWORD PTR es:[edi],dx
  4022a1:	(bad)  
  4022a2:	cdq    
  4022a3:	rcl    BYTE PTR [eax],0x47
  4022a6:	sar    BYTE PTR [esp+eax*2+0x6],cl
  4022aa:	mov    esi,edx
  4022ac:	dec    esp
  4022ad:	sub    bh,BYTE PTR [ebx+0x7c]
  4022b0:	pusha  
  4022b1:	mov    bl,0x90
  4022b3:	or     BYTE PTR [eax+edi*8-0x22],cl
  4022b7:	in     eax,0x68
  4022b9:	icebp  
  4022ba:	xchg   al,ch
  4022bc:	loop   0x40225c
  4022be:	dec    ecx
  4022bf:	sbb    BYTE PTR [esi],0x2
  4022c2:	sub    DWORD PTR [esp+edi*8],ecx
  4022c5:	pop    DWORD PTR [ebx+0x14]
  4022c8:	sub    ecx,DWORD PTR [esi+0x7f24f766]
  4022ce:	call   0x170e:0x42f1263e
  4022d5:	daa    
  4022d6:	mov    edx,0xf0b6c9cb
  4022db:	cwde   
  4022dc:	or     DWORD PTR [ebx-0x42],eax
  4022df:	adc    dl,BYTE PTR [ebx-0xcfc0ec8]
  4022e5:	xchg   esi,eax
  4022e6:	in     al,0x7a
  4022e8:	mov    eax,0x496e4bc8
  4022ed:	pop    ss
  4022ee:	std    
  4022ef:	in     al,0xdb
  4022f1:	mov    al,ds:0xb835c99b
  4022f6:	stc    
  4022f7:	pop    eax
  4022f8:	lock xchg esi,eax
  4022fa:	inc    edi
  4022fb:	xchg   edx,eax
  4022fc:	dec    ebx
  4022fd:	jge    0x402295
  4022ff:	jp     0x4022e5
  402301:	int3   
  402302:	or     al,0xde
  402304:	retf   0xc4fd
  402307:	or     al,0xf7
  402309:	daa    
  40230a:	fcomp  DWORD PTR [esi]
  40230c:	cld    
  40230d:	add    ebp,DWORD PTR [ebx+ebp*2-0x54e6144a]
  402314:	les    eax,FWORD PTR [ecx]
  402316:	loop   0x40235f
  402318:	add    ch,bl
  40231a:	xchg   esp,eax
  40231b:	and    BYTE PTR [esp+eax*8],dh
  40231e:	stos   DWORD PTR es:[edi],eax
  40231f:	jns    0x402351
  402321:	(bad)  
  402323:	(bad)  
  402325:	aam    0x3a
  402327:	sbb    ch,BYTE PTR [edx-0x69052b78]
  40232d:	mov    esp,DWORD PTR [edx-0x2d10a68e]
  402333:	fs (bad) 
  402335:	push   0xc9f089e9
  40233a:	shl    BYTE PTR [edi],cl
  40233c:	pushaw 
  40233e:	retf   
  40233f:	ins    DWORD PTR es:[edi],dx
  402340:	push   ebp
  402341:	jnp    0x40236f
  402343:	sets   ah
  402346:	mov    edx,0xb540d204
  40234b:	(bad)  
  40234c:	sbb    BYTE PTR [edx+esi*8],bl
  40234f:	xchg   ebp,eax
  402350:	or     eax,0xdd5a88
  402355:	mov    ds:0x1c7c0ef2,al
  40235a:	mov    dh,0xbb
  40235c:	pop    edx
  40235d:	nop
  40235e:	dec    ebx
  40235f:	call   0x6225:0xb411e845
  402366:	das    
  402367:	pop    es
  402368:	outs   dx,BYTE PTR ds:[esi]
  402369:	outs   dx,DWORD PTR ds:[esi]
  40236a:	adc    ch,cl
  40236c:	mov    ecx,0xf5f899f0
  402371:	mov    esp,0x520d756
  402376:	repnz mov edx,0x5f5241dd
  40237c:	(bad)  
  40237d:	into   
  40237e:	jp     0x402309
  402380:	je     0x4023b3
  402382:	into   
  402383:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402384:	xchg   edx,eax
  402385:	ss imul ebp,eax,0x7e267918
  40238c:	daa    
  40238d:	push   ds
  40238e:	loop   0x402326
  402390:	pop    esi
  402391:	ret    
  402392:	inc    esp
  402393:	test   eax,0x2274e6bb
  402398:	or     ah,BYTE PTR [ebx-0x7fb40305]
  40239e:	mov    esp,0x971f5259
  4023a3:	ins    BYTE PTR es:[edi],dx
  4023a4:	fld    DWORD PTR [edx]
  4023a6:	push   esi
  4023a7:	jl     0x40241f
  4023a9:	inc    esi
  4023aa:	jmp    0x40242b
  4023ac:	(bad)  
  4023ad:	push   cs
  4023ae:	add    al,0x80
  4023b0:	in     al,dx
  4023b1:	lds    ebx,FWORD PTR cs:[ecx+0x71]
  4023b5:	bound  edx,QWORD PTR [ecx]
  4023b7:	xchg   esi,eax
  4023b8:	ss xchg BYTE PTR ds:[edx-0x24aaa2ac],dh
  4023c0:	sub    ah,BYTE PTR ds:0x9be9bbe9
  4023c6:	aaa    
  4023c7:	add    eax,0xa4f9d8c7
  4023cc:	test   BYTE PTR [esi+0x32ee2020],dh
  4023d2:	inc    ecx
  4023d3:	lds    esp,FWORD PTR [edx+0x30e8cb6a]
  4023d9:	inc    edx
  4023da:	xor    ebp,ebx
  4023dc:	vunpckhps xmm6,xmm5,xmm2
  4023e0:	int3   
  4023e1:	adc    edi,edi
  4023e3:	inc    esp
  4023e4:	scas   eax,DWORD PTR es:[edi]
  4023e5:	push   eax
  4023e6:	jmp    0x402453
  4023e8:	push   0xffffff9d
  4023ea:	cmp    DWORD PTR [edi],eax
  4023ec:	jbe    0x402409
  4023ee:	pop    ebp
  4023ef:	popa   
  4023f0:	(bad)  
  4023f3:	jecxz  0x4023f0
  4023f5:	shl    edx,0x4c
  4023f8:	sbb    eax,0xab32917c
  4023fd:	gs retf 
  4023ff:	enter  0x19fa,0x67
  402403:	outs   dx,DWORD PTR ds:[esi]
  402404:	jecxz  0x402475
  402406:	push   DWORD PTR [ebx]
  402408:	sbb    eax,ebx
  40240a:	dec    ebx
  40240b:	in     eax,0x7e
  40240d:	es pop ecx
  40240f:	sub    bl,BYTE PTR [eax+0x3208b9b0]
  402415:	sbb    bh,BYTE PTR ds:0x1d555f8c
  40241b:	dec    ecx
  40241c:	fisub  WORD PTR [esi+0x14af1731]
  402422:	std    
  402423:	mov    esi,0xe3bce188
  402428:	jecxz  0x402424
  40242a:	mov    dl,0x5f
  40242c:	aaa    
  40242d:	fisub  WORD PTR [esi-0x2e]
  402430:	or     BYTE PTR [edx+0x7af900d8],cl
  402436:	(bad)  
  402438:	fsubr  DWORD PTR [ecx-0x15]
  40243b:	lock aam 0x4a
  40243e:	into   
  40243f:	lods   al,BYTE PTR ds:[esi]
  402440:	sbb    eax,0xff98e85f
  402445:	add    al,0xc7
  402447:	xchg   BYTE PTR [ecx],cl
  402449:	dec    ebx
  40244a:	or     BYTE PTR [ebp-0x2a],0x0
  40244e:	xlat   BYTE PTR ds:[ebx]
  40244f:	xchg   ecx,eax
  402450:	ret    
  402451:	ds call 0xa659:0xeaf30180
  402459:	inc    esp
  40245a:	jmp    0x25e:0x915436b6
  402461:	pop    ebx
  402462:	inc    ebp
  402463:	pusha  
  402464:	aaa    
  402465:	or     ecx,edx
  402467:	push   eax
  402468:	dec    ebp
  402469:	inc    edx
  40246a:	ds retf 0x32da
  40246e:	ins    BYTE PTR es:[edi],dx
  40246f:	mov    bl,0x7
  402471:	ss out 0x9c,al
  402474:	push   edi
  402475:	daa    
  402476:	jg     0x40247f
  402478:	in     eax,0x8e
  40247a:	sub    bl,BYTE PTR [eax+ebp*1+0x1a1081da]
  402481:	aaa    
  402482:	and    ch,BYTE PTR [edi-0x5dd8c60]
  402488:	shl    BYTE PTR [edi+0x68],1
  40248b:	mov    esi,ecx
  40248d:	lods   eax,DWORD PTR ds:[esi]
  40248e:	push   ss
  40248f:	lods   al,BYTE PTR ds:[esi]
  402490:	call   0x3e6a:0x868c24a2
  402497:	add    esp,DWORD PTR [ecx]
  402499:	mov    eax,0xacd85d9f
  40249e:	pop    ss
  40249f:	jne    0x402468
  4024a1:	outs   dx,DWORD PTR ds:[esi]
  4024a2:	xchg   edx,eax
  4024a3:	cmp    edx,DWORD PTR [eax+0x7a2c979f]
  4024a9:	cmp    ch,BYTE PTR [esp+edi*8-0x3cc56d0]
  4024b0:	int3   
  4024b1:	adc    DWORD PTR [esp+edi*2+0x7b46da0a],ecx
  4024b8:	imul   ebx,DWORD PTR [ecx+esi*1-0x11],0xffffffde
  4024bd:	outs   dx,BYTE PTR ds:[esi]
  4024be:	mov    al,ds:0x77922f76
  4024c4:	shl    DWORD PTR [eax+0x262473ea],0xa3
  4024cb:	pop    ecx
  4024cc:	or     eax,0xd1c77e37
  4024d1:	sub    eax,0xd204c33c
  4024d6:	das    
  4024d7:	stos   DWORD PTR es:[edi],eax
  4024d8:	test   DWORD PTR [edi+eax*2],esi
  4024db:	mov    al,0xe5
  4024dd:	and    BYTE PTR [ebx-0xf],cl
  4024e0:	inc    eax
  4024e1:	out    0x68,eax
  4024e3:	rcl    BYTE PTR [edx],1
  4024e5:	(bad)
  4024e9:	bound  ebp,QWORD PTR [edx-0xde28e80]
  4024ef:	aam    0xe3
  4024f1:	push   ss
  4024f2:	cs cdq 
  4024f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4024f5:	ja     0x402528
  4024f7:	adc    BYTE PTR [ebp-0x3302fa1e],dl
  4024fd:	inc    edx
  4024fe:	sbb    BYTE PTR [ebx+eiz*4+0x10],ah
  402502:	lods   eax,DWORD PTR ds:[esi]
  402503:	cmp    al,0x83
  402505:	iret   
  402506:	xchg   edi,edx
  402508:	push   ecx
  40250a:	sbb    BYTE PTR [esi+0x5f],dl
  40250d:	popa   
  40250e:	mov    edi,0x6a4a21a5
  402513:	jl     0x40253a
  402515:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402516:	cmc    
  402517:	outs   dx,BYTE PTR ds:[esi]
  402518:	lods   eax,DWORD PTR ds:[esi]
  402519:	pop    eax
  40251a:	mov    ds:0xe1a90782,eax
  40251f:	xor    edi,ebp
  402521:	lock pop esp
  402523:	iret   
  402524:	mov    esp,0x64a99cb
  402529:	jg     0x4024f1
  40252b:	call   0x2abf:0x7c9ee566
  402532:	ss push esi
  402534:	mov    edi,DWORD PTR [esi+0x4c68824b]
  40253a:	jl     0x4024fa
  40253c:	mov    BYTE PTR [esi],0xfb
  40253f:	dec    ecx
  402540:	pop    edx
  402541:	ficom  DWORD PTR [edi]
  402543:	adc    ch,ch
  402545:	inc    ebx
  402546:	xchg   edx,eax
  402547:	gs sub al,0xf8
  40254a:	jp     0x402586
  40254c:	cmovnp ebp,DWORD PTR [eax+0x837f13]
  402553:	jge    0x4024e4
  402555:	ss xor eax,0x97b69ebb
  40255b:	pop    ebp
  40255c:	icebp  
  40255d:	out    dx,al
  40255e:	adc    eax,0x5d0d701a
  402563:	test   eax,0x12b8fe35
  402568:	or     dl,BYTE PTR ds:0x7c645a96
  40256e:	xor    al,0xf6
  402570:	ss or  eax,edi
  402573:	hlt    
  402574:	(bad)  
  402576:	push   ds
  402577:	out    0x88,eax
  402579:	faddp  st(4),st
  40257b:	xchg   BYTE PTR ds:0x86884042,dl
  402581:	push   es
  402582:	or     DWORD PTR [esi],edx
  402584:	adc    dh,dh
  402586:	xor    eax,0x20cfeb0c
  40258b:	mov    ecx,0xabab6db8
  402590:	and    al,0x9f
  402592:	inc    ebp
  402593:	sbb    al,0x42
  402595:	inc    esi
  402596:	xor    ch,BYTE PTR [edx]
  402598:	fldenv [edx-0x1ecc4d1b]
  40259e:	jmp    0x40252f
  4025a0:	fimul  WORD PTR [ebx+ebp*2]
  4025a3:	xchg   esp,eax
  4025a4:	jg     0x402539
  4025a6:	popa   
  4025a7:	sub    dh,BYTE PTR [esi]
  4025a9:	push   ebx
  4025aa:	cmp    BYTE PTR ds:0x2fac1b55,bl
  4025b0:	pop    ss
  4025b1:	xchg   edi,eax
  4025b2:	xor    bh,al
  4025b4:	jb     0x4025f6
  4025b6:	adc    DWORD PTR [ebp-0xe878e2c],ecx
  4025bc:	mov    edx,0x946ca40b
  4025c1:	lods   al,BYTE PTR ds:[esi]
  4025c2:	ja     0x402602
  4025c4:	in     al,0xec
  4025c6:	push   0x7b73ee58
  4025cb:	cmp    al,0x49
  4025cd:	inc    ebp
  4025ce:	cmp    esi,DWORD PTR [ebp+0x6467437c]
  4025d4:	mov    al,0xe7
  4025d6:	scas   eax,DWORD PTR es:[edi]
  4025d7:	mov    esp,0xdd2b9f95
  4025dc:	das    
  4025dd:	xor    esp,ebx
  4025df:	test   al,0x43
  4025e1:	sub    ebp,esp
  4025e3:	cwde   
  4025e4:	test   eax,0x9b54079f
  4025e9:	(bad)  [ebp-0x40f807a4]
  4025ef:	mov    dh,0x1d
  4025f1:	mov    al,0xb4
  4025f3:	data16 repz add BYTE PTR [esp+edx*1],dh
  4025f8:	push   es
  4025f9:	sbb    al,0xb9
  4025fb:	(bad)  
  4025fc:	jne    0x402613
  4025fe:	jp     0x402668
  402600:	cwde   
  402601:	nop
  402602:	jmp    0x402622
  402604:	mov    cl,0x45
  402606:	xor    BYTE PTR [ecx-0x18d67081],bh
  40260c:	loopne 0x402669
  40260e:	in     al,dx
  40260f:	jecxz  0x40262b
  402611:	call   0xee2bb9bc
  402616:	pop    esp
  402617:	pop    esp
  402618:	pop    esp
  402619:	outs   dx,BYTE PTR ds:[esi]
  40261a:	retf   0x7008
  40261d:	jnp    0x4025ef
  40261f:	mov    ah,0xbb
  402621:	pop    ecx
  402622:	jg     0x30dc4114
  402628:	jnp    0x402645
  40262a:	ins    DWORD PTR es:[edi],dx
  40262b:	sbb    BYTE PTR [edi+0x28],cl
  40262e:	fwait
  40262f:	push   ds
  402630:	pop    esp
  402631:	adc    al,BYTE PTR [eax+0x2981e3e9]
  402637:	outs   dx,BYTE PTR ds:[esi]
  402638:	adc    BYTE PTR [esi+0x74],dl
  40263b:	mov    bl,0x35
  40263d:	stos   DWORD PTR es:[edi],eax
  40263e:	pop    edi
  40263f:	dec    ebx
  402640:	popf   
  402641:	sbb    edi,DWORD PTR [edi-0x2b]
  402644:	sti    
  402645:	mov    ebx,0x67bbb6bf
  40264a:	dec    edi
  40264b:	and    cl,0x31
  40264e:	mov    eax,ds:0x8aa2b22c
  402653:	int    0x57
  402655:	jae    0x402603
  402657:	pop    di
  402659:	(bad)  
  40265a:	mov    edx,edx
  40265c:	pop    esp
  40265d:	pop    edi
  40265e:	call   0xb689:0xe3cc64a2
  402665:	mov    edx,0x64aed5a
  40266a:	pop    esi
  40266b:	adc    eax,edi
  40266d:	mov    ebx,0x8a94e8f6
  402672:	push   es
  402673:	pop    ecx
  402674:	sbb    ah,BYTE PTR [ebp-0x53607714]
  40267a:	test   al,0x23
  40267c:	ja     0x40261d
  40267e:	push   esi
  40267f:	adc    al,0xc5
  402681:	rol    DWORD PTR [esi+0x11],1
  402684:	cwde   
  402685:	test   eax,0x7fdf10b2
  40268a:	lods   eax,DWORD PTR ds:[esi]
  40268b:	xor    eax,0x1b5341c6
  402690:	lock pop esi
  402692:	outs   dx,BYTE PTR ds:[esi]
  402693:	inc    esp
  402694:	fisttp DWORD PTR [edx-0xdbbd873]
  40269a:	mov    ds:0xd649eb1f,eax
  40269f:	arpl   dx,cx
  4026a1:	repnz xlat BYTE PTR ds:[ebx]
  4026a3:	jae    0x402715
  4026a5:	push   es
  4026a6:	pop    esi
  4026a7:	mov    edx,DWORD PTR [ebx]
  4026a9:	dec    ecx
  4026aa:	push   eax
  4026ab:	(bad)  
  4026ac:	ins    BYTE PTR es:[edi],dx
  4026ad:	leave  
  4026ae:	jno    0x40270a
  4026b0:	cli    
  4026b1:	out    0xbf,eax
  4026b3:	jnp    0x4026d2
  4026b5:	retf   
  4026b6:	dec    edx
  4026b7:	xchg   ecx,eax
  4026b8:	mov    ch,0x3c
  4026ba:	sti    
  4026bb:	loopne 0x4026eb
  4026bd:	rol    BYTE PTR [ebx],cl
  4026bf:	or     BYTE PTR [edi+0x30ce440],al
  4026c5:	push   esi
  4026c6:	pop    ds
  4026c7:	cmp    DWORD PTR [ecx+0x7d08f722],esp
  4026cd:	shl    WORD PTR [ecx],cl
  4026d0:	mov    ebx,DWORD PTR ds:0x399bd52a
  4026d6:	xchg   ebp,eax
  4026d7:	pushf  
  4026d8:	inc    eax
  4026d9:	popf   
  4026da:	adc    al,BYTE PTR [eax-0x5fdc989f]
  4026e0:	dec    esi
  4026e1:	or     bh,BYTE PTR [edi+edi*1]
  4026e4:	mul    ecx
  4026e6:	sub    dh,BYTE PTR [eax-0x108deaf8]
  4026ec:	js     0x402753
  4026ee:	dec    ecx
  4026ef:	pusha  
  4026f0:	push   edx
  4026f1:	fcom   DWORD PTR [ebp+0x7ff00bba]
  4026f7:	inc    DWORD PTR [edi-0x30212135]
  4026fd:	sub    al,0x34
  4026ff:	mov    ebp,0xffe9436c
  402704:	dec    eax
  402705:	(bad)  
  402706:	and    ah,bh
  402708:	jmp    0x7697:0xa019cacb
  40270f:	dec    eax
  402710:	adc    DWORD PTR [esi-0x34],0x4537c391
  402717:	js     0x40270b
  402719:	pop    es
  40271a:	and    ebx,DWORD PTR [eax-0x45]
  40271d:	es push esi
  40271f:	mov    fs,WORD PTR [ebx]
  402721:	popa   
  402722:	mov    edi,0x6c57c994
  402727:	sbb    al,0x83
  402729:	sahf   
  40272a:	mov    ebx,0x824dd27d
  40272f:	push   ss
  402730:	xchg   esp,eax
  402731:	ins    DWORD PTR es:[edi],dx
  402732:	(bad)  
  402733:	loope  0x4026c7
  402735:	iret   
  402736:	push   0x175f8595
  40273b:	mov    bh,0xec
  40273d:	mov    edx,0x374d2f6a
  402742:	lods   al,BYTE PTR ds:[esi]
  402743:	inc    DWORD PTR [edx-0x440a70aa]
  402749:	scas   al,BYTE PTR es:[edi]
  40274a:	outs   dx,DWORD PTR ds:[esi]
  40274b:	fstp   TBYTE PTR [ebx]
  40274d:	xchg   edx,eax
  40274e:	mov    BYTE PTR [esi-0x1b6d462c],al
  402754:	mov    ds:0xbe9477ee,al
  402759:	xlat   BYTE PTR ds:[ebx]
  40275a:	mov    fs:0x8412a793,al
  402760:	test   DWORD PTR [eax],0xf64074bb
  402766:	xor    DWORD PTR [ecx-0x6e8d6764],ebp
  40276c:	mov    ebx,0x4dec0d7
  402771:	dec    edi
  402772:	push   ecx
  402773:	mov    cl,0xdc
  402775:	or     BYTE PTR [edi],dl
  402777:	lea    ebx,[edx+0x2b]
  40277a:	xchg   BYTE PTR [eax+0x6ed43701],bl
  402780:	add    al,0x97
  402782:	cdq    
  402783:	push   cs
  402784:	out    dx,al
  402785:	ret    0xe64
  402788:	sti    
  402789:	fisttp WORD PTR [eax+eiz*4+0x5f]
  40278d:	xor    BYTE PTR [esi+0x44d7a594],bl
  402793:	(bad)  
  402794:	push   0xbeea031e
  402799:	inc    ebp
  40279a:	push   eax
  40279b:	mov    eax,0x8ba0a42c
  4027a0:	sub    al,0xf0
  4027a2:	fnstcw WORD PTR [ecx+esi*8+0x1]
  4027a6:	mov    esi,0xdff3c52e
  4027ab:	pop    ds
  4027ac:	(bad)
  4027b0:	das    
  4027b1:	xor    ebx,DWORD PTR [eax+0x3b9e0324]
  4027b7:	les    edx,FWORD PTR ds:0xd33f8d5
  4027bd:	(bad)  
  4027bf:	leave  
  4027c0:	dec    edi
  4027c1:	and    BYTE PTR [ebx+ecx*8],al
  4027c4:	xor    dh,BYTE PTR [esi]
  4027c6:	mov    ebp,0xacca318f
  4027cb:	daa    
  4027cc:	popf   
  4027cd:	xchg   esp,eax
  4027ce:	lock seta bh
  4027d2:	mov    esp,0xa723cf98
  4027d7:	jb     0x402831
  4027d9:	sub    eax,0x53025373
  4027de:	in     eax,dx
  4027df:	sub    al,0xb8
  4027e1:	nop
  4027e2:	out    0x9b,al
  4027e4:	mov    bl,0x9f
  4027e6:	cld    
  4027e7:	push   esi
  4027e8:	push   0x8f514e4c
  4027ed:	sub    DWORD PTR [edi-0x58f24d6e],ebp
  4027f3:	nop
  4027f4:	mov    esp,0x9b0942b8
  4027f9:	es std 
  4027fb:	test   DWORD PTR [bx+0x18],esp
  4027ff:	(bad)  
  402800:	or     al,0xa4
  402802:	cmpps  xmm3,XMMWORD PTR [ebx],0x84
  402806:	in     al,dx
  402807:	xchg   edx,eax
  402808:	push   ds
  402809:	int    0xdc
  40280b:	(bad)  
  40280c:	jecxz  0x402869
  40280e:	mov    ah,0x47
  402810:	mov    cl,0x55
  402812:	xor    eax,0xab2b743a
  402817:	popf   
  402818:	mov    WORD PTR [ebp+0x45d1dc75],?
  40281e:	fisub  DWORD PTR [edi-0xf9ae452]
  402824:	test   al,0xea
  402826:	pop    edx
  402827:	(bad)  
  402829:	mov    eax,ds:0x6d5e41e8
  40282e:	pop    eax
  40282f:	rol    ah,cl
  402831:	sbb    DWORD PTR [ebp+0x26],esp
  402834:	iret   
  402835:	sub    esp,DWORD PTR [edx+0x5b]
  402838:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402839:	int    0xab
  40283b:	and    esp,DWORD PTR [edi+edi*1]
  40283e:	push   edi
  40283f:	repnz adc DWORD PTR [esi+edx*8+0x55],ecx
  402844:	or     eax,0xe55a3fee
  402849:	adc    bl,BYTE PTR ds:0xd15fbcf1
  40284f:	mov    ch,al
  402851:	std    
  402852:	aaa    
  402853:	pop    ebp
  402854:	push   ebp
  402855:	xchg   ebx,eax
  402856:	fs and al,0xf8
  402859:	jbe    0x4028cb
  40285b:	mov    cl,0x3d
  40285d:	cmp    BYTE PTR [eax+0x5f],ah
  402860:	mov    WORD PTR [edi-0x3f281aa0],fs
  402866:	lods   al,BYTE PTR ds:[esi]
  402867:	(bad)  
  402869:	fisttp QWORD PTR [ebx+0x6b]
  40286c:	adc    DWORD PTR [esp+esi*1-0x4],esp
  402870:	inc    ebx
  402871:	mov    BYTE PTR [ebp+0x66e4165c],dl
  402877:	inc    eax
  402878:	xor    eax,0xc0321046
  40287d:	sar    DWORD PTR [eax+ebx*1],cl
  402880:	(bad)  [edi-0x767d372c]
  402886:	or     BYTE PTR [ebx-0x4],0xd3
  40288a:	sbb    al,0x15
  40288c:	and    esp,esi
  40288e:	xchg   edi,eax
  40288f:	out    dx,al
  402890:	in     al,dx
  402891:	pop    es
  402892:	repz fld DWORD PTR [ebx+0x26]
  402896:	stos   BYTE PTR es:[edi],al
  402897:	sub    ebp,0xf65d6fc7
  40289d:	ret    0xf15
  4028a0:	push   edi
  4028a1:	aaa    
  4028a2:	xor    BYTE PTR [ebp-0x68a1b87],ch
  4028a8:	out    0xae,eax
  4028aa:	mov    ebx,0x3cdae808
  4028af:	xchg   ebx,eax
  4028b0:	adc    al,0x5a
  4028b2:	scas   al,BYTE PTR es:[edi]
  4028b3:	loope  0x402928
  4028b5:	add    ecx,0x70
  4028b8:	jo     0x402908
  4028ba:	add    ch,BYTE PTR [ecx+0x61450fd6]
  4028c0:	(bad)  
  4028c1:	push   ecx
  4028c2:	dec    DWORD PTR [edx-0x78]
  4028c5:	in     eax,0x88
  4028c7:	mov    eax,0x38d20fd4
  4028cc:	or     eax,0xafb12880
  4028d1:	adc    ebx,DWORD PTR [eax]
  4028d3:	and    eax,0xebb78116
  4028d8:	add    ch,dh
  4028da:	mov    edi,0x71f3fb9c
  4028df:	xor    DWORD PTR es:[esp+eax*1-0x3ea4ef22],ecx
  4028e7:	out    dx,eax
  4028e8:	sub    al,0x93
  4028ea:	es adc ch,dl
  4028ed:	ds pop ecx
  4028ef:	sbb    BYTE PTR [esi-0x4d],0xe8
  4028f3:	mov    bl,0x59
  4028f5:	fisub  DWORD PTR [ecx+edi*2+0x543ee4c2]
  4028fc:	(bad)  
  4028fd:	add    eax,0x34b986a4
  402902:	xor    BYTE PTR [esi-0x5a93b76c],0xf5
  402909:	retf   
  40290a:	xchg   ecx,eax
  40290b:	fld    TBYTE PTR [ebx+0x49]
  40290e:	cli    
  40290f:	das    
  402910:	mov    ds:0x15eb29b4,al
  402915:	bound  esp,QWORD PTR gs:[edi+edx*2]
  402919:	push   ecx
  40291a:	lea    edx,[ebx-0x7089d080]
  402920:	jne    0x40292b
  402922:	test   al,0x36
  402924:	addr16 xor al,0x33
  402927:	lods   al,BYTE PTR ds:[esi]
  402928:	dec    esp
  402929:	and    al,0xd3
  40292b:	js     0x402948
  40292d:	dec    edx
  40292e:	xor    eax,esi
  402930:	pop    eax
  402931:	mov    eax,ds:0x2255d61c
  402936:	jno    0x40290d
  402938:	lock outs dx,BYTE PTR ds:[esi]
  40293a:	mov    eax,DWORD PTR [edi]
  40293c:	adc    BYTE PTR [ecx],bh
  40293e:	dec    edi
  40293f:	xor    al,0x91
  402941:	inc    esp
  402942:	cdq    
  402943:	call   0x6a69b932
  402948:	fiadd  DWORD PTR [esi+0x14ff4078]
  40294e:	inc    ebp
  40294f:	xchg   esi,eax
  402950:	lock push esi
  402952:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402953:	lock shl BYTE PTR [ebx-0x191f0eb5],0x3c
  40295b:	xor    ch,BYTE PTR [ebx]
  40295d:	add    BYTE PTR [ecx],dh
  40295f:	(bad)  
  402960:	ja     0x4029ba
  402962:	in     eax,dx
  402963:	call   0x464546fe
  402968:	(bad)  
  402969:	push   edi
  40296a:	(bad)  
  40296d:	cld    
  40296e:	adc    ecx,ecx
  402970:	adc    ch,BYTE PTR [edi-0x5dc63ec4]
  402976:	dec    ebx
  402977:	clc    
  402978:	jp     0x40296e
  40297a:	jp     0x402903
  40297c:	in     al,dx
  40297d:	mov    ebx,0x92bf7064
  402982:	inc    edi
  402983:	jmp    DWORD PTR [esi-0x34]
  402986:	mov    al,0x87
  402988:	lods   eax,DWORD PTR ds:[esi]
  402989:	out    0xa,eax
  40298b:	mov    ch,0x0
  40298d:	xchg   al,ah
  40298f:	jb     0x402912
  402991:	adc    BYTE PTR [ebp+0x7a],bl
  402994:	jne    0x4029fd
  402996:	bound  ecx,QWORD PTR [ebx+0x4b]
  402999:	ins    BYTE PTR es:[edi],dx
  40299a:	shr    DWORD PTR [ebp-0x1fe5cd3e],cl
  4029a0:	pop    esp
  4029a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4029a2:	addr16 jno 0x402996
  4029a5:	out    0x12,al
  4029a7:	mov    esp,0x2a377ac1
  4029ac:	ss xor eax,0xa4fda720
  4029b2:	mov    eax,0x2dc31543
  4029b7:	jb     0x402a15
  4029b9:	fbstp  TBYTE PTR [edi+0x6d]
  4029bc:	jns    0x4029e4
  4029be:	pop    ds
  4029bf:	xchg   ecx,eax
  4029c0:	jle    0x402a38
  4029c2:	push   ebx
  4029c3:	sub    al,0x70
  4029c5:	das    
  4029c6:	les    ebp,FWORD PTR [edx-0x4f6a21b6]
  4029cc:	fsub   QWORD PTR [ebp-0x4ea42988]
  4029d2:	xchg   esi,eax
  4029d3:	dec    ebp
  4029d4:	mov    ah,0xf9
  4029d6:	add    BYTE PTR [esi],bh
  4029d8:	and    al,0x67
  4029da:	fwait
  4029db:	daa    
  4029dc:	nop
  4029dd:	mov    DWORD PTR [ebx-0x52],edx
  4029e0:	cmp    dh,BYTE PTR [ebp+0x3ff6215b]
  4029e6:	mov    ds:0xb38723cd,al
  4029eb:	imul   esp,ecx,0x71f5a90e
  4029f1:	mov    dl,0xc5
  4029f3:	sbb    al,BYTE PTR [esi]
  4029f5:	sub    ecx,esi
  4029f7:	repz push eax
  4029f9:	jmp    0x1ab2ca6a
  4029fe:	(bad)  
  4029ff:	in     eax,0x9a
  402a01:	push   edi
  402a02:	out    0xcc,eax
  402a04:	enter  0x2604,0x18
  402a08:	sub    al,0x59
  402a0a:	sbb    al,0xae
  402a0c:	xor    eax,0x51bcd926
  402a11:	mov    edi,0xef7947e3
  402a16:	push   ss
  402a17:	mov    ch,0xc0
  402a19:	add    DWORD PTR [edx-0x4f],0xffffff9a
  402a1d:	xchg   ch,dh
  402a1f:	add    ah,BYTE PTR ds:0x16690f8e
  402a25:	dec    esp
  402a27:	test   bl,al
  402a29:	xlat   BYTE PTR ds:[ebx]
  402a2a:	mov    al,ds:0x67d3d03
  402a2f:	add    eax,0x18b10d8
  402a34:	jg     0x4029fa
  402a36:	sub    al,0x43
  402a38:	or     al,0x42
  402a3a:	fsubp  st(2),st
  402a3c:	adc    ch,BYTE PTR ds:0x5fd83360
  402a42:	add    al,0xea
  402a44:	call   0x917d:0x77fefe83
  402a4b:	cs or  dh,cl
  402a4e:	jmp    0x9fb92ebf
  402a53:	mov    edi,0xa2d483ca
  402a58:	add    DWORD PTR [esi+0x15],0x1cfa063b
  402a5f:	add    eax,0xba4f5909
  402a64:	dec    ebx
  402a65:	call   0x4153:0x56d8524f
  402a6c:	test   ax,0x849d
  402a70:	inc    ebp
  402a71:	lods   eax,DWORD PTR ds:[esi]
  402a72:	and    ah,BYTE PTR [esi-0x7b]
  402a75:	aas    
  402a76:	fistp  QWORD PTR [ebx]
  402a78:	xchg   esp,eax
  402a79:	push   esi
  402a7a:	das    
  402a7b:	jno    0x402a91
  402a7d:	jbe    0x402ac2
  402a7f:	(bad)  
  402a81:	(bad)  
  402a82:	out    0x95,al
  402a84:	retf   
  402a85:	pop    es
  402a86:	inc    eax
  402a87:	lds    esi,FWORD PTR [edi]
  402a89:	pop    ebx
  402a8a:	mov    WORD PTR [ecx-0x4d],ss
  402a8d:	cdq    
  402a8e:	sub    esp,ebx
  402a90:	leave  
  402a91:	inc    esi
  402a92:	(bad)  
  402a94:	loop   0x402a86
  402a96:	or     al,cl
  402a98:	aaa    
  402a99:	push   DWORD PTR [esi+0x3919e48e]
  402a9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402aa0:	mov    BYTE PTR [edx],cl
  402aa2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402aa3:	int    0x8d
  402aa5:	shl    BYTE PTR [edx+0x705e9d4b],0x95
  402aac:	jno    0x402aa4
  402aae:	sub    eax,0x56f295d4
  402ab3:	push   ecx
  402ab4:	mov    ebp,0x7f7ca01b
  402ab9:	cmp    DWORD PTR cs:[eax-0xf0ddaff],esp
  402ac0:	rcr    BYTE PTR [ebp+0x744405e9],cl
  402ac6:	fwait
  402ac7:	jecxz  0x402abb
  402ac9:	pop    eax
  402aca:	out    0xa2,eax
  402acc:	mov    edi,0xe1911211
  402ad1:	lods   al,BYTE PTR ds:[esi]
  402ad2:	xchg   edi,eax
  402ad3:	and    BYTE PTR [edi+ecx*8-0x6c],dl
  402ad7:	cmp    edx,ecx
  402ad9:	jo     0x402ad9
  402adb:	es push edi
  402add:	int3   
  402ade:	cmc    
  402adf:	daa    
  402ae0:	cmp    eax,0xde5d13ba
  402ae5:	dec    eax
  402ae6:	push   es
  402ae7:	enter  0x7c6b,0x73
  402aeb:	leave  
  402aec:	pop    ebp
  402aed:	inc    edx
  402aee:	mov    ds:0x74a6354b,eax
  402af3:	sbb    ebp,ecx
  402af5:	pop    ebp
  402af6:	xchg   esp,eax
  402af7:	jecxz  0x402b76
  402af9:	mov    eax,ds:0x83e8e729
  402afe:	ror    DWORD PTR [ecx-0x7c],cl
  402b01:	ficomp WORD PTR [eax-0x4323fde2]
  402b07:	in     eax,0x4e
  402b09:	imul   edi,DWORD PTR [eax-0x344e20f0],0xc9fea91c
  402b13:	push   esi
  402b14:	(bad)  
  402b15:	adc    ah,ah
  402b17:	outs   dx,DWORD PTR ds:[esi]
  402b18:	mov    bh,0x40
  402b1a:	xchg   edx,eax
  402b1b:	jne    0x402b0b
  402b1d:	fsubr  QWORD PTR [eax+0x6f]
  402b20:	(bad)  
  402b21:	pop    ebp
  402b22:	ins    DWORD PTR es:[edi],dx
  402b23:	mov    esi,DWORD PTR [esi]
  402b25:	(bad)  
  402b26:	int    0xed
  402b28:	mov    dh,0x37
  402b2a:	fadd   QWORD PTR [edx+0x6531db67]
  402b30:	sub    eax,0x155ca09c
  402b35:	inc    edi
  402b36:	mov    esp,0x4edc9717
  402b3b:	jbe    0x402b1a
  402b3d:	cli    
  402b3e:	dec    edx
  402b3f:	fs mov ecx,0x2d9df0df
  402b45:	mov    ebx,0xd2a87ba8
  402b4a:	pop    esp
  402b4b:	jnp    0x402ace
  402b4d:	mov    eax,ds:0xeb8fdd90
  402b53:	call   esi
  402b55:	jbe    0x402bd0
  402b57:	mov    ebp,0x1c359e9e
  402b5c:	loopne 0x402b4a
  402b5e:	dec    ebp
  402b5f:	(bad)  
  402b60:	aaa    
  402b61:	in     al,0xa3
  402b63:	xchg   edx,eax
  402b64:	jge    0x402b16
  402b66:	dec    ecx
  402b67:	leave  
  402b68:	sbb    eax,0xad9ff400
  402b6d:	je     0x402b1c
  402b6f:	push   ebx
  402b70:	mov    bh,0x4a
  402b72:	mov    edx,edx
  402b74:	xor    DWORD PTR [edx],edx
  402b76:	enter  0x1085,0x7d
  402b7a:	cmp    al,0x4b
  402b7c:	je     0x402bd2
  402b7e:	in     eax,dx
  402b7f:	pop    ecx
  402b80:	xchg   ah,bl
  402b82:	or     al,0xcc
  402b84:	sub    BYTE PTR [esi-0x32],dl
  402b87:	repnz pop edx
  402b89:	pop    edi
  402b8a:	cwde   
  402b8b:	cmp    cl,BYTE PTR [ebp-0x5f6bfd49]
  402b91:	xor    al,0x3d
  402b93:	lock out 0xca,al
  402b96:	pop    bp
  402b98:	cmp    al,0x4e
  402b9a:	out    dx,eax
  402b9b:	inc    ecx
  402b9c:	repz in eax,0x9e
  402b9f:	fistp  DWORD PTR [ebp-0x5e]
  402ba2:	inc    ebp
  402ba3:	push   esp
  402ba4:	inc    edx
  402ba5:	mov    esi,0xb3fd4149
  402baa:	loop   0x402c09
  402bac:	and    al,0xeb
  402bae:	push   ebx
  402baf:	sub    ebp,DWORD PTR [esi+edx*4+0x4264d7e5]
  402bb6:	and    ah,BYTE PTR [ecx+edi*4]
  402bb9:	pop    ebp
  402bba:	ror    cl,0xe7
  402bbd:	out    dx,al
  402bbe:	shl    DWORD PTR ss:[edx-0x35945e26],0x7f
  402bc6:	xchg   ebx,eax
  402bc7:	out    0xf2,eax
  402bc9:	inc    edx
  402bca:	adc    dh,BYTE PTR [ebp+0x53bafb72]
  402bd0:	jl     0x402bb6
  402bd2:	stos   DWORD PTR es:[edi],eax
  402bd3:	clc    
  402bd4:	adc    eax,edx
  402bd6:	sbb    ch,BYTE PTR [edi-0x68]
  402bd9:	popa   
  402bda:	cmp    ebx,DWORD PTR [eax]
  402bdc:	shl    BYTE PTR [eax-0x33],1
  402bdf:	popa   
  402be0:	aaa    
  402be1:	js     0x402c34
  402be3:	daa    
  402be4:	mov    dh,0x42
  402be6:	fcomip st,st(0)
  402be8:	sbb    al,0xd3
  402bea:	(bad)  
  402bec:	(bad)  
  402bed:	out    dx,al
  402bee:	jno    0x402c63
  402bf0:	sbb    al,BYTE PTR [eax-0x57]
  402bf3:	dec    eax
  402bf4:	or     eax,0xf5c237fa
  402bf9:	stos   BYTE PTR es:[edi],al
  402bfa:	sub    dh,BYTE PTR [esp+ebp*4-0x1850b77b]
  402c01:	inc    ecx
  402c02:	mov    ebx,0x19aaef05
  402c07:	fsub   DWORD PTR [ebx+ebx*2-0x19]
  402c0b:	mov    dl,0xc6
  402c0d:	pop    ebp
  402c0e:	sub    esp,eax
  402c10:	cli    
  402c11:	pusha  
  402c12:	pop    edi
  402c13:	retf   
  402c14:	imul   esi,edi,0x21d35e6b
  402c1a:	cmp    DWORD PTR [ebp-0x63],edi
  402c1d:	or     cl,BYTE PTR [ebx+ebp*4-0x22]
  402c21:	nop
  402c22:	jno    0x402c3a
  402c24:	sbb    BYTE PTR [ebp-0x747caafe],al
  402c2a:	clc    
  402c2b:	retf   
  402c2c:	loop   0x402c17
  402c2e:	cmp    al,0x17
  402c30:	bound  ebp,QWORD PTR [eax-0x2968f5e6]
  402c36:	outs   dx,BYTE PTR ds:[esi]
  402c37:	pop    ecx
  402c38:	or     DWORD PTR [edi-0x1e],esp
  402c3b:	xor    BYTE PTR ds:0x58fbc522,cl
  402c41:	jae    0x402c2b
  402c43:	mov    bh,0x2f
  402c45:	jmp    0x402cc6
  402c47:	lock or dl,BYTE PTR [edi]
  402c4a:	das    
  402c4b:	xchg   esp,eax
  402c4c:	aam    0x18
  402c4e:	and    al,0x67
  402c50:	in     al,0xe5
  402c52:	mov    ecx,0x426c4524
  402c58:	arpl   WORD PTR [ebp+eax*8-0x16],bp
  402c5c:	and    eax,0x5bbdf
  402c61:	enter  0x14bd,0xd6
  402c65:	mov    esi,0xc18d5972
  402c6a:	es aam 0xb7
  402c6d:	push   ebx
  402c6e:	pushf  
  402c6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c70:	aad    0xcc
  402c72:	inc    ebx
  402c73:	and    ebp,eax
  402c75:	or     dh,BYTE PTR [esi-0x17ba4366]
  402c7b:	adc    edx,DWORD PTR [edi]
  402c7d:	popf   
  402c7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c7f:	push   0xe02fbc78
  402c84:	push   ebx
  402c85:	adc    DWORD PTR [edi+0x70],0x4a
  402c89:	jmp    0x3bad:0x1566cc48
  402c90:	mov    db2,ecx
  402c93:	ins    DWORD PTR es:[edi],dx
  402c94:	adc    edx,edi
  402c96:	sub    BYTE PTR [eax-0x9efbfbe],0x5
  402c9d:	sbb    al,0xb1
  402c9f:	xchg   edx,eax
  402ca0:	jle    0x402cc0
  402ca2:	jmp    0x15047570
  402ca7:	mov    ?,WORD PTR [eax*8-0x29f675e2]
  402cae:	aaa    
  402caf:	test   BYTE PTR [ecx],ch
  402cb1:	xor    DWORD PTR [eax+0x3f],0x23cb4e84
  402cb8:	sub    DWORD PTR [edx-0x447a1dc],0xffffffd1
  402cbf:	jg     0x402c46
  402cc1:	xchg   edx,eax
  402cc2:	inc    ebx
  402cc3:	add    eax,0x888e0ff7
  402cc8:	sub    ebx,DWORD PTR [edi+0xa]
  402ccb:	add    DWORD PTR [ecx+0x68853a21],eax
  402cd1:	or     DWORD PTR [ecx+0xc693ab7],esi
  402cd7:	push   0xadac206a
  402cdc:	ss jge 0x402d58
  402cdf:	mov    bh,0x93
  402ce1:	out    0x68,al
  402ce3:	repz pop eax
  402ce5:	sbb    al,0x1e
  402ce7:	or     ebx,esi
  402ce9:	leave  
  402cea:	pop    ebp
  402ceb:	mov    eax,0x56981cad
  402cf0:	xchg   BYTE PTR [esi+0x63],dh
  402cf3:	adc    eax,0xb09d9eb3
  402cf8:	jns    0x402d28
  402cfa:	sub    ebp,0x480d247a
  402d00:	jmp    0x64712929
  402d05:	sbb    al,0x4
  402d07:	arpl   WORD PTR [esi+0x7954d008],dx
  402d0d:	push   edi
  402d0e:	xor    ch,ah
  402d10:	xchg   esi,eax
  402d11:	xchg   esi,eax
  402d12:	xchg   bl,cl
  402d14:	ficom  WORD PTR [edx]
  402d16:	dec    ebp
  402d17:	loope  0x402d40
  402d19:	in     eax,dx
  402d1a:	jbe    0x402cc0
  402d1c:	mov    edx,0x818b903a
  402d21:	pop    edx
  402d22:	jno    0x402ca7
  402d24:	jmp    0x40882c4e
  402d29:	sbb    dh,al
  402d2b:	and    ch,al
  402d2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d2e:	pop    ebp
  402d2f:	inc    edx
  402d30:	fadd   QWORD PTR [edi+0x1f44ccfd]
  402d36:	sub    al,BYTE PTR [esi+0x64]
  402d39:	or     edi,DWORD PTR [esi+0x28]
  402d3c:	or     ah,BYTE PTR [eax+0x6260893e]
  402d42:	jl     0x402d38
  402d44:	push   cs
  402d45:	xor    edx,ecx
  402d47:	daa    
  402d48:	or     bl,dh
  402d4a:	and    eax,0xd94de200
  402d4f:	ror    DWORD PTR [eax],cl
  402d51:	les    esp,FWORD PTR [edx]
  402d53:	add    esp,DWORD PTR [eax]
  402d55:	in     eax,0xd0
  402d57:	loope  0x402dab
  402d59:	push   cs
  402d5a:	lock mov ebx,0x9e381f07
  402d60:	mov    edx,0x2c99c916
  402d65:	dec    eax
  402d66:	mov    BYTE PTR [eax],bl
  402d68:	arpl   bx,cx
  402d6a:	call   0xe925:0xb70baa83
  402d71:	sbb    eax,0x678d8495
  402d76:	je     0x402d7d
  402d78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d79:	sub    esi,DWORD PTR ds:0xe38d6086
  402d7f:	sbb    DWORD PTR [ecx+0x77],edi
  402d82:	mov    bl,0x46
  402d84:	dec    edx
  402d85:	xchg   ecx,eax
  402d86:	mov    ecx,0xbc90e86b
  402d8b:	jmp    0xcda2:0x92364ce
  402d92:	adc    DWORD PTR ds:0xeeb928db,eax
  402d98:	cmc    
  402d99:	pop    esi
  402d9a:	into   
  402d9b:	and    ch,BYTE PTR [esp+edx*1+0x472e25e0]
  402da2:	mov    edi,0x2b626a56
  402da7:	xlat   BYTE PTR ds:[ebx]
  402da8:	and    ebp,DWORD PTR [ebp-0x6c]
  402dab:	inc    esp
  402dac:	mov    al,ds:0xad735d07
  402db1:	jmp    0x5268:0xd6758d79
  402db8:	push   0xfffffffe
  402dba:	sbb    eax,0x88cb3267
  402dbf:	ds ds or al,0x9a
  402dc3:	dec    ebx
  402dc4:	xchg   edi,eax
  402dc5:	push   ss
  402dc6:	cmpps  xmm3,XMMWORD PTR [ebx+0x4f],0xb1
  402dcb:	jp     0x402da4
  402dcd:	rcl    BYTE PTR [ebx+eiz*8-0x39],cl
  402dd1:	xchg   ecx,eax
  402dd2:	dec    esi
  402dd3:	(bad)  
  402dd5:	adc    dl,BYTE PTR ds:0xe234dc2e
  402ddb:	loope  0x402dd2
  402ddd:	repnz rcr BYTE PTR [ebx-0x773133dc],0x11
  402de5:	jbe    0x402d84
  402de7:	and    BYTE PTR [ebp+esi*2+0x44737295],0x7f
  402def:	inc    edx
  402df0:	push   edi
  402df1:	rcl    BYTE PTR [ebp-0x75],cl
  402df4:	cwde   
  402df5:	lods   al,BYTE PTR ds:[esi]
  402df6:	aam    0x59
  402df8:	mov    al,ds:0x2978895b
  402dfd:	jns    0x402e6f
  402dff:	out    dx,al
  402e00:	push   edi
  402e01:	int3   
  402e02:	xchg   edx,eax
  402e03:	mul    BYTE PTR [ebp-0x66304849]
  402e09:	rcr    cl,1
  402e0b:	or     dl,dh
  402e0d:	mov    BYTE PTR [ebp-0x8],bh
  402e10:	inc    ecx
  402e11:	or     ch,0x4c
  402e14:	test   al,0xfe
  402e16:	pop    ebx
  402e17:	data16 test al,0x64
  402e1a:	push   0x661c78b1
  402e1f:	retf   
  402e20:	jmp    0x7a4e0b81
  402e25:	imul   esp,edx,0x1354bb33
  402e2b:	inc    eax
  402e2c:	cs loope 0x402e93
  402e2f:	mov    ds:0x53b91594,al
  402e34:	sbb    eax,0xb706aebf
  402e39:	inc    eax
  402e3a:	jno    0x402e5d
  402e3c:	jmp    DWORD PTR [ebp+0x27c0b69e]
  402e42:	(bad)  
  402e43:	in     eax,dx
  402e44:	xor    BYTE PTR [edi],0xa8
  402e47:	fdivr  DWORD PTR ds:[eax+0x6]
  402e4b:	lahf   
  402e4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e4d:	bound  esi,QWORD PTR [eax-0x34]
  402e50:	lods   eax,DWORD PTR ds:[esi]
  402e51:	mov    DWORD PTR ss:[esi+0x44981b0a],esp
  402e58:	add    DWORD PTR [ebp+0x67a6ee83],edi
  402e5e:	in     eax,0x33
  402e60:	inc    edx
  402e61:	cld    
  402e62:	test   al,0x9a
  402e64:	pop    ss
  402e65:	mov    ah,0x88
  402e67:	lods   eax,DWORD PTR ds:[esi]
  402e68:	jmp    0x402ece
  402e6a:	pop    esi
  402e6b:	dec    eax
  402e6c:	fadd   st(4),st
  402e6e:	jmp    0x2c024351
  402e73:	shl    BYTE PTR [eax+0x68],0x5f
  402e77:	daa    
  402e78:	push   ebp
  402e79:	xor    esp,edi
  402e7b:	shr    ecx,0x10
  402e7e:	test   dl,0x2d
  402e81:	and    al,0x55
  402e83:	inc    ebp
  402e84:	xor    ecx,DWORD PTR [edx+0x931df10]
  402e8a:	sbb    al,0x2a
  402e8c:	shr    DWORD PTR [ecx+0x39],1
  402e8f:	or     BYTE PTR [esp+ecx*1+0x4c],dh
  402e93:	fcmovnu st,st(1)
  402e95:	nop
  402e96:	pop    ebp
  402e97:	xchg   ecx,eax
  402e98:	pop    esi
  402e99:	lea    edx,[ebx]
  402e9b:	adc    bh,dl
  402e9d:	out    dx,eax
  402e9e:	cwde   
  402e9f:	popa   
  402ea0:	test   bl,dh
  402ea2:	sahf   
  402ea3:	mov    cl,0x5a
  402ea5:	mov    WORD PTR [edi+0x1462ac0c],ss
  402eab:	mov    esi,0xa3edfc4d
  402eb0:	loop   0x402e47
  402eb2:	test   DWORD PTR [ebx-0x14a9ec98],esp
  402eb8:	pop    es
  402eb9:	sub    eax,DWORD PTR [eax+esi*4+0x4d9d732]
  402ec0:	mov    al,0x6
  402ec2:	out    dx,ax
  402ec4:	fnsave [esi]
  402ec6:	stos   DWORD PTR es:[edi],eax
  402ec7:	inc    eax
  402ec8:	sub    eax,esp
  402eca:	mov    eax,0x94f53b05
  402ecf:	inc    ecx
  402ed0:	out    0x8a,eax
  402ed2:	xor    BYTE PTR [edi+0x2afef650],ch
  402ed8:	add    al,0xc9
  402eda:	inc    ecx
  402edb:	(bad)  
  402edc:	mov    al,ds:0xfb57606b
  402ee1:	sbb    eax,0xa6cc375c
  402ee6:	sbb    DWORD PTR [esi+0xd9c18ad],ebp
  402eec:	cs ins DWORD PTR es:[edi],dx
  402eee:	ror    DWORD PTR [ecx-0x5],1
  402ef1:	icebp  
  402ef2:	or     cl,BYTE PTR [edx+0x3dbf5b25]
  402ef8:	retf   0x4d0d
  402efb:	xor    al,0x5a
  402efd:	popf   
  402efe:	jno    0x402eaa
  402f00:	mov    ch,0xd7
  402f02:	xor    esp,DWORD PTR [edi+0x32]
  402f05:	(bad)
  402f08:	(bad)  
  402f09:	sbb    edi,edx
  402f0b:	pop    edi
  402f0c:	ss std 
  402f0e:	std    
  402f0f:	pop    DWORD PTR ds:0x32fb283f
  402f15:	fild   DWORD PTR [esi]
  402f17:	xchg   esi,eax
  402f18:	pop    ds
  402f19:	cwde   
  402f1a:	sub    DWORD PTR [edi-0x2f29bdbb],eax
  402f20:	cmc    
  402f21:	push   0x7aec1b2a
  402f26:	pushf  
  402f27:	loope  0x402f63
  402f29:	mov    ds:0xca7ffb7f,al
  402f2e:	and    eax,0x29c48b5b
  402f33:	mov    dl,0xc6
  402f35:	hlt    
  402f36:	push   0x2a1e754f
  402f3b:	dec    ecx
  402f3c:	inc    edx
  402f3d:	(bad)  
  402f3f:	repz xor eax,0x9db7307a
  402f45:	cmp    DWORD PTR [eax+0x32fc668a],0xffffff86
  402f4c:	(bad)  
  402f4d:	jns    0x402f18
  402f4f:	jle    0x402ee8
  402f51:	sbb    eax,0x4b1651a
  402f56:	pop    ebp
  402f57:	addr16 inc esp
  402f59:	mov    eax,0xc2a3e252
  402f5e:	popf   
  402f5f:	test   al,0x54
  402f61:	cmp    DWORD PTR [eax],ebp
  402f63:	fcomi  st,st(6)
  402f65:	pop    DWORD PTR [ebx]
  402f67:	cmc    
  402f68:	and    BYTE PTR ds:0xf2326e2f,bl
  402f6e:	fs dec edx
  402f70:	pop    ds
  402f71:	adc    al,0xe3
  402f73:	call   0x5903:0xcf692fc6
  402f7a:	sub    esp,DWORD PTR [edi]
  402f7c:	aaa    
  402f7d:	mov    ebx,0x10973b20
  402f82:	xlat   BYTE PTR ds:[ebx]
  402f83:	(bad)  
  402f84:	(bad)  
  402f85:	out    0x82,al
  402f87:	mov    bl,0xcf
  402f89:	aaa    
  402f8a:	sbb    ecx,DWORD PTR [edi-0x32d1aafb]
  402f90:	cld    
  402f91:	push   esp
  402f92:	or     eax,0xa6355435
  402f97:	cmp    DWORD PTR [eax-0x592ccc50],0x207d0d6c
  402fa1:	mov    ecx,DWORD PTR [edx+0x34]
  402fa4:	in     al,dx
  402fa5:	(bad)  
  402fa6:	sbb    ecx,DWORD PTR [ebp+0x75]
  402fa9:	and    BYTE PTR [edi],ch
  402fab:	inc    ebx
  402fac:	addr16 addr16 mov edx,ds
  402fb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402fb1:	push   ecx
  402fb2:	imul   BYTE PTR [eax]
  402fb4:	xchg   ebp,eax
  402fb5:	sbb    eax,0xf41a31c1
  402fba:	xor    esi,edx
  402fbc:	add    bh,BYTE PTR [ecx]
  402fbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402fbf:	and    DWORD PTR [esi],esp
  402fc1:	inc    esp
  402fc2:	adc    al,0x2c
  402fc4:	stos   DWORD PTR es:[edi],eax
  402fc5:	dec    ecx
  402fc6:	pop    esp
  402fc7:	lahf   
  402fc8:	lock push eax
  402fca:	xor    ah,al
  402fcc:	mov    al,ds:0xef35a2c8
  402fd1:	sub    ecx,DWORD PTR [ebx+0x42]
  402fd4:	inc    ecx
  402fd5:	mov    ecx,0xb534cd3
  402fda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402fdb:	push   ss
  402fdc:	jns    0x402f7c
  402fde:	test   dl,0xd1
  402fe1:	jae    0x402ff7
  402fe3:	lods   eax,DWORD PTR ds:[esi]
  402fe4:	lods   eax,DWORD PTR ds:[esi]
  402fe5:	jmp    0x403013
  402fe7:	pop    edx
  402fe8:	retf   
  402fe9:	cmp    dl,BYTE PTR ds:0xb1e8e2ec
  402fef:	xor    ebp,edi
  402ff1:	mov    ah,0x83
  402ff3:	repnz test DWORD PTR ds:0x5af4c964,ebp
  402ffa:	sar    DWORD PTR [ebx],cl
  402ffc:	adc    bh,BYTE PTR [esi]
  402ffe:	adc    edi,DWORD PTR [ecx-0x5bc6075f]
  403004:	bound  edx,QWORD PTR [edx]
  403006:	mov    BYTE PTR [ebx],bl
  403008:	add    esi,edi
  40300a:	xor    dh,BYTE PTR [ebp-0x3d]
  40300d:	mov    edx,0xd3446de
  403012:	dec    esp
  403013:	cmp    edi,DWORD PTR [ecx+0x6d]
  403016:	les    ecx,FWORD PTR [edi-0x75]
  403019:	and    BYTE PTR [ebx+0x4a],bl
  40301c:	bound  edi,QWORD PTR [ebp-0x55]
  40301f:	pop    es
  403020:	inc    ebx
  403021:	xor    eax,0x30af2ad2
  403026:	call   0x5ce4:0x84446f96
  40302d:	xchg   ebp,eax
  40302e:	inc    ebp
  40302f:	push   eax
  403030:	out    0x7e,al
  403032:	jae    0x4030a4
  403034:	mov    ds:0x23f6ee6,al
  403039:	hlt    
  40303a:	inc    ebx
  40303b:	fisubr WORD PTR [bp+si]
  40303e:	xchg   esi,eax
  40303f:	or     edx,DWORD PTR [eax+0x62eb7b7a]
  403045:	jno    0x40303e
  403047:	xor    BYTE PTR [esi+0x6a],cl
  40304a:	inc    eax
  40304b:	mov    eax,ds:0x4c3e7a4a
  403050:	adc    eax,0x89fb754d
  403055:	adc    DWORD PTR [edi],eax
  403057:	data16 aad 0xe9
  40305a:	push   edx
  40305b:	xlat   BYTE PTR ds:[ebx]
  40305c:	int    0x7f
  40305e:	data16 clc 
  403060:	mov    al,ds:0x18988833
  403065:	repz pop ds
  403067:	sbb    al,0x52
  403069:	dec    esp
  40306a:	out    dx,eax
  40306b:	xor    eax,0x3ab6d8d
  403070:	jge    0x40306e
  403072:	cli    
  403073:	ror    ch,cl
  403075:	fbstp  TBYTE PTR [ecx]
  403077:	ds icebp 
  403079:	into   
  40307a:	inc    esp
  40307b:	xchg   esi,eax
  40307c:	fldcw  WORD PTR ds:0x3fb17af9
  403082:	jle    0x403042
  403084:	add    esp,esi
  403086:	mov    ebp,0xbcc5c964
  40308b:	xchg   ebp,eax
  40308c:	shl    ebp,0xec
  40308f:	push   ds
  403090:	scas   al,BYTE PTR es:[edi]
  403091:	in     eax,dx
  403092:	mov    DWORD PTR [esi-0x388ffb2],ecx
  403098:	push   esi
  403099:	push   ecx
  40309a:	push   esi
  40309b:	dec    ebx
  40309c:	cmp    eax,0x85c0cdc3
  4030a1:	repz sub cl,al
  4030a4:	popf   
  4030a5:	xor    eax,0x41c6d071
  4030aa:	mov    ch,BYTE PTR ds:0x4cc44445
  4030b0:	adc    edx,esp
  4030b2:	push   esi
  4030b3:	lds    eax,FWORD PTR [ebx+0x24]
  4030b6:	inc    esp
  4030b7:	scas   eax,DWORD PTR es:[edi]
  4030b8:	push   esi
  4030b9:	add    BYTE PTR ss:[edi-0x2103eb95],ch
  4030c0:	inc    ecx
  4030c1:	call   0xecf2b560
  4030c6:	mov    ch,0x81
  4030c8:	sti    
  4030c9:	stc    
  4030ca:	mov    al,0x8b
  4030cc:	or     edi,0x46
  4030cf:	call   0x81393224
  4030d4:	mov    esp,0xdb4e4c45
  4030d9:	mov    DWORD PTR [ecx+eax*1-0x54],ebx
  4030dd:	lea    esi,[edi+0x2ca74b9c]
  4030e3:	gs push es
  4030e5:	add    DWORD PTR [ecx-0x413258cd],0x494f8c3e
  4030ef:	retf   0x5a6a
  4030f2:	test   eax,0xf844433
  4030f7:	shl    esi,cl
  4030f9:	fwait
  4030fa:	dec    edi
  4030fb:	xor    edx,DWORD PTR [eax+0x15]
  4030fe:	(bad)  
  4030ff:	fcmovne st,st(5)
  403101:	data16 mov bl,0xed
  403104:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403105:	or     eax,0xf9d9b125
  40310a:	pop    ebx
  40310b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40310c:	daa    
  40310d:	mov    edx,0xc2617624
  403112:	loop   0x403139
  403114:	push   ss
  403115:	sbb    DWORD PTR ds:0x235832c2,ecx
  40311b:	sahf   
  40311c:	fs xchg esi,eax
  40311e:	xor    al,0x70
  403120:	jmp    0x5b54:0xcf7dae3c
  403127:	mov    ds:0xba933790,al
  40312c:	mov    edi,0x3553ef4f
  403131:	aaa    
  403132:	push   ds
  403133:	scas   eax,DWORD PTR es:[edi]
  403134:	pop    ebx
  403135:	je     0x40315e
  403137:	or     esi,DWORD PTR [edx]
  403139:	mov    ch,0xb8
  40313b:	jne    0x4031aa
  40313d:	cmp    esp,DWORD PTR [edx-0x4a]
  403140:	out    0x5a,eax
  403142:	(bad)  
  403143:	push   ss
  403144:	mov    bh,0xfd
  403146:	jge    0x403184
  403148:	xor    eax,0xccb5f8bc
  40314d:	jle    0x403115
  40314f:	adc    eax,0x5eb470a5
  403154:	lock dec edx
  403156:	lock loope 0x40310f
  403159:	mov    bl,0xb6
  40315b:	outs   dx,DWORD PTR ds:[esi]
  40315c:	jle    0x4031d1
  40315e:	jbe    0x40316e
  403160:	or     ecx,DWORD PTR [esi-0x68]
  403163:	pop    edx
  403164:	mul    bh
  403166:	stos   BYTE PTR es:[edi],al
  403167:	jmp    0x901d3fed
  40316c:	add    ch,BYTE PTR [edx]
  40316e:	mov    BYTE PTR [ecx-0x44ead9bf],dh
  403174:	cli    
  403175:	dec    edx
  403176:	(bad)  
  403177:	pop    ebp
  403178:	jns    0x4031c5
  40317a:	stos   BYTE PTR es:[edi],al
  40317b:	or     dh,al
  40317d:	enter  0xff5d,0xdf
  403181:	push   DWORD PTR [esi+edx*8+0x41c16517]
  403188:	ja     0x40311b
  40318a:	jg     0x40317a
  40318c:	jecxz  0x40314e
  40318e:	aaa    
  40318f:	xor    al,0x4b
  403191:	add    eax,0xef34f69b
  403196:	out    dx,al
  403197:	pop    edi
  403198:	stos   DWORD PTR es:[edi],eax
  403199:	inc    ebp
  40319a:	pop    ecx
  40319c:	pop    ebp
  40319d:	pop    ds
  40319e:	fwait
  40319f:	push   0xffffffd9
  4031a1:	xabort 0x8f
  4031a4:	add    al,0xfd
  4031a6:	ret    0xec6a
  4031a9:	out    0x55,al
  4031ab:	or     al,0x51
  4031ad:	out    dx,al
  4031ae:	es pop ebx
  4031b0:	mov    DWORD PTR [ebp+0x4c93e681],ebp
  4031b6:	or     edx,DWORD PTR [edi+0x781f3972]
  4031bc:	xchg   BYTE PTR [ecx],cl
  4031be:	jecxz  0x40316b
  4031c0:	push   es
  4031c1:	das    
  4031c2:	je     0x4031c4
  4031c4:	imul   edx,DWORD PTR [ecx],0xffffffa4
  4031c7:	and    edi,DWORD PTR [ecx]
  4031c9:	aaa    
  4031ca:	jo     0x403178
  4031cc:	adc    BYTE PTR [esi+0x48d5ed93],bl
  4031d2:	dec    BYTE PTR [ecx]
  4031d4:	ror    BYTE PTR [esi+0x46a252fc],0xa2
  4031db:	jb     0x403243
  4031dd:	mov    ebx,0x352b3a33
  4031e2:	jb     0x4031d0
  4031e4:	dec    ebx
  4031e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031e6:	add    eax,0x224b1392
  4031eb:	sbb    bl,BYTE PTR [ecx-0x4c]
  4031ee:	mov    dl,0x98
  4031f0:	ret    0x3048
  4031f3:	xchg   edi,eax
  4031f4:	icebp  
  4031f5:	jmp    0x4db1:0xcd5959f5
  4031fc:	adc    eax,0x9b2da2db
  403201:	out    0x6a,al
  403203:	(bad)  
  403204:	out    dx,eax
  403205:	adc    DWORD PTR [edx+0xb],edi
  403208:	xor    ebp,edx
  40320a:	in     al,0x3f
  40320c:	cmovp  ebx,DWORD PTR [eax]
  40320f:	addr16 sbb eax,0xcecd6f4c
  403215:	nop
  403216:	out    0x4a,eax
  403218:	add    ebx,edi
  40321a:	cmp    ebx,DWORD PTR [eax-0x1afe86eb]
  403220:	fdiv   st,st(7)
  403222:	les    edx,FWORD PTR [edi]
  403224:	cli    
  403225:	adc    al,0xa8
  403227:	fs pop edi
  403229:	ror    bl,1
  40322b:	inc    edx
  40322c:	add    eax,0x70ca524d
  403231:	ror    DWORD PTR ds:0xc60e1455,cl
  403237:	add    DWORD PTR [ebx],edx
  403239:	mov    ds:0xe473fb5e,al
  40323e:	fldenv [edx-0x76]
  403241:	jnp    0x4031f0
  403243:	sahf   
  403244:	xchg   esi,eax
  403245:	sub    cl,ch
  403247:	sub    eax,0xb3b7b473
  40324c:	aaa    
  40324d:	mov    esp,0xa5ace5d9
  403252:	aad    0xc
  403254:	ffreep st(0)
  403256:	pop    edx
  403257:	shr    BYTE PTR [edi],cl
  403259:	or     BYTE PTR [ebx],dh
  40325b:	fdivrp st(5),st
  40325d:	jmp    0x40321d
  40325f:	mov    DWORD PTR [eax-0x16],esp
  403262:	fchs   
  403264:	jl     0x4031f6
  403266:	jg     0x4032be
  403268:	push   edi
  403269:	push   ecx
  40326a:	sbb    cl,BYTE PTR [ebp-0x6]
  40326d:	or     eax,0xf0faaa01
  403272:	pop    ebx
  403273:	mov    esp,0xed734804
  403278:	lds    edx,FWORD PTR [edx+0x42]
  40327b:	(bad)  
  40327c:	call   0x2fa8:0xa8c81430
  403283:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403284:	mov    al,0xd0
  403286:	mov    edx,DWORD PTR [ebp+0xe]
  403289:	sbb    BYTE PTR [edi+0xb],0x13
  40328d:	push   ebx
  40328e:	pop    ecx
  40328f:	sub    BYTE PTR [ebx-0x4f],bl
  403292:	sbb    BYTE PTR [ebx-0x56],dh
  403295:	popa   
  403296:	call   0x507520d5
  40329b:	ret    
  40329c:	aaa    
  40329d:	repnz inc ecx
  40329f:	sbb    BYTE PTR [esp+ebp*2+0x4ce7b934],cl
  4032a6:	(bad)  ss:[esi-0x2151cd39]
  4032ad:	jg     0x40326d
  4032af:	mov    cl,0xc
  4032b1:	scas   al,BYTE PTR es:[edi]
  4032b2:	ds add al,0xc7
  4032b5:	add    al,0x4c
  4032b7:	call   0x34c874be
  4032bc:	aaa    
  4032bd:	push   0x61
  4032bf:	enter  0x4626,0xa4
  4032c3:	mov    ds:0x39f6323,al
  4032c8:	cmovbe ebp,esi
  4032cb:	jmp    0xdd2f7e79
  4032d0:	sub    DWORD PTR [esi-0x6354b7e7],ebx
  4032d6:	mov    cl,0x97
  4032d8:	add    dh,bh
  4032da:	stos   DWORD PTR es:[edi],eax
  4032db:	add    ah,BYTE PTR [ebp-0x1333203f]
  4032e1:	iret   
  4032e2:	pop    ebx
  4032e3:	jg     0x4032fc
  4032e5:	icebp  
  4032e6:	add    ah,ch
  4032e8:	sbb    ebp,DWORD PTR [ebx]
  4032ea:	inc    edi
  4032eb:	lods   eax,DWORD PTR ds:[esi]
  4032ec:	push   0x27
  4032ee:	inc    edi
  4032ef:	jne    0x40332c
  4032f1:	ss std 
  4032f3:	and    bl,dh
  4032f5:	scas   eax,DWORD PTR es:[edi]
  4032f6:	xor    edi,DWORD PTR [esi-0x79]
  4032f9:	ffree  st(5)
  4032fb:	rcr    BYTE PTR [ecx-0x2f182d9a],cl
  403301:	and    DWORD PTR [edi-0x5c7dde89],edx
  403307:	push   cs
  403308:	enter  0xd032,0x65
  40330c:	neg    BYTE PTR [ebp+0x4b7aa1b9]
  403312:	dec    edi
  403313:	and    DWORD PTR [edi+0x7cf52b8f],ecx
  403319:	pop    edi
  40331a:	xor    esp,DWORD PTR [eax-0x2fea370f]
  403320:	shl    BYTE PTR [ecx],cl
  403322:	popa   
  403323:	push   esi
  403324:	je     0x403376
  403326:	xchg   dl,bh
  403328:	mov    al,0xbb
  40332a:	call   0x4397:0xd5e34f9
  403331:	mov    edi,0x7faa48ff
  403336:	mov    eax,fs:0xa7f7dd31
  40333c:	jecxz  0x40338b
  40333e:	xor    edx,DWORD PTR [ebx-0x7b]
  403341:	mov    esp,0xf2843c50
  403346:	clc    
  403347:	push   cs
  403348:	jge    0x4032cd
  40334a:	sbb    dh,BYTE PTR [edx]
  40334c:	ja     0x4033ae
  40334e:	shl    DWORD PTR [edi],0xb4
  403351:	xlat   BYTE PTR ds:[ebx]
  403352:	adc    bl,BYTE PTR [ebp-0x42]
  403355:	fmulp  st(2),st
  403357:	mov    ebp,0xcd4ba27e
  40335c:	ins    BYTE PTR es:[edi],dx
  40335d:	pusha  
  40335e:	cld    
  40335f:	mov    ebp,0x6c980a5c
  403364:	lds    esp,FWORD PTR [edx]
  403366:	out    0x66,al
  403368:	popa   
  403369:	call   0x3708:0x8d8c6951
  403370:	scas   eax,DWORD PTR es:[edi]
  403371:	icebp  
  403372:	push   ecx
  403373:	rcl    dh,0x53
  403376:	rol    DWORD PTR [edi],0xab
  403379:	imul   esi,DWORD PTR [edx+0x235e25bd],0x82db4f8
  403383:	add    eax,0x86192caa
  403388:	dec    ecx
  403389:	cdq    
  40338a:	mov    eax,ds:0xcd0ef3e1
  40338f:	enter  0x2881,0xd
  403393:	mov    esp,0x3b3abfd
  403398:	cdq    
  403399:	sahf   
  40339a:	stc    
  40339b:	cld    
  40339c:	sbb    dl,cl
  40339e:	sar    DWORD PTR [ecx],1
  4033a0:	jmp    0x403409
  4033a2:	in     eax,0x2d
  4033a4:	inc    eax
  4033a5:	js     0x4033a9
  4033a7:	inc    ebx
  4033a8:	test   DWORD PTR [eax+0x725b94a4],edx
  4033ae:	out    dx,al
  4033af:	cmp    al,0x82
  4033b1:	lods   al,BYTE PTR ds:[esi]
  4033b2:	dec    esi
  4033b3:	fadd   DWORD PTR [ebx-0x6c6bd855]
  4033b9:	dec    esi
  4033ba:	adc    edi,edx
  4033bc:	mov    cl,0x17
  4033be:	adc    BYTE PTR [ebx],bh
  4033c0:	pop    es
  4033c1:	in     eax,0x6f
  4033c3:	xchg   ecx,eax
  4033c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033c5:	test   eax,0x7eabda23
  4033ca:	(bad)  
  4033cb:	jmp    0x6568:0xded2c3b5
  4033d2:	out    0x81,al
  4033d4:	mov    bh,0xdb
  4033d6:	shr    BYTE PTR [edx],cl
  4033d8:	stos   DWORD PTR es:[edi],eax
  4033d9:	lds    ebx,FWORD PTR [ebp-0x1b]
  4033dc:	adc    al,0xf6
  4033de:	das    
  4033df:	das    
  4033e0:	(bad)  
  4033e1:	jne    0x4033bf
  4033e3:	xchg   edx,eax
  4033e4:	push   es
  4033e5:	push   edx
  4033e6:	int3   
  4033e7:	add    ch,BYTE PTR [ebp+0x215f61e7]
  4033ed:	test   eax,0xd82d948
  4033f2:	jg     0x403398
  4033f4:	rcr    DWORD PTR fs:[edi+0x67267509],cl
  4033fb:	sub    BYTE PTR [edi],cl
  4033fd:	aad    0x5c
  4033ff:	mov    DWORD PTR [edx-0x4],esi
  403402:	retf   0xd9db
  403405:	mov    eax,0xfdf477cd
  40340a:	mov    esi,0x29fc976e
  40340f:	lods   al,BYTE PTR ds:[esi]
  403410:	in     al,0xb3
  403412:	in     al,dx
  403413:	scas   al,BYTE PTR es:[edi]
  403414:	and    eax,0x930a0baf
  403419:	mov    al,ds:0xf5f19a60
  40341e:	or     BYTE PTR [eax],al
  403420:	cmp    cl,dh
  403422:	rcr    DWORD PTR [esi],1
  403424:	repnz daa 
  403426:	bound  ebp,QWORD PTR [edx]
  403428:	push   ds
  403429:	xchg   esi,eax
  40342a:	jbe    0x403436
  40342c:	adc    cl,BYTE PTR [edx-0x42]
  40342f:	xor    eax,DWORD PTR [esi+ebp*2+0x15]
  403433:	or     al,0x4e
  403435:	pop    eax
  403436:	scas   eax,DWORD PTR es:[di]
  403438:	shr    BYTE PTR [edx+0x26714543],1
  40343e:	aaa    
  40343f:	sbb    bl,BYTE PTR [ebx]
  403441:	dec    esp
  403442:	shr    BYTE PTR [eax-0x78],0x78
  403446:	cmc    
  403447:	ja     0x403401
  403449:	xor    BYTE PTR [eax+ebx*8],ah
  40344c:	in     eax,0x95
  40344e:	cli    
  40344f:	mov    ds:0xc5c3c002,eax
  403454:	jl     0x40346b
  403456:	and    dl,BYTE PTR [ebx+0x3822aa0a]
  40345c:	xor    DWORD PTR [esi-0x46c8f6b8],esp
  403462:	xchg   edi,eax
  403463:	lods   eax,DWORD PTR ds:[esi]
  403464:	fsubr  st(5),st
  403466:	ds mov cl,0xa8
  403469:	cmp    BYTE PTR [edi-0x50991a83],dh
  40346f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403470:	xor    eax,0x8a8e6f9f
  403475:	push   esp
  403476:	sub    DWORD PTR [esi-0x4d],edi
  403479:	xchg   edx,eax
  40347a:	ficom  DWORD PTR [ebx+0x7e9d3903]
  403480:	sub    eax,0x729105e1
  403485:	or     cl,cl
  403487:	(bad)  
  403488:	cmp    BYTE PTR [ecx],cl
  40348a:	mov    eax,ebp
  40348c:	fld    TBYTE PTR [ebp-0x5e]
  40348f:	jmp    0xd567d56
  403494:	mov    ebp,0x6099fd77
  403499:	and    BYTE PTR [edx+esi*8-0x3c],0x7b
  40349e:	fmul   QWORD PTR [ecx]
  4034a0:	cmp    esi,DWORD PTR [edi]
  4034a2:	(bad)  
  4034a3:	fwait
  4034a4:	mov    edx,0x4c3ce27c
  4034a9:	pusha  
  4034aa:	hlt    
  4034ab:	dec    esi
  4034ac:	pop    ebx
  4034ad:	cs mov ebx,DWORD PTR cs:[eax]
  4034b1:	add    DWORD PTR [eax],ebx
  4034b3:	mov    WORD PTR [eax],?
  4034b5:	pop    ds
  4034b6:	sar    BYTE PTR [eax+0x13ff0953],1
  4034bc:	fdiv   DWORD PTR [eax+ebx*1]
  4034bf:	(bad)  ds:0x10e3781c
  4034c5:	pop    es
  4034c6:	or     eax,0xe2a8dad3
  4034cb:	xchg   ecx,eax
  4034cc:	inc    edi
  4034cd:	ins    DWORD PTR es:[edi],dx
  4034ce:	jbe    0x4034ed
  4034d0:	repz xchg edi,eax
  4034d2:	fsubrp st(4),st
  4034d4:	xchg   esi,eax
  4034d5:	add    esi,DWORD PTR [ecx+0x56fd8ae1]
  4034db:	rcl    BYTE PTR [ebx],1
  4034dd:	stos   DWORD PTR es:[edi],eax
  4034de:	pop    ecx
  4034df:	ds jno 0x40346b
  4034e2:	sar    ah,1
  4034e4:	mov    ebp,0x1d16768b
  4034e9:	push   esi
  4034ea:	(bad)  
  4034ec:	sub    ch,BYTE PTR [esp+eax*1-0xb1db3dd]
  4034f3:	xlat   BYTE PTR ds:[ebx]
  4034f4:	adc    BYTE PTR [edx+0x25],bl
  4034f7:	shl    dl,1
  4034f9:	sbb    bh,dh
  4034fb:	popa   
  4034fc:	(bad)  
  4034fd:	jmp    0x65a:0x76828beb
  403504:	jmp    0x403509
  403506:	add    ebx,ecx
  403508:	fdiv   QWORD PTR [edx+0x61362e30]
  40350e:	and    BYTE PTR [ebp-0x27],0x38
  403512:	mov    cl,0xf5
  403514:	xor    BYTE PTR [bx-0x411e],dh
  403519:	xor    DWORD PTR [eax],ebx
  40351b:	push   esp
  40351c:	lds    edx,FWORD PTR [ebx-0x2cad86fb]
  403522:	fst    DWORD PTR [eax+0x41]
  403525:	ret    0x4eda
  403528:	test   bl,ah
  40352a:	sar    BYTE PTR [edx],0x24
  40352d:	mov    cl,cl
  40352f:	aaa    
  403530:	push   esi
  403531:	sub    dh,bl
  403533:	(bad)  
  403534:	xchg   edx,eax
  403535:	ret    
  403536:	mov    al,ds:0x880feda0
  40353b:	cpuid  
  40353d:	int    0x64
  40353f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403540:	fldcw  WORD PTR [edx]
  403542:	mov    WORD PTR [edi+0x70],cs
  403545:	push   ebp
  403546:	add    BYTE PTR [ecx+0xe95477f],ah
  40354c:	(bad)  
  40354d:	in     al,0x70
  40354f:	push   0xefbb5252
  403554:	xchg   ebx,eax
  403555:	lea    esp,[eax+0x45e041bf]
  40355b:	add    ch,BYTE PTR [ebp+0x3f]
  40355e:	es mov ebp,0xb9285f94
  403564:	or     DWORD PTR [esi+eax*2-0x2f34eeee],0xffffffb4
  40356c:	push   cs
  40356d:	fld    QWORD PTR [esp+edi*8+0x72]
  403571:	out    dx,al
  403572:	adc    DWORD PTR [ecx+ecx*1-0xc],eax
  403576:	sbb    dh,dl
  403578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403579:	mov    ?,WORD PTR [edi+0x1527e86c]
  40357f:	push   0x7b
  403581:	xor    bl,BYTE PTR [edx+edi*1-0x7]
  403585:	mov    edi,0x4c2f29d5
  40358a:	sbb    ah,BYTE PTR [eax-0xe]
  40358d:	retfw  
  40358f:	(bad)  
  403591:	retf   0x6d49
  403594:	and    BYTE PTR [esi-0x57],bl
  403597:	imul   ebp,DWORD PTR [ebx-0x3],0x4bede133
  40359e:	or     al,0x90
  4035a0:	cmp    ecx,esi
  4035a2:	push   ss
  4035a3:	ret    0xf163
  4035a6:	push   ebp
  4035a7:	inc    edi
  4035a8:	fstp   TBYTE PTR [ebx-0x5f]
  4035ab:	mov    edx,0x770ba5f1
  4035b0:	xchg   esi,eax
  4035b1:	sahf   
  4035b2:	cmp    edx,DWORD PTR [ecx-0x3b]
  4035b5:	jo     0x40356c
  4035b7:	(bad)  
  4035b8:	xchg   ecx,eax
  4035b9:	mov    ah,0x8c
  4035bb:	jmp    0x4035d4
  4035bd:	push   esp
  4035be:	mov    ah,BYTE PTR [ebp-0x1c23b742]
  4035c4:	inc    esp
  4035c5:	sti    
  4035c6:	outs   dx,DWORD PTR ds:[esi]
  4035c7:	or     al,0x4b
  4035c9:	in     eax,0xb8
  4035cb:	cmc    
  4035cc:	and    dh,al
  4035ce:	repnz std 
  4035d0:	add    BYTE PTR [ebx],dl
  4035d2:	ss inc edi
  4035d4:	jo     0x4035ed
  4035d6:	das    
  4035d7:	xchg   esp,eax
  4035d8:	bound  esp,QWORD PTR [ebx-0x77eb8667]
  4035de:	inc    esi
  4035df:	mov    bh,0x6a
  4035e1:	mov    eax,ds:0xe4011b6a
  4035e6:	into   
  4035e7:	push   eax
  4035e8:	inc    ebp
  4035e9:	out    dx,eax
  4035ea:	sub    DWORD PTR cs:[ebp+0x64],ebp
  4035ee:	push   es
  4035ef:	add    esi,esp
  4035f1:	mov    al,0x25
  4035f3:	dec    esp
  4035f4:	add    al,0xc0
  4035f6:	mov    ebx,0x5f9e4565
  4035fb:	mov    ch,0x83
  4035fd:	inc    eax
  4035fe:	retf   
  4035ff:	adc    eax,0x244b2cc3
  403604:	push   cs
  403605:	jae    0x4035f5
  403607:	mov    gs,esi
  403609:	aam    0x6c
  40360b:	pop    ss
  40360c:	or     eax,0x1c9cc717
  403611:	loop   0x403670
  403613:	addr16 pop ebp
  403615:	test   BYTE PTR [esi+0x57],al
  403618:	(bad)  
  403619:	fstp   DWORD PTR [edx+0x5097d670]
  40361f:	fst    st(0)
  403621:	in     al,0x9c
  403623:	pop    ss
  403624:	call   0x81598c8d
  403629:	mov    dh,0xf2
  40362b:	jo     0x403626
  40362d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40362e:	fisubr WORD PTR [edx-0x6fd2e60b]
  403634:	pop    ebp
  403635:	jb     0x403638
  403637:	retf   
  403638:	pusha  
  403639:	pop    es
  40363a:	mov    eax,ds:0xe320f5ad
  40363f:	enter  0x406d,0xa6
  403643:	xchg   esp,eax
  403644:	rcr    BYTE PTR [edx-0x10098cb0],0x3c
  40364b:	jo     0x4036b1
  40364d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40364e:	xlat   BYTE PTR ds:[ebx]
  40364f:	loop   0x4035e6
  403651:	jmp    0xc5c6b51a
  403656:	pop    esp
  403657:	in     eax,0x9a
  403659:	dec    ebp
  40365a:	sbb    al,0x6f
  40365c:	push   ds
  40365d:	pop    edi
  40365e:	test   DWORD PTR [edi-0x27542229],ebx
  403664:	push   esi
  403665:	dec    ecx
  403666:	sbb    DWORD PTR [ebp+0x4f],ecx
  403669:	ret    
  40366a:	or     al,0x9a
  40366c:	push   cs
  40366d:	pushf  
  40366e:	pop    eax
  40366f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403670:	and    al,0x31
  403672:	pop    ebx
  403673:	sti    
  403674:	pop    ebx
  403675:	stos   BYTE PTR es:[edi],al
  403676:	pusha  
  403677:	int3   
  403678:	push   0x69af956
  40367d:	pop    ebp
  40367e:	jo     0x403671
  403680:	adc    cl,bh
  403682:	mov    eax,0x7e05f33c
  403687:	imul   BYTE PTR [eax+ecx*2-0x2da37e23]
  40368e:	pop    ecx
  40368f:	sti    
  403690:	or     eax,0x2237a47e
  403695:	mov    ds:0xc0783999,eax
  40369a:	push   edi
  40369b:	push   ebp
  40369c:	clc    
  40369d:	clc    
  40369e:	mov    esp,?
  4036a0:	repnz inc esp
  4036a2:	ficom  WORD PTR fs:[edx+0x3f]
  4036a6:	loop   0x403714
  4036a8:	rcr    BYTE PTR [ecx+0x31],1
  4036ab:	jge    0x4036d8
  4036ad:	jns    0x4036b9
  4036af:	mov    ds:0x7c81d00b,al
  4036b4:	lods   al,BYTE PTR ds:[esi]
  4036b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036b6:	les    esp,FWORD PTR [ebx]
  4036b8:	add    eax,DWORD PTR [edi+0xe]
  4036bb:	and    dh,cl
  4036bd:	jmp    0x6071:0x9b8a4299
  4036c4:	ds mov ecx,0x7d9fc8c1
  4036ca:	jno    0x40368a
  4036cc:	add    BYTE PTR [edi],0x0
  4036cf:	das    
  4036d0:	jo     0x403743
  4036d2:	ins    DWORD PTR es:[edi],dx
  4036d3:	push   edx
  4036d4:	cs aas 
  4036d6:	mov    edi,0xd54513bd
  4036db:	fdiv   QWORD PTR [edi]
  4036dd:	enter  0x11c5,0xba
  4036e1:	or     eax,0x22a634cd
  4036e6:	stos   DWORD PTR es:[edi],eax
  4036e7:	sub    al,0xea
  4036e9:	xchg   edx,eax
  4036ea:	mov    bl,0x40
  4036ec:	je     0x40368b
  4036ee:	xchg   edx,eax
  4036ef:	imul   ecx,DWORD PTR es:[edi],0xf51fc2d9
  4036f6:	(bad)  
  4036f7:	hlt    
  4036f8:	adc    BYTE PTR [eax-0x5e2b5542],cl
  4036fe:	not    DWORD PTR [ecx-0x194dca4c]
  403704:	in     al,dx
  403705:	stos   DWORD PTR es:[edi],eax
  403706:	(bad)  
  403707:	das    
  403708:	inc    edx
  403709:	jmp    FWORD PTR [ebx]
  40370b:	loop   0x4036a9
  40370d:	mov    bh,0x2a
  40370f:	dec    ecx
  403710:	aad    0x69
  403712:	out    dx,al
  403713:	fimul  DWORD PTR [edx-0x40]
  403716:	and    al,0x1e
  403718:	out    dx,eax
  403719:	test   al,0xca
  40371b:	mov    dh,0xbf
  40371d:	in     al,dx
  40371e:	jae    0x403754
  403720:	push   ss
  403721:	sar    DWORD PTR [edi+0x5a8ee8c0],0x43
  403728:	test   BYTE PTR [esp+edi*1-0x1f],dh
  40372c:	push   ds
  40372d:	pop    ecx
  40372e:	ffreep st(0)
  403730:	jg     0x40377b
  403732:	add    cl,BYTE PTR [ebx]
  403734:	sbb    eax,0xc9c6e861
  403739:	mov    esp,0xe322e4b0
  40373e:	sbb    dl,BYTE PTR [edi+0x67e6ee4]
  403744:	xchg   edi,eax
  403745:	jg     0x4036e5
  403747:	xchg   edx,eax
  403748:	repnz sbb al,0xc5
  40374b:	aas    
  40374c:	js     0x4037bd
  40374e:	aas    
  40374f:	push   eax
  403750:	dec    esi
  403751:	mov    edi,0xb12abe77
  403756:	rcr    DWORD PTR es:[ebx+0x5647c0af],cl
  40375d:	pop    esp
  40375e:	xor    DWORD PTR [edx-0x12],eax
  403761:	inc    esi
  403762:	in     al,0x3d
  403764:	add    esp,DWORD PTR [ecx]
  403766:	xor    eax,0x6a2a221
  40376b:	leave  
  40376c:	add    BYTE PTR [esi+0x16],0xfa
  403770:	jp     0x4037ee
  403772:	fld    DWORD PTR [edx-0x9]
  403775:	jno    0x403738
  403777:	add    eax,DWORD PTR [edx-0x52]
  40377a:	lahf   
  40377b:	scas   eax,DWORD PTR es:[edi]
  40377c:	mov    al,ds:0x511dcc9c
  403781:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403782:	add    edx,DWORD PTR [eax+0x7186f144]
  403788:	jp     0x40377d
  40378a:	inc    ebp
  40378b:	dec    ecx
  40378c:	add    BYTE PTR [ecx],al
  40378e:	mov    ecx,DWORD PTR [ebx-0x53ea16d3]
  403794:	imul   edx,DWORD PTR [ecx],0x538196b
  40379a:	mov    ecx,DWORD PTR [ecx]
  40379c:	add    edi,DWORD PTR [edi]
  40379e:	jmp    0x403763
  4037a0:	push   esp
  4037a1:	enter  0xa53b,0x4e
  4037a5:	das    
  4037a6:	dec    edx
  4037a7:	push   esi
  4037a8:	xchg   esp,eax
  4037a9:	xchg   esp,eax
  4037aa:	out    0x32,al
  4037ac:	or     DWORD PTR ds:0x1a03,edi
  4037b1:	or     eax,0x954b6083
  4037b6:	imul   edi,DWORD PTR [edi-0x34],0x516e491
  4037bd:	mov    eax,ds:0xd2b03a1f
  4037c2:	inc    edi
  4037c3:	sub    eax,0xab35bdaf
  4037c8:	(bad)  
  4037c9:	loop   0x403790
  4037cb:	outs   dx,DWORD PTR ds:[esi]
  4037cc:	int3   
  4037cd:	jne    0x40378f
  4037cf:	rcr    ah,1
  4037d1:	mov    edi,0xba754dce
  4037d6:	fs in  al,dx
  4037d8:	and    eax,0xe0c092ca
  4037dd:	mov    DWORD PTR [ebp-0x14d62404],0x1c15946e
  4037e7:	test   BYTE PTR [eax+0x690b0dd5],al
  4037ed:	inc    esp
  4037ee:	jl     0x40380f
  4037f0:	fiadd  WORD PTR [esi]
  4037f2:	mov    WORD PTR [ebx+0x3dcdf80c],fs
  4037f8:	ror    DWORD PTR [edi-0x761f2ae4],1
  4037fe:	push   0xfffffff1
  403800:	push   esi
  403801:	mov    al,bh
  403803:	je     0x40386e
  403805:	arpl   WORD PTR [ecx],bp
  403807:	xchg   ebp,eax
  403808:	cs pop ebx
  40380a:	ret    
  40380b:	inc    ebx
  40380c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40380d:	jp     0x40383b
  40380f:	addr16 ret 0x1443
  403813:	mov    edx,0x9e469056
  403818:	imul   edx,DWORD PTR [eax+0x1d],0xeae14346
  40381f:	mov    fs,WORD PTR [ecx+ebp*4]
  403822:	das    
  403823:	dec    edi
  403824:	pop    esp
  403825:	and    ch,ah
  403827:	jle    0x4037d6
  403829:	mov    edx,0x8f3e5275
  40382e:	jnp    0x403837
  403830:	mov    ebx,0x3a318e3e
  403835:	rol    BYTE PTR [edi],1
  403837:	pop    edi
  403838:	xchg   edx,eax
  403839:	dec    ebx
  40383a:	inc    ebx
  40383b:	dec    ebp
  40383c:	loopne 0x403806
  40383e:	pop    ebx
  40383f:	sbb    dl,ch
  403841:	jbe    0x403855
  403843:	sahf   
  403844:	pushf  
  403845:	ret    
  403846:	xlat   BYTE PTR ds:[ebx]
  403847:	push   esp
  403848:	push   es
  403849:	jno    0x4038a6
  40384b:	imul   DWORD PTR [eax*2-0x76f738e9]
  403852:	adc    esp,DWORD PTR [ecx-0x740bbaff]
  403858:	inc    ebp
  403859:	hlt    
  40385a:	mov    ecx,DWORD PTR [ebp-0x8]
  40385d:	mov    ecx,DWORD PTR [ecx]
  40385f:	mov    ecx,DWORD PTR [ecx]
  403861:	mov    ecx,DWORD PTR [ecx]
  403863:	mov    DWORD PTR [ecx+0x1],eax
  403866:	mov    al,BYTE PTR [ebp-0x1]
  403869:	mov    ecx,DWORD PTR [ebp-0x8]
  40386c:	mov    ecx,DWORD PTR [ecx]
  40386e:	mov    ecx,DWORD PTR [ecx]
  403870:	mov    ecx,DWORD PTR [ecx]
  403872:	push   DWORD PTR [ebp-0x2c]
  403875:	xor    al,0x6f
  403877:	sub    al,0xd
  403879:	mov    BYTE PTR [ecx],al
  40387b:	mov    eax,ds:0x4217ce
  403880:	push   DWORD PTR [eax]
  403882:	push   DWORD PTR ds:0x421a2a
  403888:	push   DWORD PTR ds:0x4217d6
  40388e:	push   DWORD PTR ds:0x421a0a
  403894:	push   DWORD PTR ds:0x421a9e
  40389a:	push   DWORD PTR [ebp-0x30]
  40389d:	push   DWORD PTR [ebp-0x20]
  4038a0:	mov    eax,DWORD PTR [ebp-0x8]
  4038a3:	mov    eax,DWORD PTR [eax]
  4038a5:	mov    eax,DWORD PTR [eax]
  4038a7:	mov    eax,DWORD PTR [eax]
  4038a9:	call   eax
  4038ab:	mov    eax,DWORD PTR [ebp-0x34]
  4038ae:	mov    ecx,DWORD PTR ds:0x4219ce
  4038b4:	add    DWORD PTR [eax],ecx
  4038b6:	jmp    0x405c6b
  4038bb:	fnstenv [edx-0x73]
  4038be:	xchg   ebp,eax
  4038bf:	gs xchg ebp,eax
  4038c1:	test   eax,0x7c0e640e
  4038c6:	sbb    ch,ah
  4038c8:	xchg   edx,eax
  4038c9:	sahf   
  4038ca:	mov    edx,cs
  4038cc:	pop    edi
  4038cd:	bound  esp,QWORD PTR [edx-0x36]
  4038d0:	pop    edi
  4038d1:	bound  esp,QWORD PTR [edx-0x5a]
  4038d4:	sar    DWORD PTR [eax-0x63],0x3a
  4038d8:	inc    esi
  4038d9:	xchg   edi,eax
  4038da:	ret    0x2c0c
  4038dd:	dec    ecx
  4038de:	arpl   ax,bp
  4038e0:	mov    BYTE PTR [ebx],ch
  4038e2:	scas   eax,DWORD PTR es:[edi]
  4038e3:	push   edi
  4038e4:	iret   
  4038e5:	in     eax,0x24
  4038e7:	ins    BYTE PTR es:[edi],dx
  4038e8:	loopne 0x403931
  4038ea:	mov    edi,0x387b6a9
  4038ef:	leave  
  4038f0:	cmp    DWORD PTR [ebp+0x1e3b02c5],esp
  4038f6:	inc    esp
  4038f7:	fnstsw WORD PTR [ebx+0x44275aaa]
  4038fd:	xlat   BYTE PTR gs:[ebx]
  4038ff:	jb     0x403971
  403901:	sti    
  403902:	mov    esi,ecx
  403904:	push   esp
  403905:	mov    ds:0x86813ced,eax
  40390a:	shl    DWORD PTR [edx-0x70596ab8],1
  403910:	xchg   BYTE PTR [edi-0x41df830a],bl
  403916:	jb     0x40391d
  403918:	inc    esp
  403919:	sub    BYTE PTR [edi-0x7076ffa3],0xac
  403920:	loop   0x40399f
  403922:	inc    esp
  403923:	in     al,0x16
  403925:	inc    BYTE PTR [eax]
  403927:	pop    esi
  403928:	std    
  403929:	daa    
  40392a:	inc    ecx
  40392b:	jg     0x4039a1
  40392d:	jb     0x4038be
  40392f:	test   eax,0x3753b4b1
  403934:	dec    edi
  403935:	xor    bh,ah
  403937:	mov    al,0x5f
  403939:	stos   DWORD PTR es:[di],eax
  40393b:	cmp    eax,0x34032f63
  403940:	test   DWORD PTR [esi-0x77],0x24ded616
  403947:	mov    edx,eax
  403949:	daa    
  40394a:	mov    dh,0x88
  40394c:	fcomp  QWORD PTR [ecx+0x59]
  40394f:	out    dx,al
  403950:	mov    eax,0x1377f1b2
  403955:	call   0x88a0:0x8f6ad1f0
  40395c:	cmp    BYTE PTR [edx+0x2a],cl
  40395f:	push   0x3
  403961:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403962:	adc    ebp,DWORD PTR [ebx+0x1b]
  403965:	psrad  mm2,QWORD PTR [esp+ecx*1-0x27f642f5]
  40396d:	cmp    BYTE PTR [ecx],bl
  40396f:	dec    ebx
  403970:	js     0x40395e
  403972:	mov    eax,0x8b71e8d9
  403977:	sbb    eax,0x915b57ab
  40397c:	push   ebx
  40397d:	lods   al,BYTE PTR ds:[esi]
  40397e:	and    BYTE PTR [eax-0x6e],al
  403981:	push   ebx
  403982:	add    al,0x5d
  403984:	imul   eax,DWORD PTR [edi+ebx*8-0x20],0xf18f037a
  40398c:	sbb    DWORD PTR [ecx-0x3],edi
  40398f:	pop    eax
  403990:	push   0x14158f87
  403995:	mov    al,ds:0xd80e1521
  40399a:	(bad)  
  40399c:	daa    
  40399d:	mov    edx,0x73c539c5
  4039a2:	mov    edi,0x3b55f0a8
  4039a7:	adc    esp,DWORD PTR [edi-0x7ab81bf4]
  4039ad:	in     eax,dx
  4039ae:	inc    eax
  4039af:	cwde   
  4039b0:	idiv   DWORD PTR [ebx+0x1d5e631a]
  4039b6:	adc    eax,edi
  4039b8:	pop    ecx
  4039b9:	adc    BYTE PTR [edx+0x20],dh
  4039bc:	mov    ecx,esi
  4039be:	leave  
  4039bf:	or     esp,DWORD PTR [eax]
  4039c1:	retfw  
  4039c3:	icebp  
  4039c4:	addr16 mov eax,0xa8b27ed8
  4039ca:	inc    ebx
  4039cb:	adc    eax,0xdd2b202e
  4039d0:	and    DWORD PTR [eax+0x16],esi
  4039d3:	mov    ds:0xc44f3d75,eax
  4039d8:	xchg   ebx,eax
  4039d9:	rcr    DWORD PTR [ebp+0x3e],cl
  4039dc:	cmp    ch,ah
  4039de:	jo     0x4039dd
  4039e0:	pop    es
  4039e1:	data16 mov al,ds:0x7b988843
  4039e7:	fcmovne st,st(5)
  4039e9:	dec    eax
  4039ea:	pusha  
  4039eb:	adc    ah,0x1d
  4039ee:	jbe    0x4039b5
  4039f0:	sbb    DWORD PTR ds:0xd0a9b7f6,0xffffffe9
  4039f7:	jp     0x403a72
  4039f9:	mov    ah,0x50
  4039fb:	or     eax,0x365926eb
  403a00:	arpl   di,di
  403a02:	pop    ebp
  403a03:	hlt    
  403a04:	sub    cl,bh
  403a06:	cld    
  403a07:	inc    edi
  403a08:	or     eax,0x33e790ba
  403a0d:	jno    0x403a60
  403a0f:	out    0xfa,eax
  403a11:	shr    DWORD PTR ds:0x6bb72708,0x3b
  403a18:	pop    es
  403a19:	clc    
  403a1a:	fimul  DWORD PTR [edx-0x92650b6]
  403a20:	aam    0x1b
  403a22:	ret    
  403a23:	popf   
  403a24:	mov    ds:0xce0badcb,al
  403a29:	in     al,0xa5
  403a2b:	shr    DWORD PTR [eax],0xf4
  403a2e:	cwde   
  403a2f:	aas    
  403a30:	mov    ds:0xd9f07325,al
  403a35:	mov    ds,WORD PTR [esi+0x62]
  403a38:	cdq    
  403a39:	inc    edx
  403a3a:	add    al,0x96
  403a3c:	xchg   ebp,eax
  403a3d:	and    al,0x5e
  403a3f:	fisttp WORD PTR [ebx+0x3486aae2]
  403a45:	pusha  
  403a46:	int    0x5e
  403a48:	cmp    dl,BYTE PTR [edi-0x5d]
  403a4b:	inc    esi
  403a4c:	aas    
  403a4d:	ret    0x897d
  403a50:	and    DWORD PTR [ecx+0x44],0xffffffb8
  403a54:	jecxz  0x403a46
  403a56:	aas    
  403a57:	xor    eax,0x1dcd781c
  403a5c:	inc    ecx
  403a5d:	dec    eax
  403a5e:	repnz add ebp,DWORD PTR [eax-0x1c683bf]
  403a65:	cmp    eax,0x4b9f8fdb
  403a6a:	stc    
  403a6b:	mov    eax,ds:0x860f7803
  403a70:	inc    ebx
  403a71:	outs   dx,BYTE PTR ds:[esi]
  403a72:	call   0xd0ec:0x6c211c0d
  403a79:	clc    
  403a7a:	xlat   BYTE PTR ds:[ebx]
  403a7b:	add    DWORD PTR ds:[eax+0x63],eax
  403a7f:	fnstsw WORD PTR [edx+0x7f18d232]
  403a85:	in     eax,0x69
  403a87:	jp     0x403aee
  403a89:	mov    dl,0x23
  403a8b:	ja     0x403a91
  403a8d:	sbb    edx,DWORD PTR [eax+0x18d9bd9a]
  403a93:	scas   al,BYTE PTR es:[edi]
  403a94:	adc    edx,0xffffffb8
  403a97:	xor    BYTE PTR [ebp-0x4027b0a1],ch
  403a9d:	jb     0x403a8e
  403a9f:	fsubrp st(3),st
  403aa1:	bound  edi,QWORD PTR [edx+ebp*1+0x21]
  403aa5:	adc    bl,BYTE PTR [edi+0x52]
  403aa8:	test   edx,edi
  403aaa:	dec    esp
  403aab:	pushf  
  403aac:	std    
  403aad:	not    DWORD PTR [edx+eax*1+0x2255ed23]
  403ab4:	shr    al,cl
  403ab6:	out    0x79,al
  403ab8:	fst    QWORD PTR [ecx]
  403aba:	int    0xa2
  403abc:	pop    ebx
  403abd:	scas   al,BYTE PTR es:[edi]
  403abe:	dec    eax
  403abf:	ss xor al,0x6f
  403ac2:	out    0xd3,al
  403ac4:	icebp  
  403ac5:	pop    esp
  403ac6:	cmp    eax,0x5e230c0a
  403acb:	(bad)  
  403acc:	inc    eax
  403acd:	fidivr DWORD PTR [ebx+ebx*4+0x466aa01f]
  403ad4:	sbb    BYTE PTR [esi-0x22],0x2e
  403ad8:	repnz int3 
  403ada:	iret   
  403adb:	add    cl,bl
  403add:	in     eax,0x78
  403adf:	inc    esp
  403ae0:	lock lock mov eax,0xa239bc0a
  403ae7:	scas   al,BYTE PTR es:[edi]
  403ae8:	adc    ebx,DWORD PTR [eax+0x32cd8036]
  403aee:	sar    dl,cl
  403af0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403af1:	test   BYTE PTR [esi],dl
  403af3:	call   0xf443:0x85e64343
  403afa:	aam    0xaf
  403afc:	sub    al,BYTE PTR [eax]
  403afe:	cmp    ah,BYTE PTR [ebx-0x2a]
  403b01:	mov    ch,0xfa
  403b03:	data16 mov al,0x0
  403b06:	scas   eax,DWORD PTR es:[edi]
  403b07:	inc    eax
  403b08:	add    ah,BYTE PTR [ecx]
  403b0a:	jae    0x403b18
  403b0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b0d:	imul   esi,esi,0xffffffa1
  403b10:	inc    ecx
  403b11:	cdq    
  403b12:	das    
  403b13:	and    DWORD PTR [eax],edx
  403b15:	pop    edi
  403b16:	(bad)  
  403b17:	sti    
  403b18:	stos   BYTE PTR es:[edi],al
  403b19:	clc    
  403b1a:	fisttp DWORD PTR [ebp+0x20]
  403b1d:	shr    BYTE PTR [eax-0x18ae07cf],0x79
  403b24:	xchg   DWORD PTR [esi+ebp*8+0x2e],edx
  403b28:	repz retf 
  403b2a:	std    
  403b2b:	sbb    ch,BYTE PTR [eax+0x31]
  403b2e:	fcomp  DWORD PTR [edx]
  403b30:	jno    0x403ad3
  403b32:	sbb    eax,0x5d366240
  403b37:	jne    0x403b6e
  403b39:	popa   
  403b3a:	out    0xfd,al
  403b3c:	shr    BYTE PTR [esi],cl
  403b3e:	cdq    
  403b3f:	nop
  403b40:	cli    
  403b41:	adc    ebp,edi
  403b43:	hlt    
  403b44:	ret    0x8f0b
  403b47:	sub    BYTE PTR ds:0x52f23fab,ch
  403b4d:	out    dx,eax
  403b4e:	xor    esi,ecx
  403b50:	mov    ebp,0xd1635419
  403b55:	mov    BYTE PTR [ebx+0x7f569d4a],al
  403b5b:	ror    BYTE PTR [edx-0x8],1
  403b5e:	outs   dx,BYTE PTR ds:[esi]
  403b5f:	adc    BYTE PTR [eax],cl
  403b61:	(bad)  
  403b62:	mov    ecx,0xe59f2f7b
  403b67:	out    dx,al
  403b68:	xchg   ecx,eax
  403b69:	jns    0x403b98
  403b6b:	fwait
  403b6c:	mov    WORD PTR [ecx+eiz*8],ss
  403b6f:	loop   0x403afe
  403b71:	aad    0x17
  403b73:	dec    ebp
  403b74:	div    BYTE PTR [ebp-0x31c722f5]
  403b7a:	pop    ebp
  403b7b:	jp     0x403bdf
  403b7d:	add    ecx,0x86a163e8
  403b83:	inc    edx
  403b84:	dec    eax
  403b85:	add    bl,ah
  403b87:	xchg   edx,eax
  403b88:	mov    al,0x71
  403b8a:	cmp    BYTE PTR [edx+0x6b],ch
  403b8d:	sub    ah,ch
  403b8f:	xlat   BYTE PTR ds:[ebx]
  403b90:	jg     0x403bbc
  403b92:	mov    edi,0xbf0b2830
  403b97:	mov    eax,ds:0xb5bbbf90
  403b9c:	arpl   dx,bp
  403b9e:	or     al,0x9c
  403ba0:	repz mov edx,0x233a928c
  403ba6:	out    dx,eax
  403ba7:	xor    dh,ch
  403ba9:	outs   dx,BYTE PTR ds:[esi]
  403baa:	bound  ebp,QWORD PTR [eax+0x6a51c25b]
  403bb0:	push   esp
  403bb1:	in     eax,0x2d
  403bb3:	sahf   
  403bb4:	xor    BYTE PTR [ebp-0x5e],bl
  403bb7:	mov    bl,BYTE PTR [esi-0x1f]
  403bba:	pop    ss
  403bbb:	xchg   ebp,eax
  403bbc:	arpl   bx,sp
  403bbe:	pop    edx
  403bbf:	rol    DWORD PTR [edi+0x27],1
  403bc2:	leave  
  403bc3:	and    DWORD PTR [edx+0x13404a60],edx
  403bc9:	mov    ebx,0x396ebfac
  403bce:	fst    DWORD PTR [ebp-0x29de20c1]
  403bd4:	xor    cl,BYTE PTR [ebx]
  403bd6:	dec    esp
  403bd7:	lea    esi,[ecx+esi*4-0x6886c972]
  403bde:	cli    
  403bdf:	nop
  403be0:	jl     0x403c1d
  403be2:	outs   dx,BYTE PTR ds:[esi]
  403be3:	xchg   ecx,eax
  403be4:	ss add ch,bh
  403be7:	fs in  al,dx
  403be9:	dec    eax
  403bea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403beb:	imul   ebp,DWORD PTR [ecx-0x316917ce],0x2b
  403bf2:	aaa    
  403bf3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403bf4:	jno    0x403bd2
  403bf6:	inc    ebp
  403bf7:	mov    ds:0x66ee4126,eax
  403bfc:	or     al,0x30
  403bfe:	push   esp
  403bff:	dec    eax
  403c00:	neg    DWORD PTR [ecx+0x20487f9b]
  403c06:	dec    esi
  403c07:	mov    esp,0x49b15afa
  403c0c:	or     DWORD PTR [edx+ecx*4],edi
  403c0f:	jmp    0x4c31:0x4fe4a797
  403c16:	shr    ebx,0x2a
  403c19:	shr    edx,cl
  403c1b:	push   ss
  403c1c:	repz bound esi,QWORD PTR [esi+0x63]
  403c20:	bound  esp,QWORD PTR [edi]
  403c22:	pop    ebx
  403c23:	jne    0x403c3d
  403c25:	not    DWORD PTR [ecx]
  403c27:	in     eax,dx
  403c28:	test   BYTE PTR [edi-0x5f],ah
  403c2b:	sbb    BYTE PTR [ebx+0x74],bl
  403c2e:	cmp    DWORD PTR [ebx+0x6aa3611e],ecx
  403c34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c35:	or     BYTE PTR [ebx],dl
  403c37:	inc    eax
  403c38:	mov    ds:0x24e8c69b,eax
  403c3d:	xor    BYTE PTR [edx+0x32356c73],al
  403c43:	xchg   DWORD PTR [edx-0x1a],edi
  403c46:	jmp    0xbca1:0xb921e94d
  403c4d:	sbb    al,0x42
  403c4f:	cmp    DWORD PTR [ebp+0x7c],0xffffffc6
  403c53:	fst    DWORD PTR [edi+0x14d56340]
  403c59:	addr16 out 0x42,eax
  403c5c:	dec    edi
  403c5d:	arpl   WORD PTR [eax-0x5e],bx
  403c60:	inc    eax
  403c61:	mov    eax,0x25277d63
  403c66:	xchg   esi,eax
  403c67:	je     0x403c23
  403c69:	pop    eax
  403c6a:	xchg   ebp,eax
  403c6b:	(bad)  
  403c6c:	std    
  403c6d:	sbb    DWORD PTR [eax+0x617adf61],edi
  403c73:	inc    edx
  403c74:	jecxz  0x403c2c
  403c76:	addr16 shl edx,1
  403c79:	push   0xb1bd6a17
  403c7e:	pop    eax
  403c7f:	sub    edx,ebp
  403c81:	div    cl
  403c83:	or     al,0xa1
  403c85:	push   ecx
  403c86:	cs push cs
  403c88:	sub    dh,ah
  403c8a:	imul   esi,DWORD PTR [ecx-0x71e74577],0xbb05c35c
  403c94:	ret    
  403c95:	mov    esi,0xcc8df1ae
  403c9a:	inc    esp
  403c9b:	stos   DWORD PTR es:[edi],eax
  403c9c:	inc    eax
  403c9d:	hlt    
  403c9e:	push   0xd
  403ca0:	(bad)  
  403ca1:	popa   
  403ca2:	into   
  403ca3:	xchg   ebx,eax
  403ca4:	and    DWORD PTR [esi],edi
  403ca6:	xor    eax,0x2093d5db
  403cab:	repnz xor edi,DWORD PTR [edx-0x4e0f1917]
  403cb2:	lods   al,BYTE PTR ds:[esi]
  403cb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403cb4:	jg     0x403c6f
  403cb6:	add    DWORD PTR [esp+edx*8+0x34185f96],edi
  403cbd:	cmp    dh,BYTE PTR [ebx+0x38]
  403cc0:	das    
  403cc1:	out    0x52,eax
  403cc3:	jmp    0x977a3d47
  403cc8:	retf   0x7fa3
  403ccb:	inc    edx
  403ccc:	repnz loop 0x403ce5
  403ccf:	mov    al,ds:0x8b93a330
  403cd4:	outs   dx,BYTE PTR ds:[esi]
  403cd5:	dec    esi
  403cd6:	lods   eax,DWORD PTR ds:[esi]
  403cd7:	adc    DWORD PTR [eax+ecx*2],ecx
  403cda:	and    BYTE PTR ds:0xd2a5ad2a,dl
  403ce0:	add    eax,0xb88b5d10
  403ce5:	iret   
  403ce6:	fs push 0xc2345116
  403cec:	int3   
  403ced:	lods   eax,DWORD PTR ds:[esi]
  403cee:	push   ebx
  403cef:	aas    
  403cf0:	push   ebx
  403cf1:	neg    esp
  403cf3:	mov    al,ds:0x65c159c3
  403cf8:	in     eax,dx
  403cf9:	mov    ebx,0x92b8fc90
  403cfe:	out    0xdc,al
  403d00:	sub    BYTE PTR [esi],dh
  403d02:	retf   0x6d72
  403d05:	stos   DWORD PTR es:[edi],eax
  403d06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d07:	cmp    DWORD PTR [edx+0x60],esi
  403d0a:	or     BYTE PTR [ebp+0x42],bl
  403d0d:	lds    esp,FWORD PTR [edx]
  403d0f:	retf   
  403d10:	inc    ecx
  403d11:	mov    ch,0x4
  403d13:	leave  
  403d14:	cwde   
  403d15:	data16 mov cl,0x74
  403d18:	addr16 mov dh,0x45
  403d1b:	mov    bl,BYTE PTR [ebx-0x18]
  403d1e:	ds xlat BYTE PTR cs:[ebx]
  403d21:	push   ds
  403d22:	idiv   DWORD PTR [edx+0x6ae16b4a]
  403d28:	sbb    DWORD PTR [edi-0x77f41685],ebx
  403d2e:	scas   eax,DWORD PTR es:[edi]
  403d2f:	dec    ebp
  403d30:	xor    al,0x50
  403d32:	pop    ds
  403d33:	sbb    edi,DWORD PTR [ebx-0x59ba9a7a]
  403d39:	push   es
  403d3a:	out    dx,al
  403d3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d3c:	lock cmp DWORD PTR [ebx-0x77637c36],ecx
  403d43:	fistp  WORD PTR [ecx+eiz*1-0x60a182a2]
  403d4a:	xlat   BYTE PTR ds:[ebx]
  403d4b:	and    ebx,DWORD PTR [ecx-0x67463438]
  403d51:	xchg   BYTE PTR ds:0x3aae81fc,ah
  403d57:	sub    DWORD PTR [edx+eiz*2-0x50dbdcc7],ebx
  403d5e:	dec    ebp
  403d5f:	or     eax,0x9c62eeed
  403d64:	mov    ch,0x85
  403d66:	cs enter 0x8f8e,0x59
  403d6b:	cmc    
  403d6c:	int    0x59
  403d6e:	fiadd  WORD PTR [ecx+0x46ed3128]
  403d74:	aad    0xda
  403d76:	call   0x61cd:0x6460dd0e
  403d7d:	mov    bl,0x8a
  403d7f:	xchg   ebp,eax
  403d80:	out    0x3a,eax
  403d82:	loop   0x403d8c
  403d84:	stc    
  403d85:	push   edi
  403d86:	adc    cl,BYTE PTR [ebx+ebp*8]
  403d89:	das    
  403d8a:	mov    esp,0x2db8ff0d
  403d8f:	repnz cmp bh,BYTE PTR [edi]
  403d92:	test   DWORD PTR [esi-0x6c90c0c5],eax
  403d98:	jnp    0x403da1
  403d9a:	xor    esi,DWORD PTR [edx+0x38053dd8]
  403da0:	xchg   BYTE PTR [esi+0x40],ch
  403da3:	popa   
  403da4:	jns    0x403dc8
  403da6:	mov    cl,0x5c
  403da8:	xor    al,0xd9
  403daa:	shr    DWORD PTR ds:0xc52f5fbd,1
  403db0:	dec    esp
  403db1:	add    esi,edx
  403db3:	push   edx
  403db4:	sbb    DWORD PTR [esi-0x1],edx
  403db7:	cld    
  403db8:	les    eax,FWORD PTR [ebx+0x5ca85d70]
  403dbe:	mov    al,0xc7
  403dc0:	push   edx
  403dc1:	sbb    DWORD PTR [eax],ebx
  403dc3:	cmp    DWORD PTR [edi+0x2b],edx
  403dc6:	inc    edi
  403dc7:	adc    ecx,0x4739db80
  403dcd:	adc    DWORD PTR [esi-0x62],0x22
  403dd1:	sub    DWORD PTR [ecx],ebp
  403dd3:	jecxz  0x403d5b
  403dd5:	outs   dx,DWORD PTR ds:[esi]
  403dd6:	xchg   ecx,eax
  403dd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403dd8:	adc    esp,DWORD PTR cs:[ecx-0xde3e9ef]
  403ddf:	mov    cl,0x31
  403de1:	dec    ebx
  403de2:	jge    0x403e24
  403de4:	lods   eax,DWORD PTR ds:[esi]
  403de5:	fucomip st,st(1)
  403de7:	cmp    ebx,DWORD PTR [ebx]
  403de9:	push   edx
  403dea:	jbe    0x403e52
  403dec:	std    
  403ded:	dec    edi
  403dee:	sbb    eax,0xcfb41965
  403df3:	aas    
  403df4:	out    dx,al
  403df5:	push   edx
  403df6:	loopne 0x403e48
  403df8:	pop    edx
  403df9:	popf   
  403dfa:	sub    DWORD PTR [ecx-0x247582ba],ebp
  403e00:	push   edi
  403e01:	inc    edi
  403e02:	in     eax,0x43
  403e04:	sub    al,0x43
  403e06:	aad    0xde
  403e08:	adc    BYTE PTR [edx],dl
  403e0a:	jnp    0x403e80
  403e0c:	out    0xf0,al
  403e0e:	fnstsw WORD PTR [esi*4+0x68c081d3]
  403e15:	imul   ecx,DWORD PTR [esi-0x52240e38],0x4e
  403e1c:	mov    ecx,DWORD PTR [ebp-0x36]
  403e1f:	mov    bl,0x57
  403e21:	mov    edi,0xfcd01afc
  403e26:	cwde   
  403e27:	xor    dl,bh
  403e29:	neg    DWORD PTR [ecx]
  403e2b:	push   esi
  403e2c:	ficomp WORD PTR [edi-0x2a]
  403e2f:	lahf   
  403e30:	inc    ebp
  403e31:	adc    eax,0x880711fd
  403e36:	dec    esi
  403e37:	cmp    eax,0x5b34acbf
  403e3c:	test   eax,0x5ee8b432
  403e41:	push   0x5900aef0
  403e46:	xchg   bl,ch
  403e48:	fcomp  DWORD PTR [esi+0x2cdeba59]
  403e4e:	xor    eax,0xfc841d7a
  403e53:	out    0x25,al
  403e55:	aaa    
  403e56:	fs ret 0x6a1
  403e5a:	mov    ecx,0xf9c1febd
  403e5f:	mov    bl,0xbd
  403e61:	xor    eax,0xb39f5313
  403e66:	shl    BYTE PTR [ecx+edx*1+0x2c1aca43],0xcd
  403e6e:	cs mov ah,0xa0
  403e71:	push   ss
  403e72:	icebp  
  403e73:	inc    esi
  403e74:	inc    ebp
  403e75:	push   0xffffffde
  403e77:	sub    al,0xed
  403e79:	inc    edi
  403e7a:	dec    ecx
  403e7b:	in     al,dx
  403e7c:	in     eax,dx
  403e7d:	cmc    
  403e7e:	aaa    
  403e7f:	push   ebp
  403e80:	mov    edi,0x63c4b783
  403e85:	fwait
  403e86:	jl     0x403e54
  403e88:	mov    DWORD PTR [eax],esi
  403e8a:	dec    esi
  403e8b:	pusha  
  403e8c:	push   esp
  403e8d:	dec    ebp
  403e8e:	inc    esp
  403e8f:	popf   
  403e90:	xchg   esp,eax
  403e91:	test   edi,ecx
  403e93:	jmp    0x403e62
  403e95:	jo     0x403efa
  403e97:	iret   
  403e98:	pop    ebp
  403e99:	mov    al,0x1a
  403e9b:	add    al,0x5e
  403e9d:	xor    dl,BYTE PTR [ebp+0x44db9b03]
  403ea3:	and    al,0xed
  403ea5:	pop    edi
  403ea6:	fidiv  DWORD PTR [ebp+ebx*8-0x5d]
  403eaa:	icebp  
  403eab:	cld    
  403eac:	push   edx
  403ead:	fcom   QWORD PTR [ebp-0x258e6edd]
  403eb3:	add    ebx,DWORD PTR ds:0x5a92d6cf
  403eb9:	outs   dx,BYTE PTR ds:[esi]
  403eba:	cmp    ah,bh
  403ebc:	jns    0x403f21
  403ebe:	cmp    edi,DWORD PTR [ebp+0x40]
  403ec1:	loop   0x403ed5
  403ec3:	neg    BYTE PTR [ebx+0x64]
  403ec6:	mov    ch,0xc1
  403ec8:	mov    ds:0x91370afe,al
  403ecd:	jge    0x403e6d
  403ecf:	popf   
  403ed0:	push   esi
  403ed1:	cmp    bh,BYTE PTR [ebx+0x450de0e]
  403ed7:	data16 test BYTE PTR [edi-0x27],dl
  403edb:	push   edx
  403edc:	ror    BYTE PTR [edi],0x79
  403edf:	lds    ecx,FWORD PTR [ebx-0x23]
  403ee2:	inc    eax
  403ee3:	pop    edi
  403ee4:	std    
  403ee5:	std    
  403ee6:	xchg   edx,esp
  403ee8:	mov    edx,0xedec9ceb
  403eed:	gs dec ebp
  403eef:	les    ecx,FWORD PTR ds:0x7131ff8a
  403ef5:	pop    esp
  403ef6:	dec    edx
  403ef7:	add    cl,al
  403ef9:	lds    ebp,FWORD PTR [esi-0x67]
  403efc:	imul   edx,DWORD PTR [eax-0x41],0x5b9d7f6
  403f03:	scas   eax,DWORD PTR es:[edi]
  403f04:	add    dl,BYTE PTR [esi*1+0x2227ab61]
  403f0b:	addr16 xor al,0xb2
  403f0e:	push   0x3f
  403f10:	pop    eax
  403f11:	mov    ds:0x38f3b508,eax
  403f16:	pop    ebx
  403f17:	nop
  403f18:	jmp    0xd33b:0xf76a898c
  403f1f:	cmp    bh,BYTE PTR [edi+ebx*8]
  403f22:	std    
  403f23:	jl     0x29ebb136
  403f29:	mov    ch,BYTE PTR [edi-0x173d7a5c]
  403f2f:	call   0x4d3762ef
  403f34:	pusha  
  403f35:	pop    es
  403f36:	push   ss
  403f37:	pop    eax
  403f38:	adc    al,0x85
  403f3a:	jge    0x403f22
  403f3c:	icebp  
  403f3d:	inc    esp
  403f3e:	cmp    dl,BYTE PTR [ecx]
  403f40:	pusha  
  403f41:	test   al,cl
  403f43:	sub    DWORD PTR [eax-0x14636f5a],0x7d
  403f4a:	loop   0x403f37
  403f4c:	clc    
  403f4d:	add    eax,0xa7e3d2d4
  403f52:	mov    dl,0x5d
  403f54:	rcr    BYTE PTR [edx-0x1a],1
  403f57:	ins    DWORD PTR es:[edi],dx
  403f58:	cld    
  403f59:	mov    ebp,0x6d26e990
  403f5e:	gs pop edx
  403f60:	jp     0x403f5a
  403f62:	retf   
  403f63:	in     al,0x28
  403f65:	jl     0x403f7a
  403f67:	and    ebp,DWORD PTR [ebx]
  403f69:	test   DWORD PTR [edi-0x4e],edi
  403f6c:	(bad)  
  403f6d:	cmp    al,0x6d
  403f6f:	mov    ds:0xc0650eb0,al
  403f74:	xchg   edi,eax
  403f75:	mov    ebp,0x8677dec1
  403f7a:	rol    BYTE PTR [eax-0x55],1
  403f7d:	jp     0x403f6c
  403f7f:	push   ebp
  403f80:	sti    
  403f81:	ret    
  403f82:	popa   
  403f83:	xchg   esi,eax
  403f84:	dec    ecx
  403f85:	test   al,0x20
  403f87:	test   al,0x56
  403f89:	push   edx
  403f8a:	rol    DWORD PTR [ebp-0x3f4bdbb6],1
  403f90:	sub    DWORD PTR [esi-0x80],eax
  403f93:	xor    dh,BYTE PTR [esi-0x1d]
  403f96:	add    DWORD PTR [esi],esi
  403f98:	sbb    edx,DWORD PTR [ebp-0x7a1888a5]
  403f9e:	retf   
  403f9f:	nop
  403fa0:	or     al,0xa9
  403fa2:	gs push es
  403fa4:	or     eax,0xb74e09d6
  403fa9:	jmp    0x403f50
  403fab:	add    ecx,DWORD PTR [ebx-0x6b]
  403fae:	daa    
  403faf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fb1:	ds sar edx,1
  403fb4:	fisttp DWORD PTR [ebx+0x6be84507]
  403fba:	leave  
  403fbb:	mov    ch,0xa3
  403fbd:	adc    eax,0xa2316384
  403fc2:	pop    edx
  403fc3:	sub    eax,0x1fb53693
  403fc8:	dec    ebx
  403fc9:	cmp    bh,BYTE PTR [ecx-0x13]
  403fcc:	jbe    0x403f85
  403fce:	push   cs
  403fcf:	(bad)  
  403fd0:	out    0x61,al
  403fd2:	addr16 mov eax,0x9fd94e10
  403fd8:	out    dx,eax
  403fd9:	fist   WORD PTR [edx+edi*2-0x2c]
  403fdd:	outs   dx,DWORD PTR ds:[esi]
  403fde:	jnp    0x404022
  403fe0:	jge    0x403fd6
  403fe2:	push   DWORD PTR [eax+0x342fa5fa]
  403fe8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403fe9:	popa   
  403fea:	push   ecx
  403feb:	fist   WORD PTR [ecx]
  403fed:	mov    ds:0xdf440d07,al
  403ff2:	lock shr BYTE PTR [esi-0x5ee03dfb],1
  403ff9:	jmp    0x2ed0fdf
  403ffe:	je     0x403f87
  404000:	xchg   DWORD PTR [ebx-0x30],edi
  404003:	(bad)  
  404004:	out    0x50,eax
  404006:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404007:	repz ret 0x5e8
  40400b:	push   cs
  40400c:	gs stos DWORD PTR es:[edi],eax
  40400e:	fld    st(4)
  404010:	lds    eax,FWORD PTR [edi-0x7771ea0c]
  404016:	out    dx,eax
  404017:	sbb    eax,0xc83a96e9
  40401c:	mov    al,ds:0x8e912f94
  404021:	cdq    
  404022:	jne    0x403ff4
  404024:	inc    ebp
  404025:	lods   eax,DWORD PTR ds:[esi]
  404026:	in     al,0x81
  404028:	stc    
  404029:	adc    BYTE PTR [edi],cl
  40402b:	xlat   BYTE PTR ds:[ebx]
  40402c:	add    DWORD PTR [eax+eiz*4],esp
  40402f:	pop    esi
  404030:	hlt    
  404031:	clc    
  404032:	push   cs
  404033:	pop    ecx
  404034:	sbb    eax,0x55d2b545
  404039:	cwde   
  40403a:	clc    
  40403b:	push   edx
  40403c:	(bad)  
  40403d:	cld    
  40403e:	into   
  40403f:	adc    BYTE PTR [edi],0x46
  404042:	out    0x1b,al
  404044:	jmp    0x403fcf
  404046:	mov    ecx,0x700dbfaa
  40404b:	pop    es
  40404c:	dec    edx
  40404d:	pop    ss
  40404e:	out    dx,al
  40404f:	fst    st(5)
  404051:	ja     0x403ff3
  404053:	xchg   esp,eax
  404054:	or     eax,0xb839949b
  404059:	mov    DWORD PTR ds:[ebp+0x67],ebx
  40405d:	lods   al,BYTE PTR ds:[esi]
  40405e:	push   edx
  40405f:	and    al,0x72
  404061:	mov    WORD PTR [eax],?
  404063:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404064:	ss fs push ss
  404067:	xor    al,0x7a
  404069:	dec    edi
  40406a:	push   es
  40406b:	pop    es
  40406c:	mov    ebp,0x1568d2a5
  404071:	sti    
  404072:	lahf   
  404073:	(bad)  
  404074:	push   0xa4400368
  404079:	jmp    0x25d453dc
  40407e:	xor    bl,ah
  404080:	mov    esp,ebp
  404082:	sub    edi,DWORD PTR [edx]
  404084:	or     eax,0x30bb9f93
  404089:	pop    ebx
  40408a:	addr16 es push ss
  40408d:	adc    esi,ebx
  40408f:	in     eax,dx
  404090:	fcmovb st,st(3)
  404092:	dec    ebp
  404093:	inc    eax
  404094:	push   eax
  404095:	pop    ss
  404096:	call   0xbb733e42
  40409b:	js     0x404113
  40409d:	popa   
  40409e:	add    DWORD PTR [eax],esi
  4040a0:	xchg   ebx,eax
  4040a1:	cmp    edx,DWORD PTR [esi-0x70d736df]
  4040a7:	ss or  eax,0x8f4c1010
  4040ad:	fdiv   QWORD PTR [ebx+0x7f464f5f]
  4040b3:	sub    al,0x6a
  4040b5:	cwde   
  4040b6:	push   edx
  4040b7:	stc    
  4040b8:	and    edi,DWORD PTR [esi+0x7786a5e]
  4040be:	xchg   edi,eax
  4040bf:	imul   edx,eax,0x2dc9e7b8
  4040c5:	adc    edi,eax
  4040c7:	ins    DWORD PTR es:[edi],dx
  4040c8:	add    DWORD PTR [edi-0x3c125481],edi
  4040ce:	jg     0x404071
  4040d0:	into   
  4040d1:	jecxz  0x4040e9
  4040d3:	inc    ebx
  4040d4:	call   0x2a97:0x26b53c0c
  4040db:	and    DWORD PTR [ebp+0x78],ebx
  4040de:	scas   al,BYTE PTR es:[edi]
  4040df:	int    0xc4
  4040e1:	call   0x237dc757
  4040e6:	sbb    ebp,DWORD PTR [eax]
  4040e8:	or     al,0x37
  4040ea:	push   0xffffffed
  4040ec:	push   0x9a83f634
  4040f1:	daa    
  4040f2:	dec    eax
  4040f3:	nop
  4040f4:	fisub  DWORD PTR [edi+0x7de32971]
  4040fa:	inc    eax
  4040fb:	mov    edi,0x7110fea1
  404100:	push   esp
  404101:	out    dx,eax
  404102:	mov    WORD PTR [esi-0x4ed8406d],es
  404108:	mov    ah,0x47
  40410a:	jecxz  0x404153
  40410c:	xor    BYTE PTR [ebp-0x2c],cl
  40410f:	push   ebx
  404110:	(bad)  
  404111:	and    al,0x43
  404113:	cmc    
  404114:	retf   
  404115:	sub    cl,BYTE PTR [ecx+0x9]
  404118:	or     eax,0xb1915deb
  40411d:	repz dec ecx
  40411f:	push   eax
  404120:	or     eax,0x1c7ef430
  404125:	ins    DWORD PTR es:[edi],dx
  404126:	dec    ebx
  404127:	test   BYTE PTR [eax+edi*1],ah
  40412a:	fidivr WORD PTR [eax-0x3c]
  40412d:	scas   al,BYTE PTR es:[edi]
  40412e:	stos   BYTE PTR es:[edi],al
  40412f:	or     ah,BYTE PTR [edi]
  404131:	pop    esi
  404132:	add    al,0x9f
  404134:	mov    eax,ds:0xee77ea3d
  404139:	mov    dh,0x44
  40413b:	(bad)  
  40413c:	cmp    al,0x3d
  40413e:	sbb    eax,0x6fe98f87
  404143:	push   edi
  404144:	popa   
  404145:	shl    BYTE PTR [eax-0x9],1
  404148:	dec    ebx
  404149:	mov    eax,ds:0xd5d44c5d
  40414e:	pop    ds
  40414f:	push   ebx
  404150:	scas   eax,DWORD PTR es:[edi]
  404151:	ins    BYTE PTR es:[edi],dx
  404152:	adc    DWORD PTR [ebx+0x9f3d0cd],eax
  404158:	mov    ebx,0xa1d87704
  40415d:	or     esp,DWORD PTR [edx+0x68]
  404160:	icebp  
  404161:	rcl    BYTE PTR [esi-0x1e],cl
  404164:	lea    esi,[edi+0x53d6080f]
  40416a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40416b:	pop    eax
  40416c:	fptan  
  40416e:	adc    ch,BYTE PTR [esi-0x23]
  404171:	(bad)  
  404172:	jmp    0x4041d7
  404174:	jmp    0x404154
  404176:	sbb    esp,DWORD PTR [ebx]
  404178:	loop   0x40416d
  40417a:	aad    0x8c
  40417c:	icebp  
  40417d:	mov    eax,ds:0x2b946acd
  404182:	mov    dl,0x35
  404184:	push   0xbd2ed448
  404189:	loopne 0x404151
  40418b:	sbb    DWORD PTR [edx-0x20],eax
  40418e:	not    edi
  404190:	xor    eax,0x5e1fa439
  404195:	sub    bl,ah
  404197:	pop    ebp
  404198:	or     al,0xd5
  40419a:	rol    DWORD PTR [esp+edi*8+0x22],1
  40419e:	cli    
  40419f:	(bad)  
  4041a0:	lock lock adc eax,DWORD PTR [ecx-0x6727546d]
  4041a8:	fimul  DWORD PTR [edx+0x2c0fa10e]
  4041ae:	fisttp QWORD PTR [eax+0x52]
  4041b1:	inc    edi
  4041b2:	addr16 mov edx,0xc188681d
  4041b8:	repnz in eax,0xb3
  4041bb:	test   eax,0x380cae3f
  4041c0:	popf   
  4041c1:	mov    bl,0x1a
  4041c3:	jno    0x4041d2
  4041c5:	sbb    al,BYTE PTR [edx]
  4041c7:	aaa    
  4041c8:	sub    al,0x6f
  4041ca:	leave  
  4041cb:	add    BYTE PTR [esi],ah
  4041cd:	add    ecx,DWORD PTR [esi+edx*2-0x1a]
  4041d1:	and    al,0xb5
  4041d3:	in     al,0xf9
  4041d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041d6:	shl    BYTE PTR [esi],cl
  4041d8:	loope  0x4041a6
  4041da:	xor    eax,0xf35b791b
  4041df:	inc    edi
  4041e0:	popf   
  4041e1:	(bad)  
  4041e2:	js     0x4041c6
  4041e4:	popa   
  4041e5:	aam    0xd6
  4041e7:	sbb    BYTE PTR [esi+eiz*8],bh
  4041ea:	jmp    0x404235
  4041ec:	xor    DWORD PTR [edi-0x33c18f43],edi
  4041f2:	push   edx
  4041f3:	jmp    0xcb1d5f1e
  4041f8:	mov    esi,0xa7c398b5
  4041fd:	fcomip st,st(7)
  4041ff:	fwait
  404200:	lock mov eax,es:0x36b86488
  404207:	lahf   
  404208:	xor    cl,BYTE PTR [ecx]
  40420a:	xchg   edi,eax
  40420b:	(bad)  
  40420c:	push   eax
  40420d:	pop    esi
  40420e:	jmp    0xbbcb75c1
  404213:	push   0x2c961537
  404218:	push   ebx
  404219:	xor    eax,0xbbf9a780
  40421e:	and    al,0xb5
  404220:	sub    DWORD PTR [ebx-0x74],edx
  404223:	pop    ecx
  404224:	pushf  
  404225:	jno    0x404255
  404227:	or     BYTE PTR [ebx],dl
  404229:	inc    ebx
  40422a:	dec    eax
  40422b:	ins    DWORD PTR es:[edi],dx
  40422c:	mov    bl,0x3d
  40422e:	dec    esp
  40422f:	out    dx,al
  404230:	sub    al,0xdc
  404232:	adc    eax,0xb51a4d87
  404237:	inc    esi
  404238:	loopne 0x4042b8
  40423a:	jl     0x4041c1
  40423c:	mov    ah,0xee
  40423e:	mov    bl,0xf4
  404240:	into   
  404241:	enter  0x4f9b,0x32
  404245:	mov    ebx,0x940f0ddf
  40424a:	fwait
  40424b:	jb     0x404237
  40424d:	xlat   BYTE PTR ds:[ebx]
  40424e:	inc    edi
  40424f:	rcl    BYTE PTR [eax],1
  404251:	or     cl,BYTE PTR [edx-0x1]
  404254:	mov    ebx,0xafe34e89
  404259:	sub    bh,BYTE PTR [ecx+0x1]
  40425c:	mov    BYTE PTR [esi-0x674fb401],cl
  404262:	mov    bl,0x0
  404264:	into   
  404265:	std    
  404266:	movsx  ecx,WORD PTR [ecx+0x5f]
  40426a:	cmc    
  40426b:	inc    esi
  40426c:	cmp    esi,DWORD PTR [ecx+0x3a]
  40426f:	or     eax,0xf6d523e3
  404274:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404275:	push   0xffffffd0
  404277:	ds loope 0x404224
  40427a:	dec    esi
  40427b:	sbb    bh,BYTE PTR ss:[edx]
  40427e:	mov    dh,0x1
  404280:	xor    BYTE PTR [esi+0x71],bl
  404283:	or     edx,DWORD PTR [eax+0x416b1a94]
  404289:	pop    ebx
  40428a:	xor    bh,BYTE PTR [eax]
  40428c:	nop
  40428d:	jecxz  0x4042b2
  40428f:	add    ecx,edx
  404291:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404292:	sahf   
  404293:	jbe    0x404230
  404295:	pop    DWORD PTR [eax-0x51cf13e2]
  40429b:	pop    es
  40429c:	jmp    0x828499f5
  4042a1:	sub    esp,0x36caff97
  4042a7:	fidiv  DWORD PTR [ecx-0x27e3e1b2]
  4042ad:	xchg   esp,eax
  4042ae:	ins    BYTE PTR es:[edi],dx
  4042af:	mov    dh,0xaa
  4042b1:	data16 aaa 
  4042b3:	clc    
  4042b4:	xchg   ebx,eax
  4042b5:	rol    BYTE PTR [ebx+0x4f8bcce1],0xa4
  4042bc:	(bad)  
  4042bd:	or     edi,DWORD PTR ds:0xf1e6a083
  4042c3:	out    0x3e,al
  4042c5:	rol    DWORD PTR [ebx-0x1c2d6f32],cl
  4042cb:	out    0x29,eax
  4042cd:	pop    eax
  4042ce:	pop    edx
  4042cf:	and    ebp,DWORD PTR [edi]
  4042d1:	dec    eax
  4042d2:	iret   
  4042d3:	scas   eax,DWORD PTR es:[edi]
  4042d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4042d5:	lock or eax,0xaaf27744
  4042db:	xor    al,0x91
  4042dd:	call   0x448d:0x921fdb19
  4042e4:	scas   al,BYTE PTR es:[edi]
  4042e5:	pop    ecx
  4042e6:	scas   eax,DWORD PTR es:[edi]
  4042e7:	push   ds
  4042e8:	fucomp st(1)
  4042ea:	push   edi
  4042eb:	pusha  
  4042ec:	into   
  4042ed:	jmp    0xd0e320d1
  4042f2:	gs mov eax,?
  4042f5:	ja     0x404356
  4042f7:	div    dh
  4042f9:	pop    ebx
  4042fa:	mov    ebx,0x46b8225a
  4042ff:	iret   
  404300:	bound  esp,QWORD PTR [edx-0x12]
  404303:	out    0xbf,eax
  404305:	and    edx,DWORD PTR [esi+esi*8]
  404308:	push   edi
  404309:	pop    eax
  40430a:	mov    WORD PTR [ebx],?
  40430c:	adc    edx,eax
  40430e:	gs dec edx
  404310:	out    dx,eax
  404311:	das    
  404312:	fwait
  404313:	test   BYTE PTR [esi+0x11],dh
  404316:	sti    
  404317:	outs   dx,DWORD PTR ds:[esi]
  404318:	pop    esp
  404319:	inc    ecx
  40431a:	dec    esi
  40431b:	add    al,0x3d
  40431d:	ja     0x404340
  40431f:	in     al,dx
  404320:	pushf  
  404321:	jl     0x404338
  404323:	ja     0x404355
  404325:	cld    
  404326:	scas   eax,DWORD PTR es:[edi]
  404327:	sub    bl,ch
  404329:	add    al,BYTE PTR [edi+0xc]
  40432c:	pushf  
  40432d:	ds retf 
  40432f:	jne    0x404304
  404331:	pop    eax
  404332:	push   ss
  404333:	je     0x40437a
  404335:	cmp    esp,0x6376da93
  40433b:	shl    BYTE PTR [ebp+0x37a66cef],1
  404341:	test   al,0x60
  404343:	xor    DWORD PTR [bx+si+0x631c],0xd6144b52
  40434c:	mov    al,0xf
  40434e:	dec    ebp
  40434f:	push   ebp
  404350:	sub    DWORD PTR [esi],edx
  404352:	jo     0x40434b
  404354:	mov    DWORD PTR [ebx+0x9],esi
  404357:	not    al
  404359:	cmp    al,0x2b
  40435b:	cmp    BYTE PTR [esi],dl
  40435d:	pusha  
  40435e:	fld    TBYTE PTR [edi+edi*1-0x1c]
  404362:	pop    ss
  404363:	sbb    al,0x33
  404365:	pop    bp
  404367:	mov    al,0xeb
  404369:	add    DWORD PTR [esi-0x389ef35e],esp
  40436f:	or     ah,BYTE PTR [esi]
  404371:	and    ebx,DWORD PTR [ecx+0x5d185f22]
  404377:	scas   al,BYTE PTR es:[edi]
  404378:	inc    esi
  404379:	pusha  
  40437a:	fwait
  40437b:	out    0xc8,ax
  40437e:	xchg   ecx,eax
  40437f:	sbb    BYTE PTR [edi+0x61402b0d],cl
  404385:	jle    0x404386
  404387:	mov    ss,ebp
  404389:	adc    ah,BYTE PTR [ecx-0x2f]
  40438c:	mov    ss,esi
  40438e:	retf   0x6e95
  404391:	xor    ah,BYTE PTR [edx]
  404393:	fbstp  TBYTE PTR [ebp+0x4f4781a6]
  404399:	stos   DWORD PTR es:[edi],eax
  40439a:	mov    bl,0x9b
  40439c:	mov    edx,0x7ead64db
  4043a1:	cmp    eax,0x5fe97db1
  4043a6:	in     eax,0xd2
  4043a8:	hlt    
  4043a9:	out    dx,eax
  4043aa:	or     eax,0x9389bb7f
  4043af:	xor    DWORD PTR [edx-0x4a0bbba7],0xd
  4043b6:	dec    ebp
  4043b7:	fimul  WORD PTR [edx-0xf995b48]
  4043bd:	dec    esp
  4043be:	xor    DWORD PTR [esi+0x34],ecx
  4043c1:	push   ebx
  4043c2:	call   0x6566:0x49176eb
  4043c9:	jg     0x40443d
  4043cb:	pop    ds
  4043cc:	dec    esp
  4043cd:	sbb    BYTE PTR [ecx+0x2ede4be2],ch
  4043d3:	push   ecx
  4043d4:	test   DWORD PTR [edx-0x4],edi
  4043d7:	cmp    cl,BYTE PTR [ebp-0x6]
  4043da:	test   BYTE PTR [ecx+0x5b354c4d],ah
  4043e0:	or     eax,0x8d14d251
  4043e5:	mov    cl,0xa8
  4043e7:	add    al,0x91
  4043e9:	sub    DWORD PTR [esi],ebp
  4043eb:	and    eax,0x1621e492
  4043f0:	pushf  
  4043f1:	mov    ecx,0x10a56b11
  4043f6:	dec    BYTE PTR [ebp+0x1c]
  4043f9:	into   
  4043fa:	into   
  4043fb:	sbb    eax,0x17170595
  404400:	in     eax,dx
  404401:	std    
  404402:	mov    bh,0xd2
  404404:	ret    0x39a9
  404407:	jbe    0x40439a
  404409:	sbb    al,0xdf
  40440b:	jbe    0x40443a
  40440d:	mov    al,ds:0x113c402e
  404412:	(bad)  
  404413:	xor    BYTE PTR [eax-0x16f9b9fb],al
  404419:	das    
  40441a:	pop    ecx
  40441b:	ja     0x404449
  40441d:	mov    ds:0x760e3898,eax
  404422:	dec    esp
  404423:	test   eax,eax
  404425:	push   esi
  404426:	cmp    cl,BYTE PTR [esi-0x36]
  404429:	test   eax,0xd3fc910a
  40442e:	adc    BYTE PTR [esi-0x3ce23dd8],bh
  404434:	(bad)  
  404435:	sti    
  404436:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404437:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404438:	iret   
  404439:	jle    0x40446f
  40443b:	sar    bl,0x2
  40443e:	aaa    
  40443f:	lods   eax,DWORD PTR ds:[esi]
  404440:	bound  ecx,QWORD PTR [ecx-0x1fd5a3dc]
  404446:	pop    ecx
  404447:	adc    ebp,eax
  404449:	ror    DWORD PTR [esi-0x4e],0xa2
  40444d:	lfs    ebx,FWORD PTR [edx-0x6b]
  404451:	and    BYTE PTR [ebp+0x6f],0x98
  404455:	cs sbb edi,ecx
  404458:	(bad)  
  404459:	push   edx
  40445a:	je     0x4043eb
  40445c:	xor    BYTE PTR [edi],0x66
  40445f:	mov    ds:0x4e243af5,al
  404464:	cmp    esi,DWORD PTR [edi]
  404466:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404467:	adc    al,0xde
  404469:	xchg   DWORD PTR [ecx],edi
  40446b:	or     cl,BYTE PTR [esi+0x688badf]
  404471:	cs ins BYTE PTR es:[edi],dx
  404473:	jno    0x40444b
  404475:	mov    WORD PTR [eax+0x6a217436],fs
  40447b:	sub    BYTE PTR [eax],al
  40447d:	iret   
  40447e:	push   ds
  40447f:	fwait
  404480:	xchg   esi,eax
  404481:	push   es
  404482:	dec    ebp
  404483:	xchg   BYTE PTR [ecx-0x56],cl
  404486:	je     0x404471
  404488:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404489:	rol    BYTE PTR [edi+0x39],1
  40448c:	bound  edx,QWORD PTR [ebx]
  40448e:	lea    eax,[ebp-0x42bf8722]
  404494:	cmp    eax,0x722e0c30
  404499:	loope  0x4044e4
  40449b:	and    BYTE PTR [edi+0x4ba8f3b6],0x7c
  4044a2:	jecxz  0x404518
  4044a4:	dec    ebx
  4044a5:	(bad)  
  4044a6:	out    0x16,eax
  4044a8:	ret    0x7424
  4044ab:	mov    edi,0x46d97d96
  4044b0:	xchg   ebp,eax
  4044b1:	loop   0x404458
  4044b3:	and    ah,bl
  4044b5:	xchg   BYTE PTR [ebx-0x42c78d86],dl
  4044bb:	inc    esp
  4044bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044bd:	out    dx,al
  4044be:	mov    eax,esi
  4044c0:	xchg   DWORD PTR [esi+0x36],esp
  4044c3:	leave  
  4044c4:	outs   dx,BYTE PTR ds:[esi]
  4044c5:	xor    dh,BYTE PTR [esi]
  4044c7:	adc    al,0xe4
  4044c9:	out    0xdf,eax
  4044cb:	aad    0x6d
  4044cd:	push   ds
  4044ce:	clc    
  4044cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044d0:	jp     0x404454
  4044d2:	adc    al,0xfd
  4044d4:	jecxz  0x40453b
  4044d6:	xor    dl,BYTE PTR [edx-0x4d]
  4044d9:	xor    ecx,DWORD PTR [ecx-0x1a4a33a7]
  4044df:	xchg   edx,eax
  4044e0:	cmp    esp,ecx
  4044e2:	mov    edx,0x85e81081
  4044e7:	or     al,0xe1
  4044e9:	push   esp
  4044ea:	push   ebx
  4044eb:	(bad)  
  4044ec:	cmp    ecx,edx
  4044ee:	div    DWORD PTR [edx-0x5bd016cd]
  4044f4:	pop    ebx
  4044f5:	inc    esp
  4044f6:	ret    0x5e5f
  4044f9:	cmc    
  4044fa:	mov    ds:0x3c684aad,al
  4044ff:	in     eax,dx
  404500:	idiv   DWORD PTR [ebx]
  404502:	cmp    al,0x52
  404504:	or     dh,BYTE PTR [ecx-0xb2d45e]
  40450a:	ins    BYTE PTR es:[edi],dx
  40450b:	push   ds
  40450c:	aas    
  40450d:	jmp    0x7d9fcf4e
  404512:	push   es
  404513:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404514:	mov    edx,0x8be1b5c4
  404519:	(bad)  
  40451a:	xchg   esp,eax
  40451b:	arpl   WORD PTR [edi+ecx*4],dx
  40451e:	imul   esp,DWORD PTR [ecx],0x48c393fd
  404524:	sub    eax,0xa4c1b876
  404529:	dec    eax
  40452a:	jno    0x4044de
  40452c:	add    edx,ecx
  40452e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40452f:	test   al,0xac
  404531:	es repnz dec ebx
  404534:	outs   dx,BYTE PTR ds:[esi]
  404535:	jmp    0x3b2b:0x1241f1b3
  40453c:	aas    
  40453d:	fsub   st(0),st
  40453f:	cmp    esi,eax
  404541:	and    DWORD PTR [esp+ecx*4],esp
  404544:	scas   al,BYTE PTR es:[edi]
  404545:	jle    0x40452b
  404547:	mov    ds:0x3604fb4,al
  40454c:	push   ecx
  40454d:	xor    eax,edx
  40454f:	cmp    edx,DWORD PTR [ecx]
  404551:	sahf   
  404552:	arpl   WORD PTR [eax+0x64],bp
  404555:	xor    bl,bh
  404557:	imul   eax,DWORD PTR [ecx],0x16
  40455a:	mov    ds:0xe8189f07,al
  40455f:	push   eax
  404560:	sub    eax,0x1d605c6d
  404565:	out    0x60,al
  404567:	loopne 0x4045ad
  404569:	test   al,0xee
  40456b:	inc    ebp
  40456c:	jnp    0x40453b
  40456e:	out    dx,al
  40456f:	mov    ds:0xb957e3e4,eax
  404574:	shr    DWORD PTR [ecx+0xa2109bf],0x8d
  40457b:	outs   dx,BYTE PTR ds:[esi]
  40457c:	jnp    0x404555
  40457e:	(bad)  
  40457f:	adc    eax,0x33be2c59
  404584:	and    DWORD PTR [ebx],ebx
  404586:	es in  eax,dx
  404588:	and    al,0x70
  40458a:	aas    
  40458b:	leave  
  40458c:	push   0x3daa788
  404591:	out    0x0,eax
  404593:	ror    DWORD PTR [edx-0x7dabde00],1
  404599:	push   ss
  40459a:	xchg   ebp,eax
  40459b:	jmp    0x15d:0xc5d14564
  4045a2:	inc    edx
  4045a3:	mov    ds:0x9f0e7eb3,al
  4045a8:	icebp  
  4045a9:	aas    
  4045aa:	sbb    al,0xcc
  4045ac:	cld    
  4045ad:	and    BYTE PTR [edi+0x497698e0],cl
  4045b3:	jo     0x404612
  4045b5:	inc    ebp
  4045b6:	jl     0x404627
  4045b8:	sub    BYTE PTR [edx+eiz*8],bh
  4045bb:	test   esi,esp
  4045bd:	and    ecx,DWORD PTR ds:0xf26acfb4
  4045c3:	jmp    FWORD PTR [ebx]
  4045c5:	adc    cl,BYTE PTR [edi+0x77e99bfb]
  4045cb:	mov    esi,0x84ab110c
  4045d0:	add    ebx,DWORD PTR [ecx]
  4045d2:	push   edi
  4045d3:	mov    BYTE PTR ds:[ebx],dh
  4045d6:	das    
  4045d7:	xlat   BYTE PTR ds:[ebx]
  4045d8:	xchg   esp,eax
  4045d9:	int    0x28
  4045db:	push   ss
  4045dc:	sub    eax,0x1bf514bb
  4045e1:	add    ah,BYTE PTR [edx-0x571d455b]
  4045e7:	cli    
  4045e8:	lock (bad) 
  4045ea:	jg     0x404604
  4045ec:	dec    esi
  4045ed:	je     0x4045c5
  4045ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045f0:	loop   0x404600
  4045f2:	ror    DWORD PTR [ecx-0x20],1
  4045f5:	sbb    ebx,DWORD PTR [edi+0x3a]
  4045f8:	faddp  st(5),st
  4045fa:	icebp  
  4045fb:	js     0x4045cb
  4045fd:	aam    0xda
  4045ff:	add    eax,0x45745670
  404604:	sahf   
  404605:	and    ch,BYTE PTR [eax]
  404607:	pop    ds
  404608:	call   0x586e:0x3b61ecdc
  40460f:	xor    ah,BYTE PTR [ebp+0x17ed4a75]
  404615:	scas   eax,DWORD PTR es:[edi]
  404616:	ds mov ecx,0xad9ef2e7
  40461c:	shl    DWORD PTR [edx+ecx*8-0x39b725bb],cl
  404623:	clc    
  404624:	lea    edi,[ebx+0x7053ff6d]
  40462a:	pop    ds
  40462b:	shl    BYTE PTR [ebx-0x7750f649],0xaa
  404632:	push   ds
  404633:	or     cl,bh
  404635:	lods   al,BYTE PTR ds:[esi]
  404636:	aad    0x4
  404638:	shr    cl,cl
  40463a:	jns    0x40460c
  40463c:	mov    edi,0xf42262d3
  404641:	pop    edi
  404642:	pop    ebp
  404643:	fs dec esi
  404645:	test   BYTE PTR [ebx-0x11],dh
  404648:	je     0x4045ec
  40464a:	je     0x4045ea
  40464c:	or     edx,eax
  40464e:	or     eax,0x6fb32f2c
  404653:	fnsave [ebx]
  404655:	mov    cl,0x72
  404657:	fs jmp 0x207c:0x6a25db1d
  40465f:	jns    0x404656
  404661:	sbb    ebx,0xfffffff0
  404664:	out    0x10,eax
  404666:	popf   
  404667:	adc    al,0x1f
  404669:	retf   
  40466a:	out    dx,al
  40466b:	and    cl,BYTE PTR [edi+0xb85f867]
  404671:	sti    
  404672:	cld    
  404673:	ret    0x2b06
  404676:	test   BYTE PTR [ecx-0x2a8f89d5],cl
  40467c:	cmp    bl,BYTE PTR [ebp+0x55f62450]
  404682:	in     eax,0xf0
  404684:	int    0xf6
  404686:	xor    eax,0xaa4fff7e
  40468b:	dec    ecx
  40468c:	xor    al,0xdc
  40468e:	leave  
  40468f:	or     eax,0x2a8f39f3
  404694:	adc    al,0x2d
  404696:	pusha  
  404697:	push   edi
  404698:	jle    0x404663
  40469a:	addr16 cdq 
  40469c:	dec    eax
  40469d:	and    bl,BYTE PTR [edx]
  40469f:	(bad)  
  4046a1:	push   cs
  4046a2:	stc    
  4046a3:	outs   dx,DWORD PTR ds:[esi]
  4046a4:	gs add edx,eax
  4046a7:	mov    ebp,0xd34f4b5e
  4046ac:	jmp    0xfc62:0x9e98
  4046b2:	dec    ecx
  4046b3:	jns    0x404690
  4046b5:	je     0x404716
  4046b7:	loope  0x4046cc
  4046b9:	ss mov ch,0x21
  4046bc:	mov    ah,0x7c
  4046be:	jns    0x404708
  4046c0:	cmp    al,0x41
  4046c2:	jae    0x4046aa
  4046c4:	dec    edi
  4046c5:	cli    
  4046c6:	ds (bad) 
  4046c9:	mov    edx,0x32df3709
  4046ce:	mov    al,ds:0x85b7ee5f
  4046d3:	sbb    eax,0x3b82306b
  4046d8:	pop    ebx
  4046d9:	push   esi
  4046da:	faddp  st(1),st
  4046dc:	sub    eax,0xe347851
  4046e1:	cmp    al,0x6b
  4046e3:	mov    al,ds:0x86ccc8d9
  4046e8:	jno    0x4046c7
  4046ea:	loop   0x404718
  4046ec:	(bad)  
  4046ed:	xor    BYTE PTR [ecx-0x5e],cl
  4046f0:	sub    al,0x45
  4046f2:	push   esp
  4046f3:	jae    0x404727
  4046f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046f6:	std    
  4046f7:	jnp    0x4046b3
  4046f9:	scas   al,BYTE PTR es:[edi]
  4046fa:	mov    DWORD PTR [esi+ebp*4+0x48f8e70e],edx
  404701:	or     dh,BYTE PTR [ebp+0x59]
  404704:	xchg   esi,eax
  404705:	(bad)  
  404706:	lds    ebx,FWORD PTR [edi-0x73]
  404709:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40470a:	pop    ds
  40470b:	in     eax,0x36
  40470d:	sbb    DWORD PTR [ebp-0x79bf8459],esi
  404713:	sub    eax,0xe9c154a2
  404718:	xchg   edx,eax
  404719:	jg     0x4046b9
  40471b:	cdq    
  40471c:	adc    dl,BYTE PTR [ecx+ebx*2+0xf]
  404720:	jb     0x4046c4
  404722:	cmp    ch,al
  404724:	mov    dl,0x36
  404726:	adc    cl,ah
  404728:	mov    ecx,0x3dd3630a
  40472d:	int3   
  40472e:	loope  0x4046c8
  404730:	jmp    0xf9430d7d
  404735:	cs ins DWORD PTR es:[edi],dx
  404737:	add    cl,BYTE PTR [ebx-0x6d]
  40473a:	or     BYTE PTR [ebp-0x672d7e21],ch
  404740:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404741:	in     al,0x17
  404743:	cdq    
  404744:	out    dx,al
  404745:	pop    ebp
  404746:	mov    DWORD PTR [esp+ebp*8-0x78e6f971],edx
  40474d:	push   edi
  40474e:	fisubr DWORD PTR [ecx-0x71]
  404751:	cld    
  404752:	adc    DWORD PTR [edi+0x34],eax
  404755:	mov    al,ds:0x140d7fb3
  40475a:	cld    
  40475b:	test   DWORD PTR [ecx],0xf9d0abdb
  404761:	dec    esp
  404762:	jb     0x404753
  404764:	ins    DWORD PTR es:[edi],dx
  404765:	xor    al,0x6
  404767:	inc    ebp
  404768:	or     bh,ah
  40476a:	mov    DWORD PTR [ebx+0x4df635ee],eax
  404770:	int3   
  404771:	mov    edi,0x40dc208c
  404776:	(bad)  
  404778:	push   ebp
  404779:	lock shr BYTE PTR [ebx],cl
  40477c:	scas   al,BYTE PTR es:[edi]
  40477d:	rcl    DWORD PTR [eax-0x71],0x40
  404781:	cmp    BYTE PTR [ebp+ebp*8+0x35b4c897],dh
  404788:	or     BYTE PTR [edx],ah
  40478a:	jecxz  0x40477f
  40478c:	sbb    esi,DWORD PTR [edx+edi*4]
  40478f:	aaa    
  404790:	xor    BYTE PTR [eax],al
  404792:	pushf  
  404793:	xchg   BYTE PTR [ebx],bl
  404795:	in     eax,0xce
  404797:	bound  edx,QWORD PTR [ecx+edi*8]
  40479a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40479b:	ja     0x40476f
  40479d:	mov    DWORD PTR [ebp-0x6f5b5126],ebp
  4047a3:	(bad)  
  4047a5:	int    0xea
  4047a7:	xchg   BYTE PTR [eax],ch
  4047a9:	fisubr DWORD PTR [edx]
  4047ab:	and    ebx,DWORD PTR [esi+0x6e]
  4047ae:	test   dh,ah
  4047b0:	aas    
  4047b1:	xor    DWORD PTR [ebx+0x26],esp
  4047b4:	retf   0x9c2e
  4047b7:	jo     0x934031cf
  4047bd:	nop
  4047be:	dec    ebx
  4047bf:	rep ins DWORD PTR es:[edi],dx
  4047c1:	inc    edx
  4047c2:	xor    DWORD PTR [edx+0x31],ebp
  4047c5:	fbld   TBYTE PTR [ecx+ebp*1+0x58593caf]
  4047cc:	adc    BYTE PTR [esi-0x44],al
  4047cf:	cld    
  4047d0:	in     eax,dx
  4047d1:	jp     0x40478a
  4047d3:	(bad)  [edx]
  4047d5:	test   BYTE PTR [eax+0x74d3604f],ah
  4047db:	sub    bh,BYTE PTR [ecx+0x56]
  4047de:	test   edi,esp
  4047e0:	xlat   BYTE PTR ds:[ebx]
  4047e1:	mov    cl,0x1e
  4047e3:	inc    edi
  4047e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4047e5:	xchg   esi,eax
  4047e6:	retf   0x5f24
  4047e9:	cmp    BYTE PTR [eax],al
  4047eb:	test   DWORD PTR [edx-0x44fae8c1],0x3e521657
  4047f5:	iret   
  4047f6:	sahf   
  4047f7:	dec    eax
  4047f8:	xchg   esp,eax
  4047f9:	mov    DWORD PTR [ebp-0x7556b16a],ebx
  4047ff:	push   ebx
  404800:	pop    ds
  404801:	mov    ds:0x9693d4a1,eax
  404806:	or     al,0x31
  404808:	push   ebx
  404809:	jnp    0x404879
  40480b:	fwait
  40480c:	(bad)  
  40480d:	cdq    
  40480e:	ins    BYTE PTR es:[edi],dx
  40480f:	gs (bad) 
  404811:	repz es add eax,0x56d4f179
  404818:	aad    0xbf
  40481a:	push   ss
  40481b:	(bad)  
  40481c:	daa    
  40481d:	imul   edx,DWORD PTR [eax+0xff84518],0x7f1eb7eb
  404827:	jmp    0xa7c7:0x2e0ac3ee
  40482e:	leave  
  40482f:	out    dx,al
  404830:	fwait
  404831:	mov    ah,0xdc
  404833:	aad    0x50
  404835:	ror    DWORD PTR ss:[ecx],0x7d
  404839:	les    ecx,FWORD PTR [eax-0x6fc368db]
  40483f:	xchg   ebp,eax
  404840:	dec    ebp
  404841:	inc    edx
  404842:	in     al,dx
  404843:	xchg   ecx,eax
  404844:	inc    esp
  404845:	dec    edx
  404846:	retf   
  404847:	cmp    edx,ecx
  404849:	aad    0x84
  40484b:	mov    al,0xc4
  40484d:	xchg   edx,eax
  40484e:	jmp    DWORD PTR [ebp+0x15957ce4]
  404854:	cmp    al,0x5a
  404856:	push   ds
  404857:	lahf   
  404858:	xor    al,0xc9
  40485a:	jb     0x4048d8
  40485c:	mov    eax,ds:0x65b50cb5
  404861:	repnz sub ch,al
  404864:	mov    eax,0xaf9d665b
  404869:	sbb    BYTE PTR [edx],ah
  40486b:	add    DWORD PTR [ebp-0x4fd68c94],0x2ab3307b
  404875:	std    
  404876:	cmp    cl,BYTE PTR [esi]
  404878:	rcl    BYTE PTR [eax],1
  40487a:	loopne 0x40487f
  40487c:	icebp  
  40487d:	loope  0x4048ba
  40487f:	popf   
  404880:	je     0x4048e0
  404882:	std    
  404883:	out    dx,eax
  404884:	dec    ebp
  404885:	call   0xf892:0x56f2bb03
  40488c:	test   al,0xd1
  40488e:	jle    0x404814
  404890:	mov    eax,ds:0xe719652e
  404895:	sub    BYTE PTR [eax+edx*4+0x5ec8fae6],0xeb
  40489d:	push   DWORD PTR [esi+0x33]
  4048a0:	jecxz  0x404915
  4048a2:	clc    
  4048a3:	js     0x404829
  4048a5:	mov    dl,0xdf
  4048a7:	pushf  
  4048a8:	outs   dx,BYTE PTR ds:[esi]
  4048a9:	lahf   
  4048aa:	and    DWORD PTR [ebp+0xe],esi
  4048ad:	adc    ecx,ecx
  4048af:	xchg   esp,eax
  4048b0:	push   ds
  4048b1:	add    BYTE PTR [eax],cl
  4048b3:	aam    0x6b
  4048b5:	adc    ch,BYTE PTR [esi]
  4048b7:	xlat   BYTE PTR ds:[ebx]
  4048b8:	mov    ch,0x29
  4048ba:	mov    WORD PTR [ebx],es
  4048bc:	xor    DWORD PTR [esi+eax*8+0x42],ebx
  4048c0:	xor    BYTE PTR ds:0x4dd326a3,0x45
  4048c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048c8:	and    eax,0xfe018f06
  4048cd:	cs ins DWORD PTR es:[edi],dx
  4048cf:	daa    
  4048d0:	xchg   edx,eax
  4048d1:	pop    es
  4048d2:	push   es
  4048d3:	jne    0x4048cd
  4048d5:	add    DWORD PTR [ebp+0x7aee074f],ecx
  4048db:	dec    edx
  4048dc:	call   0x86f41da2
  4048e1:	or     DWORD PTR [eax+0x54],0xffffff9a
  4048e5:	xchg   ebx,eax
  4048e6:	jg     0x4048ce
  4048e8:	jmp    0x7c0d:0x61cd3b31
  4048ef:	lahf   
  4048f0:	xchg   esi,eax
  4048f1:	pop    ss
  4048f2:	lods   eax,DWORD PTR ds:[esi]
  4048f3:	dec    ecx
  4048f4:	inc    esi
  4048f5:	out    dx,al
  4048f6:	jo     0x4048a8
  4048f8:	pop    ecx
  4048f9:	xor    bl,dl
  4048fb:	addr16 enter 0xf012,0xe3
  404900:	nop
  404901:	adc    eax,0x6bb8e9eb
  404906:	and    ch,BYTE PTR [ebp-0x18d075db]
  40490c:	gs dec esi
  40490e:	test   eax,0xc532f560
  404913:	adc    eax,0xc7137add
  404918:	out    0xe8,al
  40491a:	push   edi
  40491b:	and    ah,BYTE PTR [ebx-0x6b36b548]
  404921:	scas   eax,DWORD PTR es:[edi]
  404922:	test   eax,0x23d1aff0
  404927:	les    ebp,FWORD PTR [edx-0x4f]
  40492a:	add    eax,0xdeafaa31
  40492f:	popa   
  404930:	fst    QWORD PTR [esi+eiz*4]
  404933:	std    
  404934:	mov    edi,0xa2b85708
  404939:	jae    0x40499f
  40493b:	mov    ah,0x3a
  40493d:	sub    ah,BYTE PTR [edi+0x2980b261]
  404943:	add    DWORD PTR [esi],esi
  404945:	xor    eax,0xd92b5897
  40494a:	cli    
  40494b:	outs   dx,BYTE PTR ds:[esi]
  40494c:	cmc    
  40494d:	sbb    eax,0xce8816f0
  404952:	dec    ebx
  404953:	sar    BYTE PTR [eax+0x44],cl
  404956:	cmp    eax,0x93bce210
  40495b:	pop    ebp
  40495c:	cli    
  40495d:	xor    DWORD PTR [edi+0x6ed2288a],0xca59339a
  404967:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404968:	nop
  404969:	repz imul edx,DWORD PTR cs:[ebp-0x21726999],0x32
  404972:	dec    ebx
  404973:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404974:	arpl   WORD PTR [eax+0x5],ax
  404977:	lods   al,BYTE PTR ds:[esi]
  404978:	fwait
  404979:	jg     0x404991
  40497b:	sub    ebx,ecx
  40497d:	fst    DWORD PTR [ecx-0x3b]
  404980:	dec    ecx
  404981:	out    dx,al
  404982:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404983:	fwait
  404984:	adc    ecx,edx
  404986:	sbb    al,0xac
  404988:	jmp    0xef2830bc
  40498d:	jge    0x4049a3
  40498f:	push   ds
  404990:	shl    DWORD PTR [edi],0x59
  404993:	out    0xda,al
  404995:	int    0xdc
  404997:	xor    al,0x79
  404999:	(bad)  
  40499a:	fdivr  DWORD PTR [edx-0x5a]
  40499d:	outs   dx,DWORD PTR ds:[esi]
  40499e:	bound  ebp,QWORD PTR ds:0xf88a8545
  4049a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049a5:	and    eax,0x86d6e4e4
  4049aa:	cmp    eax,0xedba06ff
  4049af:	(bad)  
  4049b0:	retf   0x63b0
  4049b3:	pop    edx
  4049b4:	cli    
  4049b5:	push   eax
  4049b6:	fdivr  DWORD PTR [edi+0xf]
  4049b9:	fidiv  WORD PTR [edx]
  4049bb:	out    dx,al
  4049bc:	sbb    eax,0x64bb46b2
  4049c1:	js     0x404a3f
  4049c3:	add    DWORD PTR [ebp+0x66d1c40b],edi
  4049c9:	add    al,0xea
  4049cb:	in     al,0x8e
  4049cd:	int    0xad
  4049cf:	lods   eax,DWORD PTR ds:[esi]
  4049d0:	push   cs
  4049d1:	pop    edi
  4049d2:	or     BYTE PTR [ebp+ecx*1-0xc061dd5],bl
  4049d9:	pusha  
  4049da:	adc    al,0x3f
  4049dc:	sbb    edx,DWORD PTR [eax]
  4049de:	clc    
  4049df:	or     cl,0xcc
  4049e2:	test   BYTE PTR [eax],cl
  4049e4:	dec    esp
  4049e5:	dec    edi
  4049e6:	out    dx,al
  4049e7:	xor    edx,DWORD PTR [edi+0x7bdfbad8]
  4049ed:	cdq    
  4049ee:	dec    ecx
  4049ef:	dec    eax
  4049f0:	bound  edi,QWORD PTR [esi+0x6754038c]
  4049f6:	iret   
  4049f7:	loope  0x404a04
  4049f9:	mov    ch,0x73
  4049fb:	xchg   ebx,eax
  4049fc:	ins    DWORD PTR es:[edi],dx
  4049fd:	dec    edx
  4049fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049ff:	(bad)  
  404a00:	leave  
  404a01:	xor    ecx,DWORD PTR ds:0x4e488b01
  404a07:	retf   0x9d45
  404a0a:	cs mov ecx,0x18335cd9
  404a10:	mov    edi,0x5a629576
  404a15:	int    0xf5
  404a17:	xchg   DWORD PTR [ebx-0x56602382],ebp
  404a1d:	xchg   esp,eax
  404a1e:	pop    ds
  404a1f:	(bad)  
  404a20:	imul   edx,DWORD PTR [edi+0xc],0xffffffc4
  404a24:	xor    DWORD PTR [edi+0x7d75315c],edx
  404a2a:	pop    ds
  404a2b:	mov    eax,0xd1287cd8
  404a30:	xchg   esi,eax
  404a31:	(bad)  
  404a32:	std    
  404a33:	mov    al,0xd7
  404a35:	ins    DWORD PTR es:[edi],dx
  404a36:	test   DWORD PTR cs:[ebp+0x79698b7a],eax
  404a3d:	pusha  
  404a3e:	dec    ebp
  404a3f:	push   ebx
  404a40:	dec    edi
  404a41:	pop    ds
  404a42:	shr    DWORD PTR [ecx+0x33],cl
  404a45:	xchg   ecx,eax
  404a46:	dec    edx
  404a47:	sub    eax,0x878fe64a
  404a4c:	adc    ebx,DWORD PTR [ecx+0x527b8cf1]
  404a52:	xchg   ebx,eax
  404a53:	inc    edx
  404a54:	je     0x404a6e
  404a56:	bound  ebx,QWORD PTR [edi-0x4058c2ca]
  404a5c:	cmc    
  404a5d:	aam    0x2f
  404a5f:	push   0xe25057b0
  404a64:	f2xm1  
  404a66:	add    dl,al
  404a68:	(bad)  
  404a69:	and    al,0x15
  404a6b:	mov    ah,0x2d
  404a6d:	jge    0x404a1f
  404a6f:	inc    edx
  404a70:	and    al,0xae
  404a72:	xor    DWORD PTR [ebp-0x7],eax
  404a75:	cwde   
  404a76:	in     al,0xf
  404a78:	pop    ecx
  404a79:	adc    eax,DWORD PTR ds:0xc14fbd9a
  404a7f:	cmp    bl,ch
  404a81:	retf   0x275e
  404a84:	push   ss
  404a85:	cmp    al,0xfc
  404a87:	popf   
  404a88:	push   ecx
  404a89:	push   cs
  404a8a:	jbe    0x404a68
  404a8c:	push   edi
  404a8d:	shr    DWORD PTR [esi],cl
  404a8f:	pushf  
  404a90:	add    eax,0x78a978cb
  404a95:	scas   eax,DWORD PTR es:[edi]
  404a96:	clc    
  404a97:	nop
  404a98:	dec    ecx
  404a99:	cs push 0x22
  404a9c:	sbb    BYTE PTR [esi-0x3],cl
  404a9f:	leave  
  404aa0:	or     eax,DWORD PTR [edx+0x6a67c72]
  404aa6:	sahf   
  404aa7:	adc    al,0x85
  404aa9:	jae    0x404a83
  404aab:	aaa    
  404aac:	pop    ecx
  404aad:	loope  0x404ae5
  404aaf:	mov    ah,0x7f
  404ab1:	nop
  404ab2:	push   ecx
  404ab3:	in     al,0x4a
  404ab5:	xlat   BYTE PTR ds:[ebx]
  404ab6:	push   ebp
  404ab7:	retf   0x397
  404aba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404abb:	xor    BYTE PTR [edx+0x76],0xb4
  404abf:	jmp    0x40d6:0xea4461eb
  404ac6:	test   eax,0x451f946a
  404acb:	enter  0xcdf6,0x7b
  404acf:	dec    ebp
  404ad0:	std    
  404ad1:	sti    
  404ad2:	ins    DWORD PTR es:[edi],dx
  404ad3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ad4:	push   es
  404ad5:	gs xchg edx,eax
  404ad7:	fwait
  404ad8:	add    bh,BYTE PTR [eax]
  404ada:	adc    ah,BYTE PTR [ebx+edi*2+0x30]
  404ade:	push   edi
  404adf:	cmp    eax,0x405b136c
  404ae4:	xor    edx,ecx
  404ae6:	mov    ebp,0xd0d43a46
  404aeb:	xor    dh,dh
  404aed:	mov    bl,0xaf
  404aef:	mov    edx,0x948d7bda
  404af4:	stos   DWORD PTR es:[edi],eax
  404af5:	dec    edx
  404af6:	pop    ds
  404af7:	dec    edi
  404af8:	sub    ebx,esi
  404afa:	pop    ds
  404afb:	xchg   esp,eax
  404afc:	xchg   ebp,eax
  404afd:	jmp    0x404b17
  404aff:	sbb    ah,BYTE PTR [eax]
  404b01:	push   esp
  404b02:	cdq    
  404b03:	push   esp
  404b04:	icebp  
  404b05:	out    0xbc,eax
  404b07:	rcr    ebx,0xd1
  404b0a:	xlat   BYTE PTR ds:[ebx]
  404b0b:	xchg   edi,eax
  404b0c:	in     al,dx
  404b0d:	and    edx,DWORD PTR [eax]
  404b0f:	jo     0x404b0b
  404b11:	ins    BYTE PTR es:[edi],dx
  404b12:	mov    BYTE PTR [ecx],ah
  404b14:	jmp    0x1ab5:0x61e5c22f
  404b1b:	and    al,0xdc
  404b1d:	or     dl,cl
  404b1f:	xchg   edx,eax
  404b20:	sub    dh,BYTE PTR [edx-0x1ff4c397]
  404b26:	into   
  404b27:	jbe    0x404b97
  404b29:	fstp   DWORD PTR [ebp+0x2b]
  404b2c:	xchg   edx,eax
  404b2d:	ins    BYTE PTR es:[edi],dx
  404b2e:	mov    DWORD PTR fs:[ebx-0x11eab270],0x63a3b4fb
  404b39:	pop    ebx
  404b3a:	adc    bh,BYTE PTR [ebx+0x162e7596]
  404b40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b41:	mov    ch,0xab
  404b43:	enter  0x75b1,0xf7
  404b47:	mov    cl,0xc8
  404b49:	loope  0x404bc5
  404b4b:	inc    ecx
  404b4c:	sub    eax,0x7bb97723
  404b51:	add    eax,0xecdbec8d
  404b56:	push   0xffffffe5
  404b58:	test   ebx,esi
  404b5a:	ret    
  404b5b:	jl     0x404bbe
  404b5d:	aad    0xfe
  404b5f:	stos   BYTE PTR es:[edi],al
  404b60:	(bad)  
  404b61:	push   eax
  404b62:	sahf   
  404b63:	jge    0x404aee
  404b65:	sahf   
  404b66:	fsubr  DWORD PTR [ecx]
  404b68:	fwait
  404b69:	call   0x8250:0x6e0fe72
  404b70:	les    edx,FWORD PTR [ebp-0x17]
  404b73:	fxch   st(0)
  404b75:	ins    BYTE PTR es:[edi],dx
  404b76:	mov    ecx,0xb84e4035
  404b7b:	mov    ah,0x9b
  404b7d:	xrelease xchg BYTE PTR [ebp+0x68],ch
  404b81:	ins    BYTE PTR es:[edi],dx
  404b82:	sets   BYTE PTR [ebx+0x59]
  404b86:	mov    al,ds:0xf514c75d
  404b8b:	outs   dx,BYTE PTR ds:[esi]
  404b8c:	push   0xfffffff4
  404b8e:	pushf  
  404b8f:	sbb    DWORD PTR [edx-0xd],eax
  404b92:	push   0x7437572c
  404b97:	mov    cl,0x3f
  404b99:	lock retf 0xa1ab
  404b9d:	aaa    
  404b9e:	or     ebx,DWORD PTR [edx]
  404ba0:	sub    ch,BYTE PTR [ebp-0x768915f1]
  404ba6:	mov    cl,0xb3
  404ba8:	in     al,dx
  404ba9:	mov    bl,0xd4
  404bab:	xchg   ecx,eax
  404bac:	add    cl,BYTE PTR [ebx+0xbf38b45]
  404bb2:	fldenv [edi+0x7fa13827]
  404bb8:	popa   
  404bb9:	cmp    ebp,ecx
  404bbb:	sbb    DWORD PTR [ecx+esi*1+0x2],edi
  404bbf:	sbb    BYTE PTR [edi],bh
  404bc1:	xchg   DWORD PTR [edx+0x3a],ebx
  404bc4:	dec    edi
  404bc5:	(bad)  
  404bc6:	stc    
  404bc7:	lea    ecx,[eax+0xc13f0ab]
  404bcd:	enter  0x39de,0xc3
  404bd1:	sub    DWORD PTR [edi+0x5f],0xb35b7c1f
  404bd8:	imul   esi,esp,0xffffff8c
  404bdb:	stos   BYTE PTR es:[edi],al
  404bdc:	outs   dx,BYTE PTR ds:[esi]
  404bdd:	not    DWORD PTR [ecx]
  404bdf:	sar    DWORD PTR [ebp+0x40793bef],1
  404be5:	mov    ds:0x8557c7f3,al
  404bea:	stos   BYTE PTR es:[edi],al
  404beb:	sub    eax,0xd6771a07
  404bf0:	push   edx
  404bf1:	adc    edi,DWORD PTR [eax]
  404bf3:	ror    DWORD PTR [ebx+0x5b],0x1b
  404bf7:	mov    eax,0x4dffcc52
  404bfc:	adc    ebx,DWORD PTR [edx+ebp*4+0x6ff942aa]
  404c03:	aam    0xa8
  404c05:	lds    ebx,FWORD PTR [ecx-0x4f]
  404c08:	in     eax,dx
  404c09:	cs push esp
  404c0b:	aad    0xe
  404c0d:	or     BYTE PTR [edi*8-0x7d12d4a7],0xdf
  404c15:	mov    ebx,0x46838c8d
  404c1a:	mov    cl,0x4
  404c1c:	and    BYTE PTR [eax+ebp*8-0x645f1a3e],ch
  404c23:	cli    
  404c24:	icebp  
  404c25:	enter  0xb684,0x2e
  404c29:	jae    0x404c0d
  404c2b:	sbb    DWORD PTR [ecx-0x11],ecx
  404c2e:	cli    
  404c2f:	cmp    DWORD PTR [edx-0x1e5eb2da],eax
  404c35:	test   al,0xc7
  404c37:	or     DWORD PTR [ebp+0x3142eb82],0xf40706ef
  404c41:	sub    edx,DWORD PTR [ebp-0x80]
  404c44:	adc    BYTE PTR [edx+0x61],dh
  404c47:	adc    BYTE PTR [ecx],ah
  404c49:	aad    0xa8
  404c4b:	mov    cl,0x13
  404c4d:	fcomp  DWORD PTR [ecx]
  404c4f:	mov    WORD PTR [ecx+eiz*8+0xfefbf2e],?
  404c56:	ins    BYTE PTR es:[edi],dx
  404c57:	push   edx
  404c58:	sbb    al,0x72
  404c5a:	mov    ds,WORD PTR [esi+eiz*8-0x58d5c4b3]
  404c61:	in     eax,dx
  404c62:	lds    ebx,FWORD PTR [ebx+eax*2]
  404c65:	sbb    dh,ch
  404c67:	cmc    
  404c68:	sbb    esi,DWORD PTR [ebx+0x2aba023]
  404c6e:	pop    ds
  404c6f:	clc    
  404c70:	adc    BYTE PTR [ebx+edi*1-0x5277d6c1],ch
  404c77:	fisubr DWORD PTR [eax+0x52]
  404c7a:	mov    ecx,0x7d9551f0
  404c7f:	pop    ebp
  404c80:	mov    bh,0x38
  404c82:	push   ebx
  404c83:	retf   
  404c84:	rol    ah,cl
  404c86:	idiv   BYTE PTR [ebx-0x13075bcf]
  404c8c:	sbb    edx,DWORD PTR [edi-0x7cd7de34]
  404c92:	cmp    bh,0x5a
  404c95:	(bad)  
  404c96:	jl     0x404cae
  404c98:	addr16 xchg ebx,eax
  404c9a:	mov    BYTE PTR [esi-0x1d552105],al
  404ca0:	pop    edx
  404ca1:	sti    
  404ca2:	mov    eax,ds:0xe191f5ca
  404ca7:	shl    bl,0x8a
  404caa:	dec    esp
  404cab:	shl    DWORD PTR [ebx+0x7fec6832],1
  404cb1:	pop    ecx
  404cb2:	mov    edi,0x1b6f8c38
  404cb7:	loope  0x404cc1
  404cb9:	xchg   BYTE PTR [edi-0x7c],dl
  404cbc:	mov    dh,0x4d
  404cbe:	das    
  404cbf:	ret    
  404cc0:	add    DWORD PTR [ebx+0x3e5806bb],esi
  404cc6:	pop    ds
  404cc7:	in     eax,0x1f
  404cc9:	hlt    
  404cca:	or     bl,ah
  404ccc:	jmp    0x1c2:0x3e870416
  404cd3:	push   0xffffffb0
  404cd5:	mov    esi,0x62655675
  404cda:	xchg   ebp,eax
  404cdb:	imul   esp,DWORD PTR [ebp-0x3c],0xffffffaa
  404cdf:	jno    0x404c72
  404ce1:	retf   
  404ce2:	push   ebp
  404ce3:	and    ah,dl
  404ce5:	xor    BYTE PTR ss:[eax-0x723d0e29],bl
  404cec:	push   ss
  404ced:	sub    al,0xa9
  404cef:	pop    edx
  404cf0:	adc    DWORD PTR [ecx-0x47a13f03],0xffffffcf
  404cf7:	sub    ebx,DWORD PTR [esi-0x633c677a]
  404cfd:	adc    ecx,DWORD PTR [esi+0x45fa6473]
  404d03:	push   es
  404d04:	pop    ebx
  404d05:	sub    bl,ah
  404d07:	or     ch,BYTE PTR ds:[edx+0x5c85c583]
  404d0e:	inc    ebx
  404d0f:	ret    0x3ac1
  404d12:	jno    0x404cbd
  404d14:	jno    0x404ccc
  404d16:	inc    esp
  404d17:	fldcw  WORD PTR [edi-0x29]
  404d1a:	or     DWORD PTR [eax-0x58],esi
  404d1d:	xchg   ebp,eax
  404d1e:	or     al,bh
  404d20:	mov    dh,0xaf
  404d22:	xchg   edx,eax
  404d23:	push   ebp
  404d24:	hlt    
  404d25:	repz xchg ecx,eax
  404d27:	ret    
  404d28:	hlt    
  404d29:	arpl   WORD PTR [ecx],ax
  404d2b:	stos   DWORD PTR es:[edi],eax
  404d2c:	(bad)  
  404d2e:	ins    DWORD PTR es:[edi],dx
  404d2f:	sbb    BYTE PTR [edi-0x465e4ffd],0xa0
  404d36:	and    al,0xee
  404d38:	imul   ecx,DWORD PTR [edi+eax*4+0x8],0x7a5643d
  404d40:	push   0xc318e4e3
  404d45:	test   DWORD PTR [edi],esp
  404d47:	dec    ebx
  404d48:	dec    edx
  404d49:	mov    eax,ds:0xbf46f236
  404d4e:	call   0x881e6fdd
  404d53:	test   eax,0xc765702d
  404d58:	int3   
  404d59:	adc    BYTE PTR [esi-0x50a60b66],cl
  404d5f:	mov    BYTE PTR [ebx+0x10251c80],dh
  404d65:	imul   esi,DWORD PTR fs:[eax+0x51941e71],0x4b
  404d6d:	repnz sub al,0x97
  404d70:	les    ebp,FWORD PTR [eax]
  404d72:	add    eax,0x5eb65ded
  404d77:	jbe    0x404db6
  404d79:	mov    ch,0x6b
  404d7b:	test   al,0x8b
  404d7d:	push   edi
  404d7e:	dec    DWORD PTR [edx]
  404d80:	hlt    
  404d81:	and    eax,0xc0dc452b
  404d86:	mov    eax,0x8d00e55f
  404d8b:	mov    dl,0xa2
  404d8d:	xor    ch,BYTE PTR [ecx+0x3b2ddd71]
  404d93:	jmp    0x404db9
  404d95:	stos   BYTE PTR es:[edi],al
  404d96:	ins    DWORD PTR es:[edi],dx
  404d97:	and    BYTE PTR [ebp+0x4],bl
  404d9a:	ins    BYTE PTR es:[edi],dx
  404d9b:	leave  
  404d9c:	adc    ebp,edi
  404d9e:	int3   
  404d9f:	in     eax,0xdf
  404da1:	dec    ebp
  404da2:	fwait
  404da3:	xchg   ebx,eax
  404da4:	aad    0x48
  404da6:	in     eax,0x9b
  404da8:	je     0x404e1b
  404daa:	clc    
  404dab:	pop    esi
  404dac:	out    0x55,al
  404dae:	sub    edx,0x55
  404db1:	adc    BYTE PTR [edi-0x6960b551],0x46
  404db8:	mov    ah,0xf6
  404dba:	outs   dx,BYTE PTR ds:[esi]
  404dbb:	xor    eax,DWORD PTR [esp+ebp*8-0x2b7a157e]
  404dc2:	mov    eax,ds:0x158ce9fd
  404dc7:	out    dx,eax
  404dc8:	add    bh,bl
  404dca:	outs   dx,BYTE PTR ds:[esi]
  404dcb:	loope  0x404e4a
  404dcd:	push   edi
  404dce:	test   DWORD PTR [edi+0x6d],0x5a6c9b9a
  404dd5:	jmp    0x404d6c
  404dd7:	aaa    
  404dd8:	mov    edi,0x575a2480
  404ddd:	xor    bl,ah
  404ddf:	sbb    DWORD PTR [edx],edi
  404de1:	mov    esp,DWORD PTR [edi]
  404de3:	loopne 0x404d90
  404de5:	pop    ebx
  404de6:	ins    BYTE PTR es:[edi],dx
  404de7:	daa    
  404de8:	test   BYTE PTR [ebx],al
  404dea:	adc    ch,BYTE PTR [ebx-0x1749362f]
  404df0:	and    al,0x14
  404df2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404df3:	cmp    ah,BYTE PTR [edi-0x3ba14531]
  404df9:	inc    edi
  404dfa:	shr    BYTE PTR [ebp+0xc363280],0x8c
  404e01:	retf   
  404e02:	mov    edi,0x1296f1c8
  404e07:	not    BYTE PTR es:[ebx]
  404e0a:	xor    esp,DWORD PTR [edi]
  404e0c:	add    DWORD PTR [edx+0x15d4dc5e],edi
  404e12:	inc    ebx
  404e13:	mov    ah,0x93
  404e15:	mov    edx,0x881d81c0
  404e1a:	sub    BYTE PTR [ebp+0x62b06760],ah
  404e20:	dec    edx
  404e21:	push   ecx
  404e22:	mul    BYTE PTR [edi+eiz*2-0x64a5e368]
  404e29:	(bad)  
  404e2a:	sub    ebx,esp
  404e2c:	jmp    0x5352:0x26a732e5
  404e33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e34:	cdq    
  404e35:	icebp  
  404e36:	pop    es
  404e37:	adc    BYTE PTR [ecx+0x35f1e500],ah
  404e3d:	mov    ecx,0x1a5823ed
  404e42:	test   eax,0x2a908806
  404e47:	jnp    0x404ea6
  404e49:	mov    dl,0xe8
  404e4b:	in     eax,dx
  404e4c:	push   ecx
  404e4d:	and    al,al
  404e4f:	mov    al,ds:0x20e8c641
  404e54:	ja     0x404e68
  404e56:	mov    ds:0xdf4b5823,al
  404e5b:	or     BYTE PTR [esi-0x406acedd],bl
  404e61:	or     al,0x47
  404e63:	or     DWORD PTR [ebx-0x67],0x467a0771
  404e6a:	cmp    eax,0xd52bb16d
  404e6f:	add    esi,DWORD PTR [ebx-0x16132c1e]
  404e75:	cli    
  404e76:	(bad)  
  404e77:	jb     0x404e78
  404e79:	push   ebp
  404e7a:	xchg   edi,eax
  404e7b:	add    al,0x80
  404e7d:	sub    eax,0x690c7b17
  404e82:	sti    
  404e83:	push   ss
  404e84:	mov    dh,0x2
  404e86:	inc    esi
  404e87:	xchg   esp,eax
  404e88:	cdq    
  404e89:	xor    DWORD PTR ds:0xde6fa95,esi
  404e8f:	fadd   st(6),st
  404e91:	mov    dh,0x5f
  404e93:	rol    bh,0xc1
  404e96:	(bad)  
  404e97:	xor    al,0x85
  404e99:	test   BYTE PTR [eax],ch
  404e9b:	push   esp
  404e9c:	call   0x7f1b:0x14128ca2
  404ea3:	std    
  404ea4:	cmp    ecx,esp
  404ea6:	jns    0x404e7a
  404ea8:	jp     0x404ebd
  404eaa:	dec    eax
  404eab:	test   eax,0x55837d7c
  404eb0:	mov    esi,0x2f40c83b
  404eb5:	pop    edx
  404eb6:	cmp    ebp,edi
  404eb8:	into   
  404eb9:	xchg   ecx,eax
  404eba:	dec    edx
  404ebb:	cmc    
  404ebc:	rcr    DWORD PTR [edi],1
  404ebe:	in     eax,dx
  404ebf:	mov    ecx,0xb7c014d2
  404ec4:	nop
  404ec5:	sbb    DWORD PTR [edi+esi*1-0x58],edx
  404ec9:	mov    esp,0xd6e369ed
  404ece:	mov    DWORD PTR [ecx+ecx*4],ecx
  404ed1:	out    0x5a,eax
  404ed3:	pop    ebp
  404ed4:	sub    bh,BYTE PTR [eax-0x523ff18d]
  404eda:	stc    
  404edb:	push   eax
  404edc:	test   DWORD PTR [edx-0x6e],edi
  404edf:	sub    dl,al
  404ee1:	push   cs
  404ee2:	mov    esi,DWORD PTR [eax+0xbb57c7b]
  404ee8:	(bad)  
  404eea:	sbb    edi,DWORD PTR [esi+0x72]
  404eed:	add    edi,DWORD PTR [ebx+0x15]
  404ef0:	div    DWORD PTR [esi+0x34e826cd]
  404ef6:	fwait
  404ef7:	mov    BYTE PTR [ebx-0x3252aeef],cl
  404efd:	push   0x270a5f68
  404f02:	outs   dx,DWORD PTR ds:[esi]
  404f03:	dec    esi
  404f04:	cdq    
  404f05:	leave  
  404f06:	xchg   ecx,eax
  404f07:	xchg   ebx,eax
  404f08:	jecxz  0x404f50
  404f0a:	arpl   WORD PTR [esi+0x60413627],ax
  404f10:	or     DWORD PTR [eax],esi
  404f12:	fsub   QWORD PTR [edx-0x5fc1eeba]
  404f18:	or     BYTE PTR [ecx+0x38],bh
  404f1b:	mov    WORD PTR [edx-0x41],?
  404f1e:	jnp    0x404f39
  404f20:	mov    BYTE PTR [ebp+0x2b8bb2ee],bl
  404f26:	call   0x999e5d1c
  404f2b:	sub    BYTE PTR [edi],0x5f
  404f2e:	inc    ebx
  404f2f:	cmp    BYTE PTR [edx+0x3f],dh
  404f32:	ret    
  404f33:	aam    0xfd
  404f35:	int3   
  404f36:	pop    edi
  404f37:	inc    esp
  404f38:	bound  ebp,QWORD PTR [ebx+0x2cbeae04]
  404f3e:	mov    dh,0x94
  404f40:	idiv   bh
  404f42:	jns    0x404efd
  404f44:	popf   
  404f45:	loopne 0x404f0a
  404f47:	inc    eax
  404f48:	fcom   st(0)
  404f4a:	mov    edx,0xacf2385d
  404f4f:	cmp    BYTE PTR [ecx],dl
  404f51:	rcl    dl,cl
  404f53:	pop    ds
  404f54:	add    eax,0xfbe87c54
  404f59:	mov    dh,0x72
  404f5b:	cld    
  404f5c:	or     al,ch
  404f5e:	lods   eax,DWORD PTR ds:[esi]
  404f5f:	jo     0x404ef1
  404f61:	jl     0x404f1c
  404f63:	push   ds
  404f64:	mov    esp,0x5b775e91
  404f69:	jnp    0x404f2d
  404f6b:	or     dh,bl
  404f6d:	inc    esp
  404f6e:	lods   eax,DWORD PTR ds:[esi]
  404f6f:	or     eax,0xe278a39c
  404f74:	pop    ebp
  404f75:	fcomp  st(7)
  404f77:	ret    
  404f78:	pushf  
  404f79:	outs   dx,DWORD PTR ds:[esi]
  404f7a:	pop    es
  404f7b:	bnd jp 0x404f3d
  404f7e:	sbb    cl,dl
  404f80:	or     BYTE PTR [ecx-0x35f2f5f8],cl
  404f86:	int3   
  404f87:	popa   
  404f88:	not    DWORD PTR [ecx]
  404f8a:	pop    ebp
  404f8b:	aaa    
  404f8c:	test   eax,edi
  404f8e:	dec    ecx
  404f8f:	push   edi
  404f90:	xor    al,0xe6
  404f92:	fsubr  st,st(0)
  404f94:	jmp    esp
  404f96:	xchg   ebp,eax
  404f97:	out    0x41,al
  404f99:	int3   
  404f9a:	into   
  404f9b:	xor    ebp,DWORD PTR [ebp+edi*1-0x6e815c7]
  404fa2:	fwait
  404fa3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404fa4:	dec    ebx
  404fa5:	ins    BYTE PTR es:[edi],dx
  404fa6:	test   BYTE PTR [ecx-0xa],ah
  404fa9:	enter  0x9ba6,0xff
  404fad:	aam    0xe7
  404faf:	add    BYTE PTR [esi],0x5a
  404fb2:	xor    ch,BYTE PTR [ebx]
  404fb4:	ficom  DWORD PTR [edx-0x52]
  404fb7:	test   BYTE PTR [ebp-0x69272e30],bh
  404fbd:	scas   al,BYTE PTR es:[edi]
  404fbe:	pand   mm1,QWORD PTR [edi+esi*4-0x31]
  404fc3:	mov    bl,0x82
  404fc5:	sbb    esp,DWORD PTR [edx+0x23]
  404fc8:	imul   ebp,esp,0x7d
  404fcb:	rcl    BYTE PTR [edx-0x39837228],0xeb
  404fd2:	push   0xf9cd557b
  404fd7:	xor    DWORD PTR [edi+0x7ab69cb7],esi
  404fdd:	mov    cl,0x9f
  404fdf:	mov    WORD PTR [edi-0x3af5c1b1],ds
  404fe5:	(bad)  
  404fe6:	call   0x4b14b223
  404feb:	mov    al,0xaa
  404fed:	xor    bh,BYTE PTR ds:0x89e25906
  404ff3:	mov    ebp,DWORD PTR [ecx-0x1832cca0]
  404ff9:	shr    BYTE PTR ds:0x5f8b91e,0xb8
  405000:	mov    ecx,0x38c71653
  405005:	dec    esp
  405006:	sbb    ah,dh
  405008:	xor    eax,0xf6ba5a8b
  40500d:	out    dx,eax
  40500e:	xchg   eax,ecx
  405010:	and    edi,esi
  405012:	mov    esi,0x877db67b
  405017:	xor    al,BYTE PTR [edx-0x78]
  40501a:	mov    dl,0xf5
  40501c:	inc    ebp
  40501d:	jns    0x404fde
  40501f:	or     BYTE PTR [edi+ebp*1],bl
  405022:	sbb    eax,0xc1bf5b5d
  405027:	dec    edx
  405028:	test   al,0x81
  40502a:	jg     0x405064
  40502c:	jle    0x404ff3
  40502e:	stos   DWORD PTR es:[edi],eax
  40502f:	pminsw mm4,mm5
  405032:	cdq    
  405033:	fimul  WORD PTR [edi-0x10]
  405036:	mov    eax,0x5a84bbfb
  40503b:	or     edi,DWORD PTR [edx+0x5d774b15]
  405041:	ss repz xor al,0x12
  405045:	in     eax,0x34
  405047:	sbb    edi,DWORD PTR [ebx+0x4a323177]
  40504d:	jns    0x404ff8
  40504f:	jne    0x4050c5
  405051:	pop    eax
  405052:	fild   QWORD PTR [edi+ecx*2-0xef62d22]
  405059:	test   al,0xba
  40505b:	or     DWORD PTR ds:[eiz*2+0x5a024841],edi
  405063:	jno    0x4050c3
  405065:	and    BYTE PTR [eax],cl
  405067:	inc    esi
  405068:	push   0x526ed15e
  40506d:	in     al,0xdb
  40506f:	xchg   BYTE PTR [ebp+ecx*2-0x79],ah
  405073:	pusha  
  405074:	aas    
  405075:	fcomp  QWORD PTR [ecx+0x2b5c3bce]
  40507b:	int3   
  40507c:	(bad)  
  40507d:	cmp    ecx,DWORD PTR [ecx-0x56]
  405080:	or     BYTE PTR [edi+0x28539bb6],0x9a
  405087:	adc    dl,al
  405089:	pop    esp
  40508a:	popa   
  40508b:	xchg   esp,eax
  40508c:	ins    BYTE PTR es:[edi],dx
  40508d:	stos   BYTE PTR es:[edi],al
  40508e:	or     DWORD PTR [edi+esi*4+0x5a],0xffffffdb
  405093:	sbb    ah,bh
  405095:	ror    DWORD PTR [ebx-0x70760919],1
  40509b:	mov    WORD PTR [esi+0x2b],fs
  40509e:	in     al,0x7c
  4050a0:	shl    BYTE PTR [edi+edx*1-0x1d],cl
  4050a4:	nop
  4050a5:	xor    al,0xcc
  4050a7:	int3   
  4050a8:	sti    
  4050a9:	xchg   esp,eax
  4050aa:	xchg   edx,eax
  4050ab:	mov    ebp,0x68139278
  4050b0:	bound  esi,QWORD PTR [ebx-0x417b6ad4]
  4050b6:	fidiv  DWORD PTR [ebp+ebx*4+0x277b6d72]
  4050bd:	jg     0x40506d
  4050bf:	pop    edi
  4050c0:	std    
  4050c1:	aaa    
  4050c2:	push   eax
  4050c3:	shl    DWORD PTR [edx-0x77],0x69
  4050c7:	in     al,dx
  4050c8:	lods   al,BYTE PTR ds:[esi]
  4050c9:	mov    ah,0x63
  4050cb:	sti    
  4050cc:	js     0x405130
  4050ce:	popf   
  4050cf:	outs   dx,DWORD PTR ds:[esi]
  4050d0:	push   ss
  4050d1:	or     al,0xbb
  4050d3:	inc    edi
  4050d4:	je     0x40508f
  4050d6:	inc    esp
  4050d7:	(bad)  
  4050d8:	(bad)  
  4050d9:	fst    QWORD PTR [esi+0x7272282e]
  4050df:	ss dec esi
  4050e1:	call   0xa2eb:0x44b84032
  4050e8:	mov    eax,0xa276215b
  4050ed:	pop    ss
  4050ee:	out    dx,eax
  4050ef:	outs   dx,DWORD PTR ds:[esi]
  4050f0:	push   esp
  4050f1:	loopne 0x4050a8
  4050f3:	sub    al,0x22
  4050f5:	xchg   edx,eax
  4050f6:	aas    
  4050f7:	or     bh,BYTE PTR [ebx+ecx*4]
  4050fa:	adc    edi,eax
  4050fc:	retf   
  4050fd:	or     al,BYTE PTR [ebx]
  4050ff:	cmp    al,0x8f
  405101:	sbb    eax,0x6e8a12a6
  405106:	jle    0x405151
  405108:	xor    DWORD PTR [edi+0x3f],ebp
  40510b:	push   ss
  40510c:	lods   al,BYTE PTR ds:[esi]
  40510d:	mov    al,0xf0
  40510f:	sub    DWORD PTR [ecx],edi
  405111:	lods   al,BYTE PTR ds:[esi]
  405112:	mov    ds:0x20ec3202,eax
  405117:	add    ebp,DWORD PTR [ebp+0x1706f185]
  40511d:	or     eax,0x186809d7
  405122:	dec    eax
  405123:	enter  0x7ab3,0x71
  405127:	test   BYTE PTR [edi-0x2181afd0],al
  40512d:	(bad)  
  40512e:	(bad)  [edx+eax*1+0x6]
  405132:	dec    ecx
  405133:	push   eax
  405134:	in     al,0xd
  405136:	push   es
  405137:	es cmp BYTE PTR ss:[edx+0x3b],bh
  40513c:	mov    dl,0xf0
  40513e:	jmp    0x5ecf6bf5
  405143:	or     DWORD PTR [edx+0x2f00e67a],esi
  405149:	jp     0x4051ab
  40514b:	(bad)  
  40514c:	mov    ebx,0xa44985b0
  405151:	pop    ds
  405152:	in     al,0xa7
  405154:	stos   DWORD PTR es:[edi],eax
  405155:	bound  eax,QWORD PTR [ebp+0x73ad6c04]
  40515b:	lods   eax,DWORD PTR ds:[esi]
  40515c:	aam    0x84
  40515e:	push   eax
  40515f:	icebp  
  405160:	xchg   edi,eax
  405161:	arpl   bp,sp
  405163:	scas   eax,DWORD PTR es:[edi]
  405164:	bound  ebx,QWORD PTR ds:0x262a02c1
  40516a:	imul   ebx,DWORD PTR [edx-0x24ddc192],0xffffff8d
  405171:	sub    al,0xae
  405173:	aad    0x5c
  405175:	xchg   ebp,eax
  405176:	mov    ds:0x3033e87a,al
  40517b:	mov    al,0xd0
  40517d:	fsubr  DWORD PTR [esi+0x1a]
  405180:	(bad)  
  405181:	pusha  
  405182:	adc    bh,BYTE PTR [edi]
  405184:	jp     0x405187
  405186:	into   
  405187:	jecxz  0x4051d0
  405189:	(bad)
  40518d:	out    dx,eax
  40518e:	jle    0x405133
  405190:	stc    
  405191:	iret   
  405192:	or     BYTE PTR [ebx],ah
  405194:	or     BYTE PTR [esi+0x62],bl
  405197:	sub    DWORD PTR [esi-0x5e],esp
  40519a:	(bad)  
  40519b:	mov    edi,0xc97c3573
  4051a0:	out    0x5b,eax
  4051a2:	pop    ebp
  4051a3:	inc    edx
  4051a4:	int3   
  4051a5:	icebp  
  4051a6:	(bad)  
  4051a7:	in     eax,0x1f
  4051a9:	sahf   
  4051aa:	ss dec eax
  4051ac:	dec    edi
  4051ad:	int3   
  4051ae:	xchg   edx,eax
  4051af:	or     esp,edi
  4051b1:	or     dl,BYTE PTR [edi]
  4051b3:	inc    edi
  4051b4:	and    ah,BYTE PTR [eax]
  4051b6:	push   0x44
  4051b8:	adc    al,0x54
  4051ba:	dec    ecx
  4051bb:	test   ah,bh
  4051bd:	xchg   DWORD PTR [ebp-0x3380b51c],edx
  4051c3:	add    ebx,DWORD PTR [esi+0x27219482]
  4051c9:	dec    edx
  4051ca:	sub    eax,0x681a57d5
  4051cf:	std    
  4051d0:	fmul   QWORD PTR [esi]
  4051d2:	in     eax,dx
  4051d3:	loop   0x405189
  4051d5:	ror    eax,0x61
  4051d8:	jae    0x4051c4
  4051da:	(bad)  
  4051db:	mov    eax,0x9ed26a20
  4051e0:	mov    eax,0xed1b7fbb
  4051e5:	test   BYTE PTR [ebx-0x5d],dl
  4051e8:	mov    ebp,0xfec93438
  4051ed:	xor    DWORD PTR [edi],esi
  4051ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051f0:	xchg   esi,eax
  4051f1:	js     0x40521a
  4051f3:	jmp    0x76b384de
  4051f8:	jnp    0x405240
  4051fa:	inc    ecx
  4051fb:	mov    cl,0x21
  4051fd:	(bad)  
  4051fe:	loope  0x40521e
  405200:	jmp    0xfb5e:0x65be12f6
  405207:	outs   dx,DWORD PTR ds:[esi]
  405208:	jecxz  0x4051b7
  40520a:	mov    ecx,0x2ac74bbe
  40520f:	cs jnp 0x4051ea
  405212:	mov    bh,0xde
  405214:	cdq    
  405215:	stos   DWORD PTR es:[edi],eax
  405216:	pop    edi
  405217:	adc    al,0x35
  405219:	cld    
  40521a:	rcr    BYTE PTR [ecx+0x33],1
  40521d:	jmp    0x9ef3:0x9d928346
  405224:	add    DWORD PTR [ebx],esp
  405226:	push   ebp
  405227:	mov    ecx,0xa3588214
  40522c:	scas   eax,DWORD PTR es:[edi]
  40522d:	sti    
  40522e:	jne    0x40527d
  405230:	mov    dh,0x62
  405232:	test   BYTE PTR [edi-0x25e0df2b],bh
  405238:	pop    esp
  405239:	dec    ebp
  40523a:	inc    esi
  40523b:	add    eax,0x9dce65b
  405240:	into   
  405241:	int3   
  405242:	scas   al,BYTE PTR es:[edi]
  405243:	out    0xc7,eax
  405245:	div    esp
  405247:	push   0x379f2e6d
  40524c:	fcmovnu st,st(5)
  40524e:	jnp    0x405260
  405250:	pop    edi
  405251:	in     eax,dx
  405252:	jns    0x405274
  405254:	mov    al,0x3
  405256:	idiv   DWORD PTR [esi+0x31]
  405259:	mov    eax,ds:0x3e31acb2
  40525e:	xor    ebx,0xac74c2c0
  405264:	push   eax
  405265:	push   cs
  405266:	jecxz  0x40527f
  405268:	icebp  
  405269:	loope  0x405288
  40526b:	mov    bl,BYTE PTR [ebx+eax*4+0x36e57068]
  405272:	cmp    DWORD PTR [ebx-0x26303832],esp
  405278:	add    al,0x24
  40527a:	call   0x6018:0x2f1cf8c9
  405281:	mov    ah,BYTE PTR [esi+0x70660696]
  405287:	inc    esi
  405288:	or     dh,BYTE PTR [eax+ebp*1+0x5fd04f4d]
  40528f:	pop    edi
  405290:	call   0xdc8d2a7
  405295:	sar    BYTE PTR [esi+edx*4+0x790a3d22],1
  40529c:	and    DWORD PTR [ebx],0xedda04e3
  4052a2:	repz jcxz 0x405304
  4052a6:	add    BYTE PTR [ecx-0x31b51fb8],ch
  4052ac:	and    DWORD PTR [esi-0x6d],esi
  4052af:	sbb    DWORD PTR [edi-0x16],ebx
  4052b2:	ds jo  0x40531a
  4052b5:	and    al,0xcd
  4052b7:	push   eax
  4052b8:	mov    ch,ah
  4052ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052bb:	adc    edi,edx
  4052bd:	xchg   esi,eax
  4052be:	sub    al,0x9f
  4052c0:	mov    bh,BYTE PTR [edx]
  4052c2:	mov    ebx,0x171f8846
  4052c7:	aas    
  4052c8:	jg     0x4052f6
  4052ca:	stos   BYTE PTR es:[edi],al
  4052cb:	xchg   ecx,eax
  4052cc:	pop    ss
  4052cd:	xor    BYTE PTR [esi+0x7b4bfca8],dh
  4052d3:	ins    DWORD PTR es:[edi],dx
  4052d4:	out    0xc3,al
  4052d6:	dec    edx
  4052d7:	push   ds
  4052d8:	(bad)  
  4052da:	retf   0x70be
  4052dd:	(bad)  
  4052df:	dec    edi
  4052e0:	jmp    0x40529e
  4052e2:	fisub  DWORD PTR ds:0x198f0c8e
  4052e8:	ret    
  4052e9:	jl     0x4052a0
  4052eb:	jmp    0x7b6ae5aa
  4052f0:	aaa    
  4052f1:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052f3:	repnz lods al,BYTE PTR es:[esi]
  4052f6:	sub    BYTE PTR [ebp+edx*1-0x69],0xde
  4052fb:	and    esp,ecx
  4052fd:	add    al,ch
  4052ff:	stc    
  405300:	inc    ecx
  405301:	xchg   ebx,eax
  405302:	and    DWORD PTR ds:0x8c387b4e,ebx
  405308:	(bad)  
  405309:	cmc    
  40530a:	jnp    0x405338
  40530c:	and    BYTE PTR [ecx+eax*4-0x191d0004],cl
  405313:	sbb    dh,BYTE PTR [edx-0x63]
  405316:	adc    eax,0x6ce5f7ab
  40531b:	pop    ebx
  40531c:	cdq    
  40531d:	mov    ecx,0x56c98ef6
  405322:	in     al,0x67
  405324:	and    dl,al
  405326:	rcl    BYTE PTR [ecx+ebp*4+0x5c163811],cl
  40532d:	scas   al,BYTE PTR es:[edi]
  40532e:	je     0x40530e
  405330:	repnz fsubr st(3),st
  405333:	loopne 0x4052b5
  405335:	adc    esp,DWORD PTR [edi+ecx*4+0x6d8fd806]
  40533c:	rcl    BYTE PTR [eax+0x55],1
  40533f:	add    ah,BYTE PTR [esi]
  405341:	sub    al,0xcb
  405343:	shl    DWORD PTR ds:0xf7c335ec,cl
  405349:	pushf  
  40534a:	retf   0x9860
  40534d:	je     0x405354
  40534f:	sahf   
  405350:	push   edi
  405351:	pop    eax
  405352:	push   0xca11b311
  405357:	rcl    DWORD PTR [eax-0x5],0xc2
  40535b:	nop
  40535c:	add    ecx,DWORD PTR [edx]
  40535e:	out    0xad,al
  405360:	in     eax,dx
  405361:	test   bh,dl
  405363:	cmp    al,0x6f
  405365:	dec    edx
  405366:	jle    0x4052f2
  405368:	ins    BYTE PTR es:[edi],dx
  405369:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40536a:	pop    ebx
  40536b:	mov    dl,0xca
  40536d:	cs scas eax,DWORD PTR es:[edi]
  40536f:	dec    esi
  405370:	sbb    esi,DWORD PTR [ebx+esi*2]
  405373:	mov    ecx,0x49b928b3
  405378:	dec    DWORD PTR [esi]
  40537a:	push   ds
  40537b:	pop    ebx
  40537c:	jbe    0x4053a4
  40537e:	jnp    0x4053a8
  405380:	rcr    DWORD PTR ds:0xea0c4b27,cl
  405386:	dec    esi
  405387:	jge    0x4053ad
  405389:	adc    BYTE PTR [edi+0x1a],ah
  40538c:	cmp    al,0x36
  40538e:	jns    0x405372
  405390:	lods   al,BYTE PTR ds:[esi]
  405391:	into   
  405392:	lea    edi,[eax]
  405394:	or     esp,DWORD PTR ds:0x4213ae01
  40539a:	cmp    ecx,DWORD PTR [ecx]
  40539c:	sahf   
  40539d:	mov    edx,0xc5675de6
  4053a2:	jg     0x40536e
  4053a4:	mov    ecx,DWORD PTR [ebp-0x4d]
  4053a7:	dec    edi
  4053a8:	call   0x518a96c0
  4053ad:	sar    BYTE PTR [ebx+0x2b],1
  4053b0:	inc    edx
  4053b1:	test   eax,0xca805645
  4053b6:	inc    edi
  4053b7:	adc    BYTE PTR [ecx+0x71],ah
  4053ba:	ret    
  4053bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053bc:	(bad)  
  4053bd:	aad    0xc
  4053bf:	repnz addr16 inc esi
  4053c2:	add    cl,BYTE PTR [ebp-0xb4e2345]
  4053c8:	sub    BYTE PTR [edi+0x56c0f534],0xf8
  4053cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053d0:	sysenter 
  4053d2:	and    al,0xea
  4053d4:	pusha  
  4053d5:	xchg   esi,eax
  4053d6:	add    BYTE PTR [edi],0xd8
  4053d9:	inc    edi
  4053da:	fdiv   QWORD PTR [edi+0x59fc25c8]
  4053e0:	add    bh,BYTE PTR [esi]
  4053e2:	mov    ds:0xe0dd9d3e,eax
  4053e7:	in     al,0x8d
  4053e9:	scas   eax,DWORD PTR es:[edi]
  4053ea:	(bad)  
  4053eb:	test   al,0xc4
  4053ed:	inc    esi
  4053ee:	add    ch,ah
  4053f0:	rep outs dx,BYTE PTR ds:[esi]
  4053f2:	dec    esi
  4053f3:	xchg   ecx,eax
  4053f4:	xchg   edx,eax
  4053f5:	push   0x6d1b289e
  4053fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4053fb:	add    al,0x30
  4053fd:	pop    DWORD PTR [esi+esi*2+0x5369630a]
  405404:	int3   
  405405:	(bad)  
  405406:	fstp   QWORD PTR [edi]
  405408:	add    eax,esi
  40540a:	xor    BYTE PTR [ecx+0x28],al
  40540d:	jnp    0x4053f8
  40540f:	inc    edi
  405410:	loope  0x4053c1
  405412:	scas   al,BYTE PTR es:[edi]
  405413:	sub    DWORD PTR [esi],0x40016904
  405419:	sub    BYTE PTR [esi],cl
  40541b:	pop    ebp
  40541c:	pushf  
  40541d:	jmp    0xba56:0xaafbf804
  405424:	fst    DWORD PTR [edi+edi*8+0x3da202eb]
  40542b:	sbb    eax,0x10f60836
  405430:	pop    edi
  405431:	or     al,0x9f
  405433:	xchg   edx,eax
  405434:	scas   al,BYTE PTR es:[edi]
  405435:	mov    al,ds:0xb522aa31
  40543a:	imul   BYTE PTR [esi+0x41]
  40543d:	mov    al,0x9a
  40543f:	aas    
  405440:	push   ebp
  405441:	lods   eax,DWORD PTR ds:[esi]
  405442:	sub    DWORD PTR [ebx],edx
  405444:	jle    0x40547a
  405446:	sub    eax,0x14f7f6bd
  40544b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40544c:	xor    DWORD PTR [edi],ecx
  40544e:	loop   0x40542f
  405450:	jmp    0xce10acda
  405455:	out    0xe8,eax
  405457:	sub    esp,DWORD PTR [edi]
  405459:	scas   eax,DWORD PTR es:[edi]
  40545a:	pop    ds
  40545b:	add    BYTE PTR [edx+0x41],al
  40545e:	mov    ds:0xf4a18ea7,al
  405463:	pop    edx
  405464:	ds sbb dh,dh
  405467:	fdiv   DWORD PTR [edx-0x3038cdc4]
  40546d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40546e:	add    eax,0xb6cdf787
  405473:	out    dx,eax
  405474:	cmc    
  405475:	scas   al,BYTE PTR es:[edi]
  405476:	call   0xae54:0xd2df919f
  40547d:	adc    BYTE PTR [edi],dl
  40547f:	mov    BYTE PTR [eax],0x57
  405482:	cmp    ebp,eax
  405484:	aas    
  405485:	and    BYTE PTR [esi-0x57],bl
  405488:	jb     0x40540f
  40548a:	mov    esi,0x1e1a11ba
  40548f:	icebp  
  405490:	and    BYTE PTR [esp+ecx*4+0x33],bh
  405494:	pop    esp
  405495:	inc    ebp
  405496:	add    BYTE PTR ds:0xb36bede1,dh
  40549c:	lahf   
  40549d:	jmp    FWORD PTR [esi-0x2001480d]
  4054a3:	jge    0x4054d7
  4054a5:	pop    edi
  4054a6:	and    al,0x6f
  4054a8:	mov    dh,0x4d
  4054aa:	and    eax,0x6bc4c275
  4054af:	std    
  4054b0:	jmp    0x405468
  4054b2:	and    eax,0x27657423
  4054b7:	sti    
  4054b8:	jmp    DWORD PTR [ecx+0x13331d40]
  4054be:	or     BYTE PTR [esp+ebx*2],0xe8
  4054c2:	and    eax,0xf332af7c
  4054c7:	pop    ebx
  4054c8:	mov    bh,0x6
  4054ca:	mov    dh,0xb8
  4054cc:	xchg   esi,eax
  4054cd:	dec    edi
  4054ce:	xchg   edi,eax
  4054cf:	cmc    
  4054d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4054d1:	arpl   WORD PTR [ebp+ebx*2+0x12a8d0da],si
  4054d8:	cmp    ecx,esi
  4054da:	shr    DWORD PTR [ebx-0x6498df34],1
  4054e0:	arpl   WORD PTR [ecx+0x7d],dx
  4054e3:	sbb    eax,ecx
  4054e5:	pop    es
  4054e6:	ficom  DWORD PTR ss:[ecx]
  4054e9:	(bad)  
  4054eb:	add    al,0x4
  4054ed:	(bad)  
  4054ee:	cmp    al,0xa5
  4054f0:	mov    eax,0x3ffc1665
  4054f5:	in     al,dx
  4054f6:	and    esi,0x6a026737
  4054fc:	push   edi
  4054fd:	add    DWORD PTR [eax+eax*4],ebp
  405500:	rcr    BYTE PTR [ebx-0x3f3073c7],cl
  405506:	call   0x72c6547d
  40550b:	jle    0x4054af
  40550d:	outs   dx,DWORD PTR ds:[esi]
  40550e:	cmp    al,0x85
  405510:	sti    
  405511:	aad    0x2c
  405513:	xchg   esp,eax
  405514:	mov    dl,0xb7
  405516:	mov    edx,0xc1f485d5
  40551b:	push   ebp
  40551c:	fsubr  DWORD PTR [esi+0x79016b4c]
  405522:	add    eax,0x3131ba56
  405527:	pop    edx
  405528:	sbb    esi,DWORD PTR [ecx]
  40552a:	mov    ecx,0xb2d9004b
  40552f:	pop    esi
  405530:	cli    
  405531:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405532:	xor    eax,0xc4cd700e
  405537:	lock xchg BYTE PTR [eax+ebx*8],dl
  40553b:	jb     0x4054c6
  40553d:	cmovle esp,DWORD PTR [eax+edx*2-0x61]
  405542:	in     eax,0x39
  405544:	bound  ebx,QWORD PTR [esi-0x28b488b3]
  40554a:	sahf   
  40554b:	cld    
  40554c:	pop    ds
  40554d:	pop    edx
  40554e:	xchg   edx,eax
  40554f:	adc    eax,0x6498402b
  405554:	xchg   esi,eax
  405555:	mov    dl,0xf1
  405557:	xchg   edi,eax
  405558:	outs   dx,BYTE PTR ds:[esi]
  405559:	mov    edi,0x4fe8ee4b
  40555e:	rcr    DWORD PTR [eax+0x22],0x96
  405562:	inc    edx
  405563:	sub    al,BYTE PTR [edi-0x53]
  405566:	fcomp  st(5)
  405568:	outs   dx,DWORD PTR ds:[esi]
  405569:	std    
  40556a:	xchg   edx,eax
  40556b:	xor    ch,dl
  40556d:	cmc    
  40556e:	pop    esi
  40556f:	push   ds
  405570:	fcmovnb st,st(3)
  405572:	into   
  405573:	push   ecx
  405574:	adc    dl,BYTE PTR [edi+0x6f]
  405577:	and    DWORD PTR [edi-0x44],edx
  40557a:	pop    esp
  40557b:	test   BYTE PTR ds:0x770ef30b,dl
  405581:	mov    edx,0x7da6843d
  405586:	imul   edi,edx,0x938de168
  40558c:	mov    ebx,0x4e629f29
  405591:	or     al,bl
  405593:	add    ebx,esi
  405595:	pop    ds
  405596:	sub    cl,al
  405598:	mov    edx,esi
  40559a:	imul   edi,ebp,0xffffff86
  40559d:	popa   
  40559e:	add    edi,DWORD PTR [esi+0x2e]
  4055a1:	push   eax
  4055a2:	imul   ebp,DWORD PTR [edi+0x5ff3b4e3],0x769680bd
  4055ac:	mov    al,0x20
  4055ae:	pop    edx
  4055af:	clc    
  4055b0:	mov    edi,0xc979a6c6
  4055b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055b6:	jns    0x40554d
  4055b8:	call   0xd1ed:0x21d143bb
  4055bf:	inc    ebp
  4055c0:	ins    BYTE PTR es:[edi],dx
  4055c1:	aaa    
  4055c2:	push   esp
  4055c3:	mov    ds:0xff730987,eax
  4055c8:	out    dx,al
  4055c9:	nop
  4055ca:	adc    bl,BYTE PTR [ebx+edi*1]
  4055cd:	vsubps ymm1,ymm3,YMMWORD PTR [eax+eiz*2]
  4055d2:	(bad)  
  4055d3:	stc    
  4055d4:	adc    al,0x62
  4055d6:	jbe    0x4055c7
  4055d8:	sahf   
  4055d9:	add    eax,0x3aea8bdf
  4055de:	cli    
  4055df:	in     eax,dx
  4055e0:	popf   
  4055e1:	xchg   ebp,eax
  4055e2:	arpl   WORD PTR [esi+edx*2-0x61],bp
  4055e6:	inc    esp
  4055e7:	cwde   
  4055e8:	or     BYTE PTR [edx-0x38],dl
  4055eb:	push   edx
  4055ec:	ret    
  4055ed:	in     al,0x97
  4055ef:	xor    BYTE PTR [eax],dh
  4055f1:	mov    ecx,0x1e06d26
  4055f6:	(bad)  
  4055f7:	stos   DWORD PTR es:[edi],eax
  4055f8:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  4055fa:	outs   dx,DWORD PTR ds:[esi]
  4055fb:	in     eax,dx
  4055fc:	mov    ebp,0xe8e7ed36
  405601:	mov    dl,0xe9
  405603:	ret    
  405604:	in     al,0x62
  405606:	jb     0x405642
  405608:	icebp  
  405609:	fistp  WORD PTR [eax]
  40560b:	sbb    DWORD PTR [ebx+0x7e],edi
  40560e:	pop    ebx
  40560f:	(bad)  
  405610:	aad    0x3e
  405612:	ins    BYTE PTR es:[edi],dx
  405613:	xchg   esi,eax
  405614:	(bad)  
  405615:	push   eax
  405616:	daa    
  405617:	push   eax
  405618:	sbb    al,0xd
  40561a:	in     al,0xe
  40561c:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40561e:	cdq    
  40561f:	sub    DWORD PTR [edx],0xffffffbd
  405622:	mov    BYTE PTR [eax+0x4f],al
  405625:	jmp    0x7e93df81
  40562a:	pop    eax
  40562b:	inc    edi
  40562c:	add    eax,0x111a52a7
  405631:	jbe    0x4055ed
  405633:	enter  0xee5d,0x73
  405637:	xchg   edi,eax
  405638:	or     esi,DWORD PTR [ebx-0x3f7dd484]
  40563e:	or     BYTE PTR [eax-0x7c71a1c2],bl
  405644:	sbb    DWORD PTR [ebx-0xa],ebp
  405647:	mov    ds:0xbcfdf861,eax
  40564c:	push   ebp
  40564d:	or     esi,DWORD PTR [edx-0x62]
  405650:	inc    ebp
  405651:	stos   DWORD PTR es:[edi],eax
  405652:	and    DWORD PTR [esi],ebp
  405654:	shl    DWORD PTR [esi-0x4fb56358],cl
  40565a:	hlt    
  40565b:	sub    DWORD PTR [ebx+esi*2-0x40],ebp
  40565f:	xor    esp,0xe265b65d
  405665:	jl     0x4056a1
  405667:	dec    edi
  405668:	scas   al,BYTE PTR es:[edi]
  405669:	repz into 
  40566b:	mov    esp,edi
  40566d:	leave  
  40566e:	mov    ah,BYTE PTR [edi+0x569bf302]
  405674:	leave  
  405675:	dec    ebp
  405676:	pop    ds
  405677:	mov    al,0xfd
  405679:	adc    DWORD PTR [ebp+0x5e],edi
  40567c:	mov    eax,0xe1791ca8
  405681:	xor    ebx,DWORD PTR [ebp-0x5a]
  405684:	int    0x4
  405686:	shr    DWORD PTR [edi],1
  405688:	sbb    BYTE PTR [ecx],ah
  40568a:	xchg   ebp,eax
  40568b:	mov    ch,0x56
  40568d:	fstp   DWORD PTR [ecx]
  40568f:	pop    ds
  405690:	aas    
  405691:	fdivr  st(2),st
  405693:	pop    ebp
  405694:	jae    0x405685
  405696:	call   0x95f3:0x5cc76a6b
  40569d:	pop    edi
  40569e:	sub    esp,edx
  4056a0:	leave  
  4056a1:	mov    esp,0x9703cc86
  4056a6:	iret   
  4056a7:	mov    bl,0x86
  4056a9:	jo     0x4056a6
  4056ab:	add    ebx,DWORD PTR [eax+0x574eddb0]
  4056b1:	push   ebp
  4056b2:	mov    BYTE PTR [ebx],bl
  4056b4:	xchg   edi,eax
  4056b5:	dec    edx
  4056b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056b7:	dec    ecx
  4056b8:	rcl    BYTE PTR [ecx],1
  4056ba:	loope  0x4056ef
  4056bc:	jecxz  0x40566f
  4056be:	fmul   st,st(4)
  4056c0:	xchg   ecx,eax
  4056c1:	adc    ah,BYTE PTR [ebx+0x14]
  4056c4:	aad    0x4d
  4056c6:	pusha  
  4056c7:	lock cmp al,0xfc
  4056ca:	mov    dh,0x6b
  4056cc:	lods   al,BYTE PTR ds:[esi]
  4056cd:	adc    al,0xc4
  4056cf:	xor    dh,BYTE PTR ds:[ebx]
  4056d2:	nop
  4056d3:	ja     0x40571b
  4056d5:	cmp    BYTE PTR [edx-0x48],0x19
  4056d9:	push   eax
  4056da:	ror    BYTE PTR [ecx+0x67],cl
  4056dd:	daa    
  4056de:	ret    0x6b3f
  4056e1:	es or  al,0x39
  4056e4:	mov    ds:0xb90d6b1e,al
  4056e9:	and    BYTE PTR [ebp+0x53],0xa1
  4056ed:	aaa    
  4056ee:	push   ds
  4056ef:	jecxz  0x4056ea
  4056f1:	fimul  DWORD PTR [ebp-0x27]
  4056f4:	(bad)  
  4056f5:	addr16 test al,cl
  4056f8:	jbe    0x40567b
  4056fa:	and    eax,0x26eda450
  4056ff:	sbb    eax,0x594b60b3
  405704:	mov    BYTE PTR [eax],bl
  405706:	mov    al,ds:0xbaa3799a
  40570b:	inc    esi
  40570c:	rol    cl,cl
  40570e:	push   esp
  40570f:	mov    edi,0x723006ba
  405714:	dec    esi
  405715:	icebp  
  405716:	test   eax,0x732dab0e
  40571b:	js     0x405782
  40571d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40571e:	scas   eax,DWORD PTR es:[edi]
  40571f:	jp     0x40574b
  405721:	cmp    esi,DWORD PTR [ebx-0x73]
  405724:	lea    eax,[edi]
  405726:	sub    DWORD PTR [ecx],0x6f55353e
  40572c:	cmp    al,0x11
  40572e:	pop    es
  40572f:	mov    ds:0x121e105,al
  405734:	mov    ds:0xcf730088,eax
  405739:	fidivr DWORD PTR [eax+ecx*2+0x66fdb4cd]
  405740:	mov    cl,0x48
  405742:	cmp    ch,0xd3
  405745:	mov    ds:0xe9bf6a5,eax
  40574a:	mov    bl,0x56
  40574c:	nop
  40574d:	aam    0xb4
  40574f:	add    ebx,DWORD PTR [edx+0x7778959e]
  405755:	ds jle 0x4057a0
  405758:	pop    edx
  405759:	pop    ebp
  40575a:	out    0x5c,eax
  40575c:	dec    esi
  40575d:	test   BYTE PTR [eax-0x418b13f9],cl
  405763:	inc    eax
  405764:	sahf   
  405765:	add    BYTE PTR [edi],dh
  405767:	out    0x5f,eax
  405769:	and    ebx,ebp
  40576b:	sub    al,0xfc
  40576d:	pop    eax
  40576e:	call   0x7173:0x8daf8b85
  405775:	fnstenv [ecx+0x58946ead]
  40577b:	adc    bl,BYTE PTR [ecx]
  40577d:	push   ss
  40577e:	(bad)  
  40577f:	call   0x4729a0fb
  405784:	mov    al,0xd0
  405786:	mov    es,WORD PTR [edi-0x59586dcd]
  40578c:	lea    edx,[ecx-0x40]
  40578f:	cwde   
  405790:	mov    edx,DWORD PTR [edx+eax*4]
  405793:	mov    esi,0xb9431576
  405798:	in     eax,dx
  405799:	jae    0x405778
  40579b:	hlt    
  40579c:	pop    eax
  40579d:	jmp    0x9729:0x1c9a3bbd
  4057a4:	iret   
  4057a5:	test   BYTE PTR fs:[ebx-0x4131afe3],al
  4057ac:	(bad)  
  4057ad:	push   esp
  4057ae:	in     eax,0xea
  4057b0:	repz addr16 aaa 
  4057b3:	push   edx
  4057b4:	pop    ds
  4057b5:	or     BYTE PTR [ebx],dh
  4057b7:	ds pop es
  4057b9:	adc    DWORD PTR [edi+0x2930b4],ecx
  4057bf:	scas   eax,DWORD PTR es:[edi]
  4057c0:	scas   eax,DWORD PTR es:[edi]
  4057c1:	fsubr  QWORD PTR [edx-0x66]
  4057c4:	mov    esp,0xa04e1543
  4057c9:	sahf   
  4057ca:	rol    BYTE PTR es:[ebx],1
  4057cd:	sub    eax,0x6f88766e
  4057d2:	lea    edx,[edi]
  4057d4:	mov    ah,0x3c
  4057d6:	sbb    edx,0xcb84e44f
  4057dc:	dec    ebp
  4057dd:	stos   DWORD PTR es:[edi],eax
  4057de:	out    dx,al
  4057df:	out    dx,eax
  4057e0:	mov    BYTE PTR [esi+ebx*2+0x6e70f26d],dh
  4057e7:	mov    bl,0x1b
  4057e9:	aaa    
  4057ea:	icebp  
  4057eb:	xchg   esp,eax
  4057ec:	and    dh,bh
  4057ee:	repnz sar DWORD PTR [ecx],1
  4057f1:	push   edi
  4057f2:	or     al,0x86
  4057f4:	and    ebp,ebp
  4057f6:	mov    esi,0xcc80be71
  4057fb:	shl    DWORD PTR [ebx],1
  4057fd:	in     eax,0x19
  4057ff:	mov    ecx,0x45afc3e1
  405804:	(bad)  
  405806:	push   ebp
  405807:	stc    
  405808:	clc    
  405809:	call   0x9e7191b5
  40580e:	mov    bl,0xa1
  405810:	adc    al,0xbd
  405812:	lahf   
  405813:	in     eax,0x22
  405815:	add    al,0x8
  405817:	mov    al,ds:0x5a018f06
  40581c:	fimul  WORD PTR [edx-0x33c8714e]
  405822:	fcomp  QWORD PTR [ebp+0x38]
  405825:	retf   0x41b2
  405828:	mov    ds:0x239cfd4e,al
  40582d:	mov    dh,BYTE PTR [ebp-0x4b017af9]
  405833:	push   ebx
  405834:	call   0x46e68d57
  405839:	fmul   DWORD PTR [edx+0x75]
  40583c:	ja     0x40588f
  40583e:	(bad)  
  40583f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405840:	lds    esp,FWORD PTR [ebx]
  405842:	sbb    cl,al
  405844:	int    0xda
  405846:	push   ecx
  405847:	shl    bh,0xf0
  40584a:	pop    ss
  40584b:	adc    al,0x71
  40584d:	arpl   WORD PTR [edx+ebx*2-0x5b3b1b2],cx
  405854:	jne    0x405892
  405856:	dec    eax
  405857:	imul   BYTE PTR [ecx+0x6f]
  40585a:	imul   esp,DWORD PTR [ebx-0x73],0x46300fb8
  405861:	shl    BYTE PTR [edx+ebx*4-0x6f],1
  405865:	aaa    
  405866:	xor    DWORD PTR [edx+ecx*2-0x2caf97e6],eax
  40586d:	test   bh,al
  40586f:	cli    
  405870:	adc    eax,0xf91e9923
  405875:	sahf   
  405876:	dec    esi
  405877:	mov    dh,0xea
  405879:	(bad)  
  40587a:	into   
  40587b:	imul   esp,DWORD PTR [ecx],0x50d81e41
  405881:	inc    esi
  405882:	dec    ebx
  405883:	adc    eax,0xecbe5e0d
  405888:	(bad)  
  405889:	mov    edi,0x2177d363
  40588e:	sub    BYTE PTR [edi],dh
  405890:	jnp    0x40582a
  405892:	shr    BYTE PTR [eax+0x7c],0x5
  405896:	imul   edi,DWORD PTR [edx-0x27c6bf14],0x11e5f4f8
  4058a0:	inc    ebx
  4058a1:	jno    0x4058dd
  4058a3:	loop   0x405886
  4058a5:	xor    edi,esi
  4058a7:	xchg   ecx,eax
  4058a8:	fidivr WORD PTR [edi]
  4058aa:	in     eax,0x17
  4058ac:	inc    BYTE PTR [ecx]
  4058ae:	pop    ds
  4058af:	les    esp,FWORD PTR [di-0xc57]
  4058b4:	add    DWORD PTR [ecx+0x16],0x6de0799c
  4058bb:	mov    al,ds:0x4ffe9ceb
  4058c0:	jmp    FWORD PTR [edx]
  4058c2:	add    al,0x95
  4058c4:	out    dx,eax
  4058c5:	stos   BYTE PTR es:[edi],al
  4058c6:	loop   0x405947
  4058c8:	xchg   edx,eax
  4058c9:	fucomi st,st(5)
  4058cb:	xchg   esp,eax
  4058cc:	call   0x309e4c70
  4058d1:	lods   eax,DWORD PTR ds:[esi]
  4058d2:	push   eax
  4058d3:	mov    esi,0x8cc63b2
  4058d8:	and    eax,0x1ab6f90a
  4058dd:	std    
  4058de:	jecxz  0x4058d6
  4058e0:	shl    edi,0x5e
  4058e3:	(bad)  
  4058e5:	je     0x4058b5
  4058e7:	jmp    0x80c6:0x50c24ae2
  4058ee:	fisubr DWORD PTR [eax-0x25]
  4058f1:	(bad)  
  4058f3:	cmp    ebp,DWORD PTR [edx+ecx*8]
  4058f6:	add    ebx,DWORD PTR [esi]
  4058f8:	and    ch,ch
  4058fa:	je     0x4058d8
  4058fc:	fxch   st(5)
  4058fe:	ss icebp 
  405900:	xchg   esi,eax
  405901:	sbb    DWORD PTR [eax+edi*2+0x3b],0x656456f9
  405909:	inc    edx
  40590a:	or     BYTE PTR [edx-0x1edd6567],dh
  405910:	in     eax,0x5d
  405912:	and    DWORD PTR es:[edi+0x26],ebx
  405916:	cmp    dl,BYTE PTR [edi+0x8]
  405919:	aam    0x3a
  40591b:	shr    BYTE PTR [eax+edi*8-0x15],0x7c
  405920:	xchg   ebp,eax
  405921:	push   cs
  405922:	aad    0xc8
  405924:	ins    BYTE PTR es:[edi],dx
  405925:	push   ecx
  405926:	jg     0x4059a3
  405928:	fwait
  405929:	imul   edx,edi,0xffffff8b
  40592c:	sbb    cl,bh
  40592e:	jmp    0x5133:0x5edf1d5c
  405935:	sub    dh,BYTE PTR [edx-0x424febd5]
  40593b:	cdq    
  40593c:	pop    edi
  40593d:	or     cl,BYTE PTR [ebx]
  40593f:	lock ja 0x405957
  405942:	dec    edx
  405943:	jmp    0x405961
  405945:	xlat   BYTE PTR ds:[ebx]
  405946:	and    ebx,DWORD PTR [esi+0x37566f]
  40594c:	or     DWORD PTR [edi],edi
  40594e:	sbb    al,0x4a
  405950:	or     eax,0x3685e02c
  405955:	sti    
  405956:	ja     0x405903
  405958:	(bad)  
  405959:	sti    
  40595a:	call   DWORD PTR [edi+edx*8+0x4935f8a4]
  405961:	dec    esi
  405962:	push   es
  405963:	or     eax,0xc5bcef6e
  405968:	addr16 xchg ebx,eax
  40596a:	sub    al,0xcc
  40596c:	adc    bl,0x9a
  40596f:	imul   edx,DWORD PTR [edi+0x49d82c30],0x4a
  405976:	popf   
  405977:	dec    esi
  405978:	mov    ebx,DWORD PTR [edi]
  40597a:	and    ecx,DWORD PTR [ebx-0x333237a0]
  405980:	lds    ebp,FWORD PTR [esi+0xcb0c2fc]
  405986:	fsubr  st,st(2)
  405988:	jbe    0x4059c2
  40598a:	push   ecx
  40598b:	arpl   si,bx
  40598d:	cdq    
  40598e:	jge    0x4059fb
  405990:	popa   
  405991:	mov    ebp,0xc91047dc
  405996:	mov    dl,0x9e
  405998:	(bad)  
  405999:	ror    DWORD PTR ds:[edx+0x6ae83c62],1
  4059a0:	xor    eax,0xcde0a2cc
  4059a5:	jns    0x405a02
  4059a7:	cmp    al,BYTE PTR [ebp-0x40]
  4059aa:	dec    edx
  4059ab:	(bad)  
  4059ad:	(bad)  
  4059ae:	loopne 0x405943
  4059b0:	and    eax,0x44fd3cc9
  4059b5:	jg     0x405986
  4059b7:	or     BYTE PTR [ebp-0x21931e03],dl
  4059bd:	push   ebp
  4059be:	or     DWORD PTR [ecx-0x31],edx
  4059c1:	std    
  4059c2:	js     0x405988
  4059c4:	sbb    al,0x2e
  4059c6:	xlat   BYTE PTR ds:[ebx]
  4059c7:	inc    edx
  4059c8:	inc    ecx
  4059c9:	push   0x77977ae2
  4059ce:	cmp    BYTE PTR [edx+0x24],al
  4059d1:	xchg   edi,eax
  4059d2:	cmp    eax,0x1c180623
  4059d7:	fstp   DWORD PTR [eax+0x73]
  4059da:	fist   WORD PTR [ebp+0x4d]
  4059dd:	js     0x405a25
  4059df:	sbb    eax,0xbead3ac2
  4059e4:	std    
  4059e5:	test   al,0x8a
  4059e7:	mov    eax,ds:0x3696288
  4059ec:	sub    BYTE PTR [esi],cl
  4059ee:	dec    esp
  4059ef:	aas    
  4059f0:	jae    0x405a32
  4059f2:	rcr    DWORD PTR [esp+edx*8],1
  4059f5:	inc    esp
  4059f6:	test   eax,0x8e908417
  4059fb:	jae    0x405a77
  4059fd:	dec    esp
  4059fe:	mov    esi,0xb089edf8
  405a03:	inc    ebp
  405a04:	mov    al,0xa7
  405a06:	mov    edi,0x17b7a3b9
  405a0b:	pop    edi
  405a0c:	push   0x239dd9ce
  405a11:	pop    ecx
  405a12:	mov    al,ds:0x3f8abf0f
  405a17:	sbb    DWORD PTR [edi+0x1b05e6f4],ecx
  405a1d:	mov    ds:0x7f0a495b,al
  405a22:	(bad)  
  405a23:	xor    al,0xcf
  405a25:	retf   
  405a26:	lods   eax,DWORD PTR ds:[esi]
  405a27:	push   ebx
  405a28:	xor    ecx,esp
  405a2a:	inc    esi
  405a2b:	sub    BYTE PTR [ebx+eax*1+0x78],0xe6
  405a30:	mov    ah,0xaa
  405a32:	sub    bh,BYTE PTR [ecx-0x3e7467b7]
  405a38:	shl    BYTE PTR [ebp+0x20a7ad31],cl
  405a3e:	scas   al,BYTE PTR es:[edi]
  405a3f:	out    0xf0,al
  405a41:	mov    edi,0xc8edaebc
  405a46:	sbb    ecx,ecx
  405a48:	sbb    edi,DWORD PTR ds:[edx+0x46]
  405a4c:	xchg   edx,eax
  405a4d:	ds dec esp
  405a4f:	jg     0x405a8f
  405a51:	or     DWORD PTR [edx],0xffffff8a
  405a54:	mov    DWORD PTR [eax],ebx
  405a56:	jns    0x4059df
  405a58:	add    esp,DWORD PTR [eax-0x45648bb4]
  405a5e:	out    0xea,al
  405a60:	adc    DWORD PTR [esi],0xffffffcb
  405a63:	aam    0x78
  405a65:	shl    dl,cl
  405a67:	jecxz  0x4059fe
  405a69:	and    eax,0xde7af04f
  405a6e:	loop   0x405a5a
  405a70:	fsub   st(2),st
  405a72:	xchg   ebx,eax
  405a73:	add    esi,DWORD PTR [esi]
  405a75:	ror    BYTE PTR [esi-0x41],1
  405a78:	out    0x23,al
  405a7a:	into   
  405a7b:	dec    ebp
  405a7c:	adc    al,0xee
  405a7e:	test   BYTE PTR [eax-0x52],cl
  405a81:	(bad)  
  405a82:	(bad)  
  405a84:	jge    0x405af8
  405a86:	jae    0x405a84
  405a88:	sub    al,0x97
  405a8a:	ja     0x405b0a
  405a8c:	nop
  405a8d:	lock cmp al,0x2b
  405a90:	(bad)  
  405a91:	or     eax,0x8ab3c7d0
  405a96:	xor    eax,0x8406e1a4
  405a9b:	mov    es,esp
  405a9d:	scas   al,BYTE PTR es:[edi]
  405a9e:	mov    BYTE PTR [edi+0x7419f7b9],dh
  405aa4:	mov    esi,0xce134955
  405aa9:	stc    
  405aaa:	leave  
  405aab:	adc    ebp,DWORD PTR [esi+edx*8+0x3]
  405aaf:	scas   al,BYTE PTR es:[edi]
  405ab0:	jb     0x405a85
  405ab2:	inc    esi
  405ab3:	push   ecx
  405ab4:	mov    esp,0xa88230d5
  405ab9:	aad    0x5b
  405abb:	fmul   QWORD PTR [edx+esi*2-0x39]
  405abf:	jns    0x405a6b
  405ac1:	test   al,0x3f
  405ac3:	jo     0x405ae2
  405ac5:	pop    edi
  405ac6:	pop    edi
  405ac7:	mov    ds:0xc6ec7551,eax
  405acc:	adc    ecx,DWORD PTR [edx-0x80]
  405acf:	into   
  405ad0:	stc    
  405ad1:	gs xchg edi,eax
  405ad3:	push   ds
  405ad4:	jg     0x405aa4
  405ad6:	fldenv [edx+0x15932196]
  405adc:	fiadd  WORD PTR [ecx+0x5732a67a]
  405ae2:	pop    edx
  405ae3:	jge    0x405aa1
  405ae5:	push   esi
  405ae6:	xor    al,0x30
  405ae8:	pop    esp
  405ae9:	loopne 0x405b24
  405aeb:	inc    esi
  405aec:	pushf  
  405aed:	cs call 0x9b54:0x8a6bc03e
  405af5:	lea    esp,[ebx]
  405af7:	(bad)  
  405af8:	sub    esp,ebp
  405afa:	pop    esp
  405afb:	dec    ecx
  405afc:	fisubr DWORD PTR ds:0xbcc34227
  405b02:	(bad)  
  405b04:	retf   
  405b05:	add    al,0x9b
  405b07:	aam    0x1e
  405b09:	stos   DWORD PTR es:[edi],eax
  405b0a:	dec    ebp
  405b0b:	push   cs
  405b0c:	outs   dx,BYTE PTR ds:[esi]
  405b0d:	xor    ch,BYTE PTR [edx]
  405b0f:	adc    BYTE PTR [ebp+0x36],cl
  405b12:	mov    esp,0x64cd053a
  405b17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b18:	mov    esi,0x37c6ebfe
  405b1d:	sub    eax,0xd3568206
  405b22:	xor    eax,DWORD PTR [ecx+0x2f0956d3]
  405b28:	aad    0x90
  405b2a:	and    DWORD PTR [edx],ebx
  405b2c:	icebp  
  405b2d:	int3   
  405b2e:	sbb    al,0x4c
  405b30:	pop    eax
  405b31:	push   edi
  405b32:	add    esi,DWORD PTR [edx+0x445f76c]
  405b38:	or     edi,DWORD PTR ds:[ebx]
  405b3b:	xchg   edi,eax
  405b3c:	test   DWORD PTR [edi+0x17],eax
  405b3f:	ror    edx,cl
  405b41:	push   ecx
  405b42:	repz les ebp,FWORD PTR ds:0x8d8a30d5
  405b49:	fwait
  405b4a:	hlt    
  405b4b:	add    ebp,DWORD PTR [eax]
  405b4d:	ror    BYTE PTR [ebx-0x35fadeee],0x13
  405b54:	repnz dec esp
  405b56:	jg     0x405b93
  405b58:	into   
  405b59:	mov    dl,0x7f
  405b5b:	loope  0x405b95
  405b5d:	pop    ds
  405b5e:	mov    dl,0x75
  405b60:	dec    esp
  405b61:	dec    ebx
  405b62:	or     BYTE PTR [ecx],bh
  405b64:	mov    esi,0x72d891d9
  405b69:	fwait
  405b6a:	sub    ah,BYTE PTR [edi]
  405b6c:	aaa    
  405b6d:	mov    dh,0x44
  405b6f:	jb     0x405b37
  405b71:	mov    eax,ds:0xa23a6cda
  405b76:	xor    ebp,ebx
  405b78:	xchg   ebx,eax
  405b79:	push   cs
  405b7a:	int    0x23
  405b7c:	rcl    BYTE PTR [esi],1
  405b7e:	add    al,0x2f
  405b80:	sbb    DWORD PTR [eax-0x1],ebp
  405b83:	add    ecx,ebp
  405b85:	div    BYTE PTR [ebx]
  405b87:	call   0x1e206f29
  405b8c:	sub    ebx,DWORD PTR [edi+0x5aa16eae]
  405b92:	jmp    DWORD PTR [ebp+0x225f0555]
  405b98:	sbb    esp,DWORD PTR [esi+ebp*2]
  405b9b:	cld    
  405b9c:	cmp    eax,0xdcc0fe23
  405ba1:	push   ds
  405ba2:	loop   0x405bf7
  405ba4:	push   ds
  405ba5:	cwde   
  405ba6:	push   esi
  405ba7:	fcmovbe st,st(5)
  405ba9:	jp     0x405c09
  405bab:	jnp    0x405bd4
  405bad:	adc    al,0x9b
  405baf:	sti    
  405bb0:	mov    ds:0x1d827a1b,al
  405bb5:	test   BYTE PTR [esi-0x6c],ah
  405bb8:	sub    eax,0x3e642000
  405bbd:	add    ch,BYTE PTR [edx-0x4569e6f4]
  405bc3:	xor    bh,al
  405bc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405bc6:	mov    al,0x5
  405bc8:	xor    al,0xb9
  405bca:	xchg   edi,eax
  405bcb:	(bad)  
  405bcc:	int3   
  405bcd:	ret    0xa8a4
  405bd0:	cmp    esp,edx
  405bd2:	inc    ebx
  405bd3:	or     DWORD PTR [eax],esi
  405bd5:	dec    ebx
  405bd6:	ret    
  405bd7:	into   
  405bd8:	xlat   BYTE PTR ds:[ebx]
  405bd9:	cdq    
  405bda:	xchg   ecx,eax
  405bdb:	dec    ebx
  405bdc:	ds xchg edi,eax
  405bde:	xor    dh,BYTE PTR [edi]
  405be0:	inc    edi
  405be1:	mov    bl,dl
  405be3:	data16 (bad) 
  405be5:	fiadd  DWORD PTR [ebp+0x31]
  405be8:	mov    edi,0x41593fa6
  405bed:	rcl    DWORD PTR [eax+0x3b],1
  405bf0:	adc    dl,BYTE PTR [esi+esi*4-0x5]
  405bf4:	repnz (bad) 
  405bf6:	cwde   
  405bf7:	les    esp,FWORD PTR [edi+0x67]
  405bfa:	mov    ds:0xc004fdea,al
  405bff:	jmp    0xbfa:0x57159809
  405c06:	stos   DWORD PTR es:[edi],eax
  405c07:	loope  0x405c6b
  405c09:	in     eax,dx
  405c0a:	test   edi,ebp
  405c0c:	mov    bh,0x2d
  405c0e:	mov    dh,BYTE PTR [ebx]
  405c10:	jg     0x405b93
  405c12:	mov    dl,0x5c
  405c14:	arpl   sp,di
  405c16:	cmp    ebx,ebx
  405c18:	add    eax,0x5cd2ad24
  405c1d:	mov    ch,0xb2
  405c1f:	mov    ds:0x113d3251,eax
  405c24:	adc    BYTE PTR [ebx-0x7e],0xfc
  405c28:	das    
  405c29:	(bad)
  405c2c:	adc    DWORD PTR [esi-0x10],ebp
  405c2f:	addr16 jnp 0x405bb3
  405c32:	xor    DWORD PTR [ecx+0x55],edx
  405c35:	mov    al,ds:0x3eaaa7b5
  405c3a:	pop    ecx
  405c3b:	pop    ebp
  405c3c:	(bad)  
  405c3d:	jae    0x405cac
  405c3f:	sahf   
  405c40:	loopne 0x405c5b
  405c42:	xor    eax,0xae8fcb9a
  405c47:	dec    eax
  405c48:	mov    cl,0xb6
  405c4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c4b:	mov    WORD PTR [edi+0x44470bb0],ss
  405c51:	sahf   
  405c52:	sub    DWORD PTR [ebx],0xffffffde
  405c55:	in     eax,0x40
  405c57:	jnp    0x405c7a
  405c59:	sbb    al,0xf
  405c5b:	pop    es
  405c5c:	mov    ds:0x75b83bcd,eax
  405c61:	aad    0x30
  405c63:	call   0xd5f8ec6b
  405c68:	retf   0x54b8
  405c6b:	pop    edi
  405c6c:	pop    esi
  405c6d:	leave  
  405c6e:	ret    
  405c6f:	push   ebp
  405c70:	mov    ebp,esp
  405c72:	sub    esp,0x58
  405c75:	add    DWORD PTR ds:0x429008,0x42b004
  405c7f:	push   ebx
  405c80:	adc    DWORD PTR ds:0x42a018,0x429010
  405c8a:	push   esi
  405c8b:	push   edi
  405c8c:	and    DWORD PTR ds:0x42c00c,0x6433
  405c96:	push   0x1f
  405c98:	lea    eax,[ebp-0x58]
  405c9b:	push   eax
  405c9c:	adc    DWORD PTR ds:0x42a010,0x6fdc
  405ca6:	push   0x0
  405ca8:	sub    DWORD PTR ds:0x42b018,0x7ba7
  405cb2:	call   DWORD PTR ds:0x424034
  405cb8:	call   DWORD PTR ds:0x424004
  405cbe:	and    DWORD PTR ds:0x42a000,0x4473
  405cc8:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  405ccf:	and    DWORD PTR ds:0x429018,0x0
  405cd9:	mov    ebx,DWORD PTR ds:0x429018
  405cdf:	inc    ebx
  405ce0:	mov    DWORD PTR ds:0x429018,ebx
  405ce6:	cmp    DWORD PTR ds:0x429018,0x1f
  405ced:	jne    0x405d03
  405cf3:	push   0x42b00c
  405cf8:	push   0x7f05
  405cfd:	call   DWORD PTR ds:0x42403c
  405d03:	cmp    DWORD PTR ds:0x429018,0x19
  405d0a:	jb     0x405cd9
  405d10:	add    ebx,DWORD PTR ds:0x42a008
  405d16:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  405d1d:	mov    ecx,DWORD PTR [ebp-0x4]
  405d20:	mov    ebx,0x7510893
  405d25:	xor    ecx,ebx
  405d27:	or     DWORD PTR ds:0x42b00c,edx
  405d2d:	mov    eax,0x3272db
  405d32:	add    ecx,eax
  405d34:	sub    DWORD PTR ds:0x42a010,0x429004
  405d3e:	mov    DWORD PTR [ebp-0x1c],ecx
  405d41:	mov    ecx,DWORD PTR [ebp+0x14]
  405d44:	mov    DWORD PTR ds:0x42800c,0x25aa
  405d4e:	test   ecx,ecx
  405d50:	mov    DWORD PTR ds:0x428000,0x5e1a
  405d5a:	je     0x405d78
  405d60:	sub    DWORD PTR ds:0x42b018,0x6b15
  405d6a:	mov    ecx,DWORD PTR [ebp+0x14]
  405d6d:	mov    ecx,DWORD PTR [ecx]
  405d6f:	add    DWORD PTR ds:0x42a000,ecx
  405d75:	mov    DWORD PTR [ebp-0x1c],ecx
  405d78:	and    DWORD PTR ds:0x42a010,0x0
  405d82:	mov    edi,DWORD PTR ds:0x42a010
  405d88:	inc    edi
  405d89:	mov    DWORD PTR ds:0x42a010,edi
  405d8f:	cmp    DWORD PTR ds:0x42a010,0x9
  405d96:	jne    0x405daa
  405d9c:	push   DWORD PTR [ebp-0x14]
  405d9f:	push   0x423533
  405da4:	call   DWORD PTR ds:0x424040
  405daa:	cmp    DWORD PTR ds:0x42a010,0x8
  405db1:	jne    0x405dc4
  405db7:	mov    edi,DWORD PTR ds:0x42a010
  405dbd:	inc    edi
  405dbe:	mov    DWORD PTR ds:0x42a010,edi
  405dc4:	cmp    DWORD PTR ds:0x42a010,0x13
  405dcb:	jb     0x405d82
  405dd1:	mov    ecx,0x457a
  405dd6:	imul   edx,eax
  405dd9:	mov    esi,0x787f
  405dde:	or     DWORD PTR ds:0x428004,0x4238
  405de8:	add    edx,ecx
  405dea:	sbb    DWORD PTR ds:0x429014,0x4641
  405df4:	jmp    0x40819c
  405df9:	jecxz  0x405d80
  405dfb:	cmp    eax,0x636a9b92
  405e00:	sbb    esp,0xffffffb2
  405e03:	fild   WORD PTR [ecx+0x537855b0]
  405e09:	push   edx
  405e0a:	cmp    esp,DWORD PTR [edx+0x62]
  405e0d:	neg    DWORD PTR [edi+0x62]
  405e10:	bound  ebx,QWORD PTR [ebx-0x59ad3eb]
  405e16:	leave  
  405e17:	cmp    edx,0xffffffa9
  405e1a:	ss das 
  405e1c:	arpl   WORD PTR [ecx],bp
  405e1e:	repnz daa 
  405e20:	jle    0x405e6f
  405e22:	mov    edx,0xdd3c1bfd
  405e27:	sbb    al,0xfb
  405e29:	dec    ebx
  405e2a:	scas   al,BYTE PTR es:[edi]
  405e2b:	dec    edi
  405e2c:	ror    DWORD PTR [esi],1
  405e2e:	xchg   ecx,eax
  405e2f:	sub    eax,ecx
  405e31:	mov    dl,0x7d
  405e33:	repz add BYTE PTR [esi],dl
  405e36:	pop    ss
  405e37:	sbb    BYTE PTR [edi+0x79def86e],ah
  405e3d:	arpl   WORD PTR [ebx+0x47],bp
  405e40:	pop    esi
  405e41:	dec    ebp
  405e42:	stc    
  405e43:	jns    0x405e98
  405e45:	add    al,al
  405e47:	fsub   DWORD PTR [esi+0x67]
  405e4a:	or     edx,DWORD PTR [edx-0x2e3f9ec]
  405e50:	mul    BYTE PTR [esi-0x17]
  405e53:	call   DWORD PTR [eax-0x7d]
  405e56:	lods   al,BYTE PTR ds:[esi]
  405e57:	jns    0x405ecc
  405e59:	std    
  405e5a:	ret    0xc66a
  405e5d:	lods   eax,DWORD PTR ds:[esi]
  405e5e:	xchg   BYTE PTR [ebx+0x7b],dl
  405e61:	ins    BYTE PTR es:[edi],dx
  405e62:	and    bh,al
  405e64:	mov    bl,ah
  405e66:	call   0xc9a4f80b
  405e6b:	push   esp
  405e6c:	cmp    cl,BYTE PTR [edx+ebx*1-0x2cc62142]
  405e73:	push   ebp
  405e74:	call   0x6fb0:0x5150d2fb
  405e7b:	retf   
  405e7c:	add    al,0xe6
  405e7e:	sbb    bh,BYTE PTR [ebx]
  405e80:	loope  0x405e88
  405e82:	repnz or edx,DWORD PTR [ecx-0x1a0afe40]
  405e89:	pop    ecx
  405e8a:	pop    es
  405e8b:	dec    ebx
  405e8c:	(bad)  
  405e8d:	ja     0x405ee3
  405e8f:	jne    0x405e7c
  405e91:	dec    ebx
  405e92:	jle    0x405ee6
  405e94:	ins    BYTE PTR es:[edi],dx
  405e95:	sbb    DWORD PTR ds:0xbdcdd629,0x42
  405e9c:	out    dx,al
  405e9d:	xor    eax,0xa7ebf367
  405ea2:	(bad)  
  405ea4:	outs   dx,BYTE PTR ds:[esi]
  405ea5:	les    esi,FWORD PTR [ebx]
  405ea7:	mov    ebp,edi
  405ea9:	daa    
  405eaa:	pop    edi
  405eab:	add    cl,BYTE PTR [ecx+0x50e425c6]
  405eb1:	xor    ebp,DWORD PTR [edi-0x39d4e677]
  405eb7:	fidiv  WORD PTR [eax]
  405eb9:	mov    ebp,0xd459e3a0
  405ebe:	push   esi
  405ebf:	into   
  405ec0:	pop    ecx
  405ec1:	loop   0x405e8a
  405ec3:	jo     0x405eee
  405ec5:	(bad)  
  405ec6:	jge    0x405ea8
  405ec8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ec9:	aam    0x9f
  405ecb:	pop    ebp
  405ecc:	pop    ss
  405ecd:	icebp  
  405ece:	push   edi
  405ecf:	scas   al,BYTE PTR es:[edi]
  405ed0:	sub    BYTE PTR [esi-0x28cef5bc],al
  405ed6:	cmp    al,0x1a
  405ed8:	cmp    al,0x53
  405eda:	jnp    0x405f37
  405edc:	sbb    al,bh
  405ede:	xor    edx,DWORD PTR [edi+0x6f]
  405ee1:	push   ss
  405ee2:	xor    bl,BYTE PTR [eax+0x2c4ba35a]
  405ee8:	xchg   ecx,eax
  405ee9:	ds inc esi
  405eeb:	into   
  405eec:	adc    edx,DWORD PTR [esi-0x79]
  405eef:	ss loop 0x405e7e
  405ef2:	fmul   DWORD PTR [eax+0x77a2e9e]
  405ef8:	jo     0x405f30
  405efa:	mov    fs,WORD PTR [esi-0x480286a9]
  405f00:	gs pop edi
  405f02:	lea    ebx,[ebx]
  405f04:	cmp    al,0x98
  405f06:	add    eax,0x9b3aec12
  405f0c:	ret    0x1454
  405f0f:	add    eax,0x7d52d9df
  405f14:	sub    DWORD PTR [ecx+0x5738b42a],esi
  405f1a:	loope  0x405f84
  405f1c:	adc    bl,BYTE PTR [esi+0x4118d471]
  405f22:	pop    esi
  405f23:	not    BYTE PTR [ebx-0x7d]
  405f26:	sub    BYTE PTR [edi+0x7a],ah
  405f29:	cmp    eax,0x91209654
  405f2e:	iret   
  405f2f:	xor    DWORD PTR [edi-0x9],ebx
  405f32:	push   edx
  405f33:	dec    ebx
  405f34:	jne    0x405ecc
  405f36:	lods   al,BYTE PTR ds:[esi]
  405f37:	test   DWORD PTR [eax+ebp*2],ecx
  405f3a:	lods   eax,DWORD PTR ds:[esi]
  405f3b:	push   eax
  405f3c:	arpl   cx,di
  405f3e:	push   ebx
  405f3f:	mov    ds:0xd67055d3,eax
  405f44:	pop    esi
  405f45:	enter  0x3040,0xed
  405f49:	cmp    DWORD PTR [edi],0x12
  405f4c:	cli    
  405f4d:	push   0x4d
  405f4f:	ins    DWORD PTR es:[edi],dx
  405f50:	lea    ebp,[ecx+ebp*8+0x5ed3943d]
  405f57:	in     al,0x92
  405f59:	test   BYTE PTR [edx+0x31d4442d],bh
  405f5f:	es std 
  405f61:	add    DWORD PTR [ebx-0x5c961e0],edx
  405f67:	and    esi,DWORD PTR [eax+ecx*8+0x57]
  405f6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f6c:	xchg   ebx,eax
  405f6d:	imul   ebp,edx,0xe
  405f70:	push   ebp
  405f71:	jg     0x405ef3
  405f73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f74:	push   ebx
  405f75:	sub    BYTE PTR ds:0x156fe544,dl
  405f7b:	loopne 0x405f8d
  405f7d:	xchg   ebp,eax
  405f7e:	jle    0x405fa8
  405f80:	xchg   esi,eax
  405f81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f82:	(bad)  
  405f83:	call   DWORD PTR [edi]
  405f85:	xchg   edx,eax
  405f86:	ret    0x1775
  405f89:	sti    
  405f8a:	pop    ecx
  405f8b:	test   al,0xe6
  405f8d:	retf   0xe56f
  405f90:	leave  
  405f91:	jge    0x405ffd
  405f93:	clc    
  405f94:	rol    BYTE PTR [edi+0x2a],cl
  405f97:	or     al,BYTE PTR [ecx*2-0x5e3ab1a1]
  405f9e:	shl    edx,1
  405fa0:	xchg   edx,eax
  405fa1:	mov    bh,0x24
  405fa3:	out    0xf1,al
  405fa5:	cmc    
  405fa6:	add    al,BYTE PTR [ecx+0x4a67dad1]
  405fac:	imul   edx,DWORD PTR [ecx+0x33f9c510],0xffffffae
  405fb3:	pop    ecx
  405fb4:	and    edi,DWORD PTR [edi]
  405fb6:	fs ins BYTE PTR es:[edi],dx
  405fb8:	xchg   edi,eax
  405fb9:	retf   0xd4d9
  405fbc:	and    eax,0xc5eb526f
  405fc1:	ds fwait
  405fc3:	fwait
  405fc4:	mov    dl,0xd
  405fc6:	push   ebx
  405fc7:	inc    eax
  405fc8:	frstor [ecx]
  405fca:	sub    eax,0x1ffa680e
  405fcf:	mov    WORD PTR [edx],?
  405fd1:	mov    ch,0xbb
  405fd3:	sub    BYTE PTR [eax+edx*8],dh
  405fd6:	sbb    eax,0x7feae1cb
  405fdb:	stos   DWORD PTR es:[edi],eax
  405fdc:	mov    esp,0xa4d72861
  405fe1:	scas   eax,DWORD PTR es:[edi]
  405fe2:	imul   ebx,DWORD PTR [ecx+eax*1+0x49f0067],0xd95c12c5
  405fed:	jl     0x405fdc
  405fef:	push   es
  405ff0:	test   BYTE PTR es:[eax+0x6ef9f87],0xb8
  405ff8:	mov    ebp,0x92942389
  405ffd:	(bad)  
  405ffe:	cmp    BYTE PTR [esi],cl
  406000:	push   ds
  406001:	or     BYTE PTR [ebx],dh
  406003:	int3   
  406004:	leave  
  406005:	pop    ds
  406006:	fisttp WORD PTR [ebx-0x19b4969b]
  40600c:	rcr    dl,1
  40600e:	xlat   BYTE PTR ds:[ebx]
  40600f:	jp     0x40600c
  406011:	shl    BYTE PTR [edx],0x3a
  406014:	pop    ds
  406015:	push   ebp
  406016:	mov    eax,0x1c2768d6
  40601b:	mov    bh,0xae
  40601d:	mov    eax,ds:0xd6c61f73
  406023:	push   ebx
  406024:	in     al,0xae
  406026:	out    dx,eax
  406027:	push   cs
  406028:	add    DWORD PTR [edi],0x15b91b1b
  40602e:	daa    
  40602f:	lods   al,BYTE PTR ds:[esi]
  406030:	xchg   ebx,eax
  406031:	aad    0xc0
  406033:	add    dh,bl
  406035:	clc    
  406036:	pop    ss
  406037:	sbb    DWORD PTR [ebp+0x7dc5c0f0],edx
  40603d:	icebp  
  40603e:	out    dx,eax
  40603f:	add    al,0x4c
  406041:	and    eax,0xe4e6c049
  406046:	out    dx,al
  406047:	aas    
  406048:	mov    WORD PTR [eax-0x7],?
  40604b:	push   ebp
  40604c:	push   0x250aee26
  406051:	and    bl,ch
  406053:	jmp    0x406049
  406055:	sahf   
  406056:	jns    0x40609b
  406058:	nop
  406059:	in     al,0xdb
  40605b:	lods   al,BYTE PTR ds:[esi]
  40605c:	or     ecx,DWORD PTR [ebx-0x42b51a3d]
  406062:	pop    edi
  406063:	push   esp
  406064:	clc    
  406065:	xor    BYTE PTR [ecx],dl
  406067:	test   eax,0xc9b3a008
  40606c:	loop   0x40608f
  40606e:	into   
  40606f:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  406071:	sahf   
  406072:	loopne 0x40600d
  406074:	retf   0x9c
  406077:	outs   dx,DWORD PTR ds:[esi]
  406078:	fisub  WORD PTR [edx+0x5493fabc]
  40607e:	inc    edi
  40607f:	jns    0x40609d
  406081:	jmp    0x406004
  406083:	xor    ch,dl
  406085:	mov    ds:0x725fd4b2,eax
  40608a:	or     BYTE PTR [ebx+ebp*8],al
  40608d:	mov    ch,0x97
  40608f:	in     eax,dx
  406090:	je     0x406100
  406092:	adc    BYTE PTR [ecx+0x7890eaa5],cl
  406098:	ret    
  406099:	cmp    esi,ebp
  40609b:	jns    0x4060de
  40609d:	sbb    eax,0x269e1cc4
  4060a2:	push   cs
  4060a3:	in     al,0x88
  4060a5:	mov    dl,0x63
  4060a7:	dec    edx
  4060a8:	aad    0x8d
  4060aa:	jl     0x4060ba
  4060ac:	xor    DWORD PTR [edx+0x3363a7ec],edx
  4060b2:	daa    
  4060b3:	pop    eax
  4060b4:	dec    ebx
  4060b5:	xor    edx,DWORD PTR [ebp+0x1ce430d4]
  4060bb:	aaa    
  4060bc:	repnz out dx,al
  4060be:	sub    eax,0x177aa088
  4060c3:	dec    ebp
  4060c4:	lea    esi,[eax*2+0x78bed4a7]
  4060cb:	xchg   edi,eax
  4060cc:	sbb    al,0xb0
  4060ce:	xchg   ebp,eax
  4060cf:	mov    ebx,0xd94cc07c
  4060d4:	loopne 0x40613e
  4060d6:	pop    esi
  4060d7:	inc    ebx
  4060d8:	xor    eax,0x31b3dc10
  4060dd:	xchg   BYTE PTR [esi-0x37],dl
  4060e0:	ret    0x7bf6
  4060e3:	pop    esp
  4060e4:	or     eax,0x1cd6cdd7
  4060e9:	loop   0x4060c6
  4060eb:	pop    esi
  4060ec:	or     al,0x17
  4060ee:	mov    ecx,0x817fe89e
  4060f3:	enter  0x30de,0xb6
  4060f7:	adc    dh,BYTE PTR [esi]
  4060f9:	(bad)  
  4060fb:	nop
  4060fc:	mov    ebp,0x6ae09561
  406101:	dec    edx
  406102:	es xchg edx,eax
  406104:	xchg   esp,eax
  406105:	mov    bl,0x2
  406107:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406108:	dec    ecx
  406109:	in     al,dx
  40610a:	in     eax,0xfd
  40610c:	fdivr  st,st(7)
  40610e:	xor    al,0x9b
  406110:	push   cs
  406111:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406112:	fcmovbe st,st(5)
  406114:	xchg   ecx,eax
  406115:	retf   
  406116:	test   BYTE PTR [ecx],0x19
  406119:	xchg   edi,eax
  40611a:	aas    
  40611b:	jg     0x4060f2
  40611d:	push   0x24
  40611f:	test   edx,eax
  406121:	(bad)  
  406123:	lock sub eax,0x3893f96a
  406129:	shl    DWORD PTR [ebx],1
  40612b:	rol    BYTE PTR [ebp-0x7c],1
  40612e:	popa   
  40612f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406130:	js     0x40611e
  406132:	repnz scas al,BYTE PTR es:[edi]
  406134:	jmp    0xa690ca6
  406139:	stc    
  40613a:	xchg   ebp,eax
  40613b:	mov    edx,0xce017ff3
  406140:	(bad)  
  406141:	stos   BYTE PTR es:[edi],al
  406142:	loope  0x4061b0
  406144:	pusha  
  406145:	icebp  
  406146:	inc    ebp
  406147:	push   ecx
  406148:	test   al,0xf5
  40614a:	lea    ebp,[ebx]
  40614c:	cmp    eax,0xf8e49c53
  406151:	add    DWORD PTR [edx+0x26],esp
  406154:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406155:	aaa    
  406156:	imul   eax,eax,0x4a639b88
  40615c:	inc    edx
  40615d:	pusha  
  40615e:	inc    esi
  40615f:	fs (bad) 
  406162:	ds icebp 
  406164:	pop    ecx
  406165:	mov    ds:0xc767c249,eax
  40616a:	clc    
  40616b:	fwait
  40616c:	ja     0x406111
  40616e:	inc    edi
  40616f:	nop
  406170:	ret    0xa3ad
  406173:	test   eax,0xca24511c
  406178:	aad    0x7e
  40617a:	out    dx,al
  40617b:	add    esi,ebp
  40617d:	loopne 0x40617b
  40617f:	sahf   
  406180:	stos   DWORD PTR es:[edi],eax
  406181:	cli    
  406182:	cmp    al,0x6e
  406184:	(bad)  
  406185:	aam    0x40
  406187:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406188:	xor    al,0x6e
  40618a:	inc    edx
  40618b:	dec    esp
  40618c:	jns    0x4061bd
  40618e:	test   eax,edx
  406190:	repz mov dh,0xb3
  406193:	call   0x194e:0xa2129d5a
  40619a:	sub    DWORD PTR [eax+0x66],0xfffffff1
  40619e:	jbe    0x406158
  4061a0:	push   ds
  4061a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4061a2:	(bad)  
  4061a3:	push   eax
  4061a4:	xchg   ebp,eax
  4061a5:	xlat   BYTE PTR ds:[ebx]
  4061a6:	xor    eax,DWORD PTR [eax+0x2edac7f1]
  4061ac:	ret    0x4f46
  4061af:	stc    
  4061b0:	sbb    esp,ebp
  4061b2:	jp     0x4061e3
  4061b4:	stc    
  4061b5:	inc    edi
  4061b6:	push   es
  4061b7:	xor    DWORD PTR [esi],esp
  4061b9:	(bad)  
  4061ba:	push   edx
  4061bb:	jg     0x406152
  4061bd:	leave  
  4061be:	mov    ds:0x9da02f9,al
  4061c3:	jae    0x406197
  4061c5:	sub    DWORD PTR [edi+eiz*8],ecx
  4061c8:	push   ecx
  4061c9:	stos   BYTE PTR es:[edi],al
  4061ca:	les    ebx,FWORD PTR [edi]
  4061cc:	out    dx,eax
  4061cd:	xchg   ah,bl
  4061cf:	dec    esi
  4061d0:	mov    ds:0xf0619cc6,al
  4061d5:	pop    edi
  4061d6:	inc    eax
  4061d7:	jg     0x4061b7
  4061d9:	pop    ds
  4061da:	jo     0x406170
  4061dc:	call   0x663e:0x9f3e7e45
  4061e3:	ins    BYTE PTR es:[edi],dx
  4061e4:	xchg   edx,eax
  4061e5:	out    dx,eax
  4061e6:	or     al,0x8
  4061e8:	push   eax
  4061e9:	repz das 
  4061eb:	cmp    DWORD PTR [ebx+eax*1+0x4e],0x5330e74b
  4061f3:	or     cl,BYTE PTR [ecx]
  4061f5:	jbe    0x4061db
  4061f7:	popa   
  4061f8:	call   0x3ae5:0xed371649
  4061ff:	dec    ebp
  406200:	adc    bl,BYTE PTR [esi+0x1e]
  406203:	les    di,DWORD PTR [ebp+0x70]
  406207:	xlat   BYTE PTR ds:[ebx]
  406208:	call   0xdf8a7fc5
  40620d:	cmc    
  40620e:	inc    edx
  40620f:	ins    BYTE PTR es:[edi],dx
  406210:	push   ebp
  406211:	sub    al,BYTE PTR [eax+eax*1-0x2a3e8df2]
  406218:	jmp    0x5e6228f8
  40621d:	jns    0x4061ef
  40621f:	xchg   BYTE PTR [eax],ch
  406221:	mov    dh,0x9
  406223:	pop    esi
  406224:	jl     0x406266
  406226:	dec    ebp
  406227:	stos   BYTE PTR es:[edi],al
  406228:	das    
  406229:	test   al,0xe8
  40622b:	sub    dh,BYTE PTR [edi-0x64]
  40622e:	inc    ebp
  40622f:	mov    dh,0x15
  406231:	mov    edi,0xd26960cc
  406236:	ror    DWORD PTR [ebp+0x5ce02e5],0x24
  40623d:	xor    ch,al
  40623f:	and    eax,0x83a1f6ed
  406244:	push   esp
  406245:	dec    eax
  406246:	outs   dx,DWORD PTR ds:[esi]
  406247:	fsubr  QWORD PTR [ebp-0xa1259ba]
  40624d:	mov    BYTE PTR [edx+0x82c8119],al
  406253:	xor    dl,BYTE PTR [eax+0xd]
  406256:	sbb    al,0xce
  406258:	mov    ebx,0x76abb35a
  40625d:	pop    ecx
  40625e:	mov    edi,0xaa9b4cc1
  406263:	ja     0x406249
  406265:	adc    ecx,ebp
  406267:	dec    esp
  406268:	jno    0x4062a8
  40626a:	xchg   ebx,eax
  40626b:	test   DWORD PTR [ebx-0x5a91fb8d],esi
  406271:	or     BYTE PTR [edx-0x51],0x1f
  406275:	shl    BYTE PTR [edx-0xb2fba9b],cl
  40627b:	mov    al,0x46
  40627d:	xchg   edi,eax
  40627e:	pop    esp
  40627f:	shl    ecx,cl
  406281:	jg     0x406216
  406283:	or     DWORD PTR [edx+0x70e40853],ebp
  406289:	sar    BYTE PTR [eax],1
  40628b:	pop    ds
  40628c:	jno    0x4062dd
  40628e:	scas   al,BYTE PTR es:[edi]
  40628f:	jge    0x406303
  406291:	push   eax
  406292:	dec    eax
  406293:	cli    
  406294:	push   cs
  406295:	iret   
  406296:	cwde   
  406297:	outs   dx,BYTE PTR ds:[esi]
  406298:	xchg   DWORD PTR [edx-0x1328741f],edi
  40629e:	loop   0x40623b
  4062a0:	jge    0x4062b9
  4062a2:	mov    dl,0xfa
  4062a4:	jl     0x4062a3
  4062a6:	xor    ch,bl
  4062a8:	pop    edi
  4062a9:	cmp    eax,0x9e4294f5
  4062ae:	dec    ecx
  4062af:	cmc    
  4062b0:	xor    edx,edi
  4062b2:	mov    esp,0x91a0235c
  4062b7:	mov    edx,ds
  4062b9:	icebp  
  4062ba:	pop    es
  4062bb:	stc    
  4062bc:	cmp    DWORD PTR [edi+0x40dddf25],eax
  4062c2:	mov    ecx,0x189b46b3
  4062c7:	(bad)  
  4062c8:	mov    ds:0x21973cf7,eax
  4062cd:	jne    0x40630e
  4062cf:	jnp    0x4062bd
  4062d1:	xor    bl,BYTE PTR [esi]
  4062d3:	push   0x15
  4062d5:	xchg   BYTE PTR [edx+0x7],bl
  4062d8:	lods   eax,DWORD PTR ds:[esi]
  4062d9:	aad    0xff
  4062db:	scas   eax,DWORD PTR es:[edi]
  4062dc:	cmp    ecx,DWORD PTR [edx]
  4062de:	mov    eax,0x90ef0f42
  4062e3:	cmp    bh,BYTE PTR [eax+0x56be19c8]
  4062e9:	add    ah,0xec
  4062ec:	out    0x7b,eax
  4062ee:	lea    eax,[eax-0x6f915cbe]
  4062f4:	test   BYTE PTR [edi-0x223a4eb2],al
  4062fa:	call   FWORD PTR [edi]
  4062fc:	fstp   TBYTE PTR [ebx]
  4062fe:	test   eax,0x97ae8edf
  406303:	adc    BYTE PTR [ebp+eiz*4-0x50fd9daa],ah
  40630a:	lds    eax,FWORD PTR [esi]
  40630c:	mov    fs,WORD PTR [eax+0x79]
  40630f:	bound  edi,QWORD PTR [eax]
  406311:	xchg   esi,eax
  406312:	pop    ds
  406313:	xchg   ebx,eax
  406314:	xlat   BYTE PTR ds:[ebx]
  406315:	dec    esi
  406316:	inc    eax
  406317:	adc    DWORD PTR [edx+0x60],ecx
  40631a:	popa   
  40631b:	lods   al,BYTE PTR ds:[esi]
  40631c:	sbb    ebp,DWORD PTR [ebx]
  40631e:	dec    edi
  40631f:	inc    eax
  406320:	dec    esi
  406321:	sbb    al,0x5b
  406323:	pushf  
  406324:	mov    cl,0xd3
  406326:	mov    al,0xc5
  406328:	pop    DWORD PTR [esp+eiz*4]
  40632b:	push   es
  40632c:	mov    dl,0x4e
  40632e:	pop    ss
  40632f:	in     eax,0x94
  406331:	jg     0x4062d0
  406333:	add    DWORD PTR [edx+0x7],ebx
  406336:	jmp    0x3895:0xd4c4158d
  40633d:	jbe    0x4062f1
  40633f:	mov    dl,BYTE PTR [ebx]
  406341:	and    ah,ch
  406343:	jmp    0x4062e6
  406345:	mul    DWORD PTR [ebp-0x1b]
  406348:	pop    ds
  406349:	aad    0xdd
  40634b:	or     BYTE PTR [ebp-0x3c9434c8],ch
  406351:	mov    fs,WORD PTR [edi-0x6f]
  406354:	add    al,0xe4
  406356:	(bad)  
  406358:	das    
  406359:	sub    eax,DWORD PTR [esi+0x26]
  40635c:	cmp    eax,0x8675f857
  406361:	pusha  
  406362:	adc    bl,al
  406364:	xor    DWORD PTR [ebx+ebp*8+0x731667f2],esi
  40636b:	ins    DWORD PTR es:[edi],dx
  40636c:	jns    0x406382
  40636e:	mov    WORD PTR [ecx-0x38],es
  406371:	pop    esi
  406372:	mov    WORD PTR [eax-0xd],ss
  406375:	pop    ds
  406376:	(bad)  
  406377:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406378:	mov    esi,0x30247c0d
  40637d:	and    dh,BYTE PTR [ebx-0x6edb3cde]
  406383:	outs   dx,BYTE PTR ds:[esi]
  406384:	(bad)  
  406385:	xor    edx,esp
  406387:	pop    edi
  406388:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406389:	inc    ebp
  40638a:	add    eax,0x59fe33d4
  40638f:	call   0xb4db0fd3
  406394:	mov    dl,0x73
  406396:	add    al,0xe
  406398:	out    dx,eax
  406399:	mov    WORD PTR ds:0x8be9bb3e,?
  40639f:	xor    DWORD PTR [esi+0x4e01305f],edx
  4063a5:	mov    cl,0x6f
  4063a7:	xchg   edi,eax
  4063a8:	imul   ch
  4063aa:	sbb    al,0x6a
  4063ac:	in     al,dx
  4063ad:	add    al,0xaa
  4063af:	(bad)  
  4063b0:	xchg   ecx,eax
  4063b1:	out    0x80,al
  4063b3:	hlt    
  4063b4:	retf   
  4063b5:	stos   DWORD PTR es:[edi],eax
  4063b6:	sbb    eax,DWORD PTR gs:[esi+0x65]
  4063ba:	ffree  st(4)
  4063bc:	or     eax,0x272fa847
  4063c1:	ror    DWORD PTR [edx+ebx*1],cl
  4063c4:	and    bh,BYTE PTR [ebp+edx*2-0x59]
  4063c8:	xor    ebx,DWORD PTR [esi]
  4063ca:	xor    al,0xe5
  4063cc:	pop    es
  4063cd:	(bad)  
  4063ce:	lock mov WORD PTR [ebx+ebp*1-0x5f],cs
  4063d3:	add    al,0x4d
  4063d5:	into   
  4063d6:	mov    BYTE PTR [edi*4-0x101dbf20],cl
  4063dd:	dec    ebp
  4063de:	cmp    al,0x94
  4063e0:	mov    al,ds:0xecc7a52e
  4063e5:	in     al,dx
  4063e6:	arpl   ax,bx
  4063e8:	(bad)  
  4063e9:	fdiv   DWORD PTR [ebx-0x7a5270de]
  4063ef:	in     eax,0xba
  4063f1:	xor    al,0x2c
  4063f3:	stos   BYTE PTR es:[edi],al
  4063f4:	imul   edx,DWORD PTR [edi],0xfffffff5
  4063f7:	adc    eax,0x57a821de
  4063fc:	arpl   WORD PTR [ebx+eax*4-0x9d3c54f],ax
  406403:	(bad)  
  406406:	adc    ebp,DWORD PTR [esi]
  406408:	pop    edx
  406409:	sub    ecx,DWORD PTR [eax]
  40640b:	in     al,dx
  40640c:	jno    0x4063f2
  40640e:	xchg   DWORD PTR [eax],ebp
  406410:	push   ebp
  406411:	add    ah,BYTE PTR [esi]
  406413:	lea    esi,[esi*4+0x1197669c]
  40641a:	adc    cl,BYTE PTR [ecx]
  40641c:	test   DWORD PTR [edi],0x704692bf
  406422:	lea    ebp,[edx]
  406424:	jle    0x40647c
  406426:	je     0x4063d3
  406428:	and    esi,DWORD PTR [eax-0x77d2db2c]
  40642e:	or     dl,BYTE PTR [edi-0x4f1c32bd]
  406434:	(bad)  [esi*2+0x2a7f3fce]
  40643b:	clc    
  40643c:	sbb    cl,dh
  40643e:	jmp    0x406463
  406440:	jo     0x406473
  406442:	or     DWORD PTR [ebx+esi*2+0x652d7cf0],esi
  406449:	ja     0x406414
  40644b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40644c:	jmp    0x406479
  40644e:	js     0x4063e9
  406450:	mov    bh,0xef
  406452:	jno    0x406490
  406454:	rcl    DWORD PTR [esi+0x78],cl
  406457:	or     BYTE PTR [ebp-0xe1ae677],0x65
  40645e:	jp     0x4063fe
  406460:	test   al,0xdb
  406462:	js     0x406401
  406464:	mov    dl,0x7f
  406466:	lock mov cl,0xde
  406469:	mov    dl,0xe
  40646b:	push   0x7a91d482
  406470:	imul   esp,DWORD PTR [edi+0x7c8948aa],0xffffffeb
  406477:	sub    DWORD PTR [bx],esi
  40647a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40647b:	mov    BYTE PTR [eax+0x23d07587],ah
  406481:	shl    DWORD PTR [ecx-0x4e],cl
  406484:	cmp    DWORD PTR [eax],esi
  406486:	shr    DWORD PTR [esi],cl
  406488:	rcl    edx,cl
  40648a:	std    
  40648b:	(bad)  
  40648c:	jb     0x406456
  40648e:	add    ebp,edx
  406490:	in     al,dx
  406491:	out    dx,al
  406492:	icebp  
  406493:	scas   al,BYTE PTR es:[edi]
  406494:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406495:	iret   
  406496:	inc    ebx
  406497:	fnstsw WORD PTR [edx+0x762a4479]
  40649d:	loope  0x4064f5
  40649f:	std    
  4064a0:	in     eax,0x8c
  4064a2:	or     DWORD PTR [eax-0x27],edi
  4064a5:	icebp  
  4064a6:	mov    al,ds:0xe09863a2
  4064ab:	loopne 0x40645d
  4064ad:	mov    esp,0xec94b76c
  4064b2:	add    esi,ebx
  4064b4:	pop    esp
  4064b5:	and    edx,DWORD PTR [esi-0x65]
  4064b8:	lea    ecx,[ebp-0x71]
  4064bb:	push   edx
  4064bc:	push   eax
  4064bd:	frndint 
  4064bf:	pop    edi
  4064c0:	(bad)  
  4064c1:	jo     0x4064fe
  4064c3:	aas    
  4064c4:	pushf  
  4064c5:	sbb    DWORD PTR [esi+0x46244b44],0xffffffa3
  4064cc:	or     DWORD PTR [eax-0x5e15187e],edi
  4064d2:	sbb    BYTE PTR [ebx+eax*4],0xf9
  4064d6:	call   0xb5eb:0x1dfbcf1f
  4064dd:	xor    ecx,DWORD PTR [edi+ebp*2-0x7570b0fc]
  4064e4:	mov    bl,BYTE PTR ss:[ebx+0x5b4bff17]
  4064eb:	sbb    esi,ecx
  4064ed:	xlat   BYTE PTR ds:[ebx]
  4064ee:	sub    ebx,edx
  4064f0:	mov    ebp,0x5e58079e
  4064f5:	adc    eax,0xcd8251e5
  4064fa:	mov    ebp,0xad610d3b
  4064ff:	repz jne 0x4064b6
  406502:	sub    DWORD PTR [edx+edx*4+0x70bac467],ebx
  406509:	add    cl,ch
  40650b:	push   ds
  40650c:	mov    cs,WORD PTR [edx+ebp*1+0x2da1152e]
  406513:	sbb    DWORD PTR [esi+0x76],ebp
  406516:	mov    edx,0xce243ca3
  40651b:	in     al,0x77
  40651d:	mov    eax,0xa1dc92b4
  406522:	xor    eax,0x5b56fb09
  406527:	inc    esp
  406528:	and    al,BYTE PTR [eax+0x6a23d62a]
  40652e:	shr    BYTE PTR [esi+0x31f2de48],cl
  406534:	add    DWORD PTR [esi+0x79],eax
  406537:	(bad)  
  406538:	xor    edi,DWORD PTR [ebp-0x2d]
  40653b:	xor    eax,0x5ed1ca4f
  406540:	ss fdivr st,st(0)
  406543:	ret    0x1214
  406546:	jmp    0xeae1:0x25bd3dbb
  40654d:	inc    eax
  40654e:	sbb    ah,ch
  406550:	stos   DWORD PTR es:[edi],eax
  406551:	jge    0x4065b8
  406553:	push   ecx
  406554:	fcmovu st,st(1)
  406556:	and    al,0x1b
  406558:	aaa    
  406559:	fwait
  40655a:	mul    DWORD PTR [esi-0x4a]
  40655d:	adc    al,0x4f
  40655f:	loop   0x4065b6
  406561:	loopne 0x4065d7
  406563:	clc    
  406564:	sbb    DWORD PTR [ebx],esi
  406566:	inc    esp
  406567:	xchg   esp,eax
  406568:	or     esi,DWORD PTR [eax-0x3d659005]
  40656e:	sbb    dl,BYTE PTR [eax+0x1b3e73ad]
  406574:	xor    al,0x82
  406576:	stos   DWORD PTR es:[edi],eax
  406577:	popa   
  406578:	push   0x12
  40657a:	mov    bh,0x18
  40657c:	xor    dh,dl
  40657e:	and    BYTE PTR [ecx],bl
  406580:	aaa    
  406581:	cmp    eax,0x14935553
  406586:	jmp    DWORD PTR [ebp-0x3c44a7b2]
  40658c:	pop    eax
  40658d:	add    DWORD PTR [eax+ebp*1],0x7a371091
  406594:	pusha  
  406595:	or     DWORD PTR [ebx],eax
  406597:	cmp    DWORD PTR [edx],esp
  406599:	call   0xf0b6:0xb1179646
  4065a0:	mov    dh,0x5d
  4065a2:	loope  0x406538
  4065a4:	vpsadbw xmm0,xmm0,XMMWORD PTR [ebp-0x44f6f99b]
  4065ac:	in     eax,dx
  4065ad:	push   0x4f
  4065af:	icebp  
  4065b0:	mov    edx,eax
  4065b2:	mov    ah,0x63
  4065b4:	dec    edx
  4065b5:	stc    
  4065b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065b7:	mov    esi,DWORD PTR [ecx+0x106541bb]
  4065bd:	mov    cl,0xb4
  4065bf:	mov    dh,0xcc
  4065c1:	inc    ebp
  4065c2:	xor    BYTE PTR [edi-0x38],bl
  4065c5:	xor    esi,ecx
  4065c7:	popf   
  4065c8:	lea    edx,[edi+0x4e141134]
  4065ce:	add    BYTE PTR [ecx-0x3c],dh
  4065d1:	mov    bh,0x7a
  4065d3:	cmc    
  4065d4:	mov    ch,0x29
  4065d6:	into   
  4065d7:	pop    esp
  4065d8:	cmp    al,0xaa
  4065da:	adc    DWORD PTR [eax+0x2dd98483],ebp
  4065e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065e1:	ds sbb eax,0xbc7cb6d2
  4065e7:	jmp    0xd4bd8f14
  4065ec:	cmp    eax,0x8ed7bd88
  4065f1:	cmp    dh,BYTE PTR [edx-0x96fd60f]
  4065f7:	mov    dl,0xda
  4065f9:	and    dh,BYTE PTR [ebp+0x7964314e]
  4065ff:	sub    al,0xb5
  406601:	icebp  
  406602:	or     ebp,DWORD PTR ds:0x2ba436fa
  406608:	push   ebx
  406609:	jle    0x4065fb
  40660b:	push   eax
  40660c:	xor    bh,BYTE PTR [ebp+edi*1-0x60]
  406610:	aaa    
  406611:	xchg   ebx,eax
  406612:	inc    eax
  406613:	sahf   
  406614:	pusha  
  406615:	mov    WORD PTR [ebx-0x14c5b301],ss
  40661b:	or     DWORD PTR [eax+0x96bc061],0xffffffb8
  406622:	test   eax,0xd6f2e27d
  406627:	sub    DWORD PTR [eax],eax
  406629:	cmova  esp,DWORD PTR [ebx]
  40662c:	dec    esi
  40662d:	push   edi
  40662e:	mov    al,BYTE PTR [ebp-0x1c]
  406631:	xor    DWORD PTR [esi-0x5],0xffffffa2
  406635:	les    esp,FWORD PTR [ecx+0x73]
  406638:	repz jecxz 0x4065fe
  40663b:	xor    DWORD PTR [eax],esi
  40663d:	jmp    0x7694:0xda1eb686
  406644:	or     eax,0x17e91e07
  406649:	xchg   ecx,eax
  40664a:	int3   
  40664b:	fisub  WORD PTR [eax]
  40664d:	dec    ebx
  40664e:	add    BYTE PTR [ecx+0x3b],al
  406651:	xchg   ecx,eax
  406652:	sub    ebp,DWORD PTR [esi-0x31c73298]
  406658:	xlat   BYTE PTR ds:[ebx]
  406659:	mov    dl,0x9e
  40665b:	iret   
  40665c:	adc    ebp,eax
  40665e:	sub    al,BYTE PTR [ecx+edi*1+0x2a]
  406662:	scas   al,BYTE PTR es:[edi]
  406663:	dec    esp
  406664:	in     eax,dx
  406665:	fsubr  DWORD PTR ds:0xd7039e55
  40666b:	mov    ds:0x8ace3ad7,eax
  406670:	jnp    0x406632
  406672:	mov    ch,0xdd
  406674:	(bad)  
  406675:	sahf   
  406676:	inc    ebx
  406677:	call   0x71bda028
  40667c:	push   esi
  40667d:	leave  
  40667e:	and    BYTE PTR [edx-0x44],dl
  406681:	add    al,dh
  406683:	jmp    0x4066a3
  406685:	push   edx
  406686:	xchg   BYTE PTR [eax],cl
  406688:	jo     0x40664b
  40668a:	loope  0x4066d7
  40668c:	hlt    
  40668d:	or     esp,ecx
  40668f:	cs jo  0x4066e0
  406692:	sub    eax,0x9ca4688
  406697:	cmc    
  406698:	jne    0x40668f
  40669a:	pop    esp
  40669b:	jb     0x406683
  40669d:	pop    ebx
  40669e:	enter  0x6fb3,0x45
  4066a2:	cli    
  4066a3:	push   edi
  4066a4:	sahf   
  4066a5:	fdiv   st,st(2)
  4066a7:	mov    ebp,0xfbd3e675
  4066ac:	mov    DWORD PTR [eax+0x40f73fc4],ecx
  4066b2:	outs   dx,DWORD PTR ds:[esi]
  4066b3:	xor    al,0x23
  4066b5:	adc    BYTE PTR [ebx],bh
  4066b7:	sbb    al,BYTE PTR [esi]
  4066b9:	idiv   DWORD PTR [ebx-0x53]
  4066bc:	jecxz  0x4066a7
  4066be:	ficom  WORD PTR [ecx-0x5e]
  4066c1:	cmp    cl,al
  4066c3:	dec    ebx
  4066c4:	pop    ss
  4066c5:	jmp    0x46faaf84
  4066ca:	loopne 0x4066cf
  4066cc:	pop    esp
  4066cd:	repz cmp ah,bl
  4066d0:	mov    eax,0x87f36c7
  4066d5:	sahf   
  4066d6:	jmp    0x40669c
  4066d8:	mov    dh,0x48
  4066da:	xchg   ebx,eax
  4066db:	out    dx,eax
  4066dc:	fild   DWORD PTR [edi-0x11d3e891]
  4066e2:	mov    ecx,0xd1b30afd
  4066e7:	mov    ds:0xa648286b,eax
  4066ec:	xchg   edi,eax
  4066ed:	cmp    DWORD PTR [edx+ebx*1-0x47501b07],edx
  4066f4:	and    BYTE PTR [edi],0x76
  4066f7:	jge    0x4066d6
  4066f9:	iret   
  4066fa:	int    0x20
  4066fc:	push   cs
  4066fd:	or     BYTE PTR [ebx+eax*2],al
  406700:	shl    DWORD PTR [ebx-0x1a31b8de],1
  406706:	pop    eax
  406707:	xor    eax,0x53ad8d59
  40670c:	add    eax,0x985cd917
  406711:	fisub  DWORD PTR [edx+eax*8]
  406714:	popf   
  406715:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406716:	xor    DWORD PTR [esi+0x2e32feda],ebx
  40671c:	loopne 0x4066ec
  40671e:	popa   
  40671f:	(bad)  
  406720:	int    0x3a
  406722:	(bad)  [ebp+0x1a]
  406725:	jle    0x406733
  406727:	add    BYTE PTR [eax],0x72
  40672a:	xchg   edi,eax
  40672b:	ins    WORD PTR es:[edi],dx
  40672d:	mov    edx,0x3aa46d4c
  406732:	bound  esp,QWORD PTR [ebx+0x7]
  406735:	or     ebx,DWORD PTR [edx+0x6002e6b5]
  40673b:	sbb    al,0xc2
  40673d:	pop    esi
  40673e:	mov    cl,0x6b
  406740:	mov    esi,0x51ad6f8
  406745:	mov    dh,0xfd
  406747:	cld    
  406748:	sub    eax,0x9baabf18
  40674d:	(bad)  
  40674e:	out    0x89,al
  406750:	mov    BYTE PTR [esi-0x1fd6270a],dl
  406756:	retf   0x820f
  406759:	(bad)  
  40675a:	(bad)  [esi+0x20]
  40675d:	fucomp st(7)
  40675f:	retf   
  406760:	xchg   ebp,eax
  406761:	fs in  eax,0xdd
  406764:	push   es
  406765:	sbb    BYTE PTR [ebx-0x22bb1a4b],dh
  40676b:	lea    ecx,[edi-0x37f81d6e]
  406771:	mov    ebx,DWORD PTR [esi+0x7143f3c8]
  406777:	xchg   DWORD PTR [ebx-0x52c1c56a],esp
  40677d:	add    eax,0xee23fc16
  406782:	nop
  406783:	push   edx
  406784:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406785:	push   cs
  406786:	loopne 0x406788
  406788:	push   esi
  406789:	cld    
  40678a:	push   ecx
  40678b:	mov    dh,0x4d
  40678d:	and    BYTE PTR ds:[ebx+0x76],al
  406791:	xchg   edx,eax
  406792:	out    0x90,eax
  406794:	pop    edi
  406795:	ins    BYTE PTR es:[edi],dx
  406796:	and    BYTE PTR [eax+0x39d104ed],ah
  40679c:	scas   al,BYTE PTR es:[edi]
  40679d:	xchg   esp,eax
  40679e:	xor    eax,DWORD PTR [edx-0x489f9d9e]
  4067a4:	push   0xffffff85
  4067a6:	je     0x4067e2
  4067a8:	sbb    ecx,DWORD PTR [edi]
  4067aa:	push   ecx
  4067ab:	ja     0x406809
  4067ad:	mov    eax,0x2cb04107
  4067b2:	and    bl,BYTE PTR [esi+0x2e014b6d]
  4067b8:	jp     0x40678f
  4067ba:	xchg   ebx,eax
  4067bb:	ret    0xc536
  4067be:	das    
  4067bf:	scas   eax,DWORD PTR es:[edi]
  4067c0:	cwde   
  4067c1:	dec    esi
  4067c2:	mov    edi,ss
  4067c4:	bound  esp,QWORD PTR [ebx+0x29]
  4067c7:	mov    al,ds:0x31b04601
  4067cc:	or     al,ah
  4067ce:	mov    esp,ecx
  4067d0:	cmc    
  4067d1:	mov    al,0x6b
  4067d3:	dec    esp
  4067d4:	dec    ebp
  4067d5:	inc    esi
  4067d6:	in     eax,dx
  4067d7:	pop    es
  4067d8:	push   eax
  4067d9:	dec    edi
  4067da:	stos   DWORD PTR es:[edi],eax
  4067db:	into   
  4067dc:	jecxz  0x406837
  4067de:	popf   
  4067df:	data16 add BYTE PTR [ebx+0x4c],ch
  4067e3:	addr16 mov ebx,0x51773f20
  4067e9:	mov    ebp,0x52701a25
  4067ee:	(bad)  
  4067ef:	cdq    
  4067f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067f1:	or     DWORD PTR [ebx-0x36],0xa17f4d38
  4067f8:	inc    edi
  4067f9:	sub    al,0xb4
  4067fb:	jecxz  0x406792
  4067fd:	pop    edx
  4067fe:	xor    eax,0x476f6b3e
  406803:	shr    BYTE PTR [edx-0x10c99514],cl
  406809:	push   edx
  40680a:	cwde   
  40680b:	xchg   edx,eax
  40680c:	jne    0x406811
  40680e:	std    
  40680f:	pop    ebx
  406810:	inc    edx
  406811:	dec    ebx
  406812:	cmp    al,0xaa
  406814:	push   ebx
  406815:	mov    al,0xa2
  406817:	and    DWORD PTR [eax-0x3f],ebx
  40681a:	int    0xba
  40681c:	cdq    
  40681d:	or     al,0x5c
  40681f:	shl    dh,1
  406821:	ins    BYTE PTR es:[edi],dx
  406822:	adc    ecx,DWORD PTR [ebp-0x698492c6]
  406828:	and    ecx,DWORD PTR [edi-0x20]
  40682b:	rdpmc  
  40682d:	push   edx
  40682e:	push   edx
  40682f:	gs cmc 
  406831:	(bad)  
  406832:	bound  ebp,QWORD PTR [edi]
  406834:	dec    eax
  406835:	mov    esp,0x1f23f66b
  40683a:	adc    al,0xb
  40683c:	cdq    
  40683d:	shr    DWORD PTR [ecx],1
  40683f:	and    al,0x81
  406841:	and    al,0xfc
  406843:	jns    0x40682e
  406845:	stc    
  406846:	xchg   ebp,ecx
  406848:	mov    bh,0x48
  40684a:	add    BYTE PTR ds:[edx+0x73],bl
  40684e:	(bad)  
  40684f:	push   edi
  406850:	aad    0x4
  406852:	dec    ebp
  406853:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406854:	loope  0x4068a1
  406856:	pop    ds
  406857:	push   esi
  406858:	sbb    bl,0x14
  40685b:	or     BYTE PTR [esi],0xa6
  40685e:	cmp    BYTE PTR [ebp-0x61],bl
  406861:	xchg   edi,eax
  406862:	mov    eax,0xe261a09a
  406867:	fcomp  DWORD PTR [edi+eiz*8-0x7fb62545]
  40686e:	jns    0x4068c3
  406870:	push   cs
  406871:	(bad)  
  406872:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406873:	data16 adc al,0xc0
  406876:	aam    0x86
  406878:	mov    esp,0x243a9df8
  40687d:	inc    ecx
  40687e:	inc    edx
  40687f:	inc    ebp
  406880:	mov    gs,esp
  406882:	es adc al,0x1e
  406885:	fnsave [esi]
  406887:	mov    esi,0xf40af62a
  40688c:	mov    dl,0x1c
  40688e:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  406890:	mov    cl,0x77
  406892:	or     dh,bh
  406894:	push   ecx
  406895:	cwde   
  406896:	mov    esp,edi
  406898:	pop    ebx
  406899:	jge    0x4068f9
  40689b:	mov    cl,0x25
  40689d:	test   al,0xc
  40689f:	popf   
  4068a0:	repz in al,dx
  4068a2:	in     eax,0x71
  4068a4:	inc    esi
  4068a5:	xchg   ebx,eax
  4068a6:	repz cmp eax,0xf7844a08
  4068ac:	cmp    ah,cl
  4068ae:	and    al,0xda
  4068b0:	(bad)  
  4068b1:	pop    ebp
  4068b2:	mov    esi,0x5a8ef765
  4068b7:	pop    es
  4068b8:	aam    0x5b
  4068ba:	in     eax,0x1b
  4068bc:	ret    0xd23c
  4068bf:	shr    edi,0x80
  4068c2:	test   DWORD PTR [edi],ebx
  4068c4:	ins    WORD PTR es:[edi],dx
  4068c6:	or     ebx,DWORD PTR [eax+0x3506f3e4]
  4068cc:	xchg   ebp,eax
  4068cd:	push   cs
  4068ce:	dec    eax
  4068cf:	add    DWORD PTR [edx+0x11edc100],edi
  4068d5:	add    dh,bh
  4068d7:	xor    al,0x4f
  4068d9:	imul   ebp,DWORD PTR [eax-0x37],0xf810931e
  4068e0:	lock add al,0x53
  4068e3:	mov    eax,ds:0x1172c1da
  4068e8:	jp     0x4068ef
  4068ea:	jle    0x4068f8
  4068ec:	iret   
  4068ed:	ret    0x7c9
  4068f0:	jbe    0x406895
  4068f2:	jno    0x406932
  4068f4:	push   ecx
  4068f5:	shr    esi,cl
  4068f7:	pop    ecx
  4068f8:	and    eax,0x39962aaf
  4068fd:	test   al,0x22
  4068ff:	mov    dl,0xc7
  406901:	ret    0x6356
  406904:	push   0x1f4078cf
  406909:	push   edx
  40690a:	push   0xe85af74
  40690f:	ds jb  0x4068e4
  406912:	and    bh,BYTE PTR [edx+0x3c347dc4]
  406918:	inc    ecx
  406919:	adc    eax,0xcd34e8e2
  40691e:	(bad)  
  40691f:	push   eax
  406920:	mov    al,ds:0x121e1765
  406925:	cmp    DWORD PTR [ecx],ebx
  406927:	jb     0x40696a
  406929:	pop    es
  40692a:	xchg   edi,eax
  40692b:	dec    ebp
  40692c:	and    al,bl
  40692e:	jae    0x4068d7
  406930:	sub    cl,ah
  406932:	adc    eax,0xf088535b
  406937:	mov    DWORD PTR [ecx-0x51a8d8e3],esp
  40693d:	mov    BYTE PTR [ebx-0x41814a67],bl
  406943:	popf   
  406944:	push   esi
  406945:	push   esi
  406946:	addr16 or ah,cl
  406949:	add    BYTE PTR ds:0x31a7c3ce,bh
  40694f:	push   edx
  406950:	cmc    
  406951:	dec    ebx
  406952:	sub    BYTE PTR [ebx],0x94
  406955:	sbb    ecx,DWORD PTR [edi]
  406957:	js     0x40694d
  406959:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40695a:	mov    eax,0xe1670ba
  40695f:	mov    eax,ds:0x8326356a
  406964:	test   al,0x8e
  406966:	mov    al,0x86
  406968:	pop    ds
  406969:	or     DWORD PTR [eax],ebx
  40696b:	jg     0x406907
  40696d:	add    bh,BYTE PTR [esi+0x60bd1ec1]
  406973:	push   edx
  406974:	aad    0x8d
  406976:	adc    eax,0xc9df3368
  40697b:	mov    BYTE PTR [esi-0x10],ch
  40697e:	cmp    BYTE PTR [edi],cl
  406980:	inc    edi
  406981:	dec    ebp
  406982:	and    al,0xd4
  406984:	aas    
  406985:	fsub   st,st(5)
  406987:	add    ah,BYTE PTR [eax+0x4b]
  40698a:	add    eax,0xdf6d8402
  40698f:	jne    0x4069d0
  406991:	shr    BYTE PTR [edx-0x70],1
  406994:	retf   0xa749
  406997:	xchg   edx,eax
  406998:	jmp    0x406a0e
  40699a:	xor    bl,bh
  40699c:	data16 (bad) 
  40699e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40699f:	cmp    DWORD PTR [edx],ecx
  4069a1:	mov    ebp,ds
  4069a3:	aaa    
  4069a4:	cmp    ecx,ecx
  4069a6:	pop    ebx
  4069a7:	mov    ebx,DWORD PTR [eax+ecx*4]
  4069aa:	not    BYTE PTR [esi+edi*8-0x63b224a3]
  4069b1:	adc    DWORD PTR [ebx-0x1c95fc8f],esp
  4069b7:	pop    edx
  4069b8:	jae    0x406996
  4069ba:	jg     0x4069e0
  4069bc:	aam    0xb4
  4069be:	lea    ebp,[eax+0x38]
  4069c1:	add    dl,BYTE PTR [edi+0x68713e5]
  4069c7:	in     eax,dx
  4069c8:	adc    bl,BYTE PTR [eax+0x5a]
  4069cb:	fild   QWORD PTR [ecx]
  4069cd:	aaa    
  4069ce:	and    ecx,DWORD PTR [ebx]
  4069d0:	or     al,0xf
  4069d2:	adc    al,0x74
  4069d4:	mov    ah,BYTE PTR [ecx]
  4069d6:	and    al,0xde
  4069d8:	pop    ds
  4069d9:	adc    eax,0x48ed38d6
  4069de:	mov    edx,0x44d0de44
  4069e3:	out    0x75,eax
  4069e5:	and    DWORD PTR [ecx],ebp
  4069e7:	dec    DWORD PTR [ebp+0x3d1dfbf0]
  4069ed:	inc    esi
  4069ee:	pop    ss
  4069ef:	push   edx
  4069f0:	inc    esp
  4069f1:	push   eax
  4069f2:	rcl    esi,cl
  4069f4:	sub    eax,0x4370f7af
  4069f9:	xchg   ebx,eax
  4069fa:	adc    al,0x59
  4069fc:	fadd   DWORD PTR [edi+0x737a7478]
  406a02:	and    ecx,DWORD PTR [edx+0x7e934c40]
  406a08:	mov    cl,0x0
  406a0a:	fadd   DWORD PTR [ecx-0x47930808]
  406a10:	mov    edi,0xaa1939d8
  406a15:	hlt    
  406a16:	jg     0x4069c0
  406a18:	mov    ds:0xbb21ad58,eax
  406a1d:	shl    DWORD PTR ds:0x66ce72c0,cl
  406a23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a24:	repnz mov ebp,0x29b86cec
  406a2a:	dec    ecx
  406a2b:	lahf   
  406a2c:	retf   
  406a2d:	cwde   
  406a2e:	das    
  406a2f:	jns    0x406ab0
  406a31:	repz jg 0x406a00
  406a34:	rol    DWORD PTR [eax+0x41323176],cl
  406a3a:	loopne 0x406a71
  406a3c:	out    0x88,eax
  406a3e:	sub    ecx,DWORD PTR [ecx]
  406a40:	xor    DWORD PTR [eax],esp
  406a42:	xchg   ebp,eax
  406a43:	cmp    DWORD PTR [edx],esi
  406a45:	cmp    BYTE PTR [edi+0x646ce340],dh
  406a4b:	adc    esp,DWORD PTR [ebx+0x19]
  406a4e:	sub    ah,0x77
  406a51:	pop    ebx
  406a52:	add    DWORD PTR [esi+0x7c],0xffffffa4
  406a56:	ret    0xed35
  406a59:	mov    al,0xd3
  406a5b:	fs pusha 
  406a5d:	cli    
  406a5e:	push   es
  406a5f:	pop    ebx
  406a60:	lods   al,BYTE PTR ds:[esi]
  406a61:	inc    ebx
  406a62:	imul   esi,DWORD PTR [edi],0x21f53307
  406a68:	xchg   ebx,eax
  406a69:	adc    eax,0x4606b817
  406a6e:	out    0xae,al
  406a70:	ins    DWORD PTR es:[edi],dx
  406a71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a72:	popa   
  406a73:	mov    bh,0x3
  406a75:	pop    ebx
  406a76:	sub    DWORD PTR [ebp-0x11ac6233],ebx
  406a7c:	jnp    0x406a95
  406a7e:	xchg   ecx,eax
  406a7f:	dec    ecx
  406a80:	cmp    al,0x19
  406a82:	or     DWORD PTR ds:0x501a6684,esi
  406a88:	fmul   st(0),st
  406a8a:	fdiv   QWORD PTR [esi-0x26]
  406a8d:	lahf   
  406a8e:	jl     0x406ad7
  406a90:	fstp   st(5)
  406a92:	mov    esi,0x16cc34b9
  406a97:	or     ah,0x13
  406a9a:	cmp    dh,0x66
  406a9d:	mov    WORD PTR [esi+0x13aeaee1],fs
  406aa3:	int    0xea
  406aa5:	mov    esi,0x27bcc0e9
  406aaa:	push   edi
  406aab:	sub    BYTE PTR [edx-0x80],0xf8
  406aaf:	out    0xf7,eax
  406ab1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ab2:	js     0x406a9e
  406ab4:	cmp    dl,BYTE PTR [edi-0x39085e11]
  406aba:	push   edx
  406abb:	sbb    BYTE PTR [edx],0x8
  406abe:	sbb    cl,cl
  406ac0:	iret   
  406ac1:	(bad)  
  406ac2:	mov    eax,ds:0xcce3281f
  406ac7:	test   BYTE PTR [edx],dl
  406ac9:	or     esi,esp
  406acb:	addr16 push eax
  406acd:	pop    ds
  406ace:	out    0x28,eax
  406ad0:	aam    0xa9
  406ad2:	jmp    0x406ac1
  406ad4:	scas   al,BYTE PTR es:[edi]
  406ad5:	pop    ss
  406ad6:	sub    al,0xa1
  406ad8:	dec    edi
  406ad9:	mov    cl,0xb2
  406adb:	hlt    
  406adc:	jo     0x406a7a
  406ade:	jl     0x406b20
  406ae0:	inc    esi
  406ae1:	lds    ebx,FWORD PTR [edx-0x75362ccc]
  406ae7:	jg     0x406a8b
  406ae9:	mov    edi,DWORD PTR [eax-0x7b]
  406aec:	jne    0x406aa4
  406aee:	test   bh,ah
  406af0:	std    
  406af1:	(bad)  
  406af2:	arpl   WORD PTR [esi+ebx*1+0x9],si
  406af6:	inc    esp
  406af7:	rol    BYTE PTR [eax-0x11ab059],0x40
  406afe:	mov    ebp,0x6b6724e1
  406b03:	loopne 0x406b1a
  406b05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b06:	cmp    eax,DWORD PTR ds:0x7680418b
  406b0c:	sar    BYTE PTR [ebx+0x6f],cl
  406b0f:	add    DWORD PTR [edi+0x5fa78be9],eax
  406b15:	xchg   esp,eax
  406b16:	ins    DWORD PTR es:[edi],dx
  406b17:	leave  
  406b18:	push   esi
  406b19:	mov    ch,0x0
  406b1b:	mov    eax,0x81a83f70
  406b20:	and    esi,edi
  406b22:	add    DWORD PTR [ecx+0xb],esi
  406b25:	ins    BYTE PTR es:[edi],dx
  406b26:	sub    eax,0xced3d17d
  406b2b:	sti    
  406b2c:	push   ebx
  406b2d:	inc    eax
  406b2e:	jb     0x406aca
  406b30:	jmp    0xed78:0x15e6d0da
  406b37:	hlt    
  406b38:	jmpw   0x11eb
  406b3c:	push   edx
  406b3d:	mov    ch,0x9f
  406b3f:	sbb    al,ch
  406b41:	pop    ebp
  406b42:	outs   dx,DWORD PTR ds:[esi]
  406b43:	jb     0x406b4b
  406b45:	mov    ch,0x7d
  406b47:	ins    BYTE PTR es:[edi],dx
  406b48:	or     eax,0x18d4a413
  406b4d:	cmp    al,0x2f
  406b4f:	mov    BYTE PTR ds:0x23f220cd,cl
  406b55:	rol    DWORD PTR [eax],1
  406b57:	retf   
  406b58:	cmp    eax,ecx
  406b5a:	dec    esi
  406b5b:	inc    edx
  406b5c:	jo     0x406bc7
  406b5e:	mov    cl,0xcb
  406b60:	test   DWORD PTR [ecx-0x46],edx
  406b63:	xchg   edx,eax
  406b64:	cli    
  406b65:	cli    
  406b66:	push   ds
  406b67:	inc    esi
  406b68:	push   esp
  406b69:	fidiv  WORD PTR [ecx+edx*4+0x60]
  406b6d:	out    dx,al
  406b6e:	cdq    
  406b6f:	push   cs
  406b70:	in     eax,dx
  406b71:	jae    0x406ba6
  406b73:	test   BYTE PTR [esp+eax*2],dl
  406b76:	arpl   WORD PTR [ecx-0x4a],bp
  406b79:	jnp    0x406bca
  406b7b:	sbb    eax,0xee3ffd8e
  406b80:	je     0x406b78
  406b82:	dec    eax
  406b83:	jb     0x406b0c
  406b85:	jp     0x406b4f
  406b87:	(bad)  
  406b88:	mov    ch,0xb
  406b8a:	mov    dh,0x13
  406b8c:	cmp    eax,0xef56ac62
  406b91:	sub    eax,DWORD PTR [ecx]
  406b93:	aam    0x30
  406b95:	mov    cs,WORD PTR [esp+eiz*8-0x2b]
  406b99:	ror    DWORD PTR [eax+0x48],cl
  406b9c:	outs   dx,BYTE PTR ds:[esi]
  406b9d:	test   eax,0x8d773176
  406ba2:	js     0x406bcc
  406ba4:	sub    DWORD PTR gs:[ecx-0x5f],edx
  406ba8:	jns    0x406b75
  406baa:	xchg   edi,eax
  406bab:	pop    ecx
  406bac:	jne    0x406bec
  406bae:	xchg   esi,eax
  406baf:	jb     0x406b4e
  406bb1:	pop    esi
  406bb2:	jecxz  0x406c10
  406bb4:	mov    eax,ds:0x1afe29e5
  406bb9:	pop    esi
  406bba:	nop
  406bbb:	pushf  
  406bbc:	sbb    BYTE PTR [ebx],dl
  406bbe:	mov    eax,ds:0xfa41bd51
  406bc3:	push   0xaeac4cd7
  406bc8:	mov    esi,eax
  406bca:	fistp  WORD PTR ds:0xc969ccac
  406bd1:	sti    
  406bd2:	mov    ecx,0x62184f43
  406bd7:	stos   BYTE PTR es:[edi],al
  406bd8:	pop    ss
  406bd9:	outs   dx,DWORD PTR ds:[esi]
  406bda:	repz fmul DWORD PTR [esi]
  406bdd:	and    dh,BYTE PTR [eax+ecx*4+0x704a1e3a]
  406be4:	ret    
  406be5:	cmp    esi,DWORD PTR [ecx]
  406be7:	sub    BYTE PTR [edx+0x12],bh
  406bea:	mov    esp,edi
  406bec:	pop    esi
  406bed:	push   ss
  406bee:	and    esp,DWORD PTR [edi-0x33]
  406bf1:	xchg   DWORD PTR [edx+0x16],edx
  406bf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bf5:	mov    ds:0xa0d00518,al
  406bfa:	arpl   WORD PTR [eax+0x155fd708],bx
  406c00:	leave  
  406c01:	xor    ebp,DWORD PTR [edx]
  406c03:	mov    ds:0x703ab13f,eax
  406c08:	adc    cl,BYTE PTR [ecx+0x39]
  406c0b:	fmul   QWORD PTR [ebx-0x63cad165]
  406c11:	mov    dh,0x80
  406c13:	and    BYTE PTR [esp+edx*8],dl
  406c16:	xchg   edi,eax
  406c17:	xor    eax,0x739f2ea6
  406c1c:	ret    
  406c1d:	sbb    BYTE PTR [ecx-0x7e],bl
  406c20:	mov    ch,0x24
  406c22:	iret   
  406c23:	xor    eax,0x69c7afff
  406c28:	es add cl,0x11
  406c2c:	add    BYTE PTR [eax-0x1949e7a5],0xab
  406c33:	loop   0x406c83
  406c35:	mov    al,ss:0x31e505ed
  406c3b:	inc    ecx
  406c3c:	push   ss
  406c3d:	push   esi
  406c3e:	(bad)  
  406c3f:	dec    BYTE PTR [edx+0x3ead2cf]
  406c45:	pop    eax
  406c46:	xchg   ebx,eax
  406c47:	dec    esp
  406c48:	in     al,dx
  406c49:	mov    eax,ds:0x5d1f398b
  406c4e:	(bad)  
  406c4f:	sar    esp,1
  406c51:	mov    WORD PTR [ebp+ecx*2-0x25],?
  406c55:	fld    QWORD PTR [ecx+0x5f]
  406c58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c59:	mov    esi,0xa948d196
  406c5e:	push   es
  406c5f:	jmp    0x406c2b
  406c61:	push   cs
  406c62:	jbe    0x406c43
  406c64:	(bad)  
  406c65:	jne    0x406c65
  406c67:	push   ds
  406c68:	xchg   ebx,eax
  406c69:	int3   
  406c6a:	and    DWORD PTR [eax+0x77748de5],ebx
  406c70:	(bad)  
  406c72:	test   eax,0x6c08c401
  406c77:	aad    0xbf
  406c79:	jne    0x406ce7
  406c7b:	push   ss
  406c7c:	cmp    al,0x21
  406c7e:	es sti 
  406c80:	sti    
  406c81:	icebp  
  406c82:	pop    es
  406c83:	and    eax,0xd92b1d2d
  406c88:	sbb    cl,BYTE PTR [ecx-0x5178e0f8]
  406c8e:	fistp  QWORD PTR [ecx-0x4c]
  406c91:	mov    bh,0x65
  406c93:	jmp    0x406cf1
  406c95:	ror    BYTE PTR [esi+0x6f],cl
  406c98:	add    DWORD PTR [esi],ebx
  406c9a:	inc    edx
  406c9b:	mov    al,ds:0x78df5dcf
  406ca0:	dec    ebp
  406ca1:	ret    0x60
  406ca4:	and    dh,al
  406ca6:	adc    BYTE PTR [esi-0x39be3965],bh
  406cac:	loope  0x406d03
  406cae:	inc    ecx
  406caf:	ror    BYTE PTR [eax+0x22],cl
  406cb2:	popf   
  406cb3:	pop    ebx
  406cb4:	dec    ebx
  406cb5:	scas   al,BYTE PTR es:[edi]
  406cb6:	cwde   
  406cb7:	mov    ecx,DWORD PTR [esi+0x77]
  406cba:	arpl   di,si
  406cbc:	pop    bp
  406cbe:	or     al,0x94
  406cc0:	loopne 0x406cbb
  406cc2:	jns    0x406d38
  406cc4:	aaa    
  406cc5:	push   ds
  406cc6:	popa   
  406cc7:	call   0x7005:0xa6920174
  406cce:	shl    ebp,0x46
  406cd1:	push   0x7b
  406cd3:	into   
  406cd4:	ss pusha 
  406cd6:	sbb    DWORD PTR [eax+0x7c],ebx
  406cd9:	mov    bl,0xd2
  406cdb:	inc    esi
  406cdc:	jecxz  0x406d53
  406cde:	push   eax
  406cdf:	outs   dx,BYTE PTR ds:[esi]
  406ce0:	test   al,0x29
  406ce2:	mov    dl,0xd5
  406ce4:	dec    ebx
  406ce5:	sbb    BYTE PTR [esi-0x66],bh
  406ce8:	ret    0x95b1
  406ceb:	dec    ebx
  406cec:	aam    0x22
  406cee:	add    BYTE PTR [esi-0x292fe0b6],dh
  406cf4:	(bad)  
  406cf5:	mov    WORD PTR [ecx+0x2],ds
  406cf8:	push   ecx
  406cf9:	pop    ebx
  406cfa:	out    0x24,eax
  406cfc:	xor    al,0x1a
  406cfe:	lods   eax,DWORD PTR ds:[esi]
  406cff:	push   0x2e
  406d01:	xor    ebp,DWORD PTR [ecx-0x18c73bc3]
  406d07:	in     eax,dx
  406d08:	pop    es
  406d09:	icebp  
  406d0a:	push   cs
  406d0b:	xor    DWORD PTR [eax-0x386106ab],ebx
  406d11:	jge    0x406ca8
  406d13:	dec    ebx
  406d14:	test   al,0xe1
  406d16:	inc    ebp
  406d17:	dec    esp
  406d18:	adc    BYTE PTR [eax],cl
  406d1a:	xchg   edx,eax
  406d1b:	or     al,0xd3
  406d1d:	popf   
  406d1e:	mov    edi,0x988b3378
  406d23:	adc    BYTE PTR [ecx+0x4cd6de74],ah
  406d29:	adc    eax,0xb71e7ced
  406d2e:	imul   eax,DWORD PTR [eax],0x45
  406d31:	sbb    BYTE PTR [esi+esi*1-0x66],ah
  406d35:	loope  0x406d4a
  406d37:	xor    al,0xf2
  406d39:	cmp    dl,dl
  406d3b:	lahf   
  406d3c:	aam    0xd0
  406d3e:	sbb    eax,0x6aa15707
  406d43:	popf   
  406d44:	pop    ebx
  406d45:	ds xchg esi,eax
  406d47:	(bad)  
  406d48:	hlt    
  406d49:	xor    BYTE PTR [edi+0x65],dh
  406d4c:	mov    edi,0x813ed879
  406d51:	scas   eax,DWORD PTR es:[edi]
  406d52:	xor    eax,0x8893dcd4
  406d57:	jmp    0x406d22
  406d59:	in     al,0x13
  406d5b:	scas   al,BYTE PTR es:[edi]
  406d5c:	xchg   esp,eax
  406d5d:	ret    
  406d5e:	daa    
  406d5f:	sbb    al,0xe6
  406d61:	fdivrp st(2),st
  406d63:	xchg   esi,eax
  406d64:	sbb    esp,DWORD PTR [edi-0xd447da8]
  406d6a:	(bad)  
  406d6b:	adc    ecx,DWORD PTR [eax-0xebf3db3]
  406d71:	push   esp
  406d72:	adc    edx,edx
  406d74:	adc    dh,BYTE PTR [ecx+0x15]
  406d77:	jmp    0xd4cc617d
  406d7c:	out    0x3,eax
  406d7e:	sbb    BYTE PTR [edx+0x6d],0x92
  406d82:	inc    ebx
  406d83:	stos   DWORD PTR es:[edi],eax
  406d84:	push   0x26a90dc7
  406d89:	pushf  
  406d8a:	mov    edx,0xf5787a
  406d8f:	sbb    al,BYTE PTR [esi+0x7a]
  406d92:	ficomp WORD PTR [ebx-0x792683e]
  406d98:	mov    BYTE PTR [ecx+ecx*1-0x4e],bl
  406d9c:	int3   
  406d9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d9e:	stos   DWORD PTR es:[edi],eax
  406d9f:	push   ecx
  406da0:	(bad)  
  406da1:	fadd   st(0),st
  406da3:	int3   
  406da4:	data16 aas 
  406da6:	ss cmc 
  406da8:	pop    edi
  406da9:	mov    ah,BYTE PTR [eax]
  406dab:	(bad)  
  406dac:	cmp    ebp,esi
  406dae:	add    BYTE PTR [esi+0x26602192],bl
  406db4:	mov    ebx,0x8cd2ec37
  406db9:	(bad)  
  406dba:	psubusb mm3,QWORD PTR [ebp+0xf]
  406dbe:	jle    0x406d5f
  406dc0:	(bad)  
  406dc1:	rcr    DWORD PTR [eax],1
  406dc3:	(bad)  
  406dc4:	sub    al,0x8d
  406dc6:	repnz ds loopne 0x406dc6
  406dca:	push   cs
  406dcb:	jl     0x406d6e
  406dcd:	pop    es
  406dce:	es lock push cs
  406dd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406dd2:	jb     0x406da2
  406dd4:	ja     0x406deb
  406dd6:	adc    al,0x87
  406dd8:	cmp    cl,BYTE PTR [esp+ebx*1-0x49]
  406ddc:	pop    es
  406ddd:	sub    dl,BYTE PTR ds:0x6a52b3d0
  406de3:	pop    edi
  406de4:	mov    ecx,0x317a01ec
  406de9:	cdq    
  406dea:	push   esp
  406deb:	(bad)  
  406dec:	das    
  406ded:	add    BYTE PTR [edi-0x46],cl
  406df0:	mov    bh,0xd8
  406df2:	xor    edi,DWORD PTR [esp+ebp*2+0x339b1df9]
  406df9:	shl    DWORD PTR [edx-0x73f2c9f3],0x0
  406e00:	popf   
  406e01:	pop    eax
  406e02:	push   eax
  406e03:	xor    al,0x4e
  406e05:	mov    ds:0xbd739010,eax
  406e0a:	xor    al,0xe3
  406e0c:	mov    ebp,ebx
  406e0e:	mov    al,ds:0xb480bb69
  406e13:	int3   
  406e14:	mov    al,ds:0x5f70b3b9
  406e19:	xchg   ebp,eax
  406e1a:	xchg   ecx,eax
  406e1b:	push   edx
  406e1c:	push   ebp
  406e1d:	(bad)  
  406e1e:	cli    
  406e1f:	adc    dl,BYTE PTR [ecx+eiz*8]
  406e22:	dec    esi
  406e23:	sbb    DWORD PTR [edx+esi*4-0x14b63580],edx
  406e2a:	sub    eax,DWORD PTR [ebx]
  406e2c:	je     0x406ea6
  406e2e:	xchg   edx,eax
  406e2f:	dec    eax
  406e30:	dec    edx
  406e31:	nop
  406e32:	mov    eax,DWORD PTR [edx]
  406e34:	and    DWORD PTR ds:0xae9781bf,edi
  406e3a:	push   ss
  406e3b:	cdq    
  406e3c:	mov    BYTE PTR [edi-0x8],ch
  406e3f:	aas    
  406e40:	push   ecx
  406e41:	jo     0x406e0c
  406e43:	dec    edx
  406e44:	mov    bh,0xec
  406e46:	adc    BYTE PTR [ebx-0x1f56670f],dh
  406e4c:	test   BYTE PTR [esi],cl
  406e4e:	add    cl,BYTE PTR [esi]
  406e50:	mov    cl,0xbe
  406e52:	mov    BYTE PTR [edi+0x54346b2a],ah
  406e58:	push   0xffffffb0
  406e5a:	fidivr DWORD PTR [ebx+0x29ee40d]
  406e60:	int    0x7d
  406e62:	mov    ds:0x3ac7c8a1,eax
  406e67:	mov    ecx,0xd0c06d22
  406e6c:	add    dh,dh
  406e6e:	pop    ds
  406e6f:	mov    dh,0x1b
  406e71:	repz enter 0xefcd,0xa0
  406e76:	sub    BYTE PTR [esi+0xd531a57],bl
  406e7c:	jno    0x406eb1
  406e7e:	or     al,0x44
  406e80:	fcomp  QWORD PTR [edi+0x27]
  406e83:	cmc    
  406e84:	xchg   DWORD PTR [edi+ecx*2+0x25],esp
  406e88:	and    esp,edi
  406e8a:	ja     0x406eae
  406e8c:	or     esi,DWORD PTR [edi-0xa]
  406e8f:	xchg   BYTE PTR [edi+0x5bb00f1a],dh
  406e95:	dec    ebx
  406e96:	daa    
  406e97:	out    0x58,eax
  406e99:	sar    ebp,1
  406e9b:	dec    esp
  406e9c:	mov    ebp,0x584dc36d
  406ea1:	mov    dl,0xd1
  406ea3:	mov    DWORD PTR ds:[eax+eax*4-0x4e],esp
  406ea8:	push   edi
  406ea9:	push   ebp
  406eaa:	push   es
  406eab:	stos   BYTE PTR es:[edi],al
  406eac:	mov    bh,0x7e
  406eae:	ins    BYTE PTR es:[edi],dx
  406eaf:	pushf  
  406eb0:	dec    ebx
  406eb1:	outs   dx,DWORD PTR ds:[esi]
  406eb2:	push   ebx
  406eb3:	jnp    0x406e46
  406eb5:	mov    eax,ds:0xa23b6653
  406eba:	xor    DWORD PTR [ebx],eax
  406ebc:	loope  0x406e50
  406ebe:	in     al,0xc1
  406ec0:	std    
  406ec1:	ret    
  406ec2:	or     BYTE PTR [eax],bh
  406ec4:	popf   
  406ec5:	xor    bh,BYTE PTR [esi+eax*8]
  406ec8:	popf   
  406ec9:	outs   dx,BYTE PTR ds:[esi]
  406eca:	sahf   
  406ecb:	in     al,dx
  406ecc:	xchg   esi,eax
  406ecd:	add    eax,0x796344fe
  406ed2:	loop   0x406e9c
  406ed4:	pop    esp
  406ed5:	outs   dx,BYTE PTR ds:[esi]
  406ed6:	cmp    DWORD PTR [eax+0x5d],ebp
  406ed9:	lock loop 0x406f5b
  406edc:	mov    ds:0x4d2960a0,al
  406ee1:	ins    DWORD PTR es:[edi],dx
  406ee2:	adc    DWORD PTR [edi+edx*8],esp
  406ee5:	sbb    bh,ah
  406ee7:	rcr    DWORD PTR [ebp-0x6f],0x9b
  406eeb:	add    BYTE PTR [eax-0x43],0x80
  406eef:	fcom   QWORD PTR [ecx-0x12]
  406ef2:	lock ins DWORD PTR es:[edi],dx
  406ef4:	out    dx,al
  406ef5:	mov    ecx,0x4c53ef02
  406efa:	adc    DWORD PTR ds:0x7a9b744c,esi
  406f00:	dec    ebx
  406f01:	mov    ebp,0xb329ae9a
  406f06:	leave  
  406f07:	xchg   esp,eax
  406f08:	leave  
  406f09:	cmp    bl,dh
  406f0b:	scas   al,BYTE PTR es:[edi]
  406f0c:	test   DWORD PTR [eax-0x52],esi
  406f0f:	dec    edx
  406f10:	sub    DWORD PTR [edi+0x2f],ecx
  406f13:	cdq    
  406f14:	hlt    
  406f15:	jl     0x406f3c
  406f17:	pop    ecx
  406f18:	imul   eax,DWORD PTR [ebp-0x51b1f652],0xa9eb4f5
  406f22:	jg     0x406ec7
  406f24:	(bad)  
  406f25:	es das 
  406f27:	pop    ebx
  406f28:	ds inc ebx
  406f2a:	fsubr  st(1),st
  406f2c:	ret    0x373
  406f2f:	lea    ebp,[edx-0x4d]
  406f32:	rol    DWORD PTR [ebx-0x4d],1
  406f35:	inc    esi
  406f36:	mov    ds:0x964399d7,al
  406f3b:	ja     0x406f30
  406f3d:	xor    edx,DWORD PTR fs:[edi+0x2632680f]
  406f44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f45:	push   eax
  406f46:	mov    ds:0x995d3b46,eax
  406f4b:	push   esi
  406f4c:	out    dx,al
  406f4d:	(bad)  
  406f4e:	cs ret 
  406f50:	or     BYTE PTR [ecx-0x48],dh
  406f53:	test   DWORD PTR [edi],esi
  406f55:	inc    esp
  406f56:	test   al,0x1d
  406f58:	xchg   esi,eax
  406f59:	es adc eax,esp
  406f5c:	into   
  406f5d:	dec    edx
  406f5e:	(bad)  [ecx-0x58]
  406f61:	enter  0x28f8,0xc1
  406f65:	test   eax,0x5eb002ab
  406f6a:	inc    esp
  406f6b:	mov    ah,0xd1
  406f6d:	in     al,0x59
  406f6f:	mov    WORD PTR [edx+0x2baa751d],?
  406f75:	int    0x57
  406f77:	out    0x22,eax
  406f79:	test   DWORD PTR [edi],eax
  406f7b:	(bad)  
  406f7c:	pop    esi
  406f7d:	pop    ebx
  406f7e:	mov    dl,0xec
  406f80:	jl     0x406f07
  406f82:	std    
  406f83:	outs   dx,BYTE PTR ds:[esi]
  406f84:	xchg   ecx,eax
  406f85:	out    dx,eax
  406f86:	dec    esi
  406f87:	or     bl,BYTE PTR [eax-0x1f7eca28]
  406f8d:	fisub  DWORD PTR [edi]
  406f8f:	mov    dh,BYTE PTR [ebx]
  406f91:	repnz sti 
  406f93:	jg     0x407012
  406f95:	add    DWORD PTR [edx+edi*1-0x52db3ffa],0x7460648d
  406fa0:	mov    al,ds:0xb2ada816
  406fa5:	dec    ebp
  406fa6:	fisub  DWORD PTR [edi+0x198e0e6b]
  406fac:	push   0x59b233b4
  406fb1:	push   ds
  406fb2:	imul   ebx,DWORD PTR [ebx-0x14],0x4c
  406fb6:	xor    BYTE PTR [eax+0x5a],bl
  406fb9:	ret    0x4d0f
  406fbc:	mov    edx,0xa4800524
  406fc1:	mov    ds:0x2037888d,al
  406fc6:	stos   DWORD PTR es:[edi],eax
  406fc7:	fdiv   QWORD PTR [ecx]
  406fc9:	sub    DWORD PTR [eax+0x4908f28f],0xffffffcb
  406fd0:	fistp  DWORD PTR [ecx+0x3d]
  406fd3:	inc    ecx
  406fd4:	sbb    ch,cl
  406fd6:	cmovl  esp,DWORD PTR [esi-0x53]
  406fda:	push   ebx
  406fdb:	js     0x406ffb
  406fdd:	push   ecx
  406fde:	xchg   ebx,eax
  406fdf:	ret    0xc1c6
  406fe2:	fidivr WORD PTR [ecx-0xdb52210]
  406fe8:	imul   edx,DWORD PTR [edi-0x7144a918],0xffffffe7
  406fef:	mov    edi,0x3f657da1
  406ff4:	and    al,0x33
  406ff7:	push   esi
  406ff8:	inc    ebx
  406ff9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ffa:	add    al,0xc4
  406ffc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ffd:	and    ecx,DWORD PTR [edi]
  406fff:	xor    BYTE PTR [edx],dl
  407001:	push   edi
  407002:	mov    ebp,0x183466ec
  407007:	mov    al,0xc8
  407009:	div    DWORD PTR ds:0x778a786f
  40700f:	pop    edi
  407010:	idiv   BYTE PTR [edi-0x6b]
  407013:	push   cs
  407014:	cmp    ah,BYTE PTR [eax]
  407016:	or     dh,BYTE PTR [edi]
  407018:	dec    ebp
  407019:	sti    
  40701a:	pop    esi
  40701b:	cli    
  40701c:	std    
  40701d:	pop    ebp
  40701e:	xor    al,BYTE PTR [ebx+0x1adab5ea]
  407024:	leave  
  407025:	mov    esi,0xfa2896b7
  40702a:	cmp    ch,BYTE PTR [ecx-0x3dfe0d5]
  407030:	jmp    0x3749:0x7183012c
  407037:	sub    BYTE PTR [ebx],al
  407039:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40703a:	jmp    FWORD PTR [esi-0x227c3989]
  407040:	das    
  407041:	or     ch,BYTE PTR [eax]
  407043:	sti    
  407044:	ins    DWORD PTR es:[edi],dx
  407045:	adc    ecx,DWORD PTR [ecx-0x37fa9b5f]
  40704b:	mov    ebx,0x9a1e9434
  407050:	aas    
  407051:	cld    
  407052:	fwait
  407053:	or     al,dl
  407055:	sti    
  407056:	fist   WORD PTR [ebp-0x22]
  407059:	jbe    0x407047
  40705b:	inc    edx
  40705c:	clc    
  40705d:	imul   edx,ebx,0xffffffc8
  407060:	pop    ss
  407061:	adc    DWORD PTR [esi-0x2aec71ee],edx
  407067:	add    DWORD PTR [edi],0xffffff95
  40706a:	adc    esi,DWORD PTR [ebx-0x54bb2a25]
  407070:	imul   ebp,DWORD PTR [ebx-0x6bde1925],0xffffffdc
  407077:	fld    QWORD PTR [edx-0x4c4d5586]
  40707d:	mov    ebx,0x105ad0e5
  407082:	jne    0x407046
  407084:	ret    
  407085:	mov    ah,0x63
  407087:	xlat   BYTE PTR ds:[ebx]
  407088:	and    edi,DWORD PTR [ebx]
  40708a:	cmp    ecx,edi
  40708c:	cdq    
  40708d:	xchg   DWORD PTR [edx+0x59],edi
  407090:	call   0xa4e6:0x369cf8f6
  407097:	fld    TBYTE PTR [esi+0x27]
  40709a:	or     eax,0x3998a5d3
  40709f:	ja     0x40705c
  4070a1:	sbb    eax,0x11e0d298
  4070a6:	loopne 0x4070d6
  4070a8:	adc    ch,BYTE PTR [esi+0x508c9af2]
  4070ae:	fisubr DWORD PTR [edx+0x5f]
  4070b1:	inc    ebp
  4070b2:	adc    ebx,DWORD PTR [edi+esi*1]
  4070b5:	pop    ebx
  4070b6:	inc    ebp
  4070b7:	sub    BYTE PTR [esi+ebx*8+0x17b031c6],bh
  4070be:	repz aam 0x82
  4070c1:	mov    ecx,DWORD PTR [esi+ebp*8-0x14]
  4070c5:	adc    ebp,ebx
  4070c7:	int3   
  4070c8:	jbe    0x407072
  4070ca:	ret    
  4070cb:	jecxz  0x407059
  4070cd:	inc    edi
  4070ce:	popf   
  4070cf:	pusha  
  4070d0:	adc    al,0xa0
  4070d2:	cmp    dl,ah
  4070d4:	cmp    esp,DWORD PTR [edx+0x2d]
  4070d7:	lahf   
  4070d8:	and    dl,BYTE PTR [ecx-0xc]
  4070db:	loop   0x407148
  4070dd:	mov    ch,0xcc
  4070df:	xor    al,0x37
  4070e1:	mov    ah,0x3f
  4070e3:	aad    0xe9
  4070e5:	push   esp
  4070e6:	and    al,0xd3
  4070e8:	and    al,0x28
  4070ea:	xchg   esi,eax
  4070eb:	mov    eax,0x21760b05
  4070f0:	in     eax,dx
  4070f1:	repz je 0x40707e
  4070f4:	xor    dl,0x3c
  4070f7:	lds    ecx,FWORD PTR ds:0xae3a96ad
  4070fd:	xor    esp,0x845bc5b8
  407103:	test   dl,dh
  407105:	adc    al,0xf5
  407107:	mov    esp,0x4988b60d
  40710c:	push   0x66
  40710e:	xor    edi,DWORD PTR gs:[esi+0x3a]
  407112:	das    
  407113:	add    esi,0xa
  407116:	jnp    0x407112
  407118:	out    0xf6,al
  40711a:	pop    ebx
  40711b:	mov    esp,0xbe9e26c5
  407120:	cs adc dl,ch
  407123:	fiadd  WORD PTR [ebx-0x4769af88]
  407129:	mov    BYTE PTR [eax+eax*4],ah
  40712c:	mov    ah,0x1e
  40712e:	xlat   BYTE PTR ds:[ebx]
  40712f:	test   BYTE PTR [esp+esi*8-0x418b9e04],bl
  407136:	fnsave [ecx-0x748fa2c8]
  40713c:	inc    edx
  40713d:	or     al,0x50
  40713f:	fnsave [edx-0x867f4cc]
  407145:	push   DWORD PTR [ecx]
  407147:	adc    BYTE PTR [ebp+0x63],ch
  40714a:	retf   
  40714b:	mov    eax,0x232116d2
  407150:	sbb    BYTE PTR [ebp-0x3f],bl
  407153:	jno    0x407159
  407155:	mov    bl,0x53
  407157:	(bad)  
  407158:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407159:	dec    esp
  40715a:	dec    edi
  40715b:	sbb    BYTE PTR ds:0x9db96902,bh
  407161:	arpl   WORD PTR [edi],bp
  407163:	jle    0x4070fc
  407165:	inc    ebx
  407166:	sbb    esi,DWORD PTR [eax-0x4b]
  407169:	pop    ss
  40716a:	and    DWORD PTR [edx+0x3f],esp
  40716d:	sbb    al,0x19
  40716f:	repz addr16 mov al,0x89
  407173:	pop    edi
  407174:	push   edi
  407175:	in     al,0xc6
  407177:	call   FWORD PTR [esp+ecx*2]
  40717a:	loop   0x4071c8
  40717c:	or     DWORD PTR [esi+0x61],edi
  40717f:	inc    ecx
  407180:	add    eax,0xac674638
  407185:	ins    BYTE PTR es:[edi],dx
  407186:	stos   DWORD PTR es:[edi],eax
  407187:	xchg   BYTE PTR [esi+0x1e6d0c94],dh
  40718d:	mov    ah,0x3
  40718f:	in     al,dx
  407190:	push   edi
  407191:	shr    BYTE PTR [edx+0x67],0x9e
  407195:	inc    eax
  407196:	adc    BYTE PTR [edx+0xc],cl
  407199:	bound  edi,QWORD PTR [ebx-0x44]
  40719c:	imul   edx,DWORD PTR [esi+edx*1],0xffffffb2
  4071a0:	mov    al,ds:0x947e502e
  4071a5:	inc    eax
  4071a6:	mov    edx,0x7fecdb88
  4071ab:	fmul   DWORD PTR [ecx-0x36]
  4071ae:	adc    eax,0x585f253c
  4071b3:	adc    DWORD PTR [eax+0x688b5047],edx
  4071b9:	jge    0x407189
  4071bb:	test   DWORD PTR [edx+0x26],ecx
  4071be:	cmp    ecx,DWORD PTR [esp+esi*8+0xf]
  4071c2:	xrelease xchg DWORD PTR [ebp+0x40],edi
  4071c6:	lahf   
  4071c7:	cli    
  4071c8:	push   eax
  4071c9:	inc    eax
  4071ca:	add    eax,0x1d380a51
  4071cf:	inc    eax
  4071d0:	cmp    BYTE PTR [ebx],dh
  4071d2:	and    bl,al
  4071d4:	out    dx,al
  4071d5:	jge    0x407184
  4071d7:	dec    edi
  4071d8:	ja     0x407235
  4071da:	xlat   BYTE PTR ds:[ebx]
  4071db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071dc:	ror    DWORD PTR [ebp-0x68],1
  4071df:	jmp    0x4071a2
  4071e1:	or     BYTE PTR [ebx],cl
  4071e3:	fcomp  DWORD PTR [edx]
  4071e5:	ds and al,0xee
  4071e8:	mov    dh,0x8f
  4071ea:	pop    es
  4071eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4071ec:	test   BYTE PTR [ecx-0xe],0x71
  4071f0:	aam    0xb5
  4071f2:	lahf   
  4071f3:	arpl   WORD PTR [edi-0x9],sp
  4071f6:	xor    cl,BYTE PTR [edi-0xe25bee6]
  4071fc:	xor    BYTE PTR [eax-0x2c],cl
  4071ff:	xor    BYTE PTR [eax+0x24],al
  407202:	pop    ebp
  407203:	int3   
  407204:	iret   
  407205:	int    0x96
  407207:	sub    esi,DWORD PTR [ecx-0x5ba2242b]
  40720d:	fsubr  QWORD PTR [ebp-0x2f30df86]
  407213:	mov    eax,DWORD PTR [eax]
  407215:	test   DWORD PTR [esi+0x11],esi
  407218:	cwde   
  407219:	cmp    bl,ch
  40721b:	ss push 0x4b
  40721e:	pusha  
  40721f:	xor    eax,0xfb80bb46
  407224:	pop    ebx
  407225:	xchg   ebp,eax
  407226:	lock and DWORD PTR [edi],ecx
  407229:	cmp    edx,edx
  40722b:	inc    edx
  40722c:	push   ecx
  40722d:	fld    DWORD PTR [esi]
  40722f:	xor    eax,DWORD PTR [edi+0x16]
  407232:	popa   
  407233:	push   ecx
  407234:	dec    ebx
  407235:	inc    esp
  407236:	jmp    0x830ed4b4
  40723b:	mov    cl,0x87
  40723d:	inc    edx
  40723e:	retf   0x256a
  407241:	sub    eax,0x559817e9
  407246:	in     al,dx
  407247:	or     DWORD PTR [edi],0xc4666d5b
  40724d:	pop    ebx
  40724e:	shl    edi,cl
  407250:	out    dx,eax
  407251:	push   edx
  407252:	xor    DWORD PTR [esi+eiz*2-0x33],esp
  407256:	or     al,0x7c
  407258:	iret   
  407259:	xor    eax,0x3ee005e
  40725e:	js     0x407260
  407260:	inc    eax
  407261:	imul   DWORD PTR [ebp-0x4bca612]
  407267:	sbb    BYTE PTR [edi+0x20000792],ah
  40726d:	and    al,0x52
  40726f:	ret    0xb721
  407272:	pop    esi
  407273:	hlt    
  407274:	cs pusha 
  407276:	adc    dl,BYTE PTR [edx]
  407278:	mov    al,0xa4
  40727a:	pop    ebx
  40727b:	push   0xe4b5ff1c
  407280:	mov    eax,0x7a591246
  407285:	xor    DWORD PTR [ecx],edi
  407287:	inc    edi
  407288:	xor    eax,0xfe4c7b0d
  40728d:	adc    eax,ebp
  40728f:	or     al,0x68
  407291:	pop    esp
  407292:	mov    bl,0x27
  407294:	mov    al,0x18
  407296:	ret    0xca4f
  407299:	sub    ch,ch
  40729b:	sub    eax,0xe888c82b
  4072a0:	test   DWORD PTR [edi-0x3a],ecx
  4072a3:	test   ebp,0xd2c6e964
  4072a9:	pop    ecx
  4072aa:	dec    esi
  4072ab:	jo     0x407318
  4072ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072ae:	fdivr  st(3),st
  4072b0:	push   cs
  4072b1:	mov    ah,0x55
  4072b3:	mov    dh,ah
  4072b5:	sti    
  4072b6:	out    dx,eax
  4072b7:	out    dx,al
  4072b8:	jl     0x40727a
  4072ba:	xchg   edi,eax
  4072bb:	lock inc ebp
  4072bd:	sub    al,0xf
  4072bf:	fild   WORD PTR [eax+0x10060ba3]
  4072c5:	sbb    ebp,ebp
  4072c7:	retf   
  4072c8:	add    eax,0x4f7aa066
  4072cd:	in     al,0xcc
  4072cf:	loope  0x407302
  4072d1:	dec    esp
  4072d2:	out    dx,eax
  4072d3:	mov    bh,0x31
  4072d5:	out    dx,al
  4072d6:	enter  0xe750,0x32
  4072da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072db:	icebp  
  4072dc:	xor    BYTE PTR [edx+0x3c],0x33
  4072e0:	mov    bl,0xe7
  4072e2:	add    BYTE PTR [eax-0x7c],ah
  4072e5:	pop    ds
  4072e6:	fadd   st,st(1)
  4072e8:	fld    TBYTE PTR [esi]
  4072ea:	add    BYTE PTR [edi+0x45],dl
  4072ed:	test   ecx,ebx
  4072ef:	fld    DWORD PTR ds:0x1c17d9ac
  4072f5:	fcomip st,st(1)
  4072f7:	push   0xffffffb6
  4072f9:	and    al,ah
  4072fb:	push   ecx
  4072fc:	aad    0x9f
  4072fe:	int3   
  4072ff:	or     BYTE PTR [edx],ah
  407301:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407302:	aas    
  407303:	mov    BYTE PTR [esi-0x2e],ch
  407306:	retf   0x3340
  407309:	xchg   DWORD PTR [ebx],ebx
  40730b:	aaa    
  40730c:	mov    dh,0xeb
  40730e:	(bad)  
  407310:	std    
  407311:	ror    BYTE PTR [esi+0x7c],1
  407314:	ror    BYTE PTR [ecx+0x6a],0xe5
  407318:	arpl   WORD PTR [edx+0x21],ax
  40731b:	mov    dh,0xda
  40731d:	stos   DWORD PTR es:[edi],eax
  40731e:	mov    ?,WORD PTR [ebx+0x73222cf4]
  407324:	add    bh,BYTE PTR [esi+0x63ecaf68]
  40732a:	mov    esp,0x3ee8d2da
  40732f:	pop    ds
  407330:	enter  0x44a,0xdf
  407334:	push   esi
  407335:	push   ds
  407336:	jp     0x407397
  407338:	jl     0x407387
  40733a:	or     al,0xe3
  40733c:	sbb    esp,DWORD PTR [edi+0x51394476]
  407342:	xor    cl,BYTE PTR [edx-0x29]
  407345:	data16 jecxz 0x4072ca
  407348:	out    0xc6,al
  40734a:	sub    eax,0x498a3222
  40734f:	and    eax,DWORD PTR [edi]
  407351:	cwde   
  407352:	xor    BYTE PTR ds:0x764cc4a7,0x78
  407359:	icebp  
  40735a:	push   eax
  40735b:	pusha  
  40735c:	add    eax,DWORD PTR [esi+eax*2-0x119297ac]
  407363:	fcmovne st,st(6)
  407365:	xchg   esp,eax
  407366:	in     eax,0x5e
  407368:	sbb    eax,0xc448abea
  40736d:	daa    
  40736e:	inc    edx
  40736f:	xchg   BYTE PTR [esi-0x2e],dl
  407372:	adc    eax,0x1ff8bdf9
  407377:	das    
  407378:	mov    fs,WORD PTR [edx+ebp*4-0x78]
  40737c:	dec    ecx
  40737d:	lea    ecx,gs:[eax+0x501b6f32]
  407384:	adc    eax,0xcbcabc73
  407389:	xchg   DWORD PTR [edi],edi
  40738b:	jg     0x407382
  40738d:	cmp    eax,0x71e170b2
  407392:	sub    esp,DWORD PTR [ebx]
  407394:	loope  0x407362
  407396:	mov    ebp,0xa0b5020
  40739b:	outs   dx,BYTE PTR ds:[esi]
  40739c:	mov    BYTE PTR [edx-0x18],dl
  40739f:	outs   dx,BYTE PTR ds:[esi]
  4073a0:	sti    
  4073a1:	and    edi,DWORD PTR [ecx-0x74]
  4073a4:	sub    DWORD PTR [ebx+0x5bd05f5],eax
  4073aa:	cmp    al,0x27
  4073ac:	imul   BYTE PTR gs:[esi]
  4073af:	or     bh,BYTE PTR [ebp-0x36ca3fe1]
  4073b5:	ja     0x4073c2
  4073b7:	popa   
  4073b8:	adc    dh,BYTE PTR [eax+0x17]
  4073bb:	pop    eax
  4073bc:	rcr    BYTE PTR [esi],0x3a
  4073bf:	sbb    cl,BYTE PTR [eax-0x38]
  4073c2:	jl     0x407404
  4073c4:	jo     0x4073ba
  4073c6:	test   eax,0x3eb6128d
  4073cb:	jge    0x4073f4
  4073cd:	or     esi,DWORD PTR [ecx+edi*4]
  4073d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073d1:	jbe    0x40742e
  4073d3:	daa    
  4073d4:	sbb    DWORD PTR [esi-0x6e],esi
  4073d7:	xor    BYTE PTR ds:0x178b37b5,ah
  4073dd:	adc    DWORD PTR [eax],edi
  4073df:	jo     0x4073b9
  4073e1:	shl    dl,cl
  4073e3:	xchg   BYTE PTR [edx-0x3061a3aa],cl
  4073e9:	sub    al,0x11
  4073ec:	inc    edx
  4073ed:	adc    edx,DWORD PTR [esi+0x3a]
  4073f0:	out    dx,eax
  4073f1:	outs   dx,DWORD PTR ds:[esi]
  4073f2:	or     al,0x3d
  4073f4:	test   eax,0xf8b0c090
  4073f9:	lds    eax,FWORD PTR [ebx+esi*4-0x12]
  4073fd:	cli    
  4073fe:	and    ecx,DWORD PTR [esi]
  407400:	add    ch,bl
  407402:	or     ebp,ebx
  407404:	sub    BYTE PTR [edi],ah
  407406:	pop    ebp
  407407:	and    bh,dl
  407409:	stc    
  40740a:	dec    esp
  40740b:	cmp    dh,BYTE PTR [ecx+esi*1-0x60]
  40740f:	fild   DWORD PTR [esi-0x6ed2c38b]
  407415:	or     ebx,DWORD PTR [edi]
  407417:	jecxz  0x407456
  407419:	retf   0x2ff5
  40741c:	dec    esi
  40741d:	hlt    
  40741e:	(bad)  [eax+0x63]
  407421:	cli    
  407422:	out    dx,al
  407423:	and    dl,BYTE PTR [edx-0x76afca2f]
  407429:	imul   ebp,DWORD PTR [edx],0xe263c942
  40742f:	cwde   
  407430:	jg     0x40743d
  407432:	fcmovnb st,st(6)
  407434:	mov    eax,0x801667ef
  407439:	inc    ebp
  40743a:	pop    ds
  40743b:	mov    esp,0x66b803bb
  407440:	sar    ebx,1
  407442:	test   eax,0x97a0c969
  407447:	(bad)  
  407448:	(bad)  
  407449:	xor    eax,0x88ef4bdb
  40744e:	mov    al,0xd1
  407450:	shl    cl,1
  407452:	fcmovnb st,st(5)
  407454:	or     al,0xea
  407456:	sub    edx,esi
  407458:	aam    0xbf
  40745a:	inc    ecx
  40745b:	push   edi
  40745c:	arpl   WORD PTR [esi],ax
  40745e:	add    al,0xda
  407460:	out    0xf8,al
  407462:	sar    BYTE PTR gs:[esi+0xb365551],1
  407469:	fld    TBYTE PTR [eax]
  40746b:	mov    dl,0xce
  40746d:	shl    ch,0x94
  407470:	(bad)  [ecx+0x2ebaa0ea]
  407476:	xor    DWORD PTR [edx],ebx
  407478:	(bad)  
  407479:	cmp    eax,DWORD PTR [edx-0x2afaa404]
  40747f:	scas   eax,DWORD PTR es:[edi]
  407480:	lahf   
  407481:	(bad)  
  407482:	mov    ah,0x5e
  407484:	and    DWORD PTR [edi+0x4dedee14],0x3d135923
  40748e:	aas    
  40748f:	(bad)  
  407490:	mov    dl,0xd1
  407492:	mov    eax,ds:0x62ba8ee4
  407497:	xor    al,0x76
  407499:	hlt    
  40749a:	dec    eax
  40749b:	push   edx
  40749c:	out    0x49,al
  40749e:	ds mov esp,ecx
  4074a1:	mov    edx,0xf87985b6
  4074a6:	jns    0x40742a
  4074a8:	mov    dl,0x1b
  4074aa:	cwde   
  4074ab:	pop    ebp
  4074ac:	and    DWORD PTR [ecx-0xa],ebx
  4074af:	in     eax,0x5a
  4074b1:	inc    ecx
  4074b2:	test   al,0x7c
  4074b4:	xchg   esp,eax
  4074b5:	pop    esp
  4074b6:	fist   DWORD PTR [edi+0x3c73b146]
  4074bc:	cli    
  4074bd:	push   ds
  4074be:	loope  0x4074c9
  4074c0:	int    0x80
  4074c2:	bound  edi,QWORD PTR [ebp-0x5]
  4074c5:	mov    ecx,0x625d6ab6
  4074ca:	int3   
  4074cb:	cld    
  4074cc:	mov    cl,0x4e
  4074ce:	pushf  
  4074cf:	jp     0x4074aa
  4074d1:	adc    esp,DWORD PTR [esi+edx*8]
  4074d4:	nop
  4074d5:	and    BYTE PTR [ebx],ch
  4074d7:	adc    dl,ch
  4074d9:	scas   eax,DWORD PTR es:[edi]
  4074da:	pop    ebx
  4074db:	mov    dh,0xe4
  4074dd:	imul   DWORD PTR [ecx-0x54528096]
  4074e3:	mov    eax,ds:0x280758f5
  4074e8:	pop    edx
  4074e9:	shl    BYTE PTR [ecx],cl
  4074eb:	mov    bl,0x76
  4074ed:	mov    ebx,DWORD PTR [ebx+0x5b]
  4074f0:	and    dl,BYTE PTR [esi-0x112c573a]
  4074f6:	outs   dx,BYTE PTR ds:[esi]
  4074f7:	mov    eax,0x443b315
  4074fc:	mov    al,0x2c
  4074fe:	sahf   
  4074ff:	inc    esi
  407500:	jg     0x4074fc
  407502:	addr16 push edi
  407504:	imul   edx,ebp,0x54f5cfad
  40750a:	lock lds esi,FWORD PTR [esi-0x41]
  40750e:	mov    ecx,0x2af9ded5
  407513:	mov    ecx,0xaed249d1
  407518:	into   
  407519:	xchg   BYTE PTR [edx],ch
  40751b:	arpl   cx,cx
  40751d:	add    bl,0xc4
  407520:	loopne 0x40757c
  407522:	(bad)  
  407523:	enter  0x8fa7,0x96
  407527:	lods   al,BYTE PTR ds:[esi]
  407528:	addr16 mov eax,ds:0x227d
  40752c:	mov    eax,DWORD PTR [edi]
  40752e:	gs push ebp
  407530:	sbb    eax,0x725953fd
  407535:	or     eax,0x4d3310f7
  40753a:	fiadd  DWORD PTR [eax-0x4b]
  40753d:	bound  edx,QWORD PTR [edi-0x13fc98a0]
  407543:	ins    DWORD PTR es:[edi],dx
  407544:	(bad)  
  407545:	stc    
  407546:	cmp    al,0x90
  407548:	pop    ebp
  407549:	js     0x407592
  40754b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40754c:	ins    DWORD PTR es:[edi],dx
  40754d:	mov    bh,al
  40754f:	push   ds
  407550:	xor    bh,dl
  407552:	mov    ds:0x5a2e9ab1,al
  407557:	xor    eax,0xade2527a
  40755c:	stos   BYTE PTR es:[edi],al
  40755d:	cli    
  40755e:	inc    ebx
  40755f:	test   eax,0x11c0176d
  407564:	data16 icebp 
  407566:	mov    edx,DWORD PTR [ebx-0x4a]
  407569:	cmp    eax,0x67574df
  40756e:	cmp    al,0x46
  407570:	ja     0x40756b
  407572:	and    al,0x8c
  407574:	mov    edi,0x5fe0a562
  407579:	jb     0x407545
  40757b:	push   esp
  40757c:	mov    al,0xc4
  40757e:	or     BYTE PTR [edx+0x55],bl
  407581:	out    0x6d,eax
  407583:	sbb    ah,dh
  407585:	sbb    ebp,DWORD PTR [edx]
  407587:	clc    
  407588:	aad    0x1d
  40758a:	adc    al,0xd
  40758c:	sub    esi,ecx
  40758e:	jne    0x407535
  407590:	pop    edi
  407591:	int    0x99
  407593:	push   ebp
  407594:	outs   dx,BYTE PTR ds:[esi]
  407595:	dec    eax
  407596:	cwde   
  407597:	repz aas 
  407599:	gs mov ecx,0x648f108a
  40759f:	add    dh,BYTE PTR [esi-0x26]
  4075a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075a3:	aam    0x5
  4075a5:	lahf   
  4075a6:	jae    0x4075d8
  4075a8:	shl    dl,1
  4075aa:	popf   
  4075ab:	pop    ebp
  4075ac:	sub    DWORD PTR [eax+0x4fa21db5],ecx
  4075b2:	jae    0x40758e
  4075b4:	mov    ds:0x7e6185f7,al
  4075b9:	jno    0x407556
  4075bb:	dec    edi
  4075bc:	js     0x4075c5
  4075be:	outs   dx,DWORD PTR ds:[esi]
  4075bf:	in     eax,0x10
  4075c1:	jmp    0xc9a39fc6
  4075c6:	out    dx,eax
  4075c7:	mov    WORD PTR [esi],es
  4075c9:	iret   
  4075ca:	aad    0x73
  4075cc:	jns    0x40755c
  4075ce:	jnp    0x4f45be3a
  4075d4:	iret   
  4075d5:	and    al,cl
  4075d7:	stos   BYTE PTR es:[edi],al
  4075d8:	lock std 
  4075da:	jp     0x4075fb
  4075dc:	inc    edx
  4075dd:	ss dec ebx
  4075df:	mov    ebp,0xa54d6a9e
  4075e4:	jmp    0xcdd2:0x518a0939
  4075eb:	mov    eax,DWORD PTR [eax+0x575b34b5]
  4075f1:	pop    ds
  4075f2:	es ret 
  4075f4:	hlt    
  4075f5:	test   al,0x2
  4075f7:	push   ds
  4075f8:	inc    edi
  4075f9:	arpl   WORD PTR [ecx],cx
  4075fb:	pop    ss
  4075fc:	pop    ss
  4075fd:	xchg   edx,eax
  4075fe:	sbb    al,0x68
  407600:	ficom  DWORD PTR [edi+0x39]
  407603:	mov    WORD PTR [eax],ds
  407605:	inc    eax
  407606:	test   DWORD PTR [edi-0x6],0x5d7293c
  40760d:	(bad)  
  40760e:	outs   dx,DWORD PTR ds:[esi]
  40760f:	mov    ch,0x72
  407611:	add    BYTE PTR [edi-0x6237b911],bl
  407617:	push   0xffffffcb
  407619:	cli    
  40761a:	cmp    eax,0x7465196d
  40761f:	pusha  
  407620:	retf   0xa84d
  407623:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407624:	int3   
  407625:	dec    ebp
  407626:	mov    eax,ds:0x5f826889
  40762b:	pop    edx
  40762c:	enter  0xd580,0xbf
  407630:	jmp    0xa7e2:0xaaaf5b52
  407637:	btr    DWORD PTR [edx+0x34236f2a],eax
  40763e:	mov    ds:0x8487c42,eax
  407643:	bnd jle 0x40761d
  407646:	jmp    0x4076c1
  407648:	push   cs
  407649:	ja     0x407625
  40764b:	pop    esi
  40764d:	push   ds
  40764e:	dec    edx
  40764f:	push   esp
  407650:	or     al,0x8
  407652:	(bad)  
  407653:	xor    DWORD PTR [eax+edx*4+0x4067a24c],0xffffff91
  40765b:	test   DWORD PTR [ebp+0x38aec9db],ebx
  407661:	push   0xffffffcf
  407663:	cmp    al,0x12
  407665:	(bad)  
  407666:	loop   0x407684
  407668:	cdq    
  407669:	(bad)  
  40766a:	in     al,0x90
  40766c:	mov    ecx,0x2d2b1a88
  407671:	jp     0x407609
  407673:	sbb    ecx,DWORD PTR [esp-0x117eb52]
  40767a:	pop    ss
  40767b:	mov    ecx,edx
  40767d:	cli    
  40767e:	test   eax,0xfec9c5e5
  407683:	ret    
  407684:	inc    ecx
  407685:	dec    esp
  407686:	mov    ah,0x42
  407688:	in     eax,0x98
  40768a:	mov    edx,0x64713534
  40768f:	jne    0x407671
  407691:	outs   dx,DWORD PTR ds:[esi]
  407692:	and    eax,0x1884b9a0
  407697:	push   cs
  407698:	clc    
  407699:	adc    al,0x4c
  40769b:	sti    
  40769c:	push   cs
  40769d:	jg     0x4076ac
  40769f:	pop    edi
  4076a0:	inc    ebp
  4076a1:	imul   esi,DWORD PTR [edx-0x7142dd77],0xffffffbf
  4076a8:	sti    
  4076a9:	pushf  
  4076aa:	push   esp
  4076ab:	shr    BYTE PTR [edi+eiz*8],1
  4076ae:	imul   ebp,DWORD PTR [edi-0x2999379f],0xd1e57afa
  4076b8:	bound  ebx,QWORD PTR [ecx+ecx*2]
  4076bb:	test   eax,0x971e6e15
  4076c0:	xchg   ecx,eax
  4076c1:	pop    ebx
  4076c2:	ja     0x407731
  4076c4:	lahf   
  4076c5:	ret    
  4076c6:	and    al,0x59
  4076c8:	sbb    BYTE PTR [eax],dh
  4076ca:	xchg   ebx,ebx
  4076cc:	pop    ecx
  4076cd:	adc    esp,DWORD PTR [ebp+0x71]
  4076d0:	and    esi,DWORD PTR [ecx]
  4076d2:	add    eax,0xa259b9a7
  4076d7:	add    BYTE PTR ds:0xf9159673,0xf6
  4076de:	jae    0x407675
  4076e0:	(bad)
  4076e4:	mov    bh,0x67
  4076e6:	pop    ss
  4076e7:	add    eax,0x5e01b7a9
  4076ec:	outs   dx,BYTE PTR ds:[esi]
  4076ed:	outs   dx,BYTE PTR ds:[esi]
  4076ee:	das    
  4076ef:	mov    al,0x9c
  4076f1:	dec    edi
  4076f2:	adc    ebp,ecx
  4076f4:	shl    BYTE PTR [ebp-0x4dcaff32],0xaa
  4076fb:	push   cs
  4076fc:	jno    0x4076e9
  4076fe:	or     ebx,esi
  407700:	dec    edi
  407701:	or     DWORD PTR [esi-0x38abe7b4],ecx
  407707:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407708:	sbb    dh,BYTE PTR [ecx+0x6f]
  40770b:	js     0x407787
  40770d:	push   esp
  40770e:	add    DWORD PTR ds:0xcab05cbb,ebp
  407714:	xchg   BYTE PTR [eax],bl
  407716:	int3   
  407717:	out    0xbd,al
  407719:	sbb    al,0x40
  40771b:	jne    0x407725
  40771d:	hlt    
  40771e:	and    BYTE PTR [esi+0x756a5b76],dl
  407724:	sub    ebx,DWORD PTR [edx-0x358352d6]
  40772a:	adc    BYTE PTR [ebp+0x215dfe50],cl
  407730:	or     esi,edx
  407732:	pop    esi
  407733:	pop    edx
  407734:	jmp    0x7167e0d9
  407739:	ret    0xf232
  40773c:	dec    esi
  40773d:	cmp    BYTE PTR [ebx],bl
  40773f:	pushf  
  407740:	popf   
  407741:	push   edx
  407742:	test   al,0x36
  407744:	pop    ss
  407745:	mov    BYTE PTR ds:0x344961c6,bh
  40774b:	je     0x40773d
  40774d:	imul   ebp,DWORD PTR [esi+0x32],0xb7aac39a
  407754:	sahf   
  407755:	loop   0x407710
  407757:	dec    esp
  407758:	pop    eax
  407759:	fwait
  40775a:	adc    esi,ecx
  40775c:	leave  
  40775d:	and    eax,0x93211d3
  407762:	jns    0x40777c
  407764:	jno    0x4076e8
  407766:	cmp    BYTE PTR [ebx+0x5dacaaad],cl
  40776c:	dec    edi
  40776d:	cli    
  40776e:	bound  eax,QWORD PTR ds:0x716c31b3
  407774:	sub    BYTE PTR [eax+0x4247bff8],ch
  40777a:	sub    DWORD PTR [ebx+0x256352ef],esi
  407780:	jge    0x4077a7
  407782:	in     eax,0x4b
  407784:	xlat   BYTE PTR ds:[ebx]
  407785:	loop   0x40775f
  407787:	fiadd  WORD PTR ds:0x21e0bcb2
  40778d:	sub    al,bh
  40778f:	mov    cl,0xfe
  407791:	test   BYTE PTR [ebp-0x55],bl
  407794:	sar    BYTE PTR [edx+0x36],1
  407797:	cmp    dh,BYTE PTR [edi-0x3d]
  40779a:	mov    BYTE PTR [ecx+0x7bafbb5a],cl
  4077a0:	inc    esp
  4077a1:	test   BYTE PTR [ecx+0x3ec7b4e],ah
  4077a7:	jnp    0x40774f
  4077a9:	(bad)  
  4077aa:	popa   
  4077ab:	repz and al,0x4b
  4077ae:	mov    eax,0x47b69f11
  4077b3:	sub    al,0x2d
  4077b5:	ret    
  4077b6:	mov    eax,0x6b7b9e6f
  4077bb:	push   cs
  4077bc:	push   ecx
  4077bd:	sub    ebx,esi
  4077bf:	jp     0x407805
  4077c1:	dec    ebp
  4077c2:	or     DWORD PTR [eax+0x47c01bd4],edx
  4077c8:	(bad)  
  4077c9:	test   BYTE PTR [edx],0xce
  4077cc:	mov    ebx,0x34857b66
  4077d1:	jmp    0x5584:0x47d41080
  4077d8:	daa    
  4077d9:	test   eax,0x4671dd6f
  4077de:	mov    dh,0x17
  4077e0:	fiadd  DWORD PTR [edi+eiz*8]
  4077e3:	loope  0x40783c
  4077e5:	in     eax,0xa2
  4077e7:	sahf   
  4077e8:	mov    dl,0x6a
  4077ea:	and    DWORD PTR [ecx+0x5343c5f0],ebx
  4077f0:	xchg   edi,ecx
  4077f2:	(bad)  
  4077f3:	dec    ebx
  4077f4:	leave  
  4077f5:	icebp  
  4077f6:	bound  ecx,QWORD PTR [edx-0x236763]
  4077fc:	call   0xe96139dd
  407801:	aas    
  407802:	pop    esp
  407803:	add    eax,DWORD PTR [esi+0x40]
  407806:	mov    ebx,0xb9b0c3a6
  40780b:	pop    esp
  40780c:	xchg   eax,eax
  40780e:	and    BYTE PTR [ecx+0x62430498],bh
  407814:	ins    BYTE PTR es:[edi],dx
  407815:	mov    cl,0xe0
  407817:	cmp    DWORD PTR [ebx+0xf],esp
  40781a:	loope  0x407802
  40781c:	mov    ebp,0x7ffd2222
  407821:	cli    
  407822:	inc    esp
  407823:	pop    ss
  407824:	neg    BYTE PTR [esi-0x54]
  407827:	pop    ds
  407828:	ret    0xee65
  40782b:	not    dl
  40782d:	sbb    ebp,DWORD PTR [esi]
  40782f:	sub    al,0x71
  407831:	push   0x143c48d3
  407836:	es ret 
  407838:	fsub   QWORD PTR [eax+ebx*4]
  40783b:	arpl   WORD PTR [ecx+edx*1],si
  40783e:	cmp    esi,ecx
  407840:	les    ecx,FWORD PTR [ebx-0x4f2c2833]
  407846:	out    dx,al
  407847:	mov    ds:0xb8886a14,eax
  40784c:	jo     0x4077d9
  40784e:	fst    QWORD PTR fs:[esi]
  407851:	repz loope 0x407893
  407854:	rcl    edx,1
  407856:	nop
  407857:	ret    
  407858:	clc    
  407859:	xchg   ecx,eax
  40785a:	add    eax,0x5514e982
  40785f:	or     DWORD PTR [eax-0x58472c58],ebp
  407865:	pop    esi
  407866:	pushf  
  407867:	sbb    BYTE PTR [ebx+0x66],ch
  40786a:	jp     0x4078d8
  40786c:	lahf   
  40786d:	xchg   edi,eax
  40786e:	push   ds
  40786f:	shr    bh,cl
  407871:	sbb    eax,0xc2f28aea
  407876:	int    0xcf
  407878:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407879:	pop    ss
  40787a:	inc    edi
  40787b:	lock test BYTE PTR [ebx],cl
  40787e:	sub    bh,BYTE PTR [esi+0x7dafab25]
  407884:	iret   
  407885:	shl    BYTE PTR [edi-0x7f],1
  407888:	or     DWORD PTR [edi-0x19],esi
  40788b:	adc    al,0x11
  40788d:	cld    
  40788e:	pop    eax
  40788f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407890:	mov    es,ecx
  407892:	jnp    0x407867
  407894:	inc    ebx
  407895:	adc    ebp,eax
  407897:	retf   
  407898:	add    edi,DWORD PTR [ebx+esi*4-0x296efa39]
  40789f:	dec    esi
  4078a0:	jb     0x4078c3
  4078a2:	out    dx,eax
  4078a3:	inc    edi
  4078a4:	shr    BYTE PTR [esi-0x57f7f530],cl
  4078aa:	mov    ebx,0x9f148255
  4078af:	fs scas al,BYTE PTR es:[edi]
  4078b1:	dec    esi
  4078b2:	push   ds
  4078b3:	mov    ebp,0xbaced6a3
  4078b8:	inc    eax
  4078b9:	out    0x38,al
  4078bb:	jl     0x40784d
  4078bd:	scas   eax,DWORD PTR es:[edi]
  4078be:	jmp    0x20c9:0x5199e991
  4078c5:	inc    esi
  4078c6:	cmp    eax,0x99e78098
  4078cb:	(bad)  
  4078cc:	cmp    eax,0x601ec813
  4078d1:	mov    es,WORD PTR [ecx+0x7ca72cd8]
  4078d7:	aad    0x6e
  4078d9:	xchg   esp,eax
  4078da:	mov    al,0xa0
  4078dc:	jns    0x4078ef
  4078de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078df:	adc    al,0xd1
  4078e1:	mov    dl,0x26
  4078e3:	ret    0x271
  4078e6:	cmp    ecx,DWORD PTR [esp+edx*4+0x543fc21b]
  4078ed:	cmp    eax,0x9d4624a2
  4078f2:	dec    edx
  4078f3:	jb     0x40792a
  4078f5:	add    DWORD PTR [edi+0x16],eax
  4078f8:	pop    ebx
  4078f9:	mov    ebp,0xdaae18cb
  4078fe:	and    eax,0xf486099a
  407903:	fst    QWORD PTR [edi-0x4eb2c500]
  407909:	sti    
  40790a:	mov    ebp,0x7816a34c
  40790f:	ret    0xe342
  407912:	out    0x38,eax
  407914:	push   ebp
  407915:	xchg   DWORD PTR [ebp+0x46472dc0],edi
  40791b:	lds    eax,FWORD PTR [edi+0xf2c789]
  407921:	sub    esp,DWORD PTR [ebp-0x69ce70a]
  407927:	sbb    eax,0x8a4fcd7d
  40792c:	in     al,0x90
  40792e:	pushf  
  40792f:	or     edx,DWORD PTR [ebp+0x6a]
  407932:	push   esp
  407933:	into   
  407934:	mov    ebp,0x1160d87d
  407939:	jecxz  0x407983
  40793b:	xchg   esp,eax
  40793c:	push   ss
  40793d:	addr16 add al,0x50
  407940:	call   0xc4d08c53
  407945:	in     eax,0x61
  407947:	(bad)  
  407948:	push   ecx
  407949:	ins    DWORD PTR es:[edi],dx
  40794a:	out    dx,al
  40794b:	lock loop 0x407989
  40794e:	pop    ds
  40794f:	or     DWORD PTR [ebp+edx*2+0x53],ebx
  407953:	(bad)  
  407954:	(bad)
  407957:	aaa    
  407958:	or     esi,ebx
  40795a:	(bad)  
  40795b:	imul   eax,DWORD PTR [edi],0xf7519edd
  407961:	pop    esp
  407962:	ror    al,cl
  407964:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407965:	adc    al,BYTE PTR [edi-0x6c5089d1]
  40796b:	cli    
  40796c:	je     0x4079b8
  40796e:	mov    DWORD PTR [edi+eax*2+0x6d97689c],eax
  407975:	inc    edx
  407976:	(bad)  
  407977:	shl    BYTE PTR [esi+0x27e7edb0],0x8
  40797e:	ret    0x4a1c
  407981:	sub    DWORD PTR [edx-0x368f3528],eax
  407987:	push   cs
  407988:	scas   eax,DWORD PTR es:[edi]
  407989:	xchg   esp,eax
  40798a:	mov    eax,ds:0xce5fc54b
  40798f:	xor    eax,0xd24dc328
  407994:	std    
  407995:	or     eax,0x2b541b2d
  40799a:	adc    al,0x67
  40799c:	test   eax,0x3f8d5ebc
  4079a1:	test   eax,0xc00cfab0
  4079a6:	out    dx,eax
  4079a7:	jmp    0xc42b88c4
  4079ac:	stc    
  4079ad:	push   edi
  4079ae:	imul   ebp,DWORD PTR [edi+esi*1-0x27],0x7eb8cbac
  4079b6:	inc    esp
  4079b7:	leave  
  4079b8:	loop   0x4079c8
  4079ba:	dec    ebx
  4079bb:	cld    
  4079bc:	push   eax
  4079bd:	or     eax,DWORD PTR [ecx]
  4079bf:	inc    edi
  4079c0:	xchg   ebp,eax
  4079c1:	mov    bl,0x91
  4079c3:	adc    BYTE PTR [ebx],0x3e
  4079c6:	xor    dh,BYTE PTR [ecx]
  4079c8:	push   edx
  4079c9:	sbb    al,bl
  4079cb:	jns    0x407a47
  4079cd:	ror    BYTE PTR [esi-0x59b5da7a],0x57
  4079d4:	mov    bl,0x30
  4079d6:	je     0x407a20
  4079d8:	cmp    DWORD PTR [eax+0xf],0x22998c12
  4079df:	data16 (bad) 
  4079e2:	inc    edx
  4079e3:	sub    al,0x3a
  4079e5:	mov    esp,0xf0f76f46
  4079ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079eb:	popf   
  4079ec:	adc    bl,BYTE PTR [eax-0x67]
  4079ef:	push   cs
  4079f0:	rcr    BYTE PTR [eax+0x38ec4a03],1
  4079f6:	push   cs
  4079f7:	xchg   edx,eax
  4079f8:	mov    esi,DWORD PTR [ecx+ebx*2]
  4079fb:	stos   DWORD PTR es:[edi],eax
  4079fc:	bound  ecx,QWORD PTR [ecx-0x9]
  4079ff:	sub    bh,bh
  407a01:	cmp    ebp,ebx
  407a03:	in     al,dx
  407a04:	cmp    BYTE PTR [eax+0x2f0b3c33],0x35
  407a0b:	ror    al,cl
  407a0d:	jno    0x4079f4
  407a0f:	sbb    al,0xc8
  407a11:	xchg   edi,eax
  407a12:	aad    0x2b
  407a14:	and    BYTE PTR [eax+esi*8],dl
  407a17:	pop    ecx
  407a18:	add    edi,0x5d
  407a1b:	out    dx,al
  407a1c:	ins    BYTE PTR es:[edi],dx
  407a1d:	jecxz  0x407a09
  407a1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a20:	out    0x2e,eax
  407a22:	push   cs
  407a23:	pop    esp
  407a24:	inc    ebx
  407a25:	push   0xffffffca
  407a27:	shl    DWORD PTR [edi+0x3a0fe2da],1
  407a2d:	push   0x5a
  407a2f:	pop    ss
  407a30:	jns    0x4079cb
  407a32:	hlt    
  407a33:	jecxz  0x4079dc
  407a35:	cmc    
  407a36:	rcr    DWORD PTR [edx-0x77],1
  407a39:	test   esi,ebx
  407a3b:	pop    esp
  407a3c:	aaa    
  407a3d:	mov    al,BYTE PTR [edi]
  407a3f:	call   0x5292dd2d
  407a44:	int3   
  407a45:	cmp    al,0xb7
  407a47:	aas    
  407a48:	data16 jp 0x4079cb
  407a4b:	int    0x10
  407a4d:	pop    edx
  407a4e:	push   ecx
  407a4f:	test   dh,al
  407a51:	(bad)  
  407a52:	cmp    eax,DWORD PTR [ebx+eax*8]
  407a55:	sbb    eax,0x9d4fe292
  407a5a:	jmp    0x46c0:0xd3205716
  407a61:	or     DWORD PTR [edi+0x35fd34dc],ecx
  407a67:	add    eax,0xcaa1025f
  407a6c:	push   ebx
  407a6d:	iret   
  407a6e:	xor    BYTE PTR [ecx+0x6217b8f1],0x2f
  407a75:	xchg   ecx,eax
  407a76:	mov    dh,0x9a
  407a78:	fwait
  407a79:	pop    esp
  407a7a:	shl    BYTE PTR [ebp-0x53cc0ad6],cl
  407a80:	xor    ch,al
  407a82:	jbe    0x407abe
  407a84:	cdq    
  407a85:	mov    edi,ecx
  407a87:	in     al,0x7d
  407a89:	or     esi,ebx
  407a8b:	xchg   DWORD PTR [ebx],ebp
  407a8d:	ret    
  407a8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a8f:	test   al,0xab
  407a91:	jno    0x407aaf
  407a93:	std    
  407a94:	aad    0xf4
  407a96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a97:	popa   
  407a98:	xor    DWORD PTR [ecx],0xb4ad027c
  407a9e:	scas   al,BYTE PTR es:[edi]
  407a9f:	imul   edx,edi,0x2e
  407aa2:	fsubr  DWORD PTR [edx]
  407aa4:	or     BYTE PTR [ebx-0x2dc705a],0xda
  407aab:	dec    ebp
  407aac:	(bad)  
  407aad:	mov    edi,0x351a6fb3
  407ab2:	pop    DWORD PTR [esi-0x4e]
  407ab5:	(bad)  
  407ab6:	pop    ebx
  407ab7:	data16 jo 0x407b0c
  407aba:	pop    edi
  407abb:	int    0xfd
  407abd:	fdivp  st(4),st
  407abf:	sub    eax,ecx
  407ac1:	sub    eax,0x2e040054
  407ac6:	jecxz  0x407af4
  407ac8:	add    BYTE PTR [esi-0x70],dh
  407acb:	dec    ebp
  407acc:	in     al,0x45
  407ace:	pop    edi
  407acf:	cld    
  407ad0:	xor    BYTE PTR [edx-0x568ddacf],bl
  407ad6:	inc    ecx
  407ad7:	push   edx
  407ad8:	or     edx,DWORD PTR [eax+edi*1-0x7d]
  407adc:	and    DWORD PTR [eax-0x9],edx
  407adf:	jne    0x407acb
  407ae1:	test   BYTE PTR [ebx+edi*1-0x74],0x4f
  407ae6:	aas    
  407ae7:	jg     0x407ac9
  407ae9:	sar    BYTE PTR [edi],0x9d
  407aec:	fs dec ebx
  407aee:	cmp    dl,0x4d
  407af1:	adc    DWORD PTR [ebp+0x4],esp
  407af4:	pop    edx
  407af5:	push   ss
  407af6:	test   BYTE PTR [edi+0x2d],cl
  407af9:	popa   
  407afa:	or     eax,0xcacce910
  407aff:	push   cs
  407b00:	in     al,0xd3
  407b02:	sti    
  407b03:	jns    0x407b3d
  407b05:	mov    ds:0x652af564,al
  407b0a:	adc    al,0x27
  407b0c:	jae    0x407b2f
  407b0e:	jb     0x407b78
  407b10:	jp     0x407b20
  407b12:	add    edi,DWORD PTR [eax+0x15]
  407b15:	xchg   edx,eax
  407b16:	or     ebp,edi
  407b18:	shl    DWORD PTR [ebx+0x2e],cl
  407b1b:	jo     0x407b58
  407b1d:	jmp    0x809c:0xce2e1fcf
  407b24:	adc    al,0xe4
  407b26:	popf   
  407b27:	arpl   sp,ax
  407b29:	test   BYTE PTR [ecx-0x22133a33],bh
  407b2f:	sbb    edx,edx
  407b31:	fcmovnbe st,st(7)
  407b33:	adc    BYTE PTR [eax],bl
  407b35:	xor    eax,DWORD PTR [eax-0x4f]
  407b38:	add    BYTE PTR fs:[edi+0x6ed8a44],dh
  407b3f:	leave  
  407b40:	inc    esp
  407b41:	pop    esi
  407b42:	mov    esi,DWORD PTR [eax-0x9]
  407b45:	add    BYTE PTR [eax+edx*4+0x72809155],0xf8
  407b4d:	shl    DWORD PTR [ecx+0x150599cf],1
  407b53:	dec    esp
  407b54:	xor    DWORD PTR [ebx],ecx
  407b56:	mov    esi,ebx
  407b58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b59:	mov    BYTE PTR [eax-0x39fd8310],bh
  407b5f:	pop    esi
  407b60:	sbb    eax,0x6943cefc
  407b65:	out    0xc6,eax
  407b67:	jmp    0xb046:0xd5a0bc6a
  407b6e:	aad    0x6e
  407b70:	inc    ebx
  407b71:	push   ds
  407b72:	ja     0x407b6f
  407b74:	jno    0x407b86
  407b76:	ds push eax
  407b78:	xor    DWORD PTR [esi],eax
  407b7a:	jp     0x407be9
  407b7c:	ja     0x407b4b
  407b7e:	cmp    DWORD PTR [edi+0x52],edi
  407b81:	push   ds
  407b82:	sub    edi,edx
  407b84:	call   DWORD PTR [edi+0x61]
  407b87:	mov    ebx,0x2a348ad3
  407b8c:	cld    
  407b8d:	loope  0x407be6
  407b8f:	sbb    BYTE PTR [edi+ecx*4],bl
  407b92:	inc    edx
  407b93:	retf   
  407b94:	pushf  
  407b95:	pop    ecx
  407b96:	cmp    ebp,DWORD PTR [eax-0x6b4b3620]
  407b9c:	jo     0x407b69
  407b9e:	icebp  
  407b9f:	stos   DWORD PTR es:[edi],eax
  407ba0:	mov    bl,0x8a
  407ba2:	or     ebp,DWORD PTR [edi-0x5b35563c]
  407ba8:	fsub   QWORD PTR [edi-0x174ca1a7]
  407bae:	mov    WORD PTR [esi+0x66],ss
  407bb1:	imul   eax,DWORD PTR [esi],0xa769f96b
  407bb7:	aad    0x7
  407bb9:	jge    0x407ba9
  407bbb:	mov    ds:0x2fc1925,al
  407bc0:	lods   al,BYTE PTR ds:[esi]
  407bc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bc2:	add    al,0x4a
  407bc4:	test   al,0xab
  407bc6:	cli    
  407bc7:	scas   al,BYTE PTR es:[edi]
  407bc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407bc9:	xor    ecx,DWORD PTR [ecx+ecx*8-0x47c4e9cf]
  407bd0:	imul   ebx,DWORD PTR [edx+0x28],0x35b4ae0
  407bd7:	mov    ds:0x424ff687,al
  407bdc:	inc    DWORD PTR [edx-0x67]
  407bdf:	mov    eax,ds:0x21a1252a
  407be4:	loop   0x407bbe
  407be6:	out    0x35,al
  407be8:	pop    esi
  407be9:	jge    0x407b73
  407beb:	repz pop esi
  407bed:	in     eax,0xf6
  407bef:	(bad)  
  407bf0:	push   ebx
  407bf1:	add    BYTE PTR [eax-0x78680c89],bh
  407bf7:	cwde   
  407bf8:	xchg   edi,eax
  407bf9:	jae    0x407bf1
  407bfb:	dec    ecx
  407bfc:	ja     0x407c64
  407bfe:	mov    ebx,0x8390caf7
  407c03:	xchg   edi,eax
  407c04:	jnp    0x407c75
  407c06:	mul    al
  407c08:	sbb    cl,BYTE PTR [eax-0x5f0b291e]
  407c0e:	push   ebp
  407c0f:	inc    edx
  407c10:	ins    BYTE PTR es:[edi],dx
  407c11:	mov    ss,WORD PTR [edi+0x5742cdad]
  407c17:	cmp    BYTE PTR [eax-0x7f],0xff
  407c1b:	jnp    0x407c5f
  407c1d:	sti    
  407c1e:	xchg   ebp,eax
  407c1f:	sar    BYTE PTR [edx+0x52],cl
  407c22:	pusha  
  407c23:	les    ecx,FWORD PTR [esi-0x2983373c]
  407c29:	xor    DWORD PTR [edi+0x32ad9e44],0x27a44e36
  407c33:	push   ss
  407c34:	add    BYTE PTR [ebp+0x56df638d],ch
  407c3a:	push   es
  407c3b:	push   ebp
  407c3c:	call   0xf60e3b3e
  407c41:	sub    eax,0xfaafe68a
  407c46:	out    dx,al
  407c47:	loopne 0x407c7d
  407c49:	sub    dh,BYTE PTR [si]
  407c4c:	sub    bl,cl
  407c4e:	hlt    
  407c4f:	sti    
  407c50:	int3   
  407c51:	popf   
  407c52:	jb     0x407c26
  407c54:	sar    BYTE PTR [di],0xf5
  407c58:	inc    edx
  407c59:	adc    al,0x98
  407c5b:	inc    BYTE PTR [esi+0x37548c87]
  407c61:	icebp  
  407c62:	and    eax,ebx
  407c64:	js     0x407c87
  407c66:	mov    esi,0x4649d496
  407c6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c6c:	mov    eax,0xaa3e976c
  407c71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c72:	xor    eax,0x18c54468
  407c77:	pop    ss
  407c78:	add    bl,dl
  407c7a:	lahf   
  407c7b:	inc    eax
  407c7c:	jo     0x407c50
  407c7e:	sub    DWORD PTR [ebp+0x28154d6d],ecx
  407c84:	sbb    edx,DWORD PTR [ebp-0x21]
  407c87:	hlt    
  407c88:	mov    cl,0x74
  407c8a:	mov    edx,0xe1037f37
  407c8f:	test   al,0x43
  407c91:	(bad)  
  407c93:	sub    ch,bl
  407c95:	call   DWORD PTR [edx-0x56]
  407c98:	ja     0x407c52
  407c9a:	mov    eax,ds:0x8f946fde
  407c9f:	xchg   edi,eax
  407ca0:	push   cs
  407ca1:	loop   0x407ca9
  407ca3:	lock jg 0x407ce1
  407ca6:	mov    dh,0x35
  407ca8:	out    dx,eax
  407ca9:	push   cs
  407caa:	popf   
  407cab:	jmp    0x84f8:0x43b61e36
  407cb2:	addr16 adc bl,dh
  407cb5:	cmp    edi,DWORD PTR es:[esi-0x80]
  407cb9:	push   ds
  407cba:	inc    BYTE PTR [ebx+0x1d]
  407cbd:	pushf  
  407cbe:	push   ecx
  407cbf:	push   ds
  407cc0:	nop
  407cc1:	out    dx,eax
  407cc2:	cdq    
  407cc3:	call   0x48d0375
  407cc8:	(bad)
  407ccb:	jno    0x407cb9
  407ccd:	int3   
  407cce:	fadd   DWORD PTR [ebx-0x25]
  407cd1:	dec    ecx
  407cd2:	(bad)  
  407cd3:	(bad)  
  407cd6:	cmp    dl,cl
  407cd8:	jbe    0x407c75
  407cda:	cmp    ecx,esp
  407cdc:	(bad)  
  407cdd:	retf   0x3bd3
  407ce0:	div    BYTE PTR ds:0x6102214b
  407ce6:	adc    al,0xb6
  407ce8:	mov    bh,0x12
  407cea:	sub    al,0xf
  407cec:	or     BYTE PTR [esp+edx*2-0x11],bl
  407cf0:	outs   dx,DWORD PTR ds:[esi]
  407cf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407cf2:	xor    BYTE PTR [ecx-0x99ebbdd],0x3d
  407cf9:	and    al,0x67
  407cfb:	xchg   ebp,eax
  407cfc:	out    dx,eax
  407cfd:	or     BYTE PTR [eax+0x6d],dh
  407d00:	ss inc edi
  407d02:	xchg   esp,eax
  407d03:	repz cmc 
  407d05:	in     eax,dx
  407d06:	mov    DWORD PTR [edx-0x29],ebp
  407d09:	xchg   esi,eax
  407d0a:	test   eax,0xb64e2e2f
  407d0f:	xchg   ebx,eax
  407d10:	push   esi
  407d11:	retf   
  407d12:	push   esi
  407d13:	pusha  
  407d14:	cdq    
  407d15:	ja     0x407d59
  407d17:	dec    ebx
  407d18:	adc    bh,BYTE PTR [eax-0xba0859f]
  407d1e:	lods   al,BYTE PTR ds:[esi]
  407d1f:	and    esp,esi
  407d21:	pop    edx
  407d22:	sahf   
  407d23:	pushf  
  407d24:	lods   al,BYTE PTR ds:[esi]
  407d25:	cld    
  407d26:	add    eax,0xd93543fa
  407d2b:	mov    ch,0xf0
  407d2d:	(bad)  
  407d2e:	rol    bh,cl
  407d30:	imul   esi,DWORD PTR [edi],0x39
  407d33:	xchg   esp,esi
  407d35:	nop
  407d36:	mov    bl,0xdc
  407d38:	loope  0x407d6e
  407d3a:	sub    DWORD PTR [edi-0x73e4ffb5],esp
  407d40:	sbb    eax,0x99160e06
  407d45:	jo     0x407cfe
  407d47:	call   0x284749cc
  407d4c:	(bad)  [edx+0x1cb34c5f]
  407d52:	fdiv   QWORD PTR [eax-0x70a080c8]
  407d58:	ret    
  407d59:	adc    edx,DWORD PTR [ecx-0x29]
  407d5c:	or     al,0xd3
  407d5e:	ja     0x407d2a
  407d60:	aas    
  407d61:	xchg   ebp,eax
  407d62:	hlt    
  407d63:	inc    ebp
  407d64:	int3   
  407d65:	or     al,0x30
  407d67:	(bad)  
  407d68:	mov    esp,0x6d6e1d75
  407d6d:	adc    edx,edi
  407d6f:	jle    0x407de6
  407d71:	xor    dh,BYTE PTR [ebp+0x7cf520e]
  407d77:	or     eax,0xe9b2a8b8
  407d7c:	xchg   ecx,eax
  407d7d:	std    
  407d7e:	data16 cmp BYTE PTR ds:[ecx+0x7da68d45],ah
  407d86:	icebp  
  407d87:	out    0x7b,al
  407d89:	mov    esi,0xc2abf6e8
  407d8e:	mov    cl,0xf1
  407d90:	pop    ebx
  407d91:	or     esi,DWORD PTR [eax+0x49]
  407d94:	fnstsw WORD PTR [esi+0xf]
  407d97:	jmp    0xace6:0x77601e0c
  407d9e:	sbb    BYTE PTR [ebx+0x426f8c1c],al
  407da4:	out    dx,eax
  407da5:	leave  
  407da6:	add    eax,0x37f5c0a7
  407dab:	lods   al,BYTE PTR ds:[esi]
  407dac:	xchg   ebp,eax
  407dad:	or     DWORD PTR [edx],ebp
  407daf:	out    0x2e,eax
  407db1:	jno    0x407dec
  407db3:	sti    
  407db4:	shl    ebp,0x6b
  407db7:	inc    eax
  407db8:	xchg   ebp,eax
  407db9:	adc    ch,dh
  407dbb:	inc    eax
  407dbc:	dec    esp
  407dbd:	imul   edx,DWORD PTR [edx+0x440e8dd1],0x653d7761
  407dc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407dc8:	popf   
  407dc9:	push   ss
  407dca:	test   al,0xb7
  407dcc:	cwde   
  407dcd:	(bad)  
  407dce:	dec    ecx
  407dcf:	fwait
  407dd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407dd1:	js     0x407e17
  407dd3:	or     al,0x8e
  407dd5:	retf   
  407dd6:	or     eax,0xb4d1d00b
  407ddb:	cmp    ch,BYTE PTR [edx+0x2f5ec642]
  407de1:	ins    DWORD PTR es:[edi],dx
  407de2:	adc    DWORD PTR [eax+0x53b216fc],esi
  407de8:	lods   eax,DWORD PTR ds:[esi]
  407de9:	(bad)  
  407dea:	sub    al,0x4c
  407dec:	push   es
  407ded:	or     eax,0x3a680a1f
  407df2:	jbe    0x407e49
  407df4:	popa   
  407df5:	jp     0x407dde
  407df7:	xchg   edx,eax
  407df8:	call   0x31bb86fb
  407dfd:	xor    ebp,DWORD PTR [esi]
  407dff:	mov    edx,0x2c365218
  407e04:	xor    cl,dl
  407e06:	sbb    eax,0x94440d2e
  407e0b:	fs fwait
  407e0d:	div    DWORD PTR [esi-0x6a]
  407e10:	cwde   
  407e11:	mov    esi,0x125b4da8
  407e16:	cwde   
  407e17:	pushf  
  407e18:	sti    
  407e19:	inc    esp
  407e1a:	jno    0x407e4a
  407e1c:	dec    esi
  407e1d:	out    dx,al
  407e1e:	or     al,0xd1
  407e20:	sbb    BYTE PTR [ecx-0xb],bh
  407e23:	sbb    edi,DWORD PTR [ecx-0x37]
  407e26:	in     eax,dx
  407e27:	clc    
  407e28:	dec    edx
  407e29:	push   edi
  407e2a:	jns    0x407e1b
  407e2c:	ficomp DWORD PTR ds:0xe19cdc41
  407e32:	pop    ebp
  407e33:	xchg   edi,eax
  407e34:	jmp    0xe2b1:0xb8cca663
  407e3b:	push   0x9b293292
  407e40:	stos   DWORD PTR es:[edi],eax
  407e41:	outs   dx,DWORD PTR ds:[esi]
  407e42:	aas    
  407e43:	xor    eax,0x40925d05
  407e48:	repz pop esp
  407e4a:	jmp    0x1afd1371
  407e4f:	jnp    0x407e5c
  407e51:	div    BYTE PTR [esi+eiz*8+0x1ee02e29]
  407e58:	dec    edi
  407e59:	jp     0x407e1c
  407e5b:	mov    WORD PTR [edx],fs
  407e5d:	ins    DWORD PTR es:[edi],dx
  407e5e:	adc    BYTE PTR [ebp+0x1d],ah
  407e61:	dec    DWORD PTR [esi-0x45]
  407e64:	dec    ebx
  407e65:	repz and al,BYTE PTR [ecx-0x7]
  407e69:	pop    ebp
  407e6a:	xlat   BYTE PTR ds:[ebx]
  407e6b:	sbb    eax,0x6ca5ec10
  407e70:	fsubr  QWORD PTR [ecx+0x66]
  407e73:	idiv   bh
  407e75:	sahf   
  407e76:	ins    BYTE PTR es:[edi],dx
  407e77:	xchg   ebx,eax
  407e78:	bound  edx,QWORD PTR [ecx-0x403b28af]
  407e7e:	push   0x7b3b425
  407e83:	xor    ebp,DWORD PTR [edi+0x16]
  407e86:	or     al,0x69
  407e88:	pop    esi
  407e89:	pushf  
  407e8a:	in     al,0xc5
  407e8c:	bound  ebp,QWORD PTR [si-0x90e]
  407e91:	rcl    DWORD PTR [edx-0x442f35a6],1
  407e97:	iret   
  407e98:	ret    
  407e99:	dec    edi
  407e9a:	jmp    0x407e26
  407e9c:	gs sbb al,0xc6
  407e9f:	xchg   esi,eax
  407ea0:	or     BYTE PTR [esi-0x18],dl
  407ea3:	fwait
  407ea4:	sub    al,0x5e
  407ea6:	sbb    BYTE PTR [edx],al
  407ea8:	into   
  407ea9:	xchg   edi,eax
  407eaa:	lea    edi,[edi]
  407eac:	add    eax,0x3c9d3381
  407eb1:	sti    
  407eb2:	out    0xfe,eax
  407eb4:	ret    0xd287
  407eb7:	xor    DWORD PTR [bx+si],esp
  407eba:	std    
  407ebb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ebc:	pop    ecx
  407ebd:	jb     0x407e44
  407ebf:	xor    eax,DWORD PTR [edi+0x63]
  407ec2:	pop    ss
  407ec3:	push   edx
  407ec4:	sahf   
  407ec5:	and    al,dl
  407ec7:	les    esp,FWORD PTR [ecx-0x43]
  407eca:	ror    BYTE PTR [ebp+0x6d],cl
  407ecd:	popa   
  407ece:	ffreep st(7)
  407ed0:	dec    esi
  407ed1:	ins    DWORD PTR es:[edi],dx
  407ed2:	mov    bh,0xe7
  407ed4:	int    0xcb
  407ed6:	jle    0x407f3e
  407ed8:	sbb    edi,eax
  407eda:	jbe    0x407e68
  407edc:	sbb    eax,0x6d8be7e6
  407ee1:	cmp    edx,DWORD PTR [esi]
  407ee3:	push   0x6d3b3bbf
  407ee8:	test   DWORD PTR [eax+0x40],0x50209dde
  407eef:	xchg   esp,eax
  407ef0:	(bad)  
  407ef1:	(bad)  [esi]
  407ef3:	arpl   WORD PTR [edx+0x831806b],dx
  407ef9:	out    0xd1,al
  407efb:	dec    ebx
  407efc:	pop    esi
  407efd:	clc    
  407efe:	(bad)  
  407f00:	push   ecx
  407f01:	lods   eax,DWORD PTR ds:[esi]
  407f02:	fs in  al,0x60
  407f05:	fdiv   DWORD PTR [edi+ebx*1+0x5a3dc621]
  407f0c:	jl     0x407f6a
  407f0e:	clc    
  407f0f:	ret    
  407f10:	fstp   TBYTE PTR [edi]
  407f12:	dec    ecx
  407f13:	mov    al,0x9e
  407f15:	xchg   esi,eax
  407f16:	(bad)  
  407f17:	test   eax,0xf421595a
  407f1c:	loop   0x407f05
  407f1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f1f:	cmp    al,0x32
  407f21:	test   DWORD PTR [edx],ebp
  407f23:	cwde   
  407f24:	xchg   edi,eax
  407f25:	sub    DWORD PTR [eax],0xffffff97
  407f28:	test   BYTE PTR [ecx+0x7e],cl
  407f2b:	gs out dx,eax
  407f2d:	or     edi,DWORD PTR [esi]
  407f2f:	mov    ds:0x12084cb,eax
  407f34:	inc    eax
  407f35:	pop    eax
  407f37:	xchg   ebp,eax
  407f38:	call   0xc6c4:0xd4c008c5
  407f3f:	mov    bh,0x7e
  407f41:	sub    eax,0xd699ace5
  407f46:	arpl   di,dx
  407f48:	inc    esi
  407f49:	jmp    0xb55e9b49
  407f4e:	ret    
  407f4f:	pxor   mm0,mm7
  407f52:	jmp    0x55430b3c
  407f57:	ds jns 0x407f30
  407f5a:	add    edx,DWORD PTR [edi+0x66aa762c]
  407f60:	popa   
  407f61:	fisubr WORD PTR [edx]
  407f63:	inc    esi
  407f64:	jns    0x407f93
  407f66:	dec    edx
  407f67:	(bad)  [esi-0x1b647326]
  407f6d:	sub    ebp,ebp
  407f6f:	fild   QWORD PTR [esi+0x170e2700]
  407f75:	outs   dx,DWORD PTR ds:[esi]
  407f76:	mov    bl,BYTE PTR [ecx+0x50]
  407f79:	or     eax,0x38f3e500
  407f7e:	mov    bh,0xfe
  407f80:	xlat   BYTE PTR ds:[ebx]
  407f81:	xchg   edi,eax
  407f82:	loop   0x407f0c
  407f84:	mov    ebp,0xbcf5700
  407f89:	in     al,0xc6
  407f8b:	push   0xffffff9c
  407f8d:	sub    edi,ebp
  407f8f:	fst    DWORD PTR [eax+0x7e65edea]
  407f95:	scas   eax,DWORD PTR es:[edi]
  407f96:	jmp    0xcfd9:0x87ea60b0
  407f9d:	gs add al,0xa6
  407fa0:	sub    al,0xa4
  407fa2:	(bad)  
  407fa3:	into   
  407fa4:	xor    al,0x12
  407fa6:	rol    DWORD PTR [esp+eiz*8-0x40cf4d5],0x68
  407fae:	add    edi,DWORD PTR ds:0x9fad16d9
  407fb4:	adc    cl,BYTE PTR [eax]
  407fb6:	jge    0x407f7b
  407fb8:	rcr    BYTE PTR [ecx-0x39],0xf
  407fbc:	mov    ds:0x4fe62d91,eax
  407fc1:	sahf   
  407fc2:	sub    DWORD PTR [ebx+0x5951c653],ebx
  407fc8:	add    al,0xc1
  407fca:	jle    0x407f64
  407fcc:	int    0xe6
  407fce:	(bad)  
  407fcf:	push   ebp
  407fd0:	loopne 0x407ff1
  407fd2:	inc    BYTE PTR [esi-0x61]
  407fd5:	iret   
  407fd6:	cmp    dh,BYTE PTR [eax-0x25]
  407fd9:	jnp    0x407f5c
  407fdb:	aas    
  407fdc:	push   ss
  407fdd:	lods   al,BYTE PTR ds:[esi]
  407fde:	push   ebp
  407fdf:	addr16 out dx,eax
  407fe1:	gs dec eax
  407fe3:	ins    DWORD PTR es:[edi],dx
  407fe4:	mov    ds:0xeb83039a,eax
  407fe9:	inc    esp
  407fea:	arpl   WORD PTR [esi],si
  407fec:	inc    ebx
  407fed:	test   al,0xbc
  407fef:	dec    edx
  407ff0:	popf   
  407ff1:	aaa    
  407ff2:	mov    DWORD PTR [esp+esi*8+0x74a0c1d8],edx
  407ff9:	ins    DWORD PTR es:[edi],dx
  407ffa:	aas    
  407ffb:	pop    ecx
  407ffc:	shr    DWORD PTR [ecx+0x61e3911b],1
  408002:	hlt    
  408003:	enter  0xfbb3,0xce
  408007:	in     eax,0xe8
  408009:	push   edx
  40800a:	sbb    eax,DWORD PTR [edi]
  40800c:	(bad)  
  40800d:	mov    al,cl
  40800f:	mov    ds:0x5980bba8,eax
  408014:	mov    ah,0xf8
  408016:	in     eax,0x1e
  408018:	icebp  
  408019:	sahf   
  40801a:	lock pushf 
  40801c:	xor    DWORD PTR [eax+esi*8-0x3c],esp
  408020:	jg     0x407fcc
  408022:	dec    eax
  408023:	stos   BYTE PTR es:[edi],al
  408024:	mov    ch,0x3e
  408026:	test   BYTE PTR [ecx],0x10
  408029:	int3   
  40802a:	push   ecx
  40802b:	fsubr  DWORD PTR [edx+ebp*4+0x4f88d33e]
  408032:	push   esi
  408033:	shl    ebp,cl
  408035:	ins    BYTE PTR es:[edi],dx
  408036:	hlt    
  408037:	aad    0xae
  408039:	outs   dx,DWORD PTR ds:[esi]
  40803a:	in     al,dx
  40803b:	jo     0x40803d
  40803d:	or     eax,0x20573625
  408042:	data16 or BYTE PTR ds:0xc2d0a57c,0x79
  40804a:	jmp    0xd8ebe84b
  40804f:	jb     0x408094
  408051:	jg     0x40803b
  408053:	je     0x4080bc
  408055:	aad    0xcc
  408057:	pushf  
  408058:	imul   DWORD PTR [eax-0x1ca548cb]
  40805e:	ror    DWORD PTR [ebx+edx*8-0x6f],cl
  408062:	(bad)  
  408063:	mov    WORD PTR fs:[esi],di
  408067:	xchg   edi,eax
  408068:	or     dl,BYTE PTR [eax-0x18]
  40806b:	xchg   esi,eax
  40806c:	jle    0x408046
  40806e:	xchg   esi,eax
  40806f:	mov    cl,0x8c
  408071:	(bad)  
  408072:	and    eax,0x7bdf6e5b
  408077:	mov    al,ds:0xebbcc5c8
  40807c:	jae    0x4080e4
  40807e:	js     0x4080d4
  408080:	mov    esi,?
  408082:	repz scas al,BYTE PTR es:[edi]
  408084:	mov    esi,0xf7f84a7c
  408089:	sub    BYTE PTR [edi+ecx*4-0x13ddcdd9],0xec
  408091:	jnp    0x4080d0
  408093:	ret    
  408094:	cwde   
  408095:	push   0x64
  408097:	or     edx,edx
  408099:	xor    DWORD PTR [eax],esp
  40809b:	dec    edi
  40809c:	and    ah,BYTE PTR [ebx+0x38]
  40809f:	pop    es
  4080a0:	jns    0x4080ac
  4080a2:	pop    edx
  4080a3:	or     BYTE PTR [ebx],0xc6
  4080a6:	call   0xa2b1dad4
  4080ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080ac:	outs   dx,DWORD PTR ds:[esi]
  4080ad:	dec    ebx
  4080ae:	xor    BYTE PTR [eax+esi*8+0x39],dh
  4080b2:	mov    esi,0xbdd7a9e9
  4080b7:	jae    0x40811f
  4080b9:	add    DWORD PTR [ebp+0x20e84da7],edi
  4080bf:	out    dx,eax
  4080c0:	xcrypt-ecb (bad)
  4080c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080c2:	iret   
  4080c3:	pop    ebx
  4080c4:	fist   WORD PTR [ecx+0x64]
  4080c7:	xchg   DWORD PTR [edi],esp
  4080c9:	scas   eax,DWORD PTR es:[edi]
  4080ca:	rol    DWORD PTR [bp-0x70e3],1
  4080cf:	or     eax,0xdfa3c0bb
  4080d4:	int    0xf
  4080d6:	cmp    al,0xc
  4080d8:	push   ss
  4080d9:	(bad)  [edx*4-0x311c3a64]
  4080e0:	jbe    0x4080e3
  4080e2:	push   es
  4080e3:	jns    0x4080bc
  4080e5:	imul   ebp,DWORD PTR [eax-0x34],0xffffffa8
  4080e9:	ins    DWORD PTR es:[edi],dx
  4080ea:	neg    DWORD PTR [eax]
  4080ec:	sti    
  4080ed:	pop    ebx
  4080ee:	fst    QWORD PTR [edi-0x7f748449]
  4080f4:	shl    esp,cl
  4080f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080f7:	jns    0x408131
  4080f9:	daa    
  4080fa:	aad    0xb7
  4080fc:	inc    ebp
  4080fd:	mov    esi,0x7550b7b2
  408102:	imul   edx,DWORD PTR [edi+edx*8+0x7effcf9c],0xf55a8e1b
  40810d:	shr    DWORD PTR [ebx],1
  40810f:	test   esp,0xa9f1b6a6
  408115:	mov    cl,0x8f
  408117:	addr16 out 0xd8,eax
  40811a:	fwait
  40811b:	(bad)  
  40811c:	and    al,0xcf
  40811e:	cwde   
  40811f:	add    BYTE PTR [edx+edx*4-0x49],ah
  408123:	adc    DWORD PTR [edi-0x2a],ebp
  408126:	shr    BYTE PTR [ecx-0x68fc261f],1
  40812c:	ficomp DWORD PTR [ebp+0x16]
  40812f:	xchg   esi,eax
  408130:	dec    esp
  408131:	adc    eax,0x3eb555c
  408136:	mov    ch,0xbf
  408138:	clc    
  408139:	das    
  40813a:	jo     0x4080fe
  40813c:	sub    BYTE PTR [ebx+0x289826f0],dl
  408142:	neg    BYTE PTR [esi+0x13b4c9de]
  408148:	push   ds
  408149:	dec    ebx
  40814a:	cmp    al,0x69
  40814c:	je     0x40819b
  40814e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40814f:	xchg   edx,eax
  408150:	xchg   edi,eax
  408151:	or     eax,0xbba114c4
  408156:	sbb    DWORD PTR [eax+0x7e94f488],esi
  40815c:	jnp    0x40818e
  40815e:	mov    al,0x6e
  408160:	mov    al,0x55
  408162:	pop    ebx
  408163:	dec    edi
  408164:	pop    edi
  408165:	shr    BYTE PTR [ebx+eiz*4-0x5baacc54],1
  40816c:	scas   al,BYTE PTR es:[edi]
  40816d:	gs push ebp
  40816f:	push   edx
  408170:	pop    ss
  408171:	or     dh,ch
  408173:	sbb    DWORD PTR [edi+ecx*2],esi
  408176:	sub    ch,BYTE PTR ds:0x8ba679f9
  40817c:	mov    dh,0x71
  40817e:	in     eax,dx
  40817f:	add    ah,ah
  408181:	stos   BYTE PTR es:[edi],al
  408182:	inc    ebx
  408183:	xchg   ebp,eax
  408184:	clc    
  408185:	inc    edx
  408186:	sbb    DWORD PTR [esp+ebp*1],ebp
  408189:	inc    eax
  40818a:	dec    ecx
  40818b:	leave  
  40818c:	out    0x83,eax
  40818e:	(bad)  
  40818f:	mov    ebp,0x10757f29
  408194:	loope  0x4081e3
  408196:	call   0x87ba:0x1eb96285
  40819d:	into   
  40819e:	xor    DWORD PTR ds:0x42801c,edi
  4081a4:	mov    edi,0x155c
  4081a9:	sub    edx,edi
  4081ab:	and    DWORD PTR ds:0x42901c,0x60c1
  4081b5:	mov    ecx,DWORD PTR [ebp-0x4]
  4081b8:	xor    ecx,ebx
  4081ba:	and    DWORD PTR ds:0x42b014,0x0
  4081c4:	mov    esi,DWORD PTR ds:0x42b014
  4081ca:	inc    esi
  4081cb:	mov    DWORD PTR ds:0x42b014,esi
  4081d1:	cmp    DWORD PTR ds:0x42b014,0x10
  4081d8:	jne    0x4081e9
  4081de:	push   0x4234f2
  4081e3:	call   DWORD PTR ds:0x424044
  4081e9:	cmp    DWORD PTR ds:0x42b014,0xf
  4081f0:	jne    0x408203
  4081f6:	mov    esi,DWORD PTR ds:0x42b014
  4081fc:	inc    esi
  4081fd:	mov    DWORD PTR ds:0x42b014,esi
  408203:	cmp    DWORD PTR ds:0x42b014,0x1b
  40820a:	jb     0x4081c4
  408210:	add    ecx,eax
  408212:	sbb    esi,0x766b
  408218:	mov    DWORD PTR [ebp-0x8],ecx
  40821b:	and    esi,0x21f
  408221:	mov    ecx,DWORD PTR [ebp-0x14]
  408224:	mov    DWORD PTR ds:0x42b000,0x19
  40822e:	cmp    DWORD PTR ds:0x42b000,0x0
  408235:	je     0x40828f
  40823b:	cmp    DWORD PTR ds:0x42b000,0x4
  408242:	jne    0x40825b
  408248:	push   DWORD PTR [ebp-0x1c]
  40824b:	push   0x429018
  408250:	push   0x42375e
  408255:	call   DWORD PTR ds:0x424048
  40825b:	cmp    DWORD PTR ds:0x42b000,0x5
  408262:	jne    0x408275
  408268:	mov    esi,DWORD PTR ds:0x42b000
  40826e:	dec    esi
  40826f:	mov    DWORD PTR ds:0x42b000,esi
  408275:	xor    esi,esi
  408277:	add    esi,DWORD PTR ds:0x42b000
  40827d:	dec    esi
  40827e:	mov    DWORD PTR ds:0x42b000,esi
  408284:	jmp    0x40822e
  408289:	and    esi,0x686c
  40828f:	xor    ecx,ebx
  408291:	add    ecx,eax
  408293:	mov    DWORD PTR [ebp-0x24],ecx
  408296:	adc    esi,ecx
  408298:	mov    ecx,DWORD PTR [ebp-0x4]
  40829b:	and    DWORD PTR ds:0x428014,0x0
  4082a5:	jmp    0x4082b7
  4082aa:	mov    esi,DWORD PTR ds:0x428014
  4082b0:	inc    esi
  4082b1:	mov    DWORD PTR ds:0x428014,esi
  4082b7:	cmp    DWORD PTR ds:0x428014,0x14
  4082be:	jae    0x4082ea
  4082c4:	cmp    DWORD PTR ds:0x428014,0x1d
  4082cb:	jne    0x4082df
  4082d1:	push   0x42b01c
  4082d6:	push   DWORD PTR [ebp-0xc]
  4082d9:	call   DWORD PTR ds:0x424014
  4082df:	jmp    0x4082aa
  4082e4:	xor    DWORD PTR ds:0x428018,ecx
  4082ea:	xor    ecx,ebx
  4082ec:	add    ecx,eax
  4082ee:	add    DWORD PTR ds:0x428004,edx
  4082f4:	mov    DWORD PTR [ebp-0x30],ecx
  4082f7:	adc    DWORD PTR ds:0x42b01c,edi
  4082fd:	mov    esi,DWORD PTR [ebp-0x4]
  408300:	xor    DWORD PTR ds:0x42800c,0x2f0f
  40830a:	xor    esi,ebx
  40830c:	and    DWORD PTR ds:0x429018,0x0
  408316:	mov    ecx,DWORD PTR ds:0x429018
  40831c:	inc    ecx
  40831d:	mov    DWORD PTR ds:0x429018,ecx
  408323:	cmp    DWORD PTR ds:0x429018,0x13
  40832a:	jne    0x408358
  408330:	push   DWORD PTR [ebp-0x18]
  408333:	push   0x42b018
  408338:	push   0x8bc1
  40833d:	push   0x42a018
  408342:	push   0x81c2
  408347:	push   DWORD PTR [ebp-0x18]
  40834a:	push   0x8630
  40834f:	push   DWORD PTR [ebp-0x28]
  408352:	call   DWORD PTR ds:0x424018
  408358:	cmp    DWORD PTR ds:0x429018,0x10
  40835f:	jb     0x408316
  408365:	movzx  ecx,WORD PTR ds:0x429008
  40836c:	sub    ecx,DWORD PTR ds:0x42a010
  408372:	mov    DWORD PTR ds:0x429008,ecx
  408378:	add    esi,eax
  40837a:	mov    ecx,DWORD PTR [ebp-0x24]
  40837d:	sub    ecx,eax
  40837f:	lea    edx,[esi-0x3272db]
  408385:	xor    DWORD PTR ds:0x428008,0x428000
  40838f:	xor    ecx,ebx
  408391:	sub    DWORD PTR ds:0x42c01c,0x42b01c
  40839b:	xor    edx,ebx
  40839d:	cmp    edx,ecx
  40839f:	mov    DWORD PTR ds:0x428000,0x76f
  4083a9:	je     0x408631
  4083af:	xor    DWORD PTR ds:0x42c010,edx
  4083b5:	mov    ecx,DWORD PTR [ebp-0x4]
  4083b8:	xor    ecx,ebx
  4083ba:	or     DWORD PTR ds:0x429014,0x42a01c
  4083c4:	add    ecx,eax
  4083c6:	cmp    esi,ecx
  4083c8:	mov    DWORD PTR ds:0x42a01c,0x739d
  4083d2:	jne    0x40860e
  4083d8:	add    DWORD PTR ds:0x42a00c,0x429004
  4083e2:	push   DWORD PTR [ebp+0x8]
  4083e5:	call   0x408a39
  4083ea:	mov    DWORD PTR [ebp-0x18],eax
  4083ed:	mov    eax,DWORD PTR [ebp-0x4]
  4083f0:	mov    DWORD PTR ds:0x42c00c,0x1d
  4083fa:	cmp    DWORD PTR ds:0x42c00c,0x0
  408401:	je     0x408435
  408407:	cmp    DWORD PTR ds:0x42c00c,0x21
  40840e:	jne    0x40841d
  408414:	push   DWORD PTR [ebp-0xc]
  408417:	call   DWORD PTR ds:0x42401c
  40841d:	mov    edi,DWORD PTR ds:0x42c00c
  408423:	dec    edi
  408424:	mov    DWORD PTR ds:0x42c00c,edi
  40842a:	jmp    0x4083fa
  40842f:	adc    ecx,DWORD PTR ds:0x428008
  408435:	mov    ecx,DWORD PTR [ebp-0x18]
  408438:	and    DWORD PTR ds:0x42b01c,0x0
  408442:	mov    edi,DWORD PTR ds:0x42b01c
  408448:	inc    edi
  408449:	mov    DWORD PTR ds:0x42b01c,edi
  40844f:	cmp    DWORD PTR ds:0x42b01c,0x23
  408456:	jne    0x408468
  40845c:	push   DWORD PTR [ebp-0x14]
  40845f:	push   DWORD PTR [ebp-0x28]
  408462:	call   DWORD PTR ds:0x424020
  408468:	cmp    DWORD PTR ds:0x42b01c,0x19
  40846f:	jb     0x408442
  408475:	xor    eax,ebx
  408477:	add    DWORD PTR ds:0x429018,0x397c
  408481:	mov    edi,0x3272db
  408486:	sub    DWORD PTR ds:0x428020,0x386b
  408490:	add    eax,edi
  408492:	mov    DWORD PTR ds:0x42900c,0x67dc
  40849c:	cmp    ecx,eax
  40849e:	mov    DWORD PTR ds:0x42c00c,0x661b
  4084a8:	je     0x4086a1
  4084ae:	push   DWORD PTR [ebp-0x18]
  4084b1:	sub    DWORD PTR ds:0x42800c,0x42a014
  4084bb:	push   DWORD PTR [ebp+0x8]
  4084be:	and    DWORD PTR ds:0x42b000,0x429010
  4084c8:	call   0x419246
  4084cd:	sub    ecx,DWORD PTR ds:0x42a00c
  4084d3:	mov    DWORD PTR [ebp-0x18],eax
  4084d6:	xor    eax,eax
  4084d8:	xor    eax,DWORD PTR ds:0x42a01c
  4084de:	xor    DWORD PTR ds:0x428018,eax
  4084e4:	mov    eax,DWORD PTR [ebp-0x4]
  4084e7:	mov    ecx,DWORD PTR [ebp-0x18]
  4084ea:	xor    eax,ebx
  4084ec:	add    eax,edi
  4084ee:	cmp    ecx,eax
  4084f0:	je     0x4086a1
  4084f6:	mov    ecx,DWORD PTR ds:0x429010
  4084fc:	add    DWORD PTR ds:0x42a010,ecx
  408502:	mov    eax,DWORD PTR [ebp-0x18]
  408505:	and    DWORD PTR ds:0x42a008,0x0
  40850f:	jmp    0x408521
  408514:	mov    ecx,DWORD PTR ds:0x42a008
  40851a:	inc    ecx
  40851b:	mov    DWORD PTR ds:0x42a008,ecx
  408521:	cmp    DWORD PTR ds:0x42a008,0x14
  408528:	jae    0x4085ac
  40852e:	cmp    DWORD PTR ds:0x42a008,0x1f
  408535:	jne    0x408563
  40853b:	push   0x42b010
  408540:	push   DWORD PTR [ebp-0x10]
  408543:	push   0x4f72
  408548:	push   0x42900c
  40854d:	push   DWORD PTR [ebp-0x24]
  408550:	push   0x42367e
  408555:	push   DWORD PTR [ebp-0x1c]
  408558:	push   0x3544
  40855d:	call   DWORD PTR ds:0x424024
  408563:	jmp    0x408514
  408568:	and    DWORD PTR ds:0x428020,0x0
  408572:	mov    ecx,DWORD PTR ds:0x428020
  408578:	inc    ecx
  408579:	mov    DWORD PTR ds:0x428020,ecx
  40857f:	cmp    DWORD PTR ds:0x428020,0x1a
  408586:	jne    0x40859f
  40858c:	push   DWORD PTR [ebp-0x1c]
  40858f:	push   0x561b
  408594:	push   0x3276
  408599:	call   DWORD PTR ds:0x424028
  40859f:	cmp    DWORD PTR ds:0x428020,0x17
  4085a6:	jb     0x408572
  4085ac:	mov    eax,DWORD PTR [eax+0x18]
  4085af:	mov    DWORD PTR [ebp-0x24],eax
  4085b2:	xor    eax,eax
  4085b4:	mov    eax,DWORD PTR [ebp-0x18]
  4085b7:	mov    ecx,DWORD PTR [ebp+0x8]
  4085ba:	add    DWORD PTR ds:0x42901c,0x480
  4085c4:	add    ecx,DWORD PTR [eax+0x20]
  4085c7:	mov    DWORD PTR [ebp-0x2c],ecx
  4085ca:	sub    DWORD PTR ds:0x42c00c,ebx
  4085d0:	mov    eax,DWORD PTR [ebp-0x18]
  4085d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4085d6:	add    DWORD PTR ds:0x42a004,0x42a01c
  4085e0:	add    ecx,DWORD PTR [eax+0x24]
  4085e3:	mov    DWORD PTR [ebp-0x34],ecx
  4085e6:	inc    ecx
  4085e7:	mov    eax,DWORD PTR [ebp-0x18]
  4085ea:	sub    DWORD PTR ds:0x42b010,0x20b8
  4085f4:	mov    ecx,DWORD PTR [ebp+0x8]
  4085f7:	or     DWORD PTR ds:0x42a010,0x1874
  408601:	add    ecx,DWORD PTR [eax+0x1c]
  408604:	mov    eax,edi
  408606:	mov    DWORD PTR [ebp-0x18],ecx
  408609:	jmp    0x408669
  40860e:	mov    ecx,DWORD PTR [ebp-0x2c]
  408611:	mov    edx,DWORD PTR [ebp+0x8]
  408614:	add    edx,DWORD PTR [ecx+esi*4]
  408617:	mov    DWORD PTR [ebp-0x28],edx
  40861a:	mov    ecx,DWORD PTR [ebp-0x4]
  40861d:	mov    edx,DWORD PTR [ebp-0x28]
  408620:	xor    ecx,ebx
  408622:	add    ecx,eax
  408624:	cmp    edx,ecx
  408626:	je     0x408669
  40862c:	jmp    0x408655
  408631:	mov    ecx,DWORD PTR [ebp-0x4]
  408634:	mov    edx,DWORD PTR [ebp-0x8]
  408637:	xor    ecx,ebx
  408639:	add    ecx,eax
  40863b:	cmp    edx,ecx
  40863d:	je     0x4086ad
  408643:	mov    ecx,DWORD PTR [ebp-0x4]
  408646:	mov    edx,DWORD PTR [ebp-0x30]
  408649:	xor    ecx,ebx
  40864b:	add    ecx,eax
  40864d:	cmp    edx,ecx
  40864f:	je     0x4086bc
  408655:	lea    eax,[ebp-0x8]
  408658:	push   eax
  408659:	push   DWORD PTR [ebp-0x28]
  40865c:	push   DWORD PTR [ebp+0xc]
  40865f:	call   0x419e00
  408664:	mov    eax,0x3272db
  408669:	mov    ecx,DWORD PTR [ebp-0x4]
  40866c:	mov    edx,DWORD PTR [ebp-0x8]
  40866f:	xor    ecx,ebx
  408671:	add    ecx,eax
  408673:	cmp    edx,ecx
  408675:	je     0x408690
  40867b:	mov    ecx,DWORD PTR [ebp-0x34]
  40867e:	movzx  ecx,WORD PTR [ecx+esi*2]
  408682:	mov    edx,DWORD PTR [ebp-0x18]
  408685:	mov    ecx,DWORD PTR [edx+ecx*4]
  408688:	mov    DWORD PTR [ebp-0x38],ecx
  40868b:	jmp    0x408631
  408690:	mov    ecx,DWORD PTR [ebp-0x14]
  408693:	xor    ecx,ebx
  408695:	lea    esi,[esi+ecx*1+0x3272db]
  40869c:	jmp    0x40837a
  4086a1:	mov    eax,DWORD PTR [ebp-0x4]
  4086a4:	xor    eax,ebx
  4086a6:	add    eax,edi
  4086a8:	jmp    0x408820
  4086ad:	mov    eax,DWORD PTR [ebp-0x4]
  4086b0:	xor    eax,ebx
  4086b2:	add    eax,0x3272db
  4086b7:	jmp    0x408820
  4086bc:	mov    ecx,DWORD PTR [ebp-0x38]
  4086bf:	add    ecx,DWORD PTR [ebp+0x8]
  4086c2:	mov    DWORD PTR [ebp-0x10],ecx
  4086c5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4086c8:	test   ecx,ecx
  4086ca:	je     0x4087ab
  4086d0:	mov    DWORD PTR [ebp-0x20],0x0
  4086d7:	push   0x3
  4086d9:	xor    edx,edx
  4086db:	pop    edx
  4086dc:	add    edx,0x8
  4086df:	push   edx
  4086e0:	pop    ecx
  4086e1:	push   0x6
  4086e3:	dec    ecx
  4086e4:	pop    ebx
  4086e5:	dec    ebx
  4086e6:	xchg   ebx,ecx
  4086e8:	sub    ebx,ecx
  4086ea:	xchg   ebx,ecx
  4086ec:	dec    ecx
  4086ed:	mov    eax,DWORD PTR [ebp-0x1c]
  4086f0:	imul   eax,ecx
  4086f3:	sub    esp,eax
  4086f5:	mov    DWORD PTR [ebp-0x20],esp
  4086f8:	mov    eax,DWORD PTR [ebp-0x4]
  4086fb:	mov    ecx,0x7510893
  408700:	xor    eax,ecx
  408702:	mov    edx,0x3272db
  408707:	add    eax,edx
  408709:	mov    DWORD PTR [ebp+0x8],eax
  40870c:	mov    eax,DWORD PTR [ebp-0x14]
  40870f:	xor    eax,ecx
  408711:	add    eax,edx
  408713:	mov    edx,DWORD PTR [ebp+0x14]
  408716:	imul   eax,DWORD PTR [edx]
  408719:	mov    edx,DWORD PTR [ebp-0x4]
  40871c:	xor    edx,ecx
  40871e:	mov    ecx,DWORD PTR [ebp+0x8]
  408721:	lea    ecx,[edx+ecx*1+0x3272db]
  408728:	cmp    ecx,eax
  40872a:	je     0x4087a1
  408730:	mov    edi,DWORD PTR [ebp-0x14]
  408733:	mov    eax,DWORD PTR [ebp+0x8]
  408736:	mov    edx,DWORD PTR [ebp+0x14]
  408739:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40873d:	mov    ecx,0x7510893
  408742:	xor    edx,edx
  408744:	xor    edi,ecx
  408746:	mov    esi,0x3272db
  40874b:	add    edi,esi
  40874d:	div    edi
  40874f:	mov    edx,DWORD PTR [ebp-0x4]
  408752:	xor    edx,ecx
  408754:	lea    eax,[edx+eax*1+0x3272db]
  40875b:	mov    edx,DWORD PTR [ebp+0x8]
  40875e:	mov    edi,DWORD PTR [ebp-0x20]
  408761:	mov    DWORD PTR [edi+edx*4],eax
  408764:	mov    eax,DWORD PTR [ebp-0x14]
  408767:	mov    edx,DWORD PTR [ebp+0x8]
  40876a:	xor    eax,ecx
  40876c:	lea    eax,[eax+edx*1+0x3272db]
  408773:	mov    DWORD PTR [ebp+0x8],eax
  408776:	mov    eax,DWORD PTR [ebp-0x14]
  408779:	mov    edx,DWORD PTR [ebp+0x14]
  40877c:	xor    eax,ecx
  40877e:	add    eax,esi
  408780:	imul   eax,DWORD PTR [edx]
  408783:	mov    edx,DWORD PTR [ebp-0x4]
  408786:	xor    edx,ecx
  408788:	mov    ecx,DWORD PTR [ebp+0x8]
  40878b:	lea    ecx,[edx+ecx*1+0x3272db]
  408792:	cmp    ecx,eax
  408794:	jne    0x408730
  40879a:	mov    eax,esi
  40879c:	jmp    0x4087a6
  4087a1:	mov    eax,0x3272db
  4087a6:	mov    ebx,0x7510893
  4087ab:	mov    ecx,DWORD PTR [ebp-0x4]
  4087ae:	xor    ecx,ebx
  4087b0:	add    ecx,eax
  4087b2:	mov    DWORD PTR [ebp-0xc],ecx
  4087b5:	mov    ebx,0x3874
  4087ba:	add    ebx,0x2342
  4087c0:	xchg   ebx,esi
  4087c2:	xor    ebx,ebx
  4087c4:	push   esi
  4087c5:	mov    esi,ebx
  4087c7:	pop    ebx
  4087c8:	mov    edx,esi
  4087ca:	add    ebx,0x1002
  4087d0:	lea    eax,[ebp-0x10]
  4087d3:	add    edx,eax
  4087d5:	add    edx,0x5
  4087d8:	push   edx
  4087d9:	inc    esi
  4087da:	pop    ecx
  4087db:	dec    ecx
  4087dc:	xchg   ecx,eax
  4087dd:	dec    eax
  4087de:	xchg   ecx,eax
  4087df:	dec    ecx
  4087e0:	xchg   ecx,edx
  4087e2:	dec    edx
  4087e3:	push   edx
  4087e4:	mov    edx,ebx
  4087e6:	pop    ebx
  4087e7:	dec    ebx
  4087e8:	call   DWORD PTR [ebx]
  4087ea:	cmp    DWORD PTR [ebp+0x10],esi
  4087ed:	je     0x40880c
  4087f3:	xchg   edx,eax
  4087f4:	push   0xb
  4087f6:	pop    ecx
  4087f7:	push   0x4
  4087f9:	pop    ebx
  4087fa:	inc    ebx
  4087fb:	xchg   ebx,ecx
  4087fd:	sub    ebx,ecx
  4087ff:	xchg   ebx,ecx
  408801:	dec    ecx
  408802:	dec    ecx
  408803:	mov    eax,DWORD PTR [ebp-0x1c]
  408806:	imul   eax,ecx
  408809:	add    esp,eax
  40880b:	xchg   edx,eax
  40880c:	push   eax
  40880d:	xor    ebx,ebx
  40880f:	mov    edx,esp
  408811:	dec    edx
  408812:	inc    ebx
  408813:	add    ebx,DWORD PTR [edx+ebx*1]
  408816:	dec    ebx
  408817:	xor    edx,edx
  408819:	add    DWORD PTR [ebp-0xc],ebx
  40881c:	pop    ebx
  40881d:	mov    eax,DWORD PTR [ebp-0xc]
  408820:	pop    edi
  408821:	pop    esi
  408822:	pop    ebx
  408823:	leave  
  408824:	ret    0x10
  408827:	or     DWORD PTR ds:0x42c00c,0x42a008
  408831:	xor    eax,eax
  408833:	add    DWORD PTR ds:0x428028,0x42a010
  40883d:	inc    eax
  40883e:	ret    
  40883f:	push   ebp
  408840:	mov    ebp,esp
  408842:	mov    eax,ds:0x421952
  408847:	and    DWORD PTR ds:0x42c008,0x0
  408851:	xor    ecx,ecx
  408853:	or     ecx,DWORD PTR ds:0x42c008
  408859:	inc    ecx
  40885a:	mov    DWORD PTR ds:0x42c008,ecx
  408860:	cmp    DWORD PTR ds:0x42c008,0xc
  408867:	jne    0x40887d
  40886d:	push   0x423556
  408872:	push   0x42350e
  408877:	call   DWORD PTR ds:0x424030
  40887d:	cmp    DWORD PTR ds:0x42c008,0xb
  408884:	jne    0x408897
  40888a:	mov    ecx,DWORD PTR ds:0x42c008
  408890:	inc    ecx
  408891:	mov    DWORD PTR ds:0x42c008,ecx
  408897:	cmp    DWORD PTR ds:0x42c008,0x1b
  40889e:	jb     0x408851
  4088a4:	xor    ecx,DWORD PTR ds:0x42a01c
  4088aa:	mov    eax,DWORD PTR [eax+0x1c8]
  4088b0:	add    ecx,0x4e81
  4088b6:	mov    eax,DWORD PTR [eax]
  4088b8:	and    ecx,DWORD PTR ds:0x42b018
  4088be:	cdq    
  4088bf:	push   ebx
  4088c0:	mov    ecx,0xfabdbef1
  4088c5:	add    ebx,0x1541
  4088cb:	add    eax,ecx
  4088cd:	adc    edx,0xffffffff
  4088d0:	push   esi
  4088d1:	push   edi
  4088d2:	mov    edi,DWORD PTR ds:0x421772
  4088d8:	mov    ebx,DWORD PTR ds:0x42179a
  4088de:	sub    edi,ebx
  4088e0:	or     edi,DWORD PTR [edi+ebx*1]
  4088e3:	mov    edi,edx
  4088e5:	and    DWORD PTR ds:0x429000,0x0
  4088ef:	jmp    0x408901
  4088f4:	mov    edx,DWORD PTR ds:0x429000
  4088fa:	inc    edx
  4088fb:	mov    DWORD PTR ds:0x429000,edx
  408901:	cmp    DWORD PTR ds:0x429000,0x1a
  408908:	jae    0x40895a
  40890e:	cmp    DWORD PTR ds:0x429000,0x7
  408915:	jne    0x40893b
  40891b:	push   DWORD PTR [ebp-0x1c]
  40891e:	push   0x85ec
  408923:	push   0x4f88
  408928:	push   DWORD PTR [ebp-0x10]
  40892b:	push   0x6e2c
  408930:	push   0x428000
  408935:	call   DWORD PTR ds:0x424038
  40893b:	cmp    DWORD PTR ds:0x429000,0x6
  408942:	jne    0x408955
  408948:	mov    edx,DWORD PTR ds:0x429000
  40894e:	inc    edx
  40894f:	mov    DWORD PTR ds:0x429000,edx
  408955:	jmp    0x4088f4
  40895a:	mov    edx,DWORD PTR [ebp+0x8]
  40895d:	adc    DWORD PTR ds:0x42a00c,0x42801c
  408967:	mov    ebx,eax
  408969:	mov    eax,0x8a29a123
  40896e:	xor    esi,esi
  408970:	xor    ebx,eax
  408972:	xor    edi,0x0
  408975:	and    DWORD PTR ds:0x429000,0x1a3f
  40897f:	add    edx,ecx
  408981:	adc    esi,0xffffffff
  408984:	xor    edx,eax
  408986:	xor    esi,0x0
  408989:	cmp    edx,ebx
  40898b:	jne    0x408999
  408991:	cmp    esi,edi
  408993:	je     0x4089c8
  408999:	mov    edx,DWORD PTR ds:0x421952
  40899f:	mov    edx,DWORD PTR [edx+0x1c0]
  4089a5:	mov    edx,DWORD PTR [edx]
  4089a7:	xor    esi,esi
  4089a9:	add    edx,ecx
  4089ab:	adc    esi,0xffffffff
  4089ae:	xor    edx,eax
  4089b0:	xor    esi,0x0
  4089b3:	cmp    edx,0x70941fd1
  4089b9:	jne    0x408a32
  4089bf:	cmp    esi,0xffffffff
  4089c2:	jne    0x408a32
  4089c8:	mov    edx,DWORD PTR ds:0x4219d6
  4089ce:	mov    esi,DWORD PTR ds:0x4219ce
  4089d4:	xor    edx,esi
  4089d6:	mov    DWORD PTR ds:0x4219ce,edx
  4089dc:	mov    edx,DWORD PTR [ebp+0xc]
  4089df:	mov    edx,DWORD PTR [edx]
  4089e1:	mov    edx,DWORD PTR [edx]
  4089e3:	mov    esi,DWORD PTR ds:0x4219ce
  4089e9:	add    DWORD PTR [edx],esi
  4089eb:	mov    esi,DWORD PTR [ebp+0x8]
  4089ee:	mov    edx,DWORD PTR ds:0x4219ce
  4089f4:	xor    esi,0x7510893
  4089fa:	add    esi,0x3272db
  408a00:	xor    ebx,ebx
  408a02:	add    esi,ecx
  408a04:	adc    ebx,0xffffffff
  408a07:	xor    edi,edi
  408a09:	xor    esi,eax
  408a0b:	xor    ebx,0x0
  408a0e:	add    edx,ecx
  408a10:	adc    edi,0xffffffff
  408a13:	xor    edx,eax
  408a15:	xor    edi,0x0
  408a18:	cmp    edx,esi
  408a1a:	jne    0x408a32
  408a20:	cmp    edi,ebx
  408a22:	jne    0x408a32
  408a28:	mov    eax,ds:0x4219ce
  408a2d:	mov    ds:0x4219d6,eax
  408a32:	pop    edi
  408a33:	pop    esi
  408a34:	pop    ebx
  408a35:	pop    ebp
  408a36:	ret    0x8
  408a39:	push   ebp
  408a3a:	mov    ebp,esp
  408a3c:	push   ecx
  408a3d:	mov    eax,ds:0x42179e
  408a42:	mov    eax,DWORD PTR [eax]
  408a44:	add    DWORD PTR ds:0x42901c,eax
  408a4a:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  408a51:	mov    eax,DWORD PTR [ebp+0x8]
  408a54:	adc    DWORD PTR ds:0x42a010,0x6bac
  408a5e:	mov    al,BYTE PTR [eax]
  408a60:	xor    DWORD PTR ds:0x42b018,0x428020
  408a6a:	add    al,0xd
  408a6c:	sbb    DWORD PTR ds:0x428004,0x428008
  408a76:	xor    al,0x6f
  408a78:	mov    DWORD PTR ds:0x428004,0x2e21
  408a82:	cmp    al,0x35
  408a84:	mov    DWORD PTR ds:0x42a00c,0x23cb
  408a8e:	jne    0x408b4b
  408a94:	and    DWORD PTR ds:0x428024,0x429014
  408a9e:	mov    eax,DWORD PTR [ebp+0x8]
  408aa1:	dec    edx
  408aa2:	mov    ecx,DWORD PTR [ebp+0x8]
  408aa5:	and    edx,DWORD PTR ds:0x42b010
  408aab:	add    ecx,DWORD PTR [eax+0x3c]
  408aae:	mov    edx,0x7510893
  408ab3:	mov    DWORD PTR [ebp+0x8],ecx
  408ab6:	and    DWORD PTR ds:0x42c008,0x0
  408ac0:	jmp    0x408ad2
  408ac5:	mov    ecx,DWORD PTR ds:0x42c008
  408acb:	inc    ecx
  408acc:	mov    DWORD PTR ds:0x42c008,ecx
  408ad2:	cmp    DWORD PTR ds:0x42c008,0x18
  408ad9:	jae    0x408b1d
  408adf:	cmp    DWORD PTR ds:0x42c008,0x9
  408ae6:	jne    0x408afc
  408aec:	push   0x429014
  408af1:	push   0x5ace
  408af6:	call   DWORD PTR ds:0x42403c
  408afc:	cmp    DWORD PTR ds:0x42c008,0x8
  408b03:	jne    0x408b18
  408b09:	xor    ecx,ecx
  408b0b:	or     ecx,DWORD PTR ds:0x42c008
  408b11:	inc    ecx
  408b12:	mov    DWORD PTR ds:0x42c008,ecx
  408b18:	jmp    0x408ac5
  408b1d:	mov    eax,DWORD PTR [ebp-0x4]
  408b20:	xor    eax,edx
  408b22:	push   esi
  408b23:	mov    esi,DWORD PTR [ebp+0x8]
  408b26:	mov    ecx,0x3272db
  408b2b:	add    eax,ecx
  408b2d:	cmp    DWORD PTR [esi+0x54],eax
  408b30:	pop    esi
  408b31:	je     0x408b3f
  408b37:	mov    eax,DWORD PTR [ebp+0x8]
  408b3a:	jmp    0x408b58
  408b3f:	mov    eax,DWORD PTR [ebp-0x4]
  408b42:	xor    eax,edx
  408b44:	add    eax,ecx
  408b46:	jmp    0x408b58
  408b4b:	mov    eax,DWORD PTR [ebp-0x4]
  408b4e:	xor    eax,0x7510893
  408b53:	add    eax,0x3272db
  408b58:	leave  
  408b59:	ret    0x4
  408b5c:	push   ebp
  408b5d:	mov    ebp,esp
  408b5f:	sub    esp,0x18
  408b62:	and    DWORD PTR ds:0x42901c,0x0
  408b6c:	jmp    0x408b7e
  408b71:	mov    edx,DWORD PTR ds:0x42901c
  408b77:	inc    edx
  408b78:	mov    DWORD PTR ds:0x42901c,edx
  408b7e:	cmp    DWORD PTR ds:0x42901c,0x1a
  408b85:	jae    0x408bb7
  408b8b:	cmp    DWORD PTR ds:0x42901c,0x22
  408b92:	jne    0x408ba8
  408b98:	push   0x8447
  408b9d:	push   0x423564
  408ba2:	call   DWORD PTR ds:0x424040
  408ba8:	jmp    0x408b71
  408bad:	adc    DWORD PTR ds:0x42b010,0x42b00c
  408bb7:	mov    DWORD PTR [ebp-0x10],0xf89f85b6
  408bbe:	mov    ecx,DWORD PTR ds:0x42176a
  408bc4:	mov    ecx,DWORD PTR [ecx]
  408bc6:	and    DWORD PTR ds:0x42c01c,ecx
  408bcc:	lea    eax,[ebp+0x14]
  408bcf:	mov    DWORD PTR [ebp-0x4],eax
  408bd2:	push   esi
  408bd3:	and    DWORD PTR ds:0x428018,0x0
  408bdd:	jmp    0x408bef
  408be2:	mov    esi,DWORD PTR ds:0x428018
  408be8:	inc    esi
  408be9:	mov    DWORD PTR ds:0x428018,esi
  408bef:	cmp    DWORD PTR ds:0x428018,0x1a
  408bf6:	jae    0x408cc4
  408bfc:	cmp    DWORD PTR ds:0x428018,0x28
  408c03:	jne    0x408c14
  408c09:	push   0x42357f
  408c0e:	call   DWORD PTR ds:0x424044
  408c14:	jmp    0x408be2
  408c19:	and    DWORD PTR ds:0x42c000,0x0
  408c23:	mov    edx,DWORD PTR ds:0x42c000
  408c29:	inc    edx
  408c2a:	mov    DWORD PTR ds:0x42c000,edx
  408c30:	cmp    DWORD PTR ds:0x42c000,0x20
  408c37:	jne    0x408c52
  408c3d:	push   0x1ea1
  408c42:	push   0x42b008
  408c47:	push   0x423642
  408c4c:	call   DWORD PTR ds:0x424048
  408c52:	cmp    DWORD PTR ds:0x42c000,0x11
  408c59:	jb     0x408c23
  408c5f:	and    DWORD PTR ds:0x42b004,0x0
  408c69:	mov    edx,DWORD PTR ds:0x42b004
  408c6f:	inc    edx
  408c70:	mov    DWORD PTR ds:0x42b004,edx
  408c76:	cmp    DWORD PTR ds:0x42b004,0xf
  408c7d:	jne    0x408c93
  408c83:	push   0x428004
  408c88:	push   0x7cc5
  408c8d:	call   DWORD PTR ds:0x424014
  408c93:	cmp    DWORD PTR ds:0x42b004,0xe
  408c9a:	jne    0x408cad
  408ca0:	mov    edx,DWORD PTR ds:0x42b004
  408ca6:	inc    edx
  408ca7:	mov    DWORD PTR ds:0x42b004,edx
  408cad:	cmp    DWORD PTR ds:0x42b004,0x1d
  408cb4:	jb     0x408c69
  408cba:	mov    DWORD PTR ds:0x428014,0x22a8
  408cc4:	mov    esi,0xf89c85b6
  408cc9:	and    DWORD PTR ds:0x428008,0x0
  408cd3:	mov    edx,DWORD PTR ds:0x428008
  408cd9:	inc    edx
  408cda:	mov    DWORD PTR ds:0x428008,edx
  408ce0:	cmp    DWORD PTR ds:0x428008,0x19
  408ce7:	jne    0x408d17
  408ced:	push   0x62e7
  408cf2:	push   0x428000
  408cf7:	push   0x75f3
  408cfc:	push   0x428000
  408d01:	push   DWORD PTR [ebp-0x24]
  408d04:	push   0x6458
  408d09:	push   DWORD PTR [ebp-0x14]
  408d0c:	push   0x5743
  408d11:	call   DWORD PTR ds:0x424018
  408d17:	cmp    DWORD PTR ds:0x428008,0x14
  408d1e:	jb     0x408cd3
  408d24:	xor    ecx,ecx
  408d26:	add    ecx,DWORD PTR ds:0x429008
  408d2c:	adc    DWORD PTR ds:0x42c00c,ecx
  408d32:	mov    DWORD PTR [ebp-0xc],esi
  408d35:	lea    eax,[ebp-0xc]
  408d38:	dec    ecx
  408d39:	mov    DWORD PTR [ebp-0x14],eax
  408d3c:	mov    eax,DWORD PTR [ebp-0xc]
  408d3f:	adc    ecx,0x29e6
  408d45:	mov    edx,DWORD PTR [ebp-0x14]
  408d48:	and    DWORD PTR ds:0x428018,0x0
  408d52:	mov    ecx,DWORD PTR ds:0x428018
  408d58:	inc    ecx
  408d59:	mov    DWORD PTR ds:0x428018,ecx
  408d5f:	cmp    DWORD PTR ds:0x428018,0xb
  408d66:	jne    0x408d77
  408d6c:	push   0x4faf
  408d71:	call   DWORD PTR ds:0x42401c
  408d77:	cmp    DWORD PTR ds:0x428018,0xa
  408d7e:	jne    0x408d91
  408d84:	mov    ecx,DWORD PTR ds:0x428018
  408d8a:	inc    ecx
  408d8b:	mov    DWORD PTR ds:0x428018,ecx
  408d91:	cmp    DWORD PTR ds:0x428018,0x1e
  408d98:	jb     0x408d52
  408d9e:	inc    ecx
  408d9f:	mov    ecx,0x7510893
  408da4:	neg    DWORD PTR ds:0x42a004
  408daa:	xor    eax,ecx
  408dac:	add    eax,0x3272db
  408db1:	and    DWORD PTR ds:0x42c010,0x2759
  408dbb:	mov    DWORD PTR [edx],eax
  408dbd:	mov    edx,DWORD PTR ds:0x421762
  408dc3:	mov    eax,ds:0x421772
  408dc8:	sub    edx,eax
  408dca:	and    edx,DWORD PTR [edx+eax*1]
  408dcd:	mov    eax,ds:0x4217ca
  408dd2:	inc    DWORD PTR ds:0x42a01c
  408dd8:	mov    edx,DWORD PTR [ebp-0x4]
  408ddb:	and    DWORD PTR ds:0x42a018,0x7b9c
  408de5:	mov    eax,DWORD PTR [eax]
  408de7:	and    DWORD PTR ds:0x42c000,0x5f81
  408df1:	add    eax,DWORD PTR [edx]
  408df3:	movzx  edx,BYTE PTR ds:0x42a014
  408dfa:	or     DWORD PTR ds:0x42a01c,edx
  408e00:	push   edi
  408e01:	add    DWORD PTR ds:0x42a004,edx
  408e07:	mov    DWORD PTR [ebp-0x8],eax
  408e0a:	movzx  edx,WORD PTR ds:0x428004
  408e11:	sbb    DWORD PTR ds:0x42a01c,edx
  408e17:	mov    edi,DWORD PTR [ebp+0x8]
  408e1a:	and    DWORD PTR ds:0x42b01c,0x631e
  408e24:	mov    eax,ds:0x421952
  408e29:	mov    eax,DWORD PTR [eax+0x198]
  408e2f:	xor    edi,ecx
  408e31:	mov    DWORD PTR ds:0x428018,0x14
  408e3b:	cmp    DWORD PTR ds:0x428018,0x0
  408e42:	je     0x408e95
  408e48:	cmp    DWORD PTR ds:0x428018,0x3
  408e4f:	jne    0x408e63
  408e55:	push   DWORD PTR [ebp-0x28]
  408e58:	push   0x77dc
  408e5d:	call   DWORD PTR ds:0x424020
  408e63:	cmp    DWORD PTR ds:0x428018,0x4
  408e6a:	jne    0x408e7d
  408e70:	mov    edx,DWORD PTR ds:0x428018
  408e76:	dec    edx
  408e77:	mov    DWORD PTR ds:0x428018,edx
  408e7d:	mov    edx,DWORD PTR ds:0x428018
  408e83:	dec    edx
  408e84:	mov    DWORD PTR ds:0x428018,edx
  408e8a:	jmp    0x408e3b
  408e8f:	and    DWORD PTR ds:0x42c014,ecx
  408e95:	mov    edx,0x3272db
  408e9a:	sbb    DWORD PTR ds:0x429008,0x451c
  408ea4:	add    edi,edx
  408ea6:	mov    DWORD PTR ds:0x42a000,0x2432
  408eb0:	cmp    DWORD PTR [eax],edi
  408eb2:	je     0x408ebf
  408eb8:	mov    eax,DWORD PTR [eax]
  408eba:	jmp    0x409144
  408ebf:	mov    eax,DWORD PTR [ebp+0x18]
  408ec2:	cmp    eax,esi
  408ec4:	jne    0x408ede
  408eca:	mov    DWORD PTR ds:0x42a01c,0x2296
  408ed4:	push   0xf89c85b5
  408ed9:	jmp    0x409133
  408ede:	mov    esi,DWORD PTR [ebp+0x18]
  408ee1:	mov    eax,0x2f4e
  408ee6:	mov    eax,0xf89c85b4
  408eeb:	cmp    esi,eax
  408eed:	jne    0x409123
  408ef3:	sbb    esi,esi
  408ef5:	mov    eax,DWORD PTR [ebp+0x10]
  408ef8:	mov    esi,DWORD PTR ds:0x42c008
  408efe:	sbb    esi,DWORD PTR ds:0x42a008
  408f04:	mov    DWORD PTR ds:0x42c008,esi
  408f0a:	xor    eax,ecx
  408f0c:	mov    DWORD PTR ds:0x428000,0x1b
  408f16:	cmp    DWORD PTR ds:0x428000,0x0
  408f1d:	je     0x408f86
  408f23:	cmp    DWORD PTR ds:0x428000,0x4
  408f2a:	jne    0x408f5a
  408f30:	push   0x42a000
  408f35:	push   0x8ffd
  408f3a:	push   DWORD PTR [ebp-0x14]
  408f3d:	push   0x428014
  408f42:	push   0x2d9f
  408f47:	push   0x4236bc
  408f4c:	push   0x4cf3
  408f51:	push   DWORD PTR [ebp-0x1c]
  408f54:	call   DWORD PTR ds:0x424024
  408f5a:	cmp    DWORD PTR ds:0x428000,0x5
  408f61:	jne    0x408f74
  408f67:	mov    esi,DWORD PTR ds:0x428000
  408f6d:	dec    esi
  408f6e:	mov    DWORD PTR ds:0x428000,esi
  408f74:	mov    esi,DWORD PTR ds:0x428000
  408f7a:	dec    esi
  408f7b:	mov    DWORD PTR ds:0x428000,esi
  408f81:	jmp    0x408f16
  408f86:	add    eax,edx
  408f88:	mov    DWORD PTR [ebp-0x18],eax
  408f8b:	mov    eax,DWORD PTR [ebp+0xc]
  408f8e:	mov    esi,DWORD PTR [ebp-0x8]
  408f91:	xor    eax,ecx
  408f93:	add    eax,edx
  408f95:	imul   eax,DWORD PTR [esi]
  408f98:	mov    esi,DWORD PTR [ebp+0x8]
  408f9b:	xor    esi,ecx
  408f9d:	add    esi,edx
  408f9f:	cmp    esi,eax
  408fa1:	mov    eax,DWORD PTR [ebp-0x4]
  408fa4:	push   ebx
  408fa5:	je     0x408fc4
  408fab:	mov    esi,DWORD PTR [ebp-0x18]
  408fae:	add    DWORD PTR [eax],esi
  408fb0:	mov    eax,DWORD PTR [ebp-0x4]
  408fb3:	mov    esi,DWORD PTR [ebp+0xc]
  408fb6:	xor    esi,ecx
  408fb8:	add    esi,edx
  408fba:	imul   esi,DWORD PTR [eax]
  408fbd:	mov    DWORD PTR [eax],esi
  408fbf:	jmp    0x408fc9
  408fc4:	mov    esi,DWORD PTR [ebp+0x14]
  408fc7:	xor    DWORD PTR [eax],esi
  408fc9:	mov    eax,DWORD PTR [ebp-0x4]
  408fcc:	mov    edi,DWORD PTR [ebp+0x10]
  408fcf:	xor    edi,ecx
  408fd1:	mov    esi,0xffcd8d25
  408fd6:	mov    ebx,esi
  408fd8:	sub    ebx,edi
  408fda:	add    DWORD PTR [eax],ebx
  408fdc:	mov    eax,DWORD PTR [ebp-0x4]
  408fdf:	mov    edi,DWORD PTR [ebp-0x8]
  408fe2:	add    edi,DWORD PTR [eax]
  408fe4:	mov    DWORD PTR [ebp-0x8],edi
  408fe7:	mov    eax,DWORD PTR [ebp+0xc]
  408fea:	mov    edi,DWORD PTR [ebp+0xc]
  408fed:	xor    edi,ecx
  408fef:	xor    eax,ecx
  408ff1:	lea    eax,[eax+edi*1+0x64e5b6]
  408ff8:	mov    edi,DWORD PTR [ebp+0xc]
  408ffb:	xor    edi,ecx
  408ffd:	add    edi,edx
  408fff:	imul   eax,edi
  409002:	mov    edi,DWORD PTR [ebp+0xc]
  409005:	xor    edi,ecx
  409007:	sub    edi,eax
  409009:	mov    eax,DWORD PTR [ebp-0x4]
  40900c:	add    edi,edx
  40900e:	cmp    DWORD PTR [eax],edi
  409010:	mov    eax,DWORD PTR [ebp-0x4]
  409013:	mov    edi,DWORD PTR [ebp+0x10]
  409016:	jg     0x409029
  40901c:	xor    edi,ecx
  40901e:	mov    ebx,esi
  409020:	sub    ebx,edi
  409022:	add    DWORD PTR [eax],ebx
  409024:	jmp    0x40902f
  409029:	xor    edi,ecx
  40902b:	add    edi,edx
  40902d:	add    DWORD PTR [eax],edi
  40902f:	mov    eax,DWORD PTR [ebp-0x8]
  409032:	mov    edi,DWORD PTR [ebp-0x10]
  409035:	mov    eax,DWORD PTR [eax]
  409037:	xor    edi,ecx
  409039:	add    edi,0x3272da
  40903f:	not    edi
  409041:	and    eax,edi
  409043:	movsx  di,BYTE PTR [eax+0x1]
  409048:	mov    ebx,0x3b4b
  40904d:	sub    di,bx
  409050:	mov    ebx,0x8a85
  409055:	xor    di,bx
  409058:	mov    ebx,0x4f8a
  40905d:	cmp    di,bx
  409060:	jne    0x409088
  409066:	movsx  di,BYTE PTR [eax]
  40906a:	mov    ebx,0x3b4b
  40906f:	sub    di,bx
  409072:	mov    ebx,0x8a85
  409077:	xor    di,bx
  40907a:	mov    ebx,0x4f87
  40907f:	cmp    di,bx
  409082:	je     0x409098
  409088:	mov    edi,DWORD PTR [ebp-0x10]
  40908b:	xor    edi,ecx
  40908d:	mov    ebx,esi
  40908f:	sub    ebx,edi
  409091:	add    eax,ebx
  409093:	jmp    0x409043
  409098:	mov    esi,DWORD PTR [ebp-0x14]
  40909b:	mov    esi,DWORD PTR [esi]
  40909d:	mov    edi,DWORD PTR [eax+0x3c]
  4090a0:	lea    esi,[edi+esi*8+0x78]
  4090a4:	mov    esi,DWORD PTR [esi+eax*1]
  4090a7:	mov    DWORD PTR [ebp-0x8],esi
  4090aa:	mov    esi,DWORD PTR [ebp+0x8]
  4090ad:	xor    esi,ecx
  4090af:	add    esi,edx
  4090b1:	mov    DWORD PTR [ebp-0x14],esi
  4090b4:	mov    esi,DWORD PTR [ebp+0x8]
  4090b7:	mov    edi,DWORD PTR [ebp-0x8]
  4090ba:	xor    esi,ecx
  4090bc:	add    esi,edx
  4090be:	pop    ebx
  4090bf:	cmp    edi,esi
  4090c1:	jne    0x4090df
  4090c7:	mov    eax,DWORD PTR [ebp+0xc]
  4090ca:	xor    eax,ecx
  4090cc:	mov    ecx,DWORD PTR [ebp-0x8]
  4090cf:	add    eax,edx
  4090d1:	imul   eax,ecx
  4090d4:	mov    DWORD PTR [ebp-0x8],eax
  4090d7:	push   DWORD PTR [ebp+0x18]
  4090da:	jmp    0x409133
  4090df:	mov    ecx,DWORD PTR [ebp-0x8]
  4090e2:	add    ecx,eax
  4090e4:	mov    DWORD PTR [ebp-0x14],ecx
  4090e7:	mov    ecx,DWORD PTR [ebp-0x14]
  4090ea:	mov    ecx,DWORD PTR [ecx+0xc]
  4090ed:	movsx  cx,BYTE PTR [ecx+eax*1]
  4090f2:	mov    edx,0x3b4b
  4090f7:	sub    cx,dx
  4090fa:	mov    edx,0x8a85
  4090ff:	xor    cx,dx
  409102:	mov    edx,0x4f85
  409107:	cmp    cx,dx
  40910a:	jne    0x4090d7
  409110:	mov    ecx,DWORD PTR ds:0x421952
  409116:	mov    ecx,DWORD PTR [ecx+0x198]
  40911c:	mov    DWORD PTR [ecx],eax
  40911e:	jmp    0x409144
  409123:	mov    ecx,DWORD PTR [ebp+0x18]
  409126:	cmp    ecx,0xf89c85b5
  40912c:	jne    0x409144
  409132:	push   eax
  409133:	push   DWORD PTR [ebp+0x14]
  409136:	push   DWORD PTR [ebp+0x10]
  409139:	push   DWORD PTR [ebp+0xc]
  40913c:	push   DWORD PTR [ebp+0x8]
  40913f:	call   0x408b5c
  409144:	pop    edi
  409145:	pop    esi
  409146:	leave  
  409147:	ret    0x14
  40914a:	push   ebp
  40914b:	mov    ebp,esp
  40914d:	push   ecx
  40914e:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  409155:	mov    eax,DWORD PTR [ebp-0x4]
  409158:	mov    ecx,DWORD PTR ds:0x42b010
  40915e:	sbb    DWORD PTR ds:0x42a018,ecx
  409164:	mov    edx,DWORD PTR [ebp+0x10]
  409167:	mov    DWORD PTR ds:0x42801c,0x4950
  409171:	mov    ecx,0x7510893
  409176:	sbb    DWORD PTR ds:0x428028,0x4a48
  409180:	xor    eax,ecx
  409182:	add    DWORD PTR ds:0x42b000,0x42800c
  40918c:	add    eax,0x3272db
  409191:	mov    DWORD PTR ds:0x42a014,0x169
  40919b:	mov    DWORD PTR [edx],eax
  40919d:	sbb    eax,edx
  40919f:	mov    eax,DWORD PTR [ebp+0xc]
  4091a2:	xor    eax,ecx
  4091a4:	inc    edx
  4091a5:	push   esi
  4091a6:	xor    esi,edx
  4091a8:	mov    esi,DWORD PTR [ebp+0x10]
  4091ab:	mov    edx,0x3272db
  4091b0:	add    eax,edx
  4091b2:	add    DWORD PTR ds:0x42b01c,0x428020
  4091bc:	mov    DWORD PTR [esi+0x4],eax
  4091bf:	mov    eax,DWORD PTR [ebp+0x14]
  4091c2:	mov    esi,DWORD PTR ds:0x428024
  4091c8:	sbb    esi,DWORD PTR ds:0x429010
  4091ce:	mov    DWORD PTR ds:0x428024,esi
  4091d4:	mov    esi,DWORD PTR [ebp+0x10]
  4091d7:	mov    DWORD PTR [esi+0x8],eax
  4091da:	mov    eax,DWORD PTR [ebp+0x18]
  4091dd:	mov    esi,DWORD PTR [ebp+0x10]
  4091e0:	mov    DWORD PTR [esi+0xc],eax
  4091e3:	mov    eax,DWORD PTR [ebp+0x1c]
  4091e6:	mov    esi,DWORD PTR [ebp+0x10]
  4091e9:	mov    DWORD PTR [esi+0x10],eax
  4091ec:	mov    eax,DWORD PTR [ebp+0x8]
  4091ef:	xor    eax,ecx
  4091f1:	add    eax,edx
  4091f3:	pop    esi
  4091f4:	leave  
  4091f5:	ret    0x18
  4091f8:	push   ebp
  4091f9:	mov    ebp,esp
  4091fb:	sub    esp,0x94
  409201:	mov    eax,DWORD PTR [ebp+0x8]
  409204:	push   ebx
  409205:	neg    ecx
  409207:	jmp    0x40b57c
  40920c:	mov    dl,0xcf
  40920e:	enter  0x872f,0x27
  409212:	imul   ebp,DWORD PTR [edi+0x65],0x92d7ebdc
  409219:	data16 xlat BYTE PTR ds:[ebx]
  40921b:	xchg   BYTE PTR [edi+0xa626218],ah
  409221:	pop    edi
  409222:	bound  esp,QWORD PTR [edx+0x74]
  409225:	xor    eax,0x260454e1
  40922a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40922b:	stc    
  40922c:	mov    ds:0xa9b73b2d,al
  409231:	jns    0x4091bd
  409233:	das    
  409234:	(bad)  
  409235:	clc    
  409236:	push   0xffffffa6
  409238:	into   
  409239:	adc    dh,ah
  40923b:	fdiv   QWORD PTR [ecx-0x54]
  40923e:	push   edx
  40923f:	xor    al,0xd
  409241:	jecxz  0x4091ff
  409243:	dec    esi
  409244:	xor    al,0x6d
  409246:	adc    eax,0xd78e8bd1
  40924b:	in     eax,dx
  40924c:	repz test DWORD PTR [ecx],eax
  40924f:	mov    cl,0xa
  409251:	xchg   esi,eax
  409252:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409253:	rcr    ebx,0xfa
  409256:	push   0x6ee964c9
  40925b:	jbe    0x409292
  40925d:	sbb    DWORD PTR [eax+0x7e815688],ebp
  409263:	xchg   ebx,eax
  409264:	sbb    eax,0xfa13419e
  409269:	inc    edi
  40926a:	popf   
  40926b:	enter  0x79ce,0x3d
  40926f:	push   edx
  409270:	inc    esp
  409271:	push   0x946d7e62
  409276:	push   ebx
  409277:	jns    0x40924d
  409279:	pop    ds
  40927a:	(bad)  
  40927b:	jne    0x4092c8
  40927d:	lods   eax,DWORD PTR ds:[esi]
  40927e:	mov    cl,0x5
  409280:	jmp    0x72929d09
  409285:	inc    ecx
  409286:	mov    ?,WORD PTR [esi-0x79ddb725]
  40928c:	jmp    0xbe40:0x745e66b6
  409293:	jl     0x409297
  409295:	pushf  
  409296:	rol    eax,0x7f
  409299:	dec    ecx
  40929a:	mov    al,ds:0x1deb778d
  40929f:	fwait
  4092a0:	dec    eax
  4092a1:	popa   
  4092a2:	pop    es
  4092a3:	adc    ch,BYTE PTR [edx+0x6b12ab77]
  4092a9:	push   es
  4092aa:	and    DWORD PTR [esi-0x10],0x70
  4092ae:	addr16 sub eax,0xc875ee54
  4092b4:	xor    DWORD PTR [ebx],0x236e39b6
  4092ba:	fadd   DWORD PTR [ebp+0x2f]
  4092bd:	data16 aaa 
  4092bf:	ins    BYTE PTR es:[edi],dx
  4092c0:	fsub   DWORD PTR ds:[ecx]
  4092c3:	mov    ds:0x67c66d75,eax
  4092c8:	jmp    0x9428:0x20a2defe
  4092cf:	hlt    
  4092d0:	rol    DWORD PTR [edx+eax*1],1
  4092d3:	retf   0x6abe
  4092d6:	pop    ss
  4092d7:	jo     0x4092c5
  4092d9:	dec    eax
  4092da:	xor    DWORD PTR [ebp+0x4e],0xe06994fe
  4092e1:	out    dx,eax
  4092e2:	mov    esi,0x827da5fb
  4092e7:	cmp    edx,ebp
  4092e9:	adc    eax,0xe3e98937
  4092ee:	jnp    0x40931c
  4092f0:	pop    ds
  4092f1:	sti    
  4092f2:	mov    ecx,0xd3a5ef55
  4092f7:	sar    BYTE PTR [edi*2+0x50241730],cl
  4092fe:	sub    BYTE PTR [eax+eax*8-0x64f2e77],bl
  409305:	rcl    BYTE PTR [eax-0x3c],1
  409308:	jnp    0x4092b0
  40930a:	jno    0x409341
  40930c:	icebp  
  40930d:	sbb    eax,0x651d146a
  409312:	popf   
  409313:	sbb    esp,DWORD PTR [edi-0x2c]
  409316:	mov    edx,0xa75d587e
  40931b:	cmp    al,0x5d
  40931d:	fidivr WORD PTR [eax-0x5838ac66]
  409323:	aam    0x35
  409325:	std    
  409326:	push   edi
  409327:	inc    esi
  409328:	imul   edi,DWORD PTR [ebx],0xffffffb8
  40932b:	dec    esi
  40932c:	(bad)  
  40932e:	out    0x87,al
  409330:	jl     0x409312
  409332:	clc    
  409333:	add    ch,cl
  409335:	pop    ebx
  409336:	and    cl,0x70
  409339:	mov    ebx,0x41b5802f
  40933e:	or     al,0x41
  409340:	and    cl,al
  409342:	(bad)  
  409343:	and    dl,BYTE PTR [edi+0x5ba80aa5]
  409349:	push   ss
  40934a:	in     eax,0xd4
  40934c:	fs dec edi
  40934e:	cli    
  40934f:	cmp    BYTE PTR [ecx+0x14],dh
  409352:	sahf   
  409353:	push   0x15b6780b
  409358:	ins    BYTE PTR es:[edi],dx
  409359:	imul   ch
  40935b:	add    esi,eax
  40935d:	out    dx,eax
  40935e:	in     eax,0x57
  409360:	mov    dh,0x83
  409362:	outs   dx,DWORD PTR ds:[esi]
  409363:	lods   al,BYTE PTR ds:[esi]
  409364:	lock bound esp,QWORD PTR [edi+eiz*4]
  409368:	jmp    0xe909:0x5f2a3838
  40936f:	retf   0x7940
  409372:	sub    al,0x81
  409374:	out    dx,al
  409375:	xor    DWORD PTR [ecx-0x58],ebx
  409378:	arpl   dx,di
  40937a:	jbe    0x4092fe
  40937c:	or     DWORD PTR [ebp+0x20a52dde],ebp
  409382:	loopne 0x409324
  409384:	add    eax,0x6dc37247
  409389:	fadd   QWORD PTR [edx+ecx*2+0x3eb18337]
  409390:	dec    edx
  409391:	or     edi,DWORD PTR [ecx]
  409393:	pop    eax
  409394:	out    dx,eax
  409395:	push   ecx
  409396:	outs   dx,DWORD PTR ds:[esi]
  409397:	jl     0x40935c
  409399:	xchg   ebx,eax
  40939a:	aas    
  40939b:	xchg   ecx,eax
  40939c:	inc    esp
  40939d:	pop    ss
  40939e:	pop    ecx
  40939f:	add    ebp,esp
  4093a1:	int3   
  4093a2:	sub    al,0x61
  4093a4:	call   0x3586:0xcd978c47
  4093ab:	shl    ebx,cl
  4093ad:	call   0xd43afed9
  4093b2:	jnp    0x409395
  4093b4:	xor    DWORD PTR [ebx+0x6379d93a],0x61fce918
  4093be:	aad    0x5a
  4093c0:	xor    eax,0xc2cb73c9
  4093c5:	dec    ecx
  4093c6:	es push 0xffffffde
  4093c9:	jmp    0xfbcad6da
  4093ce:	mov    al,0xd7
  4093d0:	pusha  
  4093d1:	dec    eax
  4093d2:	test   al,0xa8
  4093d4:	or     al,0xe5
  4093d6:	into   
  4093d7:	xchg   esp,eax
  4093d8:	iret   
  4093d9:	and    ah,BYTE PTR [ecx*2-0x2edf744]
  4093e0:	mov    eax,0xb553d428
  4093e5:	xor    DWORD PTR [ebx-0xe],edx
  4093e8:	mov    cs:0x74f3fd80,al
  4093ee:	pop    ecx
  4093ef:	test   DWORD PTR [edi],eax
  4093f1:	pop    es
  4093f2:	add    esp,DWORD PTR [ebp-0x24]
  4093f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093f6:	hlt    
  4093f7:	aas    
  4093f8:	popf   
  4093f9:	call   0x9136:0xdfe2c39e
  409400:	and    dl,bl
  409402:	test   BYTE PTR [edi+esi*4+0x24],dl
  409406:	push   edi
  409407:	mov    ch,0xbd
  409409:	push   es
  40940a:	sub    eax,0x94f9643
  40940f:	rcr    bl,1
  409411:	or     BYTE PTR [edx+0x5b],bh
  409414:	mov    cl,0x3a
  409416:	xchg   edi,eax
  409417:	and    DWORD PTR [esi-0x24],0x53
  40941b:	pop    esp
  40941c:	fs inc eax
  40941e:	sbb    DWORD PTR [ebx+ebp*4+0x34401c94],edi
  409425:	push   cs
  409426:	xchg   esi,eax
  409427:	fdivr  DWORD PTR [edx+0x455f8d5a]
  40942d:	fsubrp st(2),st
  40942f:	ret    
  409430:	adc    dh,bl
  409432:	sub    eax,0x81f15484
  409437:	mov    WORD PTR [ebx],?
  409439:	sbb    al,0xed
  40943b:	lea    esp,[ecx-0x45a12af7]
  409441:	push   ebp
  409442:	and    ecx,DWORD PTR [esi-0x52]
  409445:	xor    dl,BYTE PTR [ebp-0x1ddfcd79]
  40944b:	push   ds
  40944c:	sbb    cl,BYTE PTR [eax-0x52]
  40944f:	sar    BYTE PTR [ebx],1
  409451:	fistp  QWORD PTR [esi+0x27cdb6f5]
  409457:	mov    bl,0x60
  409459:	mov    ch,0xd9
  40945b:	adc    ah,cl
  40945d:	push   cs
  40945e:	mul    BYTE PTR [edi-0x5f]
  409461:	dec    esi
  409462:	mov    ds:0x77f65852,eax
  409467:	mov    esp,0x7a4bc33f
  40946c:	outs   dx,BYTE PTR ds:[esi]
  40946d:	xor    DWORD PTR [ecx],ebp
  40946f:	fcmovne st,st(3)
  409471:	push   cs
  409472:	es sub eax,0xa08d73b9
  409478:	(bad)  
  409479:	dec    esi
  40947a:	push   es
  40947b:	add    eax,0xc6a8eb8e
  409480:	mov    ebx,DWORD PTR [ebp-0x65]
  409483:	fstp   DWORD PTR ds:0x1ee011bc
  409489:	cwde   
  40948a:	ficomp WORD PTR [esi+edx*1-0x1f7023e1]
  409491:	pop    esi
  409492:	sub    ch,ah
  409494:	fadd   DWORD PTR [esi+0xc]
  409497:	pusha  
  409498:	pop    edx
  409499:	inc    esi
  40949a:	pushf  
  40949b:	in     al,0xd7
  40949d:	mov    DWORD PTR [edx-0x3f2237fe],eax
  4094a3:	int    0xac
  4094a5:	in     al,0xd4
  4094a7:	leave  
  4094a8:	pop    edi
  4094a9:	inc    esp
  4094aa:	sub    eax,0xea87bd38
  4094af:	add    DWORD PTR [esi-0x27a84e45],esp
  4094b5:	pop    ecx
  4094b6:	aam    0xba
  4094b8:	adc    ebp,ebx
  4094ba:	mov    esi,0xc5157908
  4094bf:	sub    esi,DWORD PTR [esi]
  4094c1:	mov    eax,0xd1d7d071
  4094c6:	repz enter 0x7283,0x5b
  4094cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094cc:	cdq    
  4094cd:	adc    BYTE PTR [edx-0x30420f96],bh
  4094d3:	or     dh,BYTE PTR [edi+0x4076f30b]
  4094d9:	xor    eax,0x6deabf51
  4094de:	loop   0x4094be
  4094e0:	cmp    al,0x8f
  4094e2:	pop    ds
  4094e3:	in     eax,dx
  4094e4:	mov    al,0x3
  4094e6:	push   0xffffffdc
  4094e8:	call   0xa810c9d
  4094ed:	xchg   ebp,eax
  4094ee:	int    0x26
  4094f0:	inc    edi
  4094f1:	xacquire xchg BYTE PTR [eax],ch
  4094f4:	test   eax,0x168783ad
  4094f9:	ficom  DWORD PTR ds:0xe29b29
  4094ff:	adc    eax,0x5640678a
  409504:	jmp    0x95f273c6
  409509:	aaa    
  40950a:	outs   dx,DWORD PTR ds:[esi]
  40950b:	pop    ds
  40950c:	cmp    DWORD PTR [ecx+0x4d],edx
  40950f:	mov    esp,ecx
  409511:	jecxz  0x4094b2
  409513:	or     bh,ch
  409515:	adc    eax,0x2bf0b257
  40951a:	ins    BYTE PTR es:[edi],dx
  40951b:	hlt    
  40951c:	xor    cl,ch
  40951e:	jbe    0x409504
  409520:	push   edi
  409521:	jmp    0x8528:0x1f3656d3
  409528:	out    dx,eax
  409529:	or     dl,bh
  40952b:	pop    es
  40952c:	add    BYTE PTR [edx+0x245c205e],bl
  409532:	mov    bh,0x65
  409534:	call   0x9c2d1dbb
  409539:	pushf  
  40953a:	repz jo 0x409553
  40953d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40953e:	(bad)  
  409540:	mov    edi,0x85e09efe
  409545:	sar    ecx,0x9d
  409548:	data16 jns 0x4095ae
  40954b:	push   es
  40954c:	jmp    0x585c5429
  409551:	lods   al,BYTE PTR ds:[esi]
  409552:	mov    al,0xcd
  409554:	xor    DWORD PTR [edx-0x6b735983],ebp
  40955a:	xchg   edi,eax
  40955b:	mov    edx,0xe85ec1a8
  409560:	out    dx,al
  409561:	sub    eax,0xf8dbbad7
  409566:	mov    edi,0xce759798
  40956b:	test   BYTE PTR [ebp+edx*2-0x52],dl
  40956f:	add    bh,BYTE PTR [edi-0x34fe5b94]
  409575:	xchg   ebx,eax
  409576:	rcr    bh,1
  409578:	les    ecx,FWORD PTR [edx+0x69]
  40957b:	ret    
  40957c:	and    BYTE PTR [eax+0x1a],0x1a
  409580:	inc    edx
  409581:	sar    BYTE PTR [ebp+0x51972c2f],0x55
  409588:	ins    BYTE PTR es:[edi],dx
  409589:	and    al,0x87
  40958b:	jge    0x40959f
  40958d:	ds mov gs,ebp
  409590:	fcmovnu st,st(6)
  409592:	out    dx,al
  409593:	ret    
  409594:	adc    ah,BYTE PTR [edx+ecx*2-0xe]
  409598:	add    al,0x2c
  40959a:	aad    0x3d
  40959c:	xchg   esp,eax
  40959d:	mov    esp,0xd6c28a85
  4095a2:	mov    bl,0x13
  4095a4:	int3   
  4095a5:	or     ah,ah
  4095a7:	xchg   DWORD PTR [ebx],edi
  4095a9:	xchg   esi,eax
  4095aa:	test   al,0x1d
  4095ac:	div    DWORD PTR [ebx]
  4095ae:	(bad)  
  4095af:	scas   al,BYTE PTR es:[edi]
  4095b0:	jmp    0x1041fa15
  4095b5:	(bad)  
  4095b6:	cmp    BYTE PTR [eax+0x5ddb0f9d],dl
  4095bc:	mov    al,0x3b
  4095be:	push   ecx
  4095bf:	loop   0x40963c
  4095c1:	add    BYTE PTR [eax],0xab
  4095c4:	and    al,0x43
  4095c6:	pop    edx
  4095c7:	(bad)  
  4095c8:	fcmovnb st,st(6)
  4095ca:	mov    bh,0xcd
  4095cc:	out    dx,eax
  4095cd:	lods   al,BYTE PTR ds:[esi]
  4095ce:	dec    esi
  4095cf:	in     al,0x6
  4095d1:	sbb    bl,bl
  4095d3:	aad    0x96
  4095d5:	xchg   ecx,eax
  4095d6:	jns    0x4095f7
  4095d8:	push   ecx
  4095d9:	(bad)  
  4095da:	sub    BYTE PTR [ecx],ch
  4095dc:	ins    DWORD PTR es:[edi],dx
  4095dd:	adc    al,0x17
  4095df:	mov    ah,0x8d
  4095e1:	and    al,0xfb
  4095e3:	jg     0x40959b
  4095e5:	call   0x6dc09826
  4095ea:	out    0x5b,al
  4095ec:	xor    al,0xf9
  4095ee:	lock push 0xffffffd8
  4095f1:	mov    ebx,fs
  4095f3:	xchg   edi,eax
  4095f4:	ss push ss
  4095f6:	icebp  
  4095f7:	popa   
  4095f8:	sti    
  4095f9:	dec    esp
  4095fa:	and    esi,DWORD PTR [esi]
  4095fc:	int3   
  4095fd:	jbe    0x409650
  4095ff:	rol    DWORD PTR [esi],cl
  409601:	in     eax,dx
  409602:	pop    ecx
  409603:	xor    al,0x48
  409605:	xchg   DWORD PTR [eax-0x49],esi
  409608:	nop
  409609:	gs push cs
  40960b:	ficomp WORD PTR gs:[ebx-0x61b4ec6c]
  409612:	mov    bl,al
  409614:	xor    eax,0xd13c8f48
  409619:	jo     0x409642
  40961b:	outs   dx,BYTE PTR ds:[esi]
  40961c:	aas    
  40961d:	dec    eax
  40961e:	iret   
  40961f:	mov    DWORD PTR [eax+0x7],ebx
  409622:	es xchg ebp,eax
  409624:	sti    
  409625:	lock sub dl,BYTE PTR [ebx+0x3c]
  409629:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40962a:	pop    ds
  40962b:	stos   DWORD PTR es:[edi],eax
  40962c:	in     eax,0xa3
  40962e:	push   edx
  40962f:	inc    edx
  409630:	div    DWORD PTR [edx]
  409632:	cdq    
  409633:	jne    0x4095f2
  409635:	xchg   BYTE PTR [edx+0xb06b378],cl
  40963b:	rcr    DWORD PTR [esp+esi*8],cl
  40963e:	mov    ebx,0xb2346fd7
  409643:	repnz sub bl,BYTE PTR ds:0x846e0bff
  40964a:	(bad)  
  40964b:	fwait
  40964c:	dec    edx
  40964d:	mov    ds:0x40c16d3b,eax
  409652:	in     al,0xb3
  409654:	jb     0x409627
  409656:	in     al,dx
  409657:	(bad)  
  409659:	js     0x40968e
  40965b:	retf   
  40965c:	ret    
  40965d:	aam    0x90
  40965f:	dec    eax
  409660:	mov    ah,0x83
  409662:	pop    ds
  409663:	cmp    DWORD PTR [esi+0x272bd7ca],eax
  409669:	js     0x4096d6
  40966b:	dec    ebx
  40966c:	out    0x19,eax
  40966e:	fwait
  40966f:	(bad)  
  409670:	jge    0x409658
  409672:	lock push ebp
  409674:	jmp    FWORD PTR [esp+ebx*1]
  409677:	xchg   DWORD PTR [ebp+0x4ad14d2],edi
  40967d:	lds    edx,FWORD PTR [ebx+0x5ae9cb6a]
  409683:	stos   BYTE PTR es:[edi],al
  409684:	fld    TBYTE PTR [esi-0x66080cff]
  40968a:	hlt    
  40968b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40968c:	test   DWORD PTR [esp+ebp*4+0x27],esi
  409690:	int3   
  409691:	xlat   BYTE PTR ds:[ebx]
  409692:	fstp   TBYTE PTR [eax+0x65]
  409695:	mov    ds:0x3a039e20,al
  40969a:	lea    esp,[esi+0x58c12767]
  4096a0:	jns    0x4096ca
  4096a2:	cld    
  4096a3:	fistp  QWORD PTR [esi-0x4f]
  4096a6:	xchg   ecx,eax
  4096a7:	cmp    edi,eax
  4096a9:	lods   al,BYTE PTR ds:[esi]
  4096aa:	mov    ah,0xb6
  4096ac:	stc    
  4096ad:	fs iret 
  4096af:	ret    0x29c2
  4096b2:	mov    dl,0x3c
  4096b4:	lock pop esp
  4096b6:	shl    BYTE PTR [ecx-0x644b0e3],1
  4096bc:	jg     0x4096a9
  4096be:	xor    eax,0xa4a8f74e
  4096c3:	jle    0x4096f5
  4096c5:	cld    
  4096c6:	push   es
  4096c7:	fwait
  4096c8:	loopne 0x4096da
  4096ca:	dec    ebx
  4096cb:	cmc    
  4096cc:	pop    es
  4096cd:	xor    bl,dl
  4096cf:	mov    dl,0x5f
  4096d1:	and    al,0x9d
  4096d3:	hlt    
  4096d4:	ror    BYTE PTR [eax+esi*8+0x1fcd1c47],1
  4096db:	out    0xfa,al
  4096dd:	loope  0x4096a7
  4096df:	push   esi
  4096e0:	loopne 0x4096f2
  4096e2:	scas   eax,DWORD PTR es:[edi]
  4096e3:	loope  0x4096f4
  4096e5:	mov    eax,ds:0xbffcfc1a
  4096ea:	push   es
  4096eb:	fs jmp 0x9f87d17
  4096f1:	aaa    
  4096f2:	in     al,dx
  4096f3:	repnz push cs
  4096f5:	ss mov ebp,ebx
  4096f8:	xor    eax,0xffffffba
  4096fb:	rcr    DWORD PTR [esi-0x5e178e08],cl
  409701:	jbe    0x4096e0
  409703:	imul   esi,ebp,0xa84c799d
  409709:	rcl    eax,cl
  40970b:	ficom  WORD PTR [edi+0x5d]
  40970e:	icebp  
  40970f:	and    al,0x63
  409711:	jmp    0x4096e7
  409713:	push   ebp
  409714:	cwde   
  409715:	pusha  
  409716:	ins    DWORD PTR es:[edi],dx
  409717:	rcl    ah,0x30
  40971a:	jge    0x40973d
  40971c:	fld    QWORD PTR [ebx-0xc]
  40971f:	xchg   esi,eax
  409720:	neg    BYTE PTR [esi+0x15a4e5df]
  409726:	repnz aad 0x1
  409729:	in     al,0xae
  40972b:	aaa    
  40972c:	mov    ecx,0x8ba17f11
  409731:	adc    ebx,DWORD PTR [eax+0x33928757]
  409737:	jbe    0x4096cf
  409739:	imul   edi,DWORD PTR [ecx-0x79dee53e],0x64504f5e
  409743:	adc    eax,0xb35682fe
  409748:	mov    ebp,eax
  40974a:	out    dx,eax
  40974b:	inc    edx
  40974c:	pop    ss
  40974d:	mov    eax,0x6d1915f7
  409752:	sbb    al,0xca
  409754:	addr16 ja 0x40971f
  409757:	sub    ch,BYTE PTR [ebx]
  409759:	or     al,BYTE PTR [eax+edx*8+0x4f]
  40975d:	push   eax
  40975e:	jae    0x4097df
  409760:	popf   
  409761:	push   ds
  409762:	inc    ecx
  409763:	imul   DWORD PTR [edi]
  409765:	addr16 mov ebx,0xb9af6765
  40976b:	and    DWORD PTR [esi+esi*4],0x41
  40976f:	pop    ecx
  409770:	js     0x40974a
  409772:	push   cs
  409773:	pop    ebp
  409774:	mov    ah,0xd0
  409776:	xor    ch,BYTE PTR [esi]
  409778:	sbb    BYTE PTR [ebx-0x29],cl
  40977b:	push   0xfffffff3
  40977d:	icebp  
  40977e:	push   0xffffffc1
  409780:	sbb    al,0x2f
  409782:	or     bl,BYTE PTR [edi]
  409784:	fcmovnbe st,st(2)
  409786:	add    DWORD PTR [edx-0x34cd1f65],edx
  40978c:	pop    ebx
  40978d:	call   0xac812220
  409792:	add    esi,DWORD PTR [ebp+0x5f]
  409795:	xor    edi,DWORD PTR [ebx+0x44]
  409798:	adc    ch,BYTE PTR [eax-0x23]
  40979b:	push   0x3651d3c7
  4097a0:	mov    cl,0x37
  4097a2:	loope  0x409730
  4097a4:	mov    al,ds:0x95b4f8bd
  4097a9:	sub    dl,BYTE PTR [ecx]
  4097ab:	popf   
  4097ac:	fld    DWORD PTR [ebx]
  4097ae:	xchg   esp,eax
  4097af:	loopne 0x409821
  4097b1:	dec    bp
  4097b3:	mov    ecx,0xe536738b
  4097b8:	aad    0xaa
  4097ba:	sahf   
  4097bb:	fisttp WORD PTR [ebx+edi*2-0xd]
  4097bf:	sub    al,0xc6
  4097c1:	xchg   esi,eax
  4097c2:	in     al,0xc7
  4097c4:	addr16 push ebx
  4097c6:	fwait
  4097c7:	test   al,0xbd
  4097c9:	js     0x409839
  4097cb:	bound  ebp,QWORD PTR [ebx-0x14101470]
  4097d1:	and    ebx,DWORD PTR [ebp+0xb]
  4097d4:	call   0x5782:0xfe4a68c1
  4097db:	xchg   edi,eax
  4097dc:	xchg   DWORD PTR [ebx+edi*2-0x61],edi
  4097e0:	add    al,0xec
  4097e2:	inc    eax
  4097e3:	mov    ds:0x775fbb8b,al
  4097e8:	(bad)  
  4097e9:	outs   dx,DWORD PTR ds:[esi]
  4097ea:	inc    esp
  4097eb:	into   
  4097ec:	pop    ebp
  4097ed:	jle    0x40986c
  4097ef:	add    eax,0xcadb0d08
  4097f4:	pop    edx
  4097f5:	fdiv   DWORD PTR [eax+0x55]
  4097f8:	in     al,0x75
  4097fa:	or     ch,BYTE PTR [edx]
  4097fc:	ins    BYTE PTR es:[edi],dx
  4097fd:	mov    ah,0xa7
  4097ff:	idiv   DWORD PTR ds:0xb2356692
  409805:	dec    edi
  409806:	jge    0x40987f
  409808:	and    eax,0xf022a136
  40980d:	or     DWORD PTR [edx+esi*2],eax
  409810:	lahf   
  409811:	mov    DWORD PTR [ebp+ebx*2-0x715d9409],ebx
  409818:	lock and BYTE PTR [eax-0x10b2ca4f],ch
  40981f:	xchg   esi,eax
  409820:	aas    
  409821:	jl     0x409811
  409823:	clc    
  409824:	aam    0xed
  409826:	xor    edx,DWORD PTR [ecx]
  409828:	mov    esi,0xb78c554b
  40982d:	sub    BYTE PTR [ebx-0x75c09758],0x56
  409834:	adc    DWORD PTR [esi-0x1e227116],esi
  40983a:	inc    edx
  40983b:	loope  0x409892
  40983d:	arpl   WORD PTR [ebx-0x20e36fb],cx
  409843:	pusha  
  409844:	push   ebx
  409845:	rcl    cl,0x8a
  409848:	jge    0x4097d7
  40984a:	cmc    
  40984b:	test   BYTE PTR [edx-0x42],0xb3
  40984f:	adc    eax,0x5c5fd972
  409854:	push   ecx
  409855:	imul   BYTE PTR [esp+edx*4+0x1b955ff0]
  40985c:	lahf   
  40985d:	dec    ecx
  40985e:	xchg   esi,eax
  40985f:	mov    al,0xf2
  409861:	cmp    eax,0x8d130f07
  409866:	jne    0x4098a2
  409868:	test   BYTE PTR [eax-0x1a],0x31
  40986c:	inc    ebx
  40986d:	adc    al,BYTE PTR [ebx-0x5408be90]
  409873:	sub    BYTE PTR [edx+0x677d788f],cl
  409879:	inc    edi
  40987a:	in     eax,0x5f
  40987c:	push   edi
  40987d:	xchg   esi,eax
  40987e:	mov    edi,DWORD PTR [ebx]
  409880:	or     eax,0xca923270
  409885:	mov    DWORD PTR [ecx],edx
  409887:	inc    edx
  409888:	sbb    eax,0x9e587c5e
  40988d:	loope  0x4098ee
  40988f:	dec    ecx
  409890:	dec    ecx
  409891:	loopne 0x409856
  409893:	pop    esi
  409894:	fdivr  DWORD PTR [edi]
  409896:	jge    0x40988e
  409898:	dec    edi
  409899:	mov    bh,0x3f
  40989b:	(bad)  
  40989c:	mov    dl,0x4
  40989e:	jl     0x409826
  4098a0:	pop    es
  4098a1:	fidivr WORD PTR [edi+eiz*4+0x12]
  4098a5:	mov    ss,WORD PTR [edi+0x7f]
  4098a8:	(bad)  
  4098a9:	adc    ebx,DWORD PTR [edi-0x42]
  4098ac:	in     al,dx
  4098ad:	fcom   QWORD PTR [eax]
  4098af:	ficom  DWORD PTR [ecx]
  4098b1:	lods   al,BYTE PTR ds:[esi]
  4098b2:	imul   edx,DWORD PTR [edi+0x58],0xaed71e25
  4098b9:	cld    
  4098ba:	ret    
  4098bb:	outs   dx,BYTE PTR ds:[esi]
  4098bc:	jae    0x4098aa
  4098be:	sbb    al,0x58
  4098c0:	(bad)  
  4098c1:	mov    gs,WORD PTR [edi+edx*2]
  4098c4:	sbb    DWORD PTR [edx],esp
  4098c6:	ins    DWORD PTR es:[edi],dx
  4098c7:	call   0x33852912
  4098cc:	or     dh,BYTE PTR [ebp+0xd875acd]
  4098d2:	dec    eax
  4098d3:	daa    
  4098d4:	fwait
  4098d5:	sbb    al,0x2b
  4098d7:	popf   
  4098d8:	ja     0x40990a
  4098da:	jmp    0xa341713
  4098df:	adc    cl,ah
  4098e1:	hlt    
  4098e2:	pop    es
  4098e3:	pop    ebp
  4098e4:	inc    BYTE PTR [eax]
  4098e6:	imul   ebp,DWORD PTR [ebx+edi*2-0x3f],0xffffffb6
  4098eb:	and    dh,dl
  4098ed:	pop    ebx
  4098ee:	mov    ds:0x64575c1,eax
  4098f3:	push   ds
  4098f4:	mov    ecx,0xe37eed8b
  4098f9:	cmp    DWORD PTR [ebx+esi*4+0x42056956],ebp
  409900:	das    
  409901:	scas   eax,DWORD PTR es:[edi]
  409902:	lock imul eax,DWORD PTR [eax-0x22edb28e],0x1
  40990a:	inc    esi
  40990b:	(bad)  
  40990c:	rcl    BYTE PTR [esi],1
  40990e:	in     eax,0x8d
  409910:	stc    
  409911:	aam    0xbe
  409913:	inc    edx
  409914:	adc    eax,0xae17c49d
  409919:	push   ebx
  40991a:	pop    esp
  40991b:	in     eax,0xc6
  40991d:	mov    ds:0x38a2c1dd,al
  409922:	xchg   esp,eax
  409923:	sar    BYTE PTR [ecx],cl
  409925:	sar    edx,cl
  409927:	pop    DWORD PTR [edi+0x45]
  40992a:	cwde   
  40992b:	jb     0x40993e
  40992d:	or     BYTE PTR [ecx-0x55],bh
  409930:	daa    
  409931:	(bad)
  409935:	adc    al,0x4b
  409937:	mov    edx,DWORD PTR [eax+0x65427ecf]
  40993d:	push   esi
  40993e:	xlat   BYTE PTR ds:[ebx]
  40993f:	adc    DWORD PTR [eax+0x15],0x71
  409943:	xchg   esi,eax
  409944:	mov    dl,0x31
  409946:	icebp  
  409947:	pop    ecx
  409948:	pusha  
  409949:	jecxz  0x409967
  40994b:	push   edx
  40994c:	ds cmp al,al
  40994f:	jmp    0x97db:0xf75bd07e
  409956:	fiadd  WORD PTR [edx+edi*8]
  409959:	out    dx,al
  40995a:	sbb    BYTE PTR [edx],al
  40995c:	pop    ebp
  40995d:	push   ebp
  40995e:	fwait
  40995f:	mov    ds:0xc65ba47a,al
  409964:	sbb    eax,0x9cbf36ab
  409969:	leave  
  40996a:	xor    al,0x55
  40996c:	arpl   WORD PTR [esi+0x37],bx
  40996f:	sbb    al,0xbd
  409971:	dec    eax
  409972:	hlt    
  409973:	hlt    
  409974:	sbb    ebp,DWORD PTR [esi-0x6167f87]
  40997a:	adc    bl,ch
  40997c:	fild   QWORD PTR [ecx-0x5e]
  40997f:	push   es
  409980:	mov    esp,0x86eec929
  409985:	int    0x21
  409987:	pop    edx
  409988:	shl    DWORD PTR [ecx],1
  40998a:	inc    edx
  40998b:	push   ebp
  40998c:	dec    edi
  40998d:	fsubr  DWORD PTR [edx]
  40998f:	jmp    0x4099e8
  409991:	fidivr WORD PTR [ebp-0x27]
  409994:	adc    al,ch
  409996:	mov    ah,0xc5
  409998:	pop    ebx
  409999:	adc    dh,BYTE PTR [edx+ebx*8]
  40999c:	fiadd  WORD PTR [ecx+0x11]
  40999f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099a0:	mov    ch,0xef
  4099a2:	and    DWORD PTR [edi],edi
  4099a4:	push   edx
  4099a5:	(bad)  
  4099a6:	adc    al,0x3b
  4099a8:	pop    edi
  4099a9:	dec    ecx
  4099aa:	loopne 0x4099e3
  4099ac:	setnp  BYTE PTR [eax]
  4099af:	sti    
  4099b0:	mov    esi,0xdd0a45ae
  4099b5:	adc    BYTE PTR [ecx+0xd],cl
  4099b8:	js     0x4099c6
  4099ba:	sub    al,BYTE PTR [edx]
  4099bc:	jbe    0x409976
  4099be:	imul   edi,DWORD PTR [ecx],0xffffffd2
  4099c1:	sub    BYTE PTR [esi-0x44],dl
  4099c4:	iret   
  4099c5:	xor    eax,0x3790ad0b
  4099ca:	je     0x40995d
  4099cc:	add    al,0x2c
  4099ce:	adc    al,0x9e
  4099d0:	and    edx,esi
  4099d2:	pop    ss
  4099d3:	sub    DWORD PTR [edi+ebp*2-0x46efaf22],eax
  4099da:	cmc    
  4099db:	push   eax
  4099dc:	push   es
  4099dd:	jl     0x4099a8
  4099df:	jecxz  0x4099ba
  4099e1:	mov    dl,0xb9
  4099e3:	dec    ecx
  4099e4:	loope  0x409a1c
  4099e6:	xor    dl,BYTE PTR [edx]
  4099e8:	ja     0x409a3b
  4099ea:	xor    edi,eax
  4099ec:	xchg   eax,edx
  4099ee:	push   cs
  4099ef:	ffreep st(6)
  4099f1:	sti    
  4099f2:	sbb    eax,0xc11e8cf
  4099f7:	stc    
  4099f8:	dec    edi
  4099f9:	mov    BYTE PTR [ebp-0x128844f1],dl
  4099ff:	sub    esp,edi
  409a01:	cmc    
  409a02:	and    DWORD PTR [ebp-0x253cd828],edx
  409a08:	mov    ds:0xdfc76b93,eax
  409a0d:	jno    0x409990
  409a0f:	xchg   BYTE PTR [esi+0x29],cl
  409a12:	(bad)  
  409a13:	xchg   ecx,eax
  409a14:	stos   BYTE PTR es:[edi],al
  409a15:	xchg   ecx,eax
  409a16:	xor    eax,DWORD PTR ds:0x3ea659a
  409a1c:	dec    eax
  409a1d:	adc    bh,BYTE PTR [eax]
  409a1f:	and    BYTE PTR [esi+ebx*1],bl
  409a22:	xchg   esp,eax
  409a23:	adc    bh,BYTE PTR [ebp-0x3f]
  409a26:	jg     0x4099ed
  409a28:	sub    cl,BYTE PTR [ebp-0x250e8dbc]
  409a2e:	fadd   DWORD PTR [eax-0x4d]
  409a31:	jns    0x409a6d
  409a33:	cmp    BYTE PTR [edi-0x6e],dh
  409a36:	shr    DWORD PTR [edi-0x4d],0xee
  409a3a:	jne    0x409a02
  409a3c:	xchg   esi,eax
  409a3d:	jbe    0x409ab6
  409a3f:	inc    esp
  409a40:	pop    ss
  409a41:	fld    DWORD PTR [edi-0x229ccefc]
  409a47:	xor    eax,0x4150a81c
  409a4c:	cwde   
  409a4d:	lods   al,BYTE PTR ds:[esi]
  409a4e:	xchg   ecx,eax
  409a4f:	pop    esi
  409a50:	jge    0x409a20
  409a52:	sbb    BYTE PTR [edi+0x1323c914],dl
  409a58:	jbe    0x409aa7
  409a5a:	test   edi,ecx
  409a5c:	in     al,dx
  409a5d:	pusha  
  409a5e:	outs   dx,DWORD PTR ds:[esi]
  409a5f:	cmp    DWORD PTR [ebp+0x325bf66a],ebp
  409a65:	cmp    al,0x32
  409a67:	xor    BYTE PTR [ebx],dl
  409a69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a6a:	nop
  409a6b:	retf   0x4f07
  409a6e:	inc    eax
  409a6f:	ins    BYTE PTR es:[edi],dx
  409a70:	jp     0x409a13
  409a72:	pop    ebp
  409a73:	sbb    edx,esi
  409a75:	sub    BYTE PTR [ebp-0x3e],bh
  409a78:	and    eax,0xe25af1d5
  409a7d:	int3   
  409a7e:	jecxz  0x409a7b
  409a80:	fstp   TBYTE PTR [ecx+0x6d]
  409a83:	sbb    edx,DWORD PTR ds:0xab313d13
  409a89:	js     0x409ae9
  409a8b:	push   ebx
  409a8c:	stos   DWORD PTR es:[edi],eax
  409a8d:	aad    0x33
  409a8f:	add    esi,esp
  409a91:	stos   BYTE PTR es:[edi],al
  409a92:	in     al,0xc2
  409a94:	mov    ebp,0xd66b3620
  409a99:	or     BYTE PTR [eax+0x6d],bl
  409a9c:	retf   0x319e
  409a9f:	daa    
  409aa0:	not    DWORD PTR [ecx-0x6b540efc]
  409aa6:	add    esp,DWORD PTR [edi+0x15fc85b7]
  409aac:	sub    eax,0x323ff82b
  409ab1:	pop    esi
  409ab2:	mov    ch,0x2c
  409ab4:	outs   dx,DWORD PTR ds:[esi]
  409ab5:	fimul  DWORD PTR [ebp+0x17]
  409ab8:	sbb    al,0xf
  409aba:	shr    bl,0xd8
  409abd:	lods   eax,DWORD PTR ds:[esi]
  409abe:	mov    ecx,0xbf6ff6e8
  409ac3:	jnp    0x409a5b
  409ac5:	dec    ecx
  409ac6:	test   eax,0x436db1ee
  409acb:	xchg   ecx,eax
  409acc:	pushf  
  409acd:	pop    esp
  409ace:	xchg   edx,eax
  409acf:	or     bh,BYTE PTR [edx-0x48]
  409ad2:	xor    eax,0xd0240ffb
  409ad7:	mov    eax,ds:0xf61c4d65
  409adc:	xor    DWORD PTR [ebp+eiz*4-0x7e],esi
  409ae0:	aam    0x1b
  409ae2:	(bad)  
  409ae3:	mov    esi,0x49a5e0da
  409ae8:	hlt    
  409ae9:	push   ecx
  409aea:	sbb    eax,0x96c2227c
  409aef:	xchg   ebx,eax
  409af0:	stos   BYTE PTR es:[edi],al
  409af1:	arpl   WORD PTR [ebp+0x22bcd6b],cx
  409af7:	outs   dx,BYTE PTR ds:[esi]
  409af8:	sub    ch,BYTE PTR [edx]
  409afa:	cmp    al,0x9a
  409afc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409afd:	fwait
  409afe:	push   0xffffffee
  409b00:	in     al,dx
  409b01:	mov    ds:0x8d11a330,al
  409b06:	push   es
  409b07:	push   edx
  409b08:	mov    edi,0x3a16edeb
  409b0d:	or     bh,BYTE PTR [eax+ecx*4-0x5afadad1]
  409b14:	inc    esi
  409b15:	jne    0x409acc
  409b17:	aam    0x87
  409b19:	icebp  
  409b1a:	or     DWORD PTR [edx],0x6b
  409b1d:	into   
  409b1e:	xor    al,bl
  409b20:	in     al,0x5c
  409b22:	sbb    dh,al
  409b24:	ror    BYTE PTR [eax-0x2e2ca4fa],cl
  409b2a:	push   eax
  409b2b:	mov    eax,ds:0xaef5a9bc
  409b30:	xchg   ebp,eax
  409b31:	mov    ebp,0x5c2c0204
  409b36:	cmp    DWORD PTR [ebx+0x7f],ebp
  409b39:	mov    eax,0x173d40e3
  409b3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b3f:	sar    BYTE PTR [ebp-0x130a2b],cl
  409b45:	mov    es,WORD PTR [esi+0xc]
  409b48:	repz call 0xa2f3:0xc8a4c377
  409b50:	add    al,0x8a
  409b52:	jmp    0xeb2be7aa
  409b57:	xchg   esp,eax
  409b58:	dec    eax
  409b59:	sbb    dl,BYTE PTR ds:0xa80d9941
  409b5f:	in     al,dx
  409b60:	sbb    bh,BYTE PTR [esp+ecx*8]
  409b63:	jle    0x409bb8
  409b65:	pop    ss
  409b66:	(bad)  
  409b67:	xchg   esp,eax
  409b68:	push   cs
  409b69:	fmul   DWORD PTR [esi]
  409b6b:	xlat   BYTE PTR ds:[ebx]
  409b6c:	sub    BYTE PTR [ebx-0x6675918e],dl
  409b72:	mov    bh,0xb4
  409b74:	cmp    esi,DWORD PTR ss:[esi+0x5c]
  409b78:	mov    ebp,0xe275d8e7
  409b7d:	mov    ds:0xe45d2064,al
  409b82:	jnp    0x409b86
  409b84:	mov    ebp,0x2ca1ed20
  409b89:	imul   esi,DWORD PTR [esi-0x6410d014],0xc87110ab
  409b93:	cmp    eax,0xa9fe85cb
  409b98:	jmp    0x5f9a:0x14fc4f12
  409b9f:	dec    edx
  409ba0:	and    DWORD PTR [edx],esp
  409ba2:	mov    ebx,0x60808320
  409ba7:	stos   DWORD PTR es:[edi],eax
  409ba8:	retf   
  409ba9:	adc    cl,dh
  409bab:	mov    edx,0x92c2927a
  409bb0:	cmp    eax,0x229f5c1c
  409bb5:	sub    eax,0x56612ebd
  409bba:	jg     0x409bdd
  409bbc:	cmp    BYTE PTR [ecx],bh
  409bbe:	(bad)  
  409bc0:	push   cs
  409bc1:	and    al,0xd7
  409bc3:	mov    BYTE PTR [edi+ecx*8-0x4e],cl
  409bc7:	out    dx,al
  409bc8:	mov    WORD PTR [edx-0x1f238896],es
  409bce:	and    BYTE PTR [ecx-0x215ac844],bl
  409bd4:	xchg   edi,esi
  409bd6:	dec    edi
  409bd7:	xchg   esp,eax
  409bd8:	fs push 0x75
  409bdb:	xor    BYTE PTR [ebp-0x7553e2b9],0x92
  409be2:	loop   0x409c59
  409be4:	push   cs
  409be5:	in     al,dx
  409be6:	xchg   BYTE PTR [edx+0x7e],bh
  409be9:	std    
  409bea:	inc    edx
  409beb:	das    
  409bec:	mov    bh,BYTE PTR [ecx]
  409bee:	push   0xf5d41b5b
  409bf3:	cmp    BYTE PTR [ebx+0x1f],bh
  409bf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bf7:	cmp    eax,0x64d400a5
  409bfc:	sbb    BYTE PTR [esp+esi*8+0x711cb70d],dh
  409c03:	add    eax,0x137b2d6d
  409c08:	data16 cld 
  409c0a:	rcr    BYTE PTR [edi+eiz*1],cl
  409c0d:	cmp    DWORD PTR [ecx-0x5f],ecx
  409c10:	jecxz  0x409c53
  409c12:	fisubr WORD PTR [edx+ebp*1+0x7b]
  409c16:	je     0x409c31
  409c18:	lea    ebp,[edi-0x1ee2418b]
  409c1e:	push   cs
  409c1f:	and    al,0x10
  409c21:	imul   ecx,ebx,0x3d660020
  409c27:	mov    eax,ds:0x2bf01a9d
  409c2c:	lds    edi,FWORD PTR [ebx-0xad92c88]
  409c32:	clc    
  409c33:	aas    
  409c34:	sar    DWORD PTR [ecx+0x7b],cl
  409c37:	jge    0x409c25
  409c39:	loope  0x409be9
  409c3b:	in     eax,0xc3
  409c3d:	mov    cl,0x18
  409c3f:	fcomp  QWORD PTR [ebx]
  409c41:	test   eax,0xf4eaed9e
  409c46:	rep ins DWORD PTR es:[edi],dx
  409c48:	shr    DWORD PTR [edi+0x46],0x51
  409c4c:	dec    edx
  409c4d:	mov    cl,0xb3
  409c4f:	test   al,0x57
  409c51:	outs   dx,DWORD PTR ds:[esi]
  409c52:	mov    ah,0xfe
  409c54:	and    ecx,DWORD PTR [ebx+0x5c2cf395]
  409c5a:	cmp    BYTE PTR [eax+esi*8-0x59],al
  409c5e:	sub    esp,ebp
  409c60:	or     eax,0xe0b238e1
  409c65:	push   ds
  409c66:	add    BYTE PTR [edx],al
  409c68:	mov    BYTE PTR [edx-0x2039c429],cl
  409c6e:	cmp    edx,DWORD PTR [edi]
  409c70:	rcl    DWORD PTR [ecx],1
  409c72:	test   al,0x69
  409c74:	sbb    al,ah
  409c76:	loopne 0x409cac
  409c78:	or     BYTE PTR [ebp-0x12020d1a],dh
  409c7e:	(bad)  
  409c7f:	cld    
  409c80:	and    esp,DWORD PTR [edx+0x3d]
  409c83:	cdq    
  409c84:	cmc    
  409c85:	jecxz  0x409cda
  409c87:	imul   ecx,DWORD PTR [esi],0xadab7a9d
  409c8d:	mov    esi,0xe46013f5
  409c92:	pminsw mm2,QWORD PTR [eax]
  409c95:	cmp    edx,esi
  409c97:	mov    edx,0x5f351b5a
  409c9c:	adc    al,0x45
  409c9e:	push   ebx
  409c9f:	addr16 jle 0x409c23
  409ca2:	mov    esp,0x73c79780
  409ca7:	mov    edx,0x6cc3f928
  409cac:	adc    al,0x7e
  409cae:	fdiv   QWORD PTR [eax+0x20ca6e0d]
  409cb4:	pop    ss
  409cb5:	mov    ds:0x3548287c,eax
  409cbb:	out    dx,al
  409cbc:	fmul   DWORD PTR [ebp-0x451362bf]
  409cc2:	popf   
  409cc3:	mov    al,0xea
  409cc5:	test   al,0x71
  409cc7:	iret   
  409cc8:	add    eax,0xa07a1bdb
  409ccd:	xchg   esp,eax
  409cce:	jb     0x409cb8
  409cd0:	(bad)  
  409cd1:	add    ebx,DWORD PTR [eax]
  409cd3:	mov    eax,0xdb89fff3
  409cd8:	xor    BYTE PTR [eax],al
  409cda:	(bad)  
  409cdb:	jecxz  0x409caa
  409cdd:	adc    cl,BYTE PTR ds:0xce0c73f6
  409ce3:	test   DWORD PTR [edi],edx
  409ce5:	ret    
  409ce6:	loop   0x409d4c
  409ce8:	or     ebp,DWORD PTR [ecx-0x1]
  409ceb:	jns    0x409c7b
  409ced:	xchg   edi,eax
  409cee:	ss mov bh,0xa0
  409cf1:	cli    
  409cf2:	out    0xb3,eax
  409cf4:	xchg   BYTE PTR [esi+0x349f136e],al
  409cfa:	cmc    
  409cfb:	out    dx,al
  409cfc:	retf   
  409cfd:	mov    ebp,cs
  409cff:	cmc    
  409d00:	ret    0x4679
  409d03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d04:	sahf   
  409d05:	push   ebx
  409d06:	sub    ch,BYTE PTR [edx]
  409d08:	push   ds
  409d09:	dec    ebx
  409d0a:	fadd   QWORD PTR [esp+eiz*2]
  409d0d:	pop    esi
  409d0e:	sbb    eax,0x95465441
  409d13:	idiv   DWORD PTR [eax]
  409d15:	jg     0x409d00
  409d17:	inc    eax
  409d18:	sti    
  409d19:	mov    ebp,0xf850d8a9
  409d1e:	jmp    0x409d69
  409d20:	push   ebx
  409d21:	dec    eax
  409d22:	mov    al,ds:0x2574b3dd
  409d27:	xchg   ecx,eax
  409d28:	xlat   BYTE PTR ds:[ebx]
  409d29:	mov    ebp,0xb3bf2b0f
  409d2e:	xor    dl,bh
  409d30:	(bad)  
  409d31:	les    edx,FWORD PTR [esi-0x6c]
  409d34:	xchg   edi,eax
  409d35:	pop    edx
  409d36:	mov    al,0xc6
  409d38:	ins    DWORD PTR es:[edi],dx
  409d39:	pop    ecx
  409d3a:	mov    ebp,0x79212db8
  409d3f:	ret    
  409d40:	retf   0x4914
  409d43:	sbb    bh,dh
  409d45:	loope  0x409d33
  409d47:	adc    al,0x79
  409d49:	xchg   edi,eax
  409d4a:	enter  0xd36a,0x53
  409d4e:	push   ecx
  409d4f:	add    DWORD PTR [eax+0x24b20594],0x4a7bd0a7
  409d59:	ror    esp,0xe7
  409d5c:	shl    al,0xa
  409d5f:	pop    edi
  409d60:	(bad)  
  409d61:	in     al,dx
  409d62:	push   ss
  409d63:	mov    ch,0x1
  409d65:	fmul   st(3),st
  409d67:	frstor [ebx]
  409d69:	ja     0x409d0a
  409d6b:	fwait
  409d6c:	jb     0x409d91
  409d6e:	push   esp
  409d6f:	daa    
  409d70:	outs   dx,BYTE PTR ds:[esi]
  409d71:	aad    0xc6
  409d73:	loopne 0x409d19
  409d75:	mov    ds:0xffa4e3e0,al
  409d7a:	or     dh,BYTE PTR [esi+0x55b0591d]
  409d80:	es std 
  409d82:	dec    esi
  409d83:	ins    DWORD PTR es:[edi],dx
  409d84:	ss pop ds
  409d86:	xchg   edx,eax
  409d87:	pop    edi
  409d89:	pop    esp
  409d8a:	in     al,0xb7
  409d8c:	pop    eax
  409d8d:	aad    0x16
  409d8f:	fs sbb ebp,edx
  409d92:	loopne 0x409de4
  409d94:	les    ecx,FWORD PTR [esi-0x4754fd62]
  409d9a:	or     DWORD PTR [edx+0x5d],esi
  409d9d:	shld   DWORD PTR [ebx-0x7c],ecx,0x9
  409da2:	loope  0x409e0b
  409da4:	data16 mov bh,cl
  409da7:	sub    eax,0x6cf868f7
  409dac:	inc    esi
  409dad:	xor    BYTE PTR [ebp+0x2a],cl
  409db0:	enter  0x434,0x49
  409db4:	in     al,dx
  409db5:	out    0x46,al
  409db7:	xlat   BYTE PTR ds:[ebx]
  409db8:	lock leave 
  409dba:	sar    DWORD PTR ds:0x7d056f0,0x5a
  409dc1:	push   ebx
  409dc2:	or     BYTE PTR [edx],0x9a
  409dc5:	dec    esp
  409dc6:	test   eax,0x8b84e7ca
  409dcb:	cld    
  409dcc:	mov    esp,0xab6132c3
  409dd1:	ret    0x8b2f
  409dd4:	sbb    BYTE PTR [esi-0x66],al
  409dd7:	aad    0xb8
  409dd9:	in     al,dx
  409dda:	jl     0x409e51
  409ddc:	add    eax,0x9126cbc3
  409de1:	adc    esp,DWORD PTR [edx-0xd84e10d]
  409de7:	sub    esi,DWORD PTR [esi]
  409de9:	mov    bh,0xbe
  409deb:	push   0x4e
  409ded:	adc    esi,DWORD PTR [esi+0x3b]
  409df0:	jle    0x409e6c
  409df2:	call   0xbaf4:0xc9ee0826
  409df9:	jg     0x409e56
  409dfb:	loopne 0x409e30
  409dfd:	mov    dl,0x18
  409dff:	dec    esi
  409e00:	jo     0x409e7b
  409e02:	repz sbb BYTE PTR [ebx-0x53],ah
  409e06:	div    DWORD PTR [esp+esi*8]
  409e09:	or     DWORD PTR [ecx-0x56],esp
  409e0c:	mov    bl,BYTE PTR [edi+edi*8]
  409e0f:	aad    0x17
  409e11:	sbb    cl,BYTE PTR [edx]
  409e13:	and    DWORD PTR cs:[edx],eax
  409e16:	imul   eax,DWORD PTR [esp+eiz*8-0x45e06589],0xc4012b20
  409e21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e22:	jno    0x409e23
  409e24:	xchg   edi,eax
  409e25:	add    BYTE PTR [ebx+0x74],cl
  409e28:	add    eax,0xb6bce5cf
  409e2d:	cli    
  409e2e:	arpl   WORD PTR [edi+0x69],bp
  409e31:	in     eax,dx
  409e32:	dec    esp
  409e33:	cmp    bh,BYTE PTR [esi+0x27]
  409e36:	inc    eax
  409e37:	sahf   
  409e38:	je     0x409e0f
  409e3a:	scas   al,BYTE PTR es:[edi]
  409e3b:	call   FWORD PTR [eax+0x49]
  409e3e:	inc    esp
  409e3f:	xor    DWORD PTR [ebx-0x7200da62],ebx
  409e45:	cdq    
  409e46:	push   ebx
  409e47:	(bad)  
  409e49:	es inc edi
  409e4b:	mov    ah,0xa7
  409e4d:	sbb    BYTE PTR [ebx+0x14f81f31],bl
  409e53:	push   edx
  409e54:	gs lahf 
  409e56:	in     eax,0x79
  409e58:	out    dx,eax
  409e59:	lds    ebx,FWORD PTR [edx+0x13ee937d]
  409e5f:	and    BYTE PTR ds:[edx-0x7c],0xa5
  409e64:	leave  
  409e65:	or     esi,DWORD PTR [ebx+0x7fffcfb4]
  409e6b:	sub    al,0x5b
  409e6d:	pop    esi
  409e6e:	inc    esp
  409e6f:	jo     0x409e88
  409e71:	addr16 xchg esp,eax
  409e73:	aaa    
  409e74:	loope  0x409ef1
  409e76:	jmp    0x409e69
  409e78:	xchg   DWORD PTR [eax+0x76],ecx
  409e7b:	fiadd  WORD PTR [edx-0x31fb54ef]
  409e81:	rcl    BYTE PTR [ebx],cl
  409e83:	push   esp
  409e84:	sbb    cl,BYTE PTR [edx-0x54]
  409e87:	aad    0x46
  409e89:	inc    edx
  409e8a:	and    BYTE PTR [eax+0x7870e33e],ah
  409e90:	xor    esp,DWORD PTR [ebp-0x1042875f]
  409e96:	iret   
  409e97:	shr    BYTE PTR [ebx+eax*8-0x7c],1
  409e9b:	mov    cs,WORD PTR [edx+0x11dafdb5]
  409ea1:	jmp    0x7963:0x859249e6
  409ea8:	lea    esp,[ebp-0x2945687d]
  409eae:	aam    0x59
  409eb0:	inc    edx
  409eb1:	(bad)  
  409eb3:	aad    0x9f
  409eb5:	das    
  409eb6:	inc    ebx
  409eb7:	dec    eax
  409eb8:	out    0x60,eax
  409eba:	imul   edi,DWORD PTR [edx+0x249f97f8],0x15
  409ec1:	add    BYTE PTR [edi],0xbe
  409ec4:	(bad)  
  409ec5:	mov    ah,0xa0
  409ec7:	jb     0x409e50
  409ec9:	pushf  
  409eca:	fstp   DWORD PTR [ebx]
  409ecc:	cld    
  409ecd:	mov    edx,DWORD PTR [esi+0x1a]
  409ed0:	or     al,0xab
  409ed2:	xlat   BYTE PTR ds:[ebx]
  409ed3:	push   ds
  409ed4:	imul   edi,ecx,0x246cae46
  409eda:	pop    ecx
  409edb:	ss dec eax
  409edd:	push   ecx
  409ede:	or     BYTE PTR [esi+0x5a7ca465],bh
  409ee4:	sub    esp,DWORD PTR [eax-0x6824c95b]
  409eea:	dec    ecx
  409eeb:	jl     0x409ed5
  409eed:	(bad)  
  409eee:	lock xchg ax,ax
  409ef1:	(bad)  
  409ef2:	lock cmp ebp,DWORD PTR [edi+0x798b2fe1]
  409ef9:	xchg   esi,eax
  409efa:	and    DWORD PTR [ebx],edx
  409efc:	xlat   BYTE PTR ds:[ebx]
  409efd:	or     ebp,DWORD PTR [edi+eiz*2+0x19ee461b]
  409f04:	(bad)  
  409f05:	in     eax,0xea
  409f07:	test   BYTE PTR [edi+0x62],cl
  409f0a:	in     eax,0xc4
  409f0c:	add    bh,bh
  409f0e:	push   cs
  409f0f:	sbb    al,0x5c
  409f11:	stos   BYTE PTR es:[edi],al
  409f12:	stc    
  409f13:	jb     0x409ead
  409f15:	loopne 0x409f65
  409f17:	adc    cl,BYTE PTR [eax-0x3e727d68]
  409f1d:	mov    cl,0xf4
  409f1f:	retf   
  409f20:	ja     0x409f7e
  409f22:	pop    ecx
  409f23:	jge    0x409ed9
  409f25:	dec    edi
  409f26:	ret    0x1ffd
  409f29:	jb     0x409ebf
  409f2b:	outs   dx,BYTE PTR ds:[esi]
  409f2c:	push   ebx
  409f2d:	jo     0x409f05
  409f2f:	rcl    BYTE PTR [edx+0x3e],0xe8
  409f33:	or     ch,0xc3
  409f36:	cmp    al,0x92
  409f38:	cld    
  409f39:	and    BYTE PTR [ecx-0x3d],0x1d
  409f3d:	call   0xb912:0xc08bb61f
  409f44:	mov    ds:0x26e4e0d2,eax
  409f49:	cld    
  409f4a:	fwait
  409f4b:	aam    0x84
  409f4d:	push   eax
  409f4e:	xchg   ebx,eax
  409f4f:	cmp    edi,edx
  409f51:	jne    0x409ef1
  409f53:	(bad)  
  409f54:	mov    edi,0xf5f0d61d
  409f59:	rcr    BYTE PTR [ecx-0x59],cl
  409f5c:	xor    eax,0x8561ed06
  409f61:	mov    eax,ds:0xabb88386
  409f66:	dec    esi
  409f67:	shr    BYTE PTR [edx],0x92
  409f6a:	sti    
  409f6b:	jmp    0x855d:0xee530a4
  409f72:	and    BYTE PTR ds:0xa714ef9d,ah
  409f78:	out    dx,eax
  409f79:	lds    eax,FWORD PTR [edx+0x61]
  409f7c:	dec    edx
  409f7d:	mov    dh,0xb0
  409f7f:	fcom   DWORD PTR [ebx]
  409f81:	mov    esi,0xc485ab04
  409f86:	hlt    
  409f87:	lods   al,BYTE PTR ds:[esi]
  409f88:	(bad)  
  409f89:	cmc    
  409f8a:	pop    edx
  409f8b:	pop    ebp
  409f8c:	int3   
  409f8d:	shl    cl,0x51
  409f90:	test   BYTE PTR [esi+0x25],ch
  409f93:	sti    
  409f94:	aaa    
  409f95:	push   esp
  409f96:	popf   
  409f97:	popf   
  409f98:	xchg   bh,dl
  409f9a:	cmc    
  409f9b:	retf   0xcc8a
  409f9e:	(bad)  
  409f9f:	fcomp  DWORD PTR [ebp-0x3ac3325a]
  409fa5:	xchg   esi,eax
  409fa6:	fmul   DWORD PTR [edx-0x37b6e784]
  409fac:	outs   dx,BYTE PTR ds:[esi]
  409fad:	or     al,0x89
  409faf:	cdq    
  409fb0:	lds    esi,FWORD PTR ds:0xfc334e71
  409fb6:	fst    st(2)
  409fb8:	jge    0x409ffe
  409fba:	lock test al,0x3f
  409fbd:	ins    BYTE PTR es:[edi],dx
  409fbe:	call   0xce9684c7
  409fc3:	push   edi
  409fc4:	cmp    BYTE PTR [edi],bh
  409fc6:	mov    bl,0x68
  409fc8:	and    DWORD PTR [edx-0x645a2b87],ebp
  409fce:	xor    DWORD PTR [edx],ebx
  409fd0:	adc    al,0x4d
  409fd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409fd3:	das    
  409fd4:	add    DWORD PTR [edx+ecx*1-0xd],edi
  409fd8:	add    DWORD PTR [esi+0x46],edx
  409fdb:	fwait
  409fdc:	mov    WORD PTR [edx+esi*8],gs
  409fdf:	mov    edx,0xd68b32f2
  409fe4:	push   cs
  409fe5:	loop   0x40a059
  409fe7:	aaa    
  409fe8:	mov    ch,BYTE PTR [eax+0x68366d66]
  409fee:	call   0xc0c20b7a
  409ff3:	lods   al,BYTE PTR ds:[esi]
  409ff4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ff5:	mov    ecx,0xa4f862c6
  409ffa:	jmp    0x33ef:0x587a07f8
  40a001:	cs or  eax,0x1e58a9a2
  40a007:	sub    eax,0x921ed790
  40a00c:	sti    
  40a00d:	pop    DWORD PTR [esi]
  40a00f:	xchg   edi,eax
  40a010:	mov    esp,0x976bd187
  40a015:	lds    edi,FWORD PTR [edi+0x41]
  40a018:	outs   dx,BYTE PTR ds:[esi]
  40a019:	hlt    
  40a01a:	and    eax,0xef3e1e11
  40a01f:	xchg   ah,dh
  40a021:	xor    bl,BYTE PTR [edi]
  40a023:	mov    esp,0xcce80c47
  40a028:	jno    0x40a039
  40a02a:	out    dx,eax
  40a02b:	jge    0x40a014
  40a02d:	push   es
  40a02e:	xor    BYTE PTR [ebx+0x4c],dl
  40a031:	rcr    BYTE PTR [ebx-0x13],1
  40a034:	sbb    dl,0x28
  40a037:	pop    DWORD PTR [eax-0x5198d0ac]
  40a03d:	jo     0x40a0a2
  40a03f:	test   DWORD PTR [ebx+0x6a],ecx
  40a042:	xor    BYTE PTR [ebx],0xdd
  40a045:	dec    ecx
  40a046:	xlat   BYTE PTR ds:[ebx]
  40a047:	jmp    0x409fef
  40a049:	cmp    al,BYTE PTR [ecx+0x2b72f5e6]
  40a04f:	ror    ah,cl
  40a051:	sub    al,BYTE PTR ds:0x3d3bb6b4
  40a057:	push   es
  40a058:	cmp    al,0x3e
  40a05a:	xor    al,0xdf
  40a05c:	outs   dx,BYTE PTR ds:[esi]
  40a05d:	fidivr WORD PTR [eax+0x53]
  40a060:	repnz xor BYTE PTR [esi],0x5f
  40a064:	fstp   TBYTE PTR [edx]
  40a066:	test   eax,0x367b695f
  40a06b:	push   esi
  40a06c:	adc    dl,BYTE PTR [eax-0x61fe08ca]
  40a072:	add    dh,BYTE PTR [eax+0x66bc48c8]
  40a078:	addr16 jge 0x40a045
  40a07b:	xchg   ebx,eax
  40a07c:	mov    bl,0x54
  40a07e:	mov    esi,0x73d94565
  40a083:	call   0x3b3777f2
  40a088:	dec    ebx
  40a089:	imul   ebp,DWORD PTR [eax],0xd534b8b
  40a08f:	pop    ss
  40a090:	data16 lahf 
  40a092:	dec    edi
  40a093:	push   0x52db5585
  40a098:	test   edi,ebx
  40a09a:	adc    ebx,ebx
  40a09c:	sbb    esi,DWORD PTR [ebp+0x6431d9ad]
  40a0a2:	push   edx
  40a0a3:	mov    ds:0x2a3a6a1f,eax
  40a0a8:	cmp    DWORD PTR [esi+edi*2-0x72],esp
  40a0ac:	sub    eax,0xe910953f
  40a0b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0b2:	repz jae 0x40a0ad
  40a0b5:	lea    esp,[edx]
  40a0b7:	pop    eax
  40a0b8:	int3   
  40a0b9:	add    ah,bh
  40a0bb:	push   esp
  40a0bc:	mov    al,0xd4
  40a0be:	sub    al,0x7
  40a0c0:	pop    ss
  40a0c1:	add    ebx,DWORD PTR [edx+ecx*2-0xea084c1]
  40a0c8:	cmp    eax,0xbd72e43a
  40a0cd:	add    ch,al
  40a0cf:	mov    ebx,0xb2d9dc6d
  40a0d4:	xchg   BYTE PTR [ebp-0x7f],ch
  40a0d7:	sbb    BYTE PTR [ecx-0x6795c3b7],ch
  40a0dd:	push   ebx
  40a0de:	aas    
  40a0df:	xchg   DWORD PTR [esi+0x44],ebx
  40a0e2:	jns    0x40a0cb
  40a0e4:	jnp    0x40a093
  40a0e6:	jb     0x40a06d
  40a0e8:	and    ecx,DWORD PTR [esi-0x1c]
  40a0eb:	gs ins DWORD PTR es:[edi],dx
  40a0ed:	aas    
  40a0ee:	mov    edx,0xd7180bf
  40a0f3:	lea    edi,[ebx+eiz*8]
  40a0f6:	pop    ebx
  40a0f7:	int    0x37
  40a0f9:	(bad)  
  40a0fa:	adc    BYTE PTR [ebx],dh
  40a0fc:	fadd   QWORD PTR [ecx+0x5c]
  40a0ff:	jle    0x40a13e
  40a101:	cld    
  40a102:	imul   esp,DWORD PTR [esi+0x6c33e06a],0x6a
  40a109:	bswap  edi
  40a10b:	cli    
  40a10c:	and    ecx,ebx
  40a10e:	jmp    0xfe98:0x22f8652e
  40a115:	pop    ebx
  40a116:	xchg   esp,eax
  40a117:	fisttp QWORD PTR [edx+0x6e]
  40a11a:	daa    
  40a11b:	jge    0x40a0b2
  40a11d:	mov    ds:0x7a0ad796,al
  40a122:	jmp    0xebe8:0xff3608c0
  40a129:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a12a:	in     al,dx
  40a12b:	lods   eax,DWORD PTR ds:[esi]
  40a12c:	clc    
  40a12d:	mov    bh,0x8c
  40a12f:	test   eax,0x573be8f7
  40a134:	push   0xffffffca
  40a136:	(bad)  
  40a137:	repz xchg ebx,eax
  40a139:	aas    
  40a13a:	jbe    0x40a0f0
  40a13c:	mov    dh,0x33
  40a13e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a13f:	sub    DWORD PTR [ebx],edi
  40a141:	outs   dx,DWORD PTR ds:[esi]
  40a142:	(bad)  
  40a143:	sbb    esp,ecx
  40a145:	pop    esi
  40a146:	div    DWORD PTR [ebx+0x2]
  40a149:	into   
  40a14a:	in     al,0xcc
  40a14c:	nop
  40a14d:	add    BYTE PTR [ecx+edx*1],bl
  40a150:	push   0x7
  40a152:	test   eax,0x39565244
  40a157:	(bad)  
  40a158:	icebp  
  40a159:	or     esi,DWORD PTR ds:0x7fc0f471
  40a15f:	jno    0x40a1df
  40a161:	cmp    dh,BYTE PTR [esp+ebp*1-0x48a942bc]
  40a168:	mov    ds:0x1e0a1cb8,eax
  40a16d:	enter  0x536a,0xf7
  40a171:	xchg   BYTE PTR [ecx+0x23482eac],dl
  40a177:	jbe    0x40a1c2
  40a179:	sbb    ecx,esp
  40a17b:	(bad)  
  40a17d:	aam    0x3
  40a17f:	jae    0x40a1a0
  40a181:	or     eax,0x8aec333b
  40a186:	mov    eax,ds:0x18716c32
  40a18b:	or     edx,DWORD PTR [eax]
  40a18d:	adc    al,0x87
  40a18f:	rol    BYTE PTR [esi+0x17],cl
  40a192:	clc    
  40a193:	call   0x5897:0xc8f5aabc
  40a19a:	xchg   esi,ecx
  40a19c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a19d:	jg     0x40a1fb
  40a19f:	icebp  
  40a1a0:	rcr    BYTE PTR [ebx-0x7b],cl
  40a1a3:	cs inc edx
  40a1a5:	mov    eax,ds:0x864ed78e
  40a1aa:	ins    BYTE PTR es:[edi],dx
  40a1ab:	ds aaa 
  40a1ad:	cli    
  40a1ae:	mov    es,ebx
  40a1b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1b1:	push   0x6f
  40a1b3:	in     eax,0x65
  40a1b5:	sar    dh,1
  40a1b7:	cdq    
  40a1b8:	cmp    al,0xeb
  40a1ba:	pop    eax
  40a1bb:	inc    edi
  40a1bc:	cmp    cl,BYTE PTR [ebx+0x4c842aa3]
  40a1c2:	daa    
  40a1c3:	(bad)  
  40a1c4:	xlat   BYTE PTR ds:[ebx]
  40a1c5:	lahf   
  40a1c6:	pop    edx
  40a1c7:	xor    cl,BYTE PTR [edx]
  40a1c9:	pop    edx
  40a1ca:	int3   
  40a1cb:	push   edx
  40a1cc:	jmp    0x40a17a
  40a1ce:	add    cl,BYTE PTR [ebx]
  40a1d0:	sbb    edi,DWORD PTR ss:[ebp-0x486a88e]
  40a1d7:	jb     0x40a18a
  40a1d9:	(bad)  
  40a1da:	mov    bh,0x96
  40a1dc:	jecxz  0x40a1cb
  40a1de:	xor    al,0x5
  40a1e0:	mov    ah,0x5
  40a1e2:	clc    
  40a1e3:	mov    dh,0xa
  40a1e5:	add    bh,BYTE PTR [ecx]
  40a1e7:	jmp    0xfac3:0x1ad8a5a5
  40a1ee:	mov    edi,DWORD PTR [ebp-0x40]
  40a1f1:	inc    ebx
  40a1f2:	and    eax,0xba8ee2b
  40a1f7:	jecxz  0x40a179
  40a1f9:	pop    edx
  40a1fa:	repnz mov eax,0xcd794d5e
  40a200:	int3   
  40a201:	sbb    eax,0xd355cf55
  40a206:	popf   
  40a207:	gs repz pop ebp
  40a20a:	mov    BYTE PTR [esi-0x516562b4],bh
  40a210:	cmc    
  40a211:	push   ecx
  40a212:	pop    es
  40a213:	call   0x712e:0x4f97f41e
  40a21a:	in     eax,dx
  40a21b:	call   0x9b9fe0c2
  40a220:	or     eax,0xa838254f
  40a225:	or     BYTE PTR [eax+0x70],0x7d
  40a229:	dec    ebp
  40a22a:	leave  
  40a22b:	xor    ah,BYTE PTR [eax-0x72]
  40a22e:	xchg   dh,bh
  40a230:	mov    DWORD PTR [eax+0x41],edx
  40a233:	jne    0x40a26d
  40a235:	iret   
  40a236:	enter  0x5d4d,0x81
  40a23a:	js     0x40a1d6
  40a23c:	and    DWORD PTR [eax+ebx*2+0x31938b35],esp
  40a243:	sbb    DWORD PTR [esi+eiz*4-0x5ebf0e10],eax
  40a24a:	add    al,0xc8
  40a24c:	mov    edx,0x96f69583
  40a251:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a252:	mov    bl,0x49
  40a254:	aas    
  40a255:	inc    esp
  40a256:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a257:	add    ebx,edx
  40a259:	(bad)
  40a25d:	les    ebp,FWORD PTR [eax-0x4bbb8960]
  40a263:	je     0x40a2ac
  40a265:	idiv   DWORD PTR [eax+edx*8]
  40a268:	sbb    DWORD PTR [ecx+edi*8+0x67],0x39e279ca
  40a270:	fcomp  st(0)
  40a272:	pop    ecx
  40a273:	xchg   BYTE PTR [esp-0x7],dl
  40a277:	sbb    dl,BYTE PTR [eax+0x6d]
  40a27a:	idiv   BYTE PTR [ecx-0x195ea56]
  40a280:	sbb    al,0x95
  40a282:	imul   ebx,DWORD PTR [ebp+0x1c],0x68a4f984
  40a289:	dec    edx
  40a28a:	sub    bl,BYTE PTR [edx-0x164efc44]
  40a290:	inc    edi
  40a291:	mov    WORD PTR [edx-0x217fdd0d],es
  40a297:	push   ebx
  40a298:	outs   dx,DWORD PTR ds:[esi]
  40a299:	inc    ecx
  40a29a:	lahf   
  40a29b:	sbb    DWORD PTR [edx+0xebd2593],edi
  40a2a1:	dec    esi
  40a2a2:	sub    ebp,DWORD PTR [eax]
  40a2a4:	mov    ebx,0xda5876db
  40a2a9:	or     eax,0xb73d2727
  40a2ae:	jnp    0x40a2a2
  40a2b0:	inc    esi
  40a2b1:	sbb    al,0x76
  40a2b3:	mov    ebp,0x405d3db7
  40a2b8:	out    0x3c,al
  40a2ba:	vpmacsdql ymm9,ymm0,YMMWORD PTR [eax+r14d*1-0x1fdea388],ymm6
  40a2c5:	ja     0x40a297
  40a2c7:	or     BYTE PTR [ecx],bh
  40a2c9:	push   es
  40a2ca:	dec    eax
  40a2cb:	bswap  ebp
  40a2cd:	pushf  
  40a2ce:	aad    0xe
  40a2d0:	xchg   esp,eax
  40a2d1:	cmp    ecx,ebx
  40a2d3:	(bad)  
  40a2d4:	mov    edx,0xe83c245d
  40a2d9:	mov    BYTE PTR [esi+0x4c],dh
  40a2dc:	rcr    cl,1
  40a2de:	xor    ah,dl
  40a2e0:	hlt    
  40a2e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2e2:	pop    ds
  40a2e3:	cmp    edi,ecx
  40a2e5:	pop    ebp
  40a2e6:	pop    es
  40a2e7:	sti    
  40a2e8:	int    0x57
  40a2ea:	sti    
  40a2eb:	outs   dx,BYTE PTR ds:[esi]
  40a2ec:	inc    edi
  40a2ed:	pop    ds
  40a2ee:	and    eax,0x97461a71
  40a2f3:	and    dl,BYTE PTR [edi-0x3c]
  40a2f6:	pop    edi
  40a2f7:	mov    ?,edi
  40a2f9:	mov    ds:0x4f76f0f8,al
  40a2fe:	jmp    0x89f0:0xa3d802cd
  40a305:	jbe    0x40a30d
  40a307:	sbb    ch,BYTE PTR [edx-0x5e]
  40a30a:	mov    edi,0x78af8a7c
  40a30f:	add    eax,0xa39f7470
  40a314:	sbb    dh,BYTE PTR [eax]
  40a316:	sbb    eax,0x5a661fa4
  40a31b:	sbb    DWORD PTR [eax-0x2c458cb2],eax
  40a321:	and    eax,eax
  40a323:	mov    ds:0xf8d1198d,al
  40a328:	mov    ah,BYTE PTR [ebx+esi*8+0x7b]
  40a32c:	outs   dx,DWORD PTR ds:[esi]
  40a32d:	imul   esp,DWORD PTR fs:[edi+0x5e],0x732819f6
  40a335:	lahf   
  40a336:	inc    ebp
  40a337:	ins    DWORD PTR es:[edi],dx
  40a338:	mov    WORD PTR [esi-0x62],ss
  40a33b:	je     0x40a39e
  40a33d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a33e:	lods   eax,DWORD PTR ds:[esi]
  40a33f:	mov    eax,ds:0x27d1733b
  40a344:	stos   BYTE PTR es:[edi],al
  40a345:	test   DWORD PTR [edi+0x5946f932],ecx
  40a34b:	sbb    al,0x59
  40a34d:	clc    
  40a34e:	cs das 
  40a350:	adc    ebx,esp
  40a352:	fidivr WORD PTR [eax-0x39]
  40a355:	sti    
  40a356:	xor    ch,BYTE PTR [edi]
  40a358:	mov    ebp,0x69f69964
  40a35d:	data16 xlat BYTE PTR ds:[ebx]
  40a35f:	leave  
  40a360:	add    eax,0x20f61d0d
  40a365:	retf   
  40a366:	js     0x40a388
  40a368:	jp     0x40a372
  40a36a:	or     ebx,DWORD PTR [ebx]
  40a36c:	fmul   st(6),st
  40a36e:	push   0x862a31a9
  40a373:	sti    
  40a374:	mov    cl,0x5d
  40a376:	(bad)  [eax-0x71]
  40a379:	adc    edi,DWORD PTR [eax-0x4e031ddb]
  40a37f:	scas   eax,DWORD PTR es:[edi]
  40a380:	stc    
  40a381:	jecxz  0x40a36c
  40a383:	shl    edi,1
  40a385:	xor    BYTE PTR [eax-0x102597fc],ch
  40a38b:	loope  0x40a366
  40a38d:	xor    al,0xc3
  40a38f:	adc    BYTE PTR [edx],0x3a
  40a392:	je     0x40a3d7
  40a394:	xchg   ecx,eax
  40a395:	sub    BYTE PTR [edx],ah
  40a397:	aas    
  40a398:	mov    bh,0x91
  40a39a:	mov    edi,0xad70b9d8
  40a39f:	gs loopne 0x40a3b5
  40a3a2:	repnz cmp ebp,edx
  40a3a5:	jmp    0x60890452
  40a3aa:	add    ebp,DWORD PTR [ebx]
  40a3ac:	add    al,0x4a
  40a3ae:	mov    dh,0x51
  40a3b0:	in     eax,0x40
  40a3b2:	mov    ecx,0x5d1f9dad
  40a3b7:	(bad)
  40a3bb:	rol    BYTE PTR [ebx+ebp*2+0x5b],1
  40a3bf:	ror    DWORD PTR [edi+ebx*8-0x39d7902],1
  40a3c6:	mov    bl,0x29
  40a3c8:	dec    ebx
  40a3c9:	out    0xb0,al
  40a3cb:	xor    al,0x56
  40a3cd:	inc    esp
  40a3ce:	ret    
  40a3cf:	cmp    dl,BYTE PTR [esi]
  40a3d1:	mov    edx,0x1a431e34
  40a3d6:	pop    eax
  40a3d7:	jle    0x40a3b4
  40a3d9:	enter  0xa7e,0xa3
  40a3dd:	lods   eax,DWORD PTR ds:[esi]
  40a3de:	sub    ah,BYTE PTR [ebp+ebx*4+0x29]
  40a3e2:	in     al,dx
  40a3e3:	adc    bl,dh
  40a3e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a3e6:	aaa    
  40a3e7:	sub    DWORD PTR [edx+edi*4+0x6b],ecx
  40a3eb:	mov    edi,0x74026f4a
  40a3f0:	arpl   WORD PTR ds:0xe8e05943,dx
  40a3f6:	mov    esi,0xe67f2351
  40a3fb:	lock outs dx,BYTE PTR ds:[esi]
  40a3fd:	adc    BYTE PTR [ebp+0x65c4c6f],ah
  40a403:	stc    
  40a404:	sbb    al,0xb8
  40a406:	lods   al,BYTE PTR ds:[esi]
  40a407:	inc    ecx
  40a408:	aad    0x81
  40a40a:	pop    edi
  40a40b:	imul   esp,DWORD PTR [edi+0x4eb85907],0xffffffdf
  40a412:	mov    BYTE PTR [eax-0x28273727],dh
  40a418:	aas    
  40a419:	daa    
  40a41a:	xor    al,BYTE PTR [ecx]
  40a41c:	jo     0x40a47f
  40a41e:	fs clc 
  40a420:	add    al,0x77
  40a422:	aam    0x40
  40a424:	push   ebp
  40a425:	push   ecx
  40a426:	mov    ebx,0xdd9e477f
  40a42b:	cmp    ebp,DWORD PTR [edi-0x19d6d01a]
  40a431:	pop    eax
  40a432:	cli    
  40a433:	mov    al,ds:0xe6a287a8
  40a438:	ja     0x40a3c5
  40a43a:	or     BYTE PTR [edx],dh
  40a43c:	and    edi,DWORD PTR [edx-0x25]
  40a43f:	adc    dl,bh
  40a441:	jecxz  0x40a498
  40a443:	inc    edi
  40a444:	fsubp  st(1),st
  40a446:	fcom   DWORD PTR [ecx+0x50]
  40a449:	and    eax,0xca12415
  40a44e:	bound  esi,QWORD PTR [edx]
  40a450:	outs   dx,BYTE PTR ds:[esi]
  40a451:	pop    es
  40a452:	jae    0x40a412
  40a454:	mov    esi,DWORD PTR [edi-0x6242d7af]
  40a45a:	fwait
  40a45b:	sbb    eax,0xa6e55f68
  40a460:	sbb    DWORD PTR [ecx],ecx
  40a462:	sbb    DWORD PTR [ecx+0x6c52f061],ebp
  40a468:	xchg   ebp,eax
  40a469:	jle    0x40a415
  40a46b:	mov    cl,0xc2
  40a46d:	cmp    al,BYTE PTR [ebx-0x30]
  40a470:	mov    bh,0x23
  40a472:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a473:	or     DWORD PTR [esi],ebp
  40a475:	scas   eax,DWORD PTR es:[edi]
  40a476:	jae    0x40a4c6
  40a478:	bound  edi,QWORD PTR [ecx]
  40a47a:	hlt    
  40a47b:	into   
  40a47c:	test   DWORD PTR [ecx+0x64],esi
  40a47f:	and    dh,al
  40a481:	xchg   DWORD PTR ds:0x2790a6e4,edx
  40a487:	push   edi
  40a488:	repnz dec ebp
  40a48a:	psraw  mm5,QWORD PTR [esi]
  40a48d:	adc    eax,0x19d3217b
  40a492:	mov    DWORD PTR [esi+edi*1-0x491e99fc],eax
  40a499:	cmp    al,dh
  40a49b:	cwde   
  40a49c:	jnp    0x40a440
  40a49e:	push   ebp
  40a49f:	scas   al,BYTE PTR es:[edi]
  40a4a0:	push   ds
  40a4a1:	inc    ebp
  40a4a2:	lods   al,BYTE PTR ds:[esi]
  40a4a3:	mov    ah,BYTE PTR [edi+0x7420da61]
  40a4a9:	cld    
  40a4aa:	lds    edi,FWORD PTR [edx+0x51ea95dd]
  40a4b0:	(bad)
  40a4b4:	pushf  
  40a4b5:	aas    
  40a4b6:	ror    DWORD PTR gs:[eax-0x33a36573],0xb9
  40a4be:	xchg   ebp,eax
  40a4bf:	bound  ecx,QWORD PTR [ebx+0x6bdfa0cf]
  40a4c5:	enter  0xc06,0x7a
  40a4c9:	arpl   WORD PTR [esi+0x18ec0598],bx
  40a4cf:	loope  0x40a4d7
  40a4d1:	jb     0x40a4db
  40a4d3:	mov    ebx,esp
  40a4d5:	ins    BYTE PTR es:[edi],dx
  40a4d6:	dec    eax
  40a4d7:	mov    edx,es
  40a4d9:	xlat   BYTE PTR ds:[ebx]
  40a4da:	or     bl,BYTE PTR [ebx-0x31]
  40a4dd:	ins    BYTE PTR es:[edi],dx
  40a4de:	bound  esi,QWORD PTR [ebp-0x5a9d9afc]
  40a4e4:	aas    
  40a4e5:	mov    DWORD PTR [eax],ebx
  40a4e7:	mov    eax,0x375e5657
  40a4ec:	ficomp DWORD PTR [edi-0x6db6bfe4]
  40a4f2:	mov    ebp,0x766281d4
  40a4f7:	mov    eax,ds:0x54e63c8b
  40a4fc:	loopne 0x40a4d2
  40a4fe:	xchg   edx,eax
  40a4ff:	out    0x37,eax
  40a501:	cdq    
  40a502:	mov    DWORD PTR [ecx-0x4da1a84d],ecx
  40a508:	loop   0x40a55a
  40a50a:	xchg   BYTE PTR [ebx+0x65],bh
  40a50d:	sub    eax,0x3875e009
  40a513:	in     al,0x24
  40a515:	inc    ebx
  40a516:	lods   al,BYTE PTR ds:[esi]
  40a517:	xor    BYTE PTR ss:[ebp+ebp*2+0x2],al
  40a51c:	push   ds
  40a51d:	add    ebp,DWORD PTR [ebp+0x55]
  40a520:	sbb    ebx,ebx
  40a522:	rcr    BYTE PTR [esi+0x45],0x55
  40a526:	mov    bh,0x17
  40a528:	daa    
  40a529:	xchg   edi,eax
  40a52a:	sbb    DWORD PTR [edi+0x8],edi
  40a52d:	sahf   
  40a52e:	dec    eax
  40a52f:	iret   
  40a530:	xchg   edx,eax
  40a531:	cmp    ah,BYTE PTR ds:0x65a7120f
  40a537:	adc    ax,0xb7ad
  40a53b:	pop    esp
  40a53c:	dec    esp
  40a53d:	sar    BYTE PTR [edi-0x19],1
  40a540:	xor    eax,0xaf88f6e
  40a545:	fstp   DWORD PTR [edi]
  40a547:	jle    0x40a57e
  40a549:	(bad)  
  40a54a:	cs popa 
  40a54c:	fs cdq 
  40a54e:	mov    ds:0x8bbbd84,al
  40a553:	fucom  st(2)
  40a555:	fld    DWORD PTR [edx]
  40a557:	mov    esi,0x10e6ac31
  40a55c:	loopne 0x40a503
  40a55e:	mov    bh,0x98
  40a560:	and    dh,dl
  40a562:	mov    dh,0xf9
  40a564:	daa    
  40a565:	xchg   edi,eax
  40a566:	bound  ebx,QWORD PTR [ebp-0x58]
  40a569:	add    BYTE PTR [ebp+eax*4+0x24],cl
  40a56d:	push   ss
  40a56e:	cmc    
  40a56f:	xor    BYTE PTR [edx],0xc5
  40a572:	or     al,0xc1
  40a574:	cmpps  xmm5,XMMWORD PTR [ebp+0x5a80511c],0x22
  40a57c:	adc    DWORD PTR [ecx+0xb],esi
  40a57f:	popf   
  40a580:	jecxz  0x40a54a
  40a582:	xchg   edi,eax
  40a583:	xlat   BYTE PTR ds:[ebx]
  40a584:	sbb    al,0xdc
  40a586:	loope  0x40a55e
  40a588:	push   ss
  40a589:	fld    TBYTE PTR [ecx+0x103ab199]
  40a58f:	bound  eax,QWORD PTR [eiz*1-0x1a00e6f2]
  40a596:	out    dx,eax
  40a597:	icebp  
  40a598:	or     ecx,edx
  40a59a:	mov    ah,0x73
  40a59c:	(bad)  
  40a59d:	repz or al,0x85
  40a5a0:	mov    eax,ds:0xde37d38b
  40a5a5:	ror    BYTE PTR ds:0x739bdb02,1
  40a5ab:	sbb    ah,dh
  40a5ad:	idiv   BYTE PTR [eax-0x2b]
  40a5b0:	ret    0x3fbe
  40a5b3:	hlt    
  40a5b4:	sub    BYTE PTR [ecx+edi*2],cl
  40a5b7:	pop    edi
  40a5b8:	(bad)  
  40a5b9:	mov    eax,0xe5d31c8e
  40a5be:	xchg   ebp,eax
  40a5bf:	pop    edi
  40a5c0:	pop    ecx
  40a5c1:	sbb    BYTE PTR [esi+0x41df1f73],bl
  40a5c7:	fisub  WORD PTR [edx+eiz*2+0x4caba5c7]
  40a5ce:	out    0x21,eax
  40a5d0:	inc    esi
  40a5d1:	in     al,0xcf
  40a5d3:	jns    0x40a5f9
  40a5d5:	inc    eax
  40a5d6:	adc    cl,BYTE PTR [ecx-0x75]
  40a5d9:	add    al,0x5d
  40a5db:	psllw  mm5,0xc3
  40a5df:	sub    DWORD PTR ds:0xaaf13a48,ecx
  40a5e5:	lahf   
  40a5e6:	and    dl,al
  40a5e8:	xchg   ecx,eax
  40a5e9:	push   ecx
  40a5ea:	xor    BYTE PTR [ebp-0x36101fe],dl
  40a5f0:	iret   
  40a5f1:	popa   
  40a5f2:	dec    dl
  40a5f4:	push   ss
  40a5f5:	(bad)  
  40a5f6:	aaa    
  40a5f7:	retf   
  40a5f8:	pop    ebp
  40a5f9:	sub    al,0x2e
  40a5fb:	pop    ebx
  40a5fc:	ror    esi,cl
  40a5fe:	in     eax,dx
  40a5ff:	jg     0x40a671
  40a601:	das    
  40a602:	sub    BYTE PTR [esi-0x16],bh
  40a605:	mov    dh,0x99
  40a607:	pop    ecx
  40a608:	pop    edi
  40a609:	sub    bl,BYTE PTR [edx-0x2a]
  40a60c:	dec    ebx
  40a60d:	jnp    0x40a659
  40a60f:	fiadd  DWORD PTR [edx+0x1]
  40a612:	hlt    
  40a613:	jle    0x40a600
  40a615:	(bad)  
  40a616:	hlt    
  40a617:	aas    
  40a618:	and    ecx,ebx
  40a61a:	das    
  40a61b:	adc    al,0x85
  40a61d:	cwde   
  40a61e:	push   edx
  40a61f:	loopne 0x40a69c
  40a621:	imul   ebx,esi,0x853e7ad5
  40a627:	stc    
  40a628:	sar    edx,cl
  40a62a:	cmp    DWORD PTR [edi],edx
  40a62c:	aam    0x2
  40a62e:	outs   dx,DWORD PTR ds:[esi]
  40a62f:	ins    BYTE PTR es:[edi],dx
  40a630:	or     DWORD PTR [eax],ecx
  40a632:	pop    ebp
  40a633:	das    
  40a634:	stos   DWORD PTR es:[edi],eax
  40a635:	outs   dx,BYTE PTR ds:[esi]
  40a636:	xchg   esp,eax
  40a637:	popf   
  40a638:	cwde   
  40a639:	jno    0x40a6ac
  40a63b:	pop    bp
  40a63d:	loop   0x40a693
  40a63f:	push   ds
  40a640:	ins    BYTE PTR es:[edi],dx
  40a641:	loope  0x40a5da
  40a643:	jns    0x40a606
  40a645:	iret   
  40a646:	mov    eax,ds:0x6dfdc6db
  40a64b:	mov    esi,0x8553c5d7
  40a650:	cmp    BYTE PTR [edi+0x3cc727da],bh
  40a656:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a657:	loopne 0x40a63a
  40a659:	pop    edx
  40a65a:	in     al,0x5c
  40a65c:	rcl    DWORD PTR [esi],cl
  40a65e:	sub    edx,ebp
  40a660:	sbb    BYTE PTR [bx+si],0xb1
  40a664:	inc    ebp
  40a665:	aas    
  40a666:	push   edx
  40a667:	mov    ecx,0xb14180e7
  40a66c:	cli    
  40a66d:	repz dec edx
  40a66f:	jbe    0x40a64e
  40a671:	mov    bl,ch
  40a673:	mov    esi,0xddc5e462
  40a678:	cld    
  40a679:	sbb    al,0xdd
  40a67b:	(bad)
  40a67e:	retf   0xc312
  40a681:	jg     0x40a61e
  40a683:	or     al,0x47
  40a685:	cmc    
  40a686:	or     al,al
  40a688:	leave  
  40a689:	or     eax,0xf9405987
  40a68e:	cmp    BYTE PTR [ecx-0x6b],al
  40a691:	push   esi
  40a692:	adc    DWORD PTR [ebp+0x56219bff],eax
  40a698:	hlt    
  40a699:	inc    esp
  40a69a:	push   ebx
  40a69b:	stos   DWORD PTR es:[edi],eax
  40a69c:	outs   dx,DWORD PTR ds:[esi]
  40a69d:	jmp    0x450f:0xcec98baf
  40a6a4:	fld    TBYTE PTR [edx+ebx*8-0x465198eb]
  40a6ab:	js     0x40a6cc
  40a6ad:	ss cs stos DWORD PTR es:[edi],eax
  40a6b0:	aam    0x5d
  40a6b2:	fidivr DWORD PTR [edi-0x27b4970f]
  40a6b8:	js     0x40a717
  40a6ba:	sbb    bl,BYTE PTR [edx-0x4d]
  40a6bd:	sub    eax,0xde778e3a
  40a6c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a6c3:	dec    ecx
  40a6c4:	push   eax
  40a6c5:	stos   BYTE PTR es:[edi],al
  40a6c6:	mov    ds:0x9557453d,al
  40a6cc:	or     DWORD PTR [ebp+eiz*8+0x24],0xcb749d74
  40a6d4:	fs adc eax,ebp
  40a6d7:	push   edx
  40a6d8:	push   ebp
  40a6d9:	hlt    
  40a6da:	dec    ebp
  40a6db:	test   al,0xb7
  40a6dd:	rcl    DWORD PTR [esi-0x6],1
  40a6e0:	test   DWORD PTR [esp+eax*1+0x7b],0xe1d339a8
  40a6e8:	mov    edx,0x3996ffc2
  40a6ed:	std    
  40a6ee:	pop    ecx
  40a6ef:	dec    esp
  40a6f0:	xor    DWORD PTR [edx],ebx
  40a6f2:	sub    DWORD PTR [eax],ecx
  40a6f4:	hlt    
  40a6f5:	rol    edi,0x88
  40a6f8:	div    DWORD PTR [ebx+0x194e096b]
  40a6fe:	mov    ah,0xe3
  40a700:	jb     0x40a73c
  40a702:	or     esp,esi
  40a704:	xchg   edi,eax
  40a705:	ja     0x40a69c
  40a707:	add    BYTE PTR [eax],0x4f
  40a70a:	int3   
  40a70b:	leave  
  40a70c:	inc    ebx
  40a70d:	push   ebx
  40a70e:	or     esi,DWORD PTR ds:0x1917bd21
  40a714:	retf   
  40a715:	inc    eax
  40a716:	sbb    BYTE PTR [edi+0x70],ch
  40a719:	pop    es
  40a71a:	or     DWORD PTR ds:0xd7171cdb,edi
  40a720:	inc    ecx
  40a721:	(bad)  [edi+eiz*1-0xa720c1c]
  40a728:	out    0xf2,al
  40a72a:	dec    ecx
  40a72b:	sub    DWORD PTR [esi-0x71],esi
  40a72e:	push   ss
  40a72f:	pop    ebp
  40a730:	jge    0x40a718
  40a732:	mov    ebp,0x5e1ae12d
  40a737:	jle    0x40a6e7
  40a739:	xor    eax,ecx
  40a73b:	xchg   BYTE PTR [ebx-0x39ae8491],ah
  40a741:	in     eax,0xdd
  40a743:	mov    esp,0x482b2dd2
  40a748:	mov    WORD PTR [esi-0xbd9aebd],cs
  40a74e:	or     eax,0xd88aac7d
  40a753:	imul   ecx,DWORD PTR [edx-0x21],0xffffff88
  40a757:	jbe    0x40a7cf
  40a759:	push   ss
  40a75a:	or     BYTE PTR [esi],bh
  40a75c:	add    BYTE PTR [ecx+0x59],0xea
  40a760:	mov    ebp,0x87473842
  40a766:	test   al,0xd9
  40a768:	ret    0x2841
  40a76b:	sahf   
  40a76c:	xor    BYTE PTR [ebp-0x2c14cf4a],bl
  40a772:	gs call 0xf70b1333
  40a778:	sub    BYTE PTR [eax-0x5],dh
  40a77b:	outs   dx,DWORD PTR ds:[esi]
  40a77c:	push   esi
  40a77d:	(bad)  [esi+0x71506bd]
  40a783:	ss popa 
  40a785:	jno    0x40a7d0
  40a787:	xor    ecx,esp
  40a789:	loopne 0x40a761
  40a78b:	(bad)  
  40a78c:	sar    edi,1
  40a78e:	dec    ebp
  40a78f:	inc    eax
  40a790:	push   0xbee663b9
  40a795:	mov    BYTE PTR [ebp+0x55],ch
  40a798:	icebp  
  40a799:	push   0xff1643c2
  40a79e:	or     BYTE PTR [edx-0x68],ch
  40a7a1:	push   eax
  40a7a2:	retf   
  40a7a3:	push   esi
  40a7a5:	outs   dx,BYTE PTR ds:[esi]
  40a7a6:	adc    DWORD PTR [ebp-0x69c902ba],edx
  40a7ac:	jae    0x40a7e8
  40a7ae:	mov    ds:0x6703f0a3,eax
  40a7b3:	shl    DWORD PTR ds:0x2d421d5b,cl
  40a7b9:	neg    DWORD PTR [ecx]
  40a7bb:	mov    ds:0x55b0878b,eax
  40a7c0:	retf   0x2a29
  40a7c3:	jmp    0x40a7c0
  40a7c5:	jae    0x40a7d5
  40a7c7:	arpl   bx,sp
  40a7c9:	push   0x88c8e871
  40a7ce:	mov    ebx,0xfa2a60bc
  40a7d3:	or     DWORD PTR [edi],0xb8ab65b6
  40a7d9:	xchg   ebp,eax
  40a7da:	pop    es
  40a7db:	sbb    BYTE PTR [edx],ch
  40a7dd:	jge    0x40a83d
  40a7df:	push   0xf42c687b
  40a7e4:	lods   al,BYTE PTR ds:[esi]
  40a7e5:	fwait
  40a7e6:	in     eax,0x14
  40a7e8:	cmp    eax,0x931f594f
  40a7ed:	mov    esi,0x4d87903b
  40a7f2:	(bad)  
  40a7f3:	mov    edx,0x1f67c34f
  40a7f8:	cmp    BYTE PTR [ebp-0x5],bh
  40a7fb:	repnz pop ebp
  40a7fd:	pop    eax
  40a7fe:	push   ebx
  40a7ff:	or     al,0x26
  40a801:	mov    DWORD PTR [di+0x2c79],esi
  40a806:	out    0xb6,eax
  40a808:	test   BYTE PTR [esi],dh
  40a80a:	jg     0x40a880
  40a80c:	mov    ecx,0xf2d136ca
  40a811:	cdq    
  40a812:	pushf  
  40a813:	addr16 push 0x655366ce
  40a819:	inc    edi
  40a81a:	repnz lods eax,DWORD PTR ds:[esi]
  40a81c:	ror    BYTE PTR [ebx+0xd006a07],cl
  40a822:	dec    edi
  40a823:	js     0x40a837
  40a825:	rcl    DWORD PTR [ecx+0x6dff0695],cl
  40a82b:	push   edx
  40a82c:	inc    esp
  40a82d:	stos   DWORD PTR es:[edi],eax
  40a82e:	cmp    ch,BYTE PTR [edi+0x79a6d74d]
  40a834:	repz das 
  40a836:	loope  0x40a7c0
  40a838:	push   cs
  40a839:	sub    esi,DWORD PTR [ecx]
  40a83b:	or     esp,eax
  40a83d:	retf   
  40a83e:	dec    ecx
  40a83f:	mov    al,0x77
  40a841:	test   BYTE PTR [edi-0x4e5d99d1],dh
  40a847:	sub    eax,0x1468d873
  40a84c:	retf   0xbce
  40a84f:	mov    ds:0x25016188,eax
  40a854:	push   ebp
  40a855:	mov    eax,0xdc695f23
  40a85a:	test   BYTE PTR [esi],dl
  40a85c:	mov    ah,0x9
  40a85e:	push   edx
  40a85f:	push   0x5a
  40a861:	les    ebp,FWORD PTR [edi]
  40a863:	ins    BYTE PTR es:[edi],dx
  40a864:	mov    ecx,0xe7a434ed
  40a869:	pusha  
  40a86a:	jmp    0x5120:0x14b84875
  40a871:	aaa    
  40a872:	loope  0x40a88f
  40a874:	jp     0x40a807
  40a876:	inc    ebx
  40a877:	inc    BYTE PTR [esi]
  40a879:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a87a:	rcl    DWORD PTR [edi-0x1ef54d6d],cl
  40a880:	test   BYTE PTR [ecx+0x56],0xd0
  40a884:	pop    ebx
  40a885:	rol    cl,0xba
  40a888:	jno    0x40a8bd
  40a88a:	push   edi
  40a88b:	fwait
  40a88c:	jle    0x40a8b9
  40a88e:	or     BYTE PTR [ecx+esi*8+0x76],0x20
  40a893:	or     DWORD PTR [ebp-0x2b],ebx
  40a896:	pop    esi
  40a897:	aad    0x9
  40a899:	adc    BYTE PTR [esp+esi*1],0x80
  40a89d:	test   al,0x9f
  40a89f:	outs   dx,DWORD PTR ds:[esi]
  40a8a0:	lea    ecx,[esi+0xe6c03ee]
  40a8a6:	pop    esi
  40a8a7:	in     eax,dx
  40a8a8:	les    ebp,FWORD PTR fs:[eax+eiz*2+0x46b20c71]
  40a8b0:	dec    eax
  40a8b1:	jo     0x40a844
  40a8b3:	inc    eax
  40a8b4:	test   DWORD PTR [edx-0x61],esi
  40a8b7:	mov    bl,0x6b
  40a8b9:	(bad)  [eax*1+0x2a8b781f]
  40a8c0:	jecxz  0x40a925
  40a8c2:	cmp    eax,0x15d13f13
  40a8c7:	in     eax,dx
  40a8c8:	pop    ebx
  40a8c9:	cmc    
  40a8ca:	sar    BYTE PTR [esi+ebp*1-0x464fcbba],0x31
  40a8d2:	sub    ch,BYTE PTR [ebx+0xeef9156]
  40a8d8:	mov    eax,0x8cf471d4
  40a8dd:	test   eax,0x8c7128f5
  40a8e2:	push   0x73f5fbea
  40a8e7:	scas   eax,DWORD PTR es:[edi]
  40a8e8:	stos   BYTE PTR es:[edi],al
  40a8e9:	or     bh,BYTE PTR [esi-0x2a]
  40a8ec:	js     0x40a8d2
  40a8ee:	add    BYTE PTR [ecx],dl
  40a8f0:	push   0xee4c4b35
  40a8f5:	dec    ebx
  40a8f6:	loop   0x40a947
  40a8f8:	mov    cs,WORD PTR [edx]
  40a8fa:	test   BYTE PTR gs:[edi],ch
  40a8fd:	adc    DWORD PTR [esi],ebp
  40a8ff:	loop   0x40a887
  40a901:	ins    DWORD PTR es:[edi],dx
  40a902:	mov    eax,0xc1f69e7f
  40a907:	scas   al,BYTE PTR es:[edi]
  40a908:	adc    edx,DWORD PTR [ecx]
  40a90a:	retf   0xa150
  40a90d:	mov    ds:0x28f53ea4,al
  40a912:	dec    ebx
  40a913:	pop    es
  40a914:	int    0x8d
  40a916:	popf   
  40a917:	adc    edx,DWORD PTR [ebx+eax*8-0x78]
  40a91b:	push   0x72999d96
  40a920:	cmp    ch,bl
  40a922:	fnstcw WORD PTR [edi]
  40a924:	sar    eax,1
  40a926:	mov    ebx,0xe10ce2b4
  40a92b:	(bad)  [edi+0x4407488e]
  40a931:	xchg   ecx,eax
  40a932:	xchg   ecx,eax
  40a933:	popf   
  40a934:	mov    BYTE PTR [ebx+eiz*4+0x25],ch
  40a938:	mov    edx,0x8a73c67f
  40a93d:	mov    cl,0x55
  40a93f:	push   ecx
  40a940:	lock sbb dh,BYTE PTR [esi+esi*2+0x48033480]
  40a948:	mov    eax,0xc3b1a1a1
  40a94d:	xchg   ecx,eax
  40a94e:	dec    ebx
  40a94f:	sub    esi,DWORD PTR [edi+ebp*8-0x9]
  40a953:	mov    bh,0xfa
  40a955:	pushf  
  40a956:	or     eax,0x5339cfa6
  40a95b:	adc    BYTE PTR [ecx+ecx*1],ah
  40a95e:	(bad)  
  40a95f:	ss fwait
  40a961:	test   DWORD PTR [edi+edi*4-0xb],edx
  40a965:	adc    DWORD PTR [ebx+edi*2],eax
  40a968:	das    
  40a969:	push   esi
  40a96a:	stos   BYTE PTR es:[edi],al
  40a96b:	lds    ecx,FWORD PTR [ebx-0x14]
  40a96e:	pop    DWORD PTR [edi-0x3211dfdf]
  40a974:	(bad)  
  40a976:	mov    al,ds:0xc21d369b
  40a97b:	repz jb 0x40a90b
  40a97e:	sub    al,0xfc
  40a980:	jmp    0x9bf7:0x51008802
  40a987:	xchg   BYTE PTR [edi],ch
  40a989:	xchg   BYTE PTR [ebp+0x11],al
  40a98c:	fwait
  40a98d:	cmp    dh,BYTE PTR [eax+0x24]
  40a990:	outs   dx,BYTE PTR ds:[esi]
  40a991:	ins    DWORD PTR es:[edi],dx
  40a992:	sub    DWORD PTR ds:[ebx+0x24],eax
  40a996:	jmp    FWORD PTR [esi]
  40a998:	dec    edx
  40a999:	push   ds
  40a99a:	mov    ah,0x4e
  40a99c:	mov    esi,0x8272f825
  40a9a1:	fs in  eax,0xe4
  40a9a4:	jnp    0x40aa14
  40a9a6:	pop    esi
  40a9a7:	fsub   DWORD PTR [esp+ecx*4+0x4d]
  40a9ab:	mov    al,0xc0
  40a9ad:	mov    esp,0xe69818a4
  40a9b2:	mov    eax,0x9c9ba9f7
  40a9b7:	ss jne 0x40a95f
  40a9ba:	sti    
  40a9bb:	add    DWORD PTR [ebp-0x17],0x7c177a3b
  40a9c2:	in     eax,dx
  40a9c3:	loopne 0x40a9a3
  40a9c5:	xor    BYTE PTR [ebx],dh
  40a9c7:	xchg   ebx,eax
  40a9c8:	dec    ecx
  40a9c9:	test   DWORD PTR [ebp+0x65],esp
  40a9cc:	mov    BYTE PTR [esi+0x7d],bl
  40a9cf:	call   0xeb737c73
  40a9d4:	das    
  40a9d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9d6:	lahf   
  40a9d7:	xor    eax,DWORD PTR [ebp+0x687e4deb]
  40a9dd:	dec    esp
  40a9de:	iret   
  40a9df:	in     eax,dx
  40a9e0:	scas   eax,DWORD PTR es:[edi]
  40a9e1:	push   ebp
  40a9e2:	stos   DWORD PTR es:[edi],eax
  40a9e3:	mov    edi,0x62e04336
  40a9e8:	mov    eax,0xfc34321d
  40a9ed:	sub    eax,0xd84de0eb
  40a9f2:	(bad)  
  40a9f3:	bound  edx,QWORD PTR [esi+0x38]
  40a9f6:	xchg   ebx,eax
  40a9f7:	add    DWORD PTR [edi],edi
  40a9f9:	lods   al,BYTE PTR ds:[esi]
  40a9fa:	in     eax,0xb1
  40a9fc:	mov    eax,0x76b49860
  40aa01:	shl    bl,cl
  40aa03:	inc    esi
  40aa04:	push   0xffffffad
  40aa06:	sbb    ch,dh
  40aa08:	dec    esp
  40aa09:	popa   
  40aa0a:	inc    edi
  40aa0b:	push   cs
  40aa0c:	xor    ebp,DWORD PTR [eax-0x3e841042]
  40aa12:	outs   dx,DWORD PTR ds:[esi]
  40aa13:	in     al,0x54
  40aa15:	sub    eax,ebx
  40aa17:	push   edx
  40aa18:	and    al,0x28
  40aa1a:	sbb    edi,DWORD PTR [esi]
  40aa1c:	sbb    BYTE PTR [edi],0xf3
  40aa1f:	jbe    0x40aa57
  40aa21:	arpl   WORD PTR [eax],ax
  40aa23:	mov    ds:0x4fa9df0d,al
  40aa28:	add    al,0x1
  40aa2a:	inc    esp
  40aa2b:	pop    eax
  40aa2c:	js     0x40a9ea
  40aa2e:	mov    ah,0xb1
  40aa30:	xor    bh,dh
  40aa32:	pop    esi
  40aa33:	inc    edi
  40aa34:	dec    DWORD PTR [ebp+0x29e531cb]
  40aa3a:	cmp    al,0x66
  40aa3c:	mov    bl,0xe1
  40aa3e:	dec    ebx
  40aa3f:	mov    DWORD PTR [ebp-0x5c6e65b6],esp
  40aa45:	mov    eax,DWORD PTR [ecx-0x3f3ee54c]
  40aa4b:	imul   esp,ebx,0x39
  40aa4e:	mov    ebp,0x4bf25e7f
  40aa53:	test   BYTE PTR [esp+edx*2+0x2965097f],ch
  40aa5a:	xchg   ecx,eax
  40aa5b:	loop   0x40aa44
  40aa5d:	sub    DWORD PTR [ebx],eax
  40aa5f:	mov    ds:0xb61837c7,al
  40aa64:	xchg   edx,eax
  40aa65:	xchg   edi,eax
  40aa66:	int3   
  40aa67:	push   ds
  40aa68:	adc    eax,0x6131c992
  40aa6d:	sbb    DWORD PTR [ebx-0x144b53b5],ecx
  40aa73:	(bad)  
  40aa74:	pop    edi
  40aa75:	lds    esi,FWORD PTR [edi+eax*1+0x19d2bfc1]
  40aa7c:	push   esp
  40aa7d:	stos   BYTE PTR es:[edi],al
  40aa7e:	sbb    eax,0xa7d39b28
  40aa83:	ret    
  40aa84:	lods   al,BYTE PTR ds:[esi]
  40aa85:	clc    
  40aa86:	push   ebx
  40aa87:	hlt    
  40aa88:	push   ds
  40aa89:	add    eax,0x6bfbeb19
  40aa8e:	cdq    
  40aa8f:	hlt    
  40aa90:	push   0x41
  40aa92:	jle    0x40aac8
  40aa94:	pop    ebx
  40aa95:	or     ebx,esi
  40aa97:	in     eax,dx
  40aa98:	bound  edx,QWORD PTR [ecx+edi*2]
  40aa9b:	adc    al,0x60
  40aa9d:	pop    edx
  40aa9e:	sbb    ebx,0x3844a2bb
  40aaa4:	pop    esi
  40aaa5:	push   esp
  40aaa6:	cmp    DWORD PTR [edi+ebp*8+0x6a],esi
  40aaaa:	jno    0x40aa40
  40aaac:	mov    esp,0x808be7ad
  40aab1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aab2:	dec    ebp
  40aab3:	fld    DWORD PTR [edx]
  40aab5:	jns    0x40aad6
  40aab7:	jg     0x40aafc
  40aab9:	mov    esp,0xc216c666
  40aabe:	mov    ah,0x1a
  40aac0:	push   0x2a
  40aac2:	dec    esp
  40aac3:	and    al,0xd3
  40aac5:	dec    eax
  40aac6:	lods   al,BYTE PTR ds:[esi]
  40aac7:	imul   eax,DWORD PTR ds:0xd8b2941a,0x80d43ca9
  40aad1:	mov    dh,0x62
  40aad3:	je     0x40aad7
  40aad5:	adc    BYTE PTR [edx-0x4b],cl
  40aad8:	cdq    
  40aad9:	mov    edi,0x2e5f786f
  40aade:	pusha  
  40aadf:	push   edx
  40aae0:	ss pop ss
  40aae2:	dec    esi
  40aae3:	mov    al,0xd9
  40aae5:	repz jg 0x40aaa7
  40aae8:	int3   
  40aae9:	jns    0x40aad8
  40aaeb:	sahf   
  40aaec:	xor    ebp,esi
  40aaee:	and    al,0xb3
  40aaf0:	js     0x40aaf6
  40aaf2:	sbb    DWORD PTR [edx+0x68d93c9a],ebp
  40aaf8:	xor    WORD PTR [ebp+0x2a],0x9c5
  40aafe:	dec    esp
  40aaff:	iret   
  40ab00:	fwait
  40ab01:	fwait
  40ab02:	cdq    
  40ab03:	mov    ebx,0xf7944d9
  40ab08:	cs push ebp
  40ab0a:	push   es
  40ab0b:	clc    
  40ab0c:	jns    0x40aaad
  40ab0e:	imul   esi,DWORD PTR [edi-0x5a],0x57
  40ab12:	int    0x6d
  40ab14:	jp     0x40aae8
  40ab16:	jmp    0x6cf7:0x9ec1b85
  40ab1d:	add    cl,BYTE PTR ds:0x428568c6
  40ab23:	stos   BYTE PTR es:[edi],al
  40ab24:	jmp    0x32a2:0x31f8a3b9
  40ab2b:	stos   DWORD PTR es:[edi],eax
  40ab2c:	sbb    esp,edx
  40ab2e:	psubw  mm6,QWORD PTR [edx-0x47]
  40ab32:	pop    edx
  40ab33:	ins    DWORD PTR es:[edi],dx
  40ab34:	cld    
  40ab35:	xchg   esi,eax
  40ab36:	fadd   QWORD PTR [edi]
  40ab38:	sti    
  40ab39:	bound  edx,QWORD PTR [ebp-0x24]
  40ab3c:	jo     0x40ab51
  40ab3e:	jne    0x40ab74
  40ab40:	jle    0x40ab87
  40ab42:	push   0xd04d6ced
  40ab47:	cmc    
  40ab48:	dec    edx
  40ab49:	out    dx,al
  40ab4a:	mov    DWORD PTR [eax+0x45aef69],ecx
  40ab50:	es sbb cl,dh
  40ab53:	ins    BYTE PTR es:[edi],dx
  40ab54:	mov    BYTE PTR [edx+0x52],dl
  40ab57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab58:	jns    0x40ab9d
  40ab5a:	mov    ds:0xb4e043a0,al
  40ab5f:	pop    edx
  40ab60:	es jb  0x40ab17
  40ab63:	daa    
  40ab64:	pop    eax
  40ab65:	sub    eax,0x84182cd8
  40ab6a:	stos   BYTE PTR es:[edi],al
  40ab6b:	dec    ebx
  40ab6c:	mov    esp,0x82ff5b9
  40ab71:	sub    eax,0x6e76dde9
  40ab76:	push   ss
  40ab77:	or     DWORD PTR [edx],esi
  40ab79:	shr    BYTE PTR [esi+0x6b],cl
  40ab7c:	sti    
  40ab7d:	adc    ecx,DWORD PTR [edi+0x5be5c7c9]
  40ab83:	jmp    0x333e27f3
  40ab88:	pop    ss
  40ab89:	(bad)  
  40ab8a:	cmp    ebp,DWORD PTR [esi]
  40ab8c:	xchg   esi,eax
  40ab8d:	dec    eax
  40ab8e:	ret    
  40ab8f:	sub    BYTE PTR [ebx+0x7317fde0],ch
  40ab95:	sti    
  40ab96:	mov    dh,0xaa
  40ab98:	call   0x89da10ce
  40ab9d:	call   0x8421:0x587acb62
  40aba4:	enter  0x619e,0x7c
  40aba8:	adc    eax,0x3ae4ce35
  40abad:	or     bl,0xbe
  40abb0:	adc    edx,DWORD PTR [esi]
  40abb2:	add    dl,ch
  40abb4:	add    eax,0x8a9493e9
  40abb9:	fisttp DWORD PTR [edx+0x57]
  40abbc:	dec    ecx
  40abbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abbe:	aas    
  40abbf:	(bad)  
  40abc0:	jno    0x40abed
  40abc2:	test   eax,ecx
  40abc4:	or     BYTE PTR [ebx],dh
  40abc6:	mov    ebx,0x8016ec26
  40abcb:	pop    edx
  40abcc:	jno    0x40ac3f
  40abce:	pushw  ss
  40abd0:	and    DWORD PTR [ebp+ebp*2-0x49ca35ee],0xf575e1c7
  40abdb:	int    0x81
  40abdd:	in     al,0xa4
  40abdf:	out    dx,eax
  40abe0:	dec    eax
  40abe1:	or     eax,DWORD PTR [edi]
  40abe3:	(bad)  
  40abe4:	adc    cl,bl
  40abe6:	add    DWORD PTR [ecx],ecx
  40abe8:	mov    eax,0xa23bdc2c
  40abed:	mov    ch,0xec
  40abef:	inc    edx
  40abf0:	adc    DWORD PTR [esi+eiz*1],eax
  40abf3:	jmp    0x249b8c19
  40abf8:	shr    BYTE PTR [eax+eax*1],cl
  40abfb:	pop    eax
  40abfc:	jb     0x40ac17
  40abfe:	sub    BYTE PTR [ecx],0x6c
  40ac01:	wbinvd 
  40ac03:	push   edi
  40ac04:	movddup xmm0,xmm1
  40ac08:	lods   al,BYTE PTR ds:[esi]
  40ac09:	or     DWORD PTR [esi],0x2741ba5a
  40ac0f:	popa   
  40ac10:	icebp  
  40ac11:	pop    edx
  40ac12:	mov    al,ds:0x91ece3e9
  40ac17:	pop    esp
  40ac18:	xor    al,0xa2
  40ac1a:	loope  0x40abcd
  40ac1c:	pop    eax
  40ac1d:	jbe    0x40abc9
  40ac1f:	adc    eax,0xcbb81e80
  40ac24:	(bad)  
  40ac26:	jnp    0x40ac0d
  40ac28:	jmp    0x97629883
  40ac2d:	leave  
  40ac2e:	xchg   ecx,eax
  40ac30:	ja     0x40ac09
  40ac32:	jae    0x40ac92
  40ac34:	int    0xa7
  40ac36:	pop    edx
  40ac37:	dec    ebx
  40ac38:	sar    BYTE PTR [eax-0x16c9969d],cl
  40ac3e:	dec    esi
  40ac3f:	into   
  40ac40:	repnz mov al,0x58
  40ac43:	cmp    DWORD PTR [edi+esi*2+0x70],0x58de2b23
  40ac4b:	jge    0x40ac78
  40ac4d:	icebp  
  40ac4e:	dec    ebx
  40ac4f:	inc    eax
  40ac50:	stos   BYTE PTR es:[edi],al
  40ac51:	jle    0x40abe8
  40ac53:	jo     0x40ac42
  40ac55:	cld    
  40ac56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac57:	cmp    eax,0xc4ffc442
  40ac5c:	lods   eax,DWORD PTR ds:[esi]
  40ac5d:	jo     0x40ac4b
  40ac5f:	dec    eax
  40ac60:	sbb    ebp,DWORD PTR [ebx]
  40ac62:	adc    bh,BYTE PTR [eax]
  40ac64:	push   eax
  40ac65:	lds    edx,FWORD PTR [ebp+edx*2+0x377b6264]
  40ac6c:	cli    
  40ac6d:	xchg   edi,eax
  40ac6e:	out    dx,al
  40ac6f:	idiv   DWORD PTR [eax+0x594bbc3d]
  40ac75:	jae    0x40ac52
  40ac77:	movntq QWORD PTR ds:0x5519f5f8,mm7
  40ac7e:	mov    bh,0x51
  40ac80:	hlt    
  40ac81:	mov    edi,0x5877198f
  40ac86:	mov    al,ds:0x78596777
  40ac8b:	adc    eax,0x38149a8f
  40ac90:	sub    eax,DWORD PTR [edx+0x731cabf6]
  40ac96:	icebp  
  40ac97:	cmp    eax,0x3825d395
  40ac9d:	pop    ecx
  40ac9e:	std    
  40ac9f:	jo     0x40ac8c
  40aca1:	lock jne 0x40ac8d
  40aca4:	dec    ebx
  40aca5:	fidiv  WORD PTR [ecx+0x35dc8717]
  40acab:	scas   al,BYTE PTR es:[edi]
  40acac:	sbb    BYTE PTR [esi],cl
  40acae:	dec    ebp
  40acaf:	test   al,0xd2
  40acb1:	std    
  40acb2:	out    dx,al
  40acb3:	add    DWORD PTR [ebp+0x75],ebx
  40acb6:	add    ebx,edi
  40acb8:	jb     0x40ac9f
  40acba:	dec    edx
  40acbb:	pop    ebx
  40acbc:	xchg   ebx,eax
  40acbd:	jge    0x40ac4d
  40acbf:	jno    0x40acc4
  40acc1:	or     BYTE PTR [edx],ch
  40acc3:	cmp    bh,ch
  40acc5:	scas   al,BYTE PTR es:[edi]
  40acc6:	fidiv  DWORD PTR [ebp-0x1b92a840]
  40accc:	sbb    eax,DWORD PTR [ebx+edi*4]
  40accf:	mov    ds:0x702ac56b,al
  40acd4:	lea    edx,[edi+esi*1]
  40acd7:	adc    bh,BYTE PTR [ecx-0xb]
  40acda:	or     BYTE PTR [ecx+0x6d],ch
  40acdd:	prefetch BYTE PTR [edx+ebp*2]
  40ace1:	(bad)  
  40ace3:	enter  0x11e2,0x93
  40ace7:	mov    al,0xde
  40ace9:	pop    esp
  40acea:	cdq    
  40aceb:	ss sbb al,0xa7
  40acee:	loopne 0x40ac9d
  40acf0:	and    edx,DWORD PTR [edi-0x569e56c9]
  40acf6:	mov    ch,0xea
  40acf8:	imul   ebx,DWORD PTR [eax],0x75368fa1
  40acfe:	shl    DWORD PTR [edi+0x3d],cl
  40ad01:	push   esp
  40ad02:	imul   ebx,DWORD PTR ss:[esi],0x9f74e44c
  40ad09:	inc    esi
  40ad0a:	mov    edi,DWORD PTR es:[eax]
  40ad0d:	adc    bh,0xfa
  40ad10:	jl     0x40ad6a
  40ad12:	add    BYTE PTR ds:[ebx],dl
  40ad15:	sub    eax,0x43b2e050
  40ad1a:	and    BYTE PTR [eax+0x6e],ch
  40ad1d:	add    DWORD PTR [ebx+ebp*4+0x15],0xffffffb4
  40ad22:	cmc    
  40ad23:	loop   0x40ad22
  40ad25:	(bad)  
  40ad26:	cwde   
  40ad27:	sub    DWORD PTR [ebp+0x5a1aa65c],0xcdd0b502
  40ad31:	sub    ecx,DWORD PTR [esi+0x24]
  40ad34:	push   esi
  40ad35:	jmp    0xedc6:0xfd5f4be1
  40ad3c:	cmp    DWORD PTR [edi-0x59b2d413],esp
  40ad42:	stos   DWORD PTR es:[edi],eax
  40ad43:	cmp    eax,0x25b46e35
  40ad48:	sbb    BYTE PTR [ecx-0x419c6815],dh
  40ad4e:	inc    edx
  40ad4f:	adc    al,0x17
  40ad51:	dec    edx
  40ad52:	and    cl,BYTE PTR [esi-0x74]
  40ad55:	scas   al,BYTE PTR es:[edi]
  40ad56:	xor    eax,0x7af4c723
  40ad5b:	ins    BYTE PTR es:[edi],dx
  40ad5c:	mov    edx,0xd7a6e4ad
  40ad61:	rol    DWORD PTR [ebx+eiz*4-0x16],1
  40ad65:	sbb    DWORD PTR [edx+eiz*1+0x1fd322fd],edx
  40ad6c:	psrlw  mm4,QWORD PTR [ecx-0x555a5f07]
  40ad73:	clc    
  40ad74:	push   cs
  40ad75:	mov    al,0xf8
  40ad77:	mov    WORD PTR [esi+0x69640fb6],fs
  40ad7d:	je     0x40ad78
  40ad7f:	sub    DWORD PTR [ebp-0x7e],edi
  40ad82:	xor    BYTE PTR [eax-0x37b9d26f],0xd5
  40ad89:	fbstp  TBYTE PTR [ecx]
  40ad8b:	popf   
  40ad8c:	cmp    eax,0xaa8f7a7
  40ad91:	(bad)  
  40ad92:	add    eax,0xd337be16
  40ad97:	lds    ebp,FWORD PTR [edi+0x36]
  40ad9a:	push   ebp
  40ad9b:	inc    edx
  40ad9c:	repz test edx,0x3c99636
  40ada3:	out    0x19,eax
  40ada5:	and    al,0x12
  40ada7:	cmp    eax,eax
  40ada9:	or     bl,BYTE PTR ds:0x9c9e4cb7
  40adaf:	xor    DWORD PTR [eax-0x11e61725],esi
  40adb5:	(bad)  
  40adb6:	aaa    
  40adb7:	shl    BYTE PTR [eax+0xd],cl
  40adba:	adc    bl,ah
  40adbc:	sbb    dh,bh
  40adbe:	mov    bl,0x9f
  40adc0:	pushw  0x9e03
  40adc4:	mov    esi,0xfcd6478f
  40adc9:	cmp    al,0xc
  40adcb:	adc    BYTE PTR [ecx-0x771ac932],dl
  40add1:	push   ebx
  40add2:	xchg   ebx,eax
  40add3:	ror    DWORD PTR [esi+0x247302fd],cl
  40add9:	jo     0x40ade9
  40addb:	xchg   ecx,eax
  40addc:	out    0xad,eax
  40adde:	mov    ds:0x9c0ef82c,eax
  40ade3:	bound  edx,QWORD PTR [ecx-0x3a7518]
  40ade9:	mov    ds:0xdbb0b7ce,al
  40adee:	int3   
  40adef:	sbb    DWORD PTR [edx+0x3],eax
  40adf2:	mov    WORD PTR [ecx+0x277a890f],gs
  40adf8:	mov    al,0x1f
  40adfa:	or     eax,0xe20a30c9
  40adff:	inc    esi
  40ae00:	scas   eax,DWORD PTR es:[edi]
  40ae01:	mov    ch,0x3a
  40ae03:	sub    esi,DWORD PTR [ecx+0x70]
  40ae06:	das    
  40ae07:	(bad)  
  40ae08:	adc    BYTE PTR [ebx-0x219afe1d],dl
  40ae0e:	je     0x40ae56
  40ae10:	test   BYTE PTR [edx+0x2a50872f],bl
  40ae16:	hlt    
  40ae17:	sub    DWORD PTR [ebp+0x4f],eax
  40ae1a:	(bad)  
  40ae1b:	into   
  40ae1c:	pop    ebx
  40ae1d:	out    0x70,al
  40ae1f:	pop    ss
  40ae20:	icebp  
  40ae21:	or     eax,DWORD PTR [edx-0x5d]
  40ae24:	into   
  40ae25:	lds    eax,FWORD PTR [edx-0x7e]
  40ae28:	div    BYTE PTR [edx]
  40ae2a:	cmp    BYTE PTR [ebp+esi*2+0x19b6c651],bh
  40ae31:	or     al,0xa8
  40ae33:	sti    
  40ae34:	shl    BYTE PTR [edi],cl
  40ae36:	or     edx,esi
  40ae38:	sbb    BYTE PTR [di],ch
  40ae3b:	pop    eax
  40ae3c:	add    al,0x26
  40ae3e:	cmc    
  40ae3f:	mov    ecx,0x5588a3d8
  40ae44:	sbb    al,0xd1
  40ae46:	or     eax,0xa7d7faa3
  40ae4b:	xor    ecx,ecx
  40ae4d:	call   0x8c61:0x2da9afd0
  40ae54:	dec    eax
  40ae55:	mov    ah,0x44
  40ae57:	out    dx,eax
  40ae58:	add    bh,bl
  40ae5a:	add    DWORD PTR ds:0x65fdf59f,edx
  40ae60:	inc    esp
  40ae61:	sti    
  40ae62:	push   esp
  40ae63:	jo     0x40ae6b
  40ae65:	pop    ebp
  40ae66:	imul   ebp,DWORD PTR [ebp-0x6569fc45],0xffffffce
  40ae6d:	cmp    al,0x9b
  40ae6f:	loopne 0x40aeb1
  40ae71:	inc    esi
  40ae72:	mov    bh,0xf8
  40ae74:	inc    esp
  40ae75:	gs inc sp
  40ae78:	jb     0x40aef6
  40ae7a:	sbb    eax,0x3abfa328
  40ae7f:	inc    esi
  40ae80:	xor    bh,BYTE PTR ds:0xe56a5df
  40ae86:	mov    al,ds:0xddeda0c9
  40ae8b:	jp     0x40af04
  40ae8d:	inc    ecx
  40ae8e:	js     0x40ae1c
  40ae90:	xchg   esi,eax
  40ae91:	push   edx
  40ae92:	not    BYTE PTR [esi]
  40ae94:	inc    ecx
  40ae95:	xchg   ecx,eax
  40ae96:	es jnp 0x40af13
  40ae99:	push   edi
  40ae9a:	cmp    ecx,esi
  40ae9c:	in     al,0x14
  40ae9e:	nop
  40ae9f:	mov    al,0x8f
  40aea1:	push   0xc520b2bc
  40aea6:	add    eax,0xff5b307c
  40aeab:	stc    
  40aeac:	mov    cl,0x53
  40aeae:	mov    bh,0x0
  40aeb0:	sti    
  40aeb1:	test   BYTE PTR [edx],0x29
  40aeb4:	iret   
  40aeb5:	inc    ecx
  40aeb6:	xchg   ebx,eax
  40aeb7:	pusha  
  40aeb8:	les    esi,FWORD PTR [esi]
  40aeba:	push   ebp
  40aebb:	pusha  
  40aebc:	imul   ebp,DWORD PTR [ebx],0xffffffd4
  40aebf:	fwait
  40aec0:	push   esi
  40aec1:	cdq    
  40aec2:	jo     0x40af0f
  40aec4:	aaa    
  40aec5:	loopne 0x40af41
  40aec7:	and    DWORD PTR [edi+ebp*8+0x7b],esp
  40aecb:	cli    
  40aecc:	pusha  
  40aecd:	imul   esi,DWORD PTR [eax-0x45],0xa1b84212
  40aed4:	paddsb mm1,QWORD PTR [edx+0x7e]
  40aed8:	iret   
  40aed9:	xchg   edi,eax
  40aeda:	dec    edi
  40aedb:	addr16 mov ah,0xba
  40aede:	mov    bh,bh
  40aee0:	jns    0x40af36
  40aee2:	pusha  
  40aee3:	mov    esp,0x428c2cbe
  40aee8:	push   ecx
  40aee9:	loopne 0x40af3f
  40aeeb:	leave  
  40aeec:	add    DWORD PTR [ecx],esi
  40aeee:	imul   eax,edi,0xffffffbe
  40aef1:	cli    
  40aef2:	jae    0x40af59
  40aef4:	cld    
  40aef5:	cmp    dl,BYTE PTR [edx+edx*1]
  40aef8:	and    eax,0xe62e62c8
  40aefd:	add    DWORD PTR [ebx],ecx
  40aeff:	call   0x829aa0ef
  40af04:	sub    DWORD PTR [eax+edx*2-0x60],esp
  40af08:	mov    al,BYTE PTR [esi+ebp*2+0x71c5f631]
  40af0f:	je     0x40af4c
  40af11:	gs fstp st(5)
  40af14:	test   eax,eax
  40af16:	icebp  
  40af17:	scas   al,BYTE PTR es:[edi]
  40af18:	test   dl,bh
  40af1a:	push   eax
  40af1b:	shl    BYTE PTR [ecx-0x2ae31ee4],1
  40af21:	jmp    0xfcfc9a28
  40af26:	stos   BYTE PTR es:[edi],al
  40af27:	rcl    ebx,cl
  40af29:	jmp    0x5bd:0x42deab81
  40af30:	loop   0x40afac
  40af32:	mov    esi,0x5d7773a4
  40af37:	pushf  
  40af38:	pop    ds
  40af39:	push   cs
  40af3a:	sti    
  40af3b:	mov    esp,0xd346c7ef
  40af40:	push   es
  40af41:	jbe    0x40afb8
  40af43:	ins    BYTE PTR es:[edi],dx
  40af44:	and    BYTE PTR [eax],0x39
  40af47:	fbld   TBYTE PTR [ecx+0x63709dd6]
  40af4d:	(bad)  
  40af50:	nop
  40af51:	test   al,0x0
  40af53:	scas   al,BYTE PTR es:[edi]
  40af54:	sub    esp,DWORD PTR [edi]
  40af56:	in     al,dx
  40af57:	dec    ecx
  40af58:	cli    
  40af59:	imul   edx
  40af5b:	xchg   edx,ecx
  40af5d:	call   0x4386ee8a
  40af62:	int3   
  40af63:	jmp    0x40afd5
  40af65:	xchg   edx,eax
  40af66:	add    ebp,DWORD PTR [edx-0x59]
  40af69:	hlt    
  40af6a:	cmp    BYTE PTR ds:0x220ca32e,dh
  40af70:	mov    edx,0x31849576
  40af75:	or     BYTE PTR [ecx+0x72d75405],ch
  40af7b:	nop
  40af7c:	sub    al,0x7
  40af7e:	sahf   
  40af7f:	mov    WORD PTR [eax+0x6],gs
  40af82:	and    eax,0x7350dc38
  40af87:	sbb    edx,DWORD PTR [esi]
  40af89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af8a:	add    esp,ebp
  40af8c:	aas    
  40af8d:	hlt    
  40af8e:	iret   
  40af8f:	pop    ebx
  40af90:	inc    ebx
  40af91:	cs inc ecx
  40af93:	xlat   BYTE PTR ds:[ebx]
  40af94:	push   esp
  40af95:	sbb    bh,al
  40af97:	pop    ds
  40af98:	sub    DWORD PTR [edi+ebp*1],0x542eb743
  40af9f:	ins    BYTE PTR es:[edi],dx
  40afa0:	mov    edx,DWORD PTR [esi+0x840407]
  40afa6:	mov    al,0x4d
  40afa8:	jg     0x40afe6
  40afaa:	xor    bl,al
  40afac:	push   ss
  40afad:	in     eax,0xf9
  40afaf:	ins    DWORD PTR es:[edi],dx
  40afb0:	mov    ebp,0x419f4a1f
  40afb5:	retf   
  40afb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afb7:	out    0x29,eax
  40afb9:	cld    
  40afba:	pop    ecx
  40afbb:	xchg   edx,eax
  40afbc:	ffree  st(1)
  40afbe:	inc    ecx
  40afbf:	push   esp
  40afc0:	outs   dx,DWORD PTR ds:[esi]
  40afc1:	xor    ah,BYTE PTR [eax-0x2e159014]
  40afc7:	sub    DWORD PTR ds:0x84d5dcd,ebp
  40afcd:	ret    0x70fc
  40afd0:	fs ret 0x21b5
  40afd4:	pop    es
  40afd5:	mov    al,ds:0x39dd6853
  40afda:	pop    edx
  40afdb:	retf   
  40afdc:	pushf  
  40afdd:	pushf  
  40afde:	dec    eax
  40afdf:	mov    edx,0x9f2507e6
  40afe4:	cmp    ah,BYTE PTR [edi]
  40afe6:	es push esi
  40afe8:	test   DWORD PTR [eax],ebp
  40afea:	inc    ebx
  40afeb:	cdq    
  40afec:	popf   
  40afed:	mov    edx,0x5378cb69
  40aff2:	xchg   edi,eax
  40aff3:	leave  
  40aff4:	cmp    al,BYTE PTR [edx-0x76]
  40aff7:	call   0x2855:0x3a1254fa
  40affe:	mov    ebx,esi
  40b000:	mov    dl,0xc7
  40b002:	inc    ecx
  40b003:	xor    DWORD PTR [edx+0x3d505be4],0xffffffb0
  40b00a:	sti    
  40b00b:	outs   dx,DWORD PTR ds:[esi]
  40b00c:	add    bh,bl
  40b00e:	lods   eax,DWORD PTR ds:[esi]
  40b00f:	jl     0x40b049
  40b011:	pop    edi
  40b012:	xor    eax,0x6b671926
  40b017:	stos   DWORD PTR es:[edi],eax
  40b018:	mov    edx,0xa85c1bbe
  40b01d:	les    ebp,FWORD PTR [ecx+0x5d11f883]
  40b023:	mov    ebx,0xd0035d89
  40b028:	aam    0xf4
  40b02a:	call   0xd7e7b9a4
  40b02f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b030:	std    
  40b031:	inc    eax
  40b032:	pop    eax
  40b033:	jp     0x40afd0
  40b035:	outs   dx,DWORD PTR ds:[esi]
  40b036:	ja     0x40b00b
  40b038:	jns    0x40b093
  40b03a:	in     al,0xfa
  40b03c:	shr    cl,0x5a
  40b03f:	mov    bh,0xe8
  40b041:	mov    ebx,0x980e4497
  40b046:	les    ebp,FWORD PTR [eax+0x19e4b32d]
  40b04c:	test   BYTE PTR [ebp+0x72],ah
  40b04f:	and    BYTE PTR [eax+0x316c109c],0xf
  40b056:	and    edx,0x3bb4a302
  40b05c:	inc    edx
  40b05d:	mov    dh,0x3a
  40b05f:	cwde   
  40b060:	fist   WORD PTR [ebx+eiz*2]
  40b063:	and    eax,0x4a7ddb6b
  40b068:	fcom   DWORD PTR [ebx]
  40b06a:	pop    edi
  40b06b:	mov    BYTE PTR [ebx+0x327fc945],al
  40b071:	ins    BYTE PTR es:[edi],dx
  40b072:	fisubr DWORD PTR [eax]
  40b074:	pop    ecx
  40b075:	mov    esp,0x54830d45
  40b07a:	ja     0x40b0d3
  40b07c:	(bad)  
  40b07d:	in     eax,dx
  40b07e:	jno    0x40b06d
  40b080:	jo     0x40b04d
  40b082:	mov    bl,BYTE PTR [edx-0x5c0c24dd]
  40b088:	clc    
  40b089:	push   es
  40b08a:	pop    edx
  40b08b:	arpl   WORD PTR [esi+edi*8-0x6403e22e],ax
  40b092:	sub    BYTE PTR [edx+0x6a1e19da],bh
  40b098:	or     ch,BYTE PTR ds:0x851fcdfa
  40b09e:	sbb    bl,BYTE PTR [edi-0x2a9fe713]
  40b0a4:	mov    al,0x87
  40b0a6:	lea    eax,[ecx]
  40b0a8:	pop    edi
  40b0a9:	jecxz  0x40b110
  40b0ab:	push   eax
  40b0ac:	ins    BYTE PTR es:[edi],dx
  40b0ad:	cmp    BYTE PTR [ecx-0x449b4daf],cl
  40b0b3:	inc    ecx
  40b0b4:	retf   0x91ed
  40b0b7:	push   ebp
  40b0b8:	dec    al
  40b0ba:	sub    BYTE PTR [ebp+0x1c00af0f],cl
  40b0c0:	(bad)  
  40b0c1:	cmp    BYTE PTR [eax-0x3ff4d41e],al
  40b0c7:	jbe    0x40b0b2
  40b0c9:	imul   esp,DWORD PTR [edi+ebx*2-0x55edc05e],0x14
  40b0d1:	ret    0xc93d
  40b0d4:	cmp    DWORD PTR [edi-0x46345e16],0x8492636e
  40b0de:	repnz inc eax
  40b0e0:	cmp    BYTE PTR [edi],bh
  40b0e2:	test   al,0x58
  40b0e4:	adc    BYTE PTR [eax],al
  40b0e6:	out    dx,al
  40b0e7:	fsubr  st,st(2)
  40b0e9:	aam    0x65
  40b0eb:	je     0x40b164
  40b0ed:	mov    esi,0xfa493421
  40b0f2:	xchg   esi,eax
  40b0f3:	xchg   ecx,eax
  40b0f4:	xchg   ebp,eax
  40b0f5:	stc    
  40b0f6:	push   es
  40b0f7:	cdq    
  40b0f8:	clc    
  40b0f9:	ins    DWORD PTR es:[edi],dx
  40b0fa:	in     al,dx
  40b0fb:	pop    eax
  40b0fc:	(bad)  
  40b0fd:	ss xor eax,0xd5b2a7ad
  40b103:	sbb    BYTE PTR [ebx+0x73],0xd7
  40b107:	fnstcw WORD PTR [ebx+0x4dec5126]
  40b10d:	popa   
  40b10e:	cmp    BYTE PTR [ecx],cl
  40b110:	rcl    BYTE PTR [esi-0x75a8288],1
  40b116:	retf   0x12de
  40b119:	pop    edx
  40b11a:	out    dx,al
  40b11b:	outs   dx,DWORD PTR ds:[esi]
  40b11c:	adc    DWORD PTR [ebx],0xffffff94
  40b11f:	test   esi,ebp
  40b121:	inc    BYTE PTR [ebx+0x7c]
  40b124:	retf   
  40b125:	mov    dh,bh
  40b127:	arpl   bx,dx
  40b129:	mov    eax,ds:0xd43a4be8
  40b12e:	dec    esi
  40b12f:	js     0x40b156
  40b131:	sbb    bh,al
  40b133:	sar    DWORD PTR [edi],cl
  40b135:	loopne 0x40b100
  40b137:	push   ecx
  40b138:	xchg   BYTE PTR [ebx+ebx*8+0x33],cl
  40b13c:	jge    0x40b16b
  40b13e:	xor    BYTE PTR [ebp+ebx*8-0x6f],bl
  40b142:	add    BYTE PTR [ebx+0x5e],dl
  40b145:	stos   BYTE PTR es:[edi],al
  40b146:	leave  
  40b147:	pop    ds
  40b148:	adc    al,0x86
  40b14a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b14b:	out    0xbb,eax
  40b14d:	adc    DWORD PTR [eax],esi
  40b14f:	stos   BYTE PTR es:[edi],al
  40b150:	xor    al,0x19
  40b152:	loope  0x40b1a7
  40b154:	sub    bh,cl
  40b156:	scas   eax,DWORD PTR es:[edi]
  40b157:	adc    BYTE PTR [esi-0x34],bh
  40b15a:	dec    ebp
  40b15b:	sbb    DWORD PTR [esi+esi*1],esi
  40b15e:	or     ebp,edx
  40b160:	mov    eax,ds:0x9e5508bc
  40b165:	fwait
  40b166:	mov    dl,0xa7
  40b168:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b169:	sub    edi,ebx
  40b16b:	stos   DWORD PTR es:[edi],eax
  40b16c:	push   edi
  40b16d:	push   es
  40b16e:	dec    DWORD PTR [esi]
  40b170:	inc    esi
  40b171:	push   0xffffffa6
  40b173:	pushf  
  40b174:	mov    WORD PTR [ebx],?
  40b176:	sti    
  40b177:	mov    edx,DWORD PTR [ecx+eiz*2+0x63]
  40b17b:	(bad)  
  40b17c:	xchg   edx,eax
  40b17d:	inc    esi
  40b17e:	clc    
  40b17f:	push   cs
  40b180:	xor    BYTE PTR [edx],dl
  40b182:	add    DWORD PTR [ebx+0x21],ecx
  40b185:	mov    eax,0x9e66d3f6
  40b18a:	sub    DWORD PTR [edi+0x3d186595],edi
  40b190:	mov    edx,0xa19e5b7b
  40b195:	dec    edx
  40b196:	jo     0x40b16e
  40b198:	and    BYTE PTR [ecx+0x4c],al
  40b19b:	cli    
  40b19c:	hlt    
  40b19d:	mov    ebx,0xa63f64b7
  40b1a2:	pop    ebp
  40b1a3:	std    
  40b1a4:	xor    bh,BYTE PTR [eax]
  40b1a6:	sub    DWORD PTR [edi+0x2f],ebp
  40b1a9:	and    eax,0x9238e6af
  40b1ae:	sub    dl,dh
  40b1b0:	popa   
  40b1b1:	shl    BYTE PTR [ecx+ecx*4-0x4c],1
  40b1b5:	or     al,0x3d
  40b1b7:	aad    0xfb
  40b1b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1ba:	add    esp,esp
  40b1bc:	xchg   esp,eax
  40b1bd:	sar    bl,0x28
  40b1c0:	cs das 
  40b1c2:	ret    0x9287
  40b1c5:	xor    DWORD PTR [edi],0xffffffe9
  40b1c8:	jmp    0x40b218
  40b1ca:	cmc    
  40b1cb:	lahf   
  40b1cc:	mov    ch,0x63
  40b1ce:	arpl   cx,dx
  40b1d0:	hlt    
  40b1d1:	(bad)  [edi+edx*8]
  40b1d4:	add    DWORD PTR [edi],eax
  40b1d6:	sub    BYTE PTR [edi-0x758c69bc],bl
  40b1dc:	pop    ss
  40b1dd:	daa    
  40b1de:	xlat   BYTE PTR ds:[ebx]
  40b1df:	mov    eax,0xae807235
  40b1e4:	add    DWORD PTR [edx],0x703cbfdb
  40b1ea:	mov    esi,0x4828649f
  40b1ef:	dec    edx
  40b1f0:	ins    BYTE PTR es:[edi],dx
  40b1f1:	push   ebp
  40b1f2:	mov    dh,0x1e
  40b1f4:	lahf   
  40b1f5:	or     bh,BYTE PTR [ebp-0x45c3a9c0]
  40b1fb:	sub    al,0xf1
  40b1fd:	xlat   BYTE PTR ds:[ebx]
  40b1fe:	aam    0x3f
  40b200:	ds stc 
  40b202:	sub    al,0xfb
  40b204:	pusha  
  40b205:	cmp    ch,BYTE PTR [edx]
  40b207:	out    0x9c,al
  40b209:	xchg   DWORD PTR [esp+ebp*1+0x75],edi
  40b20d:	mov    dh,BYTE PTR [eax+0x73]
  40b210:	clc    
  40b211:	push   esp
  40b212:	add    DWORD PTR [esp+eax*4-0x538f9782],ebx
  40b219:	imul   esp,DWORD PTR [ebp+ebx*1+0x21],0x2c548a2b
  40b221:	mov    fs,esp
  40b223:	adc    dl,BYTE PTR [esi-0x153a4b0b]
  40b229:	add    ebp,eax
  40b22b:	aaa    
  40b22c:	in     al,0x4f
  40b22e:	sbb    BYTE PTR [ecx-0x64c9810c],0xed
  40b235:	(bad)  
  40b236:	in     eax,0x27
  40b238:	and    eax,0x9bc6867c
  40b23d:	repz push ebp
  40b23f:	mov    al,0xc7
  40b241:	pop    esi
  40b242:	loop   0x40b29a
  40b244:	adc    dl,BYTE PTR [esp+ebx*8+0x7c]
  40b248:	mov    edx,0xbc33dce3
  40b24d:	outs   dx,DWORD PTR ds:[esi]
  40b24e:	in     eax,0xf7
  40b250:	mov    bl,0xc9
  40b252:	sar    DWORD PTR [eax],cl
  40b254:	or     eax,0xd39da44e
  40b259:	lock retf 0xb590
  40b25d:	cli    
  40b25e:	mov    ds:0xfb9aa7c7,al
  40b263:	jno    0x40b2bc
  40b265:	inc    esp
  40b266:	inc    ebp
  40b267:	pop    edi
  40b268:	pusha  
  40b269:	rcl    DWORD PTR [esi+edi*4+0x15],0x5c
  40b26e:	or     ecx,edx
  40b270:	jecxz  0x40b246
  40b272:	fdivrp st(0),st
  40b274:	out    0xe8,eax
  40b276:	sbb    BYTE PTR [eax],dl
  40b278:	xchg   BYTE PTR [ecx+ecx*2+0x7a],ch
  40b27c:	ret    
  40b27d:	dec    esi
  40b27e:	push   edx
  40b27f:	cwde   
  40b280:	fild   QWORD PTR [ecx+ecx*4+0x5f854617]
  40b287:	xchg   ah,dh
  40b289:	clc    
  40b28a:	jno    0x40b220
  40b28c:	xchg   edi,eax
  40b28d:	jle    0x40b234
  40b28f:	pop    edi
  40b290:	push   eax
  40b291:	pop    ebp
  40b292:	leave  
  40b293:	jle    0x40b256
  40b295:	fdivr  st,st(6)
  40b297:	mov    ecx,0xfbf86d2d
  40b29c:	(bad)  
  40b29d:	mov    edi,0x10960af9
  40b2a2:	cdq    
  40b2a3:	push   es
  40b2a4:	mov    bh,0xaa
  40b2a6:	scas   eax,DWORD PTR es:[edi]
  40b2a7:	fld    DWORD PTR [edx+0x3b200b28]
  40b2ad:	xor    edx,ebx
  40b2af:	popf   
  40b2b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2b1:	mul    esp
  40b2b3:	fwait
  40b2b4:	cmp    BYTE PTR [edi-0x6162ee22],0xeb
  40b2bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2bc:	jmp    0x548e:0xafc22d71
  40b2c3:	aad    0x8c
  40b2c5:	pop    ss
  40b2c6:	fisubr WORD PTR [ebp+0x376e672c]
  40b2cc:	inc    esi
  40b2cd:	lods   eax,DWORD PTR ds:[esi]
  40b2ce:	(bad)  
  40b2cf:	add    edi,DWORD PTR [edx-0x529bb750]
  40b2d5:	shl    DWORD PTR [ebx-0x1d],1
  40b2d8:	or     esp,ebp
  40b2da:	gs mov ah,0x6e
  40b2dd:	sbb    al,al
  40b2df:	(bad)  
  40b2e0:	outs   dx,DWORD PTR ds:[esi]
  40b2e1:	mov    WORD PTR [edx+ebx*4],?
  40b2e4:	add    bh,BYTE PTR [eax+0x51]
  40b2e7:	pushf  
  40b2e8:	test   BYTE PTR [edx],al
  40b2ea:	sbb    BYTE PTR [eax+0x660ef627],al
  40b2f0:	aas    
  40b2f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2f2:	fld    st(3)
  40b2f4:	outs   dx,DWORD PTR ds:[esi]
  40b2f5:	cdq    
  40b2f6:	addr16 xchg edi,eax
  40b2f8:	sub    BYTE PTR [esi+0x24],bh
  40b2fb:	or     DWORD PTR [ebp+0x4],0x1f037c2d
  40b302:	in     eax,dx
  40b303:	mov    cl,BYTE PTR [ebx+0x566d0045]
  40b309:	jecxz  0x40b2e7
  40b30b:	jno    0x40b389
  40b30d:	ins    DWORD PTR es:[edi],dx
  40b30e:	mov    dh,0xa7
  40b310:	(bad)  
  40b311:	in     al,dx
  40b312:	outs   dx,BYTE PTR ds:[esi]
  40b313:	into   
  40b314:	stos   BYTE PTR es:[edi],al
  40b315:	test   al,0x62
  40b317:	fsub   DWORD PTR [ebx+ebx*4+0x6c]
  40b31b:	dec    ebx
  40b31c:	ins    DWORD PTR es:[edi],dx
  40b31d:	fmul   st,st(3)
  40b31f:	in     al,0x39
  40b321:	xchg   esi,eax
  40b322:	sar    BYTE PTR [edi-0x35],1
  40b325:	push   ebx
  40b326:	fstp   st(6)
  40b328:	das    
  40b329:	add    BYTE PTR [ecx+esi*1],ch
  40b32c:	ret    0xdfd1
  40b32f:	inc    ecx
  40b330:	xchg   DWORD PTR ds:0x84f8c0dd,ecx
  40b336:	jge    0x40b2e8
  40b338:	mov    cl,0x1b
  40b33a:	adc    ecx,DWORD PTR [ecx+eiz*1]
  40b33d:	fadd   QWORD PTR [ebx]
  40b33f:	outs   dx,BYTE PTR ds:[esi]
  40b340:	shl    BYTE PTR [esi],0x46
  40b343:	push   edi
  40b344:	cmp    DWORD PTR [ebx-0x51ad9833],eax
  40b34a:	adc    eax,0x78c7a103
  40b34f:	and    ch,BYTE PTR [esp+edi*1]
  40b352:	xchg   ebx,eax
  40b353:	or     esi,esi
  40b355:	jnp    0x40b2fa
  40b357:	and    al,BYTE PTR [ecx]
  40b359:	scas   eax,DWORD PTR es:[edi]
  40b35a:	xor    DWORD PTR [edx],0x6ab85373
  40b360:	push   es
  40b361:	inc    edi
  40b362:	sti    
  40b363:	cmp    ebp,DWORD PTR [edi]
  40b365:	pop    eax
  40b366:	mov    edi,0x4104032b
  40b36b:	dec    esp
  40b36c:	push   es
  40b36d:	call   0x1209:0xf9231d8d
  40b374:	hlt    
  40b375:	xchg   DWORD PTR ds:0x2a3fae88,eax
  40b37b:	lods   eax,DWORD PTR ds:[esi]
  40b37c:	sub    edx,DWORD PTR [ebp-0x57]
  40b37f:	and    eax,0xaac0698d
  40b384:	mov    ecx,DWORD PTR [ecx-0x59ce7c1d]
  40b38a:	dec    ecx
  40b38b:	push   esp
  40b38c:	jo     0x40b30e
  40b38e:	xchg   bl,al
  40b390:	std    
  40b391:	inc    ebp
  40b392:	mov    al,ds:0x97a3a05b
  40b397:	mov    dl,0x3e
  40b399:	imul   ecx,DWORD PTR [edi+0xf3346f0],0xd713c444
  40b3a3:	mov    edi,0x425f7707
  40b3a8:	iret   
  40b3a9:	clc    
  40b3aa:	add    DWORD PTR [esi-0x6c],ecx
  40b3ad:	or     BYTE PTR [edi],dh
  40b3af:	ud1    ecx,DWORD PTR [ebx]
  40b3b2:	jge    0x40b3c0
  40b3b4:	mov    dh,0x18
  40b3b6:	and    bh,BYTE PTR [esi]
  40b3b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3b9:	mov    eax,0x906605be
  40b3be:	inc    ecx
  40b3bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3c0:	mov    eax,ebp
  40b3c2:	fdiv   st(0),st
  40b3c4:	aaa    
  40b3c5:	add    al,0xe3
  40b3c7:	outs   dx,DWORD PTR ds:[esi]
  40b3c8:	jbe    0x40b43c
  40b3ca:	jl     0x40b3e5
  40b3cc:	bound  edi,QWORD PTR [ebp+0x14]
  40b3cf:	(bad)  
  40b3d1:	arpl   WORD PTR [esp+eax*2+0x21790b55],ax
  40b3d8:	push   ebp
  40b3d9:	aad    0x93
  40b3db:	sbb    BYTE PTR [ebp+0x3d],0x76
  40b3df:	pminub mm7,QWORD PTR [ebp-0x753c4747]
  40b3e6:	loop   0x40b460
  40b3e8:	scas   eax,DWORD PTR es:[edi]
  40b3e9:	inc    edx
  40b3ea:	pop    edi
  40b3eb:	mov    ah,0x2f
  40b3ed:	fsubr  DWORD PTR [edi-0x41af5303]
  40b3f3:	lock mov esp,ecx
  40b3f6:	dec    edx
  40b3f7:	das    
  40b3f8:	adc    DWORD PTR [edx-0x14],esi
  40b3fb:	and    al,0xb3
  40b3fd:	icebp  
  40b3fe:	xor    eax,0xd574598f
  40b403:	jae    0x40b42f
  40b405:	jns    0x40b431
  40b407:	inc    edx
  40b408:	es push ecx
  40b40a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b40b:	adc    DWORD PTR [eax+0x1b],ebx
  40b40e:	cmp    esp,DWORD PTR [ecx-0x54]
  40b411:	ins    BYTE PTR es:[edi],dx
  40b412:	adc    DWORD PTR [ebx+0x7f],0xffffff80
  40b416:	test   DWORD PTR [ecx],0x21872f45
  40b41c:	jae    0x40b3bf
  40b41e:	jo     0x40b3e1
  40b420:	inc    edx
  40b421:	pop    ss
  40b422:	dec    edx
  40b423:	mov    dh,0x29
  40b425:	retf   
  40b426:	sub    al,al
  40b428:	mov    al,ds:0x21009567
  40b42d:	push   edi
  40b42e:	push   es
  40b42f:	loopne 0x40b477
  40b431:	repz mov dl,0x2
  40b434:	and    eax,0x7de87c8f
  40b439:	les    ebp,FWORD PTR [esi]
  40b43b:	gs dec edx
  40b43d:	(bad)
  40b440:	mov    bl,0xd5
  40b442:	icebp  
  40b443:	push   0xeb84b07f
  40b448:	stc    
  40b449:	sti    
  40b44a:	xchg   DWORD PTR [ecx+esi*8+0x776ec9bf],eax
  40b451:	(bad)  
  40b452:	push   ss
  40b453:	aas    
  40b454:	push   es
  40b455:	push   edx
  40b456:	(bad)  
  40b457:	int    0xfd
  40b459:	pop    edi
  40b45a:	cmc    
  40b45b:	xor    al,0xbc
  40b45d:	xchg   ebx,eax
  40b45e:	lea    esp,[ecx]
  40b460:	out    0x98,eax
  40b462:	sub    bl,BYTE PTR [eax-0x33]
  40b465:	add    cl,al
  40b467:	(bad)  
  40b468:	cmp    esi,edi
  40b46a:	inc    ebp
  40b46b:	push   ds
  40b46c:	dec    esi
  40b46d:	aam    0x11
  40b46f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b470:	jae    0x40b3f4
  40b472:	adc    bl,BYTE PTR [ebx-0x5d3162af]
  40b478:	inc    esi
  40b479:	jae    0x40b490
  40b47b:	cli    
  40b47c:	pop    ecx
  40b47d:	ins    DWORD PTR es:[edi],dx
  40b47e:	jns    0x40b414
  40b480:	loop   0x40b4e1
  40b482:	cdq    
  40b483:	call   0xeff5:0x56d6f14c
  40b48a:	inc    edx
  40b48b:	jle    0x40b4bc
  40b48d:	ins    DWORD PTR es:[edi],dx
  40b48e:	stos   BYTE PTR es:[edi],al
  40b48f:	xchg   esp,eax
  40b490:	fmul   QWORD PTR [esi-0x6bb89b9]
  40b496:	in     al,dx
  40b497:	ss mov ah,0xa7
  40b49a:	dec    ebp
  40b49b:	jns    0x40b4b8
  40b49d:	inc    edx
  40b49e:	loop   0x40b498
  40b4a0:	dec    edi
  40b4a1:	imul   ah
  40b4a3:	call   0x214b099b
  40b4a8:	aam    0x9a
  40b4aa:	sub    edi,DWORD PTR [eax+0x56f6570]
  40b4b0:	in     al,dx
  40b4b1:	daa    
  40b4b2:	call   FWORD PTR [eax]
  40b4b4:	fs aaa 
  40b4b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4b7:	rcl    ecx,1
  40b4b9:	sub    edx,DWORD PTR [ebp-0xf54eea6]
  40b4bf:	pushf  
  40b4c0:	das    
  40b4c1:	mov    esi,0xc71526ff
  40b4c6:	dec    ebx
  40b4c7:	je     0x40b458
  40b4c9:	ss aaa 
  40b4cb:	fisttp WORD PTR [ecx-0x2d]
  40b4ce:	pop    edx
  40b4cf:	out    0x87,eax
  40b4d1:	js     0x40b528
  40b4d3:	adc    BYTE PTR [esi-0x504248dd],0x5b
  40b4da:	jns    0x40b4a0
  40b4dc:	fst    QWORD PTR [edx+0x16e46eea]
  40b4e2:	scas   al,BYTE PTR es:[edi]
  40b4e3:	sub    edi,ecx
  40b4e5:	icebp  
  40b4e6:	into   
  40b4e7:	dec    ebx
  40b4e8:	or     ecx,esp
  40b4ea:	call   0xf987:0x3d4aa05c
  40b4f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4f2:	out    dx,al
  40b4f3:	js     0x40b571
  40b4f5:	adc    al,0x83
  40b4f7:	mov    edx,DWORD PTR ds:0x23038103
  40b4fd:	inc    eax
  40b4fe:	data16 cld 
  40b500:	les    edx,FWORD PTR [ebp+0x3797bcea]
  40b506:	inc    edx
  40b507:	sahf   
  40b508:	pop    ecx
  40b509:	sar    DWORD PTR [ebp+eax*1-0x21],cl
  40b50d:	mov    DWORD PTR [eax+0x77],esp
  40b510:	sbb    eax,0x90531efd
  40b515:	stos   BYTE PTR es:[edi],al
  40b516:	nop
  40b517:	sbb    BYTE PTR [ebp-0x10ed44b5],ch
  40b51d:	retf   0xfa8b
  40b520:	push   cs
  40b521:	fsubr  QWORD PTR [ecx-0x20f317f0]
  40b527:	imul   ebp,esi,0x68a4374b
  40b52d:	pop    eax
  40b52e:	push   es
  40b52f:	nop
  40b530:	mov    WORD PTR [esi],gs
  40b532:	mov    esi,0x88b07f7
  40b537:	inc    ebx
  40b538:	or     eax,0x3a5b7063
  40b53d:	mov    ecx,DWORD PTR [ecx-0x741cefdb]
  40b543:	pushf  
  40b544:	pop    esi
  40b545:	dec    ebx
  40b546:	xor    bl,BYTE PTR [esi]
  40b548:	push   es
  40b549:	cmp    bl,BYTE PTR [ebx+0x12e15808]
  40b54f:	jae    0x40b5b1
  40b551:	in     al,0xf7
  40b553:	cld    
  40b554:	fcmovnb st,st(4)
  40b556:	sub    BYTE PTR [esp],dl
  40b559:	int3   
  40b55a:	mov    ds:0xc4478724,eax
  40b55f:	cmp    esp,DWORD PTR [ebp-0x6b0c861]
  40b565:	cli    
  40b566:	xor    eax,0x411a79ea
  40b56b:	es push ebp
  40b56d:	dec    esi
  40b56e:	lds    ebp,FWORD PTR [esi+0x296e1c42]
  40b574:	loope  0x40b58d
  40b576:	sbb    BYTE PTR [esi+ebp*2+0x56770188],bl
  40b57d:	adc    esi,0x29b8
  40b583:	push   edi
  40b584:	or     edi,DWORD PTR ds:0x42b010
  40b58a:	mov    esi,0x7510893
  40b58f:	or     ecx,ecx
  40b591:	xor    eax,esi
  40b593:	mov    edi,0x3272db
  40b598:	add    eax,edi
  40b59a:	sub    DWORD PTR ds:0x42a018,0x772b
  40b5a4:	mov    DWORD PTR [ebp-0x38],eax
  40b5a7:	mov    eax,ds:0x4217d2
  40b5ac:	mov    ecx,DWORD PTR ds:0x428008
  40b5b2:	and    DWORD PTR ds:0x42b004,ecx
  40b5b8:	mov    eax,DWORD PTR [eax]
  40b5ba:	mov    DWORD PTR ds:0x42a01c,0x19
  40b5c4:	cmp    DWORD PTR ds:0x42a01c,0x0
  40b5cb:	je     0x40b61b
  40b5d1:	cmp    DWORD PTR ds:0x42a01c,0x4
  40b5d8:	jne    0x40b5ef
  40b5de:	push   0x506a
  40b5e3:	push   DWORD PTR [ebp-0x24]
  40b5e6:	push   DWORD PTR [ebp-0x14]
  40b5e9:	call   DWORD PTR ds:0x424028
  40b5ef:	cmp    DWORD PTR ds:0x42a01c,0x5
  40b5f6:	jne    0x40b609
  40b5fc:	mov    ecx,DWORD PTR ds:0x42a01c
  40b602:	dec    ecx
  40b603:	mov    DWORD PTR ds:0x42a01c,ecx
  40b609:	mov    ecx,DWORD PTR ds:0x42a01c
  40b60f:	dec    ecx
  40b610:	mov    DWORD PTR ds:0x42a01c,ecx
  40b616:	jmp    0x40b5c4
  40b61b:	mov    DWORD PTR [ebp-0x24],eax
  40b61e:	add    DWORD PTR ds:0x428014,ecx
  40b624:	mov    eax,ds:0x4219da
  40b629:	mov    ecx,DWORD PTR ds:0x42174a
  40b62f:	mov    ecx,DWORD PTR [ecx]
  40b631:	adc    DWORD PTR ds:0x42a008,ecx
  40b637:	mov    eax,DWORD PTR [eax]
  40b639:	and    DWORD PTR ds:0x42a01c,0x0
  40b643:	jmp    0x40b655
  40b648:	mov    ecx,DWORD PTR ds:0x42a01c
  40b64e:	inc    ecx
  40b64f:	mov    DWORD PTR ds:0x42a01c,ecx
  40b655:	cmp    DWORD PTR ds:0x42a01c,0x10
  40b65c:	jae    0x40b75b
  40b662:	cmp    DWORD PTR ds:0x42a01c,0x8
  40b669:	jne    0x40b67f
  40b66f:	push   0x42358e
  40b674:	push   0x42350e
  40b679:	call   DWORD PTR ds:0x424030
  40b67f:	cmp    DWORD PTR ds:0x42a01c,0x7
  40b686:	jne    0x40b69b
  40b68c:	xor    ecx,ecx
  40b68e:	xor    ecx,DWORD PTR ds:0x42a01c
  40b694:	inc    ecx
  40b695:	mov    DWORD PTR ds:0x42a01c,ecx
  40b69b:	jmp    0x40b648
  40b6a0:	and    DWORD PTR ds:0x42901c,0x0
  40b6aa:	jmp    0x40b6bc
  40b6af:	mov    ecx,DWORD PTR ds:0x42901c
  40b6b5:	inc    ecx
  40b6b6:	mov    DWORD PTR ds:0x42901c,ecx
  40b6bc:	cmp    DWORD PTR ds:0x42901c,0x11
  40b6c3:	jae    0x40b75b
  40b6c9:	cmp    DWORD PTR ds:0x42901c,0x7
  40b6d0:	jne    0x40b6f6
  40b6d6:	push   DWORD PTR [ebp-0x10]
  40b6d9:	push   DWORD PTR [ebp-0x18]
  40b6dc:	push   0x2cae
  40b6e1:	push   0x19d0
  40b6e6:	push   0x7b35
  40b6eb:	push   0x42c01c
  40b6f0:	call   DWORD PTR ds:0x424038
  40b6f6:	cmp    DWORD PTR ds:0x42901c,0x6
  40b6fd:	jne    0x40b710
  40b703:	mov    ecx,DWORD PTR ds:0x42901c
  40b709:	inc    ecx
  40b70a:	mov    DWORD PTR ds:0x42901c,ecx
  40b710:	jmp    0x40b6af
  40b715:	mov    DWORD PTR ds:0x42c00c,0x11
  40b71f:	cmp    DWORD PTR ds:0x42c00c,0x0
  40b726:	je     0x40b75b
  40b72c:	cmp    DWORD PTR ds:0x42c00c,0x18
  40b733:	jne    0x40b749
  40b739:	push   0x42a008
  40b73e:	push   0x6229
  40b743:	call   DWORD PTR ds:0x42403c
  40b749:	mov    ecx,DWORD PTR ds:0x42c00c
  40b74f:	dec    ecx
  40b750:	mov    DWORD PTR ds:0x42c00c,ecx
  40b756:	jmp    0x40b71f
  40b75b:	mov    DWORD PTR [ebp-0x28],eax
  40b75e:	mov    DWORD PTR [ebp-0x34],0xf89c87b6
  40b765:	mov    eax,DWORD PTR [ebp-0x34]
  40b768:	xor    eax,esi
  40b76a:	add    eax,edi
  40b76c:	sbb    DWORD PTR ds:0x42a000,0x3656
  40b776:	mov    DWORD PTR [ebp-0x38],eax
  40b779:	mov    eax,ds:0x421952
  40b77e:	mov    DWORD PTR [ebp-0x38],eax
  40b781:	or     eax,0x6382
  40b786:	mov    eax,DWORD PTR [ebp-0x24]
  40b789:	and    DWORD PTR ds:0x42a008,0x0
  40b793:	mov    ecx,DWORD PTR ds:0x42a008
  40b799:	inc    ecx
  40b79a:	mov    DWORD PTR ds:0x42a008,ecx
  40b7a0:	cmp    DWORD PTR ds:0x42a008,0x9
  40b7a7:	jne    0x40b7bb
  40b7ad:	push   DWORD PTR [ebp-0x14]
  40b7b0:	push   0x4234e9
  40b7b5:	call   DWORD PTR ds:0x424040
  40b7bb:	cmp    DWORD PTR ds:0x42a008,0x8
  40b7c2:	jne    0x40b7d7
  40b7c8:	xor    ecx,ecx
  40b7ca:	add    ecx,DWORD PTR ds:0x42a008
  40b7d0:	inc    ecx
  40b7d1:	mov    DWORD PTR ds:0x42a008,ecx
  40b7d7:	cmp    DWORD PTR ds:0x42a008,0x17
  40b7de:	jb     0x40b793
  40b7e4:	mov    DWORD PTR [ebp-0x14],eax
  40b7e7:	mov    eax,DWORD PTR [ebp-0x14]
  40b7ea:	dec    DWORD PTR ds:0x42c000
  40b7f0:	push   0x4
  40b7f2:	and    ecx,DWORD PTR ds:0x42a018
  40b7f8:	pop    ecx
  40b7f9:	sbb    DWORD PTR ds:0x42b000,0x429004
  40b803:	sub    ecx,eax
  40b805:	xor    DWORD PTR ds:0x42a01c,0x102e
  40b80f:	add    ecx,DWORD PTR [ebp-0x28]
  40b812:	mov    DWORD PTR [ebp-0x2c],0xf89c85f6
  40b819:	adc    eax,0x5aaa
  40b81e:	mov    DWORD PTR [ebp-0x20],ecx
  40b821:	mov    DWORD PTR [ebp-0x94],0xf89c85ba
  40b82b:	and    DWORD PTR ds:0x428010,0x0
  40b835:	jmp    0x40b848
  40b83a:	xor    eax,eax
  40b83c:	add    eax,DWORD PTR ds:0x428010
  40b842:	inc    eax
  40b843:	mov    ds:0x428010,eax
  40b848:	cmp    DWORD PTR ds:0x428010,0x10
  40b84f:	jae    0x40b88a
  40b855:	cmp    DWORD PTR ds:0x428010,0x9
  40b85c:	jne    0x40b86d
  40b862:	push   0x423500
  40b867:	call   DWORD PTR ds:0x424044
  40b86d:	cmp    DWORD PTR ds:0x428010,0x8
  40b874:	jne    0x40b885
  40b87a:	mov    eax,ds:0x428010
  40b87f:	inc    eax
  40b880:	mov    ds:0x428010,eax
  40b885:	jmp    0x40b83a
  40b88a:	mov    eax,DWORD PTR [ebp-0x14]
  40b88d:	sbb    DWORD PTR ds:0x42a018,0x429014
  40b897:	mov    DWORD PTR [ebp-0x90],eax
  40b89d:	dec    eax
  40b89e:	mov    eax,DWORD PTR [ebp-0x20]
  40b8a1:	mov    DWORD PTR [ebp-0x8c],eax
  40b8a7:	add    DWORD PTR ds:0x42c00c,0x20f
  40b8b1:	mov    eax,DWORD PTR [ebp-0x2c]
  40b8b4:	xor    DWORD PTR ds:0x42b00c,0x3fc9
  40b8be:	xor    eax,esi
  40b8c0:	add    eax,edi
  40b8c2:	mov    DWORD PTR [ebp-0x88],eax
  40b8c8:	lea    eax,[ebp-0x50]
  40b8cb:	or     DWORD PTR ds:0x42b014,0x1a32
  40b8d5:	mov    DWORD PTR [ebp-0x84],eax
  40b8db:	mov    eax,DWORD PTR [ebp-0x94]
  40b8e1:	xor    DWORD PTR ds:0x42b010,0x42a00c
  40b8eb:	xor    eax,esi
  40b8ed:	xor    DWORD PTR ds:0x42900c,0x429018
  40b8f7:	add    eax,edi
  40b8f9:	and    DWORD PTR ds:0x428020,0x42c01c
  40b903:	mov    DWORD PTR [ebp-0x94],eax
  40b909:	and    DWORD PTR ds:0x42a000,0x429010
  40b913:	lea    eax,[ebp-0x94]
  40b919:	adc    DWORD PTR ds:0x42b018,0x42c018
  40b923:	push   eax
  40b924:	movzx  eax,WORD PTR ds:0x42b01c
  40b92b:	add    DWORD PTR ds:0x42a008,eax
  40b931:	mov    eax,DWORD PTR [ebp+0xc]
  40b934:	xor    eax,esi
  40b936:	add    DWORD PTR ds:0x428028,0x2102
  40b940:	add    eax,edi
  40b942:	sub    DWORD PTR ds:0x429010,0x36a
  40b94c:	push   eax
  40b94d:	mov    eax,ds:0x421972
  40b952:	adc    DWORD PTR ds:0x428024,0x6674
  40b95c:	push   0x4218c8
  40b961:	and    DWORD PTR ds:0x42a014,0x6ed
  40b96b:	push   DWORD PTR [eax]
  40b96d:	add    DWORD PTR ds:0x42a000,0x42900c
  40b977:	call   0x405c6f
  40b97c:	or     eax,DWORD PTR ds:0x42901c
  40b982:	mov    eax,DWORD PTR [ebp-0x14]
  40b985:	and    ecx,0x4079
  40b98b:	mov    ecx,DWORD PTR [ebp-0x20]
  40b98e:	sub    DWORD PTR ds:0x42b01c,0xab5
  40b998:	mov    DWORD PTR [ebp-0x44],ecx
  40b99b:	sbb    DWORD PTR ds:0x42b01c,edi
  40b9a1:	mov    ecx,DWORD PTR [ebp+0x8]
  40b9a4:	jmp    0x40dd19
  40b9a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9aa:	or     ah,bl
  40b9ac:	imul   ebx,DWORD PTR [ebp+eiz*2+0x7fef0363],0x18de6403
  40b9b7:	fs retf 0xf44f
  40b9bb:	bound  esp,QWORD PTR [edx+0xa]
  40b9be:	pop    edi
  40b9bf:	bound  esp,QWORD PTR [edx+0x36]
  40b9c2:	pop    edx
  40b9c3:	push   esi
  40b9c4:	adc    ch,ah
  40b9c6:	pusha  
  40b9c7:	pop    es
  40b9c8:	daa    
  40b9c9:	inc    esi
  40b9ca:	xchg   esp,eax
  40b9cb:	push   esp
  40b9cc:	sub    eax,0xbd1cca34
  40b9d1:	add    esp,DWORD PTR [edx-0x6d]
  40b9d4:	jne    0x40b996
  40b9d6:	scas   al,BYTE PTR es:[edi]
  40b9d7:	mov    WORD PTR [eax-0x79],cs
  40b9da:	mov    ebp,0xa55183e6
  40b9df:	jmp    0xdcc11054
  40b9e4:	and    al,0x79
  40b9e6:	sub    BYTE PTR [edx],al
  40b9e8:	lds    eax,FWORD PTR [eax+0xee4f112]
  40b9ee:	shl    BYTE PTR [ebp-0xf],1
  40b9f1:	pop    edx
  40b9f2:	ds jmp 0x62010c39
  40b9f8:	outs   dx,DWORD PTR ds:[esi]
  40b9f9:	sub    eax,0x808067c6
  40b9fe:	std    
  40b9ff:	lods   al,BYTE PTR ds:[esi]
  40ba00:	call   0xaf0a:0x87192ba
  40ba07:	int    0xd6
  40ba09:	mov    al,ds:0x913be6e
  40ba0e:	scas   eax,DWORD PTR es:[edi]
  40ba0f:	jns    0x40ba2c
  40ba11:	sbb    edx,ebp
  40ba13:	xchg   ebx,eax
  40ba14:	sub    DWORD PTR [edx-0x62],edx
  40ba17:	mov    DWORD PTR [edx-0x6bea7a1d],ecx
  40ba1d:	sar    DWORD PTR [ebp-0x34],0x9c
  40ba21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba22:	cwde   
  40ba23:	jge    0x40b9e7
  40ba25:	add    ecx,edi
  40ba27:	push   0x9e544fe0
  40ba2c:	fcom   QWORD PTR [edx]
  40ba2e:	sti    
  40ba2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba30:	jne    0x40b9bb
  40ba32:	pop    esp
  40ba33:	mov    dh,0x32
  40ba35:	call   0xc519:0x1dad4699
  40ba3c:	inc    edx
  40ba3d:	js     0x40ba37
  40ba3f:	cs sbb ch,dl
  40ba42:	daa    
  40ba43:	ja     0x40b9c5
  40ba45:	mov    gs,WORD PTR [esi-0x195da304]
  40ba4b:	cmp    dl,bl
  40ba4d:	dec    ebp
  40ba4e:	mov    dl,0x42
  40ba50:	pop    eax
  40ba51:	(bad)  
  40ba52:	std    
  40ba53:	enter  0xaf49,0x52
  40ba57:	fnstenv [ecx+edi*4+0x5509ab08]
  40ba5e:	aaa    
  40ba5f:	xchg   dh,ch
  40ba61:	fisttp WORD PTR ds:0xc1d0be0
  40ba67:	das    
  40ba68:	xlat   BYTE PTR ds:[ebx]
  40ba69:	pop    esi
  40ba6a:	in     al,dx
  40ba6b:	daa    
  40ba6c:	dec    esp
  40ba6d:	xor    eax,0xa1258ae2
  40ba72:	add    al,0xb5
  40ba74:	lods   al,BYTE PTR ds:[esi]
  40ba75:	inc    ebx
  40ba76:	xor    eax,0xb9a47e3d
  40ba7b:	xor    eax,0xd543be80
  40ba80:	aad    0xd2
  40ba82:	jp     0x40ba12
  40ba84:	nop
  40ba85:	mov    ds:0xc8d7e84c,eax
  40ba8a:	out    0xd9,eax
  40ba8c:	pop    es
  40ba8d:	push   cs
  40ba8e:	add    BYTE PTR [edx+0x42],dl
  40ba91:	mov    edi,0xd66ce32c
  40ba96:	or     al,BYTE PTR [edx+ebx*8-0x5d]
  40ba9a:	repnz retf 0xc43b
  40ba9e:	test   eax,0x5ad36630
  40baa3:	pop    edi
  40baa4:	adc    al,0x32
  40baa6:	arpl   WORD PTR ds:0x98c7d426,bx
  40baac:	je     0x40ba3e
  40baae:	cwde   
  40baaf:	inc    ebx
  40bab0:	repnz rcl DWORD PTR [eax],0x60
  40bab4:	adc    al,0xa7
  40bab6:	fcomp  DWORD PTR [ecx+0x37]
  40bab9:	mov    ah,0xcd
  40babb:	jne    0x40ba49
  40babd:	dec    edi
  40babe:	pop    es
  40babf:	and    eax,0xbfe47ea7
  40bac4:	sub    edx,esi
  40bac6:	mov    edx,0x4815d61d
  40bacb:	dec    edx
  40bacc:	call   0x64e21dc4
  40bad1:	test   BYTE PTR [esi-0x6b],cl
  40bad4:	pop    ss
  40bad5:	add    al,0xb6
  40bad7:	lahf   
  40bad8:	cmc    
  40bad9:	out    0x28,eax
  40badb:	shr    BYTE PTR [ebx+0x23182e1f],cl
  40bae1:	outs   dx,BYTE PTR ds:[esi]
  40bae2:	pop    ss
  40bae3:	inc    edx
  40bae4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bae5:	adc    bl,BYTE PTR [ebx-0x2]
  40bae8:	jmp    0x40bb2d
  40baea:	outs   dx,BYTE PTR ds:[esi]
  40baeb:	sub    eax,DWORD PTR [edi-0x49]
  40baee:	xor    ecx,ebp
  40baf0:	stc    
  40baf1:	scas   eax,DWORD PTR es:[edi]
  40baf2:	int    0x58
  40baf4:	xchg   BYTE PTR [ecx+0x13767881],al
  40bafa:	test   ebp,ebx
  40bafc:	cmp    DWORD PTR [ebp-0x6f],edi
  40baff:	icebp  
  40bb00:	addr16 ss sbb dl,bl
  40bb04:	shl    cl,cl
  40bb06:	xchg   esp,eax
  40bb07:	rcr    BYTE PTR [edx],0xfe
  40bb0a:	dec    esi
  40bb0b:	mov    esp,edi
  40bb0d:	cmp    eax,0xe8cfe2d3
  40bb12:	outs   dx,DWORD PTR ds:[esi]
  40bb13:	addr16 push ebx
  40bb15:	sub    al,0x3a
  40bb17:	(bad)
  40bb1c:	rcr    ebp,0x40
  40bb1f:	imul   ebp,edi,0x8efbafc7
  40bb25:	arpl   WORD PTR [ecx+0x7ac42935],di
  40bb2b:	and    DWORD PTR [ecx],0xbf1e6ee0
  40bb31:	adc    al,0xe9
  40bb33:	pop    ebx
  40bb34:	(bad)
  40bb38:	dec    esp
  40bb39:	daa    
  40bb3a:	xchg   esp,eax
  40bb3b:	lods   al,BYTE PTR ds:[esi]
  40bb3c:	(bad)  
  40bb3d:	clc    
  40bb3e:	ror    DWORD PTR [ebx-0x581af163],0x48
  40bb45:	aas    
  40bb46:	mov    eax,gs
  40bb48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb49:	ja     0x40bb76
  40bb4b:	outs   dx,BYTE PTR ds:[esi]
  40bb4c:	and    eax,DWORD PTR [edx+edx*8]
  40bb4f:	jle    0x40bb2c
  40bb51:	dec    ebp
  40bb52:	or     al,0x7b
  40bb54:	lahf   
  40bb55:	adc    cl,al
  40bb57:	pop    ebx
  40bb58:	shl    DWORD PTR ds:0x1af80a0e,0x5
  40bb5f:	in     eax,dx
  40bb60:	aas    
  40bb61:	fndisi(8087 only) 
  40bb63:	test   al,0xa2
  40bb65:	xor    DWORD PTR [eax],edx
  40bb67:	(bad)  
  40bb68:	mov    esp,0xc2ce4b8f
  40bb6d:	addr16 jnp 0x40bb6a
  40bb70:	ja     0x40bbdb
  40bb72:	adc    ecx,DWORD PTR ds:0xe4cef933
  40bb78:	pop    edx
  40bb79:	sub    DWORD PTR [eax+0x49],0x6e
  40bb7d:	pop    ebp
  40bb7e:	cmp    dl,BYTE PTR [ebx+0x9c089fb]
  40bb84:	pop    ebp
  40bb85:	push   0xffffffa3
  40bb87:	adc    DWORD PTR [ebx],ecx
  40bb89:	xchg   BYTE PTR [eax-0x75],dh
  40bb8c:	jp     0x40bbe6
  40bb8e:	sbb    al,0x13
  40bb90:	and    DWORD PTR [ebp+0x5],ebp
  40bb93:	mov    ch,0xfd
  40bb95:	in     eax,0x31
  40bb97:	aam    0xf
  40bb99:	add    esp,DWORD PTR [eax+ecx*1]
  40bb9c:	(bad)
  40bb9f:	pop    ss
  40bba0:	xor    al,BYTE PTR [esi-0x6c]
  40bba3:	mov    ecx,0xe5ba7243
  40bba8:	loopne 0x40bb6e
  40bbaa:	push   eax
  40bbab:	ror    BYTE PTR [edx+0xda2792c],0x72
  40bbb2:	push   ss
  40bbb3:	(bad)  
  40bbb4:	sbb    BYTE PTR ds:0x911915e2,bh
  40bbba:	jno    0x40bbc8
  40bbbc:	sbb    DWORD PTR ds:0xd3ff7b53,edi
  40bbc2:	repz jns 0x40bc30
  40bbc5:	das    
  40bbc6:	cmp    edi,eax
  40bbc8:	dec    esi
  40bbc9:	mov    esp,DWORD PTR [ebp+0x2072b503]
  40bbcf:	pusha  
  40bbd0:	mov    ebp,0xacb23fca
  40bbd5:	mov    BYTE PTR [edx+0x75],0xd
  40bbd9:	rol    BYTE PTR [ebx],0x29
  40bbdc:	repnz pop esp
  40bbde:	es lahf 
  40bbe0:	or     al,0x5b
  40bbe2:	add    BYTE PTR [eax-0x46],al
  40bbe5:	push   ds
  40bbe6:	jmp    0x40bc45
  40bbe8:	outs   dx,BYTE PTR ds:[esi]
  40bbe9:	jl     0x40bbae
  40bbeb:	dec    DWORD PTR [eax+0x7c]
  40bbee:	xor    al,0x20
  40bbf0:	ins    BYTE PTR es:[edi],dx
  40bbf1:	or     DWORD PTR [esi+edi*2],ecx
  40bbf4:	sub    bl,BYTE PTR [edi-0x3268db14]
  40bbfa:	lods   eax,DWORD PTR ds:[esi]
  40bbfb:	aam    0x94
  40bbfd:	jno    0x40bbfc
  40bbff:	adc    BYTE PTR [edx-0x6d],bh
  40bc02:	outs   dx,BYTE PTR ds:[esi]
  40bc03:	dec    ebp
  40bc04:	imul   esi,DWORD PTR [esi],0xffffffad
  40bc07:	ret    0x4a21
  40bc0a:	sbb    al,0xe5
  40bc0c:	test   eax,0x46752185
  40bc11:	jecxz  0x40bc63
  40bc13:	inc    ebp
  40bc14:	ret    0x6c05
  40bc17:	sub    DWORD PTR [edx+0xf3307d1],ecx
  40bc1d:	sahf   
  40bc1e:	jecxz  0x40bc20
  40bc20:	fsubr  st(1),st
  40bc22:	test   dh,dh
  40bc24:	jmp    0xc814905
  40bc29:	and    eax,0xcde80c63
  40bc2e:	into   
  40bc2f:	dec    ecx
  40bc30:	or     al,0x66
  40bc32:	jmp    0xc39057f6
  40bc37:	jo     0x40bc1b
  40bc39:	fisubr WORD PTR [edi-0x54]
  40bc3c:	(bad)  
  40bc3d:	mov    eax,ebx
  40bc3f:	hlt    
  40bc40:	add    eax,0xf729bb94
  40bc45:	popa   
  40bc46:	or     BYTE PTR [edx],0x8e
  40bc49:	jge    0x40bbef
  40bc4b:	push   ebp
  40bc4c:	je     0x40bc4f
  40bc4e:	fimul  DWORD PTR [eax-0x63d20c00]
  40bc54:	push   0x7add191a
  40bc59:	push   edx
  40bc5a:	adc    BYTE PTR [edx-0xa6c2ec5],bl
  40bc60:	stos   BYTE PTR es:[edi],al
  40bc61:	push   edx
  40bc62:	add    al,0x40
  40bc64:	cs (bad) 
  40bc66:	or     eax,0x1b662318
  40bc6b:	adc    ch,cl
  40bc6d:	in     eax,dx
  40bc6e:	xor    al,0xb1
  40bc70:	hlt    
  40bc71:	mov    ah,0x8d
  40bc73:	ss int 0x6f
  40bc76:	fcomp  QWORD PTR [ebp-0x59]
  40bc79:	pop    ebp
  40bc7a:	lea    esi,[edi+0x7b]
  40bc7d:	push   ds
  40bc7e:	fwait
  40bc7f:	or     ebx,0xf377eae1
  40bc85:	sbb    al,0x54
  40bc87:	mov    al,0x5d
  40bc89:	xor    BYTE PTR [ecx-0xcef9469],al
  40bc8f:	fadd   QWORD PTR [esi+edi*1]
  40bc92:	xor    al,0x46
  40bc94:	adc    eax,0xeb910437
  40bc99:	push   ecx
  40bc9a:	jl     0x40bcb2
  40bc9c:	add    eax,0xe978aa7e
  40bca1:	pop    esi
  40bca2:	(bad)  [eax]
  40bca4:	push   ebp
  40bca5:	adc    eax,0x892d7a72
  40bcaa:	mov    ch,0x2b
  40bcad:	pop    esp
  40bcae:	and    esi,esp
  40bcb0:	add    al,0xc1
  40bcb2:	sti    
  40bcb3:	push   cs
  40bcb4:	push   ss
  40bcb5:	mov    edi,0xf7336b1d
  40bcba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcbb:	and    al,BYTE PTR [ebp-0x54]
  40bcbe:	add    esi,ecx
  40bcc0:	mov    al,ds:0xf3d27bc8
  40bcc5:	les    eax,FWORD PTR [edi]
  40bcc7:	cs retf 0x327f
  40bccb:	mov    eax,ds:0xffffb37c
  40bcd0:	xchg   dl,ah
  40bcd2:	xor    bh,al
  40bcd4:	dec    ecx
  40bcd5:	lds    eax,FWORD PTR [ebp+0xa]
  40bcd8:	(bad)  
  40bcd9:	aam    0x51
  40bcdb:	xor    eax,esi
  40bcdd:	inc    ecx
  40bcde:	sbb    al,0x0
  40bce0:	mov    cl,BYTE PTR [edi]
  40bce2:	fnstenv [eax]
  40bce4:	test   al,0x38
  40bce6:	add    esp,ebp
  40bce8:	js     0x40bd52
  40bcea:	xchg   ebx,eax
  40bceb:	xchg   ecx,eax
  40bcec:	out    dx,al
  40bced:	mov    DWORD PTR [edx-0x28e56202],ebx
  40bcf3:	push   es
  40bcf4:	jnp    0x40bd25
  40bcf6:	jmp    0x30ebf447
  40bcfb:	in     al,dx
  40bcfc:	ja     0x40bce3
  40bcfe:	ds dec ecx
  40bd00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd01:	xchg   ebp,eax
  40bd02:	push   eax
  40bd03:	cmp    eax,0x58fa15bf
  40bd08:	rcr    DWORD PTR ds:0x400b3b61,cl
  40bd0e:	xor    ah,BYTE PTR [ecx+0x604fe775]
  40bd14:	pop    eax
  40bd15:	xchg   esp,eax
  40bd16:	inc    edi
  40bd17:	xchg   ebp,eax
  40bd18:	mov    ds:0x2655e457,eax
  40bd1d:	adc    BYTE PTR [ecx],cl
  40bd1f:	add    eax,0x50d98635
  40bd24:	dec    DWORD PTR [eax]
  40bd26:	cmp    DWORD PTR [edi+0x3c],ebp
  40bd29:	pop    es
  40bd2a:	push   ebp
  40bd2b:	lea    esi,[ebp-0x1d4ba124]
  40bd31:	iret   
  40bd32:	fistp  WORD PTR [ecx+eax*4+0x9ef7ac7]
  40bd39:	pop    ds
  40bd3a:	inc    edx
  40bd3b:	cmp    eax,ebx
  40bd3d:	fcom   DWORD PTR [edi-0x7ee0bc33]
  40bd43:	xchg   esp,eax
  40bd44:	inc    ecx
  40bd45:	clc    
  40bd46:	mov    edi,0x90b2ec32
  40bd4b:	cmp    al,0x1f
  40bd4d:	fbstp  TBYTE PTR [eax+0x61]
  40bd50:	mov    ebx,0x623373de
  40bd55:	cs xor eax,0xb3ae404e
  40bd5b:	test   al,0x9a
  40bd5d:	aas    
  40bd5e:	jl     0x40bcfc
  40bd60:	or     dh,dh
  40bd62:	dec    eax
  40bd63:	nop
  40bd64:	test   BYTE PTR ds:0x82f1af88,dl
  40bd6a:	call   0xe604:0xfa634fd8
  40bd71:	add    eax,0xe3e2dd19
  40bd76:	push   esi
  40bd77:	xor    al,0xfd
  40bd79:	ins    BYTE PTR es:[edi],dx
  40bd7a:	rol    BYTE PTR [eax+edx*8+0x4f],cl
  40bd7e:	sahf   
  40bd7f:	js     0x40bd52
  40bd81:	inc    esi
  40bd82:	scas   eax,DWORD PTR es:[edi]
  40bd83:	fbstp  TBYTE PTR [esi+0x7c]
  40bd86:	pusha  
  40bd87:	xor    eax,0x70382bfa
  40bd8c:	rol    ebx,0xdf
  40bd8f:	nop
  40bd90:	ds or  eax,0x2f71ed64
  40bd96:	push   esi
  40bd97:	xchg   DWORD PTR [esi+0x54],esp
  40bd9a:	(bad)  
  40bd9b:	aaa    
  40bd9c:	loope  0x40be18
  40bd9e:	pop    ss
  40bd9f:	adc    al,0xf6
  40bda1:	mov    eax,0xfee4f0c2
  40bda6:	ja     0x40bdeb
  40bda8:	lods   al,BYTE PTR ds:[esi]
  40bda9:	xchg   ebx,eax
  40bdaa:	add    eax,0x52076fe9
  40bdaf:	and    dl,bh
  40bdb1:	js     0x40bd6b
  40bdb3:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdb5:	push   ss
  40bdb6:	jne    0x40bd3a
  40bdb8:	adc    BYTE PTR fs:[ebx-0x1574e3ef],cl
  40bdbf:	fst    DWORD PTR [ecx+0xf316a28]
  40bdc5:	add    DWORD PTR [ecx-0x553d0ac1],0x85f693bc
  40bdcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bdd0:	out    0xb,eax
  40bdd2:	sbb    bl,BYTE PTR [eax-0x67]
  40bdd5:	adc    BYTE PTR [esi-0x7f3c48fa],bl
  40bddb:	test   al,0xbc
  40bddd:	(bad)  
  40bdde:	in     eax,0x6e
  40bde0:	data16 out dx,al
  40bde2:	mov    ds:0xcfdc663d,eax
  40bde7:	stos   BYTE PTR es:[edi],al
  40bde8:	mov    ds:0xebefc958,al
  40bded:	hlt    
  40bdee:	mov    eax,ds:0x3292fef5
  40bdf3:	call   0x6404:0x596caa0e
  40bdfa:	std    
  40bdfb:	add    DWORD PTR [ecx],eax
  40bdfd:	nop
  40bdfe:	mov    cl,0x5d
  40be00:	inc    edx
  40be01:	leave  
  40be02:	in     al,dx
  40be03:	push   cs
  40be04:	out    dx,al
  40be05:	rcr    BYTE PTR [esi+0x24],1
  40be08:	push   ds
  40be09:	lds    ebx,FWORD PTR [ecx-0x61ab49e2]
  40be0f:	imul   DWORD PTR [eax]
  40be11:	or     esi,DWORD PTR [eax]
  40be13:	push   edx
  40be14:	inc    edx
  40be15:	xor    al,0xad
  40be17:	loop   0x40be77
  40be19:	jmp    ecx
  40be1b:	cmp    DWORD PTR ds:0x6913ff8f,esp
  40be21:	test   al,0x39
  40be23:	add    ecx,DWORD PTR [ebp+0x42]
  40be26:	div    esp
  40be28:	es jae 0x40bdf2
  40be2b:	xchg   edi,eax
  40be2c:	dec    eax
  40be2d:	jg     0x40bdd6
  40be2f:	inc    ebp
  40be30:	int3   
  40be31:	add    esi,ebp
  40be33:	mov    al,ah
  40be35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be36:	sbb    eax,0x88e5cad2
  40be3b:	in     al,dx
  40be3c:	xchg   esp,eax
  40be3d:	ss mov ch,0x57
  40be40:	push   0x8e89308d
  40be45:	cmp    al,0x92
  40be47:	dec    esp
  40be48:	out    dx,al
  40be49:	xor    edx,DWORD PTR [esi-0x13d94979]
  40be4f:	in     eax,dx
  40be50:	aad    0x3f
  40be52:	loop   0x40be94
  40be54:	cmp    al,0xaf
  40be56:	rcr    ebp,1
  40be58:	or     esi,DWORD PTR [eax+edi*2]
  40be5b:	push   ebx
  40be5c:	jmp    0xf732:0x11aa8683
  40be63:	clc    
  40be64:	dec    esi
  40be65:	call   0xf8aa:0xe869a8cb
  40be6c:	fidiv  DWORD PTR [ebx+0x32]
  40be6f:	jl     0x40bec5
  40be71:	daa    
  40be72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be73:	lods   al,BYTE PTR ds:[esi]
  40be74:	push   0xfffffff8
  40be76:	mov    ds:0x3f7c0ca7,eax
  40be7b:	sbb    DWORD PTR [edi],edx
  40be7d:	mov    BYTE PTR [ebx-0x75],ah
  40be80:	inc    ebx
  40be81:	cmp    DWORD PTR [edi+ebp*2],edi
  40be84:	push   ebp
  40be85:	cmp    DWORD PTR [eax+ecx*2],ebp
  40be88:	or     bl,cl
  40be8a:	xor    al,0x93
  40be8c:	shl    ebp,1
  40be8e:	push   es
  40be8f:	mov    bh,0xbc
  40be91:	shr    bl,cl
  40be93:	jne    0x40be33
  40be95:	ret    
  40be96:	loopne 0x40be68
  40be98:	jne    0x40becf
  40be9a:	scas   eax,DWORD PTR es:[edi]
  40be9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be9c:	fwait
  40be9d:	dec    esp
  40be9e:	mov    bl,0xd4
  40bea0:	push   gs
  40bea2:	mov    BYTE PTR [ecx],0x97
  40bea5:	stos   DWORD PTR es:[edi],eax
  40bea6:	mov    eax,DWORD PTR [edx-0x58]
  40bea9:	xor    al,0x20
  40beab:	jmp    0x1223340
  40beb0:	sahf   
  40beb1:	and    DWORD PTR [ebp-0x3f],ebp
  40beb4:	pop    ebx
  40beb5:	cdq    
  40beb6:	fcom   DWORD PTR [edi]
  40beb8:	pop    esi
  40beb9:	into   
  40beba:	and    edi,ecx
  40bebc:	fbld   TBYTE PTR [ebp-0xa]
  40bebf:	clc    
  40bec0:	mov    WORD PTR [ebx],?
  40bec2:	jae    0x40be66
  40bec4:	jnp    0x40bef9
  40bec6:	sub    bh,BYTE PTR [edx+0x3e]
  40bec9:	mov    bh,0xaf
  40becb:	cmp    esi,DWORD PTR ss:[edx-0x26a8652b]
  40bed2:	inc    eax
  40bed3:	addr16 dec edx
  40bed5:	dec    ebx
  40bed6:	adc    DWORD PTR [eax+ebp*4-0x4dcf919c],edi
  40bedd:	sar    BYTE PTR [ecx+esi*8+0x4312f4ba],1
  40bee4:	and    eax,0x71912107
  40bee9:	pop    ebx
  40beea:	adc    BYTE PTR [edi-0x4c9de3b8],0x5
  40bef1:	aad    0x38
  40bef3:	leave  
  40bef4:	das    
  40bef5:	add    esi,ecx
  40bef7:	enter  0x436a,0xa4
  40befb:	test   eax,0x1967425f
  40bf00:	fsub   DWORD PTR [eax+0x59]
  40bf03:	adc    DWORD PTR gs:[eax-0x1ed05204],0xffffffb8
  40bf0b:	mov    dl,BYTE PTR [edx+0x1bfad632]
  40bf11:	stos   DWORD PTR es:[edi],eax
  40bf12:	out    0xbb,al
  40bf14:	ins    BYTE PTR es:[edi],dx
  40bf15:	fimul  WORD PTR [esi]
  40bf18:	mov    eax,DWORD PTR [edi-0x10]
  40bf1b:	call   0xb26d5a19
  40bf20:	xor    eax,DWORD PTR ds:0xd432d78d
  40bf26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf27:	cdq    
  40bf28:	lods   eax,DWORD PTR ds:[esi]
  40bf29:	add    DWORD PTR [eax-0x34],ecx
  40bf2c:	cmp    dl,ch
  40bf2e:	adc    bl,dl
  40bf30:	jns    0x40bf1a
  40bf32:	popf   
  40bf33:	aaa    
  40bf34:	out    0xaf,al
  40bf36:	aaa    
  40bf37:	in     eax,dx
  40bf38:	aam    0x38
  40bf3a:	enter  0xe820,0x81
  40bf3e:	mov    cl,0x4b
  40bf40:	pushf  
  40bf41:	xchg   ebx,eax
  40bf42:	xor    al,0x82
  40bf44:	mov    al,ds:0x15f69d49
  40bf49:	or     BYTE PTR [edx+0x1054e410],al
  40bf4f:	lds    edx,FWORD PTR [ecx]
  40bf51:	aaa    
  40bf52:	jecxz  0x40bf45
  40bf54:	imul   esp,DWORD PTR [esi+0x6d01aa7f],0xffffffd0
  40bf5b:	lods   al,BYTE PTR ds:[esi]
  40bf5c:	cdq    
  40bf5d:	cwde   
  40bf5e:	rcr    DWORD PTR [ebx+0x49936ae6],1
  40bf64:	popa   
  40bf65:	and    eax,0xc86b4260
  40bf6a:	daa    
  40bf6b:	xchg   DWORD PTR [edi],edi
  40bf6d:	dec    ecx
  40bf6e:	sbb    al,0x10
  40bf70:	aas    
  40bf71:	dec    esp
  40bf72:	stos   BYTE PTR es:[edi],al
  40bf73:	pushf  
  40bf74:	add    ebx,DWORD PTR [eax+0x5e]
  40bf77:	pop    ss
  40bf78:	sti    
  40bf79:	fbstp  TBYTE PTR [edx+ebp*1-0x6c]
  40bf7d:	dec    ebx
  40bf7e:	popa   
  40bf7f:	in     eax,dx
  40bf80:	cs jo  0x40bf97
  40bf83:	in     al,dx
  40bf84:	adc    al,0xc8
  40bf86:	mov    dh,0xb9
  40bf88:	dec    esp
  40bf89:	push   ds
  40bf8a:	out    dx,al
  40bf8b:	adc    DWORD PTR [ecx+0x52],0xc8567385
  40bf92:	inc    eax
  40bf93:	iret   
  40bf94:	mov    WORD PTR [edi-0x499aa792],fs
  40bf9a:	mov    cl,BYTE PTR [esi+ebp*2-0x5dd18180]
  40bfa1:	data16 or dh,BYTE PTR [eax+ecx*2-0x75cc9b91]
  40bfa9:	call   0xa159:0x9ce668c3
  40bfb0:	adc    eax,0x58c8e0e4
  40bfb5:	xor    BYTE PTR [ecx+0x3d0ddb0a],dl
  40bfbb:	sahf   
  40bfbc:	cmp    cl,BYTE PTR [ebx+0x477b229b]
  40bfc2:	gs sub eax,0x62b3dc6d
  40bfc8:	pop    edi
  40bfc9:	cmp    DWORD PTR [eax+0x1a],eax
  40bfcc:	ds mov ah,0x91
  40bfcf:	push   ds
  40bfd0:	mov    ch,0x34
  40bfd2:	fistp  DWORD PTR [ebx-0x42859b48]
  40bfd8:	stos   BYTE PTR es:[edi],al
  40bfd9:	dec    eax
  40bfda:	loopne 0x40bf75
  40bfdc:	sbb    DWORD PTR [edx-0x4141f7ae],esp
  40bfe2:	stos   DWORD PTR es:[edi],eax
  40bfe3:	test   DWORD PTR ds:0x5ad0a2a,ebx
  40bfe9:	mov    ebp,DWORD PTR [ebp+0x20d6df27]
  40bfef:	(bad)  
  40bff0:	not    DWORD PTR [ebx-0x7b59c77b]
  40bff6:	(bad)  
  40bff7:	ror    BYTE PTR ds:0x23aa7594,1
  40bffd:	pop    es
  40bffe:	dec    ebp
  40bfff:	dec    ebx
  40c000:	inc    ebp
  40c001:	pop    ebx
  40c002:	aaa    
  40c003:	imul   ebp,esi,0x905f5bd4
  40c009:	mov    eax,ebx
  40c00b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c00d:	sub    cl,BYTE PTR [ecx+0x4484b4c0]
  40c013:	cmp    dh,dh
  40c015:	pop    esi
  40c016:	ror    BYTE PTR [esi],0x75
  40c019:	data16 adc al,BYTE PTR [edi+0x2f642343]
  40c020:	(bad)  
  40c021:	xor    DWORD PTR [ebp-0x3c072952],edi
  40c027:	adc    ah,BYTE PTR [esi+0x27]
  40c02a:	sub    eax,0x48c2eeb
  40c02f:	in     eax,0xaf
  40c031:	inc    esp
  40c032:	adc    eax,0x6951964
  40c037:	jp     0x40c035
  40c039:	and    eax,0x2d731f48
  40c03e:	cmc    
  40c03f:	into   
  40c040:	jecxz  0x40c045
  40c042:	ins    DWORD PTR es:[edi],dx
  40c043:	mov    cs,ebx
  40c045:	outs   dx,BYTE PTR ds:[esi]
  40c046:	aad    0xd2
  40c048:	add    BYTE PTR [ebx],bh
  40c04a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c04b:	test   DWORD PTR [ecx+0x3c],ebp
  40c04e:	jg     0x40c07b
  40c050:	push   esp
  40c051:	mov    ds:0x1d480f41,eax
  40c056:	inc    edi
  40c057:	add    al,0x5
  40c059:	cmp    edi,DWORD PTR [eax+ebp*1-0x7601ba7d]
  40c060:	imul   esp,DWORD PTR [edx+edi*8],0x975d3e88
  40c067:	cdq    
  40c068:	inc    eax
  40c069:	ja     0x40c03d
  40c06b:	mov    ch,0x14
  40c06d:	pop    si
  40c06f:	(bad)  
  40c071:	push   ebp
  40c072:	scas   eax,DWORD PTR es:[edi]
  40c073:	fneni(8087 only) 
  40c075:	stos   DWORD PTR es:[edi],eax
  40c076:	aaa    
  40c077:	out    0xb0,al
  40c079:	ss dec esi
  40c07b:	std    
  40c07c:	add    al,BYTE PTR [edi]
  40c07e:	xor    DWORD PTR [edi],eax
  40c080:	cwde   
  40c081:	pop    ds
  40c082:	or     edi,DWORD PTR [eax]
  40c084:	dec    ecx
  40c085:	mov    ebp,0xb2afb8a6
  40c08a:	and    eax,0x5d3d9aea
  40c08f:	sbb    esi,DWORD PTR [esi-0x16]
  40c092:	ja     0x40c086
  40c094:	mov    ds:0xb85b2897,eax
  40c099:	inc    ebp
  40c09a:	jmp    0x40c033
  40c09c:	push   esi
  40c09d:	es pop esp
  40c09f:	jb     0x40c09f
  40c0a1:	mov    ecx,0xadf5cc62
  40c0a6:	popf   
  40c0a7:	stc    
  40c0a8:	test   al,0xec
  40c0aa:	bound  eax,QWORD PTR fs:0xc40826f
  40c0b1:	rcr    DWORD PTR [eax],1
  40c0b3:	sbb    ah,BYTE PTR [edi+eax*8-0x6f]
  40c0b7:	test   al,0xb2
  40c0b9:	xchg   edi,eax
  40c0ba:	icebp  
  40c0bb:	mov    esi,0xc0538bd6
  40c0c0:	sub    al,0x53
  40c0c2:	pop    ds
  40c0c3:	imul   ecx,ebx,0xb1243901
  40c0c9:	xchg   al,ah
  40c0cb:	mov    al,ds:0xe1c4556b
  40c0d0:	sbb    edx,ebx
  40c0d2:	popa   
  40c0d3:	popa   
  40c0d4:	mov    DWORD PTR [esi-0x37],ebx
  40c0d7:	sbb    eax,0x832a8b5
  40c0dc:	cmp    BYTE PTR [eax-0x5ffd872a],al
  40c0e2:	daa    
  40c0e3:	jp     0x40c153
  40c0e5:	loope  0x40c116
  40c0e7:	or     BYTE PTR ds:0x4522b6dd,dl
  40c0ed:	dec    esp
  40c0ee:	dec    eax
  40c0ef:	mov    edx,DWORD PTR [eax]
  40c0f1:	mov    eax,ds:0xa36a4b36
  40c0f6:	(bad)  
  40c0f7:	pop    ss
  40c0f8:	push   0x5ee3b3d9
  40c0fd:	aas    
  40c0fe:	inc    esp
  40c0ff:	fist   DWORD PTR [esi+0x9]
  40c102:	xchg   ebp,eax
  40c103:	cli    
  40c104:	ins    BYTE PTR es:[edi],dx
  40c105:	push   ebp
  40c106:	mov    bl,ch
  40c108:	mov    al,0x97
  40c10a:	and    BYTE PTR [eax],al
  40c10c:	and    eax,edx
  40c10e:	mov    al,ds:0xdbcf871d
  40c113:	test   esi,edx
  40c115:	or     al,0xeb
  40c117:	jae    0x40c175
  40c119:	mov    DWORD PTR [esi+0x43],edx
  40c11c:	pop    di
  40c11e:	or     eax,0x8845b8a6
  40c123:	mov    edi,0x93977a09
  40c128:	mov    al,ds:0xa6f5b1d4
  40c12d:	leave  
  40c12e:	shl    BYTE PTR [edx-0x15],1
  40c131:	not    BYTE PTR [ecx+eax*2-0xe419ebc]
  40c138:	pop    es
  40c139:	inc    ebx
  40c13a:	ja     0x40c0fd
  40c13c:	or     DWORD PTR [ebp+eiz*4-0x5a8fc882],esi
  40c143:	addr16 push ds
  40c145:	pop    esi
  40c146:	stc    
  40c147:	push   ds
  40c148:	lds    edx,FWORD PTR [ecx+0x60]
  40c14b:	mov    edx,0xd8c70b4c
  40c150:	mov    dh,BYTE PTR [edx-0x7bd4d987]
  40c156:	in     al,0x92
  40c158:	dec    ecx
  40c159:	pop    ds
  40c15a:	xchg   ebx,eax
  40c15b:	jecxz  0x40c19f
  40c15d:	adc    al,0x45
  40c15f:	or     bl,BYTE PTR [ebx-0x18752f4a]
  40c165:	(bad)  
  40c166:	sbb    BYTE PTR [ecx+0x3a817f4b],ch
  40c16c:	bound  ebx,QWORD PTR [edx]
  40c16e:	jno    0x40c18e
  40c170:	cwde   
  40c171:	out    0x35,al
  40c173:	and    DWORD PTR [ecx-0x30],ecx
  40c176:	jmp    0x40c11a
  40c178:	ror    BYTE PTR [ebx-0x4],0x93
  40c17c:	(bad)  
  40c17e:	push   esi
  40c17f:	mov    eax,ds:0x4a95f1d9
  40c184:	fdivr  QWORD PTR [ebx-0x4ccda111]
  40c18a:	sub    ebp,esp
  40c18c:	push   esp
  40c18d:	loope  0x40c171
  40c18f:	and    dh,BYTE PTR [ecx+0x2a8b2bf0]
  40c195:	dec    esp
  40c196:	or     eax,0xc6200f91
  40c19b:	ret    
  40c19c:	shl    cl,0x9
  40c19f:	fistp  DWORD PTR [esi-0x439e7a98]
  40c1a5:	cdq    
  40c1a6:	lock nop
  40c1a8:	(bad)
  40c1ab:	shr    BYTE PTR [edi],cl
  40c1ad:	pop    edx
  40c1ae:	xchg   ebp,eax
  40c1af:	ins    DWORD PTR es:[edi],dx
  40c1b0:	jne    0x40c13c
  40c1b2:	cli    
  40c1b3:	scas   eax,DWORD PTR es:[edi]
  40c1b4:	inc    esi
  40c1b5:	out    0xfd,al
  40c1b7:	loope  0x40c216
  40c1b9:	popa   
  40c1ba:	push   ebx
  40c1bb:	in     eax,dx
  40c1bc:	inc    ebx
  40c1bd:	xchg   edi,eax
  40c1be:	xor    al,0x41
  40c1c0:	enter  0x3bd0,0x87
  40c1c4:	sbb    al,0x5a
  40c1c6:	or     dl,dh
  40c1c8:	jb     0x40c15d
  40c1ca:	xor    dl,BYTE PTR [edx]
  40c1cc:	arpl   WORD PTR [ecx+0x72d36c0a],bp
  40c1d2:	imul   esp,DWORD PTR [ecx+0x58],0xcc25ce47
  40c1d9:	mov    eax,ds:0x91336340
  40c1de:	mov    dl,0x61
  40c1e0:	and    al,BYTE PTR [edx-0x162fbfcd]
  40c1e6:	and    BYTE PTR [ebp+0x4a3d66bb],ah
  40c1ec:	jp     0x40c17f
  40c1ee:	adc    esp,ebp
  40c1f0:	imul   ecx,DWORD PTR [ebx-0x5dd03995],0x258ff7b4
  40c1fa:	aas    
  40c1fb:	dec    edi
  40c1fc:	inc    esi
  40c1fd:	leave  
  40c1fe:	dec    edx
  40c1ff:	jp     0x40c22f
  40c201:	(bad)  
  40c202:	jg     0x40c1b1
  40c204:	gs mov bh,0x13
  40c207:	adc    ebp,DWORD PTR [edx-0x67ed551c]
  40c20d:	add    DWORD PTR [ebp-0x4],edx
  40c210:	dec    esp
  40c211:	fs xlat BYTE PTR gs:[ebx]
  40c214:	cwde   
  40c215:	outs   dx,DWORD PTR ds:[esi]
  40c216:	jp     0x40c1b2
  40c218:	add    esi,ebx
  40c21a:	xor    BYTE PTR [ebx-0x19],ch
  40c21d:	dec    edi
  40c21e:	out    0x1e,eax
  40c220:	pusha  
  40c221:	xor    DWORD PTR [ebp+0x301c9bcc],esi
  40c227:	imul   ebp,DWORD PTR [ebx+0x647b40d],0xb536af7e
  40c231:	test   BYTE PTR [edi-0x4e],ah
  40c234:	out    dx,eax
  40c235:	or     dh,cl
  40c237:	ja     0x40c222
  40c239:	jne    0x40c1dd
  40c23b:	cmp    esp,DWORD PTR [eax+0x2ae68b88]
  40c241:	or     eax,0x8478cba
  40c246:	mov    ebx,0xe93f5ab
  40c24b:	pop    ebx
  40c24c:	aas    
  40c24d:	push   edi
  40c24e:	inc    ebx
  40c24f:	lods   al,BYTE PTR ds:[esi]
  40c250:	jmp    0x40c273
  40c252:	pop    ss
  40c253:	cmp    ah,BYTE PTR [eax]
  40c255:	out    0xdc,al
  40c257:	adc    bh,0x75
  40c25a:	sbb    DWORD PTR [eax-0x42af85d0],esp
  40c260:	push   ecx
  40c261:	add    al,bh
  40c263:	jp     0x40c25a
  40c265:	ret    
  40c266:	clc    
  40c267:	cmp    BYTE PTR [eax-0x5d],0x37
  40c26b:	xor    al,BYTE PTR [esi-0x7ddaacb5]
  40c271:	add    BYTE PTR [edi],bl
  40c273:	aad    0xe2
  40c275:	dec    esp
  40c276:	xchg   ecx,eax
  40c277:	jno    0x40c297
  40c279:	jp     0x40c293
  40c27b:	js     0x40c224
  40c27d:	je     0x40c2d4
  40c27f:	fxch   st(0)
  40c281:	in     al,dx
  40c282:	loope  0x40c240
  40c284:	xor    esi,DWORD PTR [edi+0x132c2357]
  40c28a:	imul   esi,DWORD PTR [edx],0x4f
  40c28d:	xor    BYTE PTR [eax],0x62
  40c290:	ror    BYTE PTR [ecx+0x46],cl
  40c293:	gs hlt 
  40c295:	(bad)  
  40c296:	jmp    0x40c312
  40c298:	mov    BYTE PTR [ecx+ecx*4],bl
  40c29b:	jle    0x40c30b
  40c29d:	pop    ss
  40c29e:	sti    
  40c29f:	add    ah,BYTE PTR ds:0x6d4f66f6
  40c2a5:	iret   
  40c2a6:	out    0xc,al
  40c2a8:	sub    eax,0x1928184c
  40c2ad:	add    BYTE PTR [ecx],bl
  40c2af:	adc    DWORD PTR [edi-0x3a],ebx
  40c2b2:	repnz xor al,0xa7
  40c2b5:	push   esp
  40c2b6:	cmc    
  40c2b7:	cmp    ecx,DWORD PTR [edi+0x215d4004]
  40c2bd:	scas   al,BYTE PTR es:[edi]
  40c2be:	into   
  40c2bf:	pop    edi
  40c2c0:	sub    al,0x8e
  40c2c2:	retf   0xfccd
  40c2c5:	mov    al,ds:0xe65c6b2f
  40c2ca:	sahf   
  40c2cb:	fadd   QWORD PTR [ebx]
  40c2cd:	hlt    
  40c2ce:	(bad)  
  40c2cf:	cli    
  40c2d0:	dec    edx
  40c2d1:	lods   eax,DWORD PTR ds:[esi]
  40c2d2:	mov    bh,0xad
  40c2d4:	jne    0x40c26f
  40c2d6:	inc    edi
  40c2d7:	pop    ss
  40c2d8:	out    0x37,al
  40c2da:	push   edi
  40c2db:	mov    ds:0x8c32300,al
  40c2e0:	les    ebp,FWORD PTR [eax]
  40c2e2:	adc    al,0xe6
  40c2e4:	or     cl,BYTE PTR [ecx+0x59]
  40c2e7:	mov    ds:0x13f9aa06,eax
  40c2ec:	push   ecx
  40c2ed:	mov    edi,0xea08e1ec
  40c2f2:	dec    ecx
  40c2f3:	das    
  40c2f4:	jmp    0xfc0192b8
  40c2f9:	les    esi,FWORD PTR [eax]
  40c2fb:	push   cs
  40c2fc:	inc    edx
  40c2fd:	add    al,0x52
  40c2ff:	mov    ecx,0x58347382
  40c304:	jge    0x40c2f1
  40c306:	jnp    0x40c357
  40c308:	jae    0x40c316
  40c30a:	ficom  WORD PTR [eax+ecx*8-0x6c]
  40c30e:	out    dx,eax
  40c30f:	lods   al,BYTE PTR ds:[esi]
  40c310:	xchg   esi,eax
  40c311:	ret    
  40c312:	inc    bh
  40c314:	mov    dh,ah
  40c316:	mov    bl,0xc3
  40c318:	int    0xf4
  40c31a:	pop    ebx
  40c31b:	add    eax,0x4df08d90
  40c320:	pop    ecx
  40c321:	and    ecx,ecx
  40c323:	ror    ebx,1
  40c325:	and    bl,BYTE PTR [edi-0x5c]
  40c328:	imul   esi,DWORD PTR [ecx+0x18],0xffffff8a
  40c32c:	inc    edi
  40c32d:	fnsave [eax-0x5cd7d0e6]
  40c333:	or     bl,BYTE PTR [edi-0x51]
  40c336:	int3   
  40c337:	sbb    al,0x89
  40c339:	loop   0x40c3a4
  40c33b:	rol    DWORD PTR [ecx+0x45a529d5],1
  40c341:	cwde   
  40c342:	mov    dl,0x9c
  40c344:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c345:	test   eax,0xac6d6113
  40c34a:	cdq    
  40c34b:	jecxz  0x40c34e
  40c34d:	jae    0x40c363
  40c34f:	mul    esp
  40c351:	ret    0x2733
  40c354:	aas    
  40c355:	mov    esp,0x1e68ad2c
  40c35a:	loop   0x40c2e4
  40c35c:	pop    edx
  40c35d:	xor    cl,bh
  40c35f:	jp     0x40c39d
  40c361:	jne    0x40c301
  40c363:	(bad)  
  40c364:	popa   
  40c365:	dec    esp
  40c366:	dec    esi
  40c367:	repnz fisubr WORD PTR [ebx+eax*8-0xfb929a3]
  40c36f:	in     al,dx
  40c370:	in     al,0x4b
  40c372:	push   ebx
  40c373:	fwait
  40c374:	sahf   
  40c375:	add    ebp,DWORD PTR [edi+0x70d2557f]
  40c37b:	outs   dx,DWORD PTR ds:[esi]
  40c37c:	adc    eax,DWORD PTR [ecx+ebp*4]
  40c37f:	push   esp
  40c380:	lods   eax,DWORD PTR ds:[esi]
  40c381:	inc    ebx
  40c382:	or     DWORD PTR [edx+0x5a86aa97],esi
  40c388:	aad    0xf0
  40c38a:	sub    bl,BYTE PTR [ecx-0xe]
  40c38d:	adc    al,0xeb
  40c38f:	add    DWORD PTR [esi-0x2d],ecx
  40c392:	jno    0x40c3c2
  40c394:	stos   BYTE PTR es:[edi],al
  40c395:	sub    BYTE PTR [ebp+0x3fda7f3f],ah
  40c39b:	(bad)  
  40c39c:	stos   DWORD PTR es:[edi],eax
  40c39d:	arpl   WORD PTR cs:[ebp+0x17],bx
  40c3a1:	dec    esi
  40c3a2:	(bad)  
  40c3a3:	pop    es
  40c3a4:	xchg   esp,eax
  40c3a5:	and    al,BYTE PTR [ebp-0x64]
  40c3a8:	pop    ebx
  40c3a9:	ins    BYTE PTR es:[edi],dx
  40c3aa:	jp     0x40c34c
  40c3ac:	repnz or dh,cl
  40c3af:	dec    ebp
  40c3b0:	jmp    0xe505d29
  40c3b5:	popf   
  40c3b6:	dec    ebp
  40c3b7:	aaa    
  40c3b8:	cwde   
  40c3b9:	add    DWORD PTR [esi-0x4c],esp
  40c3bc:	or     bl,BYTE PTR [ecx]
  40c3be:	xor    eax,0x10ecca2a
  40c3c3:	cmp    al,0xa2
  40c3c5:	mov    esi,0x17fcde1f
  40c3ca:	adc    ebp,esp
  40c3cc:	sub    ebx,0x91015659
  40c3d2:	stc    
  40c3d3:	daa    
  40c3d4:	cmp    BYTE PTR [esi-0x1e],dh
  40c3d7:	test   DWORD PTR [ebp+eiz*1+0x5cb8b703],esp
  40c3de:	fmul   QWORD PTR [edi-0x42bd7f84]
  40c3e4:	std    
  40c3e5:	add    esi,DWORD PTR [eax]
  40c3e7:	or     eax,0x59aa771b
  40c3ec:	add    al,0x22
  40c3ee:	cdq    
  40c3ef:	xchg   ebp,eax
  40c3f0:	mov    ds:0x41d616ee,al
  40c3f5:	arpl   WORD PTR [eax-0x37e8b37],bp
  40c3fb:	jmp    0x2d63:0xd36cedd7
  40c402:	cli    
  40c403:	shl    DWORD PTR [esi+0x4e],1
  40c406:	or     eax,0x83c011fa
  40c40b:	inc    ebx
  40c40c:	fcomp  DWORD PTR [edx]
  40c40e:	into   
  40c40f:	mov    edx,0xd2c12167
  40c414:	sub    dh,0x45
  40c417:	pop    ds
  40c418:	clc    
  40c419:	inc    ebx
  40c41a:	pop    ds
  40c41b:	mov    esp,0x54ea268
  40c420:	sbb    DWORD PTR [ebx-0x43],ebp
  40c423:	popf   
  40c424:	in     eax,0x78
  40c426:	scas   al,BYTE PTR es:[edi]
  40c427:	pop    es
  40c428:	jbe    0x40c423
  40c42a:	sub    dl,BYTE PTR [esi]
  40c42c:	sub    al,0x95
  40c42e:	or     DWORD PTR ds:0xfaef4aa6,0xffffffb9
  40c435:	xor    ecx,DWORD PTR [ebp-0x11]
  40c438:	or     bl,BYTE PTR [eax+ebx*2]
  40c43b:	push   edi
  40c43c:	push   0x26
  40c43e:	and    DWORD PTR [ebp-0x65],edi
  40c441:	loopne 0x40c4b3
  40c443:	add    DWORD PTR [eax+0x62c680fd],ebx
  40c449:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c44a:	ds jg  0x40c493
  40c44d:	bound  edi,QWORD PTR [ecx+0x5d8ab0ad]
  40c453:	dec    esi
  40c454:	ins    BYTE PTR es:[edi],dx
  40c455:	mov    esp,DWORD PTR [ebx+0x2b]
  40c458:	push   ebp
  40c459:	cmc    
  40c45a:	shl    DWORD PTR [esi+0x54],0xb4
  40c45e:	cmc    
  40c45f:	lock dec ebp
  40c461:	ds popa 
  40c463:	cmp    al,0x11
  40c465:	mov    WORD PTR [bp+di],?
  40c468:	pop    esp
  40c469:	cld    
  40c46a:	xchg   ecx,eax
  40c46b:	mov    ebp,0xc3ef11b3
  40c470:	ret    0xe7e4
  40c473:	push   DWORD PTR [ebx-0x7e]
  40c476:	ins    DWORD PTR es:[edi],dx
  40c477:	jmp    0x4f03:0x366af3b2
  40c47e:	cwde   
  40c47f:	test   al,0xc6
  40c481:	in     al,dx
  40c482:	jmp    0xc5ea8816
  40c487:	sbb    DWORD PTR ds:0xea7a91b7,ebx
  40c48d:	test   DWORD PTR [ecx+edx*1],0x53eb381d
  40c494:	dec    esp
  40c495:	sbb    al,BYTE PTR [ecx]
  40c497:	xchg   esi,eax
  40c498:	sahf   
  40c499:	mov    esi,0xbaaff23d
  40c49e:	mov    cl,dh
  40c4a0:	mov    ah,0xfd
  40c4a2:	or     BYTE PTR [esp+esi*2-0x56],0xde
  40c4a7:	or     dl,BYTE PTR [eax]
  40c4a9:	inc    eax
  40c4aa:	push   eax
  40c4ab:	or     eax,0x12cbca0a
  40c4b0:	push   ebp
  40c4b1:	adc    BYTE PTR [esi],ah
  40c4b3:	sbb    al,0xe7
  40c4b5:	xor    eax,0x386b7056
  40c4ba:	xchg   edx,eax
  40c4bb:	add    al,0x15
  40c4bd:	popf   
  40c4be:	ins    BYTE PTR es:[edi],dx
  40c4bf:	retf   0x63dd
  40c4c2:	iret   
  40c4c3:	and    DWORD PTR [edi],ebp
  40c4c5:	shr    DWORD PTR [ebx-0x5e7626cd],1
  40c4cb:	push   ds
  40c4cc:	add    BYTE PTR [ebx*1+0x442d1092],0x79
  40c4d4:	xchg   DWORD PTR [eax+0x608904bd],edi
  40c4da:	or     al,0x4b
  40c4dc:	int3   
  40c4dd:	fisttp WORD PTR [esp+eax*4]
  40c4e0:	cli    
  40c4e1:	fcomp  QWORD PTR [eax-0x1b]
  40c4e4:	lds    esi,FWORD PTR [esi]
  40c4e6:	mov    dh,0x5e
  40c4e8:	imul   edx,DWORD PTR [edx],0xfe4de2da
  40c4ee:	xchg   edx,eax
  40c4ef:	lods   al,BYTE PTR ds:[esi]
  40c4f0:	out    0xba,al
  40c4f2:	pop    ebx
  40c4f3:	xchg   esi,eax
  40c4f4:	add    DWORD PTR [ecx+0x3e],esi
  40c4f7:	ss cmp eax,0x42e39a1a
  40c4fd:	ins    DWORD PTR es:[edi],dx
  40c4fe:	stos   DWORD PTR es:[edi],eax
  40c4ff:	or     BYTE PTR [ebp-0x58],bl
  40c502:	and    al,0x60
  40c504:	pop    esi
  40c505:	scas   eax,DWORD PTR es:[edi]
  40c506:	out    dx,eax
  40c507:	and    cl,BYTE PTR [bx+si-0x5621]
  40c50c:	cmc    
  40c50d:	out    dx,eax
  40c50e:	sti    
  40c50f:	or     BYTE PTR [edx-0x80],al
  40c512:	pop    ds
  40c513:	xchg   edx,eax
  40c514:	imul   ebx,DWORD PTR [edi+0x27925f07],0x64280929
  40c51e:	sub    al,ch
  40c520:	pop    esi
  40c521:	rol    BYTE PTR [ebx-0x68],0xcf
  40c525:	dec    esp
  40c526:	inc    eax
  40c527:	push   edx
  40c528:	out    dx,al
  40c529:	pop    ecx
  40c52a:	cmp    ecx,DWORD PTR [ebp-0xc]
  40c52d:	push   cs
  40c52e:	push   ss
  40c52f:	push   es
  40c530:	pop    ebx
  40c531:	jb     0x40c4b9
  40c533:	retf   0x2ff0
  40c536:	inc    ebp
  40c537:	(bad)  
  40c538:	dec    ebx
  40c539:	push   ss
  40c53a:	dec    edx
  40c53b:	das    
  40c53c:	test   DWORD PTR [esi],edi
  40c53e:	pop    ds
  40c53f:	mov    ebx,0x5ddbe709
  40c544:	jmp    0x40c5aa
  40c546:	pop    ebx
  40c547:	sub    eax,0xcbff3806
  40c54c:	fmul   QWORD PTR [edi+esi*2+0x37ded7b1]
  40c553:	push   eax
  40c554:	mov    cl,0x7b
  40c556:	fsub   QWORD PTR [ecx-0x44797c4f]
  40c55c:	call   0xd1cb:0x70a64b98
  40c563:	mov    al,0xc3
  40c565:	scas   al,BYTE PTR es:[edi]
  40c566:	inc    ebx
  40c567:	pop    ebx
  40c568:	(bad)  
  40c569:	in     eax,dx
  40c56a:	fsubp  st(5),st
  40c56c:	stos   BYTE PTR es:[edi],al
  40c56d:	sbb    BYTE PTR [eiz*4+0x3d4e01fd],bh
  40c574:	sbb    esp,esi
  40c576:	xchg   ecx,eax
  40c577:	test   BYTE PTR [edx-0x61],cl
  40c57a:	js     0x40c5c8
  40c57c:	pop    eax
  40c57d:	mov    BYTE PTR [ebx+0x621bdceb],bl
  40c583:	fwait
  40c584:	aam    0x1a
  40c586:	dec    ebx
  40c587:	cmp    ebp,DWORD PTR [ecx]
  40c589:	and    ah,BYTE PTR [ebx-0x532e539d]
  40c58f:	not    BYTE PTR [ebx]
  40c591:	les    eax,FWORD PTR [esi]
  40c593:	jno    0x40c5ad
  40c595:	in     eax,dx
  40c596:	repnz test DWORD PTR [edi],0x8a184faf
  40c59d:	stos   BYTE PTR es:[edi],al
  40c59e:	frstor [edi-0x520de2fe]
  40c5a4:	add    DWORD PTR [ecx+0x6aea015b],0x3e232d56
  40c5ae:	add    esp,DWORD PTR [edi+0x2d]
  40c5b1:	cmc    
  40c5b2:	outs   dx,DWORD PTR ds:[esi]
  40c5b3:	xor    bl,BYTE PTR [edx]
  40c5b5:	ret    0xf938
  40c5b8:	xor    ebx,DWORD PTR [eax-0x4f]
  40c5bb:	add    BYTE PTR [ebx],ch
  40c5bd:	adc    eax,0x1cfd51b5
  40c5c2:	push   eax
  40c5c3:	pop    esp
  40c5c4:	cmp    esp,DWORD PTR [esp+ebp*8]
  40c5c7:	mov    esp,0xd4abf3c0
  40c5cc:	jns    0x40c568
  40c5ce:	ins    DWORD PTR es:[edi],dx
  40c5cf:	pop    ss
  40c5d0:	pop    edi
  40c5d1:	mov    bl,BYTE PTR [ecx]
  40c5d3:	add    ecx,DWORD PTR [ebx+0x1c9ca162]
  40c5d9:	call   DWORD PTR ds:0xe91f5496
  40c5df:	test   BYTE PTR [edi-0x76],dl
  40c5e2:	je     0x40c569
  40c5e4:	outs   dx,BYTE PTR ds:[esi]
  40c5e5:	pop    esi
  40c5e6:	add    cl,BYTE PTR [ebx+0x1a627a34]
  40c5ec:	sbb    ebx,0xb1dccd03
  40c5f2:	aaa    
  40c5f3:	and    BYTE PTR [esi+0x1921caa2],al
  40c5f9:	push   ss
  40c5fa:	rcr    BYTE PTR [edi-0x21],0x21
  40c5fe:	sub    DWORD PTR [edi+ebp*4],eax
  40c601:	cdq    
  40c602:	es mov ecx,0x40c6411f
  40c608:	or     al,0x41
  40c60a:	scas   al,BYTE PTR es:[edi]
  40c60b:	stos   BYTE PTR es:[edi],al
  40c60c:	mov    ah,0x12
  40c60e:	pushf  
  40c60f:	stos   BYTE PTR es:[edi],al
  40c610:	adc    DWORD PTR [ebx+ebp*8-0x3a135473],ebx
  40c617:	inc    ebp
  40c618:	inc    ecx
  40c619:	loope  0x40c59b
  40c61b:	jno    0x40c65e
  40c61d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c61e:	or     ch,ah
  40c620:	(bad)  
  40c621:	ins    DWORD PTR es:[edi],dx
  40c622:	xchg   ebx,eax
  40c623:	sbb    ch,BYTE PTR [edx]
  40c625:	mov    ds:0xc7065ea4,eax
  40c62a:	pop    ebp
  40c62b:	dec    esp
  40c62c:	cwde   
  40c62d:	ror    BYTE PTR [edi-0xb],1
  40c630:	mov    al,0x45
  40c632:	adc    al,0xe3
  40c634:	mov    BYTE PTR [edi+0xfd41329],0xaa
  40c63b:	or     BYTE PTR [esi+eax*2+0x230cd6a7],ch
  40c642:	ror    ebp,cl
  40c644:	ss pop ecx
  40c646:	jns    0x40c608
  40c648:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c649:	fisubr WORD PTR ds:0x7d2d3238
  40c64f:	push   0xffffff9c
  40c651:	cld    
  40c652:	ret    
  40c653:	dec    BYTE PTR [eax+0x4f]
  40c656:	jae    0x40c684
  40c658:	cmp    eax,0xdde48201
  40c65d:	push   es
  40c65e:	mov    ebx,0x67661d4
  40c663:	mov    ebx,0x5c69478d
  40c668:	inc    ecx
  40c669:	mov    ds:0xccf62964,eax
  40c66e:	xchg   edx,eax
  40c66f:	ror    BYTE PTR [esi],1
  40c671:	sub    eax,0xf17c7348
  40c676:	out    0x32,eax
  40c678:	dec    edx
  40c679:	lea    ebp,[ebp+0x13f9acf7]
  40c67f:	mov    ds:0x203550b7,eax
  40c684:	mov    esi,0x5021bf5
  40c689:	rcl    BYTE PTR [edi],1
  40c68b:	in     eax,dx
  40c68c:	jo     0x40c612
  40c68e:	out    0xbf,eax
  40c690:	fcom   DWORD PTR [ebx]
  40c692:	push   esp
  40c693:	ja     0x40c672
  40c695:	(bad)  
  40c696:	mov    dh,0xe3
  40c698:	aad    0x98
  40c69a:	xchg   ebp,esp
  40c69c:	test   al,0x6a
  40c69e:	retf   
  40c69f:	adc    al,0x62
  40c6a1:	push   esp
  40c6a2:	cmp    BYTE PTR [edi-0x7],ch
  40c6a5:	add    esp,DWORD PTR [ebx+0x3fcd7e47]
  40c6ab:	daa    
  40c6ac:	les    ebx,FWORD PTR [edx-0x68]
  40c6af:	sbb    ecx,ebp
  40c6b1:	pop    ecx
  40c6b2:	mov    al,ds:0xa3322b4f
  40c6b7:	(bad)  
  40c6b8:	or     eax,0x13d923ea
  40c6bd:	xchg   ebx,eax
  40c6be:	clc    
  40c6bf:	xor    al,0x17
  40c6c1:	xchg   BYTE PTR [esi-0x3980faa8],ah
  40c6c7:	lds    ecx,FWORD PTR [edi]
  40c6c9:	lds    ebp,FWORD PTR [edi+0x2b]
  40c6cc:	shl    DWORD PTR [edi+0x1f774237],1
  40c6d2:	outs   dx,BYTE PTR ds:[esi]
  40c6d3:	daa    
  40c6d4:	mov    ds:0xc01ac142,eax
  40c6d9:	fs in  al,0x61
  40c6dc:	adc    ecx,0xffffffbb
  40c6df:	and    eax,0x579a93fd
  40c6e4:	fsub   DWORD PTR [eax+edx*1-0xc4f5048]
  40c6eb:	jb     0x40c743
  40c6ed:	pop    esp
  40c6ee:	jns    0x40c6f8
  40c6f0:	ss and al,0xc5
  40c6f3:	xchg   ebp,eax
  40c6f4:	push   ds
  40c6f5:	pop    esp
  40c6f6:	fwait
  40c6f7:	inc    eax
  40c6f8:	mov    ah,0x33
  40c6fa:	or     BYTE PTR [ecx-0x67],ah
  40c6fd:	mov    bh,0x66
  40c6ff:	adc    eax,0xae4c0997
  40c704:	sub    dh,bl
  40c706:	sub    bl,dh
  40c708:	ret    0x8042
  40c70b:	repz mov WORD PTR [eax],?
  40c70e:	std    
  40c70f:	(bad)  
  40c710:	call   FWORD PTR [ecx-0x10]
  40c713:	jno    0x40c6ad
  40c715:	pop    ebx
  40c716:	call   FWORD PTR [esi-0x4059b574]
  40c71c:	lea    eax,[edi]
  40c71e:	mov    edx,0xdfb7833d
  40c723:	sbb    eax,0xd1133e56
  40c728:	pop    edi
  40c729:	in     eax,0xe8
  40c72b:	shl    BYTE PTR [ebp+0x56],cl
  40c72e:	cmp    al,0x24
  40c730:	rol    BYTE PTR [esi],1
  40c732:	sub    al,0x43
  40c734:	or     ebp,DWORD PTR [eax]
  40c736:	pushf  
  40c737:	mov    ch,BYTE PTR [edi+esi*8-0x1d]
  40c73b:	push   edi
  40c73c:	in     eax,0x25
  40c73e:	add    DWORD PTR [ecx],edi
  40c740:	aas    
  40c741:	(bad)  
  40c743:	imul   edx,DWORD PTR [ebp+0x4a],0x1e0cfb41
  40c74a:	mov    bh,0x1f
  40c74c:	jnp    0x40c6db
  40c74e:	in     al,dx
  40c74f:	push   eax
  40c750:	repz imul edx,DWORD PTR [edi+eax*8-0x3f],0x7628e5e8
  40c759:	sub    eax,0xfbe5efc7
  40c75e:	cld    
  40c75f:	scas   al,BYTE PTR es:[di]
  40c761:	pushf  
  40c762:	mov    ds:0xa7c7637,al
  40c767:	daa    
  40c768:	int    0x8b
  40c76a:	mov    BYTE PTR [ebp+0x63],dh
  40c76d:	adc    al,0x99
  40c76f:	cmp    dl,bl
  40c771:	ins    DWORD PTR es:[edi],dx
  40c772:	push   ss
  40c773:	xor    BYTE PTR [ebx+eiz*1+0x57],ah
  40c777:	pusha  
  40c778:	adc    BYTE PTR [eax],ch
  40c77a:	cmp    ebx,edx
  40c77c:	jg     0x40c7b0
  40c77e:	jmp    0x64a59c99
  40c783:	(bad)  
  40c784:	push   cs
  40c785:	jne    0x40c708
  40c787:	cmp    ah,BYTE PTR [esi]
  40c789:	pop    ebp
  40c78a:	lahf   
  40c78b:	mov    eax,ds:0x3b6c9544
  40c790:	and    al,0xe9
  40c792:	daa    
  40c793:	in     eax,0x82
  40c795:	inc    esp
  40c796:	push   ebx
  40c797:	push   ds
  40c798:	les    edi,FWORD PTR [ecx]
  40c79a:	das    
  40c79b:	dec    eax
  40c79c:	(bad)  
  40c79e:	out    0x78,al
  40c7a0:	or     dh,BYTE PTR [ebx+ebp*4+0xa]
  40c7a4:	push   ecx
  40c7a5:	sub    ebx,ebx
  40c7a7:	pop    ebx
  40c7a8:	mov    ds:0xbbb02475,eax
  40c7ad:	cmp    eax,0x17462ccd
  40c7b2:	pop    eax
  40c7b3:	xor    dl,al
  40c7b5:	aam    0x75
  40c7b7:	xor    ch,BYTE PTR ds:0xc67444b1
  40c7bd:	mov    esi,DWORD PTR [esi+esi*2-0x15]
  40c7c1:	xor    al,0x28
  40c7c3:	add    dh,cl
  40c7c5:	mov    eax,0x13380a38
  40c7ca:	mov    esi,0xcc79f108
  40c7cf:	fimul  WORD PTR [edx-0x5aa00b63]
  40c7d5:	fiadd  WORD PTR [eax+0x6bdebaf]
  40c7db:	add    bh,BYTE PTR [esi]
  40c7dd:	sub    al,ch
  40c7df:	mov    DWORD PTR [ecx+0x4c],ecx
  40c7e2:	inc    esi
  40c7e3:	lea    esi,[esi]
  40c7e5:	jns    0x40c7f3
  40c7e7:	adc    bh,BYTE PTR [edx-0x68]
  40c7ea:	mov    esi,0xe7963028
  40c7ef:	aaa    
  40c7f0:	cmp    al,0xdb
  40c7f2:	mov    ebp,fs
  40c7f4:	push   esi
  40c7f5:	adc    BYTE PTR [edi+edx*2],0x59
  40c7f9:	test   eax,0x3bb8501f
  40c7fe:	jo     0x40c7ff
  40c800:	mov    al,0xaf
  40c802:	jmp    0x40c7a2
  40c804:	push   ebp
  40c805:	mov    bh,dl
  40c807:	pop    edx
  40c808:	cmp    DWORD PTR [edi-0x64],0xffffff8a
  40c80c:	loop   0x40c87b
  40c80e:	in     al,0x2d
  40c810:	cmp    DWORD PTR [eax-0x1947b791],edi
  40c816:	popa   
  40c817:	xchg   esp,eax
  40c818:	inc    edx
  40c819:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c81a:	aad    0xb7
  40c81c:	sbb    al,0x8
  40c81e:	xor    esp,DWORD PTR ds:0x3fee5dd5
  40c824:	jbe    0x40c7e3
  40c826:	clc    
  40c827:	mov    dl,0x95
  40c829:	xor    eax,0x133b6ec3
  40c82e:	call   0xc269:0x9b33c35d
  40c835:	ja     0x40c878
  40c837:	hlt    
  40c838:	cmp    al,0xea
  40c83a:	popa   
  40c83b:	push   0x38
  40c83d:	pop    es
  40c83e:	inc    ebx
  40c83f:	jge    0x40c850
  40c841:	fcomp  QWORD PTR [ecx+edi*2]
  40c844:	xchg   DWORD PTR [esi+edi*8],esp
  40c847:	pop    eax
  40c848:	inc    ebx
  40c849:	ficom  DWORD PTR [esi+0x7a]
  40c84c:	push   0x723568ea
  40c851:	mov    ecx,0x6fb144de
  40c856:	sar    BYTE PTR [eax+0x76876714],0x53
  40c85d:	push   ss
  40c85e:	js     0x40c8ba
  40c860:	sub    eax,DWORD PTR [ebp+0x65ef5976]
  40c866:	mov    dh,0x79
  40c868:	cmc    
  40c869:	test   eax,0x5aa8b858
  40c86e:	and    eax,0xff30b6bd
  40c873:	jecxz  0x40c8b2
  40c875:	mov    edx,0xc25687e3
  40c87a:	sub    al,dl
  40c87c:	in     eax,0x40
  40c87e:	push   cs
  40c87f:	imul   ebx,DWORD PTR ds:0xbd74fc4f,0xffffffda
  40c886:	gs dec esp
  40c888:	sub    eax,0x671f5598
  40c88d:	xchg   ecx,eax
  40c88e:	cmp    esi,DWORD PTR ds:0x996228c
  40c894:	sub    edx,esi
  40c896:	jb     0x40c8b5
  40c898:	jbe    0x40c82a
  40c89a:	lds    ebx,FWORD PTR [ebp+0x64b978af]
  40c8a0:	in     eax,dx
  40c8a1:	jae    0x40c91b
  40c8a3:	sbb    edx,DWORD PTR ss:[esi+0x3c]
  40c8a7:	jae    0x40c909
  40c8a9:	cld    
  40c8aa:	fsub   QWORD PTR [edi]
  40c8ac:	xchg   edi,eax
  40c8ad:	cmp    ecx,DWORD PTR [edx-0x3d1a9c3b]
  40c8b3:	dec    edi
  40c8b4:	xchg   esi,eax
  40c8b5:	xchg   ecx,eax
  40c8b6:	sbb    dh,BYTE PTR [eax]
  40c8b8:	int    0x30
  40c8ba:	scas   al,BYTE PTR es:[edi]
  40c8bb:	repz cs ds ret 
  40c8bf:	in     al,0x6a
  40c8c1:	adc    esi,edx
  40c8c3:	mov    eax,ds:0xd1f75a26
  40c8c8:	das    
  40c8c9:	loop   0x40c85f
  40c8cb:	adc    esi,ecx
  40c8cd:	jecxz  0x40c935
  40c8cf:	or     BYTE PTR [esi+0xe],al
  40c8d2:	test   esi,edx
  40c8d4:	mov    dl,0x2b
  40c8d6:	aam    0xce
  40c8d8:	std    
  40c8d9:	pusha  
  40c8da:	leave  
  40c8db:	sub    DWORD PTR [edi+0x7b415211],ebx
  40c8e1:	adc    esi,ecx
  40c8e3:	in     al,dx
  40c8e4:	inc    edx
  40c8e5:	mov    ds:0x2ab1f8a1,eax
  40c8ea:	sub    BYTE PTR [esi-0x78e9fb73],cl
  40c8f0:	loop   0x40c96f
  40c8f2:	test   edi,ebx
  40c8f4:	in     al,dx
  40c8f5:	sbb    eax,0xd87712f0
  40c8fa:	xor    al,0x75
  40c8fc:	mov    ecx,0xb5927668
  40c901:	aam    0xb5
  40c903:	sub    cl,ch
  40c905:	xor    ebx,ecx
  40c907:	mov    esp,0xdca19573
  40c90c:	sub    bh,ah
  40c90e:	sub    al,0x7e
  40c910:	pop    DWORD PTR [edx-0x45]
  40c913:	pop    ds
  40c914:	aas    
  40c915:	ds xor dl,cl
  40c918:	leave  
  40c919:	jecxz  0x40c957
  40c91b:	sub    dh,BYTE PTR es:[edi]
  40c91e:	shl    DWORD PTR [esi-0x3f],cl
  40c921:	sbb    eax,0xf917b95e
  40c926:	into   
  40c927:	pop    ebp
  40c928:	inc    edx
  40c929:	aas    
  40c92a:	xchg   esi,eax
  40c92b:	cdq    
  40c92c:	push   es
  40c92d:	xchg   ebp,eax
  40c92e:	mov    ds:0x7abb503a,eax
  40c933:	sub    BYTE PTR [edx],cl
  40c935:	jg     0x40c8d0
  40c937:	lds    esi,FWORD PTR cs:[ecx]
  40c93a:	jle    0x40c93b
  40c93c:	js     0x40c960
  40c93e:	int3   
  40c93f:	shr    DWORD PTR [ebx],0xf9
  40c942:	cmp    al,0x12
  40c944:	adc    eax,0xca993959
  40c949:	xchg   BYTE PTR [esi],bh
  40c94b:	push   ebx
  40c94c:	sbb    DWORD PTR [edx+0x144659f7],edi
  40c952:	jmp    0xd32ea725
  40c957:	pop    ecx
  40c958:	jmp    0x40c960
  40c95a:	movq   mm4,mm2
  40c95d:	fninit 
  40c95f:	fistp  QWORD PTR [eax-0x11]
  40c962:	fstp   DWORD PTR [eax-0x4d3d2826]
  40c968:	rcr    DWORD PTR [ecx],cl
  40c96a:	fldenv [edi-0x56b87df3]
  40c970:	inc    edi
  40c971:	mov    ?,WORD PTR [ebx+0x2b3a6702]
  40c977:	jge    0x40c956
  40c979:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c97a:	(bad)  
  40c97b:	in     eax,dx
  40c97c:	ror    edi,0x33
  40c97f:	cdq    
  40c980:	pop    esi
  40c981:	fsubr  QWORD PTR [esp+eiz*4+0x2f]
  40c985:	cmc    
  40c986:	push   ecx
  40c987:	and    eax,0x361d101d
  40c98c:	dec    esi
  40c98d:	and    eax,0x74a7e944
  40c992:	xchg   edi,eax
  40c993:	popf   
  40c994:	(bad)  
  40c995:	xchg   ebp,eax
  40c996:	and    BYTE PTR [edi-0x1bfd1cb],al
  40c99c:	adc    dl,0x3e
  40c99f:	cwde   
  40c9a0:	mul    BYTE PTR [eax]
  40c9a2:	popf   
  40c9a3:	pop    edx
  40c9a4:	inc    esp
  40c9a5:	push   esp
  40c9a6:	mov    edi,0x735842f
  40c9ab:	and    BYTE PTR [ecx-0x33],0x57
  40c9af:	cmp    BYTE PTR [ebp+0x57c65e8],0xc3
  40c9b6:	mov    edi,0xcf12e3fb
  40c9bb:	adc    BYTE PTR ds:0x6e50ab8c,dl
  40c9c1:	jbe    0x40c9f0
  40c9c3:	out    dx,al
  40c9c4:	aas    
  40c9c5:	push   edi
  40c9c6:	mov    esp,eax
  40c9c8:	fidivr DWORD PTR es:[ebx-0x5664d848]
  40c9cf:	cdq    
  40c9d0:	sub    DWORD PTR [ecx],edx
  40c9d2:	xor    eax,0x3fd9998c
  40c9d7:	mov    al,ds:0xd4fd92b8
  40c9dc:	int    0xa
  40c9de:	imul   edi,esp,0x1793a2dd
  40c9e4:	(bad)  ds:0x824d86f7
  40c9ea:	shr    DWORD PTR [ebx],0xa6
  40c9ed:	xchg   BYTE PTR [ecx],dl
  40c9ef:	xlat   BYTE PTR ds:[ebx]
  40c9f0:	pop    edi
  40c9f1:	sub    eax,0x62813c57
  40c9f6:	adc    eax,0x61c6554
  40c9fb:	jp     0x40c9b7
  40c9fd:	ret    
  40c9fe:	xor    BYTE PTR [ebx+0x2f],cl
  40ca01:	stos   DWORD PTR es:[edi],eax
  40ca02:	retf   0xe194
  40ca05:	cmp    BYTE PTR [ebx-0x4d],0x2f
  40ca09:	pop    ecx
  40ca0a:	or     DWORD PTR [edx-0x28e08a8e],edi
  40ca10:	ja     0x40ca83
  40ca12:	adc    dl,dl
  40ca14:	push   ds
  40ca15:	scas   eax,DWORD PTR es:[edi]
  40ca16:	gs xchg esi,eax
  40ca18:	sbb    al,0x0
  40ca1a:	push   ss
  40ca1b:	imul   edi,DWORD PTR gs:[esi-0x2a],0xc
  40ca20:	jns    0x40ca7e
  40ca22:	xchg   ebx,eax
  40ca23:	not    esi
  40ca25:	rcl    BYTE PTR [edi-0x2f0089fd],0x8c
  40ca2c:	out    0xd8,al
  40ca2e:	mov    cl,BYTE PTR [edi-0x9ba7db4]
  40ca34:	xchg   edi,eax
  40ca35:	stos   DWORD PTR es:[edi],eax
  40ca36:	jecxz  0x40caa3
  40ca38:	test   al,0x66
  40ca3a:	pop    esp
  40ca3b:	in     eax,0xb3
  40ca3d:	stos   DWORD PTR es:[edi],eax
  40ca3e:	cs jb  0x40ca94
  40ca41:	push   es
  40ca42:	stc    
  40ca43:	ins    BYTE PTR es:[edi],dx
  40ca44:	sar    BYTE PTR [ecx],1
  40ca46:	pop    edx
  40ca47:	jl     0x40ca0f
  40ca49:	retf   
  40ca4a:	arpl   WORD PTR [esi+ebp*8+0x46],bx
  40ca4e:	fmul   DWORD PTR [ecx-0x165913d8]
  40ca54:	and    eax,0xcb350914
  40ca59:	xor    eax,0x9a8a556e
  40ca5e:	jmp    0xa6be:0xb4584fc6
  40ca65:	fcmovu st,st(4)
  40ca67:	bound  ebx,QWORD PTR [eax+0x17]
  40ca6a:	lods   al,BYTE PTR ds:[esi]
  40ca6b:	sti    
  40ca6c:	pop    ebp
  40ca6d:	dec    esi
  40ca6e:	retf   
  40ca6f:	retf   
  40ca70:	(bad)  
  40ca71:	mov    al,ds:0x4e3fd6e2
  40ca76:	add    DWORD PTR [esi+0x7b0b181e],esp
  40ca7c:	bound  ebp,QWORD PTR [edx+edi*8]
  40ca7f:	enter  0x77f,0x1d
  40ca83:	in     eax,dx
  40ca84:	fisttp DWORD PTR [esi+ebx*8]
  40ca87:	popf   
  40ca88:	loopne 0x40ca23
  40ca8a:	scas   al,BYTE PTR es:[edi]
  40ca8b:	jp     0x40caf0
  40ca8d:	loop   0x40cb0c
  40ca8f:	out    0x10,eax
  40ca91:	int    0xb2
  40ca93:	cmp    edi,DWORD PTR [eax-0x3bcb3cfe]
  40ca99:	out    dx,eax
  40ca9a:	jbe    0x40cabd
  40ca9c:	fsubr  st,st(6)
  40ca9e:	inc    edx
  40ca9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40caa0:	lea    edi,[eax]
  40caa2:	fdiv   QWORD PTR [ecx+0x42]
  40caa5:	xchg   esi,eax
  40caa6:	das    
  40caa7:	int3   
  40caa8:	mov    edx,0x87ca3cfe
  40caad:	lds    edx,FWORD PTR [edx+0x3cc3db85]
  40cab3:	fucomp st(3)
  40cab5:	shl    DWORD PTR ds:0x735088e8,0x71
  40cabc:	jmp    0x4a89083
  40cac1:	cs out 0xd8,eax
  40cac4:	jl     0x40cb0e
  40cac6:	adc    BYTE PTR [ebx+eiz*2+0x18],bl
  40caca:	test   DWORD PTR [eax+0x3f],esp
  40cacd:	xchg   DWORD PTR [edi-0x5eba0d7],ebx
  40cad3:	into   
  40cad4:	cmp    eax,0xf0ec09a
  40cad9:	jnp    0x40cb05
  40cadb:	jecxz  0x40cb48
  40cadd:	xlat   BYTE PTR cs:[ebx]
  40cadf:	cdq    
  40cae0:	mov    DWORD PTR [edi+0x1c088687],edx
  40cae6:	pop    ecx
  40cae7:	clc    
  40cae8:	rcl    BYTE PTR [eax+ebp*2-0x260803f7],0xec
  40caf0:	add    eax,0xfbd28be6
  40caf5:	fwait
  40caf6:	dec    ebp
  40caf7:	adc    al,0x3c
  40caf9:	mov    eax,0x390bfcc4
  40cafe:	xchg   esp,eax
  40caff:	mov    DWORD PTR [edx+0x68],edi
  40cb02:	ds clc 
  40cb04:	nop    edi
  40cb07:	iret   
  40cb08:	inc    esp
  40cb09:	int    0x12
  40cb0b:	sbb    esp,ebx
  40cb0d:	inc    ecx
  40cb0e:	fdivr  QWORD PTR [ebp-0x321bae6e]
  40cb14:	(bad)  
  40cb15:	test   BYTE PTR [eax+0x6194cd89],0x48
  40cb1c:	cmp    eax,0xd35869fa
  40cb21:	or     DWORD PTR [edi+0x2c33d4ba],ebp
  40cb27:	daa    
  40cb28:	dec    ecx
  40cb29:	jle    0x40caba
  40cb2b:	dec    ebx
  40cb2c:	add    ah,0x7c
  40cb2f:	xchg   edx,eax
  40cb30:	mov    ecx,0xed6a18d8
  40cb35:	ror    DWORD PTR [edi],1
  40cb37:	and    edi,DWORD PTR [edi]
  40cb39:	pop    eax
  40cb3a:	je     0x40cad1
  40cb3c:	icebp  
  40cb3d:	dec    edi
  40cb3e:	or     esi,DWORD PTR [edx]
  40cb40:	jmp    0x51ba:0xa7594175
  40cb47:	pop    es
  40cb48:	jb     0x40cb1e
  40cb4a:	ret    
  40cb4b:	rep ins BYTE PTR es:[edi],dx
  40cb4d:	ja     0x40cafd
  40cb4f:	sbb    eax,0x987873c3
  40cb54:	pop    es
  40cb55:	pop    ebx
  40cb56:	xchg   ax,ax
  40cb58:	out    0x27,al
  40cb5a:	cmp    BYTE PTR [edi-0xd],dh
  40cb5d:	loopne 0x40cba1
  40cb5f:	fidiv  DWORD PTR [edi]
  40cb61:	mov    eax,ds:0x2b280b8
  40cb66:	(bad)  
  40cb67:	in     al,dx
  40cb68:	rcl    dh,0x84
  40cb6b:	lods   al,BYTE PTR ds:[esi]
  40cb6c:	call   ebx
  40cb6e:	mov    ch,0xfe
  40cb70:	loopne 0x40cbe5
  40cb72:	and    esi,DWORD PTR [edx-0x12]
  40cb75:	lahf   
  40cb76:	popf   
  40cb77:	pushf  
  40cb78:	sbb    DWORD PTR [ebx-0x3f48eea],esp
  40cb7e:	(bad)  
  40cb7f:	js     0x40cb64
  40cb81:	cs jns 0x40cb4e
  40cb84:	enter  0x8079,0x1a
  40cb88:	push   ebp
  40cb89:	xchg   edx,eax
  40cb8a:	mov    cl,0xd0
  40cb8c:	in     al,dx
  40cb8d:	jge    0x40cba9
  40cb8f:	dec    ebx
  40cb90:	jmp    0x40cb2c
  40cb92:	sbb    esp,DWORD PTR [ebp+ecx*2+0x2da993ae]
  40cb99:	aaa    
  40cb9a:	mov    eax,eax
  40cb9c:	test   eax,0xcc1ed0fd
  40cba1:	add    eax,0xbc3b1e16
  40cba6:	aam    0xd7
  40cba8:	cmc    
  40cba9:	pushf  
  40cbaa:	mul    DWORD PTR [ebx]
  40cbac:	nop
  40cbad:	cli    
  40cbae:	lds    eax,FWORD PTR [ebp+0x22]
  40cbb1:	outs   dx,BYTE PTR ds:[esi]
  40cbb2:	ret    
  40cbb3:	mov    ah,0x92
  40cbb5:	pop    ss
  40cbb6:	push   edx
  40cbb7:	sbb    al,0xec
  40cbb9:	push   eax
  40cbba:	nop
  40cbbb:	das    
  40cbbc:	into   
  40cbbd:	test   BYTE PTR [edx+ebp*2-0x5b73cf3f],bl
  40cbc4:	out    dx,eax
  40cbc5:	test   eax,0x54c175b7
  40cbca:	push   edx
  40cbcb:	xor    esp,DWORD PTR [edx-0x6a2decbe]
  40cbd1:	inc    eax
  40cbd2:	int    0xc3
  40cbd4:	into   
  40cbd5:	push   eax
  40cbd6:	and    eax,0x2a0c7d73
  40cbdb:	je     0x40cbb8
  40cbdd:	mov    ss,ebx
  40cbdf:	add    eax,0x91227caf
  40cbe4:	nop
  40cbe5:	out    dx,eax
  40cbe6:	jmp    0x40cc62
  40cbe8:	scas   al,BYTE PTR es:[edi]
  40cbe9:	mov    ds:0x6f8df4e4,eax
  40cbee:	lods   eax,DWORD PTR ds:[esi]
  40cbef:	ja     0x40cc0f
  40cbf1:	cmp    DWORD PTR [ecx],ecx
  40cbf3:	iret   
  40cbf4:	push   cs
  40cbf5:	arpl   WORD PTR [edi+ecx*4+0x626f2dfb],si
  40cbfc:	cld    
  40cbfd:	sub    eax,ecx
  40cbff:	add    edi,ecx
  40cc01:	stos   BYTE PTR es:[edi],al
  40cc02:	js     0x40cbe5
  40cc04:	aad    0x5b
  40cc06:	iret   
  40cc07:	inc    esp
  40cc08:	adc    al,bh
  40cc0a:	cld    
  40cc0b:	cmp    eax,0x5bc8defd
  40cc10:	int3   
  40cc11:	adc    al,0xdd
  40cc13:	dec    esi
  40cc14:	mov    al,ds:0x555b2629
  40cc19:	sti    
  40cc1a:	retf   
  40cc1b:	jl     0x40cc3a
  40cc1d:	dec    esi
  40cc1e:	ret    0xb966
  40cc21:	xchg   edi,eax
  40cc22:	adc    edx,DWORD PTR [ebx]
  40cc24:	shrd   DWORD PTR [ebx*4-0x65730a02],esp,cl
  40cc2c:	add    bh,BYTE PTR [edi]
  40cc2e:	pop    ebx
  40cc2f:	test   eax,0xe263fbf0
  40cc34:	repz sub eax,0x64f47a7d
  40cc3a:	in     eax,dx
  40cc3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc3c:	sub    esi,DWORD PTR [edi]
  40cc3e:	neg    DWORD PTR [eax-0x74ca6e7]
  40cc44:	mov    esi,0xbe952935
  40cc49:	cmc    
  40cc4a:	stos   BYTE PTR es:[edi],al
  40cc4b:	fldenv [edx]
  40cc4d:	cwde   
  40cc4e:	call   0x735db518
  40cc53:	inc    cl
  40cc55:	push   ds
  40cc56:	fcom   DWORD PTR [esi-0x69]
  40cc59:	aam    0x77
  40cc5b:	xchg   esp,eax
  40cc5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc5d:	push   ss
  40cc5e:	sbb    eax,0x10f33945
  40cc63:	icebp  
  40cc64:	xlat   BYTE PTR ds:[ebx]
  40cc65:	jnp    0x40cbec
  40cc67:	jle    0x40cc12
  40cc69:	pop    edi
  40cc6a:	hlt    
  40cc6b:	cmp    edi,DWORD PTR [ebx]
  40cc6d:	ins    DWORD PTR es:[edi],dx
  40cc6e:	jmp    0x40cc64
  40cc70:	mov    bl,0xb6
  40cc72:	push   ebp
  40cc73:	cdq    
  40cc74:	ss test al,0x1
  40cc77:	jle    0x40cc4c
  40cc79:	mov    eax,0x440f3611
  40cc7e:	ins    BYTE PTR es:[edi],dx
  40cc7f:	push   ebx
  40cc80:	out    0x1e,eax
  40cc82:	cmp    eax,0x707b1d7f
  40cc87:	mov    eax,0x9a95ec3c
  40cc8c:	cmp    eax,0xb0acf103
  40cc91:	jae    0x40cc6a
  40cc93:	jge    0x40cc8f
  40cc95:	aam    0x8a
  40cc97:	cmc    
  40cc98:	push   ebp
  40cc99:	int3   
  40cc9a:	stc    
  40cc9b:	sub    al,0x7c
  40cc9d:	fst    DWORD PTR [ebp-0x7fc83ab0]
  40cca3:	daa    
  40cca4:	mov    eax,DWORD PTR fs:[esp+ebp*4-0x205f1e7f]
  40ccac:	xchg   esp,eax
  40ccad:	punpckhbw mm5,QWORD PTR [edx]
  40ccb0:	jns    0x40cd19
  40ccb2:	add    eax,0xe8b566da
  40ccb7:	jle    0x40cc8c
  40ccb9:	or     DWORD PTR [esi+ecx*4+0x10],edx
  40ccbd:	(bad)  
  40ccbe:	jmp    0x2a4f8967
  40ccc3:	inc    ecx
  40ccc4:	mov    ds:0x9816190f,al
  40ccc9:	call   0xec09a12d
  40ccce:	push   ecx
  40cccf:	(bad)  
  40ccd0:	mov    ebp,DWORD PTR [ecx-0x44214e29]
  40ccd6:	xchg   esp,eax
  40ccd7:	dec    edi
  40ccd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ccd9:	jg     0x40cc8f
  40ccdb:	pop    ss
  40ccdc:	or     dh,dl
  40ccde:	out    0xf5,eax
  40cce0:	scas   eax,DWORD PTR es:[edi]
  40cce1:	fwait
  40cce2:	jle    0x40ccd4
  40cce4:	dec    esp
  40cce5:	or     BYTE PTR [edx+0x73fd2579],dl
  40cceb:	in     al,dx
  40ccec:	mov    WORD PTR [ebx],cs
  40ccee:	jg     0x40cd0e
  40ccf0:	arpl   WORD PTR [ebp-0xb374680],ax
  40ccf6:	xchg   edi,eax
  40ccf7:	rcl    BYTE PTR [edi+0x178c86c3],0xa9
  40ccfe:	movntq (bad),mm3
  40ccff:	out    0xdd,eax
  40cd01:	fild   WORD PTR [edi]
  40cd03:	enter  0x574f,0x17
  40cd07:	or     BYTE PTR ds:0x8d0aa327,ah
  40cd0d:	retf   0x343b
  40cd10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd11:	mov    edx,0xe9f7bbef
  40cd16:	adc    ch,al
  40cd18:	shr    BYTE PTR [esi+0x29957f9b],0xb
  40cd1f:	sbb    al,BYTE PTR [eax+0x237e67dc]
  40cd25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd26:	out    0x58,eax
  40cd28:	in     eax,0xae
  40cd2a:	xor    DWORD PTR [edx+0x720d2a82],eax
  40cd30:	sub    DWORD PTR [esi],ebx
  40cd32:	cmp    BYTE PTR [ecx+0x40241ff3],bh
  40cd38:	enter  0xf32d,0x48
  40cd3c:	sbb    BYTE PTR [ecx-0x15],0x99
  40cd40:	cmc    
  40cd41:	push   es
  40cd42:	enter  0x709b,0x7a
  40cd46:	pop    esi
  40cd47:	pop    ss
  40cd48:	dec    ebx
  40cd49:	les    esi,FWORD PTR [eax]
  40cd4b:	cmp    al,0x75
  40cd4d:	inc    edx
  40cd4e:	add    eax,0xcc6e01a3
  40cd53:	push   eax
  40cd54:	sub    bl,BYTE PTR [edi+0x3d934add]
  40cd5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd5b:	jge    0x40cd6f
  40cd5d:	xor    al,0xba
  40cd5f:	in     al,0xc9
  40cd61:	inc    ebx
  40cd62:	mov    dh,BYTE PTR [edi-0x11]
  40cd65:	push   eax
  40cd66:	sbb    al,0xd5
  40cd68:	push   es
  40cd69:	xchg   edx,eax
  40cd6a:	ret    0x94eb
  40cd6d:	in     al,dx
  40cd6e:	add    esi,eax
  40cd70:	jmp    0x40cd0e
  40cd72:	mov    dh,BYTE PTR [esi+0x6a1bfe1b]
  40cd78:	or     al,0x77
  40cd7a:	dec    esp
  40cd7b:	ins    DWORD PTR es:[edi],dx
  40cd7c:	add    esi,ebx
  40cd7e:	cmp    ecx,DWORD PTR [ecx+ecx*4+0x70e46ab0]
  40cd85:	pop    esi
  40cd86:	jp     0x40cd6b
  40cd88:	call   0xf03f5d83
  40cd8d:	dec    ebp
  40cd8e:	fcomp  DWORD PTR [esi]
  40cd90:	mov    BYTE PTR [edx+ebx*4+0x7bf0f26a],0x8c
  40cd98:	mov    bl,0xec
  40cd9a:	and    DWORD PTR [ecx-0x5c],ecx
  40cd9d:	pminub mm2,QWORD PTR [edx]
  40cda0:	add    ebx,DWORD PTR [edx-0x54]
  40cda3:	xchg   esp,eax
  40cda4:	mov    dl,0xc0
  40cda6:	jmp    0x40cddf
  40cda8:	jns    0x40ce1d
  40cdaa:	dec    edx
  40cdab:	jnp    0x40cd32
  40cdad:	xlat   BYTE PTR ds:[ebx]
  40cdae:	push   edx
  40cdaf:	add    bl,0xd7
  40cdb2:	dec    edi
  40cdb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cdb4:	xchg   bp,ax
  40cdb6:	dec    ebp
  40cdb7:	sbb    bl,BYTE PTR gs:[edx+0x37]
  40cdbb:	add    dl,bl
  40cdbd:	pusha  
  40cdbe:	jno    0x40cd7e
  40cdc0:	mov    ebx,0x15136a33
  40cdc5:	bound  eax,QWORD PTR [esi]
  40cdc7:	or     bh,BYTE PTR [edi-0x60]
  40cdca:	mov    ds:0x142fea34,al
  40cdcf:	daa    
  40cdd0:	add    al,0x55
  40cdd2:	test   DWORD PTR [eax+0x7c],ecx
  40cdd5:	out    0xd7,al
  40cdd7:	mov    edx,0x939a83d1
  40cddc:	cmp    eax,DWORD PTR [esi+0x22]
  40cddf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cde0:	jle    0x40ce4d
  40cde2:	call   0x4703:0xdb9e3bcc
  40cde9:	push   eax
  40cdea:	loop   0x40ce67
  40cdec:	push   ebx
  40cded:	push   cs
  40cdee:	mov    esp,0xb3e34e1e
  40cdf3:	inc    esi
  40cdf4:	xchg   ebx,eax
  40cdf5:	dec    edi
  40cdf6:	xor    DWORD PTR [ebp-0x5e888574],edi
  40cdfc:	outs   dx,BYTE PTR ds:[esi]
  40cdfd:	or     ebx,esi
  40cdff:	ret    
  40ce00:	lock mov DWORD PTR [ebp-0x337bd4c2],edi
  40ce07:	jmp    0xd34b958a
  40ce0c:	dec    edx
  40ce0d:	add    al,0x9e
  40ce0f:	in     al,dx
  40ce10:	icebp  
  40ce11:	(bad)  
  40ce12:	ins    BYTE PTR es:[edi],dx
  40ce13:	aad    0x20
  40ce15:	rsqrtps xmm3,xmm0
  40ce18:	call   0xaecd:0x479c8c9e
  40ce1f:	sbb    dl,bl
  40ce21:	sub    cl,ch
  40ce23:	push   cs
  40ce24:	inc    DWORD PTR [edx]
  40ce26:	mov    dl,0x75
  40ce28:	dec    edi
  40ce29:	cwde   
  40ce2a:	das    
  40ce2b:	mov    ebp,0xea371fa1
  40ce30:	and    ch,al
  40ce32:	outs   dx,DWORD PTR ds:[esi]
  40ce33:	push   edx
  40ce34:	lea    ebp,[ecx]
  40ce36:	cmp    BYTE PTR [eax-0xd],al
  40ce39:	and    BYTE PTR [edi+0x12],bl
  40ce3c:	fld    QWORD PTR ds:0x34589ec8
  40ce42:	sahf   
  40ce43:	push   esi
  40ce44:	jb     0x40ce0b
  40ce46:	sub    eax,0x162e11b0
  40ce4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce4c:	dec    ebx
  40ce4d:	add    DWORD PTR [edi+eax*1-0x63],esi
  40ce51:	mov    bh,0x9b
  40ce53:	repz stc 
  40ce55:	int3   
  40ce56:	iret   
  40ce57:	or     eax,0xd53800f7
  40ce5c:	mov    bl,0xb6
  40ce5e:	jmp    0x90351afa
  40ce63:	cli    
  40ce64:	out    dx,al
  40ce65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce66:	repnz push di
  40ce69:	mov    gs,WORD PTR [bx+di]
  40ce6c:	sbb    ebx,0xeff32152
  40ce72:	sbb    bh,bh
  40ce74:	sub    BYTE PTR [ebp-0x40ce770],0xf6
  40ce7b:	mov    esi,0x5cd9263b
  40ce80:	mov    al,BYTE PTR [ebp+ebp*2-0x4f198ae0]
  40ce87:	jo     0x40ce8a
  40ce89:	ret    0x856f
  40ce8c:	outs   dx,BYTE PTR ds:[esi]
  40ce8d:	pop    ds
  40ce8e:	test   al,0x9b
  40ce90:	jp     0x40cf0a
  40ce92:	mov    dh,al
  40ce94:	jno    0x40cef4
  40ce96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce97:	sbb    eax,0x51e43ba0
  40ce9c:	popa   
  40ce9d:	xor    al,0x74
  40ce9f:	jle    0x40ce89
  40cea1:	mov    BYTE PTR [ebp+0x29],cl
  40cea4:	repz push esp
  40cea6:	push   ds
  40cea7:	(bad)  
  40cea8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cea9:	not    BYTE PTR ds:0xa00e1592
  40ceaf:	sbb    al,0x62
  40ceb1:	jp     0x40ce36
  40ceb3:	pop    esi
  40ceb4:	xchg   edi,eax
  40ceb5:	pop    esp
  40ceb6:	lahf   
  40ceb7:	scas   eax,DWORD PTR es:[edi]
  40ceb8:	mov    BYTE PTR [esi],dl
  40ceba:	(bad)  
  40cebb:	js     0x40cebf
  40cebd:	movups XMMWORD PTR [eax],xmm3
  40cec0:	xor    ah,BYTE PTR [edx]
  40cec2:	push   esi
  40cec3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cec4:	(bad)  
  40cec6:	jo     0x40cefa
  40cec8:	ins    BYTE PTR es:[edi],dx
  40cec9:	add    eax,0xa0d3b6f3
  40cece:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cecf:	lods   eax,DWORD PTR ds:[esi]
  40ced0:	jb     0x40cf34
  40ced2:	add    eax,0xbcfbf748
  40ced7:	mov    al,ds:0xe532d959
  40cedc:	stos   BYTE PTR es:[edi],al
  40cedd:	fwait
  40cede:	cdq    
  40cedf:	xchg   esp,eax
  40cee0:	and    eax,DWORD PTR [ebp+0x59]
  40cee3:	adc    DWORD PTR [ecx-0x6b],esi
  40cee6:	in     al,dx
  40cee7:	popf   
  40cee8:	jmp    0x40ce8f
  40ceea:	jb     0x40cef5
  40ceec:	mov    bh,0x77
  40ceee:	sub    cl,BYTE PTR [ebp-0x33ef8614]
  40cef4:	jg     0x40cf4d
  40cef6:	inc    esp
  40cef7:	aam    0x68
  40cef9:	inc    edx
  40cefa:	sub    al,0xc3
  40cefc:	in     al,0x46
  40cefe:	add    DWORD PTR [esi+0x7d],0x6b
  40cf02:	arpl   WORD PTR [esi+0x69a30ce6],sp
  40cf08:	mov    WORD PTR [ebx+0x29],ds
  40cf0b:	lds    esp,FWORD PTR ds:0x536a1795
  40cf11:	hlt    
  40cf12:	loope  0x40cf58
  40cf14:	ds das 
  40cf16:	jnp    0x40ced1
  40cf18:	test   eax,0xa54b1e18
  40cf1d:	out    0x2e,al
  40cf1f:	stos   DWORD PTR es:[edi],eax
  40cf20:	or     BYTE PTR [ecx-0x9ee8bf],ah
  40cf26:	lock adc eax,0x46006dd8
  40cf2c:	ins    BYTE PTR es:[di],dx
  40cf2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf2f:	cs pushf 
  40cf31:	test   BYTE PTR [ebx-0x5b],0x24
  40cf35:	mov    al,0x39
  40cf37:	mov    ds:0xa2f6c637,al
  40cf3c:	xchg   ecx,eax
  40cf3d:	sti    
  40cf3e:	popf   
  40cf3f:	adc    esi,esp
  40cf41:	pop    es
  40cf42:	repz mov WORD PTR [edi+edx*1],ss
  40cf46:	pop    ebp
  40cf47:	inc    ebx
  40cf48:	and    ch,cl
  40cf4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf4b:	sub    eax,0x17e05eb9
  40cf50:	iret   
  40cf51:	push   0x2e
  40cf53:	xchg   edx,eax
  40cf54:	pop    edx
  40cf55:	inc    ebx
  40cf56:	cdq    
  40cf57:	xchg   DWORD PTR [ebx-0x7bd42de2],ecx
  40cf5d:	pushf  
  40cf5e:	(bad)  
  40cf60:	cld    
  40cf61:	and    BYTE PTR [esi+0x32],dh
  40cf64:	sbb    edx,edi
  40cf66:	outs   dx,BYTE PTR gs:[esi]
  40cf68:	aad    0x5c
  40cf6a:	jmp    0x1639:0x6ff390c6
  40cf71:	adc    dl,bh
  40cf73:	std    
  40cf74:	xchg   esi,eax
  40cf75:	inc    edx
  40cf76:	cdq    
  40cf77:	int3   
  40cf78:	push   eax
  40cf79:	sysret 
  40cf7b:	and    ah,BYTE PTR [esi]
  40cf7d:	inc    eax
  40cf7e:	cli    
  40cf7f:	js     0x40cfcd
  40cf81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf82:	mov    bh,0xa9
  40cf84:	(bad)  
  40cf85:	hlt    
  40cf86:	inc    ecx
  40cf87:	into   
  40cf88:	cmp    DWORD PTR [ecx-0x2abd0928],ebp
  40cf8e:	xor    al,0xa2
  40cf90:	lds    ebp,FWORD PTR [edi+0x7a]
  40cf93:	jb     0x40cfa8
  40cf95:	push   edx
  40cf96:	les    edx,FWORD PTR [edi+0x44]
  40cf99:	shr    DWORD PTR [eax-0x70],0x4d
  40cf9d:	pushf  
  40cf9e:	fstp   DWORD PTR [edi-0x2b]
  40cfa1:	sahf   
  40cfa2:	lods   al,BYTE PTR ds:[esi]
  40cfa3:	add    eax,0x6654c52c
  40cfa8:	ret    0x97a8
  40cfab:	clc    
  40cfac:	stos   DWORD PTR es:[edi],eax
  40cfad:	ret    
  40cfae:	cmp    al,0x28
  40cfb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cfb1:	outs   dx,DWORD PTR cs:[esi]
  40cfb3:	aam    0xe3
  40cfb5:	and    al,0x5a
  40cfb7:	inc    esp
  40cfb8:	fisubr DWORD PTR [ecx-0xb405da3]
  40cfbe:	cmp    cl,BYTE PTR [edx+0x470a0106]
  40cfc4:	xchg   BYTE PTR [edx-0x38],dl
  40cfc7:	sbb    esi,esp
  40cfc9:	rcr    DWORD PTR [ebx],0x54
  40cfcc:	inc    edi
  40cfcd:	ror    BYTE PTR [esi+0x5],cl
  40cfd0:	lods   al,BYTE PTR ds:[esi]
  40cfd1:	push   ss
  40cfd2:	dec    edx
  40cfd3:	scas   eax,DWORD PTR es:[edi]
  40cfd4:	icebp  
  40cfd5:	jmp    0x1e56:0x8ddd936b
  40cfdc:	jl     0x40d03a
  40cfde:	cmp    ch,BYTE PTR [eax]
  40cfe0:	int    0x74
  40cfe2:	cmp    ecx,DWORD PTR [ebp-0x2c0edb27]
  40cfe8:	cmc    
  40cfe9:	mov    cl,0x6f
  40cfeb:	pop    esp
  40cfec:	jmp    DWORD PTR [esi+0x6f190b98]
  40cff2:	xor    DWORD PTR [edi],esp
  40cff4:	into   
  40cff5:	cdq    
  40cff6:	fwait
  40cff7:	sbb    al,0x76
  40cff9:	aad    0x27
  40cffb:	fsub   DWORD PTR [esi-0x31960c1e]
  40d001:	mov    bl,0xfc
  40d003:	leave  
  40d004:	jl     0x40cfdb
  40d006:	mov    dh,0xb9
  40d008:	push   esp
  40d009:	test   eax,0x880d61a8
  40d00e:	arpl   WORD PTR [eax],di
  40d010:	ret    0x2c05
  40d013:	mov    ds:0x217db3fa,eax
  40d018:	sbb    ecx,eax
  40d01a:	pop    ebp
  40d01b:	jle    0x40d046
  40d01d:	shl    BYTE PTR [esp+esi*2+0x67],cl
  40d021:	mov    ch,0xee
  40d023:	fisttp DWORD PTR [ebx-0x6d1f51c7]
  40d029:	sub    eax,0xf5d01d1c
  40d02e:	jmp    0x166:0xf064e5c6
  40d035:	xlat   BYTE PTR ds:[ebx]
  40d036:	mov    DWORD PTR [eax-0x37e41ccf],0xe4c1f2ef
  40d040:	out    0xdb,al
  40d042:	bound  edx,QWORD PTR [eax+0x3b950fb6]
  40d048:	xor    ecx,DWORD PTR [ecx-0xec196b0]
  40d04e:	ret    
  40d04f:	popa   
  40d050:	shl    DWORD PTR [edi+0x5a7877cb],1
  40d056:	add    DWORD PTR [edx-0x265c42c6],esi
  40d05c:	mov    dl,0x89
  40d05e:	mov    dl,0x8b
  40d060:	push   ds
  40d061:	bound  ebx,QWORD PTR [ebp+0x4796f80c]
  40d067:	push   ebp
  40d068:	scas   al,BYTE PTR es:[edi]
  40d069:	out    0xc2,eax
  40d06b:	xor    eax,DWORD PTR [ecx+0x6bd9d14e]
  40d071:	int    0x90
  40d073:	loope  0x40d034
  40d075:	xchg   ebp,edi
  40d077:	adc    eax,0x1ec2fbee
  40d07c:	dec    esi
  40d07d:	fisub  WORD PTR [edi+edx*4+0x304772b3]
  40d084:	rcl    bl,0x98
  40d087:	or     esp,eax
  40d089:	xor    dh,BYTE PTR [esi]
  40d08b:	push   cs
  40d08c:	aas    
  40d08d:	std    
  40d08e:	mov    esp,0x2be622d9
  40d093:	test   al,0x2c
  40d095:	mov    esp,0x60b8abbe
  40d09a:	pop    ds
  40d09b:	or     eax,0xd9d0fe56
  40d0a0:	pop    edx
  40d0a1:	cmp    al,0xba
  40d0a3:	cs retf 0xfabb
  40d0a7:	shl    BYTE PTR [edx+0x45b92b0d],cl
  40d0ad:	(bad)  [edx+0x77d5c591]
  40d0b3:	inc    ebp
  40d0b4:	scas   eax,DWORD PTR es:[edi]
  40d0b5:	fs mov ecx,0xdcd0dfc9
  40d0bb:	jnp    0x40d0bd
  40d0bd:	ins    BYTE PTR es:[edi],dx
  40d0be:	rol    dl,0xc4
  40d0c1:	push   ecx
  40d0c2:	movzx  ebp,BYTE PTR [edi+0x5cf0c70b]
  40d0c9:	push   cs
  40d0ca:	jecxz  0x40d136
  40d0cc:	push   ds
  40d0cd:	sbb    DWORD PTR [ebp+0x37],esp
  40d0d0:	stos   BYTE PTR es:[edi],al
  40d0d1:	data16 add ah,BYTE PTR [esi-0x5d34c445]
  40d0d8:	push   0x58
  40d0da:	xchg   esp,eax
  40d0db:	inc    edi
  40d0dc:	sub    BYTE PTR [edx-0x1b9f7968],al
  40d0e2:	jge    0x40d11e
  40d0e4:	jo     0x40d0f0
  40d0e6:	mov    bh,0x31
  40d0e8:	call   0xb09bcb07
  40d0ed:	shl    edx,0xf5
  40d0f0:	retf   
  40d0f1:	adc    edi,DWORD PTR [edx+0x1d]
  40d0f4:	inc    esi
  40d0f5:	xchg   BYTE PTR [ebx-0x7b],dl
  40d0f8:	pop    esi
  40d0f9:	fidivr DWORD PTR [edi+0x62]
  40d0fc:	ret    0xd40e
  40d0ff:	ja     0x40d125
  40d101:	dec    ecx
  40d102:	add    al,0x3e
  40d104:	dec    ebx
  40d105:	(bad)  
  40d106:	sti    
  40d107:	sub    edi,DWORD PTR [edx+0xa]
  40d10a:	xor    ebx,edi
  40d10c:	pop    es
  40d10d:	or     DWORD PTR [ecx+ebx*8+0x6fdb5823],0x7b4b4cec
  40d118:	inc    edi
  40d119:	pop    eax
  40d11a:	sub    al,al
  40d11c:	push   ss
  40d11d:	xor    eax,0x164a3a80
  40d122:	mov    cl,0x9a
  40d124:	ficom  WORD PTR fs:[ecx]
  40d127:	mov    edx,0x20c89e5a
  40d12c:	test   eax,0x7f441d
  40d131:	out    dx,eax
  40d132:	jb     0x40d137
  40d134:	cld    
  40d135:	pop    ebx
  40d136:	adc    al,0x30
  40d138:	xlat   BYTE PTR ds:[ebx]
  40d139:	adc    al,0x49
  40d13b:	scas   eax,DWORD PTR es:[edi]
  40d13c:	test   ecx,ebx
  40d13e:	test   al,0xc4
  40d140:	outs   dx,DWORD PTR ds:[esi]
  40d141:	js     0x40d11e
  40d143:	and    edi,DWORD PTR [ebx]
  40d145:	rcr    BYTE PTR [eax+esi*2],1
  40d148:	inc    esp
  40d149:	jle    0x40d10c
  40d14b:	jmp    0x40d16e
  40d14d:	and    BYTE PTR [eax-0x4],ah
  40d150:	and    DWORD PTR [eax+0x5],ecx
  40d153:	mov    WORD PTR [esi+eax*4],?
  40d156:	rcl    al,0xc7
  40d159:	stos   DWORD PTR es:[edi],eax
  40d15a:	xor    esi,DWORD PTR [ebx+ebx*4+0x6b2c48eb]
  40d161:	mov    dl,0xa4
  40d163:	xchg   edi,eax
  40d164:	pushf  
  40d165:	lods   al,BYTE PTR ds:[esi]
  40d166:	xor    ah,BYTE PTR [ecx-0x7d]
  40d169:	dec    esp
  40d16a:	mov    edi,0xcc7801c2
  40d16f:	es aaa 
  40d171:	scas   eax,DWORD PTR es:[edi]
  40d172:	add    dl,0xbc
  40d175:	sbb    cl,ch
  40d177:	pop    esp
  40d178:	(bad)  
  40d179:	call   0xf3e2caeb
  40d17e:	add    eax,0xbe9d3758
  40d183:	add    eax,DWORD PTR [ebp-0x2bf41578]
  40d189:	(bad)  
  40d18a:	xchg   ebx,eax
  40d18b:	bound  ebp,QWORD PTR [ebp-0x1036bf29]
  40d191:	(bad)  
  40d192:	imul   eax,DWORD PTR [eax],0x3e679e8
  40d198:	push   ds
  40d199:	mov    ds:0x3c8d4567,al
  40d19e:	outs   dx,BYTE PTR ds:[esi]
  40d19f:	lea    ecx,[eax+0xa]
  40d1a2:	mov    ch,0x45
  40d1a4:	arpl   WORD PTR [eax],dx
  40d1a6:	sbb    eax,0x787be664
  40d1ab:	ds daa 
  40d1ad:	dec    ebx
  40d1ae:	cmc    
  40d1af:	push   cs
  40d1b0:	jmp    FWORD PTR [edx+0x2a]
  40d1b3:	push   ds
  40d1b4:	dec    edx
  40d1b5:	ret    
  40d1b6:	je     0x40d232
  40d1b8:	(bad)  
  40d1b9:	outs   dx,DWORD PTR ds:[esi]
  40d1ba:	fbld   TBYTE PTR [ecx]
  40d1bc:	push   eax
  40d1bd:	rcr    DWORD PTR [eax+0x23],cl
  40d1c0:	mul    DWORD PTR [ecx+0x30]
  40d1c3:	cmp    esp,DWORD PTR [edx-0x3a6af162]
  40d1c9:	pop    esi
  40d1ca:	sub    BYTE PTR [ecx+0x24b7d8d8],0x9
  40d1d1:	and    al,0x9d
  40d1d3:	data16 ror BYTE PTR [edi-0x66],0x40
  40d1d8:	mov    ecx,DWORD PTR [edx-0x5344a43f]
  40d1de:	mov    ch,0xf2
  40d1e0:	lods   eax,DWORD PTR ds:[esi]
  40d1e1:	outs   dx,BYTE PTR ds:[esi]
  40d1e2:	jnp    0x40d176
  40d1e4:	cmp    BYTE PTR [edx-0x53],al
  40d1e7:	(bad)  
  40d1e8:	cwde   
  40d1e9:	xchg   esp,eax
  40d1ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1eb:	popa   
  40d1ec:	push   ds
  40d1ed:	and    eax,DWORD PTR [ebx]
  40d1ef:	xchg   edi,eax
  40d1f0:	add    al,BYTE PTR [ecx+eiz*2]
  40d1f3:	retf   
  40d1f4:	bound  edi,QWORD PTR [edx]
  40d1f6:	outs   dx,BYTE PTR ds:[esi]
  40d1f7:	xor    ah,BYTE PTR es:[ecx]
  40d1fa:	pop    edi
  40d1fb:	push   0x7209ea5
  40d200:	xchg   BYTE PTR [edi-0x70],ch
  40d203:	mov    bl,0x7f
  40d205:	outs   dx,DWORD PTR ds:[esi]
  40d206:	mov    eax,ds:0x3d7d854d
  40d20b:	push   edx
  40d20c:	sub    ah,cl
  40d20e:	retf   0x499e
  40d211:	aad    0x24
  40d213:	imul   esi,DWORD PTR ds:0x369ae61b,0x4
  40d21a:	jmp    0x40d299
  40d21c:	aas    
  40d21d:	xchg   edi,eax
  40d21e:	cmp    eax,0x56b6af62
  40d223:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d224:	pusha  
  40d225:	xor    bh,BYTE PTR [ebx-0x2c941424]
  40d22b:	pop    ebx
  40d22c:	loop   0x40d259
  40d22e:	retf   0xd31
  40d231:	pop    ebx
  40d232:	into   
  40d233:	cmp    cl,dh
  40d235:	add    eax,0xff95fbfc
  40d23a:	pop    ebp
  40d23b:	fimul  WORD PTR [ecx-0x3d]
  40d23e:	jo     0x40d260
  40d240:	jl     0x40d1e1
  40d242:	ret    
  40d243:	aas    
  40d244:	adc    BYTE PTR [ebx+ebx*2+0x79],0xc0
  40d249:	daa    
  40d24a:	ret    0xedd8
  40d24d:	mov    al,ds:0x7b9645c
  40d252:	imul   ebx,DWORD PTR [ebp+0x54077faf],0xffffff86
  40d259:	push   cs
  40d25a:	lods   eax,DWORD PTR ds:[esi]
  40d25b:	enter  0xf493,0x36
  40d25f:	cmp    eax,0x3465ea07
  40d265:	push   cs
  40d266:	hlt    
  40d267:	div    BYTE PTR [ebx-0x46d9fd24]
  40d26d:	push   esi
  40d26e:	mov    ah,0xde
  40d270:	ds ins DWORD PTR es:[edi],dx
  40d272:	(bad)  
  40d273:	pop    edi
  40d274:	cmp    al,0x32
  40d276:	leave  
  40d277:	push   ds
  40d278:	aad    0x5c
  40d27a:	sub    DWORD PTR es:[edi],0x57512406
  40d281:	xor    BYTE PTR [edi-0x5680e16],bh
  40d287:	icebp  
  40d288:	and    eax,0x972533f2
  40d28d:	aas    
  40d28e:	imul   ch
  40d290:	sub    ch,ch
  40d292:	jge    0x40d2be
  40d294:	inc    ebx
  40d295:	dec    ecx
  40d296:	mov    eax,ds:0xe05aca87
  40d29b:	push   esi
  40d29c:	sbb    al,0x27
  40d29e:	arpl   WORD PTR [edx-0x5f],cx
  40d2a1:	push   esi
  40d2a2:	mov    ebx,0xdfc91e89
  40d2a7:	loop   0x40d2ab
  40d2a9:	repz dec ecx
  40d2ab:	rcl    BYTE PTR [ecx-0x2c24dfb3],0x87
  40d2b2:	pop    ecx
  40d2b3:	inc    ecx
  40d2b4:	xchg   DWORD PTR [esi],ecx
  40d2b6:	and    BYTE PTR [edi],0x74
  40d2b9:	in     al,0x9a
  40d2bb:	aaa    
  40d2bc:	outs   dx,DWORD PTR ds:[esi]
  40d2bd:	jmp    0xa0ea4d13
  40d2c2:	mov    al,ds:0x97968c51
  40d2c7:	addr16 sahf 
  40d2c9:	nop
  40d2ca:	enter  0xb282,0xf
  40d2ce:	add    DWORD PTR [edx],eax
  40d2d0:	pop    esp
  40d2d1:	addr16 sub esp,ebx
  40d2d4:	(bad)  
  40d2d5:	jbe    0x40d315
  40d2d7:	mov    edx,0xbcf76e39
  40d2dc:	loopne 0x40d286
  40d2de:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40d2e0:	xchg   dh,ah
  40d2e2:	fisttp DWORD PTR [ebx+esi*1-0x7a]
  40d2e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d2e7:	test   DWORD PTR [edi-0x32],esp
  40d2ea:	dec    edi
  40d2eb:	inc    edx
  40d2ec:	daa    
  40d2ed:	mov    ebp,0xf678d0b5
  40d2f2:	fsubr  DWORD PTR [edi]
  40d2f4:	sub    DWORD PTR [ecx+0x1f1abc5e],ebx
  40d2fa:	mov    ebp,0xcf01558e
  40d2ff:	inc    ebx
  40d300:	ret    0xef4e
  40d303:	inc    edx
  40d304:	mov    BYTE PTR [edi-0x43370945],ah
  40d30a:	pop    esi
  40d30b:	pop    eax
  40d30c:	sub    DWORD PTR [esi+0x62e3fbcc],esi
  40d312:	push   ds
  40d313:	jmp    0x638e:0x72a5120d
  40d31a:	cmp    esi,ecx
  40d31c:	jmp    0xbb9e:0xc3e6c2b9
  40d323:	fcomp  QWORD PTR [esi+0x4a]
  40d326:	enter  0x73ff,0x61
  40d32a:	out    dx,eax
  40d32b:	rcr    ah,cl
  40d32d:	xchg   BYTE PTR [eax],cl
  40d32f:	or     cl,BYTE PTR [ebx+0xad1e30b]
  40d335:	mov    bh,BYTE PTR [ebp+ecx*4+0x6068f6e7]
  40d33c:	out    0x5a,eax
  40d33e:	out    0xb7,al
  40d340:	mov    ss:0x26239ff8,eax
  40d346:	(bad)  
  40d347:	ror    edx,1
  40d349:	add    al,0xae
  40d34b:	inc    edx
  40d34c:	push   ds
  40d34d:	pop    edi
  40d34e:	xor    al,0x71
  40d350:	cmp    al,0x61
  40d352:	push   edx
  40d353:	mov    esi,0x3c04f556
  40d358:	popf   
  40d359:	cdq    
  40d35a:	aas    
  40d35b:	ins    BYTE PTR es:[edi],dx
  40d35c:	xor    bh,BYTE PTR [esi]
  40d35e:	mov    ds:0x882bb5bf,al
  40d363:	pushf  
  40d364:	mov    esi,0x61e022df
  40d369:	dec    eax
  40d36a:	fisubr DWORD PTR [esi+0x394ed1b7]
  40d370:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d371:	aaa    
  40d372:	imul   edi,DWORD PTR [eax-0x9],0x2ff02dfa
  40d379:	cmp    ebx,DWORD PTR [edi]
  40d37b:	lods   al,BYTE PTR ds:[esi]
  40d37c:	retf   0x1192
  40d37f:	je     0x40d369
  40d381:	xchg   ebx,eax
  40d382:	push   ds
  40d383:	xor    DWORD PTR [ebp-0x29],edi
  40d386:	(bad)  
  40d387:	xor    DWORD PTR fs:0xc52eda61,edx
  40d38e:	mov    cl,0x3b
  40d390:	das    
  40d391:	cmp    DWORD PTR [ecx+0x1d],edx
  40d394:	xchg   esp,eax
  40d395:	frstor [ecx]
  40d397:	inc    ebp
  40d398:	mov    esi,0x74aecdbc
  40d39d:	push   edx
  40d39e:	ins    BYTE PTR es:[edi],dx
  40d39f:	jne    0x40d36d
  40d3a1:	inc    esp
  40d3a2:	xchg   esi,eax
  40d3a3:	xchg   ebx,eax
  40d3a4:	xor    BYTE PTR cs:[edx],dh
  40d3a7:	cs sti 
  40d3a9:	aaa    
  40d3aa:	sbb    DWORD PTR [ebp-0x45],esp
  40d3ad:	lds    edx,FWORD PTR [ebx+0x777674a4]
  40d3b3:	scas   eax,DWORD PTR es:[edi]
  40d3b4:	pop    eax
  40d3b5:	inc    ecx
  40d3b6:	frstor [esi+esi*8-0x440a00f0]
  40d3bd:	mov    al,ds:0x742dac4b
  40d3c2:	inc    ecx
  40d3c3:	and    eax,0x1891d936
  40d3c8:	clc    
  40d3c9:	xchg   ebp,eax
  40d3ca:	ret    
  40d3cb:	test   eax,0xa77490c9
  40d3d0:	xchg   esi,eax
  40d3d1:	test   eax,0xfdf8aad7
  40d3d6:	push   edx
  40d3d7:	or     al,0xa3
  40d3d9:	mov    edx,0xb238da3b
  40d3de:	je     0x40d41f
  40d3e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3e1:	repz sti 
  40d3e3:	xor    BYTE PTR [esi],cl
  40d3e5:	add    al,0xe0
  40d3e7:	mov    bl,0x4
  40d3e9:	mov    dl,dh
  40d3eb:	sbb    BYTE PTR [eax+0x7e],ah
  40d3ee:	inc    ecx
  40d3ef:	sti    
  40d3f0:	stos   BYTE PTR es:[edi],al
  40d3f1:	fisub  DWORD PTR [esi]
  40d3f3:	push   edi
  40d3f4:	call   0x1e30be5d
  40d3f9:	jae    0x40d396
  40d3fb:	sbb    ebx,DWORD PTR [ebx-0x2a]
  40d3fe:	xor    bh,dh
  40d400:	rol    DWORD PTR [esi],1
  40d402:	sub    dh,0xc3
  40d405:	cmp    DWORD PTR [esi-0x59],0xffffffec
  40d409:	call   0x141a8f3f
  40d40e:	in     al,dx
  40d40f:	jnp    0x40d43e
  40d411:	mov    dl,0x30
  40d413:	repnz mov cl,0x4f
  40d416:	cdq    
  40d417:	test   DWORD PTR [edi+esi*2],esi
  40d41a:	shl    BYTE PTR [edx+0x4189d4d8],0xb4
  40d421:	adc    al,0x37
  40d423:	stos   WORD PTR es:[edi],ax
  40d425:	pusha  
  40d426:	in     eax,dx
  40d427:	inc    esi
  40d428:	mov    cl,0xbc
  40d42a:	push   esp
  40d42b:	shl    BYTE PTR [esi+esi*1],0xf4
  40d42f:	jb     0x40d440
  40d431:	imul   ecx,edi,0x8d787f48
  40d437:	stos   DWORD PTR es:[edi],eax
  40d438:	sub    eax,0x184b9d65
  40d43d:	sub    DWORD PTR [eax+0x68],0x2c
  40d441:	jns    0x40d3c7
  40d443:	test   BYTE PTR [ebx],ch
  40d445:	push   cs
  40d446:	in     al,0xe2
  40d448:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d449:	enter  0x521c,0x74
  40d44d:	xor    BYTE PTR [ecx+0x7e],dh
  40d450:	xchg   BYTE PTR [edi+0x60ca10f2],al
  40d456:	add    esi,DWORD PTR [edi+edx*8]
  40d459:	and    eax,0xc595e1df
  40d45e:	inc    eax
  40d45f:	mov    eax,0x8dc1f706
  40d464:	(bad)  
  40d465:	mov    ah,0x5a
  40d467:	ret    0x6dc9
  40d46a:	xchg   edx,eax
  40d46b:	cmp    DWORD PTR [edx+ecx*2+0x57],0xfffffffe
  40d470:	push   cs
  40d471:	arpl   WORD PTR [ecx+0x4d],cx
  40d474:	jo     0x40d3fc
  40d476:	ins    DWORD PTR es:[edi],dx
  40d477:	data16 mov cl,0xff
  40d47a:	pushf  
  40d47b:	pop    es
  40d47c:	mov    al,0xa8
  40d47e:	and    al,0x21
  40d480:	push   0xa81f49fe
  40d485:	mov    cl,0x78
  40d487:	sti    
  40d488:	or     BYTE PTR [eax],bl
  40d48a:	jmp    0xb884:0xfe10a95
  40d491:	in     al,0xed
  40d493:	ss in  al,0xab
  40d496:	fwait
  40d497:	popf   
  40d498:	(bad)  
  40d499:	(bad)  
  40d49a:	mov    esp,0x955d4f41
  40d49f:	push   eax
  40d4a0:	out    0xa2,eax
  40d4a2:	enter  0xf31f,0x17
  40d4a6:	nop
  40d4a7:	gs mov ah,0xd3
  40d4aa:	test   eax,0x53701da5
  40d4af:	rcr    BYTE PTR [esi-0x46],cl
  40d4b2:	and    bh,ch
  40d4b4:	jno    0x40d4ae
  40d4b6:	or     edi,DWORD PTR [edi]
  40d4b8:	xchg   edi,eax
  40d4b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4ba:	les    ebp,FWORD PTR [ecx+0x101e84ce]
  40d4c0:	xor    eax,0xb621c379
  40d4c5:	pop    ds
  40d4c6:	jecxz  0x40d52b
  40d4c8:	aam    0xb8
  40d4ca:	ja     0x40d51b
  40d4cc:	repnz cmc 
  40d4ce:	ret    
  40d4cf:	or     BYTE PTR [edi],dh
  40d4d1:	fdiv   st,st(1)
  40d4d3:	rol    BYTE PTR [eax],0x9d
  40d4d6:	popf   
  40d4d7:	scas   al,BYTE PTR es:[edi]
  40d4d8:	inc    edx
  40d4d9:	les    esp,FWORD PTR [edx+0x67]
  40d4dc:	add    DWORD PTR [edi-0x5c],esi
  40d4df:	push   0xffffffe2
  40d4e1:	popf   
  40d4e2:	push   eax
  40d4e3:	aaa    
  40d4e4:	ret    0xb217
  40d4e7:	out    0x4a,eax
  40d4e9:	mov    WORD PTR [edi-0x24],ds
  40d4ec:	and    ecx,esi
  40d4ee:	adc    al,0xe2
  40d4f0:	mov    bl,0xa7
  40d4f2:	pop    ds
  40d4f3:	(bad)  
  40d4f4:	sub    edx,ebp
  40d4f6:	inc    eax
  40d4f7:	repnz push es
  40d4f9:	mov    BYTE PTR [ecx+0x5459052],dl
  40d4ff:	ds jb  0x40d53c
  40d502:	pop    edi
  40d503:	pop    es
  40d504:	sahf   
  40d505:	or     ebp,DWORD PTR [esi-0x55e3212]
  40d50b:	inc    ecx
  40d50c:	add    BYTE PTR [ebx+0x61],bh
  40d50f:	out    0xae,al
  40d511:	mov    ah,0x5f
  40d513:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d514:	adc    al,bl
  40d516:	push   es
  40d517:	mov    ebx,0xfd6798c8
  40d51c:	adc    DWORD PTR [edi],esi
  40d51e:	mov    dl,BYTE PTR [esp+edi*2-0x38a45d1c]
  40d525:	stc    
  40d526:	push   esp
  40d527:	pop    esp
  40d528:	lahf   
  40d529:	ret    
  40d52a:	lods   al,BYTE PTR ds:[esi]
  40d52b:	add    eax,0x43c70848
  40d530:	add    DWORD PTR ds:0xb06c16c,edi
  40d536:	push   esi
  40d537:	mov    edi,0xef67ae1b
  40d53c:	jmp    FWORD PTR [edx+0xa]
  40d53f:	jns    0x40d52e
  40d541:	ret    
  40d542:	cmp    dl,dh
  40d544:	jbe    0x40d4e5
  40d546:	int    0x50
  40d548:	add    eax,0x95c7cc0a
  40d54d:	xchg   ebp,eax
  40d54e:	jb     0x40d555
  40d550:	cmp    ch,BYTE PTR [ecx+0x3e]
  40d553:	sub    eax,0x6891eaf
  40d558:	or     eax,0x489a7948
  40d55d:	shl    BYTE PTR [eax+0x75],cl
  40d560:	fsub   QWORD PTR [ecx]
  40d562:	call   0x3845:0x633a4af8
  40d569:	rcr    DWORD PTR [ebx+esi*8],0xc9
  40d56d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d56e:	scas   eax,DWORD PTR es:[edi]
  40d56f:	add    eax,0xa0c254bd
  40d574:	out    0x20,al
  40d576:	loopne 0x40d556
  40d578:	cmp    edx,DWORD PTR [ecx-0x51]
  40d57b:	pop    edi
  40d57c:	push   esi
  40d57d:	push   ebp
  40d57e:	dec    edx
  40d57f:	mov    ch,0xd
  40d581:	call   0xb6e7ef5d
  40d586:	leave  
  40d587:	je     0x40d59b
  40d589:	or     al,0x99
  40d58b:	and    esp,esi
  40d58d:	ja     0x40d518
  40d58f:	jl     0x40d5f1
  40d591:	mov    ah,0x7c
  40d593:	xlat   BYTE PTR ds:[ebx]
  40d594:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d595:	adc    BYTE PTR [esi+0x58],bh
  40d598:	std    
  40d599:	jecxz  0x40d5cc
  40d59b:	sahf   
  40d59c:	pop    ebx
  40d59d:	push   edx
  40d59e:	pushf  
  40d59f:	push   ss
  40d5a0:	adc    al,0x72
  40d5a2:	mov    bl,0xd9
  40d5a4:	or     BYTE PTR [ebx-0x23c61d73],al
  40d5aa:	sbb    cl,BYTE PTR ds:0xea788aea
  40d5b0:	daa    
  40d5b1:	test   al,0x6a
  40d5b3:	push   ss
  40d5b4:	outs   dx,BYTE PTR ds:[esi]
  40d5b5:	repz jl 0x40d59f
  40d5b8:	scas   eax,DWORD PTR es:[edi]
  40d5b9:	and    BYTE PTR [eax],ah
  40d5bb:	push   es
  40d5bc:	cli    
  40d5bd:	sbb    al,0x78
  40d5bf:	imul   ebp,ebp,0x57c2f1b7
  40d5c5:	retf   
  40d5c6:	mov    dh,0xe6
  40d5c8:	(bad)  
  40d5c9:	rol    al,cl
  40d5cb:	jne    0x40d5c1
  40d5cd:	icebp  
  40d5ce:	mov    ch,ch
  40d5d0:	(bad)  
  40d5d1:	pop    ds
  40d5d2:	mov    ch,0x48
  40d5d4:	inc    ebx
  40d5d5:	xchg   DWORD PTR [eax+esi*2-0x71],eax
  40d5d9:	lock or al,0xef
  40d5dc:	aam    0x75
  40d5de:	xor    dl,BYTE PTR [edx-0x53]
  40d5e1:	add    edx,ebx
  40d5e3:	mov    ebp,DWORD PTR [eax-0xa64a5a6]
  40d5e9:	popa   
  40d5ea:	xchg   BYTE PTR [ebx],ah
  40d5ec:	popa   
  40d5ed:	xor    ah,BYTE PTR [ebx-0x47add5e6]
  40d5f3:	iret   
  40d5f4:	(bad)  
  40d5f5:	shl    bh,cl
  40d5f7:	inc    edi
  40d5f8:	mov    ds:0xf8b4897e,al
  40d5fd:	add    al,0x99
  40d5ff:	loopne 0x40d678
  40d601:	push   esp
  40d602:	sub    edi,ecx
  40d604:	imul   eax,DWORD PTR [esp+eiz*4+0x65a41063],0x9e1ad7d5
  40d60f:	(bad)  
  40d611:	push   ss
  40d612:	aas    
  40d613:	mov    bl,0x66
  40d615:	pop    es
  40d616:	lea    esi,[edi]
  40d618:	and    al,0xba
  40d61a:	daa    
  40d61b:	sub    DWORD PTR [edx-0x2dc5cd71],esi
  40d621:	sbb    BYTE PTR [eax+0x29],bl
  40d624:	js     0x40d5d7
  40d626:	pusha  
  40d627:	sub    esi,ebp
  40d629:	(bad)  
  40d62a:	call   0xcdf69ff1
  40d62f:	loope  0x40d6aa
  40d631:	add    ebx,DWORD PTR [edx-0x7]
  40d634:	icebp  
  40d635:	push   esi
  40d636:	xchg   esi,eax
  40d637:	xchg   edx,eax
  40d638:	mov    ebx,0xc8a87ffc
  40d63d:	gs data16 sahf 
  40d640:	mov    esi,0x1fd77d93
  40d645:	es xchg edi,eax
  40d648:	cmp    al,0x35
  40d64a:	sbb    al,bh
  40d64c:	add    eax,0xda81f374
  40d651:	pop    es
  40d652:	stos   DWORD PTR es:[edi],eax
  40d653:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d654:	and    eax,0xd8b9c114
  40d659:	adc    BYTE PTR [ebx],bl
  40d65b:	iret   
  40d65c:	mov    ebx,0x29372814
  40d661:	inc    edi
  40d662:	xchg   ebx,eax
  40d663:	cmp    al,0x96
  40d665:	add    al,0xdb
  40d667:	imul   edx,DWORD PTR [edx-0x29],0x5d
  40d66b:	sbb    esp,0xec52f1f8
  40d671:	xchg   esi,eax
  40d672:	or     dl,cl
  40d674:	in     al,0xe3
  40d676:	int3   
  40d677:	pop    eax
  40d678:	mov    bl,0x1f
  40d67a:	iret   
  40d67b:	dec    esp
  40d67c:	pop    eax
  40d67d:	je     0x40d67e
  40d67f:	mov    bl,0x1a
  40d682:	push   eax
  40d683:	mov    bh,0xf2
  40d685:	pop    eax
  40d686:	mov    eax,0xd948e74c
  40d68b:	push   edi
  40d68c:	jae    0x40d610
  40d68e:	shr    DWORD PTR [edi+0x24524a82],1
  40d694:	mov    esp,0x3af73c30
  40d699:	lock push 0xffffffac
  40d69c:	gs pop ss
  40d69e:	fs scas al,BYTE PTR es:[edi]
  40d6a0:	mov    ecx,0xdd2d609f
  40d6a5:	add    BYTE PTR [ebx],al
  40d6a7:	push   edi
  40d6a8:	ss mov ah,0x8c
  40d6ab:	mov    esp,0xecff6da4
  40d6b0:	mov    DWORD PTR [ebx-0x4a40173d],ebx
  40d6b6:	xor    DWORD PTR [ecx+0x1a2e7a82],0xb73e565e
  40d6c0:	es pop ebx
  40d6c2:	loope  0x40d6d5
  40d6c4:	pop    ecx
  40d6c5:	push   DWORD PTR [edi+edi*2+0x7c]
  40d6c9:	pop    edx
  40d6ca:	es imul eax,esp,0x9b2e39bd
  40d6d1:	rol    DWORD PTR [edi+ecx*2-0x1b8f2540],cl
  40d6d8:	push   0xffffffc3
  40d6da:	mov    dh,0x8a
  40d6dc:	add    BYTE PTR [ecx],bl
  40d6de:	fwait
  40d6df:	push   es
  40d6e0:	adc    al,0x1a
  40d6e2:	icebp  
  40d6e3:	call   0xd2df60e5
  40d6e8:	hlt    
  40d6e9:	data16 (bad) 
  40d6eb:	cld    
  40d6ec:	scas   eax,DWORD PTR es:[edi]
  40d6ed:	push   edi
  40d6ee:	daa    
  40d6ef:	sub    BYTE PTR [esi],cl
  40d6f1:	push   edi
  40d6f2:	iret   
  40d6f3:	xlat   BYTE PTR ds:[ebx]
  40d6f4:	mov    ecx,0xfff45830
  40d6f9:	sub    DWORD PTR [esi+0x23a8294f],0x6c5ff828
  40d703:	add    BYTE PTR [ecx-0x6],dl
  40d706:	xchg   esi,eax
  40d707:	aam    0xdf
  40d709:	loop   0x40d6da
  40d70b:	loope  0x40d71a
  40d70d:	or     DWORD PTR [eax+0x1125defb],esp
  40d713:	and    DWORD PTR ds:0x8827f88b,esp
  40d719:	iret   
  40d71a:	mov    esp,0xfe9dcdf6
  40d71f:	push   ecx
  40d720:	jmp    0x6f1f:0xfb351c4c
  40d727:	sub    ch,BYTE PTR [ebx]
  40d729:	enter  0x3672,0xe
  40d72d:	jg     0x40d6c4
  40d72f:	nop
  40d730:	jbe    0x40d6e5
  40d732:	adc    DWORD PTR [eax+ebp*4],0x9f1f44e6
  40d739:	test   al,0x2e
  40d73b:	adc    DWORD PTR [esi+0x50],edx
  40d73e:	cmp    BYTE PTR [esi+0x17693436],cl
  40d744:	cdq    
  40d745:	imul   eax,edx,0xffffffe2
  40d748:	push   0x6168fa08
  40d74d:	cmp    al,0xc8
  40d74f:	pop    edi
  40d750:	cmp    cl,BYTE PTR [ebp+0x6d]
  40d753:	push   ds
  40d754:	inc    esp
  40d755:	lods   eax,DWORD PTR ds:[esi]
  40d756:	ja     0x40d782
  40d758:	adc    esi,DWORD PTR [edi-0x1f]
  40d75b:	xor    eax,0x3eaf2d01
  40d760:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d761:	stos   DWORD PTR es:[edi],eax
  40d762:	popf   
  40d763:	arpl   WORD PTR [ebx-0x30],sp
  40d766:	and    bh,BYTE PTR [edi+0x7efa0b12]
  40d76c:	push   esp
  40d76d:	clc    
  40d76e:	aad    0x93
  40d770:	fisttp WORD PTR [esi+0x21]
  40d773:	into   
  40d774:	jb     0x40d758
  40d776:	xor    eax,0x18f06462
  40d77b:	stc    
  40d77c:	loop   0x40d7c7
  40d77e:	data16 fisttp QWORD PTR [ecx+0x67]
  40d782:	mov    esi,0x89a16609
  40d787:	jb     0x40d78d
  40d789:	fistp  DWORD PTR [ebx-0x7d]
  40d78c:	push   ebp
  40d78d:	fmul   QWORD PTR [ebx]
  40d78f:	or     BYTE PTR [ebp-0x4a],dh
  40d792:	aad    0xe2
  40d794:	ror    ecx,0x1
  40d797:	add    BYTE PTR [esi],bh
  40d799:	shl    ah,1
  40d79b:	(bad)
  40d79e:	sub    dh,BYTE PTR [ebx+ecx*8+0xcf243f8]
  40d7a5:	cmp    eax,0x29b12154
  40d7aa:	sub    esp,esp
  40d7ac:	adc    ebp,DWORD PTR [ecx+0x643ee8c3]
  40d7b2:	pop    ebp
  40d7b3:	jbe    0x40d7e7
  40d7b5:	push   eax
  40d7b6:	adc    eax,edx
  40d7b8:	cwde   
  40d7b9:	dec    edx
  40d7ba:	pop    es
  40d7bb:	pop    ebx
  40d7bc:	lods   eax,DWORD PTR ds:[esi]
  40d7bd:	es cmp ah,0x1c
  40d7c1:	mov    cl,0x6d
  40d7c3:	push   eax
  40d7c4:	sub    ecx,DWORD PTR [ecx+0x75aaf2b9]
  40d7ca:	sub    eax,0x1da0693f
  40d7cf:	and    al,0x69
  40d7d1:	push   ss
  40d7d2:	mov    edx,0x16bfd6e6
  40d7d7:	out    dx,al
  40d7d8:	fidiv  WORD PTR [esi]
  40d7da:	cli    
  40d7db:	popf   
  40d7dc:	int    0xca
  40d7de:	out    dx,eax
  40d7df:	adc    edi,DWORD PTR [ebx-0x1e5057e2]
  40d7e5:	dec    ebp
  40d7e6:	dec    esi
  40d7e7:	(bad)  
  40d7e8:	xor    ecx,esi
  40d7ea:	adc    eax,0xb36fd22b
  40d7ef:	sbb    edi,ebp
  40d7f1:	push   eax
  40d7f2:	push   edi
  40d7f3:	dec    eax
  40d7f4:	push   ebx
  40d7f5:	rcr    BYTE PTR [edi+0x7074369e],0xb7
  40d7fc:	sub    bl,BYTE PTR [eax+0x2e999b18]
  40d802:	neg    DWORD PTR [edx]
  40d804:	sbb    DWORD PTR [esp+ecx*8-0x5f],ebx
  40d808:	cmc    
  40d809:	jb     0x40d7d4
  40d80b:	stos   BYTE PTR es:[edi],al
  40d80c:	pop    es
  40d80d:	push   ss
  40d80e:	cmp    dh,cl
  40d810:	das    
  40d811:	adc    DWORD PTR [edi+0x66860ffb],esi
  40d817:	mov    ebp,0x11736613
  40d81c:	jne    0x40d7ea
  40d81e:	xchg   DWORD PTR [ecx],ecx
  40d820:	sub    eax,edx
  40d822:	je     0x40d843
  40d824:	adc    dh,BYTE PTR [esi]
  40d826:	icebp  
  40d827:	(bad)  
  40d828:	mov    ah,0x7a
  40d82a:	sub    al,0xfc
  40d82c:	dec    ebp
  40d82d:	popf   
  40d82e:	xchg   ebx,eax
  40d82f:	inc    edi
  40d830:	push   edi
  40d831:	pop    ebp
  40d832:	mov    ds:0x4658524d,al
  40d837:	sub    eax,0x1887506c
  40d83c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d83d:	and    eax,ebx
  40d83f:	mov    ebp,es
  40d841:	push   eax
  40d842:	bound  edx,QWORD PTR [ebx-0x6c1505eb]
  40d848:	jo     0x40d7dd
  40d84a:	stos   DWORD PTR es:[edi],eax
  40d84b:	data16 loope 0x40d808
  40d84e:	mov    edi,0x44531a8b
  40d853:	mov    edi,0x52e8a6d4
  40d858:	mov    edx,0x8eefb30e
  40d85d:	sti    
  40d85e:	pop    eax
  40d85f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d860:	jns    0x40d8ba
  40d862:	sub    eax,0x963275c9
  40d867:	xchg   ecx,eax
  40d868:	dec    ebx
  40d869:	call   0x3520:0x404ca112
  40d870:	pop    ebp
  40d871:	pop    eax
  40d872:	cld    
  40d873:	gs (bad) 
  40d875:	lea    edi,es:[edx+esi*4-0x4b5ec7e8]
  40d87d:	aad    0xd5
  40d87f:	jno    0x40d8a3
  40d881:	test   bh,0x11
  40d884:	stc    
  40d885:	dec    ecx
  40d886:	jg     0x40d87b
  40d888:	and    al,0xdb
  40d88a:	cs pop es
  40d88c:	push   ds
  40d88d:	push   edi
  40d88e:	xchg   BYTE PTR [eax+0x76],ch
  40d891:	fbld   TBYTE PTR gs:[edi+0x7c]
  40d895:	in     al,0xf
  40d897:	and    bh,BYTE PTR [esi+0x2c]
  40d89a:	push   eax
  40d89b:	jbe    0x40d8cc
  40d89d:	sub    DWORD PTR [ebx+0x591e49dc],ebp
  40d8a3:	pop    ecx
  40d8a4:	rep ins DWORD PTR es:[edi],dx
  40d8a6:	loop   0x40d8e7
  40d8a8:	repz push ecx
  40d8aa:	inc    eax
  40d8ab:	(bad)  
  40d8ac:	pop    ecx
  40d8ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8af:	xchg   ecx,eax
  40d8b0:	dec    edi
  40d8b1:	jbe    0x40d906
  40d8b3:	(bad)  
  40d8b4:	cmp    ebp,eax
  40d8b6:	add    ecx,DWORD PTR [esi]
  40d8b8:	pushf  
  40d8b9:	mov    eax,0xb2ea5593
  40d8be:	jne    0x40d877
  40d8c0:	xchg   edx,eax
  40d8c1:	stc    
  40d8c2:	push   es
  40d8c3:	in     eax,dx
  40d8c4:	cmp    BYTE PTR [eax],bh
  40d8c6:	jmp    0x8898:0xa88c4083
  40d8cd:	shr    BYTE PTR [ecx-0x2],1
  40d8d0:	lock mov dl,0x18
  40d8d3:	jl     0x40d92b
  40d8d5:	and    ebx,DWORD PTR [edi+edx*8+0x488874e4]
  40d8dc:	sti    
  40d8dd:	js     0x40d86c
  40d8df:	test   edx,0x66557536
  40d8e5:	dec    ebp
  40d8e6:	bswap  eax
  40d8e8:	and    esi,ebx
  40d8ea:	leave  
  40d8eb:	cli    
  40d8ec:	jl     0x40d8c6
  40d8ee:	xlat   BYTE PTR ds:[ebx]
  40d8ef:	mov    ebp,0xa6140760
  40d8f4:	aas    
  40d8f5:	ret    0xfae2
  40d8f8:	push   ds
  40d8f9:	xchg   DWORD PTR [edx+0x2a],ecx
  40d8fc:	xor    al,0x95
  40d8fe:	je     0x40d911
  40d900:	mov    ebp,0x1545bfde
  40d905:	(bad)  {z}
  40d90a:	les    esi,FWORD PTR [ebx-0x29]
  40d90d:	addr16 mov esi,fs
  40d910:	jge    0x40d927
  40d912:	mov    ebx,0x282d1af6
  40d917:	nop
  40d918:	in     eax,dx
  40d919:	adc    edi,DWORD PTR [ebx]
  40d91b:	sar    DWORD PTR [esi+0x18a2a46e],0xe7
  40d922:	or     BYTE PTR [ebx-0x6a49a97e],bh
  40d928:	je     0x40d987
  40d92a:	scas   eax,DWORD PTR es:[edi]
  40d92b:	cmp    bl,BYTE PTR [eax]
  40d92d:	int3   
  40d92e:	jmp    0x40d8e7
  40d930:	mov    dl,0x69
  40d932:	sub    bl,dl
  40d934:	aas    
  40d935:	rcl    DWORD PTR [ecx-0x37],0xc0
  40d939:	or     BYTE PTR [eax+0xed6bcd8],0x66
  40d940:	not    BYTE PTR [ecx-0x5a]
  40d943:	cmp    bl,bh
  40d945:	dec    esi
  40d946:	sub    DWORD PTR [ebx+0x5],0xa4e1281f
  40d94d:	loope  0x40d900
  40d94f:	scas   al,BYTE PTR es:[edi]
  40d950:	or     cl,BYTE PTR ds:0x6950883e
  40d956:	outs   dx,BYTE PTR ds:[esi]
  40d957:	dec    esi
  40d958:	sbb    al,0x39
  40d95a:	leave  
  40d95b:	rcr    BYTE PTR [esi+0xb176dfa],0x74
  40d962:	dec    ecx
  40d963:	aas    
  40d964:	sbb    eax,0x4743e074
  40d969:	fcomp  st(7)
  40d96b:	or     al,bh
  40d96d:	(bad)  
  40d96e:	repnz xchg ecx,eax
  40d970:	(bad)  
  40d971:	xor    ch,BYTE PTR [edi+0x350a38a8]
  40d977:	push   esp
  40d978:	out    0x0,al
  40d97a:	xchg   BYTE PTR [ebp+0xf5b7b72],dh
  40d980:	les    ebx,FWORD PTR [edi]
  40d982:	push   ecx
  40d983:	adc    ah,BYTE PTR [ebx+0x63]
  40d986:	push   ds
  40d987:	ror    bh,1
  40d989:	and    eax,0x48a95197
  40d98e:	int3   
  40d98f:	mov    DWORD PTR [ecx-0x15],esp
  40d992:	jmp    0x6cedebee
  40d997:	sbb    al,0xfb
  40d999:	push   edi
  40d99a:	in     eax,dx
  40d99b:	in     eax,dx
  40d99c:	mov    bl,0x59
  40d99e:	out    0xa0,eax
  40d9a0:	fimul  DWORD PTR [eax+ebp*1+0x5b]
  40d9a4:	cmp    al,0xed
  40d9a6:	mov    eax,ds:0xa640168
  40d9ab:	not    BYTE PTR [ebx-0x2b73fd7c]
  40d9b1:	dec    edx
  40d9b2:	mov    ah,0xa0
  40d9b4:	pop    edx
  40d9b5:	aad    0xd7
  40d9b7:	in     eax,0x7e
  40d9b9:	test   DWORD PTR [ecx+0x4d],edx
  40d9bc:	pavgb  mm6,mm4
  40d9bf:	xchg   BYTE PTR [ecx],bl
  40d9c1:	mov    ecx,0x20a8632c
  40d9c6:	les    edi,FWORD PTR [esi-0xf2b6291]
  40d9cc:	sbb    DWORD PTR [esi+0x9],edi
  40d9cf:	mov    esi,0x41c0a5c7
  40d9d4:	in     al,0x3a
  40d9d6:	jno    0x40d9af
  40d9d8:	cmp    DWORD PTR [edx+0xa],ecx
  40d9db:	femms  
  40d9dd:	push   edi
  40d9de:	ins    DWORD PTR es:[edi],dx
  40d9df:	imul   edi,DWORD PTR [ecx+0x3b],0x4
  40d9e3:	sbb    ebx,edi
  40d9e5:	frstor [edx+0x7408d2fa]
  40d9eb:	jmp    0x40da42
  40d9ed:	aam    0xa3
  40d9ef:	mov    edx,0xf87f462f
  40d9f4:	out    0x37,al
  40d9f6:	pop    esp
  40d9f7:	xchg   DWORD PTR [edi-0x7d0decf2],esi
  40d9fd:	pop    ecx
  40d9fe:	in     eax,dx
  40d9ff:	btr    DWORD PTR [ebx-0x21],edx
  40da03:	jo     0x40da84
  40da05:	dec    ebp
  40da06:	dec    edx
  40da07:	repnz (bad) 
  40da09:	cmp    eax,edx
  40da0b:	out    dx,eax
  40da0c:	add    BYTE PTR [edi+0x2a8e252d],0x21
  40da13:	lea    esp,[edi+0x69af31d8]
  40da19:	push   cs
  40da1a:	test   DWORD PTR [ebx],edi
  40da1c:	gs push ss
  40da1e:	add    ebp,ebp
  40da20:	xlat   BYTE PTR ds:[ebx]
  40da21:	jecxz  0x40da0d
  40da23:	cs fs xor ebx,0x6be5fa3e
  40da2b:	mov    ss,eax
  40da2d:	inc    esi
  40da2e:	or     BYTE PTR [ecx+eiz*2-0x6b710ae9],0xfa
  40da36:	push   edi
  40da37:	jge    0x40daad
  40da39:	scas   al,BYTE PTR es:[edi]
  40da3a:	in     eax,dx
  40da3b:	inc    ebp
  40da3c:	inc    ecx
  40da3d:	adc    eax,0x197a3d6b
  40da42:	push   ebp
  40da43:	pop    edi
  40da44:	out    dx,eax
  40da45:	data16 mov bh,0x0
  40da48:	push   ecx
  40da49:	cmp    DWORD PTR [eax],esi
  40da4b:	outs   dx,BYTE PTR ds:[esi]
  40da4c:	mov    ebp,0xcbd9d0bc
  40da51:	xchg   esi,eax
  40da52:	or     al,0xa3
  40da54:	call   0x2ae8ff03
  40da59:	(bad)  
  40da5b:	loope  0x40da2b
  40da5d:	mov    es,WORD PTR [edx+0x78]
  40da60:	jne    0x40dad4
  40da62:	gs or  cl,0x30
  40da66:	and    DWORD PTR [edi+0x2a],eax
  40da69:	retf   
  40da6a:	inc    eax
  40da6b:	loope  0x40da34
  40da6d:	sub    eax,0xe5f993ad
  40da72:	sub    dl,bh
  40da74:	pop    eax
  40da75:	pop    esi
  40da76:	repz es inc dh
  40da7a:	stc    
  40da7b:	xchg   DWORD PTR ds:0xc79ea3ee,eax
  40da81:	add    cl,ah
  40da83:	lods   al,BYTE PTR ds:[esi]
  40da84:	jg     0x40da3d
  40da86:	fstp   DWORD PTR [esi+0x27]
  40da89:	inc    esi
  40da8a:	sub    DWORD PTR [edx-0x58],edx
  40da8d:	mov    ecx,0xd824c3f9
  40da92:	call   0x394b:0xca853c9a
  40da99:	jae    0x40da48
  40da9b:	stos   BYTE PTR es:[edi],al
  40da9c:	mov    BYTE PTR [eax+0x16],ch
  40da9f:	out    0xa,al
  40daa1:	dec    edx
  40daa2:	jo     0x40db02
  40daa4:	mov    edi,ebx
  40daa6:	dec    esp
  40daa7:	sbb    esp,DWORD PTR ds:0x41c5a536
  40daad:	lock retf 
  40daaf:	jb     0x40da84
  40dab1:	lds    ebx,FWORD PTR [edi+esi*2]
  40dab4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dab5:	sbb    edi,DWORD PTR [edx]
  40dab7:	mov    bh,0x0
  40dab9:	push   esi
  40daba:	jle    0x40dae2
  40dabc:	stos   BYTE PTR es:[edi],al
  40dabd:	xchg   DWORD PTR [ebp-0xdf8dab1],esi
  40dac3:	adc    cl,BYTE PTR [eax+esi*4]
  40dac6:	push   edi
  40dac7:	and    edx,ebx
  40dac9:	inc    eax
  40daca:	stos   DWORD PTR es:[edi],eax
  40dacb:	inc    DWORD PTR [edx-0x6f17bcca]
  40dad1:	fisubr DWORD PTR [eax+0x17b3d35f]
  40dad7:	pop    ecx
  40dad8:	repnz aas 
  40dada:	or     al,0xef
  40dadc:	daa    
  40dadd:	icebp  
  40dade:	bound  edi,QWORD PTR [ecx-0x48]
  40dae1:	xchg   esp,eax
  40dae2:	dec    edi
  40dae3:	inc    esp
  40dae4:	sub    ch,bl
  40dae6:	out    dx,al
  40dae7:	shl    BYTE PTR [ebp-0x514b4dbb],cl
  40daed:	push   edx
  40daee:	jno    0x40db43
  40daf0:	push   ecx
  40daf1:	mov    BYTE PTR [ebx-0x47],ch
  40daf4:	dec    ebx
  40daf5:	inc    ecx
  40daf6:	lock jecxz 0x40db18
  40daf9:	sbb    dl,dh
  40dafb:	int3   
  40dafc:	cmp    BYTE PTR [esi-0x3160cb5a],dl
  40db02:	js     0x40dad1
  40db04:	fiadd  WORD PTR [ebp-0x1e]
  40db07:	or     al,0x13
  40db09:	mov    es,WORD PTR [esp+ecx*2-0x3]
  40db0d:	xor    bh,BYTE PTR [eax-0x72]
  40db10:	pop    edi
  40db11:	loop   0x40dab2
  40db13:	in     al,dx
  40db14:	xchg   edi,eax
  40db15:	push   0xffffffa8
  40db17:	mov    cl,0x4d
  40db19:	stc    
  40db1a:	dec    esi
  40db1b:	mov    eax,0xebb8a301
  40db20:	stos   BYTE PTR es:[edi],al
  40db21:	mov    edi,0x142419c9
  40db26:	mov    eax,0xd42e831e
  40db2b:	loopne 0x40db15
  40db2d:	sub    eax,DWORD PTR ds:0xb5d1e4b4
  40db33:	pushf  
  40db34:	jns    0x40db0f
  40db36:	or     al,0xc7
  40db38:	sbb    eax,0x85d7925
  40db3d:	push   cs
  40db3e:	je     0x40db24
  40db40:	ja     0x40db58
  40db42:	inc    edi
  40db43:	or     ch,BYTE PTR [edx]
  40db45:	mov    dl,BYTE PTR ss:[ebx]
  40db48:	push   ecx
  40db49:	fsub   QWORD PTR [edi-0x34]
  40db4c:	jmp    0xac8ee5f
  40db51:	pushf  
  40db52:	pop    eax
  40db53:	dec    ecx
  40db54:	into   
  40db55:	je     0x40db36
  40db57:	lods   eax,DWORD PTR ds:[esi]
  40db58:	inc    edi
  40db59:	cmc    
  40db5a:	stos   DWORD PTR es:[edi],eax
  40db5b:	adc    bh,BYTE PTR [esi+0x20]
  40db5e:	sub    ah,0x3a
  40db61:	mov    cl,0xb6
  40db63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db64:	push   edx
  40db65:	out    0x77,al
  40db67:	add    eax,0x535efa72
  40db6c:	add    DWORD PTR [ecx+edx*8+0x75],esi
  40db70:	in     eax,0xee
  40db72:	and    DWORD PTR [edx+0xc],ebx
  40db75:	add    BYTE PTR [ebx+0xc],al
  40db78:	imul   ebx,DWORD PTR [eax],0xf
  40db7b:	ret    0x83c3
  40db7e:	mov    BYTE PTR [ebx],bl
  40db80:	xchg   esp,eax
  40db81:	jmp    0x84fd63f
  40db86:	cmovbe esp,DWORD PTR [esi+eax*1+0x7c]
  40db8b:	hlt    
  40db8c:	dec    esi
  40db8d:	and    eax,ebx
  40db8f:	mov    edx,0x68acdef5
  40db94:	aas    
  40db95:	pop    ss
  40db96:	push   esp
  40db97:	mov    BYTE PTR [edi+0x40d93a04],dl
  40db9d:	mov    eax,0x8dc42622
  40dba2:	adc    al,0xdb
  40dba4:	fistp  WORD PTR gs:[esi+0x11190e58]
  40dbab:	cli    
  40dbac:	xchg   esp,eax
  40dbad:	xchg   ebp,ebp
  40dbaf:	jo     0x40db90
  40dbb1:	cmp    DWORD PTR ds:0x420cd186,edi
  40dbb7:	fs mov cl,0xdb
  40dbba:	arpl   WORD PTR ds:0x31ca371e,bx
  40dbc0:	fwait
  40dbc1:	cmc    
  40dbc2:	test   al,0x23
  40dbc4:	jl     0x40db5e
  40dbc6:	dec    esi
  40dbc7:	(bad)  
  40dbc8:	push   esi
  40dbc9:	ja     0x40dbb9
  40dbcb:	retf   0xf53f
  40dbce:	push   eax
  40dbcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbd0:	jns    0x40db95
  40dbd2:	out    dx,al
  40dbd3:	retf   0xae27
  40dbd6:	xor    edx,DWORD PTR [edx-0x1e66ffbf]
  40dbdc:	leave  
  40dbdd:	adc    eax,0x81ee0899
  40dbe2:	cmp    ebx,DWORD PTR [esi+edi*8-0x38]
  40dbe6:	ss and al,0x80
  40dbe9:	mov    ds:0x970b0ea7,eax
  40dbee:	push   edi
  40dbef:	std    
  40dbf0:	mov    dh,ch
  40dbf2:	adc    eax,edx
  40dbf4:	adc    dh,ch
  40dbf6:	pop    ecx
  40dbf7:	dec    esi
  40dbf8:	xchg   edi,eax
  40dbf9:	sahf   
  40dbfa:	in     eax,dx
  40dbfb:	lahf   
  40dbfc:	xchg   ebp,eax
  40dbfd:	fist   DWORD PTR [ebx-0x164b77e9]
  40dc03:	mov    bl,0x14
  40dc05:	test   cl,dh
  40dc07:	nop
  40dc08:	leave  
  40dc09:	data16 mov ds,WORD PTR [edi+ebx*8+0x1e]
  40dc0e:	cwde   
  40dc0f:	lods   al,BYTE PTR ds:[esi]
  40dc10:	pop    edi
  40dc11:	push   0xbfc3ba90
  40dc16:	(bad)  
  40dc17:	pop    ebx
  40dc18:	sbb    al,0xd5
  40dc1a:	pop    es
  40dc1b:	cs ret 0x8f83
  40dc1f:	cdq    
  40dc20:	push   ss
  40dc21:	popf   
  40dc22:	(bad)  [ecx+0x1b]
  40dc25:	sbb    cl,ah
  40dc27:	push   0x77
  40dc29:	test   al,0x86
  40dc2b:	repnz retf 
  40dc2d:	dec    ebp
  40dc2e:	adc    al,0xd0
  40dc30:	or     esp,DWORD PTR [esi]
  40dc32:	add    eax,0x6ff73a13
  40dc37:	pop    ebp
  40dc38:	in     eax,dx
  40dc39:	xlat   BYTE PTR ds:[ebx]
  40dc3a:	add    BYTE PTR [ecx-0x14d0067d],dh
  40dc40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc41:	sar    DWORD PTR [ebx],cl
  40dc43:	retf   
  40dc44:	adc    BYTE PTR es:[edx+0x31c251d0],cl
  40dc4b:	(bad)  
  40dc4c:	sti    
  40dc4d:	jmp    0x924aaefa
  40dc52:	pop    ebp
  40dc53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc54:	pop    esp
  40dc55:	push   0x3f4e0ad7
  40dc5a:	loopne 0x40dc7b
  40dc5c:	add    al,BYTE PTR [ebp+0x462d440e]
  40dc62:	loop   0x40dc80
  40dc64:	mov    eax,0xb13e4ec3
  40dc69:	sar    BYTE PTR [ecx-0x32],cl
  40dc6c:	in     eax,dx
  40dc6d:	sbb    eax,0x8a7394b6
  40dc72:	dec    eax
  40dc73:	pop    edx
  40dc74:	jbe    0x40dc32
  40dc76:	mov    ebx,0x6de784d8
  40dc7b:	repz call 0x46b5c405
  40dc81:	mov    WORD PTR ss:[eax+ecx*2-0x4959e284],es
  40dc89:	int3   
  40dc8a:	dec    ebp
  40dc8b:	push   ebp
  40dc8c:	jno    0x40dc70
  40dc8e:	jg     0x40dcbb
  40dc90:	cmp    eax,0x67b0030b
  40dc95:	fdiv   st(1),st
  40dc97:	outs   dx,BYTE PTR ds:[esi]
  40dc98:	mov    ecx,0x3e7a529a
  40dc9d:	call   0xa8b5fe0d
  40dca2:	loope  0x40dc73
  40dca4:	pop    ebx
  40dca5:	xor    ch,BYTE PTR [esi]
  40dca7:	out    dx,al
  40dca8:	mov    eax,ds:0xfd2b6a3c
  40dcad:	and    al,0x8a
  40dcaf:	ret    
  40dcb0:	pop    eax
  40dcb1:	push   esp
  40dcb2:	cmp    cl,dh
  40dcb4:	push   eax
  40dcb5:	xchg   edx,eax
  40dcb6:	aad    0xf8
  40dcb8:	call   0xe0c542ff
  40dcbd:	loope  0x40dc82
  40dcbf:	ja     0x40dd18
  40dcc1:	inc    eax
  40dcc2:	inc    edi
  40dcc3:	(bad)  
  40dcc4:	aas    
  40dcc5:	sahf   
  40dcc6:	rol    DWORD PTR [edx+ecx*4+0x15],cl
  40dcca:	inc    ebx
  40dccb:	aas    
  40dccc:	pop    esp
  40dccd:	(bad)  
  40dcce:	and    edi,DWORD PTR [edi+0x50202939]
  40dcd4:	add    DWORD PTR [eax],edi
  40dcd6:	pop    esp
  40dcd7:	xor    BYTE PTR [esi+0x4d35a0a1],ah
  40dcdd:	xor    esp,esp
  40dcdf:	test   eax,0x678ee98e
  40dce4:	imul   ebx,DWORD PTR [eax-0x5c],0x40
  40dce8:	mov    ebx,0xeedd58f3
  40dced:	es dec ebx
  40dcef:	call   0x7905:0x4ef9763e
  40dcf6:	call   DWORD PTR [esi+edi*1+0x72]
  40dcfa:	inc    ebx
  40dcfb:	jne    0x40dcb9
  40dcfd:	pop    es
  40dcfe:	xor    edx,ebp
  40dd00:	sub    ecx,DWORD PTR [ebx-0x62c44cd3]
  40dd06:	adc    eax,0x8bb89caa
  40dd0b:	mov    ebx,0xb9684aa6
  40dd10:	mov    edx,0xabe6a360
  40dd15:	mov    ch,0xa9
  40dd17:	or     DWORD PTR [ebx+esi*1],0x180581ce
  40dd1e:	mov    al,ds:0xa0000042
  40dd23:	inc    edx
  40dd24:	add    BYTE PTR [ecx-0x30fc33bb],cl
  40dd2a:	jmp    0x4191e1
  40dd2f:	sub    DWORD PTR ds:0x42a018,edi
  40dd35:	lea    edx,[ecx+eax*1]
  40dd38:	mov    DWORD PTR [ebp-0x28],edx
  40dd3b:	mov    edx,DWORD PTR [ebp-0x44]
  40dd3e:	mov    ebx,DWORD PTR ds:0x429004
  40dd44:	add    DWORD PTR ds:0x42c008,ebx
  40dd4a:	sub    edx,ecx
  40dd4c:	mov    DWORD PTR ds:0x42b004,0x1e
  40dd56:	cmp    DWORD PTR ds:0x42b004,0x0
  40dd5d:	je     0x40dd97
  40dd63:	cmp    DWORD PTR ds:0x42b004,0x28
  40dd6a:	jne    0x40dd85
  40dd70:	push   0x3a6a
  40dd75:	push   0x42b010
  40dd7a:	push   0x42365e
  40dd7f:	call   DWORD PTR ds:0x424048
  40dd85:	mov    ebx,DWORD PTR ds:0x42b004
  40dd8b:	dec    ebx
  40dd8c:	mov    DWORD PTR ds:0x42b004,ebx
  40dd92:	jmp    0x40dd56
  40dd97:	mov    DWORD PTR [ebp-0x24],edx
  40dd9a:	mov    edx,DWORD PTR [ebp-0x24]
  40dd9d:	and    DWORD PTR ds:0x428008,edi
  40dda3:	mov    DWORD PTR [ebp-0x14],edx
  40dda6:	not    edx
  40dda8:	mov    edx,DWORD PTR [ebp-0x28]
  40ddab:	mov    DWORD PTR ds:0x42800c,0x11
  40ddb5:	cmp    DWORD PTR ds:0x42800c,0x0
  40ddbc:	je     0x40de6b
  40ddc2:	cmp    DWORD PTR ds:0x42800c,0x8
  40ddc9:	jne    0x40dddd
  40ddcf:	push   0x42a010
  40ddd4:	push   DWORD PTR [ebp-0x28]
  40ddd7:	call   DWORD PTR ds:0x424014
  40dddd:	cmp    DWORD PTR ds:0x42800c,0x9
  40dde4:	jne    0x40ddf7
  40ddea:	mov    ebx,DWORD PTR ds:0x42800c
  40ddf0:	dec    ebx
  40ddf1:	mov    DWORD PTR ds:0x42800c,ebx
  40ddf7:	xor    ebx,ebx
  40ddf9:	or     ebx,DWORD PTR ds:0x42800c
  40ddff:	dec    ebx
  40de00:	mov    DWORD PTR ds:0x42800c,ebx
  40de06:	jmp    0x40ddb5
  40de0b:	mov    DWORD PTR ds:0x429004,0x17
  40de15:	cmp    DWORD PTR ds:0x429004,0x0
  40de1c:	je     0x40de6b
  40de22:	cmp    DWORD PTR ds:0x429004,0x25
  40de29:	jne    0x40de57
  40de2f:	push   0x85b6
  40de34:	push   0x42a018
  40de39:	push   DWORD PTR [ebp-0x24]
  40de3c:	push   0x42c000
  40de41:	push   0x5138
  40de46:	push   DWORD PTR [ebp-0x24]
  40de49:	push   0x4b55
  40de4e:	push   DWORD PTR [ebp-0x24]
  40de51:	call   DWORD PTR ds:0x424018
  40de57:	xor    ebx,ebx
  40de59:	add    ebx,DWORD PTR ds:0x429004
  40de5f:	dec    ebx
  40de60:	mov    DWORD PTR ds:0x429004,ebx
  40de66:	jmp    0x40de15
  40de6b:	mov    DWORD PTR [ebp-0x3c],0xf89c85b6
  40de72:	mov    DWORD PTR [ebp-0x40],edx
  40de75:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  40de7c:	mov    edx,DWORD PTR [ebp-0x3c]
  40de7f:	xor    edx,esi
  40de81:	add    edx,edi
  40de83:	mov    DWORD PTR [ebp-0x10],edx
  40de86:	mov    edx,DWORD PTR [ebp-0x3c]
  40de89:	xor    edx,esi
  40de8b:	add    edx,edi
  40de8d:	mov    DWORD PTR [ebp-0x8],edx
  40de90:	mov    DWORD PTR [ebp-0x28],0xf89c85d6
  40de97:	mov    DWORD PTR [ebp-0x2c],0xf89c85bf
  40de9e:	mov    edx,DWORD PTR [ebp-0x3c]
  40dea1:	mov    ebx,DWORD PTR [ebp-0x14]
  40dea4:	xor    edx,esi
  40dea6:	add    edx,edi
  40dea8:	cmp    ebx,edx
  40deaa:	je     0x4191d5
  40deb0:	mov    eax,DWORD PTR [ebp-0x18]
  40deb3:	xor    eax,esi
  40deb5:	mov    edx,0xffcd8d25
  40deba:	sub    edx,eax
  40debc:	add    edx,DWORD PTR [ebp-0x14]
  40debf:	mov    eax,DWORD PTR [ebp-0x18]
  40dec2:	mov    ebx,DWORD PTR [ebp-0x10]
  40dec5:	xor    eax,esi
  40dec7:	jmp    0x41023c
  40decc:	and    ecx,DWORD PTR [eax+0x3]
  40decf:	scas   eax,DWORD PTR es:[edi]
  40ded0:	jecxz  0x40df3d
  40ded2:	arpl   sp,ax
  40ded4:	jns    0x40de7a
  40ded6:	cmp    edi,edi
  40ded8:	push   edi
  40ded9:	(bad)  
  40deda:	jmp    0xa62:0x62d117c2
  40dee1:	pop    edi
  40dee2:	bound  esp,QWORD PTR [edx+0x70]
  40dee5:	ror    ebx,0xd0
  40dee8:	xor    ebp,DWORD PTR [edi]
  40deea:	repz mov ch,0x17
  40deed:	pop    ebp
  40deee:	add    DWORD PTR [ebp+0x72],0xffffff96
  40def2:	xchg   esi,eax
  40def3:	adc    dl,BYTE PTR [ebp-0x30336a11]
  40def9:	add    al,0xa3
  40defb:	daa    
  40defc:	outs   dx,BYTE PTR ds:[esi]
  40defd:	mov    cl,0x88
  40deff:	je     0x40df76
  40df01:	leave  
  40df02:	ins    BYTE PTR es:[edi],dx
  40df03:	sbb    al,0x47
  40df05:	sbb    DWORD PTR [edx+0x35772d52],0xf052890b
  40df0f:	xlat   BYTE PTR ds:[ebx]
  40df10:	jge    0x40dea6
  40df12:	ins    DWORD PTR es:[edi],dx
  40df13:	push   ds
  40df14:	sahf   
  40df15:	xchg   BYTE PTR [ecx+0x7127e998],dl
  40df1b:	push   eax
  40df1c:	adc    al,0x59
  40df1e:	test   eax,0xed6aa67b
  40df23:	jb     0x40df2b
  40df25:	jmp    0x719ddf63
  40df2a:	inc    edx
  40df2b:	or     DWORD PTR [edx+0x8655f3f],edx
  40df31:	mov    WORD PTR [eax-0x6c],fs
  40df34:	(bad)  
  40df36:	pusha  
  40df37:	(bad)  
  40df38:	push   ebx
  40df39:	clc    
  40df3a:	clc    
  40df3b:	adc    eax,0x66448519
  40df40:	adc    al,0xa3
  40df42:	mov    edx,DWORD PTR [esi+0x25]
  40df45:	pop    ecx
  40df46:	mov    dl,BYTE PTR [ecx]
  40df48:	add    DWORD PTR [ecx-0x28],ecx
  40df4b:	lahf   
  40df4c:	xchg   edi,eax
  40df4d:	inc    esi
  40df4e:	and    eax,0x6cff67c6
  40df53:	cmp    eax,0x748429a0
  40df58:	test   eax,0x5c8623f4
  40df5d:	inc    edx
  40df5e:	push   edx
  40df5f:	cmp    BYTE PTR [edx+eiz*2],dl
  40df62:	inc    esp
  40df63:	sbb    ah,BYTE PTR [eax+esi*8]
  40df66:	jb     0x40df91
  40df68:	or     eax,0x9cfb058c
  40df6d:	jmp    0x40df8d
  40df6f:	mov    dl,0x61
  40df71:	fcomp  st(0)
  40df73:	add    ebx,DWORD PTR [ecx]
  40df75:	push   ecx
  40df76:	xor    BYTE PTR [ecx+eax*2+0x3b9f06a6],dh
  40df7d:	dec    edi
  40df7e:	ficomp WORD PTR [ebx+0x699c9931]
  40df84:	imul   esi,DWORD PTR [ecx],0xffffffd2
  40df87:	jnp    0x40dfcb
  40df89:	xor    DWORD PTR [esi],esp
  40df8b:	inc    eax
  40df8c:	fadd   DWORD PTR [ebp+0x33]
  40df8f:	xor    DWORD PTR [edx],0x72
  40df92:	int    0x3b
  40df94:	jns    0x40dfd8
  40df96:	loop   0x40df23
  40df98:	push   esp
  40df99:	fst    DWORD PTR [edx+0x6cafa0ed]
  40df9f:	cmp    edx,DWORD PTR [eax-0xa5a3251]
  40dfa5:	inc    eax
  40dfa6:	mov    es,WORD PTR [ecx+ebp*1-0x6b]
  40dfaa:	fnstenv [ebx-0x48494585]
  40dfb0:	fisubr DWORD PTR cs:[ebp-0x14b7bfaa]
  40dfb7:	sbb    eax,DWORD PTR [eax-0x55]
  40dfba:	sti    
  40dfbb:	js     0x40dfab
  40dfbd:	push   0x13
  40dfbf:	xchg   ebp,eax
  40dfc0:	xor    al,0x35
  40dfc2:	fwait
  40dfc3:	int3   
  40dfc4:	ins    BYTE PTR es:[edi],dx
  40dfc5:	sahf   
  40dfc6:	(bad)  
  40dfc7:	or     al,0xf2
  40dfc9:	test   ebp,ebx
  40dfcb:	push   ss
  40dfcc:	je     0x40e016
  40dfce:	mov    cl,0xe2
  40dfd0:	and    BYTE PTR [edx-0x5fd3d71],cl
  40dfd6:	or     ebp,DWORD PTR [ebp+0x3c8ae252]
  40dfdc:	mov    ds:0xdb52400e,al
  40dfe1:	cmp    DWORD PTR [ecx-0x67],eax
  40dfe4:	pop    ds
  40dfe5:	fild   DWORD PTR [ecx]
  40dfe7:	mov    ecx,0xde4dbf09
  40dfec:	or     DWORD PTR [esi-0x7a6bcebb],ebp
  40dff2:	or     edi,ecx
  40dff4:	(bad)  
  40dff5:	sbb    DWORD PTR [ecx],eax
  40dff7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dff8:	pushf  
  40dff9:	sub    ch,BYTE PTR [eax]
  40dffb:	clc    
  40dffc:	mov    esi,es
  40dffe:	or     al,BYTE PTR [edi-0x37679b98]
  40e004:	push   esp
  40e005:	mov    al,ds:0xa6ea79e7
  40e00a:	outs   dx,BYTE PTR ds:[esi]
  40e00b:	setnp  BYTE PTR [edi+0x594364cc]
  40e012:	mov    ebx,esi
  40e014:	push   esp
  40e015:	addr16 cmp al,0xc9
  40e018:	adc    al,0x69
  40e01a:	test   DWORD PTR [ecx+0x4d],esp
  40e01d:	cwde   
  40e01e:	xor    al,0x60
  40e020:	pop    eax
  40e021:	sub    DWORD PTR [eax-0x4fcf7da],ebx
  40e027:	xchg   esi,eax
  40e028:	jne    0x40e014
  40e02a:	arpl   WORD PTR [ecx+0x42b47550],si
  40e030:	sbb    BYTE PTR [eax+0x16],bh
  40e033:	call   0xb1a6:0x380f954a
  40e03a:	jae    0x40e086
  40e03c:	pop    ebx
  40e03d:	sar    DWORD PTR [esi+edi*1+0x6d],0x37
  40e042:	ret    
  40e043:	fwait
  40e044:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e045:	(bad)  
  40e046:	mov    esp,0x8eaadf29
  40e04b:	pop    esi
  40e04c:	push   0xa0478558
  40e051:	cld    
  40e052:	adc    BYTE PTR [eax+0x52],cl
  40e055:	or     ebx,DWORD PTR [esi-0x79]
  40e058:	sub    al,0x48
  40e05a:	dec    edi
  40e05b:	sti    
  40e05c:	(bad)  
  40e05d:	outs   dx,DWORD PTR ds:[esi]
  40e05e:	retf   0xe19e
  40e061:	inc    ebp
  40e062:	push   ss
  40e063:	ret    0xf02b
  40e066:	sbb    esi,DWORD PTR [eax-0x66c554a9]
  40e06c:	js     0x40e019
  40e06e:	pop    ebp
  40e06f:	test   DWORD PTR [eax-0x93e8ece],ecx
  40e075:	xchg   ebx,eax
  40e076:	jne    0x40e06d
  40e078:	xchg   edi,eax
  40e079:	aad    0xef
  40e07b:	jp     0x40e038
  40e07d:	mov    ds:0xbae3d075,al
  40e082:	pop    eax
  40e083:	pop    eax
  40e084:	das    
  40e085:	retf   0x6fa
  40e088:	rcr    bh,0x11
  40e08b:	add    al,0x13
  40e08d:	aad    0x6f
  40e08f:	sbb    al,0xdf
  40e091:	imul   ecx,DWORD PTR [ecx+0x10],0x113d0ef7
  40e098:	push   cs
  40e099:	ins    DWORD PTR es:[edi],dx
  40e09a:	je     0x40e089
  40e09c:	push   0x9
  40e09e:	xlat   BYTE PTR ds:[ebx]
  40e09f:	call   0x918f:0x26e4642c
  40e0a6:	dec    eax
  40e0a7:	mov    BYTE PTR [eax],dh
  40e0a9:	dec    edi
  40e0aa:	cdq    
  40e0ab:	and    al,0x20
  40e0ad:	in     eax,0xf7
  40e0af:	inc    ecx
  40e0b0:	add    eax,0xeb671a10
  40e0b5:	es jne 0x40e0ea
  40e0b8:	dec    esp
  40e0b9:	es mov ah,0x0
  40e0bc:	push   ebp
  40e0bd:	push   edx
  40e0be:	lods   eax,DWORD PTR ds:[esi]
  40e0bf:	in     eax,dx
  40e0c0:	jge    0x40e0c9
  40e0c2:	sar    ah,0x4a
  40e0c5:	into   
  40e0c6:	mov    dh,0xea
  40e0c8:	fwait
  40e0c9:	push   cs
  40e0ca:	ror    DWORD PTR [ebx+0x4ed6562],0x19
  40e0d1:	push   eax
  40e0d2:	add    BYTE PTR [edx],0x7e
  40e0d5:	push   eax
  40e0d6:	jno    0x40e147
  40e0d8:	jg     0x40e0bd
  40e0da:	mov    ds:0x12df4958,al
  40e0df:	xchg   DWORD PTR [edi-0x17],ecx
  40e0e2:	sahf   
  40e0e3:	sub    BYTE PTR [edx],0xb6
  40e0e6:	inc    esi
  40e0e7:	mov    cl,BYTE PTR [edx-0x10]
  40e0ea:	pop    ecx
  40e0eb:	ins    BYTE PTR es:[edi],dx
  40e0ec:	mov    eax,ds:0xe91eb1f7
  40e0f1:	into   
  40e0f2:	arpl   WORD PTR [ecx+edi*1+0x4f3c787e],cx
  40e0f9:	rcl    BYTE PTR [eax-0x80],cl
  40e0fc:	scas   al,BYTE PTR es:[edi]
  40e0fd:	popf   
  40e0fe:	mov    dh,0x2a
  40e100:	pop    ss
  40e101:	inc    DWORD PTR [edi-0x2e2001f7]
  40e107:	rcl    DWORD PTR [eax-0x6b],0x1d
  40e10b:	scas   al,BYTE PTR es:[edi]
  40e10c:	inc    ebx
  40e10d:	jp     0x40e10d
  40e10f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e110:	(bad)  
  40e111:	int3   
  40e112:	cmp    BYTE PTR ds:0xa5ce3ecb,0xd0
  40e119:	popa   
  40e11a:	mov    ds:0x60d9deaf,eax
  40e11f:	shl    DWORD PTR [edx],cl
  40e121:	inc    ebx
  40e122:	fninit 
  40e124:	fdivr  QWORD PTR [edi+0x24]
  40e127:	das    
  40e128:	jp     0x40e17a
  40e12a:	or     al,0xc5
  40e12c:	inc    ebx
  40e12d:	les    ecx,FWORD PTR [ebx+0x2e]
  40e130:	pop    ecx
  40e131:	daa    
  40e132:	adc    al,0xcb
  40e134:	push   eax
  40e135:	mov    eax,0x66fda262
  40e13a:	fsubr  QWORD PTR [edi-0x69]
  40e13d:	xlat   BYTE PTR ds:[ebx]
  40e13e:	in     al,dx
  40e13f:	fsub   DWORD PTR [ecx+eiz*8+0x646d6f38]
  40e146:	lea    edi,[edx+edi*1]
  40e149:	lds    esp,FWORD PTR [edi]
  40e14b:	es pop ecx
  40e14d:	retf   0x5420
  40e150:	or     ecx,DWORD PTR [ecx+0x693c3ca8]
  40e156:	sub    ebp,DWORD PTR [eax+ebx*1+0x3dc7f2a6]
  40e15d:	jno    0x40e14e
  40e15f:	int    0xd8
  40e161:	inc    edi
  40e162:	aam    0xf5
  40e164:	jecxz  0x40e17f
  40e166:	mov    al,0x8e
  40e168:	stos   BYTE PTR es:[edi],al
  40e169:	fisttp DWORD PTR [edi+0x2d4f4f45]
  40e16f:	pusha  
  40e170:	or     eax,0xffffffc1
  40e173:	adc    al,0x96
  40e175:	and    esp,DWORD PTR [esi+0x24]
  40e178:	push   ss
  40e179:	adc    ebx,esp
  40e17b:	sbb    dl,bl
  40e17d:	mov    ds:0x1702dca6,eax
  40e182:	call   0x3d89829
  40e187:	add    DWORD PTR [ecx-0x11],esp
  40e18a:	mov    esp,0x31e8cb68
  40e18f:	pop    ss
  40e190:	cli    
  40e191:	push   cs
  40e192:	add    al,0x56
  40e194:	aad    0x2f
  40e196:	mul    ecx
  40e198:	enter  0x59f8,0xb
  40e19c:	stos   BYTE PTR es:[edi],al
  40e19d:	nop
  40e19e:	inc    edi
  40e19f:	in     al,0x87
  40e1a1:	cmp    ecx,DWORD PTR [eax-0x61058257]
  40e1a7:	ficomp WORD PTR [ecx-0x4f13a369]
  40e1ad:	xchg   bh,bh
  40e1af:	push   edx
  40e1b0:	dec    ecx
  40e1b1:	(bad)  
  40e1b2:	push   ecx
  40e1b3:	add    dh,BYTE PTR [esi*4-0x38ed8daf]
  40e1ba:	xlat   BYTE PTR ds:[ebx]
  40e1bb:	mov    ds:0x31bfe0ab,al
  40e1c0:	xchg   edx,eax
  40e1c1:	cmp    ebx,DWORD PTR [ebx+0x4cce2ab0]
  40e1c7:	(bad)  
  40e1c8:	mov    bh,0xe3
  40e1ca:	mov    ebx,0x2b9622f0
  40e1cf:	adc    ebp,esi
  40e1d1:	pop    esp
  40e1d2:	pop    edi
  40e1d3:	test   bh,ch
  40e1d5:	into   
  40e1d6:	mov    ecx,0x4a63547c
  40e1db:	fst    QWORD PTR [esp+eiz*2]
  40e1de:	push   cs
  40e1df:	test   DWORD PTR [eax],ecx
  40e1e1:	(bad)  
  40e1e2:	into   
  40e1e3:	mov    bl,0x34
  40e1e5:	sbb    al,ch
  40e1e7:	in     al,0xa6
  40e1e9:	xchg   BYTE PTR [ecx-0x27],ah
  40e1ec:	test   bl,dl
  40e1ee:	sub    esi,DWORD PTR [ebp-0x3654b417]
  40e1f4:	imul   esp,DWORD PTR [ebp+edi*1-0x68c746bf],0xfffffff3
  40e1fc:	iret   
  40e1fd:	add    DWORD PTR [edx+ebx*2+0x44],ebx
  40e201:	jl     0x40e278
  40e203:	cmp    esp,DWORD PTR [edx-0x938d1ef]
  40e209:	(bad)  
  40e20a:	mov    BYTE PTR [edi+0x25adf277],dh
  40e210:	jmp    0x40e278
  40e212:	shr    edx,cl
  40e214:	push   es
  40e215:	cmp    edx,DWORD PTR [edi-0x10]
  40e218:	push   ss
  40e219:	add    ecx,edi
  40e21b:	scas   eax,DWORD PTR es:[edi]
  40e21c:	mov    esi,0x1c3c602f
  40e221:	inc    esi
  40e222:	sahf   
  40e223:	fld    TBYTE PTR [eax+0x239487c6]
  40e229:	retf   0x6f38
  40e22c:	out    dx,eax
  40e22d:	sub    DWORD PTR [esi],eax
  40e22f:	leave  
  40e230:	cdq    
  40e231:	or     BYTE PTR [ecx+0x76],al
  40e234:	pusha  
  40e235:	jo     0x40e250
  40e237:	scas   eax,DWORD PTR es:[edi]
  40e238:	dec    DWORD PTR [ecx]
  40e23a:	xlat   BYTE PTR ds:[ebx]
  40e23b:	xor    eax,0xc8a91ae
  40e240:	mov    ch,0x9
  40e242:	add    esi,DWORD PTR [edx]
  40e244:	inc    edi
  40e245:	call   0x374a4ac2
  40e24a:	gs push eax
  40e24c:	push   ds
  40e24d:	push   edi
  40e24e:	push   esp
  40e24f:	push   ss
  40e250:	inc    edx
  40e251:	neg    esp
  40e253:	xchg   edx,eax
  40e254:	mov    dl,0x68
  40e256:	mov    dh,al
  40e258:	hlt    
  40e259:	shl    DWORD PTR [esi-0x20e253f7],cl
  40e25f:	jns    0x40e224
  40e261:	sbb    cl,BYTE PTR [ebp-0x23]
  40e264:	mov    ecx,0xa6468086
  40e269:	ss push ebx
  40e26b:	mov    bl,0x6a
  40e26d:	adc    bl,BYTE PTR [edi-0x61]
  40e270:	sbb    eax,0x52602a61
  40e275:	mov    al,ds:0x856acdad
  40e27a:	adc    BYTE PTR [eax+0x2e],ah
  40e27d:	cli    
  40e27e:	int3   
  40e27f:	or     eax,0xc49d1683
  40e284:	je     0x40e2d3
  40e286:	jge    0x40e25b
  40e288:	xor    eax,0x11ba6405
  40e28d:	pop    edx
  40e28e:	std    
  40e28f:	mov    ds:0xabbb4416,al
  40e294:	inc    ecx
  40e295:	test   al,0x6c
  40e297:	jecxz  0x40e266
  40e299:	inc    esp
  40e29a:	pushw  0x74b1
  40e29e:	pop    ebx
  40e29f:	jmp    0xdc6f:0x69bcb5f0
  40e2a6:	sar    BYTE PTR [ebx+edi*2],cl
  40e2a9:	imul   bl
  40e2ab:	sbb    edx,DWORD PTR [ecx-0x2f2256db]
  40e2b1:	mov    bl,0xeb
  40e2b3:	add    eax,DWORD PTR [ecx+0x68]
  40e2b6:	pop    ecx
  40e2b7:	mov    esi,DWORD PTR [ebp-0x73e4a1d4]
  40e2bd:	sub    bl,dh
  40e2bf:	popf   
  40e2c0:	fild   WORD PTR [ecx-0x74d29885]
  40e2c6:	(bad)  [edx+0x34]
  40e2c9:	shl    DWORD PTR [edi+0x47cf65dd],1
  40e2cf:	push   esp
  40e2d0:	into   
  40e2d1:	jns    0x40e2cd
  40e2d3:	mov    dl,0xcc
  40e2d5:	(bad)  
  40e2d6:	xchg   esp,eax
  40e2d7:	fnstcw WORD PTR [ebp+0x4c591ee7]
  40e2dd:	imul   esp,edx,0x9011bd91
  40e2e3:	xor    eax,0x56b7679a
  40e2e8:	jl     0x40e307
  40e2ea:	inc    edx
  40e2eb:	push   edi
  40e2ec:	fsub   DWORD PTR [ebx+0x3f72d30]
  40e2f2:	jnp    0x40e2ae
  40e2f4:	test   BYTE PTR [eax+0x53c19b43],ch
  40e2fa:	mov    edx,0x5e2e6b01
  40e2ff:	aas    
  40e300:	pop    ss
  40e301:	adc    BYTE PTR [ebp+0x3f],bh
  40e304:	nop
  40e305:	shl    BYTE PTR [edx-0x75808a1c],0xba
  40e30c:	arpl   WORD PTR [esi+ecx*2+0x4],sp
  40e310:	lahf   
  40e311:	clc    
  40e312:	mov    dl,0x52
  40e314:	or     esi,ebp
  40e316:	test   al,0x81
  40e318:	jns    0x40e35f
  40e31a:	jmp    0x40e322
  40e31c:	std    
  40e31d:	aad    0x86
  40e31f:	call   0xba72:0x9b976d9c
  40e326:	popf   
  40e327:	fs aad 0xb0
  40e32a:	xor    BYTE PTR [ecx],dh
  40e32c:	pusha  
  40e32d:	push   0xcfcab641
  40e332:	dec    eax
  40e333:	hlt    
  40e334:	cmp    eax,DWORD PTR [edx+0x8]
  40e337:	cld    
  40e338:	push   es
  40e339:	outs   dx,BYTE PTR ds:[esi]
  40e33a:	icebp  
  40e33b:	lods   al,BYTE PTR ds:[esi]
  40e33c:	gs lock adc al,0x70
  40e340:	jecxz  0x40e318
  40e342:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e343:	cmp    al,0x59
  40e345:	shl    BYTE PTR [eax+0x7e07b7e5],1
  40e34b:	je     0x40e387
  40e34d:	scas   al,BYTE PTR es:[edi]
  40e34e:	(bad)  
  40e34f:	int3   
  40e350:	loopne 0x40e30d
  40e352:	les    ecx,FWORD PTR [edi]
  40e354:	push   ss
  40e355:	push   0xb3879fd2
  40e35a:	dec    edi
  40e35b:	or     ah,bh
  40e35d:	in     al,0x1a
  40e35f:	lods   al,BYTE PTR ds:[esi]
  40e360:	pop    ebp
  40e361:	mov    ecx,?
  40e363:	mov    ch,BYTE PTR [eax+esi*1+0x6e4552e4]
  40e36a:	cmp    eax,0xd3998966
  40e36f:	mov    dh,0x69
  40e371:	pop    edx
  40e372:	ds (bad) 
  40e375:	xor    ah,al
  40e377:	rcr    DWORD PTR [ecx],cl
  40e379:	dec    eax
  40e37a:	jae    0x40e32f
  40e37c:	dec    edi
  40e37d:	in     eax,0xba
  40e37f:	adc    al,0x5
  40e381:	stc    
  40e382:	adc    al,0x43
  40e384:	xor    al,0x79
  40e386:	xlat   BYTE PTR ds:[ebx]
  40e387:	or     esi,DWORD PTR [ecx]
  40e389:	dec    ebp
  40e38a:	push   ebp
  40e38b:	or     al,0xad
  40e38d:	mov    eax,ds:0x10063aa6
  40e392:	cmp    BYTE PTR es:[edx-0x41],0xda
  40e397:	mov    ds:0xad387563,eax
  40e39c:	rcl    BYTE PTR gs:[eax-0xaa528d9],1
  40e3a3:	inc    ebp
  40e3a4:	enter  0x6ca4,0x2c
  40e3a8:	test   ch,al
  40e3aa:	push   ebx
  40e3ab:	add    eax,ecx
  40e3ad:	aas    
  40e3ae:	ja     0x40e3ed
  40e3b0:	jae    0x40e365
  40e3b2:	(bad)  
  40e3b3:	xchg   ecx,eax
  40e3b4:	fild   DWORD PTR [esi+0x3e39d87b]
  40e3ba:	pop    eax
  40e3bb:	(bad)  
  40e3bc:	sahf   
  40e3bd:	mov    ss,WORD PTR [ebp-0x33]
  40e3c0:	ret    
  40e3c1:	aam    0x7d
  40e3c3:	pushf  
  40e3c4:	inc    eax
  40e3c5:	push   ds
  40e3c6:	and    al,0xaa
  40e3c8:	push   esp
  40e3c9:	js     0x40e3dc
  40e3cb:	mov    esp,0x23e6a4cd
  40e3d0:	(bad)  
  40e3d1:	jb     0x40e428
  40e3d3:	xchg   ebx,eax
  40e3d4:	sub    al,0x35
  40e3d6:	jl     0x40e39f
  40e3d8:	and    BYTE PTR [ebx+0x2f4e7f27],0x72
  40e3df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3e0:	popa   
  40e3e1:	jp     0x40e3e9
  40e3e3:	cwde   
  40e3e4:	in     al,0x6b
  40e3e6:	outs   dx,DWORD PTR ds:[esi]
  40e3e7:	pop    ds
  40e3e8:	les    ecx,FWORD PTR [eax-0x340d0b4a]
  40e3ee:	pop    edi
  40e3ef:	imul   esp,ebp,0xffffffb8
  40e3f2:	fcmovnbe st,st(4)
  40e3f4:	scas   al,BYTE PTR es:[edi]
  40e3f5:	imul   eax,DWORD PTR [ebx+ebx*4],0xc00c0a45
  40e3fc:	mul    DWORD PTR [ebx+ebp*1-0x5]
  40e400:	jb     0x40e443
  40e402:	mov    bl,0xac
  40e404:	xchg   BYTE PTR [ecx-0xb],dh
  40e407:	mov    ?,ebp
  40e409:	jecxz  0x40e431
  40e40b:	mov    eax,ds:0x8a910375
  40e410:	inc    edx
  40e411:	inc    esp
  40e412:	add    edx,edi
  40e414:	cld    
  40e415:	xor    dl,ch
  40e417:	ds pop edx
  40e419:	pushf  
  40e41a:	fiadd  WORD PTR [ecx+0x52]
  40e41d:	push   0x33
  40e41f:	or     BYTE PTR [edi+esi*1],al
  40e422:	fsubr  st,st(1)
  40e424:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e425:	inc    esi
  40e426:	inc    eax
  40e427:	or     eax,0x516221d8
  40e42c:	inc    esi
  40e42d:	lock popf 
  40e42f:	loopne 0x40e432
  40e431:	or     BYTE PTR [ecx+0x7a],0xa2
  40e435:	mov    al,0x62
  40e437:	push   ebp
  40e438:	push   ebp
  40e439:	mov    edi,DWORD PTR [ecx+0x1b4986fd]
  40e43f:	xor    eax,0x9bb6f3e3
  40e444:	xor    esi,DWORD PTR [ecx]
  40e446:	adc    bl,cl
  40e448:	xchg   edi,esi
  40e44a:	pop    ds
  40e44b:	aam    0x13
  40e44d:	int    0x58
  40e44f:	aas    
  40e450:	cmp    eax,0x2917a8f7
  40e455:	retf   0x5475
  40e458:	shl    bl,0x59
  40e45b:	jp     0x40e451
  40e45d:	sub    ebp,DWORD PTR [ecx-0x444b04e4]
  40e463:	getsec 
  40e465:	test   eax,0x9655cf36
  40e46a:	jle    0x40e4e2
  40e46c:	(bad)  [eax-0x5]
  40e46f:	(bad)  
  40e470:	jmp    0x47e1:0x7a98c08b
  40e477:	mov    esi,0x549ca4ba
  40e47c:	xchg   esi,eax
  40e47d:	fsub   DWORD PTR [edi]
  40e47f:	neg    BYTE PTR ss:[edi+eiz*2]
  40e483:	cmp    eax,0x93d56682
  40e488:	(bad)  
  40e489:	aam    0x3
  40e48b:	and    DWORD PTR [esi+edi*8+0x75],eax
  40e48f:	std    
  40e490:	je     0x40e41e
  40e492:	push   ss
  40e493:	ds push ebp
  40e495:	das    
  40e496:	jle    0x40e471
  40e498:	mov    ebx,ds
  40e49a:	pusha  
  40e49b:	or     al,0x72
  40e49d:	retf   
  40e49e:	call   0x6a3a:0x2fb0ad4
  40e4a5:	repnz push cs
  40e4a7:	pop    ebp
  40e4a8:	push   ss
  40e4a9:	(bad)  
  40e4aa:	je     0x40e433
  40e4ac:	jl     0x40e49a
  40e4ae:	mov    dl,0x9d
  40e4b0:	xchg   esi,eax
  40e4b1:	fsub   QWORD PTR [edi-0xe]
  40e4b4:	sbb    edi,DWORD PTR [edi-0xa452257]
  40e4ba:	sub    cl,al
  40e4bc:	pop    esi
  40e4bd:	retf   
  40e4be:	rcl    edi,0x27
  40e4c1:	fwait
  40e4c2:	and    DWORD PTR [eax+eiz*8+0x651d395a],ecx
  40e4c9:	sbb    al,0xe0
  40e4cb:	clc    
  40e4cc:	xor    dh,BYTE PTR [esi+0x6c]
  40e4cf:	outs   dx,BYTE PTR ds:[esi]
  40e4d0:	pop    eax
  40e4d1:	inc    ebx
  40e4d2:	mov    ebp,0xc5ace5ee
  40e4d7:	cmp    dl,BYTE PTR [esi+0x159ed9f9]
  40e4dd:	retf   0xd138
  40e4e0:	mov    eax,0x43629904
  40e4e5:	xor    BYTE PTR [esi-0x2fa87d08],ah
  40e4eb:	push   esp
  40e4ec:	sbb    eax,0x8ba2d4dc
  40e4f1:	push   esi
  40e4f2:	cmp    esp,DWORD PTR [esi]
  40e4f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4f5:	sbb    al,BYTE PTR [ecx-0x6]
  40e4f8:	fimul  WORD PTR [ebx+0x76]
  40e4fb:	cmp    BYTE PTR [ecx],al
  40e4fd:	sub    al,0x7
  40e4ff:	(bad)  
  40e500:	fcom   QWORD PTR [eax-0x3c]
  40e503:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e504:	pop    es
  40e505:	jp     0x40e53f
  40e507:	and    al,0x57
  40e509:	mov    BYTE PTR [eax+0x3],dh
  40e50c:	push   edx
  40e50d:	icebp  
  40e50e:	std    
  40e50f:	aam    0x67
  40e511:	mov    BYTE PTR [eax],dh
  40e513:	aad    0xa2
  40e515:	sbb    ah,BYTE PTR [eax-0x71369733]
  40e51b:	test   eax,0x359ddc48
  40e520:	jnp    0x40e57a
  40e522:	jmp    0x40e51d
  40e524:	mov    edi,0x55e4cc8c
  40e529:	scas   eax,DWORD PTR es:[edi]
  40e52a:	pop    edi
  40e52b:	jno    0x40e503
  40e52d:	push   0x48
  40e52f:	push   edx
  40e530:	test   al,0xa4
  40e532:	dec    eax
  40e533:	test   eax,0xe107b28b
  40e538:	sti    
  40e539:	adc    cl,cl
  40e53b:	or     DWORD PTR [eax+0x2ca588be],ebp
  40e541:	push   ebx
  40e542:	lods   eax,DWORD PTR ds:[esi]
  40e543:	shl    ecx,1
  40e545:	stos   BYTE PTR es:[edi],al
  40e546:	(bad)  
  40e547:	xor    eax,0x76bde3a3
  40e54c:	das    
  40e54d:	adc    al,0x8c
  40e54f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e550:	and    BYTE PTR [eax-0x207beba],0x42
  40e557:	mov    esi,0xb085da47
  40e55c:	and    DWORD PTR [ebp-0x40],edx
  40e55f:	xchg   edi,eax
  40e560:	repz jle 0x40e57f
  40e563:	cmc    
  40e564:	cli    
  40e565:	mov    al,ds:0xf837551e
  40e56a:	add    eax,0x1e4a5267
  40e56f:	cli    
  40e570:	add    bl,bh
  40e572:	lods   eax,DWORD PTR ds:[esi]
  40e573:	or     eax,0x88f0ef0e
  40e578:	sbb    cl,BYTE PTR [ecx+0x10ab4fbf]
  40e57e:	jb     0x40e50a
  40e580:	lods   al,BYTE PTR ds:[esi]
  40e581:	jge    0x40e5c8
  40e583:	std    
  40e584:	pop    edi
  40e585:	push   esi
  40e586:	and    edx,DWORD PTR [eax]
  40e588:	sti    
  40e589:	jno    0x40e540
  40e58b:	mov    cl,0x37
  40e58d:	cmp    bl,bl
  40e58f:	xlat   BYTE PTR ds:[ebx]
  40e590:	mov    ds:0x7411b9ce,al
  40e595:	dec    ecx
  40e596:	push   eax
  40e597:	stc    
  40e598:	or     DWORD PTR [edx-0x397a147d],ecx
  40e59e:	aam    0x36
  40e5a0:	cs xor al,0x13
  40e5a4:	retf   0xe3b
  40e5a7:	cli    
  40e5a8:	push   edi
  40e5a9:	xor    BYTE PTR [edx],cl
  40e5ab:	cmp    eax,0x2f16f181
  40e5b0:	add    edx,eax
  40e5b2:	pop    eax
  40e5b3:	xchg   ebp,eax
  40e5b4:	jb     0x40e5bb
  40e5b6:	xchg   DWORD PTR [esi-0x548f001a],eax
  40e5bc:	rol    DWORD PTR [edi],cl
  40e5be:	push   cs
  40e5bf:	and    ebp,DWORD PTR [eax+ecx*8]
  40e5c2:	rol    BYTE PTR [ebp-0x10e0295e],cl
  40e5c8:	fnstcw WORD PTR [esi+0x3d47d591]
  40e5ce:	inc    esi
  40e5cf:	jecxz  0x40e5de
  40e5d1:	xor    bl,bl
  40e5d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5d4:	mov    ds:0x9c94a8c3,eax
  40e5d9:	rcr    BYTE PTR [ebx+0x18fa517c],cl
  40e5df:	jmp    0x40e5d6
  40e5e1:	test   DWORD PTR [edx+0x74badf1c],eax
  40e5e7:	adc    ebp,DWORD PTR [edx]
  40e5e9:	shr    DWORD PTR [ecx],cl
  40e5eb:	shl    DWORD PTR [ebp-0x73],cl
  40e5ee:	data16 scas al,BYTE PTR es:[edi]
  40e5f0:	push   es
  40e5f1:	(bad)  
  40e5f3:	(bad)  
  40e5f4:	xor    DWORD PTR [ecx-0x64],ebp
  40e5f7:	fsub   st,st(5)
  40e5f9:	xor    cl,BYTE PTR [ebx-0x57]
  40e5fc:	add    ch,0x4a
  40e5ff:	fidiv  WORD PTR [ebp-0x1a3664fd]
  40e605:	or     eax,0xc196da57
  40e60a:	(bad)  [esi+0x2c]
  40e60d:	sub    al,0x59
  40e60f:	jbe    0x40e5fd
  40e611:	test   DWORD PTR [edx],esp
  40e613:	cmp    esi,eax
  40e615:	nop
  40e616:	cmc    
  40e617:	and    eax,0xbdb04d29
  40e61c:	inc    esp
  40e61d:	dec    edi
  40e61e:	(bad)  
  40e61f:	dec    eax
  40e620:	ror    BYTE PTR [esi-0x6d426703],cl
  40e626:	mov    bl,0xfb
  40e628:	lock mov edx,0x15f0ed22
  40e62e:	mov    edx,0xbff82816
  40e633:	add    eax,DWORD PTR [ebx-0x57]
  40e636:	xor    BYTE PTR [eax+0x5a],0x82
  40e63a:	and    eax,DWORD PTR gs:[esi]
  40e63d:	xchg   ebx,eax
  40e63e:	dec    ebx
  40e63f:	imul   ebp,DWORD PTR [edx],0x2ef40539
  40e645:	frstor [eax-0x4e]
  40e648:	add    ah,ah
  40e64a:	dec    ebx
  40e64b:	outs   dx,BYTE PTR ds:[esi]
  40e64c:	push   eax
  40e64d:	mov    dh,0xf6
  40e64f:	or     DWORD PTR ss:[edx-0x50],0xffffffc8
  40e654:	dec    ebx
  40e655:	sbb    eax,0xacf0ab4d
  40e65a:	leave  
  40e65b:	or     DWORD PTR [esi],esp
  40e65d:	mov    edx,0xd552efad
  40e662:	dec    DWORD PTR [ebx]
  40e664:	push   edx
  40e665:	inc    ecx
  40e666:	repnz aas 
  40e668:	mov    al,BYTE PTR [edx-0x6e7605f3]
  40e66e:	adc    al,BYTE PTR [edi+0x25]
  40e671:	outs   dx,BYTE PTR ds:[esi]
  40e672:	inc    eax
  40e673:	in     al,0xab
  40e675:	and    edi,DWORD PTR [ebx+eax*8-0x43c5acd]
  40e67c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e67d:	push   eax
  40e67e:	cmp    eax,0x8928b6bf
  40e683:	xor    bl,BYTE PTR [eax+0x18278fe9]
  40e689:	inc    edx
  40e68a:	pop    ebp
  40e68b:	lock mov bl,0x33
  40e68e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e68f:	les    edx,FWORD PTR [esi-0x5d9ebba4]
  40e695:	pop    esp
  40e696:	inc    eax
  40e697:	mov    ecx,0xc82a2ae3
  40e69c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e69d:	scas   al,BYTE PTR es:[edi]
  40e69e:	add    al,0xba
  40e6a0:	lods   al,BYTE PTR ds:[esi]
  40e6a1:	sub    eax,0x98ab927f
  40e6a6:	and    esi,esi
  40e6a8:	fnstsw WORD PTR [ecx-0x59632df2]
  40e6ae:	jmp    0x9672:0x2c523526
  40e6b5:	cmp    dh,BYTE PTR [eax]
  40e6b7:	xor    BYTE PTR [edi-0x19d34fb3],0xbb
  40e6be:	adc    DWORD PTR [ebx+0x3acfae8],ebx
  40e6c4:	pop    eax
  40e6c5:	fwait
  40e6c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6c7:	outs   dx,DWORD PTR ds:[esi]
  40e6c8:	sysret 
  40e6ca:	pop    ebp
  40e6cb:	out    0xd0,eax
  40e6cd:	ins    BYTE PTR es:[edi],dx
  40e6ce:	and    al,BYTE PTR [eax+edi*2+0x6e9984b9]
  40e6d5:	dec    ecx
  40e6d6:	xchg   edi,eax
  40e6d7:	stos   BYTE PTR es:[edi],al
  40e6d8:	fucomp st(6)
  40e6da:	data16 cli 
  40e6dc:	jno    0x40e6b1
  40e6de:	xchg   edx,eax
  40e6df:	adc    DWORD PTR [edi+0x2028672b],eax
  40e6e5:	scas   eax,DWORD PTR es:[edi]
  40e6e6:	dec    esp
  40e6e7:	adc    BYTE PTR [ebp-0x78],ch
  40e6ea:	aad    0x5
  40e6ec:	in     eax,0xf9
  40e6ee:	mov    cs,WORD PTR [esi]
  40e6f0:	inc    eax
  40e6f1:	popf   
  40e6f2:	dec    ebx
  40e6f3:	cmp    al,al
  40e6f5:	(bad)  
  40e6f7:	lods   eax,DWORD PTR ds:[esi]
  40e6f8:	adc    DWORD PTR [esi+0x10],ebp
  40e6fb:	aaa    
  40e6fc:	imul   edx,DWORD PTR [ecx],0xdf164d29
  40e702:	jae    0x40e6bc
  40e704:	mov    al,0x32
  40e706:	dec    ebx
  40e707:	mov    bl,BYTE PTR [edx+0x0]
  40e70a:	push   ds
  40e70b:	mov    dh,0x0
  40e70d:	(bad)  
  40e70e:	add    cl,BYTE PTR [esi-0x3339055d]
  40e714:	loop   0x40e722
  40e716:	imul   ebx,DWORD PTR [ecx+edx*2+0xc1bf656],0x4c186238
  40e721:	add    BYTE PTR [edx-0x73],ch
  40e724:	dec    eax
  40e725:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e726:	retf   0x305d
  40e729:	mov    ds:0xad0968eb,eax
  40e72e:	fisubr WORD PTR [ebp-0x4a]
  40e731:	jmp    0x44d:0xbd1437f9
  40e738:	imul   BYTE PTR [ebx+0x5e690ad]
  40e73e:	daa    
  40e73f:	scas   al,BYTE PTR es:[edi]
  40e740:	repz mov dl,0x87
  40e743:	(bad)  
  40e745:	out    dx,eax
  40e746:	repnz fstp st(6)
  40e749:	jns    0x40e79a
  40e74b:	add    eax,DWORD PTR [esi-0x28]
  40e74e:	stos   DWORD PTR es:[edi],eax
  40e74f:	cmp    dl,bl
  40e751:	xor    DWORD PTR [edi+0x2e],ecx
  40e754:	in     eax,0xb2
  40e756:	out    0xc6,al
  40e758:	rcl    DWORD PTR [esi+0x47],1
  40e75b:	xchg   edi,eax
  40e75c:	loop   0x40e6e7
  40e75e:	xchg   ebp,eax
  40e75f:	scas   eax,DWORD PTR es:[edi]
  40e760:	adc    eax,0x4770e9ba
  40e765:	adc    BYTE PTR [eax+0x5d94796e],dh
  40e76b:	pop    ebx
  40e76c:	sub    al,0xfc
  40e76e:	cs sub al,0x15
  40e771:	pushf  
  40e772:	xor    esi,DWORD PTR [edi]
  40e774:	dec    eax
  40e775:	daa    
  40e776:	retf   0x9faa
  40e779:	(bad)
  40e77d:	push   edx
  40e77e:	test   DWORD PTR [esi],ebx
  40e780:	mov    al,ds:0x9ed7081f
  40e785:	ins    BYTE PTR es:[edi],dx
  40e786:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e787:	xchg   ebx,eax
  40e788:	jp     0x40e7ec
  40e78a:	mov    ebp,es
  40e78c:	push   cs
  40e78d:	add    dl,ah
  40e78f:	nop
  40e790:	in     eax,0x96
  40e792:	lods   al,BYTE PTR ds:[esi]
  40e793:	and    DWORD PTR [ebx],0x23
  40e796:	xchg   esp,eax
  40e797:	add    BYTE PTR [ecx],dl
  40e799:	add    BYTE PTR [edx],ah
  40e79b:	mov    ds:0xaa8b27a6,eax
  40e7a0:	cdq    
  40e7a1:	and    ah,ah
  40e7a3:	cmp    DWORD PTR ds:0xe4874d75,esp
  40e7a9:	or     DWORD PTR [edx+eax*1+0x18d159a],esp
  40e7b0:	les    esp,FWORD PTR [ecx+ebx*4-0x59]
  40e7b4:	into   
  40e7b5:	or     BYTE PTR [ebx-0x4391a27a],ch
  40e7bb:	pop    ebx
  40e7bc:	dec    ebx
  40e7bd:	xchg   ebp,eax
  40e7be:	(bad)  
  40e7bf:	sbb    dl,BYTE PTR [ecx]
  40e7c1:	xchg   BYTE PTR ds:0xa93b5a71,ah
  40e7c7:	scas   eax,DWORD PTR es:[edi]
  40e7c8:	mov    dh,0x64
  40e7ca:	push   esi
  40e7cb:	ret    
  40e7cc:	(bad)  
  40e7cd:	pushf  
  40e7ce:	loop   0x40e792
  40e7d0:	xor    al,0x3
  40e7d2:	sub    eax,0x7a6b524a
  40e7d7:	ror    esp,0x4
  40e7da:	mov    ah,0x9c
  40e7dc:	jge    0x40e76e
  40e7de:	bound  cx,DWORD PTR [edx]
  40e7e1:	fisttp DWORD PTR [edi-0x47]
  40e7e4:	imul   eax,DWORD PTR ds:[eax],0x34ff6ee9
  40e7eb:	addr16 push eax
  40e7ed:	ret    0x5d36
  40e7f0:	out    0x2,eax
  40e7f2:	push   esi
  40e7f3:	inc    ebx
  40e7f4:	(bad)  [esi-0xefb70ad]
  40e7fa:	retf   
  40e7fb:	iret   
  40e7fc:	dec    esp
  40e7fd:	xor    cl,BYTE PTR [esi-0x59]
  40e800:	cmp    BYTE PTR [edi+0x33],bl
  40e803:	shl    DWORD PTR [ecx],0xb
  40e806:	jp     0x40e7ef
  40e808:	or     eax,eax
  40e80a:	mov    ds:0x82020063,al
  40e80f:	jb     0x40e866
  40e811:	jae    0x40e86c
  40e813:	xchg   esi,eax
  40e814:	repnz retf 0xe338
  40e818:	fs sahf 
  40e81a:	mul    DWORD PTR [edx+0x48]
  40e81d:	test   BYTE PTR [esi-0x36],0xfe
  40e821:	and    eax,0x724aa8d2
  40e826:	mov    ecx,0x5378fe6
  40e82b:	fldenv [edi+0x32]
  40e82e:	gs pop edi
  40e830:	inc    eax
  40e831:	ja     0x40e877
  40e833:	(bad)  
  40e834:	repnz fild DWORD PTR [eax+0x63036707]
  40e83b:	xchg   DWORD PTR [ebx+edi*1-0x518a766d],esi
  40e842:	or     dh,BYTE PTR [edi-0x7]
  40e845:	call   0xc92e0977
  40e84a:	pop    ebp
  40e84b:	jp     0x40e8c6
  40e84d:	dec    esi
  40e84e:	call   0xb03c864d
  40e853:	jae    0x40e86d
  40e855:	scas   al,BYTE PTR es:[edi]
  40e856:	and    al,0x42
  40e858:	or     eax,0xb8b6a86b
  40e85d:	or     esi,DWORD PTR [ecx+ebp*8-0x14fddfee]
  40e864:	push   es
  40e865:	xor    al,0xd1
  40e867:	mov    edx,DWORD PTR [ebp-0x7dd80d0]
  40e86d:	push   ss
  40e86e:	cwde   
  40e86f:	cli    
  40e870:	push   0xf212288e
  40e875:	dec    esi
  40e876:	aad    0xa7
  40e878:	mov    ah,0x26
  40e87a:	hlt    
  40e87b:	xchg   ebp,eax
  40e87c:	or     al,0xf8
  40e87e:	js     0x40e834
  40e880:	lods   eax,DWORD PTR ds:[esi]
  40e881:	bound  cx,DWORD PTR [edi-0x106f4d29]
  40e888:	mov    ebx,0xcf3e9df3
  40e88d:	lods   eax,DWORD PTR ds:[esi]
  40e88e:	mov    DWORD PTR [esp+ebx*1],edx
  40e891:	xor    bl,ch
  40e893:	push   ebx
  40e894:	push   ebp
  40e895:	jle    0x40e8b7
  40e897:	sub    eax,0xf2b7a16a
  40e89c:	mov    dl,0x63
  40e89e:	inc    esp
  40e89f:	std    
  40e8a0:	inc    DWORD PTR [edx+0x5f7888f7]
  40e8a6:	mov    cl,0x43
  40e8a8:	sbb    DWORD PTR [ebp-0x7337179b],edi
  40e8ae:	rcr    dl,cl
  40e8b0:	daa    
  40e8b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8b2:	ins    DWORD PTR es:[edi],dx
  40e8b3:	add    eax,0x8231dd57
  40e8b8:	imul   ebp,DWORD PTR [eax+0x20],0xffffffaa
  40e8bc:	clc    
  40e8bd:	(bad)  
  40e8be:	xor    DWORD PTR [ebx-0x31865fd9],esi
  40e8c4:	ficomp DWORD PTR [ebx]
  40e8c6:	xor    bh,bh
  40e8c8:	dec    esp
  40e8c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8ca:	mov    esi,0x9a3696d9
  40e8cf:	jne    0x40e8fd
  40e8d1:	mov    ecx,0xe91504ba
  40e8d6:	add    esp,edi
  40e8d8:	pop    esp
  40e8d9:	sbb    DWORD PTR [edx+eiz*4+0x73],edx
  40e8dd:	pop    esi
  40e8de:	inc    esi
  40e8df:	mov    dl,0xf2
  40e8e1:	retf   
  40e8e2:	aad    0xbe
  40e8e4:	xchg   esi,eax
  40e8e5:	push   edx
  40e8e6:	fimul  WORD PTR [esi+0x3a5de31e]
  40e8ec:	in     al,0xf
  40e8ee:	xchg   ebx,eax
  40e8ef:	pop    ebx
  40e8f0:	aas    
  40e8f1:	adc    BYTE PTR [esi],bh
  40e8f3:	pop    esp
  40e8f4:	mov    bl,bh
  40e8f6:	pusha  
  40e8f7:	mov    ch,BYTE PTR [edi+0x619900e4]
  40e8fd:	mov    dh,0x8c
  40e8ff:	repnz add DWORD PTR [ebx+0x3c],ebx
  40e903:	data16 cmp al,0xf4
  40e906:	mov    ecx,0xf0a014a6
  40e90b:	xchg   edx,eax
  40e90c:	pop    ss
  40e90d:	xchg   edx,eax
  40e90e:	popf   
  40e90f:	aam    0x97
  40e911:	dec    esp
  40e912:	push   0xffffffa7
  40e914:	mov    bl,0xc4
  40e916:	sub    BYTE PTR [ecx+esi*1-0x14931afa],cl
  40e91d:	mov    al,BYTE PTR [edi+esi*2-0x65]
  40e921:	(bad)  
  40e923:	xor    eax,0x2f0e3c2d
  40e928:	(bad)  
  40e929:	xchg   esi,eax
  40e92a:	inc    ebx
  40e92b:	xor    eax,0x80b82272
  40e930:	cmp    al,0x43
  40e932:	es clc 
  40e934:	rcl    DWORD PTR [edx+0x6],1
  40e937:	lds    esi,FWORD PTR [esi+0x47]
  40e93a:	in     eax,dx
  40e93b:	inc    eax
  40e93c:	(bad)  
  40e93d:	xchg   esi,eax
  40e93e:	push   esp
  40e93f:	retf   
  40e940:	mov    dh,0x75
  40e942:	cld    
  40e943:	dec    esi
  40e944:	bound  edx,QWORD PTR [edx-0x3e]
  40e947:	cmc    
  40e948:	jg     0x40e98f
  40e94a:	data16 cmp ch,BYTE PTR [ebx]
  40e94d:	jmp    0x40e942
  40e94f:	mov    ds:0x6acc895d,eax
  40e954:	xchg   edx,eax
  40e955:	pop    edx
  40e956:	hlt    
  40e957:	(bad)
  40e95b:	(bad)  
  40e95c:	scas   eax,DWORD PTR es:[edi]
  40e95d:	mov    bl,0x33
  40e95f:	jg     0x40e905
  40e961:	std    
  40e962:	loopne 0x40e9d2
  40e964:	enter  0x3b40,0xa6
  40e968:	ret    0xc4c8
  40e96b:	or     bl,dh
  40e96d:	mov    ah,0x40
  40e96f:	mov    ch,0x18
  40e971:	leave  
  40e972:	mov    dl,0xb6
  40e974:	xor    al,0x5e
  40e976:	fyl2x  
  40e978:	push   esi
  40e979:	add    al,0xa5
  40e97b:	sbb    eax,0xdbfeab47
  40e980:	xchg   edi,eax
  40e981:	jns    0x40e9ec
  40e983:	xor    eax,0x10fe224e
  40e988:	push   ebp
  40e989:	in     eax,0xa8
  40e98b:	push   ebx
  40e98c:	mov    ah,0x8a
  40e98e:	push   0x50bb4123
  40e993:	mov    esi,0xf44880cd
  40e998:	loop   0x40e967
  40e99a:	mov    ch,dh
  40e99c:	pushw  0xfffa
  40e99f:	mov    ecx,0x3dc08eac
  40e9a4:	(bad)  
  40e9a6:	dec    esp
  40e9a7:	out    0x67,al
  40e9a9:	test   al,0x7c
  40e9ab:	loop   0x40e9e2
  40e9ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9ae:	mov    eax,ds:0x42c7924c
  40e9b3:	lods   al,BYTE PTR ds:[esi]
  40e9b4:	jecxz  0x40e9c6
  40e9b6:	mov    al,0x35
  40e9b8:	mov    al,0xd5
  40e9ba:	sub    eax,0xb9a01ff6
  40e9bf:	enter  0x6c05,0xfc
  40e9c3:	repz in eax,dx
  40e9c5:	push   0xd20ab2c3
  40e9ca:	fnstsw ax
  40e9cc:	dec    edx
  40e9cd:	jns    0x40e98e
  40e9cf:	sbb    ecx,DWORD PTR [edi]
  40e9d1:	pop    bp
  40e9d3:	cwde   
  40e9d4:	jl     0x40e965
  40e9d6:	sbb    eax,esi
  40e9d8:	lahf   
  40e9d9:	cli    
  40e9da:	cmp    edi,ecx
  40e9dc:	push   esi
  40e9dd:	and    al,BYTE PTR [edi-0x5d103b2c]
  40e9e3:	pop    ds
  40e9e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9e5:	jg     0x40ea58
  40e9e7:	xchg   bl,al
  40e9e9:	cwde   
  40e9ea:	xchg   ecx,eax
  40e9eb:	dec    edx
  40e9ec:	jns    0x40e9a8
  40e9ee:	cmp    ch,BYTE PTR [ebp+0xf]
  40e9f1:	cmp    bh,BYTE PTR [edx]
  40e9f3:	dec    esi
  40e9f4:	mov    bl,dh
  40e9f6:	(bad)  
  40e9f7:	daa    
  40e9f8:	push   ecx
  40e9f9:	or     al,al
  40e9fb:	inc    ebx
  40e9fc:	adc    DWORD PTR ds:0x95f376d4,esi
  40ea02:	inc    edx
  40ea03:	shl    DWORD PTR [ecx-0x63890d2],cl
  40ea09:	pop    ss
  40ea0a:	(bad)  
  40ea0b:	mov    edi,0xe95e117d
  40ea10:	loopne 0x40ea24
  40ea12:	xchg   esp,eax
  40ea13:	sub    BYTE PTR [ebp-0x5e78c0bb],al
  40ea19:	push   ebp
  40ea1a:	push   edi
  40ea1b:	or     ah,0xed
  40ea1e:	outs   dx,BYTE PTR ds:[esi]
  40ea1f:	frstor [edx-0x4d]
  40ea22:	loop   0x40ea3f
  40ea24:	pop    esp
  40ea25:	mov    DWORD PTR [edx-0x7c],eax
  40ea28:	dec    ebx
  40ea29:	or     dh,BYTE PTR ds:0x4bbc34d2
  40ea2f:	xor    bl,dl
  40ea31:	call   ebp
  40ea33:	imul   edx,DWORD PTR [edx+0x2dab5887],0x296c67fe
  40ea3d:	xchg   DWORD PTR [edx],eax
  40ea3f:	fdiv   st,st(6)
  40ea41:	(bad)  
  40ea42:	adc    dh,bl
  40ea44:	ds lahf 
  40ea46:	lahf   
  40ea47:	jns    0x40ea51
  40ea49:	push   ebp
  40ea4a:	mov    al,ds:0x59d83bad
  40ea4f:	loopne 0x40ea29
  40ea51:	push   0xdf82dd57
  40ea56:	pavgw  mm2,QWORD PTR [ebx+0xd]
  40ea5a:	lods   al,BYTE PTR ds:[esi]
  40ea5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea5c:	add    BYTE PTR [edx],al
  40ea5e:	mov    bh,0x10
  40ea60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea61:	cwde   
  40ea62:	test   ebp,ebx
  40ea64:	jl     0x40eaa2
  40ea66:	adc    BYTE PTR [ebx-0x4c],bh
  40ea69:	ins    DWORD PTR es:[edi],dx
  40ea6a:	push   0x75f1b3e6
  40ea6f:	xor    eax,0xdf1546b7
  40ea74:	nop
  40ea75:	pop    ecx
  40ea76:	jnp    0x40ea97
  40ea78:	dec    eax
  40ea79:	mov    DWORD PTR [esi],edi
  40ea7b:	nop
  40ea7c:	fisttp QWORD PTR [ebx-0x5e]
  40ea7f:	ret    0x6330
  40ea82:	sbb    ebp,0xe1dd68a5
  40ea88:	jbe    0x40ea2c
  40ea8a:	cli    
  40ea8b:	(bad)  [ebp+0x11]
  40ea8e:	cmp    bh,al
  40ea90:	xchg   ebx,eax
  40ea91:	xchg   edi,eax
  40ea92:	inc    esi
  40ea93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea94:	lods   eax,DWORD PTR ds:[esi]
  40ea95:	push   0xffffffc1
  40ea97:	inc    esi
  40ea98:	into   
  40ea99:	pop    es
  40ea9a:	xor    al,0xeb
  40ea9c:	(bad)  
  40ea9d:	jmp    0xb7a4:0xae750cc9
  40eaa4:	sub    bl,ch
  40eaa6:	xchg   edx,eax
  40eaa7:	idiv   DWORD PTR [esi]
  40eaa9:	shl    BYTE PTR [ecx],1
  40eaab:	pop    edx
  40eaac:	and    DWORD PTR [ebp+0x331be9ca],ebx
  40eab2:	mov    WORD PTR ds:0x38debc10,cs
  40eab8:	stc    
  40eab9:	jae    0x40ea4b
  40eabb:	push   cs
  40eabc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eabd:	sbb    al,0xae
  40eabf:	jne    0x40eae7
  40eac1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eac2:	ins    DWORD PTR es:[edi],dx
  40eac3:	into   
  40eac4:	mov    al,ds:0xf38201e0
  40eac9:	push   ecx
  40eaca:	xor    eax,DWORD PTR [ecx]
  40eacc:	dec    ebp
  40eacd:	add    al,0xf6
  40eacf:	mov    ebx,0x7e783ee5
  40ead4:	inc    esi
  40ead5:	test   al,0x88
  40ead7:	jb     0x40eb50
  40ead9:	ret    0x6c34
  40eadc:	call   0x75:0xd242227b
  40eae3:	ret    0x25de
  40eae6:	gs sub al,0xac
  40eae9:	or     ebp,DWORD PTR [edx-0x66d9502e]
  40eaef:	add    dh,BYTE PTR [ecx*1-0x3f1701bb]
  40eaf6:	(bad)  
  40eaf8:	or     DWORD PTR [edx+eax*1-0x57],eax
  40eafc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eafd:	cmp    BYTE PTR [edi],bl
  40eaff:	mov    dh,0xa9
  40eb01:	clc    
  40eb02:	mov    cl,0xa3
  40eb04:	loopne 0x40eb5b
  40eb06:	call   0x2be8a1a
  40eb0b:	addr16 ret 0xee26
  40eb0f:	sub    ch,bl
  40eb11:	jl     0x40eb68
  40eb13:	and    DWORD PTR [ecx-0x6b],esp
  40eb16:	das    
  40eb17:	not    DWORD PTR [ecx+0x62040d99]
  40eb1d:	push   edx
  40eb1e:	or     al,BYTE PTR [bx+si+0x5044]
  40eb23:	(bad)  
  40eb24:	(bad)  
  40eb25:	push   ss
  40eb26:	ja     0x40eb07
  40eb28:	stos   BYTE PTR es:[edi],al
  40eb29:	jnp    0x40eb88
  40eb2b:	aam    0xc1
  40eb2d:	jae    0x40eb86
  40eb2f:	mov    al,0xef
  40eb31:	dec    edi
  40eb32:	neg    edx
  40eb34:	sub    DWORD PTR [edx+0x3f],edi
  40eb37:	jge    0x40eaca
  40eb39:	pop    ds
  40eb3a:	jp     0x40eabe
  40eb3c:	psraw  mm7,QWORD PTR [eax-0x6ddbfe0d]
  40eb43:	mov    ebp,0x9f7b3e0b
  40eb48:	xor    eax,0x6b641aa8
  40eb4d:	aad    0x40
  40eb4f:	mov    al,ds:0xdb71393a
  40eb54:	adc    cl,BYTE PTR ds:0x4f17fbcf
  40eb5a:	cmp    ch,cl
  40eb5c:	shl    BYTE PTR [ecx],1
  40eb5e:	xor    esi,DWORD PTR ds:0xe42d1779
  40eb64:	pusha  
  40eb65:	xchg   esi,eax
  40eb66:	mov    DWORD PTR [esi],0x8c1d6595
  40eb6c:	mov    ds:0xb7437cda,eax
  40eb71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb72:	xor    al,0xc
  40eb74:	call   0xe13f6078
  40eb79:	push   esi
  40eb7b:	jmp    0x25e1:0x8202959f
  40eb82:	add    al,BYTE PTR [ebp+0x17]
  40eb85:	jnp    0x40eb5c
  40eb87:	aam    0xd4
  40eb89:	inc    ebx
  40eb8a:	(bad)  
  40eb8b:	xor    eax,ecx
  40eb8d:	sbb    BYTE PTR ds:0x132140ac,bh
  40eb93:	scas   al,BYTE PTR es:[edi]
  40eb94:	loop   0x40ebd3
  40eb96:	int    0x8c
  40eb98:	outs   dx,BYTE PTR ds:[esi]
  40eb99:	retf   0x2b65
  40eb9c:	aaa    
  40eb9d:	pop    esi
  40eb9e:	(bad)  [edx+0xe42c80]
  40eba4:	(bad)  
  40eba6:	cld    
  40eba7:	lahf   
  40eba8:	(bad)  
  40eba9:	mov    edx,0xa9eb5b46
  40ebae:	sahf   
  40ebaf:	mov    eax,ds:0xa655efbc
  40ebb4:	dec    edx
  40ebb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ebb6:	sbb    al,0xa1
  40ebb8:	sbb    al,0xf5
  40ebba:	mov    ebx,0xfc6472e
  40ebbf:	psubusb mm4,QWORD PTR [eax-0x75]
  40ebc3:	js     0x40ec3e
  40ebc5:	lods   al,BYTE PTR ds:[esi]
  40ebc6:	aad    0xcf
  40ebc8:	icebp  
  40ebc9:	jecxz  0x40eb97
  40ebcb:	clc    
  40ebcc:	or     ebp,ecx
  40ebce:	jp     0x40eba6
  40ebd0:	and    al,0xa6
  40ebd2:	out    dx,al
  40ebd3:	shl    BYTE PTR [ebx],1
  40ebd5:	pushf  
  40ebd6:	xor    edx,eax
  40ebd8:	enter  0x20a,0x1
  40ebdc:	cmc    
  40ebdd:	sar    ah,0xb2
  40ebe0:	push   ss
  40ebe1:	or     dl,BYTE PTR [ebp+0x454e9b82]
  40ebe7:	scas   eax,DWORD PTR es:[edi]
  40ebe8:	inc    ebp
  40ebe9:	dec    ebx
  40ebea:	out    0x69,eax
  40ebec:	pop    esp
  40ebed:	pop    edx
  40ebee:	jp     0x40eb89
  40ebf0:	int    0x1f
  40ebf2:	retf   0xac3f
  40ebf5:	jg     0x40ebfa
  40ebf7:	int3   
  40ebf8:	cld    
  40ebf9:	inc    esi
  40ebfa:	jge    0x40ebeb
  40ebfc:	in     eax,dx
  40ebfd:	push   ebx
  40ebfe:	mov    dh,0xd2
  40ec00:	enter  0x8c0f,0x20
  40ec04:	push   ecx
  40ec05:	ss mov dh,0x9d
  40ec08:	int3   
  40ec09:	in     eax,0xa1
  40ec0b:	inc    esi
  40ec0c:	and    ebp,0x1cf17a38
  40ec12:	xchg   ecx,eax
  40ec13:	daa    
  40ec14:	ds aas 
  40ec16:	into   
  40ec17:	mov    ds:0x41b3621b,al
  40ec1c:	or     eax,0xda1ae13c
  40ec21:	push   ss
  40ec22:	call   0xccd:0xe5d8b656
  40ec29:	or     al,0x2f
  40ec2b:	lock adc eax,0xd32ad0ee
  40ec31:	dec    ecx
  40ec32:	sti    
  40ec33:	push   esp
  40ec34:	lods   al,BYTE PTR ds:[esi]
  40ec35:	(bad)  
  40ec36:	and    ecx,DWORD PTR [esi+0x6b]
  40ec39:	iret   
  40ec3a:	cmp    eax,DWORD PTR [edi+0x8]
  40ec3d:	mov    es,eax
  40ec3f:	cmp    ebx,eax
  40ec41:	adc    edi,DWORD PTR [eax+0x56d2a5ea]
  40ec47:	pop    eax
  40ec48:	xor    al,0xbf
  40ec4a:	sub    dl,bl
  40ec4c:	ss push ds
  40ec4e:	xchg   edi,eax
  40ec4f:	mov    gs,WORD PTR ds:0xf810bf86
  40ec55:	xchg   ebx,eax
  40ec56:	push   ebx
  40ec57:	jno    0x3fa7d42b
  40ec5d:	test   eax,0xcd0a7b94
  40ec62:	add    bl,BYTE PTR [ebx]
  40ec64:	neg    bh
  40ec66:	xchg   ebx,eax
  40ec67:	arpl   WORD PTR [ebp-0x21],bp
  40ec6a:	mov    ds:0x7f04cd27,eax
  40ec6f:	fs or  al,0x60
  40ec72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec73:	daa    
  40ec74:	out    dx,al
  40ec75:	xor    al,0x8a
  40ec77:	ins    BYTE PTR es:[edi],dx
  40ec78:	xchg   bl,ah
  40ec7a:	ret    
  40ec7b:	dec    eax
  40ec7c:	jecxz  0x40ece9
  40ec7e:	nop
  40ec7f:	jnp    0x40ec6f
  40ec81:	xlat   BYTE PTR ds:[ebx]
  40ec82:	adc    BYTE PTR [ecx-0x32],al
  40ec85:	shl    DWORD PTR ds:0x5a9c4b81,0x47
  40ec8c:	sti    
  40ec8d:	out    dx,al
  40ec8e:	sub    ebx,DWORD PTR [ecx]
  40ec90:	cmp    al,0x53
  40ec92:	sbb    ah,BYTE PTR [ebp-0x2226771b]
  40ec98:	pop    esi
  40ec99:	popa   
  40ec9a:	push   eax
  40ec9b:	bound  eax,QWORD PTR [ecx-0x4bb8ce7e]
  40eca1:	jno    0x40ecda
  40eca3:	(bad)  
  40eca4:	fild   WORD PTR cs:[edx-0x3a9cde05]
  40ecab:	test   ebp,0xcc3c8f9e
  40ecb1:	jns    0x40ec6e
  40ecb3:	jns    0x40eccd
  40ecb5:	scas   al,BYTE PTR es:[edi]
  40ecb6:	jmp    0xf23c:0xdb4d834a
  40ecbd:	out    dx,eax
  40ecbe:	stc    
  40ecbf:	(bad)  
  40ecc0:	retf   
  40ecc1:	cwde   
  40ecc2:	scas   al,BYTE PTR es:[edi]
  40ecc3:	or     al,0x2c
  40ecc5:	pop    es
  40ecc6:	pop    esi
  40ecc7:	xchg   ecx,eax
  40ecc8:	or     ch,BYTE PTR [ecx]
  40ecca:	push   ecx
  40eccb:	je     0x40ecf6
  40eccd:	mov    ecx,0xe166e557
  40ecd2:	jnp    0x40ed2e
  40ecd4:	or     eax,0x3fcf5f3a
  40ecd9:	(bad)  
  40ecdb:	hlt    
  40ecdc:	fwait
  40ecdd:	pop    eax
  40ecde:	jge    0x40ec89
  40ece0:	inc    edx
  40ece1:	mov    ch,ah
  40ece3:	inc    bp
  40ece5:	adc    DWORD PTR [ecx+0x4f9146f5],eax
  40eceb:	mov    al,0xa0
  40eced:	xlat   BYTE PTR ds:[ebx]
  40ecee:	mov    ds:0x1f4dbf40,al
  40ecf3:	das    
  40ecf4:	shl    DWORD PTR [edi+0x78],0x75
  40ecf8:	mov    ds:0x638c4e59,eax
  40ecfd:	add    al,0xaf
  40ecff:	dec    esi
  40ed00:	cmc    
  40ed01:	mov    edx,0x129487d7
  40ed06:	sub    eax,0x131d859f
  40ed0b:	les    edi,FWORD PTR [ebp+0x2c011312]
  40ed11:	sahf   
  40ed12:	icebp  
  40ed13:	mov    esi,0xba66f737
  40ed18:	push   ss
  40ed19:	jmp    0xe353:0x32ae82fa
  40ed20:	imul   ebp,DWORD PTR [esi+esi*1],0x1a00731
  40ed27:	add    BYTE PTR [ebx],al
  40ed29:	cmp    BYTE PTR [edx],ah
  40ed2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed2c:	xor    al,0x5e
  40ed2e:	or     BYTE PTR [ebx+0x3],bh
  40ed31:	pop    esi
  40ed32:	dec    esp
  40ed33:	cmp    DWORD PTR [edx+0x52],esi
  40ed36:	in     al,0x9
  40ed38:	je     0x40ed6d
  40ed3a:	sub    al,BYTE PTR ds:0x3dfc2683
  40ed40:	fs retf 0xde1a
  40ed44:	shr    DWORD PTR [edi],0x71
  40ed47:	retf   
  40ed48:	sbb    edi,esi
  40ed4a:	add    DWORD PTR [edi-0x44],edx
  40ed4d:	les    esp,FWORD PTR [esi+0x9a63671]
  40ed53:	(bad)  
  40ed54:	aad    0x43
  40ed56:	jae    0x40edaa
  40ed58:	pop    ebp
  40ed59:	sub    ah,bh
  40ed5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed5c:	mov    ah,al
  40ed5e:	repz jnp 0x40edc2
  40ed61:	xchg   ebp,eax
  40ed62:	sub    bl,ch
  40ed64:	cmp    ebx,0x18
  40ed67:	jno    0x40edce
  40ed69:	mov    bl,0x9f
  40ed6b:	enter  0xf511,0xdf
  40ed6f:	and    al,0x3a
  40ed71:	loop   0x40ed2d
  40ed73:	sbb    al,0x1c
  40ed75:	ja     0x40ed2c
  40ed77:	lds    edx,FWORD PTR [ebx-0x9]
  40ed7a:	and    ah,BYTE PTR [eax+ebp*1]
  40ed7d:	cld    
  40ed7e:	pop    ss
  40ed7f:	mov    ebp,0x2900d942
  40ed84:	xchg   ebx,eax
  40ed85:	inc    edx
  40ed86:	js     0x40edd4
  40ed88:	repnz out 0x19,eax
  40ed8b:	getsec 
  40ed8d:	sbb    al,0x76
  40ed8f:	into   
  40ed90:	shl    BYTE PTR [eax-0x19],1
  40ed93:	int    0x67
  40ed95:	sub    edi,DWORD PTR [edi+0x308358b9]
  40ed9b:	ins    DWORD PTR es:[edi],dx
  40ed9c:	cwde   
  40ed9d:	pusha  
  40ed9e:	inc    ecx
  40ed9f:	loop   0x40eda1
  40eda1:	test   DWORD PTR [edi],0x3b889836
  40eda7:	inc    ebx
  40eda8:	into   
  40eda9:	addr16 leave 
  40edab:	retf   0xcf81
  40edae:	push   esp
  40edaf:	jg     0x40edc9
  40edb1:	add    BYTE PTR [esi],ah
  40edb3:	push   ds
  40edb4:	push   ds
  40edb5:	adc    bl,BYTE PTR [ecx+ebp*4]
  40edb8:	repz int 0xd4
  40edbb:	je     0x40ed54
  40edbd:	call   0xc225:0xc7e74366
  40edc4:	gs lock push ebx
  40edc7:	ret    0xe3a4
  40edca:	jge    0x40edae
  40edcc:	jp     0x40edad
  40edce:	aas    
  40edcf:	adc    eax,0xcd346d82
  40edd4:	or     al,0xc4
  40edd6:	or     al,0x5d
  40edd8:	jns    0x40ee23
  40edda:	lock movs BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40eddd:	pop    es
  40edde:	cwde   
  40eddf:	push   edx
  40ede0:	ds es (bad) 
  40ede3:	call   0x39e153f4
  40ede8:	cdq    
  40ede9:	push   ds
  40edea:	daa    
  40edeb:	stc    
  40edec:	pop    esi
  40eded:	jl     0x40ed97
  40edef:	test   DWORD PTR [ecx+eiz*1+0x50],edx
  40edf3:	xchg   esi,eax
  40edf4:	mov    eax,0xacb0b801
  40edf9:	cmp    DWORD PTR [edx],ecx
  40edfb:	inc    eax
  40edfc:	push   esi
  40edfd:	imul   DWORD PTR [esi]
  40edff:	sub    BYTE PTR ds:[esi],bh
  40ee02:	fdivr  DWORD PTR [esi-0x5e]
  40ee05:	cmp    al,0x7d
  40ee07:	and    edx,eax
  40ee09:	dec    edi
  40ee0a:	adc    DWORD PTR [edx-0x7dc58d7a],0xeecf40ef
  40ee14:	and    DWORD PTR [ecx-0x3e75773],esp
  40ee1a:	(bad)  
  40ee1c:	clc    
  40ee1d:	(bad)  
  40ee1e:	idiv   BYTE PTR [esi]
  40ee20:	test   BYTE PTR [ebp+0x4a8ea239],cl
  40ee26:	adc    al,0x76
  40ee28:	shr    bh,0xea
  40ee2b:	repz lock clc 
  40ee2e:	cmp    eax,0x6c4fc15
  40ee33:	inc    ebp
  40ee34:	add    al,0xbd
  40ee36:	xchg   ecx,eax
  40ee37:	add    DWORD PTR [edi],ebx
  40ee39:	push   ds
  40ee3a:	and    DWORD PTR [edx],esp
  40ee3c:	cs pushf 
  40ee3e:	add    al,0xb7
  40ee40:	dec    ebp
  40ee41:	sbb    ch,BYTE PTR [esi-0x56]
  40ee44:	add    eax,0xf963ddea
  40ee49:	(bad)  
  40ee4a:	cmp    al,0x8b
  40ee4c:	(bad)  
  40ee4d:	(bad)  
  40ee4e:	and    al,0x6e
  40ee50:	add    BYTE PTR [eax+0x21285085],dl
  40ee56:	leave  
  40ee57:	xchg   edi,eax
  40ee58:	pop    ss
  40ee59:	sub    eax,0xd7d76835
  40ee5e:	test   DWORD PTR [edi],0x6bc430f8
  40ee64:	inc    ebp
  40ee65:	jge    0x40ee8f
  40ee67:	adc    esp,ebp
  40ee69:	ja     0x40eeb3
  40ee6b:	fisub  WORD PTR ds:0x5e435941
  40ee71:	loop   0x40ee12
  40ee73:	sub    esp,ecx
  40ee75:	mov    ebp,0xed4040b6
  40ee7a:	int3   
  40ee7b:	mov    ah,dl
  40ee7d:	sbb    eax,0x30b7f4a6
  40ee82:	jns    0x40ee64
  40ee84:	or     DWORD PTR ds:0x516e5b98,esi
  40ee8a:	push   cs
  40ee8b:	mov    al,BYTE PTR [edx-0x2aa5038a]
  40ee91:	aad    0xbb
  40ee93:	adc    eax,0x353ec98d
  40ee98:	and    esp,eax
  40ee9a:	sti    
  40ee9b:	fisub  WORD PTR [esi-0xe]
  40ee9e:	imul   ecx,DWORD PTR [esi],0x5e854e09
  40eea4:	jns    0x40ef09
  40eea6:	sti    
  40eea7:	test   eax,0xc05440fa
  40eeac:	add    eax,0x3533da55
  40eeb1:	(bad)  
  40eeb2:	retf   0x2154
  40eeb5:	es gs pop esi
  40eeb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eeb9:	int    0xcd
  40eebb:	pushf  
  40eebc:	popa   
  40eebd:	int    0xf
  40eebf:	rcl    DWORD PTR [esi+0x31c9058b],cl
  40eec5:	xchg   DWORD PTR ds:0x2ac97149,edx
  40eecb:	inc    eax
  40eecc:	push   eax
  40eecd:	icebp  
  40eece:	pop    edi
  40eecf:	bound  edi,QWORD PTR [eax-0x5f]
  40eed2:	(bad)  
  40eed3:	or     DWORD PTR [eax],esp
  40eed5:	add    BYTE PTR [edx+eiz*4+0x64edda6a],dl
  40eedc:	xor    al,0x5a
  40eede:	aam    0xc1
  40eee0:	(bad)  
  40eee1:	clc    
  40eee2:	mov    ds:0x86d2e6d,al
  40eee7:	icebp  
  40eee8:	retf   0xaa64
  40eeeb:	add    eax,0x44d807ee
  40eef0:	test   al,0x8c
  40eef2:	fsub   st(6),st
  40eef4:	data16 scas al,BYTE PTR es:[edi]
  40eef6:	ds cmp al,0x0
  40eef9:	idiv   esp
  40eefb:	sar    DWORD PTR [ebx+0x15c7af91],cl
  40ef01:	jne    0x40ee8e
  40ef03:	jbe    0x40eee3
  40ef05:	mov    al,ds:0x8259203f
  40ef0a:	nop
  40ef0b:	dec    ecx
  40ef0c:	scas   eax,DWORD PTR es:[edi]
  40ef0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef0e:	pop    edi
  40ef0f:	or     BYTE PTR [edi-0x6b4157e5],bh
  40ef15:	cmp    BYTE PTR [ecx],ah
  40ef17:	mov    ebx,0x82404017
  40ef1c:	cdq    
  40ef1d:	mov    ?,WORD PTR [ebx]
  40ef1f:	jg     0x40ef89
  40ef21:	cli    
  40ef22:	fnstsw ax
  40ef24:	std    
  40ef25:	lds    ebp,FWORD PTR [esi+0x40]
  40ef28:	add    esp,DWORD PTR [ecx+0x2b]
  40ef2b:	enter  0x3077,0x75
  40ef2f:	adc    eax,0x1b9ea622
  40ef34:	mov    ds:0xbb56b12f,al
  40ef39:	sahf   
  40ef3a:	mov    ds:0x394c357,al
  40ef3f:	lods   eax,DWORD PTR ds:[esi]
  40ef40:	leave  
  40ef41:	jne    0x40eef9
  40ef43:	push   ecx
  40ef44:	adc    DWORD PTR [ebp+edx*8+0x11],edi
  40ef48:	push   ecx
  40ef49:	out    0x1b,al
  40ef4b:	nop
  40ef4c:	retf   0x3d46
  40ef4f:	imul   eax,DWORD PTR [esi+0x2b7470d2],0xffffffa7
  40ef56:	imul   ecx,DWORD PTR [edi-0x1c],0xffffffcb
  40ef5a:	jmp    0x4cdd0b20
  40ef5f:	lods   al,BYTE PTR ds:[esi]
  40ef60:	jl     0x40ef7b
  40ef62:	retf   0x1e9d
  40ef65:	add    ebp,esp
  40ef67:	(bad)  
  40ef68:	mov    WORD PTR [ebx+0x6],ss
  40ef6b:	ss je  0x40ef6e
  40ef6e:	push   ss
  40ef6f:	mov    edi,DWORD PTR [ebp-0x54]
  40ef72:	int    0x4c
  40ef74:	lods   al,BYTE PTR ds:[esi]
  40ef75:	lea    ecx,[esi]
  40ef77:	pusha  
  40ef78:	push   eax
  40ef79:	dec    ecx
  40ef7a:	xchg   ebx,eax
  40ef7b:	(bad)
  40ef7f:	(bad)
  40ef82:	lods   al,BYTE PTR ds:[esi]
  40ef83:	sbb    ch,BYTE PTR [edx-0x2dc9ce49]
  40ef89:	jp     0x40efbf
  40ef8b:	cmp    DWORD PTR [ebp*1+0x1c944799],edi
  40ef92:	ret    
  40ef93:	mov    ebx,edi
  40ef95:	daa    
  40ef96:	icebp  
  40ef97:	inc    ecx
  40ef98:	loope  0x40ef7d
  40ef9a:	mov    dh,0xf
  40ef9c:	push   es
  40ef9d:	stc    
  40ef9e:	or     ebx,ebx
  40efa0:	xchg   esi,eax
  40efa1:	add    esp,ebp
  40efa3:	push   ebp
  40efa4:	xlat   BYTE PTR ds:[ebx]
  40efa5:	fs add eax,0xaa2bd0d
  40efab:	mov    ebp,0x9806d010
  40efb0:	lea    ebp,[ecx-0x42]
  40efb3:	outs   dx,DWORD PTR ds:[esi]
  40efb4:	inc    ebx
  40efb5:	mov    ebx,0xba5eecfa
  40efba:	pop    ecx
  40efbb:	out    0x4c,eax
  40efbd:	add    cl,ch
  40efbf:	sar    BYTE PTR [edi],1
  40efc1:	jmp    0x206f:0x74a9a020
  40efc8:	xlat   BYTE PTR ds:[ebx]
  40efc9:	out    dx,al
  40efca:	mov    al,0x2d
  40efcc:	or     bl,dl
  40efce:	lahf   
  40efcf:	ss jbe 0x40ef81
  40efd2:	cmp    eax,0x5e83a96a
  40efd7:	adc    eax,eax
  40efd9:	xor    al,ch
  40efdb:	cmp    dh,dh
  40efdd:	daa    
  40efde:	sti    
  40efdf:	sbb    al,BYTE PTR [ebp-0x75]
  40efe2:	out    dx,eax
  40efe3:	lods   eax,DWORD PTR ds:[esi]
  40efe4:	xor    bh,BYTE PTR [ecx]
  40efe6:	inc    esp
  40efe7:	mov    ch,0x9b
  40efe9:	test   al,0x4b
  40efeb:	ffreep st(0)
  40efed:	jl     0x40f05a
  40efef:	std    
  40eff0:	inc    edi
  40eff1:	pop    ss
  40eff2:	jle    0x40f038
  40eff4:	jecxz  0x40ef8c
  40eff6:	mov    edx,0xb63c4a23
  40effb:	adc    al,0xd6
  40effd:	rcl    esi,cl
  40efff:	cmp    BYTE PTR fs:[esi],al
  40f002:	jae    0x40efc4
  40f004:	mov    al,0x55
  40f006:	jo     0x40f033
  40f008:	popa   
  40f009:	out    0xcd,al
  40f00b:	mov    edx,0xf0994fe9
  40f010:	xchg   ecx,eax
  40f011:	jae    0x40efee
  40f013:	enter  0x95ad,0x66
  40f017:	inc    eax
  40f018:	or     eax,0x49ce30bb
  40f01d:	push   cs
  40f01e:	lahf   
  40f01f:	arpl   WORD PTR ss:[edi-0x3b2829b9],sp
  40f026:	mov    al,0x7a
  40f028:	ins    DWORD PTR es:[edi],dx
  40f029:	xor    dl,BYTE PTR [edi]
  40f02b:	dec    eax
  40f02c:	stos   BYTE PTR es:[edi],al
  40f02d:	in     eax,dx
  40f02e:	push   ebx
  40f02f:	add    eax,0x192144e7
  40f034:	cmp    cl,BYTE PTR [esi+0x21]
  40f037:	cli    
  40f038:	sub    eax,0x5fecf031
  40f03d:	mov    al,ds:0xd943ede4
  40f042:	mov    edi,0xa201ea43
  40f047:	dec    ecx
  40f048:	mov    ah,0xb6
  40f04a:	inc    ebx
  40f04b:	jne    0x40f022
  40f04d:	icebp  
  40f04e:	push   0x62aba6c7
  40f053:	lods   eax,DWORD PTR ds:[esi]
  40f054:	mov    ch,0x9b
  40f056:	popf   
  40f057:	push   0xf1e5f3a0
  40f05c:	ret    
  40f05d:	(bad)  
  40f05e:	jge    0x40f083
  40f060:	push   ss
  40f061:	ss push edx
  40f063:	ret    0xd005
  40f066:	stos   BYTE PTR es:[edi],al
  40f067:	inc    eax
  40f068:	nop
  40f069:	sub    BYTE PTR [edx],dl
  40f06b:	retf   0x548d
  40f06e:	int    0x7a
  40f070:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f071:	test   cl,bh
  40f073:	out    dx,eax
  40f074:	mov    ebp,0x7676e40d
  40f079:	jnp    0x40f049
  40f07b:	ss dec edi
  40f07d:	inc    eax
  40f07e:	push   ss
  40f07f:	mov    dh,0xfc
  40f081:	mov    edi,0x9af06867
  40f086:	call   0x263147
  40f08b:	inc    esi
  40f08c:	retf   
  40f08d:	dec    ecx
  40f08e:	das    
  40f08f:	rol    DWORD PTR [esi+0x6c],0xde
  40f093:	jp     0x40f0cc
  40f095:	inc    edx
  40f096:	mov    ch,BYTE PTR [ebp-0x66f8e5e6]
  40f09c:	les    edx,FWORD PTR [esp+eax*8]
  40f09f:	imul   esi,DWORD PTR [esi+esi*4],0xffffffd2
  40f0a3:	mov    edx,0xe79f981b
  40f0a8:	mov    eax,ds:0x72a8b761
  40f0ad:	inc    edi
  40f0ae:	jle    0x40f088
  40f0b0:	push   cs
  40f0b1:	fcom   DWORD PTR [ecx+0x41]
  40f0b4:	and    al,0xe1
  40f0b6:	ins    BYTE PTR es:[edi],dx
  40f0b7:	mov    ch,0x23
  40f0b9:	jmp    0x7aba:0xf76bb0d4
  40f0c0:	jecxz  0x40f081
  40f0c2:	pop    ebp
  40f0c3:	sbb    eax,0x987b1f46
  40f0c8:	jp     0x40f104
  40f0ca:	mov    al,BYTE PTR [edi]
  40f0cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0cd:	push   ebp
  40f0ce:	xchg   edx,eax
  40f0cf:	inc    ebp
  40f0d0:	pop    es
  40f0d1:	or     al,0x87
  40f0d3:	ret    0xbbfe
  40f0d6:	or     bl,bh
  40f0d8:	and    al,0x49
  40f0da:	mov    eax,ds:0x43f21848
  40f0df:	aaa    
  40f0e0:	add    ebp,esi
  40f0e2:	push   esp
  40f0e3:	loopne 0x40f115
  40f0e5:	fsubr  QWORD PTR [ebp+0xa]
  40f0e8:	push   ecx
  40f0e9:	or     al,0x8d
  40f0eb:	dec    edi
  40f0ec:	xchg   edx,eax
  40f0ed:	cmp    DWORD PTR [edi-0x1bd4b7e],eax
  40f0f3:	imul   ebx,DWORD PTR [eax-0x77],0x3a26dd59
  40f0fa:	pop    esi
  40f0fb:	sar    BYTE PTR [edi+0x105fb473],1
  40f101:	push   ebp
  40f102:	add    al,0xb2
  40f104:	cmp    al,0x4f
  40f106:	pop    ebp
  40f107:	int3   
  40f108:	iret   
  40f109:	xchg   esi,eax
  40f10a:	mov    dh,0xb1
  40f10c:	xor    eax,0x464dd894
  40f111:	push   0xffffffd3
  40f113:	pusha  
  40f114:	and    eax,0xdbbeb83c
  40f119:	and    eax,0xe74b63b0
  40f11e:	stos   BYTE PTR es:[edi],al
  40f11f:	fs mov dh,0xd9
  40f122:	adc    DWORD PTR [eax],ebp
  40f124:	sbb    eax,0x2af9177
  40f129:	mov    edi,0xce34fe52
  40f12e:	test   BYTE PTR [eax+ebx*8],dl
  40f131:	int3   
  40f132:	int    0x8f
  40f134:	and    cl,BYTE PTR [ebx+edx*2-0x5c25d19c]
  40f13b:	sahf   
  40f13c:	int3   
  40f13d:	ja     0x40f144
  40f13f:	xor    DWORD PTR [edi-0x43],edx
  40f142:	pop    edx
  40f143:	fcomi  st,st(3)
  40f145:	jmp    0x40f161
  40f147:	out    0x21,eax
  40f149:	arpl   WORD PTR [edi-0x6f],dx
  40f14c:	lds    ebx,FWORD PTR [ecx-0x6c1d22cd]
  40f152:	ins    DWORD PTR es:[edi],dx
  40f153:	push   0x739b992b
  40f158:	xor    al,0x2d
  40f15a:	dec    ecx
  40f15b:	xchg   BYTE PTR [edx],ch
  40f15d:	aam    0xff
  40f15f:	aaa    
  40f160:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f162:	sbb    ecx,edi
  40f164:	mov    bh,0xbb
  40f166:	mov    cl,0xff
  40f168:	sbb    al,0x92
  40f16a:	adc    ch,ch
  40f16c:	mov    edi,0x739b0993
  40f171:	fmul   DWORD PTR [edx]
  40f173:	push   0x36
  40f175:	sbb    edx,ebp
  40f177:	add    al,BYTE PTR [eax+0x4a]
  40f17a:	and    DWORD PTR [edi],0xd89c88ba
  40f180:	xchg   edi,eax
  40f181:	scas   al,BYTE PTR es:[edi]
  40f182:	xor    esp,DWORD PTR [edi]
  40f184:	in     al,0xb7
  40f186:	mov    cl,0x7d
  40f188:	or     al,0x7
  40f18b:	data16 adc al,0x32
  40f18e:	mov    al,0x2e
  40f190:	xor    eax,0x56001ee7
  40f195:	fs stc 
  40f197:	lods   eax,DWORD PTR ds:[esi]
  40f198:	xor    BYTE PTR [eax+ecx*8-0x5d786eab],cl
  40f19f:	pushf  
  40f1a0:	lahf   
  40f1a1:	fsub   DWORD PTR [esi+0x797d1e93]
  40f1a7:	cmp    al,0xbd
  40f1a9:	outs   dx,BYTE PTR ds:[esi]
  40f1aa:	mov    bh,0x79
  40f1ac:	and    al,0x57
  40f1ae:	add    DWORD PTR [eax],esp
  40f1b0:	pop    ebp
  40f1b1:	in     al,dx
  40f1b2:	out    0x84,eax
  40f1b4:	pextrw edx,(bad),0xc5
  40f1b6:	adc    dl,bl
  40f1b8:	sub    DWORD PTR [ebx],ebp
  40f1ba:	jg     0x40f200
  40f1bc:	mov    ebx,0x2e2ee609
  40f1c1:	sbb    BYTE PTR [ebx],bl
  40f1c3:	ja     0x40f18c
  40f1c5:	inc    esp
  40f1c6:	jno    0x40f1ea
  40f1c8:	in     al,0xe1
  40f1ca:	shl    DWORD PTR [eax+0x21],0x4a
  40f1ce:	pop    esp
  40f1cf:	mov    edi,0xad1bf3e7
  40f1d4:	ror    DWORD PTR [eax+0x4e],1
  40f1d7:	cld    
  40f1d8:	cmc    
  40f1d9:	pop    ebp
  40f1da:	fsubp  st(6),st
  40f1dc:	lea    esp,[ecx+edi*8-0x47683525]
  40f1e3:	je     0x40f19e
  40f1e5:	xchg   esp,eax
  40f1e6:	ss pop edi
  40f1e8:	arpl   sp,di
  40f1ea:	(bad)  
  40f1eb:	aam    0x4d
  40f1ed:	sbb    DWORD PTR [ebp+0x543aabed],edi
  40f1f3:	jno    0x40f217
  40f1f5:	stos   BYTE PTR es:[edi],al
  40f1f6:	mov    ds:0xa0b73498,al
  40f1fb:	sbb    eax,0xb5b6d778
  40f200:	test   DWORD PTR [edx],ebp
  40f202:	xor    eax,0x3c08179a
  40f207:	aam    0x96
  40f209:	es in  eax,dx
  40f20b:	scas   eax,DWORD PTR es:[edi]
  40f20c:	pop    eax
  40f20d:	dec    ecx
  40f20e:	int    0x1f
  40f210:	aas    
  40f211:	sub    al,0x5e
  40f213:	sub    cl,bh
  40f215:	adc    DWORD PTR [ebp-0x11],0xb1844ca8
  40f21c:	lock loop 0x40f285
  40f21f:	xlat   BYTE PTR ds:[ebx]
  40f220:	out    0xa1,eax
  40f222:	adc    DWORD PTR [ebx+0x13],edi
  40f225:	xor    DWORD PTR [ecx+0x2d],0xbfcc58ce
  40f22c:	inc    eax
  40f22d:	mov    ss,WORD PTR [ecx]
  40f22f:	and    bh,0x25
  40f232:	dec    edi
  40f233:	inc    DWORD PTR [ecx]
  40f235:	pop    ebp
  40f236:	jecxz  0x40f246
  40f238:	fdivp  st(3),st
  40f23a:	jne    0x40f1ef
  40f23c:	and    bl,BYTE PTR [ecx-0x33616d36]
  40f242:	pop    eax
  40f243:	cs jl  0x40f243
  40f246:	dec    ebp
  40f247:	mov    eax,ds:0x3c06c97
  40f24c:	xchg   ecx,eax
  40f24d:	mov    eax,ds:0x11e5279d
  40f252:	std    
  40f253:	jo     0x40f20c
  40f255:	shl    DWORD PTR [edi+eax*1+0x38],cl
  40f259:	mov    WORD PTR [edi-0x2cbd3600],ds
  40f25f:	push   esp
  40f260:	out    0xa4,al
  40f262:	inc    esi
  40f263:	out    0xb5,eax
  40f265:	and    eax,0x36e71ad2
  40f26a:	jl     0x40f297
  40f26c:	mov    edi,0x73a3055f
  40f271:	fld    DWORD PTR [edx+0x2d]
  40f274:	ror    DWORD PTR [edx-0x2f],1
  40f277:	bswap  eax
  40f279:	sub    ebp,DWORD PTR [edx]
  40f27b:	push   edx
  40f27c:	fnsave ds:0xc1b0e318
  40f282:	mov    ds:0xcc6f1f03,eax
  40f287:	xor    al,0x5b
  40f289:	push   esp
  40f28a:	adc    DWORD PTR ds:0x2e3e9182,edx
  40f290:	out    dx,al
  40f291:	push   edx
  40f292:	sti    
  40f293:	inc    edx
  40f294:	cdq    
  40f295:	cld    
  40f296:	jle    0x40f2db
  40f298:	aam    0x75
  40f29a:	mov    cl,0x76
  40f29c:	xor    ch,dl
  40f29e:	adc    al,0xff
  40f2a0:	ss mov edx,0x52dc008a
  40f2a6:	and    dh,BYTE PTR [ecx+0x466b0f8c]
  40f2ac:	push   esi
  40f2ad:	sbb    eax,0xafabea2b
  40f2b2:	mov    DWORD PTR [ebp-0x3f],esi
  40f2b5:	and    al,0x9
  40f2b7:	(bad)  
  40f2b8:	xor    BYTE PTR [eax+0x773481d2],dh
  40f2be:	sbb    al,0xc
  40f2c0:	mov    dh,0x97
  40f2c2:	xor    cl,BYTE PTR [ebx]
  40f2c4:	pop    edx
  40f2c5:	mov    esi,0xa6e919e5
  40f2ca:	bound  esp,QWORD PTR [ebx-0x3a]
  40f2cd:	retf   
  40f2ce:	aam    0x53
  40f2d0:	mov    ds:0x88f7fbf3,al
  40f2d5:	push   es
  40f2d6:	sar    DWORD PTR [edi],1
  40f2d8:	pop    edi
  40f2d9:	pop    esp
  40f2db:	popf   
  40f2dc:	sub    BYTE PTR ds:0xf05d6ec6,bh
  40f2e2:	sub    al,BYTE PTR [eax+0x3a]
  40f2e5:	es into 
  40f2e7:	jle    0x40f2b4
  40f2e9:	xor    bl,bh
  40f2eb:	js     0x40f294
  40f2ed:	sub    BYTE PTR [edx],bl
  40f2ef:	popa   
  40f2f0:	inc    ebx
  40f2f1:	(bad)  
  40f2f3:	mov    es,WORD PTR [ebx]
  40f2f5:	fs xchg esp,eax
  40f2f7:	out    dx,al
  40f2f8:	xchg   edx,eax
  40f2f9:	and    al,0x7
  40f2fb:	fwait
  40f2fc:	idiv   eax
  40f2fe:	jle    0x40f289
  40f300:	aam    0x64
  40f302:	push   ss
  40f303:	mov    bl,0xf3
  40f305:	or     ah,cl
  40f307:	sbb    DWORD PTR gs:[edx],eax
  40f30a:	jns    0x40f2a1
  40f30c:	sti    
  40f30d:	idiv   BYTE PTR [eax]
  40f30f:	inc    edi
  40f310:	jns    0x40f34e
  40f312:	sahf   
  40f313:	cmp    DWORD PTR [ebp+eiz*2+0x1c3a1e94],0xffffff9e
  40f31b:	jl     0x40f2b5
  40f31d:	jmp    0xbc2:0x2d3a33e6
  40f324:	sbb    bl,BYTE PTR [ebp+0x3866a4d3]
  40f32a:	mov    ch,0x7e
  40f32c:	jmp    0x40f2d7
  40f32e:	xchg   esi,eax
  40f32f:	(bad)  
  40f330:	xor    BYTE PTR [edx-0x1f],bl
  40f333:	xor    esp,ecx
  40f335:	sub    ebp,DWORD PTR [ecx+0x1ddf3c2d]
  40f33b:	xor    dh,bl
  40f33d:	sti    
  40f33e:	popa   
  40f33f:	jmp    0x40f371
  40f341:	mov    eax,ds:0xe03569c2
  40f346:	inc    eax
  40f347:	pop    ds
  40f348:	mov    eax,0x2787b8e8
  40f34d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f34e:	call   0x8ffa5a98
  40f353:	push   cs
  40f354:	or     eax,0x489023bf
  40f359:	std    
  40f35a:	adc    ebx,DWORD PTR [ecx]
  40f35c:	xor    eax,0x9ef4e5e6
  40f361:	ret    0x286a
  40f364:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f365:	xchg   DWORD PTR [eax],esp
  40f367:	sub    ebp,DWORD PTR [edi+0xf81d2e4]
  40f36d:	xchg   ebp,eax
  40f36e:	and    al,0xb1
  40f370:	call   0x29ff433b
  40f375:	xor    dl,BYTE PTR [ecx]
  40f377:	cwde   
  40f378:	stos   DWORD PTR es:[di],eax
  40f37a:	mov    ds:0x3a116b7,eax
  40f37f:	scas   eax,DWORD PTR es:[edi]
  40f380:	mov    edi,0xef5b9172
  40f385:	and    bl,BYTE PTR [ecx-0x23654d47]
  40f38b:	sbb    al,bl
  40f38d:	ds jmp 0xb91:0x7e7393d1
  40f395:	loop   0x40f363
  40f397:	out    dx,al
  40f398:	jns    0x40f345
  40f39a:	popf   
  40f39b:	mov    dh,0x84
  40f39d:	imul   esp,DWORD PTR ds:[ebp-0x553ef240],0x18
  40f3a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3a6:	xchg   ecx,eax
  40f3a7:	nop
  40f3a8:	dec    eax
  40f3a9:	idiv   BYTE PTR [edi+0x5e]
  40f3ac:	dec    ebp
  40f3ad:	add    DWORD PTR [esi],ebx
  40f3af:	add    edx,ebx
  40f3b1:	ds in  eax,dx
  40f3b3:	pop    ebp
  40f3b4:	je     0x40f38e
  40f3b6:	sbb    ch,BYTE PTR [esi+0x12]
  40f3b9:	sbb    BYTE PTR [ebp-0x5a],al
  40f3bc:	add    eax,DWORD PTR [ebx+0x6054fd84]
  40f3c2:	(bad)  
  40f3c3:	and    al,0x8f
  40f3c5:	addr16 fwait
  40f3c7:	push   0x64
  40f3c9:	xor    BYTE PTR [ebx-0x42],ch
  40f3cc:	std    
  40f3cd:	xchg   esp,eax
  40f3ce:	push   eax
  40f3cf:	xchg   ebp,eax
  40f3d0:	push   eax
  40f3d1:	jmp    0xe04b7f62
  40f3d6:	test   eax,esi
  40f3d8:	pop    eax
  40f3d9:	loop   0x40f3c0
  40f3db:	jns    0x40f406
  40f3dd:	ret    0x3c4f
  40f3e0:	adc    bh,bl
  40f3e2:	inc    eax
  40f3e3:	and    DWORD PTR [edx-0x5f],edx
  40f3e6:	inc    BYTE PTR [ecx+0x37]
  40f3e9:	test   al,0x25
  40f3eb:	dec    eax
  40f3ec:	aas    
  40f3ed:	push   0x37
  40f3ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3f0:	cmp    DWORD PTR [ebp-0x5c],0xb68b0de5
  40f3f7:	adc    eax,0xc1cd9373
  40f3fc:	cmp    al,0x2e
  40f3fe:	jno    0x40f46d
  40f400:	ret    
  40f401:	out    dx,al
  40f402:	sub    dh,BYTE PTR ds:0xc086db19
  40f408:	nop
  40f409:	jl     0x40f3d7
  40f40b:	dec    ebp
  40f40c:	push   0x915073e8
  40f411:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f412:	je     0x40f470
  40f414:	mov    ds:0xc1f270a3,al
  40f419:	xchg   edi,eax
  40f41a:	xchg   edi,eax
  40f41b:	jg     0x40f3d8
  40f41d:	pushf  
  40f41e:	add    BYTE PTR [edi+0x5f63fa18],0xb
  40f425:	xor    ebx,eax
  40f427:	pop    ds
  40f428:	pop    ds
  40f429:	mov    ds:0x127265d6,al
  40f42e:	pop    edi
  40f42f:	ret    0xdf09
  40f432:	lds    edi,FWORD PTR [eax+ebp*1]
  40f435:	inc    edx
  40f436:	xchg   edx,eax
  40f437:	bound  esi,QWORD PTR [ecx]
  40f439:	pop    ebx
  40f43a:	sub    BYTE PTR [esp+edi*8],0x95
  40f43e:	ret    0x903b
  40f441:	jle    0x40f4a7
  40f443:	mov    al,ds:0xdc2875d5
  40f448:	retf   
  40f449:	les    esp,FWORD PTR [edx]
  40f44b:	dec    edi
  40f44c:	mov    WORD PTR [bx+di-0x11],es
  40f450:	les    eax,FWORD PTR [eax-0x6c26c6b1]
  40f456:	push   es
  40f457:	sub    cl,0xb8
  40f45a:	js     0x40f414
  40f45c:	xchg   ebp,eax
  40f45d:	pop    es
  40f45e:	mov    WORD PTR [eax-0x2297041d],?
  40f464:	bound  esp,QWORD PTR [ecx]
  40f466:	fbstp  TBYTE PTR [edi+0x34450742]
  40f46c:	or     al,0xe
  40f46e:	fisubr WORD PTR [ebx+0x77]
  40f471:	addr16 jge 0x40f412
  40f474:	dec    edx
  40f475:	sti    
  40f476:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f477:	mov    bl,0xce
  40f479:	mov    BYTE PTR [edx+0x51a32602],ch
  40f47f:	lahf   
  40f480:	aam    0xa8
  40f482:	dec    esp
  40f483:	(bad)  
  40f484:	xchg   BYTE PTR [esi+edx*2-0x386cda0f],bl
  40f48b:	ja     0x40f490
  40f48d:	pop    ecx
  40f48e:	mov    dh,0x83
  40f490:	lea    esi,[ebx+ebp*1+0x63cfdc33]
  40f497:	(bad)  
  40f498:	cmp    al,0x88
  40f49a:	push   0x7722928d
  40f49f:	mov    ebp,0xcd550916
  40f4a4:	lahf   
  40f4a5:	add    DWORD PTR [ecx],esi
  40f4a7:	jp     0x40f4cf
  40f4a9:	jp     0x40f43d
  40f4ab:	daa    
  40f4ac:	jmp    0x996a8df0
  40f4b1:	pop    esi
  40f4b2:	cmp    al,0x6b
  40f4b4:	into   
  40f4b5:	mov    ds,WORD PTR [eax]
  40f4b7:	ins    BYTE PTR es:[edi],dx
  40f4b8:	dec    edi
  40f4b9:	sbb    ebx,DWORD PTR [esi-0x2]
  40f4bc:	jb     0x40f53c
  40f4be:	inc    edi
  40f4bf:	mov    BYTE PTR [edi],bh
  40f4c1:	mov    bl,0xba
  40f4c3:	repnz xchg edi,ebp
  40f4c6:	pusha  
  40f4c7:	test   al,0x3f
  40f4c9:	imul   eax,DWORD PTR [esp+ebx*1],0xd4615615
  40f4d0:	out    dx,eax
  40f4d1:	in     eax,dx
  40f4d2:	in     al,dx
  40f4d3:	lods   eax,DWORD PTR ds:[esi]
  40f4d4:	(bad)  
  40f4d5:	xlat   BYTE PTR ds:[ebx]
  40f4d6:	(bad)  
  40f4d7:	dec    edx
  40f4d8:	or     eax,0x2ddd2d0f
  40f4dd:	lods   al,BYTE PTR ds:[esi]
  40f4de:	shl    esi,0x58
  40f4e1:	dec    edx
  40f4e2:	dec    ah
  40f4e4:	fld    TBYTE PTR [ebp+0xf]
  40f4e7:	jno    0x40f4e1
  40f4e9:	or     edx,edx
  40f4eb:	vmwrite esp,DWORD PTR es:[edx]
  40f4ef:	sar    DWORD PTR [ecx-0x7c],0xb0
  40f4f3:	test   al,0xfa
  40f4f5:	lods   al,BYTE PTR ds:[esi]
  40f4f6:	mov    al,ds:0xb39042ff
  40f4fb:	imul   edi,DWORD PTR [ecx+0x1cc5dcb6],0x14
  40f502:	cmp    BYTE PTR [ebp+eiz*4+0x7],bh
  40f506:	add    al,ah
  40f508:	xor    edi,esp
  40f50a:	mov    ah,0x2f
  40f50c:	repz jmp 0xe440:0xcee3dcf2
  40f514:	or     dh,dl
  40f516:	push   esp
  40f517:	(bad)  
  40f518:	movd   mm3,DWORD PTR [ebx+0x5a]
  40f51c:	ret    
  40f51d:	test   ch,ch
  40f51f:	push   0xb
  40f521:	mov    dh,0xe4
  40f523:	mov    DWORD PTR [eax-0x66d17adc],edi
  40f529:	lods   al,BYTE PTR ds:[esi]
  40f52a:	cmp    BYTE PTR [edi+ebx*8-0x7f],al
  40f52e:	into   
  40f52f:	xchg   eax,esi
  40f531:	pop    edx
  40f532:	cld    
  40f533:	xor    esi,DWORD PTR [ebx]
  40f535:	mov    esp,0xbf0516aa
  40f53a:	xchg   edx,eax
  40f53b:	lds    edi,FWORD PTR [eax+0x5d]
  40f53e:	jmp    0xdde4:0xfe8e86f9
  40f545:	sar    ah,1
  40f547:	and    BYTE PTR [esi],ah
  40f549:	jmp    0x40f595
  40f54b:	dec    ebx
  40f54c:	scas   al,BYTE PTR es:[edi]
  40f54d:	xchg   esi,eax
  40f54e:	inc    eax
  40f54f:	mov    al,ds:0x556a8228
  40f554:	sbb    ecx,0x2dfc644c
  40f55a:	ret    0x9c7e
  40f55d:	jl     0x40f53d
  40f55f:	dec    ecx
  40f560:	add    esi,DWORD PTR [edi+0x6]
  40f563:	mov    eax,0x883505a3
  40f568:	xor    al,0x9a
  40f56a:	ja     0x40f59a
  40f56c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f56d:	stc    
  40f56e:	fist   WORD PTR [edi-0x25]
  40f571:	and    edi,DWORD PTR [edx-0x5d]
  40f574:	ret    0xbe8c
  40f577:	mov    ?,ebp
  40f579:	sub    bh,cl
  40f57b:	xor    DWORD PTR [edx+0x2d8ba2b2],edi
  40f581:	fstp   DWORD PTR [edi-0x3a]
  40f584:	mov    ds:0x113c4921,eax
  40f589:	mov    fs,WORD PTR [ecx+0x24978128]
  40f58f:	and    DWORD PTR gs:[edi+0x767b0a35],ecx
  40f596:	pop    ecx
  40f597:	sub    ch,0x59
  40f59a:	in     al,dx
  40f59b:	push   edi
  40f59c:	cld    
  40f59d:	in     al,dx
  40f59e:	and    ch,BYTE PTR [edx-0x40]
  40f5a1:	push   0x7a65a80e
  40f5a6:	outs   dx,BYTE PTR ds:[esi]
  40f5a7:	outs   dx,DWORD PTR ds:[esi]
  40f5a8:	and    DWORD PTR [ebx+0x2c1de222],0x2aeb5655
  40f5b2:	shl    DWORD PTR [eax],cl
  40f5b4:	push   es
  40f5b5:	pop    ecx
  40f5b6:	aas    
  40f5b7:	dec    esp
  40f5b8:	sub    al,0xdb
  40f5ba:	sahf   
  40f5bb:	and    ah,BYTE PTR [edi+0x6e136798]
  40f5c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f5c2:	lea    esi,[esi+0x7]
  40f5c5:	jg     0x40f5a3
  40f5c7:	pop    edi
  40f5c8:	and    DWORD PTR [ebx+edx*8-0x610c9024],ecx
  40f5cf:	ret    
  40f5d0:	sub    eax,0x6f7211f7
  40f5d5:	or     DWORD PTR [ecx+esi*4],edx
  40f5d8:	ret    
  40f5d9:	add    DWORD PTR [edx],esp
  40f5db:	mov    ch,0xa2
  40f5dd:	and    DWORD PTR [ebx+0x2d],esp
  40f5e0:	mov    ebp,0x76efb53a
  40f5e5:	cs pop esp
  40f5e7:	ins    DWORD PTR es:[edi],dx
  40f5e8:	mov    eax,0x12e2ad2c
  40f5ed:	mov    al,0x75
  40f5ef:	inc    ebp
  40f5f0:	sbb    BYTE PTR [ebp+0x3e],0xf5
  40f5f4:	or     bl,BYTE PTR [ebx+0x6c]
  40f5f7:	ss pop edi
  40f5f9:	fsubr  st,st(6)
  40f5fb:	adc    BYTE PTR [ecx],dh
  40f5fd:	rcr    BYTE PTR [edi+0x57],1
  40f600:	dec    esp
  40f601:	in     eax,0x12
  40f603:	cld    
  40f604:	sbb    eax,0x93a0cf2b
  40f609:	retf   0x326e
  40f60c:	sahf   
  40f60d:	cdq    
  40f60e:	push   esi
  40f60f:	sti    
  40f610:	dec    ebp
  40f611:	push   cs
  40f612:	mov    esp,0xbf440319
  40f617:	outs   dx,BYTE PTR ds:[esi]
  40f618:	dec    edi
  40f619:	inc    edx
  40f61a:	cld    
  40f61b:	and    bl,BYTE PTR [edx]
  40f61d:	push   0xcc4bb62d
  40f622:	mov    bh,0x4
  40f624:	push   esi
  40f625:	inc    esi
  40f626:	fs cwde 
  40f628:	sbb    ch,0x30
  40f62b:	add    BYTE PTR [ecx-0x29],bh
  40f62e:	cwde   
  40f62f:	(bad)  
  40f630:	mov    ch,0x8
  40f632:	and    bh,BYTE PTR [edx]
  40f634:	in     eax,dx
  40f635:	dec    edi
  40f636:	push   ebx
  40f637:	dec    edx
  40f638:	call   0x3046a94a
  40f63d:	sub    BYTE PTR [esp+eiz*4],0x93
  40f641:	(bad)  
  40f642:	cmc    
  40f643:	sbb    ah,BYTE PTR [esp]
  40f646:	popa   
  40f647:	inc    esi
  40f648:	lahf   
  40f649:	stc    
  40f64a:	and    esp,DWORD PTR ds:0x6158007
  40f650:	(bad)  
  40f651:	pop    ebx
  40f652:	push   ds
  40f653:	div    DWORD PTR [edx-0x40]
  40f656:	sbb    esp,DWORD PTR [ecx]
  40f658:	add    BYTE PTR [esi-0x171acf68],ah
  40f65e:	sbb    BYTE PTR [ecx],bl
  40f660:	jnp    0x40f5e7
  40f662:	into   
  40f663:	mov    ecx,0x24dc1010
  40f668:	push   ecx
  40f669:	sbb    al,0x3
  40f66b:	mov    edx,0x7d6e235c
  40f670:	jg     0x40f650
  40f672:	sbb    DWORD PTR [eax],edx
  40f674:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f675:	sahf   
  40f676:	arpl   WORD PTR [edi],bx
  40f678:	out    dx,eax
  40f679:	and    DWORD PTR [edi+esi*2-0x76],edx
  40f67d:	data16 or dl,cl
  40f680:	dec    esi
  40f681:	inc    esi
  40f682:	in     al,dx
  40f683:	mov    edi,0x55d50f4
  40f688:	jl     0x40f6e1
  40f68a:	loope  0x40f612
  40f68c:	sti    
  40f68d:	and    DWORD PTR [ebp-0xe70282f],edi
  40f693:	stos   DWORD PTR es:[edi],eax
  40f694:	das    
  40f695:	in     eax,dx
  40f696:	ror    BYTE PTR [ebx],1
  40f698:	rol    BYTE PTR [eax],0x93
  40f69b:	js     0x40f6e3
  40f69d:	ins    BYTE PTR es:[edi],dx
  40f69e:	jb     0x40f64b
  40f6a0:	mov    ds:0xfeb7424b,al
  40f6a5:	xor    ebp,DWORD PTR [ecx]
  40f6a7:	(bad)  
  40f6aa:	or     al,0x2c
  40f6ac:	hlt    
  40f6ad:	rcr    DWORD PTR [edx-0x35],0x70
  40f6b1:	push   0xad9dd762
  40f6b6:	or     DWORD PTR [eax+0x756f794a],esp
  40f6bc:	adc    ch,BYTE PTR [esi-0x33]
  40f6bf:	loop   0x40f73d
  40f6c1:	adc    eax,0x90803237
  40f6c6:	in     al,0x2b
  40f6c8:	lea    esi,[esi-0x67]
  40f6cb:	out    dx,al
  40f6cc:	dec    esp
  40f6cd:	dec    esi
  40f6ce:	and    DWORD PTR ds:0xb605c11,esp
  40f6d4:	push   ecx
  40f6d5:	and    DWORD PTR [ebx+0x1518ddf9],edi
  40f6db:	adc    dl,bl
  40f6dd:	and    DWORD PTR gs:[ecx],0x63
  40f6e1:	fimul  DWORD PTR [ebx-0x7b]
  40f6e4:	pop    esp
  40f6e5:	mov    dl,0x9d
  40f6e7:	pushf  
  40f6e8:	or     bh,BYTE PTR [ebx-0xd7facbd]
  40f6ee:	test   eax,0x73b929c3
  40f6f3:	sub    dl,bl
  40f6f5:	ins    BYTE PTR es:[edi],dx
  40f6f6:	mov    ds,ebp
  40f6f8:	int3   
  40f6f9:	test   DWORD PTR [edi+0x8],edx
  40f6fc:	inc    esi
  40f6fd:	add    ah,BYTE PTR [esi]
  40f6ff:	inc    ebp
  40f700:	cmp    eax,0xf3db9faf
  40f705:	sbb    al,0x29
  40f707:	pop    ebx
  40f708:	sar    DWORD PTR [esi+0x19a56c3a],0x59
  40f70f:	sbb    eax,0xe245d035
  40f714:	or     eax,0x9d5d8da1
  40f719:	mov    ebx,0x25113fc2
  40f71e:	inc    esi
  40f71f:	xor    esi,esi
  40f721:	div    DWORD PTR [edi+ebp*4-0x50]
  40f725:	or     eax,0x8df47a36
  40f72a:	push   ds
  40f72b:	add    esp,esp
  40f72d:	and    al,0xad
  40f72f:	adc    DWORD PTR [edi*8-0x5a50114d],edx
  40f736:	sbb    ebx,esp
  40f738:	stc    
  40f739:	ss stos BYTE PTR es:[edi],al
  40f73b:	mov    bh,0xc
  40f73d:	xchg   edi,eax
  40f73e:	addr16 out dx,eax
  40f740:	push   eax
  40f741:	mov    edx,0x5a17a5ba
  40f746:	cmc    
  40f747:	mov    ecx,0x62709aa4
  40f74c:	and    ch,bl
  40f74e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f74f:	aad    0xc1
  40f751:	hlt    
  40f752:	scas   al,BYTE PTR es:[edi]
  40f753:	out    dx,al
  40f754:	mov    esp,0xba64aa57
  40f759:	pusha  
  40f75a:	dec    ebp
  40f75b:	(bad)  
  40f75c:	pop    eax
  40f75d:	dec    eax
  40f75e:	sub    edx,ebx
  40f760:	fcomip st,st(5)
  40f762:	xor    edi,DWORD PTR [ebx-0x77]
  40f765:	push   eax
  40f766:	stos   DWORD PTR es:[edi],eax
  40f767:	or     DWORD PTR [ecx+0x632bc395],eax
  40f76d:	std    
  40f76e:	inc    edx
  40f76f:	xlat   BYTE PTR ds:[ebx]
  40f770:	pop    edi
  40f771:	or     edx,esp
  40f773:	sti    
  40f774:	adc    BYTE PTR [ebp-0x3be99569],bl
  40f77a:	cs repz clc 
  40f77d:	ja     0x40f711
  40f77f:	popf   
  40f780:	hlt    
  40f781:	ins    DWORD PTR es:[edi],dx
  40f782:	ret    0xa475
  40f785:	inc    edi
  40f786:	js     0x40f7b9
  40f788:	sbb    al,0x14
  40f78a:	clc    
  40f78b:	and    esp,DWORD PTR [ebx+0x6a6fbc66]
  40f791:	mov    ds:0x181ab766,al
  40f796:	push   esi
  40f797:	jmp    0x548645bd
  40f79c:	addr16 push ss
  40f79e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f79f:	pop    ebx
  40f7a0:	push   es
  40f7a1:	imul   edx,DWORD PTR [esi],0xf25143da
  40f7a7:	sub    edx,edi
  40f7a9:	adc    esi,ecx
  40f7ab:	stos   DWORD PTR es:[edi],eax
  40f7ac:	jmp    0xfde7d945
  40f7b1:	mov    bh,0xc9
  40f7b4:	mov    esi,0x845c7dc1
  40f7b9:	sbb    dh,BYTE PTR [edi]
  40f7bb:	addr16 push ebp
  40f7bd:	std    
  40f7be:	cmp    ecx,DWORD PTR [edi*8+0x56843148]
  40f7c5:	jmp    0x40f761
  40f7c7:	fs dec edx
  40f7c9:	add    DWORD PTR [eax+0x7e779d6b],esi
  40f7cf:	jmp    0x2df47ead
  40f7d4:	jl     0x40f7bb
  40f7d6:	lahf   
  40f7d7:	sbb    edx,DWORD PTR [ebx-0x5f]
  40f7da:	and    ch,BYTE PTR [eax]
  40f7dc:	dec    ecx
  40f7dd:	retf   
  40f7de:	mov    es,WORD PTR [edi-0x5b]
  40f7e1:	pop    esi
  40f7e2:	jmp    0x40f7d2
  40f7e4:	adc    eax,0x49d1c971
  40f7e9:	ins    BYTE PTR es:[edi],dx
  40f7ea:	(bad)  
  40f7eb:	mov    edi,0x8c5a3828
  40f7f0:	in     al,dx
  40f7f1:	loop   0x40f820
  40f7f3:	sub    eax,0xbbc7c83d
  40f7f8:	rcl    ecx,cl
  40f7fa:	sub    ebx,ebp
  40f7fc:	mov    ebx,0xb4b29cc2
  40f801:	xchg   ecx,eax
  40f802:	test   DWORD PTR [edx],0x53a009b8
  40f808:	rcl    DWORD PTR [esi-0x2f],1
  40f80b:	cmc    
  40f80c:	scas   eax,DWORD PTR es:[edi]
  40f80d:	jo     0x40f798
  40f80f:	scas   eax,DWORD PTR es:[edi]
  40f810:	xchg   ebp,eax
  40f811:	hlt    
  40f812:	not    BYTE PTR ds:0xb71fd19d
  40f818:	pop    eax
  40f819:	das    
  40f81a:	ffree  st(7)
  40f81c:	mov    ch,0x21
  40f81e:	(bad)  
  40f81f:	cmp    eax,0xed3cfab5
  40f824:	rol    DWORD PTR [esp+edx*1+0x63],0x64
  40f829:	out    dx,al
  40f82a:	inc    esi
  40f82b:	push   ds
  40f82c:	inc    ebx
  40f82d:	xchg   ebp,eax
  40f82e:	adc    eax,0xbd03e97e
  40f833:	arpl   WORD PTR [esi+0x5a18d389],di
  40f839:	int3   
  40f83a:	ds aad 0x99
  40f83d:	fs syscall 
  40f840:	mov    ds:0x96be7e57,eax
  40f845:	ror    bl,0xc0
  40f848:	jmp    0x40f838
  40f84a:	rcl    ebx,cl
  40f84c:	stos   DWORD PTR es:[edi],eax
  40f84d:	and    esp,0x3ed360d6
  40f853:	mov    al,0x20
  40f855:	mov    DWORD PTR [ebx+0x36],ecx
  40f858:	pop    es
  40f859:	mov    dh,0xf0
  40f85b:	cmp    BYTE PTR [edi+ebx*8],dh
  40f85e:	clc    
  40f85f:	xchg   ecx,eax
  40f860:	dec    ebp
  40f861:	lock push esp
  40f863:	test   BYTE PTR [eax],0x11
  40f866:	xor    bl,BYTE PTR [ebx-0x6150b235]
  40f86c:	out    0x3e,al
  40f86e:	arpl   cx,dx
  40f870:	inc    ecx
  40f871:	xor    al,0x73
  40f873:	mov    edx,0x87935a6e
  40f878:	and    edx,DWORD PTR [edi]
  40f87a:	or     bh,dh
  40f87c:	cs ins BYTE PTR es:[edi],dx
  40f87e:	or     eax,0x846be60f
  40f883:	inc    ebp
  40f884:	imul   ebp,DWORD PTR [edx],0x4e68c0b2
  40f88a:	jg     0x40f889
  40f88c:	add    al,0xd0
  40f88e:	jmp    0x4ca4:0x5209f46
  40f895:	and    al,0x97
  40f897:	xchg   ebx,eax
  40f898:	and    BYTE PTR [ecx+esi*4+0x59],ch
  40f89c:	add    DWORD PTR [esi+0x47],ebp
  40f89f:	sub    cl,BYTE PTR [eax]
  40f8a1:	ja     0x40f832
  40f8a3:	adc    DWORD PTR [edx],0xaf281b90
  40f8a9:	sahf   
  40f8aa:	or     al,0xf2
  40f8ac:	dec    ecx
  40f8ad:	fidiv  WORD PTR [esi+0x7bbfce11]
  40f8b3:	mov    esp,0xc8ee699c
  40f8b8:	jp     0x40f904
  40f8ba:	add    bh,bl
  40f8bc:	and    al,0xbf
  40f8be:	adc    DWORD PTR [ecx],ecx
  40f8c0:	xor    BYTE PTR [ebp-0x110ce472],ch
  40f8c6:	cmp    dh,BYTE PTR [edx]
  40f8c8:	sahf   
  40f8c9:	mov    ecx,0xfa24b10f
  40f8ce:	je     0x40f916
  40f8d0:	and    BYTE PTR [edx+0x53],al
  40f8d3:	pop    ss
  40f8d4:	aam    0xd5
  40f8d6:	xchg   ecx,eax
  40f8d7:	scas   eax,DWORD PTR es:[edi]
  40f8d8:	into   
  40f8d9:	xor    BYTE PTR [edi+eax*4-0x1becaf3b],al
  40f8e0:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40f8e2:	dec    esp
  40f8e3:	jp     0x40f919
  40f8e5:	xchg   edi,eax
  40f8e6:	cli    
  40f8e7:	or     al,0xb7
  40f8e9:	push   ds
  40f8ea:	dec    edi
  40f8eb:	call   0xd28b:0x43081666
  40f8f2:	repz xor BYTE PTR [ebx],ah
  40f8f5:	and    DWORD PTR [edi-0x118c09d1],0xd68535ca
  40f8ff:	push   esp
  40f900:	sahf   
  40f901:	call   0x11f6e37a
  40f906:	jbe    0x40f978
  40f908:	lods   al,BYTE PTR ds:[esi]
  40f909:	ja     0x40f983
  40f90b:	pop    ss
  40f90c:	idiv   edi
  40f90e:	repnz fstp DWORD PTR [ebx-0x32]
  40f912:	out    0xab,al
  40f914:	push   ecx
  40f915:	es push ebp
  40f917:	lods   al,BYTE PTR ds:[esi]
  40f918:	inc    edx
  40f919:	les    ebx,FWORD PTR [ecx+0x2069161b]
  40f91f:	cmc    
  40f920:	fcomp  QWORD PTR [edi-0x53559584]
  40f926:	adc    al,0xa2
  40f928:	cmp    BYTE PTR [edi+esi*1],dh
  40f92b:	push   0x64cd815d
  40f930:	mov    ebp,0x46a4569c
  40f935:	jno    0x40f9a3
  40f937:	ror    DWORD PTR [esi],0x98
  40f93a:	mov    esi,0x2dcade07
  40f93f:	retf   
  40f940:	add    ebx,esp
  40f942:	ret    0xd380
  40f945:	mov    cl,0x17
  40f947:	jecxz  0x40f99d
  40f949:	test   al,0xe4
  40f94b:	push   0x54
  40f94d:	fs jle 0x40f985
  40f950:	leave  
  40f951:	cwde   
  40f952:	mov    BYTE PTR [ebx],ch
  40f954:	inc    ebx
  40f955:	fs idiv ch
  40f958:	inc    esp
  40f959:	adc    eax,0x37e98417
  40f95e:	iret   
  40f95f:	sub    eax,0x178ea62f
  40f964:	out    dx,al
  40f965:	test   DWORD PTR [ebp-0x1f1acc59],esi
  40f96b:	push   ss
  40f96c:	loop   0x40f8f2
  40f96e:	loopne 0x40f9dd
  40f970:	imul   edx,DWORD PTR [ecx+0x6d],0xf76c0913
  40f977:	adc    ch,BYTE PTR [edx-0x70]
  40f97a:	push   0x2147f74d
  40f97f:	into   
  40f980:	cmp    bl,bl
  40f982:	inc    eax
  40f983:	ffree  st(2)
  40f985:	shr    DWORD PTR [ecx-0x20],1
  40f988:	loop   0x40f9d5
  40f98a:	imul   DWORD PTR [esi+0x2b]
  40f98d:	gs add eax,0xc5f4a706
  40f993:	xor    DWORD PTR [eax-0x6f562814],0xffffffac
  40f99a:	popa   
  40f99b:	or     esi,DWORD PTR [ebx]
  40f99d:	mov    esp,0xaf42f142
  40f9a2:	and    al,0x78
  40f9a4:	sar    ch,cl
  40f9a6:	sbb    edx,ebp
  40f9a8:	add    bl,BYTE PTR [esi+0x2e]
  40f9ab:	(bad)  
  40f9ac:	addr16 lock inc ebx
  40f9af:	ins    DWORD PTR es:[edi],dx
  40f9b0:	out    0xfa,eax
  40f9b2:	xchg   ebp,eax
  40f9b3:	dec    edx
  40f9b4:	fsubr  QWORD PTR [edi]
  40f9b6:	and    eax,0xb39e8750
  40f9bb:	inc    eax
  40f9bc:	xchg   esi,eax
  40f9bd:	fisttp QWORD PTR [ecx]
  40f9bf:	mov    ebx,0x433aad28
  40f9c4:	int    0xfe
  40f9c6:	loopne 0x40fa37
  40f9c8:	(bad)  
  40f9c9:	in     eax,dx
  40f9ca:	pusha  
  40f9cb:	jl     0x40f998
  40f9cd:	push   eax
  40f9ce:	xchg   BYTE PTR [esi],ah
  40f9d0:	psubd  mm2,QWORD PTR [ecx+0x4939f5ac]
  40f9d7:	fs xchg edi,eax
  40f9d9:	nop
  40f9da:	sbb    esi,DWORD PTR [edx+0x31]
  40f9dd:	(bad)  
  40f9de:	ins    DWORD PTR es:[edi],dx
  40f9df:	sbb    BYTE PTR [esi-0xc],bh
  40f9e2:	jecxz  0x40f9be
  40f9e4:	fs jnp 0x40f9e4
  40f9e7:	inc    eax
  40f9e8:	fdivrp st(6),st
  40f9ea:	xchg   esp,eax
  40f9eb:	cdq    
  40f9ec:	popa   
  40f9ed:	or     eax,0xda770d53
  40f9f2:	xor    DWORD PTR [ebp-0x7e],0x888bfc2d
  40f9f9:	in     al,0x9d
  40f9fb:	fadd   DWORD PTR [ecx-0x58]
  40f9fe:	aad    0xa4
  40fa00:	push   ss
  40fa01:	inc    edx
  40fa02:	sti    
  40fa03:	idiv   DWORD PTR [edi+0x42]
  40fa06:	aad    0xcd
  40fa08:	inc    ecx
  40fa09:	and    esp,DWORD PTR [edi]
  40fa0b:	repz int 0x42
  40fa0e:	std    
  40fa0f:	pop    ss
  40fa10:	adc    dl,BYTE PTR [edx+0x293b9c4e]
  40fa16:	and    DWORD PTR [esi-0x43cddd6c],esi
  40fa1c:	sbb    edi,ebp
  40fa1e:	xchg   edi,eax
  40fa1f:	(bad)  
  40fa20:	loopne 0x40fa6e
  40fa22:	add    esi,DWORD PTR [esi+0x54]
  40fa25:	or     al,0x5e
  40fa27:	add    edi,edx
  40fa29:	dec    ebx
  40fa2a:	xor    al,0xe6
  40fa2c:	xchg   DWORD PTR [edi+0x37c7f870],eax
  40fa32:	inc    ecx
  40fa33:	inc    edi
  40fa34:	(bad)  
  40fa35:	push   eax
  40fa36:	inc    edx
  40fa37:	jo     0x40f9ea
  40fa39:	cmp    al,BYTE PTR [eax]
  40fa3b:	xchg   ecx,eax
  40fa3c:	xchg   BYTE PTR [ecx],ch
  40fa3e:	dec    ecx
  40fa3f:	add    ebx,ebx
  40fa41:	fs and ah,dh
  40fa44:	js     0x40fa4c
  40fa46:	push   edx
  40fa47:	daa    
  40fa48:	test   DWORD PTR [ecx],ecx
  40fa4a:	mov    bh,0xd1
  40fa4c:	and    BYTE PTR [edi+ebp*4-0x4a14b984],0x55
  40fa54:	out    dx,al
  40fa55:	mov    ebx,0xe597e387
  40fa5a:	jo     0x40fad6
  40fa5c:	mov    edi,0x92b0599f
  40fa61:	imul   ecx,DWORD PTR [eax],0x2c
  40fa64:	jmp    0x40fabe
  40fa66:	cmp    DWORD PTR [edi+0x79],eax
  40fa69:	add    ah,0xcd
  40fa6c:	xor    cl,al
  40fa6e:	dec    edx
  40fa6f:	jno    0x40fa4c
  40fa71:	retf   
  40fa72:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40fa74:	aad    0x43
  40fa76:	enter  0x3219,0x5e
  40fa7a:	push   es
  40fa7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa7c:	jmp    0x40fa64
  40fa7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa7f:	pop    es
  40fa80:	xchg   DWORD PTR [ebx-0x58cd627e],eax
  40fa86:	mov    cl,0xfb
  40fa88:	pop    DWORD PTR [eax+0x62]
  40fa8b:	pop    ds
  40fa8c:	pop    edi
  40fa8d:	scas   eax,DWORD PTR es:[edi]
  40fa8e:	cld    
  40fa8f:	shl    DWORD PTR [ecx+eax*8-0x44],cl
  40fa93:	sbb    eax,0x41b1fa8a
  40fa98:	push   ecx
  40fa99:	adc    esp,DWORD PTR [eax+0x11541e6a]
  40fa9f:	mov    BYTE PTR [ebx],ah
  40faa1:	lods   eax,DWORD PTR ds:[esi]
  40faa2:	cwde   
  40faa3:	aam    0xc9
  40faa5:	call   0x6bbb:0x346f43ac
  40faac:	cmp    DWORD PTR [edi-0x26],edi
  40faaf:	adc    al,0xb7
  40fab1:	jbe    0x40fa9a
  40fab3:	sub    edi,esi
  40fab5:	ins    DWORD PTR es:[edi],dx
  40fab6:	mov    edi,0x45e72539
  40fabb:	addr16 cli 
  40fabd:	(bad)  
  40fabe:	jge    0x40fa9b
  40fac0:	push   0x3b7ad802
  40fac5:	jns    0x40fb17
  40fac7:	gs push ecx
  40fac9:	mov    gs,WORD PTR [edx+edi*4+0x63]
  40facd:	dec    esp
  40face:	sbb    al,0xa
  40fad0:	jmp    0x78770b06
  40fad5:	(bad)  
  40fad6:	leave  
  40fad7:	pop    ds
  40fad8:	jmp    0xa409:0x45df0b74
  40fadf:	call   0x4cc88c20
  40fae4:	push   es
  40fae5:	ja     0x40fb26
  40fae7:	daa    
  40fae8:	loop   0x40fadd
  40faea:	and    BYTE PTR [ecx+0x5e5b62a3],0x43
  40faf1:	xchg   DWORD PTR fs:[ebx-0x1d488af6],esi
  40faf8:	int3   
  40faf9:	sub    DWORD PTR [esi],edx
  40fafb:	cs into 
  40fafd:	lea    esi,[ebx-0x42]
  40fb00:	and    al,0xe6
  40fb02:	div    BYTE PTR [ebx+0x1ad886ae]
  40fb08:	nop
  40fb09:	mov    edx,0x89bfd391
  40fb0e:	jecxz  0x40faab
  40fb10:	aam    0x9
  40fb12:	(bad)  
  40fb14:	adc    dh,0xae
  40fb17:	cmc    
  40fb18:	cmp    al,0x11
  40fb1a:	mov    al,ds:0xbdedfa8b
  40fb1f:	jbe    0x40fb2b
  40fb21:	push   0xffffffc7
  40fb23:	mov    esi,DWORD PTR es:[ecx+0x18]
  40fb27:	mov    eax,ds:0xd9b924df
  40fb2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb2d:	ja     0x40fb18
  40fb2f:	pop    ds
  40fb30:	out    dx,al
  40fb31:	fwait
  40fb32:	not    DWORD PTR [ebp+0x5c392069]
  40fb38:	pop    ds
  40fb39:	fist   DWORD PTR [eax]
  40fb3b:	call   0xe13375ee
  40fb40:	push   eax
  40fb41:	adc    ah,BYTE PTR [esi-0x37]
  40fb44:	hlt    
  40fb45:	call   0x2b23:0x57f15777
  40fb4c:	push   esp
  40fb4d:	add    eax,0x8ce223b6
  40fb52:	addr16 push edx
  40fb54:	pop    eax
  40fb55:	sbb    esp,DWORD PTR [eax]
  40fb57:	aaa    
  40fb58:	xor    BYTE PTR [esi-0x3ea65d0d],0xbb
  40fb5f:	jnp    0x40fb91
  40fb61:	add    BYTE PTR [eax-0x30],0xd4
  40fb65:	mov    ss,WORD PTR gs:[ebx-0x61]
  40fb69:	cmp    al,0x52
  40fb6b:	pop    ecx
  40fb6c:	dec    esi
  40fb6d:	clc    
  40fb6e:	pushf  
  40fb6f:	and    eax,0xc7517471
  40fb74:	pop    ebp
  40fb75:	out    0xd0,al
  40fb77:	pop    ebx
  40fb78:	rcr    DWORD PTR [esp+esi*2+0x49],0x2c
  40fb7d:	in     al,dx
  40fb7e:	add    DWORD PTR ds:0x87d01480,eax
  40fb84:	mov    al,ds:0xdf9d40c4
  40fb89:	call   0x819d8447
  40fb8e:	rol    BYTE PTR [ecx],cl
  40fb90:	je     0x40fbb8
  40fb92:	or     esp,ebx
  40fb94:	xchg   edi,eax
  40fb95:	daa    
  40fb96:	mov    ch,0x3a
  40fb98:	xor    BYTE PTR [ebx+0x2acabd6],al
  40fb9e:	jg     0x40fba5
  40fba0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fba1:	or     edi,DWORD PTR [eax-0x79]
  40fba4:	xchg   esi,eax
  40fba5:	stos   BYTE PTR es:[edi],al
  40fba6:	mov    bh,0xff
  40fba8:	rcl    DWORD PTR [esi-0x6be2f339],0x2b
  40fbaf:	mov    esp,0x730c8bc5
  40fbb4:	rcl    ah,cl
  40fbb6:	add    BYTE PTR [edi-0x27],al
  40fbb9:	xlat   BYTE PTR ds:[ebx]
  40fbba:	jno    0x40fc0b
  40fbbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbbd:	lods   al,BYTE PTR ds:[esi]
  40fbbe:	cdq    
  40fbbf:	sbb    eax,0x22fc107b
  40fbc4:	call   0x2e3b:0x5a99d33b
  40fbcb:	addr16 pushw cs
  40fbce:	cmp    cl,BYTE PTR [edi-0x30073cad]
  40fbd4:	and    BYTE PTR [ebp-0x7],dh
  40fbd7:	stos   DWORD PTR es:[edi],eax
  40fbd8:	shl    ebx,cl
  40fbda:	ins    DWORD PTR es:[edi],dx
  40fbdb:	ja     0x40fbf3
  40fbdd:	mov    al,0x2c
  40fbdf:	inc    eax
  40fbe0:	xchg   edi,eax
  40fbe1:	js     0x40fc2c
  40fbe3:	inc    edx
  40fbe4:	and    bh,BYTE PTR [ebp+eiz*4+0x9]
  40fbe8:	dec    ebp
  40fbe9:	sbb    al,0xd5
  40fbeb:	out    dx,al
  40fbec:	mov    edx,0x2b30687e
  40fbf1:	jl     0x40fbd8
  40fbf3:	and    al,0x29
  40fbf5:	adc    edx,DWORD PTR [ecx-0x5e991ad0]
  40fbfb:	sahf   
  40fbfc:	mov    ebx,0x832fc7b7
  40fc01:	aam    0x64
  40fc03:	popa   
  40fc04:	add    DWORD PTR [edx],esi
  40fc06:	cmc    
  40fc07:	aaa    
  40fc08:	shl    ebx,1
  40fc0a:	pop    eax
  40fc0b:	adc    dl,BYTE PTR [eax-0x4ffcab03]
  40fc11:	sub    al,0xa0
  40fc13:	out    0x34,al
  40fc15:	mov    ds:0xfa9478c5,al
  40fc1a:	jle    0x40fc76
  40fc1c:	ds loope 0x40fc64
  40fc1f:	shl    BYTE PTR gs:[ebx+0x59c5241c],cl
  40fc26:	ins    DWORD PTR es:[edi],dx
  40fc27:	ins    BYTE PTR es:[edi],dx
  40fc28:	rcl    BYTE PTR [esi+0x1729c5c6],0x33
  40fc2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc30:	js     0x40fc1e
  40fc32:	mov    ebx,DWORD PTR [ebx]
  40fc34:	outs   dx,BYTE PTR ds:[esi]
  40fc35:	stc    
  40fc36:	nop
  40fc37:	mov    ebx,0xca8963b8
  40fc3c:	std    
  40fc3d:	out    0x3a,al
  40fc3f:	push   ss
  40fc40:	adc    eax,0xc45519b9
  40fc45:	or     al,0x2
  40fc47:	add    ecx,DWORD PTR [ebx+0x71c6dedc]
  40fc4d:	aad    0xa5
  40fc4f:	daa    
  40fc50:	lods   al,BYTE PTR ds:[esi]
  40fc51:	mov    si,0xeefc
  40fc55:	jle    0x40fc16
  40fc57:	into   
  40fc58:	(bad)
  40fc5b:	sub    eax,0xb1a804e7
  40fc60:	xor    ah,al
  40fc62:	push   edi
  40fc63:	nop
  40fc64:	int    0xf9
  40fc66:	inc    ebx
  40fc67:	mov    cl,0x6f
  40fc69:	out    0x6c,al
  40fc6b:	inc    esp
  40fc6c:	and    BYTE PTR [ebx-0x15bf7fc4],ch
  40fc72:	or     eax,0xbcf5ad8c
  40fc77:	cmp    eax,0xa140a952
  40fc7c:	loope  0x40fc8b
  40fc7e:	nop
  40fc7f:	xor    BYTE PTR [ecx+ebx*8+0x3a371fc4],al
  40fc86:	mov    eax,0x8fdd257f
  40fc8b:	(bad)  
  40fc8c:	sbb    BYTE PTR [ebp-0x2dc45142],dl
  40fc92:	outs   dx,BYTE PTR ds:[esi]
  40fc93:	xlat   BYTE PTR ds:[ebx]
  40fc94:	mov    ah,0xf
  40fc96:	ret    0x7c31
  40fc99:	mov    ecx,0x5eef4be0
  40fc9e:	mov    eax,ds:0x11865733
  40fca3:	js     0x40fd0a
  40fca5:	cmp    al,0xbb
  40fca7:	fwait
  40fca8:	push   esp
  40fca9:	dec    esp
  40fcaa:	xor    edi,ebx
  40fcac:	repnz dec eax
  40fcae:	mov    esi,0xdc38bd1f
  40fcb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fcb4:	add    bh,BYTE PTR [ebx+0x63]
  40fcb7:	jl     0x40fcb8
  40fcb9:	sar    cl,0x42
  40fcbc:	and    BYTE PTR [ebx+esi*4-0x19],dl
  40fcc0:	sbb    bl,dh
  40fcc2:	pop    eax
  40fcc3:	push   ds
  40fcc4:	jle    0x40fd44
  40fcc6:	adc    DWORD PTR [esi+0x306126d4],eax
  40fccc:	add    DWORD PTR [eax],0xb58733a3
  40fcd2:	mov    esi,0x661aca07
  40fcd7:	inc    esp
  40fcd8:	and    bl,cl
  40fcda:	cmp    al,0x18
  40fcdc:	jmp    0x40fcc8
  40fcde:	mov    esp,0x2eb5d413
  40fce3:	and    BYTE PTR [eax*1+0x1157d87d],al
  40fcea:	(bad)  
  40fceb:	cdq    
  40fcec:	mov    bh,0x28
  40fcee:	mov    ebx,0x5cde6eaf
  40fcf3:	mov    bl,0xf0
  40fcf5:	out    0xe9,al
  40fcf7:	mov    ah,0x98
  40fcf9:	fcmovb st,st(7)
  40fcfb:	push   edi
  40fcfc:	cdq    
  40fcfd:	jo     0x40fca6
  40fcff:	push   cs
  40fd00:	outs   dx,DWORD PTR ds:[esi]
  40fd01:	js     0x40fd40
  40fd03:	adc    eax,0x32d2db5c
  40fd08:	add    al,BYTE PTR [edi]
  40fd0a:	pop    ecx
  40fd0b:	mov    bl,0xa9
  40fd0d:	fdivr  DWORD PTR ds:0x38d1810d
  40fd13:	cmp    DWORD PTR [eax],esi
  40fd15:	test   eax,0x1ad38ab7
  40fd1a:	mov    ebp,0x92d3655f
  40fd1f:	mov    DWORD PTR [esi-0x46],ebx
  40fd22:	add    bl,0x18
  40fd25:	ins    BYTE PTR es:[edi],dx
  40fd26:	dec    edi
  40fd27:	int    0xbb
  40fd29:	into   
  40fd2a:	arpl   WORD PTR [edi+0x25],bp
  40fd2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd2e:	in     eax,dx
  40fd2f:	mov    eax,ds:0x30acfe02
  40fd34:	adc    al,0x7f
  40fd36:	cmp    bl,cl
  40fd38:	jmp    0x40fce6
  40fd3a:	inc    edx
  40fd3b:	dec    ecx
  40fd3c:	loop   0x40fcd8
  40fd3e:	jecxz  0x40fd8e
  40fd40:	add    ebx,esi
  40fd42:	push   ss
  40fd43:	fdivr  DWORD PTR [ebx-0x2281e01a]
  40fd49:	pop    esi
  40fd4a:	cmp    ebx,DWORD PTR [edi-0x41]
  40fd4d:	mov    ?,WORD PTR [esi-0x5119eb91]
  40fd53:	outs   dx,DWORD PTR ds:[esi]
  40fd54:	and    BYTE PTR [esi+0x27],dl
  40fd57:	ja     0x40fd56
  40fd59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd5a:	gs mov ch,0xb3
  40fd5d:	xchg   edx,eax
  40fd5e:	add    DWORD PTR [edx+0x4ebf3a10],edi
  40fd64:	mov    esp,0x5686c29a
  40fd69:	mov    ebp,0xbe41a7e1
  40fd6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd6f:	adc    al,0x0
  40fd71:	test   BYTE PTR [edx-0x2ba1ec4a],al
  40fd77:	fadd   QWORD PTR [edi-0x15]
  40fd7a:	ret    0xc0b1
  40fd7d:	dec    ecx
  40fd7e:	retf   
  40fd7f:	ret    0x75c9
  40fd82:	inc    eax
  40fd83:	push   ecx
  40fd84:	xchg   edx,eax
  40fd85:	gs scas eax,DWORD PTR es:[edi]
  40fd87:	jno    0x40fdea
  40fd89:	bound  esi,QWORD PTR [ecx+eiz*4]
  40fd8c:	in     al,0xeb
  40fd8e:	loope  0x40fd91
  40fd90:	dec    ebx
  40fd91:	xor    eax,0xcd63b7cf
  40fd96:	fwait
  40fd97:	push   ss
  40fd98:	les    ebp,FWORD PTR [edi]
  40fd9a:	add    edi,DWORD PTR [edx-0x5a]
  40fd9d:	and    eax,0x87cb05b1
  40fda2:	sbb    eax,0xc6bc463a
  40fda7:	pop    ss
  40fda8:	int3   
  40fda9:	dec    ebx
  40fdaa:	mov    dh,0x9c
  40fdac:	fmul   QWORD PTR ds:0xe15e1d05
  40fdb2:	ret    
  40fdb3:	adc    eax,ebx
  40fdb5:	jmp    0xf146499c
  40fdba:	xchg   edx,eax
  40fdbb:	jle    0x40fd52
  40fdbd:	fist   WORD PTR [edx-0x34]
  40fdc0:	out    0x30,eax
  40fdc2:	sub    ebx,edx
  40fdc4:	fs jns 0x40fe0c
  40fdc7:	cli    
  40fdc8:	(bad)  
  40fdc9:	mov    eax,0x60b3ff7e
  40fdce:	and    eax,0x5779c0c7
  40fdd3:	or     BYTE PTR [ebp+0x22],bl
  40fdd6:	xchg   ebx,eax
  40fdd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fdd8:	pop    ebx
  40fdd9:	in     eax,dx
  40fdda:	dec    edi
  40fddb:	mov    cl,BYTE PTR fs:[ebx-0x7c]
  40fddf:	xchg   DWORD PTR [edi-0x5d],edi
  40fde2:	stos   BYTE PTR es:[edi],al
  40fde3:	jp     0x40fda5
  40fde5:	sub    BYTE PTR [ecx],bl
  40fde7:	adc    edi,DWORD PTR [edi+0x67ad62a8]
  40fded:	repnz add bh,ah
  40fdf0:	gs cdq 
  40fdf2:	sti    
  40fdf3:	inc    DWORD PTR [edi]
  40fdf5:	mov    ecx,0xcf1716b3
  40fdfa:	xchg   edx,eax
  40fdfb:	hlt    
  40fdfc:	sti    
  40fdfd:	jmp    0x40fe22
  40fdff:	retf   
  40fe00:	repnz int3 
  40fe02:	pusha  
  40fe03:	xchg   ebp,eax
  40fe04:	sub    al,BYTE PTR [esi+esi*4]
  40fe07:	xlat   BYTE PTR ds:[ebx]
  40fe08:	adc    edx,DWORD PTR [edx+0x1ec4fdf7]
  40fe0e:	clc    
  40fe0f:	les    eax,FWORD PTR [ebp+0x136a0011]
  40fe15:	call   0xc5545f7c
  40fe1a:	cwde   
  40fe1b:	pop    ecx
  40fe1c:	cmp    BYTE PTR ds:0xefe42267,ch
  40fe22:	add    eax,0x19cb7bfe
  40fe27:	cli    
  40fe28:	ror    esi,1
  40fe2a:	pop    ecx
  40fe2b:	mov    esi,0x56f2a386
  40fe30:	cdq    
  40fe31:	jecxz  0x40fe35
  40fe33:	inc    eax
  40fe34:	sbb    edx,0x47a8eb66
  40fe3a:	in     eax,dx
  40fe3b:	xor    ebp,ebx
  40fe3d:	dec    ebp
  40fe3e:	jbe    0x40fe36
  40fe40:	into   
  40fe41:	fwait
  40fe42:	xchg   ebp,eax
  40fe43:	mov    ds:0x70ea3c17,al
  40fe48:	xor    cl,BYTE PTR [eax]
  40fe4a:	imul   edi,DWORD PTR [eax-0x1a],0xfb64f0aa
  40fe51:	xchg   esi,eax
  40fe52:	mov    al,0x82
  40fe54:	out    0x9a,eax
  40fe56:	dec    edi
  40fe57:	mov    DWORD PTR [ecx],ecx
  40fe59:	and    ch,ah
  40fe5b:	jp     0x40fe66
  40fe5d:	or     DWORD PTR [esi-0x21],edi
  40fe60:	in     al,dx
  40fe61:	push   es
  40fe62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe63:	pop    esp
  40fe64:	sub    eax,0x3f95e6fb
  40fe69:	mov    ecx,0x22832d05
  40fe6e:	fwait
  40fe6f:	adc    al,0x18
  40fe71:	dec    esi
  40fe72:	out    dx,al
  40fe73:	(bad)  
  40fe74:	pop    ds
  40fe75:	add    BYTE PTR [ecx+esi*8+0x4d],dh
  40fe79:	jno    0x40feec
  40fe7b:	ret    
  40fe7c:	imul   ecx,DWORD PTR [ecx+0x46],0xb577d84d
  40fe83:	jg     0x40fe63
  40fe85:	test   DWORD PTR [esi],eax
  40fe87:	std    
  40fe88:	pusha  
  40fe89:	fild   DWORD PTR [ebx+0x3f]
  40fe8c:	mov    ds:0xb6fef438,eax
  40fe91:	into   
  40fe92:	mov    esi,0x3ae4c38c
  40fe97:	sbb    DWORD PTR [esi],esp
  40fe99:	dec    edi
  40fe9a:	stos   BYTE PTR es:[edi],al
  40fe9b:	sub    al,0xd9
  40fe9d:	jg     0x40fe87
  40fe9f:	cmp    BYTE PTR [ecx-0x7b4095a2],ch
  40fea5:	in     eax,0x83
  40fea7:	cwde   
  40fea8:	mov    esp,0x89cb452
  40fead:	mov    edx,?
  40feaf:	xor    edi,edi
  40feb1:	ins    DWORD PTR es:[edi],dx
  40feb2:	mov    BYTE PTR [edx+0x7f84979c],bh
  40feb8:	sbb    al,0x7f
  40feba:	lods   eax,DWORD PTR ds:[esi]
  40febb:	pop    ebp
  40febc:	nop
  40febd:	pop    ebx
  40febe:	mov    ecx,0x514014d1
  40fec3:	mov    eax,ds:0xe4439cae
  40fec8:	frndint 
  40feca:	pop    ebp
  40fecb:	test   esi,edx
  40fecd:	in     eax,dx
  40fece:	iret   
  40fecf:	push   edi
  40fed0:	jmp    0x7435:0xd1e6dd99
  40fed7:	gs scas al,BYTE PTR es:[edi]
  40fed9:	cmp    ebx,DWORD PTR [ebx+0x3c940c76]
  40fedf:	sub    edx,eax
  40fee1:	fild   WORD PTR [ebp+0x9396533]
  40fee7:	out    0x7a,eax
  40fee9:	mov    ecx,0xd9a193fb
  40feee:	gs jmp 0x40ff38
  40fef1:	sub    al,0xbe
  40fef3:	repz mov al,ds:0xd3260fc3
  40fef9:	rol    DWORD PTR [ebx+esi*8-0x22],1
  40fefd:	jbe    0x40fee6
  40feff:	xchg   esp,eax
  40ff00:	gs iret 
  40ff02:	and    DWORD PTR [eax-0x6f1b9263],0x36ed8fff
  40ff0c:	inc    esp
  40ff0d:	cmp    esp,esi
  40ff0f:	nop
  40ff10:	push   ds
  40ff11:	ret    
  40ff12:	pop    esi
  40ff13:	test   dh,0x5
  40ff16:	sbb    eax,0xd1c09cd
  40ff1b:	mov    edx,0xe28a832
  40ff20:	pop    esp
  40ff21:	es call 0xb9e88760
  40ff27:	add    eax,0xac0a4874
  40ff2c:	lds    ebx,FWORD PTR [ebx+edx*1]
  40ff2f:	cmp    eax,0xa856edb5
  40ff34:	ins    DWORD PTR es:[edi],dx
  40ff35:	cmp    BYTE PTR [edx-0x5d],ah
  40ff38:	mov    al,ds:0x92cd69
  40ff3d:	lea    ebp,[ecx]
  40ff3f:	pop    DWORD PTR [ebp-0xaa7096c]
  40ff45:	adc    DWORD PTR [ebp+0x14f2e11f],0xffffff8f
  40ff4c:	xchg   ecx,eax
  40ff4d:	test   eax,0x4eb426e7
  40ff52:	test   eax,0xfef5fa2c
  40ff57:	mov    bl,0x9b
  40ff59:	into   
  40ff5a:	cld    
  40ff5b:	mov    ds:0x45e82a86,eax
  40ff60:	dec    ebp
  40ff61:	imul   BYTE PTR [ebp-0x595bdeb2]
  40ff67:	lods   eax,DWORD PTR ds:[esi]
  40ff68:	mov    ah,0x48
  40ff6a:	mov    ecx,0xa27610ca
  40ff6f:	retf   0x7798
  40ff72:	push   0xe9dc5b12
  40ff77:	xchg   esp,eax
  40ff78:	mov    cl,0xf5
  40ff7a:	js     0x40ffd6
  40ff7c:	and    BYTE PTR [esi+eax*8],ah
  40ff7f:	or     bh,BYTE PTR [esi+0x78]
  40ff82:	data16 or BYTE PTR [ecx+edi*4],ch
  40ff86:	dec    ecx
  40ff87:	push   esp
  40ff88:	and    al,0xfa
  40ff8a:	data16 lock add dh,cl
  40ff8e:	mov    bl,0x8f
  40ff90:	scas   eax,DWORD PTR es:[edi]
  40ff91:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40ff93:	add    al,0x30
  40ff95:	ins    DWORD PTR es:[edi],dx
  40ff96:	mov    dl,0x6e
  40ff98:	ja     0x40ffca
  40ff9a:	out    0x39,al
  40ff9c:	in     eax,dx
  40ff9d:	mov    cs,WORD PTR [ecx-0x70]
  40ffa0:	dec    edx
  40ffa1:	imul   ebx,DWORD PTR [edx],0xeda99e11
  40ffa7:	xor    dl,BYTE PTR [esi]
  40ffa9:	fiadd  WORD PTR [edi+0x2]
  40ffac:	dec    edx
  40ffad:	sbb    DWORD PTR [eax],eax
  40ffaf:	pop    DWORD PTR [ecx+eax*8+0x1e987bd1]
  40ffb6:	ins    DWORD PTR es:[edi],dx
  40ffb7:	sti    
  40ffb8:	shr    BYTE PTR [eax+0x6f],0xd5
  40ffbc:	xchg   esi,eax
  40ffbd:	ins    DWORD PTR es:[edi],dx
  40ffbe:	sub    al,0x41
  40ffc0:	or     BYTE PTR [ebx],ah
  40ffc2:	cmp    edx,DWORD PTR [ebx+0x4a1fc267]
  40ffc8:	push   eax
  40ffc9:	adc    ebp,ebx
  40ffcb:	and    esi,DWORD PTR [ebp-0x649d9ca4]
  40ffd1:	add    bl,cl
  40ffd3:	pop    ecx
  40ffd4:	mov    al,0x1a
  40ffd6:	inc    edx
  40ffd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ffd8:	jo     0x40ff97
  40ffda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffdb:	cmp    eax,0x569d9e80
  40ffe0:	scas   al,BYTE PTR es:[edi]
  40ffe1:	rcl    BYTE PTR [edx],0x4f
  40ffe4:	sub    DWORD PTR [esi],0xffffffff
  40ffe7:	mov    cl,0xea
  40ffe9:	ret    0x37
  40ffec:	and    DWORD PTR [ecx+esi*8+0x75],0x801fec2c
  40fff4:	cmp    eax,0x25dc8ba6
  40fff9:	pop    esp
  40fffa:	xor    al,0x78
  40fffc:	push   0x70
  40fffe:	xchg   BYTE PTR [esi],ah
  410000:	adc    BYTE PTR ds:0xd0fb4a18,dl
  410006:	and    sp,0xff84
  41000a:	enter  0x88fd,0x13
  41000e:	lods   al,BYTE PTR ds:[esi]
  41000f:	dec    ecx
  410010:	stos   DWORD PTR es:[edi],eax
  410011:	(bad)  
  410012:	adc    eax,0xfdebbed5
  410017:	loop   0x41003c
  410019:	xchg   BYTE PTR [eax+0x7d],ah
  41001c:	sar    DWORD PTR [ebx],1
  41001e:	xchg   ebp,eax
  41001f:	mov    dl,0xdf
  410021:	loop   0x410063
  410023:	jecxz  0x41000f
  410025:	sbb    ah,BYTE PTR [edx-0x20]
  410028:	pop    edi
  410029:	mov    edi,0x3c156fee
  41002e:	mov    ebx,0x9ca5f37
  410033:	xchg   esp,eax
  410034:	fimul  WORD PTR ds:0xb2665018
  41003a:	div    esi
  41003c:	sahf   
  41003d:	outs   dx,DWORD PTR ds:[esi]
  41003e:	cld    
  41003f:	idiv   DWORD PTR [eax]
  410041:	push   esp
  410042:	mov    al,ds:0x7b40e5f4
  410047:	out    0x90,eax
  410049:	shl    DWORD PTR [ebx+0x70],1
  41004c:	push   esi
  41004d:	dec    ebp
  41004e:	and    al,0x23
  410050:	fidiv  DWORD PTR [ebx+ebx*8-0x54a54d52]
  410057:	or     BYTE PTR [esi+0x2e],dl
  41005a:	jne    0x41009c
  41005c:	push   esi
  41005d:	inc    eax
  41005e:	xchg   ebx,eax
  41005f:	outs   dx,BYTE PTR ds:[esi]
  410060:	call   0x3ac11462
  410065:	aas    
  410066:	aam    0xd7
  410068:	sbb    al,0xce
  41006a:	pushf  
  41006b:	addr16 into 
  41006d:	lods   al,BYTE PTR ds:[esi]
  41006e:	jns    0x4100a1
  410070:	pop    ebp
  410071:	in     eax,0x63
  410073:	mov    edx,0x6900a87b
  410078:	cmp    BYTE PTR [ecx],dl
  41007a:	fnsave [ebx-0x5]
  41007d:	loop   0x41008b
  41007f:	mov    ebp,0x15f416c6
  410084:	lea    ecx,[ebx+esi*8-0x3d]
  410088:	fild   DWORD PTR [edi]
  41008a:	data16 arpl WORD PTR [edx+edi*1+0x13],dx
  41008f:	(bad)  
  410090:	popa   
  410091:	mov    ds:0x2f570ba8,al
  410096:	ds in  eax,0x1d
  410099:	into   
  41009a:	jae    0x410028
  41009c:	pop    eax
  41009d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41009e:	push   0xfffffff1
  4100a0:	push   edi
  4100a1:	adc    DWORD PTR [ecx-0x228db54],ebp
  4100a7:	pop    ebp
  4100a8:	sbb    al,0xa
  4100aa:	jno    0x410113
  4100ac:	and    dl,ah
  4100ae:	xor    DWORD PTR [esi-0x4d],ebp
  4100b1:	stc    
  4100b2:	(bad)
  4100b5:	push   esp
  4100b6:	and    ch,BYTE PTR [ebp-0x12]
  4100b9:	out    0xa5,al
  4100bb:	push   edi
  4100bc:	ss dec edi
  4100be:	or     al,0xf0
  4100c0:	icebp  
  4100c1:	push   eax
  4100c2:	pop    edi
  4100c3:	sbb    eax,0x1192d870
  4100c8:	aas    
  4100c9:	nop
  4100ca:	and    DWORD PTR [esi],0x404d5a12
  4100d0:	add    bl,BYTE PTR [edi+0x1e]
  4100d3:	(bad)  ds:0xc74beb46
  4100d9:	pop    edx
  4100da:	push   esi
  4100db:	mov    bl,0x85
  4100dd:	mov    ch,bl
  4100df:	mov    BYTE PTR [edi+ecx*1+0x3f],dh
  4100e3:	mov    BYTE PTR [ebp+0x33],ah
  4100e6:	lods   al,BYTE PTR ds:[esi]
  4100e7:	cli    
  4100e8:	rcr    ecx,1
  4100ea:	lods   eax,DWORD PTR ds:[esi]
  4100eb:	dec    edi
  4100ec:	mov    eax,0x2dab7119
  4100f1:	mov    ds:0x3103eac1,eax
  4100f6:	adc    eax,0xce2e2d14
  4100fb:	and    eax,0x1d278747
  410100:	sub    bh,BYTE PTR ds:0xb3dc7e33
  410106:	pushf  
  410107:	push   esi
  410108:	mov    eax,0xb36521b
  41010d:	pusha  
  41010e:	or     bl,BYTE PTR [ebp-0x69ebda59]
  410114:	leave  
  410115:	push   esp
  410116:	retf   
  410117:	mov    esi,0x1b972c3f
  41011c:	jne    0x41010d
  41011e:	mov    ah,0x81
  410120:	or     esp,DWORD PTR [ebx-0xf827ea3]
  410126:	in     al,0x90
  410128:	add    eax,DWORD PTR [ebp+esi*2-0x33]
  41012c:	aas    
  41012d:	call   0x78f39d19
  410132:	and    al,0x2c
  410134:	jns    0x4100eb
  410136:	in     al,dx
  410137:	add    BYTE PTR [eax+0x7a3e2dfa],bh
  41013d:	and    eax,ebp
  41013f:	mov    esp,0xe36375da
  410144:	pop    es
  410145:	xchg   esi,eax
  410146:	retf   
  410147:	xchg   DWORD PTR [ecx+0x785b3dcb],ebp
  41014d:	inc    ecx
  41014e:	sbb    DWORD PTR [ebp-0x6152f941],edi
  410154:	lea    edi,[edi+edx*4]
  410157:	mov    esi,0x5ef1b9f6
  41015c:	pushf  
  41015d:	jl     0x4100ec
  41015f:	(bad)  
  410160:	push   es
  410161:	cs dec eax
  410163:	inc    esi
  410164:	les    esp,FWORD PTR [eax]
  410166:	ficomp WORD PTR [edi+0x50d19fd8]
  41016c:	xchg   ebp,eax
  41016d:	mov    al,ds:0x2c9bf3b6
  410172:	cmp    dl,0x7e
  410175:	push   ebx
  410176:	lahf   
  410177:	and    dl,BYTE PTR [esi]
  410179:	aaa    
  41017a:	loopne 0x4101ec
  41017c:	adc    ebp,DWORD PTR [esi+0x7c]
  41017f:	fld    DWORD PTR [ebx+edx*4-0x7eda55c7]
  410186:	cmc    
  410187:	xor    al,0xbc
  410189:	outs   dx,BYTE PTR ds:[esi]
  41018a:	jl     0x410153
  41018c:	hlt    
  41018d:	les    ebx,FWORD PTR [ecx-0x4d99ae8f]
  410193:	rol    edi,0x88
  410196:	pop    ebp
  410197:	mov    cl,0x72
  410199:	inc    eax
  41019a:	shl    DWORD PTR [esi-0x254484c3],1
  4101a0:	sub    sp,WORD PTR [ebx+ebx*8-0x47e63a05]
  4101a8:	dec    ecx
  4101a9:	test   al,0x4
  4101ab:	ins    BYTE PTR es:[edi],dx
  4101ac:	daa    
  4101ad:	das    
  4101ae:	jae    0x410180
  4101b0:	xchg   edi,eax
  4101b1:	scas   eax,DWORD PTR es:[edi]
  4101b2:	jmp    DWORD PTR [ecx]
  4101b4:	jae    0x4101b2
  4101b6:	sbb    eax,0x18371f6e
  4101bb:	loopne 0x4101ff
  4101bd:	outs   dx,BYTE PTR ds:[esi]
  4101be:	sbb    esp,ebx
  4101c0:	popf   
  4101c1:	(bad)  
  4101c2:	(bad)  
  4101c3:	fcmovnb st,st(4)
  4101c5:	jl     0x410191
  4101c7:	fst    DWORD PTR [edx+esi*4-0x59]
  4101cb:	jmp    0xae0b:0x1f0c766d
  4101d2:	imul   ecx,DWORD PTR [esi],0xcc8b3c75
  4101d8:	arpl   WORD PTR [ebp+0x4f9c92e2],bp
  4101de:	push   edi
  4101df:	cmc    
  4101e0:	shl    DWORD PTR [ebp-0x234d8b20],0xab
  4101e7:	xchg   esp,eax
  4101e8:	in     al,dx
  4101e9:	out    0x4c,al
  4101eb:	into   
  4101ec:	xchg   ebp,eax
  4101ed:	lea    ebx,[ecx+edx*2-0xc65910b]
  4101f4:	jecxz  0x4101fd
  4101f6:	nop
  4101f7:	or     al,0x99
  4101f9:	xor    BYTE PTR [ebx],0xff
  4101fc:	js     0x4101a3
  4101fe:	ds daa 
  410200:	jmp    0x4101f0
  410202:	mov    ebx,0x23e7f78d
  410207:	dec    eax
  410208:	outs   dx,DWORD PTR ds:[esi]
  410209:	sbb    al,BYTE PTR [edx]
  41020b:	icebp  
  41020c:	outs   dx,DWORD PTR ds:[esi]
  41020d:	adc    BYTE PTR [edx-0x35],bl
  410210:	push   eax
  410211:	jle    0x410203
  410213:	jg     0x4101ea
  410215:	mov    dh,0x40
  410217:	mov    esp,0xcfa6dbb1
  41021c:	in     eax,dx
  41021d:	inc    esi
  41021e:	dec    ebp
  41021f:	(bad)  
  410220:	push   ebp
  410221:	inc    esp
  410222:	xor    cl,ah
  410224:	ror    DWORD PTR [ecx+0x49df6bae],0xa0
  41022b:	mov    ds:0xa5043d0,eax
  410230:	(bad)  
  410231:	shl    DWORD PTR [edx+0x30],cl
  410234:	(bad)  
  410235:	sti    
  410236:	mov    ebp,0xd676aecb
  41023b:	imul   eax,DWORD PTR [ebx],0xffffffc7
  41023e:	imul   eax,ebx
  410241:	cmp    eax,edx
  410243:	ja     0x4191d2
  410249:	mov    edx,DWORD PTR [ebp-0x10]
  41024c:	mov    eax,DWORD PTR [ebp-0x14]
  41024f:	mov    ebx,DWORD PTR [ebp-0x28]
  410252:	sub    eax,edx
  410254:	xor    ebx,esi
  410256:	xor    edx,edx
  410258:	add    ebx,edi
  41025a:	div    ebx
  41025c:	mov    DWORD PTR [ebp-0x8],eax
  41025f:	mov    eax,DWORD PTR [ebp-0x2c]
  410262:	mov    edx,DWORD PTR [ebp-0x8]
  410265:	xor    eax,esi
  410267:	add    eax,edi
  410269:	cmp    edx,eax
  41026b:	jbe    0x41027b
  410271:	mov    eax,DWORD PTR [ebp-0x2c]
  410274:	xor    eax,esi
  410276:	add    eax,edi
  410278:	mov    DWORD PTR [ebp-0x8],eax
  41027b:	mov    eax,DWORD PTR [ebp-0x28]
  41027e:	mov    edx,DWORD PTR [ebp-0x8]
  410281:	xor    eax,esi
  410283:	add    eax,edi
  410285:	imul   eax,edx
  410288:	mov    DWORD PTR [ebp-0x8],eax
  41028b:	mov    eax,DWORD PTR [ebp-0x3c]
  41028e:	mov    edx,DWORD PTR [ebp-0x8]
  410291:	xor    eax,esi
  410293:	add    eax,edi
  410295:	cmp    edx,eax
  410297:	je     0x4191bb
  41029d:	mov    eax,DWORD PTR [ebp-0x8]
  4102a0:	mov    DWORD PTR [ebp-0x20],eax
  4102a3:	mov    eax,DWORD PTR [ebp-0x10]
  4102a6:	add    eax,DWORD PTR [ebp-0x40]
  4102a9:	mov    DWORD PTR [ebp-0x24],0xf89c85b6
  4102b0:	mov    DWORD PTR [ebp-0x8],eax
  4102b3:	mov    eax,0xf89c85b5
  4102b8:	mov    DWORD PTR [ebp-0x1c],eax
  4102bb:	mov    DWORD PTR [ebp-0x38],0xf89c85b4
  4102c2:	mov    DWORD PTR [ebp-0x30],eax
  4102c5:	mov    eax,DWORD PTR [ebp-0x24]
  4102c8:	xor    eax,esi
  4102ca:	add    eax,edi
  4102cc:	jmp    0x416dfa
  4102d1:	mov    DWORD PTR [ebp-0x48],0xf89c85be
  4102d8:	mov    DWORD PTR [ebp-0x4c],0xf89c85a1
  4102df:	mov    eax,DWORD PTR [ebp-0x30]
  4102e2:	mov    edx,DWORD PTR [ebp-0xc]
  4102e5:	xor    eax,esi
  4102e7:	add    eax,edi
  4102e9:	imul   eax,edx
  4102ec:	mov    edx,DWORD PTR [ebp-0x1c]
  4102ef:	xor    edx,esi
  4102f1:	add    eax,edx
  4102f3:	mov    edx,DWORD PTR [ebp-0x8]
  4102f6:	mov    al,BYTE PTR [eax+edx*1+0x3272db]
  4102fd:	mov    BYTE PTR [ebp-0x1],al
  410300:	mov    eax,DWORD PTR [ebp-0x1c]
  410303:	mov    edx,DWORD PTR [ebp-0x1c]
  410306:	xor    eax,esi
  410308:	xor    edx,esi
  41030a:	lea    ebx,[eax+edx*1+0x64e5b6]
  410311:	mov    eax,DWORD PTR [ebp-0xc]
  410314:	xor    edx,edx
  410316:	div    ebx
  410318:	mov    eax,DWORD PTR [ebp-0x1c]
  41031b:	xor    eax,esi
  41031d:	add    eax,edi
  41031f:	cmp    edx,eax
  410321:	mov    eax,DWORD PTR [ebp-0x30]
  410324:	mov    edx,DWORD PTR [ebp-0xc]
  410327:	jmp    0x41269c
  41032c:	lods   al,BYTE PTR ds:[esi]
  41032d:	jbe    0x410322
  41032f:	loop   0x4102d4
  410331:	jmp    DWORD PTR [ebx-0x2d50dedc]
  410337:	into   
  410338:	cld    
  410339:	scas   al,BYTE PTR es:[edi]
  41033a:	in     eax,0xca
  41033c:	mov    edi,0xa62628e
  410341:	pop    edi
  410342:	bound  esp,QWORD PTR [edx+0xa]
  410345:	adc    DWORD PTR [ebp+eax*8+0x234b59fb],esp
  41034c:	or     dl,BYTE PTR [esi]
  41034e:	jl     0x4103ca
  410350:	mov    ecx,0x4c56f91b
  410355:	jne    0x41038b
  410357:	popa   
  410358:	loope  0x410321
  41035a:	cmp    DWORD PTR [ebx],esi
  41035c:	lods   eax,DWORD PTR ds:[esi]
  41035d:	retf   0x5dbe
  410360:	dec    ebp
  410361:	adc    eax,0x7278c09
  410366:	cs push 0xab12fa5d
  41036c:	fwait
  41036d:	sub    edx,DWORD PTR [ebp-0x9b9a986]
  410373:	es push cs
  410375:	inc    ecx
  410376:	jne    0x41037d
  410378:	lods   eax,DWORD PTR ds:[esi]
  410379:	retf   0x2df6
  41037c:	rol    BYTE PTR fs:[edx-0x56b36915],cl
  410383:	mov    ebp,DWORD PTR ds:0xff45b7a8
  410389:	fimul  WORD PTR [ecx+0x67]
  41038c:	or     BYTE PTR [ebp+0xb],0x48
  410390:	(bad)  
  410391:	fs inc ebp
  410393:	sahf   
  410394:	push   ebx
  410395:	hlt    
  410396:	loopne 0x4103f6
  410398:	mov    edx,0x611d86ac
  41039d:	daa    
  41039e:	adc    eax,0x311ac161
  4103a3:	sbb    al,0x31
  4103a5:	and    DWORD PTR [edx+0x38],ebx
  4103a8:	adc    DWORD PTR [ecx],edx
  4103aa:	mov    ebp,0xa28fa634
  4103af:	dec    edi
  4103b0:	test   dh,ah
  4103b2:	jecxz  0x4103c2
  4103b4:	iret   
  4103b5:	or     BYTE PTR [ebp+ebx*1+0x1d],dl
  4103b9:	call   0x7719:0xbbf3561a
  4103c0:	mov    ecx,DWORD PTR es:[edx+0x2f]
  4103c4:	xchg   ebx,eax
  4103c5:	xlat   BYTE PTR ds:[ebx]
  4103c6:	shl    BYTE PTR [edx+0x52],cl
  4103c9:	test   cl,ch
  4103cb:	push   edi
  4103cc:	jmp    0xfda7:0x8bea0d7
  4103d3:	dec    esp
  4103d4:	stc    
  4103d5:	jo     0x410440
  4103d7:	or     al,0x4b
  4103d9:	je     0x4103b5
  4103db:	into   
  4103dc:	jge    0x410387
  4103de:	outs   dx,BYTE PTR ds:[esi]
  4103df:	arpl   si,bx
  4103e1:	popa   
  4103e2:	xchg   BYTE PTR [edx+0x3d],dh
  4103e5:	inc    edx
  4103e6:	mov    ebx,0x5eea193
  4103eb:	imul   edi,DWORD PTR [edx+ebx*1],0x4e
  4103ef:	add    ebx,DWORD PTR [ebp+0x72]
  4103f2:	popa   
  4103f3:	out    dx,eax
  4103f4:	pusha  
  4103f5:	xchg   ecx,eax
  4103f6:	cmp    edi,ebx
  4103f8:	sub    DWORD PTR [ebx+0x60d08cc7],0xffffff83
  4103ff:	xchg   dh,ch
  410401:	cdq    
  410402:	mov    edx,esp
  410404:	cmp    ebp,edx
  410406:	sar    BYTE PTR [bp+di-0x934],cl
  41040b:	scas   al,BYTE PTR es:[edi]
  41040c:	fisttp QWORD PTR [esp+ecx*4+0x2af1f21a]
  410413:	add    eax,0x9536c506
  410418:	add    ch,ch
  41041a:	aaa    
  41041b:	shl    DWORD PTR [edx],0xe
  41041e:	ja     0x4103f8
  410420:	leave  
  410421:	sub    al,0x93
  410423:	call   0x424cf832
  410428:	jmp    0x2d08:0xf030f8aa
  41042f:	dec    esi
  410430:	xchg   DWORD PTR [ecx+0x55d15c54],ebp
  410436:	std    
  410437:	xor    al,0x76
  410439:	jae    0x410425
  41043b:	repnz or bh,BYTE PTR [esi-0xe]
  41043f:	jns    0x4104bf
  410441:	xchg   edi,eax
  410442:	sub    eax,0xd52f811e
  410447:	and    eax,edi
  410449:	sbb    eax,edi
  41044b:	mov    DWORD PTR [eax+0x592fc343],esi
  410451:	call   0xc802:0x49754ec1
  410458:	push   cs
  410459:	jg     0x410483
  41045b:	dec    esi
  41045c:	and    dl,cl
  41045e:	pop    edx
  41045f:	das    
  410460:	mov    bh,0x58
  410462:	dec    ecx
  410463:	lods   eax,DWORD PTR ds:[esi]
  410464:	pop    DWORD PTR [edx]
  410466:	imul   DWORD PTR [esi+esi*8]
  410469:	ins    DWORD PTR es:[edi],dx
  41046a:	push   0x37
  41046c:	sbb    al,0x1a
  41046e:	and    DWORD PTR [ecx+0x1aa79aaa],ebx
  410474:	add    BYTE PTR [ebx+0x1882a538],0x7a
  41047b:	pusha  
  41047c:	sub    esp,edi
  41047e:	or     eax,0x1117bb41
  410483:	loop   0x4104df
  410485:	push   ss
  410486:	das    
  410487:	pop    ss
  410488:	push   esp
  410489:	and    eax,0x5f961d0f
  41048e:	sti    
  41048f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410490:	mov    ecx,ecx
  410492:	or     al,0xe6
  410494:	or     ah,BYTE PTR [ebx-0x5e]
  410497:	popf   
  410498:	pop    eax
  410499:	pop    eax
  41049a:	push   cs
  41049b:	(bad)  
  41049d:	push   esp
  41049e:	push   ecx
  41049f:	fist   WORD PTR [esi-0x4f]
  4104a2:	(bad)  
  4104a3:	mov    edi,0x9d214e05
  4104a8:	outs   dx,DWORD PTR ds:[esi]
  4104a9:	dec    edx
  4104aa:	retf   0xd9d1
  4104ad:	fstp   DWORD PTR [edx]
  4104af:	lds    eax,FWORD PTR [edx-0x28]
  4104b2:	clc    
  4104b3:	and    al,BYTE PTR [edi]
  4104b5:	jns    0x410470
  4104b7:	xchg   esi,eax
  4104b8:	cmp    al,0x21
  4104ba:	inc    ebx
  4104bb:	mov    ah,0xc8
  4104bd:	jnp    0x4104e8
  4104bf:	sbb    esp,ebx
  4104c1:	or     BYTE PTR [ecx-0x1e],0x2d
  4104c5:	pop    es
  4104c6:	mov    esi,0xad1d7639
  4104cb:	pop    ebx
  4104cc:	aam    0xad
  4104ce:	push   0x5120866f
  4104d3:	or     eax,0x21423e5b
  4104d8:	pop    esi
  4104d9:	mov    al,0x6f
  4104db:	daa    
  4104dc:	sub    dh,al
  4104de:	lahf   
  4104df:	scas   eax,DWORD PTR es:[edi]
  4104e0:	ds inc eax
  4104e2:	out    dx,eax
  4104e3:	popf   
  4104e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104e5:	pop    ebx
  4104e6:	adc    BYTE PTR [ebp+ebx*4+0x4e],0x9a
  4104eb:	xor    eax,0x52dd1cdd
  4104f0:	(bad)  
  4104f2:	jae    0x410481
  4104f4:	push   ebp
  4104f5:	adc    ebx,esp
  4104f7:	pop    esi
  4104f8:	or     ebp,DWORD PTR ds:0x6ff40296
  4104fe:	mov    ah,BYTE PTR [esi-0x5c0240c2]
  410504:	jne    0x41051d
  410506:	(bad)  
  410507:	lahf   
  410508:	pop    edx
  410509:	or     al,0xa8
  41050b:	sahf   
  41050c:	sbb    eax,0xf8cb92f9
  410511:	lods   al,BYTE PTR ds:[esi]
  410512:	jmp    DWORD PTR [ebx]
  410514:	xchg   edx,eax
  410515:	adc    BYTE PTR [eax-0x34],bh
  410518:	pop    ds
  410519:	push   cs
  41051a:	into   
  41051b:	leave  
  41051c:	jl     0x4104d8
  41051e:	sahf   
  41051f:	sub    BYTE PTR [esi+0x530828c3],bl
  410525:	lods   al,BYTE PTR ds:[esi]
  410526:	test   ah,dl
  410528:	hlt    
  410529:	das    
  41052a:	push   0x5d
  41052c:	mov    dh,0x47
  41052e:	sar    BYTE PTR [ecx*4-0x2ea64eae],1
  410535:	pop    ss
  410536:	sar    DWORD PTR [ecx],0xd9
  410539:	cwde   
  41053a:	repnz (bad) 
  41053c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41053d:	aam    0x60
  41053f:	mov    ah,0x77
  410541:	inc    esi
  410542:	cdq    
  410543:	sub    BYTE PTR [ecx+0x22],dl
  410546:	in     al,0x2e
  410548:	leave  
  410549:	mov    DWORD PTR [ebx+0x62],ecx
  41054c:	fbstp  TBYTE PTR [edx]
  41054e:	frstor [esi+ebx*2-0x2f]
  410552:	leave  
  410553:	inc    ebp
  410554:	mov    edi,0x6e2e9d1a
  410559:	test   ecx,eax
  41055b:	fwait
  41055c:	rcr    DWORD PTR [ebx+0x76],cl
  41055f:	cmp    al,0x17
  410561:	mov    ebp,0xaa28b704
  410566:	imul   esi,DWORD PTR [eax-0x76b4043d],0x767005cb
  410570:	out    0x8,al
  410572:	out    dx,eax
  410573:	in     al,dx
  410574:	pop    ebp
  410575:	xchg   ebx,eax
  410576:	cmp    bh,dh
  410578:	push   ebx
  410579:	hlt    
  41057a:	test   BYTE PTR [ecx],ch
  41057c:	mov    dh,0xd5
  41057e:	imul   ebp,DWORD PTR [edi],0xffffffb5
  410581:	adc    eax,0xfcec7f80
  410586:	push   eax
  410587:	fldcw  WORD PTR [edx-0x350b7fb8]
  41058d:	sub    ah,BYTE PTR [edx-0x4]
  410590:	fadd   QWORD PTR [ecx]
  410592:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  410594:	std    
  410595:	std    
  410596:	dec    eax
  410597:	repz or ah,ch
  41059a:	mov    ebx,0x96cf3cbd
  41059f:	sbb    eax,0x5a342148
  4105a4:	pushf  
  4105a5:	and    eax,0xfc4cefdc
  4105aa:	clc    
  4105ab:	add    bh,BYTE PTR [esi]
  4105ad:	mov    dl,0x57
  4105af:	mov    ebx,0x8742a5ce
  4105b4:	and    eax,0x4028e831
  4105b9:	fucomp st(2)
  4105bb:	xchg   ecx,eax
  4105bc:	mov    ebx,0x5f72e8f
  4105c1:	sub    DWORD PTR [ebx],ebp
  4105c3:	mov    ah,0xf4
  4105c5:	or     BYTE PTR [edx-0x3230e170],bl
  4105cb:	jno    0x410575
  4105cd:	adc    al,0xa9
  4105cf:	xor    eax,0x80b097f4
  4105d4:	lock xchg edx,eax
  4105d6:	cmp    bl,BYTE PTR [esi]
  4105d8:	cld    
  4105d9:	xor    al,al
  4105db:	sub    DWORD PTR [edx+0x4e],0xffffffba
  4105df:	clc    
  4105e0:	stos   DWORD PTR es:[edi],eax
  4105e1:	fwait
  4105e2:	retf   
  4105e3:	aas    
  4105e4:	retf   
  4105e5:	mov    ebp,0xa090a82a
  4105ea:	pop    ebx
  4105eb:	ja     0x410597
  4105ed:	xchg   edx,eax
  4105ee:	and    esi,eax
  4105f0:	lahf   
  4105f1:	cmp    DWORD PTR [esi+0x76a2b20],0x8fb81a59
  4105fb:	sub    edx,DWORD PTR [esi-0x49]
  4105fe:	int3   
  4105ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410600:	jmp    0x8144b7fd
  410605:	dec    eax
  410606:	shr    BYTE PTR [ebp+edx*2+0x4f0eccba],0xc4
  41060e:	aad    0xb1
  410610:	bound  esp,QWORD PTR [ebp+0x613d578a]
  410616:	adc    dh,BYTE PTR [edi-0x82b4966]
  41061c:	js     0x41069c
  41061e:	lods   al,BYTE PTR ds:[esi]
  41061f:	pop    esp
  410620:	jmp    0xa348:0xdcf6b7cb
  410627:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410628:	fwait
  410629:	test   al,0xff
  41062b:	xchg   esp,eax
  41062c:	mov    dl,0x3f
  41062e:	stc    
  41062f:	fwait
  410630:	sub    dl,BYTE PTR [eax+0x3f]
  410633:	div    BYTE PTR [esi+0x29]
  410636:	mov    ?,WORD PTR [edx-0xe30fab7]
  41063c:	jg     0x41060a
  41063e:	mov    ch,0xe3
  410640:	ins    DWORD PTR es:[edi],dx
  410641:	fimul  DWORD PTR [esi]
  410643:	pop    esi
  410644:	out    dx,al
  410645:	lds    ebp,FWORD PTR [ebp-0x230e8577]
  41064b:	std    
  41064c:	lods   al,BYTE PTR ds:[esi]
  41064d:	ror    BYTE PTR [esp+edi*2-0x41e30c9c],0xd4
  410655:	cmp    dl,al
  410657:	adc    eax,0x4c5fa773
  41065c:	not    DWORD PTR [ecx]
  41065e:	mov    ds:0x50b9a065,eax
  410663:	loop   0x41068a
  410665:	dec    edx
  410666:	mov    edi,ebp
  410668:	or     BYTE PTR [esi+0x2],dl
  41066b:	cwde   
  41066c:	dec    ebx
  41066d:	adc    DWORD PTR [esi],ecx
  41066f:	add    BYTE PTR [eax],0x48
  410672:	adc    al,0xcb
  410674:	retf   0x5d09
  410677:	icebp  
  410678:	and    ecx,ebx
  41067a:	retf   0x828d
  41067d:	mov    ebx,0xd25932da
  410682:	mov    ah,0xe1
  410684:	nop
  410685:	and    DWORD PTR [ebx+0x6b],edx
  410688:	mov    eax,0xc8b7110d
  41068d:	in     eax,dx
  41068e:	jns    0x4106d4
  410690:	mov    bh,0x97
  410692:	mov    dl,0xf1
  410694:	lds    edx,FWORD PTR [ebx]
  410696:	push   0x5f1f05a9
  41069b:	mov    ds:0x56f7235b,eax
  4106a0:	xor    eax,0x39c83fd1
  4106a5:	ss jg  0x4106bb
  4106a8:	sti    
  4106a9:	jle    0x410659
  4106ab:	jmp    0x4106b9
  4106ad:	adc    BYTE PTR [ecx],ah
  4106af:	adc    al,ch
  4106b1:	ins    BYTE PTR es:[edi],dx
  4106b2:	sbb    DWORD PTR [ebx],esp
  4106b4:	jecxz  0x410701
  4106b6:	pushf  
  4106b7:	xor    al,0xd8
  4106b9:	xchg   ebx,eax
  4106ba:	mov    dl,0x47
  4106bc:	push   edx
  4106bd:	out    dx,eax
  4106be:	mov    dh,0xaf
  4106c0:	jbe    0x4106fc
  4106c2:	sub    eax,0x9ec63721
  4106c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4106c8:	leave  
  4106c9:	ja     0x410661
  4106cb:	and    al,0x5d
  4106cd:	pop    esp
  4106ce:	sbb    DWORD PTR [ecx+0x71],ebp
  4106d1:	or     ebp,esi
  4106d3:	push   cs
  4106d4:	pop    eax
  4106d5:	clc    
  4106d6:	xor    eax,0x3bbce9e2
  4106db:	outs   dx,BYTE PTR ds:[esi]
  4106dc:	paddq  mm6,QWORD PTR [edx+edi*2-0x4ae5cbae]
  4106e4:	pop    edi
  4106e5:	test   BYTE PTR [eax-0x3a0863d6],al
  4106eb:	(bad)  
  4106ed:	mov    ch,0x66
  4106ef:	xchg   bh,bl
  4106f1:	add    BYTE PTR [edi+0x54fd7eaf],ch
  4106f7:	es bswap ecx
  4106fa:	arpl   WORD PTR [ebx+esi*2-0x5cbf250c],sp
  410701:	mov    esp,0xa6ca1f1b
  410706:	jb     0x410695
  410708:	mov    al,ds:0x875fb847
  41070d:	xchg   esp,eax
  41070e:	xchg   ecx,eax
  41070f:	(bad)  
  410710:	leave  
  410711:	loopne 0x4106c3
  410713:	(bad)  
  410714:	cmp    eax,0xb9e00bb6
  410719:	test   esp,esi
  41071b:	push   cs
  41071c:	shr    ecx,cl
  41071e:	xchg   edi,eax
  41071f:	dec    ebp
  410720:	mov    ebp,0x7cff2357
  410725:	adc    al,0xf9
  410727:	sbb    ecx,DWORD PTR [ebx-0x2f826551]
  41072d:	xchg   DWORD PTR [edi+eax*1+0x55],esp
  410731:	test   ebx,ecx
  410733:	sbb    dl,BYTE PTR [edi+eax*4-0x51]
  410737:	lock gs mov ch,0x90
  41073b:	mov    ch,0xdf
  41073d:	push   ecx
  41073e:	loopne 0x41073a
  410740:	mov    DWORD PTR [esi-0x20],esp
  410743:	test   al,0x2f
  410745:	sub    esp,DWORD PTR [edx]
  410747:	idiv   DWORD PTR [esi-0x6deec10d]
  41074d:	pop    ebp
  41074e:	sbb    esi,DWORD PTR [esi-0x43]
  410751:	jno    0x4107ab
  410753:	ja     0x4106f8
  410755:	mov    BYTE PTR [ebp+0x3b],dh
  410758:	adc    ebp,ebp
  41075a:	inc    ecx
  41075b:	xlat   BYTE PTR ds:[ebx]
  41075c:	push   0xffffff9e
  41075e:	clc    
  41075f:	xchg   esi,eax
  410760:	dec    esp
  410761:	dec    esp
  410762:	fiadd  DWORD PTR [edi-0x1b]
  410765:	fmul   QWORD PTR [esi]
  410767:	(bad)  [ecx-0x44824589]
  41076d:	cdq    
  41076e:	sub    BYTE PTR [ebp+ebp*1-0xc],dh
  410772:	adc    BYTE PTR [eax+0x6],ah
  410775:	mov    edi,0x5055d694
  41077a:	pop    ss
  41077b:	gs sti 
  41077d:	fnstsw WORD PTR [esi-0x766b8dbb]
  410783:	lods   al,BYTE PTR ds:[esi]
  410784:	iret   
  410785:	add    BYTE PTR [esi],dl
  410787:	ret    
  410788:	dec    DWORD PTR [ecx]
  41078a:	aad    0xf4
  41078c:	pop    esp
  41078d:	adc    dl,BYTE PTR [edi]
  41078f:	or     dh,ch
  410791:	pop    ecx
  410792:	push   0xcb42e4f0
  410797:	pop    ds
  410798:	sahf   
  410799:	xchg   esi,eax
  41079a:	jge    0x4107a8
  41079c:	shr    bh,0x59
  41079f:	or     al,0xa9
  4107a1:	mov    edx,DWORD PTR [edi+0x4c]
  4107a4:	adc    eax,0x884c6022
  4107a9:	pop    ebp
  4107aa:	jp     0x410811
  4107ac:	test   al,0xce
  4107ae:	(bad)  
  4107af:	xor    eax,0xca188302
  4107b4:	ja     0x41082e
  4107b6:	out    0xa4,eax
  4107b8:	xor    eax,0xd36b428
  4107bd:	cwde   
  4107be:	add    DWORD PTR [esi+ecx*2+0x44],esp
  4107c2:	fst    DWORD PTR [edi-0x2e27d31f]
  4107c8:	retf   0xb17a
  4107cb:	std    
  4107cc:	dec    edx
  4107cd:	or     al,0x8c
  4107cf:	adc    ch,BYTE PTR [esi+edx*8+0x7a]
  4107d3:	xor    BYTE PTR [edi-0x74b0fa66],bl
  4107d9:	mov    ebp,0x75fbaed
  4107de:	ror    BYTE PTR [ebp-0x26],0x72
  4107e2:	push   esi
  4107e3:	imul   ebx,DWORD PTR [eax],0xe8828007
  4107e9:	int    0xef
  4107eb:	test   BYTE PTR [eax+0x1b],bl
  4107ee:	div    esi
  4107f0:	mov    bl,0x9f
  4107f2:	mov    al,ds:0x600b333c
  4107f7:	aas    
  4107f8:	push   cs
  4107f9:	sbb    BYTE PTR [ecx+0x56],ch
  4107fc:	scas   al,BYTE PTR es:[edi]
  4107fd:	cwde   
  4107fe:	sbb    ah,BYTE PTR [eax-0x1f]
  410801:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410802:	iret   
  410803:	jge    0x410807
  410805:	or     eax,0x186d0ce8
  41080a:	and    ch,ch
  41080c:	in     al,dx
  41080d:	ror    BYTE PTR [ebx-0x85febdc],1
  410813:	mov    ebp,0x748c4f17
  410818:	xchg   DWORD PTR [eax],ebp
  41081a:	aam    0x5f
  41081c:	sbb    al,BYTE PTR [esi+0x43]
  41081f:	add    BYTE PTR [edx-0x2e],bh
  410822:	sbb    BYTE PTR [ebx-0x62],0xea
  410826:	ds hlt 
  410828:	cwde   
  410829:	mov    ecx,0x3930f355
  41082e:	repnz popf 
  410830:	jmp    0x92b16163
  410835:	add    eax,0x1932f087
  41083a:	pusha  
  41083b:	adc    cl,BYTE PTR [ebx-0x11]
  41083e:	xor    dh,BYTE PTR [edx+0x68]
  410841:	int3   
  410842:	sti    
  410843:	pop    esp
  410844:	dec    ebx
  410845:	pop    edx
  410846:	inc    ecx
  410847:	push   ss
  410848:	push   esi
  410849:	mov    bl,0xed
  41084b:	ja     0x410849
  41084d:	leave  
  41084e:	or     eax,0x64ec0d10
  410853:	ret    0x150e
  410856:	sub    esi,DWORD PTR [ecx]
  410858:	adc    eax,0xf73efd5f
  41085d:	pop    es
  41085e:	(bad)  
  41085f:	psubsb mm1,QWORD PTR [edx+0x5fda7f70]
  410866:	mov    eax,ds:0x7990be3d
  41086b:	(bad)  
  41086c:	fbld   TBYTE PTR ds:0xd06454d7
  410872:	lods   al,BYTE PTR ds:[esi]
  410873:	xchg   edi,eax
  410874:	loopne 0x410852
  410876:	fsubr  DWORD PTR [edi-0x52]
  410879:	inc    edi
  41087a:	xchg   edi,eax
  41087b:	push   ebp
  41087c:	test   bl,al
  41087e:	xchg   esi,eax
  41087f:	pusha  
  410880:	or     DWORD PTR [edi+0x7348ca0c],0xad344d7a
  41088a:	sub    al,0xbf
  41088c:	daa    
  41088d:	div    eax
  41088f:	xlat   BYTE PTR ds:[ebx]
  410890:	fwait
  410891:	cmc    
  410892:	stos   DWORD PTR es:[edi],eax
  410893:	adc    DWORD PTR [edi+0xd],edx
  410896:	shl    DWORD PTR [esi+0x2089fdc8],cl
  41089c:	fisttp QWORD PTR [ebp-0x6ed2f036]
  4108a2:	xchg   edi,eax
  4108a3:	jecxz  0x410876
  4108a5:	addr16 icebp 
  4108a7:	cld    
  4108a8:	retf   0x7c5b
  4108ab:	loope  0x410914
  4108ad:	adc    ah,BYTE PTR [edi]
  4108af:	stos   DWORD PTR es:[edi],eax
  4108b0:	popa   
  4108b1:	imul   esp,ebx,0x54
  4108b4:	pop    esp
  4108b5:	nop
  4108b6:	or     eax,0xf8ec6e26
  4108bb:	xor    esi,esp
  4108bd:	ss ds aaa 
  4108c0:	cmp    eax,0x4ad5d4ab
  4108c5:	and    BYTE PTR [edi],0x6b
  4108c8:	data16 cmp BYTE PTR [ecx+0x6355d76e],dl
  4108cf:	sub    ebp,DWORD PTR [eax-0x1b]
  4108d2:	test   al,0x1b
  4108d4:	lods   eax,DWORD PTR ds:[esi]
  4108d5:	(bad)  
  4108d6:	mov    WORD PTR [esp+ebp*2],es
  4108d9:	push   eax
  4108da:	mov    ebp,0xb62a51fb
  4108df:	stc    
  4108e0:	inc    esp
  4108e1:	gs mov bh,0xbc
  4108e4:	or     ah,BYTE PTR [ebp+0x49]
  4108e7:	pushf  
  4108e8:	sbb    eax,0x67ad3f5e
  4108ed:	jmp    0x3f666adf
  4108f2:	iret   
  4108f3:	jb     0x410931
  4108f5:	les    esi,FWORD PTR [esi+0x39137c66]
  4108fb:	xchg   ebp,eax
  4108fc:	fwait
  4108fd:	arpl   WORD PTR [ebp+0x0],si
  410900:	rcr    DWORD PTR es:[eax+0x22],0x4c
  410905:	push   edi
  410906:	ja     0x41093b
  410908:	in     al,0x69
  41090a:	jbe    0x4108d7
  41090c:	jae    0x410954
  41090e:	fs fs dec esp
  410911:	fstp   TBYTE PTR [ecx+0xc]
  410914:	minps  xmm5,xmm4
  410917:	lods   al,BYTE PTR ds:[esi]
  410918:	jl     0x410915
  41091a:	xchg   BYTE PTR [ecx+0x6c919c10],cl
  410920:	sub    DWORD PTR fs:[eax+0x350b0d4a],ecx
  410927:	mov    edi,0x4598dad7
  41092c:	push   eax
  41092d:	ret    0xccfd
  410930:	cmp    eax,0xca70a339
  410935:	(bad)  
  410936:	ja     0x410954
  410938:	cwd    
  41093a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41093b:	stos   BYTE PTR es:[edi],al
  41093c:	xchg   ecx,eax
  41093d:	hlt    
  41093e:	dec    ebx
  41093f:	jae    0x410981
  410941:	(bad)  
  410942:	retf   
  410943:	pop    ss
  410944:	mov    esi,0xe46cd54d
  410949:	and    DWORD PTR [esi+0x62565a97],ebp
  41094f:	das    
  410950:	fsubr  DWORD PTR [esi-0x4268cf50]
  410956:	js     0x41094c
  410958:	dec    DWORD PTR [eax]
  41095a:	mov    bl,0xae
  41095c:	addr16 test eax,0xd5645553
  410962:	bound  esp,QWORD PTR [esi-0x19]
  410965:	or     eax,0x3998f84b
  41096a:	aaa    
  41096b:	inc    eax
  41096c:	fs jno 0x4109e4
  41096f:	add    eax,0xabe6c021
  410974:	nop
  410975:	mov    WORD PTR [edx],es
  410977:	or     eax,0x3f1d166
  41097c:	gs ins DWORD PTR es:[edi],dx
  41097e:	mov    ds:0x22979549,eax
  410983:	jbe    0x4109f9
  410985:	push   edi
  410986:	stos   BYTE PTR es:[edi],al
  410987:	mov    edi,0x75ad26a6
  41098c:	(bad)  [esi+0x24a03702]
  410992:	lds    edi,FWORD PTR [edi-0x37]
  410995:	mov    bl,0xa4
  410997:	lds    esi,FWORD PTR [esi]
  410999:	sar    esp,0x3b
  41099c:	xor    bl,0x39
  41099f:	leave  
  4109a0:	jnp    0x410960
  4109a2:	push   cs
  4109a3:	hlt    
  4109a4:	push   ecx
  4109a5:	push   edi
  4109a6:	adc    BYTE PTR [esi],bl
  4109a8:	js     0x4109ce
  4109aa:	jae    0x410989
  4109ac:	push   edi
  4109ad:	sbb    eax,0xd09fdcb5
  4109b2:	repz addr16 push 0xe1ca69ea
  4109b9:	call   0x69190cd0
  4109be:	push   es
  4109bf:	sub    edi,0xb286112a
  4109c5:	jmp    0xdf7cf169
  4109ca:	in     al,0x94
  4109cc:	add    ebp,DWORD PTR [eax]
  4109ce:	test   al,0x53
  4109d0:	gs or  al,0xd5
  4109d3:	sub    DWORD PTR [eax-0x3a],ecx
  4109d6:	into   
  4109d7:	pop    eax
  4109d8:	sub    esp,0x68
  4109db:	les    eax,FWORD PTR [eax-0x6b]
  4109de:	adc    esp,DWORD PTR [ecx]
  4109e0:	add    BYTE PTR [ecx-0x199fc7d4],0xd6
  4109e7:	imul   ebx,DWORD PTR [ecx-0x40764269],0x5c101720
  4109f1:	fcmove st,st(2)
  4109f3:	pop    es
  4109f4:	aam    0x1b
  4109f6:	inc    ebx
  4109f7:	cmp    BYTE PTR gs:[ecx],0x1
  4109fb:	fwait
  4109fc:	scas   eax,DWORD PTR es:[edi]
  4109fd:	sbb    cl,BYTE PTR [eax]
  4109ff:	mov    ah,0xcb
  410a01:	fwait
  410a02:	mov    edx,0x27bfafca
  410a07:	mov    esp,0x66f6a823
  410a0c:	xor    DWORD PTR [ecx+0x3f],ecx
  410a0f:	mov    cl,0x49
  410a11:	pop    edi
  410a12:	adc    BYTE PTR [ebx-0x78490bfb],dl
  410a18:	xchg   BYTE PTR [eax],cl
  410a1a:	sbb    ch,BYTE PTR [edx]
  410a1c:	pushf  
  410a1d:	inc    ah
  410a1f:	jmp    0x410a00
  410a21:	ret    
  410a22:	mov    esi,0x44bea48f
  410a27:	inc    esp
  410a28:	pop    ebx
  410a29:	cmp    DWORD PTR [esi-0x733282e3],ebp
  410a2f:	scas   al,BYTE PTR es:[edi]
  410a30:	in     al,0xa5
  410a32:	inc    esi
  410a33:	push   ebp
  410a34:	cmp    BYTE PTR [edi],cl
  410a36:	sub    bl,bl
  410a38:	adc    BYTE PTR [esi-0x56],0xca
  410a3c:	fmul   DWORD PTR [ebp-0x34]
  410a3f:	les    ebp,FWORD PTR [ebx+esi*2-0x67a8191]
  410a46:	mov    bl,0x10
  410a48:	add    al,bh
  410a4a:	outs   dx,BYTE PTR ds:[esi]
  410a4b:	xor    al,0x22
  410a4d:	popf   
  410a4e:	sub    eax,0x9270cbe0
  410a53:	inc    esp
  410a54:	loope  0x410a26
  410a56:	push   esi
  410a57:	jno    0x410ad8
  410a59:	inc    bp
  410a5b:	mov    edi,0x5279ec78
  410a60:	leave  
  410a61:	mov    ebp,0xea508e84
  410a66:	xchg   ecx,eax
  410a67:	(bad)  
  410a68:	jb     0x410a10
  410a6a:	cmp    al,0x9f
  410a6c:	and    BYTE PTR [ebx],bl
  410a6e:	mov    ds,edi
  410a70:	stos   BYTE PTR es:[edi],al
  410a71:	or     dh,bh
  410a73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a74:	int    0x7d
  410a76:	repz mov ?,ebx
  410a79:	enter  0x7112,0xcd
  410a7d:	mov    bl,0x72
  410a7f:	data16 test BYTE PTR [edi-0x7b],bl
  410a83:	pop    ebp
  410a84:	mov    edi,0x80766d3a
  410a89:	and    ah,BYTE PTR [ecx+0x2b]
  410a8c:	daa    
  410a8d:	inc    edx
  410a8e:	sbb    eax,0x8501ed7f
  410a93:	sbb    esp,eax
  410a95:	xchg   ebp,eax
  410a96:	cli    
  410a97:	fmul   QWORD PTR ds:0xfa824cbe
  410a9d:	je     0x410a56
  410a9f:	repnz push ecx
  410aa1:	hlt    
  410aa2:	pusha  
  410aa3:	pop    es
  410aa4:	scas   al,BYTE PTR es:[edi]
  410aa5:	fld    TBYTE PTR [edx+0x54]
  410aa8:	inc    eax
  410aa9:	jbe    0x410a93
  410aab:	ja     0x410aa9
  410aad:	push   es
  410aae:	xchg   edi,eax
  410aaf:	dec    esp
  410ab1:	xor    ebp,DWORD PTR [eax+0x2f]
  410ab4:	lods   al,BYTE PTR ds:[esi]
  410ab5:	aas    
  410ab6:	inc    edx
  410ab7:	push   ebp
  410ab8:	mov    WORD PTR [eax+0x52],ss
  410abb:	mov    dl,0x67
  410abd:	add    DWORD PTR [edi],eax
  410abf:	aad    0x10
  410ac1:	xlat   BYTE PTR ds:[ebx]
  410ac2:	shr    DWORD PTR [edx+0x5b5dff9d],cl
  410ac8:	rol    BYTE PTR [edi-0x3ea2ae79],cl
  410ace:	mov    esp,0xdf8f4c8c
  410ad3:	pop    ss
  410ad4:	pop    ecx
  410ad5:	xor    eax,0xc39f8dbe
  410ada:	mov    ds:0x12d88094,eax
  410adf:	and    al,0x97
  410ae1:	in     al,dx
  410ae2:	lock out 0x5a,eax
  410ae5:	mov    ebp,0x9804b7b4
  410aea:	aaa    
  410aeb:	dec    ecx
  410aec:	xchg   edi,eax
  410aed:	xor    BYTE PTR [edx+eiz*1],cl
  410af0:	cmp    BYTE PTR [ebp+0x49311c8c],0x58
  410af7:	ss jge 0x410b20
  410afa:	rcr    DWORD PTR [eax-0x11],cl
  410afd:	inc    edx
  410afe:	into   
  410aff:	int3   
  410b00:	in     eax,dx
  410b01:	sbb    eax,0x103733fc
  410b06:	push   cs
  410b07:	ins    DWORD PTR es:[edi],dx
  410b08:	xchg   ebp,eax
  410b09:	in     al,dx
  410b0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b0b:	sub    eax,0x4e4e3ca4
  410b10:	inc    ebx
  410b11:	jl     0x410b7b
  410b13:	push   0xffffffce
  410b15:	sbb    DWORD PTR [bp+si+0x17],ecx
  410b19:	inc    edx
  410b1a:	dec    ecx
  410b1b:	add    eax,0x63f50163
  410b20:	xchg   edi,eax
  410b21:	sbb    dl,bh
  410b23:	jo     0x410b9f
  410b25:	adc    DWORD PTR [edx-0x25],esi
  410b28:	inc    esp
  410b29:	loope  0x410aee
  410b2b:	ror    al,0x97
  410b2e:	addr16 mov esi,0x7cd6c58f
  410b34:	mov    ds:0x75719e57,al
  410b39:	out    dx,eax
  410b3a:	or     ebx,edx
  410b3c:	pop    ebp
  410b3d:	repnz push ds
  410b3f:	cld    
  410b40:	mov    dh,0x26
  410b42:	mov    ds:0xcdb5a7e6,al
  410b47:	in     al,0x54
  410b49:	xchg   ebp,eax
  410b4a:	outs   dx,DWORD PTR ds:[esi]
  410b4b:	push   es
  410b4c:	jp     0x410b72
  410b4e:	sub    al,0x24
  410b50:	ins    BYTE PTR es:[edi],dx
  410b51:	dec    edx
  410b52:	push   ebx
  410b53:	test   DWORD PTR ds:0x31820ca,ecx
  410b59:	call   0xb1973bdb
  410b5e:	(bad)  
  410b60:	add    eax,0x48d9447a
  410b65:	sbb    al,0xf5
  410b67:	push   esp
  410b68:	inc    ebp
  410b69:	xchg   DWORD PTR [esp+ebp*2+0x3],esp
  410b6d:	mov    al,0xc5
  410b6f:	adc    ebx,edx
  410b71:	ret    
  410b72:	mov    bl,0x19
  410b74:	(bad)  
  410b75:	push   ss
  410b76:	test   DWORD PTR [edi+0x6d],0x6a9c3c9c
  410b7d:	xchg   BYTE PTR [eax-0x55eb5530],bh
  410b83:	mov    ds:0x89147dea,eax
  410b88:	pop    ebp
  410b89:	mov    ds:0xb12e74bb,al
  410b8e:	ins    DWORD PTR es:[edi],dx
  410b8f:	sar    bl,1
  410b91:	popf   
  410b92:	sub    al,BYTE PTR [esi+0x670998d0]
  410b98:	sahf   
  410b99:	sub    DWORD PTR [esi-0x260f72b6],esp
  410b9f:	std    
  410ba0:	xchg   esi,eax
  410ba1:	adc    eax,0xd9e3c8a1
  410ba6:	and    al,0x32
  410ba8:	jb     0x410b5e
  410baa:	sub    eax,0x23bf2c29
  410baf:	iret   
  410bb0:	mov    edi,0xdf9ab451
  410bb5:	into   
  410bb6:	cwde   
  410bb7:	pushf  
  410bb8:	xchg   esi,eax
  410bb9:	adc    BYTE PTR gs:[esi-0x1],0x57
  410bbe:	mov    al,0x45
  410bc0:	(bad)  
  410bc1:	xor    DWORD PTR [ebx+0x40fa95c2],edx
  410bc7:	mov    ebx,0x7e2e2ecd
  410bcc:	pop    esp
  410bcd:	mov    eax,0xdeb8bf0f
  410bd2:	shr    ebx,1
  410bd4:	in     eax,0x3d
  410bd6:	mov    edi,edi
  410bd8:	aas    
  410bd9:	mov    ebx,0xa28e9688
  410bde:	jb     0x410b8a
  410be0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410be1:	call   0x204b2498
  410be6:	cmp    DWORD PTR [eax],edi
  410be8:	cs pop edx
  410bea:	jecxz  0x410bb4
  410bec:	test   al,0x74
  410bee:	ret    0x67b4
  410bf1:	mov    ah,0x18
  410bf3:	mov    ah,0x82
  410bf5:	rcr    DWORD PTR [ecx],0xea
  410bf8:	cmp    al,0xd
  410bfa:	jb     0x410bd0
  410bfc:	jmp    0x410c3d
  410bfe:	mov    al,ds:0xc8e9b72
  410c03:	adc    al,cl
  410c05:	iret   
  410c06:	or     DWORD PTR [eax],esi
  410c08:	mov    fs,WORD PTR [ebp+0x9]
  410c0b:	int3   
  410c0c:	bound  esi,QWORD PTR [esi+edx*8+0x42]
  410c10:	jbe    0x410ba4
  410c12:	in     al,0x8e
  410c14:	pop    edi
  410c15:	test   ah,ah
  410c17:	gs ret 0x781
  410c1b:	pusha  
  410c1c:	jmp    0x7cb26e06
  410c21:	rol    dh,cl
  410c23:	dec    eax
  410c24:	xlat   BYTE PTR ds:[ebx]
  410c25:	or     eax,DWORD PTR [edx+0x5234ddd]
  410c2b:	push   ebp
  410c2c:	lods   al,BYTE PTR ds:[esi]
  410c2d:	mov    esi,0x8828aca1
  410c32:	cwde   
  410c33:	push   esp
  410c34:	sti    
  410c35:	aam    0x69
  410c37:	xchg   esp,eax
  410c38:	fisubr DWORD PTR [eax-0x2a]
  410c3b:	or     edi,eax
  410c3d:	add    al,BYTE PTR [esi]
  410c3f:	(bad)  
  410c40:	cmp    eax,DWORD PTR [edx+0x40]
  410c43:	lahf   
  410c44:	loop   0x410ca0
  410c46:	sub    al,0x15
  410c48:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  410c4a:	in     eax,dx
  410c4b:	mov    edx,0xf750412b
  410c50:	xor    al,0x5c
  410c52:	data16 mov ch,0xf1
  410c55:	(bad)  
  410c56:	lock dec ebp
  410c58:	dec    BYTE PTR [ebp+ebp*1-0x56]
  410c5c:	mov    ecx,DWORD PTR [eax]
  410c5e:	sbb    DWORD PTR [eax+ebx*4-0x46ce2766],ecx
  410c65:	cmp    dh,BYTE PTR [esi+0x7023a6b7]
  410c6b:	aad    0x3e
  410c6d:	ror    BYTE PTR [esi+0x5c1315b4],cl
  410c73:	jge    0x410c28
  410c75:	retf   0x4d0b
  410c78:	sbb    ebx,DWORD PTR [ebx+0x1515924d]
  410c7e:	jb     0x410c5c
  410c80:	mov    bh,0xd9
  410c82:	fld    DWORD PTR [ecx+0x4e]
  410c85:	xchg   ebx,eax
  410c86:	retf   0xab2
  410c89:	repnz mov esp,0x3dd2c8b6
  410c8f:	std    
  410c90:	adc    DWORD PTR [edx],esp
  410c92:	jmp    0x410cc9
  410c94:	inc    edx
  410c95:	(bad)  
  410c96:	mov    al,0x1a
  410c98:	outs   dx,DWORD PTR ds:[esi]
  410c99:	rcr    DWORD PTR [esi-0x45edf2c1],cl
  410c9f:	popa   
  410ca0:	test   eax,0x9148762f
  410ca5:	sbb    dl,BYTE PTR [ebp+0x2732663a]
  410cab:	shr    DWORD PTR [edi+0x3d],0x35
  410caf:	enter  0x2613,0xf1
  410cb3:	mov    WORD PTR [ecx-0x10],?
  410cb6:	sbb    DWORD PTR [ecx-0x2b],ebp
  410cb9:	(bad)  
  410cba:	add    dh,BYTE PTR [esi]
  410cbc:	aas    
  410cbd:	mov    dh,0xdb
  410cbf:	xchg   esp,eax
  410cc0:	das    
  410cc1:	sar    BYTE PTR [di+0xe],cl
  410cc5:	ins    BYTE PTR es:[edi],dx
  410cc6:	fbstp  TBYTE PTR [edx-0xf]
  410cc9:	enter  0x7d6e,0xcd
  410ccd:	push   edi
  410cce:	xchg   edi,eax
  410ccf:	xchg   edi,eax
  410cd0:	sub    dl,BYTE PTR [ebx+ebx*2]
  410cd3:	pop    ebx
  410cd4:	in     eax,dx
  410cd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410cd6:	les    edx,FWORD PTR [edi-0x6d]
  410cd9:	jge    0x410d2f
  410cdb:	adc    BYTE PTR [eax+edi*2-0x43],bh
  410cdf:	mov    bh,dl
  410ce1:	mov    ah,0x84
  410ce3:	(bad)  
  410ce4:	pop    ebx
  410ce5:	push   ecx
  410ce6:	std    
  410ce7:	fcomp  QWORD PTR [edx]
  410ce9:	or     al,0x21
  410ceb:	cmp    DWORD PTR [eax],0xea602236
  410cf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410cf2:	ins    DWORD PTR es:[edi],dx
  410cf3:	retf   
  410cf4:	and    DWORD PTR [ebp+0x66f085a],0x473c5574
  410cfe:	and    DWORD PTR [ebx+0x57],0xffffffe9
  410d02:	sub    edx,esp
  410d04:	sub    al,0x31
  410d06:	retf   0x4b
  410d09:	adc    al,0x76
  410d0b:	mov    bl,BYTE PTR [ecx-0x52773b60]
  410d11:	mov    al,ds:0xe6bb36c7
  410d16:	pop    ecx
  410d17:	xor    ah,dh
  410d19:	stos   DWORD PTR es:[edi],eax
  410d1a:	mov    eax,0xdd5e279a
  410d1f:	adc    DWORD PTR [eax-0x3ec754e1],0x3ebcd70f
  410d29:	cli    
  410d2a:	lock mov ebp,esp
  410d2d:	fsubr  st,st(4)
  410d2f:	test   al,0x91
  410d31:	mov    BYTE PTR [edi-0x4a],0x5e
  410d35:	ror    DWORD PTR es:[edi+0x529f7167],1
  410d3c:	sub    al,0x36
  410d3e:	sub    al,0xd9
  410d40:	adc    DWORD PTR [ebp+0x2a3dbf7b],0x60
  410d47:	sbb    eax,eax
  410d49:	pop    edi
  410d4a:	rcr    DWORD PTR [ecx+0x6224e7ee],1
  410d50:	sub    al,0xb8
  410d52:	add    ch,BYTE PTR [ebx+0x27]
  410d55:	aam    0xc6
  410d57:	or     bh,BYTE PTR [edx+0x13837438]
  410d5d:	out    0x2a,al
  410d5f:	aaa    
  410d60:	enter  0x416d,0xc5
  410d64:	or     al,0x96
  410d66:	push   ebp
  410d67:	enter  0x215d,0xff
  410d6b:	cmp    dl,dl
  410d6d:	imul   edx,DWORD PTR [edx],0x56a319c7
  410d73:	sbb    DWORD PTR [ebx+ebp*1],esi
  410d76:	lahf   
  410d77:	sar    BYTE PTR [edx-0x5d],cl
  410d7a:	or     al,0x9a
  410d7c:	int3   
  410d7d:	sahf   
  410d7e:	dec    edx
  410d7f:	cmp    cl,BYTE PTR [ecx]
  410d81:	shl    BYTE PTR [ebx+ebp*8],0xa8
  410d85:	ficomp WORD PTR [edi+0x4894900e]
  410d8b:	push   es
  410d8c:	jb     0x410d86
  410d8e:	jg     0x410d47
  410d90:	mov    ah,0xfc
  410d92:	jle    0x410dcf
  410d94:	into   
  410d95:	adc    edx,esp
  410d97:	jge    0x410d57
  410d99:	or     al,0x9f
  410d9b:	rcl    DWORD PTR [esi+0x65],cl
  410d9e:	call   0xe750cdda
  410da3:	test   al,0xc6
  410da5:	gs repz mov ebx,0x5208a90c
  410dac:	rol    eax,1
  410dae:	(bad)
  410db1:	sub    al,0xa1
  410db3:	fs sub eax,0x2b6e751f
  410db9:	pop    edi
  410dba:	fxch   st(4)
  410dbc:	mov    ds:0xab749913,al
  410dc1:	and    eax,0x7c
  410dc4:	stos   DWORD PTR es:[edi],eax
  410dc5:	push   ds
  410dc6:	data16 lahf 
  410dc8:	or     DWORD PTR [eax+ebx*4+0x53],ecx
  410dcc:	repnz push ecx
  410dce:	dec    ecx
  410dcf:	xchg   esi,eax
  410dd0:	jp     0x410d7c
  410dd2:	dec    esp
  410dd3:	(bad)  
  410dd4:	repz mov eax,0x58a7265c
  410dda:	mov    eax,ds:0x9347743c
  410ddf:	or     BYTE PTR [ebp+0xfae4f9a],cl
  410de5:	repz mov eax,0x74e90cb6
  410deb:	mov    ds:0x7c2b9e6e,eax
  410df0:	mov    edx,edi
  410df2:	mov    eax,0xc4844868
  410df7:	repnz dec ecx
  410df9:	inc    ebp
  410dfa:	inc    edx
  410dfb:	pop    ds
  410dfc:	jo     0x410dc2
  410dfe:	imul   esi,DWORD PTR ds:0x8a91b8a5,0x6c
  410e05:	cmp    BYTE PTR [ebx-0x47],cl
  410e08:	dec    esi
  410e09:	ret    0x950c
  410e0c:	pop    ebp
  410e0d:	shr    ecx,1
  410e0f:	lods   al,BYTE PTR ds:[esi]
  410e10:	call   0xa3691d73
  410e15:	stc    
  410e16:	cmp    BYTE PTR [ecx-0x4],cl
  410e19:	loope  0x410dad
  410e1b:	add    al,0x94
  410e1d:	pop    ebx
  410e1e:	loope  0x410e65
  410e20:	sbb    DWORD PTR [ebp-0x3650451],0xcb984b65
  410e2a:	or     ebx,DWORD PTR [ebp-0x25]
  410e2d:	and    eax,0x10de2655
  410e32:	js     0x410e46
  410e34:	test   DWORD PTR [eax*8-0x577823c0],eax
  410e3b:	push   0xd15b14d3
  410e40:	arpl   WORD PTR [esi+0x5e],sp
  410e43:	sub    ch,BYTE PTR [ebx-0x1a3af5bb]
  410e49:	pop    es
  410e4a:	call   0x12958de3
  410e4f:	cmc    
  410e50:	test   al,0x38
  410e52:	sbb    BYTE PTR [eax],dl
  410e54:	dec    ebx
  410e55:	(bad)  
  410e56:	xlat   BYTE PTR ds:[ebx]
  410e57:	ja     0x410e84
  410e59:	cdq    
  410e5a:	pop    esi
  410e5b:	mov    ds:0x8900e3a5,eax
  410e60:	jnp    0x410e0a
  410e62:	les    edi,FWORD PTR [eax+0x4a]
  410e65:	sar    BYTE PTR [esi*2-0x2420b814],cl
  410e6c:	inc    ecx
  410e6d:	clc    
  410e6e:	lods   al,BYTE PTR ds:[esi]
  410e6f:	sbb    eax,0x725b9bd5
  410e74:	sub    al,0x74
  410e76:	inc    eax
  410e77:	hlt    
  410e78:	das    
  410e79:	enter  0x3e58,0x66
  410e7d:	nop
  410e7e:	(bad)  
  410e7f:	js     0x410e39
  410e81:	stos   BYTE PTR es:[edi],al
  410e82:	pop    eax
  410e83:	repz jae 0x410e8a
  410e86:	imul   DWORD PTR [ebp-0x44cd2db8]
  410e8c:	arpl   WORD PTR [edi+0x76],bp
  410e8f:	repnz (bad) 
  410e91:	data16 mov cl,0xd9
  410e94:	pop    ecx
  410e95:	in     al,0x2c
  410e97:	push   cs
  410e98:	pushf  
  410e99:	(bad)  
  410e9a:	xor    al,0xa9
  410e9c:	gs xchg edx,eax
  410e9e:	or     ch,BYTE PTR [edx]
  410ea0:	pusha  
  410ea1:	ins    DWORD PTR es:[edi],dx
  410ea2:	pusha  
  410ea3:	imul   ecx,ecx,0xffffffc7
  410ea6:	(bad)  
  410ea7:	fucomip st,st(0)
  410ea9:	push   edi
  410eaa:	cmp    BYTE PTR [ecx+eax*4-0x3a],dh
  410eae:	pop    ss
  410eaf:	add    cl,ch
  410eb1:	cdq    
  410eb2:	jg     0x410e73
  410eb4:	mov    cl,0x6
  410eb6:	inc    edi
  410eb7:	adc    bl,bh
  410eb9:	and    ch,BYTE PTR [ebp+ebp*2-0x1c]
  410ebd:	push   0xb3639ac3
  410ec2:	xor    eax,0x75f66c24
  410ec7:	xlat   BYTE PTR ds:[ebx]
  410ec8:	jb     0x410f45
  410eca:	mov    cl,BYTE PTR [esi-0x1d3d38df]
  410ed0:	and    esi,edi
  410ed2:	xlat   BYTE PTR gs:[ebx]
  410ed4:	mov    dh,0x3e
  410ed6:	pop    ecx
  410ed7:	ss sbb al,0xcb
  410eda:	stc    
  410edb:	scas   eax,DWORD PTR es:[edi]
  410edc:	test   ah,al
  410ede:	adc    bh,bh
  410ee0:	push   edx
  410ee1:	fs jg  0x410ee1
  410ee4:	dec    esp
  410ee5:	cli    
  410ee6:	jne    0x410f19
  410ee8:	add    eax,0xf6e35d3e
  410eed:	xor    dl,BYTE PTR [edx+0x72]
  410ef0:	push   eax
  410ef1:	ret    
  410ef2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ef3:	push   edi
  410ef4:	cld    
  410ef5:	mov    BYTE PTR [esi],ch
  410ef7:	ret    0xdcf4
  410efa:	xor    dl,ah
  410efc:	or     al,0x30
  410efe:	loope  0x410eed
  410f00:	lock js 0x410ebe
  410f03:	push   esp
  410f04:	iret   
  410f05:	mov    ecx,0xd52bb12
  410f0a:	loop   0x410ebc
  410f0c:	lds    ebx,FWORD PTR [eax-0x5d40daa4]
  410f12:	pop    edx
  410f13:	fistp  QWORD PTR [esi+0x4a5470e9]
  410f19:	jmp    ebx
  410f1b:	xlat   BYTE PTR ds:[ebx]
  410f1c:	pop    edi
  410f1d:	fwait
  410f1e:	mov    ?,WORD PTR [edx+0x4]
  410f21:	gs in  eax,0xfc
  410f24:	mov    es,WORD PTR [eax-0x67c5d23a]
  410f2a:	scas   al,BYTE PTR es:[edi]
  410f2b:	mov    dl,0x30
  410f2d:	mov    ds:0x8eba9d42,al
  410f32:	and    edx,ebx
  410f34:	push   es
  410f35:	test   DWORD PTR [edi-0x57a843fd],esi
  410f3b:	loope  0x410efb
  410f3d:	retf   
  410f3e:	jp     0x410f83
  410f40:	and    dl,BYTE PTR [ecx]
  410f42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f44:	or     DWORD PTR gs:[esi+0x68],edi
  410f48:	cmc    
  410f49:	mov    esp,0x3848e1a8
  410f4e:	cli    
  410f4f:	add    al,0xb0
  410f51:	cmp    edi,0x2db77261
  410f57:	popa   
  410f58:	push   0x7c
  410f5a:	push   esp
  410f5b:	(bad)  
  410f5c:	sbb    al,0x1c
  410f5e:	lock ds (bad) 
  410f62:	pop    esi
  410f63:	ret    
  410f64:	ja     0x410f6d
  410f66:	xor    al,0xe1
  410f68:	ja     0x410f28
  410f6a:	fsubr  st,st(0)
  410f6c:	mov    esp,0x53150d9a
  410f71:	and    DWORD PTR [ebp-0x43],0x4bbe2577
  410f78:	pop    esi
  410f79:	add    al,0x17
  410f7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f7c:	sub    dh,BYTE PTR [edx+edi*2+0x7dd058ef]
  410f83:	pop    esp
  410f84:	das    
  410f85:	jae    0x410f9c
  410f87:	mov    ecx,0x33c554dd
  410f8c:	dec    esp
  410f8d:	xlat   BYTE PTR ds:[ebx]
  410f8e:	mov    ah,0x73
  410f90:	sti    
  410f91:	pop    ebp
  410f92:	sbb    DWORD PTR [eax],ecx
  410f94:	and    ch,dl
  410f96:	sbb    BYTE PTR [edx],0x84
  410f99:	mov    eax,ds:0x9a0869ad
  410f9e:	ins    DWORD PTR es:[edi],dx
  410f9f:	dec    esi
  410fa0:	add    al,0xd5
  410fa2:	sub    BYTE PTR [edi+ebx*4],dh
  410fa5:	call   0xe560:0xa9a9bf9f
  410fac:	push   ds
  410fad:	bound  esp,QWORD PTR [ebx+ebx*1]
  410fb0:	test   BYTE PTR [ecx+0x6d],dh
  410fb3:	add    ch,BYTE PTR [edx-0x53c35685]
  410fb9:	int3   
  410fba:	sbb    DWORD PTR [ebx+0x3e],ebp
  410fbd:	fwait
  410fbe:	xor    eax,DWORD PTR [eax+0x9]
  410fc1:	sub    ebx,DWORD PTR [ecx]
  410fc3:	mov    al,0xb7
  410fc5:	(bad)  
  410fc6:	fdiv   QWORD PTR [esi+ebp*8-0x63d184a0]
  410fcd:	mov    bl,BYTE PTR [ebp-0x4d]
  410fd0:	nop
  410fd1:	jmp    0x94ab:0x5dfc97b5
  410fd8:	mov    ecx,es
  410fda:	sbb    eax,0x963b7232
  410fdf:	sub    BYTE PTR [ebx+0x7e],0x57
  410fe3:	mov    al,ds:0x21f78f55
  410fe8:	fcmovb st,st(7)
  410fea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410feb:	ja     0x410fd0
  410fed:	xor    eax,0xd74046da
  410ff2:	fwait
  410ff3:	imul   ecx,ebp,0xca4e731a
  410ff9:	in     al,0x12
  410ffb:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ffd:	xchg   DWORD PTR [ecx-0x6d],edi
  411000:	mov    ds:0x29f227da,al
  411005:	sub    dl,BYTE PTR [esi]
  411007:	in     eax,0x11
  411009:	sub    DWORD PTR [edi-0x35],edx
  41100c:	call   0xfa842068
  411011:	int    0xa
  411013:	sub    cl,BYTE PTR [edx-0x29c8ce70]
  411019:	ja     0x41106a
  41101b:	loope  0x411030
  41101d:	jb     0x41100e
  41101f:	add    al,bl
  411021:	cld    
  411022:	bound  ebp,QWORD PTR [edi]
  411024:	inc    esp
  411025:	push   eax
  411026:	pop    ebp
  411027:	push   ecx
  411028:	js     0x411093
  41102a:	xchg   ecx,eax
  41102b:	inc    ebx
  41102c:	cmp    esi,edx
  41102e:	mov    ds:0x1fe9e8fe,eax
  411033:	add    BYTE PTR [edi+0x17b076af],al
  411039:	mov    bl,0x7c
  41103b:	retf   
  41103c:	mov    cs,WORD PTR [eax]
  41103e:	call   0x532471bd
  411043:	inc    esi
  411044:	test   al,0x95
  411046:	cdq    
  411047:	or     DWORD PTR [ebx-0x64eaace9],eax
  41104d:	or     esp,DWORD PTR [esi]
  41104f:	xchg   esi,eax
  411050:	adc    al,0x2d
  411052:	(bad)  
  411053:	pop    esp
  411054:	sbb    al,0xc2
  411056:	fisubr WORD PTR [ebp+0xa]
  411059:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41105a:	jnp    0x411031
  41105c:	xor    ebp,esi
  41105e:	add    DWORD PTR [eax+0xa],0x74
  411062:	mov    esi,0x14b9777d
  411067:	xor    edx,DWORD PTR [esi-0x2501e979]
  41106d:	sti    
  41106e:	jge    0x411010
  411070:	cld    
  411071:	fist   WORD PTR [edx+0x4c019531]
  411077:	cmp    al,0x9f
  411079:	fsubr  st(6),st
  41107b:	pop    ss
  41107c:	and    ch,ah
  41107e:	retf   0x461f
  411081:	je     0x4110e1
  411083:	jl     0x4110e6
  411085:	push   edx
  411086:	ror    DWORD PTR [ebp+ebx*8+0x20c12839],1
  41108d:	push   0xffffff9d
  41108f:	rcr    DWORD PTR [ecx],1
  411091:	push   ebx
  411092:	adc    al,al
  411094:	cmc    
  411095:	neg    BYTE PTR [ecx-0x29]
  411098:	ins    BYTE PTR es:[edi],dx
  411099:	dec    DWORD PTR [edx]
  41109b:	sbb    esp,DWORD PTR [eax+0x631497e2]
  4110a1:	lds    esp,FWORD PTR [ebp+0x41]
  4110a4:	and    ebx,esi
  4110a6:	sub    eax,0x11842dd
  4110ab:	iret   
  4110ac:	push   edi
  4110ad:	scas   al,BYTE PTR es:[edi]
  4110ae:	out    0x9d,eax
  4110b0:	jae    0x411118
  4110b2:	lea    esi,[ecx+0x7e]
  4110b5:	jmp    0x4110a8
  4110b7:	call   0x2a7f:0x46fa2e43
  4110be:	(bad)  
  4110bf:	loope  0x41112e
  4110c1:	mov    BYTE PTR [eax-0x1398d6cc],cl
  4110c7:	into   
  4110c8:	sbb    DWORD PTR [ecx-0x46],edx
  4110cb:	idiv   dh
  4110cd:	dec    ecx
  4110ce:	xor    ch,BYTE PTR [edi-0x4d]
  4110d1:	mov    ds:0xbc8cd4f6,al
  4110d6:	xor    DWORD PTR [ebp+0x73],edx
  4110d9:	shl    edi,0xa9
  4110dc:	(bad)  
  4110dd:	mov    al,ds:0x19924cb9
  4110e2:	mov    bh,0x89
  4110e4:	iret   
  4110e5:	xchg   esi,eax
  4110e6:	push   0x1c
  4110e8:	and    al,0x99
  4110ea:	cmp    DWORD PTR [ecx-0x31e63de0],0x10
  4110f1:	jmp    0x128:0x930a3d9c
  4110f8:	iret   
  4110f9:	sbb    eax,0x3c203240
  4110fe:	jg     0x41110b
  411100:	ret    0x88b2
  411103:	pop    ebp
  411104:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411105:	sub    bl,BYTE PTR [edi-0x7c]
  411108:	gs scas eax,DWORD PTR es:[edi]
  41110a:	enter  0x703a,0x16
  41110e:	xchg   esp,eax
  41110f:	mov    esi,0x27dc1d16
  411114:	push   edi
  411115:	fst    DWORD PTR [eax]
  411117:	mov    edx,0x1f7a8688
  41111c:	(bad)
  41111f:	inc    ebx
  411120:	in     eax,dx
  411121:	in     eax,0x67
  411123:	popa   
  411124:	cdq    
  411125:	push   cs
  411126:	(bad)  
  411127:	int    0xb4
  411129:	push   esi
  41112a:	bound  eax,QWORD PTR [esp+eax*4]
  41112d:	cli    
  41112e:	adc    ch,cl
  411130:	push   ds
  411131:	aam    0xb4
  411133:	popf   
  411134:	jae    0x4110f5
  411136:	inc    BYTE PTR [edi+0x14]
  411139:	popa   
  41113a:	in     eax,0xc9
  41113c:	push   eax
  41113d:	mov    edi,0x63aa9f98
  411142:	or     al,0x15
  411144:	cmp    BYTE PTR [edi],ah
  411146:	jnp    0x411150
  411148:	push   edx
  411149:	dec    edx
  41114a:	(bad)  
  41114b:	das    
  41114c:	mov    edi,0x6b96d2e0
  411151:	ins    DWORD PTR es:[edi],dx
  411152:	nop
  411153:	xchg   edi,eax
  411154:	sub    al,0x95
  411156:	repz or al,0xc0
  411159:	(bad)  
  41115a:	adc    BYTE PTR [eax-0x7494faec],dl
  411160:	xchg   bh,ah
  411162:	and    DWORD PTR [bx+si+0x4f],eax
  411166:	es call 0x5a525ada
  41116c:	ror    DWORD PTR [ebx-0x50],cl
  41116f:	lock inc edi
  411171:	inc    esi
  411172:	int3   
  411173:	hlt    
  411174:	push   ss
  411175:	dec    edx
  411176:	pop    edx
  411177:	cwde   
  411178:	fnstcw WORD PTR [edi]
  41117a:	dec    ecx
  41117b:	or     BYTE PTR [esi-0x1d9818f1],al
  411181:	lock cmp cl,BYTE PTR [edi]
  411184:	aad    0xdc
  411186:	daa    
  411187:	adc    bl,BYTE PTR [eax+0x5]
  41118a:	and    eax,0x2d20fe08
  41118f:	mul    BYTE PTR [ebx-0x376d5c5c]
  411195:	or     DWORD PTR [esi+0x1ebfc8c9],0xffffffd0
  41119c:	stos   BYTE PTR es:[edi],al
  41119d:	mov    ds:0x55fafdc1,eax
  4111a2:	enter  0x1431,0x4d
  4111a6:	retf   0x1abf
  4111a9:	out    0x4b,eax
  4111ab:	mov    ecx,0x3363bc79
  4111b0:	inc    esi
  4111b1:	mov    esi,0xe46e075
  4111b6:	pushf  
  4111b7:	and    al,0x21
  4111b9:	sti    
  4111ba:	and    DWORD PTR [ecx],eax
  4111bc:	xchg   BYTE PTR ds:0x8f2b416d,dh
  4111c2:	and    eax,0xd4e8c0b5
  4111c7:	retf   
  4111c8:	mov    ch,0xef
  4111ca:	fimul  DWORD PTR [esi+ebx*1+0x3]
  4111ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111cf:	mov    dl,0xc7
  4111d1:	add    al,0x3c
  4111d3:	fcomp  DWORD PTR [eax+0x4]
  4111d6:	in     al,0xf7
  4111d8:	iret   
  4111d9:	addr16 mov al,ds:0xe07c
  4111dd:	adc    eax,0xe89bdba1
  4111e2:	cwde   
  4111e3:	out    dx,al
  4111e4:	mov    al,ds:0x7a9949c0
  4111e9:	mov    ds:0x37c00c26,al
  4111ee:	cdq    
  4111ef:	xchg   dl,ah
  4111f1:	cmp    eax,0xecf65f2a
  4111f6:	or     eax,0xe93a97a2
  4111fb:	lods   eax,DWORD PTR ds:[esi]
  4111fc:	fmul   DWORD PTR [edx+0x66]
  4111ff:	retf   
  411200:	call   0x1662:0xbeac33dc
  411207:	sbb    al,bh
  411209:	cld    
  41120a:	jb     0x41124d
  41120c:	fistp  WORD PTR [ecx+0x8]
  41120f:	mov    cl,0xdb
  411211:	cmp    DWORD PTR [ecx+ebx*2+0x12],edi
  411215:	add    eax,ebp
  411217:	xor    BYTE PTR [edx-0x5909d7c3],ch
  41121d:	retf   0xae5b
  411220:	cmc    
  411221:	cmp    BYTE PTR [edi+0x18],bh
  411224:	fucom  st(0)
  411226:	das    
  411227:	cmp    ebp,eax
  411229:	pushf  
  41122a:	add    BYTE PTR [edx],bh
  41122c:	pop    edi
  41122d:	and    al,0x57
  41122f:	lods   al,BYTE PTR ds:[esi]
  411230:	jae    0x4111fd
  411232:	jl     0x411256
  411234:	call   0x736d940b
  411239:	and    ebp,DWORD PTR [esi-0x6f9166de]
  41123f:	test   DWORD PTR [edx],eax
  411241:	jge    0x411280
  411243:	adc    eax,0xf05042cc
  411248:	cmp    al,0xee
  41124a:	lods   eax,DWORD PTR ds:[esi]
  41124b:	leave  
  41124c:	fsubr  QWORD PTR [edx+0x7a]
  41124f:	fwait
  411250:	or     al,0x97
  411252:	sbb    eax,0x99ae00fd
  411257:	ret    
  411258:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411259:	jg     0x4111e2
  41125b:	cmp    edx,DWORD PTR [edi+edi*2+0x36993ce6]
  411262:	mov    ebp,0x5c502d4a
  411267:	leave  
  411268:	push   0xc
  41126a:	in     eax,dx
  41126b:	inc    esp
  41126c:	retf   0xb6bf
  41126f:	sub    BYTE PTR [eax-0x7f5ec9a3],dl
  411275:	loope  0x4112c4
  411277:	cmp    eax,0x92583059
  41127c:	jb     0x4112ab
  41127e:	fdivp  st(2),st
  411280:	sti    
  411281:	rep stos DWORD PTR es:[edi],eax
  411283:	arpl   WORD PTR [edx],bx
  411285:	addr16 mov eax,0x8d22a213
  41128b:	sbb    eax,0xfa5e36e0
  411290:	jmp    0x4112ca
  411292:	into   
  411293:	push   cs
  411294:	cld    
  411295:	popf   
  411296:	ds or  al,0xbd
  411299:	daa    
  41129a:	out    0x9e,al
  41129c:	inc    ebx
  41129d:	or     esi,ecx
  41129f:	fnsave [edi-0x1c]
  4112a2:	outs   dx,BYTE PTR ds:[esi]
  4112a3:	jmp    0x9148:0xeeac144b
  4112aa:	icebp  
  4112ab:	sub    eax,0x72b8f772
  4112b0:	xchg   al,dl
  4112b2:	push   ebx
  4112b3:	inc    esp
  4112b4:	ret    0x6d9c
  4112b7:	inc    ebp
  4112b8:	(bad)  
  4112b9:	mov    ch,cl
  4112bb:	in     al,0xf3
  4112bd:	sub    edx,DWORD PTR [esi+0x7b3b085d]
  4112c3:	out    dx,eax
  4112c4:	jbe    0x411276
  4112c6:	outs   dx,BYTE PTR ds:[esi]
  4112c7:	add    BYTE PTR [edi-0x46],0x21
  4112cb:	sub    eax,0x3f59beff
  4112d0:	sti    
  4112d1:	xchg   ebx,ecx
  4112d3:	fdiv   QWORD PTR [eax+0x19]
  4112d6:	dec    edx
  4112d7:	jl     0x4112de
  4112d9:	dec    esp
  4112da:	mov    edx,0xd471ce1d
  4112df:	ret    0x4e54
  4112e2:	jl     0x411308
  4112e4:	in     al,0xe3
  4112e6:	loopne 0x41134e
  4112e8:	outs   dx,DWORD PTR ds:[esi]
  4112e9:	sbb    DWORD PTR [edi],esp
  4112eb:	mov    BYTE PTR [edi+eiz*1-0x27],al
  4112ef:	cmp    edx,DWORD PTR [ecx+edx*4+0x34]
  4112f3:	and    edi,DWORD PTR [ecx-0x4]
  4112f6:	and    al,0xf1
  4112f8:	pop    ebx
  4112f9:	and    BYTE PTR ds:0x93058d04,al
  4112ff:	sbb    esi,DWORD PTR [esi]
  411301:	test   bl,bh
  411303:	pop    eax
  411304:	pop    esi
  411305:	jno    0x41128d
  411307:	cmp    al,0xb2
  411309:	sbb    ecx,eax
  41130b:	rol    DWORD PTR [eax+0x13a1aac8],0xba
  411312:	hlt    
  411313:	xlat   BYTE PTR ds:[ebx]
  411314:	add    DWORD PTR [edi],esi
  411316:	ins    DWORD PTR es:[edi],dx
  411317:	outs   dx,BYTE PTR ds:[esi]
  411318:	dec    ebp
  411319:	ins    DWORD PTR es:[edi],dx
  41131a:	adc    DWORD PTR [eax+0x4],edi
  41131d:	and    al,0xdd
  41131f:	dec    ebp
  411320:	mov    ch,0x6
  411322:	push   eax
  411323:	lock fild DWORD PTR [ebp-0xb67d911]
  41132a:	xchg   ebp,eax
  41132b:	fadd   DWORD PTR [edi-0x7c]
  41132e:	and    esi,DWORD PTR [ebx+0x6e]
  411331:	iret   
  411332:	lods   eax,DWORD PTR ds:[esi]
  411333:	bound  ebx,QWORD PTR [eax+0x32]
  411336:	hlt    
  411337:	in     eax,0x86
  411339:	test   DWORD PTR [ecx-0x311c967e],ecx
  41133f:	ds dec ebx
  411341:	fcmovbe st,st(7)
  411343:	loope  0x411317
  411345:	push   0x5e
  411347:	sub    eax,0xc456201
  41134c:	je     0x411367
  41134e:	in     al,dx
  41134f:	les    esi,FWORD PTR [eax+0x57]
  411352:	in     eax,dx
  411353:	aam    0xf7
  411355:	jle    0x41135f
  411357:	jp     0x4113be
  411359:	add    BYTE PTR [edi-0x79],0x96
  41135d:	cs xchg edi,eax
  41135f:	out    dx,eax
  411360:	dec    edx
  411361:	shr    bh,1
  411363:	adc    BYTE PTR [edi+0x6c565a37],0x98
  41136a:	fsub   DWORD PTR [esi-0x94a30a8]
  411370:	jno    0x4113ec
  411372:	jo     0x4113cc
  411374:	cmpxchg ecx,edi
  411377:	addr16 mov ebx,0x1729f99a
  41137d:	fs push edx
  41137f:	jg     0x411391
  411381:	sahf   
  411382:	jae    0x4113e2
  411384:	pop    edx
  411385:	leave  
  411386:	ror    ch,cl
  411388:	adc    al,0x34
  41138a:	ins    BYTE PTR es:[edi],dx
  41138b:	fwait
  41138c:	lea    edi,[esi-0x2d]
  41138f:	std    
  411390:	push   ebp
  411391:	cmp    bl,0xc1
  411394:	loop   0x4113cd
  411396:	out    dx,al
  411397:	std    
  411398:	add    eax,0x761b0af3
  41139d:	mov    esi,0xbfd3a618
  4113a2:	xor    esi,DWORD PTR [ecx-0x74a47295]
  4113a8:	into   
  4113a9:	mov    al,ds:0xf6729dba
  4113ae:	cs dec esp
  4113b0:	push   esp
  4113b1:	lahf   
  4113b2:	cli    
  4113b3:	mov    edx,0x78b1caf4
  4113b8:	loop   0x41136c
  4113ba:	cld    
  4113bb:	jmp    0x2d83f758
  4113c0:	add    eax,0x97ab55a0
  4113c5:	and    eax,0x613b378d
  4113ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113cb:	fbstp  TBYTE PTR [ebp+edx*4-0x6e]
  4113cf:	out    dx,eax
  4113d0:	pop    ds
  4113d1:	fst    DWORD PTR [ebp+0x38]
  4113d4:	jmp    0xf142:0x827dfc03
  4113db:	sbb    bh,al
  4113dd:	lea    edx,[edi]
  4113df:	mov    bh,0x9f
  4113e1:	jno    0x4113e9
  4113e3:	ret    
  4113e4:	push   esp
  4113e5:	jns    0x411395
  4113e7:	in     eax,dx
  4113e8:	mov    ah,0x9c
  4113ea:	and    edx,DWORD PTR [esi]
  4113ec:	mov    ebx,0x50a3a39e
  4113f1:	cmp    eax,0x629b79ec
  4113f6:	mov    ds:0xe796f759,al
  4113fb:	and    al,0x4
  4113fd:	test   DWORD PTR [edx+edx*1+0x1f],ebp
  411401:	aaa    
  411402:	(bad)  
  411403:	fs add al,0x37
  411406:	repz sub al,0x1f
  411409:	out    dx,eax
  41140a:	rcl    DWORD PTR [eax],0x1f
  41140d:	xchg   ecx,eax
  41140e:	adc    bl,ah
  411410:	pop    esi
  411411:	push   esi
  411412:	enter  0x5e48,0xef
  411416:	out    0x6a,eax
  411418:	or     eax,DWORD PTR [ebx+ecx*1-0xa]
  41141c:	call   0x650a4705
  411421:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411422:	in     al,dx
  411423:	sub    eax,0x728c6ad0
  411428:	enter  0x9bc,0x49
  41142c:	sub    edi,DWORD PTR [ecx]
  41142e:	adc    BYTE PTR [ebx],0x66
  411431:	adc    al,0xfa
  411433:	fadd   QWORD PTR [edi]
  411435:	gs nop
  411437:	dec    edi
  411438:	fild   WORD PTR [ebx+0x79a442f3]
  41143e:	je     0x411466
  411440:	ror    DWORD PTR [eax],0xcd
  411443:	sahf   
  411444:	mov    dl,0x13
  411446:	icebp  
  411447:	or     eax,0x71107c18
  41144c:	aaa    
  41144d:	xchg   edx,eax
  41144e:	mov    dl,0xa1
  411450:	mov    esi,0x6e54dcf0
  411455:	xchg   dl,cl
  411457:	sbb    BYTE PTR [esi],ah
  411459:	and    al,0x7c
  41145b:	adc    eax,0x83340eb1
  411460:	(bad)  
  411462:	loopne 0x4113e5
  411464:	mov    dh,0x7e
  411466:	or     al,0x70
  411468:	sbb    dh,cl
  41146a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41146b:	pop    edi
  41146c:	pop    edx
  41146d:	daa    
  41146e:	mov    ecx,0x8ee8b934
  411473:	jnp    0x41145c
  411475:	inc    edi
  411476:	push   edx
  411477:	jo     0x411412
  411479:	in     eax,0x2b
  41147b:	(bad)  
  41147d:	sbb    ebx,DWORD PTR [edi+ecx*2-0x6cbcf78]
  411484:	cld    
  411485:	cmp    DWORD PTR [ebx-0x7097dada],esi
  41148b:	das    
  41148c:	int3   
  41148d:	in     eax,dx
  41148e:	dec    eax
  41148f:	inc    edi
  411490:	add    DWORD PTR [edi-0x4f69608e],ebp
  411496:	push   es
  411497:	push   ds
  411498:	ins    DWORD PTR es:[edi],dx
  411499:	in     eax,dx
  41149a:	push   edi
  41149b:	mov    al,0xa7
  41149d:	jo     0x411482
  41149f:	in     eax,dx
  4114a0:	push   cs
  4114a1:	xchg   BYTE PTR [eax+0x22],ch
  4114a4:	pushf  
  4114a5:	xor    dl,BYTE PTR [edi+0xcada06f]
  4114ab:	fnstenv [ecx-0x5f116b25]
  4114b1:	hlt    
  4114b2:	mov    ebx,0xe256708a
  4114b7:	mov    esi,0x5f166c3b
  4114bc:	xlat   BYTE PTR ds:[ebx]
  4114bd:	stos   DWORD PTR es:[edi],eax
  4114be:	jb     0x4114fc
  4114c0:	mov    esp,0xd2a5c6a2
  4114c5:	sbb    eax,ebp
  4114c7:	mov    ebp,0x13ea749e
  4114cc:	and    edx,DWORD PTR [ebp-0x4c476d7d]
  4114d2:	lea    esp,[ebx]
  4114d4:	or     dl,BYTE PTR [esp+ebx*8+0x43bcb526]
  4114db:	jne    0x411541
  4114dd:	cmp    DWORD PTR [esi-0x1a722cba],eax
  4114e3:	ins    DWORD PTR es:[edi],dx
  4114e4:	popa   
  4114e5:	fsubr  QWORD PTR [ebx+0x64]
  4114e8:	mov    ebx,0x6eb23f5a
  4114ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114ef:	aam    0xe4
  4114f1:	add    eax,0xf22b84e1
  4114f6:	(bad)  
  4114f9:	enter  0xd38a,0x0
  4114fd:	int3   
  4114fe:	lock daa 
  411500:	in     eax,dx
  411501:	jge    0x4114fb
  411503:	scas   eax,DWORD PTR es:[edi]
  411504:	leave  
  411505:	repnz stos BYTE PTR es:[edi],al
  411507:	inc    esp
  411508:	jge    0x411499
  41150a:	cwde   
  41150b:	mov    bl,0x4
  41150d:	leave  
  41150e:	fisttp QWORD PTR [ecx-0x461229d5]
  411514:	sub    al,0x52
  411516:	ror    BYTE PTR ss:[ebp-0x187ed1c7],0xd1
  41151e:	push   ecx
  41151f:	mov    gs:0x9ad01f86,al
  411525:	repnz mov cs,WORD PTR [ebp-0x46f2d6b8]
  41152c:	cmp    edi,0xffffff8b
  41152f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411530:	cmp    eax,0xa99f4043
  411535:	inc    esp
  411536:	(bad)  
  411538:	stc    
  411539:	pop    ecx
  41153a:	call   0xd0a919a5
  41153f:	jg     0x41153c
  411541:	aad    0x74
  411543:	scas   eax,DWORD PTR es:[edi]
  411544:	xchg   ecx,eax
  411545:	es fwait
  411547:	jne    0x411536
  411549:	cdq    
  41154a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41154b:	mov    esi,0x8e9e082f
  411550:	or     eax,DWORD PTR [esi+0x1]
  411553:	test   BYTE PTR [edx+0x39],0xb
  411557:	dec    ebp
  411558:	pop    es
  411559:	jnp    0x4114f6
  41155b:	sti    
  41155c:	mov    esp,DWORD PTR [edx+0x5c]
  41155f:	mov    ecx,0xcd70309f
  411564:	mov    gs,WORD PTR [ecx+0x7aca4ba3]
  41156a:	nop
  41156b:	inc    ebp
  41156c:	cmp    cl,BYTE PTR [edi]
  41156e:	call   0xfb1f1f3
  411573:	(bad)  
  411574:	mov    cs,WORD PTR [ebp-0x80]
  411577:	ret    
  411578:	sub    al,0xbe
  41157a:	in     al,dx
  41157b:	ins    BYTE PTR es:[edi],dx
  41157c:	pop    edx
  41157d:	pop    ss
  41157e:	jle    0x411508
  411580:	jg     0x4115d1
  411582:	adc    eax,edx
  411584:	sub    al,0x1
  411586:	mov    edx,0x1dfdfc17
  41158b:	ret    
  41158c:	sar    DWORD PTR [eax+0x3fb5950],cl
  411592:	ds ss and cl,ah
  411596:	into   
  411597:	cmp    ecx,DWORD PTR [ebx+ebx*1+0xf736894]
  41159e:	lods   eax,DWORD PTR ds:[esi]
  41159f:	fsub   st(4),st
  4115a1:	xor    ebp,DWORD PTR [ebx-0x65457dc0]
  4115a7:	xor    ch,al
  4115a9:	xchg   edi,eax
  4115aa:	stos   BYTE PTR es:[edi],al
  4115ab:	rcl    DWORD PTR [ebp+0x30],0xe8
  4115af:	xchg   DWORD PTR [edi-0x34],esp
  4115b2:	pop    ebp
  4115b3:	mov    ebx,0x33f7eb27
  4115b8:	xchg   esi,eax
  4115b9:	retf   
  4115ba:	sbb    DWORD PTR [edx-0x5c],edx
  4115bd:	sbb    al,0x1e
  4115bf:	and    BYTE PTR [ecx],cl
  4115c1:	pop    edi
  4115c2:	ins    DWORD PTR es:[edi],dx
  4115c3:	cld    
  4115c4:	mov    ecx,0x61f730cf
  4115c9:	fcmovnbe st,st(2)
  4115cb:	pop    edi
  4115cc:	out    dx,eax
  4115cd:	ret    
  4115ce:	sub    al,0xec
  4115d0:	aad    0xf3
  4115d2:	push   esp
  4115d3:	icebp  
  4115d4:	stos   DWORD PTR es:[edi],eax
  4115d5:	inc    ecx
  4115d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115d7:	repnz push es
  4115d9:	adc    bl,BYTE PTR [esi]
  4115db:	and    dl,BYTE PTR [ebx]
  4115dd:	adc    al,0x10
  4115df:	int3   
  4115e0:	push   esi
  4115e1:	sub    DWORD PTR [esi+ecx*4+0xa8a2070],esi
  4115e8:	cmp    BYTE PTR [edx],ch
  4115ea:	loopne 0x411578
  4115ec:	jne    0x41158c
  4115ee:	test   al,0xff
  4115f0:	fstp   DWORD PTR [edx]
  4115f2:	idiv   BYTE PTR [esi]
  4115f4:	frstor [eax+0x6c13d38e]
  4115fa:	push   ss
  4115fb:	cmc    
  4115fc:	mov    eax,0x41c1606b
  411601:	enter  0x6547,0xbb
  411605:	xchg   ecx,eax
  411606:	or     al,0xe7
  411608:	cld    
  411609:	mov    ecx,0x38a9db05
  41160e:	and    cl,dl
  411610:	test   eax,0x42d9a357
  411615:	aas    
  411616:	pop    ebx
  411617:	popa   
  411618:	aam    0x11
  41161a:	call   0xbce:0x566629b0
  411621:	pop    es
  411622:	or     cl,bh
  411624:	add    DWORD PTR [edi+0x6],ebx
  411627:	mov    al,0x3b
  411629:	adc    eax,0xc1daa966
  41162e:	jo     0x411684
  411630:	aam    0xec
  411632:	cmp    bl,BYTE PTR [eax+0x31]
  411635:	mov    cl,0x36
  411637:	fistp  QWORD PTR ds:0x72db0f07
  41163d:	or     eax,DWORD PTR [esi+0x77]
  411640:	repnz cli 
  411642:	mov    dh,0x16
  411644:	mov    dh,0x58
  411646:	inc    esp
  411647:	pop    edx
  411648:	stos   BYTE PTR es:[edi],al
  411649:	mov    ebp,0x63e7e5c7
  41164e:	fiadd  WORD PTR [ecx+0x604e51f7]
  411654:	imul   BYTE PTR [edi+0x5]
  411657:	scas   eax,DWORD PTR es:[edi]
  411658:	scas   al,BYTE PTR es:[edi]
  411659:	sbb    edx,esi
  41165b:	arpl   WORD PTR [eax-0x60],bp
  41165e:	mov    ebx,DWORD PTR [ebp+0x4e]
  411661:	pop    ebx
  411662:	cmp    BYTE PTR [ebx-0x26],ah
  411665:	fisubr DWORD PTR [eax+esi*4-0x3de20f5c]
  41166c:	pop    ss
  41166d:	js     0x41164c
  41166f:	mov    eax,0x12468f6c
  411674:	aaa    
  411675:	inc    ecx
  411676:	jg     0x41160f
  411678:	adc    eax,0xc1835c4
  41167d:	xchg   esp,eax
  41167e:	out    0xa6,al
  411680:	out    0x73,al
  411682:	push   esp
  411683:	push   edi
  411684:	jmp    0x411621
  411686:	fldl2t 
  411688:	xchg   DWORD PTR [ebp-0x4dfd7284],ebx
  41168e:	mov    esi,0x9b8ac24f
  411693:	ret    
  411694:	(bad)  
  411695:	mov    dh,dh
  411697:	test   BYTE PTR [esi+0x2c180b0e],bh
  41169d:	add    BYTE PTR [edi],ah
  41169f:	jb     0x4116b4
  4116a1:	iret   
  4116a2:	mov    WORD PTR [eax-0x1a9ea85d],?
  4116a8:	cdq    
  4116a9:	out    0x95,eax
  4116ab:	(bad)  
  4116ac:	ror    DWORD PTR [ecx+0x29],cl
  4116af:	out    dx,eax
  4116b0:	loopne 0x4116af
  4116b2:	adc    BYTE PTR [ecx],ch
  4116b4:	cld    
  4116b5:	mov    ebx,0x54b0902f
  4116ba:	xchg   edx,eax
  4116bb:	and    bl,BYTE PTR [eax]
  4116bd:	sbb    DWORD PTR [esi],eax
  4116bf:	loop   0x411657
  4116c1:	jnp    0x411671
  4116c3:	inc    esp
  4116c4:	es daa 
  4116c6:	scas   al,BYTE PTR es:[edi]
  4116c7:	inc    esi
  4116c8:	cwde   
  4116c9:	mov    ecx,eax
  4116cb:	xchg   ebx,eax
  4116cc:	xchg   edi,eax
  4116cd:	sbb    BYTE PTR ds:0x48ee5759,dh
  4116d3:	retf   0xd053
  4116d6:	retf   0x2c0
  4116d9:	mov    ch,0x72
  4116db:	out    dx,al
  4116dc:	jno    0x4116b4
  4116de:	jmp    0x806c83b5
  4116e3:	push   esp
  4116e4:	ficomp DWORD PTR [ebp+ebp*2-0x7a]
  4116e8:	scas   eax,DWORD PTR es:[edi]
  4116e9:	xor    BYTE PTR [ecx-0x7e927211],ah
  4116ef:	mov    ah,0x81
  4116f1:	stos   DWORD PTR es:[edi],eax
  4116f2:	mov    WORD PTR [ebx+0x29],?
  4116f5:	repz mov ds:0x18b8c79b,al
  4116fb:	bound  edx,QWORD PTR [edx]
  4116fd:	icebp  
  4116fe:	or     dl,BYTE PTR ds:0x352e749c
  411704:	(bad)  [eax+edi*1+0x37]
  411708:	je     0x41175c
  41170a:	sub    BYTE PTR ds:0x8bdfc23b,ah
  411710:	dec    esp
  411711:	jo     0x411707
  411713:	jo     0x4116b4
  411715:	retf   0x6087
  411718:	out    0xca,eax
  41171a:	dec    edx
  41171b:	ss ja  0x4116c5
  41171e:	clc    
  41171f:	pop    ds
  411720:	sbb    eax,DWORD PTR ds:0x4c54
  411725:	mov    eax,ds:0xf9d2a461
  41172a:	ss stc 
  41172c:	call   ecx
  41172e:	rcr    DWORD PTR [eax+ebx*8],1
  411731:	mov    BYTE PTR [edi-0x4c],ah
  411734:	(bad)  
  411735:	mov    WORD PTR [ecx+esi*8-0x10f9dc6b],cs
  41173c:	iret   
  41173d:	mov    esp,0xef843c4a
  411742:	jmp    0x4117a8
  411744:	cmp    al,0x8a
  411746:	sbb    al,0xbd
  411748:	test   eax,0xe786911d
  41174d:	rcl    BYTE PTR [eax-0x406688b2],cl
  411753:	es xor al,0xad
  411756:	rol    BYTE PTR [eax-0x7beeb5c],1
  41175c:	int    0x38
  41175e:	(bad)  
  411760:	jl     0x4116f5
  411762:	xchg   ebx,eax
  411763:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411764:	popa   
  411765:	add    BYTE PTR [eax-0x3f],ch
  411768:	dec    ebx
  411769:	ins    DWORD PTR es:[edi],dx
  41176a:	test   DWORD PTR [ebp+0x54],0xd7a983cc
  411771:	test   dh,0xeb
  411774:	xor    al,0xbe
  411776:	dec    ebx
  411777:	adc    cl,cl
  411779:	imul   esp,DWORD PTR [edi-0x7e],0x6b5b4418
  411780:	and    BYTE PTR [esi],0x52
  411783:	sar    DWORD PTR [eax-0x8496e5b],cl
  411789:	mov    ah,0xfe
  41178b:	xchg   edi,eax
  41178c:	in     al,0x88
  41178e:	(bad)  
  41178f:	adc    esp,DWORD PTR [ecx]
  411791:	sub    eax,0x4d8abb11
  411796:	dec    ecx
  411797:	js     0x4117e5
  411799:	stos   DWORD PTR es:[edi],eax
  41179a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41179b:	cmp    al,0x21
  41179d:	stos   DWORD PTR es:[edi],eax
  41179e:	jne    0x411777
  4117a0:	adc    al,0x38
  4117a2:	push   cs
  4117a3:	sti    
  4117a4:	dec    ebx
  4117a5:	dec    edi
  4117a6:	lods   al,BYTE PTR ds:[esi]
  4117a7:	fldenv [esi]
  4117a9:	sbb    DWORD PTR [ebx+0x218fa97c],eax
  4117af:	dec    edi
  4117b0:	out    dx,eax
  4117b1:	aam    0x9c
  4117b3:	shl    DWORD PTR [ebx-0x64037695],0xdc
  4117ba:	mov    ah,0x8c
  4117bc:	mov    al,dh
  4117be:	mov    ebx,0x2a448b94
  4117c3:	enter  0xa8b6,0xb2
  4117c7:	shl    DWORD PTR [ecx],cl
  4117c9:	mov    DWORD PTR [ebx+0x2f],esp
  4117cc:	mov    ds:0x993b58eb,eax
  4117d1:	cmova  esi,DWORD PTR [esp+ecx*8]
  4117d5:	xlat   BYTE PTR ds:[ebx]
  4117d6:	jne    0x411774
  4117d8:	pop    ebx
  4117d9:	jle    0x4117ab
  4117db:	bound  esp,QWORD PTR [edx+0x1]
  4117de:	push   edi
  4117df:	sub    al,0xde
  4117e1:	mov    al,0xbe
  4117e3:	loopne 0x41178f
  4117e5:	fldenv [eax+0xe5ac118]
  4117eb:	and    ebp,edi
  4117ed:	lods   eax,DWORD PTR ds:[esi]
  4117ee:	jmp    0x10ec26fb
  4117f3:	xchg   BYTE PTR [edi+0xdb4a8b9],ah
  4117f9:	(bad)  
  4117fb:	rol    DWORD PTR [edi+0x7c],0x74
  4117ff:	nop
  411800:	shl    DWORD PTR [ecx],1
  411802:	or     eax,0xc90c9fd8
  411807:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411808:	fsub   QWORD PTR [eax*4-0x408c6c61]
  41180f:	sbb    bh,dl
  411811:	repz call 0xf635:0xb50b0dd8
  411819:	mov    ebp,0x5f528511
  41181e:	clc    
  41181f:	aas    
  411820:	inc    ebp
  411821:	push   es
  411822:	jmp    0x5e8f:0x45dba487
  411829:	push   edx
  41182a:	pop    ss
  41182b:	xlat   BYTE PTR ds:[ebx]
  41182c:	arpl   bp,cx
  41182e:	cmp    BYTE PTR [ebp-0x5e3ae9d2],bh
  411834:	mov    cl,0x13
  411836:	stos   BYTE PTR es:[edi],al
  411837:	test   DWORD PTR [eax-0x4a],esi
  41183a:	(bad)  
  41183b:	mov    es,WORD PTR [ebx+0x2e02f299]
  411841:	aaa    
  411842:	outs   dx,DWORD PTR ds:[esi]
  411843:	jmp    DWORD PTR [edi+edi*2]
  411846:	out    dx,eax
  411847:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411848:	rcl    BYTE PTR [edx+0x5b6d82a2],cl
  41184e:	dec    esi
  41184f:	shl    eax,1
  411851:	std    
  411852:	fwait
  411853:	cmp    al,0xd0
  411855:	inc    ebp
  411856:	(bad)  [ebx]
  411858:	cs sbb ebx,edi
  41185b:	(bad)  
  41185d:	addr16 (bad) 
  41185f:	jno    0x41187c
  411861:	pop    ecx
  411862:	cmp    DWORD PTR [esi],edi
  411864:	lock lods eax,DWORD PTR ds:[esi]
  411866:	xor    eax,ebp
  411868:	jmp    0xcc3da880
  41186d:	ss inc eax
  41186f:	cmp    BYTE PTR ds:0xb242c9e,cl
  411875:	adc    al,0x49
  411877:	jecxz  0x411859
  411879:	pop    esp
  41187a:	mov    ah,0xad
  41187c:	call   0x811c2b5d
  411881:	xchg   esp,eax
  411882:	dec    edi
  411883:	loop   0x4118c2
  411885:	and    al,0xdc
  411887:	xor    ebp,DWORD PTR [ebp-0x19bfb1f2]
  41188d:	imul   edx,DWORD PTR [edx-0x4d922c8a],0xf6834d5f
  411897:	cmp    al,0x36
  411899:	pop    es
  41189a:	push   esi
  41189b:	lock into 
  41189d:	shl    BYTE PTR [edx-0x3cd04c7],1
  4118a3:	ficomp WORD PTR [eax+0x4e]
  4118a6:	push   ebp
  4118a7:	fisub  WORD PTR [eax+eax*8-0x14a6c337]
  4118ae:	adc    DWORD PTR [ecx],ebx
  4118b0:	(bad)  
  4118b1:	push   cs
  4118b2:	jle    0x4118a4
  4118b4:	pusha  
  4118b5:	(bad)  
  4118b6:	rol    DWORD PTR [ecx],1
  4118b8:	inc    edi
  4118b9:	ja     0x41191d
  4118bb:	test   eax,0x2e027a3
  4118c0:	mov    al,0xf5
  4118c2:	sbb    DWORD PTR [ebx+0x11],ecx
  4118c5:	push   edi
  4118c6:	test   BYTE PTR [edx],bl
  4118c8:	sub    dl,ah
  4118ca:	mov    ah,0x67
  4118cc:	jne    0x41185a
  4118ce:	dec    edx
  4118cf:	mov    esi,0x908f95a0
  4118d4:	fistp  QWORD PTR [edx-0x50c9bdc7]
  4118da:	rcl    BYTE PTR [eax+0x58],1
  4118dd:	pop    eax
  4118de:	pop    edi
  4118df:	dec    esp
  4118e0:	shr    ebp,0xc8
  4118e3:	lds    esi,FWORD PTR [eax]
  4118e5:	ror    ebp,1
  4118e7:	add    BYTE PTR [ebp+0x710a919b],0x75
  4118ee:	in     al,0x38
  4118f0:	dec    esi
  4118f1:	add    al,0x94
  4118f3:	inc    edi
  4118f4:	into   
  4118f5:	test   ebx,esi
  4118f7:	jg     0x4118f8
  4118f9:	sub    dl,al
  4118fb:	sbb    bl,BYTE PTR [ecx-0x45ad9cd7]
  411901:	cmp    esi,edi
  411903:	pop    ecx
  411904:	cld    
  411905:	push   edi
  411906:	fs inc edx
  411908:	add    dl,BYTE PTR [eax+0x50]
  41190b:	sub    al,0xd7
  41190d:	ja     0x4118b6
  41190f:	mov    dh,bh
  411911:	out    0x12,al
  411913:	stc    
  411914:	cmp    cl,bl
  411916:	leave  
  411917:	jae    0x4118a1
  411919:	mov    cl,0xd2
  41191b:	xchg   esp,eax
  41191c:	push   cs
  41191d:	hlt    
  41191e:	xchg   esp,eax
  41191f:	pop    ecx
  411920:	mov    dh,BYTE PTR [esi-0x26ed5880]
  411926:	imul   edi,DWORD PTR [esi+0x3436c40],0x28
  41192d:	push   esp
  41192e:	nop
  41192f:	call   FWORD PTR [edi-0x41]
  411932:	cmp    BYTE PTR [edi-0x7e1bf21],bh
  411938:	xchg   DWORD PTR [ebx+0x27aacc39],ebx
  41193e:	fist   WORD PTR [eax]
  411940:	or     eax,0xca93e2ef
  411945:	jle    0x4119bb
  411947:	and    al,0xf
  411949:	xor    eax,DWORD PTR [edx+eax*8-0x13]
  41194d:	and    al,0xa7
  41194f:	fxtract 
  411951:	(bad)  
  411952:	repnz dec ebp
  411954:	sti    
  411955:	adc    DWORD PTR [ebx],esp
  411957:	sub    dh,al
  411959:	lods   eax,DWORD PTR ds:[esi]
  41195a:	mov    ebx,0xa7ba8e62
  41195f:	(bad)  
  411960:	push   ss
  411961:	into   
  411962:	pop    esp
  411963:	add    BYTE PTR [eax],dh
  411965:	sar    DWORD PTR [ebp+edx*2+0x7d],0xfb
  41196a:	out    dx,eax
  41196b:	sahf   
  41196c:	enter  0xba3c,0x8f
  411970:	push   edx
  411971:	loop   0x4119d2
  411973:	xor    ecx,DWORD PTR [ecx]
  411975:	dec    eax
  411976:	xor    al,0x97
  411978:	fild   DWORD PTR fs:[ebp-0x74]
  41197c:	push   cs
  41197d:	fcmovb st,st(0)
  41197f:	mov    DWORD PTR [eax-0x4c8593c8],0x277196b6
  411989:	(bad)  
  41198a:	jnp    0x4119fb
  41198c:	aam    0x3b
  41198e:	pop    es
  41198f:	imul   ebp,DWORD PTR ds:0x6eb86bae,0x854f3bc6
  411999:	das    
  41199a:	test   eax,0x7bf60a1d
  41199f:	out    0xfc,eax
  4119a1:	dec    edx
  4119a2:	add    cl,BYTE PTR [edi-0x7c]
  4119a5:	sbb    esi,edx
  4119a7:	adc    edi,edi
  4119a9:	mov    ecx,0xe81881ac
  4119ae:	xchg   esp,eax
  4119af:	repnz retf 0x80ba
  4119b3:	or     ebx,DWORD PTR [ecx+ebp*2+0x4f]
  4119b7:	or     DWORD PTR [edi+0x50e51cbb],ebx
  4119bd:	loop   0x4119d2
  4119bf:	arpl   bp,cx
  4119c1:	scas   al,BYTE PTR es:[edi]
  4119c2:	mov    al,ds:0x680a95ca
  4119c7:	aas    
  4119c8:	fs or  edx,eax
  4119cb:	pop    esp
  4119cc:	aam    0x9b
  4119ce:	mov    dh,0xaa
  4119d0:	inc    ecx
  4119d1:	std    
  4119d2:	push   eax
  4119d3:	adc    ecx,esi
  4119d5:	fadd   QWORD PTR [ecx+0x77b02703]
  4119db:	test   al,0xaf
  4119dd:	rcr    DWORD PTR [esi],0xe3
  4119e0:	add    al,0x62
  4119e2:	push   edi
  4119e3:	adc    eax,0x27648990
  4119e8:	arpl   WORD PTR [edi],ax
  4119ea:	imul   ecx,DWORD PTR cs:[ebp+eax*4+0x3d881242],0xffffffeb
  4119f3:	push   cs
  4119f4:	mov    ss,ebx
  4119f6:	lahf   
  4119f7:	fsub   QWORD PTR [ebp-0x4e]
  4119fa:	push   es
  4119fb:	gs mov dh,bh
  4119fe:	das    
  4119ff:	inc    edx
  411a00:	ss call 0x10331e6
  411a06:	scas   eax,DWORD PTR es:[edi]
  411a07:	xor    ecx,0x7f
  411a0a:	stos   BYTE PTR es:[edi],al
  411a0b:	fwait
  411a0c:	xchg   esi,eax
  411a0d:	loopne 0x411a57
  411a0f:	imul   edi,DWORD PTR [ebx+0x44046102],0x1decb019
  411a19:	xor    cl,cl
  411a1b:	xchg   esi,eax
  411a1c:	push   eax
  411a1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a1e:	mov    eax,DWORD PTR [esi-0x74b9d042]
  411a24:	or     edx,DWORD PTR [eax-0x35]
  411a27:	scas   eax,DWORD PTR es:[edi]
  411a28:	add    al,0x71
  411a2a:	stc    
  411a2b:	test   edi,esi
  411a2d:	test   eax,0xd6b5d412
  411a32:	loop   0x4119bb
  411a34:	enter  0x5cb9,0xdf
  411a38:	jecxz  0x411a9d
  411a3a:	xor    eax,edi
  411a3c:	aaa    
  411a3d:	sbb    esi,DWORD PTR [eax-0x11fe6361]
  411a43:	sbb    esp,DWORD PTR [edx]
  411a45:	cli    
  411a46:	inc    edi
  411a47:	push   cs
  411a48:	dec    esi
  411a49:	dec    eax
  411a4a:	xchg   BYTE PTR [esi+0x2],dl
  411a4d:	and    al,0xdb
  411a4f:	mov    eax,0xa61570de
  411a54:	cld    
  411a55:	imul   edi,ecx,0x55
  411a58:	shr    BYTE PTR [ebx-0x56038234],0xb8
  411a5f:	pop    eax
  411a60:	pop    ebx
  411a61:	leave  
  411a62:	push   esi
  411a63:	out    0x27,al
  411a65:	dec    eax
  411a66:	sbb    al,0x80
  411a68:	mov    cl,bh
  411a6a:	mov    DWORD PTR [eax-0x628e6c51],edx
  411a70:	sub    esi,ebp
  411a72:	sti    
  411a73:	es cmp eax,0xd0cbbef0
  411a79:	out    0x34,eax
  411a7b:	stos   BYTE PTR es:[edi],al
  411a7c:	mov    cl,0x92
  411a7e:	sar    DWORD PTR [ebx-0x3d36b406],cl
  411a84:	mov    ss,WORD PTR [edx+0x6d]
  411a87:	adc    eax,0xdd23876e
  411a8c:	mov    esi,0x5ba76504
  411a91:	inc    edx
  411a92:	jl     0x411a7b
  411a94:	push   ecx
  411a95:	(bad)  
  411a96:	sbb    BYTE PTR [eax],dl
  411a98:	dec    eax
  411a99:	mov    WORD PTR [eax-0x8aa8907],?
  411a9f:	das    
  411aa0:	arpl   WORD PTR [edi-0x71],bx
  411aa3:	popf   
  411aa4:	fisubr WORD PTR [edx+0x75]
  411aa7:	pop    ebx
  411aa8:	pop    ss
  411aa9:	and    dh,dl
  411aab:	mov    esp,0x9cf76dc3
  411ab0:	xchg   ecx,eax
  411ab1:	out    dx,eax
  411ab2:	push   0x7d
  411ab4:	imul   ebp,DWORD PTR [eax-0x58],0xf
  411ab8:	xor    eax,0x1e9da10d
  411abd:	xor    al,0xf3
  411abf:	xchg   esp,eax
  411ac0:	jl     0x411b1c
  411ac2:	idiv   BYTE PTR [ebp-0x3885ea0d]
  411ac8:	fs push eax
  411aca:	inc    esi
  411acb:	sub    al,0x2e
  411acd:	dec    ebp
  411ace:	inc    edi
  411acf:	xchg   edi,eax
  411ad0:	call   0x48c5:0xe9da971d
  411ad7:	xlat   BYTE PTR ds:[ebx]
  411ad8:	jns    0x411ae8
  411ada:	pusha  
  411adb:	test   DWORD PTR [edx],ebp
  411add:	push   ds
  411ade:	dec    edx
  411adf:	lods   eax,DWORD PTR ds:[esi]
  411ae0:	jns    0x411a64
  411ae2:	das    
  411ae3:	or     esp,DWORD PTR [esi]
  411ae5:	aam    0x4a
  411ae7:	rcr    BYTE PTR [eax],cl
  411ae9:	jle    0x411a9a
  411aeb:	sahf   
  411aec:	adc    ebx,ebx
  411aee:	jae    0x411b45
  411af0:	cmp    DWORD PTR [edi],ebx
  411af2:	jmp    FWORD PTR [esi+0x3e01949f]
  411af8:	rcr    DWORD PTR [eax+0x5d],1
  411afb:	add    al,0xc1
  411afd:	xor    cl,BYTE PTR [esi+0xb5a6570]
  411b03:	out    0x5c,eax
  411b05:	pop    edx
  411b06:	(bad)  
  411b07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b08:	push   eax
  411b09:	stos   BYTE PTR es:[edi],al
  411b0a:	mov    ds:0x917b5b73,eax
  411b0f:	outs   dx,DWORD PTR ds:[esi]
  411b10:	mov    dl,0xdf
  411b12:	outs   dx,BYTE PTR ds:[esi]
  411b13:	inc    ecx
  411b14:	pop    esp
  411b15:	or     eax,0xee9460a6
  411b1a:	pop    ebx
  411b1b:	jae    0x411b2f
  411b1d:	test   al,0x84
  411b1f:	add    ebp,DWORD PTR [ebx+0x2f]
  411b22:	in     eax,dx
  411b23:	jge    0x411af7
  411b25:	fstp   QWORD PTR cs:[edx]
  411b28:	dec    edx
  411b29:	jne    0x411b08
  411b2b:	push   ds
  411b2c:	mov    dl,0x3d
  411b2e:	or     bh,0xe4
  411b31:	and    BYTE PTR [ecx-0x5a6fdbd5],ch
  411b37:	xor    ecx,DWORD PTR [ebx]
  411b39:	mov    dh,BYTE PTR [edi]
  411b3b:	add    ecx,DWORD PTR [ebx+0x324a7df2]
  411b41:	cmp    DWORD PTR [edi-0x71fd9ce6],0x42b6d7b
  411b4b:	dec    eax
  411b4c:	push   0xa2a92ea5
  411b51:	shl    DWORD PTR [eax],1
  411b53:	shr    DWORD PTR [edi+0x3ee0f1bc],cl
  411b59:	ficomp WORD PTR [edi+eiz*4-0x21dd696e]
  411b60:	(bad)  
  411b61:	popa   
  411b62:	sub    BYTE PTR [edi-0x7c7136e9],al
  411b68:	cs ins DWORD PTR es:[edi],dx
  411b6a:	cs pop edi
  411b6c:	cld    
  411b6d:	bound  ecx,QWORD PTR [ebx+0x5d]
  411b70:	push   ebp
  411b71:	test   DWORD PTR [ecx-0x32],esi
  411b74:	jl     0x411b8d
  411b76:	aad    0xe8
  411b78:	and    BYTE PTR fs:[eax],0x47
  411b7c:	mov    ah,0x4c
  411b7e:	inc    edi
  411b7f:	xor    al,0xa3
  411b81:	mov    bh,0xe9
  411b83:	jns    0x411b41
  411b85:	pop    ebx
  411b86:	out    dx,al
  411b87:	add    al,0x59
  411b89:	repz repnz sbb eax,0xf8d9a30
  411b90:	iret   
  411b91:	add    BYTE PTR [ecx-0x298f4860],0xa
  411b98:	js     0x411b4a
  411b9a:	mov    ch,ch
  411b9c:	sahf   
  411b9d:	cli    
  411b9e:	cmp    DWORD PTR [edi+edi*1+0x58d39796],esp
  411ba5:	xchg   ebx,eax
  411ba6:	and    eax,0xe54726e2
  411bab:	dec    edx
  411bac:	(bad)  
  411bad:	out    dx,al
  411bae:	rcl    DWORD PTR fs:[edx+0x16],0xcd
  411bb3:	imul   edx,DWORD PTR [esi-0x5ef408c3],0xffffffb7
  411bba:	aaa    
  411bbb:	idiv   BYTE PTR [esi]
  411bbd:	int    0xd4
  411bbf:	sbb    BYTE PTR [ebp-0x53188e7a],cl
  411bc5:	lock (bad) 
  411bc7:	call   FWORD PTR [ebp+0x71bf65e6]
  411bcd:	mov    esi,DWORD PTR [ecx]
  411bcf:	adc    DWORD PTR [edx+0xd4e04ea],edx
  411bd5:	mov    edx,0xfd01454d
  411bda:	int3   
  411bdb:	sar    dl,0x28
  411bde:	or     BYTE PTR [ebx+esi*1-0x449a02d6],al
  411be5:	pop    ebp
  411be6:	adc    eax,0x1c94245e
  411beb:	dec    edi
  411bec:	inc    esp
  411bed:	push   0x10
  411bef:	cmp    esi,DWORD PTR [esi]
  411bf1:	sti    
  411bf2:	ror    al,0xf5
  411bf5:	xor    BYTE PTR ss:[edx],dh
  411bf8:	ss out 0x3,eax
  411bfb:	dec    eax
  411bfc:	jge    0x411bed
  411bfe:	jnp    0x411c59
  411c00:	dec    ebx
  411c01:	int3   
  411c02:	sti    
  411c03:	rol    DWORD PTR [ebp-0x65d64b6b],0x9a
  411c0a:	sub    DWORD PTR [eax+edx*8+0x6],ebp
  411c0e:	adc    DWORD PTR [ebx-0xe095254],esi
  411c14:	mov    BYTE PTR [edx-0xf],ah
  411c17:	in     eax,dx
  411c18:	xor    bl,bl
  411c1a:	loope  0x411c02
  411c1c:	call   0x2a4e55c8
  411c21:	add    BYTE PTR [ecx-0x5248dbe9],ah
  411c27:	rcr    edx,0xa6
  411c2a:	push   edi
  411c2b:	cs stos BYTE PTR es:[edi],al
  411c2d:	aad    0x79
  411c2f:	das    
  411c30:	pop    edx
  411c31:	es add dh,dh
  411c34:	mov    ds,ebx
  411c36:	adc    BYTE PTR [ecx],ah
  411c38:	mov    ds:0x8acac0be,al
  411c3d:	ja     0x411c21
  411c3f:	repnz sbb BYTE PTR [esi],ah
  411c42:	adc    eax,DWORD PTR [edx-0x4fb17a74]
  411c48:	push   ss
  411c49:	dec    ebx
  411c4a:	sbb    bh,bl
  411c4c:	bound  esi,QWORD PTR ds:0x675390db
  411c52:	sbb    DWORD PTR [ecx+0x33],ebx
  411c55:	pop    eax
  411c56:	xchg   esp,eax
  411c57:	jmp    0xae7c:0x32b7c380
  411c5e:	sub    esi,edi
  411c60:	repz cli 
  411c62:	addr16 repnz aad 0xfa
  411c66:	pop    esi
  411c67:	jmp    0x8579943f
  411c6c:	and    eax,0x6498db18
  411c71:	sbb    eax,0xafe2c0c4
  411c76:	jbe    0x411c56
  411c78:	sbb    BYTE PTR [esi-0x1ecad6b0],0xb4
  411c7f:	mov    esp,DWORD PTR [ecx+edx*1+0x75]
  411c83:	adc    al,0x5e
  411c85:	dec    DWORD PTR [edx+0x75988677]
  411c8b:	and    esp,edi
  411c8d:	adc    edi,DWORD PTR [ebx-0x41e8402f]
  411c93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c94:	mov    eax,0x1c25bfb5
  411c99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c9a:	push   cs
  411c9b:	loope  0x411c6f
  411c9d:	sub    eax,0xa39ef8a
  411ca2:	dec    ecx
  411ca3:	scas   al,BYTE PTR es:[edi]
  411ca4:	fdivr  DWORD PTR [edx]
  411ca6:	mov    ah,0xa
  411ca8:	pop    ss
  411ca9:	popf   
  411caa:	dec    edx
  411cab:	or     ecx,edx
  411cad:	jg     0x411c33
  411caf:	xchg   BYTE PTR [edi+esi*2+0x64],al
  411cb3:	repz push ss
  411cb5:	xlat   BYTE PTR ds:[ebx]
  411cb6:	sub    eax,0x3d70cc65
  411cbb:	in     eax,dx
  411cbc:	or     DWORD PTR [ecx],esi
  411cbe:	mov    esi,0x367bd285
  411cc3:	rol    dh,1
  411cc5:	int3   
  411cc6:	repnz pop ss
  411cc8:	mov    eax,0x15b1c278
  411ccd:	stos   BYTE PTR es:[edi],al
  411cce:	mov    ecx,0xc2e17dc3
  411cd3:	cmovle ebp,DWORD PTR [eax+0x1de79b69]
  411cda:	dec    esi
  411cdb:	jb     0x411cd0
  411cdd:	imul   esi,DWORD PTR [ebx+0x42cfc1ca],0x3194911f
  411ce7:	jnp    0x411cc2
  411ce9:	shr    ebx,1
  411ceb:	lods   eax,DWORD PTR ds:[esi]
  411cec:	pop    es
  411ced:	mov    ds:0xc6a8985c,eax
  411cf2:	ja     0x411d23
  411cf4:	pushf  
  411cf5:	sub    eax,0xc92cdd9e
  411cfa:	lods   al,BYTE PTR ds:[esi]
  411cfb:	sahf   
  411cfc:	out    dx,al
  411cfd:	pop    ebx
  411cfe:	jmp    0x71860135
  411d03:	les    ecx,FWORD PTR [edx]
  411d05:	push   DWORD PTR ds:[ebx+0x59dafea9]
  411d0c:	mov    dl,0x3e
  411d0e:	icebp  
  411d0f:	call   0x8e556a3
  411d14:	popf   
  411d15:	sti    
  411d16:	iret   
  411d17:	xlat   BYTE PTR ds:[ebx]
  411d18:	fdiv   DWORD PTR [eax-0x57]
  411d1b:	inc    edi
  411d1c:	pop    ds
  411d1d:	out    dx,eax
  411d1e:	mov    ebp,0x4b46a4c2
  411d23:	iret   
  411d24:	in     al,0x49
  411d26:	inc    ecx
  411d27:	pusha  
  411d28:	adc    BYTE PTR [eax-0x65],bl
  411d2b:	inc    eax
  411d2c:	retf   0x8c9c
  411d2f:	push   ecx
  411d30:	es mov bl,0xec
  411d33:	xchg   ebp,eax
  411d34:	pop    ecx
  411d35:	cwde   
  411d36:	inc    ebp
  411d37:	and    eax,0x94a83c97
  411d3c:	xlat   BYTE PTR ds:[ebx]
  411d3d:	es pop ebp
  411d3f:	cmp    BYTE PTR [esi+0x31133300],ah
  411d45:	in     al,dx
  411d46:	jp     0x411d31
  411d48:	add    ecx,DWORD PTR [esi]
  411d4a:	fstp   QWORD PTR [edx]
  411d4c:	(bad)  
  411d4d:	gs jno 0x411d6e
  411d50:	mov    bl,0x93
  411d52:	adc    esi,0xffffffed
  411d55:	sub    DWORD PTR [ecx+edi*1],edi
  411d58:	cmp    eax,0x87bbf607
  411d5d:	xchg   esi,eax
  411d5e:	push   cs
  411d5f:	push   ebx
  411d60:	loopne 0x411d11
  411d62:	aad    0x8f
  411d64:	jg     0x411d8e
  411d66:	and    bh,BYTE PTR [eax]
  411d68:	xchg   esp,eax
  411d69:	or     eax,0x56111b82
  411d6e:	sbb    DWORD PTR [eax],esi
  411d70:	sbb    DWORD PTR [ebx+0x61],ecx
  411d73:	sub    al,0xfb
  411d75:	sbb    bl,cl
  411d77:	jae    0x411d78
  411d79:	xchg   DWORD PTR [ecx-0x69071bef],esp
  411d7f:	dec    eax
  411d80:	jnp    0x411dc1
  411d82:	mov    dl,0x59
  411d84:	inc    edx
  411d85:	stos   DWORD PTR es:[edi],eax
  411d86:	inc    edx
  411d87:	mov    gs,ecx
  411d89:	inc    esp
  411d8a:	imul   edi,DWORD PTR [edi+0x7b],0xbd25ec3d
  411d91:	aad    0x2e
  411d93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d94:	in     al,dx
  411d95:	add    al,cl
  411d97:	xor    BYTE PTR [ecx],0x45
  411d9a:	popa   
  411d9b:	pop    ebp
  411d9c:	nop
  411d9d:	stos   DWORD PTR es:[edi],eax
  411d9e:	mov    ebp,0x681391e2
  411da3:	sbb    eax,ebx
  411da5:	mov    db5,eax
  411da8:	adc    dl,BYTE PTR [ebp+0x60]
  411dab:	ja     0x411d89
  411dad:	pop    ecx
  411dae:	or     cl,ch
  411db0:	retf   0x105b
  411db3:	cmp    edi,DWORD PTR [ebx]
  411db5:	or     al,0x46
  411db7:	stos   DWORD PTR es:[edi],eax
  411db8:	sbb    ecx,DWORD PTR [ebp+0x18]
  411dbb:	(bad)  
  411dbd:	inc    edi
  411dbe:	or     al,0xf3
  411dc0:	mov    WORD PTR [edx+0x2dfcec68],?
  411dc6:	fdivr  DWORD PTR [edx-0x6b944c07]
  411dcc:	pop    edi
  411dcd:	xchg   BYTE PTR [eax+0x73746d59],bl
  411dd3:	pop    esp
  411dd4:	ret    0xbb92
  411dd7:	test   BYTE PTR [esi-0x30d0b9b4],dl
  411ddd:	xchg   BYTE PTR [eax-0x160f9044],cl
  411de3:	mov    al,bh
  411de5:	fisub  WORD PTR [edx-0x771f8fae]
  411deb:	pop    ecx
  411dec:	jg     0x411e00
  411dee:	imul   ebx,DWORD PTR [ecx+0x272085b2],0x35d570b1
  411df8:	xor    dl,0x79
  411dfb:	cs gs or al,0xb
  411dff:	shr    BYTE PTR [ebx],cl
  411e01:	ins    BYTE PTR es:[edi],dx
  411e02:	daa    
  411e03:	jae    0x411e42
  411e05:	cmp    DWORD PTR [edx-0x6f],ebx
  411e08:	and    al,ch
  411e0a:	(bad)  
  411e0b:	fcom   st(2)
  411e0d:	data16 mov cs,WORD PTR [ecx-0x79fb137f]
  411e14:	and    eax,0x35a5386
  411e19:	scas   eax,DWORD PTR es:[edi]
  411e1a:	cmp    ecx,esp
  411e1c:	js     0x411e52
  411e1e:	(bad)  
  411e20:	sbb    cl,BYTE PTR [esp+edx*4]
  411e23:	outs   dx,BYTE PTR ds:[esi]
  411e24:	arpl   WORD PTR [edi+0x4bb9c4e7],si
  411e2a:	adc    ebp,DWORD PTR [esi]
  411e2c:	mov    edi,0xf7222346
  411e31:	xchg   edi,eax
  411e32:	mov    dl,0xb4
  411e34:	stos   BYTE PTR es:[edi],al
  411e35:	add    BYTE PTR [edi+0x6267e95f],bh
  411e3b:	call   0x586c5e1c
  411e40:	daa    
  411e41:	iret   
  411e42:	and    eax,0x10ec24ed
  411e47:	iret   
  411e48:	aaa    
  411e49:	mov    ebp,0x414def12
  411e4e:	retf   
  411e4f:	sar    DWORD PTR [esi+0x4b6874c0],1
  411e55:	pop    eax
  411e56:	popa   
  411e57:	call   0x882e:0x567a218a
  411e5e:	jo     0x411e7a
  411e60:	loopne 0x411e9d
  411e62:	ret    
  411e63:	push   ds
  411e64:	dec    esp
  411e65:	cwde   
  411e66:	(bad)  
  411e67:	jno    0x411eb4
  411e69:	xchg   ebx,eax
  411e6a:	popa   
  411e6b:	mov    ch,0x30
  411e6d:	jo     0x411ec3
  411e6f:	mov    cl,0x36
  411e71:	mov    DWORD PTR [esi],0x369efca0
  411e77:	fstp   QWORD PTR [ebp-0x32]
  411e7a:	sub    ah,dh
  411e7c:	cld    
  411e7d:	outs   dx,DWORD PTR ds:[esi]
  411e7e:	jl     0x411e38
  411e80:	jnp    0x411e47
  411e82:	es mov dh,0xb4
  411e85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e86:	pop    ss
  411e87:	bound  ebx,QWORD PTR [esi+0x47]
  411e8a:	ror    DWORD PTR [eax-0x51],0x38
  411e8e:	mov    eax,0xa9f27ea6
  411e93:	sahf   
  411e94:	js     0x411efa
  411e96:	mov    eax,0xbfa37fa3
  411e9b:	cmp    al,0x27
  411e9d:	xor    DWORD PTR [edi+eiz*2-0x68272386],0x2d
  411ea5:	mov    bl,0xc5
  411ea7:	jns    0x411e39
  411ea9:	fild   DWORD PTR ds:0x6d598329
  411eaf:	mov    eax,0x22805242
  411eb4:	sbb    eax,0x6156d2c6
  411eb9:	inc    esp
  411eba:	push   ebx
  411ebb:	into   
  411ebc:	retf   
  411ebd:	jle    0x411f03
  411ebf:	cdq    
  411ec0:	push   edx
  411ec1:	lds    esp,FWORD PTR [ebp+0x7ae88419]
  411ec7:	xor    al,0xb
  411ec9:	sbb    eax,ebp
  411ecb:	sub    BYTE PTR [ebx],bl
  411ecd:	mov    ds:0xa6c55b58,al
  411ed2:	xor    DWORD PTR [edx+0x3d15cfa],0x216b8441
  411edc:	mov    edi,0x23891715
  411ee1:	fimul  WORD PTR [edx+0x37f61c3f]
  411ee7:	sbb    al,0xc9
  411ee9:	dec    eax
  411eea:	sub    bl,BYTE PTR [edx-0x4e]
  411eed:	sahf   
  411eee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411eef:	(bad)  
  411ef0:	je     0x411f16
  411ef2:	lahf   
  411ef3:	sub    esp,eax
  411ef5:	aad    0x6c
  411ef7:	test   DWORD PTR [edi-0x6ccd46b2],esi
  411efd:	shl    BYTE PTR [esi+0x4d50b845],0x86
  411f04:	fcomp  DWORD PTR ds:0xb4b0a0b5
  411f0a:	cwde   
  411f0b:	adc    al,0xe8
  411f0d:	loope  0x411f32
  411f0f:	push   edx
  411f10:	ret    0x86a0
  411f13:	jns    0x411eae
  411f15:	and    al,0x9
  411f17:	xlat   BYTE PTR ds:[ebx]
  411f18:	mov    BYTE PTR [ecx],bl
  411f1a:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  411f1c:	(bad)  
  411f1d:	jae    0x411efe
  411f1f:	sti    
  411f20:	aas    
  411f21:	ds cwde 
  411f23:	loope  0x411ef2
  411f25:	je     0x411ef6
  411f27:	jecxz  0x411f54
  411f29:	xchg   ebx,eax
  411f2a:	adc    al,0x2c
  411f2c:	mov    ah,BYTE PTR [ebx+0x6e]
  411f2f:	cli    
  411f30:	nop
  411f31:	adc    ch,BYTE PTR [esp+edx*1+0x61]
  411f35:	outs   dx,BYTE PTR ds:[esi]
  411f36:	sbb    al,BYTE PTR [ebx+0x46]
  411f39:	(bad)  
  411f3a:	cmp    eax,0xdf9d44ac
  411f3f:	sub    al,BYTE PTR [eax]
  411f41:	jb     0x411f88
  411f43:	ficom  DWORD PTR [ecx-0x2d808c85]
  411f49:	and    eax,0x624d892
  411f4e:	jne    0x411f42
  411f50:	mov    WORD PTR [edi-0x50345f3f],ds
  411f56:	cld    
  411f57:	jle    0x411f08
  411f59:	jg     0x411f07
  411f5b:	cwde   
  411f5c:	js     0x411f77
  411f5e:	hlt    
  411f5f:	add    BYTE PTR [eax+0x7],ah
  411f62:	fimul  DWORD PTR [eax+esi*2-0x7e]
  411f66:	xlat   BYTE PTR ds:[ebx]
  411f67:	pushf  
  411f68:	push   ecx
  411f69:	dec    ebp
  411f6a:	lea    eax,[edi+0x1b]
  411f6d:	(bad)  
  411f6e:	pop    esp
  411f6f:	or     al,0x6e
  411f71:	mov    cl,0x4d
  411f73:	push   edx
  411f74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f75:	ret    0x430d
  411f78:	nop
  411f79:	int    0xf1
  411f7b:	push   ecx
  411f7c:	ret    0xe601
  411f7f:	pop    ebp
  411f80:	pop    ebx
  411f81:	popa   
  411f82:	mov    WORD PTR [ebx+ecx*2+0x4721d374],cs
  411f89:	push   ebx
  411f8a:	push   eax
  411f8b:	sub    ebp,ecx
  411f8d:	cmp    bl,al
  411f8f:	push   es
  411f90:	lock sub edi,DWORD PTR [ebx+eiz*1-0x55d60af8]
  411f98:	mov    bh,0xe5
  411f9a:	sub    al,0xcb
  411f9c:	xchg   edi,eax
  411f9d:	dec    ebp
  411f9e:	not    ah
  411fa0:	pop    ebx
  411fa1:	adc    BYTE PTR ds:0xb437cb11,dh
  411fa7:	ins    DWORD PTR es:[edi],dx
  411fa8:	not    BYTE PTR [edi]
  411faa:	jbe    0x411fda
  411fac:	stc    
  411fad:	repnz xor BYTE PTR [edi-0x55],dl
  411fb1:	adc    eax,DWORD PTR [esi+0x39cb964b]
  411fb7:	stc    
  411fb8:	shl    bh,1
  411fba:	inc    edx
  411fbb:	sub    BYTE PTR [ebp-0x5],bl
  411fbe:	xchg   ecx,eax
  411fbf:	aas    
  411fc0:	ror    esi,1
  411fc2:	add    ebx,edi
  411fc4:	mov    esi,ds
  411fc6:	leave  
  411fc7:	syscall 
  411fc9:	sahf   
  411fca:	fs push ebx
  411fcc:	ins    DWORD PTR es:[edi],dx
  411fcd:	mov    WORD PTR [esi-0x526eb7af],gs
  411fd3:	int3   
  411fd4:	and    edi,DWORD PTR [edi]
  411fd6:	push   edi
  411fd7:	sbb    dl,BYTE PTR [esi-0x58a539df]
  411fdd:	pop    ecx
  411fde:	pop    ecx
  411fdf:	jmp    0x38fd:0x50a483f4
  411fe6:	add    ebp,DWORD PTR [eax]
  411fe8:	mov    dl,0x97
  411fea:	xor    cl,al
  411fec:	retf   
  411fed:	jne    0x412063
  411fef:	pop    edx
  411ff0:	jnp    0x412000
  411ff2:	pop    es
  411ff3:	xchg   ebp,eax
  411ff4:	aad    0xc7
  411ff6:	mov    ah,al
  411ff8:	jmp    0x41204f
  411ffa:	(bad)  
  411ffb:	fadd   st(4),st
  411ffd:	or     eax,0x7ad0949a
  412002:	ss cli 
  412004:	aad    0xb6
  412006:	das    
  412007:	inc    BYTE PTR [ebx+0x4d]
  41200a:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41200c:	ficom  DWORD PTR [eiz*8-0x54f4da06]
  412013:	and    eax,0x68a85dfb
  412018:	iret   
  412019:	fwait
  41201a:	sbb    ch,cl
  41201c:	out    0x8f,al
  41201e:	frstor [eax-0x417b4dd9]
  412024:	repz fwait
  412026:	mov    dh,0xea
  412028:	add    eax,0xf809e595
  41202d:	xchg   ebp,eax
  41202e:	xor    bl,dl
  412030:	sub    al,0x29
  412032:	xchg   edi,eax
  412033:	lods   al,BYTE PTR ds:[esi]
  412034:	shl    BYTE PTR [ebp+0x11],cl
  412037:	dec    edx
  412038:	fadd   QWORD PTR [ebp-0x4b]
  41203b:	clc    
  41203c:	call   0x9c48:0x2afb575c
  412043:	aas    
  412044:	mov    ebp,0xb013a266
  412049:	cli    
  41204a:	mov    al,0x4f
  41204c:	cwde   
  41204d:	ja     0x412032
  41204f:	sbb    al,0xa9
  412051:	fsubrp st(7),st
  412053:	sub    al,0x42
  412055:	xor    eax,0x105cf285
  41205a:	dec    eax
  41205b:	pop    ds
  41205c:	sar    dl,0xd3
  41205f:	mov    cl,0xa8
  412061:	mov    eax,DWORD PTR [eax+0x41b6c55a]
  412067:	jo     0x411ffa
  412069:	je     0x4120c3
  41206b:	rol    BYTE PTR [ebx-0x3],0xa2
  41206f:	gs adc dl,dl
  412072:	inc    edi
  412073:	ja     0x4120cf
  412075:	jecxz  0x412071
  412077:	pop    es
  412078:	(bad)
  41207b:	pushf  
  41207c:	mov    ebp,0x83c87ee4
  412081:	outs   dx,DWORD PTR ds:[esi]
  412082:	push   0x5
  412084:	ds xchg esp,eax
  412086:	(bad)  
  412087:	xor    edi,DWORD PTR [eax-0x80]
  41208a:	or     DWORD PTR [ebp-0x2f],edx
  41208d:	les    edi,FWORD PTR [ebx+0x406a5efe]
  412093:	and    eax,0x5b19612e
  412098:	sub    al,0xa2
  41209a:	pusha  
  41209b:	jge    0x41210a
  41209d:	aam    0xb9
  41209f:	jmp    0x9338a07c
  4120a4:	or     eax,0x5b6a23f8
  4120a9:	imul   ebp,ecx,0x4b
  4120ac:	out    dx,al
  4120ad:	mov    eax,0xd2800832
  4120b2:	fsubr  QWORD PTR [eax+0x3d702a19]
  4120b8:	jmp    0x412043
  4120ba:	clc    
  4120bb:	(bad)  
  4120bc:	scas   al,BYTE PTR es:[edi]
  4120bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120be:	push   0xffffffd7
  4120c0:	stc    
  4120c1:	sbb    al,0x2
  4120c3:	pop    ebx
  4120c4:	add    eax,0xa3596753
  4120c9:	push   edx
  4120ca:	fs mov dh,0x2a
  4120cd:	xor    eax,0xfcc7ac8a
  4120d2:	fst    QWORD PTR [edx+0x66d81617]
  4120d8:	jmp    DWORD PTR [esi-0x18]
  4120db:	clc    
  4120dc:	or     al,0x54
  4120de:	push   es
  4120df:	test   al,0x7f
  4120e1:	push   ss
  4120e2:	inc    edi
  4120e3:	adc    dl,BYTE PTR [edi+0x30]
  4120e6:	(bad)  
  4120e7:	xor    eax,0x72b56bab
  4120ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120ed:	jmp    0x3d9549b0
  4120f2:	push   edx
  4120f3:	ja     0x4120af
  4120f5:	xor    al,0x2c
  4120f7:	jnp    0x412085
  4120f9:	into   
  4120fa:	push   cs
  4120fb:	cmp    cl,bl
  4120fd:	push   ss
  4120fe:	mov    edx,ebx
  412100:	adc    ebx,eax
  412102:	les    esi,FWORD PTR [ebp-0x64]
  412105:	pop    ebx
  412106:	xor    edi,ebp
  412108:	out    dx,al
  412109:	ins    DWORD PTR es:[edi],dx
  41210a:	cmp    edx,DWORD PTR [esi+0x6529ca04]
  412110:	sbb    al,0x90
  412112:	outs   dx,DWORD PTR ds:[esi]
  412113:	and    DWORD PTR [eax+0xd],edi
  412116:	push   ss
  412117:	mov    edi,0x38ea156b
  41211c:	arpl   bp,dx
  41211e:	clc    
  41211f:	jle    0x412196
  412121:	into   
  412122:	arpl   sp,dx
  412124:	xchg   ebx,eax
  412125:	nop
  412126:	(bad)  
  412127:	ror    DWORD PTR [esi+edx*4+0x17b7ac0a],1
  41212e:	mov    eax,ds:0x1fa6f6fa
  412133:	inc    ebx
  412134:	mov    ds:0xdae1b7e8,al
  412139:	in     eax,0x85
  41213b:	mov    al,es:0x6c87d1ab
  412141:	dec    esi
  412142:	aaa    
  412143:	push   0x6c
  412145:	adc    ch,BYTE PTR [edi]
  412147:	xchg   BYTE PTR [esi+ebx*2],dh
  41214a:	inc    DWORD PTR [ebx-0x1abedc87]
  412150:	(bad)  
  412152:	add    cl,BYTE PTR [eax+eax*1]
  412155:	sti    
  412156:	dec    edx
  412157:	push   esi
  412158:	dec    ebx
  412159:	leave  
  41215a:	sbb    DWORD PTR [edi+edx*1+0x737a5d3f],esp
  412161:	or     ah,BYTE PTR [esi-0x33]
  412164:	sub    al,BYTE PTR [eax+0x9986252]
  41216a:	cdq    
  41216b:	add    DWORD PTR ss:[edi],eax
  41216e:	mov    cl,0x30
  412170:	inc    edi
  412171:	lock rcl BYTE PTR [edx+0x699d8ae6],0x83
  412179:	(bad)  
  41217a:	jl     0x412105
  41217c:	xor    al,0xda
  41217e:	call   0xdf6bc16c
  412183:	or     eax,0x981e712e
  412188:	fimul  WORD PTR [edx]
  41218a:	add    DWORD PTR [ecx+0x36],edi
  41218d:	xchg   esp,eax
  41218e:	ret    
  41218f:	mov    eax,ds:0x2a9f90a5
  412194:	jle    0x412204
  412196:	arpl   WORD PTR ds:0x348d2e57,si
  41219c:	int3   
  41219d:	push   0xffffff9a
  41219f:	leave  
  4121a0:	sub    al,BYTE PTR [ebx]
  4121a2:	jp     0x412187
  4121a4:	ds mov bh,bh
  4121a7:	dec    ebp
  4121a8:	out    dx,eax
  4121a9:	ins    BYTE PTR es:[edi],dx
  4121aa:	push   cs
  4121ab:	clc    
  4121ac:	pop    eax
  4121ad:	cs fxch st(1)
  4121b0:	in     eax,0x38
  4121b2:	mov    ds:0x7302de2d,al
  4121b7:	adc    al,0x95
  4121b9:	(bad)  
  4121ba:	mov    ds:0x53fa734c,eax
  4121bf:	pop    ecx
  4121c0:	mov    ah,bh
  4121c2:	popf   
  4121c3:	jbe    0x412164
  4121c5:	pop    edi
  4121c6:	mov    DWORD PTR [edx-0x190dc92b],ebx
  4121cc:	mov    eax,DWORD PTR [eax]
  4121ce:	and    BYTE PTR [ebx+0x56fb0a34],0xb2
  4121d5:	btc    DWORD PTR [bx+di],ebx
  4121d9:	sub    eax,0xeceea9c7
  4121de:	inc    esi
  4121df:	and    DWORD PTR [ebx-0x44],eax
  4121e2:	lock jae 0x412241
  4121e5:	int3   
  4121e6:	dec    ebx
  4121e7:	cmp    al,0xbb
  4121e9:	test   BYTE PTR [esi+ebx*8+0x71],bh
  4121ed:	lods   al,BYTE PTR ds:[esi]
  4121ee:	rcl    BYTE PTR [edi-0x2fbe8166],0xd
  4121f5:	xchg   edi,eax
  4121f6:	pop    ds
  4121f7:	jp     0x4121a0
  4121f9:	adc    eax,0x578a8302
  4121fe:	jmp    0x412274
  412200:	iret   
  412201:	mov    dh,BYTE PTR [edi-0x7c0d3dc]
  412207:	mov    DWORD PTR [ebp+0x579228e2],ecx
  41220d:	pop    ss
  41220e:	fbstp  TBYTE PTR [ebx-0x40]
  412211:	mov    esp,0x7bf6f16a
  412216:	mov    eax,0xe8af4965
  41221b:	mov    ah,0x2a
  41221d:	mov    edx,0x5886524e
  412222:	sbb    cl,dl
  412224:	mov    eax,ds:0xf56229f8
  412229:	stc    
  41222a:	jp     0x41228d
  41222c:	mov    esi,0x796e6844
  412231:	cwde   
  412232:	in     al,0x74
  412234:	enter  0x5a12,0x1d
  412238:	add    eax,0x6c355cee
  41223d:	cmp    BYTE PTR [edx-0x30],al
  412240:	scas   eax,DWORD PTR es:[edi]
  412241:	cmp    BYTE PTR [edx],ch
  412243:	xchg   ebx,eax
  412244:	jbe    0x4122a1
  412246:	add    al,0xca
  412248:	mov    ebx,0xf5e103cb
  41224d:	push   0xffffffa9
  41224f:	adc    BYTE PTR ds:[ebp-0x5f],bh
  412253:	mov    ah,0x3a
  412255:	mov    bh,0x97
  412257:	xchg   DWORD PTR [eax+eiz*1+0x474275e0],esi
  41225e:	popf   
  41225f:	add    al,0xea
  412261:	dec    ebp
  412262:	rcl    BYTE PTR [ebp-0x1f03deed],1
  412268:	cmp    esi,DWORD PTR [eax-0x17]
  41226b:	out    0x21,al
  41226d:	mov    bl,0x59
  41226f:	cld    
  412270:	cs iret 
  412272:	jp     0x41224b
  412274:	or     DWORD PTR [ebp-0x23],esi
  412277:	dec    esp
  412278:	dec    DWORD PTR [edi+0x3b181e12]
  41227e:	(bad)  
  41227f:	int3   
  412280:	sub    eax,0xbdf1e68d
  412285:	mov    ebp,DWORD PTR [edx-0x251ea576]
  41228b:	mov    ch,0x6d
  41228d:	pop    ss
  41228e:	push   ebx
  41228f:	push   es
  412290:	or     ebp,edx
  412292:	cmp    esp,ecx
  412294:	(bad)  
  412295:	loopne 0x412253
  412297:	out    dx,al
  412298:	fst    DWORD PTR [ebp-0x30]
  41229b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41229c:	loope  0x412284
  41229e:	mov    al,BYTE PTR [ecx+0x1fc69194]
  4122a4:	pushf  
  4122a5:	mov    al,0xc2
  4122a7:	mov    edx,0xe2b5770b
  4122ac:	cmc    
  4122ad:	bound  ebx,QWORD PTR [ecx+eiz*8+0x5f818a19]
  4122b4:	sbb    DWORD PTR [ebp+0x3c],ebp
  4122b7:	dec    eax
  4122b8:	xor    edi,0x2e2bacc5
  4122be:	pop    ebx
  4122bf:	xchg   ebp,eax
  4122c0:	leave  
  4122c1:	ss or  ebx,eax
  4122c4:	(bad)  
  4122c5:	iret   
  4122c6:	stos   BYTE PTR es:[edi],al
  4122c7:	sbb    bh,BYTE PTR ds:0xe972d537
  4122cd:	jne    0x412299
  4122cf:	mov    al,0x2c
  4122d1:	mov    cl,0x72
  4122d3:	(bad)  
  4122d4:	out    dx,eax
  4122d5:	jmp    0xc95a0e89
  4122da:	xchg   ecx,eax
  4122db:	dec    ebp
  4122dc:	mov    esp,DWORD PTR [edi]
  4122de:	jno    0x41233d
  4122e0:	sahf   
  4122e1:	sub    edi,0x2751cf2
  4122e7:	mov    ch,0x81
  4122e9:	in     al,dx
  4122ea:	adc    BYTE PTR [edi],0x67
  4122ed:	sub    DWORD PTR [ebx+0x7d],ebx
  4122f0:	test   BYTE PTR [edi+edx*8-0x11db6fcd],dl
  4122f7:	ret    0xfd96
  4122fa:	inc    DWORD PTR [edi-0x7c]
  4122fd:	or     BYTE PTR [edx],ah
  4122ff:	jbe    0x4122aa
  412301:	imul   ecx,DWORD PTR [esi-0x56074b1],0x7b20d9f0
  41230b:	push   0x2f9154f2
  412310:	sahf   
  412311:	jmp    0xfe99:0x6b84a539
  412318:	jo     0x412337
  41231a:	lea    ecx,[edi]
  41231c:	xor    bl,dh
  41231e:	mov    al,0xa8
  412320:	xchg   esi,eax
  412321:	jnp    0x4122ce
  412323:	and    eax,0x12846498
  412328:	cld    
  412329:	cmc    
  41232a:	jmp    0xe11e604a
  41232f:	pop    ds
  412330:	dec    ebp
  412331:	test   al,0xd3
  412333:	pusha  
  412334:	das    
  412335:	pusha  
  412336:	mov    esi,0xa1321940
  41233b:	adc    al,0x71
  41233d:	es mov ebx,0xca659033
  412343:	jo     0x412327
  412345:	jecxz  0x412383
  412347:	loopne 0x412315
  412349:	dec    edx
  41234a:	xchg   ebp,eax
  41234b:	push   0x7e
  41234d:	icebp  
  41234e:	jmp    0x54a03057
  412353:	(bad)
  412356:	repz les ebp,FWORD PTR [edi-0x31ddb2b2]
  41235d:	cmp    eax,DWORD PTR [eax+0x31]
  412360:	stos   DWORD PTR es:[edi],eax
  412361:	adc    ebx,DWORD PTR [ebx-0x1723466d]
  412367:	dec    esi
  412368:	xor    eax,0x7c5eafae
  41236d:	stos   BYTE PTR es:[edi],al
  41236e:	ds cld 
  412370:	jne    0x412358
  412372:	shl    DWORD PTR [ebp+0x10391b69],cl
  412378:	inc    esi
  412379:	popa   
  41237a:	fs xor eax,0xf27283f8
  412380:	in     eax,dx
  412381:	fistp  DWORD PTR ds:0xb03067a8
  412387:	push   edi
  412388:	sbb    eax,DWORD PTR [ebp+0x5ee3f328]
  41238e:	push   esi
  41238f:	cli    
  412390:	xor    esi,DWORD PTR [ebx]
  412392:	sahf   
  412393:	or     eax,ebx
  412395:	push   ss
  412396:	or     ecx,DWORD PTR cs:[edi+0x63508648]
  41239d:	xchg   ebp,eax
  41239e:	(bad)  
  41239f:	pop    ds
  4123a0:	int    0x23
  4123a2:	icebp  
  4123a3:	xor    BYTE PTR [ebp+0x2575672b],bl
  4123a9:	jecxz  0x412423
  4123ab:	sbb    BYTE PTR [ebx-0x1c55dd16],ah
  4123b1:	dec    ecx
  4123b2:	bound  edx,QWORD PTR [ebx+eax*4+0x6f]
  4123b6:	aaa    
  4123b7:	pop    ebp
  4123b8:	test   al,0x90
  4123ba:	push   ds
  4123bb:	mov    esi,0x9eb469a1
  4123c0:	dec    edx
  4123c1:	outs   dx,DWORD PTR ds:[esi]
  4123c2:	cmp    eax,0xa4183d03
  4123c7:	stc    
  4123c8:	adc    DWORD PTR [edx],edx
  4123ca:	sbb    al,0x77
  4123cc:	data16 jno 0x4123ff
  4123cf:	(bad)  [edx+0x4d0d2466]
  4123d5:	out    dx,eax
  4123d6:	in     eax,dx
  4123d7:	rol    BYTE PTR [ebx+0x2596d51e],0xa1
  4123de:	mov    esi,0x4ae87021
  4123e3:	outs   dx,DWORD PTR ds:[esi]
  4123e4:	mov    dl,0xe2
  4123e6:	addr16 dec ebp
  4123e8:	(bad)  
  4123e9:	popa   
  4123ea:	adc    BYTE PTR [esp+0x3193be5a],0x9d
  4123f2:	sbb    ch,BYTE PTR [edi+0x33]
  4123f5:	push   es
  4123f6:	adc    BYTE PTR [edx-0x1c],ch
  4123f9:	call   0xb2b1b5d7
  4123fe:	adc    ah,BYTE PTR [esi]
  412400:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412401:	mov    dl,0xfc
  412403:	into   
  412404:	pop    esp
  412405:	cwde   
  412406:	jmp    0x82028f91
  41240b:	mov    edi,0x25a4c399
  412410:	out    0xdc,al
  412412:	xor    BYTE PTR [edx+0x7c006eeb],cl
  412418:	pop    eax
  412419:	jge    0x412491
  41241b:	les    edi,FWORD PTR [ebx]
  41241d:	shr    BYTE PTR [ebx+0x5e],1
  412420:	cwde   
  412421:	mov    edx,DWORD PTR [edx+0x3bead50f]
  412427:	int    0xba
  412429:	push   esi
  41242a:	ins    DWORD PTR es:[edi],dx
  41242b:	sahf   
  41242c:	mov    eax,ds:0xd9197a44
  412431:	sub    DWORD PTR [ecx+0x20],0x77
  412435:	rcl    DWORD PTR [edx+0xbc158fa],cl
  41243b:	sub    ebp,DWORD PTR ds:0xcbae8fc3
  412441:	enter  0xa9a8,0xa2
  412445:	dec    ebx
  412446:	xor    ebx,DWORD PTR ds:0x1672fc30
  41244c:	cld    
  41244d:	stos   DWORD PTR es:[edi],eax
  41244e:	xlat   BYTE PTR ds:[ebx]
  41244f:	nop
  412450:	cmp    eax,0x8aeaeeb0
  412455:	(bad)  
  412456:	and    al,0x9b
  412458:	xlat   BYTE PTR ds:[ebx]
  412459:	jae    0x4124c3
  41245b:	cli    
  41245c:	aaa    
  41245d:	jmp    0x1a6497f2
  412462:	(bad)  
  412463:	call   0x873e42b6
  412468:	(bad)  
  41246a:	sub    eax,0xeb8bd25f
  41246f:	pop    ds
  412470:	aas    
  412471:	mov    ds,esi
  412473:	ficom  WORD PTR [edx-0x36295fbe]
  412479:	adc    al,0x48
  41247b:	fst    QWORD PTR [edx-0x27257d3f]
  412481:	iret   
  412482:	dec    edi
  412483:	mov    ebx,0xab01bd24
  412488:	(bad)  
  412489:	mov    esp,0x6fc137d5
  41248e:	adc    eax,0xa1db9a1
  412493:	cmp    eax,0xb37ce2b1
  412498:	xchg   esi,eax
  412499:	mov    esp,0xfd5d1dca
  41249e:	xchg   ecx,eax
  41249f:	mov    dl,0x8a
  4124a1:	sbb    eax,0x69a5d4b7
  4124a6:	jge    0x412468
  4124a8:	jg     0x41244d
  4124aa:	inc    ebx
  4124ab:	pop    ebp
  4124ac:	mul    ebx
  4124ae:	xchg   DWORD PTR [ebx],eax
  4124b0:	sub    dl,BYTE PTR [ebx-0x6c]
  4124b3:	inc    ebp
  4124b4:	int3   
  4124b5:	(bad)  
  4124b6:	sbb    al,0x9
  4124b8:	adc    al,0x9e
  4124ba:	pushf  
  4124bb:	mov    ah,0x94
  4124bd:	jl     0x412491
  4124bf:	out    0x32,al
  4124c1:	adc    esp,DWORD PTR [ebx]
  4124c3:	jno    0x412492
  4124c5:	xchg   ebp,eax
  4124c6:	pop    ebp
  4124c7:	test   BYTE PTR [ecx],dh
  4124c9:	adc    al,0x92
  4124cb:	mov    esp,0xa326f07
  4124d0:	int3   
  4124d1:	les    esi,FWORD PTR [esi-0x7]
  4124d4:	adc    ch,BYTE PTR [esi-0x46]
  4124d7:	stos   BYTE PTR es:[edi],al
  4124d8:	mov    al,0xf7
  4124da:	pushf  
  4124db:	xor    BYTE PTR [esi+0x3c],0xe8
  4124df:	addr16 jmp 0xe584:0x799771d5
  4124e7:	xor    BYTE PTR [esi+0x73],ah
  4124ea:	sub    al,0xd7
  4124ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124ed:	xchg   edx,eax
  4124ee:	sub    al,0x6a
  4124f0:	sahf   
  4124f1:	pop    esi
  4124f2:	jmp    0xb711:0x594d6ce7
  4124f9:	outs   dx,DWORD PTR ds:[esi]
  4124fa:	cdq    
  4124fb:	ja     0x412576
  4124fd:	scas   eax,DWORD PTR es:[edi]
  4124fe:	mov    bl,0xe7
  412500:	xchg   bl,bl
  412502:	popf   
  412503:	sbb    BYTE PTR [eax-0x7955b0d5],bl
  412509:	xor    DWORD PTR [eax-0x1a6eb667],ebp
  41250f:	arpl   WORD PTR ds:[eax+0x41606dfa],bp
  412516:	jo     0x41254f
  412518:	cmc    
  412519:	xchg   DWORD PTR [ebx],ebx
  41251b:	pop    ebx
  41251c:	mov    esp,0x25834e43
  412521:	add    BYTE PTR cs:[eax],0xd4
  412525:	push   ebp
  412526:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412527:	cmp    esi,DWORD PTR [ecx+0x4175aa26]
  41252d:	push   edx
  41252e:	xor    ah,BYTE PTR [esi-0x62]
  412531:	mov    ch,0xa8
  412533:	test   eax,0x87890655
  412538:	pop    eax
  412539:	fwait
  41253a:	ins    WORD PTR es:[edi],dx
  41253c:	sub    al,0x1d
  41253e:	sbb    ebx,ecx
  412540:	scas   al,BYTE PTR es:[edi]
  412541:	push   edx
  412542:	or     al,0xc4
  412545:	out    0x38,eax
  412547:	lea    edi,[edi+eax*2-0x3ff3c0a4]
  41254e:	fsubr  DWORD PTR [ebp+0x5a]
  412551:	mov    edi,0x6a79d159
  412556:	loop   0x4124de
  412558:	jnp    0x412549
  41255a:	ss dec ebx
  41255c:	lods   eax,DWORD PTR ds:[esi]
  41255d:	and    esi,DWORD PTR [ebx]
  41255f:	int3   
  412560:	mov    cl,0x67
  412562:	dec    esp
  412563:	jecxz  0x41251d
  412565:	and    al,0x3e
  412567:	inc    esi
  412568:	mov    ebp,0x60356bf7
  41256d:	sub    ecx,DWORD PTR ds:0xbfb9bd56
  412573:	imul   ecx,DWORD PTR [edi+esi*1],0xb34cfcaf
  41257a:	cdq    
  41257b:	adc    BYTE PTR [ebp-0x74],ah
  41257e:	dec    edi
  41257f:	mov    edi,0x71bf4905
  412584:	xlat   BYTE PTR ds:[ebx]
  412585:	push   esi
  412586:	mov    esi,DWORD PTR [eax+0x1ce2138e]
  41258c:	addr16 sub eax,0xedb51535
  412592:	push   ds
  412593:	mov    ebp,0xddc7b704
  412598:	jne    0x412557
  41259a:	or     esp,esp
  41259c:	xchg   BYTE PTR [ebp+0x1b],ah
  41259f:	std    
  4125a0:	pushf  
  4125a1:	mov    al,ds:0x34929382
  4125a6:	sbb    ah,ch
  4125a8:	aad    0x90
  4125aa:	in     eax,dx
  4125ab:	loope  0x412538
  4125ad:	xor    al,0x5d
  4125af:	sbb    BYTE PTR [ebx-0x45a14d64],dl
  4125b5:	jns    0x412583
  4125b7:	push   eax
  4125b8:	inc    esp
  4125b9:	shr    ch,0x70
  4125bc:	adc    edx,edx
  4125be:	mov    ds:0x271ec81f,eax
  4125c3:	sub    eax,0xb961af7f
  4125c8:	pop    ebx
  4125c9:	sub    al,0x6e
  4125cb:	ins    BYTE PTR es:[edi],dx
  4125cc:	aam    0xc0
  4125ce:	adc    DWORD PTR [edi+eax*4],eax
  4125d1:	push   ecx
  4125d2:	pop    edi
  4125d3:	inc    edi
  4125d4:	(bad)  
  4125d5:	adc    ecx,DWORD PTR ds:0x2abdc084
  4125db:	lods   eax,DWORD PTR ds:[esi]
  4125dc:	out    dx,al
  4125dd:	ins    DWORD PTR es:[edi],dx
  4125de:	les    esp,FWORD PTR [edi]
  4125e0:	cmp    eax,0x45c5d851
  4125e5:	das    
  4125e6:	cmp    eax,0x1b1ee8e8
  4125eb:	or     eax,0x6c1afb06
  4125f0:	mov    ss,WORD PTR [edx-0x1f373950]
  4125f6:	rol    DWORD PTR [edx],1
  4125f8:	into   
  4125f9:	or     BYTE PTR [edx*2+0x410eea49],dh
  412600:	sub    eax,0x311da6a9
  412605:	xchg   esi,eax
  412606:	clc    
  412607:	xchg   edi,eax
  412608:	imul   edi,DWORD PTR [edi+0x66],0x12ce99ea
  41260f:	cmp    DWORD PTR [edi-0x64],eax
  412612:	or     ah,al
  412614:	sub    DWORD PTR [edi-0x5b],ecx
  412617:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412618:	pushf  
  412619:	stc    
  41261a:	pop    esi
  41261b:	xchg   edi,eax
  41261c:	or     BYTE PTR [ebx-0x7d],dl
  41261f:	mov    ds:0x7484d407,al
  412624:	add    eax,0xa973c8de
  412629:	lods   eax,DWORD PTR ds:[esi]
  41262a:	aas    
  41262b:	or     BYTE PTR [ebx],al
  41262d:	mov    ebx,0xc72bef8f
  412632:	jo     0x4125d0
  412634:	pop    ecx
  412635:	stc    
  412636:	enter  0x5b2,0xe9
  41263a:	(bad)  
  41263b:	sti    
  41263c:	pop    ebp
  41263d:	inc    edi
  41263e:	scas   al,BYTE PTR es:[edi]
  41263f:	push   ss
  412640:	mov    bh,0xae
  412642:	iret   
  412643:	pop    ebp
  412644:	fdivrp st(5),st
  412646:	repnz in eax,dx
  412648:	jecxz  0x412671
  41264a:	arpl   WORD PTR [edx],bp
  41264c:	pop    ebx
  41264d:	ror    DWORD PTR [esi],cl
  41264f:	test   eax,0x9fda5017
  412654:	sub    DWORD PTR [edi+0x11d44e8f],edi
  41265a:	xchg   edx,eax
  41265b:	xchg   esp,eax
  41265c:	inc    esi
  41265d:	leave  
  41265e:	inc    ecx
  41265f:	add    al,0x28
  412661:	inc    esi
  412662:	and    BYTE PTR ds:0x1ae331ae,dl
  412668:	lock sub eax,0xe9903a93
  41266e:	and    BYTE PTR [ebx+0x4d],bl
  412671:	inc    eax
  412672:	and    cl,BYTE PTR [ebp+0x11]
  412675:	pop    ds
  412676:	and    DWORD PTR [ebp-0x2a],ebx
  412679:	mov    bh,0x78
  41267b:	loope  0x4126c0
  41267d:	mov    al,0xfa
  41267f:	out    dx,eax
  412680:	push   eax
  412681:	retf   0x5134
  412684:	das    
  412685:	jmp    0x412647
  412687:	leave  
  412688:	dec    ebx
  412689:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41268a:	cmp    ebx,DWORD PTR [ebp+0x6d3fc2fc]
  412690:	call   0x985f5114
  412695:	imul   edi,DWORD PTR [edi],0x28
  412698:	test   BYTE PTR [ebx],0xff
  41269b:	in     al,dx
  41269c:	jne    0x4126b8
  4126a2:	xor    eax,esi
  4126a4:	add    eax,edi
  4126a6:	imul   eax,edx
  4126a9:	mov    edx,DWORD PTR [ebp-0x8]
  4126ac:	movzx  eax,BYTE PTR [eax+edx*1]
  4126b0:	mov    edx,DWORD PTR [ebp-0x48]
  4126b3:	jmp    0x4126c9
  4126b8:	xor    eax,esi
  4126ba:	add    eax,edi
  4126bc:	imul   eax,edx
  4126bf:	mov    edx,DWORD PTR [ebp-0x8]
  4126c2:	movzx  eax,BYTE PTR [eax+edx*1]
  4126c6:	mov    edx,DWORD PTR [ebp-0x4c]
  4126c9:	xor    edx,esi
  4126cb:	lea    eax,[edx+eax*1+0x3272db]
  4126d2:	movzx  edx,BYTE PTR [ebp-0x1]
  4126d6:	xor    edx,eax
  4126d8:	mov    BYTE PTR [ebp-0x1],dl
  4126db:	mov    al,BYTE PTR [ebp-0x1]
  4126de:	mov    edx,DWORD PTR [ebp-0x30]
  4126e1:	mov    ebx,DWORD PTR [ebp-0xc]
  4126e4:	xor    edx,esi
  4126e6:	add    edx,edi
  4126e8:	imul   edx,ebx
  4126eb:	mov    ebx,DWORD PTR [ebp-0x1c]
  4126ee:	xor    ebx,esi
  4126f0:	add    edx,ebx
  4126f2:	mov    ebx,DWORD PTR [ebp-0x8]
  4126f5:	mov    BYTE PTR [edx+ebx*1+0x3272db],al
  4126fc:	mov    eax,DWORD PTR [ebp-0x38]
  4126ff:	jmp    0x414a74
  412704:	sbb    ch,BYTE PTR [edx+0xa]
  412707:	sbb    eax,0x65e59d8a
  41270c:	push   eax
  41270d:	mov    ah,0x55
  41270f:	mov    al,0x91
  412711:	and    DWORD PTR [ebx+0x626a47a4],ebx
  412717:	bound  ecx,QWORD PTR [edx]
  412719:	pop    edi
  41271a:	bound  esp,QWORD PTR [edx+0x5a]
  41271d:	gs (bad) 
  41271f:	retf   0xcd86
  412722:	(bad)  
  412724:	mov    eax,ds:0x433ccff8
  412729:	xor    ebp,DWORD PTR [esp+edi*1-0x69]
  41272d:	jno    0x412741
  41272f:	pop    ecx
  412730:	inc    eax
  412731:	and    DWORD PTR [edi],0xce788aea
  412737:	scas   eax,DWORD PTR es:[edi]
  412738:	fsub   DWORD PTR [edx]
  41273a:	retf   
  41273b:	push   edi
  41273c:	and    cl,BYTE PTR [eax]
  41273e:	jg     0x412756
  412740:	mov    dl,0xe4
  412742:	mov    ah,0x35
  412744:	xlat   BYTE PTR ds:[ebx]
  412745:	test   dl,0x44
  412748:	add    DWORD PTR [esi+0x48],0xa78d0acc
  41274f:	xlat   BYTE PTR ds:[ebx]
  412750:	(bad)  
  412751:	nop
  412752:	dec    ebx
  412753:	in     eax,0x3
  412755:	je     0x412730
  412757:	jp     0x412773
  412759:	fwait
  41275a:	or     eax,0xa6a44e26
  41275f:	cmp    esi,DWORD PTR [edi+0xf92dc40]
  412765:	inc    eax
  412766:	xchg   edi,eax
  412767:	or     esi,DWORD PTR [esi-0x16e2ae3c]
  41276d:	pop    ds
  41276e:	test   DWORD PTR [ebx+0x31],eax
  412771:	dec    esp
  412772:	pop    es
  412773:	ins    DWORD PTR es:[edi],dx
  412774:	or     eax,0xe7f9e3a1
  412779:	and    BYTE PTR [edx+0x21],0x64
  41277d:	(bad)  
  41277e:	(bad)
  412782:	shl    BYTE PTR [eax],1
  412784:	mov    esp,0x6547d532
  412789:	lea    edi,[edi+esi*2+0xd72f8b6]
  412790:	ret    
  412791:	popa   
  412792:	dec    esp
  412793:	lods   al,BYTE PTR ds:[esi]
  412794:	push   eax
  412795:	pop    ss
  412796:	mov    dh,0xda
  412798:	sub    DWORD PTR [edi],ecx
  41279a:	mov    edi,0x38292969
  41279f:	mov    dh,0xa1
  4127a1:	mov    cr7,esp
  4127a4:	mov    esi,DWORD PTR [esi-0x26ee705b]
  4127aa:	in     eax,dx
  4127ab:	(bad)  
  4127ac:	pop    ecx
  4127ad:	add    al,0xf6
  4127af:	daa    
  4127b0:	jge    0x412779
  4127b2:	push   edi
  4127b3:	cmp    edi,DWORD PTR [esi]
  4127b5:	sub    ebx,eax
  4127b7:	pop    ecx
  4127b8:	mov    cl,BYTE PTR [edi]
  4127ba:	xlat   BYTE PTR ds:[ebx]
  4127bb:	xchg   ecx,eax
  4127bc:	xor    eax,0xeeb31fd
  4127c1:	add    eax,DWORD PTR [ecx+ecx*1+0x35]
  4127c5:	loopne 0x412817
  4127c7:	loop   0x412770
  4127c9:	xlat   BYTE PTR ds:[ebx]
  4127ca:	fldenv [ebx]
  4127cc:	cdq    
  4127cd:	adc    eax,0x43d18f32
  4127d2:	pusha  
  4127d3:	not    DWORD PTR [ebp+0x69ccf689]
  4127d9:	into   
  4127da:	fcomi  st,st(3)
  4127dc:	jnp    0x4127fe
  4127de:	add    edi,DWORD PTR [eax]
  4127e0:	enter  0xc0a5,0xa4
  4127e4:	repz int 0xaf
  4127e7:	lahf   
  4127e8:	outs   dx,BYTE PTR ds:[esi]
  4127e9:	ret    
  4127ea:	jno    0x412818
  4127ec:	push   ebp
  4127ed:	jns    0x41286b
  4127ef:	inc    eax
  4127f0:	bound  ebx,QWORD PTR [edx-0x60]
  4127f3:	sub    eax,0xf6fb0710
  4127f8:	inc    esi
  4127f9:	gs mov ebx,0x2c66b570
  4127ff:	sub    DWORD PTR [eax+0x78a2adf6],0x6d3bbced
  412809:	add    BYTE PTR [ecx-0x4a],0xf3
  41280d:	add    eax,0x33680df1
  412812:	aam    0x5
  412814:	mov    ds:0x185670c0,eax
  412819:	fdiv   st,st(6)
  41281b:	dec    DWORD PTR [eax]
  41281d:	test   al,0xaf
  41281f:	mov    al,0x7d
  412821:	dec    eax
  412822:	(bad)  
  412823:	xor    eax,0x2ee61225
  412828:	pusha  
  412829:	xor    al,0x4c
  41282b:	in     eax,0x62
  41282d:	mov    eax,0xc3d6f5d8
  412832:	loope  0x4128a8
  412834:	and    ebx,0x1e19b7e3
  41283a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41283b:	sar    BYTE PTR [edx+0x1c1cb320],0xbb
  412842:	std    
  412843:	dec    ecx
  412844:	mov    eax,ds:0xbc60baab
  412849:	lods   eax,DWORD PTR ds:[esi]
  41284a:	push   ebp
  41284b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41284c:	test   al,0xc
  41284e:	neg    BYTE PTR [esi-0x39]
  412851:	add    al,0x34
  412853:	mov    DWORD PTR [ebx+0x691acf12],edx
  412859:	push   ecx
  41285a:	rcr    al,0xca
  41285d:	and    eax,0x3bc7426a
  412862:	retf   
  412863:	hlt    
  412864:	aad    0x3a
  412866:	fwait
  412867:	rep stos DWORD PTR es:[edi],eax
  412869:	js     0x41287c
  41286b:	push   0xffffffe8
  41286d:	and    BYTE PTR [edx-0x52],ch
  412870:	int3   
  412871:	out    dx,eax
  412872:	jbe    0x41283b
  412874:	xchg   esp,eax
  412875:	je     0x412822
  412877:	inc    dl
  412879:	in     eax,dx
  41287a:	pusha  
  41287b:	pop    ss
  41287c:	(bad)  
  41287d:	push   esp
  41287e:	test   DWORD PTR ds:0xcdf05f04,0xb353cfc
  412888:	inc    edi
  412889:	(bad)  
  41288a:	push   esp
  41288b:	mov    ch,0x9e
  41288d:	sub    eax,0xa256bdf5
  412892:	cmp    al,0x5d
  412894:	repz pusha 
  412896:	mov    cl,0xe5
  412898:	sub    esi,edi
  41289a:	sbb    DWORD PTR [ebx+esi*4-0x2],ecx
  41289e:	inc    edi
  41289f:	fnstsw WORD PTR [esi-0x3]
  4128a2:	lods   al,BYTE PTR ds:[esi]
  4128a3:	inc    ecx
  4128a4:	sub    ah,BYTE PTR [edx]
  4128a6:	call   DWORD PTR [esi+eiz*4+0x4d5e18da]
  4128ad:	inc    edx
  4128ae:	mov    ebx,0x7b98c7ba
  4128b3:	loopne 0x412924
  4128b5:	xchg   ebp,eax
  4128b6:	in     al,0xb6
  4128b8:	and    eax,0xbab31ff1
  4128bd:	jle    0x412852
  4128bf:	jns    0x412884
  4128c1:	fld    QWORD PTR [ebp+0x1c]
  4128c4:	addr16 leave 
  4128c6:	adc    al,0x39
  4128c8:	pop    ebp
  4128c9:	fs mov ecx,0x5836bd45
  4128cf:	icebp  
  4128d0:	fld    QWORD PTR [edi]
  4128d2:	add    bl,ch
  4128d4:	(bad)  [ebp+0x39539a2e]
  4128da:	or     eax,0xc40de3fc
  4128df:	push   0xa819d9be
  4128e4:	xchg   ecx,eax
  4128e5:	cmp    DWORD PTR [ecx],0xffffffed
  4128e8:	out    dx,al
  4128e9:	pop    esp
  4128ea:	sub    dl,al
  4128ec:	jnp    0x412938
  4128ee:	lahf   
  4128ef:	and    DWORD PTR [eax],ebp
  4128f1:	pop    edx
  4128f2:	rol    DWORD PTR ds:0x84b09913,cl
  4128f8:	cld    
  4128f9:	dec    edx
  4128fa:	test   BYTE PTR [esi+0x752ff5aa],dl
  412900:	call   0x7e4fcd67
  412905:	bound  esi,QWORD PTR [edi]
  412907:	pop    ebx
  412908:	ins    BYTE PTR es:[edi],dx
  412909:	jae    0x412909
  41290b:	pop    ds
  41290c:	mov    eax,0xb66896ed
  412911:	inc    esi
  412912:	in     al,0xed
  412914:	sar    BYTE PTR [ebx-0x4b3d0da0],1
  41291a:	add    ah,BYTE PTR [edx]
  41291c:	aas    
  41291d:	sbb    DWORD PTR [esi],edx
  41291f:	jns    0x4128e7
  412921:	xor    dh,BYTE PTR [ebx+edi*2-0x21]
  412925:	xchg   esi,eax
  412926:	jbe    0x412930
  412928:	sti    
  412929:	clc    
  41292a:	add    bh,BYTE PTR [eax+0x28]
  41292d:	fs loop 0x412923
  412930:	lahf   
  412931:	xchg   edx,eax
  412932:	add    eax,0x51605b0c
  412937:	mov    al,ds:0x185dea4e
  41293c:	out    0xa4,al
  41293e:	pusha  
  41293f:	in     eax,dx
  412940:	dec    ecx
  412941:	and    BYTE PTR [esi],0xbb
  412944:	scas   al,BYTE PTR es:[edi]
  412945:	cs adc al,0xb3
  412948:	mov    esp,0xe49ce543
  41294d:	mov    ds:0x1f15a8ac,al
  412952:	push   edx
  412953:	fmulp  st(4),st
  412955:	mov    ecx,0xb52e6a48
  41295a:	popw   ss
  41295c:	and    eax,0xed9c6fda
  412961:	call   0x16586725
  412966:	ja     0x4129c4
  412968:	fdiv   QWORD PTR [ebx+0x37a5c194]
  41296e:	cmp    bl,BYTE PTR [ebp+0x695fe6e1]
  412974:	pop    ss
  412975:	inc    eax
  412976:	cs int 0xe6
  412979:	aaa    
  41297a:	dec    edi
  41297b:	xor    DWORD PTR ds:0x2a90ead4,edx
  412981:	mov    esp,0xba158cb7
  412986:	ins    DWORD PTR es:[edi],dx
  412987:	pop    ecx
  412988:	inc    ecx
  412989:	push   ds
  41298a:	adc    eax,0x9ae405d
  41298f:	aas    
  412990:	popaw  
  412992:	jp     0x4129fd
  412994:	mov    al,ds:0x4335bf0b
  412999:	sbb    eax,0xd5c8819e
  41299e:	(bad)  
  41299f:	mov    ebp,0x75154fef
  4129a4:	lds    ebp,FWORD PTR [ebx-0x5be08b01]
  4129aa:	frstor [edx]
  4129ac:	mov    ebx,0xd56a2482
  4129b1:	mov    al,ds:0xea65f3ef
  4129b6:	js     0x4129ba
  4129b8:	inc    ebp
  4129b9:	sbb    eax,0xec0d484
  4129be:	pop    ebp
  4129bf:	add    cl,ah
  4129c1:	enter  0x8393,0xa3
  4129c5:	mov    BYTE PTR [ebx-0x27659192],dh
  4129cb:	mov    ds:0xf70f5157,eax
  4129d0:	mov    esp,DWORD PTR [esi+edx*8+0x41]
  4129d4:	popf   
  4129d5:	push   ecx
  4129d6:	rcl    DWORD PTR [ecx+edi*2],cl
  4129d9:	adc    eax,0x65bda256
  4129de:	out    dx,al
  4129df:	jmp    0xabb94d7f
  4129e4:	mov    al,ds:0x5cd4c0ab
  4129e9:	sbb    eax,0x28e8d385
  4129ee:	pop    ds
  4129ef:	sub    BYTE PTR [edx],bl
  4129f1:	adc    dl,cl
  4129f3:	inc    edi
  4129f4:	push   ebp
  4129f5:	sbb    al,0x6c
  4129f7:	pop    ds
  4129f8:	jne    0x412994
  4129fa:	icebp  
  4129fb:	add    al,0xe6
  4129fd:	or     DWORD PTR [ebp-0x1b1932a8],edx
  412a03:	adc    DWORD PTR [ecx+0x2e],edx
  412a06:	fwait
  412a07:	ja     0x412a25
  412a09:	dec    ecx
  412a0a:	sub    eax,0x634e76b5
  412a0f:	ds push 0x38
  412a12:	cmc    
  412a13:	fsubr  DWORD PTR [edi-0xe]
  412a16:	xchg   BYTE PTR [eax+0x70],ch
  412a19:	add    eax,DWORD PTR [eax+0x9]
  412a1c:	cmp    al,0xd
  412a1e:	out    dx,al
  412a1f:	fyl2xp1 
  412a21:	add    eax,0xb5b601f7
  412a26:	dec    ebx
  412a27:	sub    BYTE PTR [ebx+0x66],al
  412a2a:	ror    BYTE PTR [edx],cl
  412a2c:	je     0x412a2d
  412a2e:	xchg   DWORD PTR [edi],esi
  412a30:	pop    ds
  412a31:	add    al,0x7c
  412a33:	daa    
  412a34:	outs   dx,BYTE PTR ds:[esi]
  412a35:	sbb    ch,BYTE PTR [esi-0x31d5cbfc]
  412a3b:	jo     0x412aa9
  412a3d:	pop    esp
  412a3e:	xchg   ebp,eax
  412a3f:	jo     0x412a53
  412a41:	mov    ah,0x31
  412a43:	push   ebx
  412a44:	xchg   esp,eax
  412a45:	fmul   QWORD PTR [esi]
  412a47:	mov    esp,0x6db65a01
  412a4c:	aas    
  412a4d:	jae    0x412a60
  412a4f:	xchg   edx,ecx
  412a51:	xchg   edi,eax
  412a52:	scas   al,BYTE PTR es:[edi]
  412a53:	call   0xf0b3:0xac35559
  412a5a:	jg     0x412abc
  412a5c:	test   al,0x69
  412a5e:	retf   
  412a5f:	add    ebp,0x77
  412a62:	ja     0x412a75
  412a64:	pop    es
  412a65:	mov    ch,0x53
  412a67:	test   eax,0x64f7dba
  412a6c:	call   0x271550a3
  412a71:	sti    
  412a72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a73:	mov    ch,0x13
  412a75:	cmp    BYTE PTR [esi+0x16907a33],bh
  412a7b:	mov    eax,ds:0x842b00a9
  412a80:	int3   
  412a81:	push   ss
  412a82:	adc    bl,BYTE PTR [edx]
  412a84:	mov    al,ds:0xaa040163
  412a89:	cmp    DWORD PTR [edi],ecx
  412a8b:	loop   0x412ae4
  412a8d:	lahf   
  412a8e:	pop    ss
  412a8f:	sahf   
  412a90:	mov    bh,0xdb
  412a92:	pop    esi
  412a93:	(bad)  
  412a94:	sub    al,0xfd
  412a96:	out    dx,al
  412a97:	adc    al,0x93
  412a99:	jl     0x412b00
  412a9b:	xor    al,0xdb
  412a9d:	xor    al,BYTE PTR [ebp+ebx*4+0x54991a36]
  412aa4:	xchg   edi,eax
  412aa5:	xchg   esi,eax
  412aa6:	stc    
  412aa7:	jbe    0x412a69
  412aa9:	jb     0x412a50
  412aab:	or     esp,DWORD PTR [edi-0x18]
  412aae:	mov    cl,0x53
  412ab0:	xchg   edx,eax
  412ab1:	jb     0x412a43
  412ab3:	or     BYTE PTR [ebx],0xe0
  412ab6:	cmp    eax,0x99ef000e
  412abb:	inc    edi
  412abc:	inc    ebp
  412abd:	in     al,dx
  412abe:	(bad)  
  412abf:	jge    0x412a60
  412ac1:	cmp    DWORD PTR [ebx-0x729f294e],edi
  412ac7:	popa   
  412ac8:	mov    esp,0xb19f7b16
  412acd:	sub    cl,BYTE PTR [esi-0x64]
  412ad0:	mov    ebp,0xe2c24f9b
  412ad5:	mov    ebx,0x1bccb9cf
  412ada:	or     BYTE PTR [ebx-0x75638a6],bh
  412ae0:	mov    bh,0xc1
  412ae2:	inc    ecx
  412ae3:	lods   eax,DWORD PTR ds:[esi]
  412ae4:	sar    esi,1
  412ae6:	adc    ebp,DWORD PTR [ebx+0x42]
  412ae9:	(bad)  [ecx+0x5f]
  412aec:	mov    cl,0x9e
  412aee:	add    al,0xd0
  412af0:	jg     0x412b2c
  412af2:	xlat   BYTE PTR ds:[ebx]
  412af3:	gs daa 
  412af5:	(bad)  
  412af6:	jmp    0xb77cd8d8
  412afb:	or     edx,DWORD PTR [esi+ebx*1]
  412afe:	mov    esp,0x470e3009
  412b03:	(bad)  
  412b04:	mov    al,ds:0xdb879b47
  412b09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b0a:	lea    edi,[edx+0x320f7b73]
  412b10:	test   eax,0x19d73d8d
  412b15:	in     al,dx
  412b16:	ins    BYTE PTR es:[edi],dx
  412b17:	xchg   ebp,eax
  412b18:	dec    esp
  412b19:	hlt    
  412b1a:	cwde   
  412b1b:	pop    ecx
  412b1c:	and    eax,0xfc185517
  412b21:	push   esi
  412b22:	push   ds
  412b23:	mov    ah,0x57
  412b25:	addr16 push edi
  412b27:	mov    bl,0xe1
  412b29:	mov    fs,eax
  412b2b:	adc    BYTE PTR [ebp+0x28],cl
  412b2e:	ficom  DWORD PTR [edx]
  412b30:	cmp    eax,0xd91af73a
  412b35:	shl    BYTE PTR ds:0x2e1c2ad,0x61
  412b3c:	sub    dl,ah
  412b3e:	adc    DWORD PTR [edi],esi
  412b40:	test   eax,0x658d3b74
  412b45:	jno    0x412b36
  412b47:	imul   eax,DWORD PTR [ebp+0x2f],0x2d44cb8e
  412b4e:	dec    ecx
  412b4f:	pushf  
  412b50:	inc    eax
  412b51:	or     bl,dh
  412b53:	mov    BYTE PTR ds:[eax+0x216f61ab],0x70
  412b5b:	and    bh,dh
  412b5d:	pop    ebx
  412b5e:	enter  0x7dfb,0x7b
  412b62:	push   0xffffffda
  412b64:	xchg   edx,eax
  412b65:	fs dec esp
  412b67:	mov    dh,0xa3
  412b69:	out    dx,eax
  412b6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b6b:	inc    edi
  412b6c:	jecxz  0x412b4f
  412b6e:	aam    0x85
  412b70:	pop    ecx
  412b71:	add    DWORD PTR ds:0x76b7a02c,edi
  412b77:	popf   
  412b78:	mov    esi,0x120790d6
  412b7d:	cli    
  412b7e:	pusha  
  412b7f:	pop    es
  412b80:	and    DWORD PTR [esi-0x49],0xffffff89
  412b84:	int    0xc6
  412b86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b87:	icebp  
  412b88:	stc    
  412b89:	xchg   ebx,eax
  412b8a:	in     al,0xb9
  412b8c:	hlt    
  412b8d:	pop    DWORD PTR [edi+0x70]
  412b90:	sub    dh,BYTE PTR [eax+ebx*8-0x124d2c58]
  412b97:	cmp    eax,0x66af3b0a
  412b9c:	xlat   BYTE PTR es:[ebx]
  412b9e:	sbb    eax,0x5e122d21
  412ba3:	jnp    0x412bb8
  412ba5:	dec    edi
  412ba6:	lahf   
  412ba7:	scas   al,BYTE PTR es:[edi]
  412ba8:	xor    BYTE PTR [ecx+0x70],ch
  412bab:	mov    edx,edi
  412bad:	nop
  412bae:	mov    bh,0x24
  412bb0:	ficom  DWORD PTR [ebp+edi*2+0x62]
  412bb4:	cmp    edi,esi
  412bb6:	ins    WORD PTR es:[edi],dx
  412bb8:	ja     0x412b56
  412bba:	mov    esp,0xb4eaa11c
  412bbf:	xchg   esi,eax
  412bc0:	xchg   ebx,eax
  412bc1:	inc    ecx
  412bc2:	cld    
  412bc3:	add    dh,BYTE PTR [ecx+eiz*1-0x56]
  412bc7:	push   ss
  412bc8:	xor    eax,0x39d81731
  412bcd:	les    eax,FWORD PTR [eax+0x59]
  412bd0:	fs inc esi
  412bd2:	aad    0xf4
  412bd4:	nop
  412bd5:	dec    esp
  412bd6:	(bad)  
  412bd7:	fisttp DWORD PTR [edx+0x68]
  412bda:	fidivr DWORD PTR [ecx]
  412bdc:	dec    esi
  412bdd:	ficom  DWORD PTR [esi+0x2f]
  412be0:	push   ebx
  412be1:	int    0xed
  412be3:	dec    ebx
  412be4:	sub    al,0xe4
  412be6:	push   0x2d12c250
  412beb:	(bad)  
  412bec:	push   ebx
  412bed:	sub    al,0x3a
  412bef:	add    ebx,ebp
  412bf1:	push   0x48392a9b
  412bf6:	jecxz  0x412bae
  412bf8:	mov    ecx,0x147add45
  412bfd:	push   0xb8173bed
  412c02:	mov    ch,0x34
  412c04:	sub    bl,dl
  412c06:	pop    ebx
  412c07:	mov    edx,0x82be1227
  412c0c:	lods   al,BYTE PTR ds:[esi]
  412c0d:	ret    
  412c0e:	inc    ebp
  412c0f:	cmp    DWORD PTR [edi],0xffffffa7
  412c12:	sbb    BYTE PTR [edx+0x5a],0x77
  412c16:	mov    al,0x66
  412c18:	dec    esp
  412c19:	push   0x557fbb1f
  412c1e:	inc    eax
  412c1f:	dec    ecx
  412c20:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  412c22:	out    0x6a,eax
  412c24:	cs pop esi
  412c26:	push   es
  412c27:	pop    esi
  412c28:	pop    edi
  412c29:	ins    BYTE PTR es:[edi],dx
  412c2a:	xchg   esi,eax
  412c2b:	iret   
  412c2c:	adc    DWORD PTR [edi+0x77f97b6d],esp
  412c32:	scas   al,BYTE PTR es:[edi]
  412c33:	ja     0x412c09
  412c35:	and    BYTE PTR [edi-0x48],ch
  412c38:	(bad)  
  412c39:	in     eax,0xe8
  412c3b:	jl     0x412c06
  412c3d:	mov    dh,0x6
  412c3f:	sbb    eax,0x26788dcf
  412c44:	test   eax,0xf802e50
  412c49:	ds test eax,0x8ab6a7
  412c4f:	mov    ebp,0xf1ae8cff
  412c54:	mov    ebx,0x62ffd56d
  412c59:	cmc    
  412c5a:	and    DWORD PTR [esi-0x59f62079],edi
  412c60:	xchg   ebx,eax
  412c61:	mov    BYTE PTR [esi+0x4],bl
  412c64:	cmp    BYTE PTR [edi-0x2c0610c3],dl
  412c6a:	arpl   WORD PTR [edi],si
  412c6c:	and    edx,ecx
  412c6e:	stc    
  412c6f:	inc    ebx
  412c70:	push   edi
  412c71:	mov    ch,0xb5
  412c73:	cli    
  412c74:	test   DWORD PTR [edi+0x4b],0xf10c592e
  412c7b:	sbb    DWORD PTR [edx],ecx
  412c7d:	popf   
  412c7e:	je     0x412ccc
  412c80:	outs   dx,DWORD PTR ds:[esi]
  412c81:	mov    ah,0x17
  412c83:	push   ebp
  412c84:	out    dx,eax
  412c85:	in     eax,dx
  412c86:	lods   eax,DWORD PTR ds:[esi]
  412c87:	imul   ebp,ebp,0xffffff84
  412c8a:	(bad)  
  412c8b:	imul   ebx,DWORD PTR [ebx-0x11],0x42
  412c8f:	or     eax,0x5c81ad00
  412c94:	cmp    BYTE PTR [ebp+esi*2-0x271d5c03],0xc2
  412c9c:	add    DWORD PTR [edi+0x283ea7a0],0x82e32e11
  412ca6:	mov    ah,0xf0
  412ca8:	cmp    DWORD PTR [esi],ebx
  412caa:	shl    BYTE PTR [eax],0x12
  412cad:	cmp    ebp,DWORD PTR [eax+0x41]
  412cb0:	out    dx,eax
  412cb1:	pop    esi
  412cb2:	mov    edi,0x9156c736
  412cb7:	sti    
  412cb8:	xor    ebp,ecx
  412cba:	xchg   esp,eax
  412cbb:	mov    edx,0x45599266
  412cc0:	or     al,0x84
  412cc2:	js     0x412c9d
  412cc4:	rcl    DWORD PTR ds:0x5e567d3c,1
  412cca:	push   es
  412ccb:	fstp   QWORD PTR [edx+0x7aec71d]
  412cd1:	cli    
  412cd2:	ror    BYTE PTR [esi],cl
  412cd4:	adc    eax,0x1e2b3d5f
  412cd9:	mov    eax,0xce30a1a9
  412cde:	popf   
  412cdf:	fild   WORD PTR [edi+0x35]
  412ce2:	in     al,0x1b
  412ce4:	dec    BYTE PTR [ebx]
  412ce6:	jmp    0x25859ce8
  412ceb:	or     esp,0xffffffaf
  412cee:	or     eax,DWORD PTR [edx-0x3]
  412cf1:	jl     0x412d06
  412cf3:	sar    DWORD PTR [edx-0x1],cl
  412cf6:	dec    ebx
  412cf7:	pushf  
  412cf8:	push   cs
  412cf9:	adc    al,0x85
  412cfb:	aam    0x6f
  412cfd:	outs   dx,DWORD PTR ds:[esi]
  412cff:	mov    BYTE PTR [esi+0x70],dl
  412d02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d03:	gs pusha 
  412d05:	in     al,dx
  412d06:	adc    DWORD PTR [edi+0x61a1479e],esp
  412d0c:	pop    ss
  412d0d:	fmul   st(3),st
  412d0f:	test   eax,0xcdb0eebc
  412d14:	add    ecx,DWORD PTR [ebx+0x6d8e406d]
  412d1a:	cld    
  412d1b:	mov    edi,0xa289e890
  412d20:	or     edi,ecx
  412d22:	add    al,0x72
  412d24:	cmp    DWORD PTR [edi],0xffffffde
  412d27:	mov    dh,0xb7
  412d29:	mov    bh,0x73
  412d2b:	daa    
  412d2c:	dec    esi
  412d2d:	js     0x412d51
  412d2f:	push   edi
  412d30:	xchg   DWORD PTR [ebx+0x2616d034],edx
  412d36:	jno    0x412cef
  412d38:	cs jle 0x412dad
  412d3b:	push   cs
  412d3c:	fcom   st(7)
  412d3e:	scas   al,BYTE PTR es:[edi]
  412d3f:	imul   ebx,ebp,0x71
  412d42:	mov    eax,0x1169ef36
  412d47:	sub    al,0xe5
  412d49:	jo     0x412d1b
  412d4b:	iret   
  412d4c:	pop    ecx
  412d4d:	inc    ebp
  412d4e:	sbb    eax,0x78368875
  412d53:	mov    eax,fs:0x9827112c
  412d59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d5a:	mov    ds,WORD PTR [ebp+eax*1-0x7d]
  412d5e:	in     eax,0x33
  412d60:	jne    0x412d98
  412d62:	out    0xd7,al
  412d64:	dec    edi
  412d65:	jl     0x412de3
  412d67:	pop    edx
  412d68:	push   0x31
  412d6a:	adc    eax,0x9d7282bd
  412d6f:	pop    ebp
  412d70:	(bad)  [eax]
  412d72:	mov    bl,0x27
  412d74:	xor    cl,ah
  412d76:	loope  0x412dd7
  412d78:	rcr    DWORD PTR [ecx-0x33],cl
  412d7b:	or     eax,0x8ad4e4a6
  412d80:	xor    DWORD PTR [ecx+ecx*1+0x4],eax
  412d84:	mov    ds:0xbee9b155,eax
  412d89:	shl    BYTE PTR ds:0xcae36fda,cl
  412d8f:	jmp    0x412d33
  412d91:	or     al,0xdc
  412d93:	pop    edi
  412d94:	dec    esp
  412d95:	js     0x412d61
  412d97:	sbb    ebp,DWORD PTR [edx-0x7ebd27de]
  412d9d:	adc    eax,0x4c1019e9
  412da2:	sti    
  412da3:	pop    eax
  412da4:	mov    ch,0x5
  412da6:	sub    ecx,DWORD PTR [esi-0x36]
  412da9:	mov    bl,0x93
  412dab:	into   
  412dac:	inc    ebp
  412dad:	mov    BYTE PTR [edi-0x61],0xc0
  412db1:	ret    
  412db2:	mov    ebx,0x7a7dd1fc
  412db7:	out    0x27,al
  412db9:	dec    esi
  412dba:	les    esi,FWORD PTR [edx]
  412dbc:	push   es
  412dbd:	or     ebp,ecx
  412dbf:	cmp    DWORD PTR es:[edi],edi
  412dc2:	std    
  412dc3:	push   eax
  412dc4:	aas    
  412dc5:	test   DWORD PTR [edi],ebx
  412dc7:	pop    es
  412dc8:	pushf  
  412dc9:	(bad)  
  412dca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412dcb:	loopne 0x412e2d
  412dcd:	sbb    al,0x3f
  412dcf:	loop   0x412dd8
  412dd1:	stos   DWORD PTR es:[edi],eax
  412dd2:	test   DWORD PTR [ebx-0x62],edi
  412dd5:	fstp   DWORD PTR [ecx+0x5e]
  412dd8:	or     eax,0x109a763a
  412ddd:	xchg   ebp,eax
  412dde:	lock xchg ebx,eax
  412de0:	outs   dx,DWORD PTR ds:[esi]
  412de1:	sbb    al,0xdf
  412de3:	mov    ebx,0xce4ee70
  412de8:	cs dec ebx
  412dea:	test   eax,0xfdeeeaae
  412def:	xchg   BYTE PTR [eax-0x67],ah
  412df2:	push   eax
  412df3:	push   eax
  412df4:	(bad)  
  412df6:	mov    dl,0x34
  412df8:	pop    esp
  412df9:	rcl    DWORD PTR [edx-0x73a2ae7b],1
  412dff:	xchg   edi,eax
  412e00:	and    DWORD PTR [ecx],edx
  412e02:	scas   eax,DWORD PTR es:[edi]
  412e03:	fldenv [ecx]
  412e05:	sub    ecx,DWORD PTR [edx]
  412e07:	cmp    ecx,edi
  412e09:	sbb    DWORD PTR [esi],ebp
  412e0b:	mov    cs,WORD PTR [edi-0x618fc8b8]
  412e11:	shl    BYTE PTR [edi],cl
  412e13:	jge    0x412dfc
  412e15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e16:	fs es test eax,esp
  412e1a:	jge    0x412ddf
  412e1c:	daa    
  412e1d:	mov    edx,0xc6e5d58d
  412e22:	loop   0x412e96
  412e24:	cld    
  412e25:	rcl    DWORD PTR [ebx],0x94
  412e28:	mov    bl,BYTE PTR [edx-0x1e]
  412e2b:	test   al,0xa
  412e2d:	pop    esi
  412e2e:	js     0x412db4
  412e30:	daa    
  412e31:	mov    bl,0x79
  412e33:	pop    ebx
  412e34:	mov    al,0xa4
  412e36:	mov    esp,0x44e9a0dc
  412e3b:	and    eax,DWORD PTR [esi+0x42d490c9]
  412e41:	adc    al,0xc4
  412e43:	fld    DWORD PTR [edx-0x2ba00290]
  412e49:	push   edx
  412e4a:	out    dx,al
  412e4b:	pop    ecx
  412e4c:	inc    eax
  412e4d:	xchg   ebx,eax
  412e4e:	jmp    0xfd0ac040
  412e53:	call   0xf21a:0xf9afcdaa
  412e5a:	aas    
  412e5b:	and    al,0xcb
  412e5d:	sbb    ebx,DWORD PTR ds:0x5b8d55a2
  412e63:	aad    0xac
  412e65:	(bad)  
  412e66:	clc    
  412e67:	aas    
  412e68:	ficom  WORD PTR [edx]
  412e6a:	lods   eax,DWORD PTR ds:[esi]
  412e6b:	push   edi
  412e6c:	fadd   DWORD PTR [esi+edi*2-0x654cbaa1]
  412e73:	jno    0x412e58
  412e75:	xchg   edi,eax
  412e76:	mov    ds:0x8f338c59,al
  412e7b:	ins    DWORD PTR es:[edi],dx
  412e7c:	jecxz  0x412ed9
  412e7e:	cmp    DWORD PTR [eax-0x53],edi
  412e81:	cli    
  412e82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e83:	xor    dh,0x83
  412e86:	or     bh,dl
  412e88:	or     bh,BYTE PTR [ecx-0x75]
  412e8b:	sub    al,0xf9
  412e8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e8e:	test   BYTE PTR [ecx],bh
  412e90:	icebp  
  412e91:	mov    eax,0x540647e6
  412e96:	inc    eax
  412e97:	jl     0x412eb3
  412e99:	adc    DWORD PTR [ebp-0x4a],esi
  412e9c:	or     al,0x38
  412e9e:	in     al,0x83
  412ea0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ea1:	sub    ah,bh
  412ea3:	dec    eax
  412ea4:	pop    es
  412ea5:	jecxz  0x412e66
  412ea7:	inc    esp
  412ea8:	pop    DWORD PTR [ebp+0x6]
  412eab:	sub    ebp,DWORD PTR [edi+0x2d]
  412eae:	cmp    eax,0xb1cbe219
  412eb3:	jmp    0x412efd
  412eb5:	adc    eax,0xa48df4d0
  412eba:	inc    edx
  412ebb:	sbb    al,0x39
  412ebd:	daa    
  412ebe:	(bad)  [esi+0x3e]
  412ec1:	cmp    bl,ah
  412ec3:	xchg   ebx,eax
  412ec4:	xor    eax,0xea634633
  412ec9:	(bad)  
  412ecb:	or     BYTE PTR [eax+0x25],dh
  412ece:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ecf:	jbe    0x412e57
  412ed1:	xchg   ecx,eax
  412ed2:	loope  0x412e65
  412ed4:	pop    esi
  412ed5:	mov    cl,0x5
  412ed7:	sbb    dh,BYTE PTR [edx+0x1aeb2341]
  412edd:	and    bh,ah
  412edf:	sub    al,BYTE PTR [edx]
  412ee1:	push   ds
  412ee2:	push   0x34
  412ee4:	ja     0x412f42
  412ee6:	popf   
  412ee7:	mov    WORD PTR [eax*4+0x6c0008b0],cs
  412eee:	inc    esp
  412eef:	dec    ax
  412ef1:	pop    ebp
  412ef2:	retf   
  412ef3:	mov    ecx,0x8f298961
  412ef8:	cld    
  412ef9:	aas    
  412efa:	repnz mov cs,WORD PTR [esi-0x76]
  412efe:	fsubr  st(7),st
  412f00:	hlt    
  412f01:	push   eax
  412f02:	int3   
  412f03:	popf   
  412f04:	fwait
  412f05:	pusha  
  412f06:	dec    edi
  412f07:	xor    DWORD PTR [ebp-0x30],ecx
  412f0a:	mov    esp,DWORD PTR [esp+ebx*8+0x25994e8f]
  412f11:	mov    gs,WORD PTR [edx+0x62]
  412f14:	push   esi
  412f15:	and    BYTE PTR [ebx-0x5],ch
  412f18:	jmp    0xcd39be88
  412f1d:	dec    esi
  412f1e:	pop    edi
  412f1f:	test   al,0x50
  412f21:	popf   
  412f22:	in     al,dx
  412f23:	mov    ah,0xaa
  412f25:	call   0x4bdd47f3
  412f2a:	push   cs
  412f2b:	push   ds
  412f2c:	adc    dl,BYTE PTR [ecx]
  412f2e:	adc    BYTE PTR [ebx],ah
  412f30:	or     al,0x8
  412f33:	dec    eax
  412f34:	call   0x1ec0f420
  412f39:	in     al,0x6e
  412f3b:	ds pop eax
  412f3d:	sub    BYTE PTR [eax+0x5be72b8b],ch
  412f43:	pushf  
  412f44:	mov    WORD PTR [esi-0x3b2c72ac],?
  412f4a:	int3   
  412f4b:	mov    dl,0xb1
  412f4d:	add    al,0x81
  412f4f:	(bad)  
  412f50:	adc    eax,0x202982a4
  412f55:	(bad)  
  412f56:	fdiv   QWORD PTR [edx]
  412f58:	jp     0x412f68
  412f5a:	std    
  412f5b:	dec    eax
  412f5c:	push   cs
  412f5d:	test   eax,0xa12f9b74
  412f62:	xor    eax,0x58bceb55
  412f67:	or     BYTE PTR [ecx],dl
  412f69:	or     al,0x74
  412f6b:	fst    QWORD PTR [ebx-0x1aabfa09]
  412f71:	pop    ebp
  412f72:	jge    0x412f64
  412f74:	ss pop esi
  412f76:	scas   al,BYTE PTR es:[edi]
  412f77:	xchg   edx,eax
  412f78:	sub    BYTE PTR ds:0x43bf362b,0xad
  412f7f:	ret    
  412f80:	out    dx,al
  412f81:	mov    ah,0xb
  412f83:	ret    
  412f84:	test   DWORD PTR [ebp+0x1a],eax
  412f87:	sbb    al,0x74
  412f89:	pop    ecx
  412f8a:	mov    eax,0x602b7d66
  412f8f:	or     DWORD PTR [esi-0x2d],ebp
  412f92:	jecxz  0x412fc6
  412f94:	fsub   DWORD PTR [ecx]
  412f96:	add    BYTE PTR [esi],al
  412f98:	popa   
  412f99:	aaa    
  412f9a:	das    
  412f9b:	sbb    BYTE PTR [esi],cl
  412f9d:	js     0x412fd6
  412f9f:	into   
  412fa0:	jno    0x412f4a
  412fa2:	cmp    dl,cl
  412fa4:	push   cs
  412fa5:	fmul   QWORD PTR [esi]
  412fa7:	bound  edx,QWORD PTR ds:0x57ec76c7
  412fad:	push   esp
  412fae:	sbb    DWORD PTR [esi-0x7d],ebx
  412fb1:	jle    0x412f55
  412fb3:	lds    eax,FWORD PTR [eax+0x4c]
  412fb6:	in     eax,0xfd
  412fb8:	mov    eax,DWORD PTR [eax+0x2d]
  412fbb:	or     dh,BYTE PTR [eax]
  412fbd:	xor    BYTE PTR [edx],0xb0
  412fc0:	inc    esp
  412fc1:	or     al,0xe1
  412fc3:	sub    BYTE PTR [ecx+0x1e],dl
  412fc6:	cmc    
  412fc7:	out    dx,al
  412fc8:	add    al,0xa4
  412fca:	or     BYTE PTR [ebp-0x66],cl
  412fcd:	cld    
  412fce:	dec    esp
  412fcf:	loope  0x41302e
  412fd1:	std    
  412fd2:	mov    bl,BYTE PTR [eax-0x2e39b8c0]
  412fd8:	mov    ch,0x48
  412fda:	fild   DWORD PTR [edx+0x2e032067]
  412fe0:	shl    BYTE PTR [eax-0x51],0xcf
  412fe4:	jecxz  0x412ff7
  412fe6:	mov    ebx,0xae84ab8f
  412feb:	popf   
  412fec:	sub    ebp,ecx
  412fee:	adc    ch,ch
  412ff0:	xchg   ebp,eax
  412ff1:	pop    edi
  412ff2:	sbb    ebx,DWORD PTR [edi]
  412ff4:	sub    eax,0xcaa7a486
  412ff9:	xlat   BYTE PTR ds:[ebx]
  412ffa:	into   
  412ffb:	jmp    0x1cae:0x5bae9471
  413002:	sbb    BYTE PTR [edx+ebp*1-0x255510ca],al
  413009:	loop   0x41306d
  41300b:	in     eax,dx
  41300c:	test   DWORD PTR ds:0x426c90c7,ebx
  413012:	add    ebx,DWORD PTR [ebp+0x3]
  413015:	shl    DWORD PTR [ebp+0x6168955d],1
  41301b:	or     DWORD PTR [ebp+0x63],0x4b
  41301f:	ds and dh,0xc
  413023:	pop    eax
  413024:	jle    0x413070
  413026:	and    esi,edx
  413028:	adc    BYTE PTR [edi+0x20],ch
  41302b:	leave  
  41302c:	mov    esi,0xd30ec56c
  413031:	repz addr16 pop ebx
  413034:	das    
  413035:	dec    eax
  413036:	sub    DWORD PTR [eax],esp
  413038:	or     al,ch
  41303a:	push   ss
  41303b:	bound  esi,QWORD PTR [edx+0x2d]
  41303e:	push   eax
  41303f:	imul   ebp,esp,0x84cb9bb8
  413045:	jnp    0x413011
  413047:	and    al,0x69
  413049:	jbe    0x413051
  41304b:	in     eax,0x5b
  41304d:	fild   QWORD PTR [ecx+0x4c]
  413050:	outs   dx,BYTE PTR ds:[esi]
  413051:	xor    ah,dl
  413053:	xchg   DWORD PTR [ebp+0x6d17e649],edx
  413059:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41305a:	mov    dl,0x9c
  41305c:	(bad)  
  41305d:	push   ebp
  41305e:	xchg   esi,eax
  41305f:	push   ss
  413060:	jae    0x413010
  413062:	ret    
  413063:	push   ebx
  413064:	mov    ds:0x56b207ac,al
  413069:	test   DWORD PTR [edi+0x7bcf59a1],esp
  41306f:	xor    eax,0x1ca1fa83
  413074:	hlt    
  413075:	xchg   BYTE PTR [ecx+0x7b],al
  413078:	xchg   ebp,eax
  413079:	push   esi
  41307a:	mov    bh,0xd0
  41307c:	in     eax,dx
  41307d:	int    0xef
  41307f:	cmp    al,BYTE PTR [ebx]
  413081:	pop    edi
  413082:	aam    0x17
  413084:	jo     0x4130c4
  413086:	inc    edi
  413087:	xor    bh,BYTE PTR [ecx]
  413089:	push   edx
  41308a:	dec    eax
  41308b:	loop   0x4130c5
  41308d:	loopne 0x41302c
  41308f:	out    0x2d,al
  413091:	jo     0x413065
  413093:	aaa    
  413094:	jg     0x4130f2
  413096:	in     al,dx
  413097:	pop    ds
  413098:	add    BYTE PTR [edi-0x672dc253],al
  41309e:	jo     0x4130c8
  4130a0:	mov    ebp,?
  4130a2:	jge    0x413083
  4130a4:	jne    0x4130b3
  4130a6:	xchg   dl,bh
  4130a8:	dec    ebp
  4130a9:	dec    ecx
  4130aa:	ds (bad) 
  4130ac:	jmp    0xbc9f:0xce4f883e
  4130b3:	push   ebp
  4130b4:	vmread DWORD PTR ds:0xe069fa5e,ecx
  4130bb:	rcr    DWORD PTR [ecx],1
  4130bd:	pop    DWORD PTR [esi-0x25]
  4130c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130c1:	cli    
  4130c2:	inc    ebp
  4130c3:	aam    0xd4
  4130c5:	pop    ecx
  4130c6:	(bad)  [ecx+edi*4+0x55]
  4130ca:	jle    0x4130cd
  4130cc:	pusha  
  4130cd:	xlat   BYTE PTR ds:[ebx]
  4130ce:	lock icebp 
  4130d0:	dec    ebp
  4130d1:	sub    DWORD PTR [edi-0x448f8e6a],ebp
  4130d7:	nop
  4130d8:	rol    BYTE PTR [ecx],1
  4130da:	repnz adc bh,al
  4130dd:	inc    esp
  4130de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130df:	mov    edx,0xfdd9e437
  4130e4:	stc    
  4130e5:	add    BYTE PTR [edi+eiz*2],0xfd
  4130e9:	out    0x7,al
  4130eb:	shl    DWORD PTR [eax+0x7f],cl
  4130ee:	mov    esi,0x32a3ab98
  4130f3:	push   ecx
  4130f4:	not    ebp
  4130f6:	nop
  4130f7:	jg     0x41314b
  4130f9:	addr16 push edx
  4130fb:	in     eax,0xee
  4130fd:	mov    bl,BYTE PTR [eax+ecx*4]
  413100:	aas    
  413101:	inc    esp
  413102:	imul   ebp
  413104:	aad    0x94
  413106:	or     al,al
  413108:	std    
  413109:	sbb    ecx,edx
  41310b:	ja     0x413094
  41310d:	jp     0x413142
  41310f:	shr    BYTE PTR [ebx],0x97
  413112:	and    eax,0xef14c0e8
  413117:	rol    BYTE PTR [esi],cl
  413119:	pop    ss
  41311a:	inc    edi
  41311b:	cmp    eax,0xc874ac24
  413120:	inc    esi
  413121:	push   edi
  413122:	dec    ecx
  413123:	das    
  413124:	jp     0x41319d
  413126:	retf   0xd939
  413129:	cdq    
  41312a:	add    BYTE PTR [ebp+0x38],ch
  41312d:	cmp    edx,DWORD PTR [edi]
  41312f:	imul   ebp,DWORD PTR [ecx+0x41],0x607f3d03
  413136:	shr    bh,0x3b
  413139:	sub    edx,DWORD PTR [ecx+eax*4]
  41313c:	jne    0x41318c
  41313e:	in     eax,dx
  41313f:	lods   al,BYTE PTR ds:[esi]
  413140:	leave  
  413141:	rcl    BYTE PTR [edi-0x22b88dc6],cl
  413147:	and    bl,dl
  413149:	js     0x4131b3
  41314b:	or     bh,BYTE PTR [esp+ecx*2+0x75]
  41314f:	jbe    0x4130f9
  413151:	mov    ah,0x58
  413153:	xor    esp,DWORD PTR [eax+ebx*4-0xc076071]
  41315a:	daa    
  41315b:	jo     0x413189
  41315d:	add    dh,BYTE PTR fs:[edx-0x65f7be34]
  413164:	push   edi
  413165:	pop    ebp
  413166:	das    
  413167:	out    dx,al
  413168:	call   0x84184432
  41316d:	push   esp
  41316e:	add    BYTE PTR [eax-0x25],0x62
  413172:	test   eax,0x7abca8d1
  413177:	jbe    0x4131c3
  413179:	rcr    DWORD PTR [esi+0x34],1
  41317c:	test   al,0x5c
  41317e:	mov    esp,0x6725c5f7
  413183:	dec    ecx
  413184:	mov    ah,0xb9
  413186:	dec    eax
  413187:	sub    BYTE PTR [ebp-0x6f8fb814],0x4f
  41318e:	test   eax,0x381dd36f
  413193:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413194:	bound  esi,QWORD PTR [esi-0xc]
  413197:	vandps xmm3,xmm2,XMMWORD PTR [esi-0x27bce16]
  41319f:	push   ebp
  4131a0:	dec    esi
  4131a1:	or     eax,0x702bd8a7
  4131a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131a7:	and    esp,DWORD PTR [ebx]
  4131a9:	das    
  4131aa:	retf   0x25e7
  4131ad:	test   al,0xf5
  4131af:	mov    ebp,0x6ad51657
  4131b4:	mov    eax,ds:0x46926cde
  4131b9:	and    dh,BYTE PTR [ecx]
  4131bb:	(bad)  
  4131bc:	xlat   BYTE PTR ds:[ebx]
  4131bd:	mov    dl,0x16
  4131bf:	fwait
  4131c0:	mov    cl,0x9d
  4131c2:	scas   al,BYTE PTR es:[edi]
  4131c3:	xchg   BYTE PTR [ebp-0x5f],cl
  4131c6:	jg     0x41315f
  4131c8:	push   ebx
  4131c9:	pop    edx
  4131ca:	xor    esi,DWORD PTR [ebx-0x4a4898e9]
  4131d0:	outs   dx,DWORD PTR ds:[esi]
  4131d1:	fwait
  4131d2:	sbb    dl,dl
  4131d4:	mov    esp,esi
  4131d6:	sbb    ch,BYTE PTR [eax-0x24]
  4131d9:	add    eax,DWORD PTR [edi+ecx*1]
  4131dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131dd:	jge    0x413216
  4131df:	add    dh,BYTE PTR [ecx-0x5dca0301]
  4131e5:	aaa    
  4131e6:	xchg   edi,eax
  4131e7:	sahf   
  4131e8:	pop    edx
  4131e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131ea:	jmp    0x898:0x2fc33a3
  4131f1:	inc    ebx
  4131f2:	aaa    
  4131f3:	fwait
  4131f4:	lock jecxz 0x41318b
  4131f7:	xor    dl,cl
  4131f9:	xchg   edi,eax
  4131fa:	jge    0x4131e7
  4131fc:	mov    ds:0x1dc34a6b,al
  413201:	pop    ebp
  413202:	mov    esi,0x98c4f99d
  413207:	or     esi,ebp
  413209:	dec    eax
  41320a:	xor    dh,BYTE PTR [edx]
  41320c:	pop    esi
  41320d:	push   esp
  41320e:	or     dl,0xe7
  413211:	mov    edx,0x4adf1502
  413216:	mov    al,ds:0x1f8faf62
  41321b:	in     eax,dx
  41321c:	out    dx,al
  41321d:	aas    
  41321e:	cmp    esi,DWORD PTR [edi]
  413220:	mov    cl,BYTE PTR [ebp+0x2db2db16]
  413226:	fadd   DWORD PTR [ecx+eiz*1]
  413229:	adc    BYTE PTR [ebp+0x47735628],0x4e
  413230:	iret   
  413231:	add    BYTE PTR [ebp-0x36],bl
  413234:	sub    eax,0xeefee2ab
  413239:	lods   eax,DWORD PTR ds:[esi]
  41323a:	pop    es
  41323b:	push   0x281b76de
  413240:	aad    0x9
  413242:	nop
  413243:	sbb    ebp,DWORD PTR [edi+0x4fa1684f]
  413249:	stos   BYTE PTR es:[edi],al
  41324a:	xlat   BYTE PTR ds:[ebx]
  41324b:	js     0x413267
  41324d:	mov    cl,0x9e
  41324f:	pushf  
  413250:	xchg   edx,eax
  413251:	sbb    eax,esp
  413253:	(bad)  
  413254:	(bad)  
  413255:	pop    ds
  413256:	pop    ebp
  413257:	mov    cl,0x1e
  413259:	push   es
  41325a:	mov    edx,DWORD PTR [ebx-0x455751f1]
  413260:	lahf   
  413261:	pusha  
  413262:	xchg   esp,eax
  413263:	push   ebp
  413264:	sub    BYTE PTR [eax+0x59],dl
  413267:	(bad)  
  413268:	in     eax,dx
  413269:	pop    esp
  41326a:	das    
  41326b:	pushfw 
  41326d:	and    eax,0xef76b2a6
  413272:	inc    eax
  413273:	or     al,0x7
  413275:	mov    eax,DWORD PTR [eax]
  413277:	dec    ebp
  413278:	mov    cl,0xa2
  41327a:	pop    esi
  41327b:	add    al,BYTE PTR [ebx+0x44bcb65]
  413281:	ret    0x385b
  413284:	sub    ebx,eax
  413286:	adc    eax,0xaf41a96f
  41328b:	enter  0x93eb,0x1c
  41328f:	out    dx,eax
  413290:	daa    
  413291:	jno    0x413274
  413293:	out    dx,al
  413294:	movq   mm4,mm6
  413297:	add    dh,BYTE PTR [edx]
  413299:	push   edi
  41329a:	lods   al,BYTE PTR ds:[esi]
  41329b:	test   BYTE PTR [bx+si],al
  41329e:	in     al,dx
  41329f:	jle    0x41329a
  4132a1:	ss jle 0x41323f
  4132a4:	mov    dl,0xee
  4132a6:	or     al,0x78
  4132a8:	ins    BYTE PTR es:[edi],dx
  4132a9:	loop   0x413321
  4132ab:	add    edx,ebx
  4132ad:	inc    eax
  4132ae:	hlt    
  4132af:	dec    esi
  4132b0:	mov    bl,0x3c
  4132b2:	mov    gs,WORD PTR [esi+0x61b762b]
  4132b8:	aas    
  4132b9:	jmp    edi
  4132bb:	les    edi,FWORD PTR [edx+0x7c]
  4132be:	and    esp,DWORD PTR [ebx+0x784c3a52]
  4132c4:	jmp    0xd6e2:0x4eb2e58b
  4132cb:	cwde   
  4132cc:	mov    fs,WORD PTR [esi]
  4132ce:	jecxz  0x4132e5
  4132d0:	sub    ecx,DWORD PTR [esi+0x69]
  4132d3:	sbb    ebx,esi
  4132d5:	popa   
  4132d6:	ss pop edx
  4132d8:	mov    ecx,0x233dded1
  4132dd:	fcomp  DWORD PTR ds:0x970914c9
  4132e3:	and    esp,DWORD PTR [edi+0x41]
  4132e6:	loop   0x413276
  4132e8:	into   
  4132e9:	call   0x1240:0x6f49af52
  4132f0:	das    
  4132f1:	scas   al,BYTE PTR es:[edi]
  4132f2:	pop    eax
  4132f3:	or     ah,BYTE PTR [ecx-0x380b78de]
  4132f9:	mov    BYTE PTR ds:0xe84bb237,cl
  4132ff:	fbstp  TBYTE PTR [ebx]
  413301:	add    BYTE PTR [esp+ecx*1],bh
  413304:	xchg   BYTE PTR [esi],ah
  413306:	repnz dec ecx
  413308:	(bad)  
  413309:	jns    0x41328f
  41330b:	sub    cl,BYTE PTR [eax+0x464d2f9b]
  413311:	push   ecx
  413312:	adc    cl,cl
  413314:	(bad)  
  413315:	dec    edx
  413316:	mov    ds:0x610b2006,eax
  41331b:	ror    DWORD PTR [edi],1
  41331d:	mov    esp,0xbce7686f
  413322:	adc    eax,0xa1b86522
  413327:	test   al,dl
  413329:	icebp  
  41332a:	scas   al,BYTE PTR es:[edi]
  41332b:	sub    esi,DWORD PTR [esi+esi*8-0x33ebf668]
  413332:	and    bh,BYTE PTR [esp+eax*1+0xf]
  413336:	add    eax,0xff1f309d
  41333b:	jns    0x41337d
  41333d:	mov    eax,ds:0x1b8c0d6d
  413342:	or     cl,cl
  413344:	mov    cl,0xec
  413346:	rcl    BYTE PTR [ebx+0x67],0xa0
  41334a:	fbld   TBYTE PTR fs:[edi+eax*4-0x4a]
  41334f:	popf   
  413350:	test   al,0x97
  413352:	ins    BYTE PTR es:[edi],dx
  413353:	jae    0xf40eb39d
  413359:	sub    eax,0xc9aee7c3
  41335e:	jge    0x4133d8
  413360:	bound  ecx,QWORD PTR [esi-0x8f1e15c]
  413366:	call   edx
  413368:	pop    edi
  413369:	loope  0x41338e
  41336b:	dec    ecx
  41336c:	push   ecx
  41336d:	add    bl,dl
  41336f:	or     DWORD PTR [ebp-0x7a6e9801],ebx
  413375:	call   0x5c87:0x32f5acaf
  41337c:	mov    ds:0xef101709,al
  413381:	add    eax,DWORD PTR [eax-0x5063f293]
  413387:	or     al,0x1e
  413389:	movups xmm4,XMMWORD PTR [edx]
  41338c:	retf   
  41338d:	ror    DWORD PTR [edi],cl
  41338f:	pop    esi
  413390:	ret    
  413391:	mov    ds:0xc0c9411d,eax
  413396:	inc    esi
  413397:	add    eax,0x7ddc5bc3
  41339c:	cli    
  41339d:	cmp    BYTE PTR [edx],0x8
  4133a0:	shl    DWORD PTR [ecx],0x59
  4133a3:	pop    es
  4133a4:	dec    esi
  4133a5:	jmp    0x4133a9
  4133a7:	imul   edx,ecx,0x4b
  4133aa:	jnp    0x413412
  4133ac:	arpl   cx,bx
  4133ae:	ret    0xf88
  4133b1:	xchg   BYTE PTR [ecx+0x1be22354],dh
  4133b7:	push   es
  4133b8:	mov    ecx,0x2f1495b4
  4133bd:	jno    0x41342c
  4133bf:	and    DWORD PTR [eax],esi
  4133c1:	mov    ds:0xbedd2f05,eax
  4133c6:	mov    es,WORD PTR [eax+0xf]
  4133c9:	out    0x97,al
  4133cb:	xchg   esp,eax
  4133cc:	dec    edi
  4133cd:	(bad)  
  4133ce:	jmp    0x4133fc
  4133d0:	scas   al,BYTE PTR es:[edi]
  4133d1:	push   esi
  4133d2:	or     DWORD PTR [ebx],ebp
  4133d4:	out    dx,al
  4133d5:	xor    eax,0x47c8a21
  4133da:	or     al,0xf4
  4133dc:	daa    
  4133dd:	push   0x22
  4133df:	xchg   al,ch
  4133e1:	or     ch,BYTE PTR [ecx+0x13]
  4133e4:	rcl    ah,cl
  4133e6:	adc    BYTE PTR [esi],0xab
  4133e9:	repnz push ebx
  4133eb:	inc    edi
  4133ec:	mov    bl,0xe3
  4133ee:	xlat   BYTE PTR ds:[ebx]
  4133ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133f0:	and    esp,ecx
  4133f2:	test   DWORD PTR [ecx],ecx
  4133f4:	mov    eax,ds:0x31718a39
  4133f9:	pop    edi
  4133fa:	lds    esi,FWORD PTR [eax+ebx*1]
  4133fd:	or     al,0x12
  4133ff:	mov    cl,0xcc
  413401:	jno    0x41341c
  413403:	xchg   esi,eax
  413404:	jbe    0x413459
  413406:	js     0x4133e3
  413408:	mov    DWORD PTR [ebx+0x52e20f56],ecx
  41340e:	fidivr DWORD PTR [esi-0x49efdb9b]
  413414:	(bad)  
  413415:	lods   eax,DWORD PTR ds:[esi]
  413416:	mov    eax,edx
  413418:	mov    ah,0x13
  41341a:	retf   
  41341b:	add    eax,ebx
  41341d:	test   al,0xf
  41341f:	pop    edx
  413420:	retf   0x7af8
  413423:	fist   DWORD PTR [esp+eax*8-0x2a7a23b6]
  41342a:	sub    eax,0x5d5616c7
  41342f:	mov    ds:0xe5b22e9d,eax
  413434:	cmp    eax,0x8c326bb7
  413439:	mov    BYTE PTR [edi-0x36],ah
  41343c:	add    bl,BYTE PTR [ecx-0x622e7681]
  413442:	shl    BYTE PTR [eax+0x54],0x50
  413446:	xor    bl,BYTE PTR [ecx]
  413448:	outs   dx,DWORD PTR ds:[esi]
  413449:	push   ecx
  41344a:	add    eax,0x5033d07f
  41344f:	cmp    ebp,ebp
  413451:	enter  0xc8ff,0x67
  413455:	push   ecx
  413456:	test   BYTE PTR [edx+0x594b7219],bl
  41345c:	leave  
  41345d:	sbb    DWORD PTR [ecx-0x30ea3d40],ebp
  413463:	in     al,0xc3
  413465:	mov    al,0x60
  413467:	daa    
  413468:	add    cl,bh
  41346a:	outs   dx,BYTE PTR ds:[esi]
  41346b:	mov    esi,DWORD PTR [edx]
  41346d:	jne    0x4133fe
  41346f:	shl    DWORD PTR [edx+edi*8-0x5da6aaa6],cl
  413476:	dec    ebp
  413477:	ret    0xc1de
  41347a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41347b:	js     0x413496
  41347d:	push   eax
  41347e:	lods   al,BYTE PTR ds:[esi]
  41347f:	and    eax,0xe8b0e2fd
  413484:	adc    dl,BYTE PTR [edi+0x2e]
  413487:	popf   
  413488:	cmc    
  413489:	adc    ch,bl
  41348b:	retf   
  41348c:	sub    ecx,DWORD PTR ds:0x12fa1ced
  413492:	push   ss
  413493:	xchg   DWORD PTR [edi],ebp
  413495:	out    0xf7,eax
  413497:	shl    DWORD PTR [edx],cl
  413499:	xchg   DWORD PTR [ebx],esi
  41349b:	add    cl,BYTE PTR [ebx-0x5cfab97a]
  4134a1:	inc    eax
  4134a2:	mov    ds:0x4e7a9dd8,eax
  4134a7:	fwait
  4134a8:	sbb    BYTE PTR [ebx],bl
  4134aa:	in     al,0xca
  4134ac:	or     DWORD PTR [edx+0x2cdb14c0],0xc320ad90
  4134b6:	jae    0x4134e0
  4134b8:	les    esi,FWORD PTR [ebx+0x5780d00]
  4134be:	fwait
  4134bf:	xor    dh,ah
  4134c1:	jb     0x4134cf
  4134c3:	and    BYTE PTR [eax-0x6377d3d5],dl
  4134c9:	daa    
  4134ca:	loope  0x4134b7
  4134cc:	jle    0x41351a
  4134ce:	inc    ebp
  4134cf:	int3   
  4134d0:	cmp    ebp,esp
  4134d2:	mov    dl,BYTE PTR [esi]
  4134d4:	and    eax,0x98f86514
  4134d9:	ror    edi,1
  4134db:	stc    
  4134dc:	sbb    eax,0x28c3fb47
  4134e1:	cmp    ah,BYTE PTR [esi]
  4134e3:	dec    edx
  4134e4:	mov    BYTE PTR [esi],bh
  4134e6:	mov    ds:0xb68af4d4,eax
  4134eb:	(bad)  
  4134ec:	repnz cmp ebp,edi
  4134ef:	adc    DWORD PTR [edx-0x5a34c067],ecx
  4134f5:	into   
  4134f6:	and    esi,DWORD PTR [ebp+edx*2+0x2c5d038c]
  4134fd:	cmp    bh,BYTE PTR [edx]
  4134ff:	mov    ds:0xa1ed2e96,eax
  413504:	mov    ds:0x46c7a707,eax
  413509:	daa    
  41350a:	sub    DWORD PTR [ebx],edx
  41350c:	add    al,0x7b
  41350e:	rcr    ebp,cl
  413510:	jnp    0x4134ed
  413512:	repnz sub al,0x16
  413515:	cmc    
  413516:	repz xor eax,0x38b9deca
  41351c:	iret   
  41351d:	int    0x97
  41351f:	repnz lahf 
  413521:	lods   al,BYTE PTR ds:[esi]
  413522:	int    0x65
  413524:	xchg   BYTE PTR [edx+0x466f8a3f],bl
  41352a:	push   0x73c3e2
  41352f:	jmp    0x93b0:0xaa4afbc
  413536:	sahf   
  413537:	add    DWORD PTR [edi+0x4bde21d3],ebx
  41353d:	outs   dx,DWORD PTR ds:[esi]
  41353e:	imul   edi,DWORD PTR [ebx],0x88ccc61
  413544:	push   esp
  413545:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413546:	mov    ch,0xb9
  413548:	call   0x9d4c:0x42a9b6ba
  41354f:	cmc    
  413550:	int    0xf7
  413552:	test   al,0xe
  413554:	inc    eax
  413555:	imul   edx,DWORD PTR [eax-0x29164970],0x55f7d814
  41355f:	sub    DWORD PTR [ebx],edx
  413561:	iret   
  413562:	xchg   ecx,eax
  413563:	push   0xffffffcf
  413565:	scas   al,BYTE PTR es:[edi]
  413566:	lds    esi,FWORD PTR ds:0x16d1f8a9
  41356c:	jecxz  0x413589
  41356e:	adc    ecx,ebx
  413570:	inc    eax
  413571:	mov    ah,0xa8
  413573:	ss add ah,0x15
  413577:	dec    ecx
  413578:	cmp    bl,cl
  41357a:	mov    cl,0xf8
  41357c:	ret    
  41357d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41357e:	or     ecx,DWORD PTR [ebp-0x47895a2d]
  413584:	and    al,0x3
  413586:	ins    DWORD PTR es:[edi],dx
  413587:	hlt    
  413588:	stos   BYTE PTR es:[edi],al
  413589:	jecxz  0x4135cf
  41358b:	fnstcw WORD PTR [edx]
  41358d:	loopne 0x4135cd
  41358f:	xlat   BYTE PTR ds:[ebx]
  413590:	repz (bad) 
  413592:	jb     0x4135ad
  413594:	out    0x57,eax
  413596:	fst    QWORD PTR [ebp-0x80]
  413599:	icebp  
  41359a:	and    eax,0xf77478a8
  41359f:	dec    edx
  4135a0:	pop    ds
  4135a1:	test   esp,eax
  4135a3:	(bad)  
  4135a4:	dec    edi
  4135a5:	outs   dx,BYTE PTR ds:[esi]
  4135a6:	inc    edi
  4135a7:	xlat   BYTE PTR ds:[ebx]
  4135a8:	call   0x1caf223f
  4135ad:	cmc    
  4135ae:	mov    ds:0xb2fbb85d,eax
  4135b3:	pop    esi
  4135b4:	pop    ss
  4135b5:	add    eax,0xab612b16
  4135ba:	jno    0x4135a9
  4135bc:	out    0x3f,al
  4135be:	mov    esp,0x39ab59b5
  4135c3:	shr    BYTE PTR ds:0x60a09781,1
  4135c9:	cld    
  4135ca:	int3   
  4135cb:	mov    DWORD PTR [ecx-0x68f66efd],ecx
  4135d1:	cmp    al,0xc3
  4135d3:	dec    edi
  4135d4:	jbe    0x413564
  4135d6:	pusha  
  4135d7:	fbstp  TBYTE PTR [ebx+0x6b]
  4135da:	lea    edx,[ebx]
  4135dc:	aad    0xe8
  4135de:	hlt    
  4135df:	xchg   edx,eax
  4135e0:	xor    DWORD PTR [edi-0xeb174c7],eax
  4135e6:	ins    BYTE PTR es:[edi],dx
  4135e7:	repz dec esi
  4135e9:	jb     0x4135b8
  4135eb:	inc    edx
  4135ec:	cld    
  4135ed:	and    dl,BYTE PTR [esi+0x4e65e77d]
  4135f3:	lds    esi,FWORD PTR [ebx-0x7dbd01d6]
  4135f9:	jo     0x413634
  4135fb:	xor    al,BYTE PTR [edx+0x7e]
  4135fe:	les    ecx,FWORD PTR [ecx+0x1e]
  413601:	push   eax
  413602:	enter  0x554f,0x83
  413606:	or     al,0xe
  413608:	pop    ds
  413609:	sub    eax,DWORD PTR ds:0x929c1239
  41360f:	add    dl,BYTE PTR [ebx-0x20]
  413612:	fadd   DWORD PTR [ebp-0x4d9b301e]
  413618:	lods   al,BYTE PTR ds:[esi]
  413619:	scas   al,BYTE PTR es:[edi]
  41361a:	call   0x339544a4
  41361f:	sub    BYTE PTR [eiz*4-0x5e9ee36f],dh
  413626:	xor    eax,0xcc20e46f
  41362b:	jae    0x41367a
  41362d:	xchg   esi,eax
  41362e:	push   esp
  41362f:	xchg   esi,eax
  413630:	mov    cl,0x1a
  413632:	ins    BYTE PTR es:[edi],dx
  413633:	loop   0x4135e3
  413635:	cmp    dh,BYTE PTR [ecx]
  413637:	bound  edi,QWORD PTR [ecx+0x163e9602]
  41363d:	mov    dl,0xc1
  41363f:	mov    ebx,0xf4523113
  413644:	push   ss
  413645:	jbe    0x413604
  413647:	int    0x4b
  413649:	scas   eax,DWORD PTR es:[edi]
  41364a:	mov    es,edx
  41364c:	mov    cl,0x9a
  41364e:	mov    eax,0xf801b0cd
  413653:	inc    edx
  413654:	and    eax,0xd9304869
  413659:	push   esi
  41365a:	outs   dx,BYTE PTR ds:[esi]
  41365b:	inc    eax
  41365c:	pop    edi
  41365d:	loope  0x4136dd
  41365f:	cs pop edx
  413661:	fs mov esi,0xfe3e928a
  413667:	xchg   ecx,eax
  413668:	jge    0x413695
  41366a:	inc    edx
  41366b:	push   ebp
  41366c:	mov    ch,0xdb
  41366e:	xlat   BYTE PTR ds:[ebx]
  41366f:	test   DWORD PTR [esp+eiz*8],ecx
  413672:	or     eax,0x1a0a306b
  413677:	test   al,0xe4
  413679:	cwde   
  41367a:	push   ebp
  41367b:	lods   eax,DWORD PTR ds:[esi]
  41367c:	popf   
  41367d:	and    al,0x40
  41367f:	(bad)  
  413680:	jns    0x413677
  413682:	or     al,0xf7
  413684:	and    eax,0x905cc499
  413689:	adc    al,0x67
  41368b:	aaa    
  41368c:	(bad)  
  41368d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41368e:	ret    0x8127
  413691:	or     BYTE PTR [edi],bh
  413693:	in     al,0xa6
  413695:	sbb    BYTE PTR [eax-0x51bb17e6],bh
  41369b:	pop    ecx
  41369c:	cmp    DWORD PTR [eax-0x5d8ffe6f],ebp
  4136a2:	mov    bh,0xc6
  4136a4:	jl     0x413646
  4136a6:	and    DWORD PTR [edx-0xa76625b],edi
  4136ac:	adc    ebp,DWORD PTR ds:0x40ff7d08
  4136b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136b3:	cld    
  4136b4:	mov    dl,BYTE PTR [edi-0x56]
  4136b7:	xchg   DWORD PTR [ecx],edx
  4136b9:	xchg   edi,eax
  4136ba:	imul   edx,DWORD PTR [eax+ecx*2+0x6],0xf28650b7
  4136c2:	pop    ds
  4136c3:	or     al,0xfa
  4136c5:	mov    esi,0x5b4c7aac
  4136ca:	in     eax,0x2
  4136cc:	add    eax,ecx
  4136ce:	mov    bl,0x25
  4136d0:	pusha  
  4136d1:	(bad)  
  4136d2:	stc    
  4136d3:	jge    0x4136fd
  4136d5:	sbb    BYTE PTR [ebx],dh
  4136d7:	adc    DWORD PTR [ebp+ecx*8-0x3fd07606],eax
  4136de:	or     ecx,esp
  4136e0:	jmp    0x413724
  4136e2:	scas   al,BYTE PTR es:[edi]
  4136e3:	add    al,0x70
  4136e5:	adc    BYTE PTR [edx+0x725c9081],dh
  4136eb:	lahf   
  4136ec:	scas   al,BYTE PTR es:[edi]
  4136ed:	sub    eax,0x9861acba
  4136f2:	add    al,0x93
  4136f4:	sub    al,0x55
  4136f6:	cmp    DWORD PTR [edx+ecx*2-0x48],ebp
  4136fa:	push   esp
  4136fb:	fnstenv [edi]
  4136fd:	adc    eax,0xc9462028
  413702:	or     BYTE PTR [edi-0x74c34faf],bl
  413708:	outs   dx,DWORD PTR ds:[esi]
  413709:	pop    ebp
  41370a:	fild   WORD PTR [eax+0x10]
  41370d:	pop    ebx
  41370e:	adc    dh,BYTE PTR [ebp-0x32]
  413711:	outs   dx,BYTE PTR ds:[esi]
  413712:	jl     0x413738
  413714:	cmp    DWORD PTR cs:[ecx-0x7c8b3f4b],esi
  41371b:	repz xor esp,ebx
  41371e:	ins    DWORD PTR es:[edi],dx
  41371f:	push   0xdd98122c
  413724:	and    ch,ch
  413726:	loop   0x4137a2
  413728:	or     ebp,DWORD PTR [ebp-0x14]
  41372b:	inc    eax
  41372c:	pop    es
  41372d:	mov    bh,0x28
  41372f:	pop    ecx
  413730:	rol    DWORD PTR [edx+0x27107d64],cl
  413736:	mov    eax,ds:0xa8d62cdd
  41373b:	stos   DWORD PTR es:[edi],eax
  41373c:	ins    BYTE PTR es:[edi],dx
  41373d:	mov    eax,ds:0x49ed29e4
  413742:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413743:	pushf  
  413744:	dec    ebp
  413745:	inc    esi
  413746:	frstor [edx+0x68085c5c]
  41374c:	(bad)  
  41374d:	xor    al,0x4d
  41374f:	jp     0x413704
  413751:	xchg   esi,eax
  413752:	push   ecx
  413753:	out    0x8c,eax
  413755:	xor    BYTE PTR [ebx-0x22231445],ah
  41375b:	nop
  41375c:	or     DWORD PTR [ebp+0x79ca385b],eax
  413762:	(bad)  
  413763:	jne    0x41375d
  413765:	mov    BYTE PTR [ebp-0x35b0bf47],cl
  41376b:	ins    DWORD PTR es:[edi],dx
  41376c:	mov    ds:0x2ee86053,eax
  413771:	fist   WORD PTR [ebx+edx*4+0xd]
  413775:	rdpmc  
  413777:	test   al,ch
  413779:	in     al,0x24
  41377b:	popa   
  41377c:	push   ebx
  41377d:	xchg   DWORD PTR [edi+0x181d94d4],edx
  413783:	mov    ah,0xc
  413785:	jmp    0xe3a2:0x74678d5f
  41378c:	jmp    0x1587:0x2f87940d
  413793:	inc    edi
  413794:	fldenv [edx+0x10]
  413797:	and    BYTE PTR [edi+ebx*2+0x46674ac6],cl
  41379e:	sub    eax,0x6b273a54
  4137a3:	mov    edx,0xb593d6ec
  4137a8:	jl     0x413791
  4137aa:	fwait
  4137ab:	jg     0x4137f6
  4137ad:	pop    ebp
  4137ae:	rcr    BYTE PTR [esi],cl
  4137b0:	pushf  
  4137b1:	push   cs
  4137b2:	and    BYTE PTR [esi+ecx*4],dl
  4137b5:	stos   BYTE PTR es:[edi],al
  4137b6:	sbb    al,0x3a
  4137b8:	xor    esp,DWORD PTR [eax]
  4137ba:	mov    esi,0x2df3af7a
  4137bf:	adc    DWORD PTR [ecx+0x734bc15b],esi
  4137c5:	call   0x5eaa:0x848822cb
  4137cc:	xchg   edi,eax
  4137cd:	(bad)
  4137d0:	inc    esi
  4137d1:	test   DWORD PTR [ebp-0x239add74],ebx
  4137d7:	iret   
  4137d8:	xor    eax,0x791801df
  4137dd:	outs   dx,BYTE PTR ds:[esi]
  4137de:	mov    ebx,0xa8b0f06d
  4137e3:	jmp    0x94fc:0x1a7686fd
  4137ea:	out    dx,eax
  4137eb:	mov    ah,0xaa
  4137ed:	pop    eax
  4137ee:	mov    fs,WORD PTR [edi+0x76748847]
  4137f4:	pusha  
  4137f5:	push   edi
  4137f6:	xor    al,0x7f
  4137f8:	in     eax,dx
  4137f9:	lock retf 
  4137fb:	sub    ecx,DWORD PTR [eax+0x41]
  4137fe:	cmp    ah,ah
  413800:	out    dx,eax
  413801:	sbb    BYTE PTR [esi],ch
  413803:	test   esi,ecx
  413805:	ja     0x413862
  413807:	outs   dx,BYTE PTR ds:[esi]
  413808:	ss fs jae 0x4137cc
  41380c:	add    eax,0x27bdd70c
  413811:	ret    
  413812:	jb     0x413842
  413814:	inc    ecx
  413815:	push   es
  413816:	xor    cl,BYTE PTR [edi+0x6e]
  413819:	test   BYTE PTR [ecx+0x82d9cf2],bl
  41381f:	pop    esi
  413820:	jb     0x413835
  413822:	dec    ecx
  413823:	test   eax,ebp
  413825:	mov    es,esp
  413827:	adc    eax,0x8d21ca4d
  41382c:	enter  0x5a96,0x8f
  413830:	push   ebx
  413831:	pushf  
  413832:	arpl   WORD PTR [esi+ecx*2+0x194fbcee],si
  413839:	leave  
  41383a:	rcr    DWORD PTR [ebp-0x594a6728],cl
  413840:	imul   edi,DWORD PTR [edx-0x38],0x65
  413844:	cmp    eax,0x7f8d65cc
  413849:	aaa    
  41384a:	adc    eax,0x3f7cf4ed
  41384f:	dec    edi
  413850:	push   ebp
  413851:	out    0x7d,al
  413853:	inc    esp
  413854:	pop    esi
  413855:	jb     0x41386b
  413857:	test   DWORD PTR [edx+0x32],esi
  41385a:	jae    0x4138b3
  41385c:	out    0x88,al
  41385e:	stc    
  41385f:	dec    ebp
  413860:	cmp    eax,0x295f2d15
  413865:	pusha  
  413866:	inc    esp
  413867:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413868:	push   ss
  413869:	xchg   edx,eax
  41386a:	jmp    0x4138bc
  41386c:	push   cs
  41386d:	cmp    al,0xc0
  41386f:	xchg   ebp,eax
  413870:	xlat   BYTE PTR ds:[ebx]
  413871:	in     eax,dx
  413872:	retf   0xda24
  413875:	ins    DWORD PTR es:[edi],dx
  413876:	fild   DWORD PTR [edx-0x7b979d49]
  41387c:	xlat   BYTE PTR ds:[ebx]
  41387d:	xlat   BYTE PTR ds:[ebx]
  41387e:	hlt    
  41387f:	or     edx,DWORD PTR [ebx-0x1e]
  413882:	sbb    ebx,ebp
  413884:	add    al,0x91
  413886:	dec    eax
  413887:	rcl    DWORD PTR [edi+0x5c],cl
  41388a:	and    dl,dl
  41388c:	pop    esp
  41388d:	cmp    esi,ecx
  41388f:	mov    WORD PTR [ebp+eax*2+0x31fadbeb],cs
  413896:	mov    bl,0x32
  413898:	mov    bl,0xf7
  41389a:	push   edi
  41389b:	sysretw 
  41389e:	bound  edi,QWORD PTR [edi]
  4138a0:	xchg   esi,eax
  4138a1:	and    edx,DWORD PTR [eax-0x52dcc175]
  4138a7:	dec    ecx
  4138a8:	mul    BYTE PTR [esi]
  4138aa:	jno    0x41383f
  4138ac:	test   BYTE PTR [edx],ah
  4138ae:	daa    
  4138af:	ret    0x49b9
  4138b2:	int    0x7a
  4138b4:	outs   dx,BYTE PTR ds:[esi]
  4138b5:	fiadd  WORD PTR [esi-0x40]
  4138b8:	push   cs
  4138b9:	fimul  DWORD PTR [edi+0x4d2f98b5]
  4138bf:	jne    0x4138d1
  4138c1:	mov    dh,0x4c
  4138c3:	sar    BYTE PTR [edx+0x5ec6108],0x7d
  4138ca:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138cd:	adc    eax,0x4034daf7
  4138d2:	xchg   BYTE PTR [edi-0x10bb136],ah
  4138d8:	jle    0x413873
  4138da:	aas    
  4138db:	xchg   ebp,eax
  4138dc:	les    eax,FWORD PTR [esi-0x2b9e7738]
  4138e2:	cld    
  4138e3:	sub    BYTE PTR [ebp+0x78],0x1f
  4138e7:	inc    edx
  4138e8:	push   edx
  4138e9:	fwait
  4138ea:	shr    DWORD PTR [ebx],cl
  4138ec:	adc    BYTE PTR [edx+0x38263d8b],al
  4138f2:	test   DWORD PTR [ebx],edx
  4138f4:	int    0xda
  4138f6:	(bad)  
  4138f7:	push   ecx
  4138f8:	sbb    eax,0x8667a133
  4138fd:	addr16 ja 0x413948
  413900:	fwait
  413901:	retf   0xe06b
  413904:	push   ebp
  413905:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413906:	xchg   ebx,eax
  413907:	jg     0x41397d
  413909:	lods   al,BYTE PTR ds:[esi]
  41390a:	mov    esi,ebx
  41390c:	xchg   ebp,eax
  41390d:	out    dx,eax
  41390e:	jo     0x41392d
  413910:	mov    edx,0xead9bf8d
  413915:	mov    bh,ch
  413917:	ins    BYTE PTR es:[edi],dx
  413918:	pop    ss
  413919:	add    al,0x5a
  41391b:	out    dx,al
  41391c:	pop    ds
  41391d:	scas   eax,DWORD PTR es:[edi]
  41391e:	pop    ebx
  41391f:	les    esi,FWORD PTR [ebx-0x70388bad]
  413925:	push   es
  413926:	jmp    0x6e35:0x35ccdbae
  41392d:	out    dx,al
  41392e:	sub    BYTE PTR [esi+edi*8-0x32],bh
  413932:	or     al,0x8d
  413934:	addr16 std 
  413936:	outs   dx,DWORD PTR ds:[esi]
  413937:	imul   esi,esi,0x41719d30
  41393d:	sahf   
  41393e:	fxch   st(2)
  413940:	int3   
  413941:	inc    ecx
  413942:	adc    BYTE PTR [edi-0x273d6e66],0x99
  413949:	xchg   esi,eax
  41394a:	imul   esi,DWORD PTR [eax+ebp*8-0x60],0x619dd03c
  413952:	adc    al,0x9a
  413954:	(bad)  
  413955:	cmp    al,0x45
  413957:	pop    ds
  413958:	sub    BYTE PTR [eax+0x5b],cl
  41395b:	fwait
  41395c:	outs   dx,DWORD PTR ds:[esi]
  41395d:	(bad)  
  41395e:	sahf   
  41395f:	into   
  413960:	ror    esi,1
  413962:	dec    edx
  413963:	jb     0x41391f
  413965:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413966:	mov    bh,0x0
  413968:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413969:	xchg   ebx,eax
  41396a:	mov    ecx,0xcf13d1e3
  41396f:	mov    cl,0x24
  413971:	mov    al,0x66
  413973:	and    dl,BYTE PTR [edi]
  413975:	arpl   WORD PTR [ecx+0x3ba58ed2],dx
  41397b:	sub    esi,DWORD PTR [edx+0x53d0e36]
  413981:	jno    0x41395c
  413983:	mov    ecx,0xbf6ee6ec
  413988:	xor    BYTE PTR [edx+ebp*1+0x60646b89],bh
  41398f:	mov    edx,0x2cf95ae7
  413994:	jno    0x413973
  413996:	pop    ss
  413997:	mov    ebp,0xad16ac0c
  41399c:	push   edi
  41399d:	or     DWORD PTR [esi],0xea8b1c93
  4139a3:	push   eax
  4139a4:	inc    esp
  4139a5:	ret    0x6b01
  4139a8:	fsub   st(6),st
  4139aa:	mov    ecx,0xebf56d19
  4139af:	dec    ecx
  4139b0:	outs   dx,BYTE PTR ds:[esi]
  4139b1:	push   ss
  4139b2:	xchg   ebp,eax
  4139b3:	test   al,0xc1
  4139b5:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139b7:	inc    ecx
  4139b8:	and    cl,BYTE PTR es:[edx-0x4d64003f]
  4139bf:	mov    ch,0x27
  4139c1:	push   esi
  4139c2:	clc    
  4139c3:	inc    edi
  4139c4:	sbb    BYTE PTR [ebx-0x5e],bh
  4139c7:	cmp    DWORD PTR [edi],ebp
  4139c9:	shl    DWORD PTR [ebp+0x598837cc],0xc4
  4139d0:	sbb    eax,0xe453154
  4139d5:	sbb    BYTE PTR [ebx+0x2dd73721],0x49
  4139dc:	pop    esp
  4139dd:	and    BYTE PTR [edi+0x1608471a],ch
  4139e3:	xor    eax,0x203848ad
  4139e8:	cmp    dl,BYTE PTR [esi-0x4f]
  4139eb:	into   
  4139ec:	aaa    
  4139ed:	push   ss
  4139ee:	mov    esp,0xb4093c97
  4139f3:	and    BYTE PTR [edx+ebx*8-0x58a20d70],dl
  4139fa:	fstp   DWORD PTR [ecx+esi*1+0x10]
  4139fe:	ret    
  4139ff:	mov    DWORD PTR [edi-0x7c8667b3],edx
  413a05:	dec    eax
  413a06:	add    al,0x2
  413a08:	ror    DWORD PTR [edx-0x48],cl
  413a0b:	lahf   
  413a0c:	stos   DWORD PTR es:[edi],eax
  413a0d:	jecxz  0x413a57
  413a0f:	xchg   esp,eax
  413a10:	ds ins DWORD PTR es:[edi],dx
  413a12:	nop
  413a13:	xchg   edi,eax
  413a14:	retf   
  413a15:	clc    
  413a16:	aas    
  413a17:	in     eax,0xc9
  413a19:	jae    0x413a4d
  413a1b:	jbe    0x413a7c
  413a1d:	adc    eax,0x3bf4f128
  413a22:	push   ds
  413a23:	lahf   
  413a24:	loopne 0x4139d4
  413a26:	push   0xffffff9c
  413a28:	fsubr  QWORD PTR [ebx-0x7bd6ee32]
  413a2e:	dec    bh
  413a30:	sbb    esp,DWORD PTR [esi]
  413a32:	cli    
  413a33:	mov    bh,0x2a
  413a35:	pop    ss
  413a36:	cmc    
  413a37:	call   0x77e3bea6
  413a3c:	ss pop ecx
  413a3e:	push   edi
  413a3f:	dec    ebx
  413a40:	mov    ds:0xe1bbac40,al
  413a45:	ret    
  413a46:	inc    edx
  413a47:	daa    
  413a48:	clc    
  413a49:	mov    eax,ds:0x175f2da
  413a4e:	mov    edi,0x66a3f847
  413a53:	add    DWORD PTR [esi],ebx
  413a55:	(bad)  
  413a56:	xchg   ebp,eax
  413a57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a58:	scas   al,BYTE PTR es:[edi]
  413a59:	cmp    dl,BYTE PTR [eax+ebx*8+0x343b7b8]
  413a60:	xchg   esi,eax
  413a61:	push   ds
  413a62:	inc    ebx
  413a63:	mov    edx,0x3f47bd6e
  413a68:	push   ebx
  413a69:	adc    eax,0x8bc4c003
  413a6e:	out    dx,al
  413a6f:	(bad)  [edi]
  413a71:	int3   
  413a72:	test   eax,0x533dc266
  413a77:	fisubr DWORD PTR [edi+0x3a]
  413a7a:	jp     0x413ad9
  413a7c:	stos   DWORD PTR es:[edi],eax
  413a7d:	mov    bh,0xff
  413a7f:	push   ecx
  413a80:	push   edx
  413a81:	add    BYTE PTR [ecx],bh
  413a83:	dec    eax
  413a84:	sbb    dl,BYTE PTR [ecx-0x71]
  413a87:	fnstsw WORD PTR [ebx]
  413a89:	and    al,0xd0
  413a8b:	scas   eax,DWORD PTR es:[edi]
  413a8c:	icebp  
  413a8d:	js     0x413a55
  413a8f:	cmc    
  413a90:	or     ebx,DWORD PTR [edx+0x28]
  413a93:	xchg   DWORD PTR [eax+0x7a],esp
  413a96:	int    0x5e
  413a98:	test   DWORD PTR [esi-0xf],esp
  413a9b:	pusha  
  413a9c:	ret    
  413a9d:	mov    dh,0xa9
  413a9f:	inc    ebx
  413aa0:	scas   al,BYTE PTR es:[edi]
  413aa1:	icebp  
  413aa2:	lds    ebx,FWORD PTR [esi]
  413aa4:	mov    esp,0xeffaa98f
  413aa9:	je     0x413ad6
  413aab:	div    DWORD PTR [ecx+0x236b496e]
  413ab1:	cs sub eax,0xfb9aafd
  413ab7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ab8:	jcxz   0x413a90
  413abb:	xor    edi,esi
  413abd:	enter  0xf317,0x54
  413ac1:	sbb    edx,0xffffffcb
  413ac4:	adc    eax,0x527802e
  413ac9:	add    al,0xf8
  413acb:	sahf   
  413acc:	inc    ebx
  413acd:	cdq    
  413ace:	call   0xa6d0d9c8
  413ad3:	dec    ebp
  413ad4:	fimul  DWORD PTR [esi-0x2a75e930]
  413ada:	loope  0x413b00
  413adc:	sub    dl,BYTE PTR [eax+0x5bc9b549]
  413ae2:	add    al,0x13
  413ae4:	or     DWORD PTR [esi],ebp
  413ae6:	xchg   DWORD PTR [ebx],eax
  413ae8:	cmp    al,0x7c
  413aea:	sar    BYTE PTR [ecx],cl
  413aec:	sbb    DWORD PTR [edi+0x563ce0a4],edi
  413af2:	sbb    eax,DWORD PTR [esi+edi*1]
  413af5:	inc    ebp
  413af6:	mov    ds:0xbb092167,eax
  413afb:	mov    DWORD PTR [ebx-0x72],0xbaaf3b50
  413b02:	(bad)  
  413b03:	fwait
  413b04:	add    al,0x73
  413b06:	xchg   edx,eax
  413b07:	das    
  413b08:	int    0x59
  413b0a:	leave  
  413b0b:	xor    DWORD PTR ds:0x7d8c53d0,ebp
  413b11:	cmp    ebx,ebx
  413b13:	push   ecx
  413b14:	test   eax,0xfe720ca7
  413b19:	aam    0xfb
  413b1b:	push   edi
  413b1c:	dec    esi
  413b1d:	sub    eax,0xf67842f4
  413b22:	jle    0x413b6a
  413b24:	inc    ebp
  413b25:	in     al,0x1b
  413b27:	in     al,dx
  413b28:	ins    DWORD PTR es:[edi],dx
  413b29:	or     al,0x24
  413b2b:	xor    ah,BYTE PTR [eax-0x73]
  413b2e:	xchg   esi,eax
  413b2f:	xchg   esp,eax
  413b30:	push   es
  413b31:	sbb    eax,eax
  413b33:	pop    ss
  413b34:	jb     0x413b91
  413b36:	or     al,0x41
  413b38:	push   esi
  413b39:	lock or DWORD PTR [esi+0x15b66dfe],0xffffff9f
  413b41:	xor    eax,0xb21b7df8
  413b46:	hlt    
  413b47:	(bad)  
  413b4a:	nop
  413b4b:	xchg   ebp,eax
  413b4c:	rol    edx,1
  413b4e:	xor    BYTE PTR [ebp+0x50a6ba00],ah
  413b54:	scas   al,BYTE PTR es:[edi]
  413b55:	jne    0x413b71
  413b57:	mov    eax,0x83af0ba5
  413b5c:	iret   
  413b5d:	inc    ebx
  413b5e:	and    dl,cl
  413b60:	lods   al,BYTE PTR ds:[esi]
  413b61:	mov    esp,DWORD PTR [edi*2+0x21a18cbd]
  413b68:	fbld   TBYTE PTR [esp+esi*4+0x30184097]
  413b6f:	sub    eax,0x5b140149
  413b74:	fmul   DWORD PTR [ecx+0x4d8bf730]
  413b7a:	push   ss
  413b7b:	xor    ch,BYTE PTR [edx-0x22]
  413b7e:	inc    esi
  413b7f:	ficom  DWORD PTR [ebx]
  413b81:	mov    cl,0xee
  413b83:	sub    al,0xdd
  413b85:	push   cs
  413b86:	fild   DWORD PTR [edi]
  413b88:	dec    eax
  413b89:	lock xchg esp,eax
  413b8b:	out    0x7,eax
  413b8d:	test   BYTE PTR ss:0xd33d96bd,bh
  413b94:	push   esi
  413b95:	les    eax,FWORD PTR [edi+eax*2+0x4a]
  413b99:	dec    ebp
  413b9a:	sbb    bh,ah
  413b9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b9d:	je     0x413b5f
  413b9f:	aad    0xd3
  413ba1:	push   edx
  413ba2:	pop    es
  413ba3:	stc    
  413ba4:	mov    esp,DWORD PTR [edi]
  413ba6:	retf   0xd3b9
  413ba9:	outs   dx,BYTE PTR ds:[esi]
  413baa:	mov    edx,DWORD PTR [edi+esi*2+0x57c1c4d0]
  413bb1:	gs push ecx
  413bb3:	ficomp DWORD PTR [ebx-0xb0a52ba]
  413bb9:	cli    
  413bba:	(bad)  
  413bbb:	retf   0xd896
  413bbe:	js     0x413ba6
  413bc0:	les    esi,FWORD PTR [esp+ecx*1+0x15]
  413bc4:	mov    dh,0x33
  413bc6:	out    0x91,al
  413bc8:	stos   DWORD PTR es:[edi],eax
  413bc9:	push   eax
  413bca:	mov    cl,0x53
  413bcc:	test   al,0x46
  413bce:	not    DWORD PTR [eax-0x5f]
  413bd1:	adc    dh,dl
  413bd3:	sub    dh,BYTE PTR [ebx+0x6bf115ea]
  413bd9:	push   ebx
  413bda:	lods   al,BYTE PTR ds:[esi]
  413bdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413bdc:	and    eax,0xf706cea0
  413be1:	adc    ecx,DWORD PTR [ecx+0x1]
  413be4:	inc    ebp
  413be5:	fidivr WORD PTR [eax+0x32822091]
  413beb:	ins    BYTE PTR es:[edi],dx
  413bec:	retf   
  413bed:	dec    ebp
  413bee:	cmp    eax,eax
  413bf0:	jg     0x413b80
  413bf2:	mov    ecx,0x3d2544f
  413bf7:	push   0xda91cc30
  413bfc:	mov    edi,0x1946ce2b
  413c01:	sbb    ah,BYTE PTR [bx+di]
  413c04:	loopne 0x413bc4
  413c06:	cmc    
  413c07:	nop
  413c08:	push   eax
  413c09:	je     0x413c74
  413c0b:	div    BYTE PTR [esi+0x5a9047c4]
  413c11:	frstor [ecx]
  413c13:	mov    esi,0xa8232045
  413c18:	jb     0x413bd6
  413c1a:	ins    BYTE PTR es:[edi],dx
  413c1b:	mov    cl,0x10
  413c1d:	pushf  
  413c1e:	sti    
  413c1f:	stos   DWORD PTR es:[edi],eax
  413c20:	cmp    esp,eax
  413c22:	lahf   
  413c23:	(bad)  
  413c24:	retf   
  413c25:	idiv   DWORD PTR [edi+0x10577b44]
  413c2b:	xchg   edx,eax
  413c2c:	add    DWORD PTR [ecx-0x4b1ab5f1],edx
  413c32:	pop    edx
  413c33:	cmp    dl,bl
  413c35:	(bad)  
  413c36:	out    dx,al
  413c37:	sub    BYTE PTR [ebp+0x18],0x52
  413c3b:	push   ecx
  413c3c:	cmp    eax,0xd327d3ce
  413c41:	jo     0x413c8f
  413c43:	les    ebp,FWORD PTR ds:0x82ff3db
  413c49:	sbb    al,0x9f
  413c4b:	sbb    al,0x4d
  413c4d:	xchg   ecx,eax
  413c4e:	push   0x171e019e
  413c53:	mov    ah,0x8f
  413c55:	sub    al,0x4a
  413c57:	sub    bl,cl
  413c59:	mov    eax,0xb2069500
  413c5e:	out    0x7f,al
  413c60:	imul   ebp,DWORD PTR [edi],0xf9e05c96
  413c66:	inc    edx
  413c67:	pop    edi
  413c68:	sti    
  413c69:	out    dx,eax
  413c6a:	pop    es
  413c6b:	add    edx,DWORD PTR [esi]
  413c6d:	add    al,0x25
  413c6f:	jmp    0x413cd9
  413c71:	nop
  413c72:	enter  0x5dc3,0x75
  413c76:	addr16 push ss
  413c78:	sbb    ebx,DWORD PTR [edx-0x7e]
  413c7b:	inc    ebp
  413c7c:	cmp    BYTE PTR [eax-0xc],ah
  413c7f:	and    DWORD PTR [edi-0x2d3176c],edx
  413c85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c86:	js     0x413c38
  413c88:	sbb    eax,0xa11b6b51
  413c8d:	scas   al,BYTE PTR es:[edi]
  413c8e:	(bad)  
  413c8f:	aad    0xdb
  413c91:	sbb    al,0xf3
  413c93:	adc    eax,0xebdedd39
  413c98:	outs   dx,BYTE PTR ds:[esi]
  413c99:	ret    
  413c9a:	(bad)  
  413c9b:	into   
  413c9c:	sar    BYTE PTR [ebx+0x1f830ca6],cl
  413ca2:	push   ebx
  413ca3:	scas   al,BYTE PTR es:[edi]
  413ca4:	or     BYTE PTR [edx+0x60],ch
  413ca7:	mov    ah,BYTE PTR [ebx+0x50c82363]
  413cad:	jge    0x413c7c
  413caf:	outs   dx,DWORD PTR ds:[esi]
  413cb0:	push   edi
  413cb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413cb2:	mov    bl,0xff
  413cb4:	sub    eax,0xc13e6f83
  413cb9:	mov    ds:0x598ded4c,al
  413cbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413cbf:	push   DWORD PTR [esp+esi*1+0x191634c9]
  413cc6:	add    ebx,DWORD PTR [edx+0x77]
  413cc9:	out    0x23,al
  413ccb:	sbb    eax,0xc3e132f0
  413cd0:	dec    eax
  413cd1:	lds    esi,FWORD PTR [edx+0x1618c9f7]
  413cd7:	aam    0xf5
  413cd9:	stc    
  413cda:	push   esp
  413cdb:	addr16 xchg ebx,eax
  413cdd:	ins    BYTE PTR es:[edi],dx
  413cde:	in     eax,0x74
  413ce0:	pusha  
  413ce1:	jbe    0x413d62
  413ce3:	and    al,0xea
  413ce5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ce6:	push   sp
  413ce8:	cmp    eax,0x618b1e21
  413ced:	pop    edx
  413cee:	dec    esi
  413cef:	dec    eax
  413cf0:	test   eax,0x976df936
  413cf5:	outs   dx,DWORD PTR ds:[esi]
  413cf6:	mov    edi,0xf184345d
  413cfb:	or     ch,dl
  413cfd:	(bad)  
  413cfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413cff:	jl     0x413d6a
  413d01:	mov    ecx,0x3efa0142
  413d06:	in     eax,dx
  413d07:	sub    eax,0xc489bb3
  413d0c:	jge    0x413d6f
  413d0e:	pop    ds
  413d0f:	xor    DWORD PTR ds:0xb5ab3b5,0xffffffc5
  413d16:	xchg   ecx,eax
  413d17:	sar    DWORD PTR cs:[eax+0x463360d7],cl
  413d1e:	out    0xf5,al
  413d20:	iret   
  413d21:	out    dx,al
  413d22:	push   ebp
  413d23:	dec    esp
  413d24:	mov    edi,0x1da0b3f6
  413d29:	xchg   ebx,eax
  413d2a:	adc    al,0x72
  413d2c:	jns    0x413d6a
  413d2e:	test   DWORD PTR [edx-0x80],esi
  413d31:	and    cl,ah
  413d33:	cmp    BYTE PTR [eax+0x5597b4e2],bh
  413d39:	dec    ebp
  413d3a:	fisttp DWORD PTR [ecx-0x63793527]
  413d40:	outs   dx,DWORD PTR ds:[esi]
  413d41:	scas   eax,DWORD PTR es:[edi]
  413d42:	add    ebx,esp
  413d44:	lock and eax,0x47e521f8
  413d4a:	int3   
  413d4b:	push   ss
  413d4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d4d:	adc    BYTE PTR [ebp-0x44a00461],cl
  413d53:	push   ss
  413d54:	hlt    
  413d55:	sti    
  413d56:	push   ds
  413d57:	call   DWORD PTR [esi+edx*2-0x50]
  413d5b:	mov    bh,0x12
  413d5d:	ret    
  413d5e:	nop
  413d5f:	call   0x165863c9
  413d64:	xor    dl,cl
  413d66:	lahf   
  413d67:	dec    eax
  413d68:	adc    esi,DWORD PTR [ecx]
  413d6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d6b:	push   esp
  413d6c:	jmp    0x413d3e
  413d6e:	mov    ds:0xbbc696b2,eax
  413d73:	arpl   WORD PTR [esi+0x3],di
  413d76:	pusha  
  413d77:	leave  
  413d78:	push   esp
  413d79:	pop    ds
  413d7a:	push   eax
  413d7b:	(bad)  
  413d7c:	outs   dx,DWORD PTR ds:[esi]
  413d7d:	frstor [edx]
  413d7f:	mov    edi,0x7afeb316
  413d84:	out    dx,al
  413d85:	vmread DWORD PTR [ebp-0x1c46ca30],eax
  413d8c:	jmp    0x413d15
  413d8e:	inc    ecx
  413d8f:	shr    BYTE PTR fs:[edx],1
  413d92:	adc    ch,cl
  413d94:	sbb    ebp,DWORD PTR [edx]
  413d96:	xchg   edx,eax
  413d97:	dec    ebp
  413d98:	retf   0x5f0d
  413d9b:	lds    edx,FWORD PTR [ebp-0x59824bc]
  413da1:	dec    esi
  413da2:	or     eax,0xf4a194c6
  413da7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413da8:	fld    QWORD PTR [ebp+0x43]
  413dab:	stos   DWORD PTR es:[edi],eax
  413dac:	jl     0x413dde
  413dae:	mov    ds:0x885216d0,al
  413db3:	jbe    0x413db8
  413db5:	xchg   BYTE PTR [ebp-0x2d],dl
  413db8:	dec    ebp
  413db9:	js     0x413d64
  413dbb:	cdq    
  413dbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413dbd:	ret    0x7a94
  413dc0:	popa   
  413dc1:	sbb    al,0x59
  413dc3:	pop    es
  413dc4:	mov    al,ds:0xf71422fc
  413dc9:	bound  ebx,QWORD PTR [esi+ebp*1-0x294a1f8f]
  413dd0:	(bad)  [edx-0x2f93c4b5]
  413dd6:	and    eax,0xf7b55bcc
  413ddb:	push   ds
  413ddc:	into   
  413ddd:	mov    ecx,0xcbd22421
  413de2:	addr16 mov ch,0xd5
  413de5:	repz xchg esi,eax
  413de7:	xchg   esp,eax
  413de8:	xor    eax,0x5292c300
  413ded:	ds scas eax,DWORD PTR es:[edi]
  413def:	fcom   st(2)
  413df1:	and    dh,cl
  413df3:	mov    ch,0xe9
  413df5:	data16 jge 0x413df2
  413df8:	jp     0x413dca
  413dfa:	pop    eax
  413dfb:	test   al,0x81
  413dfd:	fwait
  413dfe:	jmp    0x1def:0x33987616
  413e05:	xor    BYTE PTR [ecx],al
  413e07:	add    eax,0x4c148603
  413e0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e0d:	sbb    esp,DWORD PTR [esi-0x59a28936]
  413e13:	lods   al,BYTE PTR ds:[esi]
  413e14:	cmp    dh,ch
  413e16:	jno    0x9250a7dc
  413e1c:	and    bl,al
  413e1e:	mov    cl,0x9d
  413e20:	pusha  
  413e21:	mov    al,BYTE PTR [ecx-0x5b274451]
  413e27:	ss pushf 
  413e29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e2a:	inc    ecx
  413e2b:	aaa    
  413e2c:	adc    eax,0xf5ace1e3
  413e31:	cmc    
  413e32:	mov    edi,0xfaaf8f94
  413e37:	or     eax,0x35e13f6a
  413e3c:	add    DWORD PTR [eax-0x7f1043bc],0x25
  413e43:	add    ebx,edi
  413e45:	pusha  
  413e46:	shl    BYTE PTR [ecx-0x5a23fd67],cl
  413e4c:	mov    BYTE PTR [ecx-0x60a4111d],bh
  413e52:	cwde   
  413e53:	mov    esi,0xb26db827
  413e58:	jmp    0x66048fd7
  413e5d:	ret    
  413e5e:	cwde   
  413e5f:	or     DWORD PTR [edi-0x5d],0x57e8f7c2
  413e66:	jns    0x413e45
  413e68:	mov    edx,0x1976f479
  413e6d:	dec    ecx
  413e6e:	scas   al,BYTE PTR es:[edi]
  413e6f:	out    0xc0,eax
  413e71:	idiv   DWORD PTR [eax+0x3b]
  413e74:	add    DWORD PTR [ecx-0x55],edi
  413e77:	and    eax,0xc11158a0
  413e7c:	addr16 inc ebp
  413e7e:	xorps  xmm3,XMMWORD PTR [edx+0x464658c2]
  413e85:	adc    BYTE PTR [esi+0x15],dh
  413e88:	popa   
  413e89:	jmp    0xd399:0x602f122a
  413e90:	popa   
  413e91:	lods   al,BYTE PTR ds:[esi]
  413e92:	xor    DWORD PTR [ebp-0x39],esp
  413e95:	fcomp  DWORD PTR [eax+ebx*1]
  413e98:	xchg   edx,eax
  413e99:	push   es
  413e9a:	loop   0x413ea2
  413e9c:	dec    esp
  413e9d:	or     BYTE PTR [ebp-0x359d0b16],ch
  413ea3:	in     eax,dx
  413ea4:	inc    ecx
  413ea5:	sbb    DWORD PTR [eax+0x133ccd27],esi
  413eab:	sbb    eax,0xce01b044
  413eb0:	and    esp,edx
  413eb2:	xchg   esi,eax
  413eb3:	jge    0x413f25
  413eb5:	jnp    0x413ec4
  413eb7:	in     al,dx
  413eb8:	cmp    dh,al
  413eba:	xchg   edx,eax
  413ebb:	or     BYTE PTR [edx-0x39],0x83
  413ebf:	mov    ss,WORD PTR [eax+0x0]
  413ec2:	and    al,0xef
  413ec4:	lock dec esp
  413ec6:	das    
  413ec7:	and    DWORD PTR [edx],ecx
  413ec9:	cdq    
  413eca:	es dec edx
  413ecc:	jl     0x413f10
  413ece:	aam    0x97
  413ed0:	add    ebp,esi
  413ed2:	inc    edi
  413ed3:	add    edi,DWORD PTR [ecx-0x7db9cd6c]
  413ed9:	repz mov ecx,0x3ee39a74
  413edf:	je     0x413e61
  413ee1:	push   0x56f034e0
  413ee6:	icebp  
  413ee7:	repz repnz xchg esp,eax
  413eea:	mov    BYTE PTR [si+0x2154],ah
  413eef:	xchg   ebx,eax
  413ef0:	popa   
  413ef1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ef2:	pop    ss
  413ef3:	xor    ebp,edi
  413ef5:	dec    edx
  413ef6:	mov    bl,0x82
  413ef8:	jl     0x413f0a
  413efa:	cmp    ebx,ebx
  413efc:	mov    ebx,0xf344cd32
  413f01:	and    BYTE PTR [edi-0x6a],dh
  413f04:	in     al,dx
  413f05:	lods   al,BYTE PTR ds:[esi]
  413f06:	push   ebx
  413f07:	lahf   
  413f08:	mov    dl,0x5b
  413f0a:	xchg   esp,eax
  413f0b:	loope  0x413f45
  413f0d:	neg    DWORD PTR [ebx+0x78de10fa]
  413f13:	cmp    ecx,edx
  413f15:	sbb    cl,dh
  413f17:	add    dl,dl
  413f19:	jmp    DWORD PTR [edi+ecx*1+0x1e]
  413f1d:	sub    DWORD PTR [ecx+eax*2+0x534762db],eax
  413f24:	or     eax,0xa1296903
  413f29:	push   es
  413f2a:	pop    eax
  413f2b:	fwait
  413f2c:	cmp    DWORD PTR [esi-0x2801a3bf],eax
  413f32:	sub    ecx,DWORD PTR [eax]
  413f34:	lods   eax,DWORD PTR ds:[esi]
  413f35:	jmp    0x41b607de
  413f3a:	mov    ecx,0x6e3620ae
  413f3f:	js     0x413f2f
  413f41:	cmp    edx,DWORD PTR [ebp+0x7e839c8]
  413f47:	shr    BYTE PTR [esp+ebp*4-0x74],0x82
  413f4c:	test   al,0x16
  413f4e:	dec    BYTE PTR [eax-0x7a06acd2]
  413f54:	nop
  413f55:	arpl   bp,di
  413f57:	and    eax,0x811d762c
  413f5c:	mov    esp,0x1853ff09
  413f61:	jmp    0x53fb2c68
  413f66:	inc    esi
  413f67:	cmp    DWORD PTR fs:0xdf724d73,ebp
  413f6e:	mov    ah,0xdb
  413f70:	pop    esp
  413f71:	aas    
  413f72:	cdq    
  413f73:	fs or  al,0x41
  413f76:	stos   BYTE PTR es:[edi],al
  413f77:	dec    edi
  413f78:	cmc    
  413f79:	jp     0x413fb6
  413f7b:	mov    dh,0x9d
  413f7d:	pop    eax
  413f7e:	pop    ecx
  413f7f:	dec    ebp
  413f80:	add    BYTE PTR [ebx+0xc381ea3],ch
  413f86:	loop   0x413faa
  413f88:	inc    ebp
  413f89:	data16 das 
  413f8b:	into   
  413f8c:	xchg   ebx,eax
  413f8d:	arpl   WORD PTR [ebp+0x26],si
  413f90:	icebp  
  413f91:	jb     0x413fe6
  413f93:	jno    0x413f9f
  413f95:	mov    dl,0x56
  413f97:	xchg   edi,eax
  413f98:	outs   dx,DWORD PTR ds:[esi]
  413f99:	nop
  413f9a:	test   BYTE PTR [eax+0x62],bh
  413f9d:	add    BYTE PTR [ebx-0x7e],dh
  413fa0:	les    esp,FWORD PTR [edx]
  413fa2:	xchg   esi,eax
  413fa3:	adc    ah,al
  413fa5:	mov    ds:0x8a1c7b14,al
  413faa:	inc    edi
  413fab:	in     eax,dx
  413fac:	xor    BYTE PTR ds:0x6e140d6d,0xd4
  413fb3:	add    ah,BYTE PTR [ebp-0x29135578]
  413fb9:	and    ch,BYTE PTR [ebx+0x5a]
  413fbc:	mov    ecx,0x2c9ea168
  413fc1:	xchg   BYTE PTR [edx+0x307f99c2],ch
  413fc7:	push   esp
  413fc8:	imul   DWORD PTR [edi-0x23c60007]
  413fce:	in     al,dx
  413fcf:	pop    esi
  413fd1:	jnp    0x413f61
  413fd3:	pop    ebp
  413fd4:	cs push 0x5c73d6af
  413fda:	sbb    DWORD PTR [ecx+eiz*4-0x49f8a524],0x1b261c31
  413fe5:	jnp    0x413fa7
  413fe7:	xchg   ecx,eax
  413fe8:	cmp    ebx,0xffffffc8
  413feb:	cmp    dl,BYTE PTR [edx+0x5a]
  413fee:	inc    edi
  413fef:	pop    ebp
  413ff0:	push   edx
  413ff1:	not    ebp
  413ff3:	call   0x40a3f3df
  413ff8:	push   es
  413ff9:	out    dx,al
  413ffa:	sbb    DWORD PTR [ebp+edi*1+0x6c],ebp
  413ffe:	dec    ebp
  413fff:	lds    edx,FWORD PTR [eax+edi*4+0x3a93313]
  414006:	fdivr  DWORD PTR [esi-0x43]
  414009:	jne    0x413fbf
  41400b:	and    eax,0xa492b7fb
  414010:	ret    
  414011:	ror    DWORD PTR [ecx+0x106da5aa],cl
  414017:	jne    0x41408a
  414019:	sbb    al,0x9d
  41401b:	push   eax
  41401c:	cmp    eax,0xf117d4d2
  414021:	arpl   di,bp
  414023:	mov    bl,0x60
  414025:	pop    esp
  414026:	sub    DWORD PTR [edi-0x325c5ad0],edx
  41402c:	lods   al,BYTE PTR ds:[esi]
  41402d:	shl    DWORD PTR [eax+0x102a2fe1],1
  414033:	sub    al,0x4b
  414035:	ret    
  414036:	jecxz  0x413feb
  414038:	sti    
  414039:	popf   
  41403a:	jne    0x413fc5
  41403c:	xor    BYTE PTR [ecx],cl
  41403e:	dec    edi
  41403f:	push   ds
  414040:	pop    ebx
  414041:	stos   DWORD PTR es:[edi],eax
  414042:	pop    ebp
  414043:	cwde   
  414044:	jae    0x4140bf
  414046:	rol    BYTE PTR [edx-0x15d96b10],1
  41404c:	mov    bl,0x85
  41404e:	adc    DWORD PTR [eax],edx
  414050:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414051:	ret    0x46ca
  414054:	int3   
  414055:	int    0x68
  414057:	in     eax,0xbe
  414059:	pop    ds
  41405a:	iret   
  41405b:	and    BYTE PTR [edi+0x630e03ca],ch
  414061:	push   0x4d46347
  414066:	sbb    eax,DWORD PTR [ebp-0xf]
  414069:	les    esi,FWORD PTR [edi+0x68]
  41406c:	push   0xa36ec7c8
  414071:	not    cl
  414073:	bound  ecx,QWORD PTR [edi+0x1e1df540]
  414079:	adc    BYTE PTR [eax+esi*1-0x57],al
  41407d:	mov    al,ds:0x5a327571
  414082:	cs sti 
  414084:	xchg   ebp,eax
  414085:	in     al,dx
  414086:	xchg   ebx,eax
  414087:	pop    edi
  414088:	mov    es,WORD PTR [ebx+0x7]
  41408b:	fdivr  QWORD PTR [ebx-0x60]
  41408e:	push   ds
  41408f:	pusha  
  414090:	xor    al,BYTE PTR [esi-0x4f04a9a7]
  414096:	pop    eax
  414097:	and    ebx,DWORD PTR ds:0x767d9c9
  41409d:	retf   
  41409e:	loop   0x41407e
  4140a0:	mov    dh,BYTE PTR [edx+0x118d5cfa]
  4140a6:	aad    0x5
  4140a8:	fstp   TBYTE PTR [edi+0x651e87f]
  4140ae:	mov    edx,0xdfbf013b
  4140b3:	popf   
  4140b4:	ror    BYTE PTR [edx],cl
  4140b6:	pop    edi
  4140b7:	sub    eax,0x81e374fd
  4140bc:	xchg   ecx,eax
  4140bd:	cs std 
  4140bf:	hlt    
  4140c0:	(bad)  
  4140c1:	mov    al,0xc7
  4140c3:	mov    ebx,0x2b02cd8d
  4140c8:	xor    eax,0x96b90455
  4140cd:	sbb    bl,al
  4140cf:	jo     0x41406a
  4140d1:	pop    edi
  4140d2:	test   eax,0x8df447
  4140d7:	fist   DWORD PTR [esi+0x3e]
  4140da:	xchg   ch,ch
  4140dc:	mov    WORD PTR [ecx],ss
  4140de:	add    eax,DWORD PTR [edi+0x21]
  4140e1:	call   0xee70:0x5332a12a
  4140e8:	shl    edx,cl
  4140ea:	mov    bh,0x59
  4140ec:	jmp    FWORD PTR [edx+0x1b9700e8]
  4140f2:	sub    eax,0x10a16340
  4140f7:	sbb    BYTE PTR [ebx],ch
  4140f9:	push   ss
  4140fa:	(bad)  
  4140fb:	js     0x4140cd
  4140fd:	adc    dl,BYTE PTR ds:0x3d4e77d8
  414103:	sbb    esi,ebx
  414105:	mov    ecx,0xbafbba3e
  41410a:	outs   dx,DWORD PTR ds:[esi]
  41410b:	pushf  
  41410c:	loop   0x41411a
  41410e:	out    0xb6,eax
  414110:	sbb    ecx,DWORD PTR [edi]
  414112:	push   esp
  414113:	mov    eax,?
  414115:	jge    0x414195
  414117:	mov    eax,ds:0xb8f2c4da
  41411c:	imul   edx,DWORD PTR [ebp+0x5c],0xfffffff5
  414120:	nop
  414121:	pop    ss
  414122:	(bad)  
  414123:	cld    
  414124:	test   al,0x7f
  414126:	dec    edi
  414127:	or     dl,BYTE PTR [edx]
  414129:	mov    esi,DWORD PTR [ebx]
  41412b:	mov    dl,0xbd
  41412d:	call   0x43d915f6
  414132:	rcl    DWORD PTR [edi+0x6e8b26f5],cl
  414138:	popa   
  414139:	pop    ss
  41413a:	jb     0x414177
  41413c:	out    0x97,eax
  41413e:	push   eax
  41413f:	(bad)  [edx+0x36d659f4]
  414145:	out    0xd6,al
  414147:	bound  esp,QWORD PTR [ebp+0xcd2c6f2]
  41414d:	neg    DWORD PTR [eax]
  41414f:	sub    al,0xad
  414151:	add    eax,0x958a0d1e
  414156:	mov    ds:0x58a0887a,al
  41415b:	das    
  41415c:	lods   eax,DWORD PTR ds:[esi]
  41415d:	cmp    eax,0x3a6717da
  414162:	rol    DWORD PTR ds:0x3a0d30a1,1
  414168:	lods   al,BYTE PTR ds:[esi]
  414169:	call   0xef35fa5f
  41416e:	mov    fs,WORD PTR [esi-0x6e895479]
  414174:	callw  0xdb9d
  414178:	xchg   esp,eax
  414179:	in     al,dx
  41417a:	ror    DWORD PTR [ecx+0x747af40e],0x13
  414181:	ins    BYTE PTR es:[edi],dx
  414182:	out    dx,eax
  414183:	mov    ch,0x8b
  414185:	(bad)  
  414186:	xchg   ecx,eax
  414187:	cdq    
  414188:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414189:	jno    0x4141f8
  41418b:	pop    ebx
  41418c:	jo     0x41420b
  41418e:	add    DWORD PTR [edi-0x504143f5],0xd920beff
  414198:	test   al,0x65
  41419a:	push   esp
  41419b:	dec    ebp
  41419c:	mov    bl,0x1c
  41419e:	add    al,0x8e
  4141a0:	popf   
  4141a1:	(bad)  
  4141a2:	mov    cl,0xed
  4141a4:	test   bl,dh
  4141a6:	mov    DWORD PTR [ebp-0x4da1a279],edi
  4141ac:	scas   eax,DWORD PTR es:[edi]
  4141ad:	pop    ss
  4141ae:	mov    dh,BYTE PTR [esi]
  4141b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4141b1:	adc    eax,0x8184a696
  4141b6:	push   edi
  4141b7:	out    0xfc,eax
  4141b9:	add    esi,DWORD PTR [esi-0x2f8f09df]
  4141bf:	sub    BYTE PTR [esi+0x398789bc],cl
  4141c5:	dec    eax
  4141c6:	arpl   WORD PTR [edx+0x376981aa],bx
  4141cc:	pushf  
  4141cd:	leave  
  4141ce:	push   0x40
  4141d0:	std    
  4141d1:	xor    eax,0x87cfe984
  4141d6:	in     al,dx
  4141d7:	in     al,0xf3
  4141d9:	pop    es
  4141da:	dec    eax
  4141db:	mov    ds:0x868e3765,al
  4141e0:	test   al,0xca
  4141e2:	(bad)  
  4141e3:	and    ch,dl
  4141e5:	pop    es
  4141e6:	mov    bl,0xd8
  4141e8:	sbb    BYTE PTR es:[edi+0x48539ddf],bh
  4141ef:	rcr    DWORD PTR [ebx-0x12],1
  4141f2:	sbb    eax,DWORD PTR [ebx]
  4141f4:	arpl   cx,cx
  4141f6:	cdq    
  4141f7:	clc    
  4141f8:	ficomp WORD PTR [edi]
  4141fa:	xor    BYTE PTR [edi+0x2dc9ff54],ch
  414200:	ins    DWORD PTR es:[edi],dx
  414201:	jl     0x414241
  414203:	push   esp
  414204:	jns    0x4141ec
  414206:	or     BYTE PTR [edi-0x49121568],dh
  41420c:	xor    bh,BYTE PTR [ebx]
  41420e:	or     ebx,DWORD PTR [ebp+0x55390766]
  414214:	js     0x414212
  414216:	(bad)  
  414217:	popf   
  414218:	ds (bad) 
  41421a:	pop    ebx
  41421b:	hlt    
  41421c:	gs loopne 0x414213
  41421f:	xor    eax,0xceb8a1c0
  414224:	pop    edi
  414225:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414226:	int    0x68
  414228:	add    al,0x5d
  41422a:	mov    esp,0x46491fd9
  41422f:	imul   ebx,edi,0x93ab7cd6
  414235:	mov    dh,0x6f
  414237:	mov    dh,0x84
  414239:	and    al,0x98
  41423b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41423c:	test   BYTE PTR [edi+0x639c392e],bh
  414242:	xlat   BYTE PTR ds:[ebx]
  414243:	gs rol al,1
  414246:	add    edx,DWORD PTR [edx-0x6e03f3e8]
  41424c:	jne    0x41425b
  41424e:	fld    TBYTE PTR [ecx+0x14]
  414251:	jge    0x414244
  414253:	jns    0x41424f
  414255:	sbb    edi,0xffffff84
  414258:	add    DWORD PTR [ebp-0x1a],ebp
  41425b:	test   eax,0xff71e359
  414260:	in     eax,0xa7
  414262:	mov    ah,0x49
  414264:	adc    BYTE PTR [ebp+0x3be930f4],0x3e
  41426b:	mov    ch,0xbe
  41426d:	mov    bh,0x54
  41426f:	jne    0x41429c
  414271:	out    0x47,al
  414273:	pop    edi
  414274:	fwait
  414275:	loope  0x41429b
  414277:	push   ecx
  414278:	div    BYTE PTR [ecx]
  41427a:	jne    0x4142d0
  41427c:	dec    esi
  41427d:	stc    
  41427e:	mov    edx,0xdef5c4ac
  414283:	cmp    al,0x8a
  414285:	xor    DWORD PTR ds:0x14703da8,eax
  41428b:	out    dx,al
  41428c:	pop    edx
  41428d:	xchg   ebx,eax
  41428e:	popa   
  41428f:	int    0x4c
  414291:	inc    ebx
  414292:	or     eax,ebp
  414294:	mov    bl,0xa3
  414296:	js     0x4142d0
  414298:	cli    
  414299:	or     eax,0x8f917559
  41429e:	jle    0x41431e
  4142a0:	xchg   ebp,eax
  4142a1:	das    
  4142a2:	mov    dl,0xb0
  4142a4:	scas   al,BYTE PTR es:[edi]
  4142a5:	push   es
  4142a6:	sahf   
  4142a7:	mov    fs,WORD PTR [edi+0x69]
  4142aa:	int    0xfa
  4142ac:	scas   al,BYTE PTR es:[edi]
  4142ad:	fnstenv [ecx+0x11e4a1df]
  4142b3:	jno    0x4142d3
  4142b5:	adc    dl,BYTE PTR [ebx+0x2c75492b]
  4142bb:	add    BYTE PTR [ecx+0x329b4762],ah
  4142c1:	pop    eax
  4142c2:	ins    BYTE PTR es:[edi],dx
  4142c3:	pop    edx
  4142c4:	sahf   
  4142c5:	aas    
  4142c6:	push   ebp
  4142c7:	mov    cs,WORD PTR [edi+0x5ffd0825]
  4142cd:	setbe  BYTE PTR [esi]
  4142d0:	add    eax,DWORD PTR [esi-0x5f651355]
  4142d6:	jno    0x414291
  4142d8:	test   DWORD PTR [ebp-0x7f49987a],edi
  4142de:	nop
  4142df:	fnstcw WORD PTR [ebp-0x68]
  4142e2:	call   0xba2c8b05
  4142e7:	fisubr WORD PTR [eax-0x7b87ac0a]
  4142ed:	jmp    0xd48b8229
  4142f2:	or     eax,0x88b0c14c
  4142f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142f8:	xchg   ecx,eax
  4142f9:	mov    edx,0xb52849f4
  4142fe:	and    DWORD PTR [esp+eax*1-0x3dd74756],0x20
  414306:	or     ch,BYTE PTR [edx+esi*2]
  414309:	mov    BYTE PTR [ebx-0x1f026378],bl
  41430f:	mov    esp,0x4ecdae4d
  414314:	pop    ecx
  414315:	nop
  414316:	js     0x414365
  414318:	imul   DWORD PTR ss:[ebp+0x63]
  41431c:	imul   eax,ecx,0x7
  41431f:	inc    eax
  414320:	and    edx,DWORD PTR [ebx]
  414322:	popf   
  414323:	mov    BYTE PTR [esi-0x9c046bc],dh
  414329:	pop    ss
  41432a:	xchg   ebx,eax
  41432b:	retf   
  41432c:	out    0x5d,al
  41432e:	push   eax
  41432f:	push   ebx
  414330:	adc    BYTE PTR [ebx+0x61],0xe1
  414334:	enter  0xfdbb,0x6b
  414338:	push   ecx
  414339:	pop    ds
  41433a:	ds loopne 0x414380
  41433d:	nop
  41433e:	jne    0x41433e
  414340:	not    DWORD PTR [edx+0x79]
  414343:	enter  0xcbad,0xe
  414347:	rcl    BYTE PTR [eax],cl
  414349:	ret    
  41434a:	(bad)  
  41434b:	cdq    
  41434c:	dec    esi
  41434d:	inc    eax
  41434e:	mov    ds:0xb683725a,eax
  414353:	(bad)
  414357:	inc    edx
  414358:	ror    esi,cl
  41435a:	loop   0x4143d9
  41435c:	inc    esp
  41435d:	data16 and al,0x96
  414360:	jmp    0x414399
  414362:	xor    dl,BYTE PTR [ebx-0x23]
  414365:	jne    0x41437c
  414367:	ret    
  414368:	push   cs
  414369:	cwde   
  41436a:	(bad)  
  41436b:	shl    DWORD PTR [edi-0x1ed06826],cl
  414371:	test   DWORD PTR [ecx+0x15],eax
  414374:	call   0xdab44a0b
  414379:	aam    0xfe
  41437b:	cmp    al,0x28
  41437d:	fstp   QWORD PTR [edi]
  41437f:	rcl    BYTE PTR [ebp-0x4c],0x6
  414383:	lds    edx,FWORD PTR [ecx]
  414385:	fcom   QWORD PTR [esi-0x2bbfd3d7]
  41438b:	fmul   DWORD PTR [eax+ebx*4]
  41438e:	cmc    
  41438f:	retf   0x1a08
  414392:	dec    esi
  414393:	adc    edx,ebp
  414395:	daa    
  414396:	sti    
  414397:	sti    
  414398:	xor    dh,BYTE PTR [eax+ecx*1]
  41439b:	(bad)  
  41439c:	adc    al,0x5f
  41439e:	cmp    ecx,eax
  4143a0:	fwait
  4143a1:	push   ebx
  4143a2:	aam    0x8f
  4143a4:	int3   
  4143a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143a6:	adc    eax,0x4c17391e
  4143ab:	daa    
  4143ac:	shr    DWORD PTR [esi],1
  4143ae:	dec    ebp
  4143af:	inc    ebx
  4143b0:	addr16 fwait
  4143b2:	jmp    0x4143c9
  4143b4:	outs   dx,DWORD PTR ds:[esi]
  4143b5:	data16 shl bh,1
  4143b8:	xchg   DWORD PTR [ebx-0x33ff523d],esp
  4143be:	mov    bl,al
  4143c0:	inc    ebx
  4143c1:	xchg   DWORD PTR [edi],eax
  4143c3:	jns    0x414383
  4143c5:	adc    dl,bl
  4143c7:	or     eax,0x912b19ef
  4143cc:	pusha  
  4143cd:	add    eax,0xe12695aa
  4143d2:	into   
  4143d3:	push   0x8e43b9f1
  4143d8:	retf   
  4143d9:	mov    ebp,0x257cfa21
  4143de:	inc    esi
  4143df:	xchg   edx,eax
  4143e0:	(bad)  
  4143e1:	shl    BYTE PTR [esi+eiz*4],1
  4143e4:	nop
  4143e5:	fs popf 
  4143e7:	push   eax
  4143e8:	inc    ebp
  4143e9:	inc    ebx
  4143ea:	cmc    
  4143eb:	pop    edi
  4143ec:	add    bh,BYTE PTR [edi]
  4143ee:	(bad)  
  4143ef:	jle    0x4143fd
  4143f1:	xchg   BYTE PTR [edx],bh
  4143f3:	mul    DWORD PTR [ecx]
  4143f5:	loopne 0x414441
  4143f7:	xchg   DWORD PTR [ebx],esp
  4143f9:	mov    eax,0x2755f238
  4143fe:	sbb    eax,0xb41c0bda
  414403:	jecxz  0x414412
  414405:	in     eax,0x5f
  414407:	cmp    BYTE PTR [esi+ebx*8+0x5ac7f55d],bl
  41440e:	inc    ecx
  41440f:	jnp    0x4143fc
  414411:	sbb    ebx,0x23
  414414:	jge    0x4143b6
  414416:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414417:	ss je  0x41443f
  41441a:	or     BYTE PTR [eax-0xf],dh
  41441d:	jae    0x4143e4
  41441f:	(bad)  [ebp-0x46]
  414422:	jmp    0x4143db
  414424:	bound  edx,QWORD PTR [edx+0x4a]
  414427:	iret   
  414428:	repz inc edx
  41442a:	mov    bh,0xfc
  41442c:	mov    cl,0x1e
  41442e:	bound  edi,QWORD PTR [edi-0x43c405bb]
  414434:	sbb    DWORD PTR [ebx-0x645e10f7],esi
  41443a:	test   DWORD PTR [esi+0x52faeb7c],edx
  414440:	cli    
  414441:	pusha  
  414442:	mov    DWORD PTR [ecx],edi
  414444:	xor    edx,DWORD PTR [edx]
  414446:	lds    esi,FWORD PTR [edx+0x433623a6]
  41444c:	push   0xba4aa74a
  414451:	ret    
  414452:	xchg   BYTE PTR [ebx],ch
  414454:	(bad)  
  414455:	mov    WORD PTR [ebx],ss
  414457:	and    eax,0x307315fb
  41445c:	dec    esi
  41445d:	sbb    bh,ch
  41445f:	dec    edx
  414460:	arpl   WORD PTR [ebp-0x658a813a],di
  414466:	nop
  414467:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414468:	jne    0x41440b
  41446a:	xlat   BYTE PTR ds:[ebx]
  41446b:	cs imul edx,edx,0x64a188b7
  414472:	fs push 0xc3bc6b91
  414478:	push   esi
  414479:	sbb    DWORD PTR [edi],esp
  41447b:	je     0x414482
  41447d:	jo     0x414471
  41447f:	(bad)  
  414480:	jb     0x414497
  414482:	xchg   edi,eax
  414483:	and    DWORD PTR [ecx-0x63e9e054],0x72
  41448a:	lds    edi,FWORD PTR [esi+eiz*2]
  41448d:	mov    ebp,0x94edb139
  414492:	adc    ebp,ebx
  414494:	push   edi
  414495:	stc    
  414496:	jge    0x414509
  414498:	repnz das 
  41449a:	inc    ecx
  41449b:	int3   
  41449c:	jmp    0xfcdd6b8c
  4144a1:	enter  0xbb57,0x5e
  4144a5:	ja     0x4144f8
  4144a7:	dec    edi
  4144a8:	sar    BYTE PTR [esi-0xb597766],1
  4144ae:	scas   al,BYTE PTR es:[edi]
  4144af:	push   ss
  4144b0:	addr16 sbb esp,edx
  4144b3:	test   al,0xb1
  4144b5:	add    eax,DWORD PTR [eax+edx*8]
  4144b8:	jmp    0x41443f
  4144ba:	pushf  
  4144bb:	shr    esp,0x5f
  4144be:	adc    eax,0xe83bd83a
  4144c3:	cmp    eax,0x2d09fb31
  4144c8:	aaa    
  4144c9:	xor    ebp,DWORD PTR [ebx+0x11]
  4144cc:	fisubr WORD PTR [esi]
  4144ce:	rol    BYTE PTR [esi],0x6e
  4144d1:	inc    ebx
  4144d2:	sub    DWORD PTR [edx-0x62],0xc117394e
  4144d9:	pop    ebp
  4144da:	cs in  eax,dx
  4144dc:	mov    dl,BYTE PTR ds:0x6571f1f3
  4144e2:	outs   dx,DWORD PTR ds:[esi]
  4144e3:	lock xor al,0x51
  4144e6:	sub    al,0x5c
  4144e8:	add    DWORD PTR [ecx-0x62],ebp
  4144eb:	je     0x414516
  4144ed:	xor    eax,0x1a35f6c
  4144f2:	fs mov al,0xe1
  4144f5:	inc    edi
  4144f6:	jno    0x414490
  4144f8:	sub    ah,BYTE PTR [eax-0x5d9308d9]
  4144fe:	mov    ds,esp
  414500:	xor    DWORD PTR [ebp+0x34a31338],0xffffffa3
  414507:	mov    cl,0xa4
  414509:	mov    bl,0xf3
  41450b:	fs adc esp,esp
  41450e:	in     eax,0x15
  414510:	gs pop edi
  414512:	fbld   TBYTE PTR [eax+edx*8+0x0]
  414516:	(bad)  
  414517:	jmp    0x4d588379
  41451c:	lock mov esp,DWORD PTR [ecx]
  41451f:	dec    edi
  414520:	push   ds
  414521:	jb     0x414565
  414523:	dec    eax
  414524:	retf   
  414525:	pop    ds
  414526:	xchg   ebx,eax
  414527:	call   0xf456:0x1604ad0d
  41452e:	jno    0x41450e
  414530:	inc    ecx
  414531:	dec    ecx
  414532:	sti    
  414533:	xchg   esi,eax
  414534:	adc    BYTE PTR [ecx],ch
  414536:	mov    cl,0x2
  414538:	sbb    eax,0x9fe7b4e7
  41453d:	mov    al,0x8b
  41453f:	sbb    esp,DWORD PTR [ebx]
  414541:	mov    al,0xa
  414543:	or     esp,DWORD PTR [edx+0x6b]
  414546:	mov    al,ds:0xba957e4b
  41454b:	(bad)
  41454f:	push   ebp
  414550:	rcr    DWORD PTR [ecx+0x5b7822a7],1
  414556:	inc    edx
  414557:	loopne 0x414548
  414559:	xor    eax,0x28ea660
  41455e:	pop    edi
  41455f:	dec    esi
  414560:	iret   
  414561:	dec    edx
  414562:	mov    cl,0x56
  414564:	pop    edi
  414565:	shl    DWORD PTR [ecx+0x0],1
  414568:	push   eax
  414569:	inc    edi
  41456a:	push   0xfffffffb
  41456c:	jns    0x414583
  41456e:	push   0xd04b82f3
  414573:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414574:	fwait
  414575:	cli    
  414576:	shl    DWORD PTR [esi],cl
  414578:	retf   0x5e37
  41457b:	sar    esi,cl
  41457d:	out    dx,eax
  41457e:	and    al,0x86
  414580:	mov    ch,0xf9
  414582:	loop   0x41454f
  414584:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414585:	scas   al,BYTE PTR es:[edi]
  414586:	mov    ecx,0xc974cddc
  41458b:	das    
  41458c:	loop   0x4145ce
  41458e:	sub    eax,0xc642836d
  414593:	jl     0x4145dd
  414595:	mov    DWORD PTR [edx-0x5d],ebx
  414598:	push   eax
  414599:	pop    ebp
  41459a:	mov    edx,0x7adcf784
  41459f:	push   edi
  4145a0:	in     al,0x5
  4145a2:	gs inc ebx
  4145a4:	mov    esp,0x9579b990
  4145a9:	xchg   edx,esi
  4145ab:	shr    BYTE PTR [ecx],cl
  4145ad:	out    0x47,al
  4145af:	dec    edi
  4145b0:	das    
  4145b1:	inc    edx
  4145b2:	rcr    BYTE PTR [edi+0x59efb199],1
  4145b8:	out    dx,eax
  4145b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145ba:	ret    
  4145bb:	test   eax,0xeb93e41f
  4145c0:	mov    dl,0x7e
  4145c2:	fmulp  st(2),st
  4145c4:	fstp   TBYTE PTR [ecx+0x51]
  4145c7:	(bad)  
  4145c8:	cld    
  4145c9:	mov    ds:0x7d4ed0cc,eax
  4145ce:	mov    ds:0xf2c5f15b,eax
  4145d3:	dec    eax
  4145d4:	popf   
  4145d5:	mov    edi,0x36a24133
  4145da:	pop    esi
  4145db:	pop    es
  4145dc:	mov    eax,0x6f72205d
  4145e2:	xlat   BYTE PTR ds:[ebx]
  4145e3:	dec    ecx
  4145e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145e5:	or     ebp,DWORD PTR [esi-0x3d]
  4145e8:	mov    edx,0xcb6ea7ba
  4145ed:	jg     0x4145be
  4145ef:	xchg   eax,ebx
  4145f1:	data16 icebp 
  4145f3:	pop    es
  4145f4:	mov    ds:0x2badcb8e,eax
  4145f9:	aad    0xeb
  4145fb:	jmp    0x6760:0x96b5e484
  414602:	inc    edx
  414603:	xchg   edx,eax
  414604:	retf   
  414605:	dec    dh
  414607:	pop    es
  414608:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414609:	inc    esp
  41460a:	and    ecx,DWORD PTR [eax]
  41460c:	and    eax,0x7b2dad5b
  414611:	shl    esi,cl
  414613:	push   edi
  414614:	fisub  DWORD PTR [edx+0x63]
  414617:	sub    BYTE PTR [ebx],dl
  414619:	retf   
  41461a:	repnz (bad) 
  41461c:	out    dx,eax
  41461d:	inc    ebp
  41461e:	sub    DWORD PTR ds:0x20552500,esp
  414624:	ja     0x41466b
  414626:	pop    eax
  414627:	not    ebx
  414629:	(bad)  [eax+0x5]
  41462c:	outs   dx,DWORD PTR fs:[esi]
  41462e:	dec    eax
  41462f:	inc    ebx
  414630:	xor    bh,ah
  414632:	jmp    0x414609
  414634:	lds    ecx,FWORD PTR [ecx]
  414636:	call   0xd88a0ca7
  41463b:	sti    
  41463c:	push   ds
  41463d:	cmp    eax,0x6409e8c2
  414642:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414643:	add    al,0x21
  414645:	xchg   ebx,eax
  414646:	std    
  414647:	das    
  414648:	shr    DWORD PTR [ebp-0x73],0x52
  41464c:	jmp    0xe7d2:0x8b099b5a
  414653:	mov    bl,0xb2
  414655:	xor    al,0x53
  414657:	repnz mov eax,ds:0x49c45880
  41465d:	into   
  41465e:	sbb    ecx,esi
  414660:	jb     0x414617
  414662:	fistp  QWORD PTR fs:[edi+0x22]
  414666:	aad    0xae
  414668:	mov    ah,0x3f
  41466a:	mov    edi,0x1b31fd5e
  41466f:	out    dx,al
  414670:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414671:	gs push cs
  414673:	popa   
  414674:	xor    al,0xe6
  414676:	cmp    BYTE PTR [ebx-0x65eb62f7],cl
  41467c:	mov    eax,0x666a21a0
  414681:	enter  0xec0e,0x7c
  414685:	pop    ebp
  414686:	inc    eax
  414687:	jp     0x41469c
  414689:	push   0x8233fe60
  41468e:	inc    edx
  41468f:	arpl   WORD PTR [esp+eiz*8],dx
  414692:	sub    BYTE PTR [esi-0x46ec92d3],ch
  414698:	pop    eax
  414699:	cdq    
  41469a:	ret    
  41469b:	push   ecx
  41469c:	cmp    eax,0x8d249413
  4146a1:	push   0x878a003
  4146a6:	or     DWORD PTR [edi],0xffffffe7
  4146a9:	fstp   TBYTE PTR [ecx-0x19]
  4146ad:	pop    edx
  4146ae:	cdq    
  4146af:	das    
  4146b0:	ss push ds
  4146b2:	ins    BYTE PTR es:[edi],dx
  4146b3:	stos   BYTE PTR es:[edi],al
  4146b4:	lods   eax,DWORD PTR ds:[esi]
  4146b5:	(bad)  
  4146b6:	(bad)  
  4146b7:	scas   eax,DWORD PTR es:[edi]
  4146b8:	je     0x4146d7
  4146ba:	imul   edx,DWORD PTR [edx],0xffffffd1
  4146bd:	fidiv  WORD PTR [eax+ebp*8-0x1c24800]
  4146c4:	sbb    al,0xfc
  4146c6:	jb     0x4146d5
  4146c8:	inc    esp
  4146c9:	xor    eax,0xb8db313a
  4146ce:	mov    ebp,0x4d305522
  4146d3:	outs   dx,DWORD PTR ds:[esi]
  4146d4:	push   0x5b4e97c4
  4146d9:	xor    eax,0xedcac301
  4146de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146df:	shl    DWORD PTR [ebx+0x30],cl
  4146e2:	mov    ch,0xe5
  4146e4:	sub    eax,0x91243513
  4146e9:	call   0xc303:0x2b1b9a7b
  4146f0:	xor    esi,esp
  4146f2:	xchg   ebx,eax
  4146f3:	push   eax
  4146f4:	cli    
  4146f5:	inc    edx
  4146f6:	ret    0xb933
  4146f9:	clc    
  4146fa:	js     0x414694
  4146fc:	mul    DWORD PTR [esi]
  4146fe:	aaa    
  4146ff:	seta   BYTE PTR [eax-0x7750433b]
  414706:	jp     0x41473e
  414708:	push   cs
  414709:	sub    BYTE PTR [edx],0xfb
  41470c:	ror    BYTE PTR [eax],1
  41470e:	in     al,0x98
  414710:	pushf  
  414711:	das    
  414712:	mov    bh,0x67
  414714:	rol    BYTE PTR [edx],0xbe
  414717:	sub    BYTE PTR [ebx+esi*1-0x35],ch
  41471b:	repz cld 
  41471d:	imul   eax,esp,0xf107fd63
  414723:	stos   BYTE PTR es:[edi],al
  414724:	mov    eax,0xf72c31d9
  414729:	mov    cl,0xe1
  41472b:	in     eax,dx
  41472c:	xor    eax,0xcb1d285a
  414731:	mov    ecx,0x521d0d7b
  414736:	lods   eax,DWORD PTR ds:[esi]
  414737:	sbb    edx,DWORD PTR [eax]
  414739:	ins    BYTE PTR es:[edi],dx
  41473a:	jns    0x4146cd
  41473c:	pop    es
  41473d:	jbe    0x4147aa
  41473f:	pusha  
  414740:	test   eax,0x52b4cf78
  414745:	repnz sbb cl,BYTE PTR [ecx]
  414748:	mov    eax,0x464ad8e
  41474d:	gs or  eax,0x1803ed07
  414753:	fcmovnbe st,st(1)
  414755:	fs mov ecx,0xfc196f2a
  41475b:	adc    DWORD PTR [eax-0x46],esi
  41475e:	ins    BYTE PTR es:[edi],dx
  41475f:	or     bh,BYTE PTR [eax+ebx*2+0x3b36745e]
  414766:	call   0x2ce1b845
  41476b:	cs test eax,0x13411ec6
  414771:	ret    
  414772:	loopne 0x41475f
  414774:	cmp    ah,BYTE PTR [ebp+0x11]
  414777:	cld    
  414778:	xor    eax,0x7f4009c8
  41477d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41477e:	pusha  
  41477f:	dec    esi
  414780:	xchg   BYTE PTR [ebx-0x75fc027a],dh
  414786:	push   es
  414787:	inc    esp
  414788:	inc    eax
  414789:	mov    ds:0x50d5f632,eax
  41478e:	sbb    eax,0xcc9ab69d
  414793:	stos   DWORD PTR es:[edi],eax
  414794:	push   eax
  414795:	dec    ecx
  414796:	push   ecx
  414797:	leave  
  414798:	fwait
  414799:	inc    esp
  41479a:	mov    dh,0x83
  41479c:	xchg   edi,eax
  41479d:	ss ins BYTE PTR es:[edi],dx
  41479f:	sbb    BYTE PTR [eax+0x6d],ah
  4147a2:	mov    ds:0x1ba2fdde,al
  4147a7:	icebp  
  4147a8:	jmp    0xd390f2fe
  4147ad:	mov    ch,BYTE PTR [eax]
  4147af:	enter  0x1402,0xff
  4147b3:	sub    ebx,DWORD PTR [ebx+0x6752b3e2]
  4147b9:	bound  esp,QWORD PTR [edi+esi*4+0x76]
  4147bd:	scas   eax,DWORD PTR es:[edi]
  4147be:	int    0xbc
  4147c0:	cmp    al,0xda
  4147c2:	adc    BYTE PTR ds:0xbd96c06d,0x99
  4147c9:	cmc    
  4147ca:	push   cs
  4147cb:	fild   DWORD PTR [ebx+ebx*1]
  4147ce:	or     eax,0x50156ea9
  4147d3:	mov    ah,0x51
  4147d5:	push   ss
  4147d6:	fs cs adc al,0x26
  4147da:	shr    edi,0x44
  4147dd:	(bad)  
  4147de:	pop    ss
  4147df:	lds    esp,FWORD PTR [ebx]
  4147e1:	cdq    
  4147e2:	pop    esp
  4147e3:	push   edi
  4147e4:	dec    ebx
  4147e5:	rcr    DWORD PTR [ebp+0x1893513c],1
  4147eb:	test   eax,0x9397f1f1
  4147f0:	cs enter 0x14ff,0x54
  4147f5:	iret   
  4147f6:	jecxz  0x41480f
  4147f8:	mov    ch,0xe2
  4147fa:	xor    bh,BYTE PTR ds:0x3f9a1a5d
  414800:	cmp    bl,BYTE PTR [esi]
  414802:	xchg   DWORD PTR [ebx+0x12020cb0],esp
  414808:	or     eax,DWORD PTR [eax+0x60c3e4cc]
  41480e:	icebp  
  41480f:	scas   eax,DWORD PTR es:[edi]
  414810:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414811:	push   ebx
  414812:	jne    0x4147d9
  414814:	push   ecx
  414815:	scas   al,BYTE PTR es:[edi]
  414816:	push   ds
  414817:	jae    0x4147af
  414819:	and    bx,cx
  41481c:	jns    0x4147d2
  41481e:	ja     0x4147ac
  414820:	call   0xfe5b:0xd06bdb09
  414827:	call   FWORD PTR [eax]
  414829:	mov    ebx,0x5fe76721
  41482e:	sub    ebp,DWORD PTR [edi+0x6d]
  414831:	add    ebx,DWORD PTR [edi+0x30]
  414834:	push   0xffffff84
  414836:	adc    BYTE PTR [edi+0x60],dh
  414839:	xor    esi,DWORD PTR [edx-0x4a]
  41483c:	(bad)  
  41483d:	(bad)  
  41483e:	jae    0x4148ba
  414840:	or     al,0x21
  414842:	add    al,0xe0
  414844:	fcom   st(4)
  414846:	fimul  WORD PTR [esi]
  414848:	int    0x1e
  41484a:	or     al,0x47
  41484c:	or     eax,0x46cda631
  414851:	xchg   ecx,eax
  414852:	pusha  
  414853:	cdq    
  414854:	pop    ebx
  414855:	inc    eax
  414856:	addr16 cld 
  414858:	aam    0xeb
  41485a:	mov    dh,0xb2
  41485c:	scas   eax,DWORD PTR es:[edi]
  41485d:	je     0x41482a
  41485f:	mov    dl,0x66
  414861:	push   ebx
  414862:	sub    eax,0x245f4e
  414867:	out    dx,eax
  414868:	adc    esi,DWORD PTR [ebp+0x19]
  41486b:	push   cs
  41486c:	shl    BYTE PTR [edx+eiz*1-0x63ba40a8],1
  414873:	sbb    eax,0x29199fc5
  414878:	ret    
  414879:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41487a:	dec    ebx
  41487b:	bound  edi,QWORD PTR [eax-0x18]
  41487e:	aas    
  41487f:	pop    es
  414880:	sub    DWORD PTR [ebp-0xc192091],eax
  414886:	xor    esi,ebp
  414888:	aaa    
  414889:	out    0x26,al
  41488b:	push   es
  41488c:	cmp    esp,DWORD PTR [ecx-0x32]
  41488f:	xchg   edi,eax
  414890:	(bad)  
  414891:	push   esp
  414892:	jg     0x414818
  414894:	jbe    0x414835
  414896:	retf   0xe8a6
  414899:	scas   al,BYTE PTR es:[edi]
  41489a:	in     eax,dx
  41489b:	mov    bl,0x6f
  41489d:	pop    eax
  41489e:	popf   
  41489f:	dec    eax
  4148a0:	sahf   
  4148a1:	sub    edi,DWORD PTR [edi+0x5f]
  4148a4:	adc    BYTE PTR [edx-0x5aeefee7],ah
  4148aa:	adc    al,0xbd
  4148ac:	(bad)  
  4148ad:	scas   al,BYTE PTR es:[edi]
  4148ae:	sbb    ah,0xd7
  4148b1:	call   0x44ca:0x7d2d34cf
  4148b8:	(bad)  
  4148b9:	test   al,0x4
  4148bb:	mov    ebp,DWORD PTR [edi+0x2f]
  4148be:	xor    BYTE PTR [edx-0x1470f3d0],al
  4148c4:	test   BYTE PTR [ebx-0x53df13e6],cl
  4148ca:	(bad)  
  4148cb:	jb     0x41491e
  4148cd:	pop    ss
  4148ce:	xor    bl,BYTE PTR [esi+0x27]
  4148d1:	icebp  
  4148d2:	inc    esi
  4148d3:	pop    es
  4148d4:	pushf  
  4148d5:	dec    edi
  4148d6:	push   eax
  4148d7:	popa   
  4148d8:	dec    ecx
  4148d9:	ins    DWORD PTR es:[edi],dx
  4148da:	lods   eax,DWORD PTR ds:[esi]
  4148db:	xlat   BYTE PTR ds:[ebx]
  4148dc:	cld    
  4148dd:	out    dx,al
  4148de:	inc    edi
  4148df:	fidivr WORD PTR [ecx+0x56]
  4148e2:	pop    ss
  4148e3:	sti    
  4148e4:	aas    
  4148e5:	push   DWORD PTR [ebp+0x71]
  4148e8:	mov    ch,0x89
  4148ea:	adc    ebp,eax
  4148ec:	test   BYTE PTR [esi+0xfe6af24],cl
  4148f2:	jne    0x4148a0
  4148f4:	sahf   
  4148f5:	adc    BYTE PTR [ebx-0x1f],bh
  4148f8:	mov    al,cl
  4148fa:	mov    ecx,0x255b30c1
  4148ff:	add    BYTE PTR [edi+esi*2-0x39],bh
  414903:	ins    BYTE PTR es:[edi],dx
  414904:	leave  
  414905:	data16 mov ds:0x960bb5c7,al
  41490b:	inc    edi
  41490c:	and    ebx,DWORD PTR [eax]
  41490e:	mov    eax,ds:0x254533d6
  414913:	push   esp
  414914:	sub    BYTE PTR [esi-0x1dcc5c62],dl
  41491a:	sub    eax,0xe96138b9
  41491f:	adc    ch,BYTE PTR [edx+0x69c9429c]
  414925:	add    BYTE PTR [ebx+eax*4],ch
  414928:	leave  
  414929:	hlt    
  41492a:	retf   
  41492b:	mov    bh,0x4c
  41492d:	test   al,0xf1
  41492f:	xchg   esi,eax
  414930:	adc    ch,dh
  414932:	pop    es
  414933:	inc    edi
  414934:	(bad)  
  414935:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414936:	rcr    BYTE PTR [edx],cl
  414938:	or     al,0x26
  41493a:	add    BYTE PTR [ebp-0x76392e44],0x59
  414941:	es rol ebp,cl
  414944:	sbb    eax,0xb0fc9cf9
  414949:	std    
  41494a:	repnz outs dx,BYTE PTR ds:[esi]
  41494c:	cmp    DWORD PTR [edx-0x24b0f0ad],edx
  414952:	rcr    edi,cl
  414954:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414955:	ret    
  414956:	mov    WORD PTR [edx+ebx*1],gs
  414959:	sub    DWORD PTR [edx+0x76e57a6],edx
  41495f:	lods   eax,DWORD PTR ds:[esi]
  414960:	mov    ch,0x9a
  414962:	push   ebp
  414963:	sub    eax,0x2d0c3910
  414968:	inc    eax
  414969:	(bad)  
  41496a:	lock mov al,0xbc
  41496d:	rcr    BYTE PTR [edi-0x2b218960],cl
  414973:	push   ecx
  414974:	ins    BYTE PTR es:[edi],dx
  414975:	sbb    BYTE PTR [edx],dh
  414977:	cmc    
  414978:	cmp    al,0xe4
  41497a:	push   ebx
  41497b:	dec    BYTE PTR [ebx+0xcc51b13]
  414981:	xchg   DWORD PTR [esi+ebx*4-0x46a2e57b],ebx
  414988:	mov    edi,0xd4f81ae3
  41498d:	addr16 call 0x58526e0f
  414993:	cmp    edi,ebx
  414995:	cdq    
  414996:	sbb    esp,DWORD PTR [ebp+edx*8+0x53c37d7b]
  41499d:	mov    WORD PTR [ecx+0x13ee95bf],fs
  4149a3:	mov    ebx,0x3862111b
  4149a8:	pop    edi
  4149a9:	push   edx
  4149aa:	sub    dh,BYTE PTR [ebx]
  4149ac:	jmp    0x2968:0xacacbc39
  4149b3:	shl    dh,0x39
  4149b6:	dec    eax
  4149b7:	test   DWORD PTR [ecx+0x4215838e],esp
  4149bd:	mov    bl,0x12
  4149bf:	rcl    BYTE PTR [esi-0x34],cl
  4149c2:	ror    DWORD PTR es:[esi+0x3909c370],cl
  4149c9:	aaa    
  4149ca:	cmc    
  4149cb:	and    bh,bh
  4149cd:	(bad)  
  4149ce:	mov    ebx,0xb139802d
  4149d3:	push   es
  4149d4:	sti    
  4149d5:	pop    ebp
  4149d6:	ror    ebx,1
  4149d8:	push   ebp
  4149d9:	test   DWORD PTR [edx+0x530edb82],ebx
  4149df:	stc    
  4149e0:	pop    ebx
  4149e1:	jl     0x4149e6
  4149e3:	cmp    DWORD PTR [esi],ebx
  4149e5:	repz je 0x414969
  4149e8:	sbb    DWORD PTR [ebx],ebx
  4149ea:	sub    ah,BYTE PTR [ebp-0x2d]
  4149ed:	dec    ebp
  4149ee:	std    
  4149ef:	add    eax,0xa7418146
  4149f4:	enter  0x8c86,0x44
  4149f8:	daa    
  4149f9:	mov    ah,0xa1
  4149fb:	mov    bh,0xb7
  4149fd:	push   ds
  4149fe:	push   ebp
  4149ff:	xor    al,0x22
  414a01:	or     eax,0x39a4feff
  414a06:	adc    al,0xf8
  414a08:	hlt    
  414a09:	or     esi,DWORD PTR [edx]
  414a0b:	imul   ebp,DWORD PTR [ecx-0x2b],0x7c
  414a0f:	sbb    dh,ah
  414a11:	xor    dl,BYTE PTR [edi]
  414a13:	push   eax
  414a14:	outs   dx,DWORD PTR ds:[esi]
  414a15:	pop    ebx
  414a16:	and    DWORD PTR [ebx+0x517eef5d],0x861fbae
  414a20:	push   ss
  414a21:	xchg   BYTE PTR [edx],dh
  414a23:	ss jb  0x4149a7
  414a26:	add    eax,0x51c007c6
  414a2b:	es xor al,dh
  414a2e:	jbe    0x414a8d
  414a30:	xor    edi,DWORD PTR [edx+0x6a2fd61a]
  414a36:	mul    dl
  414a38:	adc    esi,edx
  414a3a:	mov    ch,0xe5
  414a3c:	into   
  414a3d:	xor    esp,0x76ec5c95
  414a43:	adc    eax,DWORD PTR [edi-0x4077c1fb]
  414a49:	adc    al,0x2a
  414a4b:	xchg   edx,eax
  414a4c:	add    cl,BYTE PTR [eax-0x5b459b2c]
  414a52:	clc    
  414a53:	fldlg2 
  414a55:	cli    
  414a56:	cli    
  414a57:	bound  esi,QWORD PTR [edx-0x5d]
  414a5a:	add    eax,DWORD PTR [ebx]
  414a5c:	imul   ebp,DWORD PTR [ebx+0x60821863],0x8b770fc8
  414a66:	fcmovb st,st(6)
  414a68:	hlt    
  414a69:	mov    al,ds:0x408a434e
  414a6e:	cs pop edx
  414a70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a71:	cmp    al,0x59
  414a73:	sub    eax,0x33e4558b
  414a78:	(bad)  
  414a79:	jmp    0x416dee
  414a7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a7f:	xchg   esi,eax
  414a80:	retf   
  414a81:	dec    eax
  414a82:	mov    esp,edi
  414a84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a85:	xchg   esp,eax
  414a86:	dec    ecx
  414a87:	(bad)  
  414a88:	mov    ah,0x80
  414a8a:	repz pop es
  414a8c:	adc    BYTE PTR [edi+ebp*8+0x47],al
  414a90:	popa   
  414a91:	bound  ecx,QWORD PTR [edx]
  414a93:	pop    edi
  414a94:	bound  esp,QWORD PTR [edx+0x14]
  414a97:	fsubp  st(2),st
  414a99:	inc    eax
  414a9a:	cmp    al,0x36
  414a9c:	mov    esi,0xf62d458b
  414aa1:	scas   eax,DWORD PTR es:[edi]
  414aa2:	or     edi,ebp
  414aa4:	mov    ds:0x5e06c170,eax
  414aa9:	mov    ah,0xad
  414aab:	cmp    edx,eax
  414aad:	aad    0xc8
  414aaf:	or     ch,BYTE PTR [ebx+0x89ecae1]
  414ab5:	iret   
  414ab6:	sbb    DWORD PTR [edi+0x45],0xf4309409
  414abd:	cli    
  414abe:	ret    
  414abf:	out    dx,eax
  414ac0:	xchg   esi,eax
  414ac1:	shl    DWORD PTR [ecx+0x2d],cl
  414ac4:	loope  0x414aab
  414ac6:	mov    ebx,0xa5ffab05
  414acc:	pop    ecx
  414acd:	sbb    al,0x2e
  414acf:	pop    ds
  414ad0:	xor    dl,0xed
  414ad3:	jno    0x414a8d
  414ad5:	and    eax,0x278f3ae6
  414ada:	rol    BYTE PTR [eax+0x26],0x3c
  414ade:	xor    al,0xd1
  414ae0:	dec    edx
  414ae1:	push   edx
  414ae2:	inc    ecx
  414ae3:	adc    bh,dl
  414ae5:	xchg   DWORD PTR [ebx-0x48e2822e],ecx
  414aeb:	jne    0x414b4a
  414aed:	cmp    esi,DWORD PTR [eax+0x1b]
  414af0:	mov    dl,0x15
  414af2:	or     cl,0xa1
  414af5:	test   al,0xe3
  414af7:	sar    BYTE PTR ds:0x16281e75,1
  414afd:	jno    0x414b6d
  414aff:	fcom   st(2)
  414b01:	gs add dl,0x6f
  414b05:	or     al,0xe
  414b07:	mov    DWORD PTR [edx+0x2d6cb6a3],ebp
  414b0d:	in     eax,dx
  414b0e:	push   eax
  414b0f:	inc    edx
  414b10:	fldpi  
  414b12:	pop    eax
  414b13:	je     0x414b81
  414b15:	pop    es
  414b16:	inc    edx
  414b17:	pop    esp
  414b18:	repz out dx,al
  414b1a:	cmp    esi,ebp
  414b1c:	pop    es
  414b1d:	mov    ebx,0x794283e4
  414b22:	cmp    DWORD PTR [ebp+0x10],esi
  414b25:	retf   0x9c64
  414b28:	inc    esp
  414b29:	pop    edi
  414b2a:	mov    bl,0xb8
  414b2c:	int3   
  414b2d:	shl    BYTE PTR [edx-0x56],1
  414b30:	es test eax,0xb49b8680
  414b36:	test   BYTE PTR gs:[ebp+ecx*1+0x4c54a630],dl
  414b3e:	stc    
  414b3f:	sub    al,0xf8
  414b41:	mov    eax,ds:0x1d1b2a08
  414b46:	jle    0x414b0d
  414b48:	les    esp,FWORD PTR [esi]
  414b4a:	cmp    ah,bl
  414b4c:	scas   eax,DWORD PTR es:[edi]
  414b4d:	push   ebp
  414b4e:	and    BYTE PTR [eax],bh
  414b50:	arpl   cx,cx
  414b52:	lods   eax,DWORD PTR ds:[esi]
  414b53:	push   ss
  414b54:	adc    BYTE PTR [esp+ebp*2-0x40e11dd0],dl
  414b5b:	test   DWORD PTR [eax],0x3612ab75
  414b61:	fwait
  414b62:	xchg   edi,eax
  414b63:	cwde   
  414b64:	push   ecx
  414b65:	push   ecx
  414b66:	push   esp
  414b67:	and    edi,DWORD PTR [edi+0x11]
  414b6a:	je     0x414afd
  414b6c:	and    al,0x96
  414b6e:	fstp   TBYTE PTR [edx+0x2a0ab737]
  414b74:	sbb    eax,0xc2309db5
  414b79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b7a:	or     BYTE PTR [eax+0x6ba728ac],dl
  414b80:	cmp    edx,edx
  414b82:	push   esi
  414b83:	xchg   esi,eax
  414b84:	cmp    dl,BYTE PTR ds:[ecx+ebx*8-0x14]
  414b89:	mov    ecx,0x292c7539
  414b8e:	mov    bh,0xe1
  414b90:	outs   dx,BYTE PTR ds:[esi]
  414b91:	or     BYTE PTR [esi+0x29],dl
  414b94:	repz cmp ecx,DWORD PTR [edi-0x24]
  414b98:	dec    ecx
  414b99:	or     DWORD PTR [eax-0x7161191b],esp
  414b9f:	call   FWORD PTR [esi+0x4e]
  414ba2:	cmp    al,0xc4
  414ba4:	mov    dl,BYTE PTR [ebx+0x24]
  414ba7:	clc    
  414ba8:	repz mov al,ds:0x5daa80b
  414bae:	call   0x87f2:0xea3f139f
  414bb5:	lock sbb BYTE PTR [esi],0x67
  414bb9:	loope  0x414c2a
  414bbb:	cwde   
  414bbc:	jbe    0x414b4d
  414bbe:	sub    ebp,DWORD PTR [esp+ebx*2+0x301353aa]
  414bc5:	adc    esp,esp
  414bc7:	rol    DWORD PTR [ebx],1
  414bc9:	mov    cl,0x7
  414bcb:	jno    0x414bd9
  414bcd:	in     al,0xfe
  414bcf:	pusha  
  414bd0:	sbb    dh,ah
  414bd2:	mov    edi,0x2f7645b
  414bd7:	test   al,0x59
  414bd9:	test   al,0x90
  414bdb:	sbb    BYTE PTR [ebx-0x88802ef],cl
  414be1:	cmp    bl,BYTE PTR [ebx]
  414be3:	push   ds
  414be4:	pop    eax
  414be5:	inc    esi
  414be6:	hlt    
  414be7:	shl    eax,1
  414be9:	shl    DWORD PTR [edx+0x39],cl
  414bec:	fs and eax,0x2aee150e
  414bf2:	outs   dx,BYTE PTR ds:[esi]
  414bf3:	imul   edi,eax,0x717c7c91
  414bf9:	push   0xffffff9f
  414bfb:	lahf   
  414bfc:	stos   BYTE PTR es:[edi],al
  414bfd:	out    dx,al
  414bfe:	cmp    cl,BYTE PTR [eax]
  414c00:	std    
  414c01:	rol    BYTE PTR [esi+0x5e],cl
  414c04:	aas    
  414c05:	xchg   BYTE PTR [edi-0x21af22d3],cl
  414c0b:	lahf   
  414c0c:	xchg   ebx,eax
  414c0d:	pop    ecx
  414c0e:	pop    edx
  414c0f:	jp     0x414c0e
  414c11:	ja     0x414c2d
  414c13:	sbb    DWORD PTR [eax+0x3368c786],ebx
  414c19:	jnp    0x414c86
  414c1b:	xor    al,0x1d
  414c1d:	mov    cs,WORD PTR [eax+0x56]
  414c20:	iret   
  414c21:	and    eax,0xa7af9079
  414c26:	rcr    BYTE PTR [esp+edi*8],1
  414c29:	jnp    0x414c99
  414c2b:	fwait
  414c2c:	xchg   ebx,eax
  414c2d:	cli    
  414c2e:	cmp    dl,bl
  414c30:	mov    dl,0xfc
  414c32:	cmp    esp,esp
  414c34:	(bad)  
  414c35:	pop    ebx
  414c36:	nop
  414c37:	rol    BYTE PTR [edx+ebp*4+0xc],0x3b
  414c3c:	push   esi
  414c3d:	out    0x96,al
  414c3f:	lods   al,BYTE PTR ds:[esi]
  414c40:	test   al,0x17
  414c42:	mov    ds:0xcc3b3096,eax
  414c47:	or     ch,BYTE PTR [ebx-0x15]
  414c4a:	(bad)  
  414c4b:	mov    ebx,0xdbfac67e
  414c50:	mov    eax,0xf07cf84e
  414c55:	(bad)  
  414c56:	loopne 0x414c65
  414c58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c59:	aas    
  414c5a:	jp     0x414c36
  414c5c:	ss xchg edi,eax
  414c5e:	leave  
  414c5f:	imul   esi,eax,0x52
  414c62:	fadd   st,st(0)
  414c64:	or     al,0x97
  414c66:	push   edx
  414c67:	aam    0xbe
  414c69:	jmp    DWORD PTR [eax-0xee0444]
  414c6f:	xchg   edi,eax
  414c70:	mov    edi,0x346cc32d
  414c75:	adc    eax,DWORD PTR [ebx]
  414c77:	push   cs
  414c78:	shl    DWORD PTR ds:0x5e882c9,1
  414c7e:	fmul   st,st(1)
  414c80:	ret    0x94a4
  414c83:	jl     0x414cef
  414c85:	fidiv  DWORD PTR [edi]
  414c87:	inc    ebx
  414c88:	xchg   esi,eax
  414c89:	out    0x36,eax
  414c8b:	sbb    BYTE PTR [edx+0x4aa4b579],bl
  414c91:	dec    eax
  414c92:	adc    eax,0xe6f03cbf
  414c97:	push   cs
  414c98:	scas   eax,DWORD PTR es:[edi]
  414c99:	lahf   
  414c9a:	mov    ah,0xc7
  414c9c:	xchg   BYTE PTR [esi+ecx*8-0x25],dh
  414ca0:	rol    BYTE PTR [edx-0x119c253a],cl
  414ca6:	cmp    edi,esi
  414ca8:	aad    0xd0
  414caa:	xor    cl,BYTE PTR [edi]
  414cac:	call   0xec51:0xd476ffae
  414cb3:	sub    edi,DWORD PTR [esi+eiz*2+0x2e02888f]
  414cba:	cld    
  414cbb:	jno    0x414d13
  414cbd:	cmp    ebp,DWORD PTR ds:0x99579bf1
  414cc3:	or     al,0x7d
  414cc5:	or     al,0xcc
  414cc7:	mov    eax,0xba8180a3
  414ccc:	cs mov cl,0xe0
  414ccf:	seta   BYTE PTR [edi]
  414cd2:	out    dx,al
  414cd3:	outs   dx,BYTE PTR ds:[esi]
  414cd4:	mov    esi,eax
  414cd6:	mov    WORD PTR [esi+0x733a2bfe],gs
  414cdc:	xchg   ebx,eax
  414cde:	leave  
  414cdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ce0:	xchg   edi,eax
  414ce1:	lods   al,BYTE PTR ds:[esi]
  414ce2:	daa    
  414ce3:	imul   edi,edi,0xfffffff4
  414ce6:	jg     0x414cfd
  414ce8:	jl     0x414c98
  414cea:	mov    esp,0x9765989b
  414cef:	and    al,cl
  414cf1:	mov    ?,WORD PTR ds:0xde1468a1
  414cf7:	sbb    edx,DWORD PTR [ebp+0x6c]
  414cfa:	add    ebp,DWORD PTR [ecx-0x80]
  414cfd:	push   esp
  414cfe:	test   al,0x4a
  414d00:	lock iret 
  414d02:	mov    bl,BYTE PTR [ebp-0x509da6a9]
  414d08:	pop    esi
  414d09:	ins    BYTE PTR es:[edi],dx
  414d0a:	jle    0x414d0c
  414d0c:	test   BYTE PTR [edx],0xd4
  414d0f:	inc    ecx
  414d10:	cmp    al,0xb3
  414d12:	dec    esp
  414d13:	xchg   ebx,eax
  414d14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d15:	xor    eax,0x1ab7fb81
  414d1a:	ret    
  414d1b:	inc    ebx
  414d1c:	add    DWORD PTR [eax+0x19],0xe52008ed
  414d23:	rol    BYTE PTR [edi+0x7b],1
  414d26:	retf   
  414d27:	not    BYTE PTR [ebp+0x36]
  414d2a:	fidivr DWORD PTR [esi*2+0x7788d45c]
  414d31:	push   edx
  414d32:	test   DWORD PTR cs:[ecx+0x17],edi
  414d36:	fucom  st(6)
  414d38:	dec    esi
  414d39:	stc    
  414d3a:	sub    bl,ah
  414d3c:	jge    0x414d12
  414d3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d3f:	jecxz  0x414d03
  414d41:	stc    
  414d42:	sbb    DWORD PTR ds:0x3a8c0fd1,esi
  414d48:	or     dh,dl
  414d4a:	mov    dh,0x55
  414d4c:	push   0x9fb10245
  414d51:	(bad)  
  414d52:	push   ebx
  414d53:	lock test ax,0xce5c
  414d58:	or     dh,BYTE PTR [eax+0x4ed8f3fc]
  414d5e:	popf   
  414d5f:	scas   eax,DWORD PTR es:[edi]
  414d60:	dec    ebx
  414d61:	rcr    DWORD PTR [ebx-0x5c147d2b],1
  414d67:	ins    DWORD PTR es:[edi],dx
  414d68:	cmc    
  414d69:	ret    
  414d6a:	adc    cl,ah
  414d6c:	sbb    BYTE PTR [eax+0xf],al
  414d6f:	or     DWORD PTR [edi+0x7f0f8c05],0xf3ed8813
  414d79:	adc    eax,0xb70a2e0f
  414d7e:	adc    eax,0x4533ec4a
  414d83:	not    BYTE PTR [ebp-0x673f49e]
  414d89:	xchg   esi,eax
  414d8a:	push   0xffffffc3
  414d8c:	pop    esp
  414d8d:	jbe    0x414e08
  414d8f:	xchg   DWORD PTR [edi+0x2207640a],esp
  414d95:	fnstcw WORD PTR [eax+0x4a]
  414d98:	cdq    
  414d99:	pop    es
  414d9a:	pop    ebp
  414d9b:	sbb    ebx,DWORD PTR [esp+edi*4]
  414d9e:	sub    esi,DWORD PTR [ecx+edx*4+0x10eadecf]
  414da5:	inc    esi
  414da6:	push   es
  414da7:	and    ebp,DWORD PTR [edi+ecx*2]
  414daa:	push   esi
  414dab:	dec    ebx
  414dac:	push   ds
  414dad:	imul   edi,DWORD PTR [ebx-0x9bd0bac],0x42
  414db4:	add    ebx,DWORD PTR [ebx-0x425686b4]
  414dba:	cmp    eax,0xe01efad3
  414dbf:	out    dx,eax
  414dc0:	addr16 mov ecx,0x9f38d3a2
  414dc6:	(bad)  
  414dc7:	stc    
  414dc8:	fld    TBYTE PTR [ebp+esi*8-0x9]
  414dcc:	and    ebp,DWORD PTR [esp+0x74e3dc63]
  414dd3:	test   eax,0xd3511d28
  414dd8:	jns    0x414d5d
  414dda:	sbb    BYTE PTR [edi-0x1c],al
  414ddd:	pop    ds
  414dde:	stc    
  414ddf:	jnp    0x414e49
  414de1:	or     BYTE PTR [ebx],dh
  414de3:	mov    cl,0xc7
  414de5:	or     DWORD PTR [eax+eax*4-0x4f8a9c12],ecx
  414dec:	sbb    DWORD PTR [edi+eiz*8-0x12],0x9726581d
  414df4:	xor    al,0x8b
  414df6:	dec    ebp
  414df7:	jmp    FWORD PTR [ecx-0x58]
  414dfa:	pop    eax
  414dfb:	scas   al,BYTE PTR es:[edi]
  414dfc:	enter  0xebd0,0x81
  414e00:	xchg   edi,eax
  414e01:	cwde   
  414e02:	sub    eax,0x6cc9aab
  414e07:	add    ebp,DWORD PTR [ecx]
  414e09:	xchg   BYTE PTR [eax+0x2a],al
  414e0c:	push   eax
  414e0d:	push   eax
  414e0e:	clc    
  414e0f:	mov    eax,ds:0xb3c1ce7a
  414e14:	je     0x414ddd
  414e16:	push   ss
  414e17:	addr16 push eax
  414e19:	out    dx,eax
  414e1a:	add    BYTE PTR [ecx+0x67],cl
  414e1d:	jge    0x414e47
  414e1f:	pop    ecx
  414e20:	cmp    ebx,DWORD PTR [edi]
  414e22:	sub    BYTE PTR [ebp-0xd0d9a50],bh
  414e28:	sbb    al,0x21
  414e2a:	inc    ecx
  414e2b:	mov    al,0x99
  414e2d:	daa    
  414e2e:	xor    DWORD PTR [edi],edx
  414e30:	pop    ebx
  414e31:	inc    edx
  414e32:	sbb    DWORD PTR [edi+0x31],esp
  414e35:	fild   DWORD PTR [ebx+0x24]
  414e38:	cli    
  414e39:	dec    ebx
  414e3a:	cmp    BYTE PTR ds:0x2c7a9882,dh
  414e40:	pop    ss
  414e41:	jge    0x414e0f
  414e43:	imul   eax,DWORD PTR [ecx+esi*4],0x20
  414e47:	xchg   ebx,eax
  414e48:	xor    eax,0x10fad161
  414e4d:	(bad)  
  414e4f:	inc    eax
  414e50:	int    0xa7
  414e52:	test   BYTE PTR [edi-0x5fd9ee2e],0xf9
  414e59:	inc    eax
  414e5a:	jmp    0xa2c8:0xcaf12b7d
  414e61:	ret    
  414e62:	pop    esi
  414e63:	je     0x414eb5
  414e65:	ret    0xf1ad
  414e68:	rcl    BYTE PTR [ebx],1
  414e6a:	repnz push eax
  414e6c:	mov    bh,0x60
  414e6e:	mov    cl,0x16
  414e70:	lahf   
  414e71:	sbb    cl,BYTE PTR [edi-0x15]
  414e74:	or     BYTE PTR [edx-0x3d],dl
  414e77:	cmc    
  414e78:	pop    esi
  414e79:	pop    ebp
  414e7a:	mov    ebx,0xb9022ff5
  414e7f:	mov    al,0x3c
  414e81:	fist   DWORD PTR [ebp+0x2c1615b7]
  414e87:	pushf  
  414e88:	in     al,dx
  414e89:	in     al,dx
  414e8a:	or     esp,DWORD PTR [edx]
  414e8c:	pushw  cs
  414e8e:	xchg   ecx,eax
  414e8f:	leave  
  414e90:	std    
  414e91:	out    dx,eax
  414e92:	(bad)  
  414e93:	push   esp
  414e94:	dec    ecx
  414e95:	(bad)  
  414e96:	shr    dh,cl
  414e98:	jl     0x414ed2
  414e9a:	es jmp 0xf1d28312
  414ea0:	inc    ebx
  414ea1:	dec    esp
  414ea2:	dec    eax
  414ea3:	test   al,0x89
  414ea5:	mov    DWORD PTR [eax],ecx
  414ea7:	dec    esi
  414ea8:	sbb    BYTE PTR [edi],cl
  414eaa:	or     ah,BYTE PTR [ebx-0x5]
  414ead:	nop
  414eae:	xor    eax,0x1bea9a1f
  414eb4:	mov    cl,0x5e
  414eb6:	into   
  414eb7:	inc    esi
  414eb8:	xor    DWORD PTR [eax-0x6cc585ad],edx
  414ebe:	(bad)  
  414ebf:	jno    0x414e61
  414ec1:	clc    
  414ec2:	int    0xc4
  414ec4:	jl     0x414edf
  414ec6:	and    al,0xfb
  414ec8:	rcl    DWORD PTR [esi-0x70],0xbc
  414ecc:	push   cs
  414ecd:	loop   0x414ef2
  414ecf:	mov    ah,0x48
  414ed1:	call   0xece05e08
  414ed6:	addr16 leave 
  414ed8:	ja     0x414ec7
  414eda:	xor    ecx,DWORD PTR [ebx]
  414edc:	jno    0x414eb3
  414ede:	sar    DWORD PTR [esi],1
  414ee0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ee1:	lahf   
  414ee2:	test   al,0xaa
  414ee4:	nop
  414ee5:	or     edx,DWORD PTR [edi]
  414ee7:	inc    esp
  414ee8:	mov    ebx,0x22f77fa4
  414eed:	outs   dx,BYTE PTR ds:[esi]
  414eee:	jp     0x414e75
  414ef0:	or     ah,al
  414ef2:	ror    BYTE PTR [eax+edi*2+0x14],cl
  414ef6:	scas   al,BYTE PTR es:[edi]
  414ef7:	in     al,dx
  414ef8:	loop   0x414e9e
  414efa:	aas    
  414efb:	mov    edi,0xc431cc9b
  414f00:	push   edi
  414f01:	repz push esi
  414f03:	ins    DWORD PTR es:[edi],dx
  414f04:	test   al,0xb6
  414f06:	lea    ecx,[edi+0x78]
  414f09:	in     eax,dx
  414f0a:	pop    esi
  414f0b:	aad    0x10
  414f0d:	xchg   esi,eax
  414f0e:	cli    
  414f0f:	adc    ebx,edx
  414f11:	xchg   edi,eax
  414f12:	xchg   ecx,eax
  414f13:	bound  ebx,QWORD PTR ss:[ebx]
  414f16:	enter  0x170b,0x3b
  414f1a:	ftst   
  414f1c:	lods   eax,DWORD PTR ds:[esi]
  414f1d:	jb     0x414f49
  414f1f:	or     BYTE PTR [edi+0x23f26c52],bl
  414f25:	in     eax,dx
  414f26:	loop   0x414f6b
  414f28:	jae    0x414f0d
  414f2a:	xor    eax,0x73f6823
  414f2f:	mov    cl,0x8f
  414f31:	and    eax,0x934fa54c
  414f36:	mov    ch,0xbd
  414f38:	fwait
  414f39:	inc    ebx
  414f3a:	inc    ecx
  414f3b:	sar    DWORD PTR [ebx+0x22b064ac],cl
  414f41:	push   0x18
  414f43:	into   
  414f44:	dec    esp
  414f45:	les    esp,FWORD PTR [eax+0x779599ca]
  414f4b:	cmc    
  414f4c:	fs cwde 
  414f4e:	(bad)  
  414f4f:	clc    
  414f50:	test   DWORD PTR [eax+0x1c2d2e02],esi
  414f56:	push   esi
  414f57:	xchg   esp,eax
  414f58:	rcl    DWORD PTR [ecx+0x67ffedad],0xbb
  414f5f:	pop    ebx
  414f60:	pushf  
  414f61:	loope  0x414fa5
  414f63:	mov    ds:0xdfe0920b,eax
  414f68:	pop    esp
  414f69:	jmp    0x414f88
  414f6b:	pop    ss
  414f6c:	inc    edi
  414f6d:	xchg   esi,eax
  414f6e:	rcr    ebp,cl
  414f70:	cmp    BYTE PTR [ebx-0x3007d888],ch
  414f76:	mov    edx,0x2f3355f9
  414f7b:	and    ebp,esi
  414f7d:	mov    eax,ds:0x29d1f61
  414f82:	pop    ebx
  414f83:	popf   
  414f84:	(bad)  
  414f85:	loope  0x414fca
  414f87:	nop
  414f88:	mov    ah,0xd1
  414f8a:	xor    cl,al
  414f8c:	mov    ds:0x90b81282,eax
  414f91:	pop    ss
  414f92:	in     al,dx
  414f93:	push   ebx
  414f94:	xchg   ebp,eax
  414f95:	mul    DWORD PTR [edi+0x13]
  414f98:	fldenv [ebp+0x3573b9f8]
  414f9e:	fisttp DWORD PTR ds:0xcee25e84
  414fa4:	cmp    ebp,eax
  414fa6:	popa   
  414fa7:	aad    0x36
  414fa9:	and    al,0x9a
  414fab:	bnd jp 0x414ff3
  414fae:	sbb    ebx,DWORD PTR [edi+0x78]
  414fb1:	div    DWORD PTR [ebp+0x11]
  414fb4:	cmp    DWORD PTR [ebx-0x7d],edi
  414fb7:	hlt    
  414fb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414fb9:	fisttp DWORD PTR [ebx-0x70b44852]
  414fbf:	pop    ebx
  414fc0:	add    ebp,DWORD PTR [edx-0x336387f2]
  414fc6:	inc    esp
  414fc7:	mov    ah,0x4e
  414fc9:	fldcw  WORD PTR [eax+0x46]
  414fcc:	das    
  414fcd:	push   ecx
  414fce:	call   0xe8e0:0x733bd4e
  414fd5:	iret   
  414fd6:	pop    eax
  414fd7:	call   0x2ea9:0x9c639101
  414fde:	xchg   esp,eax
  414fdf:	out    dx,eax
  414fe0:	inc    edx
  414fe1:	int3   
  414fe2:	sbb    DWORD PTR [esi+0x347a279b],ecx
  414fe8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fe9:	je     0x415068
  414feb:	xor    eax,0x2d7a9b01
  414ff0:	std    
  414ff1:	cvtps2pd xmm0,QWORD PTR [edx+0x65b20e2d]
  414ff8:	(bad)  
  414ff9:	aam    0x3c
  414ffb:	mov    DWORD PTR [edi+0x86263d9],eax
  415001:	inc    edi
  415002:	call   0xe9cf:0x550d6f3
  415009:	not    DWORD PTR [edx+0x7f]
  41500c:	loope  0x41501e
  41500e:	push   ss
  41500f:	addr16 inc esp
  415011:	inc    edx
  415012:	stc    
  415013:	pusha  
  415014:	(bad)  
  415016:	fnstcw WORD PTR [eax+esi*1+0x1d]
  41501a:	xor    ecx,DWORD PTR [eax-0x938a45c]
  415020:	daa    
  415021:	sbb    eax,edx
  415023:	mov    dh,0xf
  415025:	mov    al,0x12
  415027:	mov    al,0x60
  415029:	mov    dh,0xc8
  41502b:	or     dh,BYTE PTR [eax-0x225ac734]
  415031:	call   DWORD PTR [ebx+eax*1-0x6d70dcd2]
  415038:	xchg   dl,bh
  41503a:	fstp   TBYTE PTR [eax+esi*2+0x70f8b9bf]
  415041:	rcl    DWORD PTR [esp+esi*8-0x58cc9088],cl
  415048:	shl    DWORD PTR [ebx],1
  41504a:	mov    ch,0xda
  41504c:	xlat   BYTE PTR ds:[ebx]
  41504d:	fucomi st,st(7)
  41504f:	mov    ebx,0xb08de3f7
  415054:	out    0x84,al
  415056:	sub    DWORD PTR [esi],ecx
  415058:	adc    dl,BYTE PTR [ebp-0x6f]
  41505b:	std    
  41505c:	into   
  41505d:	enter  0xaabb,0x32
  415061:	out    dx,eax
  415062:	mov    esp,0x425cd9d4
  415067:	push   esi
  415068:	adc    DWORD PTR [ecx],0xffffff88
  41506b:	dec    ecx
  41506c:	js     0x415033
  41506e:	test   al,0xa8
  415070:	jno    0x415047
  415072:	xchg   ebx,eax
  415073:	les    esp,FWORD PTR [ebx]
  415075:	xor    eax,0xd2630787
  41507a:	rcr    DWORD PTR [edi+edi*4+0x29800040],1
  415081:	pusha  
  415082:	mov    esp,ecx
  415084:	popa   
  415085:	push   es
  415086:	ret    0x8387
  415089:	xor    al,0xb
  41508b:	pop    ecx
  41508c:	adc    BYTE PTR [edi],al
  41508e:	jecxz  0x4150c5
  415090:	int3   
  415091:	push   edx
  415092:	loope  0x415070
  415094:	ins    BYTE PTR es:[edi],dx
  415095:	sbb    DWORD PTR [esp+edi*1+0x4c],ebx
  415099:	add    bl,bh
  41509b:	imul   eax,DWORD PTR [ebp+0x20],0xd2710ce1
  4150a2:	mov    al,0xf2
  4150a4:	retf   0x3adf
  4150a7:	iret   
  4150a8:	dec    ebp
  4150a9:	rcr    ebx,1
  4150ab:	retf   0x1ebd
  4150ae:	xor    eax,0x34dce17e
  4150b3:	push   ecx
  4150b4:	mov    bl,0x23
  4150b6:	lea    eax,[ecx+0x63]
  4150b9:	push   esi
  4150ba:	jb     0x415138
  4150bc:	xchg   esp,eax
  4150bd:	ins    BYTE PTR es:[edi],dx
  4150be:	mov    al,0x7d
  4150c0:	ret    
  4150c1:	sbb    ah,BYTE PTR [edx-0x5f]
  4150c4:	adc    eax,0xc5f6a768
  4150c9:	pop    edx
  4150ca:	sub    BYTE PTR [ebp-0x75],dl
  4150cd:	mov    ebx,0x97e8bb2d
  4150d2:	push   ebx
  4150d3:	retf   0xfbf4
  4150d6:	lock or al,0xcb
  4150d9:	jnp    0x415084
  4150db:	xor    al,0x10
  4150dd:	adc    eax,edx
  4150df:	mov    bh,0x21
  4150e1:	adc    cl,bh
  4150e3:	jl     0x415146
  4150e5:	jg     0x415078
  4150e7:	ds out dx,eax
  4150e9:	mov    es,WORD PTR [ebp-0x52ef6a9c]
  4150ef:	dec    ebp
  4150f0:	les    ecx,FWORD PTR [edi]
  4150f2:	rol    BYTE PTR [ebx-0x6a96d102],0x28
  4150f9:	ret    
  4150fa:	rcl    BYTE PTR [ebx],1
  4150fc:	fsub   st(3),st
  4150fe:	xor    ch,0xc8
  415101:	sbb    al,0x6c
  415103:	jno    0x4150b0
  415105:	mov    bh,0xcd
  415107:	push   edx
  415108:	outs   dx,BYTE PTR ds:[esi]
  415109:	mov    bl,0xd1
  41510b:	xchg   esi,eax
  41510c:	fld    TBYTE PTR [edi+0x8422bf0]
  415112:	enter  0x2622,0xcd
  415116:	jmp    0x415114
  415118:	or     eax,esp
  41511a:	dec    edx
  41511b:	cmp    cl,BYTE PTR [esi+0x5f962f14]
  415121:	call   0x3bf0d77d
  415126:	shl    cl,1
  415128:	add    cl,BYTE PTR [edi-0x71f39b11]
  41512e:	and    DWORD PTR [ebp+0x5c],eax
  415131:	add    DWORD PTR [edi+0x6eb1271c],eax
  415137:	or     al,0x45
  415139:	(bad)  
  41513a:	ja     0x415199
  41513c:	push   eax
  41513d:	lds    esp,FWORD PTR [ebx]
  41513f:	xor    al,0xbe
  415141:	xchg   ecx,eax
  415142:	add    al,0xdc
  415144:	xchg   ebp,eax
  415145:	sbb    eax,0xffffffe8
  415148:	inc    DWORD PTR [ecx]
  41514a:	in     eax,dx
  41514b:	inc    eax
  41514c:	xor    al,0x5f
  41514e:	lds    edx,FWORD PTR [ebx+0x6f3ce673]
  415154:	mov    WORD PTR [edi],es
  415156:	ret    0x650
  415159:	(bad)  
  41515a:	out    0x39,eax
  41515c:	xchg   ebx,eax
  41515d:	out    dx,al
  41515e:	(bad)  
  41515f:	push   es
  415160:	ret    0x24ae
  415163:	(bad)  
  415164:	in     eax,0x4d
  415166:	fidivr DWORD PTR [eax]
  415168:	xchg   ebx,eax
  415169:	hlt    
  41516a:	mov    edi,0x6959ceac
  41516f:	adc    al,0x94
  415171:	push   ss
  415172:	fsub   QWORD PTR [ebp-0x5be324cf]
  415178:	sbb    BYTE PTR [ecx-0x195afe76],al
  41517e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41517f:	lods   al,BYTE PTR ds:[esi]
  415180:	push   edx
  415181:	and    BYTE PTR [ecx+edi*1+0x13],al
  415185:	or     al,0x1e
  415187:	fldcw  WORD PTR [ebp-0x5465eb70]
  41518d:	popa   
  41518e:	xlat   BYTE PTR ds:[ebx]
  41518f:	cwde   
  415190:	and    dh,cl
  415192:	test   BYTE PTR [ecx+0x2a],dh
  415195:	xor    eax,0x687880a3
  41519a:	stc    
  41519b:	mov    al,ds:0x7e254620
  4151a0:	or     al,0xef
  4151a2:	or     BYTE PTR ds:0x32947949,al
  4151a8:	ret    
  4151a9:	cdq    
  4151aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151ab:	mov    edi,0xb5ee6503
  4151b0:	cld    
  4151b1:	mov    ds:0xb1ddcbc4,eax
  4151b6:	xchg   ebp,eax
  4151b7:	jmp    0x4151c5
  4151b9:	mov    al,0xe3
  4151bb:	lods   al,BYTE PTR ds:[esi]
  4151bc:	lahf   
  4151bd:	clc    
  4151be:	and    BYTE PTR [ebp-0x67],0xb4
  4151c2:	adc    DWORD PTR [eax],0xf02560d6
  4151c8:	addr16 hlt 
  4151ca:	sub    ah,BYTE PTR [eax+0x72df454e]
  4151d0:	cmp    eax,edi
  4151d2:	push   0x7b
  4151d4:	dec    edi
  4151d5:	ins    BYTE PTR es:[edi],dx
  4151d6:	xchg   DWORD PTR [ebp-0x51],esi
  4151d9:	adc    eax,0x704f1576
  4151de:	and    BYTE PTR [ecx+0xe],bh
  4151e1:	je     0x415211
  4151e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151e4:	sti    
  4151e5:	retf   
  4151e6:	imul   esi,DWORD PTR [ebp-0x4a],0xce2ab287
  4151ed:	fadd   QWORD PTR [ebp+eiz*4-0x36]
  4151f1:	stos   BYTE PTR es:[edi],al
  4151f2:	fnstcw WORD PTR [ebx]
  4151f4:	in     al,0x72
  4151f6:	mov    al,ds:0xdcabd3f8
  4151fb:	aad    0x21
  4151fd:	pop    edx
  4151fe:	sub    dh,BYTE PTR [ecx-0x6a]
  415201:	fiadd  WORD PTR [eax+edx*8]
  415204:	rcl    ecx,1
  415206:	std    
  415207:	sti    
  415208:	mov    edi,0xaaf6c619
  41520d:	je     0x415229
  41520f:	or     bl,BYTE PTR [eax+esi*8+0x37d84b12]
  415216:	aaa    
  415217:	cmp    DWORD PTR [esi-0x72],eax
  41521a:	and    esi,DWORD PTR [edx+0x43]
  41521d:	and    al,0x5b
  415220:	cmp    al,0xb0
  415222:	sub    DWORD PTR [esp+edi*8+0x24],ebp
  415226:	cmp    DWORD PTR [ecx+0x35],0x50b1984b
  41522d:	fstp   QWORD PTR [edx-0x75]
  415230:	mov    DWORD PTR [eax+0x26],ecx
  415233:	jnp    0x4151c3
  415235:	ret    
  415236:	(bad)
  41523a:	outs   dx,DWORD PTR ds:[esi]
  41523b:	fidivr DWORD PTR [ebx]
  41523d:	(bad)  
  41523e:	cdq    
  41523f:	add    eax,esp
  415241:	ret    
  415242:	mov    eax,0xbfcd7a8e
  415247:	inc    eax
  415248:	repnz push ss
  41524a:	es js  0x415266
  41524d:	and    eax,0xa9830851
  415252:	loopne 0x415293
  415254:	retf   
  415255:	ror    ecx,cl
  415257:	dec    edi
  415258:	pop    ebx
  415259:	jge    0x41529b
  41525b:	lea    ebx,[edx+0x7b0a28c]
  415261:	mov    al,ds:0x635f91fc
  415266:	mov    ebx,0xcb48d59e
  41526b:	dec    eax
  41526c:	mov    esp,0x6b0a757f
  415271:	pop    eax
  415272:	imul   edx,edx,0x852c9e20
  415278:	push   edi
  415279:	ins    DWORD PTR es:[edi],dx
  41527a:	fwait
  41527b:	(bad)  
  41527c:	adc    ah,BYTE PTR [ebp+0x75f5c268]
  415282:	mov    edx,0x62f0c0da
  415287:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415288:	sub    edx,ebx
  41528a:	xchg   DWORD PTR [eax-0x71],esi
  41528d:	cmp    DWORD PTR [edx+0xf],eax
  415290:	cmp    edi,DWORD PTR [ebx+0x7a]
  415293:	mov    ah,0x54
  415295:	xor    edi,DWORD PTR [esi]
  415297:	out    dx,al
  415298:	lea    esp,[ecx-0x2c]
  41529b:	pop    ebp
  41529c:	jmp    0xe092:0x6d2e6048
  4152a3:	cdq    
  4152a4:	out    dx,eax
  4152a5:	xchg   ebx,eax
  4152a6:	aam    0x3d
  4152a8:	mov    edi,0xaf121e74
  4152ad:	mov    ds:0x425cca75,al
  4152b2:	leave  
  4152b3:	stos   BYTE PTR es:[edi],al
  4152b4:	xor    DWORD PTR [ebp-0x612bc0ec],eax
  4152ba:	or     cl,BYTE PTR [esi]
  4152bc:	std    
  4152bd:	push   ebp
  4152be:	push   cs
  4152bf:	xor    al,0xe4
  4152c1:	xchg   esi,eax
  4152c2:	xor    BYTE PTR [edi],cl
  4152c4:	pusha  
  4152c5:	leave  
  4152c6:	mov    edx,0x9b8a
  4152cb:	stos   BYTE PTR es:[edi],al
  4152cc:	shl    BYTE PTR [edx],cl
  4152ce:	xlat   BYTE PTR ds:[ebx]
  4152cf:	jo     0x415319
  4152d1:	hlt    
  4152d2:	cmp    eax,0xec5c87b0
  4152d7:	dec    ebx
  4152d8:	jbe    0x41525f
  4152da:	sar    DWORD PTR [ecx],1
  4152dc:	jecxz  0x41531b
  4152de:	and    eax,0x5ab15634
  4152e3:	sbb    al,0xe2
  4152e5:	ja     0x4152e0
  4152e7:	push   esi
  4152e8:	cs xor eax,0x6df0d5e
  4152ee:	jo     0x41535e
  4152f0:	lock in eax,dx
  4152f2:	push   0x31a77372
  4152f7:	mov    al,0xbe
  4152f9:	cld    
  4152fa:	cs gs jp 0x41535b
  4152fe:	addr16 sbb esi,edi
  415301:	fcomp  DWORD PTR [ebx-0x27276aa8]
  415307:	push   eax
  415308:	or     al,0x56
  41530a:	out    dx,eax
  41530b:	pop    ecx
  41530c:	test   DWORD PTR ds:0x4bc86174,edx
  415312:	mov    dh,0xaf
  415314:	lock inc ebp
  415316:	add    esp,eax
  415318:	in     al,dx
  415319:	mov    esp,0x6bba2a55
  41531e:	or     ebp,DWORD PTR [ebx-0x2d]
  415321:	addr16 imul ebx,esi,0xffffffab
  415325:	shl    DWORD PTR [esi+0x1c],cl
  415328:	push   edi
  415329:	adc    ah,BYTE PTR [esi-0x6202886c]
  41532f:	mov    al,0x35
  415331:	imul   edx,DWORD PTR cs:[ebx*4-0x558c4319],0xf
  41533a:	jle    0x4152c2
  41533c:	ret    0x4586
  41533f:	pop    edi
  415340:	xchg   edi,eax
  415341:	inc    esp
  415342:	shr    cl,0xab
  415345:	gs mov eax,0xe8d3c05c
  41534b:	iret   
  41534c:	fidiv  DWORD PTR [eax*1+0x844e89f]
  415353:	in     al,0x45
  415355:	cmp    eax,0x12c3b77b
  41535a:	in     al,0xc1
  41535c:	xor    eax,0x1bd0d651
  415361:	dec    ecx
  415362:	je     0x4153db
  415364:	mov    ebx,0x8101aba7
  415369:	repz cmp edx,0xa786a1e9
  415370:	test   eax,0xe7ca3890
  415375:	loope  0x41532f
  415377:	ja     0x41531b
  415379:	(bad)  
  41537b:	mov    edi,0x27f6fcb6
  415380:	cs mov ecx,0x4e0fc268
  415386:	jp     0x415348
  415388:	add    BYTE PTR [edi],bl
  41538a:	add    edx,DWORD PTR [ecx+0x1c]
  41538d:	cmp    edi,DWORD PTR [ecx]
  41538f:	push   ebp
  415390:	pop    ss
  415391:	loop   0x415314
  415393:	cmc    
  415394:	dec    ebx
  415395:	xchg   BYTE PTR [eax+0x2e],cl
  415398:	dec    ebp
  415399:	pop    edx
  41539a:	int    0xd3
  41539c:	mov    ch,0x59
  41539e:	push   ds
  41539f:	sub    edx,0x9cefac91
  4153a5:	jno    0x4153ee
  4153a7:	inc    ebp
  4153a8:	repnz inc esi
  4153aa:	bound  edx,QWORD PTR [edx-0x2c]
  4153ad:	add    bl,ah
  4153af:	or     al,0x59
  4153b1:	pop    ebx
  4153b2:	loopne 0x4153aa
  4153b4:	loope  0x415373
  4153b6:	das    
  4153b7:	push   esp
  4153b8:	mov    esi,0x240be82a
  4153bd:	xor    al,0x8
  4153bf:	jecxz  0x41541d
  4153c1:	push   0xc88a6dcc
  4153c6:	mov    eax,ds:0x399ccab0
  4153cb:	mov    esi,0xa7c514c3
  4153d0:	push   esp
  4153d1:	fs cwde 
  4153d3:	stos   DWORD PTR es:[edi],eax
  4153d4:	cmp    ecx,DWORD PTR [ebx+0x2c97198d]
  4153da:	or     eax,0xa91aae52
  4153df:	sbb    eax,0x6361d055
  4153e4:	(bad)  
  4153e5:	xchg   esp,eax
  4153e6:	shl    DWORD PTR [edi+0x5e],0xa9
  4153ea:	test   eax,0x7292e45b
  4153ef:	jno    0x4153a5
  4153f1:	aad    0x13
  4153f3:	sbb    eax,DWORD PTR [ecx-0x66fe018d]
  4153f9:	push   ecx
  4153fa:	xchg   esp,eax
  4153fb:	call   0x98d2f05a
  415400:	cmp    ch,BYTE PTR [edi-0x7e2fc725]
  415406:	cmc    
  415407:	stos   DWORD PTR es:[edi],eax
  415408:	les    eax,FWORD PTR [esi]
  41540a:	mov    ds:0x51f250c7,al
  41540f:	xor    DWORD PTR [esi],0xa60d0ce4
  415415:	jne    0x4153a1
  415417:	or     eax,DWORD PTR [eax]
  415419:	mov    ah,0xb
  41541b:	xor    ah,BYTE PTR [ecx+0x6d]
  41541e:	xor    esp,DWORD PTR [edx]
  415420:	cmp    ebx,esi
  415422:	push   es
  415423:	adc    al,0x75
  415425:	adc    BYTE PTR [eax+0x4],al
  415428:	icebp  
  415429:	(bad)  
  41542a:	daa    
  41542b:	cmp    DWORD PTR [ecx+0x7e],0x440c229a
  415432:	sbb    eax,edi
  415434:	push   ecx
  415435:	mov    ebx,0x4e1a265c
  41543a:	fnsave fs:[edi+0x2b]
  41543e:	mov    ch,0x18
  415440:	bound  ebx,QWORD PTR [ecx]
  415442:	test   al,0xf7
  415444:	push   ebp
  415445:	mov    ebp,0x2d93093c
  41544a:	jle    0x415477
  41544c:	into   
  41544d:	sbb    al,0xaf
  41544f:	pusha  
  415450:	add    al,0x55
  415452:	and    edi,DWORD PTR [eax]
  415454:	in     eax,0xd1
  415456:	jle    0x4153de
  415458:	pop    edx
  415459:	pusha  
  41545a:	or     al,0xe4
  41545c:	adc    edx,DWORD PTR [esi+edx*2-0x60bad6ef]
  415463:	ss shr ah,1
  415466:	lods   al,BYTE PTR ds:[esi]
  415467:	sub    DWORD PTR [edi+esi*1],esp
  41546a:	xchg   BYTE PTR [ecx],bh
  41546c:	fidivr WORD PTR [edi-0x3c72740f]
  415472:	fidiv  WORD PTR [edi+0x6f]
  415475:	push   ds
  415476:	bound  edx,QWORD PTR ds:0x11250264
  41547c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41547d:	sub    ecx,DWORD PTR [ebx-0x60]
  415480:	xor    al,0x0
  415482:	mov    esi,ebp
  415484:	lahf   
  415485:	xor    cl,BYTE PTR [edx+0x32]
  415488:	fs push edx
  41548a:	loope  0x4154c9
  41548c:	mov    WORD PTR [ebx+ebx*4],gs
  41548f:	rcl    BYTE PTR [edx],1
  415491:	xchg   ebp,eax
  415492:	xor    BYTE PTR [edi+0x25777fe2],dl
  415498:	adc    ah,BYTE PTR [esi-0x1293a202]
  41549e:	stc    
  41549f:	cmp    BYTE PTR [esi],dh
  4154a1:	jmp    0x10e61a5b
  4154a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154a7:	or     dh,BYTE PTR [esi-0x1cb4f7f4]
  4154ad:	mov    bh,0x66
  4154af:	psubb  mm6,QWORD PTR [eax-0x419e26d5]
  4154b6:	add    edi,eax
  4154b8:	pop    eax
  4154b9:	cld    
  4154ba:	outs   dx,DWORD PTR ds:[esi]
  4154bb:	ins    DWORD PTR es:[edi],dx
  4154bc:	pop    edi
  4154bd:	adc    BYTE PTR [ebx],dh
  4154bf:	pop    esp
  4154c0:	lahf   
  4154c1:	call   FWORD PTR [edx]
  4154c3:	sar    bl,1
  4154c5:	mov    ecx,0x612c8f6d
  4154ca:	push   ebp
  4154cb:	js     0x4154b3
  4154cd:	push   ds
  4154ce:	in     eax,0x8c
  4154d0:	xchg   ebx,eax
  4154d1:	ss lahf 
  4154d3:	xor    ecx,DWORD PTR [ebp-0x57bc83b5]
  4154d9:	sbb    BYTE PTR [edx+0x3fe16a43],al
  4154df:	int3   
  4154e0:	inc    eax
  4154e1:	shl    BYTE PTR ds:0x7c124a5d,0x50
  4154e8:	and    al,0x6c
  4154ea:	dec    ebx
  4154eb:	xor    BYTE PTR [ebx+ecx*4+0x7a],dl
  4154ef:	ss push es
  4154f1:	retf   
  4154f2:	fidiv  DWORD PTR [edi*8+0x5ee25a29]
  4154f9:	scas   eax,DWORD PTR es:[edi]
  4154fa:	pop    edi
  4154fb:	pop    ds
  4154fc:	or     dh,BYTE PTR [ecx-0x40dcae68]
  415502:	pop    esi
  415503:	cmp    dh,dl
  415505:	mov    cl,0xe5
  415507:	div    BYTE PTR [edx+0x5da91cd1]
  41550d:	imul   ecx,DWORD PTR [ecx-0x29],0x57
  415511:	in     al,0xde
  415513:	and    cl,bl
  415515:	jge    0x4154e8
  415517:	sbb    DWORD PTR [edi+0x303dd31f],ecx
  41551d:	jae    0x4154c1
  41551f:	push   ss
  415520:	mov    ebx,0xa42309d3
  415525:	xchg   ecx,eax
  415526:	ss ja  0x415547
  415529:	mov    al,0x13
  41552b:	sub    BYTE PTR [esi],0x87
  41552e:	(bad)  
  41552f:	mov    esi,ebx
  415531:	mov    DWORD PTR [edx],ecx
  415533:	mov    edi,0xcc18bca0
  415538:	adc    DWORD PTR [esi-0x31dcb852],0xeeea08f6
  415542:	outs   dx,BYTE PTR ds:[esi]
  415543:	jb     0x4154c6
  415545:	aad    0x31
  415547:	xor    bh,BYTE PTR [eax]
  415549:	daa    
  41554a:	jge    0x415597
  41554c:	push   cs
  41554d:	xor    eax,0xa2ad0208
  415552:	ja     0x415574
  415554:	clc    
  415555:	xchg   esi,eax
  415556:	shl    BYTE PTR cs:[edx+ebx*4],1
  41555a:	mov    edx,0x8c3222be
  41555f:	or     DWORD PTR [ebp+0x46],0x197ea25f
  415566:	and    cl,dl
  415568:	or     esi,DWORD PTR [esi+0x2a461e15]
  41556e:	cwde   
  41556f:	sbb    ch,BYTE PTR [ebx]
  415571:	es sub al,0xd
  415574:	aaa    
  415575:	fst    DWORD PTR [esi+0x53e145e1]
  41557b:	cmp    dl,BYTE PTR [ecx+0x6a49501c]
  415581:	xor    al,al
  415583:	push   eax
  415584:	mov    BYTE PTR [ebx+edx*4+0x7c],ch
  415588:	addr16 push ebx
  41558a:	and    al,BYTE PTR [edi-0x3b]
  41558d:	jmp    0xa42fd36e
  415592:	xor    ch,ah
  415594:	ins    BYTE PTR es:[edi],dx
  415595:	call   0xe369:0xb2d22bc6
  41559c:	scas   al,BYTE PTR es:[edi]
  41559d:	cmp    al,0x52
  41559f:	xchg   DWORD PTR [ebx],esi
  4155a1:	(bad)  
  4155a2:	adc    DWORD PTR [esi],edi
  4155a4:	sub    esi,DWORD PTR [edx]
  4155a6:	inc    ebx
  4155a7:	and    al,BYTE PTR [eax+0x1c]
  4155aa:	pop    eax
  4155ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155ac:	push   0x8fae0af2
  4155b1:	pusha  
  4155b2:	inc    eax
  4155b3:	sbb    al,0xdc
  4155b5:	loopne 0x41559a
  4155b7:	mov    DWORD PTR [edx-0x279335d9],esp
  4155bd:	mov    ebp,0x71b6d4bc
  4155c2:	test   BYTE PTR [edx+0x1b],al
  4155c5:	rol    DWORD PTR [ebp+0x4ae3b16],1
  4155cb:	lock sbb al,0x80
  4155ce:	rcr    BYTE PTR [ebx+eiz*2+0x7e],1
  4155d2:	xchg   edx,eax
  4155d3:	aad    0xc
  4155d5:	sbb    dl,ch
  4155d7:	pop    ecx
  4155d8:	not    BYTE PTR [esi-0x1a6e1cd0]
  4155de:	mov    ecx,0xf77e1807
  4155e3:	popf   
  4155e4:	jmp    0x332c:0xf9f4fc18
  4155eb:	xchg   ebp,eax
  4155ec:	inc    edi
  4155ed:	lods   al,BYTE PTR ds:[esi]
  4155ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155ef:	adc    eax,DWORD PTR [edi+ecx*2+0x4cc39d31]
  4155f6:	test   edi,ebx
  4155f8:	jle    0x415645
  4155fa:	sahf   
  4155fb:	ins    BYTE PTR es:[edi],dx
  4155fc:	nop
  4155fd:	xlat   BYTE PTR ds:[ebx]
  4155fe:	push   edx
  4155ff:	xchg   esp,eax
  415600:	sar    BYTE PTR [eax+0x5d],0xd9
  415604:	sub    BYTE PTR [eax-0x437eb07f],ch
  41560a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41560b:	inc    edi
  41560c:	stos   BYTE PTR es:[edi],al
  41560d:	mov    edi,0x6bc851ed
  415612:	lods   al,BYTE PTR ds:[esi]
  415613:	ins    DWORD PTR es:[di],dx
  415615:	(bad)  
  415616:	int3   
  415617:	or     DWORD PTR [ebx+0x4a450c90],esp
  41561d:	sub    BYTE PTR [ecx-0xcd990e5],0x11
  415624:	xor    bh,BYTE PTR [esi+0x7e00b991]
  41562a:	loope  0x41565d
  41562c:	push   0x9c12f84b
  415631:	test   eax,0xc8641112
  415636:	mov    edx,0xb80ce5db
  41563b:	and    DWORD PTR [ebp-0x4449c166],ebx
  415641:	ret    
  415642:	xchg   ebp,eax
  415643:	rcl    esi,cl
  415645:	pop    esp
  415646:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415647:	cld    
  415648:	data16 jno 0x41568d
  41564b:	cli    
  41564c:	cli    
  41564d:	push   ecx
  41564e:	(bad)  
  41564f:	idiv   DWORD PTR [esi+0x2db5c17b]
  415655:	sbb    DWORD PTR [esi+edx*4+0x6a],ebp
  415659:	repz dec edx
  41565b:	mov    edx,gs
  41565d:	or     eax,0x4bf2255a
  415662:	sub    al,0xbd
  415664:	inc    ebx
  415665:	(bad)  
  415666:	push   0xb7665cd0
  41566b:	iret   
  41566c:	push   DWORD PTR [ebp+ebp*4+0x3d]
  415670:	mov    ss,WORD PTR [ecx+edi*4]
  415673:	mov    eax,ds:0x457ecf58
  415678:	mov    esi,0xba80697a
  41567d:	mov    DWORD PTR [eax],eax
  41567f:	mov    esi,ebp
  415681:	push   ds
  415682:	or     eax,DWORD PTR [eax+0x4]
  415685:	inc    BYTE PTR [esi]
  415687:	mov    al,0xf6
  415689:	dec    edx
  41568a:	sbb    dh,bh
  41568c:	adc    eax,DWORD PTR [edi+0x66]
  41568f:	mov    cl,0x27
  415691:	retf   
  415692:	inc    edx
  415693:	jg     0x415701
  415695:	out    dx,al
  415696:	shl    DWORD PTR gs:[ebx+eiz*8-0x432ec62a],cl
  41569e:	dec    edi
  41569f:	sahf   
  4156a0:	ficomp DWORD PTR [edx+eax*4-0x1a]
  4156a4:	call   0x5dbc0eba
  4156a9:	dec    ecx
  4156aa:	cmc    
  4156ab:	cdq    
  4156ac:	frstor ds:0x66e69729
  4156b2:	push   esi
  4156b3:	and    DWORD PTR [ebx+0x34],ecx
  4156b6:	jp     0x41565a
  4156b8:	(bad)  
  4156b9:	call   0x559fdc2e
  4156be:	xchg   ecx,eax
  4156bf:	aad    0xb8
  4156c1:	leave  
  4156c2:	les    esp,FWORD PTR [ebx+edi*4-0x4dab6524]
  4156c9:	ja     0x4156e6
  4156cb:	or     edx,eax
  4156cd:	jno    0x41567a
  4156cf:	stc    
  4156d0:	clc    
  4156d1:	sub    DWORD PTR [esi+eax*2],ecx
  4156d4:	inc    eax
  4156d5:	mov    ch,BYTE PTR [eax+0x1]
  4156d8:	aas    
  4156d9:	ins    BYTE PTR es:[edi],dx
  4156da:	jo     0x4156ae
  4156dc:	ja     0x41567b
  4156de:	mov    cl,0x43
  4156e0:	stos   DWORD PTR es:[edi],eax
  4156e1:	dec    ebp
  4156e2:	mov    eax,0xfc103917
  4156e7:	push   0xffffffb4
  4156e9:	inc    esp
  4156ea:	sahf   
  4156eb:	sub    eax,0x6767c4ed
  4156f0:	rol    DWORD PTR [ecx-0x3a],1
  4156f3:	sub    eax,eax
  4156f5:	pop    ebx
  4156f6:	mov    bh,0xb9
  4156f8:	bound  ebx,QWORD PTR [ecx+0xe32a5e]
  4156fe:	imul   eax,DWORD PTR [ebp-0x71d48418],0xffffff86
  415705:	out    0x7f,eax
  415707:	lea    esi,[eax+0x266a635c]
  41570d:	mov    gs,WORD PTR [ebx-0x221bbf1f]
  415713:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415714:	sub    ch,bl
  415716:	cs mov al,0x2b
  415719:	loope  0x415735
  41571b:	and    eax,0x19347b6b
  415720:	sbb    ebp,DWORD PTR [ebx]
  415722:	cmp    cl,BYTE PTR [eax-0x6baaf0e8]
  415728:	popf   
  415729:	push   esi
  41572a:	repz je 0x4156ee
  41572d:	les    esi,FWORD PTR [edi+0x1e]
  415730:	pop    ecx
  415731:	add    dl,cl
  415733:	push   edi
  415734:	sub    al,0xee
  415736:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415737:	xor    edi,DWORD PTR [esi]
  415739:	pop    ss
  41573a:	ret    0x9fd6
  41573d:	sub    edi,esp
  41573f:	pop    esp
  415740:	sub    ch,BYTE PTR [ecx+0x59]
  415743:	cmp    BYTE PTR [ebp-0x7ecaa59b],ah
  415749:	scas   al,BYTE PTR es:[edi]
  41574a:	dec    eax
  41574b:	push   ebx
  41574c:	or     eax,0x42d3d75f
  415751:	popa   
  415752:	mov    esi,0xe2c9468f
  415757:	inc    edx
  415758:	stos   DWORD PTR es:[edi],eax
  415759:	dec    eax
  41575a:	xchg   edx,eax
  41575b:	lds    edi,FWORD PTR [esi-0x7c]
  41575e:	pop    esp
  41575f:	dec    edx
  415760:	adc    cl,dh
  415762:	jno    0x4157a3
  415764:	jns    0x4157d5
  415766:	xor    al,0x71
  415768:	xchg   esp,eax
  415769:	aad    0xc1
  41576b:	fidiv  DWORD PTR [ebp+0x7c]
  41576e:	push   ebx
  41576f:	ror    ch,1
  415771:	mov    ss,WORD PTR [edi+0x1df79311]
  415777:	push   ebp
  415778:	lahf   
  415779:	scas   eax,DWORD PTR es:[edi]
  41577a:	sar    DWORD PTR [eax+0x1934202b],1
  415780:	repnz repz sbb eax,0x14705ed1
  415787:	mov    edi,0x2f27cc66
  41578c:	cmc    
  41578d:	jne    0x415754
  41578f:	mov    ebp,0x97a3f44d
  415794:	bound  ecx,QWORD PTR [eax+0x5]
  415797:	or     eax,0x57516ddc
  41579c:	mov    esi,0x5e15812e
  4157a1:	pop    edi
  4157a2:	data16 fisub DWORD PTR [edi]
  4157a5:	mov    edi,edi
  4157a7:	sub    ecx,DWORD PTR [ebp+ebp*8-0x50bc33c9]
  4157ae:	mov    bh,0x9a
  4157b0:	pop    es
  4157b1:	jns    0x4157ed
  4157b3:	in     al,dx
  4157b4:	imul   ebp,DWORD PTR [ebx-0x43],0x3c05ab11
  4157bb:	es (bad) 
  4157bd:	dec    ebp
  4157be:	aaa    
  4157bf:	fsubr  st(1),st
  4157c1:	(bad)  
  4157c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157c3:	imul   DWORD PTR [esi+0x60]
  4157c6:	stc    
  4157c7:	jecxz  0x415839
  4157c9:	js     0x4157a3
  4157cb:	pop    esp
  4157cc:	add    BYTE PTR ds:0xf280e12d,dl
  4157d2:	dec    edi
  4157d3:	push   ss
  4157d4:	adc    DWORD PTR [esi-0x29],ecx
  4157d7:	or     eax,DWORD PTR [ebp-0x14]
  4157da:	cmp    cl,bh
  4157dc:	add    DWORD PTR [ecx+0x490bd3d5],ecx
  4157e2:	cld    
  4157e3:	inc    ebp
  4157e4:	das    
  4157e5:	data16 cmp al,0x84
  4157e8:	fs sahf 
  4157ea:	pop    esi
  4157eb:	jo     0x415800
  4157ed:	inc    ebx
  4157ee:	push   esp
  4157ef:	jmp    0xc2010af7
  4157f4:	jle    0x4157c3
  4157f6:	std    
  4157f7:	mov    ah,0xb8
  4157f9:	pop    eax
  4157fa:	stos   BYTE PTR es:[edi],al
  4157fb:	or     dl,bh
  4157fd:	push   cs
  4157fe:	and    ch,BYTE PTR [eax-0x48367a80]
  415804:	jno    0x41584a
  415806:	mov    ah,0x92
  415808:	dec    edi
  415809:	jmp    0xb95d:0xc975553f
  415810:	xchg   DWORD PTR [eax],ebx
  415812:	(bad)  
  415813:	fild   DWORD PTR ds:0xb2f9f3bc
  415819:	retf   
  41581a:	push   edx
  41581b:	jbe    0x415860
  41581d:	popf   
  41581e:	or     al,0xa0
  415820:	and    ah,0xb0
  415823:	add    eax,0x7d970b2b
  415828:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41582a:	adc    al,0x48
  41582c:	dec    esp
  41582d:	xchg   edx,eax
  41582e:	daa    
  41582f:	loope  0x415828
  415831:	mov    edx,ss
  415833:	frstor ss:[edi+ebp*2-0x261b44a1]
  41583b:	test   eax,0x738ecef9
  415840:	pop    ss
  415841:	xor    DWORD PTR [esi+0x8],ecx
  415844:	stc    
  415845:	test   al,0x86
  415847:	or     al,0xc0
  415849:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41584a:	sub    al,BYTE PTR [eax]
  41584c:	mov    BYTE PTR [ecx+0x31],cl
  41584f:	leave  
  415850:	loope  0x41589c
  415852:	out    0x58,al
  415854:	pop    esp
  415855:	fiadd  DWORD PTR [edx]
  415857:	fdivr  QWORD PTR [esi]
  415859:	cli    
  41585a:	xchg   BYTE PTR [esi+0x4295f324],dl
  415860:	jb     0x4157ff
  415862:	jmp    DWORD PTR [eax+edx*2-0x6c938fcf]
  415869:	jg     0x415855
  41586b:	jo     0x4158bf
  41586d:	es retf 0xa87e
  415871:	inc    ecx
  415872:	push   es
  415873:	in     al,dx
  415874:	fst    QWORD PTR [ebx+0x4c]
  415877:	fcmovnu st,st(4)
  415879:	add    DWORD PTR [ecx+0xb01dc8c],edi
  41587f:	xchg   esi,eax
  415880:	jmp    0x5198ae7f
  415885:	jb     0x41586a
  415887:	dec    eax
  415888:	push   eax
  415889:	mov    al,0x7
  41588b:	int    0xd1
  41588d:	jne    0x41586d
  41588f:	ret    0x3a0a
  415892:	jl     0x415912
  415894:	sbb    dl,BYTE PTR ds:0x2388e1e6
  41589a:	into   
  41589b:	repnz sbb DWORD PTR [ebp+0x31915afa],ebx
  4158a2:	and    eax,0xf96cef3
  4158a7:	mov    eax,ds:0x2465b729
  4158ac:	mov    al,0xb7
  4158ae:	leave  
  4158af:	sub    esi,DWORD PTR [edx-0x6e]
  4158b2:	xor    esp,edx
  4158b4:	jmp    0x415868
  4158b6:	xor    eax,0x8249ba8c
  4158bb:	dec    esi
  4158bc:	sahf   
  4158bd:	fs xor al,0x3a
  4158c0:	pop    esi
  4158c1:	inc    ecx
  4158c2:	or     BYTE PTR [eax],ah
  4158c4:	(bad)  
  4158c5:	push   eax
  4158c6:	pop    ebx
  4158c7:	cdq    
  4158c8:	inc    esp
  4158c9:	inc    ebx
  4158ca:	mov    edx,0x7ac6bc36
  4158cf:	mov    bh,0x43
  4158d1:	(bad)  
  4158d2:	dec    edx
  4158d3:	push   0xffffffc8
  4158d5:	or     dl,BYTE PTR [ebx-0x5f]
  4158d8:	jp     0x41585b
  4158da:	mov    esi,DWORD PTR [ebx+ecx*4+0x5e]
  4158de:	adc    al,0xd8
  4158e0:	bound  edi,QWORD PTR [edx+0x20]
  4158e3:	jnp    0x41594f
  4158e5:	add    DWORD PTR [ecx+0x7ea0f0c0],esi
  4158eb:	nop
  4158ec:	fdivr  DWORD PTR [edx+eax*1]
  4158ef:	or     eax,0xded17492
  4158f4:	cmp    al,0x4f
  4158f6:	dec    esi
  4158f7:	aad    0x78
  4158f9:	(bad)  
  4158fa:	out    dx,al
  4158fb:	fmul   DWORD PTR [edi-0x7a]
  4158fe:	int3   
  4158ff:	popa   
  415900:	sbb    eax,0xf23cedb
  415905:	push   es
  415906:	jmp    0x927a2cdc
  41590b:	lea    ecx,[ebx]
  41590d:	dec    esp
  41590e:	out    dx,al
  41590f:	aad    0x98
  415911:	sbb    eax,0x6452a24b
  415916:	pop    eax
  415917:	xchg   esp,eax
  415918:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415919:	loopne 0x4158cf
  41591b:	dec    eax
  41591c:	sub    BYTE PTR [esi],ch
  41591e:	jnp    0x4158bd
  415920:	cmp    DWORD PTR [eax-0x4df0c34f],0x140393b5
  41592a:	pusha  
  41592b:	les    esp,FWORD PTR [ecx+0xb]
  41592e:	jns    0x41590c
  415930:	jmp    DWORD PTR [ecx]
  415932:	xor    edx,eax
  415934:	aam    0x6a
  415936:	pop    ebx
  415937:	mov    esi,0x4b6dc9e
  41593c:	rcl    BYTE PTR [ebx+edi*8+0x1ba62867],cl
  415943:	sub    cl,cl
  415945:	jo     0x4159b5
  415947:	sub    BYTE PTR [ebp-0x7b30e23c],ah
  41594d:	xor    DWORD PTR [ecx],esi
  41594f:	xor    DWORD PTR [ecx+0x7b51ab7b],ecx
  415955:	or     bl,al
  415957:	xor    cl,BYTE PTR [ecx+0x74]
  41595a:	imul   esp,ebp,0x26
  41595d:	sub    al,0x13
  41595f:	bnd call 0xdfb6d9de
  415965:	push   ss
  415966:	mov    edi,0x5f319595
  41596b:	cmovae ebx,DWORD PTR [ebp+0x3d1e857a]
  415972:	stc    
  415973:	lahf   
  415974:	test   DWORD PTR [eax+0x2022ee28],0x2eb3dc4
  41597e:	in     al,dx
  41597f:	ret    
  415980:	mov    dh,0xbe
  415982:	pop    edx
  415983:	fild   DWORD PTR [ebx]
  415985:	push   0xffffffa1
  415987:	mov    edx,0x99c89a90
  41598c:	pusha  
  41598d:	add    dh,BYTE PTR [ecx-0x17114566]
  415993:	mov    eax,ds:0x8ce1339
  415998:	pop    ds
  415999:	sub    eax,ecx
  41599b:	sbb    ecx,edi
  41599d:	call   0x19ede967
  4159a2:	daa    
  4159a3:	dec    eax
  4159a4:	shl    BYTE PTR [esi],0x4b
  4159a7:	cmp    eax,0x5bb55d0b
  4159ac:	sub    esp,esp
  4159ae:	imul   edi,DWORD PTR [edx],0xffffffaf
  4159b1:	or     esp,DWORD PTR [ebx+0x24]
  4159b4:	jo     0x415937
  4159b6:	jg     0x4159f0
  4159b8:	fisttp DWORD PTR [esi+ecx*4+0xc]
  4159bc:	cmp    DWORD PTR [edx+0x59da99d],esp
  4159c2:	sub    DWORD PTR ds:0xeaf3fdf1,esi
  4159c8:	xor    al,0x2f
  4159ca:	lds    ebp,FWORD PTR [ebp+0x23]
  4159cd:	das    
  4159ce:	mov    al,ds:0xf4441aa5
  4159d3:	call   0xf06b:0x46926551
  4159da:	inc    edi
  4159db:	mov    dl,0x46
  4159dd:	imul   esi,esi,0x23
  4159e0:	push   esp
  4159e1:	mov    WORD PTR [edi],cs
  4159e3:	or     DWORD PTR [ebp-0x4ca19ae7],ebx
  4159e9:	adc    esi,DWORD PTR [ebx-0x2b]
  4159ec:	sub    ebp,edx
  4159ee:	popf   
  4159ef:	pop    es
  4159f0:	mov    ch,0x14
  4159f2:	js     0x415a1c
  4159f4:	outs   dx,BYTE PTR ds:[esi]
  4159f5:	jecxz  0x41598f
  4159f7:	push   esp
  4159f8:	xor    al,0x7a
  4159fa:	imul   BYTE PTR [edi]
  4159fc:	inc    eax
  4159fd:	mov    cl,0xe1
  4159ff:	add    edi,DWORD PTR [ebx]
  415a01:	sbb    BYTE PTR cs:[ecx],dl
  415a04:	fnsave [eax-0x3e]
  415a07:	and    al,0xf0
  415a09:	repz jmp 0x2eb6:0x770c5d59
  415a11:	xchg   esp,eax
  415a12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a13:	rcr    ch,1
  415a15:	lock dec ecx
  415a17:	mov    ah,0x0
  415a19:	test   BYTE PTR [ecx-0x2eac55dc],0xf0
  415a20:	jl     0x415a07
  415a22:	hlt    
  415a23:	mov    ch,0x8
  415a25:	mov    al,ds:0x34c36b77
  415a2a:	mov    esi,0x35d6ca0
  415a2f:	xor    edx,ecx
  415a31:	xor    al,0x39
  415a33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a34:	cmp    ch,BYTE PTR [edx+0x4cae885b]
  415a3a:	xor    bl,ah
  415a3c:	lea    esp,[edx-0x6]
  415a3f:	sub    DWORD PTR [edi+0x4c],ebx
  415a42:	jbe    0x415a18
  415a44:	pop    ds
  415a45:	or     DWORD PTR [edi-0x1b],eax
  415a48:	mov    BYTE PTR [ebx-0x39c64b19],ch
  415a4e:	hlt    
  415a4f:	clc    
  415a50:	aaa    
  415a51:	stos   DWORD PTR es:[edi],eax
  415a52:	jb     0x4159ee
  415a54:	sbb    BYTE PTR [ecx-0x3a],ch
  415a57:	and    DWORD PTR [ebp-0x3ac8a576],0x96f78929
  415a61:	test   al,0x22
  415a63:	ret    
  415a64:	cmp    BYTE PTR [eax-0x22810d],bl
  415a6a:	jb     0x4159f9
  415a6c:	loopne 0x415a93
  415a6e:	xor    dh,BYTE PTR [edx+0x72]
  415a71:	push   eax
  415a72:	iret   
  415a73:	dec    ebp
  415a74:	sahf   
  415a75:	push   eax
  415a76:	mov    esp,0x54e852ac
  415a7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a7c:	int    0x10
  415a7e:	xchg   ecx,eax
  415a7f:	dec    esi
  415a80:	(bad)  
  415a81:	mov    ebx,0x5fb39666
  415a86:	test   eax,0x53e99832
  415a8b:	cli    
  415a8c:	mov    dl,0x74
  415a8e:	sub    edx,DWORD PTR [ecx+0x7a]
  415a91:	loop   0x415aa3
  415a93:	jne    0x415a5f
  415a95:	pop    edx
  415a96:	add    eax,0xe78cd1d4
  415a9b:	into   
  415a9c:	and    eax,0x675f9145
  415aa1:	dec    edi
  415aa2:	jl     0x415a2d
  415aa4:	and    BYTE PTR [ebx+0x489fd11],bl
  415aaa:	shl    DWORD PTR [esi+0x34],cl
  415aad:	mov    BYTE PTR [edi],bh
  415aaf:	dec    eax
  415ab0:	ret    0x23c4
  415ab3:	ins    BYTE PTR es:[edi],dx
  415ab4:	push   edi
  415ab5:	mov    edx,0xceced21d
  415aba:	shl    ch,0x2c
  415abd:	into   
  415abe:	pop    edx
  415abf:	cmp    BYTE PTR [esi+esi*8-0x72],cl
  415ac3:	das    
  415ac4:	xor    ebx,DWORD PTR [edi+0x41]
  415ac7:	add    BYTE PTR [ecx],0xdd
  415aca:	inc    ebx
  415acb:	fdivr  DWORD PTR [eax]
  415acd:	and    al,0x28
  415acf:	mov    ds:0x5b3a6f2a,eax
  415ad4:	test   BYTE PTR [ebp-0x5b],bl
  415ad7:	das    
  415ad8:	mov    WORD PTR [esi+0x32],es
  415adb:	ret    
  415adc:	call   0xd0a4:0x7e0b764b
  415ae3:	mov    ebp,DWORD PTR [bx]
  415ae6:	adc    al,0x13
  415ae8:	arpl   WORD PTR [ebx],sp
  415aea:	cmp    BYTE PTR [eax-0x56],dl
  415aed:	mov    dl,0xcd
  415aef:	adc    al,0xbd
  415af1:	ds mov dh,0x76
  415af4:	push   es
  415af5:	popf   
  415af6:	lds    eax,FWORD PTR [ebp+0x4d624e39]
  415afc:	shl    DWORD PTR [edi+0x31],1
  415aff:	sar    ecx,cl
  415b01:	gs mov eax,0x7e58f7bd
  415b07:	jae    0x415b16
  415b09:	daa    
  415b0a:	(bad)  
  415b0b:	push   0x1b
  415b0d:	fcomp  DWORD PTR [edx+0x28999f61]
  415b13:	and    ch,al
  415b15:	mov    cl,0x4f
  415b17:	push   cs
  415b18:	fld    TBYTE PTR [ebp-0x2e72828b]
  415b1e:	pop    ds
  415b1f:	dec    ebp
  415b20:	pop    esp
  415b21:	pop    ebx
  415b22:	js     0x415ac9
  415b24:	rcl    BYTE PTR [eax+eax*4-0x7c],0xbe
  415b29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b2a:	cmp    BYTE PTR [eax+eax*2],dl
  415b2d:	xchg   edi,eax
  415b2e:	ss jmp 0xd8ad:0x20cfd837
  415b36:	call   0xf17c:0xa9c5326a
  415b3d:	clc    
  415b3e:	(bad)  
  415b3f:	fwait
  415b40:	jge    0x415b7f
  415b42:	test   BYTE PTR [ecx+eiz*4+0x3755182a],bh
  415b49:	lahf   
  415b4a:	lahf   
  415b4b:	fcmovb st,st(7)
  415b4d:	jecxz  0x415b67
  415b4f:	idiv   ah
  415b51:	jg     0x415aed
  415b53:	retf   
  415b54:	push   ebx
  415b55:	imul   DWORD PTR [ebx]
  415b57:	out    0x20,eax
  415b59:	mov    ecx,0xd348e733
  415b5e:	outs   dx,BYTE PTR ds:[esi]
  415b5f:	stos   DWORD PTR es:[edi],eax
  415b60:	and    ecx,DWORD PTR [eax+0x7]
  415b63:	cmp    ah,BYTE PTR [eax+0x72708c48]
  415b69:	sbb    al,0x5
  415b6b:	xchg   esp,eax
  415b6c:	inc    esi
  415b6d:	dec    eax
  415b6e:	cmc    
  415b6f:	jae    0x415bbc
  415b71:	in     al,dx
  415b72:	jmp    0x7c83fbbf
  415b77:	daa    
  415b78:	mov    dl,0x2c
  415b7a:	mov    bh,0x74
  415b7c:	push   ecx
  415b7d:	adc    edi,DWORD PTR [esp+eiz*4-0x77]
  415b81:	jge    0x415bd4
  415b83:	fnstenv [edx+0x15]
  415b86:	or     eax,0x7a949d10
  415b8b:	out    dx,al
  415b8c:	mov    al,0x8f
  415b8e:	xchg   ebx,eax
  415b8f:	jmp    DWORD PTR [edx-0x4ac105fb]
  415b95:	in     eax,dx
  415b96:	or     al,ah
  415b98:	xchg   esi,eax
  415b99:	repz mov bl,BYTE PTR ds:0x4e0f7421
  415ba0:	leave  
  415ba1:	cmp    eax,0x261655f
  415ba6:	mul    DWORD PTR [edx]
  415ba8:	mov    bh,BYTE PTR [esp+ecx*4]
  415bab:	add    al,0x25
  415bad:	ss or  al,0x30
  415bb0:	pop    es
  415bb1:	ja     0x415b54
  415bb3:	or     al,al
  415bb5:	out    0x14,al
  415bb7:	fcom   DWORD PTR ss:[ebx-0x4c906fe5]
  415bbe:	add    al,0xcb
  415bc0:	sbb    eax,0x6283ceef
  415bc5:	fidivr DWORD PTR [ecx-0x3d4c42ed]
  415bcb:	xchg   esp,eax
  415bcc:	add    DWORD PTR [edx-0x6958a4a],edx
  415bd2:	(bad)  
  415bd3:	jnp    0x415b74
  415bd5:	cmp    eax,DWORD PTR [esi+0x12a90b04]
  415bdb:	sar    ebp,1
  415bdd:	and    esi,DWORD PTR [edx]
  415bdf:	nop
  415be0:	mov    al,ds:0x11c160f2
  415be5:	adc    DWORD PTR [eax],esi
  415be7:	es stc 
  415be9:	retf   
  415bea:	push   es
  415beb:	pop    ebx
  415bec:	scas   eax,DWORD PTR es:[edi]
  415bed:	out    dx,eax
  415bee:	addr16 inc ebp
  415bf0:	add    BYTE PTR [ebx],cl
  415bf2:	inc    ebp
  415bf3:	das    
  415bf4:	sub    DWORD PTR [ecx+ebx*8-0x7a7ef6b7],ebx
  415bfb:	jno    0x415ba9
  415bfd:	dec    eax
  415bfe:	sbb    BYTE PTR [ecx],bl
  415c00:	adc    DWORD PTR [esi],ecx
  415c02:	jbe    0x415c76
  415c04:	nop
  415c05:	sub    al,0xe7
  415c07:	(bad)  
  415c08:	test   al,0xf
  415c0a:	imul   edx,DWORD PTR [edx+edi*4+0x1c],0x7897e0aa
  415c12:	xchg   edi,eax
  415c13:	add    al,BYTE PTR [edi]
  415c15:	mov    ds:0x70310b8a,al
  415c1a:	cs mov bl,0x9d
  415c1d:	cwde   
  415c1e:	test   bh,bl
  415c20:	data16 adc bl,dl
  415c23:	push   0x96f33c30
  415c28:	jb     0x415bfd
  415c2a:	mov    ebp,0x85e1d820
  415c2f:	and    BYTE PTR [edx],dh
  415c31:	lods   eax,DWORD PTR ds:[esi]
  415c32:	xchg   DWORD PTR [ebp-0x6250f414],ebp
  415c38:	cli    
  415c39:	and    ebp,esp
  415c3b:	pop    ss
  415c3c:	push   ds
  415c3d:	push   edx
  415c3e:	sti    
  415c3f:	dec    edx
  415c40:	xchg   BYTE PTR [ecx+0x5b],cl
  415c43:	sub    al,0x95
  415c45:	loope  0x415c02
  415c47:	adc    eax,0xfdad8e61
  415c4c:	gs mov ebx,esi
  415c4f:	outs   dx,BYTE PTR ds:[esi]
  415c50:	jbe    0x415caf
  415c52:	dec    edx
  415c53:	dec    ebp
  415c54:	xchg   ebp,eax
  415c55:	or     al,dh
  415c57:	pop    esi
  415c58:	test   BYTE PTR [edi+0x9246fe0],dl
  415c5e:	adc    bl,BYTE PTR [ebx+0x7b369fce]
  415c64:	out    dx,al
  415c65:	scas   eax,DWORD PTR es:[edi]
  415c66:	movzx  eax,BYTE PTR [edx-0x50d01180]
  415c6d:	jle    0x415c7f
  415c6f:	aam    0xc6
  415c71:	inc    esi
  415c72:	popa   
  415c73:	and    eax,0x937b720
  415c78:	(bad)  [edx-0x71]
  415c7b:	adc    BYTE PTR [ecx-0x18],0x62
  415c7f:	or     BYTE PTR [ebx-0x3],ah
  415c82:	sbb    bh,dh
  415c84:	jb     0x415c63
  415c86:	bound  ebx,QWORD PTR [edx-0x3c]
  415c89:	xor    dl,BYTE PTR [esi]
  415c8b:	lods   al,BYTE PTR ds:[esi]
  415c8c:	sub    eax,0x3f5591c8
  415c91:	cli    
  415c92:	jbe    0x415c69
  415c94:	cmc    
  415c95:	fisttp QWORD PTR [ecx+0x11]
  415c98:	fcmovu st,st(7)
  415c9a:	cwde   
  415c9b:	lahf   
  415c9c:	jns    0x415cee
  415c9e:	ret    
  415c9f:	data16 mov ds:0x6c5f6ad5,al
  415ca5:	popf   
  415ca6:	stos   BYTE PTR es:[edi],al
  415ca7:	ds fdivr st(3),st
  415caa:	mov    BYTE PTR ds:0xe6787ccc,ah
  415cb0:	inc    ecx
  415cb1:	inc    edi
  415cb2:	inc    ecx
  415cb3:	push   ebp
  415cb4:	retf   
  415cb5:	xchg   ecx,eax
  415cb6:	xor    BYTE PTR [edx-0x18d9fb47],dl
  415cbc:	test   al,0xf9
  415cbe:	sub    bh,BYTE PTR ds:0xa26a5d20
  415cc4:	cmp    ebx,esp
  415cc6:	mov    BYTE PTR [edi+0x24],bl
  415cc9:	push   ss
  415cca:	ret    
  415ccb:	rcl    DWORD PTR [edx],0xda
  415cce:	pop    ss
  415ccf:	mov    esi,0xd67eff3b
  415cd4:	sahf   
  415cd5:	sub    BYTE PTR [ebx+ecx*4+0x1cb4a8e],al
  415cdc:	gs mov bl,ah
  415cdf:	xchg   ebp,eax
  415ce0:	mov    BYTE PTR [eax],ah
  415ce2:	push   edx
  415ce3:	(bad)  
  415ce5:	pop    edi
  415ce6:	aaa    
  415ce7:	stos   DWORD PTR es:[edi],eax
  415ce8:	push   ebx
  415ce9:	mov    BYTE PTR [ebp+0x54],ah
  415cec:	adc    DWORD PTR [esi+0x65],ebx
  415cef:	jg     0x415d0c
  415cf1:	mov    eax,0x61fe7361
  415cf6:	and    eax,0x613d4f8f
  415cfb:	int    0x9d
  415cfd:	lahf   
  415cfe:	push   esi
  415cff:	shl    BYTE PTR [edx],cl
  415d01:	adc    al,0xb9
  415d03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d04:	push   0x1b
  415d06:	mov    ds:0x2818a005,eax
  415d0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d0c:	push   esp
  415d0d:	dec    edi
  415d0e:	arpl   WORD PTR [esi],ax
  415d10:	es cdq 
  415d12:	add    bh,BYTE PTR [ebx+0x31]
  415d15:	dec    esp
  415d16:	stos   BYTE PTR es:[edi],al
  415d17:	or     al,0xa4
  415d19:	test   BYTE PTR [esi-0x2b0ebaa3],0x2c
  415d20:	and    DWORD PTR [ebx+ebp*4-0x74e1e520],ebp
  415d27:	push   ebp
  415d28:	das    
  415d29:	sti    
  415d2a:	mov    dl,bh
  415d2c:	mov    al,BYTE PTR [esi+0x9]
  415d2f:	sub    bl,BYTE PTR [ebp+0x7c]
  415d32:	lods   eax,DWORD PTR ds:[esi]
  415d33:	xor    edx,DWORD PTR [edx+0x49]
  415d36:	sbb    ch,BYTE PTR ds:0x1e4b4567
  415d3c:	ins    DWORD PTR es:[edi],dx
  415d3d:	xchg   esp,eax
  415d3e:	sbb    BYTE PTR [ecx],0xb8
  415d41:	clc    
  415d42:	push   ecx
  415d43:	scas   eax,DWORD PTR es:[edi]
  415d44:	inc    eax
  415d45:	outs   dx,DWORD PTR ds:[esi]
  415d46:	pop    DWORD PTR [esi+0x5c]
  415d49:	stc    
  415d4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d4b:	jb     0x415d74
  415d4d:	shl    BYTE PTR [edi-0xdd2b13b],0x30
  415d54:	scas   eax,DWORD PTR es:[edi]
  415d55:	nop
  415d56:	jg     0x415dab
  415d58:	mov    al,ds:0xc7a6102b
  415d5d:	(bad)  
  415d5f:	mov    bh,0x7e
  415d61:	push   ds
  415d62:	lahf   
  415d63:	enter  0xe3fd,0xbc
  415d67:	mov    al,ds:0x15334ff4
  415d6c:	and    DWORD PTR [ecx],eax
  415d6e:	imul   ebx,DWORD PTR [ebp-0x7f958a67],0xffffff99
  415d75:	sub    al,0x46
  415d77:	hlt    
  415d78:	dec    ebp
  415d7a:	push   es
  415d7b:	or     eax,0xccad8bb2
  415d80:	sub    al,0xbf
  415d82:	movaps xmm2,xmm3
  415d85:	jno    0x415d08
  415d87:	jg     0x415d78
  415d89:	cdq    
  415d8a:	stc    
  415d8b:	rol    BYTE PTR [ecx+0x55],0xd0
  415d8f:	cmp    al,0xee
  415d91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d92:	(bad)  
  415d93:	(bad)  
  415d94:	xor    cl,BYTE PTR [eax]
  415d96:	ror    BYTE PTR [eax+0x1],cl
  415d99:	pop    esp
  415d9a:	aam    0x2c
  415d9c:	imul   esi,DWORD PTR [edi+0x46],0x5b63dbc7
  415da3:	ja     0x415e1a
  415da5:	add    eax,0x8471c77f
  415daa:	add    DWORD PTR [edi],edi
  415dac:	dec    bl
  415dae:	test   DWORD PTR [ebp+0x6c],esp
  415db1:	stos   DWORD PTR es:[edi],eax
  415db2:	fisubr WORD PTR [edi-0x14e08aa4]
  415db8:	or     ebp,DWORD PTR [edi+0x73738b66]
  415dbe:	or     BYTE PTR [ecx],al
  415dc0:	mov    ebx,0x884cb46
  415dc5:	dec    ebx
  415dc6:	xchg   ebx,eax
  415dc7:	mov    edx,0xc85a3f4c
  415dcc:	popf   
  415dcd:	jmp    0x415d86
  415dcf:	mov    dh,0x2
  415dd1:	(bad)  
  415dd2:	mov    ebp,0xa5ba1e36
  415dd7:	popa   
  415dd8:	jns    0x415d9b
  415dda:	ins    DWORD PTR es:[edi],dx
  415ddb:	mov    ecx,0x87244ce8
  415de0:	loopne 0x415da3
  415de2:	xor    al,0x52
  415de4:	pushf  
  415de5:	gs cdq 
  415de7:	data16 loopne 0x415e3f
  415dea:	sub    eax,0xc306f48e
  415def:	out    0x48,eax
  415df1:	cwde   
  415df2:	jmp    0xdb6b:0x81784e00
  415df9:	sahf   
  415dfa:	inc    esi
  415dfb:	mov    ebx,0x69347a2c
  415e00:	sub    eax,esi
  415e02:	add    eax,0x3b79dcc8
  415e07:	shl    esi,1
  415e09:	ds addr16 daa 
  415e0c:	mov    esp,0x42262e54
  415e11:	push   ebp
  415e12:	stos   DWORD PTR es:[edi],eax
  415e13:	std    
  415e14:	out    0xf6,eax
  415e16:	lods   eax,DWORD PTR es:[esi]
  415e18:	pop    eax
  415e19:	(bad)  
  415e1a:	pusha  
  415e1b:	sub    bh,BYTE PTR [esi]
  415e1d:	xor    eax,0x642717f4
  415e22:	fnsave [ebx-0xa]
  415e25:	adc    DWORD PTR [esi+eax*4-0x25e93100],edi
  415e2c:	push   ebp
  415e2d:	mov    bh,0xcd
  415e2f:	shl    BYTE PTR [eax-0x6b],1
  415e32:	or     al,0x76
  415e34:	sar    DWORD PTR [esp+eiz*2-0x6c45cb2d],cl
  415e3b:	stos   DWORD PTR es:[edi],eax
  415e3c:	pop    es
  415e3d:	mov    al,cl
  415e3f:	push   ds
  415e40:	mov    dl,0xe4
  415e42:	and    cl,0xa0
  415e45:	mov    BYTE PTR [esi+esi*2],cl
  415e48:	out    0xf9,eax
  415e4a:	cmp    bl,BYTE PTR [esi+0x35c7bb86]
  415e50:	pusha  
  415e51:	aad    0x1d
  415e53:	lods   eax,DWORD PTR ds:[esi]
  415e54:	cld    
  415e55:	into   
  415e56:	fbld   TBYTE PTR [esi+esi*8+0x44]
  415e5a:	jns    0x415e42
  415e5c:	xchg   edx,eax
  415e5d:	ror    ah,cl
  415e5f:	rol    DWORD PTR [ecx-0x424959eb],cl
  415e65:	mov    ds:0x641cbdd2,eax
  415e6a:	fcmovnb st,st(1)
  415e6c:	sub    eax,eax
  415e6e:	rcl    DWORD PTR [edi],1
  415e70:	xchg   DWORD PTR [edx+0x4fe1cfef],esi
  415e76:	mov    ah,0xc2
  415e78:	fnstsw WORD PTR [esp+esi*2+0x3]
  415e7c:	mov    ebx,0xb8cce78b
  415e81:	ds inc bp
  415e84:	call   0x7a581935
  415e89:	dec    edi
  415e8a:	sbb    eax,0xe1fff704
  415e8f:	add    ch,BYTE PTR [ebp-0x3f2e2a75]
  415e95:	jecxz  0x415e69
  415e97:	mov    edi,0xe4b7a75d
  415e9c:	or     edx,DWORD PTR [esi-0x3a94eefe]
  415ea2:	fsubr  DWORD PTR [edi]
  415ea4:	add    al,0x43
  415ea6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ea7:	test   DWORD PTR [esi],ebx
  415ea9:	xor    eax,0x398c3e73
  415eae:	aaa    
  415eaf:	retf   0x4a5b
  415eb2:	sub    BYTE PTR [esi],cl
  415eb4:	jge    0x415f24
  415eb6:	jb     0x415ec1
  415eb8:	ds or  eax,0xaf0a754d
  415ebe:	icebp  
  415ebf:	or     BYTE PTR [ebp-0x1d935d41],ch
  415ec5:	mov    ebx,DWORD PTR [eax-0x649a5500]
  415ecb:	enter  0xf03d,0xe1
  415ecf:	push   esp
  415ed0:	jmp    0x27e1:0x85c8cc3b
  415ed7:	loope  0x415eaf
  415ed9:	adc    ah,0x41
  415edc:	cli    
  415edd:	cdq    
  415ede:	ds xor al,0xf6
  415ee1:	dec    esi
  415ee2:	pop    ebx
  415ee3:	adc    al,0x4c
  415ee5:	sbb    dh,dl
  415ee7:	inc    edx
  415ee8:	(bad)  
  415ee9:	aas    
  415eea:	mov    DWORD PTR ds:0x28975680,esi
  415ef0:	popf   
  415ef1:	sahf   
  415ef2:	jno    0x415f51
  415ef4:	jg     0x415e90
  415ef6:	xchg   ebp,eax
  415ef7:	mov    ds:0x806aed97,eax
  415efc:	mov    ?,WORD PTR [esi]
  415efe:	inc    esi
  415eff:	ret    
  415f00:	mov    al,ch
  415f02:	imul   esi,DWORD PTR [eax+ebx*4],0xffffffc5
  415f06:	add    DWORD PTR [ecx+esi*8],edi
  415f09:	(bad)  
  415f0a:	mov    eax,ds:0xf331d2b3
  415f0f:	scas   eax,DWORD PTR es:[edi]
  415f10:	xor    al,0x50
  415f12:	add    eax,0x7436b214
  415f17:	mov    ds:0xe067c7d4,al
  415f1c:	mov    bh,0xc3
  415f1e:	xchg   edi,eax
  415f1f:	(bad)  
  415f20:	jbe    0x415eb2
  415f22:	test   al,0xc9
  415f24:	mov    ebx,0x89e38c0f
  415f29:	adc    al,cl
  415f2b:	mov    ecx,0x849462cc
  415f30:	lds    ebx,FWORD PTR [ebp-0x35]
  415f33:	aas    
  415f34:	test   eax,0x9a18c458
  415f39:	stos   BYTE PTR es:[edi],al
  415f3a:	je     0x415f61
  415f3c:	dec    esp
  415f3d:	dec    esp
  415f3e:	(bad)  
  415f3f:	push   0x7b5f5543
  415f44:	add    BYTE PTR [eax-0xe705934],bl
  415f4a:	adc    eax,0x486e841d
  415f4f:	inc    eax
  415f50:	dec    edx
  415f51:	ins    BYTE PTR es:[edi],dx
  415f52:	cmp    DWORD PTR [edx],edx
  415f54:	jp     0x415fb8
  415f56:	pop    ds
  415f57:	scas   eax,DWORD PTR es:[edi]
  415f58:	leave  
  415f59:	std    
  415f5a:	cdq    
  415f5b:	mov    ebp,0x20bd40a5
  415f60:	adc    DWORD PTR [ebx+0x230cbbcd],eax
  415f66:	(bad)  
  415f67:	sti    
  415f68:	lock aas 
  415f6a:	and    esp,DWORD PTR [eax+0x793753e9]
  415f70:	mov    dh,0x6c
  415f72:	paddsw mm5,QWORD PTR [ecx-0x4]
  415f76:	fwait
  415f77:	adc    ecx,DWORD PTR [edx-0x44]
  415f7a:	mov    al,dl
  415f7c:	or     cl,BYTE PTR [eiz*1-0xfb85b63]
  415f83:	cmp    eax,eax
  415f85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f86:	sub    eax,0x3f0bd314
  415f8b:	in     eax,0x41
  415f8d:	xor    eax,0xbe057f99
  415f92:	retf   
  415f93:	adc    ecx,DWORD PTR [ecx+ecx*2+0x34e119b]
  415f9a:	pop    edi
  415f9b:	inc    esp
  415f9c:	dec    esp
  415f9d:	sbb    al,0xbc
  415f9f:	pop    edx
  415fa0:	neg    BYTE PTR [ebp+0xfb96f27]
  415fa6:	add    eax,0x88a497c0
  415fab:	jo     0x415fa5
  415fad:	cmp    al,0x87
  415faf:	jne    0x415f97
  415fb1:	xchg   ebx,eax
  415fb2:	pusha  
  415fb3:	loopne 0x415f80
  415fb5:	rcl    DWORD PTR [edx+0x5c1d1d3f],cl
  415fbb:	fadd   DWORD PTR [edx+0x1411e2df]
  415fc1:	shl    DWORD PTR [esi+0x6a],1
  415fc4:	loopne 0x416013
  415fc6:	push   eax
  415fc7:	push   esp
  415fc8:	xchg   DWORD PTR [edi],edx
  415fca:	adc    al,0xee
  415fcc:	jno    0x416019
  415fce:	out    dx,al
  415fcf:	adc    DWORD PTR [edi+0x515e1232],ebx
  415fd5:	dec    ebp
  415fd6:	mov    esi,0x5a0f2f71
  415fdb:	loope  0x415fea
  415fdd:	mov    bh,0x2d
  415fdf:	iret   
  415fe0:	mov    eax,ds:0x2a30010d
  415fe5:	mov    bh,0xb0
  415fe7:	cs (bad) 
  415fe9:	ret    
  415fea:	leave  
  415feb:	jne    0x415fa5
  415fed:	pop    edi
  415fee:	xor    al,0x72
  415ff0:	das    
  415ff1:	sbb    al,0xf8
  415ff3:	push   esp
  415ff4:	aad    0x5a
  415ff6:	ror    edx,0x1e
  415ff9:	daa    
  415ffa:	test   BYTE PTR [edx+0x9],cl
  415ffd:	adc    esi,DWORD PTR ds:0x5332955c
  416003:	lahf   
  416004:	or     bl,0x11
  416007:	sbb    DWORD PTR [ecx-0x6d],ebx
  41600a:	xchg   ecx,eax
  41600b:	loop   0x415fc7
  41600d:	das    
  41600e:	(bad)  
  41600f:	lds    ebp,FWORD PTR [edx]
  416011:	les    ebp,FWORD PTR [esi-0x4eb43ead]
  416017:	ss mov dl,0x23
  41601a:	push   esi
  41601b:	adc    DWORD PTR [ecx],edx
  41601d:	push   ds
  41601e:	(bad)  
  41601f:	mov    ebx,0xe81bacd8
  416024:	in     al,0x77
  416026:	into   
  416027:	(bad)  
  416028:	xchg   edi,eax
  416029:	fnstenv [edx-0x1e]
  41602c:	adc    BYTE PTR [esp+ecx*2],ah
  41602f:	jno    0x415fd6
  416031:	sbb    al,0x92
  416033:	test   BYTE PTR [esi-0x3561e555],ch
  416039:	ss push es
  41603b:	or     al,0x3e
  41603d:	scas   al,BYTE PTR es:[edi]
  41603e:	sbb    BYTE PTR [esi+0x2a],dl
  416041:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416042:	rcr    edi,0xaa
  416045:	fcomp  DWORD PTR [esi]
  416047:	fcomp  DWORD PTR [eax+0x4f]
  41604a:	pushf  
  41604b:	fsub   st,st(5)
  41604d:	lahf   
  41604e:	mov    cl,0x9
  416050:	rol    DWORD PTR [eax+0x7b],cl
  416053:	sbb    bh,BYTE PTR ds:0x1fb4b960
  416059:	scas   al,BYTE PTR es:[edi]
  41605a:	outs   dx,DWORD PTR ds:[esi]
  41605b:	mov    ch,0x56
  41605d:	enter  0xfa5c,0xb4
  416061:	in     eax,dx
  416062:	out    dx,al
  416063:	dec    esp
  416064:	inc    ecx
  416065:	sub    ebp,DWORD PTR [eax-0x6e4988dd]
  41606b:	aam    0xf6
  41606d:	stos   DWORD PTR es:[edi],eax
  41606e:	arpl   WORD PTR [ecx],cx
  416070:	and    dl,dl
  416072:	jae    0x41603f
  416074:	stos   DWORD PTR es:[edi],eax
  416075:	aaa    
  416076:	aam    0xe1
  416078:	sahf   
  416079:	mov    ?,WORD PTR [esi+eiz*2-0xdb29c7]
  416080:	inc    ebp
  416081:	in     eax,0x71
  416083:	sti    
  416084:	ins    BYTE PTR es:[edi],dx
  416085:	xlat   BYTE PTR ds:[ebx]
  416086:	repnz inc ecx
  416088:	clc    
  416089:	shl    eax,1
  41608b:	adc    al,0x3a
  41608d:	dec    edx
  41608e:	psubusw mm2,mm4
  416091:	dec    eax
  416092:	jae    0x4160dd
  416094:	fild   QWORD PTR [edi-0x46]
  416097:	sar    DWORD PTR [ebp+0x202093a8],0x91
  41609e:	scas   al,BYTE PTR es:[edi]
  41609f:	xor    edx,DWORD PTR [esi]
  4160a1:	leave  
  4160a2:	sbb    BYTE PTR [ecx-0x21aa0ca1],cl
  4160a8:	jae    0x41604b
  4160aa:	or     bh,BYTE PTR [edx-0x4b]
  4160ad:	mov    ds:0xb2cc75e4,eax
  4160b2:	adc    BYTE PTR [edi],dl
  4160b4:	mov    ch,0x3
  4160b6:	mov    dl,0x9e
  4160b8:	gs push ebx
  4160ba:	mov    bl,0x34
  4160bc:	pop    ebp
  4160bd:	jp     0x416090
  4160bf:	and    BYTE PTR [ebp-0x791b8acb],dh
  4160c5:	in     al,dx
  4160c6:	pop    edx
  4160c7:	sub    DWORD PTR [eax+ebp*8],edi
  4160ca:	aam    0x73
  4160cc:	inc    esi
  4160cd:	adc    ch,cl
  4160cf:	sub    eax,0x74529f37
  4160d4:	addr16 icebp 
  4160d6:	call   0x873e8b8a
  4160db:	clc    
  4160dc:	std    
  4160dd:	jae    0x416095
  4160df:	lahf   
  4160e0:	mov    edx,0xa0c08334
  4160e5:	(bad)  
  4160e6:	jg     0x416106
  4160e8:	jg     0x4160f5
  4160ea:	jl     0x4160b5
  4160ec:	dec    edi
  4160ed:	inc    edi
  4160ee:	xor    al,0x39
  4160f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160f1:	mov    esp,0xebc2decd
  4160f6:	fstp   DWORD PTR [ecx+0x49]
  4160f9:	je     0x416147
  4160fb:	out    dx,al
  4160fc:	push   edx
  4160fd:	jmp    FWORD PTR [ebx]
  4160ff:	sub    cl,dl
  416101:	push   edi
  416102:	pushf  
  416103:	cld    
  416104:	lods   eax,DWORD PTR ds:[esi]
  416105:	or     DWORD PTR [esi+0x57],edi
  416108:	cwde   
  416109:	ret    
  41610a:	mov    dh,0x6
  41610c:	add    DWORD PTR [esp+ebp*4],esi
  41610f:	mov    DWORD PTR [ebx-0x6c],0x8f075a52
  416116:	sbb    eax,0xbee681bf
  41611b:	daa    
  41611c:	fmul   DWORD PTR [edi]
  41611e:	loop   0x4160aa
  416120:	shl    esp,0x93
  416123:	sub    ebx,edi
  416125:	cwde   
  416126:	mov    cs,WORD PTR [edi]
  416128:	mov    ch,0x9e
  41612a:	mov    ecx,0xd0d9eb8e
  41612f:	(bad)  
  416130:	lock push ebx
  416132:	js     0x4161aa
  416134:	inc    eax
  416135:	xor    BYTE PTR [ecx-0x2237fc17],bh
  41613b:	pop    ebx
  41613c:	push   eax
  41613d:	mov    ds:0x35e17682,eax
  416142:	mov    BYTE PTR [eax+0xd7d3652],cl
  416148:	call   0x1293:0x3d9454b3
  41614f:	mov    esi,0x6735d3ef
  416154:	mov    ecx,ebp
  416156:	inc    edi
  416157:	inc    edi
  416158:	push   eax
  416159:	clc    
  41615a:	inc    ebp
  41615b:	mov    WORD PTR [eax-0x6f],?
  41615e:	ss fs stc 
  416161:	adc    edi,esi
  416163:	jns    0x416148
  416165:	das    
  416166:	dec    eax
  416167:	cwde   
  416168:	and    al,0x85
  41616a:	mov    edi,DWORD PTR [ebp+0x1d]
  41616d:	jecxz  0x416171
  41616f:	lds    esp,FWORD PTR [eax]
  416171:	jge    0x41619d
  416173:	ins    DWORD PTR es:[edi],dx
  416174:	push   ss
  416175:	pop    ds
  416176:	out    0x22,al
  416178:	jg     0x416142
  41617a:	adc    DWORD PTR [eax-0x53],eax
  41617d:	cli    
  41617e:	add    DWORD PTR [ebx-0x440eab33],esp
  416184:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416185:	enter  0x29c6,0x4e
  416189:	gs sahf 
  41618b:	mov    ch,0xc6
  41618d:	fwait
  41618e:	jg     0x41620a
  416190:	xchg   ebp,eax
  416191:	lods   eax,DWORD PTR ds:[esi]
  416192:	sahf   
  416193:	pushw  ss
  416195:	inc    ecx
  416196:	jecxz  0x4161d8
  416198:	adc    ebx,DWORD PTR [edx+0x3778e608]
  41619e:	inc    eax
  41619f:	shl    DWORD PTR [edi],0x76
  4161a2:	loop   0x416140
  4161a4:	jb     0x416135
  4161a6:	adc    ecx,edx
  4161a8:	pop    ecx
  4161a9:	dec    ebx
  4161aa:	hlt    
  4161ab:	aam    0x68
  4161ad:	mov    ecx,0xc8c564f6
  4161b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161b3:	add    edi,ecx
  4161b5:	cdq    
  4161b6:	bound  eax,QWORD PTR [esi]
  4161b8:	mov    cl,0x2f
  4161ba:	int3   
  4161bb:	sbb    BYTE PTR [esp+ebx*1],0x3f
  4161bf:	jle    0x41616d
  4161c1:	scas   al,BYTE PTR es:[edi]
  4161c2:	outs   dx,DWORD PTR ds:[esi]
  4161c3:	push   ds
  4161c4:	cmc    
  4161c5:	xor    edi,ecx
  4161c7:	push   edi
  4161c8:	cmp    DWORD PTR [esp+ebx*2-0x34],eax
  4161cc:	stos   BYTE PTR es:[edi],al
  4161cd:	mov    dh,0xae
  4161cf:	(bad)  
  4161d1:	xchg   ecx,eax
  4161d2:	inc    ecx
  4161d3:	fist   WORD PTR [edx+0x29]
  4161d6:	inc    esi
  4161d7:	outs   dx,BYTE PTR ds:[esi]
  4161d8:	imul   edx,DWORD PTR [ebx-0x1b611d8d],0xe62ca8ff
  4161e2:	pop    ebp
  4161e3:	xor    DWORD PTR [eax],ecx
  4161e5:	xor    cl,cl
  4161e7:	add    DWORD PTR [edx+0x30],0x72
  4161eb:	xchg   esi,eax
  4161ec:	mov    dl,0x9c
  4161ee:	inc    edx
  4161ef:	mov    ch,0x30
  4161f1:	sub    BYTE PTR [edi+eiz*1-0x60],dh
  4161f5:	jns    0x4161eb
  4161f7:	jae    0x4161a3
  4161f9:	sahf   
  4161fa:	test   eax,0x158e8d4
  4161ff:	dec    edi
  416200:	stos   DWORD PTR es:[edi],eax
  416201:	das    
  416202:	pusha  
  416203:	cmp    edi,esi
  416205:	div    DWORD PTR [ebp-0x17]
  416208:	int3   
  416209:	div    BYTE PTR [ebx]
  41620b:	popa   
  41620c:	dec    edi
  41620d:	mov    BYTE PTR ds:0xf7fe0b3d,cl
  416213:	inc    eax
  416214:	and    DWORD PTR [ecx-0x4c],esi
  416217:	(bad)  
  416218:	popa   
  416219:	dec    edx
  41621a:	stc    
  41621b:	repz xor eax,0xcac1809f
  416221:	test   bl,0xa0
  416224:	pushf  
  416225:	push   ds
  416226:	retf   0x3513
  416229:	xchg   edx,eax
  41622a:	jge    0x4161f3
  41622c:	ror    BYTE PTR [ebp-0x58f36d33],1
  416232:	mov    edx,0x8eadfb27
  416237:	lock xlat BYTE PTR ds:[ebx]
  416239:	data16 fcomip st,st(6)
  41623c:	inc    esp
  41623d:	inc    edi
  41623e:	sub    eax,0x9dadbded
  416243:	cmp    eax,0x4cfe3df5
  416248:	enter  0x84a7,0x42
  41624c:	push   ss
  41624d:	in     eax,0x7
  41624f:	rcr    eax,1
  416251:	cmc    
  416252:	adc    bl,cl
  416254:	sub    al,0x36
  416256:	cwde   
  416257:	mov    esi,0xe70825ab
  41625c:	adc    ecx,DWORD PTR [ebx-0x6e]
  41625f:	test   cl,0xba
  416262:	xchg   edx,eax
  416263:	(bad)  
  416265:	dec    edx
  416266:	and    BYTE PTR [edx],0x65
  416269:	adc    ebp,DWORD PTR [edi-0x3d]
  41626c:	jno    0x41629b
  41626e:	add    edi,ebp
  416270:	enter  0x91ee,0x76
  416274:	test   al,0x66
  416276:	jno    0x4162cf
  416278:	ins    DWORD PTR es:[edi],dx
  416279:	xor    BYTE PTR [esi+0x27],dh
  41627c:	dec    edi
  41627d:	push   0x3f
  41627f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416280:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416281:	pop    DWORD PTR [esi+ecx*8]
  416284:	je     0x416295
  416286:	mov    ah,bl
  416288:	out    dx,eax
  416289:	pop    ebx
  41628a:	cmp    al,0x6f
  41628c:	bound  ebx,QWORD PTR [edx+0x20]
  41628f:	inc    edx
  416290:	dec    eax
  416291:	or     al,BYTE PTR [ecx+0x24f1e146]
  416297:	xlat   BYTE PTR ds:[ebx]
  416298:	mov    cl,0xf2
  41629a:	test   al,0xc5
  41629c:	rcl    DWORD PTR [ebx+eax*8],cl
  41629f:	push   si
  4162a1:	add    ebp,DWORD PTR [ebx]
  4162a3:	adc    DWORD PTR es:[edx+0x8],0x40
  4162a8:	es cld 
  4162aa:	test   DWORD PTR [edi],ecx
  4162ac:	and    BYTE PTR [edx-0x75],cl
  4162af:	and    ch,BYTE PTR ds:0x20c6d608
  4162b5:	or     DWORD PTR [eax-0x74ce75f8],esi
  4162bb:	scas   al,BYTE PTR es:[edi]
  4162bc:	and    bl,BYTE PTR [ebp+0xa]
  4162bf:	test   al,0x40
  4162c1:	inc    DWORD PTR [esi-0x17]
  4162c4:	ins    DWORD PTR es:[edi],dx
  4162c5:	dec    edi
  4162c6:	cmp    eax,0xa7fcaf1c
  4162cb:	je     0x416289
  4162cd:	jp     0x416321
  4162cf:	pop    ss
  4162d0:	fbstp  TBYTE PTR [esi]
  4162d2:	mov    edi,0xf08f9a50
  4162d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4162d8:	cli    
  4162d9:	retf   
  4162da:	jl     0x4162f0
  4162dc:	popf   
  4162dd:	add    DWORD PTR [eax],ebx
  4162df:	(bad)  
  4162e0:	and    eax,0x1f7b809a
  4162e5:	out    0x2b,al
  4162e7:	outs   dx,DWORD PTR ds:[esi]
  4162e8:	dec    eax
  4162e9:	ins    BYTE PTR es:[edi],dx
  4162ea:	push   edi
  4162eb:	inc    ecx
  4162ec:	inc    ebp
  4162ed:	stc    
  4162ee:	pop    ecx
  4162ef:	stc    
  4162f0:	test   DWORD PTR ds:[esi+0x41],ebp
  4162f4:	xchg   esp,eax
  4162f5:	and    al,0x4c
  4162f7:	adc    DWORD PTR [ebp-0x7b],edx
  4162fa:	(bad)  
  4162fb:	fcom   QWORD PTR [edx+0x15deaea]
  416301:	(bad)  
  416302:	xchg   ebx,eax
  416303:	inc    esi
  416304:	es fwait
  416306:	jno    0x416346
  416308:	pushf  
  416309:	lods   eax,DWORD PTR ds:[esi]
  41630a:	stos   BYTE PTR es:[edi],al
  41630b:	or     bl,bh
  41630d:	xor    BYTE PTR [ebx+eiz*2+0x147ffe3a],bh
  416314:	pop    ebp
  416315:	mov    cl,0xcb
  416317:	jg     0x41634a
  416319:	xor    eax,0x25d9a7b
  41631e:	xchg   DWORD PTR [edx+eax*4+0x3f9a8722],edx
  416325:	pop    edi
  416326:	mov    dl,0x7a
  416328:	test   DWORD PTR [esp+eiz*2-0x2a2eb773],0x37d60d20
  416333:	push   esp
  416334:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416335:	push   es
  416336:	sar    BYTE PTR [ebx+0x112f3b0c],1
  41633c:	adc    DWORD PTR [ebx+0x12],edx
  41633f:	(bad)
  416342:	jb     0x416311
  416344:	jbe    0xf926054e
  41634a:	mov    DWORD PTR [eax],eax
  41634c:	add    DWORD PTR [edi-0x2b9d37a5],esp
  416352:	(bad)  [eax]
  416354:	dec    esp
  416355:	inc    ecx
  416356:	fldcw  WORD PTR [ebx+0x53]
  416359:	inc    eax
  41635a:	add    eax,0xd1b933c8
  41635f:	cs dec esp
  416361:	out    0x5,al
  416363:	jecxz  0x41635a
  416365:	outs   dx,DWORD PTR ds:[esi]
  416366:	popa   
  416367:	jb     0x416314
  416369:	xor    BYTE PTR [ebx],cl
  41636b:	cld    
  41636c:	das    
  41636d:	aad    0x5e
  41636f:	xchg   BYTE PTR [edi+0x6c],cl
  416372:	sbb    ah,BYTE PTR [ebx]
  416374:	popa   
  416375:	loopne 0x41637e
  416377:	cmp    bl,dh
  416379:	push   ecx
  41637a:	push   es
  41637b:	loopne 0x4163b5
  41637d:	ret    0xa101
  416380:	inc    edi
  416381:	scas   eax,DWORD PTR es:[edi]
  416382:	sub    bl,bh
  416384:	shl    BYTE PTR [esi+0x64645c4c],1
  41638a:	repz inc esi
  41638c:	and    DWORD PTR [di-0x5a],edi
  416390:	jbe    0x4163a5
  416392:	mov    bh,0x71
  416394:	xor    ch,dh
  416396:	xchg   esi,eax
  416397:	sub    DWORD PTR [eax-0x3c],eax
  41639a:	fisttp QWORD PTR [edx]
  41639c:	cpuid  
  41639e:	xchg   esi,eax
  41639f:	bound  ebx,QWORD PTR [esi]
  4163a1:	lods   eax,DWORD PTR ds:[esi]
  4163a2:	pop    esp
  4163a3:	js     0x416333
  4163a5:	shr    BYTE PTR [ebx-0x12196ef3],cl
  4163ab:	sbb    DWORD PTR [edi-0x2000b48b],esp
  4163b1:	or     eax,0x6710af0a
  4163b6:	(bad)  
  4163b7:	xchg   al,ch
  4163b9:	in     al,dx
  4163ba:	ret    
  4163bb:	add    eax,0x4d53eb42
  4163c0:	les    esi,FWORD PTR ds:0x35c85b0b
  4163c6:	inc    esp
  4163c7:	jae    0x4163df
  4163c9:	shl    BYTE PTR [ecx+0x42],0x3d
  4163cd:	pop    ebx
  4163ce:	aas    
  4163cf:	cmp    al,0x61
  4163d1:	mov    cl,0xa0
  4163d3:	(bad)  [esi-0x254f9164]
  4163d9:	pop    ebp
  4163da:	test   BYTE PTR [edi+edi*8-0xbb1f809],dh
  4163e1:	add    eax,0xe0e9e85e
  4163e6:	mov    eax,ds:0x9c679c28
  4163eb:	adc    eax,0x23675d23
  4163f0:	xor    ebp,DWORD PTR ds:0x4e3f6256
  4163f6:	dec    esi
  4163f7:	add    BYTE PTR [edx],bl
  4163f9:	out    0xdf,al
  4163fb:	retf   0x7898
  4163fe:	xor    BYTE PTR ds:0xa278de2d,dh
  416404:	jecxz  0x4163d1
  416406:	in     eax,dx
  416407:	(bad)  
  416408:	lock call 0x75e87306
  41640e:	pop    edx
  41640f:	mov    bh,0x73
  416411:	sub    ebp,DWORD PTR ds:0x5eed50da
  416417:	jg     0x416417
  416419:	shl    cl,cl
  41641b:	pusha  
  41641c:	ds xchg edx,eax
  41641e:	enter  0x2ab0,0x2a
  416422:	xchg   DWORD PTR [edi],ebx
  416424:	cmp    al,BYTE PTR [ebx]
  416426:	xchg   edx,eax
  416427:	push   0xe40075fb
  41642c:	loop   0x4163da
  41642e:	mov    esi,0xaba59b26
  416433:	in     al,0xf5
  416435:	inc    edi
  416436:	mov    bl,0x8f
  416438:	xchg   ebx,eax
  416439:	int    0xaf
  41643b:	xor    DWORD PTR [ebp+0x63c4a4c4],edi
  416441:	add    ch,cl
  416443:	imul   edi,DWORD PTR [ebp-0x62ee9d46],0xed232a27
  41644d:	mov    edi,DWORD PTR [ebp-0x6]
  416450:	jmp    0x392b:0x653ea941
  416457:	jle    0x4163f3
  416459:	xchg   ecx,eax
  41645a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41645b:	or     eax,DWORD PTR [edi]
  41645d:	aas    
  41645e:	xor    al,0xa8
  416460:	ja     0x416441
  416462:	pop    eax
  416463:	xchg   ecx,eax
  416464:	sbb    al,0x1d
  416466:	das    
  416467:	(bad)  
  416468:	adc    al,0x45
  41646a:	mov    fs,WORD PTR [ebp+0x2088a0d3]
  416470:	out    0x26,al
  416472:	add    ch,BYTE PTR [edx-0x75]
  416475:	jbe    0x4164ed
  416477:	or     eax,0xfdc280f1
  41647c:	pshufw mm6,QWORD PTR [ebp+0x1b],0x47
  416481:	xchg   edi,eax
  416482:	mov    bl,0xa3
  416484:	xor    BYTE PTR [ecx-0x76],al
  416487:	ins    BYTE PTR es:[edi],dx
  416488:	lahf   
  416489:	aas    
  41648a:	or     DWORD PTR [ecx-0x1d71eb6d],0xc5a6533a
  416494:	lahf   
  416495:	mov    WORD PTR [eax+0x7d8ad50e],ss
  41649b:	push   ds
  41649c:	fnstsw WORD PTR [edi]
  41649e:	inc    ebx
  41649f:	inc    ecx
  4164a0:	js     0x416520
  4164a2:	mov    dh,0xeb
  4164a4:	sti    
  4164a5:	ror    BYTE PTR [ebp+0x35654590],0xe9
  4164ac:	adc    DWORD PTR gs:[ecx+0x74],0x1d
  4164b1:	sub    ch,BYTE PTR [esi-0x182b9cfb]
  4164b7:	shr    dl,0x1d
  4164ba:	arpl   WORD PTR [ecx+edx*2],cx
  4164bd:	pop    eax
  4164be:	or     esi,edi
  4164c0:	lahf   
  4164c1:	inc    esi
  4164c2:	ins    DWORD PTR es:[edi],dx
  4164c3:	inc    ecx
  4164c4:	sahf   
  4164c5:	test   al,0x5c
  4164c7:	sbb    DWORD PTR [esi+esi*1-0x689c028a],esi
  4164ce:	mov    ebp,0x91072c6b
  4164d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164d4:	sbb    BYTE PTR [ebx],ch
  4164d6:	data16 mov ds:0x69cab430,al
  4164dc:	adc    DWORD PTR [ecx+eax*8],esi
  4164df:	push   esi
  4164e0:	push   0x2b40e2c8
  4164e5:	(bad)  
  4164e7:	push   ecx
  4164e8:	in     al,dx
  4164e9:	sbb    al,0xc3
  4164eb:	inc    ecx
  4164ec:	mov    ebx,0x88ccbc18
  4164f1:	jmp    0x4164d5
  4164f3:	dec    ebp
  4164f4:	dec    ebx
  4164f5:	push   edx
  4164f6:	xchg   esi,eax
  4164f7:	sahf   
  4164f8:	jmp    0x6afc:0xb14604df
  4164ff:	pusha  
  416500:	imul   edx,DWORD PTR [esi+0x1f111990],0xffffffdb
  416507:	lds    ecx,FWORD PTR [ebx-0x17d9975b]
  41650d:	out    dx,eax
  41650e:	xchg   BYTE PTR [edx-0x4],al
  416511:	(bad)  
  416512:	loopne 0x4164f0
  416514:	lock in eax,0x2e
  416517:	popf   
  416518:	cld    
  416519:	fistp  WORD PTR [edx+0x6d]
  41651c:	inc    eax
  41651d:	ror    BYTE PTR [ecx+0x56d20a6f],0x34
  416524:	das    
  416525:	std    
  416526:	sub    al,0x64
  416528:	shl    BYTE PTR [edx+0x6c],cl
  41652b:	or     DWORD PTR [edx],eax
  41652d:	aam    0xc8
  41652f:	inc    edx
  416530:	dec    edx
  416531:	push   0x332ae99
  416536:	cmp    DWORD PTR [esi-0x1c],0x9c046429
  41653d:	sar    dh,cl
  41653f:	(bad)  
  416540:	push   eax
  416541:	fstp   TBYTE PTR [edx+eiz*4]
  416544:	ss dec ebp
  416546:	push   edx
  416547:	jb     0x4164d4
  416549:	pop    ebp
  41654a:	mov    ebx,0x7ca4ef4d
  41654f:	push   0x9
  416551:	mov    ch,0xaf
  416553:	rol    BYTE PTR [ebp-0x5b],0x41
  416557:	xchg   ebx,eax
  416558:	in     eax,dx
  416559:	daa    
  41655a:	jg     0x4165d1
  41655c:	jmp    0x7121e926
  416561:	arpl   WORD PTR [ecx],bx
  416563:	mov    edi,DWORD PTR [edx+0x2c]
  416566:	sbb    eax,0x17aae5c
  41656b:	push   edi
  41656c:	xchg   edx,eax
  41656d:	(bad)  
  41656e:	mov    ecx,0x59366cfb
  416573:	jl     0x41656a
  416575:	mov    ebx,0x40dfb155
  41657a:	adc    ah,dl
  41657c:	loope  0x416517
  41657e:	jae    0x416559
  416580:	adc    DWORD PTR [edx-0x22],esp
  416583:	les    esi,FWORD PTR [edi-0x4af3c19d]
  416589:	xor    DWORD PTR [ecx],ebp
  41658b:	lods   al,BYTE PTR ds:[esi]
  41658c:	push   ecx
  41658d:	xchg   esi,eax
  41658e:	mov    cl,0x8d
  416590:	push   ds
  416591:	add    BYTE PTR [ecx+edx*2-0x5c796a80],dl
  416598:	jecxz  0x4165da
  41659a:	mov    eax,0xa44c90a
  41659f:	push   ecx
  4165a0:	mov    BYTE PTR [esi-0x43],ah
  4165a3:	mov    dh,0x51
  4165a5:	dec    eax
  4165a6:	ja     0x4165e8
  4165a8:	pop    ecx
  4165a9:	push   esp
  4165aa:	outs   dx,DWORD PTR ds:[esi]
  4165ab:	pop    ds
  4165ac:	cld    
  4165ad:	sar    ch,cl
  4165af:	retf   0xa97f
  4165b2:	jp     0x416547
  4165b4:	nop
  4165b5:	fcom   QWORD PTR [ecx+0x3a]
  4165b8:	icebp  
  4165b9:	test   BYTE PTR [eax-0x56a41a38],ah
  4165bf:	in     al,0x27
  4165c1:	push   cs
  4165c2:	pop    ecx
  4165c3:	and    DWORD PTR [eax-0x32],0xffffffd1
  4165c7:	push   eax
  4165c8:	mov    ecx,cs
  4165ca:	adc    bl,BYTE PTR [edi-0x6d]
  4165cd:	and    DWORD PTR [edi],eax
  4165cf:	mov    ebx,0xe20b6eba
  4165d4:	mov    dh,0xd2
  4165d6:	loopne 0x4165b3
  4165d8:	nop
  4165d9:	sub    al,0x7b
  4165db:	sbb    eax,0x3c0dc103
  4165e0:	imul   esi,esp,0x50
  4165e3:	inc    edx
  4165e4:	sub    esp,DWORD PTR [eax-0x59]
  4165e7:	adc    ebx,DWORD PTR [edi+0x33301a6b]
  4165ed:	sbb    al,0xd5
  4165ef:	les    esi,FWORD PTR [ebx-0x1b6cffe6]
  4165f5:	loope  0x41663c
  4165f7:	inc    esi
  4165f8:	fucompp 
  4165fa:	retf   
  4165fb:	(bad)  
  4165fc:	xor    bh,BYTE PTR [edi+eiz*4]
  4165ff:	rcl    edi,0xc0
  416602:	ds stc 
  416604:	std    
  416605:	push   esp
  416606:	test   eax,0xe1ca14bb
  41660b:	mov    dh,0x3a
  41660d:	into   
  41660e:	ret    
  41660f:	inc    esi
  416610:	out    dx,eax
  416611:	(bad)  
  416613:	or     bh,BYTE PTR [edi-0x6c27d9e6]
  416619:	les    edi,FWORD PTR [ecx+0xa1a22f0]
  41661f:	xor    DWORD PTR [eax-0x7f787ba0],ecx
  416625:	pop    ss
  416626:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416628:	or     edi,DWORD PTR [edi]
  41662a:	dec    ebx
  41662b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41662c:	mov    ecx,0xc874b332
  416631:	lods   al,BYTE PTR ds:[esi]
  416632:	pop    ds
  416633:	xor    eax,0xf08e7ace
  416638:	jmp    0x18e1:0x59e43f26
  41663f:	push   edx
  416640:	mov    al,ds:0x2c96bfbc
  416645:	push   0xffffffeb
  416647:	jmp    0x5b4f8f9c
  41664c:	jns    0x416655
  41664e:	in     al,dx
  41664f:	xor    eax,DWORD PTR [edi+0x65]
  416652:	and    DWORD PTR [ecx],ecx
  416654:	shr    DWORD PTR [esi-0x7d4a2f9c],1
  41665a:	dec    edi
  41665b:	jnp    0x416605
  41665d:	add    bl,BYTE PTR [ebx-0x2d]
  416660:	out    dx,eax
  416661:	hlt    
  416662:	outs   dx,DWORD PTR ds:[esi]
  416663:	cmp    BYTE PTR [ecx+0x11af6d68],0x14
  41666a:	cmc    
  41666b:	cmp    bh,cl
  41666d:	inc    edi
  41666e:	lea    ecx,[edx+0x31]
  416671:	inc    ecx
  416672:	or     eax,DWORD PTR [edx-0x35]
  416675:	push   edi
  416676:	xchg   esp,eax
  416677:	repz shl DWORD PTR [edx],1
  41667a:	nop
  41667b:	imul   ebx,DWORD PTR [esi-0x1ab10b33],0x7f
  416682:	hlt    
  416683:	mov    dh,0xca
  416685:	test   al,0x88
  416687:	dec    ebx
  416689:	test   eax,0xf991871b
  41668e:	lods   al,BYTE PTR ds:[esi]
  41668f:	es xchg ebp,eax
  416691:	imul   esp,DWORD PTR [eax],0xeae64256
  416697:	add    DWORD PTR [edx-0x76b4a8c9],0x72d4606d
  4166a1:	dec    edx
  4166a2:	out    0x64,eax
  4166a4:	push   ds
  4166a5:	outs   dx,DWORD PTR ds:[esi]
  4166a6:	or     eax,edx
  4166a8:	and    cl,ah
  4166aa:	mov    edx,0x256f7874
  4166af:	inc    ebx
  4166b0:	pop    ebp
  4166b1:	repnz mov ecx,0xefdc0ade
  4166b7:	jp     0x416696
  4166b9:	adc    al,0x24
  4166bb:	inc    esi
  4166bc:	inc    ecx
  4166bd:	cmp    eax,0xee6a1487
  4166c2:	mov    ebp,0x14578ab
  4166c7:	mov    ds:0x8e2e8202,eax
  4166cc:	sub    BYTE PTR [ecx],0x8c
  4166cf:	je     0x416652
  4166d1:	push   esp
  4166d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166d3:	add    al,0x10
  4166d5:	xor    dh,BYTE PTR [edx+0x3f83e83a]
  4166db:	mov    dh,0x75
  4166dd:	les    ecx,FWORD PTR [edi+0x163dd251]
  4166e3:	push   es
  4166e4:	and    BYTE PTR [edx+eiz*8+0x6d],ah
  4166e8:	or     DWORD PTR [edi],edi
  4166ea:	mov    ebx,0x825cba71
  4166ef:	test   BYTE PTR [edx-0x1f70fb5c],bh
  4166f5:	sub    cl,0xfd
  4166f8:	sbb    ecx,DWORD PTR [ebp+edi*2+0x5f]
  4166fc:	mov    bl,BYTE PTR [esp+eax*1]
  4166ff:	sub    ah,BYTE PTR [esi-0x18dbb1be]
  416705:	push   0x79
  416707:	adc    bl,0x15
  41670a:	not    dh
  41670c:	stos   DWORD PTR es:[edi],eax
  41670d:	jg     0x41669a
  41670f:	mov    bh,0xe
  416711:	fwait
  416712:	iret   
  416713:	popa   
  416714:	jge    0x41670d
  416716:	daa    
  416717:	mov    ebp,DWORD PTR [ebp+0x14]
  41671a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41671b:	icebp  
  41671c:	and    al,0x97
  41671e:	xor    al,0xe1
  416720:	cmp    BYTE PTR [edi],dh
  416722:	popa   
  416723:	mov    ds:0x5e01852c,eax
  416728:	mov    al,ds:0x50c0bd10
  41672d:	xchg   esi,eax
  41672e:	repnz out dx,al
  416730:	add    eax,0x70aea2b7
  416735:	jl     0x41675b
  416737:	inc    ecx
  416738:	cmp    ch,ch
  41673a:	xrelease xchg DWORD PTR [ebp+0x47],ebp
  41673e:	inc    ebx
  41673f:	mov    al,0xe6
  416741:	sbb    edi,DWORD PTR [edi-0x7f53f112]
  416747:	xchg   BYTE PTR [esi],dl
  416749:	sbb    ah,BYTE PTR [edx+eiz*1-0x25c2f56f]
  416750:	sar    dl,1
  416752:	push   ds
  416753:	scas   eax,DWORD PTR es:[edi]
  416754:	inc    esi
  416755:	pop    ss
  416756:	xchg   DWORD PTR [eax+edx*1-0x31],ecx
  41675a:	xlat   BYTE PTR ds:[ebx]
  41675b:	into   
  41675c:	mov    cl,0x4f
  41675e:	adc    DWORD PTR [esi+0x2b],ebp
  416761:	inc    esp
  416762:	nop
  416763:	mov    al,0x12
  416765:	faddp  st(3),st
  416767:	add    DWORD PTR [esp+edx*1+0x62],0x29
  41676c:	push   DWORD PTR [ebp-0x6ca825f1]
  416772:	add    eax,0xeb452c57
  416777:	lods   eax,DWORD PTR ds:[esi]
  416778:	cmp    eax,0x33fac70a
  41677d:	push   ds
  41677e:	pop    ecx
  41677f:	out    dx,eax
  416780:	stos   DWORD PTR es:[edi],eax
  416781:	pusha  
  416782:	jmp    0x9643:0xe4fec96b
  416789:	in     al,dx
  41678a:	xchg   ecx,eax
  41678b:	push   esp
  41678c:	aam    0x52
  41678e:	dec    ecx
  41678f:	loope  0x41680d
  416791:	std    
  416792:	mov    ch,0x67
  416794:	add    eax,0x4ba689fb
  416799:	fwait
  41679a:	push   DWORD PTR [ebp+0x284cd2fd]
  4167a0:	ret    0xb6de
  4167a3:	nop
  4167a4:	dec    eax
  4167a5:	fsub   DWORD PTR [ebp+0x77]
  4167a8:	push   ebp
  4167a9:	repnz mov edi,0x67bd4389
  4167af:	aam    0x4b
  4167b1:	out    dx,eax
  4167b2:	fadd   QWORD PTR [eax+0x70]
  4167b5:	mov    ebx,0x2a6ab05c
  4167ba:	or     eax,0xa32ec239
  4167bf:	jns    0x416795
  4167c1:	mov    ecx,DWORD PTR [edx+edi*4+0x54]
  4167c5:	xor    eax,0xa8cd4bc
  4167ca:	in     eax,0x96
  4167cc:	push   ss
  4167cd:	inc    esp
  4167ce:	mov    eax,ds:0xaf4d7dcd
  4167d3:	(bad)
  4167d7:	sub    al,0x84
  4167d9:	or     al,BYTE PTR [edi-0x7b]
  4167dc:	outs   dx,BYTE PTR ds:[esi]
  4167dd:	dec    esi
  4167de:	sub    edi,ebp
  4167e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167e1:	cmp    BYTE PTR [esi+0x5e8ebe23],ch
  4167e7:	scas   al,BYTE PTR es:[edi]
  4167e8:	out    0xe8,al
  4167ea:	test   DWORD PTR [ebx+0x4c],0xf8a0b785
  4167f1:	fsub   QWORD PTR [ecx]
  4167f3:	or     al,0xbc
  4167f5:	pop    ss
  4167f6:	fldpi  
  4167f8:	push   0x5c
  4167fa:	retf   0x4604
  4167fd:	jbe    0x41681f
  4167ff:	cmp    al,0x8d
  416801:	pop    esp
  416802:	jb     0x416826
  416804:	sub    al,0xde
  416806:	push   ebp
  416807:	pop    eax
  416808:	lods   al,BYTE PTR ds:[esi]
  416809:	out    0xcb,eax
  41680b:	mov    ecx,0x7d659f46
  416810:	xchg   esi,eax
  416811:	retf   0x73d
  416814:	sbb    DWORD PTR [ebp+0x30],ecx
  416817:	cmp    edx,esp
  416819:	mov    al,ds:0x3cdf0ab6
  41681e:	test   al,bh
  416820:	mov    dh,0x94
  416822:	cmp    DWORD PTR [ecx-0x25],esp
  416825:	cmp    eax,0x390bb34
  41682a:	popa   
  41682b:	xchg   BYTE PTR [eax-0x10303f2f],dh
  416831:	retf   0x8b59
  416834:	mov    gs,esp
  416836:	adc    edx,DWORD PTR [edi-0x2f38a503]
  41683c:	or     DWORD PTR [ecx-0xae749af],eax
  416842:	add    eax,0x1a9e4ad2
  416847:	jl     0x416863
  416849:	or     al,0xe8
  41684b:	and    BYTE PTR [ebx+esi*4+0x1dad34a7],dl
  416852:	lods   al,BYTE PTR ds:[esi]
  416853:	cmp    cl,dh
  416855:	sub    edx,DWORD PTR [eax]
  416857:	sub    DWORD PTR [edx+edx*2+0x23488b69],0xffffff89
  41685f:	jne    0x41680d
  416861:	push   edx
  416862:	or     BYTE PTR [eax],ch
  416864:	push   esi
  416865:	cmp    eax,0xb0220d16
  41686a:	mov    ah,BYTE PTR [ebx+0x7d05eca8]
  416870:	mov    bl,0xee
  416872:	ins    BYTE PTR es:[di],dx
  416874:	scas   eax,DWORD PTR es:[edi]
  416875:	inc    esp
  416876:	xchg   esi,eax
  416877:	sbb    eax,0x7dff66b1
  41687c:	(bad)  
  41687d:	hlt    
  41687e:	sub    eax,0xc7949f23
  416883:	xor    al,0xb7
  416885:	mov    DWORD PTR [esi],esi
  416887:	pop    ebp
  416888:	sub    cl,dl
  41688a:	aam    0x2
  41688c:	dec    ebp
  41688d:	jb     0x416849
  41688f:	mov    edx,0x8dc5a38b
  416894:	call   0xb4f6:0xdbb414f2
  41689b:	dec    esp
  41689c:	in     al,0x65
  41689e:	pop    eax
  41689f:	xchg   ecx,eax
  4168a0:	jl     0x41682d
  4168a2:	sar    DWORD PTR [eax+0x7],cl
  4168a5:	les    eax,FWORD PTR [ebp-0x6f]
  4168a8:	or     DWORD PTR [esi-0x6c9573fb],ebx
  4168ae:	inc    ecx
  4168af:	sbb    ebx,ecx
  4168b1:	out    0xe8,al
  4168b3:	aas    
  4168b4:	rcr    DWORD PTR [edx+0x4ade242f],cl
  4168ba:	shl    BYTE PTR [ecx+ebx*2-0x7f],1
  4168be:	xchg   eax,ebp
  4168c0:	ret    0xc4ce
  4168c3:	into   
  4168c4:	adc    eax,0xb58fc1db
  4168c9:	das    
  4168ca:	ins    DWORD PTR es:[edi],dx
  4168cb:	push   es
  4168cc:	mov    edx,0x61fc00ca
  4168d1:	inc    edi
  4168d2:	push   eax
  4168d3:	data16 arpl WORD PTR [ebp+0x3eb5799e],cx
  4168da:	(bad)  
  4168db:	adc    BYTE PTR [esp+edi*1-0x5c519c9b],al
  4168e2:	sti    
  4168e3:	test   al,0xc9
  4168e5:	mov    ds:0xa494e4f1,al
  4168ea:	sub    BYTE PTR [ebx],0x76
  4168ed:	pop    edx
  4168ee:	sbb    al,0xc8
  4168f0:	mov    esp,0x72b3d003
  4168f5:	jmp    0x4168d8
  4168f7:	fadd   DWORD PTR [edi+0x6c]
  4168fa:	add    ch,BYTE PTR [edi-0x48]
  4168fd:	jo     0x4168d0
  4168ff:	test   al,0x4b
  416901:	sub    edi,DWORD PTR [edx+edi*2+0x602017c4]
  416908:	std    
  416909:	sub    BYTE PTR [eax],0x5d
  41690c:	add    dh,ch
  41690e:	push   ecx
  41690f:	jne    0x41690f
  416911:	bound  esi,QWORD PTR [eax]
  416913:	hlt    
  416914:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416915:	ret    
  416916:	sub    bh,BYTE PTR [edx-0x73]
  416919:	adc    al,0x98
  41691b:	loopne 0x416973
  41691d:	loop   0x41694b
  41691f:	pop    edx
  416920:	cmp    DWORD PTR [esi],esp
  416922:	loope  0x416927
  416924:	xchg   ebx,eax
  416925:	push   ecx
  416926:	add    eax,DWORD PTR [eax-0x7e26bb2b]
  41692c:	jmp    0x4168bb
  41692e:	and    bh,0x14
  416931:	ins    BYTE PTR es:[edi],dx
  416932:	outs   dx,DWORD PTR ds:[esi]
  416933:	(bad)  
  416934:	sub    al,dl
  416936:	xchg   esi,eax
  416937:	nop
  416938:	or     eax,0xd54b16df
  41693d:	lods   eax,DWORD PTR ds:[esi]
  41693e:	sbb    al,0x7d
  416940:	mov    ebp,0xb7615f83
  416945:	dec    ebx
  416946:	div    BYTE PTR [ecx+0x3]
  416949:	mov    esi,gs
  41694b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41694c:	pop    es
  41694d:	xchg   edi,eax
  41694e:	cwde   
  41694f:	fsubr  DWORD PTR [ebx+0x6fd5a27f]
  416955:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416956:	leave  
  416957:	js     0x4169d1
  416959:	xchg   ebx,eax
  41695a:	jno    0x41695a
  41695c:	retf   0x858b
  41695f:	push   edx
  416960:	outs   dx,BYTE PTR ds:[esi]
  416961:	bound  edx,QWORD PTR [ebx]
  416963:	mov    al,ds:0x6af7d4c8
  416968:	push   es
  416969:	jmp    0xd2dc:0x9d13a59d
  416970:	sbb    esi,DWORD PTR [esi+0x18f82dd4]
  416976:	call   0x6c63e61e
  41697b:	mov    eax,DWORD PTR [ebx+0x7b79c74b]
  416981:	lahf   
  416982:	jbe    0x41694b
  416984:	xchg   ebx,ecx
  416986:	daa    
  416987:	pop    eax
  416988:	out    0x39,eax
  41698a:	jmp    0x8e61:0x6eaee91f
  416991:	mov    ebx,0x75f154c
  416996:	ret    0x8f81
  416999:	jae    0x416a00
  41699b:	ds aad 0x4a
  41699e:	(bad)  
  41699f:	sbb    BYTE PTR [esi+0x610fb11],bh
  4169a5:	lock dec ecx
  4169a7:	fs out 0x1a,al
  4169aa:	in     al,dx
  4169ab:	jge    0x416a0a
  4169ad:	dec    ecx
  4169ae:	mov    DWORD PTR [edi+0x29410e8f],edx
  4169b4:	loope  0x416a00
  4169b6:	cmp    ch,BYTE PTR [ebx+0x3e]
  4169b9:	push   esi
  4169ba:	pop    es
  4169bb:	cmp    ah,ah
  4169bd:	imul   eax,DWORD PTR [ebx-0x67f3922f],0x8e25c779
  4169c7:	xchg   esi,eax
  4169c8:	push   edx
  4169c9:	aad    0x99
  4169cb:	add    dh,BYTE PTR [esi-0x1513bba1]
  4169d1:	jecxz  0x416966
  4169d3:	dec    esp
  4169d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169d5:	imul   esp,DWORD PTR [ebx-0x1942123b],0xfffffff0
  4169dc:	div    DWORD PTR [ebx]
  4169de:	pop    eax
  4169df:	sbb    BYTE PTR [edx],0xc2
  4169e2:	mov    esp,0x9074c009
  4169e7:	mov    edx,0x7db904c2
  4169ec:	mov    DWORD PTR ds:0x42849112,0x68ed3cfc
  4169f6:	pushf  
  4169f7:	clc    
  4169f8:	sub    eax,0x647bf43
  4169fd:	jb     0x4169d8
  4169ff:	push   ecx
  416a00:	push   cs
  416a01:	sbb    eax,0x55bcef99
  416a06:	loopne 0x416a1f
  416a08:	ins    DWORD PTR es:[edi],dx
  416a09:	popf   
  416a0a:	or     BYTE PTR [edx+0x62f0daa3],ch
  416a10:	add    BYTE PTR [edi-0x5b],ah
  416a13:	adc    ebx,DWORD PTR [edi+ebp*1]
  416a16:	iret   
  416a17:	xlat   BYTE PTR ds:[ebx]
  416a18:	pushf  
  416a19:	xchg   DWORD PTR [ecx+0x29],esp
  416a1c:	mov    edi,0x676dccf1
  416a21:	clc    
  416a22:	outs   dx,BYTE PTR ds:[esi]
  416a23:	fdiv   QWORD PTR [ebp+0x3b]
  416a26:	aaa    
  416a27:	sub    edi,edi
  416a29:	scas   al,BYTE PTR es:[edi]
  416a2a:	sub    al,0x7
  416a2c:	test   DWORD PTR fs:[ecx],ebx
  416a2f:	and    eax,0xcbdad7dc
  416a34:	outs   dx,DWORD PTR ds:[esi]
  416a35:	(bad)  
  416a37:	mov    bh,0xb8
  416a39:	imul   eax,eax,0xf8ca137c
  416a3f:	mov    dl,0x25
  416a41:	test   al,0xdd
  416a43:	or     eax,0x20ad9615
  416a48:	stos   DWORD PTR es:[edi],eax
  416a49:	bound  esp,QWORD PTR [ecx]
  416a4b:	sbb    BYTE PTR [edx-0x6d],bl
  416a4e:	inc    eax
  416a4f:	ret    
  416a50:	gs jl  0x416ab5
  416a53:	add    ah,al
  416a55:	fst    DWORD PTR [edx]
  416a57:	add    esp,DWORD PTR fs:[ebp+0x495bb688]
  416a5e:	mov    edi,0x7e0a0916
  416a63:	inc    eax
  416a64:	js     0x416adb
  416a66:	outs   dx,DWORD PTR ds:[esi]
  416a67:	sub    esi,DWORD PTR [ebp+0x441ff56f]
  416a6d:	add    eax,DWORD PTR ds:0xc563791a
  416a73:	inc    ebp
  416a74:	retf   0xf4c8
  416a77:	sbb    bl,bl
  416a79:	push   0xde1a881d
  416a7e:	jmp    0xbabc0cbe
  416a83:	outs   dx,BYTE PTR ds:[esi]
  416a84:	sub    ebp,DWORD PTR [ebx-0x32]
  416a87:	pop    eax
  416a88:	(bad)  
  416a8a:	dec    ebx
  416a8b:	jl     0x416a17
  416a8d:	mov    eax,0x3cbd38ff
  416a92:	cmc    
  416a93:	sub    eax,DWORD PTR [ebx-0x254f0aac]
  416a99:	jns    0x416a4f
  416a9b:	push   edx
  416a9c:	test   DWORD PTR [esi+0x15373f7d],0x3b3bad0b
  416aa6:	mov    ah,0x7e
  416aa8:	sub    esi,eax
  416aaa:	fld    QWORD PTR [edx]
  416aac:	(bad)  
  416aad:	pop    edi
  416aae:	pushf  
  416aaf:	mov    bh,0x6f
  416ab1:	and    ebx,DWORD PTR [eax+0x7e]
  416ab4:	jae    0x416b2c
  416ab6:	aad    0x58
  416ab8:	jg     0x416ab7
  416aba:	arpl   WORD PTR [eax+0x53eda252],ax
  416ac0:	mov    al,0xbc
  416ac2:	arpl   WORD PTR [esi-0x45f5ab7d],ax
  416ac8:	adc    ch,BYTE PTR ds:0x393bcfd3
  416ace:	les    edx,FWORD PTR [esi+edx*8-0x7a659758]
  416ad5:	iret   
  416ad6:	(bad)  
  416ad7:	push   ebx
  416ad8:	ja     0x416afe
  416ada:	std    
  416adb:	jl     0x416b33
  416add:	fidiv  WORD PTR ds:0x3845450
  416ae3:	(bad)  
  416ae4:	in     eax,0xff
  416ae6:	cld    
  416ae7:	pop    ds
  416ae8:	mov    ds:0x48e4bae0,eax
  416aed:	aam    0x45
  416aef:	sar    DWORD PTR [ebx+0x68],cl
  416af2:	dec    edx
  416af3:	sar    ah,0x6c
  416af6:	pop    ebx
  416af7:	test   DWORD PTR [edx-0x3dc47b3b],edi
  416afd:	sub    dh,BYTE PTR ds:0xbd3b722b
  416b03:	and    dh,BYTE PTR [edx-0xdf4748c]
  416b09:	pop    ebp
  416b0a:	sbb    al,0x65
  416b0c:	jge    0x416ae9
  416b0e:	sbb    al,BYTE PTR [ebx-0x7b]
  416b11:	aad    0x3b
  416b13:	leave  
  416b14:	loope  0x416aaa
  416b16:	mov    dl,bh
  416b18:	pop    edx
  416b19:	scas   eax,DWORD PTR es:[edi]
  416b1a:	sub    al,0x6f
  416b1c:	rcr    BYTE PTR [esi],0x3e
  416b1f:	xchg   BYTE PTR [eax-0x2f],bh
  416b22:	jbe    0x416ae0
  416b24:	popa   
  416b25:	imul   edi,DWORD PTR [ebp+eiz*8+0x5d],0xe7404093
  416b2d:	aam    0x5b
  416b2f:	pop    eax
  416b30:	lds    edx,FWORD PTR ds:0x1d28fbee
  416b36:	fdiv   st(4),st
  416b38:	sbb    BYTE PTR [edx+0x5d384504],ah
  416b3e:	popa   
  416b3f:	maskmovq mm4,(bad)
  416b40:	mul    DWORD PTR [eax]
  416b42:	pusha  
  416b43:	xor    eax,0x300c39b2
  416b48:	mov    ds:0xf52cc094,eax
  416b4d:	(bad)  
  416b4e:	xor    edi,DWORD PTR [eax+0x19f5632]
  416b54:	mov    esi,0x754e236c
  416b59:	loopne 0x416b01
  416b5b:	or     edi,DWORD PTR [edx+0x28]
  416b5e:	je     0x416b16
  416b60:	js     0x416b49
  416b62:	rcl    DWORD PTR [ebp*4+0x222cf053],1
  416b69:	mov    edx,edx
  416b6b:	ins    DWORD PTR es:[edi],dx
  416b6c:	mov    al,0x21
  416b6e:	mov    edi,0x39e2a157
  416b73:	and    eax,DWORD PTR [bp+0x2b]
  416b77:	repz sbb DWORD PTR [ebx],ebp
  416b7a:	inc    eax
  416b7b:	xor    eax,0xac941afb
  416b80:	push   ds
  416b81:	mov    ebp,0x3f9c8930
  416b86:	add    DWORD PTR [edx],ecx
  416b88:	inc    esi
  416b89:	lods   al,BYTE PTR ds:[esi]
  416b8a:	into   
  416b8b:	xor    al,0xd1
  416b8d:	lahf   
  416b8e:	or     BYTE PTR [ebx-0x29486fe6],bh
  416b94:	pop    es
  416b95:	mov    ecx,0x154878fa
  416b9a:	leave  
  416b9b:	cdq    
  416b9c:	fiadd  DWORD PTR [ecx+esi*4-0x4cfff02e]
  416ba3:	scas   al,BYTE PTR es:[edi]
  416ba4:	sub    al,0x73
  416ba6:	mov    bl,dh
  416ba8:	mov    bh,0x15
  416baa:	in     eax,0x5d
  416bac:	and    bl,0x5
  416baf:	dec    esi
  416bb0:	push   cs
  416bb1:	cmp    BYTE PTR [esi+eax*8+0x2365d994],0x83
  416bb9:	(bad)  
  416bba:	ins    DWORD PTR es:[edi],dx
  416bbb:	mov    dh,BYTE PTR [ecx]
  416bbd:	ret    
  416bbe:	xor    ebx,eax
  416bc0:	ja     0x416c2d
  416bc2:	popa   
  416bc3:	cmp    ah,BYTE PTR [esi]
  416bc5:	mov    bl,0xec
  416bc7:	jle    0x416b4c
  416bc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416bca:	(bad)  
  416bcb:	cmp    BYTE PTR [edi-0x64cb8cb],bl
  416bd1:	sbb    dl,bh
  416bd3:	lods   al,BYTE PTR ds:[esi]
  416bd4:	cld    
  416bd5:	sbb    esi,DWORD PTR [edx-0x15a20ab6]
  416bdb:	jp     0x416b6c
  416bdd:	imul   ecx,DWORD PTR [ebx+esi*4-0x2f],0xca29adf2
  416be5:	pop    ebp
  416be6:	ret    
  416be7:	xchg   esi,eax
  416be8:	xor    esp,ebx
  416bea:	(bad)  
  416beb:	xor    ebp,edi
  416bed:	xchg   ebx,eax
  416bee:	xchg   esp,eax
  416bef:	mov    ch,0x49
  416bf1:	mov    ds:0x4dad3e57,al
  416bf6:	add    al,0x53
  416bf8:	xchg   edi,eax
  416bf9:	icebp  
  416bfa:	adc    al,0x7a
  416bfc:	dec    esi
  416bfd:	jbe    0x416bef
  416bff:	xchg   ebx,eax
  416c00:	sub    al,0x83
  416c02:	fsubrp st(6),st
  416c04:	pop    ebp
  416c05:	jl     0x416c73
  416c07:	stos   DWORD PTR es:[edi],eax
  416c08:	xchg   esi,eax
  416c09:	out    0x76,eax
  416c0b:	(bad)  
  416c0c:	push   ss
  416c0d:	lds    eax,FWORD PTR [esi+0x43a8fd9d]
  416c13:	pusha  
  416c14:	add    eax,0x652d0244
  416c19:	jecxz  0x416c5a
  416c1b:	xchg   edx,eax
  416c1c:	nop
  416c1d:	jl     0x416c55
  416c1f:	sub    eax,0xf533c626
  416c24:	add    eax,0x39e7902d
  416c29:	fs pop es
  416c2b:	push   edx
  416c2c:	cmc    
  416c2d:	loopne 0x416ca1
  416c2f:	pop    ds
  416c30:	loopne 0x416c02
  416c32:	int3   
  416c33:	pop    ebx
  416c34:	jge    0x416c6d
  416c36:	sub    DWORD PTR [ebp+edi*1-0x53c50652],ebx
  416c3d:	dec    ebx
  416c3e:	jge    0x416bff
  416c40:	dec    ebx
  416c41:	cli    
  416c42:	add    BYTE PTR [ebx+edi*8+0x7d],ch
  416c46:	cli    
  416c47:	popf   
  416c48:	push   ebx
  416c49:	sbb    bl,dh
  416c4b:	push   ds
  416c4c:	push   0x56
  416c4e:	mov    BYTE PTR [edi+esi*1],0x29
  416c52:	repnz or DWORD PTR [edi-0x4b604cf0],0xe4854ab9
  416c5d:	xor    edx,esi
  416c5f:	pushf  
  416c60:	daa    
  416c61:	mov    ebp,0x9dadb799
  416c66:	pusha  
  416c67:	push   ebp
  416c68:	adc    ebx,edx
  416c6a:	pop    edi
  416c6b:	retf   
  416c6c:	mov    esp,DWORD PTR [edi-0x44dccde4]
  416c72:	out    dx,al
  416c73:	mov    ah,0x85
  416c75:	and    ecx,edx
  416c77:	pop    eax
  416c78:	mul    BYTE PTR [edx+0x24]
  416c7b:	shl    DWORD PTR ds:0xbdb86133,1
  416c81:	inc    ebx
  416c82:	cmp    bh,BYTE PTR [ecx-0x65]
  416c85:	pop    esp
  416c86:	ss sbb al,0x45
  416c89:	repz fwait
  416c8b:	cmp    al,0x28
  416c8d:	push   es
  416c8e:	ficom  DWORD PTR [edx-0x3cd9786a]
  416c94:	pop    eax
  416c95:	sub    edi,esi
  416c97:	push   DWORD PTR [esi+0x55941cf9]
  416c9d:	add    al,0x33
  416c9f:	aaa    
  416ca0:	jle    0x416cd2
  416ca2:	mov    edx,0x8fa05c58
  416ca7:	popa   
  416ca8:	cmp    ch,0x98
  416cab:	sub    dh,bl
  416cad:	push   0x6
  416caf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416cb0:	mov    bh,0xdf
  416cb2:	aaa    
  416cb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416cb4:	sbb    BYTE PTR [ebp+edx*1-0x2e90361b],ch
  416cbb:	loop   0x416cbc
  416cbd:	cmp    eax,0x2c689d5d
  416cc2:	fdiv   DWORD PTR [ebx+0x6d]
  416cc5:	push   ecx
  416cc6:	inc    eax
  416cc7:	retf   0xa959
  416cca:	dec    ebx
  416ccb:	fld    TBYTE PTR [ecx-0x395833b3]
  416cd1:	xchg   DWORD PTR [ebx+eax*1],edx
  416cd4:	std    
  416cd5:	jge    0x416d29
  416cd7:	es pop es
  416cd9:	xor    BYTE PTR [edi-0x2717175e],dl
  416cdf:	pop    eax
  416ce0:	das    
  416ce1:	imul   ebp,DWORD PTR [edi+0x14],0x3974faeb
  416ce8:	dec    edx
  416ce9:	mov    ch,0xa9
  416ceb:	pop    eax
  416cec:	adc    cl,BYTE PTR [esi-0x649e58cb]
  416cf2:	inc    ebx
  416cf3:	icebp  
  416cf4:	outs   dx,BYTE PTR ds:[esi]
  416cf5:	(bad)  
  416cf7:	jne    0x416d38
  416cf9:	fild   WORD PTR [ecx-0x1e48a0b8]
  416cff:	jns    0x416d35
  416d01:	(bad)  
  416d02:	push   esi
  416d03:	es je  0x416d74
  416d06:	ror    BYTE PTR ds:0x9554de62,cl
  416d0c:	or     BYTE PTR [ecx-0x6e8625ce],cl
  416d12:	in     eax,0xf5
  416d14:	sahf   
  416d15:	sub    BYTE PTR [ebp-0x5a],bl
  416d18:	js     0x416d25
  416d1a:	int    0x22
  416d1c:	inc    ebp
  416d1d:	mov    eax,DWORD PTR [edx+0x0]
  416d20:	repz call 0x97eefd03
  416d26:	les    edx,FWORD PTR [ecx-0x20]
  416d29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d2a:	loope  0x416d0c
  416d2c:	adc    al,0x14
  416d2e:	lods   al,BYTE PTR ds:[esi]
  416d2f:	cmp    eax,0xd0fec6b4
  416d34:	clc    
  416d35:	push   esi
  416d36:	cmp    cl,BYTE PTR [esi+edi*8-0x35a214f3]
  416d3d:	pop    ebx
  416d3e:	dec    edi
  416d3f:	(bad)  
  416d41:	fidivr WORD PTR [ecx+0x61]
  416d44:	rcr    ecx,1
  416d46:	xor    eax,0x4e98ad85
  416d4b:	pop    edx
  416d4c:	mov    al,BYTE PTR [ecx]
  416d4e:	xchg   ecx,eax
  416d4f:	lock add esi,DWORD PTR ds:0x3df941a8
  416d56:	test   eax,0x32bdf1aa
  416d5b:	out    dx,al
  416d5c:	int    0xe9
  416d5e:	outs   dx,DWORD PTR ds:[esi]
  416d5f:	lock mov ebx,ebx
  416d62:	jecxz  0x416d7a
  416d64:	add    dl,al
  416d66:	mov    DWORD PTR [ebx],ebp
  416d68:	dec    ebx
  416d69:	out    0x37,al
  416d6b:	ret    0x76dd
  416d6e:	clc    
  416d6f:	lods   eax,DWORD PTR ds:[esi]
  416d70:	mov    ds:0x8b753104,al
  416d75:	xchg   esi,eax
  416d76:	aad    0x69
  416d78:	in     al,dx
  416d79:	lods   al,BYTE PTR ds:[esi]
  416d7a:	jnp    0x416d7d
  416d7c:	stos   BYTE PTR es:[edi],al
  416d7d:	test   BYTE PTR [edx-0x10],dl
  416d80:	or     al,0xd8
  416d82:	enter  0x250a,0x89
  416d86:	push   edx
  416d87:	cli    
  416d88:	cmp    bh,dl
  416d8a:	js     0x416df9
  416d8c:	in     al,dx
  416d8d:	mov    dh,0xf5
  416d8f:	xor    DWORD PTR ss:[edx-0x37053849],ebp
  416d96:	cwde   
  416d97:	mov    ch,0xee
  416d99:	out    dx,eax
  416d9a:	cdq    
  416d9b:	rcr    ah,0x60
  416d9e:	and    BYTE PTR [ecx+0x8],al
  416da1:	pop    ecx
  416da2:	adc    eax,0x6a9ddee6
  416da7:	loope  0x416d36
  416da9:	test   BYTE PTR [edx+eax*2-0x3a],al
  416dad:	js     0x416de8
  416daf:	nop
  416db0:	imul   esp,ebx,0xffffffda
  416db3:	(bad)  
  416db4:	imul   ecx
  416db6:	stos   DWORD PTR es:[edi],eax
  416db7:	dec    edx
  416db8:	sbb    al,BYTE PTR [edx+0x39]
  416dbb:	pop    es
  416dbc:	jle    0x416dc0
  416dbe:	mov    cl,BYTE PTR [edx+0x47111243]
  416dc4:	or     eax,0x65b9ecf0
  416dc9:	and    al,0x39
  416dcb:	pop    ebx
  416dcc:	loopne 0x416d9a
  416dce:	ins    BYTE PTR es:[edi],dx
  416dcf:	stc    
  416dd0:	adc    ebx,DWORD PTR [edx+0x2eb9e475]
  416dd6:	(bad)  
  416dd7:	xchg   esi,eax
  416dd8:	inc    esi
  416dd9:	push   ecx
  416dda:	jle    0x416d98
  416ddc:	arpl   WORD PTR fs:[edx+0x215cab29],ax
  416de3:	xchg   ebx,eax
  416de4:	mov    eax,0xe3ff8406
  416de9:	pop    ebp
  416dea:	pop    edi
  416deb:	mov    bl,0x0
  416ded:	nop
  416dee:	xor    edx,esi
  416df0:	add    eax,edi
  416df2:	add    edx,edi
  416df4:	imul   eax,edx
  416df7:	add    eax,DWORD PTR [ebp-0xc]
  416dfa:	mov    DWORD PTR [ebp-0xc],eax
  416dfd:	mov    eax,DWORD PTR [ebp-0xc]
  416e00:	mov    edx,DWORD PTR [ebp-0x20]
  416e03:	sub    eax,edi
  416e05:	sub    edx,edi
  416e07:	xor    eax,esi
  416e09:	xor    edx,esi
  416e0b:	cmp    edx,eax
  416e0d:	jne    0x4102d1
  416e13:	mov    eax,DWORD PTR [ebp-0x1c]
  416e16:	mov    edx,DWORD PTR [ebp-0x20]
  416e19:	xor    eax,esi
  416e1b:	add    eax,edi
  416e1d:	imul   eax,edx
  416e20:	mov    edx,DWORD PTR [ebp-0x24]
  416e23:	xor    edx,esi
  416e25:	add    edx,edi
  416e27:	or     eax,edx
  416e29:	mov    edx,DWORD PTR [ebp-0x18]
  416e2c:	xor    edx,esi
  416e2e:	add    eax,edx
  416e30:	mov    edx,DWORD PTR [ebp-0x18]
  416e33:	xor    edx,esi
  416e35:	add    eax,edx
  416e37:	mov    edx,DWORD PTR [ebp-0x10]
  416e3a:	lea    eax,[eax+edx*1+0x64e5b6]
  416e41:	jmp    0x4191ca
  416e46:	jmp    0x4191bb
  416e4b:	push   ebx
  416e4c:	ja     0x416e99
  416e4e:	cmp    BYTE PTR [ebx],ch
  416e50:	add    al,0xe3
  416e52:	adc    esp,ebp
  416e54:	xchg   edx,eax
  416e55:	push   edx
  416e56:	mov    al,0xc5
  416e58:	fisttp DWORD PTR [ebp+0x6124b752]
  416e5e:	bound  ecx,QWORD PTR [edx]
  416e60:	pop    edi
  416e61:	bound  esp,QWORD PTR [edx+0x47]
  416e64:	not    ecx
  416e66:	pop    edi
  416e67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e68:	push   ecx
  416e69:	inc    edi
  416e6a:	scas   eax,DWORD PTR es:[edi]
  416e6b:	outs   dx,DWORD PTR ds:[esi]
  416e6c:	bound  ebx,QWORD PTR [ecx]
  416e6e:	jp     0x416ecc
  416e70:	xchg   BYTE PTR [edx+0xc],bl
  416e73:	jae    0x416e6b
  416e75:	inc    ecx
  416e76:	stos   DWORD PTR es:[edi],eax
  416e77:	pusha  
  416e78:	adc    esp,DWORD PTR [ecx+0x6c]
  416e7b:	and    DWORD PTR [edx+edi*8-0xb3a0e4c],edx
  416e82:	out    0x1d,eax
  416e84:	addr16 lock mov ebp,0x7227e7
  416e8b:	xor    al,0xbf
  416e8d:	ror    DWORD PTR [eax],cl
  416e8f:	cdq    
  416e90:	inc    edx
  416e91:	or     al,0x8e
  416e93:	adc    al,0xd1
  416e95:	stos   DWORD PTR es:[edi],eax
  416e96:	popf   
  416e97:	imul   eax,DWORD PTR [edx],0x7ed8c76
  416e9d:	jmp    0x9c59:0xf4151261
  416ea4:	cmp    DWORD PTR [edi+0x70def631],ebx
  416eaa:	in     al,dx
  416eab:	call   0x7836773e
  416eb0:	(bad)  
  416eb1:	ficom  DWORD PTR [eax]
  416eb3:	and    dh,BYTE PTR ds:0x8ef39694
  416eb9:	call   0xe3578dff
  416ebe:	and    edx,DWORD PTR [edi]
  416ec0:	dec    ecx
  416ec1:	xchg   dx,ax
  416ec3:	dec    ebx
  416ec4:	mov    al,ds:0xb5519920
  416ec9:	mov    bh,0xee
  416ecb:	lds    ecx,FWORD PTR [edx]
  416ecd:	(bad)  
  416ece:	jno    0x416eab
  416ed0:	ss inc eax
  416ed2:	dec    ecx
  416ed3:	push   esp
  416ed4:	sub    al,0xb2
  416ed7:	and    BYTE PTR ds:0xd479a31d,bh
  416edd:	and    BYTE PTR [ebp+ebx*2-0x3],bh
  416ee1:	mov    eax,DWORD PTR [esi]
  416ee3:	and    DWORD PTR [eax],0xffffff83
  416ee6:	jne    0x416f42
  416ee8:	jns    0x416e82
  416eea:	cdq    
  416eeb:	out    dx,al
  416eec:	adc    DWORD PTR [eax+ecx*4-0x5e],esi
  416ef0:	repnz and BYTE PTR [edx],0xc4
  416ef4:	mov    bh,0xb4
  416ef6:	jecxz  0x416f5f
  416ef8:	lds    esi,FWORD PTR [ebx]
  416efa:	jne    0x416f77
  416efc:	or     DWORD PTR [edx+0x19de9962],eax
  416f02:	and    eax,0xe7128a48
  416f07:	jae    0x416f57
  416f09:	call   0xd379:0xeaa4c267
  416f10:	ins    DWORD PTR es:[edi],dx
  416f11:	icebp  
  416f12:	(bad)  
  416f14:	pop    ecx
  416f15:	ins    DWORD PTR es:[edi],dx
  416f16:	mov    esi,0x2a08d31b
  416f1b:	dec    ebx
  416f1c:	lock loope 0x416ebe
  416f1f:	mov    al,BYTE PTR [eax+0x5d5b036e]
  416f25:	and    dh,BYTE PTR [ecx-0x5e0e2e7e]
  416f2b:	nop
  416f2c:	mov    ebp,0xdabc56f
  416f31:	jl     0x416f81
  416f33:	popf   
  416f34:	or     BYTE PTR [ebp-0x21b51121],dh
  416f3a:	repnz sahf 
  416f3c:	or     DWORD PTR [esi-0x2828e26b],eax
  416f42:	ds push es
  416f44:	dec    eax
  416f45:	mov    ?,WORD PTR [ecx+eax*4+0x244df652]
  416f4c:	neg    esp
  416f4e:	adc    al,0x30
  416f50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f51:	jno    0x416f36
  416f53:	into   
  416f54:	jbe    0x416f19
  416f56:	out    dx,eax
  416f57:	xchg   ebp,eax
  416f58:	push   edx
  416f59:	pushf  
  416f5a:	adc    bl,BYTE PTR [eax]
  416f5c:	out    dx,eax
  416f5d:	mov    eax,0x6736e6d0
  416f62:	mov    bh,0x65
  416f64:	and    edx,ecx
  416f66:	xchg   edi,eax
  416f67:	popf   
  416f68:	hlt    
  416f69:	mov    BYTE PTR [esi-0x2f],dl
  416f6c:	sbb    al,0x37
  416f6e:	cmp    ah,BYTE PTR [ebx]
  416f70:	jne    0x416fba
  416f72:	mov    dl,0xaf
  416f74:	cmp    esp,DWORD PTR [eax]
  416f76:	psadbw mm4,mm5
  416f79:	push   ebp
  416f7a:	std    
  416f7b:	push   ss
  416f7c:	sub    dh,BYTE PTR [edi-0x44]
  416f7f:	sub    ebp,DWORD PTR [eax+0x2f7cdb5e]
  416f85:	arpl   WORD PTR [ecx],di
  416f87:	scas   al,BYTE PTR es:[edi]
  416f88:	fdiv   QWORD PTR [ebp+0x642f9a0a]
  416f8e:	xchg   ebx,eax
  416f8f:	cmp    ebx,DWORD PTR [esi]
  416f91:	int3   
  416f92:	pop    ds
  416f93:	inc    ecx
  416f94:	mov    eax,0x568452ab
  416f99:	aas    
  416f9a:	lds    esp,FWORD PTR [edi]
  416f9c:	push   esi
  416f9d:	retf   
  416f9e:	gs stos DWORD PTR es:[edi],eax
  416fa0:	icebp  
  416fa1:	imul   eax,DWORD PTR [eax],0xffffff94
  416fa4:	imul   ecx,edi,0x17db539f
  416faa:	cmp    eax,0x5eb5ae45
  416faf:	stos   DWORD PTR es:[edi],eax
  416fb0:	aaa    
  416fb1:	das    
  416fb2:	sbb    al,0x28
  416fb4:	or     DWORD PTR [ebx+0x2e6d5ac6],0xffffffad
  416fbb:	and    al,0x3d
  416fbd:	das    
  416fbe:	cmp    al,0x71
  416fc0:	fisubr DWORD PTR [esi-0x39]
  416fc3:	push   ss
  416fc4:	inc    ebp
  416fc5:	leave  
  416fc6:	pop    edi
  416fc7:	push   eax
  416fc8:	sbb    DWORD PTR [ebx-0x23d6f046],esi
  416fce:	cmp    eax,0x2c6646e6
  416fd3:	(bad)  
  416fd4:	icebp  
  416fd5:	loope  0x416f9c
  416fd7:	dec    ebx
  416fd8:	add    eax,0xf2505cf8
  416fdd:	lds    edx,FWORD PTR [eax-0x44]
  416fe0:	xor    BYTE PTR [edi],bl
  416fe2:	shl    DWORD PTR [eax+0x22],0x1e
  416fe6:	and    al,al
  416fe8:	scas   al,BYTE PTR es:[edi]
  416fe9:	pop    ebp
  416fea:	out    dx,al
  416feb:	pop    ecx
  416fec:	pop    esp
  416fed:	pop    edi
  416fee:	push   0xffffff8c
  416ff0:	repnz mov ds:0x688265e8,al
  416ff6:	leave  
  416ff7:	pop    esi
  416ff8:	mov    eax,ds:0x6fa43f2c
  416ffd:	mov    ebp,0xdf773d5
  417002:	sbb    bl,al
  417004:	mov    ch,0x7f
  417006:	jnp    0x416fee
  417008:	lods   al,BYTE PTR ds:[esi]
  417009:	mov    ds:0x480f4ef3,eax
  41700e:	fwait
  41700f:	dec    esi
  417010:	into   
  417011:	dec    edi
  417012:	sbb    DWORD PTR [eax],ecx
  417014:	sbb    al,0x7f
  417016:	adc    DWORD PTR [eax],0xffffff80
  417019:	or     ebx,0xffffffe7
  41701c:	or     DWORD PTR [eax+0x5b],ebx
  41701f:	jmp    0xda08adf3
  417024:	mov    WORD PTR [ecx+0x4e],ds
  417027:	mov    ebx,0xd7852565
  41702c:	lds    ecx,FWORD PTR [edi-0x6d]
  41702f:	push   0xd8497ea5
  417034:	fiadd  DWORD PTR [ebp-0x10]
  417037:	dec    esp
  417038:	aaa    
  417039:	pop    ss
  41703a:	mov    ah,0x5b
  41703c:	push   ebx
  41703d:	or     eax,0x65ac829b
  417042:	scas   al,BYTE PTR es:[edi]
  417043:	bound  ebp,QWORD PTR [eax+0x70]
  417046:	sbb    esp,edx
  417048:	inc    ebp
  417049:	repnz mov ebx,0x89aa3d42
  41704f:	inc    eax
  417050:	xchg   ebp,eax
  417051:	data16 jge 0x417092
  417054:	and    al,0x37
  417056:	xlat   BYTE PTR ds:[ebx]
  417057:	mov    edx,0xf04176af
  41705c:	aad    0x1d
  41705e:	push   0x7e
  417060:	jecxz  0x4170b1
  417062:	pop    edi
  417063:	retf   
  417064:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417065:	cmp    bl,cl
  417067:	rol    DWORD PTR [edx+0x5a0e2fbf],1
  41706d:	xor    eax,0xb5584ecb
  417072:	pop    edi
  417073:	in     al,0x50
  417075:	out    0xbf,eax
  417077:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417078:	fimul  WORD PTR [esi+0x1706b5bd]
  41707e:	jge    0x4170c7
  417080:	jecxz  0x4170b4
  417082:	sbb    al,0x3a
  417084:	aaa    
  417085:	xchg   edi,eax
  417086:	mov    ch,0xd1
  417088:	mov    bh,0xc
  41708a:	lods   al,BYTE PTR ds:[esi]
  41708b:	mov    DWORD PTR [ebx-0x495dd002],ecx
  417091:	xchg   edi,eax
  417092:	sub    al,ch
  417094:	hlt    
  417095:	inc    edi
  417096:	adc    eax,0xe0319be4
  41709b:	ins    DWORD PTR es:[edi],dx
  41709c:	cli    
  41709d:	or     BYTE PTR [edx+0xe],al
  4170a0:	mov    edi,ecx
  4170a2:	jnp    0x4170ef
  4170a4:	aaa    
  4170a5:	mov    ecx,0x1e227f42
  4170aa:	push   ss
  4170ab:	push   0xef0c0157
  4170b0:	inc    ebx
  4170b1:	stc    
  4170b2:	in     al,0x2e
  4170b4:	and    eax,0xc579883b
  4170b9:	adc    bh,BYTE PTR [edi-0x45693f3]
  4170bf:	pop    es
  4170c0:	lahf   
  4170c1:	iret   
  4170c2:	jae    0x417107
  4170c4:	xor    eax,0xdb14e763
  4170c9:	sar    BYTE PTR [eax+0x7e],1
  4170cc:	xchg   ecx,eax
  4170cd:	jge    0x41707d
  4170cf:	add    al,0x1e
  4170d1:	jge    0x417101
  4170d3:	outs   dx,BYTE PTR ds:[esi]
  4170d4:	pop    esi
  4170d5:	xchg   edx,eax
  4170d6:	cmp    al,0xfa
  4170d8:	or     BYTE PTR [edx+eax*4],ah
  4170db:	sbb    dl,BYTE PTR [eax]
  4170dd:	cs call 0xa6712a36
  4170e3:	adc    dl,cl
  4170e5:	xor    al,0xdc
  4170e7:	jge    0x41706b
  4170e9:	or     ah,BYTE PTR [ecx-0x49061e52]
  4170ef:	sbb    al,0xd3
  4170f1:	rcr    BYTE PTR [eax+eax*4+0x1a067182],0xa3
  4170f9:	scas   eax,DWORD PTR es:[edi]
  4170fa:	test   DWORD PTR [edi-0x6f],edx
  4170fd:	pushf  
  4170fe:	mov    WORD PTR [ecx+0x57],?
  417101:	cmc    
  417102:	std    
  417103:	mov    eax,0x2e0e35a7
  417108:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41710a:	fbstp  TBYTE PTR [eax+0x6df218ec]
  417110:	fsub   st,st(0)
  417112:	sub    ch,BYTE PTR [ebx-0x72d1b575]
  417118:	jb     0x417145
  41711a:	push   cs
  41711b:	outs   dx,DWORD PTR ds:[esi]
  41711c:	into   
  41711d:	into   
  41711e:	sub    ch,cl
  417120:	pop    edi
  417121:	add    ah,0x31
  417124:	xor    eax,0xd682672b
  417129:	mov    ebp,gs
  41712b:	mov    esp,0x3a3f9509
  417130:	dec    esp
  417131:	push   ebx
  417132:	dec    esp
  417133:	mov    dl,0x45
  417135:	and    eax,0xc3f8ed1b
  41713a:	sub    DWORD PTR [ebx],0x6a2be4e6
  417140:	pop    esi
  417141:	push   edi
  417142:	jl     0x4171bf
  417144:	cmp    BYTE PTR [edx-0x7],bl
  417147:	xor    DWORD PTR [eax],0xa24a9016
  41714d:	adc    WORD PTR [ebp+0x14d4a922],si
  417154:	mov    ds:0x9030d89b,al
  417159:	jmp    0x8377:0xf2b0ddf8
  417160:	fadd   QWORD PTR [eax+edi*1-0x4c]
  417164:	push   0xa23b784b
  417169:	push   esi
  41716a:	xchg   ebx,eax
  41716b:	dec    esp
  41716c:	rcl    DWORD PTR [ecx],cl
  41716e:	sub    BYTE PTR [esi],dh
  417170:	or     eax,0xb04ae31b
  417175:	clc    
  417176:	test   al,0x76
  417178:	leave  
  417179:	xchg   edx,eax
  41717a:	push   eax
  41717b:	jae    0x4171c7
  41717d:	dec    ebx
  41717e:	popa   
  41717f:	and    cl,BYTE PTR [eax]
  417181:	loop   0x417172
  417183:	jnp    0x4171b7
  417185:	fcomip st,st(0)
  417187:	ss inc esi
  417189:	adc    bl,BYTE PTR [edi]
  41718b:	pop    edx
  41718c:	out    dx,eax
  41718d:	test   eax,0xcdfd32ee
  417192:	add    DWORD PTR [esi],ebx
  417194:	das    
  417195:	pop    ss
  417196:	and    BYTE PTR [edi-0xe],cl
  417199:	xor    ecx,DWORD PTR [edi]
  41719b:	fisubr WORD PTR [ecx+0x2b]
  41719e:	repnz sbb eax,0xe4c638fe
  4171a4:	ror    DWORD PTR [ebx-0x3fffddac],0x4b
  4171ab:	xor    edx,DWORD PTR [eax]
  4171ad:	imul   ecx,DWORD PTR [eax-0x32],0x5685d00a
  4171b4:	mov    bh,0x9a
  4171b6:	mov    BYTE PTR [eax],bl
  4171b8:	xchg   ebx,eax
  4171b9:	ins    DWORD PTR es:[edi],dx
  4171ba:	push   esp
  4171bb:	arpl   WORD PTR [eax+ecx*1+0x37],dx
  4171bf:	mov    ecx,0xa815be20
  4171c4:	(bad)  
  4171c5:	leave  
  4171c6:	xchg   esi,eax
  4171c7:	lock sub al,0x6b
  4171ca:	scas   al,BYTE PTR es:[edi]
  4171cb:	repz fcmovu st,st(0)
  4171ce:	add    eax,0xe5c97b17
  4171d3:	mov    ds:0x8f3be611,al
  4171d8:	xor    cl,BYTE PTR [edx+ebx*2-0x5f9820c7]
  4171df:	pop    ecx
  4171e0:	inc    edi
  4171e1:	cwde   
  4171e2:	rcl    dl,cl
  4171e4:	out    dx,eax
  4171e5:	push   edi
  4171e6:	mov    edi,0xaba68b96
  4171eb:	mov    dl,0x58
  4171ed:	daa    
  4171ee:	and    edi,esp
  4171f0:	scas   eax,DWORD PTR es:[edi]
  4171f1:	inc    edi
  4171f2:	push   esp
  4171f3:	fnsave [esi-0x13]
  4171f6:	inc    esp
  4171f7:	adc    esi,DWORD PTR ds:0xc76e7bd2
  4171fd:	cmp    al,BYTE PTR [bp+si-0x47]
  417201:	jge    0x4171fd
  417203:	add    ch,BYTE PTR [eax]
  417205:	and    BYTE PTR ds:0x84596362,ah
  41720b:	fstp   QWORD PTR [edi+0x27]
  41720e:	fs mov edi,0x610a2d04
  417214:	and    DWORD PTR ds:0xaac9a96c,eax
  41721a:	or     DWORD PTR [ecx+ebp*4],ebx
  41721d:	sar    DWORD PTR [ebp-0x4d],0x12
  417221:	lock dec edi
  417223:	fs pop ebp
  417225:	and    edi,DWORD PTR [ebx-0x7b]
  417228:	outs   dx,DWORD PTR ds:[esi]
  417229:	cmp    al,0x21
  41722b:	pop    esp
  41722c:	or     DWORD PTR [eax],edi
  41722e:	xchg   BYTE PTR [eax+0x12],dl
  417231:	cmp    ebp,0x7f7023cb
  417237:	imul   ebp,DWORD PTR [eax+0x7ca5a9ba],0x4b4d6d74
  417241:	stc    
  417242:	xor    ah,BYTE PTR [ebx+0xb]
  417245:	test   BYTE PTR [edi*8+0x536b8100],dl
  41724c:	int    0xf3
  41724e:	int    0xd5
  417250:	sbb    edi,ecx
  417252:	test   BYTE PTR [ecx-0x468af669],dh
  417258:	pop    esp
  417259:	shl    BYTE PTR [eax],cl
  41725b:	jg     0x417250
  41725d:	or     DWORD PTR [edx+0x1f5552cd],eax
  417263:	data16 cmp dh,BYTE PTR [eax+0x18]
  417267:	outs   dx,BYTE PTR ds:[esi]
  417268:	jnp    0x41724a
  41726a:	mov    DWORD PTR [edx+eiz*1],esp
  41726d:	imul   esi,DWORD PTR [ecx],0x4a
  417270:	sar    DWORD PTR [ebx],cl
  417272:	loop   0x417269
  417274:	jmp    0x54dd5d90
  417279:	out    dx,eax
  41727a:	push   0xffffffd6
  41727c:	pop    ss
  41727d:	mov    ebx,0xd061c5aa
  417282:	inc    esp
  417283:	mov    ds:0xe16c0553,al
  417288:	pop    ebx
  417289:	hlt    
  41728a:	dec    ebp
  41728b:	inc    ecx
  41728c:	jo     0x4172aa
  41728e:	mov    bh,0x3b
  417290:	xchg   edi,eax
  417291:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  417293:	mov    ebx,0xd5c3a3c9
  417298:	arpl   WORD PTR [edx+edi*1],di
  41729b:	in     eax,dx
  41729c:	shr    BYTE PTR [edi-0x2cd3e971],cl
  4172a2:	adc    DWORD PTR [eax+0x5fa6dae4],edx
  4172a8:	and    ecx,DWORD PTR [ecx-0xa]
  4172ab:	clc    
  4172ac:	ja     0x4172eb
  4172ae:	sub    bl,BYTE PTR [ebx+0x3]
  4172b1:	fdiv   DWORD PTR [eax]
  4172b3:	sbb    bl,ch
  4172b5:	sbb    ah,bh
  4172b7:	pop    ebx
  4172b8:	xchg   edi,eax
  4172b9:	bound  ebx,QWORD PTR [eax+0x26]
  4172bc:	bound  edx,QWORD PTR [ecx+0x42]
  4172bf:	mov    edi,0x33e219fe
  4172c4:	test   al,0x86
  4172c6:	sub    DWORD PTR ds:0x97a9326f,edi
  4172cc:	pusha  
  4172cd:	(bad)  
  4172ce:	pop    ebx
  4172cf:	and    eax,0xed1ba22b
  4172d4:	(bad)  
  4172d5:	or     DWORD PTR gs:[ebx-0x1a69f35b],0xb8e8aae8
  4172e0:	xor    eax,0x504a72ee
  4172e5:	shr    DWORD PTR [edx-0x7d4997d9],cl
  4172eb:	cmp    al,0xcc
  4172ed:	sub    DWORD PTR [eax],esi
  4172ef:	dec    edi
  4172f0:	test   esi,edx
  4172f2:	dec    ebp
  4172f3:	push   edi
  4172f4:	or     DWORD PTR [ecx-0x72],esi
  4172f7:	lods   al,BYTE PTR ds:[esi]
  4172f8:	inc    edx
  4172f9:	mov    ds:0xe538467e,eax
  4172fe:	addr16 retf 0x3922
  417302:	cmp    al,0xea
  417304:	jecxz  0x417286
  417306:	mov    bh,0x70
  417308:	pop    edx
  417309:	(bad)  
  41730a:	imul   esi,edx,0x19eece63
  417310:	pop    eax
  417311:	sub    DWORD PTR [edx],esi
  417313:	stc    
  417314:	xor    dl,BYTE PTR [ebx]
  417316:	or     ebx,ecx
  417318:	xor    ch,bh
  41731a:	xchg   BYTE PTR [edx+0x7faa6867],dh
  417320:	xor    edi,ecx
  417322:	jle    0x4173a3
  417324:	mov    bh,0xa3
  417326:	sar    DWORD PTR [ecx-0x6a],cl
  417329:	push   edi
  41732a:	out    dx,eax
  41732b:	ds nop
  41732d:	loope  0x417314
  41732f:	repz fbld TBYTE PTR cs:[edi+0x549c3730]
  417337:	fld1   
  417339:	(bad)  
  41733a:	std    
  41733b:	je     0x41734c
  41733d:	sub    BYTE PTR [ebx-0x3e67228a],0xb4
  417344:	loope  0x4173c2
  417346:	lods   al,BYTE PTR ds:[esi]
  417347:	pop    ebp
  417348:	dec    edi
  417349:	push   cs
  41734a:	in     al,dx
  41734b:	xchg   ebp,eax
  41734c:	out    dx,al
  41734d:	or     BYTE PTR [ebp+0x36],bh
  417350:	dec    ebx
  417351:	mov    ah,0xc9
  417353:	pop    esp
  417354:	jge    0x417360
  417356:	sub    BYTE PTR [ebx-0x2db81d97],dh
  41735c:	cmp    ecx,ebx
  41735e:	mov    ds:0xd9b4eea2,al
  417363:	fnsave [esi]
  417365:	xlat   BYTE PTR ss:[ebx]
  417367:	pop    edx
  417368:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417369:	shr    edi,1
  41736b:	repnz repnz pop ecx
  41736e:	cdq    
  41736f:	sbb    ebx,DWORD PTR [edx+0x71]
  417372:	jb     0x41738b
  417374:	stos   BYTE PTR es:[edi],al
  417375:	mov    ds:0x4516682f,eax
  41737a:	lods   eax,DWORD PTR ds:[esi]
  41737b:	enter  0x41ac,0xc
  41737f:	js     0x4173a6
  417381:	adc    cx,WORD PTR [edx+0x45a6149e]
  417388:	push   0x25691ec1
  41738d:	(bad)  
  41738e:	xor    DWORD PTR [ebx+0x36dbd5ec],esp
  417394:	(bad)  
  417395:	jns    0x4173fd
  417397:	add    bl,0xf9
  41739a:	inc    ebx
  41739b:	sub    BYTE PTR ds:0x6dd3bf51,ah
  4173a1:	mov    ah,0x72
  4173a3:	sar    DWORD PTR [esi+ebp*8-0x43],cl
  4173a7:	cmp    esp,ebx
  4173a9:	test   DWORD PTR [edi],0x8ea6104d
  4173af:	adc    cl,dh
  4173b1:	adc    eax,0x1fd8946a
  4173b6:	imul   esp,DWORD PTR ds:0xe636f60,0xffffffdc
  4173bd:	jecxz  0x4173f8
  4173bf:	mov    eax,0x156ce499
  4173c4:	mov    WORD PTR [eax-0x2],?
  4173c7:	sub    dl,BYTE PTR [edi-0x4ad61c32]
  4173cd:	xchg   ebx,eax
  4173ce:	hlt    
  4173cf:	jnp    0x417419
  4173d1:	in     al,0xba
  4173d3:	cmp    BYTE PTR [ebp-0x13],dl
  4173d6:	mov    dh,BYTE PTR [ecx+0x4c350ab9]
  4173dc:	or     BYTE PTR [ebp+0x57e48920],0x6
  4173e3:	or     DWORD PTR [edi+0xef5a00a],edx
  4173e9:	fsub   st(6),st
  4173eb:	sbb    edi,DWORD PTR [edx-0x3c]
  4173ee:	sub    DWORD PTR [esi-0xe],eax
  4173f1:	lea    ecx,[eax-0x6]
  4173f4:	fsub   QWORD PTR [esp+edi*2+0x57]
  4173f8:	push   esi
  4173f9:	jecxz  0x4173ce
  4173fb:	fwait
  4173fc:	add    eax,DWORD PTR [esi-0x39b712d5]
  417402:	fisub  DWORD PTR [eax]
  417404:	pop    ss
  417405:	pushf  
  417406:	clc    
  417407:	jmp    0x417408
  417409:	or     dh,BYTE PTR [edx]
  41740b:	adc    esi,DWORD PTR [ebp+0x502eaf3d]
  417411:	xlat   BYTE PTR ds:[ebx]
  417412:	pop    ecx
  417413:	sbb    ebp,0x9c92cea0
  417419:	jp     0x417470
  41741b:	ficomp DWORD PTR [edi]
  41741d:	data16 fisub DWORD PTR [eax-0x20]
  417421:	push   cs
  417422:	loopne 0x417438
  417424:	ret    
  417425:	xchg   esi,eax
  417426:	fild   DWORD PTR [esi-0x7c]
  417429:	and    DWORD PTR [edx+0x3e],ebp
  41742c:	repnz es add al,0x34
  417430:	mov    bl,BYTE PTR [esi]
  417432:	int3   
  417433:	repnz shl BYTE PTR [edx+0x78],0xe9
  417438:	inc    eax
  417439:	and    al,0x94
  41743b:	mov    ah,0xe9
  41743d:	fxch   st(4)
  41743f:	cmp    BYTE PTR [ecx+0x682e668a],dh
  417445:	cli    
  417446:	push   ebp
  417447:	adc    eax,ebp
  417449:	adc    bl,BYTE PTR [edi]
  41744b:	dec    esp
  41744c:	mov    bh,0xd9
  41744e:	dec    ebx
  41744f:	mov    esi,0x5336681
  417454:	int    0xe
  417456:	arpl   WORD PTR [ebx+0x5d],bx
  417459:	ds xchg ebp,eax
  41745b:	adc    al,0x8b
  41745d:	addr16 int 0x63
  417460:	retf   
  417461:	loope  0x41747d
  417463:	aad    0x37
  417465:	loopne 0x417451
  417467:	shl    BYTE PTR [ebx-0x5d],cl
  41746a:	jge    0x417413
  41746c:	outs   dx,DWORD PTR ds:[esi]
  41746d:	pop    ds
  41746e:	pusha  
  41746f:	ds xchg edx,eax
  417471:	dec    ebx
  417472:	xchg   esp,eax
  417473:	cmp    ah,BYTE PTR [esi]
  417475:	pusha  
  417476:	int    0xeb
  417478:	inc    edi
  417479:	out    0xe2,al
  41747b:	mov    ebx,eax
  41747d:	jae    0x4174e1
  41747f:	pop    ecx
  417480:	jmp    0x7588:0xa7921376
  417487:	cmp    esp,esi
  417489:	dec    ebp
  41748a:	sbb    al,0x3e
  41748c:	pop    ecx
  41748d:	ds pop edi
  41748f:	sti    
  417490:	ror    edx,0x29
  417493:	jb     0x41741e
  417495:	in     al,0x44
  417497:	icebp  
  417498:	inc    esp
  417499:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41749a:	scas   eax,DWORD PTR es:[edi]
  41749b:	(bad)  
  41749c:	pop    esi
  41749d:	mov    ds:0x9be5ba86,eax
  4174a2:	loopne 0x4174f4
  4174a4:	jge    0x41751d
  4174a6:	rcl    BYTE PTR [eax+0x2e9a5d28],0xd6
  4174ad:	aad    0x49
  4174af:	gs stos BYTE PTR es:[edi],al
  4174b1:	add    eax,0x25ac3804
  4174b6:	mov    dh,0xf5
  4174b8:	adc    BYTE PTR [edx],ch
  4174ba:	pushf  
  4174bb:	es pop eax
  4174bd:	jecxz  0x417449
  4174bf:	cmp    dh,BYTE PTR [eax+ebx*1-0x41]
  4174c3:	pop    esi
  4174c4:	dec    esi
  4174c5:	add    eax,0xc12a094a
  4174ca:	sti    
  4174cb:	adc    ebp,eax
  4174cd:	pop    edx
  4174ce:	xor    edi,DWORD PTR [ebx+0x115300a6]
  4174d4:	js     0x4174af
  4174d6:	sbb    al,0xaa
  4174d8:	cmc    
  4174d9:	dec    BYTE PTR [esi+0x39]
  4174dc:	xchg   ecx,eax
  4174dd:	sub    BYTE PTR [edx+0x332d96ad],cl
  4174e3:	leave  
  4174e4:	lods   al,BYTE PTR ss:[esi]
  4174e6:	(bad)
  4174e9:	push   ecx
  4174ea:	sub    DWORD PTR cs:[edi+edi*1],ebp
  4174ee:	fiadd  DWORD PTR [ecx]
  4174f0:	xor    BYTE PTR [ebx+0x286dd728],al
  4174f6:	sbb    BYTE PTR [edx-0x58],0x8d
  4174fa:	fcomp  DWORD PTR [edi-0x3fa889c2]
  417500:	mov    bh,0x15
  417502:	sub    al,0x98
  417504:	in     al,dx
  417505:	lock (bad) 
  417507:	ret    
  417508:	pop    edi
  417509:	pop    ebx
  41750a:	xchg   BYTE PTR [ebx-0x34a0e1d3],cl
  417510:	loopne 0x41755f
  417512:	jg     0x4174c8
  417514:	sub    BYTE PTR [edi-0x4c],ah
  417517:	inc    ecx
  417518:	pop    esi
  417519:	inc    edx
  41751a:	sbb    eax,0x200b24b1
  41751f:	adc    ah,BYTE PTR [ecx-0x6b74f5d]
  417525:	and    DWORD PTR [eax+esi*1],eax
  417528:	in     al,dx
  417529:	add    DWORD PTR [ecx-0x14a58c95],edi
  41752f:	fidivr DWORD PTR [eax-0x46c5f13]
  417535:	(bad)  
  417536:	push   ebp
  417537:	(bad)  
  417538:	leave  
  417539:	popa   
  41753a:	icebp  
  41753b:	enter  0x1fcd,0x84
  41753f:	push   0x1c87b490
  417544:	out    dx,eax
  417545:	cmp    DWORD PTR [ebp-0x11],0xb42d4847
  41754c:	add    DWORD PTR [ebp+0x2130b345],esp
  417552:	ss push esi
  417554:	mov    dh,0x18
  417556:	cmp    eax,0x764eb7f8
  41755b:	pop    ebx
  41755c:	adc    BYTE PTR ds:0xb125542f,bl
  417562:	loopne 0x41753a
  417564:	fsub   DWORD PTR [eax]
  417566:	xchg   edx,eax
  417567:	push   ebx
  417568:	sub    DWORD PTR [ebx+ebp*4],edx
  41756b:	int    0x31
  41756d:	mov    bl,BYTE PTR [ebx-0x7283cc8e]
  417573:	jp     0x417517
  417575:	add    DWORD PTR [esi],ebp
  417577:	or     BYTE PTR [edx],ch
  417579:	xchg   DWORD PTR [esi-0xfeece7f],edx
  41757f:	in     al,0xbe
  417581:	repnz sahf 
  417583:	jne    0x4175c4
  417585:	inc    esi
  417586:	mov    dh,0x6d
  417588:	jno    0x41759f
  41758a:	inc    ebp
  41758b:	dec    esi
  41758c:	inc    ebp
  41758d:	push   esp
  41758e:	dec    ebx
  41758f:	inc    edx
  417590:	jmp    0x417562
  417592:	lods   eax,DWORD PTR ds:[esi]
  417593:	push   eax
  417594:	lods   al,BYTE PTR ds:[esi]
  417595:	fnstsw WORD PTR [ebx]
  417597:	sub    BYTE PTR [edi+eax*8],al
  41759a:	mov    esi,0x875554d0
  41759f:	pushf  
  4175a0:	out    0xb9,al
  4175a2:	clc    
  4175a3:	pusha  
  4175a4:	dec    edx
  4175a5:	test   eax,0xb3805828
  4175aa:	jp     0x417578
  4175ac:	mov    bh,0xf1
  4175ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175af:	(bad)  
  4175b1:	fsub   DWORD PTR [ecx+0x75879db2]
  4175b7:	inc    ebx
  4175b8:	ja     0x4175b3
  4175ba:	cmp    edx,DWORD PTR [ebx+edi*1+0xb14b000]
  4175c1:	sub    edx,ecx
  4175c3:	mov    ds:0xe7bccee4,eax
  4175c8:	lock test al,0xe2
  4175cb:	xlat   BYTE PTR ds:[ebx]
  4175cc:	popa   
  4175cd:	jns    0x41758c
  4175cf:	ins    DWORD PTR es:[edi],dx
  4175d0:	push   cs
  4175d1:	or     cl,BYTE PTR ds:0x674eab02
  4175d7:	fstp   TBYTE PTR [esi-0x47e615a3]
  4175dd:	sbb    bh,ah
  4175df:	sbb    al,0x4c
  4175e1:	jmp    0x41763a
  4175e3:	int    0xc0
  4175e5:	cmp    edx,ecx
  4175e7:	fwait
  4175e8:	(bad)  
  4175e9:	push   ebx
  4175ea:	das    
  4175eb:	sbb    dl,BYTE PTR [esi-0x5a]
  4175ee:	mov    al,BYTE PTR [ebx+esi*1+0x73]
  4175f2:	xchg   ebx,eax
  4175f3:	xor    dh,BYTE PTR [edx-0x230f7577]
  4175f9:	outs   dx,DWORD PTR ds:[esi]
  4175fa:	mov    ecx,0x8f0a6e23
  4175ff:	cmp    BYTE PTR [eax+ebp*4-0x2],bh
  417603:	lods   al,BYTE PTR ds:[esi]
  417604:	ret    
  417605:	popa   
  417606:	mov    eax,ds:0x77ced8ba
  41760b:	or     DWORD PTR [esi],0x6f
  41760e:	push   eax
  41760f:	leave  
  417610:	mov    cl,0x18
  417612:	aaa    
  417613:	and    BYTE PTR [ebp+0x60],dh
  417616:	hlt    
  417617:	push   edx
  417618:	mov    edi,0xc30f828c
  41761d:	dec    esp
  41761e:	jge    0x417638
  417620:	pop    edx
  417621:	(bad)  
  417622:	mov    ah,0x78
  417624:	jmp    0x4175f2
  417626:	mov    al,0xac
  417628:	imul   esp,DWORD PTR [eax-0x6e],0x139582b3
  41762f:	ins    DWORD PTR es:[edi],dx
  417630:	pop    edi
  417631:	dec    ebp
  417632:	repnz lahf 
  417634:	icebp  
  417635:	pop    edx
  417636:	outs   dx,BYTE PTR ds:[esi]
  417637:	shl    bh,cl
  417639:	call   DWORD PTR [edi+0x10]
  41763c:	xor    BYTE PTR [ebx],ch
  41763e:	iret   
  41763f:	cmp    bl,al
  417641:	adc    eax,DWORD PTR [ebp+edi*4+0x6fbe4a4]
  417648:	stc    
  417649:	sbb    al,0xc
  41764b:	test   edx,0xa5453f7b
  417651:	fidivr WORD PTR [edi]
  417653:	mov    ds:0xeaa684db,eax
  417658:	xor    ebp,ebp
  41765a:	inc    edi
  41765b:	mov    bl,0x74
  41765d:	or     esp,DWORD PTR [edi+ebp*2-0x6eba402c]
  417664:	pop    ds
  417665:	jle    0x417617
  417667:	test   eax,0x872fed2c
  41766c:	repz sbb BYTE PTR ds:0x8092922b,cl
  417673:	inc    esi
  417674:	call   FWORD PTR [ebx]
  417676:	mov    cl,0xf2
  417678:	ret    0xdf4b
  41767b:	push   esp
  41767c:	das    
  41767d:	mov    cl,0xf6
  41767f:	fst    QWORD PTR [ebp-0x51432437]
  417685:	mov    edi,0xf87fac28
  41768a:	mov    dl,0xa1
  41768c:	sbb    ch,al
  41768e:	aaa    
  41768f:	and    cl,BYTE PTR [ebp+esi*2+0x50cbd27e]
  417696:	imul   esi,DWORD PTR [ecx+0x14],0x46
  41769a:	xor    eax,DWORD PTR [edx+0x4ca50687]
  4176a0:	call   0xd1736c0e
  4176a5:	jge    0x41762d
  4176a7:	mov    dl,0x13
  4176a9:	sbb    al,0x6
  4176ab:	mov    ?,WORD PTR [ecx-0x70cc8c5c]
  4176b1:	div    BYTE PTR [ecx-0x3ede96d6]
  4176b7:	adc    BYTE PTR [ebx-0x52],bh
  4176ba:	addr16 int3 
  4176bc:	inc    ebx
  4176bd:	jbe    0x41765e
  4176bf:	xchg   ebx,eax
  4176c0:	adc    eax,0x4202bb41
  4176c5:	in     eax,0xdb
  4176c7:	icebp  
  4176c8:	sub    DWORD PTR [ebx],ebp
  4176ca:	jecxz  0x417681
  4176cc:	push   ecx
  4176cd:	test   al,0xbb
  4176cf:	call   0xeef82ed5
  4176d4:	dec    esp
  4176d5:	cwde   
  4176d6:	enter  0x7a2,0x94
  4176da:	popf   
  4176db:	sbb    DWORD PTR [ecx],0x13e39d6b
  4176e1:	mov    ecx,0x66b912cf
  4176e6:	dec    esi
  4176e7:	pop    edx
  4176e8:	repnz popf 
  4176ea:	sub    esp,eax
  4176ec:	js     0x4176a4
  4176ee:	inc    ebp
  4176ef:	(bad)  
  4176f0:	jmp    DWORD PTR [edi+eiz*8+0x54f97621]
  4176f7:	pop    ss
  4176f8:	inc    ebp
  4176f9:	fadd   DWORD PTR [ebx-0x433c54dd]
  4176ff:	xchg   edi,eax
  417700:	xor    al,BYTE PTR [esi+0x50]
  417703:	adc    eax,0xcbdf0dd7
  417708:	pop    esi
  417709:	inc    eax
  41770a:	adc    DWORD PTR [ebp+0x51f9c1f8],esp
  417710:	xor    al,dh
  417712:	(bad)  ds:0xcc5cd2f6
  417718:	add    ebx,DWORD PTR [ebx+ecx*8]
  41771b:	jbe    0x417722
  41771d:	loopne 0x417733
  41771f:	or     eax,DWORD PTR [edi-0x142c619c]
  417725:	addr16 xchg ecx,eax
  417727:	mov    ebx,0xabd2c251
  41772c:	in     al,0xbd
  41772e:	aad    0x41
  417730:	aam    0x4
  417732:	ficomp DWORD PTR [esi+0x4091ec0c]
  417738:	lahf   
  417739:	mov    BYTE PTR [edx+0xfffc8b9],bh
  41773f:	sub    ebx,DWORD PTR gs:[esp+edx*8-0x4be8239e]
  417747:	sbb    eax,0xa10f1178
  41774c:	dec    edi
  41774d:	lods   eax,DWORD PTR ds:[esi]
  41774e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41774f:	outs   dx,DWORD PTR ds:[esi]
  417750:	xchg   edx,eax
  417751:	stos   DWORD PTR es:[edi],eax
  417752:	sar    BYTE PTR [esi-0x3e],0x33
  417756:	inc    edi
  417757:	dec    eax
  417758:	pushf  
  417759:	adc    eax,0xa087d0e6
  41775e:	inc    ecx
  41775f:	push   ds
  417760:	jmp    0xab8cdeaf
  417765:	hlt    
  417766:	leave  
  417767:	xor    ecx,DWORD PTR [edi+0x39ac3843]
  41776d:	jmp    0x41778d
  41776f:	push   ds
  417770:	in     eax,0xe0
  417772:	dec    ebp
  417773:	mov    dh,bl
  417775:	and    al,0xea
  417777:	inc    esp
  417778:	shr    BYTE PTR [ecx+0x60],0xb3
  41777c:	jb     0x41779d
  41777e:	mov    WORD PTR [ebx],ss
  417780:	aas    
  417781:	mov    cl,0x8c
  417783:	push   eax
  417784:	mov    ch,0xd0
  417786:	pop    ebx
  417787:	adc    ebp,edi
  417789:	outs   dx,BYTE PTR ds:[esi]
  41778a:	(bad)  
  41778b:	stc    
  41778c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41778d:	rcr    BYTE PTR [eax],cl
  41778f:	call   0xf785:0x7d4d9b66
  417796:	xor    BYTE PTR [edi+0x52],al
  417799:	dec    ebp
  41779a:	xchg   edx,eax
  41779b:	sbb    al,0xb7
  41779d:	jmp    0x7cbe:0x4aefa90c
  4177a4:	add    al,0x9c
  4177a6:	out    dx,al
  4177a7:	into   
  4177a8:	fwait
  4177a9:	in     al,dx
  4177aa:	pop    ecx
  4177ab:	cmp    dl,BYTE PTR [edx-0x2033ffa5]
  4177b1:	fxch   st(6)
  4177b3:	xchg   ecx,eax
  4177b4:	mov    edx,es
  4177b6:	xchg   DWORD PTR [edx+0x18fbdd05],ebp
  4177bc:	fsubr  DWORD PTR [edi-0x34]
  4177bf:	js     0x417827
  4177c1:	pop    ss
  4177c2:	push   0x45
  4177c4:	xor    BYTE PTR [ebx+ebp*8+0x74],dl
  4177c8:	imul   ebx,DWORD PTR [ebx],0xe132780
  4177ce:	pop    edi
  4177cf:	ret    
  4177d0:	rol    BYTE PTR [ebx-0x2fb67d17],0xea
  4177d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177d8:	xchg   edi,eax
  4177d9:	mov    bp,0xca65
  4177dd:	addr16 push ecx
  4177df:	inc    ebx
  4177e0:	sbb    eax,0xfc1dddcd
  4177e5:	mov    esi,0x25e54ce2
  4177ea:	pop    edi
  4177eb:	scas   eax,DWORD PTR es:[edi]
  4177ec:	mov    DWORD PTR [ebx],0xe84a357d
  4177f2:	adc    al,0x3
  4177f4:	and    eax,edi
  4177f6:	mov    ds:0x4ccbeac0,al
  4177fb:	shl    BYTE PTR [esi-0x10d902e7],1
  417801:	xlat   BYTE PTR ds:[ebx]
  417802:	(bad)  [ecx]
  417804:	xchg   BYTE PTR [edx-0x66a07e3c],ah
  41780a:	sub    bl,BYTE PTR [ebx+0x38853880]
  417810:	inc    ecx
  417811:	sub    ch,ch
  417813:	bound  ebp,QWORD PTR [ebx+edx*8]
  417816:	scas   eax,DWORD PTR es:[edi]
  417817:	pop    esp
  417818:	adc    al,0x52
  41781a:	pop    es
  41781b:	dec    esp
  41781c:	fldcw  WORD PTR [edx+0x65]
  41781f:	cmc    
  417820:	xchg   BYTE PTR [ebx+0x2baa8a71],dl
  417826:	and    BYTE PTR [ebx+0x67],ah
  417829:	fbstp  TBYTE PTR cs:[ebp+0x53]
  41782d:	adc    al,0xe8
  41782f:	dec    esi
  417830:	(bad)  
  417831:	mov    eax,ds:0xee6ac33
  417836:	mov    ch,0x21
  417838:	push   edi
  417839:	out    0xa0,eax
  41783b:	ins    DWORD PTR es:[edi],dx
  41783c:	repz dec ebx
  41783e:	popaw  
  417840:	mov    BYTE PTR ds:0x4b237739,ch
  417846:	sar    edi,0xb4
  417849:	pop    es
  41784a:	mov    ebx,0x8efdda53
  41784f:	mov    cl,0xee
  417851:	and    BYTE PTR ds:0x51132b9b,bh
  417857:	mov    al,0x61
  417859:	adc    edi,DWORD PTR [edx-0x657e25aa]
  41785f:	(bad)  
  417860:	rcr    BYTE PTR [edx-0x33],0x9a
  417864:	jne    0x41786f
  417866:	loopne 0x4178bd
  417868:	aam    0x29
  41786a:	fsub   QWORD PTR [edx+0x43813b1f]
  417870:	imul   edi,DWORD PTR [edi-0x2b],0x5cc10698
  417877:	loopne 0x417835
  417879:	sub    DWORD PTR [ebp+0x9931055],ebx
  41787f:	mov    ecx,0xa3cedf02
  417884:	repnz sbb DWORD PTR [ebx-0x4369fb3b],edi
  41788b:	sbb    dh,ah
  41788d:	lds    edx,FWORD PTR [ecx+0x20abf8e2]
  417893:	or     BYTE PTR [ebx+esi*1+0x39],0xa2
  417898:	xchg   esp,eax
  417899:	dec    edi
  41789a:	mov    eax,0x791c33b6
  41789f:	push   cs
  4178a0:	sub    eax,0x240794ba
  4178a5:	mov    ah,ch
  4178a7:	gs ret 
  4178a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178aa:	add    eax,0x51b9e913
  4178af:	bound  edi,QWORD PTR [ecx+0x66]
  4178b2:	sub    BYTE PTR [edi-0x4b9a714c],cl
  4178b8:	out    dx,al
  4178b9:	enter  0xb12d,0xd
  4178bd:	hlt    
  4178be:	sub    bh,BYTE PTR [edx+0x5f]
  4178c1:	jmp    0x9c2707cb
  4178c6:	dec    cl
  4178c8:	ins    DWORD PTR es:[edi],dx
  4178c9:	mov    ebp,0xa4ec28c2
  4178ce:	push   es
  4178cf:	inc    edi
  4178d0:	rep lods eax,DWORD PTR ds:[esi]
  4178d2:	and    ecx,esp
  4178d4:	fcomp  QWORD PTR [ecx-0xda9b8b]
  4178da:	jns    0x417927
  4178dc:	lods   eax,DWORD PTR ds:[esi]
  4178dd:	cld    
  4178de:	mov    edi,0x7134f124
  4178e3:	pop    esp
  4178e4:	loope  0x41792b
  4178e6:	shl    BYTE PTR [eax-0x4875cb7c],cl
  4178ec:	mov    ecx,0xe1a4e10c
  4178f1:	pop    esi
  4178f2:	add    edx,DWORD PTR [edx+ebp*2+0x31]
  4178f6:	je     0x41795e
  4178f8:	push   ss
  4178f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178fa:	mov    DWORD PTR [ebx+0x13],edx
  4178fd:	jg     0x4178bd
  4178ff:	pop    ebp
  417900:	les    ebx,FWORD PTR [edi-0x6a]
  417903:	test   BYTE PTR [ebx+edx*2],al
  417906:	mov    ebp,0xb84aa637
  41790b:	adc    al,0x88
  41790d:	fst    QWORD PTR ss:[edx]
  417910:	sub    al,0x4f
  417912:	jb     0x417894
  417914:	jne    0x417914
  417916:	mov    ah,0xd9
  417918:	rcl    DWORD PTR [edi-0x7c],1
  41791b:	std    
  41791c:	addr16 icebp 
  41791e:	into   
  41791f:	cmp    esi,DWORD PTR [ecx-0x67401e7d]
  417925:	sahf   
  417926:	outs   dx,DWORD PTR ds:[esi]
  417927:	fist   DWORD PTR [ebp+0x4e]
  41792a:	call   0xe2c2:0xa9fd382f
  417931:	lahf   
  417932:	mov    DWORD PTR [edx-0x6aed1dd6],edx
  417938:	enter  0xbb7c,0x9
  41793c:	dec    eax
  41793d:	pusha  
  41793e:	iret   
  41793f:	retfw  0x254
  417943:	and    eax,0x8ee08a80
  417948:	shl    DWORD PTR [ebp-0x72],0x2c
  41794c:	loopne 0x417994
  41794e:	sbb    DWORD PTR [eax],esi
  417950:	ret    0x5089
  417953:	jb     0x417913
  417955:	mov    ah,0x9
  417957:	sar    BYTE PTR [ecx],cl
  417959:	call   0x92922d8d
  41795e:	cmp    al,0x0
  417960:	cld    
  417961:	ss das 
  417963:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417964:	mov    ch,0xcf
  417966:	push   es
  417967:	shl    BYTE PTR [ebx+0x2f],cl
  41796a:	mov    bl,0xe0
  41796c:	fild   QWORD PTR [ebx]
  41796e:	nop
  41796f:	mov    eax,ds:0x9e4fbbd1
  417974:	push   ebp
  417975:	ror    esp,0x1e
  417978:	mov    bl,0xef
  41797a:	test   eax,0x7614424d
  41797f:	jnp    0x417938
  417981:	rol    BYTE PTR [esi+eax*4],1
  417984:	push   ebx
  417985:	adc    al,0x92
  417987:	loope  0x4179aa
  417989:	fbld   TBYTE PTR [eax+eax*8-0x7ca89cd3]
  417990:	int3   
  417991:	stos   DWORD PTR es:[edi],eax
  417992:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417993:	shr    BYTE PTR [edi+0x2],0xcc
  417997:	ret    
  417998:	push   eax
  417999:	sbb    BYTE PTR es:[eax],0xd2
  41799d:	jmp    0x4179a4
  41799f:	cmp    esp,esi
  4179a1:	cld    
  4179a2:	test   BYTE PTR [esi],cl
  4179a4:	or     esi,edx
  4179a6:	push   edi
  4179a7:	adc    BYTE PTR [edi],cl
  4179a9:	and    DWORD PTR [esi],ebx
  4179ab:	aaa    
  4179ac:	scas   al,BYTE PTR es:[edi]
  4179ad:	fistp  QWORD PTR ds:0x7254f4a9
  4179b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179b4:	gs in  al,0x6f
  4179b7:	push   ss
  4179b8:	call   0x9477:0x885ae5af
  4179bf:	jp     0x417a3f
  4179c1:	cmp    ecx,DWORD PTR [esi+0x24]
  4179c4:	push   es
  4179c5:	sub    DWORD PTR [ebp+ecx*8-0x4c371f54],esp
  4179cc:	mov    ebp,0x39bc1965
  4179d1:	std    
  4179d2:	ja     0x417a2e
  4179d4:	shl    BYTE PTR [ebx-0x5f],cl
  4179d7:	adc    BYTE PTR [edi-0x60e77a97],bh
  4179dd:	ret    0xdf57
  4179e0:	adc    dl,BYTE PTR [ebx+0xf]
  4179e3:	pop    ds
  4179e4:	out    0x8d,eax
  4179e6:	jae    0x417a09
  4179e8:	push   ds
  4179e9:	ins    DWORD PTR es:[edi],dx
  4179ea:	fsubr  DWORD PTR [ebp+0x4658b379]
  4179f0:	in     eax,dx
  4179f1:	scas   al,BYTE PTR es:[edi]
  4179f2:	enter  0xd2dd,0x5c
  4179f6:	call   0xa70d:0x434e0207
  4179fd:	push   edi
  4179fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179ff:	lea    ebp,[ecx*4+0x57087578]
  417a06:	adc    DWORD PTR [edi+0x6fcb5055],ecx
  417a0c:	xor    al,dh
  417a0e:	push   eax
  417a0f:	iret   
  417a10:	sub    dh,BYTE PTR ds:0x5a74b484
  417a16:	xor    BYTE PTR [esp+eax*2+0x7048564d],dh
  417a1d:	in     al,dx
  417a1e:	scas   al,BYTE PTR es:[edi]
  417a1f:	mov    cl,0x36
  417a21:	push   esp
  417a22:	pop    ecx
  417a23:	jge    0x4179a6
  417a25:	push   esp
  417a26:	(bad)  
  417a27:	pop    esp
  417a28:	dec    esi
  417a29:	out    0x3,al
  417a2b:	arpl   WORD PTR [ecx+0x13],cx
  417a2e:	int3   
  417a2f:	inc    DWORD PTR [edx+0x32afee43]
  417a35:	push   eax
  417a36:	mov    bh,0xba
  417a38:	inc    ebp
  417a39:	hlt    
  417a3a:	pop    esi
  417a3b:	mov    esi,0x1a16f245
  417a40:	fs dec ebx
  417a42:	and    eax,0x43d9bd20
  417a47:	adc    eax,0x187c5e38
  417a4c:	hlt    
  417a4d:	inc    eax
  417a4e:	xchg   ebx,eax
  417a4f:	jge    0x417ac5
  417a51:	push   ss
  417a52:	add    BYTE PTR [ebp+0x68a89c40],dh
  417a58:	test   BYTE PTR [edi+0x7d907ff1],dl
  417a5e:	enter  0x655f,0xc0
  417a62:	arpl   WORD PTR [ecx+0x8],dx
  417a65:	pop    ss
  417a66:	nop
  417a67:	daa    
  417a68:	jmp    0x4a80:0xda546fea
  417a6f:	cwde   
  417a70:	in     eax,dx
  417a71:	loopne 0x417a75
  417a73:	sub    dl,dh
  417a75:	mov    edx,0x466f0733
  417a7a:	pop    ebp
  417a7b:	hlt    
  417a7c:	rcr    cl,cl
  417a7e:	bound  ebp,QWORD PTR [edx+ebp*2-0x11]
  417a82:	(bad)  
  417a83:	cwde   
  417a84:	(bad)  
  417a85:	sub    bh,ch
  417a87:	shl    BYTE PTR [esi],cl
  417a89:	fnstenv [edi]
  417a8b:	gs inc ecx
  417a8d:	push   eax
  417a8e:	xchg   ebp,eax
  417a8f:	xchg   edi,eax
  417a90:	outs   dx,DWORD PTR ds:[esi]
  417a91:	xlat   BYTE PTR ds:[ebx]
  417a92:	(bad)  
  417a93:	inc    edi
  417a94:	mov    BYTE PTR ds:0x8361cee3,0x64
  417a9b:	in     eax,dx
  417a9c:	pop    ebp
  417a9d:	sub    ecx,DWORD PTR [eax]
  417a9f:	inc    ecx
  417aa0:	out    0x6d,eax
  417aa2:	stc    
  417aa3:	mov    al,0x1e
  417aa5:	loope  0x417ad5
  417aa7:	pop    esi
  417aa8:	imul   ebp,DWORD PTR [eax-0x566bbe5e],0xd7bad892
  417ab2:	mov    al,ds:0x10fdd322
  417ab7:	add    eax,0xf1d53269
  417abc:	leave  
  417abd:	in     eax,dx
  417abe:	xchg   esp,eax
  417abf:	call   0x53d0:0x79018647
  417ac6:	xchg   ebx,eax
  417ac7:	mov    ch,0x39
  417ac9:	out    0x3a,eax
  417acb:	add    BYTE PTR [ebx+0x1fb746a0],cl
  417ad1:	cld    
  417ad2:	aaa    
  417ad3:	es call 0xd774:0x8d8f21f4
  417adb:	inc    edi
  417adc:	sub    DWORD PTR [esi],edi
  417ade:	or     ebx,DWORD PTR [eax+0x33]
  417ae1:	cld    
  417ae2:	push   0x59ae6c83
  417ae7:	loopne 0x417b0f
  417ae9:	into   
  417aea:	mov    bl,0xdd
  417aec:	inc    edx
  417aed:	in     al,0x1f
  417aef:	mov    eax,ds:0x862cc550
  417af4:	dec    ecx
  417af5:	cmc    
  417af6:	aam    0xce
  417af8:	leave  
  417af9:	push   esi
  417afa:	fimul  WORD PTR ss:[ebx]
  417afd:	mov    DWORD PTR [edx],ebx
  417aff:	inc    ebx
  417b00:	cmp    al,0x28
  417b02:	jmp    0xd5cf8a87
  417b07:	jmp    DWORD PTR [ecx]
  417b09:	bound  ecx,QWORD PTR [eax+0xb]
  417b0c:	sub    ebx,DWORD PTR [ebx+0x4e]
  417b0f:	iret   
  417b10:	sahf   
  417b11:	enter  0xf897,0xc3
  417b15:	aad    0x3
  417b17:	push   ecx
  417b18:	adc    BYTE PTR [eax],0xee
  417b1b:	jb     0x417b69
  417b1d:	dec    eax
  417b1e:	lea    ebp,[ecx+0x1b]
  417b21:	icebp  
  417b22:	inc    eax
  417b23:	repnz and BYTE PTR [ebp+ebx*2-0x64d5e9b9],cl
  417b2b:	int    0x3
  417b2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b2e:	pop    esp
  417b2f:	jne    0x417b53
  417b31:	xchg   ebx,eax
  417b32:	sub    al,0x34
  417b34:	sbb    ebp,DWORD PTR [ecx]
  417b36:	jo     0x417b72
  417b38:	sub    cl,BYTE PTR [ebx+0x30eba97]
  417b3e:	addr16 push 0xd365214f
  417b44:	push   cs
  417b45:	ss adc eax,0xc52b1331
  417b4b:	xor    ecx,DWORD PTR [edx]
  417b4d:	test   al,0xa7
  417b4f:	int    0x9b
  417b51:	inc    edx
  417b52:	sbb    edi,ebp
  417b54:	push   ebx
  417b55:	inc    eax
  417b56:	cmp    cl,BYTE PTR [esi+0x7f]
  417b59:	jg     0x417b9a
  417b5b:	(bad)  
  417b5c:	out    dx,eax
  417b5d:	push   cs
  417b5e:	xor    BYTE PTR [ecx],dh
  417b60:	mov    dl,0x96
  417b62:	(bad)  
  417b63:	jmp    0x11c0:0x75ce869d
  417b6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b6b:	fbstp  TBYTE PTR [ebx]
  417b6d:	mov    WORD PTR [edi-0x9],gs
  417b70:	adc    al,0x58
  417b72:	cmp    eax,0xe6dd47ea
  417b77:	ret    
  417b78:	adc    eax,0x6c37fd24
  417b7d:	ds pushf 
  417b7f:	inc    edi
  417b80:	int    0x38
  417b82:	mov    ss,WORD PTR [edx-0x4b]
  417b85:	cmc    
  417b86:	clc    
  417b87:	idiv   BYTE PTR [eax]
  417b89:	jo     0x417b34
  417b8b:	cdq    
  417b8c:	out    0xf1,al
  417b8e:	mov    dh,0xe0
  417b90:	imul   ecx,DWORD PTR [edi],0xffffff84
  417b93:	push   ebx
  417b94:	pop    es
  417b95:	div    DWORD PTR [esi+0x78]
  417b98:	fdivr  QWORD PTR [eax-0x22]
  417b9b:	ds inc eax
  417b9d:	mov    bl,0xc7
  417b9f:	aaa    
  417ba0:	jno    0x417c13
  417ba2:	jns    0x417bac
  417ba4:	dec    edi
  417ba5:	mov    ch,0xf0
  417ba7:	mov    eax,ds:0x68b8b7ee
  417bac:	stc    
  417bad:	mov    cl,0x49
  417baf:	or     eax,0xec16d345
  417bb4:	add    eax,DWORD PTR [ebx+eax*4-0x5a2e97c1]
  417bbb:	into   
  417bbc:	inc    ecx
  417bbd:	fwait
  417bbe:	pop    ds
  417bbf:	pop    ss
  417bc0:	out    dx,eax
  417bc1:	cmp    ebp,DWORD PTR [eax-0x42c51a2b]
  417bc7:	xchg   edx,eax
  417bc8:	mov    eax,ds
  417bca:	inc    edi
  417bcb:	cmp    eax,0x97a0fa65
  417bd0:	sub    edx,DWORD PTR [ecx+0x5218d8e0]
  417bd6:	fimul  WORD PTR [edx]
  417bd8:	xor    al,0x27
  417bda:	shr    cl,1
  417bdc:	mov    dl,dl
  417bde:	lods   eax,DWORD PTR ds:[esi]
  417bdf:	xor    eax,DWORD PTR [ecx+0x18ef6c7e]
  417be5:	pusha  
  417be6:	inc    eax
  417be7:	xchg   esp,eax
  417be8:	jmp    0x7218:0x897a68a1
  417bef:	push   ds
  417bf0:	mov    ds:0x881d7f0a,al
  417bf5:	lahf   
  417bf6:	(bad)  
  417bf7:	ins    DWORD PTR es:[edi],dx
  417bf8:	arpl   WORD PTR [ecx],bp
  417bfa:	or     eax,0x56bf7da3
  417bff:	out    dx,eax
  417c00:	cmp    DWORD PTR [ebp-0x77],esi
  417c03:	xchg   edx,eax
  417c04:	out    dx,eax
  417c05:	popf   
  417c06:	xchg   ebp,eax
  417c07:	sub    al,0x7a
  417c09:	jg     0x417c38
  417c0b:	and    al,0xd2
  417c0d:	dec    esp
  417c0e:	sar    BYTE PTR [ebx-0xa],cl
  417c11:	ret    
  417c12:	adc    edx,DWORD PTR [edx]
  417c14:	sub    dl,0x68
  417c17:	mov    ebp,0x2707b8d3
  417c1c:	test   eax,0x84634acd
  417c22:	xchg   edx,eax
  417c23:	xchg   esi,eax
  417c24:	rol    cl,0x24
  417c27:	push   ecx
  417c28:	xchg   edi,eax
  417c29:	cdq    
  417c2a:	adc    dh,BYTE PTR [edi+0x21]
  417c2d:	mov    bh,0x45
  417c2f:	test   DWORD PTR [edx-0xf],ecx
  417c32:	out    0x1d,al
  417c34:	dec    esp
  417c35:	pop    esp
  417c36:	out    0x98,eax
  417c38:	xchg   esi,eax
  417c39:	lods   al,BYTE PTR ds:[esi]
  417c3a:	shl    BYTE PTR [edi+0x2fe91cf7],1
  417c40:	and    eax,0xc385f76c
  417c45:	dec    eax
  417c46:	sub    dl,BYTE PTR [ecx]
  417c48:	mov    eax,0x8fe4bbae
  417c4d:	adc    DWORD PTR [edi],ebp
  417c4f:	(bad)  
  417c50:	cld    
  417c51:	rcl    DWORD PTR [ebx],0xbb
  417c54:	adc    DWORD PTR [ebx-0x39d8dd00],edi
  417c5a:	mov    bl,0x44
  417c5c:	aas    
  417c5d:	loop   0x417c23
  417c5f:	ins    BYTE PTR es:[edi],dx
  417c60:	and    BYTE PTR [eax-0x6dc80778],0xa6
  417c67:	mov    bh,0x2f
  417c69:	loope  0x417beb
  417c6b:	mov    dh,0xff
  417c6d:	xor    DWORD PTR [ebx-0x7a],ebx
  417c70:	es jmp 0x417c2f
  417c73:	or     eax,0x9db29c7
  417c78:	icebp  
  417c79:	xchg   BYTE PTR [ecx],al
  417c7b:	and    eax,0x31d49af3
  417c80:	rcr    edi,cl
  417c82:	inc    edi
  417c83:	aaa    
  417c84:	sub    edi,DWORD PTR [ebp+0x57]
  417c87:	fld    QWORD PTR [edx+ebp*2]
  417c8a:	dec    eax
  417c8b:	mov    gs,WORD PTR [esi-0x4058ed02]
  417c91:	les    edx,FWORD PTR [eax+0x8]
  417c94:	ja     0x417c4d
  417c96:	mov    esp,0xeeb07d72
  417c9b:	adc    BYTE PTR [eax],al
  417c9d:	jns    0x417c23
  417c9f:	leave  
  417ca0:	repz in eax,dx
  417ca2:	mov    bl,0xdb
  417ca4:	xor    bl,bh
  417ca6:	mov    esi,0xe7ad736b
  417cab:	sub    eax,0x76a17b3c
  417cb0:	jnp    0x417c86
  417cb2:	inc    DWORD PTR ss:[ebx+0x259e3c0]
  417cb9:	sbb    al,0xea
  417cbb:	es cmp al,0xac
  417cbe:	ficom  DWORD PTR [ecx-0x62]
  417cc1:	pop    ds
  417cc2:	jb     0x417cb0
  417cc4:	icebp  
  417cc5:	pop    ebx
  417cc6:	dec    esp
  417cc7:	mov    dh,0x2d
  417cc9:	add    BYTE PTR [edi],ch
  417ccb:	lds    esi,FWORD PTR [edx]
  417ccd:	jl     0x417cf8
  417ccf:	xor    ebx,ecx
  417cd1:	pop    eax
  417cd2:	adc    al,ah
  417cd4:	bswap  edi
  417cd6:	shr    dl,cl
  417cd8:	add    BYTE PTR ds:0xd6c99dc9,dh
  417cde:	leave  
  417cdf:	push   edx
  417ce0:	inc    ebx
  417ce1:	hlt    
  417ce2:	jp     0x417ca1
  417ce4:	sub    ah,BYTE PTR [eax+0x333ab839]
  417cea:	add    cl,BYTE PTR [ecx]
  417cec:	xchg   ebp,eax
  417ced:	call   0x942e88dc
  417cf2:	inc    edi
  417cf3:	int    0x32
  417cf5:	cmp    al,0x2d
  417cf7:	sub    eax,0xee66ed36
  417cfc:	sbb    DWORD PTR [edi],edx
  417cfe:	std    
  417cff:	fdiv   QWORD PTR [ebx+ecx*1-0x11]
  417d03:	ds in  al,0x1a
  417d06:	mov    eax,0x94da2791
  417d0b:	jecxz  0x417d0c
  417d0d:	push   esi
  417d0e:	loopne 0x417cc6
  417d10:	push   esi
  417d11:	jo     0x417d7c
  417d13:	add    BYTE PTR [ebp+0x6d861a0a],bl
  417d19:	dec    ecx
  417d1a:	stc    
  417d1b:	stc    
  417d1c:	pop    eax
  417d1d:	inc    esp
  417d1e:	daa    
  417d1f:	xlat   BYTE PTR ds:[ebx]
  417d20:	and    ah,BYTE PTR [eax-0x5380eccd]
  417d26:	sti    
  417d27:	std    
  417d28:	mov    esp,0x550e83dd
  417d2d:	call   0xf33d394e
  417d32:	gs mov cl,0xed
  417d35:	icebp  
  417d36:	icebp  
  417d37:	enter  0x629c,0x49
  417d3b:	call   0x51a9:0x79cd7b6b
  417d42:	sbb    BYTE PTR ds:0x80193e42,ch
  417d48:	or     dh,ah
  417d4a:	shl    BYTE PTR [edi],1
  417d4c:	out    dx,eax
  417d4d:	pop    ss
  417d4e:	adc    DWORD PTR [edi-0x781ceded],0xb6e7689c
  417d58:	into   
  417d59:	or     al,0x5f
  417d5b:	and    BYTE PTR [edi+0x7e],al
  417d5e:	fwait
  417d5f:	aam    0x5e
  417d61:	adc    ah,bh
  417d63:	out    0x7e,eax
  417d65:	xchg   ebx,eax
  417d66:	ret    
  417d67:	bound  ebx,QWORD PTR [edx+0x7]
  417d6a:	(bad)  
  417d6b:	mov    dh,0x8b
  417d6d:	in     al,0xf2
  417d6f:	fbld   TBYTE PTR [ebp+0x3ab2cf29]
  417d75:	or     edx,esi
  417d77:	xchg   ebx,eax
  417d78:	and    bh,bl
  417d7a:	fwait
  417d7b:	jmp    DWORD PTR ds:0x94bf1d68
  417d81:	shr    DWORD PTR [edi],cl
  417d83:	icebp  
  417d84:	fmul   QWORD PTR [edi]
  417d86:	jecxz  0x417d2c
  417d88:	aas    
  417d89:	aad    0x47
  417d8b:	mul    BYTE PTR [edx]
  417d8d:	inc    cx
  417d8f:	mov    esi,0x26b7d58d
  417d94:	dec    edx
  417d95:	not    dh
  417d97:	and    eax,0x8846237b
  417d9c:	imul   esp,DWORD PTR [ebx+0x32],0xa5f3a451
  417da3:	sub    DWORD PTR ds:[ebp-0x75],ebx
  417da7:	iret   
  417da8:	xchg   esi,eax
  417da9:	and    ebp,esp
  417dab:	cmp    ecx,DWORD PTR [edi-0x6fbc107f]
  417db1:	fdiv   QWORD PTR [ecx-0x6d83b15]
  417db7:	dec    esp
  417db8:	mov    eax,ds:0x7fa60ca0
  417dbd:	dec    edx
  417dbe:	sbb    DWORD PTR [eax],0xb2bbc2bd
  417dc4:	inc    ecx
  417dc5:	xor    ecx,ebp
  417dc7:	push   edi
  417dc8:	mov    eax,0xb8f42d8a
  417dcd:	dec    esi
  417dce:	pop    esi
  417dcf:	dec    edi
  417dd0:	push   eax
  417dd1:	push   0x2cea1c56
  417dd6:	scas   al,BYTE PTR es:[edi]
  417dd7:	sbb    edi,DWORD PTR [esi+0x24]
  417dda:	pop    ebp
  417ddb:	sbb    DWORD PTR [esi],edi
  417ddd:	rcr    eax,cl
  417ddf:	aam    0xba
  417de1:	xor    DWORD PTR [edi-0x5f],ecx
  417de4:	mov    ds:0xa8ea8f1c,al
  417de9:	xor    edx,ebp
  417deb:	scas   eax,DWORD PTR es:[edi]
  417dec:	fld    TBYTE PTR [esi+0x64ea1f22]
  417df2:	stc    
  417df3:	ret    0x252
  417df6:	push   eax
  417df7:	sub    DWORD PTR [eax+0x6b],ebp
  417dfa:	pminub mm6,mm5
  417dfd:	loopne 0x417e7c
  417dff:	add    cl,BYTE PTR [edi-0x4a]
  417e02:	nop
  417e03:	les    edi,FWORD PTR [ebx-0x31]
  417e06:	mov    DWORD PTR [esi],edx
  417e08:	add    DWORD PTR [esi],0xffffffd4
  417e0b:	adc    al,dh
  417e0d:	cmp    eax,0xed516876
  417e12:	ret    0x4ec5
  417e15:	(bad)  
  417e16:	adc    al,0xe5
  417e18:	xor    BYTE PTR [eax+0x6a157895],bl
  417e1e:	jae    0x417de4
  417e20:	push   es
  417e21:	jae    0x417e9f
  417e23:	jp     0x417dc2
  417e25:	cmp    DWORD PTR [esi+0x35],eax
  417e28:	cmp    DWORD PTR [eax+0x7b22d046],edx
  417e2e:	push   0xffffffa9
  417e30:	xchg   BYTE PTR [esi-0x58],bl
  417e33:	adc    DWORD PTR [edx],0xffffff82
  417e36:	add    ebx,edi
  417e38:	pop    edi
  417e39:	sar    BYTE PTR [eax+0x2c9479ea],1
  417e3f:	ret    
  417e40:	push   cs
  417e41:	or     al,BYTE PTR [esi]
  417e43:	cmp    BYTE PTR [edx+0x4bfce8ff],al
  417e49:	(bad)  
  417e4a:	sbb    al,0x56
  417e4c:	xchg   ebx,eax
  417e4d:	or     eax,0x77baacb7
  417e52:	push   esp
  417e53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e54:	jg     0x417ec7
  417e56:	outs   dx,BYTE PTR ds:[esi]
  417e57:	jae    0x417dde
  417e59:	test   DWORD PTR [ebx-0xb],ebx
  417e5c:	pop    ebp
  417e5d:	imul   eax,DWORD PTR [esi+0x4c],0xf6be45f9
  417e64:	arpl   WORD PTR [eax-0x1cac9446],dx
  417e6a:	sub    al,0x75
  417e6c:	push   ecx
  417e6d:	cli    
  417e6e:	pop    ds
  417e6f:	rcl    BYTE PTR ss:[edx],1
  417e72:	test   ebp,0x89152102
  417e78:	ret    
  417e79:	and    bl,dl
  417e7b:	cmc    
  417e7c:	(bad)  
  417e7d:	test   DWORD PTR fs:[edx+ecx*2-0x73232223],edx
  417e85:	push   0x611cb87
  417e8a:	mov    ch,0x34
  417e8c:	fcmovne st,st(2)
  417e8e:	stos   BYTE PTR es:[edi],al
  417e8f:	push   DWORD PTR [edx-0x657e3398]
  417e95:	loop   0x417e6e
  417e97:	pop    esp
  417e98:	stc    
  417e99:	retf   
  417e9a:	xchg   DWORD PTR ds:0x358cc5d0,eax
  417ea0:	neg    BYTE PTR [ebp+0x3adfb508]
  417ea6:	in     eax,0x5a
  417ea8:	pop    edx
  417ea9:	dec    edi
  417eaa:	cmc    
  417eab:	popf   
  417eac:	ret    0x773
  417eaf:	ss push es
  417eb1:	or     eax,0xf07feb91
  417eb6:	add    BYTE PTR [ebp+0x19],0x50
  417eba:	or     ah,BYTE PTR [ebx-0x4f9c064a]
  417ec0:	mov    esp,0xf851506a
  417ec5:	inc    edi
  417ec6:	dec    ebx
  417ec7:	pusha  
  417ec8:	sub    eax,0x227a2db2
  417ecd:	xor    bh,BYTE PTR ds:0x5d92975d
  417ed3:	adc    al,0xb7
  417ed5:	in     eax,0xa9
  417ed7:	cmc    
  417ed8:	daa    
  417ed9:	lahf   
  417eda:	ror    BYTE PTR [ecx-0x54],cl
  417edd:	and    esp,DWORD PTR [eax]
  417edf:	push   0x36
  417ee1:	pop    edx
  417ee2:	xchg   ebx,eax
  417ee3:	lock xchg DWORD PTR [eax],edx
  417ee6:	and    esi,ebx
  417ee8:	(bad)
  417eeb:	xor    eax,DWORD PTR [edi+eiz*2-0x17f31e1e]
  417ef2:	(bad)  
  417ef3:	icebp  
  417ef4:	int    0x84
  417ef6:	inc    BYTE PTR [ecx]
  417ef8:	push   es
  417ef9:	sbb    BYTE PTR ss:[eax+ebp*2+0x5e],bl
  417efe:	sbb    BYTE PTR [ecx-0x4e],bl
  417f01:	mov    ch,0xca
  417f03:	sbb    al,0xec
  417f05:	mov    bl,0xcb
  417f07:	imul   ebp,DWORD PTR [esi-0x37a91f18],0x2d
  417f0e:	cld    
  417f0f:	popa   
  417f10:	xchg   BYTE PTR [edi],dh
  417f12:	fisubr DWORD PTR [edi+0x71c2cbe4]
  417f18:	lods   eax,DWORD PTR ds:[esi]
  417f19:	dec    eax
  417f1a:	cmp    DWORD PTR [eax-0x6cf1f7cc],ecx
  417f20:	push   cs
  417f21:	bound  edx,QWORD PTR [ecx+0x7f52a8c0]
  417f27:	sar    DWORD PTR [ebp+ebx*2+0x60],0x91
  417f2c:	inc    eax
  417f2d:	and    edi,edx
  417f2f:	aad    0x60
  417f31:	mov    ebx,0xc7a8d949
  417f36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f37:	push   esp
  417f38:	stos   DWORD PTR es:[edi],eax
  417f39:	xor    al,cl
  417f3b:	jge    0x417fb5
  417f3d:	in     eax,dx
  417f3e:	leave  
  417f3f:	inc    esi
  417f40:	(bad)  
  417f41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f42:	iret   
  417f43:	add    eax,0x66b9f159
  417f48:	fcmovnbe st,st(4)
  417f4a:	sbb    al,0x20
  417f4c:	jg     0x417f1b
  417f4e:	inc    edx
  417f4f:	xchg   esi,edi
  417f51:	pushf  
  417f52:	inc    ecx
  417f53:	js     0x417f54
  417f55:	in     eax,dx
  417f56:	js     0x417f42
  417f58:	ror    DWORD PTR [ebx+ebp*4-0x7e],1
  417f5c:	mov    dl,0x41
  417f5e:	jmp    0xb6531c69
  417f63:	xor    esi,ebx
  417f65:	pop    ebp
  417f66:	out    0x91,eax
  417f68:	cli    
  417f69:	dec    edi
  417f6a:	call   0x63e4:0x317951c8
  417f71:	sub    ebp,DWORD PTR [ebx+0x11]
  417f74:	sbb    DWORD PTR [edi+0x5b],eax
  417f77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f78:	mov    al,ds:0x9393ceb8
  417f7d:	mov    ebp,0x9ea81196
  417f82:	test   DWORD PTR [ebx-0x6241bfd5],ecx
  417f88:	in     al,dx
  417f89:	mov    bh,0xa4
  417f8b:	stos   DWORD PTR es:[edi],eax
  417f8c:	dec    edi
  417f8d:	or     al,0xd6
  417f8f:	dec    ecx
  417f90:	popf   
  417f91:	inc    edi
  417f92:	mov    BYTE PTR [ebx-0x439d728],al
  417f98:	add    DWORD PTR [ebx],ecx
  417f9a:	and    eax,0x5dbca01
  417f9f:	and    BYTE PTR [edi],bl
  417fa1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417fa2:	cmp    BYTE PTR [ebp-0x27b46b1b],ah
  417fa8:	sar    cl,0x8a
  417fab:	jnp    0x417f52
  417fad:	mov    al,ds:0x4d1b36e0
  417fb2:	xchg   ebp,eax
  417fb3:	aad    0x63
  417fb5:	(bad)  
  417fb6:	and    eax,ecx
  417fb8:	(bad)  
  417fb9:	jmp    0x386b:0xa77cfe1
  417fc0:	sub    BYTE PTR [edx-0x53],0x45
  417fc4:	int3   
  417fc5:	cmp    edi,DWORD PTR [esi+0x2c]
  417fc8:	or     al,0x7b
  417fca:	out    0x1,al
  417fcc:	or     eax,0x7a6cce24
  417fd1:	mov    bh,0x66
  417fd3:	xchg   edi,eax
  417fd4:	mov    esp,0x76b379bb
  417fd9:	xor    ch,BYTE PTR [edi+0x43]
  417fdc:	mov    ebx,0x9916cb76
  417fe1:	xchg   DWORD PTR [edi+0x5],ecx
  417fe4:	sbb    eax,0x10d1ab81
  417fe9:	popf   
  417fea:	pop    edi
  417feb:	sub    ebx,esi
  417fed:	stc    
  417fee:	push   0x76083c
  417ff3:	jb     0x417fcc
  417ff5:	pop    esp
  417ff6:	xchg   edi,eax
  417ff7:	xor    eax,0xe07b3930
  417ffc:	bound  eax,QWORD PTR [ebp+0x6d]
  417fff:	fnsave [ecx+0x49]
  418002:	xchg   esi,eax
  418003:	fadd   DWORD PTR [esi+0x4471c90]
  418009:	xor    al,al
  41800b:	aas    
  41800c:	imul   esi,DWORD PTR [edx+0x52992231],0x66c5aa02
  418016:	test   DWORD PTR [ebx-0x3f],edx
  418019:	push   edi
  41801a:	xchg   esp,eax
  41801b:	add    al,0x79
  41801d:	ins    BYTE PTR es:[edi],dx
  41801e:	les    eax,FWORD PTR ds:0xcf772e39
  418024:	fcom   QWORD PTR [edi+0x5c42970b]
  41802a:	push   0x95fec23e
  41802f:	and    al,0x1c
  418031:	popf   
  418032:	mov    al,0xfc
  418034:	dec    eax
  418035:	imul   edi,DWORD PTR [esi-0x752a9ae7],0xa0e97991
  41803f:	add    BYTE PTR [edi+0x3a],ch
  418042:	push   ss
  418043:	daa    
  418044:	lea    ebx,[ecx]
  418046:	sbb    edx,DWORD PTR [ebp+0x45597674]
  41804c:	clc    
  41804d:	xor    DWORD PTR [eax],0x89850fbf
  418053:	xor    BYTE PTR [eax+0xf],bl
  418056:	push   cs
  418057:	pop    edx
  418058:	sbb    al,0xb2
  41805a:	and    BYTE PTR [eax],ch
  41805c:	hlt    
  41805d:	scas   al,BYTE PTR es:[edi]
  41805e:	dec    esp
  41805f:	xor    BYTE PTR [ecx],dl
  418061:	push   es
  418062:	ss add ah,0x16
  418066:	xchg   DWORD PTR [ebx+0x6f],esi
  418069:	mov    cl,0x54
  41806b:	dec    edi
  41806c:	inc    BYTE PTR ds:0x4d64156e
  418072:	lds    edx,FWORD PTR [edi+0x400ad427]
  418078:	xchg   ebp,eax
  418079:	adc    eax,0xb7166695
  41807e:	loop   0x4180dd
  418080:	xchg   ebp,eax
  418081:	xchg   ebx,eax
  418082:	cmp    eax,0x96d42ae9
  418087:	sub    edi,DWORD PTR [ecx+0xe33bc5e]
  41808d:	mov    dl,0x14
  41808f:	and    eax,0xe8e33fbb
  418094:	std    
  418095:	mov    edx,0xef103ab6
  41809a:	int3   
  41809b:	jne    0x4180ba
  41809d:	fsubr  DWORD PTR [ebp+eax*8-0x62]
  4180a1:	mov    edx,0x1f6ec92d
  4180a6:	sbb    eax,0x7b235241
  4180ab:	jbe    0x41802d
  4180ad:	dec    esi
  4180ae:	pusha  
  4180af:	or     al,0x5e
  4180b1:	xchg   esp,eax
  4180b2:	sub    dh,cl
  4180b4:	jnp    0x41805b
  4180b6:	cmp    eax,0x3b17c564
  4180bb:	jmp    0xcf41cee9
  4180c0:	imul   edx,ecx,0xffffffcf
  4180c3:	inc    ebp
  4180c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4180c5:	jnp    0x418118
  4180c7:	and    DWORD PTR [eax+0x2f],edx
  4180ca:	or     BYTE PTR [edx],bl
  4180cc:	popa   
  4180cd:	xchg   esi,eax
  4180ce:	jecxz  0x41813f
  4180d0:	retf   0x128c
  4180d3:	and    BYTE PTR [ebx*4-0x29fb1b3d],bl
  4180da:	and    BYTE PTR [ecx],ch
  4180dc:	lea    edx,[edi-0x5e]
  4180df:	cli    
  4180e0:	inc    ebp
  4180e1:	push   ds
  4180e2:	in     eax,0x78
  4180e4:	cmp    DWORD PTR [edx-0x76],0xffffffd0
  4180e8:	iret   
  4180e9:	loopne 0x4180b6
  4180eb:	imul   ecx,ebx,0x4e
  4180ee:	pop    ecx
  4180ef:	ficom  WORD PTR [edi+0x65582636]
  4180f5:	xor    al,0xfa
  4180f7:	into   
  4180f8:	lock ss ret 0xc386
  4180fd:	add    al,BYTE PTR [esi-0x75]
  418100:	shl    DWORD PTR [edi+0x175584a6],cl
  418106:	inc    eax
  418107:	bound  edx,QWORD PTR [ebp-0xd]
  41810a:	mov    dl,0xd8
  41810c:	sub    al,BYTE PTR [edi-0x6a0efb61]
  418112:	dec    ecx
  418113:	and    BYTE PTR [ebp-0x4e],0x74
  418117:	hlt    
  418118:	xchg   BYTE PTR [edx+0x44140332],bh
  41811e:	int    0x5d
  418120:	jge    0x418108
  418122:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418123:	ret    
  418124:	mov    dl,0x60
  418126:	jp     0x41819d
  418128:	sub    eax,DWORD PTR [ecx]
  41812a:	inc    esi
  41812b:	mov    dl,0x7c
  41812d:	retf   0x82b4
  418130:	mov    WORD PTR [ebp+0x4e],?
  418133:	in     eax,0x2c
  418135:	pop    dx
  418137:	or     BYTE PTR [edx],ah
  418139:	mov    ds:0xfb3ddb9b,eax
  41813e:	lods   eax,DWORD PTR cs:[esi]
  418140:	fist   DWORD PTR [eax-0x28]
  418143:	mov    eax,0x7582edb0
  418148:	(bad)  
  418149:	das    
  41814a:	lods   al,BYTE PTR ds:[esi]
  41814b:	div    BYTE PTR [ebx-0x4]
  41814e:	mov    cs,WORD PTR [esi+0x16]
  418151:	and    DWORD PTR [eax+0x31],esp
  418154:	pop    ebp
  418155:	push   edi
  418156:	stc    
  418157:	push   ecx
  418158:	lahf   
  418159:	push   edx
  41815a:	rcl    DWORD PTR [eax+ecx*8],cl
  41815d:	jmp    0x4180fc
  41815f:	mov    eax,0xed781997
  418164:	(bad)  
  418165:	ins    BYTE PTR es:[edi],dx
  418166:	adc    al,0x22
  418168:	out    dx,eax
  418169:	leave  
  41816a:	sahf   
  41816b:	shl    DWORD PTR [ecx],1
  41816d:	mov    edx,0x508393a6
  418172:	sub    BYTE PTR [ecx],0xcf
  418175:	je     0x418197
  418177:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418178:	pop    esp
  418179:	test   eax,0xea4bde2d
  41817e:	sahf   
  41817f:	or     esi,DWORD PTR [edi-0x7a]
  418182:	mov    bl,0x64
  418184:	cld    
  418185:	lea    ebx,[eax]
  418187:	shr    cl,0xb5
  41818a:	int    0x17
  41818c:	mov    ebx,0xb0fbcff0
  418191:	hlt    
  418192:	inc    edi
  418193:	mov    WORD PTR [ebp*4+0x1e644879],es
  41819a:	loope  0x4181ed
  41819c:	inc    eax
  41819d:	mov    ecx,0xd91cec40
  4181a2:	out    0x85,al
  4181a4:	push   esi
  4181a5:	jb     0x4181b0
  4181a7:	mov    al,ds:0x54811670
  4181ac:	inc    ebx
  4181ad:	mov    esp,DWORD PTR [ebp+0x33]
  4181b0:	test   BYTE PTR [ebp-0xd47608d],dl
  4181b6:	int    0x1b
  4181b8:	pop    ds
  4181b9:	mov    DWORD PTR [ebp-0x57],edi
  4181bc:	or     dl,dh
  4181be:	xor    eax,0x588b5c87
  4181c3:	fistp  QWORD PTR [eax-0x307c6e58]
  4181c9:	pop    ebx
  4181ca:	push   ss
  4181cb:	(bad)  
  4181cc:	pop    eax
  4181cd:	adc    al,0x1
  4181cf:	and    al,0x85
  4181d1:	outs   dx,BYTE PTR ds:[esi]
  4181d2:	and    BYTE PTR [esi-0x6c8fc518],dl
  4181d8:	cmp    al,BYTE PTR [edx-0x32]
  4181db:	popf   
  4181dc:	push   edx
  4181dd:	out    0xd,al
  4181df:	pushf  
  4181e0:	xchg   ecx,eax
  4181e1:	mov    al,ds:0xbac7772e
  4181e6:	jmp    0x28c94cd5
  4181eb:	sub    bh,BYTE PTR [ecx-0x7a]
  4181ee:	mov    eax,ds:0x790c106
  4181f3:	out    dx,al
  4181f4:	pop    edx
  4181f5:	std    
  4181f6:	push   edi
  4181f7:	xor    BYTE PTR [eax-0x33ca5fea],0x7e
  4181fe:	inc    ebp
  4181ff:	pop    ss
  418200:	ret    
  418201:	dec    ecx
  418202:	pop    ecx
  418203:	jne    0x4181f6
  418205:	sbb    BYTE PTR [eax+0x3],0x87
  418209:	cmp    BYTE PTR [edi+edi*2],0x3f
  41820d:	jmp    0x4843:0x622e9f2f
  418214:	dec    ebx
  418216:	mov    eax,0x3b04f25
  41821b:	or     BYTE PTR [esi],cl
  41821d:	add    bl,BYTE PTR [edi-0x62c22dac]
  418223:	(bad)  
  418224:	xlat   BYTE PTR ds:[ebx]
  418225:	adc    al,0xe3
  418227:	dec    ebp
  418228:	nop
  418229:	xchg   ebp,eax
  41822a:	add    eax,ecx
  41822c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41822d:	pop    esp
  41822e:	push   eax
  41822f:	or     cl,0x63
  418232:	push   esi
  418233:	push   esi
  418234:	cmp    al,0xed
  418236:	ds dec ebx
  418238:	sti    
  418239:	fistp  WORD PTR [eax]
  41823b:	test   eax,0xb2e85c82
  418240:	iret   
  418241:	jb     0x418235
  418243:	sub    eax,0xaa55e287
  418248:	inc    esi
  418249:	jmp    0x238c56d1
  41824e:	xlat   BYTE PTR ds:[ebx]
  41824f:	and    DWORD PTR [ecx],edx
  418251:	mov    ebp,0x9b7060be
  418256:	repz and ch,al
  418259:	pop    es
  41825a:	or     bh,BYTE PTR [eax-0x6727660a]
  418260:	sbb    cl,BYTE PTR [eax-0x19]
  418263:	and    BYTE PTR [edi-0x52],al
  418266:	pusha  
  418267:	xchg   BYTE PTR [ebx],bl
  418269:	mov    edx,0x320e0680
  41826e:	sahf   
  41826f:	and    al,0x52
  418271:	push   ecx
  418272:	ja     0x4182ba
  418274:	xor    DWORD PTR [edx+0x1b02a858],0xffffff8f
  41827b:	mov    ebp,0xec2d506b
  418280:	xor    BYTE PTR [ebp+0x2af2cd73],dl
  418286:	rcl    cl,0x7
  418289:	mov    ebp,0xb5c320f3
  41828e:	cld    
  41828f:	jecxz  0x41827f
  418291:	out    dx,eax
  418292:	xor    DWORD PTR [ebx+eax*2-0x7c],ecx
  418296:	sbb    eax,0x59c88b53
  41829b:	ret    
  41829c:	outs   dx,BYTE PTR ds:[esi]
  41829d:	rcl    DWORD PTR [edx+0xc],0xc0
  4182a1:	aaa    
  4182a2:	push   cs
  4182a3:	pop    ebx
  4182a4:	mov    edi,0xdcbb1991
  4182a9:	xchg   bl,ah
  4182ab:	cmp    eax,0xecb36cd9
  4182b0:	jmp    0xb3825278
  4182b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182b6:	push   edi
  4182b7:	imul   ecx,edi,0x42
  4182ba:	mov    ah,0x6f
  4182bc:	xchg   ebx,eax
  4182bd:	lods   al,BYTE PTR ds:[esi]
  4182be:	jecxz  0x4182cb
  4182c0:	imul   ebx,DWORD PTR fs:[ebx],0x49
  4182c4:	imul   ebx,esi,0xc77b6f9
  4182ca:	ror    DWORD PTR [eax],1
  4182cc:	lods   al,BYTE PTR ds:[esi]
  4182cd:	in     eax,0x3a
  4182cf:	sbb    al,0x45
  4182d1:	xor    BYTE PTR ds:[ebp-0x25],bh
  4182d5:	and    BYTE PTR [ecx-0x710648c2],0x5c
  4182dc:	jecxz  0x418318
  4182de:	sub    eax,0xd08c58ae
  4182e3:	xor    edi,DWORD PTR [ecx]
  4182e5:	jle    0x41831a
  4182e7:	jge    0x4182f7
  4182e9:	add    ch,ah
  4182eb:	vxorpd ymm2,ymm4,YMMWORD PTR [ebx-0x3f]
  4182f0:	or     BYTE PTR [ecx+edx*2],0xfc
  4182f4:	xchg   ebp,eax
  4182f5:	imul   ecx,esp,0xe1f378af
  4182fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182fc:	mov    dh,0x10
  4182fe:	and    ebx,edi
  418300:	or     eax,0xc6bfd8ce
  418305:	fld    TBYTE PTR [eax+0x33a1c054]
  41830b:	jne    0x4182e6
  41830d:	sub    BYTE PTR [edx-0xa4faca7],0x9c
  418314:	push   edx
  418315:	jns    0x4182ad
  418317:	ins    BYTE PTR es:[edi],dx
  418318:	ret    0x2af8
  41831b:	fwait
  41831c:	test   bl,bh
  41831e:	loopne 0x418364
  418320:	jmp    0x4ee7:0xe7ac418a
  418327:	test   BYTE PTR [ebp-0x71992bfa],dh
  41832d:	add    esi,DWORD PTR [ebx-0x72]
  418330:	pop    edi
  418331:	mov    esi,0x9a8219cb
  418336:	and    al,0xab
  418338:	aad    0x4c
  41833a:	icebp  
  41833b:	and    al,0x96
  41833d:	mov    bl,0x36
  41833f:	call   0xa34b3e8c
  418344:	lods   al,BYTE PTR ds:[esi]
  418345:	mov    esp,edx
  418347:	push   0xffffffaa
  418349:	inc    esi
  41834a:	pushf  
  41834b:	out    dx,eax
  41834c:	outs   dx,BYTE PTR ds:[esi]
  41834d:	icebp  
  41834e:	popa   
  41834f:	ret    
  418350:	mov    ecx,0x686dccfd
  418355:	cmc    
  418356:	ins    DWORD PTR es:[edi],dx
  418357:	retf   
  418358:	inc    ebx
  418359:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41835a:	xor    al,0x4f
  41835c:	mov    dl,0x13
  41835e:	xor    dl,al
  418360:	xor    al,0x36
  418362:	sbb    eax,0x69e91900
  418367:	loope  0x4183e0
  418369:	inc    esi
  41836a:	test   eax,0x4aee4148
  41836f:	out    dx,al
  418370:	and    ch,BYTE PTR [ebx+ebp*4-0x6fda8975]
  418377:	out    dx,al
  418378:	add    DWORD PTR [edx],edi
  41837a:	test   DWORD PTR [edi+0x48f9d4d2],edi
  418380:	inc    esi
  418381:	mov    bh,0xa8
  418383:	dec    esi
  418384:	xchg   edx,eax
  418385:	dec    eax
  418386:	and    bl,BYTE PTR [eax]
  418388:	(bad)  
  418389:	aam    0x7d
  41838b:	ror    DWORD PTR [eax+esi*4],0x76
  41838f:	mov    bh,0xdc
  418391:	xor    ebp,DWORD PTR [edx-0x71]
  418394:	sbb    bl,BYTE PTR [ecx+0x4f]
  418397:	mov    dl,BYTE PTR [ebp+0x35]
  41839a:	enter  0xe7ac,0x5d
  41839e:	lods   al,BYTE PTR ds:[esi]
  41839f:	push   esi
  4183a0:	push   ss
  4183a1:	and    cl,BYTE PTR [esi-0x7a]
  4183a4:	ja     0x4183d6
  4183a6:	inc    ecx
  4183a7:	cs mov BYTE PTR gs:[edi+0x78],bh
  4183ac:	mov    es,WORD PTR [ebp+0x2]
  4183af:	dec    ebp
  4183b0:	xlat   BYTE PTR ds:[ebx]
  4183b1:	leave  
  4183b2:	jnp    0x418341
  4183b4:	pop    edi
  4183b5:	test   BYTE PTR [ebp+0x24010cd3],dl
  4183bb:	test   DWORD PTR [eax+0xdebdb6e],ebx
  4183c1:	call   0xa89e4a23
  4183c6:	jge    0x4183c0
  4183c8:	scas   eax,DWORD PTR es:[edi]
  4183c9:	pusha  
  4183ca:	inc    edi
  4183cb:	mov    esi,0x5cebccf0
  4183d0:	jnp    0x41841d
  4183d2:	add    ebx,DWORD PTR [esi+0x5046eff1]
  4183d8:	(bad)  
  4183d9:	mov    bl,0x5b
  4183db:	ds add al,0xbd
  4183de:	cwde   
  4183df:	aad    0xe1
  4183e1:	nop
  4183e2:	sub    edi,DWORD PTR [esi]
  4183e4:	mov    ecx,0x5a45139d
  4183e9:	xor    dh,BYTE PTR [edx]
  4183eb:	nop
  4183ec:	ror    DWORD PTR [esi],0xd4
  4183ef:	jnp    0x4183e8
  4183f1:	lds    edi,FWORD PTR [ecx]
  4183f3:	repz lea esi,[ecx-0x45bb1afa]
  4183fa:	xlat   BYTE PTR ds:[ebx]
  4183fb:	cs out 0x42,eax
  4183fe:	jno    0x41847d
  418400:	ds cwde 
  418402:	ss and eax,0xb575ff64
  418408:	(bad)  
  418409:	sub    eax,0x690b200a
  41840e:	mov    di,0x6153
  418412:	inc    edi
  418413:	inc    edx
  418414:	stc    
  418415:	leave  
  418416:	mov    ds:0x144c73b9,al
  41841b:	lds    ecx,FWORD PTR [ebx-0x1b48fa22]
  418421:	xchg   ebp,eax
  418422:	rcl    BYTE PTR [eax-0x5b2abf5e],cl
  418428:	adc    al,0xa3
  41842a:	sti    
  41842b:	int3   
  41842c:	push   cs
  41842d:	lea    esi,[ebx]
  41842f:	mov    ecx,0xe623d4c2
  418434:	push   esp
  418435:	out    dx,eax
  418436:	pop    esp
  418437:	aas    
  418438:	inc    esi
  418439:	dec    ecx
  41843a:	(bad)  
  41843b:	in     eax,0xde
  41843d:	push   ss
  41843e:	mov    dl,0x97
  418440:	test   BYTE PTR [ecx],dh
  418442:	or     eax,0x6b2f350a
  418447:	repnz daa 
  418449:	(bad)  
  41844a:	mov    bl,0x5d
  41844c:	sub    eax,0xb0a32bd6
  418451:	aam    0xf
  418453:	lock jecxz 0x418422
  418456:	fwait
  418457:	and    ebp,DWORD PTR [esp+edx*8+0x369d533c]
  41845e:	les    ebp,FWORD PTR [esi]
  418460:	inc    ecx
  418461:	test   BYTE PTR [eax],dl
  418463:	mov    ebx,es
  418465:	fs stos BYTE PTR es:[edi],al
  418467:	mov    ds:0x744f5a76,eax
  41846c:	jl     0x41843c
  41846e:	jbe    0x418454
  418470:	aas    
  418471:	test   al,0x81
  418473:	into   
  418474:	dec    ebx
  418475:	jne    0x41840a
  418477:	add    si,WORD PTR [eax-0x58]
  41847b:	mov    WORD PTR [esi+0x8b2731e],?
  418481:	add    al,0x73
  418483:	es mov dl,0xd3
  418486:	xchg   eax,esi
  418488:	(bad)  
  41848a:	in     eax,dx
  41848b:	pop    edi
  41848c:	ret    
  41848d:	add    BYTE PTR [edx+0x36264a6b],dl
  418493:	cmp    esi,DWORD PTR [edi-0x757c4206]
  418499:	adc    al,0x72
  41849b:	mov    ecx,0x1e4a357d
  4184a0:	out    0x7b,al
  4184a2:	sub    al,0xb6
  4184a4:	outs   dx,BYTE PTR ds:[esi]
  4184a5:	push   eax
  4184a6:	pop    esp
  4184a7:	or     DWORD PTR [ebp+0x1a],ebp
  4184aa:	mov    al,ds:0x5e8972f7
  4184af:	mov    ebp,0x761b397f
  4184b4:	dec    esp
  4184b5:	dec    ecx
  4184b6:	cmp    edi,ebx
  4184b8:	stos   BYTE PTR es:[edi],al
  4184b9:	mov    dl,0x93
  4184bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184bc:	icebp  
  4184bd:	mov    ecx,0xf978ea86
  4184c2:	out    0x7e,eax
  4184c4:	ret    0xa7fc
  4184c7:	int    0x5e
  4184c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184ca:	retf   
  4184cb:	icebp  
  4184cc:	ds out dx,al
  4184ce:	stos   BYTE PTR es:[edi],al
  4184cf:	cmp    ch,BYTE PTR [edi-0x45860375]
  4184d5:	xor    BYTE PTR [esi-0x633c4b18],0x50
  4184dc:	inc    edi
  4184dd:	(bad)  [ebx+0x29]
  4184e0:	inc    ecx
  4184e1:	mov    ch,0xac
  4184e3:	mov    cl,al
  4184e5:	add    DWORD PTR [edx-0x22],eax
  4184e8:	aas    
  4184e9:	sti    
  4184ea:	loope  0x418506
  4184ec:	add    al,0x35
  4184ee:	mov    edx,0x47f8c1
  4184f3:	inc    ebp
  4184f4:	retf   
  4184f5:	clc    
  4184f6:	dec    ebx
  4184f7:	sbb    esp,edi
  4184f9:	mov    dl,0xc3
  4184fb:	repz loop 0x41853a
  4184fe:	xchg   ecx,eax
  4184ff:	pusha  
  418500:	bound  edi,QWORD PTR [ecx+0x5c75c5d]
  418506:	sti    
  418507:	jo     0x41849b
  418509:	mov    ?,WORD PTR [ecx]
  41850b:	iret   
  41850c:	jge    0x4184c8
  41850e:	loopne 0x418497
  418510:	and    al,al
  418512:	es es inc eax
  418515:	sub    al,0x59
  418517:	repnz movs DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41851a:	sub    DWORD PTR [ebx-0x7f486ea3],ecx
  418520:	and    eax,0x275c906d
  418525:	pop    ebx
  418526:	ds lahf 
  418528:	xchg   DWORD PTR [ebp+0x7a],esi
  41852b:	mov    edx,0x5335a198
  418530:	and    ecx,ebp
  418532:	dec    ebx
  418533:	mov    eax,ds:0x150382ac
  418538:	push   0x7ae2a40b
  41853d:	and    al,0x19
  41853f:	and    al,0x7a
  418541:	ja     0x41851f
  418543:	out    dx,eax
  418544:	int    0x36
  418546:	je     0x418579
  418548:	xor    BYTE PTR [ecx+0x6ed21940],0xe2
  41854f:	pushf  
  418550:	retf   0xcfa1
  418553:	lea    ecx,[edi-0x2d]
  418556:	mov    esp,0xaeb51875
  41855b:	out    0x86,al
  41855d:	and    eax,0x16fd6717
  418562:	pop    ebp
  418563:	dec    ebp
  418564:	mov    esp,0xc8a6c3e0
  418569:	ins    DWORD PTR es:[edi],dx
  41856a:	dec    edi
  41856b:	out    dx,al
  41856c:	inc    esi
  41856d:	dec    eax
  41856e:	xor    al,0x6
  418570:	scas   eax,DWORD PTR es:[edi]
  418571:	cmp    DWORD PTR ds:0xec103b35,ebp
  418577:	lds    ebx,FWORD PTR [ebp+0x5d]
  41857a:	add    eax,0xa851c150
  41857f:	mov    ds:0x9492a86e,al
  418584:	and    BYTE PTR [eax+0x46],bh
  418587:	pop    es
  418588:	push   esp
  418589:	bswap  ebp
  41858b:	xchg   esi,eax
  41858c:	sbb    esp,edx
  41858e:	cmp    DWORD PTR ds:0x1768c4b4,ebx
  418594:	int    0x2
  418596:	lahf   
  418597:	in     al,dx
  418598:	hlt    
  418599:	ret    
  41859a:	sbb    edi,ebx
  41859c:	sub    ecx,DWORD PTR [ecx+0xade9819]
  4185a2:	jbe    0x41858d
  4185a4:	mov    bh,0x2
  4185a6:	dec    edi
  4185a7:	sub    al,0xda
  4185a9:	xchg   ebp,eax
  4185aa:	daa    
  4185ab:	and    DWORD PTR [ebx],edi
  4185ad:	jmp    0x4185ff
  4185af:	mov    ds:0xd50f2c8e,eax
  4185b4:	push   eax
  4185b5:	xor    BYTE PTR [edi+0x5f0ca123],0xcb
  4185bc:	sub    al,0xcf
  4185be:	mov    esi,0xf61b6b00
  4185c3:	jl     0x4185a9
  4185c5:	and    edx,esi
  4185c7:	shl    DWORD PTR [ebx],1
  4185c9:	in     al,0xf3
  4185cb:	dec    esp
  4185cc:	test   eax,0x37121ecc
  4185d1:	or     ch,dl
  4185d3:	repnz cmp BYTE PTR [esi-0x4f],ah
  4185d7:	and    ecx,DWORD PTR [ecx-0x55055656]
  4185dd:	rcl    DWORD PTR [eax+0x62],0x1b
  4185e1:	dec    esp
  4185e2:	pop    eax
  4185e3:	out    0xa1,eax
  4185e5:	and    BYTE PTR [ecx],0x9a
  4185e8:	push   0x70950c8b
  4185ed:	clc    
  4185ee:	jae    0x41858b
  4185f0:	push   0xffffff83
  4185f2:	out    dx,eax
  4185f3:	mov    ch,0xa0
  4185f5:	cdq    
  4185f6:	std    
  4185f7:	mov    edi,0x8983f8c7
  4185fc:	scas   eax,DWORD PTR es:[edi]
  4185fd:	sbb    al,0x3b
  4185ff:	inc    edx
  418600:	and    dl,BYTE PTR [edx-0x13895b8b]
  418606:	mov    DWORD PTR [edi],edx
  418608:	mov    ds:0x67174ae9,al
  41860d:	push   0x798c80f1
  418612:	sbb    BYTE PTR [esi],dl
  418614:	mov    dl,BYTE PTR [edi]
  418616:	mov    WORD PTR [edi+eiz*8],cs
  418619:	(bad)  
  41861a:	jle    0x41859c
  41861c:	adc    ebx,DWORD PTR [edx-0x3b]
  41861f:	int3   
  418620:	in     eax,dx
  418621:	xchg   DWORD PTR ds:0x5f76be01,ebp
  418627:	push   0xffffffa5
  418629:	in     eax,0xe0
  41862b:	pusha  
  41862c:	je     0x418616
  41862e:	mov    bl,dh
  418630:	sbb    edx,DWORD PTR [ecx]
  418632:	fst    QWORD PTR [edx+edi*8]
  418635:	test   al,0x58
  418637:	out    dx,eax
  418638:	pop    esi
  418639:	sti    
  41863a:	in     eax,0x33
  41863c:	popa   
  41863d:	pusha  
  41863e:	sbb    BYTE PTR [ebp+0x66],dh
  418641:	and    eax,0x5e10a087
  418646:	dec    esp
  418647:	int    0x40
  418649:	in     eax,0x35
  41864b:	push   ecx
  41864c:	aad    0x6f
  41864e:	mov    ah,0x13
  418650:	sub    al,0x62
  418652:	js     0x4185fc
  418654:	pop    ss
  418655:	sub    eax,0xadf47a10
  41865a:	or     dh,bl
  41865c:	sub    ebx,0x2
  41865f:	cld    
  418660:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418661:	aaa    
  418662:	mov    ah,0x64
  418664:	imul   ecx,ebx,0x1be2500d
  41866a:	scas   al,BYTE PTR es:[edi]
  41866b:	loop   0x418674
  41866d:	mov    dh,0x29
  41866f:	and    DWORD PTR [esi+0x76157aaf],edx
  418675:	or     dl,BYTE PTR [edi+edi*2-0x17d7af92]
  41867c:	in     al,0x11
  41867e:	je     0x418661
  418680:	dec    ecx
  418681:	mov    DWORD PTR [ebx],esp
  418683:	js     0x4186dd
  418685:	test   bh,ah
  418687:	enter  0xcbdd,0x19
  41868b:	(bad)  
  41868c:	push   ebx
  41868d:	movaps xmm1,XMMWORD PTR [edx+0x76]
  418691:	and    dh,BYTE PTR [eax-0x2045b159]
  418697:	sbb    BYTE PTR [edx-0x68],bh
  41869a:	outs   dx,BYTE PTR ds:[esi]
  41869b:	add    al,0x66
  41869d:	mov    eax,DWORD PTR ds:0x425ae0d1
  4186a3:	dec    edx
  4186a4:	inc    esp
  4186a5:	pop    esi
  4186a6:	ret    0xe27e
  4186a9:	popf   
  4186aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186ab:	ror    DWORD PTR [edx],0xd6
  4186ae:	mov    ds:0xcd78fcd0,al
  4186b3:	and    DWORD PTR [edi-0x24],ebp
  4186b6:	sbb    BYTE PTR [esp+eax*2+0x65],bh
  4186ba:	retf   0xbd91
  4186bd:	push   esi
  4186be:	push   ss
  4186bf:	pop    ebp
  4186c0:	inc    ebx
  4186c1:	pop    ecx
  4186c2:	retf   0x684f
  4186c5:	pop    esp
  4186c6:	stos   BYTE PTR es:[edi],al
  4186c7:	sbb    eax,0xb200abcf
  4186cc:	sub    eax,edi
  4186ce:	pop    ss
  4186cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186d0:	mov    edx,DWORD PTR [ebx-0x192919c]
  4186d6:	call   0xde87:0xbcac67
  4186dd:	pop    ss
  4186de:	mov    al,ds:0xb4a5f756
  4186e3:	jns    0x41873e
  4186e5:	clc    
  4186e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186e7:	(bad)  
  4186e8:	shl    DWORD PTR [esi+0x1a],1
  4186eb:	fdiv   QWORD PTR [ebx+0x4d8849c7]
  4186f1:	dec    ebp
  4186f2:	jl     0x41869b
  4186f4:	dec    esp
  4186f5:	jb     0x4186f6
  4186f7:	aas    
  4186f8:	inc    dl
  4186fa:	leave  
  4186fb:	test   ebp,ebp
  4186fd:	mov    esp,0x73851e8e
  418702:	outs   dx,DWORD PTR ds:[esi]
  418703:	lds    ebp,FWORD PTR [ebp-0x7f]
  418706:	arpl   WORD PTR [edi-0x46452706],sp
  41870c:	test   al,0x94
  41870e:	push   ds
  41870f:	sti    
  418710:	adc    al,0x59
  418712:	out    0xb,al
  418714:	fimul  WORD PTR [ebp-0x5dbc44c3]
  41871a:	fsubr  st,st(5)
  41871c:	ins    DWORD PTR es:[edi],dx
  41871d:	ror    DWORD PTR [edi],1
  41871f:	inc    ecx
  418720:	cs xchg ecx,eax
  418722:	stos   BYTE PTR es:[edi],al
  418723:	in     eax,0x21
  418725:	in     eax,dx
  418726:	mov    ecx,0x63786feb
  41872b:	pop    ds
  41872c:	scas   eax,DWORD PTR es:[edi]
  41872d:	push   0x17
  41872f:	outs   dx,DWORD PTR ds:[esi]
  418730:	(bad)  
  418731:	xchg   esi,eax
  418732:	xchg   ebx,eax
  418733:	fmul   QWORD PTR [ebx-0x67]
  418736:	test   al,0xab
  418738:	dec    esp
  418739:	mov    eax,ds:0x7172ef5e
  41873e:	adc    ch,bl
  418740:	adc    ebx,ebx
  418742:	gs jns 0x418751
  418745:	add    cl,ch
  418747:	hlt    
  418748:	popa   
  418749:	cwde   
  41874a:	xor    al,0x9e
  41874c:	dec    ecx
  41874d:	push   0xffffffcd
  41874f:	outs   dx,BYTE PTR ds:[esi]
  418750:	cmp    dl,ch
  418752:	jbe    0x418714
  418754:	je     0x4186dd
  418756:	add    al,0xbd
  418758:	jle    0x418709
  41875a:	clc    
  41875b:	pop    esi
  41875c:	aas    
  41875d:	lahf   
  41875e:	mov    eax,ds:0x51015b49
  418763:	adc    eax,0x67adb709
  418768:	stc    
  418769:	fs push ebx
  41876b:	mov    BYTE PTR [edi],dh
  41876d:	mov    ecx,0x9292cf1
  418772:	sti    
  418773:	hlt    
  418774:	jbe    0x4187e7
  418776:	(bad)  
  418778:	imul   ebp,edi,0x1e025f81
  41877e:	(bad)  
  41877f:	pop    edi
  418780:	outs   dx,BYTE PTR ds:[esi]
  418781:	dec    ecx
  418782:	xchg   ecx,eax
  418783:	mov    al,0xf7
  418785:	stos   BYTE PTR es:[edi],al
  418786:	sbb    BYTE PTR [edx],bl
  418788:	enter  0xb0fc,0x3d
  41878c:	fild   DWORD PTR [edi+edx*8+0x22ef7391]
  418793:	nop
  418794:	mov    ebx,0x8fa5c139
  418799:	xchg   esp,eax
  41879a:	in     eax,dx
  41879b:	loopne 0x418778
  41879d:	mov    al,0xe8
  41879f:	push   ebp
  4187a0:	mov    esp,DWORD PTR [edi+0x20]
  4187a3:	add    BYTE PTR [esp+esi*2],cl
  4187a6:	test   al,0x6c
  4187a8:	pop    esi
  4187a9:	popf   
  4187aa:	xlat   BYTE PTR ds:[ebx]
  4187ab:	fisubr DWORD PTR [ebp+0x4e5e4d5e]
  4187b1:	loop   0x41875b
  4187b3:	jbe    0x4187c8
  4187b5:	int3   
  4187b6:	pop    ds
  4187b7:	aas    
  4187b8:	adc    BYTE PTR [eax+eax*4],ch
  4187bb:	add    BYTE PTR [ebx],al
  4187bd:	jl     0x4187b5
  4187bf:	inc    ecx
  4187c0:	jno    0x4187b3
  4187c2:	sbb    eax,0x76bb0c7
  4187c7:	jg     0x4187e4
  4187c9:	stc    
  4187ca:	sar    BYTE PTR [esi-0x2b6c4965],0x49
  4187d1:	fs dec ebp
  4187d3:	fwait
  4187d4:	leave  
  4187d5:	pop    eax
  4187d6:	popa   
  4187d7:	or     BYTE PTR [esi+0x4ebb6931],ah
  4187dd:	jp     0x4187ce
  4187df:	push   esi
  4187e0:	mov    dl,0x5e
  4187e2:	adc    eax,0x5838f88d
  4187e7:	sub    dh,BYTE PTR [ebx-0x1]
  4187ea:	xchg   esi,eax
  4187eb:	clc    
  4187ec:	jnp    0x4187ba
  4187ee:	inc    ecx
  4187ef:	push   ebx
  4187f0:	and    eax,0xaf8cd270
  4187f5:	xchg   ecx,eax
  4187f6:	pop    ebp
  4187f7:	sti    
  4187f8:	adc    cl,BYTE PTR [ebp+0x68]
  4187fb:	inc    edx
  4187fc:	pop    ecx
  4187fd:	add    BYTE PTR [ebp+ebx*2+0x46],bl
  418801:	stc    
  418802:	pop    esp
  418803:	out    dx,eax
  418804:	shl    al,1
  418806:	lock xchg ebp,eax
  418808:	sub    DWORD PTR [eax+0x5e4f9ffa],esi
  41880e:	lea    eax,[edi-0x77f53a99]
  418814:	xchg   DWORD PTR [eax],esp
  418816:	or     al,0x7c
  418818:	mov    ?,WORD PTR [ebx-0x7b]
  41881b:	jmp    0x80206be3
  418820:	mov    esi,0x82fe2530
  418825:	jo     0x418819
  418827:	push   edx
  418828:	int    0x2
  41882a:	push   eax
  41882b:	cmp    bh,BYTE PTR [edi+0x5e3ae264]
  418831:	std    
  418832:	xor    al,BYTE PTR [ebp+ebx*1-0x44741d08]
  418839:	mov    ebx,0x720ef55e
  41883e:	and    bh,BYTE PTR [edi]
  418840:	pusha  
  418841:	(bad)  
  418842:	cmp    al,0x31
  418844:	jecxz  0x4188bb
  418846:	adc    BYTE PTR [eax+0x3b],al
  418849:	mov    ch,0x4c
  41884b:	sar    DWORD PTR [ecx+ecx*2-0x19],0xf9
  418850:	inc    ecx
  418851:	pop    ss
  418852:	push   0x988d679a
  418857:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418858:	out    dx,al
  418859:	jbe    0x4187de
  41885b:	mov    ebp,0xf557ecdb
  418860:	dec    edx
  418861:	mov    DWORD PTR [ecx],ecx
  418863:	inc    edi
  418864:	popa   
  418865:	push   ecx
  418866:	popa   
  418867:	or     eax,0x7ccac7a
  41886c:	sub    eax,0xa46efe2e
  418871:	cmp    eax,0xd2fbbe2e
  418876:	mov    gs,WORD PTR [edx+0x5b4a7445]
  41887c:	inc    esi
  41887d:	bound  esp,QWORD PTR [ebx+eax*8-0x3b]
  418881:	aas    
  418882:	adc    bh,BYTE PTR [ecx-0x55bbd5f5]
  418888:	jo     0x4188c7
  41888a:	retf   
  41888b:	push   ecx
  41888c:	xlat   BYTE PTR ds:[ebx]
  41888d:	cmp    DWORD PTR [esi],edx
  41888f:	je     0x418903
  418891:	xchg   edx,eax
  418892:	xor    al,0x45
  418894:	scas   eax,DWORD PTR es:[edi]
  418895:	and    al,BYTE PTR [ebp-0x2d567e13]
  41889b:	(bad)  
  41889c:	or     eax,0xa3ddadaf
  4188a1:	jmp    DWORD PTR [eax-0x7045aab8]
  4188a7:	sti    
  4188a8:	push   edi
  4188a9:	or     BYTE PTR ds:0x8f6d1516,cl
  4188af:	fmul   QWORD PTR [ebx-0x25]
  4188b2:	and    edi,ebx
  4188b4:	or     ch,0x1d
  4188b7:	or     eax,0xc5d97936
  4188bc:	pop    es
  4188bd:	test   al,0xe4
  4188bf:	add    al,0xea
  4188c1:	aam    0xfb
  4188c3:	pop    ebp
  4188c4:	mov    cl,0x8a
  4188c6:	add    al,0xf4
  4188c8:	or     dh,ah
  4188ca:	loope  0x418939
  4188cc:	push   esi
  4188cd:	dec    edx
  4188ce:	xor    ebx,DWORD PTR [eax]
  4188d0:	dec    edx
  4188d1:	add    BYTE PTR [esi-0x36],cl
  4188d4:	adc    DWORD PTR [edi+0x6c3749bc],ecx
  4188da:	jp     0x418935
  4188dc:	pusha  
  4188dd:	scas   al,BYTE PTR es:[edi]
  4188de:	adc    BYTE PTR [ecx+0x2ea5c987],dh
  4188e4:	sar    dh,1
  4188e6:	pop    eax
  4188e7:	nop
  4188e8:	xchg   edx,eax
  4188e9:	int3   
  4188ea:	(bad)  
  4188eb:	das    
  4188ec:	mov    ah,0xc4
  4188ee:	or     al,0x97
  4188f0:	cdq    
  4188f1:	adc    ch,bh
  4188f3:	fdivp  st(1),st
  4188f5:	jns    0x41889d
  4188f7:	call   0x3267:0xcf86770b
  4188fe:	adc    eax,0x56ca4e4e
  418903:	mov    cl,BYTE PTR [ebx]
  418905:	push   es
  418906:	fidiv  WORD PTR [edx+esi*4+0x4a]
  41890a:	sub    al,0xd8
  41890c:	fadd   st,st(4)
  41890e:	lds    eax,FWORD PTR [ebx+0x1a]
  418911:	jl     0x4188ec
  418913:	mov    al,0x7
  418915:	push   edx
  418916:	test   al,0x49
  418918:	stos   BYTE PTR es:[edi],al
  418919:	ret    
  41891a:	sub    dh,dl
  41891c:	mov    ah,0xd9
  41891e:	out    dx,eax
  41891f:	push   cs
  418920:	fistp  DWORD PTR [eax+eax*4-0x76]
  418924:	sub    ch,BYTE PTR [edx+0x2d0f1040]
  41892a:	and    al,0xc
  41892c:	sub    bh,dh
  41892e:	xor    eax,esi
  418930:	ret    
  418931:	ret    0x26df
  418934:	les    eax,FWORD PTR [edx]
  418936:	repz out dx,al
  418938:	xchg   edx,eax
  418939:	gs test al,0xe0
  41893c:	das    
  41893d:	int    0xa1
  41893f:	sbb    dh,BYTE PTR [eax]
  418941:	ds push edx
  418943:	mov    ebp,0x494428b2
  418948:	(bad)  
  418949:	pop    ebx
  41894a:	pop    ds
  41894b:	push   esi
  41894c:	mov    ebx,0x99710266
  418951:	jne    0x4189b7
  418953:	add    al,0x83
  418955:	fst    DWORD PTR [esi]
  418957:	xchg   ecx,eax
  418958:	add    DWORD PTR [edx],eax
  41895a:	ss jmp 0x7940fa91
  418960:	cwde   
  418961:	cmp    al,0xf8
  418963:	or     eax,0xa90c8355
  418968:	lahf   
  418969:	shl    DWORD PTR [ebp+0x1e],cl
  41896c:	push   ss
  41896d:	in     eax,dx
  41896e:	lahf   
  41896f:	aaa    
  418970:	xchg   esi,eax
  418971:	and    eax,0x96e9166e
  418976:	lock popf 
  418978:	outs   dx,DWORD PTR ds:[esi]
  418979:	loopne 0x4188fb
  41897b:	leave  
  41897c:	dec    edx
  41897d:	rol    DWORD PTR [esi-0x55],cl
  418980:	aas    
  418981:	mov    ch,0x61
  418983:	fimul  WORD PTR [ebx-0x2bab360e]
  418989:	sub    eax,0x9c9a5f8
  41898e:	adc    eax,0xf7e6b2b7
  418993:	sub    al,BYTE PTR [edx]
  418995:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418996:	data16 cmp bh,bh
  418999:	outs   dx,DWORD PTR ds:[esi]
  41899a:	ret    
  41899b:	loope  0x41899e
  41899d:	dec    eax
  41899e:	xchg   edi,eax
  41899f:	inc    edx
  4189a0:	push   ss
  4189a1:	mov    eax,ds:0x5c1ad58a
  4189a6:	mov    ebx,0x76fb4597
  4189ab:	out    dx,al
  4189ac:	xlat   BYTE PTR ds:[ebx]
  4189ad:	(bad)  
  4189ae:	push   esp
  4189af:	sahf   
  4189b0:	xchg   edi,eax
  4189b1:	jl     0x41894c
  4189b3:	xchg   edx,eax
  4189b4:	sti    
  4189b5:	or     BYTE PTR [esi+0xdf1b55e],dl
  4189bb:	pop    eax
  4189bc:	pop    edi
  4189bd:	dec    edi
  4189be:	pusha  
  4189bf:	shr    DWORD PTR [ebp+0x252e41b],cl
  4189c5:	jmp    0x9523:0xd9757b31
  4189cc:	in     eax,0x6c
  4189ce:	stos   BYTE PTR es:[edi],al
  4189cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189d0:	xor    al,ah
  4189d2:	lahf   
  4189d3:	fiadd  WORD PTR [esi+ecx*2+0xf0d37e4]
  4189da:	repnz sub esp,DWORD PTR [ebx]
  4189dd:	or     DWORD PTR [esi],ebp
  4189df:	ss push ebx
  4189e1:	push   ebp
  4189e2:	sbb    ecx,esp
  4189e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4189e5:	clc    
  4189e6:	push   ebp
  4189e7:	ror    ch,cl
  4189e9:	cld    
  4189ea:	cdq    
  4189eb:	cwd    
  4189ed:	imul   DWORD PTR [esi]
  4189ef:	nop
  4189f0:	loopne 0x4189a9
  4189f2:	inc    edx
  4189f3:	dec    esp
  4189f4:	(bad)  
  4189f5:	mov    DWORD PTR [esi-0x3be63341],esi
  4189fb:	pop    edi
  4189fc:	popf   
  4189fd:	mov    ds:0xe524c530,eax
  418a02:	push   cs
  418a03:	sti    
  418a04:	or     al,0xa1
  418a06:	shr    DWORD PTR [esp-0x7f1a1ae1],1
  418a0d:	(bad)  
  418a0e:	outs   dx,DWORD PTR ds:[esi]
  418a0f:	lods   al,BYTE PTR ds:[esi]
  418a10:	stos   DWORD PTR es:[edi],eax
  418a11:	cli    
  418a12:	push   ecx
  418a13:	out    dx,eax
  418a14:	jge    0x4189dc
  418a16:	dec    ebp
  418a17:	jecxz  0x4189de
  418a19:	call   0x720a:0xc77949fa
  418a20:	pop    ebp
  418a21:	mov    esp,0x21387a5d
  418a26:	mov    esi,0x645507b5
  418a2b:	and    eax,0xf15b6a44
  418a30:	dec    esp
  418a31:	jle    0x418a4f
  418a33:	stc    
  418a34:	sub    ebp,DWORD PTR [edi]
  418a36:	test   esp,esi
  418a38:	std    
  418a39:	xchg   ebx,eax
  418a3a:	xor    dh,BYTE PTR [edi+ecx*8]
  418a3d:	xchg   edx,eax
  418a3e:	test   DWORD PTR [ebp+edi*4-0x6b],ecx
  418a42:	aad    0x23
  418a44:	jo     0x4189d0
  418a46:	xchg   esp,eax
  418a47:	or     BYTE PTR ss:[ecx-0x3696591],0xc1
  418a4f:	mov    bl,0x26
  418a51:	xor    DWORD PTR [esi],edx
  418a53:	cmp    ah,BYTE PTR [esi-0x7b0fe259]
  418a59:	inc    edi
  418a5a:	sbb    DWORD PTR [eax+esi*1-0x3acc5c0d],edx
  418a61:	push   0x13
  418a63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a64:	pop    edx
  418a65:	sbb    eax,0x9323d433
  418a6a:	leave  
  418a6b:	xor    BYTE PTR [edi+0x6e],0x94
  418a6f:	xor    bl,BYTE PTR [ecx]
  418a71:	icebp  
  418a72:	leave  
  418a73:	adc    ebx,ecx
  418a75:	push   eax
  418a76:	mov    bh,0xe6
  418a78:	fisubr WORD PTR [edi]
  418a7a:	bound  edx,QWORD PTR [ecx+esi*8]
  418a7d:	call   0x877b40e2
  418a82:	push   esi
  418a83:	mov    al,0x7
  418a85:	xchg   BYTE PTR [ecx],cl
  418a87:	ja     0x9cbd4cb1
  418a8d:	in     al,0xc
  418a8f:	out    dx,al
  418a90:	loop   0x418b07
  418a92:	and    ah,al
  418a94:	mov    WORD PTR [eax-0x645ba44e],es
  418a9a:	(bad)  
  418a9b:	outs   dx,DWORD PTR ds:[esi]
  418a9c:	int3   
  418a9d:	(bad)  
  418a9e:	call   DWORD PTR [edi-0x65]
  418aa1:	stos   BYTE PTR es:[edi],al
  418aa2:	jg     0x418aad
  418aa4:	push   0x2c
  418aa6:	xchg   edi,eax
  418aa7:	dec    eax
  418aa8:	pop    ecx
  418aa9:	inc    ebx
  418aaa:	or     ch,dl
  418aac:	rol    DWORD PTR ds:0xf65865aa,0x38
  418ab3:	daa    
  418ab4:	mov    dh,0x3f
  418ab6:	sub    DWORD PTR [ecx],edx
  418ab8:	in     eax,0x18
  418aba:	mov    esp,0xc1e89b40
  418abf:	inc    esi
  418ac0:	dec    esp
  418ac1:	outs   dx,DWORD PTR ds:[esi]
  418ac2:	or     DWORD PTR [edi-0x59],ebx
  418ac5:	or     eax,0xad577461
  418aca:	sahf   
  418acb:	lahf   
  418acc:	je     0x418ae2
  418ace:	stos   BYTE PTR es:[edi],al
  418acf:	dec    ebp
  418ad0:	js     0x418aab
  418ad2:	jo     0x418ad4
  418ad4:	or     edx,eax
  418ad6:	(bad)  
  418ad7:	ret    0x1a0f
  418ada:	dec    edi
  418adb:	jb     0x418b08
  418add:	inc    eax
  418ade:	xchg   dh,bh
  418ae0:	pop    es
  418ae1:	(bad)  
  418ae2:	cmp    DWORD PTR [ebp-0x14],esp
  418ae5:	out    0xd3,al
  418ae7:	pushf  
  418ae8:	pop    ds
  418ae9:	xchg   esp,eax
  418aea:	mov    edx,0x54c5a734
  418aef:	mov    dl,0x1b
  418af1:	aad    0xd5
  418af3:	inc    edi
  418af4:	call   0x76b409b8
  418af9:	int    0xa1
  418afb:	dec    ebx
  418afc:	or     eax,0xa364abff
  418b01:	fisttp QWORD PTR [esi+0x600c15bd]
  418b07:	adc    BYTE PTR [edi],al
  418b09:	bound  edx,QWORD PTR [ecx+ebx*8-0x6ae5914f]
  418b10:	dec    eax
  418b11:	popa   
  418b12:	xor    ch,BYTE PTR [edx-0x70f09b59]
  418b18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b19:	sbb    BYTE PTR [edx+0x7d071b9b],0x7d
  418b20:	arpl   WORD PTR [ecx+0x22],si
  418b23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b24:	mov    WORD PTR [esp+esi*1-0xdc72a83],ds
  418b2b:	mov    ?,WORD PTR [esi-0x32de827b]
  418b31:	add    DWORD PTR [ecx+0x556e79fc],0x870ba807
  418b3b:	jecxz  0x418ac4
  418b3d:	or     eax,0xc530a273
  418b42:	xchg   ecx,eax
  418b43:	push   es
  418b44:	idiv   BYTE PTR [esi]
  418b46:	call   0x56c8:0x6f2beaad
  418b4d:	sbb    BYTE PTR [eax],cl
  418b4f:	ins    BYTE PTR es:[edi],dx
  418b50:	xor    esi,DWORD PTR [ebx-0x29]
  418b53:	fild   DWORD PTR [eax+0x26fbdd86]
  418b59:	outs   dx,DWORD PTR ds:[esi]
  418b5a:	rol    BYTE PTR [edx+edi*2],1
  418b5d:	sub    edx,eax
  418b5f:	jle    0x418bd3
  418b61:	mov    edx,0xce4b30a5
  418b66:	test   eax,0x31bd033f
  418b6b:	mov    DWORD PTR [edi-0x5126aab5],0x4463e122
  418b75:	bound  edx,QWORD PTR [esi-0x39]
  418b78:	scas   al,BYTE PTR es:[edi]
  418b79:	xor    al,0xf3
  418b7b:	(bad)  
  418b7c:	xlat   BYTE PTR cs:[ebx]
  418b7e:	inc    edx
  418b7f:	out    dx,al
  418b80:	xchg   edi,eax
  418b81:	mul    BYTE PTR [ebx+0x50]
  418b84:	sub    bl,BYTE PTR [edx-0x448cd4b0]
  418b8a:	pop    es
  418b8b:	push   edi
  418b8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b8d:	push   edx
  418b8e:	sbb    BYTE PTR [edx-0x47],dh
  418b91:	jb     0x418bf3
  418b93:	push   0xfffffffd
  418b95:	mov    edx,DWORD PTR [eax]
  418b97:	pop    es
  418b98:	or     eax,0x60095cd8
  418b9d:	xor    eax,0x2dd152a7
  418ba2:	inc    esp
  418ba3:	ret    
  418ba4:	sub    DWORD PTR [eax-0x20a73214],0xffffff8f
  418bab:	add    BYTE PTR [edx+0x916052d],cl
  418bb1:	outs   dx,BYTE PTR ds:[esi]
  418bb2:	fisttp QWORD PTR [edi-0x1b743990]
  418bb8:	or     dh,ah
  418bba:	jmp    FWORD PTR [ecx-0x32]
  418bbd:	hlt    
  418bbe:	(bad)  
  418bbf:	xor    ebp,DWORD PTR [edi+0x53f33690]
  418bc5:	push   0xff0db4f1
  418bca:	(bad)  
  418bcb:	in     al,0xa2
  418bcd:	jne    0x418bc6
  418bcf:	sahf   
  418bd0:	jne    0x418c29
  418bd2:	fwait
  418bd3:	rcr    esi,cl
  418bd5:	clc    
  418bd6:	mov    ?,WORD PTR [ecx]
  418bd8:	cmp    bh,BYTE PTR [edi]
  418bda:	outs   dx,DWORD PTR ds:[esi]
  418bdb:	outs   dx,BYTE PTR ds:[esi]
  418bdc:	stos   BYTE PTR es:[edi],al
  418bdd:	add    cl,BYTE PTR [ebx]
  418bdf:	sbb    eax,DWORD PTR [edx-0x5cf5164]
  418be5:	xchg   BYTE PTR [ebp-0x358bbb2b],dl
  418beb:	cld    
  418bec:	in     al,0x9
  418bee:	cmp    eax,0xb6bf2080
  418bf3:	test   eax,0x1f1be7b4
  418bf8:	sahf   
  418bf9:	inc    eax
  418bfa:	retf   0x1040
  418bfd:	xchg   edi,eax
  418bfe:	add    DWORD PTR [eax+0x38f2737c],eax
  418c04:	inc    ecx
  418c05:	sbb    dh,bh
  418c07:	test   al,0x66
  418c09:	fwait
  418c0a:	(bad)  
  418c0b:	xor    edx,ecx
  418c0d:	int    0x80
  418c0f:	sbb    eax,0x9f531e4b
  418c14:	aaa    
  418c15:	test   al,0x8b
  418c17:	sbb    eax,ecx
  418c19:	push   esi
  418c1a:	mov    ?,WORD PTR [ebx-0x18]
  418c1d:	into   
  418c1e:	leave  
  418c1f:	mov    edx,0xd6e04197
  418c24:	aaa    
  418c25:	jae    0x418c44
  418c27:	fwait
  418c28:	xor    ch,ah
  418c2a:	int    0x34
  418c2c:	pop    esi
  418c2d:	xchg   edi,eax
  418c2e:	fs push 0xbb7012e0
  418c34:	psrlw  mm1,QWORD PTR [ecx]
  418c37:	xchg   ax,ax
  418c39:	sar    ch,0x9d
  418c3c:	outs   dx,BYTE PTR ds:[esi]
  418c3d:	and    DWORD PTR [edi+0x6e],ecx
  418c40:	xor    bh,ch
  418c42:	aam    0x37
  418c44:	adc    DWORD PTR [ebp-0x3b],0x99648147
  418c4b:	data16 repz jno 0x418c1e
  418c4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c50:	ss sahf 
  418c52:	push   ecx
  418c53:	int3   
  418c54:	or     al,0x57
  418c56:	sahf   
  418c57:	mov    fs,WORD PTR [ebp+0x4f]
  418c5a:	cmp    BYTE PTR [ebp-0x5d5e5ca],0x4c
  418c61:	shl    BYTE PTR [ebx-0x77da5bef],cl
  418c67:	ret    
  418c68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c69:	mov    eax,0x5bf4d61a
  418c6e:	inc    ebp
  418c6f:	jns    0x418c22
  418c71:	add    BYTE PTR [eax-0x12],0xf
  418c75:	dec    ebx
  418c76:	int    0xa8
  418c78:	mov    ds:0x3727e6ed,al
  418c7d:	std    
  418c7e:	xchg   DWORD PTR [ebp+0x5d],esi
  418c81:	je     0x418c5f
  418c83:	mov    eax,0xb122b988
  418c88:	sar    BYTE PTR [esi],0xbc
  418c8b:	loope  0x418c2f
  418c8d:	push   0xfffffff1
  418c8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c90:	lods   al,BYTE PTR ds:[esi]
  418c91:	test   BYTE PTR [ebx+0x2aac6da3],dh
  418c97:	sub    al,0xea
  418c99:	adc    ecx,0xb1e9ca07
  418c9f:	pop    ecx
  418ca0:	mov    al,0xfc
  418ca2:	mov    esp,0xe470559b
  418ca7:	push   cs
  418ca8:	sbb    al,0xb2
  418caa:	adc    BYTE PTR [eax-0x41f3d78d],0xb9
  418cb1:	mov    al,0x5f
  418cb3:	icebp  
  418cb4:	dec    di
  418cb6:	mov    al,0x1c
  418cb8:	jge    0x418c48
  418cba:	and    ecx,0x2f
  418cbd:	pop    ds
  418cbe:	cmp    dl,BYTE PTR [edi-0xda43129]
  418cc4:	mov    esp,0xa3903049
  418cc9:	enterw 0x252a,0x1c
  418cce:	and    BYTE PTR ds:0x2a94f361,ah
  418cd4:	enter  0xf513,0x64
  418cd8:	es cmp ecx,eax
  418cdb:	add    eax,0x5cf1e178
  418ce0:	es jl  0x418c9f
  418ce3:	retf   
  418ce4:	sbb    eax,0x291b0e06
  418ce9:	int3   
  418cea:	jp     0x418cfd
  418cec:	int    0xad
  418cee:	mov    ebx,0x96113276
  418cf3:	dec    edx
  418cf4:	sbb    ebp,DWORD PTR [edx+0x37]
  418cf7:	mov    al,0xb2
  418cf9:	xor    al,0xbf
  418cfb:	sub    esp,DWORD PTR [ecx+0x2d]
  418cfe:	stc    
  418cff:	not    cl
  418d01:	sbb    BYTE PTR [ebx+0x5f],0xd0
  418d05:	fisub  DWORD PTR [ecx+ebx*2]
  418d08:	push   ds
  418d09:	fisubr DWORD PTR [edi]
  418d0b:	out    0x5b,al
  418d0d:	add    ch,dh
  418d0f:	test   DWORD PTR [ecx-0xc],0x4aafd97c
  418d16:	jecxz  0x418d22
  418d18:	mov    esi,DWORD PTR [ebx+0x6037c0c4]
  418d1e:	sub    DWORD PTR [ebp-0x66a2d1eb],ebp
  418d24:	fisttp WORD PTR [edi+0x2190db67]
  418d2a:	push   ecx
  418d2b:	dec    eax
  418d2c:	jmp    0x4536144f
  418d31:	in     eax,dx
  418d32:	and    ch,BYTE PTR [ebx+0x1e]
  418d35:	xor    al,BYTE PTR [edi+eiz*1+0x48332afc]
  418d3c:	and    BYTE PTR [eax-0x3976bd21],bl
  418d42:	xor    DWORD PTR [ebx+0x2f],esi
  418d45:	in     eax,0x2b
  418d47:	out    dx,al
  418d48:	jle    0x418d04
  418d4a:	or     ah,BYTE PTR [ebp-0x6d0759]
  418d50:	sti    
  418d51:	fs sbb ch,ch
  418d54:	xchg   edi,eax
  418d55:	push   ecx
  418d56:	mov    cl,0x10
  418d58:	fcmove st,st(0)
  418d5a:	fstp   DWORD PTR [edx+0x37]
  418d5d:	cmp    al,BYTE PTR [edx-0xbead04a]
  418d63:	scas   al,BYTE PTR es:[edi]
  418d64:	mov    WORD PTR [ebp-0x60],es
  418d67:	jle    0x418d2d
  418d69:	fcom   QWORD PTR [edx+0x2c]
  418d6c:	aad    0xd2
  418d6e:	popf   
  418d6f:	lods   al,BYTE PTR ds:[esi]
  418d70:	ret    0xe49
  418d73:	dec    ecx
  418d74:	mov    eax,0xbe4956f
  418d79:	cdq    
  418d7a:	imul   eax,DWORD PTR [ebx+ebp*8],0x2d2d58ff
  418d81:	in     al,0x41
  418d83:	adc    eax,0xb53c7809
  418d88:	push   edx
  418d89:	gs dec eax
  418d8b:	cmp    esi,DWORD PTR [ebp-0x1b7d2c28]
  418d91:	inc    eax
  418d92:	adc    al,0x72
  418d94:	rol    BYTE PTR [ebp+ebp*8-0x40],1
  418d98:	mov    esi,0x7db5f006
  418d9d:	popa   
  418d9e:	jne    0x418e11
  418da0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418da1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418da2:	pushf  
  418da3:	mov    BYTE PTR [ebx],cl
  418da5:	mov    cl,0x8d
  418da7:	dec    esi
  418da8:	inc    ebp
  418da9:	adc    al,0x52
  418dab:	mov    edx,0xe922fbaa
  418db0:	cdq    
  418db1:	push   esp
  418db2:	fist   WORD PTR [esi-0x6c]
  418db5:	cmp    eax,0xc564fc22
  418dba:	stos   DWORD PTR es:[edi],eax
  418dbb:	xchg   ecx,eax
  418dbc:	add    eax,0xc6435bc3
  418dc1:	dec    esi
  418dc2:	xchg   ecx,eax
  418dc3:	jmp    0x418da4
  418dc5:	sub    dh,ah
  418dc7:	dec    ecx
  418dc8:	mov    cl,dh
  418dca:	mov    esp,0x5d72d036
  418dcf:	sti    
  418dd0:	mov    ds:0x779b47a6,eax
  418dd5:	cli    
  418dd6:	repnz add cl,BYTE PTR gs:[ebx+0x69ddf076]
  418dde:	pop    ecx
  418ddf:	and    DWORD PTR ds:0xb0352dfb,esp
  418de5:	imul   ebx,DWORD PTR [ebx+0x7a],0x4bf55d38
  418dec:	inc    ebx
  418ded:	loopne 0x418d81
  418def:	lods   eax,DWORD PTR ds:[esi]
  418df0:	mov    ebp,0x7470802b
  418df5:	lock adc al,0xb1
  418df8:	and    DWORD PTR [eax],eax
  418dfa:	pop    esi
  418dfb:	xchg   DWORD PTR [ebx],ecx
  418dfd:	dec    eax
  418dfe:	out    0x8d,eax
  418e00:	sti    
  418e01:	and    al,0xc3
  418e03:	repz jmp DWORD PTR [eax+edx*8-0x47052798]
  418e0b:	xor    eax,0xc7b9e633
  418e10:	or     ebp,eax
  418e12:	push   es
  418e13:	cmc    
  418e14:	mov    ecx,0x9952a40c
  418e19:	mov    esi,0xd5aee68f
  418e1e:	adc    ch,ch
  418e20:	jne    0x418dc9
  418e22:	lds    edx,FWORD PTR [edi]
  418e24:	push   ebp
  418e25:	pusha  
  418e26:	mov    eax,esi
  418e28:	popf   
  418e29:	cmp    DWORD PTR [edi],eax
  418e2b:	mov    dl,0x21
  418e2d:	sbb    BYTE PTR ds:0x943582bb,0x1f
  418e34:	(bad)  
  418e35:	mov    ebx,DWORD PTR [edx+ebx*4+0x59]
  418e39:	push   ecx
  418e3a:	leave  
  418e3b:	ficom  WORD PTR ds:[ebp+0x6bea509e]
  418e42:	fidivr DWORD PTR [edx]
  418e44:	xchg   BYTE PTR [ecx-0x13],al
  418e47:	inc    eax
  418e48:	inc    ebp
  418e49:	int    0x3
  418e4b:	pop    ebp
  418e4c:	sub    eax,ebx
  418e4e:	push   ds
  418e4f:	or     BYTE PTR [ecx],al
  418e51:	add    ah,BYTE PTR [edx-0x79852761]
  418e57:	pop    esi
  418e58:	enter  0xdf99,0xdd
  418e5c:	pop    edi
  418e5d:	popf   
  418e5e:	dec    eax
  418e5f:	mov    DWORD PTR [ebx-0x1c],eax
  418e62:	fisub  WORD PTR [ebx]
  418e64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e65:	cmp    DWORD PTR [bp-0x292f],edx
  418e6a:	inc    ebp
  418e6b:	aad    0x48
  418e6d:	push   ecx
  418e6e:	data16 std 
  418e70:	retf   0xd7fc
  418e73:	xchg   ebx,eax
  418e74:	sar    DWORD PTR [ebx],1
  418e76:	dec    ebx
  418e77:	dec    ebp
  418e78:	lods   al,BYTE PTR ds:[esi]
  418e79:	push   eax
  418e7a:	mov    ebx,DWORD PTR [eax+0x54e76bd7]
  418e80:	cmp    bl,BYTE PTR [edx+0x3]
  418e83:	pop    ebx
  418e84:	xchg   BYTE PTR ds:0x79cf4597,bh
  418e8a:	fxch   st(5)
  418e8c:	xchg   ecx,eax
  418e8d:	(bad)  [esi-0x55c85b00]
  418e93:	lods   eax,DWORD PTR ds:[esi]
  418e94:	test   BYTE PTR [eax+0x144ba7b4],al
  418e9a:	shl    DWORD PTR [eax+0x1f9b3b4b],1
  418ea0:	sbb    al,0x31
  418ea2:	cmp    al,0x49
  418ea4:	loop   0x418eb3
  418ea6:	arpl   WORD PTR [ecx-0x3e],bx
  418ea9:	mov    al,0x22
  418eab:	retf   0x27e4
  418eae:	jmp    0x8224:0x7d91275c
  418eb5:	push   ecx
  418eb6:	and    cl,bl
  418eb8:	sub    BYTE PTR ds:0xdd27f878,bl
  418ebe:	cmp    esi,DWORD PTR [ebp+0x38affa0c]
  418ec4:	and    al,0x7c
  418ec6:	ins    DWORD PTR es:[edi],dx
  418ec7:	scas   al,BYTE PTR es:[edi]
  418ec8:	pop    ebx
  418ec9:	popa   
  418eca:	pop    esp
  418ecb:	(bad)  
  418ecc:	cwde   
  418ecd:	(bad)  
  418ece:	das    
  418ecf:	mov    dh,0xa
  418ed1:	in     al,dx
  418ed2:	xor    DWORD PTR [esi],esi
  418ed4:	sub    al,0xf7
  418ed6:	call   0xb17248c
  418edb:	mov    ds:0xa85dfac5,al
  418ee0:	ds jge 0x418ec6
  418ee3:	clc    
  418ee4:	dec    eax
  418ee5:	mov    ebp,0x220ac18
  418eea:	xchg   BYTE PTR [esi-0x37],ch
  418eed:	das    
  418eee:	or     ch,BYTE PTR [esi-0x3b]
  418ef1:	int3   
  418ef2:	push   edi
  418ef3:	pop    edi
  418ef4:	inc    esi
  418ef5:	aad    0x65
  418ef7:	pop    ebx
  418ef8:	jmp    0x831e:0x7fc0a049
  418eff:	stos   DWORD PTR es:[edi],eax
  418f00:	inc    esp
  418f01:	pusha  
  418f02:	sti    
  418f03:	clc    
  418f04:	pop    edx
  418f05:	aam    0xae
  418f07:	daa    
  418f08:	iret   
  418f09:	dec    ebp
  418f0a:	lea    bx,[ecx+0x2a]
  418f0e:	int    0xd4
  418f10:	xor    ebx,DWORD PTR [ecx]
  418f12:	aaa    
  418f13:	mov    gs,ebp
  418f15:	(bad)  [ecx-0x24]
  418f18:	xor    eax,0xf4ef0c6a
  418f1d:	loop   0x418f08
  418f1f:	jno    0x418f67
  418f21:	sbb    DWORD PTR [ebx+0x1838c4c8],0xe3417df2
  418f2b:	test   DWORD PTR [eax-0x2c],esp
  418f2e:	pop    es
  418f2f:	aam    0xa9
  418f31:	jb     0x418ec5
  418f33:	inc    esi
  418f34:	scas   eax,DWORD PTR es:[edi]
  418f35:	push   cs
  418f36:	scas   eax,DWORD PTR es:[edi]
  418f37:	inc    eax
  418f38:	xor    al,0x39
  418f3a:	lahf   
  418f3b:	inc    esp
  418f3c:	fild   QWORD PTR [ecx]
  418f3e:	fsubr  DWORD PTR [esi-0x60]
  418f41:	in     al,dx
  418f42:	ss cmp ch,ah
  418f45:	adc    dl,0x56
  418f48:	retf   
  418f49:	adc    al,BYTE PTR [edi-0x1]
  418f4c:	test   eax,0xed285ba7
  418f51:	sub    DWORD PTR [edx+0x44ad4e2c],edx
  418f57:	push   edx
  418f58:	jne    0x418fc1
  418f5a:	(bad)  [eax-0x4b27ceb4]
  418f60:	or     esi,edi
  418f62:	dec    eax
  418f63:	fstp   QWORD PTR [edi]
  418f65:	inc    eax
  418f66:	cmp    al,0xcc
  418f68:	or     BYTE PTR [eax],bl
  418f6a:	xchg   edx,eax
  418f6b:	cwde   
  418f6c:	in     al,dx
  418f6d:	retf   0x112e
  418f70:	sub    eax,0x7c43e75f
  418f75:	sbb    BYTE PTR [edi],al
  418f77:	aad    0x52
  418f79:	jns    0x418f31
  418f7b:	mov    al,ah
  418f7d:	inc    eax
  418f7e:	adc    BYTE PTR [eax-0x6403f14c],ah
  418f84:	cwde   
  418f85:	rcl    BYTE PTR [eax],1
  418f87:	cmp    al,0xb4
  418f89:	je     0x418fd2
  418f8b:	cli    
  418f8c:	xchg   ebx,eax
  418f8d:	jo     0x418f5b
  418f8f:	cmp    bl,BYTE PTR [ebx-0x40c7a1ec]
  418f95:	jo     0x418f4a
  418f97:	mov    ds:0x34af777f,al
  418f9c:	(bad)  
  418f9e:	fisubr DWORD PTR ds:0x9961034e
  418fa4:	js     0x418f4a
  418fa6:	or     ecx,ebx
  418fa8:	call   0x7bb7:0x27fc6e8e
  418faf:	adc    eax,esp
  418fb1:	pop    ebp
  418fb2:	in     al,dx
  418fb3:	cld    
  418fb4:	in     al,0xc0
  418fb6:	setae  BYTE PTR [ebx+0x2c]
  418fba:	(bad)  
  418fbb:	mov    edi,0x705c5a85
  418fc0:	ror    DWORD PTR [eax],0xdc
  418fc3:	stos   BYTE PTR es:[edi],al
  418fc4:	inc    esp
  418fc5:	stc    
  418fc6:	jmp    0x457514fe
  418fcb:	dec    ebx
  418fcc:	fs lock inc eax
  418fcf:	inc    ecx
  418fd0:	and    eax,0x8cc29bcc
  418fd5:	ja     0x419031
  418fd7:	test   BYTE PTR [esi+0x29362b0f],dl
  418fdd:	mov    ds:0x102c3102,al
  418fe2:	in     al,dx
  418fe3:	lahf   
  418fe4:	dec    ebx
  418fe5:	das    
  418fe6:	fst    st(6)
  418fe8:	xor    BYTE PTR [edi-0x3057095f],bh
  418fee:	test   esp,eax
  418ff0:	push   0x187d939d
  418ff5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ff6:	jmp    0x5d165a86
  418ffb:	mov    ds:0xfd86cf60,eax
  419000:	dec    ebp
  419001:	call   edx
  419003:	mov    WORD PTR [edx-0x79a01cc1],ss
  419009:	cmc    
  41900a:	mov    ecx,0x548592a2
  41900f:	pop    esi
  419010:	cdq    
  419011:	(bad)  
  419012:	jmp    0x418ff9
  419014:	mov    edi,DWORD PTR [esi+0x363b695]
  41901a:	(bad)  
  41901d:	jl     0x419026
  41901f:	cli    
  419020:	xchg   BYTE PTR [ebx+0x2e5a08f5],al
  419026:	jp     0x41906a
  419028:	sub    ch,BYTE PTR [esi+0x4a]
  41902b:	push   eax
  41902c:	addr16 inc eax
  41902e:	xchg   ebp,eax
  41902f:	scas   eax,DWORD PTR es:[edi]
  419030:	mov    al,0x52
  419032:	popa   
  419033:	push   esp
  419034:	push   esp
  419035:	ret    0xc82
  419038:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419039:	or     bh,ah
  41903b:	imul   ebx,ebx,0x32
  41903e:	mov    eax,0xb8b96a14
  419043:	shr    esp,1
  419045:	jne    0x419068
  419047:	scas   al,BYTE PTR es:[edi]
  419048:	rcr    BYTE PTR ds:0x4a4377b5,1
  41904e:	sbb    al,0xf4
  419050:	fs jg  0x418fe1
  419053:	nop
  419054:	lahf   
  419055:	ret    
  419056:	fist   WORD PTR [ecx-0x366f925f]
  41905c:	int3   
  41905d:	pop    ss
  41905e:	push   edi
  41905f:	mov    bl,0x8a
  419061:	or     ebp,ebp
  419063:	adc    al,0x5
  419065:	outs   dx,BYTE PTR ds:[esi]
  419066:	outs   dx,BYTE PTR ds:[esi]
  419067:	or     eax,0x2c51f057
  41906c:	cdq    
  41906d:	xchg   esp,eax
  41906e:	jb     0x41906a
  419070:	leave  
  419071:	or     al,0xca
  419073:	push   edx
  419074:	inc    esp
  419075:	leave  
  419076:	mov    al,0xf2
  419078:	mov    dl,0x81
  41907a:	add    eax,0x356bbdc0
  41907f:	xchg   BYTE PTR [ecx+0x5c],cl
  419082:	and    eax,0x375180f2
  419087:	adc    edx,ecx
  419089:	pop    esi
  41908a:	pop    ebp
  41908b:	aad    0x90
  41908d:	dec    ebp
  41908e:	pushf  
  41908f:	fiadd  DWORD PTR [esi+0x53]
  419092:	cwde   
  419093:	jae    0x419079
  419095:	mov    al,0xc4
  419097:	mov    dh,0x3e
  419099:	ins    BYTE PTR es:[edi],dx
  41909a:	dec    ebp
  41909b:	leave  
  41909c:	(bad)  
  41909d:	stos   BYTE PTR es:[edi],al
  41909e:	sbb    eax,0x8e32d4f6
  4190a3:	adc    edx,0x18
  4190a6:	lods   al,BYTE PTR ds:[esi]
  4190a7:	mov    ds:0x7514a3d2,eax
  4190ac:	cmc    
  4190ad:	dec    ebx
  4190ae:	jnp    0x41907e
  4190b0:	nop
  4190b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190b2:	and    DWORD PTR [eax-0x2ce901da],0x0
  4190b9:	dec    edi
  4190ba:	push   ecx
  4190bb:	sbb    al,0xab
  4190bd:	xchg   BYTE PTR [edx+0x57],bl
  4190c0:	scas   eax,DWORD PTR es:[edi]
  4190c1:	fnstsw WORD PTR [ecx]
  4190c3:	add    ebx,ebp
  4190c5:	inc    edx
  4190c6:	add    dl,BYTE PTR [ebp+0x6b]
  4190c9:	rcr    al,0xb3
  4190cc:	and    eax,0x7376d179
  4190d1:	mov    esi,es
  4190d3:	jno    0x4190c0
  4190d5:	inc    esi
  4190d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190d7:	rcl    BYTE PTR [eax],cl
  4190d9:	or     ebp,edi
  4190db:	cmp    esi,DWORD PTR [esi-0x7370b484]
  4190e1:	fild   DWORD PTR [edx]
  4190e3:	mov    bh,0x44
  4190e5:	nop
  4190e6:	add    bl,BYTE PTR [eax-0x4536dddd]
  4190ec:	sub    bl,bh
  4190ee:	xor    al,0x38
  4190f0:	fild   WORD PTR [ecx-0x436abe8c]
  4190f6:	dec    esi
  4190f7:	scas   eax,DWORD PTR es:[edi]
  4190f8:	mov    dh,0xbc
  4190fa:	xchg   esi,eax
  4190fb:	mov    eax,0x60aa0d15
  419100:	sub    al,BYTE PTR ds:0x80e9faca
  419106:	pop    esp
  419107:	pop    es
  419108:	mov    DWORD PTR [edx],edx
  41910a:	cmp    eax,0xba21ab6e
  41910f:	push   edi
  419110:	or     DWORD PTR [ebx-0x18],0x28
  419114:	stos   DWORD PTR es:[edi],eax
  419115:	sbb    BYTE PTR ds:0x93767ae,dh
  41911b:	jo     0x4190d7
  41911d:	dec    ebp
  41911e:	jl     0x419175
  419120:	in     al,dx
  419121:	mov    ebp,0x530ea367
  419126:	pop    esp
  419127:	repnz and esi,DWORD PTR ds:0x1d04d737
  41912e:	add    dh,BYTE PTR [ebp+0x6d]
  419131:	fdiv   st,st(6)
  419133:	repnz mov al,0xb9
  419136:	loop   0x419132
  419138:	add    DWORD PTR [eax],edx
  41913a:	rol    DWORD PTR [edx],0x25
  41913d:	cdq    
  41913e:	std    
  41913f:	sub    al,BYTE PTR [ecx+0x2cd31804]
  419145:	ja     0x41914c
  419147:	(bad)  
  419148:	pop    eax
  419149:	sahf   
  41914a:	(bad)  
  41914c:	imul   BYTE PTR ds:0xdf160b39
  419152:	or     DWORD PTR [edx+edi*8+0x45],esi
  419156:	adc    al,0x4e
  419158:	push   es
  419159:	hlt    
  41915a:	ret    
  41915b:	gs outs dx,DWORD PTR ds:[esi]
  41915e:	hlt    
  41915f:	jo     0x4191cd
  419161:	aas    
  419162:	test   DWORD PTR ds:0x452ee51e,0x5e44c
  41916c:	in     eax,dx
  41916d:	(bad)  
  41916e:	repz or eax,0xf3e4b4e6
  419174:	adc    cl,BYTE PTR [ebx-0x3c89ff72]
  41917a:	push   es
  41917b:	ja     0x419164
  41917d:	rol    BYTE PTR [ebp+0x48ac30],cl
  419183:	hlt    
  419184:	pop    edi
  419185:	or     eax,0x3bf2a3e5
  41918a:	sar    BYTE PTR [edx],0x1c
  41918d:	int3   
  41918e:	cmp    eax,0x5c1089ea
  419193:	out    dx,eax
  419194:	pop    esi
  419195:	mov    bl,0x6f
  419197:	push   esi
  419198:	and    ebx,edi
  41919a:	jo     0x4191c3
  41919c:	je     0x41917e
  41919e:	dec    edi
  41919f:	add    BYTE PTR [esi+edx*8+0x47608b11],bl
  4191a6:	fst    st(5)
  4191a8:	pop    es
  4191a9:	mov    eax,0xd971f0db
  4191ae:	pop    es
  4191af:	and    al,0x24
  4191b1:	push   es
  4191b2:	sahf   
  4191b3:	fs iret 
  4191b5:	mov    ebp,0x2563932f
  4191ba:	ins    DWORD PTR es:[edi],dx
  4191bb:	mov    eax,DWORD PTR [ebp-0x18]
  4191be:	mov    edx,DWORD PTR [ebp-0x10]
  4191c1:	xor    eax,esi
  4191c3:	lea    eax,[eax+edx*1+0x3272db]
  4191ca:	mov    DWORD PTR [ebp-0x10],eax
  4191cd:	jmp    0x40deb0
  4191d2:	mov    eax,DWORD PTR [ebp-0x34]
  4191d5:	mov    edx,DWORD PTR [ebp+0xc]
  4191d8:	xor    edx,esi
  4191da:	lea    ecx,[ecx+edx*1+0x3272db]
  4191e1:	lea    edx,[ecx-0x3272db]
  4191e7:	xor    edx,esi
  4191e9:	cmp    edx,0xf89c95b6
  4191ef:	jne    0x40dd2f
  4191f5:	mov    ecx,DWORD PTR [ebp+0x8]
  4191f8:	mov    edx,DWORD PTR [ebp+0xc]
  4191fb:	mov    ebx,DWORD PTR [ebp+0x8]
  4191fe:	xor    edx,esi
  419200:	mov    dl,BYTE PTR [edx+eax*1+0x3272db]
  419207:	xor    ecx,esi
  419209:	mov    cl,BYTE PTR [ecx+eax*1+0x3272db]
  419210:	xor    ebx,esi
  419212:	mov    BYTE PTR [ebx+eax*1+0x3272db],dl
  419219:	mov    edx,DWORD PTR [ebp+0xc]
  41921c:	xor    edx,esi
  41921e:	mov    BYTE PTR [edx+eax*1+0x3272db],cl
  419225:	mov    eax,DWORD PTR [ebp+0xc]
  419228:	xor    eax,esi
  41922a:	add    eax,edi
  41922c:	pop    edi
  41922d:	pop    esi
  41922e:	pop    ebx
  41922f:	leave  
  419230:	ret    0x8
  419233:	push   ebp
  419234:	mov    ebp,esp
  419236:	mov    DWORD PTR ds:0x421a62,0xf89c85b5
  419240:	pop    ebp
  419241:	jmp    0x4193b5
  419246:	push   ebp
  419247:	mov    ebp,esp
  419249:	push   ecx
  41924a:	and    DWORD PTR ds:0x42c010,0x0
  419254:	jmp    0x419266
  419259:	mov    edx,DWORD PTR ds:0x42c010
  41925f:	inc    edx
  419260:	mov    DWORD PTR ds:0x42c010,edx
  419266:	cmp    DWORD PTR ds:0x42c010,0x19
  41926d:	jae    0x4192ae
  419273:	cmp    DWORD PTR ds:0x42c010,0x9
  41927a:	jne    0x419289
  419280:	push   DWORD PTR [ebp-0x18]
  419283:	call   DWORD PTR ds:0x42401c
  419289:	cmp    DWORD PTR ds:0x42c010,0x8
  419290:	jne    0x4192a3
  419296:	mov    edx,DWORD PTR ds:0x42c010
  41929c:	inc    edx
  41929d:	mov    DWORD PTR ds:0x42c010,edx
  4192a3:	jmp    0x419259
  4192a8:	or     DWORD PTR ds:0x42c004,ebx
  4192ae:	push   ecx
  4192af:	movzx  eax,BYTE PTR ds:0x42b00c
  4192b6:	and    DWORD PTR ds:0x42a01c,eax
  4192bc:	mov    DWORD PTR [ebp-0x8],0xf89c85b6
  4192c3:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4192ca:	mov    DWORD PTR ds:0x428008,0x13
  4192d4:	cmp    DWORD PTR ds:0x428008,0x0
  4192db:	je     0x41930a
  4192e1:	cmp    DWORD PTR ds:0x428008,0x20
  4192e8:	jne    0x4192fa
  4192ee:	push   DWORD PTR [ebp-0x14]
  4192f1:	push   DWORD PTR [ebp-0x1c]
  4192f4:	call   DWORD PTR ds:0x424020
  4192fa:	mov    eax,ds:0x428008
  4192ff:	dec    eax
  419300:	mov    ds:0x428008,eax
  419305:	jmp    0x4192d4
  41930a:	mov    eax,DWORD PTR [ebp-0x4]
  41930d:	and    DWORD PTR ds:0x429008,0x428020
  419317:	push   esi
  419318:	adc    DWORD PTR ds:0x42c000,0x1310
  419322:	mov    esi,DWORD PTR [ebp-0x8]
  419325:	mov    edx,0x7510893
  41932a:	xor    eax,edx
  41932c:	mov    ecx,DWORD PTR ds:0x42a000
  419332:	and    DWORD PTR ds:0x429014,ecx
  419338:	xor    esi,edx
  41933a:	mov    ecx,DWORD PTR ds:0x4237ad
  419340:	mov    ecx,DWORD PTR [ecx]
  419342:	sbb    DWORD PTR ds:0x42b00c,ecx
  419348:	mov    ecx,0x3272db
  41934d:	add    esi,ecx
  41934f:	add    eax,ecx
  419351:	imul   eax,esi
  419354:	mov    esi,DWORD PTR [ebp+0xc]
  419357:	cmp    esi,eax
  419359:	jne    0x419375
  41935f:	mov    eax,DWORD PTR [ebp-0x4]
  419362:	mov    esi,DWORD PTR [ebp-0x8]
  419365:	xor    eax,edx
  419367:	xor    esi,edx
  419369:	add    eax,ecx
  41936b:	add    esi,ecx
  41936d:	imul   eax,esi
  419370:	jmp    0x4193b0
  419375:	mov    eax,DWORD PTR [ebp+0xc]
  419378:	mov    eax,DWORD PTR [eax+0x78]
  41937b:	mov    DWORD PTR [ebp+0xc],eax
  41937e:	mov    eax,DWORD PTR [ebp-0x4]
  419381:	mov    esi,DWORD PTR [ebp-0x8]
  419384:	xor    eax,edx
  419386:	xor    esi,edx
  419388:	add    eax,ecx
  41938a:	add    esi,ecx
  41938c:	imul   eax,esi
  41938f:	mov    esi,DWORD PTR [ebp+0xc]
  419392:	cmp    esi,eax
  419394:	mov    eax,DWORD PTR [ebp-0x4]
  419397:	je     0x419362
  41939d:	xor    eax,edx
  41939f:	add    eax,ecx
  4193a1:	mov    ecx,DWORD PTR [ebp+0xc]
  4193a4:	imul   eax,ecx
  4193a7:	add    eax,DWORD PTR [ebp+0x8]
  4193aa:	mov    DWORD PTR [ebp+0xc],eax
  4193ad:	mov    eax,DWORD PTR [ebp+0xc]
  4193b0:	pop    esi
  4193b1:	leave  
  4193b2:	ret    0x8
  4193b5:	push   ebp
  4193b6:	mov    ebp,esp
  4193b8:	sub    esp,0x80
  4193be:	push   ebx
  4193bf:	push   esi
  4193c0:	push   edi
  4193c1:	mov    DWORD PTR ds:0x42c010,0xf9a
  4193cb:	mov    DWORD PTR [ebp-0x3c],0x0
  4193d2:	dec    eax
  4193d3:	mov    eax,DWORD PTR [ebp-0x18]
  4193d6:	mov    DWORD PTR [ebp-0x18],eax
  4193d9:	adc    DWORD PTR ds:0x429014,0x42801c
  4193e3:	push   0x421a66
  4193e8:	call   DWORD PTR ds:0x42402c
  4193ee:	adc    DWORD PTR ds:0x428018,0x3fb
  4193f8:	push   0x0
  4193fa:	push   0x67
  4193fc:	sbb    DWORD PTR ds:0x42b008,0x4024
  419406:	push   0xc
  419408:	mov    DWORD PTR ds:0x429000,0x5718
  419412:	push   0x3
  419414:	and    DWORD PTR ds:0x42b004,0x67ab
  41941e:	push   0x2
  419420:	push   0x78769798
  419425:	or     DWORD PTR ds:0x428024,0x42c014
  41942f:	call   DWORD PTR ds:0x42400c
  419435:	or     DWORD PTR ds:0x42c000,0x429014
  41943f:	push   0x57658733
  419444:	and    DWORD PTR ds:0x42c000,0x42900c
  41944e:	call   DWORD PTR ds:0x424008
  419454:	push   0x97667654
  419459:	call   DWORD PTR ds:0x424000
  41945f:	movzx  ebx,BYTE PTR ds:0x428004
  419466:	mov    eax,DWORD PTR [ebp-0x18]
  419469:	mov    ebx,0xf89c85b6
  41946e:	mov    DWORD PTR ds:0x42c018,0x6f46
  419478:	cmp    eax,ebx
  41947a:	mov    DWORD PTR ds:0x42c010,0x6381
  419484:	jne    0x4194d6
  41948a:	mov    DWORD PTR ds:0x421a62,0xf89c85b5
  419494:	adc    DWORD PTR ds:0x42a000,0x42801c
  41949e:	push   DWORD PTR [ebp+0x10]
  4194a1:	and    DWORD PTR ds:0x42a00c,0x42c00c
  4194ab:	push   DWORD PTR [ebp+0xc]
  4194ae:	push   DWORD PTR [ebp+0x8]
  4194b1:	or     DWORD PTR ds:0x42b008,0x5d49
  4194bb:	call   0x419233
  4194c0:	xor    DWORD PTR ds:0x42b018,ebx
  4194c6:	mov    ecx,DWORD PTR ds:0x421952
  4194cc:	or     esi,edi
  4194ce:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4194d4:	mov    DWORD PTR [ecx],eax
  4194d6:	mov    DWORD PTR [ebp-0x4],ebx
  4194d9:	sub    ecx,0x68bb
  4194df:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  4194e6:	lea    eax,[ebp-0x44]
  4194e9:	mov    DWORD PTR [ebp-0x3c],eax
  4194ec:	adc    ecx,esi
  4194ee:	lea    eax,[ebp-0x48]
  4194f1:	not    DWORD PTR ds:0x42b008
  4194f7:	mov    DWORD PTR [ebp-0x24],eax
  4194fa:	mov    ecx,DWORD PTR ds:0x4237a9
  419500:	mov    esi,DWORD PTR ds:0x42178a
  419506:	sub    esi,ecx
  419508:	and    ecx,DWORD PTR [ecx+esi*1]
  41950b:	mov    eax,ds:0x421952
  419510:	mov    eax,DWORD PTR [eax+0x1c8]
  419516:	mov    eax,DWORD PTR [eax]
  419518:	and    edi,0x1f5e
  41951e:	mov    ecx,DWORD PTR [ebp-0x24]
  419521:	mov    esi,0x7510893
  419526:	xor    eax,esi
  419528:	mov    edi,0x3272db
  41952d:	add    eax,edi
  41952f:	mov    DWORD PTR ds:0x42b00c,0x7d8f
  419539:	mov    DWORD PTR [ecx],eax
  41953b:	mov    DWORD PTR ds:0x42a01c,0x3f3b
  419545:	mov    eax,ds:0x421b6e
  41954a:	mov    DWORD PTR ds:0x42b000,0x7292
  419554:	cmp    eax,0x301ac8f5
  419559:	mov    DWORD PTR ds:0x42a000,0x7d07
  419563:	jne    0x419756
  419569:	or     DWORD PTR ds:0x42a00c,0x42c008
  419573:	mov    eax,DWORD PTR [ebp-0x4]
  419576:	mov    DWORD PTR ds:0x42b008,0x18
  419580:	cmp    DWORD PTR ds:0x42b008,0x0
  419587:	je     0x4195f4
  41958d:	cmp    DWORD PTR ds:0x42b008,0x7
  419594:	jne    0x4195c4
  41959a:	push   0x42b018
  41959f:	push   0x1cad
  4195a4:	push   0x4fac
  4195a9:	push   0x428000
  4195ae:	push   0x3aa1
  4195b3:	push   0x4234de
  4195b8:	push   DWORD PTR [ebp-0x10]
  4195bb:	push   DWORD PTR [ebp-0x14]
  4195be:	call   DWORD PTR ds:0x424024
  4195c4:	cmp    DWORD PTR ds:0x42b008,0x8
  4195cb:	jne    0x4195de
  4195d1:	mov    edx,DWORD PTR ds:0x42b008
  4195d7:	dec    edx
  4195d8:	mov    DWORD PTR ds:0x42b008,edx
  4195de:	xor    edx,edx
  4195e0:	or     edx,DWORD PTR ds:0x42b008
  4195e6:	dec    edx
  4195e7:	mov    DWORD PTR ds:0x42b008,edx
  4195ed:	jmp    0x419580
  4195f2:	sbb    ecx,ecx
  4195f4:	mov    ecx,DWORD PTR ds:0x421952
  4195fa:	and    DWORD PTR ds:0x42c004,0xdaf
  419604:	mov    ecx,DWORD PTR [ecx+0x198]
  41960a:	movzx  edx,WORD PTR ds:0x42c014
  419611:	add    DWORD PTR ds:0x42b018,edx
  419617:	xor    eax,esi
  419619:	add    eax,edi
  41961b:	and    DWORD PTR ds:0x42801c,0x0
  419625:	xor    edx,edx
  419627:	or     edx,DWORD PTR ds:0x42801c
  41962d:	inc    edx
  41962e:	mov    DWORD PTR ds:0x42801c,edx
  419634:	cmp    DWORD PTR ds:0x42801c,0x8
  41963b:	jne    0x419654
  419641:	push   0x4705
  419646:	push   0x5b08
  41964b:	push   DWORD PTR [ebp-0x18]
  41964e:	call   DWORD PTR ds:0x424028
  419654:	cmp    DWORD PTR ds:0x42801c,0x7
  41965b:	jne    0x41966e
  419661:	mov    edx,DWORD PTR ds:0x42801c
  419667:	inc    edx
  419668:	mov    DWORD PTR ds:0x42801c,edx
  41966e:	cmp    DWORD PTR ds:0x42801c,0x18
  419675:	jb     0x419625
  41967b:	mov    edx,DWORD PTR ds:0x421782
  419681:	mov    edx,DWORD PTR [edx]
  419683:	and    DWORD PTR ds:0x42b000,edx
  419689:	mov    DWORD PTR [ecx],eax
  41968b:	adc    ecx,eax
  41968d:	mov    eax,DWORD PTR [ebp-0x4]
  419690:	xor    eax,esi
  419692:	mov    DWORD PTR ds:0x42a004,0x12
  41969c:	cmp    DWORD PTR ds:0x42a004,0x0
  4196a3:	je     0x4196fe
  4196a9:	cmp    DWORD PTR ds:0x42a004,0x4
  4196b0:	jne    0x4196c6
  4196b6:	push   0x423604
  4196bb:	push   0x42357f
  4196c0:	call   DWORD PTR ds:0x424030
  4196c6:	cmp    DWORD PTR ds:0x42a004,0x5
  4196cd:	jne    0x4196e2
  4196d3:	xor    edx,edx
  4196d5:	add    edx,DWORD PTR ds:0x42a004
  4196db:	dec    edx
  4196dc:	mov    DWORD PTR ds:0x42a004,edx
  4196e2:	mov    edx,DWORD PTR ds:0x42a004
  4196e8:	dec    edx
  4196e9:	mov    DWORD PTR ds:0x42a004,edx
  4196ef:	jmp    0x41969c
  4196f4:	or     DWORD PTR ds:0x42b000,0x2eb5
  4196fe:	add    eax,edi
  419700:	and    DWORD PTR ds:0x428000,0x0
  41970a:	xor    ecx,ecx
  41970c:	or     ecx,DWORD PTR ds:0x428000
  419712:	inc    ecx
  419713:	mov    DWORD PTR ds:0x428000,ecx
  419719:	cmp    DWORD PTR ds:0x428000,0x26
  419720:	jne    0x419744
  419726:	push   DWORD PTR [ebp-0x1c]
  419729:	push   0x2787
  41972e:	push   DWORD PTR [ebp-0x20]
  419731:	push   DWORD PTR [ebp-0xc]
  419734:	push   0x458b
  419739:	push   0x42a000
  41973e:	call   DWORD PTR ds:0x424038
  419744:	cmp    DWORD PTR ds:0x428000,0x1e
  41974b:	jb     0x41970a
  419751:	mov    ds:0x421b6e,eax
  419756:	and    DWORD PTR ds:0x42a004,0x0
  419760:	xor    ecx,ecx
  419762:	xor    ecx,DWORD PTR ds:0x42a004
  419768:	inc    ecx
  419769:	mov    DWORD PTR ds:0x42a004,ecx
  41976f:	cmp    DWORD PTR ds:0x42a004,0x7
  419776:	jne    0x41978c
  41977c:	push   0x429018
  419781:	push   0x457c
  419786:	call   DWORD PTR ds:0x42403c
  41978c:	cmp    DWORD PTR ds:0x42a004,0x6
  419793:	jne    0x4197a6
  419799:	mov    ecx,DWORD PTR ds:0x42a004
  41979f:	inc    ecx
  4197a0:	mov    DWORD PTR ds:0x42a004,ecx
  4197a6:	cmp    DWORD PTR ds:0x42a004,0x1c
  4197ad:	jb     0x419760
  4197b3:	adc    edx,ecx
  4197b5:	mov    eax,ds:0x421952
  4197ba:	mov    eax,DWORD PTR [eax+0x18c]
  4197c0:	mov    eax,DWORD PTR [eax]
  4197c2:	mov    DWORD PTR [ebp-0x4c],eax
  4197c5:	xor    edx,edx
  4197c7:	add    edx,DWORD PTR ds:0x4237b9
  4197cd:	mov    eax,ds:0x42177e
  4197d2:	sub    eax,edx
  4197d4:	add    edx,DWORD PTR [edx+eax*1]
  4197d7:	mov    ecx,0xf89c85ba
  4197dc:	not    DWORD PTR ds:0x42b018
  4197e2:	mov    DWORD PTR [ebp-0x38],ecx
  4197e5:	mov    DWORD PTR [ebp-0x38],ecx
  4197e8:	neg    eax
  4197ea:	mov    DWORD PTR [ebp-0x38],ecx
  4197ed:	sbb    DWORD PTR ds:0x42a01c,0x6a2c
  4197f7:	mov    DWORD PTR [ebp-0x30],ebx
  4197fa:	sbb    ebx,ebx
  4197fc:	mov    DWORD PTR [ebp-0x38],ecx
  4197ff:	mov    DWORD PTR [ebp-0x38],0xf89c85be
  419806:	and    DWORD PTR ds:0x42800c,0x0
  419810:	jmp    0x419822
  419815:	mov    edx,DWORD PTR ds:0x42800c
  41981b:	inc    edx
  41981c:	mov    DWORD PTR ds:0x42800c,edx
  419822:	cmp    DWORD PTR ds:0x42800c,0x1c
  419829:	jae    0x419869
  41982f:	cmp    DWORD PTR ds:0x42800c,0x10
  419836:	jne    0x41984a
  41983c:	push   DWORD PTR [ebp-0x20]
  41983f:	push   0x4235fa
  419844:	call   DWORD PTR ds:0x424040
  41984a:	cmp    DWORD PTR ds:0x42800c,0xf
  419851:	jne    0x419864
  419857:	mov    edx,DWORD PTR ds:0x42800c
  41985d:	inc    edx
  41985e:	mov    DWORD PTR ds:0x42800c,edx
  419864:	jmp    0x419815
  419869:	mov    eax,DWORD PTR [ebp-0x4]
  41986c:	mov    edx,DWORD PTR [ebp-0x8]
  41986f:	inc    ebx
  419870:	mov    ebx,DWORD PTR [ebp-0x8]
  419873:	sub    DWORD PTR ds:0x42b008,0x42800c
  41987d:	xor    ebx,esi
  41987f:	xor    edx,esi
  419881:	and    DWORD PTR ds:0x42a010,0x42b01c
  41988b:	add    edx,ebx
  41988d:	and    DWORD PTR ds:0x42a01c,0x0
  419897:	jmp    0x4198ab
  41989c:	xor    ebx,ebx
  41989e:	add    ebx,DWORD PTR ds:0x42a01c
  4198a4:	inc    ebx
  4198a5:	mov    DWORD PTR ds:0x42a01c,ebx
  4198ab:	cmp    DWORD PTR ds:0x42a01c,0x12
  4198b2:	jae    0x4198fd
  4198b8:	cmp    DWORD PTR ds:0x42a01c,0x8
  4198bf:	jne    0x4198d0
  4198c5:	push   0x423564
  4198ca:	call   DWORD PTR ds:0x424044
  4198d0:	cmp    DWORD PTR ds:0x42a01c,0x7
  4198d7:	jne    0x4198ea
  4198dd:	mov    ebx,DWORD PTR ds:0x42a01c
  4198e3:	inc    ebx
  4198e4:	mov    DWORD PTR ds:0x42a01c,ebx
  4198ea:	jmp    0x41989c
  4198ef:	xor    ebx,ebx
  4198f1:	xor    ebx,DWORD PTR ds:0x42900c
  4198f7:	add    DWORD PTR ds:0x429000,ebx
  4198fd:	mov    ebx,DWORD PTR [ebp-0x8]
  419900:	sub    DWORD PTR ds:0x42900c,0x42800c
  41990a:	xor    ebx,esi
  41990c:	or     DWORD PTR ds:0x428000,0x42a00c
  419916:	xor    eax,esi
  419918:	add    eax,edi
  41991a:	mov    DWORD PTR ds:0x42b01c,0x7433
  419924:	lea    edx,[edx+ebx*1+0x975891]
  41992b:	mov    ebx,0x12a1
  419930:	mov    DWORD PTR [ebp-0x14],eax
  419933:	mov    ebx,0x8a29a123
  419938:	cmp    eax,edx
  41993a:	ja     0x419b96
  419940:	or     ecx,0x8d6
  419946:	mov    ecx,DWORD PTR [ebp-0x8]
  419949:	add    DWORD PTR ds:0x428018,ebx
  41994f:	xor    ecx,esi
  419951:	lea    ecx,[ecx+eax*1+0x3272db]
  419958:	add    DWORD PTR ds:0x429018,0x73bd
  419962:	mov    DWORD PTR [ebp-0x10],ecx
  419965:	adc    DWORD PTR ds:0x42c00c,ecx
  41996b:	mov    ecx,DWORD PTR [ebp-0x30]
  41996e:	inc    edx
  41996f:	xor    ecx,esi
  419971:	lea    ecx,[ebp+ecx*1+0x3272e3]
  419978:	xor    edx,edx
  41997a:	add    edx,DWORD PTR ds:0x42175e
  419980:	mov    edx,DWORD PTR [edx]
  419982:	or     DWORD PTR ds:0x42a008,edx
  419988:	mov    DWORD PTR [ebp-0x38],ecx
  41998b:	mov    ecx,DWORD PTR ds:0x421952
  419991:	mov    ecx,DWORD PTR [ecx+0x1bc]
  419997:	mov    DWORD PTR [ebp-0xc],0xf89c85b6
  41999e:	mov    DWORD PTR ds:0x42b01c,0x13
  4199a8:	cmp    DWORD PTR ds:0x42b01c,0x0
  4199af:	je     0x4199ef
  4199b5:	cmp    DWORD PTR ds:0x42b01c,0x20
  4199bc:	jne    0x4199d7
  4199c2:	push   0x32fe
  4199c7:	push   0x42b000
  4199cc:	push   0x42375e
  4199d1:	call   DWORD PTR ds:0x424048
  4199d7:	mov    edx,DWORD PTR ds:0x42b01c
  4199dd:	dec    edx
  4199de:	mov    DWORD PTR ds:0x42b01c,edx
  4199e4:	jmp    0x4199a8
  4199e9:	dec    DWORD PTR ds:0x428020
  4199ef:	mov    DWORD PTR [ebp-0x34],ecx
  4199f2:	adc    DWORD PTR ds:0x42a004,ebx
  4199f8:	mov    DWORD PTR [ebp-0x20],0xf89c85b5
  4199ff:	adc    edx,edx
  419a01:	mov    ecx,DWORD PTR [ebp-0xc]
  419a04:	mov    edx,DWORD PTR ds:0x428024
  419a0a:	sbb    DWORD PTR ds:0x42c018,edx
  419a10:	mov    edx,DWORD PTR [ebp-0x10]
  419a13:	xor    ecx,esi
  419a15:	sbb    DWORD PTR ds:0x42b014,0x42b008
  419a1f:	add    ecx,edi
  419a21:	cmp    ecx,edx
  419a23:	mov    DWORD PTR ds:0x429004,0x1818
  419a2d:	je     0x419b62
  419a33:	mov    eax,DWORD PTR [ebp-0xc]
  419a36:	mov    DWORD PTR ds:0x428024,0x1374
  419a40:	mov    ecx,DWORD PTR [ebp-0x10]
  419a43:	xor    edx,edx
  419a45:	or     DWORD PTR ds:0x428008,0x428020
  419a4f:	xor    eax,esi
  419a51:	sub    DWORD PTR ds:0x42b004,0x42a008
  419a5b:	add    eax,edi
  419a5d:	sbb    DWORD PTR ds:0x42c018,0x42c014
  419a67:	add    ecx,0xfabdbef1
  419a6d:	adc    edx,0xffffffff
  419a70:	xor    ecx,ebx
  419a72:	sbb    DWORD PTR ds:0x42a010,0x42800c
  419a7c:	xor    edx,0x0
  419a7f:	mov    DWORD PTR [ebp-0x68],ecx
  419a82:	mov    ecx,DWORD PTR ds:0x42c014
  419a88:	or     DWORD PTR ds:0x42a008,ecx
  419a8e:	mov    DWORD PTR [ebp-0x64],edx
  419a91:	xor    edx,edx
  419a93:	mov    ecx,eax
  419a95:	add    ecx,0xfabdbef1
  419a9b:	adc    edx,0xffffffff
  419a9e:	xor    ecx,ebx
  419aa0:	xor    edx,0x0
  419aa3:	mov    DWORD PTR ds:0x42b008,0x242f
  419aad:	mov    DWORD PTR [ebp-0x24],eax
  419ab0:	mov    DWORD PTR ds:0x428018,0x30e6
  419aba:	mov    DWORD PTR [ebp-0x74],edx
  419abd:	mov    DWORD PTR ds:0x428018,0xdc5
  419ac7:	cmp    ecx,DWORD PTR [ebp-0x68]
  419aca:	jne    0x419ae5
  419ad0:	mov    ecx,DWORD PTR [ebp-0x64]
  419ad3:	cmp    edx,ecx
  419ad5:	mov    DWORD PTR ds:0x429004,0x231e
  419adf:	je     0x419b5f
  419ae5:	mov    ecx,DWORD PTR [ebp-0xc]
  419ae8:	mov    edx,DWORD PTR [ebp-0x20]
  419aeb:	xor    edx,esi
  419aed:	add    edx,edi
  419aef:	imul   edx,eax
  419af2:	xor    ecx,esi
  419af4:	add    ecx,eax
  419af6:	mov    eax,DWORD PTR [ebp-0x34]
  419af9:	mov    ebx,DWORD PTR [ebp-0x38]
  419afc:	mov    cl,BYTE PTR [ebx+ecx*1+0x3272db]
  419b03:	mov    BYTE PTR [edx+eax*1],cl
  419b06:	mov    eax,DWORD PTR [ebp-0x20]
  419b09:	mov    ecx,DWORD PTR [ebp-0x24]
  419b0c:	xor    eax,esi
  419b0e:	lea    eax,[ecx+eax*1+0x3272db]
  419b15:	mov    ecx,DWORD PTR [ebp-0x10]
  419b18:	xor    edx,edx
  419b1a:	add    ecx,0xfabdbef1
  419b20:	adc    edx,0xffffffff
  419b23:	xor    edx,0x0
  419b26:	mov    ebx,0x8a29a123
  419b2b:	xor    ecx,ebx
  419b2d:	mov    DWORD PTR [ebp-0x70],ecx
  419b30:	mov    DWORD PTR [ebp-0x6c],edx
  419b33:	xor    edx,edx
  419b35:	mov    ecx,eax
  419b37:	add    ecx,0xfabdbef1
  419b3d:	adc    edx,0xffffffff
  419b40:	xor    ecx,ebx
  419b42:	xor    edx,0x0
  419b45:	mov    DWORD PTR [ebp-0x24],eax
  419b48:	mov    DWORD PTR [ebp-0x7c],edx
  419b4b:	cmp    ecx,DWORD PTR [ebp-0x70]
  419b4e:	jne    0x419ae5
  419b54:	mov    ecx,DWORD PTR [ebp-0x6c]
  419b57:	cmp    edx,ecx
  419b59:	jne    0x419ae5
  419b5f:	mov    eax,DWORD PTR [ebp-0x14]
  419b62:	mov    ecx,DWORD PTR [ebp-0x8]
  419b65:	xor    ecx,esi
  419b67:	lea    eax,[eax+ecx*1+0x3272db]
  419b6e:	mov    ecx,DWORD PTR [ebp-0x8]
  419b71:	mov    edx,DWORD PTR [ebp-0x8]
  419b74:	xor    edx,esi
  419b76:	xor    ecx,esi
  419b78:	add    ecx,edx
  419b7a:	mov    edx,DWORD PTR [ebp-0x8]
  419b7d:	xor    edx,esi
  419b7f:	lea    ecx,[ecx+edx*1+0x975891]
  419b86:	mov    DWORD PTR [ebp-0x14],eax
  419b89:	cmp    eax,ecx
  419b8b:	jbe    0x419940
  419b91:	mov    ecx,0xf89c85ba
  419b96:	mov    eax,DWORD PTR [ebp+0xc]
  419b99:	mov    ds:0x4217d6,eax
  419b9e:	mov    eax,DWORD PTR [ebp+0x10]
  419ba1:	mov    ds:0x421a2a,eax
  419ba6:	mov    eax,ds:0x4217d6
  419bab:	mov    edx,DWORD PTR [ebp-0x3c]
  419bae:	sub    eax,edi
  419bb0:	xor    eax,esi
  419bb2:	mov    DWORD PTR [edx],eax
  419bb4:	mov    eax,DWORD PTR [ebp-0x18]
  419bb7:	cmp    eax,0xf89c85b6
  419bbc:	jne    0x419be7
  419bc2:	lea    eax,[ebp-0x28]
  419bc5:	mov    DWORD PTR [ebp-0x40],eax
  419bc8:	lea    eax,[ebp+0x4]
  419bcb:	mov    DWORD PTR [ebp-0x28],eax
  419bce:	mov    eax,DWORD PTR [ebp-0x28]
  419bd1:	test   eax,eax
  419bd3:	je     0x419cff
  419bd9:	mov    eax,DWORD PTR [ebp-0x1c]
  419bdc:	mov    eax,DWORD PTR [ebp-0x8]
  419bdf:	lea    eax,[ebp-0x40]
  419be2:	jmp    0x419cf6
  419be7:	mov    eax,DWORD PTR [ebp-0x44]
  419bea:	cmp    eax,0xf89c85b5
  419bef:	je     0x419c4c
  419bf5:	mov    eax,DWORD PTR [ebp-0x4]
  419bf8:	mov    edx,DWORD PTR [ebp-0x48]
  419bfb:	xor    eax,esi
  419bfd:	add    eax,edi
  419bff:	cmp    eax,edx
  419c01:	je     0x419c4c
  419c07:	mov    eax,ds:0x421952
  419c0c:	mov    eax,DWORD PTR [eax+0x194]
  419c12:	mov    ecx,DWORD PTR [eax]
  419c14:	mov    eax,DWORD PTR [ecx+0x3c]
  419c17:	push   DWORD PTR ds:0x421a2a
  419c1d:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  419c21:	push   DWORD PTR ds:0x4217d6
  419c27:	add    eax,ecx
  419c29:	mov    ecx,DWORD PTR ds:0x421952
  419c2f:	mov    ecx,DWORD PTR [ecx+0x194]
  419c35:	push   DWORD PTR [ecx]
  419c37:	call   eax
  419c39:	mov    ecx,DWORD PTR ds:0x421952
  419c3f:	mov    ecx,DWORD PTR [ecx+0x1cc]
  419c45:	mov    DWORD PTR [ecx],eax
  419c47:	jmp    0x419cff
  419c4c:	mov    eax,DWORD PTR [ebp-0x4]
  419c4f:	mov    edx,DWORD PTR [ebp-0x4c]
  419c52:	xor    eax,esi
  419c54:	add    eax,edi
  419c56:	cmp    eax,edx
  419c58:	jne    0x419cb5
  419c5e:	mov    eax,DWORD PTR [ebp-0x4]
  419c61:	mov    edx,DWORD PTR ds:0x421952
  419c67:	mov    edx,DWORD PTR [edx+0x198]
  419c6d:	xor    eax,esi
  419c6f:	add    eax,edi
  419c71:	cmp    eax,DWORD PTR [edx]
  419c73:	jne    0x419c92
  419c79:	mov    eax,DWORD PTR [ebp-0x4]
  419c7c:	push   0xf89c85b6
  419c81:	xor    eax,esi
  419c83:	add    eax,edi
  419c85:	push   eax
  419c86:	push   ecx
  419c87:	push   DWORD PTR [ebp-0x8]
  419c8a:	push   DWORD PTR [ebp-0x4]
  419c8d:	call   0x408b5c
  419c92:	push   DWORD PTR [ebp-0x8]
  419c95:	push   DWORD PTR [ebp-0x4]
  419c98:	call   0x4091f8
  419c9d:	mov    eax,DWORD PTR [ebp-0x4]
  419ca0:	xor    eax,esi
  419ca2:	add    eax,edi
  419ca4:	mov    ds:0x4219d6,eax
  419ca9:	mov    eax,DWORD PTR [ebp-0x4]
  419cac:	xor    eax,esi
  419cae:	add    eax,edi
  419cb0:	mov    ds:0x4219ce,eax
  419cb5:	lea    eax,[ebp-0x2c]
  419cb8:	mov    DWORD PTR [ebp-0x50],eax
  419cbb:	lea    eax,[ebp+0x4]
  419cbe:	mov    DWORD PTR [ebp-0x2c],eax
  419cc1:	mov    eax,DWORD PTR [ebp-0x2c]
  419cc4:	test   eax,eax
  419cc6:	je     0x419cff
  419ccc:	mov    DWORD PTR [ebp-0x54],0xf152c3d
  419cd3:	mov    DWORD PTR [ebp-0x58],0x712ed08
  419cda:	mov    DWORD PTR [ebp-0x5c],0x373fc2e
  419ce1:	mov    DWORD PTR [ebp-0x60],0x72670a1e
  419ce8:	call   0x401000
  419ced:	mov    eax,DWORD PTR [ebp-0x1c]
  419cf0:	mov    eax,DWORD PTR [ebp-0x8]
  419cf3:	lea    eax,[ebp-0x50]
  419cf6:	push   eax
  419cf7:	push   DWORD PTR [ebp-0x4]
  419cfa:	call   0x40883f
  419cff:	mov    eax,ds:0x421952
  419d04:	add    eax,0x1cc
  419d09:	mov    DWORD PTR [ebp-0x38],eax
  419d0c:	lea    eax,[ebp-0x1c]
  419d0f:	mov    DWORD PTR [ebp+0xc],0xf89c85b6
  419d16:	mov    DWORD PTR [ebp-0x3c],eax
  419d19:	mov    DWORD PTR [ebp-0x24],0xf89c85b5
  419d20:	mov    eax,DWORD PTR [ebp+0xc]
  419d23:	xor    eax,esi
  419d25:	mov    DWORD PTR [ebp+0x10],0x4
  419d2c:	mov    ecx,DWORD PTR [ebp+0x10]
  419d2f:	add    eax,edi
  419d31:	cmp    eax,ecx
  419d33:	je     0x419df4
  419d39:	mov    eax,DWORD PTR [ebp+0xc]
  419d3c:	mov    ecx,DWORD PTR [ebp+0x10]
  419d3f:	xor    edx,edx
  419d41:	xor    eax,esi
  419d43:	add    eax,edi
  419d45:	add    ecx,0xfabdbef1
  419d4b:	adc    edx,0xffffffff
  419d4e:	xor    ecx,ebx
  419d50:	xor    edx,0x0
  419d53:	mov    DWORD PTR [ebp-0x70],ecx
  419d56:	mov    DWORD PTR [ebp-0x6c],edx
  419d59:	xor    edx,edx
  419d5b:	mov    ecx,eax
  419d5d:	add    ecx,0xfabdbef1
  419d63:	adc    edx,0xffffffff
  419d66:	xor    ecx,ebx
  419d68:	xor    edx,0x0
  419d6b:	mov    DWORD PTR [ebp-0x20],eax
  419d6e:	cmp    ecx,DWORD PTR [ebp-0x70]
  419d71:	jne    0x419d80
  419d77:	cmp    edx,DWORD PTR [ebp-0x6c]
  419d7a:	je     0x419df4
  419d80:	mov    ecx,DWORD PTR [ebp+0xc]
  419d83:	mov    edx,DWORD PTR [ebp-0x24]
  419d86:	xor    edx,esi
  419d88:	xor    ecx,esi
  419d8a:	add    ecx,eax
  419d8c:	add    edx,edi
  419d8e:	imul   edx,eax
  419d91:	mov    eax,DWORD PTR [ebp-0x3c]
  419d94:	mov    ebx,DWORD PTR [ebp-0x38]
  419d97:	mov    cl,BYTE PTR [ebx+ecx*1+0x3272db]
  419d9e:	mov    BYTE PTR [edx+eax*1],cl
  419da1:	mov    eax,DWORD PTR [ebp-0x24]
  419da4:	mov    ecx,DWORD PTR [ebp-0x20]
  419da7:	mov    edx,DWORD PTR [ebp+0x10]
  419daa:	xor    eax,esi
  419dac:	lea    eax,[ecx+eax*1+0x3272db]
  419db3:	xor    ecx,ecx
  419db5:	add    edx,0xfabdbef1
  419dbb:	adc    ecx,0xffffffff
  419dbe:	xor    ecx,0x0
  419dc1:	mov    DWORD PTR [ebp-0x7c],ecx
  419dc4:	xor    ebx,ebx
  419dc6:	xor    edx,0x8a29a123
  419dcc:	mov    ecx,eax
  419dce:	add    ecx,0xfabdbef1
  419dd4:	adc    ebx,0xffffffff
  419dd7:	xor    ecx,0x8a29a123
  419ddd:	xor    ebx,0x0
  419de0:	mov    DWORD PTR [ebp-0x20],eax
  419de3:	cmp    ecx,edx
  419de5:	jne    0x419d80
  419deb:	cmp    ebx,DWORD PTR [ebp-0x7c]
  419dee:	jne    0x419d80
  419df4:	mov    eax,DWORD PTR [ebp-0x1c]
  419df7:	mov    eax,DWORD PTR [eax]
  419df9:	pop    edi
  419dfa:	pop    esi
  419dfb:	pop    ebx
  419dfc:	leave  
  419dfd:	ret    0xc
  419e00:	push   ebp
  419e01:	mov    ebp,esp
  419e03:	sub    esp,0xa4
  419e09:	mov    DWORD PTR ds:0x42b000,0x1b
  419e13:	cmp    DWORD PTR ds:0x42b000,0x0
  419e1a:	je     0x419e69
  419e20:	cmp    DWORD PTR ds:0x42b000,0x4
  419e27:	jne    0x419e3b
  419e2d:	push   0x428000
  419e32:	push   DWORD PTR [ebp-0xc]
  419e35:	call   DWORD PTR ds:0x424014
  419e3b:	cmp    DWORD PTR ds:0x42b000,0x5
  419e42:	jne    0x419e57
  419e48:	xor    ecx,ecx
  419e4a:	xor    ecx,DWORD PTR ds:0x42b000
  419e50:	dec    ecx
  419e51:	mov    DWORD PTR ds:0x42b000,ecx
  419e57:	mov    ecx,DWORD PTR ds:0x42b000
  419e5d:	dec    ecx
  419e5e:	mov    DWORD PTR ds:0x42b000,ecx
  419e64:	jmp    0x419e13
  419e69:	mov    ecx,DWORD PTR [ebp+0x8]
  419e6c:	add    DWORD PTR ds:0x429004,0x326a
  419e76:	mov    eax,0x8a85
  419e7b:	sbb    DWORD PTR ds:0x42c014,0x42a000
  419e85:	xor    ax,WORD PTR [ecx+0x20]
  419e89:	sbb    ecx,DWORD PTR ds:0x42c008
  419e8f:	mov    ecx,0x3b4b
  419e94:	add    ax,cx
  419e97:	not    ecx
  419e99:	movzx  eax,ax
  419e9c:	mov    DWORD PTR [ebp-0x18],eax
  419e9f:	mov    BYTE PTR [ebp-0x1],0x61
  419ea3:	sub    DWORD PTR ds:0x429018,edi
  419ea9:	lea    eax,[ebp-0x1]
  419eac:	mov    DWORD PTR [ebp-0x10],eax
  419eaf:	mov    al,BYTE PTR [ebp-0x1]
  419eb2:	mov    DWORD PTR ds:0x42b018,0x13
  419ebc:	cmp    DWORD PTR ds:0x42b018,0x0
  419ec3:	je     0x419f16
  419ec9:	cmp    DWORD PTR ds:0x42b018,0x1f
  419ed0:	jne    0x419efe
  419ed6:	push   0x7696
  419edb:	push   0x42c01c
  419ee0:	push   0x4031
  419ee5:	push   0x429010
  419eea:	push   0x1f96
  419eef:	push   DWORD PTR [ebp-0x18]
  419ef2:	push   DWORD PTR [ebp-0x20]
  419ef5:	push   DWORD PTR [ebp-0x1c]
  419ef8:	call   DWORD PTR ds:0x424018
  419efe:	mov    ecx,DWORD PTR ds:0x42b018
  419f04:	dec    ecx
  419f05:	mov    DWORD PTR ds:0x42b018,ecx
  419f0b:	jmp    0x419ebc
  419f10:	sub    DWORD PTR ds:0x428008,ecx
  419f16:	mov    ecx,DWORD PTR [ebp-0x10]
  419f19:	xor    al,0x6f
  419f1b:	adc    DWORD PTR ds:0x429004,0x428004
  419f25:	sub    al,0xd
  419f27:	mov    BYTE PTR [ecx],al
  419f29:	mov    DWORD PTR [ebp-0x14],0xf89c85b6
  419f30:	and    DWORD PTR ds:0x428010,0x0
  419f3a:	jmp    0x419f4c
  419f3f:	mov    ecx,DWORD PTR ds:0x428010
  419f45:	inc    ecx
  419f46:	mov    DWORD PTR ds:0x428010,ecx
  419f4c:	cmp    DWORD PTR ds:0x428010,0x12
  419f53:	jae    0x419f77
  419f59:	cmp    DWORD PTR ds:0x428010,0x22
  419f60:	jne    0x419f71
  419f66:	push   0x80ee
  419f6b:	call   DWORD PTR ds:0x42401c
  419f71:	jmp    0x419f3f
  419f76:	inc    eax
  419f77:	push   ebx
  419f78:	and    DWORD PTR ds:0x428020,0x0
  419f82:	mov    eax,ds:0x428020
  419f87:	inc    eax
  419f88:	mov    ds:0x428020,eax
  419f8d:	cmp    DWORD PTR ds:0x428020,0x21
  419f94:	jne    0x419fa8
  419f9a:	push   0x12b4
  419f9f:	push   DWORD PTR [ebp-0xc]
  419fa2:	call   DWORD PTR ds:0x424020
  419fa8:	cmp    DWORD PTR ds:0x428020,0x16
  419faf:	jb     0x419f82
  419fb5:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  419fbc:	sub    eax,0x5057
  419fc1:	mov    ecx,DWORD PTR [ebp-0x14]
  419fc4:	xor    DWORD PTR ds:0x42a010,0x31a
  419fce:	push   esi
  419fcf:	and    DWORD PTR ds:0x42801c,0x42b000
  419fd9:	mov    eax,0x7510893
  419fde:	xor    ecx,eax
  419fe0:	mov    esi,0x3272db
  419fe5:	push   edi
  419fe6:	add    ecx,esi
  419fe8:	jmp    0x41a00c
  419fed:	mov    DWORD PTR ds:0x428010,0x3a90
  419ff7:	mov    dl,BYTE PTR [ebp-0x1]
  419ffa:	mov    DWORD PTR ds:0x42b000,0x1f96
  41a004:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  41a00b:	inc    ecx
  41a00c:	mov    DWORD PTR ds:0x42b008,0x156a
  41a016:	cmp    ecx,0x40
  41a019:	mov    DWORD PTR ds:0x42b004,0x31d2
  41a023:	jb     0x419fed
  41a029:	sbb    edx,DWORD PTR ds:0x429018
  41a02f:	mov    edx,DWORD PTR [ebp-0x14]
  41a032:	dec    DWORD PTR ds:0x428028
  41a038:	xor    edx,eax
  41a03a:	add    edx,esi
  41a03c:	mov    DWORD PTR ds:0x42a00c,0x26bd
  41a046:	jmp    0x41c434
  41a04b:	mov    edi,DWORD PTR [ebp+0x8]
  41a04e:	jmp    0x41c3c9
  41a053:	ud1    esp,DWORD PTR [edx+edi*2-0x78941c5c]
  41a05b:	(bad)  
  41a05c:	mov    ch,0x8f
  41a05e:	std    
  41a05f:	mov    edx,0x5f7b475d
  41a064:	add    BYTE PTR [ecx+0x62],ah
  41a067:	add    al,0x5f
  41a069:	bound  esp,QWORD PTR [edx-0x37]
  41a06c:	mov    edi,DWORD PTR [esi-0x6f6c8e7]
  41a072:	sub    cl,BYTE PTR [ecx+0x3c]
  41a075:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a076:	sbb    al,0xf2
  41a078:	ror    edi,0x1f
  41a07b:	jbe    0x41a05a
  41a07d:	xor    al,0x83
  41a07f:	fs mov ebp,0xe81bef2c
  41a085:	ja     0x41a017
  41a087:	mov    ah,dl
  41a089:	call   0x98e7:0x4ba6d344
  41a090:	add    al,0x1f
  41a092:	std    
  41a093:	dec    edx
  41a094:	retf   0xaf2e
  41a097:	cmc    
  41a098:	retf   0x5e43
  41a09b:	call   0x419f:0xfab3f89e
  41a0a2:	mov    BYTE PTR [esi-0x69],dh
  41a0a5:	and    DWORD PTR fs:[edi+0x1b],ecx
  41a0a9:	mulps  xmm1,XMMWORD PTR [edi+0x4af5d1a7]
  41a0b0:	test   al,bh
  41a0b2:	lgs    ebx,FWORD PTR [ecx-0x9cad15b]
  41a0b9:	add    BYTE PTR [eax+edi*8-0x7cab3178],ch
  41a0c0:	fld    QWORD PTR [ebp+0x12]
  41a0c3:	and    DWORD PTR [esi+0x1657c917],ebx
  41a0c9:	rcl    BYTE PTR ds:0xe0e5366a,0x72
  41a0d0:	lahf   
  41a0d1:	ins    DWORD PTR es:[edi],dx
  41a0d2:	xor    eax,ebp
  41a0d4:	dec    esp
  41a0d5:	xor    ch,BYTE PTR [ecx+0x3dda15b6]
  41a0db:	jl     0x41a0be
  41a0dd:	(bad)  
  41a0de:	lods   eax,DWORD PTR ds:[esi]
  41a0df:	push   ss
  41a0e0:	popa   
  41a0e1:	xchg   ecx,eax
  41a0e2:	sbb    al,0x33
  41a0e4:	mov    dh,0x55
  41a0e6:	xlat   BYTE PTR ds:[ebx]
  41a0e7:	dec    ebx
  41a0e8:	pop    ebp
  41a0e9:	mov    ebx,0xbc4e21de
  41a0ee:	or     al,bl
  41a0f0:	cmp    esi,0xfffffffa
  41a0f3:	int    0xd
  41a0f5:	mov    al,ds:0x1d6f1e89
  41a0fa:	int3   
  41a0fb:	dec    ebp
  41a0fc:	int3   
  41a0fd:	dec    edi
  41a0fe:	in     al,dx
  41a0ff:	push   0x49
  41a101:	test   al,0x82
  41a103:	cld    
  41a104:	fs sahf 
  41a106:	jmp    0x41a088
  41a108:	dec    esp
  41a109:	(bad)  
  41a10a:	or     BYTE PTR ds:[esi],ah
  41a10d:	mov    edx,0x92408ff9
  41a112:	mov    dh,0x3e
  41a114:	data16 cli 
  41a116:	push   0x42
  41a118:	mul    DWORD PTR [eax]
  41a11a:	push   eax
  41a11b:	jmp    0x428a:0xff7861c3
  41a122:	mov    gs,WORD PTR [ebx+eiz*8]
  41a125:	leave  
  41a126:	or     al,0xc8
  41a128:	push   ss
  41a129:	iret   
  41a12a:	push   esp
  41a12b:	add    ebx,DWORD PTR [ebp+0x71e8f3de]
  41a131:	sub    cl,bh
  41a133:	cdq    
  41a134:	push   edi
  41a135:	mov    bh,0x58
  41a137:	mov    esp,0x2742cb7
  41a13c:	jl     0x41a1b5
  41a13e:	int3   
  41a13f:	sbb    DWORD PTR [ecx],ebp
  41a141:	pop    ecx
  41a142:	pop    ss
  41a143:	push   esi
  41a144:	mov    bl,0xb9
  41a146:	sar    dl,1
  41a148:	out    dx,al
  41a149:	(bad)  
  41a14a:	retf   
  41a14b:	stc    
  41a14c:	fisubr WORD PTR [edi-0x52]
  41a14f:	mov    al,0xd5
  41a151:	pop    edi
  41a152:	cdq    
  41a153:	mov    ch,0x67
  41a155:	cmp    al,BYTE PTR [ebx+0x2f5daed9]
  41a15b:	pop    ds
  41a15c:	aam    0xf1
  41a15e:	pop    ss
  41a15f:	lahf   
  41a160:	lahf   
  41a161:	leave  
  41a162:	sub    ebp,DWORD PTR [ecx-0x655b7d2f]
  41a168:	sar    DWORD PTR [ecx-0x5],cl
  41a16b:	pop    ds
  41a16c:	cmp    BYTE PTR [esi],cl
  41a16e:	rcr    edx,cl
  41a170:	add    al,0xde
  41a172:	test   DWORD PTR ds:[edx+ebx*2-0x7e],edi
  41a177:	popa   
  41a178:	je     0x41a123
  41a17a:	in     eax,dx
  41a17b:	in     al,0x9d
  41a17d:	cwde   
  41a17e:	xor    ecx,DWORD PTR [eax+0x55e42f1]
  41a184:	cmp    BYTE PTR [esi+esi*1],0x50
  41a188:	jl     0x41a1f3
  41a18a:	jmp    0x41a144
  41a18c:	in     al,0x5a
  41a18e:	ins    DWORD PTR es:[edi],dx
  41a18f:	add    BYTE PTR [edi+0x83f2b0a],ch
  41a195:	outs   dx,DWORD PTR ds:[esi]
  41a196:	out    0x84,al
  41a198:	arpl   WORD PTR [ebp+0x756625ae],bx
  41a19e:	inc    esi
  41a19f:	stos   BYTE PTR es:[edi],al
  41a1a0:	test   eax,0xec0951e
  41a1a5:	sub    ch,dh
  41a1a7:	ja     0x41a1c6
  41a1a9:	dec    esp
  41a1aa:	in     eax,0x1d
  41a1ac:	add    ebx,edi
  41a1ae:	adc    ebx,DWORD PTR [edx-0x5a516bb0]
  41a1b4:	scas   eax,DWORD PTR es:[edi]
  41a1b5:	pushf  
  41a1b6:	imul   esi,DWORD PTR [edi-0x129cce8],0x3b
  41a1bd:	mov    eax,ds:0x240182b0
  41a1c2:	fild   WORD PTR [ecx-0x5f82709d]
  41a1c8:	dec    edi
  41a1c9:	mov    esp,0x9570035b
  41a1ce:	mov    ebp,esp
  41a1d0:	outs   dx,DWORD PTR ds:[esi]
  41a1d1:	in     eax,0x1e
  41a1d3:	jecxz  0x41a229
  41a1d5:	jecxz  0x41a240
  41a1d7:	fucomip st,st(7)
  41a1d9:	xlat   BYTE PTR ds:[bx]
  41a1db:	cld    
  41a1dc:	xchg   ebp,eax
  41a1dd:	xor    eax,DWORD PTR [edx]
  41a1df:	retf   0xc502
  41a1e2:	xchg   BYTE PTR [edx+0x7f],dl
  41a1e5:	pop    ebx
  41a1e6:	pop    ecx
  41a1e7:	jno    0x41a243
  41a1e9:	(bad)  
  41a1ea:	stc    
  41a1eb:	(bad)  
  41a1ec:	jmp    0x41a222
  41a1ee:	mov    cl,0x95
  41a1f0:	and    esi,ebx
  41a1f2:	pop    ecx
  41a1f3:	mul    BYTE PTR [esi+edi*2]
  41a1f6:	ds aaa 
  41a1f8:	mov    dh,BYTE PTR [ecx+ebx*4]
  41a1fb:	stos   BYTE PTR es:[edi],al
  41a1fc:	inc    edi
  41a1fd:	mov    eax,ds:0xe87c5b1c
  41a202:	mov    edx,0x1fc09c95
  41a207:	test   eax,0xf5f85d6a
  41a20c:	in     eax,dx
  41a20d:	(bad)  
  41a20e:	out    0xa3,eax
  41a210:	gs and al,0x62
  41a213:	jae    0x41a1e8
  41a215:	mov    ecx,0x83ab8b75
  41a21a:	mov    esp,0x8d6554ef
  41a21f:	iret   
  41a220:	in     eax,0x50
  41a222:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a223:	lahf   
  41a224:	scas   eax,DWORD PTR es:[edi]
  41a225:	sub    BYTE PTR [edi+0x4dea3430],dh
  41a22b:	mov    ebx,esp
  41a22d:	out    dx,al
  41a22e:	lds    edx,FWORD PTR [edx+0x1f]
  41a231:	pop    esi
  41a232:	int3   
  41a233:	mov    esp,DWORD PTR [esi+0x479d7330]
  41a239:	int3   
  41a23a:	enter  0xb86d,0xd0
  41a23e:	mov    eax,ds:0xb50e5494
  41a243:	jbe    0x41a220
  41a245:	call   0x7450:0x2a282423
  41a24c:	push   ebp
  41a24d:	or     edi,edi
  41a24f:	scas   eax,DWORD PTR es:[edi]
  41a250:	mov    dh,0xa8
  41a252:	sbb    al,0x14
  41a254:	push   ds
  41a255:	xchg   esi,eax
  41a256:	sbb    al,0x85
  41a258:	mov    ch,0x3a
  41a25a:	icebp  
  41a25b:	cmp    dl,BYTE PTR [esi+0x5bfddc54]
  41a261:	push   ebp
  41a262:	(bad)  
  41a263:	jmp    0x41a21d
  41a265:	clc    
  41a266:	int3   
  41a267:	cmp    edx,ecx
  41a269:	mov    BYTE PTR [eax+ebx*1-0x49],al
  41a26d:	shr    DWORD PTR [eax-0x22],cl
  41a270:	sbb    al,BYTE PTR [ebp+ebp*4+0x13f19af2]
  41a277:	data16 jno 0x41a279
  41a27a:	dec    eax
  41a27b:	lock mov al,0x54
  41a27e:	push   0xbf1a19f7
  41a283:	adc    esp,DWORD PTR [eax-0x67baf97f]
  41a289:	(bad)  
  41a28a:	fist   WORD PTR [eax+0x282a202d]
  41a290:	push   esi
  41a291:	push   ds
  41a292:	jnp    0x41a2f5
  41a294:	dec    ebx
  41a295:	scas   al,BYTE PTR es:[edi]
  41a296:	(bad)  
  41a297:	nop
  41a298:	rol    DWORD PTR [edi+0x311a9dbb],1
  41a29e:	sub    ch,cl
  41a2a0:	dec    esp
  41a2a1:	leave  
  41a2a2:	mov    WORD PTR [ebx-0x33869d66],cs
  41a2a8:	ds push edi
  41a2aa:	mov    edx,0xfba2b825
  41a2af:	and    al,BYTE PTR [ecx+edx*4-0x35]
  41a2b3:	aaa    
  41a2b4:	lods   al,BYTE PTR ds:[esi]
  41a2b5:	mov    ecx,0x51f32b79
  41a2ba:	mov    dh,0x37
  41a2bc:	cmp    cl,BYTE PTR [ebx-0x215f6844]
  41a2c2:	push   edx
  41a2c3:	adc    ah,BYTE PTR [ebx-0x3b]
  41a2c6:	pop    ecx
  41a2c7:	int3   
  41a2c8:	out    dx,eax
  41a2c9:	push   ebp
  41a2ca:	mov    WORD PTR [ebp+0x20],es
  41a2cd:	pop    ebx
  41a2ce:	popa   
  41a2cf:	in     al,0xbd
  41a2d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2d2:	push   ecx
  41a2d3:	cdq    
  41a2d4:	(bad)  
  41a2d5:	out    0x19,eax
  41a2d7:	pushf  
  41a2d8:	push   esi
  41a2d9:	test   BYTE PTR [edx-0x14691998],0xac
  41a2e0:	cld    
  41a2e1:	int3   
  41a2e2:	push   0x32
  41a2e4:	inc    ebx
  41a2e5:	jmp    0x5499:0x3381113f
  41a2ec:	sbb    ch,dl
  41a2ee:	sbb    cl,BYTE PTR [edi]
  41a2f0:	or     ecx,DWORD PTR [ebp-0x20]
  41a2f3:	adc    DWORD PTR [eax*4-0x51ad5ff7],edi
  41a2fa:	adc    DWORD PTR [eax-0x677fd84e],esp
  41a300:	test   eax,0x7a003c48
  41a305:	cli    
  41a306:	div    DWORD PTR [esi]
  41a308:	xor    cl,BYTE PTR cs:[edi+0x24]
  41a30c:	push   0x72
  41a30e:	mov    al,ds:0xcf8d8df0
  41a313:	jmp    0x609a709c
  41a318:	push   cs
  41a319:	loopne 0x41a36a
  41a31b:	leave  
  41a31c:	(bad)  
  41a31d:	pop    ecx
  41a31e:	out    dx,al
  41a31f:	adc    dh,bl
  41a321:	xchg   esi,eax
  41a322:	mov    DWORD PTR [esi],esp
  41a324:	add    al,0x7e
  41a326:	int3   
  41a327:	das    
  41a328:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a329:	xchg   ebp,eax
  41a32a:	and    al,0xf6
  41a32c:	xor    DWORD PTR [eax],0x54c62bb5
  41a332:	rcl    edi,cl
  41a334:	ins    BYTE PTR es:[edi],dx
  41a335:	pop    ebx
  41a336:	rcr    DWORD PTR [esi],1
  41a338:	cmc    
  41a339:	pop    ebx
  41a33a:	ret    0xdad0
  41a33d:	sub    eax,0xc135a428
  41a342:	(bad)  
  41a343:	xchg   esp,eax
  41a344:	xor    DWORD PTR [ebx],esi
  41a346:	sbb    bl,BYTE PTR [edi+0x55]
  41a349:	sub    edx,DWORD PTR [bp+di+0x34]
  41a34d:	jnp    0x41a3b5
  41a34f:	popa   
  41a350:	mov    fs,WORD PTR [edx-0x71e452df]
  41a356:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a357:	mov    ebx,0xeb740751
  41a35c:	(bad)  
  41a35d:	test   al,0x1d
  41a35f:	xchg   ebx,eax
  41a360:	ds (bad) 
  41a362:	(bad)  
  41a363:	and    DWORD PTR [esi-0xf3ce361],esi
  41a369:	in     eax,0xfa
  41a36b:	aam    0x96
  41a36d:	and    al,0x40
  41a36f:	push   ebx
  41a370:	loop   0x41a38b
  41a372:	or     al,0xd4
  41a374:	mov    ds:0xfe25102e,eax
  41a379:	xchg   esi,eax
  41a37a:	idiv   BYTE PTR [ebp+0x1e00800f]
  41a380:	mov    eax,0xc1c9469d
  41a385:	out    0x3,eax
  41a387:	cdq    
  41a388:	hlt    
  41a389:	icebp  
  41a38a:	int3   
  41a38b:	mov    ch,ch
  41a38d:	add    BYTE PTR [esi-0x38e74e75],al
  41a393:	adc    ebp,DWORD PTR [eax+esi*2-0x4f]
  41a397:	mov    dh,0x11
  41a399:	test   al,0x15
  41a39b:	sahf   
  41a39c:	xor    BYTE PTR [eax-0x10],bl
  41a39f:	jmp    0xc58d:0xcc75b6f1
  41a3a6:	pusha  
  41a3a7:	outs   dx,BYTE PTR gs:[esi]
  41a3a9:	arpl   WORD PTR [eax+0x664facfe],sp
  41a3af:	xchg   edi,eax
  41a3b0:	add    BYTE PTR [esi-0x4b29943c],ch
  41a3b6:	pop    ecx
  41a3b7:	dec    esi
  41a3b8:	mov    ecx,0xa29ec24e
  41a3bd:	div    DWORD PTR [edi+0x48]
  41a3c0:	push   ebp
  41a3c1:	rcl    BYTE PTR [esi+0x3a9147bc],0x6c
  41a3c8:	inc    ebp
  41a3c9:	cmp    dh,BYTE PTR [ebx-0x2a81ae6c]
  41a3cf:	inc    eax
  41a3d0:	enter  0x5e27,0xc1
  41a3d4:	test   eax,0x2991d77b
  41a3d9:	jmp    0x24d2:0xf45eaef1
  41a3e0:	scas   eax,DWORD PTR es:[edi]
  41a3e1:	and    BYTE PTR [eax-0x15],0x91
  41a3e5:	lea    ecx,[ebx+esi*1+0x5889132b]
  41a3ec:	stc    
  41a3ed:	sub    edi,DWORD PTR [esi]
  41a3ef:	and    eax,0x4106d533
  41a3f4:	stc    
  41a3f5:	sbb    eax,0xd87df779
  41a3fa:	pusha  
  41a3fb:	out    dx,eax
  41a3fc:	xor    eax,0xa666b7aa
  41a401:	inc    eax
  41a402:	dec    esi
  41a403:	jle    0x41a47e
  41a405:	outs   dx,DWORD PTR ds:[esi]
  41a406:	loop   0x41a397
  41a408:	stos   BYTE PTR es:[edi],al
  41a409:	gs je  0x41a3b9
  41a40c:	out    0x85,eax
  41a40e:	xor    al,0x70
  41a410:	or     edi,DWORD PTR [esi+ebp*1+0x6f3d696d]
  41a417:	mov    ebx,0xdfcb2c12
  41a41c:	lock sbb esp,0x7b2ab467
  41a423:	cmc    
  41a424:	pop    ss
  41a425:	(bad)  
  41a426:	mov    eax,ds:0xdf559a68
  41a42b:	pop    edi
  41a42c:	inc    eax
  41a42d:	sbb    edi,ebp
  41a42f:	dec    esi
  41a430:	add    bh,BYTE PTR [ebp-0x6cceef6c]
  41a436:	ins    DWORD PTR es:[edi],dx
  41a437:	dec    eax
  41a438:	and    cl,0x77
  41a43b:	inc    ebx
  41a43c:	xor    eax,0x314ca11
  41a441:	add    al,0xbc
  41a443:	jge    0x41a4a5
  41a445:	cmp    ebp,DWORD PTR [edi+0x4863db01]
  41a44b:	lods   eax,DWORD PTR ds:[esi]
  41a44c:	cdq    
  41a44d:	(bad)  
  41a44e:	repnz sub DWORD PTR [ebx-0x58],ecx
  41a452:	jns    0x41a44c
  41a454:	and    DWORD PTR [eax],ebx
  41a456:	lds    edx,FWORD PTR [edx+0x15]
  41a459:	ret    
  41a45a:	cmc    
  41a45b:	loop   0x41a436
  41a45d:	(bad)  
  41a45e:	ins    BYTE PTR es:[edi],dx
  41a45f:	and    esp,ebp
  41a461:	shl    BYTE PTR [ecx-0x3de9f15c],1
  41a467:	sar    BYTE PTR [edx-0x28],cl
  41a46a:	lods   eax,DWORD PTR ds:[esi]
  41a46b:	test   DWORD PTR [ebx-0x24],ebp
  41a46e:	cli    
  41a46f:	cld    
  41a470:	repnz push 0x5b
  41a473:	ins    DWORD PTR es:[edi],dx
  41a474:	xor    ah,BYTE PTR [edi-0x16]
  41a477:	mov    cl,0xcc
  41a479:	hlt    
  41a47a:	or     al,0xb2
  41a47c:	xchg   ebp,eax
  41a47d:	dec    eax
  41a47e:	ins    BYTE PTR es:[edi],dx
  41a47f:	ret    0x3fe4
  41a482:	pop    edi
  41a483:	dec    edi
  41a484:	retf   0x8f33
  41a487:	fsub   DWORD PTR [edx-0x13]
  41a48a:	jp     0x41a4cf
  41a48c:	retf   
  41a48d:	clc    
  41a48e:	mov    edi,0x746208d9
  41a493:	pop    edx
  41a494:	cmp    BYTE PTR ds:0xc6417b16,0x4f
  41a49b:	rcr    ebx,0x74
  41a49e:	mov    eax,ds:0xa9563cf6
  41a4a3:	inc    ebx
  41a4a4:	dec    esp
  41a4a5:	sahf   
  41a4a6:	jmp    0x41a474
  41a4a8:	test   ah,bl
  41a4aa:	icebp  
  41a4ab:	aam    0xdb
  41a4ad:	jl     0x41a4fe
  41a4af:	pop    esi
  41a4b0:	daa    
  41a4b1:	(bad)
  41a4b4:	call   0xe933:0x1af59d60
  41a4bb:	adc    bh,BYTE PTR [edi+0x65]
  41a4be:	xor    ecx,DWORD PTR [edi]
  41a4c0:	add    DWORD PTR [ebp+edx*8+0x625a2d65],ebx
  41a4c7:	push   edx
  41a4c8:	jno    0x41a482
  41a4ca:	jge    0x41a53d
  41a4cc:	cwde   
  41a4cd:	push   ebx
  41a4ce:	mov    ebp,0xb5c0af45
  41a4d3:	(bad)  
  41a4d4:	sbb    ch,cl
  41a4d6:	xor    cl,BYTE PTR ds:0x622b0bb5
  41a4dc:	mov    ah,0xe
  41a4de:	cmp    al,0x1c
  41a4e0:	scas   al,BYTE PTR es:[edi]
  41a4e1:	mov    bh,0x74
  41a4e3:	sbb    edi,DWORD PTR [edx]
  41a4e5:	push   cs
  41a4e6:	mov    ?,WORD PTR [ebp+0x79]
  41a4e9:	cmp    eax,0xf5abb597
  41a4ee:	xchg   edx,eax
  41a4ef:	retf   0xeb46
  41a4f2:	mov    cl,0xad
  41a4f4:	cmp    al,BYTE PTR [edx-0x550ee937]
  41a4fa:	call   ebx
  41a4fc:	jmp    0x7661058f
  41a501:	ret    
  41a502:	push   esp
  41a503:	add    ch,BYTE PTR [edx+0x7e]
  41a506:	test   DWORD PTR ds:0x31eef342,ecx
  41a50c:	xchg   ebp,eax
  41a50d:	adc    eax,0x1074b8d3
  41a512:	js     0x41a584
  41a514:	cmp    eax,0xed6c74d6
  41a519:	stos   DWORD PTR es:[edi],eax
  41a51a:	mov    BYTE PTR [ebx+eax*1+0x3c],ch
  41a51e:	xchg   ebp,eax
  41a51f:	pushf  
  41a520:	punpckldq mm7,mm6
  41a523:	add    ah,BYTE PTR [ebp-0x5c6a860e]
  41a529:	push   ecx
  41a52a:	xor    DWORD PTR [ebx],ebp
  41a52c:	je     0x41a52d
  41a52e:	and    al,0x4b
  41a530:	bound  esp,QWORD PTR [edi]
  41a532:	and    BYTE PTR [edx+0x7a262d10],al
  41a538:	fcomp  DWORD PTR [edx+0x10425549]
  41a53e:	jmp    0xe77:0x3a0db59a
  41a545:	pop    eax
  41a546:	push   esi
  41a547:	lods   eax,DWORD PTR ds:[esi]
  41a548:	sub    ebp,ebp
  41a54a:	xlat   BYTE PTR ds:[ebx]
  41a54b:	in     al,dx
  41a54c:	push   edi
  41a54d:	lods   eax,DWORD PTR ds:[esi]
  41a54e:	and    BYTE PTR [edi+0x5d],ah
  41a551:	shr    DWORD PTR [ecx-0x32],1
  41a554:	sub    al,0xf7
  41a556:	ja     0x41a52c
  41a558:	add    al,bh
  41a55a:	and    DWORD PTR [ebx],esi
  41a55c:	inc    edi
  41a55d:	jne    0x41a50c
  41a55f:	out    dx,al
  41a560:	push   ds
  41a561:	(bad)  
  41a562:	lea    edx,[esi+0x70599a3d]
  41a568:	mov    esi,0x95dd0769
  41a56d:	fistp  WORD PTR [eax+0x50]
  41a570:	loop   0x41a5de
  41a572:	ds xor eax,0x5aeb1b44
  41a578:	adc    eax,0x902f2966
  41a57d:	mov    ds:0x50a4585c,al
  41a582:	mov    eax,ds:0x116dc713
  41a587:	cwde   
  41a588:	jne    0x41a5f8
  41a58a:	nop
  41a58b:	fmul   DWORD PTR [edi]
  41a58d:	enter  0xe382,0x16
  41a591:	leave  
  41a592:	fwait
  41a593:	test   al,0xb5
  41a595:	fst    st(7)
  41a597:	cmp    bl,BYTE PTR [esi+0x7c954eb]
  41a59d:	std    
  41a59e:	fmul   DWORD PTR [esi]
  41a5a0:	and    ch,ch
  41a5a2:	sub    edx,DWORD PTR [edx]
  41a5a4:	dec    ecx
  41a5a5:	ins    BYTE PTR es:[edi],dx
  41a5a6:	push   ss
  41a5a7:	mov    ecx,0x493eb9a3
  41a5ac:	jb     0x41a5f3
  41a5ae:	aas    
  41a5af:	shl    BYTE PTR [eax],0xc2
  41a5b2:	sbb    DWORD PTR [ecx-0x3479b36],eax
  41a5b8:	pop    ebx
  41a5b9:	hlt    
  41a5ba:	rol    DWORD PTR [ebp+0x5],cl
  41a5bd:	push   ds
  41a5be:	mov    al,ds:0x37c6cbf6
  41a5c3:	push   cs
  41a5c4:	gs in  al,dx
  41a5c6:	bound  esi,QWORD PTR [edi+0x5d]
  41a5c9:	enter  0xe097,0x6e
  41a5cd:	xchg   DWORD PTR [esp+ebp*8],edx
  41a5d0:	or     eax,0x5b5f6bac
  41a5d5:	mov    ?,ebx
  41a5d7:	and    dh,BYTE PTR [eax+ebp*4+0x24]
  41a5db:	stc    
  41a5dc:	jno    0x41a599
  41a5de:	mov    ebp,0x4f343951
  41a5e3:	sbb    ah,al
  41a5e5:	gs popf 
  41a5e7:	mov    al,ds:0x67cfe1b2
  41a5ec:	leavew 
  41a5ee:	inc    esi
  41a5ef:	std    
  41a5f0:	test   eax,0x69869fd7
  41a5f5:	and    BYTE PTR [esi+0x2f73ab77],0xef
  41a5fc:	call   0x3bab7bf5
  41a601:	adc    BYTE PTR [edx],dh
  41a603:	int3   
  41a604:	sub    eax,0x8fbeb49f
  41a609:	pop    ds
  41a60a:	cmp    BYTE PTR [ebx+eax*8+0x7d],dl
  41a60e:	test   al,0xda
  41a610:	and    esp,0xb3abc8db
  41a616:	mov    bl,0xed
  41a618:	cli    
  41a619:	stc    
  41a61a:	cmp    al,0x30
  41a61c:	sub    al,0x55
  41a61e:	add    DWORD PTR [ebx-0x249f2577],ecx
  41a624:	jnp    0x41a5ee
  41a626:	adc    al,0xbf
  41a628:	push   cs
  41a629:	pop    ecx
  41a62a:	adc    dl,BYTE PTR [ecx+0x353bd4a]
  41a630:	jl     0x41a625
  41a632:	les    ebp,FWORD PTR [ecx]
  41a634:	stc    
  41a635:	push   eax
  41a636:	adc    DWORD PTR [ebx-0x4e],eax
  41a639:	nop
  41a63a:	add    al,0x66
  41a63c:	mov    ds:0x9545b5d5,eax
  41a641:	sub    eax,ecx
  41a643:	dec    ecx
  41a644:	add    ecx,esi
  41a646:	add    al,0x3c
  41a648:	or     eax,0x6d480a9c
  41a64d:	ror    DWORD PTR [ecx],1
  41a64f:	ret    
  41a650:	adc    edx,DWORD PTR [ebp+0x77]
  41a653:	icebp  
  41a654:	mov    fs,WORD PTR [edx-0x4e009ee6]
  41a65a:	inc    edx
  41a65b:	fmul   DWORD PTR [edx]
  41a65d:	pop    esp
  41a65e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a65f:	data16 test al,0x6c
  41a662:	and    DWORD PTR [edx-0xb],esi
  41a665:	lock call 0x5520:0x5ce86fbd
  41a66d:	sbb    eax,0xa79c39e0
  41a672:	add    ch,cl
  41a674:	push   ss
  41a675:	imul   eax,DWORD PTR [ecx+ebp*2-0x26],0x2d640f3a
  41a67d:	xchg   BYTE PTR [eax+0x29],dh
  41a680:	gs dec eax
  41a682:	xor    al,bh
  41a684:	inc    BYTE PTR [ebx+0x1d]
  41a687:	or     BYTE PTR [esi-0x58c69e5],0xde
  41a68e:	push   eax
  41a68f:	idiv   BYTE PTR [edi+0x32bf8a3c]
  41a695:	dec    ebp
  41a696:	add    al,0x6b
  41a698:	and    DWORD PTR [esi],0x927517e9
  41a69e:	adc    dl,BYTE PTR [esi]
  41a6a0:	es adc al,dl
  41a6a3:	mov    bl,0xd7
  41a6a5:	push   edx
  41a6a6:	sahf   
  41a6a7:	test   eax,0xa9a85728
  41a6ac:	cwde   
  41a6ad:	mov    ecx,DWORD PTR [eax]
  41a6af:	mov    al,ds:0xc95b071b
  41a6b4:	jge    0x41a6f9
  41a6b6:	jno    0x41a666
  41a6b8:	stos   BYTE PTR es:[edi],al
  41a6b9:	mov    ch,0xc4
  41a6bb:	out    dx,eax
  41a6bc:	clc    
  41a6bd:	adc    ch,BYTE PTR [edi-0x2221ee09]
  41a6c3:	pop    edx
  41a6c4:	and    BYTE PTR [ebp-0x3dda5e8e],dh
  41a6ca:	fsincos 
  41a6cc:	pop    esp
  41a6cd:	das    
  41a6ce:	outs   dx,BYTE PTR ds:[esi]
  41a6cf:	js     0x41a73a
  41a6d1:	push   ebx
  41a6d2:	push   ecx
  41a6d3:	jp     0x41a65b
  41a6d5:	mov    ds,WORD PTR [ecx]
  41a6d7:	mov    dh,0x4c
  41a6d9:	push   ss
  41a6da:	cmc    
  41a6db:	add    DWORD PTR [edx],edi
  41a6dd:	ins    BYTE PTR es:[edi],dx
  41a6de:	(bad)  
  41a6df:	sar    DWORD PTR [ebx-0x2f1f1c85],1
  41a6e5:	scas   al,BYTE PTR es:[edi]
  41a6e6:	push   ss
  41a6e7:	jns    0x41a752
  41a6e9:	call   0x96f8:0xd553b7a0
  41a6f0:	mov    ah,0x71
  41a6f2:	mov    ah,0x40
  41a6f4:	sbb    DWORD PTR [esi-0x40],0xc89aa474
  41a6fb:	out    dx,eax
  41a6fc:	pop    eax
  41a6fd:	push   esp
  41a6fe:	mov    dh,0x17
  41a700:	ret    
  41a701:	mov    ecx,0x5eb7707c
  41a706:	arpl   si,bp
  41a708:	dec    esi
  41a709:	add    bl,BYTE PTR [edi]
  41a70b:	or     bh,0xdf
  41a70e:	in     al,0xec
  41a710:	lods   al,BYTE PTR ds:[esi]
  41a711:	dec    edi
  41a712:	(bad)  
  41a713:	(bad)  
  41a714:	mov    al,0x6e
  41a716:	sub    esp,DWORD PTR [ebp-0x2f]
  41a719:	xor    DWORD PTR [ebx-0x33],edx
  41a71c:	call   0xcf166143
  41a721:	jbe    0x41a6f4
  41a723:	push   edi
  41a724:	mov    ecx,0x2bf8da
  41a729:	xor    dl,BYTE PTR [esi]
  41a72b:	pop    ss
  41a72c:	sahf   
  41a72d:	adc    esp,DWORD PTR [edi+0x68b38cf2]
  41a733:	inc    edx
  41a734:	lock pop eax
  41a736:	retf   0x9a87
  41a739:	clc    
  41a73a:	lock nop
  41a73c:	pop    esp
  41a73d:	mov    ah,0x66
  41a73f:	shl    BYTE PTR [eax],cl
  41a741:	ins    BYTE PTR es:[edi],dx
  41a742:	outs   dx,DWORD PTR ds:[esi]
  41a743:	aas    
  41a744:	dec    edi
  41a745:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a746:	dec    ebx
  41a747:	and    BYTE PTR [ecx],0x95
  41a74a:	add    dh,BYTE PTR [edi+edx*1]
  41a74d:	ret    
  41a74e:	mov    dh,0x32
  41a750:	xchg   edx,eax
  41a751:	dec    eax
  41a752:	popa   
  41a753:	rcr    ch,cl
  41a755:	(bad)  
  41a757:	je     0x41a74a
  41a759:	test   DWORD PTR [esi-0x2c],0x6d38a610
  41a760:	int3   
  41a761:	hlt    
  41a762:	fcomp  QWORD PTR ds:0x172dba50
  41a768:	pushf  
  41a769:	and    ch,BYTE PTR [eax*2+0x44ef027a]
  41a770:	fisubr DWORD PTR [esi-0xf]
  41a773:	icebp  
  41a774:	dec    ebp
  41a775:	lods   al,BYTE PTR ds:[esi]
  41a776:	iret   
  41a777:	in     al,dx
  41a778:	xlat   BYTE PTR ds:[ebx]
  41a779:	dec    eax
  41a77a:	jmp    0x41a77c
  41a77c:	sbb    BYTE PTR [edx-0x1e],ch
  41a77f:	scas   al,BYTE PTR es:[edi]
  41a780:	jmp    0x3ff04eee
  41a785:	add    eax,eax
  41a787:	xor    BYTE PTR [eax+0x55be8f1c],dl
  41a78d:	mov    edx,0x69f9f427
  41a792:	inc    edi
  41a793:	stos   BYTE PTR es:[edi],al
  41a794:	ffree  st(5)
  41a796:	rcr    BYTE PTR [eax+0xc347ebc],cl
  41a79c:	js     0x41a736
  41a79e:	enter  0x9797,0xf0
  41a7a2:	hlt    
  41a7a3:	je     0x41a77a
  41a7a5:	shl    BYTE PTR es:[edx+0x79],1
  41a7a9:	in     eax,dx
  41a7aa:	sbb    BYTE PTR [esp+ebp*4],bh
  41a7ad:	call   0x2ee3dd6c
  41a7b2:	inc    ebx
  41a7b3:	nop
  41a7b4:	xchg   ecx,eax
  41a7b5:	pop    ecx
  41a7b6:	ss repz scas eax,DWORD PTR es:[edi]
  41a7b9:	pop    edx
  41a7ba:	(bad)  
  41a7bb:	sub    al,0x92
  41a7bd:	mov    ebp,0x590970b5
  41a7c2:	and    DWORD PTR [ebp+0x36],ebx
  41a7c5:	mov    edx,0x8b8c85df
  41a7ca:	jne    0x41a83c
  41a7cc:	dec    esp
  41a7cd:	jmp    0x4f355645
  41a7d2:	aad    0x42
  41a7d4:	out    dx,al
  41a7d5:	mov    dl,BYTE PTR [edx]
  41a7d7:	ins    DWORD PTR es:[edi],dx
  41a7d8:	jl     0x41a78d
  41a7da:	cmp    DWORD PTR [ecx],esi
  41a7dc:	mov    esi,0x5ed4c68a
  41a7e1:	ret    0x998f
  41a7e4:	sbb    al,0x87
  41a7e6:	inc    esp
  41a7e7:	adc    edx,DWORD PTR [edi+ebp*1-0x1a142a01]
  41a7ee:	inc    esp
  41a7ef:	cwde   
  41a7f0:	sbb    DWORD PTR [eax+0x79525811],esi
  41a7f6:	jge    0x41a86b
  41a7f8:	(bad)  [edx-0x1a90db96]
  41a7fe:	push   esi
  41a7ff:	push   ebp
  41a800:	js     0x41a7ad
  41a802:	iret   
  41a803:	mov    esi,eax
  41a805:	inc    edx
  41a806:	push   ss
  41a807:	dec    edi
  41a808:	icebp  
  41a809:	cmc    
  41a80a:	xchg   esp,eax
  41a80b:	push   esp
  41a80c:	dec    ebp
  41a80d:	in     eax,0x11
  41a80f:	dec    edx
  41a810:	pop    esp
  41a811:	cld    
  41a812:	ins    BYTE PTR es:[edi],dx
  41a813:	cmp    edx,edx
  41a815:	and    BYTE PTR [edx+0x4d8f3dc4],al
  41a81b:	(bad)  
  41a81d:	out    0xc3,al
  41a81f:	pop    esp
  41a820:	js     0x41a811
  41a822:	jnp    0x41a87a
  41a824:	dec    edi
  41a825:	iret   
  41a826:	cmp    al,0x65
  41a828:	sbb    esp,esi
  41a82a:	outs   dx,DWORD PTR ds:[esi]
  41a82b:	mov    BYTE PTR [ebp+0x6cbe804b],dh
  41a831:	cmp    ch,bl
  41a833:	mov    ebp,DWORD PTR [edi]
  41a835:	xchg   ebp,eax
  41a836:	mov    DWORD PTR [edx-0x7be2cdb9],ebx
  41a83c:	push   0x79
  41a83e:	pushf  
  41a83f:	fisttp WORD PTR [ebp-0x6662222]
  41a845:	in     eax,0x74
  41a847:	inc    esp
  41a848:	test   al,0x3
  41a84a:	shl    DWORD PTR [edx],0x16
  41a84d:	mov    DWORD PTR [eax-0x6512c12b],eax
  41a853:	dec    eax
  41a854:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41a856:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a857:	inc    ebx
  41a858:	out    dx,al
  41a859:	out    dx,eax
  41a85a:	jecxz  0x41a84a
  41a85c:	sub    DWORD PTR [ecx+0x5da95b5a],ebp
  41a862:	and    esp,DWORD PTR [ecx]
  41a864:	je     0x41a852
  41a866:	mov    ds:0x23a4882b,eax
  41a86b:	inc    ebp
  41a86c:	test   BYTE PTR [ecx-0x23],0xc6
  41a870:	pop    ebx
  41a871:	(bad)  
  41a872:	jle    0x41a889
  41a874:	jmp    0x41a885
  41a876:	mov    bh,0xdf
  41a878:	mov    esp,esi
  41a87a:	dec    esp
  41a87b:	inc    eax
  41a87c:	ret    
  41a87d:	pop    eax
  41a87e:	jae    0x41a8f9
  41a880:	pop    ecx
  41a881:	xor    BYTE PTR [edi-0x757c71d8],bl
  41a887:	cld    
  41a888:	cwde   
  41a889:	sub    al,0xa9
  41a88b:	bound  esi,QWORD PTR [edi-0x1a]
  41a88e:	shl    BYTE PTR [esi+edi*8-0x401eaf22],1
  41a895:	fisub  WORD PTR [bp+0x4711]
  41a89a:	scas   al,BYTE PTR es:[edi]
  41a89b:	jle    0x41a857
  41a89d:	dec    ebp
  41a89e:	xchg   esp,eax
  41a89f:	jns    0x41a83e
  41a8a1:	dec    edx
  41a8a2:	ins    DWORD PTR es:[edi],dx
  41a8a3:	xor    eax,0xa4c80470
  41a8a9:	sub    ah,BYTE PTR [ecx-0x66426ab4]
  41a8af:	sub    al,0xf0
  41a8b1:	xor    ebp,edx
  41a8b3:	aam    0xcf
  41a8b5:	xlat   BYTE PTR ds:[ebx]
  41a8b6:	(bad)  
  41a8b7:	loope  0x41a896
  41a8b9:	mov    ebx,0xd5064201
  41a8be:	push   0xa3e406df
  41a8c3:	xor    al,0xa1
  41a8c5:	sub    BYTE PTR [ebp+0x47d8496],bl
  41a8cb:	mov    ch,BYTE PTR [edx]
  41a8cd:	or     al,0xf0
  41a8cf:	mov    al,0xd6
  41a8d1:	rcl    BYTE PTR [ecx+0x3d5dbd61],cl
  41a8d7:	push   ds
  41a8d8:	and    esp,DWORD PTR [ebx]
  41a8da:	rcr    BYTE PTR [ebx],0x5f
  41a8dd:	jbe    0x41a919
  41a8df:	sbb    ebp,DWORD PTR [edx]
  41a8e1:	push   edx
  41a8e2:	test   eax,0xbcfc3d5
  41a8e7:	xchg   di,ax
  41a8e9:	fcmovb st,st(4)
  41a8eb:	call   0xab8e:0xc64a27d2
  41a8f2:	scas   al,BYTE PTR es:[edi]
  41a8f3:	or     ecx,DWORD PTR [eax+0x6c]
  41a8f6:	and    eax,0x70175589
  41a8fb:	enter  0x8eb9,0x39
  41a8ff:	shl    DWORD PTR [edi],1
  41a901:	out    0xb2,al
  41a903:	jne    0x41a8ad
  41a905:	inc    edi
  41a906:	aad    0x39
  41a908:	retf   0x5859
  41a90b:	adc    eax,0x549f51b1
  41a910:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a911:	mov    cl,0x1d
  41a913:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a914:	and    al,0xb8
  41a916:	daa    
  41a917:	adc    cl,BYTE PTR [edi-0x64fd34b8]
  41a91d:	push   esi
  41a91e:	fs (bad) 
  41a920:	(bad)  
  41a921:	jne    0x41a981
  41a923:	sub    al,0x7e
  41a925:	cmp    BYTE PTR [ebp-0x6f633ca0],ch
  41a92b:	dec    ebp
  41a92c:	sub    BYTE PTR [esi+ebx*1-0x4e01b716],dh
  41a933:	jns    0x41a8c0
  41a935:	mov    ds:0xee796b86,eax
  41a93a:	aad    0x31
  41a93c:	iret   
  41a93d:	test   al,0x84
  41a93f:	int3   
  41a940:	(bad)  
  41a942:	mov    ds:0x3ed4b003,al
  41a947:	inc    eax
  41a948:	add    ah,ch
  41a94a:	xchg   esp,eax
  41a94b:	imul   esp
  41a94d:	add    DWORD PTR [ebp+0x6d06a707],esp
  41a953:	ret    0x7d65
  41a956:	outs   dx,DWORD PTR ds:[esi]
  41a957:	pop    ecx
  41a958:	inc    ecx
  41a959:	and    dl,BYTE PTR [edi+0x1f]
  41a95c:	dec    edi
  41a95d:	shr    DWORD PTR [ebp+0x1b],1
  41a960:	cmp    BYTE PTR [edx+ebp*8],dh
  41a963:	jne    0x41a90d
  41a965:	fist   WORD PTR [eax-0x2f]
  41a968:	jmp    0x41a922
  41a96a:	push   esi
  41a96b:	stos   DWORD PTR es:[edi],eax
  41a96c:	test   DWORD PTR [edx-0x22],ebx
  41a96f:	mov    edi,0xa04279b5
  41a974:	adc    DWORD PTR [esi+0x59],ebp
  41a977:	call   0x29f116af
  41a97c:	fmul   DWORD PTR [ebx]
  41a97e:	cmp    ebp,ebp
  41a980:	adc    ecx,edi
  41a982:	dec    esi
  41a983:	aam    0xe7
  41a985:	mov    ebx,0x833d5f23
  41a98a:	dec    esi
  41a98b:	sbb    ch,BYTE PTR [ebx-0x18]
  41a98e:	inc    edi
  41a98f:	mov    bh,0x6b
  41a991:	push   ebp
  41a992:	dec    esp
  41a993:	inc    eax
  41a994:	add    al,0xab
  41a996:	and    DWORD PTR [edi+edi*1],ecx
  41a999:	cli    
  41a99a:	gs test al,0x20
  41a99d:	lods   al,BYTE PTR ds:[esi]
  41a99e:	mov    edx,0x99d52981
  41a9a3:	jns    0x41a9d1
  41a9a5:	imul   edx,DWORD PTR [eax+edx*2],0xffffffe4
  41a9a9:	pop    es
  41a9aa:	dec    ecx
  41a9ab:	aad    0x8e
  41a9ad:	loope  0x41aa23
  41a9af:	jae    0x41a9b8
  41a9b1:	test   al,0x8d
  41a9b3:	sub    ebp,ebx
  41a9b5:	add    eax,0x1b085fa6
  41a9ba:	inc    ebx
  41a9bb:	adc    DWORD PTR [ecx],0x38461946
  41a9c1:	cmp    DWORD PTR [ecx+0x351e8a17],ebp
  41a9c7:	sti    
  41a9c8:	add    BYTE PTR [edx],ch
  41a9ca:	add    al,0xc0
  41a9cc:	cdq    
  41a9cd:	lds    edi,FWORD PTR [edi+0x20]
  41a9d0:	dec    ebx
  41a9d1:	mov    ds:0x99eaf933,al
  41a9d6:	jmp    0x359d4e79
  41a9db:	bound  ebp,QWORD PTR [ecx]
  41a9dd:	inc    esi
  41a9de:	add    BYTE PTR [edi],bh
  41a9e0:	out    dx,eax
  41a9e1:	xor    DWORD PTR [ebx+0x5dc67a1],eax
  41a9e7:	cmp    BYTE PTR [ecx],bl
  41a9e9:	sub    DWORD PTR [edx-0x10369cbc],0xffffff8d
  41a9f0:	and    ebp,DWORD PTR [esp+ebx*1-0x1fb4b7eb]
  41a9f7:	in     al,0x7b
  41a9f9:	jecxz  0x41aa71
  41a9fb:	jmp    0x4680f30f
  41aa00:	xchg   DWORD PTR [ecx],ebp
  41aa02:	retf   
  41aa03:	xor    BYTE PTR [eax+eax*4-0x2c],0x2f
  41aa08:	mov    ds:0xa3081ea3,eax
  41aa0d:	cmp    ebp,DWORD PTR [esi+0x1da0a8df]
  41aa13:	push   eax
  41aa14:	lods   eax,DWORD PTR ds:[esi]
  41aa15:	adc    eax,0xc2837638
  41aa1a:	xchg   edx,eax
  41aa1b:	int    0xce
  41aa1d:	xchg   DWORD PTR [ebx-0x25],ebx
  41aa20:	jp     0x41aa0e
  41aa22:	icebp  
  41aa23:	mov    eax,ds:0x1c15c3a7
  41aa28:	ss jns 0x41aa38
  41aa2b:	jl     0x41aa4c
  41aa2d:	imul   esi,DWORD PTR [esi],0x8c5974bc
  41aa33:	ins    BYTE PTR es:[edi],dx
  41aa34:	xor    eax,ebx
  41aa36:	push   esi
  41aa37:	aaa    
  41aa38:	(bad)  
  41aa39:	adc    edi,DWORD PTR [ebp-0x1db509d]
  41aa3f:	nop
  41aa40:	xchg   BYTE PTR [esi],bh
  41aa42:	inc    edi
  41aa43:	sub    DWORD PTR [edx-0x1d955bd3],0x2b
  41aa4a:	mov    cl,BYTE PTR [ebx+0x25]
  41aa4d:	(bad)  
  41aa4e:	out    0x36,eax
  41aa50:	jnp    0x41aa3f
  41aa52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa53:	gs shr al,cl
  41aa56:	or     al,0x26
  41aa58:	fs pop ecx
  41aa5a:	sub    dl,BYTE PTR [ecx-0x7c38db36]
  41aa60:	or     BYTE PTR ds:0x43a4dd3a,dl
  41aa66:	aas    
  41aa67:	xor    DWORD PTR [edi-0x1b],0x33
  41aa6b:	hlt    
  41aa6c:	pop    ebp
  41aa6d:	mov    esp,0x65e847e5
  41aa72:	dec    ecx
  41aa73:	in     eax,0xd3
  41aa75:	rsqrtps xmm7,XMMWORD PTR [esi]
  41aa78:	jno    0x41aab4
  41aa7a:	xchg   ebp,eax
  41aa7b:	jo     0x41aad2
  41aa7d:	shl    BYTE PTR [ecx-0x9],cl
  41aa80:	fs cli 
  41aa82:	loop   0x41aa83
  41aa84:	scas   al,BYTE PTR es:[edi]
  41aa85:	sti    
  41aa86:	mov    ah,0x8b
  41aa88:	pop    ebp
  41aa89:	scas   eax,DWORD PTR es:[edi]
  41aa8a:	fs inc edx
  41aa8c:	idiv   DWORD PTR [ecx]
  41aa8e:	in     eax,dx
  41aa8f:	mov    dl,BYTE PTR [edi]
  41aa91:	popf   
  41aa92:	ins    DWORD PTR es:[edi],dx
  41aa93:	adc    eax,0x871d1852
  41aa98:	dec    ecx
  41aa99:	fsubr  DWORD PTR [ebp+0x77]
  41aa9c:	mov    al,0x8f
  41aa9e:	adc    cl,0x66
  41aaa1:	icebp  
  41aaa2:	jbe    0x41aafe
  41aaa4:	push   ds
  41aaa5:	push   cs
  41aaa6:	aam    0xc9
  41aaa8:	shl    cl,cl
  41aaaa:	mov    dl,0xcb
  41aaac:	jns    0x41aaa3
  41aaae:	test   BYTE PTR [esi-0x4e],dl
  41aab1:	repz adc ebp,esp
  41aab4:	aas    
  41aab5:	or     BYTE PTR [eax+0x3e254348],0xb3
  41aabc:	jmp    0x9aff:0x40144375
  41aac3:	ret    
  41aac4:	push   edx
  41aac5:	fcomp  DWORD PTR [ecx+0x5f3d2549]
  41aacb:	stos   DWORD PTR es:[edi],eax
  41aacc:	call   0xc6fb:0x621c8fec
  41aad3:	jae    0x41aab9
  41aad5:	cmc    
  41aad6:	out    dx,al
  41aad7:	(bad)  [ecx+0x1670fe9a]
  41aadd:	pop    esi
  41aade:	jns    0x41ab06
  41aae0:	push   0xffffffe3
  41aae2:	xor    eax,0x6bf5840c
  41aae7:	jae    0x41aa6f
  41aae9:	and    DWORD PTR [esi-0x779a672],edi
  41aaef:	lods   eax,DWORD PTR ds:[esi]
  41aaf0:	scas   eax,DWORD PTR es:[edi]
  41aaf1:	jp     0x41aa76
  41aaf3:	lock dec esp
  41aaf5:	jge    0x41aac1
  41aaf7:	gs pop esi
  41aaf9:	ret    
  41aafa:	or     ebp,DWORD PTR [ecx+0x25f82456]
  41ab00:	jle    0x41aacc
  41ab02:	int3   
  41ab03:	lahf   
  41ab04:	aad    0x8f
  41ab06:	adc    BYTE PTR [edx+eiz*4+0x20],dh
  41ab0a:	fst    QWORD PTR [esi+ecx*4+0xe9981ce]
  41ab11:	popf   
  41ab12:	xchg   esp,eax
  41ab13:	jl     0x41aaf2
  41ab15:	sbb    cl,BYTE PTR [esi]
  41ab17:	retf   0xdee
  41ab1a:	dec    edi
  41ab1b:	jb     0x41aaca
  41ab1d:	ficomp DWORD PTR [eax+esi*1+0x1197ad1d]
  41ab24:	cmp    BYTE PTR [ecx+0x529ce773],bh
  41ab2a:	stos   BYTE PTR es:[edi],al
  41ab2b:	add    al,0xcc
  41ab2d:	sub    al,0x7c
  41ab2f:	and    eax,0x6504fed0
  41ab34:	push   ecx
  41ab35:	das    
  41ab36:	push   ds
  41ab37:	add    bh,al
  41ab39:	lock test DWORD PTR [ebp+0x388978e9],ebp
  41ab40:	daa    
  41ab41:	test   al,0x2c
  41ab43:	xor    al,0xd
  41ab45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab46:	aam    0xc8
  41ab48:	std    
  41ab49:	ret    
  41ab4a:	repz (bad) 
  41ab4c:	jbe    0x41ab85
  41ab4e:	hlt    
  41ab4f:	stos   DWORD PTR es:[edi],eax
  41ab50:	xlat   BYTE PTR ds:[ebx]
  41ab51:	and    al,0x2e
  41ab53:	mov    esi,0x749ba19c
  41ab58:	jnp    0x41ab4b
  41ab5a:	in     al,dx
  41ab5b:	rcr    DWORD PTR ds:[esi+0x6b],0xef
  41ab60:	aas    
  41ab61:	call   0x1640:0x473cb894
  41ab68:	and    eax,0x596ce578
  41ab6d:	xchg   edi,eax
  41ab6e:	arpl   WORD PTR [eax+ecx*8],dx
  41ab71:	xchg   edx,eax
  41ab72:	mov    edx,esp
  41ab74:	push   ebp
  41ab75:	mov    esp,0xa3c3e8de
  41ab7a:	fwait
  41ab7b:	icebp  
  41ab7c:	test   eax,0xe7c9ee33
  41ab81:	les    esi,FWORD PTR [ecx+0x54]
  41ab84:	add    edi,DWORD PTR [eax]
  41ab86:	push   es
  41ab87:	test   BYTE PTR [esi+0x7c],bh
  41ab8a:	lock mov bl,ah
  41ab8d:	mov    ah,0xb3
  41ab8f:	mov    ah,0x37
  41ab91:	in     eax,dx
  41ab92:	daa    
  41ab93:	pop    esp
  41ab94:	xchg   ebp,eax
  41ab95:	clc    
  41ab96:	mov    eax,0xce441fb8
  41ab9b:	rcl    BYTE PTR [edx-0x10],1
  41ab9e:	repnz mov ebx,0xbbed395d
  41aba4:	pop    ss
  41aba5:	enter  0x9308,0x35
  41aba9:	cmc    
  41abaa:	fxch   st(7)
  41abac:	mov    dh,0xab
  41abae:	idiv   BYTE PTR [esi-0x64]
  41abb1:	bound  edx,QWORD PTR [edi+ebx*2]
  41abb4:	pop    ebx
  41abb5:	mov    ebx,0xed3d4490
  41abba:	stc    
  41abbb:	scas   eax,DWORD PTR es:[edi]
  41abbc:	or     eax,0xbf60e78f
  41abc1:	xor    DWORD PTR [esi+0x19],ebp
  41abc4:	inc    ebp
  41abc5:	jp     0x41ab5b
  41abc7:	and    eax,0x696dac9f
  41abcc:	outs   dx,DWORD PTR ds:[esi]
  41abcd:	data16 sbb bh,BYTE PTR [ebp+0x25c7b7e0]
  41abd4:	mov    cl,0xa2
  41abd6:	imul   ebx,DWORD PTR [edi-0x2e5e9a6e],0x681b4a96
  41abe0:	push   es
  41abe1:	jae    0x41abfa
  41abe3:	adc    esp,DWORD PTR [ecx-0x1d]
  41abe6:	xlat   BYTE PTR ds:[ebx]
  41abe7:	jns    0x41ab87
  41abe9:	into   
  41abea:	inc    edx
  41abeb:	loopne 0x41ac1c
  41abed:	jb     0x41ab97
  41abef:	and    eax,0xe10ef06
  41abf4:	cdq    
  41abf5:	inc    ebx
  41abf6:	fisubr WORD PTR [eax+0x7]
  41abf9:	mov    BYTE PTR [esi-0x54fe0a26],dh
  41abff:	loop   0x41abf4
  41ac01:	cwde   
  41ac02:	jmp    0x1f73e75d
  41ac07:	or     al,BYTE PTR [ebp+0x28e93b4]
  41ac0d:	add    eax,0x388727d2
  41ac12:	rcl    dl,1
  41ac14:	ret    0xcbf0
  41ac17:	pop    ebp
  41ac18:	or     DWORD PTR [eax],edi
  41ac1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac1b:	in     al,0xa1
  41ac1d:	sub    ecx,DWORD PTR [edi+0x26cb9d85]
  41ac23:	enter  0xfbb7,0xe4
  41ac27:	mov    eax,ds:0xa2359619
  41ac2c:	test   DWORD PTR [esp+ecx*2-0x6d22debb],ecx
  41ac33:	add    eax,0xfa182c7b
  41ac38:	add    ch,BYTE PTR ds:0xf891a075
  41ac3e:	fcmovnb st,st(7)
  41ac40:	scas   eax,DWORD PTR es:[edi]
  41ac41:	fisub  DWORD PTR [ecx+ecx*1]
  41ac44:	(bad)  
  41ac45:	int    0x9f
  41ac47:	or     ebx,DWORD PTR [ebx]
  41ac49:	cmc    
  41ac4a:	ret    0x7769
  41ac4d:	push   es
  41ac4e:	(bad)  
  41ac4f:	adc    bh,cl
  41ac51:	hlt    
  41ac52:	retf   0xfd74
  41ac55:	nop
  41ac56:	xchg   ebp,eax
  41ac57:	add    eax,0xeaf13f9e
  41ac5c:	enter  0xa5c1,0xb3
  41ac60:	pop    eax
  41ac61:	test   al,0x96
  41ac63:	jb     0x41ac3e
  41ac65:	mov    WORD PTR ds:0x6e39ffad,fs
  41ac6b:	mov    al,0xc
  41ac6d:	mov    WORD PTR [esi-0x55],?
  41ac70:	aam    0x5e
  41ac72:	xchg   edi,eax
  41ac73:	in     eax,0x4a
  41ac75:	xchg   ebx,eax
  41ac76:	mov    edi,0x7064b3d5
  41ac7b:	mov    ds:0xe9019176,al
  41ac80:	(bad)  
  41ac82:	mov    ebp,0xca4dc0c7
  41ac87:	dec    edi
  41ac88:	fs push esi
  41ac8a:	cwde   
  41ac8b:	mov    al,0xea
  41ac8d:	(bad)  
  41ac8e:	add    ah,ch
  41ac90:	clc    
  41ac91:	lock xor eax,0x30fbde56
  41ac97:	fld    QWORD PTR [edi-0x5]
  41ac9a:	fsub   st(7),st
  41ac9c:	xchg   ebx,eax
  41ac9d:	retf   0xccd0
  41aca0:	out    0x20,eax
  41aca2:	das    
  41aca3:	push   ebx
  41aca4:	push   es
  41aca5:	(bad)  
  41aca6:	mov    eax,0x3e14ebdb
  41acab:	jo     0x41aca4
  41acad:	shl    BYTE PTR [ebx-0x4ccafc56],cl
  41acb3:	pop    ebp
  41acb4:	or     DWORD PTR [ebx+0x7f19637e],0x5c
  41acbb:	dec    ecx
  41acbc:	enter  0x8125,0x1b
  41acc0:	imul   esi,DWORD PTR [ecx],0x34c60782
  41acc6:	adc    bh,BYTE PTR [edi-0x7a863960]
  41accc:	mov    ebx,DWORD PTR [edx]
  41acce:	aaa    
  41accf:	mov    al,ds:0x4764c402
  41acd4:	xor    ah,bh
  41acd6:	jne    0x41ac9a
  41acd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41acd9:	sub    DWORD PTR [ecx],eax
  41acdb:	adc    DWORD PTR [edx],esi
  41acdd:	les    esp,FWORD PTR [edx]
  41acdf:	adc    DWORD PTR [ecx+0x2bb6c628],esp
  41ace5:	pop    edx
  41ace6:	push   es
  41ace7:	ficomp WORD PTR [esi]
  41ace9:	mov    eax,0x4c4c204d
  41acee:	cmp    dl,al
  41acf0:	sbb    eax,0x274e1718
  41acf5:	stos   BYTE PTR es:[edi],al
  41acf6:	scas   al,BYTE PTR es:[edi]
  41acf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41acf8:	dec    ebx
  41acf9:	push   eax
  41acfa:	mov    cl,0x57
  41acfc:	xlat   BYTE PTR ds:[ebx]
  41acfd:	rol    DWORD PTR [edi],0x1a
  41ad00:	fisubr WORD PTR [esi+eiz*8+0x4a62260a]
  41ad07:	iret   
  41ad08:	neg    DWORD PTR [ecx-0x45]
  41ad0b:	data16 mov bh,0x94
  41ad0e:	cmp    BYTE PTR [edi],ah
  41ad10:	dec    edi
  41ad11:	sbb    al,BYTE PTR [eax]
  41ad13:	rcr    DWORD PTR [eax],cl
  41ad15:	in     eax,0xe7
  41ad17:	addr16 jp 0x41ace3
  41ad1a:	adc    BYTE PTR [edi],dl
  41ad1c:	in     eax,dx
  41ad1d:	xchg   esi,eax
  41ad1e:	test   edx,ecx
  41ad20:	xor    eax,0x2072d0ca
  41ad25:	fcomp  DWORD PTR [eax+edx*8+0x2518a7e2]
  41ad2c:	pop    ds
  41ad2d:	xor    eax,0x4f91aa1b
  41ad32:	jo     0x41acfa
  41ad34:	test   DWORD PTR [ebx-0x7907c93],ecx
  41ad3a:	jg     0x41ad95
  41ad3c:	push   ss
  41ad3d:	(bad)  
  41ad3e:	mov    ah,0x4a
  41ad40:	test   DWORD PTR [ebx+0x2c],eax
  41ad43:	loopne 0x41aceb
  41ad45:	xlat   BYTE PTR ds:[ebx]
  41ad46:	sbb    BYTE PTR [esi+0x5c4492da],cl
  41ad4c:	xchg   esi,eax
  41ad4d:	mov    ?,WORD PTR [edx]
  41ad4f:	mov    BYTE PTR [edi+0x1b64e6e7],bl
  41ad55:	fldenv [esp+edx*4]
  41ad58:	add    DWORD PTR [edx],esi
  41ad5a:	in     eax,dx
  41ad5b:	mov    WORD PTR [ebx+0x30c4c010],cs
  41ad61:	push   edi
  41ad62:	shl    dh,cl
  41ad64:	iret   
  41ad65:	push   edx
  41ad66:	(bad)  
  41ad67:	out    0xfa,al
  41ad69:	stos   DWORD PTR es:[edi],eax
  41ad6a:	icebp  
  41ad6b:	add    edx,DWORD PTR [esi+0x3a]
  41ad6e:	call   0x68dd:0xb72a3177
  41ad75:	mov    ah,0x7c
  41ad77:	xor    al,0x7b
  41ad79:	or     dl,BYTE PTR [edx+0x3f]
  41ad7c:	pop    ds
  41ad7d:	aam    0x1d
  41ad7f:	push   ebx
  41ad80:	stos   DWORD PTR es:[edi],eax
  41ad81:	data16 std 
  41ad83:	data16 lods al,BYTE PTR ds:[esi]
  41ad85:	inc    ebx
  41ad86:	sbb    BYTE PTR [edx-0x2b6b155e],cl
  41ad8c:	push   es
  41ad8d:	or     BYTE PTR [ebx+0x49],ch
  41ad90:	mov    al,ds:0x82f427b3
  41ad95:	ins    DWORD PTR es:[edi],dx
  41ad96:	enter  0x93db,0x26
  41ad9a:	leave  
  41ad9b:	and    edi,DWORD PTR ds:0xb7344f3a
  41ada1:	sbb    esi,DWORD PTR [esi+0x4e36891d]
  41ada7:	shl    bh,cl
  41ada9:	mov    bh,0xed
  41adab:	push   ebx
  41adac:	mov    ch,0x9b
  41adae:	(bad)  
  41adaf:	outs   dx,BYTE PTR ds:[esi]
  41adb0:	rdmsr  
  41adb2:	(bad)  
  41adb3:	jmp    0x41ad8c
  41adb5:	aad    0xbf
  41adb7:	sub    BYTE PTR [ecx-0x64],0xc6
  41adbb:	mov    ds:0xc09f0416,al
  41adc0:	jno    0x41ad62
  41adc2:	out    0xc7,al
  41adc4:	xchg   BYTE PTR [edi+eiz*4],ah
  41adc7:	repnz sbb DWORD PTR [edi-0x7a0af1dc],edx
  41adce:	jb     0x41adb2
  41add0:	ret    0xd588
  41add3:	xor    eax,0x75e2e3da
  41add8:	loopne 0x41adcd
  41adda:	shr    BYTE PTR [ecx-0x1ba0db04],0xb0
  41ade1:	xor    ecx,DWORD PTR [ebx]
  41ade3:	in     eax,0x40
  41ade5:	stc    
  41ade6:	mov    BYTE PTR [ebx],ah
  41ade8:	xlat   BYTE PTR ds:[ebx]
  41ade9:	push   cs
  41adea:	aad    0x15
  41adec:	mov    edi,0xf042708c
  41adf1:	pop    esi
  41adf2:	loope  0x41ae62
  41adf4:	mov    ebx,ebp
  41adf6:	dec    eax
  41adf7:	or     esp,DWORD PTR ds:0xda47d646
  41adfd:	outs   dx,DWORD PTR ds:[esi]
  41adfe:	push   ebp
  41adff:	ins    DWORD PTR es:[edi],dx
  41ae00:	mov    al,0x85
  41ae02:	jge    0x41ae62
  41ae04:	xchg   ecx,eax
  41ae05:	sub    eax,0x7b90f0a9
  41ae0a:	adc    esp,DWORD PTR [ebx-0x5f]
  41ae0d:	sahf   
  41ae0e:	leave  
  41ae0f:	repz test DWORD PTR [esi+0x7],esp
  41ae13:	mov    edx,ss
  41ae15:	addr16 inc ah
  41ae18:	data16 lods al,BYTE PTR ds:[esi]
  41ae1a:	mov    bh,0xba
  41ae1c:	jb     0x41adfd
  41ae1e:	pusha  
  41ae1f:	loopne 0x41ae36
  41ae21:	add    DWORD PTR [ebp+0x2cf8a715],0x84368b58
  41ae2b:	in     al,dx
  41ae2c:	out    0x88,eax
  41ae2e:	enter  0xb80,0xc5
  41ae32:	fs cwde 
  41ae34:	test   BYTE PTR [edi],al
  41ae36:	add    dh,bh
  41ae38:	pop    esp
  41ae39:	push   ds
  41ae3a:	(bad)  
  41ae3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae3c:	dec    edx
  41ae3d:	mul    BYTE PTR [ebx-0x35789339]
  41ae43:	ins    DWORD PTR es:[edi],dx
  41ae44:	shr    BYTE PTR [eax],1
  41ae46:	int    0xa7
  41ae48:	cmp    DWORD PTR [ecx-0x6a],0x6a
  41ae4c:	or     BYTE PTR [edx],dh
  41ae4e:	or     dh,0x82
  41ae51:	mov    al,0x7d
  41ae53:	adc    al,0x4e
  41ae55:	add    eax,0xc19bbae3
  41ae5a:	mov    dl,0x87
  41ae5c:	sbb    ebx,edi
  41ae5e:	add    cl,BYTE PTR [ebx+ebp*4+0x1db65c64]
  41ae65:	loop   0x41ae12
  41ae67:	sub    dl,BYTE PTR [ebx+0x73]
  41ae6a:	call   0x7d226d19
  41ae6f:	cmp    edx,eax
  41ae71:	mov    bh,0xb3
  41ae73:	hlt    
  41ae74:	ror    BYTE PTR es:[esi-0x4d],0x4f
  41ae79:	addr16 test al,0x51
  41ae7c:	push   esp
  41ae7d:	cmpps  xmm5,xmm3,0xbc
  41ae81:	int    0x93
  41ae83:	and    eax,0xc84b0cb2
  41ae88:	sub    BYTE PTR [ecx-0x4c50ebf6],dl
  41ae8e:	mov    ch,0xc3
  41ae90:	mov    eax,ds:0xe6fcf4fa
  41ae95:	fimul  DWORD PTR [ecx]
  41ae97:	xor    BYTE PTR [esi],cl
  41ae99:	je     0x41aec7
  41ae9b:	lds    ecx,FWORD PTR [ebx]
  41ae9d:	mov    cs,WORD PTR [ebp+0x66]
  41aea0:	data16 outs dx,BYTE PTR ds:[esi]
  41aea2:	inc    esp
  41aea3:	cmp    edi,0xbe7f3f45
  41aea9:	jp     0x41aeb2
  41aeab:	inc    esp
  41aeac:	push   esi
  41aead:	out    0xf7,eax
  41aeaf:	sbb    ebp,esi
  41aeb1:	jbe    0x41ae5e
  41aeb3:	inc    esp
  41aeb4:	inc    esp
  41aeb5:	xor    al,0x2d
  41aeb7:	imul   esp,DWORD PTR [ebx-0x47],0xffffffbb
  41aebb:	add    esi,edi
  41aebd:	pop    eax
  41aebe:	mov    dl,0x2
  41aec0:	outs   dx,DWORD PTR ds:[esi]
  41aec1:	jns    0x41af33
  41aec3:	xor    eax,0xa10c73cd
  41aec8:	test   eax,0xcad8c723
  41aecd:	pop    ss
  41aece:	cdq    
  41aecf:	in     eax,0x81
  41aed1:	clc    
  41aed2:	xchg   ch,bh
  41aed4:	(bad)  
  41aed6:	stos   DWORD PTR es:[edi],eax
  41aed7:	js     0x41af0b
  41aed9:	push   esp
  41aeda:	and    DWORD PTR [ebx+ecx*4],esi
  41aedd:	mov    ecx,0xbcf33af7
  41aee2:	dec    esp
  41aee3:	mov    bl,0xd3
  41aee5:	fwait
  41aee6:	aaa    
  41aee7:	sub    al,dl
  41aee9:	sbb    cl,BYTE PTR [ecx+eiz*8+0x557f7b41]
  41aef0:	inc    ebx
  41aef1:	cmp    al,0x8c
  41aef3:	ins    DWORD PTR es:[edi],dx
  41aef4:	(bad)  
  41aef5:	mov    ebx,0xc1790b70
  41aefa:	icebp  
  41aefb:	rcr    ah,1
  41aefd:	pop    ss
  41aefe:	dec    edi
  41aeff:	je     0x41aef0
  41af01:	push   ecx
  41af02:	addr16 loope 0x41aef0
  41af05:	sahf   
  41af06:	test   eax,0x78c4e40d
  41af0b:	jns    0x41af84
  41af0d:	sbb    BYTE PTR [eax-0x10],bl
  41af10:	stos   DWORD PTR es:[edi],eax
  41af11:	inc    ecx
  41af12:	popa   
  41af13:	popa   
  41af14:	dec    edx
  41af15:	(bad)  
  41af16:	imul   ecx,esp,0xd4b41c64
  41af1c:	aam    0xc1
  41af1e:	pop    es
  41af1f:	cmp    cl,BYTE PTR [esi+edi*8+0x3e7e1e5]
  41af26:	gs xor al,0x7
  41af29:	imul   eax,DWORD PTR [ebp+0x2e3fff30],0x3a9568c2
  41af33:	fist   DWORD PTR [ebp-0x11]
  41af36:	js     0x41af05
  41af38:	jp     0x41aecf
  41af3a:	(bad)  
  41af3b:	(bad)  
  41af3c:	push   0x11
  41af3e:	jns    0x41af55
  41af40:	imul   ebp,eax,0x16cedb3e
  41af46:	add    edx,eax
  41af48:	jne    0x41aef9
  41af4a:	bswap  ecx
  41af4c:	xchg   esi,eax
  41af4d:	mov    ecx,0xdfefd947
  41af52:	inc    edx
  41af53:	je     0x41af00
  41af55:	cwde   
  41af56:	adc    ah,BYTE PTR ss:[eax+0x10]
  41af5a:	(bad)  
  41af5b:	cmp    al,0xc2
  41af5d:	cdq    
  41af5e:	push   0xffffffc5
  41af60:	call   0x611a:0x2668872d
  41af67:	mov    esp,0x8cc8f29f
  41af6c:	mov    eax,ss:0x883edcd4
  41af72:	xlat   BYTE PTR ds:[ebx]
  41af73:	jnp    0x41af0e
  41af75:	jo     0x41af19
  41af77:	cdq    
  41af78:	mov    edx,0x2baaf2cf
  41af7d:	cli    
  41af7e:	retf   0x6688
  41af81:	cmp    al,0x97
  41af83:	dec    ebx
  41af84:	xchg   edi,eax
  41af85:	push   eax
  41af86:	retf   
  41af87:	xlat   BYTE PTR ds:[ebx]
  41af88:	sbb    esi,DWORD PTR [edx-0x1f34009]
  41af8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af8f:	pop    edx
  41af90:	popf   
  41af91:	inc    edi
  41af92:	push   cs
  41af93:	pushf  
  41af94:	stc    
  41af95:	push   eax
  41af96:	jge    0x41af97
  41af98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af99:	adc    DWORD PTR [ebp+0x69],eax
  41af9c:	in     al,0xa8
  41af9e:	fcom   QWORD PTR [ecx]
  41afa0:	mov    dl,BYTE PTR ds:0x655c6132
  41afa6:	outs   dx,BYTE PTR ds:[esi]
  41afa7:	test   dh,bl
  41afa9:	add    al,0x6f
  41afab:	out    dx,al
  41afac:	add    BYTE PTR [ebp-0x26b84eff],0xdd
  41afb3:	mov    al,0x5d
  41afb5:	jne    0x41af65
  41afb7:	test   esp,eax
  41afb9:	xor    DWORD PTR [ebx+0x4d],eax
  41afbc:	inc    eax
  41afbd:	adc    eax,edi
  41afbf:	inc    ebp
  41afc0:	fstp   st(2)
  41afc2:	mov    ecx,0x579a9f2a
  41afc7:	mov    eax,0xb86a7267
  41afcc:	adc    ecx,eax
  41afce:	std    
  41afcf:	sub    ch,BYTE PTR [ebx-0x41605fa9]
  41afd5:	popf   
  41afd6:	(bad)  
  41afd7:	mov    bh,0xf3
  41afd9:	mov    bh,0xe
  41afdb:	pop    edi
  41afdc:	imul   esi,DWORD PTR [ecx-0x1e],0xb18ef264
  41afe3:	dec    edi
  41afe4:	sti    
  41afe5:	lahf   
  41afe6:	in     al,0x16
  41afe8:	mov    dh,0xc
  41afea:	lods   eax,DWORD PTR ds:[esi]
  41afeb:	fprem1 
  41afed:	repz cs and al,0xc0
  41aff1:	or     eax,0xc9d511fc
  41aff6:	mov    gs,WORD PTR [ecx+0x2d4a9dc0]
  41affc:	call   0xf0905ece
  41b001:	lea    ebx,[eax+0x46]
  41b004:	xchg   BYTE PTR [esi-0x6b],ah
  41b007:	jge    0x41b06f
  41b009:	or     eax,0xad1b1569
  41b00e:	(bad)  
  41b00f:	xchg   edi,eax
  41b010:	add    eax,0xa86da9
  41b015:	sbb    al,0x95
  41b017:	cmp    esp,ecx
  41b019:	(bad)  
  41b01a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b01b:	aaa    
  41b01c:	(bad)  
  41b01e:	fs xchg ecx,eax
  41b020:	outs   dx,DWORD PTR ds:[esi]
  41b021:	add    BYTE PTR [esi+ecx*4+0x21be4e92],0xb1
  41b029:	mov    edx,0x57c643cb
  41b02e:	not    BYTE PTR [edi+0x4b]
  41b031:	rcl    DWORD PTR [edi+0x52e2c4],1
  41b037:	ja     0x41b03c
  41b039:	mov    eax,ebx
  41b03b:	jge    0x41afe3
  41b03d:	mov    ebp,0xc35902f8
  41b042:	sbb    dl,BYTE PTR ds:0x169ffe76
  41b048:	cs sub al,0xe
  41b04b:	jg     0x41b077
  41b04d:	pop    es
  41b04e:	fs in  al,0x51
  41b051:	xchg   BYTE PTR [ebx],al
  41b053:	pop    ebp
  41b054:	lahf   
  41b055:	in     eax,dx
  41b056:	sub    eax,0xa401066e
  41b05b:	pusha  
  41b05c:	add    DWORD PTR fs:[edx-0x3d],esi
  41b060:	pop    es
  41b061:	push   ss
  41b062:	jnp    0x41b003
  41b064:	(bad)  
  41b065:	jo     0x41afeb
  41b067:	sbb    esi,0x3b0f8b08
  41b06d:	xor    ecx,ebx
  41b06f:	cs in  eax,0x32
  41b072:	xor    BYTE PTR [esi+0x5c],dh
  41b075:	and    ch,BYTE PTR [edi]
  41b077:	push   0x42
  41b079:	hlt    
  41b07a:	lods   al,BYTE PTR ds:[esi]
  41b07b:	mov    edx,0x9e766bdc
  41b080:	lock mov ss,WORD PTR [edi-0x5b]
  41b084:	jl     0x41b06e
  41b086:	xor    dh,BYTE PTR ds:0x96aab191
  41b08c:	cmp    ebp,0x34
  41b08f:	push   ebx
  41b090:	pusha  
  41b091:	add    eax,DWORD PTR [ebx]
  41b093:	add    BYTE PTR [ebx],ah
  41b095:	cld    
  41b096:	and    ebp,DWORD PTR [esi-0x64]
  41b099:	sub    al,0x20
  41b09b:	jno    0x41b080
  41b09d:	int3   
  41b09e:	xor    al,0x73
  41b0a0:	dec    esp
  41b0a1:	js     0x41b056
  41b0a3:	add    ch,ah
  41b0a5:	call   0x948699fa
  41b0aa:	inc    ecx
  41b0ab:	mov    ah,0xc2
  41b0ad:	or     DWORD PTR [esi-0x37480bdc],eax
  41b0b3:	inc    esp
  41b0b4:	inc    edx
  41b0b5:	dec    edi
  41b0b6:	test   BYTE PTR [edi],cl
  41b0b8:	jne    0x41b0cd
  41b0ba:	in     al,dx
  41b0bb:	fs jno 0x41b040
  41b0be:	mov    ds:0xa8f906c1,al
  41b0c3:	inc    eax
  41b0c4:	clc    
  41b0c5:	mov    bh,0x29
  41b0c7:	cmp    dl,dl
  41b0c9:	aas    
  41b0ca:	retf   0x7056
  41b0cd:	sar    DWORD PTR [ebp+0x29],cl
  41b0d0:	dec    ecx
  41b0d1:	sbb    eax,0x3483e830
  41b0d6:	outs   dx,DWORD PTR ds:[esi]
  41b0d7:	and    BYTE PTR [ebx+ebx*1],cl
  41b0da:	iret   
  41b0db:	fwait
  41b0dc:	add    cl,bh
  41b0de:	adc    cl,bh
  41b0e0:	mov    DWORD PTR [edx],edx
  41b0e2:	cmp    BYTE PTR [ebx-0x56],bh
  41b0e5:	rol    BYTE PTR [esi-0x5d],0xf0
  41b0e9:	push   esp
  41b0ea:	stos   DWORD PTR es:[edi],eax
  41b0eb:	test   eax,0x832df65a
  41b0f0:	out    0xbb,al
  41b0f2:	jae    0x41b08b
  41b0f4:	repnz div ebx
  41b0f7:	sbb    bh,dl
  41b0f9:	scas   eax,DWORD PTR es:[edi]
  41b0fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b0fb:	and    al,cl
  41b0fd:	idiv   ch
  41b0ff:	les    esi,FWORD PTR [ebx]
  41b101:	in     al,dx
  41b102:	push   eax
  41b103:	js     0x41b0e7
  41b105:	mov    edi,0xb2f9a15e
  41b10a:	mov    eax,ds:0x1b2cb5b2
  41b10f:	mov    edi,0x377a8afa
  41b114:	fdivp  st(2),st
  41b116:	dec    ebx
  41b117:	pop    ss
  41b118:	sti    
  41b119:	stos   DWORD PTR es:[edi],eax
  41b11a:	mov    edi,0xa8c060e8
  41b11f:	out    0xd8,al
  41b121:	mov    bl,0xc
  41b123:	iret   
  41b124:	arpl   cx,bp
  41b126:	xor    al,0x53
  41b128:	cmp    eax,0xab12d901
  41b12d:	dec    ebp
  41b12e:	jae    0x41b107
  41b130:	shr    BYTE PTR ds:0xd3d53aca,0xd4
  41b137:	repnz add al,0xca
  41b13a:	call   0xc5e:0xc73176d4
  41b141:	js     0x41b167
  41b143:	xchg   esi,eax
  41b144:	in     al,0x70
  41b146:	daa    
  41b147:	scas   al,BYTE PTR es:[edi]
  41b148:	or     BYTE PTR [ecx],0x71
  41b14b:	inc    ebx
  41b14c:	push   ds
  41b14d:	nop
  41b14e:	inc    esp
  41b14f:	and    DWORD PTR gs:[edi+0x33a29e21],ebx
  41b156:	sbb    BYTE PTR [edi],0xdf
  41b159:	mov    ebx,0xc4c5aed4
  41b15e:	lds    ecx,FWORD PTR [ecx]
  41b160:	jo     0x41b168
  41b162:	add    esi,DWORD PTR [ebx]
  41b164:	or     al,0x4c
  41b166:	out    dx,eax
  41b167:	pop    ebp
  41b168:	xchg   edi,eax
  41b169:	inc    ebx
  41b16a:	loop   0x41b19e
  41b16c:	and    al,0xd7
  41b16e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b16f:	(bad)  
  41b171:	repnz sbb al,0x56
  41b174:	dec    ebp
  41b175:	fwait
  41b176:	add    dh,ch
  41b178:	std    
  41b179:	pop    eax
  41b17a:	lods   eax,DWORD PTR ds:[esi]
  41b17b:	mov    al,0xdd
  41b17d:	retf   0x39c
  41b180:	(bad)  
  41b181:	and    eax,DWORD PTR [eax-0x34]
  41b184:	add    eax,0x6b0e8144
  41b189:	cmp    BYTE PTR [esi-0x3ed5ed8c],0xf7
  41b190:	and    ebp,edx
  41b192:	in     eax,dx
  41b193:	pop    ds
  41b194:	retf   
  41b195:	lea    ebp,[ebp+0x76]
  41b198:	add    DWORD PTR [ecx],edi
  41b19a:	inc    ecx
  41b19b:	test   ebx,ebp
  41b19d:	inc    DWORD PTR [ebp-0x27744d08]
  41b1a3:	push   eax
  41b1a4:	call   0x6907fc42
  41b1a9:	inc    ebp
  41b1aa:	add    ch,BYTE PTR [ecx+esi*1+0x1dde3ca4]
  41b1b1:	mov    esp,0x7d31bf9b
  41b1b6:	inc    edi
  41b1b7:	inc    esi
  41b1b8:	cmp    DWORD PTR [esp+ebp*4+0x239777df],ecx
  41b1bf:	pop    ecx
  41b1c0:	test   DWORD PTR [ecx],0xc157d373
  41b1c6:	add    ch,ah
  41b1c8:	inc    ebp
  41b1c9:	mov    edx,0x53a86b85
  41b1cf:	cli    
  41b1d0:	pop    ecx
  41b1d1:	test   BYTE PTR [edx-0x12],bl
  41b1d4:	or     ebp,DWORD PTR [ecx+eax*1+0x91cdba5]
  41b1db:	scas   eax,DWORD PTR es:[edi]
  41b1dc:	ss retf 
  41b1de:	call   0xb71c:0x2caee4e1
  41b1e5:	or     ecx,esp
  41b1e7:	mul    ch
  41b1e9:	dec    ebx
  41b1ea:	mov    esp,0xcf6cbd4f
  41b1ef:	jno    0x41b229
  41b1f1:	stc    
  41b1f2:	inc    eax
  41b1f3:	(bad)
  41b1f7:	loope  0x41b19d
  41b1f9:	fisub  DWORD PTR [esi+ebx*4-0x4]
  41b1fd:	out    0x47,eax
  41b1ff:	into   
  41b200:	rol    edx,cl
  41b202:	enter  0x8127,0x5c
  41b206:	out    dx,eax
  41b207:	mov    ch,BYTE PTR [esi]
  41b209:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b20a:	dec    ecx
  41b20b:	add    dl,BYTE PTR [eax]
  41b20d:	enter  0xc00a,0x72
  41b211:	stc    
  41b212:	sbb    al,0x67
  41b214:	ror    DWORD PTR [ebx-0x7d],1
  41b217:	shl    BYTE PTR ds:0x51cd47d7,1
  41b21d:	mov    esp,0x7b9fc9d7
  41b223:	xor    BYTE PTR [eax+edx*8-0x69],bl
  41b227:	int3   
  41b228:	test   DWORD PTR es:[ecx],ecx
  41b22b:	loopne 0x41b200
  41b22d:	jmp    0x5762:0x750a3b8
  41b234:	xchg   esp,eax
  41b235:	lds    ebx,FWORD PTR [edx-0x699c3609]
  41b23b:	xchg   esp,eax
  41b23c:	add    eax,0xdb392bca
  41b241:	jl     0x41b22e
  41b243:	xchg   esp,eax
  41b244:	cli    
  41b245:	xor    al,0xaa
  41b247:	xchg   BYTE PTR [edi-0x6589e428],dh
  41b24d:	or     BYTE PTR [esi-0x1f32d067],0xd6
  41b254:	pusha  
  41b255:	lock xchg ebp,eax
  41b257:	pop    esi
  41b258:	push   0x1c30d4f9
  41b25d:	add    ah,BYTE PTR [ebx+0x2e]
  41b260:	fmul   DWORD PTR [eax]
  41b262:	cmp    edi,DWORD PTR ds:0x301c808d
  41b268:	mov    ebx,0x60799c0e
  41b26d:	push   ecx
  41b26e:	in     al,dx
  41b26f:	xor    DWORD PTR [edi+ecx*1-0x1e],ecx
  41b273:	retf   0x49c1
  41b276:	push   eax
  41b277:	out    dx,al
  41b278:	mov    ds:0x6e1a1053,al
  41b27d:	aam    0x35
  41b27f:	mov    cl,0xda
  41b281:	sbb    bl,al
  41b283:	add    eax,0x5ae58165
  41b288:	pushf  
  41b289:	dec    ebx
  41b28a:	cmp    DWORD PTR [edx-0x5a],edx
  41b28d:	rcr    BYTE PTR [ebx+0x635f2aec],0xde
  41b294:	aad    0x79
  41b296:	pop    edx
  41b297:	mov    ecx,0x1d49ea33
  41b29c:	enter  0xce3e,0x9f
  41b2a0:	dec    DWORD PTR [edx-0x45471eb3]
  41b2a6:	jnp    0x41b2b2
  41b2a8:	dec    ebx
  41b2a9:	mov    ds:0xeb41450d,al
  41b2ae:	adc    ch,0xd2
  41b2b1:	push   eax
  41b2b2:	inc    edi
  41b2b3:	arpl   WORD PTR [ecx+0x5],di
  41b2b6:	jno    0x41b321
  41b2b8:	aam    0x8
  41b2ba:	fwait
  41b2bb:	pop    ss
  41b2bc:	jecxz  0x41b262
  41b2be:	push   esp
  41b2bf:	adc    eax,0xee02e0a3
  41b2c4:	sub    ah,ch
  41b2c6:	xor    dh,BYTE PTR [esi]
  41b2c8:	lds    edi,FWORD PTR [edi]
  41b2ca:	xor    al,0x1c
  41b2cc:	aas    
  41b2cd:	ret    0x513a
  41b2d0:	scas   eax,DWORD PTR es:[edi]
  41b2d1:	sar    DWORD PTR [edi],0x63
  41b2d4:	push   esp
  41b2d5:	push   esi
  41b2d6:	sub    dh,cl
  41b2d8:	pop    edx
  41b2d9:	lahf   
  41b2da:	popa   
  41b2db:	imul   esp,DWORD PTR [ebx-0x5bb94861],0x4d
  41b2e2:	pop    ebp
  41b2e3:	shr    DWORD PTR [ebx+0x52],1
  41b2e6:	mov    bh,0xd8
  41b2e8:	test   eax,0x257bf082
  41b2ed:	call   0x59a9:0xabb73a71
  41b2f4:	pop    ebx
  41b2f5:	mov    BYTE PTR ds:0xc8652cdd,ah
  41b2fb:	ja     0x41b326
  41b2fd:	and    BYTE PTR [ebp-0x225fb73c],ch
  41b303:	jae    0x41b286
  41b305:	sbb    dh,ah
  41b307:	sbb    esi,esp
  41b309:	xchg   edx,eax
  41b30a:	call   0x980e:0xf5970da7
  41b311:	cmp    edi,DWORD PTR [edi+0x65]
  41b314:	push   es
  41b315:	enter  0x77cd,0x41
  41b319:	clc    
  41b31a:	and    ebp,DWORD PTR [ebx-0x43]
  41b31d:	int    0xbe
  41b31f:	cmp    eax,DWORD PTR gs:[di+0x5779]
  41b325:	jae    0x41b330
  41b327:	sbb    DWORD PTR [ebp+edi*4-0x31],esp
  41b32b:	pusha  
  41b32c:	add    BYTE PTR ds:0xfba632ad,cl
  41b332:	(bad)
  41b335:	jns    0x41b2f4
  41b337:	add    esp,edi
  41b339:	inc    edi
  41b33a:	sahf   
  41b33b:	shr    BYTE PTR [edx-0x66],cl
  41b33e:	sub    al,dh
  41b340:	mov    esi,0xadbcf06d
  41b345:	enter  0xac32,0x65
  41b349:	or     DWORD PTR [esi+0x61],eax
  41b34c:	mov    ecx,?
  41b34e:	cld    
  41b34f:	aaa    
  41b350:	inc    eax
  41b351:	jo     0x41b3c0
  41b353:	lods   al,BYTE PTR ds:[esi]
  41b354:	or     esp,DWORD PTR [ebx-0x1c]
  41b357:	mov    dl,0xe0
  41b359:	shl    ebx,1
  41b35b:	xchg   esp,eax
  41b35c:	inc    BYTE PTR [eax-0x1458958]
  41b362:	push   eax
  41b363:	jmp    0xf73c:0x7c1fed59
  41b36a:	pusha  
  41b36b:	cmp    ch,dl
  41b36d:	stos   DWORD PTR es:[edi],eax
  41b36e:	mov    al,ds:0xe5bbeb1f
  41b373:	add    ecx,esp
  41b375:	inc    esp
  41b376:	add    ch,BYTE PTR [ecx]
  41b378:	cs jo  0x41b397
  41b37b:	jg     0x41b30a
  41b37d:	loopne 0x41b3eb
  41b37f:	adc    al,0xaa
  41b381:	jnp    0x41b39d
  41b383:	out    0xd4,al
  41b385:	int    0xa
  41b387:	fdiv   DWORD PTR [edi+0x488bb7d1]
  41b38d:	sbb    ah,BYTE PTR [ebx+esi*2]
  41b390:	je     0x41b38e
  41b392:	mov    ah,0x2f
  41b394:	mov    edx,fs
  41b396:	mov    esi,0x13239997
  41b39b:	mov    eax,?
  41b39d:	mov    dh,0x5d
  41b39f:	push   0x138595dd
  41b3a4:	jle    0x41b362
  41b3a6:	loop   0x41b3db
  41b3a8:	add    al,0x8
  41b3aa:	dec    ecx
  41b3ab:	dec    esi
  41b3ac:	xrelease xchg DWORD PTR [edi+ebp*1+0x17],ebp
  41b3b1:	sbb    eax,0xf638438c
  41b3b6:	jmp    0x41b3aa
  41b3b8:	fmul   DWORD PTR [esi]
  41b3ba:	or     dl,BYTE PTR [ebx-0x12]
  41b3bd:	mov    al,ds:0x3dc16fa1
  41b3c2:	enter  0x8f03,0x73
  41b3c6:	pop    ebp
  41b3c7:	(bad)  
  41b3c8:	call   0x2205:0xbb59360e
  41b3cf:	pushf  
  41b3d0:	(bad)  
  41b3d1:	popf   
  41b3d2:	or     al,0xc9
  41b3d4:	xor    ebx,0xcf8258e8
  41b3da:	bound  ecx,QWORD PTR [edx-0x30e0f6f]
  41b3e0:	ret    
  41b3e1:	inc    eax
  41b3e2:	out    dx,al
  41b3e3:	add    BYTE PTR [edi+0x35],bh
  41b3e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3e7:	push   ebp
  41b3e8:	fiadd  DWORD PTR ds:[edi+0x5d2272a9]
  41b3ef:	fs jp  0x41b375
  41b3f2:	cmp    BYTE PTR [ebx+0x260537b1],dl
  41b3f8:	xchg   edx,eax
  41b3f9:	xor    dh,ch
  41b3fb:	mov    ebp,0x6e1dde7c
  41b400:	imul   esp,DWORD PTR [ecx-0x7c],0x28
  41b404:	adc    al,0xb0
  41b406:	ret    0x3aab
  41b409:	(bad)  
  41b40a:	repnz push 0x24
  41b40d:	xor    eax,0xb041e562
  41b412:	sub    esp,DWORD PTR [ebp+ebp*8+0x541dba9c]
  41b419:	jle    0x41b3b9
  41b41b:	(bad)  
  41b41d:	inc    eax
  41b41e:	cmp    cx,cx
  41b421:	lea    esi,[edx+ebx*8-0x603f5c44]
  41b428:	or     ecx,DWORD PTR [ecx-0x11]
  41b42b:	inc    esi
  41b42c:	dec    esp
  41b42d:	xchg   DWORD PTR [edi-0xc],esp
  41b430:	xlat   BYTE PTR ds:[ebx]
  41b431:	cs pop ebx
  41b433:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b434:	dec    esi
  41b435:	call   0xad2f:0x50911b4e
  41b43c:	int3   
  41b43d:	mov    eax,ds:0x2412c5d4
  41b442:	mov    ds:0xcd4c9eb2,al
  41b448:	ss pop edx
  41b44a:	inc    ecx
  41b44b:	sbb    eax,0x1be4fd82
  41b450:	and    al,0xc
  41b452:	stos   BYTE PTR es:[edi],al
  41b453:	pop    eax
  41b454:	inc    edx
  41b455:	rcr    edx,cl
  41b457:	mov    bl,0x5a
  41b459:	xor    esi,eax
  41b45b:	das    
  41b45c:	push   es
  41b45d:	push   edi
  41b45e:	iret   
  41b45f:	loop   0x41b471
  41b461:	(bad)  [eax]
  41b463:	cmp    al,0x7
  41b465:	lods   eax,DWORD PTR ds:[esi]
  41b466:	(bad)  
  41b467:	jecxz  0x41b4b7
  41b469:	bound  eax,QWORD PTR [edi-0x4e]
  41b46c:	outs   dx,BYTE PTR ds:[esi]
  41b46d:	fwait
  41b46e:	imul   ebx,DWORD PTR [ebp-0x371ed27],0x26
  41b475:	sbb    al,0x91
  41b477:	test   BYTE PTR [esi+0xf9b097],ch
  41b47d:	push   eax
  41b47e:	out    dx,eax
  41b47f:	xchg   edx,eax
  41b480:	outs   dx,BYTE PTR ds:[esi]
  41b481:	push   0x6c
  41b483:	jmp    0x41b434
  41b485:	loope  0x41b492
  41b487:	bound  ebp,QWORD PTR ds:0xa242275f
  41b48d:	cdq    
  41b48e:	xchg   edx,eax
  41b48f:	xlat   BYTE PTR ds:[ebx]
  41b490:	test   DWORD PTR [edx+0x4d95f64d],ebx
  41b496:	or     edi,esi
  41b498:	ficom  WORD PTR [eax+esi*2]
  41b49b:	fist   DWORD PTR [ebx-0x50]
  41b49e:	test   BYTE PTR [eax-0x54074e57],al
  41b4a4:	xor    ecx,eax
  41b4a6:	hlt    
  41b4a7:	dec    BYTE PTR [edi+0x7]
  41b4aa:	jge    0x41b4c2
  41b4ac:	mov    dl,0x11
  41b4ae:	js     0x41b4a1
  41b4b0:	push   eax
  41b4b1:	mov    dl,0xfd
  41b4b3:	mov    ecx,0x6957f62e
  41b4b8:	sbb    BYTE PTR [edi-0x7f],al
  41b4bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4bc:	shr    BYTE PTR [eax],1
  41b4be:	repnz and eax,0xf3a9606e
  41b4c4:	sbb    cl,BYTE PTR [ebp-0x6c]
  41b4c7:	fbld   TBYTE PTR [edi+0x19fdc47c]
  41b4cd:	push   0xb
  41b4cf:	dec    ecx
  41b4d0:	pop    ecx
  41b4d1:	dec    edx
  41b4d2:	add    DWORD PTR [ebp+0x67],esi
  41b4d5:	sub    BYTE PTR [ecx],al
  41b4d7:	mov    esi,0xaaab4b4
  41b4dc:	inc    edx
  41b4dd:	loope  0x41b4f2
  41b4df:	cld    
  41b4e0:	(bad)  
  41b4e2:	mov    ch,0x84
  41b4e4:	adc    eax,0x1ba16a88
  41b4e9:	mov    bh,0x73
  41b4eb:	repnz mov edx,ebx
  41b4ee:	pop    esp
  41b4ef:	pop    es
  41b4f0:	arpl   WORD PTR [edx+0x1c],di
  41b4f3:	xor    esp,DWORD PTR [edx+0x33eeed0e]
  41b4f9:	div    BYTE PTR [esi]
  41b4fb:	cmp    eax,0x9d631db4
  41b500:	leave  
  41b501:	retf   
  41b502:	mov    esi,0x883ab9f8
  41b507:	adc    ebp,ebx
  41b509:	pop    esi
  41b50a:	mov    cl,0x2
  41b50c:	stos   BYTE PTR es:[edi],al
  41b50d:	mov    fs,WORD PTR [eax+0x51ca706e]
  41b513:	fxch   st(7)
  41b515:	ins    BYTE PTR es:[edi],dx
  41b516:	sbb    esp,DWORD PTR [edx+0x2f9fb957]
  41b51c:	loopne 0x41b50e
  41b51e:	mov    esp,0x68277f39
  41b523:	jge    0x41b579
  41b525:	addr16 inc ebp
  41b527:	xchg   ebp,eax
  41b528:	scas   al,BYTE PTR es:[edi]
  41b529:	pop    ebp
  41b52a:	das    
  41b52b:	(bad)  
  41b52c:	jg     0x41b520
  41b52e:	lods   eax,DWORD PTR ds:[esi]
  41b52f:	xor    BYTE PTR [edx],bh
  41b531:	push   esi
  41b532:	add    al,0xe1
  41b534:	sar    BYTE PTR [esi+0x58],cl
  41b537:	(bad)  [edi+ebp*8-0x57]
  41b53b:	stc    
  41b53c:	mov    WORD PTR [esp+eax*4],es
  41b53f:	sahf   
  41b540:	sbb    ch,BYTE PTR [edi-0xe51e3a0]
  41b546:	push   ebx
  41b547:	sub    BYTE PTR [ebx+0x4bbf0a86],0xd9
  41b54e:	in     eax,dx
  41b54f:	retf   0xa83c
  41b552:	fcomp  DWORD PTR [edi-0x691a047e]
  41b558:	lods   eax,DWORD PTR ds:[esi]
  41b559:	sbb    edi,esi
  41b55b:	push   edx
  41b55c:	inc    edx
  41b55d:	push   edx
  41b55e:	cdq    
  41b55f:	arpl   WORD PTR [edx-0x12],bp
  41b562:	into   
  41b563:	das    
  41b564:	sub    eax,0x662dbd4f
  41b569:	ins    BYTE PTR es:[edi],dx
  41b56a:	repz sbb al,0x62
  41b56d:	push   ss
  41b56e:	fcomp  QWORD PTR [esp+esi*2-0x7489d37]
  41b575:	enter  0x46f4,0x69
  41b579:	mov    bl,0xb5
  41b57b:	add    ah,BYTE PTR ds:0xd9466df1
  41b581:	mov    cl,BYTE PTR [edx]
  41b583:	mov    bh,BYTE PTR [esi-0x4e]
  41b586:	ror    BYTE PTR [edi+0x6f],1
  41b589:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b58a:	mov    ebp,DWORD PTR [edi+0x29a68e9]
  41b590:	cli    
  41b591:	inc    edx
  41b592:	mov    ebp,0x73f216aa
  41b597:	(bad)  
  41b598:	dec    ebx
  41b599:	dec    ebp
  41b59a:	inc    edi
  41b59b:	add    DWORD PTR [edi-0x5c],eax
  41b59e:	mov    ch,0x14
  41b5a0:	cld    
  41b5a1:	pop    ds
  41b5a2:	mov    dl,0x7f
  41b5a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b5a5:	sete   BYTE PTR [ecx-0x665b7af3]
  41b5ac:	add    DWORD PTR [edx],esi
  41b5ae:	rcr    DWORD PTR [ecx],0x2c
  41b5b1:	sbb    BYTE PTR [edx],cl
  41b5b3:	mov    edi,0x306c493d
  41b5b8:	cmp    eax,0x6dec7b
  41b5bd:	imul   ebx,DWORD PTR [esi],0xffffff91
  41b5c0:	jecxz  0x41b58c
  41b5c2:	mov    ch,0x9d
  41b5c4:	pop    ds
  41b5c5:	(bad)  
  41b5c6:	ins    DWORD PTR es:[edi],dx
  41b5c7:	loope  0x41b641
  41b5c9:	add    DWORD PTR [edi],ebx
  41b5cb:	sti    
  41b5cc:	pop    ss
  41b5cd:	push   DWORD PTR [edi]
  41b5cf:	je     0x41b648
  41b5d1:	fadd   DWORD PTR [eax-0x78652931]
  41b5d7:	stc    
  41b5d8:	jno    0x41b5dc
  41b5da:	add    DWORD PTR [eax],esi
  41b5dc:	fmulp  st(7),st
  41b5de:	pop    ebp
  41b5df:	xchg   esp,eax
  41b5e0:	mov    esp,0x60cbf29f
  41b5e5:	xchg   ebx,eax
  41b5e6:	xor    BYTE PTR [ebp+0x37],bl
  41b5e9:	jle    0x41b59b
  41b5eb:	(bad)  
  41b5ec:	and    esi,eax
  41b5ee:	daa    
  41b5ef:	test   eax,0xdd3a07db
  41b5f4:	mov    bh,0x75
  41b5f6:	cmp    al,0x89
  41b5f8:	adc    BYTE PTR [ebx+0x121dc385],al
  41b5fe:	jo     0x41b642
  41b600:	adc    DWORD PTR [edi-0x23cc6c3c],eax
  41b606:	les    eax,FWORD PTR [ebx+0x5]
  41b609:	mul    DWORD PTR [esi*4-0x4604b67e]
  41b610:	(bad)  
  41b611:	arpl   bp,dx
  41b613:	mov    bh,0x58
  41b615:	xchg   edi,eax
  41b616:	es cdq 
  41b618:	in     al,dx
  41b619:	or     BYTE PTR [edi],dh
  41b61b:	pop    ds
  41b61c:	stos   DWORD PTR es:[edi],eax
  41b61d:	and    edx,DWORD PTR [esi]
  41b61f:	add    DWORD PTR [ebp-0xb9759d6],esp
  41b625:	jo     0x41b676
  41b627:	mov    ebp,0xfdfcf24
  41b62c:	or     DWORD PTR [edi],edx
  41b62e:	je     0x41b5c4
  41b630:	adc    edi,0x26
  41b633:	mov    ebx,0x21755c0
  41b638:	outs   dx,DWORD PTR ds:[esi]
  41b639:	hlt    
  41b63a:	dec    eax
  41b63b:	loope  0x41b64b
  41b63d:	popf   
  41b63e:	shl    BYTE PTR [eax-0x78],1
  41b641:	pop    es
  41b642:	push   ecx
  41b643:	test   bh,dh
  41b645:	in     al,dx
  41b646:	mov    BYTE PTR [edx-0x7f],cl
  41b649:	sub    al,0xef
  41b64b:	jg     0x41b685
  41b64d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b64e:	mov    ebp,0x75762399
  41b653:	adc    edi,DWORD PTR [ebp+ecx*8+0x7]
  41b657:	jne    0x41b691
  41b659:	cmp    eax,0x44f7504a
  41b65e:	pop    edx
  41b65f:	mov    bl,0xfe
  41b661:	daa    
  41b662:	ins    BYTE PTR es:[edi],dx
  41b663:	out    0x58,al
  41b665:	dec    ecx
  41b666:	out    0xc8,al
  41b668:	pop    ebp
  41b669:	xor    edi,DWORD PTR [edx+ecx*4-0x177ed6d9]
  41b670:	adc    BYTE PTR [ecx+0x79f163fb],al
  41b676:	dec    ebp
  41b677:	mov    ds:0xed0b1808,eax
  41b67c:	mov    ch,ah
  41b67e:	jmp    0x41b656
  41b680:	int    0xca
  41b682:	leave  
  41b683:	mov    al,0x6c
  41b685:	push   edi
  41b686:	js     0x41b616
  41b688:	pop    esi
  41b689:	push   es
  41b68a:	stos   BYTE PTR es:[edi],al
  41b68b:	xor    BYTE PTR [ebx+0x3a],0x79
  41b68f:	test   DWORD PTR [edi+0x158e6199],esp
  41b695:	jg     0x41b638
  41b697:	mov    edi,0x87749223
  41b69c:	mov    ch,0x62
  41b69e:	out    dx,al
  41b69f:	dec    ebp
  41b6a0:	hlt    
  41b6a1:	jmp    0x4456:0xd736938a
  41b6a8:	dec    eax
  41b6a9:	loop   0x41b6fb
  41b6ab:	test   BYTE PTR [edx-0x7],bh
  41b6ae:	loopne 0x41b660
  41b6b0:	(bad)  
  41b6b1:	cmp    cl,BYTE PTR ds:0x3b06abfa
  41b6b7:	aam    0x7b
  41b6b9:	sub    edi,ebx
  41b6bb:	aam    0x5a
  41b6bd:	mov    al,0x79
  41b6bf:	into   
  41b6c0:	out    0x18,al
  41b6c2:	push   ecx
  41b6c3:	aas    
  41b6c4:	adc    al,0x52
  41b6c6:	je     0x41b663
  41b6c8:	dec    esp
  41b6c9:	loope  0x41b6dd
  41b6cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6cc:	ror    BYTE PTR [edi],1
  41b6ce:	pop    ebx
  41b6cf:	xchg   edx,edx
  41b6d1:	lea    ebx,[ecx]
  41b6d3:	fwait
  41b6d4:	xor    ch,BYTE PTR [edi-0x18]
  41b6d7:	adc    BYTE PTR [edi+0x3bc7085a],bl
  41b6dd:	(bad)  
  41b6de:	call   0x4d0d:0xfc664f8d
  41b6e5:	mov    cl,0x3d
  41b6e7:	call   0x5ac:0xc8db790b
  41b6ee:	rcl    DWORD PTR [ebx+0x1c],cl
  41b6f1:	mov    edx,DWORD PTR [edi+edx*2]
  41b6f4:	jbe    0x41b69b
  41b6f6:	mov    al,ds:0x2d33a358
  41b6fb:	mov    ds:0xebba1b4b,al
  41b700:	lods   eax,DWORD PTR ds:[esi]
  41b701:	sub    al,0x6b
  41b703:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b704:	aas    
  41b705:	mov    al,BYTE PTR [ecx-0x14]
  41b708:	push   edi
  41b709:	push   esp
  41b70a:	repz cmp dl,ah
  41b70d:	ja     0x41b69e
  41b70f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b710:	push   ecx
  41b711:	adc    eax,0xbeb79258
  41b716:	cdq    
  41b717:	mov    al,ds:0x8887a8b
  41b71c:	in     al,0xcb
  41b71e:	cdq    
  41b71f:	mov    ds:0x4b633ee8,eax
  41b724:	imul   esi,ecx,0xc797214
  41b72a:	adc    eax,DWORD PTR [edi+0x76]
  41b72d:	jns    0x41b794
  41b72f:	jns    0x41b72a
  41b731:	pusha  
  41b732:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b733:	or     al,BYTE PTR [edi+edx*2]
  41b736:	adc    ebp,DWORD PTR [edx]
  41b738:	cmp    al,0xa6
  41b73a:	dec    edi
  41b73b:	lock mov cl,0x3d
  41b73e:	lods   eax,DWORD PTR ds:[esi]
  41b73f:	sbb    eax,DWORD PTR [ecx-0x11f8ec22]
  41b745:	sub    DWORD PTR [esi],ecx
  41b747:	push   ss
  41b748:	or     BYTE PTR [esp+eiz*4],dh
  41b74b:	mov    BYTE PTR [esi],al
  41b74d:	shl    DWORD PTR [edx+0x3abd581c],0x8
  41b754:	push   ebx
  41b755:	cmovle eax,DWORD PTR [ecx]
  41b758:	iret   
  41b759:	(bad)  
  41b75b:	test   DWORD PTR [ecx+0x14],ebx
  41b75e:	inc    esp
  41b75f:	lds    edi,FWORD PTR [esi+0x72]
  41b762:	mov    eax,ds:0x7a97e3f2
  41b767:	stos   DWORD PTR es:[edi],eax
  41b768:	in     eax,dx
  41b769:	xchg   edi,eax
  41b76a:	cmp    DWORD PTR [ebx+0x5bbb7ba5],0xffffff80
  41b771:	jle    0x41b7b8
  41b773:	cwde   
  41b774:	xchg   edx,eax
  41b775:	or     DWORD PTR [edx+edx*1],0xf
  41b779:	mov    eax,ss
  41b77b:	loopne 0x41b719
  41b77d:	pop    ebx
  41b77e:	mov    bl,0xb8
  41b780:	js     0x41b712
  41b782:	mov    bl,0xca
  41b784:	lods   al,BYTE PTR ds:[esi]
  41b785:	pop    ebp
  41b786:	aaa    
  41b787:	popf   
  41b788:	jge    0x41b7c5
  41b78a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b78b:	lds    ebx,FWORD PTR [ecx+0x3c]
  41b78e:	test   al,0xaa
  41b790:	scas   al,BYTE PTR es:[edi]
  41b791:	call   0xeb06:0xe675d90b
  41b798:	cmc    
  41b799:	jecxz  0x41b76b
  41b79b:	out    dx,al
  41b79c:	and    DWORD PTR [ebp+0x6e],ecx
  41b79f:	clc    
  41b7a0:	jns    0x41b7fd
  41b7a2:	sub    al,0x13
  41b7a4:	jns    0x41b739
  41b7a6:	and    al,0xf4
  41b7a8:	jge    0x41b815
  41b7aa:	jnp    0x41b76f
  41b7ac:	add    eax,0x43bccb1d
  41b7b1:	lds    ecx,FWORD PTR [edx]
  41b7b3:	mov    eax,0xdb94f9fd
  41b7b8:	pop    DWORD PTR [esi+0x2c]
  41b7bb:	push   ebx
  41b7bc:	lea    edi,[ecx-0x8]
  41b7bf:	adc    DWORD PTR [edx+ecx*2+0x723c0d96],edx
  41b7c6:	and    ebx,edi
  41b7c8:	clc    
  41b7c9:	mov    eax,ds:0x1fa06d51
  41b7ce:	xlat   BYTE PTR ds:[ebx]
  41b7cf:	stos   BYTE PTR es:[edi],al
  41b7d0:	std    
  41b7d1:	xor    bh,0x6f
  41b7d4:	xor    edx,0x5bb8819c
  41b7da:	mov    ah,0x72
  41b7dc:	iret   
  41b7dd:	xchg   edi,eax
  41b7de:	sub    BYTE PTR [edx+eiz*8],ah
  41b7e1:	mov    bh,0x5d
  41b7e3:	push   0x797233f9
  41b7e8:	mov    eax,ebx
  41b7ea:	in     al,dx
  41b7eb:	jb     0x41b83b
  41b7ed:	icebp  
  41b7ee:	sub    BYTE PTR [eax],dl
  41b7f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7f1:	or     al,0x94
  41b7f3:	loopne 0x41b85e
  41b7f5:	jge    0x41b836
  41b7f7:	test   eax,0x6caa884c
  41b7fc:	jno    0x41b7cd
  41b7fe:	stos   DWORD PTR es:[edi],eax
  41b7ff:	pop    ebx
  41b800:	mov    ebx,0xd6de98ec
  41b805:	or     eax,0x68007dff
  41b80a:	enter  0xc680,0x7d
  41b80e:	test   al,0xf5
  41b810:	test   eax,0xdc9b98b5
  41b815:	mov    ch,bl
  41b817:	sub    ch,BYTE PTR [bx+si+0x77]
  41b81b:	dec    ebp
  41b81c:	lods   eax,DWORD PTR ds:[esi]
  41b81d:	mov    ah,0x63
  41b81f:	je     0x41b7b8
  41b821:	repz push 0xbd4686db
  41b827:	mov    cl,BYTE PTR [eax+0x27c9d28a]
  41b82d:	and    eax,0xeb7613f8
  41b832:	cmp    al,0x72
  41b834:	js     0x41b7c9
  41b836:	test   DWORD PTR [ecx+0x32e3758e],edx
  41b83c:	cld    
  41b83d:	cmp    DWORD PTR [esi-0x1b],ebx
  41b840:	das    
  41b841:	and    al,BYTE PTR [esi+0x43871427]
  41b847:	adc    al,0x9e
  41b849:	adc    ch,cl
  41b84b:	cmp    al,0x4c
  41b84d:	adc    esi,DWORD PTR [edi+0x52fa7839]
  41b853:	sub    eax,0xa575834f
  41b858:	(bad)
  41b85b:	pop    esi
  41b85c:	(bad)  
  41b85d:	(bad)  
  41b85e:	push   esi
  41b85f:	pushf  
  41b860:	cdq    
  41b861:	and    dh,ah
  41b863:	jnp    0x41b8ab
  41b865:	or     al,0x5
  41b867:	in     eax,dx
  41b868:	and    esi,ebp
  41b86a:	xor    eax,0x32b9bc8
  41b86f:	bound  edx,QWORD PTR [esi+ebx*2+0x7727487c]
  41b876:	and    cl,BYTE PTR gs:[ebp-0x67bfefcb]
  41b87d:	out    dx,eax
  41b87e:	fs jg  0x41b8a5
  41b881:	ret    0x779c
  41b884:	hlt    
  41b885:	mov    bl,0x75
  41b887:	retf   0xfedd
  41b88a:	jne    0x41b8e2
  41b88c:	mov    dh,0x5b
  41b88e:	or     BYTE PTR [eax+0x24],bh
  41b891:	dec    ecx
  41b892:	add    BYTE PTR [ebp+0x30],dl
  41b895:	jnp    0x41b907
  41b897:	push   ebx
  41b898:	dec    esi
  41b899:	out    0xa3,al
  41b89b:	xor    BYTE PTR [edx+0x4d],ah
  41b89e:	scas   eax,DWORD PTR es:[edi]
  41b89f:	pop    es
  41b8a0:	fnsave [ebp-0x7b]
  41b8a3:	mov    ds:0xf0805a16,al
  41b8a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8a9:	jne    0x41b928
  41b8ab:	jb     0x41b92c
  41b8ad:	popa   
  41b8ae:	inc    esi
  41b8af:	aaa    
  41b8b0:	adc    BYTE PTR [edx-0x34],bh
  41b8b3:	repz push ecx
  41b8b5:	(bad)  
  41b8b6:	xor    eax,0x940f3a1d
  41b8bb:	pop    esi
  41b8bc:	mov    dh,0x1e
  41b8be:	push   edi
  41b8bf:	jl     0x41b93d
  41b8c1:	add    al,0x26
  41b8c3:	xor    bl,BYTE PTR [edi]
  41b8c5:	pushf  
  41b8c6:	cs xchg ebp,eax
  41b8c8:	cli    
  41b8c9:	in     eax,0xf0
  41b8cb:	imul   BYTE PTR [eax-0x2]
  41b8ce:	std    
  41b8cf:	enter  0x3259,0x61
  41b8d3:	or     edi,ebx
  41b8d5:	xchg   ecx,eax
  41b8d6:	sahf   
  41b8d7:	iret   
  41b8d8:	fcomp  QWORD PTR [ebx+0x2e4d990a]
  41b8de:	into   
  41b8df:	xor    ah,cl
  41b8e1:	cmp    al,0x20
  41b8e3:	sar    DWORD PTR [esi],1
  41b8e5:	in     al,0xfe
  41b8e7:	mov    al,0x34
  41b8e9:	sti    
  41b8ea:	sub    bh,BYTE PTR [edx+0xc]
  41b8ed:	sub    bh,BYTE PTR [esi+ebx*4-0x526ee310]
  41b8f4:	mov    cl,0x2a
  41b8f6:	call   0x88d:0x2fc0d1b8
  41b8fd:	out    dx,eax
  41b8fe:	fidiv  WORD PTR [esi+0x68527ad6]
  41b904:	ss pop ss
  41b906:	and    BYTE PTR [ecx],cl
  41b908:	loop   0x41b978
  41b90a:	mov    cl,0x8e
  41b90c:	retf   0xbc8b
  41b90f:	ins    BYTE PTR es:[edi],dx
  41b910:	iret   
  41b911:	mov    ds:0x91d1ff3a,eax
  41b916:	sbb    dh,BYTE PTR [ebx+0x2474efe5]
  41b91c:	(bad)  
  41b91d:	dec    esp
  41b91e:	xchg   esi,eax
  41b91f:	scas   al,BYTE PTR es:[edi]
  41b920:	jb     0x41b9a1
  41b922:	pop    es
  41b923:	call   0x4cb9:0x49be9c06
  41b92a:	iretw  
  41b92c:	xor    ah,BYTE PTR cs:[edi+ebp*1-0x31]
  41b931:	stc    
  41b932:	inc    edi
  41b933:	xor    eax,0xd5e11aaa
  41b938:	mov    eax,0x629a240c
  41b93d:	in     al,0xc4
  41b93f:	popa   
  41b940:	mov    al,0x1c
  41b942:	xor    al,0x68
  41b944:	lods   al,BYTE PTR ds:[esi]
  41b945:	mov    bh,0xf6
  41b947:	cmp    al,0x2f
  41b949:	stos   DWORD PTR es:[edi],eax
  41b94a:	ret    0xa1bf
  41b94d:	aaa    
  41b94e:	adc    eax,0x243b95da
  41b953:	xor    BYTE PTR [edx],cl
  41b955:	push   ebx
  41b956:	shl    BYTE PTR [esi],0x97
  41b959:	dec    edi
  41b95a:	cmc    
  41b95b:	sub    eax,0x6ba14ba7
  41b960:	jmp    0x9bfc:0xf971bb92
  41b967:	jmp    ebx
  41b969:	out    0x67,eax
  41b96b:	adc    ebp,esp
  41b96d:	inc    ebx
  41b96e:	push   ss
  41b96f:	stos   BYTE PTR es:[edi],al
  41b970:	jg     0x41b9a0
  41b972:	sbb    eax,0x326b5fc1
  41b977:	or     BYTE PTR [edi+0x5b87e7c1],cl
  41b97d:	mov    edx,0xadc731d5
  41b982:	mov    dh,0x52
  41b984:	call   0x35dbf9d3
  41b989:	cmp    ecx,DWORD PTR [esi]
  41b98b:	nop
  41b98c:	les    edx,FWORD PTR ss:[ecx+0x38]
  41b990:	sar    DWORD PTR [edi],cl
  41b992:	jp     0x41b954
  41b994:	mov    bh,0x82
  41b996:	popf   
  41b997:	retf   
  41b998:	xchg   edx,edi
  41b99a:	cmc    
  41b99b:	pop    ecx
  41b99c:	add    dh,dl
  41b99e:	adc    al,0x64
  41b9a0:	mov    edx,0x600fb9c9
  41b9a5:	jno    0x41b970
  41b9a7:	xor    BYTE PTR [ebx-0x4d7570ac],0xd0
  41b9ae:	push   edi
  41b9af:	inc    BYTE PTR [ebp+0xc4567bf]
  41b9b5:	xchg   dl,dl
  41b9b7:	add    BYTE PTR [edx+0x26],ah
  41b9ba:	or     DWORD PTR [edi],edi
  41b9bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b9bd:	dec    eax
  41b9be:	aaa    
  41b9bf:	test   eax,0x9c49a322
  41b9c4:	xlat   BYTE PTR ds:[ebx]
  41b9c5:	xor    ebx,DWORD PTR [ecx+0x22]
  41b9c8:	push   0x31
  41b9ca:	cmp    eax,0x3d63a440
  41b9cf:	dec    eax
  41b9d0:	jg     0x41ba44
  41b9d2:	add    BYTE PTR [ebx+0x16],dl
  41b9d5:	push   edx
  41b9d6:	sbb    edx,ebp
  41b9d8:	ret    0x2c6b
  41b9db:	push   0xc49258bd
  41b9e0:	aam    0x8d
  41b9e2:	pop    edi
  41b9e3:	jg     0x41b9a4
  41b9e5:	mov    dl,0xd7
  41b9e8:	mov    cl,0x7f
  41b9ea:	es push eax
  41b9ec:	rcl    DWORD PTR [ebx+eax*2-0x6c25760b],cl
  41b9f3:	out    0x22,al
  41b9f5:	loopne 0x41b99a
  41b9f7:	mov    bl,0x20
  41b9f9:	push   ebx
  41b9fa:	fnstenv [ecx]
  41b9fc:	sahf   
  41b9fd:	ret    0xa652
  41ba00:	je     0x41b9c6
  41ba02:	jae    0x41ba72
  41ba04:	push   ds
  41ba05:	rcl    DWORD PTR [eax],cl
  41ba07:	mov    ah,0x8f
  41ba09:	mov    bl,BYTE PTR [ebx]
  41ba0b:	mov    ebp,0xb2fc4de1
  41ba10:	ficom  WORD PTR [edi]
  41ba12:	pop    esp
  41ba13:	dec    ecx
  41ba14:	xor    cl,ah
  41ba16:	ins    DWORD PTR es:[edi],dx
  41ba17:	jne    0x41b9e9
  41ba19:	pop    edi
  41ba1a:	mov    ebp,esp
  41ba1c:	lds    ebp,FWORD PTR ds:0x7420dc03
  41ba22:	xor    ecx,ecx
  41ba24:	fld    TBYTE PTR [esi+0x36bd1146]
  41ba2a:	jmp    0x77e1:0x9a77a3d
  41ba31:	mov    cl,0x3a
  41ba33:	(bad)  
  41ba34:	cmp    edx,esi
  41ba36:	cmovp  edx,DWORD PTR [ebp*2+0x59959d32]
  41ba3e:	pop    edx
  41ba3f:	mov    edx,0x10583ff3
  41ba44:	or     BYTE PTR [edi+0x78],dh
  41ba47:	jle    0x41ba52
  41ba49:	jl     0x41baba
  41ba4b:	enter  0x8d1a,0xa
  41ba4f:	pop    es
  41ba50:	jns    0x41b9dd
  41ba52:	pop    ecx
  41ba53:	mov    DWORD PTR [edx],eax
  41ba55:	pop    ecx
  41ba56:	das    
  41ba57:	adc    al,0x1b
  41ba59:	mov    ch,0xdc
  41ba5b:	cmp    BYTE PTR [esi],0xc2
  41ba5e:	adc    ch,0xa2
  41ba61:	idiv   BYTE PTR [edi+0x0]
  41ba64:	shl    bl,1
  41ba66:	jns    0x41bab9
  41ba68:	ret    
  41ba69:	dec    ebp
  41ba6a:	je     0x41ba48
  41ba6c:	pop    edi
  41ba6d:	adc    al,0x64
  41ba6f:	fiadd  WORD PTR [ebx]
  41ba71:	push   ss
  41ba72:	pop    eax
  41ba73:	xchg   esi,eax
  41ba74:	(bad)  
  41ba75:	or     cl,BYTE PTR [ebp+0x60028013]
  41ba7b:	vaddsd xmm2,xmm0,xmm5
  41ba7f:	pop    esi
  41ba80:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41ba82:	cmp    esp,DWORD PTR [ebx-0x52]
  41ba85:	mov    eax,ds:0xc96a3203
  41ba8a:	(bad)  
  41ba8b:	mov    edi,0x35dad3a7
  41ba90:	popf   
  41ba91:	rol    DWORD PTR [ebx],1
  41ba93:	cli    
  41ba94:	pop    ds
  41ba95:	or     eax,0x8d6fc92d
  41ba9a:	inc    eax
  41ba9b:	scas   al,BYTE PTR es:[edi]
  41ba9c:	fisttp DWORD PTR [edx-0x4e]
  41ba9f:	(bad)  
  41baa0:	in     eax,dx
  41baa1:	data16 and BYTE PTR [eax-0x7b3e07d9],cl
  41baa8:	(bad)  
  41baa9:	out    dx,eax
  41baaa:	or     edx,ecx
  41baac:	in     eax,dx
  41baad:	ror    DWORD PTR [ebx-0x21],1
  41bab0:	mov    di,fs
  41bab3:	pusha  
  41bab4:	stos   BYTE PTR es:[edi],al
  41bab5:	cdq    
  41bab6:	call   0x8c2534df
  41babb:	jecxz  0x41baeb
  41babd:	into   
  41babe:	test   eax,0x529a053d
  41bac3:	and    DWORD PTR [eax-0x55],edx
  41bac6:	jp     0x41ba8a
  41bac8:	ror    BYTE PTR [edi-0x5cb50fb3],0x55
  41bacf:	addr16 popa 
  41bad1:	dec    ecx
  41bad2:	mov    WORD PTR [esi-0x2],?
  41bad5:	stc    
  41bad6:	in     eax,0x53
  41bad8:	mov    ds:0x1f5f28de,eax
  41badd:	sbb    eax,0x313b17d5
  41bae2:	cmc    
  41bae3:	inc    ecx
  41bae4:	ds mov edx,0x25d3ea41
  41baea:	push   edx
  41baeb:	pop    eax
  41baec:	sar    al,0x3f
  41baef:	ret    
  41baf0:	shl    DWORD PTR [eax-0x30],0x98
  41baf4:	lea    esp,[esp+eiz*8]
  41baf7:	call   0x4810:0x2838e44b
  41bafe:	push   eax
  41baff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb00:	jmp    0x5c58:0xff682fc0
  41bb07:	ret    0xeaec
  41bb0a:	test   DWORD PTR [ebp+0x53],ebx
  41bb0d:	or     eax,0x1125e213
  41bb12:	mov    eax,0x171d62e2
  41bb17:	repnz mov cl,0x5b
  41bb1a:	(bad)  
  41bb1b:	stc    
  41bb1c:	xor    ah,BYTE PTR [edi]
  41bb1e:	lahf   
  41bb1f:	sub    al,0x36
  41bb21:	addr16 (bad) 
  41bb23:	lock aam 0x27
  41bb26:	(bad)  
  41bb27:	mov    bl,0x3a
  41bb29:	mov    bl,0x49
  41bb2b:	xchg   ebx,eax
  41bb2c:	mov    dh,0x92
  41bb2e:	sahf   
  41bb2f:	in     al,dx
  41bb30:	pop    esi
  41bb31:	stos   BYTE PTR es:[edi],al
  41bb32:	mov    dl,0x92
  41bb34:	xchg   DWORD PTR [eax],ebx
  41bb36:	cdq    
  41bb37:	(bad)
  41bb3a:	ins    DWORD PTR es:[edi],dx
  41bb3b:	div    DWORD PTR [edx+edi*1-0x60]
  41bb3f:	retf   
  41bb40:	dec    edx
  41bb41:	sbb    ch,BYTE PTR [eax-0x46a35e22]
  41bb47:	pop    ebp
  41bb48:	pop    ebx
  41bb49:	cmp    bl,ch
  41bb4b:	mov    ebx,0x64384c3
  41bb50:	pop    es
  41bb51:	ror    DWORD PTR [ecx],1
  41bb53:	xlat   BYTE PTR ds:[ebx]
  41bb54:	fisub  WORD PTR [edi+0x38d39441]
  41bb5a:	outs   dx,BYTE PTR ds:[esi]
  41bb5b:	jecxz  0x41bb4a
  41bb5d:	fdivr  DWORD PTR [edi-0x5b]
  41bb60:	jne    0x41bbb3
  41bb62:	mov    edx,0x317d7232
  41bb67:	sar    BYTE PTR [edx-0x47f0d3ff],1
  41bb6d:	aaa    
  41bb6e:	mov    esp,0xb2ac4aa2
  41bb73:	sti    
  41bb74:	lods   eax,DWORD PTR ds:[esi]
  41bb75:	jmp    0xd120639a
  41bb7a:	sub    eax,DWORD PTR [edx+0x2b46a999]
  41bb80:	aaa    
  41bb81:	pop    edi
  41bb82:	push   eax
  41bb83:	dec    ecx
  41bb84:	bound  esi,QWORD PTR [edi]
  41bb86:	leave  
  41bb87:	or     al,0xd9
  41bb89:	lock ins DWORD PTR es:[edi],dx
  41bb8b:	inc    esi
  41bb8c:	scas   al,BYTE PTR es:[edi]
  41bb8d:	cmp    ebx,esi
  41bb8f:	sub    DWORD PTR [ecx],ebx
  41bb91:	sti    
  41bb92:	push   eax
  41bb93:	test   al,0xaf
  41bb95:	push   ebp
  41bb96:	jle    0x41bc0f
  41bb98:	jp     0x41bbcb
  41bb9a:	in     al,0xd
  41bb9c:	mov    DWORD PTR [edi-0xd],edx
  41bb9f:	in     al,dx
  41bba0:	pop    esp
  41bba1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bba2:	dec    edx
  41bba3:	add    al,0xbd
  41bba5:	pop    ebp
  41bba6:	cmp    al,0xcd
  41bba9:	push   edx
  41bbaa:	jo     0x41bbc9
  41bbac:	shl    ah,cl
  41bbae:	jmp    0x6ee21e98
  41bbb3:	inc    ebp
  41bbb4:	les    esp,FWORD PTR [esi+ecx*1-0x5970870f]
  41bbbb:	push   esi
  41bbbc:	mov    cl,0x31
  41bbbe:	jae    0x41bb80
  41bbc0:	xor    bh,BYTE PTR [ebp*1-0x743d453c]
  41bbc7:	rol    BYTE PTR [eax],cl
  41bbc9:	into   
  41bbca:	stos   DWORD PTR es:[edi],eax
  41bbcb:	fstp   st(6)
  41bbcd:	popa   
  41bbce:	call   0x4fe2:0xe6d86bf4
  41bbd5:	out    dx,eax
  41bbd6:	inc    edi
  41bbd7:	ins    DWORD PTR es:[edi],dx
  41bbd8:	stc    
  41bbd9:	ret    
  41bbda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bbdb:	mov    ds:0xf4b46fdd,al
  41bbe0:	mov    ebp,0xf778f69f
  41bbe5:	cmp    BYTE PTR [ecx+eax*8+0x2e],bl
  41bbe9:	mov    fs,WORD PTR [ebx-0x47cb2bf4]
  41bbef:	imul   ebx,DWORD PTR [edx],0x4149ee34
  41bbf5:	inc    eax
  41bbf6:	out    dx,al
  41bbf7:	test   eax,0xd0570752
  41bbfc:	in     eax,dx
  41bbfd:	ds xchg ecx,eax
  41bbff:	jle    0x41bbc1
  41bc01:	popa   
  41bc02:	sbb    esi,DWORD PTR [edx-0x65b6576a]
  41bc08:	xchg   BYTE PTR [esi-0x2b],ch
  41bc0b:	xchg   ebp,eax
  41bc0c:	or     esp,edx
  41bc0e:	pop    edi
  41bc0f:	sub    BYTE PTR [ecx+0x1b],bh
  41bc12:	inc    edx
  41bc13:	ins    BYTE PTR es:[edi],dx
  41bc14:	leave  
  41bc15:	jns    0x41bbf0
  41bc17:	jmp    0x5b63aed2
  41bc1c:	mov    bl,0x41
  41bc1e:	stos   DWORD PTR es:[edi],eax
  41bc1f:	sti    
  41bc20:	in     eax,0x37
  41bc22:	sub    al,0x58
  41bc24:	cld    
  41bc25:	scas   al,BYTE PTR es:[edi]
  41bc26:	jle    0x41bc5d
  41bc28:	(bad)  
  41bc29:	dec    edi
  41bc2a:	or     eax,DWORD PTR [edi]
  41bc2c:	test   eax,0x98b3bdf9
  41bc31:	out    dx,al
  41bc32:	adc    al,0x78
  41bc34:	fsub   QWORD PTR [edi-0x64]
  41bc37:	inc    ebx
  41bc38:	(bad)  
  41bc3a:	inc    eax
  41bc3b:	cli    
  41bc3c:	jecxz  0x41bc51
  41bc3e:	lock cld 
  41bc40:	sub    eax,0x927088c7
  41bc45:	push   ecx
  41bc46:	ds pop ss
  41bc48:	add    edi,DWORD PTR [esi]
  41bc4a:	jae    0x41bc31
  41bc4c:	push   ecx
  41bc4d:	jae    0x41bc07
  41bc4f:	rcl    BYTE PTR [eax+0x22],cl
  41bc52:	mov    eax,ds:0x2707c57c
  41bc57:	jne    0x41bc2a
  41bc59:	retf   
  41bc5a:	push   0xde2a0713
  41bc5f:	add    dh,BYTE PTR [eax]
  41bc61:	retf   
  41bc62:	(bad)  
  41bc63:	icebp  
  41bc64:	call   0x6858:0xcfb05fc1
  41bc6b:	xchg   ebx,eax
  41bc6c:	pop    es
  41bc6d:	adc    BYTE PTR [ebx],0x37
  41bc70:	in     eax,dx
  41bc71:	xor    dh,bl
  41bc73:	add    eax,0x87aa8227
  41bc78:	pop    ebx
  41bc79:	pop    ebp
  41bc7a:	sbb    BYTE PTR [esi],dl
  41bc7c:	dec    esp
  41bc7d:	mov    edi,0x83d58117
  41bc82:	jb     0x41bc8b
  41bc84:	jp     0x41bc70
  41bc86:	mov    dl,0x0
  41bc88:	aad    0xc8
  41bc8a:	mov    edi,0x35bfd5db
  41bc8f:	sbb    ebp,DWORD PTR [ecx-0x71289db9]
  41bc95:	and    ch,dl
  41bc97:	push   edx
  41bc98:	mov    eax,0xa51bf8c9
  41bc9d:	sbb    al,BYTE PTR [esi+0x4b252c9d]
  41bca3:	dec    edi
  41bca4:	jns    0x41bcd9
  41bca6:	in     eax,dx
  41bca7:	adc    al,0xda
  41bca9:	or     al,0x35
  41bcab:	ret    
  41bcac:	push   edx
  41bcad:	(bad)
  41bcb1:	jbe    0x41bc55
  41bcb3:	xchg   edi,ebx
  41bcb5:	stos   DWORD PTR es:[edi],eax
  41bcb6:	test   eax,0x27418ae3
  41bcbb:	sub    BYTE PTR [eax],bh
  41bcbd:	(bad)  
  41bcbe:	push   ss
  41bcbf:	pop    ds
  41bcc0:	inc    esi
  41bcc1:	or     eax,0x5cf8fd79
  41bcc6:	(bad)  
  41bcc7:	jmp    0x41bcd3
  41bcc9:	mov    dh,0x13
  41bccb:	mov    eax,0x27c71bf
  41bcd0:	retf   
  41bcd1:	and    al,0xe0
  41bcd3:	jbe    0x41bcb0
  41bcd5:	(bad)  
  41bcd6:	jmp    FWORD PTR [ebx-0x53816801]
  41bcdc:	fnstenv [esi-0x4f99b4b6]
  41bce2:	xor    eax,0x4e048cab
  41bce7:	clc    
  41bce8:	and    ah,BYTE PTR [esi-0x6413e882]
  41bcee:	push   cs
  41bcef:	inc    ebx
  41bcf0:	xor    ah,BYTE PTR [ebx+0x791980b]
  41bcf6:	adc    eax,ebx
  41bcf8:	and    eax,0xe950bd8a
  41bcfd:	jnp    0x41bd5e
  41bcff:	xchg   ebp,eax
  41bd00:	enter  0x1de0,0xa7
  41bd04:	mov    ebx,DWORD PTR [edx-0x76f5dbbf]
  41bd0a:	es popf 
  41bd0c:	data16 aaa 
  41bd0e:	or     BYTE PTR [edi+edx*4-0x2e],ch
  41bd12:	bt     DWORD PTR [ecx+0x4159523e],esi
  41bd19:	jge    0x41bd4b
  41bd1b:	pop    ecx
  41bd1c:	pop    es
  41bd1d:	cli    
  41bd1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd1f:	jb     0x41bd91
  41bd21:	jmp    0x336f54f9
  41bd26:	push   edi
  41bd27:	xchg   ebx,eax
  41bd28:	sub    dl,BYTE PTR [edi]
  41bd2a:	xor    BYTE PTR [edi-0x73],dl
  41bd2d:	cmp    ebx,DWORD PTR [ecx-0x13aae1c3]
  41bd33:	jae    0x41bd41
  41bd35:	stos   BYTE PTR es:[edi],al
  41bd36:	and    eax,0xf48a984c
  41bd3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd3c:	pop    edi
  41bd3d:	and    esi,DWORD PTR [eax-0x4a]
  41bd40:	ret    
  41bd41:	shl    BYTE PTR [ebx+0x4a72a250],cl
  41bd47:	push   edi
  41bd48:	std    
  41bd49:	xchg   BYTE PTR [ecx+0x35],ah
  41bd4c:	jmp    0x444cf882
  41bd51:	mov    BYTE PTR [esi+0x411a57e],bl
  41bd57:	push   0x56
  41bd59:	shr    DWORD PTR [eax],0x4e
  41bd5c:	data16 jg 0x41bd60
  41bd5f:	rol    BYTE PTR [ebp+0x43],0xe8
  41bd63:	mov    ds:0xef8eeb2,eax
  41bd68:	bound  ecx,QWORD PTR [ebx]
  41bd6a:	cmp    al,dl
  41bd6c:	bound  eax,QWORD PTR [ebp+0x1972a306]
  41bd72:	sub    al,0x88
  41bd74:	sbb    DWORD PTR [ecx-0x3ffdbbe6],esp
  41bd7a:	pop    ebx
  41bd7b:	or     bh,BYTE PTR [ecx+eax*1]
  41bd7e:	xchg   ebp,eax
  41bd7f:	or     al,0xa
  41bd81:	inc    esp
  41bd82:	push   cs
  41bd83:	stc    
  41bd84:	mov    DWORD PTR [ebp-0x1796083a],esp
  41bd8a:	dec    bx
  41bd8c:	fidiv  WORD PTR [ebx+0x43]
  41bd8f:	jno    0x41bd92
  41bd91:	dec    edi
  41bd92:	js     0x41bd83
  41bd94:	xchg   BYTE PTR [edx],cl
  41bd96:	jle    0x41bd31
  41bd98:	ja     0x41bdc8
  41bd9a:	xor    dh,0x9
  41bd9d:	ficom  WORD PTR [ebx+0x7c]
  41bda0:	jmp    0x20bc7982
  41bda5:	cmp    eax,edx
  41bda7:	repnz icebp 
  41bda9:	(bad)  
  41bdaa:	mov    dl,0x11
  41bdac:	stos   BYTE PTR es:[edi],al
  41bdad:	pusha  
  41bdae:	enter  0xf48,0x14
  41bdb2:	jmp    0x41bd8a
  41bdb4:	jns    0x41bda7
  41bdb6:	jnp    0x41bdb7
  41bdb8:	add    DWORD PTR [eax-0x2e6892b6],ebx
  41bdbe:	jmp    0xd23bd6f7
  41bdc3:	dec    ebx
  41bdc4:	cld    
  41bdc5:	scas   al,BYTE PTR es:[edi]
  41bdc6:	cdq    
  41bdc7:	mov    esp,DWORD PTR [eax+0x7b]
  41bdca:	iret   
  41bdcb:	push   cs
  41bdcc:	mov    edi,0x68d7511d
  41bdd1:	mov    bh,0x49
  41bdd3:	in     eax,0x81
  41bdd5:	lds    esp,FWORD PTR [ecx]
  41bdd7:	icebp  
  41bdd8:	inc    eax
  41bdd9:	add    DWORD PTR [esp+edi*1-0x1d],ebx
  41bddd:	jl     0x41be1e
  41bddf:	dec    eax
  41bde0:	ror    ch,0xa8
  41bde3:	test   al,0xd5
  41bde5:	out    dx,eax
  41bde6:	cmp    cl,BYTE PTR [eax]
  41bde8:	xchg   ebp,eax
  41bde9:	loope  0x41bd7d
  41bdeb:	mov    cl,0x4b
  41bded:	in     al,0x6f
  41bdef:	inc    BYTE PTR [ecx-0x16581a4d]
  41bdf5:	mov    ch,0x5
  41bdf7:	sub    DWORD PTR [edx],ebx
  41bdf9:	mov    ecx,0x19e41c91
  41bdfe:	inc    ecx
  41bdff:	repz enter 0x5d47,0x87
  41be04:	cmc    
  41be05:	adc    eax,0xddba3531
  41be0a:	outs   dx,BYTE PTR ds:[esi]
  41be0b:	or     al,0xaa
  41be0d:	add    eax,0x806d8ed5
  41be12:	int    0xd1
  41be14:	repz dec BYTE PTR [eax-0x68ab93cb]
  41be1b:	xor    bh,BYTE PTR [edx+ebx*8]
  41be1e:	push   0x5b
  41be20:	sbb    dl,ch
  41be22:	xor    edx,edx
  41be24:	mov    edx,0x188b59b2
  41be29:	push   ebp
  41be2a:	mov    eax,DWORD PTR [esi]
  41be2c:	test   DWORD PTR [eax],esi
  41be2e:	and    DWORD PTR [esi+0x37cdd088],edx
  41be34:	cmp    bl,0x2a
  41be37:	call   0xb9466de8
  41be3c:	mov    al,ds:0x858cadd8
  41be41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be42:	inc    esi
  41be43:	lock pop ebp
  41be45:	push   ebx
  41be46:	jmp    0xe2ed:0xb4349f8f
  41be4d:	sahf   
  41be4e:	jns    0x41be06
  41be50:	mov    ds:0xe0158fa2,eax
  41be55:	sti    
  41be56:	rcl    BYTE PTR [ebx-0x27ed71cb],cl
  41be5c:	pop    ebp
  41be5d:	mov    ebp,0x17a195b6
  41be62:	adc    eax,DWORD PTR [ebx+0x3ddeefaa]
  41be68:	dec    eax
  41be69:	dec    ebp
  41be6a:	pop    esp
  41be6b:	test   DWORD PTR [ecx],esi
  41be6d:	test   al,0x36
  41be6f:	ss test al,0x73
  41be72:	pop    ss
  41be73:	xor    BYTE PTR [edi],dh
  41be75:	loopne 0x41be0b
  41be77:	retf   0x2dc8
  41be7a:	arpl   WORD PTR [eax],dx
  41be7c:	call   FWORD PTR [ecx]
  41be7e:	push   0xfffffff1
  41be80:	mov    al,0x8c
  41be82:	jl     0x41be6d
  41be84:	aam    0x60
  41be86:	adc    bh,BYTE PTR [eax+0xa84f849]
  41be8c:	jmp    DWORD PTR ds:0x1c897755
  41be92:	add    BYTE PTR [esi],0x72
  41be95:	fstp   st(0)
  41be97:	xlat   BYTE PTR ds:[ebx]
  41be98:	cmp    dl,BYTE PTR [esi]
  41be9a:	jb     0x41be32
  41be9c:	mov    eax,ds:0x1d099844
  41bea1:	call   0xfb5e613b
  41bea6:	mov    al,ds:0x5f0510fc
  41beab:	sar    ch,cl
  41bead:	int    0x74
  41beaf:	(bad)  
  41beb0:	push   cs
  41beb1:	es cmc 
  41beb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41beb4:	mov    bh,0xc
  41beb6:	(bad)  
  41beb7:	(bad)  
  41beb8:	(bad)  
  41beb9:	dec    ebx
  41beba:	aad    0xce
  41bebc:	fwait
  41bebd:	xchg   esp,eax
  41bebe:	mov    es,WORD PTR [ebp-0x70]
  41bec1:	stos   BYTE PTR es:[edi],al
  41bec2:	dec    ebp
  41bec3:	and    eax,0xf468fa7a
  41bec8:	aaa    
  41bec9:	mov    al,ds:0xcdd815e9
  41bece:	mov    edx,0x2dc02445
  41bed3:	and    al,0x73
  41bed5:	out    0x4,al
  41bed7:	push   ss
  41bed8:	mov    dh,0xa8
  41beda:	inc    esp
  41bedb:	in     eax,0x6f
  41bedd:	outs   dx,DWORD PTR ds:[esi]
  41bede:	rol    DWORD PTR [edx+0x768c5ed1],1
  41bee4:	and    al,ah
  41bee6:	ss pop ebp
  41bee8:	imul   ebp,ebp,0x8f13c0aa
  41beee:	jg     0x41be99
  41bef0:	jno    0x41bf2e
  41bef2:	sbb    dl,bl
  41bef4:	mov    edi,0xf090a69a
  41bef9:	jbe    0x41bf52
  41befb:	scas   al,BYTE PTR es:[edi]
  41befc:	iret   
  41befd:	loope  0x41bf6d
  41beff:	jbe    0x41bf7d
  41bf01:	mov    ebx,0xda681442
  41bf06:	out    dx,al
  41bf07:	pop    ebx
  41bf08:	(bad)  
  41bf09:	mov    al,0x70
  41bf0b:	adc    DWORD PTR [ecx],edx
  41bf0d:	mov    ecx,0x8531b04
  41bf12:	icebp  
  41bf13:	adc    al,0x2b
  41bf15:	inc    edx
  41bf16:	imul   ecx,esp,0x67a218f9
  41bf1c:	mov    bl,0xee
  41bf1e:	mov    eax,ds:0xe378b96a
  41bf23:	and    esp,DWORD PTR [ebx+0x38]
  41bf26:	das    
  41bf27:	dec    edi
  41bf28:	cmp    BYTE PTR [ecx+0xc],0xd5
  41bf2c:	xor    eax,0x48bbebb6
  41bf31:	or     esp,DWORD PTR [esi+0x43c74309]
  41bf37:	icebp  
  41bf38:	not    DWORD PTR [esi]
  41bf3a:	mov    esi,0x7d379044
  41bf3f:	push   edx
  41bf40:	imul   ebp,DWORD PTR [eax+0x4b640aac],0xffffff8e
  41bf47:	nop
  41bf48:	out    0x30,al
  41bf4a:	inc    DWORD PTR [esi-0x67]
  41bf4d:	enter  0xd194,0xd3
  41bf51:	mov    WORD PTR [ebx-0x76b3bd0],cs
  41bf57:	add    DWORD PTR [ebx],ecx
  41bf59:	scas   al,BYTE PTR es:[edi]
  41bf5a:	cli    
  41bf5b:	mov    ecx,0x48aa247f
  41bf60:	in     eax,0xf7
  41bf62:	scas   eax,DWORD PTR es:[edi]
  41bf63:	sub    cl,BYTE PTR [eax+edx*4+0x29a1f39b]
  41bf6a:	xor    dl,0x29
  41bf6d:	sti    
  41bf6e:	imul   esi,esp,0xffffffa2
  41bf71:	mov    dl,0x7e
  41bf73:	push   ecx
  41bf74:	xchg   edx,eax
  41bf75:	popa   
  41bf76:	cmp    ah,BYTE PTR [edi+0x6f028600]
  41bf7c:	addr16 sub al,0xfa
  41bf7f:	sbb    cl,BYTE PTR [esp+ebx*8-0x2614b587]
  41bf86:	jl     0x41bf34
  41bf88:	add    al,0x51
  41bf8a:	popf   
  41bf8b:	adc    DWORD PTR [edi],edi
  41bf8d:	popf   
  41bf8e:	lahf   
  41bf8f:	out    dx,al
  41bf90:	add    DWORD PTR [edi-0x38],eax
  41bf93:	sub    dh,BYTE PTR [ecx-0x40c48ff0]
  41bf99:	sbb    al,0x5e
  41bf9b:	sbb    ch,ch
  41bf9d:	test   BYTE PTR [eax+0x55],0xa5
  41bfa1:	push   es
  41bfa2:	aad    0x57
  41bfa4:	dec    ecx
  41bfa5:	enter  0x5bf2,0x32
  41bfa9:	stos   DWORD PTR es:[edi],eax
  41bfaa:	out    dx,al
  41bfab:	ror    BYTE PTR [eax+0x29cab97d],cl
  41bfb1:	std    
  41bfb2:	in     al,0x43
  41bfb4:	cmp    bh,dl
  41bfb6:	and    al,BYTE PTR [ecx+eax*1+0x6671acec]
  41bfbd:	xor    al,0xb7
  41bfbf:	inc    ebx
  41bfc0:	push   0x5623d110
  41bfc5:	push   ecx
  41bfc6:	out    0x7,al
  41bfc8:	lods   al,BYTE PTR ds:[esi]
  41bfc9:	aam    0xd9
  41bfcb:	xchg   ebx,eax
  41bfcc:	cmp    al,0x4
  41bfce:	ret    0x145f
  41bfd1:	lea    ebp,[edx+edx*4]
  41bfd4:	(bad)  [edi]
  41bfd6:	pop    es
  41bfd7:	aad    0x9e
  41bfd9:	add    dh,BYTE PTR [ebp-0x17]
  41bfdc:	enter  0x9310,0x6f
  41bfe0:	add    dl,dl
  41bfe2:	adc    eax,0x769019c8
  41bfe7:	and    bl,ah
  41bfe9:	jmp    0x5fd8a1c8
  41bfee:	mov    fs,WORD PTR [ebp+0x67]
  41bff1:	mov    ch,0xa2
  41bff3:	dec    BYTE PTR [ecx]
  41bff5:	push   ss
  41bff6:	xchg   ecx,eax
  41bff7:	add    DWORD PTR [edx-0x4e],0xffffffcb
  41bffb:	sbb    DWORD PTR [esi+0x52143b9e],0xf846d579
  41c005:	ins    BYTE PTR es:[edi],dx
  41c006:	push   0x1a
  41c008:	or     eax,0xf6a26967
  41c00d:	mov    ch,0x2
  41c00f:	mov    al,0xdb
  41c011:	jmp    0x41bfa1
  41c013:	pop    edi
  41c014:	hlt    
  41c015:	xchg   DWORD PTR [ebp+0x5a63cb70],ebp
  41c01b:	enter  0x5f3a,0x18
  41c01f:	pop    esp
  41c020:	cdq    
  41c021:	lock sbb BYTE PTR [esi],dl
  41c024:	xor    edi,DWORD PTR [esi]
  41c026:	ja     0x41bfb6
  41c028:	adc    al,0x5e
  41c02a:	pop    ecx
  41c02b:	push   ecx
  41c02c:	icebp  
  41c02d:	xor    DWORD PTR [ecx+ecx*4],esp
  41c030:	test   al,0xc2
  41c032:	dec    ebp
  41c033:	xchg   ebp,eax
  41c034:	lods   al,BYTE PTR ds:[esi]
  41c035:	daa    
  41c036:	arpl   sp,dx
  41c038:	mov    ebp,0x574d4b8b
  41c03d:	cmp    bh,cl
  41c03f:	or     bl,dl
  41c041:	stos   BYTE PTR es:[edi],al
  41c042:	cmp    BYTE PTR [ebp+0x18],ah
  41c045:	mov    WORD PTR [esi],ss
  41c047:	arpl   WORD PTR [esi],bp
  41c049:	inc    esi
  41c04a:	and    DWORD PTR [ecx-0xdc2c446],edx
  41c050:	jnp    0x41c0ba
  41c052:	dec    edx
  41c053:	fstp   QWORD PTR [ebx]
  41c055:	sub    dh,BYTE PTR [edx]
  41c057:	cld    
  41c058:	imul   esp,DWORD PTR [ecx],0x41a3ebdf
  41c05e:	lahf   
  41c05f:	ficomp DWORD PTR [ecx-0x46dd17b6]
  41c065:	stos   BYTE PTR es:[edi],al
  41c066:	imul   esi,DWORD PTR [edi-0x54],0xffffffa8
  41c06a:	in     eax,dx
  41c06b:	sub    bl,BYTE PTR [esi]
  41c06d:	sahf   
  41c06e:	pop    ebx
  41c06f:	mov    BYTE PTR [esi],dl
  41c071:	lahf   
  41c072:	sti    
  41c073:	jo     0x41c003
  41c075:	ins    DWORD PTR es:[edi],dx
  41c076:	dec    ecx
  41c077:	and    ch,bh
  41c079:	stc    
  41c07a:	mov    DWORD PTR [edi+0x554f0b41],eax
  41c080:	add    ebp,DWORD PTR [eax]
  41c082:	push   ebx
  41c083:	leave  
  41c084:	add    al,0x57
  41c086:	rcl    BYTE PTR [ebx],0xc8
  41c089:	xchg   edi,eax
  41c08a:	jecxz  0x41c107
  41c08c:	leave  
  41c08d:	lods   eax,DWORD PTR ds:[esi]
  41c08e:	mov    cl,0xc3
  41c090:	and    bh,BYTE PTR [ebp+0x1f]
  41c093:	lds    edi,FWORD PTR [esi]
  41c095:	sti    
  41c096:	and    eax,0x365dac94
  41c09b:	jecxz  0x41c0e7
  41c09d:	test   eax,0x3489c7a4
  41c0a2:	jo     0x41c0c5
  41c0a4:	dec    esi
  41c0a5:	in     al,0x12
  41c0a7:	mov    ds:0xb90e4db6,eax
  41c0ac:	mov    ch,0xb4
  41c0ae:	jg     0x41c0fe
  41c0b0:	mov    edx,0x221dc7d3
  41c0b5:	inc    ebx
  41c0b6:	fadd   st,st(2)
  41c0b8:	push   edi
  41c0b9:	jbe    0x41c060
  41c0bb:	test   DWORD PTR [edi-0x244b8374],ebp
  41c0c1:	jo     0x41c0e4
  41c0c3:	cmp    ah,BYTE PTR [ebx+0x57f84b35]
  41c0c9:	rol    BYTE PTR [esi],cl
  41c0cb:	pop    edx
  41c0cc:	xchg   esp,eax
  41c0cd:	xchg   DWORD PTR [edi-0x6ffed38],esp
  41c0d3:	mov    dl,0x56
  41c0d5:	mov    cl,0xd7
  41c0d7:	pushf  
  41c0d8:	inc    ebp
  41c0d9:	fdivrp st(0),st
  41c0db:	push   edi
  41c0dc:	xlat   BYTE PTR ds:[ebx]
  41c0dd:	test   eax,0x59648e5b
  41c0e2:	aam    0x72
  41c0e4:	fwait
  41c0e5:	jge    0x41c08d
  41c0e7:	lods   al,BYTE PTR ds:[esi]
  41c0e8:	(bad)  
  41c0e9:	jle    0x41c14f
  41c0eb:	retf   
  41c0ec:	mov    dh,0x3d
  41c0ee:	shr    DWORD PTR fs:[ebp-0x6d],1
  41c0f2:	cmp    bh,BYTE PTR [eax+ebp*4+0x16a6b1e6]
  41c0f9:	push   DWORD PTR [edi+0x2287a99e]
  41c0ff:	lods   eax,DWORD PTR ds:[esi]
  41c100:	push   ebx
  41c101:	and    dl,BYTE PTR [ebp-0x6b]
  41c104:	cmp    al,0x63
  41c106:	xor    esp,ebx
  41c108:	ficom  WORD PTR [edi+0x4f]
  41c10b:	adc    eax,0xffe24023
  41c110:	leave  
  41c111:	outs   dx,BYTE PTR ds:[esi]
  41c112:	bound  esi,QWORD PTR [edx-0x5a]
  41c115:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c116:	sub    cl,dh
  41c118:	lock pop ecx
  41c11b:	push   ds
  41c11c:	fldcw  WORD PTR cs:[esi]
  41c11f:	das    
  41c120:	xlat   BYTE PTR ds:[ebx]
  41c121:	push   0x4c
  41c123:	dec    esi
  41c124:	jmp    eax
  41c126:	mov    eax,ds:0xf06a7567
  41c12b:	dec    ebp
  41c12c:	jg     0x41c146
  41c12e:	fldenv [eax-0x25]
  41c131:	sbb    eax,0x4fa6d8a5
  41c136:	jne    0x41c0c1
  41c138:	mov    eax,ds:0x92b06ac
  41c13d:	lea    ebx,[edi-0x4ff040f6]
  41c143:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c144:	pop    esp
  41c145:	sbb    ecx,ebp
  41c147:	jl     0x41c106
  41c149:	ja     0x41c16c
  41c14b:	pop    ds
  41c14c:	or     ch,BYTE PTR [ebx+eiz*4]
  41c14f:	jmp    0xd2f5:0x97ce9e83
  41c156:	mov    dh,0x56
  41c158:	xor    DWORD PTR [esi+0x2ae6969a],edi
  41c15e:	pop    ds
  41c15f:	sbb    eax,0x1b78c668
  41c165:	test   eax,0xd4e31f8c
  41c16a:	in     al,dx
  41c16b:	dec    ebx
  41c16c:	cmp    al,cl
  41c16e:	or     BYTE PTR ds:[esi],bl
  41c171:	jo     0x41c1a2
  41c173:	lods   al,BYTE PTR ds:[esi]
  41c174:	jl     0x41c14f
  41c176:	and    DWORD PTR [esi-0xd],esp
  41c179:	scas   al,BYTE PTR es:[edi]
  41c17a:	pusha  
  41c17b:	pop    ss
  41c17c:	sahf   
  41c17d:	fcomp  DWORD PTR [esi+0x79]
  41c180:	mov    bl,0xcb
  41c182:	xor    ah,BYTE PTR [eax]
  41c184:	loope  0x41c122
  41c186:	cmp    al,BYTE PTR [ebx-0x5d460c9e]
  41c18c:	jp     0x41c11d
  41c18e:	xor    dh,bl
  41c190:	jne    0x41c1ab
  41c192:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c193:	(bad)  
  41c194:	jmp    0x41c189
  41c196:	dec    esp
  41c197:	das    
  41c198:	push   cs
  41c199:	fistp  WORD PTR [edi+esi*8+0x71]
  41c19d:	xor    eax,0xa986a0f6
  41c1a2:	sti    
  41c1a3:	sahf   
  41c1a4:	mov    ah,0xbd
  41c1a6:	sub    ecx,esi
  41c1a8:	push   esp
  41c1a9:	cdq    
  41c1aa:	push   edx
  41c1ab:	mov    eax,0xe9474260
  41c1b0:	mov    ds:0x62ae6a63,eax
  41c1b5:	mov    cl,0x1
  41c1b7:	cmp    BYTE PTR [edi],0xd9
  41c1ba:	and    bh,BYTE PTR [edx]
  41c1bc:	lea    ecx,[esi+0x437e88b]
  41c1c2:	pop    ebp
  41c1c3:	mov    gs,ecx
  41c1c5:	hlt    
  41c1c6:	pop    esi
  41c1c7:	ds jge 0x41c163
  41c1ca:	sbb    DWORD PTR [ebx+0x30],esp
  41c1cd:	scas   al,BYTE PTR es:[edi]
  41c1ce:	mov    edi,0x6ed77fed
  41c1d3:	out    dx,al
  41c1d4:	icebp  
  41c1d5:	cmc    
  41c1d6:	dec    esi
  41c1d7:	adc    BYTE PTR [ecx],dl
  41c1d9:	mov    fs:0x4f2192fa,eax
  41c1df:	xchg   esi,eax
  41c1e0:	mov    eax,ds:0x2d0f07d4
  41c1e5:	outs   dx,DWORD PTR ds:[esi]
  41c1e6:	push   ebp
  41c1e7:	stc    
  41c1e8:	inc    edi
  41c1e9:	ret    
  41c1ea:	adc    dh,dl
  41c1ec:	lock or DWORD PTR [edx-0x2711db09],0x50
  41c1f4:	and    bl,dh
  41c1f6:	mov    dh,cl
  41c1f8:	out    0x5,al
  41c1fa:	mov    ah,0x80
  41c1fc:	xor    eax,0xb9566d18
  41c201:	mov    ebx,0xffdbb2bb
  41c206:	popf   
  41c207:	ins    DWORD PTR es:[edi],dx
  41c208:	cli    
  41c209:	push   edi
  41c20a:	adc    ecx,DWORD PTR [esi-0x17954b21]
  41c210:	retf   
  41c211:	mov    edx,0xd02f2562
  41c216:	(bad)  
  41c217:	retf   
  41c218:	in     eax,0x4e
  41c21a:	pusha  
  41c21b:	adc    eax,0x5e49eb90
  41c220:	fucomip st,st(6)
  41c222:	shl    DWORD PTR [edi],0xe9
  41c225:	adc    esi,DWORD PTR [eax]
  41c227:	mov    esi,0x89986459
  41c22c:	loope  0x41c1b7
  41c22e:	inc    eax
  41c22f:	pop    ecx
  41c230:	enter  0x8b86,0x75
  41c234:	jg     0x41c24f
  41c236:	adc    dh,BYTE PTR [eax+ebx*8]
  41c239:	enter  0xfb96,0xc4
  41c23d:	push   eax
  41c23e:	sbb    BYTE PTR [ecx-0x47],cl
  41c241:	pop    ecx
  41c242:	cmp    ah,BYTE PTR [esp+esi*2-0x1e35f6b8]
  41c249:	add    cl,BYTE PTR [eax-0x23d34e97]
  41c24f:	or     al,0x40
  41c251:	inc    ebx
  41c252:	repz fnstsw WORD PTR [eax+0x6c]
  41c256:	and    al,0x5c
  41c258:	mov    ecx,0x86608abd
  41c25d:	jbe    0x41c2da
  41c25f:	cmp    al,0x6f
  41c261:	xor    BYTE PTR [edi],bl
  41c263:	in     al,0xe6
  41c265:	jb     0x41c260
  41c267:	mov    ds:0xd8496046,al
  41c26c:	jg     0x41c21f
  41c26e:	retf   0x5b9e
  41c271:	pusha  
  41c272:	xor    al,0x22
  41c274:	and    al,0x7c
  41c276:	ins    DWORD PTR es:[edi],dx
  41c277:	int    0x7a
  41c279:	adc    bl,BYTE PTR [ebx-0x27]
  41c27c:	cwde   
  41c27d:	push   cs
  41c27e:	mov    al,0xbe
  41c280:	jnp    0x41c2ed
  41c282:	shl    BYTE PTR [esi-0x72fed3cb],0x5
  41c289:	xchg   edi,eax
  41c28a:	dec    ecx
  41c28c:	pop    esi
  41c28d:	jg     0x41c2a5
  41c28f:	test   eax,0xbc28a7a4
  41c294:	xchg   esp,eax
  41c295:	pop    ebp
  41c296:	mov    ds:0x352fc49b,eax
  41c29b:	retf   
  41c29c:	and    al,0xa5
  41c29e:	mov    BYTE PTR [ebx-0x7d],bh
  41c2a1:	push   es
  41c2a2:	scas   eax,DWORD PTR es:[edi]
  41c2a3:	push   cs
  41c2a4:	lods   eax,DWORD PTR ds:[esi]
  41c2a5:	mov    eax,0x360d9f57
  41c2aa:	lods   al,BYTE PTR ds:[esi]
  41c2ab:	(bad)  
  41c2ac:	cmp    ecx,DWORD PTR [ebx-0x57]
  41c2af:	fs xchg ebp,eax
  41c2b1:	push   ebp
  41c2b2:	jg     0x41c263
  41c2b4:	dec    ecx
  41c2b5:	inc    edi
  41c2b6:	mov    dh,0x47
  41c2b8:	sbb    BYTE PTR [ecx],dl
  41c2ba:	sbb    al,ch
  41c2bc:	leave  
  41c2bd:	xchg   esp,eax
  41c2be:	pop    ebp
  41c2bf:	sbb    edi,DWORD PTR [edx]
  41c2c1:	push   es
  41c2c2:	test   al,0xdf
  41c2c4:	jmp    0x41c2d7
  41c2c6:	(bad)  
  41c2c7:	dec    eax
  41c2c8:	(bad)  
  41c2c9:	retf   
  41c2ca:	add    ecx,edi
  41c2cc:	pop    ebx
  41c2cd:	and    dh,al
  41c2cf:	jle    0x41c2a6
  41c2d1:	sahf   
  41c2d2:	(bad)  
  41c2d3:	jo     0x41c308
  41c2d5:	push   ss
  41c2d6:	(bad)  
  41c2d7:	jo     0x41c28d
  41c2d9:	popa   
  41c2da:	js     0x41c29b
  41c2dc:	scas   eax,DWORD PTR es:[edi]
  41c2dd:	jnp    0x41c2d8
  41c2df:	xor    eax,esp
  41c2e1:	outs   dx,DWORD PTR ds:[esi]
  41c2e2:	in     al,dx
  41c2e3:	call   DWORD PTR [eax-0x29e463d6]
  41c2e9:	jmp    0xc6ec244b
  41c2ee:	inc    esi
  41c2ef:	es jno 0x41c29b
  41c2f2:	mov    bl,dh
  41c2f4:	pop    edx
  41c2f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c2f6:	fist   DWORD PTR [ecx]
  41c2f8:	inc    ecx
  41c2f9:	daa    
  41c2fa:	adc    DWORD PTR [eax],ebp
  41c2fc:	mov    esi,?
  41c2fe:	dec    esi
  41c2ff:	push   esp
  41c300:	xor    al,0x7b
  41c302:	add    dl,BYTE PTR [edi-0x45]
  41c305:	test   al,0x34
  41c307:	adc    edx,ebp
  41c309:	and    edx,esi
  41c30b:	mov    esp,0x521aec12
  41c310:	ret    
  41c311:	adc    esp,DWORD PTR [edi+0x6b50e1c2]
  41c317:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c318:	dec    ebx
  41c319:	xchg   esi,eax
  41c31a:	fiadd  DWORD PTR [eax+0x2fc5f71b]
  41c320:	outs   dx,DWORD PTR ds:[esi]
  41c321:	pushf  
  41c322:	fistp  QWORD PTR [eax+ecx*1]
  41c325:	bound  edi,QWORD PTR [ecx+0x3d]
  41c328:	mov    al,ds:0x5821133e
  41c32d:	cli    
  41c32e:	cmp    edi,DWORD PTR [esi+0x2bd3e56f]
  41c334:	add    DWORD PTR [ecx-0x243f11ab],0xe4f5929f
  41c33e:	pop    edi
  41c33f:	dec    edi
  41c340:	(bad)  
  41c341:	xor    DWORD PTR [eax],ecx
  41c343:	js     0x41c314
  41c345:	outs   dx,DWORD PTR ds:[esi]
  41c346:	cdq    
  41c347:	dec    esp
  41c348:	jmp    0x41c334
  41c34a:	push   esp
  41c34b:	push   ds
  41c34c:	imul   edi,edi,0xefb6c0e0
  41c352:	jp     0x41c2dd
  41c354:	lea    ebx,[esi+0x2d]
  41c357:	out    dx,al
  41c358:	xchg   BYTE PTR [esi+0x725f1b0e],dl
  41c35e:	aas    
  41c35f:	mov    eax,ds:0xa838400d
  41c364:	(bad)  
  41c365:	mov    ecx,0x3bcbd3fb
  41c36a:	adc    DWORD PTR [edi-0x11],0xed2d3540
  41c371:	inc    ebp
  41c372:	nop
  41c373:	jl     0x41c3d0
  41c375:	or     DWORD PTR [edi+0x50],0x86beca2
  41c37c:	lahf   
  41c37d:	mov    dh,0xfc
  41c37f:	div    DWORD PTR [esp+eiz*2-0x24]
  41c383:	sub    eax,0x3e5324a8
  41c388:	add    DWORD PTR [ebx-0x7],ebp
  41c38b:	(bad)  
  41c38c:	or     ecx,esp
  41c38e:	int    0x52
  41c390:	inc    ebp
  41c391:	pop    ds
  41c392:	mov    ah,al
  41c394:	xor    al,0x3
  41c396:	call   0x1237a957
  41c39b:	call   0x49524e53
  41c3a0:	xchg   edx,eax
  41c3a1:	loop   0x41c32b
  41c3a3:	mov    cs,edx
  41c3a5:	dec    edx
  41c3a6:	sub    BYTE PTR [ebx+0x3371a9c3],0xa7
  41c3ad:	retf   
  41c3ae:	mov    edx,0x85c05f10
  41c3b3:	or     esi,edx
  41c3b5:	dec    eax
  41c3b6:	push   ss
  41c3b7:	or     BYTE PTR [ecx+ecx*1],0x8c
  41c3bb:	addr16 retf 0xe17a
  41c3bf:	xchg   esi,eax
  41c3c0:	ins    BYTE PTR es:[edi],dx
  41c3c1:	imul   ch
  41c3c3:	fisttp DWORD PTR [eax-0x62d0ac6]
  41c3c9:	mov    ecx,0x8a85
  41c3ce:	sbb    DWORD PTR ds:0x42c00c,0x42a01c
  41c3d8:	xor    cx,WORD PTR [edi+edx*4+0x2]
  41c3dd:	and    DWORD PTR ds:0x428004,0x297a
  41c3e7:	mov    edi,0x3b4b
  41c3ec:	add    DWORD PTR ds:0x42901c,0x4e21
  41c3f6:	add    cx,di
  41c3f9:	and    DWORD PTR ds:0x428024,0x9b5
  41c403:	movzx  ecx,cx
  41c406:	not    DWORD PTR ds:0x42801c
  41c40c:	mov    DWORD PTR [ebp-0x10],ecx
  41c40f:	and    ecx,DWORD PTR ds:0x42a01c
  41c415:	mov    ecx,DWORD PTR [ebp+0x8]
  41c418:	movzx  ecx,WORD PTR [ecx+edx*4]
  41c41c:	xor    ecx,0x8a85
  41c422:	add    ecx,edi
  41c424:	mov    edi,0x7b07
  41c429:	mov    edi,DWORD PTR [ebp-0x10]
  41c42c:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  41c433:	inc    edx
  41c434:	mov    DWORD PTR ds:0x428024,0x7111
  41c43e:	mov    ecx,DWORD PTR [ebp-0x18]
  41c441:	mov    DWORD PTR ds:0x42a014,0x7e65
  41c44b:	cmp    edx,ecx
  41c44d:	mov    DWORD PTR ds:0x42c01c,0x291f
  41c457:	jne    0x41a04b
  41c45d:	mov    ecx,DWORD PTR [ebp-0x14]
  41c460:	add    DWORD PTR ds:0x42c008,edi
  41c466:	mov    edx,DWORD PTR [ebp+0x10]
  41c469:	xor    ecx,eax
  41c46b:	add    DWORD PTR ds:0x42a014,0x777
  41c475:	add    ecx,esi
  41c477:	mov    DWORD PTR [edx],ecx
  41c479:	or     DWORD PTR ds:0x42c014,edi
  41c47f:	mov    ecx,DWORD PTR [ebp-0x14]
  41c482:	xor    ecx,eax
  41c484:	add    ecx,esi
  41c486:	mov    DWORD PTR [ebp-0x20],ecx
  41c489:	mov    DWORD PTR [ebp+0x8],0xf89c85b6
  41c490:	mov    DWORD PTR [ebp-0xc],0xf89c85a6
  41c497:	mov    DWORD PTR ds:0x42a000,0x393
  41c4a1:	mov    DWORD PTR [ebp-0x1c],0xf89c95b6
  41c4a8:	movzx  ecx,WORD PTR ds:0x42a008
  41c4af:	mov    ecx,DWORD PTR [ebp-0xc]
  41c4b2:	mov    DWORD PTR [ebp+0x8],ecx
  41c4b5:	jmp    0x41c6f7
  41c4ba:	mov    ecx,DWORD PTR ds:0x428024
  41c4c0:	add    DWORD PTR ds:0x429008,ecx
  41c4c6:	mov    ecx,DWORD PTR [ebp+0x8]
  41c4c9:	sbb    edx,DWORD PTR ds:0x429018
  41c4cf:	mov    edx,DWORD PTR [ebp-0x8]
  41c4d2:	or     DWORD PTR ds:0x429010,0x42a010
  41c4dc:	xor    ecx,eax
  41c4de:	xor    edx,eax
  41c4e0:	adc    DWORD PTR ds:0x42a014,0x429000
  41c4ea:	sub    ecx,edx
  41c4ec:	adc    edx,DWORD PTR ds:0x42b010
  41c4f2:	sub    ecx,esi
  41c4f4:	mov    DWORD PTR ds:0x428018,0x60a2
  41c4fe:	xor    ecx,eax
  41c500:	mov    DWORD PTR [ebp+0x8],ecx
  41c503:	and    ecx,0x319e
  41c509:	mov    ecx,DWORD PTR [ebp+0x8]
  41c50c:	or     edx,DWORD PTR ds:0x428008
  41c512:	mov    edx,DWORD PTR [ebp-0x64]
  41c515:	lea    ecx,[edx+ecx*1+0x5708f5]
  41c51c:	mov    DWORD PTR [ebp-0x64],ecx
  41c51f:	or     DWORD PTR ds:0x42901c,0xdce
  41c529:	mov    ecx,DWORD PTR [ebp+0x8]
  41c52c:	movzx  edx,BYTE PTR ds:0x429000
  41c533:	xor    DWORD PTR ds:0x42c004,edx
  41c539:	mov    edx,DWORD PTR [ebp-0x60]
  41c53c:	lea    ecx,[edx+ecx*1+0x5708f5]
  41c543:	not    edx
  41c545:	mov    DWORD PTR [ebp-0x60],ecx
  41c548:	xor    ecx,ecx
  41c54a:	or     ecx,DWORD PTR ds:0x428008
  41c550:	adc    ecx,DWORD PTR ds:0x42901c
  41c556:	mov    DWORD PTR ds:0x428008,ecx
  41c55c:	mov    ecx,DWORD PTR [ebp+0x8]
  41c55f:	and    DWORD PTR ds:0x42b018,0x0
  41c569:	mov    edx,DWORD PTR ds:0x42b018
  41c56f:	inc    edx
  41c570:	mov    DWORD PTR ds:0x42b018,edx
  41c576:	cmp    DWORD PTR ds:0x42b018,0x1b
  41c57d:	jne    0x41c5ad
  41c583:	push   0x42c004
  41c588:	push   0x28d8
  41c58d:	push   0x39eb
  41c592:	push   0x42801c
  41c597:	push   0x11e7
  41c59c:	push   0x4234de
  41c5a1:	push   DWORD PTR [ebp-0x1c]
  41c5a4:	push   DWORD PTR [ebp-0x1c]
  41c5a7:	call   DWORD PTR ds:0x424024
  41c5ad:	cmp    DWORD PTR ds:0x42b018,0x17
  41c5b4:	jb     0x41c569
  41c5ba:	or     DWORD PTR ds:0x42a018,0x7d26
  41c5c4:	mov    edx,DWORD PTR [ebp-0x5c]
  41c5c7:	sbb    DWORD PTR ds:0x42c008,0x428018
  41c5d1:	lea    ecx,[edx+ecx*1+0x5708f4]
  41c5d8:	and    DWORD PTR ds:0x42c00c,edx
  41c5de:	mov    DWORD PTR [ebp-0x5c],ecx
  41c5e1:	and    edx,0x6d7b
  41c5e7:	mov    ecx,DWORD PTR [ebp+0x8]
  41c5ea:	mov    edx,DWORD PTR [ebp-0x58]
  41c5ed:	mov    DWORD PTR ds:0x428028,0xea2
  41c5f7:	lea    ecx,[edx+ecx*1+0x5708fb]
  41c5fe:	mov    DWORD PTR [ebp-0x58],ecx
  41c601:	mov    DWORD PTR ds:0x429010,0x14
  41c60b:	cmp    DWORD PTR ds:0x429010,0x0
  41c612:	je     0x41c6a5
  41c618:	cmp    DWORD PTR ds:0x429010,0x4
  41c61f:	jne    0x41c636
  41c625:	push   0x3e6d
  41c62a:	push   DWORD PTR [ebp-0x28]
  41c62d:	push   DWORD PTR [ebp-0x10]
  41c630:	call   DWORD PTR ds:0x424028
  41c636:	cmp    DWORD PTR ds:0x429010,0x5
  41c63d:	jne    0x41c652
  41c643:	xor    edx,edx
  41c645:	add    edx,DWORD PTR ds:0x429010
  41c64b:	dec    edx
  41c64c:	mov    DWORD PTR ds:0x429010,edx
  41c652:	mov    edx,DWORD PTR ds:0x429010
  41c658:	dec    edx
  41c659:	mov    DWORD PTR ds:0x429010,edx
  41c65f:	jmp    0x41c60b
  41c664:	and    DWORD PTR ds:0x428018,0x0
  41c66e:	mov    edx,DWORD PTR ds:0x428018
  41c674:	inc    edx
  41c675:	mov    DWORD PTR ds:0x428018,edx
  41c67b:	cmp    DWORD PTR ds:0x428018,0x20
  41c682:	jne    0x41c698
  41c688:	push   0x4235ed
  41c68d:	push   0x423604
  41c692:	call   DWORD PTR ds:0x424030
  41c698:	cmp    DWORD PTR ds:0x428018,0x19
  41c69f:	jb     0x41c66e
  41c6a5:	mov    ecx,DWORD PTR [ebp+0x8]
  41c6a8:	mov    edx,DWORD PTR [ebp-0x54]
  41c6ab:	adc    DWORD PTR ds:0x429000,0x42b000
  41c6b5:	lea    ecx,[edx+ecx*1+0x5708fa]
  41c6bc:	mov    DWORD PTR [ebp-0x54],ecx
  41c6bf:	not    edx
  41c6c1:	mov    ecx,DWORD PTR [ebp+0x8]
  41c6c4:	mov    edx,DWORD PTR ds:0x42901c
  41c6ca:	and    edx,DWORD PTR ds:0x42c004
  41c6d0:	mov    DWORD PTR ds:0x42901c,edx
  41c6d6:	mov    edx,DWORD PTR [ebp-0x50]
  41c6d9:	sbb    DWORD PTR ds:0x428010,0x6c9
  41c6e3:	lea    ecx,[edx+ecx*1+0x5708f9]
  41c6ea:	or     DWORD PTR ds:0x42c018,0x5b89
  41c6f4:	mov    DWORD PTR [ebp-0x50],ecx
  41c6f7:	mov    ecx,DWORD PTR [ebp+0x8]
  41c6fa:	xor    DWORD PTR ds:0x42c000,0x390a
  41c704:	xor    ecx,eax
  41c706:	sbb    DWORD PTR ds:0x428020,0x44b0
  41c710:	add    ecx,esi
  41c712:	jne    0x41c4ba
  41c718:	jmp    0x41ed36
  41c71d:	xor    edx,edx
  41c71f:	add    edx,DWORD PTR ds:0x42176a
  41c725:	mov    ecx,DWORD PTR ds:0x4234ca
  41c72b:	sub    ecx,edx
  41c72d:	and    edx,DWORD PTR [edx+ecx*1]
  41c730:	mov    ecx,DWORD PTR [ebp-0x1c]
  41c733:	sub    DWORD PTR ds:0x42b00c,0x42a008
  41c73d:	mov    edx,DWORD PTR [ebp-0x8]
  41c740:	xor    ecx,eax
  41c742:	or     DWORD PTR ds:0x42c014,0x2e7c
  41c74c:	xor    edx,eax
  41c74e:	sub    ecx,edx
  41c750:	sub    ecx,esi
  41c752:	xor    ecx,eax
  41c754:	mov    DWORD PTR [ebp-0x1c],ecx
  41c757:	mov    ecx,0x464b
  41c75c:	mov    ecx,DWORD PTR [ebp-0xc]
  41c75f:	mov    DWORD PTR [ebp+0x8],ecx
  41c762:	jmp    0x41c827
  41c767:	and    DWORD PTR ds:0x42a008,0x0
  41c771:	jmp    0x41c783
  41c776:	mov    edi,DWORD PTR ds:0x42a008
  41c77c:	inc    edi
  41c77d:	mov    DWORD PTR ds:0x42a008,edi
  41c783:	cmp    DWORD PTR ds:0x42a008,0x11
  41c78a:	jae    0x41c7ee
  41c790:	cmp    DWORD PTR ds:0x42a008,0x6
  41c797:	jne    0x41c7b9
  41c79d:	push   DWORD PTR [ebp-0x14]
  41c7a0:	push   DWORD PTR [ebp-0x18]
  41c7a3:	push   DWORD PTR [ebp-0x10]
  41c7a6:	push   DWORD PTR [ebp-0x10]
  41c7a9:	push   0x7583
  41c7ae:	push   0x42b000
  41c7b3:	call   DWORD PTR ds:0x424038
  41c7b9:	cmp    DWORD PTR ds:0x42a008,0x5
  41c7c0:	jne    0x41c7d5
  41c7c6:	xor    edi,edi
  41c7c8:	or     edi,DWORD PTR ds:0x42a008
  41c7ce:	inc    edi
  41c7cf:	mov    DWORD PTR ds:0x42a008,edi
  41c7d5:	jmp    0x41c776
  41c7da:	xor    ecx,ecx
  41c7dc:	add    ecx,DWORD PTR ds:0x42b000
  41c7e2:	adc    ecx,DWORD PTR ds:0x42b008
  41c7e8:	mov    DWORD PTR ds:0x42b000,ecx
  41c7ee:	mov    ecx,DWORD PTR [ebp+0x8]
  41c7f1:	mov    edx,DWORD PTR ds:0x42c018
  41c7f7:	sbb    DWORD PTR ds:0x42a01c,edx
  41c7fd:	mov    edx,DWORD PTR [ebp-0x8]
  41c800:	xor    ecx,eax
  41c802:	xor    edx,eax
  41c804:	sub    ecx,edx
  41c806:	sub    ecx,esi
  41c808:	xor    ecx,eax
  41c80a:	mov    DWORD PTR [ebp+0x8],ecx
  41c80d:	mov    ecx,DWORD PTR [ebp+0x8]
  41c810:	mov    edx,DWORD PTR [ebp+0x8]
  41c813:	imul   edx,edx,0x5708f5
  41c819:	xor    ecx,eax
  41c81b:	add    ecx,esi
  41c81d:	lea    ecx,[ebp+ecx*4-0x64]
  41c821:	mov    edi,DWORD PTR [ecx]
  41c823:	add    edx,edi
  41c825:	mov    DWORD PTR [ecx],edx
  41c827:	mov    ecx,DWORD PTR [ebp+0x8]
  41c82a:	xor    ecx,eax
  41c82c:	add    ecx,esi
  41c82e:	jne    0x41c767
  41c834:	mov    ecx,DWORD PTR [ebp-0x20]
  41c837:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  41c83e:	mov    dl,BYTE PTR [ebp-0x1]
  41c841:	cmp    cl,dl
  41c843:	je     0x41c91c
  41c849:	mov    ecx,DWORD PTR [ebp-0x20]
  41c84c:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  41c853:	mov    edx,DWORD PTR [ebp+0xc]
  41c856:	cmp    cl,BYTE PTR [edx]
  41c858:	jne    0x41ed48
  41c85e:	mov    ecx,DWORD PTR [ebp-0x14]
  41c861:	mov    edx,DWORD PTR [ebp+0xc]
  41c864:	movsx  edx,BYTE PTR [edx]
  41c867:	xor    ecx,eax
  41c869:	add    ecx,esi
  41c86b:	cmp    edx,ecx
  41c86d:	mov    ecx,DWORD PTR [ebp-0xc]
  41c870:	mov    DWORD PTR [ebp+0x8],ecx
  41c873:	mov    ecx,DWORD PTR [ebp+0x8]
  41c876:	je     0x42113d
  41c87c:	jmp    0x41c8b1
  41c881:	mov    ecx,DWORD PTR [ebp+0x8]
  41c884:	mov    edx,DWORD PTR [ebp-0x8]
  41c887:	xor    ecx,eax
  41c889:	xor    edx,eax
  41c88b:	sub    ecx,edx
  41c88d:	sub    ecx,esi
  41c88f:	xor    ecx,eax
  41c891:	mov    DWORD PTR [ebp+0x8],ecx
  41c894:	mov    ecx,DWORD PTR [ebp+0x8]
  41c897:	mov    edx,DWORD PTR [ebp+0x8]
  41c89a:	xor    ecx,eax
  41c89c:	imul   edx,edx,0x5708f5
  41c8a2:	add    ecx,esi
  41c8a4:	lea    ecx,[ebp+ecx*4-0x64]
  41c8a8:	mov    edi,DWORD PTR [ecx]
  41c8aa:	add    edx,edi
  41c8ac:	mov    DWORD PTR [ecx],edx
  41c8ae:	mov    ecx,DWORD PTR [ebp+0x8]
  41c8b1:	xor    ecx,eax
  41c8b3:	add    ecx,esi
  41c8b5:	jne    0x41c881
  41c8bb:	mov    ecx,DWORD PTR [ebp-0x14]
  41c8be:	mov    edx,DWORD PTR [ebp+0x8]
  41c8c1:	xor    ecx,eax
  41c8c3:	xor    edx,eax
  41c8c5:	add    ecx,esi
  41c8c7:	add    edx,esi
  41c8c9:	cmp    ecx,edx
  41c8cb:	jae    0x41c961
  41c8d1:	lea    edx,[ecx-0x3272db]
  41c8d7:	mov    DWORD PTR [ebp-0x18],edx
  41c8da:	mov    edi,DWORD PTR [ebp-0x18]
  41c8dd:	mov    DWORD PTR [ebp-0x24],0x705fd08
  41c8e4:	lea    edx,[ebp-0x24]
  41c8e7:	mov    DWORD PTR [ebp-0x10],edx
  41c8ea:	mov    edx,DWORD PTR [ebp-0x10]
  41c8ed:	add    DWORD PTR [edx],0x705fa08
  41c8f3:	mov    ebx,DWORD PTR [ebp-0x10]
  41c8f6:	xor    edi,eax
  41c8f8:	add    edi,DWORD PTR [ebx]
  41c8fa:	lea    edx,[ebp+ecx*4-0x64]
  41c8fe:	mov    ebx,DWORD PTR [edx]
  41c900:	xor    edi,ebx
  41c902:	mov    DWORD PTR [edx],edi
  41c904:	mov    edx,DWORD PTR [ebp+0x8]
  41c907:	xor    edx,eax
  41c909:	inc    ecx
  41c90a:	inc    DWORD PTR [ebp-0x18]
  41c90d:	add    edx,esi
  41c90f:	cmp    ecx,edx
  41c911:	jb     0x41c8da
  41c917:	jmp    0x41c961
  41c91c:	mov    ecx,DWORD PTR [ebp-0xc]
  41c91f:	mov    DWORD PTR [ebp+0x8],ecx
  41c922:	jmp    0x41c954
  41c927:	mov    ecx,DWORD PTR [ebp+0x8]
  41c92a:	mov    edx,DWORD PTR [ebp-0x8]
  41c92d:	xor    ecx,eax
  41c92f:	xor    edx,eax
  41c931:	sub    ecx,edx
  41c933:	sub    ecx,esi
  41c935:	xor    ecx,eax
  41c937:	mov    DWORD PTR [ebp+0x8],ecx
  41c93a:	mov    ecx,DWORD PTR [ebp+0x8]
  41c93d:	mov    edx,DWORD PTR [ebp+0x8]
  41c940:	imul   edx,edx,0x5708f5
  41c946:	xor    ecx,eax
  41c948:	add    ecx,esi
  41c94a:	lea    ecx,[ebp+ecx*4-0x64]
  41c94e:	mov    edi,DWORD PTR [ecx]
  41c950:	add    edx,edi
  41c952:	mov    DWORD PTR [ecx],edx
  41c954:	mov    ecx,DWORD PTR [ebp+0x8]
  41c957:	xor    ecx,eax
  41c959:	add    ecx,esi
  41c95b:	jne    0x41c927
  41c961:	mov    ecx,DWORD PTR [ebp-0xc]
  41c964:	mov    DWORD PTR [ebp+0x8],ecx
  41c967:	jmp    0x41ed14
  41c96c:	mov    ecx,DWORD PTR [ebp+0x8]
  41c96f:	mov    edx,DWORD PTR [ebp-0x8]
  41c972:	xor    ecx,eax
  41c974:	xor    edx,eax
  41c976:	sub    ecx,edx
  41c978:	jmp    0x41ecf3
  41c97d:	rcr    DWORD PTR [esi+0x158d36fd],1
  41c983:	imul   esp,DWORD PTR [ebp-0x6e],0x8480d858
  41c98a:	jae    0x41c964
  41c98c:	mov    ds:0x6261fde1,eax
  41c991:	add    al,0x5f
  41c993:	bound  esp,QWORD PTR [edx+0x2d]
  41c996:	(bad)  
  41c997:	loop   0x41c9cd
  41c999:	adc    bh,bl
  41c99b:	adc    DWORD PTR [esi-0x538d5591],ecx
  41c9a1:	jb     0x41c9f9
  41c9a3:	xchg   esp,eax
  41c9a4:	pushw  ds
  41c9a6:	pop    ds
  41c9a7:	cli    
  41c9a8:	in     al,0x9e
  41c9aa:	jp     0x41c97c
  41c9ac:	pusha  
  41c9ad:	fst    st(7)
  41c9af:	mov    esp,0x66da0705
  41c9b4:	loopne 0x41c9de
  41c9b6:	sbb    DWORD PTR [ebp+0x58bebf20],ecx
  41c9bc:	ret    0xaf4e
  41c9bf:	(bad)  
  41c9c0:	(bad)  
  41c9c1:	push   esi
  41c9c2:	(bad)  [ecx+0x7b]
  41c9c5:	out    0x4a,eax
  41c9c7:	mov    eax,ds:0x153818f7
  41c9cc:	pop    esp
  41c9cd:	out    0x2e,al
  41c9cf:	pushf  
  41c9d0:	mov    ds:0xb95d6932,al
  41c9d5:	pop    es
  41c9d6:	clc    
  41c9d7:	je     0x41c964
  41c9d9:	lahf   
  41c9da:	stos   BYTE PTR es:[edi],al
  41c9db:	(bad)  
  41c9dc:	xor    BYTE PTR [edi],bl
  41c9de:	push   ecx
  41c9df:	xchg   ebx,eax
  41c9e0:	daa    
  41c9e1:	fdivp  st(6),st
  41c9e3:	cmp    eax,esp
  41c9e5:	mov    eax,ds:0x14caf578
  41c9ea:	test   eax,0xc12e3c1
  41c9ef:	(bad)  
  41c9f0:	jb     0x41ca3e
  41c9f2:	outs   dx,DWORD PTR ds:[esi]
  41c9f3:	stc    
  41c9f4:	xchg   ebx,eax
  41c9f5:	dec    ecx
  41c9f6:	sbb    BYTE PTR [edi],bl
  41c9f8:	(bad)  
  41c9fa:	or     al,0xbb
  41c9fc:	jb     0x41ca20
  41c9fe:	pusha  
  41c9ff:	fst    QWORD PTR [esi+0x3]
  41ca02:	(bad)  
  41ca03:	pushf  
  41ca04:	fmul   DWORD PTR [esi+0x48]
  41ca07:	mov    esi,0x4704deaf
  41ca0c:	mov    edi,0xc3af9d6a
  41ca11:	xchg   esp,eax
  41ca12:	repz ret 
  41ca14:	idiv   DWORD PTR [edx+0x7d844a26]
  41ca1a:	xchg   BYTE PTR [edx],ch
  41ca1c:	rcr    BYTE PTR [ebx],1
  41ca1e:	xor    eax,0x71b040bd
  41ca23:	lds    esi,FWORD PTR [ebx+0x16]
  41ca26:	pop    esp
  41ca27:	in     al,0x8e
  41ca29:	sub    BYTE PTR [edx+0x3c5017fe],ah
  41ca2f:	xchg   edx,eax
  41ca30:	stos   DWORD PTR es:[edi],eax
  41ca31:	mov    esp,0xd603ce79
  41ca36:	xor    eax,0xde647a7d
  41ca3b:	xor    dh,BYTE PTR [ecx+esi*1]
  41ca3e:	mov    esp,0x2be333e2
  41ca43:	je     0x41c9cb
  41ca45:	dec    ebx
  41ca46:	das    
  41ca47:	in     al,dx
  41ca48:	mov    gs,WORD PTR [edx]
  41ca4a:	arpl   WORD PTR [ebx-0x2a4a5c80],bx
  41ca50:	adc    eax,edi
  41ca52:	add    al,0x81
  41ca54:	stos   DWORD PTR es:[edi],eax
  41ca55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca56:	daa    
  41ca57:	outs   dx,DWORD PTR ds:[esi]
  41ca58:	jo     0x41ca56
  41ca5a:	or     DWORD PTR [ecx],esp
  41ca5c:	cld    
  41ca5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca5e:	or     esp,DWORD PTR [esi-0x5]
  41ca61:	out    dx,al
  41ca62:	test   eax,0x6f6b996
  41ca67:	sbb    bl,BYTE PTR [edi]
  41ca69:	pop    edx
  41ca6a:	add    al,BYTE PTR [eax]
  41ca6c:	add    ebp,ebx
  41ca6e:	push   es
  41ca6f:	sub    BYTE PTR [esi],bl
  41ca71:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca73:	dec    eax
  41ca74:	mov    bl,0xf4
  41ca76:	daa    
  41ca77:	adc    al,0x32
  41ca79:	xchg   ebp,eax
  41ca7a:	dec    DWORD PTR [eax+0x5b7ee701]
  41ca80:	lods   eax,DWORD PTR ds:[esi]
  41ca81:	fcmovu st,st(5)
  41ca83:	cmp    al,0xf4
  41ca85:	or     esi,DWORD PTR [edx+0x582e0396]
  41ca8b:	push   cs
  41ca8c:	inc    ecx
  41ca8d:	cdq    
  41ca8e:	xchg   edi,eax
  41ca8f:	scas   al,BYTE PTR es:[edi]
  41ca90:	push   esi
  41ca91:	outs   dx,DWORD PTR ds:[esi]
  41ca92:	mov    ah,0x30
  41ca94:	enter  0xc22a,0xf1
  41ca98:	pop    edi
  41ca99:	dec    ebx
  41ca9a:	jnp    0x41cb05
  41ca9c:	push   0x64
  41ca9e:	inc    esp
  41ca9f:	lods   al,BYTE PTR ds:[esi]
  41caa0:	aam    0x9d
  41caa2:	rcr    DWORD PTR [ebx-0xc],0x2f
  41caa6:	ja     0x41caca
  41caa8:	jo     0x41cb25
  41caaa:	pushf  
  41caab:	mov    ?,edx
  41caad:	mov    al,0x2f
  41caaf:	and    DWORD PTR [eax-0x14],0xe9c6d44f
  41cab6:	pop    ss
  41cab7:	(bad)  
  41cab8:	cmp    al,0x78
  41caba:	inc    ebp
  41cabb:	daa    
  41cabc:	inc    ecx
  41cabd:	jmp    0x41cb09
  41cabf:	mov    ah,0xf8
  41cac1:	(bad)  
  41cac2:	pop    esi
  41cac3:	or     BYTE PTR [eax+0x7ea403ec],0x39
  41caca:	jecxz  0x41ca74
  41cacc:	add    BYTE PTR [ebp+0xc],0xf3
  41cad0:	pop    eax
  41cad1:	out    dx,al
  41cad2:	fnstsw WORD PTR [edx-0x22f3049a]
  41cad8:	xlat   BYTE PTR ds:[ebx]
  41cad9:	xchg   esp,eax
  41cada:	mov    dl,0x3c
  41cadc:	xor    DWORD PTR [ebx-0x7d],ebp
  41cadf:	mov    bl,0x7d
  41cae1:	scas   eax,DWORD PTR es:[edi]
  41cae2:	pop    es
  41cae3:	or     DWORD PTR [ecx-0x16],ecx
  41cae6:	xchg   BYTE PTR [edi+0x8],cl
  41cae9:	scas   eax,DWORD PTR es:[edi]
  41caea:	push   edx
  41caeb:	retf   
  41caec:	and    eax,edi
  41caee:	cld    
  41caef:	jbe    0x41cb10
  41caf1:	jbe    0x41cabb
  41caf3:	cwde   
  41caf4:	adc    DWORD PTR [edi+0x69],0x703a8360
  41cafb:	and    DWORD PTR [esi-0x76b9e8e0],esp
  41cb01:	or     DWORD PTR [edx],ebx
  41cb03:	xor    BYTE PTR [eax-0xd],bl
  41cb06:	ret    
  41cb07:	and    edx,edi
  41cb09:	jge    0x41caaf
  41cb0b:	jne    0x41cb1e
  41cb0d:	lods   eax,DWORD PTR ds:[esi]
  41cb0e:	sub    ebp,DWORD PTR [edx-0x368b1ae1]
  41cb14:	mov    ds:0xb050e231,al
  41cb19:	lahf   
  41cb1a:	icebp  
  41cb1b:	sub    dl,BYTE PTR [ebp-0x14]
  41cb1e:	ret    
  41cb1f:	xlat   BYTE PTR ds:[ebx]
  41cb20:	imul   esp,DWORD PTR [eax+0xd68133c],0xbd34d92a
  41cb2a:	outs   dx,BYTE PTR ds:[esi]
  41cb2b:	div    BYTE PTR [ebx-0x4c29c7cb]
  41cb31:	les    esp,FWORD PTR [esi+0x7e]
  41cb34:	xchg   DWORD PTR [ebx*4-0x13ca1b14],eax
  41cb3b:	repz pop ebp
  41cb3d:	neg    BYTE PTR [edi+eax*4+0x7c4e3a41]
  41cb44:	push   edx
  41cb45:	not    DWORD PTR gs:[ebx+0x78c3a38]
  41cb4c:	outs   dx,DWORD PTR ds:[esi]
  41cb4d:	int    0x6a
  41cb4f:	inc    ebp
  41cb50:	inc    eax
  41cb51:	and    ebx,DWORD PTR [esi]
  41cb53:	and    esp,DWORD PTR [ebp-0x5b3377d0]
  41cb59:	push   eax
  41cb5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb5b:	das    
  41cb5c:	push   esi
  41cb5d:	jecxz  0x41cb4d
  41cb5f:	dec    ebp
  41cb60:	lock adc al,0xb9
  41cb63:	sub    al,0x79
  41cb65:	pop    ss
  41cb66:	mov    ch,0xce
  41cb68:	outs   dx,DWORD PTR ds:[esi]
  41cb69:	push   edx
  41cb6a:	adc    ch,ah
  41cb6c:	fwait
  41cb6d:	push   eax
  41cb6e:	out    0xb8,al
  41cb70:	pop    edx
  41cb71:	test   DWORD PTR [ebx+0x22],ebx
  41cb74:	outs   dx,DWORD PTR ds:[esi]
  41cb75:	adc    dh,BYTE PTR [esi+0x26]
  41cb78:	cmp    DWORD PTR [esi-0x527a8cdc],0x37c962a3
  41cb82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb83:	sub    BYTE PTR [ebx+eax*2+0x7e6c1bcc],bh
  41cb8a:	mov    ch,0xdf
  41cb8c:	inc    edi
  41cb8d:	jge    0x41cbf6
  41cb8f:	jmp    0x8eeb92c6
  41cb94:	jg     0x41cb47
  41cb96:	mov    eax,ds:0xb3ed93d1
  41cb9b:	mov    al,0xad
  41cb9d:	fcom   DWORD PTR [eax-0x3a]
  41cba0:	aad    0x6
  41cba2:	fldcw  WORD PTR [ecx+0x25]
  41cba5:	inc    eax
  41cba6:	fsubrp st(7),st
  41cba8:	in     al,0x41
  41cbaa:	mov    BYTE PTR [eax-0x50182a38],bh
  41cbb0:	test   DWORD PTR [eax-0x1f],ecx
  41cbb3:	jl     0x41cb7d
  41cbb5:	jg     0x41cbd3
  41cbb7:	sbb    eax,0x647716cc
  41cbbc:	dec    esi
  41cbbd:	loope  0x41cb95
  41cbbf:	out    0x9b,al
  41cbc1:	shr    DWORD PTR [ecx+0x3988e64e],0x95
  41cbc8:	sbb    eax,0x644f9c3
  41cbcd:	aam    0x10
  41cbcf:	pusha  
  41cbd0:	push   es
  41cbd1:	daa    
  41cbd2:	sbb    edi,esi
  41cbd4:	mov    al,0x60
  41cbd6:	push   ecx
  41cbd7:	inc    ebp
  41cbd8:	fsub   DWORD PTR [edx+eiz*1+0x6c]
  41cbdc:	fcmovbe st,st(4)
  41cbde:	xor    esi,esi
  41cbe0:	ret    
  41cbe1:	xchg   ebx,eax
  41cbe2:	or     DWORD PTR [eax-0xc43b51],edi
  41cbe8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cbe9:	pop    edx
  41cbea:	fst    DWORD PTR [edi+edx*8]
  41cbed:	adc    ecx,DWORD PTR [edi-0x652e4f44]
  41cbf3:	jo     0x41cc5a
  41cbf5:	pop    ss
  41cbf6:	mov    dl,0x34
  41cbf8:	dec    edx
  41cbf9:	xor    BYTE PTR [esi+0x2d773bfc],dl
  41cbff:	daa    
  41cc00:	ja     0x41cc67
  41cc02:	pusha  
  41cc03:	daa    
  41cc04:	(bad)  
  41cc05:	(bad)  
  41cc06:	js     0x41cc24
  41cc08:	sbb    BYTE PTR ds:0xe04b030a,al
  41cc0e:	sbb    ah,BYTE PTR [ebx-0x175ce32c]
  41cc14:	lds    esp,FWORD PTR [ecx-0x35]
  41cc17:	imul   ecx,DWORD PTR [esi-0xd],0x36
  41cc1b:	pop    ebx
  41cc1c:	repnz mov es,WORD PTR [ecx]
  41cc1f:	dec    ebx
  41cc20:	jmp    0xbd16:0xa6e2758c
  41cc27:	jle    0x41cc56
  41cc29:	push   cs
  41cc2a:	dec    DWORD PTR [ecx+0x643b5bf2]
  41cc30:	scas   al,BYTE PTR es:[edi]
  41cc31:	push   es
  41cc32:	mov    cl,0x9d
  41cc34:	ret    
  41cc35:	xchg   DWORD PTR [ebp+ecx*4-0x26],esi
  41cc39:	or     BYTE PTR [esi+edx*8+0x43],dh
  41cc3d:	in     al,dx
  41cc3e:	loopne 0x41cbec
  41cc40:	cmc    
  41cc41:	mov    esi,DWORD PTR [esi+0x7e]
  41cc44:	jmp    0x41cc49
  41cc46:	push   0x2ddc64fa
  41cc4b:	xor    BYTE PTR [edi+esi*8+0x4a],cl
  41cc4f:	scas   al,BYTE PTR es:[edi]
  41cc50:	sbb    al,0x8e
  41cc52:	push   ebx
  41cc53:	in     al,dx
  41cc54:	sar    ch,1
  41cc56:	dec    ebx
  41cc57:	add    al,BYTE PTR [ebp+0x5f]
  41cc5a:	fs mov edi,0xef0a3269
  41cc60:	test   eax,0x5c6a936a
  41cc65:	aaa    
  41cc66:	mov    eax,ds:0x9f05caac
  41cc6b:	ins    BYTE PTR es:[edi],dx
  41cc6c:	stos   DWORD PTR es:[edi],eax
  41cc6d:	cwde   
  41cc6e:	mov    ebp,0x4802782f
  41cc73:	jge    0x41cc91
  41cc75:	mov    edx,0x276d40e3
  41cc7a:	push   eax
  41cc7b:	mov    edi,esp
  41cc7d:	add    al,0x76
  41cc7f:	popa   
  41cc80:	out    0x36,eax
  41cc82:	mov    cl,0xb7
  41cc84:	pop    esi
  41cc85:	push   es
  41cc86:	ror    BYTE PTR [ebp-0x70dc8f38],0xa5
  41cc8d:	imul   esi,esp,0x2fca6b67
  41cc93:	mov    ch,0x76
  41cc95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc96:	mov    eax,0x40587403
  41cc9b:	lds    ebp,FWORD PTR [esi*1-0x783183d7]
  41cca2:	test   eax,0xa0999ece
  41cca7:	jne    0x41ccce
  41cca9:	sub    ebp,DWORD PTR [esi-0x5612f5b7]
  41ccaf:	jp     0x41cc97
  41ccb1:	icebp  
  41ccb2:	aaa    
  41ccb3:	fdiv   DWORD PTR [ecx-0x4b88b7d]
  41ccb9:	dec    esp
  41ccba:	xchg   DWORD PTR [ebx-0x4dc70271],esi
  41ccc0:	xchg   esp,eax
  41ccc1:	or     eax,0x55b9b19b
  41ccc6:	pop    ecx
  41ccc7:	adc    DWORD PTR es:[esi-0x7bb4c586],edx
  41ccce:	sub    bl,BYTE PTR [ecx-0x8723c1]
  41ccd4:	shl    BYTE PTR [esi+0x7966c6f3],1
  41ccda:	xor    ch,BYTE PTR [esi+0x1d]
  41ccdd:	iret   
  41ccde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ccdf:	jl     0x41cc6c
  41cce1:	and    DWORD PTR [ecx],esi
  41cce3:	(bad)  
  41cce4:	repnz xor DWORD PTR [edi+0x62e2e2de],esi
  41cceb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ccec:	add    BYTE PTR [edi-0x76],ah
  41ccef:	push   esi
  41ccf0:	push   esi
  41ccf1:	inc    ecx
  41ccf2:	int3   
  41ccf3:	add    al,0xfd
  41ccf5:	and    dl,ch
  41ccf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ccf8:	or     al,BYTE PTR [edx+0x3fa04136]
  41ccfe:	mov    bl,0x8c
  41cd00:	push   ebp
  41cd01:	clc    
  41cd02:	jne    0x41cd52
  41cd04:	clc    
  41cd05:	and    dh,BYTE PTR [ecx+0x37]
  41cd08:	push   esi
  41cd09:	pushf  
  41cd0a:	(bad)  
  41cd0b:	lods   al,BYTE PTR ds:[esi]
  41cd0c:	add    ah,ah
  41cd0e:	stos   DWORD PTR es:[edi],eax
  41cd0f:	inc    esi
  41cd10:	call   0x9425:0x6f91068b
  41cd17:	jne    0x41cca0
  41cd19:	pop    esi
  41cd1a:	push   ds
  41cd1b:	push   ss
  41cd1c:	popa   
  41cd1d:	xor    esp,DWORD PTR [ebp+ebp*1+0x4e]
  41cd21:	aas    
  41cd22:	sub    BYTE PTR [ecx],0xc5
  41cd25:	(bad)  
  41cd26:	push   ds
  41cd27:	outs   dx,DWORD PTR ds:[esi]
  41cd28:	adc    edi,DWORD PTR [ebx+0x17f1cb58]
  41cd2e:	dec    ecx
  41cd2f:	outs   dx,DWORD PTR ds:[esi]
  41cd30:	popf   
  41cd31:	inc    esp
  41cd32:	pop    edi
  41cd33:	inc    edx
  41cd34:	std    
  41cd35:	cld    
  41cd36:	mov    al,0x60
  41cd38:	push   ebx
  41cd39:	or     al,0x1d
  41cd3b:	aaa    
  41cd3c:	mov    eax,ds:0xaecc3202
  41cd41:	push   ss
  41cd42:	outs   dx,DWORD PTR ds:[esi]
  41cd43:	repz enter 0x5870,0x63
  41cd48:	daa    
  41cd49:	(bad)  
  41cd4a:	and    BYTE PTR [ecx],ch
  41cd4c:	popf   
  41cd4d:	call   0x9e30455f
  41cd52:	push   esi
  41cd53:	enter  0x6354,0xe5
  41cd57:	xor    edx,DWORD PTR [edi-0x37]
  41cd5a:	addr16 out dx,eax
  41cd5c:	fwait
  41cd5d:	lock adc eax,0xd8c505c8
  41cd63:	(bad)  
  41cd64:	stc    
  41cd65:	call   0xdf87:0x43e32efa
  41cd6c:	loopne 0x41cdc2
  41cd6e:	xor    edx,DWORD PTR [esp+ebp*4]
  41cd71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd72:	pop    eax
  41cd73:	dec    edx
  41cd74:	adc    cl,bl
  41cd76:	cld    
  41cd77:	dec    edx
  41cd78:	(bad)  [edi+0x52]
  41cd7b:	pop    ebx
  41cd7c:	pushf  
  41cd7d:	inc    ecx
  41cd7e:	in     eax,dx
  41cd7f:	mov    ah,0x24
  41cd81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd82:	inc    esi
  41cd83:	push   ds
  41cd84:	mov    bl,bh
  41cd86:	cmp    ch,BYTE PTR [ebp-0x43]
  41cd89:	and    BYTE PTR [ebx],cl
  41cd8b:	data16 std 
  41cd8d:	cmp    eax,0x5e7640bd
  41cd92:	(bad)  
  41cd93:	mov    bh,0x8c
  41cd95:	bound  edx,QWORD PTR [edi]
  41cd97:	in     eax,0x53
  41cd99:	js     0x41cd6e
  41cd9b:	(bad)  
  41cd9c:	sbb    dl,BYTE PTR [ecx]
  41cd9e:	xor    eax,0x2700ef9d
  41cda3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cda4:	mov    DWORD PTR [ecx+eax*4],eax
  41cda7:	sub    DWORD PTR [ebp+0x48768fb8],eax
  41cdad:	bound  ebp,QWORD PTR [edx]
  41cdaf:	js     0x41cd6b
  41cdb1:	jmp    0x41cdd2
  41cdb3:	neg    BYTE PTR ds:0x86514f3
  41cdb9:	push   0x47
  41cdbb:	imul   edi,DWORD PTR [eax-0x4922b091],0xffffff9f
  41cdc2:	hlt    
  41cdc3:	sbb    al,0x76
  41cdc5:	pop    esi
  41cdc6:	push   eax
  41cdc7:	in     al,0x19
  41cdc9:	xchg   ch,dh
  41cdcb:	push   ecx
  41cdcc:	loopne 0x41cd56
  41cdce:	pop    es
  41cdcf:	mov    esp,0x75bfb9de
  41cdd4:	leave  
  41cdd5:	lahf   
  41cdd6:	clc    
  41cdd7:	je     0x41cde8
  41cdd9:	fisttp QWORD PTR [eax-0x3d]
  41cddc:	mov    edx,0x4a740b3a
  41cde1:	or     dl,BYTE PTR [esi-0x38]
  41cde4:	aaa    
  41cde5:	sbb    esp,eax
  41cde7:	jge    0x41ce5e
  41cde9:	scas   al,BYTE PTR es:[edi]
  41cdea:	ja     0x41cdef
  41cdec:	jnp    0x41cdbd
  41cdee:	or     eax,DWORD PTR [edx]
  41cdf0:	sbb    BYTE PTR [esi+0x2b4c173b],ch
  41cdf6:	scas   eax,DWORD PTR es:[edi]
  41cdf7:	sub    BYTE PTR [edi],cl
  41cdf9:	pop    ecx
  41cdfa:	inc    esi
  41cdfb:	jb     0x41ce30
  41cdfd:	jmp    0x41ce01
  41cdff:	mov    ch,0xb0
  41ce01:	cmc    
  41ce02:	(bad)  
  41ce03:	outs   dx,DWORD PTR ds:[esi]
  41ce04:	ins    BYTE PTR es:[edi],dx
  41ce05:	xor    esi,DWORD PTR [eax-0x2b]
  41ce08:	xchg   ch,dl
  41ce0a:	stc    
  41ce0b:	in     al,0x8e
  41ce0d:	rcr    BYTE PTR [edx+esi*4],1
  41ce10:	xchg   ebx,eax
  41ce11:	jmp    0xd74a0a3
  41ce16:	inc    ebx
  41ce17:	and    eax,0xe88a45bd
  41ce1c:	push   edx
  41ce1d:	pop    ds
  41ce1e:	(bad)  
  41ce1f:	mov    esp,0xec4c00c6
  41ce24:	in     eax,dx
  41ce25:	mov    ch,0x9c
  41ce27:	bound  ebx,QWORD PTR [ecx-0x30810988]
  41ce2d:	inc    eax
  41ce2e:	call   0xa94d:0xd45b102d
  41ce35:	mov    dl,0x67
  41ce37:	pop    esp
  41ce38:	mov    esp,DWORD PTR [ebx]
  41ce3a:	das    
  41ce3b:	mov    ecx,eax
  41ce3d:	mov    eax,0x2e259ab2
  41ce42:	into   
  41ce43:	mov    WORD PTR [ebp-0x6d],ss
  41ce46:	mov    dl,dh
  41ce48:	aam    0xb0
  41ce4a:	add    al,0xb7
  41ce4c:	test   BYTE PTR [esi],ah
  41ce4e:	jns    0x41ce5b
  41ce50:	out    0xf3,eax
  41ce52:	adc    al,0x8a
  41ce54:	sbb    esi,DWORD PTR [ebx+0x5d]
  41ce57:	cld    
  41ce58:	sti    
  41ce59:	mov    eax,ds:0x25d5e5b8
  41ce5e:	adc    dl,0x78
  41ce61:	arpl   WORD PTR [esi],si
  41ce63:	repnz or edx,esi
  41ce66:	mov    edx,edx
  41ce68:	ds (bad) 
  41ce6a:	in     eax,dx
  41ce6b:	enter  0x4c2c,0x5d
  41ce6f:	leave  
  41ce70:	(bad)  
  41ce71:	push   esp
  41ce72:	adc    bl,BYTE PTR [edx-0x7e]
  41ce75:	dec    esp
  41ce76:	shl    BYTE PTR [ecx-0x299784d7],0xdf
  41ce7d:	pop    ds
  41ce7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce7f:	fs scas al,BYTE PTR es:[edi]
  41ce81:	in     al,0xb7
  41ce83:	pop    ds
  41ce84:	cmp    eax,0x9b96cbd4
  41ce89:	out    0xa5,eax
  41ce8b:	add    BYTE PTR [edi-0x73],bh
  41ce8e:	test   al,0xf6
  41ce90:	push   cs
  41ce91:	shl    DWORD PTR [edx-0x3302d7b9],1
  41ce97:	daa    
  41ce98:	sar    BYTE PTR [edi+edi*4],1
  41ce9b:	push   esp
  41ce9c:	mov    edx,0x3f1a38b8
  41cea1:	inc    eax
  41cea2:	cmp    eax,0xbdebc498
  41cea7:	cmp    ecx,edx
  41cea9:	(bad)  
  41ceaa:	jb     0x41ce65
  41ceac:	gs and eax,0x5af67735
  41ceb2:	cmp    dh,BYTE PTR [ebx+0x7e]
  41ceb5:	mov    ebx,ds
  41ceb7:	outs   dx,BYTE PTR ds:[esi]
  41ceb8:	pop    es
  41ceb9:	popfw  
  41cebb:	out    0x11,al
  41cebd:	je     0x41ced8
  41cebf:	mov    ecx,0xfe4db4e1
  41cec4:	sub    ecx,DWORD PTR [ebx-0xc]
  41cec7:	out    0x75,al
  41cec9:	mov    eax,ds:0xe2491e0c
  41cece:	(bad)  
  41cecf:	in     eax,0x44
  41ced1:	push   cs
  41ced2:	popf   
  41ced3:	rcl    DWORD PTR [eax-0x1c],cl
  41ced6:	mov    DWORD PTR [edx-0xe4ca6c8],esi
  41cedc:	sbb    dl,ch
  41cede:	(bad)  
  41cedf:	adc    BYTE PTR [ebx],dl
  41cee1:	mov    edx,0xe6e10eb4
  41cee6:	xchg   esi,eax
  41cee7:	loope  0x41cf01
  41cee9:	data16 sti 
  41ceeb:	out    dx,eax
  41ceec:	xor    BYTE PTR [eax+edi*4],dl
  41ceef:	in     eax,0xaa
  41cef1:	loop   0x41ced9
  41cef3:	pop    edx
  41cef4:	cmc    
  41cef5:	dec    edx
  41cef6:	mov    bl,0xe9
  41cef8:	shl    BYTE PTR [ecx-0x5538dd59],cl
  41cefe:	test   DWORD PTR [edi],esi
  41cf00:	aas    
  41cf01:	cmp    al,0xfa
  41cf03:	mov    edi,0xb7cfd511
  41cf08:	mov    ebp,0x198bc8f8
  41cf0d:	mov    esp,0x8b1f4718
  41cf12:	xor    eax,0x79cc4159
  41cf17:	(bad)  
  41cf18:	js     0x41ceb4
  41cf1a:	jl     0x41cebd
  41cf1c:	jl     0x41cf03
  41cf1e:	retf   0xa63b
  41cf21:	sahf   
  41cf22:	sub    bl,BYTE PTR [ebx-0x3cb39651]
  41cf28:	xchg   DWORD PTR [edi],edx
  41cf2a:	daa    
  41cf2b:	mov    cs,esi
  41cf2d:	jae    0x41cefd
  41cf2f:	inc    edi
  41cf30:	mul    BYTE PTR [edx+0x30b43532]
  41cf36:	inc    esp
  41cf37:	xor    BYTE PTR [ebx+0xb],ah
  41cf3a:	push   ebp
  41cf3c:	cld    
  41cf3d:	(bad)  
  41cf3e:	jl     0x41cec1
  41cf40:	adc    eax,0x270a4119
  41cf45:	push   esp
  41cf46:	shl    DWORD PTR [edx-0x17],0xba
  41cf4a:	push   ebp
  41cf4b:	and    cl,BYTE PTR [esi]
  41cf4d:	sub    DWORD PTR [edi+0x5e],edx
  41cf50:	push   ebx
  41cf51:	or     al,0x68
  41cf53:	add    bh,bh
  41cf55:	sbb    al,0x2f
  41cf57:	into   
  41cf58:	in     eax,0xc3
  41cf5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf5b:	lds    eax,FWORD PTR [ebp-0x2d79977d]
  41cf61:	cs push es
  41cf63:	jb     0x41cf36
  41cf65:	xchg   bl,al
  41cf67:	fs inc ecx
  41cf69:	psubusw mm3,mm1
  41cf6c:	sbb    eax,0x10582b99
  41cf71:	mov    al,0xc0
  41cf73:	cmp    BYTE PTR [ecx+0x6681baf4],bl
  41cf79:	sbb    eax,DWORD PTR [ebp-0x622a1ffe]
  41cf7f:	sahf   
  41cf80:	jg     0x41cfea
  41cf82:	inc    edx
  41cf83:	sbb    BYTE PTR [ebp-0x6e927ac9],ch
  41cf89:	fadd   DWORD PTR [edx+0x6a]
  41cf8c:	out    0x6d,al
  41cf8e:	ror    BYTE PTR [ecx+esi*1],1
  41cf91:	lods   eax,DWORD PTR ds:[esi]
  41cf92:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41cf94:	pusha  
  41cf95:	call   0xd547c896
  41cf9a:	jbe    0x41cfe2
  41cf9c:	dec    esp
  41cf9d:	out    0x28,al
  41cf9f:	inc    ebx
  41cfa0:	clc    
  41cfa1:	call   0xda7f0459
  41cfa6:	add    eax,0xbc6dacd9
  41cfab:	push   ebp
  41cfac:	push   ebp
  41cfad:	jp     0x41cf87
  41cfaf:	mov    WORD PTR [ecx+0x167619a4],cs
  41cfb5:	jecxz  0x41cf40
  41cfb7:	(bad)  
  41cfb8:	and    DWORD PTR [edi],esi
  41cfba:	mov    bl,0x25
  41cfbc:	test   DWORD PTR [edi+ebp*4],ebp
  41cfbf:	mov    bl,0xcb
  41cfc1:	xor    BYTE PTR ds:0x1547f08a,ch
  41cfc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cfc8:	retf   0xa370
  41cfcb:	jne    0x41cf80
  41cfcd:	shl    DWORD PTR [edx+0xa],cl
  41cfd0:	cmove  esi,DWORD PTR [ebx+ebp*4]
  41cfd4:	mov    ch,0xa2
  41cfd6:	mov    al,ds:0x84724c21
  41cfdb:	mov    esi,0x3ef9ae33
  41cfe0:	cmp    edi,DWORD PTR [ecx-0x72db73a6]
  41cfe6:	sub    al,0x60
  41cfe8:	mov    esp,0x58da1507
  41cfed:	push   edx
  41cfee:	lods   eax,DWORD PTR ds:[esi]
  41cfef:	mov    al,ds:0x7566f601
  41cff4:	fwait
  41cff5:	pop    ds
  41cff6:	mov    BYTE PTR [ebp+0x34],bl
  41cff9:	mov    al,0xd4
  41cffb:	scas   al,BYTE PTR es:[edi]
  41cffc:	jle    0x41cfdd
  41cffe:	mov    edx,0x91c2d5d3
  41d003:	adc    esp,eax
  41d005:	mov    dh,0xf1
  41d007:	(bad)  [ecx-0x10]
  41d00a:	cli    
  41d00b:	lds    esp,FWORD PTR [eax-0x54]
  41d00e:	or     al,0xff
  41d010:	dec    ebx
  41d011:	pop    ebx
  41d012:	xchg   ebx,eax
  41d013:	les    esp,FWORD PTR cs:[ecx]
  41d016:	mov    al,0x69
  41d018:	lar    ecx,WORD PTR [esi-0x3729adfc]
  41d01f:	mov    edi,0xf53e5b07
  41d024:	mov    edx,0x2c90666b
  41d029:	ficomp DWORD PTR [esi+0x4676d13f]
  41d02f:	repz fsubr DWORD PTR ds:0x83708f56
  41d036:	jmp    0x41cfc8
  41d038:	adc    eax,0x9c9d6fa7
  41d03d:	jecxz  0x41d01a
  41d03f:	out    0x6a,eax
  41d041:	pop    ebp
  41d042:	ret    
  41d043:	mov    ds:0x5afeaf16,eax
  41d048:	mov    ecx,DWORD PTR [ebp-0x62473c9c]
  41d04e:	inc    ebx
  41d04f:	adc    DWORD PTR [ebx+0x1d56478c],esp
  41d055:	cmp    al,0x60
  41d057:	loope  0x41d0a1
  41d059:	cmp    al,0x60
  41d05b:	mov    ds:0x7368eea5,al
  41d060:	xchg   ebp,eax
  41d061:	test   BYTE PTR [esi+0xf2068d],dl
  41d067:	(bad)  
  41d068:	dec    ecx
  41d069:	add    BYTE PTR [esi+0x16f8ba56],ah
  41d06f:	dec    edi
  41d070:	loopne 0x41d03e
  41d072:	outs   dx,BYTE PTR ds:[esi]
  41d073:	push   0xffffff9f
  41d075:	fs loop 0x41d0cf
  41d078:	ja     0x41d08e
  41d07a:	mov    edi,0xeb98f780
  41d07f:	out    0x7f,al
  41d081:	sbb    DWORD PTR [edx+0x35],ebx
  41d084:	add    DWORD PTR [ecx+0x59],edx
  41d087:	xor    al,0xdc
  41d089:	fsub   st(5),st
  41d08b:	fstp   QWORD PTR [ecx]
  41d08d:	in     al,dx
  41d08e:	sbb    bh,al
  41d090:	cmp    bl,BYTE PTR [ebx+0x99f3d17]
  41d096:	xor    al,0x2d
  41d098:	sub    al,0x6f
  41d09a:	xchg   ebx,eax
  41d09b:	loop   0x41d0d4
  41d09d:	nop
  41d09e:	cmp    BYTE PTR [ecx],dh
  41d0a0:	cli    
  41d0a1:	sub    edi,DWORD PTR [ebx+0x4]
  41d0a4:	push   cs
  41d0a5:	xchg   edx,eax
  41d0a6:	push   ebp
  41d0a7:	out    0xdf,al
  41d0a9:	mov    edi,0xf44166b4
  41d0ae:	add    bl,cl
  41d0b0:	jg     0x41d0ab
  41d0b2:	out    dx,al
  41d0b3:	test   BYTE PTR [edx+eax*8+0x528f9101],0x59
  41d0bb:	inc    edi
  41d0bc:	jns    0x41d095
  41d0be:	sbb    edx,edi
  41d0c0:	shr    DWORD PTR [ebx-0x3c960055],cl
  41d0c6:	imul   esp,esp,0xffffff89
  41d0c9:	stos   DWORD PTR es:[edi],eax
  41d0ca:	xchg   ecx,eax
  41d0cb:	je     0x41d0f9
  41d0cd:	adc    eax,0xe16cb436
  41d0d2:	and    DWORD PTR [ecx+0xf4b1da9],edi
  41d0d8:	lods   al,BYTE PTR ds:[esi]
  41d0d9:	sub    eax,0x349d116c
  41d0de:	jbe    0x41d091
  41d0e0:	inc    ebx
  41d0e1:	pop    ebx
  41d0e2:	push   ecx
  41d0e3:	xor    al,0xe5
  41d0e6:	jne    0x41d0cc
  41d0e8:	jecxz  0x41d0e6
  41d0ea:	fisub  DWORD PTR [edi-0x129a620c]
  41d0f0:	jno    0x41d148
  41d0f2:	jo     0x41d0d5
  41d0f4:	ins    BYTE PTR es:[edi],dx
  41d0f5:	pop    ebx
  41d0f6:	add    ebx,DWORD PTR [edi-0x42]
  41d0f9:	jl     0x41d15d
  41d0fb:	sar    BYTE PTR [eax*4+0x10cce3db],0x8c
  41d103:	mov    DWORD PTR [ecx],ebp
  41d105:	or     dl,al
  41d107:	rcr    BYTE PTR [edi+0x19fcad6e],cl
  41d10d:	(bad)  
  41d10e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d10f:	nop
  41d110:	and    ch,BYTE PTR [esi-0x4b90b3f2]
  41d116:	push   0xffffff88
  41d118:	mov    al,0x30
  41d11a:	cmp    al,BYTE PTR [ecx-0x10]
  41d11d:	je     0x41d0d9
  41d11f:	jecxz  0x41d0b8
  41d121:	cwde   
  41d122:	mov    ds:0xe48efb06,al
  41d127:	mov    dh,0x4f
  41d129:	mov    cl,0x26
  41d12b:	aaa    
  41d12c:	ret    
  41d12d:	(bad)  [ecx-0x13]
  41d130:	fnstcw WORD PTR [edx]
  41d132:	push   es
  41d133:	js     0x41d0f1
  41d135:	jecxz  0x41d0b8
  41d137:	cdq    
  41d138:	adc    BYTE PTR [ebp+0x7c],al
  41d13b:	fdivr  DWORD PTR [edi]
  41d13d:	cmp    bh,dl
  41d13f:	ins    DWORD PTR es:[edi],dx
  41d140:	adc    ebx,ecx
  41d142:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d143:	and    bl,cl
  41d145:	lods   al,BYTE PTR ds:[esi]
  41d146:	or     al,0x28
  41d148:	in     eax,dx
  41d149:	mov    dl,0xa3
  41d14b:	in     al,0x8c
  41d14d:	pop    ecx
  41d14e:	push   es
  41d14f:	push   ebp
  41d150:	in     eax,0xc
  41d152:	push   edx
  41d153:	mov    ebx,0x3a7b9758
  41d158:	push   ecx
  41d159:	cld    
  41d15a:	lods   eax,DWORD PTR ds:[esi]
  41d15b:	loop   0x41d1d2
  41d15d:	data16 jno 0x41d0e5
  41d160:	sub    eax,DWORD PTR [eax-0x26]
  41d163:	int3   
  41d164:	fdiv   QWORD PTR ds:0xde08fd2d
  41d16a:	fscale 
  41d16c:	xchg   esi,eax
  41d16d:	ret    0x3abc
  41d170:	dec    eax
  41d171:	sub    bl,cl
  41d173:	fisttp WORD PTR [eax+0x1fc9a22d]
  41d179:	pop    ebp
  41d17b:	xlat   BYTE PTR ds:[ebx]
  41d17c:	js     0x41d10f
  41d17e:	aaa    
  41d17f:	cs adc al,ch
  41d182:	sbb    DWORD PTR [esi-0x19],ebx
  41d185:	mov    ch,0x4e
  41d187:	dec    edx
  41d188:	ficomp DWORD PTR [edi]
  41d18a:	xor    edx,esi
  41d18c:	mov    gs,WORD PTR [esi-0xfde9ea0]
  41d192:	dec    ebx
  41d193:	jae    0x41d17b
  41d195:	xlat   BYTE PTR ds:[ebx]
  41d196:	out    0xe,al
  41d198:	js     0x41d1de
  41d19a:	pusha  
  41d19b:	pop    ebp
  41d19c:	stc    
  41d19d:	adc    esp,ecx
  41d19f:	cwde   
  41d1a0:	mov    esi,0x2976971d
  41d1a5:	(bad)  
  41d1a6:	ss inc ecx
  41d1a8:	je     0x41d1f2
  41d1aa:	push   0x1a
  41d1ac:	jmp    0x41d148
  41d1ae:	sar    DWORD PTR ds:0x4511d988,cl
  41d1b4:	add    ebp,edx
  41d1b6:	jne    0x41d1b9
  41d1b8:	jae    0x41d193
  41d1ba:	lahf   
  41d1bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d1bc:	push   ss
  41d1bd:	pop    ecx
  41d1be:	ror    DWORD PTR [ecx-0x3404d4ba],cl
  41d1c4:	jo     0x41d184
  41d1c6:	or     al,0xcc
  41d1c8:	or     al,0x25
  41d1ca:	adc    ch,BYTE PTR [ecx]
  41d1cc:	mov    BYTE PTR [esi-0x1b],dh
  41d1cf:	mov    eax,ds:0x6d5b6290
  41d1d4:	and    al,0x62
  41d1d6:	and    eax,0xa3a6e347
  41d1db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d1dc:	out    0xd7,eax
  41d1de:	retf   
  41d1df:	aad    0x54
  41d1e1:	arpl   WORD PTR [ebx+0x28],si
  41d1e4:	mov    bl,0x8c
  41d1e6:	retf   
  41d1e7:	(bad)  
  41d1e8:	push   0x33d27e96
  41d1ed:	scas   al,BYTE PTR es:[edi]
  41d1ee:	and    DWORD PTR [ecx+0x247703],ebx
  41d1f4:	xor    bh,BYTE PTR [edi-0x2f4b868c]
  41d1fa:	mov    edx,0xc2fb8da0
  41d1ff:	repz xor BYTE PTR [ebp+0x11],ch
  41d203:	rcl    ebx,cl
  41d205:	out    0xc1,eax
  41d207:	and    BYTE PTR [ebp+0x3856a7ad],bh
  41d20d:	mov    ebp,0xa3f922ae
  41d212:	mov    ebp,0x7a5f3d54
  41d217:	sbb    ebx,DWORD PTR [edi+edi*2+0x45a68972]
  41d21e:	jno    0x41d267
  41d220:	bound  edi,QWORD PTR [ecx]
  41d222:	sub    BYTE PTR [ebx+0x3ada3538],cl
  41d228:	clc    
  41d229:	fnstsw WORD PTR [edx]
  41d22b:	push   eax
  41d22c:	icebp  
  41d22d:	pop    esp
  41d22e:	dec    edi
  41d22f:	pushf  
  41d230:	inc    ebp
  41d231:	mov    dh,0x83
  41d233:	mov    esp,0xc8c67d99
  41d238:	mov    cl,0xcf
  41d23a:	and    ebx,DWORD PTR [edi+0x5]
  41d23d:	mov    ebp,0xa53860aa
  41d242:	(bad)  
  41d244:	push   edx
  41d245:	int    0x5c
  41d247:	fsubr  QWORD PTR [ebx+0x51]
  41d24a:	jbe    0x41d284
  41d24c:	or     al,0xab
  41d24e:	or     DWORD PTR [eax],edi
  41d250:	call   DWORD PTR [edi-0x79540d72]
  41d256:	nop
  41d257:	and    eax,0xab0b558e
  41d25c:	push   ecx
  41d25d:	dec    eax
  41d25e:	mov    dl,0xac
  41d260:	jne    0x41d1eb
  41d262:	loopne 0x41d293
  41d264:	stos   BYTE PTR es:[edi],al
  41d265:	inc    ecx
  41d266:	fsubr  QWORD PTR [edi-0x4c79306d]
  41d26c:	dec    ebp
  41d26d:	scas   al,BYTE PTR es:[edi]
  41d26e:	cmp    eax,0x8afcb860
  41d273:	fisttp WORD PTR [eax]
  41d275:	jmp    0x3932:0x13080acd
  41d27c:	or     DWORD PTR [eax-0x18ac6a1],0x74a465db
  41d286:	test   eax,0x4580c0f8
  41d28b:	fadd   DWORD PTR ds:0x4ae15071
  41d291:	adc    eax,0x3b23f563
  41d296:	or     DWORD PTR [ecx+0x45],ebp
  41d299:	je     0x41d2bf
  41d29b:	inc    eax
  41d29c:	addr16 or edi,edi
  41d29f:	mov    ebx,0xfc734209
  41d2a4:	jecxz  0x41d26b
  41d2a6:	into   
  41d2a7:	in     eax,0x4a
  41d2a9:	adc    bh,bh
  41d2ab:	in     eax,0x2c
  41d2ad:	or     ebx,ebp
  41d2af:	enter  0xbc85,0x54
  41d2b3:	ss mov ah,0x41
  41d2b6:	mov    bl,BYTE PTR [edx+edx*8-0x59c2f21c]
  41d2bd:	inc    esi
  41d2be:	addr16 dec esi
  41d2c0:	cld    
  41d2c1:	shl    DWORD PTR [ebx+ebp*8],1
  41d2c4:	fadd   DWORD PTR [ecx]
  41d2c6:	mov    bl,0x4d
  41d2c8:	cmp    BYTE PTR [esi+0x7ff1810e],0x59
  41d2cf:	jp     0x41d2a0
  41d2d1:	dec    ebp
  41d2d2:	pop    edx
  41d2d3:	popf   
  41d2d4:	push   eax
  41d2d5:	jbe    0x41d273
  41d2d7:	cmc    
  41d2d8:	jge    0x41d2de
  41d2da:	sti    
  41d2db:	push   esp
  41d2dc:	adc    al,0x13
  41d2de:	cmp    al,ah
  41d2e0:	fistp  QWORD PTR ds:0xe94ddcdf
  41d2e6:	(bad)  
  41d2e7:	jle    0x41d2f9
  41d2e9:	call   0x2a3c:0x8826eb73
  41d2f0:	lahf   
  41d2f1:	stos   DWORD PTR es:[edi],eax
  41d2f2:	adc    DWORD PTR [ecx],edi
  41d2f4:	mov    ?,WORD PTR [ebp+0x71]
  41d2f7:	out    dx,eax
  41d2f8:	je     0x41d339
  41d2fa:	ds arpl si,si
  41d2fd:	ja     0x41d309
  41d2ff:	sub    esi,DWORD PTR [ebp-0x5b4b24ce]
  41d305:	xchg   bl,al
  41d307:	push   ebx
  41d308:	fist   WORD PTR [edi]
  41d30a:	scas   eax,DWORD PTR es:[edi]
  41d30b:	jb     0x41d34d
  41d30d:	arpl   WORD PTR [eax+edi*8-0x20d78374],cx
  41d314:	imul   DWORD PTR [edx]
  41d316:	loopne 0x41d37a
  41d318:	inc    esp
  41d319:	sub    DWORD PTR [edx-0x6c],edi
  41d31c:	mov    BYTE PTR [eax+0x2e],ch
  41d31f:	push   0x4a
  41d321:	jmp    0x82d5:0x599b1583
  41d328:	aad    0x92
  41d32a:	add    cl,BYTE PTR [esi]
  41d32c:	sar    BYTE PTR [edx-0x59],1
  41d32f:	add    al,0x26
  41d331:	arpl   dx,ax
  41d333:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d334:	push   0x7a
  41d336:	inc    ebp
  41d337:	xlat   BYTE PTR ds:[ebx]
  41d338:	jb     0x41d38f
  41d33a:	xor    al,0xca
  41d33c:	mov    ebp,0x5778288d
  41d341:	outs   dx,BYTE PTR ds:[esi]
  41d342:	xor    eax,0x622ff95c
  41d347:	adc    ah,cl
  41d349:	cmp    al,0xba
  41d34b:	jmp    0x41d384
  41d34d:	dec    ecx
  41d34e:	pop    esp
  41d34f:	into   
  41d350:	hlt    
  41d351:	add    BYTE PTR [edi-0x61],cl
  41d354:	rcl    BYTE PTR [eax],0xb1
  41d357:	sbb    DWORD PTR [eax+0x74feeb38],edi
  41d35d:	push   cs
  41d35e:	inc    ecx
  41d35f:	fs push esp
  41d361:	or     ah,bh
  41d363:	ficomp DWORD PTR [edx+0x5109196e]
  41d369:	cwde   
  41d36a:	push   edi
  41d36b:	cdq    
  41d36c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d36d:	das    
  41d36e:	sar    DWORD PTR [esi+0x360ee6bd],1
  41d374:	rcr    BYTE PTR [edx],1
  41d376:	and    BYTE PTR [ecx-0x25a8ef81],dl
  41d37c:	fldenv [esi+0x28f5b7b5]
  41d382:	(bad)  
  41d383:	dec    DWORD PTR [esi+0x26]
  41d386:	int3   
  41d387:	add    dh,BYTE PTR [edx+ebp*4+0x6061c7d8]
  41d38e:	out    0xd8,al
  41d390:	push   edi
  41d391:	inc    ecx
  41d392:	das    
  41d393:	lods   al,BYTE PTR ds:[esi]
  41d394:	mov    bl,0x24
  41d396:	dec    ebx
  41d397:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d398:	aam    0x13
  41d39a:	repz push ds
  41d39c:	pop    esp
  41d39d:	mov    eax,0xee26b93
  41d3a2:	lods   al,BYTE PTR ds:[esi]
  41d3a3:	xchg   esi,eax
  41d3a4:	pop    ebx
  41d3a5:	int3   
  41d3a6:	pop    ecx
  41d3a7:	xor    BYTE PTR [eax],dl
  41d3a9:	gs jge 0x41d3f5
  41d3ac:	mov    bh,cl
  41d3ae:	lods   eax,DWORD PTR ds:[esi]
  41d3af:	sbb    BYTE PTR [esi-0x19fab2e],bh
  41d3b5:	xor    al,0xa0
  41d3b7:	leave  
  41d3b8:	pcmpeqw mm2,QWORD PTR [edx-0x46]
  41d3bc:	icebp  
  41d3bd:	mov    al,ds:0xa96cc492
  41d3c2:	mov    dh,0x77
  41d3c4:	jle    0x41d436
  41d3c6:	jns    0x41d420
  41d3c8:	cli    
  41d3c9:	xchg   ecx,eax
  41d3ca:	popf   
  41d3cb:	pop    ebp
  41d3cc:	push   edi
  41d3cd:	lods   eax,DWORD PTR ds:[esi]
  41d3ce:	sbb    eax,0xaf94f386
  41d3d3:	pop    ebp
  41d3d4:	data16 js 0x41d3af
  41d3d7:	imul   edx,DWORD PTR [ebx+0x10680b25],0x58861b17
  41d3e1:	ror    DWORD PTR [esi+edi*1-0x51],1
  41d3e5:	xlat   BYTE PTR ds:[ebx]
  41d3e6:	(bad)  
  41d3e7:	inc    ebp
  41d3e8:	jb     0x41d40f
  41d3ea:	add    BYTE PTR [ebx+eiz*8+0x3a9fd189],bh
  41d3f1:	cmp    ah,BYTE PTR [edx+ebp*8+0x43]
  41d3f5:	sub    al,0x4c
  41d3f7:	and    DWORD PTR [esi],ecx
  41d3f9:	scas   eax,DWORD PTR es:[edi]
  41d3fa:	sbb    DWORD PTR [esp+ebp*8-0x5b],ebx
  41d3fe:	lea    ecx,[esi]
  41d400:	xchg   edx,eax
  41d401:	aad    0x6c
  41d403:	xor    ecx,DWORD PTR [esi-0x7d]
  41d406:	pushf  
  41d407:	loop   0x41d420
  41d409:	fistp  WORD PTR [eax+0x7d]
  41d40c:	sbb    DWORD PTR [ecx+0x3f6c9770],ecx
  41d412:	into   
  41d413:	adc    BYTE PTR [eax-0x1a],ch
  41d416:	or     bh,BYTE PTR [ebx]
  41d418:	fst    QWORD PTR [eax+0x5e3cb7cb]
  41d41e:	mov    eax,ds:0x6d8e218c
  41d423:	jge    0x41d3e0
  41d425:	and    al,0x21
  41d427:	fisttp WORD PTR [esi]
  41d429:	mul    dl
  41d42b:	(bad)  
  41d42d:	or     ebp,esp
  41d42f:	and    eax,0xa542062e
  41d434:	call   0x281c8936
  41d439:	inc    esp
  41d43a:	xor    al,0x8e
  41d43c:	jmp    0x546b:0x59e25d3a
  41d443:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d444:	scas   eax,DWORD PTR es:[edi]
  41d445:	xor    esi,0xfffffffb
  41d448:	(bad)  
  41d449:	in     al,0x4d
  41d44b:	in     al,0x4d
  41d44d:	cmp    BYTE PTR [edx],dh
  41d44f:	call   0xf1ecc8f5
  41d454:	dec    eax
  41d455:	ss js  0x41d431
  41d458:	push   esi
  41d459:	jae    0x41d4c8
  41d45b:	(bad)  
  41d45c:	rcl    BYTE PTR [esi],cl
  41d45e:	push   esi
  41d45f:	rcr    al,0xae
  41d462:	adc    ebp,DWORD PTR [ecx]
  41d464:	adc    ebp,esi
  41d466:	push   0x23
  41d468:	lock sbb eax,0x2b6f3d6e
  41d46e:	leave  
  41d46f:	jbe    0x41d407
  41d471:	xor    al,0xd1
  41d473:	cli    
  41d474:	fadd   QWORD PTR [ecx-0x2a]
  41d477:	neg    DWORD PTR [eax-0x64]
  41d47a:	pop    ebx
  41d47b:	data16 (bad) 
  41d47e:	mov    edx,DWORD PTR [ebx+0x7c2d5e76]
  41d484:	imul   edi,DWORD PTR [ecx+0x3caf0b2c],0xffffff87
  41d48b:	xchg   edx,eax
  41d48c:	addr16 mov edx,0xc82b6052
  41d492:	shl    DWORD PTR [si],1
  41d495:	sbb    BYTE PTR [esi+0x1593517b],bh
  41d49b:	jmp    0x364244bc
  41d4a0:	in     al,0xfa
  41d4a2:	into   
  41d4a3:	ins    BYTE PTR es:[edi],dx
  41d4a4:	adc    DWORD PTR [eax+0x4655a97],esp
  41d4aa:	into   
  41d4ab:	test   ebx,ebp
  41d4ad:	jl     0x41d451
  41d4af:	nop
  41d4b0:	mov    ds:0x834981bc,al
  41d4b5:	loope  0x41d530
  41d4b7:	sbb    ebp,DWORD PTR [ebx]
  41d4b9:	or     al,0x73
  41d4bb:	and    BYTE PTR [ecx+edi*2-0x42],bl
  41d4bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d4c0:	call   0xc37e:0x13fd04a1
  41d4c7:	dec    edx
  41d4c8:	rcr    DWORD PTR [edx],cl
  41d4ca:	mov    dl,0xc9
  41d4cc:	into   
  41d4cd:	lods   al,BYTE PTR ds:[esi]
  41d4ce:	pop    ds
  41d4cf:	sahf   
  41d4d0:	cwde   
  41d4d1:	call   0x4bbc:0x15c454f7
  41d4d8:	cmp    eax,0xcdb08193
  41d4dd:	sbb    al,0xca
  41d4df:	and    BYTE PTR [ebx-0x5f4801f8],dh
  41d4e5:	mov    ebx,0x2b3fb23a
  41d4ea:	jnp    0x41d48d
  41d4ec:	jae    0x41d4ad
  41d4ee:	mov    eax,0x90e4440d
  41d4f3:	and    bl,dh
  41d4f5:	ret    
  41d4f6:	xor    bh,bh
  41d4f8:	icebp  
  41d4f9:	mov    ds:0x8429376b,al
  41d4fe:	adc    al,0xb3
  41d500:	cmp    DWORD PTR [edi+0x1f],eax
  41d503:	cmc    
  41d504:	sbb    dh,BYTE PTR [edx]
  41d506:	add    ecx,edx
  41d508:	stos   DWORD PTR es:[edi],eax
  41d509:	(bad)  
  41d50a:	jle    0xab674f7a
  41d510:	int3   
  41d511:	pop    ebp
  41d512:	fldenv [edi-0x1617971f]
  41d518:	jno    0x41d532
  41d51a:	stos   DWORD PTR es:[edi],eax
  41d51b:	mov    WORD PTR [edx],gs
  41d51d:	scas   eax,DWORD PTR es:[edi]
  41d51e:	dec    edi
  41d51f:	ins    DWORD PTR es:[edi],dx
  41d520:	das    
  41d521:	dec    ebx
  41d522:	sub    eax,0x7d
  41d525:	sub    eax,0x6d92de4c
  41d52a:	or     bh,BYTE PTR [ebx-0x58f281df]
  41d530:	inc    ebp
  41d531:	push   edx
  41d532:	nop
  41d533:	mov    ch,0x6
  41d535:	loopne 0x41d51b
  41d537:	cmp    ebx,DWORD PTR [eax]
  41d539:	ss sbb DWORD PTR cs:[edi+0x2d],0x56
  41d53f:	out    0xf,eax
  41d541:	aaa    
  41d542:	outs   dx,BYTE PTR ds:[esi]
  41d543:	cld    
  41d544:	pop    ds
  41d545:	fwait
  41d546:	retf   
  41d547:	fs pop edi
  41d549:	pop    ecx
  41d54a:	ins    DWORD PTR es:[edi],dx
  41d54b:	mov    edi,0x4f338d43
  41d550:	dec    esp
  41d551:	shl    esp,1
  41d553:	mov    esp,0x2c6f1884
  41d558:	add    al,0x8
  41d55a:	inc    ebx
  41d55b:	aad    0x9c
  41d55d:	(bad)  
  41d55e:	mov    eax,ds:0x1868c01a
  41d563:	outs   dx,BYTE PTR ds:[esi]
  41d564:	cmp    eax,0xb90fd76d
  41d569:	shl    DWORD PTR [ebp+0x72559d70],cl
  41d56f:	test   eax,0xcab5c29c
  41d574:	fidiv  WORD PTR [edi+0x43]
  41d577:	(bad)  
  41d578:	mov    ds:0x9b6d6f23,al
  41d57d:	outs   dx,DWORD PTR ds:[esi]
  41d57e:	inc    esp
  41d57f:	cdq    
  41d580:	pop    ss
  41d581:	inc    esp
  41d582:	pop    edi
  41d583:	mov    dh,0xad
  41d585:	mov    esp,0xb4f81be9
  41d58a:	and    eax,0x124bc77e
  41d58f:	xchg   edi,esp
  41d591:	lds    ebx,FWORD PTR [edi+0x7a]
  41d594:	arpl   bp,cx
  41d596:	and    DWORD PTR [ebx-0x8],eax
  41d599:	dec    ebp
  41d59a:	jle    0x41d55e
  41d59c:	popa   
  41d59d:	fs adc al,0xe6
  41d5a0:	cmc    
  41d5a1:	cmp    ebx,ebx
  41d5a3:	push   ebp
  41d5a4:	ins    BYTE PTR es:[edi],dx
  41d5a5:	push   0x73
  41d5a7:	lock mov ds:0x9314bba6,al
  41d5ad:	dec    ebx
  41d5ae:	fcom   DWORD PTR [eax-0x65]
  41d5b1:	cld    
  41d5b2:	enter  0x7788,0x2d
  41d5b6:	push   ecx
  41d5b7:	pop    ebp
  41d5b8:	cmp    al,0x51
  41d5ba:	pop    eax
  41d5bb:	mov    al,0x96
  41d5bd:	hlt    
  41d5be:	pop    ds
  41d5bf:	xor    ebp,ebp
  41d5c1:	adc    eax,DWORD PTR [ebx+0x3e]
  41d5c4:	inc    ebx
  41d5c5:	jnp    0x41d56c
  41d5c7:	stos   BYTE PTR es:[edi],al
  41d5c8:	cmp    al,0xa
  41d5ca:	cwde   
  41d5cb:	mov    ds:0xdf2a0504,eax
  41d5d0:	jge    0x41d5d1
  41d5d2:	retf   
  41d5d3:	je     0x41d59f
  41d5d5:	gs cmp al,dl
  41d5d8:	test   eax,0x4db4fb5b
  41d5dd:	inc    ebp
  41d5de:	xor    bh,cl
  41d5e0:	icebp  
  41d5e1:	xchg   edx,eax
  41d5e2:	lods   eax,DWORD PTR ds:[esi]
  41d5e3:	and    ah,ch
  41d5e5:	add    eax,esi
  41d5e7:	popf   
  41d5e8:	cmp    DWORD PTR [eax],esp
  41d5ea:	xchg   DWORD PTR [esi+0x2d45afc8],ebp
  41d5f0:	dec    ebx
  41d5f1:	cmp    esi,DWORD PTR [edx]
  41d5f3:	neg    BYTE PTR [edx+0x4a]
  41d5f6:	add    BYTE PTR [edi+ecx*2-0x3dfcc091],0xe1
  41d5fe:	push   esi
  41d5ff:	pop    edi
  41d600:	xchg   ebx,eax
  41d601:	popf   
  41d602:	and    esp,edx
  41d604:	inc    ebp
  41d605:	ss jmp edx
  41d608:	dec    ebp
  41d609:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d60a:	xor    eax,0x55d2a172
  41d60f:	imul   esi,DWORD PTR gs:[ebx-0x1161816b],0xffffffa5
  41d617:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d618:	loopne 0x41d5a2
  41d61a:	scas   al,BYTE PTR es:[edi]
  41d61b:	mov    ecx,cs
  41d61d:	sbb    DWORD PTR [edi+edx*4],ebx
  41d620:	scas   eax,DWORD PTR es:[edi]
  41d621:	inc    ebp
  41d622:	(bad)  
  41d623:	adc    eax,0x2e69213a
  41d628:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d629:	xchg   ebp,eax
  41d62a:	and    ch,ah
  41d62c:	jmp    0xb6bdbe7
  41d631:	or     BYTE PTR [edi-0x65],dh
  41d634:	and    al,BYTE PTR [ebx]
  41d636:	mul    DWORD PTR [edi-0x39]
  41d639:	hlt    
  41d63a:	into   
  41d63b:	bound  ecx,QWORD PTR [ebx]
  41d63d:	retf   
  41d63e:	sub    DWORD PTR [edx+edi*2+0x3e],edi
  41d642:	in     al,0x40
  41d644:	adc    eax,0xa6ba4857
  41d649:	pop    edi
  41d64a:	(bad)  
  41d64b:	and    eax,0xb51dfb7f
  41d650:	adc    ch,bh
  41d652:	sar    BYTE PTR [esi-0x79],cl
  41d655:	ss push 0x73
  41d658:	popf   
  41d659:	push   ss
  41d65a:	mov    bl,0xf3
  41d65c:	jns    0x41d675
  41d65e:	and    ebp,DWORD PTR [edi]
  41d660:	gs push edx
  41d662:	pop    ebx
  41d663:	fmul   st,st(1)
  41d665:	and    BYTE PTR ds:0xd4706b74,ah
  41d66b:	mov    cl,0xd9
  41d66d:	pop    ebx
  41d66e:	lahf   
  41d66f:	(bad)  
  41d670:	cmp    al,0xe7
  41d672:	aad    0xbf
  41d674:	xor    DWORD PTR [ebp+0x4a],eax
  41d677:	loope  0x41d6b0
  41d679:	inc    ebp
  41d67a:	push   edi
  41d67b:	add    edi,ebx
  41d67d:	adc    BYTE PTR [ebx],dl
  41d67f:	retf   
  41d680:	shl    DWORD PTR [edi-0x36b69053],cl
  41d686:	(bad)  
  41d687:	and    ch,BYTE PTR [edx+0x62]
  41d68a:	cmp    DWORD PTR [ebp+0x2e1a8667],edx
  41d690:	ins    DWORD PTR es:[edi],dx
  41d691:	xchg   ebx,eax
  41d692:	call   0xc997:0x7c1f2249
  41d699:	shr    BYTE PTR [ebx-0x3a],1
  41d69c:	dec    esp
  41d69d:	add    al,0xd
  41d69f:	clc    
  41d6a0:	dec    DWORD PTR [edi-0x1d0ec07c]
  41d6a6:	mov    bl,0x3
  41d6a8:	aas    
  41d6a9:	fucomip st,st(2)
  41d6ab:	repnz retf 
  41d6ad:	sbb    DWORD PTR [ecx-0x2a],eax
  41d6b0:	in     eax,dx
  41d6b1:	adc    ebx,edx
  41d6b3:	pop    ebp
  41d6b4:	jge    0x41d722
  41d6b6:	mov    ds:0x19135163,al
  41d6bb:	add    DWORD PTR [edi+0x24885b53],0x46c8dbc4
  41d6c5:	inc    ecx
  41d6c6:	xor    al,0x72
  41d6c8:	add    ch,BYTE PTR [ebx+0x7cce952a]
  41d6ce:	jg     0x41d6ac
  41d6d0:	add    BYTE PTR ds:0xb32b7f0f,cl
  41d6d6:	gs cwde 
  41d6d8:	and    al,0x5c
  41d6da:	lods   al,BYTE PTR ds:[esi]
  41d6db:	loopne 0x41d6bf
  41d6dd:	pushf  
  41d6de:	add    eax,0x208346d5
  41d6e3:	xchg   esp,eax
  41d6e4:	stos   BYTE PTR es:[edi],al
  41d6e5:	ss mov eax,0x4406c9d6
  41d6eb:	(bad)  
  41d6ec:	push   ebp
  41d6ed:	sbb    BYTE PTR [esi-0x6caf8462],0xce
  41d6f4:	test   ebp,ecx
  41d6f6:	add    BYTE PTR [esi-0x2c],dh
  41d6f9:	xor    ah,BYTE PTR [ebx+0x4b]
  41d6fc:	cmp    DWORD PTR [ecx+0x27],esi
  41d6ff:	inc    ebp
  41d700:	pusha  
  41d701:	mov    dh,0xf9
  41d703:	inc    ecx
  41d704:	xor    DWORD PTR [ebp-0x4af6dc4d],esi
  41d70a:	push   edi
  41d70b:	pop    eax
  41d70c:	mov    ds:0x7569b5f6,al
  41d711:	scas   al,BYTE PTR es:[edi]
  41d712:	ja     0x41d765
  41d714:	add    BYTE PTR [edi+ebp*1],cl
  41d717:	inc    ebp
  41d718:	neg    BYTE PTR [edi-0x1e]
  41d71b:	in     eax,0x62
  41d71d:	xor    eax,0x3b6b868a
  41d722:	pop    es
  41d723:	(bad)  
  41d724:	scas   eax,DWORD PTR es:[edi]
  41d725:	adc    bh,BYTE PTR [esi-0xd59b1bc]
  41d72b:	sub    eax,0x11a2edaf
  41d730:	xor    eax,eax
  41d732:	and    eax,0x55a07c4f
  41d737:	cmp    BYTE PTR [edx-0x1631397b],ah
  41d73d:	aam    0x80
  41d73f:	popf   
  41d740:	inc    ebp
  41d741:	mov    dl,0xd2
  41d743:	mov    ch,0xb9
  41d745:	push   ecx
  41d746:	mov    ah,0x79
  41d748:	and    cl,ah
  41d74a:	addr16 xchg ebx,eax
  41d74c:	mov    esi,0x51543665
  41d751:	jecxz  0x41d7b1
  41d753:	in     eax,dx
  41d754:	jmp    0x41d786
  41d756:	es popa 
  41d758:	xchg   esi,eax
  41d759:	sbb    edx,DWORD PTR [esi-0x44f5512]
  41d75f:	rol    DWORD PTR [ecx+0x7aa2e2b2],1
  41d765:	cmp    eax,0x4c8ace3f
  41d76a:	adc    al,0x7a
  41d76c:	mov    dh,0x30
  41d76e:	(bad)  
  41d76f:	addr16 push esi
  41d771:	xchg   DWORD PTR [edx-0x32],ebx
  41d774:	sbb    ecx,DWORD PTR [esi]
  41d776:	sbb    eax,0x5fafc505
  41d77b:	sbb    edx,DWORD PTR [ebx-0x5b7948dc]
  41d781:	jl     0x41d785
  41d783:	push   edx
  41d784:	emms   
  41d786:	je     0x41d78b
  41d788:	xchg   edi,eax
  41d789:	shl    DWORD PTR [eax],0xe3
  41d78c:	ss aaa 
  41d78e:	lods   al,BYTE PTR ds:[esi]
  41d78f:	add    al,0x9d
  41d791:	mov    eax,0x410d29e3
  41d796:	xchg   bh,bl
  41d798:	mov    WORD PTR [edi],ds
  41d79a:	xchg   edi,eax
  41d79b:	out    0x55,al
  41d79d:	out    0xac,eax
  41d79f:	add    eax,0x94f8149b
  41d7a4:	popf   
  41d7a5:	mov    edi,esp
  41d7a7:	xchg   ebp,eax
  41d7a8:	mov    dl,0x5c
  41d7aa:	test   DWORD PTR [edi],edx
  41d7ac:	mov    esi,DWORD PTR [edx-0x43]
  41d7af:	fbld   TBYTE PTR [ebx+0x3f]
  41d7b2:	imul   eax,edi,0x5276a5a6
  41d7b8:	sahf   
  41d7b9:	dec    esp
  41d7ba:	xor    eax,0x98a343d8
  41d7bf:	bound  ecx,QWORD PTR [ebx]
  41d7c1:	stos   DWORD PTR es:[edi],eax
  41d7c2:	(bad)  
  41d7c3:	aam    0xba
  41d7c5:	mov    ds:0x5a297404,eax
  41d7ca:	jae    0x41d838
  41d7cc:	cmp    ah,bh
  41d7ce:	ss loop 0x41d846
  41d7d1:	or     eax,0xb27d0282
  41d7d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d7d7:	jl     0x41d83f
  41d7d9:	cwde   
  41d7da:	sbb    edx,esp
  41d7dc:	pextrw ebp,(bad),0xc5
  41d7de:	sub    DWORD PTR [edx+0x0],edi
  41d7e1:	ret    
  41d7e2:	add    al,0x51
  41d7e4:	xor    al,BYTE PTR [eax+0x28906788]
  41d7ea:	aam    0x3
  41d7ec:	sub    al,0xc8
  41d7ee:	out    0xf5,eax
  41d7f0:	aad    0x72
  41d7f2:	or     al,0x13
  41d7f4:	mov    ch,0xdf
  41d7f6:	sbb    al,0x19
  41d7f8:	mov    ch,0x18
  41d7fa:	ds nop
  41d7fc:	ins    BYTE PTR es:[edi],dx
  41d7fd:	lds    ecx,FWORD PTR [ebp+0x41]
  41d800:	enter  0x816b,0x42
  41d804:	cld    
  41d805:	test   al,0x81
  41d807:	mov    bh,0x4d
  41d809:	ret    
  41d80a:	int3   
  41d80b:	je     0x41d7d6
  41d80d:	jne    0x41d814
  41d80f:	mov    eax,0xb0ebfee9
  41d814:	pop    eax
  41d815:	loopne 0x41d874
  41d817:	pop    ebx
  41d818:	push   0x61
  41d81a:	inc    eax
  41d81b:	nop
  41d81c:	aas    
  41d81d:	daa    
  41d81e:	scas   eax,DWORD PTR es:[edi]
  41d81f:	scas   al,BYTE PTR es:[edi]
  41d820:	mov    edx,0x4af2925c
  41d825:	out    0x18,al
  41d827:	mov    bh,0x12
  41d829:	popa   
  41d82a:	int    0xfd
  41d82c:	rcr    DWORD PTR [ebp-0x3f63b605],1
  41d832:	sbb    eax,0x3b911058
  41d837:	or     eax,0xec19fb6a
  41d83c:	ficomp WORD PTR [ebx]
  41d83e:	dec    edx
  41d83f:	jl     0x41d7e3
  41d841:	fiadd  WORD PTR [eax]
  41d843:	mov    ah,0x55
  41d845:	cs mov ecx,0x9d0171d8
  41d84b:	jae    0x41d85a
  41d84d:	sub    ebx,DWORD PTR [ecx+0x3a43d83b]
  41d853:	mov    gs,WORD PTR [edi+edi*4+0x35]
  41d857:	ficom  DWORD PTR [esi+ecx*4]
  41d85a:	out    0x52,al
  41d85c:	pop    edx
  41d85d:	fnstsw WORD PTR [eax-0x795e4a36]
  41d863:	xor    eax,0xbf7d501f
  41d868:	jp     0x41d8c0
  41d86a:	add    BYTE PTR [ecx],0x3f
  41d86d:	push   cs
  41d86e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d86f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d870:	xchg   ebp,eax
  41d871:	out    0x81,eax
  41d873:	mov    ds,ebx
  41d875:	pop    ds
  41d876:	or     ebx,edi
  41d878:	loope  0x41d846
  41d87a:	popa   
  41d87b:	mov    bh,0x3f
  41d87d:	aad    0xb9
  41d87f:	sub    al,0x1f
  41d881:	xor    eax,0x3d8458fb
  41d886:	mov    edi,0x7efb489d
  41d88b:	cld    
  41d88c:	inc    ecx
  41d88d:	jge    0x41d86a
  41d88f:	cs lahf 
  41d891:	shl    BYTE PTR [edx-0x4a],cl
  41d894:	or     BYTE PTR [ebx+edi*2-0x31fa216],cl
  41d89b:	inc    eax
  41d89c:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41d89e:	adc    DWORD PTR [ebx-0x50],esi
  41d8a1:	test   eax,0x94b8aacf
  41d8a6:	or     eax,0x5fdb147a
  41d8ab:	pushf  
  41d8ac:	or     edx,DWORD PTR [edx+ecx*8+0x1b]
  41d8b0:	dec    ebp
  41d8b1:	push   es
  41d8b2:	lahf   
  41d8b3:	push   0xffffff89
  41d8b5:	sub    DWORD PTR [edx+0x24],edi
  41d8b8:	and    eax,0xbeb8e48e
  41d8bd:	in     eax,0x7d
  41d8bf:	xor    DWORD PTR [edx-0x6dc4bdc3],edi
  41d8c5:	fdivr  QWORD PTR [ecx]
  41d8c7:	ret    
  41d8c8:	popf   
  41d8c9:	jns    0x41d886
  41d8cb:	inc    esp
  41d8cc:	ss pop es
  41d8ce:	sbb    bh,cl
  41d8d0:	retf   0x23c2
  41d8d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d8d4:	pop    ss
  41d8d5:	iret   
  41d8d6:	rol    BYTE PTR [edi-0x6ab0fcae],cl
  41d8dc:	fbld   TBYTE PTR [ecx-0x4578a3f9]
  41d8e2:	imul   edx,DWORD PTR [ebx-0x47],0xffffffd9
  41d8e6:	ja     0x41d8a4
  41d8e8:	retf   
  41d8e9:	inc    eax
  41d8ea:	lds    esi,FWORD PTR [edx]
  41d8ec:	out    0xe0,eax
  41d8ee:	outs   dx,DWORD PTR ds:[esi]
  41d8ef:	dec    ebp
  41d8f0:	add    dl,ah
  41d8f2:	cwde   
  41d8f3:	sbb    al,0x38
  41d8f5:	mov    al,ds:0x83b82ae3
  41d8fa:	repz inc esi
  41d8fc:	xor    eax,0xc1854368
  41d901:	jmp    0x456a:0x4b5477b4
  41d908:	fistp  WORD PTR [ebx+ebp*2-0x7c53f249]
  41d90f:	jnp    0x41d8bb
  41d911:	call   DWORD PTR [edi]
  41d913:	and    al,0xcf
  41d915:	sub    eax,0xf5031ade
  41d91a:	mov    ds:0xac32cbe1,al
  41d91f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d920:	mov    edx,edx
  41d922:	loopne 0x41d981
  41d924:	fild   QWORD PTR [ebx-0x12]
  41d927:	push   0x20
  41d929:	or     ch,bl
  41d92b:	pop    ebp
  41d92c:	(bad)  
  41d92e:	imul   eax,DWORD PTR [edi+eax*4],0xd4c6e95b
  41d935:	scas   al,BYTE PTR es:[edi]
  41d936:	enter  0x7569,0xf1
  41d93a:	frstor [esp+ecx*8-0x501ec3e1]
  41d941:	cmc    
  41d942:	mov    edx,ss
  41d944:	sub    BYTE PTR [ecx+0x568837f],al
  41d94a:	retf   
  41d94b:	xor    BYTE PTR [edi-0x38],ch
  41d94e:	imul   ebp,edx,0xd8fe00a0
  41d954:	addr16 es dec esi
  41d957:	push   edi
  41d958:	sahf   
  41d959:	stc    
  41d95a:	dec    edx
  41d95b:	sub    ebx,DWORD PTR [eax+0x134e1c71]
  41d961:	(bad)  
  41d962:	setle  dl
  41d965:	fnstcw WORD PTR [esi+ebx*2+0x1c]
  41d969:	scas   al,BYTE PTR es:[edi]
  41d96a:	gs retf 
  41d96c:	pushf  
  41d96d:	jmp    0xb81dd044
  41d972:	fld    QWORD PTR [edi]
  41d974:	mov    dl,0xef
  41d976:	adc    BYTE PTR [ebp-0x1d3c259d],dl
  41d97c:	adc    BYTE PTR ds:0x48affbe3,al
  41d982:	mov    al,ds:0xbb50c7e8
  41d987:	lods   eax,DWORD PTR ds:[esi]
  41d988:	pop    ss
  41d989:	data16 or BYTE PTR [ebp+0x33],dl
  41d98d:	or     BYTE PTR [edx+0x9],bl
  41d990:	mov    ch,0xae
  41d992:	sbb    al,0x58
  41d994:	add    al,0xfd
  41d996:	fs into 
  41d998:	stos   BYTE PTR es:[edi],al
  41d999:	retf   0x737c
  41d99c:	clc    
  41d99d:	cmp    ebp,ebx
  41d99f:	in     eax,0x61
  41d9a1:	mov    bh,0xa3
  41d9a3:	push   esi
  41d9a4:	xchg   ecx,eax
  41d9a5:	ja     0x41d9e8
  41d9a7:	mov    ecx,0xe96812b3
  41d9ac:	mov    edx,0xfca0b24f
  41d9b1:	dec    eax
  41d9b2:	jl     0x41d942
  41d9b4:	dec    ecx
  41d9b5:	mov    ecx,0xb934165a
  41d9ba:	push   0xc0da4b43
  41d9bf:	sahf   
  41d9c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d9c1:	daa    
  41d9c2:	ja     0x41d9a3
  41d9c4:	cmc    
  41d9c5:	fcmovnbe st,st(0)
  41d9c7:	or     dl,al
  41d9c9:	imul   esi,DWORD PTR [esi+0x3],0x691eacab
  41d9d0:	lods   al,BYTE PTR ds:[esi]
  41d9d1:	cs xchg esi,eax
  41d9d3:	jb     0x41d9da
  41d9d5:	shr    DWORD PTR [ecx-0x37],1
  41d9d8:	stos   DWORD PTR es:[edi],eax
  41d9d9:	fcom   DWORD PTR [edi]
  41d9db:	sub    BYTE PTR [esi],cl
  41d9dd:	xchg   edx,eax
  41d9de:	cmc    
  41d9df:	cld    
  41d9e0:	mov    dh,BYTE PTR [edi-0x71]
  41d9e3:	and    al,0xc9
  41d9e5:	(bad)  
  41d9e7:	cmp    ch,BYTE PTR [ebp+0x2a]
  41d9ea:	psrlq  mm6,mm4
  41d9ed:	test   al,0x52
  41d9ef:	mov    eax,ds
  41d9f1:	test   BYTE PTR [esi-0x49],ch
  41d9f4:	sbb    al,0xc9
  41d9f6:	ret    0x2cf4
  41d9f9:	enter  0xba67,0x31
  41d9fd:	stos   BYTE PTR es:[edi],al
  41d9fe:	add    DWORD PTR [edx+0x35],ebx
  41da01:	adc    esp,DWORD PTR [esi+0x19]
  41da04:	cmp    ebp,ebx
  41da06:	addr16 repnz ds mov edx,0x44e309c3
  41da0e:	clc    
  41da0f:	xchg   esp,eax
  41da10:	adc    BYTE PTR [eax-0x19],al
  41da13:	sub    esi,DWORD PTR [esi-0x55]
  41da16:	fwait
  41da17:	sti    
  41da18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da19:	out    0x21,al
  41da1b:	inc    ebp
  41da1c:	or     edi,DWORD PTR [esi-0x5f80964]
  41da22:	sub    cl,BYTE PTR [edi+0x3fd7a4a8]
  41da28:	adc    al,0xc2
  41da2a:	push   ss
  41da2b:	add    esp,DWORD PTR [esp+edx*8-0x67]
  41da2f:	mov    ah,BYTE PTR [eax-0x2979c853]
  41da35:	dec    ecx
  41da36:	xor    ebx,DWORD PTR ds:0x2b927fe0
  41da3c:	retf   0x3824
  41da3f:	cwde   
  41da40:	pop    es
  41da41:	xor    eax,0xc2b090bb
  41da46:	add    DWORD PTR es:[ebx],eax
  41da49:	adc    edi,DWORD PTR [edi-0x2901e162]
  41da4f:	es loop 0x41dac3
  41da52:	retf   
  41da53:	iret   
  41da54:	mov    ebp,0x3b7dde15
  41da59:	and    bl,0x51
  41da5c:	pop    ss
  41da5d:	pop    edi
  41da5e:	or     edi,DWORD PTR ds:0xe3248145
  41da64:	sar    BYTE PTR [ecx+0x4deb102c],0x86
  41da6b:	fisubr DWORD PTR [eax+ecx*1+0x74]
  41da6f:	sub    dl,BYTE PTR [bx]
  41da72:	mov    ah,0xc9
  41da74:	xchg   ebp,eax
  41da75:	inc    ebx
  41da76:	loop   0x41dadb
  41da78:	popa   
  41da79:	sbb    al,0x46
  41da7b:	xchg   edx,eax
  41da7c:	xor    ecx,DWORD PTR [ecx]
  41da7e:	jbe    0x41da59
  41da80:	and    ecx,edx
  41da82:	dec    esi
  41da83:	xchg   edx,eax
  41da84:	push   esi
  41da85:	fidivr WORD PTR [esi+0x36]
  41da88:	hlt    
  41da89:	ja     0x41da8d
  41da8b:	es or  ecx,edi
  41da8e:	aam    0x7a
  41da90:	ret    
  41da91:	xchg   ebx,eax
  41da92:	adc    eax,0x42128e7d
  41da97:	test   al,0x3e
  41da99:	inc    ecx
  41da9a:	xchg   dl,bl
  41da9c:	cmp    esp,eax
  41da9e:	pop    ebp
  41da9f:	std    
  41daa0:	int3   
  41daa1:	jnp    0x41da47
  41daa3:	add    bh,BYTE PTR [esi]
  41daa5:	bound  ebp,QWORD PTR [edi-0x401f6d78]
  41daab:	mov    dl,0x2b
  41daad:	pop    esi
  41daae:	not    dh
  41dab0:	outs   dx,DWORD PTR ds:[esi]
  41dab1:	jmp    0xe8d4:0x837c260d
  41dab8:	stos   DWORD PTR es:[edi],eax
  41dab9:	jmp    0x41dab2
  41dabb:	iret   
  41dabc:	ja     0x41dab7
  41dabe:	xor    edx,DWORD PTR [ebx-0x53]
  41dac1:	jb     0x41da94
  41dac3:	xor    BYTE PTR [ecx+0x2e2a528a],dh
  41dac9:	gs (bad) 
  41dacb:	(bad)  
  41dacd:	aad    0xd5
  41dacf:	(bad)
  41dad2:	jae    0x41db0a
  41dad4:	daa    
  41dad5:	out    0xb9,eax
  41dad7:	sti    
  41dad8:	xor    dh,BYTE PTR [eax-0x3b917e53]
  41dade:	retf   0x7cd0
  41dae1:	sub    al,ah
  41dae3:	cmp    DWORD PTR [ebx-0x797c5eb0],esp
  41dae9:	push   ss
  41daea:	and    DWORD PTR [ebx],0xfffffff9
  41daed:	dec    eax
  41daee:	inc    edx
  41daef:	das    
  41daf0:	cmc    
  41daf1:	mov    eax,0x967de12e
  41daf6:	push   esp
  41daf7:	xchg   ebx,eax
  41daf8:	cmp    BYTE PTR [esi],dh
  41dafa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dafb:	aas    
  41dafc:	or     al,0x48
  41dafe:	sub    edx,DWORD PTR [ecx]
  41db00:	int    0x7c
  41db02:	jns    0x41db16
  41db04:	pop    es
  41db05:	icebp  
  41db06:	(bad)  
  41db07:	xchg   esp,eax
  41db08:	inc    ebx
  41db09:	rcl    BYTE PTR [edx+0x663e4cf7],0x97
  41db10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db11:	jb     0x41db5c
  41db13:	pop    edi
  41db14:	pop    ebx
  41db15:	xor    bl,BYTE PTR [edi+0x20334b76]
  41db1b:	imul   BYTE PTR [edi+0x51]
  41db1e:	mov    ebx,0xce73168
  41db23:	and    ebx,ebx
  41db25:	mov    dl,0x38
  41db27:	div    DWORD PTR [edx-0x218ea21f]
  41db2d:	call   0xbb36:0x31cf0695
  41db34:	(bad)  
  41db35:	test   eax,0x9e091fdd
  41db3a:	ret    
  41db3b:	rcr    DWORD PTR [ebx],1
  41db3d:	fadd   QWORD PTR [ecx-0x52]
  41db40:	mov    ch,0x63
  41db42:	imul   edx,DWORD PTR [ecx+0x258801ee],0x71d6a43d
  41db4c:	xor    eax,0xb7b91869
  41db51:	push   cs
  41db52:	cmp    eax,0x8fcd93b
  41db57:	cmp    DWORD PTR [edi],edx
  41db59:	jbe    0x41daf6
  41db5b:	dec    ebp
  41db5c:	xchg   DWORD PTR [eax-0x2b],edi
  41db5f:	push   0x640934c1
  41db64:	dec    esp
  41db65:	and    esp,ebx
  41db67:	arpl   WORD PTR [edx],ax
  41db69:	xlat   BYTE PTR ds:[ebx]
  41db6a:	mov    ds:0x99b5732d,eax
  41db6f:	xchg   ah,bh
  41db71:	mov    al,0x45
  41db73:	repnz and ecx,esp
  41db76:	sub    al,0x3f
  41db78:	aad    0x81
  41db7a:	rcl    DWORD PTR [ecx],0x67
  41db7d:	inc    esp
  41db7e:	idiv   esi
  41db80:	xlat   BYTE PTR ds:[ebx]
  41db81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db82:	int    0x80
  41db84:	mov    ch,BYTE PTR [eax-0x1e]
  41db87:	cbw    
  41db89:	mov    al,0xf0
  41db8b:	mov    al,BYTE PTR [esi+0x1e]
  41db8e:	xchg   edi,eax
  41db8f:	lock pop edx
  41db91:	fucomi st,st(1)
  41db93:	add    al,0x53
  41db95:	ror    esp,cl
  41db97:	xor    eax,DWORD PTR [edi+eiz*8]
  41db9a:	or     edi,ecx
  41db9c:	add    eax,0x92ef8994
  41dba1:	adc    DWORD PTR [ebp-0x6f],eax
  41dba4:	push   esi
  41dba5:	sub    eax,0xc000595e
  41dbaa:	push   edx
  41dbab:	mov    ebx,0x72216d95
  41dbb0:	rol    DWORD PTR [ebp-0x6ce5bda4],0x2a
  41dbb7:	xor    ch,BYTE PTR [edx+0x67]
  41dbba:	in     eax,dx
  41dbbb:	xor    eax,0xdea50081
  41dbc0:	ins    DWORD PTR es:[edi],dx
  41dbc1:	jo     0x41db67
  41dbc3:	das    
  41dbc4:	cmc    
  41dbc5:	jle    0x41dc1c
  41dbc7:	xchg   DWORD PTR [edx-0x4d],ebp
  41dbca:	frstor [ebx+esi*1-0x24]
  41dbce:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41dbd0:	mov    dl,0x87
  41dbd2:	xor    DWORD PTR [eax+ecx*4+0x55983ee1],edx
  41dbd9:	jns    0x41dc37
  41dbdb:	push   ss
  41dbdc:	ins    BYTE PTR es:[edi],dx
  41dbdd:	dec    edx
  41dbde:	gs daa 
  41dbe0:	xchg   ecx,eax
  41dbe1:	in     eax,0x15
  41dbe3:	aam    0x93
  41dbe5:	mov    ebp,0x7021db18
  41dbea:	mov    ah,0xa4
  41dbec:	cmp    DWORD PTR [edi+0x3f],ebp
  41dbef:	xchg   ebx,eax
  41dbf0:	loope  0x41dc51
  41dbf2:	push   esi
  41dbf3:	ss inc eax
  41dbf5:	jbe    0x41dbdf
  41dbf7:	sub    BYTE PTR ss:[eax-0x1d80ac44],0x8
  41dbff:	or     edi,ebx
  41dc01:	in     eax,0x7a
  41dc03:	sub    BYTE PTR [edx-0x64],0xd7
  41dc07:	adc    DWORD PTR [edi],edx
  41dc09:	sub    ah,bh
  41dc0b:	xor    eax,0x4c52e4d1
  41dc10:	mov    dh,dl
  41dc12:	dec    esp
  41dc13:	jbe    0x41dba1
  41dc15:	popa   
  41dc16:	xchg   ecx,eax
  41dc17:	and    cl,BYTE PTR ds:0xe355ba9f
  41dc1d:	clc    
  41dc1e:	sbb    eax,DWORD PTR [edi-0x18]
  41dc21:	push   ebp
  41dc22:	in     eax,dx
  41dc23:	xchg   esi,eax
  41dc24:	adc    bl,BYTE PTR [edx+ebx*2]
  41dc27:	ins    DWORD PTR es:[edi],dx
  41dc28:	dec    ebp
  41dc29:	mov    esp,?
  41dc2b:	jnp    0x41dc3c
  41dc2d:	dec    esi
  41dc2e:	xchg   esi,eax
  41dc2f:	sbb    al,0x49
  41dc31:	lahf   
  41dc32:	or     edi,ebx
  41dc34:	(bad)  [ebp+0x7105be82]
  41dc3a:	cmp    BYTE PTR [edx+0x5a],ch
  41dc3d:	popa   
  41dc3e:	jae    0x41dc33
  41dc40:	sub    ch,dl
  41dc42:	xor    eax,0x26e4c5b6
  41dc47:	test   DWORD PTR [edi+ebp*4-0x1370d2b5],0x7a0f0c0d
  41dc52:	mov    edx,0x91cdc19b
  41dc57:	add    DWORD PTR [esi-0x213ade85],esi
  41dc5d:	and    BYTE PTR [edx],0x73
  41dc60:	adc    al,0x74
  41dc62:	inc    ecx
  41dc63:	iret   
  41dc64:	push   ds
  41dc65:	push   ss
  41dc66:	mov    gs,WORD PTR [esi]
  41dc68:	xor    bh,BYTE PTR [eax+0x6e147423]
  41dc6e:	or     DWORD PTR [eax],edi
  41dc70:	pusha  
  41dc71:	xchg   edi,eax
  41dc72:	test   DWORD PTR [esi],edx
  41dc74:	adc    edi,ecx
  41dc76:	rol    DWORD PTR [eax],cl
  41dc78:	cwde   
  41dc79:	pop    esi
  41dc7a:	loopne 0x41dc91
  41dc7c:	and    eax,0xce79d3f0
  41dc81:	test   al,0xc7
  41dc83:	test   DWORD PTR [ebx-0x5f],0xac7ab88a
  41dc8a:	shr    DWORD PTR [edx],1
  41dc8c:	es aaa 
  41dc8e:	xchg   ebx,eax
  41dc8f:	imul   esi,DWORD PTR [bp+si-0x38],0xffffffb7
  41dc94:	pop    ss
  41dc95:	mov    al,ds:0x1d9c3402
  41dc9a:	sub    bh,BYTE PTR [ebp+eax*1-0x254e1d44]
  41dca1:	mov    ds:0xfce74b72,al
  41dca6:	cmc    
  41dca7:	into   
  41dca8:	and    ecx,ebp
  41dcaa:	lods   al,BYTE PTR ds:[esi]
  41dcab:	mov    cl,BYTE PTR [esi-0x2fe370d1]
  41dcb1:	jb     0x41dce7
  41dcb3:	dec    edx
  41dcb4:	loopne 0x41dc5c
  41dcb6:	icebp  
  41dcb7:	das    
  41dcb8:	sbb    BYTE PTR [ecx+0x61291d86],cl
  41dcbe:	bound  esi,QWORD PTR [eax]
  41dcc0:	sub    BYTE PTR [edi-0x6c],ah
  41dcc3:	xchg   dh,bh
  41dcc5:	jne    0x41dcd2
  41dcc7:	or     eax,0x10f21896
  41dccc:	fcmove st,st(2)
  41dcce:	imul   ebp,DWORD PTR [eax-0x6d43e3f6],0xc269f35f
  41dcd8:	bound  ebx,QWORD PTR [ecx+0x20]
  41dcdb:	push   0xa8c6748e
  41dce0:	fs xchg edx,eax
  41dce2:	mov    WORD PTR [edi+0x74],es
  41dce5:	jg     0x41dd32
  41dce7:	inc    edx
  41dce8:	icebp  
  41dce9:	shr    DWORD PTR [eax],1
  41dceb:	inc    edx
  41dcec:	out    dx,al
  41dced:	pop    esi
  41dcee:	retf   0xb7bf
  41dcf1:	xchg   BYTE PTR [eax],bh
  41dcf3:	(bad)  
  41dcf4:	cmp    eax,0x5cf6f63e
  41dcf9:	jae    0x41dca7
  41dcfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dcfc:	in     al,dx
  41dcfd:	lahf   
  41dcfe:	lahf   
  41dcff:	adc    BYTE PTR [ebx+0x3af321d6],0xe5
  41dd06:	push   0x49
  41dd08:	or     ch,BYTE PTR [edi+0x53]
  41dd0b:	xchg   edi,eax
  41dd0d:	mov    ?,WORD PTR [ecx]
  41dd0f:	ins    DWORD PTR es:[edi],dx
  41dd10:	out    dx,al
  41dd11:	push   esp
  41dd12:	mov    esp,0xfa83ac55
  41dd17:	lahf   
  41dd18:	inc    esp
  41dd19:	fild   DWORD PTR [ecx-0x53]
  41dd1c:	call   0xf27f:0x44a272d7
  41dd23:	add    ecx,ecx
  41dd25:	xchg   ebp,eax
  41dd26:	cli    
  41dd27:	add    bh,dh
  41dd29:	rol    DWORD PTR [esi+0x6e],1
  41dd2c:	jae    0x41dd00
  41dd2e:	or     eax,DWORD PTR [eax]
  41dd30:	jo     0x41dd8e
  41dd32:	or     DWORD PTR [ebx+0x7d910de3],ebx
  41dd38:	dec    ebx
  41dd39:	ficom  WORD PTR [ebx-0x3a8fb364]
  41dd3f:	adc    DWORD PTR ds:0xd093d1a6,esi
  41dd45:	sbb    al,0x8a
  41dd47:	jns    0x41dcf6
  41dd49:	sub    bh,BYTE PTR [ecx+0x10]
  41dd4c:	and    eax,0xf553d785
  41dd51:	push   esi
  41dd52:	dec    eax
  41dd53:	loop   0x41dcda
  41dd55:	mov    eax,ds:0x7ad8cc12
  41dd5a:	outs   dx,DWORD PTR ds:[esi]
  41dd5b:	pcmpeqd mm4,QWORD PTR ds:0x233d963a
  41dd62:	rol    eax,cl
  41dd64:	jo     0x41dd2d
  41dd66:	cdq    
  41dd67:	adc    BYTE PTR [ebp+0x3e],0x11
  41dd6b:	mov    dl,0xb8
  41dd6d:	cdq    
  41dd6e:	pop    es
  41dd6f:	pop    ebx
  41dd70:	jae    0x41dd65
  41dd72:	mov    ebx,0x695ea97c
  41dd77:	adc    esi,DWORD PTR [ebp+0x53]
  41dd7a:	or     ah,BYTE PTR [ecx]
  41dd7c:	ds sbb eax,0x75f856fd
  41dd82:	lods   eax,DWORD PTR ds:[esi]
  41dd83:	fisub  DWORD PTR [ebp-0x5f]
  41dd86:	arpl   WORD PTR [ecx+0x53c62114],cx
  41dd8c:	push   edi
  41dd8d:	(bad)  
  41dd8e:	in     al,dx
  41dd8f:	rcl    BYTE PTR [esp+eax*4+0x14819308],cl
  41dd96:	mov    al,BYTE PTR [ebp+0x3427d141]
  41dd9c:	and    DWORD PTR [ebx+0x73ced1a6],0x1a
  41dda3:	mul    BYTE PTR [edx+ebx*1]
  41dda6:	in     eax,dx
  41dda7:	daa    
  41dda8:	mov    al,0x82
  41ddaa:	and    eax,0x2cb2830b
  41ddaf:	sbb    al,0x25
  41ddb1:	aaa    
  41ddb2:	push   esp
  41ddb3:	dec    edi
  41ddb4:	loopne 0x41dd48
  41ddb6:	icebp  
  41ddb7:	and    bh,BYTE PTR [edx+ecx*8-0x74]
  41ddbb:	push   esi
  41ddbc:	sar    BYTE PTR [ebx+0x18],cl
  41ddbf:	(bad)  [esp+ebp*4+0x6f8533f]
  41ddc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ddc7:	popf   
  41ddc8:	fcomp  DWORD PTR [esi]
  41ddca:	xor    al,0x12
  41ddcc:	sbb    al,0x41
  41ddce:	push   esp
  41ddcf:	(bad)  
  41ddd0:	cmp    ch,BYTE PTR [edx]
  41ddd2:	bound  edx,QWORD PTR [ecx+ebx*2+0x36]
  41ddd6:	fstp   DWORD PTR [esi+0x42]
  41ddd9:	add    DWORD PTR [edi+esi*4],ebp
  41dddc:	cmp    ecx,esp
  41ddde:	fcom   DWORD PTR [edi+0x32c4c06a]
  41dde4:	pusha  
  41dde5:	int3   
  41dde6:	aam    0xcb
  41dde8:	xor    al,0x29
  41ddea:	sub    cl,dl
  41ddec:	fsubr  st,st(7)
  41ddee:	inc    ecx
  41ddef:	xor    al,0x4e
  41ddf1:	jno    0x41de5f
  41ddf3:	mov    esi,0x5cc431f6
  41ddf8:	mov    bl,0xa8
  41ddfa:	sbb    eax,edx
  41ddfc:	cmc    
  41ddfd:	jno    0x41dda1
  41ddff:	loop   0x41de5e
  41de01:	xchg   ebx,eax
  41de02:	int3   
  41de03:	in     eax,dx
  41de04:	fbld   TBYTE PTR [ecx+0x68]
  41de07:	mov    dh,0xee
  41de09:	mov    dl,0x71
  41de0b:	push   ecx
  41de0c:	mov    cs,WORD PTR fs:[ebp+0x60]
  41de10:	or     al,0xd0
  41de12:	xor    BYTE PTR [esi],bl
  41de14:	cld    
  41de15:	dec    edx
  41de16:	clc    
  41de17:	or     eax,0x58915b97
  41de1c:	lahf   
  41de1d:	mov    bh,0xe3
  41de1f:	jmp    DWORD PTR [esi-0x5f]
  41de22:	imul   ecx,DWORD PTR [eax],0x1b36aa81
  41de28:	adc    al,0x74
  41de2a:	(bad)  
  41de2b:	ret    
  41de2c:	fiadd  DWORD PTR [ebx-0x3b]
  41de2f:	sub    esi,ecx
  41de31:	or     BYTE PTR [edi+0x7e],0x7d
  41de35:	ins    DWORD PTR es:[edi],dx
  41de36:	sbb    al,0xba
  41de38:	add    edx,ecx
  41de3a:	mov    edi,eax
  41de3c:	popf   
  41de3d:	mov    cl,0xcf
  41de3f:	mov    bl,0x0
  41de41:	pop    esi
  41de42:	mov    al,ds:0xb7a659e
  41de47:	pop    es
  41de48:	aas    
  41de49:	sub    DWORD PTR [eax],ecx
  41de4b:	popa   
  41de4c:	retf   0x2e2f
  41de4f:	add    DWORD PTR [edi-0x32],edx
  41de52:	in     eax,0xbb
  41de54:	sub    bh,BYTE PTR [ebx]
  41de56:	mov    al,0xb0
  41de58:	lea    edx,[esi-0x33]
  41de5b:	push   es
  41de5c:	aaa    
  41de5d:	pop    es
  41de5e:	pop    ebx
  41de5f:	adc    eax,0xfda17f67
  41de64:	ror    BYTE PTR [edx],1
  41de66:	lds    edi,FWORD PTR [ecx]
  41de68:	call   0xcd2cdd32
  41de6d:	sbb    eax,0x6a2b1cc6
  41de72:	jbe    0x41dee0
  41de74:	mov    ebp,0x96c92bfe
  41de79:	or     esp,DWORD PTR ds:[eax]
  41de7c:	sbb    DWORD PTR [ebp+0x327ef303],esi
  41de82:	mov    esp,DWORD PTR [esi]
  41de84:	push   ebp
  41de85:	xor    eax,DWORD PTR [ecx]
  41de87:	jnp    0x41df02
  41de89:	mov    ch,BYTE PTR [edi-0x39a7ab02]
  41de8f:	jo     0x41de86
  41de91:	or     bl,BYTE PTR [eax+0x1f1f5007]
  41de97:	adc    DWORD PTR [ebx-0x1ddcffe6],edx
  41de9d:	mov    WORD PTR [ebx+0x60],?
  41dea0:	sbb    ebp,edx
  41dea2:	(bad)  
  41dea3:	jl     0x41de99
  41dea5:	mov    ebp,DWORD PTR [esi]
  41dea7:	and    BYTE PTR [ebp+0x2a],ch
  41deaa:	lock aaa 
  41deac:	in     eax,0xf
  41deae:	mov    edx,edx
  41deb0:	inc    esp
  41deb1:	pushf  
  41deb2:	out    0xa5,eax
  41deb4:	in     eax,0x57
  41deb6:	out    0xb0,eax
  41deb8:	mov    ecx,0x6e660856
  41debd:	bound  esi,QWORD PTR ds:0x633779ee
  41dec3:	mov    al,0xf5
  41dec5:	arpl   WORD PTR [ebx],bp
  41dec7:	ss ja  0x41df20
  41deca:	cdq    
  41decb:	mov    esp,DWORD PTR [esi]
  41decd:	mov    al,0x85
  41decf:	jae    0x41de73
  41ded1:	int    0x8e
  41ded3:	out    0xa,al
  41ded5:	mov    eax,ds:0x9656470e
  41deda:	call   FWORD PTR [esp+eax*1]
  41dedd:	cmp    bl,BYTE PTR [edx-0x533c8e]
  41dee3:	adc    eax,0xb0919519
  41dee8:	in     al,dx
  41dee9:	ja     0x41df67
  41deeb:	pusha  
  41deec:	xchg   esp,eax
  41deed:	icebp  
  41deee:	cli    
  41deef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41def0:	int3   
  41def1:	mov    DWORD PTR [edi+edi*2],edi
  41def4:	push   edx
  41def5:	xchg   edx,eax
  41def6:	jmp    0x545e:0x2b58e106
  41defd:	adc    eax,0x5da01936
  41df02:	add    al,0xd7
  41df04:	clc    
  41df05:	pop    esi
  41df06:	push   es
  41df07:	mov    esp,0xb0c2f9b0
  41df0c:	in     eax,dx
  41df0d:	add    al,bh
  41df0f:	popf   
  41df10:	ss dec edi
  41df12:	jb     0x41de9f
  41df14:	imul   esp,DWORD PTR ds:0x22e13f54,0x48fe7986
  41df1e:	adc    dl,BYTE PTR [esi+0x371523bd]
  41df24:	mov    ah,0x23
  41df26:	lods   al,BYTE PTR ds:[esi]
  41df27:	cdq    
  41df28:	(bad)
  41df2b:	or     bh,BYTE PTR [edx-0x56]
  41df2e:	js     0x41df08
  41df30:	xchg   edx,eax
  41df31:	sub    BYTE PTR [ebx+0x6e],0x9d
  41df35:	mov    esi,0x35d5be32
  41df3a:	fmul   DWORD PTR [esi-0x14]
  41df3d:	aas    
  41df3e:	inc    edx
  41df3f:	mov    eax,0x96d31ca6
  41df44:	ret    
  41df45:	fwait
  41df46:	mov    ebp,0x739acbbb
  41df4b:	add    al,0x76
  41df4d:	jp     0x41dfbe
  41df4f:	jge    0x41df51
  41df51:	test   al,0x6d
  41df53:	sti    
  41df54:	pop    es
  41df55:	mov    cl,0xf6
  41df57:	sbb    BYTE PTR [eax+0x65],al
  41df5a:	sar    ebp,1
  41df5c:	push   esp
  41df5d:	add    eax,edi
  41df5f:	repnz mov esp,0xa1430835
  41df65:	xchg   edi,eax
  41df66:	or     bh,BYTE PTR [esp+eiz*2+0x7dbc2d5]
  41df6d:	ins    DWORD PTR es:[edi],dx
  41df6e:	or     eax,0xd0c0d992
  41df73:	out    0x9b,al
  41df75:	pop    ss
  41df76:	aam    0x34
  41df78:	push   ss
  41df79:	inc    ebx
  41df7a:	lahf   
  41df7b:	pop    ss
  41df7c:	xchg   DWORD PTR [edx-0x61],edi
  41df7f:	outs   dx,BYTE PTR ds:[esi]
  41df80:	or     edx,0x855b57cb
  41df86:	hlt    
  41df87:	popa   
  41df88:	add    esi,DWORD PTR [ecx-0x80]
  41df8b:	jge    0x41dfec
  41df8d:	dec    esi
  41df8e:	pop    ebp
  41df8f:	aam    0xb6
  41df91:	xor    DWORD PTR [eax+0x7c348968],eax
  41df97:	dec    esp
  41df98:	jae    0x41e005
  41df9a:	sbb    al,0xbd
  41df9c:	sti    
  41df9d:	loop   0x41dfaf
  41df9f:	jb     0x41dfad
  41dfa1:	es inc ebx
  41dfa3:	(bad)  
  41dfa4:	jecxz  0x41dff8
  41dfa6:	mov    al,ds:0xe9fd87d5
  41dfab:	push   edi
  41dfac:	scas   eax,DWORD PTR es:[edi]
  41dfad:	sub    al,bh
  41dfaf:	adc    BYTE PTR [ecx-0x36],bh
  41dfb2:	stos   DWORD PTR es:[edi],eax
  41dfb3:	adc    eax,0xffdfe1da
  41dfb8:	jb     0x41dfb8
  41dfba:	add    BYTE PTR [ecx+0x559d4ccf],cl
  41dfc0:	xchg   esi,eax
  41dfc1:	dec    edx
  41dfc2:	fimul  WORD PTR [ebx+0xd]
  41dfc5:	pop    ebp
  41dfc6:	sub    BYTE PTR [eax],cl
  41dfc8:	enter  0x2ca0,0x71
  41dfcc:	mov    dl,0x32
  41dfce:	fwait
  41dfcf:	jl     0x41dfe6
  41dfd1:	icebp  
  41dfd2:	inc    edi
  41dfd3:	mov    bh,0x30
  41dfd5:	adc    ebp,DWORD PTR [ebx+0x39]
  41dfd8:	sbb    eax,0xac984086
  41dfdd:	shr    BYTE PTR [edx],cl
  41dfdf:	mov    ebp,0xfb1c3c45
  41dfe4:	shr    al,0x99
  41dfe7:	cmp    bl,BYTE PTR [ebx+eax*1-0x63886f48]
  41dfee:	dec    esi
  41dfef:	jl     0x41dfa8
  41dff1:	cs enter 0xd92b,0x5a
  41dff6:	test   BYTE PTR [ebx-0x71dafa76],bh
  41dffc:	add    DWORD PTR [edi],ecx
  41dffe:	sahf   
  41dfff:	ins    BYTE PTR es:[edi],dx
  41e000:	scas   eax,DWORD PTR es:[edi]
  41e001:	shr    BYTE PTR [esi-0x44],1
  41e004:	cdq    
  41e005:	mov    cl,0x3d
  41e007:	jg     0x41e046
  41e009:	ja     0x41e036
  41e00b:	cli    
  41e00c:	sbb    BYTE PTR [eax],dl
  41e00e:	test   dh,ah
  41e010:	mov    WORD PTR ds:[ecx+0x31],fs
  41e014:	adc    dh,BYTE PTR [eax]
  41e016:	fsubr  DWORD PTR [ecx]
  41e018:	enter  0x23c9,0x64
  41e01c:	in     al,dx
  41e01d:	ds jae 0x41dfa0
  41e020:	xlat   BYTE PTR ds:[ebx]
  41e021:	xchg   ecx,eax
  41e022:	mov    dh,0xa3
  41e024:	ss cdq 
  41e026:	(bad)  
  41e027:	leave  
  41e028:	popf   
  41e029:	fs popf 
  41e02b:	leave  
  41e02c:	sahf   
  41e02d:	push   es
  41e02e:	adc    BYTE PTR [edx],dl
  41e030:	pop    edx
  41e031:	sub    dl,al
  41e033:	cmc    
  41e034:	mov    ah,0xf2
  41e036:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e037:	cmc    
  41e038:	jmp    0x41dfc4
  41e03a:	push   edi
  41e03b:	bound  edi,QWORD PTR [ebx+0x4ce66674]
  41e041:	inc    esi
  41e042:	nop
  41e043:	mov    dl,BYTE PTR [ebx]
  41e045:	stos   BYTE PTR es:[edi],al
  41e046:	stos   DWORD PTR es:[edi],eax
  41e047:	push   cs
  41e048:	adc    al,BYTE PTR [eax-0x54]
  41e04b:	and    esp,ecx
  41e04d:	rcl    BYTE PTR [eax+eiz*2+0x67],cl
  41e051:	and    DWORD PTR [eax+0x3b],edx
  41e054:	add    BYTE PTR [edx-0x72],dl
  41e057:	adc    eax,0x2a322b8f
  41e05c:	or     eax,0xf39fd42
  41e061:	xchg   edi,eax
  41e062:	idiv   BYTE PTR [eax-0x5e]
  41e065:	inc    eax
  41e066:	fisttp WORD PTR [ecx+0x23d0bcf]
  41e06c:	adc    eax,0x30072f86
  41e071:	lahf   
  41e072:	sub    DWORD PTR [edi],edi
  41e074:	jnp    0x41e0a8
  41e076:	adc    DWORD PTR ds:0xb583f8c0,edx
  41e07c:	mov    bh,0x9d
  41e07e:	fdivr  st(4),st
  41e080:	inc    edi
  41e081:	sbb    al,0x5e
  41e083:	adc    eax,0x3b6c04c7
  41e088:	cmp    eax,DWORD PTR [edx+0x4169def2]
  41e08e:	dec    esp
  41e08f:	lock and al,0x8b
  41e092:	and    eax,0x160cf6b6
  41e097:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e098:	and    eax,0x35384f61
  41e09d:	inc    edx
  41e09e:	fsub   QWORD PTR [ebp-0x25038733]
  41e0a4:	fwait
  41e0a5:	xor    eax,0x8a445304
  41e0aa:	jbe    0x41e070
  41e0ac:	add    ah,BYTE PTR [esi]
  41e0ae:	mov    eax,ds:0x6dece063
  41e0b3:	add    DWORD PTR [ebx+0x77],edi
  41e0b6:	sti    
  41e0b7:	cmp    DWORD PTR [esi],esp
  41e0b9:	test   al,0x98
  41e0bb:	mov    ds:0x5567d41c,al
  41e0c0:	dec    ecx
  41e0c1:	fadd   st(3),st
  41e0c3:	pop    ecx
  41e0c4:	rol    ebx,0xb9
  41e0c7:	cmp    dh,BYTE PTR [esi-0x60]
  41e0ca:	xchg   BYTE PTR [edx-0x593618c6],bl
  41e0d0:	clc    
  41e0d1:	out    dx,eax
  41e0d2:	pop    esi
  41e0d3:	push   ss
  41e0d4:	in     al,0x8c
  41e0d6:	xlat   BYTE PTR ds:[ebx]
  41e0d7:	in     eax,dx
  41e0d8:	sbb    BYTE PTR [edi+0x76],dh
  41e0db:	outs   dx,BYTE PTR ds:[esi]
  41e0dc:	pop    ecx
  41e0dd:	or     DWORD PTR [edi-0x3e3f06c7],edx
  41e0e3:	and    dl,dl
  41e0e5:	pop    edi
  41e0e6:	fwait
  41e0e7:	mov    ebx,0xa20e7bf3
  41e0ec:	cmp    al,0x9d
  41e0ee:	out    0xf1,eax
  41e0f0:	push   esp
  41e0f1:	push   eax
  41e0f2:	daa    
  41e0f3:	outs   dx,DWORD PTR ds:[esi]
  41e0f5:	dec    ebx
  41e0f6:	pushf  
  41e0f7:	add    eax,0x81f4c08b
  41e0fc:	lods   al,BYTE PTR ds:[esi]
  41e0fd:	nop
  41e0fe:	pop    es
  41e0ff:	outs   dx,BYTE PTR ds:[esi]
  41e100:	data16 ficom DWORD PTR [edi+0x790734f9]
  41e107:	add    ebp,DWORD PTR [ebx+ecx*8+0x56]
  41e10b:	(bad)  
  41e10c:	sbb    eax,DWORD PTR [esi]
  41e10e:	gs ret 0xba2e
  41e112:	adc    eax,0xd9535377
  41e117:	inc    edi
  41e118:	mov    edi,0xafad43b9
  41e11d:	sub    eax,0x5e15023f
  41e122:	sbb    eax,0x2cc099ba
  41e127:	cmp    dh,BYTE PTR [esi]
  41e129:	and    eax,0x42909d11
  41e12e:	call   0xf491:0xf1d21b21
  41e135:	into   
  41e136:	mov    al,0x74
  41e138:	into   
  41e139:	adc    DWORD PTR [esi-0x1d17d76d],0xda54f883
  41e143:	add    bl,bl
  41e145:	xchg   esp,eax
  41e146:	fst    st(1)
  41e148:	sbb    cl,0x90
  41e14b:	push   0xffffff98
  41e14d:	sub    eax,0x1a0ca8db
  41e152:	ret    
  41e153:	sbb    DWORD PTR [ebp+0x4d],edi
  41e156:	xchg   ebx,eax
  41e157:	pushf  
  41e158:	adc    BYTE PTR [esi-0x18],0x3b
  41e15c:	sbb    BYTE PTR [edx-0x1],ch
  41e15f:	pop    ds
  41e160:	push   ecx
  41e161:	mov    ah,0x2b
  41e163:	pop    edi
  41e164:	call   0x871f:0x86a11f0f
  41e16b:	push   0xb1dd7b06
  41e170:	das    
  41e171:	mov    dh,0x3f
  41e173:	aaa    
  41e174:	rol    BYTE PTR [esi+eax*4+0x32],cl
  41e178:	jbe    0x41e1f8
  41e17a:	or     eax,0x9fc06548
  41e17f:	div    DWORD PTR [edx+0x53]
  41e182:	stc    
  41e183:	out    0xcb,eax
  41e185:	lods   al,BYTE PTR ds:[esi]
  41e186:	call   0xc81b:0x395c91da
  41e18d:	fwait
  41e18e:	icebp  
  41e18f:	stc    
  41e190:	jecxz  0x41e160
  41e192:	sub    DWORD PTR [ebp+ebx*4+0x35a72b1a],ecx
  41e199:	pop    ss
  41e19a:	sti    
  41e19b:	out    0xe6,al
  41e19d:	push   es
  41e19e:	push   esi
  41e19f:	add    eax,0xc06cf107
  41e1a4:	jno    0x41e1e7
  41e1a6:	test   BYTE PTR ds:0x4bfaaeea,ch
  41e1ac:	mov    dh,0x63
  41e1ae:	sbb    esi,0xffffffd9
  41e1b1:	lock xor al,0x69
  41e1b4:	push   esi
  41e1b5:	pushf  
  41e1b6:	dec    ecx
  41e1b7:	fmul   QWORD PTR [ecx-0x34c52fca]
  41e1bd:	add    al,0x35
  41e1bf:	adc    ch,BYTE PTR [edx]
  41e1c1:	inc    esi
  41e1c2:	ds mov ebp,0x9ffa32d
  41e1c8:	inc    esp
  41e1c9:	dec    edi
  41e1ca:	cmp    eax,0x2c34bb1b
  41e1cf:	(bad)  
  41e1d0:	sub    BYTE PTR [ecx],cl
  41e1d2:	jl     0x41e1bf
  41e1d4:	aas    
  41e1d5:	retf   0xd89e
  41e1d8:	dec    ebx
  41e1d9:	(bad)  
  41e1da:	mov    bl,0x17
  41e1dc:	and    al,0x4
  41e1de:	into   
  41e1df:	cmp    DWORD PTR [ebx-0x19],ecx
  41e1e2:	cld    
  41e1e3:	dec    esp
  41e1e4:	mov    ebx,DWORD PTR [edx]
  41e1e6:	mov    edx,0x63da4350
  41e1eb:	dec    eax
  41e1ec:	mov    dl,0xf7
  41e1ee:	mov    edx,0xdada0dce
  41e1f3:	pop    ebp
  41e1f4:	inc    ebp
  41e1f5:	mov    esp,0xca90c117
  41e1fa:	adc    DWORD PTR [edx-0x3e],edi
  41e1fd:	loop   0x41e1c0
  41e1ff:	call   0x4ed4ade5
  41e204:	aam    0x52
  41e206:	mul    esp
  41e208:	out    dx,al
  41e209:	inc    esi
  41e20a:	jle    0x41e224
  41e20c:	repnz cmp al,0x70
  41e20f:	imul   ecx,DWORD PTR [edi-0x6f64fa96],0x4512cbb6
  41e219:	inc    eax
  41e21a:	mov    al,0x85
  41e21c:	dec    ecx
  41e21d:	out    0x8a,al
  41e21f:	in     eax,dx
  41e220:	xchg   edx,edx
  41e222:	cmp    BYTE PTR [edx],ah
  41e224:	cli    
  41e225:	(bad)  
  41e226:	fcomp  DWORD PTR gs:[edi+0x2f3f9e8c]
  41e22d:	addr16 shl edx,cl
  41e230:	aam    0xf1
  41e232:	jno    0x41e214
  41e234:	aad    0x3b
  41e236:	pop    es
  41e237:	dec    ebx
  41e238:	dec    edx
  41e239:	rcl    BYTE PTR [ecx-0x12],cl
  41e23c:	aad    0xfe
  41e23e:	adc    BYTE PTR [edi+0x490843b4],cl
  41e244:	(bad)  
  41e245:	(bad)  
  41e247:	mov    ecx,0xc005a8d4
  41e24c:	arpl   WORD PTR [esi-0x29],dx
  41e24f:	addr16 daa 
  41e251:	sub    DWORD PTR [edx],0xd254ba6c
  41e257:	pop    eax
  41e258:	in     eax,dx
  41e259:	sub    eax,0xa878c99c
  41e25e:	arpl   si,di
  41e260:	pop    ebp
  41e261:	sbb    ch,ch
  41e263:	pop    es
  41e264:	fs mov esi,0x4e4e0f2c
  41e26a:	xlat   BYTE PTR ds:[ebx]
  41e26b:	inc    edx
  41e26c:	ds js  0x41e26d
  41e26f:	in     al,dx
  41e270:	int3   
  41e271:	jae    0x41e229
  41e273:	mov    edi,0xe09002ce
  41e278:	hlt    
  41e279:	mov    ch,cl
  41e27b:	or     bl,BYTE PTR [edx-0x8]
  41e27e:	pop    ss
  41e27f:	or     BYTE PTR [eax],al
  41e281:	push   edx
  41e282:	pop    es
  41e283:	sub    BYTE PTR [edx+esi*1],0x18
  41e287:	js     0x41e26a
  41e289:	je     0x41e299
  41e28b:	xchg   ecx,eax
  41e28c:	(bad)  
  41e28d:	mov    al,0x73
  41e28f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e290:	dec    edi
  41e291:	aad    0x1e
  41e293:	jg     0x41e2f0
  41e295:	cmp    BYTE PTR [edi-0x42],bl
  41e298:	pop    edi
  41e299:	sbb    ah,cl
  41e29b:	lahf   
  41e29c:	pushf  
  41e29d:	cmp    ch,BYTE PTR [edi]
  41e29f:	mov    dh,0x11
  41e2a1:	or     BYTE PTR [ebp-0x5],0x42
  41e2a5:	arpl   WORD PTR [ebp+0x43d1673e],bp
  41e2ab:	test   eax,0xff728c21
  41e2b0:	popa   
  41e2b1:	push   es
  41e2b2:	lods   al,BYTE PTR ds:[esi]
  41e2b3:	xchg   edx,eax
  41e2b4:	aam    0xc0
  41e2b6:	je     0x41e308
  41e2b8:	fcomp  QWORD PTR [eax]
  41e2ba:	cld    
  41e2bb:	mov    al,al
  41e2bd:	mov    edi,0x212d4e3
  41e2c2:	dec    ebp
  41e2c3:	(bad)  
  41e2c4:	ins    DWORD PTR es:[di],dx
  41e2c6:	sub    al,0x60
  41e2c8:	mov    BYTE PTR [ecx+0x7e8dcba8],dh
  41e2ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2cf:	cli    
  41e2d0:	jb     0x41e33d
  41e2d2:	pushf  
  41e2d3:	ds enter 0x3065,0x60
  41e2d8:	or     dl,bl
  41e2da:	inc    ebx
  41e2db:	mov    cl,0xf4
  41e2dd:	pause  
  41e2df:	call   0xc381:0x9751be16
  41e2e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2e7:	add    eax,0xbea53a87
  41e2ec:	pop    edi
  41e2ed:	dec    edx
  41e2ee:	fcmovnbe st,st(5)
  41e2f0:	out    0xbd,al
  41e2f2:	sbb    DWORD PTR [esi],ecx
  41e2f4:	mov    bh,0xe
  41e2f6:	jb     0x41e2c2
  41e2f8:	mov    bh,0xe0
  41e2fa:	addr16 pushf 
  41e2fc:	pop    eax
  41e2fd:	jp     0x41e31d
  41e2ff:	pop    eax
  41e300:	imul   ebx,esp,0x41
  41e303:	xchg   edi,eax
  41e304:	xchg   esi,eax
  41e305:	mov    fs,WORD PTR [ebx+ecx*8]
  41e308:	mov    BYTE PTR [edi-0x29b23],al
  41e30e:	mov    ch,0x7b
  41e310:	and    DWORD PTR [edi+0x5d],ecx
  41e313:	das    
  41e314:	loope  0x41e371
  41e316:	mov    dh,0xa7
  41e318:	inc    esi
  41e319:	loopne 0x41e2c9
  41e31b:	mov    ?,WORD PTR es:0x9c3205c3
  41e322:	inc    esp
  41e323:	cmp    BYTE PTR [eax],0x83
  41e326:	jae    0x41e329
  41e328:	inc    eax
  41e329:	and    edi,edi
  41e32b:	not    BYTE PTR ds:0x4df4bb7c
  41e331:	or     BYTE PTR [esp+ebx*2-0x4f],ch
  41e335:	stos   DWORD PTR es:[edi],eax
  41e336:	test   al,0xf0
  41e338:	pop    ecx
  41e339:	bound  eax,QWORD PTR [edi]
  41e33b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e33c:	mov    ebp,0xf7093296
  41e341:	xchg   ebx,eax
  41e342:	lea    esp,[eax-0x16]
  41e345:	mov    dl,BYTE PTR [esi]
  41e347:	mov    WORD PTR [edi-0x48],gs
  41e34a:	retf   0xf7f7
  41e34d:	mov    dl,0x7d
  41e34f:	or     ch,dh
  41e351:	das    
  41e352:	pop    edi
  41e353:	popa   
  41e354:	rol    DWORD PTR [ebp+0xd74fcf3],cl
  41e35a:	jmp    0x41e3b3
  41e35c:	pop    eax
  41e35d:	ds ds dec ebx
  41e360:	mov    edi,DWORD PTR [edx+0x64]
  41e363:	pushf  
  41e364:	daa    
  41e365:	cld    
  41e366:	inc    eax
  41e367:	dec    edi
  41e368:	adc    eax,0x74029a99
  41e36d:	or     eax,0xefc1ef28
  41e372:	lds    edx,FWORD PTR [ecx]
  41e374:	loope  0x41e348
  41e376:	dec    ebp
  41e377:	and    esp,eax
  41e379:	push   ss
  41e37a:	xor    eax,DWORD PTR [ebp+0x70]
  41e37d:	iret   
  41e37e:	push   0x217d7a99
  41e383:	fwait
  41e384:	rol    edx,1
  41e386:	mov    ch,0x3e
  41e388:	icebp  
  41e389:	push   ecx
  41e38a:	fdiv   QWORD PTR ds:0xdf8fdc3f
  41e390:	loop   0x41e3c0
  41e392:	rol    BYTE PTR [ebx+0x30],1
  41e395:	int3   
  41e396:	lods   eax,DWORD PTR ds:[esi]
  41e397:	arpl   WORD PTR [edi+0x57],cx
  41e39a:	fcmovb st,st(2)
  41e39c:	outs   dx,DWORD PTR gs:[esi]
  41e39e:	and    BYTE PTR [ecx-0x1266e511],0x2d
  41e3a5:	and    BYTE PTR [ecx+0x5],dl
  41e3a8:	sub    eax,0x47981d01
  41e3ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e3ae:	int3   
  41e3af:	pop    ss
  41e3b0:	test   eax,0x315398fa
  41e3b5:	call   DWORD PTR [eax+ebx*8]
  41e3b8:	cmp    al,0xb8
  41e3ba:	or     DWORD PTR [esi-0x2f],0xfffffff4
  41e3be:	outs   dx,BYTE PTR ds:[esi]
  41e3bf:	stc    
  41e3c0:	xchg   esp,eax
  41e3c1:	out    dx,eax
  41e3c2:	fcomp  DWORD PTR [esi+0x66]
  41e3c5:	dec    edx
  41e3c6:	mov    al,0x5a
  41e3c8:	test   BYTE PTR ds:0x11879ec8,ah
  41e3ce:	mov    esp,0x8bf04e83
  41e3d3:	mov    ebp,0x9cd3e30
  41e3d8:	cld    
  41e3d9:	adc    al,0x4a
  41e3db:	out    0x61,eax
  41e3dd:	addr16 push esi
  41e3df:	sbb    cl,BYTE PTR [ebx+0x58]
  41e3e2:	sbb    bl,dl
  41e3e4:	xor    eax,0x8c3c399
  41e3e9:	imul   eax,DWORD PTR [esi],0x3329abf0
  41e3ef:	mov    eax,0x95f08c17
  41e3f4:	pop    ecx
  41e3f5:	mov    ds:0x7dfdd0c6,eax
  41e3fa:	(bad)  
  41e3fb:	hlt    
  41e3fc:	(bad)  
  41e3fd:	rcr    BYTE PTR [esi-0x3a552450],1
  41e403:	push   cs
  41e404:	jo     0x41e403
  41e406:	adc    ebx,edi
  41e408:	ret    0x1c58
  41e40b:	int    0x58
  41e40d:	test   eax,0xcfd854d5
  41e412:	inc    ecx
  41e413:	ret    0xc6ac
  41e416:	and    edx,esi
  41e418:	or     BYTE PTR [edi+0x3bf15795],dl
  41e41e:	and    bh,BYTE PTR [esi+0x613f6ee4]
  41e424:	pop    ss
  41e425:	ins    BYTE PTR es:[edi],dx
  41e426:	(bad)  
  41e427:	ror    al,1
  41e429:	jl     0x41e3c6
  41e42b:	fst    QWORD PTR [edi+0x41]
  41e42e:	inc    esp
  41e42f:	mov    al,ds:0xc7eb8dee
  41e434:	loop   0x41e4b4
  41e436:	sub    al,0xee
  41e438:	xchg   edx,eax
  41e439:	adc    eax,0xbae3176d
  41e43e:	out    dx,al
  41e43f:	jge    0x41e3fa
  41e441:	mov    ah,0xa3
  41e443:	mov    dh,0x93
  41e445:	lods   eax,DWORD PTR ds:[esi]
  41e446:	lea    eax,[esi+0x6dbbb54f]
  41e44c:	cmp    eax,0xa7697d20
  41e451:	push   eax
  41e452:	ins    BYTE PTR es:[edi],dx
  41e453:	jns    0x41e4c6
  41e455:	pusha  
  41e456:	in     al,0x40
  41e458:	dec    eax
  41e459:	clc    
  41e45a:	jle    0x41e4af
  41e45c:	(bad)  
  41e45d:	or     BYTE PTR [ebx],bl
  41e45f:	pusha  
  41e460:	fldcw  WORD PTR [edi]
  41e462:	sbb    al,BYTE PTR [esi]
  41e464:	out    dx,eax
  41e465:	xchg   ch,al
  41e467:	popf   
  41e468:	call   0xfd79:0x3f529255
  41e46f:	and    DWORD PTR [eax],0x8588a106
  41e475:	dec    edi
  41e476:	sldt   esi
  41e479:	cmp    ebx,DWORD PTR [edx+0x7f]
  41e47c:	mov    edx,0x1b7beeea
  41e481:	test   al,ah
  41e483:	fidivr WORD PTR [edi-0x74]
  41e486:	cwde   
  41e487:	mov    ch,0x55
  41e489:	lahf   
  41e48a:	dec    ebx
  41e48b:	sub    al,0x21
  41e48d:	out    0xd4,eax
  41e48f:	dec    ebp
  41e490:	sahf   
  41e491:	dec    eax
  41e492:	mov    ecx,0xfde1c8b0
  41e497:	inc    edx
  41e498:	xchg   edx,eax
  41e499:	pushf  
  41e49a:	(bad)  
  41e49b:	sbb    al,0x4
  41e49d:	sub    dl,BYTE PTR [esi-0x41aa580e]
  41e4a3:	dec    edx
  41e4a4:	add    dh,BYTE PTR [edx+0x42]
  41e4a7:	call   0x56df:0xafe31e42
  41e4ae:	sbb    dh,BYTE PTR ds:0xca73fdaf
  41e4b4:	data16 cmp dh,BYTE PTR [ebp+0x1a]
  41e4b8:	retf   0x950f
  41e4bb:	sahf   
  41e4bc:	not    DWORD PTR [eax+0x13]
  41e4bf:	jg     0x41e4e4
  41e4c1:	dec    ebx
  41e4c2:	ror    cl,cl
  41e4c4:	test   DWORD PTR [edx],ebx
  41e4c6:	xchg   DWORD PTR [esi-0x71],ecx
  41e4c9:	mov    BYTE PTR [eax+ecx*2+0x490d2279],ah
  41e4d0:	imul   edx,DWORD PTR [ebp+0x2a],0xffffffd3
  41e4d4:	ret    
  41e4d5:	dec    edx
  41e4d6:	lds    esp,FWORD PTR [eax+0x3d376ef6]
  41e4dc:	dec    edx
  41e4dd:	mov    ebp,0x734bc573
  41e4e2:	add    eax,0xd146b29e
  41e4e7:	popa   
  41e4e8:	jge    0x41e53d
  41e4ea:	loop   0x41e4f1
  41e4ec:	mov    ecx,0xfcb1d8fd
  41e4f1:	lods   al,BYTE PTR ds:[esi]
  41e4f2:	mov    WORD PTR [edx-0x363632b5],?
  41e4f8:	leave  
  41e4f9:	mov    ch,0x95
  41e4fb:	fist   WORD PTR [edi*1+0x1b81e9d1]
  41e502:	aaa    
  41e503:	pop    eax
  41e504:	sub    eax,esp
  41e506:	and    eax,0x7592867
  41e50b:	dec    ebx
  41e50c:	add    BYTE PTR [edx],ah
  41e50e:	sbb    BYTE PTR [edi+0x7076bbb9],ah
  41e514:	pushf  
  41e515:	jle    0x41e52b
  41e517:	jnp    0x41e583
  41e519:	bound  ebx,QWORD PTR [esi+ebp*4+0x153a66ef]
  41e520:	mov    BYTE PTR [ecx],bh
  41e522:	ja     0x41e4b8
  41e524:	std    
  41e525:	sti    
  41e526:	push   edi
  41e527:	fbstp  TBYTE PTR [eax+0x6a]
  41e52a:	push   ss
  41e52b:	lock xchg esp,eax
  41e52d:	jle    0x41e52d
  41e52f:	call   0xebd4:0xd59acecb
  41e536:	data16 sub al,0xf
  41e539:	sub    ch,al
  41e53b:	out    dx,al
  41e53c:	in     eax,dx
  41e53d:	daa    
  41e53e:	jmp    0x41e585
  41e540:	inc    esp
  41e541:	mov    ah,0xec
  41e543:	popa   
  41e544:	ds pop edi
  41e546:	je     0x41e5a9
  41e548:	enter  0xed5e,0x9d
  41e54c:	fxtract 
  41e54e:	inc    edx
  41e54f:	cmc    
  41e550:	daa    
  41e551:	inc    ebp
  41e552:	mov    ecx,0x5393399d
  41e557:	adc    edx,ebp
  41e559:	mov    al,0xff
  41e55b:	mov    dh,0xe1
  41e55d:	inc    ecx
  41e55e:	jbe    0x41e55d
  41e560:	mov    ?,WORD PTR [ebp-0x58]
  41e563:	xor    al,0x2c
  41e565:	push   ss
  41e566:	ja     0x41e5e0
  41e568:	mov    cl,0x3a
  41e56a:	xchg   ebp,eax
  41e56b:	scas   eax,DWORD PTR es:[edi]
  41e56c:	pop    es
  41e56d:	popf   
  41e56e:	out    0xcf,eax
  41e570:	(bad)  
  41e571:	outs   dx,BYTE PTR ds:[si]
  41e573:	adc    bh,BYTE PTR [esi+0x2d60a56d]
  41e579:	shl    DWORD PTR [edi+0x30fa0a8f],cl
  41e57f:	inc    ecx
  41e580:	xor    BYTE PTR [ecx+0x5d],cl
  41e583:	arpl   WORD PTR [esi-0x7ce88d7f],di
  41e589:	in     eax,0xe5
  41e58b:	arpl   WORD PTR [edi+eax*4],cx
  41e58e:	sub    BYTE PTR [edi],ch
  41e590:	cdq    
  41e591:	popf   
  41e592:	(bad)  
  41e593:	mov    ebx,0x3c09c172
  41e598:	repz jp 0x41e5fd
  41e59b:	jmp    0xd7a11f9d
  41e5a0:	imul   eax,DWORD PTR [esi],0xffffff8f
  41e5a3:	iret   
  41e5a4:	or     al,dl
  41e5a6:	and    eax,DWORD PTR [esi+0x7224e108]
  41e5ac:	mov    BYTE PTR [esi],bl
  41e5ae:	mov    eax,ds:0x58d390b4
  41e5b3:	pop    ss
  41e5b4:	jle    0x41e5d1
  41e5b6:	or     BYTE PTR [ebp+0x8],bh
  41e5b9:	ins    DWORD PTR es:[edi],dx
  41e5ba:	add    al,0x1
  41e5bc:	(bad)  
  41e5bd:	sbb    BYTE PTR [ecx],bl
  41e5bf:	mov    ds:0x4943afa0,eax
  41e5c4:	enter  0x4214,0x4b
  41e5c8:	pop    edi
  41e5c9:	imul   ebp,esi,0xffffff96
  41e5cc:	pop    esp
  41e5cd:	jae    0x41e596
  41e5cf:	mov    bl,0xe5
  41e5d1:	cmc    
  41e5d2:	(bad)  
  41e5d3:	jmp    0x168d:0x3ccf69c8
  41e5da:	jl     0x41e592
  41e5dc:	adc    al,0x6a
  41e5de:	out    dx,al
  41e5df:	sub    edi,0xffffffd5
  41e5e2:	repnz pop ebx
  41e5e4:	pop    edx
  41e5e5:	adc    DWORD PTR [ecx],eax
  41e5e7:	jno    0x41e5e1
  41e5e9:	ins    DWORD PTR es:[edi],dx
  41e5ea:	xor    dl,dl
  41e5ec:	sub    al,0x16
  41e5ee:	sub    DWORD PTR [eax-0x41],esi
  41e5f1:	cmp    dl,al
  41e5f3:	les    ebx,FWORD PTR [ecx+esi*8-0x14]
  41e5f7:	jb     0x41e651
  41e5f9:	imul   ebp,ebp,0xf1d76051
  41e5ff:	in     al,0xb1
  41e601:	popf   
  41e602:	mov    ebp,0xa08a8091
  41e607:	in     eax,0x50
  41e609:	lods   al,BYTE PTR ds:[esi]
  41e60a:	dec    edi
  41e60b:	leave  
  41e60c:	repnz fnsave [eax+0x63]
  41e610:	inc    esi
  41e611:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e612:	je     0x41e5c1
  41e614:	cmp    al,0xc1
  41e616:	leave  
  41e617:	xor    bx,WORD PTR [esi-0x55]
  41e61b:	mov    ebx,0x2b3747a9
  41e620:	sbb    DWORD PTR [edi-0x5c],0x3
  41e624:	dec    ebx
  41e625:	call   0x9ec9e65d
  41e62a:	push   ds
  41e62b:	mul    DWORD PTR [edi+0x53]
  41e62e:	daa    
  41e62f:	cmp    bl,BYTE PTR [ecx-0x31122781]
  41e635:	xchg   BYTE PTR [ecx],ch
  41e637:	mov    eax,0x808c2e2f
  41e63c:	in     eax,dx
  41e63d:	shl    DWORD PTR [esi+0x24],cl
  41e640:	add    bl,BYTE PTR [eax-0x3b75fa47]
  41e646:	ror    BYTE PTR ds:0x573bffcf,1
  41e64c:	push   esp
  41e64d:	sub    al,0x3
  41e64f:	cwde   
  41e650:	jo     0x41e6b1
  41e652:	or     eax,0x1562e2e9
  41e657:	retf   
  41e658:	and    edi,DWORD PTR [edi+0x72]
  41e65b:	adc    al,0x15
  41e65d:	xor    al,0x59
  41e65f:	xchg   ecx,eax
  41e660:	je     0x41e6be
  41e662:	clc    
  41e663:	or     eax,0x74830f81
  41e668:	push   ecx
  41e669:	pop    ds
  41e66a:	dec    esi
  41e66b:	push   ecx
  41e66c:	xor    edx,ecx
  41e66e:	push   ds
  41e66f:	loope  0x41e65d
  41e671:	sbb    eax,0x650c1101
  41e676:	sbb    eax,0xc9576c1a
  41e67b:	or     ah,BYTE PTR [eax]
  41e67d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e67e:	or     cl,BYTE PTR [ecx-0x7d]
  41e681:	push   eax
  41e682:	mov    edi,0xbf614def
  41e687:	mov    edx,0x95bd81f4
  41e68c:	aam    0xcb
  41e68e:	fwait
  41e68f:	xchg   ebx,eax
  41e690:	inc    ecx
  41e692:	sub    DWORD PTR [eax-0x48],ebp
  41e695:	in     al,0xb1
  41e697:	cli    
  41e698:	sub    ah,BYTE PTR [ebx+0xd203eea]
  41e69e:	in     eax,dx
  41e69f:	mov    al,ds:0xddd050bb
  41e6a4:	xlat   BYTE PTR ds:[ebx]
  41e6a5:	ret    0x64f0
  41e6a8:	dec    esp
  41e6a9:	mov    ds,eax
  41e6ab:	push   esi
  41e6ac:	retf   
  41e6ad:	push   edx
  41e6ae:	(bad)  
  41e6af:	lahf   
  41e6b0:	pop    esi
  41e6b1:	push   edx
  41e6b2:	int    0xf6
  41e6b4:	mov    bl,BYTE PTR [ebx+0x69109767]
  41e6ba:	xchg   ebp,eax
  41e6bb:	stos   BYTE PTR es:[edi],al
  41e6bc:	push   ecx
  41e6bd:	(bad)
  41e6c0:	fdivr  DWORD PTR [ebx+eax*2]
  41e6c3:	and    ch,BYTE PTR cs:[ebx-0x4b]
  41e6c7:	sbb    al,BYTE PTR [edx+ebx*2-0x1f]
  41e6cb:	fist   WORD PTR [eax-0x47]
  41e6ce:	sub    dl,ah
  41e6d0:	in     al,dx
  41e6d1:	shl    DWORD PTR [esi],1
  41e6d3:	(bad)
  41e6d6:	aad    0x68
  41e6d8:	test   al,0xa2
  41e6da:	mov    ds:0xf00b9aaa,eax
  41e6df:	out    0x55,al
  41e6e1:	addr16 jnp 0x41e67a
  41e6e4:	pop    eax
  41e6e5:	fiadd  DWORD PTR [ebx-0x1e]
  41e6e8:	cmc    
  41e6e9:	pop    edx
  41e6ea:	sbb    dh,al
  41e6ec:	mov    DWORD PTR [edx],edi
  41e6ee:	add    BYTE PTR [edx],al
  41e6f0:	sub    dh,BYTE PTR ss:[ecx]
  41e6f3:	jle    0x41e721
  41e6f5:	inc    eax
  41e6f6:	xchg   esp,eax
  41e6f7:	or     ah,BYTE PTR [esi+0x4f]
  41e6fa:	ins    BYTE PTR es:[edi],dx
  41e6fb:	or     esi,DWORD PTR [edi]
  41e6fd:	sub    ecx,DWORD PTR [esi-0x446972ae]
  41e703:	ds jnp 0x41e6d7
  41e706:	add    ebp,esp
  41e708:	ret    0x632f
  41e70b:	xlat   BYTE PTR ds:[ebx]
  41e70c:	cld    
  41e70d:	lods   al,BYTE PTR ds:[esi]
  41e70e:	mov    ebp,0x70a007a2
  41e713:	repz mov cl,0x72
  41e716:	lods   al,BYTE PTR ds:[esi]
  41e717:	or     esi,ebp
  41e719:	test   DWORD PTR [ecx],eax
  41e71b:	mov    esp,0x1616a1cc
  41e720:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e721:	idiv   bl
  41e723:	pushf  
  41e724:	outs   dx,BYTE PTR ds:[esi]
  41e725:	add    dh,dl
  41e727:	daa    
  41e728:	sti    
  41e729:	cli    
  41e72a:	shl    DWORD PTR [eax+0x29],cl
  41e72d:	sbb    eax,0xe4af5d52
  41e732:	dec    esp
  41e733:	pop    ss
  41e734:	(bad)  
  41e735:	and    BYTE PTR [edi-0x20],0x58
  41e739:	push   ds
  41e73a:	mov    edi,0x4802054e
  41e73f:	fwait
  41e740:	sub    BYTE PTR [esi+edx*2-0x12ae43cf],dl
  41e747:	nop
  41e748:	fstp   st(2)
  41e74a:	mov    edi,DWORD PTR [esi]
  41e74c:	or     al,BYTE PTR [edx+0x4431897d]
  41e752:	nop
  41e753:	cld    
  41e754:	pop    esi
  41e755:	jmp    0xfdbdef6e
  41e75a:	fucomip st,st(3)
  41e75c:	pop    eax
  41e75d:	loopne 0x41e723
  41e75f:	fmul   DWORD PTR [esi+ecx*8-0x1c3a854a]
  41e766:	sub    edi,DWORD PTR [ebx+0x47]
  41e769:	dec    edi
  41e76a:	ss in  al,0x1e
  41e76d:	jo     0x41e6f4
  41e76f:	jecxz  0x41e758
  41e771:	cmp    eax,0xfcf00deb
  41e776:	cmp    al,0x1
  41e778:	adc    al,0x49
  41e77a:	xor    BYTE PTR [eax-0x722f07d7],0x85
  41e781:	pop    esp
  41e782:	xor    esi,DWORD PTR [ebx-0x53493025]
  41e788:	mov    ds,edx
  41e78a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e78b:	test   BYTE PTR [esi+0x5e],dh
  41e78e:	adc    eax,0x1b6c413c
  41e793:	mov    ah,0xf3
  41e795:	xor    BYTE PTR [eax],bh
  41e797:	push   cs
  41e798:	jge    0x41e73c
  41e79a:	ins    DWORD PTR es:[edi],dx
  41e79b:	das    
  41e79c:	xor    eax,0x2c6638f2
  41e7a1:	neg    BYTE PTR [esi+0x4cedb165]
  41e7a7:	imul   esi,DWORD PTR [ebp+0x27367660],0xffffff9e
  41e7ae:	aad    0xb3
  41e7b0:	xchg   edx,edx
  41e7b2:	enter  0x9b45,0xa7
  41e7b6:	rcl    BYTE PTR [ebp+0x7c],cl
  41e7b9:	daa    
  41e7ba:	cmp    bl,BYTE PTR [edx]
  41e7bc:	dec    ebx
  41e7bd:	rcl    BYTE PTR [ebp-0x626034d1],cl
  41e7c3:	cmp    edi,ecx
  41e7c5:	test   eax,0xc0ab9168
  41e7ca:	inc    eax
  41e7cb:	cmc    
  41e7cc:	lods   al,BYTE PTR ds:[esi]
  41e7cd:	add    esp,DWORD PTR [ebx+0x6]
  41e7d0:	int    0xa4
  41e7d2:	or     BYTE PTR [eax+0x416b54f4],bh
  41e7d8:	iret   
  41e7d9:	cli    
  41e7da:	lods   al,BYTE PTR ds:[esi]
  41e7db:	and    eax,0xafbc0761
  41e7e0:	pop    eax
  41e7e1:	and    dl,ah
  41e7e3:	mov    es,esp
  41e7e5:	pop    ss
  41e7e6:	out    dx,eax
  41e7e7:	ins    BYTE PTR es:[edi],dx
  41e7e8:	mov    dl,0x9d
  41e7ea:	jle    0x41e7d9
  41e7ec:	mov    al,0x55
  41e7ee:	pusha  
  41e7ef:	inc    ebp
  41e7f0:	nop
  41e7f1:	xchg   ebx,eax
  41e7f2:	jmp    0x9a51:0xa9118872
  41e7f9:	xor    eax,0xeebdda99
  41e7fe:	mov    esp,0x61ed8046
  41e803:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e804:	sub    edx,esi
  41e806:	and    bl,BYTE PTR [ebx-0x5009a8fc]
  41e80c:	jb     0x41e7e3
  41e80e:	ins    DWORD PTR es:[edi],dx
  41e80f:	inc    eax
  41e810:	into   
  41e811:	mov    esp,0x1e1504dc
  41e816:	xchg   ecx,eax
  41e817:	imul   esi,ebp,0xffffffe1
  41e81a:	mov    ebp,0xdd1145c9
  41e81f:	and    BYTE PTR [ebp-0x2f],cl
  41e822:	mov    dh,0xab
  41e824:	sbb    eax,0xe05b8de0
  41e829:	(bad)  
  41e82a:	mov    edx,0x906b9171
  41e82f:	mov    edi,0x8aa2f9e5
  41e834:	call   0xd2576b95
  41e839:	pop    ebx
  41e83a:	jbe    0x41e852
  41e83c:	imul   ebp
  41e83e:	stc    
  41e83f:	mov    BYTE PTR [ebx-0x7c],dl
  41e842:	in     al,dx
  41e843:	pop    ebx
  41e844:	pop    eax
  41e845:	(bad)  
  41e846:	and    eax,0x3bd051f5
  41e84b:	xor    cl,BYTE PTR [esi-0x2f608526]
  41e851:	and    edx,0xd7b30d08
  41e857:	xlat   BYTE PTR ds:[ebx]
  41e858:	cmc    
  41e859:	xchg   DWORD PTR [eax],ebx
  41e85b:	or     eax,0x1c631c73
  41e860:	pop    ebp
  41e861:	pop    esi
  41e862:	jnp    0x41e8d5
  41e864:	out    dx,eax
  41e865:	cwde   
  41e866:	xchg   BYTE PTR [edi-0x2e46da91],dl
  41e86c:	or     eax,0x92660570
  41e871:	fst    QWORD PTR [edx]
  41e873:	push   ds
  41e874:	xchg   ebp,eax
  41e875:	adc    al,0x85
  41e877:	mov    eax,0x5f502f2
  41e87c:	retf   
  41e87d:	icebp  
  41e87e:	in     al,0x46
  41e880:	sbb    edi,edx
  41e882:	xor    dl,0xdb
  41e885:	in     al,0x17
  41e887:	cmp    dh,dh
  41e889:	mov    esi,0x85d6160
  41e88e:	sbb    edi,esi
  41e890:	mov    fs,WORD PTR [ecx+ecx*2-0x5cb3be8a]
  41e897:	mov    DWORD PTR [esi+0x7],edx
  41e89a:	push   ecx
  41e89b:	adc    eax,0x1641b185
  41e8a0:	imul   edi,DWORD PTR [ebx-0x740ee0ff],0xed71f2d3
  41e8aa:	into   
  41e8ab:	jae    0x41e83a
  41e8ad:	pop    eax
  41e8ae:	push   esi
  41e8af:	pop    ss
  41e8b0:	(bad)  
  41e8b1:	jp     0x41e8a7
  41e8b3:	xchg   edi,eax
  41e8b4:	cmp    dh,BYTE PTR [eax-0xf642e8d]
  41e8ba:	stos   BYTE PTR es:[edi],al
  41e8bb:	jns    0x41e84c
  41e8bd:	les    esi,FWORD PTR [ecx]
  41e8bf:	inc    ebx
  41e8c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8c1:	(bad)  
  41e8c2:	inc    edi
  41e8c3:	push   ds
  41e8c4:	push   ebp
  41e8c5:	sub    esp,0xcc85bd6b
  41e8cb:	into   
  41e8cc:	bound  ecx,QWORD PTR [edi-0x35]
  41e8cf:	sbb    DWORD PTR [ecx-0x132f45e7],0xffffff89
  41e8d6:	mov    eax,ds:0x946c37f8
  41e8db:	sbb    esp,DWORD PTR [esi+0x50]
  41e8de:	dec    ebp
  41e8df:	xchg   ebx,ebx
  41e8e1:	mov    ebp,0x77b32a38
  41e8e6:	call   0x7379:0xecab547d
  41e8ed:	or     DWORD PTR [ebx+0x4b76afac],0xa89c311c
  41e8f7:	sahf   
  41e8f8:	or     cl,ch
  41e8fa:	cli    
  41e8fb:	stc    
  41e8fc:	push   eax
  41e8fd:	and    al,0xc8
  41e8ff:	lds    eax,FWORD PTR [eax-0x6144b7eb]
  41e905:	jecxz  0x41e980
  41e907:	dec    ecx
  41e908:	ja     0x41e94d
  41e90a:	sub    BYTE PTR [ebx+edx*8-0x4],cl
  41e90e:	test   al,0x3b
  41e910:	fidiv  WORD PTR [eax+0x1dd10774]
  41e916:	test   BYTE PTR [ebx+0x363a8a87],bh
  41e91c:	sub    eax,ebp
  41e91e:	lea    esi,[eax+0x57]
  41e921:	sbb    BYTE PTR [ebx+0x44edee74],cl
  41e927:	sbb    DWORD PTR [eax],ebx
  41e929:	sub    edx,DWORD PTR [edi+0x50]
  41e92c:	loop   0x41e8ef
  41e92e:	jge    0x41e92e
  41e930:	out    dx,eax
  41e931:	push   ebp
  41e932:	adc    edx,ebx
  41e934:	mov    edx,0x66dde110
  41e939:	and    al,0x54
  41e93b:	les    ecx,FWORD PTR [ecx-0x39]
  41e93e:	dec    edi
  41e93f:	xlat   BYTE PTR ds:[ebx]
  41e940:	ja     0x41e99a
  41e942:	mov    ecx,DWORD PTR [edi+eax*4+0x2933cb19]
  41e949:	test   eax,0x50870e95
  41e94e:	sub    eax,0xdc7f19d6
  41e953:	mov    dl,BYTE PTR [edi+0x5734d87f]
  41e959:	adc    BYTE PTR [esi-0x7289dd3c],al
  41e95f:	aad    0xf7
  41e961:	adc    DWORD PTR [edx-0x1f],ebx
  41e964:	fs or  ah,dh
  41e967:	fild   DWORD PTR [esi+0x13]
  41e96a:	mov    edx,DWORD PTR [esi]
  41e96c:	cmp    bh,dh
  41e96e:	jns    0x41e92a
  41e970:	xchg   ax,ax
  41e972:	jo     0x41e9a0
  41e974:	stos   DWORD PTR es:[edi],eax
  41e975:	inc    esi
  41e976:	sub    ch,bl
  41e978:	xor    BYTE PTR [ebx+0x4a],al
  41e97b:	scas   eax,DWORD PTR es:[edi]
  41e97c:	inc    edi
  41e97d:	outs   dx,DWORD PTR ds:[esi]
  41e97e:	sub    DWORD PTR [ecx+ebx*8],esi
  41e981:	hlt    
  41e982:	xchg   edi,eax
  41e983:	jle    0x41e98d
  41e985:	xor    BYTE PTR [ecx+edi*1-0x6b],cl
  41e989:	(bad)  
  41e98b:	cmc    
  41e98c:	xor    DWORD PTR [edi-0x258b19ec],eax
  41e992:	and    BYTE PTR fs:[ebx+0x4095f1b0],ah
  41e999:	ror    DWORD PTR [eax-0x7],0x38
  41e99d:	cmp    ah,ah
  41e99f:	inc    esi
  41e9a0:	retf   
  41e9a1:	adc    al,0x8
  41e9a3:	sbb    eax,0x75bdbb8a
  41e9a8:	pusha  
  41e9a9:	push   cs
  41e9aa:	cmp    ch,BYTE PTR [ecx-0x29c6c130]
  41e9b0:	loopne 0x41ea0e
  41e9b2:	inc    edx
  41e9b3:	cs add al,0x63
  41e9b6:	or     DWORD PTR [edx+0x7a8ec1ec],ebp
  41e9bc:	dec    edx
  41e9bd:	jnp    0x41e99a
  41e9bf:	sbb    BYTE PTR fs:[esi],al
  41e9c2:	dec    edx
  41e9c3:	push   ecx
  41e9c4:	ror    esp,0x5
  41e9c7:	lods   eax,DWORD PTR ds:[esi]
  41e9c8:	jg     0x41ea45
  41e9ca:	mov    ds,ebx
  41e9cc:	mov    ecx,0x7c79b723
  41e9d1:	adc    eax,0xd083a629
  41e9d6:	sub    al,0xb2
  41e9d8:	and    eax,0xdad34b04
  41e9dd:	iret   
  41e9de:	popf   
  41e9df:	std    
  41e9e0:	and    ebx,eax
  41e9e2:	or     dl,dl
  41e9e4:	cmp    eax,0xaa46899b
  41e9e9:	imul   edi,DWORD PTR fs:[esi],0x70022739
  41e9f0:	dec    edx
  41e9f1:	cld    
  41e9f2:	jo     0x41ea18
  41e9f4:	sub    BYTE PTR [eax],ch
  41e9f6:	int3   
  41e9f7:	jno    0x41e997
  41e9f9:	pop    edx
  41e9fa:	(bad)  
  41e9fc:	dec    esi
  41e9fd:	sti    
  41e9fe:	nop
  41e9ff:	scas   al,BYTE PTR es:[edi]
  41ea00:	xchg   esi,eax
  41ea01:	add    DWORD PTR [ebx],0x40
  41ea04:	in     al,dx
  41ea05:	mov    al,ds:0x113073d1
  41ea0a:	cli    
  41ea0b:	pop    ecx
  41ea0c:	add    DWORD PTR [ebx+0x7c39056f],edx
  41ea12:	ror    BYTE PTR [edx],1
  41ea14:	sbb    DWORD PTR [ecx+0x5cbb057f],ebx
  41ea1a:	mov    al,0x21
  41ea1c:	mov    DWORD PTR [edi],0xf7ba2cac
  41ea22:	mov    edi,0x6e99168f
  41ea27:	push   esi
  41ea28:	xor    eax,0x19b1f0cb
  41ea2d:	mov    al,0xdb
  41ea2f:	sar    BYTE PTR [edi-0x74086b1c],1
  41ea35:	in     eax,0x7
  41ea37:	sar    BYTE PTR [esi],1
  41ea39:	dec    esp
  41ea3a:	add    DWORD PTR [ebp+esi*2+0x5d],edi
  41ea3e:	nop
  41ea3f:	and    esp,DWORD PTR [eax-0x7a]
  41ea42:	ror    BYTE PTR [ecx-0x34],0x96
  41ea46:	fcom   DWORD PTR [ebp-0x24]
  41ea49:	stos   DWORD PTR es:[edi],eax
  41ea4a:	out    0xa5,al
  41ea4c:	sub    eax,DWORD PTR [ecx+0x24952584]
  41ea52:	mov    bh,BYTE PTR [edx-0x21]
  41ea55:	es das 
  41ea57:	pop    ebx
  41ea58:	xadd   BYTE PTR [edx+0x49d0db63],bh
  41ea5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea60:	scas   al,BYTE PTR es:[edi]
  41ea61:	inc    esp
  41ea62:	ins    DWORD PTR es:[edi],dx
  41ea63:	push   esi
  41ea64:	mov    esi,0x2ecf0925
  41ea69:	jge    0x41ea1d
  41ea6b:	aas    
  41ea6c:	data16 sar bl,1
  41ea6f:	test   dl,0x9b
  41ea72:	fwait
  41ea73:	dec    eax
  41ea74:	je     0x41ea65
  41ea76:	shl    BYTE PTR [edx+0x1],0xd0
  41ea7a:	and    esi,DWORD PTR [ebx-0x7136ea65]
  41ea80:	cmc    
  41ea81:	jg     0x41eab9
  41ea83:	xchg   ecx,eax
  41ea84:	dec    ecx
  41ea85:	icebp  
  41ea86:	or     BYTE PTR [eax-0x5c],dl
  41ea89:	(bad)  
  41ea8a:	pop    esi
  41ea8b:	jb     0x41ea20
  41ea8d:	or     edi,DWORD PTR [eax-0x6ed63819]
  41ea93:	mov    ch,0x39
  41ea95:	xchg   esi,eax
  41ea96:	cld    
  41ea97:	mov    dh,0x47
  41ea99:	sbb    al,0x49
  41ea9b:	or     DWORD PTR [ecx],0xffffffae
  41ea9e:	das    
  41ea9f:	enter  0xa812,0x22
  41eaa3:	nop
  41eaa4:	retf   
  41eaa5:	mov    esp,0x6f81c273
  41eaaa:	cmp    BYTE PTR [ebp-0x10d619c4],al
  41eab0:	jmp    0x41ea96
  41eab2:	mov    ebx,0xebe16705
  41eab7:	into   
  41eab8:	fdivr  st(1),st
  41eaba:	cwde   
  41eabb:	ins    DWORD PTR es:[edi],dx
  41eabc:	test   DWORD PTR [ebx],ecx
  41eabe:	jae    0x41eacc
  41eac0:	lea    ecx,[eax+ecx*8]
  41eac3:	das    
  41eac4:	inc    ebx
  41eac5:	cli    
  41eac6:	jle    0x41eb0c
  41eac8:	pop    eax
  41eac9:	fs sbb esi,ecx
  41eacc:	es dec ecx
  41eace:	xor    al,ch
  41ead0:	mov    eax,ds:0xc78533d5
  41ead5:	loopne 0x41ead3
  41ead7:	sub    bh,BYTE PTR [esi]
  41ead9:	sbb    DWORD PTR [esi+0x63],esi
  41eadc:	jge    0x41eb30
  41eade:	out    0xdc,eax
  41eae0:	adc    dh,BYTE PTR [edx+0x7807cf18]
  41eae6:	inc    eax
  41eae7:	or     eax,DWORD PTR [eax-0x17]
  41eaea:	(bad)  
  41eaeb:	imul   BYTE PTR [edi]
  41eaed:	ja     0x41eabc
  41eaef:	fstp   st(6)
  41eaf1:	scas   eax,DWORD PTR es:[edi]
  41eaf2:	mov    ah,0xa2
  41eaf4:	push   esi
  41eaf5:	outs   dx,DWORD PTR ds:[esi]
  41eaf6:	addr16 ja 0x41eb41
  41eaf9:	ficom  DWORD PTR [ebx-0x6e3b56d]
  41eaff:	xlat   BYTE PTR ds:[ebx]
  41eb00:	test   DWORD PTR [edi+edi*8],0x1b42888f
  41eb07:	jne    0x41eb40
  41eb09:	mov    esp,DWORD PTR ds:0x2476ace4
  41eb0f:	sub    DWORD PTR [edi+0x21],eax
  41eb12:	mov    ds,WORD PTR [ecx+0x5c31eb01]
  41eb18:	pop    DWORD PTR [eax-0x73]
  41eb1b:	xchg   esi,ebx
  41eb1d:	pop    edi
  41eb1e:	stc    
  41eb1f:	mov    DWORD PTR [edi-0x57eca187],edx
  41eb25:	ret    
  41eb26:	das    
  41eb27:	xchg   esi,eax
  41eb28:	push   edx
  41eb29:	add    esp,eax
  41eb2b:	lds    eax,FWORD PTR [edi+0x53]
  41eb2e:	pusha  
  41eb2f:	ins    BYTE PTR es:[edi],dx
  41eb30:	xor    ebp,DWORD PTR [edx+0x42]
  41eb33:	and    ebp,DWORD PTR [ebp-0x7e]
  41eb36:	jmp    DWORD PTR [edi]
  41eb38:	fisub  DWORD PTR [eax-0x60c2b2b7]
  41eb3e:	or     eax,0x3e568489
  41eb43:	test   edx,esp
  41eb45:	lods   eax,DWORD PTR ds:[esi]
  41eb46:	jecxz  0x41eb9b
  41eb48:	stos   BYTE PTR es:[edi],al
  41eb49:	int    0x95
  41eb4b:	mov    esp,DWORD PTR [eax]
  41eb4d:	pop    esi
  41eb4e:	sbb    DWORD PTR [eax+0x52f91e5d],edi
  41eb54:	ffreep st(4)
  41eb56:	jne    0x41eb87
  41eb58:	js     0x41eaff
  41eb5a:	addr16 pop ss
  41eb5c:	mov    ch,0xc1
  41eb5e:	pop    edi
  41eb5f:	test   DWORD PTR [ecx],esi
  41eb61:	push   0xf59c6ba4
  41eb66:	mov    ah,0x78
  41eb68:	aaa    
  41eb69:	push   cs
  41eb6a:	push   eax
  41eb6b:	sub    al,0xb9
  41eb6d:	(bad)  
  41eb6e:	ins    BYTE PTR es:[edi],dx
  41eb6f:	add    eax,0x2af3a42a
  41eb74:	jge    0x41ebd6
  41eb76:	adc    eax,0x63b072cf
  41eb7b:	push   ebp
  41eb7c:	or     al,0xb4
  41eb7e:	xchg   edi,eax
  41eb7f:	fldcw  WORD PTR [eax+edx*8+0x49bec5a1]
  41eb86:	in     al,dx
  41eb87:	ins    BYTE PTR es:[edi],dx
  41eb88:	mov    ds:0x6cddd76d,al
  41eb8d:	js     0x41eb82
  41eb8f:	and    DWORD PTR [esi-0x5a722259],ecx
  41eb95:	mov    BYTE PTR [edx-0x3f4a90e5],0xd5
  41eb9c:	jbe    0x41eb59
  41eb9e:	pushf  
  41eb9f:	dec    esp
  41eba0:	imul   esi,edx,0xfce6aa2f
  41eba6:	mov    edx,0xbb417d06
  41ebab:	mov    gs,WORD PTR [edx+eiz*4-0x7c]
  41ebaf:	push   ecx
  41ebb0:	fsubr  QWORD PTR [esi+0x6e]
  41ebb3:	pop    edx
  41ebb4:	es js  0x41ebd5
  41ebb7:	push   0xffffffaa
  41ebb9:	and    BYTE PTR [edx-0xb2bb0fd],bh
  41ebbf:	hlt    
  41ebc0:	stc    
  41ebc1:	mov    BYTE PTR [ebp+0x46],dh
  41ebc4:	fnstenv [eax-0x3b43f9ab]
  41ebca:	lahf   
  41ebcb:	or     eax,0x1ab2543d
  41ebd0:	add    al,BYTE PTR [ebp+ebx*1+0x33e93de6]
  41ebd7:	xchg   edi,eax
  41ebd8:	ret    
  41ebd9:	mov    dl,0x97
  41ebdb:	lock sub edx,ebx
  41ebde:	out    0x97,eax
  41ebe0:	mov    ebp,0x4b1d16a
  41ebe5:	scas   eax,DWORD PTR es:[edi]
  41ebe6:	lods   al,BYTE PTR ds:[esi]
  41ebe7:	cdq    
  41ebe8:	jns    0x41eb80
  41ebea:	cmp    BYTE PTR [esi+0x2b],dh
  41ebed:	ret    
  41ebee:	hlt    
  41ebef:	test   al,0xbf
  41ebf1:	cmp    BYTE PTR [ebp-0x29],cl
  41ebf4:	xor    al,0xd7
  41ebf6:	in     eax,0x73
  41ebf8:	je     0x41ebc1
  41ebfa:	sub    DWORD PTR [ebp+0x4d14eee8],esp
  41ec00:	fsubr  QWORD PTR [ecx-0x22]
  41ec03:	out    0xfc,al
  41ec05:	jnp    0x41ebbb
  41ec07:	jne    0x41eba2
  41ec09:	(bad)  
  41ec0a:	sbb    DWORD PTR [ecx-0x43b1a503],ecx
  41ec10:	call   0xfa26:0x3f7d8ba9
  41ec17:	jl     0x41ebe1
  41ec19:	sbb    ch,al
  41ec1b:	mov    ebp,eax
  41ec1d:	jp     0x41ec77
  41ec1f:	cdq    
  41ec20:	or     ebp,DWORD PTR [esi+0x9]
  41ec23:	mov    ecx,0x6cde5a0a
  41ec28:	sub    BYTE PTR [esi],dl
  41ec2a:	dec    esp
  41ec2b:	jge    0x41ec14
  41ec2d:	xchg   esi,eax
  41ec2e:	inc    ecx
  41ec2f:	add    ah,BYTE PTR [eax-0x3b]
  41ec32:	(bad)
  41ec35:	lods   eax,DWORD PTR ds:[esi]
  41ec36:	inc    eax
  41ec37:	hlt    
  41ec38:	je     0x41ebd8
  41ec3a:	push   ebp
  41ec3b:	add    bh,BYTE PTR [ecx-0x6e]
  41ec3e:	icebp  
  41ec3f:	nop
  41ec40:	mov    ds:0xbab334d0,al
  41ec45:	dec    edi
  41ec46:	jmp    0xad6f:0x88ff42da
  41ec4d:	push   eax
  41ec4e:	mov    ?,WORD PTR [edi]
  41ec50:	imul   eax,DWORD PTR [eax],0xffffff87
  41ec53:	(bad)  
  41ec54:	lds    edx,FWORD PTR [esi-0x6aa24d11]
  41ec5a:	mov    al,ds:0x3b3dd094
  41ec5f:	add    al,0x98
  41ec61:	xor    al,0x82
  41ec63:	or     DWORD PTR ds:0xcb22a6db,ecx
  41ec69:	dec    esi
  41ec6a:	adc    BYTE PTR [ebp-0x4d],dh
  41ec6d:	adc    DWORD PTR [ecx-0x777a91e8],ebx
  41ec73:	push   es
  41ec74:	jmp    0x5048e463
  41ec79:	xchg   esp,eax
  41ec7a:	cmp    DWORD PTR [ebx+edi*4-0x5198e39c],edi
  41ec81:	jl     0x41ec2c
  41ec83:	and    bh,BYTE PTR [ecx+0x4e]
  41ec86:	hlt    
  41ec87:	sub    cl,BYTE PTR ds:0xd79fa85a
  41ec8d:	out    0x4c,eax
  41ec8f:	jg     0x41ec4a
  41ec91:	(bad)  
  41ec92:	les    esi,FWORD PTR [esi]
  41ec94:	jmp    0x41ecc6
  41ec96:	(bad)
  41ec99:	mov    ds:0x8f061c9d,eax
  41ec9e:	adc    BYTE PTR [ecx-0x69],0xe3
  41eca2:	xor    edx,edx
  41eca4:	cwde   
  41eca5:	out    0x0,al
  41eca7:	dec    esi
  41eca8:	pop    edx
  41eca9:	cmc    
  41ecaa:	out    dx,al
  41ecab:	pop    edx
  41ecac:	dec    ecx
  41ecad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ecae:	gs daa 
  41ecb0:	cvtps2pi mm4,QWORD PTR [edx-0x3f]
  41ecb4:	test   eax,esi
  41ecb6:	stc    
  41ecb7:	addr16 mov al,0xc2
  41ecba:	aaa    
  41ecbb:	jne    0x41ed1c
  41ecbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ecbe:	out    dx,eax
  41ecbf:	push   edx
  41ecc0:	mov    bl,0x9d
  41ecc2:	sub    DWORD PTR [edx],ecx
  41ecc4:	mov    al,ds:0xe6a97932
  41ecc9:	sbb    dl,BYTE PTR gs:[edx+0x26]
  41eccd:	mov    ecx,0x9fe2e83e
  41ecd2:	or     cl,BYTE PTR [ebx-0x5a]
  41ecd5:	ja     0x41ecf2
  41ecd7:	add    DWORD PTR [ebx-0x49],ecx
  41ecda:	ss push 0xffffffd0
  41ecdd:	in     al,dx
  41ecde:	xor    esi,esp
  41ece0:	in     eax,dx
  41ece1:	fdivr  QWORD PTR [ebp-0x68a1b6a7]
  41ece7:	mov    esp,0xefba2bcc
  41ecec:	adc    eax,0xacbcca44
  41ecf1:	test   al,0x88
  41ecf3:	sub    ecx,esi
  41ecf5:	xor    ecx,eax
  41ecf7:	mov    DWORD PTR [ebp+0x8],ecx
  41ecfa:	mov    ecx,DWORD PTR [ebp+0x8]
  41ecfd:	mov    edx,DWORD PTR [ebp+0x8]
  41ed00:	imul   edx,edx,0x5708f5
  41ed06:	xor    ecx,eax
  41ed08:	add    ecx,esi
  41ed0a:	lea    ecx,[ebp+ecx*4-0x64]
  41ed0e:	mov    edi,DWORD PTR [ecx]
  41ed10:	add    edx,edi
  41ed12:	mov    DWORD PTR [ecx],edx
  41ed14:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed17:	xor    ecx,eax
  41ed19:	add    ecx,esi
  41ed1b:	jne    0x41c96c
  41ed21:	mov    ecx,DWORD PTR [ebp-0x8]
  41ed24:	mov    edx,DWORD PTR [ebp-0x20]
  41ed27:	xor    ecx,eax
  41ed29:	lea    ecx,[ecx+edx*1+0x3272db]
  41ed30:	mov    DWORD PTR [ebp-0x20],ecx
  41ed33:	inc    DWORD PTR [ebp+0xc]
  41ed36:	mov    ecx,DWORD PTR [ebp-0x1c]
  41ed39:	xor    ecx,eax
  41ed3b:	add    ecx,esi
  41ed3d:	jne    0x41c71d
  41ed43:	jmp    0x421147
  41ed48:	mov    ecx,DWORD PTR [ebp-0xc]
  41ed4b:	mov    DWORD PTR [ebp+0x8],ecx
  41ed4e:	jmp    0x41ed80
  41ed53:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed56:	mov    edx,DWORD PTR [ebp-0x8]
  41ed59:	xor    ecx,eax
  41ed5b:	xor    edx,eax
  41ed5d:	sub    ecx,edx
  41ed5f:	sub    ecx,esi
  41ed61:	xor    ecx,eax
  41ed63:	mov    DWORD PTR [ebp+0x8],ecx
  41ed66:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed69:	mov    edx,DWORD PTR [ebp+0x8]
  41ed6c:	imul   edx,edx,0x5708f5
  41ed72:	xor    ecx,eax
  41ed74:	add    ecx,esi
  41ed76:	lea    ecx,[ebp+ecx*4-0x64]
  41ed7a:	mov    edi,DWORD PTR [ecx]
  41ed7c:	add    edx,edi
  41ed7e:	mov    DWORD PTR [ecx],edx
  41ed80:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed83:	xor    ecx,eax
  41ed85:	add    ecx,esi
  41ed87:	jne    0x41ed53
  41ed8d:	jmp    0x421153
  41ed92:	mov    ecx,DWORD PTR [ebp+0x8]
  41ed95:	mov    edx,DWORD PTR [ebp-0x8]
  41ed98:	xor    ecx,eax
  41ed9a:	xor    edx,eax
  41ed9c:	sub    ecx,edx
  41ed9e:	sub    ecx,esi
  41eda0:	xor    ecx,eax
  41eda2:	mov    DWORD PTR [ebp+0x8],ecx
  41eda5:	mov    ecx,DWORD PTR [ebp+0x8]
  41eda8:	mov    edx,DWORD PTR [ebp+0x8]
  41edab:	xor    ecx,eax
  41edad:	imul   edx,edx,0x5708f5
  41edb3:	add    ecx,esi
  41edb5:	lea    ecx,[ebp+ecx*4-0x64]
  41edb9:	jmp    0x421134
  41edbe:	dec    ecx
  41edbf:	xor    eax,0xa7642764
  41edc4:	test   DWORD PTR [ebx],edx
  41edc6:	mov    esi,0xaee70850
  41edcb:	cmp    edi,DWORD PTR [ebx+0x61da8302]
  41edd1:	bound  eax,QWORD PTR [edi+ebx*2]
  41edd4:	bound  esp,QWORD PTR [edx-0x43]
  41edd7:	cdq    
  41edd8:	std    
  41edd9:	pop    edi
  41edda:	and    eax,DWORD PTR [esi-0x6d995ae8]
  41ede0:	mov    ebx,0x5a466b1d
  41ede5:	dec    ecx
  41ede6:	ss pop esp
  41ede8:	nop
  41ede9:	addr16 dec ebp
  41edeb:	sbb    ah,BYTE PTR [esi+edi*4-0xae7a80c]
  41edf2:	fdivr  DWORD PTR [ebx+0x51eb7923]
  41edf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41edf9:	jg     0x41edc7
  41edfb:	out    dx,al
  41edfc:	imul   ebp,esi,0x42
  41edff:	aas    
  41ee00:	push   ebp
  41ee01:	push   ecx
  41ee02:	push   ss
  41ee03:	dec    ecx
  41ee04:	gs cmp eax,esi
  41ee07:	ja     0x41ee20
  41ee09:	hlt    
  41ee0a:	dec    edx
  41ee0b:	out    dx,eax
  41ee0c:	push   ss
  41ee0d:	push   ecx
  41ee0e:	add    bl,BYTE PTR [eax-0x5c7898e0]
  41ee14:	push   edx
  41ee15:	sbb    ecx,ecx
  41ee17:	xadd   edx,edx
  41ee1a:	fiadd  DWORD PTR [edi-0x1396e85b]
  41ee20:	retf   0x5aa3
  41ee23:	cmp    BYTE PTR [esi+ebx*8-0x111a5e3f],dl
  41ee2a:	js     0x41edc3
  41ee2c:	mov    eax,ds:0xbfd9161f
  41ee31:	jb     0x41ee86
  41ee33:	cs cdq 
  41ee35:	mov    ebp,0x8f4fa80f
  41ee3a:	jp     0x41ee24
  41ee3c:	cli    
  41ee3d:	jns    0x41ee26
  41ee3f:	xor    BYTE PTR [edi-0x10a0aed],al
  41ee45:	mov    ebp,0xda106842
  41ee4a:	fucompp 
  41ee4c:	push   eax
  41ee4d:	jp     0x41eeaa
  41ee4f:	jg     0x41ee76
  41ee51:	pop    esi
  41ee52:	adc    esp,ebx
  41ee54:	sub    ah,ch
  41ee56:	mov    eax,0xad482c36
  41ee5b:	stos   BYTE PTR es:[edi],al
  41ee5c:	mov    dh,0xc4
  41ee5e:	aam    0xe2
  41ee60:	and    bl,BYTE PTR [edi-0x158304a6]
  41ee66:	add    al,0xda
  41ee68:	xor    ecx,DWORD PTR [edx+0x389eadda]
  41ee6e:	pop    eax
  41ee6f:	lea    edx,[ebp+edx*4+0x702d9187]
  41ee76:	mov    esi,0x5bd65b75
  41ee7b:	jge    0x41eee4
  41ee7d:	push   edi
  41ee7e:	imul   BYTE PTR [edi-0x57]
  41ee81:	imul   esp,DWORD PTR [edx+eax*2+0x476fe1c9],0xa7f589f4
  41ee8c:	in     eax,dx
  41ee8d:	sub    ecx,ebp
  41ee8f:	ds (bad) 
  41ee91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee92:	(bad)  
  41ee93:	pusha  
  41ee94:	adc    ebx,DWORD PTR [edi-0x588241b3]
  41ee9a:	cli    
  41ee9b:	cld    
  41ee9c:	pop    ebp
  41ee9d:	push   0x10c90170
  41eea2:	lock xor BYTE PTR es:[edx+0x7f],0x81
  41eea8:	mov    al,dl
  41eeaa:	pop    ebp
  41eeab:	call   0x88:0x9baa9fc4
  41eeb2:	or     DWORD PTR [edx],ebx
  41eeb4:	jno    0x41ee74
  41eeb6:	out    dx,eax
  41eeb7:	xchg   DWORD PTR [ebx],esi
  41eeb9:	stc    
  41eeba:	cli    
  41eebb:	push   esp
  41eebc:	pusha  
  41eebd:	sahf   
  41eebe:	push   es
  41eebf:	xchg   edx,eax
  41eec0:	outs   dx,BYTE PTR ds:[esi]
  41eec1:	iret   
  41eec2:	jg     0x41ee4d
  41eec4:	nop
  41eec5:	shl    DWORD PTR [ecx+0x1],1
  41eec8:	addr16 inc ebx
  41eeca:	inc    edx
  41eecb:	pop    ss
  41eecc:	mov    esp,0x7eb3336d
  41eed1:	push   0x73b56e35
  41eed6:	retf   
  41eed7:	ffree  st(5)
  41eed9:	sbb    ebx,DWORD PTR [esi]
  41eedb:	cmp    BYTE PTR [esi-0x746a939f],ah
  41eee1:	sbb    ah,BYTE PTR [eax+0x17]
  41eee4:	xor    edx,esi
  41eee6:	imul   BYTE PTR [esi-0x3a]
  41eee9:	imul   edx,DWORD PTR [ecx],0xffffffc6
  41eeec:	popa   
  41eeed:	mov    esp,0x86283584
  41eef2:	out    dx,al
  41eef3:	push   es
  41eef4:	pop    es
  41eef5:	add    DWORD PTR [edx],eax
  41eef7:	jmp    0x41ef00
  41eef9:	xchg   ebp,eax
  41eefa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eefb:	push   esp
  41eefc:	or     DWORD PTR [esi-0x4721cf21],esp
  41ef02:	daa    
  41ef03:	mov    al,ds:0xb4436824
  41ef08:	das    
  41ef09:	inc    esp
  41ef0a:	cwde   
  41ef0b:	imul   bl
  41ef0d:	mov    al,ds:0xc6cdd35c
  41ef12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef13:	sub    eax,0xcf506490
  41ef18:	push   esi
  41ef19:	adc    esi,eax
  41ef1b:	imul   ecx,DWORD PTR [eax],0xce42552d
  41ef21:	dec    ebx
  41ef22:	jnp    0x41ef3c
  41ef24:	ficom  DWORD PTR [esi+0x4a]
  41ef27:	inc    esi
  41ef28:	sbb    eax,0x29954287
  41ef2d:	and    bh,BYTE PTR [esp+ebp*8]
  41ef30:	rcl    DWORD PTR [edi-0x5fac1168],cl
  41ef36:	add    eax,0x51b6f697
  41ef3b:	das    
  41ef3c:	push   DWORD PTR [eax]
  41ef3e:	xchg   esi,eax
  41ef3f:	xchg   DWORD PTR [ecx-0x30668aab],edi
  41ef45:	cmp    dh,bl
  41ef47:	(bad)  
  41ef48:	ins    BYTE PTR es:[edi],dx
  41ef49:	mov    edx,0x606ec793
  41ef4e:	add    DWORD PTR [edx-0x3a],eax
  41ef51:	push   cs
  41ef52:	bound  ebx,QWORD PTR [edx+0x3d]
  41ef55:	push   esp
  41ef56:	mov    ds:0x66350f63,eax
  41ef5b:	mov    edi,0xb1c6717c
  41ef60:	mov    cl,0xff
  41ef62:	not    BYTE PTR [edx]
  41ef64:	lods   al,BYTE PTR ds:[esi]
  41ef65:	inc    ebp
  41ef66:	sub    BYTE PTR [edx+0x7c],al
  41ef69:	inc    esp
  41ef6a:	int3   
  41ef6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef6c:	mov    edx,DWORD PTR [edi-0x40]
  41ef6f:	loop   0x41efaa
  41ef71:	add    BYTE PTR [edx-0x29],dl
  41ef74:	stos   BYTE PTR es:[edi],al
  41ef75:	inc    ebp
  41ef76:	mov    cl,0x72
  41ef78:	loop   0x41ef74
  41ef7a:	jg     0x41efcd
  41ef7c:	mov    WORD PTR [ebp-0x7d],ss
  41ef7f:	ja     0x41efcc
  41ef81:	mov    eax,ds:0xa8cf2463
  41ef86:	(bad)  
  41ef87:	lea    ebx,[esi+0x52b9689]
  41ef8d:	pushf  
  41ef8e:	mov    dh,0x95
  41ef90:	adc    edx,DWORD PTR [edi]
  41ef92:	adc    DWORD PTR [ebx+0x4304e39],esp
  41ef98:	cmp    eax,esp
  41ef9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef9b:	and    dh,BYTE PTR [ebp-0x6319566d]
  41efa1:	stos   BYTE PTR es:[edi],al
  41efa2:	or     DWORD PTR [esi],edi
  41efa4:	pop    ds
  41efa5:	adc    al,0x1d
  41efa7:	pushf  
  41efa8:	ja     0x41f003
  41efaa:	scas   al,BYTE PTR es:[edi]
  41efab:	div    edi
  41efad:	adc    DWORD PTR [edx-0x11d89b00],0x8e19f403
  41efb7:	mov    bl,0x7
  41efb9:	dec    edx
  41efba:	out    0x6c,al
  41efbc:	icebp  
  41efbd:	inc    esp
  41efbe:	lahf   
  41efbf:	and    BYTE PTR [edx-0x6c],ch
  41efc2:	add    DWORD PTR [eax-0x49095dd1],0xcd04c9e7
  41efcc:	push   ebx
  41efcd:	stos   DWORD PTR es:[edi],eax
  41efce:	outs   dx,DWORD PTR ds:[esi]
  41efcf:	adc    eax,0xaf528a23
  41efd4:	add    ebp,DWORD PTR [ecx+0x3a096e40]
  41efda:	mov    al,0xa5
  41efdc:	inc    edi
  41efdd:	jl     0x41f007
  41efdf:	mov    ecx,0xdd623af5
  41efe4:	scas   al,BYTE PTR es:[edi]
  41efe5:	mov    eax,ds:0xceed4ae8
  41efea:	clc    
  41efeb:	and    DWORD PTR [ecx],ebp
  41efed:	jbe    0x41f010
  41efef:	mov    ds,WORD PTR [esi-0x19c3cbc5]
  41eff5:	cmp    al,0xf1
  41eff7:	(bad)  
  41eff8:	and    DWORD PTR [esi],eax
  41effa:	es xchg edi,eax
  41effc:	lahf   
  41effd:	pop    ecx
  41effe:	xchg   BYTE PTR [edx-0x7565b4fc],bl
  41f004:	(bad)  
  41f005:	pop    ebx
  41f006:	sar    DWORD PTR ds:0x574d68de,cl
  41f00c:	int    0x33
  41f00e:	xor    eax,0x75c87fce
  41f013:	add    BYTE PTR [ebx+0x5a456466],bl
  41f019:	jl     0x41f018
  41f01b:	push   0xffffffae
  41f01d:	mov    ebx,0x818053a2
  41f022:	retf   
  41f023:	(bad)  
  41f024:	gs neg esp
  41f027:	mov    esp,0x56661d7f
  41f02c:	sahf   
  41f02d:	je     0x41efbc
  41f02f:	jecxz  0x41f065
  41f031:	and    edx,DWORD PTR [eax-0x33378a4d]
  41f037:	sbb    eax,eax
  41f039:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f03a:	enter  0x9a12,0xb4
  41f03e:	mov    dh,0xb1
  41f040:	jge    0x41f0bf
  41f042:	cmovge esp,DWORD PTR [edi+0x3af445db]
  41f049:	add    esi,DWORD PTR [ebp-0xf8811c1]
  41f04f:	(bad)  [eax-0x776e97f2]
  41f055:	fcomp  DWORD PTR [ebx+0x68d8cded]
  41f05b:	int3   
  41f05c:	push   ebx
  41f05d:	mov    ebp,DWORD PTR [edx-0x1a]
  41f060:	ss xchg ebx,eax
  41f062:	jo     0x41f084
  41f064:	adc    al,0x40
  41f066:	xchg   cl,al
  41f068:	push   esi
  41f069:	mov    bl,0xa8
  41f06b:	in     eax,0xaf
  41f06d:	cmp    esi,DWORD PTR [ebx+0x45]
  41f070:	sahf   
  41f071:	adc    esi,DWORD PTR ds:0xc24e1d22
  41f077:	adc    edx,DWORD PTR [ebx]
  41f079:	call   edi
  41f07b:	icebp  
  41f07c:	lods   al,BYTE PTR ds:[esi]
  41f07d:	dec    eax
  41f07e:	stos   BYTE PTR es:[edi],al
  41f07f:	dec    ecx
  41f080:	jle    0x41f075
  41f082:	data16 je 0x41f091
  41f085:	jo     0x41f0c0
  41f087:	xchg   ecx,eax
  41f088:	(bad)  
  41f089:	into   
  41f08a:	or     cl,0x7f
  41f08d:	ins    BYTE PTR es:[edi],dx
  41f08e:	xchg   ebp,eax
  41f08f:	repz or ecx,DWORD PTR [ebx]
  41f092:	dec    esp
  41f093:	retf   
  41f094:	(bad)  
  41f095:	or     DWORD PTR [ebx-0x13193557],edi
  41f09b:	pop    edx
  41f09c:	jo     0x41f06f
  41f09e:	test   eax,0xbac60870
  41f0a3:	or     ah,dl
  41f0a5:	or     edx,edx
  41f0a7:	mov    bl,0x88
  41f0a9:	sbb    al,0x10
  41f0ab:	dec    esp
  41f0ac:	clc    
  41f0ad:	jb     0x41f06e
  41f0af:	pop    ebx
  41f0b0:	loope  0x41f0b5
  41f0b2:	data16 and BYTE PTR [ebx-0xd],al
  41f0b6:	aam    0x79
  41f0b8:	fsubp  st(5),st
  41f0ba:	push   0x2fe24921
  41f0bf:	cwde   
  41f0c0:	je     0x41f0de
  41f0c2:	bnd call 0xd172acc
  41f0c8:	push   edx
  41f0c9:	les    esi,FWORD PTR [eax+0x11]
  41f0cc:	out    dx,eax
  41f0cd:	in     al,0x4c
  41f0cf:	(bad)  
  41f0d1:	pop    ebp
  41f0d2:	mov    bh,0x21
  41f0d4:	in     eax,dx
  41f0d5:	lds    edi,FWORD PTR es:[edx-0x14b7f86f]
  41f0dc:	retf   
  41f0dd:	scas   al,BYTE PTR es:[edi]
  41f0de:	jmp    DWORD PTR [ebx+0x5a]
  41f0e1:	mov    edi,0x37d470ac
  41f0e6:	push   0xe8fd9055
  41f0eb:	adc    ecx,DWORD PTR [ecx]
  41f0ed:	inc    esp
  41f0ee:	daa    
  41f0ef:	inc    esi
  41f0f0:	and    ebx,DWORD PTR [eax]
  41f0f2:	mov    eax,ds:0x35141d21
  41f0f7:	or     al,0x6b
  41f0f9:	lods   al,BYTE PTR ds:[esi]
  41f0fa:	mov    esp,0xdf6a5853
  41f0ff:	inc    eax
  41f100:	dec    DWORD PTR [esp+ebx*4]
  41f103:	or     eax,0xad6f5a4c
  41f108:	xor    eax,DWORD PTR [ebx-0x58]
  41f10b:	out    0x41,eax
  41f10d:	pop    ds
  41f10e:	push   ecx
  41f10f:	sbb    esi,edi
  41f111:	sbb    ah,cl
  41f113:	mov    edi,0x711086e3
  41f118:	adc    esp,DWORD PTR ds:0x2e9f15c7
  41f11e:	adc    al,0x3f
  41f120:	in     eax,dx
  41f121:	cmp    ebx,DWORD PTR [ebx+0x6447cdf2]
  41f127:	rcr    BYTE PTR [edi],0x88
  41f12a:	in     eax,0x8b
  41f12c:	les    esp,FWORD PTR [edx+0x6dd45c40]
  41f132:	call   DWORD PTR [edi+0x640766a7]
  41f138:	dec    ebx
  41f139:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f13a:	jae    0x41f1af
  41f13c:	xchg   ebx,eax
  41f13d:	in     eax,dx
  41f13e:	ds nop
  41f140:	cld    
  41f141:	test   dl,bl
  41f143:	add    ch,bh
  41f145:	or     al,0x0
  41f147:	bound  edi,QWORD PTR [ebx-0x28c070aa]
  41f14d:	pop    ss
  41f14e:	mov    cl,0xd2
  41f150:	sbb    esp,ebp
  41f152:	shl    ch,cl
  41f154:	jbe    0x41f193
  41f156:	aaa    
  41f157:	inc    eax
  41f158:	and    eax,0xd56f2b9c
  41f15d:	push   es
  41f15e:	fsub   st(6),st
  41f160:	fstp   TBYTE PTR [eax+eax*2-0x4cdad388]
  41f167:	fnstenvw [ebx-0x68]
  41f16b:	jle    0x41f190
  41f16d:	xchg   edi,eax
  41f16e:	retf   
  41f16f:	cmp    DWORD PTR [edx+0x43],ecx
  41f172:	xchg   ecx,eax
  41f173:	loop   0x41f146
  41f175:	and    esp,ebp
  41f177:	push   edx
  41f178:	xchg   ebx,eax
  41f179:	inc    ebp
  41f17a:	ret    
  41f17b:	pop    ebx
  41f17c:	xor    ecx,0x7b
  41f17f:	mov    edi,0x197579f6
  41f184:	jns    0x41f13b
  41f186:	stc    
  41f187:	aaa    
  41f188:	cli    
  41f189:	ins    DWORD PTR es:[edi],dx
  41f18a:	inc    esp
  41f18b:	mov    ebx,0xee35afc8
  41f190:	adc    BYTE PTR [edx+0x1c],0x1e
  41f194:	bound  edx,QWORD PTR [edx+0x4eaf6329]
  41f19a:	gs hlt 
  41f19c:	in     eax,0x49
  41f19e:	pop    ebp
  41f19f:	dec    ebp
  41f1a0:	cli    
  41f1a1:	dec    ecx
  41f1a2:	jbe    0x41f15c
  41f1a4:	fadd   DWORD PTR [edi-0x49ba3351]
  41f1aa:	inc    esp
  41f1ab:	in     al,dx
  41f1ac:	nop
  41f1ad:	fldcw  WORD PTR [ebx]
  41f1af:	jmp    0x888d:0x1dbe712c
  41f1b6:	lock mov ebx,0x5c58c517
  41f1bc:	popf   
  41f1bd:	mov    WORD PTR [eax+esi*4+0x44be38cf],ds
  41f1c4:	shl    BYTE PTR [edi+0x6b],0xdf
  41f1c8:	inc    edi
  41f1c9:	inc    edx
  41f1ca:	aad    0xfa
  41f1cc:	out    0xec,al
  41f1ce:	jmp    0x41f1bb
  41f1d0:	icebp  
  41f1d1:	add    BYTE PTR [eax+0x22],al
  41f1d4:	xchg   esi,eax
  41f1d5:	arpl   WORD PTR [edi],si
  41f1d7:	mov    ds:0xbee35a25,eax
  41f1dc:	aam    0xa9
  41f1de:	xor    edx,ecx
  41f1e0:	pop    ds
  41f1e1:	push   ecx
  41f1e2:	rol    DWORD PTR [edx+edi*2+0x11],1
  41f1e6:	mov    eax,0xb46d1883
  41f1eb:	or     eax,0x9b34e443
  41f1f0:	add    BYTE PTR [ecx+0x7cd80019],dh
  41f1f6:	cmp    cl,dl
  41f1f8:	int3   
  41f1f9:	pusha  
  41f1fa:	xor    al,0xa4
  41f1fc:	(bad)  
  41f1fd:	fisub  DWORD PTR [ecx+ebp*4]
  41f200:	cld    
  41f201:	add    BYTE PTR [edx],bl
  41f203:	jp     0x41f229
  41f205:	sub    eax,0xe7d8d19b
  41f20a:	sub    al,0x34
  41f20c:	enter  0xf8fa,0xa7
  41f210:	xchg   esi,eax
  41f211:	aad    0x98
  41f213:	clc    
  41f214:	pop    esi
  41f215:	cmp    BYTE PTR [ebx],0xb
  41f218:	xchg   ebx,eax
  41f219:	lea    edx,[eax]
  41f21b:	addr16 mov ebp,0xe9965d18
  41f221:	sbb    cl,BYTE PTR ds:0x5aab0d96
  41f227:	mov    al,0x60
  41f229:	jae    0x41f1ce
  41f22b:	sbb    BYTE PTR [esi+eax*8],ch
  41f22e:	add    eax,0x3b798da3
  41f233:	pusha  
  41f234:	ins    DWORD PTR es:[edi],dx
  41f235:	cmp    BYTE PTR [edx-0x68],0x6a
  41f239:	cli    
  41f23a:	dec    eax
  41f23b:	mov    ds:0xfc3bec1c,al
  41f240:	js     0x41f28c
  41f242:	leave  
  41f243:	xor    eax,0x9b2c6147
  41f248:	fwait
  41f249:	shl    BYTE PTR [edx-0x1d44b8c0],0x60
  41f250:	das    
  41f251:	shr    cl,cl
  41f253:	pop    edi
  41f254:	xor    ah,BYTE PTR [edi]
  41f256:	js     0x41f266
  41f258:	push   esi
  41f259:	mov    ds:0x51464f9a,eax
  41f25e:	pusha  
  41f25f:	and    bl,BYTE PTR [edx]
  41f261:	aam    0xa2
  41f263:	push   esi
  41f264:	adc    eax,DWORD PTR [eax]
  41f266:	mov    WORD PTR [eax-0x1a],?
  41f269:	jnp    0x41f1f0
  41f26b:	repnz sbb esp,edx
  41f26e:	jge    0x41f2c8
  41f270:	stos   DWORD PTR es:[edi],eax
  41f271:	cmp    ah,BYTE PTR [ebp+0x4a5bc040]
  41f277:	mov    ah,0x9e
  41f279:	inc    edi
  41f27a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f27b:	pop    eax
  41f27c:	retf   0x3d81
  41f27f:	clc    
  41f280:	or     al,0xce
  41f282:	lea    edi,ds:0xa779ffd3
  41f288:	cmp    al,0x88
  41f28a:	xor    eax,DWORD PTR [ebp+esi*4+0x5532f7ae]
  41f291:	mov    ebp,0xe6618bb5
  41f296:	pop    ebx
  41f297:	adc    al,0x79
  41f299:	sbb    eax,0x8441fa3
  41f29e:	jmp    0x41f2de
  41f2a0:	popf   
  41f2a1:	xlat   BYTE PTR ds:[ebx]
  41f2a2:	(bad)  
  41f2a3:	js     0x41f22e
  41f2a5:	js     0x41f2c4
  41f2a7:	and    BYTE PTR [ebx-0x21dbaf7a],0xf5
  41f2ae:	add    BYTE PTR ds:0xbb3ab14a,dh
  41f2b4:	pop    es
  41f2b5:	(bad)  
  41f2b6:	out    0xb8,eax
  41f2b8:	inc    ax
  41f2ba:	inc    ebp
  41f2bc:	lea    ecx,[esi]
  41f2be:	pop    es
  41f2bf:	data16 fbstp TBYTE PTR [edi-0x762edbd0]
  41f2c6:	adc    ch,al
  41f2c8:	cmp    al,0xce
  41f2ca:	xchg   DWORD PTR [edx-0x7a97fe21],esp
  41f2d0:	sub    edx,eax
  41f2d2:	and    ebx,0x2fa79352
  41f2d8:	sub    dh,BYTE PTR [ecx]
  41f2da:	fucomi st,st(2)
  41f2dc:	sub    al,0x4c
  41f2de:	mov    ebp,0xfdc2370c
  41f2e3:	jmp    0x41f2bf
  41f2e5:	xchg   BYTE PTR [esi],ch
  41f2e7:	fnsave [esi]
  41f2e9:	mov    cl,0x2a
  41f2eb:	stos   BYTE PTR es:[edi],al
  41f2ec:	mov    al,ds:0x3cb1fe5a
  41f2f1:	enter  0xb444,0xcd
  41f2f5:	dec    ebp
  41f2f6:	push   ecx
  41f2f7:	sbb    al,0xb2
  41f2f9:	imul   ecx,DWORD PTR [edx+0x1c],0xb788f13d
  41f300:	pop    ds
  41f301:	dec    esi
  41f302:	xchg   BYTE PTR [eax],al
  41f304:	inc    esp
  41f305:	xchg   edx,eax
  41f306:	sub    ecx,DWORD PTR [edx+esi*1]
  41f309:	jno    0x41f36d
  41f30b:	push   ds
  41f30c:	fcmove st,st(4)
  41f30e:	fs inc ebx
  41f310:	mov    ds:0x3bd142e6,al
  41f315:	test   eax,0xed564a60
  41f31a:	dec    eax
  41f31b:	test   eax,0x61462cc0
  41f320:	or     al,0x2
  41f323:	mov    ch,0x98
  41f325:	cdq    
  41f326:	cmp    DWORD PTR [ebx],0xe3f1b1e
  41f32c:	fld    DWORD PTR [ecx]
  41f32e:	arpl   bx,ax
  41f330:	fmul   DWORD PTR [ecx-0x3afe2ad1]
  41f336:	or     BYTE PTR ds:0x4ebd4cfd,bh
  41f33c:	ja     0x41f39b
  41f33e:	jecxz  0x41f2ed
  41f340:	mov    dh,0x7f
  41f342:	mov    cl,0x9b
  41f344:	test   al,0x52
  41f346:	fcmovbe st,st(3)
  41f348:	lods   al,BYTE PTR ds:[esi]
  41f349:	jb     0x41f385
  41f34b:	pop    edx
  41f34c:	mov    DWORD PTR [ebx-0x7c],edi
  41f34f:	les    ebx,FWORD PTR [ebx+0x24]
  41f352:	shr    DWORD PTR [edi-0x44],0x42
  41f356:	add    al,0xa0
  41f358:	xor    ah,dh
  41f35a:	push   esi
  41f35b:	ja     0x41f3cb
  41f35d:	stos   DWORD PTR es:[edi],eax
  41f35e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f35f:	inc    edx
  41f360:	cmp    DWORD PTR [ebp+0x32160f3d],esp
  41f366:	cmp    eax,0xcc7bd35
  41f36b:	into   
  41f36c:	inc    ebp
  41f36d:	xor    eax,edi
  41f36f:	jo     0x41f2f8
  41f371:	in     al,0x9b
  41f373:	cs xchg ebx,eax
  41f375:	mov    bh,BYTE PTR [ebx+ebp*2]
  41f378:	call   0x3c498eb6
  41f37d:	ss pop ds
  41f37f:	stc    
  41f380:	xchg   BYTE PTR [esi],al
  41f382:	xor    DWORD PTR [ebp+0x7e],0x830bf4a0
  41f389:	add    al,0x8e
  41f38b:	loope  0x41f3fe
  41f38d:	jg     0x41f394
  41f38f:	adc    DWORD PTR [esi+0x65],eax
  41f392:	ret    0x286d
  41f395:	icebp  
  41f396:	in     al,0xb7
  41f398:	std    
  41f399:	scas   al,BYTE PTR es:[edi]
  41f39a:	push   0x6e
  41f39c:	cmp    ebx,DWORD PTR [ebx]
  41f39e:	mov    cl,dl
  41f3a0:	pop    ss
  41f3a1:	idiv   ch
  41f3a3:	jp     0x41f341
  41f3a5:	adc    al,0xa5
  41f3a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3a8:	add    eax,0xd39fc2e8
  41f3ad:	inc    ebx
  41f3ae:	fsub   QWORD PTR [edi]
  41f3b0:	add    eax,esp
  41f3b2:	in     eax,0x67
  41f3b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3b5:	aas    
  41f3b6:	xor    BYTE PTR [edx+0x2b2393b1],al
  41f3bc:	hlt    
  41f3bd:	and    BYTE PTR [eax],al
  41f3bf:	test   al,0x99
  41f3c1:	jne    0x41f370
  41f3c3:	cdq    
  41f3c4:	xchg   ebp,eax
  41f3c5:	mov    eax,ds:0xa27f46a3
  41f3ca:	xor    eax,DWORD PTR [eax-0x43]
  41f3cd:	loop   0x41f38e
  41f3cf:	data16 sbb BYTE PTR [ebx+ecx*8+0x21],al
  41f3d4:	cs sub eax,0x9bf5883d
  41f3da:	fs popf 
  41f3dc:	dec    ebx
  41f3dd:	rcr    BYTE PTR [edi-0x5a],cl
  41f3e0:	scas   eax,DWORD PTR es:[edi]
  41f3e1:	loop   0x41f45e
  41f3e3:	push   eax
  41f3e4:	idiv   DWORD PTR [ecx]
  41f3e6:	and    BYTE PTR [edx+0x7d99645],dh
  41f3ec:	mov    ds:0x7b3520f9,eax
  41f3f1:	mov    esp,0xd6607e0e
  41f3f6:	icebp  
  41f3f7:	xor    ah,dh
  41f3f9:	out    0xd,al
  41f3fb:	enter  0x9b93,0xf1
  41f3ff:	mov    dh,0x4c
  41f401:	and    al,0x7f
  41f403:	mov    edx,DWORD PTR ds:0x8c2975c9
  41f409:	cmc    
  41f40a:	dec    ebx
  41f40b:	pop    ebp
  41f40c:	push   ebp
  41f40d:	add    edi,DWORD PTR [edx-0x758937e7]
  41f413:	shl    BYTE PTR [edx-0x58],0x25
  41f417:	add    BYTE PTR [ecx],ah
  41f419:	cmp    DWORD PTR [ebp+0x0],esi
  41f41c:	sub    al,BYTE PTR [ebx]
  41f41e:	fwait
  41f41f:	jl     0x41f3dd
  41f421:	sbb    DWORD PTR [edi+0x5f649032],eax
  41f427:	in     al,dx
  41f428:	sub    dh,BYTE PTR [ebp-0x4b6ae075]
  41f42e:	arpl   WORD PTR [esi+0x7d],cx
  41f431:	mov    ecx,0xc114f45f
  41f436:	and    ch,bl
  41f438:	cmp    eax,0xa05e8ed2
  41f43d:	ins    DWORD PTR es:[edi],dx
  41f43e:	dec    ebx
  41f43f:	in     eax,0x36
  41f441:	adc    DWORD PTR [eax+edi*4+0x47],ebx
  41f445:	and    ecx,DWORD PTR [esi+0x6d30d47f]
  41f44b:	out    dx,eax
  41f44c:	pop    es
  41f44d:	shr    BYTE PTR [eax],0x3e
  41f450:	cs and edi,edx
  41f453:	test   eax,0x2a01da10
  41f458:	push   edi
  41f459:	push   cs
  41f45a:	mov    ecx,0x32e1fddf
  41f45f:	lock push ss
  41f461:	imul   DWORD PTR [ecx]
  41f463:	xchg   DWORD PTR [esi],ebx
  41f465:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f466:	mov    ds:0x6aa08a66,al
  41f46b:	push   eax
  41f46c:	or     bl,BYTE PTR [ebp-0x5c]
  41f46f:	adc    eax,0xf81fff58
  41f474:	dec    ebp
  41f475:	das    
  41f476:	push   ss
  41f477:	test   DWORD PTR [ebx-0x31],edi
  41f47a:	mov    DWORD PTR [edi-0x7fee1dc4],ebp
  41f480:	mov    dl,dl
  41f482:	adc    BYTE PTR [esp+eax*1-0x5c9903b1],0x58
  41f48a:	mov    esi,0x44006934
  41f48f:	dec    sp
  41f491:	adc    eax,0x1c6b85a7
  41f496:	out    dx,al
  41f497:	jecxz  0x41f4df
  41f499:	repz mov eax,ds:0x66f333be
  41f49f:	and    eax,esp
  41f4a1:	pop    es
  41f4a2:	lods   eax,DWORD PTR ds:[esi]
  41f4a3:	push   0xffffffff
  41f4a5:	pop    ds
  41f4a6:	inc    esi
  41f4a7:	or     ecx,DWORD PTR [eax-0x5d]
  41f4aa:	sub    BYTE PTR [eax],0x18
  41f4ad:	jae    0x41f437
  41f4af:	arpl   WORD PTR [edi],di
  41f4b1:	inc    edi
  41f4b2:	call   0x78cf:0x7466d56f
  41f4b9:	aaa    
  41f4ba:	cs dec ebp
  41f4bc:	inc    ecx
  41f4bd:	xor    ebp,DWORD PTR [esi+0x3e]
  41f4c0:	cmp    dl,BYTE PTR [edi]
  41f4c2:	xchg   ecx,eax
  41f4c3:	sub    eax,0x8a8f8b1a
  41f4c8:	mov    al,ds:0x99bdf36c
  41f4cd:	(bad)  
  41f4ce:	fcom   QWORD PTR [ebx-0x53]
  41f4d1:	mov    ebx,0xae64f23
  41f4d6:	push   esp
  41f4d7:	sub    al,0xad
  41f4d9:	sbb    BYTE PTR [ebp-0x3d],0x96
  41f4dd:	sub    edi,DWORD PTR [edx+0x5d]
  41f4e0:	(bad)  
  41f4e1:	xor    BYTE PTR [esi],ah
  41f4e3:	dec    esp
  41f4e4:	daa    
  41f4e5:	mov    cl,0xf7
  41f4e7:	iret   
  41f4e8:	ss sar ebx,cl
  41f4eb:	push   edx
  41f4ec:	dec    eax
  41f4ed:	ja     0x41f50c
  41f4ef:	shl    BYTE PTR [ebx-0x762e3eb],cl
  41f4f5:	ror    BYTE PTR [edi+0x3687a9e1],cl
  41f4fb:	shr    BYTE PTR [eax],cl
  41f4fd:	imul   ebx,DWORD PTR [eax-0x2a7f2a73],0x79
  41f504:	pop    esi
  41f505:	sbb    ah,0x9a
  41f508:	xchg   esi,eax
  41f509:	arpl   WORD PTR [eax+ebx*2-0x35],bp
  41f50d:	cmc    
  41f50e:	pop    eax
  41f50f:	les    ebx,FWORD PTR [edx]
  41f511:	pop    ds
  41f512:	xchg   esi,eax
  41f513:	dec    ecx
  41f514:	int3   
  41f515:	dec    esp
  41f516:	push   0x0
  41f518:	es stos BYTE PTR es:[edi],al
  41f51a:	inc    esi
  41f51b:	call   DWORD PTR [edi]
  41f51d:	xchg   ebp,eax
  41f51e:	add    esi,ecx
  41f520:	fmul   QWORD PTR ds:0x35edbc00
  41f526:	xchg   ecx,eax
  41f527:	shl    esp,0x15
  41f52a:	mov    esp,0xdaf27d51
  41f52f:	or     BYTE PTR [ebp+0x69],dh
  41f532:	out    0xb3,eax
  41f534:	mov    al,ds:0x60c675fc
  41f539:	dec    ebx
  41f53a:	fcom   QWORD PTR es:[edi-0x78]
  41f53e:	push   edi
  41f53f:	ss gs inc ecx
  41f542:	or     ebp,DWORD PTR [ebx]
  41f544:	stos   DWORD PTR es:[edi],eax
  41f545:	push   cs
  41f546:	neg    DWORD PTR [eax]
  41f548:	cmp    eax,0x98fdc207
  41f54d:	sar    BYTE PTR [edi+0x67249ac],1
  41f553:	in     al,0x8d
  41f555:	sbb    eax,0x93e4d02a
  41f55a:	ja     0x41f4fb
  41f55c:	xor    bh,BYTE PTR [edx]
  41f55e:	xchg   esi,eax
  41f55f:	loope  0x41f4e4
  41f561:	jecxz  0x41f528
  41f563:	mov    BYTE PTR [eax-0x73b82288],bl
  41f569:	jno    0x41f565
  41f56b:	or     eax,0x2fcc281f
  41f570:	xchg   BYTE PTR [ecx+0x68578744],ah
  41f576:	ror    BYTE PTR [esi+0x7b790384],0xce
  41f57d:	mov    cl,0x8b
  41f57f:	push   cs
  41f580:	xor    al,0x5d
  41f582:	pusha  
  41f583:	jmp    0x1a2:0x5051b3b3
  41f58a:	xor    edx,ecx
  41f58c:	mov    edi,edx
  41f58e:	jmp    0x41f54b
  41f590:	xor    bl,ah
  41f592:	pop    es
  41f593:	out    0x68,eax
  41f595:	inc    ebx
  41f596:	mov    ecx,0x17341f7e
  41f59b:	je     0x41f544
  41f59d:	mov    ?,WORD PTR [ebx]
  41f59f:	imul   edi,DWORD PTR [ebx+eax*4],0x88b95ce7
  41f5a6:	xchg   esi,eax
  41f5a7:	xlat   BYTE PTR ds:[ebx]
  41f5a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5a9:	push   ds
  41f5aa:	or     ch,BYTE PTR [edi+eax*4+0x18]
  41f5ae:	jge    0x41f5ee
  41f5b0:	sbb    BYTE PTR [ebp-0x79bf45da],ah
  41f5b6:	cmp    DWORD PTR [ebp+0x19],esp
  41f5b9:	stos   DWORD PTR es:[edi],eax
  41f5ba:	add    eax,0x109be9a4
  41f5bf:	dec    esp
  41f5c0:	sub    al,0xeb
  41f5c2:	nop
  41f5c3:	shl    DWORD PTR [ecx+0xd],1
  41f5c6:	or     ebp,DWORD PTR [eax-0x63bbf16f]
  41f5cc:	aaa    
  41f5cd:	jnp    0x41f598
  41f5cf:	fist   WORD PTR [esi]
  41f5d1:	sub    al,0x8c
  41f5d3:	out    dx,al
  41f5d4:	xor    esp,ebp
  41f5d6:	cmp    edi,DWORD PTR [edi+0x6827c37f]
  41f5dc:	mov    eax,ds:0x61542ab3
  41f5e1:	xor    bl,bh
  41f5e3:	adc    DWORD PTR [edx-0x1b97d26],edi
  41f5e9:	cli    
  41f5ea:	js     0x41f593
  41f5ec:	outs   dx,DWORD PTR ds:[esi]
  41f5ed:	in     al,0x47
  41f5ef:	dec    edi
  41f5f0:	and    al,0x70
  41f5f2:	int3   
  41f5f3:	cmc    
  41f5f4:	mov    al,ds:0x9962e7f9
  41f5f9:	push   0xffffff86
  41f5fb:	xchg   edx,eax
  41f5fc:	dec    ebx
  41f5fd:	fild   DWORD PTR [esp+esi*8]
  41f600:	mov    edx,0x8bd7b5ff
  41f605:	mov    al,0x83
  41f607:	(bad)  
  41f608:	and    dl,al
  41f60a:	out    dx,al
  41f60b:	sti    
  41f60c:	cmp    BYTE PTR [edi+eax*4],0x54
  41f610:	rcl    eax,0xee
  41f613:	inc    ecx
  41f614:	add    eax,0xa6d88e79
  41f619:	mov    al,ds:0xcabbe9a4
  41f61e:	push   es
  41f61f:	pop    edx
  41f620:	cmp    al,0xe1
  41f622:	jns    0x41f5b2
  41f624:	mov    al,0x8f
  41f626:	cmp    BYTE PTR [edx+0x489df2a1],al
  41f62c:	fcom   st(6)
  41f62e:	cwde   
  41f62f:	add    esp,edx
  41f631:	(bad)  
  41f633:	js     0x41f699
  41f635:	mov    gs,WORD PTR [edi+0x44d5e5d1]
  41f63b:	xor    al,0x45
  41f63d:	xchg   esp,eax
  41f63e:	popa   
  41f63f:	pop    esp
  41f640:	cmp    DWORD PTR [ebx-0x7f45438a],esp
  41f646:	mov    edi,0x473960b2
  41f64b:	jge    0x41f619
  41f64d:	xor    al,0x84
  41f64f:	iret   
  41f650:	pop    esp
  41f651:	sbb    eax,0x628cc93b
  41f656:	hlt    
  41f657:	into   
  41f658:	mov    ecx,0x478efa44
  41f65d:	cwde   
  41f65e:	mov    ch,BYTE PTR [ebp+0x38]
  41f661:	iret   
  41f662:	dec    edx
  41f663:	cmp    eax,0xfd203164
  41f668:	push   es
  41f669:	stc    
  41f66a:	dec    esp
  41f66b:	imul   ebx,DWORD PTR [ecx-0x9],0x5b
  41f66f:	mov    bh,0x34
  41f671:	mov    al,0xaa
  41f673:	cld    
  41f674:	add    eax,edx
  41f676:	cmp    al,0x95
  41f678:	ftst   
  41f67a:	mov    bh,0xb7
  41f67c:	retf   0x54aa
  41f67f:	pop    eax
  41f680:	scas   eax,DWORD PTR es:[edi]
  41f681:	xchg   esp,eax
  41f682:	pop    ebp
  41f683:	hlt    
  41f684:	push   0x8c9929fd
  41f689:	xchg   ecx,eax
  41f68a:	clc    
  41f68b:	aaa    
  41f68c:	adc    eax,0xe28146b7
  41f691:	mov    edi,0x8b524cba
  41f696:	sub    eax,0x95bf64e7
  41f69b:	aad    0xa1
  41f69d:	dec    ebp
  41f69e:	retf   0xf7d0
  41f6a1:	mov    bl,0x54
  41f6a3:	ret    
  41f6a4:	cmp    DWORD PTR [edi+0xe],esi
  41f6a7:	inc    ebp
  41f6a8:	xchg   edx,eax
  41f6a9:	fs cmc 
  41f6ab:	inc    eax
  41f6ac:	mov    bh,bh
  41f6ae:	stos   BYTE PTR es:[edi],al
  41f6af:	lea    eax,[ecx]
  41f6b1:	cld    
  41f6b2:	les    eax,FWORD PTR [ebx]
  41f6b4:	dec    edx
  41f6b5:	mov    dl,0xc9
  41f6b7:	(bad)  
  41f6b8:	jmp    0x91f3437e
  41f6bd:	and    al,0x82
  41f6bf:	daa    
  41f6c0:	stos   DWORD PTR es:[edi],eax
  41f6c1:	icebp  
  41f6c2:	fild   DWORD PTR [edx]
  41f6c4:	sbb    al,ch
  41f6c6:	fmul   QWORD PTR [edx+0x38]
  41f6c9:	inc    esp
  41f6ca:	sbb    dh,BYTE PTR [edx-0x7b]
  41f6cd:	adc    eax,0x1752379
  41f6d2:	lods   eax,DWORD PTR ds:[esi]
  41f6d3:	test   BYTE PTR [edi-0x5ecc0151],ah
  41f6d9:	idiv   BYTE PTR [esi+eax*8-0x77441adc]
  41f6e0:	cmp    ebx,esi
  41f6e2:	int3   
  41f6e3:	js     0x41f739
  41f6e5:	adc    bl,BYTE PTR [esi]
  41f6e7:	jae    0x41f75c
  41f6e9:	lea    ebp,[edi-0x74]
  41f6ec:	sub    al,0x59
  41f6ee:	xchg   bh,bh
  41f6f0:	sub    ch,dh
  41f6f2:	das    
  41f6f3:	inc    esi
  41f6f4:	call   0x4f5d:0x8071649c
  41f6fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6fc:	xchg   esp,eax
  41f6fd:	mov    edi,0x72408505
  41f702:	xor    al,0xa8
  41f704:	and    ch,dl
  41f706:	xchg   ecx,eax
  41f707:	sub    ch,BYTE PTR [ecx-0x66]
  41f70a:	and    eax,0x7326431
  41f70f:	call   0x69da:0x5d776340
  41f716:	in     al,dx
  41f717:	cmc    
  41f718:	or     eax,ebx
  41f71a:	aaa    
  41f71b:	sub    eax,0x2fab9821
  41f720:	cmp    BYTE PTR [ebx+0x37],bh
  41f723:	dec    eax
  41f724:	rol    BYTE PTR [ebp-0x19],0xea
  41f728:	xlat   BYTE PTR ds:[ebx]
  41f729:	pop    edx
  41f72a:	repz add DWORD PTR [edi-0x2e],ebp
  41f72e:	push   ecx
  41f72f:	loope  0x41f76c
  41f731:	mov    edi,0xeb4c4baa
  41f736:	(bad)  
  41f737:	jno    0x41f749
  41f739:	pop    esi
  41f73a:	fdivr  DWORD PTR [edi]
  41f73c:	sbb    DWORD PTR [edi-0x2d],0xffffffa1
  41f740:	mov    ch,0xd6
  41f742:	inc    esp
  41f743:	outs   dx,BYTE PTR ds:[esi]
  41f744:	mov    esi,0x937f8b88
  41f749:	jge    0x41f6e9
  41f74b:	pop    edx
  41f74c:	or     ebx,edi
  41f74e:	in     eax,0x64
  41f750:	pop    esp
  41f751:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f752:	push   0xffffffb6
  41f754:	sbb    BYTE PTR [eax],dh
  41f756:	ss shl edi,cl
  41f759:	inc    ebx
  41f75a:	adc    ecx,DWORD PTR [edx-0x80]
  41f75d:	xlat   BYTE PTR ds:[ebx]
  41f75e:	or     ecx,DWORD PTR [ebp-0x5f]
  41f761:	div    edi
  41f763:	fcom   QWORD PTR [edx-0x7bb5b42b]
  41f769:	push   ebx
  41f76a:	and    eax,0xe6cff8b4
  41f76f:	sub    ah,BYTE PTR [ecx-0x7a]
  41f772:	ret    0xceea
  41f775:	mov    esi,0xde2d0d2e
  41f77a:	outs   dx,BYTE PTR ds:[esi]
  41f77b:	icebp  
  41f77c:	daa    
  41f77d:	popa   
  41f77e:	inc    ebp
  41f77f:	clc    
  41f780:	jge    0x41f77c
  41f782:	jne    0x41f798
  41f784:	mov    al,ds:0x5a27623b
  41f789:	xor    BYTE PTR [esi-0x80],ah
  41f78c:	sub    eax,0x8d4c6d5b
  41f791:	cli    
  41f792:	repz mov ebx,0xc39106e
  41f798:	mov    WORD PTR ds:0xccd5167a,es
  41f79e:	in     al,dx
  41f79f:	cld    
  41f7a0:	shl    DWORD PTR [edi],cl
  41f7a2:	popa   
  41f7a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7a4:	sub    bl,BYTE PTR [ecx]
  41f7a6:	jmp    0x5a6d:0xc36a0707
  41f7ad:	mov    eax,ds:0x13cff8b0
  41f7b2:	mov    ah,0x33
  41f7b4:	mov    ah,0x73
  41f7b6:	cwde   
  41f7b7:	jb     0x41f7d5
  41f7b9:	dec    edx
  41f7ba:	jo     0x41f740
  41f7bc:	push   eax
  41f7bd:	mov    BYTE PTR [edi+0x58],ah
  41f7c0:	aad    0x2
  41f7c2:	div    BYTE PTR [esi-0x5fbc08de]
  41f7c8:	mov    dl,0x79
  41f7ca:	or     bh,BYTE PTR [ebx]
  41f7cc:	data16 aam 0x5
  41f7cf:	call   0x761b:0xa6039f82
  41f7d6:	dec    ebx
  41f7d7:	ret    0x94a4
  41f7da:	(bad)  
  41f7db:	ja     0x41f857
  41f7dd:	xchg   esi,eax
  41f7de:	mov    WORD PTR cs:[esi-0x30],?
  41f7e2:	adc    eax,0x667a08ea
  41f7e7:	xchg   ecx,eax
  41f7e8:	sbb    ecx,ecx
  41f7ea:	xchg   ebp,eax
  41f7eb:	mov    edx,0x2ba49881
  41f7f0:	test   eax,0xf2c85a47
  41f7f5:	mov    ds:0xb1482c73,al
  41f7fa:	aas    
  41f7fb:	mov    al,ds:0x78ca3e37
  41f800:	aad    0xbe
  41f802:	and    ecx,DWORD PTR [edx-0x6c]
  41f805:	jmp    0x41f78e
  41f807:	(bad)  
  41f808:	inc    ebp
  41f809:	sbb    dh,BYTE PTR [ebx+0x7976fd81]
  41f80f:	popa   
  41f810:	jno    0x41f7b1
  41f812:	or     DWORD PTR [edx-0x7c],ebx
  41f815:	mov    edi,0x35c90277
  41f81a:	aaa    
  41f81b:	mov    ecx,0xe760ebaf
  41f820:	xlat   BYTE PTR ds:[ebx]
  41f821:	mov    ebp,0x33664dc6
  41f826:	push   eax
  41f827:	sbb    al,cl
  41f829:	mov    cl,0xd2
  41f82b:	cwde   
  41f82c:	mov    DWORD PTR [edx-0x208de189],edx
  41f832:	aam    0x67
  41f834:	int3   
  41f835:	pop    ebx
  41f836:	mov    eax,ds:0x754cddfb
  41f83b:	outs   dx,DWORD PTR ds:[esi]
  41f83c:	and    eax,DWORD PTR [edx+0x28]
  41f83f:	ret    
  41f840:	xchg   DWORD PTR [esi],esp
  41f842:	inc    eax
  41f843:	sub    eax,0xe7c3d570
  41f848:	or     eax,0x7e40bce4
  41f84d:	jne    0x41f84a
  41f84f:	aam    0xf2
  41f851:	test   DWORD PTR [esi+0x991e9e7],ebp
  41f857:	mov    WORD PTR [ecx-0x38757afb],?
  41f85d:	mov    ds:0x6ad9d9c6,eax
  41f862:	ins    BYTE PTR es:[edi],dx
  41f863:	sbb    al,0x3b
  41f865:	and    cl,BYTE PTR [eax+0x24]
  41f868:	imul   ebp,DWORD PTR [esi+0x22],0xffffffe9
  41f86c:	sbb    cl,BYTE PTR [edi-0x3b]
  41f86f:	ret    
  41f870:	push   esp
  41f871:	pop    esi
  41f872:	lea    edi,[ebx-0x79636c72]
  41f878:	cmp    ecx,DWORD PTR [edx-0x30f442d4]
  41f87e:	enter  0x1933,0x70
  41f882:	add    BYTE PTR ss:[ecx+eiz*1-0x24],dl
  41f887:	mov    bl,0x1d
  41f889:	dec    eax
  41f88a:	and    al,BYTE PTR [ebx+ecx*2]
  41f88d:	(bad)  [ebp+0x120756a9]
  41f893:	sub    DWORD PTR [edi],ecx
  41f895:	and    dh,BYTE PTR [ebp-0x44cb177d]
  41f89b:	adc    esi,esi
  41f89d:	jbe    0x41f913
  41f89f:	imul   DWORD PTR [esi+0x7f90a50]
  41f8a5:	inc    eax
  41f8a6:	lea    ebp,[edx+0x59]
  41f8a9:	jmp    0xd0adf388
  41f8ae:	pop    ss
  41f8af:	sbb    dl,dh
  41f8b1:	lods   eax,DWORD PTR ds:[esi]
  41f8b2:	or     eax,0x6ffa8fc7
  41f8b7:	cdq    
  41f8b8:	inc    edi
  41f8b9:	jnp    0x41f905
  41f8bb:	mov    esi,0x7ed81386
  41f8c0:	mov    edi,0x9ba16d71
  41f8c5:	jmp    0x41f893
  41f8c7:	pop    edx
  41f8c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8c9:	stos   BYTE PTR es:[edi],al
  41f8ca:	sub    al,ch
  41f8cc:	test   eax,0xc077dd57
  41f8d1:	cmp    eax,0x32f91af4
  41f8d6:	mov    dh,0xb3
  41f8d8:	pushf  
  41f8d9:	in     al,dx
  41f8da:	sbb    al,0x6
  41f8dc:	ds sub eax,0x5dd358ea
  41f8e2:	stos   DWORD PTR es:[edi],eax
  41f8e3:	mov    ch,0xef
  41f8e5:	xor    ebx,DWORD PTR [ecx]
  41f8e7:	nop
  41f8e8:	cmp    cl,BYTE PTR [edx]
  41f8ea:	mov    ds:0xc70bfae4,eax
  41f8ef:	adc    eax,0xe3f5d25
  41f8f4:	sub    al,0xf9
  41f8f6:	fcomp  QWORD PTR [ebp-0x21]
  41f8f9:	test   eax,0xb5e2b451
  41f8fe:	aas    
  41f8ff:	dec    esi
  41f900:	imul   edx,eax,0x79
  41f903:	fcom   DWORD PTR [esi-0x7ebac813]
  41f909:	sbb    cl,BYTE PTR [edx]
  41f90b:	pop    ds
  41f90c:	shr    BYTE PTR [ecx],cl
  41f90e:	add    BYTE PTR es:[eax+ebp*1],bl
  41f912:	pusha  
  41f913:	mov    DWORD PTR [ebx+0x5d],ecx
  41f916:	pop    edx
  41f917:	mov    ds,WORD PTR [esp+ecx*1]
  41f91a:	push   ebp
  41f91b:	imul   bh
  41f91d:	and    al,ch
  41f91f:	adc    DWORD PTR [edx-0x4d1157c9],0x67
  41f926:	(bad)  
  41f928:	rcl    DWORD PTR [edx+0x59],cl
  41f92b:	cmp    eax,0xef42eb88
  41f930:	inc    ebx
  41f931:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f932:	and    eax,0xc9d4ecbc
  41f937:	lods   al,BYTE PTR ds:[esi]
  41f938:	adc    eax,0xdb2e65a
  41f93d:	xchg   DWORD PTR [edi],edx
  41f93f:	out    0x5a,al
  41f941:	pop    eax
  41f942:	xchg   esi,eax
  41f943:	fmul   QWORD PTR [esi+0x7e]
  41f946:	jbe    0x41f8f8
  41f948:	sub    BYTE PTR [esi-0x72ecfd04],ah
  41f94e:	push   ss
  41f94f:	(bad)  
  41f950:	cli    
  41f951:	loope  0x41f995
  41f953:	sbb    eax,0x26d640d6
  41f958:	jmp    0x52e1:0x176280d4
  41f95f:	add    eax,0x5dd4cb35
  41f964:	data16 or bl,BYTE PTR gs:[eax-0x7d]
  41f969:	inc    edi
  41f96a:	and    ch,dh
  41f96c:	inc    ebp
  41f96d:	adc    bh,BYTE PTR [ebx-0x2]
  41f970:	popa   
  41f971:	outs   dx,DWORD PTR ds:[esi]
  41f972:	in     eax,0x67
  41f974:	mov    cl,0xd4
  41f976:	enter  0xe5ad,0xe1
  41f97a:	into   
  41f97b:	jnp    0x41f9b5
  41f97d:	xchg   edx,eax
  41f97e:	sbb    eax,0xc3e7b10c
  41f983:	adc    BYTE PTR [esi],cl
  41f985:	shl    DWORD PTR [edi+0x21],cl
  41f988:	mov    dh,0x84
  41f98a:	data16 or al,0x5
  41f98d:	shl    bh,0xbe
  41f990:	mov    ds:0xf7db896f,eax
  41f995:	push   ebp
  41f996:	(bad)  
  41f997:	cmp    ah,BYTE PTR [esi-0x14]
  41f99a:	es dec ebx
  41f99c:	xchg   DWORD PTR [ebx+ecx*2],edi
  41f99f:	loope  0x41f984
  41f9a1:	ja     0x41f92b
  41f9a3:	cld    
  41f9a4:	int3   
  41f9a5:	adc    al,0x82
  41f9a7:	jae    0x41f998
  41f9a9:	pop    ecx
  41f9aa:	(bad)  
  41f9ab:	shl    DWORD PTR [ecx-0x4d],0x20
  41f9af:	xor    cl,ah
  41f9b1:	test   al,0xb7
  41f9b3:	(bad)  
  41f9b4:	pop    esp
  41f9b5:	add    eax,0xd5ef1d8c
  41f9ba:	mov    eax,0x1356962c
  41f9bf:	mov    al,0xcf
  41f9c1:	ss cmp al,0xd6
  41f9c4:	rol    DWORD PTR [edx+0x4521a536],1
  41f9ca:	jns    0x41f9e9
  41f9cc:	test   edi,eax
  41f9ce:	push   esp
  41f9cf:	fadd   DWORD PTR [edx+0x18]
  41f9d2:	jns    0x41fa26
  41f9d4:	test   BYTE PTR [edx+ebp*4],ah
  41f9d7:	push   0xbe9a386
  41f9dc:	lea    edx,[ebx+0x25]
  41f9df:	dec    esi
  41f9e0:	xor    DWORD PTR [esi+0x7f],ebp
  41f9e3:	stc    
  41f9e4:	xchg   esi,eax
  41f9e5:	rcr    esi,0x5c
  41f9e8:	cmp    al,ah
  41f9ea:	sbb    bl,BYTE PTR ds:[esi-0x48]
  41f9ee:	repnz xor BYTE PTR [ebx+0x31],dh
  41f9f2:	stos   DWORD PTR es:[edi],eax
  41f9f3:	sub    ebx,DWORD PTR [edi-0x4d]
  41f9f6:	cmp    esi,edi
  41f9f8:	pop    ebp
  41f9f9:	sbb    eax,0xd191214b
  41f9fe:	jg     0x41f9b3
  41fa00:	gs dec ebx
  41fa02:	mov    esi,0xbd6d022d
  41fa07:	(bad)  
  41fa08:	iret   
  41fa09:	lods   al,BYTE PTR ds:[esi]
  41fa0a:	aas    
  41fa0b:	pusha  
  41fa0c:	clc    
  41fa0d:	mov    ch,0x15
  41fa0f:	fxch   st(3)
  41fa11:	pushf  
  41fa12:	jg     0x41fa30
  41fa14:	rol    DWORD PTR [esi],cl
  41fa16:	xor    dl,BYTE PTR [edi+0x5c]
  41fa19:	dec    edx
  41fa1a:	mov    BYTE PTR [edi+0x7b],bh
  41fa1d:	scas   eax,DWORD PTR es:[edi]
  41fa1e:	xchg   esp,eax
  41fa1f:	loope  0x41f9ac
  41fa21:	sub    BYTE PTR [ecx-0x40],0x91
  41fa25:	int    0x4f
  41fa27:	leave  
  41fa28:	xlat   BYTE PTR ss:[ebx]
  41fa2a:	xchg   esi,eax
  41fa2b:	call   0x56a98f60
  41fa30:	dec    edx
  41fa31:	inc    esp
  41fa32:	out    dx,al
  41fa33:	and    al,0xb
  41fa35:	push   0xca5d27b7
  41fa3a:	call   0xe1ee0389
  41fa3f:	je     0x41fa8d
  41fa41:	adc    BYTE PTR [esi],bl
  41fa43:	xchg   ebp,eax
  41fa44:	mov    eax,DWORD PTR [ebx]
  41fa46:	add    DWORD PTR [ecx+0x2bc53c06],ecx
  41fa4c:	stc    
  41fa4d:	add    DWORD PTR [ecx+eiz*4+0x500161fc],0x5
  41fa55:	(bad)  
  41fa56:	aam    0x7e
  41fa58:	xor    ecx,ebx
  41fa5a:	jmp    0x593991b2
  41fa5f:	xor    esi,DWORD PTR [eax-0x14]
  41fa62:	mov    esi,0xe3226368
  41fa67:	xchg   ecx,eax
  41fa68:	lods   al,BYTE PTR ds:[esi]
  41fa69:	mov    dh,0x55
  41fa6b:	aas    
  41fa6c:	cmc    
  41fa6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa6e:	loope  0x41fa23
  41fa70:	dec    eax
  41fa71:	scas   eax,DWORD PTR es:[edi]
  41fa72:	rcr    DWORD PTR [edx-0x36],cl
  41fa75:	jnp    0x41fa4c
  41fa77:	xchg   ebx,eax
  41fa78:	es and eax,0x31328b1c
  41fa7e:	(bad)  
  41fa7f:	je     0x41fae0
  41fa81:	xor    esi,ebx
  41fa83:	aaa    
  41fa84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa85:	cli    
  41fa86:	push   cs
  41fa87:	sbb    al,0xd5
  41fa89:	sub    al,0x65
  41fa8b:	test   al,0x6d
  41fa8d:	and    al,BYTE PTR [edi]
  41fa8f:	es fs das 
  41fa92:	out    dx,eax
  41fa93:	pop    eax
  41fa94:	je     0x41faed
  41fa96:	js     0x41fa8c
  41fa98:	nop
  41fa99:	xor    ebx,DWORD PTR [eax+0x1a]
  41fa9c:	imul   esi,DWORD PTR [edx],0xffffffb7
  41fa9f:	mov    bl,0xbf
  41faa1:	jns    0x41fa6a
  41faa3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41faa4:	ins    BYTE PTR es:[edi],dx
  41faa5:	jbe    0x41fab8
  41faa7:	call   0x8d4d:0xa9f15709
  41faae:	shl    DWORD PTR [edi+0x59],1
  41fab1:	xor    al,0xad
  41fab3:	mov    DWORD PTR [ebp+0x66],ecx
  41fab6:	test   DWORD PTR [ecx+0x2e],ebp
  41fab9:	add    BYTE PTR [ebp+0x524d8972],bl
  41fabf:	(bad)  
  41fac0:	jbe    0x41faa9
  41fac2:	inc    esp
  41fac3:	leave  
  41fac4:	sbb    al,0x6f
  41fac6:	and    eax,0x76c5795a
  41facb:	lods   al,BYTE PTR ds:[esi]
  41facc:	lock cmp dl,dh
  41facf:	add    bh,ch
  41fad1:	ja     0x41fb23
  41fad3:	stc    
  41fad4:	out    dx,eax
  41fad5:	imul   ebp,DWORD PTR [ebp-0x7c],0x82da39d5
  41fadc:	push   0x51
  41fade:	jo     0x41fa77
  41fae0:	in     al,dx
  41fae1:	ffreep st(5)
  41fae3:	jmp    0x89d4:0xb698467c
  41faea:	cmp    edx,DWORD PTR [ebp+0x75c8c3e7]
  41faf0:	mov    dl,0x6
  41faf2:	cmp    esp,DWORD PTR [edx-0xe27338]
  41faf8:	xchg   esp,eax
  41faf9:	sti    
  41fafa:	inc    esi
  41fafb:	aaa    
  41fafc:	cmp    ecx,DWORD PTR [edi+0x34]
  41faff:	adc    ch,0xab
  41fb02:	cli    
  41fb03:	gs js  0x41fb72
  41fb06:	mov    ds:0x8594cd63,al
  41fb0b:	sub    ebx,edx
  41fb0d:	mov    edi,DWORD PTR [edx+0x33e12eef]
  41fb13:	stc    
  41fb14:	jae    0x41fb40
  41fb16:	ss mov edi,0x6925bc73
  41fb1c:	xor    bh,BYTE PTR [ecx+0x28184362]
  41fb22:	pop    ds
  41fb23:	add    ebp,esp
  41fb25:	rcr    ch,0x40
  41fb28:	adc    al,0x62
  41fb2a:	mov    DWORD PTR [ebx],edi
  41fb2c:	enter  0x376f,0x58
  41fb30:	ja     0x41fac4
  41fb32:	lea    edx,[bp+si-0x3d]
  41fb36:	dec    eax
  41fb37:	and    al,0x70
  41fb39:	or     eax,0xc0a7d30c
  41fb3e:	inc    eax
  41fb3f:	stc    
  41fb40:	imul   edx,DWORD PTR [eax+0x41570f34],0xffffff9a
  41fb47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb48:	test   al,dh
  41fb4a:	icebp  
  41fb4b:	mov    ebp,esp
  41fb4d:	cwde   
  41fb4e:	sbb    DWORD PTR [edx-0x60513c75],edx
  41fb54:	jne    0x41fbaf
  41fb56:	xchg   ebp,eax
  41fb57:	pop    ecx
  41fb58:	cli    
  41fb59:	pop    ds
  41fb5a:	dec    ecx
  41fb5b:	cmp    ebp,eax
  41fb5d:	push   edx
  41fb5e:	jns    0x41fb6f
  41fb60:	enter  0xfed9,0x2
  41fb64:	pushf  
  41fb65:	pop    ds
  41fb66:	xor    DWORD PTR [ecx-0x7f7fc03a],edi
  41fb6c:	std    
  41fb6d:	hlt    
  41fb6e:	mov    eax,ds:0xac1b1fe4
  41fb73:	push   ecx
  41fb74:	xchg   ebx,eax
  41fb75:	jns    0x41fb3f
  41fb77:	mov    esi,0x4f6c4d22
  41fb7c:	pushf  
  41fb7d:	leave  
  41fb7e:	inc    esp
  41fb7f:	pop    ds
  41fb80:	and    al,BYTE PTR [ecx]
  41fb82:	out    0x78,al
  41fb84:	sbb    ecx,DWORD PTR [esi]
  41fb86:	ds jmp 0x7dc7:0xef22d905
  41fb8e:	sti    
  41fb8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb90:	shl    DWORD PTR [ecx],0xd8
  41fb93:	bsf    ebx,DWORD PTR [ebp-0x16]
  41fb97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb98:	sub    al,0xb8
  41fb9a:	lahf   
  41fb9b:	or     al,0xf3
  41fb9d:	jno    0x41fb9f
  41fb9f:	jle    0x41fc07
  41fba1:	jp     0x41fb30
  41fba3:	int3   
  41fba4:	xor    ebp,DWORD PTR [edx]
  41fba6:	pop    ebx
  41fba7:	outs   dx,BYTE PTR ds:[esi]
  41fba8:	or     BYTE PTR [esi],cl
  41fbaa:	test   DWORD PTR [edi*8-0x6288160e],eax
  41fbb1:	inc    esi
  41fbb2:	mov    edx,0xc0389006
  41fbb7:	fbld   TBYTE PTR [edi-0x57c3fce4]
  41fbbd:	jae    0x41fbd9
  41fbbf:	ret    
  41fbc0:	and    eax,0xf49e04e3
  41fbc5:	mov    ebp,0xbfd6c5ce
  41fbca:	imul   ebx,esi,0x58
  41fbcd:	jmp    0xe17b:0x34bcfb6a
  41fbd4:	cwde   
  41fbd5:	mov    ch,0x1e
  41fbd7:	mov    cl,0x6e
  41fbd9:	add    dh,al
  41fbdb:	jb     0x41fb81
  41fbdd:	js     0x41fb68
  41fbdf:	pop    edi
  41fbe0:	sbb    eax,0x76ad2c58
  41fbe5:	ret    0xccc6
  41fbe8:	dec    esp
  41fbe9:	int    0x5b
  41fbeb:	out    0xd8,al
  41fbed:	mov    edx,0x26b9054
  41fbf2:	dec    edx
  41fbf3:	(bad)  
  41fbf4:	push   edx
  41fbf5:	pop    edx
  41fbf6:	shl    ebx,cl
  41fbf8:	fstp   TBYTE PTR [ecx-0x400dc18c]
  41fbfe:	loop   0x41fbf0
  41fc00:	shl    BYTE PTR [ebx+0x24],0xe1
  41fc04:	mov    eax,ds:0x8fd6e74a
  41fc09:	cmp    eax,edi
  41fc0b:	fisttp QWORD PTR cs:[eax]
  41fc0e:	xchg   ecx,eax
  41fc0f:	mov    ds:0x9dfc6585,eax
  41fc14:	pop    edi
  41fc15:	jbe    0x41fc59
  41fc17:	push   es
  41fc18:	loopne 0x41fc08
  41fc1a:	xchg   edx,eax
  41fc1b:	(bad)  
  41fc1c:	retf   0x22f7
  41fc1f:	inc    ebx
  41fc20:	ret    0xae58
  41fc23:	data16 mov al,es:0x6c10dedb
  41fc2a:	in     eax,dx
  41fc2b:	add    al,0x30
  41fc2d:	and    ebx,DWORD PTR [edx+0x58b0468b]
  41fc33:	xlat   BYTE PTR ds:[ebx]
  41fc34:	dec    esp
  41fc35:	ds in  al,0xb2
  41fc38:	jle    0x41fc41
  41fc3a:	xchg   edx,eax
  41fc3b:	outs   dx,BYTE PTR ds:[esi]
  41fc3c:	mov    esi,0x71a30e9d
  41fc41:	add    cl,BYTE PTR [edi+edi*4-0x671ea55b]
  41fc48:	data16 (bad) 
  41fc4a:	pop    ebp
  41fc4b:	mov    DWORD PTR [ebx],eax
  41fc4d:	test   al,0x75
  41fc4f:	sub    dl,bl
  41fc51:	fld    TBYTE PTR [ecx-0x3a]
  41fc54:	and    DWORD PTR ds:0x28e0280,0x54
  41fc5b:	mov    edi,DWORD PTR [ebx-0x60ee143c]
  41fc61:	push   edx
  41fc62:	inc    esi
  41fc63:	xchg   ah,dh
  41fc65:	push   esi
  41fc66:	xchg   ebx,eax
  41fc67:	mov    bl,0xc5
  41fc69:	sbb    ebx,eax
  41fc6b:	or     DWORD PTR [edi-0x7f774352],ecx
  41fc71:	xor    eax,0x80a8cbed
  41fc76:	(bad)  
  41fc77:	mov    dh,0xaa
  41fc79:	mov    ecx,0x7599ac19
  41fc7e:	dec    esp
  41fc7f:	push   ecx
  41fc80:	scas   al,BYTE PTR es:[edi]
  41fc81:	pmulhw mm2,QWORD PTR [esi]
  41fc84:	in     eax,0x80
  41fc86:	je     0x41fc3a
  41fc88:	cmp    ebp,edi
  41fc8a:	mov    ds:0x635517d3,eax
  41fc8f:	mov    cl,0xed
  41fc91:	cmp    cl,BYTE PTR [ebx]
  41fc93:	dec    eax
  41fc94:	cmp    BYTE PTR [esi+edi*1],bh
  41fc97:	sub    eax,0x6f2bffaa
  41fc9c:	pop    ss
  41fc9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc9e:	mov    al,ds:0xe9902cc4
  41fca3:	fst    DWORD PTR [ebx+0x2a]
  41fca6:	dec    ebx
  41fca7:	das    
  41fca8:	icebp  
  41fca9:	sub    BYTE PTR [eax],cl
  41fcab:	inc    ecx
  41fcac:	jo     0x41fc3c
  41fcae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fcaf:	and    eax,0x33c67cf7
  41fcb4:	and    bh,BYTE PTR [edx-0x6b]
  41fcb7:	jge    0x41fd28
  41fcb9:	pusha  
  41fcba:	push   es
  41fcbb:	ins    BYTE PTR es:[edi],dx
  41fcbc:	lea    eax,[eax]
  41fcbe:	push   0x736f94fc
  41fcc3:	pop    edi
  41fcc4:	inc    edi
  41fcc5:	(bad)  
  41fcc6:	pusha  
  41fcc7:	jno    0x41fd38
  41fcc9:	les    edx,FWORD PTR [eax]
  41fccb:	sub    bh,BYTE PTR ds:0x811dfcd6
  41fcd1:	int    0x79
  41fcd3:	mov    eax,0xe148cd80
  41fcd8:	dec    esp
  41fcd9:	push   0x551c93f9
  41fcde:	adc    BYTE PTR [edx+0xe],bl
  41fce1:	jne    0x41fd2c
  41fce3:	push   esi
  41fce4:	jno    0x41fd17
  41fce6:	out    dx,al
  41fce7:	fwait
  41fce8:	inc    esi
  41fce9:	lods   eax,DWORD PTR ds:[esi]
  41fcea:	clc    
  41fceb:	pop    ss
  41fcec:	ror    BYTE PTR [edi-0x2],cl
  41fcef:	lods   eax,DWORD PTR ds:[esi]
  41fcf0:	repz shl DWORD PTR [eax-0x28],0xc9
  41fcf5:	bound  edx,QWORD PTR [eax-0x6c]
  41fcf8:	(bad)  
  41fcf9:	lds    edx,FWORD PTR [esi+ecx*1+0x57ad060b]
  41fd00:	or     al,0xd7
  41fd02:	sub    ah,BYTE PTR [eax+eiz*1]
  41fd05:	repnz mov ebp,0x53eaa9cc
  41fd0b:	cmp    eax,0xb75470ca
  41fd10:	push   0x34ca4c9c
  41fd15:	rol    DWORD PTR [ebx-0x56b43a98],cl
  41fd1b:	cdq    
  41fd1c:	sar    ebx,0x23
  41fd1f:	std    
  41fd20:	and    ebx,DWORD PTR [ecx]
  41fd22:	mov    BYTE PTR [edx],bl
  41fd24:	sub    ah,BYTE PTR [edi+0x61]
  41fd27:	imul   esi,eax,0xffffff89
  41fd2a:	adc    al,0xbc
  41fd2c:	mov    cl,0xda
  41fd2e:	or     esi,DWORD PTR [edx+esi*4+0x62]
  41fd32:	or     BYTE PTR [edi],bh
  41fd34:	sub    DWORD PTR [edi+0xf],ecx
  41fd37:	sahf   
  41fd38:	lods   al,BYTE PTR ds:[esi]
  41fd39:	push   0x0
  41fd3b:	xor    eax,DWORD PTR [ecx-0x375254a5]
  41fd41:	cmp    BYTE PTR [ebp+0x73],al
  41fd44:	cwde   
  41fd45:	ins    BYTE PTR es:[edi],dx
  41fd46:	jae    0x41fce5
  41fd48:	xchg   ebx,eax
  41fd49:	dec    ecx
  41fd4a:	or     al,BYTE PTR [edi]
  41fd4c:	call   0x4d6c:0xa8dbb290
  41fd53:	push   fs
  41fd55:	ja     0x41fdc8
  41fd57:	(bad)  
  41fd58:	push   ebx
  41fd59:	jns    0x41fd65
  41fd5b:	not    BYTE PTR [eax]
  41fd5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd5e:	mov    esi,0xc60dbcd9
  41fd63:	jg     0x41fcfd
  41fd65:	add    ebx,DWORD PTR [ebx-0x1f030e4]
  41fd6b:	jg     0x41fda3
  41fd6d:	(bad)  
  41fd6e:	aad    0xfc
  41fd70:	js     0x41fdc2
  41fd72:	test   dl,cl
  41fd74:	push   0xffffff9c
  41fd76:	push   ds
  41fd77:	push   esp
  41fd78:	xchg   edi,eax
  41fd79:	mov    DWORD PTR [esi+0x57],edi
  41fd7c:	vmwrite ebp,ebp
  41fd7f:	mov    ecx,0x9e6fd558
  41fd84:	aas    
  41fd85:	cld    
  41fd86:	xchg   esi,eax
  41fd87:	das    
  41fd88:	sbb    al,0x68
  41fd8a:	je     0x41fd60
  41fd8c:	add    al,0x5a
  41fd8e:	inc    edi
  41fd8f:	inc    eax
  41fd90:	pop    ss
  41fd91:	popa   
  41fd92:	inc    ebx
  41fd93:	push   edx
  41fd94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd95:	push   ecx
  41fd96:	xchg   ebx,eax
  41fd97:	mov    eax,ds:0xbe27e6fa
  41fd9c:	imul   edx,DWORD PTR [ebp-0xe5fb915],0xffffffe5
  41fda3:	adc    al,0x4f
  41fda5:	stc    
  41fda6:	sub    eax,0x9a882b07
  41fdab:	rcr    al,1
  41fdad:	adc    edx,DWORD PTR [edi]
  41fdaf:	je     0x41fe16
  41fdb1:	sbb    dl,al
  41fdb3:	mov    bh,0xb4
  41fdb5:	rcr    ah,cl
  41fdb7:	sti    
  41fdb8:	push   es
  41fdb9:	sbb    al,0x31
  41fdbb:	gs sbb al,0x10
  41fdbe:	pop    gs
  41fdc0:	dec    al
  41fdc2:	cmp    eax,0xa5baee4d
  41fdc7:	scas   al,BYTE PTR es:[edi]
  41fdc8:	lahf   
  41fdc9:	inc    esi
  41fdca:	add    esp,DWORD PTR [ebp-0x73]
  41fdcd:	ins    DWORD PTR es:[edi],dx
  41fdce:	clc    
  41fdcf:	outs   dx,DWORD PTR fs:[esi]
  41fdd1:	ds in  al,dx
  41fdd3:	in     eax,dx
  41fdd4:	ds jnp 0x41fdf1
  41fdd7:	or     BYTE PTR [edx+0x7e],cl
  41fdda:	ficom  DWORD PTR [ecx-0x4d66e6f]
  41fde0:	jmp    0x2756:0xfb33bf29
  41fde7:	pop    edi
  41fde8:	pop    ss
  41fde9:	into   
  41fdea:	sub    DWORD PTR [esp+eiz*2],esp
  41fded:	mov    BYTE PTR [edi-0x559b9eb8],bl
  41fdf3:	sar    DWORD PTR [eax+0x5e],cl
  41fdf6:	hlt    
  41fdf7:	jmp    0x3052a681
  41fdfc:	sti    
  41fdfd:	stos   BYTE PTR es:[edi],al
  41fdfe:	dec    ecx
  41fdff:	mov    dl,0x36
  41fe01:	inc    esi
  41fe02:	mov    ecx,ecx
  41fe04:	dec    ebx
  41fe05:	and    al,0xe1
  41fe07:	test   eax,0xd713812e
  41fe0c:	xor    al,0x5
  41fe0e:	jae    0x41fe24
  41fe10:	les    edi,FWORD PTR [esi-0x228ce50d]
  41fe16:	inc    esp
  41fe17:	mov    ebx,0xdfdb444
  41fe1c:	sar    esi,1
  41fe1e:	xchg   ebx,edi
  41fe20:	mov    ebp,0x370c25d8
  41fe25:	ja     0x41fdfe
  41fe27:	data16 (bad) 
  41fe29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe2a:	add    eax,0x49e548bc
  41fe2f:	out    0x35,eax
  41fe31:	or     al,0x2e
  41fe33:	dec    esi
  41fe34:	hlt    
  41fe35:	and    eax,0x6a24af47
  41fe3a:	fcomip st,st(7)
  41fe3c:	jmp    ecx
  41fe3e:	inc    eax
  41fe3f:	cmp    ecx,DWORD PTR [ebp+0x3]
  41fe42:	outs   dx,DWORD PTR ds:[esi]
  41fe43:	sub    eax,0x6e1ee23e
  41fe48:	fsub   st,st(1)
  41fe4a:	mov    ds:0x6105f26a,al
  41fe4f:	arpl   WORD PTR [ecx*2+0x430d381d],di
  41fe56:	std    
  41fe57:	data16 aad 0x14
  41fe5a:	aam    0x2e
  41fe5c:	dec    ebx
  41fe5d:	jne    0x41fe89
  41fe5f:	mov    al,0x8f
  41fe61:	test   al,0x31
  41fe63:	jmp    0xaef52610
  41fe68:	jecxz  0x41fe9d
  41fe6a:	scas   al,BYTE PTR es:[edi]
  41fe6b:	mov    eax,ds:0x787ca15d
  41fe70:	xlat   BYTE PTR ds:[ebx]
  41fe71:	inc    edx
  41fe72:	test   al,0x3e
  41fe74:	cmp    DWORD PTR [ebx],edx
  41fe76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe77:	dec    ebx
  41fe78:	rol    ah,0xc
  41fe7b:	mov    bl,0xf3
  41fe7d:	popa   
  41fe7e:	aam    0x47
  41fe80:	dec    esi
  41fe81:	jmp    0x4cd6b93d
  41fe86:	inc    edi
  41fe87:	dec    esi
  41fe88:	or     dl,ah
  41fe8a:	push   cs
  41fe8b:	leave  
  41fe8c:	mov    cl,0x93
  41fe8e:	mov    ecx,0xfc4799a8
  41fe93:	inc    eax
  41fe94:	imul   BYTE PTR [ebx-0x79]
  41fe97:	mov    bl,0x8
  41fe99:	pop    esi
  41fe9a:	loop   0x41feec
  41fe9c:	pop    ss
  41fe9d:	xor    ah,BYTE PTR [eax-0x69]
  41fea0:	or     al,0xf6
  41fea2:	push   cs
  41fea3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fea4:	jp     0x41feed
  41fea6:	cmp    esp,DWORD PTR [ebx+0x4b6fc6f8]
  41feac:	aad    0x45
  41feae:	and    DWORD PTR ds:0xaf963ed6,edx
  41feb4:	jp     0x41fe9b
  41feb6:	or     DWORD PTR [esi+eax*1-0x2ea79cb5],ebp
  41febd:	jg     0x41ff3a
  41febf:	xchg   edi,eax
  41fec0:	inc    eax
  41fec1:	cmp    ecx,edi
  41fec3:	xor    DWORD PTR [eax+0x32652f2c],0xf2e9b34c
  41fecd:	and    al,0x5b
  41fecf:	lods   al,BYTE PTR ds:[esi]
  41fed0:	sub    DWORD PTR [edi+0x4dc8c14c],0xee1d3b22
  41feda:	pop    edx
  41fedb:	jne    0x41ff43
  41fedd:	cmp    cl,BYTE PTR [eax+0x1c]
  41fee0:	fisub  WORD PTR [ebx+edi*2+0x25]
  41fee4:	sar    BYTE PTR [ebx+0x5dc102cb],1
  41feea:	clc    
  41feeb:	cmp    DWORD PTR [ebx-0x1d],ebp
  41feee:	or     DWORD PTR [ecx+0x48],ebx
  41fef1:	lods   al,BYTE PTR ds:[esi]
  41fef2:	or     al,0x11
  41fef4:	add    eax,0x804ab445
  41fef9:	leave  
  41fefa:	pop    esi
  41fefb:	stos   DWORD PTR es:[edi],eax
  41fefc:	das    
  41fefd:	hlt    
  41fefe:	mov    ebp,0x35ac63f9
  41ff03:	ins    DWORD PTR es:[edi],dx
  41ff04:	bound  eax,QWORD PTR [ebp+edi*1+0x33e4f95a]
  41ff0b:	mov    ds:0x34dd3826,al
  41ff10:	mov    DWORD PTR [ecx+0x3988b04b],edi
  41ff16:	sub    al,0xb5
  41ff18:	mov    esp,0x1d31e5ed
  41ff1d:	mov    esp,0x544768e2
  41ff22:	pop    eax
  41ff23:	and    eax,DWORD PTR [edi+0x33]
  41ff26:	mov    cl,0x52
  41ff28:	mov    eax,0xd53fb4a
  41ff2d:	stos   BYTE PTR es:[edi],al
  41ff2e:	sub    al,0x95
  41ff30:	push   ecx
  41ff31:	xor    ecx,DWORD PTR [ebp-0x58]
  41ff34:	mov    BYTE PTR [ebp+0x3edb19bf],ch
  41ff3a:	(bad)  
  41ff3c:	push   eax
  41ff3d:	and    bh,BYTE PTR [edx+0x1287a935]
  41ff43:	shr    al,0x5c
  41ff46:	add    DWORD PTR [esi+0xe],esp
  41ff49:	cdq    
  41ff4a:	ror    DWORD PTR [edi],cl
  41ff4c:	pop    edi
  41ff4d:	aas    
  41ff4e:	sub    al,0x75
  41ff50:	xor    bh,BYTE PTR [edi]
  41ff52:	sbb    DWORD PTR [edi],edx
  41ff54:	lods   eax,DWORD PTR ds:[esi]
  41ff55:	or     bh,BYTE PTR [edx-0x6a]
  41ff58:	jge    0x41ffaa
  41ff5a:	dec    esp
  41ff5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff5c:	mov    dl,0x95
  41ff5e:	xor    eax,0x2c33527
  41ff63:	das    
  41ff64:	xchg   esi,eax
  41ff65:	xchg   DWORD PTR [edx],eax
  41ff67:	ret    
  41ff68:	(bad)  
  41ff6a:	or     bl,BYTE PTR [ebx]
  41ff6c:	add    ah,BYTE PTR [ebx-0xf]
  41ff6f:	shl    DWORD PTR [esi],1
  41ff71:	mov    cl,0x7f
  41ff73:	mov    esp,0xc655bad0
  41ff78:	mov    eax,0xb35af7bd
  41ff7d:	add    al,0x25
  41ff7f:	pop    eax
  41ff80:	jne    0x41ff54
  41ff82:	and    DWORD PTR [eax],esp
  41ff84:	mov    bh,0x56
  41ff86:	scas   eax,DWORD PTR es:[edi]
  41ff87:	cmp    eax,0xfcc87486
  41ff8c:	push   ecx
  41ff8d:	jne    0x41ff2f
  41ff8f:	mov    ch,BYTE PTR [esi+0x5e]
  41ff92:	mov    ds:0x5ebca3d6,al
  41ff97:	mov    ebp,0x36aaa2ef
  41ff9c:	mov    cl,0x18
  41ff9e:	inc    edx
  41ff9f:	cdq    
  41ffa0:	sbb    al,0x44
  41ffa2:	or     eax,0x3c752ddd
  41ffa8:	add    edx,DWORD PTR [esi+0x31776fdb]
  41ffae:	sbb    BYTE PTR [esi],dh
  41ffb0:	enter  0x87ed,0xab
  41ffb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ffb5:	xchg   DWORD PTR [edi+0x32560c9c],ebp
  41ffbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ffbc:	les    edi,FWORD PTR [edx]
  41ffbe:	fisttp WORD PTR [esi]
  41ffc0:	lahf   
  41ffc1:	xor    BYTE PTR [eax-0xcac0752],0xe3
  41ffc8:	mov    gs,WORD PTR [eax-0x1eaea613]
  41ffce:	ret    0x8a7c
  41ffd1:	cld    
  41ffd2:	and    ebx,DWORD PTR [eax+0x73ed138d]
  41ffd8:	in     eax,dx
  41ffd9:	mov    dh,0x5c
  41ffdb:	arpl   WORD PTR [eax+0x374a3ea7],di
  41ffe1:	ficomp DWORD PTR [esi+0x5c13034]
  41ffe7:	cmp    al,BYTE PTR [eax+0x4b]
  41ffea:	ds jmp 0x3363f99b
  41fff0:	add    bl,BYTE PTR [ecx]
  41fff2:	adc    eax,0x53dee470
  41fff7:	fidivr WORD PTR [esi]
  41fff9:	es mov edi,0x96c7d5ab
  41ffff:	sbb    ah,bl
  420001:	cmp    ah,ch
  420003:	add    al,0x5d
  420005:	or     ch,BYTE PTR [ebx+edx*4+0x3c]
  420009:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42000a:	ror    DWORD PTR [edx],1
  42000c:	jae    0x420069
  42000e:	ss push ebp
  420010:	adc    DWORD PTR [ebx],esi
  420012:	sbb    ch,BYTE PTR [esi-0x4d0aee2e]
  420018:	push   esp
  420019:	push   cs
  42001a:	out    dx,al
  42001b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42001c:	nop
  42001d:	xor    ch,BYTE PTR [ecx-0x12204cce]
  420023:	stos   DWORD PTR es:[edi],eax
  420024:	jmp    0x4c216e99
  420029:	loop   0x420036
  42002b:	or     ebp,esp
  42002d:	sub    bh,BYTE PTR [edi+0x73]
  420030:	retf   
  420031:	push   ss
  420032:	push   edx
  420033:	inc    eax
  420034:	sbb    bl,BYTE PTR [ebx]
  420036:	mov    WORD PTR [edx+0x2c1899f8],gs
  42003c:	test   al,0xf3
  42003e:	jg     0x41ffc2
  420040:	dec    ecx
  420041:	cld    
  420042:	adc    BYTE PTR [ecx-0x34],ah
  420045:	pop    ss
  420046:	(bad)  
  420047:	dec    edi
  420048:	int    0x25
  42004a:	mov    dl,0xe
  42004c:	jmp    0x41fffd
  42004e:	iret   
  42004f:	push   eax
  420050:	fucomi st,st(4)
  420052:	aaa    
  420053:	imul   ecx,DWORD PTR [edx],0x13e35d45
  420059:	sar    DWORD PTR ds:0x69a2be2f,0xae
  420060:	neg    DWORD PTR [ebp-0x2b930f55]
  420066:	mov    dh,0x1f
  420068:	mov    BYTE PTR [edi],bh
  42006a:	ds inc ebx
  42006c:	aas    
  42006d:	inc    esi
  42006e:	jecxz  0x4200a8
  420070:	adc    al,BYTE PTR [esi-0x36]
  420073:	(bad)  
  420074:	mov    al,0xa7
  420076:	push   esi
  420077:	imul   DWORD PTR [ebx-0x12fffeaa]
  42007d:	fidiv  WORD PTR [ebx-0x7c]
  420080:	jnp    0x420014
  420082:	test   al,0x86
  420084:	jb     0x4200bf
  420086:	xor    al,0x3b
  420088:	jp     0x420012
  42008a:	mov    ebp,0x88f7694b
  42008f:	push   ds
  420090:	push   ebp
  420091:	fdiv   st,st(4)
  420093:	pop    ds
  420094:	inc    esp
  420095:	or     eax,0xb557c6af
  42009a:	cmp    esp,DWORD PTR [edx-0x46]
  42009d:	push   ebx
  42009e:	out    dx,eax
  42009f:	(bad)  
  4200a1:	sbb    BYTE PTR [eax-0x12d24184],0xa5
  4200a8:	int3   
  4200a9:	cmp    ah,BYTE PTR [edi+esi*8]
  4200ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200ad:	es inc edi
  4200af:	ins    DWORD PTR es:[edi],dx
  4200b0:	test   BYTE PTR [ebx+0x13d2f977],ah
  4200b6:	fist   WORD PTR [ebx+0x5005cf9f]
  4200bc:	push   edi
  4200bd:	mov    dl,0x2a
  4200bf:	popa   
  4200c0:	je     0x420046
  4200c2:	pushf  
  4200c3:	rol    DWORD PTR [edx-0x5],0x34
  4200c7:	sbb    DWORD PTR [edi],edi
  4200c9:	and    DWORD PTR [ebp+0x67],edi
  4200cc:	fcomp  DWORD PTR [ecx+0x7f4ceeb2]
  4200d2:	and    al,0x42
  4200d4:	outs   dx,BYTE PTR ds:[esi]
  4200d5:	mov    eax,ds:0x39dadbfe
  4200da:	fcom   DWORD PTR [edi+0x4f]
  4200dd:	add    dl,0x37
  4200e0:	stc    
  4200e1:	push   ebx
  4200e2:	mov    ds:0x70a6fbff,al
  4200e7:	cwde   
  4200e8:	mov    DWORD PTR [ecx+0x6f],eax
  4200eb:	ss cmc 
  4200ed:	sbb    cl,BYTE PTR [ecx+0x4e]
  4200f0:	sar    DWORD PTR [edi],0xc2
  4200f3:	xor    DWORD PTR [edx],ebp
  4200f5:	aad    0x28
  4200f7:	adc    al,0x38
  4200f9:	lahf   
  4200fa:	cmp    bl,BYTE PTR [eax+ebx*4]
  4200fd:	mov    bl,0xae
  4200ff:	push   edi
  420100:	mov    ch,0xcf
  420102:	je     0x42014c
  420104:	pop    eax
  420105:	lods   al,BYTE PTR ds:[esi]
  420106:	cmp    al,0x4e
  420108:	push   ds
  420109:	arpl   WORD PTR ds:0xa999f66a,ax
  42010f:	dec    esi
  420110:	add    eax,0xc2d4aa13
  420115:	test   DWORD PTR [ebx-0x609c2859],esi
  42011b:	fucomp st(0)
  42011d:	and    eax,0x4bf284dc
  420122:	pop    ss
  420123:	xor    BYTE PTR [ebx+0xd067c91],ah
  420129:	test   DWORD PTR [ebx+0x764aad92],ebx
  42012f:	mov    DWORD PTR [edx-0x57],eax
  420132:	(bad)  
  420133:	daa    
  420134:	push   es
  420135:	mov    BYTE PTR [eax+0x3e],bh
  420138:	xor    dh,bh
  42013a:	call   0x2060:0x3a6dd04f
  420141:	push   ecx
  420142:	fistp  DWORD PTR [edi]
  420144:	clc    
  420145:	dec    ebp
  420146:	ficom  DWORD PTR [ebp+0x777a39ea]
  42014c:	test   edx,ebx
  42014e:	mov    ebx,0xc2f74220
  420153:	nop
  420154:	loop   0x4201a6
  420156:	or     al,0xc6
  420158:	fbstp  TBYTE PTR [ecx+0x1a6ed642]
  42015e:	push   ebx
  42015f:	ins    BYTE PTR es:[edi],dx
  420160:	in     eax,0x83
  420162:	and    eax,DWORD PTR [eax]
  420164:	dec    ebx
  420165:	cmp    al,0x31
  420167:	shl    bl,0x10
  42016a:	and    DWORD PTR [ecx-0x55],edi
  42016d:	jl     0x4201c1
  42016f:	ja     0x4200fc
  420171:	or     BYTE PTR [ecx+0x337a1168],bh
  420177:	xchg   esp,eax
  420179:	inc    edi
  42017a:	cs test bl,bl
  42017d:	int    0x18
  42017f:	mov    esi,0x8f0bcbc0
  420184:	jle    0x4201d7
  420186:	push   ss
  420187:	out    0xaf,al
  420189:	xchg   edi,eax
  42018a:	pcmpgtw mm4,QWORD PTR [edx]
  42018d:	xchg   edx,eax
  42018e:	scas   al,BYTE PTR es:[edi]
  42018f:	popf   
  420190:	retf   
  420191:	pop    esi
  420192:	sar    DWORD PTR [ebp+edi*1+0x73fecbe0],0x60
  42019a:	jge    0x4201a0
  42019c:	data16 test BYTE PTR [esi],bh
  42019f:	popa   
  4201a0:	sahf   
  4201a1:	int3   
  4201a2:	frstor [ebx-0x1db8f03c]
  4201a8:	dec    ebp
  4201a9:	out    dx,eax
  4201aa:	mov    WORD PTR [ebx-0x52],?
  4201ad:	mov    bh,0x3f
  4201af:	pop    DWORD PTR [edx]
  4201b1:	in     al,0x12
  4201b3:	jbe    0x420161
  4201b5:	cmp    al,0xef
  4201b7:	div    ch
  4201b9:	out    0x9,al
  4201bb:	sysenter 
  4201bd:	arpl   WORD PTR [ebx+0x24fddf55],bx
  4201c3:	mov    bl,0x8d
  4201c5:	jo     0x42014e
  4201c7:	ins    BYTE PTR es:[edi],dx
  4201c8:	add    DWORD PTR es:[edx-0x72],ebx
  4201cc:	imul   eax,edx,0xffffff96
  4201cf:	or     dl,0xbf
  4201d2:	xor    al,0xbc
  4201d4:	loope  0x42021a
  4201d6:	adc    edx,DWORD PTR [ebp+eax*8+0x10]
  4201da:	cmp    eax,0xfde4ff53
  4201df:	pop    esp
  4201e0:	push   0x40
  4201e2:	push   edi
  4201e3:	push   edi
  4201e4:	push   cs
  4201e5:	pop    es
  4201e6:	fstp   QWORD PTR [eax+ebx*4-0x3f]
  4201ea:	mov    al,ds:0xdaf97ed7
  4201ef:	stc    
  4201f0:	sar    BYTE PTR [esi+0x48],cl
  4201f3:	fwait
  4201f4:	xor    edi,DWORD PTR [edx+ebx*4+0xa8fb70d]
  4201fb:	je     0x42024d
  4201fd:	imul   edx,DWORD PTR ds:0x97a09bb1,0xffffffe1
  420204:	pop    ebx
  420205:	xchg   ebp,eax
  420206:	adc    ebx,DWORD PTR [eax+edx*8-0x3b]
  42020a:	imul   ebx,ecx,0x2a
  42020d:	jne    0x420203
  42020f:	popa   
  420210:	stc    
  420211:	inc    ebp
  420212:	leave  
  420213:	ds es rcl edx,1
  420217:	mov    ds:0x6339a082,eax
  42021c:	mov    dh,0x3b
  42021e:	add    ebp,edx
  420220:	inc    edx
  420221:	add    al,0xc4
  420223:	mov    eax,ds:0x4078417e
  420228:	bound  ebp,QWORD PTR [edi+eax*1-0x193836ca]
  42022f:	push   ss
  420230:	fistp  QWORD PTR ds:0x884ee3fc
  420236:	jo     0x4202b6
  420238:	cmp    edi,ecx
  42023a:	xor    edi,DWORD PTR [ebp-0x23]
  42023d:	(bad)  
  42023f:	fwait
  420240:	mov    DWORD PTR [eax],0xa2cff63b
  420246:	jmp    0x4201d3
  420248:	sub    eax,DWORD PTR [esi+0x117ddfda]
  42024e:	xchg   edx,eax
  42024f:	mov    eax,ds:0x37354032
  420254:	mov    edx,0xbfe6b595
  420259:	sbb    BYTE PTR [edx],dh
  42025b:	stos   BYTE PTR es:[edi],al
  42025c:	sbb    eax,0x6206bd22
  420261:	clc    
  420262:	mov    ebx,0x304d8ef7
  420267:	cmp    BYTE PTR [edi+0x54],dl
  42026a:	inc    esp
  42026b:	sub    esp,DWORD PTR [ebp+edx*2-0x29]
  42026f:	sub    cl,BYTE PTR [edi-0x23b0804b]
  420275:	ja     0x4202e2
  420277:	mov    bl,BYTE PTR [ebx]
  420279:	int3   
  42027a:	add    al,0x9a
  42027c:	inc    eax
  42027d:	gs push es
  42027f:	lock mov eax,0xe64e7b4d
  420285:	(bad)  
  420286:	push   ebx
  420287:	push   esi
  420288:	in     al,0xd
  42028a:	ss js  0x4202a5
  42028d:	xchg   edx,eax
  42028e:	rol    DWORD PTR [ebp+0x67],1
  420291:	sub    DWORD PTR [edi],esp
  420293:	or     al,0x2b
  420295:	sti    
  420296:	icebp  
  420297:	jb     0x42024b
  420299:	repz jne 0x420234
  42029c:	pusha  
  42029d:	icebp  
  42029e:	push   0x28310daa
  4202a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4202a4:	or     al,0x13
  4202a6:	mov    DWORD PTR [ebp-0x523078fc],ebx
  4202ac:	into   
  4202ad:	mov    edi,0x43ac677d
  4202b2:	imul   esp,DWORD PTR [edx],0x53c5a095
  4202b8:	ds jb  0x42031d
  4202bb:	push   edi
  4202bc:	bnd jnp 0x4202f5
  4202bf:	mov    bh,0xa7
  4202c1:	cs pop ds
  4202c3:	leave  
  4202c4:	pop    es
  4202c5:	jo     0x420265
  4202c7:	push   eax
  4202c8:	icebp  
  4202c9:	cs pop eax
  4202cb:	jle    0x42024e
  4202cd:	hlt    
  4202ce:	inc    edx
  4202cf:	lods   al,BYTE PTR ds:[esi]
  4202d0:	adc    DWORD PTR [esi],0xaf3ad11b
  4202d6:	call   0xacc3bee3
  4202db:	mov    ah,BYTE PTR [eax-0x4a3676d9]
  4202e1:	push   0xa
  4202e3:	daa    
  4202e4:	adc    dl,bh
  4202e6:	test   eax,0xa554ab34
  4202ec:	aad    0x2
  4202ee:	jl     0x420329
  4202f0:	repnz and al,0x7f
  4202f3:	cmp    esi,DWORD PTR [esi-0x14d82248]
  4202f9:	sbb    ebp,edx
  4202fb:	imul   ebx,DWORD PTR [edi-0x5a5867ad],0xdc0e5ac1
  420305:	xor    eax,0xc87de996
  42030a:	scas   eax,DWORD PTR es:[edi]
  42030b:	push   esp
  42030c:	mov    ah,0xfe
  42030e:	test   BYTE PTR [eax+0x4c],ah
  420311:	push   esi
  420312:	retf   
  420313:	ret    
  420314:	std    
  420315:	xchg   esp,eax
  420316:	mov    ch,0xf4
  420318:	out    0x35,eax
  42031a:	or     DWORD PTR [ecx+0x7],esp
  42031d:	jl     0x420365
  42031f:	push   ebp
  420320:	aas    
  420321:	(bad)  
  420323:	mov    ss,WORD PTR [edi+0x16]
  420326:	inc    edi
  420327:	add    edx,DWORD PTR ds:0x2b980b13
  42032d:	or     DWORD PTR [ecx],eax
  42032f:	js     0x4203a0
  420331:	push   ebp
  420332:	lahf   
  420333:	or     al,0xd5
  420335:	and    DWORD PTR [ebp+0x31],eax
  420338:	ja     0x42037a
  42033a:	cs out 0xac,eax
  42033d:	test   eax,0x12650b23
  420342:	sub    al,0xc
  420344:	mov    dh,0x65
  420346:	ds pop ebx
  420348:	mov    bl,BYTE PTR [edx+0x71]
  42034b:	jns    0x42031c
  42034d:	fisubr DWORD PTR [eax+0x56a12861]
  420353:	and    DWORD PTR [esi],ebx
  420355:	xor    edi,edx
  420357:	cmp    eax,ecx
  420359:	out    0x38,eax
  42035b:	icebp  
  42035c:	sbb    cl,BYTE PTR [ebx+0x59d36c84]
  420362:	(bad)  
  420363:	jne    0x4203d6
  420365:	cmp    eax,0x3b965a80
  42036a:	loop   0x42036f
  42036c:	dec    ecx
  42036d:	jmp    0x646ec327
  420372:	dec    edx
  420373:	cmp    DWORD PTR [edi],ecx
  420375:	stc    
  420376:	jle    0x420348
  420378:	xchg   edi,eax
  420379:	lahf   
  42037a:	sub    DWORD PTR ds:0x656d6ef0,ebp
  420380:	shl    DWORD PTR [edx],cl
  420382:	scas   al,BYTE PTR es:[edi]
  420383:	pop    ebx
  420384:	call   0x75ed0fb2
  420389:	push   edi
  42038a:	(bad)  
  42038b:	inc    ecx
  42038c:	stos   DWORD PTR es:[edi],eax
  42038d:	jno    0x42040d
  42038f:	mov    al,0x3d
  420391:	ins    BYTE PTR es:[edi],dx
  420392:	stos   BYTE PTR es:[edi],al
  420393:	or     BYTE PTR [ebp-0x3afe12ad],bh
  420399:	dec    ebp
  42039a:	loope  0x420403
  42039c:	or     eax,0xe64ceb2a
  4203a1:	cmp    ah,BYTE PTR [ecx]
  4203a3:	out    dx,eax
  4203a4:	ja     0x42037a
  4203a6:	mov    ds:0xd4913039,eax
  4203ab:	enter  0x68d4,0xf4
  4203af:	jge    0x4203d1
  4203b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203b2:	xor    DWORD PTR ds:0xf2022907,esi
  4203b8:	ds push 0xffffffc1
  4203bb:	pop    eax
  4203bc:	fnstcw WORD PTR [eax]
  4203be:	mov    ebx,DWORD PTR [eax-0x431d1e72]
  4203c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4203c5:	fucomip st,st(0)
  4203c7:	mov    ch,0xd6
  4203c9:	test   eax,0x10cd6046
  4203ce:	ins    BYTE PTR es:[edi],dx
  4203cf:	and    al,0x50
  4203d1:	stc    
  4203d2:	cld    
  4203d3:	(bad)  
  4203d4:	int    0x28
  4203d6:	sub    DWORD PTR [edx],esi
  4203d8:	popa   
  4203d9:	inc    edi
  4203da:	pop    es
  4203db:	cdq    
  4203dc:	mov    fs,WORD PTR [edi+0x63]
  4203df:	outs   dx,DWORD PTR ds:[esi]
  4203e0:	aas    
  4203e1:	pop    ecx
  4203e2:	enter  0x7212,0x8c
  4203e6:	mov    ah,0x64
  4203e8:	ret    
  4203e9:	jo     0x42043c
  4203eb:	mov    ebx,0x8f3a654a
  4203f0:	mov    edx,DWORD PTR [edx]
  4203f2:	jnp    0x420456
  4203f4:	daa    
  4203f5:	iret   
  4203f6:	jecxz  0x4203aa
  4203f8:	xchg   esi,eax
  4203f9:	jl     0x42040b
  4203fb:	xor    BYTE PTR [ebx+ebp*4-0x4fa554a9],dl
  420402:	popa   
  420403:	outs   dx,BYTE PTR ds:[esi]
  420404:	push   ecx
  420405:	adc    eax,0xcbe86362
  42040a:	inc    ebx
  42040b:	fxch   st(0)
  42040d:	pop    ecx
  42040e:	ds dec ecx
  420410:	mov    ebp,0xf5095b08
  420415:	mov    eax,0xbe99c296
  42041a:	retf   
  42041b:	pop    eax
  42041c:	imul   BYTE PTR [esi]
  42041e:	and    cl,bh
  420420:	int3   
  420421:	mov    WORD PTR [ebx-0x544e0f8b],cs
  420427:	sub    al,0x17
  420429:	adc    eax,0x8d3a4f64
  42042e:	pusha  
  42042f:	frstor [si-0x5a13]
  420434:	sbb    al,0xe0
  420436:	jnp    0x4203d6
  420438:	call   0xe7a8d2f1
  42043d:	xchg   edi,eax
  42043e:	gs pop eax
  420440:	fincstp 
  420442:	les    ebx,FWORD PTR [eax]
  420444:	xchg   BYTE PTR [esp+esi*4-0x10f39fd1],al
  42044b:	shr    BYTE PTR [ebx],cl
  42044d:	inc    ebp
  42044e:	and    dl,BYTE PTR [edi+0x2]
  420451:	cli    
  420452:	dec    edx
  420453:	mov    BYTE PTR ss:[edi-0x1c],ah
  420457:	dec    edx
  420458:	pop    es
  420459:	enter  0xce49,0x50
  42045d:	sbb    cl,BYTE PTR [esi]
  42045f:	test   esp,ebp
  420461:	add    bl,BYTE PTR [edi+eax*1+0x2296fff9]
  420468:	shl    DWORD PTR [eax-0x7964509e],0xb2
  42046f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420470:	mov    ch,0xb9
  420472:	sti    
  420473:	push   es
  420474:	inc    ebp
  420475:	mul    DWORD PTR [edi-0x17]
  420478:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420479:	call   0x223804ff
  42047e:	das    
  42047f:	xlat   BYTE PTR ds:[ebx]
  420480:	jnp    0x4204f8
  420482:	dec    ebp
  420483:	stos   BYTE PTR es:[edi],al
  420484:	and    BYTE PTR [eax],bh
  420486:	in     eax,0x5
  420488:	jne    0x420447
  42048a:	sbb    eax,0xc734631b
  42048f:	push   ecx
  420490:	aam    0xa4
  420492:	add    eax,0x73bf73b0
  420497:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420498:	idiv   BYTE PTR [esi]
  42049a:	bound  esi,QWORD PTR [ebx-0x1390fccc]
  4204a0:	not    BYTE PTR [eax+0x6a017e7e]
  4204a6:	dec    ebx
  4204a7:	sbb    ah,BYTE PTR [eax-0x1e]
  4204aa:	cmp    al,0x61
  4204ac:	stos   DWORD PTR es:[edi],eax
  4204ad:	cli    
  4204ae:	add    BYTE PTR [ebx+0x7e26a80d],0x6d
  4204b5:	sbb    al,0xc8
  4204b7:	in     eax,dx
  4204b8:	out    dx,al
  4204b9:	cmp    al,0x59
  4204bb:	cmp    DWORD PTR [ecx],ebp
  4204bd:	icebp  
  4204be:	scas   al,BYTE PTR es:[edi]
  4204bf:	popa   
  4204c0:	mov    ebp,0xce9eeaae
  4204c5:	(bad)  
  4204c6:	rcl    DWORD PTR ds:0x22d9c3b2,1
  4204cc:	jns    0x420507
  4204ce:	ror    BYTE PTR gs:[esi],1
  4204d1:	push   cs
  4204d2:	pushf  
  4204d3:	mov    cs,eax
  4204d5:	jo     0x420527
  4204d7:	add    eax,DWORD PTR [ebx-0x2e]
  4204da:	sar    DWORD PTR [ecx],0x9e
  4204dd:	cmp    bh,cl
  4204df:	loop   0x42053d
  4204e1:	imul   eax,DWORD PTR [ecx],0xffffffd8
  4204e4:	or     DWORD PTR [ebx],edx
  4204e6:	pop    ebp
  4204e7:	(bad)  
  4204e9:	rcl    DWORD PTR [edx-0x15addef6],1
  4204ef:	(bad)  
  4204f0:	cmp    BYTE PTR [esi],dl
  4204f2:	add    eax,0x4abc856
  4204f7:	test   dl,ch
  4204f9:	(bad)  {k6}{z}
  4204fe:	cmp    dl,bh
  420500:	repz mov ah,0x99
  420503:	push   eax
  420504:	arpl   WORD PTR [eax+eax*2],si
  420507:	xchg   dl,dh
  420509:	(bad)  [esp+ebx*1]
  42050c:	adc    BYTE PTR [esi],dl
  42050e:	test   al,0xaf
  420510:	push   ecx
  420511:	or     dh,al
  420513:	mov    al,ds:0xe1f32768
  420518:	xor    al,0x69
  42051a:	xor    DWORD PTR [eax+0x29],0xafcfa39e
  420521:	push   ecx
  420522:	gs test al,0xe6
  420525:	cmp    edx,0x20
  420528:	out    0x26,al
  42052a:	mov    ch,0xf0
  42052c:	xchg   edi,eax
  42052d:	or     eax,0xa4bb5fc3
  420532:	(bad)  [esi]
  420534:	sbb    edx,DWORD PTR [edx]
  420536:	dec    edx
  420537:	ret    0x150b
  42053a:	jge    0x420514
  42053c:	push   edx
  42053d:	mov    bl,0xc2
  42053f:	ret    0x5b72
  420542:	xor    BYTE PTR [esi-0x25b51133],dh
  420548:	ins    DWORD PTR es:[edi],dx
  420549:	add    al,0x38
  42054b:	inc    esi
  42054c:	pusha  
  42054d:	or     DWORD PTR [esi],edx
  42054f:	gs jmp 0x4205a9
  420552:	push   edx
  420553:	into   
  420554:	loope  0x4205c0
  420556:	int    0x8c
  420558:	adc    bh,bl
  42055a:	pop    edx
  42055b:	call   DWORD PTR [esi]
  42055d:	xor    BYTE PTR ds:0x519024d1,bl
  420563:	arpl   WORD PTR [eax],bx
  420565:	sub    eax,DWORD PTR [ebp+0x1cdbf18d]
  42056b:	scas   eax,DWORD PTR es:[edi]
  42056c:	adc    DWORD PTR [esi+0x3c],eax
  42056f:	loopne 0x42055c
  420571:	repz dec ecx
  420573:	xcrypt-cbc (bad)
  420574:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420575:	push   ecx
  420576:	adc    al,0xcf
  420578:	or     ebp,ecx
  42057a:	jp     0x4205f2
  42057c:	jmp    0x4205d3
  42057e:	xor    ch,BYTE PTR [edi]
  420580:	sbb    al,0xd4
  420582:	ror    BYTE PTR [edi+ebx*4+0x491e0ae],0xc
  42058a:	mov    ecx,eax
  42058c:	sbb    esi,esp
  42058e:	loopne 0x4205aa
  420590:	call   0xad49596f
  420595:	sub    bl,cl
  420597:	popa   
  420598:	mov    eax,ds:0x27f54770
  42059d:	outs   dx,BYTE PTR ds:[esi]
  42059e:	fsubr  QWORD PTR [ebp+edx*8-0x37f96291]
  4205a5:	jge    0x42060a
  4205a7:	adc    BYTE PTR [eax+0x363a5de1],bl
  4205ad:	xchg   ecx,eax
  4205ae:	pop    ebp
  4205af:	fst    DWORD PTR [edi+edi*4+0x7a]
  4205b4:	and    dh,cl
  4205b6:	stos   BYTE PTR es:[edi],al
  4205b7:	ins    DWORD PTR es:[edi],dx
  4205b8:	pop    ss
  4205b9:	sbb    al,0xe4
  4205bb:	aad    0x6f
  4205bd:	add    bl,ch
  4205bf:	xor    ecx,DWORD PTR [edx+0x7570dd31]
  4205c5:	cld    
  4205c6:	sahf   
  4205c7:	xchg   ebx,eax
  4205c8:	fisttp DWORD PTR [ebx-0x7c]
  4205cb:	out    0xc,eax
  4205cd:	jne    0x420575
  4205cf:	int    0xf1
  4205d1:	rcr    BYTE PTR [esi-0x10],0x1c
  4205d5:	lds    ebx,FWORD PTR [esp+eiz*4-0x20]
  4205d9:	cmp    al,0xba
  4205db:	mov    bh,0xc9
  4205dd:	in     eax,0x2e
  4205df:	or     eax,0xe1c837c6
  4205e4:	fwait
  4205e5:	das    
  4205e6:	bnd jns 0x420606
  4205e9:	or     ebp,DWORD PTR es:[eax]
  4205ec:	dec    ebp
  4205ed:	bound  edx,QWORD PTR [edi+0x373915d8]
  4205f3:	es xchg esi,eax
  4205f5:	fistp  WORD PTR [edi+edi*2-0x7e]
  4205f9:	das    
  4205fa:	jle    0x4205ed
  4205fc:	push   0xb2e87cd1
  420601:	xchg   ecx,ebx
  420603:	ror    ebx,0x53
  420606:	fwait
  420607:	inc    edi
  420608:	cmc    
  420609:	xchg   esp,eax
  42060a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42060b:	pop    esi
  42060c:	hlt    
  42060d:	dec    eax
  42060e:	add    BYTE PTR [ecx+0x56],al
  420611:	add    BYTE PTR [edx+0x58],ah
  420614:	cli    
  420615:	addr16 mov dh,0x11
  420618:	mov    ebx,0xfeb88bd6
  42061d:	add    BYTE PTR [ebp-0x78c97033],cl
  420623:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420625:	loope  0x42069c
  420627:	or     DWORD PTR [eax],eax
  420629:	inc    edi
  42062a:	jbe    0x42065a
  42062c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42062d:	sub    esi,DWORD PTR [ebp-0x11]
  420630:	in     eax,0x83
  420632:	cwde   
  420633:	ins    BYTE PTR es:[edi],dx
  420634:	data16 and al,0xb6
  420637:	out    dx,al
  420638:	fs dec ebp
  42063a:	dec    ecx
  42063b:	pop    eax
  42063c:	std    
  42063d:	mov    ebx,0x6109f36a
  420642:	pushf  
  420643:	sbb    DWORD PTR [ebp+0x10d43f59],ebx
  420649:	and    ah,BYTE PTR [edx]
  42064b:	sub    DWORD PTR [esp],0x4889edb5
  420652:	cdq    
  420653:	rol    BYTE PTR [ecx+0x2fee6376],1
  420659:	push   cs
  42065a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42065b:	aas    
  42065c:	call   0xf320:0xcf31f432
  420663:	popa   
  420664:	sti    
  420665:	fcom   DWORD PTR [ebx]
  420667:	jbe    0x4206a0
  420669:	push   esp
  42066a:	les    edx,FWORD PTR [ebp-0x3d]
  42066d:	mov    cl,0x99
  42066f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420670:	sbb    bl,ch
  420672:	jae    0x420686
  420674:	sbb    edx,edx
  420676:	add    eax,0xbf2f2c9a
  42067b:	xchg   edx,eax
  42067c:	adc    eax,0x955db1c6
  420681:	sbb    edx,DWORD PTR [ebx+edi*8+0x5a]
  420685:	mov    cl,0xae
  420687:	cs add ebx,0xffffffeb
  42068b:	dec    esp
  42068c:	and    DWORD PTR [edi],edi
  42068e:	cmp    eax,0x6082c67c
  420693:	sti    
  420694:	ja     0x4206ad
  420696:	pop    esp
  420697:	jecxz  0x420645
  420699:	sbb    eax,DWORD PTR cs:[ebp-0x2]
  42069d:	dec    ebx
  42069e:	dec    edx
  42069f:	cs into 
  4206a1:	add    BYTE PTR [ebx-0x24e2b7c3],cl
  4206a7:	aas    
  4206a8:	icebp  
  4206a9:	sbb    DWORD PTR [esi+ebx*4-0x5a],ebx
  4206ad:	outs   dx,DWORD PTR ds:[esi]
  4206ae:	std    
  4206af:	inc    edx
  4206b0:	pop    edi
  4206b1:	dec    ebp
  4206b2:	ss adc al,0xe
  4206b5:	dec    ebp
  4206b6:	bound  edi,QWORD PTR [eax]
  4206b8:	outs   dx,DWORD PTR ds:[esi]
  4206b9:	outs   dx,BYTE PTR ds:[esi]
  4206ba:	pop    ds
  4206bb:	rcl    DWORD PTR [edx+0x27],1
  4206be:	cmp    ch,BYTE PTR [ebx+0x65]
  4206c1:	jg     0x42065a
  4206c3:	mov    ebx,DWORD PTR [ecx-0x4f]
  4206c6:	arpl   di,sp
  4206c8:	xor    esi,edx
  4206ca:	push   esi
  4206cb:	sbb    ah,BYTE PTR [edx-0x48a71d35]
  4206d1:	cli    
  4206d2:	lds    esp,FWORD PTR [ebp+eax*2-0x79]
  4206d6:	cmp    DWORD PTR [ebp-0x34],edx
  4206d9:	pushf  
  4206da:	das    
  4206db:	lods   al,BYTE PTR ds:[esi]
  4206dc:	lea    ebp,[ebx+0x41]
  4206df:	inc    edx
  4206e0:	je     0x420680
  4206e2:	stos   BYTE PTR es:[edi],al
  4206e3:	xor    esi,DWORD PTR [edx+0x75eea66c]
  4206e9:	stos   DWORD PTR es:[edi],eax
  4206ea:	fdivr  DWORD PTR [esi-0x21]
  4206ed:	cmp    al,0x88
  4206ef:	les    ebx,FWORD PTR [esi+0x27]
  4206f2:	dec    esp
  4206f3:	or     DWORD PTR [ebx-0x3b],ecx
  4206f6:	jecxz  0x4206b2
  4206f8:	sub    eax,0x5cac4fa6
  4206fd:	xor    ah,BYTE PTR [ebp-0x14]
  420700:	pop    ss
  420701:	jb     0x4206b6
  420703:	(bad)  
  420704:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420705:	shr    BYTE PTR [ebp+0x2f4e76ab],1
  42070b:	repz fiadd DWORD PTR [ecx]
  42070e:	ss ins DWORD PTR es:[edi],dx
  420710:	cmp    DWORD PTR [edi],0x3d369313
  420716:	adc    esp,edi
  420718:	je     0x42076b
  42071a:	mov    edi,0x3c1b9563
  42071f:	mov    ah,0x68
  420721:	dec    esi
  420722:	dec    edx
  420723:	popa   
  420724:	jmp    0xa5bf33de
  420729:	adc    BYTE PTR [ebx-0x6d],ch
  42072c:	adc    cl,BYTE PTR [ebx+0x53ad9599]
  420732:	xor    BYTE PTR [ecx],bh
  420734:	xchg   ebx,eax
  420735:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420736:	mov    ds:0x7ff6ce88,eax
  42073b:	adc    al,0xd2
  42073d:	icebp  
  42073e:	sub    DWORD PTR [esi-0x13],edi
  420741:	jno    0x42073c
  420743:	mov    dh,0xb0
  420745:	out    0xa1,eax
  420747:	neg    DWORD PTR [edx-0x7e]
  42074a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42074b:	mov    bl,0x45
  42074d:	inc    edx
  42074e:	cmp    al,0xbd
  420750:	sti    
  420751:	hlt    
  420752:	jbe    0x420742
  420754:	(bad)  
  420756:	imul   eax,edx,0x21
  420759:	mov    edx,0xc60a0446
  42075e:	popa   
  42075f:	loop   0x4206f9
  420761:	dec    ebp
  420762:	xchg   esp,eax
  420763:	push   ss
  420764:	not    DWORD PTR [eax+ecx*4]
  420767:	idiv   BYTE PTR [edx+edi*8-0x14dbd56d]
  42076e:	addr16 sti 
  420770:	lock hlt 
  420772:	(bad)  
  420773:	xchg   ebp,eax
  420774:	call   0xcc2:0x34b2e485
  42077b:	mov    dh,0xe2
  42077d:	clc    
  42077e:	mov    bh,0xe1
  420780:	xchg   esp,eax
  420781:	xchg   ebx,eax
  420782:	enter  0x54ce,0x4f
  420786:	mov    dl,0x73
  420788:	cmp    dl,BYTE PTR [ecx-0x51]
  42078b:	pop    ds
  42078c:	jp     0x420730
  42078e:	sub    DWORD PTR ds:0xa26625d2,esi
  420794:	xor    eax,0x1961863
  420799:	dec    ebx
  42079a:	inc    ebp
  42079b:	or     ah,0x6d
  42079e:	lods   al,BYTE PTR ds:[esi]
  42079f:	pop    esp
  4207a0:	mov    ebp,0x17793f40
  4207a5:	fs xchg edi,eax
  4207a7:	test   al,0x71
  4207a9:	ret    
  4207aa:	mov    WORD PTR [eax+0x5ee459a5],gs
  4207b0:	enter  0x822a,0x36
  4207b4:	clc    
  4207b5:	sbb    esi,DWORD PTR [ecx-0x3e866bfa]
  4207bb:	xor    DWORD PTR [ecx+0x3],edi
  4207be:	retf   0x9558
  4207c1:	xor    edi,edx
  4207c3:	or     esi,ebp
  4207c5:	cwde   
  4207c6:	cli    
  4207c7:	fild   DWORD PTR [ecx+0x60]
  4207ca:	dec    esi
  4207cb:	xchg   ebx,eax
  4207cc:	inc    BYTE PTR [edi]
  4207ce:	jmp    0x4207c4
  4207d0:	test   DWORD PTR [ebx+edi*2],esi
  4207d3:	loopne 0x4207fe
  4207d5:	inc    esi
  4207d6:	in     al,0x50
  4207d8:	push   ebp
  4207d9:	add    al,0x53
  4207db:	test   BYTE PTR [eax],0x92
  4207de:	dec    edx
  4207df:	cs loopne 0x4207c4
  4207e2:	push   0xffffffc9
  4207e4:	push   ebp
  4207e5:	das    
  4207e6:	cmp    al,0x20
  4207e8:	shl    al,0xb9
  4207eb:	sub    eax,0x151dc340
  4207f0:	hlt    
  4207f1:	cmp    esp,esp
  4207f3:	jnp    0x4207ad
  4207f5:	int    0xe0
  4207f7:	mov    DWORD PTR [ebx],eax
  4207f9:	xchg   edx,eax
  4207fa:	scas   al,BYTE PTR es:[edi]
  4207fb:	scas   al,BYTE PTR es:[edi]
  4207fc:	cwde   
  4207fd:	outs   dx,DWORD PTR ds:[esi]
  4207fe:	push   0xffffffdc
  420800:	add    BYTE PTR [edx+edx*4],0x65
  420804:	adc    BYTE PTR [ebx],bl
  420806:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420807:	icebp  
  420808:	sub    cl,BYTE PTR [eax+esi*8]
  42080b:	adc    BYTE PTR [esi],al
  42080d:	(bad)  
  42080e:	mov    eax,0xf8bb5d81
  420813:	jb     0x4207c7
  420815:	mov    al,ds:0xa8cc8624
  42081a:	(bad)  
  42081b:	fst    DWORD PTR [edi+0x225575da]
  420821:	sti    
  420822:	out    dx,al
  420823:	es inc edx
  420825:	push   ebx
  420826:	sub    BYTE PTR [edx+0x41],bl
  420829:	xlat   BYTE PTR ds:[ebx]
  42082a:	std    
  42082b:	push   ebx
  42082c:	retf   0x4348
  42082f:	fidivr DWORD PTR [esi+ecx*2]
  420832:	xor    eax,0x6bd07266
  420837:	push   edi
  420838:	sub    bl,BYTE PTR [edi+0x69]
  42083b:	cli    
  42083c:	frstor [ecx+0x4ce2dad]
  420842:	imul   edx,DWORD PTR [eax],0x77
  420845:	sbb    ah,BYTE PTR [esp+ebx*1-0x47]
  420849:	je     0x42089c
  42084b:	push   edi
  42084c:	and    ah,BYTE PTR [ecx]
  42084e:	and    DWORD PTR [eax-0x77],esp
  420851:	shl    DWORD PTR [edx-0x5eced0db],0x23
  420858:	mov    esp,0x54abba47
  42085d:	fist   WORD PTR [edx+0x14]
  420860:	jmp    0x48a4:0x9022a4f4
  420867:	cs push esi
  420869:	pushf  
  42086a:	loop   0x42081a
  42086c:	popa   
  42086d:	sbb    edx,edi
  42086f:	shl    BYTE PTR [edx-0x6a],0x70
  420873:	xor    al,BYTE PTR [edx+0x38cb3edd]
  420879:	jl     0x4208d5
  42087b:	fidivr DWORD PTR [ecx]
  42087d:	lock call DWORD PTR [edi+0x4f30664c]
  420884:	push   esp
  420885:	xchg   ecx,eax
  420886:	sahf   
  420887:	imul   esi,DWORD PTR [esi-0x7a],0x90188ae5
  42088e:	mov    WORD PTR [eax+0x1f],es
  420891:	pop    ds
  420892:	(bad)  
  420893:	fcmovnbe st,st(5)
  420895:	inc    ecx
  420896:	inc    esp
  420897:	or     BYTE PTR [edi-0x7adc0910],dl
  42089d:	gs mov ah,0x23
  4208a0:	test   DWORD PTR [edi+0x35],eax
  4208a3:	cmp    eax,0xfd6dea6c
  4208a8:	add    edi,esi
  4208aa:	and    esi,ecx
  4208ac:	mov    ecx,0xd6bd47d1
  4208b1:	pop    ds
  4208b2:	jge    0x4208b7
  4208b4:	ds jns 0x4208a3
  4208b7:	mov    esi,0x923e5d63
  4208bc:	dec    ebp
  4208bd:	push   cs
  4208be:	sbb    ebx,edx
  4208c0:	nop
  4208c1:	out    dx,eax
  4208c2:	cmp    eax,0xdc7da485
  4208c7:	inc    edi
  4208c8:	xor    BYTE PTR [edi],al
  4208ca:	aam    0x2f
  4208cc:	dec    esi
  4208cd:	xor    BYTE PTR [eax+ebx*1-0x5c76297a],ch
  4208d4:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208d6:	retf   0x8a70
  4208d9:	test   BYTE PTR [ebp+0x77],al
  4208dc:	scas   eax,DWORD PTR es:[edi]
  4208dd:	add    eax,DWORD PTR [esi+esi*4+0x5fa90ac0]
  4208e4:	dec    esp
  4208e5:	addr16 jnp 0x420943
  4208e8:	dec    edx
  4208e9:	loopne 0x420968
  4208eb:	lock enter 0x298,0x60
  4208f0:	add    al,BYTE PTR [edx]
  4208f2:	mov    dl,0x90
  4208f4:	gs je  0x420898
  4208f7:	cmp    DWORD PTR [esi],ebp
  4208f9:	add    DWORD PTR [ebp+0x7f43df43],eax
  4208ff:	push   ds
  420900:	sbb    edi,esp
  420902:	test   eax,0x4ecd1f93
  420907:	push   ebx
  420908:	pop    ebx
  420909:	fldenv [esi]
  42090b:	mov    dl,0x3e
  42090d:	setne  BYTE PTR [ecx+0x4]
  420911:	mov    dl,0x88
  420913:	out    dx,eax
  420914:	call   0x7119:0xe32436b2
  42091b:	scas   eax,DWORD PTR es:[edi]
  42091c:	jo     0x42096b
  42091e:	xor    ebp,DWORD PTR [eax+0x4612252a]
  420924:	iret   
  420925:	retf   
  420926:	adc    dh,BYTE PTR [edi]
  420928:	das    
  420929:	push   ebx
  42092a:	mov    ch,BYTE PTR [ebx-0x42]
  42092d:	pop    es
  42092e:	mov    ebx,0xdb0f6400
  420933:	test   DWORD PTR [ecx+0x2],ebx
  420936:	and    al,0x9d
  420938:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420939:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42093a:	out    dx,al
  42093b:	or     eax,0x8d66c0b8
  420940:	jg     0x4208f9
  420942:	popf   
  420943:	lock lock adc BYTE PTR [edx+0x73029f97],0x3c
  42094c:	xchg   edi,eax
  42094d:	gs ins DWORD PTR es:[edi],dx
  42094f:	into   
  420950:	xchg   ah,dh
  420952:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420953:	add    eax,0x2222030c
  420958:	test   eax,0xa7eca907
  42095d:	aas    
  42095e:	js     0x420971
  420960:	pop    ss
  420961:	inc    ebp
  420962:	pop    ss
  420963:	mov    ds:0x3b018b1f,al
  420968:	mov    al,0xe2
  42096a:	pop    ebp
  42096b:	jmp    0x4209df
  42096d:	setno  bl
  420970:	mov    WORD PTR [ecx+ebp*8+0x67],es
  420974:	call   DWORD PTR [edx]
  420976:	and    eax,0xbfb28df9
  42097b:	mov    ebp,DWORD PTR [ecx-0x22]
  42097e:	fs sub eax,0xfb6969d3
  420984:	xchg   esi,eax
  420985:	sub    DWORD PTR [ebx+eiz*4+0x12],edi
  420989:	xor    ecx,esi
  42098b:	and    BYTE PTR [ecx+0x3b4652e4],dh
  420991:	pusha  
  420992:	aam    0xf7
  420994:	mov    bl,0x4e
  420996:	out    0x3f,al
  420998:	jecxz  0x42096b
  42099a:	jae    0x4209ea
  42099c:	inc    ecx
  42099d:	lock (bad) 
  42099f:	pop    esp
  4209a0:	lea    esp,[ebx+edx*2]
  4209a3:	and    eax,0xac8a2e8c
  4209a8:	cmc    
  4209a9:	ss sub al,0x34
  4209ac:	adc    eax,0x387a0b21
  4209b1:	mov    DWORD PTR [esi],edx
  4209b3:	jne    0x4209b4
  4209b5:	lods   al,BYTE PTR ds:[esi]
  4209b6:	fidivr WORD PTR [edx+0x79353960]
  4209bc:	shl    BYTE PTR [esi+0x11],1
  4209bf:	and    al,BYTE PTR [ebx-0x38]
  4209c2:	mov    ch,0xb8
  4209c4:	sbb    BYTE PTR [esi-0x5f75b84d],0x15
  4209cb:	outs   dx,DWORD PTR ds:[esi]
  4209cc:	addr16 sub al,0x82
  4209cf:	iret   
  4209d0:	push   ds
  4209d1:	out    0x15,eax
  4209d3:	xchg   esi,edi
  4209d5:	sbb    al,0x19
  4209d7:	xor    al,0x1b
  4209d9:	inc    eax
  4209da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209db:	mov    WORD PTR [ebp-0x547dfb2],?
  4209e1:	push   esi
  4209e2:	(bad)  [esi+0x71424ec2]
  4209e8:	xor    DWORD PTR [ecx+0x17],edx
  4209eb:	mov    al,0x56
  4209ed:	out    dx,al
  4209ee:	test   eax,0x6cadace3
  4209f3:	mov    eax,DWORD PTR ds:0x9bde56f2
  4209f9:	push   edx
  4209fa:	push   ds
  4209fb:	mov    bl,0x7a
  4209fd:	mov    ch,BYTE PTR [esp+edx*2]
  420a00:	loopne 0x420a63
  420a02:	pusha  
  420a03:	shl    esp,0x24
  420a06:	rol    BYTE PTR [esi+0x6e51ab9],cl
  420a0c:	popf   
  420a0d:	push   esi
  420a0e:	jns    0x4209a3
  420a10:	enter  0xc90,0x70
  420a14:	(bad)  
  420a15:	dec    esp
  420a16:	jns    0x4209ef
  420a18:	dec    bx
  420a1a:	out    dx,al
  420a1b:	mov    dl,0x7a
  420a1d:	push   eax
  420a1e:	aam    0xb0
  420a20:	clc    
  420a21:	fild   WORD PTR [edx]
  420a23:	inc    ecx
  420a24:	push   esp
  420a25:	fst    DWORD PTR [edi-0x1c]
  420a28:	int3   
  420a29:	sbb    ah,BYTE PTR [esi-0x3c]
  420a2c:	jecxz  0x420a2d
  420a2e:	adc    cl,BYTE PTR [edi+eax*1]
  420a31:	(bad)  
  420a32:	push   ebx
  420a33:	fs shr BYTE PTR fs:[edx+0x6f],cl
  420a38:	jp     0x420a8f
  420a3a:	xor    al,0xdb
  420a3c:	(bad)  
  420a3d:	iret   
  420a3e:	xchg   ecx,eax
  420a3f:	push   edx
  420a40:	inc    edi
  420a41:	sti    
  420a42:	adc    al,0x24
  420a44:	into   
  420a45:	mov    al,0x21
  420a47:	scas   eax,DWORD PTR es:[edi]
  420a48:	lahf   
  420a49:	stc    
  420a4a:	stos   BYTE PTR es:[edi],al
  420a4b:	xchg   edi,eax
  420a4c:	push   eax
  420a4d:	call   0x56ed:0x6e8a93c9
  420a54:	pop    ds
  420a55:	fld    DWORD PTR [ebx-0x40]
  420a58:	xor    al,0xef
  420a5a:	add    eax,0x6cef1410
  420a5f:	cld    
  420a60:	sbb    al,0xd2
  420a62:	les    edx,FWORD PTR [eax-0x38]
  420a65:	leave  
  420a66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a67:	adc    al,0x8f
  420a69:	push   eax
  420a6a:	push   ecx
  420a6b:	dec    edx
  420a6c:	mov    dl,0x62
  420a6e:	sbb    bh,BYTE PTR ds:0xee2642d0
  420a74:	les    ebp,FWORD PTR [ecx-0x55]
  420a77:	shl    ebp,cl
  420a79:	lods   eax,DWORD PTR ds:[esi]
  420a7a:	push   eax
  420a7b:	clc    
  420a7c:	stc    
  420a7d:	(bad)  
  420a7e:	jnp    0x420a56
  420a80:	(bad)  
  420a81:	sub    DWORD PTR [ecx],esp
  420a83:	sub    eax,0x50d1b51a
  420a88:	mov    ds:0xa7756d71,eax
  420a8d:	js     0x420a81
  420a8f:	retf   0x3076
  420a92:	push   ebx
  420a93:	inc    ebx
  420a94:	lea    edi,[ecx]
  420a96:	lock sbb edx,edi
  420a99:	dec    edi
  420a9b:	pop    esi
  420a9c:	retf   
  420a9d:	call   0xd989:0x4e987d9e
  420aa4:	push   0xacfb6a13
  420aa9:	imul   ebp,DWORD PTR [eax+0x6a78a7bf],0xffffffd4
  420ab0:	imul   edx,DWORD PTR [eax-0x54fd2603],0xffffffc0
  420ab7:	adc    ebp,ebp
  420ab9:	loop   0x420a77
  420abb:	test   eax,0x5f8d7a02
  420ac0:	fist   WORD PTR ds:0x47ba080
  420ac6:	ficomp DWORD PTR [ebp-0x523ad88f]
  420acc:	retf   
  420acd:	jmp    0x420ac9
  420acf:	adc    BYTE PTR [ecx-0x7b9af2f7],0x62
  420ad6:	mov    bl,0x2f
  420ad8:	repnz mov DWORD PTR [ebp+0x5a],eax
  420adc:	and    BYTE PTR [edx+0x2f],dh
  420adf:	jp     0x420b1f
  420ae1:	push   eax
  420ae2:	or     DWORD PTR [edx],esp
  420ae4:	or     bh,BYTE PTR [ebp+0x2d]
  420ae7:	dec    eax
  420ae8:	lahf   
  420ae9:	dec    esi
  420aea:	cli    
  420aeb:	out    0xd9,al
  420aed:	dec    edx
  420aee:	cwde   
  420aef:	(bad)  
  420af0:	mov    ah,bh
  420af2:	jno    0x420a93
  420af4:	xor    DWORD PTR [ebx+0x40],0x56564b6a
  420afb:	mov    dl,0xfa
  420afd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420afe:	mov    ds:0x1f0dbdf2,eax
  420b03:	ins    BYTE PTR es:[edi],dx
  420b04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b05:	daa    
  420b06:	cmp    al,0x16
  420b08:	cdq    
  420b09:	fs jmp 0x635:0xf893b638
  420b11:	xchg   edx,eax
  420b12:	gs aas 
  420b14:	gs loope 0x420b3d
  420b17:	dec    ecx
  420b18:	add    DWORD PTR [edi],edx
  420b1a:	repz inc edi
  420b1c:	sub    al,0x23
  420b1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b1f:	add    al,0x6f
  420b21:	loop   0x420b09
  420b23:	stos   DWORD PTR es:[edi],eax
  420b24:	xchg   ebx,eax
  420b25:	push   esp
  420b26:	dec    ebx
  420b27:	lock fisubr WORD PTR [edx+0x218d7e88]
  420b2e:	dec    eax
  420b2f:	mov    fs,WORD PTR [ebx-0x172a2a01]
  420b35:	repz jmp 0x4beb9821
  420b3b:	aad    0x6e
  420b3d:	sub    DWORD PTR [esi-0x35],ecx
  420b40:	test   DWORD PTR [ebp+0x4ac26652],esp
  420b46:	fmul   DWORD PTR [ebp+0x4d]
  420b49:	std    
  420b4a:	inc    ecx
  420b4b:	lock adc esp,DWORD PTR [eax+0x3877cdc5]
  420b52:	not    BYTE PTR [esp]
  420b55:	leave  
  420b56:	sbb    BYTE PTR [edi],ah
  420b58:	inc    eax
  420b59:	ret    
  420b5a:	out    0x1,eax
  420b5c:	mov    dl,bh
  420b5e:	(bad)
  420b63:	mov    ?,WORD PTR [edx+0x39bd925e]
  420b69:	jmp    0x3c84:0x9144122b
  420b70:	loop   0x420bdb
  420b72:	sbb    edx,DWORD PTR [edx+0x5c]
  420b75:	xor    esi,DWORD PTR [eax+0x179e2890]
  420b7b:	div    DWORD PTR [eax+0x19]
  420b7e:	cmc    
  420b7f:	in     eax,0x5b
  420b81:	mov    esp,0x659b3420
  420b86:	sbb    al,BYTE PTR [esi-0x6b]
  420b89:	mov    al,0x49
  420b8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b8c:	xchg   ecx,eax
  420b8d:	cli    
  420b8e:	add    DWORD PTR [ebp+0x4c],esi
  420b91:	nop
  420b92:	inc    esp
  420b93:	mov    eax,ds:0x51d70d11
  420b98:	call   0x6d02d2d
  420b9d:	inc    edi
  420b9e:	jmp    0x182a3dd7
  420ba3:	xor    edi,eax
  420ba5:	sti    
  420ba6:	jne    0x420bb0
  420ba8:	push   es
  420ba9:	sbb    eax,0x7402c908
  420bae:	pop    ds
  420baf:	or     BYTE PTR [edi+0x65483653],ah
  420bb5:	mov    edx,DWORD PTR [esi-0x1e]
  420bb8:	or     eax,0x28ad1583
  420bbd:	dec    ecx
  420bbe:	pusha  
  420bbf:	dec    edi
  420bc0:	mov    dl,0x0
  420bc2:	cmp    ebp,edi
  420bc4:	jmp    0xd9f9b51d
  420bc9:	popa   
  420bca:	mov    al,BYTE PTR [edx]
  420bcc:	pusha  
  420bcd:	mov    dl,0xc0
  420bcf:	sahf   
  420bd0:	mov    DWORD PTR [esp+edx*2],esp
  420bd3:	pop    es
  420bd4:	lds    esp,FWORD PTR [ebp+0x7c7bb23c]
  420bda:	xchg   esi,eax
  420bdb:	stos   DWORD PTR es:[edi],eax
  420bdc:	adc    DWORD PTR [ebx*8+0x609374ff],esp
  420be3:	js     0x420bb9
  420be5:	aaa    
  420be6:	push   ecx
  420be7:	lods   eax,DWORD PTR ds:[esi]
  420be8:	pusha  
  420be9:	enter  0x5d4f,0x6d
  420bed:	pop    edx
  420bee:	outs   dx,BYTE PTR ds:[esi]
  420bef:	push   0xffffffd6
  420bf1:	adc    dl,BYTE PTR [edx+0x695df000]
  420bf7:	xchg   esi,eax
  420bf8:	inc    esp
  420bf9:	mov    edx,DWORD PTR [edi+ebp*8+0x6649ed8c]
  420c00:	fwait
  420c01:	jmp    0x420bdb
  420c03:	fld    st(5)
  420c05:	gs mov ecx,0xc5c132d
  420c0b:	ja     0x420bbc
  420c0d:	pop    edi
  420c0e:	jge    0x420c7b
  420c10:	inc    ebx
  420c11:	xor    dh,BYTE PTR [ebp-0x701aeff5]
  420c17:	add    ebx,eax
  420c19:	and    al,0xc5
  420c1b:	dec    ebp
  420c1c:	xchg   ebp,eax
  420c1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c1e:	lds    ebp,FWORD PTR [esi+0x6c]
  420c21:	shr    DWORD PTR [edx+0x5498b3ce],1
  420c27:	or     dl,BYTE PTR [edx]
  420c29:	jl     0x420c64
  420c2b:	add    eax,0x6dda6127
  420c30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c31:	xchg   edx,eax
  420c32:	jns    0x420ca0
  420c34:	cld    
  420c35:	jmp    0x36c1f139
  420c3a:	out    dx,eax
  420c3b:	mov    BYTE PTR [eax+0x1aaf39af],cl
  420c41:	push   ds
  420c42:	lahf   
  420c43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c44:	mov    ds,ecx
  420c46:	div    DWORD PTR [edx+0x6b]
  420c49:	into   
  420c4a:	fbstp  TBYTE PTR [ebp-0x7f8c0f77]
  420c50:	aam    0x98
  420c52:	iret   
  420c53:	and    cl,BYTE PTR [esi-0x68e272b2]
  420c59:	lea    edx,[ebx+0x4cca74c6]
  420c5f:	sti    
  420c60:	(bad)  
  420c61:	sub    eax,0xfc65727c
  420c66:	test   eax,0xbfec81a2
  420c6b:	and    BYTE PTR [esp+esi*1+0x73188b11],0x0
  420c73:	or     eax,ebx
  420c75:	addr16 jns 0x420cd4
  420c78:	or     BYTE PTR [edi],al
  420c7a:	fdiv   QWORD PTR [edi-0x61]
  420c7d:	mov    esp,0x16d703c3
  420c82:	push   ds
  420c83:	xchg   ebx,eax
  420c84:	imul   ebp,DWORD PTR [esi+0x6c518b8f],0x53
  420c8b:	xor    BYTE PTR [ecx-0x13],0xc7
  420c8f:	jo     0x420cbf
  420c91:	rcl    edi,1
  420c93:	cmp    ch,BYTE PTR [ebx-0xe]
  420c96:	mov    edi,0xfa6dddd8
  420c9b:	add    ch,BYTE PTR [ebx]
  420c9d:	add    eax,0xe8432633
  420ca2:	cmp    eax,0x2e4be203
  420ca7:	jmp    0xe52b6894
  420cac:	add    BYTE PTR [eax],dl
  420cae:	jmp    0x6d23:0x5284cf9
  420cb5:	clc    
  420cb6:	mov    esp,0x9c1ea979
  420cbb:	push   ecx
  420cbc:	push   es
  420cbd:	inc    ecx
  420cbe:	inc    edx
  420cbf:	stc    
  420cc0:	repnz sbb ah,BYTE PTR [edi-0x37]
  420cc4:	pop    ebp
  420cc5:	in     eax,0xc7
  420cc7:	or     ebp,edx
  420cc9:	lock push edx
  420ccb:	ret    
  420ccc:	inc    edi
  420ccd:	in     eax,dx
  420cce:	pop    ebp
  420ccf:	xchg   BYTE PTR [ebp-0x5ff4477f],ch
  420cd5:	ins    DWORD PTR es:[edi],dx
  420cd6:	out    dx,al
  420cd7:	lods   al,BYTE PTR ds:[esi]
  420cd8:	aas    
  420cd9:	dec    eax
  420cda:	dec    eax
  420cdb:	leave  
  420cdc:	or     ecx,DWORD PTR [ebx+0x17]
  420cdf:	popa   
  420ce0:	stc    
  420ce1:	shl    DWORD PTR [eax],cl
  420ce3:	mov    esp,0xf2bb2802
  420ce8:	xlat   BYTE PTR ds:[ebx]
  420ce9:	loope  0x420c79
  420ceb:	out    0x29,eax
  420ced:	call   0x88c46afd
  420cf2:	sbb    eax,0x2b3f51f9
  420cf7:	sub    esi,0xffffffa3
  420cfa:	xadd   DWORD PTR [eax-0x785cbb4c],ebx
  420d01:	adc    eax,DWORD PTR [eax]
  420d03:	sbb    edi,ebx
  420d05:	daa    
  420d06:	enter  0x2a09,0x53
  420d0a:	cld    
  420d0b:	jo     0x420ca7
  420d0d:	mov    BYTE PTR [ebp+ecx*2+0x62109ac6],ah
  420d14:	sti    
  420d15:	daa    
  420d16:	lds    esp,FWORD PTR [ecx+eax*2]
  420d19:	jmp    0x1242:0x30d1337c
  420d20:	into   
  420d21:	sbb    esp,eax
  420d23:	sub    ebp,ebp
  420d25:	mov    cl,0xdf
  420d27:	sub    eax,0xaa64d975
  420d2c:	sub    DWORD PTR [esp+edi*8+0x14],ebx
  420d30:	and    DWORD PTR [edx-0x80],ebp
  420d33:	pop    ecx
  420d34:	call   0x79dc:0xbb7d358d
  420d3b:	ret    
  420d3c:	pop    edx
  420d3d:	lds    esi,FWORD PTR [esi+0x48]
  420d40:	sbb    DWORD PTR [si+0x2d],esi
  420d44:	add    edi,DWORD PTR [ebx+0x1]
  420d47:	loopne 0x420dbf
  420d49:	in     eax,0x3d
  420d4b:	pop    ebp
  420d4c:	in     al,0x39
  420d4e:	in     eax,0x79
  420d50:	ret    0x581b
  420d53:	cmc    
  420d54:	int    0x79
  420d56:	sub    eax,0x1b23a2c9
  420d5b:	xchg   edx,eax
  420d5c:	in     al,0xf7
  420d5e:	int    0x1c
  420d60:	jne    0x420da3
  420d62:	or     eax,0x1bbb56ba
  420d67:	push   es
  420d68:	or     esp,eax
  420d6a:	test   DWORD PTR [edx-0x1f],esp
  420d6d:	jmp    0x420dc7
  420d6f:	lods   al,BYTE PTR ds:[esi]
  420d70:	push   ds
  420d71:	jns    0x420d4a
  420d73:	mov    ds:0x240ee718,al
  420d78:	in     eax,0xb1
  420d7a:	jmp    0x420da3
  420d7c:	or     ebx,DWORD PTR [edi+ebp*2]
  420d7f:	mov    esi,0x1978b780
  420d84:	cdq    
  420d85:	outs   dx,DWORD PTR ds:[si]
  420d87:	je     0x420d67
  420d89:	loop   0x420d38
  420d8b:	jge    0x420e06
  420d8d:	out    0xdd,al
  420d8f:	int3   
  420d90:	jae    0x420d34
  420d92:	sahf   
  420d93:	jae    0x420d6f
  420d95:	loop   0x420e00
  420d97:	jb     0x420d4f
  420d99:	pop    edx
  420d9a:	pop    ebp
  420d9b:	mov    ecx,0x552658e8
  420da0:	jmp    0x8f6f064c
  420da5:	popa   
  420da6:	xor    BYTE PTR [eax+0x3bbb822a],ah
  420dac:	int    0xba
  420dae:	jne    0x420e22
  420db0:	add    ah,BYTE PTR [esi-0x4c9ed340]
  420db6:	adc    edx,ebx
  420db8:	push   0x49
  420dba:	push   edi
  420dbb:	mov    al,ds:0x22458956
  420dc0:	xor    bl,BYTE PTR ss:[esi]
  420dc3:	call   0xa308:0x484b45db
  420dca:	sbb    ah,0xcf
  420dcd:	nop
  420dce:	dec    edx
  420dcf:	(bad)  
  420dd0:	iret   
  420dd1:	mov    ecx,0x3c32278
  420dd6:	and    ebp,esi
  420dd8:	sbb    eax,DWORD PTR es:[ebx]
  420ddb:	xlat   BYTE PTR ds:[ebx]
  420ddc:	jb     0x420e37
  420dde:	jns    0x23886c8b
  420de4:	jo     0x420dd1
  420de6:	xor    al,ah
  420de8:	pop    ecx
  420de9:	mov    edx,0x9eceb50c
  420dee:	xor    ebx,DWORD PTR [ebp-0xe855693]
  420df4:	fiadd  DWORD PTR [edx-0x5c99e342]
  420dfa:	inc    ebx
  420dfb:	xchg   ecx,eax
  420dfc:	sub    eax,0x2e2711f0
  420e01:	mov    eax,0x258d7baa
  420e06:	sub    eax,0xdb0f6426
  420e0b:	xor    edi,DWORD PTR ds:0x93083c4
  420e11:	das    
  420e12:	jnp    0x420e27
  420e14:	in     al,dx
  420e15:	push   edx
  420e16:	call   0x52c9aca9
  420e1b:	shl    DWORD PTR [ebp+0x1c80ffe7],1
  420e21:	imul   DWORD PTR cs:[edi+0x79]
  420e25:	push   ds
  420e26:	add    al,0x9b
  420e28:	pop    edx
  420e29:	push   edx
  420e2a:	jp     0x420db0
  420e2c:	or     al,BYTE PTR [esi]
  420e2e:	push   ecx
  420e2f:	(bad)
  420e33:	or     eax,0x4aec0c61
  420e38:	or     al,0x3
  420e3a:	jbe    0x420e2e
  420e3c:	mov    ecx,DWORD PTR [esi]
  420e3e:	out    dx,al
  420e3f:	push   esp
  420e40:	push   0xd6758146
  420e45:	pop    es
  420e46:	fdivr  st(4),st
  420e48:	daa    
  420e49:	xchg   edi,eax
  420e4a:	pop    es
  420e4b:	cmp    ebx,DWORD PTR [edi+0x40080d8a]
  420e51:	js     0x420e06
  420e53:	addr16 out 0x22,al
  420e56:	xacquire xchg DWORD PTR [eax+0x14a52091],ebp
  420e5d:	add    BYTE PTR ds:0xfe611d40,ch
  420e63:	ds loope 0x420e16
  420e66:	cwde   
  420e67:	imul   ecx,DWORD PTR [eax-0x25],0x5088817b
  420e6e:	sub    DWORD PTR [esi+0x42],ebx
  420e71:	aaa    
  420e72:	xchg   edi,eax
  420e73:	shl    DWORD PTR [esi-0x7825d7de],1
  420e79:	cwde   
  420e7a:	mov    ds:0xb13f8fd0,eax
  420e7f:	dec    ecx
  420e80:	jle    0x420e0e
  420e82:	retf   0xaa9f
  420e85:	repnz cwde 
  420e87:	cmovno ebp,DWORD PTR [ebx]
  420e8a:	mov    esp,0xe9f94185
  420e8f:	popf   
  420e90:	sbb    ebx,ecx
  420e92:	sub    ebp,esi
  420e94:	mov    ebx,0xfea91cb1
  420e99:	xchg   ebp,eax
  420e9a:	sub    eax,ebx
  420e9c:	cld    
  420e9d:	cmp    BYTE PTR [ebp-0x3b],dl
  420ea0:	(bad)  [edx]
  420ea2:	push   ss
  420ea3:	sar    DWORD PTR [esi+ecx*8],0xef
  420ea7:	rcr    BYTE PTR [edi-0x59ec595],cl
  420ead:	nop
  420eae:	lds    esi,FWORD PTR [ebx-0x12151a7]
  420eb4:	inc    ebp
  420eb5:	or     dh,BYTE PTR [ecx+0x6e716ef]
  420ebb:	mov    dh,0xc
  420ebd:	stc    
  420ebe:	adc    BYTE PTR [edi],bl
  420ec0:	xchg   ebp,eax
  420ec1:	mov    al,ds:0x1213e41c
  420ec6:	mov    ds:0x22d2753e,al
  420ecb:	or     ch,dl
  420ecd:	push   cs
  420ece:	rcl    BYTE PTR [ecx],cl
  420ed0:	in     al,0x5d
  420ed2:	(bad)  
  420ed3:	xor    eax,0xe29fe87e
  420ed8:	(bad)  
  420ed9:	fisttp DWORD PTR [eax]
  420edb:	iret   
  420edc:	hlt    
  420edd:	mov    DWORD PTR [edx-0x5a],edx
  420ee0:	retf   
  420ee1:	mov    esi,0xfe49f06b
  420ee6:	ins    DWORD PTR es:[edi],dx
  420ee7:	imul   ecx,DWORD PTR [ebp-0x12],0xffffffe9
  420eeb:	add    al,0x5a
  420eed:	jns    0x420ec0
  420eef:	add    dh,BYTE PTR [edi+ebp*1]
  420ef2:	sub    eax,DWORD PTR ds:0x85d332f5
  420ef8:	push   esi
  420ef9:	retf   
  420efa:	mov    esi,ds
  420efc:	repnz add eax,0x7a59d5d
  420f02:	cmp    DWORD PTR [esi+0x1],eax
  420f05:	in     eax,0xe
  420f07:	xchg   edi,eax
  420f08:	iret   
  420f09:	pop    esp
  420f0a:	or     eax,0x287ecc27
  420f0f:	xchg   BYTE PTR [edx+0x8],bl
  420f12:	clc    
  420f13:	add    DWORD PTR ds:0xa80f12c8,edx
  420f19:	je     0x420eaa
  420f1b:	stos   DWORD PTR es:[edi],eax
  420f1c:	sub    al,0xba
  420f1e:	sbb    bl,BYTE PTR [ebx-0x3ff192e2]
  420f24:	dec    ecx
  420f25:	sti    
  420f26:	jl     0x420ef8
  420f28:	jl     0x420f90
  420f2a:	inc    BYTE PTR [edi-0x342a06d6]
  420f30:	adc    BYTE PTR [ebx-0x31],0x9b
  420f34:	call   DWORD PTR [ebp+0x72dbddef]
  420f3a:	cwde   
  420f3b:	nop
  420f3c:	sbb    al,0xea
  420f3e:	inc    esp
  420f3f:	ins    BYTE PTR es:[edi],dx
  420f40:	dec    DWORD PTR [ecx-0x201d8d36]
  420f46:	bsr    ebx,DWORD PTR [edx+eax*2+0x204e2509]
  420f4e:	jb     0x420f2f
  420f50:	sub    dl,BYTE PTR [ecx+0xf]
  420f53:	rol    DWORD PTR [edi-0x26be09c9],1
  420f59:	out    dx,al
  420f5a:	in     eax,0x4a
  420f5c:	popa   
  420f5d:	sub    ecx,esi
  420f5f:	ret    0x47b
  420f62:	jae    0x420fdc
  420f64:	ror    DWORD PTR [esi],1
  420f66:	cmp    al,0x6a
  420f68:	shl    BYTE PTR [edx-0x5b],0x81
  420f6c:	shl    BYTE PTR [edx+0x34],cl
  420f6f:	lahf   
  420f70:	xor    BYTE PTR [esi+0x36cfdf72],al
  420f76:	or     al,0x6f
  420f78:	and    DWORD PTR [edx-0x31a5de51],0xffffffe7
  420f7f:	add    ecx,DWORD PTR [ebx]
  420f81:	(bad)  
  420f82:	aam    0xdd
  420f84:	int3   
  420f85:	pop    esp
  420f86:	out    dx,eax
  420f87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f88:	je     0x420f13
  420f8a:	fnstenv [ebx]
  420f8c:	jle    0x420f1e
  420f8e:	push   eax
  420f8f:	and    esi,DWORD PTR [edi]
  420f91:	xchg   edx,eax
  420f92:	pop    es
  420f93:	and    al,dh
  420f95:	push   ecx
  420f96:	add    BYTE PTR [ecx+0x7eb3094f],0x37
  420f9d:	xor    al,0x57
  420f9f:	hlt    
  420fa0:	lock mov ecx,eax
  420fa3:	call   0xffd34950
  420fa8:	es inc ebp
  420faa:	mov    cl,0x7b
  420fac:	xor    ebx,DWORD PTR [edx-0x46ba2a08]
  420fb2:	ficom  WORD PTR [edx+0x2fbf9a5c]
  420fb8:	test   BYTE PTR [eax+0x2f],dh
  420fbb:	(bad)  
  420fbc:	in     eax,0x86
  420fbe:	rcr    BYTE PTR [ebx+ebp*4+0x2ff299d7],1
  420fc5:	inc    edx
  420fc6:	dec    esi
  420fc7:	or     esp,ebx
  420fc9:	cmp    al,0x41
  420fcb:	shl    DWORD PTR [ebx],1
  420fcd:	adc    DWORD PTR [ecx-0x25f5c8bb],eax
  420fd3:	mov    dh,0xd5
  420fd5:	pop    esp
  420fd6:	pop    edx
  420fd7:	sbb    eax,esp
  420fd9:	clc    
  420fda:	xchg   ebp,eax
  420fdb:	dec    BYTE PTR ds:0x42f4ee7f
  420fe1:	pusha  
  420fe2:	test   BYTE PTR [esi+0xd579573],0xeb
  420fe9:	add    BYTE PTR [edx-0x40],ch
  420fec:	or     DWORD PTR [eax],0xe45782e2
  420ff2:	ret    
  420ff3:	and    al,0x59
  420ff5:	fcom   DWORD PTR [esi]
  420ff7:	or     bl,dl
  420ff9:	push   es
  420ffa:	mov    ah,0xf9
  420ffc:	call   0x2bdf684d
  421001:	adc    eax,0xfaf4c0fd
  421006:	push   esp
  421007:	test   DWORD PTR [ebp-0x57864302],0xf655941a
  421011:	neg    BYTE PTR [ecx]
  421013:	dec    edi
  421014:	ret    
  421015:	icebp  
  421016:	push   es
  421017:	and    eax,0x80b6e924
  42101c:	aas    
  42101d:	rcr    DWORD PTR [ecx+0x78bd2d6c],1
  421023:	or     al,0xaa
  421025:	add    DWORD PTR [ecx],esi
  421027:	nop
  421028:	add    BYTE PTR [esi+0x42],0x59
  42102c:	xor    eax,0x1f319ff9
  421031:	lods   eax,DWORD PTR ds:[esi]
  421032:	sub    bl,dl
  421034:	sbb    edx,DWORD PTR [ecx]
  421036:	cli    
  421037:	xchg   ecx,eax
  421038:	ret    
  421039:	cli    
  42103a:	retf   
  42103b:	or     esp,DWORD PTR [eax-0x24]
  42103e:	mov    esp,0x483eeea1
  421043:	cli    
  421044:	jne    0x420fe1
  421046:	loope  0x420ff9
  421048:	jmp    0x420fca
  42104a:	push   0x60ea5369
  42104f:	xchg   ebx,eax
  421050:	pop    esp
  421051:	imul   edx,ebx,0xa19f0b8b
  421057:	sub    esp,0x72
  42105a:	popf   
  42105b:	scas   eax,DWORD PTR es:[edi]
  42105c:	outs   dx,BYTE PTR ds:[esi]
  42105d:	add    BYTE PTR [eax],cl
  42105f:	pusha  
  421060:	or     eax,0xc38081c2
  421065:	mov    cl,0xa1
  421067:	or     bl,BYTE PTR [esi]
  421069:	pop    esi
  42106a:	(bad)  
  42106b:	push   ds
  42106c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42106d:	dec    edx
  42106e:	daa    
  42106f:	into   
  421070:	aas    
  421071:	fnsave [ebx+0x43635094]
  421077:	arpl   di,bp
  421079:	test   eax,0x53fe453e
  42107e:	sahf   
  42107f:	add    DWORD PTR [esi],0xffffff93
  421082:	sub    al,0x8c
  421084:	xchg   DWORD PTR [esi+0x20],edx
  421087:	push   eax
  421088:	shl    DWORD PTR [edx-0x6ae4a35],cl
  42108e:	jmp    0x5b7d:0xdc4ee651
  421095:	mov    DWORD PTR [esi],edx
  421097:	repnz daa 
  421099:	inc    edi
  42109a:	pop    esp
  42109b:	sbb    al,0xff
  42109d:	mov    ch,0x4e
  42109f:	cs shl ah,1
  4210a2:	(bad)  
  4210a3:	cmp    ebx,DWORD PTR gs:[ecx-0x65df98bf]
  4210aa:	pop    ecx
  4210ab:	xchg   ecx,eax
  4210ac:	push   esi
  4210ad:	sub    DWORD PTR [edx+0x39],0xb9296299
  4210b4:	mov    esi,ebx
  4210b6:	bsr    ebx,esi
  4210b9:	cmp    eax,0xe001251b
  4210be:	fdivr  st,st(3)
  4210c0:	adc    BYTE PTR [edi-0xd22ded1],dl
  4210c6:	mov    esp,0x5cf42094
  4210cb:	mov    cl,0xa1
  4210cd:	std    
  4210ce:	imul   BYTE PTR [esi+ebx*2-0x69]
  4210d2:	push   esp
  4210d3:	ja     0x4210ba
  4210d5:	xlat   BYTE PTR ds:[ebx]
  4210d6:	ret    0x416f
  4210d9:	mov    eax,ds:0xffab588b
  4210de:	(bad)  
  4210df:	cmp    dl,bl
  4210e1:	aad    0x54
  4210e3:	bound  edi,QWORD PTR [ecx]
  4210e5:	xor    esi,ebp
  4210e7:	xor    DWORD PTR [ecx],esp
  4210e9:	mov    ds:0xc49e73fe,eax
  4210ee:	mov    edi,0x42f79aa0
  4210f3:	add    esi,DWORD PTR [ebp+0x723be024]
  4210f9:	stc    
  4210fa:	xchg   ebx,eax
  4210fb:	dec    esi
  4210fc:	xor    al,0x8f
  4210fe:	or     eax,0xac17310
  421103:	call   0x1ff6bc53
  421108:	jbe    0x421165
  42110a:	sbb    eax,0x69ef3f80
  42110f:	jnp    0x4210c3
  421111:	cmp    DWORD PTR [edi-0x4430f448],esi
  421117:	push   edi
  421118:	mov    fs,eax
  42111a:	adc    dh,BYTE PTR [ecx+0x26e4cf77]
  421120:	mov    BYTE PTR [esi-0x77b69755],0xd9
  421127:	das    
  421128:	cld    
  421129:	repz add al,0x8f
  42112d:	xchg   edi,eax
  42112e:	fisubr DWORD PTR [edx]
  421130:	retf   0xf7df
  421133:	call   0x1189:0xd703398b
  42113a:	mov    ecx,DWORD PTR [ebp+0x8]
  42113d:	xor    ecx,eax
  42113f:	add    ecx,esi
  421141:	jne    0x41ed92
  421147:	mov    ecx,DWORD PTR [ebp-0x8]
  42114a:	xor    ecx,eax
  42114c:	mov    eax,DWORD PTR [ebp+0x10]
  42114f:	add    ecx,esi
  421151:	mov    DWORD PTR [eax],ecx
  421153:	pop    edi
  421154:	pop    esi
  421155:	pop    ebx
  421156:	leave  
  421157:	ret    0xc
  42115a:	pop    ss
  42115b:	or     al,0x84
  42115d:	repz lahf 
  42115f:	sti    
  421160:	ja     0x42114e
  421162:	stos   BYTE PTR es:[edi],al
  421163:	mov    edx,0x4af788e2
  421168:	fisubr WORD PTR [ecx]
  42116a:	cmp    eax,0x610001cc
  42116f:	add    BYTE PTR [eax],al
  421171:	add    BYTE PTR [ecx],ah
  421173:	jbe    0x42114d
  421175:	mov    bh,0x4e
  421177:	(bad)  
  421178:	lds    ebp,FWORD PTR [esi+0x1370b30]
  42117e:	or     ah,BYTE PTR [edx+0x24]
  421181:	pop    ebp
  421182:	jb     0x42119f
  421184:	stos   DWORD PTR es:[edi],eax
  421185:	int    0xf6
  421187:	ja     0x4211d1
  421189:	arpl   WORD PTR [esi+0x23],dx
  42118c:	sbb    al,0x92
  42118e:	and    DWORD PTR [edi+0x45],edi
  421191:	mov    bl,0xd
  421193:	mov    ebp,0x4070240e
  421198:	fwait
  421199:	aad    0xaf
  42119b:	das    
  42119c:	or     BYTE PTR [edi-0xec5b0d3],0xd0
  4211a3:	sub    edi,DWORD PTR [edi-0x1a]
  4211a6:	add    BYTE PTR [ebx+0xcc63a17],cl
  4211ac:	data16 xor al,0x79
  4211af:	mov    DWORD PTR ss:[ebx-0x3e],esp
  4211b3:	leave  
  4211b4:	dec    BYTE PTR [ebp-0x56]
  4211b7:	jg     0x4211db
  4211b9:	stc    
  4211ba:	or     DWORD PTR [esi-0x80],esi
  4211bd:	xor    cl,BYTE PTR [edx]
  4211bf:	and    al,0xdf
  4211c1:	test   eax,0x370bf0a3
  4211c6:	jl     0x421157
  4211c8:	dec    edi
  4211c9:	fucom  st(5)
  4211cb:	out    dx,eax
  4211cc:	mov    esi,0x2b41312b
  4211d1:	int    0x69
  4211d3:	add    BYTE PTR [eax],al
  4211d5:	add    BYTE PTR [eax],al
  4211d7:	add    BYTE PTR [eax],al
  4211d9:	add    cl,dl
  4211db:	sub    al,0x14
  4211dd:	adc    edi,ebp
  4211df:	cmp    edx,edi
  4211e1:	out    dx,al
  4211e2:	pop    edi
  4211e3:	xchg   bx,ax
  4211e5:	push   0xbb4a624
  4211ea:	sahf   
  4211eb:	int3   
  4211ec:	add    DWORD PTR [eax],eax
  4211ee:	popa   
  4211ef:	add    BYTE PTR [eax],al
  4211f1:	add    BYTE PTR [esi+0xa],bh
  4211f4:	mov    esp,0x5e28399
  4211f9:	fwait
  4211fa:	sbb    eax,0xc7b64005
  4211ff:	xor    esp,ebp
  421201:	sbb    al,BYTE PTR [eax]
  421203:	adc    esi,DWORD PTR [ebp-0x1b]
  421206:	pushf  
  421207:	jecxz  0x421286
  421209:	sub    bh,dh
  42120b:	xchg   ebx,eax
  42120c:	push   eax
  42120d:	pop    ecx
  42120e:	xor    eax,0xb5fe0067
  421213:	mov    ds:0xbbec93a3,al
  421218:	lahf   
  421219:	shr    ebp,1
  42121b:	leave  
  42121c:	enter  0x2daf,0xa3
  421220:	jge    0x4211af
  421222:	push   es
  421223:	jne    0x421232
  421225:	xor    BYTE PTR [edi-0x63905c51],0x51
  42122c:	mov    cl,0x32
  42122e:	pop    esi
  42122f:	inc    edi
  421230:	je     0x4211b5
  421232:	jle    0x4211f4
  421234:	add    cl,dh
  421236:	and    BYTE PTR [ecx],dl
  421238:	inc    edx
  421239:	loop   0x4211cc
  42123b:	cld    
  42123c:	push   cs
  42123d:	add    DWORD PTR [ecx-0x2f],0xed06df95
  421244:	dec    eax
  421245:	mov    edx,DWORD PTR [edi+0x5c]
  421248:	or     bl,BYTE PTR [edx]
  42124a:	mov    gs,WORD PTR [eax-0x35]
  42124d:	sbb    BYTE PTR [esi-0x437af6c6],cl
  421253:	add    BYTE PTR [eax],al
  421255:	add    BYTE PTR [eax],al
  421257:	add    BYTE PTR [eax],al
  421259:	add    BYTE PTR [edi],bl
  42125b:	sub    esp,DWORD PTR [eax-0x60404bc1]
  421261:	sub    eax,esi
  421263:	add    BYTE PTR [edi+eax*2-0x25ce61ae],0xff
  42126b:	int3   
  42126c:	add    DWORD PTR [eax],eax
  42126e:	popa   
  42126f:	add    BYTE PTR [eax],al
  421271:	add    BYTE PTR [edi],dl
  421273:	call   0xd757:0x7b41a9f3
  42127a:	jmp    0x124e:0xf4a44774
  421281:	mov    edx,0x1091b43c
  421286:	pop    es
  421287:	dec    esi
  421288:	lds    eax,FWORD PTR ds:0xa7db0767
  42128e:	sti    
  42128f:	test   BYTE PTR [esi+0x7a],ah
  421292:	push   ebx
  421293:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421294:	mov    eax,0x72bfd5fc
  421299:	lahf   
  42129a:	sbb    BYTE PTR [ecx+0x6c],ch
  42129d:	cld    
  42129e:	push   ebx
  42129f:	push   ds
  4212a0:	mov    bl,ch
  4212a2:	das    
  4212a3:	jbe    0x421243
  4212a5:	inc    edi
  4212a6:	data16 sahf 
  4212a8:	sbb    eax,0x64484690
  4212ad:	adc    BYTE PTR [ebx-0x79],0xbc
  4212b1:	retf   0x7954
  4212b4:	repz sti 
  4212b6:	jp     0x4212db
  4212b8:	or     bl,dh
  4212ba:	pop    edx
  4212bb:	jmp    edi
  4212bd:	(bad)  
  4212be:	sub    edx,edi
  4212c0:	mov    dh,0x1e
  4212c2:	or     ebx,DWORD PTR [ebx-0x2c]
  4212c5:	ins    BYTE PTR es:[edi],dx
  4212c6:	add    DWORD PTR [edx+ebx*2],edi
  4212c9:	das    
  4212ca:	mov    BYTE PTR [eax+0x2e],cl
  4212cd:	ds mov al,al
  4212d0:	jbe    0x4212b0
  4212d2:	fadd   QWORD PTR [eax]
  4212d4:	add    BYTE PTR [eax],al
  4212d6:	add    BYTE PTR [eax],al
  4212d8:	add    BYTE PTR [eax],al
  4212da:	das    
  4212db:	and    al,0xf0
  4212dd:	aam    0xfb
  4212df:	aam    0x2f
  4212e1:	jmp    FWORD PTR [esi+0x33]
  4212e4:	je     0x42129c
  4212e6:	enter  0x8049,0x4
  4212ea:	pusha  
  4212eb:	int    0x1
  4212ed:	add    BYTE PTR [ecx+0x0],ah
  4212f0:	add    BYTE PTR [eax],al
  4212f2:	add    eax,ecx
  4212f4:	shr    DWORD PTR [ebp-0x368a29b7],cl
  4212fa:	mov    ch,0x43
  4212fc:	mov    ecx,0x81fc7a5f
  421301:	mov    ?,WORD PTR [esi-0x30]
  421304:	aad    0x9d
  421306:	(bad)  
  421307:	adc    eax,0xe6c8870
  42130c:	push   eax
  42130d:	aas    
  42130e:	sbb    DWORD PTR [esi-0x66],ebx
  421311:	(bad)  
  421312:	sub    edi,DWORD PTR [edi+0x8]
  421315:	cld    
  421316:	adc    al,0xf4
  421318:	push   ecx
  421319:	sbb    ebx,DWORD PTR [ecx-0x79]
  42131c:	into   
  42131d:	pop    ebp
  42131e:	mov    ?,WORD PTR [ebx-0x63a9c820]
  421324:	lahf   
  421325:	shr    BYTE PTR ds:0x2ae0ae19,1
  42132b:	and    al,0x71
  42132d:	outs   dx,BYTE PTR ds:[esi]
  42132e:	repz sbb eax,0xcc84c6a9
  421334:	je     0x42137f
  421336:	jle    0x4212bb
  421338:	sub    edx,DWORD PTR gs:[ebx+edx*2+0x7c23cbc2]
  421340:	push   DWORD PTR [esi+0x18bb3409]
  421346:	stos   BYTE PTR es:[edi],al
  421347:	xor    ebx,DWORD PTR [ebx+0x560fd020]
  42134d:	je     0x4212eb
  42134f:	cs fmul st(6),st
  421352:	xor    al,BYTE PTR [eax]
  421354:	add    BYTE PTR [eax],al
  421356:	add    BYTE PTR [eax],al
  421358:	add    BYTE PTR [eax],al
  42135a:	retf   0x76a0
  42135d:	dec    ebp
  42135e:	jle    0x42133f
  421360:	sti    
  421361:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421362:	mov    bh,0x83
  421364:	dec    edi
  421365:	mov    ds:0xddfa2b9,al
  42136a:	ror    ebp,0x1
  42136d:	add    BYTE PTR [ecx+0x0],ah
  421370:	add    BYTE PTR [eax],al
  421372:	daa    
  421373:	fstp   DWORD PTR [ebp-0x14c10f0e]
  421379:	xor    DWORD PTR [esi-0x33],edi
  42137c:	pop    esi
  42137d:	sbb    DWORD PTR [ebp-0x395d4c5c],ebx
  421383:	jl     0x4213b8
  421385:	jp     0x421374
  421387:	hlt    
  421388:	icebp  
  421389:	inc    ecx
  42138a:	das    
  42138b:	mov    edx,0x6760dd58
  421390:	cmovbe eax,DWORD PTR [edi+0x43e61a2c]
  421397:	cmp    esi,ebx
  421399:	ret    0xbf8f
  42139c:	cmp    eax,0x51b13c8d
  4213a1:	jnp    0x421355
  4213a3:	pop    ebx
  4213a4:	rcr    BYTE PTR [esi+0x61],cl
  4213a7:	inc    edx
  4213a8:	hlt    
  4213a9:	dec    eax
  4213aa:	xor    al,0x7d
  4213ac:	jecxz  0x42139f
  4213ae:	push   esi
  4213af:	fwait
  4213b0:	stos   DWORD PTR es:[edi],eax
  4213b1:	adc    al,0xb9
  4213b3:	sbb    esi,DWORD PTR [esi+edx*4-0x14]
  4213b7:	je     0x421397
  4213b9:	jo     0x42141c
  4213bb:	dec    esi
  4213bc:	xchg   edi,eax
  4213bd:	mov    ecx,DWORD PTR [ecx-0x3e190642]
  4213c3:	xchg   ebx,eax
  4213c4:	push   es
  4213c5:	mov    ebx,ss
  4213c7:	aas    
  4213c8:	icebp  
  4213c9:	dec    ecx
  4213ca:	mov    dh,0x9
  4213cc:	pop    es
  4213cd:	adc    ch,dh
  4213cf:	and    BYTE PTR [ebx],dl
  4213d1:	push   ebp
  4213d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213d3:	add    BYTE PTR [eax],al
  4213d5:	add    BYTE PTR [eax],al
  4213d7:	add    BYTE PTR [eax],al
  4213d9:	add    dh,al
  4213db:	out    dx,al
  4213dc:	lods   al,BYTE PTR ds:[esi]
  4213dd:	cmp    ch,BYTE PTR [edx+edi*2+0x5223fed6]
  4213e4:	stc    
  4213e5:	stc    
  4213e6:	push   ss
  4213e7:	dec    ecx
  4213e8:	dec    ebx
  4213e9:	(bad)  
  4213ea:	and    cl,dh
  4213ec:	add    DWORD PTR [eax],eax
  4213ee:	popa   
  4213ef:	add    BYTE PTR [eax],al
  4213f1:	add    BYTE PTR [eax+0x39],bh
  4213f4:	icebp  
  4213f5:	push   ss
  4213f6:	retf   
  4213f7:	cdq    
  4213f8:	mov    ?,WORD PTR [ecx]
  4213fa:	xor    eax,0xde535ac9
  4213ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421400:	jo     0x421409
  421402:	loop   0x421418
  421404:	fs push ds
  421406:	das    
  421407:	out    dx,eax
  421408:	jbe    0x4213ad
  42140a:	ret    
  42140b:	sub    DWORD PTR [edi-0x148db092],ebp
  421411:	clc    
  421412:	fisub  WORD PTR [ecx-0x1a]
  421415:	cmp    eax,0xa35daa76
  42141a:	fstp   TBYTE PTR [ecx]
  42141c:	mov    ebx,edx
  42141e:	xlat   BYTE PTR ds:[ebx]
  42141f:	add    al,BYTE PTR fs:[ebx+0x7f60e894]
  421426:	mov    ah,0x5b
  421428:	mov    WORD PTR [esi+0x15],es
  42142b:	xor    eax,0xe66bfd13
  421430:	jae    0x421477
  421432:	adc    eax,DWORD PTR [edi+0x3]
  421435:	aaa    
  421436:	pop    es
  421437:	xor    cl,cl
  421439:	fmul   st,st(4)
  42143b:	xor    eax,0xc5fd17b7
  421440:	imul   ebp,DWORD PTR fs:[esi-0x18bc7add],0x61
  421448:	mov    eax,0x188c4aaa
  42144d:	shr    BYTE PTR [ebx-0x5f4d5099],cl
  421453:	add    BYTE PTR [eax],al
  421455:	add    BYTE PTR [eax],al
  421457:	add    BYTE PTR [eax],al
  421459:	add    BYTE PTR [edx+0x34],dl
  42145c:	inc    eax
  42145d:	gs data16 jne 0x4214d8
  421461:	aaa    
  421462:	push   0xe36a4e09
  421467:	arpl   WORD PTR ds:0x1ce83a3,bx
  42146d:	add    BYTE PTR [ecx+0x0],ah
  421470:	add    BYTE PTR [eax],al
  421472:	dec    esi
  421473:	cmc    
  421474:	cdq    
  421475:	sub    DWORD PTR ds:[edi+0x50d6df],eax
  42147c:	ror    BYTE PTR [eax],cl
  42147e:	ds popa 
  421480:	jbe    0x421420
  421482:	xor    al,0xa7
  421484:	lods   eax,DWORD PTR ds:[esi]
  421485:	sbb    eax,0xbbb2a6a9
  42148a:	inc    esp
  42148b:	sub    BYTE PTR [ecx],0xec
  42148e:	bound  esi,QWORD PTR [ebx]
  421490:	cli    
  421491:	jecxz  0x421474
  421493:	or     DWORD PTR [esi],esp
  421495:	push   ecx
  421496:	and    cl,BYTE PTR es:[esi+0x393678a]
  42149d:	sbb    eax,0x8016ef9d
  4214a2:	xchg   edx,eax
  4214a3:	repnz loope 0x4214a4
  4214a6:	ret    
  4214a7:	mov    dh,0xcd
  4214a9:	add    eax,0x55a1feae
  4214ae:	jmp    0x33eb:0xfbf6dd54
  4214b5:	je     0x421452
  4214b7:	not    BYTE PTR [ebx-0x7388b2e0]
  4214bd:	icebp  
  4214be:	int3   
  4214bf:	sbb    edx,DWORD PTR [edx-0x3c73d5d2]
  4214c5:	sub    eax,0x52cb6cf5
  4214ca:	xchg   DWORD PTR [eax],edx
  4214cc:	or     ch,BYTE PTR [esi]
  4214ce:	adc    BYTE PTR [eax+eiz*8-0x65],0x35
  4214d3:	add    BYTE PTR [eax],al
  4214d5:	add    BYTE PTR [eax],al
  4214d7:	add    BYTE PTR [eax],al
  4214d9:	add    BYTE PTR [edx],dl
  4214db:	mov    edx,0xe6f8c6d8
  4214e0:	push   ds
  4214e1:	(bad)  
  4214e2:	adc    bl,dh
  4214e4:	cwde   
  4214e5:	out    dx,al
  4214e6:	pop    ebx
  4214e7:	call   0x1:0xe1145999
  4214ee:	popa   
  4214ef:	add    BYTE PTR [eax],al
  4214f1:	add    BYTE PTR ds:0x4a03baa7,dh
  4214f7:	dec    edi
  4214f8:	stc    
  4214f9:	sbb    esp,ebx
  4214fb:	shl    dh,0x7a
  4214fe:	pop    edx
  4214ff:	xchg   esp,eax
  421500:	sbb    eax,0x18
  421503:	jp     0x4214e7
  421505:	xchg   DWORD PTR [ecx],ebp
  421507:	in     eax,dx
  421508:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421509:	adc    al,bl
  42150b:	test   DWORD PTR [eax+0x4be86104],ecx
  421511:	in     al,dx
  421512:	out    dx,eax
  421513:	mov    esi,0x2d496dbf
  421518:	(bad)  
  421519:	push   cs
  42151a:	cmp    al,cl
  42151c:	sub    DWORD PTR [esi-0x11],edx
  42151f:	dec    edi
  421520:	dec    esp
  421521:	cmp    al,BYTE PTR [eax+edi*1-0xa7adbf1]
  421528:	jno    0x421536
  42152a:	mov    ecx,0xe25da60f
  42152f:	enter  0x80cd,0xd7
  421533:	addr16 ret 
  421535:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421536:	push   edi
  421537:	sub    esp,DWORD PTR [edi]
  421539:	cmc    
  42153a:	imul   DWORD PTR [edx]
  42153c:	cs fst DWORD PTR cs:[eax]
  421540:	pop    ebx
  421541:	inc    esp
  421542:	test   DWORD PTR [eax],0x3ec944e6
  421548:	arpl   WORD PTR [edi-0x54],bp
  42154b:	aam    0x2c
  42154d:	mov    esi,0xa4c04775
  421552:	mov    BYTE PTR [eax],0x0
  421555:	add    BYTE PTR [eax],al
  421557:	add    BYTE PTR [eax],al
  421559:	add    BYTE PTR [ecx+0x46],cl
  42155c:	sub    BYTE PTR [eax],dh
  42155e:	das    
  42155f:	jle    0x4215ba
  421561:	jg     0x421529
  421563:	imul   esi,eax,0xffffffd5
  421566:	pop    ebp
  421567:	scas   al,BYTE PTR es:[di]
  421569:	in     al,dx
  42156a:	jne    0x42154d
  42156c:	add    DWORD PTR [eax],eax
  42156e:	popa   
  42156f:	add    BYTE PTR [eax],al
  421571:	add    cl,al
  421573:	arpl   WORD PTR [ecx],dx
  421575:	push   0xf6f7bd22
  42157a:	push   0x2eece7da
  42157f:	inc    esp
  421580:	mov    cl,0x6a
  421582:	jnp    0x4215be
  421584:	sahf   
  421585:	das    
  421586:	pusha  
  421587:	mov    esp,0xc441ffe0
  42158c:	jb     0x42152e
  42158e:	sub    BYTE PTR [edi+0xa],dl
  421591:	pop    ecx
  421592:	ss stc 
  421594:	pop    edx
  421595:	cmp    esi,DWORD PTR [edi]
  421597:	lds    esi,FWORD PTR [edi+0x7030cd6c]
  42159d:	xchg   esi,eax
  42159e:	inc    esp
  42159f:	aas    
  4215a0:	add    BYTE PTR [esi-0x75],bh
  4215a3:	sub    DWORD PTR [eax+0xf191b2c],edx
  4215a9:	or     eax,0xa743708a
  4215ae:	les    ebp,FWORD PTR [ecx-0x9953007]
  4215b4:	out    dx,al
  4215b5:	bound  edx,QWORD PTR [edx+ecx*2+0x54a4bafd]
  4215bc:	cmp    eax,DWORD PTR [ecx+0x35]
  4215bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4215c0:	jl     0x421596
  4215c2:	lahf   
  4215c3:	(bad)  
  4215c4:	mov    al,0xad
  4215c6:	xor    BYTE PTR [edi-0x3c],cl
  4215c9:	push   es
  4215ca:	mov    ecx,0xf3569446
  4215cf:	jmp    0x4215bd
  4215d1:	inc    edx
  4215d2:	fild   DWORD PTR [eax]
  4215d4:	add    BYTE PTR [eax],al
  4215d6:	add    BYTE PTR [eax],al
  4215d8:	add    BYTE PTR [eax],al
  4215da:	addr16 (bad) 
  4215dc:	and    dh,dh
  4215de:	mov    eax,ds:0xe7d7f7f6
  4215e3:	mov    eax,0x70cdda72
  4215e8:	mov    ah,0x46
  4215ea:	(bad)  
  4215eb:	loope  0x4215ee
  4215ed:	add    BYTE PTR [ecx+0x0],ah
  4215f0:	add    BYTE PTR [eax],al
  4215f2:	jmp    0x42164e
  4215f4:	or     edx,DWORD PTR [ebx-0x66]
  4215f7:	mov    cs,ecx
  4215f9:	test   eax,0x8bb5f385
  4215fe:	hlt    
  4215ff:	mov    ah,BYTE PTR [ebx+0x52]
  421602:	(bad)  
  421603:	mov    eax,ds:0x8dedc551
  421608:	test   eax,0x7c5a0034
  42160d:	add    esp,ecx
  42160f:	in     eax,dx
  421610:	loopne 0x4215f0
  421612:	hlt    
  421613:	and    ecx,DWORD PTR [ecx-0x51]
  421616:	das    
  421617:	or     eax,0xb57c92e1
  42161c:	sub    eax,DWORD PTR [edi]
  42161e:	inc    eax
  42161f:	sbb    al,0x26
  421621:	(bad)  
  421622:	stc    
  421623:	mov    esp,0xea652399
  421628:	sub    eax,esi
  42162a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42162b:	pop    DWORD PTR [edi-0xeb904af]
  421631:	lea    esi,[ebx-0x3a]
  421634:	sub    eax,0x6ce337a2
  421639:	jno    0x421643
  42163b:	push   esp
  42163c:	push   esi
  42163d:	test   bl,al
  42163f:	mov    ch,0x18
  421641:	and    ah,BYTE PTR ds:0x1e356703
  421647:	in     eax,0x81
  421649:	jbe    0x42169d
  42164b:	pop    edi
  42164c:	(bad)  
  42164d:	in     al,0xbd
  42164f:	pop    ebx
  421650:	sbb    esi,DWORD PTR [ebp+0x78]
  421653:	add    BYTE PTR [eax],al
  421655:	add    BYTE PTR [eax],al
  421657:	add    BYTE PTR [eax],al
  421659:	add    bl,al
  42165b:	or     eax,0xefee66a6
  421660:	ret    
  421661:	lods   eax,DWORD PTR ds:[esi]
  421662:	sub    al,0xb8
  421664:	mov    ds:0xf3260347,eax
  421669:	daa    
  42166a:	aaa    
  42166b:	loop   0x42166e
  42166d:	add    BYTE PTR [ecx+0x0],ah
  421670:	add    BYTE PTR [eax],al
  421672:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421673:	ds fwait
  421675:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421676:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421677:	xlat   BYTE PTR ss:[ebx]
  421679:	mov    cl,0xb4
  42167b:	jecxz  0x4216c4
  42167d:	dec    esp
  42167e:	push   esp
  42167f:	fidiv  WORD PTR [edi+0x63db3000]
  421685:	sub    DWORD PTR ss:[bx+di-0x32],esi
  42168a:	and    DWORD PTR [edi-0x40819d29],edx
  421690:	or     ah,BYTE PTR [eax+0x37]
  421693:	les    esi,FWORD PTR [eax]
  421695:	mov    ebx,0x34c972f6
  42169a:	adc    BYTE PTR ds:0xd4da0410,dl
  4216a0:	sbb    cl,0x5a
  4216a3:	sbb    BYTE PTR [edx+0x39430023],ah
  4216a9:	mov    al,ds:0x411aceb
  4216ae:	xchg   ebx,eax
  4216af:	pusha  
  4216b0:	cli    
  4216b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216b2:	mov    esi,DWORD PTR [esi+0xe]
  4216b5:	or     al,0x96
  4216b7:	das    
  4216b8:	sbb    eax,DWORD PTR [esi-0x2cb8839b]
  4216be:	pop    ds
  4216bf:	pusha  
  4216c0:	mov    edx,DWORD PTR [ebp+0x3b]
  4216c3:	ja     0x4216ff
  4216c5:	inc    eax
  4216c6:	xchg   edi,eax
  4216c7:	xchg   DWORD PTR [edi-0x29],esi
  4216ca:	or     DWORD PTR [ebx+0x4e],ebp
  4216cd:	loope  0x42170d
  4216cf:	das    
  4216d0:	add    al,0x6e
  4216d2:	lea    eax,[eax]
  4216d4:	add    BYTE PTR [eax],al
  4216d6:	add    BYTE PTR [eax],al
  4216d8:	add    BYTE PTR [eax],al
  4216da:	fld    st(2)
  4216dc:	add    eax,0xddcf1f49
  4216e1:	ror    al,cl
  4216e3:	outs   dx,DWORD PTR ds:[esi]
  4216e4:	clc    
  4216e5:	rcr    BYTE PTR [ebx-0x55],cl
  4216e8:	test   al,0xea
  4216ea:	cwde   
  4216eb:	loop   0x4216ee
  4216ed:	add    BYTE PTR [esi+0x0],dl
  4216f0:	add    BYTE PTR [eax],al
  4216f2:	or     ebp,0xb58a8eb0
  4216f8:	or     esp,eax
  4216fa:	sub    BYTE PTR [eax+0x6e66f442],0xfb
  421701:	push   esp
  421702:	(bad)
  421705:	enter  0xff16,0x54
  421709:	cs (bad) 
  42170b:	rep lods eax,DWORD PTR ds:[esi]
  42170d:	lods   eax,DWORD PTR ds:[esi]
  42170e:	mov    eax,0xda886e0b
  421713:	aas    
  421714:	test   DWORD PTR [eax-0x6],ebx
  421717:	shl    BYTE PTR [edx],cl
  421719:	sub    ebx,DWORD PTR [edx]
  42171b:	(bad)  
  42171c:	into   
  42171d:	cwde   
  42171e:	loope  0x42178b
  421720:	in     eax,0xaf
  421722:	arpl   WORD PTR [edx+0xd3db771],si
  421728:	test   BYTE PTR [ecx],cl
  42172a:	repz shr DWORD PTR [esi],1
  42172d:	js     0x421783
  42172f:	cmp    ebp,DWORD PTR [esp+ecx*2-0x7f]
  421733:	xor    al,0x64
  421735:	mov    ds:0x59820922,al
  42173a:	sub    BYTE PTR [eax-0x2adf55d3],ch
  421740:	add    DWORD PTR [ecx+0x58],ebp
  421743:	arpl   WORD PTR [ebp+0xee8a4],bp
  421749:	add    BYTE PTR [eax],al
  42174b:	nop
  42174c:	inc    edx
  42174d:	add    BYTE PTR [eax+edx*4],al
  421750:	inc    edx
  421751:	add    BYTE PTR [eax],cl
  421753:	nop
  421754:	inc    edx
  421755:	add    BYTE PTR [eax+edx*4],cl
  421758:	inc    edx
  421759:	add    BYTE PTR [eax],dl
  42175b:	nop
  42175c:	inc    edx
  42175d:	add    BYTE PTR [eax+edx*4],dl
  421760:	inc    edx
  421761:	add    BYTE PTR [eax],bl
  421763:	nop
  421764:	inc    edx
  421765:	add    BYTE PTR [eax+edx*4],bl
  421768:	inc    edx
  421769:	add    BYTE PTR [eax],al
  42176b:	mov    al,ds:0xa0040042
  421770:	inc    edx
  421771:	add    BYTE PTR [eax],cl
  421773:	mov    al,ds:0xa00c0042
  421778:	inc    edx
  421779:	add    BYTE PTR [eax],dl
  42177b:	mov    al,ds:0xa0140042
  421780:	inc    edx
  421781:	add    BYTE PTR [eax],bl
  421783:	mov    al,ds:0xa01c0042
  421788:	inc    edx
  421789:	add    BYTE PTR [eax],al
  42178b:	mov    al,0x42
  42178d:	add    BYTE PTR [eax+esi*4],al
  421790:	inc    edx
  421791:	add    BYTE PTR [eax],cl
  421793:	mov    al,0x42
  421795:	add    BYTE PTR [eax+esi*4],cl
  421798:	inc    edx
  421799:	add    BYTE PTR [eax],dl
  42179b:	mov    al,0x42
  42179d:	add    BYTE PTR [eax+esi*4],dl
  4217a0:	inc    edx
  4217a1:	add    BYTE PTR [eax],bl
  4217a3:	mov    al,0x42
  4217a5:	add    BYTE PTR [eax+esi*4],bl
  4217a8:	inc    edx
  4217a9:	add    BYTE PTR [eax+0x66],bh
  4217ac:	ins    BYTE PTR es:[edi],dx
  4217ad:	jp     0x421806
  4217af:	jbe    0x4217f8
  4217b1:	ja     0x4217f6
  4217b3:	js     0x4217fd
  4217b5:	jno    0x42181a
  4217b7:	inc    edx
  4217b8:	inc    bx
  4217ba:	push   ebp
  4217bb:	jno    0x421833
  4217bd:	ja     0x421826
  4217bf:	dec    edi
  4217c0:	dec    esp
  4217c1:	dec    ebp
  4217c2:	inc    edx
  4217c3:	jno    0x421836
  4217c5:	jae    0x42181a
  4217c7:	push   eax
  4217c8:	arpl   WORD PTR [ebx+0x72],dx
  4217cb:	sbb    eax,DWORD PTR [edx+0x0]
  4217ce:	jp     0x4217eb
  4217d0:	inc    edx
  4217d1:	add    BYTE PTR [edx],dl
  4217d3:	sbb    al,BYTE PTR [edx+0x0]
  4217d6:	out    dx,eax
  4217d7:	or     esi,DWORD PTR [edx+0x304e790e]
  4217dd:	dec    esi
  4217de:	xchg   DWORD PTR [edi+0x3d],ecx
  4217e1:	dec    esi
  4217e2:	scas   eax,DWORD PTR es:[edi]
  4217e3:	dec    edi
  4217e4:	ds dec esi
  4217e6:	js     0x421836
  4217e8:	cmp    ecx,DWORD PTR [esi-0x64]
  4217eb:	dec    edi
  4217ec:	inc    esp
  4217ed:	dec    esi
  4217ee:	jae    0x42183e
  4217f0:	inc    ecx
  4217f1:	dec    esi
  4217f2:	xor    BYTE PTR [esi+0x40],cl
  4217f5:	dec    esi
  4217f6:	pop    esp
  4217f7:	pop    ebp
  4217f8:	pop    edi
  4217f9:	push   edx
  4217fa:	cmp    DWORD PTR [esi+0x79],ecx
  4217fd:	dec    esi
  4217fe:	xor    BYTE PTR [esi-0x79],cl
  421801:	dec    edi
  421802:	cmp    eax,0x3e4faf4e
  421807:	dec    esi
  421808:	js     0x421858
  42180a:	cmp    ecx,DWORD PTR [esi-0x64]
  42180d:	dec    edi
  42180e:	inc    esp
  42180f:	dec    esi
  421810:	mov    DWORD PTR [edi+0x41],ecx
  421813:	dec    esi
  421814:	xor    BYTE PTR [esi+0x40],cl
  421817:	dec    esi
  421818:	pop    esp
  421819:	ins    DWORD PTR es:[edi],dx
  42181a:	pop    edi
  42181b:	bound  edi,QWORD PTR [ecx]
  42181d:	dec    esi
  42181e:	jns    0x42186e
  421820:	xor    BYTE PTR [esi-0x80],cl
  421823:	dec    edi
  421824:	cmp    eax,0x394e734e
  421829:	dec    esi
  42182a:	mov    ds:0x304e3a4f,al
  42182f:	dec    esi
  421830:	inc    esi
  421831:	dec    esi
  421832:	pop    esp
  421833:	jge    0x421894
  421835:	jb     0x4218a6
  421837:	sub    BYTE PTR [esi-0x7d],0x7e
  42183b:	xchg   ebx,eax
  42183c:	jns    0x4217ce
  42183e:	aas    
  42183f:	dec    esi
  421840:	test   BYTE PTR [edi+0x30],cl
  421843:	dec    esi
  421844:	test   BYTE PTR [edi+0x3c],cl
  421847:	dec    esi
  421848:	mov    ds:0x734e394f,al
  42184d:	dec    esi
  42184e:	inc    ebp
  42184f:	dec    esi
  421850:	xor    BYTE PTR [esi+0x44],cl
  421853:	dec    esi
  421854:	pop    esp
  421855:	lea    ebx,[edi-0x7e]
  421858:	outs   dx,DWORD PTR ds:[esi]
  421859:	xchg   edx,eax
  42185a:	outs   dx,BYTE PTR ds:[esi]
  42185b:	xchg   ebx,eax
  42185c:	jle    0x421801
  42185e:	jns    0x421800
  421860:	aas    
  421861:	dec    esi
  421862:	test   BYTE PTR [edi+0x30],cl
  421865:	dec    esi
  421866:	test   BYTE PTR [edi+0x3c],cl
  421869:	dec    esi
  42186a:	mov    ds:0x894e394f,al
  42186f:	dec    edi
  421870:	inc    ebp
  421871:	dec    esi
  421872:	xor    BYTE PTR [esi+0x44],cl
  421875:	dec    esi
  421876:	pop    esp
  421877:	popf   
  421878:	pop    edi
  421879:	xchg   edx,eax
  42187a:	outs   dx,DWORD PTR ds:[esi]
  42187b:	mov    ds:0xb37ea36e,al
  421880:	jns    0x421832
  421882:	aas    
  421883:	dec    esi
  421884:	mov    cs,WORD PTR [edi+0x30]
  421887:	dec    esi
  421888:	lods   al,BYTE PTR ds:[esi]
  421889:	dec    edi
  42188a:	cmp    eax,0x394e734e
  42188f:	dec    esi
  421890:	mov    eax,ds:0x304e3a4f
  421895:	dec    esi
  421896:	inc    esp
  421897:	dec    esi
  421898:	pop    esp
  421899:	lods   eax,DWORD PTR ds:[esi]
  42189a:	pop    edi
  42189b:	mov    ds:0xb36eb26f,al
  4218a0:	jle    0x421865
  4218a2:	jns    0x421864
  4218a4:	aas    
  4218a5:	dec    esi
  4218a6:	mov    cs,WORD PTR [edi+0x30]
  4218a9:	dec    esi
  4218aa:	lods   al,BYTE PTR ds:[esi]
  4218ab:	dec    edi
  4218ac:	cmp    eax,0x394e7e4e
  4218b1:	dec    esi
  4218b2:	lahf   
  4218b3:	dec    edi
  4218b4:	cmp    ecx,DWORD PTR [esi+0x30]
  4218b7:	dec    esi
  4218b8:	inc    ebp
  4218b9:	dec    esi
  4218ba:	pop    esp
  4218bb:	mov    ebp,0xc26fb25f
  4218c0:	outs   dx,BYTE PTR ds:[esi]
  4218c1:	ret    
  4218c2:	jle    0x421897
  4218c4:	jns    0x421896
  4218c6:	aas    
  4218c7:	dec    esi
  4218c8:	mov    cs,WORD PTR [edi+0x30]
  4218cb:	dec    esi
  4218cc:	lods   al,BYTE PTR ds:[esi]
  4218cd:	dec    edi
  4218ce:	cmp    eax,0x394f804e
  4218d3:	dec    esi
  4218d4:	lods   al,BYTE PTR ds:[esi]
  4218d5:	dec    edi
  4218d6:	cmp    cl,BYTE PTR [esi+0x30]
  4218d9:	dec    esi
  4218da:	inc    esi
  4218db:	dec    esi
  4218dc:	pop    esp
  4218dd:	int    0x5f
  4218df:	ret    0xd26f
  4218e2:	outs   dx,BYTE PTR ds:[esi]
  4218e3:	sar    DWORD PTR [esi-0x1d],cl
  4218e6:	jns    0x4218c8
  4218e8:	aas    
  4218e9:	dec    esi
  4218ea:	mov    cs,WORD PTR [edi+0x30]
  4218ed:	dec    esi
  4218ee:	lods   al,BYTE PTR ds:[esi]
  4218ef:	dec    edi
  4218f0:	cmp    eax,0x394f834e
  4218f5:	dec    esi
  4218f6:	mov    ds:0x304e3a4f,al
  4218fb:	dec    esi
  4218fc:	inc    esp
  4218fd:	dec    esi
  4218fe:	pop    esp
  4218ff:	fstp   QWORD PTR [edi-0x2e]
  421902:	outs   dx,DWORD PTR ds:[esi]
  421903:	loop   0x421973
  421905:	jecxz  0x421985
  421907:	repz jns 0x4218fa
  42190a:	aas    
  42190b:	dec    esi
  42190c:	lea    ecx,[edi+0x30]
  42190f:	dec    esi
  421910:	lahf   
  421911:	dec    edi
  421912:	cmp    eax,0x3c4fa04e
  421917:	dec    esi
  421918:	xor    BYTE PTR [esi+0x3f],cl
  42191b:	dec    esi
  42191c:	pop    esp
  42191d:	in     eax,dx
  42191e:	pop    edi
  42191f:	loop   0x421990
  421921:	repnz outs dx,BYTE PTR ds:[esi]
  421923:	repz jle 0x421929
  421926:	jns    0x421928
  421928:	jle    0x42193d
  42192a:	jns    0x42193c
  42192c:	cmp    al,0x4e
  42192e:	jg     0x42197e
  421930:	xor    BYTE PTR [esi-0x65],cl
  421933:	dec    edi
  421934:	xor    cl,BYTE PTR [esi-0x80]
  421937:	dec    edi
  421938:	cmp    al,0x4e
  42193a:	lods   eax,DWORD PTR ds:[esi]
  42193b:	dec    edi
  42193c:	cmp    ecx,DWORD PTR [esi+0x30]
  42193f:	dec    esi
  421940:	inc    ebp
  421941:	dec    esi
  421942:	pop    esp
  421943:	or     eax,0x126f025f
  421948:	outs   dx,BYTE PTR ds:[esi]
  421949:	adc    edi,DWORD PTR [esi+0x23]
  42194c:	jns    0x42196e
  42194e:	aas    
  42194f:	dec    esi
  421950:	add    BYTE PTR [eax],al
  421952:	ficom  DWORD PTR [edi]
  421954:	inc    edx
  421955:	add    dh,cl
  421957:	sbb    DWORD PTR [edx+0x0],eax
  42195a:	(bad)  
  42195b:	sbb    DWORD PTR [edx+0x0],eax
  42195e:	jle    0x42197b
  421960:	inc    edx
  421961:	add    dl,ch
  421963:	sbb    al,BYTE PTR [edx+0x0]
  421966:	outs   dx,BYTE PTR ds:[esi]
  421967:	sbb    eax,DWORD PTR [edx+0x0]
  42196a:	mov    dh,0x19
  42196c:	inc    edx
  42196d:	add    BYTE PTR [edx+0x6a004219],bh
  421973:	sbb    eax,DWORD PTR [edx+0x0]
  421976:	push   ds
  421977:	sbb    al,BYTE PTR [edx+0x0]
  42197a:	or     eax,0x36f89ca9
  42197f:	mov    edx,0x19d2f89c
  421984:	inc    edx
  421985:	add    BYTE PTR [edx-0x49ffbde6],ah
  42198b:	sbb    al,BYTE PTR [edx+0x0]
  42198e:	ret    0x421a
  421991:	add    dl,dl
  421993:	sbb    al,BYTE PTR [edx+0x0]
  421996:	or     bl,BYTE PTR [edx]
  421998:	inc    edx
  421999:	add    dh,dl
  42199b:	pop    ss
  42199c:	inc    edx
  42199d:	add    BYTE PTR [edx],ch
  42199f:	sbb    al,BYTE PTR [edx+0x0]
  4219a2:	sbb    bl,BYTE PTR [edx]
  4219a4:	inc    edx
  4219a5:	add    BYTE PTR [edx-0x49ffbde5],al
  4219ab:	test   DWORD PTR [eax+edi*8-0x7ee8f4e7],ebx
  4219b2:	ficomp WORD PTR [ecx]
  4219b4:	inc    edx
  4219b5:	add    BYTE PTR [esp+ebx*1],dl
  4219b8:	push   ss
  4219b9:	or     DWORD PTR [eax],0x7050d
  4219bf:	add    BYTE PTR [eax+0x0],al
  4219c2:	cmp    al,BYTE PTR [edx+0x3e]
  4219c5:	ds enter 0x4279,0x0
  4219ca:	ins    DWORD PTR es:[edi],dx
  4219cb:	push   ebp
  4219cc:	inc    esp
  4219cd:	imul   ecx,DWORD PTR [eax],0x86275fa
  4219d3:	in     eax,dx
  4219d4:	inc    BYTE PTR [edi]
  4219d6:	aas    
  4219d7:	cli    
  4219d8:	mov    ds:0x4219c605,eax
  4219dd:	add    BYTE PTR [ebp-0x4a07636b],dh
  4219e3:	xchg   esi,eax
  4219e4:	pushf  
  4219e5:	clc    
  4219e6:	mov    ah,0x95
  4219e8:	pushf  
  4219e9:	clc    
  4219ea:	mov    ebx,0xbaf89c95
  4219ef:	xchg   ebp,eax
  4219f0:	pushf  
  4219f1:	clc    
  4219f2:	mov    ecx,0xb8f89c95
  4219f7:	xchg   ebp,eax
  4219f8:	pushf  
  4219f9:	clc    
  4219fa:	mov    edi,0xbef89c95
  4219ff:	xchg   ebp,eax
  421a00:	pushf  
  421a01:	clc    
  421a02:	mov    ebp,0xa6f89c95
  421a07:	xchg   ebp,eax
  421a08:	pushf  
  421a09:	clc    
  421a0a:	jmp    0x4217:0xce6003f9
  421a11:	add    BYTE PTR [eax+eax*2+0x42],ch
  421a15:	add    BYTE PTR [ebx+0x77],dl
  421a18:	jbe    0x421a6a
  421a1a:	mov    dh,0x85
  421a1c:	pushf  
  421a1d:	clc    
  421a1e:	sbb    ecx,ebp
  421a20:	push   eax
  421a21:	pop    es
  421a22:	dec    eax
  421a23:	or     al,BYTE PTR [eax]
  421a25:	add    dl,cl
  421a27:	pop    ss
  421a28:	inc    edx
  421a29:	add    BYTE PTR [ebx],bl
  421a2b:	or     eax,DWORD PTR [esi+ecx*1]
	...
  421a5e:	ins    BYTE PTR es:[edi],dx
  421a5f:	inc    eax
  421a60:	inc    edx
  421a61:	add    BYTE PTR [esi+0x66f89c85],dh
  421a67:	add    BYTE PTR [edx+0x0],ch
  421a6a:	add    BYTE PTR [si+0x0],ah
  421a6e:	push   0x64006700
  421a73:	add    BYTE PTR [esi+0x0],ah
  421a76:	push   0x0
  421a78:	push   0x66006400
  421a7d:	add    BYTE PTR [edi+0x0],ah
  421a80:	push   0x0
  421a82:	push   0x66006700
  421a87:	add    BYTE PTR [eax+0x0],ch
  421a8a:	add    BYTE PTR [bp+0x0],ah
  421a8e:	push   0x66006700
	...
  421a9b:	add    BYTE PTR [eax],al
  421a9d:	add    BYTE PTR [edi+0x5c],ch
  421aa0:	inc    eax
  421aa1:	add    BYTE PTR [ebp-0x5db060b1],ah
  421aa7:	dec    edi
  421aa8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421aa9:	dec    edi
  421aaa:	lahf   
  421aab:	dec    edi
  421aac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421aad:	dec    edi
  421aae:	ins    DWORD PTR es:[edi],dx
  421aaf:	dec    esi
  421ab0:	bound  ecx,QWORD PTR [esi+0x30]
  421ab3:	dec    esi
  421ab4:	add    BYTE PTR [eax],al
  421ab6:	cdq    
  421ab7:	dec    edi
  421ab8:	pushf  
  421ab9:	dec    edi
  421aba:	fwait
  421abb:	dec    edi
  421abc:	ins    DWORD PTR es:[edi],dx
  421abd:	dec    esi
  421abe:	bound  ecx,QWORD PTR [esi+0x30]
  421ac1:	dec    esi
  421ac2:	scas   eax,DWORD PTR es:[edi]
  421ac3:	dec    edi
  421ac4:	lods   eax,DWORD PTR ds:[esi]
  421ac5:	dec    edi
  421ac6:	lahf   
  421ac7:	dec    edi
  421ac8:	mov    ds:0x624e6d4f,al
  421acd:	dec    esi
  421ace:	xor    BYTE PTR [esi+0x0],cl
  421ad1:	add    BYTE PTR [ebp-0x5bb067b1],ch
  421ad7:	dec    edi
  421ad8:	test   eax,0xa04f934f
  421add:	dec    edi
  421ade:	fwait
  421adf:	dec    edi
  421ae0:	xor    BYTE PTR [esi+0x0],cl
  421ae3:	add    BYTE PTR [eax],al
  421ae5:	add    BYTE PTR [eax],al
  421ae7:	add    BYTE PTR [eax],al
  421ae9:	add    BYTE PTR [ebp+edi*2-0x62737274],cl
  421af0:	mov    WORD PTR [ebp-0x32734274],gs
  421af6:	mov    ebp,ds
  421af8:	mov    ebp,gs
  421afa:	mov    ebp,?
  421afc:	mov    WORD PTR ds:0x2d8c1d8c,cs
  421b02:	mov    WORD PTR ds:0x6d8c5d8c,?
  421b08:	mov    WORD PTR [edx-0x74],?
  421b0b:	jae    0x421a99
  421b0d:	jo     0x421a9b
  421b0f:	jno    0x421a9d
  421b11:	jbe    0x421a9f
  421b13:	ja     0x421aa1
  421b15:	je     0x421aa3
  421b17:	jne    0x421aa5
  421b19:	mov    cl,BYTE PTR [ebx+ecx*4-0x76737774]
  421b20:	mov    WORD PTR [esi+0x7d9c7c8c],cs
  421b26:	lods   al,BYTE PTR ds:[esi]
  421b27:	jge    0x421ae5
  421b29:	jge    0x421ac9
  421b2b:	(bad)  
  421b2c:	jns    0x421ba1
  421b2e:	mov    ecx,0x7d738cb1
  421b33:	ins    DWORD PTR es:[edi],dx
  421b34:	enter  0x9fc6,0x26
  421b38:	jb     0x421b3d
  421b3a:	test   eax,0xb956bb17
  421b3f:	hlt    
  421b40:	test   al,0x37
  421b42:	test   al,0x7e
  421b44:	fnstenv [ecx-0x6a]
  421b47:	mov    cl,0x6a
  421b49:	push   0xffffffce
  421b4b:	or     BYTE PTR [edx],bl
  421b4d:	xlat   BYTE PTR ds:[ebx]
  421b4e:	out    dx,eax
  421b4f:	add    eax,0x9321d7aa
  421b54:	scas   al,BYTE PTR es:[edi]
  421b55:	adc    DWORD PTR [esi],esp
  421b57:	jge    0x421b7c
  421b59:	fidiv  WORD PTR [edi]
  421b5b:	leave  
  421b5c:	hlt    
  421b5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b5e:	cmp    ax,0x1fc8
  421b62:	mov    dh,cl
  421b64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b65:	(bad)  
  421b66:	and    DWORD PTR [eax],ebx
  421b68:	and    DWORD PTR [ecx-0x18],esi
  421b6b:	(bad)  [ebx+0x7]
  421b6e:	cmc    
  421b6f:	enter  0x301a,0x14
  421b73:	inc    eax
  421b74:	inc    edx
  421b75:	add    BYTE PTR [ecx+0x66],dh
  421b78:	jp     0x421be8
  421b7a:	mov    esi,0x22004219
  421b7f:	sbb    al,BYTE PTR [edx+0x0]
  421b82:	or     ch,ch
  421b84:	adc    al,BYTE PTR [edi]
  421b86:	imul   esp,DWORD PTR [esi+0x4f],0x6f704c74
  421b8d:	ins    BYTE PTR es:[edi],dx
  421b8e:	push   0x49657557
  421b93:	imul   eax,DWORD PTR fs:[ecx+edi*2+0x54],0x62
  421b99:	push   edi
  421b9a:	jp     0x421c16
  421b9c:	dec    ebp
  421b9d:	push   esi
  421b9e:	arpl   WORD PTR gs:[ecx+0x45],si
  421ba2:	dec    edx
  421ba3:	dec    esi
  421ba4:	data16 ja 0x421bf5
  421ba7:	imul   ebp,DWORD PTR [eax+0x6e],0x76597148
	...
  421bc2:	inc    ebp
  421bc3:	push   edx
  421bc4:	jb     0x421c3a
  421bc6:	inc    esi
  421bc7:	je     0x421c0a
  421bc9:	inc    esi
  421bca:	jae    0x421c42
  421bcc:	dec    ebx
  421bcd:	gs dec ecx
  421bcf:	dec    ebp
  421bd0:	dec    ebp
  421bd1:	pop    edx
  421bd2:	jp     0x421c2e
  421bd4:	jbe    0x421c1c
  421bd6:	pop    ecx
  421bd7:	jo     0x421c51
  421bd9:	inc    edi
  421bda:	gs ins BYTE PTR es:[edi],dx
  421bdc:	dec    esp
  421bdd:	js     0x421c47
  421bdf:	inc    edx
  421be0:	js     0x421c28
  421be2:	dec    eax
  421be3:	inc    ebp
  421be4:	inc    esp
  421be5:	inc    esp
  421be6:	push   ecx
  421be7:	dec    edx
  421be8:	ins    BYTE PTR es:[edi],dx
  421be9:	dec    ebx
  421bea:	jbe    0x421c5a
  421bec:	pop    eax
  421bed:	jbe    0x421c3a
  421bef:	inc    ecx
  421bf0:	fs gs jno 0x421c61
  421bf4:	push   ebx
  421bf5:	inc    ecx
  421bf6:	add    BYTE PTR [eax],al
  421bf8:	inc    ebx
  421bf9:	outs   dx,BYTE PTR ds:[esi]
  421bfa:	imul   esp,DWORD PTR [edi+0x7a],0x6f
  421bfe:	push   edx
  421bff:	push   ecx
  421c00:	push   0x74000064
  421c05:	jne    0x421c7c
  421c07:	ins    DWORD PTR es:[edi],dx
  421c08:	push   ecx
  421c09:	push   eax
  421c0a:	jo     0x421c86
  421c0c:	addr16 jo 0x421c65
  421c0f:	pop    eax
  421c10:	add    BYTE PTR [eax],al
  421c12:	push   ecx
  421c13:	pop    ecx
  421c14:	inc    ebx
  421c15:	inc    edx
  421c16:	outs   dx,BYTE PTR ds:[esi]
  421c17:	popa   
  421c18:	imul   eax,DWORD PTR [edx+0x61],0x6b
  421c1c:	jne    0x421c8c
  421c1e:	dec    ebx
  421c1f:	je     0x421c84
  421c21:	bound  esp,QWORD PTR [edi+0x0]
  421c24:	jns    0x421c6b
  421c26:	bound  ebp,QWORD PTR [ecx+0x46]
  421c29:	dec    ecx
  421c2a:	ja     0x421c71
  421c2c:	dec    eax
  421c2d:	inc    ebp
  421c2e:	inc    edx
  421c2f:	push   ebx
  421c30:	add    BYTE PTR [eax],al
  421c32:	outs   dx,DWORD PTR ds:[esi]
  421c33:	inc    edi
  421c34:	dec    esi
  421c35:	outs   dx,DWORD PTR ds:[esi]
  421c36:	pop    ecx
  421c37:	inc    edi
  421c38:	jb     0x421c81
  421c3a:	jns    0x421cb2
  421c3c:	inc    ecx
  421c3d:	pop    eax
  421c3e:	dec    esp
  421c3f:	add    BYTE PTR [eax+0x48],bh
  421c42:	bound  edx,QWORD PTR [ebx+0x43]
  421c45:	pop    eax
  421c46:	outs   dx,DWORD PTR ds:[esi]
  421c47:	push   0x4355
  421c4c:	dec    esp
  421c4d:	ins    BYTE PTR es:[edi],dx
  421c4e:	inc    edx
  421c4f:	push   0x76666a73
  421c54:	inc    edx
  421c55:	jo     0x421c57
  421c57:	add    BYTE PTR [eax],al
  421c59:	add    BYTE PTR [edi+0x6d],ah
  421c5c:	je     0x421ca5
  421c5e:	ins    BYTE PTR es:[edi],dx
  421c5f:	jae    0x421ccb
  421c61:	inc    esi
  421c62:	ins    DWORD PTR es:[edi],dx
  421c63:	je     0x421cbb
  421c65:	push   0x56584178
  421c6a:	push   ebx
  421c6b:	addr16 dec edx
  421c6d:	jo     0x421ce1
  421c6f:	js     0x421ce0
  421c71:	pop    eax
  421c72:	dec    ebx
  421c73:	push   esp
  421c74:	dec    esp
  421c75:	jns    0x421cc2
  421c77:	js     0x421cf1
  421c79:	outs   dx,BYTE PTR ds:[esi]
  421c7a:	pop    ecx
  421c7b:	jae    0x421ceb
  421c7d:	push   0x43644448
  421c82:	arpl   WORD PTR [edx+0x55],sp
  421c85:	push   0x42504e67
  421c8a:	push   ebp
  421c8b:	je     0x421d02
  421c8d:	addr16 dec edi
  421c8f:	dec    esp
  421c90:	inc    edx
  421c91:	ins    DWORD PTR es:[edi],dx
  421c92:	inc    esi
  421c93:	inc    esi
  421c94:	inc    esi
  421c95:	arpl   WORD PTR [edx+0x47],bx
  421c98:	push   ebp
  421c99:	inc    ebx
  421c9a:	popa   
  421c9b:	push   edx
  421c9c:	dec    esp
  421c9d:	imul   ecx,DWORD PTR [ecx+0x43],0x54706a5a
  421ca4:	push   ecx
  421ca5:	push   ebx
  421ca6:	imul   ebp,DWORD PTR [ebx+0x52],0x444a454e
  421cad:	dec    edx
  421cae:	jns    0x421d19
  421cb0:	push   edx
  421cb1:	inc    ebx
  421cb2:	jo     0x421d29
  421cb4:	imul   ecx,DWORD PTR [ebx+0x50],0x48
  421cb8:	fs push ebx
  421cba:	inc    ebx
  421cbb:	push   ebp
  421cbc:	push   eax
  421cbd:	ja     0x421cfa
  421cbf:	fisttp QWORD PTR [ebp+ebp*4-0x12]
  421cc3:	mov    ebp,0xa53ddffb
  421cc8:	js     0x421c83
  421cca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ccb:	xor    dh,BYTE PTR [edi+0x1d5b6d2]
  421cd1:	add    BYTE PTR [ecx+0x0],ah
  421cd4:	add    BYTE PTR [eax],al
  421cd6:	test   al,0xd3
  421cd8:	pop    ecx
  421cd9:	lds    edx,FWORD PTR [esi-0x1a300c59]
  421cdf:	test   eax,0x71605f4e
  421ce4:	xor    DWORD PTR [ebx-0x62],0x23dba525
  421ceb:	jb     0x421d50
  421ced:	xor    DWORD PTR [edi-0x7b1c24ae],edx
  421cf3:	outs   dx,BYTE PTR ds:[esi]
  421cf4:	hlt    
  421cf5:	sbb    eax,esp
  421cf7:	push   ds
  421cf8:	mov    bh,0x75
  421cfa:	dec    edi
  421cfb:	mov    ebx,0xc22b7575
  421d00:	xchg   ebp,eax
  421d01:	test   BYTE PTR [ecx],bh
  421d03:	push   edi
  421d04:	(bad)  
  421d05:	test   al,0xd0
  421d07:	pop    ecx
  421d08:	jge    0x421ce9
  421d0a:	and    al,0xab
  421d0c:	jnp    0x421d46
  421d0e:	add    dl,al
  421d10:	data16 mov gs,WORD PTR [esi-0xc]
  421d14:	nop
  421d15:	mov    ah,0x3c
  421d17:	push   esi
  421d18:	and    ebp,DWORD PTR [edx+0x20]
  421d1b:	dec    esp
  421d1c:	xchg   ch,ch
  421d1e:	inc    edi
  421d1f:	cs adc eax,0x7b4292d0
  421d25:	aaa    
  421d26:	out    dx,eax
  421d27:	pushf  
  421d28:	ss mov bp,0x67d1
  421d2d:	mov    dl,0xd4
  421d2f:	jle    0x421d58
  421d31:	push   ebx
  421d32:	or     DWORD PTR [edx],eax
  421d34:	and    DWORD PTR [eax-0x5f],esp
  421d37:	add    BYTE PTR [eax],al
  421d39:	add    BYTE PTR [eax],al
  421d3b:	add    BYTE PTR [eax],al
  421d3d:	add    BYTE PTR [eax],ch
  421d3f:	mov    dl,0xa5
  421d41:	push   edx
  421d42:	mov    edi,0x7cfaff57
  421d47:	xlat   BYTE PTR fs:[ebx]
  421d49:	push   esi
  421d4a:	inc    ebx
  421d4b:	and    BYTE PTR [edx],bh
  421d4d:	sbb    DWORD PTR [edi],edx
  421d4f:	(bad)  
  421d50:	add    DWORD PTR [eax],eax
  421d52:	popa   
  421d53:	add    BYTE PTR [eax],al
  421d55:	add    dh,dl
  421d57:	mov    ebx,0xf105567a
  421d5c:	sub    DWORD PTR [eax+0x16e5d7ef],ebx
  421d62:	mov    bl,0x3b
  421d64:	loop   0x421dc7
  421d66:	mov    esp,ds
  421d68:	enter  0x83a5,0xcc
  421d6c:	in     eax,0xd
  421d6e:	pushf  
  421d6f:	int3   
  421d70:	add    dh,BYTE PTR [eax]
  421d72:	dec    ebp
  421d73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d74:	cld    
  421d75:	add    ah,BYTE PTR [ebx]
  421d77:	iret   
  421d78:	push   ecx
  421d79:	fisubr DWORD PTR [esi+0x4b20090c]
  421d7f:	jo     0x421de6
  421d81:	add    BYTE PTR [eax-0x7d604290],ah
  421d87:	repz ja 0x421d84
  421d8a:	scas   eax,DWORD PTR es:[edi]
  421d8b:	or     edi,edx
  421d8d:	or     BYTE PTR [ecx+0x66],al
  421d90:	test   eax,0x957fe03a
  421d95:	retf   0xcf25
  421d98:	push   cs
  421d99:	fcom   DWORD PTR [edx]
  421d9b:	fwait
  421d9c:	nop
  421d9d:	adc    eax,0xdadc130a
  421da2:	shr    DWORD PTR [esi+0x7f],cl
  421da5:	rol    ch,0x9f
  421da8:	jns    0x421dfa
  421daa:	gs jb  0x421d48
  421dad:	imul   esi,DWORD PTR [ebx+0x13],0xffffffba
  421db1:	mov    bh,0xc2
  421db3:	(bad)
  421db7:	add    BYTE PTR [eax],al
  421db9:	add    BYTE PTR [eax],al
  421dbb:	add    BYTE PTR [eax],al
  421dbd:	add    BYTE PTR [ebx-0x7e80ab],dh
  421dc3:	stos   DWORD PTR es:[edi],eax
  421dc4:	push   DWORD PTR [edi-0x42]
  421dc7:	xchg   esi,eax
  421dc8:	push   0x41350857
  421dcd:	sub    DWORD PTR [eax-0x2a],edi
  421dd0:	add    DWORD PTR [eax],eax
  421dd2:	popa   
  421dd3:	add    BYTE PTR [eax],al
  421dd5:	add    bl,bh
  421dd7:	sbb    edi,edi
  421dd9:	and    eax,0x98acc268
  421dde:	push   ds
  421ddf:	pop    esi
  421de0:	jp     0x421e52
  421de2:	inc    ebp
  421de3:	call   0x211443f0
  421de8:	inc    eax
  421de9:	sbb    cl,BYTE PTR es:[eax+0x2]
  421ded:	das    
  421dee:	adc    al,0xff
  421df0:	out    dx,al
  421df1:	call   0x4b71:0xbe847ae2
  421df8:	cmp    al,0x96
  421dfa:	pushf  
  421dfb:	popa   
  421dfc:	inc    ecx
  421dfd:	fld    QWORD PTR [ecx+eax*1+0x1cbdb279]
  421e04:	push   0xffffffad
  421e06:	adc    eax,0x87099458
  421e0b:	pop    ecx
  421e0c:	jmp    0xf716:0x827491ad
  421e13:	jnp    0x421e6d
  421e15:	ret    0x9c85
  421e18:	dec    eax
  421e19:	mov    bh,0x3e
  421e1b:	and    al,0xff
  421e1d:	xchg   ebp,eax
  421e1e:	(bad)  
  421e1f:	cmp    BYTE PTR [ecx+0x11f4905f],bh
  421e25:	cmc    
  421e26:	cmp    dh,BYTE PTR [eax-0x4e]
  421e29:	repz cmc 
  421e2b:	clc    
  421e2c:	imul   ebx,DWORD PTR fs:[eax],0x2e412958
  421e33:	test   DWORD PTR [edi],esi
  421e35:	sub    DWORD PTR [ebx+0x0],0x0
  421e3c:	add    BYTE PTR [eax],al
  421e3e:	cmp    dh,dl
  421e40:	cmp    ah,BYTE PTR [esi+edi*8]
  421e43:	in     al,dx
  421e44:	fimul  WORD PTR ds:[edi-0x5253942b]
  421e4b:	shr    DWORD PTR [edi-0x3a],0xd9
  421e4f:	(bad)  
  421e50:	add    DWORD PTR [eax],eax
  421e52:	popa   
  421e53:	add    BYTE PTR [eax],al
  421e55:	add    BYTE PTR [ecx],dh
  421e57:	imul   ebx,DWORD PTR [eax-0x20685c97],0x22824a33
  421e61:	xor    edx,DWORD PTR [ebp+0x7d]
  421e64:	add    edi,DWORD PTR [eax]
  421e66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e67:	sbb    dl,ah
  421e69:	lock in eax,0x75
  421e6c:	and    BYTE PTR [eax+0x25baf6a5],ch
  421e72:	fdivr  QWORD PTR [edx]
  421e74:	lds    esi,FWORD PTR [edx]
  421e76:	inc    esi
  421e77:	sar    DWORD PTR [ecx],cl
  421e79:	cmp    ebp,DWORD PTR [esi]
  421e7b:	dec    ecx
  421e7c:	add    DWORD PTR [esp+esi*8-0x1bd6f0b5],ebp
  421e83:	mov    DWORD PTR [ecx-0x25b77fd0],eax
  421e89:	dec    esp
  421e8a:	ins    DWORD PTR es:[edi],dx
  421e8b:	sbb    esp,edi
  421e8d:	dec    BYTE PTR ds:0xe1e7d8fe
  421e93:	cmp    eax,0x51ca2307
  421e98:	icebp  
  421e99:	popa   
  421e9a:	call   0xedf4:0x7ba8d9ac
  421ea1:	add    dl,al
  421ea3:	mov    ebx,0x54513cbf
  421ea8:	lods   eax,DWORD PTR ds:[esi]
  421ea9:	cmc    
  421eaa:	or     bl,BYTE PTR [edi]
  421eac:	out    0x5f,eax
  421eae:	dec    esi
  421eaf:	(bad)  
  421eb0:	(bad)  
  421eb1:	sti    
  421eb2:	les    ebx,FWORD PTR ds:0xbce0a4
  421eb8:	add    BYTE PTR [eax],al
  421eba:	add    BYTE PTR [eax],al
  421ebc:	add    BYTE PTR [eax],al
  421ebe:	fnstenv [esi-0x2490e49a]
  421ec4:	std    
  421ec5:	neg    BYTE PTR [esi]
  421ec7:	sub    esp,DWORD PTR [ebx-0x23]
  421eca:	sub    eax,0x3a4f0800
  421ecf:	xlat   BYTE PTR ds:[ebx]
  421ed0:	add    DWORD PTR [eax],eax
  421ed2:	popa   
  421ed3:	add    BYTE PTR [eax],al
  421ed5:	add    BYTE PTR [esi+esi*1-0x45],dh
  421ed9:	push   ss
  421eda:	fistp  QWORD PTR [edi]
  421edc:	adc    al,0x52
  421ede:	pop    ebx
  421edf:	adc    BYTE PTR ds:0xf089ab0e,al
  421ee5:	mov    ds:0xb4494dcf,al
  421eea:	pop    esi
  421eeb:	out    dx,al
  421eec:	in     eax,0x1b
  421eee:	mov    ds:0xb0c56bb9,al
  421ef3:	cmp    BYTE PTR [ebp-0x2b],al
  421ef6:	mov    ch,0xc3
  421ef8:	in     eax,0x9c
  421efa:	jl     0x421e89
  421efc:	mov    ebx,0x9104664c
  421f01:	pop    ss
  421f02:	test   BYTE PTR [edx-0x10557dd7],al
  421f08:	scas   al,BYTE PTR es:[edi]
  421f09:	xchg   esp,eax
  421f0a:	sbb    BYTE PTR [eax+ebp*1+0x8],ch
  421f0e:	in     eax,0x88
  421f10:	loop   0x421ea0
  421f12:	daa    
  421f13:	mov    cl,0xde
  421f15:	add    eax,0x77f87ee3
  421f1a:	inc    esi
  421f1b:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f1d:	mov    ebp,esp
  421f1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f20:	cwde   
  421f21:	cwde   
  421f22:	add    ah,BYTE PTR [ebx-0x2b]
  421f25:	and    eax,0xb532e716
  421f2a:	enter  0xe2e4,0x82
  421f2e:	ja     0x421f78
  421f30:	and    BYTE PTR [ecx+0x72],al
  421f33:	sbb    DWORD PTR [ecx],esp
  421f35:	test   ebp,ebx
  421f37:	add    BYTE PTR [eax],al
  421f39:	add    BYTE PTR [eax],al
  421f3b:	add    BYTE PTR [eax],al
  421f3d:	add    dl,bl
  421f3f:	xor    dl,BYTE PTR [edi-0x20500076]
  421f45:	jb     0x421f4a
  421f47:	inc    ebp
  421f48:	mov    ds:0x130eb45c,eax
  421f4d:	mov    ch,0x9b
  421f4f:	xlat   BYTE PTR ds:[ebx]
  421f50:	add    DWORD PTR [eax],eax
  421f52:	popa   
  421f53:	add    BYTE PTR [eax],al
  421f55:	add    BYTE PTR [edx],bl
  421f57:	(bad)  
  421f58:	jnp    0x421f9c
  421f5a:	mov    ch,0xbc
  421f5c:	lock (bad) 
  421f5e:	dec    esi
  421f5f:	or     dh,BYTE PTR [eax+eax*4]
  421f62:	fistp  QWORD PTR [edx+edi*8+0x4a14a5cc]
  421f69:	lods   eax,DWORD PTR ds:[esi]
  421f6a:	scas   eax,DWORD PTR es:[edi]
  421f6b:	cmp    BYTE PTR [edi+ecx*2],bh
  421f6e:	xor    eax,0x1e1ffc19
  421f73:	dec    edx
  421f74:	mov    al,ds:0x1d5c978b
  421f79:	lods   al,BYTE PTR ds:[esi]
  421f7a:	xor    ah,BYTE PTR [eax]
  421f7c:	dec    ecx
  421f7d:	nop
  421f7e:	push   edi
  421f7f:	jnp    0x421ffb
  421f81:	retf   0x635a
  421f84:	test   eax,0x125f5d36
  421f89:	mov    bh,0x83
  421f8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f8d:	or     ecx,edi
  421f8f:	xchg   ecx,eax
  421f90:	mov    cl,BYTE PTR [edi+0x4]
  421f93:	aam    0xf1
  421f95:	mov    bl,BYTE PTR ds:0xc7e0989d
  421f9b:	fld    QWORD PTR [edi]
  421f9d:	pop    esi
  421f9e:	mov    WORD PTR [ebx+0x11d0e0ab],?
  421fa4:	aaa    
  421fa5:	enter  0xc783,0x32
  421fa9:	dec    edi
  421faa:	mov    bh,0x7d
  421fac:	pop    eax
  421fad:	jmp    0x19010dcb
  421fb2:	mov    eax,ds:0xa6a16f20
  421fb7:	add    BYTE PTR [eax],al
  421fb9:	add    BYTE PTR [eax],al
  421fbb:	add    BYTE PTR [eax],al
  421fbd:	add    BYTE PTR [eax-0x1c],cl
  421fc0:	add    ebx,DWORD PTR [ebx-0x8270051]
  421fc6:	pop    esi
  421fc7:	sub    BYTE PTR [eax+0x742f28f],bl
  421fcd:	(bad)  
  421fce:	cld    
  421fcf:	xlat   BYTE PTR ds:[ebx]
  421fd0:	add    DWORD PTR [eax],eax
  421fd2:	popa   
  421fd3:	add    BYTE PTR [eax],al
  421fd5:	add    BYTE PTR [edi-0x79586a1b],ch
  421fdb:	inc    ecx
  421fdc:	std    
  421fdd:	in     eax,0x76
  421fdf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421fe0:	clc    
  421fe1:	jb     0x421f8c
  421fe3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421fe4:	mov    ds:0x403c94a,eax
  421fe9:	push   cs
  421fea:	stc    
  421feb:	sub    edx,DWORD PTR [ebp-0x7df26486]
  421ff1:	call   0x2840802e
  421ff6:	out    dx,eax
  421ff7:	nop    DWORD PTR [edi]
  421ffa:	mov    edx,0x8740b4f6
  421fff:	and    eax,0x3077fcf4
  422004:	and    ch,BYTE PTR [ecx]
  422006:	sbb    ecx,DWORD PTR [ecx-0x5e]
  422009:	fwait
  42200a:	mov    ebx,0xaefe4157
  42200f:	dec    edi
  422010:	and    dh,dl
  422012:	add    al,0xda
  422014:	push   edx
  422015:	jecxz  0x42205f
  422017:	pusha  
  422018:	test   al,dl
  42201a:	mov    bl,0xb6
  42201c:	mov    dl,0xd3
  42201e:	inc    esi
  42201f:	add    eax,0x323da49e
  422024:	sbb    al,0x60
  422026:	pushf  
  422027:	pop    esp
  422028:	rcl    DWORD PTR [ecx],0x3b
  42202b:	sbb    BYTE PTR [edx],al
  42202d:	cs pop ecx
  42202f:	mov    ah,0xdf
  422031:	daa    
  422032:	fbstp  TBYTE PTR [ebp+0xeff3aa]
  422038:	add    BYTE PTR [eax],al
  42203a:	add    BYTE PTR [eax],al
  42203c:	add    BYTE PTR [eax],al
  42203e:	push   edx
  42203f:	add    al,0xa2
  422041:	xor    dh,0xa6
  422044:	jb     0x42201a
  422046:	ins    DWORD PTR es:[edi],dx
  422047:	xor    dh,BYTE PTR [edx]
  422049:	and    eax,0xf2e45b56
  42204e:	pop    ebp
  42204f:	fadd   DWORD PTR [ecx]
  422051:	add    BYTE PTR [ecx+0x0],ah
  422054:	add    BYTE PTR [eax],al
  422056:	xchg   ebp,eax
  422057:	sub    ebx,DWORD PTR [edi]
  422059:	sahf   
  42205a:	and    BYTE PTR [edx-0x20],bh
  42205d:	jmp    0x42200b
  42205f:	mov    edi,0xda914644
  422064:	sbb    BYTE PTR [edi],ah
  422066:	mov    bh,0xf8
  422068:	pop    ebx
  422069:	jp     0x422013
  42206b:	fimul  WORD PTR [edi]
  42206d:	mov    al,0xe2
  42206f:	call   0xdb0cc450
  422074:	call   0x4c70001f
  422079:	pop    ebp
  42207a:	sbb    eax,0xe9333217
  42207f:	repnz scas al,BYTE PTR es:[edi]
  422081:	push   cs
  422082:	jmp    0x376bf541
  422087:	fidivr WORD PTR [esi-0x7c0df7f2]
  42208d:	jae    0x422040
  42208f:	sar    DWORD PTR [ebx+ebx*2],1
  422092:	inc    edx
  422093:	stos   DWORD PTR es:[edi],eax
  422094:	retf   
  422095:	pop    esp
  422096:	inc    DWORD PTR [ebx-0x1f]
  422099:	xor    BYTE PTR [edi+esi*2+0x49ccd6f0],al
  4220a0:	pop    ecx
  4220a1:	mov    dl,0x68
  4220a3:	adc    eax,0xbb86c1ff
  4220a8:	stos   BYTE PTR es:[edi],al
  4220a9:	cwde   
  4220aa:	add    al,0x3b
  4220ac:	mov    edx,0x86ea86ac
  4220b1:	shl    BYTE PTR [eax+0x51],cl
  4220b4:	jo     0x42212d
  4220b6:	rol    BYTE PTR [eax],1
  4220b8:	add    BYTE PTR [eax],al
  4220ba:	add    BYTE PTR [eax],al
  4220bc:	add    BYTE PTR [eax],al
  4220be:	cmp    BYTE PTR [edx-0x6a],ch
  4220c1:	add    edx,esi
  4220c3:	(bad)  
  4220c4:	mov    ebp,0xdb4ef67b
  4220c9:	out    0x75,eax
  4220cb:	mov    WORD PTR [esi],?
  4220cd:	ins    DWORD PTR es:[edi],dx
  4220ce:	mov    esi,0x610001d8
  4220d3:	add    BYTE PTR [eax],al
  4220d5:	add    al,ch
  4220d7:	fisub  DWORD PTR [ebx]
  4220d9:	sbb    edx,DWORD PTR [edx-0x7e]
  4220dc:	aad    0x33
  4220de:	mov    al,0x67
  4220e0:	or     eax,0x2576d0ef
  4220e5:	lods   al,BYTE PTR ds:[esi]
  4220e6:	jp     0x422078
  4220e8:	jne    0x4220b6
  4220ea:	inc    eax
  4220eb:	sbb    DWORD PTR [edx-0x64d470da],ebp
  4220f1:	mov    edx,0xc20c074b
  4220f6:	sti    
  4220f7:	or     al,0x91
  4220f9:	mov    DWORD PTR [esi+0x770fb5d4],esp
  4220ff:	mov    bl,bh
  422101:	pop    es
  422102:	push   esi
  422103:	sbb    dh,cl
  422105:	popf   
  422106:	or     dh,BYTE PTR [ecx+0x71]
  422109:	mov    bh,ch
  42210b:	xchg   esi,eax
  42210c:	push   ss
  42210d:	sbb    al,0x9b
  42210f:	dec    ebp
  422110:	mov    dh,dh
  422112:	cmc    
  422113:	mov    al,ds:0xc5c2267c
  422118:	test   DWORD PTR [ecx+0x31],ebp
  42211b:	sbb    esp,DWORD PTR [edi]
  42211d:	lods   eax,DWORD PTR ds:[esi]
  42211e:	lods   eax,DWORD PTR ds:[esi]
  42211f:	jmp    0x4f562d59
  422124:	and    eax,0xafe6a972
  422129:	dec    eax
  42212a:	jmp    0x2d5d32db
  42212f:	sbb    ecx,DWORD PTR [edx+ecx*2]
  422132:	sti    
  422133:	xor    al,0x1c
  422135:	xchg   edx,eax
  422136:	push   es
  422137:	add    BYTE PTR [eax],al
  422139:	add    BYTE PTR [eax],al
  42213b:	add    BYTE PTR [eax],al
  42213d:	add    cl,ch
  42213f:	mov    ecx,0xf37a307a
  422144:	jmp    0x42213f
  422146:	fimul  DWORD PTR [esp+eax*2+0x6c]
  42214a:	dec    ebx
  42214b:	aaa    
  42214c:	sub    DWORD PTR [edi+ebx*1+0x610001d9],eax
  422153:	add    BYTE PTR [eax],al
  422155:	add    BYTE PTR [ebx+0x44a23178],ah
  42215b:	icebp  
  42215c:	nop
  42215d:	aad    0x68
  42215f:	cmp    esp,esi
  422161:	shl    DWORD PTR [edi+0x24],1
  422164:	cdq    
  422165:	sbb    bh,BYTE PTR [ecx-0x39504e6e]
  42216b:	mov    edi,0x84d4c94
  422170:	inc    esp
  422171:	stc    
  422172:	sahf   
  422173:	ror    BYTE PTR [ebp+0x10],0x5a
  422177:	sbb    eax,0xf171161e
  42217c:	jge    0x422181
  42217e:	and    BYTE PTR [ebp-0x2e],dh
  422181:	aas    
  422182:	push   cs
  422183:	pop    edi
  422184:	in     eax,0x52
  422186:	icebp  
  422187:	rol    ebx,1
  422189:	int    0xa3
  42218b:	or     al,0x2f
  42218d:	test   al,0xd7
  42218f:	dec    ebx
  422190:	in     al,0x9d
  422192:	adc    cl,BYTE PTR [eax-0x8]
  422195:	stos   DWORD PTR es:[edi],eax
  422196:	mov    ebx,DWORD PTR [edi+eiz*2+0x75caa1e6]
  42219d:	std    
  42219e:	cwde   
  42219f:	pop    esp
  4221a0:	addr16 xchg esi,eax
  4221a2:	in     eax,0x2d
  4221a4:	pop    ecx
  4221a5:	sbb    ch,BYTE PTR [eax-0x3a]
  4221a8:	and    al,0xeb
  4221aa:	ins    BYTE PTR es:[edi],dx
  4221ab:	adc    BYTE PTR gs:[ebx+0x7f],ch
  4221af:	aas    
  4221b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4221b1:	mov    edx,0x76e3922a
  4221b6:	mov    eax,DWORD PTR [eax]
  4221b8:	add    BYTE PTR [eax],al
  4221ba:	add    BYTE PTR [eax],al
  4221bc:	add    BYTE PTR [eax],al
  4221be:	pop    ebx
  4221bf:	inc    ecx
  4221c0:	pop    ebx
  4221c1:	iret   
  4221c2:	pop    ebx
  4221c3:	(bad)  
  4221c5:	aad    0xf
  4221c7:	ss dec esp
  4221c9:	dec    esi
  4221ca:	sbb    eax,0x80378503
  4221cf:	fld    DWORD PTR [ecx]
  4221d1:	add    BYTE PTR [ecx+0x0],ah
  4221d4:	add    BYTE PTR [eax],al
  4221d6:	test   BYTE PTR [eax-0x1e],al
  4221d9:	ror    BYTE PTR [eax+esi*8+0x2faa2ef4],1
  4221e0:	je     0x42222e
  4221e2:	adc    al,0x2f
  4221e4:	popf   
  4221e5:	xchg   ecx,eax
  4221e6:	daa    
  4221e7:	sahf   
  4221e8:	push   ds
  4221e9:	test   al,bl
  4221eb:	lahf   
  4221ec:	jg     0x4221fb
  4221ee:	jl     0x4221ce
  4221f0:	sbb    al,0x32
  4221f2:	mov    eax,ds:0xcee9a4c2
  4221f7:	mov    bh,0x78
  4221f9:	repnz icebp 
  4221fb:	adc    al,0x7a
  4221fd:	dec    esi
  4221fe:	add    ebp,0x26
  422201:	adc    dl,bl
  422203:	cmp    DWORD PTR [ebp+0x1e],edi
  422206:	sbb    DWORD PTR fs:[edi-0x4b],esi
  42220a:	sbb    ebx,DWORD PTR [eax-0x15fb031d]
  422210:	adc    al,0x2f
  422212:	mov    ecx,DWORD PTR [ebx]
  422214:	push   edi
  422215:	fcomp  DWORD PTR [eax+0x3c4f9d53]
  42221b:	mov    DWORD PTR [ecx],esi
  42221d:	push   0x648f041e
  422222:	dec    ebx
  422223:	or     eax,0xea194396
  422228:	aad    0x11
  42222a:	fsub   QWORD PTR [esi+edx*2-0x1a97ccdc]
  422231:	mov    eax,ds:0xef10849f
  422236:	iret   
  422237:	add    BYTE PTR [eax],al
  422239:	add    BYTE PTR [eax],al
  42223b:	add    BYTE PTR [eax],al
  42223d:	add    BYTE PTR [ebx+0x7f3c6585],bl
  422243:	cld    
  422244:	(bad)  [edi-0x65be08a1]
  42224a:	inc    esp
  42224b:	push   ebp
  42224c:	sbb    al,0xbf
  42224e:	loope  0x422229
  422250:	add    DWORD PTR [eax],eax
  422252:	popa   
  422253:	add    BYTE PTR [eax],al
  422255:	add    BYTE PTR [ecx-0x6cb69efd],ch
  42225b:	mov    edi,ds
  42225d:	xor    al,0x45
  42225f:	loopne 0x42225a
  422261:	mov    ebp,0x386280c9
  422266:	call   FWORD PTR [ebp+0x22]
  422269:	inc    ebp
  42226a:	je     0x422259
  42226c:	dec    esp
  42226d:	jge    0x422232
  42226f:	push   edi
  422270:	shr    bl,cl
  422272:	mov    edx,0x1dbda6de
  422277:	and    esp,DWORD PTR [ebp+edx*1-0x23]
  42227b:	mov    ah,0x4f
  42227d:	ror    DWORD PTR [ecx],cl
  42227f:	xchg   ebp,eax
  422280:	fdiv   QWORD PTR [ebp-0x1f4c4636]
  422286:	and    al,al
  422288:	repnz (bad) 
  42228a:	lock pop ss
  42228c:	pop    ebx
  42228d:	push   ebp
  42228e:	jl     0x422240
  422290:	add    dh,BYTE PTR [esi]
  422292:	xchg   edi,eax
  422293:	pusha  
  422294:	aam    0xa3
  422296:	mov    bl,0xcc
  422298:	jle    0x422267
  42229a:	pop    DWORD PTR [eax+0x1f]
  42229d:	cmp    ebp,DWORD PTR [edx+0x5f41a9b1]
  4222a3:	mov    esi,0x7725a4c7
  4222a8:	ins    BYTE PTR es:[edi],dx
  4222a9:	out    dx,eax
  4222aa:	or     bl,BYTE PTR [ecx]
  4222ac:	(bad)  [edx-0x52113364]
  4222b2:	rcl    al,0x35
  4222b5:	push   cs
  4222b6:	call   0x0:0x0
  4222bd:	add    BYTE PTR [esi+0x73],ch
  4222c0:	lock retf 0xcbfd
  4222c4:	jle    0x4222bd
  4222c6:	repz xor eax,0xcab68ce9
  4222cc:	or     ecx,esp
  4222ce:	inc    edx
  4222cf:	fiadd  DWORD PTR [ecx]
  4222d1:	add    BYTE PTR [ecx+0x0],ah
  4222d4:	add    BYTE PTR [eax],al
  4222d6:	test   DWORD PTR [edx-0xa],ebx
  4222d9:	(bad)  
  4222da:	aaa    
  4222db:	xor    eax,0xc2519e9
  4222e0:	jmp    0x4222d0
  4222e2:	xchg   edi,eax
  4222e3:	out    dx,al
  4222e4:	push   es
  4222e5:	jge    0x4222dd
  4222e7:	lods   al,BYTE PTR ds:[esi]
  4222e8:	inc    ecx
  4222e9:	jmp    0x79c09e8c
  4222ee:	(bad)  [esi]
  4222f0:	xchg   BYTE PTR [ebp+0x26],dh
  4222f3:	rol    BYTE PTR [ebx+esi*1-0x51],cl
  4222f7:	mov    ds:0xa82ae476,eax
  4222fc:	iret   
  4222fd:	aas    
  4222fe:	sub    eax,0x7a1b8b42
  422303:	adc    al,0x1a
  422305:	cmp    eax,0x95b618cb
  42230a:	push   0x51
  42230c:	xchg   edi,eax
  42230d:	dec    esp
  42230e:	dec    eax
  42230f:	int    0xb5
  422311:	adc    al,0xfb
  422313:	inc    eax
  422314:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422315:	sub    bl,BYTE PTR [edx-0x4b4ec67e]
  42231b:	mov    es,WORD PTR [ebp-0x5517e081]
  422321:	or     ah,BYTE PTR [ebp+0x5c6cdfb6]
  422327:	cmp    eax,0x5ccbedf7
  42232c:	(bad)  
  42232d:	cld    
  42232e:	aad    0x9d
  422330:	cwde   
  422331:	xchg   esp,eax
  422332:	cmp    ebp,DWORD PTR [ecx]
  422334:	imul   ecx,ebp,0x7d
  42233a:	add    BYTE PTR [eax],al
  42233c:	add    BYTE PTR [eax],al
  42233e:	cmc    
  42233f:	adc    al,0xae
  422341:	adc    ebp,edi
  422343:	mov    ebx,0x84e6f6fd
  422348:	lds    ebp,FWORD PTR [edx+0x1bb4cd09]
  42234e:	mov    ds:0x610001da,eax
  422353:	add    BYTE PTR [eax],al
  422355:	add    BYTE PTR [ebx+ecx*1],dh
  422358:	mov    esp,0x537d4f62
  42235d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42235e:	sbb    eax,0x3ea59031
  422363:	cwde   
  422364:	stc    
  422365:	rcl    BYTE PTR [ebx+0x5c48c6c2],1
  42236b:	mov    al,0xd8
  42236d:	and    DWORD PTR [ebx+0x52],esp
  422370:	and    al,0xaf
  422372:	mov    ch,0x1f
  422374:	test   al,0x85
  422376:	aas    
  422377:	and    BYTE PTR [edx+0x18e9b9c0],bh
  42237d:	jecxz  0x422355
  42237f:	sub    ch,BYTE PTR [ecx]
  422381:	cli    
  422382:	stos   BYTE PTR es:[edi],al
  422383:	cli    
  422384:	push   cs
  422385:	mov    dl,0x56
  422387:	(bad)  
  422389:	mov    ds:0x39543f75,al
  42238e:	adc    ebp,DWORD PTR [esi]
  422390:	rol    BYTE PTR cs:[eax+0x29a7012f],0x32
  422398:	or     dh,BYTE PTR [edi+0x3caac91c]
  42239e:	loopne 0x4223ac
  4223a0:	arpl   WORD PTR [ebx-0x5ca01e7f],cx
  4223a6:	mov    al,0x17
  4223a8:	dec    edi
  4223a9:	adc    ecx,DWORD PTR [edx]
  4223ab:	inc    esp
  4223ac:	push   edx
  4223ad:	sbb    al,0x68
  4223af:	xor    dl,BYTE PTR [ecx+eax*4-0x12]
  4223b3:	push   esp
  4223b4:	adc    eax,0x6e36
  4223b9:	add    BYTE PTR [eax],al
  4223bb:	add    BYTE PTR [eax],al
  4223bd:	add    BYTE PTR [ebx],bh
  4223bf:	mov    cl,0x57
  4223c1:	lock fcomip st,st(6)
  4223c4:	mov    edi,0xbb1c16fb
  4223c9:	ror    BYTE PTR [edi+0x471441b],0xdb
  4223d0:	add    DWORD PTR [eax],eax
  4223d2:	popa   
  4223d3:	add    BYTE PTR [eax],al
  4223d5:	add    BYTE PTR [esi],cl
  4223d7:	aaa    
  4223d8:	mov    ?,WORD PTR [ebp+edx*8-0x4f2739]
  4223df:	or     eax,0xf12a297d
  4223e4:	xchg   DWORD PTR [ebx+0x58016377],edx
  4223ea:	out    0xc7,eax
  4223ec:	or     eax,0x347ec85b
  4223f1:	frstor [edi+ebp*4-0x2b1d3eda]
  4223f8:	cmp    esp,ebx
  4223fa:	sbb    ebp,DWORD PTR [edi-0x4d]
  4223fd:	inc    edi
  4223fe:	sbb    ecx,DWORD PTR [ebp+0x50]
  422401:	mov    DWORD PTR [esi+0x7a],0x3ba44920
  422408:	loopne 0x4223f6
  42240a:	push   ds
  42240b:	pop    esp
  42240c:	std    
  42240d:	jl     0x42239f
  42240f:	mov    ebx,0x8714117
  422414:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422415:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422416:	jg     0x42247e
  422418:	jo     0x4223fc
  42241a:	xchg   ebx,eax
  42241b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42241c:	cwde   
  42241d:	bound  edi,QWORD PTR [edi]
  42241f:	mov    cs,WORD PTR [ecx-0x5ef3df2b]
  422425:	mov    ds:0xc3632a65,al
  42242a:	add    eax,0x3d1f28cc
  42242f:	out    0xb3,eax
  422431:	push   esi
  422432:	sub    BYTE PTR [edx-0x6d],bl
  422435:	mov    ch,0x2d
  422437:	add    BYTE PTR [eax],al
  422439:	add    BYTE PTR [eax],al
  42243b:	add    BYTE PTR [eax],al
  42243d:	add    ah,dl
  42243f:	sqrtps xmm6,xmm0
  422442:	(bad)  
  422444:	cmc    
  422445:	das    
  422446:	sbb    BYTE PTR [eax],cl
  422448:	xchg   ebx,eax
  422449:	iret   
  42244a:	xchg   ebx,eax
  42244b:	adc    eax,0xdb654704
  422450:	add    DWORD PTR [eax],eax
  422452:	popa   
  422453:	add    BYTE PTR [eax],al
  422455:	add    BYTE PTR [ebp-0xd22f023],dl
  42245b:	xor    BYTE PTR [ebx-0x77],ah
  42245e:	or     ebx,esi
  422460:	fld    QWORD PTR [ebx-0x6c3a5083]
  422466:	fcom   DWORD PTR [eax-0x5062ccf5]
  42246c:	lahf   
  42246d:	fcomp  QWORD PTR [edx+0x1c]
  422470:	int    0x8a
  422472:	inc    esi
  422473:	and    BYTE PTR [edi+0x5d],bh
  422476:	fsubr  DWORD PTR [eax]
  422478:	jge    0x422444
  42247a:	adc    eax,0xa88c46b9
  42247f:	mov    BYTE PTR [esi+0x4c],cl
  422482:	dec    ebp
  422483:	adc    al,BYTE PTR ds:0x256e745d
  422489:	test   eax,0xee4c89d4
  42248e:	mov    cl,0x12
  422490:	push   esp
  422491:	inc    eax
  422492:	cmp    bh,BYTE PTR [eax-0x5b]
  422495:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422496:	in     al,0xb7
  422498:	into   
  422499:	pop    ds
  42249a:	mov    BYTE PTR [eax+0x7d],dh
  42249d:	push   ecx
  42249e:	push   cs
  42249f:	jno    0x422507
  4224a1:	inc    edx
  4224a2:	cmp    DWORD PTR [ebx+esi*4-0x63],ecx
  4224a6:	mov    eax,0xf400622
  4224ab:	mov    edx,0xe86927f2
  4224b0:	jmp    0xaa36:0xcc3b6612
  4224b7:	add    BYTE PTR [eax],al
  4224b9:	add    BYTE PTR [eax],al
  4224bb:	add    BYTE PTR [eax],al
  4224bd:	add    ch,cl
  4224bf:	sub    eax,0xfbf54395
  4224c4:	fild   QWORD PTR [edi-0x5bdf5fa9]
  4224ca:	or     bl,BYTE PTR [esi-0x2439cba2]
  4224d0:	add    DWORD PTR [eax],eax
  4224d2:	popa   
  4224d3:	add    BYTE PTR [eax],al
  4224d5:	add    BYTE PTR [esi-0x64],bh
  4224d8:	or     ebp,edi
  4224da:	inc    eax
  4224dc:	sbb    al,0xbf
  4224de:	add    ecx,ecx
  4224e0:	xchg   edi,eax
  4224e1:	jns    0x422495
  4224e3:	cmp    al,0x8
  4224e5:	fwait
  4224e6:	pop    ebx
  4224e7:	sbb    bl,dl
  4224e9:	adc    bh,dl
  4224eb:	and    al,0xe6
  4224ed:	ins    BYTE PTR es:[edi],dx
  4224ee:	fcmovnb st,st(1)
  4224f0:	xchg   edx,esi
  4224f2:	imul   DWORD PTR [ebx+edi*2-0x1c8db15b]
  4224f9:	cwde   
  4224fa:	push   ecx
  4224fb:	test   ecx,esp
  4224fd:	(bad)  
  4224fe:	jp     0x422562
  422500:	fist   WORD PTR [ecx+0x452de4d3]
  422506:	push   0xffffff98
  422508:	fbstp  TBYTE PTR [esi+0x7c]
  42250b:	lahf   
  42250c:	aas    
  42250d:	sbb    eax,0x9f352cd1
  422512:	(bad)  
  422513:	sbb    edx,ebp
  422515:	sti    
  422516:	dec    esi
  422517:	dec    eax
  422518:	test   DWORD PTR [edx+ebp*1-0x6d061843],eax
  42251f:	test   eax,0x9af1838a
  422524:	fwait
  422525:	push   0x3565bcda
  42252a:	sub    DWORD PTR ds:0xccf5eab3,ebp
  422530:	stos   BYTE PTR es:[edi],al
  422531:	inc    edi
  422532:	add    edi,esp
  422534:	inc    ebx
  422535:	adc    ebx,DWORD PTR [ebp+0x0]
  422538:	add    BYTE PTR [eax],al
  42253a:	add    BYTE PTR [eax],al
  42253c:	add    BYTE PTR [eax],al
  42253e:	adc    esp,DWORD PTR [edi+eiz*8+0xb]
  422542:	test   DWORD PTR [ebx-0xce58301],0x55684cfc
  42254c:	jecxz  0x4225cd
  42254e:	daa    
  42254f:	fadd   QWORD PTR [ecx]
  422551:	add    BYTE PTR [ecx+0x0],ah
  422554:	add    BYTE PTR [eax],al
  422556:	pop    ecx
  422557:	cmp    edx,DWORD PTR [ecx-0xa]
  42255a:	clc    
  42255b:	jle    0x422594
  42255d:	in     al,0xc6
  42255f:	shr    DWORD PTR [edx+0x12],0xe1
  422563:	mov    WORD PTR [esi-0x39],es
  422566:	mov    esp,0x86546b34
  42256b:	dec    ebx
  42256c:	inc    ebx
  42256d:	scas   al,BYTE PTR es:[edi]
  42256e:	hlt    
  42256f:	adc    eax,0x342654ee
  422574:	mov    al,0x2e
  422576:	adc    BYTE PTR [ebp+0x73],bh
  422579:	outs   dx,DWORD PTR ds:[esi]
  42257a:	and    esp,DWORD PTR [ebx+0x5b2a4de9]
  422580:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422581:	mov    ds:0x79a17be3,eax
  422586:	gs push esi
  422588:	retf   0xfb18
  42258b:	mov    eax,0xfe95f284
  422590:	clc    
  422591:	mov    ecx,0x21446b5f
  422596:	sub    DWORD PTR [eax-0x72],ecx
  422599:	sub    ah,BYTE PTR [edi]
  42259b:	aaa    
  42259c:	dec    edx
  42259d:	pop    es
  42259e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42259f:	pop    ecx
  4225a0:	mov    ah,0x3d
  4225a2:	push   0xffffffa6
  4225a4:	and    ecx,DWORD PTR [eax+0xf191a86]
  4225aa:	stos   BYTE PTR es:[edi],al
  4225ab:	addr16 add edx,esi
  4225ae:	jo     0x4225fe
  4225b0:	out    dx,eax
  4225b1:	test   eax,0x474123b7
  4225b6:	call   0x4225bb
  4225bb:	add    BYTE PTR [eax],al
  4225bd:	add    BYTE PTR [esi],dh
  4225bf:	add    dl,BYTE PTR [ebp+0xc]
  4225c2:	jne    0x422623
  4225c4:	jg     0x422600
  4225c6:	clc    
  4225c7:	cs aas 
  4225c9:	push   0xf887bdd6
  4225ce:	in     al,0xce
  4225d0:	add    DWORD PTR [eax],eax
  4225d2:	popa   
  4225d3:	add    BYTE PTR [eax],al
  4225d5:	add    BYTE PTR [edx],bl
  4225d7:	test   eax,0xe55b3282
  4225dc:	clc    
  4225dd:	icebp  
  4225de:	bound  ecx,QWORD PTR [esi+0x22]
  4225e1:	jae    0x4225ba
  4225e3:	xor    al,0xa
  4225e5:	leave  
  4225e6:	xor    ebx,esp
  4225e8:	jmp    0x6d79c6cb
  4225ed:	bound  ecx,QWORD PTR [edx]
  4225ef:	or     eax,0x74a0f219
  4225f4:	add    al,0x51
  4225f6:	mov    dh,0x1d
  4225f8:	cld    
  4225f9:	adc    DWORD PTR [ebp+0x4f],0x54
  4225fd:	fdivr  DWORD PTR [edx+0x566a0f98]
  422603:	fcom   QWORD PTR [edx+edx*1+0x64102bab]
  42260a:	pop    ebp
  42260b:	dec    ebx
  42260c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42260d:	sbb    edx,DWORD PTR [ebx+0x17e3213a]
  422613:	cmp    al,al
  422615:	xchg   esi,eax
  422616:	jecxz  0x422636
  422618:	dec    ecx
  422619:	push   cs
  42261a:	hlt    
  42261b:	mov    ah,BYTE PTR [edx]
  42261d:	xchg   esp,eax
  42261e:	mov    ah,0xf5
  422620:	add    BYTE PTR [eax],dh
  422622:	cmp    eax,0x4fa3f6d3
  422627:	dec    edx
  422628:	pop    es
  422629:	add    DWORD PTR [edi+ebp*1-0x6d],esi
  42262d:	loopne 0x422692
  42262f:	add    bl,bl
  422631:	push   sp
  422633:	loope  0x42266a
  422635:	test   esp,0x0
  42263b:	add    BYTE PTR [eax],al
  42263d:	add    BYTE PTR [eax],cl
  42263f:	mov    cl,0x72
  422641:	cmp    edi,ebx
  422643:	sti    
  422644:	dec    ecx
  422645:	mov    bl,0x94
  422647:	je     0x422620
  422649:	call   0xcf45:0xf126474
  422650:	add    DWORD PTR [eax],eax
  422652:	popa   
  422653:	add    BYTE PTR [eax],al
  422655:	add    BYTE PTR [esi+edx*8-0x26a68131],ah
  42265c:	pop    ecx
  42265d:	sub    bh,BYTE PTR [edi+0x598c888]
  422663:	add    al,0xbe
  422665:	push   ss
  422666:	and    dh,BYTE PTR ds:0x37c19788
  42266c:	and    bh,bl
  42266e:	mov    edx,0xc49dbab0
  422673:	loop   0x4226c7
  422675:	adc    DWORD PTR [ebp+0x7f6501a6],esp
  42267b:	dec    ecx
  42267c:	mov    esi,0x497b311e
  422681:	loop   0x4226b0
  422683:	outs   dx,DWORD PTR ds:[esi]
  422684:	adc    edi,DWORD PTR [eax-0x16]
  422687:	jmp    0x422686
  422689:	pop    eax
  42268a:	mov    DWORD PTR [ecx],eax
  42268c:	xchg   DWORD PTR [eax+0x2e],edx
  42268f:	das    
  422690:	cmp    BYTE PTR [ebx+0x4b],al
  422693:	repnz add eax,0x352f0593
  422699:	mov    ?,WORD PTR [edx]
  42269b:	sub    ah,BYTE PTR ds:0x22a30be3
  4226a1:	in     al,0x9e
  4226a3:	gs pop ebx
  4226a5:	jo     0x422679
  4226a7:	mov    edx,0x5d79fd95
  4226ac:	pushf  
  4226ad:	push   0xffffffee
  4226af:	xchg   esp,eax
  4226b0:	push   ds
  4226b1:	sbb    edx,DWORD PTR [eax+0xb53f47f]
  4226b7:	add    BYTE PTR [eax],al
  4226b9:	add    BYTE PTR [eax],al
  4226bb:	add    BYTE PTR [eax],al
  4226bd:	add    bh,bl
  4226bf:	push   ebx
  4226c0:	mov    dl,0x4f
  4226c2:	mov    esi,0x67d3ffef
  4226c7:	xchg   ecx,edi
  4226c9:	adc    al,0xe9
  4226cb:	push   esi
  4226cc:	fldenv [esi-0x5a]
  4226cf:	iret   
  4226d0:	add    DWORD PTR [eax],eax
  4226d2:	popa   
  4226d3:	add    BYTE PTR [eax],al
  4226d5:	add    BYTE PTR [ecx],ch
  4226d7:	sbb    eax,0x3a4d2435
  4226dc:	xchg   DWORD PTR [esi+0x63],ebx
  4226df:	ret    
  4226e0:	pop    ebp
  4226e1:	xchg   BYTE PTR [ebx],dl
  4226e3:	neg    cl
  4226e5:	mov    edx,0xeb75534c
  4226ea:	inc    edi
  4226eb:	xchg   edx,eax
  4226ec:	jb     0x4226c8
  4226ee:	jo     0x422760
  4226f0:	aad    0xba
  4226f2:	dec    edx
  4226f3:	push   cs
  4226f4:	cmp    ebx,DWORD PTR [eax]
  4226f6:	pop    ss
  4226f7:	jbe    0x422721
  4226f9:	inc    ebp
  4226fa:	mov    ecx,DWORD PTR [eax+ecx*4]
  4226fd:	daa    
  4226fe:	pop    edi
  4226ff:	push   0xffffffd9
  422701:	jnp    0x4226c1
  422703:	popf   
  422704:	xor    BYTE PTR [ebx-0x2f],cl
  422707:	pushf  
  422708:	adc    esp,ebp
  42270a:	idiv   DWORD PTR [ebp-0x710d7a3a]
  422710:	lods   al,BYTE PTR ds:[esi]
  422711:	mov    bh,dl
  422713:	(bad)  [ecx-0x4dd03a6e]
  422719:	push   ebx
  42271a:	mov    edx,0x2991b0c6
  42271f:	inc    esp
  422720:	push   ds
  422721:	shl    DWORD PTR [edx],1
  422723:	sbb    al,0xb3
  422725:	dec    ebp
  422726:	aaa    
  422727:	bsf    esp,esp
  42272a:	ret    
  42272b:	adc    al,0xe8
  42272d:	mov    edi,0x139ddebb
  422732:	bound  eax,QWORD PTR [edi+0x61e857]
  422738:	add    BYTE PTR [eax],al
  42273a:	add    BYTE PTR [eax],al
  42273c:	add    BYTE PTR [eax],al
  42273e:	xchg   DWORD PTR [ebx+edx*8],ecx
  422741:	fcmovu st,st(3)
  422743:	fisttp WORD PTR [edi+0x640ccb5d]
  422749:	push   ss
  42274a:	mov    cl,0xee
  42274c:	imul   edi,DWORD PTR [ecx],0x7
  42274f:	rol    BYTE PTR [ecx],1
  422751:	add    BYTE PTR [ecx+0x0],ah
  422754:	add    BYTE PTR [eax],al
  422756:	mov    ebx,0x956c2438
  42275b:	sbb    eax,0x4467275
  422760:	xlat   BYTE PTR ds:[ebx]
  422761:	adc    BYTE PTR [esi+ecx*4+0x366852d7],dh
  422768:	mov    ecx,0x5679f472
  42276d:	pop    esi
  42276e:	jg     0x422785
  422770:	fdiv   QWORD PTR [edx]
  422772:	test   BYTE PTR [esi],ch
  422774:	in     eax,dx
  422775:	cmp    eax,0x9b2008f9
  42277a:	jmp    DWORD PTR [edi+0x4d10ffce]
  422780:	pop    ss
  422781:	lea    edi,[ecx-0x54]
  422784:	scas   al,BYTE PTR es:[edi]
  422785:	add    ax,0x2df7
  422789:	pop    edi
  42278a:	out    0x84,al
  42278c:	mov    dl,0x99
  42278e:	loope  0x422800
  422790:	xlat   BYTE PTR ds:[ebx]
  422791:	cmc    
  422792:	data16 jne 0x422795
  422795:	js     0x42275e
  422797:	mov    ah,0xb8
  422799:	je     0x422748
  42279b:	inc    eax
  42279c:	sbb    eax,0x5789a611
  4227a1:	mov    ds:0xa9041f7d,eax
  4227a6:	pop    esp
  4227a7:	jae    0x422822
  4227a9:	outs   dx,DWORD PTR ds:[esi]
  4227aa:	xor    ch,BYTE PTR [eax]
  4227ac:	cmp    BYTE PTR [ebp+0x2],cl
  4227af:	adc    al,0x13
  4227b1:	mov    bl,0xf2
  4227b3:	cwde   
  4227b4:	fmul   QWORD PTR [edi+edi*2]
  4227b7:	add    BYTE PTR [eax],al
  4227b9:	add    BYTE PTR [eax],al
  4227bb:	add    BYTE PTR [eax],al
  4227bd:	add    BYTE PTR [edi-0x28db29d],bl
  4227c3:	jle    0x422784
  4227c5:	out    dx,eax
  4227c6:	sbb    edi,esp
  4227c8:	mov    BYTE PTR [ecx+ebx*2+0x6879593b],dh
  4227cf:	rol    BYTE PTR [ecx],1
  4227d1:	add    BYTE PTR [ecx+0x0],ah
  4227d4:	add    BYTE PTR [eax],al
  4227d6:	ret    
  4227d7:	mov    ds,edx
  4227d9:	retf   
  4227da:	aam    0xfa
  4227dc:	lahf   
  4227dd:	jbe    0x422814
  4227df:	cmc    
  4227e0:	ins    DWORD PTR es:[edi],dx
  4227e1:	mov    dl,0xc8
  4227e3:	enter  0x7ddb,0x0
  4227e7:	stc    
  4227e8:	out    0x3b,eax
  4227ea:	fisubr WORD PTR [esi]
  4227ec:	jb     0x4227fc
  4227ee:	ret    0x5964
  4227f1:	(bad)  
  4227f2:	into   
  4227f3:	shr    al,1
  4227f5:	jle    0x42277d
  4227f7:	pop    edx
  4227f8:	sub    BYTE PTR [ebx+edi*4-0x2b8ed5be],bh
  4227ff:	mov    bl,0xef
  422801:	fs push 0xe2e0564d
  422807:	jl     0x4227ee
  422809:	ss mov cl,0x4e
  42280c:	sbb    bl,BYTE PTR [edi-0x729e2788]
  422812:	jle    0x4227af
  422814:	aad    0x30
  422816:	shl    DWORD PTR [ebx],cl
  422818:	push   0xffffffd0
  42281a:	jnp    0x422899
  42281c:	push   DWORD PTR [ecx-0x33]
  42281f:	int    0x9e
  422821:	jle    0x4227eb
  422823:	pop    esi
  422824:	ret    0xb7fc
  422827:	mov    dh,0x4
  422829:	hlt    
  42282a:	pop    ds
  42282b:	mov    esi,0xeb7cc9e2
  422830:	mov    ?,WORD PTR [edi+0x9]
  422833:	outs   dx,DWORD PTR ds:[esi]
  422834:	loope  0x422870
  422836:	pop    ss
  422837:	add    BYTE PTR [eax],al
  422839:	add    BYTE PTR [eax],al
  42283b:	add    BYTE PTR [eax],al
  42283d:	add    BYTE PTR [eax+0x23],dh
  422840:	and    eax,0x7c6f7769
  422845:	cmp    esp,DWORD PTR [eax+0x6bbcee1c]
  42284b:	push   es
  42284c:	or     DWORD PTR [ebp+0x1d0c9],edx
  422852:	popa   
  422853:	add    BYTE PTR [eax],al
  422855:	add    BYTE PTR [edi-0x1cac351e],ah
  42285b:	or     al,0x67
  42285d:	pushf  
  42285e:	retf   
  42285f:	out    dx,al
  422860:	shr    bl,cl
  422862:	adc    ch,BYTE PTR [ebp+0x5c420d3a]
  422868:	pushf  
  422869:	jge    0x4227f2
  42286b:	push   ecx
  42286c:	popa   
  42286d:	ficom  DWORD PTR [eax]
  42286f:	pop    ebp
  422870:	push   0xbe2d565c
  422875:	pop    es
  422876:	inc    esi
  422877:	sahf   
  422878:	pop    edi
  422879:	js     0x4228ed
  42287b:	fnsave [ebx+esi*8+0x2d]
  42287f:	loop   0x422827
  422881:	inc    ebx
  422882:	sub    ebp,DWORD PTR [edx-0x4ff9e234]
  422888:	dec    edx
  422889:	and    DWORD PTR [edi+ebp*8-0x48],eax
  42288d:	retf   
  42288e:	lea    edx,[ebx+0x19d9c65e]
  422894:	nop
  422895:	test   DWORD PTR [ebx],esp
  422897:	or     eax,0x726acaf5
  42289c:	and    BYTE PTR [edx+eax*2-0x63bad600],al
  4228a3:	pop    edx
  4228a4:	in     eax,0x17
  4228a6:	cld    
  4228a7:	retf   
  4228a8:	mov    DWORD PTR [ecx],ecx
  4228aa:	scas   al,BYTE PTR es:[edi]
  4228ab:	ja     0x4228b1
  4228ad:	mov    ecx,0x4ebb139d
  4228b2:	bound  eax,QWORD PTR [ebx+0x1d1216]
  4228b8:	add    BYTE PTR [eax],al
  4228ba:	add    BYTE PTR [eax],al
  4228bc:	add    BYTE PTR [eax],al
  4228be:	xchg   esp,eax
  4228bf:	nop
  4228c0:	ffree  st(0)
  4228c2:	(bad)  
  4228c4:	popf   
  4228c5:	aam    0x57
  4228c7:	(bad)
  4228cb:	dec    ecx
  4228cc:	and    al,ch
  4228ce:	sub    dl,cl
  4228d0:	add    DWORD PTR [eax],eax
  4228d2:	popa   
  4228d3:	add    BYTE PTR [eax],al
  4228d5:	add    BYTE PTR [esi],bh
  4228d7:	mov    al,0x38
  4228d9:	dec    ebp
  4228da:	xor    al,0xb8
  4228dc:	pushf  
  4228dd:	inc    esi
  4228de:	adc    al,0x55
  4228e0:	sbb    ebp,DWORD PTR [ebx]
  4228e2:	push   0x722b7d97
  4228e7:	sub    BYTE PTR [edi+0x3a],al
  4228ea:	cs push es
  4228ec:	and    eax,edx
  4228ee:	(bad)  
  4228f0:	dec    ecx
  4228f1:	dec    eax
  4228f2:	fdivrp st(1),st
  4228f4:	into   
  4228f5:	jmp    0x4228d9
  4228f7:	mov    DWORD PTR [edi-0x17],esi
  4228fa:	das    
  4228fb:	push   ebp
  4228fc:	pop    ss
  4228fd:	and    BYTE PTR [eax+0x69847dff],0x1f
  422904:	mov    eax,ds:0x20a53971
  422909:	mov    dh,0x8b
  42290b:	or     bh,BYTE PTR [esi+edi*1+0xe]
  42290f:	adc    DWORD PTR [edi+0x48],0xffffffc2
  422913:	out    0xdb,al
  422915:	or     bh,BYTE PTR [edx-0xc3e5b35]
  42291b:	pop    esp
  42291c:	cmp    al,0x35
  42291e:	push   ds
  42291f:	xor    esi,DWORD PTR [eax+0x1d9678a1]
  422925:	jle    0x4229a0
  422927:	pop    edx
  422928:	loop   0x4228d8
  42292a:	xchg   BYTE PTR [esi-0x56104487],al
  422930:	xlat   BYTE PTR ds:[ebx]
  422931:	and    ch,dh
  422933:	cdq    
  422934:	xchg   edx,eax
  422935:	mov    ds:0x3d,al
  42293a:	add    BYTE PTR [eax],al
  42293c:	add    BYTE PTR [eax],al
  42293e:	hlt    
  42293f:	mov    dl,0x32
  422941:	(bad)  
  422942:	jbe    0x42291a
  422944:	hlt    
  422945:	mov    dl,0xb1
  422947:	and    al,0xfe
  422949:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42294a:	lea    edx,[edx+0x12]
  42294d:	adc    al,0x8b
  42294f:	rol    DWORD PTR [ecx],1
  422951:	add    BYTE PTR [ecx+0x0],ah
  422954:	add    BYTE PTR [eax],al
  422956:	adc    bh,BYTE PTR [esi+0x5952eaa6]
  42295c:	jmp    0xb204bd4
  422961:	dec    eax
  422962:	adc    al,0xdf
  422964:	mov    esp,0x9b72e026
  422969:	sbb    al,BYTE PTR [esi+0x5d3eacd7]
  42296f:	out    dx,al
  422970:	cli    
  422971:	push   cs
  422972:	jge    0x4229f2
  422974:	sbb    dl,BYTE PTR [edi-0x79c89b4a]
  42297a:	xor    BYTE PTR [ecx],bh
  42297c:	or     ecx,DWORD PTR [ecx+0x58]
  42297f:	xchg   cl,ah
  422981:	mov    al,0x78
  422983:	in     eax,0xc6
  422985:	cwde   
  422986:	sub    eax,0x2cfc3e0e
  42298b:	jb     0x42294e
  42298d:	mov    WORD PTR [edi],cs
  42298f:	scas   al,BYTE PTR es:[edi]
  422990:	mov    cl,0x61
  422992:	fist   DWORD PTR [ebx]
  422994:	cmp    al,0x84
  422996:	xchg   esi,eax
  422997:	aad    0xef
  422999:	leave  
  42299a:	lahf   
  42299b:	stc    
  42299c:	pop    edx
  42299d:	mov    ds,ebx
  42299f:	sbb    eax,0x77fd9a1e
  4229a4:	arpl   WORD PTR [ebx+0x5442399],cx
  4229aa:	mov    dl,0xf7
  4229ac:	or     DWORD PTR [ebx+ebp*1+0x1e],ebp
  4229b0:	or     bh,dl
  4229b2:	push   eax
  4229b3:	clc    
  4229b4:	sbb    eax,0x9522
  4229b9:	add    BYTE PTR [eax],al
  4229bb:	add    BYTE PTR [eax],al
  4229bd:	add    BYTE PTR [edx],dh
  4229bf:	ror    esi,cl
  4229c1:	mov    ds:0xd37ebfef,al
  4229c6:	sub    edi,DWORD PTR [esi]
  4229c8:	out    0x3f,eax
  4229ca:	aaa    
  4229cb:	push   0x70
  4229cd:	pushf  
  4229ce:	in     al,dx
  4229cf:	rol    DWORD PTR [ecx],1
  4229d1:	add    BYTE PTR [ecx+0x0],ah
  4229d4:	add    BYTE PTR [eax],al
  4229d6:	inc    ebp
  4229d7:	test   eax,0x755fe8e9
  4229dc:	push   edi
  4229dd:	test   DWORD PTR [esi],0xf25aa99c
  4229e3:	outs   dx,BYTE PTR ds:[esi]
  4229e4:	add    esp,DWORD PTR [esi+0x13]
  4229e7:	pop    es
  4229e8:	lahf   
  4229e9:	fwait
  4229ea:	cli    
  4229eb:	mov    esi,0x4c718c84
  4229f0:	cmp    edi,DWORD PTR [ebx+eax*1+0x297a3c2c]
  4229f7:	dec    ebx
  4229f8:	in     al,dx
  4229f9:	and    al,0x79
  4229fb:	jae    0x4229e6
  4229fd:	pop    esi
  4229fe:	(bad)  
  4229ff:	nop
  422a00:	mov    esi,es
  422a02:	das    
  422a03:	or     BYTE PTR [ebp-0x41],bl
  422a06:	adc    al,0xe8
  422a08:	call   0xe320:0x6014a758
  422a0f:	ror    DWORD PTR ss:[esp-0x33],cl
  422a14:	add    edi,esi
  422a16:	jg     0x422a8b
  422a18:	js     0x4229c4
  422a1a:	pop    esi
  422a1b:	and    edi,DWORD PTR [esi+0x3b]
  422a1e:	pop    ss
  422a1f:	inc    esp
  422a20:	mov    bl,0x8d
  422a22:	dec    edx
  422a23:	cwde   
  422a24:	and    al,0x3
  422a26:	and    DWORD PTR [ecx+0x7a5e2a8a],esi
  422a2c:	cs gs sbb DWORD PTR fs:[esi],edi
  422a31:	sbb    ch,BYTE PTR [ebp+0x2f8b4f32]
  422a37:	add    BYTE PTR [eax],al
  422a39:	add    BYTE PTR [eax],al
  422a3b:	add    BYTE PTR [eax],al
  422a3d:	add    bl,bl
  422a3f:	in     eax,dx
  422a40:	outs   dx,BYTE PTR ds:[esi]
  422a41:	and    bh,BYTE PTR [esi-0x5d]
  422a44:	(bad)  
  422a46:	pop    esi
  422a47:	(bad)  
  422a48:	mov    DWORD PTR [ebp-0x7ada0845],ecx
  422a4e:	dec    ebp
  422a4f:	rol    BYTE PTR [ecx],cl
  422a51:	add    BYTE PTR [ecx+0x0],ah
  422a54:	add    BYTE PTR [eax],al
  422a56:	add    ch,dl
  422a58:	jns    0x422a75
  422a5a:	jns    0x422a0d
  422a5c:	test   BYTE PTR [edi],0x42
  422a5f:	and    esi,ebp
  422a61:	or     DWORD PTR [ecx-0x534bf28],ecx
  422a67:	(bad)  
  422a6a:	pop    ds
  422a6b:	xchg   ebx,eax
  422a6c:	out    0xe4,al
  422a6e:	pop    edi
  422a6f:	arpl   WORD PTR ss:[edx],bp
  422a72:	push   ds
  422a73:	hlt    
  422a74:	in     al,0x5a
  422a76:	xor    BYTE PTR [edi-0x6db0c10c],bl
  422a7c:	push   edx
  422a7d:	adc    esi,DWORD PTR [ebp+0x4e9872ba]
  422a83:	(bad)  
  422a85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a86:	mov    dl,0xec
  422a88:	add    al,BYTE PTR [edi]
  422a8a:	(bad)  
  422a8b:	sbb    BYTE PTR [edi],bh
  422a8d:	fcomi  st,st(4)
  422a8f:	dec    edx
  422a90:	and    eax,ecx
  422a92:	pop    edx
  422a93:	sub    eax,0x3e65746
  422a98:	call   0x96a1e7b2
  422a9d:	and    DWORD PTR ds:0x4add2d6d,edx
  422aa3:	pop    ebp
  422aa4:	aad    0x15
  422aa6:	retf   0x7e13
  422aa9:	mov    al,ds:0xc314583e
  422aae:	jmp    0x422a30
  422ab0:	mov    dl,0x58
  422ab2:	cmp    dh,cl
  422ab4:	lock adc dl,bl
  422ab7:	add    BYTE PTR [eax],al
  422ab9:	add    BYTE PTR [eax],al
  422abb:	add    BYTE PTR [eax],al
  422abd:	add    BYTE PTR ds:0x6f976b22,al
  422ac3:	(bad)  
  422ac5:	mov    dl,0x66
  422ac7:	and    BYTE PTR [esi-0x26ffdf96],ah
  422acd:	mov    ds:0x1d2ae,al
  422ad2:	popa   
  422ad3:	add    BYTE PTR [eax],al
  422ad5:	add    BYTE PTR [edi+0xd],ch
  422ad8:	(bad)  
  422ad9:	xor    BYTE PTR [edx+edi*1+0x5346c5de],al
  422ae0:	pop    es
  422ae1:	push   cs
  422ae2:	test   bl,0xb8
  422ae5:	xchg   edi,eax
  422ae6:	dec    edx
  422ae7:	scas   eax,DWORD PTR es:[edi]
  422ae8:	adc    edi,DWORD PTR [ebx+0x6ba19b61]
  422aee:	xchg   ecx,eax
  422aef:	or     eax,0xee797f23
  422af4:	mov    esp,0x1c7026a9
  422af9:	pusha  
  422afa:	icebp  
  422afb:	mov    dl,0x21
  422afd:	lea    eax,[eax]
  422aff:	push   edi
  422b00:	rcr    DWORD PTR [esi-0xd58c75b],0x5b
  422b07:	jl     0x422b4a
  422b09:	push   esp
  422b0a:	pop    ebx
  422b0b:	pop    esi
  422b0c:	inc    ecx
  422b0d:	push   0x985383ad
  422b12:	inc    edx
  422b13:	sbb    edx,DWORD PTR [esi+0x69ceaab]
  422b19:	out    0xea,al
  422b1b:	jns    0x422b5a
  422b1d:	shr    DWORD PTR [ebx],cl
  422b1f:	jbe    0x422b2b
  422b21:	outs   dx,BYTE PTR ds:[esi]
  422b22:	cmp    BYTE PTR [eax-0x7d],cl
  422b25:	mov    al,0x7d
  422b27:	stc    
  422b28:	mov    eax,gs:0x4c72ac74
  422b2e:	adc    al,0xb
  422b30:	aaa    
  422b31:	icebp  
  422b32:	jle    0x422bac
  422b34:	fs adc al,0xbb
  422b37:	add    BYTE PTR [eax],al
  422b39:	add    BYTE PTR [eax],al
  422b3b:	add    BYTE PTR [eax],al
  422b3d:	add    BYTE PTR [ebx+0x7fd924d4],cl
  422b43:	stc    
  422b44:	call   esi
  422b46:	into   
  422b47:	inc    ebp
  422b48:	mov    bh,0x11
  422b4a:	push   edx
  422b4b:	jecxz  0x422b14
  422b4d:	fisttp QWORD PTR [edi]
  422b4f:	rol    DWORD PTR [ecx],cl
  422b51:	add    BYTE PTR [ecx+0x0],ah
  422b54:	add    BYTE PTR [eax],al
  422b56:	js     0x422b0c
  422b58:	mov    ebp,0xe2cdffd9
  422b5d:	jl     0x422b4e
  422b5f:	repnz xor al,0x77
  422b62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b63:	push   esi
  422b64:	inc    ebp
  422b65:	xchg   ecx,eax
  422b66:	test   DWORD PTR [eax],edi
  422b68:	mov    ecx,eax
  422b6a:	sub    al,0x4e
  422b6c:	inc    esi
  422b6d:	mov    bh,0x0
  422b6f:	je     0x422af3
  422b71:	std    
  422b72:	repnz adc dl,dl
  422b75:	ins    DWORD PTR es:[edi],dx
  422b76:	sub    DWORD PTR [ecx],0xf
  422b79:	imul   DWORD PTR [esi*2+0x6c32b365]
  422b80:	loopne 0x422bc0
  422b82:	add    eax,0xaa504ca0
  422b87:	push   0x33
  422b89:	or     DWORD PTR [esi+0x6dcdd3fd],esi
  422b8f:	mov    al,BYTE PTR [edx-0x2a]
  422b92:	pushf  
  422b93:	repnz aas 
  422b95:	(bad)
  422b99:	out    0x5d,eax
  422b9b:	jle    0x422b4d
  422b9d:	adc    al,0x75
  422b9f:	lock fcomp QWORD PTR [esi+0x77]
  422ba3:	adc    al,0xeb
  422ba5:	(bad)  
  422ba6:	xlat   BYTE PTR ds:[ebx]
  422ba7:	mov    ?,WORD PTR [ebp-0x1d]
  422baa:	test   BYTE PTR [edx],dh
  422bac:	dec    edx
  422bad:	mov    ds:0x7b9c65e6,al
  422bb2:	jge    0x422b6a
  422bb4:	out    dx,al
  422bb5:	stos   DWORD PTR es:[edi],eax
  422bb6:	push   ss
  422bb7:	add    BYTE PTR [eax],al
  422bb9:	add    BYTE PTR [eax],al
  422bbb:	add    BYTE PTR [eax],al
  422bbd:	add    dh,bl
  422bbf:	sub    DWORD PTR [eax-0x210c002e],ebx
  422bc5:	sub    eax,0x4af35f6
  422bca:	sti    
  422bcb:	out    0x43,al
  422bcd:	daa    
  422bce:	jo     0x422ba3
  422bd0:	add    DWORD PTR [eax],eax
  422bd2:	popa   
  422bd3:	add    BYTE PTR [eax],al
  422bd5:	add    BYTE PTR [edx+ebx*4],ch
  422bd8:	pop    ebx
  422bd9:	push   ebx
  422bda:	in     al,dx
  422bdb:	dec    ecx
  422bdc:	cmp    DWORD PTR [esp+esi*8-0x78f4115d],edi
  422be3:	ror    BYTE PTR [ecx+edx*2+0x3c],0x2d
  422be8:	aas    
  422be9:	add    DWORD PTR [edx-0xb],edx
  422bec:	push   ebx
  422bed:	jns    0x422c01
  422bef:	sbb    cl,BYTE PTR [ebx+0xf1987b6]
  422bf5:	rol    BYTE PTR [ecx-0x77],1
  422bf8:	shl    BYTE PTR [eax+0x720faa91],1
  422bfe:	sahf   
  422bff:	push   esp
  422c00:	outs   dx,DWORD PTR ds:[esi]
  422c01:	sbb    eax,0x4a7fd952
  422c06:	in     al,0xb6
  422c08:	sahf   
  422c09:	bound  ebp,QWORD PTR [edx-0x359551d6]
  422c0f:	in     eax,dx
  422c10:	pop    edx
  422c11:	idiv   edx
  422c13:	push   ebx
  422c14:	sbb    al,0xd9
  422c16:	int    0xde
  422c18:	je     0x422bc8
  422c1a:	add    al,0x55
  422c1c:	mov    DWORD PTR [edi],esi
  422c1e:	mov    al,ds:0x274594bc
  422c23:	out    dx,al
  422c24:	mov    es,WORD PTR ds:0xbad8322e
  422c2a:	call   0x4e3a:0x3e0ef769
  422c31:	push   ebx
  422c32:	mov    ds:0xb53c0e1e,eax
  422c37:	add    BYTE PTR [eax],al
  422c39:	add    BYTE PTR [eax],al
  422c3b:	add    BYTE PTR [eax],al
  422c3d:	add    BYTE PTR [esi+0x3f],cl
  422c40:	int3   
  422c41:	sbb    eax,0x7fdffffd
  422c46:	out    dx,eax
  422c47:	loopne 0x422c5f
  422c49:	lods   al,BYTE PTR ds:[esi]
  422c4a:	(bad)  
  422c4b:	fnstsw WORD PTR [ecx+0x14]
  422c4e:	rcl    ebx,1
  422c50:	add    DWORD PTR [eax],eax
  422c52:	popa   
  422c53:	add    BYTE PTR [eax],al
  422c55:	add    BYTE PTR [eax-0xfa4deb2],ah
  422c5b:	adc    esi,DWORD PTR [eax]
  422c5d:	adc    dl,BYTE PTR [edx]
  422c5f:	jns    0x422c34
  422c61:	xchg   ebp,eax
  422c62:	addr16 stc 
  422c64:	test   BYTE PTR ds:0xe06de0b3,cl
  422c6a:	dec    esp
  422c6b:	loopne 0x422cc7
  422c6d:	cmp    bh,BYTE PTR [eax-0x24]
  422c70:	gs mov cl,0x72
  422c73:	les    esi,FWORD PTR [ecx+0x6d]
  422c76:	dec    ebp
  422c77:	fdiv   st,st(5)
  422c79:	push   esi
  422c7a:	fsubr  DWORD PTR ds:0x9367168d
  422c80:	xor    dl,BYTE PTR [eax-0x5190a1f0]
  422c86:	dec    edx
  422c87:	test   al,0x50
  422c89:	add    eax,0x2af13216
  422c8e:	inc    esp
  422c8f:	inc    ebp
  422c90:	add    esi,ebp
  422c92:	sbb    eax,DWORD PTR [edx]
  422c94:	inc    esi
  422c95:	adc    eax,0xf743dddf
  422c9a:	mov    BYTE PTR ss:[edi-0x2565ca73],cl
  422ca1:	fstp   DWORD PTR [edi+0x2e]
  422ca4:	mov    ds:0xc87e3ab2,al
  422ca9:	jae    0x422d24
  422cab:	ss mov esp,0x7e257893
  422cb1:	rep ins BYTE PTR es:[edi],dx
  422cb3:	sbb    ch,BYTE PTR [ecx+0xef52]
  422cb9:	add    BYTE PTR [eax],al
  422cbb:	add    BYTE PTR [eax],al
  422cbd:	add    BYTE PTR [esi],bl
  422cbf:	test   eax,0x7ff735f6
  422cc4:	fild   QWORD PTR [ebx-0x5f9ed871]
  422cca:	cmc    
  422ccb:	sub    ch,dl
  422ccd:	imul   esi,DWORD PTR [edx],0x610001d4
  422cd3:	add    BYTE PTR [eax],al
  422cd5:	add    ch,bl
  422cd7:	out    dx,eax
  422cd8:	fldcw  WORD PTR [ebp+0x6d]
  422cdb:	mov    WORD PTR [ebx+0x3a8ec466],gs
  422ce1:	lds    ebp,FWORD PTR [ecx+0x54]
  422ce4:	push   es
  422ce5:	mov    ds:0x608dc516,al
  422cea:	push   cs
  422ceb:	fs arpl cx,bx
  422cee:	popf   
  422cef:	lods   al,BYTE PTR ds:[esi]
  422cf0:	cmp    bl,bl
  422cf2:	xchg   esi,eax
  422cf3:	aam    0xa8
  422cf5:	cwde   
  422cf6:	lods   eax,DWORD PTR ds:[esi]
  422cf7:	xchg   ebx,eax
  422cf8:	jl     0x422c82
  422cfa:	je     0x422cfd
  422cfc:	xor    esp,eax
  422cfe:	and    DWORD PTR [ecx+0x68],edi
  422d01:	hlt    
  422d02:	mov    ebp,DWORD PTR [edx+0x1a62b412]
  422d08:	in     eax,dx
  422d09:	mov    ecx,0x37cbcfdb
  422d0e:	cmp    eax,0x8970b736
  422d13:	jbe    0x422cfa
  422d15:	fadd   DWORD PTR [ecx]
  422d17:	dec    esi
  422d18:	sbb    eax,0xe18f5414
  422d1d:	mov    al,ds:0x1a9a039b
  422d22:	stc    
  422d23:	(bad)  
  422d24:	adc    edx,DWORD PTR [ecx+0x580ccea3]
  422d2a:	ins    DWORD PTR es:[edi],dx
  422d2b:	jo     0x422d30
  422d2d:	shl    BYTE PTR [edi+0x55],cl
  422d30:	in     al,dx
  422d31:	pop    ebp
  422d32:	mov    ebp,cr2
  422d35:	pop    es
  422d36:	sub    al,BYTE PTR [eax]
  422d38:	add    BYTE PTR [eax],al
  422d3a:	add    BYTE PTR [eax],al
  422d3c:	add    BYTE PTR [eax],al
  422d3e:	fwait
  422d3f:	loope  0x422dae
  422d41:	sub    eax,0xf7dbad7f
  422d46:	sar    BYTE PTR [ebx],cl
  422d48:	(bad)  
  422d49:	add    BYTE PTR [ebx],bl
  422d4b:	jp     0x216c0ab
  422d51:	add    BYTE PTR [ecx+0x0],ah
  422d54:	add    BYTE PTR [eax],al
  422d56:	nop
  422d57:	loopne 0x422d77
  422d59:	mov    ah,0xb5
  422d5b:	fs int3 
  422d5d:	mov    bh,0x9c
  422d5f:	cmp    BYTE PTR [edx+0x69cff57c],ch
  422d65:	or     al,0x9
  422d67:	sar    DWORD PTR [esi+edi*1],1
  422d6a:	adc    BYTE PTR [edx],0xb4
  422d6d:	out    dx,eax
  422d6e:	dec    ebx
  422d6f:	push   0x8043dbfe
  422d74:	add    DWORD PTR [ebx],ebx
  422d76:	mov    dl,0xed
  422d78:	xchg   ecx,eax
  422d79:	or     BYTE PTR [esi],bh
  422d7b:	sbb    bh,BYTE PTR [edi+0x76]
  422d7e:	aam    0x19
  422d80:	adc    BYTE PTR [edi-0x26],ch
  422d83:	stos   DWORD PTR es:[edi],eax
  422d84:	adc    BYTE PTR [esi-0x5e],bl
  422d87:	sub    BYTE PTR [edx-0x6e245c18],0x15
  422d8e:	rol    DWORD PTR [ecx+0x2],0x26
  422d92:	sbb    al,0xb7
  422d94:	xchg   cl,al
  422d96:	jg     0x422d9c
  422d98:	xor    al,0x7a
  422d9a:	add    esp,ebp
  422d9c:	hlt    
  422d9d:	ss pusha 
  422d9f:	cmp    ecx,ebx
  422da1:	sub    eax,0x72ec101d
  422da6:	jbe    0x422d54
  422da8:	imul   ebx,DWORD PTR [esi],0xffffff87
  422dab:	xchg   ecx,eax
  422dac:	in     eax,dx
  422dad:	aaa    
  422dae:	mov    ebx,DWORD PTR [eax+esi*2+0x192fffb2]
  422db5:	repnz add BYTE PTR [bx+si],al
  422db9:	add    BYTE PTR [eax],al
  422dbb:	add    BYTE PTR [eax],al
  422dbd:	add    BYTE PTR [eax],cl
  422dbf:	div    DWORD PTR [edi+0x4a]
  422dc2:	dec    edx
  422dc4:	cmp    eax,0x2e8eedf7
  422dc9:	dec    eax
  422dca:	push   esi
  422dcb:	xor    eax,0xd4f4edba
  422dd0:	add    DWORD PTR [eax],eax
  422dd2:	popa   
  422dd3:	add    BYTE PTR [eax],al
  422dd5:	add    BYTE PTR [edx],bh
  422dd7:	repz cwde 
  422dd9:	lahf   
  422dda:	and    cl,BYTE PTR [ebp+0x4caaaa06]
  422de0:	pushf  
  422de1:	(bad)  
  422de2:	sbb    al,0xec
  422de4:	sub    BYTE PTR [ebp+0x19],ah
  422de7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422de8:	dec    edx
  422de9:	mov    al,0xe3
  422deb:	cmp    DWORD PTR [edx-0x2469d056],esi
  422df1:	sub    BYTE PTR [ebx],bl
  422df3:	pop    edx
  422df4:	push   ds
  422df5:	xchg   ecx,eax
  422df6:	add    bh,BYTE PTR [edx+0x5445311d]
  422dfc:	arpl   WORD PTR [ecx],sp
  422dfe:	fidiv  DWORD PTR [edx-0xb61960d]
  422e04:	pop    esp
  422e05:	dec    ebp
  422e06:	lea    esi,[eax+eax*2]
  422e09:	in     al,0x4b
  422e0b:	dec    ebx
  422e0c:	xor    esi,DWORD PTR [edi]
  422e0e:	jmp    0xbbd9:0xec3af873
  422e15:	jns    0x422dfe
  422e17:	cmp    DWORD PTR [edi+0x60f4baed],0x55
  422e1e:	pop    es
  422e1f:	or     DWORD PTR [edx],esi
  422e21:	fst    QWORD PTR [eax+0x1b]
  422e24:	rcl    BYTE PTR [eax],cl
  422e26:	jg     0x422e8b
  422e28:	lock xchg edi,eax
  422e2a:	imul   ebp,esi,0x79ebbbf2
  422e30:	xor    esi,DWORD PTR [ecx+0x45800b86]
  422e36:	xchg   edi,eax
  422e37:	add    BYTE PTR [eax],al
  422e39:	add    BYTE PTR [eax],al
  422e3b:	add    BYTE PTR [eax],al
  422e3d:	add    BYTE PTR [esi],dh
  422e3f:	arpl   WORD PTR [eax-0x10],bp
  422e42:	jge    0x422e3f
  422e44:	mov    esi,0x8c7853e7
  422e49:	daa    
  422e4a:	mov    eax,0x5588173e
  422e4f:	aad    0x1
  422e51:	add    BYTE PTR [ecx+0x0],ah
  422e54:	add    BYTE PTR [eax],al
  422e56:	adc    al,0xc2
  422e58:	pop    es
  422e59:	dec    esi
  422e5b:	fist   WORD PTR [ecx-0x381d5532]
  422e61:	sub    al,0x67
  422e63:	iret   
  422e64:	into   
  422e65:	push   edx
  422e66:	pop    edx
  422e67:	retf   0x50da
  422e6a:	push   cs
  422e6b:	adc    DWORD PTR [ebx-0x26],edx
  422e6e:	jg     0x422e57
  422e70:	add    DWORD PTR [edx],0xd0d0d622
  422e76:	pop    eax
  422e77:	call   0xa1bd5984
  422e7c:	add    esi,DWORD PTR [edi+0x74f66b76]
  422e82:	jmp    DWORD PTR [edi-0x725437f5]
  422e88:	je     0x422e74
  422e8a:	call   0xbaa:0xf4cc94af
  422e91:	xchg   edi,eax
  422e92:	pop    ebx
  422e93:	stos   DWORD PTR es:[edi],eax
  422e94:	cmp    edi,DWORD PTR [edi]
  422e96:	scas   al,BYTE PTR es:[edi]
  422e97:	jae    0x422f03
  422e99:	push   ss
  422e9a:	adc    bl,BYTE PTR [esi-0x3c0ab1c6]
  422ea0:	sub    cl,BYTE PTR ds:0x296e6bc3
  422ea6:	in     al,0x1f
  422ea8:	adc    ebx,DWORD PTR [edi]
  422eaa:	jb     0x422ef1
  422eac:	mov    bl,0x5b
  422eae:	aas    
  422eaf:	test   DWORD PTR [ebx+eax*4-0x44188760],edx
  422eb6:	and    eax,0x0
  422ebb:	add    BYTE PTR [eax],al
  422ebd:	add    BYTE PTR [edi],ah
  422ebf:	push   ecx
  422ec0:	imul   esi,DWORD PTR [ecx-0x28004681],0x8274b3d8
  422eca:	dec    eax
  422ecb:	add    eax,0xdc881c8a
  422ed0:	add    DWORD PTR [eax],eax
  422ed2:	popa   
  422ed3:	add    BYTE PTR [eax],al
  422ed5:	add    BYTE PTR [ebp+ecx*2-0x624fca80],cl
  422edc:	xchg   esi,eax
  422edd:	mov    esp,DWORD PTR [edi-0x3a]
  422ee0:	clc    
  422ee1:	mov    ?,WORD PTR [ebx-0x50]
  422ee4:	pop    esi
  422ee5:	jecxz  0x422f00
  422ee7:	xor    BYTE PTR [eax],bh
  422ee9:	mov    ds:0x8b3abff7,al
  422eee:	mov    al,bl
  422ef0:	mov    esp,DWORD PTR [edx-0x4c82787a]
  422ef6:	sbb    bh,BYTE PTR [ebx-0x59fd3336]
  422efc:	out    dx,al
  422efd:	fst    QWORD PTR [edx+ebp*8-0x9351242]
  422f04:	fidiv  DWORD PTR [ecx+0x35a83f4d]
  422f0a:	int    0x34
  422f0c:	cmp    ebx,DWORD PTR [ebp+ecx*1-0x15]
  422f10:	faddp  st(4),st
  422f12:	jne    0x422ecb
  422f14:	sbb    ecx,esp
  422f16:	loop   0x422eeb
  422f18:	add    ecx,esp
  422f1a:	adc    ah,BYTE PTR [ecx]
  422f1c:	addr16 jnp 0x422ea0
  422f1f:	or     esp,DWORD PTR [ecx]
  422f21:	push   ebp
  422f22:	pop    esi
  422f23:	and    BYTE PTR [ebx],dl
  422f25:	ret    
  422f26:	mov    es,WORD PTR [edx+0x6f]
  422f29:	ins    DWORD PTR es:[edi],dx
  422f2a:	xlat   BYTE PTR ds:[ebx]
  422f2b:	jge    0x422ecb
  422f2d:	jl     0x422f8d
  422f2f:	(bad)
  422f32:	push   es
  422f33:	mov    cl,0x60
  422f35:	cmp    BYTE PTR [eax+eax*1],dl
  422f38:	add    BYTE PTR [eax],al
  422f3a:	add    BYTE PTR [eax],al
  422f3c:	add    BYTE PTR [eax],al
  422f3e:	daa    
  422f3f:	ss lahf 
  422f41:	xor    DWORD PTR [edi+0x1536afb9],ebx
  422f47:	and    eax,0xeccf075b
  422f4c:	mov    esi,0x1dce99d
  422f51:	add    BYTE PTR [ecx+0x0],ah
  422f54:	add    BYTE PTR [eax],al
  422f56:	sub    ch,BYTE PTR [edi+ecx*2+0x656ac09a]
  422f5d:	sub    ch,BYTE PTR [ebp+0x3]
  422f60:	mov    edi,0x7a6e0f64
  422f65:	jno    0x422fbc
  422f67:	cmp    ch,BYTE PTR [esi+0xd]
  422f6a:	and    esi,esp
  422f6c:	jl     0x422fbb
  422f6e:	iret   
  422f6f:	repz mov edi,0x89c21a5c
  422f75:	cs cwde 
  422f77:	mov    ebp,esp
  422f79:	mov    ah,0x5d
  422f7b:	xor    eax,0x3b236947
  422f80:	xor    ebp,DWORD PTR [esi]
  422f82:	xor    al,0xd4
  422f84:	cld    
  422f85:	bound  ebx,QWORD PTR [ebx+0x272179bb]
  422f8b:	or     eax,0xc65b6af4
  422f90:	push   ebx
  422f91:	rcr    bh,1
  422f93:	out    0x8b,eax
  422f95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f96:	dec    edx
  422f97:	popf   
  422f98:	test   al,0xef
  422f9a:	imul   ebp,DWORD PTR [eax+0x5a],0x606175c5
  422fa1:	mov    esi,0xcad96a8
  422fa6:	das    
  422fa7:	mov    dh,0x10
  422fa9:	jp     0x422ff2
  422fab:	das    
  422fac:	jmp    0x18eee163
  422fb1:	jmp    edi
  422fb3:	or     cl,BYTE PTR [esi+0xd4b0]
  422fb9:	add    BYTE PTR [eax],al
  422fbb:	add    BYTE PTR [eax],al
  422fbd:	add    BYTE PTR [edi],dh
  422fbf:	(bad)  
  422fc0:	out    0xc2,eax
  422fc2:	mul    ebx
  422fc4:	aaa    
  422fc5:	cmc    
  422fc6:	xchg   ecx,eax
  422fc7:	call   0x3577:0x6af6eef4
  422fce:	dec    edx
  422fcf:	fld    QWORD PTR [ecx]
  422fd1:	add    BYTE PTR [ecx+0x0],ah
  422fd4:	add    BYTE PTR [eax],al
  422fd6:	sub    dl,dh
  422fd8:	dec    esi
  422fd9:	dec    esp
  422fda:	(bad)  
  422fdb:	mov    bh,bl
  422fdd:	js     0x422ff8
  422fdf:	(bad)  
  422fe0:	mov    ebx,0xf0acf803
  422fe5:	mov    al,ds:0x7a6de419
  422fea:	ret    0x3ad6
  422fed:	cmc    
  422fee:	jns    0x42305b
  422ff0:	sub    DWORD PTR [ebx],esi
  422ff2:	lahf   
  422ff3:	inc    ebp
  422ff4:	call   0xcc63:0xb59ca79e
  422ffb:	lods   al,BYTE PTR ds:[esi]
  422ffc:	je     0x42305b
  422ffe:	inc    esp
  422fff:	(bad)  
  423003:	inc    ebp
  423004:	in     eax,0xb3
  423006:	jecxz  0x422fb3
  423008:	or     BYTE PTR [edi],dh
  42300a:	add    eax,0xc0a33e27
  42300f:	push   esi
  423010:	or     eax,0xae578b0e
  423015:	mov    edi,0xb061c49b
  42301a:	int3   
  42301b:	sbb    eax,0xb157dfd7
  423020:	xchg   dh,bh
  423022:	js     0x422fd2
  423024:	dec    ebx
  423025:	es mov ecx,?
  423028:	xor    BYTE PTR ds:0x5fb65cff,dh
  42302e:	test   DWORD PTR [ebx],edi
  423030:	adc    esi,DWORD PTR [esi-0x7af4d81e]
  423036:	test   BYTE PTR [eax],0x0
  423039:	add    BYTE PTR [eax],al
  42303b:	add    BYTE PTR [eax],al
  42303d:	add    BYTE PTR [esi],dl
  42303f:	aad    0xdf
  423041:	out    dx,eax
  423042:	fucomip st,st(7)
  423044:	ss std 
  423046:	cmp    BYTE PTR [esi-0x3bda0c6],al
  42304c:	push   eax
  42304d:	push   ds
  42304e:	stos   DWORD PTR es:[edi],eax
  42304f:	fld    QWORD PTR [ecx]
  423051:	add    BYTE PTR [ecx+0x0],ah
  423054:	add    BYTE PTR [eax],al
  423056:	hlt    
  423057:	xor    DWORD PTR [ecx],esi
  423059:	xchg   ecx,eax
  42305a:	add    BYTE PTR [ebp+0x5],ah
  42305d:	test   DWORD PTR [edx],ebp
  42305f:	push   es
  423060:	push   ebx
  423061:	jae    0x4230c3
  423063:	sub    edx,DWORD PTR [edx+edi*4+0x56]
  423067:	push   0xe768abc
  42306c:	cli    
  42306d:	cdq    
  42306e:	xchg   ebp,eax
  42306f:	and    al,0x1
  423071:	add    al,0xeb
  423073:	inc    ebp
  423074:	push   cs
  423075:	push   0x4e552c38
  42307a:	and    eax,0x1d1f77aa
  42307f:	mov    cl,0xf6
  423081:	mov    bh,0x26
  423083:	adc    BYTE PTR ds:0xc1b34e6b,bh
  423089:	jae    0x423082
  42308b:	dec    edi
  42308c:	push   edi
  42308d:	iret   
  42308e:	pusha  
  42308f:	pusha  
  423090:	bound  eax,QWORD PTR [ebx-0x75]
  423093:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423094:	loope  0x42303f
  423096:	pop    ebx
  423097:	xchg   esi,eax
  423098:	popa   
  423099:	dec    esi
  42309a:	popa   
  42309b:	pop    ecx
  42309c:	icebp  
  42309d:	dec    ecx
  42309e:	dec    ebx
  42309f:	mov    ?,WORD PTR [ecx+0x68c4fbb4]
  4230a5:	into   
  4230a6:	adc    al,0x3b
  4230a8:	and    edi,ebx
  4230aa:	hlt    
  4230ab:	(bad)  
  4230ad:	sbb    eax,0x70b4828b
  4230b2:	outs   dx,DWORD PTR ds:[esi]
  4230b3:	dec    edx
  4230b4:	stc    
  4230b5:	xor    ebx,eax
  4230b7:	add    BYTE PTR [eax],al
  4230b9:	add    BYTE PTR [eax],al
  4230bb:	add    BYTE PTR [eax],al
  4230bd:	add    BYTE PTR [esi+0x76],ch
  4230c0:	in     al,0xca
  4230c2:	cld    
  4230c3:	fisubr DWORD PTR [esi-0xa]
  4230c6:	sbb    BYTE PTR [edx+0x48419787],dl
  4230cc:	push   0x1de0c98
  4230d1:	add    BYTE PTR [ecx+0x0],ah
  4230d4:	add    BYTE PTR [eax],al
  4230d6:	sbb    edi,DWORD PTR [ebx-0x4ed8aefc]
  4230dc:	push   es
  4230dd:	mov    eax,ds:0xd6f9cf81
  4230e2:	jns    0x423142
  4230e4:	inc    edi
  4230e5:	sub    ch,dh
  4230e7:	push   edx
  4230e9:	mov    ah,0xc6
  4230eb:	cld    
  4230ec:	ja     0x423163
  4230ee:	pop    es
  4230ef:	aaa    
  4230f0:	jmp    0x3d28:0xea161e9
  4230f7:	and    BYTE PTR [edx+0x5a57a766],ch
  4230fd:	dec    eax
  4230fe:	fimul  WORD PTR [edi]
  423100:	jbe    0x4230ec
  423102:	xor    eax,0xdb2c2cae
  423107:	xchg   ebp,eax
  423108:	hlt    
  423109:	xor    esi,esp
  42310b:	jo     0x42314f
  42310d:	ret    
  42310e:	push   0x4e1e7265
  423113:	daa    
  423114:	lds    esp,FWORD PTR [esi*2-0x71329c33]
  42311b:	push   ds
  42311c:	retf   
  42311d:	and    eax,0x16dbb411
  423122:	gs leave 
  423124:	xchg   DWORD PTR [esi-0x5e22a062],ecx
  42312a:	jle    0x423110
  42312c:	fisubr WORD PTR [ebp-0x72b5bf59]
  423132:	rcl    dh,1
  423134:	stos   DWORD PTR es:[edi],eax
  423135:	outs   dx,DWORD PTR ds:[esi]
  423136:	xchg   BYTE PTR [eax],al
  423138:	add    BYTE PTR [eax],al
  42313a:	add    BYTE PTR [eax],al
  42313c:	add    BYTE PTR [eax],al
  42313e:	cmp    dl,BYTE PTR [edx-0x3c]
  423141:	paddsb mm3,QWORD PTR [edi-0x2e098805]
  423148:	nop
  423149:	shr    DWORD PTR [edi+esi*1],cl
  42314c:	push   ebx
  42314d:	hlt    
  42314e:	ins    DWORD PTR es:[edi],dx
  42314f:	fiadd  WORD PTR [ecx]
  423151:	add    BYTE PTR [ecx+0x0],ah
  423154:	add    BYTE PTR [eax],al
  423156:	leave  
  423157:	imul   esp,DWORD PTR [eax],0xc4799dc2
  42315d:	xchg   ecx,eax
  42315e:	push   esp
  423160:	cmp    eax,0x395a198b
  423165:	pop    esi
  423166:	es idiv bl
  423169:	dec    esp
  42316a:	nop
  42316b:	(bad)  
  42316c:	pop    ds
  42316d:	add    DWORD PTR [edx],esp
  42316f:	mov    dl,0xdd
  423171:	cwde   
  423172:	cmp    al,BYTE PTR [eax+0x7a]
  423175:	std    
  423176:	push   0xffffffee
  423178:	mov    al,ds:0xc351e758
  42317d:	pop    edx
  42317e:	fmul   QWORD PTR [esi]
  423180:	(bad)  
  423181:	jg     0x4231e0
  423183:	adc    eax,0x67c6b6e4
  423188:	push   ebx
  423189:	add    ecx,DWORD PTR [ecx+0x23]
  42318c:	sbb    edi,ebx
  42318e:	stos   BYTE PTR es:[edi],al
  42318f:	ja     0x42317a
  423191:	push   ebp
  423192:	int    0xb2
  423194:	retf   
  423195:	xor    DWORD PTR [ebx+0x7513717b],ebp
  42319b:	pop    ecx
  42319c:	inc    eax
  42319d:	mov    al,cs:0xdbf181f2
  4231a3:	mov    bh,0xe1
  4231a5:	cmp    eax,0x2e8a9ac4
  4231aa:	test   eax,0xb8674511
  4231af:	cmp    DWORD PTR [esi],esp
  4231b1:	pop    ds
  4231b2:	ret    0x7124
  4231b5:	jle    0x423143
  4231b7:	add    BYTE PTR [eax],al
  4231b9:	add    BYTE PTR [eax],al
  4231bb:	add    BYTE PTR [eax],al
  4231bd:	add    BYTE PTR [ebx-0x4293427d],dl
  4231c3:	jle    0x423198
  4231c5:	call   DWORD PTR [eax-0x20]
  4231c8:	cli    
  4231c9:	call   0xdece:0xec77deb4
  4231d0:	add    DWORD PTR [eax],eax
  4231d2:	popa   
  4231d3:	add    BYTE PTR [eax],al
  4231d5:	add    BYTE PTR [ecx-0x6271401a],dh
  4231db:	lahf   
  4231dc:	in     al,dx
  4231dd:	icebp  
  4231de:	out    dx,eax
  4231df:	dec    edx
  4231e0:	ins    BYTE PTR es:[edi],dx
  4231e1:	out    0x27,al
  4231e3:	sub    ecx,DWORD PTR [ebx]
  4231e5:	in     al,0x8
  4231e7:	jmp    0x904b71be
  4231ec:	or     DWORD PTR [ebp+0x31],esp
  4231ef:	xchg   BYTE PTR [edi+0x49f1781e],ah
  4231f5:	test   DWORD PTR [esi+0x20],0xc67d235d
  4231fc:	or     BYTE PTR [ecx+0x3f],0xe1
  423200:	shl    DWORD PTR [ebp+0x1b],cl
  423203:	loopne 0x423192
  423205:	into   
  423206:	popa   
  423207:	mov    ah,0xf1
  423209:	push   esi
  42320a:	push   ss
  42320b:	xchg   ebp,eax
  42320c:	or     BYTE PTR [ecx-0x2c9e673],bh
  423212:	mov    esp,0x485ee6d7
  423217:	jg     0x423274
  423219:	popf   
  42321a:	jo     0x423256
  42321c:	dec    edi
  42321d:	xlat   BYTE PTR ds:[ebx]
  42321e:	push   cs
  42321f:	sahf   
  423220:	enter  0x9a14,0x41
  423224:	xchg   edx,eax
  423225:	add    eax,0xf8830eee
  42322a:	lea    edx,[esi+0x38]
  42322d:	call   0x9169:0xeae66fe7
  423234:	dec    eax
  423235:	mov    BYTE PTR [ecx],dl
  423237:	add    BYTE PTR [eax],al
  423239:	add    BYTE PTR [eax],al
  42323b:	add    BYTE PTR [eax],al
  42323d:	add    ah,bl
  42323f:	fincstp 
  423241:	shl    bh,0xee
  423244:	(bad)  
  423245:	frstor [ecx+eax*1]
  423248:	pop    ebp
  423249:	dec    edi
  42324a:	mov    ds:0x2f4d73e4,eax
  42324f:	fild   WORD PTR [ecx]
  423251:	add    BYTE PTR [ecx+0x0],ah
  423254:	add    BYTE PTR [eax],al
  423256:	call   0xf1e2:0x4cd1c3db
  42325d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42325e:	mov    ds,WORD PTR [edx-0x51edeb04]
  423264:	xor    cl,BYTE PTR [edx-0x61]
  423267:	pop    ss
  423268:	fdiv   QWORD PTR [ebx-0x5f923d18]
  42326e:	test   esi,ebp
  423270:	arpl   WORD PTR [ebp-0x5],di
  423273:	or     dh,BYTE PTR ds:0x613661ab
  423279:	push   es
  42327a:	and    BYTE PTR [eax],dl
  42327c:	loop   0x4231ff
  42327e:	repnz lahf 
  423280:	jne    0x4232ca
  423282:	(bad)  
  423283:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423284:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423285:	sbb    cl,bh
  423287:	jbe    0x423295
  423289:	es adc bh,0xef
  42328d:	lock (bad) 
  42328f:	push   edi
  423291:	dec    esp
  423292:	cld    
  423293:	ret    
  423294:	in     al,0x2e
  423296:	jg     0x42330b
  423298:	ja     0x423295
  42329a:	mov    ebp,0xca2b6bd2
  42329f:	les    ecx,FWORD PTR [esi+edi*2+0x71]
  4232a3:	pop    ebp
  4232a4:	xor    ebp,DWORD PTR [ecx+ebx*8]
  4232a7:	dec    ebp
  4232a8:	mov    dl,0xd4
  4232aa:	das    
  4232ab:	test   al,0xb7
  4232ad:	mov    ds:0xee71a127,eax
  4232b2:	cdq    
  4232b3:	xor    eax,0x5881c4
  4232b8:	add    BYTE PTR [eax],al
  4232ba:	add    BYTE PTR [eax],al
  4232bc:	add    BYTE PTR [eax],al
  4232be:	outs   dx,DWORD PTR ds:[esi]
  4232bf:	mov    ds:0x7edd2ad4,al
  4232c4:	jmp    edi
  4232c6:	push   edx
  4232c7:	fcmovu st,st(5)
  4232c9:	in     eax,0xd9
  4232cb:	mov    esp,0xdf908c38
  4232d0:	add    DWORD PTR [eax],eax
  4232d2:	popa   
  4232d3:	add    BYTE PTR [eax],al
  4232d5:	add    BYTE PTR [edi-0x64e15923],dl
  4232db:	xor    ebx,0xffffffed
  4232de:	mov    ch,0xc0
  4232e0:	loope  0x4232bf
  4232e2:	jnp    0x4232be
  4232e4:	sti    
  4232e5:	hlt    
  4232e6:	js     0x423341
  4232e8:	inc    edx
  4232e9:	xchg   edi,eax
  4232ea:	scas   eax,DWORD PTR es:[edi]
  4232eb:	sbb    cl,BYTE PTR [ebx]
  4232ed:	das    
  4232ee:	ins    DWORD PTR es:[edi],dx
  4232ef:	and    edi,DWORD PTR [ebx+0x7d]
  4232f2:	leave  
  4232f3:	mov    dl,0x2f
  4232f5:	cld    
  4232f6:	(bad)  
  4232f7:	mov    ebx,DWORD PTR [ebx-0x29507231]
  4232fd:	das    
  4232fe:	dec    eax
  4232ff:	pusha  
  423300:	fbstp  TBYTE PTR [eax]
  423302:	cmp    DWORD PTR [eax+0x41],ecx
  423305:	pop    esp
  423306:	fs adc al,0xcd
  423309:	or     edx,DWORD PTR [ebx]
  42330b:	jmp    0x8ed6102
  423310:	int3   
  423311:	xor    BYTE PTR ss:[edx],cl
  423314:	push   ecx
  423315:	aad    0x31
  423317:	xor    eax,0xa6d58bff
  42331c:	into   
  42331d:	mov    edi,0x9326801d
  423322:	mov    eax,ds:0xb91da575
  423327:	lahf   
  423328:	cmp    al,0xde
  42332a:	xchg   edi,eax
  42332b:	mov    ecx,0x1e8ddfd2
  423330:	in     eax,0xcf
  423332:	icebp  
  423333:	sub    al,BYTE PTR [edx+0x66]
  423336:	and    DWORD PTR [eax],eax
  423338:	add    BYTE PTR [eax],al
  42333a:	add    BYTE PTR [eax],al
  42333c:	add    BYTE PTR [eax],al
  42333e:	stc    
  42333f:	sbb    al,al
  423341:	inc    esi
  423342:	jecxz  0x423322
  423344:	(bad)  
  423345:	mov    edi,0xe1f1bc83
  42334a:	iret   
  42334b:	call   0x1:0xdff1cad0
  423352:	popa   
  423353:	add    BYTE PTR [eax],al
  423355:	add    BYTE PTR [eax+0x12],dh
  423358:	jp     0x423303
  42335a:	push   cs
  42335b:	xor    al,0xa
  42335d:	sbb    ah,bl
  42335f:	push   ecx
  423360:	clc    
  423361:	cli    
  423362:	sub    ah,BYTE PTR [edx+0x36]
  423365:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423366:	pop    ecx
  423367:	push   es
  423368:	retf   
  423369:	lea    esp,[ebx]
  42336b:	or     BYTE PTR [edi],al
  42336d:	pop    eax
  42336e:	dec    ebx
  42336f:	arpl   dx,dx
  423371:	stc    
  423372:	add    eax,0xc32613f5
  423377:	inc    eax
  423378:	mov    cl,al
  42337a:	pushf  
  42337b:	fprem  
  42337d:	test   bh,ch
  42337f:	adc    ebx,DWORD PTR [edx-0x7e8f929c]
  423385:	rcl    DWORD PTR [eax+0x3d],cl
  423388:	icebp  
  423389:	xor    cl,ch
  42338b:	loop   0x423341
  42338d:	dec    edi
  42338e:	aaa    
  42338f:	xchg   esp,eax
  423390:	jl     0x4233eb
  423392:	out    0x2d,eax
  423394:	int    0x8a
  423396:	dec    ebp
  423397:	xchg   esp,eax
  423398:	push   ds
  423399:	loopne 0x423416
  42339b:	sub    BYTE PTR [ebp-0x78],bl
  42339e:	pop    ebp
  42339f:	call   0x48eb2f0e
  4233a4:	jmp    edx
  4233a6:	mov    si,0x1c58
  4233aa:	cli    
  4233ab:	sbb    eax,0x8b0c1d53
  4233b0:	std    
  4233b1:	shr    DWORD PTR [eax+0x7890339d],cl
  4233b7:	add    BYTE PTR [eax],al
  4233b9:	add    BYTE PTR [eax],al
  4233bb:	add    BYTE PTR [eax],al
  4233bd:	add    BYTE PTR [ecx+0x3e8336b9],ah
  4233c3:	(bad)  
  4233c4:	mov    ch,0xbb
  4233c6:	icebp  
  4233c7:	and    eax,0x74cb8c27
  4233cc:	and    ebp,DWORD PTR [ecx+0x1e052]
  4233d2:	popa   
  4233d3:	add    BYTE PTR [eax],al
  4233d5:	add    BYTE PTR [ebx-0x45],bl
  4233d8:	aad    0xd2
  4233da:	in     al,dx
  4233db:	push   0xffffffbf
  4233dd:	xor    dh,BYTE PTR ds:0xd1fdaa1
  4233e3:	fcom   QWORD PTR [esi]
  4233e5:	or     al,0xe3
  4233e7:	pop    edi
  4233e8:	dec    ebx
  4233e9:	xor    eax,0xcc385c79
  4233ee:	mov    ebp,0x3a418e9e
  4233f3:	mov    ds:0xc0799d7,al
  4233f8:	mov    esp,0x190f58eb
  4233fd:	shr    DWORD PTR [edx-0x672b0d17],0x3a
  423404:	pop    ss
  423405:	sub    esp,DWORD PTR [ebx]
  423407:	mov    cl,0xba
  423409:	adc    ebx,DWORD PTR [eax-0x352c208f]
  42340f:	sub    al,0x64
  423411:	xor    ecx,edi
  423413:	jmp    0x4233f7
  423415:	mov    edx,0x84df8e36
  42341a:	test   al,0xee
  42341c:	(bad)  
  42341d:	loopne 0x42341d
  42341f:	das    
  423420:	cmp    al,0x1d
  423422:	and    eax,0x25cbd703
  423427:	or     ah,bl
  423429:	sbb    cl,0xc9
  42342c:	sub    dl,cl
  42342e:	cmp    DWORD PTR ds:0xa708888b,edi
  423434:	or     BYTE PTR [eax+0x2a],dl
  423437:	add    BYTE PTR [eax],al
  423439:	add    BYTE PTR [eax],al
  42343b:	add    BYTE PTR [eax],al
  42343d:	add    BYTE PTR [edx],dl
  42343f:	xlat   BYTE PTR ds:[ebx]
  423440:	repz or esi,edi
  423443:	das    
  423444:	cli    
  423445:	fist   WORD PTR [ecx]
  423447:	dec    ebx
  423448:	es nop
  42344a:	(bad)  
  42344c:	shl    edx,cl
  42344e:	mov    bl,0xe0
  423450:	add    DWORD PTR [eax],eax
  423452:	popa   
  423453:	add    BYTE PTR [eax],al
  423455:	add    BYTE PTR [eax],bh
  423457:	int3   
  423458:	outs   dx,BYTE PTR ds:[esi]
  423459:	outs   dx,BYTE PTR ds:[esi]
  42345a:	call   0x1dff:0x4faa67d0
  423461:	cmp    ah,cl
  423463:	retf   
  423464:	cs hlt 
  423466:	shl    ecx,cl
  423468:	stc    
  423469:	jp     0x4234ba
  42346b:	and    esi,DWORD PTR [ecx-0x7c]
  42346e:	xchg   edx,eax
  42346f:	pop    es
  423470:	cmc    
  423471:	add    eax,0x1abba58d
  423476:	into   
  423477:	std    
  423478:	out    0xa4,al
  42347a:	pop    ebx
  42347b:	retf   0xc92e
  42347e:	add    eax,0xf741f59a
  423483:	jg     0x42349c
  423485:	(bad)  
  423486:	sub    BYTE PTR [edi-0xc],ah
  423489:	popa   
  42348a:	pop    edx
  42348b:	out    0x5b,al
  42348d:	sub    dl,BYTE PTR [ebx+0x58]
  423490:	dec    esi
  423491:	mov    BYTE PTR [eax+edx*8],ch
  423494:	inc    ecx
  423495:	cli    
  423496:	repnz cmc 
  423498:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423499:	sbb    DWORD PTR [edx],esi
  42349b:	call   0x42f8:0xc37f8363
  4234a2:	dec    esp
  4234a3:	xchg   esi,eax
  4234a4:	push   0x17
  4234a6:	mov    eax,0xc72a261c
  4234ab:	and    esi,esp
  4234ad:	jle    0x423480
  4234af:	sar    BYTE PTR [ebx],cl
  4234b1:	jno    0x4234c3
  4234b3:	in     al,dx
  4234b4:	jl     0x42344f
  4234b6:	int    0x0
  4234b8:	add    BYTE PTR [eax],al
  4234ba:	add    BYTE PTR [eax],al
  4234bc:	add    BYTE PTR [eax],al
  4234be:	add    al,al
  4234c0:	inc    edx
  4234c1:	add    BYTE PTR [eax+eax*8],al
  4234c4:	inc    edx
  4234c5:	add    BYTE PTR [eax],cl
  4234c7:	rol    BYTE PTR [edx+0x0],0xc
  4234cb:	rol    BYTE PTR [edx+0x0],0x10
  4234cf:	rol    BYTE PTR [edx+0x0],0x14
  4234d3:	rol    BYTE PTR [edx+0x0],0x18
  4234d7:	rol    BYTE PTR [edx+0x0],0x1c
  4234db:	rol    BYTE PTR [edx+0x0],0x57
  4234df:	inc    edi
  4234e0:	cmp    DWORD PTR [edi+0x41],ebx
  4234e3:	pop    eax
  4234e4:	ss push esi
  4234e6:	pop    edi
  4234e7:	cmp    BYTE PTR [eax],al
  4234e9:	inc    ebx
  4234ea:	inc    ebp
  4234eb:	dec    esp
  4234ec:	pop    edi
  4234ed:	pop    eax
  4234ee:	push   edi
  4234ef:	dec    eax
  4234f0:	inc    edx
  4234f1:	add    BYTE PTR [edi+0x50],dl
  4234f4:	xor    eax,0x4641365f
  4234f9:	cmp    DWORD PTR [edx],esi
  4234fb:	xor    ebx,DWORD PTR [edi+0x32]
  4234fe:	aaa    
  4234ff:	add    BYTE PTR [eax+0x48],dl
  423502:	xor    BYTE PTR [edi+0x58],bl
  423505:	push   esp
  423506:	inc    ecx
  423507:	dec    ebp
  423508:	push   ecx
  423509:	pop    edi
  42350a:	inc    esi
  42350b:	push   ebp
  42350c:	cmp    DWORD PTR [eax],eax
  42350e:	push   edi
  42350f:	push   ebp
  423510:	inc    ecx
  423511:	xor    dh,BYTE PTR [ebx]
  423513:	xor    ebx,DWORD PTR [edi+0x4e]
  423516:	add    BYTE PTR [esp+ecx*2+0x4d],dl
  42351a:	cmp    DWORD PTR [edi+0x38],ebx
  42351d:	dec    ecx
  42351e:	cmp    DWORD PTR [edx+0x36],ebx
  423521:	pop    edi
  423522:	dec    edx
  423523:	xor    BYTE PTR [edx+0x34],cl
  423526:	add    BYTE PTR [ecx+eax*2+0x34],cl
  42352a:	xor    esi,DWORD PTR [eax]
  42352c:	pop    edi
  42352d:	inc    edx
  42352e:	dec    ebx
  42352f:	pop    eax
  423530:	pop    eax
  423531:	xor    eax,0x51414d00
  423536:	pop    edi
  423537:	inc    ecx
  423538:	xor    al,BYTE PTR [ebp+0x5f]
  42353b:	inc    ecx
  42353c:	dec    ebx
  42353d:	cmp    DWORD PTR ds:0x5a003939,esi
  423543:	inc    ebp
  423544:	cmp    BYTE PTR [edi+0x4d],bl
  423547:	ss dec eax
  423549:	dec    ebx
  42354a:	add    BYTE PTR [ebp+0x57],al
  42354d:	xor    DWORD PTR [edi+0x31],ebx
  423550:	dec    ebx
  423551:	xor    eax,DWORD PTR [ecx+0x30]
  423554:	push   ebx
  423555:	add    BYTE PTR [edx+esi*1+0x36],al
  423559:	aaa    
  42355a:	pop    edi
  42355b:	push   edx
  42355c:	dec    eax
  42355d:	dec    ebp
  42355e:	cmp    BYTE PTR [edi+0x37],bl
  423561:	inc    esi
  423562:	xor    eax,0x43355500
  423567:	pop    edi
  423568:	pop    ecx
  423569:	dec    ecx
  42356a:	push   ebx
  42356b:	xor    bl,BYTE PTR [edi+0x52]
  42356e:	add    BYTE PTR [eax+0x55],dl
  423571:	dec    ecx
  423572:	xor    BYTE PTR [edi+0x43],bl
  423575:	ss inc ebp
  423577:	xor    bl,BYTE PTR [edi+0x4d]
  42357a:	xor    al,0x4a
  42357c:	push   edx
  42357d:	push   ebp
  42357e:	add    BYTE PTR [esi+0x39],cl
  423581:	push   eax
  423582:	pop    edi
  423583:	push   ebp
  423584:	cmp    DWORD PTR [esi],esi
  423586:	xor    BYTE PTR [ecx],dh
  423588:	pop    edi
  423589:	dec    edi
  42358a:	dec    esi
  42358b:	push   esp
  42358c:	cmp    BYTE PTR [eax],al
  42358e:	dec    esp
  42358f:	xor    al,0x44
  423591:	xor    DWORD PTR [edi+0x4b],ebx
  423594:	xor    DWORD PTR [ebp+0x5f],eax
  423597:	pop    edx
  423598:	add    BYTE PTR [edi+esi*1+0x43],dl
  42359c:	pop    edi
  42359d:	inc    edx
  42359e:	xor    dh,BYTE PTR [ecx]
  4235a0:	push   ebx
  4235a1:	xor    DWORD PTR [ecx],edi
  4235a3:	inc    edx
  4235a4:	add    BYTE PTR [edi+0x45],al
  4235a7:	xor    al,0x38
  4235a9:	xor    BYTE PTR [eax],dh
  4235ab:	pop    edi
  4235ac:	dec    edx
  4235ad:	dec    ebx
  4235ae:	xor    eax,0x33345f4d
  4235b3:	add    BYTE PTR [ebx+esi*1+0x57],cl
  4235b7:	pop    edi
  4235b8:	aaa    
  4235b9:	push   esi
  4235ba:	dec    ebx
  4235bb:	push   edx
  4235bc:	pop    edi
  4235bd:	inc    ebx
  4235be:	add    BYTE PTR [edx+0x35],bl
  4235c1:	dec    ebp
  4235c2:	pop    edi
  4235c3:	inc    edi
  4235c4:	dec    esi
  4235c5:	xor    al,0x49
  4235c7:	xor    eax,0x54590035
  4235cc:	push   edx
  4235cd:	pop    edi
  4235ce:	push   esp
  4235cf:	inc    ebx
  4235d0:	inc    ecx
  4235d1:	pop    edi
  4235d2:	cmp    DWORD PTR [ecx+0x41],ebx
  4235d5:	push   ebp
  4235d6:	pop    edi
  4235d7:	push   ebp
  4235d8:	inc    ebp
  4235d9:	add    BYTE PTR [esi+esi*1+0x35],cl
  4235dd:	pop    edi
  4235de:	pop    eax
  4235df:	dec    edx
  4235e0:	inc    edx
  4235e1:	inc    edi
  4235e2:	add    BYTE PTR [edx+0x36],al
  4235e5:	inc    ebx
  4235e6:	pop    edi
  4235e7:	xor    BYTE PTR ds:0x36464b,dh
  4235ed:	dec    ebx
  4235ee:	cmp    DWORD PTR [esi+0x37],eax
  4235f1:	xor    ebx,DWORD PTR [edi+0x35]
  4235f4:	ss inc edi
  4235f6:	pop    ecx
  4235f7:	dec    eax
  4235f8:	pop    ecx
  4235f9:	add    BYTE PTR [ebp+0x35],cl
  4235fc:	push   eax
  4235fd:	xor    BYTE PTR [edi+0x4f],bl
  423600:	pop    ecx
  423601:	xor    cl,BYTE PTR [edi+0x0]
  423604:	pop    ecx
  423605:	xor    DWORD PTR [esi+0x5f],ecx
  423608:	xor    al,BYTE PTR [edx+0x30]
  42360b:	push   esi
  42360c:	push   esp
  42360d:	inc    ebp
  42360e:	add    BYTE PTR [edi+0x37],al
  423611:	push   esi
  423612:	xor    DWORD PTR [edi+0x49],ebx
  423615:	xor    al,BYTE PTR [esi+0x30]
  423618:	pop    edi
  423619:	ss dec esi
  42361b:	cmp    BYTE PTR [eax],al
  42361d:	pop    edx
  42361e:	xor    eax,0x445f334b
  423623:	xor    BYTE PTR [eax],bh
  423625:	push   ecx
  423626:	push   esi
  423627:	xor    al,0x0
  423629:	push   ebp
  42362a:	pop    eax
  42362b:	inc    edi
  42362c:	xor    DWORD PTR [edi+0x39],ebx
  42362f:	push   esp
  423630:	inc    ebx
  423631:	aaa    
  423632:	inc    esp
  423633:	add    BYTE PTR [edi+0x39],dl
  423636:	ss pop edi
  423638:	dec    eax
  423639:	pop    edx
  42363a:	pop    ecx
  42363b:	inc    edi
  42363c:	push   ebp
  42363d:	pop    edi
  42363e:	push   eax
  42363f:	dec    eax
  423640:	inc    ebx
  423641:	add    BYTE PTR [ebp+0x0],dl
  423644:	xor    al,0x0
  423646:	dec    edi
  423647:	add    BYTE PTR [edi+0x0],bl
  42364a:	cmp    BYTE PTR [eax],al
  42364c:	xor    al,BYTE PTR [eax]
  42364e:	inc    ebx
  42364f:	add    BYTE PTR [edx+0x0],bl
  423652:	inc    ebx
  423653:	add    BYTE PTR [edi],dh
  423655:	add    BYTE PTR [edi+0x0],bl
  423658:	inc    ebx
  423659:	add    BYTE PTR [eax+eax*1+0x0],al
  42365d:	add    BYTE PTR [eax+eax*1+0x4b],cl
  423661:	add    BYTE PTR [edx],dh
  423663:	add    BYTE PTR [edi+0x0],bl
  423666:	cmp    BYTE PTR [eax],al
  423668:	dec    esp
  423669:	add    BYTE PTR [esi+0x0],dl
  42366c:	pop    edi
  42366d:	add    BYTE PTR [ecx+0x0],bl
  423670:	push   edx
  423671:	add    BYTE PTR [esi+0x0],dl
  423674:	xor    al,BYTE PTR [eax]
  423676:	cmp    BYTE PTR [eax],al
  423678:	pop    edi
  423679:	add    BYTE PTR [edx+0x0],cl
  42367c:	add    BYTE PTR [eax],al
  42367e:	inc    edx
  42367f:	add    BYTE PTR [eax+eax*1+0x46],cl
  423683:	add    BYTE PTR [edi+0x0],bl
  423686:	xor    eax,DWORD PTR [eax]
  423688:	inc    ebp
  423689:	add    BYTE PTR [ecx+0x0],cl
  42368c:	push   edx
  42368d:	add    BYTE PTR [ecx],bh
  42368f:	add    BYTE PTR [esi+0x0],dl
  423692:	add    BYTE PTR [eax],al
  423694:	dec    ebp
  423695:	add    BYTE PTR [edi],dh
  423697:	add    BYTE PTR [eax+eax*1+0x5f],al
  42369b:	add    BYTE PTR [edx+0x0],cl
  42369e:	pop    eax
  42369f:	add    BYTE PTR [ebx],dh
  4236a1:	add    BYTE PTR [ecx],dh
  4236a3:	add    BYTE PTR [ebx+0x0],al
  4236a6:	add    BYTE PTR [eax],al
  4236a8:	dec    edi
  4236a9:	add    BYTE PTR [esi],dh
  4236ab:	add    BYTE PTR [eax+0x0],cl
  4236ae:	pop    edi
  4236af:	add    BYTE PTR [eax],dh
  4236b1:	add    BYTE PTR [edi],dh
  4236b3:	add    BYTE PTR [ecx],dh
  4236b5:	add    BYTE PTR [edx+0x0],dl
  4236b8:	xor    eax,0x55000000
  4236bd:	add    BYTE PTR [eax+eax*1+0x5a],dl
  4236c1:	add    BYTE PTR [edi+0x0],bl
  4236c4:	push   esp
  4236c5:	add    BYTE PTR [ecx+0x0],al
  4236c8:	cmp    DWORD PTR [eax],eax
  4236ca:	pop    edi
  4236cb:	add    BYTE PTR [ebx],dh
  4236cd:	add    BYTE PTR [eax],dh
  4236cf:	add    BYTE PTR [eax],bh
  4236d1:	add    BYTE PTR [edi+0x0],cl
  4236d4:	inc    ebx
  4236d5:	add    BYTE PTR ds:0x4d000000,dh
  4236db:	add    BYTE PTR [esi+0x0],cl
  4236de:	inc    ebp
  4236df:	add    BYTE PTR [edi+0x0],bl
  4236e2:	push   esp
  4236e3:	add    BYTE PTR [esi+0x0],al
  4236e6:	cmp    BYTE PTR [eax],al
  4236e8:	push   ebx
  4236e9:	add    BYTE PTR [edx+0x0],bl
  4236ec:	pop    edi
  4236ed:	add    BYTE PTR [eax],dh
  4236ef:	add    BYTE PTR [eax],bh
  4236f1:	add    BYTE PTR [eax+0x0],cl
  4236f4:	add    BYTE PTR [eax],al
  4236f6:	dec    esi
  4236f7:	add    BYTE PTR [edi+0x0],cl
  4236fa:	pop    edx
  4236fb:	add    BYTE PTR [edi+0x0],bl
  4236fe:	add    BYTE PTR ss:[ecx+0x0],bl
  423702:	dec    ebp
  423703:	add    BYTE PTR [esi],dh
  423705:	add    BYTE PTR [ebx],dh
  423707:	add    BYTE PTR [edi+0x0],bl
  42370a:	xor    al,0x0
  42370c:	dec    esi
  42370d:	add    BYTE PTR [edx],dh
  42370f:	add    BYTE PTR [esi],dh
  423711:	add    BYTE PTR [ecx],dh
  423713:	add    BYTE PTR [eax],al
  423715:	add    BYTE PTR [ebx+0x0],cl
  423718:	dec    eax
  423719:	add    BYTE PTR [eax],bh
  42371b:	add    BYTE PTR [edi+0x0],bl
  42371e:	inc    esi
  42371f:	add    BYTE PTR [esi+0x0],al
  423722:	push   esp
  423723:	add    BYTE PTR [edi],dh
  423725:	add    BYTE PTR [esi],dh
  423727:	add    BYTE PTR [edi+0x0],bl
  42372a:	dec    esp
  42372b:	add    BYTE PTR [ecx+0x0],bl
  42372e:	add    BYTE PTR [eax],al
  423730:	push   ebx
  423731:	add    BYTE PTR [ecx+0x0],bl
  423734:	xor    BYTE PTR [eax],al
  423736:	pop    edi
  423737:	add    BYTE PTR [ecx],bh
  423739:	add    BYTE PTR [edx+0x0],dl
  42373c:	dec    eax
  42373d:	add    BYTE PTR [ecx+0x0],bl
  423740:	xor    al,BYTE PTR [eax]
  423742:	pop    edi
  423743:	add    BYTE PTR [eax],dh
  423745:	add    BYTE PTR [eax],al
  423747:	add    BYTE PTR [edx+0x0],al
  42374a:	dec    edx
  42374b:	add    BYTE PTR [esi+0x0],cl
  42374e:	xor    al,BYTE PTR [eax]
  423750:	pop    edi
  423751:	add    BYTE PTR [eax+eax*1+0x33],cl
  423755:	add    BYTE PTR [edx+0x0],dl
  423758:	xor    al,0x0
  42375a:	dec    eax
  42375b:	add    BYTE PTR [eax],al
  42375d:	add    BYTE PTR [ebp+0x0],dl
  423760:	add    BYTE PTR ss:[ebp+0x0],cl
  423764:	xor    DWORD PTR [eax],eax
  423766:	pop    edi
  423767:	add    BYTE PTR [esi],dh
  423769:	add    BYTE PTR [ecx+0x0],bl
  42376c:	push   ebp
  42376d:	add    BYTE PTR [eax+eax*1+0x5f],dl
  423771:	add    BYTE PTR [edi+0x0],cl
  423774:	inc    esp
  423775:	add    BYTE PTR [edi+0x0],dl
  423778:	push   ebx
  423779:	add    BYTE PTR [eax],al
  42377b:	add    BYTE PTR [edx+0x0],bl
  42377e:	inc    ebx
  42377f:	add    BYTE PTR [ebp+0x0],dl
  423782:	pop    edi
  423783:	add    BYTE PTR [ecx],dh
  423785:	add    BYTE PTR [ebp+0x0],al
  423788:	push   esp
  423789:	add    BYTE PTR [eax],dh
  42378b:	add    BYTE PTR [eax],al
  42378d:	add    BYTE PTR [eax],al
  42378f:	add    BYTE PTR [eax],al
  423791:	add    BYTE PTR [eax-0x7ffbffbe],al
  423797:	inc    edx
  423798:	add    BYTE PTR [eax],cl
  42379a:	add    BYTE PTR [edx+0x0],0xc
  42379e:	add    BYTE PTR [edx+0x0],0x10
  4237a2:	add    BYTE PTR [edx+0x0],0x14
  4237a6:	add    BYTE PTR [edx+0x0],0x18
  4237aa:	add    BYTE PTR [edx+0x0],0x1c
  4237ae:	add    BYTE PTR [edx+0x0],0x20
  4237b2:	add    BYTE PTR [edx+0x0],0x24
  4237b6:	add    BYTE PTR [edx+0x0],0x28
  4237ba:	add    BYTE PTR [edx+0x0],0x0
  4237be:	add    BYTE PTR [eax],al
  4237c0:	add    BYTE PTR [eax],al
  4237c2:	add    BYTE PTR [eax],al
  4237c4:	xor    ebx,DWORD PTR [edi]
  4237c6:	ja     0x423815
  4237c8:	add    BYTE PTR [eax],al
  4237ca:	add    BYTE PTR [eax],al
  4237cc:	repnz aaa 
  4237ce:	add    al,BYTE PTR [eax]
  4237d0:	add    DWORD PTR [eax],eax
  4237d2:	add    BYTE PTR [eax],al
  4237d4:	add    DWORD PTR [eax],eax
  4237d6:	add    BYTE PTR [eax],al
  4237d8:	add    DWORD PTR [eax],eax
  4237da:	add    BYTE PTR [eax],al
  4237dc:	call   0xec423a18
  4237e1:	aaa    
  4237e2:	add    al,BYTE PTR [eax]
  4237e4:	lock aaa 
  4237e6:	add    al,BYTE PTR [eax]
  4237e8:	daa    
  4237e9:	mov    BYTE PTR [eax],al
  4237eb:	add    dh,bh
  4237ed:	aaa    
  4237ee:	add    al,BYTE PTR [eax]
  4237f0:	add    BYTE PTR [eax],al
  4237f2:	push   edi
  4237f3:	outs   dx,DWORD PTR ds:[esi]
  4237f4:	jb     0x42385a
  4237f6:	push   edi
  4237f7:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  4237fe:	aas    
  4237ff:	inc    ebp
  423800:	outs   dx,BYTE PTR ds:[esi]
  423801:	jne    0x423870
  423803:	push   edi
  423804:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  42380b:	popa   
  42380c:	je     0x423877
  42380e:	outs   dx,DWORD PTR ds:[esi]
  42380f:	outs   dx,BYTE PTR ds:[esi]
  423810:	jae    0x423865
  423812:	je     0x423875
  423814:	.byte 0x74
