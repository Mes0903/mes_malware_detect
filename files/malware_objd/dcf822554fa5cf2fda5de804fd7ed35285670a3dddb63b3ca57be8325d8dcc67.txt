
dcf822554fa5cf2fda5de804fd7ed35285670a3dddb63b3ca57be8325d8dcc67.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	push   ecx
  411001:	push   ebp
  411002:	mov    ebp,DWORD PTR [esp+0x10]
  411006:	xor    eax,eax
  411008:	test   ebp,ebp
  41100a:	push   esi
  41100b:	mov    DWORD PTR [esp+0x8],eax
  41100f:	mov    esi,0xfffffffd
  411014:	je     0x41107a
  411016:	push   ebx
  411017:	push   edi
  411018:	mov    edi,DWORD PTR [esp+0x18]
  41101c:	mov    DWORD PTR [esp+0x1c],0x1
  411024:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  411028:	add    esi,0x2
  41102b:	inc    esi
  41102c:	mov    BYTE PTR [esi+edi*1],cl
  41102f:	mov    ecx,DWORD PTR [esp+0x24]
  411033:	movzx  ecx,BYTE PTR [eax+ecx*1]
  411037:	mov    edx,DWORD PTR [esp+0x10]
  41103b:	mov    eax,DWORD PTR [esp+0x1c]
  41103f:	add    edx,eax
  411041:	mov    DWORD PTR [esp+0x10],edx
  411045:	ror    eax,cl
  411047:	mov    eax,DWORD PTR [esp+0x10]
  41104b:	mov    edx,eax
  41104d:	shr    edx,0x3
  411050:	mov    ebx,0x1
  411055:	sub    ebx,edx
  411057:	imul   eax,ebx
  41105a:	mov    DWORD PTR [esp+0x10],eax
  41105e:	shl    ebx,0x3
  411061:	mov    bl,BYTE PTR [esi+edi*1]
  411064:	add    bl,cl
  411066:	mov    ecx,DWORD PTR [esp+0x20]
  41106a:	mov    BYTE PTR [esi+edi*1],bl
  41106d:	sub    esi,0x2
  411070:	cmp    esi,ecx
  411072:	jl     0x411024
  411074:	pop    edi
  411075:	pop    ebx
  411076:	pop    esi
  411077:	pop    ebp
  411078:	pop    ecx
  411079:	ret    
  41107a:	outs   dx,DWORD PTR ds:[esi]
  41107b:	in     eax,0x85
  41107d:	inc    edi
  41107e:	push   edx
  41107f:	jg     0x411091
  411081:	and    al,0xef
  411083:	jne    0x411090
  411085:	push   cs
  411086:	mov    eax,0xd36e87f7
  41108b:	mov    ebp,0x2c063679
  411090:	jl     0x4110fe
  411092:	and    bh,BYTE PTR [ebx-0x3b]
  411095:	leave  
  411096:	mov    ah,0xd7
  411098:	in     al,dx
  411099:	cs fdivrp st(5),st
  41109c:	mov    ecx,0xad1578f8
  4110a1:	mov    DWORD PTR [eax+edi*8+0x5d],ecx
  4110a5:	ds cld 
  4110a7:	push   0xf7e9dcff
  4110ac:	nop
  4110ad:	or     ecx,edx
  4110af:	jp     0x4110dd
  4110b1:	ins    DWORD PTR es:[edi],dx
  4110b2:	adc    al,0xc2
  4110b4:	lods   al,BYTE PTR ds:[esi]
  4110b5:	imul   esi,DWORD PTR [edx-0x1f],0x1d
  4110b9:	jmp    0x96cad759
  4110be:	ja     0x41107c
  4110c0:	shr    BYTE PTR [eax+esi*8],cl
  4110c3:	dec    ecx
  4110c4:	mov    ebp,0xfb8fd8e1
  4110c9:	idiv   ecx
  4110cb:	fidivr DWORD PTR [edx+ecx*8+0x5]
  4110cf:	jecxz  0x4110df
  4110d1:	out    dx,al
  4110d2:	push   ebp
  4110d3:	aad    0xd9
  4110d5:	dec    eax
  4110d6:	add    ah,dl
  4110d8:	daa    
  4110d9:	clc    
  4110da:	cdq    
  4110db:	lahf   
  4110dc:	or     esi,ebp
  4110de:	jae    0x411073
  4110e0:	sbb    al,BYTE PTR [esi+ecx*1+0x38]
  4110e4:	popa   
  4110e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110e6:	or     eax,DWORD PTR [ecx]
  4110e8:	bound  eax,QWORD PTR [ebp-0x217de873]
  4110ee:	pop    edi
  4110ef:	lods   eax,DWORD PTR ds:[esi]
  4110f0:	popa   
  4110f1:	(bad)  
  4110f2:	push   ds
  4110f3:	mov    ebx,DWORD PTR [ebp-0x62]
  4110f6:	jg     0x41109e
  4110f8:	shl    DWORD PTR [eax-0x2d],1
  4110fb:	sbb    eax,eax
  4110fd:	sbb    DWORD PTR [edx],eax
  4110ff:	adc    dh,BYTE PTR [eax]
  411101:	or     DWORD PTR [edx+0x19862707],0xffffffe1
  411108:	and    dl,bh
  41110a:	call   0x9c0f47d5
  41110f:	aam    0xc3
  411111:	xchg   DWORD PTR [ecx-0x71],ebp
  411114:	ds pop ss
  411116:	and    al,0x10
  411118:	ror    DWORD PTR [ebx+eax*1],1
  41111b:	pusha  
  41111c:	mov    ecx,0x1cffac42
  411121:	jb     0x41118c
  411123:	pop    ebp
  411124:	sub    bl,dh
  411126:	inc    esi
  411127:	ret    0xf6
  41112a:	push   cs
  41112b:	mov    WORD PTR [eax+0xb],ss
  41112e:	jnp    0x41117e
  411130:	mov    ebx,0xdc066586
  411135:	fnstenv cs:[ecx-0x29]
  411139:	imul   DWORD PTR [ecx]
  41113b:	fmul   DWORD PTR [ebp+0x44]
  41113e:	je     0x411198
  411140:	fldenv [edx-0x12]
  411143:	dec    esi
  411144:	inc    edi
  411145:	iret   
  411146:	inc    esi
  411147:	push   edx
  411149:	mov    al,0x66
  41114b:	imul   ebx,DWORD PTR [ecx-0x2c],0x501a1c5
  411152:	call   0x6d0b:0xfcae0561
  411159:	sbb    eax,0x4b13f382
  41115e:	jno    0x411175
  411160:	psllw  mm7,QWORD PTR [ecx-0x4d3b6884]
  411167:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411168:	mov    bh,0xd4
  41116a:	ret    
  41116b:	popa   
  41116c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41116d:	dec    esp
  41116e:	dec    esi
  41116f:	leave  
  411170:	pusha  
  411171:	enter  0x3378,0x33
  411175:	and    edi,DWORD PTR [edx-0x43fb2ee4]
  41117b:	(bad)  
  41117c:	dec    eax
  41117d:	stos   DWORD PTR es:[edi],eax
  41117e:	inc    eax
  41117f:	cdq    
  411180:	mov    ah,0x5
  411182:	dec    eax
  411183:	in     eax,0xe9
  411185:	(bad)  
  411187:	retf   0x1081
  41118a:	jle    0x411149
  41118c:	push   ebp
  41118d:	add    ebp,0x8
  411190:	or     eax,0xe3964e31
  411195:	pop    edx
  411196:	sbb    ecx,DWORD PTR [edi]
  411198:	iret   
  411199:	lock push eax
  41119b:	mov    esi,0x2e0cc66c
  4111a0:	jmp    0x1ff3:0x17d99340
  4111a7:	xchg   ebp,eax
  4111a8:	xor    al,0x6a
  4111aa:	lahf   
  4111ab:	aaa    
  4111ac:	dec    ebx
  4111ad:	inc    ebx
  4111ae:	int3   
  4111af:	inc    esp
  4111b0:	mov    WORD PTR [ebx],?
  4111b2:	push   eax
  4111b3:	jo     0x41113d
  4111b5:	xchg   esp,eax
  4111b6:	js     0x4111dc
  4111b8:	pusha  
  4111b9:	test   ch,dl
  4111bb:	arpl   WORD PTR [edi],bp
  4111bd:	loopne 0x41122d
  4111bf:	push   ss
  4111c0:	arpl   WORD PTR [esi-0x4b17041c],dx
  4111c6:	sub    eax,eax
  4111c8:	mov    dl,0x2e
  4111ca:	pop    es
  4111cb:	jo     0x411187
  4111cd:	jg     0x411178
  4111cf:	and    eax,0x45b9194f
  4111d4:	xor    dh,dh
  4111d6:	mov    eax,ds:0xaecde2c4
  4111db:	jmp    0x154bfb47
  4111e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111e1:	je     0x1e5c28e1
  4111e7:	imul   esp,DWORD PTR [eax+0x77668117],0x84c8ea65
  4111f1:	add    DWORD PTR [eax-0x5d],0xf14539f3
  4111f8:	adc    DWORD PTR [edi-0x75],edi
  4111fb:	lods   al,BYTE PTR ds:[esi]
  4111fc:	lods   al,BYTE PTR gs:[esi]
  4111fe:	mov    ecx,0xfd759816
  411203:	jle    0x411283
  411205:	inc    edx
  411206:	popa   
  411207:	(bad)
  41120a:	ins    BYTE PTR es:[edi],dx
  41120b:	push   ecx
  41120c:	outs   dx,DWORD PTR ds:[esi]
  41120d:	inc    eax
  41120e:	inc    esi
  41120f:	fisttp DWORD PTR [edx+0x62358d59]
  411215:	stos   BYTE PTR es:[edi],al
  411216:	jbe    0x4111bf
  411218:	cmp    DWORD PTR [edx],0xffffffe6
  41121b:	push   esi
  41121c:	xchg   ebx,eax
  41121d:	pop    edi
  41121e:	sbb    edi,DWORD PTR [esp+edi*1]
  411221:	mov    ch,0x3e
  411223:	sbb    ecx,esi
  411225:	out    dx,eax
  411226:	inc    ebp
  411227:	and    DWORD PTR [ecx-0xc],edx
  41122a:	idiv   DWORD PTR [edi-0x1c7f14c7]
  411230:	xchg   edx,eax
  411231:	retf   0x61b1
  411234:	jne    0x411250
  411236:	sub    DWORD PTR [esp+edx*4+0x6b],esi
  41123a:	out    dx,al
  41123b:	inc    ebx
  41123c:	inc    ebx
  41123d:	scas   al,BYTE PTR es:[edi]
  41123e:	in     eax,dx
  41123f:	sub    al,0xb5
  411241:	cwde   
  411242:	jmp    0x1805b3f0
  411247:	ds stos DWORD PTR es:[edi],eax
  411249:	das    
  41124a:	ja     0x411240
  41124c:	test   BYTE PTR [ecx-0x3bec46c4],dl
  411252:	push   eax
  411253:	mov    edi,0x6e78bd4c
  411258:	pop    es
  411259:	fdivr  DWORD PTR [edi+ecx*1]
  41125c:	pop    ebx
  41125d:	sub    BYTE PTR [eax+0x51a8ee84],dh
  411263:	push   edx
  411264:	loopne 0x411252
  411266:	jne    0x411247
  411268:	sbb    BYTE PTR [ebx],cl
  41126a:	cmp    BYTE PTR [ecx-0x31],ch
  41126d:	xlat   BYTE PTR ds:[ebx]
  41126e:	push   0x887209a9
  411273:	pop    es
  411274:	xchg   ebp,eax
  411275:	std    
  411276:	hlt    
  411277:	imul   ebx,ebx,0x68
  41127a:	push   ss
  41127b:	data16 fcomp QWORD PTR [esi+0x4a]
  41127f:	jle    0x41128f
  411281:	fidiv  WORD PTR [eax+0x33e3a1c9]
  411287:	adc    ch,BYTE PTR [ecx]
  411289:	sub    al,0x43
  41128b:	sub    ecx,DWORD PTR [ebp+0x5]
  41128e:	dec    ecx
  41128f:	jge    0x4112b8
  411291:	xchg   edx,eax
  411292:	lock sbb DWORD PTR [ebx-0x61],eax
  411296:	rol    edi,0x9f
  411299:	inc    ecx
  41129a:	dec    ecx
  41129b:	(bad)  
  41129c:	fild   WORD PTR [esi]
  41129e:	xchg   ecx,eax
  41129f:	or     BYTE PTR [esp+edi*4+0x21],dh
  4112a3:	mov    bh,BYTE PTR [edi-0x9]
  4112a6:	loopne 0x4112d6
  4112a8:	push   esp
  4112a9:	ror    DWORD PTR [edi-0x1a],1
  4112ac:	imul   edi,ebp,0xe712f1ea
  4112b2:	mov    ecx,0xfc8201a3
  4112b7:	mov    eax,ds:0x21dee312
  4112bc:	xchg   ecx,eax
  4112bd:	push   ecx
  4112be:	add    ah,BYTE PTR [ecx]
  4112c0:	scas   eax,DWORD PTR es:[edi]
  4112c1:	out    dx,al
  4112c2:	test   DWORD PTR [esi-0x21e8c649],esi
  4112c8:	push   es
  4112c9:	push   cs
  4112ca:	inc    BYTE PTR [edx+0x8f55f49]
  4112d0:	push   es
  4112d1:	xchg   esi,eax
  4112d2:	mov    eax,DWORD PTR [edx-0x61]
  4112d5:	sub    ebx,esi
  4112d7:	rcr    BYTE PTR [eax-0x34],cl
  4112da:	cmp    dh,BYTE PTR [ecx+ecx*2+0x7c]
  4112de:	push   0xfffffff5
  4112e0:	loope  0x4112f8
  4112e2:	pop    esp
  4112e3:	mov    cl,0x14
  4112e5:	adc    edx,ebp
  4112e7:	out    0xbc,eax
  4112e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112eb:	repnz daa 
  4112ed:	pop    esi
  4112ee:	fisubr DWORD PTR [ebx+0x35]
  4112f1:	scas   al,BYTE PTR es:[edi]
  4112f2:	pop    eax
  4112f3:	pop    ds
  4112f4:	retf   0x757
  4112f7:	jle    0x411309
  4112f9:	fwait
  4112fa:	jns    0x4112ef
  4112fc:	icebp  
  4112fd:	or     eax,0x89ad0e2
  411302:	jmp    0x7103:0xce7912e5
  411309:	xchg   ecx,eax
  41130a:	and    edx,0x8abc42cd
  411310:	pop    ds
  411311:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411312:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411313:	adc    BYTE PTR [esi],ch
  411315:	mov    BYTE PTR [ebx],al
  411317:	xchg   esp,eax
  411318:	js     0x4112ba
  41131a:	in     eax,dx
  41131b:	inc    esp
  41131c:	jp     0x4112fe
  41131e:	inc    ecx
  41131f:	ret    
  411320:	adc    DWORD PTR [ecx-0x3c],eax
  411323:	jns    0x4112f6
  411325:	jmp    0x411309
  411327:	in     al,dx
  411328:	test   BYTE PTR [eax-0x6b],al
  41132b:	es jl  0x4112af
  41132e:	test   eax,0x30a62436
  411333:	aad    0xe9
  411335:	leave  
  411336:	jp     0x411307
  411338:	dec    edx
  411339:	pusha  
  41133a:	sti    
  41133b:	rcr    BYTE PTR [eax+eax*1],1
  41133e:	push   0xebe5fee1
  411343:	frstor [ebx-0x2b]
  411346:	iret   
  411347:	sahf   
  411348:	dec    ecx
  411349:	dec    esi
  41134a:	shr    DWORD PTR [edx+0x3121ba],cl
  411350:	popa   
  411351:	out    0xa9,eax
  411353:	fcomip st,st(5)
  411355:	rol    DWORD PTR [ebp-0x2a913a3c],0x29
  41135c:	and    bl,BYTE PTR [ebx-0x57]
  41135f:	jo     0x411361
  411361:	(bad)  
  411362:	lods   eax,DWORD PTR ds:[esi]
  411363:	pusha  
  411364:	jmp    0xebcb:0xacc33374
  41136b:	xlat   BYTE PTR ds:[ebx]
  41136c:	stos   DWORD PTR es:[edi],eax
  41136d:	lods   eax,DWORD PTR ds:[esi]
  41136e:	out    dx,al
  41136f:	out    dx,al
  411370:	test   eax,0xb42d9e70
  411375:	push   edi
  411376:	call   0x60be:0x42892230
  41137d:	push   ss
  41137e:	fwait
  41137f:	mov    DWORD PTR [edi-0x19853f39],esp
  411385:	test   eax,0x9bb78a0e
  41138a:	inc    edi
  41138b:	loope  0x4113fe
  41138d:	cmp    al,0xed
  41138f:	retf   0xed9a
  411392:	sub    al,0x95
  411394:	int3   
  411395:	ins    DWORD PTR es:[edi],dx
  411396:	adc    al,0xbf
  411398:	and    BYTE PTR [esp+edi*8-0x6b],ch
  41139c:	outs   dx,DWORD PTR ds:[esi]
  41139d:	push   ds
  41139e:	jl     0x411373
  4113a0:	dec    edx
  4113a1:	mov    ebp,0x77bbb744
  4113a6:	or     edi,ebx
  4113a8:	jmp    0xe0be:0x898e371f
  4113af:	psubb  mm7,QWORD PTR [ecx+0x4b49d281]
  4113b6:	inc    BYTE PTR [ecx]
  4113b8:	adc    BYTE PTR [esi+esi*4],cl
  4113bb:	and    BYTE PTR [esi-0x40],bl
  4113be:	dec    eax
  4113bf:	dec    bp
  4113c1:	dec    ebx
  4113c2:	adc    eax,0xf6fd17fc
  4113c7:	and    cl,BYTE PTR [eax+0xd]
  4113ca:	es mov dh,0x68
  4113cd:	fdiv   st(3),st
  4113cf:	pop    edi
  4113d0:	xor    ebx,DWORD PTR [ebx-0x776adff0]
  4113d6:	(bad)  
  4113d7:	jnp    0x4113d2
  4113d9:	push   ds
  4113da:	vunpckhps xmm2,xmm2,XMMWORD PTR [ecx]
  4113de:	sbb    eax,0x151976ae
  4113e3:	out    0x2c,al
  4113e5:	je     0x411446
  4113e7:	mov    edi,0x9c140dbc
  4113ec:	adc    ebx,DWORD PTR ds:0x8e1b2f23
  4113f2:	ss enter 0xa042,0xa9
  4113f7:	in     eax,0x56
  4113f9:	not    DWORD PTR [esi+0x6]
  4113fc:	in     al,0xa
  4113fe:	iret   
  4113ff:	mov    ecx,0x8dc47f03
  411404:	xor    bl,cl
  411406:	lds    ebx,FWORD PTR [ecx+0x35aeb5d2]
  41140c:	stos   BYTE PTR es:[edi],al
  41140d:	xchg   ebx,eax
  41140e:	popa   
  41140f:	lods   al,BYTE PTR ds:[esi]
  411410:	xlat   BYTE PTR ds:[ebx]
  411411:	push   esi
  411412:	imul   ebp,DWORD PTR [ecx],0x31
  411415:	jno    0x4113a3
  411417:	test   al,0xd1
  411419:	nop
  41141a:	push   ebx
  41141b:	pop    eax
  41141c:	cmp    cl,BYTE PTR ds:0xc8ff60d1
  411422:	sbb    al,0x63
  411424:	adc    eax,0x3c76ca8a
  411429:	adc    ah,dl
  41142b:	and    BYTE PTR [edi-0x59],al
  41142e:	inc    esi
  41142f:	scas   eax,DWORD PTR es:[edi]
  411430:	xchg   DWORD PTR [esp+ecx*1+0x6a],eax
  411434:	jmp    0x936e:0x6c29e507
  41143b:	stos   DWORD PTR es:[edi],eax
  41143c:	ror    BYTE PTR [ebx],cl
  41143e:	xchg   cl,ah
  411440:	loope  0x411491
  411442:	push   0xd
  411444:	inc    esp
  411445:	int3   
  411446:	jmp    DWORD PTR [edx]
  411448:	jp     0x411442
  41144a:	xor    eax,0x242dad6e
  41144f:	aam    0xcf
  411451:	mov    bh,0xd6
  411453:	dec    ebp
  411454:	jne    0x411489
  411456:	inc    esp
  411457:	(bad)  
  411458:	jle    0x4113da
  41145a:	push   ecx
  41145b:	fcmove st,st(4)
  41145d:	pop    ss
  41145e:	xchg   ebp,eax
  41145f:	mov    edi,0x4a1396b4
  411464:	inc    ecx
  411465:	jecxz  0x411449
  411467:	(bad)  
  411468:	sub    al,0xf
  41146a:	sub    BYTE PTR [ecx+0x3882632d],bl
  411470:	gs fwait
  411472:	sahf   
  411473:	and    BYTE PTR [esi+0x34],0xd1
  411477:	cmp    edx,DWORD PTR [ecx]
  411479:	jbe    0x411435
  41147b:	(bad)  
  41147c:	aam    0xa5
  41147e:	cli    
  41147f:	xor    dh,al
  411481:	mov    esi,0xa2a02bf6
  411486:	push   cs
  411487:	adc    esi,DWORD PTR [esi]
  411489:	xor    DWORD PTR ds:0x69bd40f6,ebp
  41148f:	test   al,0xf3
  411491:	neg    DWORD PTR [edx+ebx*1-0x16c68804]
  411498:	push   es
  411499:	push   ecx
  41149a:	sub    dl,BYTE PTR [ebx-0x76]
  41149d:	lahf   
  41149e:	mov    ch,0x2b
  4114a0:	out    0xfa,eax
  4114a2:	dec    esi
  4114a3:	mov    ebx,esi
  4114a5:	idiv   DWORD PTR [ebp-0x5f]
  4114a8:	inc    esi
  4114a9:	push   ss
  4114aa:	in     al,0x48
  4114ac:	out    0xb8,al
  4114ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114af:	jno    0x411528
  4114b1:	popa   
  4114b2:	pop    ecx
  4114b3:	xor    bl,al
  4114b5:	add    al,0xb
  4114b7:	dec    esp
  4114b8:	sbb    DWORD PTR ds:[edx],ebx
  4114bb:	retf   
  4114bc:	push   ebx
  4114bd:	mov    ds:0x3dfba517,eax
  4114c2:	xchg   ebp,eax
  4114c3:	jno    0x4114ea
  4114c5:	call   0x190a:0xd017f2f9
  4114cc:	aaa    
  4114cd:	fcom   QWORD PTR [eax-0x35fd016c]
  4114d3:	xchg   ebx,eax
  4114d4:	sub    DWORD PTR [ecx-0x21],edi
  4114d7:	sub    DWORD PTR [ecx+ecx*8],edx
  4114da:	retf   0xcbdd
  4114dd:	cli    
  4114de:	lea    ebp,[ebx-0x32]
  4114e1:	cmp    edi,DWORD PTR [eax+0x5b]
  4114e4:	lods   al,BYTE PTR ds:[esi]
  4114e5:	scas   al,BYTE PTR es:[edi]
  4114e6:	rol    BYTE PTR [eax-0x11],0x90
  4114ea:	test   bl,dh
  4114ec:	xchg   DWORD PTR [ecx-0x28116fed],ebp
  4114f2:	cli    
  4114f3:	test   BYTE PTR [eax-0x1e],dl
  4114f6:	jecxz  0x41151c
  4114f8:	pop    es
  4114f9:	int3   
  4114fa:	test   ch,0xbd
  4114fd:	loopne 0x411539
  4114ff:	cdq    
  411500:	mov    es,esi
  411502:	adc    al,0x4a
  411504:	mov    ebx,0x8c9b94c6
  411509:	sbb    BYTE PTR [ebx],0xd7
  41150c:	shr    al,cl
  41150e:	lock jns 0x4114e3
  411511:	sub    BYTE PTR [ebp-0x5f],ch
  411514:	call   0xd3bfb9cb
  411519:	retf   0x92b8
  41151c:	inc    ebp
  41151d:	jae    0x4114e1
  41151f:	scas   eax,DWORD PTR es:[edi]
  411520:	mov    ebx,0x43199e87
  411525:	add    al,BYTE PTR [edi-0x6d]
  411528:	xlat   BYTE PTR ds:[ebx]
  411529:	push   DWORD PTR [eax-0x71]
  41152c:	mov    al,0x6e
  41152e:	rdmsr  
  411530:	inc    edx
  411531:	push   cs
  411532:	retf   
  411533:	and    DWORD PTR [ecx],edi
  411535:	push   0x28a4b0cc
  41153a:	mov    esi,0x493e53da
  41153f:	call   0xca0b:0x19fe3f44
  411546:	or     BYTE PTR [ebx-0x6],dl
  411549:	dec    si
  41154b:	ret    
  41154c:	jge    0x4115a8
  41154e:	(bad)  [edi-0x6cc20b98]
  411554:	inc    esp
  411555:	xor    al,0xcb
  411557:	ins    DWORD PTR es:[edi],dx
  411558:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411559:	int    0x1c
  41155b:	or     BYTE PTR [ebx-0x6f31bf68],bl
  411561:	lods   eax,DWORD PTR ds:[esi]
  411562:	push   ebx
  411563:	inc    edx
  411564:	das    
  411565:	sbb    eax,0x64f498ab
  41156a:	inc    esi
  41156b:	out    0xd6,eax
  41156d:	stos   BYTE PTR es:[edi],al
  41156e:	add    eax,0x50a4c1fc
  411573:	cli    
  411574:	pop    ebp
  411575:	loope  0x4115e8
  411577:	mov    dl,0xea
  411579:	repnz xor al,0xee
  41157c:	je     0x411593
  41157e:	fsubrp st(3),st
  411580:	mov    al,0x4
  411582:	push   ebx
  411583:	(bad)  
  411584:	xor    ah,bl
  411586:	lahf   
  411587:	pop    ss
  411588:	pop    ecx
  411589:	sbb    eax,0x4a0e2ede
  41158e:	ss lahf 
  411590:	cmp    eax,0x88cce54f
  411595:	push   ss
  411596:	add    ch,BYTE PTR [ebp+0x19094dc0]
  41159c:	cmp    al,0x78
  41159e:	dec    eax
  41159f:	mov    ch,0x6a
  4115a1:	imul   edx,edx,0x32
  4115a4:	pop    ebx
  4115a5:	adc    BYTE PTR [esi],cl
  4115a7:	loope  0x41152a
  4115a9:	call   0xdb07:0x4e51c525
  4115b0:	push   0x34
  4115b2:	in     al,0xc5
  4115b4:	sub    al,0xd7
  4115b6:	cli    
  4115b7:	ins    DWORD PTR es:[edi],dx
  4115b8:	int3   
  4115b9:	repnz cld 
  4115bb:	mov    al,ds:0x17990767
  4115c0:	ins    DWORD PTR es:[edi],dx
  4115c1:	sbb    cl,BYTE PTR [ebx+edi*4]
  4115c4:	call   0x5ff2:0xf0c3904
  4115cb:	jns    0x4115cf
  4115cd:	out    0x64,al
  4115cf:	sti    
  4115d0:	icebp  
  4115d1:	pop    ecx
  4115d2:	jbe    0x411618
  4115d4:	jmp    0x4fa4:0x6962377a
  4115db:	cmp    al,BYTE PTR fs:[edx+0x3521a2e1]
  4115e2:	mov    edx,DWORD PTR [esi-0x52]
  4115e5:	(bad)  
  4115e6:	sub    BYTE PTR [ebx-0x47],ch
  4115e9:	cmp    eax,0xfd752394
  4115ee:	adc    BYTE PTR [esi+0x5b],al
  4115f1:	lahf   
  4115f2:	fstp   st(2)
  4115f4:	jns    0x4115c8
  4115f6:	xchg   BYTE PTR [ebx],bl
  4115f8:	icebp  
  4115f9:	(bad)  
  4115fa:	addr16 dec ebp
  4115fc:	push   edx
  4115fd:	sub    ebp,edi
  4115ff:	js     0x4115fa
  411601:	dec    edi
  411602:	out    dx,al
  411603:	loop   0x411627
  411605:	out    0xb9,al
  411607:	xchg   edi,eax
  411608:	ret    0xdaf7
  41160b:	pop    ds
  41160c:	cmp    ebp,eax
  41160e:	shl    BYTE PTR [edi],cl
  411610:	fnstsw WORD PTR [eax+esi*1]
  411613:	lods   al,BYTE PTR ds:[esi]
  411614:	dec    edi
  411615:	dec    esp
  411616:	gs out 0x7d,eax
  411619:	jns    0x41166e
  41161b:	sbb    BYTE PTR [eax-0x13],dl
  41161e:	mov    cl,0xf8
  411620:	mov    dl,0xee
  411622:	jnp    0x4115e2
  411624:	sbb    dh,al
  411626:	cld    
  411627:	adc    bl,al
  411629:	push   es
  41162a:	push   cs
  41162b:	mov    ecx,0x96840e94
  411630:	xchg   DWORD PTR [ecx],esp
  411632:	in     eax,dx
  411633:	popa   
  411634:	jo     0x41169e
  411636:	sub    esp,DWORD PTR [eax+0x15115900]
  41163c:	sub    bh,BYTE PTR ds:0xe4226dfc
  411642:	pushf  
  411643:	loopne 0x411661
  411645:	inc    esp
  411646:	inc    esi
  411647:	xor    dl,cl
  411649:	push   ebp
  41164a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41164b:	mov    esp,0xc716e3da
  411650:	test   eax,0x7bd8ee6d
  411655:	push   ss
  411656:	sub    eax,0x40c3f797
  41165b:	cmp    DWORD PTR ds:0x1e3e48ee,eax
  411661:	test   al,0x88
  411663:	dec    ecx
  411664:	push   0xffffffa5
  411666:	sar    BYTE PTR [edi+0x30dde753],0x25
  41166d:	xor    al,0x6b
  41166f:	ds mov ebp,0x4759aaaf
  411675:	push   ds
  411676:	sub    DWORD PTR [esi-0x3aafa939],eax
  41167c:	push   ebx
  41167d:	mov    esp,0x5ad9cfdd
  411682:	sbb    BYTE PTR [esi-0x6b],al
  411685:	jge    0x4116c3
  411687:	sbb    DWORD PTR [edi+ebx*2+0x44e72e24],ecx
  41168e:	lds    ebx,FWORD PTR [edi]
  411690:	stos   BYTE PTR es:[edi],al
  411691:	sub    DWORD PTR [ecx+0x7a27f71c],ebx
  411697:	sub    BYTE PTR [ecx+0x76ce3234],al
  41169d:	sbb    al,0x1c
  41169f:	mov    ecx,0x3e7b2bfc
  4116a4:	popa   
  4116a5:	xor    ch,dl
  4116a7:	outs   dx,DWORD PTR ds:[esi]
  4116a8:	or     dh,ch
  4116aa:	fist   WORD PTR [ebx-0x25]
  4116ad:	pushf  
  4116ae:	dec    ebp
  4116af:	push   0xffffff8e
  4116b1:	push   esp
  4116b2:	dec    ebx
  4116b3:	mov    edi,0xa6478bd
  4116b8:	inc    ebp
  4116b9:	pop    ebx
  4116ba:	mov    eax,0x4d508c0f
  4116bf:	repnz inc esp
  4116c1:	into   
  4116c2:	aas    
  4116c3:	add    edi,eax
  4116c5:	jmp    0x920e:0x4ea8ae83
  4116cc:	mov    ch,0xbd
  4116ce:	leave  
  4116cf:	loopne 0x4116d9
  4116d1:	add    al,0x95
  4116d3:	xchg   edi,eax
  4116d4:	in     eax,0x5d
  4116d6:	popf   
  4116d7:	std    
  4116d8:	retf   0x8f0d
  4116db:	jl     0x41166e
  4116dd:	stos   DWORD PTR es:[edi],eax
  4116de:	push   ds
  4116df:	(bad)  
  4116e0:	test   eax,0xf183229a
  4116e5:	jmp    0xf0c9:0x63418262
  4116ec:	and    al,al
  4116ee:	shr    cl,0x9c
  4116f1:	cmp    al,0x1d
  4116f3:	adc    ch,0xa6
  4116f6:	xor    BYTE PTR [eax],bl
  4116f8:	fwait
  4116f9:	fwait
  4116fa:	ret    
  4116fb:	cdq    
  4116fc:	dec    BYTE PTR [edi-0x36]
  4116ff:	imul   ebx,DWORD PTR [ebx],0xa318f316
  411705:	inc    edi
  411706:	pop    esi
  411707:	rcr    DWORD PTR [eax+0x29],1
  41170a:	repnz lods al,BYTE PTR ds:[esi]
  41170c:	jp     0x4116d7
  41170e:	cwde   
  41170f:	mov    dh,0x9c
  411711:	nop
  411712:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411713:	je     0x41170a
  411715:	test   eax,0x94660927
  41171a:	(bad)  
  41171b:	cli    
  41171c:	outs   dx,DWORD PTR ds:[esi]
  41171d:	popa   
  41171e:	or     eax,0x473fc89e
  411723:	mov    bl,0x5b
  411725:	adc    al,0x7d
  411727:	cld    
  411728:	call   0x76f3:0xbf5b0065
  41172f:	adc    DWORD PTR [edx+0x40e3dce9],0xffffffaf
  411736:	xchg   edx,eax
  411737:	jg     0x411704
  411739:	rcr    BYTE PTR [ebp-0x7],1
  41173c:	std    
  41173d:	inc    ebp
  41173e:	jbe    0x411766
  411740:	fdivr  QWORD PTR [ecx+0x6d]
  411743:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411744:	sbb    edx,0xffffffe2
  411747:	jno    0x411734
  411749:	inc    ebp
  41174a:	or     DWORD PTR [esi-0x20fa4ab1],ebx
  411750:	xor    al,0x17
  411752:	dec    edi
  411753:	das    
  411754:	cdq    
  411755:	lea    esp,[ecx+0x64]
  411758:	outs   dx,DWORD PTR ds:[esi]
  411759:	stos   BYTE PTR es:[edi],al
  41175a:	sbb    al,0xfa
  41175c:	es pop ebx
  41175e:	lock mov al,ds:0x33b9c496
  411764:	sbb    al,0x58
  411766:	lods   eax,DWORD PTR ds:[esi]
  411767:	outs   dx,BYTE PTR ds:[esi]
  411768:	xchg   ecx,eax
  411769:	adc    dh,BYTE PTR [esi+ebp*8]
  41176c:	in     eax,0x16
  41176e:	dec    ebx
  41176f:	push   esi
  411770:	pop    ebx
  411771:	jp     0x411724
  411773:	pop    edi
  411774:	lds    ebp,FWORD PTR [eax+0x44]
  411777:	add    BYTE PTR [edx+ebp*4-0x1a2e2bb0],dl
  41177e:	push   cs
  41177f:	mov    ss,WORD PTR [edx+esi*1]
  411782:	neg    DWORD PTR [ebx-0x5c]
  411785:	nop
  411786:	jp     0x4117dc
  411788:	jno    0x41178e
  41178a:	fcomi  st,st(3)
  41178c:	mov    ds:0x414d2e5f,eax
  411791:	in     eax,dx
  411792:	inc    esi
  411793:	adc    ah,BYTE PTR [ebx-0x4f]
  411796:	fwait
  411797:	cwde   
  411798:	inc    ecx
  411799:	inc    esp
  41179a:	gs xchg esp,eax
  41179c:	and    bh,BYTE PTR [ecx+0x72]
  41179f:	lods   al,BYTE PTR ds:[esi]
  4117a0:	sbb    BYTE PTR [eax],dl
  4117a2:	or     cl,BYTE PTR [esi+0x64deafcd]
  4117a8:	sbb    BYTE PTR [eax],0x38
  4117ab:	pop    edi
  4117ac:	mov    al,0x87
  4117ae:	jecxz  0x4117f1
  4117b0:	cdq    
  4117b1:	mov    ds:0x99debc53,eax
  4117b6:	xor    eax,0xc8f0a90a
  4117bb:	aas    
  4117bc:	and    ch,bh
  4117be:	iret   
  4117bf:	fwait
  4117c0:	mov    esi,0xc4d22276
  4117c5:	sbb    eax,0x19b5809a
  4117ca:	push   0x7f
  4117cc:	jmp    0x4117f6
  4117ce:	repnz (bad)
  4117d1:	sti    
  4117d2:	(bad)  
  4117d3:	loop   0x411781
  4117d5:	or     ebp,ecx
  4117d7:	jmp    0x411826
  4117d9:	push   0x67
  4117db:	sahf   
  4117dc:	lea    esi,[edx]
  4117de:	out    0x10,al
  4117e0:	js     0x411822
  4117e2:	icebp  
  4117e3:	push   ss
  4117e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117e5:	cmc    
  4117e6:	sbb    esi,DWORD PTR ds:0x6c0ea866
  4117ec:	(bad)  
  4117ee:	dec    esi
  4117ef:	lock inc eax
  4117f1:	adc    eax,0x67518ddf
  4117f6:	dec    ebx
  4117f7:	je     0x4117b6
  4117f9:	icebp  
  4117fa:	lods   al,BYTE PTR ds:[esi]
  4117fb:	push   ds
  4117fc:	sub    al,0x14
  4117fe:	jns    0x41185a
  411800:	pop    esi
  411801:	dec    ebx
  411802:	loope  0x411821
  411804:	jbe    0x4117e7
  411806:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411807:	dec    edx
  411808:	pop    ebx
  411809:	adc    ecx,DWORD PTR [ebx]
  41180b:	jnp    0x4117f5
  41180d:	mov    edx,DWORD PTR [ebx+ecx*2]
  411810:	pop    edx
  411811:	out    dx,al
  411812:	push   cs
  411813:	mov    bh,0x92
  411815:	adc    BYTE PTR [edi+0x25ae7441],ch
  41181b:	retf   
  41181c:	pop    esp
  41181d:	scas   eax,DWORD PTR es:[edi]
  41181e:	add    eax,0xe32d58f8
  411823:	lahf   
  411824:	imul   edx,DWORD PTR [edx],0xffffffd9
  411827:	sub    dh,BYTE PTR [ebp+0x4d]
  41182a:	(bad)  
  41182b:	outs   dx,BYTE PTR ds:[esi]
  41182c:	mov    ds:0x2ee13d9b,al
  411831:	pusha  
  411832:	or     BYTE PTR [edi],dl
  411834:	jnp    0x411860
  411836:	lods   al,BYTE PTR ds:[esi]
  411837:	push   0x36
  411839:	fdivrp st(6),st
  41183b:	sub    eax,0x79a738cb
  411840:	xchg   ebp,eax
  411841:	add    esi,DWORD PTR [edx+0x6f93a02]
  411847:	test   DWORD PTR [ecx+eax*8+0x7333a376],0xc479e2f3
  411852:	add    al,0xd6
  411854:	bound  edx,QWORD PTR [ebp-0x1]
  411857:	mov    dh,0x2a
  411859:	daa    
  41185a:	dec    eax
  41185b:	icebp  
  41185c:	jecxz  0x41186e
  41185e:	jbe    0x411842
  411860:	out    dx,eax
  411861:	test   eax,0x428084ee
  411866:	push   0x59
  411868:	jae    0x411812
  41186a:	arpl   bp,bp
  41186c:	stos   DWORD PTR es:[edi],eax
  41186d:	inc    ecx
  41186e:	ins    BYTE PTR es:[edi],dx
  41186f:	jns    0x411862
  411871:	(bad)  
  411872:	cmp    edi,DWORD PTR [esi+0x5e]
  411875:	jnp    0x411856
  411877:	ds mov al,dl
  41187a:	mov    WORD PTR [ebp+0x63],ss
  41187d:	fprem1 
  41187f:	fsub   DWORD PTR [edi-0x41]
  411882:	add    DWORD PTR [ebx],esp
  411884:	and    eax,0x462d4200
  411889:	gs mov ebx,0x7f9636ed
  41188f:	sub    ecx,DWORD PTR cs:[ebp-0x2a]
  411893:	loop   0x41189f
  411895:	daa    
  411896:	and    BYTE PTR [edi+0x58],bl
  411899:	push   eax
  41189a:	es jmp 0x41189a
  41189d:	mov    ebx,0x9556ab7b
  4118a2:	unpcklps xmm2,XMMWORD PTR [edx]
  4118a5:	fild   DWORD PTR [eax]
  4118a7:	jl     0x41184b
  4118a9:	cld    
  4118aa:	inc    BYTE PTR [esp+eiz*2-0x15b08c57]
  4118b1:	fs mov ebp,0x667a5b42
  4118b7:	arpl   WORD PTR [eax+0x4c7472e3],ax
  4118bd:	xchg   esp,eax
  4118be:	(bad)  
  4118bf:	mov    cl,0x3f
  4118c1:	ins    BYTE PTR es:[edi],dx
  4118c2:	mov    ds:0xcec010d4,al
  4118c7:	in     eax,dx
  4118c8:	clc    
  4118c9:	xchg   ebp,eax
  4118ca:	mov    edx,0xc17eaeb0
  4118cf:	shr    BYTE PTR [ebx+eiz*1],1
  4118d2:	fidiv  DWORD PTR [ecx]
  4118d4:	imul   eax,esi,0xffffffd6
  4118d7:	cmp    eax,0x1127a7cd
  4118dc:	retf   
  4118dd:	xchg   ecx,eax
  4118de:	idiv   DWORD PTR [ebx-0x7b71ba24]
  4118e4:	ficom  DWORD PTR ds:[ebp+0x5c]
  4118e8:	cdq    
  4118e9:	lods   al,BYTE PTR ds:[esi]
  4118ea:	bnd jp 0x41186d
  4118ed:	std    
  4118ee:	cmp    esp,ebx
  4118f0:	push   esi
  4118f1:	mov    eax,ds:0x65f16d37
  4118f6:	push   edx
  4118f7:	callw  0xce36
  4118fb:	jle    0x411920
  4118fd:	or     DWORD PTR [esi+0x3129a3bc],0xfffffff8
  411904:	jns    0x4118b1
  411906:	jne    0x41196d
  411908:	mov    esi,DWORD PTR [eax+0x208e4481]
  41190e:	jb     0x411896
  411910:	dec    ebx
  411911:	push   ds
  411912:	inc    edx
  411913:	stos   DWORD PTR es:[edi],eax
  411914:	outs   dx,BYTE PTR ds:[esi]
  411915:	mov    dh,0x38
  411917:	or     ch,BYTE PTR [eax+0x7d452c7]
  41191d:	sub    al,0x56
  41191f:	mov    dh,0xf0
  411921:	ret    0xa8da
  411924:	shr    BYTE PTR [eax-0x2fb0c00],cl
  41192a:	and    eax,DWORD PTR [eax-0x27]
  41192d:	cld    
  41192e:	iret   
  41192f:	lds    edi,FWORD PTR [ebp-0x6a]
  411932:	inc    eax
  411933:	aam    0xa8
  411935:	lea    eax,[edi+0x33]
  411938:	pop    edi
  411939:	sub    dh,BYTE PTR [ebx-0x6a60fb26]
  41193f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411940:	aam    0xf1
  411942:	dec    ebx
  411943:	out    0x80,eax
  411945:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411946:	aam    0x3
  411948:	mov    eax,ebp
  41194a:	jge    0x4119c2
  41194c:	loope  0x411921
  41194e:	in     al,0x4c
  411950:	test   al,0x51
  411952:	xchg   edi,eax
  411953:	or     bh,al
  411955:	loop   0x4119b2
  411957:	mov    cl,0x23
  411959:	xor    al,0xf0
  41195b:	dec    eax
  41195c:	loope  0x4118f3
  41195e:	push   cs
  41195f:	mov    ebx,DWORD PTR [ecx+0x332d5ad6]
  411965:	xchg   esi,eax
  411966:	cmp    al,cl
  411968:	cs enter 0xd342,0xce
  41196d:	xor    bl,BYTE PTR [eax]
  41196f:	xchg   esp,esi
  411971:	adc    eax,0x5279a4fe
  411976:	cli    
  411977:	mov    esp,0xd106d6c7
  41197c:	fist   DWORD PTR [eax+0x18e689b0]
  411982:	mov    bl,0x22
  411984:	inc    esp
  411985:	sub    esi,DWORD PTR [edx]
  411987:	pop    edx
  411988:	sbb    ecx,DWORD PTR [ebx-0x62]
  41198b:	push   esi
  41198c:	lea    esi,[ecx]
  41198e:	iret   
  41198f:	(bad)
  411993:	xor    bl,al
  411995:	retf   0xf5ab
  411998:	cwde   
  411999:	shr    DWORD PTR [esi+0x49de0622],cl
  41199f:	or     eax,DWORD PTR [ebx+eiz*2+0x7a]
  4119a3:	scas   eax,DWORD PTR es:[edi]
  4119a4:	dec    esp
  4119a5:	mov    BYTE PTR [esi],al
  4119a7:	inc    esi
  4119a8:	je     0x411956
  4119aa:	loop   0x4119d1
  4119ac:	xor    bl,BYTE PTR [ebp-0x42a97f9b]
  4119b2:	and    al,0x90
  4119b4:	clc    
  4119b5:	sub    BYTE PTR [edx+edi*1],dh
  4119b8:	sub    cl,0xba
  4119bb:	or     al,0x66
  4119bd:	dec    ebx
  4119be:	xchg   ebx,eax
  4119bf:	jmp    0x299:0x6558cd9
  4119c6:	bt     DWORD PTR [edx+edx*1-0x24],esi
  4119cb:	or     eax,DWORD PTR [edi+0x60029553]
  4119d1:	mov    esp,0xceb7ede1
  4119d6:	xor    ah,BYTE PTR [esi]
  4119d8:	fwait
  4119d9:	mov    esi,DWORD PTR [esi-0x4a4cb549]
  4119df:	xchg   edx,eax
  4119e0:	inc    ecx
  4119e1:	mov    ebx,0x4430fbae
  4119e6:	cmp    eax,0x5f9e786a
  4119eb:	mov    esi,0xf810226
  4119f0:	xor    ebx,DWORD PTR [ecx-0x64b6444c]
  4119f6:	xchg   ebp,eax
  4119f7:	idiv   BYTE PTR [ecx]
  4119f9:	loopne 0x4119e0
  4119fb:	psraw  mm0,mm4
  4119fe:	dec    edx
  4119ff:	iret   
  411a00:	dec    ebx
  411a01:	out    0xf3,al
  411a03:	shl    BYTE PTR [edi],1
  411a05:	out    0x7c,al
  411a07:	mov    eax,DWORD PTR [ebx-0x45]
  411a0a:	push   0xa619e714
  411a0f:	dec    esi
  411a10:	and    ch,BYTE PTR es:[edx-0x5c3e45b6]
  411a17:	cs (bad) 
  411a1a:	popf   
  411a1b:	iret   
  411a1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a1d:	retf   0x85e6
  411a20:	pop    ss
  411a21:	fcomp  QWORD PTR fs:[ebp-0x24e2c6d1]
  411a28:	or     al,BYTE PTR [eax-0x68ffc6ca]
  411a2e:	and    bl,BYTE PTR [edi-0x7b]
  411a31:	ficom  WORD PTR [esi*8+0x30139be4]
  411a38:	xchg   ebp,eax
  411a39:	mov    eax,0x68405a5d
  411a3e:	sub    eax,0x8282ae70
  411a43:	retf   
  411a44:	dec    ebx
  411a45:	pop    es
  411a46:	push   edi
  411a47:	mov    bl,0xfb
  411a49:	je     0x411a63
  411a4b:	retf   
  411a4c:	pop    ebx
  411a4d:	add    bl,ch
  411a4f:	call   0xbf99c31a
  411a54:	test   DWORD PTR [eax],0x5d05ba8d
  411a5a:	xor    ah,cl
  411a5c:	ins    BYTE PTR es:[edi],dx
  411a5d:	jp     0x411a67
  411a5f:	pop    ss
  411a60:	xchg   DWORD PTR ds:0x49a98829,edi
  411a66:	mov    ?,WORD PTR [edi]
  411a68:	fnstenv [eax+0x35714359]
  411a6e:	pop    ecx
  411a6f:	(bad)  
  411a70:	nop
  411a71:	out    0x46,eax
  411a73:	(bad)  
  411a74:	cmp    esi,DWORD PTR [edx+0x7e9b7997]
  411a7a:	into   
  411a7b:	pop    ebp
  411a7c:	and    ah,dh
  411a7e:	dec    ecx
  411a7f:	dec    ebp
  411a80:	jle    0x411a78
  411a82:	popa   
  411a83:	mov    al,ds:0xdcbe0f9
  411a88:	jl     0x411ab1
  411a8a:	fcomp  QWORD PTR [edx-0x11d4c0c3]
  411a90:	sbb    al,0xf7
  411a92:	std    
  411a93:	sub    al,0xcf
  411a95:	fmul   DWORD PTR [ebp-0x52f339e5]
  411a9b:	sbb    DWORD PTR [edx],eax
  411a9d:	mov    ch,0x2f
  411a9f:	outs   dx,DWORD PTR ds:[esi]
  411aa0:	push   ds
  411aa1:	retf   0x8d1f
  411aa4:	scas   al,BYTE PTR es:[edi]
  411aa5:	push   ebx
  411aa6:	xchg   ebp,eax
  411aa7:	push   ss
  411aa8:	sbb    ah,BYTE PTR fs:[ecx]
  411aab:	xchg   edi,eax
  411aac:	ins    BYTE PTR es:[edi],dx
  411aad:	xchg   ebp,eax
  411aae:	fs push ss
  411ab0:	mov    BYTE PTR [eax],ah
  411ab2:	push   0x6a
  411ab4:	in     eax,dx
  411ab5:	sub    edx,0xffffffac
  411ab8:	lock stos BYTE PTR es:[edi],al
  411aba:	add    edx,DWORD PTR [ecx+ebx*1]
  411abd:	mov    cl,0xe0
  411abf:	imul   edx,DWORD PTR [si+0x1e3d],0xba889b72
  411ac8:	mov    ds:0xf3667757,al
  411acd:	icebp  
  411ace:	scas   eax,DWORD PTR es:[edi]
  411acf:	pop    es
  411ad0:	xchg   esp,eax
  411ad1:	xchg   esi,eax
  411ad2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ad3:	ins    DWORD PTR es:[edi],dx
  411ad4:	xchg   esi,eax
  411ad5:	jmp    0xc6fb:0x9b1d2a71
  411adc:	xchg   esi,eax
  411add:	push   ecx
  411ade:	inc    eax
  411adf:	scas   al,BYTE PTR es:[edi]
  411ae0:	mov    bh,0xf5
  411ae2:	out    dx,eax
  411ae3:	xor    ebp,0xfc9176a9
  411ae9:	test   DWORD PTR [edi-0x55],0x5a8712f1
  411af0:	(bad)  
  411af1:	push   eax
  411af2:	mov    ds:0x63c746c,eax
  411af7:	add    DWORD PTR [edi-0x70],0xe661768c
  411afe:	xchg   esp,eax
  411aff:	scas   eax,DWORD PTR es:[edi]
  411b00:	dec    ebp
  411b01:	adc    eax,0x7896619d
  411b06:	dec    edi
  411b07:	mov    ecx,esi
  411b09:	jae    0x411b4a
  411b0b:	xor    eax,0xc9ad0138
  411b10:	sbb    eax,0xc8d5f323
  411b15:	les    ebx,FWORD PTR [ebx]
  411b17:	push   ebx
  411b18:	(bad)  
  411b19:	cli    
  411b1a:	jns    0x411b5a
  411b1c:	xchg   edx,eax
  411b1d:	cs sbb esp,ebx
  411b20:	dec    ebx
  411b21:	push   ecx
  411b22:	pop    ebp
  411b23:	ins    DWORD PTR es:[edi],dx
  411b24:	jns    0x411b4e
  411b26:	out    0x26,eax
  411b28:	cmp    BYTE PTR [edx],dh
  411b2a:	jae    0x411ad7
  411b2c:	adc    bh,BYTE PTR [eax+0x5edf836e]
  411b32:	or     ebx,eax
  411b34:	xor    dh,BYTE PTR [ebx-0x2a]
  411b37:	jl     0x411b1f
  411b39:	les    esp,FWORD PTR [eax+ebx*2+0x59]
  411b3d:	push   ecx
  411b3e:	add    BYTE PTR [ebx],al
  411b40:	imul   eax,DWORD PTR [ebx-0x2efd7e0c],0xfffffff7
  411b47:	sub    eax,0x7d799dee
  411b4c:	lds    ecx,FWORD PTR [eax+eax*1]
  411b4f:	jge    0x411b9a
  411b51:	mov    ebx,cs
  411b53:	dec    ebp
  411b54:	and    al,0x93
  411b56:	or     al,0xfe
  411b58:	sub    al,0xe4
  411b5a:	and    al,0x54
  411b5c:	fs pop esi
  411b5e:	(bad)  ss:[edx+ebx*8-0x697fd083]
  411b66:	sub    bh,al
  411b68:	mov    ch,0xb5
  411b6a:	mov    ?,esi
  411b6c:	arpl   si,di
  411b6e:	dec    esi
  411b6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b70:	leave  
  411b71:	jg     0x411bdd
  411b73:	add    al,0x6
  411b75:	jg     0x411b68
  411b77:	jmp    0x169f:0x582ae741
  411b7e:	add    bl,BYTE PTR [ebx+0x288aafa]
  411b84:	rol    BYTE PTR [edx+0x39e78e40],1
  411b8a:	enter  0xd408,0x23
  411b8e:	lea    esp,[eax-0x68]
  411b91:	pop    esi
  411b92:	adc    esi,DWORD PTR [ecx+0x6232949c]
  411b98:	inc    DWORD PTR [esi-0x51]
  411b9b:	stc    
  411b9c:	mov    WORD PTR [edi+eiz*2],cs
  411b9f:	loopne 0x411bd3
  411ba1:	test   DWORD PTR [edi+eiz*4],0x221757e4
  411ba8:	sub    al,0xc1
  411baa:	daa    
  411bab:	out    0xf0,al
  411bad:	dec    ebx
  411bae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411baf:	out    0x6b,al
  411bb1:	daa    
  411bb2:	sti    
  411bb3:	out    dx,al
  411bb4:	icebp  
  411bb5:	iret   
  411bb6:	ins    BYTE PTR es:[edi],dx
  411bb7:	(bad)  
  411bb8:	in     eax,0xec
  411bba:	or     ebp,DWORD PTR [ebx]
  411bbc:	pop    es
  411bbd:	push   esp
  411bbe:	in     eax,0x30
  411bc0:	cwde   
  411bc1:	xor    al,0x7b
  411bc3:	or     al,0x50
  411bc5:	jmp    0xabaf:0x11c404f6
  411bcc:	inc    edx
  411bcd:	dec    edi
  411bce:	inc    esp
  411bcf:	in     al,dx
  411bd0:	fwait
  411bd1:	or     al,0x3f
  411bd3:	in     eax,0xc3
  411bd5:	retf   
  411bd6:	push   ss
  411bd7:	(bad)  
  411bd8:	gs pop ebp
  411bda:	and    eax,0x74aec124
  411bdf:	out    0x95,al
  411be1:	out    0xdd,al
  411be3:	fadd   QWORD PTR ds:0x9bf89ded
  411be9:	std    
  411bea:	js     0x411be5
  411bec:	mov    edi,DWORD PTR [ecx-0x38]
  411bef:	std    
  411bf0:	xor    ecx,esp
  411bf2:	fstp   QWORD PTR [ebx+0x50]
  411bf5:	gs jp  0x411c0e
  411bf8:	test   DWORD PTR [ecx-0x2a],0xedc6ae56
  411bff:	(bad)  
  411c00:	jg     0x411ba6
  411c02:	aaa    
  411c03:	repnz ins BYTE PTR es:[edi],dx
  411c05:	inc    ecx
  411c06:	outs   dx,BYTE PTR ds:[esi]
  411c07:	aas    
  411c08:	shr    DWORD PTR fs:[esi+0xd],cl
  411c0c:	sti    
  411c0d:	je     0x411ba2
  411c0f:	sub    ebx,ecx
  411c11:	(bad)
  411c14:	jnp    0x411c8c
  411c16:	test   al,0x22
  411c18:	out    dx,eax
  411c19:	shr    edi,0x69
  411c1c:	and    eax,0x4071d089
  411c21:	and    al,0x19
  411c23:	leave  
  411c24:	mov    ebx,0x9c5a379f
  411c29:	xlat   BYTE PTR ds:[ebx]
  411c2a:	inc    ebx
  411c2b:	adc    al,BYTE PTR [eax-0x6]
  411c2e:	push   es
  411c2f:	adc    ch,bh
  411c31:	je     0x411c94
  411c33:	sti    
  411c34:	popf   
  411c35:	ret    
  411c36:	push   ss
  411c37:	paddb  mm3,mm1
  411c3a:	or     eax,0x64d6b6fd
  411c3f:	sbb    BYTE PTR [ebx],dh
  411c41:	add    eax,0x824ca28
  411c46:	jmp    0x1600:0x366d6dc9
  411c4d:	pop    es
  411c4e:	les    edi,FWORD PTR [ebp-0x4b]
  411c51:	inc    ecx
  411c52:	sub    eax,DWORD PTR [esi+0x15]
  411c55:	test   bh,dh
  411c57:	iret   
  411c58:	int    0xf9
  411c5a:	(bad)  
  411c5b:	sar    ebp,0xf2
  411c5e:	or     eax,0x7a297dd7
  411c63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c64:	daa    
  411c65:	or     DWORD PTR [eax-0x78665cdf],esi
  411c6b:	and    ah,dl
  411c6d:	ins    BYTE PTR es:[edi],dx
  411c6e:	mov    dh,0x7
  411c70:	outs   dx,DWORD PTR ds:[esi]
  411c71:	shl    DWORD PTR [edi],0xc8
  411c74:	cmc    
  411c75:	xchg   ebx,eax
  411c76:	cmp    ebp,esp
  411c78:	lods   al,BYTE PTR ds:[esi]
  411c79:	aaa    
  411c7a:	mov    al,ds:0xf9c17c5a
  411c7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c80:	jb     0x411c04
  411c82:	sub    edx,DWORD PTR ds:0xaa5ea9e6
  411c88:	retf   0xcf
  411c8b:	or     ah,bl
  411c8d:	int    0x9c
  411c8f:	scas   al,BYTE PTR es:[edi]
  411c90:	cmp    al,0xd6
  411c92:	push   ebx
  411c93:	out    dx,eax
  411c94:	and    edi,DWORD PTR [ebp+0x74]
  411c97:	pusha  
  411c98:	push   edx
  411c99:	rcr    DWORD PTR [ebx-0x15],1
  411c9c:	(bad)  
  411c9d:	mov    ebp,0xfcccd8cb
  411ca2:	mov    WORD PTR [ebx],?
  411ca4:	dec    edi
  411ca5:	jl     0x411c5b
  411ca7:	push   cs
  411ca8:	and    al,BYTE PTR [ebp+0x3d]
  411cab:	jb     0x411c4a
  411cad:	loope  0x411cf1
  411caf:	cmp    DWORD PTR [ebx+0x6b4d17d5],edi
  411cb5:	cmc    
  411cb6:	ja     0x411d20
  411cb8:	xor    ch,BYTE PTR [eax-0x785414a7]
  411cbe:	stc    
  411cbf:	popf   
  411cc0:	pop    ebp
  411cc1:	mov    dh,0x2e
  411cc3:	stc    
  411cc4:	mov    ds:0xd6a793fc,eax
  411cc9:	or     DWORD PTR [edi],ecx
  411ccb:	loop   0x411ce7
  411ccd:	out    dx,eax
  411cce:	push   ebp
  411ccf:	into   
  411cd0:	sub    edi,DWORD PTR ds:[ebx]
  411cd3:	xchg   BYTE PTR [ebp+ecx*4-0x602a56b1],al
  411cda:	push   cs
  411cdb:	pop    es
  411cdc:	mov    ch,0xd4
  411cde:	and    bl,BYTE PTR [ecx-0x26f8c997]
  411ce4:	sub    esp,DWORD PTR [esi+0x1691a942]
  411cea:	jmp    0xed19:0x67b5c19e
  411cf1:	mov    ecx,0x985a74d9
  411cf6:	fild   QWORD PTR [ebp-0xc6a2df0]
  411cfc:	jp     0x411d76
  411cfe:	inc    ebx
  411cff:	mov    bl,0x4b
  411d01:	pop    edx
  411d02:	out    0x12,al
  411d04:	inc    ecx
  411d05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d06:	adc    DWORD PTR [ecx],ebp
  411d08:	inc    esi
  411d09:	into   
  411d0a:	add    BYTE PTR [esp+edi*4+0x2548fe35],dl
  411d11:	lods   al,BYTE PTR ds:[esi]
  411d12:	pop    ss
  411d13:	out    0xa5,eax
  411d15:	jge    0x411d4c
  411d17:	leave  
  411d18:	xchg   esi,eax
  411d19:	into   
  411d1a:	mov    ebx,esp
  411d1c:	std    
  411d1d:	mov    bl,0xaa
  411d1f:	fidiv  DWORD PTR [ecx+0x3c]
  411d22:	mov    edi,edx
  411d24:	aaa    
  411d25:	jo     0x411d36
  411d27:	mov    ds:0x36d091e7,al
  411d2c:	ror    DWORD PTR [edi],0x2
  411d2f:	bound  ebp,QWORD PTR [edi]
  411d31:	out    dx,al
  411d32:	xchg   esp,eax
  411d33:	idiv   BYTE PTR [ecx]
  411d35:	push   ds
  411d36:	retf   
  411d37:	dec    eax
  411d38:	fldcw  WORD PTR [eax]
  411d3a:	pop    ebx
  411d3b:	sbb    BYTE PTR [ecx],dl
  411d3d:	outs   dx,DWORD PTR ds:[esi]
  411d3e:	sahf   
  411d3f:	out    0xfd,eax
  411d41:	xchg   edx,eax
  411d42:	sbb    eax,0x281467b6
  411d47:	pop    edi
  411d48:	add    al,0x6e
  411d4a:	or     eax,0x9692536e
  411d4f:	add    BYTE PTR [ecx],ch
  411d51:	push   0x33
  411d53:	push   edi
  411d54:	(bad)  
  411d55:	mov    edi,0xb0deaf1
  411d5a:	fidiv  WORD PTR [ebp-0x4]
  411d5d:	adc    BYTE PTR [ebx],0xd6
  411d60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d61:	mov    ds:0x45d12211,al
  411d66:	test   BYTE PTR [ecx-0x50],al
  411d69:	jmp    0x276c22be
  411d6e:	stc    
  411d6f:	pop    ecx
  411d70:	(bad)  
  411d71:	faddp  st(6),st
  411d73:	popa   
  411d74:	adc    al,BYTE PTR [esi+0x340fe7dd]
  411d7a:	and    al,0x8e
  411d7d:	push   ss
  411d7e:	out    dx,al
  411d7f:	push   ebp
  411d80:	jg     0x411de6
  411d82:	loop   0x411ded
  411d84:	(bad)  
  411d86:	pop    ebx
  411d87:	dec    esp
  411d88:	call   0xba41959c
  411d8d:	bound  esp,QWORD PTR [ebx+0x69]
  411d90:	std    
  411d91:	rep outs dx,DWORD PTR ds:[esi]
  411d93:	xchg   ebx,eax
  411d94:	imul   DWORD PTR [eax+0x44]
  411d97:	dec    esi
  411d98:	sbb    al,0x4
  411d9a:	sub    dh,al
  411d9c:	int    0xb6
  411d9e:	adc    ch,BYTE PTR [ecx-0x2332fd59]
  411da4:	mov    ch,0xa1
  411da6:	lahf   
  411da7:	dec    edi
  411da8:	int    0xa1
  411daa:	jle    0x411d5e
  411dac:	loop   0x411db5
  411dae:	inc    ebp
  411daf:	pop    esi
  411db0:	lock fldcw WORD PTR [ebp+0x7c9b2277]
  411db7:	xchg   BYTE PTR [esi],cl
  411db9:	cmp    eax,DWORD PTR [esi-0x3b]
  411dbc:	jo     0x411dc0
  411dbe:	mul    DWORD PTR [ebp+0x8]
  411dc1:	jnp    0x411dc9
  411dc3:	jmp    0x629a:0x7e62063
  411dca:	pusha  
  411dcb:	xchg   ecx,eax
  411dcc:	pop    ecx
  411dcd:	mov    eax,0xc4801eb4
  411dd2:	lock push ss
  411dd4:	inc    BYTE PTR [edi-0x25]
  411dd7:	push   0x21ec0463
  411ddc:	xor    cl,BYTE PTR [edi-0x47]
  411ddf:	(bad)  
  411de0:	les    edi,FWORD PTR [esi]
  411de2:	adc    edi,edi
  411de4:	and    edx,DWORD PTR [eax]
  411de6:	push   ebx
  411de7:	(bad)  
  411de8:	fst    DWORD PTR [ebx]
  411dea:	push   0xffffffdc
  411dec:	pop    es
  411ded:	adc    eax,0x273a6cde
  411df2:	fbstp  TBYTE PTR [ebx-0x75f87896]
  411df8:	loop   0x411e60
  411dfa:	out    0xed,eax
  411dfc:	inc    ebx
  411dfd:	pusha  
  411dfe:	sub    eax,0x48532960
  411e03:	ror    esp,0xaa
  411e06:	jmp    0x961fd2db
  411e0b:	test   eax,0x70476457
  411e10:	in     eax,0x10
  411e12:	lods   eax,DWORD PTR ds:[esi]
  411e13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e14:	and    DWORD PTR [edi+0x42],ebp
  411e17:	pop    eax
  411e18:	sub    al,0x34
  411e1a:	inc    ebx
  411e1b:	mov    cs,eax
  411e1d:	jge    0x411e6f
  411e1f:	jmp    0x411e62
  411e21:	fdiv   DWORD PTR [esi+0x45]
  411e24:	and    al,0x74
  411e26:	mov    al,0x5a
  411e28:	inc    edi
  411e29:	data16 jnp 0x411ea7
  411e2c:	ror    ebp,cl
  411e2e:	dec    esp
  411e2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e30:	inc    esi
  411e31:	push   es
  411e32:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  411e34:	adc    BYTE PTR [esi-0x5b],0x85
  411e38:	or     al,0x5d
  411e3a:	sti    
  411e3b:	in     eax,dx
  411e3c:	test   dh,dh
  411e3e:	push   ss
  411e3f:	dec    ebx
  411e41:	dec    ebx
  411e42:	lock push 0x68cb067f
  411e48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e49:	scas   al,BYTE PTR es:[edi]
  411e4a:	out    dx,al
  411e4b:	lea    esi,[edi]
  411e4d:	mov    ds:0xd4d5fe0a,eax
  411e52:	outs   dx,DWORD PTR ds:[esi]
  411e53:	push   es
  411e54:	ins    DWORD PTR es:[edi],dx
  411e55:	cmp    al,0xc1
  411e57:	js     0x411e14
  411e59:	pop    edi
  411e5a:	cmp    eax,0x9daedefe
  411e5f:	js     0x411ebd
  411e61:	lock (bad) 
  411e63:	clc    
  411e64:	sbb    esi,DWORD PTR [eax+0xceece90]
  411e6a:	in     al,dx
  411e6b:	dec    esi
  411e6c:	pushf  
  411e6d:	adc    eax,0x1b24d93
  411e72:	adc    al,0x3c
  411e74:	jne    0x411e5c
  411e76:	jle    0x411e8e
  411e78:	out    0xa4,al
  411e7a:	ficomp WORD PTR [esi+0xf]
  411e7d:	inc    esi
  411e7e:	mov    ebp,0xa09a1f7c
  411e83:	adc    eax,0x7820a37
  411e88:	or     dh,BYTE PTR [eax+eiz*1-0x61e8c49]
  411e8f:	inc    ebp
  411e90:	dec    edi
  411e91:	and    eax,0x4891bcb2
  411e96:	xlat   BYTE PTR ds:[ebx]
  411e97:	pusha  
  411e98:	cli    
  411e99:	inc    ebx
  411e9a:	jae    0x411ef6
  411e9c:	dec    ebx
  411e9d:	int3   
  411e9e:	push   ds
  411e9f:	je     0x411efb
  411ea1:	adc    al,0xf6
  411ea3:	call   0x92b1:0xebcbcd0f
  411eaa:	inc    esi
  411eab:	jmp    0xf75189e0
  411eb0:	enter  0x5b50,0x32
  411eb4:	call   0x7045:0xcc295158
  411ebb:	std    
  411ebc:	push   edi
  411ebd:	in     al,dx
  411ebe:	retf   0xeab1
  411ec1:	enter  0x6cc1,0xd6
  411ec5:	dec    ebx
  411ec6:	cs jge 0x411ec7
  411ec9:	mov    esi,0x743fe5ed
  411ece:	fwait
  411ecf:	lods   eax,DWORD PTR ds:[esi]
  411ed0:	aas    
  411ed1:	sub    DWORD PTR [edx-0x7],esi
  411ed4:	cwde   
  411ed5:	sub    eax,0xb14fbb
  411eda:	lock jmp 0x411e99
  411edd:	ss lock stos DWORD PTR es:[edi],eax
  411ee0:	pop    ds
  411ee1:	add    al,0xf2
  411ee3:	(bad)  
  411ee4:	mov    ebx,0xfd3e7ca
  411ee9:	les    esp,FWORD PTR [esi-0x2a]
  411eec:	int3   
  411eed:	mov    al,0x97
  411eef:	retf   0x9151
  411ef2:	pop    eax
  411ef3:	fst    DWORD PTR [edi-0x35764358]
  411ef9:	cmc    
  411efa:	out    dx,al
  411efb:	sbb    dl,BYTE PTR [esi-0x15]
  411efe:	out    dx,al
  411eff:	aam    0xd8
  411f01:	mov    ds:0xd0c6e291,al
  411f06:	cmp    BYTE PTR [edx+0xd411be1],cl
  411f0c:	sar    al,1
  411f0e:	aaa    
  411f0f:	(bad)  
  411f10:	adc    dh,ch
  411f12:	jns    0x411eeb
  411f14:	call   0x7782b987
  411f19:	dec    eax
  411f1a:	adc    eax,0xc68ad7ea
  411f1f:	add    BYTE PTR [edx-0x37],0x0
  411f23:	push   0xffffffb9
  411f25:	push   esi
  411f26:	jo     0x411eb0
  411f28:	xor    edi,DWORD PTR ds:0x51c48357
  411f2e:	xchg   DWORD PTR [eax],esi
  411f30:	int3   
  411f31:	repnz es pop edi
  411f34:	add    ch,BYTE PTR [edi+0x7b3f605e]
  411f3a:	push   edx
  411f3b:	das    
  411f3c:	das    
  411f3d:	popf   
  411f3e:	push   eax
  411f3f:	pop    ecx
  411f40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f41:	add    eax,0xa03e11ec
  411f46:	sub    eax,0xa4e7f62b
  411f4b:	mov    bl,0xac
  411f4d:	cdq    
  411f4e:	add    al,0x4a
  411f50:	mov    DWORD PTR [ecx-0x4c],ebp
  411f53:	mov    bh,0x78
  411f55:	push   esi
  411f56:	ins    BYTE PTR es:[edi],dx
  411f57:	jbe    0x411f44
  411f59:	adc    al,0x2a
  411f5b:	aas    
  411f5c:	or     eax,0x79fa6e31
  411f61:	push   cs
  411f62:	mov    WORD PTR [esp+ebx*2-0x3393c243],ss
  411f69:	imul   eax,DWORD PTR [ebp+0x11],0x4b53595a
  411f70:	xchg   ebx,eax
  411f71:	or     ch,dh
  411f73:	call   0x54de727
  411f78:	adc    eax,0x865a5bfe
  411f7d:	hlt    
  411f7e:	mov    eax,0x6e2803ec
  411f83:	or     BYTE PTR [ecx],dh
  411f85:	dec    esp
  411f86:	loope  0x411f0a
  411f88:	ret    
  411f89:	out    dx,al
  411f8a:	add    dh,0x2f
  411f8d:	fsubr  DWORD PTR [edi]
  411f8f:	sar    DWORD PTR [edx+0x4a],1
  411f92:	dec    ebx
  411f93:	int3   
  411f94:	leave  
  411f95:	mov    bl,0x9
  411f97:	inc    eax
  411f98:	sar    BYTE PTR [esi],cl
  411f9a:	test   BYTE PTR [edx],dh
  411f9c:	aad    0x60
  411f9e:	inc    ebp
  411f9f:	loop   0x411f5c
  411fa1:	repnz into 
  411fa3:	xchg   esp,eax
  411fa4:	push   0xffffff90
  411fa6:	dec    ecx
  411fa7:	xchg   ebp,eax
  411fa8:	adc    eax,DWORD PTR [eax]
  411faa:	push   ss
  411fab:	sahf   
  411fac:	adc    eax,0xac117153
  411fb1:	mov    ah,0x31
  411fb3:	call   0x103a3a65
  411fb8:	lock fimul WORD PTR [edx+0x75]
  411fbc:	std    
  411fbd:	call   0x9e1c:0x8d37c8a5
  411fc4:	cmp    edi,DWORD PTR [ecx-0x20]
  411fc7:	nop
  411fc8:	into   
  411fc9:	outs   dx,DWORD PTR ds:[esi]
  411fca:	pop    ds
  411fcb:	push   ds
  411fcc:	shr    edx,0x9a
  411fcf:	dec    ebp
  411fd0:	(bad)  
  411fd1:	stc    
  411fd2:	(bad)  
  411fd3:	jbe    0x411fbb
  411fd5:	sar    BYTE PTR [eax+0x59d1c29a],0x53
  411fdc:	or     esi,DWORD PTR [ebx-0x1d]
  411fdf:	popa   
  411fe0:	aas    
  411fe1:	sti    
  411fe2:	xlat   BYTE PTR ds:[ebx]
  411fe3:	in     al,0xec
  411fe5:	push   ds
  411fe6:	js     0x411fba
  411fe8:	sahf   
  411fe9:	int3   
  411fea:	push   edx
  411feb:	push   ss
  411fec:	call   0x8681:0x415f9021
  411ff3:	pusha  
  411ff4:	mov    cl,0xa3
  411ff6:	xor    eax,0x75ce57ea
  411ffb:	and    eax,0x908f41f
  412000:	adc    eax,0xdbee919f
  412005:	dec    ebp
  412006:	inc    esp
  412007:	imul   edi,DWORD PTR [ecx+0x60a02aba],0x20953c9f
  412011:	(bad)  
  412012:	mov    eax,DWORD PTR [edx+ebx*1+0x74]
  412016:	cmp    DWORD PTR [esi],0x8e727184
  41201c:	sub    al,bh
  41201e:	inc    eax
  41201f:	mov    WORD PTR [ebx],ss
  412021:	pop    ds
  412022:	add    eax,0x377d86ce
  412027:	inc    ebx
  412028:	xlat   BYTE PTR ds:[ebx]
  412029:	adc    eax,esp
  41202b:	xchg   edx,eax
  41202c:	test   DWORD PTR [ecx],edx
  41202e:	stos   BYTE PTR es:[edi],al
  41202f:	arpl   WORD PTR [ecx+0x61],bx
  412032:	inc    edx
  412033:	and    DWORD PTR ds:[edx+0x390775be],esp
  41203a:	retf   
  41203b:	(bad)
  41203e:	add    al,0x7d
  412040:	xchg   edi,eax
  412041:	in     al,dx
  412042:	test   DWORD PTR ss:[eax+eax*1-0x15cd2edf],ebx
  41204a:	mov    eax,esi
  41204c:	stc    
  41204d:	fwait
  41204e:	push   esp
  41204f:	push   edx
  412050:	fucomp st(5)
  412052:	leave  
  412053:	arpl   WORD PTR [eax+0x2026ba6],bx
  412059:	cmp    BYTE PTR [edi+edx*8],bh
  41205c:	or     BYTE PTR [esi-0x4fa177c7],ch
  412062:	ins    DWORD PTR es:[edi],dx
  412063:	push   cs
  412064:	and    al,0xfe
  412066:	xor    eax,0x91f8474f
  41206b:	popa   
  41206c:	cdq    
  41206d:	adc    cl,BYTE PTR [ebp+ebx*4-0x9]
  412071:	ror    DWORD PTR [ecx-0x69fe3ae4],1
  412077:	(bad)  
  412078:	jb     0x4120a7
  41207a:	imul   edx,DWORD PTR [esi-0x44],0xe704631a
  412081:	xor    bl,bl
  412083:	sbb    BYTE PTR [ebx+0x14],cl
  412086:	xchg   edx,eax
  412087:	ret    0x22b7
  41208a:	in     al,dx
  41208b:	(bad)  
  41208d:	ins    DWORD PTR es:[edi],dx
  41208e:	pop    ebx
  41208f:	mov    ds:0x2dcff4a7,eax
  412094:	fild   QWORD PTR [eax-0x3d]
  412097:	sub    DWORD PTR [ecx+edi*4-0x4a],ebx
  41209b:	and    edx,ebx
  41209d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41209e:	fimul  DWORD PTR ds:[esi-0xa303007]
  4120a5:	call   0x4ee209d3
  4120aa:	iret   
  4120ab:	adc    al,0x14
  4120ad:	jge    0x41203d
  4120af:	adc    ebp,DWORD PTR [edx]
  4120b1:	pop    ebp
  4120b2:	mov    bh,0x3b
  4120b4:	push   ds
  4120b5:	mov    ebp,ebp
  4120b7:	adc    al,0x3f
  4120b9:	xor    eax,0xfd314848
  4120be:	addr16 add ebp,0xfffffffd
  4120c2:	push   cs
  4120c3:	mov    ah,0xba
  4120c5:	sub    ebp,DWORD PTR [esi-0x6c0a430f]
  4120cb:	aad    0xd2
  4120cd:	push   cs
  4120ce:	(bad)  
  4120d0:	inc    ecx
  4120d1:	inc    esi
  4120d2:	call   0xa6a91f1e
  4120d7:	das    
  4120d8:	stos   BYTE PTR es:[edi],al
  4120d9:	or     eax,0xfb7b7f90
  4120de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120df:	xchg   esp,eax
  4120e0:	setle  BYTE PTR [ebp-0x67245090]
  4120e7:	push   0xf5d4440b
  4120ec:	dec    ecx
  4120ed:	dec    edx
  4120ee:	stos   DWORD PTR es:[edi],eax
  4120ef:	lock aas 
  4120f1:	icebp  
  4120f2:	mov    cl,0x68
  4120f4:	(bad)  
  4120f5:	mov    ah,0x4c
  4120f7:	push   eax
  4120f8:	shl    BYTE PTR [esp+edi*4],0xfd
  4120fc:	nop    esp
  4120ff:	mov    ah,0x35
  412101:	pushf  
  412102:	shl    ecx,0xbf
  412105:	xor    BYTE PTR [ecx+ecx*1+0x1028a69],ah
  41210c:	xor    edi,DWORD PTR [edx+ecx*4-0x2f]
  412110:	mov    edx,DWORD PTR [edx]
  412112:	jg     0x41209a
  412114:	push   0x25b972f0
  412119:	or     al,BYTE PTR [ebp-0x73]
  41211c:	test   al,0x41
  41211e:	inc    ecx
  41211f:	retf   
  412120:	add    cl,ah
  412122:	xchg   esi,eax
  412123:	sub    eax,0x9fd23238
  412128:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41212a:	add    ebp,DWORD PTR [eax]
  41212c:	mov    ds:0xf092d325,al
  412131:	(bad)  
  412132:	xchg   ebp,eax
  412133:	pop    ss
  412134:	cli    
  412135:	dec    esp
  412136:	retf   0x27e7
  412139:	inc    ebp
  41213a:	mov    esp,0x3262bf4
  41213f:	lahf   
  412140:	cdq    
  412141:	xor    cl,dh
  412143:	pop    eax
  412144:	loop   0x412152
  412146:	cwde   
  412147:	repnz mov ds,WORD PTR es:[edi]
  41214b:	data16 sbb BYTE PTR [eax],bl
  41214e:	push   esi
  41214f:	mov    ah,0x11
  412151:	pop    ss
  412152:	push   cs
  412153:	sbb    eax,0xbf0ed0bb
  412158:	inc    ebp
  412159:	jecxz  0x4120fb
  41215b:	push   ss
  41215c:	inc    ebp
  41215d:	xchg   esp,eax
  41215e:	out    dx,al
  41215f:	out    0xc5,al
  412161:	and    BYTE PTR [edx+0x5e],ah
  412164:	jmp    0xba695da1
  412169:	lock jg 0x4121a5
  41216c:	pop    ebp
  41216d:	pop    esp
  41216e:	cmc    
  41216f:	test   ecx,0x79a1dcac
  412175:	push   ecx
  412176:	popf   
  412177:	inc    ebx
  412178:	xor    BYTE PTR [esi+0x39475093],ah
  41217e:	iret   
  41217f:	jmp    0x412197
  412181:	mov    bh,0xfb
  412183:	(bad)  
  412184:	lock pop eax
  412186:	jmp    0x5fe5:0x47df2a17
  41218d:	retf   
  41218e:	and    al,0x22
  412190:	nop
  412191:	rcl    DWORD PTR [ecx-0x259f4a79],cl
  412197:	and    BYTE PTR [esi],0x52
  41219a:	xor    DWORD PTR ds:0x51cb82a7,ecx
  4121a0:	mov    ds:0x8d1ce9b,al
  4121a5:	lock mov eax,0x40f75122
  4121ab:	ror    BYTE PTR [ebx],0x26
  4121ae:	nop
  4121af:	mov    esi,0xbed0593d
  4121b4:	dec    ecx
  4121b5:	aad    0xb6
  4121b7:	xor    BYTE PTR [esi],0xe0
  4121ba:	enter  0xc351,0xc2
  4121be:	cmp    BYTE PTR [esi],cl
  4121c0:	adc    al,0x45
  4121c2:	cwde   
  4121c3:	imul   edx,DWORD PTR [edx+0x199bfe0b],0x9aa32a2
  4121cd:	cdq    
  4121ce:	inc    ecx
  4121cf:	xchg   esi,eax
  4121d0:	cmp    BYTE PTR [edi-0x36],ch
  4121d3:	push   0xffffffa0
  4121d5:	pusha  
  4121d6:	leave  
  4121d7:	fisttp QWORD PTR [ecx+0x6fe4d4e1]
  4121dd:	jb     0x4121fa
  4121df:	push   edi
  4121e0:	gs push edx
  4121e2:	imul   ebx,DWORD PTR [esi-0x50d31f74],0x49d73e9c
  4121ec:	aaa    
  4121ed:	or     DWORD PTR [esi-0x420d6ae9],edi
  4121f3:	xlat   BYTE PTR ds:[ebx]
  4121f4:	lods   eax,DWORD PTR ds:[esi]
  4121f5:	pop    edx
  4121f6:	dec    edx
  4121f7:	imul   esi,DWORD PTR gs:[esp+edi*2-0x59dda43f],0x7b28a9d2
  412203:	aas    
  412204:	dec    esp
  412205:	add    al,0xea
  412207:	add    DWORD PTR [ecx+0x2aef6e6f],edi
  41220d:	jecxz  0x4121eb
  41220f:	cmp    eax,0x7a981bc1
  412214:	lods   al,BYTE PTR ds:[esi]
  412215:	int3   
  412216:	enter  0x1801,0x3e
  41221a:	es pop es
  41221c:	into   
  41221d:	sahf   
  41221e:	push   ebp
  41221f:	lods   al,BYTE PTR es:[esi]
  412221:	jge    0x412208
  412223:	jmp    FWORD PTR [edi]
  412225:	aaa    
  412226:	sbb    BYTE PTR [ebp-0x5b],al
  412229:	dec    esi
  41222a:	jmp    0x6aaf:0xeb4a3d8c
  412231:	loopne 0x412274
  412233:	test   eax,0x8b7cf8dd
  412238:	xor    eax,0xa9799d69
  41223d:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41223f:	cli    
  412240:	pop    ecx
  412241:	nop
  412242:	enter  0x4614,0x3e
  412246:	sub    dl,ch
  412248:	and    al,bl
  41224a:	and    al,0x67
  41224c:	push   ds
  41224d:	ds clc 
  41224f:	or     ebp,eax
  412251:	out    dx,al
  412252:	fiadd  DWORD PTR ds:0xb3007c60
  412258:	mov    BYTE PTR [ebx-0xce938b0],dh
  41225e:	nop
  41225f:	xchg   ebp,eax
  412260:	pushf  
  412261:	fiadd  DWORD PTR [edi+0x7c655d36]
  412267:	scas   eax,DWORD PTR es:[edi]
  412268:	out    0x34,al
  41226a:	lods   eax,DWORD PTR ds:[esi]
  41226b:	arpl   WORD PTR [esi-0x375afbbb],si
  412271:	mov    ecx,0x1380c4d
  412276:	mov    al,ds:0xb7aa52a1
  41227b:	push   0x60
  41227d:	lock jns 0x412220
  412280:	xchg   ecx,eax
  412281:	pushf  
  412282:	xchg   DWORD PTR [edx-0x3a],esp
  412285:	div    DWORD PTR [ebx-0x1f]
  412288:	retf   0x2484
  41228b:	pop    ebp
  41228c:	lock dec ebx
  41228e:	mov    eax,ds:0x3aa3c818
  412293:	arpl   WORD PTR ds:0xdf9e7f1d,dx
  412299:	add    BYTE PTR [eax],0x5a
  41229c:	call   0x3481:0xe83f9108
  4122a3:	jb     0x412285
  4122a5:	cdq    
  4122a6:	fstp   st(5)
  4122a8:	sbb    ah,BYTE PTR [eax]
  4122aa:	shl    ebp,1
  4122ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122ad:	mov    al,0xd5
  4122af:	rcr    ch,0x33
  4122b2:	or     BYTE PTR [ebx],bh
  4122b4:	mul    DWORD PTR [ebx+edx*8-0x46]
  4122b8:	sbb    edi,DWORD PTR [ebx+0x75405745]
  4122be:	jno    0x412301
  4122c0:	jmp    0xd8439b6b
  4122c5:	rol    DWORD PTR [ebp+0x32],0x5
  4122c9:	daa    
  4122ca:	adc    eax,0xb384afdf
  4122cf:	mov    edx,0x9301e4ab
  4122d4:	mov    esi,0xa4a22be6
  4122d9:	mov    WORD PTR [eax-0x60],es
  4122dc:	xchg   bx,ax
  4122de:	hlt    
  4122df:	dec    ebx
  4122e0:	mov    eax,0xa826f9fd
  4122e5:	stos   BYTE PTR es:[edi],al
  4122e6:	inc    ebp
  4122e7:	(bad)
  4122ea:	and    ah,BYTE PTR [ebp-0xba06970]
  4122f0:	adc    edi,esp
  4122f2:	adc    DWORD PTR ds:0x1eb3dbe0,0xfffffffa
  4122f9:	xor    BYTE PTR [esp+edi*4+0x2a],ch
  4122fd:	lahf   
  4122fe:	into   
  4122ff:	fs ins BYTE PTR es:[edi],dx
  412301:	xor    ch,BYTE PTR [eax-0x18d97f12]
  412307:	pavgb  mm3,QWORD PTR gs:[edx]
  41230b:	push   0x50b8d3ec
  412310:	aaa    
  412311:	push   edi
  412312:	xor    al,0xff
  412314:	pop    edx
  412315:	shl    BYTE PTR [ecx+0x1a0e0615],1
  41231b:	into   
  41231c:	arpl   dx,ax
  41231e:	clc    
  41231f:	or     DWORD PTR [esi+0x1e],esp
  412322:	mov    DWORD PTR [ebx-0x14],ebp
  412325:	sbb    al,0x6c
  412327:	shr    cl,cl
  412329:	push   ebx
  41232a:	int3   
  41232b:	pop    edi
  41232c:	sti    
  41232d:	pcmpgtw mm5,QWORD PTR [ebx]
  412330:	or     BYTE PTR [edx-0x5a5b7fc4],bh
  412336:	mov    ebx,ecx
  412338:	inc    esi
  412339:	cli    
  41233a:	and    al,BYTE PTR [esi+0x56]
  41233d:	call   0xf4c980f4
  412342:	out    dx,eax
  412343:	adc    ah,BYTE PTR [edi+edi*4+0x7d8cbe85]
  41234a:	or     edx,esi
  41234c:	or     eax,0x6e5af57d
  412351:	popf   
  412352:	mov    BYTE PTR [ebx],ah
  412354:	stos   BYTE PTR es:[edi],al
  412355:	or     eax,0xecef0470
  41235a:	lods   al,BYTE PTR ds:[esi]
  41235b:	cmp    edx,ebx
  41235d:	imul   eax,DWORD PTR [ecx],0xfffffffb
  412360:	sbb    al,0xc9
  412362:	dec    ebx
  412363:	int    0xea
  412365:	adc    edx,DWORD PTR [ebx-0x1d]
  412368:	xacquire xchg BYTE PTR [ebx],dh
  41236b:	(bad)  
  41236d:	in     eax,0x92
  41236f:	sub    al,0x7c
  412371:	clc    
  412372:	cmc    
  412373:	test   DWORD PTR [ecx+0x1ab633d2],esp
  412379:	ss inc edx
  41237b:	call   0xaa0c:0x5b02cd42
  412382:	add    esp,DWORD PTR [edi-0x59c760b4]
  412388:	mov    DWORD PTR [edx+0x5dbb9ca2],edx
  41238e:	and    DWORD PTR [edx],0x2
  412391:	fild   WORD PTR [eax-0x57df95ee]
  412397:	loope  0x4123f1
  412399:	in     al,0x6d
  41239b:	rep stos DWORD PTR es:[edi],eax
  41239d:	cs adc al,0x20
  4123a0:	outs   dx,DWORD PTR ds:[esi]
  4123a1:	loopne 0x4123fa
  4123a3:	in     al,0x46
  4123a5:	mov    bh,0x23
  4123a7:	sbb    ebp,DWORD PTR [esp+edx*8-0x4c73bc6b]
  4123ae:	mov    BYTE PTR [eax-0x45],al
  4123b1:	pop    esi
  4123b2:	dec    esp
  4123b3:	jne    0x412408
  4123b5:	add    DWORD PTR [edi+0x2d],ebx
  4123b8:	test   eax,0xb66c209e
  4123bd:	adc    ebp,DWORD PTR [ebp+0x71]
  4123c0:	or     al,0xbd
  4123c2:	mov    DWORD PTR [ebx],ecx
  4123c4:	hlt    
  4123c5:	cmp    al,0xe0
  4123c7:	dec    ebp
  4123c8:	sbb    dl,BYTE PTR [esi-0x23176e65]
  4123ce:	mov    edi,0x6f175fa0
  4123d3:	inc    ecx
  4123d4:	sbb    dl,BYTE PTR [edi]
  4123d6:	inc    edi
  4123d7:	or     BYTE PTR [edx+0x86ceef1],cl
  4123dd:	pop    DWORD PTR [bx+si+0x4003]
  4123e2:	jecxz  0x41245f
  4123e4:	imul   esp,eax,0xfffffff2
  4123e7:	jne    0x41243e
  4123e9:	mov    edi,0xecd00e56
  4123ee:	cmp    edx,ebp
  4123f0:	push   ebx
  4123f1:	mov    edx,edi
  4123f3:	mov    DWORD PTR [esi-0x2d],edx
  4123f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123f7:	rcl    DWORD PTR [ebp-0x20],1
  4123fa:	add    eax,0xda35ec71
  4123ff:	enter  0xe538,0x81
  412403:	pop    esi
  412404:	ins    DWORD PTR es:[edi],dx
  412405:	scas   al,BYTE PTR es:[edi]
  412406:	or     al,0x31
  412408:	and    DWORD PTR [eax],eax
  41240a:	clc    
  41240b:	or     DWORD PTR [ecx-0x275a27e8],edx
  412411:	dec    edx
  412412:	jmp    0x4123d6
  412414:	inc    ebp
  412415:	iret   
  412416:	sub    al,0xda
  412418:	add    al,0x90
  41241a:	mov    esi,0x9cf133f3
  41241f:	frstor [ebx+0x745c5554]
  412425:	repz sbb BYTE PTR [ecx+0x55],ah
  412429:	dec    edi
  41242a:	add    cl,BYTE PTR [edi]
  41242c:	(bad)  
  41242d:	inc    ebx
  41242e:	or     DWORD PTR [edx-0x3d253cf9],ebx
  412434:	inc    ax
  412436:	sub    ebx,ebp
  412438:	xchg   DWORD PTR [edi+edi*8+0x258f620a],ecx
  41243f:	clc    
  412440:	xchg   esp,eax
  412441:	aam    0x16
  412443:	xchg   ebx,eax
  412444:	jge    0x4123c8
  412446:	frstor [ecx+eiz*2]
  412449:	int    0x5c
  41244b:	int3   
  41244c:	and    BYTE PTR [edx+0x55],bl
  41244f:	jb     0x412490
  412451:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412452:	mov    al,0x6f
  412454:	mov    al,0x27
  412456:	xor    al,0x67
  412458:	loope  0x412480
  41245a:	dec    ebp
  41245c:	add    al,ah
  41245e:	in     eax,dx
  41245f:	loope  0x4123f7
  412461:	mov    ecx,0x925cb5ee
  412466:	xor    BYTE PTR [ecx-0x5edcdead],al
  41246c:	jmp    0x66792653
  412471:	lods   al,BYTE PTR ds:[esi]
  412472:	call   0xa35f6732
  412477:	inc    ecx
  412478:	sbb    eax,0x99d1975f
  41247d:	icebp  
  41247e:	add    al,0x20
  412480:	mov    fs,ebp
  412482:	out    0xd5,eax
  412484:	push   esp
  412485:	jmp    0x412422
  412487:	sbb    DWORD PTR [ecx+0x32],eax
  41248a:	add    edx,DWORD PTR [ebx+0x47dc8a04]
  412490:	and    eax,0x9edb2fa
  412495:	ds xchg edx,eax
  412497:	mov    ch,0x86
  412499:	mov    DWORD PTR [edi+0x73cd2e73],0xa4c340ab
  4124a3:	jnp    0x4124e5
  4124a5:	sbb    BYTE PTR [edx],ch
  4124a7:	shr    BYTE PTR [ecx+0x4f970713],1
  4124ad:	mov    esi,0xb069e5e1
  4124b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124b3:	mov    al,ds:0xa07dfca4
  4124b8:	ror    DWORD PTR [ebx],cl
  4124ba:	daa    
  4124bb:	ins    BYTE PTR es:[edi],dx
  4124bc:	jo     0x412503
  4124be:	adc    eax,0x80efcf5c
  4124c3:	jb     0x412537
  4124c5:	or     eax,0xda45dfde
  4124ca:	in     eax,0xe8
  4124cc:	aas    
  4124cd:	stos   DWORD PTR es:[edi],eax
  4124ce:	cwde   
  4124cf:	xor    esp,DWORD PTR ds:[esi]
  4124d2:	test   DWORD PTR [ebp+0x7893b582],edi
  4124d8:	sbb    BYTE PTR [edi],bh
  4124da:	call   0x2da72d72
  4124df:	fsub   DWORD PTR ds:[edi+ecx*2]
  4124e3:	xchg   ebx,eax
  4124e4:	adc    DWORD PTR [eax+0x67],ebx
  4124e7:	cwde   
  4124e8:	lahf   
  4124e9:	ss dec ebp
  4124eb:	and    bh,cl
  4124ed:	ds mov ebx,0x66d28717
  4124f3:	inc    edi
  4124f4:	adc    al,0xa5
  4124f6:	xchg   ebp,eax
  4124f7:	jnp    0x4124ed
  4124f9:	inc    BYTE PTR [edx-0x49368db3]
  4124ff:	cmp    DWORD PTR [edx+0x2dc881df],eax
  412505:	mov    ds:0x7a1be951,al
  41250a:	sbb    eax,0x67ae1434
  41250f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412510:	cmp    eax,0xbe7786e2
  412515:	cmp    edi,DWORD PTR [ecx]
  412517:	fdivr  QWORD PTR [edx-0x5c]
  41251a:	or     ebp,DWORD PTR [esi]
  41251c:	xchg   esi,eax
  41251d:	arpl   WORD PTR ds:0xb7325ab4,cx
  412523:	mov    eax,0x8c747cb8
  412528:	pushf  
  412529:	pop    ss
  41252a:	inc    eax
  41252b:	mov    edx,0xacc5876d
  412530:	lahf   
  412531:	sbb    eax,0x4548662a
  412536:	(bad)  
  412537:	inc    edx
  412538:	xlat   BYTE PTR ds:[ebx]
  412539:	out    dx,eax
  41253a:	mov    dh,0x93
  41253c:	dec    esi
  41253d:	mov    cl,0x1f
  41253f:	test   al,0x96
  412541:	mov    ebp,0xcdb6120d
  412546:	pop    es
  412547:	inc    eax
  412548:	xchg   ecx,eax
  412549:	dec    edi
  41254a:	dec    esi
  41254b:	mov    cl,0xe9
  41254d:	shl    bh,cl
  41254f:	aaa    
  412550:	jmp    0xde8c37f
  412555:	pop    ss
  412556:	mov    ecx,0x4f9a4d69
  41255b:	dec    eax
  41255c:	outs   dx,DWORD PTR ds:[esi]
  41255d:	not    DWORD PTR [edx]
  41255f:	xchg   ebp,eax
  412560:	inc    eax
  412561:	cdq    
  412562:	cld    
  412563:	jbe    0x4125d5
  412565:	cmp    al,0xa6
  412567:	mov    bh,0xa7
  412569:	ds out 0xcb,al
  41256c:	or     al,0xdc
  41256e:	rcl    DWORD PTR [edx-0x30],cl
  412571:	fcmovbe st,st(5)
  412573:	jne    0x412596
  412575:	pop    ss
  412576:	inc    ebx
  412577:	daa    
  412578:	pop    ecx
  412579:	ds cli 
  41257b:	xchg   ebx,eax
  41257c:	xor    eax,DWORD PTR [edi-0x4]
  41257f:	and    eax,0xfe40a999
  412584:	mov    ebx,0xbed3f089
  412589:	jo     0x4125c0
  41258b:	mov    eax,ds:0x93d856cd
  412590:	inc    edi
  412591:	add    al,0x9b
  412593:	adc    al,0x6a
  412595:	jle    0x412616
  412597:	cmp    al,0x2d
  412599:	sub    edx,DWORD PTR ds:0x39446617
  41259f:	shr    DWORD PTR [eax],1
  4125a1:	jmp    ebx
  4125a3:	dec    edx
  4125a4:	into   
  4125a5:	les    ebx,FWORD PTR [ecx-0x6692ce75]
  4125ab:	mov    ch,dl
  4125ad:	pushf  
  4125ae:	repnz sbb BYTE PTR [ebx],ch
  4125b1:	(bad)  
  4125b2:	mov    ?,WORD PTR [edi]
  4125b4:	mov    dl,0xd4
  4125b6:	push   0x85f0926
  4125bb:	mov    esp,edx
  4125bd:	xchg   ebx,eax
  4125be:	retf   
  4125bf:	push   eax
  4125c0:	psraw  mm4,QWORD PTR [edi-0x59e946ba]
  4125c7:	inc    ebp
  4125c8:	call   0x5f002658
  4125cd:	add    al,0xf9
  4125cf:	ds int3 
  4125d1:	rol    eax,cl
  4125d3:	sub    DWORD PTR [esi+edi*8-0x4e],ecx
  4125d7:	std    
  4125d8:	out    0x43,eax
  4125da:	xchg   DWORD PTR [ecx],esi
  4125dc:	dec    esp
  4125dd:	fstp   DWORD PTR [esi+0x1c721e5f]
  4125e3:	fwait
  4125e4:	xchg   ebp,eax
  4125e5:	add    DWORD PTR [edi-0x6],esp
  4125e8:	mov    esp,0x13b24bc5
  4125ed:	cs jecxz 0x4125e5
  4125f0:	cmp    ah,bh
  4125f2:	loope  0x41260f
  4125f4:	lds    ebx,FWORD PTR [edx+0x6f]
  4125f7:	xor    al,dh
  4125f9:	mov    edx,DWORD PTR [esi-0x7737b694]
  4125ff:	xor    DWORD PTR [eax+ebx*1-0x181aeb2],0x72
  412607:	repz and dh,dl
  41260a:	(bad)  
  41260b:	mov    cl,0xbb
  41260d:	mov    ebx,0x30250a89
  412612:	jns    0x412637
  412614:	aas    
  412615:	test   BYTE PTR [ebx+0x2014bf30],cl
  41261b:	and    BYTE PTR [edi+0x50],ch
  41261e:	inc    DWORD PTR [ebx]
  412620:	rcl    edx,1
  412622:	repz push esp
  412624:	ins    DWORD PTR es:[edi],dx
  412625:	js     0x4125fe
  412627:	adc    ch,BYTE PTR [ebx+esi*4]
  41262a:	or     eax,0xb8860517
  41262f:	pop    eax
  412630:	dec    ebp
  412631:	dec    ebp
  412632:	jmp    0x412610
  412634:	jno    0x4126a8
  412636:	inc    ebx
  412637:	sbb    BYTE PTR [ebx+0x40],al
  41263a:	push   esi
  41263b:	and    DWORD PTR [edi],ebp
  41263d:	in     al,dx
  41263e:	aam    0xc7
  412640:	push   cs
  412641:	das    
  412642:	fwait
  412643:	xchg   BYTE PTR [edx+0x7b90e9d8],dl
  412649:	test   DWORD PTR [edi+0x164c0e1d],edx
  41264f:	(bad)  [ecx]
  412651:	fsub   DWORD PTR [ecx+ecx*8]
  412654:	jno    0x412633
  412656:	test   DWORD PTR [ecx+0x3a380476],0x6a0543bd
  412660:	sub    ebx,DWORD PTR ds:0xf9b69388
  412666:	adc    eax,0x68277f11
  41266b:	push   esi
  41266c:	mov    BYTE PTR [ebx],al
  41266e:	(bad)  
  41266f:	jno    0x4126a0
  412671:	ret    0xddaf
  412674:	jno    0x412693
  412676:	push   eax
  412677:	(bad)  
  412678:	mov    edx,0x66a7b7f8
  41267d:	mov    al,ds:0xbec965e2
  412682:	(bad)  
  412683:	clc    
  412684:	test   BYTE PTR ds:0xa94c8815,ch
  41268a:	add    DWORD PTR [edi-0x42],edi
  41268d:	xchg   ecx,eax
  41268e:	sbb    DWORD PTR [ecx],ebx
  412690:	sbb    BYTE PTR [edx+0x3f],bl
  412693:	add    ebx,ecx
  412695:	inc    ebx
  412696:	cmp    DWORD PTR [esi-0x4e08ab2e],0x34
  41269d:	jb     0x41263e
  41269f:	lods   eax,DWORD PTR ds:[esi]
  4126a0:	mov    ch,0xea
  4126a2:	xchg   esi,eax
  4126a3:	in     eax,0x28
  4126a5:	cmp    DWORD PTR ss:[edi-0x68],0x53660c00
  4126ad:	dec    edx
  4126ae:	jp     0x41270e
  4126b0:	mov    eax,DWORD PTR [eax-0x69]
  4126b3:	or     edi,DWORD PTR [edx-0x6a]
  4126b6:	sbb    eax,0x17a62508
  4126bb:	or     BYTE PTR ds:0xbefb9fa0,al
  4126c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126c2:	push   ebx
  4126c3:	(bad)  
  4126c4:	fisub  DWORD PTR [eax+0x1ba38f62]
  4126ca:	ins    BYTE PTR es:[edi],dx
  4126cb:	js     0x412695
  4126cd:	inc    eax
  4126ce:	pop    es
  4126cf:	add    dl,BYTE PTR [ebx-0x2d4d235d]
  4126d5:	cwde   
  4126d6:	pop    es
  4126d7:	or     esp,0x72
  4126da:	mov    bh,0x28
  4126dc:	cwde   
  4126dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126de:	xchg   DWORD PTR [edx+0x6],ebx
  4126e1:	or     esp,DWORD PTR [ebx+0x10]
  4126e4:	daa    
  4126e5:	pop    eax
  4126e6:	sbb    edx,DWORD PTR [eax-0x219c0f]
  4126ec:	xchg   DWORD PTR [edi-0x1],ecx
  4126ef:	aas    
  4126f0:	or     eax,0x7816c1a
  4126f5:	push   0x978edb4e
  4126fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126fb:	pop    esp
  4126fc:	dec    edi
  4126fd:	dec    esi
  4126fe:	leave  
  4126ff:	addr16 inc eax
  412701:	call   0xc1eb3a61
  412706:	ror    esp,cl
  412708:	je     0x4126c3
  41270a:	xchg   esi,eax
  41270b:	xchg   ebx,eax
  41270c:	push   ds
  41270d:	(bad)  
  41270f:	mov    WORD PTR [esi-0x8],es
  412712:	xor    DWORD PTR [edx+0x4b1d9765],ecx
  412718:	dec    esi
  412719:	mov    ecx,0x34cb8ebe
  41271e:	daa    
  41271f:	loope  0x4126ed
  412721:	mov    ecx,0x5575f05
  412726:	(bad)  
  412728:	out    dx,eax
  412729:	pop    ebp
  41272a:	in     eax,0xda
  41272c:	xchg   edi,eax
  41272d:	mov    bl,0x62
  41272f:	sub    DWORD PTR [esi+eax*4-0x10e52b8c],0xffffffed
  412737:	add    al,dl
  412739:	iret   
  41273a:	jle    0x412792
  41273c:	sub    ah,ch
  41273e:	jae    0x4126fc
  412740:	bound  esp,QWORD PTR [esi]
  412742:	mov    ch,bh
  412744:	shl    BYTE PTR [esi],1
  412746:	pushf  
  412747:	xor    bl,BYTE PTR [edi+0x833ff23]
  41274d:	aam    0xf
  41274f:	ds push ss
  412751:	sbb    BYTE PTR [ebx*1-0x7666ceca],0x67
  412759:	and    DWORD PTR [ebp+eiz*1+0x48ce1e94],0x6f
  412761:	scas   al,BYTE PTR es:[edi]
  412762:	cmp    BYTE PTR [ecx+0x4213abd7],0x15
  412769:	sub    DWORD PTR [eax+0x788ed8bb],edx
  41276f:	stc    
  412770:	loope  0x4127dd
  412772:	cmp    BYTE PTR [edx+0x2a2adbf6],dh
  412778:	or     BYTE PTR [eax-0xe],ah
  41277b:	int3   
  41277c:	mov    ss,ebp
  41277e:	dec    edi
  41277f:	(bad)  
  412780:	jg     0x412719
  412782:	push   ecx
  412783:	rcl    DWORD PTR [esp+ebp*2],1
  412786:	ds pop ecx
  412788:	jecxz  0x4127d0
  41278a:	push   edi
  41278b:	leave  
  41278c:	sti    
  41278d:	cmp    ch,cl
  41278f:	mov    ah,0x3e
  412791:	mov    ds:0xe533d19f,al
  412796:	push   esi
  412797:	cli    
  412798:	pop    edx
  412799:	adc    bl,cl
  41279b:	outs   dx,DWORD PTR ds:[esi]
  41279c:	jbe    0x412756
  41279e:	(bad)  
  4127a0:	imul   eax,DWORD PTR [ebx+0x6b84b787],0xffffffeb
  4127a7:	push   cs
  4127a8:	or     eax,0xd4b9f40d
  4127ad:	inc    eax
  4127ae:	retf   0xac10
  4127b1:	dec    ebx
  4127b2:	jne    0x41273d
  4127b4:	adc    DWORD PTR [ebx+edx*1+0x5f333ec5],edi
  4127bb:	not    cl
  4127bd:	xor    bh,dh
  4127bf:	iret   
  4127c0:	js     0x41276c
  4127c2:	mov    edx,0xdeb5daa6
  4127c7:	fst    QWORD PTR [ebp+eax*2-0x7fa5e043]
  4127ce:	push   0xba59cbad
  4127d3:	seto   BYTE PTR [ecx]
  4127d6:	lahf   
  4127d7:	popf   
  4127d8:	mov    eax,0xa73db093
  4127dd:	cmp    esi,DWORD PTR [edx+0x657fa5e5]
  4127e3:	xchg   BYTE PTR [ebp+0x4a],dh
  4127e6:	mov    WORD PTR [ecx+0x2355afc0],cs
  4127ec:	addr16 inc esp
  4127ee:	inc    esi
  4127ef:	adc    eax,0x89d25355
  4127f4:	push   eax
  4127f5:	jnp    0x4127a7
  4127f7:	xor    eax,0x1c07b40
  4127fc:	out    0x69,al
  4127fe:	cmp    ah,ah
  412800:	sub    DWORD PTR [edx+0x45],esp
  412803:	or     bh,ch
  412805:	push   0xffffff81
  412807:	push   eax
  412808:	and    DWORD PTR [ebx],ecx
  41280a:	clc    
  41280b:	ja     0x41285c
  41280d:	xor    al,0xf6
  41280f:	sub    BYTE PTR [ebx+0x2161dead],dl
  412815:	pop    eax
  412816:	mov    ch,0xac
  412818:	xchg   edi,eax
  412819:	popa   
  41281a:	pop    ds
  41281b:	fs inc eax
  41281d:	sbb    esp,edi
  41281f:	int3   
  412820:	inc    esp
  412821:	xchg   ebx,eax
  412822:	add    DWORD PTR [esi],edx
  412824:	add    dh,bl
  412826:	mov    ds:0x4e5b2b5f,eax
  41282b:	jb     0x41284c
  41282d:	les    edi,FWORD PTR [ecx]
  41282f:	mov    edi,0x3655140b
  412834:	adc    al,0xad
  412836:	je     0x41288a
  412838:	adc    bl,ch
  41283a:	adc    DWORD PTR [edi],edx
  41283c:	cli    
  41283d:	addr16 jo 0x412899
  412840:	out    0x94,eax
  412842:	inc    ebx
  412843:	or     DWORD PTR [edi],ebp
  412845:	push   edi
  412846:	lock popa 
  412848:	jne    0x412838
  41284a:	cmp    eax,0x1559384c
  41284f:	repnz icebp 
  412851:	(bad)  
  412852:	sahf   
  412853:	mov    ds:0xb74c1b53,eax
  412858:	or     eax,DWORD PTR [edx]
  41285a:	fisttp QWORD PTR [esi+0x1b1262ea]
  412860:	xchg   ebx,eax
  412861:	sub    ebx,DWORD PTR [edx+0x46]
  412864:	mov    eax,0x93c91fcb
  412869:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41286a:	adc    eax,0xfec29e78
  41286f:	push   ds
  412870:	mov    ch,0x24
  412872:	outs   dx,BYTE PTR ds:[esi]
  412873:	in     eax,0xec
  412875:	and    al,0x98
  412877:	or     ah,bh
  412879:	outs   dx,DWORD PTR ds:[esi]
  41287a:	or     DWORD PTR ds:0x8da4723e,edx
  412880:	dec    ebx
  412881:	add    al,0xb8
  412883:	add    al,0x0
  412885:	pop    ds
  412886:	adc    bl,BYTE PTR [ebx]
  412888:	daa    
  412889:	inc    edi
  41288a:	fisub  WORD PTR fs:[eax+0x671fc391]
  412891:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412892:	sbb    al,0x11
  412894:	mov    ebx,0x5bc1dbf1
  412899:	(bad)  
  41289a:	jns    0x412863
  41289c:	jmp    0x8d798173
  4128a1:	adc    al,0xbe
  4128a3:	ret    
  4128a4:	(bad)
  4128a7:	sahf   
  4128a8:	mov    bh,0xf5
  4128aa:	icebp  
  4128ab:	imul   ebp,esp,0x7e
  4128ae:	mov    bl,0xd7
  4128b0:	call   0x35e6ae9c
  4128b5:	mov    edx,0x8eca3d5c
  4128ba:	imul   esi,eax,0x8dd3be52
  4128c0:	push   ds
  4128c1:	fwait
  4128c2:	adc    al,0xc2
  4128c4:	inc    edi
  4128c5:	popf   
  4128c6:	(bad)  
  4128c7:	(bad)  
  4128c8:	sub    eax,0x3e705350
  4128cd:	pop    esp
  4128ce:	jp     0x4128fe
  4128d0:	call   0x4cb1:0x5f4b2c65
  4128d7:	jns    0x412945
  4128d9:	jecxz  0x41286d
  4128db:	call   0x1715:0xe78cf54a
  4128e2:	jl     0x41288e
  4128e4:	mov    eax,ds:0xf6af6ce1
  4128e9:	jb     0x4128ad
  4128eb:	out    dx,al
  4128ec:	xchg   DWORD PTR [edx+0xf],ebp
  4128ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128f0:	ret    
  4128f1:	jl     0x4128b5
  4128f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128f4:	mov    dl,0xfc
  4128f6:	push   ss
  4128f7:	sar    dh,cl
  4128f9:	test   DWORD PTR [esi],ecx
  4128fb:	xchg   DWORD PTR [ebp-0x5b],ebx
  4128fe:	test   BYTE PTR [esi],ah
  412900:	xor    DWORD PTR [ebp-0x77],edi
  412903:	push   ds
  412904:	not    DWORD PTR [edi-0x44909d75]
  41290a:	jge    0x412960
  41290c:	jmp    0x41294c
  41290e:	sub    eax,0xb7b01b5b
  412913:	call   0x2de77db3
  412918:	test   eax,0xfbe11d06
  41291d:	(bad)
  412920:	(bad)  
  412921:	jae    0x412950
  412923:	and    eax,0xc4cfd571
  412928:	mov    cl,0xce
  41292a:	inc    eax
  41292b:	popa   
  41292c:	jmp    0xa776cf76
  412931:	xor    ebp,DWORD PTR [esi-0x41]
  412934:	inc    edi
  412935:	jle    0x4128ce
  412937:	adc    eax,0x8ab0f584
  41293c:	jle    0x412984
  41293e:	pusha  
  41293f:	out    dx,al
  412940:	adc    ch,BYTE PTR [ebp+0x32]
  412943:	lahf   
  412944:	pusha  
  412945:	popa   
  412946:	push   0x4e4e72a2
  41294b:	mov    ds:0xd59fe385,eax
  412950:	(bad)  
  412951:	leave  
  412952:	das    
  412953:	or     cl,ah
  412955:	sahf   
  412956:	pop    esp
  412957:	sub    esp,edi
  412959:	(bad)  
  41295a:	and    bh,BYTE PTR [edi+0x32]
  41295d:	inc    eax
  41295e:	leave  
  41295f:	cmp    edi,DWORD PTR [edx-0x46]
  412962:	pop    eax
  412963:	inc    edi
  412964:	pushf  
  412965:	ss leave 
  412967:	jne    0x41295f
  412969:	(bad)  
  41296a:	jo     0x412910
  41296c:	jmp    0x32ca5efa
  412971:	imul   esi,DWORD PTR [edx+0x50d57748],0xf473fcd7
  41297b:	(bad)  
  41297c:	cmp    DWORD PTR [ecx+0x2666ab9a],edx
  412982:	call   0x8b146040
  412987:	aad    0x4d
  412989:	mov    ch,0xa1
  41298b:	pop    ss
  41298c:	sbb    esi,DWORD PTR [ebx+0x61]
  41298f:	inc    esp
  412990:	in     eax,0xed
  412992:	ins    DWORD PTR es:[edi],dx
  412993:	cmp    BYTE PTR [ebx],ch
  412995:	add    eax,0xbd1ecfd3
  41299a:	dec    edx
  41299b:	cwde   
  41299c:	jl     0x412941
  41299e:	sub    DWORD PTR [ecx-0x1d],esi
  4129a1:	inc    esi
  4129a2:	push   cs
  4129a3:	loopne 0x4129e3
  4129a5:	cmp    edi,DWORD PTR [ebx+0x3b]
  4129a8:	mov    edx,0xcf508151
  4129ad:	adc    ebx,ebx
  4129af:	inc    eax
  4129b0:	rcr    BYTE PTR [edx-0x10],0xc3
  4129b4:	mov    esp,esp
  4129b6:	stos   BYTE PTR es:[edi],al
  4129b7:	mov    ?,WORD PTR [eax]
  4129b9:	hlt    
  4129ba:	sub    edx,DWORD PTR [edx-0x2e5744f5]
  4129c0:	out    dx,eax
  4129c1:	ret    
  4129c2:	push   edi
  4129c3:	lea    eax,[bx+di]
  4129c6:	xor    BYTE PTR [esi+0x7e33faf6],0x35
  4129cd:	mov    al,0x26
  4129cf:	dec    ecx
  4129d0:	arpl   WORD PTR [eax],cx
  4129d2:	xchg   esp,eax
  4129d3:	xor    bl,BYTE PTR [ebx-0x2d]
  4129d6:	das    
  4129d7:	lahf   
  4129d8:	fisttp DWORD PTR [edx-0x441e5529]
  4129de:	mov    al,0x29
  4129e0:	jb     0x4129e7
  4129e2:	xchg   esp,eax
  4129e3:	dec    edx
  4129e4:	cmp    eax,0x472c69f2
  4129e9:	jg     0x4129f9
  4129eb:	add    eax,0xcec8599d
  4129f0:	push   0xf1984b8e
  4129f5:	test   DWORD PTR [edi],0x547a9d34
  4129fb:	inc    esi
  4129fc:	push   0x71f00168
  412a01:	not    DWORD PTR [ecx+0x6aa4af78]
  412a07:	cmp    eax,0x625f7c57
  412a0c:	sbb    edi,esi
  412a0e:	iret   
  412a0f:	mov    ds:0xaf5d912a,al
  412a14:	xor    edx,DWORD PTR [ebp+0x4f2d8aaa]
  412a1a:	cld    
  412a1b:	lock aad 0x3
  412a1e:	jecxz  0x412a6f
  412a20:	lea    eax,[ebx+0x2e049a77]
  412a26:	xor    edx,DWORD PTR [edx+ebp*8]
  412a29:	in     eax,0x25
  412a2b:	mov    WORD PTR [edi],?
  412a2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a2e:	cmc    
  412a2f:	sub    BYTE PTR [esi-0x5ce9c23c],cl
  412a35:	inc    eax
  412a36:	loope  0x412a5d
  412a38:	push   edi
  412a39:	jno    0x412a51
  412a3b:	(bad)  
  412a3d:	and    eax,0xd5c8f3f9
  412a42:	push   ecx
  412a43:	mov    eax,ds:0x1c4cfdfc
  412a48:	mov    ch,BYTE PTR [ebp-0x220fab0e]
  412a4e:	call   0x2d2a448f
  412a53:	js     0x412a47
  412a55:	mov    edi,0x3ce210c0
  412a5a:	mov    edi,0x2fe233d5
  412a5f:	call   0x8891a498
  412a64:	xor    al,0x4c
  412a66:	add    eax,0xce0a1a0a
  412a6b:	or     DWORD PTR [ecx+0x55],edi
  412a6e:	adc    eax,0x8f88d243
  412a73:	adc    al,BYTE PTR [edi+0x23]
  412a76:	or     esp,edi
  412a78:	out    dx,al
  412a79:	aam    0x3a
  412a7b:	adc    eax,0x860dfa48
  412a80:	or     DWORD PTR [ebp-0x14],0x3166f4c1
  412a87:	push   es
  412a88:	out    dx,al
  412a89:	je     0x412aaa
  412a8b:	jmp    0x412a37
  412a8d:	sti    
  412a8e:	push   edx
  412a8f:	and    al,0x47
  412a91:	bound  ebp,QWORD PTR [edx+0x30]
  412a94:	inc    eax
  412a95:	jle    0x412abb
  412a97:	sub    BYTE PTR [ebx],ch
  412a99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a9a:	sbb    eax,0x92ed1d05
  412a9f:	popa   
  412aa0:	sbb    DWORD PTR [esi],edx
  412aa2:	rcl    DWORD PTR [esp+ebx*4],cl
  412aa5:	js     0x412b24
  412aa7:	sub    al,0xd8
  412aa9:	retf   
  412aaa:	xchg   DWORD PTR [esi],edi
  412aac:	outs   dx,DWORD PTR ds:[esi]
  412aad:	cmp    eax,0x4fc1910f
  412ab2:	out    dx,eax
  412ab3:	mov    eax,DWORD PTR [ebp+ebp*4+0x30521b14]
  412aba:	push   eax
  412abb:	sub    eax,ebx
  412abd:	ror    BYTE PTR [esi-0x70],1
  412ac0:	repnz mov esp,0xee685632
  412ac6:	fidivr DWORD PTR [ecx+eax*4+0x27bda66a]
  412acd:	iret   
  412ace:	js     0x412a86
  412ad0:	ror    ebx,1
  412ad2:	imul   eax,ebx,0xe450729e
  412ad8:	loopne 0x412b16
  412ada:	mov    bl,BYTE PTR [ecx+0x6a]
  412add:	cwde   
  412ade:	dec    eax
  412adf:	daa    
  412ae0:	xchg   edx,eax
  412ae1:	dec    ebp
  412ae2:	jno    0x412b12
  412ae4:	cwde   
  412ae5:	stos   DWORD PTR es:[edi],eax
  412ae6:	and    eax,0x77ba31d0
  412aeb:	ror    DWORD PTR [edi-0x7e89d553],1
  412af1:	fst    QWORD PTR [edx+0x1b]
  412af4:	push   0xffffff98
  412af6:	adc    eax,0xd930d165
  412afb:	leave  
  412afc:	pop    edi
  412afd:	mov    edx,0xe7a9f21c
  412b02:	add    ebp,DWORD PTR [eax]
  412b04:	jns    0x412b79
  412b06:	push   eax
  412b07:	ror    BYTE PTR fs:[ebx+0x8],1
  412b0b:	mov    dl,0xa3
  412b0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b0e:	cmp    al,0x9c
  412b10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b11:	in     eax,0xf
  412b13:	sub    ch,BYTE PTR [edi+0x7c2d1744]
  412b19:	sub    BYTE PTR [edx+ecx*4+0x44],bl
  412b1d:	jecxz  0x412b8d
  412b1f:	loopne 0x412aa4
  412b21:	sub    edi,DWORD PTR ds:0x6d7966bd
  412b27:	(bad)  
  412b28:	fnstcw WORD PTR [esi+edi*2]
  412b2b:	sbb    al,0xba
  412b2d:	add    al,0xb3
  412b2f:	sub    eax,0x7302698d
  412b34:	mov    ecx,0xf7589188
  412b39:	inc    edi
  412b3a:	push   cs
  412b3b:	imul   ebp,DWORD PTR [edi],0x8a9afeca
  412b41:	(bad)  
  412b42:	push   cs
  412b43:	and    esi,DWORD PTR [edi+0x59642498]
  412b49:	cmc    
  412b4a:	ficom  WORD PTR [ebp+0x558d091]
  412b50:	ret    
  412b51:	fiadd  WORD PTR [esi+0x72]
  412b54:	bound  eax,QWORD PTR [edi-0x2e734360]
  412b5a:	scas   al,BYTE PTR es:[edi]
  412b5b:	cmp    esp,esp
  412b5d:	test   al,0xa1
  412b5f:	mov    eax,DWORD PTR [ebp+0x38b8e545]
  412b65:	jmp    0xd752:0x73f1d37f
  412b6c:	mov    al,ds:0x5f555208
  412b71:	aam    0x27
  412b73:	retf   
  412b74:	es (bad) 
  412b76:	out    dx,eax
  412b77:	mov    eax,ds:0xc4a6ce16
  412b7c:	cwde   
  412b7d:	adc    al,BYTE PTR [edi-0x15]
  412b80:	and    eax,0xfc85a2f1
  412b85:	or     dl,BYTE PTR [esi+0x75]
  412b88:	mov    dh,0xd0
  412b8a:	fdivr  QWORD PTR [edi+0x8]
  412b8d:	pop    ebx
  412b8e:	in     al,dx
  412b8f:	(bad)  
  412b90:	(bad)  
  412b91:	push   esi
  412b92:	pop    edi
  412b93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b94:	xchg   edi,eax
  412b95:	bound  esp,QWORD PTR [edi-0x6a]
  412b98:	xchg   ecx,eax
  412b99:	outs   dx,BYTE PTR ds:[esi]
  412b9a:	xchg   DWORD PTR [ecx+0xf],ebx
  412b9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b9e:	mov    ah,0x16
  412ba0:	push   cs
  412ba1:	xchg   BYTE PTR [esp+ebp*2],cl
  412ba4:	aaa    
  412ba5:	je     0x412b2c
  412ba7:	fidivr DWORD PTR [ecx+0x621870e9]
  412bad:	jmp    0x6d2a:0x22ee6e85
  412bb4:	mov    DWORD PTR [ecx+0x70994038],edx
  412bba:	test   bh,dh
  412bbc:	dec    eax
  412bbd:	pusha  
  412bbe:	mov    ebp,0x7c790c80
  412bc3:	sahf   
  412bc4:	retf   
  412bc5:	xor    esp,DWORD PTR [ebx]
  412bc7:	inc    edi
  412bc8:	test   DWORD PTR [ebx],ebp
  412bca:	cmp    esp,DWORD PTR [edi-0x4]
  412bcd:	pop    eax
  412bce:	xchg   edx,eax
  412bcf:	test   BYTE PTR [eax],bl
  412bd1:	rcr    bl,cl
  412bd3:	add    BYTE PTR [ebp+0x3b],cl
  412bd6:	scas   al,BYTE PTR es:[edi]
  412bd7:	ret    0x1287
  412bda:	dec    esp
  412bdb:	sub    eax,0x1063214b
  412be0:	test   al,0x8d
  412be2:	jo     0x412c35
  412be4:	outs   dx,BYTE PTR ds:[esi]
  412be5:	adc    al,0x36
  412be7:	ja     0x412bb9
  412be9:	stc    
  412bea:	xchg   ebp,eax
  412beb:	leave  
  412bec:	out    0x6b,al
  412bee:	aaa    
  412bef:	not    BYTE PTR [ecx]
  412bf1:	aam    0x91
  412bf3:	sbb    BYTE PTR [eax],ah
  412bf5:	xlat   BYTE PTR ds:[ebx]
  412bf6:	cmp    BYTE PTR [edi-0x5d936638],0x33
  412bfd:	outs   dx,BYTE PTR ds:[esi]
  412bfe:	fcomp  DWORD PTR [edi-0x4b94796]
  412c04:	add    al,0x52
  412c06:	mov    al,dl
  412c08:	and    eax,0x3f38ea5a
  412c0d:	call   FWORD PTR [ebp-0x5cc4ff07]
  412c13:	ss stc 
  412c15:	inc    BYTE PTR [edx+edi*2-0x360b08b5]
  412c1c:	loope  0x412bfb
  412c1e:	in     al,0xf6
  412c20:	cmp    BYTE PTR [edi-0x18],bl
  412c23:	mov    esp,0xb5a16ac7
  412c28:	lods   eax,DWORD PTR ds:[esi]
  412c29:	xchg   ecx,eax
  412c2a:	add    ax,WORD PTR [edx-0x60]
  412c2e:	(bad)  
  412c2f:	cmp    BYTE PTR ds:0xad42c86,bl
  412c35:	and    DWORD PTR [edi-0x45],edi
  412c38:	push   edi
  412c39:	mov    bl,BYTE PTR [ebx]
  412c3b:	ror    DWORD PTR [esi],cl
  412c3d:	sub    DWORD PTR [esi+0xc],edx
  412c40:	jno    0x412cbe
  412c42:	xor    BYTE PTR [eax+0x1d],dh
  412c45:	ficom  WORD PTR [eax]
  412c47:	mov    edx,0xfc9c8a91
  412c4c:	mov    esp,0x1c3d4d37
  412c51:	cli    
  412c52:	daa    
  412c53:	jmp    0xdb68:0xdaa21fbc
  412c5a:	add    esp,DWORD PTR [esp+ebp*8+0x1b]
  412c5e:	dec    ecx
  412c5f:	(bad)  
  412c60:	mov    dh,0x53
  412c62:	test   eax,0xa3a93df2
  412c67:	mov    ds:0x1421b8d,eax
  412c6c:	pushf  
  412c6d:	fisttp DWORD PTR [ecx-0x5d63aee3]
  412c73:	xor    ebx,DWORD PTR [eax+0x6d]
  412c76:	sbb    BYTE PTR [esi],al
  412c78:	jno    0x412c44
  412c7a:	retf   
  412c7b:	mov    eax,0xf8fcf7c7
  412c80:	imul   ebp,DWORD PTR [ebp+0x143b9b67],0x5c4ff6d
  412c8a:	push   ss
  412c8b:	stos   BYTE PTR es:[edi],al
  412c8c:	sub    eax,0xdba87b1c
  412c91:	xchg   BYTE PTR [esi+0x1],cl
  412c94:	int3   
  412c95:	push   ecx
  412c96:	lods   eax,DWORD PTR ds:[esi]
  412c97:	in     eax,dx
  412c98:	lds    esi,FWORD PTR [ebx+0x7b]
  412c9b:	xchg   ebx,eax
  412c9c:	mov    DWORD PTR [eax+0x79],esp
  412c9f:	push   cs
  412ca0:	cdq    
  412ca1:	aaa    
  412ca2:	push   edx
  412ca3:	dec    eax
  412ca4:	pop    ds
  412ca5:	push   esi
  412ca6:	stc    
  412ca7:	clc    
  412ca8:	icebp  
  412ca9:	imul   ebp,DWORD PTR [esi+0x52232701],0x5a
  412cb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cb1:	sti    
  412cb2:	fisubr DWORD PTR [edi]
  412cb4:	jge    0x412d0b
  412cb6:	and    esi,DWORD PTR [ebp-0x4c]
  412cb9:	das    
  412cba:	in     al,dx
  412cbb:	xor    DWORD PTR [edx+0x57a77754],ecx
  412cc1:	jg     0x412ce0
  412cc3:	lahf   
  412cc4:	push   eax
  412cc5:	ins    DWORD PTR es:[edi],dx
  412cc6:	jnp    0x412ce4
  412cc8:	jle    0x412c6a
  412cca:	mov    ebx,DWORD PTR [ebp-0x42]
  412ccd:	retf   
  412cce:	and    DWORD PTR [ebp+0x7d],esi
  412cd1:	mov    WORD PTR [eax+0x5e6070df],ds
  412cd7:	ficom  WORD PTR [edi]
  412cd9:	out    0x52,al
  412cdb:	sub    al,0xca
  412cdd:	(bad)  
  412cde:	fmul   st,st(1)
  412ce0:	inc    ebx
  412ce1:	mov    ebx,0xe1cd9b38
  412ce6:	pusha  
  412ce7:	fstp   DWORD PTR [ecx-0x50]
  412cea:	dec    ecx
  412ceb:	sub    BYTE PTR [ebp+0x22],ah
  412cee:	je     0x412ce3
  412cf0:	or     bl,ah
  412cf2:	popf   
  412cf3:	add    al,0x16
  412cf5:	sub    ebx,edx
  412cf7:	loope  0x412d46
  412cf9:	stos   DWORD PTR es:[edi],eax
  412cfa:	(bad)  
  412cfb:	hlt    
  412cfc:	push   0x3d106510
  412d01:	jns    0x412c86
  412d03:	rep stos BYTE PTR es:[edi],al
  412d05:	ret    
  412d06:	cwde   
  412d07:	jle    0x412d19
  412d09:	inc    esi
  412d0a:	into   
  412d0b:	xchg   ecx,eax
  412d0c:	mov    ecx,0x19a40020
  412d11:	aam    0x52
  412d13:	add    ebx,ecx
  412d15:	popa   
  412d16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d17:	or     DWORD PTR [esi],esi
  412d19:	jns    0x412d92
  412d1b:	sti    
  412d1c:	daa    
  412d1d:	cmp    esi,edi
  412d1f:	test   BYTE PTR [ebx-0x35],dh
  412d22:	mov    ds:0x9191eba9,al
  412d27:	xor    al,0xd6
  412d29:	in     eax,dx
  412d2a:	push   cs
  412d2b:	push   edi
  412d2c:	rcr    BYTE PTR [ebx-0x76],cl
  412d2f:	mov    al,ds:0xc59e3366
  412d34:	jnp    0x412d04
  412d36:	mov    ebp,0x9d7727b2
  412d3b:	sub    al,BYTE PTR [edi+ebx*1-0xc]
  412d3f:	lock jns 0x412cff
  412d42:	scas   eax,DWORD PTR es:[edi]
  412d43:	pusha  
  412d44:	pop    edi
  412d45:	jmp    0x2694f33e
  412d4a:	test   al,0xe7
  412d4c:	call   0x4ccb:0x4b95f351
  412d53:	sbb    al,0x3e
  412d55:	xchg   esi,eax
  412d56:	and    eax,0x2f9c72d1
  412d5b:	and    eax,0x4a339b99
  412d60:	lock jmp 0x5526:0x673b7961
  412d68:	imul   ebx,DWORD PTR [edi+0x79],0x9becfac0
  412d6f:	add    dh,dl
  412d71:	cmovae edi,DWORD PTR [ebx+0x4408656d]
  412d78:	cmc    
  412d79:	test   BYTE PTR [ebx+0x6db4c43e],0x38
  412d80:	in     eax,0x27
  412d82:	ins    DWORD PTR es:[edi],dx
  412d83:	mov    ch,0xe8
  412d85:	jnp    0x412d3e
  412d87:	pop    ebp
  412d88:	lods   eax,DWORD PTR ds:[esi]
  412d89:	xchg   edi,eax
  412d8a:	dec    ebp
  412d8b:	aam    0x66
  412d8d:	xchg   DWORD PTR ds:0x7280fed2,ecx
  412d93:	not    DWORD PTR ds:0x15329ef0
  412d99:	push   esp
  412d9a:	xor    BYTE PTR [edx],cl
  412d9c:	loopne 0x412e04
  412d9e:	cmp    DWORD PTR [esi+0x4fb38734],esp
  412da4:	inc    esi
  412da5:	outs   dx,DWORD PTR ds:[esi]
  412da6:	pop    ebx
  412da7:	mov    ds:0xd8489e9e,eax
  412dac:	mov    bh,0x37
  412dae:	sbb    al,0x44
  412db0:	int    0x9b
  412db2:	cmp    al,0xcc
  412db4:	lock inc ebx
  412db6:	or     esi,DWORD PTR [esi]
  412db8:	jae    0x412db1
  412dba:	std    
  412dbb:	sub    eax,0x1542ebd1
  412dc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412dc1:	adc    eax,0xd8a7e4e7
  412dc6:	sbb    ebp,DWORD PTR [eax-0x4af447cc]
  412dcc:	sbb    al,0xb
  412dce:	push   ebp
  412dcf:	pop    ss
  412dd0:	mov    ecx,cr4
  412dd3:	jns    0x412da0
  412dd5:	into   
  412dd6:	dec    ebp
  412dd7:	je     0x412d90
  412dd9:	(bad)  
  412ddb:	test   eax,0x4d4b1579
  412de0:	(bad)  [ebx]
  412de2:	cmp    ecx,DWORD PTR [ebx-0x3733e094]
  412de8:	loop   0x412e0e
  412dea:	pop    edx
  412deb:	xchg   esi,eax
  412dec:	lea    esp,[ecx]
  412dee:	les    ebx,FWORD PTR [edi-0x3ab4a011]
  412df4:	imul   eax,eax,0x176f3d56
  412dfa:	imul   ebx,DWORD PTR [ebp+edx*1+0x48],0xffffffd7
  412dff:	sub    al,0x70
  412e01:	mov    ah,cl
  412e03:	popa   
  412e04:	mov    al,BYTE PTR [edx+esi*2-0x72c00ce6]
  412e0b:	aad    0x91
  412e0d:	dec    esi
  412e0e:	sbb    al,0x46
  412e10:	xor    eax,0x695f1b7
  412e15:	pop    ebp
  412e16:	lods   al,BYTE PTR ds:[esi]
  412e17:	xchg   esp,eax
  412e18:	outs   dx,BYTE PTR fs:[esi]
  412e1a:	rcr    BYTE PTR [esi-0x55],0x7
  412e1e:	popa   
  412e1f:	pop    ebx
  412e20:	inc    DWORD PTR [ebp+ecx*8-0x3c9cbf18]
  412e27:	push   edi
  412e28:	add    esp,edi
  412e2a:	mov    ch,0x45
  412e2c:	outs   dx,DWORD PTR ds:[esi]
  412e2e:	jno    0x412ead
  412e30:	loopne 0x412e95
  412e32:	add    bh,0x20
  412e35:	(bad)  
  412e36:	jbe    0x412e04
  412e38:	loop   0x412dd8
  412e3a:	cmp    eax,0x1450fe9f
  412e3f:	dec    ebp
  412e40:	clc    
  412e41:	test   ebp,esp
  412e43:	add    eax,0x920ccfc3
  412e48:	cmp    bl,bh
  412e4a:	mov    eax,0x1e38fc61
  412e4f:	out    0x9a,eax
  412e51:	int    0x8
  412e53:	das    
  412e54:	inc    ecx
  412e55:	xchg   edi,eax
  412e56:	or     ah,al
  412e58:	aad    0x62
  412e5a:	cmc    
  412e5b:	dec    ebp
  412e5c:	push   ebx
  412e5d:	outs   dx,DWORD PTR ds:[esi]
  412e5e:	stos   DWORD PTR es:[edi],eax
  412e5f:	mov    esp,0x2d354364
  412e64:	scas   al,BYTE PTR es:[edi]
  412e65:	pushf  
  412e66:	inc    esi
  412e67:	sahf   
  412e68:	push   ebx
  412e69:	sbb    edx,DWORD PTR [ecx]
  412e6b:	sbb    BYTE PTR [esp+edx*1+0xe68668f],ch
  412e72:	or     al,0x3d
  412e74:	xchg   edi,eax
  412e75:	daa    
  412e76:	dec    esi
  412e77:	push   ecx
  412e78:	cld    
  412e79:	add    DWORD PTR [ecx+0x56],0x46e16f22
  412e80:	scas   eax,DWORD PTR es:[edi]
  412e81:	or     esi,esi
  412e83:	push   ds
  412e84:	cwde   
  412e85:	mov    ecx,0xbdbc2e01
  412e8a:	ror    DWORD PTR [ebp+0x7c],0x9d
  412e8e:	ret    0xedd4
  412e91:	mov    bh,0xef
  412e93:	push   cs
  412e94:	or     al,0x1d
  412e96:	xor    al,0xbd
  412e98:	push   ss
  412e99:	or     cl,BYTE PTR [edi-0x478c229b]
  412e9f:	add    BYTE PTR [ebx],ch
  412ea1:	popf   
  412ea2:	shr    DWORD PTR [eax-0x68],0xff
  412ea6:	sbb    eax,0xdb71f475
  412eab:	xchg   ebx,eax
  412eac:	sub    BYTE PTR [eax],bh
  412eae:	dec    edx
  412eaf:	mov    cl,0x74
  412eb1:	sub    eax,0x6ed6535f
  412eb6:	in     al,0xe7
  412eb8:	stos   DWORD PTR es:[edi],eax
  412eb9:	dec    esp
  412eba:	or     BYTE PTR [edx+esi*1+0x52],ch
  412ebe:	repnz mov ch,0xb9
  412ec1:	mov    esi,0xeba7c97
  412ec6:	ss lock addr16 dec ebx
  412eca:	mov    eax,ds:0x9648f372
  412ecf:	and    eax,0x52236f6
  412ed4:	sbb    al,0xfd
  412ed6:	and    bl,BYTE PTR [edx-0x6e]
  412ed9:	sub    esp,edi
  412edb:	jmp    0x23ba:0xfd5486d7
  412ee2:	sahf   
  412ee3:	push   esp
  412ee4:	in     al,dx
  412ee5:	cld    
  412ee6:	mov    bh,0xb
  412ee8:	mov    cl,0xd9
  412eea:	push   ebp
  412eeb:	pop    ds
  412eec:	cmp    edi,DWORD PTR [ebx+0x26]
  412eef:	pop    eax
  412ef0:	dec    ecx
  412ef1:	or     edi,eax
  412ef3:	(bad)  
  412ef4:	xchg   esp,eax
  412ef5:	jae    0x412eab
  412ef7:	or     al,al
  412ef9:	push   edi
  412efa:	jecxz  0x412ea4
  412efc:	ja     0x412e7e
  412efe:	shl    BYTE PTR [edx+0x75],1
  412f01:	popf   
  412f02:	pop    ecx
  412f03:	push   cs
  412f04:	push   ss
  412f05:	lahf   
  412f06:	adc    BYTE PTR [edi+0x59714201],bl
  412f0c:	jg     0x412f58
  412f0e:	push   ds
  412f0f:	push   ss
  412f10:	cdq    
  412f11:	push   ebx
  412f12:	fcomp  QWORD PTR [edi+0x71]
  412f15:	xchg   edx,eax
  412f16:	mov    bl,0x84
  412f18:	retf   
  412f19:	pop    ss
  412f1a:	sbb    ah,BYTE PTR [ecx]
  412f1c:	or     edx,DWORD PTR cs:[ebx+0x27]
  412f20:	add    BYTE PTR [edx],bh
  412f22:	(bad)  
  412f23:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f25:	scas   eax,DWORD PTR es:[edi]
  412f26:	arpl   WORD PTR [edx+0x19d05fa9],di
  412f2c:	je     0x412f86
  412f2e:	fs sub al,0x1f
  412f31:	hlt    
  412f32:	ins    BYTE PTR es:[edi],dx
  412f33:	pusha  
  412f34:	push   ebx
  412f35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f36:	cmp    BYTE PTR [edi-0x63],dh
  412f39:	and    eax,0xf7775f65
  412f3e:	lahf   
  412f3f:	mov    BYTE PTR [esi-0x1b],dh
  412f42:	out    0xb,eax
  412f44:	xchg   BYTE PTR [ecx-0x61c7d7d8],bh
  412f4a:	in     eax,dx
  412f4b:	inc    edx
  412f4c:	les    ecx,FWORD PTR [eax]
  412f4e:	xor    BYTE PTR ds:0x999e5d7b,dl
  412f54:	mov    esp,0xbce35ee7
  412f59:	ret    0xfbf5
  412f5c:	inc    DWORD PTR [edx+0x76021362]
  412f62:	xchg   edi,eax
  412f63:	push   ecx
  412f64:	scas   eax,DWORD PTR es:[edi]
  412f65:	sbb    esp,DWORD PTR [edx]
  412f67:	retf   0x8f23
  412f6a:	lahf   
  412f6b:	push   cs
  412f6c:	js     0x412fb4
  412f6e:	test   BYTE PTR [ebp+0x66],dl
  412f71:	push   0xffffffcb
  412f73:	jbe    0x412f88
  412f75:	shr    BYTE PTR [eax+edx*4+0x3b67275d],0xe
  412f7d:	pushf  
  412f7e:	inc    eax
  412f7f:	call   0xcc63:0xd28364f8
  412f86:	pop    esi
  412f87:	push   es
  412f88:	push   esi
  412f89:	bound  edi,QWORD PTR [edx-0x42bfaef3]
  412f8f:	push   eax
  412f90:	imul   eax,DWORD PTR [esi-0x2f8921c8],0xffffffbe
  412f97:	or     al,0xd
  412f99:	int    0xa7
  412f9b:	pop    edx
  412f9c:	push   eax
  412f9d:	mov    bh,0x48
  412f9f:	xor    eax,edi
  412fa1:	push   0xffffffdc
  412fa3:	(bad)  
  412fa4:	fcom   QWORD PTR [edx-0x308db0d0]
  412faa:	scas   al,BYTE PTR es:[edi]
  412fab:	loopne 0x41300b
  412fad:	sbb    al,0xfd
  412faf:	icebp  
  412fb0:	inc    ecx
  412fb1:	sub    ebp,DWORD PTR [eax+0x699f998f]
  412fb7:	sub    edx,DWORD PTR [ecx]
  412fb9:	add    DWORD PTR [edx-0x3bbe7a0f],0xea210223
  412fc3:	pop    edx
  412fc4:	push   ebx
  412fc5:	ss ins BYTE PTR es:[edi],dx
  412fc7:	jno    0x412fcc
  412fc9:	jle    0x412fa3
  412fcb:	pusha  
  412fcc:	iret   
  412fcd:	mov    eax,ds:0x95150fd1
  412fd2:	xchg   edi,eax
  412fd3:	xchg   ecx,eax
  412fd4:	pop    edi
  412fd5:	dec    esp
  412fd6:	add    BYTE PTR [edx+eiz*1-0x6920244b],bl
  412fdd:	mov    ch,0x4f
  412fdf:	pop    edi
  412fe0:	cli    
  412fe1:	add    BYTE PTR [ebx],0xe8
  412fe4:	adc    ch,ah
  412fe6:	jmp    0x412fb6
  412fe8:	xchg   ebx,eax
  412fe9:	cmp    bl,0x8f
  412fec:	inc    ebx
  412fed:	cwde   
  412fee:	xchg   ebp,eax
  412fef:	mov    ecx,0xdd774406
  412ff4:	dec    DWORD PTR [ecx+edx*8-0x44beb202]
  412ffb:	clc    
  412ffc:	das    
  412ffd:	jle    0x413050
  412fff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413000:	mov    WORD PTR [edx+0x2e55e81c],?
  413006:	xor    bl,BYTE PTR [eax+0x58000145]
  41300c:	shl    BYTE PTR [ebp-0x39956cfb],1
  413012:	lods   eax,DWORD PTR ds:[esi]
  413013:	rol    esp,cl
  413015:	(bad)  
  413016:	cmp    cl,ah
  413018:	fstp   TBYTE PTR [ecx]
  41301a:	dec    esp
  41301b:	ret    0x2aa
  41301e:	mov    eax,0x479ec54f
  413023:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413024:	mov    edx,0xd1b92d77
  413029:	int    0x18
  41302b:	jg     0x412fbd
  41302d:	addr16 cli 
  41302f:	mov    eax,0x94b86954
  413034:	out    0x38,al
  413036:	jnp    0x413037
  413038:	sti    
  413039:	push   ss
  41303a:	data16 sbb al,0x52
  41303d:	jbe    0x413025
  41303f:	add    DWORD PTR [eax-0x39],edx
  413042:	push   esp
  413043:	out    dx,al
  413044:	and    DWORD PTR [ecx-0x3b],ecx
  413047:	stos   BYTE PTR es:[edi],al
  413048:	pushf  
  413049:	jne    0x4130ca
  41304b:	jne    0x413034
  41304d:	fld    TBYTE PTR [esi]
  41304f:	loop   0x413050
  413051:	hlt    
  413052:	jo     0x413096
  413054:	jl     0x413031
  413056:	mov    al,0x18
  413058:	or     DWORD PTR [esi+0x2735e350],0xffffffe4
  41305f:	cmc    
  413060:	outs   dx,DWORD PTR ds:[esi]
  413061:	cwde   
  413062:	sbb    al,0x34
  413064:	retf   
  413065:	enter  0xef28,0xa9
  413069:	mov    dh,0xd9
  41306b:	add    dh,BYTE PTR [ebp+0x13]
  41306e:	ja     0x4130a2
  413070:	inc    esp
  413071:	mov    ds:0x23f66650,al
  413076:	out    0x36,al
  413078:	pop    ebx
  413079:	jne    0x413063
  41307b:	ins    BYTE PTR es:[edi],dx
  41307c:	cs (bad) 
  41307e:	pop    esi
  41307f:	or     eax,0x92ef676c
  413084:	call   0xadf6:0x63ce71c5
  41308b:	cmp    al,0x4d
  41308d:	repnz mov ebx,0x96c935a2
  413093:	shl    BYTE PTR [eax-0x52751cf5],0x5b
  41309a:	pop    esp
  41309b:	mov    al,0x14
  41309d:	jl     0x4130de
  41309f:	test   al,0x9
  4130a1:	jae    0x4130a2
  4130a3:	mov    edx,0xf7e82488
  4130a8:	(bad)  
  4130a9:	mov    esi,0x43cae3a0
  4130ae:	adc    DWORD PTR [edx+0x2fcf3c35],ebp
  4130b4:	daa    
  4130b5:	mov    edi,0xa932ba55
  4130ba:	push   eax
  4130bb:	out    0x88,al
  4130bd:	aam    0xf9
  4130bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130c0:	push   ecx
  4130c1:	push   ss
  4130c2:	(bad)  
  4130c3:	mov    esp,0x760106fa
  4130c8:	(bad)  
  4130c9:	(bad)  
  4130ca:	jle    0x413062
  4130cc:	add    ebx,DWORD PTR [edx+0x3367379]
  4130d2:	inc    ebp
  4130d3:	in     al,dx
  4130d4:	je     0x41307f
  4130d6:	in     al,0x44
  4130d8:	jbe    0x413144
  4130da:	mov    ah,0xb8
  4130dc:	mov    edx,0x14a55a54
  4130e1:	popa   
  4130e2:	(bad)  
  4130e4:	into   
  4130e5:	pop    edi
  4130e6:	xor    bh,BYTE PTR [ebp+0x5e7974df]
  4130ec:	jne    0x2afe66ae
  4130f2:	sub    al,0x6b
  4130f4:	popf   
  4130f5:	lods   al,BYTE PTR ds:[esi]
  4130f6:	dec    esp
  4130f7:	and    cl,dh
  4130f9:	push   ds
  4130fa:	(bad)  
  4130fb:	arpl   bp,di
  4130fd:	jl     0x413140
  4130ff:	push   ss
  413100:	xor    edi,DWORD PTR [edx-0x7d]
  413103:	mov    eax,0x1534189b
  413108:	loope  0x413108
  41310a:	adc    al,0x26
  41310c:	mov    esp,DWORD PTR [esi]
  41310e:	mov    al,ds:0x5a5ff314
  413113:	xchg   ecx,eax
  413114:	popa   
  413115:	add    eax,0xa46a236f
  41311a:	push   ss
  41311b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41311c:	xor    DWORD PTR [edi-0x4db6cffd],0xffffff96
  413123:	inc    ecx
  413124:	aas    
  413125:	fwait
  413126:	loop   0x413147
  413128:	aad    0xc7
  41312a:	xor    al,0xd6
  41312c:	(bad)  [edi]
  41312e:	push   esi
  41312f:	dec    esp
  413130:	leave  
  413131:	scas   eax,DWORD PTR es:[edi]
  413132:	lahf   
  413133:	xor    eax,0x9a3e4a0f
  413138:	mov    fs,WORD PTR [ecx]
  41313a:	push   0xffffffd5
  41313c:	mov    gs,esp
  41313e:	xchg   esi,eax
  41313f:	test   DWORD PTR [edx],edi
  413141:	ss push esi
  413143:	mov    eax,ds:0x457cd876
  413148:	and    al,0x7f
  41314a:	ret    
  41314b:	fstp   DWORD PTR [edx-0x67]
  41314e:	(bad)  
  41314f:	and    edx,ebx
  413151:	call   0xc813:0x73b60fca
  413158:	das    
  413159:	imul   ebx,ebx,0x137616c1
  41315f:	jne    0x41318d
  413161:	out    dx,eax
  413162:	xchg   esi,eax
  413163:	xor    BYTE PTR [ecx],ah
  413165:	loopne 0x41318c
  413167:	jp     0x413175
  413169:	sahf   
  41316a:	push   edi
  41316b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41316c:	sub    bh,BYTE PTR [ebx+0x2abc2c56]
  413172:	mov    dl,bh
  413174:	dec    edi
  413175:	push   ecx
  413176:	cld    
  413177:	inc    esi
  413178:	fnstenv [ebx+0x6a]
  41317b:	aaa    
  41317c:	cmp    al,al
  41317e:	pop    eax
  41317f:	mov    bl,0x5d
  413181:	not    BYTE PTR [ebp+ecx*8-0x50071824]
  413188:	push   ecx
  413189:	mov    ecx,0xa9f4ac2
  41318e:	scas   eax,DWORD PTR es:[edi]
  41318f:	mov    dl,0xcd
  413191:	fist   DWORD PTR [ecx+0x15]
  413194:	mov    edx,0xdc55bd6c
  413199:	fadd   QWORD PTR [ecx]
  41319b:	sub    bh,BYTE PTR [ecx+0x43b62216]
  4131a1:	dec    esp
  4131a2:	ret    0xa47e
  4131a5:	int    0x1c
  4131a7:	inc    ebp
  4131a8:	je     0x41314f
  4131aa:	sbb    bl,dh
  4131ac:	es ins DWORD PTR es:[edi],dx
  4131ae:	mov    ch,0x78
  4131b0:	data16 add dl,bl
  4131b3:	mov    ebp,?
  4131b5:	sub    eax,0x825a8433
  4131ba:	sub    cl,ch
  4131bc:	and    DWORD PTR [eax],edi
  4131be:	jecxz  0x413213
  4131c0:	popf   
  4131c1:	adc    al,0x1f
  4131c3:	inc    eax
  4131c4:	inc    eax
  4131c5:	imul   edx,DWORD PTR [ecx],0xffffffac
  4131c8:	clc    
  4131c9:	fwait
  4131ca:	jg     0x4131e8
  4131cc:	jecxz  0x4131b1
  4131ce:	scas   eax,DWORD PTR es:[edi]
  4131cf:	addr16 ret 
  4131d1:	sub    edx,esi
  4131d3:	jecxz  0x4131f6
  4131d5:	xchg   edx,eax
  4131d6:	inc    ebx
  4131d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131d8:	add    BYTE PTR [ebx+0x3],al
  4131db:	push   0x5c6fdc05
  4131e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131e1:	cmp    eax,0x4b67f691
  4131e6:	mov    bh,dh
  4131e8:	call   0xa911e847
  4131ed:	lds    esi,FWORD PTR [ebp+ecx*8-0x13]
  4131f1:	mov    dh,0x51
  4131f3:	out    0x19,eax
  4131f5:	sbb    BYTE PTR [edx],dl
  4131f7:	push   0xd2ca78c5
  4131fc:	(bad)  
  4131fd:	pop    edx
  4131fe:	and    BYTE PTR [ebp+0x31],ah
  413201:	stos   BYTE PTR es:[edi],al
  413202:	xor    DWORD PTR [esi],ebp
  413204:	adc    bl,dh
  413206:	clc    
  413207:	jl     0x4131bf
  413209:	xchg   ecx,eax
  41320a:	(bad)  
  41320d:	mov    DWORD PTR gs:[esp+ebx*1-0x7e],edi
  413212:	(bad)  
  413213:	aad    0x5a
  413215:	rol    BYTE PTR [esi+ecx*4],1
  413218:	jae    0x4131d3
  41321a:	xor    dl,BYTE PTR [edi+0x5ee0061c]
  413220:	sub    bh,cl
  413222:	add    eax,0xc6072e5a
  413227:	sbb    esp,DWORD PTR [ecx+0x43]
  41322a:	cmc    
  41322b:	outs   dx,DWORD PTR ds:[esi]
  41322c:	adc    ebp,edi
  41322e:	outs   dx,DWORD PTR ds:[esi]
  41322f:	(bad)  
  413230:	int    0x97
  413232:	pop    ebx
  413233:	mov    ah,0xac
  413235:	test   cl,ch
  413237:	xor    al,0x85
  413239:	push   ds
  41323a:	or     esi,DWORD PTR [ecx+0x702bfb13]
  413240:	xchg   ecx,eax
  413241:	mov    WORD PTR [edi],gs
  413243:	sub    al,0x6d
  413245:	outs   dx,BYTE PTR ds:[esi]
  413246:	or     dl,BYTE PTR ds:0x128ff6ae
  41324c:	ret    0xe910
  41324f:	imul   ebp,DWORD PTR [edi-0x1cf63b0e],0xffffff85
  413256:	out    0x40,al
  413258:	push   es
  413259:	dec    esi
  41325a:	add    dl,cl
  41325c:	jae    0x4132b7
  41325e:	fs xor al,0x9e
  413261:	xchg   DWORD PTR [ebx],eax
  413263:	fimul  WORD PTR [edi+0x3d76e3d2]
  413269:	inc    eax
  41326a:	push   esp
  41326b:	fbld   TBYTE PTR [ebp-0x10fcbd94]
  413271:	dec    esp
  413272:	cmp    eax,0xf97a25fe
  413277:	fs jle 0x41326c
  41327a:	test   DWORD PTR [edi-0x11],ebx
  41327d:	int    0xa5
  41327f:	les    esi,FWORD PTR [ebp-0x52]
  413282:	mov    ch,0x2a
  413284:	or     dh,al
  413286:	mov    WORD PTR [ecx],es
  413288:	or     BYTE PTR [edi],bl
  41328a:	shl    esp,cl
  41328c:	repz mov edx,0x84b1f8ee
  413292:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413293:	out    0x30,eax
  413295:	retf   0x57a3
  413298:	ss fwait
  41329a:	xchg   ebp,eax
  41329b:	pushf  
  41329c:	(bad)  
  41329d:	aad    0x47
  41329f:	push   ds
  4132a0:	xlat   BYTE PTR ds:[ebx]
  4132a1:	dec    ebp
  4132a2:	ja     0x41324d
  4132a4:	daa    
  4132a5:	xchg   esp,eax
  4132a6:	loopne 0x413296
  4132a8:	ja     0x4132b0
  4132aa:	out    dx,eax
  4132ab:	(bad)
  4132ae:	cmp    DWORD PTR [ebx+0x35cc3137],0x546bb9f6
  4132b8:	xor    edx,DWORD PTR [ecx-0x58]
  4132bb:	adc    BYTE PTR [eax+0xa],ah
  4132be:	xchg   ebp,eax
  4132bf:	sbb    dh,BYTE PTR [ecx]
  4132c1:	jge    0x41329c
  4132c3:	inc    esp
  4132c4:	inc    edx
  4132c5:	lahf   
  4132c6:	xchg   ecx,eax
  4132c7:	xchg   edx,eax
  4132c8:	mov    edi,0x8986e93
  4132cd:	jmp    FWORD PTR [ebp-0x19a29233]
  4132d3:	aam    0x1a
  4132d5:	xchg   esp,eax
  4132d6:	fs cld 
  4132d8:	cmc    
  4132d9:	pop    ebx
  4132da:	push   ss
  4132db:	das    
  4132dc:	ins    DWORD PTR es:[edi],dx
  4132dd:	mov    ebp,0x3134464
  4132e2:	cmp    al,0x4b
  4132e4:	mov    ds:0x29553c6e,al
  4132e9:	push   esi
  4132ea:	popf   
  4132eb:	mov    ebp,0x5e17097e
  4132f0:	xchg   ebp,eax
  4132f1:	jmp    DWORD PTR [ebx-0x7a9f3540]
  4132f7:	mov    eax,ds:0xf7f247db
  4132fc:	clc    
  4132fd:	test   al,0x67
  4132ff:	pop    ss
  413300:	call   FWORD PTR [ebp-0x71]
  413303:	and    esi,DWORD PTR [ebp+0x5d0b3007]
  413309:	out    dx,al
  41330a:	push   ecx
  41330b:	push   esp
  41330c:	retf   0x2b4a
  41330f:	out    dx,eax
  413310:	add    al,0x3f
  413312:	rcr    BYTE PTR [esi-0x41],1
  413315:	pop    ds
  413316:	push   eax
  413317:	cmp    ebx,DWORD PTR [ecx+ebp*2]
  41331a:	xor    DWORD PTR fs:[ebp-0xbf93016],esi
  413321:	sbb    DWORD PTR [ecx-0x20d20e6],0xd28e22a7
  41332b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41332c:	mov    al,0x99
  41332e:	adc    DWORD PTR [ebp+0x16bf63a1],esi
  413334:	xchg   ebx,eax
  413335:	and    eax,0xf5a46e16
  41333a:	adc    BYTE PTR [ecx+esi*2+0x1415b9fd],bl
  413341:	push   esi
  413342:	cs cs push ds
  413345:	addr16 pop es
  413347:	test   BYTE PTR [ecx],dh
  413349:	push   edx
  41334a:	mov    edi,edx
  41334c:	fist   WORD PTR [esi+0x2f16b4dd]
  413352:	test   BYTE PTR [esp+eax*2],dh
  413355:	in     eax,0x9d
  413357:	sbb    al,0xca
  413359:	shl    BYTE PTR [esi+0x64],0xdb
  41335d:	xor    cl,dl
  41335f:	mov    esi,0x4e58cab4
  413364:	popf   
  413365:	add    eax,0x2e8497d2
  41336a:	push   esi
  41336b:	mov    ah,0xf2
  41336d:	xor    ebx,DWORD PTR [ebx]
  41336f:	xor    esi,ebp
  413371:	jns    0x4133a5
  413373:	jge    0x413337
  413375:	icebp  
  413376:	mov    ecx,0x691a27b8
  41337b:	ins    DWORD PTR es:[edi],dx
  41337c:	mov    bh,0x54
  41337e:	push   eax
  41337f:	push   esi
  413380:	icebp  
  413381:	fs cs mov dh,0x86
  413385:	(bad)  
  413386:	mov    eax,0x7be406fd
  41338b:	or     DWORD PTR [ebx+0x55895406],ebp
  413391:	cld    
  413392:	sti    
  413393:	xor    BYTE PTR [ebp-0x2c],cl
  413396:	pop    edx
  413397:	fsubr  DWORD PTR [ebx+ebx*8-0xf]
  41339b:	jecxz  0x41338b
  41339d:	test   al,0xde
  41339f:	mov    DWORD PTR ds:0xa374fdca,ecx
  4133a5:	inc    esp
  4133a6:	sti    
  4133a7:	(bad)  
  4133a8:	idiv   ebp
  4133aa:	mov    dh,0x60
  4133ac:	(bad)  
  4133ad:	clc    
  4133ae:	mov    esi,0xb2482383
  4133b3:	xlat   BYTE PTR ds:[ebx]
  4133b4:	mov    ebp,0xfff647e0
  4133b9:	repnz sbb eax,0xd63578ef
  4133bf:	out    0x68,al
  4133c1:	sub    bh,BYTE PTR [ebp-0x3c]
  4133c4:	or     ebp,DWORD PTR [ebp+0x67]
  4133c7:	inc    esp
  4133c8:	push   ss
  4133c9:	(bad)  
  4133ca:	aad    0xc5
  4133cc:	mov    dh,0x21
  4133ce:	jb     0x413413
  4133d0:	inc    edi
  4133d1:	in     eax,dx
  4133d2:	fadd   QWORD PTR [edi+0x7830e602]
  4133d8:	add    eax,0x288a8259
  4133dd:	fisttp WORD PTR [ebx-0x2d1acb32]
  4133e3:	dec    esi
  4133e4:	iret   
  4133e5:	bound  edx,QWORD PTR [esi]
  4133e7:	in     eax,dx
  4133e8:	mov    ch,0x33
  4133ea:	adc    al,0x8a
  4133ec:	jle    0x41336e
  4133ee:	and    eax,DWORD PTR [ebp-0x59e2ec43]
  4133f4:	jo     0x41344d
  4133f6:	inc    edx
  4133f7:	sar    DWORD PTR [ecx],0x73
  4133fa:	dec    ebx
  4133fb:	out    0xa5,eax
  4133fd:	inc    esi
  4133fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4133ff:	add    cl,BYTE PTR [edx+edx*2-0x2e]
  413403:	or     ebx,esp
  413405:	aam    0x37
  413407:	stos   DWORD PTR es:[edi],eax
  413408:	pushf  
  413409:	inc    edx
  41340a:	mov    dl,0x1e
  41340c:	sti    
  41340d:	or     al,0xa8
  41340f:	xor    eax,0xdfe674fb
  413414:	mov    dl,0x2
  413416:	pushf  
  413417:	outs   dx,BYTE PTR ds:[esi]
  413418:	les    edi,FWORD PTR [esi+0x1c0a7b5b]
  41341e:	aaa    
  41341f:	clc    
  413420:	push   cs
  413421:	push   eax
  413422:	dec    esp
  413423:	shl    ah,cl
  413425:	push   0x27
  413427:	outs   dx,DWORD PTR ds:[esi]
  413428:	jmp    0x413472
  41342a:	pusha  
  41342b:	xchg   edx,eax
  41342c:	arpl   WORD PTR [ebx-0x3b],sp
  41342f:	sbb    esi,DWORD PTR [edx]
  413431:	push   ss
  413432:	mov    esi,ebx
  413434:	call   0x722:0x42b4755f
  41343b:	xchg   edi,eax
  41343c:	mov    BYTE PTR [edi],ah
  41343e:	scas   eax,DWORD PTR es:[edi]
  41343f:	push   ecx
  413440:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413441:	shr    DWORD PTR [edi-0x7402cbcc],cl
  413447:	(bad)  
  413449:	test   eax,0xdb4fa938
  41344e:	cld    
  41344f:	test   eax,0x825de18
  413454:	xor    esp,DWORD PTR [ebx+0x59]
  413457:	imul   ebx,DWORD PTR [edi-0x16],0xffffffb8
  41345b:	jae    0x4133e1
  41345d:	outs   dx,BYTE PTR ss:[esi]
  41345f:	outs   dx,DWORD PTR ds:[esi]
  413460:	sahf   
  413461:	scas   al,BYTE PTR es:[edi]
  413462:	inc    ebx
  413463:	or     al,0xf
  413465:	mov    al,0x97
  413467:	adc    eax,0xd608681b
  41346c:	(bad)  [ebx+ebp*2]
  41346f:	leave  
  413470:	sbb    bh,0xfa
  413473:	mov    ebp,0xa82b0cdf
  413478:	retf   0x8b37
  41347b:	lods   eax,DWORD PTR ds:[esi]
  41347c:	stos   BYTE PTR es:[edi],al
  41347d:	fwait
  41347e:	pop    esp
  41347f:	inc    esp
  413480:	xchg   ebx,eax
  413481:	cwde   
  413482:	ins    DWORD PTR es:[edi],dx
  413483:	in     al,0xae
  413485:	cmp    al,0xe5
  413487:	xor    BYTE PTR [edi+ebp*2+0x56],dh
  41348b:	aas    
  41348c:	outs   dx,BYTE PTR ds:[esi]
  41348d:	neg    bl
  41348f:	in     al,0x5a
  413491:	jle    0x4134c6
  413493:	push   0x24
  413495:	out    0x8f,eax
  413497:	(bad)  
  413498:	jmp    0x63351cb7
  41349d:	dec    esp
  41349e:	or     ebx,DWORD PTR [ecx]
  4134a0:	fidivr WORD PTR [ecx+0x158955c2]
  4134a6:	xchg   DWORD PTR [ebp+0x1322a847],eax
  4134ac:	jbe    0x413477
  4134ae:	lea    esi,[esi+0x7b]
  4134b1:	test   DWORD PTR [edi-0x3653c3e0],ebx
  4134b7:	jne    0x4134d9
  4134b9:	loop   0x413479
  4134bb:	sbb    eax,0x945c0731
  4134c0:	data16 adc bh,BYTE PTR [esi+esi*4-0x2f]
  4134c5:	dec    edi
  4134c6:	and    bh,BYTE PTR [edi+0x123a6ffb]
  4134cc:	enter  0xad67,0x48
  4134d0:	add    eax,0xcdc60d2a
  4134d5:	pop    ebx
  4134d6:	sub    ebx,esi
  4134d8:	pop    ss
  4134d9:	pop    ds
  4134da:	xchg   edi,eax
  4134db:	and    dl,BYTE PTR [edi]
  4134dd:	test   al,0xec
  4134df:	add    BYTE PTR ds:0xb992e747,ch
  4134e5:	jno    0x41349a
  4134e7:	add    al,0xfe
  4134e9:	rcr    BYTE PTR [esi-0x26004950],1
  4134ef:	jno    0x4134c8
  4134f1:	mov    al,ds:0xc7cc4bff
  4134f6:	out    0x45,eax
  4134f8:	icebp  
  4134f9:	aam    0x43
  4134fb:	jo     0x41354e
  4134fd:	add    ebx,DWORD PTR [eax]
  4134ff:	sub    ch,BYTE PTR [ecx]
  413501:	push   eax
  413502:	push   0xd1306979
  413507:	push   ss
  413508:	(bad)  
  413509:	lods   eax,DWORD PTR ds:[esi]
  41350a:	pop    edx
  41350b:	mov    ch,0xf
  41350d:	les    ebp,FWORD PTR [ecx-0x11]
  413510:	inc    ecx
  413511:	mov    ds:0x843b729f,al
  413516:	push   0x2c44928c
  41351b:	sbb    al,0xf0
  41351d:	inc    ecx
  41351e:	xor    eax,0xabd90e1b
  413523:	mov    al,ds:0x3660f2dd
  413528:	into   
  413529:	xor    eax,0x8aa8e35c
  41352e:	in     eax,0x52
  413530:	xor    al,0x7c
  413532:	mov    dl,0xf1
  413534:	adc    esp,ecx
  413536:	mov    cl,0x1e
  413538:	sbb    esi,DWORD PTR [ebx-0x354a63bd]
  41353e:	mov    eax,ds:0x41b9736c
  413543:	xlat   BYTE PTR ds:[ebx]
  413544:	pop    ebp
  413545:	ins    BYTE PTR es:[edi],dx
  413546:	jne    0x41352d
  413548:	clc    
  413549:	test   eax,0xf5fd6bb7
  41354e:	rcr    DWORD PTR [esi],1
  413550:	pop    eax
  413551:	push   ebx
  413552:	mov    edi,0x5431e1ee
  413557:	inc    esp
  413558:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413559:	std    
  41355a:	sub    al,0x92
  41355c:	imul   edi,DWORD PTR [ecx-0x2b0debca],0xffffffdf
  413563:	dec    edi
  413564:	jecxz  0x41352f
  413566:	mov    gs,WORD PTR [edx+0x55]
  413569:	(bad)  
  41356a:	jae    0x4134f7
  41356c:	repz push edx
  41356e:	neg    BYTE PTR [ecx+0x4c0314fa]
  413574:	call   0x726acf6f
  413579:	cmp    DWORD PTR [edx-0x5a],esi
  41357c:	push   eax
  41357d:	std    
  41357e:	jmp    0xd28cd2d7
  413583:	inc    esi
  413584:	sub    esi,DWORD PTR [edi]
  413586:	sbb    eax,0x666c4b03
  41358b:	scas   eax,DWORD PTR es:[edi]
  41358c:	mov    dh,0x7d
  41358e:	jg     0x4135ee
  413590:	out    0xd9,al
  413592:	pop    ds
  413593:	push   esp
  413594:	sbb    DWORD PTR ds:[esi-0x5bec0bad],0x52
  41359c:	fnsave [esi+ebp*8-0x568aea37]
  4135a3:	add    eax,0x4f125f1a
  4135a8:	in     al,dx
  4135a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135ab:	push   ebx
  4135ac:	pop    ecx
  4135ad:	push   cs
  4135ae:	mov    ds:0xbaeb2e9e,eax
  4135b3:	cmp    dh,ch
  4135b5:	outs   dx,BYTE PTR ds:[esi]
  4135b6:	mov    esp,0x804eb106
  4135bb:	fcomi  st,st(5)
  4135bd:	jae    0x4135c8
  4135bf:	popa   
  4135c0:	jle    0x41356f
  4135c2:	xchg   edi,eax
  4135c3:	in     al,dx
  4135c4:	xor    DWORD PTR [ebx+ecx*1],edx
  4135c7:	stos   DWORD PTR es:[edi],eax
  4135c8:	rcr    DWORD PTR [edi],cl
  4135ca:	mov    edi,0xa9870f59
  4135cf:	dec    ecx
  4135d0:	push   esi
  4135d1:	mov    es:0x204cf853,al
  4135d7:	sub    ebp,DWORD PTR [ebp+0x2b752577]
  4135dd:	inc    edi
  4135de:	test   al,0xf3
  4135e0:	popf   
  4135e1:	aas    
  4135e2:	out    0x57,al
  4135e4:	xor    edi,DWORD PTR [eax-0x384de819]
  4135ea:	push   ebx
  4135eb:	jmp    0x6c6e:0x1dee539
  4135f2:	dec    ebp
  4135f3:	inc    ebx
  4135f4:	sbb    eax,0x46196c72
  4135f9:	pushf  
  4135fa:	or     al,0x8c
  4135fc:	arpl   WORD PTR [edi-0x30],ax
  4135ff:	lods   al,BYTE PTR ds:[esi]
  413600:	in     eax,dx
  413601:	lea    edi,[edx+edi*8-0x35]
  413605:	mov    esi,0x5aa9906f
  41360a:	pop    ss
  41360b:	imul   esp,DWORD PTR [eax-0x26875058],0x7c
  413612:	aad    0x55
  413614:	sar    edx,1
  413616:	xchg   edi,eax
  413617:	mov    ch,0x69
  413619:	pop    edi
  41361a:	inc    esi
  41361b:	cli    
  41361c:	lods   al,BYTE PTR ds:[esi]
  41361d:	pop    ebx
  41361e:	je     0x413669
  413620:	adc    eax,0x2b50d1c0
  413625:	add    eax,0x83ba77a6
  41362a:	enter  0x4957,0xc4
  41362e:	in     eax,dx
  41362f:	stos   BYTE PTR es:[edi],al
  413630:	cli    
  413631:	inc    eax
  413632:	mov    ds:0xe685151d,al
  413637:	test   edx,edx
  413639:	ret    
  41363a:	out    dx,eax
  41363b:	jo     0x4136b6
  41363d:	aad    0xb3
  41363f:	aaa    
  413640:	mov    bl,0xdd
  413642:	jle    0x413689
  413644:	push   ecx
  413645:	cmp    bl,bl
  413647:	or     eax,0x7a557608
  41364c:	mov    ecx,0x5f6cedf0
  413651:	push   eax
  413652:	scas   al,BYTE PTR es:[edi]
  413653:	cwde   
  413654:	mov    DWORD PTR [ebx+0x71],ecx
  413657:	dec    ebx
  413658:	xchg   esp,eax
  413659:	xchg   esi,eax
  41365a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41365b:	out    0x7d,eax
  41365d:	and    eax,DWORD PTR es:[edi-0x78]
  413661:	arpl   WORD PTR [ecx+0x17],cx
  413664:	mov    ch,BYTE PTR [edx-0x6f]
  413667:	gs inc edx
  413669:	(bad)  
  41366a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41366b:	rcl    BYTE PTR [edx+esi*2],0xc5
  41366f:	or     BYTE PTR ds:0xdbc9adf9,al
  413675:	leave  
  413676:	sbb    esi,DWORD PTR [ebx]
  413678:	(bad)
  41367b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41367c:	fdivr  QWORD PTR [ebx+0x72fca3be]
  413682:	add    DWORD PTR [ecx],eax
  413684:	jle    0x4136ff
  413686:	les    edx,FWORD PTR [eax+0x3244ad43]
  41368c:	rcl    cl,0x8d
  41368f:	mov    edx,0x167418a
  413694:	add    al,ah
  413696:	das    
  413697:	mov    cl,0x80
  413699:	xor    DWORD PTR [eax+0x7baf2e67],ebx
  41369f:	out    0x74,al
  4136a1:	adc    DWORD PTR [ecx-0x63],ecx
  4136a4:	dec    edi
  4136a5:	in     eax,0x37
  4136a7:	scas   eax,DWORD PTR es:[edi]
  4136a8:	data16 adc BYTE PTR [ebx+0x5153aef0],ch
  4136af:	push   cs
  4136b0:	lods   al,BYTE PTR ds:[esi]
  4136b1:	sbb    ecx,eax
  4136b3:	int    0x96
  4136b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136b6:	push   edx
  4136b7:	mov    cs,WORD PTR [edx+edx*4]
  4136ba:	mov    al,ds:0x88c3be00
  4136bf:	cmc    
  4136c0:	dec    esi
  4136c1:	mov    eax,esp
  4136c3:	sahf   
  4136c4:	(bad)
  4136c8:	mov    bh,0x54
  4136ca:	(bad)  
  4136cb:	sti    
  4136cc:	(bad)  
  4136cd:	jmp    0xe3c:0x44ddab72
  4136d4:	sar    ch,cl
  4136d6:	jo     0x413687
  4136d8:	dec    ecx
  4136da:	xor    al,0xe7
  4136dc:	sar    BYTE PTR [edi+ecx*8],cl
  4136df:	xchg   DWORD PTR [edi-0x6b],esi
  4136e2:	cdq    
  4136e3:	nop
  4136e4:	sub    DWORD PTR [esi-0x149e05a4],ecx
  4136ea:	pop    ecx
  4136eb:	arpl   WORD PTR [ebx+0x58],ax
  4136ee:	and    DWORD PTR [eax],0x90fa2464
  4136f4:	leave  
  4136f5:	xlat   BYTE PTR ds:[ebx]
  4136f6:	jns    0x41373e
  4136f8:	mov    ds:0x665b65a4,eax
  4136fd:	jmp    0x14257fc9
  413702:	push   0x15be03d7
  413707:	cld    
  413708:	lea    ebp,[edi-0x6c]
  41370b:	call   0x4da0:0x9dab9379
  413712:	loopne 0x4136da
  413714:	sub    al,0xfc
  413716:	shl    BYTE PTR ds:0x543f80ad,1
  41371c:	lods   al,BYTE PTR ds:[esi]
  41371d:	setb   dh
  413720:	repz repz inc ebp
  413723:	fsubr  QWORD PTR [esi]
  413725:	je     0x41372b
  413727:	fs cdq 
  413729:	cs (bad) 
  41372b:	mov    eax,ds:0xe1c4a217
  413730:	adc    ch,cl
  413732:	adc    al,0x9c
  413734:	sub    eax,0x6a2ebc79
  413739:	sub    eax,0x2df70d65
  41373e:	cmp    DWORD PTR [esi+0x6ff36afd],0xdca7f834
  413748:	test   al,0x46
  41374a:	cmp    al,0x83
  41374c:	or     eax,0xf41d0f0e
  413751:	jmp    0x39417203
  413756:	and    eax,0x9d1dac9a
  41375b:	push   edx
  41375c:	jno    0x413717
  41375e:	packsswb mm5,QWORD PTR [esi+0x7f3438b5]
  413765:	and    al,0xaf
  413767:	aad    0x12
  413769:	xor    ch,BYTE PTR [esi-0x54]
  41376c:	std    
  41376d:	mov    dl,0x8c
  41376f:	pushf  
  413770:	lds    ebp,FWORD PTR [edx-0x57c9160a]
  413776:	mov    ds,bp
  413779:	out    dx,al
  41377a:	sti    
  41377b:	and    BYTE PTR [edx+ebp*1+0x5e8f824e],ch
  413782:	sub    edi,eax
  413784:	push   esi
  413785:	ins    DWORD PTR es:[edi],dx
  413786:	adc    al,0xf3
  413788:	lods   al,BYTE PTR ds:[esi]
  413789:	aas    
  41378a:	sub    DWORD PTR [edx],edx
  41378c:	sbb    BYTE PTR [esi+0x279dc3f7],dh
  413792:	jno    0x413770
  413794:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413795:	sbb    DWORD PTR [ebx],0x21
  413798:	dec    edi
  413799:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41379a:	pop    esp
  41379b:	mov    al,ds:0x66025b09
  4137a0:	dec    ebp
  4137a1:	adc    bh,BYTE PTR [ecx-0x6ee27b75]
  4137a7:	dec    BYTE PTR [eax+0x463a56b9]
  4137ad:	and    bl,BYTE PTR [ecx]
  4137af:	into   
  4137b0:	mov    dl,0x9b
  4137b2:	inc    edx
  4137b3:	imul   ebx,DWORD PTR [ebx],0x8
  4137b6:	out    dx,al
  4137b7:	xor    BYTE PTR [ecx],dl
  4137b9:	add    dh,0xda
  4137bc:	in     al,0xf
  4137be:	aaa    
  4137bf:	mov    ebx,0xdb1ab2d9
  4137c4:	sbb    eax,0xafbcdd49
  4137c9:	nop
  4137ca:	mov    ds:0xe982388c,eax
  4137cf:	fcomp  QWORD PTR [ebx+0x2659ac50]
  4137d5:	add    DWORD PTR [ebx+edx*4+0x11],ebx
  4137d9:	dec    eax
  4137da:	mov    edx,0xdf54dd1b
  4137df:	fld    DWORD PTR [edi-0x61]
  4137e2:	push   ss
  4137e3:	ja     0x4137a4
  4137e5:	xor    ah,bl
  4137e7:	push   ecx
  4137e8:	cmp    dl,BYTE PTR [esi-0x41]
  4137eb:	(bad)  
  4137ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137ee:	or     eax,DWORD PTR [esi+0x18]
  4137f1:	scas   eax,DWORD PTR es:[edi]
  4137f2:	jbe    0x41377e
  4137f4:	adc    al,0xc8
  4137f6:	out    0x22,al
  4137f8:	mov    eax,0xd620313d
  4137fd:	dec    edx
  4137fe:	push   0x73
  413800:	sub    eax,0x9c39b08d
  413805:	out    dx,al
  413806:	addr16 (bad) 
  413808:	arpl   WORD PTR [ecx-0x9],bx
  41380b:	xor    BYTE PTR [ecx],dh
  41380d:	pop    esp
  41380e:	lahf   
  41380f:	and    eax,0xa891c0b
  413814:	lods   eax,DWORD PTR ds:[esi]
  413815:	inc    esi
  413816:	add    dh,BYTE PTR [ecx+0xb]
  413819:	mov    eax,0x2b745875
  41381e:	dec    ecx
  41381f:	mov    esi,0xe6d9a2fb
  413824:	lods   al,BYTE PTR ds:[esi]
  413825:	retf   0x9b4b
  413828:	push   ds
  413829:	or     al,0x3c
  41382b:	mov    al,ds:0x51883c08
  413830:	xchg   BYTE PTR [esi+0x65],cl
  413833:	pop    ebx
  413834:	bound  edx,QWORD PTR [esi+0x4f]
  413837:	xlat   BYTE PTR ds:[ebx]
  413838:	mov    ecx,0xcbe4ff36
  41383d:	mul    al
  41383f:	sbb    DWORD PTR [edx-0x4e2d3606],ebx
  413845:	bswap  esi
  413847:	push   esi
  413848:	push   cs
  413849:	xchg   edi,eax
  41384a:	pop    edi
  41384b:	inc    ebx
  41384c:	je     0x4137ec
  41384e:	and    edi,DWORD PTR [esi-0xf]
  413851:	sbb    DWORD PTR [esi-0x222aef2e],ebx
  413857:	push   ebx
  413858:	into   
  413859:	pop    ss
  41385a:	sbb    dl,dh
  41385c:	or     BYTE PTR [ebx+0x4a6e36cb],ch
  413862:	arpl   WORD PTR [ebp-0x5e],bp
  413865:	push   esi
  413866:	xchg   ebp,eax
  413867:	data16 jbe 0x413850
  41386a:	jmp    0x413864
  41386c:	iret   
  41386d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41386e:	bound  eax,QWORD PTR [edi-0xd]
  413871:	sub    DWORD PTR [esi+0xd],0x3d8b6a91
  413878:	imul   BYTE PTR [ecx+0x63c2f488]
  41387e:	pop    ss
  41387f:	jmp    0x41381d
  413881:	shr    ebp,cl
  413883:	pop    eax
  413884:	out    0xa1,eax
  413886:	jns    0x41389f
  413888:	mov    ebx,0x8c328def
  41388d:	gs mov ch,0x54
  413890:	cli    
  413891:	leave  
  413892:	and    eax,0xe0b77775
  413897:	xchg   edi,eax
  413898:	and    DWORD PTR [esi-0x2d],0xf087a952
  41389f:	icebp  
  4138a0:	call   0x6476:0x2b0e703c
  4138a7:	inc    esi
  4138a8:	xchg   ebp,eax
  4138a9:	ficom  WORD PTR [ebx+0x65]
  4138ac:	jge    0x41392d
  4138ae:	add    edx,ebx
  4138b0:	ins    DWORD PTR es:[edi],dx
  4138b1:	int    0x82
  4138b3:	jle    0x41389d
  4138b5:	jae    0x4138b0
  4138b7:	loope  0x4138b7
  4138b9:	push   ds
  4138ba:	js     0x4138b9
  4138bc:	fwait
  4138bd:	icebp  
  4138be:	inc    ecx
  4138bf:	add    BYTE PTR [esi-0x29af6f09],cl
  4138c5:	adc    ebx,DWORD PTR [eax+0x29]
  4138c8:	and    eax,0xdee021bb
  4138cd:	adc    DWORD PTR [edi-0x5f],esp
  4138d0:	cmp    DWORD PTR [ecx],ebx
  4138d2:	mov    cl,0xcb
  4138d4:	pop    ebp
  4138d5:	stos   BYTE PTR es:[edi],al
  4138d6:	mov    fs,WORD PTR [ebp+0x7c03c0b9]
  4138dc:	xchg   ebp,eax
  4138dd:	xchg   ecx,eax
  4138de:	jg     0x4138dc
  4138e0:	in     al,dx
  4138e1:	les    ebp,FWORD PTR [esi+0x4a440ad2]
  4138e7:	outs   dx,BYTE PTR ds:[esi]
  4138e8:	mov    cl,0x3c
  4138ea:	aam    0x5a
  4138ec:	stc    
  4138ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138ee:	sub    ecx,DWORD PTR [esi+eax*4+0x2b7e4592]
  4138f5:	and    ecx,ebp
  4138f7:	mov    bh,0x6a
  4138f9:	sahf   
  4138fa:	test   cl,dl
  4138fc:	adc    BYTE PTR [eax],ah
  4138fe:	push   esi
  4138ff:	in     eax,dx
  413900:	jmp    0xfe0c:0x8e4ac0a
  413907:	or     eax,0x5159ad1a
  41390c:	adc    DWORD PTR [ebx+ebp*2+0x2b],esi
  413910:	(bad)  
  413911:	in     eax,dx
  413912:	in     eax,0x8e
  413914:	or     al,0x69
  413916:	mov    ds:0x14ee8235,al
  41391b:	xlat   BYTE PTR ds:[ebx]
  41391c:	push   eax
  41391d:	mov    ebp,0xae740cc
  413922:	iret   
  413923:	pop    ebx
  413924:	xor    al,0x5f
  413926:	jns    0x4138bf
  413928:	jae    0x4138f9
  41392a:	xchg   esi,eax
  41392b:	mul    ebp
  41392d:	das    
  41392e:	aas    
  41392f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413930:	stos   DWORD PTR es:[edi],eax
  413931:	dec    esp
  413932:	xchg   BYTE PTR [edi+ecx*1-0x4a1a7cde],bh
  413939:	ins    BYTE PTR es:[edi],dx
  41393a:	test   DWORD PTR [eax-0x76],0xf1970fa5
  413941:	sbb    al,0xf
  413943:	add    ebx,DWORD PTR [edx-0x7c64216b]
  413949:	loope  0x4139b9
  41394b:	cmp    DWORD PTR [edx+0x2],0xf
  41394f:	sbb    ebx,ecx
  413951:	outs   dx,BYTE PTR ds:[esi]
  413952:	xchg   DWORD PTR [eax-0x2b],ecx
  413955:	dec    edi
  413956:	bound  edx,QWORD PTR [edi+0x5e31602b]
  41395c:	stos   DWORD PTR es:[edi],eax
  41395d:	imul   ebp,DWORD PTR [esi+0x5a],0xffffffa9
  413961:	lock (bad) 
  413963:	imul   BYTE PTR [edx]
  413965:	mov    ecx,0x4fe7a7b7
  41396a:	xchg   ebp,eax
  41396b:	cmp    eax,0xcf6a8b74
  413970:	cld    
  413971:	fbld   TBYTE PTR ds:0xe7f2e42
  413977:	retf   0x893d
  41397a:	ss scas al,BYTE PTR es:[edi]
  41397c:	push   edi
  41397d:	add    DWORD PTR [ebx-0x394ac22f],ecx
  413983:	add    eax,0xd4f22884
  413988:	adc    al,0x70
  41398a:	mov    edx,0xecd10139
  41398f:	out    0x6a,al
  413991:	add    eax,DWORD PTR [ebx+0xd]
  413994:	mov    ebx,0x9f824925
  413999:	shr    DWORD PTR [ebp-0x1bf308f],1
  41399f:	jp     0x4139e1
  4139a1:	sbb    eax,0x796a8931
  4139a6:	mov    edx,DWORD PTR [ebx+0x15]
  4139a9:	test   eax,0x4004390b
  4139ae:	rcr    BYTE PTR [eax+edx*1+0x28bade05],cl
  4139b5:	jo     0x41393e
  4139b7:	jae    0x413962
  4139b9:	mov    edx,0x42c5617f
  4139be:	in     al,dx
  4139bf:	and    BYTE PTR [ebp-0x1420d974],dl
  4139c5:	push   ebp
  4139c6:	ins    DWORD PTR es:[edi],dx
  4139c7:	or     ch,BYTE PTR [eax]
  4139c9:	js     0x4139a0
  4139cb:	sahf   
  4139cc:	es cdq 
  4139ce:	es jb  0x413a43
  4139d1:	call   0xb0ed:0x862511a5
  4139d8:	imul   ecx,ebp,0x47ebbbbf
  4139de:	pop    ss
  4139df:	add    esp,esi
  4139e1:	lea    esp,[esi+edi*4-0x334b8e6b]
  4139e8:	jbe    0x413a12
  4139ea:	xchg   ebx,eax
  4139eb:	mov    dh,0x31
  4139ed:	xchg   esi,eax
  4139ee:	adc    BYTE PTR [ebp-0x39e41d3],dh
  4139f4:	jae    0x4139f2
  4139f6:	sahf   
  4139f7:	frstor [edx+0x305d4fc9]
  4139fd:	fistp  DWORD PTR [esi-0x2b]
  413a00:	pop    ds
  413a01:	mov    WORD PTR [edx+0x25a824ba],ds
  413a07:	inc    ecx
  413a08:	lock out dx,al
  413a0a:	icebp  
  413a0b:	ja     0x4139bd
  413a0d:	jnp    0x413a61
  413a0f:	adc    BYTE PTR [esi-0x4bf2cf15],al
  413a15:	test   eax,0xe3015871
  413a1a:	inc    esp
  413a1b:	pop    esi
  413a1c:	dec    edx
  413a1d:	inc    edx
  413a1e:	mov    ch,0xdc
  413a20:	xchg   ecx,eax
  413a21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a22:	xor    edx,edx
  413a24:	sbb    al,0xfc
  413a26:	mov    ?,WORD PTR [edi-0x34]
  413a29:	imul   edi,DWORD PTR [edi+ecx*1-0x4e19500b],0x7a
  413a31:	loope  0x4139e7
  413a33:	or     esi,DWORD PTR [ecx+0x5b17602b]
  413a39:	not    DWORD PTR [ebx+0x3b96ed6]
  413a3f:	pusha  
  413a40:	sbb    dl,BYTE PTR [eax+0x53]
  413a43:	sub    eax,0x3dd278e7
  413a48:	xchg   ebx,eax
  413a49:	shl    DWORD PTR [ebx+0x591f1eb1],1
  413a4f:	call   0x6a7aa806
  413a54:	add    esp,DWORD PTR [edx-0x4d]
  413a57:	pop    si
  413a59:	into   
  413a5a:	(bad)  
  413a5b:	mov    ebx,edx
  413a5d:	mov    ds:0x9b7d932b,al
  413a62:	mov    ch,0x41
  413a64:	dec    esp
  413a65:	pop    ecx
  413a66:	fcmovbe st,st(0)
  413a68:	scas   al,BYTE PTR es:[edi]
  413a69:	test   BYTE PTR [edx+0x3c],0x28
  413a6d:	in     al,dx
  413a6e:	pop    edx
  413a6f:	xchg   edi,eax
  413a70:	std    
  413a71:	cmc    
  413a72:	jmp    0x283afe6a
  413a77:	scas   eax,DWORD PTR es:[edi]
  413a78:	sbb    al,BYTE PTR [eax]
  413a7a:	outs   dx,BYTE PTR ds:[esi]
  413a7b:	xor    ecx,ecx
  413a7d:	jg     0x413ab3
  413a7f:	mov    eax,0x29a2be1e
  413a84:	cld    
  413a85:	mov    edi,esi
  413a87:	stos   DWORD PTR es:[edi],eax
  413a88:	daa    
  413a89:	test   eax,0xf1e7f061
  413a8e:	fs sub al,0x24
  413a91:	xchg   DWORD PTR [eax],esp
  413a93:	scas   al,BYTE PTR es:[edi]
  413a94:	fnstcw WORD PTR [esi+ecx*8]
  413a97:	std    
  413a98:	push   es
  413a99:	in     eax,dx
  413a9a:	pop    es
  413a9b:	cwde   
  413a9c:	cmp    al,0x73
  413a9e:	enter  0xc279,0x31
  413aa2:	or     eax,DWORD PTR [esi+0x7f8f7ba7]
  413aa8:	sub    eax,0x758f50fa
  413aad:	nop
  413aae:	mov    ah,0xba
  413ab0:	inc    ebp
  413ab1:	and    al,0xe1
  413ab3:	cdq    
  413ab4:	fstp   DWORD PTR ds:0xc427267f
  413aba:	call   0x48d7573f
  413abf:	call   0xda0b623e
  413ac4:	mov    esi,0x3571c671
  413ac9:	add    al,al
  413acb:	pushf  
  413acc:	sub    BYTE PTR [ebx+eax*8],ah
  413acf:	ja     0x413b3e
  413ad1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ad2:	out    0x13,al
  413ad4:	mov    ebp,DWORD PTR [edi+edi*8-0x26a34bad]
  413adb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413adc:	sub    BYTE PTR [ecx-0x2],al
  413adf:	std    
  413ae0:	pop    es
  413ae1:	in     eax,0xc3
  413ae3:	rcr    DWORD PTR [eax+0xa],0xb4
  413ae7:	or     eax,0xdb1e775e
  413aec:	jmp    0x413a7e
  413aee:	xchg   ebx,eax
  413aef:	mov    eax,0x89a1681e
  413af4:	mov    esp,0x85c251e
  413af9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413afa:	jmp    0x4f94:0x4b15ce32
  413b01:	mov    cl,0xb6
  413b03:	mov    al,bh
  413b05:	pop    ebp
  413b06:	push   edi
  413b07:	scas   al,BYTE PTR es:[edi]
  413b08:	xor    DWORD PTR [eax-0x43916beb],0xffffffc4
  413b0f:	ror    bh,0x8
  413b12:	test   BYTE PTR [edi-0x37d13f9b],bh
  413b18:	into   
  413b19:	jns    0x413b40
  413b1b:	arpl   WORD PTR [edi-0x5b5e313d],si
  413b21:	sub    ch,BYTE PTR [ebp-0x5d]
  413b24:	sub    ch,BYTE PTR [edi]
  413b26:	xchg   edi,eax
  413b27:	sbb    BYTE PTR [ebx-0x5b8f4a1b],0x14
  413b2e:	mov    edi,0xfb0a0834
  413b33:	dec    ebx
  413b34:	call   0xf797:0xd61a9651
  413b3b:	sbb    edx,esp
  413b3d:	ja     0x413ad0
  413b3f:	es loope 0x413ba3
  413b42:	fs jge 0x413b4f
  413b45:	xchg   DWORD PTR [ecx+0x78a6c0a4],edx
  413b4b:	das    
  413b4c:	sub    edi,edx
  413b4e:	ins    DWORD PTR es:[edi],dx
  413b4f:	mov    cl,BYTE PTR fs:[edx+0x67]
  413b53:	mov    ecx,0x5c9bb86e
  413b58:	inc    DWORD PTR [eax+0x17]
  413b5b:	cli    
  413b5c:	cli    
  413b5d:	xchg   DWORD PTR [edx-0x3e4b5535],ecx
  413b63:	in     al,0x11
  413b65:	inc    ebp
  413b66:	push   edx
  413b67:	repz cmc 
  413b69:	mov    cl,0x43
  413b6b:	in     eax,dx
  413b6c:	pop    edi
  413b6d:	lds    edi,FWORD PTR [eax]
  413b6f:	sahf   
  413b70:	jp     0x413b2d
  413b72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b73:	sub    dh,ah
  413b75:	add    ch,al
  413b77:	jecxz  0x413b1b
  413b79:	in     al,0xab
  413b7b:	pop    ebp
  413b7c:	mov    ebp,0x32481178
  413b81:	sbb    eax,0xf7ff26b2
  413b86:	cdq    
  413b87:	pop    eax
  413b88:	jl     0x413bd1
  413b8a:	jbe    0x413b80
  413b8c:	fwait
  413b8d:	popf   
  413b8e:	in     al,dx
  413b8f:	in     eax,0xb2
  413b91:	and    BYTE PTR [ebx-0x78463917],ch
  413b97:	mov    BYTE PTR [ebp-0x5b],dl
  413b9a:	retf   0x5a1b
  413b9d:	jmp    0xc5e75b9f
  413ba2:	push   esi
  413ba3:	ffreep st(2)
  413ba5:	inc    ebp
  413ba6:	in     al,dx
  413ba7:	clc    
  413ba8:	adc    BYTE PTR [edx],ah
  413baa:	int    0xf
  413bac:	push   0x85f75190
  413bb1:	in     al,dx
  413bb2:	out    0x33,al
  413bb4:	cmp    cl,BYTE PTR [edx+0x181ac685]
  413bba:	xor    BYTE PTR ds:0x6bf39e53,ah
  413bc0:	cmp    BYTE PTR [edi+0x57],bh
  413bc3:	push   0xfffffffb
  413bc5:	mov    bh,0x6e
  413bc7:	pop    ecx
  413bc8:	jns    0x413bb5
  413bca:	push   ebp
  413bcb:	les    ebp,FWORD PTR [edx-0x30608a90]
  413bd1:	imul   esp,DWORD PTR [edx+0x39],0xc4f0fe6
  413bd8:	mov    WORD PTR [ebx],ss
  413bda:	or     BYTE PTR [edx+eiz*1],ch
  413bdd:	mov    edi,ds
  413bdf:	ins    WORD PTR es:[edi],dx
  413be1:	or     edx,edx
  413be3:	and    cl,ah
  413be5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413be6:	and    BYTE PTR [edi],dh
  413be8:	rcl    ebp,0x43
  413beb:	cmp    ch,ah
  413bed:	inc    ebp
  413bee:	call   0xe8317304
  413bf3:	sub    BYTE PTR [ebx+0x4d],ah
  413bf6:	pop    edx
  413bf7:	sub    BYTE PTR [edi+esi*1-0x37894934],cl
  413bfe:	inc    DWORD PTR ds:0x709b1b16
  413c04:	and    eax,0xc527f533
  413c09:	shl    dl,cl
  413c0b:	sub    BYTE PTR [edi+edx*2],dl
  413c0e:	retf   
  413c0f:	sbb    ch,BYTE PTR [esi-0x54]
  413c12:	call   DWORD PTR [esi+0x35]
  413c15:	fnsave [ebx+0x512123c]
  413c1b:	mov    WORD PTR [edx+0x27],cs
  413c1e:	xor    DWORD PTR [edx+0x683fd2be],esp
  413c24:	pop    ecx
  413c25:	jle    0x413c8a
  413c27:	mov    bh,0x6a
  413c29:	loopne 0x413c98
  413c2b:	(bad)  
  413c2d:	pop    es
  413c2e:	jno    0x413c36
  413c30:	lahf   
  413c31:	jl     0x413c2a
  413c33:	arpl   cx,bp
  413c35:	mov    bh,0xf4
  413c37:	loope  0x413c5d
  413c39:	pop    eax
  413c3a:	in     al,dx
  413c3b:	in     al,0xc7
  413c3d:	mov    bh,al
  413c3f:	arpl   si,bp
  413c41:	push   eax
  413c42:	pop    ds
  413c43:	jmp    esi
  413c45:	pop    ds
  413c46:	gs aaa 
  413c48:	mov    bl,BYTE PTR ss:[edi]
  413c4b:	bts    DWORD PTR [ecx*8+0x2781d26c],esp
  413c53:	pop    ds
  413c54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c55:	lods   eax,DWORD PTR ds:[esi]
  413c56:	ja     0x413c65
  413c58:	and    DWORD PTR [edi],esp
  413c5a:	idiv   BYTE PTR [edx+0x4a]
  413c5d:	shl    DWORD PTR [ebp+ecx*4+0x3d0bb294],cl
  413c64:	mov    ecx,0x9632dc13
  413c69:	mov    BYTE PTR [eax],ah
  413c6b:	mov    eax,0x649de6f8
  413c71:	inc    ebx
  413c72:	jg     0x413c62
  413c74:	iret   
  413c75:	std    
  413c76:	sub    bl,BYTE PTR [ecx+0x439ca120]
  413c7c:	js     0x413c1c
  413c7e:	(bad)  
  413c7f:	adc    bh,BYTE PTR [eax]
  413c81:	(bad)  
  413c82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c83:	retf   
  413c84:	js     0x413c66
  413c86:	(bad)  
  413c88:	dec    esi
  413c89:	iret   
  413c8a:	rcl    BYTE PTR [edx*4-0x75cb01ce],1
  413c91:	loope  0x413cd0
  413c93:	(bad)  
  413c94:	lods   eax,DWORD PTR ds:[esi]
  413c95:	loop   0x413c54
  413c97:	retf   
  413c98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c99:	sar    edi,cl
  413c9b:	icebp  
  413c9c:	mov    bh,0x73
  413c9e:	sbb    BYTE PTR [ecx+0x48],cl
  413ca1:	ret    0xd848
  413ca4:	fdiv   DWORD PTR [edx+0x1fff13dd]
  413caa:	stos   DWORD PTR es:[edi],eax
  413cab:	retf   
  413cac:	stc    
  413cad:	xor    DWORD PTR [ecx+0x3e],ebx
  413cb0:	in     al,dx
  413cb1:	pop    ebx
  413cb2:	shl    BYTE PTR [esi-0x4f17258f],0x88
  413cb9:	dec    esi
  413cba:	xchg   ebx,eax
  413cbb:	add    eax,DWORD PTR [esp+ecx*4+0x469b0919]
  413cc2:	mov    edx,0x945cb259
  413cc7:	sti    
  413cc8:	call   0xe25b0d76
  413ccd:	loopne 0x413d3e
  413ccf:	or     ch,dl
  413cd1:	xor    DWORD PTR [edx-0x7ce1c5c2],edx
  413cd7:	fistp  QWORD PTR [eax+edi*4]
  413cda:	and    dl,BYTE PTR ds:0x4aa18005
  413ce0:	xchg   ebp,eax
  413ce1:	adc    ecx,DWORD PTR [ebx-0x49]
  413ce4:	or     al,bh
  413ce6:	pushf  
  413ce7:	enter  0xe8cb,0xdc
  413ceb:	mul    DWORD PTR [eax-0x17]
  413cee:	mov    edi,0x7debfd60
  413cf3:	(bad)  [ebx+eax*1-0x1f]
  413cf7:	cmp    al,BYTE PTR [esi-0x1c03aa5a]
  413cfd:	xchg   ecx,ecx
  413cff:	(bad)  
  413d00:	in     eax,dx
  413d01:	loop   0x413cb7
  413d03:	push   0xa69c0c6a
  413d08:	dec    esp
  413d09:	cdq    
  413d0a:	jg     0x413cfa
  413d0c:	or     al,0xce
  413d0e:	out    dx,eax
  413d0f:	ja     0x413d18
  413d11:	and    eax,DWORD PTR [edi-0x79]
  413d14:	push   edi
  413d15:	cld    
  413d16:	pushf  
  413d17:	(bad)  
  413d18:	xor    dh,BYTE PTR [edi]
  413d1a:	lahf   
  413d1b:	push   ebx
  413d1c:	dec    esi
  413d1d:	in     al,dx
  413d1e:	xchg   esp,eax
  413d1f:	mov    cl,0x8
  413d21:	out    0xb2,eax
  413d23:	dec    ebp
  413d24:	jge    0x413d0a
  413d26:	stc    
  413d27:	mov    ch,0x1c
  413d29:	retf   0x53f6
  413d2c:	es xchg edi,eax
  413d2e:	inc    eax
  413d2f:	dec    ecx
  413d30:	jp     0x413d4d
  413d32:	push   ebx
  413d33:	cld    
  413d34:	jb     0x413dab
  413d36:	sbb    al,ah
  413d38:	arpl   bx,sp
  413d3a:	ret    
  413d3b:	sti    
  413d3c:	out    0xda,al
  413d3e:	or     cl,BYTE PTR [eax]
  413d40:	adc    eax,ebx
  413d42:	push   esp
  413d43:	adc    BYTE PTR [eax+0x6b7b258a],0x84
  413d4a:	jle    0x413d87
  413d4c:	frstor [ecx+ebx*4]
  413d4f:	adc    eax,0xee53318
  413d54:	int    0x3b
  413d56:	mov    edi,DWORD PTR [edi]
  413d58:	xchg   esi,eax
  413d59:	aad    0x16
  413d5b:	push   ss
  413d5c:	add    DWORD PTR [ecx+0x2e0de0bf],edi
  413d62:	mov    ch,0x47
  413d64:	fstp   st(3)
  413d66:	sub    al,0x8a
  413d68:	xchg   BYTE PTR [edx-0x6d486d71],bl
  413d6e:	imul   esp,DWORD PTR [ecx],0xffffffc2
  413d71:	or     DWORD PTR [esi+0x71],eax
  413d74:	stc    
  413d75:	mov    bl,0xad
  413d77:	retf   0xfcab
  413d7a:	cmp    ah,BYTE PTR [ebp+0x6a9cd92]
  413d80:	pop    ebx
  413d81:	call   0x4d94:0xab0d99ff
  413d88:	dec    ecx
  413d89:	retf   
  413d8a:	imul   esp,esi,0xffffff91
  413d8d:	sbb    eax,0x6280eb1b
  413d92:	jno    0x413dc5
  413d94:	mov    bl,0xcb
  413d96:	sbb    bl,BYTE PTR [eax-0x6f70dfc0]
  413d9c:	dec    edx
  413d9d:	ins    DWORD PTR es:[edi],dx
  413d9e:	stos   BYTE PTR es:[edi],al
  413d9f:	lea    ebp,[edi-0x38]
  413da2:	xor    dl,BYTE PTR [eax]
  413da4:	and    bl,BYTE PTR [esi]
  413da6:	pop    ebp
  413da7:	ret    
  413da8:	arpl   WORD PTR [eax+edi*1],ax
  413dab:	cwde   
  413dac:	outs   dx,BYTE PTR ds:[esi]
  413dad:	fist   WORD PTR [edx]
  413daf:	rcr    DWORD PTR [ebx+0x3efcb25],0x24
  413db6:	push   eax
  413db7:	cmp    DWORD PTR [edx+0x4b],ecx
  413dba:	call   0xac7b:0xd4eedab9
  413dc1:	dec    ebp
  413dc2:	add    BYTE PTR [edx+0x36],bl
  413dc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413dc6:	and    DWORD PTR [edx],ecx
  413dc8:	dec    esp
  413dc9:	popf   
  413dca:	sub    eax,0xb0029b6b
  413dcf:	mov    edi,0x343943a5
  413dd4:	mov    dh,0x25
  413dd6:	jmp    0x413dcb
  413dd8:	pop    ebx
  413dd9:	dec    esi
  413dda:	loop   0x413e51
  413ddc:	loope  0x413dd0
  413dde:	dec    eax
  413ddf:	add    BYTE PTR ds:0x2279d2b8,bh
  413de5:	repz dec ebp
  413de7:	sbb    BYTE PTR [esi],bh
  413de9:	sub    DWORD PTR [ebx-0x6a],0xef66ccae
  413df0:	xchg   esp,eax
  413df1:	add    ah,BYTE PTR [ebp-0x5d]
  413df4:	inc    edi
  413df5:	inc    eax
  413df6:	(bad)  
  413df7:	std    
  413df8:	or     al,0xcd
  413dfa:	mov    cl,BYTE PTR [ecx-0x4f15b59]
  413e00:	pop    ecx
  413e01:	ss leave 
  413e03:	out    dx,eax
  413e04:	rol    BYTE PTR [eax+0x16],1
  413e07:	lds    ebx,FWORD PTR [eax+0x3f]
  413e0a:	scas   eax,DWORD PTR es:[edi]
  413e0b:	fisubr WORD PTR [ecx-0x2d3d85a6]
  413e11:	and    al,0xf5
  413e13:	nop
  413e14:	je     0x413dc8
  413e16:	push   ebp
  413e17:	and    DWORD PTR [esi-0x5756626b],esi
  413e1d:	daa    
  413e1e:	mov    ebp,0x8d540da9
  413e23:	sub    DWORD PTR [edx-0x4f],0xffffff8a
  413e27:	dec    DWORD PTR [eax-0x292ca3d3]
  413e2d:	lar    esi,WORD PTR [ebp-0x3628f0e3]
  413e34:	test   al,0x5d
  413e36:	push   ebx
  413e37:	call   0x83ca86da
  413e3c:	nop    DWORD PTR [esi]
  413e3f:	or     eax,0x4dbef0d
  413e44:	dec    edi
  413e45:	mov    dh,0x3d
  413e47:	sub    esi,DWORD PTR [edi+0x5d]
  413e4a:	ret    0xc2f1
  413e4d:	mov    ds:0xede2eb0d,al
  413e52:	in     al,dx
  413e53:	dec    esi
  413e54:	push   esi
  413e55:	xchg   DWORD PTR [ebp+0x19],ebx
  413e58:	repnz mov ?,esp
  413e5b:	inc    ebp
  413e5c:	jp     0x413eb5
  413e5e:	sub    BYTE PTR [esp+ebx*2],dl
  413e61:	sub    BYTE PTR [edi+0x27],bh
  413e64:	xor    dh,dh
  413e66:	xor    al,0x2b
  413e68:	cmovge ecx,DWORD PTR [ecx-0x104df0d]
  413e6f:	add    al,0x4f
  413e71:	retf   0xce76
  413e74:	sbb    ecx,DWORD PTR [ecx-0x35]
  413e77:	data16 das 
  413e79:	loope  0x413e11
  413e7b:	out    dx,al
  413e7c:	jge    0x413e46
  413e7e:	dec    esp
  413e7f:	adc    eax,0x3d246fa2
  413e84:	mov    edi,0x8ce117f
  413e89:	cmp    al,0x2c
  413e8b:	mov    eax,0xde52556
  413e90:	daa    
  413e91:	cli    
  413e92:	mov    ah,0x43
  413e94:	pop    ecx
  413e95:	hlt    
  413e96:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  413e98:	mov    edx,DWORD PTR [ebp-0x7d]
  413e9b:	imul   edx,DWORD PTR [ebx-0x2],0xda69ad15
  413ea2:	das    
  413ea3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ea4:	pop    esi
  413ea5:	pop    edi
  413ea6:	pop    ds
  413ea7:	sub    BYTE PTR [esi-0x29],bl
  413eaa:	pop    ecx
  413eab:	xchg   esp,eax
  413eac:	mov    DWORD PTR [esi+0x69],eax
  413eaf:	fnstenv [ecx+esi*8]
  413eb2:	hlt    
  413eb3:	sahf   
  413eb4:	xchg   DWORD PTR [esi],ebx
  413eb6:	pop    es
  413eb7:	fwait
  413eb8:	add    BYTE PTR [ebp-0x51],dh
  413ebb:	inc    esi
  413ebc:	xlat   BYTE PTR ds:[ebx]
  413ebd:	xor    al,0xe0
  413ebf:	aaa    
  413ec0:	call   0xbc8b0c23
  413ec5:	mov    bl,0xa0
  413ec7:	or     al,BYTE PTR [edi+0x152f3079]
  413ecd:	jb     0x413f4c
  413ecf:	xchg   edx,eax
  413ed0:	add    al,0x6
  413ed2:	pop    es
  413ed3:	cld    
  413ed4:	loopne 0x413ea7
  413ed6:	jle    0x413f12
  413ed8:	dec    edi
  413ed9:	sar    BYTE PTR [ebx+0x3a2bb7e9],0x6b
  413ee0:	jge    0x413e93
  413ee2:	clc    
  413ee3:	add    DWORD PTR [edi],ebp
  413ee5:	neg    BYTE PTR [ebx+0x5ae6452f]
  413eeb:	arpl   WORD PTR cs:[ecx-0x7edfb7c1],bx
  413ef2:	xor    DWORD PTR [eax-0x20b125b2],ecx
  413ef8:	adc    dh,BYTE PTR [ebx+0x37]
  413efb:	xchg   ecx,eax
  413efc:	inc    esp
  413efd:	pop    ebx
  413efe:	push   esp
  413eff:	test   eax,0x7e3c3623
  413f04:	ja     0x413eab
  413f06:	into   
  413f07:	les    eax,FWORD PTR [ebx+eax*4+0x3986074e]
  413f0e:	mov    al,0xce
  413f10:	enter  0xd435,0x73
  413f14:	lods   eax,DWORD PTR ds:[esi]
  413f15:	(bad)  
  413f17:	cld    
  413f18:	ds (bad) 
  413f1a:	cli    
  413f1b:	icebp  
  413f1c:	cmp    al,0xec
  413f1e:	test   DWORD PTR [edi-0x2c],esp
  413f21:	dec    ebx
  413f22:	push   ds
  413f23:	xor    ch,BYTE PTR [ecx+0x6f]
  413f26:	jo     0x413ef3
  413f28:	out    dx,al
  413f29:	push   ss
  413f2a:	or     edi,DWORD PTR [edi+eax*2+0x7e]
  413f2e:	sub    ebx,DWORD PTR [edi+0x78d979f5]
  413f34:	rol    DWORD PTR [ebx+0x45],cl
  413f37:	push   es
  413f38:	pop    di
  413f3a:	push   es
  413f3b:	pushw  ss
  413f3d:	mov    dh,0xe8
  413f3f:	es pop ebx
  413f41:	sub    BYTE PTR ds:0x9bde3899,0x82
  413f48:	cmp    eax,0xe0d7f135
  413f4d:	dec    edx
  413f4e:	cmp    ah,dl
  413f50:	add    BYTE PTR [esi-0x7e4383b3],cl
  413f56:	mov    edx,0x91075110
  413f5b:	add    bl,BYTE PTR [ebp-0x34]
  413f5e:	call   0x3390:0x3f8c043e
  413f65:	xor    al,0x5c
  413f67:	add    edx,DWORD PTR [esp+esi*8]
  413f6a:	mov    al,0x18
  413f6c:	adc    eax,eax
  413f6e:	pop    ecx
  413f6f:	retf   0xe48c
  413f72:	or     esp,ebx
  413f74:	fs jb  0x413fc1
  413f77:	mov    es,WORD PTR [ebx+ecx*2-0x1e]
  413f7b:	add    al,0x9e
  413f7d:	adc    eax,DWORD PTR [edi+0x39378f8f]
  413f83:	xor    DWORD PTR [si+0x70db],eax
  413f88:	adc    al,0x8b
  413f8a:	add    ah,BYTE PTR [ecx+0x68]
  413f8d:	jmp    0x413fd9
  413f8f:	pop    eax
  413f90:	mov    DWORD PTR [ebx-0x2c],esi
  413f93:	pop    es
  413f94:	jnp    0x413f32
  413f96:	mov    bh,0x11
  413f98:	jmp    0x413f74
  413f9a:	jl     0x413f48
  413f9c:	in     eax,dx
  413f9d:	call   0x3065:0x9e167c
  413fa4:	mov    ebp,0x46eb6cb
  413fa9:	sar    DWORD PTR [ebp+0x76],cl
  413fac:	xchg   esi,eax
  413fad:	js     0x413f3c
  413faf:	pusha  
  413fb0:	rcl    DWORD PTR [edi+0x5ac6fe39],1
  413fb6:	pushf  
  413fb7:	adc    ecx,esp
  413fb9:	xor    BYTE PTR [ebx+0x153fb4c1],dl
  413fbf:	push   ecx
  413fc0:	fwait
  413fc1:	xchg   esi,eax
  413fc2:	es fs push edi
  413fc5:	pop    eax
  413fc6:	sub    cl,BYTE PTR ds:0x3e5df887
  413fcc:	push   ebp
  413fcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413fce:	adc    eax,0x408f0dbe
  413fd3:	and    ah,BYTE PTR [edx+0x6d487b16]
  413fd9:	xchg   edx,eax
  413fda:	fisubr DWORD PTR ds:0xb59b42b9
  413fe0:	cmp    al,0xda
  413fe2:	xchg   DWORD PTR [ebx+0x511fd00c],ebp
  413fe8:	jmp    0x413faa
  413fea:	arpl   WORD PTR [ebp-0x3e],di
  413fed:	xchg   esi,eax
  413fee:	aam    0x25
  413ff0:	adc    DWORD PTR [ecx+eax*2-0x73],esp
  413ff4:	loopne 0x414060
  413ff6:	mov    bh,0x5d
  413ff8:	test   eax,0x723bcadc
  413ffd:	cli    
  413ffe:	fdivr  QWORD PTR [ebx+0x0]
  414001:	mov    eax,ds:0xd5cb1098
  414006:	adc    DWORD PTR [eax+0x20f3740e],eax
  41400c:	pop    ss
  41400d:	mov    ecx,0xb007bae
  414012:	push   0xffffffce
  414014:	loop   0x41405a
  414016:	push   eax
  414017:	aad    0x64
  414019:	aad    0x55
  41401b:	push   ds
  41401c:	push   esp
  41401d:	xor    esi,DWORD PTR [eax-0x2c72b7ba]
  414023:	int    0x23
  414025:	stc    
  414026:	sub    BYTE PTR [eax-0x7369ce37],0xaf
  41402d:	mov    ah,0xea
  41402f:	shr    BYTE PTR [ebx],cl
  414031:	imul   esi,DWORD PTR [ebx],0xe5e222ef
  414037:	scas   eax,DWORD PTR es:[edi]
  414038:	std    
  414039:	sub    al,BYTE PTR [ebx-0xe3ef01d]
  41403f:	jbe    0x414087
  414041:	inc    ecx
  414042:	idiv   ebx
  414044:	inc    ecx
  414045:	gs ret 
  414047:	(bad)  
  414048:	es jl  0x413fe9
  41404b:	int    0xb9
  41404d:	test   DWORD PTR [edi+0x6b],eax
  414050:	daa    
  414051:	push   esp
  414052:	pushf  
  414053:	xor    DWORD PTR [eax+0x4d],0x7
  414057:	retf   
  414058:	mov    esp,0x1f7cdf85
  41405d:	inc    ecx
  41405e:	loopne 0x4140aa
  414060:	adc    ebx,DWORD PTR [ebp-0xba902e0]
  414066:	pop    esi
  414067:	cli    
  414068:	xor    DWORD PTR [edi+0x60f74850],esi
  41406e:	(bad)  
  41406f:	je     0x4140e0
  414071:	hlt    
  414072:	push   ds
  414073:	and    BYTE PTR [edx],bl
  414075:	fcmovbe st,st(0)
  414077:	mov    edi,0x8e6668b8
  41407c:	ja     0x41403f
  41407e:	call   DWORD PTR [ecx+0x24]
  414081:	int3   
  414082:	loop   0x41404d
  414084:	rol    DWORD PTR [edx],0xc3
  414087:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414088:	sbb    BYTE PTR [ebx],dl
  41408a:	mov    dh,0x44
  41408c:	dec    edi
  41408d:	mov    eax,ds:0xacec543
  414092:	stc    
  414093:	mov    al,ds:0x815dd6cc
  414098:	cdq    
  414099:	in     al,dx
  41409a:	adc    ah,dl
  41409c:	fdivrp st(1),st
  41409e:	(bad)  
  41409f:	lea    ecx,[eax]
  4140a1:	ja     0x414035
  4140a3:	ins    DWORD PTR es:[edi],dx
  4140a4:	test   al,0xac
  4140a6:	fistp  WORD PTR [ebx+0x3282b3ca]
  4140ac:	mov    dh,0x9
  4140ae:	aaa    
  4140af:	cmp    BYTE PTR [eax],0x1
  4140b2:	fiadd  WORD PTR [edi+0x6cc1a45c]
  4140b8:	adc    edx,edx
  4140ba:	xchg   BYTE PTR [eax],ah
  4140bc:	or     DWORD PTR [ebp-0x75ff919d],0xb772f364
  4140c6:	add    ebp,ebp
  4140c8:	fiadd  DWORD PTR [ecx+0x13aeb66]
  4140ce:	cli    
  4140cf:	outs   dx,DWORD PTR ds:[esi]
  4140d0:	test   al,0xc5
  4140d2:	fisub  WORD PTR [esi-0x25ce8cd6]
  4140d8:	cmp    BYTE PTR [ecx-0x3],bl
  4140db:	mov    ds,WORD PTR [ecx]
  4140dd:	call   0xbdd42797
  4140e2:	xchg   ebp,eax
  4140e3:	lds    ebx,FWORD PTR [edx+0x2a]
  4140e6:	xchg   esi,eax
  4140e7:	rcl    ebp,0xd1
  4140ea:	adc    al,0x1b
  4140ec:	xchg   ecx,eax
  4140ed:	jp     0x4140f8
  4140ef:	xor    DWORD PTR [eax+0x53],eax
  4140f2:	mov    ds:0x53dde428,eax
  4140f7:	sbb    ebx,esp
  4140f9:	inc    ecx
  4140fa:	and    al,0xb8
  4140fc:	ret    
  4140fd:	shr    DWORD PTR [ecx+0x54],1
  414100:	inc    esp
  414101:	dec    edx
  414102:	jmp    0x41410b
  414104:	ror    cl,0x45
  414107:	xlat   BYTE PTR ds:[ebx]
  414108:	dec    esi
  414109:	test   al,0x2e
  41410b:	(bad)  
  41410c:	retf   0x7136
  41410f:	call   0x356ca66d
  414114:	sbb    edx,ebp
  414116:	sub    eax,DWORD PTR [eax+0xb]
  414119:	div    BYTE PTR [ebx+0x6d470b50]
  41411f:	add    dl,BYTE PTR [ecx-0x3f]
  414122:	gs mov edi,0xc534888
  414128:	cmp    eax,0xdde00c63
  41412d:	icebp  
  41412e:	push   edx
  41412f:	add    bh,BYTE PTR [ecx-0x3581f022]
  414135:	stos   DWORD PTR es:[edi],eax
  414136:	sbb    ah,bl
  414138:	sahf   
  414139:	push   ecx
  41413a:	mov    ebp,0xeda20c72
  41413f:	lods   al,BYTE PTR ds:[esi]
  414140:	sti    
  414141:	cmp    al,0x6f
  414143:	pop    ebx
  414144:	mov    edx,0xfff76ee4
  414149:	lods   al,BYTE PTR ds:[esi]
  41414a:	std    
  41414b:	inc    eax
  41414c:	cdq    
  41414d:	(bad)  
  414150:	sub    ecx,DWORD PTR [edi]
  414152:	inc    edi
  414153:	aaa    
  414154:	sbb    al,0x81
  414156:	mov    ebp,0x625d4633
  41415b:	add    eax,ebp
  41415d:	xchg   esi,eax
  41415e:	fmul   DWORD PTR [edi+0x60]
  414161:	loope  0x4141b9
  414163:	stos   BYTE PTR es:[edi],al
  414164:	jge    0x414122
  414166:	(bad)  
  414167:	jle    0x4141ce
  414169:	mov    ebx,DWORD PTR [eax+0x911b372]
  41416f:	adc    eax,0xabb61d42
  414174:	cmp    eax,0x13e1a090
  414179:	dec    edx
  41417a:	mov    al,0x3f
  41417c:	fldcw  WORD PTR [ebx+0x27]
  41417f:	jp     0x414108
  414181:	fwait
  414182:	xor    al,0xb1
  414184:	(bad)  
  414185:	mov    dl,0x7b
  414187:	out    dx,eax
  414188:	dec    esp
  414189:	cwde   
  41418a:	fldenv [esp+ecx*8]
  41418d:	dec    ecx
  41418e:	adc    ebp,DWORD PTR [esi+0x75]
  414191:	sub    esp,DWORD PTR [eax]
  414193:	or     bl,BYTE PTR [eax-0xd4f6f3c]
  414199:	fdiv   st(2),st
  41419b:	popf   
  41419c:	ins    BYTE PTR es:[edi],dx
  41419d:	inc    ebx
  41419e:	jns    0x41421c
  4141a0:	out    0x92,eax
  4141a2:	stos   BYTE PTR es:[edi],al
  4141a3:	repz inc ebx
  4141a5:	mov    al,ds:0xccc01344
  4141aa:	fisubr WORD PTR [edi-0x633f6f8f]
  4141b0:	sar    BYTE PTR [ebp-0x30],0x57
  4141b4:	std    
  4141b5:	fmul   QWORD PTR [ebx-0x4c]
  4141b8:	xor    BYTE PTR [edi-0x22],dh
  4141bb:	sahf   
  4141bc:	jmp    0xae23:0xfbef
  4141c2:	ror    BYTE PTR [edi+0x5ff09312],0x22
  4141c9:	repnz or bl,cl
  4141cc:	test   dl,ah
  4141ce:	jno    0x41416d
  4141d0:	aad    0x34
  4141d2:	adc    ch,BYTE PTR [eax+0x3bf5ed8b]
  4141d8:	and    DWORD PTR [eax-0x4a],edi
  4141db:	fcmovbe st,st(2)
  4141dd:	jmp    0xbfbe:0x3cdd3754
  4141e4:	pop    ebx
  4141e5:	fstp   DWORD PTR [ebp-0x2c557cd6]
  4141eb:	inc    esi
  4141ec:	pusha  
  4141ed:	aas    
  4141ee:	daa    
  4141ef:	sbb    eax,0x7ae4a4f0
  4141f4:	cmc    
  4141f5:	xchg   ebx,eax
  4141f6:	pop    ss
  4141f7:	retf   0xe840
  4141fa:	fcom   DWORD PTR [ebx+0x43]
  4141fd:	(bad)  
  4141fe:	ins    BYTE PTR es:[edi],dx
  4141ff:	stos   BYTE PTR es:[edi],al
  414200:	(bad)  
  414202:	dec    ecx
  414203:	or     BYTE PTR [ecx-0x23],bl
  414206:	cmp    eax,edi
  414208:	(bad)  
  414209:	popf   
  41420a:	cs mov dh,0x20
  41420d:	mov    bl,0xb3
  41420f:	mov    gs,WORD PTR [ebx+eax*4]
  414212:	jnp    0x414270
  414214:	xlat   BYTE PTR ss:[ebx]
  414216:	xor    DWORD PTR [esi+eax*2+0x14],ebx
  41421a:	mov    eax,0x77e178b
  41421f:	mov    eax,ds:0xb8b1bd56
  414224:	loop   0x414255
  414226:	pushf  
  414227:	dec    edi
  414228:	lods   eax,DWORD PTR ds:[esi]
  414229:	in     al,dx
  41422a:	mov    esp,0xfb15ad59
  41422f:	pop    eax
  414230:	sahf   
  414231:	enter  0x4297,0xa0
  414235:	aad    0xae
  414237:	test   eax,0xaa1b8d7b
  41423c:	popa   
  41423d:	cmp    dh,BYTE PTR [esi]
  41423f:	or     BYTE PTR [edx],al
  414241:	xchg   DWORD PTR [edx+0x51],edi
  414244:	push   ecx
  414245:	fcmovb st,st(1)
  414247:	pop    esp
  414248:	mov    ecx,0x53edb422
  41424d:	jae    0x414205
  41424f:	mov    ds:0x6b454f5f,eax
  414254:	mov    BYTE PTR [edx-0x25],al
  414257:	fist   WORD PTR [edx]
  414259:	jnp    0x414238
  41425b:	sub    dl,bh
  41425d:	loop   0x41422b
  41425f:	adc    BYTE PTR [esi],bh
  414261:	cmp    esp,DWORD PTR [edx]
  414263:	retf   
  414264:	and    cl,dl
  414266:	xchg   ebp,eax
  414267:	xchg   BYTE PTR [eax],dl
  414269:	sub    BYTE PTR [ebp-0x74],bh
  41426c:	adc    al,0xf
  41426e:	in     al,0x32
  414270:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414271:	shl    BYTE PTR [eax-0x44],1
  414274:	aam    0xeb
  414276:	pop    ecx
  414277:	fisubr DWORD PTR [esi+0x7afe80ef]
  41427d:	sub    DWORD PTR ds:0x6a3227ae,ecx
  414283:	inc    ebp
  414284:	or     al,0x2b
  414286:	xchg   ebx,eax
  414287:	out    0x5c,eax
  414289:	leave  
  41428a:	retf   
  41428b:	cmp    esp,DWORD PTR [ebx+0x41262601]
  414291:	pop    edx
  414292:	retf   
  414293:	sub    ebx,DWORD PTR ds:0xb9525fec
  414299:	shl    BYTE PTR [ebx],1
  41429b:	or     dh,BYTE PTR [ebx-0xf]
  41429e:	jns    0x4142b6
  4142a0:	shl    BYTE PTR [ebp-0x20],1
  4142a3:	enter  0x38be,0xc3
  4142a7:	dec    esi
  4142a8:	pusha  
  4142a9:	ss aam 0x78
  4142ac:	sar    BYTE PTR [ecx+0x2b],cl
  4142af:	fld    st(5)
  4142b1:	sub    esi,0xdc82823c
  4142b7:	rol    cl,1
  4142b9:	mov    WORD PTR [edi+esi*1-0xd66a3b2],fs
  4142c0:	push   cs
  4142c1:	mov    edx,0xa44ed5c0
  4142c6:	ficom  WORD PTR [ecx-0x3fd58bc]
  4142cc:	div    BYTE PTR [edx-0x2]
  4142cf:	xor    BYTE PTR ds:0xd2c2ab0a,bl
  4142d5:	mov    eax,ds:0x11d2849b
  4142da:	mov    bl,0x43
  4142dc:	cmp    BYTE PTR [ebp+0x7d21c8da],bh
  4142e2:	das    
  4142e3:	adc    cl,BYTE PTR [edi-0x3d2c08a4]
  4142e9:	loopne 0x4142fb
  4142eb:	icebp  
  4142ec:	inc    esp
  4142ed:	lea    ebx,[ecx+0x42]
  4142f0:	mov    al,ds:0xda98d011
  4142f5:	adc    eax,0xd400746b
  4142fa:	mov    esi,0x465526d
  4142ff:	sub    BYTE PTR ds:0x3dd866f4,al
  414305:	jns    0x4142d6
  414307:	push   ds
  414308:	dec    ebp
  414309:	cmp    eax,0x3af7e70a
  41430e:	jge    0x4142d4
  414310:	sbb    al,cl
  414312:	jns    0x41436d
  414314:	shr    DWORD PTR [ebx+0xe],cl
  414317:	add    ebx,DWORD PTR [ebp-0x2a]
  41431a:	hlt    
  41431b:	ds es shr BYTE PTR cs:[edi-0x379f6294],cl
  414324:	mov    BYTE PTR [edx],dh
  414326:	cmp    eax,0xe16c6bc5
  41432b:	leave  
  41432c:	ret    
  41432d:	fnsave [ecx-0x236f3dff]
  414333:	iret   
  414334:	repz cwd 
  414337:	int    0xe
  414339:	xchg   esi,eax
  41433a:	sbb    DWORD PTR [ebx+0x32],ecx
  41433d:	or     al,al
  41433f:	mov    al,ds:0xbd526b2b
  414344:	xor    BYTE PTR [eax],ah
  414346:	push   0x2e48e091
  41434b:	sub    ecx,DWORD PTR [ebp+0x54488540]
  414351:	xor    ebx,ecx
  414353:	push   ds
  414354:	jbe    0x4143cd
  414356:	mov    es,esi
  414358:	test   al,0xf1
  41435a:	and    edx,DWORD PTR [ebp+0x66]
  41435d:	retf   0x1e8d
  414360:	loope  0x4143cc
  414362:	repnz in eax,dx
  414364:	inc    ebx
  414365:	jg     0x4143b3
  414367:	xchg   ecx,eax
  414368:	std    
  414369:	pop    esp
  41436a:	in     eax,0x28
  41436c:	add    edi,DWORD PTR [esi]
  41436e:	cdq    
  41436f:	jle    0x41431b
  414371:	not    esi
  414373:	js     0x4143c6
  414375:	shl    bl,cl
  414377:	xor    ebp,DWORD PTR [ebp-0x6e]
  41437a:	(bad)  
  41437b:	and    al,0xf
  41437d:	imul   edx,DWORD PTR [esi-0x58],0x322716ab
  414384:	cli    
  414385:	dec    eax
  414386:	rol    BYTE PTR [ebx],0x81
  414389:	fsubr  st,st(0)
  41438b:	loopne 0x414335
  41438d:	and    DWORD PTR [eax],esp
  41438f:	fwait
  414390:	cmp    eax,0x1e814592
  414395:	data16 stc 
  414397:	mov    dh,0xdd
  414399:	inc    edx
  41439a:	sbb    DWORD PTR [edx-0x6f6aea47],ebp
  4143a0:	push   ss
  4143a1:	sti    
  4143a2:	jo     0x41434f
  4143a4:	pop    ss
  4143a5:	dec    esp
  4143a6:	lock xchg ebx,eax
  4143a8:	sbb    al,0x22
  4143aa:	push   es
  4143ab:	ds dec ebx
  4143ad:	and    BYTE PTR [edx-0x135496ec],cl
  4143b3:	(bad)  
  4143b4:	rol    ch,cl
  4143b6:	and    BYTE PTR [ebx],0x57
  4143b9:	out    dx,eax
  4143ba:	cs sahf 
  4143bc:	add    al,0xef
  4143be:	imul   ebp,DWORD PTR [ebp-0xd9cca7f],0x4e
  4143c5:	xlat   BYTE PTR ds:[ebx]
  4143c6:	mov    esp,0x179aeb73
  4143cb:	xchg   ecx,eax
  4143cc:	icebp  
  4143cd:	dec    ebp
  4143ce:	or     DWORD PTR cs:[esi+0x1a],esp
  4143d2:	ins    DWORD PTR es:[edi],dx
  4143d3:	sti    
  4143d4:	and    DWORD PTR [eax-0x7e6779d8],0x2a2df31b
  4143de:	repz lock sub eax,0x99ba3935
  4143e5:	mov    gs,ebp
  4143e7:	sbb    esp,esp
  4143e9:	mov    ecx,0xd58891fe
  4143ee:	inc    ebx
  4143ef:	arpl   WORD PTR [esi-0x2742e2c],sp
  4143f5:	sub    ebx,DWORD PTR [ebp-0x65847c96]
  4143fb:	sbb    eax,DWORD PTR [edx]
  4143fd:	xor    eax,0x238fb7ac
  414402:	aam    0xc4
  414404:	(bad)  
  414405:	mov    bh,0xf6
  414407:	fcmovnb st,st(0)
  414409:	push   ds
  41440a:	sub    BYTE PTR [edi+esi*8+0x563ad993],ch
  414411:	or     esi,esp
  414413:	jno    0x414415
  414415:	iret   
  414416:	stos   DWORD PTR es:[edi],eax
  414417:	test   BYTE PTR [ecx+0x40],bl
  41441a:	push   0x7a5a97be
  41441f:	test   ch,0x9a
  414422:	int3   
  414423:	fnstcw WORD PTR [eax]
  414425:	mov    cl,cl
  414427:	ins    BYTE PTR es:[edi],dx
  414428:	idiv   BYTE PTR [edi]
  41442a:	sbb    al,ah
  41442c:	scas   eax,DWORD PTR es:[edi]
  41442d:	add    BYTE PTR [edi],dh
  41442f:	mov    ebx,0x7cb0d9e5
  414434:	jle    0x4144ac
  414436:	pop    ebx
  414437:	mov    edx,0x110d7e7d
  41443c:	fdivr  DWORD PTR [ebp+ecx*2+0x1f]
  414440:	cmp    al,0x2b
  414442:	inc    esp
  414443:	sbb    eax,0x9389441d
  414448:	cmp    al,0x7e
  41444b:	xchg   edi,eax
  41444c:	or     eax,0xe62444b9
  414451:	sbb    eax,0x6a12b0fa
  414456:	cmp    BYTE PTR [esi+edi*2+0x4d9e5992],bl
  41445d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41445e:	mov    BYTE PTR [eax+0x34c56e7d],cl
  414464:	arpl   WORD PTR [ecx+0x31],ax
  414467:	jg     0x41440a
  414469:	sti    
  41446a:	cld    
  41446b:	addr16 sbb al,0xc2
  41446e:	jmp    0x4144c5
  414470:	mov    eax,0x5cb1ffd5
  414475:	ss ret 
  414477:	sahf   
  414478:	or     eax,0xe280d256
  41447d:	pmullw mm0,QWORD PTR [ebx-0x75]
  414481:	in     eax,0xc8
  414483:	mov    ds:0x66d30e02,al
  414488:	fsubr  DWORD PTR [ebp-0x43]
  41448b:	inc    esp
  41448c:	scas   eax,DWORD PTR es:[edi]
  41448d:	pop    ss
  41448e:	add    eax,DWORD PTR [edi]
  414490:	leave  
  414491:	lock out dx,eax
  414493:	xor    bl,bl
  414495:	std    
  414496:	fstp   DWORD PTR [edi+0x6848bc06]
  41449c:	in     eax,dx
  41449d:	pop    eax
  41449e:	(bad)  
  41449f:	adc    DWORD PTR [eax],esi
  4144a1:	pop    ss
  4144a2:	lods   al,BYTE PTR ds:[esi]
  4144a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144a4:	mov    al,ds:0x9074727b
  4144a9:	daa    
  4144aa:	rol    BYTE PTR [edx],1
  4144ac:	push   cs
  4144ad:	sbb    DWORD PTR [esi-0x2a],edx
  4144b0:	xor    eax,0x80bb1e
  4144b5:	mov    ds:0x58f1ca17,al
  4144ba:	jmp    0x4144cd
  4144bc:	data16 cmp bh,BYTE PTR [eax]
  4144bf:	repnz lahf 
  4144c1:	mov    ?,WORD PTR [ebx]
  4144c3:	push   edi
  4144c4:	xchg   ebp,eax
  4144c5:	sub    bh,0xb6
  4144c8:	shr    BYTE PTR ds:0x574d81f8,cl
  4144ce:	add    eax,0x971fe765
  4144d3:	push   esp
  4144d4:	mov    ecx,DWORD PTR [ecx]
  4144d6:	push   ss
  4144d7:	and    eax,0x99de23c2
  4144dc:	mov    al,ds:0x23c81282
  4144e1:	or     dh,BYTE PTR [ecx-0x7e]
  4144e4:	or     eax,edi
  4144e6:	test   DWORD PTR [edi],eax
  4144e8:	and    al,0x44
  4144ea:	mov    ecx,0x3f76d7b3
  4144ef:	les    esi,FWORD PTR [eax]
  4144f1:	daa    
  4144f2:	cld    
  4144f3:	pop    ecx
  4144f4:	adc    eax,0x88059ee1
  4144f9:	retf   
  4144fa:	and    ah,dh
  4144fc:	out    0x5a,eax
  4144fe:	in     al,0xf2
  414500:	mov    ebp,0x51c4d72
  414505:	push   ecx
  414506:	arpl   WORD PTR [esi-0x546460f3],cx
  41450c:	ret    
  41450d:	xor    BYTE PTR [edi+ecx*2],dh
  414510:	sbb    cl,bh
  414512:	dec    esi
  414513:	jno    0x4144a3
  414515:	ds pop ds
  414517:	add    al,0x92
  414519:	mov    ebx,0x6b8ff225
  41451e:	jmp    0xf856:0xf4e80b29
  414525:	jbe    0x41456c
  414527:	test   BYTE PTR [edx-0x1585dddc],0x75
  41452e:	mov    ds:0xdf4adb5a,eax
  414533:	mov    dl,BYTE PTR [esi]
  414535:	loop   0x41458c
  414537:	in     eax,0xda
  414539:	(bad)  
  41453a:	mov    al,ds:0x949099b1
  41453f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414540:	mov    eax,0xd3c9d97d
  414545:	add    edx,DWORD PTR [eax]
  414547:	jb     0x4144d2
  414549:	xor    eax,0xa6c38180
  41454e:	pop    ebx
  41454f:	xor    esi,edx
  414551:	aaa    
  414552:	fucomi st,st(7)
  414554:	add    DWORD PTR [edx+edx*8-0x5d],0x502aa64b
  41455c:	imul   esi,ecx,0x2a425cb9
  414562:	dec    ecx
  414563:	push   ss
  414564:	pop    eax
  414565:	mov    ds:0x2d18d9ad,al
  41456a:	xchg   ebp,eax
  41456b:	and    eax,0x826742ee
  414570:	fld    st(6)
  414572:	les    eax,FWORD PTR [ebx]
  414574:	iret   
  414575:	add    edi,DWORD PTR [ebx+0x7ca1738]
  41457b:	das    
  41457c:	dec    esp
  41457d:	mov    dl,0xd6
  41457f:	pop    ds
  414580:	push   0xffffff9a
  414582:	inc    esi
  414583:	pop    ebx
  414584:	ins    BYTE PTR es:[edi],dx
  414585:	aad    0xef
  414587:	jmp    DWORD PTR [eax]
  414589:	adc    al,0x7a
  41458b:	xchg   edi,eax
  41458c:	retf   0x1028
  41458f:	adc    bl,BYTE PTR [eax+0x3bab33b2]
  414595:	cmp    ah,BYTE PTR [esi+0x30ddcd69]
  41459b:	fnstsw WORD PTR [eax]
  41459d:	xor    eax,0xd6d25df5
  4145a2:	leave  
  4145a3:	adc    DWORD PTR [ecx+eiz*4-0x11],ecx
  4145a7:	and    DWORD PTR [eax+0x2c48abbb],eax
  4145ad:	add    eax,0x41ed658d
  4145b2:	sti    
  4145b3:	pop    esi
  4145b4:	scas   eax,DWORD PTR es:[edi]
  4145b5:	in     al,dx
  4145b6:	sub    dh,ch
  4145b8:	push   eax
  4145b9:	leave  
  4145ba:	and    DWORD PTR [ebx-0x6b],ebx
  4145bd:	addr16 jns 0x4145d6
  4145c0:	mov    cl,0xf3
  4145c2:	push   0x82e8a7cb
  4145c7:	cmp    dl,cl
  4145c9:	aad    0xdd
  4145cb:	jmp    0xc029:0x8ba7221
  4145d2:	cmc    
  4145d3:	mov    ah,0x2b
  4145d5:	mov    ds:0xfff38233,eax
  4145da:	mov    esp,0x4eb8b24b
  4145df:	jae    0x4145f0
  4145e1:	in     al,0x68
  4145e3:	xchg   esp,eax
  4145e4:	pop    ebp
  4145e5:	cmc    
  4145e6:	cmp    bh,BYTE PTR [edx]
  4145e8:	and    DWORD PTR [edx-0x4ced749a],ebp
  4145ee:	mov    cl,0x34
  4145f0:	mov    dl,0xf9
  4145f2:	call   0x48fd0504
  4145f7:	jge    0x41465f
  4145f9:	mov    ch,0x2e
  4145fb:	sub    BYTE PTR [eax],ah
  4145fd:	mov    ch,0xef
  4145ff:	or     DWORD PTR [ecx-0x549cbbba],edi
  414605:	aaa    
  414606:	pop    ds
  414607:	or     BYTE PTR [edx],0xee
  41460a:	jle    0x414631
  41460c:	xor    al,0x39
  41460e:	(bad)  
  414610:	or     bl,BYTE PTR [ebp-0x1c3cf64d]
  414616:	adc    edi,ebp
  414618:	sub    al,0x81
  41461a:	fistp  QWORD PTR [ecx+0x7a2ac504]
  414620:	and    dl,ah
  414622:	mov    bl,0xd
  414624:	out    dx,eax
  414625:	jne    0x4145b8
  414627:	ins    DWORD PTR es:[edi],dx
  414628:	mov    bl,0x65
  41462a:	sbb    DWORD PTR [ecx],ebp
  41462c:	out    0x5a,al
  41462e:	ret    0x942f
  414631:	cmovb  esi,DWORD PTR [ebx-0x7a]
  414635:	fldcw  WORD PTR [edi+0x18]
  414638:	mov    bl,BYTE PTR [ebx]
  41463a:	ror    DWORD PTR [esi+0x56],0xc5
  41463e:	arpl   di,ax
  414640:	ret    0xd663
  414643:	test   al,0x7e
  414645:	in     eax,0xcd
  414647:	mov    bh,0x75
  414649:	stc    
  41464a:	jecxz  0x4145e8
  41464c:	loope  0x414622
  41464e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41464f:	in     al,0xcd
  414651:	daa    
  414652:	inc    ecx
  414653:	xchg   esi,eax
  414654:	sub    ebp,DWORD PTR [esp+ecx*2-0x342fcc0d]
  41465b:	repnz in al,0x8f
  41465e:	fwait
  41465f:	dec    eax
  414660:	adc    DWORD PTR [edx-0x3a],ebx
  414663:	in     al,0x5b
  414665:	jo     0x4145f5
  414667:	loopne 0x414633
  414669:	or     dh,BYTE PTR [ebx+0x5760d72b]
  41466f:	scas   eax,DWORD PTR es:[edi]
  414670:	add    al,0x45
  414672:	dec    edx
  414673:	je     0x414617
  414675:	aam    0x6c
  414677:	aad    0xac
  414679:	mov    ebp,0xb5430b40
  41467e:	mov    BYTE PTR [ecx+0x35],bl
  414681:	pop    edi
  414682:	ror    DWORD PTR [ebx-0x73],cl
  414685:	retf   
  414686:	scas   eax,DWORD PTR es:[edi]
  414687:	mov    dl,0x60
  414689:	xchg   edx,eax
  41468a:	enter  0x9cb,0x4a
  41468e:	xchg   ebp,eax
  41468f:	push   es
  414690:	(bad)  
  414692:	psubsb mm5,QWORD PTR ds:[ecx-0x62182381]
  41469a:	test   DWORD PTR [edi-0x37],eax
  41469d:	inc    ecx
  41469e:	lock enter 0x3859,0x3e
  4146a3:	clc    
  4146a4:	xor    al,0xd2
  4146a6:	push   es
  4146a7:	sbb    al,0xe3
  4146a9:	lock sub DWORD PTR [edx+eiz*4],esp
  4146ad:	sub    BYTE PTR [eax+esi*8-0x58],0x32
  4146b2:	retf   
  4146b3:	cs in  al,dx
  4146b5:	je     0x4146b2
  4146b7:	xor    dl,0x74
  4146ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146bb:	js     0x41470f
  4146bd:	mov    WORD PTR [esi-0x25a0259f],?
  4146c3:	loopne 0x414725
  4146c5:	sar    BYTE PTR [ecx],0x18
  4146c8:	sar    DWORD PTR [eax+ecx*1+0x68],1
  4146cc:	inc    eax
  4146cd:	xchg   edx,eax
  4146ce:	add    eax,0x53df3bbb
  4146d3:	fdivr  QWORD PTR [edi-0x6e]
  4146d6:	jmp    0x41472f
  4146d8:	cdq    
  4146d9:	out    0xd2,eax
  4146db:	ret    0x59ac
  4146de:	fiadd  WORD PTR [esi]
  4146e0:	into   
  4146e1:	and    eax,0x89a81133
  4146e6:	scas   al,BYTE PTR es:[edi]
  4146e7:	pop    esp
  4146e9:	mov    BYTE PTR [ecx+0x5c],dh
  4146ec:	sbb    al,0xdb
  4146ee:	fld    QWORD PTR [ebx+0x3b]
  4146f1:	pop    ss
  4146f2:	pop    esp
  4146f3:	jbe    0x414733
  4146f5:	out    0x5c,al
  4146f7:	push   DWORD PTR [edx]
  4146f9:	lock mov ds:0xe7a582b6,eax
  4146ff:	push   0x90db4366
  414704:	icebp  
  414705:	lea    ebx,[edi+0x72]
  414708:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414709:	idiv   DWORD PTR [ebp+0x52c9c18]
  41470f:	jns    0x414729
  414711:	es pop esp
  414713:	xchg   esi,eax
  414714:	adc    ah,bh
  414716:	imul   ebp,DWORD PTR [edx+ebp*2-0x4d],0xffffffec
  41471b:	test   BYTE PTR [eax-0x2abb3199],cl
  414721:	pushf  
  414722:	or     eax,0xaeca5251
  414727:	sbb    edx,esi
  414729:	jnp    0x414702
  41472b:	or     BYTE PTR [ecx-0x2b],ch
  41472e:	popf   
  41472f:	jbe    0x414798
  414731:	pop    edi
  414732:	pushf  
  414733:	push   ds
  414734:	aas    
  414735:	in     al,dx
  414736:	dec    eax
  414737:	sub    eax,0x7665b762
  41473c:	test   eax,0x11c85adf
  414741:	jno    0x41471b
  414743:	mov    ebx,0xdd28ffbf
  414748:	push   ss
  414749:	mov    al,ds:0xfec4803a
  41474e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41474f:	add    eax,0x45c67ab2
  414754:	ret    
  414755:	fucom  st(5)
  414757:	mov    eax,0x7f6d65b
  41475c:	or     al,0x8e
  41475e:	pop    ecx
  41475f:	mov    ds:0x19af1c18,eax
  414764:	cmp    ebp,ecx
  414766:	fild   QWORD PTR [edx+0x5418a71f]
  41476c:	test   BYTE PTR [ecx],cl
  41476e:	repnz adc DWORD PTR [edi+eax*8-0x4ea1ec05],esp
  414776:	push   ebp
  414777:	jo     0x4147ce
  414779:	fnstsw WORD PTR [ebp-0x7569f931]
  41477f:	test   DWORD PTR [ecx+0x44],esp
  414782:	out    dx,al
  414783:	jae    0x4147a8
  414785:	mov    edi,0x80ccff25
  41478a:	test   al,0xaa
  41478c:	pusha  
  41478d:	ret    0xe394
  414790:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414791:	stc    
  414792:	dec    ebx
  414793:	fs inc esp
  414795:	dec    edx
  414796:	pop    esi
  414798:	(bad)  
  41479a:	in     al,dx
  41479b:	inc    ecx
  41479c:	push   eax
  41479d:	rol    BYTE PTR [eax],0x47
  4147a0:	inc    edx
  4147a1:	aad    0xd3
  4147a3:	das    
  4147a4:	dec    edx
  4147a5:	push   esp
  4147a6:	push   esp
  4147a7:	jo     0x4147a1
  4147a9:	sub    BYTE PTR [eax+ecx*1+0x4281c02c],ah
  4147b0:	cmp    eax,0x73da2c19
  4147b5:	popa   
  4147b6:	aas    
  4147b7:	mov    esp,0xbe596db8
  4147bc:	jb     0x414787
  4147be:	punpcklwd mm5,DWORD PTR [edi+0x5b14f152]
  4147c5:	test   al,0xdf
  4147c7:	nop
  4147c8:	dec    ebp
  4147c9:	xor    BYTE PTR [ebp+0x7760f188],ch
  4147cf:	cld    
  4147d0:	cmp    BYTE PTR [ecx-0x3166b4b8],ah
  4147d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147d7:	stos   BYTE PTR es:[edi],al
  4147d8:	mov    WORD PTR [edi+ebx*4-0x3],ss
  4147dc:	div    DWORD PTR ds:0x28a08835
  4147e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147e3:	fld    TBYTE PTR [edi]
  4147e5:	int3   
  4147e6:	test   eax,0x1eac6bd8
  4147eb:	(bad)  
  4147ec:	xor    BYTE PTR [esi],cl
  4147ee:	mov    ebx,0x2dca788c
  4147f3:	mov    dh,0x10
  4147f5:	mul    DWORD PTR [edi]
  4147f7:	xchg   edx,eax
  4147f8:	push   edi
  4147f9:	xchg   DWORD PTR ds:[ebx-0x9b2e83b],esp
  414800:	xchg   ebp,eax
  414801:	call   0x4010:0x1d758c1a
  414808:	push   cs
  414809:	das    
  41480a:	pushf  
  41480b:	test   eax,0xbd50bb57
  414810:	jnp    0x4147b1
  414812:	repnz mov bh,0x1d
  414815:	push   eax
  414816:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414817:	lock pop esi
  414819:	and    edi,DWORD PTR ds:0xc865f06e
  41481f:	sub    eax,0xaf22c105
  414824:	scas   eax,DWORD PTR es:[edi]
  414825:	sub    eax,0x35089fc2
  41482a:	cmc    
  41482b:	mov    BYTE PTR [esi],cl
  41482d:	pop    ebx
  41482e:	mov    ah,0x6f
  414830:	jmp    0x5c53e382
  414835:	xchg   DWORD PTR [edx-0x7a],ebp
  414838:	lea    ebp,[esi+0x32cc2d0f]
  41483e:	cld    
  41483f:	mov    cl,0x37
  414841:	mov    eax,0x5bd3aa7b
  414846:	mov    DWORD PTR [eax+ecx*1],eax
  414849:	daa    
  41484a:	mov    dh,0x83
  41484c:	xor    eax,0xe7dbe162
  414851:	ins    DWORD PTR es:[edi],dx
  414852:	xchg   edi,eax
  414853:	mov    WORD PTR [edx+0x61],ss
  414856:	cmp    eax,0xca124b52
  41485b:	repz imul ecx,DWORD PTR [edx-0x38948ddd],0xffffffb7
  414863:	mov    ecx,0x154f001a
  414868:	popf   
  414869:	mov    cl,0x9f
  41486b:	pop    edi
  41486c:	mov    al,ds:0xe2128e09
  414871:	mov    eax,ds:0x933ad3bd
  414876:	sub    BYTE PTR [edi-0x23],al
  414879:	dec    edi
  41487a:	ror    BYTE PTR [esi+0x1c6afa29],1
  414880:	mov    dh,0xb3
  414882:	push   0x8607b1b
  414887:	or     al,BYTE PTR [ebp+edx*8-0x51]
  41488b:	jbe    0x4148f9
  41488d:	aam    0x2e
  41488f:	test   al,0x3c
  414891:	sub    al,0x97
  414893:	int    0x9a
  414895:	fwait
  414896:	push   0x33
  414898:	jle    0x414824
  41489a:	and    BYTE PTR [edi-0x16],cl
  41489d:	dec    eax
  41489e:	adc    DWORD PTR [ecx+0x26],esp
  4148a1:	jmp    0x95708c3f
  4148a6:	cmp    eax,0xaabbfb13
  4148ab:	mov    eax,ds:0x3672042a
  4148b0:	xchg   DWORD PTR [esi],esp
  4148b2:	push   cs
  4148b3:	ret    
  4148b4:	outs   dx,BYTE PTR ds:[esi]
  4148b5:	pop    ebp
  4148b6:	fndisi(8087 only) 
  4148b8:	pushf  
  4148b9:	xchg   DWORD PTR [edi],edx
  4148bb:	jno    0x4148ab
  4148bd:	jg     0x414854
  4148bf:	mov    ds:0x6fa0c6c,al
  4148c4:	(bad)  
  4148c5:	fst    DWORD PTR [eax-0x4336f461]
  4148cb:	jge    0x414871
  4148cd:	add    bl,cl
  4148cf:	ds pop ds
  4148d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148d2:	stc    
  4148d3:	add    al,BYTE PTR [esi-0x74]
  4148d6:	and    DWORD PTR [edi],0x9880b2d2
  4148dc:	mov    dl,0xa4
  4148de:	popf   
  4148df:	sar    eax,cl
  4148e1:	mov    eax,ds:0x7816c241
  4148e6:	sbb    DWORD PTR [ebx-0x62],ecx
  4148e9:	push   cs
  4148ea:	or     BYTE PTR [edi-0x6c],0x37
  4148ee:	jae    0x414908
  4148f0:	add    bl,bh
  4148f2:	xlat   BYTE PTR ss:[ebx]
  4148f4:	mov    edx,0x6a03ee56
  4148f9:	mov    edx,0x891cb87b
  4148fe:	repnz ins BYTE PTR es:[edi],dx
  414900:	add    edx,esi
  414902:	sahf   
  414903:	xchg   ebp,eax
  414904:	mov    eax,0x29899f77
  414909:	jno    0x4148cb
  41490b:	xchg   ebx,eax
  41490c:	push   ebx
  41490d:	in     eax,dx
  41490e:	ret    
  41490f:	mov    dl,0x82
  414911:	mov    ebp,0x5f26c9f3
  414916:	les    esp,FWORD PTR [edi+0x50]
  414919:	mov    ch,0xb6
  41491b:	adc    BYTE PTR [eax-0x636be169],dh
  414921:	into   
  414922:	sbb    al,0x19
  414924:	dec    esi
  414925:	in     eax,dx
  414926:	sub    bh,dl
  414928:	mov    al,0x83
  41492a:	mov    esp,0xf9d9d376
  41492f:	pop    es
  414930:	repnz xor BYTE PTR [eax-0x44e92f28],dh
  414937:	dec    ecx
  414938:	push   ds
  414939:	push   ds
  41493a:	loop   0x414910
  41493c:	js     0x414925
  41493e:	je     0x41495a
  414940:	test   DWORD PTR [ecx],esi
  414942:	jno    0x414993
  414944:	jmp    0xee47:0xf700fe56
  41494b:	jo     0x414996
  41494d:	inc    ebx
  41494e:	hlt    
  41494f:	mov    al,ds:0x3c4ca6ed
  414954:	pop    es
  414955:	jp     0x414993
  414957:	fdiv   QWORD PTR [esi-0x2ecf1b77]
  41495d:	stos   DWORD PTR es:[edi],eax
  41495e:	pop    ebp
  41495f:	push   ebp
  414960:	add    DWORD PTR [edi-0xf],eax
  414963:	xchg   esi,eax
  414964:	mov    al,ds:0x9901a2f0
  414969:	dec    ecx
  41496a:	mov    edi,0x2d4f9fde
  41496f:	or     bl,BYTE PTR [ebx]
  414971:	push   ecx
  414972:	push   0xffffffbb
  414974:	fmulp  st(0),st
  414976:	jge    0x4149f7
  414978:	mov    ebx,0x4542c831
  41497d:	mov    al,dl
  41497f:	mov    esi,0xac18b1a0
  414984:	pop    ebp
  414985:	pop    esi
  414986:	mov    dh,dl
  414988:	inc    ebx
  414989:	and    BYTE PTR [ebp-0x4eb5cbdb],ch
  41498f:	add    BYTE PTR [ebx+0x32],dh
  414992:	add    eax,0xa6a4c7c9
  414997:	mov    ebx,0x679bee05
  41499c:	and    edx,eax
  41499e:	pop    ds
  41499f:	lods   al,BYTE PTR ds:[esi]
  4149a0:	add    al,0xca
  4149a2:	aam    0xc4
  4149a4:	mov    bh,0x54
  4149a6:	in     eax,0xdb
  4149a8:	mov    ch,0x94
  4149aa:	popf   
  4149ab:	and    esp,esp
  4149ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149ae:	dec    esp
  4149af:	imul   esp,esp,0x4d
  4149b2:	lods   eax,DWORD PTR ds:[esi]
  4149b3:	popa   
  4149b4:	popf   
  4149b5:	in     eax,0xc8
  4149b7:	mov    ah,0xfc
  4149b9:	test   edx,esi
  4149bb:	fidiv  DWORD PTR [ebp+0x55]
  4149be:	faddp  st(6),st
  4149c0:	adc    bh,0xc3
  4149c3:	out    0xe4,al
  4149c5:	adc    BYTE PTR ds:0x1d1e343,bl
  4149cb:	jns    0x41497a
  4149cd:	push   ss
  4149ce:	daa    
  4149cf:	jge    0x414a0c
  4149d1:	mov    edi,0x8b086dad
  4149d6:	sub    cl,BYTE PTR [edi-0x430136b0]
  4149dc:	xchg   esp,eax
  4149dd:	push   esp
  4149de:	adc    ah,BYTE PTR [ecx-0x45]
  4149e1:	jns    0x414a16
  4149e3:	pushf  
  4149e4:	xor    dh,BYTE PTR [ebp+ebx*4+0x52]
  4149e8:	mov    esi,0xd83434a0
  4149ed:	xchg   ebp,eax
  4149ee:	std    
  4149ef:	out    dx,al
  4149f0:	push   esp
  4149f1:	xchg   esi,eax
  4149f2:	push   cs
  4149f3:	xor    DWORD PTR [ebp+0x4a],ebp
  4149f6:	xchg   esp,eax
  4149f7:	fsubr  DWORD PTR [edx-0x37915d83]
  4149fd:	inc    ebp
  4149fe:	outs   dx,DWORD PTR ds:[esi]
  4149ff:	bound  ecx,QWORD PTR ds:0x6b7b86f1
  414a05:	cdq    
  414a06:	or     al,0xdf
  414a08:	hlt    
  414a09:	es in  al,dx
  414a0b:	(bad)  
  414a0c:	ror    BYTE PTR [ebx-0x53d580e],cl
  414a12:	imul   esp,DWORD PTR [edx+0x7],0x23
  414a16:	jg     0x414a82
  414a18:	icebp  
  414a19:	mov    ds:0x663d828,eax
  414a1e:	int    0xe3
  414a20:	gs mov ch,0xcf
  414a23:	mov    ch,0x95
  414a25:	ror    BYTE PTR [edx],1
  414a27:	hlt    
  414a28:	mov    ah,0x8e
  414a2a:	jmp    0x3660:0xe51a24da
  414a31:	push   ss
  414a32:	or     DWORD PTR [ecx+0x40fb94ce],ebp
  414a38:	test   eax,0x6894dca0
  414a3d:	cdq    
  414a3e:	mov    ds:0xae3195c9,al
  414a43:	push   ss
  414a44:	add    al,0x11
  414a46:	gs loop 0x4149f1
  414a49:	jecxz  0x4149d5
  414a4b:	mov    esp,0x164c3286
  414a50:	lods   al,BYTE PTR ds:[esi]
  414a51:	dec    eax
  414a52:	fiadd  DWORD PTR [edi+0x7ae2654c]
  414a58:	xor    esi,edi
  414a5a:	inc    edx
  414a5b:	mov    bh,0x46
  414a5d:	and    eax,0x6e9c2a05
  414a62:	outs   dx,DWORD PTR gs:[esi]
  414a64:	mov    ds:0x29d03458,eax
  414a69:	sub    ecx,edx
  414a6b:	xchg   edi,eax
  414a6c:	cmovge ebx,DWORD PTR [edx-0x67]
  414a70:	je     0x414ac1
  414a72:	fiadd  WORD PTR [ecx+0x50b0c40f]
  414a78:	adc    bh,BYTE PTR [ecx+0x72875675]
  414a7e:	ins    DWORD PTR es:[edi],dx
  414a7f:	mov    ecx,0x1101790c
  414a84:	inc    ecx
  414a85:	sti    
  414a86:	and    BYTE PTR [esi+0x76],cl
  414a89:	mov    ah,0x9e
  414a8b:	stos   DWORD PTR es:[edi],eax
  414a8c:	ds inc esi
  414a8e:	xor    esp,DWORD PTR [ebx]
  414a90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a91:	je     0x414a6e
  414a93:	out    0x3f,al
  414a95:	ins    DWORD PTR es:[edi],dx
  414a96:	add    al,ch
  414a98:	loop   0x414a68
  414a9a:	cld    
  414a9b:	jecxz  0x414a8e
  414a9d:	inc    eax
  414a9e:	inc    BYTE PTR [ecx+0x3d]
  414aa1:	mov    ch,0x77
  414aa3:	jb     0x414aae
  414aa5:	(bad)  
  414aa6:	adc    al,BYTE PTR [edx+0x7b]
  414aa9:	into   
  414aaa:	rol    ch,0x27
  414aad:	fbstp  TBYTE PTR [edx]
  414aaf:	jbe    0x414a86
  414ab1:	and    BYTE PTR [ebx-0x50],0x1f
  414ab5:	outs   dx,BYTE PTR ds:[esi]
  414ab6:	nop
  414ab7:	ja     0x414a5e
  414ab9:	xor    eax,0x9245fcc2
  414abe:	sbb    eax,0x147d10b1
  414ac3:	popa   
  414ac4:	loopne 0x414a59
  414ac6:	push   0x42e35805
  414acb:	push   edi
  414acc:	xor    eax,0x5cbda64e
  414ad1:	(bad)  
  414ad2:	pop    eax
  414ad3:	jo     0x414a65
  414ad5:	mov    ?,WORD PTR [edi+edi*4-0x4a4f02a3]
  414adc:	mov    ebp,ebx
  414ade:	add    BYTE PTR [ecx],ah
  414ae0:	imul   edi,eax,0x50
  414ae3:	ds fucomi st,st(6)
  414ae6:	in     al,dx
  414ae7:	sbb    ch,BYTE PTR [edx]
  414ae9:	clc    
  414aea:	mov    eax,0x54c178dc
  414aef:	dec    DWORD PTR [esp+ebp*2+0x56c9c292]
  414af6:	fistp  WORD PTR [ebx+edx*1-0x25]
  414afa:	xchg   edx,eax
  414afb:	rol    esp,cl
  414afd:	ds push 0xf584c7cf
  414b03:	aad    0x92
  414b05:	dec    ebp
  414b06:	jge    0x414b59
  414b08:	hlt    
  414b09:	call   FWORD PTR [ecx+0x2a]
  414b0c:	fst    DWORD PTR [edx+0x33]
  414b0f:	pop    ebx
  414b10:	std    
  414b11:	inc    esi
  414b12:	repnz jmp 0x6259:0xbe0a1d
  414b1a:	jns    0x414b7f
  414b1c:	mov    esi,DWORD PTR ds:0x14f0e9cd
  414b22:	div    DWORD PTR [esi+ecx*8-0x6f]
  414b26:	or     DWORD PTR [ebp+ebp*1+0x67],esi
  414b2a:	dec    ecx
  414b2b:	xor    ebp,ebp
  414b2d:	and    bl,BYTE PTR [ebp+ecx*1-0x13]
  414b31:	lea    edx,[esi-0x18bd3b67]
  414b37:	adc    eax,edi
  414b39:	dec    ebp
  414b3a:	add    ebp,ebx
  414b3c:	pusha  
  414b3d:	pop    ebp
  414b3e:	xor    al,0x9d
  414b40:	sub    cl,BYTE PTR [ebp+edx*8-0x75c9ec01]
  414b47:	neg    BYTE PTR [eax+0xd1ecfe5]
  414b4d:	(bad)  
  414b4e:	lahf   
  414b4f:	dec    ecx
  414b50:	push   edi
  414b51:	pop    esi
  414b52:	or     edi,esp
  414b54:	shl    DWORD PTR [ecx],cl
  414b56:	stos   BYTE PTR es:[edi],al
  414b57:	pop    ds
  414b58:	(bad)  
  414b59:	imul   esp,DWORD PTR [esi-0x3ff11199],0x4d2702bb
  414b63:	neg    bl
  414b65:	push   ecx
  414b66:	mov    ds:0x83dd32d5,eax
  414b6b:	jle    0x414bea
  414b6d:	dec    esp
  414b6e:	aas    
  414b6f:	xchg   ecx,eax
  414b70:	popa   
  414b71:	add    dl,ch
  414b73:	add    eax,0x54473968
  414b78:	cmp    DWORD PTR [edi+0x6f],0x88053ab3
  414b7f:	addps  xmm2,XMMWORD PTR [ebp-0x1ee2b9b3]
  414b86:	jmp    DWORD PTR [esi+0x56]
  414b89:	dec    edx
  414b8a:	les    ebp,FWORD PTR [edi+0x68]
  414b8d:	mov    al,ds:0xd79c97b5
  414b92:	in     al,dx
  414b93:	test   al,0xe7
  414b95:	xchg   ecx,eax
  414b96:	fadd   QWORD PTR [eax-0xa]
  414b99:	cmp    cl,BYTE PTR [edx+0x67]
  414b9c:	shr    BYTE PTR [edx+0x4d],cl
  414b9f:	pop    ds
  414ba0:	dec    ebx
  414ba1:	dec    ecx
  414ba2:	add    cl,al
  414ba4:	rol    DWORD PTR [eax+eax*8-0x73],cl
  414ba8:	inc    esp
  414ba9:	out    0x84,al
  414bab:	(bad)  
  414bac:	int    0xdc
  414bae:	iret   
  414baf:	jnp    0x414b79
  414bb1:	cmc    
  414bb2:	cmp    al,0x56
  414bb4:	leave  
  414bb5:	push   cs
  414bb6:	mov    al,ds:0x3e7cd884
  414bbb:	and    eax,0xaaf6e97e
  414bc0:	adc    BYTE PTR [eax],al
  414bc2:	or     bh,ah
  414bc4:	inc    ecx
  414bc5:	xlat   BYTE PTR ds:[ebx]
  414bc6:	dec    ecx
  414bc7:	and    DWORD PTR [ebx-0x44],0x5d
  414bcb:	out    dx,eax
  414bcc:	popa   
  414bcd:	mov    esi,DWORD PTR [eax+edi*1+0x449be67b]
  414bd4:	loopne 0x414b68
  414bd6:	push   ebp
  414bd7:	mov    cl,0xf0
  414bd9:	mov    ecx,0x6196aec3
  414bde:	mov    bh,0x72
  414be0:	add    ebx,ebp
  414be2:	into   
  414be3:	cdq    
  414be4:	sbb    eax,0x87fdb1d1
  414be9:	or     BYTE PTR [ebx+edi*1+0x40],0x78
  414bee:	mov    ah,0x5d
  414bf0:	cmp    eax,0x8566cb8a
  414bf5:	mov    ebx,0xe42a7a65
  414bfa:	scas   eax,DWORD PTR es:[edi]
  414bfb:	lods   al,BYTE PTR ds:[esi]
  414bfc:	sbb    eax,DWORD PTR [ebx]
  414bfe:	iret   
  414bff:	hlt    
  414c00:	pop    ecx
  414c01:	popf   
  414c02:	jg     0x414bc0
  414c04:	mov    ch,0xf3
  414c06:	icebp  
  414c07:	push   ss
  414c08:	stos   DWORD PTR es:[edi],eax
  414c09:	mov    BYTE PTR [edi],dl
  414c0b:	ret    
  414c0c:	stos   BYTE PTR es:[edi],al
  414c0d:	or     bl,al
  414c0f:	mov    ds:0x6106f1a5,eax
  414c14:	jno    0x414c77
  414c16:	push   esi
  414c17:	test   DWORD PTR [ebp+ebx*1+0x4b061e91],esp
  414c1e:	ja     0x414bd8
  414c20:	std    
  414c21:	adc    al,0x78
  414c23:	dec    esp
  414c24:	xchg   ebp,eax
  414c25:	jns    0x414c0e
  414c27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c28:	rcr    DWORD PTR [ebx+0x58b12cb0],1
  414c2e:	xor    eax,DWORD PTR [ecx]
  414c30:	lds    edx,FWORD PTR [eax+0x3e64c5b9]
  414c36:	in     al,dx
  414c37:	add    eax,0x827dd556
  414c3c:	hlt    
  414c3d:	jae    0x414bfc
  414c3f:	je     0x414c59
  414c41:	stos   BYTE PTR es:[edi],al
  414c42:	jbe    0x414cbd
  414c44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c45:	(bad)  
  414c46:	pop    ds
  414c47:	shr    BYTE PTR [edx],cl
  414c49:	clc    
  414c4a:	inc    eax
  414c4b:	adc    esp,ecx
  414c4d:	push   esi
  414c4e:	xchg   edx,eax
  414c4f:	outs   dx,DWORD PTR ds:[esi]
  414c50:	mov    ah,0x32
  414c52:	push   ecx
  414c53:	in     eax,0x9
  414c55:	mov    edi,0x9df6b429
  414c5a:	mov    dh,BYTE PTR [ecx-0x1c293d3d]
  414c60:	neg    DWORD PTR [ecx-0x3474e050]
  414c66:	rcl    BYTE PTR [eax],1
  414c68:	and    ebx,DWORD PTR ds:0x446272b1
  414c6e:	lea    eax,[ebp+ebp*4+0x24]
  414c72:	sub    dl,ch
  414c74:	dec    eax
  414c75:	ret    
  414c76:	add    al,0xba
  414c78:	icebp  
  414c79:	mov    ebx,0x5add4df2
  414c7e:	repz in eax,dx
  414c80:	mov    ds:0x2af9dfe1,eax
  414c85:	popa   
  414c86:	lods   eax,DWORD PTR ds:[esi]
  414c87:	sub    bh,cl
  414c89:	add    BYTE PTR [esi-0x5a8c96bd],bl
  414c8f:	repz dec eax
  414c91:	arpl   WORD PTR [eax+0x22],bp
  414c94:	(bad)  
  414c95:	sti    
  414c96:	pop    ebx
  414c97:	jg     0x414c87
  414c99:	pushf  
  414c9a:	inc    eax
  414c9b:	call   0xd9476640
  414ca0:	mov    dl,0x1b
  414ca2:	jge    0x414cd1
  414ca4:	mov    WORD PTR es:[ebx-0x3e233653],di
  414cac:	cmp    ebx,DWORD PTR ss:[esi]
  414caf:	inc    esp
  414cb0:	sbb    dh,0xb3
  414cb3:	sti    
  414cb4:	imul   eax,DWORD PTR [edx+0x5bfe54a9],0x9f680643
  414cbe:	pop    ss
  414cbf:	mov    ds:0x7ace836,al
  414cc4:	mov    ds,WORD PTR [esi-0x28]
  414cc7:	xchg   edi,eax
  414cc8:	mov    edx,0x1f20110b
  414ccd:	lahf   
  414cce:	loopne 0x414cd5
  414cd0:	sub    BYTE PTR [eax+eiz*4],0x5
  414cd4:	fs adc al,0x39
  414cd7:	into   
  414cd8:	mov    DWORD PTR [esi],ecx
  414cda:	push   0x3dc37c5c
  414cdf:	adc    ecx,DWORD PTR [eax-0x30]
  414ce2:	nop
  414ce3:	call   0xcd3b:0x873678d1
  414cea:	int3   
  414ceb:	mov    cs,WORD PTR [edi-0x37]
  414cee:	mov    eax,0x21377d0c
  414cf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414cf4:	mov    dl,0xa8
  414cf6:	into   
  414cf7:	loope  0x414c7f
  414cf9:	psubb  mm4,QWORD PTR [esi+0x22]
  414cfd:	imul   esi,DWORD PTR [edi+0x2d],0x66
  414d01:	in     al,dx
  414d02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d03:	push   ebp
  414d04:	mov    esp,0x1563afec
  414d09:	jge    0x414ce2
  414d0b:	dec    edx
  414d0c:	jmp    0xc1111e1b
  414d11:	add    eax,0x5cd75e20
  414d16:	jbe    0x414d2e
  414d18:	sbb    al,0xcb
  414d1a:	nop
  414d1b:	adc    al,0x2a
  414d1d:	inc    esp
  414d1e:	xchg   edx,eax
  414d1f:	push   edi
  414d20:	adc    eax,0xa16f68f1
  414d25:	jle    0x414ce8
  414d27:	or     DWORD PTR [edi],esi
  414d29:	mov    ecx,0xfe7be5b0
  414d2e:	dec    esp
  414d2f:	add    BYTE PTR [esi-0x722ac12c],0x1
  414d36:	lahf   
  414d37:	xor    al,0x86
  414d39:	(bad)  
  414d3a:	mov    al,ds:0x8430f79f
  414d3f:	ror    BYTE PTR [esi],1
  414d41:	ret    0x723f
  414d44:	or     DWORD PTR [esi+ebx*8+0x41f73415],esp
  414d4b:	inc    edi
  414d4c:	test   esp,ebp
  414d4e:	std    
  414d4f:	repnz cmp eax,0x774ce488
  414d55:	push   eax
  414d56:	xor    eax,DWORD PTR [ecx+0x2c]
  414d59:	or     BYTE PTR [ebp-0x6ea052e7],ch
  414d5f:	lock cwde 
  414d61:	retf   0xf424
  414d64:	or     eax,0x63e37c25
  414d69:	in     al,0x8
  414d6b:	arpl   cx,bx
  414d6d:	jne    0x414d37
  414d6f:	or     ebx,DWORD PTR ss:0x96de9b67
  414d76:	or     eax,DWORD PTR [esi+edx*4+0x4267385b]
  414d7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d7e:	dec    eax
  414d7f:	mov    ebp,0xa6796ded
  414d84:	mov    al,0x74
  414d86:	(bad)  
  414d87:	adc    ebx,DWORD PTR [ebx+0x5c]
  414d8a:	out    0x9b,al
  414d8c:	test   BYTE PTR [ebx],dh
  414d8e:	scas   al,BYTE PTR es:[edi]
  414d8f:	mov    dl,0x40
  414d91:	mov    ch,0xc0
  414d93:	jg     0x414dd3
  414d95:	test   al,0xc4
  414d97:	pop    esi
  414d98:	in     al,0xb6
  414d9a:	shr    DWORD PTR [edx-0x3a],0xdc
  414d9e:	hlt    
  414d9f:	shl    cl,0x3b
  414da2:	jne    0x414dc9
  414da4:	lods   al,BYTE PTR ds:[esi]
  414da5:	(bad)  
  414da6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414da7:	push   esi
  414da8:	xchg   edi,eax
  414da9:	mov    ah,0xea
  414dab:	sbb    edx,0x23
  414dae:	test   al,0xf
  414db0:	fst    DWORD PTR [edi+ebx*4]
  414db3:	pop    ebx
  414db4:	je     0x414d8b
  414db6:	(bad)  
  414db7:	xchg   ebx,eax
  414db8:	cwde   
  414db9:	add    DWORD PTR [ebx-0x7],ecx
  414dbc:	retf   0xbd1e
  414dbf:	test   BYTE PTR [ebp+ebp*2-0x47],ah
  414dc3:	popa   
  414dc4:	lahf   
  414dc5:	loop   0x414e1c
  414dc7:	xor    DWORD PTR [ecx],ecx
  414dc9:	pmulhuw mm6,QWORD PTR [ebp-0x31]
  414dcd:	or     BYTE PTR [edi+0x534f2157],cl
  414dd3:	jg     0x414dfc
  414dd5:	hlt    
  414dd6:	(bad)  
  414dd7:	or     ecx,ebp
  414dd9:	iret   
  414dda:	mov    ecx,DWORD PTR [esi-0x47944c6]
  414de0:	pop    edx
  414de1:	mov    cl,0xea
  414de3:	mov    bl,0xed
  414de5:	ds in  al,dx
  414de7:	les    esp,FWORD PTR [ebx]
  414de9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414dea:	data16 rol BYTE PTR [eax],0x12
  414dee:	int3   
  414def:	fcomp  DWORD PTR [ebx]
  414df1:	gs cmp ebx,edx
  414df4:	mul    BYTE PTR [edx+0x113ce1e6]
  414dfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414dfb:	call   0x1a0e:0xc16be315
  414e02:	lods   al,BYTE PTR ds:[esi]
  414e03:	cmp    esp,DWORD PTR [edi+0x1]
  414e06:	inc    ecx
  414e07:	ja     0x414dc8
  414e09:	and    al,0xa1
  414e0b:	ss adc eax,ebx
  414e0e:	adc    al,BYTE PTR [ecx-0x15304505]
  414e14:	mov    esp,0x9489878a
  414e19:	and    edx,ebp
  414e1b:	test   bh,ch
  414e1d:	adc    BYTE PTR [ecx],dh
  414e1f:	(bad)  
  414e20:	xor    al,cl
  414e22:	mov    cl,0x2d
  414e24:	push   ss
  414e25:	pop    ebp
  414e26:	xor    DWORD PTR [ebx-0x68],esp
  414e29:	mov    dl,0x44
  414e2b:	je     0x414db9
  414e2d:	enter  0x3b57,0x9b
  414e31:	fsubr  DWORD PTR [esi]
  414e33:	rcl    ecx,1
  414e35:	xchg   edi,eax
  414e36:	arpl   WORD PTR [ebp-0x74],si
  414e39:	inc    eax
  414e3a:	push   ss
  414e3b:	mov    ch,0x8c
  414e3d:	lods   al,BYTE PTR ds:[esi]
  414e3e:	popa   
  414e3f:	or     eax,0xdcc5d47a
  414e44:	add    bl,cl
  414e46:	in     al,0x21
  414e48:	jl     0x414de5
  414e4a:	or     DWORD PTR [ebp-0x4f],esp
  414e4d:	mov    eax,ds:0xdd70cc04
  414e52:	sub    DWORD PTR [ecx],ecx
  414e54:	inc    edx
  414e55:	xor    eax,DWORD PTR ds:0xed9cb
  414e5b:	call   FWORD PTR [ebx-0x118262f8]
  414e61:	lods   al,BYTE PTR ds:[esi]
  414e62:	mov    WORD PTR [edi],fs
  414e64:	pop    esp
  414e65:	sub    al,0x64
  414e67:	push   eax
  414e68:	out    dx,al
  414e69:	jns    0x414e8b
  414e6b:	mov    edi,0xb3817fc6
  414e70:	xchg   ecx,eax
  414e71:	dec    edx
  414e72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e73:	pop    ebx
  414e74:	mov    esp,0xa0b90720
  414e79:	in     eax,0x31
  414e7b:	popf   
  414e7c:	data16 sbb bl,BYTE PTR ds:0x8707f42d
  414e83:	aas    
  414e84:	jcxz   0x414e56
  414e87:	xchg   BYTE PTR [ecx-0x3fc3b42c],dl
  414e8d:	push   edi
  414e8e:	js     0x414ef3
  414e90:	inc    ecx
  414e91:	not    cl
  414e93:	mov    bh,0xfc
  414e95:	xor    edi,ecx
  414e97:	lock cwde 
  414e99:	imul   edx,eax,0x67
  414e9c:	or     BYTE PTR [edi-0x4],al
  414e9f:	(bad)  [ebx+0x3a492e41]
  414ea5:	mov    dh,0xd9
  414ea7:	push   ds
  414ea8:	xchg   edx,eax
  414ea9:	stos   DWORD PTR es:[edi],eax
  414eaa:	push   eax
  414eab:	jmp    0xa41e4160
  414eb0:	sub    edx,edx
  414eb2:	jmp    0x506:0xae84d329
  414eb9:	popf   
  414eba:	mov    edi,DWORD PTR [edi-0x1]
  414ebd:	sub    eax,0x3b35b1c0
  414ec2:	push   ecx
  414ec3:	std    
  414ec4:	mov    BYTE PTR [ebx],al
  414ec6:	dec    ebp
  414ec7:	add    al,0x81
  414ec9:	(bad)  
  414eca:	mov    dl,0xe2
  414ecc:	adc    bh,bh
  414ece:	out    0x8e,al
  414ed0:	xor    edx,DWORD PTR [ebx+0x5c]
  414ed3:	adc    eax,0x41fd3002
  414ed8:	inc    esp
  414ed9:	add    dh,BYTE PTR [ebx+ebx*4]
  414edc:	out    dx,eax
  414edd:	mov    ecx,0xb33ccb4b
  414ee2:	ins    DWORD PTR es:[edi],dx
  414ee3:	aaa    
  414ee4:	add    DWORD PTR [esi],edx
  414ee6:	test   BYTE PTR [esi],cl
  414ee8:	pop    ebx
  414ee9:	fidivr DWORD PTR [esi-0x54]
  414eec:	jno    0x414eae
  414eee:	fnstcw WORD PTR [eax+0x589afd64]
  414ef4:	jle    0x414f21
  414ef6:	mov    DWORD PTR [esi],ebp
  414ef8:	mov    ds:0x99a8c765,eax
  414efd:	cmp    ebx,DWORD PTR [esi+0x1c]
  414f00:	sub    BYTE PTR [esi-0xf793e74],0x8f
  414f07:	test   esp,esi
  414f09:	ret    
  414f0a:	(bad)  
  414f0b:	push   edi
  414f0c:	retf   
  414f0d:	test   BYTE PTR [ebx+ebp*2-0x493c5d1c],ah
  414f14:	aad    0x76
  414f16:	test   DWORD PTR [ecx+0x26],eax
  414f19:	cmp    BYTE PTR [edi+ebp*1-0x36],cl
  414f1d:	xchg   edx,eax
  414f1e:	les    esp,FWORD PTR [edx-0x7ca587f9]
  414f24:	sti    
  414f25:	inc    ecx
  414f26:	ins    DWORD PTR es:[edi],dx
  414f27:	sub    BYTE PTR [esi+0x40049f69],0x89
  414f2e:	add    DWORD PTR [edx-0x1849c1fb],ecx
  414f34:	ror    DWORD PTR [edi-0x6802e7ac],0x64
  414f3b:	(bad)  
  414f3c:	sbb    ebp,DWORD PTR [eax-0x21880b55]
  414f42:	mov    al,BYTE PTR [edx]
  414f44:	jp     0x414f6e
  414f46:	shl    DWORD PTR [edx+0x48],0x21
  414f4a:	xchg   esi,eax
  414f4b:	mov    dl,0xb5
  414f4d:	mov    BYTE PTR [eax],ch
  414f4f:	retf   0x350e
  414f52:	dec    edx
  414f53:	aam    0xdc
  414f55:	imul   esi,DWORD PTR [esi+0x44fdc355],0xc9d92564
  414f5f:	adc    edx,DWORD PTR [eax]
  414f61:	fistp  WORD PTR [edi+0x77]
  414f64:	push   ds
  414f65:	in     al,dx
  414f66:	cmp    eax,0x7c535487
  414f6b:	jne    0x414f4a
  414f6d:	ror    DWORD PTR [edx+0x2ab1e216],cl
  414f73:	push   cs
  414f74:	out    dx,al
  414f75:	sbb    esi,DWORD PTR [ebp+0x2a157fef]
  414f7b:	xchg   ebx,eax
  414f7c:	(bad)  
  414f7d:	xor    ebx,DWORD PTR [ebx-0x3a5e94be]
  414f83:	or     ebx,DWORD PTR [edx+ebp*2+0x31]
  414f87:	sbb    al,0x34
  414f89:	repnz call 0x17b6:0x12e0d211
  414f91:	sbb    eax,0x1550b489
  414f96:	mov    ebx,DWORD PTR [edi-0x2d]
  414f99:	jle    0x414f5d
  414f9b:	adc    eax,0xd8280d2e
  414fa0:	fwait
  414fa1:	int3   
  414fa2:	push   edx
  414fa3:	fstp   QWORD PTR [edi]
  414fa5:	mov    ds:0xdfcf67ca,al
  414faa:	sub    DWORD PTR [ecx],ecx
  414fac:	out    0xa7,eax
  414fae:	and    DWORD PTR [esi-0x371f071],esi
  414fb4:	jle    0x414fe0
  414fb6:	sub    bh,BYTE PTR [edx-0x36]
  414fb9:	repz pop edx
  414fbb:	fst    QWORD PTR [edx]
  414fbd:	lods   eax,DWORD PTR ds:[esi]
  414fbe:	ret    0x90e5
  414fc1:	out    dx,al
  414fc2:	dec    esi
  414fc3:	dec    ecx
  414fc4:	cmp    DWORD PTR [esi-0x13247167],0xffffffeb
  414fcb:	dec    esp
  414fcc:	dec    ebx
  414fcd:	mov    edi,0x9073b28
  414fd2:	test   DWORD PTR [edx-0x1684eead],eax
  414fd8:	shr    dh,1
  414fda:	cmc    
  414fdb:	mov    esi,0x9a9d36eb
  414fe0:	inc    edx
  414fe1:	ror    BYTE PTR [ebx],cl
  414fe3:	into   
  414fe4:	lods   al,BYTE PTR ds:[esi]
  414fe5:	sahf   
  414fe6:	jp     0x414ffd
  414fe8:	push   esp
  414fe9:	push   0xffffffac
  414feb:	sub    esp,DWORD PTR ds:0x5c69e2e
  414ff1:	inc    edx
  414ff2:	(bad)  
  414ff3:	aad    0xa2
  414ff5:	popa   
  414ff6:	loopne 0x415010
  414ff8:	out    dx,al
  414ff9:	xchg   edx,eax
  414ffa:	lods   al,BYTE PTR ds:[esi]
  414ffb:	pop    es
  414ffc:	in     eax,dx
  414ffd:	aam    0xea
  414fff:	mov    edi,0x85d01619
  415004:	cdq    
  415005:	dec    bp
  415007:	or     dh,BYTE PTR [ebp+0x2f]
  41500a:	fdiv   QWORD PTR [edi-0x57]
  41500d:	je     0x414fe5
  41500f:	dec    ecx
  415010:	pop    eax
  415011:	push   cs
  415012:	lahf   
  415013:	add    eax,0xb3cbc4ee
  415019:	mov    ss,WORD PTR [edx+0x64cf9d24]
  41501f:	aaa    
  415020:	mov    eax,ds:0xf5c50479
  415025:	xor    edx,0x7498cafa
  41502b:	fucomip st,st(2)
  41502d:	add    ecx,DWORD PTR [edx-0x560d793e]
  415033:	add    ecx,DWORD PTR [ecx]
  415035:	fwait
  415036:	rol    BYTE PTR [ebx+0x49],1
  415039:	cmp    al,0xa
  41503b:	xchg   ebx,eax
  41503c:	mov    ah,0xa2
  41503e:	daa    
  41503f:	out    0x37,eax
  415041:	mov    ds:0xd0bd991c,eax
  415046:	push   0xec6f302f
  41504b:	pop    ebp
  41504c:	mov    eax,ds:0xc4cada2a
  415051:	pop    ebp
  415052:	add    BYTE PTR [edi-0x1fd1c318],al
  415058:	xlat   BYTE PTR ds:[ebx]
  415059:	in     al,0x91
  41505b:	mov    al,BYTE PTR [esi]
  41505d:	inc    esp
  41505e:	loope  0x4150de
  415060:	push   es
  415061:	outs   dx,BYTE PTR ds:[esi]
  415062:	imul   esp,edx,0xffffffa8
  415065:	adc    DWORD PTR [edx-0x27],eax
  415068:	mov    ds:0x791b212d,al
  41506d:	das    
  41506e:	mov    edx,DWORD PTR [ebx]
  415070:	push   es
  415071:	out    dx,eax
  415072:	mov    ch,0xce
  415074:	out    dx,eax
  415075:	int    0xcb
  415077:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415078:	loopne 0x4150a8
  41507a:	lock fsubr QWORD PTR [edx]
  41507d:	std    
  41507e:	jno    0x41508e
  415080:	clc    
  415081:	xor    ebx,DWORD PTR [ebp-0x7c]
  415084:	pop    edx
  415085:	add    esi,DWORD PTR gs:[esi-0x1da30fc1]
  41508c:	dec    edi
  41508d:	xchg   esi,eax
  41508e:	shr    cl,0x1c
  415091:	mov    edi,0xf395a73e
  415096:	outs   dx,BYTE PTR ds:[esi]
  415097:	inc    esp
  415098:	cmc    
  415099:	adc    ebp,ebx
  41509b:	(bad)  
  41509d:	fs push ss
  41509f:	jmp    0x893a:0xe59ad849
  4150a6:	mov    al,BYTE PTR [esi-0xf]
  4150a9:	xor    ebp,DWORD PTR [ebp-0x23]
  4150ac:	aam    0x95
  4150ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150af:	call   0xcdb424df
  4150b4:	jmp    0xfd0caac0
  4150b9:	lock sub BYTE PTR [ecx+0x23673f84],bl
  4150c0:	dec    esi
  4150c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150c2:	xor    eax,0xb9d30a28
  4150c7:	mov    bl,0x3f
  4150c9:	sub    eax,0xa9c597f0
  4150ce:	pusha  
  4150cf:	aad    0x9
  4150d1:	repz or BYTE PTR [edx+0x7a],ah
  4150d5:	xor    esi,DWORD PTR [ecx+edi*2-0x28]
  4150d9:	loop   0x4150cb
  4150db:	fld    st(6)
  4150dd:	pop    ebx
  4150de:	push   DWORD PTR [eax]
  4150e0:	fistp  WORD PTR [ecx+0x2f]
  4150e3:	outs   dx,BYTE PTR ds:[esi]
  4150e4:	jmp    0x4150ec
  4150e6:	push   ebx
  4150e7:	clc    
  4150e8:	fist   DWORD PTR [ecx+edi*1-0x2c]
  4150ec:	lock repz cmp eax,DWORD PTR [edx-0x29b94c1f]
  4150f4:	and    ebx,edi
  4150f6:	sub    DWORD PTR [ebp+0x1c6a1275],0xa
  4150fd:	xor    ah,BYTE PTR [ebx]
  4150ff:	call   0x883b:0x7910fc4d
  415106:	mov    ds:0xff4f0067,eax
  41510b:	outs   dx,BYTE PTR ds:[esi]
  41510c:	dec    edx
  41510d:	outs   dx,BYTE PTR ds:[esi]
  41510e:	gs aaa 
  415110:	shr    BYTE PTR [edi+0x855e682],1
  415116:	pop    ecx
  415117:	(bad)  
  415118:	push   edi
  415119:	dec    eax
  41511a:	xor    al,0xb2
  41511c:	pusha  
  41511d:	push   cs
  41511e:	stos   BYTE PTR es:[edi],al
  41511f:	and    al,0x3c
  415121:	fbld   TBYTE PTR [esi+0x69]
  415124:	in     eax,dx
  415125:	stc    
  415126:	int    0xd0
  415128:	mov    ebx,0x5dc9570c
  41512d:	mov    BYTE PTR [edx-0x16],dh
  415130:	(bad)  
  415131:	mov    esp,0x6001e714
  415136:	inc    esi
  415137:	ja     0x4150ca
  415139:	xchg   edi,eax
  41513a:	mov    al,ds:0x11c6d0c1
  41513f:	adc    al,bh
  415141:	jnp    0x41512d
  415143:	adc    esi,ebp
  415145:	sar    DWORD PTR [edx+0x10],0xd5
  415149:	loopne 0x4150e9
  41514b:	dec    ebx
  41514c:	mov    ebx,0x5ccd42e2
  415151:	call   0x210645b4
  415156:	(bad)  
  41515a:	in     eax,dx
  41515b:	int3   
  41515c:	or     DWORD PTR [edx-0x7495a71a],0x926904e1
  415166:	or     eax,0xc0be1151
  41516b:	dec    edi
  41516c:	sub    edx,ebp
  41516e:	int3   
  41516f:	push   ds
  415170:	xchg   DWORD PTR [eax-0x1adb2ef7],ebp
  415176:	adc    ch,0x45
  415179:	mov    ch,0x1b
  41517b:	adc    eax,0x27951305
  415180:	sbb    eax,0x7b4bcc58
  415185:	dec    ebx
  415186:	leave  
  415187:	hlt    
  415188:	mov    cs,WORD PTR [edi+0x29]
  41518b:	mov    ds:0x8bd32e90,eax
  415190:	cmp    al,0x53
  415192:	pusha  
  415193:	in     eax,dx
  415194:	or     dl,bh
  415196:	scas   al,BYTE PTR es:[edi]
  415197:	and    BYTE PTR [ebx],cl
  415199:	jge    0x415146
  41519b:	sub    ebp,esi
  41519d:	xor    al,0x30
  41519f:	iret   
  4151a0:	xchg   edx,eax
  4151a1:	jg     0x415174
  4151a3:	popa   
  4151a4:	mov    ds:0x7c62256,al
  4151a9:	cmc    
  4151aa:	or     BYTE PTR [edx],0x86
  4151ad:	popa   
  4151ae:	rcl    BYTE PTR [edx+edx*2+0x195c4fa7],1
  4151b5:	jp     0x41514e
  4151b7:	jp     0x415220
  4151b9:	mov    al,0x34
  4151bb:	push   ebx
  4151bc:	sub    dl,BYTE PTR ds:0x5aaae1c1
  4151c2:	or     al,0x38
  4151c4:	sete   BYTE PTR [edi+0x65]
  4151c8:	cmp    eax,0xde14d3f0
  4151cd:	xor    ch,dl
  4151cf:	mov    bl,0xa7
  4151d1:	in     eax,0x53
  4151d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151d4:	sub    edx,DWORD PTR [ebp+0x74]
  4151d7:	hlt    
  4151d8:	push   ebx
  4151d9:	sbb    ebx,DWORD PTR [ecx]
  4151db:	push   ebp
  4151dc:	or     eax,0x882df9f8
  4151e1:	inc    ecx
  4151e2:	inc    ebp
  4151e3:	outs   dx,BYTE PTR ds:[esi]
  4151e4:	jg     0x415172
  4151e6:	inc    edx
  4151e7:	or     cl,BYTE PTR [esi-0x453d4e97]
  4151ed:	mov    bl,0x6b
  4151ef:	push   ebx
  4151f0:	out    0xcf,al
  4151f2:	sub    ebx,ebp
  4151f4:	sbb    al,BYTE PTR [edx-0x789118b3]
  4151fa:	cmp    BYTE PTR [ebx],dh
  4151fc:	lds    esp,FWORD PTR [ecx]
  4151fe:	mov    al,ds:0x8230a085
  415203:	pop    esi
  415204:	mov    bl,0x86
  415206:	jmp    0x2d79:0xcf068656
  41520d:	(bad)  
  41520e:	dec    BYTE PTR [ebp-0xe681234]
  415214:	push   es
  415215:	mov    bl,0xbd
  415217:	and    al,0x89
  415219:	jp     0x4151f1
  41521b:	stos   BYTE PTR es:[edi],al
  41521c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41521d:	and    esi,ebp
  41521f:	mov    ch,0xd5
  415221:	xchg   esp,eax
  415222:	push   eax
  415223:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415224:	xor    al,0xc4
  415226:	push   edi
  415227:	jmp    DWORD PTR [ebx-0x6fc7a046]
  41522d:	jno    0x4151f0
  41522f:	loope  0x4151d5
  415231:	scas   eax,DWORD PTR es:[edi]
  415232:	xor    DWORD PTR [esi+esi*1+0x2ab0e155],ebp
  415239:	ret    0xe98a
  41523c:	leave  
  41523d:	dec    edx
  41523e:	and    eax,0x64d78266
  415243:	mov    BYTE PTR [ecx+edx*8-0x1d],bl
  415247:	mov    esi,0x647b59e4
  41524c:	out    dx,al
  41524d:	fcom   st(6)
  41524f:	imul   esi,DWORD PTR [ecx],0x395ea436
  415255:	stos   BYTE PTR es:[edi],al
  415256:	xchg   ebp,eax
  415257:	ret    
  415258:	dec    esp
  415259:	mov    edx,0xad41adfe
  41525e:	or     DWORD PTR [ebp+0x8],esi
  415261:	gs int 0x28
  415264:	mov    dl,0x37
  415266:	lahf   
  415267:	(bad)  
  415268:	mov    esp,0x47a59281
  41526d:	ins    DWORD PTR es:[edi],dx
  41526e:	xchg   esp,eax
  41526f:	xchg   ecx,eax
  415270:	sahf   
  415271:	jno    0x415245
  415273:	pop    ecx
  415274:	xchg   ebp,eax
  415275:	cld    
  415276:	jl     0x415215
  415278:	imul   edi,DWORD PTR [eax],0x85ec4673
  41527e:	mov    cl,0x40
  415280:	ror    eax,1
  415282:	push   ss
  415283:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415284:	dec    ebx
  415285:	pop    ss
  415286:	mov    edi,0xb3bb35a1
  41528b:	and    BYTE PTR [eax+0x64],0xd8
  41528f:	scas   al,BYTE PTR es:[edi]
  415290:	xchg   edx,eax
  415291:	push   edi
  415292:	loopne 0x41524a
  415294:	cmp    al,BYTE PTR [esi-0x27866400]
  41529a:	or     dh,BYTE PTR [ecx-0x4ebfebb3]
  4152a0:	out    0x1c,al
  4152a2:	popf   
  4152a3:	call   0x2f999db4
  4152a8:	rol    cl,0x83
  4152ab:	imul   esi,DWORD PTR [ecx],0x70
  4152ae:	adc    dh,BYTE PTR [ecx-0x78630f77]
  4152b4:	aaa    
  4152b5:	sbb    edx,DWORD PTR [eax+ebp*8]
  4152b8:	sub    eax,DWORD PTR [eax]
  4152ba:	inc    esp
  4152bb:	lea    ecx,[edi]
  4152bd:	cmp    BYTE PTR ds:0xaff0710,0x34
  4152c4:	adc    BYTE PTR [edx-0x2e],dh
  4152c7:	rcl    DWORD PTR [ebp-0x3fd4528c],1
  4152cd:	repz dec edx
  4152cf:	out    dx,eax
  4152d0:	push   ebp
  4152d1:	scas   al,BYTE PTR es:[edi]
  4152d2:	add    eax,0xd3bbdae4
  4152d7:	ja     0x4152d1
  4152d9:	aad    0xae
  4152db:	and    bl,dl
  4152dd:	mov    al,0x23
  4152df:	lahf   
  4152e0:	iret   
  4152e1:	sub    DWORD PTR [edx],0x63
  4152e4:	arpl   WORD PTR [edi-0x5de4974e],di
  4152ea:	cdq    
  4152eb:	xor    ch,ch
  4152ed:	adc    esp,esp
  4152ef:	in     eax,dx
  4152f0:	sar    BYTE PTR [eax+0xc],cl
  4152f3:	mov    bh,0xc
  4152f5:	cli    
  4152f6:	ficomp DWORD PTR [edx]
  4152f8:	ins    BYTE PTR es:[edi],dx
  4152f9:	inc    edx
  4152fa:	iret   
  4152fb:	js     0x4152eb
  4152fd:	sbb    dl,cl
  4152ff:	shl    BYTE PTR [edi],0xf4
  415302:	xchg   esi,ecx
  415304:	fdivr  st(2),st
  415306:	xchg   eax,esi
  415308:	jge    0x415338
  41530a:	sbb    edi,DWORD PTR [ecx+0x53b7ec60]
  415310:	dec    ebx
  415311:	aam    0x3b
  415313:	mov    eax,ds:0xcc45841e
  415318:	fsub   QWORD PTR ds:[eax-0x2a]
  41531c:	imul   eax,DWORD PTR [esi-0x49],0xb06c37ec
  415323:	sbb    BYTE PTR [eax+0x72],0xcd
  415327:	outs   dx,BYTE PTR ds:[esi]
  415328:	cmp    bl,BYTE PTR [edi+ebp*4]
  41532b:	sti    
  41532c:	(bad)  
  41532d:	(bad)  
  41532e:	add    esi,DWORD PTR [edx+0x53]
  415331:	pop    esi
  415332:	push   ebx
  415333:	mov    dh,0xb6
  415335:	jns    0x41536c
  415337:	rol    BYTE PTR [edx-0x19],1
  41533a:	sub    DWORD PTR [ecx],edi
  41533c:	mov    eax,0xd6985d40
  415341:	mov    dh,0x7e
  415343:	jle    0x41532b
  415345:	jmp    0x415363
  415347:	(bad)  
  415348:	xchg   esp,eax
  415349:	(bad)
  41534d:	inc    esp
  41534e:	pop    ss
  41534f:	stc    
  415350:	fmul   st,st(4)
  415352:	sub    al,0x29
  415354:	lea    edx,[eax]
  415356:	xchg   BYTE PTR [edx+0x15],dl
  415359:	das    
  41535a:	bound  eax,QWORD PTR [edi]
  41535c:	hlt    
  41535d:	dec    eax
  41535e:	dec    esi
  41535f:	fs aaa 
  415361:	mov    WORD PTR [esi-0x697550f8],ss
  415367:	push   esi
  415368:	and    BYTE PTR [edi-0x22c86d14],ch
  41536e:	push   0xffffff8d
  415370:	not    BYTE PTR [edi-0x4ab5234]
  415376:	jg     0x415322
  415378:	xor    ebp,DWORD PTR [edx+ebx*4+0x6b]
  41537c:	jl     0x415317
  41537e:	pop    eax
  41537f:	sbb    esi,DWORD PTR [edi-0x45]
  415382:	loopne 0x4153a8
  415384:	jmp    0xc244fd02
  415389:	mov    al,0x12
  41538b:	dec    eax
  41538c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41538d:	fmul   st(0),st
  41538f:	add    eax,0xd
  415392:	test   BYTE PTR [ebx+0x7d],cl
  415395:	sbb    ah,BYTE PTR [esi]
  415397:	xchg   ecx,eax
  415398:	xor    BYTE PTR ds:0x1c0dcc11,cl
  41539e:	sti    
  41539f:	jmp    0x415359
  4153a1:	in     eax,0x42
  4153a3:	fstp   QWORD PTR [edx]
  4153a5:	addr16 mov eax,0xbe6204bc
  4153ab:	mov    ebp,0xba0e5850
  4153b0:	lahf   
  4153b1:	int3   
  4153b2:	add    bl,BYTE PTR [ecx-0x4b]
  4153b5:	xor    al,0x23
  4153b7:	js     0x415361
  4153b9:	popa   
  4153ba:	enter  0xf8d6,0x3b
  4153be:	bound  esi,QWORD PTR [edx-0x9]
  4153c1:	(bad)  
  4153c2:	dec    edx
  4153c3:	shl    BYTE PTR [eax-0x5d],0x61
  4153c7:	xor    eax,0xbd60d465
  4153cc:	xchg   edi,eax
  4153cd:	in     eax,dx
  4153ce:	inc    esi
  4153cf:	inc    esp
  4153d0:	lahf   
  4153d1:	ja     0x41536f
  4153d3:	(bad)  
  4153d4:	rcr    DWORD PTR [ebx],cl
  4153d6:	jnp    0x4153a4
  4153d8:	cmp    al,0xf4
  4153da:	pop    ebp
  4153db:	out    0xf,al
  4153dd:	jae    0x415402
  4153df:	in     eax,0xb
  4153e1:	addr16 loopne 0x4153bf
  4153e4:	and    BYTE PTR [eax-0x7b],bh
  4153e7:	mov    dh,0xea
  4153e9:	lods   al,BYTE PTR ds:[esi]
  4153ea:	in     eax,0x26
  4153ec:	into   
  4153ed:	mov    esi,0xb891303d
  4153f2:	(bad)  
  4153f3:	sub    al,0xf9
  4153f5:	shl    DWORD PTR [edi+ebp*8],cl
  4153f8:	push   edi
  4153f9:	push   ss
  4153fa:	repz push ds
  4153fc:	stc    
  4153fd:	cmc    
  4153fe:	jbe    0x41540f
  415400:	xchg   edi,eax
  415401:	jb     0x41546a
  415403:	cmp    al,0x39
  415405:	jnp    0x415458
  415407:	xchg   esp,eax
  415408:	lods   eax,DWORD PTR ds:[esi]
  415409:	int3   
  41540a:	mov    dh,0xbf
  41540c:	inc    esi
  41540d:	out    dx,eax
  41540e:	aas    
  41540f:	into   
  415410:	adc    ebp,DWORD PTR [ecx]
  415412:	jo     0x4153bb
  415414:	sub    ecx,edi
  415416:	mov    BYTE PTR [edi],dl
  415418:	sahf   
  415419:	in     al,dx
  41541a:	jns    0x415440
  41541c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41541d:	fucomip st,st(4)
  41541f:	xlat   BYTE PTR ds:[ebx]
  415420:	pop    ecx
  415421:	mov    al,ds:0xc15ebf56
  415426:	les    esp,FWORD PTR [ebp+0x6c]
  415429:	loop   0x41548d
  41542b:	mov    dh,0x3d
  41542d:	mov    bl,0x1e
  41542f:	lods   al,BYTE PTR ds:[esi]
  415430:	add    al,0x9
  415432:	xor    dl,BYTE PTR [eax-0x26b46907]
  415438:	add    BYTE PTR [edi],cl
  41543a:	or     BYTE PTR [ebx+0x35],bl
  41543d:	mov    edx,0xa5677fe6
  415442:	adc    BYTE PTR [ecx-0x14],ch
  415445:	mov    eax,ds:0x68ab2e3a
  41544a:	loopne 0x415486
  41544c:	push   ecx
  41544d:	pop    ebx
  41544e:	dec    esi
  41544f:	mov    edx,0xc6cbc73b
  415454:	mov    BYTE PTR [esi-0x5b],ah
  415457:	mov    ecx,0xe5b04301
  41545c:	mov    DWORD PTR [edx],esp
  41545e:	inc    ecx
  41545f:	xchg   esp,eax
  415460:	sbb    esp,edi
  415462:	ds dec ebx
  415464:	push   es
  415465:	sbb    BYTE PTR [edx+0x0],dl
  415468:	dec    esp
  415469:	or     BYTE PTR [esi-0x6],bh
  41546c:	stc    
  41546d:	pop    eax
  41546e:	outs   dx,BYTE PTR ds:[esi]
  41546f:	cmp    al,BYTE PTR [edi+edx*2]
  415472:	fsubr  QWORD PTR [eax+0x37b020fe]
  415478:	movups xmm1,xmm1
  41547b:	adc    al,0xa8
  41547d:	jmp    0x4f44:0x42301a67
  415484:	mov    edi,0xf95d7ed2
  415489:	jns    0x4154bf
  41548b:	mov    edi,0x499e7eb6
  415490:	out    dx,al
  415491:	pop    esp
  415492:	xor    al,0xac
  415494:	adc    DWORD PTR [esi-0x5bdd049c],ecx
  41549a:	jns    0x41548c
  41549c:	ja     0x415463
  41549e:	mov    esp,0x851f4cfa
  4154a3:	imul   ebp,DWORD PTR [ecx-0x23105d1c],0xffffffc6
  4154aa:	lds    esp,FWORD PTR [esi+0xd]
  4154ad:	lods   al,BYTE PTR ds:[esi]
  4154ae:	sub    ch,BYTE PTR [esp+esi*8]
  4154b1:	sbb    DWORD PTR [ecx-0x71],edi
  4154b4:	xor    ah,ch
  4154b6:	inc    ebp
  4154b7:	lea    ebp,[esp+ebp*4]
  4154ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154bb:	mov    ch,0x65
  4154bd:	xor    eax,0x5e91ecd
  4154c2:	aad    0x14
  4154c4:	fwait
  4154c5:	pinsrw mm7,WORD PTR ds:0xe4238970,0x26
  4154cd:	fisttp WORD PTR [ecx+0x7a]
  4154d0:	dec    ebx
  4154d1:	dec    eax
  4154d2:	pop    ecx
  4154d3:	add    eax,DWORD PTR [ebx-0x30]
  4154d6:	js     0x41545f
  4154d8:	sub    dl,dh
  4154da:	xchg   esi,eax
  4154db:	or     eax,0xec4a3853
  4154e0:	cmp    BYTE PTR [esi-0x9de23b9],ah
  4154e6:	aad    0xd
  4154e8:	mov    ah,0x9d
  4154ea:	loope  0x415522
  4154ec:	(bad)  
  4154ed:	sub    bl,bh
  4154ef:	adc    eax,0x19e643f3
  4154f4:	sbb    ah,BYTE PTR [esi+0x132f162e]
  4154fa:	(bad)  
  4154fb:	jb     0x4154ac
  4154fd:	mov    ebp,0x4cce445f
  415502:	sub    ch,BYTE PTR [eax+eax*4+0x5c36a762]
  415509:	push   ebx
  41550a:	mov    WORD PTR [edx+0x41],fs
  41550d:	jnp    0x41554f
  41550f:	jns    0x415492
  415511:	mov    ebx,0x43be45a4
  415516:	(bad)  [ebx+0x5c]
  415519:	jmp    0x7cb48caf
  41551e:	cld    
  41551f:	stos   BYTE PTR es:[edi],al
  415520:	mov    BYTE PTR [esi],bl
  415522:	push   ss
  415523:	cdq    
  415524:	call   0xb1eba890
  415529:	mov    esi,0x16e62b40
  41552e:	add    DWORD PTR [edi-0x30],0xffffffa3
  415532:	mov    dl,0x1d
  415534:	data16 addr16 sub bh,dh
  415538:	and    dh,dh
  41553a:	lds    eax,FWORD PTR [edx+ebp*1-0x2efa132f]
  415541:	ja     0x415507
  415543:	call   0x34db:0xb78fa5c7
  41554a:	retf   
  41554b:	inc    ebx
  41554c:	pcmpeqb mm0,QWORD PTR [ebp+0x32c0180a]
  415553:	lods   al,BYTE PTR ds:[esi]
  415554:	shl    BYTE PTR [eax],cl
  415556:	daa    
  415557:	mov    DWORD PTR [ebp+0x30],0xc1a80ec0
  41555e:	mov    dl,ch
  415560:	clc    
  415561:	adc    DWORD PTR [esi-0x1c],esi
  415564:	inc    esi
  415565:	fmulp  st(3),st
  415567:	sub    ecx,DWORD PTR [ebx]
  415569:	mov    ss,WORD PTR [ebx-0xe]
  41556c:	out    dx,eax
  41556d:	xor    al,0xe5
  41556f:	(bad)  
  415570:	jae    0x4155a4
  415572:	std    
  415573:	sbb    edx,DWORD PTR [eax-0x7f51ecf3]
  415579:	fwait
  41557a:	jge    0x41556a
  41557c:	adc    DWORD PTR [edi-0x75a01895],0xeaa7cdf8
  415586:	sbb    ebp,edx
  415588:	jge    0x415522
  41558a:	inc    ebx
  41558b:	js     0x4155b8
  41558d:	call   0xf1ba053e
  415592:	cmp    eax,0x414edd07
  415597:	jp     0x415592
  415599:	adc    al,0x0
  41559b:	lods   eax,DWORD PTR ds:[esi]
  41559c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41559d:	jge    0x415608
  41559f:	out    0x5,al
  4155a1:	ja     0x41552a
  4155a3:	sbb    eax,0xbe357d11
  4155a8:	sbb    DWORD PTR [ecx-0x13],eax
  4155ab:	not    BYTE PTR [edi+0x54]
  4155ae:	popa   
  4155af:	jo     0x4155e8
  4155b1:	popa   
  4155b2:	or     al,0xbe
  4155b4:	fisttp QWORD PTR [ebp+0x6d]
  4155b7:	stos   BYTE PTR es:[edi],al
  4155b8:	jns    0x41562e
  4155ba:	cmp    DWORD PTR [edx-0x3c817e1a],0xf608a066
  4155c4:	pop    DWORD PTR [ecx+0x20]
  4155c7:	mov    ecx,0x7c0d3b64
  4155cc:	mov    WORD PTR [edx+0x5b18fbe9],?
  4155d2:	(bad)  
  4155d3:	and    BYTE PTR [ebx],al
  4155d5:	mov    BYTE PTR ds:0x8e228f61,ah
  4155db:	xchg   BYTE PTR ds:0x7d7f59bc,dh
  4155e1:	or     DWORD PTR [edi-0x354a4cbe],esi
  4155e7:	cs test eax,0xd068c49d
  4155ed:	imul   edx,DWORD PTR [ebp+0x10],0xffffffa5
  4155f1:	xchg   esp,eax
  4155f2:	mov    cl,0x56
  4155f4:	pusha  
  4155f5:	and    BYTE PTR [edx-0x5e],ah
  4155f8:	(bad)  
  4155f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155fa:	push   0x8e1acc13
  4155ff:	push   ecx
  415600:	dec    ebx
  415601:	out    dx,al
  415602:	aam    0x4c
  415604:	out    0x11,al
  415606:	push   esi
  415607:	mov    ah,0x78
  415609:	xchg   edi,eax
  41560a:	dec    esp
  41560b:	retf   
  41560c:	cmp    DWORD PTR [ecx-0x9],edx
  41560f:	inc    ebp
  415610:	fs ds push ebx
  415613:	or     al,0x6
  415615:	rcr    BYTE PTR [ebx+ebp*8+0x33dc1fb1],1
  41561c:	mov    ds:0x5f442897,al
  415621:	or     ecx,DWORD PTR [eax-0x9aa654f]
  415627:	jns    0x415691
  415629:	fist   WORD PTR [edi-0x6a]
  41562c:	(bad)  
  41562d:	mov    ebx,0xf08f56d5
  415632:	add    BYTE PTR [ebx-0x6],bh
  415635:	jbe    0x41565b
  415637:	xchg   bh,bl
  415639:	jne    0x415687
  41563b:	call   0x3db87ac9
  415640:	dec    eax
  415641:	fs adc BYTE PTR fs:[esi+edx*8-0x6a],cl
  415647:	pop    ebp
  415648:	adc    dl,bh
  41564a:	ror    DWORD PTR [ecx+0x609f6a03],cl
  415650:	(bad)  
  415651:	pop    ds
  415652:	push   esp
  415653:	pop    edi
  415654:	inc    ebx
  415655:	xor    bl,BYTE PTR [edi-0xb]
  415658:	not    edx
  41565a:	(bad)  
  41565b:	addr16 mov esi,0xa9e606b
  415661:	fldenv [esi]
  415663:	pushf  
  415664:	aam    0x70
  415666:	sub    DWORD PTR [ecx-0x70],esp
  415669:	pop    es
  41566a:	mov    bl,0xbf
  41566c:	stc    
  41566d:	jnp    0x41565c
  41566f:	ins    BYTE PTR es:[edi],dx
  415670:	add    eax,0xb5cb1507
  415675:	jecxz  0x41565a
  415677:	(bad)  
  415678:	xchg   edx,eax
  415679:	sbb    BYTE PTR [ebx-0x4087c052],0xf2
  415680:	clc    
  415681:	sub    BYTE PTR [edx+0x70d09e06],dl
  415687:	int    0x9b
  415689:	adc    ah,BYTE PTR [edx+0x4aba49eb]
  41568f:	xchg   edx,eax
  415690:	call   0xb2039c8d
  415695:	add    al,0xb7
  415697:	pop    esp
  415698:	popa   
  415699:	fstp   TBYTE PTR [ebp+0x2a3caf76]
  41569f:	sub    BYTE PTR [ecx],0xcb
  4156a2:	mov    BYTE PTR [ecx+0x3e],ch
  4156a5:	test   BYTE PTR [ebp-0xedfd883],bh
  4156ab:	mov    cl,0x82
  4156ad:	iret   
  4156ae:	inc    esp
  4156af:	push   edi
  4156b0:	pop    edi
  4156b1:	cmp    BYTE PTR [edi-0x2b],bl
  4156b4:	pop    ecx
  4156b5:	and    eax,0x810f2b0d
  4156ba:	or     al,0xf2
  4156bc:	or     BYTE PTR [eax+0x36db7c0a],dh
  4156c2:	outs   dx,BYTE PTR ds:[esi]
  4156c3:	sahf   
  4156c4:	mov    dh,0x2f
  4156c6:	add    esp,DWORD PTR [eax]
  4156c8:	pop    ecx
  4156c9:	es cmc 
  4156cb:	fimul  WORD PTR [ecx-0x557ce1b9]
  4156d1:	add    dl,bh
  4156d3:	push   esp
  4156d4:	dec    ecx
  4156d5:	pop    ds
  4156d6:	inc    esi
  4156d7:	pusha  
  4156d8:	or     eax,0x905c1cc3
  4156dd:	jb     0x415711
  4156df:	dec    ecx
  4156e0:	lds    ebp,FWORD PTR [esp+edx*2]
  4156e3:	mov    cl,0x90
  4156e5:	les    edi,FWORD PTR [ebp-0x7e]
  4156e8:	ins    BYTE PTR es:[edi],dx
  4156e9:	lahf   
  4156ea:	dec    edx
  4156eb:	xchg   esi,eax
  4156ec:	cmp    BYTE PTR [ebx-0x6d],bh
  4156ef:	mov    al,0xff
  4156f1:	mov    ds:0x904e4b5e,eax
  4156f6:	mov    ecx,ebp
  4156f8:	mov    edx,0xff05f0d8
  4156fd:	pop    esp
  4156fe:	adc    al,0xad
  415700:	and    edx,DWORD PTR [esi]
  415702:	repnz mov dh,0xd3
  415705:	and    edx,DWORD PTR [eax-0x3979419c]
  41570b:	xor    DWORD PTR [ebp-0x9554380],esi
  415711:	jbe    0x41570b
  415713:	jmp    0x4156b1
  415715:	push   ds
  415716:	cmc    
  415717:	pushf  
  415718:	jns    0x4156ad
  41571a:	jmp    0xeb57:0xacb8e606
  415721:	mov    al,ds:0xd2b90989
  415726:	std    
  415727:	mov    gs,WORD PTR [ecx+0x16]
  41572a:	int    0xbe
  41572c:	jmp    0x415731
  41572e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41572f:	mov    ecx,0x5a84c728
  415734:	js     0x41578e
  415736:	fld    QWORD PTR [ebx-0x7ab40a20]
  41573c:	mov    al,0x32
  41573e:	pop    eax
  41573f:	ror    DWORD PTR [edi],1
  415741:	sub    eax,0x38c755db
  415746:	mov    ds:0x861379da,al
  41574b:	mov    ds:0x91acccb2,eax
  415750:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415751:	adc    eax,0x70880920
  415756:	je     0x4156fa
  415758:	xchg   ecx,eax
  415759:	add    eax,0x43691c64
  41575e:	push   ecx
  41575f:	leave  
  415760:	and    ebp,DWORD PTR [esi]
  415762:	mov    WORD PTR [edi-0x13933804],ds
  415768:	dec    esi
  41576a:	jns    0x4157c4
  41576c:	dec    ebx
  41576d:	dec    edx
  41576e:	push   ebx
  41576f:	pop    es
  415770:	or     ecx,DWORD PTR [ebx+0x6073b326]
  415776:	dec    ebx
  415777:	cmc    
  415778:	addr16 data16 adc al,0x38
  41577c:	xchg   esp,eax
  41577d:	and    DWORD PTR [ebx-0x3b],edi
  415780:	sti    
  415781:	mov    ebp,0xe5481bfb
  415786:	ffree  st(7)
  415788:	mov    ch,0x93
  41578a:	stos   BYTE PTR es:[edi],al
  41578b:	dec    ecx
  41578c:	inc    eax
  41578d:	mov    ebx,0x6a248a70
  415792:	inc    edi
  415793:	cmp    al,0x42
  415795:	aaa    
  415796:	jl     0x415797
  415798:	cwde   
  415799:	jo     0x41576f
  41579b:	test   al,0x3f
  41579d:	retf   
  41579e:	dec    esi
  41579f:	add    BYTE PTR [ebx-0x289db52f],cl
  4157a5:	idiv   BYTE PTR [eax+ebp*8+0x62]
  4157a9:	scas   al,BYTE PTR es:[edi]
  4157aa:	add    BYTE PTR [esi],dl
  4157ac:	retf   0x2344
  4157af:	push   ds
  4157b0:	outs   dx,DWORD PTR ds:[esi]
  4157b1:	cmp    bl,BYTE PTR [edx+0x54d6df52]
  4157b7:	xlat   BYTE PTR ds:[ebx]
  4157b8:	enter  0xc917,0xe0
  4157bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157bd:	pop    edx
  4157be:	enter  0x73ea,0x63
  4157c2:	xor    dh,dh
  4157c4:	adc    BYTE PTR [ebx],al
  4157c6:	xlat   BYTE PTR ds:[ebx]
  4157c7:	xchg   edx,eax
  4157c8:	xor    al,0x23
  4157ca:	push   cs
  4157cb:	in     al,dx
  4157cc:	mov    eax,ds:0x47fb8d28
  4157d1:	mov    eax,DWORD PTR [esi+0x7a]
  4157d4:	pop    ds
  4157d5:	mov    ecx,edi
  4157d7:	ss xor al,0x1c
  4157da:	popf   
  4157db:	xlat   BYTE PTR ds:[ebx]
  4157dc:	xchg   edi,eax
  4157dd:	je     0x415789
  4157df:	add    eax,0xb28a7112
  4157e4:	loope  0x415819
  4157e6:	test   ch,0x5d
  4157e9:	ror    DWORD PTR [edi],cl
  4157eb:	pop    es
  4157ec:	inc    eax
  4157ed:	mov    edi,0x33491eb
  4157f2:	mov    ebp,0xacc46943
  4157f7:	mov    dh,0xd1
  4157f9:	sbb    al,0x46
  4157fb:	sub    al,0x24
  4157fd:	inc    ebp
  4157fe:	shr    BYTE PTR [eax+0x5c25d070],1
  415804:	mov    edi,0x536ee39f
  415809:	out    0xa6,eax
  41580b:	pop    esp
  41580c:	jle    0x41580c
  41580e:	loopne 0x415886
  415810:	cmp    edx,DWORD PTR [ebx+ebp*2-0x21]
  415814:	ficomp DWORD PTR [ecx-0x12088c4e]
  41581a:	repnz add BYTE PTR [eax-0x75bcd4c],dh
  415821:	mov    dh,0xf0
  415823:	sub    esp,DWORD PTR [ecx-0x499cac2f]
  415829:	clc    
  41582a:	pop    ebp
  41582b:	lods   al,BYTE PTR ds:[esi]
  41582c:	add    BYTE PTR [edi],cl
  41582e:	sbb    eax,0xa8f99b1c
  415833:	fsub   DWORD PTR [ecx]
  415835:	dec    eax
  415836:	dec    esp
  415837:	push   ecx
  415838:	jns    0x4157da
  41583a:	or     eax,0x55aeab37
  41583f:	stos   BYTE PTR es:[edi],al
  415840:	xlat   BYTE PTR ds:[ebx]
  415841:	push   esp
  415842:	xchg   ebx,eax
  415843:	out    dx,eax
  415844:	mov    BYTE PTR [ebp+eax*2+0x70468c38],dl
  41584b:	(bad)  
  41584c:	aam    0xbe
  41584e:	and    edi,ebx
  415850:	mov    eax,esi
  415852:	sbb    BYTE PTR [eax+0x542cbbfe],0x13
  415859:	(bad)
  41585d:	pop    esi
  41585e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41585f:	mov    dl,BYTE PTR [esi+0x1]
  415862:	mov    dh,0x3b
  415864:	sbb    dh,ah
  415866:	ret    0x26b4
  415869:	jbe    0x41586a
  41586b:	or     bh,ch
  41586d:	xchg   ecx,eax
  41586e:	pop    ds
  41586f:	cmp    al,0x87
  415871:	xchg   ebp,eax
  415872:	jmp    0x415806
  415874:	lods   al,BYTE PTR ds:[esi]
  415875:	and    BYTE PTR [esi-0x130a5d91],dl
  41587b:	add    al,0x1e
  41587d:	cmp    eax,0xd4e5fd55
  415882:	sbb    ch,BYTE PTR [ecx+0x65]
  415885:	or     ebp,DWORD PTR [eax]
  415887:	or     ah,al
  415889:	jmp    FWORD PTR [edi+0xc]
  41588c:	mov    ss,WORD PTR [esi+0xc964834]
  415892:	jb     0x4158a6
  415894:	dec    esp
  415895:	shl    BYTE PTR [edx-0x11],cl
  415898:	mov    ebx,0x58641fa7
  41589d:	stc    
  41589e:	or     al,0x9
  4158a0:	or     cl,bl
  4158a2:	or     al,0x4f
  4158a4:	out    dx,al
  4158a5:	sti    
  4158a6:	int    0x4f
  4158a8:	pop    esi
  4158a9:	add    eax,ecx
  4158ab:	pop    ebx
  4158ac:	push   edi
  4158ad:	mov    bh,0xf1
  4158af:	outs   dx,DWORD PTR ds:[esi]
  4158b0:	sub    al,0x87
  4158b2:	das    
  4158b3:	xchg   DWORD PTR [ebp+edi*2-0x55429099],esi
  4158ba:	push   0xaff9f7d4
  4158bf:	inc    esp
  4158c0:	int3   
  4158c1:	scas   eax,DWORD PTR es:[edi]
  4158c2:	fist   DWORD PTR [ebx+0x46b66467]
  4158c8:	pop    ebp
  4158c9:	bound  edi,QWORD PTR [ecx-0x64bb2f14]
  4158cf:	gs add al,0x14
  4158d2:	inc    eax
  4158d3:	sbb    cl,BYTE PTR [ecx+0x60]
  4158d6:	mov    ds:0xff9c62c9,al
  4158db:	cmp    cl,ah
  4158dd:	or     BYTE PTR [eax-0xd9d94a1],al
  4158e3:	fimul  WORD PTR [edi+edx*4]
  4158e6:	sub    BYTE PTR cs:[ecx-0x30e3b0ad],dh
  4158ed:	sar    BYTE PTR [edx+0x27],cl
  4158f0:	rcr    BYTE PTR [ebp+0x2d02d8a4],1
  4158f6:	inc    DWORD PTR gs:[esi-0x17a8996b]
  4158fd:	daa    
  4158fe:	into   
  4158ff:	into   
  415900:	add    edi,DWORD PTR [edx]
  415902:	rcl    bl,1
  415904:	bound  ebp,QWORD PTR [eax+0x8]
  415907:	into   
  415908:	jmp    0xf5f00de7
  41590d:	lock adc edx,DWORD PTR [edx]
  415910:	pop    ebp
  415911:	cwde   
  415912:	sbb    DWORD PTR [eax],esi
  415914:	mov    bl,0x4b
  415916:	sbb    DWORD PTR [eax-0x63a88244],0xffffff9b
  41591d:	sbb    al,0xee
  41591f:	popa   
  415920:	jecxz  0x415973
  415922:	and    ah,bh
  415924:	pop    es
  415925:	sbb    eax,0x92448121
  41592a:	fstp   TBYTE PTR [eax+0x33393ffb]
  415930:	xchg   edi,eax
  415931:	lods   eax,DWORD PTR ds:[esi]
  415932:	inc    ecx
  415933:	xchg   ebx,eax
  415934:	ret    
  415935:	xchg   DWORD PTR [edi+0x11],esi
  415938:	gs dec ebp
  41593a:	inc    eax
  41593b:	lahf   
  41593c:	pop    es
  41593d:	or     DWORD PTR [ecx-0x2d3115ea],esi
  415943:	mov    bh,0x22
  415945:	push   ebx
  415946:	(bad)  
  415947:	xchg   esi,eax
  415948:	es (bad) 
  41594b:	adc    dl,BYTE PTR [ecx+0x28]
  41594e:	push   edx
  41594f:	repnz mov dl,0xe5
  415952:	sbb    al,0xd0
  415954:	mov    al,ds:0xc9095262
  415959:	add    eax,DWORD PTR [edx+0x3d5bcbda]
  41595f:	lahf   
  415960:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415961:	cmp    edi,DWORD PTR [ebx]
  415963:	cmp    cl,ch
  415965:	je     0x4159b6
  415967:	rcr    DWORD PTR [edx+0x76ac9ed6],1
  41596d:	mov    cl,0x4a
  41596f:	xor    DWORD PTR [edi+0x14],edi
  415972:	stos   DWORD PTR es:[edi],eax
  415973:	adc    eax,0x1f777ef
  415978:	outs   dx,BYTE PTR ds:[esi]
  415979:	mov    dh,0x31
  41597b:	cli    
  41597c:	ins    DWORD PTR es:[edi],dx
  41597d:	out    dx,eax
  41597e:	push   es
  41597f:	mov    ecx,0xd221b899
  415984:	sahf   
  415985:	inc    edi
  415986:	push   0xffffffc8
  415988:	out    dx,al
  415989:	mov    DWORD PTR ds:0x8be1170,0xdced5f98
  415993:	rcr    DWORD PTR [esi+ebx*4-0x1e],1
  415997:	xchg   esp,eax
  415998:	lds    eax,FWORD PTR [ebx+0x1]
  41599b:	cld    
  41599c:	or     al,0x9f
  41599e:	xchg   edi,eax
  41599f:	mov    ah,0x5d
  4159a1:	nop
  4159a2:	daa    
  4159a3:	sbb    al,0xd2
  4159a5:	mov    ds:0x6c97e552,al
  4159aa:	test   al,0xa6
  4159ac:	adc    al,0x1
  4159ae:	cdq    
  4159af:	daa    
  4159b0:	adc    al,0xed
  4159b2:	and    BYTE PTR [eax],0x38
  4159b5:	cli    
  4159b6:	cdq    
  4159b7:	rcr    BYTE PTR [esi+edi*1+0x4ba599e6],1
  4159be:	push   0x3020f30f
  4159c3:	jb     0x41598c
  4159c5:	leave  
  4159c6:	sbb    BYTE PTR [eax-0x24],bl
  4159c9:	jbe    0x415a0b
  4159cb:	jp     0x4159a9
  4159cd:	popa   
  4159ce:	jnp    0x415a26
  4159d0:	clc    
  4159d1:	push   ebx
  4159d2:	test   BYTE PTR [ebp+0x4],al
  4159d5:	inc    eax
  4159d6:	pop    esp
  4159d7:	xchg   ecx,eax
  4159d8:	mov    ebp,0xe12b6ff2
  4159dd:	fsubr  QWORD PTR [esi-0x44]
  4159e0:	ja     0x4159d3
  4159e2:	das    
  4159e3:	fcmovbe st,st(3)
  4159e5:	lea    edi,[esi]
  4159e7:	and    BYTE PTR [ecx],al
  4159e9:	jle    0x41598e
  4159eb:	mov    bl,0xb9
  4159ed:	dec    ebx
  4159ee:	inc    esp
  4159ef:	xchg   ch,bh
  4159f1:	repz shl esi,1
  4159f4:	test   bl,0x17
  4159f7:	aas    
  4159f8:	pop    esi
  4159f9:	mov    al,0x17
  4159fb:	repz aaa 
  4159fd:	inc    edi
  4159fe:	push   edi
  4159ff:	jg     0x415a3e
  415a01:	adc    eax,0xd11002e1
  415a06:	pavgw  mm5,QWORD PTR [eax+0x6d]
  415a0a:	inc    ebx
  415a0b:	fwait
  415a0c:	and    eax,0x2
  415a0f:	xor    eax,0x65ef35f1
  415a14:	add    bh,cl
  415a16:	sub    eax,0x37b203e5
  415a1b:	adc    esp,ebx
  415a1d:	retf   
  415a1e:	inc    ebx
  415a1f:	fs xchg esp,eax
  415a21:	frstor [edi+0x28]
  415a24:	or     eax,0x61fbc912
  415a29:	xor    al,0xaf
  415a2b:	js     0x4159f1
  415a2d:	sar    bl,1
  415a2f:	dec    ebp
  415a30:	xchg   ecx,eax
  415a31:	add    al,0xde
  415a33:	push   ecx
  415a34:	enter  0x2712,0x29
  415a38:	jle    0x4159eb
  415a3a:	xor    eax,DWORD PTR [ebp+0x33]
  415a3d:	dec    edx
  415a3e:	sbb    dh,BYTE PTR [ecx+edi*4+0x29d5ce57]
  415a45:	mov    ebx,0xf70c864d
  415a4a:	ficom  DWORD PTR [ebp-0x2c6e4b5]
  415a50:	inc    esi
  415a51:	lea    esi,[esi+0x66]
  415a54:	repz jg 0x415a61
  415a57:	mov    ebp,0x1f009dbc
  415a5c:	pop    ebx
  415a5d:	jl     0x415a81
  415a5f:	adc    eax,0x4416541e
  415a64:	xchg   BYTE PTR [ebp-0x2d],bl
  415a67:	mov    dl,0x3f
  415a69:	imul   eax,ebp,0x8c066e0d
  415a6f:	jmp    0x9e6:0x6b2c7746
  415a76:	shl    BYTE PTR [ecx+0x33ba9298],0x71
  415a7d:	push   eax
  415a7e:	pop    ecx
  415a7f:	jmp    0x7867:0xa9c71731
  415a86:	mov    ch,0xc8
  415a88:	dec    ecx
  415a89:	push   es
  415a8a:	or     ebp,edx
  415a8c:	mov    edi,0x62a85cff
  415a91:	adc    DWORD PTR gs:[esi-0x289c7b24],esp
  415a98:	mov    ah,0x4
  415a9a:	aad    0x21
  415a9c:	nop
  415a9d:	inc    ebp
  415a9e:	xchg   ebp,eax
  415a9f:	push   edi
  415aa0:	xor    edi,0xe798d87c
  415aa6:	adc    DWORD PTR ds:0x639f6e91,edx
  415aac:	xor    DWORD PTR [ebp+0x1d],ebp
  415aaf:	(bad)
  415ab2:	mov    dh,0x75
  415ab4:	(bad)  
  415ab5:	dec    esi
  415ab6:	scas   eax,DWORD PTR es:[edi]
  415ab7:	adc    DWORD PTR [eax-0x118a0ca],ebp
  415abd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415abe:	mov    edx,0x458838be
  415ac3:	ins    BYTE PTR es:[edi],dx
  415ac4:	pop    ds
  415ac5:	mov    al,0x20
  415ac7:	push   ebx
  415ac8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ac9:	pop    esp
  415aca:	aas    
  415acb:	les    ecx,FWORD PTR [eax+0x8]
  415ace:	shr    BYTE PTR [ebp+0x12],0x4c
  415ad2:	or     edx,ebx
  415ad4:	hlt    
  415ad5:	jmp    0x415a8c
  415ad7:	fld    DWORD PTR [eax]
  415ad9:	mov    ds:0x7a8577ec,eax
  415ade:	adc    edi,DWORD PTR [ecx-0x24]
  415ae1:	imul   ebp,esi,0xffffffc8
  415ae4:	pop    ebp
  415ae5:	or     eax,0x60631700
  415aea:	fiadd  DWORD PTR [eax-0x16]
  415aed:	loope  0x415b43
  415aef:	sbb    WORD PTR [edx+0x72],bx
  415af3:	cmp    eax,0x55f31a8b
  415af8:	adc    eax,0x765d748e
  415afd:	xchg   ebx,eax
  415afe:	dec    esi
  415aff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b00:	push   edx
  415b01:	xor    eax,0x6aab75f1
  415b06:	repnz cs push 0xffffffc6
  415b0a:	mov    esp,0x608d3ec0
  415b0f:	sub    ch,BYTE PTR [esi+0x73]
  415b12:	sbb    al,BYTE PTR [ebx-0x50]
  415b15:	jae    0x415abd
  415b17:	sbb    DWORD PTR [esi+0x68],eax
  415b1a:	sub    eax,DWORD PTR [edx]
  415b1c:	and    al,0xff
  415b1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b1f:	cmp    eax,0x157b0b37
  415b24:	mov    al,ds:0x303321bc
  415b29:	leave  
  415b2a:	xchg   bl,bh
  415b2c:	fidivr WORD PTR [edi]
  415b2e:	sub    BYTE PTR [edx-0x52e0a80a],al
  415b34:	out    dx,al
  415b35:	jne    0x415b48
  415b37:	push   cs
  415b38:	mov    ecx,fs
  415b3a:	cwde   
  415b3b:	out    dx,eax
  415b3c:	out    dx,al
  415b3d:	pop    esi
  415b3e:	jne    0x415bb8
  415b40:	je     0x415b30
  415b42:	outs   dx,DWORD PTR ds:[esi]
  415b43:	jo     0x415b3f
  415b45:	add    BYTE PTR [esi+0x15],dl
  415b48:	add    BYTE PTR [esp+ebp*4],bh
  415b4b:	sbb    eax,0x990cd72b
  415b50:	in     eax,dx
  415b51:	fidivr DWORD PTR [edx+0x6bb8ee91]
  415b57:	and    eax,DWORD PTR [eax-0x5f]
  415b5a:	leave  
  415b5b:	lods   eax,DWORD PTR ds:[esi]
  415b5c:	and    bl,BYTE PTR [edi-0x43334325]
  415b62:	popf   
  415b63:	stc    
  415b64:	leave  
  415b65:	test   bl,al
  415b67:	mov    ecx,0xbe005b67
  415b6c:	mov    eax,ds:0xc6c5ff57
  415b71:	jbe    0x415b2c
  415b73:	test   BYTE PTR [ebx],bh
  415b75:	mov    bl,BYTE PTR [ebx]
  415b77:	pop    eax
  415b78:	rcr    ch,0xac
  415b7b:	mov    edx,0xaad51802
  415b80:	fimul  WORD PTR [ebx+0x12395d50]
  415b86:	and    BYTE PTR [ecx+0x24],0xe2
  415b8a:	push   ecx
  415b8b:	rcl    ch,1
  415b8d:	mov    ebp,0x38e8aed0
  415b92:	aaa    
  415b93:	or     DWORD PTR [edi],esp
  415b95:	retf   0xddb3
  415b98:	rcl    ch,cl
  415b9a:	call   0x5b3f:0x69255d83
  415ba1:	sbb    dl,BYTE PTR [edi+0xa]
  415ba4:	sub    eax,0x46d92f44
  415ba9:	sub    bh,BYTE PTR [edi]
  415bab:	push   esp
  415bac:	mov    ecx,0x5211232b
  415bb1:	jl     0x415b39
  415bb3:	sub    eax,0xc9e4b08e
  415bb8:	loopne 0x415c0e
  415bba:	xchg   edx,eax
  415bbb:	jg     0x415c15
  415bbd:	pushf  
  415bbe:	in     al,0x8f
  415bc0:	dec    esp
  415bc1:	cwde   
  415bc2:	fiadd  DWORD PTR [ecx+0x40e82f95]
  415bc8:	xlat   BYTE PTR ds:[ebx]
  415bc9:	adc    BYTE PTR [ecx-0x6bf6a073],cl
  415bcf:	push   eax
  415bd0:	cmp    edi,esp
  415bd2:	pop    esi
  415bd3:	retf   
  415bd4:	test   esp,esi
  415bd6:	xor    eax,0xa6e44278
  415bdb:	pop    es
  415bdc:	sbb    al,0x52
  415bde:	dec    ebp
  415bdf:	adc    DWORD PTR [edx],edi
  415be1:	mov    ebx,0xe4eb6bbc
  415be6:	sbb    al,0xcf
  415be8:	cmp    bh,cl
  415bea:	neg    BYTE PTR [esi]
  415bec:	dec    ebp
  415bed:	addr16 pop esp
  415bef:	sub    eax,0xc3cceeb3
  415bf4:	lods   eax,DWORD PTR ds:[esi]
  415bf5:	call   0x717fed6d
  415bfa:	icebp  
  415bfb:	inc    edi
  415bfc:	push   eax
  415bfd:	gs xchg dl,bh
  415c00:	rcl    BYTE PTR [edx+0x17c110cf],0x2e
  415c07:	jbe    0x415bc4
  415c09:	ror    ecx,0x5
  415c0c:	jae    0x415c70
  415c0e:	cmp    al,0x8e
  415c10:	lds    ebx,FWORD PTR [edx+0x339fca45]
  415c16:	cld    
  415c17:	mov    ebp,0xee025cb4
  415c1c:	push   esi
  415c1d:	push   0xffffffd8
  415c1f:	jae    0x415c37
  415c21:	pop    esi
  415c22:	sbb    al,BYTE PTR [esi-0x4c1de695]
  415c28:	mov    cl,ah
  415c2a:	test   eax,0xa0498002
  415c2f:	pop    ebp
  415c30:	mov    edi,0xfefc5a14
  415c35:	out    dx,al
  415c36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c37:	inc    edx
  415c38:	(bad)  [edx-0x6b]
  415c3b:	xchg   esi,eax
  415c3c:	sub    al,0xf9
  415c3e:	ret    0x5a43
  415c41:	or     bl,BYTE PTR [ebx+eiz*8+0x32f4ac96]
  415c48:	inc    ecx
  415c49:	test   DWORD PTR [edx+0x5997c5b],ebp
  415c4f:	retf   
  415c50:	scas   al,BYTE PTR es:[edi]
  415c51:	jmp    0x4335:0x5f09b96a
  415c58:	jne    0x415bf5
  415c5a:	(bad)  
  415c5b:	scas   al,BYTE PTR es:[edi]
  415c5c:	mov    bh,0x9f
  415c5e:	sti    
  415c5f:	outs   dx,BYTE PTR ds:[esi]
  415c60:	rcl    BYTE PTR [ebp+0x52],1
  415c63:	stos   DWORD PTR es:[edi],eax
  415c64:	dec    DWORD PTR [eax-0x5c579c0]
  415c6a:	push   ebp
  415c6b:	cmp    BYTE PTR [edx+0x236f9cc8],bh
  415c71:	test   al,0x3
  415c73:	xor    ecx,DWORD PTR [ebx+0x15]
  415c76:	call   edi
  415c78:	cdq    
  415c79:	mov    esi,0x7350dd75
  415c7e:	stos   DWORD PTR es:[edi],eax
  415c7f:	mov    ecx,0x5a91a64c
  415c84:	mov    ah,0xe5
  415c86:	cmp    ax,0x3f6d
  415c8a:	jbe    0x415cf2
  415c8c:	hlt    
  415c8d:	and    al,0xaf
  415c8f:	loopne 0x415c41
  415c91:	and    BYTE PTR [ecx+eax*2-0xd],dh
  415c95:	clc    
  415c96:	fsubr  QWORD PTR [edi+0x587cfa09]
  415c9c:	mov    ch,0x6f
  415c9e:	mov    ds:0xb351f9ec,eax
  415ca3:	xchg   DWORD PTR [edi+0x7e],edx
  415ca6:	lds    ebx,FWORD PTR [edi+0x2f]
  415ca9:	mov    eax,ds:0x996c3a7a
  415cae:	sub    BYTE PTR [ebx-0x2b],dl
  415cb1:	(bad)  
  415cb2:	push   eax
  415cb3:	jmp    0xc075:0x69ab761b
  415cba:	pop    edx
  415cbb:	push   ss
  415cbc:	in     al,dx
  415cbd:	rcr    DWORD PTR [esi],cl
  415cbf:	in     al,0x81
  415cc1:	icebp  
  415cc2:	push   0x67cb5365
  415cc7:	arpl   WORD PTR [eax+0x52],cx
  415cca:	arpl   WORD PTR [edi],dx
  415ccc:	or     eax,0x8b11642b
  415cd1:	stos   BYTE PTR es:[edi],al
  415cd2:	push   0xffffff97
  415cd4:	mov    edi,0x7be0dede
  415cd9:	sbb    bh,BYTE PTR [bp+0x7f96]
  415cde:	in     eax,dx
  415cdf:	cmp    eax,0x5b6afc1c
  415ce4:	pop    esp
  415ce5:	aaa    
  415ce6:	jl     0x415cb6
  415ce8:	out    dx,al
  415ce9:	mov    dh,0x39
  415ceb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cec:	mov    al,ds:0xe8cb6dad
  415cf1:	and    al,0x24
  415cf3:	gs out 0xe5,eax
  415cf6:	inc    ecx
  415cf7:	dec    ecx
  415cf8:	stos   BYTE PTR es:[edi],al
  415cf9:	push   cs
  415cfa:	pusha  
  415cfb:	sahf   
  415cfc:	imul   edi,DWORD PTR [edx+eax*1+0x24],0x2a
  415d01:	jne    0x415cd8
  415d03:	std    
  415d04:	sti    
  415d05:	imul   ebx,DWORD PTR [eax+esi*1-0x568b3952],0x78
  415d0d:	sti    
  415d0e:	push   ebx
  415d0f:	sub    dl,BYTE PTR [ebx-0x2a3887ef]
  415d15:	setp   BYTE PTR [esi+0x56538031]
  415d1c:	xor    al,0xf3
  415d1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d1f:	je     0x415cd3
  415d21:	cmp    BYTE PTR [eax],ah
  415d23:	or     BYTE PTR [edx],al
  415d25:	inc    edi
  415d26:	scas   al,BYTE PTR es:[edi]
  415d27:	inc    ebx
  415d28:	cmp    bl,BYTE PTR [ebx+eiz*1+0x54b37102]
  415d2f:	sti    
  415d30:	es pop ebx
  415d32:	aad    0x30
  415d34:	cmp    edi,DWORD PTR [edi]
  415d36:	cmp    ebx,DWORD PTR [esi]
  415d38:	lods   al,BYTE PTR ds:[esi]
  415d39:	gs jecxz 0x415da0
  415d3c:	inc    ebx
  415d3d:	test   BYTE PTR [edi+0x58],ch
  415d40:	shl    BYTE PTR [ecx-0x24266918],0x31
  415d47:	mov    cl,0x75
  415d49:	loope  0x415cdc
  415d4b:	in     al,dx
  415d4c:	in     al,dx
  415d4d:	and    eax,0xe02fd723
  415d52:	stos   DWORD PTR es:[edi],eax
  415d53:	mov    dl,BYTE PTR [ebx+0x6da221e0]
  415d59:	fldenv [esi+0x54]
  415d5c:	shl    BYTE PTR [edx],0xba
  415d5f:	xchg   ebx,eax
  415d60:	bound  edx,QWORD PTR [edx+esi*4-0x2b]
  415d64:	retf   
  415d65:	sub    ch,bl
  415d67:	test   eax,0xb21f02ec
  415d6c:	mov    ah,0x3f
  415d6e:	sub    esi,DWORD PTR [ecx+0x72ecda4b]
  415d74:	pusha  
  415d75:	test   eax,0x4d41df46
  415d7a:	ja     0x415db3
  415d7c:	push   esi
  415d7d:	data16 ins BYTE PTR es:[edi],dx
  415d7f:	(bad)  
  415d80:	cmp    DWORD PTR [ebp-0x8],esp
  415d83:	jae    0x415dfa
  415d85:	cmp    edi,DWORD PTR [ecx-0x2e9647f7]
  415d8b:	xor    BYTE PTR [ebp+0x6422fb55],ch
  415d91:	pop    es
  415d92:	call   0x985d:0x75d38b0a
  415d99:	(bad)  
  415d9a:	(bad)  
  415d9b:	pop    ebp
  415d9c:	data16 sbb al,0x65
  415d9f:	je     0x415d9a
  415da1:	push   ebp
  415da2:	pop    edi
  415da3:	push   esp
  415da4:	inc    esp
  415da5:	add    dl,BYTE PTR [esi+0x2f30ae9d]
  415dab:	leave  
  415dac:	push   edi
  415dad:	mov    ah,0x6d
  415daf:	imul   ebp,DWORD PTR [edx-0x1e],0x3f
  415db3:	inc    ebx
  415db4:	fs mov al,0x74
  415db7:	rol    BYTE PTR [ebx],1
  415db9:	idiv   BYTE PTR [edi+0x60]
  415dbc:	add    BYTE PTR [bp+si],al
  415dbf:	adc    eax,0xbe792e01
  415dc4:	cwde   
  415dc5:	(bad)  
  415dc6:	jge    0x415e05
  415dc8:	imul   BYTE PTR [edi-0x26500961]
  415dce:	sub    ah,ch
  415dd0:	std    
  415dd1:	lahf   
  415dd2:	sbb    al,0x96
  415dd4:	aas    
  415dd5:	sub    DWORD PTR [ebx+ecx*2-0x2db3ea87],eax
  415ddc:	test   eax,0xc1ce1c93
  415de1:	test   eax,0xeee7a336
  415de6:	mov    WORD PTR [ebx+0x1d],ss
  415de9:	jne    0x415da5
  415deb:	scas   eax,DWORD PTR es:[edi]
  415dec:	jle    0x415e28
  415dee:	and    DWORD PTR [edi+0x71],0x44
  415df2:	sti    
  415df3:	jmp    0x7d16:0xaec3847
  415dfa:	sub    al,0x6c
  415dfc:	fiadd  DWORD PTR [edi-0x79]
  415dff:	mov    al,ds:0xec95c04a
  415e04:	retf   
  415e05:	and    BYTE PTR [edi+edx*2],bh
  415e08:	xchg   esp,eax
  415e09:	push   edx
  415e0a:	(bad)  
  415e0b:	adc    edx,DWORD PTR [eax-0x14d193e7]
  415e11:	mov    ds:0x78be5fd6,eax
  415e16:	add    DWORD PTR [esi+0x7612e7ab],edi
  415e1c:	or     bl,BYTE PTR [esi-0x27]
  415e1f:	mov    bh,0xe8
  415e21:	xchg   ecx,eax
  415e22:	mov    DWORD PTR [ecx-0x778f62a6],ebp
  415e28:	add    edi,ecx
  415e2a:	shl    DWORD PTR [edx-0x4d54b2d3],1
  415e30:	adc    eax,0x6f553011
  415e35:	xor    BYTE PTR [eax],dl
  415e37:	mov    BYTE PTR [edi-0x75],dh
  415e3a:	cwde   
  415e3b:	ds and edi,esp
  415e3e:	stc    
  415e3f:	cli    
  415e40:	sub    BYTE PTR [ebx+0x6508778e],al
  415e46:	xlat   BYTE PTR ds:[ebx]
  415e47:	add    ecx,esi
  415e49:	outs   dx,DWORD PTR ds:[esi]
  415e4a:	nop
  415e4b:	inc    edx
  415e4c:	ss sbb eax,0x778a0678
  415e52:	inc    ecx
  415e53:	push   ecx
  415e54:	jb     0x415e78
  415e56:	xchg   ecx,eax
  415e57:	push   cs
  415e58:	in     al,0xb1
  415e5a:	(bad)  
  415e5b:	int3   
  415e5c:	and    edx,DWORD PTR [eax-0x4c165d64]
  415e62:	jo     0x415e5d
  415e64:	and    dh,BYTE PTR [ebx]
  415e66:	(bad)  
  415e67:	add    bh,BYTE PTR [ecx-0x24]
  415e6a:	call   0x4e794ae2
  415e6f:	xchg   BYTE PTR [edx-0x62c91bcb],ah
  415e75:	lods   eax,DWORD PTR ds:[esi]
  415e76:	test   eax,0xd1cb6927
  415e7b:	jmp    0x415e90
  415e7d:	xchg   edx,eax
  415e7e:	(bad)  
  415e80:	loopne 0x415e7a
  415e82:	clc    
  415e83:	inc    edi
  415e84:	scas   eax,DWORD PTR es:[edi]
  415e85:	aad    0xde
  415e87:	cld    
  415e88:	jp     0x415e6a
  415e8a:	int    0xf3
  415e8c:	cvtps2pd xmm2,QWORD PTR [eax-0x439778c9]
  415e93:	pmaddwd mm4,QWORD PTR [edx-0x45]
  415e97:	add    BYTE PTR [eax],dl
  415e99:	or     edx,DWORD PTR [edx]
  415e9b:	sbb    BYTE PTR [ebp+edx*4+0x3abe1588],0x14
  415ea3:	imul   esi,DWORD PTR [edx-0x7b90814],0x1d990581
  415ead:	sub    eax,0xf43b66ef
  415eb2:	pop    ecx
  415eb3:	enter  0x8722,0x88
  415eb7:	sbb    eax,0x25cf4dd6
  415ebc:	jnp    0x415e5f
  415ebe:	addr16 xchg ebp,eax
  415ec0:	cwde   
  415ec1:	repz aas 
  415ec3:	addr16 mov ah,0x61
  415ec6:	or     DWORD PTR [edi+esi*4],ebx
  415ec9:	xor    dl,dl
  415ecb:	add    DWORD PTR [edi],esi
  415ecd:	stc    
  415ece:	psubsb mm1,QWORD PTR [edx+eiz*8-0xa]
  415ed3:	xchg   edx,eax
  415ed4:	lahf   
  415ed5:	icebp  
  415ed6:	jne    0x415e79
  415ed8:	jo     0x415f2d
  415eda:	sbb    edi,DWORD PTR [ebx+0x7405617a]
  415ee0:	aaa    
  415ee1:	outs   dx,DWORD PTR ds:[esi]
  415ee2:	lods   al,BYTE PTR ds:[esi]
  415ee3:	test   esp,esp
  415ee5:	pop    es
  415ee6:	sub    eax,0xad8af1aa
  415eeb:	or     al,0xde
  415eed:	hlt    
  415eee:	push   ebp
  415eef:	rcl    BYTE PTR ds:0x9c07ba86,0x32
  415ef6:	inc    ecx
  415ef7:	mov    ah,0x67
  415ef9:	mov    cl,0x31
  415efb:	and    bl,dl
  415efd:	int3   
  415efe:	push   edx
  415eff:	lods   eax,DWORD PTR ds:[esi]
  415f00:	fst    QWORD PTR [edi-0x6e]
  415f03:	sbb    esi,ecx
  415f05:	(bad)  
  415f06:	xor    al,0x8d
  415f08:	xor    eax,0x1df07789
  415f0d:	mov    ebp,0x60d15200
  415f12:	in     eax,0xb0
  415f14:	sbb    al,BYTE PTR ds:[eax]
  415f17:	jmp    0x2467718a
  415f1c:	jno    0x415ebc
  415f1e:	call   0xa468448b
  415f23:	(bad)  [edi+0x1d]
  415f26:	xchg   edx,eax
  415f27:	ds dec edx
  415f29:	adc    BYTE PTR [ecx],bh
  415f2b:	cmc    
  415f2c:	sahf   
  415f2d:	aas    
  415f2e:	mov    DWORD PTR [esp+ecx*2+0x1ba0d15f],ecx
  415f35:	popf   
  415f36:	pusha  
  415f37:	(bad)  
  415f39:	(bad)  
  415f3a:	xor    al,0x7b
  415f3c:	call   0x92ec7817
  415f41:	push   ebx
  415f42:	dec    eax
  415f43:	fwait
  415f44:	out    0x4e,al
  415f46:	jmp    0xa0858f0c
  415f4b:	cmp    edi,0x19667170
  415f51:	xchg   edx,eax
  415f52:	(bad)  
  415f53:	dec    eax
  415f54:	xor    ebx,DWORD PTR [esi+0x1b]
  415f57:	pop    esi
  415f58:	test   DWORD PTR [ebp-0x44],edi
  415f5b:	jge    0x415fbe
  415f5d:	hlt    
  415f5e:	jbe    0x415f4c
  415f60:	xchg   edi,eax
  415f61:	sbb    eax,0x8f4fc967
  415f66:	clc    
  415f67:	(bad)
  415f6a:	mov    ds:0x7dbc6c04,eax
  415f6f:	nop
  415f70:	dec    ebp
  415f71:	test   al,0x88
  415f73:	scas   al,BYTE PTR es:[edi]
  415f74:	int    0x53
  415f76:	out    0x9c,al
  415f78:	cmp    ebx,esi
  415f7a:	and    esp,DWORD PTR [esi+esi*1]
  415f7d:	aas    
  415f7e:	mov    ecx,0xc5ed4a15
  415f83:	(bad)  
  415f84:	push   ecx
  415f85:	into   
  415f86:	pop    ds
  415f87:	mov    esp,0x2d779abd
  415f8c:	sbb    cl,BYTE PTR [esi+0x6b]
  415f8f:	push   eax
  415f90:	fnstcw WORD PTR [ebp+0x74]
  415f93:	and    ch,cl
  415f95:	lods   al,BYTE PTR ds:[esi]
  415f96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f97:	adc    al,0xb9
  415f99:	cwde   
  415f9a:	pop    eax
  415f9b:	jmp    0xc9c0:0x79835456
  415fa2:	outs   dx,DWORD PTR ds:[esi]
  415fa3:	mov    ds:0x4e971e18,eax
  415fa8:	xor    edi,DWORD PTR [eax-0x1e8a2ca]
  415fae:	cmp    DWORD PTR [edi],esp
  415fb0:	xor    esi,DWORD PTR [ecx-0x51e032c]
  415fb6:	rcl    DWORD PTR [ebp+0x10b7966f],0x56
  415fbd:	xchg   esi,eax
  415fbe:	inc    ebx
  415fbf:	clc    
  415fc0:	and    BYTE PTR [edi+0x2ad20860],0x39
  415fc7:	lahf   
  415fc8:	mov    ebx,0xe0df8669
  415fcd:	xchg   edi,eax
  415fce:	clc    
  415fcf:	jo     0x415f8a
  415fd1:	jo     0x41600b
  415fd3:	in     eax,0x8
  415fd5:	bound  esp,QWORD PTR [ebp+0xd3a12e6]
  415fdb:	hlt    
  415fdc:	addr16 add ch,al
  415fdf:	fcomip st,st(5)
  415fe1:	fidivr DWORD PTR [ebx]
  415fe3:	fwait
  415fe4:	xchg   ebp,eax
  415fe5:	mov    esi,0x11b2ac34
  415fea:	cmp    dl,BYTE PTR [edx+0x569931c6]
  415ff0:	and    edx,edx
  415ff2:	jmp    0x41603b
  415ff4:	cmp    eax,eax
  415ff6:	out    0x4e,eax
  415ff8:	push   ecx
  415ff9:	and    al,0x35
  415ffb:	ss (bad) 
  415ffd:	cmp    BYTE PTR [eax-0x7b],cl
  416000:	nop
  416001:	mov    ah,0x6f
  416003:	call   0xe954:0x87dfb7ab
  41600a:	sub    edx,DWORD PTR [ebp+0x63f49902]
  416010:	or     al,0x42
  416012:	sbb    ecx,esi
  416014:	sbb    al,ah
  416016:	push   edi
  416017:	pop    edi
  416018:	jecxz  0x416081
  41601a:	mov    dh,0x9b
  41601c:	je     0x416095
  41601e:	jns    0x416039
  416020:	push   es
  416021:	pop    eax
  416022:	enter  0xd8b,0x8f
  416026:	aas    
  416027:	test   DWORD PTR [ecx+0x79],eax
  41602a:	mov    ch,0x94
  41602c:	xchg   esp,eax
  41602d:	fwait
  41602e:	push   0xffffffaf
  416030:	out    dx,eax
  416031:	and    dl,BYTE PTR [ebx-0x1b9225cd]
  416037:	test   eax,0x1002f947
  41603c:	jg     0x415fc2
  41603e:	xor    DWORD PTR [ebp-0x72],esp
  416041:	cmc    
  416042:	pop    es
  416043:	dec    ebp
  416044:	(bad)  
  416045:	int    0x10
  416047:	sub    eax,0x5c7c9d
  41604c:	jge    0x416097
  41604e:	imul   ebx,DWORD PTR [ecx-0x36],0x446538eb
  416055:	lea    ebx,[ebx]
  416057:	sub    ch,BYTE PTR [ebx+eax*2]
  41605a:	xor    ah,BYTE PTR [eax]
  41605c:	add    ebx,DWORD PTR [eax]
  41605e:	mov    ds:0x6ae69237,ax
  416064:	cli    
  416065:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416066:	repnz rcl DWORD PTR [esi+eax*4-0x7e],0x3c
  41606c:	mov    WORD PTR [ecx-0x3e09315],cs
  416072:	in     al,dx
  416073:	jg     0x416044
  416075:	and    eax,0x5d3331ae
  41607a:	fucom  st(4)
  41607c:	(bad)  [eax+ebp*1]
  41607f:	adc    DWORD PTR [ebp+eiz*8+0x54a8321c],edx
  416086:	das    
  416087:	int3   
  416088:	(bad)  
  416089:	fdivr  st(4),st
  41608b:	rcr    DWORD PTR [eax],0x76
  41608e:	leave  
  41608f:	xor    ebx,edx
  416091:	sbb    cl,BYTE PTR [ebp-0x6a8405e]
  416097:	mov    ebx,0x455ee497
  41609c:	push   cs
  41609d:	mov    dh,0xae
  41609f:	sub    eax,0x6f898077
  4160a4:	(bad)  
  4160a5:	jbe    0x4160d5
  4160a7:	inc    esp
  4160a8:	data16 xchg BYTE PTR [ebp-0x4f27840e],ah
  4160af:	js     0x4160e5
  4160b1:	je     0x416126
  4160b3:	aaa    
  4160b4:	cmp    DWORD PTR [edi+0x67],ebp
  4160b7:	aam    0x85
  4160b9:	xchg   esp,eax
  4160ba:	stos   BYTE PTR es:[edi],al
  4160bb:	mov    edi,0xf89461ab
  4160c0:	mov    bl,0x2e
  4160c2:	mov    eax,ds:0xe1714182
  4160c7:	imul   esp,edx,0xffffffb5
  4160ca:	lods   eax,DWORD PTR ds:[esi]
  4160cb:	repnz loopne 0x416080
  4160ce:	inc    ecx
  4160cf:	ja     0x41610b
  4160d1:	loopne 0x4160e0
  4160d3:	jns    0x416151
  4160d5:	jp     0x416062
  4160d7:	lds    ebp,FWORD PTR [ebp+ecx*4-0x70]
  4160db:	xchg   BYTE PTR [edi+0x36],cl
  4160de:	xchg   ebx,eax
  4160df:	mov    ebx,edi
  4160e1:	sub    ebx,ebx
  4160e3:	aaa    
  4160e4:	repz jp 0x41613a
  4160e7:	sbb    eax,0xd6bc422a
  4160ec:	int    0xba
  4160ee:	or     bh,BYTE PTR [esi-0x6c]
  4160f1:	mov    DWORD PTR [ebx+0x51f8b526],esp
  4160f7:	in     eax,dx
  4160f8:	push   ds
  4160f9:	mov    ds:0xc00dfd65,eax
  4160fe:	jp     0x4160f4
  416100:	push   ebx
  416101:	out    dx,al
  416102:	stos   BYTE PTR es:[edi],al
  416103:	jl     0x416090
  416105:	adc    BYTE PTR [edi-0x5097f9cf],0xe0
  41610c:	inc    edx
  41610d:	mov    eax,0xd1ecedcc
  416112:	dec    ebx
  416114:	dec    eax
  416115:	xor    eax,0x41c7f86e
  41611a:	xchg   edi,eax
  41611b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41611c:	pop    ss
  41611d:	pop    edi
  41611e:	jno    0x416160
  416120:	das    
  416121:	jge    0x416113
  416123:	stos   DWORD PTR es:[edi],eax
  416124:	icebp  
  416125:	(bad)  
  416126:	mov    cl,0x83
  416128:	sbb    edi,DWORD PTR [ebx+0x6be43c5b]
  41612e:	pushf  
  41612f:	iret   
  416130:	imul   esp,esi,0xffffffa9
  416133:	popa   
  416134:	inc    esp
  416135:	je     0x416163
  416137:	push   ds
  416138:	and    eax,0xdad13ad6
  41613d:	jmp    0xc92c:0xb6796e5c
  416144:	(bad)  
  416145:	xor    ch,BYTE PTR [ecx]
  416147:	sbb    eax,eax
  416149:	sub    ah,cl
  41614b:	js     0x41619c
  41614d:	mov    ebx,0x31392821
  416152:	stos   BYTE PTR es:[edi],al
  416153:	push   ebx
  416154:	mov    esi,0xe316752a
  416159:	in     eax,dx
  41615a:	adc    DWORD PTR [eax-0x2a],esp
  41615d:	(bad)  
  41615e:	and    eax,0x701c7dec
  416163:	or     DWORD PTR [ecx-0x62],edi
  416166:	(bad)  
  416167:	lock or DWORD PTR [edx],0xffffffe2
  41616b:	push   es
  41616c:	jb     0x41617a
  41616e:	test   BYTE PTR [edx+0x18f2d4df],cl
  416174:	pop    es
  416175:	and    eax,0xcb57a960
  41617a:	stos   DWORD PTR es:[edi],eax
  41617b:	add    al,0xb2
  41617d:	xlat   BYTE PTR ds:[ebx]
  41617e:	shl    esp,cl
  416180:	adc    BYTE PTR [eax+ecx*2-0x20],0xfe
  416185:	int    0x12
  416187:	mov    ebp,0x14d43d93
  41618c:	mov    edi,0x425185bf
  416191:	push   eax
  416192:	push   edi
  416193:	std    
  416194:	scas   eax,DWORD PTR es:[edi]
  416195:	popf   
  416196:	xlat   BYTE PTR ds:[ebx]
  416197:	pop    esi
  416198:	rcr    dh,cl
  41619a:	inc    ebx
  41619b:	lods   al,BYTE PTR ds:[esi]
  41619c:	rcr    ecx,1
  41619e:	dec    edi
  41619f:	fwait
  4161a0:	test   eax,0xed34d2ea
  4161a5:	and    BYTE PTR [ecx-0x7adb7c37],0x65
  4161ac:	sar    BYTE PTR [si-0x15],cl
  4161b0:	vmwrite esi,DWORD PTR [esi-0x65ff6843]
  4161b7:	cmp    dl,BYTE PTR [ebp-0x14]
  4161ba:	sub    eax,0x33d0d56f
  4161bf:	jae    0x416240
  4161c1:	(bad)  
  4161c2:	xchg   esi,eax
  4161c3:	aas    
  4161c4:	(bad)  
  4161c5:	retf   
  4161c6:	push   0x9d289a93
  4161cb:	sar    BYTE PTR [edx],0x9
  4161ce:	or     BYTE PTR [esi-0x5135311],bl
  4161d4:	mov    ds:0x395cddda,al
  4161d9:	inc    eax
  4161da:	jb     0x416232
  4161dc:	imul   BYTE PTR [ecx+ebx*1-0x6a]
  4161e0:	sub    esi,DWORD PTR [edi]
  4161e2:	popf   
  4161e3:	(bad)  
  4161e5:	test   eax,0xee54d2f9
  4161ea:	pop    ebx
  4161eb:	mov    esp,0x7b1f9943
  4161f0:	fsubp  st(7),st
  4161f2:	jp     0x416240
  4161f4:	les    ebp,FWORD PTR [ebp-0x143ff465]
  4161fa:	jg     0x416215
  4161fc:	xlat   BYTE PTR ds:[ebx]
  4161fd:	inc    eax
  4161fe:	test   BYTE PTR [eax-0x4d],cl
  416201:	iret   
  416202:	rcr    bl,1
  416204:	jmp    0x52a7:0x60ea0220
  41620b:	add    al,0xed
  41620d:	pop    es
  41620e:	lods   al,BYTE PTR ds:[esi]
  41620f:	sub    bh,BYTE PTR [esi]
  416211:	or     esp,DWORD PTR [esi]
  416213:	scas   eax,DWORD PTR es:[edi]
  416214:	sbb    eax,0x8a0bcf15
  416219:	and    ebx,DWORD PTR [ebx+0x2dc3994b]
  41621f:	inc    eax
  416220:	mov    WORD PTR [eax],ds
  416222:	adc    BYTE PTR [ebp+0x5],dh
  416225:	inc    eax
  416226:	xchg   ecx,eax
  416227:	jne    0x41622b
  416229:	daa    
  41622a:	jge    0x416298
  41622c:	xor    dh,BYTE PTR [edi]
  41622e:	call   0x36dca712
  416233:	sub    BYTE PTR [ecx+0x36],bh
  416236:	push   ecx
  416237:	icebp  
  416238:	add    al,0xae
  41623a:	frstor [ebx]
  41623c:	xchg   esi,eax
  41623d:	pop    eax
  41623e:	dec    edi
  41623f:	add    eax,DWORD PTR ds:0x9fe48e45
  416245:	(bad)  
  416246:	xchg   edi,eax
  416247:	out    0x7,eax
  416249:	scas   al,BYTE PTR es:[edi]
  41624a:	add    esp,edi
  41624c:	hlt    
  41624d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41624e:	push   ebp
  41624f:	iret   
  416250:	shr    BYTE PTR [eax],cl
  416252:	fbld   TBYTE PTR [eax+ebx*1]
  416255:	lea    ecx,[edi]
  416257:	jge    0x416238
  416259:	(bad)  
  41625a:	mov    WORD PTR [edi],ss
  41625c:	test   al,0x65
  41625e:	sub    al,0x3c
  416260:	inc    esi
  416261:	sub    DWORD PTR [ebx-0x54],edi
  416264:	add    edx,esi
  416266:	fcmovnb st,st(5)
  416268:	repnz and al,0xd3
  41626b:	(bad)  
  41626c:	jmp    0x41628c
  41626e:	aad    0x9a
  416270:	test   edx,ebp
  416272:	ja     0x4162b4
  416274:	and    BYTE PTR [eax],ah
  416276:	jno    0x4162ec
  416278:	in     eax,0x38
  41627a:	cdq    
  41627b:	or     DWORD PTR [edx*4-0x6b8858a0],esp
  416282:	inc    ecx
  416283:	ds dec eax
  416285:	repz leave 
  416287:	xchg   DWORD PTR [edi-0x63b1b473],edx
  41628d:	aam    0xce
  41628f:	cmc    
  416290:	out    0xae,al
  416292:	cmp    DWORD PTR [eax+eax*2+0x32],ebp
  416296:	pushf  
  416297:	dec    esi
  416298:	leave  
  416299:	in     eax,0xfd
  41629b:	shr    DWORD PTR [edx-0xad6b8c8],0xfb
  4162a2:	shr    DWORD PTR [edx-0x3],1
  4162a5:	or     BYTE PTR [edx+ecx*1],ah
  4162a8:	loop   0x4162f5
  4162aa:	push   edi
  4162ab:	mov    bl,0x5b
  4162ad:	mov    ebx,0xbcba2314
  4162b2:	(bad)  
  4162b3:	jecxz  0x416239
  4162b5:	outs   dx,BYTE PTR ds:[esi]
  4162b6:	xor    ch,dh
  4162b8:	sbb    BYTE PTR [edx-0x1605b4de],bh
  4162be:	or     eax,0x6ae05b46
  4162c3:	push   ss
  4162c4:	mov    esi,0x93d9fa85
  4162c9:	into   
  4162ca:	sub    eax,ebx
  4162cc:	sahf   
  4162cd:	mov    ds:0x49198daf,eax
  4162d2:	inc    esi
  4162d3:	jge    0x416320
  4162d5:	jbe    0x416323
  4162d7:	cmp    BYTE PTR [ebx],0x40
  4162da:	popa   
  4162db:	push   ecx
  4162dc:	in     al,dx
  4162dd:	lahf   
  4162de:	fild   DWORD PTR [bp+di-0x45]
  4162e2:	sub    al,0xc9
  4162e4:	stc    
  4162e5:	xchg   esi,eax
  4162e6:	das    
  4162e7:	jge    0x416320
  4162e9:	xchg   edx,eax
  4162ea:	fadd   DWORD PTR [edi+0x5b]
  4162ed:	test   edx,eax
  4162ef:	addr16 popa 
  4162f1:	mov    ebx,0x5dab270a
  4162f6:	jl     0x416286
  4162f8:	les    edx,FWORD PTR [ebx]
  4162fa:	bswap  edi
  4162fc:	div    BYTE PTR [esi+eiz*8+0x67]
  416300:	or     BYTE PTR [edi-0x7a2b0b04],0x32
  416307:	xchg   ebp,eax
  416308:	push   ecx
  416309:	jnp    0x4162eb
  41630b:	(bad)  
  41630c:	fnstcw WORD PTR [esi+edi*4-0xd]
  416310:	cdq    
  416311:	pusha  
  416312:	pop    ebx
  416313:	push   esp
  416314:	shl    DWORD PTR [ebx+0x4cf5f061],1
  41631a:	jp     0x4162b6
  41631c:	mov    al,0xd5
  41631e:	(bad)  
  41631f:	dec    edi
  416320:	imul   edx,DWORD PTR [ecx],0x11
  416323:	add    edi,DWORD PTR cs:[ecx+esi*4-0x187edd70]
  41632b:	xor    dh,dh
  41632d:	xchg   edi,ecx
  41632f:	mov    ds:0xbb379f82,al
  416334:	sub    BYTE PTR [ecx-0x65],cl
  416337:	rol    BYTE PTR [ebx+0x5210fce9],0xaf
  41633e:	mov    ch,0x29
  416340:	fs adc dl,ah
  416343:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416344:	in     al,0x21
  416346:	out    0x49,al
  416348:	adc    DWORD PTR [ecx-0x27c6e327],esi
  41634e:	cmp    BYTE PTR [ebp-0x5cc086b2],al
  416354:	pop    esi
  416355:	outs   dx,DWORD PTR ds:[esi]
  416356:	sahf   
  416357:	fwait
  416358:	repnz out dx,eax
  41635a:	inc    edx
  41635b:	and    dl,BYTE PTR [eax-0x33]
  41635e:	call   0x697939af
  416363:	shl    BYTE PTR [esi+edi*2-0x66],1
  416367:	dec    esi
  416368:	dec    esp
  416369:	fstp   QWORD PTR [ebx-0x1f18b5c4]
  41636f:	shr    DWORD PTR [esi-0x7837de40],0xd7
  416376:	pop    esi
  416377:	push   0x49
  416379:	cld    
  41637a:	mov    dl,0xfe
  41637c:	or     eax,0x1a04f8c9
  416381:	fst    QWORD PTR [edx+0xf]
  416384:	popf   
  416385:	sub    edi,DWORD PTR [edi+0x5d739aaa]
  41638b:	jo     0x416330
  41638d:	jge    0x4163ad
  41638f:	lods   eax,DWORD PTR ds:[esi]
  416390:	jmp    0x416394
  416392:	mov    eax,ds:0xf4febb64
  416397:	mov    edx,0x54e527b3
  41639c:	int3   
  41639d:	ins    BYTE PTR es:[edi],dx
  41639e:	pop    edx
  41639f:	jle    0x41639d
  4163a1:	cmp    eax,0xc5e31133
  4163a6:	sahf   
  4163a7:	and    DWORD PTR [edx-0x60],0xc085a736
  4163ae:	inc    ebp
  4163af:	into   
  4163b0:	and    ah,BYTE PTR ds:0x56be08c6
  4163b6:	das    
  4163b7:	sbb    edx,DWORD PTR [eax+0x6f9dd20d]
  4163bd:	sbb    bl,BYTE PTR [esi+ebp*1-0x2e]
  4163c1:	test   DWORD PTR [edx+0x7aab3a0e],edx
  4163c7:	add    ch,ch
  4163c9:	js     0x4163c0
  4163cb:	aam    0x17
  4163cd:	push   0x7d
  4163cf:	syscall 
  4163d1:	jnp    0x4163b7
  4163d3:	dec    edi
  4163d4:	mov    bh,0xdd
  4163d6:	(bad)  
  4163d7:	xchg   edi,eax
  4163d8:	jo     0x4163eb
  4163da:	pop    esp
  4163db:	push   edi
  4163dc:	or     BYTE PTR [ecx],ah
  4163de:	cmp    al,0x82
  4163e0:	mov    edx,0x2c58fd38
  4163e5:	adc    DWORD PTR [edx-0x61],ebx
  4163e8:	mov    BYTE PTR [esi+0x4],cl
  4163eb:	std    
  4163ec:	clc    
  4163ed:	mov    DWORD PTR [ebp+0x1a],edx
  4163f0:	pushf  
  4163f1:	iret   
  4163f2:	pop    esi
  4163f3:	dec    esp
  4163f4:	not    edi
  4163f6:	xchg   esp,eax
  4163f7:	ins    BYTE PTR es:[edi],dx
  4163f8:	dec    edi
  4163f9:	push   edi
  4163fa:	add    DWORD PTR [eax-0x1d],0x6b4367fe
  416401:	in     al,0xea
  416403:	pop    esi
  416404:	ins    DWORD PTR es:[edi],dx
  416405:	push   ss
  416406:	mov    esp,0xee0678f6
  41640b:	out    dx,al
  41640c:	jne    0x416483
  41640e:	icebp  
  41640f:	bound  edx,QWORD PTR [eax+0xf]
  416412:	fdiv   QWORD PTR [eax]
  416414:	bound  esi,QWORD PTR [ecx]
  416416:	test   DWORD PTR [ebp-0x21],0xe9c5b5a5
  41641d:	cld    
  41641e:	jmp    0x23de:0x11912bd6
  416425:	test   DWORD PTR [ecx+0x3533776f],ecx
  41642b:	mov    dl,0x84
  41642d:	dec    ebp
  41642e:	jmp    0x416481
  416430:	and    bh,cl
  416432:	fidivr WORD PTR [edx]
  416434:	dec    esp
  416435:	scas   eax,DWORD PTR es:[edi]
  416436:	retf   
  416437:	fld    QWORD PTR [ebp-0x4e7c7839]
  41643d:	and    eax,0x586fcdc8
  416442:	cwde   
  416443:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416444:	and    dh,dl
  416446:	push   cs
  416447:	pop    esi
  416448:	xchg   edi,eax
  416449:	push   DWORD PTR [ecx+0x43573df8]
  41644f:	hlt    
  416450:	pop    esi
  416451:	sar    BYTE PTR [edx+0x71c91360],1
  416457:	adc    ecx,edi
  416459:	clc    
  41645a:	arpl   sp,di
  41645c:	dec    edi
  41645d:	lock jmp DWORD PTR [ebp+eiz*1+0xd]
  416462:	push   cs
  416463:	fistp  WORD PTR [esi-0x220a56db]
  416469:	scas   eax,DWORD PTR es:[edi]
  41646a:	ins    BYTE PTR es:[edi],dx
  41646b:	fbld   TBYTE PTR [ebp+0x5a]
  41646e:	hlt    
  41646f:	sbb    eax,0xbf0a6d9e
  416474:	push   sp
  416476:	jmp    0xe06051f6
  41647b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41647c:	lock push ebx
  41647e:	in     al,dx
  41647f:	mov    ecx,0x75bdf7b5
  416484:	cli    
  416485:	cwde   
  416486:	cdq    
  416487:	ja     0x4164e6
  416489:	dec    esp
  41648a:	mov    eax,ds:0xe49b2f44
  41648f:	xchg   esi,eax
  416490:	nop
  416491:	or     BYTE PTR [edi],0x1b
  416494:	in     al,0x15
  416496:	in     eax,0xbf
  416498:	add    al,0x6c
  41649a:	mov    dl,0x64
  41649c:	hlt    
  41649d:	imul   ebp,DWORD PTR [esi],0xdcd07247
  4164a3:	inc    esp
  4164a4:	pop    ecx
  4164a5:	stos   DWORD PTR es:[edi],eax
  4164a6:	lods   al,BYTE PTR ds:[esi]
  4164a7:	hlt    
  4164a8:	fstp   QWORD PTR [ecx+edx*4]
  4164ab:	or     DWORD PTR [esi-0x52],ebx
  4164ae:	cmp    ebp,DWORD PTR [esi]
  4164b0:	mov    al,ds:0xf0e06a9f
  4164b5:	dec    esp
  4164b6:	mov    ebx,0x5c531fd3
  4164bb:	aad    0xe2
  4164bd:	sub    DWORD PTR [ebp-0x6e],edx
  4164c0:	rcl    BYTE PTR [ebx],cl
  4164c2:	in     al,0x4b
  4164c4:	jnp    0x416462
  4164c6:	mov    esp,0x44d85480
  4164cb:	iret   
  4164cc:	les    ebp,FWORD PTR [esi-0x58]
  4164cf:	push   esi
  4164d0:	or     BYTE PTR [ecx],ch
  4164d2:	or     esi,DWORD PTR [edi+edi*1-0x3c]
  4164d6:	mov    ch,0x32
  4164d8:	and    ch,BYTE PTR [ecx-0x68]
  4164db:	adc    eax,0xf090eff1
  4164e0:	dec    ebp
  4164e1:	push   0xffffff85
  4164e3:	retf   
  4164e4:	sbb    DWORD PTR [eax],ecx
  4164e6:	div    DWORD PTR [edi]
  4164e8:	mov    cr3,esi
  4164eb:	test   BYTE PTR [ebp+0x2b],bl
  4164ee:	data16 xor al,al
  4164f1:	add    eax,0xad40c237
  4164f6:	push   0x6
  4164f8:	fwait
  4164f9:	mov    esi,0x14ffb07c
  4164fe:	sbb    BYTE PTR [eax],0x4f
  416501:	jae    0x4164d2
  416503:	sub    dl,dh
  416505:	mov    ebp,0x630b669d
  41650a:	sbb    eax,0x63498ba7
  41650f:	and    al,dl
  416511:	push   edi
  416512:	jno    0x41649a
  416514:	jp     0x416548
  416516:	dec    ebx
  416517:	pop    esp
  416518:	push   es
  416519:	jg     0x41658d
  41651b:	cs rol bl,0x7b
  41651f:	pop    eax
  416520:	mov    cl,0x66
  416522:	jbe    0x4164c8
  416524:	add    BYTE PTR [ecx-0x2322a8d2],bh
  41652a:	xchg   ecx,eax
  41652b:	test   DWORD PTR [ebx-0x63],edi
  41652e:	cmp    eax,0xa3231c45
  416533:	lahf   
  416534:	mov    es,WORD PTR [ebx+ecx*2-0x6229b7e6]
  41653b:	adc    esi,DWORD PTR ss:0x457f6a18
  416542:	lods   eax,DWORD PTR ds:[esi]
  416543:	push   eax
  416544:	xchg   ebx,eax
  416545:	imul   ecx,eax,0x59285d2c
  41654b:	in     eax,0xd9
  41654d:	pop    edx
  41654e:	sar    BYTE PTR [edi+0x77199d58],0x9b
  416555:	daa    
  416556:	sub    al,0x96
  416558:	push   edx
  416559:	hlt    
  41655a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41655b:	pop    esi
  41655c:	jb     0x416536
  41655e:	xchg   edi,eax
  41655f:	sbb    BYTE PTR [ecx],dh
  416561:	dec    ebp
  416562:	jmp    0x416565
  416564:	ret    
  416565:	add    ebp,DWORD PTR [esi+0x138b8159]
  41656b:	mov    ebx,0x4fab2c23
  416570:	mov    ebx,0xd3d63a90
  416575:	cmp    BYTE PTR [ecx-0x74eac898],ch
  41657b:	jmp    0x416541
  41657d:	jmp    0x5d3d0c91
  416582:	les    edi,FWORD PTR [ebp+eiz*1-0x76996d71]
  416589:	cmp    cl,BYTE PTR [eax+0x54c17ade]
  41658f:	loop   0x4165b1
  416591:	out    dx,eax
  416592:	adc    edi,DWORD PTR [edx-0x753b04a0]
  416598:	mov    BYTE PTR [edx],ah
  41659a:	jne    0x416549
  41659c:	in     al,dx
  41659d:	sub    al,cl
  41659f:	pushf  
  4165a0:	fnstenv [eax+eiz*8]
  4165a3:	fsubr  DWORD PTR [edx-0x52bccc35]
  4165a9:	jg     0x416560
  4165ab:	dec    esi
  4165ac:	(bad)  
  4165ad:	jo     0x416549
  4165af:	push   edx
  4165b0:	cmp    al,0xb2
  4165b2:	xchg   edi,eax
  4165b3:	adc    al,0x17
  4165b5:	lods   al,BYTE PTR ds:[esi]
  4165b6:	xchg   DWORD PTR [edi],edi
  4165b8:	lock sub al,0xad
  4165bb:	xchg   ebp,eax
  4165bc:	outs   dx,BYTE PTR ds:[esi]
  4165bd:	dec    edi
  4165be:	(bad)  
  4165bf:	in     eax,dx
  4165c0:	and    edx,0x847472ff
  4165c6:	dec    edi
  4165c7:	inc    ecx
  4165c8:	mov    es,WORD PTR [eax-0x59e0cf59]
  4165ce:	and    DWORD PTR [ebp+0x6a],ecx
  4165d1:	pop    ebp
  4165d2:	sbb    al,0xa8
  4165d4:	xchg   BYTE PTR [edi+edi*8+0x51],ch
  4165d8:	add    cl,bh
  4165da:	xor    eax,0xa6eab032
  4165df:	push   esi
  4165e0:	or     DWORD PTR [eax-0x41],esi
  4165e3:	cwde   
  4165e4:	xchg   ebx,eax
  4165e5:	cmp    al,0x10
  4165e7:	out    dx,al
  4165e8:	jmp    0x3a0d:0x33246b83
  4165ef:	or     BYTE PTR [ebp+0x3a],0x20
  4165f3:	sub    bl,cl
  4165f5:	out    0x33,al
  4165f7:	in     eax,dx
  4165f8:	push   ecx
  4165f9:	sub    al,0xe4
  4165fb:	sahf   
  4165fc:	mov    ?,WORD PTR [ecx]
  4165fe:	dec    edx
  4165ff:	cmp    eax,0x2196fb18
  416604:	pushf  
  416605:	sub    dh,BYTE PTR [ecx+0x4219f56d]
  41660b:	xor    eax,0x33264656
  416610:	(bad)  
  416611:	aam    0x15
  416613:	pop    ebp
  416614:	imul   ebp,DWORD PTR [ecx-0x7f],0x1adcf981
  41661b:	sub    eax,0x50737d8b
  416620:	pusha  
  416621:	push   edi
  416622:	popf   
  416623:	lods   eax,DWORD PTR ds:[esi]
  416624:	int3   
  416625:	retf   0x7788
  416628:	std    
  416629:	xor    eax,DWORD PTR [eax-0x43]
  41662c:	and    al,0x99
  41662e:	mov    ebx,0x94d1df4
  416633:	xor    eax,0x610987d1
  416638:	not    DWORD PTR [ecx-0x75d77fbb]
  41663e:	call   0xbbc66f12
  416643:	rcr    BYTE PTR [esi],0xd8
  416646:	scas   eax,DWORD PTR es:[edi]
  416647:	call   0x1d5ea55b
  41664c:	add    al,BYTE PTR [esi-0xe]
  41664f:	jle    0x416694
  416651:	sbb    eax,0x75c1bebd
  416656:	mov    edx,0xee279470
  41665b:	repz bound ecx,QWORD PTR [edx]
  41665e:	dec    esp
  41665f:	mov    ebx,ebp
  416661:	adc    dh,BYTE PTR [ebx+0x7b]
  416664:	jp     0x4166bb
  416666:	add    al,0x78
  416668:	out    0xeb,eax
  41666a:	mov    al,ds:0x919949fa
  41666f:	sahf   
  416670:	fisttp WORD PTR [eax-0xf05ec93]
  416676:	cmp    al,BYTE PTR [edi+0x39a414e2]
  41667c:	lods   al,BYTE PTR ds:[esi]
  41667d:	aas    
  41667e:	pushf  
  41667f:	cmp    dh,0x98
  416682:	in     eax,0xb6
  416684:	or     BYTE PTR [esi+0x20],0x0
  416688:	or     al,BYTE PTR [ecx]
  41668a:	add    DWORD PTR [ecx+0x2d221fd6],0xffffffc4
  416691:	js     0x416642
  416693:	repnz and BYTE PTR [ebp-0x4fc691fa],ch
  41669a:	jbe    0x4166ea
  41669c:	ss int 0xc7
  41669f:	pop    ecx
  4166a0:	and    esp,ecx
  4166a2:	push   esp
  4166a3:	shr    DWORD PTR [ebx+0x4e],1
  4166a6:	mov    al,ds:0x5935d218
  4166ab:	ret    0xb7f7
  4166ae:	xchg   esi,eax
  4166af:	cdq    
  4166b0:	dec    edi
  4166b1:	cmp    BYTE PTR [edi-0x6f20d7a9],0x4e
  4166b8:	sar    BYTE PTR [ebx+0x116a3c30],0x4
  4166bf:	mov    ebx,0x61f585ae
  4166c4:	aas    
  4166c5:	mov    edi,0x93c8fad5
  4166ca:	les    esi,FWORD PTR [eax-0x22]
  4166cd:	int    0x29
  4166cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166d0:	sbb    eax,0xe1688366
  4166d5:	shr    ebx,0xd3
  4166d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166d9:	hlt    
  4166da:	sbb    BYTE PTR [edx-0x68],0x2d
  4166de:	imul   esi,DWORD PTR [ebx],0xffffffc7
  4166e1:	shl    DWORD PTR [eax+0x5767aad1],1
  4166e7:	je     0x41675c
  4166e9:	sti    
  4166ea:	jae    0x416754
  4166ec:	inc    eax
  4166ed:	aaa    
  4166ee:	push   esp
  4166ef:	(bad)  
  4166f0:	loope  0x4166bb
  4166f2:	and    dl,bh
  4166f4:	ret    0xe299
  4166f7:	out    0xfe,al
  4166f9:	mov    eax,0x6ec09dab
  4166fe:	pop    ds
  4166ff:	addr16 dec edx
  416701:	push   es
  416702:	push   ss
  416703:	cdq    
  416704:	ins    BYTE PTR es:[edi],dx
  416705:	jge    0x416735
  416707:	add    dl,ch
  416709:	xchg   esp,eax
  41670a:	add    dl,BYTE PTR [ebx+edi*8]
  41670d:	je     0x4166fe
  41670f:	stos   DWORD PTR es:[edi],eax
  416710:	add    eax,0xf8cb02fc
  416715:	xor    DWORD PTR [esi],0xa305acd8
  41671b:	mov    eax,ds:0x31800292
  416720:	pushf  
  416721:	mov    eax,0x3c5c14ce
  416726:	adc    bh,ah
  416728:	nop
  416729:	jl     0x41678a
  41672b:	push   ebp
  41672c:	mov    edi,edi
  41672e:	cld    
  41672f:	sbb    DWORD PTR [edi],ebp
  416731:	pop    edi
  416732:	into   
  416733:	loopne 0x4166f1
  416735:	imul   esi,eax,0x76d4379d
  41673b:	cmp    BYTE PTR [ebx],ah
  41673d:	imul   ebp,DWORD PTR [edx],0xffffffa6
  416740:	jmp    0x6c26:0x386bb527
  416747:	mov    ah,0x22
  416749:	out    dx,eax
  41674a:	out    0x10,eax
  41674c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41674d:	inc    edx
  41674e:	mov    cl,0x26
  416750:	inc    esi
  416751:	stc    
  416752:	jge    0x41672e
  416754:	xchg   BYTE PTR [eax],dh
  416756:	mov    ebp,0xb5ebbc0a
  41675b:	adc    edx,DWORD PTR [edx+0x482c411a]
  416761:	xchg   BYTE PTR ds:0xa182630c,cl
  416768:	(bad)  
  41676a:	dec    eax
  41676b:	mov    eax,ds:0x9d1707a1
  416770:	or     eax,0x64a58247
  416775:	stos   DWORD PTR es:[edi],eax
  416776:	daa    
  416777:	popa   
  416778:	fcmovnu st,st(3)
  41677a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41677b:	fwait
  41677c:	shr    BYTE PTR [eax-0x2a],cl
  41677f:	andps  xmm1,XMMWORD PTR [edx]
  416782:	and    esp,DWORD PTR [eax+0x43045382]
  416788:	inc    BYTE PTR [ebp+0x2d9418e2]
  41678e:	pop    ds
  41678f:	fbstp  TBYTE PTR [edx+0x41]
  416792:	dec    esp
  416793:	or     dl,BYTE PTR [eax-0x1c]
  416796:	sub    DWORD PTR [ebx+0x47313f1f],edi
  41679c:	or     al,0x42
  41679e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41679f:	or     al,0x58
  4167a1:	adc    dh,ah
  4167a3:	cmp    eax,ebp
  4167a5:	leave  
  4167a6:	dec    ebp
  4167a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167a8:	jmp    DWORD PTR [ecx]
  4167aa:	add    DWORD PTR [ecx+esi*2-0x50fa6a51],ebp
  4167b1:	dec    esi
  4167b2:	sahf   
  4167b3:	jp     0x41677c
  4167b5:	popf   
  4167b6:	aas    
  4167b7:	xor    esi,edi
  4167b9:	adc    cl,BYTE PTR [ecx+0x5fd08a65]
  4167bf:	sub    al,0xca
  4167c1:	pop    eax
  4167c2:	fist   DWORD PTR [esi+edi*1]
  4167c5:	push   0x751abd90
  4167ca:	adc    ah,al
  4167cc:	imul   ecx,DWORD PTR [edx],0x50
  4167cf:	or     ebx,DWORD PTR [ebp-0x4a565758]
  4167d5:	aas    
  4167d6:	mov    ?,WORD PTR cs:0x72d59952
  4167dd:	mov    ds:0xf76c68f,eax
  4167e2:	fwait
  4167e3:	lds    edx,FWORD PTR [edx]
  4167e5:	ins    BYTE PTR es:[edi],dx
  4167e6:	enter  0xfe3d,0xa6
  4167ea:	or     DWORD PTR [edi+0x6156e3d0],edi
  4167f0:	fwait
  4167f1:	test   eax,0x720a32ed
  4167f6:	pop    ecx
  4167f7:	dec    eax
  4167f8:	loope  0x4167cd
  4167fa:	dec    eax
  4167fb:	fistp  WORD PTR [edi]
  4167fd:	inc    edx
  4167fe:	pop    ebx
  4167ff:	or     eax,0x6c7ba531
  416804:	(bad)  
  416805:	hlt    
  416806:	mov    eax,0xb9dfb49e
  41680b:	mov    edi,0xcbec1c6
  416810:	ficom  WORD PTR [esi-0x20]
  416813:	pop    ebx
  416814:	jp     0x4167c5
  416816:	bound  ebp,QWORD PTR [edx+0x767b9ccc]
  41681c:	daa    
  41681d:	mov    dl,0x84
  41681f:	daa    
  416820:	push   es
  416821:	outs   dx,BYTE PTR ds:[esi]
  416822:	fwait
  416823:	daa    
  416824:	(bad)
  416827:	push   ebx
  416828:	inc    edi
  416829:	aas    
  41682a:	mov    esp,0xc4f28da
  41682f:	inc    ebp
  416830:	dec    ebp
  416831:	mov    ebp,0x164f566e
  416836:	xor    BYTE PTR ds:0x3bc5e6c2,dh
  41683c:	sbb    BYTE PTR [ebp-0x78b8cfbb],0x1a
  416843:	jp     0x416805
  416845:	xor    dl,dh
  416847:	add    BYTE PTR [ebp+0x2c],0x59
  41684b:	xchg   BYTE PTR ds:[esi+edi*2],dl
  41684f:	aas    
  416850:	adc    esi,ebx
  416852:	icebp  
  416853:	jne    0x416840
  416855:	ror    BYTE PTR [ebx],0xb2
  416858:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416859:	mov    ds:0xaa04ed2,al
  41685e:	xor    edi,DWORD PTR [ebx-0x2f]
  416861:	mov    bl,0x9e
  416863:	scas   al,BYTE PTR es:[edi]
  416864:	dec    ebx
  416865:	cmp    BYTE PTR [edi],bl
  416867:	push   ecx
  416868:	(bad)  
  416869:	aaa    
  41686a:	xchg   esp,eax
  41686b:	(bad)  
  41686c:	mov    ebp,0x25fb34f4
  416871:	mov    esp,DWORD PTR [edx-0x37]
  416874:	ret    0xda2f
  416877:	jne    0x4168b3
  416879:	addr16 add eax,0xb657b0d3
  41687f:	lods   al,BYTE PTR ds:[esi]
  416880:	xchg   ebp,eax
  416881:	mov    edi,0xb6c67881
  416886:	cmp    cl,bl
  416888:	jns    0x4168d5
  41688a:	mov    ss,edi
  41688c:	enter  0xc4f4,0x5d
  416890:	imul   edx,ebp,0x497281dc
  416896:	jmp    0x5e19390d
  41689b:	mov    edx,0x5dcb94f9
  4168a0:	gs mov dh,0xf3
  4168a3:	outs   dx,BYTE PTR ds:[esi]
  4168a4:	(bad)
  4168a7:	or     BYTE PTR [edi],0xa3
  4168aa:	inc    esi
  4168ab:	cli    
  4168ac:	mov    al,ds:0x7759cda3
  4168b1:	mov    eax,0x68f79b19
  4168b6:	(bad)  
  4168b7:	sub    DWORD PTR ds:0x2dafab1f,eax
  4168bd:	repz ds leave 
  4168c0:	push   edx
  4168c1:	out    0xcf,eax
  4168c3:	adc    cl,BYTE PTR [ebx]
  4168c5:	xor    ecx,DWORD PTR [eax+0x45]
  4168c8:	jb     0x416851
  4168ca:	adc    al,0x63
  4168cc:	(bad)  
  4168cd:	dec    edx
  4168ce:	mov    ecx,0x9054e303
  4168d3:	repnz cwde 
  4168d5:	in     al,dx
  4168d6:	push   edx
  4168d7:	sbb    al,0xb0
  4168d9:	aad    0xaf
  4168db:	in     eax,0xe2
  4168dd:	outs   dx,BYTE PTR ds:[esi]
  4168de:	add    BYTE PTR [edi],0x9d
  4168e1:	or     ah,cl
  4168e3:	dec    ebp
  4168e4:	pushf  
  4168e5:	je     0x41694e
  4168e7:	mov    eax,0xfbd698c9
  4168ec:	cdq    
  4168ed:	cmp    BYTE PTR [esi+0x39],dh
  4168f0:	cmp    esp,ebp
  4168f2:	pop    ebp
  4168f3:	out    dx,eax
  4168f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4168f6:	xchg   edi,eax
  4168f7:	xor    edi,DWORD PTR [edi+0x26]
  4168fa:	or     dl,ah
  4168fc:	mov    ch,0x33
  4168fe:	(bad)  
  4168ff:	aad    0xf7
  416901:	dec    eax
  416902:	std    
  416903:	push   ds
  416904:	push   ebx
  416905:	ret    0x52e0
  416908:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416909:	test   DWORD PTR [ebp-0x2aff60ca],0xecdce935
  416913:	lds    esi,FWORD PTR [ebx+0x346a8c46]
  416919:	push   0xe
  41691b:	gs jg  0x41699b
  41691e:	outs   dx,DWORD PTR ds:[esi]
  41691f:	sbb    esp,eax
  416921:	ins    BYTE PTR es:[edi],dx
  416922:	pop    ebp
  416923:	aaa    
  416924:	inc    esp
  416925:	lds    eax,FWORD PTR [ecx-0x3d]
  416928:	jl     0x4168cb
  41692a:	rcl    BYTE PTR [eax-0x25],cl
  41692d:	push   ds
  41692e:	and    eax,ebx
  416930:	ror    BYTE PTR [edi+ebx*1+0x3f74ccab],cl
  416937:	cmp    al,cl
  416939:	cmp    DWORD PTR [edi+0x6e2476e9],esi
  41693f:	sbb    BYTE PTR [edi-0x5b],ah
  416942:	sbb    BYTE PTR [esi-0x6c54dd18],dl
  416948:	test   BYTE PTR [edx-0x51],bl
  41694b:	outs   dx,BYTE PTR ds:[esi]
  41694c:	lmsw   WORD PTR [edx-0x74]
  416950:	mov    al,0xd4
  416952:	ror    DWORD PTR [ecx-0x41],1
  416955:	pusha  
  416956:	cmc    
  416957:	add    BYTE PTR [eax+0xe],bl
  41695a:	mov    ebx,0xe374ea98
  41695f:	push   edi
  416960:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416961:	cmp    edi,DWORD PTR [esi]
  416963:	clc    
  416964:	mov    eax,ds:0xbdec85ce
  416969:	(bad)  
  41696a:	leave  
  41696b:	and    esp,esp
  41696d:	sub    al,0x93
  41696f:	(bad)  
  416970:	jno    0x4169a4
  416972:	pop    edx
  416973:	push   cs
  416974:	popf   
  416975:	sbb    ah,BYTE PTR [ebp+0x76c4b0d1]
  41697b:	lock or al,0x9b
  41697e:	jnp    0x416903
  416980:	sub    DWORD PTR [esi-0x33bc9f89],ecx
  416986:	fadd   QWORD PTR [esp-0x652df02]
  41698d:	aam    0xfc
  41698f:	hlt    
  416990:	push   edx
  416991:	sub    DWORD PTR [esi+edi*8+0x8],ecx
  416995:	(bad)  
  416996:	out    0x22,al
  416998:	jge    0x416929
  41699a:	stos   BYTE PTR es:[edi],al
  41699b:	test   ch,dl
  41699d:	or     ebx,DWORD PTR [ebx]
  41699f:	xor    eax,0xdbcc7e0d
  4169a4:	test   BYTE PTR [edi-0x205c2ba6],cl
  4169aa:	mov    dh,0x70
  4169ac:	(bad)  
  4169ad:	(bad)  
  4169ae:	imul   edi,edx,0x78
  4169b1:	dec    ebp
  4169b2:	xchg   esi,eax
  4169b3:	clc    
  4169b4:	test   edi,0x4289e067
  4169ba:	cmp    al,al
  4169bc:	dec    eax
  4169bd:	test   al,0x66
  4169bf:	dec    ebx
  4169c0:	push   ds
  4169c1:	xchg   ebp,eax
  4169c2:	popa   
  4169c3:	xchg   dh,dl
  4169c5:	repnz out dx,eax
  4169c7:	sub    cl,bh
  4169c9:	lahf   
  4169ca:	nop
  4169cb:	ret    
  4169cc:	xor    eax,0x92683fb
  4169d1:	add    al,0x77
  4169d3:	clc    
  4169d4:	xchg   esp,eax
  4169d5:	add    eax,DWORD PTR [ebx+0x70]
  4169d8:	aas    
  4169d9:	out    0xc6,al
  4169db:	xchg   edi,eax
  4169dc:	dec    edx
  4169dd:	test   DWORD PTR [eax+0x66c37db5],edi
  4169e3:	neg    BYTE PTR [esi]
  4169e5:	js     0x416967
  4169e7:	fild   DWORD PTR [esi+esi*8-0x7c]
  4169eb:	fisub  DWORD PTR [edx+0x6c9dd2ab]
  4169f1:	push   ds
  4169f2:	adc    DWORD PTR [ecx+edi*4-0x7b8e2def],0xfffffff7
  4169fa:	out    0xd,al
  4169fc:	call   0x7bf1:0xf7ad3863
  416a03:	int3   
  416a04:	pop    ebp
  416a05:	stos   BYTE PTR es:[edi],al
  416a06:	call   0x154c:0x89ccadb7
  416a0d:	push   esi
  416a0e:	push   ebx
  416a0f:	push   ds
  416a10:	adc    dh,BYTE PTR [ebp-0x2c]
  416a13:	add    BYTE PTR [eax+0x5a411ba7],bl
  416a19:	out    0x72,al
  416a1b:	xchg   ebp,eax
  416a1c:	dec    ecx
  416a1d:	pop    edx
  416a1e:	je     0x4169e8
  416a20:	ror    cl,0x30
  416a23:	les    edi,FWORD PTR [eax]
  416a25:	enter  0x18d5,0xa5
  416a29:	and    bh,al
  416a2b:	outs   dx,BYTE PTR ds:[esi]
  416a2c:	adc    bl,BYTE PTR [ebx]
  416a2e:	jmp    0xba4c6a26
  416a33:	addr16 imul eax,edi,0xffffff86
  416a37:	mov    ecx,0x8816f031
  416a3c:	mov    esi,0xfe68e7b5
  416a41:	ja     0x416aa9
  416a43:	lock ficom WORD PTR [esi+ebp*8]
  416a47:	int    0xea
  416a49:	lock xlat BYTE PTR ss:[ebx]
  416a4c:	retf   
  416a4d:	dec    ecx
  416a4e:	scas   eax,DWORD PTR es:[edi]
  416a4f:	dec    esi
  416a50:	adc    dl,BYTE PTR [edi-0x3b]
  416a53:	sub    dl,cl
  416a55:	mov    ecx,0x3295c7cc
  416a5a:	imul   BYTE PTR [ecx]
  416a5c:	jecxz  0x416a9e
  416a5e:	repz sub esp,DWORD PTR [edi-0x7d]
  416a62:	pop    ebp
  416a63:	(bad)  
  416a64:	enter  0xc871,0xb3
  416a68:	jno    0x416ae7
  416a6a:	jb     0x416a9e
  416a6c:	push   esi
  416a6d:	cmp    ah,BYTE PTR [edx]
  416a6f:	add    bl,BYTE PTR [edx-0x5a118689]
  416a75:	and    DWORD PTR [eax+0x4],edx
  416a78:	or     ch,dl
  416a7a:	popa   
  416a7b:	mov    bl,0xbb
  416a7d:	mov    ch,0x64
  416a7f:	mov    ch,0x3d
  416a81:	pushf  
  416a82:	xchg   edi,eax
  416a83:	jp     0x416af3
  416a85:	push   ecx
  416a86:	imul   ebp,DWORD PTR [ebx+0x5c],0x15
  416a8a:	(bad)  
  416a8b:	mov    edi,0xe4192251
  416a90:	(bad)  
  416a91:	xor    ch,BYTE PTR [edi-0x3d420616]
  416a97:	inc    eax
  416a98:	int    0xa6
  416a9a:	jp     0x416b16
  416a9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a9d:	xchg   esp,eax
  416a9e:	les    eax,FWORD PTR [edi+0x60fd6cef]
  416aa4:	into   
  416aa5:	sahf   
  416aa6:	xchg   edi,eax
  416aa7:	and    al,0xcf
  416aa9:	inc    ebx
  416aaa:	neg    BYTE PTR [ecx+edx*4+0x3f]
  416aae:	adc    ah,dh
  416ab0:	std    
  416ab1:	jecxz  0x416b2d
  416ab3:	in     eax,0x19
  416ab5:	in     al,dx
  416ab6:	mov    dh,BYTE PTR [ebx+ebp*1+0x12]
  416aba:	imul   ebx,DWORD PTR [ecx],0x42
  416abd:	xchg   esi,eax
  416abe:	outs   dx,DWORD PTR ds:[esi]
  416abf:	dec    ebx
  416ac0:	repz je 0x416b25
  416ac3:	cld    
  416ac4:	rcr    BYTE PTR [edi+edx*1-0x44],1
  416ac8:	test   BYTE PTR [ebx],ch
  416aca:	xchg   edi,eax
  416acb:	push   0x8f6a411b
  416ad0:	dec    esi
  416ad1:	jo     0x416aac
  416ad3:	sub    BYTE PTR [edx-0x209707d9],0x46
  416ada:	call   0x27b8bdab
  416adf:	jl     0x416aac
  416ae1:	xchg   DWORD PTR [eax+0x13c17181],esi
  416ae7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ae8:	mov    eax,ds:0x5109289d
  416aed:	imul   eax,DWORD PTR [esi+0x6a3ef079],0x58
  416af4:	addr16 hlt 
  416af6:	cmp    bl,BYTE PTR [edx+0x27]
  416af9:	aaa    
  416afa:	sahf   
  416afb:	push   ss
  416afc:	add    DWORD PTR [ecx],edi
  416afe:	daa    
  416aff:	clc    
  416b00:	mov    WORD PTR [bp+di-0x49],ds
  416b04:	neg    BYTE PTR [esi+0x4fca7950]
  416b0a:	ja     0x416aec
  416b0c:	inc    esp
  416b0d:	inc    edi
  416b0e:	jno    0x416b1e
  416b10:	int3   
  416b11:	and    dl,0x1b
  416b14:	imul   esp,ebx,0x8143f28c
  416b1a:	jle    0x416aad
  416b1c:	push   es
  416b1d:	in     eax,0x8
  416b1f:	inc    edi
  416b20:	mov    DWORD PTR [ecx+0x7f900bea],0x46b85ec5
  416b2a:	mov    bl,0x71
  416b2c:	xchg   BYTE PTR [edi-0x6b2a5694],dh
  416b32:	push   ebp
  416b33:	lods   al,BYTE PTR ds:[esi]
  416b34:	hlt    
  416b35:	outs   dx,DWORD PTR ds:[esi]
  416b36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b37:	mov    es,WORD PTR [edx-0x6]
  416b3a:	leavew 
  416b3c:	push   edx
  416b3d:	iret   
  416b3e:	mov    bl,0x3d
  416b40:	xor    ecx,esi
  416b42:	outs   dx,DWORD PTR ds:[esi]
  416b43:	scas   al,BYTE PTR es:[edi]
  416b44:	sub    eax,0x4627794
  416b49:	or     al,0x63
  416b4b:	sbb    eax,edi
  416b4d:	test   al,0x72
  416b4f:	jb     0x416ba8
  416b51:	mov    eax,0xbbbd25d9
  416b56:	xor    BYTE PTR [eax],bl
  416b58:	cli    
  416b59:	xchg   esp,eax
  416b5a:	sbb    al,dh
  416b5c:	xchg   esi,eax
  416b5d:	xchg   esp,eax
  416b5e:	sub    ebx,edi
  416b60:	jg     0x416b87
  416b62:	jae    0x416b54
  416b64:	out    0xeb,eax
  416b66:	sqrtps xmm5,xmm5
  416b69:	aas    
  416b6a:	mov    edx,0x2f96dfeb
  416b6f:	(bad)  
  416b70:	sub    ch,BYTE PTR [edx-0x8c29c09]
  416b76:	pushf  
  416b77:	call   0x62a6c3d
  416b7c:	pop    edx
  416b7d:	xlat   BYTE PTR ds:[ebx]
  416b7e:	and    eax,0x4e47a69d
  416b83:	mov    eax,0x2fa1bc52
  416b88:	push   esp
  416b89:	pop    eax
  416b8a:	push   0x4
  416b8c:	jno    0x416bfc
  416b8e:	arpl   cx,sp
  416b90:	test   eax,0xb1af5003
  416b95:	push   ecx
  416b96:	in     al,0xc8
  416b98:	pop    esp
  416b99:	jp     0x416bf3
  416b9b:	add    eax,DWORD PTR [eax+0x58]
  416b9e:	xlat   BYTE PTR ds:[ebx]
  416b9f:	popaw  
  416ba1:	fisub  WORD PTR [edi+ebx*1]
  416ba4:	or     dh,BYTE PTR gs:[edi-0x52]
  416ba8:	add    cl,BYTE PTR [eax]
  416baa:	inc    ebp
  416bab:	fwait
  416bac:	or     DWORD PTR [ebp+ecx*8-0x3a9ba65e],0xffffffaf
  416bb4:	mov    ecx,0xddb3daf
  416bb9:	mov    ah,0xcb
  416bbb:	paddsb mm4,QWORD PTR [ebp+eax*4+0x8696534]
  416bc3:	add    bl,BYTE PTR [ebp+0x77]
  416bc6:	(bad)  
  416bc7:	int    0x1d
  416bc9:	dec    esi
  416bca:	cld    
  416bcb:	push   ds
  416bcc:	xchg   ecx,eax
  416bcd:	in     al,dx
  416bce:	mov    esi,DWORD PTR [esi+0x62]
  416bd1:	fisttp DWORD PTR ss:[ecx+0x44f192fe]
  416bd8:	ins    DWORD PTR es:[edi],dx
  416bd9:	cmp    al,dl
  416bdb:	jnp    0x416bd3
  416bdd:	mov    ah,dl
  416bdf:	lock cwde 
  416be1:	sub    dl,cl
  416be3:	int    0xcb
  416be5:	shl    bl,1
  416be7:	je     0x416ba0
  416be9:	(bad)  
  416bea:	adc    al,0x39
  416bec:	xchg   ebp,eax
  416bed:	jecxz  0x416b9e
  416bef:	shr    ebp,0x99
  416bf2:	cli    
  416bf3:	push   0xef6a40f3
  416bf8:	(bad)  
  416bf9:	sub    eax,0x7fb78599
  416bfe:	aas    
  416bff:	pop    es
  416c00:	daa    
  416c01:	mov    al,0x23
  416c03:	pop    esp
  416c04:	sub    DWORD PTR [edx-0x1f],edi
  416c07:	pusha  
  416c08:	push   cs
  416c09:	pushf  
  416c0a:	jl     0x416b92
  416c0c:	jno    0x416c42
  416c0e:	scas   eax,DWORD PTR es:[edi]
  416c0f:	leave  
  416c10:	outs   dx,BYTE PTR ds:[esi]
  416c11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c12:	xor    BYTE PTR [edi],dl
  416c14:	sub    edi,edx
  416c16:	jp     0x416bf2
  416c18:	pop    ss
  416c19:	js     0x416c72
  416c1b:	push   edi
  416c1c:	shl    DWORD PTR [ecx-0x17eea79d],1
  416c22:	repz idiv DWORD PTR [edi]
  416c25:	mov    bh,BYTE PTR [esi+0x154e2f9]
  416c2b:	in     al,0x67
  416c2d:	dec    ebp
  416c2e:	test   BYTE PTR [ebp+0x722705c5],ch
  416c34:	idiv   esp
  416c36:	dec    ebx
  416c37:	or     cl,dh
  416c39:	and    eax,0xa50894df
  416c3e:	and    al,0xda
  416c40:	scas   al,BYTE PTR es:[edi]
  416c41:	xchg   BYTE PTR [edi-0x5a],ah
  416c44:	bound  edx,QWORD PTR [esi]
  416c46:	mov    ds:0xa9ea9581,eax
  416c4b:	ret    0xccaa
  416c4e:	loop   0x416c46
  416c50:	aam    0x4
  416c52:	sbb    BYTE PTR [eax+0x5ab579a3],dh
  416c58:	stos   DWORD PTR es:[edi],eax
  416c59:	adc    esp,ecx
  416c5b:	cdq    
  416c5c:	int3   
  416c5d:	jge    0x416c99
  416c5f:	and    eax,0x901e07eb
  416c64:	pushf  
  416c65:	sbb    BYTE PTR [edx-0x79def123],ch
  416c6b:	adc    BYTE PTR [ecx],dl
  416c6d:	mov    esp,0x8ed97c10
  416c72:	sbb    DWORD PTR [eax+0x72],ebp
  416c75:	xchg   ebx,eax
  416c76:	iret   
  416c77:	pushf  
  416c78:	mov    ecx,0xc34a02fc
  416c7d:	shl    BYTE PTR [edx+esi*8-0x7b],0x5e
  416c82:	mov    es,WORD PTR [eax+0x75]
  416c85:	jae    0x416ce1
  416c87:	out    0x37,al
  416c89:	out    dx,al
  416c8a:	es or  eax,0x284a173a
  416c90:	adc    BYTE PTR ds:0xd05a2282,bh
  416c96:	cs mov eax,0x682433b6
  416c9c:	add    al,0x14
  416c9e:	push   0xffffffb8
  416ca0:	mov    ch,0x9e
  416ca2:	cmp    al,0x14
  416ca4:	add    bh,BYTE PTR [edi+0x15]
  416ca7:	daa    
  416ca8:	jmp    0xd162:0xfd6e8733
  416caf:	jae    0x416d05
  416cb1:	test   bl,bh
  416cb3:	sub    ebp,ebx
  416cb5:	lahf   
  416cb6:	bound  eax,QWORD PTR ds:0x4f01ef32
  416cbc:	test   bh,al
  416cbe:	sbb    al,0x9
  416cc0:	rcr    BYTE PTR [edi],1
  416cc2:	or     eax,0x5a073e40
  416cc7:	ret    
  416cc8:	sar    DWORD PTR [esi+ebx*1-0x79],1
  416ccc:	xchg   edi,eax
  416ccd:	pop    esi
  416cce:	add    DWORD PTR [ecx-0x17],ecx
  416cd1:	in     eax,dx
  416cd2:	sti    
  416cd3:	call   0xf6d3:0xef16b951
  416cda:	add    DWORD PTR [eax-0x4c],ecx
  416cdd:	jno    0x416d1b
  416cdf:	or     eax,DWORD PTR [edi+0x6a835c1a]
  416ce5:	call   0x2b02a7c1
  416cea:	xchg   esi,eax
  416ceb:	or     bl,BYTE PTR [eax+0x43e0663c]
  416cf1:	jnp    0x416d4f
  416cf3:	xchg   DWORD PTR [ecx+edi*8-0x42],esi
  416cf7:	sbb    ah,BYTE PTR [ecx]
  416cf9:	sti    
  416cfa:	pushf  
  416cfb:	push   edi
  416cfc:	mov    al,0x2b
  416cfe:	bound  ebx,QWORD PTR [edx-0x7c026116]
  416d04:	iret   
  416d05:	fsub   QWORD PTR [ebx+0x1bc009b8]
  416d0b:	mov    ecx,0x423ae782
  416d10:	fwait
  416d11:	xor    eax,0x10265ec
  416d16:	cmp    eax,0xef72e876
  416d1b:	js     0x416d93
  416d1d:	push   ebx
  416d1e:	repz pop ecx
  416d20:	lds    eax,FWORD PTR [edi+0xa]
  416d23:	dec    ecx
  416d24:	add    BYTE PTR [esp+edi*2+0x4],bl
  416d28:	outs   dx,BYTE PTR ds:[esi]
  416d29:	fist   DWORD PTR [edx+0x6c66b145]
  416d2f:	add    al,0x43
  416d31:	cwde   
  416d32:	and    bl,BYTE PTR [edi-0x42]
  416d35:	test   al,0x89
  416d37:	or     BYTE PTR [edx-0x60],al
  416d3a:	enter  0x8781,0xf0
  416d3e:	call   0x66e9:0xcf70e9dd
  416d45:	test   DWORD PTR cs:[eax+0x13],eax
  416d49:	mov    dh,0xbb
  416d4b:	ret    
  416d4c:	dec    eax
  416d4d:	loopne 0x416cf7
  416d4f:	or     bh,dh
  416d51:	mov    cl,0xa2
  416d53:	bt     ebp,ebp
  416d56:	pop    esi
  416d57:	jp     0x416dcc
  416d59:	pop    ebx
  416d5a:	(bad)  
  416d5b:	mov    eax,ds:0x1345ab6c
  416d60:	jg     0x416d74
  416d62:	cli    
  416d63:	scas   eax,DWORD PTR es:[edi]
  416d64:	sub    dh,BYTE PTR [edx-0x944c3f5]
  416d6a:	gs inc ebx
  416d6c:	or     edi,0x60
  416d6f:	das    
  416d70:	adc    DWORD PTR [ebp-0x8],esp
  416d73:	or     ebp,esi
  416d75:	inc    edi
  416d76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d77:	mov    dl,0x97
  416d79:	inc    ecx
  416d7a:	sahf   
  416d7b:	jb     0x416d78
  416d7d:	hlt    
  416d7e:	and    eax,0x98ded7
  416d83:	es jle 0x416d8d
  416d86:	fidiv  WORD PTR [edi-0x528fd5be]
  416d8c:	lods   al,BYTE PTR ds:[esi]
  416d8d:	shr    DWORD PTR [edi],1
  416d8f:	cmp    cl,BYTE PTR ds:[edi+0x26]
  416d93:	call   0x2c0f1536
  416d98:	xor    al,0xf3
  416d9a:	mov    WORD PTR [edx],ds
  416d9c:	jl     0x416dbd
  416d9e:	outs   dx,BYTE PTR ds:[esi]
  416d9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416da0:	mov    edi,0xbb859215
  416da5:	and    BYTE PTR [ebx-0x55ca741],dh
  416dab:	jmp    0x416daf
  416dad:	shr    BYTE PTR [edi+eax*1+0x4d2dbb95],0x0
  416db5:	or     dl,BYTE PTR [ebx-0x28bdb050]
  416dbb:	adc    edi,ecx
  416dbd:	and    al,0xc9
  416dbf:	(bad)  
  416dc0:	call   0xfedc:0x31833bb7
  416dc7:	sub    DWORD PTR [edx+0x2b5d8aac],ebp
  416dcd:	(bad)  
  416dce:	lods   eax,DWORD PTR ds:[esi]
  416dcf:	mov    es,eax
  416dd1:	adc    eax,0xa287ac15
  416dd6:	adc    al,0xbd
  416dd8:	stc    
  416dd9:	ret    
  416dda:	mov    ebx,0x85e0b762
  416ddf:	call   0x186d:0x100a31f
  416de6:	or     al,0x3c
  416de8:	ror    ecx,0x8b
  416deb:	jp     0x416e47
  416ded:	cmc    
  416dee:	arpl   WORD PTR [ebp+0x75],dx
  416df1:	adc    al,0xa2
  416df3:	inc    ebx
  416df4:	cmp    eax,0xb7c6e4af
  416df9:	cli    
  416dfa:	inc    ecx
  416dfb:	or     BYTE PTR [edx],dl
  416dfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416dfe:	push   edi
  416dff:	pop    ecx
  416e00:	out    dx,al
  416e01:	div    BYTE PTR ds:0xffd5bfdb
  416e07:	ret    
  416e08:	mov    ch,0x78
  416e0a:	shr    BYTE PTR [eax+0x6425fbce],1
  416e10:	ror    DWORD PTR [ebp+0x123b62af],cl
  416e16:	ss enter 0xb0d8,0xe0
  416e1b:	mov    edx,0xe62f1b6a
  416e20:	sbb    edi,DWORD PTR [esi]
  416e22:	ds jecxz 0x416e35
  416e25:	pop    esi
  416e26:	jp     0x416ddc
  416e28:	add    esp,ebx
  416e2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e2b:	jnp    0x416e18
  416e2d:	push   edi
  416e2e:	xchg   ebx,eax
  416e2f:	loop   0x416e67
  416e31:	inc    eax
  416e32:	(bad)  
  416e34:	xor    edi,esp
  416e36:	sti    
  416e37:	fs cmc 
  416e39:	mov    edi,0x1573450f
  416e3e:	and    DWORD PTR [ecx+eiz*8+0x39],esi
  416e42:	sbb    ch,0x71
  416e45:	mov    WORD PTR [edx],fs
  416e47:	mov    ss,eax
  416e49:	xchg   esi,eax
  416e4a:	sahf   
  416e4b:	fcomip st,st(1)
  416e4d:	pop    esp
  416e4e:	loopne 0x416e95
  416e50:	jno    0x416deb
  416e52:	jg     0x416dfa
  416e54:	call   FWORD PTR [esi+eiz*4+0x3d02cc86]
  416e5b:	and    eax,0xbddfa784
  416e60:	xor    DWORD PTR [ebx],0xffffffc6
  416e63:	push   ebp
  416e64:	jg     0x416ea6
  416e66:	into   
  416e67:	js     0x416e30
  416e69:	outs   dx,DWORD PTR ds:[esi]
  416e6a:	imul   eax,DWORD PTR [edi+edi*2],0xd721eeb
  416e71:	out    dx,al
  416e72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e73:	call   0x6e6f:0xafd203bd
  416e7a:	popa   
  416e7b:	lea    eax,[edi-0x16]
  416e7e:	popa   
  416e7f:	sub    al,0x15
  416e81:	cmc    
  416e82:	jl     0x416e5c
  416e84:	aas    
  416e85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e86:	cwde   
  416e87:	mov    BYTE PTR [eax-0x28],ah
  416e8a:	fst    QWORD PTR [esi-0x671c270b]
  416e90:	cli    
  416e91:	adc    ah,cl
  416e93:	adc    dl,dh
  416e95:	mov    DWORD PTR [ebp+0x4db099ce],ecx
  416e9b:	out    dx,al
  416e9c:	in     eax,dx
  416e9d:	mov    eax,ds:0xe93a1634
  416ea2:	lods   al,BYTE PTR ds:[esi]
  416ea3:	jb     0x416e8c
  416ea5:	fidivr DWORD PTR [ebx-0x2951cdc6]
  416eab:	pop    edx
  416eac:	push   es
  416ead:	adc    DWORD PTR [ebp+0xe31379f],ecx
  416eb3:	inc    esp
  416eb4:	pop    ss
  416eb5:	jmp    0xeecd:0xa8df5ad4
  416ebc:	outs   dx,DWORD PTR ds:[esi]
  416ebd:	dec    ebp
  416ebe:	dec    edx
  416ebf:	push   ebx
  416ec0:	cmc    
  416ec1:	add    DWORD PTR [esi+eax*4-0x74],ebx
  416ec5:	ins    DWORD PTR es:[edi],dx
  416ec6:	dec    ebx
  416ec7:	and    cl,bl
  416ec9:	daa    
  416eca:	cld    
  416ecb:	or     al,0x61
  416ecd:	mov    esi,0x1e74c0f7
  416ed2:	jnp    0x416f0f
  416ed4:	or     BYTE PTR [edx],bl
  416ed6:	fcom   QWORD PTR [edx+0x74]
  416ed9:	push   esi
  416eda:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  416edc:	jnp    0x416e9a
  416ede:	inc    ecx
  416edf:	in     al,dx
  416ee0:	mov    ebp,0xbc7e4aa7
  416ee5:	xor    BYTE PTR [eax+0x61d2fb5b],bh
  416eeb:	xchg   ebx,eax
  416eec:	jge    0x416f3a
  416eee:	push   eax
  416eef:	push   esi
  416ef0:	cmp    edx,DWORD PTR [edx-0x30ff0f3b]
  416ef6:	push   ebp
  416ef7:	sub    edi,ebx
  416ef9:	sub    dh,dl
  416efb:	dec    eax
  416efc:	mov    eax,ds:0x7758a122
  416f01:	bound  eax,QWORD PTR [esi+edx*4-0xf89006e]
  416f08:	jns    0x416efd
  416f0a:	pop    ds
  416f0b:	test   ebp,esp
  416f0d:	sbb    bh,BYTE PTR [edx]
  416f0f:	pop    esi
  416f10:	push   edx
  416f11:	push   edx
  416f12:	loopne 0x416f47
  416f14:	pop    eax
  416f15:	(bad)  
  416f16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f17:	jmp    0x6cb5ddef
  416f1c:	pop    edx
  416f1d:	sub    eax,0x4ddcc514
  416f22:	push   ebp
  416f23:	scas   eax,DWORD PTR es:[edi]
  416f24:	pop    edx
  416f25:	cld    
  416f26:	inc    edx
  416f27:	mov    ebx,DWORD PTR [esi-0x29]
  416f2a:	sbb    bh,ah
  416f2c:	out    0xe0,eax
  416f2e:	shr    BYTE PTR [ecx+0x77],0xce
  416f32:	shl    ah,1
  416f34:	das    
  416f35:	lods   eax,DWORD PTR ds:[esi]
  416f36:	xor    al,0x11
  416f38:	mov    dl,0x1e
  416f3a:	dec    esp
  416f3b:	ss (bad) 
  416f3d:	xor    al,0x3
  416f3f:	loopne 0x416f35
  416f41:	pop    esi
  416f42:	sbb    bl,BYTE PTR [ebp+0x3340401]
  416f48:	arpl   WORD PTR [ecx-0x20a40854],bx
  416f4e:	imul   edi,DWORD PTR [edi-0x35],0xffffffcb
  416f52:	jbe    0x416f07
  416f54:	xchg   esi,eax
  416f55:	out    dx,eax
  416f56:	adc    eax,ebx
  416f58:	and    edx,esi
  416f5a:	add    eax,DWORD PTR [esi+ebp*8+0x67]
  416f5e:	dec    esp
  416f5f:	test   DWORD PTR [ecx],esp
  416f61:	and    DWORD PTR [ebx+0xdcb1d7f],esi
  416f67:	and    al,0x15
  416f69:	cld    
  416f6a:	shl    DWORD PTR [ebp-0x7c],cl
  416f6d:	sub    BYTE PTR [edi],0x6d
  416f70:	mov    dh,0xd9
  416f72:	xlat   BYTE PTR ds:[ebx]
  416f73:	or     DWORD PTR [esi+0x55ba1a71],ebx
  416f79:	dec    ebx
  416f7a:	cdq    
  416f7b:	pushf  
  416f7c:	les    ebp,FWORD PTR [edx]
  416f7e:	mov    bl,0x7
  416f80:	loop   0x416fca
  416f82:	lock pop ecx
  416f84:	dec    edi
  416f85:	pop    ecx
  416f86:	fiadd  WORD PTR [ecx]
  416f88:	pop    ebp
  416f89:	into   
  416f8a:	pop    ecx
  416f8b:	adc    dl,ah
  416f8d:	adc    eax,0xd504ddc1
  416f92:	repz sub ch,al
  416f95:	fcom   st(0)
  416f97:	(bad)  
  416f98:	cmp    edi,DWORD PTR [ecx+0x75641279]
  416f9e:	arpl   WORD PTR [edi-0x62],si
  416fa1:	adc    eax,DWORD PTR [edi]
  416fa3:	and    cl,0x7e
  416fa6:	add    eax,0x702fff09
  416fab:	arpl   WORD PTR [ecx-0x7f],bp
  416fae:	mov    cs,WORD PTR ds:0x36d093e
  416fb4:	xor    BYTE PTR [edi],bl
  416fb6:	dec    edi
  416fb7:	mov    ah,0xcd
  416fb9:	xchg   esp,eax
  416fba:	jmp    0x416fb3
  416fbc:	jo     0x416f58
  416fbe:	mov    eax,0x7be5fcda
  416fc3:	mov    ebx,0x2cdddebb
  416fc8:	mov    ecx,0x1b4a3684
  416fcd:	jmp    0x416f79
  416fcf:	mov    esi,0xe4abba18
  416fd4:	adc    BYTE PTR [edx],cl
  416fd6:	hlt    
  416fd7:	xor    BYTE PTR [esi],ch
  416fd9:	mov    cl,0x57
  416fdb:	xchg   ebp,eax
  416fdc:	aas    
  416fdd:	pop    es
  416fde:	jmp    0x416fcc
  416fe0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fe1:	push   edx
  416fe2:	ror    BYTE PTR [edx+ecx*8+0x30],1
  416fe6:	jo     0x416f9e
  416fe8:	cld    
  416fe9:	fnstsw WORD PTR [edx]
  416feb:	xlat   BYTE PTR ds:[ebx]
  416fec:	(bad)  
  416fed:	jb     0x417063
  416fef:	add    DWORD PTR [esi],edx
  416ff1:	ss dec eax
  416ff3:	cld    
  416ff4:	jp     0x417030
  416ff6:	fisub  WORD PTR [ebx]
  416ff8:	(bad)
  416ffb:	mov    ch,0x96
  416ffd:	add    bl,BYTE PTR [esi]
  416fff:	sub    al,0xe3
  417001:	shr    BYTE PTR ds:0xdf16152,0x43
  417008:	or     al,0x4f
  41700a:	push   0x1926a6ab
  41700f:	xchg   ebp,eax
  417010:	(bad)  
  417011:	rol    BYTE PTR [edi],0x2
  417014:	sti    
  417015:	div    BYTE PTR [ebp+0x75ec3dc4]
  41701b:	andnps xmm4,XMMWORD PTR [ebp+0x4d]
  41701f:	mov    edi,0xeb08bf84
  417024:	pop    ecx
  417025:	add    al,0xd9
  417027:	rcr    DWORD PTR [edx],cl
  417029:	jmp    0x417034
  41702b:	in     al,0x6b
  41702d:	push   es
  41702e:	lds    edi,FWORD PTR [edi-0x3af55e31]
  417034:	(bad)  [edi+edx*1-0x65ada219]
  41703b:	loope  0x417039
  41703d:	push   0xbb5239cb
  417042:	and    al,0x92
  417044:	pop    edi
  417045:	call   0x46ab:0xfab2c73d
  41704c:	mov    bl,0x18
  41704e:	jmp    0x417053
  417050:	xchg   ebp,eax
  417051:	and    eax,0x734c11d2
  417056:	mov    ds:0x26dfe09d,eax
  41705b:	enter  0x417f,0xa3
  41705f:	mov    ds:0xc4c01a36,eax
  417064:	retf   
  417065:	push   es
  417066:	push   ds
  417067:	iret   
  417068:	js     0x4170de
  41706a:	shl    DWORD PTR [edi+0x26],1
  41706d:	cmp    ebx,esi
  41706f:	mov    bl,0xf3
  417071:	xor    DWORD PTR [edi],esi
  417073:	mov    al,0x2d
  417075:	sub    bh,BYTE PTR [edi-0x51]
  417078:	rcl    ebp,1
  41707a:	inc    esi
  41707b:	icebp  
  41707c:	xchg   ebx,eax
  41707d:	pop    ecx
  41707e:	clc    
  41707f:	mov    DWORD PTR fs:[esi+0x54],eax
  417083:	(bad)  
  417084:	ins    BYTE PTR es:[edi],dx
  417085:	jl     0x417065
  417087:	bound  esi,QWORD PTR ds:0xd24dbf0f
  41708d:	sahf   
  41708e:	and    eax,eax
  417090:	aas    
  417091:	repnz mov bh,0x86
  417094:	xor    ebx,esi
  417096:	pop    eax
  417097:	cmp    DWORD PTR [ecx-0x1c],eax
  41709a:	adc    al,0x7
  41709c:	mov    bl,0x1d
  41709e:	loopne 0x417101
  4170a0:	ret    0x9014
  4170a3:	sub    DWORD PTR [ecx+0x6ba71138],ebp
  4170a9:	aaa    
  4170aa:	mov    ch,0x42
  4170ac:	push   ss
  4170ad:	outs   dx,DWORD PTR ds:[esi]
  4170ae:	dec    eax
  4170af:	ja     0x41708a
  4170b1:	sahf   
  4170b2:	cld    
  4170b3:	mov    eax,0x835e35e5
  4170b8:	xchg   ebp,eax
  4170b9:	stos   DWORD PTR es:[edi],eax
  4170ba:	stc    
  4170bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170bc:	pop    ebp
  4170bd:	jecxz  0x417103
  4170bf:	lock sub ebp,DWORD PTR [esi-0x7c]
  4170c3:	test   eax,0x21506240
  4170c8:	lea    edx,[esi-0x79]
  4170cb:	sub    al,0xe3
  4170cd:	into   
  4170ce:	and    dh,BYTE PTR [edx-0x3979d821]
  4170d4:	rcl    BYTE PTR [edx],0xc5
  4170d7:	sbb    DWORD PTR [eax-0x3e],edx
  4170da:	enter  0x9abe,0x5c
  4170de:	jne    0x4170ba
  4170e0:	aad    0xb1
  4170e2:	adc    BYTE PTR [ebp-0x12cec246],bh
  4170e8:	and    esp,ecx
  4170ea:	mov    ds:0xaaa8db73,al
  4170ef:	xor    esi,ebx
  4170f1:	or     bl,BYTE PTR [eax+eax*4]
  4170f4:	sti    
  4170f5:	retf   
  4170f6:	jnp    0x417102
  4170f8:	fnstsw WORD PTR [eax]
  4170fa:	repnz (bad) 
  4170fc:	lock (bad) 
  4170fe:	cld    
  4170ff:	cmp    esi,DWORD PTR [ebx]
  417101:	test   al,0x18
  417103:	sub    DWORD PTR [eax],eax
  417105:	cld    
  417106:	out    dx,al
  417107:	in     al,0x23
  417109:	sbb    eax,0x87b624a
  41710e:	fs xor al,0xfe
  417111:	mov    esp,0x189ab1c6
  417116:	call   0xfce9a2cf
  41711b:	pop    ds
  41711c:	out    dx,al
  41711d:	mov    esp,0x6877312e
  417122:	dec    esi
  417123:	(bad)  
  417126:	mov    cs,WORD PTR [eax]
  417128:	pop    es
  417129:	adc    BYTE PTR [edi-0x7f1248eb],0xb
  417130:	out    dx,al
  417131:	ss or  al,0x4e
  417134:	lea    ebx,[eax-0x26]
  417137:	pusha  
  417138:	jae    0x41715f
  41713a:	ret    0x8def
  41713d:	cmp    BYTE PTR [ebp-0x7f],cl
  417140:	mov    esp,0x9fbd5d83
  417145:	pop    edi
  417146:	add    al,0xd0
  417148:	mov    BYTE PTR [esi],dl
  41714a:	(bad)  
  41714b:	inc    ebx
  41714c:	(bad)  
  41714d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41714e:	nop
  41714f:	jbe    0x417117
  417151:	stc    
  417152:	clc    
  417153:	cmp    eax,0x745ab04
  417158:	jl     0x417176
  41715a:	dec    ecx
  41715b:	out    dx,al
  41715c:	dec    ebx
  41715d:	inc    esi
  41715e:	cmp    eax,eax
  417160:	gs pop esi
  417162:	aad    0x5a
  417164:	stos   DWORD PTR es:[edi],eax
  417165:	dec    esp
  417166:	pop    eax
  417167:	fistp  QWORD PTR [eax-0x23]
  41716a:	cmp    bh,al
  41716c:	imul   esp,DWORD PTR [ebp-0x1c],0xffffffb4
  417170:	jbe    0x417148
  417172:	adc    esp,DWORD PTR [ebx]
  417174:	sbb    DWORD PTR [ecx-0x1e],edi
  417177:	adc    ebx,esp
  417179:	cmp    al,0x82
  41717b:	add    edx,DWORD PTR [ebx-0xb]
  41717e:	or     ecx,ebx
  417180:	fcmovnu st,st(5)
  417182:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417183:	mov    edi,edi
  417185:	push   edi
  417186:	xchg   DWORD PTR [ecx+0x3325cd70],eax
  41718c:	cmp    eax,0xaee07e86
  417191:	jb     0x41716a
  417193:	pushf  
  417194:	(bad)  
  417195:	mov    ds:0xa8650217,al
  41719a:	not    DWORD PTR [edx+0x534d68ed]
  4171a0:	ins    DWORD PTR es:[edi],dx
  4171a1:	loope  0x41718c
  4171a3:	repz jmp 0xf590b182
  4171a9:	adc    eax,DWORD PTR [ecx]
  4171ab:	rcl    BYTE PTR ds:[esi-0x3669211b],0xca
  4171b3:	rcl    BYTE PTR [ebp-0x8],1
  4171b6:	mov    ah,0x7e
  4171b8:	xor    edi,eax
  4171ba:	jecxz  0x4171a5
  4171bc:	scas   al,BYTE PTR es:[edi]
  4171bd:	push   eax
  4171be:	push   edi
  4171bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171c0:	nop
  4171c1:	frstor [ebx]
  4171c3:	cmp    BYTE PTR [ebx-0x38a9597d],0x57
  4171ca:	dec    eax
  4171cb:	lds    esp,FWORD PTR [eax+0x7b333557]
  4171d1:	cmp    al,0x5d
  4171d3:	push   DWORD PTR [ebp-0x37]
  4171d6:	sub    eax,0xf9037d38
  4171db:	hlt    
  4171dc:	mov    ecx,0x79ce5c2
  4171e1:	xor    ebp,DWORD PTR [esi-0x557e4bd]
  4171e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171e8:	(bad)  
  4171e9:	push   esp
  4171ea:	sub    DWORD PTR [edi-0x4e],ebp
  4171ed:	mov    ecx,0xe2a858a3
  4171f2:	pop    edi
  4171f3:	das    
  4171f4:	sbb    DWORD PTR [edx+edi*1+0x48],0x23e2aa94
  4171fc:	fstp   TBYTE PTR [edx+0x1c10a025]
  417202:	fs aad 0xb3
  417205:	shl    DWORD PTR [ebp+0x60078403],0x3d
  41720c:	add    eax,0xe3f4a6ca
  417211:	aad    0xc2
  417213:	repz sub BYTE PTR [edi+0x2],ah
  417217:	cdq    
  417218:	jle    0x417216
  41721a:	call   ebp
  41721c:	push   edi
  41721d:	fiadd  DWORD PTR [ebx]
  41721f:	mov    ds:0xb1748ddb,al
  417224:	jl     0x417227
  417226:	call   0xed75:0xb01aa4e4
  41722d:	pop    ebp
  41722e:	imul   BYTE PTR [edx+ecx*8+0x36]
  417232:	lock push DWORD PTR [edi+0x20]
  417236:	imul   eax,DWORD PTR [ecx],0xffffffe6
  417239:	xor    esi,ebx
  41723b:	in     al,0xb4
  41723d:	int3   
  41723e:	test   eax,0x4d961799
  417243:	(bad)  
  417244:	lods   eax,DWORD PTR ds:[esi]
  417245:	or     ch,al
  417247:	add    cl,bh
  417249:	cmp    bl,BYTE PTR [ecx+ebx*4-0x5d]
  41724d:	or     BYTE PTR fs:[ecx+0x62794947],0x58
  417255:	push   ecx
  417256:	inc    ebx
  417257:	add    bl,al
  417259:	aaa    
  41725a:	sub    bh,cl
  41725c:	or     DWORD PTR ds:[edx-0x7c],esi
  417260:	test   BYTE PTR [ecx+0x3d67553b],dl
  417266:	xor    al,0xa2
  417268:	test   eax,0xbc044331
  41726d:	push   edi
  41726e:	(bad)  
  41726f:	pop    edx
  417270:	cmp    ah,BYTE PTR [ebx-0x1]
  417273:	push   es
  417274:	ins    DWORD PTR es:[edi],dx
  417275:	rcl    BYTE PTR [ecx-0x1e67b236],0xd5
  41727c:	idiv   BYTE PTR [edx]
  41727e:	lock mov DWORD PTR ds:0xafeb3a7e,esp
  417285:	int    0x9f
  417287:	ror    BYTE PTR [ecx-0x3a2fdbdf],cl
  41728d:	rol    bl,cl
  41728f:	fwait
  417290:	cmc    
  417291:	ret    
  417292:	popa   
  417293:	out    dx,al
  417294:	aaa    
  417295:	iret   
  417296:	stos   BYTE PTR es:[edi],al
  417297:	xchg   esp,eax
  417298:	mov    edx,0x8e61fa15
  41729d:	or     eax,0x3f9c5773
  4172a2:	repnz shl BYTE PTR [edi],1
  4172a5:	push   edx
  4172a6:	mov    ah,BYTE PTR [esi+ecx*1]
  4172a9:	or     ah,ch
  4172ab:	push   cs
  4172ac:	js     0x41730e
  4172ae:	push   ebp
  4172af:	hlt    
  4172b0:	not    BYTE PTR [ebx-0x6c]
  4172b3:	mov    ds:0x101812a8,al
  4172b8:	inc    ebx
  4172b9:	ins    BYTE PTR es:[edi],dx
  4172ba:	cmp    DWORD PTR [eax],ecx
  4172bc:	jp     0x41733b
  4172be:	rcl    BYTE PTR ds:0x5f9e3703,1
  4172c4:	pop    edi
  4172c5:	loop   0x41730d
  4172c7:	idiv   BYTE PTR [esi+0x3]
  4172ca:	mov    edx,0xc4485258
  4172cf:	test   DWORD PTR [ebx],ebp
  4172d1:	lahf   
  4172d2:	sbb    al,0x78
  4172d4:	ins    BYTE PTR es:[edi],dx
  4172d5:	ins    BYTE PTR es:[edi],dx
  4172d6:	(bad)  
  4172d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172d9:	retf   0xa42f
  4172dc:	jbe    0x41732b
  4172de:	jo     0x417311
  4172e0:	aad    0x3f
  4172e2:	call   0x36c10c2c
  4172e7:	out    dx,al
  4172e8:	gs jo  0x417319
  4172eb:	movhps xmm5,QWORD PTR [ecx-0x31667125]
  4172f2:	imul   ebx,DWORD PTR [edi+0x58c42e08],0x7d
  4172f9:	mov    edi,esi
  4172fb:	pop    ebx
  4172fc:	ror    BYTE PTR [edi+0x5e],1
  4172ff:	push   edi
  417300:	arpl   dx,bp
  417302:	or     al,0x73
  417304:	fmul   DWORD PTR [esi-0x5c]
  417307:	loopne 0x4172d2
  417309:	mov    dh,0x89
  41730b:	mov    ebx,0x340bcf3a
  417310:	or     esi,DWORD PTR [eax]
  417312:	sub    eax,0x32ce8f10
  417317:	xor    edi,DWORD PTR [edx+0x3]
  41731a:	fcomp  DWORD PTR [eax+0x3a7f8111]
  417320:	fld    QWORD PTR [ebx]
  417322:	pop    es
  417323:	(bad)  
  417324:	xchg   ebx,eax
  417325:	shl    DWORD PTR [edx+0x24],0x94
  417329:	arpl   bx,di
  41732b:	mov    ds:0x35abccf6,al
  417330:	push   ecx
  417331:	mov    gs,ecx
  417333:	push   ss
  417334:	add    al,0x8b
  417336:	sub    al,0x2f
  417338:	jbe    0x4172f6
  41733a:	pop    es
  41733b:	add    eax,0xb2ecaf72
  417340:	jp     0x417384
  417342:	sbb    BYTE PTR [ebx+0xe],bl
  417345:	or     BYTE PTR [esi],ah
  417347:	xchg   edi,eax
  417348:	icebp  
  417349:	push   esi
  41734a:	clc    
  41734b:	xchg   esi,eax
  41734c:	sti    
  41734d:	scas   eax,DWORD PTR es:[edi]
  41734e:	pop    esi
  41734f:	push   0xab61c814
  417354:	xor    bh,BYTE PTR [ecx]
  417356:	in     al,dx
  417357:	mov    ebp,0xdf313958
  41735c:	cli    
  41735d:	add    eax,DWORD PTR [ebp-0x63]
  417360:	or     bh,BYTE PTR [esi-0x38]
  417363:	clc    
  417364:	(bad)  
  417365:	out    dx,al
  417366:	imul   eax,DWORD PTR [ebx-0x29],0x6f
  41736a:	push   cs
  41736b:	outs   dx,BYTE PTR ss:[esi]
  41736d:	(bad)  
  41736e:	adc    ah,BYTE PTR [ebx+0x32]
  417371:	(bad)  
  417372:	pop    esp
  417373:	or     ch,BYTE PTR [ecx+0x3e]
  417376:	cmp    ecx,DWORD PTR [ecx-0x45ae4e0]
  41737c:	jb     0x41738e
  41737e:	sti    
  41737f:	inc    ecx
  417380:	addr16 (bad) 
  417382:	gs stc 
  417384:	mov    edx,0xcdaadb02
  417389:	cld    
  41738a:	jbe    0x41738c
  41738c:	inc    esi
  41738d:	xor    al,0x8b
  41738f:	sbb    BYTE PTR [ecx],dh
  417391:	es push es
  417393:	cli    
  417394:	jge    0x41731c
  417396:	mov    edi,0xbc5c8f7d
  41739b:	cmc    
  41739c:	ret    0xb63f
  41739f:	out    dx,al
  4173a0:	ror    esp,0x3b
  4173a3:	cmc    
  4173a4:	push   0x78
  4173a6:	sti    
  4173a7:	(bad)  
  4173a8:	mov    ebx,0x10f11c36
  4173ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173ae:	pop    esp
  4173af:	loop   0x417374
  4173b1:	xchg   esp,eax
  4173b2:	retf   
  4173b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173b4:	scas   al,BYTE PTR es:[edi]
  4173b5:	xor    DWORD PTR [esi+ecx*4+0x21],0xdeee6f8f
  4173bd:	pop    esp
  4173be:	in     eax,dx
  4173bf:	mov    bh,0x42
  4173c1:	adc    esi,DWORD PTR [ecx+0x52]
  4173c4:	pop    ss
  4173c5:	xor    BYTE PTR [eax],bl
  4173c7:	cmp    al,0x13
  4173c9:	sbb    BYTE PTR ds:[ecx-0x4e],ah
  4173cd:	test   DWORD PTR [ecx+0x3ca8c1b2],ebp
  4173d3:	(bad)  
  4173d4:	push   ds
  4173d5:	mov    dl,0xc6
  4173d7:	loope  0x417362
  4173d9:	push   0x7d
  4173db:	push   0x6d
  4173dd:	mov    ah,0x40
  4173df:	or     al,cl
  4173e1:	or     bh,BYTE PTR [edi]
  4173e3:	mov    edx,0x80ca2d12
  4173e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173e9:	out    0x5,eax
  4173eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173ec:	sbb    al,0x71
  4173ee:	ins    DWORD PTR es:[edi],dx
  4173ef:	xchg   ah,cl
  4173f1:	push   ss
  4173f2:	out    dx,al
  4173f3:	fld    TBYTE PTR [ecx-0x35]
  4173f6:	ins    DWORD PTR es:[edi],dx
  4173f7:	inc    edx
  4173f8:	repnz es sbb DWORD PTR ss:[esi],0x66
  4173fe:	shl    BYTE PTR [esi-0x5e],0x18
  417402:	out    dx,al
  417403:	jg     0x4173cd
  417405:	push   edi
  417406:	sbb    dh,BYTE PTR [edx]
  417408:	jbe    0x4173ad
  41740a:	mov    edi,0x2d3990d0
  41740f:	into   
  417410:	jmp    0x597a:0xaaccfc4d
  417417:	pop    ecx
  417418:	(bad)  
  417419:	fld    TBYTE PTR [edi]
  41741b:	pushf  
  41741c:	dec    eax
  41741d:	imul   ecx,DWORD PTR [edx],0xffffffc6
  417420:	pop    ebx
  417421:	and    al,0xb0
  417423:	jno    0x41748d
  417425:	(bad)
  417429:	mov    edx,0x44576b9e
  41742e:	leave  
  41742f:	(bad)  
  417431:	sbb    al,0xf
  417433:	adc    DWORD PTR [ecx],esi
  417435:	sub    eax,0x831f93ed
  41743a:	cld    
  41743b:	bound  esi,QWORD PTR [ebx]
  41743d:	cs mov esp,0x70fc1817
  417443:	sti    
  417444:	pushf  
  417445:	out    0x4a,eax
  417447:	cmp    al,0xa
  417449:	lock pop edi
  41744b:	and    DWORD PTR [esi+0x17],ebp
  41744e:	popf   
  41744f:	pop    edi
  417450:	jp     0x41749f
  417452:	popf   
  417453:	retf   0x4cd5
  417456:	inc    edi
  417457:	pop    eax
  417458:	sbb    al,BYTE PTR [esi]
  41745a:	nop
  41745b:	jmp    0x4173fd
  41745d:	jnp    0x41741c
  41745f:	fcom   QWORD PTR [edi+edx*8-0x5567ab52]
  417466:	sbb    eax,0xf0c05595
  41746b:	rol    DWORD PTR [esi-0x1e53e48d],cl
  417471:	dec    eax
  417472:	cmc    
  417473:	std    
  417474:	(bad)  
  417475:	adc    ebp,eax
  417477:	pusha  
  417478:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417479:	add    ebp,DWORD PTR gs:[eax+0x69706035]
  417480:	and    ch,bl
  417482:	imul   ebx,DWORD PTR [eax+edx*2+0xfd50b3d],0x415c525a
  41748d:	les    ecx,FWORD PTR [esi]
  41748f:	retf   
  417490:	push   ss
  417491:	jno    0x4174ad
  417493:	iret   
  417494:	xchg   al,al
  417496:	or     al,0x0
  417498:	mov    bh,0x42
  41749a:	adc    al,BYTE PTR [edi+0x76]
  41749d:	(bad)  
  41749e:	leave  
  41749f:	jne    0x4174cc
  4174a1:	cmp    ecx,DWORD PTR es:[ecx-0x76]
  4174a5:	jmp    0x6121aab
  4174aa:	arpl   WORD PTR [edx-0x5f13d164],di
  4174b0:	mov    edi,0xa1621c59
  4174b5:	nop
  4174b6:	call   0x9668:0xbc7689d8
  4174bd:	jnp    0x4174cc
  4174bf:	lahf   
  4174c0:	leave  
  4174c1:	sub    eax,0xbc5f8afb
  4174c6:	dec    ecx
  4174c7:	ret    
  4174c8:	add    DWORD PTR [edi],edi
  4174ca:	xchg   edi,eax
  4174cb:	push   cs
  4174cc:	cmp    eax,DWORD PTR [ebp+0x66]
  4174cf:	inc    esi
  4174d0:	(bad)  
  4174d1:	mov    ebp,0x1c71ced1
  4174d6:	loop   0x4174ed
  4174d8:	push   esi
  4174d9:	sub    al,0x3d
  4174db:	pop    ebp
  4174dc:	push   ebp
  4174dd:	repnz inc ecx
  4174df:	mov    ebp,DWORD PTR [ecx+0x19f67e67]
  4174e5:	dec    eax
  4174e6:	jbe    0x4174eb
  4174e8:	(bad)  
  4174e9:	fdiv   DWORD PTR [eax+eiz*2+0x1]
  4174ed:	bound  edx,QWORD PTR [ecx+0x73]
  4174f0:	stos   DWORD PTR es:[edi],eax
  4174f1:	xchg   ebp,eax
  4174f2:	pop    esi
  4174f3:	mov    bl,BYTE PTR [edi]
  4174f5:	mov    ds:0x5f6b4dbf,al
  4174fa:	pop    ss
  4174fb:	dec    ebp
  4174fc:	and    al,0x60
  4174fe:	pop    edx
  4174ff:	imul   edi,DWORD PTR [esi+0x77],0xe1d7b7bb
  417506:	test   eax,0x7e28cac6
  41750b:	fdivr  QWORD PTR [edi-0xeb14cbc]
  417511:	(bad)  
  417512:	(bad)  [ebp-0x778b9fa5]
  417518:	ins    BYTE PTR es:[edi],dx
  417519:	mov    dh,0x36
  41751b:	xchg   edx,eax
  41751c:	mov    ds:0x2ea43b0,al
  417521:	sbb    ebx,DWORD PTR [ebx-0x12d4388f]
  417527:	ja     0x4174ab
  417529:	scas   eax,DWORD PTR es:[edi]
  41752a:	out    0x67,al
  41752c:	mov    eax,0x16fa70d3
  417531:	int    0x57
  417533:	retf   0xe4cf
  417536:	iret   
  417537:	and    eax,0xc0b662d1
  41753c:	ret    
  41753d:	mov    cl,0xee
  41753f:	fld    DWORD PTR [ecx]
  417541:	mov    al,ds:0x74583a7a
  417546:	mov    edi,0x9334b563
  41754b:	out    dx,eax
  41754c:	adc    esi,esp
  41754e:	inc    eax
  41754f:	inc    ecx
  417550:	hlt    
  417551:	pop    ebp
  417552:	dec    edi
  417553:	(bad)  
  417554:	push   ebp
  417555:	mov    ds:0x1fc99126,eax
  41755a:	(bad)  
  41755b:	arpl   WORD PTR ds:0xba57c5a2,cx
  417561:	inc    edi
  417562:	xor    eax,0x6dd0485f
  417567:	add    al,0x4a
  417569:	scas   eax,DWORD PTR es:[edi]
  41756a:	fistp  WORD PTR [edi+0x16]
  41756d:	jmp    0x56fb19fc
  417572:	sub    BYTE PTR [edi],0x57
  417575:	or     ebx,DWORD PTR [edi-0x67a2b1a0]
  41757b:	jl     0x4175d3
  41757d:	out    dx,eax
  41757e:	push   esi
  41757f:	pop    ebp
  417580:	frstor ds:0x88cdd50f
  417586:	mov    ah,0x18
  417588:	jl     0x417595
  41758a:	pusha  
  41758b:	add    al,0x94
  41758d:	shr    DWORD PTR [esi-0x252fac84],0x7
  417594:	inc    eax
  417595:	loop   0x41751f
  417597:	and    BYTE PTR [ecx-0x72],ch
  41759a:	sbb    eax,0xa75201f4
  41759f:	inc    edi
  4175a0:	in     al,dx
  4175a1:	sub    esi,DWORD PTR [edx+0x7404a62a]
  4175a7:	sub    al,cl
  4175a9:	(bad)  
  4175aa:	aam    0xde
  4175ac:	xor    BYTE PTR [ebx+eax*8-0x450d0b1],bl
  4175b3:	sub    ebx,eax
  4175b5:	pop    ecx
  4175b6:	jb     0x417599
  4175b8:	neg    DWORD PTR [ecx-0x27d5bb51]
  4175be:	aas    
  4175bf:	call   0x35b4:0x59cc45b1
  4175c6:	add    eax,0xe7b15e21
  4175cb:	push   0xffffffbe
  4175cd:	sub    dh,BYTE PTR [ebp+esi*4+0x1c6931ce]
  4175d4:	mov    eax,0x82ee8c10
  4175d9:	push   esp
  4175da:	pop    edx
  4175db:	mov    al,0xc6
  4175de:	mov    ecx,0xfaaa8997
  4175e3:	mov    ebp,DWORD PTR [edx+0x1c60e443]
  4175e9:	(bad)  
  4175ea:	stc    
  4175eb:	fmul   QWORD PTR [edi]
  4175ed:	xchg   esi,eax
  4175ee:	sub    eax,0x96c537af
  4175f3:	dec    ebx
  4175f4:	mulps  xmm6,XMMWORD PTR [eax+0x2a]
  4175f8:	test   DWORD PTR [edi-0x7b],0xc386271e
  4175ff:	jb     0x4175a1
  417601:	outs   dx,BYTE PTR ds:[esi]
  417602:	xchg   esp,eax
  417603:	mov    al,0xbd
  417605:	pop    eax
  417606:	mov    bh,0x64
  417608:	push   esp
  417609:	mov    bl,bh
  41760b:	iret   
  41760c:	jg     0x41760e
  41760e:	jno    0x41767a
  417610:	mov    ecx,0x57e7305f
  417615:	mov    ebx,0xa72bf647
  41761a:	das    
  41761b:	scas   al,BYTE PTR es:[edi]
  41761c:	dec    esi
  41761d:	dec    eax
  41761e:	push   ebp
  41761f:	(bad)  
  417620:	adc    esp,DWORD PTR [esi+ecx*4]
  417623:	ins    BYTE PTR es:[edi],dx
  417624:	jno    0x41762b
  417626:	xor    eax,0xf8a2098c
  41762b:	or     al,0x63
  41762d:	lods   al,BYTE PTR ds:[esi]
  41762e:	add    ah,BYTE PTR [ebx]
  417630:	xchg   ebx,eax
  417631:	enter  0xba90,0x4e
  417635:	inc    edx
  417636:	mov    esi,0x712f05fb
  41763b:	inc    ebx
  41763c:	pushf  
  41763d:	call   0x968797d3
  417642:	(bad)  [edi+0x7c]
  417645:	nop
  417646:	xlat   BYTE PTR ds:[ebx]
  417647:	hlt    
  417648:	ret    
  417649:	aaa    
  41764a:	into   
  41764b:	adc    eax,0x4f19eac6
  417650:	jnp    0x417623
  417652:	ret    0xd907
  417655:	sub    bh,bl
  417657:	pop    edx
  417658:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417659:	nop
  41765a:	mov    edx,0xa16fc357
  41765f:	sub    DWORD PTR [eax+0x65120c86],ebp
  417665:	cmp    al,BYTE PTR [edx]
  417667:	cli    
  417668:	xor    ecx,DWORD PTR [eax]
  41766a:	dec    edx
  41766b:	xchg   ebp,eax
  41766c:	sub    edi,ebp
  41766e:	imul   edi,DWORD PTR [ecx-0x16],0x1a716e4c
  417675:	mov    al,0xb4
  417677:	fwait
  417678:	push   ds
  417679:	cs push esp
  41767b:	or     esp,DWORD PTR [ebx-0x72]
  41767e:	xor    DWORD PTR [eax-0x6a638a79],0x1f
  417685:	and    eax,0x1aaad814
  41768a:	sbb    al,0x8e
  41768c:	rcr    dl,cl
  41768e:	jno    0x417685
  417690:	stos   DWORD PTR es:[edi],eax
  417691:	ds dec edx
  417693:	mov    eax,ds:0x58056393
  417698:	push   ds
  417699:	add    eax,0xac60a36a
  41769e:	js     0x417631
  4176a0:	scas   al,BYTE PTR es:[edi]
  4176a1:	sahf   
  4176a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176a3:	or     BYTE PTR [esi+0x4533142f],bl
  4176a9:	push   esp
  4176aa:	enter  0x3ec5,0x16
  4176ae:	mov    fs,eax
  4176b0:	lock cmp edx,DWORD PTR [ebx]
  4176b3:	jne    0x417672
  4176b5:	lahf   
  4176b6:	iret   
  4176b7:	mov    WORD PTR [edx+0xa],?
  4176ba:	je     0x41770f
  4176bc:	stc    
  4176bd:	imul   eax,DWORD PTR [ebx+0x20],0x90baa749
  4176c4:	xchg   esp,eax
  4176c5:	fcom   QWORD PTR [ecx]
  4176c7:	xor    esi,esi
  4176c9:	adc    esp,edi
  4176cb:	call   0x5370ba56
  4176d0:	mov    ebx,0x73d907b2
  4176d5:	xchg   BYTE PTR [ecx+eiz*8],bh
  4176d8:	mov    ebx,0x338bd92d
  4176dd:	in     al,0x42
  4176df:	daa    
  4176e0:	test   DWORD PTR [esi-0x451a49c5],edx
  4176e6:	mov    edx,0x1b0bfdc3
  4176eb:	es mov ch,0x60
  4176ee:	rcr    BYTE PTR [eax],0xc6
  4176f1:	js     0x417712
  4176f3:	push   edx
  4176f4:	sub    BYTE PTR [edi],ch
  4176f6:	cmp    esp,DWORD PTR [edi+0x14]
  4176f9:	outs   dx,DWORD PTR ds:[esi]
  4176fa:	cwde   
  4176fb:	in     al,dx
  4176fc:	cmp    DWORD PTR [ecx+ebx*4],esi
  4176ff:	inc    ebp
  417700:	frstor [esi+ecx*2-0x212102e4]
  417707:	or     ebx,DWORD PTR [ebx]
  417709:	test   DWORD PTR [ebp+0x67],eax
  41770c:	cmp    dl,BYTE PTR [ebp-0x4144682a]
  417712:	cmp    DWORD PTR [edi],0xb5c2e020
  417718:	xor    esi,DWORD PTR [esi-0x5a]
  41771b:	push   0xffffffd0
  41771d:	push   edx
  41771e:	gs or  al,0x6d
  417721:	mov    ebp,0x6fa6dd6b
  417726:	mov    ebx,0x1a5bbcd9
  41772b:	cmp    DWORD PTR [esi-0x28079809],0xfcd03309
  417735:	jp     0x417775
  417737:	nop
  417738:	lock jmp 0x417706
  41773b:	(bad)  
  41773c:	mov    edi,0x7866f24d
  417741:	mov    esp,0x451db5e1
  417746:	sub    BYTE PTR [edx+0x1537d43c],ch
  41774c:	cmc    
  41774d:	dec    ecx
  41774e:	pop    esi
  41774f:	mov    cl,0xe3
  417751:	and    BYTE PTR [eax+0x6c],bl
  417754:	cli    
  417755:	mov    dh,0xda
  417757:	xor    bl,BYTE PTR [edi-0x76]
  41775a:	xor    eax,0x55903c4a
  41775f:	jecxz  0x41771f
  417761:	stos   BYTE PTR es:[edi],al
  417762:	sub    eax,0x51a2de83
  417767:	aaa    
  417768:	cmp    BYTE PTR [ebx+0x54],0xb8
  41776c:	inc    DWORD PTR [ecx+0x66]
  41776f:	mov    BYTE PTR ds:0xbc72ce08,bl
  417775:	mov    dh,0xf5
  417777:	lods   eax,DWORD PTR ds:[esi]
  417778:	cdq    
  417779:	fiadd  WORD PTR [esi+eiz*4]
  41777c:	and    ch,dl
  41777e:	pop    esi
  41777f:	out    dx,eax
  417780:	dec    edi
  417781:	outs   dx,BYTE PTR ds:[esi]
  417782:	or     eax,0x7ae4b409
  417787:	(bad)  
  417788:	adc    DWORD PTR [ecx],ebp
  41778a:	ja     0x41777d
  41778c:	mov    ds:0xb807e168,al
  417791:	icebp  
  417792:	cld    
  417793:	fnstsw WORD PTR ds:0xc3c9bbf5
  417799:	mov    ah,0xb3
  41779b:	fs das 
  41779d:	pushf  
  41779e:	in     al,0x33
  4177a0:	fcom   QWORD PTR [ecx+0x38]
  4177a3:	cld    
  4177a4:	out    0x2b,eax
  4177a6:	lea    esp,[edi]
  4177a8:	xor    al,0xa3
  4177aa:	call   0xc0d7343b
  4177af:	adc    al,0x1a
  4177b1:	ret    
  4177b2:	arpl   si,bx
  4177b4:	call   0xf341:0xe506b287
  4177bb:	and    bh,BYTE PTR [ecx-0x3c]
  4177be:	shl    BYTE PTR [edx],cl
  4177c0:	mov    bl,0xb4
  4177c2:	icebp  
  4177c3:	cmp    DWORD PTR [edi+0x77],ebx
  4177c6:	sub    bh,bh
  4177c8:	mov    bh,0xaf
  4177ca:	adc    edi,DWORD PTR [ebx-0x751c7e6b]
  4177d0:	stos   BYTE PTR es:[edi],al
  4177d1:	mov    ch,0xf1
  4177d3:	push   0xffffffcc
  4177d5:	xor    dh,bh
  4177d7:	into   
  4177d8:	fidivr DWORD PTR [ebx]
  4177da:	stc    
  4177db:	and    al,0xb1
  4177dd:	hlt    
  4177de:	xor    ecx,esi
  4177e0:	cmc    
  4177e1:	push   ebp
  4177e2:	xor    al,0x8f
  4177e4:	ja     0x41782c
  4177e6:	jge    0x4177ff
  4177e8:	pop    ecx
  4177e9:	jnp    0x4177c7
  4177eb:	bnd jmp 0x4177fc
  4177ee:	cmc    
  4177ef:	test   edx,esi
  4177f1:	add    cl,ah
  4177f3:	jmp    0x119d93db
  4177f8:	sub    eax,0xde39a5a9
  4177fd:	push   ds
  4177fe:	arpl   dx,ax
  417800:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417801:	clc    
  417802:	js     0x4177cd
  417804:	dec    edi
  417805:	xchg   ebp,eax
  417806:	out    dx,eax
  417807:	scas   al,BYTE PTR es:[edi]
  417808:	jbe    0x4177c6
  41780a:	test   DWORD PTR [edi],edx
  41780c:	pop    ss
  41780d:	gs mov eax,0xed3482eb
  417813:	jmp    0x1510225d
  417818:	scas   al,BYTE PTR es:[edi]
  417819:	retf   0x1281
  41781c:	dec    edx
  41781d:	mov    eax,0x82506e4f
  417822:	clc    
  417823:	cmp    eax,ebp
  417825:	arpl   sp,bx
  417827:	xchg   edi,eax
  417828:	cwde   
  417829:	xor    eax,DWORD PTR [edi]
  41782b:	sbb    DWORD PTR [esi],0xdeeb2765
  417831:	outs   dx,DWORD PTR ds:[esi]
  417832:	(bad)  
  417834:	or     eax,0x9969c4ac
  417839:	inc    ebx
  41783a:	push   0xffffff85
  41783c:	sub    eax,0x287e5579
  417841:	jmp    0x4177f0
  417843:	popa   
  417844:	lods   al,BYTE PTR ds:[esi]
  417845:	int3   
  417846:	(bad)  
  417847:	popf   
  417848:	mov    BYTE PTR [eax],0x44
  41784b:	in     al,0xa7
  41784d:	xchg   ebx,eax
  41784e:	test   BYTE PTR [edi+0x49fd33ed],dl
  417854:	sahf   
  417855:	pop    esi
  417856:	sbb    eax,0xa16fa0d2
  41785b:	inc    edx
  41785c:	mov    esi,0x7bb4e097
  417861:	push   0xffffffa6
  417863:	hlt    
  417864:	xor    al,0xa2
  417866:	jbe    0x4178af
  417868:	test   BYTE PTR [esp+edi*2-0x39],bh
  41786c:	ret    0xe086
  41786f:	jmp    0x4178aa
  417871:	xchg   ecx,eax
  417872:	hlt    
  417873:	mov    edx,0x48c2137f
  417878:	adc    edi,ebp
  41787a:	lods   al,BYTE PTR ds:[esi]
  41787b:	pop    ds
  41787c:	sar    DWORD PTR [esi+0x1d7c7cd3],1
  417882:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417883:	imul   edx,DWORD PTR [ecx+0x67],0x135919b3
  41788a:	add    BYTE PTR [esi+0x18cfe3ee],ch
  417890:	xchg   ebp,eax
  417891:	test   BYTE PTR [ebx],0xad
  417894:	adc    DWORD PTR [edx-0x21],edx
  417897:	lods   al,BYTE PTR ss:[esi]
  417899:	sub    BYTE PTR [eax-0x68],0xd2
  41789d:	call   0xc82a166d
  4178a2:	(bad)  
  4178a3:	mov    dh,0x75
  4178a5:	aad    0xfb
  4178a7:	push   esi
  4178a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178a9:	push   edi
  4178aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178ab:	pushf  
  4178ac:	jecxz  0x417845
  4178ae:	mov    ch,0x4d
  4178b0:	or     al,0x3a
  4178b2:	or     bl,BYTE PTR [edi-0x50e32e9e]
  4178b8:	adc    BYTE PTR [edi],0x11
  4178bb:	in     al,dx
  4178bc:	xchg   esp,eax
  4178bd:	addr16 sbb al,0xd5
  4178c1:	(bad)  
  4178c2:	lods   al,BYTE PTR ds:[esi]
  4178c3:	out    0xc2,al
  4178c5:	xchg   esp,eax
  4178c6:	mov    al,cs:0x75be1149
  4178cc:	mov    ds,esi
  4178ce:	rol    DWORD PTR [edi+esi*4+0x5dd8c804],0x99
  4178d6:	adc    esi,DWORD PTR [edi]
  4178d8:	sar    BYTE PTR [esi],cl
  4178da:	pop    ss
  4178db:	fwait
  4178dc:	jecxz  0x417931
  4178de:	jmp    0x9588:0xc7454845
  4178e5:	nop
  4178e6:	imul   edx,DWORD PTR [edx+0x30ad095f],0xe303d87e
  4178f0:	mov    ah,0xbd
  4178f2:	and    ebp,ebp
  4178f4:	(bad)  
  4178f5:	add    ch,dl
  4178f7:	jno    0x41796e
  4178f9:	xchg   DWORD PTR [ebx],esp
  4178fb:	mov    ebx,0x8ca85d8b
  417900:	outs   dx,DWORD PTR ds:[esi]
  417901:	jno    0x4178ef
  417903:	or     esi,DWORD PTR [eax+0x7ebb82a8]
  417909:	cs cmp edx,0x24
  41790d:	mov    ds:0x870a745,eax
  417912:	loop   0x41795d
  417914:	and    al,0x4b
  417916:	outs   dx,BYTE PTR cs:[esi]
  417918:	es shl ebx,1
  41791b:	pop    eax
  41791c:	out    dx,eax
  41791d:	loop   0x4178b8
  41791f:	or     DWORD PTR [eax+ecx*4+0x284a52ea],0x24
  417927:	cmp    al,0x7d
  417929:	mov    dh,0xa0
  41792b:	stc    
  41792c:	loopne 0x417912
  41792e:	daa    
  41792f:	mov    es,WORD PTR [ecx-0x5c]
  417932:	cmp    DWORD PTR [esi+0x71],edi
  417935:	sti    
  417936:	add    BYTE PTR [edx+0x6e],0x97
  41793a:	jge    0x417917
  41793c:	pop    esi
  41793d:	adc    eax,0x47eee2d8
  417942:	leave  
  417943:	mov    ch,0x11
  417945:	cdq    
  417946:	test   BYTE PTR [esi],0x5c
  417949:	and    dl,BYTE PTR ds:0x5ee8cb52
  41794f:	push   ebp
  417950:	pop    ecx
  417951:	mov    ah,0x2c
  417953:	mov    edi,DWORD PTR [eax-0x7c8dd6d8]
  417959:	jge    0x417983
  41795b:	jge    0x4179a8
  41795d:	(bad)
  417960:	mov    eax,ds:0x50b959c
  417965:	sbb    eax,0xd983ca39
  41796a:	test   eax,0x98a8e209
  41796f:	stc    
  417970:	(bad)  
  417971:	stc    
  417972:	cli    
  417973:	or     eax,DWORD PTR [ebx+ebp*2+0x11f36d0e]
  41797a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41797b:	cmp    edx,DWORD PTR [ebp-0x52]
  41797e:	jno    0x4179bb
  417980:	popf   
  417981:	add    BYTE PTR [ebp+0x36],al
  417984:	test   eax,0x3e598e2c
  417989:	push   eax
  41798a:	ret    
  41798b:	bt     DWORD PTR [edx-0x80],ebx
  41798f:	push   es
  417990:	mov    eax,0x2bac69b3
  417995:	daa    
  417996:	pop    ds
  417997:	sub    ch,dh
  417999:	push   ecx
  41799a:	push   esp
  41799b:	lea    edi,[ebx-0x74576f1f]
  4179a1:	out    0xe7,al
  4179a3:	mov    ebx,0xe1814aea
  4179a8:	cmp    DWORD PTR gs:[ecx-0x212c4eac],esp
  4179af:	push   cs
  4179b0:	and    esi,DWORD PTR [esi]
  4179b2:	loopne 0x417953
  4179b4:	push   ebx
  4179b5:	dec    ebp
  4179b6:	test   DWORD PTR [edi-0x69754166],esp
  4179bc:	cmp    al,0xb5
  4179be:	add    al,0x6
  4179c0:	jbe    0x417989
  4179c2:	mov    esp,0x42413f42
  4179c7:	sub    al,BYTE PTR [ecx+0x18c4913a]
  4179cd:	scas   eax,DWORD PTR es:[edi]
  4179ce:	fimul  WORD PTR [esi+edi*4-0x1d71e64c]
  4179d5:	mov    ah,0x69
  4179d7:	inc    esi
  4179d8:	mov    ah,0x64
  4179da:	test   eax,0xd8ed8998
  4179df:	dec    ebx
  4179e0:	popa   
  4179e1:	xor    DWORD PTR [esi+edx*2],esp
  4179e4:	fwait
  4179e5:	jns    0x4179e7
  4179e7:	xchg   esp,eax
  4179e8:	jb     0x4179e8
  4179ea:	jl     0x4179ff
  4179ec:	sub    eax,0xf4e725d8
  4179f1:	xor    DWORD PTR [edi],edi
  4179f3:	int3   
  4179f4:	add    al,0x88
  4179f6:	xor    ecx,DWORD PTR [ebp-0x764fbfcd]
  4179fc:	cmc    
  4179fd:	jl     0x417a35
  4179ff:	std    
  417a00:	mov    bl,0xfb
  417a02:	cmc    
  417a03:	pop    ebx
  417a04:	dec    esi
  417a05:	mov    ch,0x43
  417a07:	add    esi,DWORD PTR [eax+0x74658b97]
  417a0d:	and    DWORD PTR [edi-0x1e523b96],ecx
  417a13:	fdivr  QWORD PTR [ebx-0x77]
  417a16:	inc    edi
  417a17:	pushf  
  417a18:	mov    eax,0x7d956872
  417a1d:	push   es
  417a1e:	push   edx
  417a1f:	mov    al,ds:0x2d37bdd6
  417a24:	xor    ebp,DWORD PTR [ecx+edi*1]
  417a27:	push   esi
  417a28:	xchg   edx,eax
  417a29:	aaa    
  417a2a:	sbb    bh,BYTE PTR [ebx]
  417a2c:	int    0xf0
  417a2e:	test   al,0x7a
  417a30:	adc    eax,0xefd4f2be
  417a35:	(bad)  
  417a36:	fiadd  WORD PTR ds:0xfa6174ba
  417a3c:	test   dh,bh
  417a3e:	(bad)  
  417a3f:	shl    BYTE PTR [ebx],1
  417a41:	sbb    eax,0xd2722a4c
  417a46:	aam    0xf0
  417a48:	sub    al,0x23
  417a4a:	repnz dec ebx
  417a4c:	dec    sp
  417a4e:	test   edx,ecx
  417a50:	enter  0xf7d8,0x9f
  417a54:	pusha  
  417a55:	test   DWORD PTR [ebx],ebp
  417a57:	or     ebx,DWORD PTR [ecx+eiz*1]
  417a5a:	jne    0x417a70
  417a5c:	xor    DWORD PTR [eax+0x33],0xffffffcd
  417a60:	pusha  
  417a61:	js     0x417a24
  417a63:	mov    DWORD PTR [edi+0x7b],esi
  417a66:	stc    
  417a67:	sbb    DWORD PTR [edi+0x3b6054ad],ebp
  417a6d:	or     bl,ah
  417a6f:	or     DWORD PTR ds:0x5446aca8,edx
  417a75:	mov    ch,0x39
  417a77:	(bad)  
  417a78:	subps  xmm3,XMMWORD PTR [ecx-0x76f00425]
  417a7f:	ins    DWORD PTR es:[edi],dx
  417a80:	inc    ebp
  417a81:	cmp    DWORD PTR [ecx+0x2e],eax
  417a84:	loope  0x417afe
  417a86:	outs   dx,DWORD PTR ds:[esi]
  417a87:	fwait
  417a88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a89:	and    BYTE PTR [edi],bh
  417a8b:	clc    
  417a8c:	ins    BYTE PTR es:[edi],dx
  417a8d:	shl    DWORD PTR [edi-0x75],0x11
  417a91:	xor    bl,cl
  417a93:	(bad)  
  417a94:	(bad)  
  417a95:	outs   dx,BYTE PTR ds:[esi]
  417a96:	call   0xde808c8e
  417a9b:	jmp    0x417b16
  417a9d:	xchg   esp,eax
  417a9e:	sbb    BYTE PTR [ecx],bl
  417aa0:	xchg   ebp,eax
  417aa1:	jae    0x417abb
  417aa3:	bound  esp,QWORD PTR [ecx]
  417aa5:	fadd   DWORD PTR [eax+esi*4+0x61]
  417aa9:	cmp    cl,BYTE PTR [esi]
  417aab:	and    BYTE PTR [ebp+0x1f4b8468],bl
  417ab1:	inc    eax
  417ab2:	xchg   edx,eax
  417ab3:	jmp    0x48a1dbc7
  417ab8:	sti    
  417ab9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417aba:	mov    edx,0xbbb2511a
  417abf:	popa   
  417ac0:	mov    al,ds:0x12050d97
  417ac5:	fsub   QWORD PTR [ebx]
  417ac7:	inc    esi
  417ac8:	lods   eax,DWORD PTR ds:[esi]
  417ac9:	outs   dx,DWORD PTR ds:[esi]
  417aca:	adc    al,0x31
  417acc:	cmp    ebp,edi
  417ace:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417acf:	imul   ebp,DWORD PTR [ecx-0x124c4f13],0x380494cb
  417ad9:	iret   
  417ada:	sbb    al,0x65
  417adc:	sub    bl,0x30
  417adf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ae0:	adc    al,0xc5
  417ae2:	mov    BYTE PTR [eax],bl
  417ae4:	push   ecx
  417ae5:	push   edi
  417ae6:	or     esp,ecx
  417ae8:	push   esi
  417ae9:	jb     0x417afd
  417aeb:	(bad)  [edx+0x2b]
  417aee:	mov    ch,0x1d
  417af0:	fisttp DWORD PTR [ebx]
  417af2:	aam    0xfe
  417af4:	(bad)  
  417af5:	adc    al,0xd1
  417af7:	pop    esi
  417af8:	jo     0x417b04
  417afa:	xchg   edi,eax
  417afb:	pop    es
  417afc:	xchg   BYTE PTR [eax-0x7e],al
  417aff:	fst    DWORD PTR [esi+0x7c]
  417b02:	inc    ebx
  417b03:	mov    edx,0x2199d738
  417b08:	xlat   BYTE PTR ds:[ebx]
  417b09:	loopne 0x417ae2
  417b0b:	push   esp
  417b0c:	pop    ebp
  417b0d:	jns    0x417ab2
  417b0f:	xchg   edx,eax
  417b10:	push   ebx
  417b11:	dec    edx
  417b12:	mov    ecx,0x3782e37b
  417b17:	ja     0x417b2f
  417b19:	inc    edx
  417b1a:	jle    0x417a9c
  417b1c:	dec    ecx
  417b1d:	stc    
  417b1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b1f:	jbe    0x417af3
  417b21:	cmp    BYTE PTR es:[ebx+0x58b1e29c],dh
  417b28:	icebp  
  417b29:	mov    ds:0xe668a239,al
  417b2e:	mov    ch,BYTE PTR [eax-0x4f]
  417b31:	push   ds
  417b32:	mov    eax,0xaf6afff9
  417b37:	mov    WORD PTR [eax],gs
  417b39:	int3   
  417b3a:	pop    eax
  417b3b:	mov    ah,0x1e
  417b3d:	xor    al,0x53
  417b3f:	xchg   esi,eax
  417b40:	pop    esp
  417b41:	mov    ah,0xa7
  417b43:	jg     0x417ac6
  417b45:	ror    esp,1
  417b47:	jbe    0x417bb0
  417b49:	ins    DWORD PTR es:[edi],dx
  417b4a:	adc    esp,DWORD PTR [esi+0x68]
  417b4d:	ss jmp 0x417adc
  417b50:	jg     0x417b36
  417b52:	call   0x9901:0x606452d5
  417b59:	call   0x91c2:0xbccd5cdd
  417b60:	call   0xda5b4a07
  417b65:	pop    ss
  417b66:	scas   eax,DWORD PTR es:[edi]
  417b67:	jnp    0x417bac
  417b69:	rol    DWORD PTR [ebx+0x52],1
  417b6c:	jno    0x417b47
  417b6e:	push   ebx
  417b6f:	xchg   DWORD PTR [ebx+edx*2],edx
  417b72:	mov    esi,0x6032ba8d
  417b77:	ja     0x417bf2
  417b79:	mov    ebp,0x303164c2
  417b7e:	ja     0x417b25
  417b80:	das    
  417b81:	mov    edi,0x796853a9
  417b86:	jmp    0x95fa:0x5302f311
  417b8d:	cmp    ebp,edx
  417b8f:	loope  0x417bee
  417b91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b92:	jl     0x417bab
  417b94:	cmp    eax,DWORD PTR [edi+0x7680a0e8]
  417b9a:	jne    0x417b24
  417b9c:	push   cs
  417b9d:	hlt    
  417b9e:	int3   
  417b9f:	into   
  417ba0:	pop    eax
  417ba1:	inc    ebp
  417ba2:	ss enter 0xbbbd,0x50
  417ba7:	mov    ecx,0xb52a0d1f
  417bac:	aas    
  417bad:	or     dl,BYTE PTR [eax+0x7ccc873]
  417bb3:	jecxz  0x417bd6
  417bb5:	sbb    al,0xdb
  417bb7:	fwait
  417bb8:	xor    DWORD PTR [eax],esp
  417bba:	cli    
  417bbb:	cmp    bl,BYTE PTR [edx]
  417bbd:	std    
  417bbe:	cmp    al,0xcb
  417bc0:	adc    al,0xd3
  417bc2:	xchg   ecx,eax
  417bc3:	jno    0x417b45
  417bc5:	or     ebx,DWORD PTR [ebp-0x51]
  417bc8:	retf   
  417bc9:	mov    edx,fs
  417bcb:	ds leave 
  417bcd:	cmp    BYTE PTR [ecx],0xc1
  417bd0:	sbb    eax,0x6f3ec268
  417bd5:	fwait
  417bd6:	push   ds
  417bd7:	mov    al,ds:0x1d511e1
  417bdc:	or     al,0x16
  417bde:	mov    esi,0x13016ac9
  417be3:	dec    ecx
  417be4:	ret    0x5d2
  417be7:	mov    al,ds:0x678ada54
  417bec:	jp     0xf11f3efa
  417bf2:	(bad)  
  417bf3:	gs scas eax,DWORD PTR es:[edi]
  417bf5:	jbe    0x417b95
  417bf7:	(bad)
  417bfa:	mov    al,ds:0xad08f649
  417bff:	cld    
  417c00:	je     0x417c06
  417c02:	xor    cl,BYTE PTR ds:0x40b9d78a
  417c08:	xchg   DWORD PTR [edi-0x13b910d4],edi
  417c0e:	inc    esi
  417c0f:	mov    bh,0x45
  417c11:	or     al,0x24
  417c13:	data16 jecxz 0x417c01
  417c16:	add    DWORD PTR [edx-0x3c],ebx
  417c19:	inc    esp
  417c1a:	mov    ds:0x5a44f3b5,al
  417c1f:	fwait
  417c20:	daa    
  417c21:	mov    bl,0x9d
  417c23:	mov    cs,ecx
  417c25:	stc    
  417c26:	mov    al,ds:0xaa10be42
  417c2b:	(bad)  
  417c2c:	sub    eax,0xc3137678
  417c31:	add    esp,DWORD PTR [esi-0x7c]
  417c34:	jno    0x417c99
  417c36:	das    
  417c37:	ja     0x417bf2
  417c39:	add    BYTE PTR [ebp-0xc7b8f40],dh
  417c3f:	mul    DWORD PTR [ecx-0x69]
  417c42:	dec    edx
  417c43:	pop    edi
  417c44:	aas    
  417c45:	sbb    DWORD PTR [edx],esi
  417c47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c48:	mov    eax,ds:0x1f27adeb
  417c4d:	je     0x417c90
  417c4f:	ss aam 0x19
  417c52:	fcomp  QWORD PTR gs:[ecx]
  417c55:	dec    edi
  417c56:	mov    al,0xde
  417c58:	cmp    DWORD PTR [ebp+0x7ef0005e],ecx
  417c5e:	sahf   
  417c5f:	mov    DWORD PTR [edi],esi
  417c61:	and    al,BYTE PTR [esi+0x3f605850]
  417c67:	psadbw mm3,QWORD PTR ds:0x54f081e3
  417c6e:	dec    ebp
  417c70:	out    dx,al
  417c71:	mov    ecx,0x6e59306d
  417c76:	and    al,0x18
  417c78:	sub    DWORD PTR [ecx+esi*2-0x1cb7624d],ebp
  417c7f:	xor    BYTE PTR [ecx],bh
  417c81:	ss xchg edi,eax
  417c83:	cli    
  417c84:	inc    ecx
  417c85:	inc    ebx
  417c86:	mov    al,0x1d
  417c88:	xchg   BYTE PTR [eax-0x60],bh
  417c8b:	in     al,dx
  417c8c:	sub    DWORD PTR [edi],eax
  417c8e:	jmp    0xa167:0x85974019
  417c95:	shl    al,0x99
  417c98:	xchg   DWORD PTR [eax],edi
  417c9a:	jecxz  0x417c75
  417c9c:	xchg   ecx,eax
  417c9d:	enter  0x1295,0x48
  417ca1:	lahf   
  417ca2:	xchg   edi,eax
  417ca3:	out    dx,eax
  417ca4:	mov    esi,0xf4570682
  417ca9:	push   ebp
  417caa:	cmp    al,0x58
  417cac:	jmp    0x417c97
  417cae:	push   esp
  417caf:	mov    cl,0x23
  417cb1:	and    edi,DWORD PTR [edx-0x485058df]
  417cb7:	icebp  
  417cb8:	xlat   BYTE PTR ds:[ebx]
  417cb9:	out    0x85,al
  417cbb:	and    eax,0xe6b08ba3
  417cc0:	repnz mov ds:0x474104e8,eax
  417cc6:	dec    esi
  417cc7:	iret   
  417cc8:	in     eax,dx
  417cc9:	in     al,0xc1
  417ccb:	xor    eax,DWORD PTR [edx+esi*4]
  417cce:	out    dx,al
  417ccf:	xor    DWORD PTR [eax],0xd66ce952
  417cd5:	cmp    ebp,ecx
  417cd7:	ja     0x417d2b
  417cd9:	pop    ds
  417cda:	pop    esp
  417cdb:	mov    cl,0x2e
  417cdd:	or     al,0x6a
  417cdf:	es std 
  417ce1:	(bad)  
  417ce2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ce3:	jnp    0x417cdf
  417ce5:	dec    eax
  417ce6:	cld    
  417ce7:	pop    ebp
  417ce8:	icebp  
  417ce9:	jmp    0x417c81
  417ceb:	mov    ebp,0xd7592ee5
  417cf0:	sbb    esp,DWORD PTR [edx-0x3498c4e]
  417cf6:	push   edx
  417cf7:	push   0x95618115
  417cfc:	repnz nop
  417cfe:	repz fwait
  417d00:	outs   dx,DWORD PTR ds:[esi]
  417d01:	pop    ds
  417d02:	sub    eax,ecx
  417d04:	mov    ecx,0x2e76403
  417d09:	test   BYTE PTR [ebx-0x4b],ah
  417d0c:	ss jb  0x417cfd
  417d0f:	sub    eax,DWORD PTR [edi+0x5ff2ff6]
  417d15:	outs   dx,DWORD PTR ds:[esi]
  417d16:	shl    BYTE PTR [eax-0x27fb7158],0x5d
  417d1d:	pop    edi
  417d1e:	jmp    0x4d0953d7
  417d23:	push   0x7
  417d25:	cdq    
  417d26:	inc    edx
  417d27:	(bad)  
  417d28:	mov    esi,0xf938a57c
  417d2d:	jmp    0x4ebd:0xae837d96
  417d34:	gs cli 
  417d36:	pop    edx
  417d37:	cld    
  417d38:	or     dh,BYTE PTR [ebx+0x5]
  417d3b:	jne    0x417d71
  417d3d:	fst    DWORD PTR [edi-0x55c1e877]
  417d43:	dec    edx
  417d44:	add    BYTE PTR ds:0xd16aaa5b,bh
  417d4a:	mov    cl,0xc5
  417d4c:	jno    0x417d8b
  417d4e:	test   DWORD PTR [ebp+0x11dfdf47],ebp
  417d54:	add    eax,DWORD PTR [edx*1-0x2d5aed6e]
  417d5b:	xlat   BYTE PTR ds:[ebx]
  417d5c:	in     al,0xe6
  417d5e:	pop    eax
  417d5f:	jnp    0x417d4c
  417d61:	push   cs
  417d62:	pop    ebx
  417d63:	adc    eax,0x5fac6d87
  417d68:	out    dx,al
  417d69:	(bad)  
  417d6a:	pop    edi
  417d6b:	push   ds
  417d6c:	inc    ebp
  417d6d:	pop    esp
  417d6e:	mov    ebp,0x428b5b02
  417d73:	pop    edx
  417d74:	and    BYTE PTR [edi+0x57b720b8],ch
  417d7a:	sub    edx,DWORD PTR [eax]
  417d7c:	div    DWORD PTR [edx-0x4bc2fd8a]
  417d82:	mov    ah,0x8d
  417d84:	int    0x77
  417d86:	sbb    al,BYTE PTR [ebx+edx*1+0x7100d68b]
  417d8d:	or     edx,DWORD PTR [edx+0x1f]
  417d90:	and    dh,BYTE PTR [ebx]
  417d92:	or     BYTE PTR [ebx],ah
  417d94:	dec    ebx
  417d95:	cmp    ch,BYTE PTR [esi+0x6e]
  417d98:	push   0x5dbcb107
  417d9d:	popa   
  417d9e:	add    DWORD PTR [ebp+0x69505430],ebx
  417da4:	xchg   ebp,eax
  417da5:	loop   0x417e16
  417da7:	scas   eax,DWORD PTR es:[edi]
  417da8:	fs mov ebp,0xe80a14ef
  417dae:	inc    edi
  417daf:	pop    ds
  417db0:	hlt    
  417db1:	out    dx,al
  417db2:	push   eax
  417db3:	jnp    0x417de6
  417db5:	js     0x417dc0
  417db7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417db8:	cmp    DWORD PTR [edx],ebp
  417dba:	jmp    0x9dac38ab
  417dbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417dc0:	sub    eax,0x9f57e8ba
  417dc5:	popw   es
  417dc7:	xchg   ebp,eax
  417dc8:	sti    
  417dc9:	test   eax,0xee5b6416
  417dce:	out    dx,al
  417dcf:	jmp    edx
  417dd1:	sahf   
  417dd2:	dec    esi
  417dd3:	test   DWORD PTR ds:0x58a2af58,eax
  417dd9:	(bad)  
  417dda:	in     al,dx
  417ddb:	hlt    
  417ddc:	xchg   esp,eax
  417ddd:	ins    DWORD PTR es:[edi],dx
  417dde:	jno    0x417e50
  417de0:	ror    al,cl
  417de2:	dec    esi
  417de3:	das    
  417de4:	mov    ds:0x701e8a43,al
  417de9:	in     al,dx
  417dea:	mov    dl,0xbb
  417dec:	cmp    edx,ebx
  417dee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417def:	icebp  
  417df0:	and    al,0x35
  417df2:	fst    QWORD PTR [ecx-0x42175e98]
  417df8:	test   BYTE PTR [eax-0x2a03c2d1],dh
  417dfe:	neg    BYTE PTR [edx-0x7c979572]
  417e04:	pop    edx
  417e05:	shl    DWORD PTR [esi-0x7d316d27],1
  417e0b:	push   ebx
  417e0c:	push   ebx
  417e0d:	inc    eax
  417e0e:	add    dl,al
  417e10:	jmp    0x417d9c
  417e12:	clc    
  417e13:	push   cs
  417e14:	adc    BYTE PTR [edx+0x2c],cl
  417e17:	add    bh,BYTE PTR [eax-0x67325620]
  417e1d:	fild   QWORD PTR [edi+0x51]
  417e20:	data16 arpl WORD PTR fs:[esi+eiz*2+0x9],bx
  417e26:	cmp    eax,0xda9c6294
  417e2b:	cs jae 0x417e3b
  417e2e:	cmp    cl,cl
  417e30:	outs   dx,DWORD PTR ds:[esi]
  417e31:	mov    al,0x9f
  417e33:	aam    0xb7
  417e35:	rcl    DWORD PTR [eax+0x38],0x8d
  417e39:	mov    al,0xb8
  417e3b:	dec    DWORD PTR [ebp-0x3a]
  417e3e:	enter  0x377c,0x45
  417e42:	xchg   edi,eax
  417e43:	or     al,0xf6
  417e45:	ret    
  417e46:	(bad)  
  417e47:	mov    dl,0x19
  417e49:	mov    bl,0x3d
  417e4b:	scas   eax,DWORD PTR es:[edi]
  417e4c:	or     BYTE PTR [ebp-0x2f],ah
  417e4f:	pop    es
  417e50:	pop    eax
  417e51:	sub    al,0xdc
  417e53:	jns    0x417e4b
  417e55:	dec    edx
  417e56:	inc    esi
  417e57:	imul   ebx,DWORD PTR [esi],0xffffffb5
  417e5a:	(bad)  
  417e5b:	push   ecx
  417e5c:	and    ebx,ecx
  417e5e:	shl    DWORD PTR ds:0x9b9a751,1
  417e64:	mov    ds:0x91b5bd5b,al
  417e69:	imul   DWORD PTR [edi]
  417e6b:	addr16 gs mov cl,0xfb
  417e6f:	out    0x8e,al
  417e71:	jmp    0x548af643
  417e76:	adc    BYTE PTR [edi+0x14],ah
  417e79:	jge    0x417e4f
  417e7b:	arpl   bx,bx
  417e7d:	xchg   ebx,eax
  417e7f:	or     dl,dl
  417e81:	push   eax
  417e82:	dec    esi
  417e83:	loope  0x417e1e
  417e85:	xor    al,0x80
  417e87:	aaa    
  417e88:	cmp    BYTE PTR [edx+0x59],0x41
  417e8c:	pop    ds
  417e8d:	bound  esi,QWORD PTR [ebp+0x16]
  417e90:	and    cl,BYTE PTR [ebp-0x7a14ca39]
  417e96:	cmp    al,0x72
  417e98:	xchg   bl,al
  417e9a:	lds    eax,FWORD PTR [edx]
  417e9c:	ins    DWORD PTR es:[edi],dx
  417e9d:	sub    al,BYTE PTR [ebx+0x1cbf64bb]
  417ea3:	and    ch,ah
  417ea5:	adc    DWORD PTR [edi+esi*1],ecx
  417ea8:	push   ds
  417ea9:	out    dx,al
  417eaa:	xchg   ebx,edx
  417eac:	or     bl,BYTE PTR [ebp-0x31]
  417eaf:	je     0x417e5f
  417eb1:	mov    ds:0x430f0fb7,eax
  417eb6:	inc    ecx
  417eb7:	dec    ebx
  417eb8:	push   eax
  417eb9:	out    0x64,eax
  417ebb:	cmp    edi,DWORD PTR [edi]
  417ebd:	(bad)  
  417ebe:	jmp    0xcace:0x506e51e1
  417ec5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ec6:	push   esp
  417ec7:	inc    edi
  417ec8:	(bad)  
  417ec9:	mov    ebp,0x2826c293
  417ece:	aam    0x28
  417ed0:	push   esp
  417ed1:	jmp    0x5300:0x918375f6
  417ed8:	ret    0x6f17
  417edb:	jle    0x417f53
  417edd:	(bad)  
  417ede:	adc    eax,DWORD PTR [esi+ecx*1]
  417ee1:	and    al,0xe0
  417ee3:	xor    al,0xf
  417ee5:	aad    0xcc
  417ee7:	dec    ebp
  417ee8:	sub    al,0xd4
  417eea:	mov    esi,0xeea8d82f
  417eef:	mov    BYTE PTR [esi*8-0x336efd2d],cl
  417ef6:	mov    bh,0x78
  417ef8:	bound  eax,QWORD PTR [ebx]
  417efa:	mov    al,ds:0xa66d7179
  417eff:	imul   ebp,esp,0xf0640a68
  417f05:	and    al,0x9e
  417f07:	xor    dl,BYTE PTR [edi-0x40724b44]
  417f0d:	xchg   ebx,eax
  417f0e:	lods   eax,DWORD PTR ds:[esi]
  417f0f:	mov    eax,0xeb3e19ab
  417f14:	ins    BYTE PTR es:[edi],dx
  417f15:	loopne 0x417f8b
  417f17:	lods   eax,DWORD PTR ds:[si]
  417f19:	push   es
  417f1a:	push   ebp
  417f1b:	stos   DWORD PTR es:[edi],eax
  417f1c:	aam    0xaf
  417f1e:	mov    ecx,0x1213ff50
  417f23:	cmp    eax,DWORD PTR [eax]
  417f25:	jmp    0xd868:0xd286d0b7
  417f2c:	pop    ss
  417f2d:	inc    ebp
  417f2e:	in     eax,dx
  417f2f:	pop    esi
  417f30:	lds    esi,FWORD PTR [ecx+0x26]
  417f33:	pusha  
  417f34:	inc    eax
  417f35:	outs   dx,BYTE PTR ds:[esi]
  417f36:	ficomp WORD PTR [ebx-0x49a5129d]
  417f3c:	xchg   ecx,eax
  417f3d:	jp     0x417eda
  417f3f:	mov    di,0x8b5e
  417f43:	and    edi,DWORD PTR [eax+0x52]
  417f46:	leave  
  417f47:	or     edx,esp
  417f49:	ror    DWORD PTR [ebp+eiz*1+0x53198c10],cl
  417f50:	add    eax,DWORD PTR [eax]
  417f52:	and    ah,BYTE PTR [edx+0x25]
  417f55:	test   DWORD PTR [edx],ebp
  417f57:	or     al,0x12
  417f59:	jo     0x417ee4
  417f5b:	pop    edi
  417f5c:	jecxz  0x417fc1
  417f5e:	inc    edi
  417f5f:	xchg   ebp,eax
  417f60:	xchg   esp,eax
  417f61:	test   BYTE PTR [esi],ch
  417f63:	nop
  417f64:	sub    edi,DWORD PTR [edi+eax*8-0x31]
  417f68:	out    dx,al
  417f69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f6a:	push   edx
  417f6b:	dec    esp
  417f6c:	stos   BYTE PTR es:[edi],al
  417f6d:	leave  
  417f6e:	pop    ds
  417f6f:	sbb    DWORD PTR ds:0x803d6226,ecx
  417f75:	(bad)  
  417f76:	outs   dx,DWORD PTR ds:[esi]
  417f77:	frstor [edx]
  417f79:	nop
  417f7a:	scas   eax,DWORD PTR es:[edi]
  417f7b:	or     BYTE PTR [edi+eiz*1],ch
  417f7e:	add    eax,0x1e3ab5f5
  417f83:	xchg   esi,eax
  417f84:	fcom   DWORD PTR [edx+0xd]
  417f87:	fsub   DWORD PTR [esi-0x18aaa0bf]
  417f8d:	inc    ebx
  417f8e:	ret    
  417f8f:	mov    ebp,0xe790741b
  417f94:	ds xchg edi,eax
  417f96:	into   
  417f97:	and    DWORD PTR [edi-0x24],ebx
  417f9a:	xor    dl,ch
  417f9c:	mov    DWORD PTR [eax],ebp
  417f9e:	fiadd  DWORD PTR [ecx]
  417fa0:	outs   dx,DWORD PTR ds:[esi]
  417fa1:	fcom   DWORD PTR [ecx]
  417fa3:	ret    
  417fa4:	add    ebx,DWORD PTR [esi+edi*2-0x5d644e4a]
  417fab:	pop    edi
  417fac:	cmp    DWORD PTR [eax],eax
  417fae:	inc    ecx
  417faf:	mov    dl,0xc1
  417fb1:	cdq    
  417fb2:	jl     0x417f8c
  417fb4:	es ss daa 
  417fb7:	push   esp
  417fb8:	inc    ebp
  417fb9:	ret    
  417fba:	xchg   ebx,eax
  417fbb:	push   cs
  417fbc:	mov    al,BYTE PTR [ecx-0x60]
  417fbf:	adc    DWORD PTR [edx-0x72d5535d],0x6abaec2a
  417fc9:	stc    
  417fca:	inc    eax
  417fcb:	add    dl,BYTE PTR [edx]
  417fcd:	lahf   
  417fce:	dec    ebx
  417fcf:	jnp    0x417fb3
  417fd1:	xchg   esi,eax
  417fd2:	in     al,0x42
  417fd4:	enterw 0xb069,0x63
  417fd9:	mov    ebx,0x579a1809
  417fde:	fild   QWORD PTR [ecx+0x4c1ab590]
  417fe4:	fcomi  st,st(4)
  417fe6:	pop    ebx
  417fe7:	aad    0x1
  417fe9:	mov    al,ds:0x12c77cf6
  417fee:	adc    esp,0x2eb0077e
  417ff4:	mov    eax,0xd635c433
  417ff9:	xchg   esp,eax
  417ffa:	cld    
  417ffb:	sub    eax,0xc0cb91ef
  418000:	stc    
  418001:	or     ah,dh
  418003:	dec    ebx
  418004:	mov    edx,0x81f46264
  418009:	pop    edx
  41800a:	ror    BYTE PTR [ebx],1
  41800c:	out    dx,eax
  41800d:	inc    esi
  41800e:	int    0xba
  418010:	(bad)  
  418011:	stc    
  418012:	ret    
  418013:	cdq    
  418014:	sub    edx,DWORD PTR [ebx+eax*8]
  418017:	ds scas eax,DWORD PTR es:[edi]
  418019:	mov    BYTE PTR [edi+0x25],al
  41801c:	xchg   ecx,eax
  41801d:	xor    eax,esp
  41801f:	ja     0x41803c
  418021:	repnz out dx,al
  418023:	test   BYTE PTR [ecx+0x10f61982],0x5f
  41802a:	or     ecx,edi
  41802c:	sbb    edx,DWORD PTR [ebp+0x4e43ec7c]
  418032:	jb     0x418085
  418034:	or     eax,0x13c165a8
  418039:	xor    cl,BYTE PTR [ebp+0x139b408a]
  41803f:	dec    eax
  418040:	add    esi,0x4cd4ef1d
  418046:	xor    eax,0xa9488469
  41804b:	aaa    
  41804c:	retf   0x6ce6
  41804f:	pop    edi
  418050:	sub    eax,0xa12f02ea
  418055:	xchg   di,ax
  418057:	add    BYTE PTR [ecx],ch
  418059:	jo     0x41806b
  41805b:	aad    0x25
  41805d:	js     0x41809a
  41805f:	out    dx,al
  418060:	sahf   
  418061:	es pop es
  418063:	pushf  
  418064:	icebp  
  418065:	std    
  418066:	js     0x4180d1
  418068:	js     0x418078
  41806a:	scas   eax,DWORD PTR es:[edi]
  41806b:	fild   QWORD PTR [edi]
  41806d:	jmp    0xaa2c:0x97f629d4
  418074:	imul   eax,DWORD PTR [ebp+0x7a99e4d7],0xb173887f
  41807e:	or     dh,ah
  418080:	cmc    
  418081:	not    BYTE PTR [ecx+0x46]
  418084:	or     DWORD PTR [edi],ecx
  418086:	imul   edx,esi,0xe57798e8
  41808c:	aaa    
  41808d:	and    ch,0x9a
  418090:	lods   al,BYTE PTR ds:[esi]
  418091:	pop    ebp
  418092:	xchg   esp,eax
  418093:	sbb    al,0x19
  418095:	jp     0x4180e8
  418097:	push   eax
  418098:	and    esp,DWORD PTR ds:0x315b406a
  41809e:	dec    edx
  41809f:	sub    BYTE PTR [edi+0x1be8b186],dl
  4180a5:	retf   
  4180a6:	dec    ebx
  4180a7:	gs add ebx,ecx
  4180aa:	and    dh,BYTE PTR [ebp+0x53d45942]
  4180b0:	sbb    dh,BYTE PTR [esi-0x19b5a9c9]
  4180b6:	sti    
  4180b7:	mov    esp,0x8da88282
  4180bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4180bd:	mov    esi,0x26debfd2
  4180c2:	push   esi
  4180c3:	mov    ebp,0x1913b9e5
  4180c8:	cs scas eax,DWORD PTR es:[edi]
  4180ca:	xchg   edi,eax
  4180cb:	cwde   
  4180cc:	inc    ebx
  4180cd:	cdq    
  4180ce:	mov    bl,0x2b
  4180d0:	cmp    esp,0xffffffb0
  4180d3:	gs leave 
  4180d5:	adc    DWORD PTR [ebx],edi
  4180d7:	sti    
  4180d8:	adc    eax,0xf6d262ed
  4180dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4180de:	inc    eax
  4180df:	jle    0x41810c
  4180e1:	xchg   edx,eax
  4180e2:	or     esi,eax
  4180e4:	loope  0x4180cd
  4180e6:	push   ebx
  4180e7:	cmp    eax,0x39ea8b42
  4180ec:	cmp    BYTE PTR [edx+0x70564e93],0x3f
  4180f3:	sbb    BYTE PTR [eax-0x5d59878],al
  4180f9:	ss xchg ebp,eax
  4180fb:	in     eax,dx
  4180fc:	mov    esi,?
  4180fe:	sub    ch,BYTE PTR cs:[ebx]
  418101:	test   esp,ebx
  418103:	xchg   ebx,eax
  418104:	push   0xffffff96
  418106:	pop    eax
  418107:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418108:	pop    ebp
  418109:	xor    esp,DWORD PTR [edx-0x8]
  41810c:	cmp    al,0xc2
  41810e:	jle    0x4180a4
  418110:	cwde   
  418111:	dec    edx
  418112:	ror    BYTE PTR [esi+edi*1-0xf5d24a7],1
  418119:	add    al,0x27
  41811b:	push   edx
  41811c:	aas    
  41811d:	add    eax,0xfd9c7f86
  418122:	retf   0xbdc6
  418125:	cs hlt 
  418127:	dec    edi
  418128:	bnd jmp 0x41812f
  41812b:	fimul  WORD PTR [ebx]
  41812d:	and    BYTE PTR [ecx-0x56c1932],bl
  418133:	leave  
  418134:	xor    al,bl
  418136:	add    eax,0x40e772b8
  41813b:	or     DWORD PTR [ebx+0x2e],esp
  41813e:	(bad)  [ebp+0x4545f077]
  418144:	jbe    0x41811f
  418146:	rol    DWORD PTR [ebx+0x2d],1
  418149:	stc    
  41814a:	je     0x418121
  41814c:	pusha  
  41814d:	xchg   edx,eax
  41814e:	arpl   WORD PTR ds:0x5bf52e2d,ax
  418154:	add    cl,ah
  418156:	fadd   DWORD PTR [edi]
  418158:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418159:	xchg   ebx,eax
  41815a:	sbb    al,0xc5
  41815c:	rcr    DWORD PTR [eax],cl
  41815e:	mov    edi,0x59b028eb
  418163:	fs dec edi
  418165:	mov    gs,WORD PTR [esi]
  418167:	jno    0x4181d8
  418169:	ss mov dh,0xf3
  41816c:	in     al,dx
  41816d:	ins    BYTE PTR es:[edi],dx
  41816e:	pop    esp
  41816f:	pop    esp
  418170:	aas    
  418171:	leave  
  418172:	inc    ebx
  418173:	jl     0x41818d
  418175:	lds    ebx,FWORD PTR [eax]
  418177:	jle    0x4181de
  418179:	test   eax,0xfdc3d15a
  41817e:	cmp    DWORD PTR [edx-0x4b],ecx
  418181:	push   cs
  418182:	shl    BYTE PTR [edi],0xe7
  418185:	fwait
  418186:	loop   0x4181c0
  418188:	repz in al,dx
  41818a:	dec    esp
  41818b:	call   0xa889:0x6eebbca3
  418192:	jb     0x4181f1
  418194:	pop    edx
  418195:	xor    eax,0x78abb3f9
  41819a:	int3   
  41819b:	gs test al,0xdd
  41819e:	mov    bh,0x9
  4181a0:	fwait
  4181a1:	xchg   edx,eax
  4181a2:	inc    edi
  4181a3:	or     DWORD PTR [eax],esi
  4181a5:	add    bl,BYTE PTR ds:0xc8e1139d
  4181ab:	mov    BYTE PTR [ecx-0x733b7f98],cl
  4181b1:	or     al,0xf3
  4181b3:	fs stc 
  4181b5:	ja     0x41821d
  4181b7:	pop    ds
  4181b8:	jmp    0x5d35:0x10edd2a6
  4181bf:	loope  0x418191
  4181c1:	hlt    
  4181c2:	repnz std 
  4181c4:	xchg   esp,ebx
  4181c6:	std    
  4181c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4181c8:	imul   eax,DWORD PTR [eax+0x55fd3b9],0x31d3ea70
  4181d2:	or     eax,0xd8ded9ec
  4181d7:	sbb    DWORD PTR [edi],edi
  4181d9:	sbb    dh,cl
  4181db:	js     0x4181dc
  4181dd:	sbb    eax,0x26cae446
  4181e2:	es and eax,0xecfd4708
  4181e8:	neg    DWORD PTR [esi+0x4bf9e923]
  4181ee:	inc    ecx
  4181ef:	xchg   ecx,eax
  4181f0:	stc    
  4181f1:	inc    ebp
  4181f2:	mov    ebp,0x39feeae8
  4181f7:	jmp    0x4181f9
  4181f9:	call   0x41ba3210
  4181fe:	jae    0x4181ce
  418200:	(bad)  
  418201:	retf   
  418202:	std    
  418203:	icebp  
  418204:	add    bl,BYTE PTR [esi+0x35a83944]
  41820a:	adc    ecx,edi
  41820c:	mov    al,0xab
  41820e:	out    dx,eax
  41820f:	or     al,0xd6
  418211:	fsub   DWORD PTR [esi+ecx*4-0x608169b3]
  418218:	jno    0x4181ea
  41821a:	push   esp
  41821b:	repnz call 0xe020:0x7814e8c6
  418223:	mov    edi,0x7520c990
  418228:	mov    ecx,0xa42a685
  41822d:	pop    eax
  41822e:	pop    edx
  41822f:	or     eax,0xba5ff828
  418234:	mov    eax,ds:0xe7429e91
  418239:	add    eax,0xfca05065
  41823e:	pop    eax
  41823f:	adc    bl,0xec
  418242:	or     bl,BYTE PTR [esi-0x684211fb]
  418248:	stos   DWORD PTR es:[edi],eax
  418249:	xchg   edx,ecx
  41824b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41824c:	gs popf 
  41824e:	jne    0x418204
  418250:	test   al,0xa0
  418252:	add    eax,0x8296e7c8
  418257:	hlt    
  418258:	mov    ?,WORD PTR [ebx+0x3b213fdf]
  41825e:	push   edi
  41825f:	mov    eax,ds:0xa1361298
  418264:	sub    DWORD PTR [ebp-0x4d8d28b7],ebp
  41826a:	retf   0x1224
  41826d:	pop    esp
  41826e:	push   0x6e
  418270:	or     al,0x54
  418272:	je     0x41823a
  418274:	fmul   QWORD PTR [ecx]
  418276:	sti    
  418277:	xchg   BYTE PTR [ebx+0x25272b59],al
  41827d:	inc    edi
  41827e:	int3   
  41827f:	dec    ebp
  418280:	outs   dx,DWORD PTR ds:[esi]
  418281:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418282:	xchg   esi,eax
  418283:	les    eax,FWORD PTR [ebp+0x27]
  418286:	nop
  418287:	xor    al,0x2a
  418289:	inc    edx
  41828a:	mov    dl,0xd2
  41828c:	xor    al,0xcf
  41828e:	ja     0x4182ce
  418290:	mov    cl,0x6
  418292:	cdq    
  418293:	or     DWORD PTR [edx+0x4c],eax
  418296:	ins    BYTE PTR es:[edi],dx
  418297:	loopne 0x418283
  418299:	bound  eax,QWORD PTR [ebx+0x51d8d515]
  41829f:	aaa    
  4182a0:	icebp  
  4182a1:	lds    ecx,FWORD PTR [eax]
  4182a3:	cmp    esi,DWORD PTR ds:0x793c65f2
  4182a9:	aam    0x8b
  4182ab:	cmp    eax,0xbe1ceac3
  4182b0:	xor    bh,BYTE PTR [eax+0x305a80a7]
  4182b6:	(bad)  
  4182b7:	push   ds
  4182b8:	leave  
  4182b9:	mov    bl,0xa0
  4182bb:	xor    DWORD PTR ds:0x18bd5ed7,ecx
  4182c1:	das    
  4182c2:	lock push ebx
  4182c4:	xor    ah,BYTE PTR [ecx-0x51]
  4182c7:	xchg   esi,eax
  4182c8:	xchg   BYTE PTR [ebp-0x8],bl
  4182cb:	out    0xbc,al
  4182cd:	adc    dh,0xce
  4182d0:	fs out 0x4d,al
  4182d3:	lea    eax,[esi-0x4e]
  4182d6:	ins    BYTE PTR es:[edi],dx
  4182d7:	fistp  DWORD PTR [ebx]
  4182d9:	das    
  4182da:	jbe    0x4182a8
  4182dc:	and    al,BYTE PTR [eax-0x11]
  4182df:	hlt    
  4182e0:	add    eax,0xd047ce91
  4182e5:	std    
  4182e6:	xor    eax,0xfe70cb94
  4182eb:	(bad)  
  4182ec:	mov    ds:0xd44d0408,eax
  4182f1:	or     al,bl
  4182f3:	dec    BYTE PTR [eax+0x14359654]
  4182f9:	adc    eax,0xe424c394
  4182fe:	icebp  
  4182ff:	sbb    ecx,esi
  418301:	mov    cl,0x19
  418303:	adc    al,0xbe
  418305:	(bad)  
  418306:	lahf   
  418307:	adc    ch,ch
  418309:	or     cl,BYTE PTR [esi-0x639d1146]
  41830f:	adc    BYTE PTR [edi-0x30920fdd],dh
  418315:	or     DWORD PTR [ecx],edi
  418317:	jl     0x418354
  418319:	push   esi
  41831a:	shl    DWORD PTR ds:0x3c053da,cl
  418320:	into   
  418321:	outs   dx,DWORD PTR ds:[esi]
  418322:	pusha  
  418323:	mov    al,BYTE PTR [eax-0x392a5ea2]
  418329:	xchg   ebp,eax
  41832a:	(bad)  
  41832c:	push   esi
  41832d:	(bad)  
  41832e:	fucomip st,st(1)
  418330:	fisttp WORD PTR [edx+0x43116e3e]
  418336:	jg     0x4183b1
  418338:	push   cs
  418339:	out    0x7e,al
  41833b:	xor    BYTE PTR [eax],al
  41833d:	pusha  
  41833e:	icebp  
  41833f:	sub    BYTE PTR [eax],dh
  418341:	scas   eax,DWORD PTR es:[edi]
  418342:	sbb    eax,DWORD PTR [edi+0x4916da43]
  418348:	jae    0x418344
  41834a:	jg     0x4182da
  41834c:	inc    edi
  41834d:	xor    ebx,DWORD PTR [edx-0x13f24442]
  418353:	fwait
  418354:	test   eax,0x4c970b17
  418359:	popf   
  41835a:	push   edi
  41835b:	je     0x4183d4
  41835d:	ja     0x4182e5
  41835f:	(bad)  
  418360:	and    eax,0x7046e4a9
  418365:	in     eax,0xf6
  418367:	ss pop eax
  418369:	jmp    0x51bb284a
  41836e:	mov    ch,0x69
  418370:	push   ecx
  418371:	adc    BYTE PTR [edi-0x556b72f5],bh
  418377:	ja     0x4182fc
  418379:	cmc    
  41837a:	jno    0x418372
  41837c:	mov    ss:0x494a053a,eax
  418382:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418383:	jg     0x418402
  418385:	imul   eax,DWORD PTR [ebx-0x15cc2a04],0xd388c5d4
  41838f:	(bad)  
  418390:	fistp  DWORD PTR ds:0x6598cdfa
  418396:	pop    esp
  418397:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418398:	xchg   esi,eax
  418399:	arpl   WORD PTR [edx+0x4ceb9904],dx
  41839f:	and    DWORD PTR [edi],esi
  4183a1:	sub    al,0x7b
  4183a3:	push   ebx
  4183a4:	push   edx
  4183a5:	cmp    edx,DWORD PTR [eax-0xeaf518f]
  4183ab:	out    dx,al
  4183ac:	jb     0x418332
  4183ae:	inc    edi
  4183af:	cmp    DWORD PTR [ebx+0x54],edx
  4183b2:	xor    ebp,esi
  4183b4:	adc    ah,BYTE PTR [ebx]
  4183b6:	into   
  4183b7:	inc    ecx
  4183b8:	iret   
  4183b9:	test   cl,cl
  4183bb:	mov    ebx,0xa6bb62c3
  4183c0:	js     0x41837a
  4183c2:	adc    eax,0xae459b4b
  4183c7:	retf   
  4183c8:	xor    DWORD PTR [eax+0x3e],esi
  4183cb:	add    ch,BYTE PTR [esi+ebp*4]
  4183ce:	lds    eax,FWORD PTR [esi+0x45f5ca53]
  4183d4:	out    0x88,eax
  4183d6:	retf   0x1bc6
  4183d9:	or     edx,DWORD PTR [edi+0x4cd4500b]
  4183df:	repz and BYTE PTR [ecx],ah
  4183e2:	nop
  4183e3:	arpl   WORD PTR [ecx+0x29],bp
  4183e6:	aam    0x50
  4183e8:	jns    0x418422
  4183ea:	aam    0x49
  4183ec:	retf   
  4183ed:	rol    DWORD PTR [eax+0x11707b4],1
  4183f3:	in     al,dx
  4183f4:	adc    BYTE PTR [edi],dh
  4183f6:	jnp    0x41839c
  4183f8:	mov    ebx,esp
  4183fa:	add    DWORD PTR [edx-0x6523f97],ecx
  418400:	adc    eax,0x6fd942bd
  418405:	stos   DWORD PTR es:[edi],eax
  418406:	jp     0x41840f
  418408:	fcom   DWORD PTR [edi]
  41840a:	push   eax
  41840b:	enter  0x4a8c,0xdb
  41840f:	pushf  
  418410:	xchg   esp,eax
  418411:	pusha  
  418412:	std    
  418413:	sbb    cl,0x5
  418416:	jne    0x418411
  418418:	or     edx,esi
  41841a:	shl    BYTE PTR [esi+0x6668407f],1
  418420:	inc    ebp
  418421:	je     0x4183d7
  418423:	mov    ch,0xf5
  418425:	(bad)  
  418427:	pop    ecx
  418428:	mov    cl,0xe4
  41842a:	cmp    dl,BYTE PTR [edx+0x540ffaf1]
  418430:	cmp    eax,0xae222371
  418435:	aad    0xf
  418437:	fidivr DWORD PTR [ecx-0x7fb20b7f]
  41843d:	push   eax
  41843e:	xchg   ebp,eax
  41843f:	cs sbb edx,0xe0952ae2
  418446:	and    eax,0x69a5efe7
  41844b:	push   ebx
  41844c:	jo     0x4183e0
  41844e:	imul   ebp,DWORD PTR [edi],0xa6724636
  418454:	cmp    eax,DWORD PTR [ecx-0x17]
  418457:	je     0x41840a
  418459:	fcom   DWORD PTR cs:[edx]
  41845c:	and    eax,DWORD PTR [edi+0x3e]
  41845f:	mov    edx,0xdccf5ec8
  418464:	leave  
  418465:	rcr    DWORD PTR [ebx-0x25],cl
  418468:	and    al,0xb1
  41846a:	fcom   DWORD PTR [ebp+0x3f8d90b2]
  418470:	ret    0x66b6
  418473:	and    eax,0x7cb6054e
  418478:	mov    ss,WORD PTR [ebp-0x17]
  41847b:	push   DWORD PTR [edx+esi*8]
  41847e:	stos   DWORD PTR es:[edi],eax
  41847f:	inc    esp
  418480:	(bad)  
  418481:	dec    eax
  418482:	stos   BYTE PTR es:[edi],al
  418483:	cmp    ch,dl
  418485:	dec    esp
  418486:	pop    edx
  418487:	inc    ecx
  418488:	xor    DWORD PTR [ebx-0x5ed1ebec],edi
  41848e:	pop    esi
  41848f:	sbb    ch,ch
  418491:	shl    BYTE PTR [ebp-0x4e],cl
  418494:	es aad 0x29
  418497:	lahf   
  418498:	cli    
  418499:	mov    dh,0xc7
  41849b:	inc    ecx
  41849c:	outs   dx,DWORD PTR ds:[esi]
  41849d:	scas   eax,DWORD PTR es:[edi]
  41849e:	(bad)  
  41849f:	jo     0x4184c5
  4184a1:	inc    edx
  4184a2:	push   eax
  4184a3:	into   
  4184a4:	and    DWORD PTR [ecx+0x9b7585e],ecx
  4184aa:	int    0xcf
  4184ac:	lds    ecx,FWORD PTR [edx+0x58]
  4184af:	sbb    dh,BYTE PTR [ebx+0x318dfc5a]
  4184b5:	jmp    0xc138:0xdf42bdbd
  4184bc:	jb     0x4184ea
  4184be:	rcl    BYTE PTR [esp+edx*1],cl
  4184c1:	fidiv  DWORD PTR [edx-0x32704cd9]
  4184c7:	sbb    eax,0x9060fead
  4184cc:	gs cwde 
  4184ce:	cmp    al,0xdb
  4184d0:	xchg   dl,ah
  4184d2:	xlat   BYTE PTR ds:[ebx]
  4184d3:	lock xor al,0xe7
  4184d6:	mov    bh,ah
  4184d8:	hlt    
  4184d9:	call   0xd3158ea3
  4184de:	shr    BYTE PTR ds:0xae403871,1
  4184e4:	push   ebp
  4184e5:	sub    eax,0x6c49a3ec
  4184ea:	enter  0xc5b8,0x0
  4184ee:	sub    eax,0x35c3fca8
  4184f3:	ja     0x4184fd
  4184f5:	arpl   ax,si
  4184f7:	xor    al,0xbb
  4184f9:	inc    DWORD PTR [ecx-0x1]
  4184fc:	popa   
  4184fd:	in     al,dx
  4184fe:	mov    bl,0xde
  418500:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418501:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418502:	jle    0x4184a8
  418504:	or     eax,0xa0ca6415
  418509:	mov    ds:0xf89c711c,al
  41850e:	sub    bl,BYTE PTR [ebp+0xb]
  418511:	jbe    0x418574
  418513:	lods   eax,DWORD PTR ds:[esi]
  418514:	xchg   edx,eax
  418515:	push   esi
  418516:	sub    al,0x9e
  418518:	push   esi
  418519:	xor    eax,0x46cf15f2
  41851e:	popf   
  41851f:	fsubp  st(1),st
  418521:	xchg   ecx,eax
  418522:	(bad)  
  418523:	adc    bh,ah
  418525:	int3   
  418526:	das    
  418527:	xchg   edx,eax
  418528:	sbb    al,0xab
  41852a:	jne    0x41852f
  41852c:	jne    0x418536
  41852e:	dec    ebx
  41852f:	idiv   DWORD PTR [edx]
  418531:	out    dx,eax
  418532:	es and al,0xd8
  418535:	push   ds
  418536:	pop    ebp
  418537:	sbb    DWORD PTR [edi+0xa95178d],edi
  41853d:	bound  eax,QWORD PTR [eax]
  41853f:	xor    dh,BYTE PTR [edx-0x51c9ae51]
  418545:	mov    BYTE PTR [ebx],cl
  418547:	cwde   
  418548:	jae    0x418520
  41854a:	xchg   edx,eax
  41854b:	rcl    DWORD PTR [ecx],1
  41854d:	push   esp
  41854e:	outs   dx,DWORD PTR ds:[esi]
  41854f:	(bad)  
  418550:	in     al,dx
  418551:	jg     0x418512
  418553:	loop   0x418599
  418555:	mov    ebp,0x96c4037d
  41855a:	call   DWORD PTR [ebx+eiz*2]
  41855d:	adc    dh,BYTE PTR [edx]
  41855f:	call   0x22a0a771
  418564:	repz inc esi
  418566:	pop    ss
  418567:	push   ebx
  418568:	sti    
  418569:	std    
  41856a:	inc    edx
  41856b:	out    dx,eax
  41856c:	push   ebp
  41856d:	cwde   
  41856e:	push   edx
  41856f:	pop    eax
  418570:	pop    esp
  418571:	xchg   al,bl
  418573:	mov    dl,0xdd
  418575:	mov    bh,0x84
  418577:	fist   DWORD PTR [ecx-0x6a]
  41857a:	dec    DWORD PTR [ebp-0x13]
  41857d:	mov    esp,0xb3756997
  418582:	scas   al,BYTE PTR es:[edi]
  418583:	sub    bh,BYTE PTR [edi+eiz*4-0x3f]
  418587:	push   0xffffffa3
  418589:	jns    0x4185d9
  41858b:	mov    edx,0x3bdb21ee
  418590:	push   0x173ce51e
  418595:	and    eax,0x2811425e
  41859a:	push   esp
  41859b:	pop    esp
  41859c:	pop    ebx
  41859d:	inc    esp
  41859e:	cdq    
  41859f:	(bad)  [eax+esi*4-0x80]
  4185a3:	scas   eax,DWORD PTR es:[di]
  4185a5:	cli    
  4185a6:	enter  0xbbc3,0x9e
  4185aa:	popf   
  4185ab:	mov    BYTE PTR [esi+0x11],ah
  4185ae:	nop
  4185af:	xlat   BYTE PTR ds:[ebx]
  4185b0:	pop    esi
  4185b1:	dec    esp
  4185b2:	int3   
  4185b3:	in     eax,0x46
  4185b5:	(bad)  
  4185b6:	mov    eax,0x714106b8
  4185bb:	cmp    al,0x83
  4185bd:	xchg   edx,eax
  4185be:	cmp    DWORD PTR cs:[edx],ecx
  4185c1:	outs   dx,BYTE PTR ds:[esi]
  4185c2:	bound  ebx,QWORD PTR [ebx-0x48]
  4185c5:	adc    eax,0x4ac84e76
  4185ca:	mov    ch,0xbc
  4185cc:	repnz mov ebx,0x733604a9
  4185d2:	inc    edi
  4185d3:	into   
  4185d4:	cmp    BYTE PTR [eax+0x2b],bh
  4185d7:	fs pop ebp
  4185d9:	int    0xe9
  4185db:	jge    0x41856d
  4185dd:	adc    eax,0xaeba64db
  4185e2:	sub    cl,dl
  4185e4:	(bad)  
  4185e5:	fbld   TBYTE PTR [eax+0x44bd51c6]
  4185eb:	fwait
  4185ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185ed:	retf   0x987c
  4185f0:	inc    ebp
  4185f1:	inc    edi
  4185f2:	stos   BYTE PTR es:[edi],al
  4185f3:	xchg   DWORD PTR [edx+0x45],esp
  4185f6:	cmp    DWORD PTR [eax],0xc1e57b72
  4185fc:	pop    ebp
  4185fd:	sub    BYTE PTR [esi+0x392b0009],dh
  418603:	stc    
  418604:	mov    ecx,0x54d8d0e0
  418609:	cmp    esp,DWORD PTR fs:[ecx-0x4b]
  41860d:	in     al,0x31
  41860f:	daa    
  418610:	ror    DWORD PTR [edx+0x4e],cl
  418613:	mov    eax,ds:0x1f728ac3
  418618:	fs jno 0x4185fc
  41861b:	xor    eax,0x4b9c24f8
  418620:	xchg   ebx,eax
  418621:	cmp    ah,BYTE PTR [ebp-0x33]
  418624:	xchg   esp,eax
  418625:	std    
  418626:	call   0x910e874d
  41862b:	mov    BYTE PTR [ebp+0x5d],ch
  41862e:	out    dx,al
  41862f:	pop    es
  418630:	jns    0x4185cb
  418632:	xchg   DWORD PTR [ebp+0x3b],edx
  418635:	les    edx,FWORD PTR [edi]
  418637:	xor    bl,BYTE PTR [edx-0x4e]
  41863a:	mov    ebp,ebp
  41863c:	add    bh,BYTE PTR [ebp+edx*8+0x16]
  418640:	adc    ebp,edx
  418642:	or     BYTE PTR [esi+0x738ae199],ah
  418648:	adc    eax,0xb0a226d8
  41864d:	jecxz  0x4185e2
  41864f:	inc    esp
  418650:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418651:	xor    BYTE PTR [edx+0x18],ch
  418654:	call   0xc4b691c7
  418659:	int    0x35
  41865b:	dec    eax
  41865c:	test   eax,0xfc70f9bc
  418661:	call   0xd4d2:0x63b8d953
  418668:	test   eax,0xd1e3b6a1
  41866d:	icebp  
  41866e:	sbb    al,BYTE PTR [esi]
  418670:	fnsave [edi]
  418672:	js     0x418630
  418674:	cmp    eax,0xe8fb5bad
  418679:	or     eax,0xdaf8e861
  41867e:	mov    eax,ds:0x5212d83e
  418683:	pushf  
  418684:	pop    ss
  418685:	cmp    eax,0xf34207be
  41868a:	push   ecx
  41868b:	dec    ebp
  41868c:	mov    bh,0x23
  41868e:	repz or esi,ebx
  418691:	(bad)  
  418692:	adc    al,BYTE PTR [ebx-0xdaf86eb]
  418698:	icebp  
  418699:	cmp    bl,dl
  41869b:	out    dx,eax
  41869c:	cmp    al,0xf4
  41869e:	inc    eax
  41869f:	jb     0x41866b
  4186a1:	jo     0x418705
  4186a3:	fst    QWORD PTR [esi+0x51ce368b]
  4186a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186aa:	and    dl,al
  4186ac:	arpl   WORD PTR [edx+0x566e9819],cx
  4186b2:	in     al,dx
  4186b3:	fs inc ebx
  4186b5:	inc    esp
  4186b6:	fwait
  4186b7:	mov    eax,0x36e76eac
  4186bc:	push   0x7b409ff3
  4186c1:	scas   al,BYTE PTR es:[edi]
  4186c2:	clc    
  4186c3:	inc    ch
  4186c5:	inc    BYTE PTR [ecx-0x62]
  4186c8:	(bad)  
  4186c9:	jl     0x418666
  4186cb:	jg     0x418745
  4186cd:	xchg   esi,eax
  4186ce:	fisubr WORD PTR [edx]
  4186d0:	enter  0x2b69,0x56
  4186d4:	mov    ebp,0x462d5941
  4186d9:	dec    eax
  4186da:	loop   0x418662
  4186dc:	dec    ecx
  4186dd:	sub    bl,BYTE PTR [edi]
  4186df:	test   al,0x2d
  4186e1:	xor    al,0x2d
  4186e3:	dec    edx
  4186e4:	outs   dx,BYTE PTR ds:[esi]
  4186e5:	mov    ch,0xfd
  4186e7:	mov    edi,0xf4f8ab65
  4186ec:	loope  0x4186a3
  4186ee:	or     BYTE PTR [ebx+0x4b],dl
  4186f1:	inc    esi
  4186f2:	dec    edx
  4186f3:	jmp    0xa525:0x8a4da57d
  4186fa:	and    al,0xd5
  4186fc:	sbb    al,0xc4
  4186fe:	rol    BYTE PTR [edi],0x9f
  418701:	xor    eax,DWORD PTR [edx-0x13befc7a]
  418707:	mov    edi,0xc317738b
  41870c:	mov    edx,0xf3ce55b6
  418711:	stos   BYTE PTR es:[edi],al
  418712:	jge    0x4186b4
  418714:	pop    edx
  418715:	stc    
  418716:	out    dx,eax
  418717:	mov    edi,0x3700990
  41871c:	pusha  
  41871d:	out    0x3f,al
  41871f:	sub    dl,bl
  418721:	mul    DWORD PTR [ecx-0x126504ae]
  418727:	xor    eax,0x21b1a2dd
  41872c:	jnp    0x418796
  41872e:	xchg   edi,eax
  41872f:	sub    DWORD PTR ds:0xc8464984,0xffffffe5
  418736:	dec    ecx
  418737:	and    BYTE PTR [edi-0x6f4f772c],bl
  41873d:	adc    esi,esi
  41873f:	js     0x418720
  418741:	push   esp
  418742:	lahf   
  418743:	neg    eax
  418745:	sub    BYTE PTR [ebp+ecx*8-0x3e8c6c3e],ah
  41874c:	mov    bl,bh
  41874e:	push   es
  41874f:	sbb    BYTE PTR [eax+ebx*8-0x58],0x36
  418754:	je     0x4186fe
  418756:	cdq    
  418757:	fild   DWORD PTR [esi-0x78a36ade]
  41875d:	iret   
  41875e:	fidivr WORD PTR ds:0x260065fb
  418764:	inc    edx
  418765:	sahf   
  418766:	mov    DWORD PTR [ecx-0x7c],ebp
  418769:	out    0xfa,al
  41876b:	mov    dl,bh
  41876d:	in     al,0x5b
  41876f:	out    dx,al
  418770:	push   ss
  418771:	inc    esi
  418772:	push   ss
  418773:	mov    WORD PTR [esi-0x4a32b4af],fs
  418779:	inc    edx
  41877a:	add    eax,0x356bd0c9
  41877f:	dec    ecx
  418780:	popa   
  418781:	inc    ebp
  418782:	data16 (bad) 
  418784:	inc    ebx
  418785:	mov    edx,0x409cb639
  41878a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41878b:	enterw 0x70f0,0x9c
  418790:	aaa    
  418791:	mov    bl,0x4f
  418793:	inc    esp
  418794:	xchg   DWORD PTR [esi-0x90d005c],ecx
  41879a:	mov    ah,0x8c
  41879c:	jnp    0x4187fd
  41879e:	mov    ebp,0xf30a6e29
  4187a3:	pop    edi
  4187a4:	jo     0x418754
  4187a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187a7:	popa   
  4187a8:	ja     0x41874d
  4187aa:	test   esi,ecx
  4187ac:	arpl   WORD PTR [edi],si
  4187ae:	mov    ah,al
  4187b0:	fwait
  4187b1:	sbb    esp,edx
  4187b3:	add    edi,DWORD PTR [eax-0x57c7c8eb]
  4187b9:	jnp    0x41881b
  4187bb:	sar    DWORD PTR [edx],0x20
  4187be:	(bad)  
  4187bf:	cli    
  4187c0:	mov    ecx,DWORD PTR [ebp-0x53]
  4187c3:	inc    edx
  4187c4:	adc    eax,0x8e0289c
  4187c9:	scas   al,BYTE PTR es:[edi]
  4187ca:	das    
  4187cb:	lods   al,BYTE PTR ds:[esi]
  4187cc:	rcr    DWORD PTR [ecx+edi*2],1
  4187cf:	pop    ebp
  4187d0:	xor    al,0x53
  4187d2:	shl    bh,0x13
  4187d5:	add    DWORD PTR [esi+0x43b60622],ebx
  4187db:	loope  0x41884d
  4187dd:	jns    0x41878b
  4187df:	and    ah,bh
  4187e1:	xor    eax,0xe0440d0a
  4187e6:	or     esp,DWORD PTR [edi+ebx*1-0x78]
  4187ea:	add    al,0x6d
  4187ec:	cmp    ch,BYTE PTR [edx]
  4187ee:	fisub  DWORD PTR [ebx+0x2a6c9ae8]
  4187f4:	ror    cl,0xe9
  4187f7:	addr16 (bad) 
  4187f9:	cld    
  4187fa:	xor    esp,DWORD PTR [edi-0xe]
  4187fd:	loop   0x418864
  4187ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418800:	sub    ah,BYTE PTR [ecx+0x5f418496]
  418806:	cmp    ecx,ecx
  418808:	mov    WORD PTR ds:0x3902c7e5,gs
  41880e:	jecxz  0x4187bf
  418810:	sbb    al,0xca
  418812:	mov    WORD PTR [ebx-0x4746ae08],fs
  418818:	mov    edi,0xd2ccee8f
  41881d:	mov    DWORD PTR [ebp+0x2f],ebp
  418820:	enter  0x7c65,0xfb
  418824:	push   ebp
  418825:	jnp    0x4187b7
  418827:	mov    esp,0xdf5acf55
  41882c:	das    
  41882d:	jge    0x4187cf
  41882f:	pop    edi
  418830:	and    ah,BYTE PTR [ebx]
  418832:	cmp    al,0xb
  418834:	inc    ebx
  418835:	iret   
  418836:	inc    edx
  418837:	add    ecx,DWORD PTR [edx+eax*4-0x68]
  41883b:	imul   esp,DWORD PTR [ebx-0x55],0x27
  41883f:	jle    0x418821
  418841:	test   al,0xd7
  418843:	or     al,0x1c
  418845:	pop    ebx
  418846:	std    
  418847:	loope  0x418815
  418849:	mov    bl,0xa0
  41884b:	inc    ebp
  41884c:	test   al,0x1b
  41884e:	clc    
  41884f:	jge    0x418811
  418851:	cmp    al,0x1a
  418853:	out    dx,al
  418854:	pop    ss
  418855:	cmp    bl,BYTE PTR [edx]
  418857:	mov    cl,0x4d
  418859:	sub    eax,DWORD PTR [esi-0x2d]
  41885c:	xchg   esi,eax
  41885d:	addr16 sbb eax,0xa7da70f9
  418863:	xchg   esi,eax
  418864:	add    eax,0x62b3a1e2
  418869:	daa    
  41886a:	lods   al,BYTE PTR ds:[esi]
  41886b:	inc    eax
  41886c:	mov    bl,0xf6
  41886e:	sbb    DWORD PTR [edi],esi
  418870:	fnstenv [eax-0x447f6590]
  418876:	sbb    eax,0x6558abae
  41887b:	in     eax,0x79
  41887d:	ficom  WORD PTR [ecx-0x3ca66ee6]
  418883:	xchg   dh,bl
  418885:	mov    ebx,0x12134e65
  41888a:	jae    0x418854
  41888c:	inc    esi
  41888d:	sbb    al,0xe6
  41888f:	cmp    eax,0x899ba8f9
  418894:	sub    eax,0x7803c93c
  418899:	lds    ecx,FWORD PTR [esi+0x51959c9c]
  41889f:	and    BYTE PTR [eax-0x20c28c25],ch
  4188a5:	test   al,0xc1
  4188a7:	(bad)
  4188ab:	leave  
  4188ac:	daa    
  4188ad:	xchg   esi,eax
  4188ae:	lods   eax,DWORD PTR ds:[esi]
  4188af:	fsubr  DWORD PTR [ebp+0x18adf766]
  4188b5:	mov    edi,0x236942f9
  4188ba:	inc    eax
  4188bb:	inc    edi
  4188bc:	repnz pop ecx
  4188be:	popf   
  4188bf:	pop    edi
  4188c0:	ins    DWORD PTR es:[edi],dx
  4188c1:	retf   
  4188c2:	dec    esp
  4188c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188c4:	jp     0x41886a
  4188c6:	mov    ah,0xb3
  4188c8:	and    DWORD PTR [eax+0x64],edi
  4188cb:	repz pop edx
  4188cd:	add    al,0x4a
  4188cf:	loopne 0x4188d2
  4188d1:	rcl    BYTE PTR [esi+0x8],cl
  4188d4:	xchg   edx,eax
  4188d5:	fidivr WORD PTR [eax]
  4188d7:	fistp  WORD PTR [edx+0x12f315ec]
  4188dd:	sti    
  4188de:	add    eax,DWORD PTR [ecx]
  4188e0:	jg     0x418867
  4188e2:	xor    ah,BYTE PTR [ebx]
  4188e4:	scas   al,BYTE PTR es:[edi]
  4188e5:	dec    ecx
  4188e6:	(bad)
  4188e9:	aam    0x22
  4188eb:	pop    es
  4188ec:	stc    
  4188ed:	or     BYTE PTR [ebx+ebx*1-0x73],al
  4188f1:	inc    eax
  4188f2:	push   ss
  4188f3:	cmp    eax,0x84bbeba2
  4188f8:	mov    edx,0xae5da3c3
  4188fd:	cmp    eax,0x16b26cf1
  418902:	xchg   edx,eax
  418903:	jmp    DWORD PTR [esi+0x46b434a6]
  418909:	and    eax,0x1d2076be
  41890e:	stos   DWORD PTR es:[edi],eax
  41890f:	adc    eax,DWORD PTR [edi]
  418911:	cmp    ebp,DWORD PTR [esi]
  418913:	mov    DWORD PTR [ecx],esi
  418915:	dec    eax
  418916:	sbb    eax,0x57a7f02f
  41891b:	pop    DWORD PTR [ebx]
  41891d:	aad    0xc6
  41891f:	sbb    ah,BYTE PTR [eax]
  418921:	mov    al,ds:0xd7deff21
  418926:	shr    al,0x20
  418929:	xor    DWORD PTR gs:[edi-0x5d5c2f7f],esi
  418930:	ret    
  418931:	(bad)  
  418932:	cli    
  418933:	cmc    
  418934:	add    eax,0x877bbded
  418939:	and    dh,ah
  41893b:	or     bl,BYTE PTR [ebp+0x14]
  41893e:	out    0xe0,eax
  418940:	in     eax,0xa
  418942:	pop    edx
  418943:	dec    ecx
  418944:	repnz and WORD PTR [edx+0x598632ef],di
  41894c:	mov    edi,0x68006132
  418951:	pop    es
  418952:	cli    
  418953:	test   BYTE PTR [esi+0x2f],ah
  418956:	xchg   DWORD PTR [ecx-0x1cd2f103],esp
  41895c:	stc    
  41895d:	mov    esp,0xb252fe3b
  418962:	cmp    eax,DWORD PTR [eax]
  418964:	icebp  
  418965:	stos   BYTE PTR es:[edi],al
  418966:	loopne 0x4188f5
  418968:	pop    ebp
  418969:	ja     0x4189aa
  41896b:	jne    0x418970
  41896d:	mov    ecx,0x128d9114
  418972:	push   esp
  418973:	scas   al,BYTE PTR es:[edi]
  418974:	in     eax,0x40
  418976:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418977:	imul   ebp,DWORD PTR [edi+0x47],0x6c
  41897b:	enter  0x57be,0x25
  41897f:	(bad)  
  418980:	mov    edi,0xbf7444fa
  418985:	and    BYTE PTR [esi],al
  418987:	jle    0x41893f
  418989:	adc    cl,BYTE PTR [esi]
  41898b:	jl     0x418975
  41898d:	and    eax,0x328f2e9f
  418992:	xchg   ebp,eax
  418993:	daa    
  418994:	mov    dl,0x18
  418996:	js     0x41899a
  418998:	or     ebx,DWORD PTR [ecx-0x3d90fa89]
  41899e:	pop    edx
  41899f:	sub    eax,0x7a83a7b1
  4189a4:	inc    esp
  4189a5:	stos   BYTE PTR es:[edi],al
  4189a6:	and    al,0x8d
  4189a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189a9:	jb     0x4189a2
  4189ab:	sub    al,0x33
  4189ad:	jle    0x4189b7
  4189af:	push   eax
  4189b0:	cli    
  4189b1:	rol    BYTE PTR [eax],1
  4189b3:	dec    esi
  4189b4:	jns    0x418a07
  4189b6:	xor    BYTE PTR [ebx+ebx*2],ah
  4189b9:	stos   DWORD PTR es:[edi],eax
  4189ba:	xor    DWORD PTR [esi+edi*1-0x6f],ebx
  4189be:	add    edi,0x93206ca9
  4189c4:	rcl    ecx,cl
  4189c6:	mov    ch,0x65
  4189c8:	fsave  [edi+0x59de5e7]
  4189cf:	pushf  
  4189d0:	into   
  4189d1:	mov    cl,0x98
  4189d3:	sub    al,0x33
  4189d5:	shl    BYTE PTR [ebp-0x73],cl
  4189d8:	and    eax,0xe9c18442
  4189dd:	fsub   st(0),st
  4189df:	rol    DWORD PTR [eax+0x18],0x49
  4189e3:	inc    esp
  4189e4:	test   al,0xeb
  4189e7:	adc    edx,ebx
  4189e9:	test   DWORD PTR [ebx],edx
  4189eb:	xchg   esi,eax
  4189ec:	xchg   DWORD PTR [ecx+0x31c3980f],esp
  4189f2:	stos   DWORD PTR es:[edi],eax
  4189f3:	pop    ds
  4189f4:	loop   0x4189f9
  4189f6:	add    eax,DWORD PTR [ebx]
  4189f8:	mov    DWORD PTR [edi+0x1],edi
  4189fb:	mov    ecx,0x3808b3dc
  418a00:	ins    BYTE PTR es:[edi],dx
  418a01:	repz xchg edi,eax
  418a03:	mov    al,0xb
  418a05:	cmp    edx,edi
  418a07:	pop    eax
  418a08:	out    dx,eax
  418a09:	xchg   esi,eax
  418a0a:	and    al,0x2b
  418a0c:	cmp    BYTE PTR [ebp-0x31297d2c],ah
  418a12:	loopne 0x418994
  418a14:	inc    esp
  418a15:	xchg   edi,eax
  418a16:	jp     0x418a00
  418a18:	test   ah,al
  418a1a:	call   0xe041:0x620020bf
  418a21:	push   esp
  418a22:	rcl    bl,0xe
  418a25:	jle    0x418a83
  418a27:	xor    BYTE PTR [edi+0x3a],ah
  418a2a:	or     edi,DWORD PTR ds:0xa685de6c
  418a30:	or     al,0x6a
  418a32:	or     al,0x92
  418a34:	jecxz  0x418a5b
  418a36:	mov    eax,ds:0xc580b277
  418a3b:	scas   al,BYTE PTR es:[edi]
  418a3c:	dec    edx
  418a3d:	inc    ebp
  418a3e:	std    
  418a3f:	dec    ebx
  418a40:	xor    al,0x47
  418a42:	push   edi
  418a43:	lock xchg ebx,eax
  418a45:	pop    ss
  418a46:	fldenv [edi-0x3a]
  418a49:	fcmovne st,st(7)
  418a4b:	xchg   ebx,ebp
  418a4d:	xlat   BYTE PTR ds:[bx]
  418a4f:	inc    ebx
  418a50:	xchg   ebx,eax
  418a51:	(bad)  
  418a52:	adc    ebp,edi
  418a54:	sbb    ebx,esi
  418a56:	in     eax,dx
  418a57:	push   ebp
  418a58:	scas   eax,DWORD PTR es:[edi]
  418a59:	call   0xe465:0xb5c917b
  418a60:	clc    
  418a61:	and    BYTE PTR [edi+0x6b6daba6],bh
  418a67:	add    DWORD PTR [esi+0x22],esp
  418a6a:	jo     0x418ab3
  418a6c:	add    eax,0xba34b78a
  418a71:	push   ds
  418a72:	out    dx,al
  418a73:	fstp   TBYTE PTR [eax]
  418a75:	and    DWORD PTR [esi],ebx
  418a77:	inc    esp
  418a78:	adc    al,0x38
  418a7a:	imul   ebp,DWORD PTR [edi],0x2f00ae1e
  418a80:	das    
  418a81:	scas   al,BYTE PTR es:[edi]
  418a82:	jge    0x418a65
  418a84:	inc    ebx
  418a85:	pop    eax
  418a86:	lea    esi,[edx-0x5b]
  418a89:	mov    DWORD PTR cs:[esp+ecx*4+0x3bedc8f],esp
  418a91:	imul   eax,DWORD PTR [edi-0x19d06fd4],0xb969f07c
  418a9b:	retf   0x42b7
  418a9e:	aas    
  418a9f:	(bad)  
  418aa0:	mov    bl,0x3a
  418aa2:	mov    dl,0xcd
  418aa4:	into   
  418aa5:	mov    ds:0x10ed4cc9,al
  418aaa:	test   BYTE PTR [ebx],0xaa
  418aad:	adc    ebp,DWORD PTR [esi+0x31]
  418ab0:	xchg   esi,eax
  418ab1:	cmp    BYTE PTR [eax],dl
  418ab3:	mov    edx,0x8fae40b
  418ab8:	push   ds
  418ab9:	or     al,0x18
  418abb:	mov    BYTE PTR [ecx],0x87
  418abe:	imul   ecx,DWORD PTR [edi-0x7c143426],0x47
  418ac5:	adc    eax,0xf1df9431
  418aca:	sub    ecx,DWORD PTR [eax-0x52c39d91]
  418ad0:	push   ecx
  418ad1:	out    0x5b,al
  418ad3:	jmp    0x418a78
  418ad5:	movzx  ebx,WORD PTR [edi+0x1b2dd340]
  418adc:	sahf   
  418add:	add    edi,DWORD PTR [edi+0x1a]
  418ae0:	pop    ebx
  418ae1:	dec    ecx
  418ae2:	push   ecx
  418ae3:	adc    esi,DWORD PTR ds:0x66efe031
  418ae9:	xor    DWORD PTR [esi+0x68bc8c95],edx
  418aef:	in     al,0xf0
  418af1:	adc    eax,0x5d4cf160
  418af6:	jno    0x418b23
  418af8:	std    
  418af9:	(bad)  
  418afa:	jmp    0x50bdb6a1
  418aff:	inc    esp
  418b00:	sub    esp,DWORD PTR [ebx-0x319259fd]
  418b06:	popa   
  418b07:	(bad)  [edi-0x1f358e9c]
  418b0d:	(bad)  
  418b0e:	imul   ebp,eax,0xffffffa4
  418b11:	mov    esi,DWORD PTR [eax-0x227c1cfc]
  418b17:	ret    
  418b18:	jo     0x418b83
  418b1a:	fdivr  st(1),st
  418b1c:	sub    esp,edx
  418b1e:	push   esp
  418b1f:	gs fs ins BYTE PTR es:[edi],dx
  418b22:	adc    cl,BYTE PTR [eax]
  418b24:	dec    edi
  418b25:	jae    0x418b96
  418b27:	hlt    
  418b28:	(bad)  
  418b29:	ins    DWORD PTR es:[edi],dx
  418b2a:	(bad)  
  418b2b:	ficomp DWORD PTR [edi]
  418b2d:	sub    bh,ch
  418b2f:	stos   BYTE PTR es:[edi],al
  418b30:	xor    cl,BYTE PTR [ebx]
  418b32:	es pop ebx
  418b34:	call   0x9da5:0xe111de59
  418b3b:	push   edi
  418b3c:	lds    ebp,FWORD PTR [eax]
  418b3e:	inc    ebp
  418b3f:	lock ins DWORD PTR es:[edi],dx
  418b41:	stos   DWORD PTR es:[edi],eax
  418b42:	pop    es
  418b43:	mov    dl,0xcd
  418b45:	sbb    ecx,ebx
  418b47:	call   0xf468:0xe3f738e4
  418b4e:	mov    eax,0xde639458
  418b53:	mov    dl,0x5d
  418b55:	pop    eax
  418b56:	clc    
  418b57:	xor    ah,BYTE PTR [ecx+0x64]
  418b5a:	adc    DWORD PTR ds:0x6f86f079,edx
  418b60:	jo     0x418b1e
  418b62:	or     al,0xd3
  418b64:	jb     0x418be4
  418b66:	mov    ebx,0x327e8529
  418b6b:	jb     0x418b62
  418b6d:	stc    
  418b6e:	mov    BYTE PTR [ecx*8-0x3329b95f],0x9f
  418b76:	in     eax,0x54
  418b78:	push   ss
  418b79:	xchg   edx,eax
  418b7a:	and    al,0x69
  418b7c:	xchg   esi,eax
  418b7d:	sbb    eax,0xb8092e8c
  418b82:	jbe    0x418be2
  418b84:	(bad)  
  418b85:	(bad)  [esi+0x13c63edc]
  418b8b:	sbb    eax,DWORD PTR [esi]
  418b8d:	cmp    al,ch
  418b8f:	(bad)  
  418b90:	cmp    al,0xac
  418b92:	xor    BYTE PTR [bx+si],bh
  418b95:	inc    edx
  418b96:	xor    DWORD PTR [ebx+0x1c875eee],0xf8c9922d
  418ba0:	imul   BYTE PTR [esi+0x33e38cbe]
  418ba6:	push   ds
  418ba7:	inc    ebp
  418ba8:	push   es
  418ba9:	data16 stc 
  418bab:	push   ds
  418bac:	ficom  DWORD PTR [edi]
  418bae:	push   bp
  418bb0:	xor    BYTE PTR ds:[eax+ebx*1],0xbe
  418bb5:	test   al,0xc8
  418bb7:	aad    0x1f
  418bb9:	ds jns 0x418be8
  418bbc:	iret   
  418bbd:	mov    ?,WORD PTR [edi+0x60]
  418bc0:	out    0x94,al
  418bc2:	mov    WORD PTR [edx+0x5a6e05d9],es
  418bc8:	scas   al,BYTE PTR es:[edi]
  418bc9:	mov    bl,0xea
  418bcb:	test   al,0x0
  418bcd:	push   cs
  418bce:	mov    esi,0x8109074e
  418bd3:	xchg   BYTE PTR [ebp-0x29],cl
  418bd6:	fstp   st(7)
  418bd8:	sub    DWORD PTR [edi],esi
  418bda:	add    BYTE PTR [edi+ecx*2],bl
  418bdd:	dec    esi
  418bde:	scas   al,BYTE PTR es:[edi]
  418bdf:	fdiv   QWORD PTR [ecx+0x7bb62885]
  418be5:	pop    ss
  418be6:	rol    BYTE PTR [edx-0x45],0x47
  418bea:	jnp    0x418c1e
  418bec:	adc    ebp,DWORD PTR [eax+ebp*1-0x7f45669]
  418bf3:	cwde   
  418bf4:	aam    0xe1
  418bf6:	je     0x418ba6
  418bf8:	push   ecx
  418bf9:	sub    ecx,DWORD PTR [eax]
  418bfb:	shl    BYTE PTR [edx-0x11],cl
  418bfe:	mov    al,0x6a
  418c00:	xor    BYTE PTR [ecx-0x5df5b7b1],cl
  418c06:	mov    ebp,0xd004e707
  418c0b:	cs cmc 
  418c0d:	nop
  418c0e:	arpl   WORD PTR [eax],sp
  418c10:	and    edx,DWORD PTR [ebp-0x6c]
  418c13:	cdq    
  418c14:	lock mov ecx,DWORD PTR [eax]
  418c17:	jle    0x418ba2
  418c19:	rol    DWORD PTR [edx+0x15],1
  418c1c:	addr16 in eax,dx
  418c1e:	xor    BYTE PTR [edx-0x5f],bh
  418c21:	xor    al,0x70
  418c23:	inc    ecx
  418c24:	push   edi
  418c25:	fisttp DWORD PTR [ebx+ecx*1+0x65ce5a57]
  418c2c:	fild   WORD PTR [edx+esi*1]
  418c2f:	jne    0x418c81
  418c31:	push   edx
  418c32:	stos   DWORD PTR es:[edi],eax
  418c33:	or     DWORD PTR [ecx-0x62125ede],esp
  418c39:	sub    BYTE PTR [eax],dh
  418c3b:	in     al,0xe1
  418c3d:	jnp    0x418bf5
  418c3f:	jae    0x418c57
  418c41:	jne    0x418c00
  418c43:	int3   
  418c44:	adc    al,0xd0
  418c46:	dec    esp
  418c47:	aad    0xa
  418c49:	sbb    al,0xa
  418c4b:	test   eax,0xc19a8a0a
  418c50:	fcomp  QWORD PTR [ebx-0x2782630b]
  418c56:	jmp    0x418c80
  418c58:	out    dx,al
  418c59:	add    esi,esi
  418c5b:	xchg   esp,eax
  418c5c:	sbb    al,0xfe
  418c5e:	or     eax,0xdfa92639
  418c63:	out    dx,al
  418c64:	mov    al,ds:0x65800bfc
  418c69:	in     al,0x47
  418c6b:	push   cs
  418c6c:	cdq    
  418c6d:	xor    eax,0x9f479667
  418c72:	and    ebp,DWORD PTR ds:0xec1ff623
  418c78:	stc    
  418c79:	fwait
  418c7a:	mov    WORD PTR [esi+0x5bc58d56],ds
  418c80:	lods   al,BYTE PTR ds:[esi]
  418c81:	mov    ds:0xe5963189,eax
  418c86:	pop    ebx
  418c87:	hlt    
  418c88:	jg     0x418c7a
  418c8a:	xchg   dh,dl
  418c8c:	sub    DWORD PTR [edi],ebx
  418c8e:	lahf   
  418c8f:	sbb    eax,0x41f7931
  418c94:	les    edi,FWORD PTR [edi+0x43]
  418c97:	dec    ebx
  418c98:	pop    ecx
  418c99:	or     dh,BYTE PTR [esi]
  418c9b:	xchg   ecx,eax
  418c9c:	sti    
  418c9d:	push   ebp
  418c9e:	ja     0x418c54
  418ca0:	sub    eax,0xb509a958
  418ca5:	mov    WORD PTR [ecx-0x34def22a],cs
  418cab:	retf   
  418cac:	sbb    eax,0xdf128867
  418cb1:	hlt    
  418cb2:	push   ecx
  418cb3:	mov    ah,0x1f
  418cb5:	jbe    0x418d2b
  418cb7:	add    BYTE PTR [edi-0x52ef8f49],cl
  418cbd:	or     ah,cl
  418cbf:	stc    
  418cc0:	jmp    FWORD PTR [ebp-0x25]
  418cc3:	in     eax,0x28
  418cc5:	and    BYTE PTR [esi],bh
  418cc7:	cli    
  418cc8:	mov    ds:0xf31da7be,al
  418ccd:	aaa    
  418cce:	and    edi,ecx
  418cd0:	add    esi,eax
  418cd2:	dec    esp
  418cd3:	and    cl,BYTE PTR fs:[esi]
  418cd6:	dec    edi
  418cd7:	imul   esp,DWORD PTR [esi+0x4a],0x38f4abe6
  418cde:	retf   0x30a9
  418ce1:	std    
  418ce2:	mov    BYTE PTR [eax-0xd],0x70
  418ce6:	mov    al,0x72
  418ce8:	xchg   edi,eax
  418ce9:	adc    esi,DWORD PTR [ecx+0x72]
  418cec:	mov    ?,WORD PTR [ecx]
  418cee:	dec    eax
  418cef:	(bad)  
  418cf0:	xor    ebx,DWORD PTR [ecx]
  418cf2:	ja     0x418d4c
  418cf4:	push   ds
  418cf5:	xor    dh,BYTE PTR [ebp+0x1d]
  418cf8:	popf   
  418cf9:	dec    edx
  418cfa:	loop   0x418d3c
  418cfc:	out    0xdb,al
  418cfe:	push   es
  418cff:	mov    ebx,0x1b45ffc2
  418d04:	mov    bl,0x38
  418d06:	jecxz  0x418d44
  418d08:	in     eax,dx
  418d09:	pop    ds
  418d0a:	repnz xlat BYTE PTR ds:[ebx]
  418d0c:	mov    ds:0x8259e9b5,al
  418d11:	leave  
  418d12:	ror    bh,0xd6
  418d15:	sbb    al,ch
  418d17:	push   0x863702a9
  418d1c:	ficomp WORD PTR [esi]
  418d1e:	xchg   ebx,eax
  418d1f:	invd   
  418d21:	stc    
  418d22:	repnz add eax,0x78c7597e
  418d28:	stos   DWORD PTR es:[edi],eax
  418d29:	adc    ah,BYTE PTR [edx]
  418d2b:	xchg   edi,eax
  418d2c:	push   es
  418d2d:	xor    DWORD PTR [edi],eax
  418d2f:	ss (bad) 
  418d31:	adc    al,0x65
  418d33:	pop    es
  418d34:	imul   esp,edx,0x9a2fec28
  418d3a:	adc    BYTE PTR [edi-0x65],bl
  418d3d:	xchg   DWORD PTR [edi+0x22],eax
  418d40:	mov    WORD PTR [edi-0x36985d5f],ds
  418d46:	sbb    DWORD PTR [ecx],0x4a
  418d49:	loope  0x418d3d
  418d4b:	outs   dx,DWORD PTR ds:[esi]
  418d4c:	push   esp
  418d4d:	add    bl,BYTE PTR [ecx]
  418d4f:	les    ebx,FWORD PTR [esp+ebp*8]
  418d52:	clc    
  418d53:	sbb    eax,0x98ec0e8b
  418d58:	sahf   
  418d59:	repz add BYTE PTR [eax+ebp*4-0x3fbf7e6f],ch
  418d61:	(bad)  
  418d64:	stos   DWORD PTR es:[edi],eax
  418d65:	and    ecx,esi
  418d67:	and    dl,BYTE PTR [esi+eiz*8+0x738307ae]
  418d6e:	sbb    BYTE PTR [ecx-0x468e1350],ah
  418d74:	mov    ebx,0x76510361
  418d79:	inc    esp
  418d7a:	mov    ecx,0x247a57da
  418d7f:	dec    ebp
  418d80:	inc    esp
  418d81:	pop    edi
  418d82:	xchg   BYTE PTR [edi],dl
  418d84:	ja     0x418d39
  418d86:	bnd jmp 0x501999be
  418d8c:	and    eax,0x1483f0e7
  418d91:	lods   al,BYTE PTR ds:[esi]
  418d92:	mov    edi,edx
  418d94:	fimul  WORD PTR [eax-0x1b]
  418d97:	mov    dh,BYTE PTR [edx+ebp*4]
  418d9a:	sub    al,0xf0
  418d9c:	int3   
  418d9d:	mov    ecx,0x156f808c
  418da2:	adc    DWORD PTR [eax+eax*4+0x6b],esp
  418da6:	es jo  0x418dc0
  418da9:	fnstsw WORD PTR [esp+eax*8+0x318a7cf8]
  418db0:	in     eax,0xd6
  418db2:	clc    
  418db3:	jmp    0x15fc:0xefd473e7
  418dba:	mov    cl,0x3a
  418dbc:	add    BYTE PTR [eax],bl
  418dbe:	scas   eax,DWORD PTR es:[edi]
  418dbf:	push   edi
  418dc0:	mov    bh,0xe3
  418dc2:	add    dl,BYTE PTR [eax+eiz*1]
  418dc5:	lock pusha 
  418dc7:	mov    edx,0xc77c5210
  418dcc:	sbb    ah,BYTE PTR [edx]
  418dce:	dec    esi
  418dcf:	mov    ds:0xeb52b303,ax
  418dd5:	pop    ebx
  418dd6:	imul   esi,DWORD PTR ds:0xb3666368,0xc7fdf4bb
  418de0:	push   0x51
  418de2:	and    BYTE PTR [ebx+0x5ee55230],0x48
  418de9:	add    BYTE PTR [esi+0x66],al
  418dec:	jne    0x418dc3
  418dee:	ret    
  418def:	mov    ch,0x6a
  418df1:	add    al,0xba
  418df3:	mov    edi,ss
  418df5:	push   edi
  418df6:	(bad)  
  418df7:	push   ebp
  418df8:	fist   WORD PTR [edi]
  418dfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418dfb:	shr    dh,cl
  418dfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418dfe:	or     bl,BYTE PTR [ebx-0x65]
  418e01:	loopne 0x418e24
  418e03:	adc    ch,bl
  418e05:	fcom   QWORD PTR [esi+edx*2]
  418e08:	xor    edx,DWORD PTR [esi+0x3d]
  418e0b:	push   ebx
  418e0c:	xchg   edi,eax
  418e0d:	into   
  418e0e:	inc    edi
  418e0f:	adc    eax,DWORD PTR [ecx-0x43]
  418e12:	(bad)  
  418e13:	hlt    
  418e14:	inc    ecx
  418e15:	pop    edx
  418e16:	rcr    DWORD PTR ds:0x6d41c66e,0x15
  418e1d:	pop    ss
  418e1e:	adc    ch,dl
  418e20:	mov    bl,BYTE PTR [ebp-0x4695c741]
  418e26:	jbe    0x418ea2
  418e28:	jns    0x418e65
  418e2a:	nop
  418e2b:	fcom   QWORD PTR [edx-0x18b4d47]
  418e31:	push   ebx
  418e32:	in     eax,dx
  418e33:	sub    BYTE PTR [ebx+edx*8+0x12003829],ah
  418e3a:	add    cl,al
  418e3c:	cs and eax,0x52f55231
  418e42:	mov    DWORD PTR [edi+0x29e99c4],ecx
  418e48:	push   edi
  418e49:	jnp    0x418e8e
  418e4b:	cs push ss
  418e4d:	mov    eax,0xf8c8edae
  418e52:	ror    BYTE PTR [edx-0x6a],0x9b
  418e56:	stos   BYTE PTR es:[edi],al
  418e57:	jns    0x418ed5
  418e59:	imul   esi,DWORD PTR [ecx+eiz*4],0xe764165a
  418e60:	mov    DWORD PTR [ebx-0x755f0ca6],ecx
  418e66:	add    ebp,DWORD PTR [esi-0x1f]
  418e69:	cmp    dh,BYTE PTR [ecx+0x77]
  418e6c:	mov    esp,0x44d3957c
  418e71:	push   0x412b5c1e
  418e76:	retf   
  418e77:	(bad)  
  418e78:	out    dx,al
  418e79:	fistp  DWORD PTR [esi+0x2b]
  418e7c:	add    edx,DWORD PTR [esi]
  418e7e:	adc    al,0x5c
  418e80:	ss repz mov ebx,0x1381744f
  418e87:	aad    0xf5
  418e89:	fwait
  418e8a:	mov    eax,DWORD PTR ds:[ebp+0x559f4218]
  418e91:	iret   
  418e92:	stos   DWORD PTR es:[edi],eax
  418e93:	lds    ebp,FWORD PTR [esi+0x3d502dd6]
  418e99:	pop    esp
  418e9a:	out    0x67,eax
  418e9c:	aaa    
  418e9d:	aam    0x3b
  418e9f:	pop    ds
  418ea0:	or     dl,al
  418ea2:	lods   al,BYTE PTR ds:[esi]
  418ea3:	sbb    BYTE PTR [ebx],0x2b
  418ea6:	std    
  418ea7:	addr16 popf 
  418ea9:	in     al,0x72
  418eab:	cs mov esp,es
  418eae:	iret   
  418eaf:	mov    esp,0x8d144fe4
  418eb4:	repnz cwde 
  418eb6:	leave  
  418eb7:	sbb    BYTE PTR ds:0x62bc9f57,dh
  418ebd:	out    0x95,al
  418ebf:	adc    bh,BYTE PTR [esi]
  418ec1:	fsubr  DWORD PTR [ebx]
  418ec3:	or     ebx,DWORD PTR [ebx+0x746e63ce]
  418ec9:	(bad)  
  418eca:	and    ebx,ecx
  418ecc:	lods   eax,DWORD PTR ds:[esi]
  418ecd:	mov    ah,0x7f
  418ecf:	not    BYTE PTR [edx-0x54]
  418ed2:	jl     0x418f37
  418ed4:	or     BYTE PTR [edi-0x2af17375],dl
  418eda:	xor    ch,BYTE PTR [edx]
  418edc:	sub    esi,DWORD PTR [esi-0x3]
  418edf:	add    edi,eax
  418ee1:	or     bh,BYTE PTR [edi-0x25]
  418ee4:	mov    eax,ds:0x8d87612a
  418ee9:	sub    bh,al
  418eeb:	inc    esi
  418eec:	cli    
  418eed:	test   al,0x9d
  418eef:	jp     0x418ed2
  418ef1:	jb     0x418eb0
  418ef3:	sub    eax,0x991276d1
  418ef8:	push   ds
  418ef9:	mov    esi,0xd584ced8
  418efe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418eff:	push   ds
  418f00:	and    DWORD PTR [ebx+0x1a2d12e6],esi
  418f06:	xchg   esi,eax
  418f07:	sbb    eax,0xab263602
  418f0c:	jmp    0x418f78
  418f0e:	sbb    edi,0x1dbc0e20
  418f14:	or     dl,dl
  418f16:	scas   eax,DWORD PTR es:[edi]
  418f17:	push   ds
  418f18:	pop    edx
  418f19:	jp     0x418ea1
  418f1b:	pop    ss
  418f1c:	ret    0x147f
  418f1f:	jno    0x418f85
  418f21:	pop    eax
  418f22:	pop    es
  418f23:	sub    ah,BYTE PTR ds:0x6e49647c
  418f29:	ss mov al,0xc4
  418f2c:	sub    edx,DWORD PTR [edx]
  418f2e:	cs in  al,dx
  418f30:	jae    0x418f1b
  418f32:	retf   0xc97d
  418f35:	idiv   DWORD PTR [ecx+0x277ab24e]
  418f3b:	xor    al,0xf9
  418f3d:	fsub   QWORD PTR [edx+eax*2-0x262a6f76]
  418f44:	pop    es
  418f45:	push   esp
  418f46:	fld    TBYTE PTR [edi-0x3a]
  418f49:	imul   edi,DWORD PTR [esi+0x63],0x5aed617
  418f50:	(bad)  
  418f51:	jmp    0x81df:0xdd8b5dcf
  418f58:	out    0x4f,eax
  418f5a:	push   ebx
  418f5b:	gs sti 
  418f5d:	dec    esi
  418f5e:	and    bh,BYTE PTR [edx]
  418f60:	outs   dx,BYTE PTR ds:[esi]
  418f61:	jmp    0xf55b:0xb7f4e3f3
  418f68:	xor    dl,cl
  418f6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f6b:	sbb    BYTE PTR [eax+0x2b4cf4bd],0xf9
  418f72:	and    DWORD PTR ds:0x64b2bd10,edx
  418f78:	test   al,0x2b
  418f7a:	cmp    dl,BYTE PTR [edi]
  418f7c:	imul   esp,DWORD PTR ds:0x26976ae5,0x53dc86c7
  418f86:	sub    al,0x4d
  418f88:	icebp  
  418f89:	push   edi
  418f8a:	call   0xd7fcc7a0
  418f8f:	ret    0x405b
  418f92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f93:	js     0x419013
  418f95:	mov    bh,0xf6
  418f97:	mov    al,0x3f
  418f99:	adc    BYTE PTR [ebx-0x731905ef],0x63
  418fa0:	(bad)  
  418fa1:	out    dx,eax
  418fa2:	hlt    
  418fa3:	xchg   ebx,eax
  418fa4:	dec    edx
  418fa5:	add    BYTE PTR [ebp+0x318bce7c],al
  418fab:	repz xchg edx,eax
  418fad:	xchg   esi,eax
  418fae:	sbb    DWORD PTR [esi-0x2d19e9e1],eax
  418fb4:	mov    ds,WORD PTR [ebp-0x7ffce5b1]
  418fba:	jp     0x419001
  418fbc:	inc    edx
  418fbd:	push   ds
  418fbe:	mov    al,0x66
  418fc0:	mov    esp,edx
  418fc2:	and    esi,DWORD PTR [ebx-0x2ca1e4dc]
  418fc8:	mov    esi,0xd1c7c80d
  418fcd:	bound  ebp,QWORD PTR [edx]
  418fcf:	jne    0x418f79
  418fd1:	cmp    bl,BYTE PTR [esi+edi*4]
  418fd4:	rcr    BYTE PTR [edx-0x338f3d7d],cl
  418fda:	inc    esi
  418fdb:	jg     0x418fcf
  418fdd:	xchg   cl,dl
  418fdf:	inc    ecx
  418fe0:	dec    ebp
  418fe1:	mov    cl,0x4e
  418fe3:	es rcl ecx,1
  418fe6:	and    eax,0xff1b51b6
  418feb:	mul    BYTE PTR [eax-0x1750b421]
  418ff1:	lahf   
  418ff2:	mov    eax,0x260242ee
  418ff7:	mov    BYTE PTR [edx],ch
  418ff9:	clc    
  418ffa:	push   ss
  418ffb:	sbb    esp,DWORD PTR [ecx-0x56]
  418ffe:	jne    0x418f8a
  419000:	je     0x418f88
  419002:	dec    esp
  419003:	das    
  419004:	xor    ebp,ebp
  419006:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419008:	call   0xf29:0x4d80c8ee
  41900f:	leave  
  419010:	adc    al,0x89
  419013:	fild   DWORD PTR [edx-0x2dc699ab]
  419019:	std    
  41901a:	mov    dl,0x8d
  41901c:	sub    DWORD PTR [esi+0x70],ebp
  41901f:	jg     0x41908c
  419021:	aam    0xd2
  419023:	fist   DWORD PTR [edx]
  419026:	jmp    0x41908e
  419028:	fmul   st,st(0)
  41902a:	lods   eax,DWORD PTR ds:[esi]
  41902b:	inc    edx
  41902c:	mov    al,ds:0x8112e6ae
  419031:	lods   eax,DWORD PTR ds:[esi]
  419032:	iret   
  419033:	fcomip st,st(1)
  419035:	adc    eax,0xd090c4a
  41903a:	pop    edx
  41903b:	data16 or BYTE PTR ds:[edi],ah
  41903f:	mov    bl,0xb6
  419041:	mov    ds:0xa2e7c2ba,al
  419046:	cmc    
  419047:	push   esp
  419048:	cwde   
  419049:	mov    ds:0x2ef35eac,al
  41904e:	push   ds
  41904f:	loopne 0x41907a
  419051:	(bad)  
  419052:	inc    esi
  419053:	dec    eax
  419054:	or     eax,0xdfcc64ae
  419059:	push   0x2d0c466a
  41905e:	jmp    0x4190b3
  419060:	mov    esi,0xb3e199d3
  419065:	mov    bh,0x3e
  419067:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419069:	sub    DWORD PTR [ebp-0x5e],0xffffff88
  41906d:	xchg   ebx,eax
  41906e:	mov    al,0xee
  419070:	dec    esi
  419071:	push   ecx
  419072:	in     al,0x94
  419074:	xor    DWORD PTR [esi],eax
  419076:	shl    BYTE PTR [ecx],cl
  419078:	push   esp
  419079:	pop    ebp
  41907a:	js     0x4190bd
  41907c:	jmp    0x9556685b
  419081:	std    
  419082:	add    DWORD PTR [ecx],edx
  419084:	xor    al,0x13
  419086:	pop    edx
  419087:	sub    BYTE PTR [ebx-0x3526e7e3],dl
  41908d:	shl    bl,1
  41908f:	jnp    0x419085
  419091:	or     DWORD PTR ds:0xee098495,ebx
  419097:	paddsw mm0,QWORD PTR [ecx-0x65ca73c6]
  41909e:	xchg   edi,eax
  41909f:	cs mov dl,0x15
  4190a2:	outs   dx,DWORD PTR fs:[esi]
  4190a4:	loopne 0x419092
  4190a6:	cmc    
  4190a7:	xchg   BYTE PTR [edx+0x2e],dl
  4190aa:	(bad)  ds:0x37835854
  4190b0:	int3   
  4190b1:	cs xchg esi,eax
  4190b3:	xlat   BYTE PTR ds:[ebx]
  4190b4:	sbb    cl,BYTE PTR [edx+edi*4]
  4190b7:	mov    dh,0x56
  4190b9:	pusha  
  4190ba:	push   esi
  4190bb:	call   0x1a:0x9728f672
  4190c2:	inc    edx
  4190c3:	and    BYTE PTR [ecx+esi*2],dh
  4190c6:	rcl    DWORD PTR [edi],1
  4190c8:	xchg   esp,eax
  4190c9:	sahf   
  4190ca:	jno    0x419132
  4190cc:	inc    ebp
  4190cd:	lods   eax,DWORD PTR ds:[esi]
  4190ce:	inc    eax
  4190cf:	aas    
  4190d0:	xchg   ecx,eax
  4190d1:	mov    eax,ds:0xdcebd519
  4190d6:	sbb    al,0x4a
  4190d8:	clc    
  4190d9:	(bad)  
  4190da:	fistp  WORD PTR [esi]
  4190dc:	xchg   esi,eax
  4190dd:	(bad)  
  4190de:	jle    0x419138
  4190e0:	push   ebx
  4190e1:	call   0xd367:0x140f10c5
  4190e8:	mov    bh,0x61
  4190ea:	int3   
  4190eb:	or     DWORD PTR [eax+edx*2+0x5bc2500b],edi
  4190f2:	mov    WORD PTR [eax],?
  4190f4:	jmp    0x9251:0xd53766b1
  4190fb:	pop    esi
  4190fc:	mov    dl,0xb
  4190fe:	dec    ecx
  4190ff:	(bad)  
  419101:	retf   0x9219
  419104:	stc    
  419105:	in     al,dx
  419106:	fistp  WORD PTR ds:0x264c0241
  41910c:	outs   dx,DWORD PTR ds:[esi]
  41910d:	fisub  WORD PTR [eax]
  41910f:	push   edi
  419110:	test   DWORD PTR [esi],ebx
  419112:	sub    cl,BYTE PTR [esp+edx*1+0x4e90b9dc]
  419119:	pop    esp
  41911a:	fwait
  41911b:	(bad)  
  41911c:	sar    ecx,cl
  41911e:	je     0x41916a
  419120:	rcl    BYTE PTR [eax+esi*2-0x31020530],cl
  419127:	out    0x13,eax
  419129:	popa   
  41912a:	dec    edx
  41912b:	lea    edi,[edx]
  41912d:	jbe    0x419149
  41912f:	xlat   BYTE PTR ds:[ebx]
  419131:	les    ebp,FWORD PTR [ebp+0x30]
  419134:	aaa    
  419135:	or     eax,0x86dc3438
  41913a:	and    eax,0x72149752
  41913f:	hlt    
  419140:	fwait
  419141:	inc    edx
  419142:	aad    0x1e
  419144:	pop    ebp
  419145:	pop    edi
  419146:	xor    al,0x75
  419148:	enter  0x63aa,0x33
  41914c:	clc    
  41914d:	or     dl,bh
  41914f:	xor    cl,BYTE PTR [ebx-0x1a]
  419152:	jnp    0x41916b
  419154:	in     al,dx
  419155:	iret   
  419156:	adc    dh,BYTE PTR [eax-0x80]
  419159:	ficom  WORD PTR [esi+eax*1-0x54]
  41915d:	mov    al,0x2b
  41915f:	bound  ebp,QWORD PTR [ebx-0x1a4e50d2]
  419165:	retf   0x2c28
  419168:	xor    bh,bl
  41916a:	inc    esi
  41916b:	out    0xe1,al
  41916d:	adc    BYTE PTR [eax+ebx*8+0x6c],dh
  419171:	xchg   BYTE PTR [edx-0x33],ah
  419174:	push   cs
  419175:	pop    esi
  419176:	xchg   ecx,eax
  419177:	xchg   edi,eax
  419178:	or     ecx,ecx
  41917a:	cmp    BYTE PTR [edi],cl
  41917c:	fs cwde 
  41917e:	(bad)  
  41917f:	push   esi
  419180:	cli    
  419181:	cld    
  419182:	fistp  WORD PTR [edi]
  419184:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419185:	sub    BYTE PTR [edx-0xf],bl
  419188:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419189:	xchg   esp,eax
  41918a:	daa    
  41918b:	jecxz  0x4191f8
  41918d:	fsubr  DWORD PTR [esp+ecx*2-0x2c]
  419191:	and    eax,DWORD PTR [ebx+ecx*2+0x71]
  419195:	and    DWORD PTR [edx+0x1d57a7d],edi
  41919b:	push   ebp
  41919c:	pop    esp
  41919d:	sar    DWORD PTR [ecx-0xa],0xcd
  4191a1:	outs   dx,BYTE PTR ds:[esi]
  4191a2:	bound  ebx,QWORD PTR [ecx-0x718c3aa3]
  4191a8:	jae    0x419161
  4191aa:	dec    ebp
  4191ab:	addr16 sub eax,0x6a0141d7
  4191b1:	pop    edi
  4191b2:	das    
  4191b3:	cld    
  4191b4:	inc    edi
  4191b5:	mov    DWORD PTR [edi],edi
  4191b7:	aam    0xba
  4191b9:	ins    DWORD PTR es:[edi],dx
  4191ba:	adc    esi,esi
  4191bc:	neg    cl
  4191be:	mov    al,ds:0xfe087f1e
  4191c3:	xor    al,0x91
  4191c5:	push   cs
  4191c6:	jne    0x419150
  4191c8:	in     eax,dx
  4191c9:	les    ecx,FWORD PTR [esi+0x67]
  4191cc:	test   DWORD PTR [esi+0x8],esi
  4191cf:	jns    0x4191cd
  4191d1:	mov    eax,esi
  4191d3:	adc    DWORD PTR [eax],ebp
  4191d5:	xor    esp,DWORD PTR cs:[eax+0x117b3646]
  4191dc:	out    dx,eax
  4191dd:	or     DWORD PTR ds:0xd49f2b5,edi
  4191e3:	in     eax,0xac
  4191e5:	add    al,0x9a
  4191e7:	js     0x41923d
  4191e9:	dec    esi
  4191ea:	mov    esi,0xe7fd1387
  4191ef:	(bad)  
  4191f0:	push   esi
  4191f1:	add    DWORD PTR [ebx-0x456ddfe6],edi
  4191f7:	in     al,0xc3
  4191f9:	cld    
  4191fa:	shl    DWORD PTR [esi-0x43c61ff3],cl
  419200:	mov    ebp,DWORD PTR [edi*1-0x1339c773]
  419207:	sbb    BYTE PTR [ebx-0x4a],al
  41920a:	pop    ds
  41920b:	adc    al,BYTE PTR [edx+0x54]
  41920e:	aam    0xd8
  419210:	add    eax,0x951de6c4
  419215:	lods   eax,DWORD PTR ds:[esi]
  419216:	sub    eax,0x5584617a
  41921b:	pop    edx
  41921c:	jb     0x4191ff
  41921e:	aaa    
  41921f:	fist   DWORD PTR [edi+eax*2-0x52]
  419223:	test   al,0x39
  419225:	or     eax,0xfcbeb696
  41922a:	mov    dh,BYTE PTR [edx-0xd34ba8f]
  419230:	stos   BYTE PTR es:[edi],al
  419231:	inc    edx
  419232:	pop    ebp
  419233:	pop    edi
  419234:	xlat   BYTE PTR ds:[ebx]
  419235:	xchg   ebp,eax
  419236:	add    DWORD PTR [ebx],0x34
  419239:	push   0x7b3ba21c
  41923e:	xchg   esp,eax
  41923f:	gs dec edx
  419241:	vaddss xmm2,xmm2,xmm4
  419245:	scas   eax,DWORD PTR es:[edi]
  419246:	repz fild QWORD PTR [eax-0x7eec5ea4]
  41924d:	mov    edi,0x4f06df8f
  419252:	cs es push eax
  419255:	push   ebx
  419256:	xor    cl,bl
  419258:	sbb    edi,DWORD PTR ds:0xf23ef526
  41925e:	mov    dl,0x70
  419260:	xor    ah,BYTE PTR [esi+eiz*4+0x6c48020a]
  419267:	pop    edx
  419268:	(bad)  
  419269:	out    dx,al
  41926a:	and    dl,BYTE PTR [ebp+0x707fa7e8]
  419270:	pop    es
  419271:	aas    
  419272:	cwde   
  419273:	in     eax,dx
  419274:	mov    esi,0xdb0664b0
  419279:	aad    0x2e
  41927b:	(bad)  
  41927c:	imul   dl
  41927e:	dec    BYTE PTR [esi+0x7b]
  419281:	in     eax,0xfb
  419283:	sbb    dl,BYTE PTR [eax+0x40185c1]
  419289:	fistp  DWORD PTR [edi+ebp*8+0x7f]
  41928d:	xor    BYTE PTR [edi-0x1d],ah
  419290:	inc    ebp
  419291:	mov    ah,0xdd
  419293:	mov    bl,0x7b
  419295:	gs cmp eax,0x2499c91
  41929b:	mov    edx,0x9bb4af7d
  4192a0:	and    dh,BYTE PTR [edi]
  4192a2:	push   0xda769641
  4192a7:	fwait
  4192a8:	not    DWORD PTR ss:[eax]
  4192ab:	xor    esi,DWORD PTR [ebp+0x67e63b36]
  4192b1:	add    eax,DWORD PTR [eax-0x78]
  4192b4:	mov    ebx,0x5dc630b0
  4192b9:	mov    ecx,0x25cc9ea8
  4192be:	dec    esi
  4192bf:	cmp    cl,bh
  4192c1:	stos   BYTE PTR es:[edi],al
  4192c2:	stos   DWORD PTR es:[edi],eax
  4192c3:	rol    BYTE PTR [eax-0x473f9e91],cl
  4192c9:	and    DWORD PTR [esi+ecx*1+0x36a4e2d7],edi
  4192d0:	sub    ah,ch
  4192d2:	inc    edi
  4192d3:	dec    edx
  4192d4:	call   0x75ffd161
  4192d9:	inc    BYTE PTR [esi+0x36]
  4192dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4192dd:	mov    dl,0xdf
  4192df:	push   edi
  4192e0:	add    al,0x2c
  4192e2:	dec    ebp
  4192e3:	call   0xbda9:0xafa14f68
  4192ea:	sahf   
  4192eb:	(bad)  [edx-0x7f]
  4192ee:	stos   BYTE PTR es:[edi],al
  4192ef:	(bad)  
  4192f0:	rol    eax,cl
  4192f2:	or     esi,DWORD PTR [ebx-0x74dcea60]
  4192f8:	mov    ds:0x9ca977c2,eax
  4192fd:	arpl   WORD PTR [ecx+0x4b2c6d3a],ax
  419303:	sub    BYTE PTR [esp+ecx*4+0x3765327c],ah
  41930a:	in     eax,dx
  41930b:	cmc    
  41930c:	fisub  WORD PTR [edx]
  41930e:	cmc    
  41930f:	adc    esi,DWORD PTR [eax]
  419311:	out    0xce,eax
  419313:	jl     0x419345
  419315:	sbb    bl,cl
  419317:	and    eax,0x224d7423
  41931c:	inc    ebx
  41931d:	fmul   DWORD PTR [ebx-0x41604c01]
  419323:	jge    0x419375
  419325:	push   esp
  419326:	stos   DWORD PTR es:[edi],eax
  419327:	mov    cl,0xd9
  419329:	pop    es
  41932a:	ficom  DWORD PTR [esi+eiz*1+0x5c]
  41932e:	cmp    DWORD PTR [edi+edi*8],edx
  419331:	pop    ds
  419332:	or     ebx,edx
  419334:	xchg   esp,eax
  419335:	in     al,dx
  419336:	or     BYTE PTR [ebp+0x7a],0xe7
  41933a:	fsub   QWORD PTR [eax+0x35d8c369]
  419340:	or     ch,cl
  419342:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419343:	popa   
  419344:	lods   al,BYTE PTR ds:[esi]
  419345:	lods   al,BYTE PTR ds:[esi]
  419346:	loope  0x4192cb
  419348:	mov    edi,0xa269f97c
  41934d:	inc    edi
  41934e:	aas    
  41934f:	scas   eax,DWORD PTR es:[edi]
  419350:	add    BYTE PTR [edx-0x7130fd3f],0x5
  419357:	out    dx,al
  419358:	fwait
  419359:	dec    eax
  41935a:	mov    ds:0x3528d420,eax
  41935f:	popf   
  419360:	xchg   dl,ch
  419362:	and    BYTE PTR [edx],ah
  419364:	lea    edi,[ecx+0x46]
  419367:	call   0x736d7bd6
  41936c:	retf   
  41936d:	sbb    al,0xa4
  41936f:	inc    cl
  419371:	push   ss
  419372:	outs   dx,DWORD PTR ds:[esi]
  419373:	dec    eax
  419374:	mov    dh,0x46
  419376:	imul   esi,DWORD PTR [ecx],0x79
  419379:	jge    0x419364
  41937b:	mov    dl,0x8b
  41937d:	mov    al,al
  41937f:	shl    DWORD PTR [eax],1
  419381:	fdivr  DWORD PTR [edi+0x7]
  419384:	push   ebp
  419385:	(bad)  
  419386:	cmp    DWORD PTR [eax+0x385d1639],esi
  41938c:	lods   al,BYTE PTR ds:[esi]
  41938d:	or     al,0x87
  41938f:	pop    edi
  419390:	inc    ebx
  419391:	jo     0x419363
  419393:	loop   0x4193a7
  419395:	pop    ds
  419396:	test   ebx,ebx
  419398:	fdiv   QWORD PTR [edx+ebx*1+0x119d151c]
  41939f:	es jge 0x41938b
  4193a2:	shl    DWORD PTR [ebp-0x29],0x25
  4193a6:	cmp    ch,dl
  4193a8:	je     0x419379
  4193aa:	push   es
  4193ab:	mov    edi,0xe68fb191
  4193b0:	xor    bh,BYTE PTR [edi+eax*1-0x56]
  4193b4:	sbb    al,0x62
  4193b6:	sbb    DWORD PTR [eax+0x6f2430a7],0xb7d0d228
  4193c0:	lods   al,BYTE PTR ds:[esi]
  4193c1:	fidiv  WORD PTR [ecx]
  4193c3:	scas   al,BYTE PTR es:[edi]
  4193c4:	inc    ecx
  4193c5:	jge    0x41942a
  4193c7:	sub    ah,0xb
  4193ca:	(bad)  
  4193cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193cc:	cs mov bl,0xb3
  4193cf:	ins    DWORD PTR es:[edi],dx
  4193d0:	or     BYTE PTR [edi+0xcd4cbab],dl
  4193d6:	idiv   BYTE PTR [edx]
  4193d8:	sub    dh,dh
  4193da:	pinsrw mm6,WORD PTR [esi+0x31ad112d],0xf
  4193e2:	or     eax,0x541944c
  4193e7:	sbb    cl,al
  4193e9:	push   ebp
  4193ea:	dec    edx
  4193eb:	mov    bh,0x8e
  4193ed:	mov    ebx,0x94461b68
  4193f2:	ret    0x6048
  4193f5:	(bad)  
  4193f6:	pop    es
  4193f7:	mov    esi,0x48e4fa13
  4193fc:	jne    0x4193d1
  4193fe:	add    ah,BYTE PTR [ecx+0x30]
  419401:	add    DWORD PTR [edi-0x613e783f],ebx
  419407:	out    0xde,al
  419409:	fiadd  WORD PTR [ecx-0x6b0f15cb]
  41940f:	pop    ebx
  419410:	adc    eax,0x80a0b1ed
  419415:	scas   eax,DWORD PTR es:[edi]
  419416:	icebp  
  419417:	loopne 0x41947c
  419419:	xor    DWORD PTR [ebx+0x1c777429],0x49
  419420:	stos   DWORD PTR es:[edi],eax
  419421:	add    eax,DWORD PTR [ebx]
  419423:	cmp    BYTE PTR [edi],cl
  419425:	pushf  
  419426:	push   ebp
  419427:	les    eax,FWORD PTR [ebx-0x63d9974b]
  41942d:	cmp    ch,al
  41942f:	or     DWORD PTR [eax-0xb],eax
  419432:	ret    0x9f2
  419435:	push   es
  419436:	adc    BYTE PTR [ecx],al
  419438:	mov    eax,ds:0xb7edc264
  41943d:	aaa    
  41943e:	cli    
  41943f:	sub    eax,0x352cad91
  419444:	or     BYTE PTR [edx+0x2d],cl
  419447:	cmovns ebp,DWORD PTR [ebx-0x5]
  41944b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41944c:	enter  0xb90d,0x8d
  419450:	cs popf 
  419452:	enter  0x736e,0x42
  419456:	sub    DWORD PTR [edi-0x48],eax
  419459:	lods   al,BYTE PTR ds:[esi]
  41945a:	scas   eax,DWORD PTR es:[edi]
  41945b:	push   esp
  41945c:	or     bh,BYTE PTR [eax-0x1e1bf42f]
  419462:	xchg   edi,eax
  419463:	mov    esp,0xa40e560d
  419468:	and    eax,0xf82d44d8
  41946d:	pop    edi
  41946e:	(bad)  
  41946f:	aaa    
  419470:	xor    edx,DWORD PTR [ecx-0x3cdac960]
  419476:	out    dx,al
  419477:	mov    dl,0xa
  419479:	and    esi,eax
  41947b:	cmp    edx,DWORD PTR [esi]
  41947d:	mov    WORD PTR [ebx+0x63c7fb69],?
  419483:	popa   
  419484:	jmp    FWORD PTR [esi]
  419486:	fs mov esp,0x6f79d9ff
  41948c:	ror    ebx,1
  41948e:	jb     0x4194db
  419490:	outs   dx,DWORD PTR ds:[esi]
  419491:	and    al,0xb3
  419493:	fdiv   st,st(6)
  419495:	dec    ecx
  419496:	shl    DWORD PTR [eax-0x3e],cl
  419499:	add    bp,ax
  41949c:	pop    ds
  41949d:	cli    
  41949e:	push   eax
  41949f:	data16 (bad) 
  4194a1:	mov    eax,ds:0x4e6e39e2
  4194a6:	loope  0x41944c
  4194a8:	mov    ebp,0x68b90693
  4194ad:	push   ebx
  4194ae:	out    dx,al
  4194af:	or     al,BYTE PTR [edi+0x1e]
  4194b2:	movd   DWORD PTR [ecx-0x27],mm1
  4194b6:	pop    eax
  4194b7:	dec    esi
  4194b8:	ret    0x4745
  4194bb:	push   edx
  4194bc:	adc    ch,BYTE PTR cs:[ebp-0x10bc2c5b]
  4194c3:	jb     0x4194a7
  4194c5:	sar    dh,0x81
  4194c8:	out    dx,al
  4194c9:	mov    esi,0x12171408
  4194ce:	std    
  4194cf:	mov    dl,0x80
  4194d1:	retf   0xb9f5
  4194d4:	inc    edx
  4194d5:	jle    0x41954a
  4194d7:	xchg   edx,eax
  4194d8:	mov    edx,0xb0831270
  4194dd:	inc    ebp
  4194de:	push   0x38d60e5d
  4194e3:	xchg   edi,eax
  4194e4:	xchg   edx,ecx
  4194e6:	jnp    0x419549
  4194e8:	out    0x50,eax
  4194ea:	pop    ss
  4194eb:	sbb    al,0xc1
  4194ed:	or     DWORD PTR [edx+0x5d],esp
  4194f0:	push   ss
  4194f1:	bound  edx,QWORD PTR ds:0x53ccf277
  4194f7:	xchg   ecx,eax
  4194f8:	push   0xd687ce62
  4194fd:	sub    al,0x92
  4194ff:	cmp    ecx,ebp
  419501:	aas    
  419502:	mov    eax,0x431389b5
  419507:	xor    BYTE PTR [edx-0xa0090d1],cl
  41950d:	gs neg al
  419510:	xchg   edi,eax
  419511:	xor    esp,DWORD PTR [esi]
  419513:	lds    edi,FWORD PTR [ebp+0x86d00e2]
  419519:	test   eax,0xebd7d6c9
  41951e:	push   esp
  41951f:	mov    esp,0xc177fb83
  419524:	or     ebp,DWORD PTR [edx-0x5a]
  419527:	jae    0x419562
  419529:	add    ebp,edx
  41952b:	iret   
  41952c:	mov    al,0x3c
  41952e:	inc    esi
  41952f:	sbb    al,0x74
  419531:	lods   eax,DWORD PTR ds:[esi]
  419532:	pop    ebp
  419533:	cmp    al,0x16
  419535:	stos   DWORD PTR es:[edi],eax
  419536:	inc    esp
  419537:	pop    ebx
  419538:	out    0x8e,eax
  41953a:	sbb    DWORD PTR [ebp-0x5a],esp
  41953d:	pop    ss
  41953e:	daa    
  41953f:	je     0x419562
  419541:	fninit 
  419543:	mov    al,0x4a
  419545:	in     eax,dx
  419546:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419547:	jecxz  0x419507
  419549:	cdq    
  41954a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41954b:	mov    al,ds:0xff855dcc
  419550:	xchg   esp,eax
  419551:	out    0x52,eax
  419553:	mov    eax,ds:0x1715cccd
  419558:	out    dx,al
  419559:	fmul   DWORD PTR [esi-0x2673bc42]
  41955f:	sub    ch,BYTE PTR [ebp-0x2f]
  419562:	add    edx,ecx
  419564:	ss xchg ebp,eax
  419566:	or     DWORD PTR [edi+0x412c715f],edi
  41956c:	loopne 0x419508
  41956e:	test   eax,0xcef93eb9
  419573:	xchg   DWORD PTR [eax+edi*1+0x3f2561bb],edi
  41957a:	cmp    al,BYTE PTR [edi-0x3a]
  41957d:	push   esi
  41957e:	popf   
  41957f:	add    DWORD PTR [edx-0x3a70f2c9],edx
  419585:	mov    WORD PTR [eax+ebp*4+0x31],ss
  419589:	imul   eax,DWORD PTR [edi+0x5f],0xfffffff9
  41958d:	xor    edx,ebx
  41958f:	loope  0x4195af
  419591:	push   ds
  419592:	in     al,0x0
  419594:	jb     0x419521
  419596:	sbb    al,0xed
  419598:	mov    DWORD PTR [edx+0x4f],ebp
  41959b:	jmp    0x41959c
  41959d:	pop    es
  41959e:	outs   dx,DWORD PTR ds:[esi]
  41959f:	push   ecx
  4195a0:	rcl    BYTE PTR [edx-0x22],0xf2
  4195a4:	aas    
  4195a5:	dec    ebp
  4195a6:	mov    ebp,0xb6ed3720
  4195ab:	rcr    DWORD PTR [edx+0x65],0xeb
  4195af:	loop   0x4195dd
  4195b1:	xchg   edi,eax
  4195b2:	or     al,cl
  4195b4:	cmp    ebp,DWORD PTR [edx+0x63597a01]
  4195ba:	inc    ebp
  4195bb:	repnz cwde 
  4195bd:	imul   ebp,edi,0xffffffc4
  4195c0:	nop
  4195c1:	cmp    bh,BYTE PTR [ebp-0x1b63802c]
  4195c7:	and    BYTE PTR [edi],dh
  4195c9:	popa   
  4195ca:	in     al,dx
  4195cb:	(bad)  [edi+0x72]
  4195ce:	lods   eax,DWORD PTR ds:[esi]
  4195cf:	test   eax,0xd095b304
  4195d4:	add    DWORD PTR [ebx+eiz*1],ebx
  4195d7:	adc    al,0x59
  4195d9:	arpl   WORD PTR [eax+0x69db939e],sp
  4195df:	adc    ebx,0xfffffff1
  4195e2:	jecxz  0x4195f5
  4195e4:	fidivr DWORD PTR [edi-0x25]
  4195e7:	fldenv [ebp-0x79e28721]
  4195ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195ee:	xchg   esp,eax
  4195ef:	dec    esi
  4195f0:	pop    esi
  4195f1:	ins    BYTE PTR es:[edi],dx
  4195f2:	lahf   
  4195f3:	jmp    0x324d7da
  4195f8:	hlt    
  4195f9:	jg     0x4195b8
  4195fb:	push   0xd06351c3
  419600:	cdq    
  419601:	xchg   esi,eax
  419602:	jmp    0x75ee871a
  419607:	add    ebx,DWORD PTR [ebp-0x65bc2b4]
  41960d:	pop    eax
  41960e:	pop    esp
  41960f:	dec    esi
  419610:	dec    esi
  419611:	sbb    BYTE PTR [eax+0x7a6f1137],ch
  419617:	add    al,0xe7
  419619:	mov    ecx,DWORD PTR [ecx+eiz*2-0x24b9c2f6]
  419620:	arpl   WORD PTR [ebx],ax
  419622:	popa   
  419623:	adc    eax,0xfd23dee0
  419628:	xor    eax,0xebe458aa
  41962d:	test   eax,0xe9d63d5c
  419632:	inc    eax
  419633:	(bad)  
  419634:	stc    
  419635:	jo     0x4195ee
  419637:	int    0x6b
  419639:	jmp    0xaaff5cb8
  41963e:	sbb    BYTE PTR [ebx+0x6f],dl
  419641:	cmp    ebx,edx
  419643:	mov    ah,0x2d
  419645:	aam    0x9b
  419647:	jae    0x4196a4
  419649:	adc    DWORD PTR ds:0x5226f7ca,esp
  41964f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419650:	into   
  419651:	data16 ds jl 0x4195fc
  419655:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419656:	ins    DWORD PTR es:[edi],dx
  419657:	mov    edi,0xd6b94a8d
  41965c:	jmp    0x220e0b53
  419661:	mov    bl,0x7c
  419663:	jp     0x41960f
  419665:	pop    es
  419666:	int3   
  419667:	xchg   DWORD PTR [eax],esp
  419669:	or     ah,BYTE PTR [esi-0x60]
  41966c:	add    BYTE PTR [eax-0x20],0xd6
  419670:	jmp    0x4196b0
  419672:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419673:	jo     0x419627
  419675:	fild   DWORD PTR [ebx+0x9548b97]
  41967b:	mov    esp,0xa3f7799f
  419680:	into   
  419681:	sti    
  419682:	adc    BYTE PTR [edx-0x6da72409],0x3
  419689:	retf   0xadb9
  41968c:	out    0x5d,eax
  41968e:	dec    esi
  41968f:	pop    edx
  419690:	xor    ebx,DWORD PTR [edi]
  419692:	jno    0x419629
  419694:	jne    0x41966e
  419696:	mov    ecx,edx
  419698:	push   eax
  419699:	iret   
  41969a:	xor    eax,0xd7bf5ede
  41969f:	imul   edi,DWORD PTR [esi],0x53
  4196a2:	call   0x4470:0x88b8fe81
  4196a9:	lods   eax,DWORD PTR ds:[esi]
  4196aa:	in     al,0x68
  4196ac:	retf   
  4196ad:	sbb    BYTE PTR [ebp-0x7ab6ec6],0x93
  4196b4:	pop    edi
  4196b5:	inc    eax
  4196b6:	dec    eax
  4196b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196b8:	push   ss
  4196b9:	jns    0x419730
  4196bb:	push   edi
  4196bc:	fisub  WORD PTR [ecx+0x3d715dd3]
  4196c2:	adc    bl,dh
  4196c4:	lock inc ebp
  4196c6:	push   esp
  4196c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196c8:	xchg   BYTE PTR [ebp-0x55eedd78],bl
  4196ce:	pop    ss
  4196cf:	jg     0x419746
  4196d1:	push   0xffffff8e
  4196d3:	enter  0x876d,0xba
  4196d7:	mov    edi,0x35769c72
  4196dc:	fdivr  QWORD PTR [edx+0x47]
  4196df:	mov    ds:0xdf297c7c,eax
  4196e4:	fsub   QWORD PTR [edx+eax*1-0x4b]
  4196e8:	lahf   
  4196e9:	fs inc edx
  4196eb:	push   es
  4196ec:	cmp    al,BYTE PTR [edi]
  4196ee:	repnz not BYTE PTR [esi+0x2a]
  4196f2:	lods   al,BYTE PTR ds:[esi]
  4196f3:	pop    ebp
  4196f4:	and    edx,esi
  4196f6:	std    
  4196f7:	in     al,dx
  4196f8:	int3   
  4196f9:	repnz sbb al,0xdf
  4196fc:	aad    0xce
  4196fe:	and    edx,ecx
  419700:	repnz out dx,al
  419702:	fiadd  WORD PTR [ebx+eiz*1+0x54ace277]
  419709:	pop    ebp
  41970a:	adc    DWORD PTR [eax+0x3c],0xe250316b
  419711:	sub    eax,0x6cf67cba
  419716:	mov    cl,0x51
  419718:	jge    0x419797
  41971a:	dec    ebp
  41971b:	or     eax,0xe09a764d
  419720:	or     al,0xd7
  419722:	cli    
  419723:	jp     0x41974d
  419725:	push   cs
  419726:	in     eax,0x18
  419728:	pop    esi
  419729:	out    dx,eax
  41972a:	clc    
  41972b:	adc    eax,DWORD PTR [ebp+0x5e]
  41972e:	xor    al,BYTE PTR [esi+0x27e390ea]
  419734:	xor    al,0x65
  419736:	icebp  
  419737:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419738:	jns    0x41975a
  41973a:	add    BYTE PTR [edx],ah
  41973c:	arpl   WORD PTR [edx-0x7eb052c9],sp
  419742:	jo     0x419791
  419744:	jne    0x41976d
  419746:	sbb    DWORD PTR [esi],edx
  419748:	std    
  419749:	cmp    ebp,DWORD PTR [ebp+ebp*2-0x35]
  41974d:	jmp    0x419726
  41974f:	popa   
  419750:	(bad)  
  419751:	xchg   edi,eax
  419752:	or     dh,dh
  419754:	(bad)  
  419757:	xlat   BYTE PTR ds:[ebx]
  419758:	(bad)
  41975c:	iret   
  41975d:	xor    esp,edi
  41975f:	nop
  419760:	retf   0x23f2
  419763:	out    0xeb,eax
  419765:	pop    es
  419766:	xchg   edx,eax
  419767:	xor    dl,dl
  419769:	dec    esi
  41976a:	xchg   esp,eax
  41976b:	je     0x419766
  41976d:	shl    bh,cl
  41976f:	scas   eax,DWORD PTR es:[edi]
  419770:	test   DWORD PTR [eax],0xb20069c2
  419776:	loop   0x41973b
  419778:	ds cld 
  41977a:	jg     0x419743
  41977c:	add    DWORD PTR [esi-0x6bba074],eax
  419782:	(bad)  
  419783:	dec    edi
  419784:	(bad)  
  419785:	jnp    0x41973f
  419787:	mov    WORD PTR [ecx],gs
  419789:	(bad)  
  41978b:	add    cl,0x33
  41978e:	ret    0xf726
  419791:	leave  
  419792:	sub    BYTE PTR [esp+eiz*4],al
  419795:	lock pop ds
  419797:	(bad)  
  419798:	iret   
  419799:	lods   eax,DWORD PTR ds:[esi]
  41979a:	and    DWORD PTR [esi-0xb],edi
  41979d:	imul   esi,DWORD PTR [ebx+edi*4],0xb5355ac7
  4197a4:	cmp    BYTE PTR [esi+ebx*1],0xbd
  4197a8:	std    
  4197a9:	and    eax,0x728bb8c5
  4197ae:	inc    edi
  4197af:	ins    BYTE PTR es:[edi],dx
  4197b0:	mov    eax,0xbc4b8021
  4197b5:	mov    ebp,DWORD PTR [esi+0x71]
  4197b8:	rol    DWORD PTR [ecx-0x4e6f22f9],0xeb
  4197bf:	mov    bl,0x15
  4197c1:	call   0x9819294f
  4197c6:	cmp    edi,esp
  4197c8:	fptan  
  4197ca:	jmp    0x9d5f:0x3aee847c
  4197d1:	or     al,0x5
  4197d3:	stos   BYTE PTR es:[edi],al
  4197d4:	(bad)  
  4197d6:	push   ebp
  4197d7:	cmc    
  4197d8:	std    
  4197d9:	rcr    DWORD PTR [edi-0x37e3d10],1
  4197df:	xor    DWORD PTR [ebx-0x44],esp
  4197e2:	mov    ds:0xbcb2c238,eax
  4197e7:	mov    ah,0x5d
  4197e9:	in     al,dx
  4197ea:	mov    ecx,0x854cfc23
  4197ef:	std    
  4197f0:	xchg   edi,eax
  4197f1:	adc    edi,DWORD PTR [edi]
  4197f3:	mov    esp,ebp
  4197f5:	xchg   edi,eax
  4197f6:	add    al,0x22
  4197f8:	pushf  
  4197f9:	jle    0x419854
  4197fb:	inc    eax
  4197fc:	sar    DWORD PTR [edi],1
  4197fe:	dec    ebx
  4197ff:	sahf   
  419800:	dec    eax
  419801:	mov    eax,0xe17261aa
  419806:	repz loopne 0x41982f
  419809:	outs   dx,BYTE PTR ds:[esi]
  41980a:	in     eax,0x40
  41980c:	test   eax,0xf468a973
  419811:	pop    ds
  419812:	add    al,0xcf
  419814:	test   DWORD PTR [edx],ebp
  419816:	out    0xa9,al
  419818:	mov    edi,0x48ce8623
  41981d:	mov    bl,0x3e
  41981f:	jbe    0x4197af
  419821:	mov    ebx,0x79aec9bc
  419826:	idiv   ebp
  419828:	xchg   edi,eax
  419829:	jp     0x41982d
  41982b:	outs   dx,DWORD PTR ds:[esi]
  41982c:	shr    BYTE PTR [ebx+edi*8],1
  41982f:	scas   eax,DWORD PTR es:[edi]
  419830:	mov    ds,ecx
  419832:	or     al,dl
  419834:	jmp    0x454a:0xd3aa90c6
  41983b:	(bad)  
  41983c:	ss retf 0xc2de
  419840:	test   BYTE PTR [esi+0x69],ch
  419843:	pushf  
  419844:	cmp    ebp,DWORD PTR [esi+0x5]
  419847:	lahf   
  419848:	mov    bl,0x2b
  41984a:	lods   eax,DWORD PTR ds:[esi]
  41984b:	out    0xb6,al
  41984d:	loop   0x41985f
  41984f:	sar    BYTE PTR [edi-0x2d12601a],0x5
  419856:	or     DWORD PTR [ecx-0x1f],0x7c
  41985a:	fs push ss
  41985c:	stos   BYTE PTR es:[edi],al
  41985d:	ds repz call 0xd5d35ecb
  419864:	adc    DWORD PTR [ecx+0x27f67e36],edi
  41986a:	mov    bh,BYTE PTR [ecx+0xa6d448f]
  419870:	pop    es
  419871:	or     al,0x67
  419873:	inc    ecx
  419874:	inc    ebp
  419875:	aam    0x4a
  419877:	inc    edi
  419878:	leave  
  419879:	xor    esp,DWORD PTR [ebp+0x61]
  41987c:	cmp    eax,0xbeccc187
  419881:	je     0x419865
  419883:	aam    0xde
  419885:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419886:	add    ecx,DWORD PTR [edi+0x7f3af9e2]
  41988c:	sbb    eax,0x168b355e
  419891:	mov    ah,0x46
  419893:	and    DWORD PTR [esi],esi
  419895:	hlt    
  419896:	push   cs
  419897:	mov    ch,0x8d
  419899:	lods   al,BYTE PTR ds:[esi]
  41989a:	aam    0x82
  41989c:	enter  0x6ca9,0x48
  4198a0:	cmp    DWORD PTR [ecx-0xc81f55],ebp
  4198a6:	dec    ebp
  4198a7:	mov    dh,0x38
  4198a9:	pop    ss
  4198aa:	pop    ebx
  4198ab:	loopne 0x419919
  4198ad:	das    
  4198ae:	les    eax,FWORD PTR [ecx+0x53]
  4198b1:	xchg   DWORD PTR ds:0x5f6cdf9e,esp
  4198b7:	cmp    BYTE PTR [esi+ecx*8],al
  4198ba:	imul   esi,DWORD PTR [edx-0x7e],0x9c81edf1
  4198c1:	inc    esp
  4198c2:	(bad)  
  4198c3:	nop
  4198c4:	xor    eax,0x1d321d4c
  4198c9:	scas   eax,DWORD PTR es:[edi]
  4198ca:	mov    esp,0xe1bdb04f
  4198cf:	mov    bh,0x9b
  4198d1:	push   ebp
  4198d2:	push   edx
  4198d3:	psubw  mm3,QWORD PTR [esi]
  4198d6:	mov    DWORD PTR [eax],ecx
  4198d8:	cmp    eax,0xfb081812
  4198dd:	mov    ecx,0xed8954aa
  4198e2:	push   edi
  4198e3:	sub    BYTE PTR [ebp-0x58],ch
  4198e6:	mov    esi,0x39197689
  4198eb:	fist   WORD PTR [edi+eax*4]
  4198ee:	adc    ecx,DWORD PTR [edx]
  4198f0:	pop    esi
  4198f1:	sahf   
  4198f2:	sub    DWORD PTR ds:0xda30e035,edi
  4198f8:	sub    BYTE PTR [edi+0x2],0xb5
  4198fc:	dec    ebp
  4198fd:	stc    
  4198fe:	das    
  4198ff:	bound  edi,QWORD PTR [ebx+0x2e]
  419902:	pop    ds
  419903:	cmp    BYTE PTR [ebx-0x5ecd437a],bl
  419909:	add    eax,0x14068307
  41990e:	fldenv [ecx]
  419910:	ja     0x419957
  419912:	mov    cl,0x52
  419914:	mov    esi,0x49021e3e
  419919:	and    al,0xe3
  41991b:	pop    ds
  41991c:	je     0x4198a9
  41991e:	or     BYTE PTR [ebx+edx*1],dh
  419921:	adc    edi,esi
  419923:	jle    0x4198d2
  419925:	jne    0x4198f5
  419927:	(bad)  
  419929:	mov    dh,0xb0
  41992b:	push   0x52
  41992d:	xchg   esp,eax
  41992e:	inc    ecx
  41992f:	lahf   
  419930:	mov    esp,eax
  419932:	pop    edi
  419933:	arpl   WORD PTR [edx],bx
  419935:	bound  edi,QWORD PTR [ebx]
  419937:	retf   0x25cf
  41993a:	jp     0x41997a
  41993c:	jmp    0x5525:0xb797c06a
  419943:	scas   al,BYTE PTR es:[edi]
  419944:	add    cl,dl
  419946:	mov    dh,0x22
  419948:	sbb    cl,BYTE PTR [ebx+0x138ef5d3]
  41994e:	scas   al,BYTE PTR es:[edi]
  41994f:	adc    ah,BYTE PTR [ebp-0x5a04e21a]
  419955:	fild   DWORD PTR [ebp+0x6e]
  419958:	int3   
  419959:	xor    al,0x1e
  41995b:	popf   
  41995c:	ins    BYTE PTR es:[edi],dx
  41995d:	imul   ecx,DWORD PTR [edx],0x21d28676
  419963:	pop    ebp
  419964:	dec    edx
  419965:	jnp    0x4199e0
  419967:	sbb    edi,DWORD PTR [edx]
  419969:	mov    DWORD PTR ds:0x6377114a,ecx
  41996f:	int    0xea
  419971:	xor    al,dl
  419973:	xor    ebx,DWORD PTR [esi+0x74]
  419976:	xor    BYTE PTR [edx],ah
  419978:	push   ss
  419979:	add    BYTE PTR [edx+ecx*1],ch
  41997c:	mov    eax,0x97b5501c
  419981:	test   BYTE PTR [ecx-0x5f],dh
  419984:	repz cld 
  419986:	mov    ax,0x976e
  41998a:	inc    edi
  41998b:	cld    
  41998c:	repnz ins BYTE PTR es:[edi],dx
  41998e:	cmp    al,dl
  419990:	inc    ecx
  419991:	ja     0x4199da
  419993:	push   esi
  419994:	call   0x188e:0x502141d9
  41999b:	mov    cl,0xe5
  41999d:	dec    eax
  41999e:	jmp    0x5fc3dd29
  4199a3:	retf   
  4199a4:	cli    
  4199a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199a6:	es jns 0x4199fb
  4199a9:	cmp    eax,0x5fa5a83f
  4199ae:	stos   DWORD PTR es:[edi],eax
  4199af:	lock jge 0x4199a2
  4199b2:	rcl    ecx,1
  4199b4:	les    edi,FWORD PTR ds:[edi-0x6cd3bede]
  4199bb:	or     al,0xa3
  4199bd:	shl    DWORD PTR [ebx+0x4f6e114b],cl
  4199c3:	in     al,0x58
  4199c5:	add    edi,DWORD PTR [ebx]
  4199c7:	push   ecx
  4199c8:	cld    
  4199c9:	push   ebp
  4199ca:	in     al,0x3e
  4199cc:	in     al,0xdd
  4199ce:	mov    cl,0x44
  4199d0:	dec    ebp
  4199d1:	imul   ecx
  4199d3:	pop    ebp
  4199d4:	push   ebp
  4199d5:	pop    ss
  4199d6:	lock ror BYTE PTR cs:0xe2359930,1
  4199de:	mov    BYTE PTR [eax],bl
  4199e0:	mov    ds:0x7ee2197e,eax
  4199e5:	mov    bl,0xcd
  4199e7:	xor    eax,0xadc5518a
  4199ec:	pop    esp
  4199ed:	cmp    dh,bh
  4199ef:	mov    esi,0x6bcb8585
  4199f4:	jbe    0x419a57
  4199f6:	loop   0x4199ad
  4199f8:	add    edx,0xdcee0d4
  4199fe:	jmp    0x4199c2
  419a00:	add    eax,0xda1deb50
  419a05:	cmp    al,0x99
  419a07:	sbb    BYTE PTR [ebx+0x3ccd34c8],ah
  419a0d:	mov    esp,0xfdd46a86
  419a12:	adc    eax,0xe4758ec
  419a17:	stc    
  419a18:	ss mov ecx,0xca9ee098
  419a1e:	add    DWORD PTR [ebx-0x3e],0xffffffb6
  419a22:	popf   
  419a23:	rcr    BYTE PTR [ebx],1
  419a25:	sub    ebp,edi
  419a27:	in     eax,0xe3
  419a29:	jb     0x419a41
  419a2b:	nop
  419a2c:	cs stos DWORD PTR es:[edi],eax
  419a2e:	push   ss
  419a2f:	pop    ebx
  419a30:	adc    bl,BYTE PTR [esi]
  419a32:	je     0x419a89
  419a34:	dec    esi
  419a35:	mov    ds:0x6ea776b0,al
  419a3a:	push   ss
  419a3b:	mov    esp,0x43b1f66a
  419a40:	jno    0x419a91
  419a42:	cmc    
  419a43:	dec    eax
  419a44:	jle    0x419a9b
  419a46:	mov    edx,0x8bb2413b
  419a4b:	mov    ds:0xc987b6c6,al
  419a50:	xor    eax,0x7a0fd771
  419a55:	pop    ecx
  419a56:	xor    ebx,DWORD PTR [ebx+0xd22736e]
  419a5c:	jmp    0x33d18563
  419a61:	std    
  419a62:	test   eax,0x6a760c8f
  419a67:	and    DWORD PTR [edx-0x5765fc31],ecx
  419a6d:	das    
  419a6e:	xor    ebp,DWORD PTR [eax]
  419a70:	bound  edx,QWORD PTR [ecx+0x2fa83f2]
  419a76:	rol    BYTE PTR [esi-0x1e93e6e9],0x2c
  419a7d:	mov    esi,0x48e5499c
  419a82:	dec    ebp
  419a83:	in     eax,0x2f
  419a85:	repnz sar ebx,0xd2
  419a89:	ins    DWORD PTR es:[edi],dx
  419a8a:	adc    eax,DWORD PTR [eax]
  419a8c:	mov    cl,0x6c
  419a8e:	lds    ecx,FWORD PTR [edi+edx*2+0x700216bf]
  419a95:	inc    esp
  419a96:	scas   al,BYTE PTR es:[edi]
  419a97:	pop    edi
  419a98:	rcl    BYTE PTR [esi],cl
  419a9a:	sub    eax,0x20c01e4b
  419a9f:	lods   eax,DWORD PTR ds:[esi]
  419aa0:	daa    
  419aa1:	dec    edi
  419aa2:	and    al,0x4b
  419aa4:	int3   
  419aa5:	lods   al,BYTE PTR ds:[esi]
  419aa6:	pushf  
  419aa7:	and    ch,bh
  419aa9:	mov    bl,0x92
  419aab:	icebp  
  419aac:	push   DWORD PTR [edi]
  419aae:	jmp    0xc226390c
  419ab3:	lds    ecx,FWORD PTR [ecx+0x5283c801]
  419ab9:	xchg   edi,eax
  419aba:	mov    esp,0xc638acf7
  419abf:	mov    bh,0xf0
  419ac1:	jge    0x419b00
  419ac3:	adc    bl,cl
  419ac5:	icebp  
  419ac6:	push   ds
  419ac7:	dec    eax
  419ac8:	xchg   esi,eax
  419ac9:	test   ecx,edi
  419acb:	dec    edi
  419acc:	push   edx
  419acd:	jbe    0x419a52
  419acf:	mov    al,0x93
  419ad1:	jecxz  0x419b27
  419ad3:	sbb    ah,BYTE PTR [esi+0x12]
  419ad6:	jbe    0x419b51
  419ad8:	inc    ecx
  419ad9:	cwde   
  419ada:	adc    ecx,DWORD PTR [edi-0xe]
  419add:	rcl    DWORD PTR [ebx+0x22],0xd
  419ae1:	sbb    esi,DWORD PTR [edx-0x64]
  419ae4:	mov    ah,0x83
  419ae6:	dec    eax
  419ae7:	fcom   DWORD PTR [eax+esi*1-0x55]
  419aeb:	cmp    DWORD PTR [esi*1-0x2c0ebe0],ebp
  419af2:	pop    DWORD PTR [ebx-0x75]
  419af5:	popa   
  419af6:	addr16 sahf 
  419af8:	jo     0x419b2d
  419afa:	mov    cl,0x41
  419afc:	jle    0x419b2a
  419afe:	mov    ds:0x74203fd9,eax
  419b03:	rcr    bl,cl
  419b05:	rcr    DWORD PTR [eax-0xf],0x54
  419b09:	jo     0x419ad1
  419b0b:	sbb    DWORD PTR [eax+0x1b],ebx
  419b0e:	loopne 0x419b6c
  419b10:	aad    0x79
  419b12:	sbb    BYTE PTR [edx],0x65
  419b15:	in     al,dx
  419b16:	scas   eax,DWORD PTR es:[edi]
  419b17:	push   edx
  419b18:	dec    esp
  419b19:	sar    BYTE PTR [eax],cl
  419b1b:	mov    edi,ebp
  419b1d:	outs   dx,BYTE PTR ds:[esi]
  419b1e:	fisubr WORD PTR [esi+0x12]
  419b21:	lods   al,BYTE PTR ds:[esi]
  419b22:	xchg   BYTE PTR [ebp+0x3c],ah
  419b25:	not    BYTE PTR [ecx-0x26b21782]
  419b2b:	xchg   DWORD PTR [esi+0xc],edx
  419b2e:	pandn  mm4,QWORD PTR ds:0x285a603f
  419b35:	push   ebx
  419b36:	pop    ecx
  419b37:	mov    eax,ds:0x9aa1ea04
  419b3c:	cwde   
  419b3d:	lahf   
  419b3e:	pop    ds
  419b3f:	mov    al,ds:0xe81f1b2c
  419b44:	cdq    
  419b45:	or     al,0x9b
  419b47:	xchg   edx,eax
  419b48:	cmp    eax,DWORD PTR [ebx]
  419b4a:	jle    0x419b7c
  419b4c:	mov    ds:0xfbd0d20,al
  419b51:	in     al,0xc5
  419b53:	add    dl,BYTE PTR [ebx]
  419b55:	popa   
  419b56:	sbb    ecx,eax
  419b58:	aas    
  419b59:	pop    esp
  419b5a:	iret   
  419b5b:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  419b5d:	add    DWORD PTR [ebp+0x5],0x58ca1f9
  419b64:	cmp    DWORD PTR [edi],edi
  419b66:	outs   dx,BYTE PTR ds:[esi]
  419b67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b68:	cdq    
  419b69:	pop    esi
  419b6a:	inc    edi
  419b6b:	jge    0x419ba5
  419b6d:	fbstp  TBYTE PTR [ecx-0x50]
  419b70:	sbb    al,BYTE PTR [edi+0x2d]
  419b73:	in     eax,dx
  419b74:	ds jmp 0x419bac
  419b77:	mov    esi,edi
  419b79:	xor    eax,0xd0ba6a2e
  419b7e:	cs stos DWORD PTR es:[edi],eax
  419b80:	inc    DWORD PTR [esp+ebp*1]
  419b83:	and    al,0xa9
  419b85:	daa    
  419b86:	adc    edx,DWORD PTR [ebp-0x5ed4ec14]
  419b8c:	cmp    BYTE PTR [edi],dh
  419b8e:	cld    
  419b8f:	jb     0x419b9c
  419b91:	mov    ebx,DWORD PTR [eax]
  419b93:	mov    ecx,0xc35395
  419b98:	mov    eax,0x7f6af7e7
  419b9d:	mov    ebp,0x5c760f81
  419ba2:	xor    al,0x97
  419ba4:	inc    ebp
  419ba5:	jmp    0xac3c:0x969ba70
  419bac:	lds    edi,FWORD PTR [ebx-0x23361925]
  419bb2:	aas    
  419bb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bb4:	push   edi
  419bb5:	rol    BYTE PTR [eax-0x26863776],1
  419bbb:	pop    edx
  419bbc:	ficomp DWORD PTR [esi-0x44]
  419bbf:	mov    ds:0x8da8eff1,eax
  419bc4:	lock jge 0x419bd6
  419bc7:	xchg   edx,esp
  419bc9:	mov    WORD PTR [edx],ss
  419bcb:	sbb    eax,esi
  419bcd:	gs pop ss
  419bcf:	jae    0x419bbb
  419bd1:	es push eax
  419bd3:	jle    0x419b98
  419bd5:	push   es
  419bd6:	mov    al,0x98
  419bd8:	jmp    0xbbd6:0xca4ae096
  419bdf:	adc    esi,eax
  419be1:	jmp    0xcb7285b1
  419be6:	xor    ebp,DWORD PTR ds:0x79dee8b0
  419bec:	shr    BYTE PTR [esi],0x23
  419bef:	pop    edi
  419bf0:	mov    eax,ds:0x37dfa2a3
  419bf5:	jnp    0x419ba7
  419bf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419bf8:	lahf   
  419bf9:	and    ah,BYTE PTR [edi]
  419bfb:	inc    edi
  419bfc:	test   DWORD PTR [ebp-0x5d78a5ea],ebp
  419c02:	in     eax,0xd8
  419c04:	mov    al,0x12
  419c06:	cli    
  419c07:	add    ecx,ecx
  419c09:	xor    al,BYTE PTR [edi+0x6a65c55a]
  419c0f:	cwde   
  419c10:	add    DWORD PTR [edi],0xffffffcd
  419c13:	xchg   edi,eax
  419c14:	inc    edi
  419c15:	mov    WORD PTR [ebp+0x75],?
  419c18:	test   BYTE PTR [edx+ebp*2-0xa9fdf9],ah
  419c1f:	cmp    DWORD PTR [esp+edi*1+0x59],0xffffff82
  419c24:	xchg   ebp,eax
  419c25:	mov    DWORD PTR [esp+ecx*2+0x6c229cb0],eax
  419c2c:	mov    DWORD PTR [ebx+0x55],esi
  419c2f:	fldl2e 
  419c31:	pop    esp
  419c32:	jl     0x419bf2
  419c34:	mov    esp,0xf9d1ae29
  419c39:	sub    edi,DWORD PTR [eax]
  419c3b:	gs jb  0x419c14
  419c3e:	int3   
  419c3f:	repz dec esp
  419c41:	add    edi,DWORD PTR [edi]
  419c43:	(bad)  
  419c44:	push   ss
  419c45:	jge    0x419c8f
  419c47:	push   esp
  419c48:	jns    0x419c8f
  419c4a:	add    eax,0xa5c6cb41
  419c4f:	sti    
  419c50:	xor    eax,0x1d1fb2de
  419c55:	mov    WORD PTR [eax],?
  419c57:	inc    ebx
  419c58:	(bad)  
  419c59:	int3   
  419c5a:	or     bh,BYTE PTR [edx]
  419c5c:	ror    bh,1
  419c5e:	(bad)  
  419c5f:	sub    eax,0x5ac97bf6
  419c64:	push   ecx
  419c65:	popa   
  419c66:	xchg   esp,eax
  419c67:	inc    edx
  419c68:	dec    ebx
  419c69:	ja     0x419ca2
  419c6b:	and    dh,BYTE PTR [edi+esi*1+0x45]
  419c6f:	rcr    dh,0xe3
  419c72:	iret   
  419c73:	push   esi
  419c74:	dec    edi
  419c75:	mov    esi,DWORD PTR [esi-0xee5302c]
  419c7b:	or     edi,ecx
  419c7d:	in     al,0x2a
  419c7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c80:	pusha  
  419c81:	pusha  
  419c82:	inc    ecx
  419c83:	mov    cl,0x25
  419c85:	or     al,dl
  419c87:	dec    edi
  419c88:	(bad)  [esp-0x4f]
  419c8c:	popa   
  419c8d:	pop    ebp
  419c8e:	out    0xf6,al
  419c90:	sub    ebx,esp
  419c92:	and    al,0xc
  419c94:	fwait
  419c95:	shl    BYTE PTR [eax],0xd0
  419c98:	push   0x102757e5
  419c9d:	adc    ch,BYTE PTR [ecx]
  419c9f:	mov    edx,0x12136013
  419ca4:	adc    eax,DWORD PTR [eax+0x4c02c0cd]
  419caa:	mov    al,0x94
  419cac:	sbb    al,0x11
  419cae:	retf   
  419caf:	pop    esp
  419cb0:	fs js  0x419c38
  419cb3:	sbb    edi,DWORD PTR [ebx+0x6f]
  419cb6:	retf   0xc692
  419cb9:	test   esp,esp
  419cbb:	jmp    0x4ccd:0xfad4439b
  419cc2:	ins    BYTE PTR es:[edi],dx
  419cc3:	fisttp DWORD PTR [ebx]
  419cc5:	js     0x419c9b
  419cc7:	add    al,0x97
  419cc9:	push   ss
  419cca:	and    eax,0x2494aad
  419ccf:	mov    eax,0xeb7e9888
  419cd4:	stos   BYTE PTR es:[edi],al
  419cd5:	test   al,0xf
  419cd7:	xor    al,0xbc
  419cd9:	push   0x3a
  419cdb:	mov    ch,0xf0
  419cdd:	sbb    BYTE PTR [ebx+0x6410ede9],dl
  419ce3:	sub    DWORD PTR [ebx+0x6205fadf],0xffffffb8
  419cea:	or     eax,0x590e8c
  419cef:	std    
  419cf0:	push   ebx
  419cf1:	je     0x419d2b
  419cf3:	add    esp,DWORD PTR [edx]
  419cf5:	and    DWORD PTR [ebp-0x2677f65c],esi
  419cfb:	dec    edi
  419cfc:	sub    al,0xa9
  419cfe:	inc    ecx
  419cff:	inc    DWORD PTR ds:0xa064bd3b
  419d05:	sbb    BYTE PTR ds:0xc23319d4,cl
  419d0b:	xor    eax,0xa798f00f
  419d10:	xor    eax,0x2d828ddd
  419d15:	cwde   
  419d16:	jmp    0x59ad4af
  419d1b:	aad    0xc7
  419d1d:	popa   
  419d1e:	pop    edi
  419d1f:	mov    BYTE PTR [ebp-0x6b],al
  419d22:	dec    edx
  419d23:	and    DWORD PTR [esi+0x215bfd4f],ecx
  419d29:	loopne 0x419d27
  419d2b:	in     eax,0x52
  419d2d:	repnz adc bl,dh
  419d30:	and    al,0x2e
  419d32:	push   ebx
  419d33:	xor    DWORD PTR [edi],esp
  419d35:	call   0xdf6cb048
  419d3a:	adc    cl,BYTE PTR [esi-0x24]
  419d3d:	mov    dh,0x45
  419d3f:	or     bh,ch
  419d41:	test   al,0xc4
  419d43:	stos   DWORD PTR es:[edi],eax
  419d44:	test   al,0x77
  419d46:	inc    edi
  419d47:	loopne 0x419dc5
  419d49:	mov    cs:0x941d488c,eax
  419d4f:	or     ebp,DWORD PTR [edx]
  419d51:	xchg   DWORD PTR ss:[edx+ebx*4],esp
  419d55:	aam    0x78
  419d57:	lahf   
  419d58:	stc    
  419d59:	mov    eax,ds:0x16f3b5f3
  419d5e:	mov    DWORD PTR [eax+0x4fb9e87d],edx
  419d64:	inc    ecx
  419d65:	repnz loope 0x419d99
  419d68:	aaa    
  419d69:	add    ah,BYTE PTR [edi+ecx*4]
  419d6c:	and    al,0x1d
  419d6e:	enter  0xe7b0,0x35
  419d72:	stos   BYTE PTR es:[edi],al
  419d73:	lods   al,BYTE PTR ds:[esi]
  419d74:	inc    esp
  419d75:	ret    0xe138
  419d78:	into   
  419d79:	int    0xec
  419d7b:	cdq    
  419d7c:	clc    
  419d7d:	enter  0x688c,0x55
  419d81:	cmp    bl,BYTE PTR [esi+0x2242831c]
  419d87:	out    dx,al
  419d88:	mov    dl,0xad
  419d8a:	scas   al,BYTE PTR es:[edi]
  419d8b:	jnp    0x419dc2
  419d8d:	aad    0x33
  419d8f:	and    al,0x26
  419d91:	ja     0x419df2
  419d93:	mov    ecx,0x8a0c5e8c
  419d98:	mov    al,ds:0x6fb3de7
  419d9d:	adc    eax,0xf846455c
  419da2:	scas   eax,DWORD PTR es:[edi]
  419da3:	sub    al,0x7f
  419da5:	pushf  
  419da6:	xchg   esp,eax
  419da7:	rcl    BYTE PTR [ecx+0x5c],cl
  419daa:	lahf   
  419dab:	or     eax,0x1e1112bc
  419db0:	dec    eax
  419db1:	test   BYTE PTR [eax+0x54],ah
  419db4:	and    bh,dl
  419db6:	or     ah,dh
  419db8:	mov    BYTE PTR [ecx],ch
  419dba:	cwde   
  419dbb:	adc    BYTE PTR [ecx+0x60a91ab],dl
  419dc1:	cld    
  419dc2:	lock pop ecx
  419dc4:	repnz xchg ebx,eax
  419dc6:	fs stc 
  419dc8:	push   edi
  419dc9:	paddb  mm1,QWORD PTR [eax+0x27]
  419dcd:	sbb    eax,0x5b090d33
  419dd2:	add    eax,0xcd967d83
  419dd7:	fs push es
  419dd9:	iret   
  419dda:	inc    edi
  419ddb:	adc    ebp,DWORD PTR [eax+0x2b51352a]
  419de1:	xchg   edx,eax
  419de2:	push   es
  419de3:	retw   0xf9a2
  419de7:	sub    DWORD PTR [edx-0x108fbcd9],0xfffffffc
  419dee:	mov    DWORD PTR [eax+0x7a],edx
  419df1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419df2:	stos   BYTE PTR es:[edi],al
  419df3:	jae    0x419d9b
  419df5:	outs   dx,BYTE PTR ds:[esi]
  419df6:	jno    0x419df8
  419df8:	push   0x48e946f8
  419dfd:	rol    ebx,cl
  419dff:	push   cs
  419e00:	bound  ecx,QWORD PTR [ebx+0x2c]
  419e03:	sbb    esi,edx
  419e05:	mov    ds:0x9dd0074c,al
  419e0a:	(bad)  
  419e0c:	jl     0x419dcb
  419e0e:	push   ss
  419e0f:	dec    edi
  419e10:	push   ds
  419e11:	and    BYTE PTR [ebx-0x27524e03],ah
  419e17:	xlat   BYTE PTR ds:[ebx]
  419e18:	xor    eax,0x172321da
  419e1d:	jns    0x419da9
  419e1f:	inc    ebp
  419e20:	push   es
  419e21:	or     esp,DWORD PTR [ebp-0x6e]
  419e24:	and    bl,BYTE PTR [ebx+eax*8]
  419e27:	sub    al,0x99
  419e29:	jns    0x419de1
  419e2b:	inc    eax
  419e2c:	sub    eax,0x63db7026
  419e31:	sbb    BYTE PTR [esi+0x9],0xe8
  419e35:	mov    eax,0x3f4bbbac
  419e3a:	add    eax,0x3915a0f3
  419e3f:	inc    ecx
  419e40:	outs   dx,DWORD PTR ds:[esi]
  419e41:	mov    ebx,0x5059e841
  419e46:	fmul   DWORD PTR [edi+0xb23d96f]
  419e4c:	mov    edi,0x8bd84d4a
  419e51:	inc    eax
  419e52:	mov    ebx,0xc1d47083
  419e57:	loop   0x419ed7
  419e59:	push   cs
  419e5a:	jne    0x419e7c
  419e5c:	jo     0x419edd
  419e5e:	add    DWORD PTR [ebp-0x58610747],esp
  419e64:	out    0x75,al
  419e66:	jo     0x419ed5
  419e68:	add    eax,0xae801d0c
  419e6d:	sti    
  419e6e:	sbb    edx,ebp
  419e70:	std    
  419e71:	sub    eax,0xd3b12b22
  419e76:	sbb    eax,0xc4a68a69
  419e7b:	xchg   DWORD PTR [esi-0xd94e2d9],ecx
  419e81:	push   cs
  419e82:	cli    
  419e83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e84:	rol    DWORD PTR [esi+ebp*1],1
  419e87:	cmp    eax,0x7ab950fc
  419e8c:	je     0x419eaf
  419e8e:	sub    BYTE PTR [edi+eiz*1-0x50],0xbd
  419e93:	outs   dx,DWORD PTR ds:[esi]
  419e94:	lods   eax,DWORD PTR ds:[esi]
  419e95:	in     eax,dx
  419e96:	jp     0x419e59
  419e98:	jp     0x419eb7
  419e9a:	(bad)  
  419e9b:	xchg   esi,eax
  419e9c:	lock daa 
  419e9e:	and    esp,edi
  419ea0:	pusha  
  419ea1:	fnstcw WORD PTR [ebp+0x4e]
  419ea4:	mov    ch,0xc1
  419ea6:	pop    esi
  419ea7:	jb     0x419e55
  419ea9:	jl     0x419ea0
  419eab:	xor    al,0x68
  419ead:	addr16 stc 
  419eaf:	(bad)  
  419eb0:	sti    
  419eb1:	nop
  419eb2:	add    DWORD PTR [esp+esi*1+0x776ccf20],0x1a
  419eba:	int3   
  419ebb:	push   edx
  419ebc:	push   ss
  419ebd:	bound  esi,QWORD PTR [edi+eax*8]
  419ec0:	popa   
  419ec1:	popf   
  419ec2:	shl    DWORD PTR [eax-0x42a2932b],cl
  419ec8:	sahf   
  419ec9:	mov    al,ds:0xb56fb33b
  419ece:	in     eax,0x9
  419ed0:	sbb    DWORD PTR [edi],esi
  419ed2:	into   
  419ed3:	cmp    dh,BYTE PTR [ebx+ebx*4+0x10]
  419ed7:	adc    ebp,DWORD PTR [ecx+0x3]
  419eda:	pop    esp
  419edb:	mov    esi,0xb925f197
  419ee0:	(bad)
  419ee3:	aas    
  419ee4:	loope  0x419ed2
  419ee6:	mov    ebx,fs
  419ee8:	xchg   ebx,eax
  419ee9:	or     eax,0xee23078b
  419eee:	dec    ebp
  419eef:	jl     0x419f47
  419ef1:	jmp    FWORD PTR cs:[edx-0x1c27407b]
  419ef8:	jne    0x419f38
  419efa:	pop    edi
  419efb:	jne    0x419f74
  419efd:	push   ecx
  419efe:	push   DWORD PTR [edx]
  419f00:	xchg   ebx,eax
  419f01:	stos   BYTE PTR es:[edi],al
  419f02:	push   0x9b29e6f
  419f07:	ret    
  419f08:	cmp    esi,DWORD PTR [eax-0x37]
  419f0b:	mov    ch,0x23
  419f0d:	jne    0x419e9c
  419f0f:	cmp    eax,DWORD PTR [edx-0x64df8c56]
  419f15:	mov    esp,0x314a6705
  419f1a:	cmp    eax,0xa089cc0a
  419f1f:	push   ebx
  419f20:	out    0xe,eax
  419f22:	lds    edx,FWORD PTR [edx]
  419f24:	fucom  st(6)
  419f26:	push   es
  419f27:	sub    eax,0x5e32f124
  419f2c:	mov    ebp,0xacc6d5da
  419f31:	dec    esp
  419f32:	inc    edi
  419f33:	pop    ebp
  419f34:	fmul   st(2),st
  419f36:	xor    al,0xeb
  419f38:	popa   
  419f39:	pop    ebp
  419f3a:	(bad)  
  419f3b:	mov    eax,0xa083fae
  419f40:	dec    esp
  419f41:	pop    eax
  419f42:	mov    ah,0x0
  419f44:	push   eax
  419f45:	push   0x3b
  419f47:	fstp   QWORD PTR [ecx+0x19c9f20a]
  419f4d:	or     eax,0x18b3400d
  419f52:	mov    edx,0x7f2ffc5
  419f57:	ins    BYTE PTR es:[edi],dx
  419f58:	stos   BYTE PTR es:[edi],al
  419f59:	fucomip st,st(6)
  419f5b:	shl    edi,0x9f
  419f5e:	das    
  419f5f:	and    cl,BYTE PTR [edi]
  419f61:	fyl2xp1 
  419f63:	push   ebp
  419f64:	pop    ss
  419f65:	jae    0x419f3c
  419f67:	leave  
  419f68:	push   esi
  419f69:	repnz and BYTE PTR [edx],bl
  419f6c:	mov    ebp,0x3210e978
  419f71:	ficom  WORD PTR [edx+0x5]
  419f74:	inc    ebp
  419f75:	nop
  419f76:	sub    dh,ch
  419f78:	jl     0x419f37
  419f7a:	std    
  419f7b:	daa    
  419f7c:	mov    ebx,0x5d7eaa6e
  419f81:	fld    DWORD PTR [ecx]
  419f83:	push   esp
  419f84:	lds    ebx,FWORD PTR [ecx]
  419f86:	stos   DWORD PTR es:[edi],eax
  419f87:	mov    eax,ds:0xff65b860
  419f8c:	push   ebx
  419f8d:	shr    DWORD PTR [edx],0xa4
  419f90:	xor    DWORD PTR [ebp+0x14b04a77],edi
  419f96:	iret   
  419f97:	push   ebx
  419f98:	loop   0x419f71
  419f9a:	popa   
  419f9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f9c:	xchg   BYTE PTR [edi-0x7e],bh
  419f9f:	fs mov bl,0x88
  419fa2:	rcr    DWORD PTR [edx-0x39],cl
  419fa5:	call   0xdc8ce5a7
  419faa:	mov    edx,0x2fd616e8
  419faf:	xor    DWORD PTR [eax-0x3b],eax
  419fb2:	test   eax,0x42b50017
  419fb7:	pop    esp
  419fb8:	and    bh,BYTE PTR [edx-0x3e77ce1f]
  419fbe:	test   al,0x39
  419fc0:	aas    
  419fc1:	inc    esi
  419fc2:	out    dx,eax
  419fc3:	fwait
  419fc4:	cs jecxz 0x419f7b
  419fc7:	cmp    eax,0x73a36a60
  419fcc:	sti    
  419fcd:	gs lahf 
  419fcf:	ins    DWORD PTR es:[edi],dx
  419fd0:	sbb    BYTE PTR [esi+ecx*2+0x30],bl
  419fd4:	jae    0x419f7f
  419fd6:	in     eax,dx
  419fd7:	sahf   
  419fd8:	push   ebx
  419fd9:	std    
  419fda:	test   al,0xc9
  419fdc:	jae    0x41a027
  419fde:	sar    DWORD PTR [eax],1
  419fe0:	jne    0x419fe7
  419fe2:	fimul  WORD PTR [ecx]
  419fe4:	xchg   esp,eax
  419fe5:	mov    ebp,0xb69efe0d
  419fea:	adc    al,0x55
  419fec:	xchg   esp,eax
  419fed:	cld    
  419fee:	jo     0x41a031
  419ff0:	es and al,0xd6
  419ff3:	pop    edx
  419ff4:	loope  0x419f7f
  419ff6:	hlt    
  419ff7:	cmp    DWORD PTR [edi+ecx*8-0x5a],ebp
  419ffb:	jo     0x41a06f
  419ffd:	stos   DWORD PTR es:[edi],eax
  419ffe:	mov    esp,eax
  41a000:	jbe    0x41a05e
  41a002:	sar    ecx,1
  41a004:	fdiv   DWORD PTR [esi-0x5c]
  41a007:	lahf   
  41a008:	xchg   BYTE PTR [esi-0x7cdc0a33],bl
  41a00e:	mov    bl,0x9b
  41a010:	clc    
  41a011:	imul   esi,ebp,0x4e
  41a014:	dec    eax
  41a015:	sti    
  41a016:	push   ds
  41a017:	jle    0x419fce
  41a019:	mov    bl,ah
  41a01b:	add    ah,bl
  41a01d:	sub    eax,0x2fa39672
  41a022:	mov    bh,0xa7
  41a024:	(bad)  
  41a025:	std    
  41a026:	push   ebx
  41a027:	in     eax,dx
  41a028:	push   ss
  41a029:	daa    
  41a02a:	retf   
  41a02b:	pop    ecx
  41a02c:	sbb    ebp,DWORD PTR ds:[edx]
  41a02f:	mov    al,ds:0xc8201e59
  41a034:	ins    BYTE PTR es:[edi],dx
  41a035:	ins    DWORD PTR es:[edi],dx
  41a036:	sub    DWORD PTR [edx-0x48],eax
  41a039:	scas   al,BYTE PTR es:[edi]
  41a03a:	mov    dh,0xf5
  41a03c:	dec    edx
  41a03d:	cmp    eax,0x5ca759f2
  41a042:	fwait
  41a043:	test   eax,0x81d8cf85
  41a048:	xlat   BYTE PTR ds:[ebx]
  41a049:	push   es
  41a04a:	adc    dl,ah
  41a04c:	pop    ecx
  41a04d:	mul    ah
  41a04f:	xchg   ebp,eax
  41a050:	sbb    DWORD PTR [ebx+edx*8-0x23ad770b],0x71bd66cc
  41a05b:	out    0x26,al
  41a05d:	adc    ebx,DWORD PTR [ebp+0x6031cc97]
  41a063:	pop    DWORD PTR [esi]
  41a065:	dec    ebp
  41a066:	ret    
  41a067:	in     al,0x65
  41a069:	mov    bl,0xf4
  41a06b:	icebp  
  41a06c:	xchg   esp,eax
  41a06d:	std    
  41a06e:	popa   
  41a06f:	jl     0x41a0af
  41a071:	mov    esp,es
  41a073:	sub    DWORD PTR fs:0x23153f5d,esp
  41a07a:	repnz repz cmp al,0x18
  41a07e:	neg    BYTE PTR [edx+edx*4-0x46]
  41a082:	pop    es
  41a083:	mov    ecx,0x2ea7f6e6
  41a088:	fbld   TBYTE PTR [esp+edx*4+0xb2c950f]
  41a08f:	repz jns 0x41a0e8
  41a092:	lods   al,BYTE PTR ds:[esi]
  41a093:	les    esp,FWORD PTR [esi]
  41a095:	and    DWORD PTR [ebx-0x80],0x67
  41a099:	ins    BYTE PTR es:[edi],dx
  41a09a:	or     al,0x4
  41a09c:	add    eax,0xe3443a87
  41a0a1:	or     BYTE PTR [edi+0x6a],ch
  41a0a4:	cwde   
  41a0a5:	mov    eax,0xed39b79
  41a0aa:	jo     0x41a033
  41a0ac:	jmp    0x41a080
  41a0ae:	sbb    DWORD PTR [edi],ebp
  41a0b0:	or     edx,DWORD PTR [ecx+0x53125243]
  41a0b6:	(bad)  
  41a0b7:	sti    
  41a0b8:	das    
  41a0b9:	lahf   
  41a0ba:	(bad)  
  41a0bc:	push   cs
  41a0bd:	call   0x5d5b:0x1da82630
  41a0c4:	(bad)  
  41a0c5:	(bad)  
  41a0c6:	data16 jmp 0x41a0dc
  41a0c9:	call   0xcd900ab
  41a0ce:	inc    DWORD PTR [edi-0x11]
  41a0d1:	lods   al,BYTE PTR ds:[esi]
  41a0d2:	cmc    
  41a0d3:	mov    cl,0xbb
  41a0d5:	dec    eax
  41a0d6:	das    
  41a0d7:	scas   al,BYTE PTR es:[edi]
  41a0d8:	mov    ebp,0x5b66f8a9
  41a0dd:	lds    esi,FWORD PTR [ebp+edx*4-0x51]
  41a0e1:	or     eax,0x62acd139
  41a0e6:	pop    esi
  41a0e7:	fwait
  41a0e8:	mov    edx,0x130fda70
  41a0ed:	dec    ebx
  41a0ef:	mov    esp,0x2d65750
  41a0f4:	sbb    dl,al
  41a0f6:	mov    ch,0xa6
  41a0f8:	jle    0x41a08e
  41a0fa:	mov    eax,ds:0xf453f751
  41a0ff:	and    dh,BYTE PTR [edx]
  41a101:	(bad)  
  41a102:	xchg   edi,eax
  41a103:	in     al,0x82
  41a105:	pop    ecx
  41a106:	invd   
  41a108:	pop    ecx
  41a109:	xchg   ebp,eax
  41a10a:	or     DWORD PTR [edi-0xd],ebx
  41a10d:	adc    al,0x28
  41a10f:	test   DWORD PTR [eax*8-0x15a3d3bb],eax
  41a116:	pusha  
  41a117:	jo     0x41a0d3
  41a119:	push   ss
  41a11a:	sbb    BYTE PTR [edi],dh
  41a11c:	fwait
  41a11d:	cli    
  41a11e:	xchg   BYTE PTR [edi+0x5c3bb638],ch
  41a124:	mov    ch,0xbc
  41a126:	outs   dx,BYTE PTR ds:[esi]
  41a127:	mov    dl,0x4f
  41a129:	jg     0x41a0e6
  41a12b:	(bad)  
  41a12c:	add    eax,0xd03cbb17
  41a131:	push   ebx
  41a132:	test   bh,dl
  41a134:	or     BYTE PTR [ebx],bh
  41a136:	ret    0xafc6
  41a139:	sahf   
  41a13a:	shr    BYTE PTR [ebp-0x6bf62745],0xc6
  41a141:	pop    ds
  41a142:	and    DWORD PTR [ebp+0x77],ecx
  41a145:	pop    edi
  41a146:	mov    dl,0x3
  41a148:	mov    edx,DWORD PTR [eax-0x5d]
  41a14b:	fmulp  st(7),st
  41a14d:	mov    eax,0x4c320454
  41a152:	jmp    0xdcef8a3d
  41a157:	not    DWORD PTR [edi+edi*8+0x9f2dff1]
  41a15e:	jbe    0x41a0e7
  41a160:	retf   0x26e1
  41a163:	pop    ecx
  41a164:	push   edx
  41a165:	popa   
  41a166:	mov    bl,0xf8
  41a168:	dec    ebp
  41a169:	add    cl,BYTE PTR [edx-0x65]
  41a16c:	jle    0x41a1d9
  41a16e:	xor    BYTE PTR [ecx+eiz*4-0xe930c85],0x83
  41a176:	dec    edi
  41a177:	js     0x41a171
  41a179:	mov    ch,0x95
  41a17b:	xor    ebp,DWORD PTR [edx+0x1026c788]
  41a181:	test   BYTE PTR [edi*8+0x940f9f],cl
  41a188:	test   al,0x11
  41a18a:	jbe    0x41a1e8
  41a18c:	xor    BYTE PTR ss:[eax],ah
  41a18f:	pusha  
  41a190:	jmp    0xce67:0x38a8e095
  41a197:	inc    eax
  41a198:	or     BYTE PTR [ebx+0x65783cb3],0xea
  41a19f:	push   ecx
  41a1a0:	jl     0x41a202
  41a1a2:	jecxz  0x41a1da
  41a1a4:	pushf  
  41a1a5:	jae    0x41a181
  41a1a7:	out    0xa2,eax
  41a1a9:	mov    bl,0xc6
  41a1ab:	lods   eax,DWORD PTR ds:[esi]
  41a1ac:	std    
  41a1ad:	cmc    
  41a1ae:	xor    BYTE PTR [ebx],0x5b
  41a1b1:	push   es
  41a1b2:	sub    eax,0x995b2c23
  41a1b7:	fs ds das 
  41a1ba:	ss mov edx,0x6a4c061d
  41a1c0:	xchg   ebp,eax
  41a1c1:	arpl   ax,bp
  41a1c3:	jbe    0x41a243
  41a1c5:	mov    edx,0xd591a1ea
  41a1ca:	push   ss
  41a1cb:	data16 xor dh,BYTE PTR [ecx+eiz*8+0x6a]
  41a1d0:	jl     0x41a1ce
  41a1d2:	repz imul edx,DWORD PTR [ecx+0x77],0xfffffff3
  41a1d7:	xor    dh,BYTE PTR [esi-0x282bae96]
  41a1dd:	mov    ebx,0x18710b49
  41a1e2:	mov    ebx,0x2eb302f7
  41a1e7:	retf   
  41a1e8:	inc    eax
  41a1e9:	mov    al,ds:0xea30e25c
  41a1ee:	xor    BYTE PTR [edx-0x6b4be12],bl
  41a1f4:	jg     0x41a263
  41a1f6:	std    
  41a1f7:	mov    esp,0x1da8777b
  41a1fc:	and    eax,0xe01cc701
  41a201:	mov    cs,WORD PTR [ecx]
  41a203:	pop    ss
  41a204:	sub    ah,BYTE PTR [esi+0x19d3f3fa]
  41a20a:	push   0x59
  41a20c:	xchg   DWORD PTR [ecx+0x36],edx
  41a20f:	push   0xda7895f6
  41a214:	adc    al,0xbc
  41a216:	xchg   BYTE PTR [ebp+0x7adf3ccc],al
  41a21c:	xor    eax,0xefa8565b
  41a221:	xor    al,0xa7
  41a223:	into   
  41a224:	cmp    BYTE PTR [ebx-0x142a4091],0x19
  41a22b:	pop    edi
  41a22c:	shl    esi,1
  41a22e:	cli    
  41a22f:	es ins BYTE PTR es:[edi],dx
  41a231:	les    ebx,FWORD PTR [edi+0x7f3b491d]
  41a237:	add    BYTE PTR [edi],cl
  41a239:	fild   QWORD PTR [esi+0x75]
  41a23c:	int3   
  41a23d:	mov    ds:0xc84f2dc8,al
  41a242:	div    DWORD PTR [esi-0x8]
  41a245:	sbb    al,0xe2
  41a247:	(bad)  
  41a249:	cmp    DWORD PTR [edi-0x2b6c9b35],0x72
  41a250:	jg     0x41a2af
  41a252:	adc    bl,bh
  41a254:	mov    ?,edx
  41a256:	xchg   ecx,eax
  41a257:	lahf   
  41a258:	and    al,0xfc
  41a25a:	xchg   esp,eax
  41a25b:	jne    0x41a2a8
  41a25d:	and    esp,ebx
  41a25f:	add    eax,0xd564f220
  41a264:	test   ecx,eax
  41a266:	loop   0x41a1f3
  41a268:	ins    BYTE PTR es:[edi],dx
  41a269:	and    al,0xa7
  41a26b:	gs mov ah,0x4f
  41a26e:	inc    ebx
  41a26f:	xor    DWORD PTR [ecx+0x3d],ebp
  41a272:	jmp    0x34687bc9
  41a277:	sahf   
  41a278:	ja     0x41a2e0
  41a27a:	out    0x4c,al
  41a27c:	cs jnp 0x41a2ae
  41a27f:	jno    0x41a2c7
  41a281:	sub    ah,cl
  41a283:	push   ds
  41a284:	mov    ecx,ebp
  41a286:	sbb    ebx,DWORD PTR [ecx+0x6e3937dd]
  41a28c:	push   0x9
  41a28e:	fld    QWORD PTR [edi-0x5c]
  41a291:	push   edi
  41a292:	or     dh,BYTE PTR [edx+0x26]
  41a295:	(bad)  
  41a296:	push   ebp
  41a297:	popf   
  41a298:	xchg   ebp,eax
  41a299:	push   0x32
  41a29b:	and    BYTE PTR [edi+0x15436eb0],dh
  41a2a1:	into   
  41a2a2:	lods   eax,DWORD PTR ds:[esi]
  41a2a3:	addr16 inc dh
  41a2a6:	popf   
  41a2a7:	retf   0x5cff
  41a2aa:	fstp   TBYTE PTR [esi-0x58]
  41a2ad:	sub    al,0x44
  41a2af:	inc    edx
  41a2b0:	dec    ebp
  41a2b1:	out    0x23,eax
  41a2b3:	sbb    ch,ah
  41a2b5:	jl     0x41a31a
  41a2b7:	rcr    DWORD PTR [ecx+0x4ddeddb4],0x6b
  41a2be:	imul   BYTE PTR [edi]
  41a2c0:	or     DWORD PTR [ebp+0x4e3ce84d],eax
  41a2c6:	f2xm1  
  41a2c8:	mov    ds:0x709024d1,eax
  41a2cd:	sbb    al,0xa7
  41a2cf:	bswap  esp
  41a2d1:	xor    eax,0x38181c00
  41a2d6:	out    0x8b,al
  41a2d8:	jae    0x41a27c
  41a2da:	cmp    bh,BYTE PTR [edx]
  41a2dc:	test   DWORD PTR [esi+0x4be2e66f],eax
  41a2e2:	jecxz  0x41a2bd
  41a2e4:	xchg   edx,eax
  41a2e5:	inc    eax
  41a2e6:	xlat   BYTE PTR ds:[ebx]
  41a2e7:	pop    ecx
  41a2e8:	sbb    eax,0x6ae5c73a
  41a2ed:	test   BYTE PTR [ecx-0x12aa044],ah
  41a2f3:	test   ebp,ebp
  41a2f5:	mov    al,ds:0x30c19a78
  41a2fa:	lds    ebx,FWORD PTR [ecx-0x38]
  41a2fd:	xlat   BYTE PTR ds:[ebx]
  41a2fe:	or     BYTE PTR [edx+0x1],bh
  41a301:	push   esp
  41a302:	sub    DWORD PTR [edx+0x6ca0e94b],ecx
  41a308:	in     eax,0xaa
  41a30a:	in     al,0xb0
  41a30c:	cmp    dl,cl
  41a30e:	xchg   edi,eax
  41a30f:	xor    bl,BYTE PTR [eax+eiz*4-0x7a565d19]
  41a316:	mov    ah,0x4d
  41a318:	mov    cl,ch
  41a31a:	lahf   
  41a31b:	sub    DWORD PTR [esi],edx
  41a31d:	add    DWORD PTR [edi+0x5b701bb3],esp
  41a323:	xchg   BYTE PTR [ebx+eax*2+0x5e863d34],dh
  41a32a:	cwde   
  41a32b:	xor    eax,0x38e9f157
  41a330:	jb     0x41a315
  41a332:	mov    ds:0xab2c1882,eax
  41a337:	push   edx
  41a338:	add    ebx,DWORD PTR [edx-0x752ef705]
  41a33e:	mov    al,ds:0xfe7ee1e
  41a343:	or     esi,ecx
  41a345:	inc    ecx
  41a346:	jno    0x41a39e
  41a348:	shl    ebp,0x3b
  41a34b:	and    bl,BYTE PTR [edi-0x69ee6f6b]
  41a351:	pop    esi
  41a352:	in     al,0x86
  41a354:	and    al,dl
  41a356:	cmp    DWORD PTR [ecx+0x0],eax
  41a359:	xor    eax,0x1eafa6ea
  41a35e:	int3   
  41a35f:	inc    ebp
  41a360:	push   ds
  41a361:	sar    DWORD PTR [ebp+eiz*8+0x3c14fdd5],1
  41a368:	ret    0xfa29
  41a36b:	fcmovb st,st(3)
  41a36d:	ret    
  41a36e:	pop    ecx
  41a36f:	pop    ebx
  41a370:	xchg   ecx,eax
  41a371:	mov    edx,0x4f7a3f6
  41a376:	fs stos DWORD PTR es:[edi],eax
  41a378:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a379:	ins    DWORD PTR es:[edi],dx
  41a37a:	dec    ebx
  41a37b:	jns    0x41a3b3
  41a37d:	xchg   edi,eax
  41a37e:	scas   eax,DWORD PTR es:[edi]
  41a37f:	adc    ch,cl
  41a381:	inc    ebx
  41a382:	push   es
  41a383:	inc    ebp
  41a384:	adc    bl,ah
  41a386:	ror    ebx,cl
  41a388:	xor    dh,BYTE PTR [eax+0x7a024a7d]
  41a38e:	dec    edi
  41a38f:	jb     0x41a3d1
  41a391:	pop    ebp
  41a392:	xchg   esp,eax
  41a393:	rep lods eax,DWORD PTR ds:[esi]
  41a395:	cdq    
  41a396:	pop    eax
  41a397:	test   BYTE PTR [ecx],0xef
  41a39a:	inc    ebx
  41a39b:	xor    bh,BYTE PTR [esi]
  41a39d:	adc    eax,0xc72dc356
  41a3a2:	test   DWORD PTR ss:[ecx+0x57],edi
  41a3a6:	mov    al,ds:0x549409b
  41a3ab:	int3   
  41a3ac:	dec    eax
  41a3ad:	and    bl,ah
  41a3af:	dec    ebx
  41a3b0:	hlt    
  41a3b1:	mov    eax,ds:0xbd583aed
  41a3b6:	fmul   QWORD PTR [edx]
  41a3b8:	add    DWORD PTR [edx-0x388f35a9],0xeec79630
  41a3c2:	xchg   edx,eax
  41a3c3:	ins    DWORD PTR es:[edi],dx
  41a3c4:	(bad)
  41a3c7:	xor    esp,DWORD PTR [edi+0x1b]
  41a3ca:	gs push cs
  41a3cc:	fs int3 
  41a3ce:	mov    ah,0xcf
  41a3d0:	lods   eax,DWORD PTR ds:[esi]
  41a3d1:	retf   
  41a3d2:	out    dx,al
  41a3d3:	mov    eax,ds:0x79f73bdc
  41a3d8:	jb     0x41a406
  41a3da:	xor    ecx,esp
  41a3dc:	sub    dl,cl
  41a3de:	out    0x2c,al
  41a3e0:	aas    
  41a3e1:	xchg   edx,eax
  41a3e2:	dec    edi
  41a3e3:	sar    DWORD PTR ds:0x9a577583,1
  41a3e9:	xor    BYTE PTR [ebx+eiz*4],cl
  41a3ec:	stos   DWORD PTR es:[edi],eax
  41a3ed:	push   edx
  41a3ee:	jl     0x41a3b6
  41a3f0:	ja     0x41a3cb
  41a3f2:	mov    ebp,0x7700dce6
  41a3f7:	outs   dx,DWORD PTR ds:[esi]
  41a3f8:	inc    ebx
  41a3f9:	test   al,0xf7
  41a3fb:	fcom   DWORD PTR [edi+ebx*8+0x4685ca9d]
  41a402:	dec    edi
  41a403:	mov    dl,0x8c
  41a405:	xchg   esi,eax
  41a406:	fld    DWORD PTR [ecx+0x2087e9a3]
  41a40c:	or     DWORD PTR [ebx+edx*1],edx
  41a40f:	(bad)  
  41a410:	xchg   ebx,eax
  41a411:	in     eax,0x2a
  41a413:	push   edi
  41a414:	outs   dx,BYTE PTR ds:[esi]
  41a415:	mov    cl,0x56
  41a417:	mov    ebx,0x33138bb2
  41a41c:	sbb    DWORD PTR [ecx-0x6c963818],edx
  41a422:	jle    0x41a3af
  41a424:	jns    0x41a432
  41a426:	add    eax,0x161beca1
  41a42b:	int    0x20
  41a42d:	pop    ss
  41a42e:	mov    esi,0x92ff9a0f
  41a433:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a434:	test   edi,edx
  41a436:	push   0xd090622
  41a43b:	jo     0x41a3bd
  41a43d:	fist   WORD PTR [edi+0x79]
  41a440:	enter  0xac,0x73
  41a444:	aad    0xe7
  41a446:	mov    esp,0x305f4ea1
  41a44b:	push   edx
  41a44c:	xchg   ebx,eax
  41a44d:	fild   QWORD PTR [ebx+eiz*2-0x776a595d]
  41a454:	test   BYTE PTR [ecx-0xa],0x2a
  41a458:	pop    ebp
  41a459:	(bad)  
  41a45b:	mov    eax,0x72dd8237
  41a460:	(bad)  
  41a461:	ror    DWORD PTR es:[edi],1
  41a464:	xchg   BYTE PTR [esi-0x574200bf],al
  41a46a:	mov    dl,0x5c
  41a46c:	adc    ecx,DWORD PTR [eax+edx*1-0x8]
  41a470:	cmp    DWORD PTR [eax-0x28ac1683],0x9165328a
  41a47a:	shr    ebx,cl
  41a47c:	mov    eax,ds:0x20c7e4ef
  41a481:	cs or  ebp,esp
  41a484:	pop    esp
  41a485:	xchg   edi,eax
  41a486:	jnp    0x41a42a
  41a488:	inc    ebp
  41a489:	enter  0xcded,0xd3
  41a48d:	dec    ebp
  41a48e:	clc    
  41a48f:	(bad)  
  41a491:	inc    ecx
  41a492:	div    edx
  41a494:	adc    al,BYTE PTR [ebx+ecx*2-0x586ac897]
  41a49b:	daa    
  41a49c:	stc    
  41a49d:	push   edx
  41a49e:	movups xmm5,XMMWORD PTR [ecx]
  41a4a1:	in     eax,0x59
  41a4a3:	repnz push edx
  41a4a5:	lods   al,BYTE PTR ds:[esi]
  41a4a6:	mov    eax,0x8e3ad8e4
  41a4ab:	mov    esi,0x280374c6
  41a4b0:	sub    eax,0x650611ae
  41a4b5:	ins    DWORD PTR es:[edi],dx
  41a4b6:	out    0x1e,eax
  41a4b8:	inc    edx
  41a4b9:	cli    
  41a4ba:	dec    eax
  41a4bb:	aaa    
  41a4bc:	je     0x41a525
  41a4be:	pop    eax
  41a4bf:	xchg   ebp,eax
  41a4c0:	icebp  
  41a4c1:	pop    es
  41a4c2:	sub    eax,DWORD PTR [ecx]
  41a4c4:	pop    ecx
  41a4c5:	in     eax,dx
  41a4c6:	jg     0x41a464
  41a4c8:	(bad)  
  41a4c9:	jp     0x41a485
  41a4cb:	adc    ecx,eax
  41a4cd:	add    cl,ch
  41a4cf:	out    0x39,eax
  41a4d1:	jae    0x41a54f
  41a4d3:	jns    0x41a45f
  41a4d5:	jne    0x41a548
  41a4d7:	push   ebp
  41a4d8:	mov    ds:0x3ae6682e,al
  41a4dd:	xchg   ebx,eax
  41a4de:	fld    TBYTE PTR [edi]
  41a4e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4e1:	or     DWORD PTR [esi],esi
  41a4e3:	pop    esp
  41a4e4:	bnd je 0x41a47c
  41a4e7:	cdq    
  41a4e8:	lea    eax,[ebx-0x2cf55a54]
  41a4ee:	xor    DWORD PTR [eax],ecx
  41a4f0:	lea    edx,[ebp-0x2c]
  41a4f3:	mov    ch,0x4
  41a4f5:	jmp    0xde8d9dc4
  41a4fa:	jno    0x41a4c9
  41a4fc:	push   es
  41a4fd:	(bad)  
  41a4fe:	cs pop esi
  41a500:	test   eax,0x97eba61d
  41a505:	pop    eax
  41a506:	sub    DWORD PTR [ebp-0x1d743ad1],eax
  41a50c:	vminpd ymm2,ymm1,YMMWORD PTR ds:0x8bba6b90
  41a514:	addr16 loop 0x41a58f
  41a517:	inc    esi
  41a518:	sub    eax,0x79d5e828
  41a51d:	into   
  41a51e:	xor    eax,0x957b1963
  41a523:	(bad)  [ecx-0x5637e939]
  41a529:	stos   DWORD PTR es:[edi],eax
  41a52a:	mov    al,ds:0xcae56434
  41a52f:	retf   
  41a530:	lea    esi,[edi-0x78536237]
  41a536:	and    eax,0xf991a76c
  41a53b:	sbb    DWORD PTR [edx],eax
  41a53d:	mov    DWORD PTR [ebx],ecx
  41a53f:	(bad)  
  41a540:	jb     0x41a5a6
  41a542:	add    ah,bl
  41a544:	sbb    DWORD PTR [esi],esi
  41a546:	iret   
  41a547:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a548:	push   edi
  41a549:	pop    eax
  41a54a:	add    al,0x12
  41a54c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a54d:	mov    al,ds:0x250105d3
  41a552:	repnz and eax,eax
  41a555:	pop    es
  41a556:	mov    gs,WORD PTR [ebx]
  41a558:	xor    eax,0x8898348
  41a55d:	pop    edi
  41a55e:	jmp    0x41a4f6
  41a560:	not    DWORD PTR [ebx+0x512379a3]
  41a566:	ror    ecx,1
  41a568:	ror    BYTE PTR [eax+0x62],1
  41a56b:	jg     0x41a595
  41a56d:	push   es
  41a56e:	jae    0x41a530
  41a570:	sar    BYTE PTR ds:[ebx-0x66d227b4],0x69
  41a578:	lock jb 0x41a583
  41a57b:	out    0x2d,al
  41a57d:	sub    dl,dh
  41a57f:	outs   dx,BYTE PTR ds:[esi]
  41a580:	push   cs
  41a581:	push   ebx
  41a582:	popa   
  41a583:	sbb    edi,edi
  41a585:	push   edx
  41a586:	pop    esi
  41a587:	mov    al,0x6c
  41a589:	add    BYTE PTR [esi+0x7d],dh
  41a58c:	lea    ebp,[edi]
  41a58e:	call   0x1fc2:0xaa4dc530
  41a595:	push   es
  41a596:	cmp    eax,0xe467f47c
  41a59b:	adc    al,0xfa
  41a59d:	call   0xc559:0x2c096e4a
  41a5a4:	jo     0x41a5a0
  41a5a6:	popa   
  41a5a7:	jle    0x41a53d
  41a5a9:	or     DWORD PTR fs:[edi-0x24],edx
  41a5ad:	mov    eax,ds:0x8173a718
  41a5b2:	mov    ds:0x9412489a,al
  41a5b7:	adc    al,0xdd
  41a5b9:	jle    0x41a5e4
  41a5bb:	fbld   TBYTE PTR [ebx+0xb778cb6]
  41a5c1:	out    0x2b,al
  41a5c3:	mov    ebx,0x233ad8f3
  41a5c8:	inc    edi
  41a5c9:	das    
  41a5ca:	xchg   edx,eax
  41a5cb:	jno    0x41a649
  41a5cd:	in     eax,0xc8
  41a5cf:	out    dx,eax
  41a5d0:	loope  0x41a649
  41a5d2:	loope  0x41a5e2
  41a5d4:	js     0x41a5f7
  41a5d6:	jg     0x41a586
  41a5d8:	dec    ecx
  41a5d9:	or     eax,0x11fe1449
  41a5de:	in     eax,dx
  41a5df:	cmc    
  41a5e0:	adc    dl,BYTE PTR [edi]
  41a5e2:	mov    cl,0x46
  41a5e4:	sub    ecx,DWORD PTR [eax+ecx*2+0x1ccd6c88]
  41a5eb:	rcl    bh,cl
  41a5ed:	lds    esi,FWORD PTR [edi+0x6e]
  41a5f0:	pop    ss
  41a5f1:	stos   BYTE PTR es:[edi],al
  41a5f2:	cmp    eax,0x28fe72a
  41a5f7:	jae    0x41a66e
  41a5f9:	sahf   
  41a5fa:	pop    eax
  41a5fb:	xchg   ecx,eax
  41a5fc:	sar    BYTE PTR [eax],0xaa
  41a5ff:	dec    eax
  41a600:	std    
  41a601:	mov    al,0x77
  41a603:	adc    ch,0x6
  41a606:	dec    ebp
  41a607:	mov    ebp,0x17c48ddf
  41a60c:	test   eax,0x6d19a93b
  41a611:	add    al,0xec
  41a613:	pop    eax
  41a614:	sub    ch,ch
  41a616:	mov    ds:0x2b521231,eax
  41a61b:	inc    BYTE PTR [ecx+0x225110e]
  41a621:	add    DWORD PTR ds:0xd52085fd,edi
  41a627:	push   es
  41a628:	hlt    
  41a629:	sbb    al,0x7f
  41a62b:	test   al,0xfa
  41a62d:	ja     0x41a672
  41a62f:	xor    DWORD PTR [edx],edi
  41a631:	adc    eax,0x20f5a227
  41a636:	int    0xd5
  41a638:	mov    bh,0x26
  41a63a:	mul    DWORD PTR [edi-0xf]
  41a63d:	dec    esi
  41a63e:	mov    al,cl
  41a640:	stc    
  41a641:	daa    
  41a642:	or     DWORD PTR [eax],esi
  41a644:	arpl   WORD PTR [edx-0x25fad6a3],bp
  41a64a:	shl    DWORD PTR [ecx],0x6e
  41a64d:	adc    al,0x55
  41a64f:	adc    eax,0xce12d1ac
  41a654:	adc    al,0xf
  41a656:	and    DWORD PTR [esi-0x3cbea918],edi
  41a65c:	pop    eax
  41a65d:	pusha  
  41a65e:	fs pop ss
  41a660:	jge    0x41a647
  41a662:	xchg   esp,eax
  41a663:	jo     0x41a649
  41a665:	mov    eax,ds:0x7886f53c
  41a66a:	mov    ds:0x9b155608,eax
  41a66f:	ss sar esi,0x12
  41a673:	push   cs
  41a674:	cmp    ax,0x9f26
  41a678:	cdq    
  41a679:	std    
  41a67a:	fisttp DWORD PTR [eax+0x78555a40]
  41a680:	outs   dx,BYTE PTR ds:[esi]
  41a681:	jg     0x41a650
  41a683:	push   edi
  41a684:	loope  0x41a649
  41a686:	jno    0x41a6d7
  41a688:	out    0x62,al
  41a68a:	ja     0x41a672
  41a68c:	sub    eax,0x56a2261b
  41a691:	jg     0x41a646
  41a693:	push   0xffffffcb
  41a695:	push   ecx
  41a696:	pop    ebx
  41a697:	test   ch,0x86
  41a69a:	adc    DWORD PTR [eax+0x5f228a5],0xab5547f7
  41a6a4:	xchg   edx,eax
  41a6a5:	(bad)  
  41a6a6:	iret   
  41a6a7:	or     esp,DWORD PTR [esi-0x191dd8e4]
  41a6ad:	or     DWORD PTR [esi-0x766914b9],edx
  41a6b3:	adc    eax,0xe4b50fa0
  41a6b8:	add    eax,0xcb5c8c98
  41a6bd:	inc    edx
  41a6be:	sub    DWORD PTR [ebx-0x78e4169c],0x16b6da94
  41a6c8:	and    DWORD PTR [edx+0x7406840e],ecx
  41a6ce:	ret    0x463
  41a6d1:	ret    
  41a6d2:	lahf   
  41a6d3:	ror    BYTE PTR [ecx+0x2f],0x4e
  41a6d7:	(bad)  
  41a6d8:	adc    DWORD PTR [ecx+ecx*4+0x6a],esp
  41a6dc:	push   es
  41a6dd:	repz repnz xor eax,0x107399da
  41a6e4:	push   esi
  41a6e5:	mov    ds:0x516d5180,al
  41a6ea:	iret   
  41a6eb:	adc    BYTE PTR [esp+eax*1-0xa],0xec
  41a6f0:	cmp    dl,dl
  41a6f2:	popf   
  41a6f3:	cmp    al,0x6
  41a6f5:	add    al,0xc6
  41a6f7:	iret   
  41a6f8:	jae    0x41a72e
  41a6fa:	lds    ecx,FWORD PTR [esi-0x5d7bd59a]
  41a700:	es mov ds:0x458d869d,al
  41a707:	mov    ds:0x3a17f8ec,eax
  41a70c:	or     ah,BYTE PTR [ecx-0x49]
  41a70f:	xor    esi,DWORD PTR [edx]
  41a711:	and    BYTE PTR [ebx],bh
  41a713:	(bad)
  41a716:	dec    edi
  41a717:	jge    0x41a6d8
  41a719:	mov    DWORD PTR [edi+0x2f],eax
  41a71c:	xchg   edx,eax
  41a71d:	call   0x7e7b1440
  41a722:	sbb    eax,0x4d88f953
  41a727:	pop    edx
  41a728:	jp     0x41a6c2
  41a72a:	popf   
  41a72b:	cmp    DWORD PTR [ebx+0x6b],0x910c122b
  41a732:	fcom   QWORD PTR ds:[ebx-0x5]
  41a736:	ret    0xecb6
  41a739:	int    0xbe
  41a73b:	into   
  41a73c:	daa    
  41a73d:	neg    DWORD PTR [ebx+edx*8+0x5c]
  41a741:	sbb    al,0xf
  41a743:	push   0xbc14c362
  41a748:	adc    esi,edi
  41a74a:	outs   dx,BYTE PTR ds:[esi]
  41a74b:	sbb    DWORD PTR [ebx-0x60],esi
  41a74e:	hlt    
  41a74f:	inc    ebx
  41a750:	rol    DWORD PTR [ecx],cl
  41a752:	lds    ebx,FWORD PTR [ecx+0x62]
  41a755:	pop    edx
  41a756:	nop
  41a757:	add    bl,cl
  41a759:	pop    esp
  41a75a:	push   edx
  41a75b:	dec    esi
  41a75c:	and    al,0x11
  41a75e:	push   esi
  41a75f:	test   BYTE PTR [ebx+0x5a],cl
  41a762:	jmp    DWORD PTR [edi+0x73]
  41a765:	xchg   edx,eax
  41a766:	std    
  41a767:	and    BYTE PTR [ebx-0x74f06119],0x34
  41a76e:	xchg   esi,eax
  41a76f:	or     eax,DWORD PTR [esi]
  41a771:	pop    edi
  41a772:	and    al,0xe4
  41a774:	nop
  41a775:	retf   0xb987
  41a778:	jo     0x41a707
  41a77a:	popf   
  41a77b:	out    dx,eax
  41a77c:	in     eax,0x43
  41a77e:	jmp    0xc30f5856
  41a783:	test   DWORD PTR [ebx-0x36ca92b6],ebp
  41a789:	inc    eax
  41a78a:	test   al,0x9a
  41a78c:	test   BYTE PTR gs:[esp+edi*8-0x2e],cl
  41a791:	aam    0x42
  41a793:	jmp    0x89a544fe
  41a798:	ficom  DWORD PTR [ecx+0x7d891788]
  41a79e:	push   es
  41a79f:	and    BYTE PTR [ecx-0x71],0x11
  41a7a3:	pop    edi
  41a7a4:	icebp  
  41a7a5:	js     0x41a7d8
  41a7a7:	aam    0x18
  41a7a9:	popa   
  41a7aa:	xchg   esi,eax
  41a7ab:	adc    BYTE PTR ds:0x2a5742af,0xa3
  41a7b2:	xchg   ecx,eax
  41a7b3:	in     eax,dx
  41a7b4:	sub    eax,0x7dccba33
  41a7b9:	push   eax
  41a7ba:	std    
  41a7bb:	or     eax,0x3ebeefa2
  41a7c0:	jns    0x41a809
  41a7c2:	mov    eax,ds:0x6b3935f4
  41a7c7:	mov    al,ds:0x1f15fdee
  41a7cc:	retw   
  41a7ce:	push   es
  41a7cf:	dec    edi
  41a7d0:	outs   dx,DWORD PTR ds:[esi]
  41a7d1:	or     al,0x49
  41a7d3:	loop   0x41a831
  41a7d5:	xchg   esi,eax
  41a7d6:	jge    0x41a7bc
  41a7d8:	loop   0x41a81b
  41a7da:	xlat   BYTE PTR ds:[ebx]
  41a7db:	inc    edx
  41a7dc:	rol    DWORD PTR [edi+0x57],0xc7
  41a7e0:	in     eax,0xcc
  41a7e2:	popa   
  41a7e3:	inc    BYTE PTR [ecx+0x45d4db80]
  41a7e9:	and    eax,0xdd3f0068
  41a7ee:	and    eax,0xaffd66e6
  41a7f3:	in     al,dx
  41a7f4:	cmp    eax,0xffb06a23
  41a7f9:	dec    esp
  41a7fa:	sbb    bh,bl
  41a7fc:	jle    0x41a829
  41a7fe:	mov    eax,ds:0x42f19f8e
  41a803:	inc    esi
  41a804:	mov    DWORD PTR [ecx-0x1de8c77],0x4752c89e
  41a80e:	int3   
  41a80f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a810:	stc    
  41a811:	add    BYTE PTR [ebx+0x5a],0x66
  41a815:	sub    eax,0x2ae3f9b4
  41a81a:	cs int3 
  41a81c:	mov    edi,0xfd955e77
  41a821:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a822:	jae    0x41a85b
  41a824:	popf   
  41a825:	sbb    ebx,DWORD PTR [esi+edi*2+0x14]
  41a829:	mov    DWORD PTR [eax-0x59a3ce4f],edx
  41a82f:	fdivr  DWORD PTR [ecx+0x174efdf8]
  41a835:	jns    0x41a878
  41a837:	gs in  al,0xed
  41a83a:	imul   edx,edx,0xd16aa07e
  41a840:	dec    edx
  41a841:	inc    ebx
  41a842:	sub    eax,0x88a0e16c
  41a847:	xor    ch,BYTE PTR [ecx]
  41a849:	js     0x41a877
  41a84b:	push   0xfffffff6
  41a84d:	lods   al,BYTE PTR ds:[esi]
  41a84e:	push   es
  41a84f:	jge    0x41a7ef
  41a851:	aaa    
  41a852:	and    ebx,DWORD PTR [ebx-0x5f554b3]
  41a858:	fistp  DWORD PTR [esi-0x3e68341]
  41a85e:	pop    DWORD PTR [esi+0x37]
  41a861:	fnstenv [ebx]
  41a863:	pop    es
  41a864:	xor    BYTE PTR [edx],al
  41a866:	sbb    eax,0x38e91f04
  41a86b:	cdq    
  41a86c:	sub    al,0xa8
  41a86e:	push   esi
  41a86f:	test   DWORD PTR ds:0x113aeedc,edi
  41a875:	dec    esi
  41a876:	mov    ch,0x66
  41a878:	out    0x2d,eax
  41a87a:	push   0xeecf7649
  41a87f:	mov    eax,0xa36c8b1a
  41a884:	mov    al,ds:0x4604c6eb
  41a889:	and    ah,BYTE PTR [ecx-0x36d37249]
  41a88f:	(bad)  
  41a890:	cmp    ebp,esp
  41a892:	add    eax,0x32da594e
  41a897:	mov    bh,0x64
  41a899:	das    
  41a89a:	dec    edi
  41a89b:	xor    al,0xa2
  41a89d:	cwde   
  41a89e:	lods   al,BYTE PTR ds:[esi]
  41a89f:	dec    ecx
  41a8a0:	or     eax,0xb1d79128
  41a8a5:	in     eax,dx
  41a8a6:	call   0x51962ba9
  41a8ab:	push   ds
  41a8ac:	mov    ebp,0x33a7abd6
  41a8b1:	retf   0x48d3
  41a8b4:	pop    ebp
  41a8b5:	add    esi,ebx
  41a8b7:	rol    BYTE PTR [ecx+0x5f],1
  41a8ba:	aad    0xe0
  41a8bc:	lss    ebx,FWORD PTR [edx+ecx*8]
  41a8c0:	loop   0x41a862
  41a8c2:	int    0x3c
  41a8c4:	mov    eax,ds:0xde5b1375
  41a8c9:	push   0xffffffbd
  41a8cb:	and    BYTE PTR [edi+0x124d1df6],ah
  41a8d1:	fbstp  TBYTE PTR [ecx-0x4b]
  41a8d4:	fcomp  QWORD PTR [edx-0x200a50fc]
  41a8da:	ror    BYTE PTR [eax+0x4e],cl
  41a8dd:	mov    dl,0x61
  41a8df:	push   edx
  41a8e0:	test   eax,0x56b28a1b
  41a8e5:	xchg   esp,eax
  41a8e6:	inc    ebp
  41a8e7:	jns    0x41a87c
  41a8e9:	adc    edx,DWORD PTR [ebp+0x2a]
  41a8ec:	dec    edx
  41a8ed:	mov    ds:0xaa6439dd,al
  41a8f2:	pop    eax
  41a8f3:	jns    0x41a8b4
  41a8f5:	jle    0x41a88c
  41a8f7:	mov    cl,BYTE PTR [eax-0x28529580]
  41a8fd:	inc    edx
  41a8fe:	cs inc edx
  41a900:	cmc    
  41a901:	pop    ecx
  41a902:	cmp    DWORD PTR [ebp+esi*4-0x57],ebp
  41a906:	jecxz  0x41a945
  41a908:	and    edx,DWORD PTR ds:0xe78b56c8
  41a90e:	int3   
  41a90f:	xchg   BYTE PTR [esi-0x3a],dl
  41a912:	xor    DWORD PTR [eax+0x3b],esp
  41a915:	jecxz  0x41a96e
  41a917:	ret    
  41a918:	into   
  41a919:	or     BYTE PTR [ecx+eax*1+0x5a4fae4],al
  41a920:	sbb    DWORD PTR [esi+0x50aa0e5f],ebx
  41a926:	dec    ebp
  41a927:	(bad)  
  41a928:	fstp   TBYTE PTR [ebx+0x26]
  41a92b:	push   es
  41a92c:	push   es
  41a92d:	dec    ebx
  41a92e:	in     al,0x7b
  41a930:	and    ebx,DWORD PTR [esp+eiz*4]
  41a933:	adc    eax,0x8c4c09e3
  41a938:	icebp  
  41a939:	aas    
  41a93a:	aas    
  41a93b:	fwait
  41a93c:	cli    
  41a93d:	loopne 0x41a916
  41a93f:	fmul   st(3),st
  41a941:	cmp    al,0xd6
  41a943:	(bad)  [eax-0x3e91bd0b]
  41a949:	or     cl,BYTE PTR ds:[eax]
  41a94c:	or     BYTE PTR [ebx-0x90a5dd3],cl
  41a952:	pop    esi
  41a953:	lods   al,BYTE PTR ds:[esi]
  41a954:	pop    edi
  41a955:	dec    ecx
  41a956:	sahf   
  41a957:	mov    dh,0x46
  41a959:	xchg   DWORD PTR [edx-0xe],eax
  41a95c:	(bad)  
  41a95d:	daa    
  41a95e:	mov    ah,0xbb
  41a960:	xor    eax,DWORD PTR [ebp+0x79b1ef2a]
  41a966:	div    DWORD PTR [edx-0x1f]
  41a969:	addr16 mov edi,0x2ef9ab2f
  41a96f:	cmovge eax,DWORD PTR ds:0xfcf57dac
  41a976:	call   0xc2eee64d
  41a97b:	(bad)  
  41a97e:	jle    0x41a984
  41a980:	mov    eax,ds:0xd99fccb7
  41a985:	pop    es
  41a986:	adc    BYTE PTR [ebx],ah
  41a988:	aas    
  41a989:	mov    WORD PTR [esi+0x20],gs
  41a98c:	xor    BYTE PTR ds:0xf12a2162,cl
  41a992:	addr16 loopne 0x41a97d
  41a995:	or     al,BYTE PTR [esi]
  41a997:	adc    eax,0x50d6cad4
  41a99c:	xor    eax,0x97074763
  41a9a1:	adc    al,0xa7
  41a9a3:	popf   
  41a9a4:	sahf   
  41a9a5:	fsub   QWORD PTR [eax]
  41a9a7:	sub    eax,0x4b5a55bf
  41a9ac:	dec    ecx
  41a9ad:	dec    edx
  41a9ae:	sbb    eax,0xa3e98f66
  41a9b3:	mov    eax,0xf361dfe7
  41a9b8:	dec    ebp
  41a9b9:	lahf   
  41a9ba:	mov    eax,0x94434a4
  41a9bf:	or     eax,0xd684074e
  41a9c4:	in     eax,0x18
  41a9c6:	add    al,0x4b
  41a9c8:	xchg   edi,eax
  41a9c9:	pop    ecx
  41a9ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9cb:	js     0x41aa02
  41a9cd:	stos   BYTE PTR es:[edi],al
  41a9ce:	jns    0x41a98b
  41a9d0:	popa   
  41a9d1:	jp     0x41a9c6
  41a9d3:	and    eax,DWORD PTR [edi]
  41a9d5:	mov    BYTE PTR [ecx-0x43fa03e9],cl
  41a9db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9dc:	and    al,0x6f
  41a9de:	inc    edi
  41a9df:	adc    eax,0x79e56390
  41a9e4:	jbe    0x41aa5b
  41a9e6:	add    al,BYTE PTR [esi-0x20240119]
  41a9ec:	lea    ecx,[eax-0x2a]
  41a9ef:	jmp    0x41aa1b
  41a9f1:	loope  0x41aa2e
  41a9f3:	adc    eax,0x9c639b6e
  41a9f8:	inc    esp
  41a9f9:	neg    edx
  41a9fb:	stc    
  41a9fc:	nop
  41a9fd:	mov    edi,0x303c9797
  41aa02:	shl    BYTE PTR [ebp+0x47],1
  41aa05:	add    eax,0xec92ce3b
  41aa0a:	jo     0x41a9b3
  41aa0c:	ins    DWORD PTR es:[edi],dx
  41aa0d:	inc    esi
  41aa0e:	push   ds
  41aa0f:	cmp    dl,BYTE PTR [esi+0x57]
  41aa12:	int    0xd3
  41aa14:	inc    ebx
  41aa15:	inc    esi
  41aa17:	dec    esp
  41aa18:	repnz shl DWORD PTR [edi-0xe],cl
  41aa1c:	out    dx,eax
  41aa1d:	call   FWORD PTR [eax]
  41aa1f:	popa   
  41aa20:	pop    eax
  41aa21:	aad    0x18
  41aa23:	cmp    BYTE PTR [edi+0x59],0x21
  41aa27:	aad    0xbf
  41aa29:	imul   edi,esi,0x3f
  41aa2c:	or     eax,0x134f3fb
  41aa31:	lahf   
  41aa32:	adc    al,0x72
  41aa34:	daa    
  41aa35:	or     BYTE PTR ds:0x609a15f6,0x88
  41aa3c:	and    eax,DWORD PTR [ebx]
  41aa3e:	jmp    0x2e72:0xa3447bd6
  41aa45:	loope  0x41aa6f
  41aa47:	test   DWORD PTR [edi],0x8492a4e6
  41aa4d:	mov    esi,0xe261911c
  41aa52:	mov    esi,edi
  41aa54:	(bad)  
  41aa55:	enter  0x2c33,0x82
  41aa59:	cmp    edx,0xcb5997bb
  41aa5f:	or     BYTE PTR [edi+0x79],dh
  41aa62:	iret   
  41aa63:	rcl    BYTE PTR [edx+0x9],1
  41aa66:	jmp    0x41aa21
  41aa68:	out    dx,eax
  41aa69:	out    0x38,al
  41aa6b:	lods   eax,DWORD PTR ds:[esi]
  41aa6c:	scas   eax,DWORD PTR es:[edi]
  41aa6d:	cmp    BYTE PTR ds:0x41f07244,ch
  41aa73:	pop    ebx
  41aa74:	add    ecx,DWORD PTR [ebp+edx*2-0x43]
  41aa78:	sbb    ah,BYTE PTR [ecx-0xf595504]
  41aa7e:	mov    WORD PTR [ebp-0x20440e98],es
  41aa84:	sub    eax,0x91e666eb
  41aa89:	inc    esi
  41aa8a:	daa    
  41aa8b:	push   0x2c88c3b7
  41aa90:	sti    
  41aa91:	mov    edx,gs
  41aa93:	and    DWORD PTR [edx-0x4b975c78],0x958b0b04
  41aa9d:	cmp    BYTE PTR [eax],dl
  41aa9f:	or     DWORD PTR [ebx+ebx*8-0x29],ecx
  41aaa3:	pop    esi
  41aaa4:	das    
  41aaa5:	ins    DWORD PTR es:[edi],dx
  41aaa6:	sbb    bl,BYTE PTR [esp+ecx*1+0x4dbef4ce]
  41aaad:	imul   ebp,esi,0x5c
  41aab0:	jo     0x41aa76
  41aab2:	in     eax,0xe7
  41aab4:	in     al,dx
  41aab5:	inc    ebp
  41aab6:	fnstsw WORD PTR [edi-0x10]
  41aab9:	adc    al,BYTE PTR [ebx+0x19f4bcf3]
  41aabf:	pop    ds
  41aac0:	lods   al,BYTE PTR ds:[esi]
  41aac1:	shl    DWORD PTR [eax-0x35],cl
  41aac4:	add    eax,0x81a9e924
  41aac9:	test   DWORD PTR [esi+edx*2],esp
  41aacc:	jp     0x41aab1
  41aace:	lods   al,BYTE PTR ds:[esi]
  41aacf:	cs test ax,0x8e9d
  41aad4:	lods   eax,DWORD PTR ds:[esi]
  41aad5:	std    
  41aad6:	xchg   ecx,eax
  41aad7:	xchg   BYTE PTR [esi-0x15],al
  41aada:	jle    0x41aa6e
  41aadc:	or     DWORD PTR [ebx+0x7f8e7343],esp
  41aae2:	aas    
  41aae3:	test   al,0xe0
  41aae5:	jecxz  0x41ab0f
  41aae7:	jns    0x41ab31
  41aae9:	mov    dl,0x56
  41aaeb:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aaed:	ret    
  41aaee:	sub    edi,DWORD PTR [esi+0xc84c122]
  41aaf4:	inc    edi
  41aaf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aaf6:	outs   dx,BYTE PTR ds:[esi]
  41aaf7:	leave  
  41aaf8:	sub    BYTE PTR fs:[ecx],al
  41aafb:	jl     0x41ab2a
  41aafd:	dec    eax
  41aafe:	push   ss
  41aaff:	(bad)  
  41ab00:	scas   eax,DWORD PTR es:[edi]
  41ab01:	aaa    
  41ab02:	or     eax,0xb57750c9
  41ab07:	and    dl,bl
  41ab09:	adc    ebp,esi
  41ab0b:	mov    cl,0x3e
  41ab0d:	sub    edx,DWORD PTR [eax-0x147949b0]
  41ab13:	cwde   
  41ab14:	int3   
  41ab15:	(bad)  
  41ab16:	jmp    0x585f9614
  41ab1b:	sar    DWORD PTR [esi-0x3f81e4db],cl
  41ab21:	jns    0x41ab7b
  41ab23:	push   ss
  41ab24:	cmp    BYTE PTR [esp-0x6bb88e38],ch
  41ab2b:	mov    bl,0x3d
  41ab2d:	retf   
  41ab2e:	mov    ch,0x48
  41ab30:	push   ecx
  41ab31:	jmp    0xe524:0x1f4c75e7
  41ab38:	(bad)  
  41ab39:	add    DWORD PTR [ecx+0x46f05b5a],esi
  41ab3f:	dec    ebp
  41ab40:	int3   
  41ab41:	aam    0x1c
  41ab43:	push   es
  41ab44:	stos   BYTE PTR es:[edi],al
  41ab45:	xchg   ebx,eax
  41ab46:	xlat   BYTE PTR ds:[ebx]
  41ab47:	(bad)  
  41ab48:	dec    edi
  41ab49:	xchg   DWORD PTR [eax+0x57],ebp
  41ab4c:	and    cl,BYTE PTR [edx-0x51]
  41ab4f:	sbb    dl,BYTE PTR [esi*2-0x7e8998a4]
  41ab56:	ins    DWORD PTR es:[edi],dx
  41ab57:	ss push esi
  41ab59:	imul   ecx,DWORD PTR [ebp-0x23727419],0xf2e0df23
  41ab63:	cli    
  41ab64:	out    dx,al
  41ab65:	clc    
  41ab66:	add    esi,DWORD PTR [ecx+0x35d0f4ce]
  41ab6c:	sbb    edi,DWORD PTR [ecx]
  41ab6e:	mov    dl,BYTE PTR [edi-0x22]
  41ab71:	mov    dl,0x42
  41ab73:	ins    DWORD PTR es:[edi],dx
  41ab74:	or     al,0x1
  41ab76:	xchg   edx,eax
  41ab77:	fnstenv [ebx]
  41ab79:	xchg   ebp,eax
  41ab7a:	(bad)  
  41ab7b:	jmp    0x5dc72d3e
  41ab80:	stc    
  41ab81:	inc    esi
  41ab82:	xchg   esi,eax
  41ab83:	cdq    
  41ab84:	aas    
  41ab85:	aam    0x82
  41ab87:	adc    DWORD PTR [ecx+0x18],ebp
  41ab8a:	pop    ebp
  41ab8b:	cmc    
  41ab8c:	xor    eax,0x41df986c
  41ab91:	repz jg 0x41ac00
  41ab94:	test   al,0x1f
  41ab96:	test   edx,edx
  41ab98:	push   0x9d3b6339
  41ab9d:	dec    ebp
  41ab9e:	cwde   
  41ab9f:	arpl   WORD PTR [eax+0x1f753d34],di
  41aba5:	or     BYTE PTR [eax+edi*4],al
  41aba8:	mov    cl,0xf4
  41abaa:	sbb    dl,BYTE PTR [eax-0x2]
  41abad:	(bad)  
  41abae:	popa   
  41abaf:	bound  ecx,QWORD PTR [ebp+eiz*1+0x7d]
  41abb3:	and    eax,DWORD PTR [ebx+0x2d]
  41abb6:	sbb    bl,BYTE PTR [ecx]
  41abb8:	mov    eax,0xfba9d675
  41abbd:	xchg   edi,eax
  41abbe:	cmp    BYTE PTR [ebp-0x41ae936],cl
  41abc4:	xchg   edi,eax
  41abc5:	scas   al,BYTE PTR es:[edi]
  41abc6:	sub    cl,dh
  41abc8:	xor    BYTE PTR [esi],cl
  41abca:	sub    ah,BYTE PTR [edi]
  41abcc:	ins    DWORD PTR es:[edi],dx
  41abcd:	stos   BYTE PTR es:[edi],al
  41abce:	js     0x41ac0d
  41abd0:	lods   eax,DWORD PTR ds:[esi]
  41abd1:	mov    ch,0x65
  41abd3:	sti    
  41abd4:	xchg   ebx,eax
  41abd5:	outs   dx,BYTE PTR ds:[esi]
  41abd6:	(bad)  
  41abd8:	loope  0x41ab9d
  41abda:	dec    edx
  41abdb:	mov    ds:0xde882ab3,eax
  41abe0:	dec    eax
  41abe1:	shl    al,1
  41abe3:	inc    edi
  41abe4:	xor    DWORD PTR [edi-0x2],edx
  41abe7:	das    
  41abe8:	dec    edx
  41abe9:	push   ebp
  41abea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abeb:	xchg   esi,eax
  41abec:	mov    al,dl
  41abee:	mov    ah,0x90
  41abf0:	stos   BYTE PTR es:[edi],al
  41abf1:	push   ds
  41abf2:	xor    DWORD PTR ds:0x45b1884e,esp
  41abf8:	and    eax,0xe714a355
  41abfd:	push   ebx
  41abfe:	sub    ch,dl
  41ac00:	aad    0xba
  41ac02:	push   eax
  41ac03:	outs   dx,DWORD PTR ds:[esi]
  41ac04:	dec    ebx
  41ac05:	or     DWORD PTR [ecx+0xd2e6b1f],0xffffffe7
  41ac0c:	mov    al,0x99
  41ac0e:	ret    
  41ac0f:	pop    ds
  41ac10:	leave  
  41ac11:	ins    DWORD PTR es:[edi],dx
  41ac12:	int3   
  41ac13:	lahf   
  41ac14:	push   0xffffff9c
  41ac16:	pop    DWORD PTR [edi+0x59442b89]
  41ac1c:	call   0xfd3adcef
  41ac21:	cmc    
  41ac22:	outs   dx,BYTE PTR ds:[esi]
  41ac23:	jge    0x41ac73
  41ac25:	loop   0x41ac8b
  41ac27:	inc    esp
  41ac28:	lahf   
  41ac29:	clc    
  41ac2a:	ins    BYTE PTR es:[edi],dx
  41ac2b:	dec    ecx
  41ac2c:	into   
  41ac2d:	lods   al,BYTE PTR ds:[esi]
  41ac2e:	inc    ebx
  41ac2f:	adc    eax,0x500b3a83
  41ac34:	inc    edi
  41ac35:	je     0x41ac3d
  41ac37:	mov    esp,0x7168e410
  41ac3c:	jno    0x41abf6
  41ac3e:	inc    edx
  41ac3f:	cli    
  41ac40:	outs   dx,BYTE PTR ds:[esi]
  41ac41:	sar    BYTE PTR [esi],0xf1
  41ac44:	(bad)  
  41ac45:	daa    
  41ac46:	adc    BYTE PTR [esp+ecx*8-0x25],0xb6
  41ac4b:	ret    
  41ac4c:	stos   DWORD PTR es:[edi],eax
  41ac4d:	sub    eax,0x6d76d113
  41ac52:	sbb    BYTE PTR [eax-0x5d],bh
  41ac55:	fwait
  41ac56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac57:	popf   
  41ac58:	ror    DWORD PTR [edi],cl
  41ac5a:	mov    eax,ds:0x436c14b3
  41ac5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac60:	and    eax,0x2d96638
  41ac65:	add    BYTE PTR [eax-0x29],dl
  41ac68:	clc    
  41ac69:	loopne 0x41ac88
  41ac6b:	test   BYTE PTR [ebx-0x7a],dh
  41ac6e:	jp     0x41ac53
  41ac70:	jmp    0xb1d7:0x9c4ac7a1
  41ac77:	jp     0x41ac04
  41ac79:	aad    0xf7
  41ac7b:	test   DWORD PTR [esi+0x5efa5279],edi
  41ac81:	jecxz  0x41aca1
  41ac83:	adc    eax,0x458e32db
  41ac88:	pop    ds
  41ac89:	pushf  
  41ac8a:	inc    ebx
  41ac8b:	(bad)  
  41ac8c:	push   ebp
  41ac8d:	and    eax,0x26c6c875
  41ac92:	jp     0x41ad13
  41ac94:	jmp    0x41ace0
  41ac96:	sub    BYTE PTR [ebx-0x520784b2],dh
  41ac9c:	jecxz  0x41ac87
  41ac9e:	xchg   edi,eax
  41ac9f:	xchg   edi,eax
  41aca0:	aaa    
  41aca1:	cmp    al,0xa2
  41aca3:	iret   
  41aca4:	xlat   BYTE PTR ds:[ebx]
  41aca5:	mov    ch,0xc1
  41aca7:	(bad)  
  41aca8:	push   ecx
  41aca9:	retf   0x43a7
  41acac:	mov    al,0x3b
  41acae:	push   esp
  41acaf:	mov    bl,0x76
  41acb1:	cdq    
  41acb2:	add    eax,0x571df244
  41acb7:	xor    al,0x3d
  41acb9:	inc    ecx
  41acba:	daa    
  41acbb:	jno    0x41ac47
  41acbd:	or     al,0x7
  41acbf:	jne    0x41acc9
  41acc1:	ret    
  41acc2:	xchg   edi,eax
  41acc3:	xchg   esi,eax
  41acc4:	sar    ecx,0xdd
  41acc7:	fisub  DWORD PTR [esi]
  41acc9:	jbe    0x41acd6
  41accb:	add    eax,DWORD PTR [edx-0x6a97bf32]
  41acd1:	js     0x41ac53
  41acd3:	je     0x41ac97
  41acd5:	outs   dx,DWORD PTR ds:[esi]
  41acd6:	retf   
  41acd7:	(bad)  
  41acd8:	dec    esp
  41acd9:	mov    BYTE PTR [eax+ebx*1-0x26],dl
  41acdd:	adc    eax,0x87fff151
  41ace2:	hlt    
  41ace3:	daa    
  41ace4:	clc    
  41ace5:	xchg   esi,eax
  41ace6:	out    0x44,al
  41ace8:	xor    bh,BYTE PTR [edx]
  41acea:	fmul   st,st(2)
  41acec:	idiv   BYTE PTR [ecx-0x45]
  41acef:	xor    ah,BYTE PTR [esi]
  41acf1:	nop
  41acf2:	push   ecx
  41acf3:	stos   DWORD PTR es:[edi],eax
  41acf4:	frstor [ecx]
  41acf6:	pop    ds
  41acf7:	pop    edx
  41acf8:	addr16 dec esi
  41acfa:	sub    al,0x39
  41acfc:	xchg   ebp,eax
  41acfd:	jne    0x41ace0
  41acff:	mov    al,ss:0xd19d66fa
  41ad05:	mov    BYTE PTR [ebp-0x1f2224ae],0x9b
  41ad0c:	fs mov ah,0x4a
  41ad0f:	pop    eax
  41ad10:	push   esp
  41ad11:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41ad13:	popf   
  41ad14:	pop    esp
  41ad15:	jmp    0x41acd9
  41ad17:	xchg   DWORD PTR [eax+0x4d],eax
  41ad1a:	test   eax,0x92e7e44a
  41ad1f:	cs popf 
  41ad21:	(bad)  
  41ad22:	sub    bl,BYTE PTR [esi-0x44ca5ecd]
  41ad28:	nop
  41ad29:	ror    BYTE PTR [ecx],1
  41ad2b:	aad    0x1e
  41ad2d:	mov    ds:0x52708818,al
  41ad32:	pop    esp
  41ad33:	fisttp WORD PTR [edx-0x60]
  41ad36:	sbb    BYTE PTR [esi+0x48],dl
  41ad39:	and    eax,0xdd8a2468
  41ad3e:	out    0x58,al
  41ad40:	adc    ah,ah
  41ad42:	js     0x41adc1
  41ad44:	das    
  41ad45:	repz xor BYTE PTR [ebx+0x29],0x1e
  41ad4a:	enter  0xd397,0x66
  41ad4e:	push   esi
  41ad4f:	stos   BYTE PTR es:[edi],al
  41ad50:	iret   
  41ad51:	popf   
  41ad52:	neg    BYTE PTR [ecx]
  41ad54:	hlt    
  41ad55:	xor    DWORD PTR [eax+0x528a54b3],ebx
  41ad5b:	xor    DWORD PTR [edx+ecx*2-0x5803a9e4],0x32
  41ad63:	test   BYTE PTR [eax],dh
  41ad65:	cmp    BYTE PTR [edi],bl
  41ad67:	call   0x586f:0xdfba5d8a
  41ad6e:	pop    edx
  41ad6f:	xor    eax,0x903ab4cf
  41ad74:	mov    cs,WORD PTR [edx]
  41ad76:	aas    
  41ad77:	mov    bl,0x88
  41ad79:	add    DWORD PTR [esi-0x58],0x7c4d725c
  41ad80:	data16 mov ah,0xd2
  41ad83:	jae    0x41ad48
  41ad85:	loopne 0x41ad23
  41ad87:	add    BYTE PTR ds:0xa8c12ade,cl
  41ad8d:	sbb    al,0xda
  41ad8f:	mov    BYTE PTR [ebx-0x39a8e010],bl
  41ad95:	cmp    al,0x3d
  41ad97:	adc    al,0x61
  41ad99:	dec    edi
  41ad9a:	ficom  WORD PTR [ebx]
  41ad9c:	fmul   st,st(6)
  41ad9e:	in     eax,0xb1
  41ada0:	jg     0x41ae0e
  41ada2:	cmp    BYTE PTR [ecx+edx*1],0xbb
  41ada6:	pop    ds
  41ada7:	mov    dl,0x0
  41ada9:	mov    BYTE PTR ds:0x5f5f09ac,0xa3
  41adb0:	pop    eax
  41adb1:	in     al,0x59
  41adb3:	xchg   ecx,eax
  41adb4:	lock cli 
  41adb6:	loope  0x41ad91
  41adb8:	mov    ds,WORD PTR [eax+eax*2-0x1d66b309]
  41adbf:	out    dx,eax
  41adc0:	iret   
  41adc1:	(bad)  
  41adc2:	lods   al,BYTE PTR ds:[esi]
  41adc3:	sbb    BYTE PTR [edi+0x64c7691],0x9c
  41adca:	(bad)  
  41adcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41adcc:	pop    es
  41adcd:	in     al,0xd3
  41adcf:	out    dx,al
  41add0:	into   
  41add1:	pop    es
  41add2:	jno    0x41ae51
  41add4:	popa   
  41add5:	imul   ebx,edi,0xffffff82
  41add8:	lock xchg esi,eax
  41adda:	xor    eax,0x644a4d17
  41addf:	push   0xffffff81
  41ade1:	and    al,0x80
  41ade3:	or     al,0xc
  41ade5:	jns    0x41ad7d
  41ade7:	inc    ebx
  41ade8:	test   eax,0xa84915d8
  41aded:	jecxz  0x41ade8
  41adef:	pop    ebp
  41adf0:	and    cl,ch
  41adf2:	retf   
  41adf3:	repnz sub BYTE PTR [ebx+edi*8+0x4045bc95],0x62
  41adfc:	mov    cl,0x83
  41adfe:	neg    BYTE PTR [edi]
  41ae00:	js     0x41ae3d
  41ae02:	sub    eax,0x96375112
  41ae07:	fs cdq 
  41ae09:	pop    edi
  41ae0a:	maskmovq mm4,(bad)
  41ae0b:	mul    DWORD PTR [ebx]
  41ae0d:	mov    ch,ch
  41ae0f:	xor    eax,0x7b0662e5
  41ae14:	cmp    eax,DWORD PTR [esi]
  41ae16:	icebp  
  41ae17:	mov    cl,BYTE PTR [esi-0x3dc2478f]
  41ae1d:	xchg   esi,eax
  41ae1e:	loope  0x41ae80
  41ae20:	lock mov DWORD PTR [ebx+0x480b835c],ecx
  41ae27:	xor    eax,DWORD PTR [ebx]
  41ae29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae2a:	je     0x41ae8d
  41ae2c:	jno    0x41ae7e
  41ae2e:	sbb    bh,dh
  41ae30:	cld    
  41ae31:	dec    edi
  41ae32:	and    al,0x32
  41ae34:	xchg   DWORD PTR [edx],edx
  41ae36:	fimul  WORD PTR [edx]
  41ae38:	or     al,0x9f
  41ae3a:	ret    
  41ae3b:	sti    
  41ae3c:	mov    al,0x24
  41ae3e:	mov    ?,esp
  41ae40:	imul   edi,DWORD PTR [ebx],0x3d
  41ae43:	xor    cl,BYTE PTR [eax]
  41ae45:	push   0x1d
  41ae47:	dec    esi
  41ae48:	es push ebx
  41ae4a:	jo     0x41ae58
  41ae4c:	mov    ecx,0x7904c0ef
  41ae51:	add    al,0x73
  41ae53:	aas    
  41ae54:	or     al,0xac
  41ae56:	fwait
  41ae57:	sbb    BYTE PTR [ebx+0x340e37e0],ah
  41ae5d:	pop    edi
  41ae5e:	test   al,0x3
  41ae60:	stos   DWORD PTR es:[edi],eax
  41ae61:	jmp    0x41ae29
  41ae63:	data16 or dl,BYTE PTR [edx+0x64]
  41ae67:	(bad)  
  41ae68:	dec    edi
  41ae69:	fstp   DWORD PTR [edi+ecx*4-0x4e1f127b]
  41ae70:	push   edi
  41ae71:	or     DWORD PTR [ecx],ebx
  41ae73:	idiv   BYTE PTR [ebx+ebp*2]
  41ae76:	xor    BYTE PTR [eax+0x85e04d6],cl
  41ae7c:	jp     0x41aeba
  41ae7e:	jmp    FWORD PTR [ebp+0x38]
  41ae81:	ds in  eax,dx
  41ae83:	push   cs
  41ae84:	retf   
  41ae85:	aam    0x2b
  41ae87:	popa   
  41ae88:	and    al,0xc7
  41ae8a:	mov    ebx,0xd9367eeb
  41ae8f:	gs scas eax,DWORD PTR es:[edi]
  41ae91:	add    esi,esp
  41ae93:	mov    ah,BYTE PTR [edi+ebx*2-0x7e1be2dc]
  41ae9a:	into   
  41ae9b:	jne    0x1c2edc3b
  41aea1:	mov    cl,BYTE PTR [ebp+0x2c]
  41aea4:	pop    es
  41aea5:	and    BYTE PTR es:[edi-0x55],bl
  41aea9:	daa    
  41aeaa:	mov    DWORD PTR [ebp-0x67],edx
  41aead:	ds jg  0x41ae83
  41aeb0:	cmp    eax,0x3c27ca6f
  41aeb5:	dec    edx
  41aeb6:	jbe    0x41ae52
  41aeb8:	shr    DWORD PTR [esi+ebp*8],cl
  41aebb:	sbb    al,0xde
  41aebd:	jae    0x41af27
  41aebf:	mov    WORD PTR [ebp-0xc],ds
  41aec2:	adc    DWORD PTR [eax-0x10efb71b],ecx
  41aec8:	aaa    
  41aec9:	int    0x44
  41aecb:	sub    al,0xf
  41aecd:	adc    DWORD PTR [ecx-0x41dcd38a],esp
  41aed3:	dec    esp
  41aed4:	cmc    
  41aed5:	sbb    DWORD PTR [ebx],edx
  41aed7:	push   0x3dd0c862
  41aedc:	mov    ds:0x1202880b,eax
  41aee1:	cmp    eax,0x5a428602
  41aee6:	xchg   esp,eax
  41aee7:	and    eax,0x7eb435ad
  41aeec:	fldenv [ebx]
  41aeee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aeef:	or     al,0x85
  41aef1:	sub    eax,eax
  41aef3:	dec    BYTE PTR [ebx]
  41aef5:	(bad)  
  41aef6:	daa    
  41aef7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aef8:	add    al,0x21
  41aefa:	add    DWORD PTR [edx+ecx*2],eax
  41aefd:	test   DWORD PTR [esp+edx*2+0x32],ebx
  41af01:	dec    edx
  41af02:	sbb    esp,ecx
  41af04:	neg    bh
  41af06:	out    0x9,al
  41af08:	jp     0x41af0b
  41af0a:	pop    esi
  41af0b:	xchg   ebp,eax
  41af0c:	rcr    DWORD PTR [esi],1
  41af0e:	mov    WORD PTR [ebx+0x254da05d],?
  41af14:	dec    ecx
  41af15:	aad    0xd
  41af17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af18:	add    ebx,DWORD PTR [edi-0x55b86abf]
  41af1e:	mov    dl,0x28
  41af20:	call   0xe422:0x7a70c60d
  41af27:	stos   DWORD PTR es:[edi],eax
  41af28:	adc    edi,DWORD PTR [edx+0x697f5940]
  41af2e:	stc    
  41af2f:	add    al,0xcc
  41af31:	sbb    DWORD PTR [edx-0x338fa1f1],ecx
  41af37:	sbb    BYTE PTR [edi+0x48e89d19],bh
  41af3d:	std    
  41af3e:	test   BYTE PTR [edx+ebx*8-0x5ac94e3f],ah
  41af45:	mov    ebx,0x404b1b68
  41af4a:	out    0x2a,eax
  41af4c:	in     eax,dx
  41af4d:	jnp    0x41af3f
  41af4f:	lods   al,BYTE PTR ds:[esi]
  41af50:	mov    cl,0x78
  41af52:	sbb    bh,BYTE PTR [edx+0x2c]
  41af55:	add    esi,DWORD PTR [edx]
  41af57:	adc    dh,0xd4
  41af5a:	add    edx,eax
  41af5c:	lahf   
  41af5d:	out    dx,eax
  41af5e:	fistp  WORD PTR ds:0x239026b2
  41af64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af65:	int3   
  41af66:	les    edx,FWORD PTR [eax+0x4b9c6abd]
  41af6c:	xor    ecx,DWORD PTR [eax+0x67]
  41af6f:	rcl    DWORD PTR [edi+0x178cb102],1
  41af75:	(bad)  
  41af76:	ficom  DWORD PTR [edx]
  41af78:	pop    ecx
  41af79:	jbe    0x41af53
  41af7b:	das    
  41af7c:	push   eax
  41af7d:	xchg   BYTE PTR [ebp+0x42],cl
  41af80:	push   ss
  41af81:	aam    0xef
  41af83:	dec    esp
  41af84:	mov    BYTE PTR [esi],ch
  41af86:	shl    BYTE PTR [ebp-0x7f12ba7a],cl
  41af8c:	adc    al,0x1f
  41af8e:	mov    ds:0xdd1d7bbe,eax
  41af93:	in     al,dx
  41af94:	out    dx,al
  41af95:	mov    ebx,0x6b7d8d77
  41af9a:	dec    esi
  41af9b:	mov    ds:0x4fb3308b,eax
  41afa0:	lds    esp,FWORD PTR [ecx]
  41afa2:	shl    BYTE PTR ds:0x9b01c678,cl
  41afa8:	mov    al,ds:0xca2db917
  41afad:	clc    
  41afae:	das    
  41afaf:	add    DWORD PTR [ebx],edx
  41afb1:	mov    eax,ds:0x2bf27203
  41afb6:	fdecstp 
  41afb8:	adc    DWORD PTR [esi-0x6c8de6f4],esi
  41afbe:	and    bh,bh
  41afc0:	cmp    DWORD PTR [eax],esi
  41afc2:	add    esp,ebp
  41afc4:	ja     0x41afa4
  41afc6:	fs fcomi st,st(1)
  41afc9:	mov    eax,0x4fb08a7d
  41afce:	mov    ebp,0x39dbbbb7
  41afd3:	fadd   QWORD PTR [ebx-0x13eda8ea]
  41afd9:	das    
  41afda:	jbe    0x41afd2
  41afdc:	push   ss
  41afdd:	retf   
  41afde:	daa    
  41afdf:	imul   eax,ebp,0xffffffc9
  41afe2:	fnstsw WORD PTR [ecx]
  41afe4:	mov    ch,0xcb
  41afe6:	xchg   ecx,eax
  41afe7:	add    esi,ecx
  41afe9:	aam    0x5a
  41afeb:	mov    WORD PTR [ecx],es
  41afed:	mov    ds:0xf015f708,eax
  41aff2:	inc    esi
  41aff3:	xchg   ebp,eax
  41aff4:	push   0xffffff83
  41aff6:	fidiv  DWORD PTR [edi+0x1a]
  41aff9:	and    DWORD PTR [ebp+0x75f07eb9],eax
  41afff:	aam    0xd6
  41b001:	cld    
  41b002:	shl    DWORD PTR ds:0xb11e4bdb,0xf1
  41b009:	in     eax,dx
  41b00a:	ins    DWORD PTR es:[edi],dx
  41b00b:	jno    0x41b05c
  41b00d:	push   es
  41b00e:	pop    esi
  41b00f:	mov    bh,0xc7
  41b011:	push   cs
  41b012:	clc    
  41b013:	xor    eax,0x83cd1f03
  41b018:	lahf   
  41b019:	mov    dl,0x24
  41b01b:	xor    al,0xa3
  41b01d:	in     eax,dx
  41b01e:	fs sbb eax,0x8b0c1303
  41b024:	data16 sub BYTE PTR [esi],0x56
  41b028:	cmp    DWORD PTR [edi+0x57],eax
  41b02b:	xchg   esp,eax
  41b02c:	dec    ebx
  41b02d:	sub    eax,DWORD PTR [ebp+eax*4-0x3c6203df]
  41b034:	push   0x873716e3
  41b039:	cmp    ebx,DWORD PTR [ecx]
  41b03b:	pop    ds
  41b03c:	and    DWORD PTR [ebx-0x132782bc],ebx
  41b042:	dec    ebp
  41b043:	inc    ebp
  41b044:	sar    DWORD PTR [ecx],0xa5
  41b047:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b048:	outs   dx,BYTE PTR ds:[esi]
  41b04a:	in     al,0x33
  41b04c:	sbb    al,0x73
  41b04e:	scas   al,BYTE PTR es:[edi]
  41b04f:	or     eax,0xced99ecb
  41b054:	jbe    0x41b03f
  41b056:	scas   al,BYTE PTR es:[edi]
  41b057:	pusha  
  41b058:	aas    
  41b059:	mov    al,0x38
  41b05b:	cmc    
  41b05c:	ror    DWORD PTR [esi+0x26ce95c6],1
  41b062:	lea    esp,[edx-0x6b]
  41b065:	mov    dh,0xb8
  41b067:	push   0x8e68f6b0
  41b06c:	in     eax,0xaf
  41b06e:	inc    ebp
  41b06f:	stc    
  41b070:	arpl   WORD PTR [ebp+0x1e],dx
  41b073:	loope  0x41b072
  41b075:	sbb    eax,DWORD PTR [ebx+0x57a23a8a]
  41b07b:	xor    BYTE PTR [ebx+0x6be0e5de],bl
  41b081:	dec    ebx
  41b082:	cmp    eax,0xc0aa4252
  41b087:	ds mov edx,?
  41b08a:	push   ds
  41b08b:	add    DWORD PTR [eax-0x32b95124],ebx
  41b091:	mov    ds,WORD PTR [edi+0x10a10ee7]
  41b097:	pop    edx
  41b098:	xor    al,0xe3
  41b09a:	aad    0x7a
  41b09c:	or     BYTE PTR [edi-0x689ec369],bl
  41b0a2:	adc    DWORD PTR [eax-0x141f9a10],ebp
  41b0a8:	add    eax,0x823ecf11
  41b0ad:	mov    esi,0xe8bd4d83
  41b0b2:	je     0x41b0de
  41b0b4:	sub    ebx,DWORD PTR ds:0x17ef4ae1
  41b0ba:	mov    edi,0x8cecbe21
  41b0bf:	xor    bl,al
  41b0c1:	scas   eax,DWORD PTR es:[edi]
  41b0c2:	jl     0x41b05d
  41b0c4:	jg     0x41b076
  41b0c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b0c7:	push   ds
  41b0c8:	fsubr  QWORD PTR [edx+0x7e4f7045]
  41b0ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b0cf:	pop    ss
  41b0d0:	sub    ebp,DWORD PTR [edx+0x77283805]
  41b0d6:	cld    
  41b0d7:	jb     0x41b13d
  41b0d9:	fstp   QWORD PTR [ecx-0x3c]
  41b0dc:	fucomi st,st(5)
  41b0de:	sub    dh,BYTE PTR [ebp+0x64]
  41b0e1:	fldenv [ebx+0x3f]
  41b0e4:	fisttp QWORD PTR [eax+ebp*8-0x47]
  41b0e8:	sub    eax,0x39a6f72c
  41b0ed:	int    0x3d
  41b0ef:	mov    ecx,DWORD PTR [ebx]
  41b0f1:	mov    ds:0x7dd42b85,eax
  41b0f6:	jns    0x41b0c6
  41b0f8:	add    DWORD PTR [edx+esi*8-0x17478eb2],eax
  41b0ff:	jnp    0x41b09d
  41b101:	outs   dx,DWORD PTR ds:[esi]
  41b102:	lea    esi,[esi+edi*8+0x29]
  41b106:	pusha  
  41b107:	(bad)  
  41b10b:	and    BYTE PTR [esp+edx*4+0x16],dh
  41b10f:	outs   dx,BYTE PTR ds:[esi]
  41b110:	and    ebx,DWORD PTR [ebx]
  41b112:	push   edi
  41b113:	mov    edi,0x80a49868
  41b118:	push   esp
  41b119:	push   cs
  41b11a:	in     al,dx
  41b11b:	or     dl,BYTE PTR [edx+0x69368a11]
  41b121:	jg     0x41b134
  41b123:	xchg   esp,eax
  41b124:	xor    BYTE PTR [edi],cl
  41b126:	ins    BYTE PTR es:[edi],dx
  41b127:	jg     0x41b113
  41b129:	jle    0x41b0be
  41b12b:	int3   
  41b12c:	push   edi
  41b12d:	scas   eax,DWORD PTR es:[edi]
  41b12e:	test   al,0x85
  41b130:	stos   DWORD PTR es:[edi],eax
  41b131:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b132:	sbb    eax,0xe3cc148b
  41b137:	add    eax,DWORD PTR [ebx-0x6d]
  41b13a:	sbb    al,0xd
  41b13c:	sar    BYTE PTR [eax+0x52adf33],cl
  41b142:	mov    ecx,0x9cd72b63
  41b147:	stos   DWORD PTR es:[edi],eax
  41b148:	stos   DWORD PTR es:[edi],eax
  41b149:	sbb    BYTE PTR [ebp*2+0x214e777f],0xe1
  41b151:	pop    eax
  41b152:	das    
  41b153:	inc    ebp
  41b154:	loop   0x41b139
  41b156:	add    BYTE PTR [edi],bl
  41b158:	push   ebp
  41b159:	xchg   esi,eax
  41b15a:	sub    ah,BYTE PTR [ecx+0x56]
  41b15d:	cmp    al,0xd9
  41b15f:	aam    0xd
  41b161:	mov    al,0xd3
  41b163:	jl     0x41b1c4
  41b165:	mov    DWORD PTR [ebx],esp
  41b167:	pusha  
  41b168:	xchg   BYTE PTR [eax],cl
  41b16a:	cld    
  41b16b:	jae    0x41b1af
  41b16d:	add    ah,dh
  41b16f:	cmp    al,0xf4
  41b171:	in     eax,0x6f
  41b173:	xor    DWORD PTR [esp+eax*8-0x2506d12d],esp
  41b17a:	mov    ds:0xee923637,eax
  41b17f:	pop    DWORD PTR [edx]
  41b181:	(bad)  
  41b183:	dec    BYTE PTR [esi-0x72]
  41b186:	and    edx,ebp
  41b188:	int3   
  41b189:	lea    eax,[esi-0x1e]
  41b18c:	mov    dl,bl
  41b18e:	out    0x73,al
  41b190:	sbb    BYTE PTR [edx],ch
  41b192:	test   eax,0xce7029f7
  41b197:	mov    esi,0xf25ed59e
  41b19c:	(bad)  
  41b19d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b19e:	outs   dx,BYTE PTR ds:[esi]
  41b19f:	les    esi,FWORD PTR [ebp-0x66e788a]
  41b1a5:	mov    ebx,0x3823c383
  41b1aa:	aaa    
  41b1ab:	cwde   
  41b1ac:	cmp    cl,al
  41b1ae:	out    0xe1,eax
  41b1b0:	and    al,0x6d
  41b1b2:	mov    eax,ds:0x9c7ed496
  41b1b7:	int3   
  41b1b8:	pop    edi
  41b1b9:	shr    DWORD PTR [edi+0x15],1
  41b1bc:	inc    ecx
  41b1bd:	(bad)  
  41b1be:	std    
  41b1bf:	or     bl,bl
  41b1c1:	fimul  DWORD PTR [esi+0x40]
  41b1c5:	icebp  
  41b1c6:	(bad)  
  41b1c7:	pop    ecx
  41b1c8:	int3   
  41b1c9:	in     al,dx
  41b1ca:	sbb    edi,DWORD PTR [ebx]
  41b1cc:	mov    edi,0x70d5f77f
  41b1d1:	test   BYTE PTR [ecx],dh
  41b1d3:	mov    ds:0xd7913f51,al
  41b1d8:	mov    ecx,0x98c455c
  41b1dd:	xlat   BYTE PTR ds:[ebx]
  41b1de:	and    ecx,edi
  41b1e0:	xor    edi,DWORD PTR [ecx-0x67]
  41b1e3:	ror    BYTE PTR [ebx],cl
  41b1e5:	and    ebp,DWORD PTR [eax*1-0x58068392]
  41b1ec:	pop    ds
  41b1ed:	lods   eax,DWORD PTR ds:[esi]
  41b1ee:	jns    0x41b263
  41b1f0:	test   eax,0x7d9b41d2
  41b1f5:	test   BYTE PTR [eax+0x767fbbd3],ch
  41b1fb:	in     eax,dx
  41b1fc:	mov    ds:0x442fbb7c,eax
  41b201:	mov    al,ds:0xb942ea20
  41b206:	mov    ds:0x881fac94,eax
  41b20b:	push   esp
  41b20c:	xchg   ecx,eax
  41b20d:	add    ebp,DWORD PTR ds:0x577a14ec
  41b213:	jne    0x41b1ae
  41b215:	call   0x73fbcc96
  41b21a:	and    eax,0x546bb3c5
  41b21f:	loop   0x41b284
  41b221:	jnp    0x41b270
  41b223:	cmc    
  41b224:	mov    al,ds:0x9c84e278
  41b229:	ja     0x41b26c
  41b22b:	ins    DWORD PTR es:[edi],dx
  41b22c:	or     eax,esp
  41b22e:	dec    edx
  41b22f:	(bad)  
  41b230:	push   eax
  41b231:	(bad)  
  41b232:	outs   dx,DWORD PTR ds:[esi]
  41b233:	retf   
  41b234:	push   cs
  41b235:	repnz daa 
  41b237:	pop    es
  41b238:	push   ss
  41b239:	mov    al,BYTE PTR [ecx-0x7c71d413]
  41b23f:	push   ecx
  41b240:	ret    0x5d71
  41b243:	dec    eax
  41b244:	xchg   BYTE PTR [ebx],al
  41b246:	add    eax,0xe10f3f14
  41b24b:	out    0x25,eax
  41b24d:	idiv   BYTE PTR [eax+ecx*1]
  41b250:	mov    bx,0x34c7
  41b254:	je     0x41b1e8
  41b256:	cld    
  41b257:	dec    ebp
  41b258:	adc    eax,0x8952a65d
  41b25d:	fisttp DWORD PTR [eax-0xa]
  41b260:	lea    edi,[edx+0x47]
  41b263:	dec    ebp
  41b264:	xor    eax,0x72f07f3d
  41b269:	dec    esi
  41b26a:	or     ah,BYTE PTR [edx+0x2c]
  41b26d:	xor    eax,0x2a67db53
  41b272:	retf   
  41b273:	mov    ds,WORD PTR [esi]
  41b275:	xor    al,0xf5
  41b277:	xor    edi,edi
  41b279:	ficomp WORD PTR [ebx-0x5c]
  41b27c:	push   edi
  41b27d:	stos   DWORD PTR es:[edi],eax
  41b27e:	jbe    0x41b230
  41b280:	sahf   
  41b281:	cmp    BYTE PTR [ecx+0x25],dl
  41b284:	call   0x9f92d61d
  41b289:	call   0xb6c0:0x75d31d5f
  41b290:	dec    edi
  41b291:	dec    esp
  41b292:	js     0x41b2e9
  41b294:	leave  
  41b295:	inc    esp
  41b296:	xchg   esp,eax
  41b297:	mov    esi,0x1c8c4802
  41b29c:	mov    cl,0xac
  41b29e:	test   eax,0xb36da53b
  41b2a3:	aad    0x26
  41b2a5:	xchg   edx,eax
  41b2a6:	dec    esp
  41b2a7:	or     DWORD PTR [esi],eax
  41b2a9:	dec    edi
  41b2aa:	jge    0x41b248
  41b2ac:	xor    ebp,DWORD PTR [edi]
  41b2ae:	sbb    al,0x6c
  41b2b0:	test   DWORD PTR [ecx+0x59],edi
  41b2b3:	in     al,0x9f
  41b2b5:	add    eax,DWORD PTR [esi+0x607e6bf]
  41b2bb:	ins    DWORD PTR es:[edi],dx
  41b2bc:	cmp    BYTE PTR [ebp*1-0x73785c3c],al
  41b2c3:	repnz mov ecx,0x42b85bb2
  41b2c9:	push   edi
  41b2ca:	fs inc ebp
  41b2cc:	sub    DWORD PTR ds:0x16e4943e,edx
  41b2d2:	shl    BYTE PTR [ecx+0x5c144f6f],0x6d
  41b2d9:	cmc    
  41b2da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2db:	jne    0x41b2fa
  41b2dd:	push   esi
  41b2de:	icebp  
  41b2df:	sbb    BYTE PTR [edi],dh
  41b2e1:	ss retf 0x23ca
  41b2e5:	in     eax,dx
  41b2e6:	mov    bl,0x57
  41b2e8:	out    dx,eax
  41b2e9:	lods   eax,DWORD PTR ds:[esi]
  41b2ea:	adc    DWORD PTR [edx],esp
  41b2ec:	dec    ecx
  41b2ed:	gs sbb ch,ah
  41b2f0:	jbe    0x41b356
  41b2f2:	inc    ebx
  41b2f3:	inc    ebp
  41b2f4:	xchg   esp,eax
  41b2f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b2f6:	pop    ds
  41b2f7:	jle    0x41b321
  41b2f9:	(bad)  
  41b2fa:	test   al,0xf8
  41b2fc:	inc    edx
  41b2fd:	(bad)  
  41b300:	mov    cl,0x63
  41b302:	mov    eax,ds:0x857a7dd7
  41b307:	leave  
  41b308:	cwde   
  41b309:	repz lea edx,[edi+0x26a080ab]
  41b310:	cmp    bl,bl
  41b312:	repnz iret 
  41b314:	sub    al,0x99
  41b316:	cs push esi
  41b318:	sub    al,0xc
  41b31a:	test   DWORD PTR [edx+ecx*1+0x36],ebx
  41b31e:	js     0x41b380
  41b320:	xchg   ecx,eax
  41b321:	or     al,0x4e
  41b323:	push   0x79032421
  41b328:	pop    esi
  41b329:	cmc    
  41b32a:	in     al,dx
  41b32b:	pop    ebx
  41b32c:	aam    0xd7
  41b32e:	test   edx,ebp
  41b330:	mov    bh,0x13
  41b332:	fldenv ds:0xcb0b6f41
  41b338:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b339:	dec    eax
  41b33a:	shl    edx,0xe9
  41b33d:	scas   eax,DWORD PTR es:[edi]
  41b33e:	popa   
  41b33f:	mov    esi,0x83096a6d
  41b344:	lods   eax,DWORD PTR ds:[esi]
  41b345:	test   al,0x8
  41b347:	and    esp,DWORD PTR [esp+ecx*8+0x47]
  41b34b:	ins    BYTE PTR es:[edi],dx
  41b34c:	or     al,0x4c
  41b34e:	ret    
  41b34f:	fst    DWORD PTR [esi-0x7fb0075d]
  41b355:	mov    DWORD PTR [ecx+esi*8-0x1597cb82],edx
  41b35c:	retf   0xeed7
  41b35f:	out    0x90,al
  41b361:	pop    eax
  41b362:	and    DWORD PTR [ebp+edi*8-0x57],ebp
  41b366:	js     0x41b354
  41b368:	cmp    esp,DWORD PTR ds:0x9525ce2
  41b36e:	mov    edi,0xb3f6b3ea
  41b373:	or     eax,0xf68db15e
  41b378:	nop
  41b379:	stc    
  41b37a:	xchg   ebx,eax
  41b37b:	adc    eax,0x6b7be02d
  41b380:	gs pop bp
  41b383:	mov    edx,0x2e9b4a71
  41b388:	xlat   BYTE PTR ds:[ebx]
  41b389:	cwde   
  41b38a:	pusha  
  41b38b:	mov    es:0xb55823f9,al
  41b391:	dec    ebx
  41b392:	mov    ds:0x3f765007,al
  41b397:	mov    edi,0x1238f3fb
  41b39c:	xchg   esp,eax
  41b39d:	daa    
  41b39e:	pop    es
  41b39f:	call   0xf281:0x81215033
  41b3a6:	pop    esp
  41b3a7:	mov    gs,WORD PTR [eax-0x2eb3e1dc]
  41b3ad:	bound  edx,QWORD PTR [edi]
  41b3af:	push   esi
  41b3b0:	add    DWORD PTR [edx-0x77723bbd],0xd95ecd49
  41b3ba:	test   al,0xfb
  41b3bc:	in     eax,0x94
  41b3be:	pop    ebp
  41b3bf:	int    0x5d
  41b3c1:	ss out 0xb1,al
  41b3c4:	cmp    DWORD PTR [edx-0x73],esp
  41b3c7:	test   al,0x92
  41b3c9:	lahf   
  41b3ca:	lea    esp,[edi+0x22fcd0ec]
  41b3d0:	lds    edi,FWORD PTR [ebx]
  41b3d2:	jbe    0x41b3de
  41b3d4:	adc    DWORD PTR [ebx+0xfd7317f],esp
  41b3da:	sub    eax,0x909cdaae
  41b3df:	pop    eax
  41b3e0:	jmp    0x41b399
  41b3e2:	mov    dl,0x37
  41b3e4:	es jo  0x41b3ec
  41b3e7:	xor    esp,DWORD PTR [esi+0x32]
  41b3ea:	cmp    eax,0x289580b6
  41b3ef:	in     eax,dx
  41b3f0:	or     BYTE PTR [esi-0x3c360775],dh
  41b3f6:	dec    eax
  41b3f7:	test   DWORD PTR [ebx+eax*1],ebx
  41b3fa:	mov    cl,BYTE PTR ds:0xd8067acb
  41b400:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b401:	enter  0x41d7,0xe
  41b405:	ds inc ebx
  41b407:	daa    
  41b408:	nop
  41b409:	add    al,0x8e
  41b40b:	lock mov eax,0x917fec73
  41b411:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b412:	or     BYTE PTR [eax-0xa],0xac
  41b416:	cmp    esi,DWORD PTR [esi-0x4bdaf825]
  41b41c:	push   esp
  41b41d:	ret    0xffb5
  41b420:	das    
  41b421:	pop    esp
  41b422:	lods   al,BYTE PTR ds:[esi]
  41b423:	pop    ecx
  41b424:	inc    edx
  41b425:	stos   DWORD PTR es:[edi],eax
  41b426:	sub    ebx,esp
  41b428:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b429:	xchg   ebx,eax
  41b42a:	out    dx,al
  41b42b:	pop    ds
  41b42c:	ret    
  41b42d:	jl     0x41b411
  41b42f:	cvtps2pd xmm1,xmm3
  41b432:	push   0x1b
  41b434:	jge    0x41b491
  41b436:	cmp    bh,bl
  41b438:	sbb    al,bh
  41b43a:	mov    eax,ds:0x3e51c7ee
  41b43f:	push   esi
  41b441:	jmp    0x65ba:0x71eb6899
  41b448:	pop    ss
  41b449:	inc    BYTE PTR [edi+edi*1-0x209fe26c]
  41b450:	dec    edx
  41b451:	pop    eax
  41b452:	ret    
  41b453:	pop    esi
  41b454:	ret    
  41b455:	push   edi
  41b456:	sahf   
  41b457:	idiv   ebp
  41b459:	into   
  41b45a:	xor    DWORD PTR [ecx-0x7b],0xffffff8f
  41b45e:	mov    ah,0xa6
  41b460:	push   ecx
  41b461:	push   edi
  41b462:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b463:	mov    ds:0x533fe28d,eax
  41b468:	fiadd  WORD PTR [edx-0x5a1bb778]
  41b46e:	stos   DWORD PTR es:[edi],eax
  41b46f:	adc    edi,DWORD PTR [ebx+ecx*8-0x1d]
  41b473:	out    0xb2,eax
  41b475:	cmp    DWORD PTR [eax+0x5150af93],ecx
  41b47b:	addr16 das 
  41b47d:	leave  
  41b47e:	imul   ebp,DWORD PTR [edi-0x4e],0x88725b74
  41b485:	les    esi,FWORD PTR [eax]
  41b487:	push   ebp
  41b488:	in     eax,dx
  41b489:	mov    ch,0xee
  41b48b:	ror    BYTE PTR [esi],1
  41b48d:	dec    ebx
  41b48e:	(bad)  
  41b48f:	mov    dh,0x8f
  41b491:	mov    ecx,0xa56e0090
  41b496:	clc    
  41b497:	jge    0x41b473
  41b499:	outs   dx,DWORD PTR ds:[esi]
  41b49a:	into   
  41b49b:	xor    eax,DWORD PTR [esi]
  41b49d:	inc    ecx
  41b49e:	inc    eax
  41b49f:	push   0x18dccdb1
  41b4a4:	icebp  
  41b4a5:	je     0x41b504
  41b4a7:	clc    
  41b4a8:	into   
  41b4a9:	adc    BYTE PTR [esi+0x5fd88df9],bh
  41b4af:	lods   al,BYTE PTR ds:[esi]
  41b4b0:	into   
  41b4b1:	mov    edi,0x8f831aa4
  41b4b6:	(bad)  
  41b4b7:	out    dx,eax
  41b4b8:	or     BYTE PTR [ecx+eax*1],bl
  41b4bb:	mov    ds:0x8ac2ca5f,eax
  41b4c0:	ror    esi,cl
  41b4c2:	and    ah,BYTE PTR [ecx-0x2928cb26]
  41b4c8:	loopne 0x41b505
  41b4ca:	sub    DWORD PTR [edi],ebx
  41b4cc:	jmp    0x328e:0x18cb9933
  41b4d3:	ss add ch,dl
  41b4d6:	pushf  
  41b4d7:	add    edi,edi
  41b4d9:	mov    ds:0x1c4cd45d,eax
  41b4de:	in     eax,dx
  41b4df:	inc    ebx
  41b4e0:	cmp    DWORD PTR [ecx],edx
  41b4e2:	retf   0xa308
  41b4e5:	and    ecx,DWORD PTR [ebp+0x6dbb10b8]
  41b4eb:	xchg   ecx,eax
  41b4ec:	aaa    
  41b4ed:	sbb    eax,DWORD PTR [esi+edx*1]
  41b4f0:	jno    0x41b56f
  41b4f2:	xor    al,0x69
  41b4f4:	cwde   
  41b4f5:	inc    ebp
  41b4f6:	jne    0x41b569
  41b4f8:	or     ebx,DWORD PTR [ebp-0x1cb270e0]
  41b4fe:	mov    cl,0xbc
  41b500:	xchg   edx,eax
  41b501:	sub    BYTE PTR [edi+0x77],dl
  41b504:	retf   
  41b505:	dec    esp
  41b506:	js     0x41b4d9
  41b508:	jecxz  0x41b4d0
  41b50a:	xor    al,dh
  41b50c:	repz adc ah,cl
  41b50f:	pop    ebp
  41b510:	test   al,0x55
  41b512:	scas   eax,DWORD PTR es:[edi]
  41b513:	imul   ebx,DWORD PTR [eax],0x6172f0cd
  41b519:	clc    
  41b51a:	mov    ebx,0x4d426617
  41b51f:	loop   0x41b50e
  41b521:	jmp    0x7d4932ee
  41b526:	mov    dh,0x22
  41b528:	cmp    eax,0xba179992
  41b52d:	fisub  DWORD PTR [esi-0x24]
  41b530:	rol    DWORD PTR [ecx-0x1fefccd3],1
  41b536:	and    DWORD PTR [eax+0x1f],edi
  41b539:	(bad)  
  41b53a:	gs leave 
  41b53c:	xchg   BYTE PTR [ebx+0x5b2ccc01],bl
  41b542:	sub    DWORD PTR [eax+0x572b13fe],esp
  41b548:	dec    edx
  41b549:	jo     0x41b4f7
  41b54b:	fstp   TBYTE PTR [edx-0x6e]
  41b54e:	les    esp,FWORD PTR [ebx-0x5]
  41b551:	jecxz  0x41b4df
  41b553:	xchg   edx,eax
  41b554:	ds sbb eax,0xf6b8b4e3
  41b55a:	sti    
  41b55b:	dec    esi
  41b55c:	fnstenv [esi-0x41]
  41b55f:	aam    0x82
  41b561:	adc    DWORD PTR [edx+0x6],edx
  41b564:	stos   BYTE PTR es:[edi],al
  41b565:	pushf  
  41b566:	jge    0x41b54a
  41b568:	aaa    
  41b569:	inc    esp
  41b56a:	push   ss
  41b56b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b56c:	in     eax,0xe2
  41b56e:	ret    
  41b56f:	mov    ebx,eax
  41b571:	test   bh,bh
  41b573:	ins    DWORD PTR es:[edi],dx
  41b574:	jmp    0x41b518
  41b576:	iret   
  41b577:	jns    0x41b5da
  41b579:	and    eax,0xfa79ffa5
  41b57e:	leave  
  41b57f:	pushf  
  41b580:	pusha  
  41b581:	mov    ebx,0xbfbbe997
  41b586:	mov    edx,0x54d966f6
  41b58b:	cmp    al,0x3c
  41b58d:	ins    BYTE PTR es:[edi],dx
  41b58e:	jle    0x41b5a7
  41b590:	mov    ds:0xc12225c2,eax
  41b595:	mov    fs,WORD PTR [edx+ebx*1]
  41b598:	dec    ebx
  41b599:	inc    ebp
  41b59a:	neg    BYTE PTR [esi+edx*4+0x5f]
  41b59e:	xchg   edx,eax
  41b59f:	pusha  
  41b5a0:	sbb    dh,dl
  41b5a2:	mov    WORD PTR [bp+di+0x5d3f],cs
  41b5a7:	mov    ebp,cs
  41b5a9:	jbe    0x41b554
  41b5ab:	xlat   BYTE PTR ds:[ebx]
  41b5ac:	jnp    0x41b5fc
  41b5ae:	mov    edi,0xeb4a68e9
  41b5b3:	mov    ah,0xc5
  41b5b5:	inc    edx
  41b5b6:	lods   eax,DWORD PTR ss:[esi]
  41b5b8:	mov    ah,0x62
  41b5ba:	or     DWORD PTR [ebx],ebp
  41b5bc:	in     eax,0x3f
  41b5be:	jmp    0x81b74f07
  41b5c3:	call   FWORD PTR [ecx]
  41b5c5:	in     eax,0xed
  41b5c7:	loop   0x41b5e8
  41b5c9:	pop    ss
  41b5ca:	pop    ss
  41b5cb:	xor    edx,DWORD PTR [edi+0x522662a2]
  41b5d1:	ja     0x41b56f
  41b5d3:	xchg   ebp,eax
  41b5d4:	popa   
  41b5d5:	push   cs
  41b5d6:	repz std 
  41b5d8:	mov    WORD PTR [esi+0x14b81153],gs
  41b5de:	fsub   st,st(0)
  41b5e0:	jmp    0x41b5f5
  41b5e2:	push   edi
  41b5e3:	pop    es
  41b5e4:	jnp    0x41b573
  41b5e6:	add    eax,0xaa5df131
  41b5eb:	mov    dh,0xe4
  41b5ed:	pop    ds
  41b5ee:	add    BYTE PTR [ecx],ch
  41b5f0:	jp     0x41b5af
  41b5f2:	(bad)  
  41b5f3:	fstp   TBYTE PTR [esi]
  41b5f5:	inc    ebp
  41b5f6:	cmp    eax,0x8b83dcbf
  41b5fb:	mov    edx,0xc3aaee48
  41b600:	push   ebp
  41b601:	inc    ebx
  41b602:	push   es
  41b603:	xchg   ebx,eax
  41b604:	outs   dx,DWORD PTR ds:[esi]
  41b605:	push   edx
  41b606:	clc    
  41b607:	iret   
  41b608:	adc    esi,DWORD PTR [esp+edi*1-0x5d]
  41b60c:	jecxz  0x41b67e
  41b60e:	fwait
  41b60f:	mov    ecx,0xbcd384ff
  41b614:	fistp  QWORD PTR [eax+0x829789e]
  41b61a:	shl    ebx,cl
  41b61c:	pusha  
  41b61d:	xor    DWORD PTR [ecx+0x42c700cd],0x89346168
  41b627:	addr16 jbe 0x41b629
  41b62a:	shl    DWORD PTR [edx],0xb
  41b62d:	add    al,0x46
  41b62f:	or     ah,bl
  41b631:	xchg   ebx,eax
  41b632:	in     al,0x10
  41b634:	cwde   
  41b635:	add    eax,DWORD PTR [edx]
  41b637:	inc    ebx
  41b638:	(bad)  [eax-0x4c0d9dc5]
  41b63e:	dec    ecx
  41b63f:	jecxz  0x41b629
  41b641:	add    al,0x29
  41b643:	sbb    eax,0x990dcc13
  41b648:	dec    edx
  41b649:	fnsave [edx-0x16]
  41b64c:	jmp    0x65e5fec1
  41b651:	repnz sahf 
  41b653:	jnp    0x41b6b5
  41b655:	cmp    al,0x43
  41b657:	push   es
  41b658:	xchg   BYTE PTR [esi],dl
  41b65a:	mov    edi,edi
  41b65c:	gs js  0x41b624
  41b65f:	in     eax,dx
  41b660:	ins    DWORD PTR es:[edi],dx
  41b661:	fsub   QWORD PTR [ebp+0x52]
  41b664:	repnz mov bl,0xaf
  41b667:	lahf   
  41b668:	adc    BYTE PTR [ebp-0x67],dh
  41b66b:	pop    ebx
  41b66c:	fadd   st,st(1)
  41b66e:	mov    ds:0xa235e3bb,eax
  41b673:	fs xor ah,BYTE PTR ds:[edx+0x6f]
  41b678:	test   al,0x1f
  41b67a:	fbstp  TBYTE PTR [edi+0x13]
  41b67d:	xor    al,BYTE PTR [ebx+0x0]
  41b680:	popf   
  41b681:	popa   
  41b682:	imul   BYTE PTR gs:[ebx+eax*2-0x7e]
  41b687:	leave  
  41b688:	jle    0x41b686
  41b68a:	jmp    0x41b68c
  41b68c:	fnsave ds:0xff9fdd0b
  41b692:	sub    BYTE PTR [eax+0x51],cl
  41b695:	push   edi
  41b696:	in     eax,dx
  41b697:	add    eax,DWORD PTR [ebp+0x2a]
  41b69a:	pop    ecx
  41b69b:	cs das 
  41b69d:	test   eax,0xd87cc0d3
  41b6a2:	pop    edi
  41b6a3:	mov    ebp,0xd37eda79
  41b6a8:	and    al,BYTE PTR [ebp+esi*2-0x4d823847]
  41b6af:	ret    0x90bd
  41b6b2:	cmp    cl,0xbf
  41b6b5:	outs   dx,BYTE PTR ds:[esi]
  41b6b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6b7:	mov    eax,ds:0xd63b968a
  41b6bc:	test   DWORD PTR [ebp+0xd],esp
  41b6bf:	dec    esi
  41b6c0:	mov    DWORD PTR [ebp-0x685fb34f],esi
  41b6c6:	xor    al,0x49
  41b6c8:	ror    BYTE PTR [edx+esi*8],cl
  41b6cb:	into   
  41b6cc:	jecxz  0x41b657
  41b6ce:	popa   
  41b6cf:	dec    eax
  41b6d0:	lock test ebp,0x37dd384a
  41b6d7:	mov    esp,0xe2bb5915
  41b6dc:	add    al,0x2f
  41b6de:	ror    DWORD PTR [ebx],1
  41b6e0:	loope  0x41b6d1
  41b6e2:	iret   
  41b6e3:	push   edi
  41b6e4:	sub    bl,BYTE PTR [eax-0x42]
  41b6e7:	and    DWORD PTR [ecx-0x68f291b8],0x4e
  41b6ee:	sbb    DWORD PTR [ebp+0x67],ecx
  41b6f1:	push   es
  41b6f2:	pop    edx
  41b6f3:	xor    eax,0xfc13132b
  41b6f8:	pop    ebp
  41b6f9:	rcr    dh,cl
  41b6fb:	jge    0x41b6ba
  41b6fd:	leave  
  41b6fe:	sbb    eax,0x816f16b7
  41b703:	jbe    0x41b6b5
  41b705:	call   0xf5cf:0x7fa364e2
  41b70c:	and    cl,BYTE PTR [esi+edx*4]
  41b70f:	arpl   WORD PTR [eax-0x1f],di
  41b712:	cmp    BYTE PTR [ebx+0x40050dae],ah
  41b718:	push   eax
  41b719:	mov    dl,0x93
  41b71b:	div    BYTE PTR [edi+0x3f]
  41b71e:	jp     0x41b6f1
  41b720:	(bad)  
  41b721:	sbb    al,0x20
  41b723:	mov    cl,0xb2
  41b725:	fild   DWORD PTR [edx]
  41b727:	sub    bl,BYTE PTR [esp+eiz*4+0x6e]
  41b72b:	dec    edx
  41b72c:	(bad)  
  41b72d:	jp     0x41b70a
  41b72f:	jns    0x41b6ba
  41b731:	cs es cmc 
  41b734:	scas   eax,DWORD PTR es:[edi]
  41b735:	mov    bl,0x91
  41b737:	dec    edx
  41b738:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b739:	out    0xb6,al
  41b73b:	fidivr DWORD PTR [eax+0x3eba74e0]
  41b741:	fadd   DWORD PTR [ebp+edx*8-0x588afe93]
  41b748:	(bad)  
  41b749:	retf   
  41b74a:	xor    BYTE PTR [ebx-0x75d52109],dl
  41b750:	mov    edx,0x22428bb1
  41b755:	aam    0xa
  41b757:	stos   BYTE PTR es:[edi],al
  41b758:	test   BYTE PTR [ecx-0x66cfe294],ah
  41b75e:	loope  0x41b7d7
  41b760:	inc    ebp
  41b761:	(bad)  
  41b762:	ficom  WORD PTR [esi+0x6df2adb5]
  41b768:	mov    ds,WORD PTR [eax+0x4396b06a]
  41b76e:	leave  
  41b76f:	stc    
  41b770:	fwait
  41b771:	hlt    
  41b772:	div    DWORD PTR [edx-0x7072e28a]
  41b778:	xlat   BYTE PTR ds:[ebx]
  41b779:	test   eax,0x3fa56485
  41b77f:	mov    ch,0xc6
  41b781:	sub    al,0x25
  41b783:	inc    ebx
  41b784:	sbb    bh,al
  41b786:	clc    
  41b787:	add    eax,DWORD PTR cs:[eax]
  41b78a:	push   ecx
  41b78b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b78c:	ins    BYTE PTR es:[edi],dx
  41b78d:	xor    al,0x76
  41b78f:	add    al,0x4c
  41b791:	sub    eax,0xc357fca2
  41b796:	je     0x41b792
  41b798:	cmp    edi,edx
  41b79a:	outs   dx,DWORD PTR ds:[esi]
  41b79b:	aad    0x71
  41b79d:	sti    
  41b79e:	es push esi
  41b7a0:	repz xor al,0x73
  41b7a3:	jb     0x41b7cd
  41b7a5:	in     al,0x83
  41b7a7:	or     al,ah
  41b7a9:	xlat   BYTE PTR ds:[ebx]
  41b7aa:	push   ebx
  41b7ab:	aad    0x77
  41b7ad:	pop    ecx
  41b7ae:	mov    ebp,0xbf90f573
  41b7b3:	sbb    al,BYTE PTR ds:0x5559f0a7
  41b7b9:	mov    bh,0x3d
  41b7bb:	call   0x1cde:0xd183f27b
  41b7c2:	xor    eax,0x63593f92
  41b7c7:	sbb    edi,DWORD PTR [esi-0x4d340053]
  41b7cd:	fistp  WORD PTR [edi-0x4d]
  41b7d0:	jp     0x41b7cd
  41b7d2:	pop    esi
  41b7d3:	ficom  WORD PTR [edi+0x7a]
  41b7d6:	shl    DWORD PTR [edx],1
  41b7d8:	cmp    eax,0xc87aaf42
  41b7dd:	inc    ebx
  41b7de:	adc    cl,bh
  41b7e0:	and    edi,DWORD PTR [edx]
  41b7e2:	and    bh,BYTE PTR [edx-0x37]
  41b7e5:	fdiv   QWORD PTR [eax-0x49]
  41b7e8:	add    ah,BYTE PTR es:[edx]
  41b7eb:	sub    bl,BYTE PTR cs:[edx]
  41b7ee:	or     al,0xf5
  41b7f0:	sbb    BYTE PTR [edi+ebx*1],cl
  41b7f3:	dec    edx
  41b7f4:	pop    eax
  41b7f5:	jg     0x41b83b
  41b7f7:	stos   DWORD PTR es:[edi],eax
  41b7f8:	mov    ds:0xe66c1c6b,eax
  41b7fd:	fmul   QWORD PTR [edi-0x24]
  41b800:	inc    ebp
  41b801:	clc    
  41b802:	aas    
  41b803:	arpl   WORD PTR [eax+0x15],ax
  41b806:	inc    esp
  41b807:	aas    
  41b808:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b809:	outs   dx,BYTE PTR ds:[esi]
  41b80a:	mov    eax,0x159a719d
  41b80f:	retf   0xb120
  41b812:	push   ecx
  41b813:	pop    eax
  41b814:	arpl   WORD PTR [ebx+0x64],di
  41b817:	(bad)
  41b81a:	imul   esp,DWORD PTR [ebp+ecx*1-0x647ecf14],0xffffff99
  41b822:	jae    0x41b7e9
  41b824:	iret   
  41b825:	cmp    al,0x60
  41b827:	arpl   sp,sp
  41b829:	push   ebp
  41b82a:	sub    dl,BYTE PTR [edi]
  41b82c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b82d:	in     al,dx
  41b82e:	(bad)  
  41b82f:	cdq    
  41b830:	repz imul al
  41b833:	daa    
  41b834:	adc    DWORD PTR [ebx],0x2f
  41b837:	jp     0x41b844
  41b839:	pop    es
  41b83a:	ret    
  41b83b:	mov    eax,0x963340a8
  41b840:	mov    bh,0x4a
  41b842:	jecxz  0x41b87c
  41b844:	inc    ebx
  41b845:	dec    esi
  41b846:	cmc    
  41b847:	mov    cl,0x72
  41b849:	cmp    DWORD PTR ds:0x1d9aa3dd,ebp
  41b84f:	lods   eax,DWORD PTR ds:[esi]
  41b850:	data16 (bad) 
  41b852:	mov    eax,ds:0x97a257d0
  41b857:	pop    ds
  41b858:	inc    eax
  41b859:	loop   0x41b864
  41b85b:	test   al,0x15
  41b85d:	mov    ecx,0x4dc5f56b
  41b862:	mov    al,ds:0xc1f4c503
  41b867:	repz dec edi
  41b869:	shl    BYTE PTR [edx],0xbf
  41b86c:	xor    al,0x59
  41b86e:	outs   dx,DWORD PTR ds:[esi]
  41b86f:	dec    ebp
  41b870:	xor    bl,BYTE PTR [edx+0x67]
  41b873:	(bad)  
  41b874:	test   BYTE PTR [edx+ebp*8-0x19af0cf],dl
  41b87b:	fidivr WORD PTR [ebx]
  41b87d:	dec    eax
  41b87e:	adc    DWORD PTR [esi],ecx
  41b880:	push   esi
  41b881:	mov    bl,0x38
  41b883:	mov    edx,0x4f42380e
  41b888:	xchg   edx,eax
  41b889:	adc    BYTE PTR [esi+edx*2],cl
  41b88c:	adc    DWORD PTR [edx+0x70],0xa85cf753
  41b893:	jp     0x41b87b
  41b895:	cld    
  41b896:	or     eax,DWORD PTR [esi+0x4e2d37a7]
  41b89c:	pop    ds
  41b89d:	adc    DWORD PTR [edi-0x113e2e8c],0xffffffc8
  41b8a4:	scas   al,BYTE PTR es:[edi]
  41b8a5:	cmp    ebx,0x3a
  41b8a8:	imul   BYTE PTR [edx-0x20d50e2]
  41b8ae:	xor    DWORD PTR [edi+0x1e],esp
  41b8b1:	cmp    cl,dl
  41b8b3:	aad    0xe6
  41b8b5:	cs jae 0x41b931
  41b8b8:	mov    esp,0xa4c08b1a
  41b8bd:	or     eax,0x32e3aac3
  41b8c2:	imul   edx,edi,0xa576eafc
  41b8c8:	popf   
  41b8c9:	dec    ebp
  41b8ca:	mov    al,0x2e
  41b8cc:	or     BYTE PTR [ebp-0x46efd669],bh
  41b8d2:	in     eax,0x15
  41b8d4:	inc    eax
  41b8d5:	mov    eax,0xdcb79c27
  41b8da:	cmp    ah,BYTE PTR [esi+0x7adb44f6]
  41b8e0:	add    BYTE PTR [eax-0x12819c7a],dh
  41b8e6:	jge    0x41b8ed
  41b8e8:	mov    edx,0xa1ea3919
  41b8ed:	jmp    0xf8a3:0xc9ac148
  41b8f4:	push   ss
  41b8f5:	ins    BYTE PTR es:[edi],dx
  41b8f6:	push   ecx
  41b8f7:	inc    esi
  41b8f8:	fs jmp 0xe116:0xff0e01d1
  41b900:	xchg   BYTE PTR [eax+ecx*1-0x38],ch
  41b904:	dec    ecx
  41b905:	outs   dx,DWORD PTR ds:[esi]
  41b906:	dec    esp
  41b907:	xor    DWORD PTR [esi+0x37],eax
  41b90a:	sub    BYTE PTR [edi],0x91
  41b90d:	rcr    DWORD PTR [esi],1
  41b90f:	out    0x56,al
  41b911:	jmp    0x41b94d
  41b913:	shl    DWORD PTR [ebx],cl
  41b915:	sbb    eax,0x4379875f
  41b91a:	test   BYTE PTR [eax+0x7f],cl
  41b91d:	ins    BYTE PTR es:[edi],dx
  41b91e:	jnp    0x41b96e
  41b920:	cmp    BYTE PTR fs:[esi],dl
  41b923:	imul   ebx,DWORD PTR [ebx-0x65],0xe19a5e53
  41b92a:	dec    ebp
  41b92b:	mov    dl,0xe3
  41b92d:	scas   eax,DWORD PTR es:[edi]
  41b92e:	test   bl,cl
  41b930:	arpl   WORD PTR [ecx],ax
  41b932:	jne    0x41b959
  41b934:	(bad)
  41b937:	sbb    eax,0x680ab96e
  41b93c:	push   es
  41b93d:	retf   0x619a
  41b940:	add    ah,BYTE PTR [ecx+edi*1]
  41b943:	call   0x3a03:0x9551c6c1
  41b94a:	outs   dx,BYTE PTR ds:[esi]
  41b94b:	sub    ebp,DWORD PTR [ecx+0x2a222ad6]
  41b951:	popa   
  41b952:	or     eax,0xa7376d81
  41b957:	test   eax,0x56ddd83f
  41b95c:	(bad)  
  41b95d:	pop    eax
  41b95e:	enter  0xb250,0xf0
  41b962:	push   es
  41b963:	sub    al,0x54
  41b965:	push   edx
  41b966:	sbb    eax,DWORD PTR [edi+0x4f466321]
  41b96c:	pop    edx
  41b96d:	loope  0x41b943
  41b96f:	clc    
  41b970:	shl    DWORD PTR [ebp+0x28],0xe9
  41b974:	cmc    
  41b975:	mov    ds:0x81f4bd45,al
  41b97a:	push   ebp
  41b97b:	fs mov edx,es
  41b97e:	in     al,0xdc
  41b980:	jae    0x41b9b8
  41b982:	inc    ebp
  41b983:	jp     0x41b958
  41b985:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b986:	add    al,0x37
  41b988:	push   cs
  41b989:	les    ecx,FWORD PTR [eax]
  41b98b:	xor    bh,BYTE PTR [ebx+0x54]
  41b98e:	out    dx,al
  41b98f:	mov    WORD PTR [ecx-0x477665e4],fs
  41b995:	sar    BYTE PTR [ebp-0x7c],0x26
  41b999:	push   es
  41b99a:	loop   0x41b9ef
  41b99c:	test   al,0xc7
  41b99e:	scas   eax,DWORD PTR es:[edi]
  41b99f:	lds    ecx,FWORD PTR [edx]
  41b9a1:	adc    al,0xf0
  41b9a3:	shl    BYTE PTR [ebx-0x2e],0x7d
  41b9a7:	in     eax,0x99
  41b9a9:	sbb    al,0xda
  41b9ab:	sahf   
  41b9ac:	ja     0x41b93d
  41b9ae:	gs jmp 0x2322:0x7c1a25a2
  41b9b6:	jge    0x41b9d7
  41b9b8:	mov    ecx,0x7fa701eb
  41b9bd:	sub    BYTE PTR [eax+0x26],dl
  41b9c0:	xor    DWORD PTR [esi],ecx
  41b9c2:	jb     0x41ba1e
  41b9c4:	ins    BYTE PTR es:[edi],dx
  41b9c5:	jno    0x41b9c5
  41b9c7:	sbb    dh,bl
  41b9c9:	xor    eax,0xe364365
  41b9ce:	es std 
  41b9d0:	adc    DWORD PTR [esi],edi
  41b9d2:	jo     0x41b97b
  41b9d4:	add    ebp,edi
  41b9d6:	and    al,0x3e
  41b9d8:	je     0x41b962
  41b9da:	jne    0x41b9e6
  41b9dc:	xchg   esp,eax
  41b9dd:	and    BYTE PTR [edx-0x1b],ch
  41b9e0:	or     BYTE PTR [esi-0x7a],bl
  41b9e3:	jp     0x41b9a4
  41b9e5:	jne    0x41b9db
  41b9e7:	loop   0x41ba05
  41b9e9:	in     al,0xae
  41b9eb:	mov    eax,ds:0x30928e69
  41b9f0:	and    ebp,DWORD PTR [edx-0x7c472bcf]
  41b9f6:	cmp    DWORD PTR [edx-0x2d896db3],esp
  41b9fc:	mov    ebx,gs
  41b9fe:	clc    
  41b9ff:	(bad)  [edx]
  41ba01:	jp     0x41b992
  41ba03:	clc    
  41ba04:	fdivr  st(4),st
  41ba06:	jb     0x41ba11
  41ba08:	sbb    DWORD PTR gs:[esi-0x498442c1],edi
  41ba0f:	pop    ebp
  41ba10:	adc    al,BYTE PTR [edi]
  41ba12:	je     0x41b995
  41ba14:	mov    BYTE PTR [esp+eiz*8],al
  41ba17:	clc    
  41ba18:	hlt    
  41ba19:	cmp    eax,0x5bc50d9e
  41ba1e:	jl     0x41ba76
  41ba20:	jb     0x41ba47
  41ba22:	xlat   BYTE PTR ds:[ebx]
  41ba23:	retf   
  41ba24:	pusha  
  41ba25:	pop    esi
  41ba26:	or     BYTE PTR [ecx+0x52],bl
  41ba29:	mov    bl,0x4
  41ba2b:	mov    bh,0x6d
  41ba2d:	jbe    0x41b9e2
  41ba2f:	or     dh,ch
  41ba31:	push   ss
  41ba32:	push   esp
  41ba33:	jne    0x41ba69
  41ba35:	outs   dx,BYTE PTR ds:[esi]
  41ba36:	xchg   ecx,eax
  41ba37:	cmp    al,0x53
  41ba39:	dec    eax
  41ba3a:	or     bl,BYTE PTR [esi+0x1fe8cb87]
  41ba40:	push   cs
  41ba41:	dec    eax
  41ba42:	ins    DWORD PTR es:[edi],dx
  41ba43:	dec    ebp
  41ba44:	mov    ecx,0x27051199
  41ba49:	xlat   BYTE PTR ds:[ebx]
  41ba4a:	push   esi
  41ba4b:	call   0xfc5d110b
  41ba50:	and    DWORD PTR [eax-0x2770488f],edx
  41ba56:	pop    ecx
  41ba57:	pop    esi
  41ba58:	fucomi st,st(7)
  41ba5a:	cmp    ah,BYTE PTR [ebx+edx*4-0x75f1edba]
  41ba61:	arpl   WORD PTR [esi+0x45],sp
  41ba64:	call   0xa3f3:0xe61c4e12
  41ba6b:	mov    ah,0x84
  41ba6d:	out    0x95,eax
  41ba6f:	mov    ebx,0xb9ee2cfa
  41ba74:	lds    esp,FWORD PTR [edi+0x40e7a3e7]
  41ba7a:	ret    
  41ba7b:	fidiv  WORD PTR [ebx-0x1751685c]
  41ba81:	stc    
  41ba82:	add    esp,DWORD PTR [edx+eax*8-0x4805bad5]
  41ba89:	push   es
  41ba8a:	xchg   ebx,eax
  41ba8b:	pop    es
  41ba8c:	lods   al,BYTE PTR ds:[esi]
  41ba8d:	lods   al,BYTE PTR ds:[esi]
  41ba8e:	fadd   QWORD PTR ds:0x7a81da60
  41ba94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba95:	mov    esp,0x981138ab
  41ba9a:	in     eax,dx
  41ba9b:	adc    ah,0xa1
  41ba9e:	push   edx
  41ba9f:	inc    ebp
  41baa0:	mov    ebp,0x79f332e6
  41baa5:	test   dh,al
  41baa7:	push   edx
  41baa8:	xchg   edi,eax
  41baa9:	jp     0x41ba96
  41baab:	enter  0xb7c8,0x4b
  41baaf:	mov    BYTE PTR [edi],ah
  41bab1:	stc    
  41bab2:	scas   eax,DWORD PTR es:[edi]
  41bab3:	push   ebp
  41bab4:	loope  0x41bafb
  41bab6:	jae    0x41bb00
  41bab8:	push   ds
  41bab9:	cdq    
  41baba:	push   es
  41babb:	nop
  41babc:	dec    ecx
  41babd:	dec    esp
  41babe:	mov    dh,0xe8
  41bac0:	out    dx,al
  41bac1:	jmp    0x41bb33
  41bac3:	cmp    BYTE PTR [edx],al
  41bac5:	fist   WORD PTR [eax+0x5e438940]
  41bacb:	pop    ds
  41bacc:	push   ecx
  41bacd:	leave  
  41bace:	not    BYTE PTR [ebx-0x45]
  41bad1:	sbb    ch,BYTE PTR [ecx]
  41bad3:	loop   0x41ba88
  41bad5:	xchg   al,dh
  41bad7:	sar    BYTE PTR [edx+0x207bb309],0x50
  41bade:	fnstcw WORD PTR [ebx-0x7e]
  41bae1:	loopne 0x41bb3f
  41bae3:	pusha  
  41bae4:	cwde   
  41bae5:	aas    
  41bae6:	test   al,0xef
  41bae8:	sub    esp,esp
  41baea:	cmp    BYTE PTR [eax],dl
  41baec:	jbe    0x41ba9b
  41baee:	xor    bl,BYTE PTR [esp+eax*4+0x70c77345]
  41baf5:	cmp    BYTE PTR [eax-0x1d4a0d61],dl
  41bafb:	imul   esp,DWORD PTR [eax-0x3ab5eecf],0xffffff88
  41bb02:	shr    DWORD PTR [eax+0x5610362],1
  41bb08:	iret   
  41bb09:	jnp    0x41bb8a
  41bb0b:	fcmovnu st,st(1)
  41bb0d:	es fwait
  41bb0f:	jns    0x41bb23
  41bb11:	mov    bl,0x6
  41bb13:	gs jbe 0x41bb36
  41bb16:	imul   edx,DWORD PTR [edx-0x7caf1208],0xffffffce
  41bb1d:	es aad 0xb2
  41bb20:	mov    ah,0x27
  41bb22:	dec    edx
  41bb23:	popf   
  41bb24:	push   ecx
  41bb25:	mov    WORD PTR [ebx+0x52],?
  41bb28:	cmc    
  41bb29:	sbb    eax,0x2a8a8e37
  41bb2e:	mov    edx,0x8a074ca6
  41bb33:	sti    
  41bb34:	mov    DWORD PTR [eax-0x19],eax
  41bb37:	repnz in eax,0x3b
  41bb3a:	pop    edx
  41bb3b:	xor    eax,0x73003ff1
  41bb40:	or     cl,BYTE PTR [esi-0x76118e8b]
  41bb46:	test   DWORD PTR [ecx],ebx
  41bb48:	cmp    eax,DWORD PTR [eax+0x4ff8ec85]
  41bb4e:	(bad)  
  41bb4f:	arpl   WORD PTR [ecx+0x3a],sp
  41bb52:	sub    ch,0x25
  41bb55:	jle    0x41bb67
  41bb57:	fcom   DWORD PTR [eax-0x57]
  41bb5a:	adc    ebp,DWORD PTR [edx+ecx*1]
  41bb5d:	sbb    BYTE PTR ds:0xd8b27b21,al
  41bb63:	pushf  
  41bb64:	mov    ds:0xea344053,al
  41bb69:	adc    DWORD PTR [ebx-0x6f5afa80],esi
  41bb6f:	(bad)  
  41bb70:	jne    0x41bb9e
  41bb72:	fiadd  WORD PTR [esi-0x15]
  41bb75:	xchg   esp,eax
  41bb76:	xor    eax,0x234768a
  41bb7b:	jmp    0x5f881892
  41bb80:	sti    
  41bb81:	sub    al,0x8
  41bb83:	mov    esi,0x26d4dcf5
  41bb88:	mov    cl,0x21
  41bb8a:	rcl    BYTE PTR [esi-0x18],0x9b
  41bb8e:	fdiv   DWORD PTR [edx-0x59761d2d]
  41bb94:	(bad)  
  41bb95:	cmc    
  41bb96:	(bad)  
  41bb99:	push   ebx
  41bb9a:	jne    0x41bb7b
  41bb9c:	mov    dl,0x9c
  41bb9e:	aam    0xdd
  41bba0:	inc    eax
  41bba1:	dec    DWORD PTR ds:0x895aebec
  41bba7:	ins    DWORD PTR es:[edi],dx
  41bba8:	sar    BYTE PTR [ecx-0x101d0cca],0x46
  41bbaf:	xor    ebp,DWORD PTR [ebx+0x418d885]
  41bbb5:	pop    eax
  41bbb6:	xor    eax,0xe7495f57
  41bbbb:	inc    esi
  41bbbc:	fstp   QWORD PTR [eax-0x75]
  41bbbf:	pop    ebp
  41bbc0:	int3   
  41bbc1:	popf   
  41bbc2:	pop    ebx
  41bbc3:	sbb    al,0x10
  41bbc5:	adc    ch,BYTE PTR [ebx]
  41bbc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bbc8:	mov    DWORD PTR [eax-0x37],esi
  41bbcb:	mov    esp,0x78a4e776
  41bbd1:	pushf  
  41bbd2:	(bad)  
  41bbd3:	xchg   edx,eax
  41bbd4:	add    DWORD PTR [esi],ecx
  41bbd6:	cmp    ebp,esp
  41bbd8:	mov    ah,0xf9
  41bbda:	adc    ecx,DWORD PTR [ecx]
  41bbdc:	mov    ecx,0x691fdd19
  41bbe1:	inc    ebp
  41bbe2:	cdq    
  41bbe3:	or     BYTE PTR [ecx],bh
  41bbe5:	iret   
  41bbe6:	push   ss
  41bbe7:	hlt    
  41bbe8:	xchg   ecx,eax
  41bbe9:	push   ecx
  41bbea:	sbb    DWORD PTR [edi-0x2e38b537],esp
  41bbf0:	test   eax,0x1ac93193
  41bbf5:	cmp    eax,0xa5d2e3b5
  41bbfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bbfb:	loop   0x41bc28
  41bbfd:	push   cs
  41bbfe:	js     0x41bc16
  41bc00:	aam    0x8b
  41bc02:	ror    BYTE PTR [eax+0x65],cl
  41bc05:	adc    bh,BYTE PTR [edi+0x27fa1319]
  41bc0b:	push   ecx
  41bc0c:	push   ds
  41bc0d:	dec    ebx
  41bc0e:	call   DWORD PTR [edi+0x2b]
  41bc11:	pop    ebp
  41bc12:	daa    
  41bc13:	or     cl,BYTE PTR [esi+eax*1]
  41bc16:	jmp    0x3c4af265
  41bc1b:	inc    edx
  41bc1c:	adc    BYTE PTR [ebp+0x7a],dh
  41bc1f:	fsub   DWORD PTR [edx]
  41bc21:	aam    0x61
  41bc23:	cs push 0x55
  41bc26:	retf   0xc595
  41bc29:	add    eax,0xf807049c
  41bc2e:	mov    DWORD PTR [eax],edi
  41bc30:	mov    ebx,0x4b4bcd14
  41bc35:	or     DWORD PTR [ebx-0x3b],0xfffffff6
  41bc39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc3a:	test   eax,0x78003236
  41bc3f:	ja     0x41bc9c
  41bc41:	sbb    eax,0xf15df72b
  41bc46:	push   edi
  41bc47:	pop    esp
  41bc48:	xor    eax,esp
  41bc4a:	or     BYTE PTR [eax-0x24],0xe0
  41bc4e:	jno    0x41bc4e
  41bc50:	or     ah,BYTE PTR [esi+0x61f32914]
  41bc56:	dec    ebp
  41bc57:	push   ebp
  41bc58:	mov    ah,0x25
  41bc5a:	cmp    ebp,esi
  41bc5c:	xor    BYTE PTR [edi],0x3
  41bc5f:	xor    BYTE PTR [edi-0x69],al
  41bc62:	jo     0x41bcc4
  41bc64:	arpl   si,di
  41bc66:	fnstsw WORD PTR [edi+0x67479844]
  41bc6c:	fwait
  41bc6d:	jg     0x41bc6b
  41bc6f:	fidivr DWORD PTR [ebp-0x29ca4a09]
  41bc75:	shl    DWORD PTR [edi],1
  41bc77:	mov    ch,0xff
  41bc79:	mov    WORD PTR [edi+0x72372064],?
  41bc7f:	ret    
  41bc80:	dec    ebx
  41bc81:	rcl    DWORD PTR [esi],0xac
  41bc84:	sub    al,al
  41bc86:	jecxz  0x41bc9d
  41bc88:	inc    ebx
  41bc89:	test   eax,0x3d50caf2
  41bc8e:	sbb    ecx,ecx
  41bc90:	mov    eax,0xbd8de857
  41bc95:	xchg   edi,eax
  41bc96:	add    al,0xd0
  41bc98:	or     BYTE PTR [eax+0x64],cl
  41bc9b:	mov    dl,0x6b
  41bc9d:	sub    al,0xc9
  41bc9f:	mov    ebx,0xc06c7071
  41bca4:	and    bh,al
  41bca6:	xchg   ecx,eax
  41bca7:	mov    eax,ds:0xef26e12e
  41bcac:	jmp    0x1b2f82f1
  41bcb1:	add    DWORD PTR [edi-0x31b1a5f8],0xec451eeb
  41bcbb:	mov    esi,0x47e8edaf
  41bcc0:	retf   
  41bcc1:	das    
  41bcc2:	mov    ecx,0x7d688d80
  41bcc7:	outs   dx,BYTE PTR ds:[esi]
  41bcc8:	rol    DWORD PTR [edi+0x35],0x60
  41bccc:	xchg   esi,eax
  41bccd:	push   esi
  41bcce:	and    BYTE PTR [eax-0x5a9004d],dl
  41bcd4:	hlt    
  41bcd5:	mov    ds,WORD PTR [ebx-0x69e68c50]
  41bcdb:	and    eax,0x541d0d0f
  41bce0:	add    ah,BYTE PTR [esi+0x56135d35]
  41bce6:	hlt    
  41bce7:	bound  esp,QWORD PTR [eax+0x18]
  41bcea:	xchg   esi,eax
  41bceb:	jge    0x41bcd4
  41bced:	call   0x2030:0x8cbe5736
  41bcf4:	mov    al,ds:0x79bd5d0a
  41bcf9:	adc    DWORD PTR [eax+0x532c39b0],0xffffffdd
  41bd00:	add    edx,DWORD PTR [edx-0x23]
  41bd03:	inc    edx
  41bd04:	inc    edi
  41bd05:	or     al,0x3b
  41bd07:	aam    0xed
  41bd09:	ins    BYTE PTR es:[edi],dx
  41bd0a:	pop    ebx
  41bd0b:	add    esi,0xeb69f46c
  41bd11:	jnp    0x41bc94
  41bd13:	vpshaw ymm15,xmm1,[ebp-0x7b4d7ba3]
  41bd1c:	pop    ebx
  41bd1d:	xor    BYTE PTR [eax],0x4a
  41bd20:	xchg   edi,eax
  41bd21:	pop    ss
  41bd22:	rol    BYTE PTR [esi+0x6ee83589],cl
  41bd28:	out    0xf2,eax
  41bd2a:	pushf  
  41bd2b:	push   esi
  41bd2c:	outs   dx,DWORD PTR ds:[esi]
  41bd2d:	daa    
  41bd2e:	fldenv [edi]
  41bd30:	in     al,dx
  41bd31:	ror    BYTE PTR [eax+0x46f6bb0a],0x93
  41bd38:	add    esp,DWORD PTR [ebx]
  41bd3a:	adc    DWORD PTR ds:0xe557164f,edx
  41bd40:	sub    edi,0x2d
  41bd43:	mov    bl,0x5a
  41bd45:	and    BYTE PTR [edi],bh
  41bd47:	lods   eax,DWORD PTR ds:[esi]
  41bd48:	xor    eax,DWORD PTR [esi]
  41bd4a:	outs   dx,DWORD PTR ds:[esi]
  41bd4b:	and    bl,BYTE PTR ss:[ebx+0x65]
  41bd4f:	sbb    DWORD PTR [eax-0x518a1259],esp
  41bd55:	mov    BYTE PTR [ebp+ecx*8+0x4a],al
  41bd59:	mov    ah,0xb
  41bd5b:	mov    esi,0x818ad1bb
  41bd60:	add    al,0x62
  41bd62:	out    dx,eax
  41bd63:	jb     0x41bcfc
  41bd65:	fsubr  st(0),st
  41bd67:	adc    BYTE PTR [ebx-0x6a1373de],bl
  41bd6d:	inc    esp
  41bd6e:	or     bh,BYTE PTR [ecx+0x1e75c468]
  41bd74:	popa   
  41bd75:	pop    ds
  41bd76:	ret    0x9018
  41bd79:	and    esp,DWORD PTR [ebx+ecx*2-0xd679c9c]
  41bd80:	inc    eax
  41bd81:	test   eax,0x659674c5
  41bd86:	jecxz  0x41bd1e
  41bd88:	and    al,BYTE PTR [edx-0x45]
  41bd8b:	lea    esi,[eax-0x62]
  41bd8e:	fwait
  41bd8f:	mov    esp,0xf2631029
  41bd94:	pop    ds
  41bd95:	xchg   ecx,eax
  41bd96:	cdq    
  41bd97:	les    ebx,FWORD PTR [eax+ebx*2]
  41bd9a:	xor    al,0xf9
  41bd9c:	mov    cl,0x37
  41bd9e:	cmc    
  41bd9f:	sub    DWORD PTR [esi+esi*2+0x4e3e3378],0xffffffbe
  41bda7:	rcr    ebx,0x67
  41bdaa:	and    BYTE PTR [esi],bl
  41bdac:	rcl    BYTE PTR [edi+edi*8-0x2d],cl
  41bdb0:	pop    esi
  41bdb1:	inc    edx
  41bdb2:	ss cld 
  41bdb4:	sbb    al,0xa6
  41bdb6:	lock fst QWORD PTR gs:[ebx+0x12]
  41bdbb:	jb     0x41bd86
  41bdbd:	aaa    
  41bdbe:	int3   
  41bdbf:	cli    
  41bdc0:	jns    0x41be1c
  41bdc2:	xor    eax,0x76c7db34
  41bdc7:	mov    esp,0x67ae8a45
  41bdcc:	pop    eax
  41bdcd:	in     al,0xd
  41bdcf:	jno    0x41bd91
  41bdd1:	push   es
  41bdd2:	mov    dh,0x81
  41bdd4:	movhps xmm7,QWORD PTR [edx-0x7fa3f459]
  41bddb:	outs   dx,BYTE PTR ds:[esi]
  41bddc:	add    bl,BYTE PTR [edx+ecx*8+0xacd6b55]
  41bde3:	add    eax,0x345a60e4
  41bde8:	test   al,0x3f
  41bdea:	les    esp,FWORD PTR [eax+0x118b1474]
  41bdf0:	test   BYTE PTR [edi+0x517b73ae],dh
  41bdf6:	in     al,dx
  41bdf7:	mov    ecx,0x74a4b0f
  41bdfc:	push   ss
  41bdfd:	mov    bh,0x58
  41bdff:	inc    ebp
  41be00:	push   cs
  41be01:	push   edx
  41be02:	lods   eax,DWORD PTR ds:[esi]
  41be03:	mov    al,0x2c
  41be05:	cs pusha 
  41be07:	jne    0x41bdca
  41be09:	scas   eax,DWORD PTR es:[edi]
  41be0a:	xchg   edi,eax
  41be0b:	fstp   DWORD PTR [eax+0x35]
  41be0e:	sub    ebx,esi
  41be10:	push   es
  41be11:	xchg   edi,eax
  41be12:	or     al,0x7a
  41be14:	push   ebp
  41be15:	cmp    ebp,DWORD PTR [esi]
  41be17:	ins    DWORD PTR es:[edi],dx
  41be18:	lahf   
  41be19:	xchg   BYTE PTR [edx+0x2059ad41],bl
  41be1f:	sbb    BYTE PTR [edx],cl
  41be21:	ins    BYTE PTR es:[edi],dx
  41be22:	inc    ecx
  41be23:	push   ss
  41be24:	xor    eax,0x88e238d1
  41be29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be2a:	in     eax,dx
  41be2b:	mov    eax,0x73db600
  41be30:	and    DWORD PTR fs:[bp+di-0x2e3b],0xd73c25c8
  41be3a:	push   cs
  41be3b:	fwait
  41be3c:	cmp    ebp,DWORD PTR [eax+0x5f34101c]
  41be42:	jle    0x41bec2
  41be44:	mov    al,ds:0xd1660f92
  41be49:	xlat   BYTE PTR ds:[ebx]
  41be4a:	sbb    al,0x29
  41be4c:	ret    0x1762
  41be4f:	loope  0x41bdeb
  41be51:	xchg   edx,eax
  41be52:	jle    0x41bde6
  41be54:	jmp    0x568c57da
  41be59:	adc    ecx,DWORD PTR [esi-0x7003987]
  41be5f:	(bad)  
  41be61:	clc    
  41be62:	sub    dl,BYTE PTR [ecx]
  41be64:	shl    DWORD PTR [ebx-0x47176e60],cl
  41be6a:	adc    eax,0x6d8f55b8
  41be6f:	xchg   edi,eax
  41be70:	xchg   DWORD PTR [edi-0x6da574bc],esp
  41be76:	mov    edx,0xafb5e1bb
  41be7b:	pusha  
  41be7c:	mov    ch,0x76
  41be7e:	test   eax,0xa88313fb
  41be83:	sub    ebx,DWORD PTR ss:[eax]
  41be86:	and    bh,BYTE PTR [eax+0x2d6b07d6]
  41be8c:	inc    edx
  41be8d:	test   al,0x73
  41be8f:	pop    ebx
  41be90:	add    DWORD PTR [eax+0x79fc7389],esp
  41be96:	mov    fs,WORD PTR [edx-0x56]
  41be99:	lahf   
  41be9a:	pop    edx
  41be9b:	add    al,0x33
  41be9d:	push   ds
  41be9e:	js     0x41be60
  41bea0:	aad    0x9e
  41bea2:	fcmovnbe st,st(4)
  41bea4:	fs cmp al,0xfe
  41bea7:	lahf   
  41bea8:	and    eax,0xc778bae8
  41bead:	xor    bl,BYTE PTR [ebp+0x7e]
  41beb0:	sbb    eax,0xa60d27
  41beb5:	sub    al,0x64
  41beb7:	mov    esi,0x6689c2c8
  41bebc:	sbb    bh,BYTE PTR [edx+edx*8]
  41bebf:	loope  0x41bf28
  41bec1:	pop    eax
  41bec2:	bound  ebx,QWORD PTR [edi-0x225f2e25]
  41bec8:	inc    BYTE PTR [edi]
  41beca:	test   eax,0x8f40cf9c
  41becf:	jge    0x41bed0
  41bed1:	call   0xe3bc:0x281da01f
  41bed8:	daa    
  41bed9:	out    0x5d,al
  41bedb:	push   0xecf614db
  41bee0:	jp     0x41be82
  41bee2:	add    al,0xdd
  41bee4:	in     al,dx
  41bee5:	lea    ebp,ds:[eax]
  41bee8:	loope  0x41beeb
  41beea:	shr    DWORD PTR [edi],1
  41beec:	sub    eax,DWORD PTR [ebp+0x12]
  41beef:	xchg   ebx,eax
  41bef0:	iret   
  41bef1:	cs call 0x38632b68
  41bef7:	scas   eax,DWORD PTR es:[edi]
  41bef8:	jge    0x41bf33
  41befa:	sbb    BYTE PTR [esi-0xb],bh
  41befd:	popf   
  41befe:	idiv   BYTE PTR ds:0xb4f5e6e2
  41bf04:	pop    ebp
  41bf05:	inc    esp
  41bf06:	jle    0x41bebb
  41bf08:	js     0x41be95
  41bf0a:	lds    esp,FWORD PTR [esp+edx*2]
  41bf0d:	das    
  41bf0e:	cmp    eax,0x59fba6e3
  41bf13:	and    eax,0xf53f4287
  41bf18:	ja     0x41bf7d
  41bf1a:	test   eax,0x5351db86
  41bf1f:	mov    WORD PTR [ecx-0x7e],gs
  41bf22:	or     ebx,eax
  41bf24:	xor    eax,0xb5f03cd7
  41bf29:	fs addr16 ja 0x41bfa3
  41bf2d:	mov    bh,0x7c
  41bf2f:	iret   
  41bf30:	push   0xffffffe0
  41bf32:	and    ch,al
  41bf34:	retf   0x7e60
  41bf37:	add    eax,0xe56c6efd
  41bf3c:	aam    0x3f
  41bf3e:	sub    al,0x90
  41bf40:	loop   0x41bfaf
  41bf42:	jbe    0x41bf10
  41bf44:	rol    DWORD PTR [edx],cl
  41bf46:	iret   
  41bf47:	cld    
  41bf48:	inc    ebp
  41bf49:	retf   
  41bf4a:	push   0x23
  41bf4c:	cmp    DWORD PTR [ecx],0xffffffc7
  41bf4f:	sbb    BYTE PTR [ecx],bh
  41bf51:	sahf   
  41bf52:	dec    edi
  41bf53:	(bad)  
  41bf55:	or     ecx,ebp
  41bf57:	adc    BYTE PTR [edi-0x18],ah
  41bf5a:	push   edi
  41bf5b:	and    DWORD PTR [ebp+0x56188ee0],edx
  41bf61:	or     eax,0x2202a9b7
  41bf66:	imul   edi,DWORD PTR [edx+ebp*8-0x80],0x9
  41bf6b:	les    edx,FWORD PTR [eax-0x7cfcd612]
  41bf71:	and    dh,BYTE PTR [esi-0x7fa81977]
  41bf77:	or     ebp,DWORD PTR [esi]
  41bf79:	and    al,0xcd
  41bf7b:	addr16 xchg edx,eax
  41bf7d:	cmp    eax,0x6f782433
  41bf82:	mov    ebp,0x8d057316
  41bf87:	stc    
  41bf88:	mov    al,ds:0xadd9031b
  41bf8d:	scas   al,BYTE PTR es:[edi]
  41bf8e:	or     al,0x9f
  41bf90:	or     ch,bl
  41bf92:	clc    
  41bf93:	bound  eax,QWORD PTR [edx+0x6f]
  41bf96:	xchg   ebx,eax
  41bf97:	mov    WORD PTR [edi+0x4e],fs
  41bf9a:	shr    DWORD PTR [esi+0x16bc516c],1
  41bfa0:	mov    al,0xe4
  41bfa2:	sbb    edi,DWORD PTR [esi]
  41bfa4:	pop    ebp
  41bfa5:	xchg   esp,eax
  41bfa6:	sub    al,0x81
  41bfa8:	clc    
  41bfa9:	mov    ah,0xab
  41bfab:	stos   BYTE PTR es:[edi],al
  41bfac:	loope  0x41bfae
  41bfae:	outs   dx,DWORD PTR ds:[esi]
  41bfaf:	inc    edi
  41bfb0:	daa    
  41bfb1:	mov    bh,BYTE PTR [ecx+eiz*1]
  41bfb4:	inc    ebx
  41bfb5:	sar    dh,cl
  41bfb7:	xor    BYTE PTR [esi],al
  41bfb9:	mov    edi,0x13fcfe21
  41bfbe:	and    BYTE PTR [ecx],dl
  41bfc0:	push   eax
  41bfc1:	pop    ds
  41bfc2:	jns    0x41bfb4
  41bfc4:	hlt    
  41bfc5:	arpl   WORD PTR [edx+esi*2],bx
  41bfc8:	and    eax,DWORD PTR [ecx+0x7f]
  41bfcb:	sti    
  41bfcc:	inc    esi
  41bfcd:	daa    
  41bfce:	fs mov bl,0x7f
  41bfd1:	mov    DWORD PTR [eax+edx*8+0x16],ecx
  41bfd5:	fist   DWORD PTR [ebx+0x51]
  41bfd8:	jb     0x41bf6d
  41bfda:	adc    cl,bh
  41bfdc:	mov    ds,WORD PTR [ecx]
  41bfde:	clc    
  41bfdf:	hlt    
  41bfe0:	mov    bl,0xd0
  41bfe2:	pop    esp
  41bfe3:	out    dx,eax
  41bfe4:	xchg   ch,ah
  41bfe6:	sbb    eax,0x541b95db
  41bfeb:	mov    bh,0xf8
  41bfed:	int    0xc1
  41bfef:	out    0xf8,eax
  41bff1:	xchg   ebx,eax
  41bff2:	pop    esp
  41bff3:	adc    DWORD PTR [eax-0x7774dc03],0xab4211f3
  41bffd:	sub    esp,eax
  41bfff:	ds scas al,BYTE PTR es:[edi]
  41c001:	cdq    
  41c002:	push   ecx
  41c003:	int3   
  41c004:	xor    eax,0x4a9dad44
  41c009:	mov    bl,0x22
  41c00b:	ret    
  41c00c:	rol    DWORD PTR [ebx+0x39e8bfa],0xee
  41c013:	(bad)  
  41c014:	int3   
  41c015:	jmp    0xdefab69d
  41c01a:	cdq    
  41c01b:	cld    
  41c01c:	jb     0x41c05d
  41c01e:	sbb    BYTE PTR [edi+edx*2-0x5f],0x6a
  41c023:	mov    ch,0xde
  41c025:	stos   DWORD PTR es:[edi],eax
  41c026:	cmp    BYTE PTR [ebx+0x38365a5a],bl
  41c02c:	push   ebx
  41c02d:	(bad)  
  41c02e:	repnz mov esp,0x9e4d9952
  41c034:	sbb    ah,bl
  41c036:	loopne 0x41c0b1
  41c038:	call   0x2e4cb69b
  41c03d:	pusha  
  41c03e:	out    0x99,al
  41c040:	loop   0x41bffb
  41c042:	fucomip st,st(6)
  41c044:	sub    dh,bh
  41c046:	je     0x41c0c0
  41c048:	es dec eax
  41c04a:	lahf   
  41c04b:	pop    ecx
  41c04c:	or     dl,cl
  41c04e:	in     eax,0xf1
  41c050:	sub    BYTE PTR [edi+edi*4-0x46ed840d],ah
  41c057:	sbb    DWORD PTR [edx+0x393f6294],esi
  41c05d:	mov    ah,dl
  41c05f:	fbstp  TBYTE PTR [edi-0x5d]
  41c062:	mov    BYTE PTR [eax],bh
  41c064:	aas    
  41c065:	cmp    BYTE PTR ds:0x13871f17,ah
  41c06b:	lahf   
  41c06c:	adc    dl,dl
  41c06e:	cwde   
  41c06f:	mov    bl,0x6c
  41c071:	add    esp,DWORD PTR [edx-0x30]
  41c074:	adc    al,0xd7
  41c076:	mov    edx,0x9a47459e
  41c07b:	icebp  
  41c07c:	sahf   
  41c07d:	xor    esp,DWORD PTR [ebp+0x70]
  41c080:	loop   0x41c04d
  41c082:	and    al,0x8d
  41c084:	or     DWORD PTR [edi],edi
  41c086:	mov    ebx,0x74392d48
  41c08b:	dec    edx
  41c08c:	and    BYTE PTR [ebx-0x26],ch
  41c08f:	jle    0x41c01e
  41c091:	test   al,0x56
  41c093:	push   0xffffff87
  41c095:	pop    ds
  41c096:	cmp    eax,ebx
  41c098:	push   edi
  41c099:	loopne 0x41c03b
  41c09b:	mov    ds:0x3ec076d7,al
  41c0a0:	fcom   QWORD PTR [edx-0x1bbb502]
  41c0a6:	ss (bad) 
  41c0a8:	popf   
  41c0a9:	dec    ecx
  41c0aa:	pop    edx
  41c0ab:	dec    ebx
  41c0ac:	shl    dl,1
  41c0ae:	fisubr DWORD PTR [edi+0x75]
  41c0b1:	or     eax,0x9a18604
  41c0b6:	xchg   ebx,eax
  41c0b7:	push   esp
  41c0b8:	xor    BYTE PTR [edx+0x75422fa1],dl
  41c0be:	(bad)  
  41c0bf:	outs   dx,BYTE PTR ds:[esi]
  41c0c0:	sub    dl,BYTE PTR [ebx+0x700ef304]
  41c0c6:	pop    ecx
  41c0c7:	pop    edi
  41c0c8:	jns    0x41c114
  41c0ca:	jns    0x41c0b1
  41c0cc:	and    al,0xd1
  41c0ce:	fist   WORD PTR [ebp+0x7f]
  41c0d1:	jmp    esi
  41c0d3:	pop    ss
  41c0d4:	mov    esi,0xbe69c714
  41c0d9:	and    ebx,ecx
  41c0db:	push   eax
  41c0dc:	lods   al,BYTE PTR ds:[esi]
  41c0dd:	ror    BYTE PTR [edi],0xd8
  41c0e0:	imul   ebp,DWORD PTR [esi],0x27dbdf2d
  41c0e6:	frstor [ecx*4-0xf5bef1e]
  41c0ed:	or     BYTE PTR [ecx],bh
  41c0ef:	mov    bh,al
  41c0f1:	hlt    
  41c0f2:	add    cl,BYTE PTR [esi+ebx*2]
  41c0f5:	cli    
  41c0f6:	pop    ebp
  41c0f7:	ins    BYTE PTR es:[edi],dx
  41c0f8:	xchg   esp,eax
  41c0f9:	xchg   ecx,eax
  41c0fa:	fild   DWORD PTR [esi]
  41c0fc:	cmp    ah,BYTE PTR [ecx+ecx*1-0x171a8231]
  41c103:	daa    
  41c104:	rcr    DWORD PTR [ecx+0x3b],1
  41c107:	out    dx,al
  41c108:	arpl   WORD PTR [ecx-0xa],ax
  41c10b:	sbb    dl,BYTE PTR [edi+ecx*1]
  41c10e:	push   0xffffffb1
  41c110:	adc    al,dh
  41c112:	int3   
  41c113:	xor    eax,0xb3f71625
  41c118:	pop    ds
  41c119:	popa   
  41c11a:	mov    ?,WORD PTR [ecx+0x16]
  41c11d:	fiadd  DWORD PTR [edi]
  41c11f:	xor    esp,edi
  41c121:	add    BYTE PTR [ebx],al
  41c123:	stc    
  41c124:	add    al,0xd2
  41c126:	dec    ebp
  41c127:	jns    0x41c0d2
  41c129:	and    BYTE PTR [ebp-0x31],0x90
  41c12d:	push   ecx
  41c12e:	dec    ebp
  41c12f:	sti    
  41c130:	jnp    0x41c169
  41c132:	mov    cl,0xd1
  41c134:	stos   BYTE PTR es:[edi],al
  41c135:	ins    DWORD PTR es:[edi],dx
  41c136:	fsubp  st(5),st
  41c138:	dec    esi
  41c139:	(bad)
  41c13d:	loopne 0x41c103
  41c13f:	fs cdq 
  41c141:	and    al,0xcc
  41c143:	arpl   WORD PTR [edi],di
  41c145:	or     bh,ah
  41c147:	das    
  41c148:	dec    esi
  41c149:	stc    
  41c14a:	adc    esp,DWORD PTR [edx-0x5e]
  41c14d:	push   esi
  41c14e:	jecxz  0x41c12a
  41c150:	shl    BYTE PTR [edx+0x2c],cl
  41c153:	xchg   ebx,eax
  41c154:	xchg   esp,eax
  41c155:	adc    al,0xe7
  41c157:	mov    cl,0xdf
  41c159:	test   ch,ah
  41c15b:	jecxz  0x41c131
  41c15d:	mov    WORD PTR [ebp+0x460287f5],cs
  41c163:	cdq    
  41c164:	push   cs
  41c165:	(bad)  
  41c166:	das    
  41c167:	repz mov al,ds:0x840ef08e
  41c16d:	(bad)  
  41c16e:	mov    ebx,0xf05e7ac2
  41c173:	ins    DWORD PTR es:[edi],dx
  41c174:	xchg   ecx,eax
  41c175:	and    DWORD PTR [ecx+eiz*1],esp
  41c178:	cmp    al,0x30
  41c17a:	std    
  41c17b:	mov    edi,0xe5047a53
  41c180:	and    al,0xfd
  41c182:	ins    DWORD PTR es:[edi],dx
  41c183:	retf   0x6729
  41c186:	adc    DWORD PTR [ecx+ecx*1],edi
  41c189:	adc    ch,ah
  41c18b:	sub    esi,eax
  41c18d:	outs   dx,BYTE PTR ds:[esi]
  41c18e:	loop   0x41c1c0
  41c190:	neg    edi
  41c192:	jecxz  0x41c124
  41c194:	(bad)  [edx+edx*8]
  41c197:	popf   
  41c198:	xchg   edi,eax
  41c199:	dec    eax
  41c19a:	and    eax,0xe6b22563
  41c19f:	retf   0xb71c
  41c1a2:	jecxz  0x41c1aa
  41c1a4:	ror    BYTE PTR [edx+0x3f85ef19],1
  41c1aa:	lahf   
  41c1ab:	stos   BYTE PTR es:[edi],al
  41c1ac:	lahf   
  41c1ad:	adc    eax,0x7e78f238
  41c1b2:	iret   
  41c1b3:	jecxz  0x41c21b
  41c1b5:	jle    0x41c22d
  41c1b7:	adc    eax,0xf6e6a741
  41c1bc:	ds int 0x97
  41c1bf:	daa    
  41c1c0:	adc    ecx,ecx
  41c1c2:	mov    dl,0xa1
  41c1c4:	and    BYTE PTR [ebx+0x2c2652d7],al
  41c1ca:	xchg   ebp,eax
  41c1cb:	sub    eax,DWORD PTR [eax]
  41c1cd:	add    BYTE PTR ds:0x212c9161,al
  41c1d3:	imul   eax,DWORD PTR [eax],0x16cc6b5c
  41c1d9:	push   esi
  41c1da:	ins    BYTE PTR es:[edi],dx
  41c1db:	ret    
  41c1dc:	leave  
  41c1dd:	cmc    
  41c1de:	mov    dl,0xd
  41c1e0:	sbb    cl,dl
  41c1e2:	fiadd  DWORD PTR [eax+0x42]
  41c1e5:	mov    bl,0xc3
  41c1e7:	popa   
  41c1e8:	push   ss
  41c1e9:	mov    bh,0x8d
  41c1eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1ec:	stos   DWORD PTR es:[edi],eax
  41c1ed:	sbb    esp,ebp
  41c1ef:	sti    
  41c1f0:	jbe    0x41c1b0
  41c1f2:	jae    0x41c256
  41c1f4:	dec    ebp
  41c1f5:	pop    eax
  41c1f6:	outs   dx,BYTE PTR ds:[esi]
  41c1f7:	pop    ecx
  41c1f8:	iret   
  41c1f9:	inc    eax
  41c1fa:	(bad)  
  41c1fb:	xchg   BYTE PTR [edi-0x49],dh
  41c1fe:	jnp    0x41c20a
  41c200:	fistp  DWORD PTR [ecx-0x4e]
  41c203:	push   es
  41c204:	xlat   BYTE PTR ds:[ebx]
  41c205:	ds popa 
  41c207:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c208:	imul   ebp,DWORD PTR [eax],0x807462b3
  41c20e:	pop    ecx
  41c20f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c210:	jns    0x41c1d3
  41c212:	push   ecx
  41c213:	clc    
  41c214:	arpl   WORD PTR [ebx+0x5fb53d23],dx
  41c21a:	(bad)  
  41c21b:	mov    BYTE PTR [esi-0x54ba40e0],cl
  41c221:	test   BYTE PTR [ecx+0x38],bh
  41c224:	pop    edx
  41c225:	and    eax,0x89961e8
  41c22a:	mov    BYTE PTR [edi+0x7fa6061],ch
  41c230:	fwait
  41c231:	iret   
  41c232:	sbb    ebp,DWORD PTR [eax-0x6fab1281]
  41c238:	push   esp
  41c239:	loopne 0x41c1e0
  41c23b:	add    ah,BYTE PTR [edi-0x28]
  41c23e:	sbb    bh,BYTE PTR [ebp-0x44]
  41c241:	setp   BYTE PTR [eax-0x64]
  41c245:	and    DWORD PTR [ebp-0x69],0xf2aba252
  41c24c:	push   edx
  41c24d:	cmp    ch,BYTE PTR [ecx+ebx*4+0x212c8185]
  41c254:	cmc    
  41c255:	stos   DWORD PTR es:[edi],eax
  41c256:	push   edx
  41c257:	js     0x41c252
  41c259:	mov    al,ds:0xc9a8e7bc
  41c25e:	scas   eax,DWORD PTR es:[edi]
  41c25f:	or     al,0xd3
  41c261:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c262:	arpl   WORD PTR [ecx-0x7b424047],bp
  41c268:	cmp    al,0xd
  41c26a:	sbb    DWORD PTR [eax+0x44],edi
  41c26d:	cmp    DWORD PTR [edx-0x7a4f11d5],0x9d1c7962
  41c277:	xlat   BYTE PTR ds:[ebx]
  41c278:	ins    DWORD PTR es:[edi],dx
  41c279:	sbb    BYTE PTR [eax+0x52],0xca
  41c27d:	sbb    BYTE PTR [ebp-0x7734f453],cl
  41c283:	xchg   esp,eax
  41c284:	fwait
  41c285:	pop    ebp
  41c286:	aaa    
  41c287:	fadd   DWORD PTR [eax+0x360255e1]
  41c28d:	aam    0x71
  41c28f:	mov    eax,0x8034062f
  41c294:	mov    esp,0x59d404a2
  41c299:	loopne 0x41c2ef
  41c29b:	mov    edi,0x35148050
  41c2a0:	push   0x5c
  41c2a2:	ja     0x41c280
  41c2a4:	cmp    DWORD PTR [eax-0x6a],edi
  41c2a7:	mov    esi,0x7744914c
  41c2ac:	repnz jmp 0x50d3:0x795bf9e8
  41c2b4:	xor    esi,ebp
  41c2b6:	in     eax,0xe2
  41c2b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2b9:	jl     0x41c25c
  41c2bb:	mov    esi,0x63965419
  41c2c0:	out    0x3a,al
  41c2c2:	pop    ds
  41c2c3:	das    
  41c2c4:	call   0x2e135068
  41c2c9:	mov    bh,0xf3
  41c2cb:	adc    eax,0x55c142b8
  41c2d0:	dec    ecx
  41c2d1:	mov    DWORD PTR [edi],eax
  41c2d3:	jb     0x41c352
  41c2d5:	bound  ecx,QWORD PTR [esi+0x23c636f5]
  41c2db:	sti    
  41c2dc:	jp     0x41c306
  41c2de:	ror    BYTE PTR [eax-0x729e1fc5],1
  41c2e4:	mov    bl,0x30
  41c2e6:	iret   
  41c2e7:	push   DWORD PTR [eax]
  41c2e9:	mov    al,0xe5
  41c2eb:	or     eax,0x3fa40632
  41c2f0:	jmp    0xe2453506
  41c2f5:	jecxz  0x41c2e5
  41c2f7:	popa   
  41c2f8:	(bad)  
  41c2fa:	or     BYTE PTR [ebx-0x5010b59b],dl
  41c300:	xor    al,0x76
  41c302:	jno    0x41c335
  41c304:	cmp    dl,al
  41c306:	enter  0x4084,0x89
  41c30a:	cli    
  41c30b:	push   edx
  41c30c:	inc    ebx
  41c30d:	sbb    ecx,DWORD PTR [ebx+0x4b]
  41c310:	outs   dx,DWORD PTR ds:[esi]
  41c311:	mov    bl,0x3
  41c313:	in     eax,dx
  41c314:	jle    0x41c341
  41c316:	and    DWORD PTR [esi+0x67],eax
  41c319:	in     al,0x18
  41c31b:	(bad)  
  41c31c:	stc    
  41c31d:	int    0xf0
  41c31f:	and    edi,edx
  41c321:	lds    ebp,FWORD PTR [esi+0x7d98851b]
  41c327:	pushf  
  41c328:	sbb    BYTE PTR [ebp+0x7c3c2bfb],0xba
  41c32f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c330:	inc    ebp
  41c331:	cmc    
  41c332:	out    0xb9,al
  41c334:	out    0x7,al
  41c336:	jg     0x41c361
  41c338:	or     al,0x9a
  41c33a:	fbstp  TBYTE PTR [ebx]
  41c33c:	test   BYTE PTR [edi+0xf],cl
  41c33f:	stos   DWORD PTR es:[edi],eax
  41c340:	stos   DWORD PTR es:[edi],eax
  41c341:	ja     0x41c351
  41c343:	sub    BYTE PTR [edx-0x37f7d7a1],0x81
  41c34a:	cmp    al,0x94
  41c34c:	scas   eax,DWORD PTR es:[edi]
  41c34d:	pushf  
  41c34e:	loope  0x41c36e
  41c350:	mov    ecx,0xf97ed445
  41c355:	sbb    edx,edi
  41c357:	mov    esi,0x914e06e7
  41c35c:	push   ds
  41c35d:	inc    edx
  41c35e:	pop    ecx
  41c35f:	mov    al,0xd
  41c361:	mov    ebp,0x9fb2301c
  41c366:	mov    ds:0xcaa38bb,eax
  41c36b:	inc    edi
  41c36c:	ret    0xeacc
  41c36f:	call   0xe5a6b5b3
  41c374:	and    DWORD PTR [edi-0x3126fe11],ebx
  41c37a:	sub    ebp,DWORD PTR [ebx+0x64]
  41c37d:	jmp    0x41c3f1
  41c37f:	cmp    al,BYTE PTR [ebx]
  41c381:	ret    0x438e
  41c384:	outs   dx,BYTE PTR ds:[esi]
  41c385:	jo     0x41c3c8
  41c387:	test   DWORD PTR [edx+0x2207f83f],ebx
  41c38d:	mov    BYTE PTR [ebx-0x63],bl
  41c390:	jnp    0x41c33e
  41c392:	lock adc al,0xe4
  41c395:	xchg   ecx,eax
  41c396:	lds    edi,FWORD PTR [esi-0x34]
  41c399:	fs jb  0x41c353
  41c39c:	pop    ss
  41c39d:	cmp    BYTE PTR [esi],bl
  41c39f:	mov    ds:0xb5e4830e,al
  41c3a4:	mov    DWORD PTR [edi-0x7d],ecx
  41c3a7:	mov    edi,0x702c1980
  41c3ac:	clc    
  41c3ad:	sahf   
  41c3ae:	scas   eax,DWORD PTR es:[edi]
  41c3af:	pop    ds
  41c3b0:	or     al,0x2e
  41c3b2:	fmul   st(4),st
  41c3b4:	imul   eax,DWORD PTR [esi+0x30],0xa60f1ddc
  41c3bb:	outs   dx,BYTE PTR ds:[esi]
  41c3bc:	ins    DWORD PTR es:[edi],dx
  41c3bd:	sub    DWORD PTR [edx+edx*4-0x7c2d167b],ebp
  41c3c4:	push   ss
  41c3c5:	out    dx,eax
  41c3c6:	mov    cl,0x5a
  41c3c8:	xor    al,0x83
  41c3ca:	fsubrp st(6),st
  41c3cc:	pop    esp
  41c3cd:	rcr    DWORD PTR [ebx-0x78c843b1],1
  41c3d3:	fs push cs
  41c3d5:	fdiv   st(4),st
  41c3d7:	push   ds
  41c3d8:	and    al,0x88
  41c3da:	mov    ds:0xa1a36c55,eax
  41c3df:	cmp    BYTE PTR [ebp+ebp*8-0x40],bl
  41c3e3:	repnz call 0x8b48:0x5fe161f4
  41c3eb:	pop    ss
  41c3ec:	sbb    ch,BYTE PTR [edx-0x3fa36448]
  41c3f2:	pop    es
  41c3f3:	shr    DWORD PTR [esi],1
  41c3f5:	mov    dl,0xd8
  41c3f7:	add    eax,0x1079cdf
  41c3fc:	sahf   
  41c3fd:	jge    0x41c3d3
  41c3ff:	ins    DWORD PTR es:[edi],dx
  41c400:	xor    BYTE PTR ds:0x79400266,0xf4
  41c407:	rol    DWORD PTR [edi],1
  41c409:	aad    0x1
  41c40b:	cmp    eax,DWORD PTR [edx]
  41c40d:	mov    ebx,gs
  41c40f:	jp     0x41c462
  41c411:	dec    eax
  41c412:	adc    DWORD PTR [eax-0x5c68ae53],ecx
  41c418:	push   cs
  41c419:	scas   eax,DWORD PTR es:[edi]
  41c41a:	ds dec esi
  41c41c:	je     0x41c42d
  41c41e:	inc    eax
  41c41f:	ja     0x41c44f
  41c421:	sbb    ebp,DWORD PTR [esi+eax*4+0xb]
  41c425:	fdivr  DWORD PTR [ebx+0xa1cc49b]
  41c42b:	dec    edx
  41c42c:	outs   dx,BYTE PTR ds:[esi]
  41c42d:	mov    edi,0x6752b1fe
  41c432:	ret    0x851d
  41c435:	in     eax,dx
  41c436:	lods   eax,DWORD PTR ds:[esi]
  41c437:	lahf   
  41c438:	push   ecx
  41c439:	fsub   QWORD PTR [eax+0x42]
  41c43c:	std    
  41c43d:	dec    ebp
  41c43e:	call   0x4968:0x5f3cbf51
  41c445:	(bad)  
  41c446:	fidiv  WORD PTR [ebx]
  41c448:	stos   DWORD PTR es:[edi],eax
  41c449:	mov    edi,DWORD PTR [ebp+eax*2-0x77]
  41c44d:	push   esi
  41c44e:	cld    
  41c44f:	sub    al,0x9f
  41c451:	sar    DWORD PTR [edx],cl
  41c453:	sahf   
  41c454:	add    esi,esi
  41c456:	xchg   ebx,eax
  41c457:	movaps xmm6,xmm2
  41c45a:	(bad)  
  41c45b:	std    
  41c45c:	(bad)  
  41c45d:	sbb    DWORD PTR [eax],ebx
  41c45f:	sar    DWORD PTR [edi+ebp*2-0x4f],0x86
  41c464:	mov    bl,0xd1
  41c466:	outs   dx,DWORD PTR ds:[esi]
  41c467:	popf   
  41c468:	mov    ds:0xbeb4ba94,al
  41c46d:	add    al,0xe
  41c46f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c470:	outs   dx,DWORD PTR ds:[esi]
  41c471:	mov    ebp,0xa43757b0
  41c476:	cs mov eax,0xb821cf81
  41c47c:	jge    0x19a59da9
  41c482:	jno    0x41c4b4
  41c484:	add    BYTE PTR es:[ecx],0xab
  41c488:	bound  si,DWORD PTR [esi]
  41c48b:	ret    0x9bb2
  41c48e:	inc    esi
  41c48f:	push   ss
  41c490:	dec    esp
  41c491:	sbb    eax,0xac926fe0
  41c496:	jmp    0x2f9c:0x411a852f
  41c49d:	ficom  DWORD PTR [edi-0x53037ec4]
  41c4a3:	mov    ebx,0xf638693
  41c4a8:	pop    esi
  41c4a9:	sub    BYTE PTR [esi],bl
  41c4ab:	pop    esp
  41c4ac:	fild   DWORD PTR [edi+0x5e]
  41c4af:	mov    WORD PTR [ecx+0x6e5b4f1e],ds
  41c4b5:	inc    esp
  41c4b6:	dec    esi
  41c4b7:	xchg   DWORD PTR [ecx+0x5a3b6cf6],edi
  41c4bd:	hlt    
  41c4be:	call   0x9dd6d061
  41c4c3:	xchg   edi,eax
  41c4c4:	(bad)  
  41c4c5:	push   ecx
  41c4c6:	fs rcl ebp,cl
  41c4c9:	mov    cl,0xb5
  41c4cb:	data16 fiadd WORD PTR [ebx]
  41c4ce:	mov    al,0x26
  41c4d0:	popf   
  41c4d1:	push   0xb9992605
  41c4d6:	rcl    BYTE PTR [ecx-0x5338409],cl
  41c4dc:	cmp    BYTE PTR [ebx+0x36],cl
  41c4df:	cmp    DWORD PTR [ebp+0x33],ecx
  41c4e2:	adc    al,0x43
  41c4e4:	push   ebp
  41c4e5:	jl     0x41c48a
  41c4e7:	cmp    BYTE PTR [edx],bh
  41c4e9:	in     al,dx
  41c4ea:	pop    esp
  41c4eb:	xlat   BYTE PTR ds:[ebx]
  41c4ec:	ret    0x5c28
  41c4ef:	xchg   ebx,eax
  41c4f0:	(bad)  
  41c4f1:	addr16 cdq 
  41c4f3:	inc    ebx
  41c4f4:	mov    ah,BYTE PTR [eax]
  41c4f6:	or     al,0x41
  41c4f8:	outs   dx,BYTE PTR ds:[esi]
  41c4f9:	mov    bh,0x21
  41c4fb:	fsub   DWORD PTR [esi-0x6312e73a]
  41c501:	aas    
  41c502:	jne    0x41c548
  41c504:	pop    ecx
  41c505:	or     DWORD PTR [ebp-0x64],0xffffff89
  41c509:	int3   
  41c50a:	push   esi
  41c50b:	int3   
  41c50c:	xchg   ebx,eax
  41c50d:	push   edx
  41c50e:	cmp    DWORD PTR [eax],ebx
  41c510:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c511:	test   edi,0x80427ebe
  41c517:	outs   dx,DWORD PTR ds:[esi]
  41c518:	out    dx,al
  41c519:	sbb    DWORD PTR [edi],edx
  41c51b:	inc    esp
  41c51c:	fs dec si
  41c51f:	stos   BYTE PTR es:[edi],al
  41c520:	ins    DWORD PTR es:[edi],dx
  41c521:	sub    ebp,ecx
  41c523:	sti    
  41c524:	sbb    al,0xf8
  41c526:	bound  esi,QWORD PTR [ecx-0x24801af6]
  41c52c:	mov    ah,0x24
  41c52e:	hlt    
  41c52f:	sub    eax,0x8dc32bd6
  41c534:	enter  0x480a,0xbb
  41c538:	add    DWORD PTR [edi+0x54],esi
  41c53b:	imul   ebx,DWORD PTR [ebx+0x73b255b0],0x6f
  41c542:	stos   BYTE PTR es:[edi],al
  41c543:	(bad)  
  41c544:	aad    0x79
  41c546:	not    BYTE PTR [ecx+0x5cfb1324]
  41c54c:	mov    cl,0xf4
  41c54e:	dec    esp
  41c54f:	add    BYTE PTR [eax+0x3cbf4706],dh
  41c555:	and    eax,0x97edfbbf
  41c55a:	cs (bad) 
  41c55c:	xor    eax,0x5ab0e9c1
  41c561:	jne    0x41c5b4
  41c563:	sub    ecx,DWORD PTR [edx]
  41c565:	dec    ebx
  41c566:	mov    dh,0x14
  41c568:	imul   esp,DWORD PTR [edi+0x69e45aca],0xffffffd7
  41c56f:	inc    BYTE PTR [eax+esi*8+0x43]
  41c573:	inc    ebx
  41c574:	jns    0x41c5ac
  41c576:	adc    eax,0xc65c5a2e
  41c57b:	sub    eax,0xab626877
  41c580:	mov    esp,0x1609d6ff
  41c585:	in     al,dx
  41c586:	aaa    
  41c587:	popa   
  41c588:	and    bl,ah
  41c58a:	fs jns 0x41c535
  41c58d:	sbb    BYTE PTR ds:0x568f45ea,dh
  41c593:	fisubr DWORD PTR [edi]
  41c595:	loopne 0x41c60f
  41c597:	loopne 0x41c5f7
  41c599:	and    BYTE PTR [ebp+0x6efa10e1],ah
  41c59f:	dec    edi
  41c5a0:	push   ds
  41c5a1:	rcl    BYTE PTR [edi],1
  41c5a3:	inc    ebp
  41c5a4:	stc    
  41c5a5:	jle    0x41c5f0
  41c5a7:	push   eax
  41c5a8:	ja     0x41c54e
  41c5aa:	cdq    
  41c5ab:	imul   ebp,DWORD PTR [eax],0x8775fd8e
  41c5b1:	pop    ebx
  41c5b3:	fiadd  DWORD PTR [ebp+0x2b6d8508]
  41c5b9:	jne    0x41c620
  41c5bb:	(bad)  
  41c5bd:	or     DWORD PTR [esi-0x65],edi
  41c5c0:	adc    al,0x1d
  41c5c2:	pop    ebx
  41c5c3:	ror    ecx,cl
  41c5c5:	or     edx,DWORD PTR [edi+0x47]
  41c5c8:	arpl   bx,si
  41c5ca:	out    dx,eax
  41c5cb:	jns    0x41c5e2
  41c5cd:	call   0x781:0x5083084a
  41c5d4:	in     eax,0x9b
  41c5d6:	jecxz  0x41c629
  41c5d8:	shl    DWORD PTR ds:0xaffb0741,0xd6
  41c5df:	int3   
  41c5e0:	stos   BYTE PTR es:[edi],al
  41c5e1:	pop    es
  41c5e2:	nop
  41c5e3:	sbb    al,0x3c
  41c5e5:	push   ds
  41c5e6:	dec    ecx
  41c5e7:	stos   BYTE PTR es:[edi],al
  41c5e8:	dec    ecx
  41c5e9:	jo     0x41c62f
  41c5eb:	jbe    0x41c5ca
  41c5ed:	sub    DWORD PTR [ebx-0x5],ecx
  41c5f0:	retf   
  41c5f1:	mov    ebp,DWORD PTR [ecx-0x6f]
  41c5f4:	mov    ch,0xc5
  41c5f6:	out    0xd4,eax
  41c5f8:	shl    DWORD PTR [esi-0x78],0x1f
  41c5fc:	xchg   ebp,eax
  41c5fd:	push   esp
  41c5fe:	lea    edi,[edx+ecx*4]
  41c601:	js     0x41c601
  41c603:	gs pop esp
  41c605:	scas   eax,DWORD PTR es:[edi]
  41c606:	dec    edi
  41c607:	jbe    0x41c63e
  41c609:	(bad)  
  41c60a:	addr16 rcl ebx,1
  41c60d:	push   edi
  41c60e:	cmp    DWORD PTR [eax],ebx
  41c610:	call   0x6c2bff21
  41c615:	rcr    cl,cl
  41c617:	and    BYTE PTR [eax-0x717b2ea7],ah
  41c61d:	cmc    
  41c61e:	mov    bp,0x4986
  41c622:	sti    
  41c623:	test   DWORD PTR [eax-0x5f],esi
  41c626:	xchg   BYTE PTR [eax-0x67037bbb],cl
  41c62c:	pop    ecx
  41c62d:	inc    ebx
  41c62e:	add    BYTE PTR [esi],dl
  41c630:	mov    bh,0x2
  41c632:	pop    ds
  41c633:	or     al,0x63
  41c635:	mov    ah,dl
  41c637:	jnp    0x41c5ee
  41c639:	xor    BYTE PTR [esi],cl
  41c63b:	ins    DWORD PTR es:[edi],dx
  41c63c:	fisub  WORD PTR [edx]
  41c63e:	mov    bl,0x9d
  41c640:	mov    bl,0x5e
  41c642:	les    esp,FWORD PTR [ecx-0x7710a7e8]
  41c648:	pop    ebp
  41c649:	std    
  41c64a:	lahf   
  41c64b:	sbb    al,ch
  41c64d:	ds mov edx,0x9e07c90a
  41c653:	jno    0x41c664
  41c655:	mov    edx,0xd5cabb10
  41c65a:	mov    bh,0x10
  41c65c:	out    dx,eax
  41c65d:	int    0x28
  41c65f:	mov    ch,0x14
  41c661:	push   ecx
  41c662:	adc    eax,0xb7e75101
  41c667:	imul   edx,DWORD PTR [esi-0x7f],0xffffff85
  41c66b:	push   ebp
  41c66c:	push   es
  41c66d:	pop    edx
  41c66e:	xchg   edi,eax
  41c66f:	push   ss
  41c670:	dec    edx
  41c671:	mov    ch,0xce
  41c673:	adc    ebp,DWORD PTR [eax+0x55]
  41c676:	lods   eax,DWORD PTR ds:[esi]
  41c677:	dec    ecx
  41c678:	mov    edi,0x8adb4ae1
  41c67d:	xor    ebp,DWORD PTR [esi-0x4f]
  41c680:	or     al,0xdc
  41c682:	dec    ebx
  41c683:	mov    dl,0xf5
  41c685:	or     eax,0xec00a851
  41c68a:	push   esi
  41c68b:	mov    bh,0xc4
  41c68d:	(bad)  
  41c68e:	rcr    DWORD PTR [ebx+0x7d],cl
  41c691:	cld    
  41c692:	and    ecx,DWORD PTR [ebx+0x1c]
  41c695:	fistp  DWORD PTR [eax]
  41c697:	mov    DWORD PTR [edi-0xd1fe3fb],eax
  41c69d:	clc    
  41c69e:	jle    0x41c66f
  41c6a0:	mov    ebp,0xcf32fbf5
  41c6a5:	pusha  
  41c6a6:	lods   al,BYTE PTR ds:[esi]
  41c6a7:	cli    
  41c6a8:	fcomp  QWORD PTR [edi+0x644cd3a4]
  41c6ae:	leave  
  41c6af:	or     edx,DWORD PTR ds:0x5805d3d0
  41c6b5:	pop    esi
  41c6b6:	scas   eax,DWORD PTR es:[edi]
  41c6b7:	fs jno 0x41c705
  41c6ba:	or     BYTE PTR [edx-0x7de142e5],bl
  41c6c0:	popf   
  41c6c1:	pop    edx
  41c6c2:	jb     0x41c6ba
  41c6c4:	mov    WORD PTR [edi-0x7b],fs
  41c6c7:	pop    ebx
  41c6c8:	pop    eax
  41c6c9:	mov    ebp,0xa1b05627
  41c6ce:	cwde   
  41c6cf:	pop    eax
  41c6d0:	dec    edi
  41c6d1:	push   ecx
  41c6d2:	sub    DWORD PTR [ecx],ecx
  41c6d4:	push   0x99b520ef
  41c6d9:	sub    al,0xb
  41c6db:	dec    esp
  41c6dc:	xor    edi,DWORD PTR [eax]
  41c6de:	(bad)  
  41c6df:	into   
  41c6e0:	sbb    eax,0xcb4d2deb
  41c6e5:	push   ds
  41c6e6:	jl     0x41c71a
  41c6e8:	clc    
  41c6e9:	sbb    al,0x67
  41c6eb:	shl    al,1
  41c6ed:	lea    esi,[esi+edx*4]
  41c6f0:	fstp   DWORD PTR [eax+0x56]
  41c6f3:	retf   
  41c6f4:	cld    
  41c6f5:	ficomp WORD PTR [ecx]
  41c6f7:	jnp    0x41c6e3
  41c6f9:	jge    0x41c6f4
  41c6fb:	sub    ch,cl
  41c6fd:	xchg   edi,eax
  41c6fe:	cdq    
  41c6ff:	jae    0x41c701
  41c701:	sar    DWORD PTR es:[edx],0xf3
  41c705:	ret    
  41c706:	pop    ss
  41c707:	xchg   ebp,ebp
  41c709:	jb     0x41c75e
  41c70b:	lods   eax,DWORD PTR ds:[esi]
  41c70c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c70d:	cld    
  41c70e:	mov    bh,0xd2
  41c710:	bt     edi,eax
  41c713:	xor    ebx,eax
  41c715:	ret    0x2cb5
  41c718:	(bad)  
  41c719:	(bad)  
  41c71a:	in     al,dx
  41c71b:	push   ebp
  41c71c:	jne    0x41c6f6
  41c71e:	lock cmc 
  41c720:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c721:	dec    edi
  41c722:	cdq    
  41c723:	loope  0x41c72d
  41c725:	inc    esi
  41c726:	fcmovnb st,st(0)
  41c728:	adc    ah,ch
  41c72a:	or     bh,BYTE PTR [edx-0xd]
  41c72d:	mov    esi,0xd398d0b9
  41c732:	gs add ebx,edi
  41c735:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c736:	inc    esp
  41c737:	cld    
  41c738:	cli    
  41c739:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c73a:	xchg   ebp,eax
  41c73b:	sbb    al,0xc1
  41c73d:	sbb    eax,0x73109c96
  41c742:	loop   0x41c7b4
  41c744:	hlt    
  41c745:	clc    
  41c746:	cmp    DWORD PTR [eax-0xbc13399],edi
  41c74c:	clc    
  41c74d:	sti    
  41c74e:	inc    ebx
  41c74f:	inc    esi
  41c750:	gs cli 
  41c752:	pusha  
  41c753:	neg    DWORD PTR [esi+ecx*2+0x24d659f7]
  41c75a:	js     0x41c752
  41c75c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c75d:	mov    cl,0x99
  41c75f:	repnz sub dl,0x23
  41c763:	out    dx,eax
  41c764:	clc    
  41c765:	jne    0x41c7df
  41c767:	xor    al,0x39
  41c769:	mov    ds:0x4e35373f,eax
  41c76e:	jmp    0x41c7a1
  41c770:	leave  
  41c771:	jle    0x41c71b
  41c773:	mov    esi,esp
  41c775:	out    dx,al
  41c776:	pushf  
  41c777:	enter  0x651c,0xcf
  41c77b:	inc    ebx
  41c77c:	scas   eax,DWORD PTR es:[edi]
  41c77d:	fdiv   QWORD PTR [edx+ebx*8]
  41c780:	fwait
  41c781:	pop    edi
  41c782:	xchg   edi,eax
  41c783:	loope  0x41c79b
  41c785:	pushf  
  41c786:	into   
  41c787:	jle    0x41c770
  41c789:	xor    BYTE PTR [ecx+0x48],0x9d
  41c78d:	lds    eax,FWORD PTR [ebx+0x5e393939]
  41c793:	dec    esi
  41c794:	pop    ds
  41c795:	xor    DWORD PTR [ebp-0x3a30d2c3],ebx
  41c79b:	pop    edx
  41c79c:	gs and eax,0xee66e1b5
  41c7a2:	xchg   DWORD PTR [ebx+0x23],esi
  41c7a5:	and    al,0x88
  41c7a7:	iret   
  41c7a8:	mov    bh,0x20
  41c7aa:	into   
  41c7ab:	repnz int 0xf9
  41c7ae:	daa    
  41c7af:	dec    ebp
  41c7b0:	mov    al,ds:0x73017b27
  41c7b5:	adc    BYTE PTR [ecx],al
  41c7b7:	mov    ebx,0xf3e999ba
  41c7bc:	sbb    DWORD PTR [edi],0x40
  41c7bf:	dec    eax
  41c7c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c7c1:	add    edx,ebx
  41c7c3:	cmp    ch,BYTE PTR [ebp-0x394a9644]
  41c7c9:	data16 out dx,al
  41c7cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c7cc:	loope  0x41c7c3
  41c7ce:	or     DWORD PTR [edi+0x28],edi
  41c7d1:	rol    ebx,0xe3
  41c7d4:	xor    ecx,esi
  41c7d6:	stos   BYTE PTR es:[edi],al
  41c7d7:	ret    
  41c7d8:	and    esi,ecx
  41c7da:	retf   0x5f95
  41c7dd:	in     eax,dx
  41c7de:	push   esp
  41c7df:	add    al,0x5b
  41c7e1:	mov    esp,0x723bcdd3
  41c7e6:	(bad)  
  41c7e7:	rcr    al,1
  41c7e9:	pop    ecx
  41c7ea:	xchg   ebp,eax
  41c7eb:	xchg   ebp,eax
  41c7ec:	dec    edi
  41c7ed:	ficomp WORD PTR cs:[esi+0x4a70c039]
  41c7f4:	dec    ebx
  41c7f5:	mov    cl,ch
  41c7f7:	mov    al,0x16
  41c7f9:	pop    eax
  41c7fa:	popa   
  41c7fb:	cmp    ah,BYTE PTR gs:[eax+0x7fddff36]
  41c802:	lods   eax,DWORD PTR ds:[esi]
  41c803:	pop    es
  41c804:	push   edi
  41c805:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c806:	adc    dl,0x5
  41c809:	cwde   
  41c80a:	hlt    
  41c80b:	aad    0xe0
  41c80d:	out    dx,eax
  41c80e:	inc    eax
  41c80f:	sub    al,0xa8
  41c811:	cmc    
  41c812:	and    al,0x66
  41c814:	push   ecx
  41c815:	(bad)  
  41c816:	ins    DWORD PTR es:[edi],dx
  41c817:	mov    bl,0xec
  41c819:	fstp   QWORD PTR [edi+0x781dd7e7]
  41c81f:	and    ebx,ebp
  41c821:	into   
  41c822:	push   ds
  41c823:	retf   
  41c824:	or     eax,0x1d39dbec
  41c829:	mov    cl,0x6a
  41c82b:	sahf   
  41c82c:	and    eax,0x867b2221
  41c831:	out    dx,al
  41c832:	retf   0xbaaf
  41c835:	ret    
  41c836:	sbb    bl,BYTE PTR [ecx+0x3e]
  41c839:	and    ecx,DWORD PTR [edi-0x52325d0a]
  41c83f:	in     eax,dx
  41c840:	and    ch,bl
  41c842:	adc    bl,BYTE PTR [ecx-0x12]
  41c845:	mov    eax,0xee328eb7
  41c84a:	mov    cs,WORD PTR [edi+0x268999bc]
  41c850:	rol    DWORD PTR [eax],0xb0
  41c853:	or     BYTE PTR [ecx+ebx*8-0x17],0x49
  41c858:	mov    esp,0x8b98168a
  41c85d:	imul   edx,DWORD PTR [ecx+0x50],0x4b
  41c861:	push   esp
  41c862:	mov    esi,0xd05e1a6f
  41c867:	inc    ebp
  41c868:	loop   0x41c867
  41c86a:	dec    esi
  41c86b:	sbb    al,0x72
  41c86d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c86e:	ja     0x41c825
  41c870:	sti    
  41c871:	sub    al,0x4f
  41c873:	stos   BYTE PTR es:[edi],al
  41c874:	push   edi
  41c875:	adc    BYTE PTR [esi-0x213780ca],ch
  41c87b:	in     eax,dx
  41c87c:	aad    0x55
  41c87e:	sbb    eax,0x725cb2fa
  41c883:	retf   
  41c884:	mov    ds:0x52fd5c29,eax
  41c889:	adc    BYTE PTR [ecx],al
  41c88b:	add    ebp,DWORD PTR [ecx+0x6dee880a]
  41c891:	popa   
  41c892:	push   0x54
  41c894:	mov    bl,0x1f
  41c896:	mov    edi,0x7bbf1c54
  41c89b:	stos   DWORD PTR es:[edi],eax
  41c89c:	push   ebp
  41c89d:	adc    al,0x70
  41c89f:	cmp    eax,0x5ca9238a
  41c8a4:	iret   
  41c8a5:	pop    edi
  41c8a6:	test   ah,bh
  41c8a8:	jnp    0x41c897
  41c8aa:	add    dl,BYTE PTR [edi-0x72]
  41c8ad:	mov    cl,0x8
  41c8af:	xor    BYTE PTR [edi],al
  41c8b1:	add    DWORD PTR [eax],ecx
  41c8b3:	push   esp
  41c8b4:	aas    
  41c8b5:	sub    al,0xd3
  41c8b7:	jae    0x41c8e3
  41c8b9:	ret    
  41c8ba:	scas   al,BYTE PTR es:[edi]
  41c8bb:	mov    bh,0x68
  41c8bd:	jo     0x41c850
  41c8bf:	sbb    al,0x31
  41c8c1:	push   ds
  41c8c2:	bound  ebx,QWORD PTR [eax+0x13]
  41c8c5:	jmp    0x41c8c3
  41c8c7:	aam    0xb6
  41c8c9:	outs   dx,BYTE PTR ds:[esi]
  41c8ca:	xchg   esi,eax
  41c8cb:	inc    ecx
  41c8cc:	or     edx,DWORD PTR [ecx]
  41c8ce:	sti    
  41c8cf:	jmp    0x41c898
  41c8d1:	ffreep st(0)
  41c8d3:	fstp   QWORD PTR [esi]
  41c8d5:	lahf   
  41c8d6:	test   BYTE PTR [edi+edx*2],al
  41c8d9:	ins    DWORD PTR es:[edi],dx
  41c8da:	or     dl,BYTE PTR [ebx-0x5c3b2e59]
  41c8e0:	mov    esi,0x6513c790
  41c8e5:	lahf   
  41c8e6:	je     0x41c88c
  41c8e8:	pusha  
  41c8e9:	inc    ebx
  41c8ea:	mov    dh,0x64
  41c8ec:	mov    bl,0xe9
  41c8ee:	sbb    eax,0xce191bf9
  41c8f3:	jbe    0x41c8a2
  41c8f5:	cmp    DWORD PTR [esi-0x85337e9],esp
  41c8fb:	or     BYTE PTR [edi-0x63],dl
  41c8fe:	pusha  
  41c8ff:	cmc    
  41c900:	pop    edi
  41c901:	test   al,0xfe
  41c903:	xor    DWORD PTR [eax+0x32a900b],ecx
  41c909:	lods   al,BYTE PTR ds:[esi]
  41c90a:	mov    esp,0x6b29adc0
  41c90f:	jbe    0x41c8ef
  41c911:	mov    ebp,DWORD PTR [eax]
  41c913:	pop    esi
  41c914:	pop    esi
  41c915:	fisub  WORD PTR [esi-0x3a]
  41c918:	push   ebx
  41c919:	(bad)  
  41c91a:	popf   
  41c91b:	sbb    al,0x2f
  41c91d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c91e:	jecxz  0x41c982
  41c920:	inc    edi
  41c921:	jno    0x41c97f
  41c923:	test   eax,0x616b124a
  41c928:	xchg   edi,eax
  41c929:	sti    
  41c92a:	jg     0x41c942
  41c92c:	fcmovne st,st(6)
  41c92e:	cdq    
  41c92f:	test   BYTE PTR [ecx],dl
  41c931:	inc    eax
  41c932:	sbb    BYTE PTR [ebx+eiz*8+0x121ce164],al
  41c939:	inc    esi
  41c93a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c93b:	test   BYTE PTR [edx-0x77],ah
  41c93e:	mov    edx,0xc214bba9
  41c943:	lea    edi,[edi+0x5c]
  41c946:	sbb    DWORD PTR [ebp+0x49a9c443],esi
  41c94c:	imul   DWORD PTR [ecx-0xa]
  41c94f:	mov    cl,0xc8
  41c951:	jns    0x41c96a
  41c953:	inc    esi
  41c954:	mov    eax,ds:0x57cfa6d4
  41c959:	int3   
  41c95a:	hlt    
  41c95b:	dec    edi
  41c95c:	rcl    BYTE PTR [esi+0x20],0x4f
  41c960:	and    BYTE PTR [esi],0xca
  41c963:	enter  0x5e42,0x2f
  41c967:	adc    bl,BYTE PTR [edx-0x65fa659]
  41c96d:	adc    BYTE PTR [eax-0x3d],al
  41c970:	push   esi
  41c971:	loope  0x41c98d
  41c973:	cmp    ecx,0xfd4db18
  41c979:	xchg   edi,eax
  41c97a:	pop    edx
  41c97b:	retf   0x1611
  41c97e:	and    ebx,eax
  41c980:	test   al,0xa8
  41c982:	dec    ecx
  41c983:	repz push ds
  41c985:	sbb    cl,BYTE PTR [esi]
  41c987:	add    bh,bh
  41c989:	mov    ?,WORD PTR [esi+eiz*4-0x3c]
  41c98d:	or     DWORD PTR [ebp+0x1],0x9bb35793
  41c994:	ds ss sub eax,0xc6602188
  41c99b:	mov    edi,0x73d45e53
  41c9a0:	sbb    ch,BYTE PTR [edi-0x31]
  41c9a3:	(bad)  
  41c9a4:	push   esp
  41c9a5:	scas   eax,DWORD PTR es:[edi]
  41c9a6:	mov    WORD PTR [esi],ds
  41c9a8:	push   esi
  41c9a9:	dec    eax
  41c9aa:	rol    DWORD PTR [eax+0x3f],cl
  41c9ad:	ins    DWORD PTR es:[edi],dx
  41c9ae:	aas    
  41c9af:	pushf  
  41c9b0:	test   eax,0xb89d0589
  41c9b5:	sbb    DWORD PTR [edx+0x9],ebp
  41c9b8:	(bad)  
  41c9b9:	(bad)  
  41c9bb:	ds ds pushw ss
  41c9bf:	cld    
  41c9c0:	stos   BYTE PTR es:[edi],al
  41c9c1:	(bad)  
  41c9c2:	xchg   esp,eax
  41c9c3:	sub    bl,BYTE PTR ds:0xe45ee586
  41c9c9:	fsubr  st(7),st
  41c9cb:	(bad)  
  41c9cc:	and    BYTE PTR [ecx+0x7904f1a2],ch
  41c9d2:	sub    bl,BYTE PTR [edi-0x5cfd79fa]
  41c9d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c9d9:	loop   0x41c9cb
  41c9db:	xchg   esp,eax
  41c9dc:	ficomp WORD PTR [esi-0x44]
  41c9df:	(bad)  [ebp-0x8]
  41c9e2:	pop    es
  41c9e3:	popf   
  41c9e4:	mov    bl,0x70
  41c9e6:	pop    edi
  41c9e7:	outs   dx,BYTE PTR ds:[esi]
  41c9e8:	adc    BYTE PTR [edi-0x5d],ah
  41c9eb:	mov    esp,0x8b5711bd
  41c9f0:	add    DWORD PTR [ecx-0x61],esp
  41c9f3:	setg   al
  41c9f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9f7:	(bad)  
  41c9f8:	mov    esi,0x3723dea
  41c9fd:	sbb    DWORD PTR [eax],ecx
  41c9ff:	add    eax,0x216c3cee
  41ca04:	(bad)  
  41ca06:	mov    ebx,0x5c9a4bd3
  41ca0b:	sbb    ah,bh
  41ca0d:	mov    al,ds:0x4bd50e84
  41ca12:	(bad)  
  41ca13:	stos   BYTE PTR es:[edi],al
  41ca14:	leave  
  41ca15:	inc    edi
  41ca16:	rcr    DWORD PTR [eax],0x31
  41ca19:	mov    ecx,0x8cc3e1c4
  41ca1e:	ins    BYTE PTR es:[edi],dx
  41ca1f:	push   eax
  41ca20:	stc    
  41ca21:	les    ebp,FWORD PTR [esi+ebx*2]
  41ca24:	call   0xb7eb:0x540997c0
  41ca2b:	mov    bh,0xb4
  41ca2d:	mov    eax,0xd0a288f5
  41ca32:	adc    BYTE PTR [esi+0xa],0x99
  41ca36:	repnz mov al,0x2
  41ca39:	imul   edx,DWORD PTR [esi+ebp*1+0x70],0x4
  41ca3e:	dec    edx
  41ca3f:	jmp    0x3c3a:0x62e7c568
  41ca46:	ins    DWORD PTR es:[edi],dx
  41ca47:	call   0x47ba166d
  41ca4c:	into   
  41ca4d:	dec    esp
  41ca4e:	stc    
  41ca4f:	(bad)  
  41ca50:	pop    ss
  41ca51:	mov    ds:0x2e63445e,al
  41ca56:	dec    esp
  41ca57:	je     0x41ca20
  41ca59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca5a:	sbb    eax,0x1bb0a866
  41ca5f:	hlt    
  41ca60:	sbb    eax,0x264174d0
  41ca65:	cld    
  41ca66:	imul   DWORD PTR [edi+0x65529fa5]
  41ca6c:	into   
  41ca6d:	dec    ebx
  41ca6e:	fsubr  DWORD PTR [edi+0x4f3e6a96]
  41ca74:	add    bh,BYTE PTR [edi+ecx*8-0x22]
  41ca78:	aad    0xb2
  41ca7a:	xchg   DWORD PTR [ebp-0x1c],esi
  41ca7d:	iret   
  41ca7e:	cmp    al,0x6f
  41ca80:	ret    
  41ca81:	inc    ebp
  41ca82:	in     al,0xe6
  41ca84:	(bad)  
  41ca85:	retf   0xc90d
  41ca88:	push   es
  41ca89:	mov    edi,0x429b4e91
  41ca8e:	mul    DWORD PTR [ebx+0x8a74b7c]
  41ca94:	push   0xffffff8e
  41ca96:	xchg   edi,eax
  41ca97:	cwde   
  41ca98:	jmp    0xc093:0x9b6f0beb
  41ca9f:	cmc    
  41caa0:	pop    edi
  41caa1:	(bad)  
  41caa2:	cmp    bl,ch
  41caa4:	sbb    al,0x8e
  41caa6:	jae    0x41ca7c
  41caa8:	lock pop ds
  41caaa:	fs dec edi
  41caac:	mov    ebx,0xc6d3af8b
  41cab1:	or     DWORD PTR [ebx],edx
  41cab3:	xchg   esp,eax
  41cab4:	(bad)  
  41cab5:	cmp    eax,0xcc319db0
  41caba:	sbb    eax,0x7783982e
  41cabf:	add    al,BYTE PTR [esp+ebp*4]
  41cac2:	ret    
  41cac3:	xchg   BYTE PTR [esi-0x40],dh
  41cac6:	push   0x4bd90ddc
  41cacb:	gs jle 0x41cb23
  41cace:	scas   al,BYTE PTR es:[edi]
  41cacf:	out    0x20,al
  41cad1:	xchg   BYTE PTR [ecx-0x1a70797],cl
  41cad7:	dec    ecx
  41cad8:	or     DWORD PTR [esi],0xda2737ba
  41cade:	pop    esp
  41cadf:	ffree  st(7)
  41cae1:	adc    dl,BYTE PTR ds:0xe390fadb
  41cae7:	jle    0x41cb04
  41cae9:	(bad)  
  41caea:	ds jg  0x41cb58
  41caed:	test   ecx,ebp
  41caef:	call   0x7b6efcb5
  41caf4:	cmp    DWORD PTR [edx+0x54],esi
  41caf7:	xor    bl,BYTE PTR [edx]
  41caf9:	and    ecx,DWORD PTR cs:[ebx]
  41cafc:	jge    0x41ca86
  41cafe:	add    eax,0x26b9ab20
  41cb03:	sub    bh,BYTE PTR [edi+0x49]
  41cb06:	jl     0x41cb6e
  41cb08:	xchg   esp,eax
  41cb09:	mov    ds:0x14b30056,al
  41cb0e:	xchg   ecx,eax
  41cb0f:	xor    edx,DWORD PTR [edx]
  41cb11:	cmp    al,0xa7
  41cb13:	mov    ecx,0x36cb5503
  41cb18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb19:	xchg   ecx,eax
  41cb1a:	jb     0x41cad6
  41cb1c:	jns    0x41cab0
  41cb1e:	jnp    0x41cb1a
  41cb20:	mov    dh,0xc7
  41cb22:	push   eax
  41cb23:	imul   BYTE PTR [ecx+0x19]
  41cb26:	add    ah,0x7c
  41cb29:	cmp    al,dh
  41cb2b:	push   ebx
  41cb2c:	mov    edx,0x9bf0b96a
  41cb31:	inc    edx
  41cb32:	xchg   DWORD PTR [ebx-0x64dc6d14],edi
  41cb38:	addr16 loope 0x41caeb
  41cb3b:	sub    DWORD PTR [esi+0x63147afd],ebx
  41cb41:	xor    al,0x33
  41cb43:	pop    esi
  41cb44:	lea    eax,[eax+0x430627e9]
  41cb4a:	sbb    ebp,DWORD PTR [esi]
  41cb4c:	pop    esp
  41cb4d:	mov    gs,WORD PTR [ebx+0x189cc9d4]
  41cb53:	(bad)  
  41cb54:	in     eax,0x97
  41cb56:	mov    ch,0x5c
  41cb58:	add    eax,0x625aace0
  41cb5d:	mov    ebx,0xd06d3e4d
  41cb62:	lock adc bh,bl
  41cb65:	push   cs
  41cb66:	push   ecx
  41cb67:	out    0x3f,eax
  41cb69:	xchg   esp,eax
  41cb6a:	xchg   edx,eax
  41cb6b:	popa   
  41cb6c:	mov    cl,0xb3
  41cb6e:	pop    ecx
  41cb6f:	dec    edi
  41cb70:	jp     0x41cb7f
  41cb72:	or     edi,DWORD PTR [ebx+0x17825569]
  41cb78:	stc    
  41cb79:	jne    0x41cbd9
  41cb7b:	dec    eax
  41cb7c:	xor    edx,DWORD PTR [ebx+0x2a]
  41cb7f:	ins    DWORD PTR es:[edi],dx
  41cb80:	adc    BYTE PTR [eax+ebp*2+0x67fc8ef2],0x40
  41cb88:	(bad)  
  41cb89:	or     bl,BYTE PTR ds:0xf0ba5467
  41cb8f:	jb     0x41cc0d
  41cb91:	add    dl,ah
  41cb93:	scas   al,BYTE PTR es:[edi]
  41cb94:	std    
  41cb95:	fmul   DWORD PTR [eax+0x3207275f]
  41cb9b:	shl    BYTE PTR [edx+0x8],0x68
  41cb9f:	(bad)  
  41cba0:	enter  0xd7e,0x71
  41cba4:	and    eax,0xe47f858b
  41cba9:	sbb    DWORD PTR [ebp+ecx*1+0x67],eax
  41cbad:	mov    eax,ds:0x6429606f
  41cbb2:	out    0xf6,eax
  41cbb4:	and    dh,BYTE PTR [ebx+0xff2c131]
  41cbba:	jbe    0x41cb54
  41cbbc:	adc    al,0xbf
  41cbbe:	popf   
  41cbbf:	inc    esi
  41cbc0:	neg    esp
  41cbc2:	inc    ebx
  41cbc3:	sub    dh,ch
  41cbc5:	outs   dx,BYTE PTR ds:[esi]
  41cbc6:	sub    eax,0x1666b1
  41cbcb:	scas   al,BYTE PTR es:[edi]
  41cbcc:	jo     0x41cc29
  41cbce:	mov    bh,0x6c
  41cbd0:	or     esi,DWORD PTR [edx]
  41cbd2:	enter  0x8189,0xbf
  41cbd6:	mov    ecx,0xad992ac0
  41cbdb:	gs lock xor edi,ebp
  41cbdf:	imul   eax,DWORD PTR [edi+0x5e],0x6f479757
  41cbe6:	mov    bl,0x4d
  41cbe8:	ins    BYTE PTR es:[edi],dx
  41cbe9:	and    al,0x5d
  41cbeb:	cmp    dl,cl
  41cbed:	out    dx,al
  41cbee:	aas    
  41cbef:	adc    cl,BYTE PTR [ebx-0x3e]
  41cbf2:	lock retf 0xf75a
  41cbf6:	sub    edi,edi
  41cbf8:	or     DWORD PTR [edx-0x6765289f],edi
  41cbfe:	retf   
  41cbff:	bound  ecx,QWORD PTR [esi]
  41cc01:	xchg   ebp,eax
  41cc02:	call   0xcd0903fb
  41cc07:	pop    edx
  41cc08:	test   eax,ebx
  41cc0a:	stos   DWORD PTR es:[edi],eax
  41cc0b:	push   ss
  41cc0c:	shr    DWORD PTR [ebp-0x2e],0xba
  41cc10:	xchg   esi,eax
  41cc11:	jae    0x41cbae
  41cc13:	xchg   esp,eax
  41cc14:	or     BYTE PTR [edx],ah
  41cc16:	out    0xce,al
  41cc18:	xchg   ecx,eax
  41cc19:	popf   
  41cc1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc1b:	inc    ebx
  41cc1c:	std    
  41cc1d:	cmp    eax,0x8836f6c2
  41cc22:	inc    ecx
  41cc23:	ds push edi
  41cc25:	daa    
  41cc26:	cdq    
  41cc27:	or     dl,dh
  41cc29:	and    BYTE PTR [edx],0x45
  41cc2c:	adc    BYTE PTR [ebp-0x2bf1a38d],0x38
  41cc33:	aas    
  41cc34:	mov    ebx,0x69262a4a
  41cc39:	jmp    0x41cc67
  41cc3b:	lea    ebx,[esi]
  41cc3d:	fdivr  QWORD PTR [ebx]
  41cc3f:	pop    esp
  41cc40:	in     eax,0x7b
  41cc42:	lods   al,BYTE PTR ds:[esi]
  41cc43:	inc    esi
  41cc44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc45:	bound  eax,QWORD PTR [esi+ecx*1]
  41cc48:	mov    BYTE PTR [ecx],bh
  41cc4a:	xchg   ebp,eax
  41cc4b:	pop    edi
  41cc4c:	loop   0x41cc3a
  41cc4e:	and    BYTE PTR [esi+0x2e8849bf],0x21
  41cc55:	xor    al,0xb7
  41cc57:	mov    ds,ebx
  41cc59:	repz in al,dx
  41cc5b:	stos   DWORD PTR es:[edi],eax
  41cc5c:	push   es
  41cc5d:	loop   0x41cc17
  41cc5f:	dec    ebp
  41cc60:	ret    
  41cc61:	js     0x41cc6a
  41cc63:	mov    ebx,0xfcd8134b
  41cc68:	(bad)  
  41cc69:	and    edx,DWORD PTR [eiz*8-0xf2bdf2]
  41cc70:	shl    BYTE PTR [esi-0x74db652c],0xb1
  41cc77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc78:	push   ss
  41cc79:	outs   dx,DWORD PTR ds:[esi]
  41cc7a:	ds or  eax,0x5075e020
  41cc80:	cli    
  41cc81:	xchg   ebx,eax
  41cc82:	dec    ebx
  41cc83:	rol    bl,0x7f
  41cc86:	mov    ecx,esi
  41cc88:	xchg   esi,eax
  41cc89:	mov    al,0x37
  41cc8b:	(bad)  
  41cc8c:	aam    0x66
  41cc8e:	pop    edi
  41cc8f:	sahf   
  41cc90:	mov    eax,ds:0x932cb00d
  41cc95:	nop
  41cc96:	mov    ecx,DWORD PTR [edi-0x40]
  41cc99:	xor    eax,0x167ca0f4
  41cc9e:	adc    bl,BYTE PTR [esi+0x227048df]
  41cca4:	loopne 0x41cce6
  41cca6:	jbe    0x41cc40
  41cca8:	mov    ch,0xc4
  41ccaa:	or     dh,BYTE PTR [esi]
  41ccac:	ffreep st(6)
  41ccae:	(bad)  
  41ccaf:	and    esi,edx
  41ccb1:	(bad)  
  41ccb2:	jmp    0x41cca8
  41ccb4:	dec    edi
  41ccb5:	xchg   ecx,eax
  41ccb6:	or     DWORD PTR [ebp+0x21],esi
  41ccb9:	mov    al,0x8d
  41ccbb:	jg     0x41cc65
  41ccbd:	add    BYTE PTR [edi-0xf],bh
  41ccc0:	jnp    0x41cc48
  41ccc2:	adc    al,0xb1
  41ccc4:	arpl   bp,ax
  41ccc6:	dec    edi
  41ccc7:	repnz call 0x819e:0x9aa0060f
  41cccf:	jb     0x41cc62
  41ccd1:	or     esi,0xb3b0641
  41ccd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ccd8:	loopne 0x41ccf1
  41ccda:	shl    BYTE PTR [eax+0x70],1
  41ccdd:	js     0x41cd06
  41ccdf:	pop    ds
  41cce0:	adc    al,0x4a
  41cce2:	test   eax,0xc6ba5fbc
  41cce7:	mov    ds:0x6d5234d,eax
  41ccec:	lods   al,BYTE PTR ds:[esi]
  41cced:	jle    0x41cd4a
  41ccef:	cmp    ax,0xcc74
  41ccf3:	clc    
  41ccf4:	jnp    0x41cc95
  41ccf6:	mov    edi,0xdfa366a0
  41ccfb:	dec    esp
  41ccfc:	cli    
  41ccfd:	aam    0x40
  41ccff:	loope  0x41cd5c
  41cd01:	in     eax,0x7f
  41cd03:	repnz pop eax
  41cd05:	cmc    
  41cd06:	pop    esp
  41cd07:	jno    0x41cd22
  41cd09:	ins    BYTE PTR es:[edi],dx
  41cd0a:	in     eax,0x91
  41cd0c:	in     eax,0xa
  41cd0e:	test   BYTE PTR [eax+edx*4],ah
  41cd11:	push   0x5d793ca7
  41cd16:	popa   
  41cd17:	std    
  41cd18:	ret    0x9a4
  41cd1b:	fdiv   QWORD PTR [edi]
  41cd1d:	call   0x3a9e8ee2
  41cd22:	add    DWORD PTR es:[ebp-0x3adad2b7],ebx
  41cd29:	dec    ebx
  41cd2a:	pop    ss
  41cd2b:	lock test al,0x71
  41cd2e:	data16 mov bl,0x9b
  41cd31:	arpl   bp,cx
  41cd33:	jb     0x41cd86
  41cd35:	push   0x379cb4a
  41cd3a:	js     0x41cd90
  41cd3c:	pop    ecx
  41cd3d:	sbb    dh,BYTE PTR [ebp+0x6d78321c]
  41cd43:	in     eax,0x6d
  41cd45:	mov    ds:0xac5fd64,eax
  41cd4a:	loop   0x41cd9b
  41cd4c:	test   al,0xcf
  41cd4e:	daa    
  41cd4f:	xor    eax,0x436936a8
  41cd54:	mov    eax,DWORD PTR [edi]
  41cd56:	mov    ch,0x1b
  41cd58:	dec    esp
  41cd59:	(bad)  
  41cd5a:	popa   
  41cd5b:	xor    DWORD PTR [ecx],ebp
  41cd5d:	xor    BYTE PTR [edx-0x668b40d8],ah
  41cd63:	test   al,0x8
  41cd65:	mov    WORD PTR [ecx],ss
  41cd67:	xchg   edx,eax
  41cd68:	adc    BYTE PTR gs:[ebx-0x6e2a24d3],cl
  41cd6f:	dec    esp
  41cd70:	out    dx,eax
  41cd71:	iret   
  41cd72:	cmp    al,0x89
  41cd74:	int3   
  41cd75:	pop    es
  41cd76:	lods   al,BYTE PTR ds:[esi]
  41cd77:	xchg   ebx,eax
  41cd78:	pushf  
  41cd79:	ins    BYTE PTR es:[edi],dx
  41cd7a:	xchg   esi,eax
  41cd7b:	adc    al,ch
  41cd7d:	add    eax,0x43c943a9
  41cd82:	fsub   DWORD PTR [eax-0x8231bb5]
  41cd88:	retf   0x2434
  41cd8b:	and    BYTE PTR [ebp+0x61],cl
  41cd8e:	adc    al,cl
  41cd90:	pop    edi
  41cd91:	add    BYTE PTR [esi],ah
  41cd93:	jb     0x41cd2a
  41cd95:	mov    ebp,0x401e4f47
  41cd9a:	pop    esi
  41cd9b:	mov    bh,BYTE PTR [esi]
  41cd9d:	mov    ebp,0x52067f15
  41cda2:	repnz and bh,0xae
  41cda6:	lock sahf 
  41cda8:	jp     0x41cd8b
  41cdaa:	cmp    al,0x68
  41cdac:	test   eax,0x77a97cd0
  41cdb1:	mov    edx,0x2f25ef0f
  41cdb6:	sbb    al,0xcb
  41cdb8:	push   cs
  41cdb9:	ror    ebp,1
  41cdbb:	mov    DWORD PTR fs:[ebx-0x26252e81],ecx
  41cdc2:	cmp    ebp,edi
  41cdc4:	(bad)  [edx-0x2c]
  41cdc7:	(bad)  
  41cdc8:	loop   0x41ce1d
  41cdca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cdcb:	push   esp
  41cdcc:	mov    DWORD PTR [esi],0xbf279520
  41cdd2:	fdiv   DWORD PTR [esi+ecx*2-0x54b0f993]
  41cdd9:	adc    edi,DWORD PTR [edx+0x29]
  41cddc:	fsubr  QWORD PTR [edx+0x448ccc09]
  41cde2:	pop    edi
  41cde3:	mov    WORD PTR [esi+esi*4-0x33],?
  41cde7:	lds    ebp,FWORD PTR [edx+0x4b287dcc]
  41cded:	ss jmp 0x58bac73d
  41cdf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cdf4:	sbb    edi,DWORD PTR [ebp-0x7da99af4]
  41cdfa:	mov    esi,0x8f53f29d
  41cdff:	add    bl,dl
  41ce01:	les    ebp,FWORD PTR [edi]
  41ce03:	repz cwde 
  41ce05:	pop    ebx
  41ce06:	pop    ebp
  41ce07:	xor    DWORD PTR [esp+ebp*8],0x4bb29bc6
  41ce0e:	jns    0x41ce86
  41ce10:	fsub   st(4),st
  41ce12:	adc    DWORD PTR [edx],esp
  41ce14:	adc    BYTE PTR [edx+0x4dd62a73],al
  41ce1a:	call   0x6cb8:0x6f0fc494
  41ce21:	dec    ebx
  41ce22:	enter  0xfc00,0x9c
  41ce26:	ror    DWORD PTR [eax-0x5c],0xf0
  41ce2a:	xchg   ebp,eax
  41ce2b:	cmc    
  41ce2c:	and    dh,BYTE PTR [ebp-0x6e07b85e]
  41ce32:	xor    dh,BYTE PTR [edx-0x65]
  41ce35:	es xor al,0x15
  41ce38:	lea    edx,ds:0xa30028d4
  41ce3e:	out    0x89,al
  41ce40:	jno    0x41cdd4
  41ce42:	dec    eax
  41ce43:	nop
  41ce44:	sub    DWORD PTR [edx+0x42285964],ebx
  41ce4a:	lds    edi,FWORD PTR [edx+0xdbdc537]
  41ce50:	aas    
  41ce51:	pop    DWORD PTR [esi+0x53]
  41ce54:	out    0x7e,eax
  41ce56:	dec    ebp
  41ce57:	aaa    
  41ce58:	cs ss inc esp
  41ce5b:	nop
  41ce5c:	lods   eax,DWORD PTR ds:[esi]
  41ce5d:	ret    0xdd32
  41ce60:	mov    cl,0xf
  41ce62:	dec    ebx
  41ce63:	lahf   
  41ce64:	adc    ecx,DWORD PTR [edx-0x4ecc5677]
  41ce6a:	mul    BYTE PTR [ebx]
  41ce6c:	(bad)  
  41ce6e:	scas   eax,DWORD PTR es:[edi]
  41ce6f:	(bad)  
  41ce70:	cmp    al,0xf3
  41ce72:	bound  ebp,QWORD PTR [eax-0x2c]
  41ce75:	fwait
  41ce76:	xchg   DWORD PTR ds:0xf82fb027,ecx
  41ce7c:	cdq    
  41ce7d:	out    0xf4,eax
  41ce7f:	int    0xd2
  41ce81:	push   edi
  41ce83:	test   BYTE PTR [edi+0x20941c7b],0xcc
  41ce8a:	out    dx,eax
  41ce8b:	arpl   WORD PTR [ebp+ecx*2-0x7e],di
  41ce8f:	jmp    0xfb012e8b
  41ce94:	inc    ebx
  41ce95:	mov    esp,0xd57f07b3
  41ce9a:	lock mov ch,0xb2
  41ce9d:	call   DWORD PTR [esi+edx*1]
  41cea0:	push   esi
  41cea1:	outs   dx,DWORD PTR ds:[esi]
  41cea2:	push   eax
  41cea3:	call   0x51520c78
  41cea8:	pusha  
  41cea9:	pop    edi
  41ceaa:	cmp    BYTE PTR [eax],0x99
  41cead:	and    al,BYTE PTR [ebx+0x399a2f20]
  41ceb3:	or     al,0xe9
  41ceb6:	popf   
  41ceb7:	aam    0xde
  41ceb9:	lods   eax,DWORD PTR ds:[esi]
  41ceba:	vmread DWORD PTR [ecx-0x5f],eax
  41cebe:	jl     0x41ceb3
  41cec0:	inc    edx
  41cec1:	ror    ah,1
  41cec3:	xor    ebp,edi
  41cec5:	in     al,dx
  41cec6:	retf   
  41cec7:	ret    0x7dcb
  41ceca:	dec    ebx
  41cecb:	fs hlt 
  41cecd:	js     0x41cea2
  41cecf:	push   ecx
  41ced0:	outs   dx,DWORD PTR ds:[esi]
  41ced1:	call   0x9fc3b2b3
  41ced6:	loop   0x41cefc
  41ced8:	dec    esp
  41ced9:	lock div DWORD PTR [edi+0x2f]
  41cedd:	or     DWORD PTR [ebx*1-0x260d69c9],esp
  41cee4:	inc    eax
  41cee5:	xor    al,0x38
  41cee7:	xchg   edx,eax
  41cee8:	mov    ah,0x6e
  41ceea:	ror    ecx,1
  41ceec:	pop    edi
  41ceed:	push   ecx
  41ceee:	jnp    0x41cebe
  41cef0:	sub    al,0xc1
  41cef2:	xchg   BYTE PTR ds:0xfb984860,cl
  41cef8:	cmp    DWORD PTR [ebp-0x65],ebx
  41cefb:	scas   eax,DWORD PTR es:[edi]
  41cefc:	imul   esi,DWORD PTR [ecx-0x1c1a56be],0x45
  41cf03:	add    al,0xf3
  41cf05:	and    al,0x8c
  41cf07:	inc    edi
  41cf08:	sbb    BYTE PTR [ecx+0x4ee9d744],ch
  41cf0e:	(bad)  
  41cf10:	xchg   DWORD PTR [edx+0x16],ebx
  41cf13:	jge    0x41cf72
  41cf15:	sub    DWORD PTR [edx],0x25858e02
  41cf1b:	stos   BYTE PTR es:[edi],al
  41cf1c:	out    0x52,eax
  41cf1e:	pusha  
  41cf1f:	or     dh,BYTE PTR [edi+0x27ac372a]
  41cf25:	sub    bh,BYTE PTR [ebp-0x22]
  41cf28:	jle    0x41ceec
  41cf2a:	push   ecx
  41cf2b:	popa   
  41cf2c:	jmp    0x849fe46
  41cf31:	ret    0x6ed3
  41cf34:	es ins BYTE PTR es:[edi],dx
  41cf36:	ja     0x41cf41
  41cf38:	push   edx
  41cf39:	aaa    
  41cf3a:	(bad)  
  41cf3b:	and    al,0x19
  41cf3d:	jne    0x41cf26
  41cf3f:	int3   
  41cf40:	sbb    BYTE PTR [ebp+0x5aa9e760],ah
  41cf46:	fdivr  QWORD PTR [ebx+0x2b]
  41cf49:	test   DWORD PTR [edi],ecx
  41cf4b:	hlt    
  41cf4c:	pop    esi
  41cf4d:	adc    BYTE PTR [ecx-0x683991b],0xa5
  41cf54:	shr    BYTE PTR [eax-0xee7aa29],0x84
  41cf5b:	stc    
  41cf5c:	mov    dl,0x90
  41cf5e:	sbb    BYTE PTR [esi-0x71],0x6d
  41cf62:	mov    esp,0xdc95feaf
  41cf67:	jmp    edx
  41cf69:	mov    ecx,0x5041339c
  41cf6e:	xchg   esi,eax
  41cf6f:	int    0xc6
  41cf71:	inc    esi
  41cf72:	icebp  
  41cf73:	or     BYTE PTR [edx+ebp*8],ch
  41cf76:	jecxz  0x41cfcf
  41cf78:	or     eax,0x1a90791a
  41cf7d:	mov    BYTE PTR [edx-0x783b6377],ah
  41cf83:	or     DWORD PTR [edx],edx
  41cf85:	sub    DWORD PTR ds:[eax],ecx
  41cf88:	xchg   edx,eax
  41cf89:	je     0x41cf9e
  41cf8b:	mul    BYTE PTR [edx+esi*8+0x2b]
  41cf8f:	push   edx
  41cf90:	sbb    BYTE PTR [ebx],dl
  41cf92:	leave  
  41cf93:	ds sbb eax,0xbe3105d6
  41cf99:	inc    ebx
  41cf9a:	pushf  
  41cf9b:	daa    
  41cf9c:	sub    bl,bh
  41cf9e:	inc    eax
  41cf9f:	(bad)  
  41cfa0:	mov    ecx,0x6e10cafa
  41cfa5:	ss add eax,0x2f62093d
  41cfab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cfac:	pop    esp
  41cfad:	pop    esp
  41cfae:	xchg   edx,eax
  41cfaf:	rcr    DWORD PTR [eax-0x6e537161],cl
  41cfb5:	ss cmp eax,0x6df5b819
  41cfbb:	add    BYTE PTR [ebp+0x71],al
  41cfbe:	das    
  41cfbf:	jo     0x41d00e
  41cfc1:	aas    
  41cfc2:	aaa    
  41cfc3:	loopne 0x41cf70
  41cfc5:	inc    eax
  41cfc6:	mov    ch,0x28
  41cfc8:	neg    BYTE PTR fs:[ebp-0x14927811]
  41cfcf:	aaa    
  41cfd0:	(bad)  
  41cfd1:	jae    0x41cfdc
  41cfd3:	dec    ebx
  41cfd4:	imul   esp,esp,0x4c
  41cfd7:	(bad)
  41cfdb:	repz cmp BYTE PTR [edi+0x29],0xfe
  41cfe0:	das    
  41cfe1:	push   0xb33e7bff
  41cfe6:	inc    ebx
  41cfe7:	mov    bh,0x9b
  41cfe9:	mov    bh,0xcd
  41cfeb:	dec    edi
  41cfec:	lock jmp DWORD PTR [edi]
  41cfef:	jmp    0x41d060
  41cff1:	call   0x624e:0x91fd0e37
  41cff8:	jnp    0x41cfe0
  41cffa:	fsubr  QWORD PTR [eax+0x473ba476]
  41d000:	retf   
  41d001:	jns    0x41d080
  41d003:	mov    ss:0x769eef29,al
  41d009:	xor    eax,0x229b00ea
  41d00e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d00f:	test   eax,0xe82f04d9
  41d014:	sahf   
  41d015:	add    eax,0x38c8e3d9
  41d01a:	loopne 0x41d075
  41d01c:	xchg   edi,eax
  41d01d:	loopne 0x41d067
  41d01f:	cld    
  41d020:	out    dx,al
  41d021:	bnd js 0x41cfba
  41d024:	fdivr  QWORD PTR [edi]
  41d026:	cmp    eax,eax
  41d028:	dec    esp
  41d029:	ror    DWORD PTR [esi],1
  41d02b:	sub    cl,dh
  41d02d:	add    DWORD PTR [esi],ebp
  41d02f:	jmp    DWORD PTR [edx+0x77]
  41d032:	jp     0x41d048
  41d034:	sar    BYTE PTR ss:[ecx],1
  41d037:	lock lock (bad) 
  41d03a:	jae    0x41d066
  41d03c:	xor    ebp,edx
  41d03e:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41d040:	nop
  41d041:	popf   
  41d042:	mov    edx,0x296022aa
  41d047:	stos   DWORD PTR es:[edi],eax
  41d048:	adc    eax,0x41705914
  41d04d:	sub    al,0xa6
  41d04f:	mov    dl,0x68
  41d051:	hlt    
  41d052:	and    eax,0xe039e1d5
  41d057:	jmp    0x41cfda
  41d059:	fimul  WORD PTR [esi]
  41d05b:	cmp    BYTE PTR [esi],0x6f
  41d05e:	ror    DWORD PTR [ebp-0x1f2afa56],0x46
  41d065:	loop   0x41d0ba
  41d067:	jmp    0x312a:0x2cb09e08
  41d06e:	dec    ebp
  41d06f:	mov    dl,0x44
  41d071:	pop    ebp
  41d072:	inc    esi
  41d073:	inc    edi
  41d074:	mov    ebp,DWORD PTR [ebp+0x2c0b7089]
  41d07a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d07b:	push   ecx
  41d07c:	or     eax,0xbabe2d1
  41d081:	sub    BYTE PTR [esi+0x1b],dl
  41d084:	hlt    
  41d085:	mov    WORD PTR [ebx],gs
  41d087:	mov    ah,0xee
  41d089:	iret   
  41d08a:	bound  esp,QWORD PTR [esi-0x360436db]
  41d090:	mov    ch,0xb9
  41d092:	mov    cl,0x8d
  41d094:	sbb    DWORD PTR [eax-0x49],esp
  41d097:	xor    eax,0x85a51cae
  41d09c:	(bad)  
  41d09d:	ss adc eax,0xee51784
  41d0a3:	mov    ds:0xa36529a5,al
  41d0a8:	cdq    
  41d0a9:	stos   DWORD PTR es:[edi],eax
  41d0aa:	dec    ecx
  41d0ab:	add    al,0xc6
  41d0ad:	enter  0xc673,0xd8
  41d0b1:	popa   
  41d0b2:	xor    ah,BYTE PTR [ebx]
  41d0b4:	mov    ecx,0x5d7ecf34
  41d0b9:	inc    esi
  41d0ba:	sti    
  41d0bb:	xor    BYTE PTR [ebx],bl
  41d0bd:	jb     0x41d101
  41d0bf:	inc    eax
  41d0c0:	ret    
  41d0c1:	leave  
  41d0c2:	or     esp,esi
  41d0c4:	jae    0x41d0e2
  41d0c6:	and    al,0x39
  41d0c8:	(bad)
  41d0cb:	dec    edi
  41d0cc:	jmp    0xec27:0x7427a882
  41d0d3:	dec    edx
  41d0d4:	outs   dx,BYTE PTR ds:[esi]
  41d0d5:	mov    esi,0x1fe57824
  41d0da:	not    dl
  41d0dc:	retf   0xcf02
  41d0df:	pop    ebp
  41d0e0:	bound  edi,QWORD PTR [ebx]
  41d0e2:	xor    ebx,DWORD PTR [edx]
  41d0e4:	add    edx,DWORD PTR [edi+0x27]
  41d0e7:	out    dx,eax
  41d0e8:	iret   
  41d0e9:	aad    0x46
  41d0eb:	addr16 sbb ecx,esp
  41d0ee:	dec    eax
  41d0ef:	out    dx,al
  41d0f0:	test   al,0x8f
  41d0f2:	pop    esp
  41d0f3:	mov    dl,0x85
  41d0f5:	jge    0x41d0ca
  41d0f7:	addr16 pop ebp
  41d0f9:	js     0x41d142
  41d0fb:	push   0x1f
  41d0fd:	stc    
  41d0fe:	es mov ah,0x6b
  41d101:	repnz push ss
  41d103:	cmp    al,0xed
  41d105:	dec    ebp
  41d106:	mov    ch,0xaa
  41d108:	inc    esi
  41d109:	pop    esi
  41d10a:	clc    
  41d10b:	pushf  
  41d10c:	ins    BYTE PTR es:[edi],dx
  41d10d:	xor    DWORD PTR [edi-0x3a101a17],edx
  41d113:	add    DWORD PTR [esi+0x4b],ebx
  41d116:	push   esp
  41d117:	mov    eax,ds:0xd74d487d
  41d11c:	sbb    BYTE PTR [ebx+0x195e60b2],dh
  41d122:	outs   dx,BYTE PTR ds:[esi]
  41d123:	jae    0x41d17c
  41d125:	call   FWORD PTR [ecx]
  41d127:	mov    ah,bl
  41d129:	out    0xa3,al
  41d12b:	in     eax,dx
  41d12c:	mov    dl,0x81
  41d12e:	inc    esi
  41d12f:	loopne 0x41d0ed
  41d131:	lods   al,BYTE PTR ds:[esi]
  41d132:	in     al,0xcb
  41d134:	cmp    BYTE PTR [ecx+0x3e],dl
  41d137:	and    al,0xb8
  41d139:	jb     0x41d125
  41d13b:	mov    bl,0xdd
  41d13d:	lahf   
  41d13e:	mov    edx,0xb4c9165b
  41d143:	pushf  
  41d144:	push   edi
  41d145:	ins    DWORD PTR es:[edi],dx
  41d146:	rcr    BYTE PTR [ecx+0x4f],1
  41d149:	jg     0x41d0e2
  41d14b:	lods   al,BYTE PTR ds:[esi]
  41d14c:	fiadd  DWORD PTR [edx-0x3b3de340]
  41d152:	mov    bh,0xfa
  41d154:	mov    dh,0x9f
  41d156:	ret    
  41d157:	outs   dx,DWORD PTR ds:[esi]
  41d158:	test   DWORD PTR [ebp+0x63ac9adc],ebp
  41d15e:	add    esi,ecx
  41d160:	das    
  41d161:	(bad)  
  41d162:	push   cs
  41d163:	push   esp
  41d164:	push   ebp
  41d165:	xchg   BYTE PTR [eax-0x3910b86b],ch
  41d16b:	fwait
  41d16c:	dec    esp
  41d16d:	imul   ebp,DWORD PTR [eax],0x80ee81ed
  41d173:	data16 cmp bh,BYTE PTR [eax+0x27d46930]
  41d17a:	cmp    DWORD PTR [ebx],ebx
  41d17c:	add    al,0xd9
  41d17e:	sub    esp,DWORD PTR [edi-0x3c]
  41d181:	xchg   DWORD PTR [esi+0x5],edi
  41d184:	push   eax
  41d185:	mov    bl,0x6a
  41d187:	dec    esp
  41d188:	sbb    al,0x4d
  41d18a:	out    dx,al
  41d18b:	or     bl,BYTE PTR [edi]
  41d18d:	inc    edx
  41d18e:	(bad)
  41d192:	cli    
  41d193:	sub    BYTE PTR [eax+0x7f8294c5],dl
  41d199:	mov    ebp,0xd4cbe5b
  41d19e:	fs icebp 
  41d1a0:	sbb    al,0xa5
  41d1a2:	push   esp
  41d1a3:	mov    eax,ds:0x6dcd674e
  41d1a8:	mov    al,ds:0x6d2c0848
  41d1ad:	push   ecx
  41d1ae:	call   0xa797:0x9b619ad6
  41d1b5:	cs add ch,dl
  41d1b8:	mov    al,cs:0x5e5c9f90
  41d1be:	lahf   
  41d1bf:	lods   al,BYTE PTR ds:[esi]
  41d1c0:	fs xor eax,0x666cf0c1
  41d1c6:	jno    0x41d1f4
  41d1c8:	scas   eax,DWORD PTR es:[edi]
  41d1c9:	or     ah,0xf2
  41d1cc:	sbb    bl,bl
  41d1ce:	cwde   
  41d1cf:	in     eax,dx
  41d1d0:	ret    0x192d
  41d1d3:	lea    edi,[ecx+ebx*4+0x78]
  41d1d7:	dec    ecx
  41d1d8:	or     esp,edx
  41d1da:	mov    ebp,0x3378bcf5
  41d1df:	or     esi,edx
  41d1e1:	into   
  41d1e2:	enter  0xaee1,0x28
  41d1e6:	mov    WORD PTR [esp+ebx*2+0x5e2ac60d],?
  41d1ed:	jmp    0x40af22ba
  41d1f2:	jns    0x41d1a8
  41d1f4:	sub    BYTE PTR [ebp+0x34],dl
  41d1f7:	cmp    dh,BYTE PTR [ebp+0x1a]
  41d1fa:	clc    
  41d1fb:	clc    
  41d1fc:	(bad)
  41d200:	inc    esp
  41d201:	xchg   edx,eax
  41d202:	jmp    0xaf6fbe54
  41d207:	(bad)  
  41d208:	jae    0x41d19a
  41d20a:	cmp    eax,0x66d883e6
  41d20f:	mov    ebp,0x22d6f88d
  41d214:	inc    eax
  41d215:	and    ch,bl
  41d217:	loopne 0x41d28e
  41d219:	les    eax,FWORD PTR [ecx]
  41d21b:	push   edx
  41d21c:	mov    ah,0x69
  41d21e:	mov    esp,0x707268bc
  41d223:	es mov dl,0x1e
  41d226:	gs dec eax
  41d228:	sti    
  41d229:	cmp    DWORD PTR [esi-0x4b],esp
  41d22c:	inc    esp
  41d22d:	jmp    0x41d240
  41d22f:	les    eax,FWORD PTR [eax-0x81fed51]
  41d235:	xchg   BYTE PTR [esp+edi*8+0x6879032b],ch
  41d23c:	add    al,0xe1
  41d23e:	lods   al,BYTE PTR ds:[esi]
  41d23f:	add    BYTE PTR [edx+0x57],0x21
  41d243:	scas   al,BYTE PTR es:[edi]
  41d244:	mov    ?,WORD PTR [edi+0x8035bf7]
  41d24a:	inc    ebp
  41d24b:	jnp    0x41d26d
  41d24d:	dec    ecx
  41d24e:	push   0xffffffb7
  41d250:	mov    ah,BYTE PTR [ecx+0x62]
  41d253:	mov    ch,0x12
  41d255:	inc    edi
  41d256:	clc    
  41d257:	(bad)  [esi+0x213939a7]
  41d25d:	pop    ecx
  41d25e:	icebp  
  41d25f:	pop    esi
  41d260:	ret    0xa079
  41d263:	cmp    esp,DWORD PTR [eax+0xe3f7664]
  41d269:	popa   
  41d26a:	push   ss
  41d26b:	and    al,0x85
  41d26d:	jmp    0x41d22c
  41d26f:	nop
  41d270:	mov    esi,0x86f3e99e
  41d275:	xchg   DWORD PTR [ecx],ebp
  41d277:	jbe    0x41d206
  41d279:	daa    
  41d27a:	push   eax
  41d27b:	daa    
  41d27c:	mov    edx,DWORD PTR [ebp+0x14b2768b]
  41d282:	mov    DWORD PTR [eax+0x109d0fa4],esi
  41d288:	sar    BYTE PTR [edi],0x5b
  41d28b:	aam    0x28
  41d28d:	addr16 inc esi
  41d28f:	push   esi
  41d290:	std    
  41d291:	mov    ebp,0xc91fe8cc
  41d296:	fdiv   DWORD PTR [ebx+eax*4-0x43]
  41d29a:	cld    
  41d29b:	push   ebx
  41d29c:	mov    al,ds:0xb727adc6
  41d2a1:	jecxz  0x41d310
  41d2a3:	fsubr  QWORD PTR [edx+0x7]
  41d2a6:	xchg   ebx,eax
  41d2a7:	ds cmc 
  41d2a9:	jmp    0xc254:0x38477581
  41d2b0:	jb     0x41d256
  41d2b2:	mov    eax,ds:0x56917d4d
  41d2b7:	pop    esi
  41d2b8:	xor    al,BYTE PTR [edx]
  41d2ba:	out    dx,al
  41d2bb:	or     ch,bh
  41d2bd:	jl     0x41d264
  41d2bf:	fwait
  41d2c0:	xchg   cl,bl
  41d2c2:	imul   edi,DWORD PTR [ecx+0x163e4066],0x183d3f7d
  41d2cc:	push   DWORD PTR [edx-0x6e0e45e5]
  41d2d2:	leave  
  41d2d3:	aam    0xad
  41d2d5:	shl    BYTE PTR [edi-0x73e805f5],0xbf
  41d2dc:	idiv   BYTE PTR [edi+0x5e]
  41d2df:	dec    esi
  41d2e0:	and    bh,BYTE PTR cs:[ebx-0x7bd019d9]
  41d2e7:	cmp    BYTE PTR [edi-0x70],0xc2
  41d2eb:	adc    dh,BYTE PTR [ecx-0x10515275]
  41d2f1:	cmp    BYTE PTR [esi+0x7d],0x1c
  41d2f5:	adc    al,0xc9
  41d2f7:	mov    ebx,0xfec37b
  41d2fc:	inc    esi
  41d2fd:	arpl   WORD PTR [ecx],bp
  41d2ff:	xor    cl,cl
  41d301:	shl    DWORD PTR [esi],1
  41d303:	add    ch,ch
  41d305:	repnz cmp dl,BYTE PTR [edi-0x41]
  41d309:	mov    eax,DWORD PTR [ebp+0x49]
  41d30c:	sub    DWORD PTR [edi-0x3f],esi
  41d30f:	xlat   BYTE PTR ds:[ebx]
  41d310:	mov    ebp,0x36558c7f
  41d315:	fild   DWORD PTR [ebp+0x6b]
  41d318:	jne    0x41d33c
  41d31a:	inc    esp
  41d31b:	pop    edi
  41d31c:	or     DWORD PTR ds:0xa796c0a4,ebp
  41d322:	je     0x41d315
  41d324:	cmp    al,BYTE PTR [ebx-0x33]
  41d327:	sub    eax,0x58df2495
  41d32c:	and    ah,ch
  41d32e:	call   0x2739:0x314f8472
  41d335:	pop    ecx
  41d336:	imul   edx,esi,0xffffffdc
  41d339:	xor    BYTE PTR [ebx+ecx*8-0x9],al
  41d33d:	call   0xca42:0x447a0962
  41d344:	loop   0x41d3bb
  41d346:	shl    BYTE PTR [esi+0x4f8478e1],0xed
  41d34d:	sub    DWORD PTR [ecx],0x26
  41d350:	dec    esp
  41d351:	and    ch,BYTE PTR [ebx]
  41d353:	ror    DWORD PTR [edi-0x5b8bff66],0x48
  41d35a:	hlt    
  41d35b:	repz rcr ah,1
  41d35e:	add    edx,DWORD PTR [edi+0x7c]
  41d361:	lock fadd st(5),st
  41d364:	fcomp  st(5)
  41d366:	mov    edx,0xc4119292
  41d36b:	das    
  41d36c:	out    0x5e,eax
  41d36e:	mov    ds:0xcc296175,eax
  41d373:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d374:	repnz inc ebp
  41d376:	cs and ah,0x90
  41d37a:	and    DWORD PTR [ebx+eiz*8],esp
  41d37d:	pop    eax
  41d37e:	ja     0x41d3f8
  41d380:	mov    dl,0x7d
  41d382:	jle    0x41d329
  41d384:	and    bl,BYTE PTR [ecx+0xfc823a7]
  41d38a:	jns    0x41d319
  41d38c:	mov    bh,0x3
  41d38e:	jo     0x41d330
  41d390:	mov    BYTE PTR cs:[edx+0x45],cl
  41d394:	aas    
  41d395:	(bad)  [ecx+0x25]
  41d398:	pushf  
  41d399:	loop   0x41d3d0
  41d39b:	mov    al,ds:0xee297037
  41d3a0:	aaa    
  41d3a1:	add    al,0x6c
  41d3a3:	lea    esp,[esi+0x756997d4]
  41d3a9:	imul   ebx,ebx,0xffffffd6
  41d3ac:	sbb    eax,esp
  41d3ae:	bound  ebx,QWORD PTR [ebp+edx*4+0x6]
  41d3b2:	ds int3 
  41d3b4:	icebp  
  41d3b5:	or     al,0xb5
  41d3b7:	xchg   ebp,esi
  41d3b9:	stos   DWORD PTR es:[edi],eax
  41d3ba:	xor    eax,0x8ca388f9
  41d3bf:	test   al,0x8c
  41d3c1:	sbb    eax,0x930abea3
  41d3c6:	jge    0x41d375
  41d3c8:	and    eax,0x2585c1fd
  41d3cd:	jno    0x41d357
  41d3cf:	mov    eax,0xb28d222a
  41d3d4:	xlat   BYTE PTR ds:[ebx]
  41d3d5:	repnz xor al,0xf3
  41d3d8:	xor    eax,0xd9c4297b
  41d3dd:	add    al,0x56
  41d3df:	push   es
  41d3e0:	mov    bl,0xc8
  41d3e2:	rcl    ecx,1
  41d3e4:	mov    ah,0x6
  41d3e6:	sub    edx,DWORD PTR [edx]
  41d3e8:	mov    esi,0xbf70dcdc
  41d3ed:	xchg   BYTE PTR [edi-0x497c0a3b],dh
  41d3f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3f4:	repz imul DWORD PTR [eax-0x5e]
  41d3f8:	pop    edi
  41d3f9:	shr    DWORD PTR [ecx-0x6d],cl
  41d3fc:	xor    DWORD PTR [edx+edi*1+0x4ff3cfa8],eax
  41d403:	ins    BYTE PTR es:[edi],dx
  41d404:	adc    al,0x7f
  41d406:	test   DWORD PTR [ecx+0x70],0x1711f4ba
  41d40d:	imul   ecx,DWORD PTR [ebp-0x16a1bdae],0xffffffd6
  41d414:	aas    
  41d415:	es xchg ebp,eax
  41d417:	adc    esp,DWORD PTR [eax]
  41d419:	cs dec ebp
  41d41b:	lods   eax,DWORD PTR ds:[esi]
  41d41c:	test   BYTE PTR [ecx],ah
  41d41e:	mov    ds:0x131c95a9,eax
  41d423:	dec    ebx
  41d424:	push   0x8e9986f0
  41d429:	push   ecx
  41d42a:	repz jecxz 0x41d494
  41d42d:	call   0x61d3:0x2d2fa9af
  41d434:	sub    esp,ecx
  41d436:	xchg   BYTE PTR [esi-0x6fbd54b],dl
  41d43c:	adc    dl,BYTE PTR [ebx]
  41d43e:	out    dx,al
  41d43f:	imul   DWORD PTR [edi-0x66]
  41d442:	and    al,0xec
  41d444:	xlat   BYTE PTR ds:[ebx]
  41d445:	das    
  41d446:	or     al,0x4f
  41d448:	fisttp WORD PTR [esi+0x46]
  41d44b:	sub    al,ah
  41d44d:	inc    edi
  41d44e:	in     al,dx
  41d44f:	sub    esi,DWORD PTR [edi+ecx*8-0x3bfe7f1b]
  41d456:	test   al,0xfe
  41d458:	xchg   BYTE PTR [ebx-0x41d65b62],ah
  41d45e:	xor    BYTE PTR [eax+0x48],bl
  41d461:	sub    dl,BYTE PTR [esp+ebx*8]
  41d464:	push   edi
  41d465:	call   0x662e4f62
  41d46a:	and    edi,ebx
  41d46c:	sub    ch,BYTE PTR [edx]
  41d46e:	aam    0xa5
  41d470:	test   al,dh
  41d472:	xchg   BYTE PTR [ebp+0x9617fd1],bh
  41d478:	stos   BYTE PTR es:[edi],al
  41d479:	mov    eax,0x3d299bb1
  41d47e:	fisub  WORD PTR [eax]
  41d480:	inc    ecx
  41d481:	pop    eax
  41d482:	call   0xc91536a1
  41d487:	sbb    BYTE PTR [edx+0x3fe07a42],0xdb
  41d48e:	adc    dh,BYTE PTR [ecx+0x28df88a5]
  41d494:	fisttp DWORD PTR [ecx]
  41d496:	xchg   edi,eax
  41d497:	mov    esi,0xac8542a8
  41d49c:	arpl   ax,cx
  41d49e:	pusha  
  41d49f:	jge    0x41d509
  41d4a1:	jg     0x41d427
  41d4a3:	xchg   BYTE PTR [edi],al
  41d4a5:	cmc    
  41d4a6:	mov    ?,eax
  41d4a8:	xchg   ebp,eax
  41d4a9:	shr    DWORD PTR [edx-0x2e],0xc0
  41d4ad:	fstp   TBYTE PTR [edx]
  41d4af:	in     eax,dx
  41d4b0:	jo     0x41d476
  41d4b2:	jp     0x41d491
  41d4b4:	mov    bl,BYTE PTR [ecx-0x7e]
  41d4b7:	push   ebx
  41d4b8:	(bad)  [edx+0x9]
  41d4bb:	fstp   st(4)
  41d4bd:	mov    dh,0xdd
  41d4bf:	adc    BYTE PTR [esp+ebp*1-0x5493e248],dl
  41d4c6:	add    eax,0x8fd3a21a
  41d4cb:	pushf  
  41d4cc:	adc    al,0xde
  41d4ce:	lds    esi,FWORD PTR [ebp-0xec6d913]
  41d4d4:	pop    ss
  41d4d5:	lock xchg esp,eax
  41d4d7:	fdivr  st,st(3)
  41d4d9:	mov    esp,0xd1f35fbb
  41d4de:	cmp    BYTE PTR [edx-0x5565d2b1],bh
  41d4e4:	push   eax
  41d4e5:	dec    esp
  41d4e6:	push   ecx
  41d4e7:	pop    ecx
  41d4e8:	sbb    ebx,0x776cf6d4
  41d4ee:	and    eax,0xcc9f126c
  41d4f3:	adc    ebp,ecx
  41d4f5:	sar    BYTE PTR [ebx],cl
  41d4f7:	lea    edx,[edx]
  41d4f9:	fistp  DWORD PTR [edx+0x2392d0c9]
  41d4ff:	dec    esi
  41d500:	call   0x7a79:0x718868ca
  41d507:	push   ds
  41d508:	mov    eax,0x726fbb15
  41d50d:	pop    eax
  41d50e:	sub    ebx,eax
  41d510:	lds    ebp,FWORD PTR [ebx]
  41d512:	sar    DWORD PTR [esi-0x4f],1
  41d515:	test   eax,0x9701b65d
  41d51a:	pop    esp
  41d51b:	and    DWORD PTR [ecx],ecx
  41d51d:	and    eax,0xacb82a54
  41d522:	out    dx,al
  41d523:	xchg   BYTE PTR [ebp+eiz*4+0x49ae8678],bl
  41d52a:	ins    DWORD PTR es:[edi],dx
  41d52b:	push   esp
  41d52c:	daa    
  41d52d:	idiv   DWORD PTR fs:[edx-0x61]
  41d531:	jmp    0x8749:0x269de678
  41d538:	or     DWORD PTR [eax+0x17ed60fa],ebp
  41d53e:	push   0xffffff97
  41d540:	pop    ss
  41d541:	hlt    
  41d542:	test   al,0x25
  41d544:	cmp    al,0x16
  41d546:	mov    eax,ds:0x4b71d6e3
  41d54b:	fldcw  WORD PTR [ecx-0x45]
  41d54e:	jmp    0x41d527
  41d550:	inc    ebp
  41d551:	ret    
  41d552:	fadd   DWORD PTR [edi]
  41d554:	sahf   
  41d555:	and    esi,esi
  41d557:	ret    
  41d558:	dec    ebx
  41d559:	mov    ds:0xcd522905,al
  41d55e:	jle    0x41d50c
  41d560:	dec    ecx
  41d561:	push   cs
  41d562:	js     0x41d4f5
  41d564:	sub    dh,ah
  41d566:	mov    ch,0x49
  41d568:	int    0x6f
  41d56a:	push   ecx
  41d56b:	xor    al,BYTE PTR [ebx+0x4cb2799d]
  41d571:	div    DWORD PTR ds:0x5c5c5874
  41d577:	ja     0x41d53d
  41d579:	in     al,dx
  41d57a:	dec    esp
  41d57b:	xor    eax,0x1953c8dd
  41d580:	dec    esi
  41d581:	and    eax,0x98a92320
  41d586:	daa    
  41d587:	pop    esp
  41d588:	add    al,0xef
  41d58a:	out    dx,eax
  41d58b:	cld    
  41d58c:	pop    ds
  41d58d:	jl     0x41d52f
  41d58f:	ss dec ecx
  41d591:	xchg   ecx,eax
  41d592:	sbb    BYTE PTR [edi+0x75412bc6],al
  41d598:	lea    edx,[ebx+0x57]
  41d59b:	popw   ds
  41d59d:	pop    edx
  41d59e:	out    0x3,eax
  41d5a0:	sbb    DWORD PTR [ebp+0x7a],0x56271d31
  41d5a7:	mov    cl,0xc1
  41d5a9:	add    edx,ebx
  41d5ab:	xchg   DWORD PTR [edi+0x7e],eax
  41d5ae:	pusha  
  41d5af:	cmp    edi,DWORD PTR [edx]
  41d5b1:	inc    ebx
  41d5b2:	push   ebx
  41d5b3:	or     ebx,edx
  41d5b5:	mov    bh,0x3a
  41d5b7:	or     DWORD PTR [edx],0x6c
  41d5ba:	mov    bl,0xf6
  41d5bc:	arpl   sp,cx
  41d5be:	frstor [eax+0x55c3c57a]
  41d5c4:	jns    0x41d5d9
  41d5c6:	push   ecx
  41d5c7:	sbb    BYTE PTR [edx+0x574d3abb],bh
  41d5cd:	data16 sti 
  41d5cf:	xor    DWORD PTR [eax],ebx
  41d5d1:	fldcw  WORD PTR [esi-0x7d8372d7]
  41d5d7:	popa   
  41d5d8:	mov    ds,WORD PTR [esp+ecx*4-0x56300637]
  41d5df:	sub    al,BYTE PTR [edx-0xdab8ffb]
  41d5e5:	or     DWORD PTR [ecx],eax
  41d5e7:	cmp    ecx,DWORD PTR [bp+di]
  41d5ea:	and    esp,DWORD PTR [ecx-0x50]
  41d5ed:	pop    esp
  41d5ee:	pushf  
  41d5ef:	or     al,0x98
  41d5f1:	lds    edi,FWORD PTR [ebx+0x5f4a54b2]
  41d5f7:	jmp    0xe43d:0xd3e3b3a2
  41d5fe:	nop
  41d5ff:	mov    ebx,0x35a12b42
  41d604:	and    bh,BYTE PTR [eax]
  41d606:	mov    ah,0xec
  41d608:	shr    DWORD PTR [eax+0x64],cl
  41d60b:	ret    0x6234
  41d60e:	das    
  41d60f:	xlat   BYTE PTR ds:[ebx]
  41d610:	and    ebx,eax
  41d612:	(bad)  
  41d613:	scas   eax,DWORD PTR es:[edi]
  41d614:	add    DWORD PTR [ebx+edx*4-0x61c0e98a],edx
  41d61b:	or     al,0x8b
  41d61d:	sbb    esi,edi
  41d61f:	dec    ebp
  41d620:	mov    esi,0xd43396eb
  41d625:	in     al,0xc2
  41d627:	rcr    ebx,cl
  41d629:	icebp  
  41d62a:	xchg   ebp,eax
  41d62b:	dec    ebp
  41d62c:	in     eax,dx
  41d62d:	cdq    
  41d62e:	test   al,0xcb
  41d630:	and    ah,BYTE PTR [ecx+ebx*2+0x52]
  41d634:	push   eax
  41d635:	jb     0x41d64e
  41d637:	gs xor eax,0xa728c368
  41d63d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d63e:	xor    BYTE PTR [ecx-0x73],bh
  41d641:	enter  0x38,0x11
  41d645:	push   ebx
  41d646:	fnstcw WORD PTR [ebx+0xb]
  41d649:	dec    esp
  41d64a:	pop    es
  41d64b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d64c:	(bad)  
  41d64d:	aas    
  41d64e:	out    0x2f,eax
  41d650:	call   FWORD PTR [ecx+edi*4+0x26]
  41d654:	jbe    0x41d60d
  41d656:	fsub   st,st(6)
  41d658:	imul   esp,ecx,0x73
  41d65b:	fsubr  st(2),st
  41d65d:	sub    eax,esi
  41d65f:	outs   dx,DWORD PTR ds:[esi]
  41d660:	scas   al,BYTE PTR es:[edi]
  41d661:	test   BYTE PTR [edx+ebx*1-0x435ed1ed],bl
  41d668:	sub    DWORD PTR [ebp+0x5a48c7],eax
  41d66e:	adc    dh,dh
  41d670:	push   eax
  41d671:	lods   al,BYTE PTR ds:[esi]
  41d672:	mov    edx,0x991181fb
  41d677:	cmp    dh,BYTE PTR [ebx]
  41d679:	jmp    0xe48ed909
  41d67e:	inc    edx
  41d67f:	jb     0x41d65b
  41d681:	out    0xc4,eax
  41d683:	ret    
  41d684:	inc    esp
  41d685:	loopne 0x41d697
  41d687:	and    eax,0xd0b5de06
  41d68c:	adc    al,0xd8
  41d68e:	jno    0x41d6f2
  41d690:	jb     0x41d6a2
  41d692:	fs cmc 
  41d694:	int    0x4f
  41d696:	dec    edi
  41d697:	adc    esi,DWORD PTR [ebx]
  41d699:	add    DWORD PTR [eax],esi
  41d69b:	test   ebx,ebx
  41d69d:	jge    0x41d679
  41d69f:	retf   
  41d6a0:	loope  0x41d672
  41d6a2:	mov    esp,0xe88e6469
  41d6a7:	ret    
  41d6a8:	push   ds
  41d6a9:	(bad)  
  41d6aa:	xor    DWORD PTR [ebp-0x42940608],ecx
  41d6b0:	loope  0x41d70c
  41d6b2:	or     eax,DWORD PTR [esi+ebx*2]
  41d6b5:	sub    eax,0x132475e9
  41d6ba:	or     ebx,ecx
  41d6bc:	pop    es
  41d6bd:	push   0xf77873d3
  41d6c2:	(bad)  
  41d6c3:	jmp    0x41d65c
  41d6c5:	push   esi
  41d6c6:	daa    
  41d6c7:	mov    dl,BYTE PTR [ebx-0x684d15e5]
  41d6cd:	adc    ecx,DWORD PTR [edx]
  41d6cf:	arpl   si,bx
  41d6d1:	stos   DWORD PTR es:[edi],eax
  41d6d2:	or     BYTE PTR [ebp+0x59387b96],dl
  41d6d8:	in     al,0xb4
  41d6da:	jl     0x41d71e
  41d6dc:	ins    DWORD PTR es:[edi],dx
  41d6dd:	adc    esi,DWORD PTR [edx]
  41d6df:	popa   
  41d6e0:	mov    ch,0x55
  41d6e2:	sbb    al,0x88
  41d6e4:	cmp    ch,0x38
  41d6e7:	icebp  
  41d6e8:	mov    ds:0xdd1550eb,eax
  41d6ed:	mov    ebp,0x78143ab8
  41d6f2:	pop    ebp
  41d6f3:	and    al,0x22
  41d6f5:	mov    edi,0x7252bfb4
  41d6fa:	mov    dh,BYTE PTR [ecx-0x6e]
  41d6fd:	dec    eax
  41d6fe:	iret   
  41d6ff:	lods   eax,DWORD PTR ds:[esi]
  41d700:	aad    0x4a
  41d702:	fcom   DWORD PTR [ebx]
  41d704:	jae    0x41d6ed
  41d706:	cmp    DWORD PTR [edx-0x41630156],esi
  41d70c:	pusha  
  41d70d:	test   BYTE PTR [ebp-0x4],ch
  41d710:	and    eax,DWORD PTR [edx-0x1a]
  41d713:	popa   
  41d714:	lods   eax,DWORD PTR ds:[esi]
  41d715:	stc    
  41d716:	mov    dh,0xcb
  41d718:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d719:	jge    0x41d77a
  41d71b:	outs   dx,BYTE PTR ds:[esi]
  41d71c:	daa    
  41d71d:	sub    cl,BYTE PTR [eax-0x15]
  41d720:	(bad)  
  41d721:	jmp    0x41d790
  41d723:	mov    ebx,0xb0f099bf
  41d728:	es sbb al,0x58
  41d72b:	into   
  41d72c:	cmp    dl,bh
  41d72e:	jo     0x41d73d
  41d730:	push   ebx
  41d731:	icebp  
  41d732:	ret    0xa3b0
  41d735:	mov    eax,0x68d623be
  41d73a:	mov    eax,ds:0x43f77bea
  41d73f:	es xchg esp,eax
  41d741:	shl    BYTE PTR [ecx],1
  41d743:	xchg   BYTE PTR ds:0x92f285d6,al
  41d749:	mov    al,ds:0x1972c4d8
  41d74e:	sub    bh,BYTE PTR [eax-0x5309fecd]
  41d754:	pop    ebp
  41d755:	mov    ds:0x62f37f16,eax
  41d75a:	lods   eax,DWORD PTR ds:[esi]
  41d75b:	push   es
  41d75c:	test   ah,ah
  41d75e:	dec    ebx
  41d75f:	leave  
  41d760:	jnp    0x41d74d
  41d762:	jg     0x41d7ae
  41d764:	push   cs
  41d765:	(bad)  
  41d766:	test   eax,0x36a763b1
  41d76b:	fcmovb st,st(4)
  41d76d:	leave  
  41d76e:	gs sub eax,0x9645e57e
  41d774:	outs   dx,DWORD PTR ds:[esi]
  41d775:	sbb    DWORD PTR [eax-0x4f],ebp
  41d778:	(bad)  
  41d779:	sbb    al,0x2d
  41d77b:	imul   eax,esi,0xffffffd8
  41d77e:	push   DWORD PTR [edx]
  41d780:	das    
  41d781:	test   DWORD PTR [eax+0x2b5773bc],ebp
  41d787:	dec    ebp
  41d788:	test   BYTE PTR ss:[esi+0x2580fa7d],ah
  41d78f:	adc    eax,DWORD PTR [eax+0x5e]
  41d792:	arpl   si,si
  41d794:	shl    BYTE PTR [ebx-0x23],cl
  41d797:	fist   DWORD PTR [edi+0x11]
  41d79a:	dec    esp
  41d79b:	adc    BYTE PTR [eax-0x58],ch
  41d79e:	sub    WORD PTR [edx+0x19b202fe],0xefd1
  41d7a7:	std    
  41d7a8:	retf   
  41d7a9:	(bad)  
  41d7aa:	mov    bh,0xf5
  41d7ac:	cwde   
  41d7ad:	lea    ebp,[ebp-0x3ee5cfeb]
  41d7b3:	dec    ecx
  41d7b4:	cdq    
  41d7b5:	(bad)  [esp+ebp*4]
  41d7b8:	inc    eax
  41d7b9:	nop
  41d7ba:	adc    eax,0xf146b696
  41d7bf:	stos   BYTE PTR es:[edi],al
  41d7c0:	or     ebp,edi
  41d7c2:	mov    fs,WORD PTR [edx]
  41d7c4:	ret    0x1f64
  41d7c7:	fld    QWORD PTR [esi+0x56]
  41d7ca:	push   es
  41d7cb:	xor    al,BYTE PTR [edi+eiz*8-0x14]
  41d7cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d7d0:	jp     0x41d7ff
  41d7d2:	cmp    dl,BYTE PTR [ebx]
  41d7d4:	scas   eax,DWORD PTR es:[edi]
  41d7d5:	je     0x41d7dc
  41d7d7:	or     al,0xa2
  41d7d9:	outs   dx,BYTE PTR ds:[esi]
  41d7da:	shl    dh,cl
  41d7dc:	shr    DWORD PTR [bp+si],1
  41d7df:	ins    DWORD PTR es:[edi],dx
  41d7e0:	shl    BYTE PTR [ebp+0xafffc3b],0x87
  41d7e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d7e8:	dec    ebx
  41d7e9:	and    bl,BYTE PTR [ebx+esi*8-0x8]
  41d7ed:	fwait
  41d7ee:	pop    ecx
  41d7ef:	or     cl,BYTE PTR [ebx+0x363e01a8]
  41d7f5:	iret   
  41d7f6:	sub    al,0x90
  41d7f8:	jmp    0x92af131e
  41d7fd:	jne    0x41d842
  41d7ff:	lahf   
  41d800:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d801:	stos   DWORD PTR es:[edi],eax
  41d802:	das    
  41d803:	push   ebx
  41d804:	popa   
  41d805:	cmp    edx,esp
  41d807:	inc    esi
  41d808:	mov    al,ds:0xbeaa0c2c
  41d80d:	out    dx,eax
  41d80e:	mov    dh,0x77
  41d810:	(bad)  
  41d811:	push   ecx
  41d812:	fsub   DWORD PTR [edi]
  41d814:	gs pop edi
  41d816:	pop    ebp
  41d817:	xor    BYTE PTR [edi+eax*1],0xbc
  41d81b:	mov    ah,0xaf
  41d81d:	call   0x76b8:0xbf3ad8ca
  41d824:	xchg   ecx,eax
  41d825:	mov    ecx,0x4570f958
  41d82a:	ret    
  41d82b:	leave  
  41d82c:	dec    edi
  41d82d:	xlat   BYTE PTR ds:[ebx]
  41d82e:	push   ebp
  41d82f:	in     al,0x12
  41d831:	push   eax
  41d832:	inc    ebp
  41d833:	stc    
  41d834:	ret    0x2ef5
  41d837:	mov    dh,0x31
  41d839:	dec    eax
  41d83a:	xor    al,0xe4
  41d83c:	(bad)  
  41d83d:	adc    eax,ebx
  41d83f:	call   0xac37:0x5150e29a
  41d846:	xchg   BYTE PTR [ecx],bh
  41d848:	test   al,0xba
  41d84a:	dec    ecx
  41d84b:	push   ebp
  41d84c:	(bad)  
  41d84e:	imul   ebp,DWORD PTR [esi],0x1d
  41d851:	out    0xec,al
  41d853:	sub    BYTE PTR [ebx+0x56],dh
  41d856:	inc    esi
  41d857:	cmc    
  41d858:	or     DWORD PTR [edi+0x47],ebx
  41d85b:	aad    0xe3
  41d85d:	je     0x41d814
  41d85f:	int    0xba
  41d861:	leave  
  41d862:	scas   eax,DWORD PTR es:[edi]
  41d863:	outs   dx,DWORD PTR ds:[esi]
  41d864:	xor    al,0x6c
  41d866:	sub    esp,DWORD PTR [edx+esi*1+0x54]
  41d86a:	out    dx,eax
  41d86b:	in     al,dx
  41d86c:	push   cs
  41d86d:	scas   al,BYTE PTR es:[edi]
  41d86e:	nop
  41d86f:	and    BYTE PTR [edi-0x47],0x36
  41d873:	ror    BYTE PTR [eax+0x1f],0x13
  41d877:	ins    BYTE PTR es:[edi],dx
  41d878:	jo     0x41d881
  41d87a:	cmp    al,0xd3
  41d87c:	xor    al,0xa1
  41d87e:	or     dh,bh
  41d880:	test   eax,0x4c72f192
  41d885:	sbb    eax,0x86063813
  41d88a:	jge    0x41d8dd
  41d88c:	pop    ecx
  41d88d:	xor    al,0x53
  41d88f:	sub    DWORD PTR [edi-0x45],ebx
  41d892:	icebp  
  41d893:	dec    edi
  41d894:	fs xchg edi,eax
  41d896:	mov    ecx,0x5ebcd59
  41d89b:	mov    esi,0xe376f542
  41d8a0:	xor    BYTE PTR [esi+0x7a],bl
  41d8a3:	retf   0x24c4
  41d8a6:	cld    
  41d8a7:	int3   
  41d8a8:	jno    0x41d880
  41d8aa:	cdq    
  41d8ab:	icebp  
  41d8ac:	call   0x4f2cb5f3
  41d8b1:	push   esi
  41d8b2:	fs ret 0x27e1
  41d8b6:	push   edi
  41d8b7:	shl    BYTE PTR [edi+0x5a],1
  41d8ba:	dec    edi
  41d8bb:	xlat   BYTE PTR ds:[ebx]
  41d8bc:	(bad)  
  41d8bd:	(bad)  
  41d8be:	cli    
  41d8bf:	push   eax
  41d8c0:	cmp    al,0x96
  41d8c2:	(bad)  
  41d8c3:	mov    esi,0xd57c0c21
  41d8c8:	jmp    0x281:0x6d7b53a2
  41d8cf:	in     al,0xdc
  41d8d1:	sbb    al,0xfc
  41d8d3:	mov    ah,0x64
  41d8d5:	je     0x41d8cc
  41d8d7:	xchg   esp,eax
  41d8d8:	xlat   BYTE PTR ds:[ebx]
  41d8d9:	pop    ecx
  41d8da:	and    eax,0x3e47e344
  41d8df:	ds inc ebx
  41d8e1:	stos   BYTE PTR es:[edi],al
  41d8e2:	addps  xmm3,XMMWORD PTR [edx-0x4a]
  41d8e6:	repnz inc eax
  41d8e8:	ins    BYTE PTR es:[edi],dx
  41d8e9:	cmp    DWORD PTR [edx-0x4b92deed],eax
  41d8ef:	aaa    
  41d8f0:	daa    
  41d8f1:	shl    DWORD PTR [edi-0x33],cl
  41d8f4:	addr16 push edx
  41d8f6:	ret    0x29a6
  41d8f9:	out    dx,eax
  41d8fa:	mov    DWORD PTR [ebx+0x4c08ab76],edi
  41d900:	sub    al,0x8f
  41d902:	test   al,0xff
  41d904:	mov    bh,0xda
  41d906:	mov    eax,0xc4eed124
  41d90b:	pop    ecx
  41d90c:	mov    dh,bl
  41d90e:	(bad)  [edx+0xec24373]
  41d914:	or     dh,BYTE PTR fs:[ebp+ecx*1-0x1c75504]
  41d91c:	ja     0x41d93a
  41d91e:	inc    esi
  41d91f:	(bad)  
  41d920:	pop    ax
  41d922:	ror    BYTE PTR [edi-0x1d],1
  41d925:	mov    ah,0x48
  41d927:	into   
  41d928:	cld    
  41d929:	pop    ebx
  41d92a:	stos   DWORD PTR es:[edi],eax
  41d92b:	xlat   BYTE PTR ds:[ebx]
  41d92c:	rcr    DWORD PTR [esp+edx*1-0xd],0xcd
  41d931:	or     cl,ah
  41d933:	shr    DWORD PTR [edi+esi*8],cl
  41d936:	ins    DWORD PTR es:[edi],dx
  41d937:	mov    edx,0xbc537cf4
  41d93c:	push   esi
  41d93d:	ins    BYTE PTR es:[edi],dx
  41d93e:	push   ds
  41d93f:	idiv   DWORD PTR [eax+0x6cb1f9c3]
  41d945:	cmc    
  41d946:	push   ds
  41d947:	mov    edi,0x19a491a0
  41d94c:	retf   
  41d94d:	dec    edx
  41d94e:	in     eax,0x99
  41d950:	aad    0xb8
  41d952:	fwait
  41d953:	add    al,0x44
  41d955:	jne    0x41d9b5
  41d957:	jae    0x41d99c
  41d959:	mov    bh,0xdb
  41d95b:	fadd   DWORD PTR gs:[ebx-0x65b5dab2]
  41d962:	lods   al,BYTE PTR ds:[esi]
  41d963:	std    
  41d964:	int3   
  41d965:	out    0xe6,eax
  41d967:	mov    bl,0x37
  41d969:	push   ecx
  41d96a:	sbb    al,0xfa
  41d96c:	sbb    BYTE PTR [ebx+esi*8+0x67],bh
  41d970:	add    al,BYTE PTR [edx+ecx*8]
  41d973:	mov    WORD PTR [eax+0x5d5ff8e3],fs
  41d979:	jo     0x41d957
  41d97b:	xchg   ecx,eax
  41d97c:	in     al,0x62
  41d97e:	or     dh,cl
  41d980:	xor    BYTE PTR [esi+0x69],ah
  41d983:	xor    eax,0x441821a5
  41d988:	dec    edi
  41d989:	cdq    
  41d98a:	mov    al,BYTE PTR [esi-0x614893c6]
  41d990:	mov    bl,bh
  41d992:	mov    dl,0x50
  41d994:	xor    DWORD PTR [esp+esi*1+0x52],0x68a14c72
  41d99c:	or     DWORD PTR [edx+0x1c],edx
  41d99f:	xor    al,dl
  41d9a1:	push   ebp
  41d9a2:	adc    eax,0xa1b54342
  41d9a7:	sbb    ebp,esp
  41d9a9:	int    0x68
  41d9ab:	popf   
  41d9ac:	or     DWORD PTR [edx],ebp
  41d9ae:	jp     0x41d9db
  41d9b0:	pop    ebx
  41d9b1:	cmp    ch,BYTE PTR [ecx-0x2743f71e]
  41d9b7:	push   edi
  41d9b8:	mov    ch,0xb5
  41d9ba:	ins    BYTE PTR es:[edi],dx
  41d9bb:	pop    es
  41d9bc:	fimul  DWORD PTR [eax-0x4e]
  41d9bf:	and    ebx,DWORD PTR [esi+0x28d8b725]
  41d9c5:	inc    esp
  41d9c6:	push   0x79029530
  41d9cb:	inc    esp
  41d9cc:	adc    esp,DWORD PTR ds:0x6ce38d16
  41d9d2:	repnz mov edx,0x4f0479b7
  41d9d8:	dec    esi
  41d9d9:	ss dec esp
  41d9db:	pop    esi
  41d9dc:	fild   QWORD PTR [esi]
  41d9de:	mov    ch,0x36
  41d9e0:	arpl   WORD PTR [edi+edi*4+0x1b],si
  41d9e4:	dec    ebx
  41d9e5:	dec    edx
  41d9e6:	sub    eax,0x6ad7ecb3
  41d9eb:	pop    esp
  41d9ec:	mov    al,0xb9
  41d9ee:	pop    ds
  41d9ef:	icebp  
  41d9f0:	inc    ecx
  41d9f1:	(bad)  
  41d9f2:	and    dh,BYTE PTR [edx-0x4c5672ed]
  41d9f8:	ss push eax
  41d9fa:	ret    0xb358
  41d9fd:	sub    ch,dh
  41d9ff:	and    DWORD PTR ds:0x6bd916e5,ebp
  41da05:	jnp    0x41da6a
  41da07:	sub    eax,0x11fa7028
  41da0c:	jae    0x41da2e
  41da0e:	call   0xf97af19b
  41da13:	call   0x6b00:0x19f975b5
  41da1a:	data16 mov ds:0xa9768b5f,al
  41da20:	inc    ecx
  41da21:	mov    eax,ds:0xdf760684
  41da26:	cmp    eax,0x66d09fc8
  41da2b:	in     eax,0x82
  41da2d:	gs push esp
  41da2f:	ror    BYTE PTR [esi-0x2e1233d7],1
  41da35:	mov    cl,0x2a
  41da37:	icebp  
  41da38:	es aaa 
  41da3a:	test   DWORD PTR [ebx+0x567d725c],esp
  41da40:	fdiv   QWORD PTR [edi]
  41da42:	fistp  DWORD PTR [ebx-0x4f]
  41da45:	inc    ebp
  41da46:	pminub mm3,QWORD PTR [eax-0x74d2a0b0]
  41da4d:	push   edx
  41da4e:	xchg   edx,eax
  41da4f:	sbb    DWORD PTR [ecx+0x32],0x50
  41da53:	push   0x2e
  41da55:	(bad)  
  41da56:	ficom  DWORD PTR [esi]
  41da58:	fsub   DWORD PTR [ebx]
  41da5a:	or     BYTE PTR [ebp-0x6c],0x1d
  41da5e:	jge    0x41da6f
  41da60:	sbb    al,0x5e
  41da62:	sub    cl,BYTE PTR [ebx]
  41da64:	mov    WORD PTR [ecx+esi*8+0x590369a8],gs
  41da6b:	gs ss sbb dl,cl
  41da6f:	in     al,0x58
  41da71:	xchg   ebp,eax
  41da72:	push   es
  41da73:	pop    edx
  41da74:	aam    0xc1
  41da76:	mov    edx,0x7d4f9697
  41da7b:	dec    ebx
  41da7c:	cld    
  41da7d:	sbb    BYTE PTR [ecx-0x71d6bc51],0xcc
  41da84:	stc    
  41da85:	sub    al,0x25
  41da87:	xchg   edx,eax
  41da88:	xchg   esp,eax
  41da89:	lock aad 0xa5
  41da8c:	imul   ebx,DWORD PTR [ebx+0x216cd5cb],0x27
  41da93:	je     0x41dac0
  41da95:	inc    esi
  41da96:	pop    esi
  41da97:	cmp    BYTE PTR [ebx-0x24],dl
  41da9a:	clc    
  41da9b:	xchg   esi,eax
  41da9c:	mov    WORD PTR [esi],fs
  41da9e:	xor    al,0x38
  41daa0:	jb     0x41da56
  41daa2:	div    DWORD PTR [edx]
  41daa4:	xchg   esp,eax
  41daa5:	sub    BYTE PTR [edi+0x66],bh
  41daa8:	call   0xcde5384a
  41daad:	add    al,0xbd
  41daaf:	jle    0x41db22
  41dab1:	or     esp,DWORD PTR [ebx+ecx*1]
  41dab4:	div    cl
  41dab6:	push   0xe914e037
  41dabb:	jle    0x41db2b
  41dabd:	push   es
  41dabe:	(bad)  
  41dabf:	mov    edx,0xc6d167b6
  41dac4:	push   esp
  41dac5:	xchg   DWORD PTR [ebx-0x39],esp
  41dac8:	push   edx
  41dac9:	pop    edi
  41daca:	jp     0x41dab0
  41dacc:	out    dx,al
  41dacd:	inc    ecx
  41dace:	inc    esp
  41dacf:	out    0x19,eax
  41dad1:	push   esp
  41dad2:	xchg   esp,edx
  41dad4:	js     0x41daf0
  41dad6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dad7:	imul   ebx,eax,0xd
  41dada:	in     eax,0xaf
  41dadc:	test   al,0x66
  41dade:	cmp    eax,0x8e5c4d35
  41dae3:	adc    ebp,DWORD PTR [ecx-0x3e45f0c6]
  41dae9:	inc    edi
  41daea:	fist   DWORD PTR [edx+0x57180889]
  41daf0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41daf1:	mov    esp,0x4c0274f1
  41daf6:	int    0xac
  41daf8:	int3   
  41daf9:	xchg   edi,eax
  41dafa:	cmp    al,0xa9
  41dafc:	inc    ebx
  41dafd:	ret    
  41dafe:	hlt    
  41daff:	mov    al,ds:0x17823018
  41db04:	ss mov ah,0x52
  41db07:	add    ebx,DWORD PTR [esi-0x2f]
  41db0a:	and    BYTE PTR ds:0x84cb39c6,0x3c
  41db11:	loopne 0x41db0c
  41db13:	pop    eax
  41db14:	aam    0x72
  41db16:	pop    edx
  41db17:	out    0x0,eax
  41db19:	cwde   
  41db1a:	push   0xffffffe3
  41db1c:	(bad)  
  41db1d:	adc    ecx,DWORD PTR [edx-0x60d5192b]
  41db23:	outs   dx,DWORD PTR ds:[esi]
  41db24:	mov    esi,0xae9f63a0
  41db29:	adc    BYTE PTR [esi+0x516dd105],dh
  41db2f:	push   esi
  41db30:	xchg   ecx,eax
  41db31:	push   es
  41db32:	fs out dx,eax
  41db34:	mov    bh,0xc7
  41db36:	and    eax,0x7f4052a8
  41db3b:	mov    WORD PTR [ebx],ss
  41db3d:	aaa    
  41db3e:	outs   dx,DWORD PTR ds:[esi]
  41db3f:	je     0x41db80
  41db41:	in     eax,dx
  41db42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db43:	pop    esi
  41db44:	sbb    ebx,DWORD PTR [edi]
  41db46:	mov    edx,ecx
  41db48:	xchg   edx,eax
  41db49:	and    edi,esp
  41db4b:	cmp    DWORD PTR [esi+0x7d1aed5],esp
  41db51:	cwde   
  41db52:	stos   DWORD PTR es:[edi],eax
  41db53:	mov    BYTE PTR [ebp-0x72],cl
  41db56:	mov    al,0x7b
  41db58:	xor    esp,DWORD PTR [edx+0x20]
  41db5b:	mov    dl,0x34
  41db5d:	aam    0x35
  41db5f:	dec    ebx
  41db60:	or     eax,0xb928f541
  41db65:	sbb    eax,0x78c69f3c
  41db6a:	cmp    eax,0x1e0a795
  41db6f:	xchg   esp,eax
  41db70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db71:	test   DWORD PTR [eax+0x73],edi
  41db74:	stos   DWORD PTR es:[edi],eax
  41db75:	je     0x41dba7
  41db77:	pusha  
  41db78:	mov    DWORD PTR ds:0xb3a4ed2b,ebp
  41db7e:	les    ecx,FWORD PTR [ebx-0x424daf1b]
  41db84:	ds jne 0x41db7c
  41db87:	xchg   BYTE PTR [eax-0x4],bl
  41db8a:	inc    edi
  41db8b:	dec    ebx
  41db8c:	push   eax
  41db8d:	test   BYTE PTR [ecx],ah
  41db8f:	aam    0xa6
  41db91:	ficomp DWORD PTR [ecx]
  41db93:	jg     0x41dbf1
  41db95:	sbb    BYTE PTR [edi+0x580fb9ee],dh
  41db9b:	xor    esp,esi
  41db9d:	sbb    BYTE PTR [edi],dh
  41db9f:	in     eax,dx
  41dba0:	adc    ebx,ebp
  41dba2:	les    esi,FWORD PTR [si+0x41]
  41dba6:	xor    eax,0x638d26ab
  41dbab:	mul    DWORD PTR [ebp+esi*2+0x6cc89c16]
  41dbb2:	jae    0x41db8c
  41dbb4:	loopne 0x41dc07
  41dbb6:	fadd   st(4),st
  41dbb8:	push   cs
  41dbb9:	adc    BYTE PTR [esi],0x8b
  41dbbc:	fisttp QWORD PTR [ebx+0x61]
  41dbbf:	ret    0x3f4a
  41dbc2:	daa    
  41dbc3:	ins    DWORD PTR es:[edi],dx
  41dbc4:	popf   
  41dbc5:	push   ecx
  41dbc6:	loop   0x41dc2c
  41dbc8:	aad    0xf8
  41dbca:	push   es
  41dbcb:	xchg   ebp,eax
  41dbcc:	inc    edi
  41dbcd:	lock loopne 0x41dc16
  41dbd0:	push   edi
  41dbd1:	int    0xed
  41dbd3:	aam    0x9b
  41dbd5:	mov    ebp,0x4764b455
  41dbda:	ja     0x41dbba
  41dbdc:	pusha  
  41dbdd:	mov    dl,0xed
  41dbdf:	aad    0x5a
  41dbe1:	xchg   ebx,eax
  41dbe2:	cs std 
  41dbe4:	mov    al,0x93
  41dbe6:	test   eax,0x2267ef23
  41dbeb:	push   ds
  41dbec:	aam    0x53
  41dbee:	push   0x44
  41dbf0:	test   DWORD PTR [edi],ebp
  41dbf2:	or     dh,bl
  41dbf4:	retf   
  41dbf5:	test   eax,0x243b796a
  41dbfa:	and    ecx,edx
  41dbfc:	sub    DWORD PTR [ebp-0x10],ebx
  41dbff:	stc    
  41dc00:	sub    eax,0x5d32f05d
  41dc05:	scas   al,BYTE PTR es:[edi]
  41dc06:	xchg   ebp,eax
  41dc07:	shl    esp,1
  41dc09:	adc    DWORD PTR [esi+0x7f],esp
  41dc0c:	outs   dx,DWORD PTR ds:[esi]
  41dc0d:	cmp    BYTE PTR [edx-0x28be4121],0xf4
  41dc14:	mov    BYTE PTR [eax],al
  41dc16:	cwde   
  41dc17:	and    bh,bl
  41dc19:	shr    DWORD PTR [edx],1
  41dc1b:	mov    al,ds:0x30d4429c
  41dc20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc21:	and    esp,DWORD PTR [ebx]
  41dc23:	outs   dx,DWORD PTR ds:[esi]
  41dc24:	add    al,0xd8
  41dc26:	inc    ebp
  41dc27:	inc    eax
  41dc28:	mov    eax,ds:0x7a0994c
  41dc2d:	jo     0x41dbc5
  41dc2f:	js     0x41dc05
  41dc31:	push   esp
  41dc32:	inc    DWORD PTR [edx+0x72]
  41dc35:	dec    ebx
  41dc36:	lea    esi,ds:0x3801f9e7
  41dc3c:	xor    BYTE PTR [eax],bl
  41dc3e:	outs   dx,BYTE PTR ds:[esi]
  41dc3f:	iret   
  41dc40:	jno    0x41dca0
  41dc42:	les    eax,FWORD PTR [ebx-0xd]
  41dc45:	test   eax,0xfe0bdbdd
  41dc4a:	push   edx
  41dc4b:	popf   
  41dc4c:	test   eax,0x1cae5d2b
  41dc51:	daa    
  41dc52:	sub    al,cl
  41dc54:	scas   eax,DWORD PTR es:[edi]
  41dc55:	pop    ebx
  41dc56:	add    al,0xb
  41dc58:	xor    esi,ecx
  41dc5a:	push   edi
  41dc5b:	xor    bl,al
  41dc5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc5e:	bound  edi,QWORD PTR [bp+di+0x77]
  41dc62:	pop    ecx
  41dc63:	cmp    dl,BYTE PTR [ebx+0x78]
  41dc66:	(bad)  
  41dc67:	xor    edi,DWORD PTR fs:[edx]
  41dc6a:	or     eax,0x83699888
  41dc6f:	fs js  0x41dc12
  41dc72:	aad    0xb5
  41dc74:	lea    esp,[ebp-0x25c734ef]
  41dc7a:	xchg   esp,eax
  41dc7b:	stos   DWORD PTR es:[edi],eax
  41dc7c:	ret    
  41dc7d:	adc    ebp,edi
  41dc7f:	pop    ss
  41dc80:	pushf  
  41dc81:	out    dx,al
  41dc82:	mov    esp,0xfa407110
  41dc87:	jp     0x41dcbc
  41dc89:	ja     0x41dcad
  41dc8b:	xchg   ebx,eax
  41dc8c:	pop    edx
  41dc8d:	lock (bad) 
  41dc8f:	mov    bh,0x13
  41dc91:	sbb    ch,BYTE PTR [eax]
  41dc93:	(bad)  
  41dc94:	das    
  41dc95:	retf   
  41dc96:	pop    edi
  41dc97:	pop    ds
  41dc98:	xor    ecx,DWORD PTR [ebx-0x64b4ca30]
  41dc9e:	or     BYTE PTR [ebx-0x64],0xca
  41dca2:	mov    BYTE PTR [edi+0x79],bh
  41dca5:	out    0xa0,al
  41dca7:	inc    edx
  41dca8:	lock pop DWORD PTR [ebx-0xa]
  41dcac:	and    ebx,DWORD PTR [ebp+0x31]
  41dcaf:	mov    edx,esi
  41dcb1:	ja     0x41dcb1
  41dcb3:	xchg   edi,eax
  41dcb4:	sbb    al,BYTE PTR [ebx+0x2fb4d728]
  41dcba:	dec    edi
  41dcbb:	and    eax,0x2b5f5150
  41dcc0:	add    eax,0x99f5417e
  41dcc5:	in     al,0xd
  41dcc7:	jp     0x41dd11
  41dcc9:	cmp    eax,0x39fa8e79
  41dcce:	ins    BYTE PTR es:[edi],dx
  41dccf:	imul   ebx,DWORD PTR [ebp+0x7baaa852],0xffffff86
  41dcd6:	cli    
  41dcd7:	mov    ecx,0x1bd53570
  41dcdc:	in     al,dx
  41dcdd:	sahf   
  41dcde:	les    esi,FWORD PTR [edx-0x56]
  41dce1:	sbb    bh,BYTE PTR [ebp-0xd1822bf]
  41dce7:	popf   
  41dce8:	mov    al,ds:0xcc708bf9
  41dced:	jmp    0xf3ca:0x19b65232
  41dcf4:	ror    BYTE PTR [ebp+0x15a373ef],cl
  41dcfa:	sahf   
  41dcfb:	sbb    dh,BYTE PTR [ebx-0x2c]
  41dcfe:	stos   DWORD PTR es:[edi],eax
  41dcff:	mov    bl,0x5c
  41dd01:	mov    gs,WORD PTR [edi-0x2]
  41dd04:	mov    ecx,0x5035318c
  41dd09:	ret    
  41dd0a:	pop    ebp
  41dd0b:	jle    0x41dccf
  41dd0d:	mov    ds:0x1519dc78,eax
  41dd12:	sti    
  41dd13:	jns    0x41dd38
  41dd15:	fbstp  TBYTE PTR [ecx+0xc]
  41dd18:	lods   al,BYTE PTR ds:[esi]
  41dd19:	xchg   edi,eax
  41dd1a:	dec    esp
  41dd1b:	inc    ebx
  41dd1c:	test   BYTE PTR [ebx+0x51],0xfd
  41dd20:	or     dl,BYTE PTR [esi+0x1443e153]
  41dd26:	mov    al,ds:0x2410106f
  41dd2b:	shl    BYTE PTR [esi+0x793cfe6e],0xe0
  41dd32:	and    BYTE PTR [ecx],ch
  41dd34:	lock push ebx
  41dd36:	pop    esp
  41dd37:	aad    0x34
  41dd39:	xchg   DWORD PTR [ebp-0x541ad87a],edx
  41dd3f:	leave  
  41dd40:	iret   
  41dd41:	ja     0x41ddb5
  41dd43:	fdiv   QWORD PTR [ebx]
  41dd45:	jp     0x41dd91
  41dd47:	neg    BYTE PTR [ebp+0x6e]
  41dd4a:	stos   DWORD PTR es:[edi],eax
  41dd4b:	xor    eax,0xfa57685b
  41dd50:	test   eax,0x9a3c9cc7
  41dd55:	jno    0x41dd82
  41dd57:	leave  
  41dd58:	xlat   BYTE PTR ds:[ebx]
  41dd59:	jl     0x41dcf5
  41dd5b:	or     DWORD PTR [ecx-0x2031654d],edi
  41dd61:	aas    
  41dd62:	push   es
  41dd63:	(bad)  
  41dd64:	loop   0x41ddb9
  41dd66:	mov    al,ds:0xd68a23eb
  41dd6b:	ficom  WORD PTR [esi+0x1b]
  41dd6e:	push   es
  41dd6f:	or     ebx,DWORD PTR [ebx-0x39]
  41dd72:	pop    es
  41dd73:	dec    esp
  41dd74:	pop    eax
  41dd75:	pop    ss
  41dd76:	out    0x26,al
  41dd78:	or     dl,BYTE PTR [esi]
  41dd7a:	scas   eax,DWORD PTR es:[edi]
  41dd7b:	jo     0x41ddfa
  41dd7d:	js     0x41dd97
  41dd7f:	ror    cl,0x77
  41dd82:	mov    edi,esp
  41dd84:	xchg   esp,eax
  41dd85:	jne    0x41ddf2
  41dd87:	push   esi
  41dd88:	inc    ebx
  41dd89:	jle    0x41dd8f
  41dd8b:	cmp    ch,0x2b
  41dd8e:	jmp    0x41de08
  41dd90:	loop   0x41ddea
  41dd92:	in     al,0x8
  41dd94:	lock adc eax,0x42548622
  41dd9a:	sbb    al,0x1f
  41dd9c:	sahf   
  41dd9d:	sub    DWORD PTR [ecx+0x61775d31],ebp
  41dda3:	mov    al,ds:0xae460879
  41dda8:	add    dl,dh
  41ddaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ddab:	nop
  41ddac:	repnz scas eax,DWORD PTR es:[edi]
  41ddae:	outs   dx,DWORD PTR ds:[esi]
  41ddaf:	mov    edi,DWORD PTR [edx+0x7ec8a670]
  41ddb5:	mov    esi,0x81316447
  41ddba:	xchg   ebp,eax
  41ddbb:	cdq    
  41ddbc:	cs push ss
  41ddbe:	mov    ch,BYTE PTR [eax]
  41ddc0:	jb     0x41de32
  41ddc2:	mov    dh,0x93
  41ddc4:	fdiv   DWORD PTR [eax+0x37297c2a]
  41ddca:	fnstcw WORD PTR [edi-0x1]
  41ddcd:	or     al,0xbe
  41ddcf:	push   ebp
  41ddd0:	dec    eax
  41ddd1:	pop    ss
  41ddd2:	fimul  DWORD PTR [ebp-0x60]
  41ddd5:	loope  0x41dd9f
  41ddd7:	push   cs
  41ddd8:	adc    al,0x34
  41ddda:	mov    ebp,0xf1dd6560
  41dddf:	sbb    al,0x77
  41dde1:	or     cl,BYTE PTR [ecx-0x2e202637]
  41dde7:	mov    cl,dl
  41dde9:	adc    al,0x9a
  41ddeb:	in     al,dx
  41ddec:	jecxz  0x41de50
  41ddee:	jmp    0x41de2b
  41ddf0:	pop    ds
  41ddf1:	jg     0x41dded
  41ddf3:	mov    edi,DWORD PTR [eax]
  41ddf5:	sub    dl,BYTE PTR ds:0x4f4fe03a
  41ddfb:	(bad)  
  41ddfc:	sbb    eax,0xd57e766e
  41de01:	out    dx,eax
  41de02:	push   eax
  41de03:	cmp    DWORD PTR [edx+0x46],0xffffffb0
  41de07:	stos   DWORD PTR es:[edi],eax
  41de08:	mov    bh,0xba
  41de0a:	jg     0x41ddae
  41de0c:	xchg   ebx,eax
  41de0d:	fiadd  DWORD PTR [edx+0x5f]
  41de10:	mov    esp,ss
  41de12:	leave  
  41de13:	in     eax,dx
  41de14:	cs dec edi
  41de16:	(bad)  
  41de17:	cmp    ecx,DWORD PTR [eax-0x10]
  41de1a:	xor    al,0x62
  41de1c:	das    
  41de1d:	call   0xebcd:0x4338e962
  41de24:	in     eax,0x54
  41de26:	or     BYTE PTR [ecx+0x42],dh
  41de29:	test   al,0xaa
  41de2b:	mov    eax,0xbb13d8f8
  41de30:	sbb    al,0x9a
  41de32:	fadd   st,st(7)
  41de34:	push   esi
  41de35:	out    0x35,eax
  41de37:	ins    DWORD PTR es:[edi],dx
  41de38:	sbb    BYTE PTR [edi-0x4b769fa5],0x63
  41de3f:	hlt    
  41de40:	repnz pop ss
  41de42:	add    DWORD PTR [ebx+0x79],0xce1800d7
  41de49:	mov    al,0xd8
  41de4b:	pop    ebx
  41de4c:	retf   
  41de4d:	pop    esi
  41de4e:	hlt    
  41de4f:	inc    eax
  41de50:	jg     0x41deb5
  41de52:	xor    al,0x3e
  41de54:	mov    cs,WORD PTR [edi-0x7c]
  41de57:	imul   DWORD PTR [esi]
  41de59:	outs   dx,BYTE PTR ds:[esi]
  41de5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de5b:	jb     0x41de06
  41de5d:	xchg   ebx,eax
  41de5e:	xor    DWORD PTR [esi+eiz*8+0x55b9adc1],ebx
  41de65:	sub    al,0x67
  41de67:	add    ebx,DWORD PTR [ebp+0x63]
  41de6a:	bound  eax,QWORD PTR [ebx]
  41de6c:	inc    ecx
  41de6d:	nop    DWORD PTR [eax-0x28b3684]
  41de74:	or     al,dl
  41de76:	adc    eax,0xd15fa99f
  41de7b:	jmp    0xc07632ec
  41de80:	hlt    
  41de81:	add    cl,BYTE PTR [esi-0x6a]
  41de84:	xchg   esp,eax
  41de85:	out    0x86,al
  41de87:	sbb    esi,DWORD PTR [ecx+ecx*8-0x198cb785]
  41de8e:	push   ebx
  41de8f:	std    
  41de90:	and    al,BYTE PTR [edi+edx*8-0x34]
  41de94:	mov    dl,0xff
  41de96:	lock sub esi,0x16dfa707
  41de9d:	sar    BYTE PTR [ecx-0x27],1
  41dea0:	mov    es,WORD PTR [edi-0x52]
  41dea3:	adc    al,0x8f
  41dea5:	daa    
  41dea6:	inc    eax
  41dea7:	pop    esi
  41dea8:	mov    eax,ds:0xcf2f242f
  41dead:	push   cs
  41deae:	xor    edx,DWORD PTR [edi+0x951ee99]
  41deb4:	add    ah,ah
  41deb6:	adc    BYTE PTR [ebp+0x3c7ba81d],bh
  41debc:	out    0x24,eax
  41debe:	outs   dx,BYTE PTR ds:[esi]
  41debf:	adc    eax,DWORD PTR [ecx+0x2fdbdb0d]
  41dec5:	ret    
  41dec6:	inc    esp
  41dec7:	jge    0x41de68
  41dec9:	sti    
  41deca:	out    0xbd,eax
  41decc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dece:	mov    ah,0x7f
  41ded0:	pushf  
  41ded1:	push   0x16
  41ded3:	mov    ebp,0x67a872ca
  41ded8:	mov    ebx,0xeee9c146
  41dedd:	dec    ebx
  41dede:	daa    
  41dedf:	mov    gs,ebp
  41dee1:	adc    al,0x46
  41dee3:	lea    ebx,[edi+0x3b]
  41dee6:	push   es
  41dee7:	inc    edx
  41dee8:	les    edi,FWORD PTR [edi-0x3b]
  41deeb:	and    ah,ah
  41deed:	out    0x94,eax
  41deef:	ret    0x61b2
  41def2:	dec    edi
  41def3:	cmp    BYTE PTR [ecx],dl
  41def5:	adc    al,0xbd
  41def7:	cs jo  0x41de9a
  41defa:	loop   0x41de82
  41defc:	mov    eax,0x92df70ac
  41df01:	scas   al,BYTE PTR es:[edi]
  41df02:	pop    esp
  41df03:	mov    ecx,0x73c35b81
  41df08:	les    ebx,FWORD PTR [ebx+0x18dcdd1a]
  41df0e:	jmp    FWORD PTR [ebx+0x776f10a8]
  41df14:	iret   
  41df15:	jmp    0x41ded7
  41df17:	add    al,0xb4
  41df19:	adc    BYTE PTR [ebx+0x5eda9135],dl
  41df1f:	(bad)  
  41df20:	iret   
  41df21:	xor    eax,0x21eb9175
  41df26:	jo     0x41def9
  41df28:	int3   
  41df29:	xchg   ecx,eax
  41df2a:	add    bl,BYTE PTR [edi]
  41df2c:	dec    ebp
  41df2d:	aaa    
  41df2e:	mov    BYTE PTR [esi+0x45326bb6],ch
  41df34:	cli    
  41df35:	cdq    
  41df36:	fld    QWORD PTR [edi]
  41df38:	mov    eax,0x2b9b02e6
  41df3d:	mov    ah,0x2c
  41df3f:	repz xchg esi,eax
  41df41:	pusha  
  41df42:	rcl    DWORD PTR [edx-0x74c46f08],0xee
  41df49:	retf   0x41f8
  41df4c:	xchg   ebx,eax
  41df4d:	pop    edi
  41df4e:	mov    ebx,0xc85e22aa
  41df53:	add    al,0xb1
  41df55:	xchg   esp,eax
  41df56:	xchg   DWORD PTR [ecx-0x446f3d84],ebp
  41df5c:	aaa    
  41df5d:	out    0x9a,eax
  41df5f:	rcr    edx,1
  41df61:	inc    ebp
  41df62:	mov    bh,0x8d
  41df64:	push   0x9181617
  41df69:	or     esi,esi
  41df6b:	pop    edx
  41df6c:	cld    
  41df6d:	sbb    esi,DWORD PTR [edi-0x5c]
  41df70:	leave  
  41df71:	mov    eax,0x28e080db
  41df76:	cdq    
  41df77:	leave  
  41df78:	call   0x932:0x66461e64
  41df7f:	mov    ebp,0x8fe8158c
  41df85:	addr16 aam 0xdd
  41df88:	scas   eax,DWORD PTR es:[edi]
  41df89:	push   ebp
  41df8a:	popf   
  41df8b:	push   es
  41df8c:	pop    esp
  41df8d:	sbb    bl,ah
  41df8f:	(bad)  
  41df90:	idiv   BYTE PTR [ebp+0x58]
  41df93:	dec    esi
  41df94:	push   ebx
  41df95:	xor    al,0x74
  41df97:	xor    edx,DWORD PTR [edi+0x39]
  41df9a:	jmp    0x41df2f
  41df9c:	inc    esp
  41df9d:	and    ch,BYTE PTR [ebx]
  41df9f:	sbb    DWORD PTR [esi-0xed08b36],ebp
  41dfa5:	jae    0x41df3b
  41dfa7:	jnp    0x41dfdf
  41dfa9:	dec    edx
  41dfaa:	sahf   
  41dfab:	cmp    BYTE PTR ds:[ecx+ecx*1],bl
  41dfaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dfb0:	(bad)  
  41dfb1:	and    eax,0xb4f143c0
  41dfb6:	das    
  41dfb7:	out    dx,eax
  41dfb8:	xor    ch,0x7f
  41dfbb:	fild   WORD PTR [ebx+0x25c5b08e]
  41dfc1:	add    al,0xc3
  41dfc3:	mov    dl,0x41
  41dfc5:	jbe    0x41dfdd
  41dfc7:	adc    ch,dl
  41dfc9:	out    dx,eax
  41dfca:	pop    esp
  41dfcb:	pop    edx
  41dfcc:	mov    ds:0x5ae61ee9,al
  41dfd1:	(bad)  
  41dfd3:	add    eax,0x3d7017f7
  41dfd8:	popf   
  41dfd9:	jbe    0x41df6a
  41dfdb:	pop    esp
  41dfdc:	inc    edx
  41dfdd:	dec    ebx
  41dfde:	in     eax,0xc1
  41dfe0:	and    ah,cl
  41dfe2:	xchg   ebp,eax
  41dfe3:	fdivr  QWORD PTR [ebp+0x4f]
  41dfe6:	test   al,0x38
  41dfe8:	ins    BYTE PTR es:[edi],dx
  41dfe9:	cmp    cl,BYTE PTR [ecx-0x69e9bb74]
  41dfef:	sbb    edi,DWORD PTR [edx]
  41dff1:	fwait
  41dff2:	mov    edi,0x72fab3
  41dff7:	push   ss
  41dff8:	push   ds
  41dff9:	mov    BYTE PTR [ebp-0x32838be1],cl
  41dfff:	xor    edi,DWORD PTR [eax-0x8aa77]
  41e005:	cmp    DWORD PTR [esi-0x271062aa],esi
  41e00b:	cmp    ah,dl
  41e00d:	lfs    ebp,FWORD PTR [ecx]
  41e010:	cwde   
  41e011:	clc    
  41e012:	xchg   BYTE PTR [esp+ebx*8-0x7b],ch
  41e016:	fwait
  41e017:	cmp    edx,DWORD PTR [esi+0x45]
  41e01a:	mov    ebx,0x4162f53b
  41e01f:	push   ebx
  41e020:	sub    eax,0x8e3f5c46
  41e025:	jge    0x41e092
  41e027:	xor    BYTE PTR [eax],ch
  41e029:	mov    al,0xbd
  41e02b:	sbb    DWORD PTR [edi],0x62
  41e02e:	lahf   
  41e02f:	xchg   edi,eax
  41e030:	sbb    edi,DWORD PTR [ebp+0x580d1bcb]
  41e036:	in     eax,0xe1
  41e038:	add    eax,0x466ae98e
  41e03d:	(bad)  
  41e03e:	sub    DWORD PTR [ebx-0x6b9c3857],edx
  41e044:	xchg   edi,eax
  41e045:	sbb    ebp,DWORD PTR [esi-0x32]
  41e048:	(bad)  
  41e04a:	neg    DWORD PTR [ebx+ecx*8-0x4f]
  41e04e:	pop    ecx
  41e04f:	lahf   
  41e050:	sbb    BYTE PTR [edx],0xb
  41e053:	xor    al,0x75
  41e055:	sub    DWORD PTR [esi],edx
  41e057:	push   0xffffff8d
  41e059:	cmp    al,0xca
  41e05b:	aaa    
  41e05c:	xor    al,0xc5
  41e05e:	test   al,0x69
  41e060:	inc    ebp
  41e061:	add    BYTE PTR [esi-0x36],bh
  41e064:	or     dh,BYTE PTR [edi+edx*4+0x3]
  41e068:	mov    ch,0xf6
  41e06a:	add    al,0xb3
  41e06c:	aam    0xfa
  41e06e:	push   DWORD PTR [eax]
  41e070:	mov    ah,0xcf
  41e072:	and    ah,BYTE PTR [ebp-0x3c]
  41e075:	rcl    DWORD PTR [edi+esi*1],0x3e
  41e079:	push   edi
  41e07a:	jo     0x41e03c
  41e07c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e07d:	jnp    0x41e0ca
  41e07f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e080:	fist   DWORD PTR [edi-0x6d]
  41e083:	test   BYTE PTR [edi],ah
  41e085:	iret   
  41e086:	int3   
  41e087:	and    cl,bh
  41e089:	pop    ebp
  41e08a:	and    esi,DWORD PTR [eax+0x51]
  41e08d:	(bad)  
  41e08e:	xchg   esi,eax
  41e08f:	es mov al,0xf9
  41e092:	rcr    BYTE PTR [ecx-0x5dbe414d],1
  41e098:	dec    eax
  41e099:	(bad)  
  41e09a:	pop    edx
  41e09b:	lods   al,BYTE PTR ds:[esi]
  41e09c:	sbb    bl,BYTE PTR [eax+0x32e8b838]
  41e0a2:	ds inc ebp
  41e0a4:	test   eax,0xe401d944
  41e0a9:	mov    ds:0x3b55393c,eax
  41e0ae:	into   
  41e0af:	dec    edi
  41e0b0:	scas   al,BYTE PTR es:[edi]
  41e0b1:	xchg   ebx,eax
  41e0b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e0b3:	or     esp,esi
  41e0b5:	jbe    0x41e0b3
  41e0b7:	inc    edx
  41e0b8:	push   ebp
  41e0b9:	mov    ch,0xd2
  41e0bb:	addr16 clc 
  41e0bd:	push   esi
  41e0be:	sbb    DWORD PTR [edx-0x1f],edx
  41e0c1:	in     eax,dx
  41e0c2:	adc    edi,DWORD PTR [ebx]
  41e0c4:	popf   
  41e0c5:	add    ebx,ecx
  41e0c7:	add    al,0x1
  41e0c9:	jmp    0x47c5825f
  41e0ce:	mov    al,BYTE PTR [ecx+eiz*2-0x37e40698]
  41e0d5:	pop    eax
  41e0d6:	pop    ss
  41e0d7:	cmp    cl,BYTE PTR [ebx]
  41e0d9:	sbb    BYTE PTR [eax-0x4a],0xa2
  41e0dd:	and    eax,0x394018b6
  41e0e2:	lods   eax,DWORD PTR ds:[esi]
  41e0e3:	and    ecx,esi
  41e0e5:	add    DWORD PTR [edx+edi*2-0x15274753],esp
  41e0ec:	cmp    ch,BYTE PTR [ecx+0x49]
  41e0ef:	pop    es
  41e0f0:	fsubr  QWORD PTR [edi]
  41e0f2:	test   DWORD PTR [edi+0x5d30ea32],edi
  41e0f8:	sbb    DWORD PTR [ebx],ebx
  41e0fa:	out    0xf,eax
  41e0fc:	cmp    ch,bl
  41e0fe:	in     al,dx
  41e0ff:	sbb    eax,0xb32940af
  41e104:	loope  0x41e14b
  41e106:	sbb    eax,0x9aa6db79
  41e10b:	sbb    al,0x9e
  41e10d:	mov    edx,0x93b70ef3
  41e112:	pop    ecx
  41e113:	ins    DWORD PTR es:[edi],dx
  41e114:	cs jl  0x41e144
  41e117:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e118:	sbb    al,0x19
  41e11a:	mov    DWORD PTR [esi-0x5f11bf14],esp
  41e120:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e121:	adc    BYTE PTR [eax],bl
  41e123:	xchg   edi,eax
  41e124:	jmp    0x4e99:0x1e873c85
  41e12b:	inc    ecx
  41e12c:	in     eax,dx
  41e12d:	xor    esp,DWORD PTR [edi-0xd]
  41e130:	xor    al,0xed
  41e132:	call   0x2a7ac72e
  41e137:	pop    ecx
  41e138:	sub    BYTE PTR [esi-0x49f7b1ee],bh
  41e13e:	dec    ecx
  41e13f:	push   cs
  41e140:	sar    DWORD PTR [ebx-0x24],1
  41e143:	mov    eax,edx
  41e145:	repz iret 
  41e147:	pop    ecx
  41e148:	sbb    ebx,ebp
  41e14a:	jg     0x41e1c8
  41e14c:	mov    ah,0x27
  41e14e:	cmp    DWORD PTR [edi+0x62ec2e3b],edi
  41e154:	call   0x45a:0x81c3a6bb
  41e15b:	push   eax
  41e15c:	ins    DWORD PTR es:[edi],dx
  41e15d:	mov    ebp,0x37326c15
  41e162:	cmp    DWORD PTR [edx+ebx*2],esp
  41e165:	pop    edi
  41e166:	sbb    al,dl
  41e168:	clc    
  41e169:	jmp    0x41e19c
  41e16b:	retf   
  41e16c:	xchg   ecx,eax
  41e16d:	pop    edx
  41e16e:	outs   dx,DWORD PTR ds:[esi]
  41e16f:	loop   0x41e19b
  41e171:	push   cs
  41e172:	sbb    ah,ch
  41e174:	(bad)  
  41e175:	int3   
  41e176:	(bad)  
  41e177:	fdiv   st(1),st
  41e179:	or     esp,DWORD PTR [eax+0x14]
  41e17c:	mov    al,ds:0xd8b4e1a9
  41e181:	sub    eax,0xffeb1574
  41e186:	call   0xf0ce:0xfb4096a7
  41e18d:	inc    eax
  41e18e:	add    BYTE PTR ds:0x2a02003,bh
  41e194:	pop    esp
  41e195:	(bad)  
  41e196:	cmp    al,0xfd
  41e198:	je     0x41e149
  41e19a:	xchg   ebx,esi
  41e19c:	jmp    0x52275d54
  41e1a1:	stos   BYTE PTR es:[edi],al
  41e1a2:	ins    DWORD PTR es:[edi],dx
  41e1a3:	mov    edx,0x99f5fa00
  41e1a8:	adc    DWORD PTR [eax+0x1e],0xffffffe3
  41e1ac:	(bad)  
  41e1ad:	hlt    
  41e1ae:	outs   dx,BYTE PTR ds:[esi]
  41e1af:	pop    es
  41e1b0:	mov    ecx,0xd594656b
  41e1b5:	fs hlt 
  41e1b7:	xchg   edi,eax
  41e1b8:	mov    ebx,0x70578f4d
  41e1bd:	jle    0x41e20a
  41e1bf:	pop    esi
  41e1c0:	imul   ebp,DWORD PTR [edi+0x3a],0x2782ec55
  41e1c7:	mov    ecx,0xe232f38f
  41e1cc:	push   esi
  41e1cd:	pop    esi
  41e1ce:	cmp    ah,bl
  41e1d0:	dec    eax
  41e1d1:	add    BYTE PTR [ebx],dh
  41e1d3:	call   0x56e:0x9bcecb6a
  41e1da:	xor    BYTE PTR [edi],ch
  41e1dc:	popf   
  41e1dd:	les    ecx,FWORD PTR [ebp-0x3a]
  41e1e0:	ret    
  41e1e1:	es push esi
  41e1e3:	jae    0x41e189
  41e1e5:	test   DWORD PTR fs:[esi-0x25e5cc6d],ebp
  41e1ec:	mov    eax,0x7f65c07c
  41e1f1:	pop    eax
  41e1f2:	push   0x2669ea48
  41e1f7:	clc    
  41e1f8:	lods   eax,DWORD PTR ds:[esi]
  41e1f9:	shr    DWORD PTR [edx+0x5c6893c0],cl
  41e1ff:	push   0x695560e5
  41e204:	aad    0x76
  41e206:	ins    BYTE PTR es:[edi],dx
  41e207:	xchg   ecx,eax
  41e208:	inc    esi
  41e209:	xchg   sp,ax
  41e20b:	and    eax,0xe5828e36
  41e210:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e211:	jae    0x41e224
  41e213:	sahf   
  41e214:	add    DWORD PTR [ebx],0x23f22c2c
  41e21a:	push   edx
  41e21b:	loopne 0x41e210
  41e21d:	xor    BYTE PTR [edi-0x6d07e7cc],0xcd
  41e224:	xchg   edi,eax
  41e225:	push   cs
  41e226:	in     eax,dx
  41e227:	je     0x41e1cc
  41e229:	call   0x5c6e:0xe337f850
  41e230:	adc    esi,DWORD PTR ds:0x2acf9c8d
  41e236:	pusha  
  41e237:	sar    DWORD PTR [esp+ebx*4-0x7e89b0a8],1
  41e23e:	ret    
  41e23f:	iret   
  41e240:	jl     0x41e212
  41e242:	fsubr  DWORD PTR cs:[esi]
  41e245:	adc    al,0x29
  41e247:	into   
  41e248:	jmp    0x27c5:0xdddaf740
  41e24f:	mov    eax,ds:0x386c706a
  41e254:	hlt    
  41e255:	add    eax,0x72f9d00e
  41e25a:	fistp  DWORD PTR [ebp+0x56]
  41e25d:	mov    BYTE PTR [ecx+0x3bf10233],bl
  41e263:	cmc    
  41e264:	jg     0x41e28e
  41e266:	mov    dh,0x16
  41e268:	enter  0x58cb,0x42
  41e26c:	mov    eax,0x775cd7ae
  41e271:	jnp    0x41e2da
  41e273:	xor    eax,0x59edc4be
  41e278:	rcl    BYTE PTR es:[ebx],cl
  41e27b:	shr    DWORD PTR [edx+0x2b],0x81
  41e27f:	push   ebx
  41e280:	xchg   ebp,eax
  41e281:	popf   
  41e282:	les    eax,FWORD PTR [esi+edi*2]
  41e285:	mov    ds:0x48ebf76,eax
  41e28a:	retf   
  41e28b:	icebp  
  41e28c:	pop    eax
  41e28d:	les    ebx,FWORD PTR [esp+ebx*4-0x62]
  41e291:	cmp    ebx,ecx
  41e293:	call   0x9d13:0xc5d72e61
  41e29a:	cmp    DWORD PTR [edi-0x69528335],edx
  41e2a0:	int    0xce
  41e2a2:	or     esp,ebx
  41e2a4:	ja     0x41e24f
  41e2a6:	mov    ah,0x82
  41e2a8:	(bad)  [edx-0x31]
  41e2ab:	mov    edx,0x5672bec7
  41e2b0:	in     eax,dx
  41e2b1:	shl    BYTE PTR [ecx+0x4e199727],0x89
  41e2b8:	sub    al,0xbc
  41e2ba:	mov    bh,0x89
  41e2bc:	sub    eax,0xa8a0ed45
  41e2c1:	loopne 0x41e2c8
  41e2c3:	scas   al,BYTE PTR es:[edi]
  41e2c4:	jecxz  0x41e269
  41e2c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2c7:	std    
  41e2c8:	push   esp
  41e2c9:	adc    edi,0x41
  41e2cc:	out    0xf7,al
  41e2ce:	xor    al,0x8
  41e2d0:	iret   
  41e2d1:	push   edi
  41e2d2:	mov    BYTE PTR [edx-0x425b68d3],cl
  41e2d8:	lahf   
  41e2d9:	ins    DWORD PTR es:[edi],dx
  41e2da:	xchg   ebp,eax
  41e2db:	or     BYTE PTR [edx-0x12],dl
  41e2de:	iret   
  41e2df:	adc    eax,0x48eeccda
  41e2e4:	cmp    DWORD PTR [edx],esp
  41e2e6:	xor    DWORD PTR [edx+0x653947c3],ecx
  41e2ec:	mov    ch,0xa6
  41e2ee:	sub    esi,edx
  41e2f0:	jae    0x41e289
  41e2f2:	popa   
  41e2f3:	push   edi
  41e2f4:	je     0x41e35c
  41e2f6:	mov    dh,0x6f
  41e2f8:	push   es
  41e2f9:	aaa    
  41e2fa:	cmp    al,0x14
  41e2fc:	mov    al,0x51
  41e2fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2ff:	dec    ecx
  41e300:	hlt    
  41e301:	add    DWORD PTR [edi+0x6ce987a4],0x6a77deb9
  41e30b:	jl     0x41e2e7
  41e30d:	imul   esp,DWORD PTR [edx+0xb],0x8
  41e311:	psubsb mm7,mm3
  41e314:	push   cs
  41e315:	cmc    
  41e316:	mov    al,ds:0x6c838863
  41e31b:	and    eax,0xd5a59a3
  41e320:	and    eax,0xe3c402ab
  41e325:	add    ebp,esi
  41e327:	(bad)
  41e32a:	dec    ebx
  41e32b:	stos   DWORD PTR es:[edi],eax
  41e32c:	add    BYTE PTR [eax-0x47],bh
  41e32f:	cli    
  41e330:	shl    BYTE PTR [esi+0x60],cl
  41e333:	aaa    
  41e334:	mov    BYTE PTR [ecx-0x1a583980],dl
  41e33a:	lock jbe 0x41e367
  41e33d:	mov    al,ds:0xe7c6fc22
  41e342:	fldenv [eax-0x1b]
  41e345:	mov    al,ds:0x3460163f
  41e34a:	push   ebx
  41e34b:	sar    BYTE PTR [eax+0xae63387],0x26
  41e352:	jle    0x41e33e
  41e354:	imul   ebx,DWORD PTR [ecx+0x1d333bb],0x1d
  41e35b:	pop    ecx
  41e35c:	fld    QWORD PTR [ebx+0x34587f]
  41e362:	push   0xca0e9a60
  41e367:	sahf   
  41e368:	outs   dx,BYTE PTR ds:[esi]
  41e369:	enter  0x7aa,0x4a
  41e36d:	jb     0x41e3b9
  41e36f:	ins    BYTE PTR es:[edi],dx
  41e370:	cmp    eax,DWORD PTR [edx]
  41e372:	inc    edx
  41e373:	aam    0x9
  41e375:	adc    DWORD PTR [ebp+0x6f],esp
  41e378:	sbb    BYTE PTR [esi-0x1efd9963],al
  41e37e:	std    
  41e37f:	retf   0x7891
  41e382:	pop    esp
  41e383:	mov    ds:0xae218542,al
  41e388:	add    al,0x80
  41e38a:	js     0x41e3ef
  41e38c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e38d:	xchg   ecx,eax
  41e38e:	add    dl,0x15
  41e391:	jge    0x41e37c
  41e393:	adc    ah,BYTE PTR [eax+0x48]
  41e396:	fld    st(0)
  41e398:	jmp    0x1fa4e66a
  41e39d:	mov    WORD PTR [ebx+edx*2],fs
  41e3a0:	test   eax,0x5ab0d65f
  41e3a5:	xchg   BYTE PTR ds:0xe3c091ce,al
  41e3ab:	and    eax,0x80e08f67
  41e3b0:	addr16 in eax,0x8d
  41e3b3:	jp     0x41e418
  41e3b5:	mov    dl,BYTE PTR [edi-0x2b]
  41e3b8:	and    edi,ecx
  41e3ba:	mov    esp,0xf743ee75
  41e3bf:	sub    dh,BYTE PTR ds:0xebf3936
  41e3c5:	xor    DWORD PTR [eax],esi
  41e3c7:	adc    BYTE PTR [edi-0x5a],al
  41e3ca:	add    eax,0xff8872ef
  41e3cf:	xchg   edi,eax
  41e3d0:	jae    0x41e352
  41e3d2:	jge    0x41e417
  41e3d4:	mul    bh
  41e3d6:	push   ecx
  41e3d7:	fist   DWORD PTR [edx-0x1]
  41e3da:	fld    TBYTE PTR es:[ecx]
  41e3dd:	mov    cl,0x39
  41e3df:	jmp    FWORD PTR [eax-0x4ffae0df]
  41e3e5:	sti    
  41e3e6:	cs cs pop edx
  41e3e9:	inc    eax
  41e3ea:	dec    esi
  41e3eb:	jmp    esi
  41e3ed:	pop    eax
  41e3ee:	fild   DWORD PTR [eax-0x4a95def6]
  41e3f4:	mov    bl,dh
  41e3f6:	push   ds
  41e3f7:	cmp    al,0x71
  41e3f9:	xor    ah,cl
  41e3fb:	rcl    BYTE PTR [edx+0x252593b8],1
  41e401:	push   es
  41e402:	sbb    DWORD PTR [edi+0x3],esi
  41e405:	pop    esi
  41e406:	rcr    DWORD PTR [edx],cl
  41e408:	or     DWORD PTR [edi-0x8d39a69],esi
  41e40e:	es sahf 
  41e410:	sbb    ch,BYTE PTR [edi+0x67b2840b]
  41e416:	mov    al,0xcb
  41e418:	stos   BYTE PTR es:[edi],al
  41e419:	inc    edx
  41e41a:	cwde   
  41e41b:	es jle 0x41e447
  41e41e:	cmovno ebp,DWORD PTR [ebp+0x5949bcb5]
  41e425:	jnp    0x41e3e7
  41e427:	xor    ebx,esp
  41e429:	or     eax,0x67dca656
  41e42e:	mov    ebp,0x804b2607
  41e433:	jle    0x41e475
  41e435:	lods   al,BYTE PTR ds:[esi]
  41e436:	cdq    
  41e437:	rcl    BYTE PTR [edx],cl
  41e439:	icebp  
  41e43a:	push   ss
  41e43b:	mov    ebx,0xce12a44
  41e440:	adc    al,bl
  41e442:	daa    
  41e443:	iret   
  41e444:	mov    esi,0x398506c1
  41e449:	out    dx,al
  41e44a:	mov    ch,0x50
  41e44c:	addr16 mov eax,ds:0x6600
  41e450:	iret   
  41e451:	or     al,0xa
  41e453:	inc    ebp
  41e454:	xchg   ebp,eax
  41e455:	aas    
  41e456:	dec    ebx
  41e457:	sti    
  41e458:	sbb    BYTE PTR [eax+0x79],cl
  41e45b:	mov    cl,0xfd
  41e45d:	push   0xfcbdc30b
  41e462:	mov    al,0xcf
  41e464:	test   al,0xd2
  41e466:	out    0xcb,eax
  41e468:	arpl   sp,di
  41e46a:	sub    esi,ebp
  41e46c:	cld    
  41e46d:	cmp    eax,0xa3d5e82d
  41e472:	mov    bl,0x67
  41e474:	or     cl,0xd8
  41e477:	mov    esp,eax
  41e479:	loope  0x41e46a
  41e47b:	mov    bh,0xf1
  41e47d:	sbb    ebp,esp
  41e47f:	xchg   edi,eax
  41e480:	and    eax,0xf4ac94d7
  41e485:	mov    bl,0x52
  41e487:	sbb    DWORD PTR [esi],eax
  41e489:	mov    cl,0xee
  41e48b:	ja     0x41e50b
  41e48d:	push   eax
  41e48e:	out    dx,eax
  41e48f:	jae    0x41e44b
  41e491:	inc    esi
  41e492:	xchg   DWORD PTR [edi+0x65],esi
  41e495:	cwde   
  41e496:	sub    al,0x6a
  41e498:	(bad)  
  41e499:	pop    ss
  41e49a:	not    DWORD PTR [edi+0x6e8c3dcb]
  41e4a0:	ret    
  41e4a1:	cmp    DWORD PTR [edx-0x4d9e7eeb],eax
  41e4a7:	dec    ebx
  41e4a8:	arpl   WORD PTR [ebx+edx*2+0x65],dx
  41e4ac:	mov    ebx,0x54f9878
  41e4b1:	push   eax
  41e4b2:	fisttp WORD PTR [edi+ebx*1]
  41e4b5:	cmp    DWORD PTR [eax],ebx
  41e4b7:	dec    ebx
  41e4b8:	(bad)  [ecx+0x50]
  41e4bb:	inc    esp
  41e4bc:	icebp  
  41e4bd:	pop    esp
  41e4be:	mov    ecx,0x145db872
  41e4c3:	(bad)  
  41e4c4:	push   eax
  41e4c5:	inc    eax
  41e4c6:	aad    0x3f
  41e4c8:	enter  0xa9db,0xfa
  41e4cc:	or     dl,ah
  41e4ce:	lds    esi,FWORD PTR [esi-0x32]
  41e4d1:	call   0xb0b4:0xa57f7d55
  41e4d8:	ficomp DWORD PTR [edi+0x4a0c3b9]
  41e4de:	mov    dh,0xd6
  41e4e0:	mov    DWORD PTR [esi-0x9405a20],ebp
  41e4e6:	jno    0x41e533
  41e4e8:	gs inc esi
  41e4ea:	push   eax
  41e4eb:	out    0x32,al
  41e4ed:	sti    
  41e4ee:	jmp    0xa45d:0x213785cd
  41e4f5:	adc    eax,0x3050d1de
  41e4fa:	lods   al,BYTE PTR ds:[esi]
  41e4fb:	fadd   st,st(4)
  41e4fd:	xor    ah,BYTE PTR [eax]
  41e4ff:	test   DWORD PTR [ebp-0x22],0xb032c337
  41e506:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e507:	lods   al,BYTE PTR ds:[esi]
  41e508:	mov    WORD PTR [ebx],es
  41e50a:	mov    ch,0x9
  41e50c:	pop    edi
  41e50d:	stc    
  41e50e:	jp     0x41e52f
  41e510:	jne    0x41e563
  41e512:	sub    ch,BYTE PTR [eax-0x68]
  41e515:	cs daa 
  41e517:	cwde   
  41e518:	imul   ebx,DWORD PTR [edx+esi*2+0xdf03bad],0xd3e92f78
  41e523:	pop    ds
  41e524:	sub    eax,0xa315c969
  41e529:	adc    eax,0x4e46739f
  41e52e:	sub    BYTE PTR [esi],0x35
  41e531:	into   
  41e532:	adc    BYTE PTR [edx],dl
  41e534:	mov    DWORD PTR [ebp+0x6c],esp
  41e537:	fdivr  QWORD PTR [edi]
  41e539:	and    esi,ebx
  41e53b:	sub    al,BYTE PTR [ecx+0x7a]
  41e53e:	test   eax,0x1f26ac3b
  41e543:	and    ecx,0x4326a55e
  41e549:	imul   esp,DWORD PTR [edi+0x7a88ab98],0x8d93095
  41e553:	mov    bh,0xb6
  41e555:	pop    ecx
  41e556:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e557:	cmp    DWORD PTR [ebx+ebp*8+0x6],ecx
  41e55b:	mov    WORD PTR [edi],ss
  41e55d:	aaa    
  41e55e:	mov    al,ds:0xab1292f8
  41e563:	ficom  WORD PTR [edi-0x57]
  41e566:	scas   al,BYTE PTR es:[edi]
  41e567:	mov    ds:0x22d33133,al
  41e56c:	sbb    ebx,DWORD PTR [esi+edx*2+0x6b]
  41e570:	push   eax
  41e571:	inc    eax
  41e572:	or     al,0x9c
  41e574:	ins    BYTE PTR es:[edi],dx
  41e575:	pusha  
  41e576:	jae    0x41e5f2
  41e578:	push   esi
  41e57a:	ins    DWORD PTR es:[edi],dx
  41e57b:	pop    eax
  41e57c:	pop    eax
  41e57d:	sub    cl,BYTE PTR [esi]
  41e57f:	add    DWORD PTR [edi],0x40
  41e582:	push   ebx
  41e583:	nop
  41e584:	sub    DWORD PTR [ecx+0x4d],esi
  41e587:	cli    
  41e588:	int3   
  41e589:	popa   
  41e58a:	pop    esp
  41e58b:	in     al,dx
  41e58c:	leave  
  41e58d:	popa   
  41e58e:	test   cl,ch
  41e590:	lock inc edx
  41e592:	mov    BYTE PTR [eax-0x9],cl
  41e595:	mov    eax,0x5e5959f5
  41e59a:	das    
  41e59b:	xchg   esi,eax
  41e59c:	call   0x13324727
  41e5a1:	push   ecx
  41e5a2:	dec    edx
  41e5a3:	push   esp
  41e5a4:	push   ebx
  41e5a5:	pop    edi
  41e5a6:	push   esi
  41e5a7:	jg     0x41e612
  41e5a9:	push   esi
  41e5aa:	jb     0x41e58f
  41e5ac:	adc    BYTE PTR [ebx+0x32],bl
  41e5af:	or     ah,bl
  41e5b1:	push   eax
  41e5b2:	pop    ss
  41e5b3:	or     cl,BYTE PTR [eax-0x1f]
  41e5b6:	in     eax,dx
  41e5b7:	cli    
  41e5b8:	xchg   edi,eax
  41e5b9:	jmp    0x41e62a
  41e5bb:	out    dx,al
  41e5bc:	jp     0x41e5af
  41e5be:	pusha  
  41e5bf:	ins    DWORD PTR es:[edi],dx
  41e5c0:	lock jle 0x41e5dc
  41e5c3:	and    cl,bh
  41e5c5:	push   edi
  41e5c6:	mov    cl,0xc
  41e5c8:	les    ax,DWORD PTR [eax+0x41]
  41e5cc:	cs dec ecx
  41e5ce:	jne    0x41e550
  41e5d0:	retf   
  41e5d1:	test   eax,0x639b8aa5
  41e5d6:	pop    esi
  41e5d7:	in     al,0xd4
  41e5d9:	mov    ch,0xcb
  41e5db:	sbb    bl,ch
  41e5dd:	jb     0x41e570
  41e5df:	push   ss
  41e5e0:	xor    edx,DWORD PTR [ecx-0x10]
  41e5e3:	pop    ss
  41e5e4:	call   0xc658:0xf09866c0
  41e5eb:	push   ebx
  41e5ec:	mov    ecx,ebp
  41e5ee:	adc    DWORD PTR [edi-0x6a],ebx
  41e5f1:	call   0x9c9f:0xa426841
  41e5f8:	pop    edi
  41e5f9:	dec    eax
  41e5fa:	adc    al,0x46
  41e5fc:	cmc    
  41e5fd:	mov    dh,0x8b
  41e5ff:	test   BYTE PTR [eax],ah
  41e601:	add    eax,ebp
  41e603:	jmp    0x33ec990f
  41e608:	inc    edx
  41e609:	sub    DWORD PTR [esi+0x63f068f6],ebx
  41e60f:	jmp    0x4c05:0x378b1938
  41e616:	mov    ebx,0xc4f4862
  41e61b:	test   DWORD PTR [edx],ebp
  41e61d:	shl    DWORD PTR [edi+0x4a0cd006],0x44
  41e624:	imul   esi,esp,0x6e08e1c1
  41e62a:	xor    BYTE PTR [esi+0x43],bh
  41e62d:	ja     0x41e691
  41e62f:	fadd   DWORD PTR [ebp+0xc]
  41e632:	js     0x41e5f6
  41e634:	loop   0x41e63d
  41e636:	rol    DWORD PTR [eax-0x5],cl
  41e639:	in     al,dx
  41e63a:	das    
  41e63b:	xchg   esp,eax
  41e63c:	push   es
  41e63d:	or     ecx,DWORD PTR [edi-0xe]
  41e640:	and    BYTE PTR [ebp+0x1f1ed40f],ah
  41e646:	jge    0x41e662
  41e648:	pop    esp
  41e649:	call   0x3cc8:0x1fe9d094
  41e650:	xlat   BYTE PTR ds:[ebx]
  41e651:	dec    ebp
  41e652:	retf   0xaebd
  41e655:	test   DWORD PTR [ecx],ebx
  41e657:	test   eax,0xd174e155
  41e65c:	out    0xb0,eax
  41e65e:	pop    esi
  41e65f:	cmovae ebx,DWORD PTR ds:0x23d72750
  41e666:	mov    ah,0xce
  41e668:	add    edi,eax
  41e66a:	or     al,0x9f
  41e66c:	outs   dx,BYTE PTR ds:[esi]
  41e66d:	xor    esi,eax
  41e66f:	pop    ebx
  41e670:	push   cs
  41e671:	scas   al,BYTE PTR es:[edi]
  41e672:	stc    
  41e673:	pop    ss
  41e674:	popf   
  41e675:	jl     0x41e64e
  41e677:	pop    ebx
  41e678:	shl    DWORD PTR [ebx+ebx*1],cl
  41e67b:	add    BYTE PTR ds:0x344651ca,ch
  41e681:	push   edx
  41e682:	lods   eax,DWORD PTR es:[esi]
  41e684:	std    
  41e685:	or     ebp,edi
  41e687:	stc    
  41e688:	sbb    DWORD PTR [ebx-0x26efd713],esp
  41e68e:	imul   edi,DWORD PTR [ebx-0xde16c3],0x2bbeef90
  41e698:	(bad)  
  41e699:	cdq    
  41e69a:	test   al,0xba
  41e69c:	aas    
  41e69d:	pop    ebp
  41e69e:	adc    eax,ebp
  41e6a0:	(bad)  
  41e6a1:	push   ds
  41e6a2:	into   
  41e6a3:	dec    ecx
  41e6a4:	retf   0xa075
  41e6a7:	dec    ebx
  41e6a8:	int    0xf9
  41e6aa:	cmp    eax,0xe720d81d
  41e6af:	leave  
  41e6b0:	retf   
  41e6b1:	ins    DWORD PTR es:[edi],dx
  41e6b2:	add    BYTE PTR [eax],cl
  41e6b4:	test   dh,al
  41e6b6:	add    eax,0xdf2a89be
  41e6bb:	cmp    eax,0xbbe4c506
  41e6c0:	sub    dh,BYTE PTR [esi-0xc]
  41e6c3:	and    DWORD PTR [esi-0x1c911ad],edi
  41e6c9:	xchg   edx,eax
  41e6ca:	loopne 0x41e71b
  41e6cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6cd:	mov    al,ds:0x1fb79cbd
  41e6d2:	push   esp
  41e6d3:	push   ds
  41e6d4:	mov    DWORD PTR [ebx+0x1c],edx
  41e6d7:	outs   dx,BYTE PTR ds:[esi]
  41e6d8:	iret   
  41e6d9:	jp     0x41e68e
  41e6db:	xchg   esp,eax
  41e6dc:	inc    ebp
  41e6dd:	push   edi
  41e6de:	cmp    esp,esi
  41e6e0:	lds    eax,FWORD PTR [esp+eiz*2]
  41e6e3:	je     0x41e693
  41e6e5:	adc    al,0x3b
  41e6e7:	dec    esp
  41e6e8:	scas   eax,DWORD PTR es:[edi]
  41e6e9:	mov    esi,0x885a08fb
  41e6ee:	xchg   ebx,eax
  41e6ef:	lds    ecx,FWORD PTR [ebp+0x59]
  41e6f2:	int    0x81
  41e6f4:	cmp    esp,eax
  41e6f6:	fisub  DWORD PTR [edx+ecx*1+0x798a1c59]
  41e6fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6fe:	jo     0x41e6e5
  41e700:	xchg   edx,eax
  41e701:	inc    eax
  41e702:	jl     0x41e72f
  41e704:	les    ecx,FWORD PTR [esi+0x27838103]
  41e70a:	loop   0x41e69f
  41e70c:	les    edx,FWORD PTR [edx+edx*2+0x5d]
  41e710:	jo     0x41e698
  41e712:	xchg   ebp,eax
  41e713:	push   cs
  41e714:	push   ebp
  41e715:	add    esi,DWORD PTR [ecx+0x4385f9f8]
  41e71b:	or     DWORD PTR [ecx],ebx
  41e71d:	sub    al,0xb3
  41e71f:	(bad)  
  41e720:	iret   
  41e721:	(bad)  
  41e722:	or     BYTE PTR [eax],al
  41e724:	xchg   ebx,eax
  41e725:	rcl    DWORD PTR [ebx+0xa],1
  41e728:	into   
  41e729:	mov    al,0x42
  41e72b:	push   esp
  41e72c:	popa   
  41e72d:	push   eax
  41e72e:	add    ah,dh
  41e730:	loope  0x41e728
  41e732:	nop
  41e733:	ss sub al,0x6a
  41e736:	popa   
  41e737:	mov    DWORD PTR [ebp+0x495fbc63],0xb3a98054
  41e741:	xchg   ebx,eax
  41e742:	or     cl,BYTE PTR [edi]
  41e744:	xor    ebx,DWORD PTR ds:0xeeb0cdf6
  41e74a:	cwde   
  41e74b:	sub    BYTE PTR [edi],cl
  41e74d:	popf   
  41e74e:	push   0x2b1c2271
  41e753:	popf   
  41e754:	aaa    
  41e755:	test   eax,0x9772e60e
  41e75a:	and    BYTE PTR [ebx-0x4b625816],ah
  41e760:	mov    bl,0xe
  41e762:	mov    DWORD PTR [edx],edx
  41e764:	mov    eax,ds:0x99d22e47
  41e769:	sbb    ah,BYTE PTR [eax-0x1]
  41e76c:	add    al,0x20
  41e76e:	jl     0x41e6ff
  41e770:	sub    edx,DWORD PTR [edx-0x5c98fde5]
  41e776:	dec    edi
  41e777:	push   ds
  41e778:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e779:	push   esi
  41e77a:	mov    es,WORD PTR [edi+0x63efdd16]
  41e780:	cmp    DWORD PTR [ecx+eiz*4+0x6b],eax
  41e784:	fst    DWORD PTR [ecx+esi*8-0x5b5f6537]
  41e78b:	nop
  41e78c:	adc    eax,0xb2efb44c
  41e791:	aad    0x82
  41e793:	daa    
  41e794:	out    dx,al
  41e795:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e796:	and    eax,0xd206da76
  41e79c:	(bad)  
  41e79d:	js     0x41e7e8
  41e79f:	mov    esi,0xacc9969b
  41e7a4:	inc    esp
  41e7a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7a6:	(bad)  
  41e7a7:	jmp    0x41e7f2
  41e7a9:	pop    ss
  41e7aa:	mov    bh,0x11
  41e7ac:	dec    esi
  41e7ad:	dec    ebp
  41e7ae:	lea    ebx,[esi]
  41e7b0:	repnz (bad) 
  41e7b2:	js     0x41e830
  41e7b4:	ins    DWORD PTR es:[edi],dx
  41e7b5:	or     DWORD PTR [eax],0xfffffffd
  41e7b8:	pop    esi
  41e7b9:	test   eax,0x2a120425
  41e7be:	stos   DWORD PTR es:[edi],eax
  41e7bf:	stc    
  41e7c0:	push   ss
  41e7c1:	mov    eax,ds:0xf6d6f83e
  41e7c6:	jmp    0xe56d:0x55e6bfe9
  41e7cd:	arpl   bx,bp
  41e7cf:	aam    0x4d
  41e7d1:	cmp    esp,esi
  41e7d3:	mov    ecx,DWORD PTR [eax+0x1b834649]
  41e7d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7da:	pop    ecx
  41e7db:	(bad)  
  41e7dc:	adc    DWORD PTR [ebp-0x5],eax
  41e7df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7e0:	and    DWORD PTR [ecx-0x54],edi
  41e7e3:	and    ebx,eax
  41e7e5:	dec    edi
  41e7e6:	std    
  41e7e7:	push   cs
  41e7e8:	sub    eax,DWORD PTR [ebx-0x5a]
  41e7eb:	test   al,0xc8
  41e7ed:	bound  edx,QWORD PTR ds:0xd81c650e
  41e7f3:	push   ebx
  41e7f4:	sbb    eax,0x37286a83
  41e7f9:	push   ebp
  41e7fa:	stc    
  41e7fb:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7fd:	cmp    ebx,DWORD PTR [ecx]
  41e7ff:	leave  
  41e800:	arpl   WORD PTR [ebp+eax*1-0x5a],cx
  41e804:	mov    al,0x19
  41e806:	cli    
  41e807:	sbb    al,0x34
  41e809:	add    BYTE PTR [edi],ch
  41e80b:	lods   al,BYTE PTR ds:[esi]
  41e80c:	jne    0x41e7f1
  41e80e:	sbb    eax,0xc067143d
  41e813:	jmp    0x4731:0xe448ce74
  41e81a:	cmp    bh,BYTE PTR [eax]
  41e81c:	add    BYTE PTR [eax-0x50c6f8b1],ch
  41e822:	and    esp,DWORD PTR [edi+0x39953afe]
  41e828:	fld    QWORD PTR [ebx-0x33]
  41e82b:	pop    ebp
  41e82c:	dec    ebp
  41e82d:	(bad)  
  41e82e:	add    eax,0x4ffe5a4
  41e833:	(bad)
  41e837:	mov    dh,0xd1
  41e839:	in     eax,0x1a
  41e83b:	cmc    
  41e83c:	jns    0x41e8ac
  41e83e:	dec    eax
  41e83f:	out    0xa0,eax
  41e841:	loope  0x41e88f
  41e843:	mov    edx,0x296891f1
  41e848:	sbb    ebx,DWORD PTR [ecx-0xca377b]
  41e84e:	pop    ds
  41e84f:	int3   
  41e850:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e851:	retf   0x83b8
  41e854:	sbb    edx,ecx
  41e856:	adc    eax,0x76c3174a
  41e85b:	push   esp
  41e85c:	les    ecx,FWORD PTR [esi+0x1]
  41e85f:	sub    DWORD PTR [ecx],ecx
  41e861:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e862:	add    DWORD PTR [esi],edx
  41e864:	loopne 0x41e820
  41e866:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e867:	je     0x41e85b
  41e869:	sub    DWORD PTR [esi+ecx*2],eax
  41e86c:	push   0x57a857db
  41e871:	retf   
  41e872:	mov    eax,0xf411d016
  41e877:	lock pusha 
  41e879:	adc    BYTE PTR [eax+0x21518e79],0x53
  41e880:	das    
  41e881:	test   DWORD PTR [ecx],ebp
  41e883:	imul   esi,DWORD PTR [edi-0x6e69e485],0xf874c65d
  41e88d:	cmp    BYTE PTR es:[edi+esi*4-0x423c5953],bh
  41e895:	loop   0x41e8e0
  41e897:	fbstp  TBYTE PTR [edx-0x5f]
  41e89a:	scas   eax,DWORD PTR es:[edi]
  41e89b:	int    0xbd
  41e89d:	pop    DWORD PTR [edi-0x22]
  41e8a0:	or     eax,0x54e89b72
  41e8a5:	inc    ebx
  41e8a6:	ret    
  41e8a7:	cmp    cl,BYTE PTR [ebp-0x19]
  41e8aa:	leave  
  41e8ab:	sbb    ch,BYTE PTR [edx+0x59]
  41e8ae:	repnz sub eax,0xcb158273
  41e8b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8b5:	sbb    eax,0xab7a945a
  41e8ba:	mov    ebp,0xb9e5d6dc
  41e8bf:	or     al,al
  41e8c1:	ret    0x67d
  41e8c4:	repz mov eax,0xc0693eb7
  41e8ca:	mov    ebx,0x4fa2398c
  41e8cf:	dec    ebx
  41e8d0:	adc    eax,0x96fb473f
  41e8d5:	sub    al,0x50
  41e8d7:	je     0x41e8b5
  41e8d9:	mov    dh,0x1
  41e8db:	jmp    0x41e8cf
  41e8dd:	inc    eax
  41e8de:	sub    ebx,DWORD PTR [ecx+ebx*4]
  41e8e1:	dec    ecx
  41e8e2:	add    BYTE PTR [esi+0x35],ch
  41e8e5:	inc    edi
  41e8e6:	push   eax
  41e8e7:	loop   0x41e87b
  41e8e9:	arpl   WORD PTR [ebx+0x3c70380d],bp
  41e8ef:	scas   eax,DWORD PTR es:[edi]
  41e8f0:	cs gs cwde 
  41e8f3:	sahf   
  41e8f4:	ss jecxz 0x41e974
  41e8f7:	lahf   
  41e8f8:	aad    0x79
  41e8fa:	in     al,0x70
  41e8fc:	into   
  41e8fd:	or     esi,esi
  41e8ff:	inc    edi
  41e900:	add    esp,0xffffffbf
  41e903:	pop    ecx
  41e904:	into   
  41e905:	adc    eax,ecx
  41e907:	xchg   ebp,eax
  41e908:	retfw  
  41e90a:	jecxz  0x41e8ce
  41e90c:	imul   ebx,DWORD PTR [eax],0x429cef02
  41e912:	ja     0x41e8be
  41e914:	push   ebx
  41e915:	inc    eax
  41e916:	jmp    0x5e2ab964
  41e91b:	sub    DWORD PTR [ebx],ebx
  41e91d:	sub    al,0x9d
  41e91f:	jecxz  0x41e8c9
  41e921:	sar    BYTE PTR [edx-0x2d4c08d9],cl
  41e927:	mov    eax,ds:0xcadb38f5
  41e92c:	pop    esp
  41e92d:	nop
  41e92e:	push   ds
  41e92f:	(bad)  
  41e931:	mov    ecx,0x3ac481f9
  41e936:	imul   ebp,ebx,0x642cf4f0
  41e93c:	aam    0x6d
  41e93e:	ror    BYTE PTR [eax+0x44],0xd3
  41e942:	std    
  41e943:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e944:	scas   eax,DWORD PTR es:[edi]
  41e945:	shl    BYTE PTR [edi+ebx*8-0x51],1
  41e949:	dec    ebp
  41e94a:	push   eax
  41e94b:	xchg   ebp,eax
  41e94c:	push   edi
  41e94d:	ins    DWORD PTR es:[edi],dx
  41e94e:	daa    
  41e94f:	cmp    esi,DWORD PTR [esp+eax*4]
  41e952:	inc    ebp
  41e953:	scas   al,BYTE PTR es:[edi]
  41e954:	push   0x3c57f1f3
  41e959:	xchg   ebx,eax
  41e95a:	jns    0x41e98b
  41e95c:	inc    esi
  41e95d:	fist   WORD PTR [ebx+0x28]
  41e960:	iret   
  41e961:	and    al,0xb9
  41e963:	push   cs
  41e964:	(bad)  
  41e965:	fisubr WORD PTR [ecx-0x1cd18423]
  41e96b:	pmuludq mm6,QWORD PTR [edi-0x358dfaa2]
  41e972:	xlat   BYTE PTR ds:[ebx]
  41e973:	add    DWORD PTR [esi-0xe],0x22a425d4
  41e97a:	jmp    0x41e9f8
  41e97c:	sbb    al,0xf
  41e97e:	pop    ecx
  41e97f:	or     BYTE PTR [ecx+0x6058107e],bh
  41e985:	out    0x3,al
  41e987:	jmp    0x41e9c7
  41e989:	pop    eax
  41e98a:	call   0x49e5fe5b
  41e98f:	mov    al,ds:0x90c141b3
  41e994:	lods   eax,DWORD PTR ds:[esi]
  41e995:	jmp    0x41e96f
  41e997:	aas    
  41e998:	out    0xbd,eax
  41e99a:	and    al,0x12
  41e99c:	repnz pop esp
  41e99e:	fimul  WORD PTR [esi]
  41e9a0:	ficom  WORD PTR [eax]
  41e9a2:	loopne 0x41e939
  41e9a4:	ds lea ebp,ds:[esi+0x28]
  41e9a9:	xchg   edi,eax
  41e9aa:	retf   0x1592
  41e9ad:	sub    BYTE PTR [esi-0x7518d7db],ch
  41e9b3:	sti    
  41e9b4:	xor    al,0x46
  41e9b6:	mov    DWORD PTR [edi-0x60],ebx
  41e9b9:	mov    bh,0x95
  41e9bb:	and    edi,DWORD PTR [ecx]
  41e9bd:	pop    edi
  41e9be:	loopne 0x41e95f
  41e9c0:	adc    al,BYTE PTR [ecx]
  41e9c2:	sbb    BYTE PTR [ebp+0x786f5db2],0xfa
  41e9c9:	jg     0x41e98a
  41e9cb:	jle    0x41ea2a
  41e9cd:	test   DWORD PTR [ecx+edi*2-0x2cf3c190],eax
  41e9d4:	lds    edx,FWORD PTR [edi-0x1e]
  41e9d7:	lock dec ebp
  41e9d9:	add    esi,DWORD PTR ds:0xac6709dc
  41e9df:	loope  0x41ea06
  41e9e1:	add    eax,0x9c086a3d
  41e9e6:	(bad)  
  41e9e7:	loope  0x41ea3c
  41e9e9:	or     BYTE PTR [edx],cl
  41e9eb:	loopne 0x41ea02
  41e9ed:	icebp  
  41e9ee:	inc    esp
  41e9ef:	lock cmc 
  41e9f1:	ret    
  41e9f2:	push   edx
  41e9f3:	xlat   BYTE PTR ds:[ebx]
  41e9f4:	leave  
  41e9f5:	test   BYTE PTR [esi-0x1c],0xb6
  41e9f9:	in     eax,0x4e
  41e9fb:	push   ebp
  41e9fc:	hlt    
  41e9fd:	mov    dl,0x27
  41e9ff:	or     DWORD PTR [edi+0x59],0xfffffffc
  41ea03:	fisub  WORD PTR [edx+0x34]
  41ea06:	and    esi,edi
  41ea08:	test   al,0x6c
  41ea0a:	xchg   ebp,eax
  41ea0b:	test   eax,0xd77e4556
  41ea10:	mov    bl,0xc5
  41ea12:	cmc    
  41ea13:	xor    al,0x33
  41ea15:	std    
  41ea16:	(bad)  
  41ea17:	cmc    
  41ea18:	cdq    
  41ea19:	lahf   
  41ea1a:	inc    eax
  41ea1b:	lock (bad) 
  41ea1d:	and    BYTE PTR [eax],dl
  41ea1f:	retf   0x35ae
  41ea22:	push   0x428f01b9
  41ea27:	jge    0x41ea95
  41ea29:	lahf   
  41ea2a:	jo     0x41e9f6
  41ea2c:	and    eax,0xfb2b4161
  41ea31:	arpl   WORD PTR [esi-0xa],di
  41ea34:	data16 (bad) 
  41ea36:	jle    0x41e9fa
  41ea38:	(bad)  
  41ea3a:	add    DWORD PTR [ecx],edx
  41ea3c:	jb     0x41ea70
  41ea3e:	cmp    ah,BYTE PTR [edi]
  41ea40:	jle    0x41ea15
  41ea42:	jp     0x41ea38
  41ea44:	jo     0x41e9c7
  41ea46:	pop    ss
  41ea47:	and    dl,dh
  41ea49:	jbe    0x41ea74
  41ea4b:	outs   dx,DWORD PTR ds:[esi]
  41ea4c:	jg     0x41eaae
  41ea4e:	adc    al,BYTE PTR ds:0xf8615879
  41ea54:	rcl    BYTE PTR [esp+ecx*1],1
  41ea57:	jbe    0x41eab2
  41ea59:	push   edi
  41ea5a:	mov    ecx,0xbc7fc26c
  41ea5f:	add    dl,BYTE PTR [ebx-0x7c993920]
  41ea65:	outs   dx,BYTE PTR ds:[esi]
  41ea66:	shr    BYTE PTR [edi-0x53],1
  41ea69:	rcl    BYTE PTR [ebx],0xd5
  41ea6c:	mov    ah,0x1a
  41ea6e:	xor    BYTE PTR [edx-0x5e],dl
  41ea71:	js     0x41ea86
  41ea73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea74:	mov    esi,0x93840a97
  41ea79:	cmp    BYTE PTR [edi+0xf],ch
  41ea7c:	push   edi
  41ea7d:	sbb    DWORD PTR [ebp-0x68],0xffffffc1
  41ea81:	dec    DWORD PTR [esi-0x1a]
  41ea84:	iret   
  41ea85:	pop    ecx
  41ea86:	cmp    eax,0xea240376
  41ea8b:	xchg   BYTE PTR [ecx+0x78],bh
  41ea8e:	push   ecx
  41ea8f:	jmp    0x41eaf4
  41ea91:	pop    ebp
  41ea92:	pop    eax
  41ea93:	sub    edx,DWORD PTR [bx+si]
  41ea96:	mov    gs,WORD PTR [ebx+0x19]
  41ea99:	scas   eax,DWORD PTR es:[edi]
  41ea9a:	outs   dx,BYTE PTR ds:[esi]
  41ea9b:	pop    edx
  41ea9c:	cmp    eax,esi
  41ea9e:	or     edi,DWORD PTR [esi+0x12bffa]
  41eaa4:	jg     0x41ea8c
  41eaa6:	clc    
  41eaa7:	out    0x44,eax
  41eaa9:	mov    dl,0xef
  41eaab:	cdq    
  41eaac:	jle    0x41eafe
  41eaae:	rcl    DWORD PTR [edi],cl
  41eab0:	dec    edi
  41eab1:	push   cs
  41eab2:	cmp    ah,BYTE PTR [ebp+0x59813932]
  41eab8:	in     eax,dx
  41eab9:	pop    ebx
  41eaba:	cli    
  41eabb:	cmp    eax,0x684ff75
  41eac0:	mov    esp,0xb90041d
  41eac5:	pop    eax
  41eac6:	lods   eax,DWORD PTR ds:[esi]
  41eac7:	daa    
  41eac8:	inc    eax
  41eac9:	pop    esi
  41eaca:	dec    esi
  41eacb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eacc:	pushf  
  41eacd:	je     0x41eab0
  41eacf:	lahf   
  41ead0:	scas   al,BYTE PTR es:[edi]
  41ead1:	scas   eax,DWORD PTR es:[edi]
  41ead2:	scas   eax,DWORD PTR es:[edi]
  41ead3:	mov    bh,0x49
  41ead5:	sub    eax,0xae6de2fe
  41eada:	adc    eax,0x2d7e6380
  41eadf:	sub    bl,BYTE PTR [eax-0xb]
  41eae2:	enter  0xb21,0x1d
  41eae6:	dec    eax
  41eae7:	inc    edi
  41eae8:	jae    0x41eb42
  41eaea:	or     eax,0xab8f74e9
  41eaef:	jo     0x41eab1
  41eaf1:	push   ebx
  41eaf2:	mov    al,ds:0xe965cb54
  41eaf7:	sub    BYTE PTR [ecx-0x61],ah
  41eafa:	shl    BYTE PTR [eax-0x6b],1
  41eafd:	pop    esi
  41eafe:	ins    DWORD PTR es:[edi],dx
  41eaff:	pop    eax
  41eb00:	sub    BYTE PTR fs:[edx-0x844f136],bh
  41eb07:	dec    edx
  41eb08:	sbb    BYTE PTR [ecx],bl
  41eb0a:	ja     0x41eb5d
  41eb0c:	(bad)  
  41eb0d:	call   edi
  41eb0f:	into   
  41eb10:	das    
  41eb11:	lods   al,BYTE PTR ds:[esi]
  41eb12:	xlat   BYTE PTR ds:[ebx]
  41eb13:	into   
  41eb14:	jns    0x41eb52
  41eb16:	jns    0x41eb64
  41eb18:	xor    ebx,eax
  41eb1a:	mov    ebx,DWORD PTR [ecx+0x4e]
  41eb1d:	in     eax,0x3e
  41eb1f:	inc    ecx
  41eb20:	jge    0x41eab3
  41eb22:	shl    DWORD PTR [ecx+0x4c],0xf0
  41eb26:	sti    
  41eb27:	outs   dx,BYTE PTR ds:[esi]
  41eb28:	data16 fwait
  41eb2a:	push   edx
  41eb2b:	mov    ds:0xe11edde8,eax
  41eb30:	push   0x65bed6b7
  41eb35:	dec    ecx
  41eb36:	xor    bh,BYTE PTR ds:0x14d579f0
  41eb3c:	ss out 0x22,al
  41eb3f:	aas    
  41eb40:	arpl   WORD PTR [eax+0x12],bp
  41eb43:	mov    esi,DWORD PTR [edi+edx*4+0x289637d1]
  41eb4a:	push   0xfffffff1
  41eb4c:	pushf  
  41eb4d:	pop    eax
  41eb4e:	mov    esi,0xca12d024
  41eb53:	fdiv   st,st(0)
  41eb55:	add    dl,BYTE PTR [edx+0x2af75ce3]
  41eb5b:	sar    BYTE PTR [ebx+0x5e],1
  41eb5e:	(bad)  
  41eb60:	fiadd  WORD PTR ds:0x6787db49
  41eb66:	scas   al,BYTE PTR es:[edi]
  41eb67:	inc    eax
  41eb68:	sub    DWORD PTR [edi+0x4b],esi
  41eb6b:	and    eax,0xc7f362a6
  41eb70:	push   esp
  41eb71:	call   0xf82b:0x966ec811
  41eb78:	ret    
  41eb79:	sub    BYTE PTR [esi-0x476fd6f],0xae
  41eb80:	xlat   BYTE PTR ds:[ebx]
  41eb81:	mov    al,ds:0x502dea6f
  41eb86:	push   0xd5381c80
  41eb8b:	xchg   esp,eax
  41eb8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb8d:	scas   al,BYTE PTR es:[edi]
  41eb8e:	icebp  
  41eb8f:	dec    esp
  41eb90:	mov    dh,0x28
  41eb92:	push   ebp
  41eb93:	fsubp  st(3),st
  41eb95:	ror    dl,cl
  41eb97:	jo     0x41eb69
  41eb99:	pop    eax
  41eb9a:	push   edx
  41eb9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb9c:	je     0x41eb2d
  41eb9e:	and    dl,BYTE PTR [eax]
  41eba0:	pop    edi
  41eba1:	sbb    BYTE PTR [esi],0xdd
  41eba4:	cmp    al,0x6
  41eba6:	adc    ah,dh
  41eba8:	ss imul edx,ecx,0x53
  41ebac:	mov    dl,0xf3
  41ebae:	pop    esp
  41ebaf:	mov    BYTE PTR [ebp+0x68],dl
  41ebb2:	(bad)  
  41ebb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ebb4:	test   al,0x3
  41ebb6:	stos   DWORD PTR es:[edi],eax
  41ebb7:	ss xchg esi,eax
  41ebb9:	push   cs
  41ebba:	fcomip st,st(4)
  41ebbc:	repnz lock mov al,0x4d
  41ebc0:	push   DWORD PTR [edx+0x4d]
  41ebc3:	adc    ebx,esi
  41ebc5:	push   ebx
  41ebc6:	scas   eax,DWORD PTR es:[edi]
  41ebc7:	rcr    DWORD PTR fs:[edi+0x13],1
  41ebcb:	adc    DWORD PTR [eax+0x68],edx
  41ebce:	in     al,0x9a
  41ebd0:	shl    ebx,0x68
  41ebd3:	(bad)  
  41ebd4:	push   ebp
  41ebd5:	or     bh,dh
  41ebd7:	jg     0x41ec20
  41ebd9:	fcom   DWORD PTR [edi+0x6]
  41ebdc:	lods   eax,DWORD PTR ds:[esi]
  41ebdd:	jnp    0x41ec1f
  41ebdf:	pop    edi
  41ebe0:	cmp    edi,eax
  41ebe2:	lds    ebp,FWORD PTR [ecx]
  41ebe4:	or     al,0x66
  41ebe6:	aas    
  41ebe7:	imul   DWORD PTR [eax-0x3b68fd46]
  41ebed:	push   edx
  41ebee:	test   eax,0xc4421207
  41ebf3:	mov    WORD PTR [ecx-0x59ee1ca5],ds
  41ebf9:	hlt    
  41ebfa:	in     eax,dx
  41ebfb:	jno    0x41ec3c
  41ebfd:	scas   eax,DWORD PTR es:[edi]
  41ebfe:	or     ah,0x60
  41ec01:	push   ss
  41ec02:	jbe    0x41eb87
  41ec04:	push   eax
  41ec05:	test   al,0x71
  41ec07:	dec    ebp
  41ec08:	xor    ebp,DWORD PTR [edi-0x72]
  41ec0b:	pop    ss
  41ec0c:	cs push ds
  41ec0e:	add    BYTE PTR [edx-0x1f],0x11
  41ec12:	xor    cl,BYTE PTR [eax]
  41ec14:	sub    BYTE PTR [ebp+0x64],0xfd
  41ec18:	push   esi
  41ec19:	outs   dx,DWORD PTR ds:[esi]
  41ec1a:	push   ss
  41ec1b:	sbb    DWORD PTR [esi+0x56],0x55
  41ec1f:	pop    ebx
  41ec20:	sar    DWORD PTR [edi],1
  41ec22:	sub    DWORD PTR [ebp+0x65971c4c],eax
  41ec28:	sbb    esi,DWORD PTR [esi+ebp*4+0x46b89161]
  41ec2f:	jo     0x41ec7e
  41ec31:	lock lods al,BYTE PTR cs:[esi]
  41ec34:	repz icebp 
  41ec36:	in     al,dx
  41ec37:	sub    eax,0xcd81d7c2
  41ec3c:	jmp    0xf894:0xa074a55b
  41ec43:	sub    dh,bl
  41ec45:	fsub   DWORD PTR [ebp+0x41]
  41ec48:	les    ecx,FWORD PTR [esi-0x80]
  41ec4b:	mov    ebx,0xd87d5387
  41ec50:	pop    ds
  41ec51:	sbb    DWORD PTR [ebp-0x6426e6e6],0xb93d02e3
  41ec5b:	out    dx,al
  41ec5c:	stos   BYTE PTR es:[edi],al
  41ec5d:	(bad)  
  41ec5e:	leave  
  41ec5f:	mov    edi,0x46aa18c8
  41ec64:	inc    ecx
  41ec65:	lds    ebp,FWORD PTR [esi]
  41ec67:	mov    bh,0x32
  41ec69:	pop    edx
  41ec6a:	dec    edi
  41ec6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec6c:	das    
  41ec6d:	daa    
  41ec6e:	adc    dh,BYTE PTR [eax]
  41ec70:	add    eax,eax
  41ec72:	fwait
  41ec73:	adc    al,0xe9
  41ec75:	retf   0xb89f
  41ec78:	xchg   ebp,eax
  41ec79:	inc    edi
  41ec7a:	popa   
  41ec7b:	sbb    al,0x69
  41ec7d:	xchg   esp,eax
  41ec7e:	(bad)  
  41ec7f:	push   ecx
  41ec80:	dec    ebp
  41ec81:	call   0x4983e1fb
  41ec86:	mov    bh,0xec
  41ec88:	cmp    DWORD PTR [eax+edi*4],eax
  41ec8b:	imul   esi,DWORD PTR ds:0x6a277ba4,0x9155ddc0
  41ec95:	out    0xdd,al
  41ec97:	out    dx,al
  41ec98:	stos   BYTE PTR es:[edi],al
  41ec99:	jne    0x41ed0f
  41ec9b:	leave  
  41ec9c:	mov    ds:0x3441ef79,al
  41eca1:	cdq    
  41eca2:	dec    ecx
  41eca3:	je     0x41ecc3
  41eca5:	lods   al,BYTE PTR ds:[esi]
  41eca6:	mov    ebp,0xdcbf2d79
  41ecab:	out    dx,eax
  41ecac:	stos   BYTE PTR es:[edi],al
  41ecad:	and    DWORD PTR [ebx],ebp
  41ecaf:	pop    esp
  41ecb0:	out    0xa9,al
  41ecb2:	inc    ebp
  41ecb3:	aam    0x81
  41ecb5:	nop
  41ecb6:	lock inc eax
  41ecb8:	outs   dx,BYTE PTR ds:[esi]
  41ecb9:	ins    DWORD PTR es:[edi],dx
  41ecba:	outs   dx,DWORD PTR ds:[esi]
  41ecbb:	sub    DWORD PTR [eax-0xc022087],esp
  41ecc1:	xchg   ecx,eax
  41ecc2:	mov    edx,DWORD PTR [ebx+0xf]
  41ecc5:	stos   DWORD PTR es:[edi],eax
  41ecc6:	popa   
  41ecc7:	ds in  eax,dx
  41ecc9:	stos   DWORD PTR es:[edi],eax
  41ecca:	and    ebx,DWORD PTR [edi+0x667dbac3]
  41ecd0:	lahf   
  41ecd1:	sti    
  41ecd2:	lods   eax,DWORD PTR ds:[esi]
  41ecd3:	adc    al,0x1a
  41ecd5:	test   al,0xe0
  41ecd7:	imul   eax,ebp,0xcf775b16
  41ecdd:	nop
  41ecde:	stc    
  41ecdf:	cwde   
  41ece0:	sbb    al,0x32
  41ece2:	xor    eax,0x6eb26232
  41ece7:	mov    ecx,0xe3a69cce
  41ecec:	mov    al,ds:0x5e74b24c
  41ecf1:	jno    0x41ed3a
  41ecf3:	jp     0x41ed1b
  41ecf5:	rol    bl,0xb2
  41ecf8:	mov    al,0xbd
  41ecfa:	adc    ebp,eax
  41ecfc:	mov    ecx,esi
  41ecfe:	lods   eax,DWORD PTR ds:[esi]
  41ecff:	adc    al,0x5c
  41ed01:	or     BYTE PTR [edx-0x50e31220],cl
  41ed07:	fldl2e 
  41ed09:	inc    esp
  41ed0a:	stc    
  41ed0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed0c:	push   ss
  41ed0d:	jae    0x41ed43
  41ed0f:	rol    DWORD PTR [eax],0xae
  41ed12:	sub    ch,al
  41ed14:	or     eax,0x373f387f
  41ed19:	pop    eax
  41ed1a:	fdiv   st,st(3)
  41ed1c:	out    0xac,eax
  41ed1e:	pop    edx
  41ed1f:	push   es
  41ed20:	ret    0x41c0
  41ed23:	scas   eax,DWORD PTR es:[edi]
  41ed24:	mov    al,0xc1
  41ed26:	mov    ebx,0x9052fbef
  41ed2b:	std    
  41ed2c:	dec    ebx
  41ed2d:	sbb    eax,0xd7791fa4
  41ed32:	and    DWORD PTR [ecx+0x23342a66],ebp
  41ed38:	pop    ss
  41ed39:	pop    esi
  41ed3a:	in     eax,0x83
  41ed3c:	inc    ecx
  41ed3d:	xchg   DWORD PTR [edi-0x21bd3494],ebx
  41ed43:	add    esp,ecx
  41ed45:	mov    ds:0x73d09931,eax
  41ed4a:	xchg   ebp,eax
  41ed4b:	push   ecx
  41ed4c:	mul    DWORD PTR [esi+0x54fdaa92]
  41ed52:	or     DWORD PTR [ecx],0x31
  41ed55:	lahf   
  41ed56:	aam    0xd6
  41ed58:	enter  0x8f6a,0xac
  41ed5c:	daa    
  41ed5d:	mov    bh,BYTE PTR ds:0x8e2cf06c
  41ed63:	jecxz  0x41eda2
  41ed65:	ret    
  41ed66:	ror    DWORD PTR [esi-0x5c],0xe3
  41ed6a:	mov    esi,0x91a50bf0
  41ed6f:	(bad)  
  41ed70:	sbb    DWORD PTR [edi+0x63],ecx
  41ed73:	or     DWORD PTR [edi-0x5c2a132a],ecx
  41ed79:	(bad)  
  41ed7a:	mov    DWORD PTR [ebp-0x274bed6b],eax
  41ed80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed81:	inc    ebx
  41ed82:	inc    esp
  41ed83:	rcl    ebp,1
  41ed85:	push   ds
  41ed86:	sbb    edi,ecx
  41ed88:	xor    eax,0xcd7a791e
  41ed8d:	adc    al,0x7d
  41ed8f:	(bad)  
  41ed90:	sub    ecx,DWORD PTR [ecx+0x6bba4d57]
  41ed96:	jge    0x41ed49
  41ed98:	dec    esi
  41ed99:	call   0xc2fdfe30
  41ed9e:	cs mov cl,0x0
  41eda1:	mov    al,ds:0x832c4460
  41eda6:	inc    eax
  41eda7:	xor    eax,0xe4a1b2e
  41edac:	mov    ds:0x337c18a1,eax
  41edb1:	fsubr  QWORD PTR [eax+0x13]
  41edb4:	adc    eax,0x51857c72
  41edb9:	call   0x8636:0xa2c7a728
  41edc0:	xchg   esp,eax
  41edc1:	push   cs
  41edc2:	xchg   DWORD PTR [ebx],esi
  41edc4:	sti    
  41edc5:	inc    ebx
  41edc6:	fs nop
  41edc8:	(bad)  
  41edc9:	jns    0x41ed99
  41edcb:	(bad)  
  41edcc:	jmp    0xe5446233
  41edd1:	sub    esi,ecx
  41edd3:	push   edx
  41edd4:	xchg   edx,eax
  41edd5:	out    dx,eax
  41edd6:	into   
  41edd7:	cwde   
  41edd8:	ja     0x41ed5b
  41edda:	nop
  41eddb:	inc    edi
  41eddc:	mov    bh,0x58
  41edde:	out    0x3f,al
  41ede0:	pop    ebp
  41ede1:	push   ss
  41ede2:	lods   eax,DWORD PTR ds:[esi]
  41ede3:	int    0x93
  41ede5:	test   BYTE PTR [ecx],dl
  41ede7:	test   DWORD PTR [eax],ebp
  41ede9:	out    dx,eax
  41edea:	cmp    eax,0xd4cb4b88
  41edef:	imul   edx,DWORD PTR ds:0x817102a9,0xf63c7922
  41edf9:	xor    al,0x25
  41edfb:	sti    
  41edfc:	cwde   
  41edfd:	dec    edx
  41edfe:	jne    0x41ed8b
  41ee00:	loopne 0x41ee6f
  41ee02:	icebp  
  41ee03:	inc    edx
  41ee04:	or     eax,0xc94013cb
  41ee09:	aas    
  41ee0a:	out    0x16,eax
  41ee0c:	(bad)  
  41ee0d:	mov    edx,0x4e5c4976
  41ee12:	push   ss
  41ee13:	out    0xc5,al
  41ee15:	and    BYTE PTR [ebx+0x11],dh
  41ee18:	int3   
  41ee19:	and    BYTE PTR [eax+0x18fb1685],0xcc
  41ee20:	push   es
  41ee21:	imul   edx,ecx,0xb2336d10
  41ee27:	mov    eax,0x7dc724b6
  41ee2c:	dec    esp
  41ee2d:	fdivr  DWORD PTR [ebx+ebx*4]
  41ee30:	mov    WORD PTR [eax-0x32],gs
  41ee33:	(bad)  
  41ee34:	jne    0x41ee1e
  41ee36:	push   esi
  41ee37:	sub    eax,0x28f51124
  41ee3c:	xchg   esi,eax
  41ee3d:	inc    edx
  41ee3e:	stos   DWORD PTR es:[edi],eax
  41ee3f:	repz cmc 
  41ee41:	ins    BYTE PTR es:[edi],dx
  41ee42:	fs sub eax,0xd64e9cf1
  41ee48:	cmp    ah,ch
  41ee4a:	pop    ss
  41ee4b:	movq   mm4,QWORD PTR [ebx+0x2798288a]
  41ee52:	adc    DWORD PTR [eax],esp
  41ee54:	push   eax
  41ee55:	push   edx
  41ee56:	leave  
  41ee57:	xchg   ecx,eax
  41ee58:	push   0x98240bc8
  41ee5d:	push   esp
  41ee5e:	dec    eax
  41ee5f:	mov    dl,0xc7
  41ee61:	mov    dh,0x34
  41ee63:	adc    al,0xfa
  41ee65:	test   BYTE PTR gs:[eax],ah
  41ee68:	pop    esp
  41ee69:	mov    ch,0xe5
  41ee6b:	mov    esi,DWORD PTR [edx-0x73]
  41ee6e:	mov    es,esp
  41ee70:	mul    DWORD PTR [edx-0x2e39f7b]
  41ee76:	cs inc ecx
  41ee78:	jg     0x41eec7
  41ee7a:	fwait
  41ee7b:	call   0xea79:0x74e6acf8
  41ee82:	paddusb mm0,QWORD PTR cs:[ecx]
  41ee86:	sub    BYTE PTR [ecx],cl
  41ee88:	aad    0x34
  41ee8a:	in     al,0x8a
  41ee8c:	pop    esi
  41ee8d:	cwde   
  41ee8e:	inc    esi
  41ee8f:	cli    
  41ee90:	add    eax,0x2b5b6eb9
  41ee95:	pop    ss
  41ee96:	mov    dl,0x8b
  41ee98:	ret    0x72c6
  41ee9b:	pop    ss
  41ee9c:	(bad)  
  41ee9e:	or     edi,esi
  41eea0:	inc    edi
  41eea1:	jae    0x41ef14
  41eea3:	pop    es
  41eea4:	jb     0x41ee93
  41eea6:	shrd   DWORD PTR [edx-0x1a864457],ebp,cl
  41eead:	addr16 nop
  41eeaf:	test   DWORD PTR ds:0xd3a17f62,esp
  41eeb5:	jne    0x41ee7b
  41eeb7:	inc    edi
  41eeb8:	sub    BYTE PTR [esi-0x4954274],ch
  41eebe:	jnp    0x41eebe
  41eec0:	call   0xd213:0xbb3e8155
  41eec7:	fisub  WORD PTR [eax]
  41eec9:	mov    DWORD PTR [ebp+0x7d],edi
  41eecc:	js     0x41ef0c
  41eece:	and    edi,DWORD PTR [esi-0x7b]
  41eed1:	repz inc ebx
  41eed3:	inc    eax
  41eed4:	dec    edx
  41eed5:	test   eax,0xdba9877d
  41eeda:	pop    ds
  41eedb:	dec    ecx
  41eedc:	cmp    DWORD PTR [edx-0x1d],ecx
  41eedf:	or     DWORD PTR [ebp-0x54],ebx
  41eee2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eee3:	push   es
  41eee4:	fstp   TBYTE PTR [esp+ebx*4]
  41eee7:	adc    eax,eax
  41eee9:	std    
  41eeea:	dec    edi
  41eeeb:	lds    ebp,FWORD PTR [ecx-0x75f4a30a]
  41eef1:	out    0x11,eax
  41eef3:	nop
  41eef4:	push   edx
  41eef5:	adc    BYTE PTR [edi+0x68],ah
  41eef8:	rcl    DWORD PTR [esi],0x3d
  41eefb:	adc    eax,0x1e79729a
  41ef00:	mov    bh,0xf7
  41ef02:	sbb    esi,DWORD PTR [ecx+0x0]
  41ef05:	mov    ds:0x598d573e,eax
  41ef0a:	cmp    eax,DWORD PTR [edi]
  41ef0c:	xchg   esi,eax
  41ef0d:	nop
  41ef0e:	cdq    
  41ef0f:	sti    
  41ef10:	es dec esi
  41ef12:	jecxz  0x41eec4
  41ef14:	sbb    eax,0xbeca0b45
  41ef19:	(bad)  
  41ef1a:	(bad)  
  41ef1b:	cmp    edi,DWORD PTR [edi-0x2c]
  41ef1e:	mov    al,BYTE PTR [edx+0x447c1376]
  41ef24:	or     bh,cl
  41ef26:	ret    
  41ef27:	sub    eax,0x794741c
  41ef2c:	pop    es
  41ef2d:	pop    ecx
  41ef2e:	pop    esp
  41ef2f:	add    edi,DWORD PTR [ebx-0x5b]
  41ef32:	jnp    0x41ef84
  41ef34:	mov    al,ds:0x7c83d179
  41ef39:	dec    ebx
  41ef3a:	adc    al,0xe9
  41ef3c:	mov    bl,0xf9
  41ef3e:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41ef40:	arpl   WORD PTR ds:0xe17c0d89,dx
  41ef46:	cli    
  41ef47:	int3   
  41ef48:	stos   BYTE PTR es:[edi],al
  41ef49:	inc    edi
  41ef4a:	test   BYTE PTR ds:0x9dfc15b,al
  41ef50:	in     al,0x65
  41ef52:	mov    al,0xb9
  41ef54:	xchg   edi,eax
  41ef55:	sub    al,0xa0
  41ef57:	push   ecx
  41ef58:	stc    
  41ef59:	adc    BYTE PTR [ebp-0x3c57c78],ah
  41ef5f:	push   eax
  41ef60:	pop    ecx
  41ef61:	repz xabort 0xed
  41ef65:	jge    0x41eef2
  41ef67:	mov    BYTE PTR [ebx-0x39],ah
  41ef6a:	jns    0x41efbf
  41ef6c:	imul   edi,DWORD PTR ds:0x8394ca3f,0xffffffb1
  41ef73:	mov    ds:0xeb3629a1,al
  41ef78:	and    cl,BYTE PTR [esi-0x6d]
  41ef7b:	into   
  41ef7c:	test   DWORD PTR [ebp+0x5654954d],esi
  41ef82:	mov    esi,0x4a6fbc49
  41ef87:	pusha  
  41ef88:	fst    QWORD PTR [esi+0x36f9761a]
  41ef8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef8f:	ret    0x7a20
  41ef92:	mov    bl,0x7a
  41ef94:	mov    ds:0x8727108f,eax
  41ef99:	xchg   ebp,eax
  41ef9a:	inc    eax
  41ef9b:	ret    0x9ece
  41ef9e:	sti    
  41ef9f:	mov    esp,0x2c7bcb02
  41efa4:	push   0xffffffb2
  41efa6:	mov    BYTE PTR [eax],ch
  41efa8:	mov    ebp,0xf29708e1
  41efad:	shl    DWORD PTR [edi],0x1e
  41efb0:	ins    DWORD PTR es:[edi],dx
  41efb1:	in     al,dx
  41efb2:	add    DWORD PTR [bp+di],0xeb045b5c
  41efb9:	add    DWORD PTR [edi+ecx*1-0x33],0x4b
  41efbe:	mov    cl,0xc0
  41efc0:	sub    DWORD PTR [ebp-0x49],edi
  41efc3:	lahf   
  41efc4:	aaa    
  41efc5:	inc    esi
  41efc6:	pop    eax
  41efc7:	push   ebx
  41efc8:	aad    0xdf
  41efca:	push   eax
  41efcb:	jmp    0x9162:0xdc7d9809
  41efd2:	repnz cmp BYTE PTR [edi],dh
  41efd5:	cli    
  41efd6:	repnz push cs
  41efd8:	scas   al,BYTE PTR es:[edi]
  41efd9:	test   bh,0xf0
  41efdc:	dec    edi
  41efdd:	out    dx,eax
  41efde:	and    DWORD PTR [esp+eiz*2+0x1e],ebx
  41efe2:	cmp    eax,0x4916d508
  41efe7:	cli    
  41efe8:	push   ecx
  41efe9:	in     eax,0x35
  41efeb:	rol    DWORD PTR [edx],1
  41efed:	mov    edx,esi
  41efef:	call   0x36ec:0x1f000feb
  41eff6:	push   esp
  41eff7:	js     0x41ef95
  41eff9:	mov    ah,0x89
  41effb:	repnz dec eax
  41effd:	lods   eax,DWORD PTR ds:[esi]
  41effe:	mov    ebx,0x8dc7fe1a
  41f003:	xor    ch,bl
  41f005:	js     0x41f00e
  41f007:	and    BYTE PTR [ebp-0x64],al
  41f00a:	inc    ebp
  41f00b:	repz jmp 0x7d3e1f05
  41f011:	in     eax,0x43
  41f013:	ror    ah,cl
  41f015:	shr    BYTE PTR [edi],1
  41f017:	or     eax,DWORD PTR [esi-0x60]
  41f01a:	inc    edi
  41f01b:	mov    cl,0xee
  41f01d:	data16 daa 
  41f01f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f020:	gs pushf 
  41f022:	hlt    
  41f023:	test   eax,0x82477e38
  41f028:	jbe    0x41f0a7
  41f02a:	je     0x41f06d
  41f02c:	pop    ds
  41f02d:	cmp    esp,DWORD PTR [esi]
  41f02f:	enter  0xcf6b,0xaf
  41f033:	sbb    al,0x2d
  41f035:	dec    esi
  41f036:	mov    esi,0xb56aa687
  41f03b:	mov    bl,0x3a
  41f03d:	mov    edi,0xbdbe5f83
  41f043:	scas   al,BYTE PTR es:[edi]
  41f044:	ret    
  41f045:	push   eax
  41f046:	ds jle 0x41f048
  41f049:	mov    esi,0xfe2997f
  41f04e:	and    eax,0x9b78c524
  41f053:	mov    eax,ds:0xd424f040
  41f058:	sbb    eax,0x30812860
  41f05d:	cmp    dl,dh
  41f05f:	sub    ah,ah
  41f061:	mov    edx,0xa54568a7
  41f066:	jle    0x41f0a2
  41f068:	dec    ebx
  41f069:	pop    esi
  41f06a:	enter  0x470a,0x33
  41f06e:	push   cs
  41f06f:	fwait
  41f070:	xchg   edi,eax
  41f071:	add    al,0xeb
  41f073:	cmp    DWORD PTR [edi],esp
  41f075:	mov    al,ds:0x1fc30d8c
  41f07a:	call   0x8129:0x2b0a6488
  41f081:	daa    
  41f082:	push   esi
  41f083:	cwde   
  41f084:	push   ss
  41f085:	mov    esi,0x89d1391b
  41f08a:	dec    edx
  41f08b:	arpl   WORD PTR [ebp+0x5d],bx
  41f08e:	mov    ecx,DWORD PTR [edi-0x1e]
  41f091:	mov    edi,0xb87b4f76
  41f096:	daa    
  41f097:	push   edx
  41f098:	add    dh,BYTE PTR [ebx+0x4a42bd6e]
  41f09e:	push   edx
  41f09f:	dec    ebx
  41f0a0:	cdq    
  41f0a1:	clc    
  41f0a2:	adc    esp,eax
  41f0a4:	add    al,0xea
  41f0a6:	hlt    
  41f0a7:	stos   DWORD PTR es:[edi],eax
  41f0a8:	inc    ecx
  41f0a9:	jmp    0xc769c8df
  41f0ae:	popf   
  41f0af:	pop    edx
  41f0b0:	and    eax,0x17a730e0
  41f0b5:	rcr    BYTE PTR [eax-0x5983d104],1
  41f0bb:	test   eax,0xfdc7cbbf
  41f0c0:	xlat   BYTE PTR ds:[ebx]
  41f0c1:	pop    ebp
  41f0c2:	test   BYTE PTR [ecx],0x84
  41f0c5:	in     eax,dx
  41f0c6:	and    al,0xbc
  41f0c8:	adc    dl,ah
  41f0ca:	push   0xc04c8232
  41f0cf:	es imul edi,eax,0xc04106
  41f0d6:	aad    0xcb
  41f0d8:	rcr    DWORD PTR [eax-0x52040294],1
  41f0de:	and    eax,0x911911cf
  41f0e3:	xchg   DWORD PTR [edi],eax
  41f0e5:	or     cl,BYTE PTR [ebp-0x586d2927]
  41f0eb:	call   0x1f7bda4d
  41f0f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0f1:	mov    ebx,0x14ee0cfb
  41f0f6:	add    ecx,DWORD PTR [ebp+0x7dec9d84]
  41f0fc:	mov    WORD PTR [edx-0x77],ss
  41f0ff:	lea    edx,[ecx+0x6d]
  41f102:	jl     0x41f178
  41f104:	mov    eax,ds:0x1830bc39
  41f109:	cmc    
  41f10a:	jns    0x41f143
  41f10c:	jg     0x41f0e4
  41f10e:	test   ebx,esi
  41f110:	fldcw  WORD PTR [edx]
  41f112:	or     bl,BYTE PTR [edx]
  41f114:	pop    edi
  41f115:	bound  esi,QWORD PTR [edx+ebp*1-0x5f]
  41f119:	jg     0x41f121
  41f11b:	(bad)  
  41f11c:	xor    al,0xd5
  41f11e:	or     ebp,DWORD PTR [edi+0x2a]
  41f121:	and    eax,0xdd298323
  41f126:	mov    bl,0xf9
  41f128:	jnp    0x41f19a
  41f12a:	ret    
  41f12b:	(bad)  
  41f12c:	dec    ebx
  41f12d:	and    al,0xa5
  41f12f:	xchg   esp,eax
  41f130:	sbb    ebx,DWORD PTR [edi+edx*4+0x69892d95]
  41f137:	or     ch,BYTE PTR [ebx]
  41f139:	outs   dx,DWORD PTR ds:[esi]
  41f13a:	or     bl,BYTE PTR [ebp+eax*1+0x6]
  41f13e:	stos   DWORD PTR es:[edi],eax
  41f13f:	enter  0xfb36,0x5f
  41f143:	loopne 0x41f127
  41f145:	cmp    al,0xfe
  41f147:	xor    ebp,DWORD PTR [eax-0x3a]
  41f14a:	add    eax,0x53c3e0b2
  41f14f:	(bad)  
  41f150:	xor    bl,BYTE PTR [eax-0x32]
  41f153:	dec    esi
  41f154:	jne    0x41f1b9
  41f156:	std    
  41f157:	ss retf 0xfc7c
  41f15b:	mov    ebp,0xb86af9a3
  41f160:	test   al,0xbb
  41f162:	mov    al,0x44
  41f164:	inc    edi
  41f165:	inc    edi
  41f166:	mov    bl,0xb2
  41f168:	(bad)  
  41f169:	dec    BYTE PTR [eax+0x22f66500]
  41f16f:	mov    esp,0xbf787968
  41f174:	rcr    DWORD PTR [esi+eax*2],1
  41f177:	(bad)  
  41f178:	cs jmp 0x1be2:0xf3e22708
  41f180:	fs cdq 
  41f182:	lea    edx,[eax+0x36]
  41f185:	and    eax,0x63c8cc9c
  41f18a:	dec    esi
  41f18b:	rcl    edx,0xac
  41f18e:	xchg   esi,eax
  41f18f:	inc    edi
  41f190:	or     DWORD PTR [esi+ebx*2],0xcf5de718
  41f197:	dec    esp
  41f198:	scas   eax,DWORD PTR es:[edi]
  41f199:	pusha  
  41f19a:	xchg   ebp,eax
  41f19b:	adc    edi,eax
  41f19d:	mov    esp,0xd4f17dc8
  41f1a2:	into   
  41f1a3:	lods   al,BYTE PTR ds:[esi]
  41f1a4:	std    
  41f1a5:	add    ah,dl
  41f1a7:	das    
  41f1a8:	fcom   DWORD PTR [eax-0x60]
  41f1ab:	dec    ecx
  41f1ac:	js     0x41f176
  41f1ae:	and    al,0x35
  41f1b0:	mov    eax,0x78f61b17
  41f1b5:	inc    edi
  41f1b6:	lahf   
  41f1b7:	cli    
  41f1b8:	(bad)  
  41f1b9:	xor    esp,edi
  41f1bb:	adc    BYTE PTR [ebx],dl
  41f1bd:	stos   DWORD PTR es:[edi],eax
  41f1be:	fwait
  41f1bf:	call   0x35033a14
  41f1c4:	int3   
  41f1c5:	mov    ecx,0x24e98ad3
  41f1ca:	adc    al,0x89
  41f1cc:	mov    cl,0x83
  41f1ce:	mov    al,ds:0xbc2da3fc
  41f1d3:	fadd   DWORD PTR [eax]
  41f1d5:	xor    DWORD PTR [edx-0x167b934b],ebx
  41f1db:	out    0x93,al
  41f1dd:	call   0x8f1a7a38
  41f1e2:	(bad)  
  41f1e3:	ffreep st(7)
  41f1e5:	stos   BYTE PTR es:[edi],al
  41f1e6:	loopne 0x41f1f8
  41f1e8:	sbb    edx,DWORD PTR [ebx+0x20808d81]
  41f1ee:	sbb    al,0xb2
  41f1f0:	std    
  41f1f1:	sub    edx,DWORD PTR ds:0x7d3d6ec5
  41f1f7:	not    ch
  41f1f9:	pop    ecx
  41f1fa:	inc    BYTE PTR [eax]
  41f1fc:	imul   ebx,DWORD PTR [edx],0x32
  41f1ff:	xor    DWORD PTR [eax],edx
  41f201:	vmovhpd xmm1,xmm7,QWORD PTR [ecx+0x1e]
  41f206:	and    al,0x46
  41f208:	jno    0x41f1e8
  41f20a:	xor    BYTE PTR [eax-0x72],dh
  41f20d:	fdivr  QWORD PTR [esi]
  41f20f:	out    0x40,al
  41f211:	push   0xffffff9a
  41f213:	dec    ebx
  41f214:	es out dx,eax
  41f216:	cld    
  41f217:	mov    edx,0x946d063
  41f21c:	bound  esi,QWORD PTR [esi+0x582b8671]
  41f222:	(bad)  
  41f223:	pushf  
  41f224:	jne    0x41f1a7
  41f226:	mov    esp,0xcb4afc
  41f22b:	xor    ebp,ecx
  41f22d:	popa   
  41f22e:	(bad)  
  41f22f:	int    0xee
  41f231:	(bad)  
  41f232:	mov    ah,0xfa
  41f234:	xor    eax,0x17a45da1
  41f239:	pushf  
  41f23a:	inc    ebp
  41f23b:	xor    eax,0x82afc270
  41f240:	mov    bh,0xdb
  41f242:	xor    DWORD PTR [ebx+0x30],ebx
  41f245:	call   0xd7284db1
  41f24a:	(bad)  
  41f24b:	cld    
  41f24c:	sti    
  41f24d:	les    eax,FWORD PTR [eax+eax*1-0x52f2ea63]
  41f254:	mov    al,0x4b
  41f256:	imul   al
  41f258:	xor    esi,DWORD PTR [edi-0x16d284e0]
  41f25e:	mov    esi,0x80bbde1b
  41f263:	mov    al,0x4f
  41f265:	push   cs
  41f266:	inc    eax
  41f267:	xor    BYTE PTR [ecx+0x5f],al
  41f26a:	or     esi,DWORD PTR [eax-0x49012a83]
  41f270:	or     eax,0x54d1cce8
  41f275:	enter  0x6c29,0x9f
  41f279:	in     eax,0x65
  41f27b:	lds    ebp,FWORD PTR [edx]
  41f27d:	sbb    BYTE PTR [ecx+ebp*1+0x0],dl
  41f281:	sbb    DWORD PTR [esi+0x5c],ecx
  41f284:	mov    esi,0x57275556
  41f289:	ja     0x41f29b
  41f28b:	or     BYTE PTR [ecx+0x5cde0d4c],ch
  41f291:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f292:	xor    edi,eax
  41f294:	ds gs push edi
  41f297:	rcr    DWORD PTR [esi-0x75237d95],0x4e
  41f29e:	sub    eax,0x3965c638
  41f2a3:	push   esi
  41f2a4:	adc    DWORD PTR [eax+0x1928a767],0x2b
  41f2ab:	fwait
  41f2ac:	mov    bl,0xfd
  41f2ae:	push   cs
  41f2af:	icebp  
  41f2b0:	imul   esp,DWORD PTR [edi+0x5f],0x865b04b7
  41f2b7:	add    ebx,eax
  41f2b9:	(bad)  
  41f2bb:	mov    ah,0xf2
  41f2bd:	test   al,0x95
  41f2bf:	sbb    BYTE PTR [esi],al
  41f2c1:	mov    dh,0xb3
  41f2c3:	rcl    BYTE PTR [eax],0x6a
  41f2c6:	sbb    bl,bl
  41f2c8:	(bad)  
  41f2c9:	pop    ebx
  41f2ca:	fidivr DWORD PTR [esi-0x43]
  41f2cd:	mov    ebx,0xf9838a40
  41f2d2:	push   ecx
  41f2d3:	divps  xmm3,XMMWORD PTR [eax-0x5b]
  41f2d7:	rol    DWORD PTR [edi+0x2857666a],cl
  41f2dd:	add    ah,BYTE PTR [ebp+0x4d917793]
  41f2e3:	and    BYTE PTR [edx+0x5758f244],dh
  41f2e9:	sbb    ecx,DWORD PTR [esi+0x395e591c]
  41f2ef:	je     0x41f339
  41f2f1:	mov    eax,0x29e5fa28
  41f2f6:	jnp    0x41f2dc
  41f2f8:	sbb    eax,0xa9853a52
  41f2fd:	cmp    dl,ch
  41f2ff:	jecxz  0x41f28c
  41f301:	lods   al,BYTE PTR ds:[esi]
  41f302:	dec    eax
  41f303:	mov    ds:0xb31a868d,eax
  41f308:	das    
  41f309:	out    dx,al
  41f30a:	sti    
  41f30b:	xchg   esi,eax
  41f30c:	and    al,0x3b
  41f30e:	shl    ebx,cl
  41f310:	jg     0x41f2eb
  41f312:	and    al,BYTE PTR [esi]
  41f314:	pop    eax
  41f315:	mov    bl,0xb2
  41f317:	icebp  
  41f318:	jns    0x41f2ee
  41f31a:	cli    
  41f31b:	test   eax,0x27ae929f
  41f320:	dec    esp
  41f321:	leave  
  41f322:	mov    edi,0x14c6349a
  41f327:	std    
  41f328:	fldenv [eax+0x2a]
  41f32b:	ss fneni(8087 only) 
  41f32e:	sbb    al,0x2e
  41f330:	mov    ds:0xa37aa633,al
  41f335:	nop
  41f336:	dec    esi
  41f337:	dec    esp
  41f338:	jbe    0x41f364
  41f33a:	adc    al,0xa1
  41f33c:	js     0x41f2c6
  41f33e:	xor    dl,al
  41f340:	xchg   edi,eax
  41f341:	lahf   
  41f342:	mul    BYTE PTR [esi+0x58]
  41f345:	mov    bl,0xa7
  41f347:	cdq    
  41f348:	push   esp
  41f349:	aas    
  41f34a:	dec    ecx
  41f34b:	mov    cl,0x26
  41f34d:	xlat   BYTE PTR ds:[ebx]
  41f34e:	ret    
  41f34f:	xchg   DWORD PTR [eax+0x66],esi
  41f352:	popa   
  41f353:	mov    ebx,0xf5ae39d8
  41f358:	outs   dx,DWORD PTR ds:[esi]
  41f359:	xchg   ebp,eax
  41f35a:	mov    edx,gs
  41f35c:	test   eax,0xc10970d9
  41f361:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f362:	dec    eax
  41f363:	stos   BYTE PTR es:[edi],al
  41f364:	add    eax,0x505b6bcc
  41f369:	xor    bl,bl
  41f36b:	inc    eax
  41f36c:	lock shr BYTE PTR [edx+0x4e],1
  41f370:	mov    ah,0x15
  41f372:	(bad)
  41f375:	fisubr WORD PTR [esi-0x40]
  41f378:	mov    ecx,0x75750316
  41f37d:	pop    ebx
  41f37e:	lahf   
  41f37f:	mov    esi,0xc25e9ae9
  41f384:	push   cs
  41f385:	sub    DWORD PTR [esi+0x1e],0xfffffff0
  41f389:	scas   eax,DWORD PTR es:[edi]
  41f38a:	mov    eax,ds:0x92fe41cb
  41f38f:	(bad)  
  41f391:	and    eax,esp
  41f393:	sbb    DWORD PTR [ebp+0x42c03957],edi
  41f399:	fild   QWORD PTR [eax+0x5]
  41f39c:	adc    eax,0x7211ccf6
  41f3a1:	pushf  
  41f3a2:	rcl    DWORD PTR ds:0xfe80e429,0xc8
  41f3a9:	popa   
  41f3aa:	or     eax,DWORD PTR ds:0xf2a09a74
  41f3b0:	jmp    0xe59dbbf5
  41f3b5:	inc    ecx
  41f3b6:	add    eax,0x3414d8a6
  41f3bb:	mov    ah,0xc4
  41f3bd:	dec    ebp
  41f3be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3bf:	or     al,0x57
  41f3c1:	fisubr WORD PTR [esp+ebp*1-0xa]
  41f3c5:	ja     0x41f442
  41f3c7:	or     ebp,esi
  41f3c9:	xchg   BYTE PTR [eax+eiz*1-0x22],bl
  41f3cd:	cmp    DWORD PTR [ecx],esi
  41f3cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3d1:	pop    eax
  41f3d2:	sbb    al,0x4f
  41f3d4:	jecxz  0x41f426
  41f3d6:	xchg   BYTE PTR [eax-0x358c5ef3],ah
  41f3dc:	fisubr WORD PTR [eax+0x74]
  41f3df:	add    al,0xbc
  41f3e1:	int3   
  41f3e2:	cli    
  41f3e3:	sub    ch,BYTE PTR [edx+ebx*4+0x79f32bc3]
  41f3ea:	outs   dx,BYTE PTR ds:[esi]
  41f3eb:	hlt    
  41f3ec:	mov    esi,DWORD PTR [edi-0x23]
  41f3ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f3f0:	in     eax,dx
  41f3f1:	repz aad 0x26
  41f3f4:	fstp   TBYTE PTR [esi+edi*2]
  41f3f7:	in     eax,dx
  41f3f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3f9:	adc    eax,0xcba250ab
  41f3fe:	fisub  WORD PTR [ebx+0x3113cf79]
  41f404:	add    edx,DWORD PTR [ecx+edx*2+0x44ffa768]
  41f40b:	jg     0x41f47d
  41f40d:	out    0xbf,eax
  41f40f:	(bad)  
  41f410:	jle    0x41f458
  41f412:	push   ds
  41f413:	cmp    esp,DWORD PTR [ecx-0x5e]
  41f416:	sub    BYTE PTR [ebx],al
  41f418:	and    al,0x72
  41f41a:	mov    ds:0x85caa3b5,eax
  41f41f:	cmp    al,0x28
  41f421:	inc    ebp
  41f422:	inc    ecx
  41f423:	rcl    DWORD PTR ds:0x6edb243,cl
  41f429:	push   edx
  41f42a:	or     ebx,esp
  41f42c:	nop
  41f42d:	push   cs
  41f42e:	int3   
  41f42f:	pop    ds
  41f430:	(bad)  [eax+0x663d547e]
  41f436:	(bad)  
  41f437:	sub    BYTE PTR [edx-0x72],ch
  41f43a:	lea    ecx,[edx]
  41f43c:	daa    
  41f43d:	lds    edx,FWORD PTR [ebp-0x50298d10]
  41f443:	mov    ds:0xb1aff02e,eax
  41f448:	call   0xa877cdc6
  41f44d:	hlt    
  41f44e:	enter  0x7e6,0xf7
  41f452:	pop    edx
  41f453:	retf   
  41f454:	hlt    
  41f455:	jecxz  0x41f440
  41f457:	lods   eax,DWORD PTR ds:[esi]
  41f458:	fdiv   st,st(4)
  41f45a:	jmp    0xdf8c9331
  41f45f:	pushf  
  41f460:	nop
  41f461:	stos   DWORD PTR es:[edi],eax
  41f462:	addr16 int 0xe8
  41f465:	arpl   WORD PTR [edx-0x421fae72],si
  41f46b:	pop    esi
  41f46c:	and    eax,0xc0bfc404
  41f471:	cmp    edx,DWORD PTR [ebp-0x31]
  41f474:	icebp  
  41f475:	pop    esi
  41f476:	rcr    BYTE PTR [ecx+0x6e208fcf],0x72
  41f47d:	add    BYTE PTR [ebp+0x33],ch
  41f480:	adc    edi,ecx
  41f482:	ins    BYTE PTR es:[edi],dx
  41f483:	mov    dl,0x79
  41f485:	inc    edi
  41f486:	out    0xbb,eax
  41f488:	sbb    esp,DWORD PTR [esi+0x4f2159b3]
  41f48e:	jbe    0x41f4f7
  41f490:	loop   0x41f421
  41f492:	add    DWORD PTR [edx+edx*2],esp
  41f495:	cli    
  41f496:	neg    esp
  41f498:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f499:	outs   dx,BYTE PTR ds:[esi]
  41f49a:	out    dx,al
  41f49b:	mov    al,ds:0x62fdc271
  41f4a0:	add    al,0xaa
  41f4a2:	push   ebp
  41f4a3:	mov    BYTE PTR [esi],0x5a
  41f4a6:	mov    esi,0x8917ac8
  41f4ab:	lock inc esp
  41f4ad:	jae    0x41f493
  41f4af:	and    bh,bh
  41f4b1:	pop    edi
  41f4b2:	call   0xea6b5717
  41f4b7:	leave  
  41f4b8:	dec    ebx
  41f4b9:	ins    BYTE PTR es:[edi],dx
  41f4ba:	adc    DWORD PTR [ebp-0x6181931c],eax
  41f4c0:	out    dx,eax
  41f4c1:	pop    ebp
  41f4c2:	fidiv  DWORD PTR [ebp+0x6d571a12]
  41f4c8:	lods   eax,DWORD PTR ds:[esi]
  41f4c9:	mov    esi,DWORD PTR [ecx+0x46bca905]
  41f4cf:	les    ecx,FWORD PTR [eax-0x5a37e758]
  41f4d5:	outs   dx,BYTE PTR ds:[esi]
  41f4d6:	xor    eax,0xbe33b66f
  41f4db:	sbb    DWORD PTR [edi-0x5b],ebp
  41f4de:	pop    esi
  41f4df:	xchg   edx,eax
  41f4e0:	push   cs
  41f4e1:	inc    esi
  41f4e2:	dec    BYTE PTR [ebp+0x61]
  41f4e5:	and    al,0x6c
  41f4e7:	loopne 0x41f562
  41f4e9:	outs   dx,DWORD PTR ds:[esi]
  41f4ea:	inc    esp
  41f4eb:	outs   dx,DWORD PTR ds:[esi]
  41f4ec:	(bad)  
  41f4ed:	and    eax,0xb44c37d9
  41f4f2:	in     eax,0x69
  41f4f4:	mov    esp,0x514188a7
  41f4f9:	push   cs
  41f4fa:	inc    ecx
  41f4fb:	push   ecx
  41f4fc:	xchg   edx,eax
  41f4fd:	out    0x1,eax
  41f4ff:	dec    edi
  41f500:	cmc    
  41f501:	mov    BYTE PTR [ebx],al
  41f503:	sub    DWORD PTR ds:0xf3eef394,ebx
  41f509:	sbb    DWORD PTR [esi+0x6b262b2d],ebp
  41f50f:	pusha  
  41f510:	gs xchg esi,eax
  41f512:	scas   al,BYTE PTR es:[edi]
  41f513:	cld    
  41f514:	outs   dx,BYTE PTR ds:[esi]
  41f515:	ins    DWORD PTR es:[edi],dx
  41f516:	and    edx,DWORD PTR [edi+0x2df93abd]
  41f51c:	mov    dl,0x87
  41f51e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f51f:	imul   esp,DWORD PTR [eax-0x64],0x6b7b2a7f
  41f526:	inc    edx
  41f527:	(bad)  
  41f528:	xchg   ecx,eax
  41f529:	sbb    BYTE PTR [ebx-0x31],dh
  41f52c:	sbb    ah,BYTE PTR [eax+eiz*8]
  41f52f:	pop    es
  41f530:	in     eax,dx
  41f531:	sub    DWORD PTR [ebp+eiz*4+0x4ce8e529],ecx
  41f538:	add    DWORD PTR [edi+0x76],ebx
  41f53b:	ret    0x8934
  41f53e:	scas   eax,DWORD PTR es:[edi]
  41f53f:	loope  0x41f4c9
  41f541:	popa   
  41f542:	cwde   
  41f543:	sti    
  41f544:	xchg   edx,eax
  41f545:	pop    ss
  41f546:	mov    esi,0xc48c3635
  41f54b:	ins    BYTE PTR es:[edi],dx
  41f54c:	out    0x6d,al
  41f54e:	pop    esi
  41f54f:	call   0x775a:0xb87fc927
  41f556:	pop    esp
  41f557:	cld    
  41f558:	add    BYTE PTR [ebp+0x13],0x78
  41f55c:	dec    ecx
  41f55d:	inc    ebp
  41f55e:	out    dx,eax
  41f55f:	cs je  0x41f595
  41f562:	ficomp WORD PTR [edi-0x6025bdc7]
  41f568:	xor    ah,BYTE PTR [ebp+0x5]
  41f56b:	xor    edx,DWORD PTR [ecx-0x46]
  41f56e:	outs   dx,BYTE PTR ds:[esi]
  41f56f:	fdivr  QWORD PTR [edi+0xc252749]
  41f575:	inc    esi
  41f576:	ror    DWORD PTR [ecx],0x85
  41f579:	inc    BYTE PTR [edx+0x33506d14]
  41f57f:	mov    ds:0x76ac8327,al
  41f584:	push   ebp
  41f585:	push   es
  41f586:	sub    ebx,edx
  41f588:	xor    al,0x87
  41f58a:	mov    WORD PTR [ebx-0x5855220b],es
  41f590:	xchg   edx,eax
  41f591:	dec    ecx
  41f592:	fistp  QWORD PTR ds:0x34b2b2dd
  41f598:	std    
  41f599:	mov    esp,0xeef46f99
  41f59e:	int3   
  41f59f:	test   esi,ebx
  41f5a1:	xchg   esp,eax
  41f5a2:	mov    fs:0x6f58867d,al
  41f5a8:	fist   WORD PTR ds:0xc0b607b9
  41f5af:	test   al,0x28
  41f5b1:	outs   dx,DWORD PTR ds:[esi]
  41f5b2:	mov    ebx,0x536d02f9
  41f5b7:	add    cl,ch
  41f5b9:	(bad)  
  41f5ba:	je     0x41f5a6
  41f5bc:	fisttp WORD PTR [ebp-0x6a]
  41f5bf:	stos   DWORD PTR es:[edi],eax
  41f5c0:	sbb    al,0x23
  41f5c2:	cdq    
  41f5c3:	jmp    0x917d:0xfa104c94
  41f5ca:	sbb    eax,0x5e100cb6
  41f5cf:	or     al,0xf6
  41f5d1:	fdiv   QWORD PTR [edx]
  41f5d3:	sub    DWORD PTR [ecx-0x7e],esi
  41f5d6:	gs mov ecx,0x45fadfd3
  41f5dc:	xor    al,0xa0
  41f5de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f5df:	pop    ss
  41f5e0:	ret    
  41f5e1:	add    eax,0x38cd033
  41f5e6:	fucompp 
  41f5e8:	inc    esi
  41f5e9:	pop    eax
  41f5ea:	ror    bl,0x16
  41f5ed:	das    
  41f5ee:	hlt    
  41f5ef:	mov    WORD PTR [edi+0x77],?
  41f5f2:	in     eax,dx
  41f5f3:	retf   
  41f5f4:	cli    
  41f5f5:	sbb    al,0xa6
  41f5f7:	fs cli 
  41f5f9:	adc    eax,0xfb6988c0
  41f5fe:	arpl   WORD PTR [eax],cx
  41f600:	and    DWORD PTR [ebp+0x276a8599],0xffffffdf
  41f607:	fistp  QWORD PTR [ebp-0x2a]
  41f60a:	pop    ebx
  41f60b:	into   
  41f60c:	adc    al,0x5c
  41f60e:	xchg   edx,eax
  41f60f:	(bad)  
  41f610:	scas   al,BYTE PTR es:[edi]
  41f611:	rol    BYTE PTR [eax],cl
  41f613:	pushf  
  41f614:	pushf  
  41f615:	stc    
  41f616:	jge    0x41f5bf
  41f618:	dec    ebp
  41f619:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f61a:	call   0xc0bc:0x445af2ce
  41f621:	mov    BYTE PTR [edi],0x90
  41f624:	outs   dx,BYTE PTR ds:[esi]
  41f625:	scas   al,BYTE PTR es:[edi]
  41f626:	or     dh,ah
  41f628:	adc    DWORD PTR [edi-0x72],esi
  41f62b:	rol    ah,cl
  41f62d:	into   
  41f62e:	loope  0x41f5cc
  41f630:	cmp    BYTE PTR [ebp-0x2ae84197],dh
  41f636:	fdivr  DWORD PTR [ebx+edi*2]
  41f639:	push   eax
  41f63a:	mov    ecx,0xf21d189d
  41f63f:	xor    edi,DWORD PTR ds:[ebx+ecx*4-0x53]
  41f644:	dec    bp
  41f646:	pop    es
  41f647:	sbb    DWORD PTR [eax],eax
  41f649:	and    BYTE PTR [esi+ebx*2],dh
  41f64c:	clc    
  41f64d:	sbb    BYTE PTR [ecx-0x665e52be],dh
  41f653:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f654:	push   0xffffffe8
  41f656:	es mov dl,0x51
  41f659:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f65a:	inc    esi
  41f65b:	cs jne 0x41f65f
  41f65e:	or     DWORD PTR [edi],esp
  41f660:	ins    BYTE PTR es:[edi],dx
  41f661:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f662:	shl    esp,1
  41f664:	push   ds
  41f665:	adc    al,0x1f
  41f667:	cdq    
  41f668:	jle    0x41f68a
  41f66a:	dec    ebx
  41f66b:	cwde   
  41f66c:	not    DWORD PTR [esi]
  41f66e:	cdq    
  41f66f:	mov    ah,BYTE PTR [edi+eax*1-0x2b]
  41f673:	(bad)  
  41f674:	hlt    
  41f675:	popa   
  41f676:	and    al,0xd
  41f678:	inc    esi
  41f679:	pop    ebp
  41f67a:	(bad)  
  41f67b:	(bad)  
  41f67c:	cmp    al,0x49
  41f67e:	push   edi
  41f67f:	sub    eax,0xb75b9b9
  41f684:	jmp    DWORD PTR [eax-0x5e]
  41f687:	push   esi
  41f688:	fs pop esp
  41f68a:	pusha  
  41f68b:	hlt    
  41f68c:	aaa    
  41f68d:	outs   dx,BYTE PTR ds:[esi]
  41f68e:	cmp    bh,cl
  41f690:	outs   dx,BYTE PTR fs:[esi]
  41f692:	loope  0x41f6af
  41f694:	mov    ecx,0xec11f17c
  41f699:	pusha  
  41f69a:	(bad)  
  41f69b:	cmp    ah,BYTE PTR ds:0x399f362e
  41f6a1:	mov    ebp,DWORD PTR [edi-0x2d]
  41f6a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6a5:	into   
  41f6a6:	sbb    edi,DWORD PTR [ecx-0x5a486380]
  41f6ac:	daa    
  41f6ad:	push   ecx
  41f6ae:	push   es
  41f6af:	popa   
  41f6b0:	or     BYTE PTR [esi-0x36],0xea
  41f6b4:	in     eax,dx
  41f6b5:	shr    BYTE PTR [edi+esi*4-0x56da6cfe],cl
  41f6bc:	sub    eax,0x1bb23331
  41f6c1:	ret    0x70ba
  41f6c4:	push   cs
  41f6c5:	pop    esi
  41f6c6:	mov    dl,BYTE PTR [edx-0x77653dcc]
  41f6cc:	stos   BYTE PTR es:[edi],al
  41f6cd:	or     edx,DWORD PTR [edi]
  41f6cf:	test   DWORD PTR cs:[edi-0x277003a9],ebx
  41f6d6:	pop    ss
  41f6d7:	sub    BYTE PTR [eax+0x7759f1fb],bl
  41f6dd:	gs fwait
  41f6df:	sub    eax,0xa4ad0c4f
  41f6e4:	addr16 inc ebp
  41f6e6:	pusha  
  41f6e7:	push   0xffffffea
  41f6e9:	(bad)  
  41f6ea:	jle    0x41f717
  41f6ec:	or     esp,esi
  41f6ee:	xor    BYTE PTR [ebx+0x5c],bh
  41f6f1:	(bad)  
  41f6f2:	shl    esi,cl
  41f6f4:	enter  0xc0b2,0x9e
  41f6f8:	push   0x43
  41f6fa:	sbb    al,0xe8
  41f6fd:	enter  0x4d04,0x9a
  41f701:	into   
  41f702:	jbe    0x41f70d
  41f704:	or     eax,0x784f9d8c
  41f709:	inc    eax
  41f70a:	iret   
  41f70b:	mov    dl,0x34
  41f70d:	inc    eax
  41f70e:	in     al,0x47
  41f710:	and    al,0xb2
  41f712:	pop    ss
  41f713:	jae    0x41f6fc
  41f715:	gs repz xchg edi,eax
  41f718:	in     eax,0x8f
  41f71a:	int3   
  41f71b:	pop    ecx
  41f71c:	out    0xa4,eax
  41f71e:	or     eax,esi
  41f720:	ins    DWORD PTR es:[edi],dx
  41f721:	mov    edi,0x44de02ca
  41f726:	xchg   ecx,eax
  41f727:	push   cs
  41f728:	mov    ds:0x772159e8,al
  41f72d:	add    al,BYTE PTR [eax+0x62]
  41f730:	xor    eax,0x60dc474a
  41f735:	fisttp QWORD PTR [esi+0x3c]
  41f738:	lods   eax,DWORD PTR ds:[esi]
  41f739:	xor    BYTE PTR [edx+0x7254099b],0x15
  41f740:	jmp    0x41f77d
  41f742:	aad    0x89
  41f744:	cs xchg ebp,eax
  41f746:	mov    edi,0xd520b74c
  41f74b:	and    esi,ecx
  41f74d:	xor    edx,DWORD PTR [esi+ebx*2-0x2c]
  41f751:	test   al,0x3d
  41f753:	retf   
  41f754:	add    dh,BYTE PTR [edx]
  41f756:	cmp    al,0xd
  41f758:	outs   dx,DWORD PTR ds:[esi]
  41f759:	arpl   bx,bp
  41f75b:	rcl    ecx,1
  41f75d:	xchg   edi,eax
  41f75e:	loope  0x41f722
  41f760:	imul   edx,DWORD PTR [esi*8-0x391086bf],0xb8852316
  41f76b:	test   eax,0x89c491cc
  41f770:	mov    ch,0xe3
  41f772:	lock ret 0x1bc2
  41f776:	inc    edi
  41f777:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f778:	fist   DWORD PTR [edx]
  41f77a:	xor    eax,0x9533b899
  41f77f:	mov    edi,0xa517c636
  41f784:	inc    edi
  41f785:	les    edi,FWORD PTR [esi-0x56]
  41f788:	pop    ebp
  41f789:	add    eax,0x28755067
  41f78e:	inc    ecx
  41f78f:	and    eax,0x937cec5a
  41f794:	mov    bh,0x10
  41f796:	cmp    bh,cl
  41f798:	fisttp WORD PTR [edx+0x81fa88]
  41f79e:	push   edi
  41f79f:	ret    0xac36
  41f7a2:	das    
  41f7a3:	jmp    0x41f7b5
  41f7a5:	stos   DWORD PTR es:[edi],eax
  41f7a6:	jnp    0x41f74b
  41f7a8:	jnp    0x41f746
  41f7aa:	mov    eax,0xdd44f351
  41f7af:	pop    esi
  41f7b0:	ret    
  41f7b1:	out    dx,eax
  41f7b2:	push   0x18
  41f7b4:	adc    eax,0x62502b19
  41f7b9:	jle    0x41f7bc
  41f7bb:	add    dh,BYTE PTR [edi]
  41f7bd:	iret   
  41f7be:	jmp    0x40a7ff44
  41f7c3:	xchg   edx,eax
  41f7c4:	fisttp WORD PTR [ecx-0x295e1d00]
  41f7ca:	cmp    eax,0x4cf9fe20
  41f7cf:	cmp    al,0xcd
  41f7d1:	cmp    BYTE PTR [eax+0x6d],ah
  41f7d4:	mov    dl,BYTE PTR [edx-0x67]
  41f7d7:	sub    esp,ebp
  41f7d9:	pop    eax
  41f7da:	jp     0x41f7a4
  41f7dc:	stos   DWORD PTR es:[edi],eax
  41f7dd:	mov    edx,0x7352cd1b
  41f7e2:	ss icebp 
  41f7e4:	sub    edx,DWORD PTR [edi+0x7c]
  41f7e7:	xlat   BYTE PTR ds:[ebx]
  41f7e8:	loope  0x41f856
  41f7ea:	push   ecx
  41f7eb:	xor    dh,BYTE PTR [esi-0x3aebbf0e]
  41f7f1:	test   ebp,ecx
  41f7f3:	xor    BYTE PTR [edi+edx*2+0x7a],bh
  41f7f7:	sbb    ebp,DWORD PTR [edx-0x7c]
  41f7fa:	sub    bl,BYTE PTR [ebx]
  41f7fc:	test   DWORD PTR ds:0x59b01829,esi
  41f802:	sbb    eax,0x9f5ac5aa
  41f807:	push   eax
  41f808:	xchg   BYTE PTR [edi-0x38],dh
  41f80b:	fild   QWORD PTR [edi+0x40]
  41f80e:	sub    ch,ch
  41f810:	mov    ds:0x25e57404,eax
  41f815:	jp     0x41f82d
  41f817:	jb     0x41f7a4
  41f819:	jmp    0x6504:0xf2035c0b
  41f820:	inc    edx
  41f821:	push   DWORD PTR [esi+0xe]
  41f824:	jbe    0x41f87f
  41f826:	jle    0x41f89f
  41f828:	and    BYTE PTR [ebx],cl
  41f82a:	inc    edx
  41f82b:	dec    ecx
  41f82c:	jb     0x41f801
  41f82e:	inc    ebx
  41f82f:	idiv   BYTE PTR [edi-0x5c2205e0]
  41f835:	(bad)  
  41f837:	cs xchg ebx,eax
  41f839:	sahf   
  41f83a:	mov    WORD PTR [ebp+0x23],cs
  41f83d:	aaa    
  41f83e:	jnp    0x41f87f
  41f840:	pushf  
  41f841:	push   ecx
  41f842:	lahf   
  41f843:	mov    ds:0xaf24bf4b,al
  41f848:	push   0xf2a50381
  41f84d:	sub    esp,DWORD PTR ds:0x5db659b6
  41f853:	jmp    0x61264180
  41f858:	mov    ah,0xf
  41f85a:	imul   esp,DWORD PTR [esi+eax*8-0x66],0x37
  41f85f:	out    dx,al
  41f860:	into   
  41f861:	sub    bl,BYTE PTR [ebx]
  41f863:	repnz mov esi,0x16370f8d
  41f869:	aad    0x4
  41f86b:	jmp    0x4b0e0795
  41f870:	cmp    dh,dh
  41f872:	shl    BYTE PTR [edx+0x1213bc3b],cl
  41f878:	xor    DWORD PTR [eax+ebp*4],0x47
  41f87c:	dec    ebp
  41f87d:	icebp  
  41f87e:	fistp  WORD PTR [ebx]
  41f880:	cmp    eax,0xcc42a0ef
  41f885:	push   ss
  41f886:	mov    bh,0x34
  41f888:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f889:	out    0xbf,al
  41f88b:	cwde   
  41f88c:	test   DWORD PTR [edi+0x61],edi
  41f88f:	fwait
  41f890:	shl    DWORD PTR [esi+0xf643a5e],0x8c
  41f897:	or     al,0x6c
  41f899:	mov    esp,0xd34f64b0
  41f89e:	xchg   DWORD PTR [esi],edx
  41f8a0:	jmp    0xbff60c22
  41f8a5:	pushf  
  41f8a6:	or     al,0x39
  41f8a8:	mov    al,0xe2
  41f8aa:	mov    eax,0xb4e8ea78
  41f8af:	shl    DWORD PTR [ecx],1
  41f8b1:	xchg   edx,eax
  41f8b2:	dec    esp
  41f8b3:	xor    cl,al
  41f8b5:	jbe    0x41f921
  41f8b7:	arpl   WORD PTR [ebx+edi*8-0x36],sp
  41f8bb:	dec    eax
  41f8bc:	push   edi
  41f8bd:	(bad)  
  41f8be:	stc    
  41f8bf:	daa    
  41f8c0:	int    0xf1
  41f8c2:	(bad)  
  41f8c4:	xchg   edi,eax
  41f8c5:	imul   esi,DWORD PTR [eax-0x4f415983],0xddc85679
  41f8cf:	or     dl,BYTE PTR ds:0x62a30797
  41f8d5:	test   eax,0xf1a2a905
  41f8da:	inc    esi
  41f8db:	xor    eax,0x5d50a761
  41f8e0:	xor    ecx,edx
  41f8e2:	ret    0xbb97
  41f8e5:	mov    ah,0xa3
  41f8e7:	and    eax,DWORD PTR [eax+0x756daacd]
  41f8ed:	xor    DWORD PTR [ecx],ebp
  41f8ef:	mov    esp,0xfa045a86
  41f8f4:	push   es
  41f8f5:	iret   
  41f8f6:	mov    bl,0x4e
  41f8f8:	and    BYTE PTR [ebx-0x73],dh
  41f8fb:	sub    al,0xcb
  41f8fd:	jmp    0x7e19:0x6309bc3d
  41f904:	push   ss
  41f905:	mov    DWORD PTR [edi+0x49df11ea],edi
  41f90b:	and    al,0xff
  41f90d:	xlat   BYTE PTR ds:[ebx]
  41f90e:	sahf   
  41f90f:	fmul   QWORD PTR [edx]
  41f911:	test   al,0xe5
  41f913:	cmp    eax,0x483379a6
  41f918:	pop    es
  41f919:	mov    eax,0x94fcabcd
  41f91e:	xchg   DWORD PTR [esi-0x55],esp
  41f921:	pop    ebx
  41f922:	sub    BYTE PTR [ebx],0xb
  41f925:	faddp  st(2),st
  41f927:	push   ds
  41f928:	loope  0x41f98a
  41f92a:	sahf   
  41f92b:	mov    al,0x29
  41f92d:	ret    0x520a
  41f930:	and    al,0x25
  41f932:	or     eax,0x54d6e9e0
  41f937:	jne    0x41f9a5
  41f939:	retf   0xa83
  41f93c:	ret    0x6f87
  41f93f:	sbb    eax,0x9dbd28cf
  41f944:	ret    
  41f945:	jecxz  0x41f93f
  41f947:	ret    
  41f948:	push   ss
  41f949:	dec    ebx
  41f94a:	sbb    DWORD PTR [eax],edx
  41f94c:	or     DWORD PTR [edi],esi
  41f94e:	mov    ah,0xf2
  41f950:	push   esp
  41f951:	mov    WORD PTR [ebx-0x1],gs
  41f954:	retf   0x1a1b
  41f957:	ss jno 0x41f93a
  41f95a:	dec    edx
  41f95b:	jmp    FWORD PTR [edi-0x2da06cf8]
  41f961:	test   bl,dh
  41f963:	clc    
  41f964:	pop    ss
  41f965:	ds loope 0x41f975
  41f968:	jmp    0xd001751f
  41f96d:	inc    edi
  41f96e:	mov    al,ds:0xa4a21932
  41f973:	cmp    esi,DWORD PTR [ebx-0x13]
  41f976:	sti    
  41f977:	pop    eax
  41f978:	adc    al,0x8b
  41f97a:	pop    edx
  41f97b:	mov    bh,0x8a
  41f97d:	fmul   QWORD PTR [ecx]
  41f97f:	out    dx,eax
  41f980:	xlat   BYTE PTR ds:[ebx]
  41f981:	addr16 mov ah,0x6c
  41f984:	out    dx,eax
  41f985:	in     al,dx
  41f986:	inc    edx
  41f987:	adc    BYTE PTR [ecx+eax*4-0x36e790a8],0xa4
  41f98f:	scas   al,BYTE PTR es:[edi]
  41f990:	adc    eax,0x25d87893
  41f995:	fs xchg edi,eax
  41f997:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f998:	(bad)  
  41f999:	aam    0x3a
  41f99b:	cmc    
  41f99c:	dec    edx
  41f99d:	or     cl,BYTE PTR [eax]
  41f99f:	shl    DWORD PTR [eax],1
  41f9a1:	stc    
  41f9a2:	add    esp,DWORD PTR [edi-0x66efdf3e]
  41f9a8:	dec    ebp
  41f9a9:	ror    BYTE PTR [edx-0x34],1
  41f9ac:	inc    ebx
  41f9ad:	push   edx
  41f9ae:	ja     0x41f9a2
  41f9b0:	push   es
  41f9b1:	cmp    BYTE PTR [ecx],al
  41f9b3:	cwde   
  41f9b4:	sbb    eax,0xb19de4c3
  41f9b9:	xor    ebp,0xffffffa3
  41f9bc:	call   0xed3b13de
  41f9c1:	(bad)  
  41f9c2:	loop   0x41f999
  41f9c4:	mov    eax,0xbfc86a39
  41f9c9:	cdq    
  41f9ca:	in     eax,dx
  41f9cb:	jns    0x41fa25
  41f9cd:	jno    0x41f9fc
  41f9cf:	or     BYTE PTR [esi+0x5b],0xdd
  41f9d3:	mov    ah,0x27
  41f9d5:	(bad)  
  41f9d6:	mov    eax,0xbcea5304
  41f9db:	test   eax,0x5986eb88
  41f9e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9e1:	inc    ebp
  41f9e2:	sub    al,0xbc
  41f9e4:	loope  0x41f976
  41f9e6:	inc    edx
  41f9e7:	xchg   esi,eax
  41f9e8:	js     0x41fa62
  41f9ea:	pop    esi
  41f9eb:	push   es
  41f9ec:	(bad)  
  41f9ed:	push   esp
  41f9ee:	cmp    eax,0x1ac5a255
  41f9f4:	scas   eax,DWORD PTR es:[edi]
  41f9f5:	jb     0x41fa4a
  41f9f7:	jle    0x41f98a
  41f9f9:	sahf   
  41f9fa:	cmp    al,0xf2
  41f9fc:	xchg   DWORD PTR [edx+ecx*4-0x56777176],esi
  41fa03:	out    dx,eax
  41fa04:	xor    al,0xe0
  41fa06:	cs or  al,0xd9
  41fa09:	ret    
  41fa0a:	add    al,0x5f
  41fa0c:	sbb    eax,DWORD PTR [ecx]
  41fa0e:	mov    ebp,0x865073c1
  41fa13:	(bad)  
  41fa14:	fisttp DWORD PTR [ecx+0x4da04c93]
  41fa1a:	ins    DWORD PTR es:[edi],dx
  41fa1b:	jo     0x41f9fe
  41fa1d:	aad    0xe4
  41fa1f:	and    al,0x82
  41fa21:	lahf   
  41fa22:	mov    al,ds:0xb5610281
  41fa27:	jge    0x41fa11
  41fa29:	push   edx
  41fa2a:	gs pop esp
  41fa2c:	mov    DWORD PTR ds:[ebx],eax
  41fa2f:	test   DWORD PTR [esi-0x29],ecx
  41fa32:	iret   
  41fa33:	out    0x6f,al
  41fa35:	or     BYTE PTR [esi+eiz*4],ah
  41fa38:	pop    eax
  41fa39:	jge    0x41fa0a
  41fa3b:	mov    ds:0xa974a2ff,al
  41fa40:	ja     0x41faa1
  41fa42:	bound  edi,QWORD PTR [eax]
  41fa44:	cmc    
  41fa45:	or     al,bh
  41fa47:	xor    bh,BYTE PTR [edi-0x6a]
  41fa4a:	stc    
  41fa4b:	pop    ds
  41fa4c:	pop    ebp
  41fa4d:	mov    es,esi
  41fa4f:	jb     0x41f9f7
  41fa51:	das    
  41fa52:	dec    ecx
  41fa53:	or     BYTE PTR [ebp-0x73c9ac79],dh
  41fa59:	push   0xffffff99
  41fa5b:	sub    DWORD PTR [edx-0x4762ce87],0xffffff83
  41fa62:	addr16 dec ecx
  41fa64:	daa    
  41fa65:	dec    eax
  41fa66:	sub    BYTE PTR [ebx+0x3b6e7876],0x5
  41fa6d:	out    0xc3,eax
  41fa6f:	mov    al,0xfc
  41fa71:	ret    
  41fa72:	cmp    BYTE PTR [eax],0x36
  41fa75:	loopne 0x41fae5
  41fa77:	cdq    
  41fa78:	leave  
  41fa79:	aaa    
  41fa7a:	mov    eax,DWORD PTR [edx]
  41fa7c:	mov    ds:0x801d51b,eax
  41fa81:	jb     0x41faf0
  41fa83:	ret    0x21a1
  41fa86:	out    dx,eax
  41fa87:	shl    BYTE PTR [eax],0x5a
  41fa8a:	xchg   ecx,eax
  41fa8b:	pushf  
  41fa8c:	inc    esp
  41fa8d:	dec    edx
  41fa8e:	nop
  41fa8f:	pop    ecx
  41fa90:	mov    bl,0xde
  41fa92:	xchg   DWORD PTR [edx+0x4f],ecx
  41fa95:	inc    edi
  41fa96:	cmp    BYTE PTR [eax-0x133c9c1c],al
  41fa9c:	and    al,0x1f
  41fa9e:	(bad)  
  41fa9f:	mov    dl,0xb3
  41faa1:	cld    
  41faa2:	add    eax,0xe190a28b
  41faa7:	inc    esi
  41faa8:	and    ch,BYTE PTR [edi]
  41faaa:	ins    BYTE PTR es:[edi],dx
  41faab:	cmp    al,0x4c
  41faad:	sub    eax,DWORD PTR [edi-0x57a08bf8]
  41fab3:	pop    ss
  41fab4:	cmp    BYTE PTR [edi],bh
  41fab6:	ret    
  41fab7:	pop    ss
  41fab8:	or     eax,0x6cf2c3d1
  41fabd:	fisttp DWORD PTR [esi]
  41fabf:	sbb    ch,ah
  41fac1:	mov    edi,0x289f62c8
  41fac6:	add    al,0x77
  41fac8:	adc    BYTE PTR [ebx],bl
  41faca:	sbb    ah,dh
  41facc:	mov    eax,ds:0x59eb1fa4
  41fad1:	mov    al,ds:0x9d28abf4
  41fad6:	xor    DWORD PTR [esi+0x7ad7ca3a],eax
  41fadc:	and    eax,0x8d1b9e8a
  41fae1:	sbb    esp,esi
  41fae3:	dec    edx
  41fae4:	jp     0x41fb42
  41fae6:	ds mov fs,edi
  41fae9:	sbb    eax,0x4b0ab11f
  41faee:	repnz xor DWORD PTR [ecx-0xa51402e],esi
  41faf5:	stc    
  41faf6:	mov    ah,0xe2
  41faf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41faf9:	push   0x4c544ed6
  41fafe:	and    al,cl
  41fb00:	(bad)  
  41fb01:	jle    0x41fb5b
  41fb03:	lods   eax,DWORD PTR ds:[esi]
  41fb04:	xor    al,0xf8
  41fb06:	cmp    eax,0xea3b6179
  41fb0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb0c:	pop    ecx
  41fb0d:	ret    
  41fb0e:	inc    eax
  41fb0f:	cmp    al,0x85
  41fb11:	jae    0x41fb01
  41fb13:	push   cs
  41fb14:	sbb    al,0x7a
  41fb16:	test   eax,0x56a49d28
  41fb1b:	(bad)  
  41fb1c:	rcl    DWORD PTR [ebx],cl
  41fb1e:	lea    edx,[edx+ecx*8+0x56]
  41fb22:	xchg   DWORD PTR [ecx+esi*2],ebx
  41fb25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb26:	cmp    BYTE PTR [ecx-0x38],0xb4
  41fb2a:	jmp    0xb267:0xdabad5e9
  41fb31:	clc    
  41fb32:	sub    bh,dh
  41fb34:	bound  eax,QWORD PTR [edx]
  41fb36:	cmp    BYTE PTR [ecx+0x11],dl
  41fb39:	push   esp
  41fb3a:	into   
  41fb3b:	mov    dl,0xae
  41fb3d:	loop   0x41fb89
  41fb3f:	popa   
  41fb40:	std    
  41fb41:	imul   edx,DWORD PTR [eax],0x9b2b09b0
  41fb47:	xchg   ebp,eax
  41fb48:	mov    al,0xe4
  41fb4a:	pop    ss
  41fb4b:	xchg   dl,ch
  41fb4d:	enter  0x41c8,0xa
  41fb51:	inc    ecx
  41fb52:	xor    al,0xb2
  41fb54:	mov    al,ds:0xd9e0e5c3
  41fb59:	cmp    al,0x26
  41fb5b:	cld    
  41fb5c:	xor    DWORD PTR [eax-0x22e32478],esi
  41fb62:	push   eax
  41fb63:	bound  ecx,QWORD PTR ds:0xc2076b2a
  41fb69:	daa    
  41fb6a:	cmp    ecx,ebx
  41fb6c:	mov    bl,0xd9
  41fb6e:	retf   
  41fb6f:	jg     0x41fbd0
  41fb71:	jmp    0x6b87:0x67a8a874
  41fb78:	xchg   ah,ch
  41fb7a:	ret    0xf11
  41fb7d:	js     0x41fb09
  41fb7f:	or     al,ah
  41fb81:	and    esi,DWORD PTR [esi+0x506abc76]
  41fb87:	push   ecx
  41fb88:	mov    esi,0x7812ea0f
  41fb8d:	adc    al,al
  41fb8f:	sbb    BYTE PTR [esi-0x7eef8d9],dl
  41fb95:	repz mov ecx,edi
  41fb98:	loop   0x41fbe9
  41fb9a:	mov    ebx,0x3fbf8fdb
  41fb9f:	lods   eax,DWORD PTR ds:[esi]
  41fba0:	leave  
  41fba1:	push   ebp
  41fba2:	adc    BYTE PTR [eax],bl
  41fba4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fba5:	das    
  41fba6:	aad    0x9a
  41fba8:	xor    eax,0x8d4149a4
  41fbad:	out    0xb9,al
  41fbaf:	jnp    0x41fb6b
  41fbb1:	fwait
  41fbb2:	gs out dx,eax
  41fbb4:	stos   DWORD PTR es:[edi],eax
  41fbb5:	ret    
  41fbb6:	fstp   DWORD PTR [edx+0x3a180d71]
  41fbbc:	xchg   ecx,eax
  41fbbd:	out    0x54,al
  41fbbf:	les    ebp,FWORD PTR ds:0x2ede893d
  41fbc5:	rdmsr  
  41fbc7:	push   edi
  41fbc8:	sbb    ebp,DWORD PTR [edi]
  41fbca:	sub    al,0x7
  41fbcc:	push   ecx
  41fbcd:	leave  
  41fbce:	add    eax,0xb05bd4b0
  41fbd3:	cmp    esi,eax
  41fbd5:	pushf  
  41fbd6:	(bad)  
  41fbd7:	pop    esi
  41fbd8:	lods   eax,DWORD PTR ds:[esi]
  41fbd9:	add    cl,cl
  41fbdb:	pop    edx
  41fbdc:	dec    ebx
  41fbdd:	add    DWORD PTR [esi-0x3e1715b8],ebp
  41fbe3:	cld    
  41fbe4:	jl     0x41fba7
  41fbe6:	aaa    
  41fbe7:	add    DWORD PTR [eax+0x27],ebx
  41fbea:	adc    dh,BYTE PTR [ecx-0x37]
  41fbed:	fistp  QWORD PTR [ecx+0x659a08e8]
  41fbf3:	adc    ah,ch
  41fbf5:	call   0xe54f1244
  41fbfa:	jmp    0x4d91:0x7a2ddf80
  41fc01:	jmp    0xdaa1c3d
  41fc06:	cmpxchg DWORD PTR [ebp+0x5dae1f90],esp
  41fc0d:	pop    ss
  41fc0e:	ja     0x41fc24
  41fc10:	ds stos DWORD PTR es:[edi],eax
  41fc12:	xor    cl,BYTE PTR [eax+0x2c]
  41fc15:	xchg   esi,eax
  41fc16:	xor    DWORD PTR [ecx],edx
  41fc18:	cli    
  41fc19:	push   esi
  41fc1a:	push   ds
  41fc1b:	ins    BYTE PTR es:[edi],dx
  41fc1c:	aad    0x43
  41fc1e:	or     esi,ebp
  41fc20:	fmul   QWORD PTR [ecx+edx*4+0x1f3b100b]
  41fc27:	or     al,0x6b
  41fc29:	rol    DWORD PTR [ebx+0x11],1
  41fc2c:	pop    esi
  41fc2d:	sti    
  41fc2e:	xor    ecx,DWORD PTR [ebp-0x3b]
  41fc31:	or     dl,0x5e
  41fc34:	mov    dl,0x59
  41fc36:	fs xor eax,0xb7a51738
  41fc3c:	sahf   
  41fc3d:	mov    BYTE PTR [edi+0x24],ah
  41fc40:	push   es
  41fc41:	or     eax,0xcd01efdf
  41fc46:	or     DWORD PTR [ecx-0x7b],ecx
  41fc49:	fwait
  41fc4a:	jp     0x41fbdc
  41fc4c:	retf   
  41fc4d:	fisttp DWORD PTR [edi+0x4b]
  41fc50:	(bad)  
  41fc51:	int    0xf0
  41fc53:	and    eax,0x39bb094d
  41fc58:	xor    bh,bh
  41fc5a:	sti    
  41fc5b:	js     0x41fcb7
  41fc5d:	jge    0x41fc76
  41fc5f:	(bad)  
  41fc60:	dec    edi
  41fc61:	sub    ch,ah
  41fc63:	sub    edi,0xffffff9e
  41fc66:	inc    ebx
  41fc67:	mov    ebp,eax
  41fc69:	pushf  
  41fc6a:	les    esi,FWORD PTR [esi+0x66534aee]
  41fc70:	and    eax,0x13f4f23a
  41fc75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc76:	add    BYTE PTR [edi-0x349a2c46],dh
  41fc7c:	jbe    0x41fc36
  41fc7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc7f:	(bad)  
  41fc80:	icebp  
  41fc81:	cmp    eax,0x795e1326
  41fc86:	cmp    BYTE PTR ds:0x2a8bd620,dh
  41fc8c:	cmc    
  41fc8d:	(bad)
  41fc91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc92:	stos   DWORD PTR es:[edi],eax
  41fc93:	jmp    0x6a46:0x7da71e93
  41fc9a:	xchg   BYTE PTR [ebp-0x6c6d505a],bh
  41fca0:	gs dec ebp
  41fca2:	xor    DWORD PTR [ebp+0x7b],esp
  41fca5:	mov    cl,0xc1
  41fca7:	fcompp 
  41fca9:	or     eax,0xcd19b686
  41fcae:	mov    eax,0xdc11691d
  41fcb3:	cdq    
  41fcb4:	neg    DWORD PTR [edx-0x29]
  41fcb7:	inc    esi
  41fcb8:	(bad)
  41fcbb:	fild   WORD PTR [edx-0x3e]
  41fcbe:	jns    0x41fd3a
  41fcc0:	jb     0x41fd18
  41fcc2:	mov    ecx,DWORD PTR [edx+0x6d]
  41fcc5:	shl    eax,0x7f
  41fcc8:	and    al,0x9e
  41fcca:	mov    ds:0x47e7b49c,al
  41fccf:	or     ebp,DWORD PTR [ebx+edx*1+0x13]
  41fcd3:	or     esp,edx
  41fcd5:	jmp    0x8310:0x13359966
  41fcdc:	cli    
  41fcdd:	rcl    DWORD PTR [ebp+eax*1-0x3115cdab],cl
  41fce4:	dec    edi
  41fce5:	sahf   
  41fce6:	inc    edx
  41fce7:	fcomip st,st(6)
  41fce9:	mov    dl,0x9b
  41fceb:	mov    esi,0x53920964
  41fcf0:	add    BYTE PTR [edi-0xd122891],bh
  41fcf6:	cld    
  41fcf7:	iret   
  41fcf8:	sub    ecx,DWORD PTR [eax+0x10]
  41fcfb:	loop   0x41fd04
  41fcfd:	imul   ebp,DWORD PTR [esi],0xffffffd6
  41fd00:	ret    0x7be8
  41fd03:	out    0x6c,al
  41fd05:	cli    
  41fd06:	xchg   edx,eax
  41fd07:	pop    esi
  41fd08:	inc    ecx
  41fd09:	dec    ebx
  41fd0a:	sub    eax,0x608d256e
  41fd0f:	cmc    
  41fd10:	mov    esi,0x33a5430b
  41fd15:	fidivr DWORD PTR [ecx]
  41fd17:	les    esi,FWORD PTR [edx+0x1b6e659b]
  41fd1d:	adc    edi,ebx
  41fd1f:	cmc    
  41fd20:	sub    eax,0xd7d49e27
  41fd25:	pop    edx
  41fd26:	or     DWORD PTR [ebx],ecx
  41fd28:	jge    0x41fcec
  41fd2a:	jbe    0x41fcca
  41fd2c:	fcmovnu st,st(7)
  41fd2e:	jno    0x41fce0
  41fd30:	ss mov edx,0xecf6ce8a
  41fd36:	lods   al,BYTE PTR ds:[esi]
  41fd37:	jp     0x41fd0a
  41fd39:	cmp    edx,eax
  41fd3b:	and    dl,BYTE PTR [ebp+0x35]
  41fd3e:	inc    DWORD PTR [edi+0x500f4167]
  41fd44:	xchg   ebp,eax
  41fd45:	or     ah,al
  41fd47:	add    DWORD PTR [edx-0x217f1745],eax
  41fd4d:	shr    ebx,1
  41fd4f:	repnz xchg ecx,eax
  41fd51:	out    0x42,al
  41fd53:	cwde   
  41fd54:	imul   edx,DWORD PTR [esi],0x2a8c5650
  41fd5a:	arpl   WORD PTR [edi-0x58],dx
  41fd5d:	clc    
  41fd5e:	leave  
  41fd5f:	dec    edi
  41fd60:	fwait
  41fd61:	cld    
  41fd62:	aaa    
  41fd63:	pop    ss
  41fd64:	ds aas 
  41fd66:	fstp   TBYTE PTR [edi+0x8]
  41fd69:	mov    ebp,DWORD PTR [edi]
  41fd6b:	adc    bh,bl
  41fd6d:	mov    bl,0xa4
  41fd6f:	jae    0x41fd10
  41fd71:	inc    esp
  41fd72:	mov    dl,0xbe
  41fd74:	fwait
  41fd75:	sbb    dl,0xd9
  41fd78:	xor    al,0x11
  41fd7a:	sub    ch,BYTE PTR [ecx]
  41fd7c:	ret    
  41fd7d:	test   BYTE PTR [ebx-0x2a5b14c4],0xd9
  41fd84:	or     al,0x44
  41fd86:	std    
  41fd87:	xor    ebp,esi
  41fd89:	ficomp WORD PTR ds:0xb7d8f75
  41fd8f:	push   esi
  41fd90:	inc    ecx
  41fd91:	rcr    BYTE PTR [eax],1
  41fd93:	cmc    
  41fd94:	mov    eax,0x6dfbc0ff
  41fd99:	ficom  WORD PTR [edx+0x3f]
  41fd9c:	mov    esp,0xffada9a3
  41fda1:	hlt    
  41fda2:	jecxz  0x41fdb2
  41fda4:	(bad)
  41fda7:	pushf  
  41fda8:	jge    0x41fdd4
  41fdaa:	mov    ah,0xdc
  41fdac:	xchg   edi,eax
  41fdad:	test   eax,0xc7dfc45c
  41fdb2:	mov    ds:0x8a095fb2,al
  41fdb7:	loope  0x41fe2f
  41fdb9:	scas   al,BYTE PTR es:[edi]
  41fdba:	adc    DWORD PTR [ecx-0x54],esi
  41fdbd:	or     edi,DWORD PTR [esi]
  41fdbf:	dec    edx
  41fdc0:	mov    ch,0xb7
  41fdc2:	daa    
  41fdc3:	lods   al,BYTE PTR ds:[esi]
  41fdc4:	jne    0x41fd85
  41fdc6:	mov    fs:0x96e4528,al
  41fdcc:	pushw  0xffe0
  41fdcf:	ret    0x7abd
  41fdd2:	clc    
  41fdd3:	push   0x82bce305
  41fdd8:	enter  0xcc7c,0x44
  41fddc:	jns    0x41fe33
  41fdde:	std    
  41fddf:	mov    esi,gs
  41fde1:	pushf  
  41fde2:	xor    BYTE PTR [edi-0x1a],0xfc
  41fde6:	sub    edi,DWORD PTR [edi-0x579d2ee]
  41fdec:	dec    esi
  41fded:	mov    dl,BYTE PTR [edi+eax*4]
  41fdf0:	mov    ?,WORD PTR [ebx]
  41fdf2:	jbe    0x41fe03
  41fdf4:	repz pushf 
  41fdf6:	cld    
  41fdf7:	daa    
  41fdf8:	call   0xa48f:0xdac48c8a
  41fdff:	pop    esi
  41fe00:	pop    esi
  41fe01:	cmp    BYTE PTR [edi-0x25],ah
  41fe04:	xchg   esp,eax
  41fe05:	xchg   BYTE PTR [edi+ebp*4+0x47c42c4d],bl
  41fe0c:	mov    ebp,0x3338a292
  41fe11:	ror    BYTE PTR [ebx+edi*4],cl
  41fe14:	(bad)  
  41fe15:	outs   dx,DWORD PTR ds:[esi]
  41fe16:	cdq    
  41fe17:	add    BYTE PTR [edx-0x7],bh
  41fe1a:	and    esp,DWORD PTR [ecx+0x1b]
  41fe1d:	jmp    0x161e:0x72f9d322
  41fe24:	int3   
  41fe25:	cmp    BYTE PTR [eax+0x7577d8c3],ah
  41fe2b:	inc    edx
  41fe2c:	and    BYTE PTR [esi],0x35
  41fe2f:	and    eax,DWORD PTR [esi]
  41fe31:	mov    ds:0x9776e926,eax
  41fe36:	outs   dx,BYTE PTR ds:[esi]
  41fe37:	mov    dl,0x48
  41fe39:	xchg   BYTE PTR [ebx+edx*1-0x61],cl
  41fe3d:	and    DWORD PTR [esi-0x5e9d40d],edi
  41fe43:	mov    WORD PTR [esi],gs
  41fe45:	in     al,0xb2
  41fe47:	retf   
  41fe48:	cmp    DWORD PTR [esi],0x49eb40d8
  41fe4e:	sti    
  41fe4f:	pop    ds
  41fe50:	mov    ss,WORD PTR [ecx-0x25e89f39]
  41fe56:	push   ss
  41fe57:	loopne 0x41fe0e
  41fe59:	es out 0x8b,eax
  41fe5c:	or     eax,0x69b21119
  41fe61:	add    esp,DWORD PTR gs:[ebp+0xf34e429]
  41fe68:	cmp    eax,0x531f6570
  41fe6d:	push   es
  41fe6e:	mov    ds:0x740814dd,eax
  41fe73:	in     al,0x65
  41fe75:	(bad)  
  41fe77:	xlat   BYTE PTR ds:[ebx]
  41fe78:	mov    cl,0xa8
  41fe7a:	cmp    esi,DWORD PTR [ebp+0x3d1553fd]
  41fe80:	sbb    ch,BYTE PTR [ebx+0x19]
  41fe83:	xchg   edx,eax
  41fe84:	sub    DWORD PTR [ecx+0x76],esi
  41fe87:	jbe    0x41ff05
  41fe89:	xor    bl,BYTE PTR [ebx+eax*1-0x41]
  41fe8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe8e:	sbb    edx,eax
  41fe90:	int3   
  41fe91:	inc    ecx
  41fe92:	in     al,dx
  41fe93:	rcl    DWORD PTR [ecx],cl
  41fe95:	push   ds
  41fe96:	dec    ebp
  41fe97:	neg    edi
  41fe99:	arpl   WORD PTR [esi+0x5eef2056],sp
  41fe9f:	adc    al,0x72
  41fea1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fea2:	cmp    cl,bh
  41fea4:	mov    DWORD PTR [eax-0x62],ebx
  41fea7:	je     0x41fec4
  41fea9:	or     cl,dh
  41feab:	jb     0x41fe82
  41fead:	mov    ch,BYTE PTR [ecx]
  41feaf:	cdq    
  41feb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41feb1:	loopne 0x41fee3
  41feb3:	sbb    dl,dh
  41feb5:	push   0x77
  41feb7:	shl    DWORD PTR fs:[ecx+0x27],0xf
  41febc:	push   ebp
  41febd:	xchg   edx,eax
  41febe:	xchg   BYTE PTR [ebp-0x5],al
  41fec1:	int3   
  41fec2:	ins    BYTE PTR es:[edi],dx
  41fec3:	es xchg esi,eax
  41fec5:	cli    
  41fec6:	scas   al,BYTE PTR es:[edi]
  41fec7:	call   0x7f8f746a
  41fecc:	test   BYTE PTR ds:0xcd4ce9df,bl
  41fed2:	(bad)  
  41fed3:	pusha  
  41fed4:	jle    0x41fef7
  41fed6:	fdivr  QWORD PTR [ecx+0x66246162]
  41fedc:	nop
  41fedd:	pop    esp
  41fede:	xchg   DWORD PTR ds:0xffcb829f,esp
  41fee4:	cmp    DWORD PTR ds:[eax-0x7181211d],0x22
  41feec:	push   ds
  41feed:	jg     0x41fed3
  41feef:	cdq    
  41fef0:	sub    eax,0xcb5a2b7f
  41fef5:	std    
  41fef6:	push   esi
  41fef7:	jp     0x41ff16
  41fef9:	xchg   edx,eax
  41fefa:	mov    esp,0xde726564
  41feff:	enter  0x26d1,0x77
  41ff03:	fisub  DWORD PTR [eax]
  41ff05:	ret    0x2e11
  41ff08:	mov    dl,0x92
  41ff0a:	sar    BYTE PTR [ecx+0x537fa2a6],1
  41ff10:	xor    ebp,0xffffffb5
  41ff13:	ss xchg ebx,eax
  41ff15:	push   esi
  41ff16:	fdiv   QWORD PTR [edx+0x7d145805]
  41ff1c:	rcl    edx,1
  41ff1e:	adc    BYTE PTR [edi+0x7a0a8496],dl
  41ff24:	repz sub DWORD PTR [edx+0x1b],ebx
  41ff28:	(bad)  [ebp+0x195ab6d7]
  41ff2e:	sti    
  41ff2f:	mov    eax,0x745d2c53
  41ff34:	test   BYTE PTR [ecx+edx*2],dl
  41ff37:	ja     0x41ff74
  41ff39:	jle    0x41ff7e
  41ff3b:	sbb    DWORD PTR [edi+edi*2+0x66],0xffffffbb
  41ff40:	into   
  41ff41:	xor    esi,ebp
  41ff43:	and    al,0x38
  41ff45:	in     eax,0xbb
  41ff47:	in     eax,0xed
  41ff49:	inc    ebp
  41ff4a:	sub    esp,edx
  41ff4c:	adc    BYTE PTR [edx-0x41],bh
  41ff4f:	jne    0x41ff73
  41ff51:	dec    ebx
  41ff52:	(bad)  
  41ff53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff54:	(bad)  [ebp-0x3111efd9]
  41ff5a:	popa   
  41ff5b:	cwde   
  41ff5c:	popa   
  41ff5d:	lahf   
  41ff5e:	inc    ebx
  41ff5f:	pushf  
  41ff60:	pop    es
  41ff61:	xor    eax,0x8ac5369a
  41ff66:	push   0x66ba59a5
  41ff6b:	fs xchg esp,eax
  41ff6d:	scas   al,BYTE PTR es:[edi]
  41ff6e:	mov    ebp,0x730b711d
  41ff73:	mov    al,ds:0xb6dc8415
  41ff78:	rol    BYTE PTR [esi+0x215f84af],0x16
  41ff7f:	mov    al,ds:0x2ab9d2bd
  41ff84:	ret    
  41ff85:	(bad)  
  41ff86:	mov    edi,0xc7944434
  41ff8b:	repnz push es
  41ff8d:	jbe    0x41ff74
  41ff8f:	jmp    0xe786f001
  41ff94:	ret    0x2fd6
  41ff97:	and    al,BYTE PTR [eax-0x4bf6303c]
  41ff9d:	dec    esp
  41ff9e:	or     ebx,ebx
  41ffa0:	jns    0x41ff38
  41ffa2:	stc    
  41ffa3:	jmp    0x41ff75
  41ffa5:	stos   BYTE PTR es:[edi],al
  41ffa6:	inc    ecx
  41ffa7:	aaa    
  41ffa8:	popf   
  41ffa9:	aam    0x3e
  41ffab:	ins    BYTE PTR es:[edi],dx
  41ffac:	mov    ah,0x4d
  41ffae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ffaf:	adc    al,0x51
  41ffb1:	jp     0x41ffee
  41ffb3:	leave  
  41ffb4:	fs add al,0xe9
  41ffb7:	mov    esp,0xf6e64da8
  41ffbc:	and    BYTE PTR [ebx-0x41],al
  41ffbf:	inc    ebp
  41ffc0:	push   edx
  41ffc1:	xchg   edx,eax
  41ffc2:	mov    ebx,0x6e833eeb
  41ffc7:	and    BYTE PTR [ebp-0x59],bh
  41ffca:	inc    ebp
  41ffcb:	add    ebx,DWORD PTR [ebp+0x45]
  41ffce:	call   0x44e6:0xfb2b67d7
  41ffd5:	and    DWORD PTR [edx-0x28a50ef],0xffffffd9
  41ffdc:	jne    0x41ff72
  41ffde:	add    eax,0x85482d1
  41ffe3:	mov    ss:0xd4256639,eax
  41ffe9:	dec    BYTE PTR [esi-0x3c]
  41ffec:	loopne 0x42005d
  41ffee:	cmp    ah,BYTE PTR [ebp-0x3fffa2a9]
  41fff4:	dec    esp
  41fff5:	data16 mov al,0x23
  41fff8:	xchg   esi,eax
  41fff9:	sbb    ch,BYTE PTR [ebx]
  41fffb:	ins    BYTE PTR es:[edi],dx
  41fffc:	mov    dh,0xde
  41fffe:	adc    eax,eax
  420000:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420001:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420002:	push   ebp
  420003:	cmp    al,0x8b
  420005:	or     DWORD PTR [ebp+0x512eee6],0xaf29275a
  42000f:	dec    ecx
  420010:	out    dx,al
  420011:	cmp    DWORD PTR [edi+0x34ca622c],ecx
  420017:	int    0x7d
  420019:	repnz or dh,BYTE PTR ds:0xa760753c
  420020:	int    0x57
  420022:	mov    ds:0xe531ac63,al
  420027:	ins    BYTE PTR es:[edi],dx
  420028:	ja     0x41ffcb
  42002a:	mov    ss,ebx
  42002c:	pop    esp
  42002d:	out    0x17,al
  42002f:	jle    0x420090
  420031:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420032:	mov    ebp,0xca7682c1
  420037:	idiv   DWORD PTR [eax]
  420039:	scas   al,BYTE PTR es:[edi]
  42003a:	sti    
  42003b:	adc    bh,BYTE PTR [eax-0x2943ea32]
  420041:	and    eax,0x733bd469
  420046:	test   DWORD PTR [eax-0x6c07a689],0xb5da48a5
  420050:	out    dx,eax
  420051:	int    0x2e
  420053:	jmp    0x420035
  420055:	xor    eax,0x7c06ebfb
  42005a:	ins    BYTE PTR es:[edi],dx
  42005b:	mov    ecx,ecx
  42005d:	repnz std 
  42005f:	jno    0x420047
  420061:	jge    0x42005e
  420063:	pop    ebp
  420064:	test   DWORD PTR [edi-0x79],esi
  420067:	push   eax
  420068:	mov    bl,0x51
  42006a:	pop    edi
  42006b:	sbb    ebp,ebx
  42006d:	scas   al,BYTE PTR es:[edi]
  42006e:	jo     0x42005f
  420070:	div    DWORD PTR [esp+edx*1-0x3d967c2a]
  420077:	sbb    BYTE PTR [ebx],0xbf
  42007a:	daa    
  42007b:	ins    BYTE PTR es:[edi],dx
  42007c:	inc    ebp
  42007d:	dec    ecx
  42007e:	ret    
  42007f:	ja     0x4200de
  420081:	(bad)  
  420082:	cmp    BYTE PTR [edx-0x71],cl
  420085:	mov    bl,0x8c
  420087:	inc    ecx
  420088:	repnz cdq 
  42008a:	iret   
  42008b:	pop    esp
  42008c:	adc    edi,DWORD PTR [esi]
  42008e:	add    BYTE PTR [edi-0x1b2f34fd],dl
  420094:	adc    eax,0xa219f626
  420099:	xor    BYTE PTR [edi+ebx*2-0x76],bh
  42009d:	(bad)  
  42009e:	sbb    DWORD PTR [edi-0x7d],ecx
  4200a1:	fist   DWORD PTR ds:0x85877971
  4200a7:	mov    edx,0x2254391f
  4200ac:	and    al,BYTE PTR [esi]
  4200ae:	mov    WORD PTR [ebx+0x4a],ds
  4200b1:	ror    BYTE PTR [ebx],1
  4200b3:	daa    
  4200b4:	xlat   BYTE PTR ds:[ebx]
  4200b5:	repnz lods eax,DWORD PTR ds:[esi]
  4200b7:	lock adc BYTE PTR [esp+eiz*2+0x35],dl
  4200bc:	movaps xmm3,xmm6
  4200bf:	adc    DWORD PTR [ebp+0x278bf199],ebx
  4200c5:	mov    ebp,0xe8b5a20c
  4200ca:	fisttp DWORD PTR ds:[ecx]
  4200cd:	inc    ebx
  4200ce:	ret    0x39be
  4200d1:	repnz lods eax,DWORD PTR ds:[esi]
  4200d3:	fst    DWORD PTR [esp+ebx*8+0x6d577020]
  4200da:	pop    esi
  4200db:	or     ch,BYTE PTR [ebx+eiz*1-0x6faee742]
  4200e2:	pop    ds
  4200e3:	cdq    
  4200e4:	fs out dx,al
  4200e6:	sub    eax,0x5a1fa6c7
  4200eb:	mov    bh,0x8b
  4200ed:	(bad)  
  4200ee:	fmul   QWORD PTR [edi-0x6]
  4200f1:	call   0x2ba6:0x1506486
  4200f8:	ror    BYTE PTR cs:[esi-0x60],cl
  4200fc:	pop    ecx
  4200fd:	mov    ah,0x52
  4200ff:	add    BYTE PTR [ecx+0x29],ah
  420102:	dec    ecx
  420103:	cmp    al,bh
  420105:	cmp    ah,bh
  420107:	ror    DWORD PTR [edi+edi*8-0x28a8d8f1],cl
  42010e:	shl    DWORD PTR [edi],1
  420110:	push   ebx
  420111:	jecxz  0x4200ec
  420113:	ins    DWORD PTR es:[edi],dx
  420114:	sbb    bh,BYTE PTR [eax+0x51729353]
  42011a:	sbb    BYTE PTR [ebx+0xdbe57d8],ch
  420120:	lods   al,BYTE PTR ds:[esi]
  420121:	mov    esi,DWORD PTR [esi+edi*2-0x6b861cbf]
  420128:	mov    ds:0x242cd3c7,eax
  42012d:	push   ecx
  42012e:	jns    0x4200c4
  420130:	sub    BYTE PTR [ecx+0x26],al
  420133:	lea    ebx,[esi]
  420135:	dec    ecx
  420136:	sub    DWORD PTR cs:[ecx],0x6146e3f8
  42013d:	sti    
  42013e:	xchg   BYTE PTR [ebp+0x529e769c],dl
  420144:	mov    cl,0x94
  420146:	test   DWORD PTR [esi+0x33b1fe1f],eax
  42014c:	push   ebp
  42014d:	mov    edx,0x1c3b8314
  420152:	idiv   DWORD PTR [edi+0xb]
  420155:	pop    esi
  420156:	mov    WORD PTR [edx-0x2e1ae341],es
  42015c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42015d:	mov    BYTE PTR [edi+0x6c],dh
  420160:	dec    ebx
  420161:	inc    ebx
  420162:	retf   0x96dc
  420165:	outs   dx,DWORD PTR ds:[esi]
  420166:	frndint 
  420168:	pop    ebp
  420169:	jae    0x42011c
  42016b:	inc    esi
  42016c:	push   ds
  42016d:	test   al,0xc
  42016f:	int3   
  420170:	cdq    
  420171:	imul   esp,DWORD PTR [esi-0x67258ece],0xf350a3df
  42017b:	cmp    BYTE PTR [ebx-0x21f20ac8],ah
  420181:	mov    ecx,0xffe2707
  420186:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420187:	sbb    esi,edx
  420189:	dec    edi
  42018a:	adc    al,0x74
  42018c:	nop
  42018d:	(bad)  
  42018f:	xor    eax,DWORD PTR [edx]
  420191:	test   BYTE PTR [ebx-0x43],0xb5
  420195:	pop    es
  420196:	in     al,0xc8
  420198:	mov    al,0xd8
  42019a:	cmp    BYTE PTR [ebp-0x42af32ee],bh
  4201a0:	and    DWORD PTR [esi-0x61],esi
  4201a3:	hlt    
  4201a4:	inc    ebp
  4201a5:	jmp    0x420177
  4201a7:	and    eax,0x1a8666cb
  4201ac:	into   
  4201ad:	add    DWORD PTR [ebx],edi
  4201af:	out    dx,al
  4201b0:	adc    BYTE PTR [edx],cl
  4201b2:	rcr    DWORD PTR [edx+0x6b2ca5f8],1
  4201b8:	mov    DWORD PTR [esi],edi
  4201ba:	mov    ch,BYTE PTR [ebp-0x2aa94569]
  4201c0:	xchg   esp,eax
  4201c1:	xor    edx,DWORD PTR [esi+0x5]
  4201c4:	and    al,0x80
  4201c6:	pop    esp
  4201c7:	fbld   TBYTE PTR ds:0x923bb8b2
  4201cd:	cld    
  4201ce:	out    0x17,eax
  4201d0:	sub    eax,0xa3d8a6cf
  4201d5:	pop    esp
  4201d6:	xlat   BYTE PTR ds:[ebx]
  4201d7:	ja     0x420209
  4201d9:	int    0xfd
  4201db:	dec    ebx
  4201dc:	mov    dl,0x60
  4201de:	mov    esp,0xe191b7d3
  4201e3:	dec    ebx
  4201e4:	mov    ebp,0x9dcf94b4
  4201e9:	push   edi
  4201ea:	dec    ecx
  4201eb:	mov    bl,0xef
  4201ed:	mov    al,ds:0x6bba0fd1
  4201f2:	or     ch,BYTE PTR [esi+0x4a]
  4201f5:	cmp    al,0xac
  4201f7:	cmp    BYTE PTR [ecx+0x51430441],bh
  4201fd:	rcr    DWORD PTR [ebx-0x42],1
  420200:	xor    al,BYTE PTR [ebx]
  420202:	sbb    DWORD PTR [edi+0xe8ddae],ebx
  420208:	shl    BYTE PTR [eax-0x57],0x43
  42020c:	adc    ch,bh
  42020e:	jb     0x420264
  420210:	in     eax,dx
  420211:	push   0xd937634d
  420216:	sbb    edx,DWORD PTR [ebp-0x7b]
  420219:	inc    edi
  42021a:	pop    es
  42021b:	or     bl,ch
  42021d:	push   ebp
  42021e:	repz lea edi,[edi]
  420221:	push   ebx
  420222:	add    DWORD PTR [edx+esi*2-0x1e],edi
  420226:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420227:	(bad)  
  420228:	out    0x18,al
  42022a:	mov    ah,0x19
  42022c:	lea    ebp,ds:0x543de07e
  420232:	adc    DWORD PTR [eax+0x25],edx
  420235:	repnz std 
  420237:	and    BYTE PTR [eax+ecx*4+0x2a8d89b5],ah
  42023e:	sub    BYTE PTR [ebp-0x764ee71e],0xb3
  420245:	pop    esi
  420246:	sbb    eax,0xdd264c1c
  42024b:	add    eax,0xa8e5fb4f
  420250:	xchg   esi,eax
  420251:	lods   eax,DWORD PTR ds:[esi]
  420252:	dec    ebp
  420253:	inc    ebx
  420254:	cmp    cl,BYTE PTR [edi]
  420256:	push   ss
  420257:	bound  eax,QWORD PTR [ebp-0x2a7daf75]
  42025d:	int3   
  42025e:	stos   DWORD PTR es:[edi],eax
  42025f:	mov    bh,0xad
  420261:	or     BYTE PTR [ebx+0x75],ah
  420264:	jo     0x420277
  420266:	pop    esp
  420267:	pushf  
  420268:	test   DWORD PTR [esi+0x46],ecx
  42026b:	jo     0x4202b3
  42026d:	in     al,dx
  42026e:	adc    ecx,DWORD PTR [esi-0x68f92a3c]
  420274:	pop    esp
  420275:	sbb    edi,DWORD PTR cs:[edx+0x16]
  420279:	in     al,dx
  42027a:	cmp    ebp,DWORD PTR [ecx-0x4c3c6c84]
  420280:	inc    edx
  420281:	test   BYTE PTR [ecx+0x41d0e6de],ch
  420287:	test   al,0xa3
  420289:	lods   al,BYTE PTR ds:[esi]
  42028a:	mov    eax,0xdd76661b
  42028f:	daa    
  420290:	or     dl,dl
  420292:	pop    esi
  420293:	mov    esi,0x6b897bf7
  420298:	adc    al,0x58
  42029a:	fstp   st(2)
  42029c:	fwait
  42029d:	cdq    
  42029e:	fnstsw WORD PTR [esi+0x58]
  4202a1:	mov    al,ds:0x49742a7
  4202a6:	or     eax,0x5c85ec67
  4202ab:	popa   
  4202ac:	(bad)  
  4202ad:	outs   dx,DWORD PTR ds:[esi]
  4202ae:	idiv   DWORD PTR [edx+0x67113b48]
  4202b4:	pop    eax
  4202b5:	scas   eax,DWORD PTR es:[edi]
  4202b6:	adc    cl,ah
  4202b8:	push   es
  4202b9:	add    eax,0xd5abf54b
  4202be:	mov    ah,0x29
  4202c0:	jp     0x42030b
  4202c2:	cmp    ah,BYTE PTR [ecx+esi*1-0x78]
  4202c6:	stos   BYTE PTR es:[edi],al
  4202c7:	dec    ebp
  4202c8:	mov    ebp,0x86204f16
  4202cd:	mov    dl,0xad
  4202cf:	fidivr WORD PTR [ecx+0x328a0521]
  4202d5:	inc    esi
  4202d6:	jle    0x4202fa
  4202d8:	enter  0x4544,0x81
  4202dc:	out    dx,eax
  4202dd:	pop    ecx
  4202de:	mov    ds,WORD PTR [edx-0x2]
  4202e1:	fmul   DWORD PTR [ebx-0x5a]
  4202e4:	mov    edi,0x17bf7b92
  4202e9:	add    DWORD PTR [esi+0x84153fd],ecx
  4202ef:	or     edx,esp
  4202f1:	adc    ch,BYTE PTR [ebp+0x10]
  4202f4:	pop    ecx
  4202f5:	and    al,0x2d
  4202f7:	cli    
  4202f8:	mov    ch,BYTE PTR [edx-0x7]
  4202fb:	sbb    eax,0xc6a76988
  420300:	jbe    0xac22d42f
  420306:	std    
  420307:	hlt    
  420308:	mov    dl,0x94
  42030a:	jbe    0x4202bc
  42030c:	popf   
  42030d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42030e:	ror    BYTE PTR [eax+0x71e57c81],1
  420314:	shl    BYTE PTR [ecx+ecx*2+0x35],cl
  420318:	inc    esi
  420319:	cmc    
  42031a:	pop    edi
  42031b:	jbe    0x42039a
  42031d:	mov    ds:0xe2f0068a,al
  420322:	fist   DWORD PTR [eax]
  420324:	int3   
  420325:	pop    ecx
  420326:	xchg   ebp,eax
  420327:	and    ebp,edi
  420329:	pop    ss
  42032a:	push   ds
  42032b:	mov    ds:0x4f3ee12b,al
  420330:	push   esp
  420331:	push   cs
  420332:	or     eax,eax
  420334:	xchg   ebp,eax
  420335:	dec    edi
  420336:	fist   DWORD PTR [edx]
  420338:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420339:	push   esi
  42033a:	cmc    
  42033b:	je     0x42031a
  42033d:	fwait
  42033e:	mov    ebx,DWORD PTR [edx+0x1f]
  420341:	jmp    0xccc5bbcc
  420346:	mov    eax,0x4404ddda
  42034b:	dec    ebx
  42034c:	jl     0x420346
  42034e:	and    ecx,DWORD PTR [edx]
  420350:	fbld   TBYTE PTR [ebp+0x6e421b10]
  420356:	pop    edx
  420357:	mov    bl,0x10
  420359:	cmp    BYTE PTR [ecx+0x14289dfd],0x13
  420360:	jge    0x4203dc
  420362:	repnz dec edx
  420364:	sbb    ah,ah
  420366:	fwait
  420367:	dec    esp
  420368:	push   ebp
  420369:	xor    BYTE PTR [eax],al
  42036b:	adc    BYTE PTR [esi+0x8],bh
  42036e:	pop    es
  42036f:	stos   BYTE PTR es:[edi],al
  420370:	outs   dx,DWORD PTR ds:[esi]
  420371:	clc    
  420372:	(bad)  
  420373:	cmp    DWORD PTR [ebx+esi*2],esi
  420376:	adc    al,0x70
  420378:	ret    0xdd0a
  42037b:	sub    ah,BYTE PTR [esi+0x69]
  42037e:	sub    BYTE PTR [edi],ch
  420380:	push   ds
  420381:	rcl    DWORD PTR [eax],cl
  420383:	and    DWORD PTR [ecx-0x16],esi
  420386:	xchg   ebp,eax
  420387:	or     DWORD PTR [esi-0xb],edi
  42038a:	xchg   ebp,eax
  42038b:	outs   dx,BYTE PTR ds:[esi]
  42038c:	sub    dh,ch
  42038e:	jmp    0x91b2:0x2ee3f6c2
  420395:	sub    eax,0xf3b2c027
  42039a:	repz xor eax,0x92e56acb
  4203a0:	ins    BYTE PTR es:[edi],dx
  4203a1:	cmp    bh,dh
  4203a3:	mov    ah,0x14
  4203a5:	xchg   DWORD PTR [edi+eiz*1],ebx
  4203a8:	fmul   DWORD PTR [eax+esi*1]
  4203ab:	or     ebp,DWORD PTR [ebx-0x24]
  4203ae:	pusha  
  4203af:	pop    ebp
  4203b0:	lock dec ebx
  4203b2:	push   0xfffffff9
  4203b4:	pop    edx
  4203b5:	or     esi,DWORD PTR [esi-0x47]
  4203b8:	(bad)  
  4203ba:	aam    0xd4
  4203bc:	stos   BYTE PTR es:[edi],al
  4203bd:	outs   dx,BYTE PTR ds:[esi]
  4203be:	sub    al,0x3e
  4203c0:	out    0x27,al
  4203c2:	mov    eax,0x823c59bb
  4203c7:	or     al,0xb4
  4203c9:	xchg   esp,eax
  4203ca:	sbb    DWORD PTR [esi],ebp
  4203cc:	nop
  4203cd:	mov    edi,0x3e96e334
  4203d2:	xchg   edi,eax
  4203d3:	jnp    0x4203ca
  4203d5:	mov    ?,esp
  4203d7:	in     eax,dx
  4203d8:	xor    DWORD PTR [eax+ebx*2+0x62],eax
  4203dc:	call   0x921fef8f
  4203e1:	mov    ah,0x70
  4203e3:	push   edx
  4203e4:	mov    ds:0x4176956a,eax
  4203e9:	push   cs
  4203ea:	ds xchg edx,eax
  4203ec:	cli    
  4203ed:	outs   dx,DWORD PTR ds:[esi]
  4203ee:	pusha  
  4203ef:	scas   al,BYTE PTR es:[edi]
  4203f0:	hlt    
  4203f1:	pop    esp
  4203f2:	cmp    DWORD PTR [ebx-0x339c3d67],0x21
  4203f9:	fidiv  DWORD PTR [ebp-0x1cda8c7]
  4203ff:	rcr    bl,0xef
  420402:	dec    edx
  420403:	popa   
  420404:	add    al,0x86
  420406:	pop    ecx
  420407:	inc    ebp
  420408:	sbb    al,BYTE PTR [ecx]
  42040a:	cmp    ah,BYTE PTR [eax+0x2]
  42040d:	jnp    0x42040b
  42040f:	mov    eax,0xe266ce4f
  420414:	pop    eax
  420415:	jmp    0x9705c26f
  42041a:	dec    ecx
  42041b:	std    
  42041c:	pop    esp
  42041d:	add    al,0xf
  42041f:	ds jmp 0x420467
  420422:	sbb    al,0x27
  420424:	(bad)  
  420425:	in     al,dx
  420426:	pop    eax
  420427:	out    dx,al
  420428:	dec    esp
  420429:	pop    eax
  42042a:	push   esp
  42042b:	or     eax,0xa3272cf
  420430:	push   edx
  420431:	push   esi
  420432:	ret    0xab34
  420435:	mov    ds:0xa6ab51aa,eax
  42043a:	jmp    0x831d5186
  42043f:	or     DWORD PTR [ecx+0x52],ecx
  420442:	xchg   bl,ah
  420444:	retf   0x7f58
  420447:	jno    0x42040f
  420449:	mov    bh,0xf6
  42044b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42044c:	stc    
  42044d:	dec    eax
  42044e:	pop    ebx
  42044f:	jmp    0x3efc:0xb8f4b037
  420456:	fcomp  QWORD PTR [ecx+0x3344eb11]
  42045c:	cdq    
  42045d:	rcr    edx,cl
  42045f:	pop    DWORD PTR [ebp-0x4f05f62c]
  420465:	loop   0x4203f4
  420467:	lock outs dx,DWORD PTR ds:[esi]
  420469:	jno    0x4204c1
  42046b:	and    edi,DWORD PTR [ebx-0x43b00c62]
  420471:	push   ebp
  420472:	fdivr  QWORD PTR [ebx-0x80]
  420475:	mov    eax,ds:0xee8899b3
  42047a:	cs mov ah,0x76
  42047d:	aaa    
  42047e:	ret    
  42047f:	mov    esi,0x611fc0ba
  420484:	inc    ecx
  420485:	je     0x42048d
  420487:	gs mov esp,0xe7b08b4d
  42048d:	js     0x4204c2
  42048f:	mov    ebp,0xc1a5a7e0
  420494:	loopne 0x420420
  420496:	sbb    al,0xa
  420498:	or     eax,0xd7c6fd73
  42049d:	std    
  42049e:	call   0x5fa93705
  4204a3:	adc    esi,ebx
  4204a5:	ror    BYTE PTR [edi+0x277af54],0xbb
  4204ac:	jo     0x4204e5
  4204ae:	dec    ecx
  4204af:	fisub  WORD PTR [eax]
  4204b1:	mov    BYTE PTR [edx],ah
  4204b3:	(bad)  
  4204b5:	sub    al,0x7d
  4204b7:	mov    esp,DWORD PTR [ecx-0x62]
  4204ba:	stc    
  4204bb:	jne    0x42048c
  4204bd:	fstp   st(3)
  4204bf:	add    ebx,ebx
  4204c1:	jne    0x420524
  4204c3:	pop    ebx
  4204c4:	test   DWORD PTR [esp+esi*2],esi
  4204c7:	fucomip st,st(1)
  4204c9:	(bad)  
  4204ca:	sbb    BYTE PTR ds:0x23fe4ae,dh
  4204d0:	shr    BYTE PTR [esp+eax*1],0xb8
  4204d4:	pushf  
  4204d5:	xor    DWORD PTR [esi+eax*4+0x27d81d8c],esp
  4204dc:	imul   esi,DWORD PTR [edi-0x13],0x2b
  4204e0:	xor    eax,0xb0792c08
  4204e5:	push   esi
  4204e6:	mov    edi,DWORD PTR [esi]
  4204e8:	push   esi
  4204e9:	or     BYTE PTR [eax+0x3c],bh
  4204ec:	mov    dl,BYTE PTR [ecx+0x268d63ba]
  4204f2:	push   ecx
  4204f3:	shrd   DWORD PTR [ebp-0x5d],ecx,0x3e
  4204f8:	loop   0x420535
  4204fa:	aas    
  4204fb:	lods   al,BYTE PTR ds:[esi]
  4204fc:	sbb    ch,BYTE PTR [ecx]
  4204fe:	jo     0x420482
  420500:	mov    eax,ds:0xdbe2c044
  420505:	add    ch,0x64
  420508:	sbb    BYTE PTR [eax],0x63
  42050b:	int    0xca
  42050d:	mov    dh,0x4b
  42050f:	daa    
  420510:	sub    dh,BYTE PTR [eax]
  420512:	xchg   esi,eax
  420513:	xchg   ebx,eax
  420514:	test   BYTE PTR [eax],ch
  420516:	ret    
  420517:	push   edi
  420518:	test   al,0xd6
  42051a:	sub    al,0xd7
  42051c:	push   cs
  42051d:	and    DWORD PTR [edi-0x3389dbab],eax
  420523:	fsub   DWORD PTR [edx+0x19]
  420526:	pop    edi
  420527:	comiss xmm1,xmm3
  42052a:	imul   edx,esp,0x76
  42052d:	xor    ebp,DWORD PTR [ecx+0x1]
  420530:	mov    edi,0xd2d6a9b2
  420535:	cmp    al,0x31
  420537:	int    0xa8
  420539:	mov    ebx,0x95081e52
  42053e:	fld    TBYTE PTR [ebx+0x1dca606a]
  420544:	jbe    0x420593
  420546:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420547:	cmp    al,ah
  420549:	sbb    bl,BYTE PTR [ecx-0xc61c603]
  42054f:	shl    cl,0xbf
  420552:	add    DWORD PTR [ebp+ecx*1+0x67],ebx
  420556:	aaa    
  420557:	retf   0xa1c2
  42055a:	sub    bl,BYTE PTR [ebp-0x5739539]
  420560:	sbb    eax,0xc95ca07d
  420565:	jnp    0x420588
  420567:	adc    al,ah
  420569:	daa    
  42056a:	jnp    0x420540
  42056c:	leave  
  42056d:	pop    ds
  42056e:	and    al,0xd1
  420570:	mov    ebx,DWORD PTR [edx+0x37d9fbdc]
  420576:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420577:	sub    DWORD PTR [esi],0xffffffff
  42057a:	fidiv  DWORD PTR [ecx+0x72bcd536]
  420580:	pop    ss
  420581:	push   edx
  420582:	nop
  420583:	sub    bh,al
  420585:	xlat   BYTE PTR ds:[ebx]
  420586:	jmp    0x148e:0x96f543
  42058d:	cwde   
  42058e:	(bad)  
  420590:	mov    bh,0x7f
  420592:	mov    edi,0xf786c73d
  420597:	sbb    al,0x38
  420599:	stos   BYTE PTR es:[edi],al
  42059a:	sub    ebx,edx
  42059c:	int3   
  42059d:	adc    esp,DWORD PTR [edi+ebx*2]
  4205a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4205a1:	addr16 pop ss
  4205a3:	push   ss
  4205a4:	pusha  
  4205a5:	jnp    0x420620
  4205a7:	fwait
  4205a8:	sub    DWORD PTR [esi+ebx*4],edi
  4205ab:	test   eax,0xc1184896
  4205b0:	or     DWORD PTR [ecx+0xe],edi
  4205b3:	aas    
  4205b4:	test   BYTE PTR [ebp+0x30affd83],dl
  4205ba:	dec    eax
  4205bb:	and    cl,dh
  4205bd:	push   eax
  4205be:	cs cmc 
  4205c0:	jne    0x420591
  4205c2:	push   ecx
  4205c3:	mov    ecx,0xdbf6e2d4
  4205c8:	sub    DWORD PTR [ebp-0x6],ebx
  4205cb:	out    0x11,eax
  4205cd:	xor    ebx,ebp
  4205cf:	loopne 0x42059b
  4205d1:	daa    
  4205d2:	fdivr  QWORD PTR [ebx+ecx*2]
  4205d5:	push   edx
  4205d6:	mov    eax,ds:0x9b865539
  4205db:	pop    ebp
  4205dc:	pop    edx
  4205dd:	pusha  
  4205de:	jp     0x4205a9
  4205e0:	sub    DWORD PTR [eax+0x366fb35c],ecx
  4205e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4205e7:	jnp    0x4205c2
  4205e9:	add    DWORD PTR [ebx+0x2e],eax
  4205ec:	outs   dx,DWORD PTR ds:[esi]
  4205ed:	leave  
  4205ee:	inc    esp
  4205ef:	aad    0x45
  4205f1:	aaa    
  4205f2:	jnp    0x420574
  4205f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4205f5:	pushf  
  4205f6:	inc    ecx
  4205f7:	imul   eax,DWORD PTR ds:0x30feb032,0x55048b4b
  420601:	mov    dl,0xa6
  420603:	das    
  420604:	int    0x32
  420606:	jmp    0x4205ef
  420608:	cmc    
  420609:	pop    es
  42060a:	mov    ecx,0x2d1663bc
  42060f:	add    BYTE PTR [edi-0x6e],al
  420612:	call   0x513f6a9e
  420617:	js     0x420642
  420619:	adc    DWORD PTR [edx+0x4d0681c],esp
  42061f:	adc    al,0x10
  420621:	outs   dx,BYTE PTR ds:[esi]
  420622:	jae    0x420614
  420624:	pop    ss
  420625:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420626:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420627:	jmp    0x4205d1
  420629:	sbb    bl,al
  42062b:	push   edx
  42062c:	inc    esi
  42062d:	and    BYTE PTR [edi-0x77],bh
  420630:	mov    ds:0x989d754a,al
  420635:	xor    DWORD PTR [edx],0xffffffe6
  420638:	mov    ds:0x85933667,eax
  42063d:	ficomp WORD PTR [ebp+0x423fdd1d]
  420643:	mov    edi,0xb4f09279
  420648:	or     al,0xc6
  42064a:	xchg   esp,eax
  42064b:	rcr    DWORD PTR [ebp+0x2a],1
  42064e:	and    bl,BYTE PTR [ebx+0x43666660]
  420654:	retf   0x7219
  420657:	ret    0x8732
  42065a:	addr16 inc eax
  42065c:	cmp    edi,DWORD PTR [edi+0x7eb85be6]
  420662:	arpl   bx,dx
  420664:	fnstcw WORD PTR [ecx-0x7fc0fa58]
  42066a:	pop    esi
  42066b:	pop    ecx
  42066c:	push   ebx
  42066d:	xchg   ebp,eax
  42066e:	mov    ds:0x46357ad8,eax
  420673:	dec    ebp
  420674:	(bad)
  420679:	sub    BYTE PTR [eax+0x104f262a],bh
  42067f:	ret    
  420680:	add    al,0x4b
  420682:	fistp  DWORD PTR [edi+0x639eb691]
  420688:	adc    esp,0x2b
  42068b:	loope  0x4206aa
  42068d:	inc    eax
  42068e:	aad    0x6e
  420690:	call   0x934772df
  420695:	add    eax,0x91b2da4e
  42069a:	pop    esp
  42069b:	je     0x420675
  42069d:	sub    eax,DWORD PTR [ebp+0x5a]
  4206a0:	cmp    al,0xdc
  4206a2:	ins    DWORD PTR es:[edi],dx
  4206a3:	or     al,0x1e
  4206a5:	test   DWORD PTR [ebx+edi*1+0x1],ecx
  4206a9:	vaddpd xmm2,xmm7,xmm1
  4206ad:	sub    ch,dl
  4206af:	push   cs
  4206b0:	pop    eax
  4206b1:	(bad)  
  4206b2:	mov    bh,0xa4
  4206b4:	and    ebp,eax
  4206b6:	lahf   
  4206b7:	mov    DWORD PTR [edi-0x41fd64c3],ecx
  4206bd:	mov    ah,al
  4206bf:	xor    bl,dh
  4206c1:	ror    DWORD PTR [ecx-0x37],0xbf
  4206c5:	xchg   edi,eax
  4206c6:	dec    edx
  4206c7:	push   ecx
  4206c8:	iret   
  4206c9:	adc    DWORD PTR [esi-0x7a7edb12],esp
  4206cf:	lock lahf 
  4206d1:	pop    edx
  4206d2:	fbld   TBYTE PTR [esi]
  4206d4:	sbb    al,0xa5
  4206d6:	popf   
  4206d7:	or     DWORD PTR [eax-0xe],ecx
  4206da:	jge    0x420687
  4206dc:	ret    
  4206dd:	add    BYTE PTR [ecx-0x13e9b27b],dh
  4206e3:	xor    DWORD PTR [ebp+eiz*4-0x5f1d786a],0xfffffffc
  4206eb:	push   edx
  4206ec:	fist   WORD PTR [edi+0x57]
  4206ef:	jmp    0x32d1:0xfb8e2df1
  4206f6:	test   al,0x8a
  4206f8:	dec    esp
  4206f9:	cmp    BYTE PTR [ecx+0x28],0x72
  4206fd:	jo     0x42074f
  4206ff:	and    eax,0xe4f6d7b5
  420704:	aam    0x94
  420706:	lock cs pushf 
  420709:	jmp    0x72401e02
  42070e:	int3   
  42070f:	ds hlt 
  420711:	lock (bad) 
  420713:	or     ebp,DWORD PTR [ecx+edi*1]
  420716:	lds    ecx,FWORD PTR [eax]
  420718:	inc    edi
  420719:	loopne 0x4206cb
  42071b:	pop    esp
  42071c:	cli    
  42071d:	adc    eax,0x3cf1ba0d
  420722:	pop    ds
  420723:	jno    0x42079e
  420725:	mov    eax,ds:0xec1a8f2c
  42072a:	mov    DWORD PTR [ecx+eiz*1+0x1ee6389b],edx
  420731:	test   DWORD PTR [edx],esp
  420733:	sbb    al,0xd9
  420735:	xchg   ebp,eax
  420736:	mov    ds:0xcd606270,eax
  42073b:	sub    cl,BYTE PTR [edi-0x9]
  42073e:	out    dx,al
  42073f:	popf   
  420740:	jns    0x4206e6
  420742:	sub    esi,DWORD PTR [esi+0x3d3ee67d]
  420748:	test   ah,dl
  42074a:	imul   edx,edi,0xfffffff4
  42074d:	iret   
  42074e:	push   ebp
  42074f:	daa    
  420750:	xchg   edx,eax
  420751:	pop    es
  420752:	rcl    BYTE PTR [edi-0x272c68d5],1
  420758:	shr    DWORD PTR [ecx+ebp*2-0x7311ab41],1
  42075f:	xchg   esp,eax
  420760:	or     ch,cl
  420762:	jmp    0xad85:0xd23486cf
  420769:	outs   dx,BYTE PTR ds:[esi]
  42076a:	cmp    eax,0xb6fc444
  42076f:	cs xor al,0xa5
  420772:	sub    BYTE PTR [ebp+eax*1-0x1e],0x9f
  420777:	inc    ebp
  420778:	arpl   WORD PTR [ebp+0x27],bp
  42077b:	mov    esp,0xe167d5e6
  420780:	xchg   BYTE PTR [ebp+0x59],bl
  420783:	out    dx,al
  420784:	jne    0x42071b
  420786:	aam    0x80
  420788:	test   ch,ch
  42078a:	adc    al,0xf8
  42078c:	stc    
  42078d:	push   0x332b9127
  420792:	ds icebp 
  420794:	mov    fs,WORD PTR [edx]
  420796:	aad    0xcd
  420798:	ins    DWORD PTR es:[edi],dx
  420799:	jbe    0x42072b
  42079b:	pop    ebx
  42079c:	inc    eax
  42079d:	nop
  42079e:	lds    esp,FWORD PTR [ebp+0x5a32fe15]
  4207a4:	in     eax,0xee
  4207a6:	(bad)  
  4207a7:	enter  0x8a42,0x3f
  4207ab:	sti    
  4207ac:	pop    es
  4207ad:	push   eax
  4207ae:	inc    esi
  4207af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207b0:	cld    
  4207b1:	scas   eax,DWORD PTR es:[edi]
  4207b2:	bound  esi,QWORD PTR [ebp-0x145ec2c7]
  4207b8:	dec    edi
  4207b9:	in     al,dx
  4207ba:	jge    0x4207bb
  4207bc:	mov    DWORD PTR [ecx],0x8dcb4495
  4207c2:	in     al,0x35
  4207c4:	xchg   ch,dh
  4207c6:	fs (bad) 
  4207c8:	fisttp DWORD PTR [esi]
  4207ca:	rcr    DWORD PTR [ecx+0x2b],cl
  4207cd:	cs jle 0x4207ba
  4207d0:	aaa    
  4207d1:	pop    ds
  4207d2:	pop    ebp
  4207d3:	shr    DWORD PTR [edi+0x1d],0x78
  4207d7:	or     eax,eax
  4207d9:	mov    edx,0x121e9b56
  4207de:	sahf   
  4207df:	out    0x38,al
  4207e1:	inc    edx
  4207e2:	adc    ecx,DWORD PTR [edi]
  4207e4:	inc    ebx
  4207e5:	repnz adc eax,0xc825e46b
  4207eb:	in     al,dx
  4207ec:	popf   
  4207ed:	inc    ecx
  4207ee:	sub    eax,0x31008069
  4207f3:	cmp    cl,ah
  4207f5:	xchg   ecx,eax
  4207f6:	les    eax,FWORD PTR [eax]
  4207f8:	jbe    0x420876
  4207fa:	clc    
  4207fb:	cli    
  4207fc:	fcomp  QWORD PTR [ebp-0x35adc9d4]
  420802:	mov    eax,0x39163c53
  420807:	in     eax,0x81
  420809:	loop   0x4207af
  42080b:	test   al,0x6a
  42080d:	ins    DWORD PTR es:[edi],dx
  42080e:	fisttp QWORD PTR [edx-0x25fb38aa]
  420814:	push   esp
  420815:	xchg   edi,eax
  420816:	add    al,0xe0
  420818:	div    DWORD PTR [edi-0x115a255b]
  42081e:	sub    ebp,eax
  420820:	push   ecx
  420821:	dec    edi
  420822:	sar    ebx,0xf8
  420825:	dec    ebx
  420826:	pop    eax
  420827:	ss mov dl,0xe5
  42082a:	out    0x93,al
  42082c:	jns    0x42083c
  42082e:	test   eax,ecx
  420830:	loope  0x42081a
  420832:	add    DWORD PTR [eax+0x1c],0x48
  420836:	mov    ds:0x82019cf8,eax
  42083b:	scas   al,BYTE PTR es:[edi]
  42083c:	dec    ebp
  42083d:	mov    DWORD PTR [ebx-0x77],eax
  420840:	mov    ebx,0xac0be546
  420845:	jno    0x4208ad
  420847:	shl    edi,0x80
  42084a:	add    dl,BYTE PTR [edx-0x5e]
  42084d:	cdq    
  42084e:	push   esi
  42084f:	or     DWORD PTR [ebx-0x15],esi
  420852:	sahf   
  420853:	or     cl,ch
  420855:	inc    ebx
  420856:	jo     0x42081c
  420858:	inc    ecx
  420859:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42085a:	rcr    BYTE PTR [ebx],1
  42085c:	je     0x420890
  42085e:	gs sbb al,0x4
  420861:	inc    ebx
  420862:	ds (bad) 
  420864:	and    eax,0xd2efd719
  420869:	ins    DWORD PTR es:[edi],dx
  42086a:	sbb    BYTE PTR [esi],bh
  42086c:	mov    cl,0xd0
  42086e:	(bad)  ds:0xd04079f0
  420874:	pop    ebp
  420875:	add    al,cl
  420877:	xor    DWORD PTR [edi],edx
  420879:	pop    ds
  42087a:	js     0x42086f
  42087c:	out    0x6e,al
  42087e:	dec    ebx
  42087f:	ins    BYTE PTR es:[edi],dx
  420880:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420881:	sub    al,0xab
  420883:	mov    DWORD PTR [ebx-0x4ad62d89],ebx
  420889:	ret    
  42088a:	popf   
  42088b:	xor    al,0xed
  42088d:	jle    0x420884
  42088f:	iret   
  420890:	pop    edi
  420891:	inc    edx
  420892:	pop    es
  420893:	xor    BYTE PTR [edi+ecx*8+0x65],0xe7
  420898:	in     eax,0xb5
  42089a:	mov    ecx,0xb0c96cf6
  42089f:	xchg   esi,eax
  4208a0:	loopne 0x42085f
  4208a2:	out    dx,eax
  4208a3:	or     al,0xea
  4208a5:	and    ebp,DWORD PTR [ebp+0x4015bfb9]
  4208ab:	pop    ecx
  4208ac:	out    dx,al
  4208ad:	div    DWORD PTR [ebx+0x2642868]
  4208b3:	mov    esi,0x71687675
  4208b8:	repnz stos DWORD PTR es:[edi],eax
  4208ba:	or     ah,dh
  4208bc:	jnp    0x42086b
  4208be:	inc    ecx
  4208bf:	shl    BYTE PTR [ecx],0x17
  4208c2:	gs out dx,al
  4208c4:	pusha  
  4208c5:	cmp    eax,0xc2141fd2
  4208ca:	and    al,0xc6
  4208cc:	dec    esi
  4208cd:	nop
  4208ce:	idiv   bh
  4208d0:	xor    ebp,DWORD PTR [edi-0xd]
  4208d3:	mov    ch,dl
  4208d5:	loope  0x42087e
  4208d7:	adc    al,0x64
  4208d9:	adc    eax,0x20083f33
  4208de:	pop    ecx
  4208df:	ins    BYTE PTR es:[edi],dx
  4208e0:	std    
  4208e1:	iret   
  4208e2:	xor    eax,DWORD PTR [ebx+ebp*8+0x11]
  4208e6:	dec    eax
  4208e7:	(bad)  
  4208e8:	push   ds
  4208e9:	push   ds
  4208ea:	cmp    esi,DWORD PTR [esi-0x54]
  4208ed:	js     0x420952
  4208ef:	out    0x9b,eax
  4208f1:	mov    ebx,0x25c2fd08
  4208f6:	sbb    ebp,DWORD PTR [esp+esi*1]
  4208f9:	test   DWORD PTR [ecx-0x71],edx
  4208fc:	mov    edx,0x87de2489
  420901:	imul   BYTE PTR [esi+0x46]
  420904:	push   edi
  420905:	in     eax,0xe3
  420907:	shl    ebx,cl
  420909:	retf   
  42090a:	mov    BYTE PTR [eax+eiz*2+0x6],al
  42090e:	cwde   
  42090f:	aam    0xd9
  420911:	int    0x1d
  420913:	aad    0x1f
  420915:	sbb    DWORD PTR [ecx+ecx*1+0x61],eax
  420919:	imul   esp,DWORD PTR [ebx-0x69],0x4028c47a
  420920:	stc    
  420921:	ins    BYTE PTR es:[edi],dx
  420922:	sub    eax,0x4d8cd0e
  420927:	mov    al,ds:0x3e858779
  42092c:	push   ss
  42092d:	mov    cl,0xaf
  42092f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420930:	scas   eax,DWORD PTR es:[edi]
  420931:	ss icebp 
  420933:	out    dx,al
  420934:	xchg   edx,eax
  420935:	jo     0x4208e6
  420937:	fs pop edi
  420939:	inc    edx
  42093a:	xor    eax,0x71a5f14b
  42093f:	push   ebp
  420940:	pusha  
  420941:	and    BYTE PTR [edi-0x5f],dl
  420944:	sub    DWORD PTR [esi],ecx
  420946:	xchg   ebx,eax
  420947:	dec    ebx
  420948:	dec    eax
  420949:	mov    dh,0xd6
  42094b:	xor    bh,BYTE PTR [edx]
  42094d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42094e:	imul   esi,DWORD PTR [ecx],0x92017050
  420954:	mov    edx,DWORD PTR [esi]
  420956:	in     al,dx
  420957:	adc    BYTE PTR [esp+ecx*4-0x70],dl
  42095b:	repz xlat BYTE PTR ds:[ebx]
  42095d:	cmc    
  42095e:	pop    eax
  42095f:	cmp    ecx,edi
  420961:	xor    eax,0x68c71cee
  420966:	inc    ebp
  420967:	int    0x17
  420969:	mov    cl,0xc3
  42096b:	dec    esi
  42096c:	fs jmp 0x40894fad
  420972:	xor    al,0x1c
  420974:	imul   eax,DWORD PTR [esi-0x12386d09],0xffffff8e
  42097b:	pop    esi
  42097c:	jns    0x420979
  42097e:	mov    eax,ds:0x74dd3e7a
  420983:	xor    edi,esp
  420985:	fld    TBYTE PTR [esi-0x412e9362]
  42098b:	adc    eax,0x5b2f905d
  420990:	int3   
  420991:	fisttp WORD PTR [ecx+0x75]
  420994:	outs   dx,BYTE PTR ds:[esi]
  420995:	lds    edi,FWORD PTR [ebp+0x3b]
  420998:	ror    BYTE PTR [ebx-0x1e],0x5b
  42099c:	jmp    DWORD PTR [esi+0x77]
  42099f:	neg    DWORD PTR [ecx-0x21]
  4209a2:	jns    0x420a23
  4209a4:	jg     0x42096e
  4209a6:	mul    DWORD PTR [ebp*4-0xa07d57d]
  4209ad:	int    0x8d
  4209af:	jecxz  0x420953
  4209b1:	xor    al,0x8c
  4209b3:	ins    DWORD PTR es:[edi],dx
  4209b4:	dec    eax
  4209b5:	push   ebx
  4209b6:	mov    bl,0xaa
  4209b8:	rcl    DWORD PTR [ecx-0x11],cl
  4209bb:	ins    BYTE PTR es:[edi],dx
  4209bc:	pop    edx
  4209bd:	and    eax,0x60e83226
  4209c2:	xchg   ebp,eax
  4209c3:	in     al,dx
  4209c4:	aas    
  4209c5:	sar    DWORD PTR [eax-0x5f],1
  4209c8:	jmp    0x420973
  4209ca:	xchg   esi,ebp
  4209cc:	pop    edx
  4209cd:	cmp    dh,BYTE PTR [esp+esi*8+0x71]
  4209d1:	data16 jne 0x420973
  4209d4:	mov    bl,BYTE PTR [esi]
  4209d6:	mov    al,ds:0x5c890e7c
  4209db:	addr16 loopne 0x420987
  4209de:	aaa    
  4209df:	add    bl,BYTE PTR [eax]
  4209e1:	fisubr WORD PTR [ebx-0x41d95a43]
  4209e7:	mov    ch,0x2d
  4209e9:	rcl    BYTE PTR cs:[ecx-0x36],1
  4209ed:	aad    0xd1
  4209ef:	jno    0x4209db
  4209f1:	xor    BYTE PTR [edi],ah
  4209f3:	mov    cl,0x80
  4209f5:	nop
  4209f6:	fmul   DWORD PTR [edx-0x3d21e870]
  4209fc:	(bad)  
  4209fd:	cmp    DWORD PTR [ebp-0x48],esp
  420a00:	inc    eax
  420a01:	ror    ebp,1
  420a03:	test   al,dl
  420a05:	add    DWORD PTR [ebx],0xffffff9f
  420a08:	xchg   BYTE PTR [ebx-0x31],cl
  420a0b:	xchg   DWORD PTR [edi+0x6f],ecx
  420a0e:	sbb    al,0xee
  420a10:	out    0x38,eax
  420a12:	and    al,0xf3
  420a14:	cld    
  420a15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a16:	stos   DWORD PTR es:[edi],eax
  420a17:	jns    0x420a6b
  420a19:	call   0x83be717f
  420a1e:	mov    edi,0xb82ff6e9
  420a23:	push   cs
  420a24:	mov    dh,0x5e
  420a26:	imul   ebx,DWORD PTR [ebx+0x9bcb980],0x422ea16d
  420a30:	loop   0x420a96
  420a32:	stos   DWORD PTR es:[edi],eax
  420a33:	cld    
  420a34:	jmp    0x4209cd
  420a36:	dec    eax
  420a37:	cmp    eax,0xe71d10f0
  420a3c:	mov    edi,0x8504c1f3
  420a41:	das    
  420a42:	adc    bh,BYTE PTR [edx+0x25]
  420a45:	ret    0xb74b
  420a48:	repz mov ah,0x2f
  420a4b:	xor    ebx,0xe5fd3307
  420a51:	add    al,0x26
  420a53:	(bad)  
  420a54:	jle    0x420a39
  420a56:	xchg   edi,eax
  420a57:	xor    eax,0x300a0336
  420a5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a5d:	lock js 0x420a12
  420a60:	pextrw ebp,(bad),0xc5
  420a62:	sub    edi,DWORD PTR [ebx]
  420a64:	call   0xc34d:0x9412cfe5
  420a6b:	inc    ebx
  420a6c:	sar    ah,1
  420a6e:	jmp    0x420a3c
  420a70:	xchg   edi,eax
  420a71:	push   es
  420a72:	mul    edi
  420a74:	or     al,0x6a
  420a76:	iret   
  420a77:	aam    0x82
  420a79:	pop    esp
  420a7a:	mov    WORD PTR ds:0x10a1843d,ds
  420a80:	push   eax
  420a81:	in     al,dx
  420a82:	cmp    DWORD PTR [edi+0xa],0x6605e03c
  420a89:	mov    ch,0x3d
  420a8b:	clc    
  420a8c:	xchg   esp,eax
  420a8d:	sub    DWORD PTR [ecx+0x348ec651],eax
  420a93:	cmp    eax,DWORD PTR [ecx+0x28]
  420a96:	cld    
  420a97:	test   al,0xa9
  420a99:	aad    0xbb
  420a9b:	xchg   DWORD PTR [edi+0x7],edx
  420a9e:	js     0x420ad0
  420aa0:	mov    ebp,0x8d3b163
  420aa5:	jle    0x420acb
  420aa7:	push   ebp
  420aa8:	xchg   edi,eax
  420aa9:	aaa    
  420aaa:	sub    ah,al
  420aac:	shl    DWORD PTR [edx-0x18],1
  420aaf:	or     bl,BYTE PTR [ebp-0x62ca7af6]
  420ab5:	or     eax,0x4ac12bf9
  420aba:	dec    edx
  420abb:	mov    al,ds:0xeb8128cd
  420ac0:	mul    bl
  420ac2:	xchg   esp,eax
  420ac3:	stos   DWORD PTR es:[edi],eax
  420ac4:	push   eax
  420ac5:	xor    DWORD PTR [ebx],0xffffffba
  420ac8:	pop    ebp
  420ac9:	sbb    BYTE PTR [ebp-0x4d25d70f],0x81
  420ad0:	cli    
  420ad1:	frstor [ebx+0x70a8656f]
  420ad7:	xor    esi,DWORD PTR [edx+0x676410b6]
  420add:	cld    
  420ade:	fisubr WORD PTR [edx]
  420ae0:	fwait
  420ae1:	jae    0x420b10
  420ae3:	push   cs
  420ae4:	push   esi
  420ae5:	xor    DWORD PTR [ebx-0x774fe4e9],ecx
  420aeb:	pop    ebp
  420aec:	pop    ds
  420aed:	lock pop esp
  420aef:	mov    WORD PTR [ecx+0x3a],?
  420af2:	xor    eax,0xa6cb1143
  420af7:	and    BYTE PTR [ebx+ebx*8],ch
  420afa:	neg    BYTE PTR [esi]
  420afc:	dec    edi
  420afd:	or     ah,BYTE PTR [ebp-0x35481b16]
  420b03:	mov    ebx,0x901d3dd4
  420b08:	jmp    0xeba87133
  420b0d:	out    dx,eax
  420b0e:	leave  
  420b0f:	or     ecx,DWORD PTR [ecx+ebx*4]
  420b12:	push   ebp
  420b13:	add    DWORD PTR [edi-0x59],esi
  420b16:	pop    edx
  420b17:	jecxz  0x420b25
  420b19:	mov    eax,ds:0x611030a2
  420b1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b1f:	jns    0x420b28
  420b21:	push   esi
  420b22:	mov    dh,0x60
  420b24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b25:	add    ah,BYTE PTR [eax+0x5c]
  420b28:	sub    esp,DWORD PTR [esi-0x69376024]
  420b2e:	mov    eax,0xa7850f41
  420b33:	je     0x420b56
  420b35:	daa    
  420b36:	jg     0x420ae8
  420b38:	mov    bl,0x32
  420b3a:	ret    
  420b3b:	enter  0x8040,0xd9
  420b3f:	or     eax,DWORD PTR [ebx+0x48b74d26]
  420b45:	push   esi
  420b46:	dec    edx
  420b47:	ins    DWORD PTR es:[edi],dx
  420b48:	mov    ecx,?
  420b4a:	out    dx,eax
  420b4b:	jae    0x420ba8
  420b4d:	ins    BYTE PTR es:[edi],dx
  420b4e:	shl    dh,0x4f
  420b51:	popa   
  420b52:	pop    ss
  420b53:	mov    cl,0xb4
  420b55:	(bad)  
  420b56:	in     eax,dx
  420b57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b58:	outs   dx,BYTE PTR ds:[esi]
  420b59:	pop    eax
  420b5a:	in     eax,dx
  420b5b:	jo     0x420b66
  420b5d:	mov    bl,0xa3
  420b5f:	bound  esp,QWORD PTR fs:[ebp-0x696401a6]
  420b66:	mov    esi,0xc4bf1738
  420b6b:	push   esp
  420b6c:	jge    0x420b7a
  420b6e:	fsubp  st(7),st
  420b70:	or     eax,0x5e1c5116
  420b75:	lea    eax,[ecx-0x7c637ebb]
  420b7b:	sbb    edi,DWORD PTR [eax]
  420b7d:	rcr    BYTE PTR [ecx],cl
  420b7f:	pusha  
  420b80:	mov    edi,0xa4d8ed96
  420b85:	lock loop 0x420bee
  420b88:	fisttp QWORD PTR [ebp+0x59dbdd15]
  420b8e:	adc    ecx,DWORD PTR ds:0x9f699630
  420b94:	ffreep st(4)
  420b96:	dec    BYTE PTR [ebp-0x745a53e7]
  420b9c:	jmp    0x420b44
  420b9e:	mov    ebp,0x571d6163
  420ba3:	jmp    0x6308:0x1890eb3f
  420baa:	pop    edi
  420bab:	ret    
  420bac:	popf   
  420bad:	cli    
  420bae:	xchg   esp,eax
  420baf:	jp     0x420c2b
  420bb1:	and    al,0x48
  420bb3:	xchg   ecx,eax
  420bb4:	out    dx,al
  420bb5:	add    eax,0xd721942b
  420bba:	sub    eax,0xe754c94a
  420bbf:	cmp    bl,bl
  420bc1:	ret    
  420bc2:	mov    ds:0xb1b7c5f8,eax
  420bc7:	imul   BYTE PTR [ecx]
  420bc9:	add    ecx,DWORD PTR [ebx+0x50]
  420bcc:	push   ebp
  420bcd:	ret    
  420bce:	fmul   DWORD PTR [esi+0x3c41dd6d]
  420bd4:	xor    BYTE PTR [edx-0x24972b4c],ah
  420bda:	jno    0x420c02
  420bdc:	mov    bh,0xda
  420bde:	adc    bh,dl
  420be0:	test   DWORD PTR [ecx],esp
  420be2:	xor    eax,0x4360c554
  420be7:	inc    edi
  420be8:	add    eax,0xb80d4c0c
  420bed:	out    dx,al
  420bee:	cmp    al,0x6e
  420bf0:	lods   al,BYTE PTR ds:[esi]
  420bf1:	out    dx,al
  420bf2:	stc    
  420bf3:	sbb    BYTE PTR [edx-0x4e],al
  420bf6:	in     eax,0xbc
  420bf8:	shl    bh,1
  420bfa:	lods   eax,DWORD PTR ds:[esi]
  420bfb:	mov    al,0xd0
  420bfd:	aas    
  420bfe:	fstp   DWORD PTR ds:[ecx]
  420c01:	popa   
  420c02:	dec    eax
  420c03:	and    eax,0x2d26726e
  420c08:	and    BYTE PTR [ebx-0x66b6ef78],0x54
  420c0f:	leave  
  420c10:	retf   0xf9fd
  420c13:	mov    ebp,0x2a0d2cf6
  420c18:	imul   ecx,DWORD PTR [edx-0x7531ff5c],0x44d65692
  420c22:	out    dx,al
  420c23:	(bad)  
  420c24:	ins    DWORD PTR es:[edi],dx
  420c25:	or     al,dl
  420c27:	cwde   
  420c28:	test   al,0x37
  420c2a:	xchg   BYTE PTR [ecx-0x4c],ch
  420c2d:	pusha  
  420c2e:	or     BYTE PTR [eax+0x3b],bl
  420c31:	std    
  420c32:	sub    al,0x1
  420c34:	cmp    al,0x16
  420c36:	mov    ecx,0x2be0a46f
  420c3b:	mov    ebp,0x80990d3b
  420c40:	inc    ecx
  420c41:	stc    
  420c42:	lods   eax,DWORD PTR ds:[esi]
  420c43:	cmp    al,0x18
  420c45:	jbe    0x420c4f
  420c47:	out    0x82,eax
  420c49:	jnp    0x420c20
  420c4b:	sub    BYTE PTR ds:0x323ecae7,ch
  420c51:	or     eax,DWORD PTR [edx]
  420c53:	xor    eax,DWORD PTR [ecx+0x7a0e98b7]
  420c59:	jmp    0x420c4f
  420c5b:	add    ch,BYTE PTR [eax-0x17]
  420c5e:	fimul  DWORD PTR [edi-0x1225e327]
  420c64:	test   eax,0x6b43f63e
  420c69:	das    
  420c6a:	push   ds
  420c6b:	aam    0xe
  420c6d:	push   eax
  420c6e:	cld    
  420c6f:	and    ch,bh
  420c71:	movsx  esi,BYTE PTR [edx+0x52]
  420c75:	in     al,dx
  420c76:	jno    0x420c2d
  420c78:	jno    0x420c28
  420c7a:	adc    eax,DWORD PTR [esi-0x11]
  420c7d:	xor    eax,0xf04b07cd
  420c82:	pop    esi
  420c83:	sbb    eax,0x9cabe121
  420c88:	nop
  420c89:	and    edi,eax
  420c8b:	dec    ebp
  420c8c:	jmp    0x395f2818
  420c91:	cmp    ecx,DWORD PTR [esi-0x3]
  420c94:	xchg   esi,eax
  420c95:	call   0xe4c64e25
  420c9a:	jp     0x420ce3
  420c9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c9d:	fmul   st(6),st
  420c9f:	stos   BYTE PTR es:[edi],al
  420ca0:	lea    eax,[edi-0x69ff0292]
  420ca6:	sbb    ebx,DWORD PTR [ecx]
  420ca8:	jge    0x420cd1
  420caa:	push   0x3446fab4
  420caf:	pop    eax
  420cb0:	cmc    
  420cb1:	sahf   
  420cb2:	mov    ah,0x67
  420cb4:	jne    0x420c4e
  420cb6:	rcl    BYTE PTR [eax+0x8],cl
  420cb9:	add    al,0x75
  420cbb:	pop    ebx
  420cbc:	dec    ebp
  420cbd:	fwait
  420cbe:	ins    DWORD PTR es:[edi],dx
  420cbf:	loope  0x420cdf
  420cc1:	(bad)  
  420cc2:	adc    dh,BYTE PTR [edi-0x20]
  420cc5:	lahf   
  420cc6:	ins    DWORD PTR es:[edi],dx
  420cc7:	dec    edi
  420cc8:	xor    ebp,DWORD PTR [ebp+0x2fffa7d1]
  420cce:	jno    0x420c58
  420cd0:	sar    DWORD PTR [esi+0x6fb77f1c],0x85
  420cd7:	retf   
  420cd8:	daa    
  420cd9:	arpl   WORD PTR [edx],cx
  420cdb:	mov    ebp,0x2e8d7cff
  420ce0:	mov    ebp,0x9b74fff1
  420ce5:	add    al,BYTE PTR [ebx+0x713c9623]
  420ceb:	pop    es
  420cec:	mov    al,ds:0x9fc34ee
  420cf1:	arpl   WORD PTR [edi],bp
  420cf3:	mov    bl,0x62
  420cf5:	jmp    0x8320925c
  420cfa:	sbb    al,0x2c
  420cfc:	sub    bl,BYTE PTR [ecx+0x444eef5d]
  420d02:	fist   DWORD PTR [edx+0x789533bc]
  420d08:	mov    dl,0x81
  420d0a:	(bad)  
  420d0b:	scas   al,BYTE PTR es:[edi]
  420d0c:	dec    ecx
  420d0d:	fs push ecx
  420d0f:	fdivr  st(7),st
  420d11:	lods   eax,DWORD PTR ds:[esi]
  420d12:	pop    eax
  420d13:	cmc    
  420d14:	enter  0xbafa,0x19
  420d18:	jecxz  0x420cb4
  420d1a:	mov    bl,0x4f
  420d1c:	pop    esp
  420d1d:	pop    es
  420d1e:	xchg   DWORD PTR [esi+0x59da7c17],edx
  420d24:	jae    0x420d93
  420d26:	ret    
  420d27:	mov    edi,0x8b0aaa90
  420d2c:	or     al,BYTE PTR [eax-0x40]
  420d2f:	pop    es
  420d30:	popf   
  420d31:	loope  0x420cbe
  420d33:	in     al,0xd7
  420d35:	(bad)  
  420d36:	pop    ebx
  420d37:	shl    BYTE PTR [eax-0xe2649ef],cl
  420d3d:	inc    ebx
  420d3e:	mov    es,ebx
  420d40:	bound  esi,QWORD PTR [esi+0x61]
  420d43:	das    
  420d44:	adc    BYTE PTR ds:0x19472a23,0x51
  420d4b:	dec    esi
  420d4c:	pop    ss
  420d4d:	lock add esi,DWORD PTR [eax+0x264f9fed]
  420d54:	fwait
  420d55:	add    al,0x6f
  420d57:	cmp    BYTE PTR [eax],0xcc
  420d5a:	(bad)  
  420d5b:	fcmovnbe st,st(7)
  420d5d:	outs   dx,BYTE PTR ds:[esi]
  420d5e:	call   0xfc63:0x85f680c1
  420d65:	daa    
  420d66:	jnp    0x420d8c
  420d68:	sub    al,0x85
  420d6a:	inc    edx
  420d6b:	add    DWORD PTR [edi],edi
  420d6d:	neg    BYTE PTR [esi]
  420d6f:	aas    
  420d70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d71:	pusha  
  420d72:	ds jnp 0x420cfc
  420d75:	push   esp
  420d76:	sbb    BYTE PTR [ebp-0x70a4649d],dl
  420d7c:	dec    edi
  420d7d:	xor    eax,DWORD PTR [edx+0x1f]
  420d80:	das    
  420d81:	pop    ds
  420d82:	push   esi
  420d83:	adc    edi,DWORD PTR es:[eax-0x23]
  420d87:	cmp    DWORD PTR [ebx-0x7488d3bf],esi
  420d8d:	mov    eax,0xd46a64e0
  420d92:	xor    ah,bl
  420d94:	not    eax
  420d96:	xchg   edi,eax
  420d97:	(bad)  
  420d98:	addr16 je 0x420d78
  420d9b:	jl     0x420dcd
  420d9d:	mov    BYTE PTR [eax],al
  420d9f:	mov    esp,0x7e6a8125
  420da4:	call   0x73d7cc4e
  420da9:	(bad)  
  420daa:	cmp    dl,ah
  420dac:	and    esp,DWORD PTR [esi]
  420dae:	pop    esp
  420daf:	in     eax,0xd5
  420db1:	imul   edx,ebx,0x156c7754
  420db7:	mov    dl,0x98
  420db9:	test   DWORD PTR [ebx-0x449ede7f],0x36a43837
  420dc3:	(bad)  
  420dc4:	loope  0x420e36
  420dc6:	sti    
  420dc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420dc8:	mov    bh,0x7c
  420dca:	pop    esp
  420dcb:	mov    ah,0xc7
  420dcd:	or     al,0xe6
  420dcf:	sti    
  420dd0:	mov    DWORD PTR [ecx+edx*1-0x2c474255],edx
  420dd7:	ds in  al,0x77
  420dda:	imul   edx,DWORD PTR [eax],0x3d
  420ddd:	in     al,dx
  420dde:	dec    esi
  420ddf:	int3   
  420de0:	cmp    al,0x2f
  420de2:	sub    BYTE PTR [edx],0xbe
  420de5:	cmp    cl,BYTE PTR [ebx+0x4a9977b7]
  420deb:	stos   BYTE PTR es:[edi],al
  420dec:	xor    ebp,DWORD PTR [ebp+0x29]
  420def:	pop    ebp
  420df0:	daa    
  420df1:	test   esp,ebx
  420df3:	sub    DWORD PTR [ebx+0x45],esi
  420df6:	xor    ah,BYTE PTR [esi+0x61]
  420df9:	xchg   ebx,eax
  420dfa:	sub    BYTE PTR [edx+0x4649a2b3],ch
  420e00:	xor    al,BYTE PTR [ebx]
  420e02:	xchg   DWORD PTR [edx],eax
  420e04:	cmp    eax,0xc0735a02
  420e09:	into   
  420e0a:	es push 0x97fdbe6a
  420e10:	adc    cl,BYTE PTR [edi]
  420e12:	add    esi,esi
  420e14:	mov    DWORD PTR [edx+0x55],esi
  420e17:	mov    edi,0x9188c760
  420e1c:	add    al,0xca
  420e1e:	addr16 xchg esp,eax
  420e20:	call   0x4f680ef6
  420e25:	leave  
  420e26:	sub    BYTE PTR [eax-0x6b],bh
  420e29:	mov    dl,0x37
  420e2b:	cmp    BYTE PTR [ecx],cl
  420e2d:	xchg   BYTE PTR ds:0x7b772282,ch
  420e33:	int    0x62
  420e35:	pop    edx
  420e36:	aam    0x9c
  420e38:	dec    edx
  420e39:	jg     0x420e67
  420e3b:	pop    edx
  420e3c:	xor    ch,ch
  420e3e:	pusha  
  420e3f:	jbe    0x420eb9
  420e41:	aam    0xa1
  420e43:	mov    ah,0xe2
  420e45:	call   0xee92:0xd62a6c45
  420e4c:	addr16 repz pop ds
  420e4f:	adc    DWORD PTR [esi-0x42],ebx
  420e52:	stc    
  420e53:	jnp    0x420e2b
  420e55:	sbb    eax,DWORD PTR [eax+0x1df4552c]
  420e5b:	fnstenv [esi+0xc]
  420e5e:	add    DWORD PTR [ecx+0x158762f2],edx
  420e64:	pop    esi
  420e65:	xchg   esp,eax
  420e66:	add    eax,0x3adc036b
  420e6b:	idiv   DWORD PTR [eax-0x2f]
  420e6e:	or     esi,edx
  420e70:	jnp    0x420ee2
  420e72:	mov    dh,0x2a
  420e74:	and    DWORD PTR [ebx-0x4dde8e96],edi
  420e7a:	push   esp
  420e7b:	cmp    al,0x5d
  420e7d:	out    dx,al
  420e7e:	jno    0x420e22
  420e80:	mov    esi,0x78291091
  420e85:	loopne 0x420e5a
  420e87:	and    al,ah
  420e89:	test   ah,ch
  420e8b:	inc    edi
  420e8c:	lods   al,BYTE PTR ds:[esi]
  420e8d:	call   0xb7c1:0x6a961f36
  420e94:	cmp    DWORD PTR [ebx],esi
  420e96:	jg     0x420e39
  420e98:	pop    ebp
  420e99:	imul   edi,DWORD PTR [esi+0x0],0x7
  420e9d:	cli    
  420e9e:	(bad)  
  420e9f:	xchg   edx,eax
  420ea0:	fptan  
  420ea2:	adc    edx,0xb69ce84c
  420ea8:	mov    ch,0x89
  420eaa:	pusha  
  420eab:	out    dx,al
  420eac:	mov    gs,WORD PTR [ebx+0x1e]
  420eaf:	into   
  420eb0:	imul   ecx,DWORD PTR [esi],0x35
  420eb3:	sbb    ah,BYTE PTR ds:0x91d4b21e
  420eb9:	outs   dx,DWORD PTR ds:[esi]
  420eba:	sub    ch,BYTE PTR [ebp-0x1d]
  420ebd:	inc    ebp
  420ebe:	xchg   BYTE PTR [ecx],al
  420ec0:	mov    ecx,edx
  420ec2:	add    al,BYTE PTR [eax+0x7b80f5c9]
  420ec8:	add    eax,0x62668189
  420ecd:	in     al,dx
  420ece:	xor    eax,0x883cb4ba
  420ed3:	and    bh,ah
  420ed5:	dec    edx
  420ed6:	xchg   esi,eax
  420ed7:	enter  0x855b,0xef
  420edb:	shl    DWORD PTR cs:[eax+0x59],cl
  420edf:	(bad)  
  420ee0:	jae    0x420f25
  420ee2:	imul   edx,DWORD PTR [ecx],0xc5d6c127
  420ee8:	push   edi
  420ee9:	int    0x6f
  420eeb:	mov    bl,0xe5
  420eed:	and    al,0x0
  420eef:	sub    esi,DWORD PTR [eax+0x2fa1412c]
  420ef5:	out    dx,al
  420ef6:	sti    
  420ef7:	mov    ch,BYTE PTR [ebp-0x10d7be83]
  420efd:	sub    BYTE PTR [esi],dh
  420eff:	fmul   st,st(2)
  420f01:	scas   eax,DWORD PTR es:[edi]
  420f02:	mov    edx,0x36e1c06c
  420f07:	xor    ebx,ebp
  420f09:	sbb    eax,0xdc3c55d6
  420f0e:	rol    edi,cl
  420f10:	addr16 mov bh,0xf7
  420f13:	dec    esp
  420f14:	or     ch,BYTE PTR [ebx]
  420f16:	cld    
  420f17:	add    ebx,DWORD PTR [esi+ebp*4]
  420f1a:	jp     0x420ed2
  420f1c:	fistp  QWORD PTR ds:0xd1b47bc5
  420f22:	cmc    
  420f23:	retw   
  420f25:	jns    0x420f89
  420f27:	aad    0xab
  420f29:	adc    bl,cl
  420f2b:	sbb    al,0xd7
  420f2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f2e:	or     eax,0x5dbf17b9
  420f33:	iret   
  420f34:	and    edx,DWORD PTR [edi-0x68d4cb3a]
  420f3a:	pop    ebx
  420f3b:	or     dh,BYTE PTR [ecx-0x7b9b7190]
  420f41:	adc    DWORD PTR [esi-0x4b28b8ca],0x6ea8298a
  420f4b:	in     eax,dx
  420f4c:	sub    ecx,DWORD PTR [ecx-0x1a]
  420f4f:	pop    esp
  420f50:	push   ds
  420f51:	cwde   
  420f52:	push   0xffffffda
  420f54:	add    al,0x67
  420f56:	scas   eax,DWORD PTR es:[edi]
  420f57:	arpl   WORD PTR [ecx+0x3c499b6f],bp
  420f5d:	fstp   QWORD PTR [ecx]
  420f5f:	or     dl,BYTE PTR [edi-0x791b8694]
  420f65:	retf   0xc8e2
  420f68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f69:	fld    QWORD PTR [edi]
  420f6b:	push   esp
  420f6c:	jns    0x420f1e
  420f6e:	jmp    0x78a4:0x6a8a9f7d
  420f75:	std    
  420f76:	aas    
  420f77:	cld    
  420f78:	inc    ebx
  420f79:	sbb    al,0x0
  420f7b:	mov    ds:0x3ab162ab,al
  420f80:	rcr    BYTE PTR [eax+0x26],1
  420f83:	xchg   esp,eax
  420f84:	fistp  DWORD PTR [esi]
  420f86:	add    DWORD PTR [ecx+0x33],edi
  420f89:	div    cl
  420f8b:	and    DWORD PTR ds:0x62e95bb,edi
  420f91:	out    dx,al
  420f92:	arpl   dx,di
  420f94:	mov    cl,0xbc
  420f96:	mov    al,0xfc
  420f98:	mov    edx,0x4b8e8f4d
  420f9d:	imul   eax,DWORD PTR [ecx-0x54],0x7f
  420fa1:	pop    ebx
  420fa2:	(bad)  
  420fa3:	sbb    esp,esi
  420fa5:	leave  
  420fa6:	js     0x420fe9
  420fa8:	push   edi
  420fa9:	lea    eax,[esi-0x2325bc10]
  420faf:	mul    DWORD PTR [ebx+0x53]
  420fb2:	repz pop ebx
  420fb4:	push   0xe16e35a3
  420fb9:	sub    al,0x1c
  420fbb:	or     bl,BYTE PTR [ecx+0x3fc57ab1]
  420fc1:	and    edx,ebx
  420fc3:	lock call 0x4a56:0xa7e0fdaf
  420fcb:	inc    ecx
  420fcc:	cmp    BYTE PTR [ecx-0x7e],ah
  420fcf:	mov    dl,0x45
  420fd1:	mov    ds:0x15e87df0,al
  420fd6:	js     0x421010
  420fd8:	sub    al,0x15
  420fda:	ins    BYTE PTR es:[edi],dx
  420fdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420fdc:	inc    esi
  420fdd:	aad    0x44
  420fdf:	mov    DWORD PTR [edi-0x38918af0],ebp
  420fe5:	(bad)  
  420fe6:	mov    esp,0xb025c91c
  420feb:	push   edx
  420fec:	icebp  
  420fed:	lds    ebx,FWORD PTR [ebp-0x6fd53b61]
  420ff3:	ja     0x420fba
  420ff5:	mov    ds:0x5f78db90,eax
  420ffa:	bswap  ebx
  420ffc:	popf   
  420ffd:	jl     0x42101f
  420fff:	jbe    0x42100a
  421001:	xor    DWORD PTR [eax+0x7fe666c6],ebx
  421007:	nop
  421008:	pop    ebx
  421009:	test   DWORD PTR [edi-0x3c],edi
  42100c:	call   0x1ab1b3bc
  421011:	fst    QWORD PTR [ecx]
  421013:	jp     0x421075
  421015:	test   eax,0x1fd82f88
  42101a:	iret   
  42101b:	arpl   WORD PTR [edi-0x32],bp
  42101e:	fadd   st,st(5)
  421020:	mov    DWORD PTR [ebp+ecx*8+0x70],ecx
  421024:	(bad)  
  421025:	jb     0x421054
  421027:	adc    BYTE PTR ds:0x330a2f36,bh
  42102d:	std    
  42102e:	inc    edi
  42102f:	mov    cs,WORD PTR [ebx-0x77]
  421032:	mov    BYTE PTR [edx+0x61],al
  421035:	inc    edx
  421036:	mov    dl,0xfe
  421038:	clc    
  421039:	xchg   edx,eax
  42103a:	pop    esi
  42103b:	test   BYTE PTR [edx-0x3926525e],al
  421041:	mov    ds:0xf54ae02a,eax
  421046:	sbb    al,0xb7
  421048:	arpl   WORD PTR [edi+0x43],bp
  42104b:	mov    eax,0xb8670dbe
  421050:	je     0x420ffd
  421052:	push   edi
  421053:	dec    edx
  421054:	scas   al,BYTE PTR es:[edi]
  421055:	xor    dl,BYTE PTR [ecx+0x5c]
  421058:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421059:	inc    edi
  42105a:	sbb    BYTE PTR [edi-0x57],bh
  42105d:	scas   al,BYTE PTR es:[edi]
  42105e:	dec    ebx
  42105f:	ror    bl,cl
  421061:	add    esp,ebp
  421063:	je     0x42104e
  421065:	jo     0x420ff5
  421067:	or     al,0x88
  421069:	dec    ebp
  42106a:	arpl   WORD PTR [edx+0x3b7e0f5f],ax
  421070:	sub    BYTE PTR [eax+0x17b3c5c7],cl
  421076:	xchg   ebp,eax
  421077:	sub    eax,0x97b95fc2
  42107c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42107d:	in     eax,dx
  42107e:	outs   dx,BYTE PTR ds:[esi]
  42107f:	cmp    edi,DWORD PTR [ebp+edx*1-0x47572362]
  421086:	jno    0x421071
  421088:	mov    dl,cl
  42108a:	push   ebx
  42108b:	iret   
  42108c:	xchg   ebx,eax
  42108d:	push   edi
  42108e:	cld    
  42108f:	xchg   ebx,eax
  421090:	je     0x4210fe
  421092:	ins    DWORD PTR es:[edi],dx
  421093:	cs cld 
  421095:	leave  
  421096:	call   0x857dff5b
  42109b:	or     BYTE PTR [ebp+0x365cd02f],0xdb
  4210a2:	fdiv   QWORD PTR [eax+0x357aa328]
  4210a8:	addr16 out dx,eax
  4210aa:	mov    BYTE PTR [ebp-0x21],ch
  4210ad:	pop    ecx
  4210ae:	arpl   WORD PTR [edi],di
  4210b0:	xchg   esi,eax
  4210b1:	sub    eax,0x58ff35a3
  4210b6:	pushf  
  4210b7:	int3   
  4210b8:	int    0xb0
  4210ba:	fstp   DWORD PTR [ebp+0x29b953c4]
  4210c0:	jle    0x421103
  4210c2:	xchg   ecx,eax
  4210c3:	xchg   ecx,eax
  4210c4:	and    DWORD PTR [ecx+0x4c0af358],eax
  4210ca:	jo     0x421067
  4210cc:	pop    ebx
  4210cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4210ce:	xor    esi,edx
  4210d0:	xor    al,0x53
  4210d2:	cmp    BYTE PTR [edx+ebp*4-0x7bf813a9],0xe4
  4210da:	xlat   BYTE PTR ds:[ebx]
  4210db:	cli    
  4210dc:	nop
  4210dd:	jmp    esi
  4210df:	dec    esi
  4210e0:	or     ebx,DWORD PTR [esi+edx*1]
  4210e3:	cmp    bh,BYTE PTR [edi+0x69c00312]
  4210e9:	addr16 push ecx
  4210eb:	retf   0x2abb
  4210ee:	js     0x42109a
  4210f0:	int3   
  4210f1:	push   eax
  4210f2:	or     eax,0xf77ef4e
  4210f7:	iret   
  4210f8:	cs push ecx
  4210fa:	sub    DWORD PTR [ebp+0x15],edx
  4210fd:	inc    esp
  4210fe:	icebp  
  4210ff:	push   esi
  421100:	int3   
  421101:	dec    ecx
  421102:	jb     0x421094
  421104:	and    al,0x16
  421106:	sbb    al,0x6f
  421108:	out    dx,eax
  421109:	cmp    BYTE PTR [ebx],dh
  42110b:	(bad)
  42110e:	data16 test BYTE PTR [esi-0xd],bh
  421112:	test   DWORD PTR [ecx+0x41],0xfdaae2c8
  421119:	pop    ss
  42111a:	push   0x38748095
  42111f:	dec    ebp
  421120:	jnp    0x4210b9
  421122:	shl    cl,cl
  421124:	(bad)  
  421125:	(bad)  
  421126:	loop   0x4210c5
  421128:	shl    DWORD PTR [esp+edx*1-0x23],1
  42112c:	add    al,0x47
  42112e:	cmc    
  42112f:	lods   eax,DWORD PTR ds:[esi]
  421130:	retf   0x9c6e
  421133:	jmp    0x4210ce
  421135:	dec    esp
  421136:	pop    es
  421137:	(bad)  
  421138:	xor    al,0x64
  42113a:	jmp    0x7428:0xd0d5d764
  421141:	dec    edi
  421142:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421143:	shl    DWORD PTR [ebp+0x7a5515d1],cl
  421149:	cld    
  42114a:	aam    0xbe
  42114c:	inc    ebp
  42114d:	clc    
  42114e:	fs aad 0x1b
  421151:	and    al,0x66
  421153:	ficom  DWORD PTR [edx-0x16a3cb96]
  421159:	push   0x200281d1
  42115e:	fdivp  st(6),st
  421160:	push   ds
  421161:	lods   al,BYTE PTR ds:[esi]
  421162:	repnz arpl WORD PTR [esi-0x13],cx
  421166:	shl    DWORD PTR [ebx+0x51ac165b],0xeb
  42116d:	loope  0x4211c4
  42116f:	xor    BYTE PTR [edi-0x454fbb18],al
  421175:	repnz popf 
  421177:	dec    ecx
  421178:	dec    ecx
  421179:	out    dx,al
  42117a:	loop   0x421119
  42117c:	sub    DWORD PTR [edi+0xb],edx
  42117f:	outs   dx,BYTE PTR ds:[esi]
  421180:	and    esi,DWORD PTR [ebp-0x49]
  421183:	or     ebx,ecx
  421185:	idiv   DWORD PTR [eax-0x4d]
  421188:	push   ecx
  421189:	fcmovu st,st(3)
  42118b:	call   0x33503a14
  421190:	jmp    0xef4b:0x8675777
  421197:	mov    esi,0xe41fcdc8
  42119c:	addr16 cli 
  42119e:	cmp    DWORD PTR [edi+0x1],ecx
  4211a1:	xchg   ebp,eax
  4211a2:	jle    0x4211fe
  4211a4:	repz test eax,0xb71cf222
  4211aa:	inc    esp
  4211ab:	cdq    
  4211ac:	xchg   esp,eax
  4211ad:	xchg   edi,eax
  4211ae:	ins    DWORD PTR es:[edi],dx
  4211af:	mov    al,ds:0x2749f414
  4211b4:	xchg   DWORD PTR [ecx+0x2cf8768a],eax
  4211ba:	cmp    eax,DWORD PTR [edx]
  4211bc:	pop    edx
  4211bd:	cli    
  4211be:	cmp    ah,0x10
  4211c1:	jle    0x4211f5
  4211c3:	retf   
  4211c4:	jp     0x4211a6
  4211c6:	repz sub edx,DWORD PTR [eax-0x52826c3b]
  4211cd:	stc    
  4211ce:	imul   esi,ebx,0xffffff81
  4211d1:	rcr    eax,0x96
  4211d4:	fwait
  4211d5:	test   eax,0x52502a7
  4211da:	out    0x76,al
  4211dc:	cmp    al,0xa3
  4211de:	cmp    BYTE PTR [ebx+0xdeaccc6],ah
  4211e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211e5:	inc    ecx
  4211e6:	test   eax,0xf437a3f5
  4211eb:	jns    0x4211d0
  4211ed:	in     al,dx
  4211ee:	outs   dx,BYTE PTR ds:[esi]
  4211ef:	add    ecx,eax
  4211f1:	scas   eax,DWORD PTR es:[edi]
  4211f2:	pushf  
  4211f3:	jb     0x421243
  4211f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211f6:	icebp  
  4211f7:	pop    ecx
  4211f8:	sbb    dl,BYTE PTR [edx]
  4211fa:	mov    al,ds:0xa9255fa9
  4211ff:	push   es
  421200:	add    al,0x4e
  421202:	in     al,dx
  421203:	jno    0x42126e
  421205:	pop    esp
  421206:	xchg   esi,eax
  421207:	inc    esi
  421208:	popa   
  421209:	int    0xda
  42120b:	loop   0x42127b
  42120d:	or     al,0x7b
  42120f:	mov    edx,0x2f501748
  421214:	pop    es
  421215:	pop    ebx
  421216:	mov    edx,0x99629f8a
  42121b:	test   DWORD PTR [ecx+0x47],edx
  42121e:	sub    BYTE PTR ds:0x342b7969,ch
  421224:	retf   
  421225:	int    0xc5
  421227:	outs   dx,BYTE PTR ds:[esi]
  421228:	sub    eax,0x13bdf2e4
  42122d:	push   ss
  42122e:	ja     0x4211f2
  421230:	ins    BYTE PTR es:[edi],dx
  421231:	test   DWORD PTR [eax+0x34de566d],esi
  421237:	adc    edx,DWORD PTR [esp+ecx*8]
  42123a:	mov    cl,0xca
  42123c:	push   edi
  42123d:	fldcw  WORD PTR [edx]
  42123f:	and    cl,BYTE PTR [edi]
  421241:	retf   0xa373
  421244:	cmc    
  421245:	rol    BYTE PTR [ecx],1
  421247:	shl    BYTE PTR [ebx+0x27],1
  42124a:	lods   eax,DWORD PTR ds:[esi]
  42124b:	adc    BYTE PTR ds:0x60fed461,0x95
  421252:	xchg   BYTE PTR [edx],dh
  421254:	imul   eax,DWORD PTR [ecx],0x6cec8b30
  42125a:	lock or al,0x3c
  42125d:	jnp    0x4212b8
  42125f:	jl     0x4212d1
  421261:	jae    0x4211f2
  421263:	add    esi,esi
  421265:	mov    dh,0x5f
  421267:	sbb    esp,DWORD PTR [ebp+0x3387ce26]
  42126d:	mov    ebx,ecx
  42126f:	out    dx,eax
  421270:	repz push esi
  421272:	sbb    BYTE PTR ds:0x782e3b03,dh
  421278:	cmp    edi,esp
  42127a:	sti    
  42127b:	adc    BYTE PTR [ecx],dh
  42127d:	fmul   DWORD PTR [ebp-0x45]
  421280:	fbstp  TBYTE PTR [eax+0x15b7e598]
  421286:	dec    edi
  421287:	test   eax,0xbd33e960
  42128c:	sub    eax,0x63065083
  421291:	ss mov ch,0xd9
  421294:	push   edi
  421295:	mov    al,ds:0xcd39464f
  42129a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42129b:	mov    dl,0xbe
  42129d:	sbb    BYTE PTR [ecx+0xb],ch
  4212a0:	pop    ebp
  4212a1:	pop    es
  4212a2:	mov    dl,BYTE PTR [edx]
  4212a4:	mov    edx,0x87a91fb9
  4212a9:	mov    dh,0x4a
  4212ab:	cmp    ch,0x37
  4212ae:	add    al,0xcf
  4212b0:	xor    DWORD PTR [ecx],0xf61c4b9e
  4212b6:	sub    DWORD PTR [ebp+0x4a85df21],ecx
  4212bc:	lock and al,BYTE PTR [ecx+0x4a]
  4212c0:	repz pop edx
  4212c2:	adc    DWORD PTR [ebx-0x780a3d81],esp
  4212c8:	xchg   BYTE PTR [ebp-0x51],dl
  4212cb:	adc    eax,DWORD PTR [edi+0x71]
  4212ce:	mov    ch,0x2f
  4212d0:	sahf   
  4212d1:	mov    al,ds:0xb50fead2
  4212d6:	sar    eax,cl
  4212d8:	data16 and ch,0xf1
  4212dc:	xor    DWORD PTR [edx+0x671d3971],edi
  4212e2:	cmp    bl,BYTE PTR [edx+0x1fa60eed]
  4212e8:	cmp    al,0x60
  4212ea:	and    dl,BYTE PTR [eax+0x55a52749]
  4212f0:	jb     0x4212bd
  4212f2:	jnp    0x4212be
  4212f4:	xchg   DWORD PTR [esi+0x6af50ef5],edx
  4212fa:	out    dx,al
  4212fb:	rol    DWORD PTR ds:0x8b520f6a,cl
  421301:	das    
  421302:	repnz addr16 cld 
  421305:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421306:	lock inc esi
  421308:	stos   BYTE PTR es:[edi],al
  421309:	lock ins DWORD PTR es:[edi],dx
  42130b:	sub    al,0xc8
  42130d:	sub    al,0xc6
  42130f:	pushf  
  421310:	shr    DWORD PTR [ecx],0x9f
  421313:	mov    ebp,0x64ea92a
  421318:	jnp    0x4212eb
  42131a:	clc    
  42131b:	mov    dl,0xf4
  42131d:	ss addr16 sbb eax,0x6384f619
  421324:	fild   WORD PTR [esi]
  421326:	xor    bh,BYTE PTR [ebx]
  421328:	or     eax,DWORD PTR ds:0xac784bef
  42132e:	lahf   
  42132f:	dec    edi
  421330:	call   0x5150b252
  421335:	mov    dh,0x3c
  421337:	pop    ebx
  421338:	test   BYTE PTR [edx],0xd7
  42133b:	in     al,0x47
  42133d:	test   DWORD PTR [eax],0xbc62b230
  421343:	mov    DWORD PTR [ebp+edx*2+0x12],ebp
  421347:	gs sub eax,0xdc2d8c69
  42134d:	jns    0x421307
  42134f:	mov    bl,0xf7
  421351:	pop    ebx
  421352:	pushf  
  421353:	xchg   ebx,eax
  421354:	adc    al,0x6f
  421356:	and    al,0x85
  421358:	add    al,0x58
  42135a:	jae    0x42139d
  42135c:	and    al,0x3c
  42135e:	aam    0x49
  421360:	out    0x27,eax
  421362:	sti    
  421363:	dec    edx
  421364:	scas   eax,DWORD PTR es:[edi]
  421365:	jle    0x4212ff
  421367:	lock push edi
  421369:	stos   DWORD PTR es:[edi],eax
  42136a:	and    eax,0x5edbb15f
  42136f:	scas   eax,DWORD PTR es:[di]
  421371:	push   esp
  421372:	lds    esp,FWORD PTR [ecx-0x5e]
  421375:	mov    ch,0xb5
  421377:	pop    edi
  421378:	js     0x4213ea
  42137a:	ror    BYTE PTR [edi],0x58
  42137d:	xchg   ebp,eax
  42137e:	sti    
  42137f:	push   0xffffffc0
  421381:	pop    edx
  421382:	push   eax
  421383:	mov    ebp,0x16a015f3
  421388:	cmp    DWORD PTR [edi+0x57],ebp
  42138b:	mov    ecx,0x74dfd2cb
  421390:	sub    bx,cx
  421393:	add    BYTE PTR [ebp-0x1400bc75],0x5b
  42139a:	push   edi
  42139b:	das    
  42139c:	out    dx,eax
  42139d:	or     esi,DWORD PTR [esi]
  42139f:	cmp    al,BYTE PTR [ebx-0x4d]
  4213a2:	fdivr  DWORD PTR ds:[ebx]
  4213a5:	mov    DWORD PTR [edx],edi
  4213a7:	and    al,0x3d
  4213a9:	loope  0x421408
  4213ab:	sbb    DWORD PTR [ecx+0xf],ecx
  4213ae:	or     BYTE PTR [ecx+0x78],dl
  4213b1:	sub    DWORD PTR [edx-0x4ea91cd9],edx
  4213b7:	push   ss
  4213b8:	mov    ch,0x82
  4213ba:	add    ebp,eax
  4213bc:	aaa    
  4213bd:	imul   esp,DWORD PTR [eax+0x4b],0xb9450bfc
  4213c4:	xor    edx,edx
  4213c6:	mov    bl,0x91
  4213c8:	ret    0x7e52
  4213cb:	loop   0x421359
  4213cd:	dec    esp
  4213ce:	mov    cl,0x86
  4213d0:	in     al,0xdc
  4213d2:	test   dl,0x89
  4213d5:	and    BYTE PTR [eax-0x2a],ah
  4213d8:	push   edi
  4213d9:	mov    al,0xe0
  4213db:	xor    edx,esp
  4213dd:	arpl   WORD PTR [esi+0x5c74a960],ax
  4213e3:	pusha  
  4213e4:	push   0x79
  4213e6:	test   DWORD PTR [edx+ebx*8+0x49d53438],esi
  4213ed:	rep stos BYTE PTR es:[edi],al
  4213ef:	fisubr DWORD PTR [ecx-0x5d498354]
  4213f5:	pop    esi
  4213f6:	sbb    DWORD PTR [ecx-0x77],edi
  4213f9:	loop   0x421477
  4213fb:	pop    esi
  4213fc:	cmc    
  4213fd:	test   BYTE PTR [ebx],dh
  4213ff:	mov    ds:0xb234b198,al
  421404:	push   ds
  421405:	push   ss
  421406:	mov    ecx,DWORD PTR [edi+esi*4-0x7f]
  42140a:	cmp    al,0x5e
  42140c:	adc    DWORD PTR [ebx-0x37],eax
  42140f:	pop    ecx
  421410:	data16 aam 0x86
  421413:	adc    esi,edx
  421415:	and    ch,BYTE PTR [esi-0x551e01cc]
  42141b:	push   ds
  42141c:	cmp    edx,DWORD PTR [ebx+ebx*8-0x6a4bafa0]
  421423:	pop    es
  421424:	ds leave 
  421426:	scas   al,BYTE PTR es:[edi]
  421427:	imul   ebp,edx,0xc6a02e42
  42142d:	dec    eax
  42142e:	outs   dx,BYTE PTR ds:[esi]
  42142f:	push   edx
  421430:	cmp    DWORD PTR [ebp-0x4bd5d567],0xcdac1711
  42143a:	out    dx,eax
  42143b:	inc    eax
  42143c:	xor    ch,BYTE PTR ds:0xf0b61b6a
  421442:	adc    bh,BYTE PTR fs:[ecx-0x5b7a6691]
  421449:	sub    dl,al
  42144b:	xchg   edx,eax
  42144c:	(bad)  
  42144d:	fsub   st,st(6)
  42144f:	pop    edx
  421450:	mov    esp,0x9e95a910
  421455:	adc    eax,0x693ff21e
  42145a:	pop    es
  42145b:	xchg   edx,eax
  42145c:	int    0x51
  42145e:	xor    BYTE PTR [ebx+0x5ebe0ee2],cl
  421464:	lock pushf 
  421466:	pop    ecx
  421467:	mov    ebx,0x94fba611
  42146c:	and    ebx,DWORD PTR [ebp-0x1781cb93]
  421472:	pop    es
  421473:	mov    ebp,esp
  421475:	sub    al,0xf5
  421477:	das    
  421478:	rol    BYTE PTR [edi],1
  42147a:	ss push esp
  42147c:	dec    ebx
  42147d:	inc    edi
  42147e:	rcl    dh,cl
  421480:	pop    ebx
  421481:	fnstenv [ebx+edx*1+0x28905087]
  421488:	mov    dl,0x42
  42148a:	jmp    0x42145e
  42148c:	cs ds dec ecx
  42148f:	mov    ebx,esp
  421491:	es pop esi
  421493:	shr    DWORD PTR [esp+eax*4],cl
  421496:	sbb    DWORD PTR [edi],ecx
  421498:	or     al,0x5a
  42149a:	retf   
  42149b:	and    DWORD PTR [ebx+eax*2-0x24],eax
  42149f:	test   BYTE PTR [eax],dl
  4214a1:	sbb    esi,DWORD PTR [eax+eiz*1]
  4214a4:	mov    gs,WORD PTR [ecx]
  4214a6:	in     eax,dx
  4214a7:	out    dx,eax
  4214a8:	cmp    DWORD PTR [edi-0x1c],edx
  4214ab:	pop    edi
  4214ac:	or     al,BYTE PTR [edi-0x33]
  4214af:	adc    al,0x3e
  4214b1:	sbb    eax,0xfce6f8fd
  4214b6:	dec    edx
  4214b7:	lahf   
  4214b8:	add    eax,0xb56e776e
  4214bd:	mov    ch,0xd0
  4214bf:	mov    esp,0x61fd16c1
  4214c4:	push   es
  4214c5:	adc    ah,dl
  4214c7:	dec    edx
  4214c8:	mov    edx,0x89814213
  4214cd:	lods   eax,DWORD PTR ds:[esi]
  4214ce:	mov    dl,0x6e
  4214d0:	fild   QWORD PTR [edx]
  4214d2:	daa    
  4214d3:	leave  
  4214d4:	adc    DWORD PTR [ebp+0x53],edx
  4214d7:	js     0x4214f8
  4214d9:	jno    0x421532
  4214db:	xchg   ebx,eax
  4214dc:	into   
  4214dd:	shr    BYTE PTR [esi-0x9ea732e],0x1f
  4214e4:	add    eax,0x3e7b5034
  4214e9:	(bad)  
  4214ea:	cmp    eax,0xd9674a20
  4214ef:	ss mov ecx,0xc4038616
  4214f5:	adc    ebp,ebx
  4214f7:	mov    BYTE PTR [ebp-0x54],cl
  4214fa:	rol    BYTE PTR [ebp+0x51],0xd2
  4214fe:	js     0x42155d
  421500:	mov    ds:0x4f9939dc,al
  421505:	lods   al,BYTE PTR ds:[esi]
  421506:	(bad)  
  421507:	lods   al,BYTE PTR ds:[esi]
  421508:	jb     0x421537
  42150a:	pop    es
  42150b:	sbb    al,0xda
  42150d:	mov    ds:0x80737f52,al
  421512:	jge    0x421547
  421514:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421515:	pop    ecx
  421516:	popf   
  421517:	sub    bh,bh
  421519:	xor    eax,0x6fe82381
  42151e:	cdq    
  42151f:	xchg   edi,eax
  421520:	cmp    DWORD PTR gs:[ebx],eax
  421523:	fidiv  DWORD PTR [esi]
  421525:	push   ecx
  421526:	ss mov ch,ch
  421529:	inc    edx
  42152a:	sub    DWORD PTR [edx],0x34
  42152d:	dec    eax
  42152e:	dec    ebp
  42152f:	les    eax,FWORD PTR [ecx-0x6d]
  421532:	std    
  421533:	mov    bl,0xad
  421535:	mov    dl,cl
  421537:	or     BYTE PTR [esp+ebp*8],ch
  42153a:	pop    edx
  42153b:	xchg   esp,eax
  42153c:	pop    es
  42153d:	dec    eax
  42153e:	aas    
  42153f:	sbb    al,0x8c
  421541:	push   edx
  421542:	test   al,0x5e
  421544:	pop    ebp
  421545:	pop    ecx
  421546:	ret    
  421547:	nop
  421548:	nop
  421549:	nop
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x70
  421556:	mov    DWORD PTR [ebp-0x30],0x0
  42155d:	mov    DWORD PTR [ebp-0x70],0x0
  421564:	mov    DWORD PTR [ebp-0x58],0x0
  42156b:	mov    DWORD PTR [ebp-0x60],0x0
  421572:	mov    DWORD PTR [ebp-0x4c],0x0
  421579:	mov    DWORD PTR [ebp-0x8],0x0
  421580:	mov    DWORD PTR [ebp-0x18],0x0
  421587:	mov    DWORD PTR [ebp-0x48],0x0
  42158e:	mov    DWORD PTR [ebp-0x10],0x0
  421595:	mov    DWORD PTR [ebp-0x6c],0x0
  42159c:	mov    DWORD PTR [ebp-0x54],0x0
  4215a3:	mov    DWORD PTR [ebp-0x4],0x0
  4215aa:	mov    DWORD PTR [ebp-0x2c],0x0
  4215b1:	mov    DWORD PTR [ebp-0x50],0x0
  4215b8:	mov    DWORD PTR [ebp-0x68],0x0
  4215bf:	mov    DWORD PTR [ebp-0xc],0x0
  4215c6:	mov    DWORD PTR [ebp-0x5c],0x0
  4215cd:	mov    DWORD PTR [ebp-0x14],0x0
  4215d4:	mov    eax,ds:0x428150
  4215d9:	mov    DWORD PTR [ebp-0x28],eax
  4215dc:	mov    ecx,DWORD PTR ds:0x428154
  4215e2:	mov    DWORD PTR [ebp-0x24],ecx
  4215e5:	mov    edx,DWORD PTR ds:0x428158
  4215eb:	mov    DWORD PTR [ebp-0x20],edx
  4215ee:	mov    al,ds:0x42815c
  4215f3:	mov    BYTE PTR [ebp-0x1c],al
  4215f6:	mov    ecx,DWORD PTR ds:0x428140
  4215fc:	mov    DWORD PTR [ebp-0x40],ecx
  4215ff:	mov    edx,DWORD PTR ds:0x428144
  421605:	mov    DWORD PTR [ebp-0x3c],edx
  421608:	mov    eax,ds:0x428148
  42160d:	mov    DWORD PTR [ebp-0x38],eax
  421610:	mov    cx,WORD PTR ds:0x42814c
  421617:	mov    WORD PTR [ebp-0x34],cx
  42161b:	mov    dl,BYTE PTR ds:0x42814e
  421621:	mov    BYTE PTR [ebp-0x32],dl
  421624:	mov    DWORD PTR [ebp-0x2c],0x40
  42162b:	mov    eax,DWORD PTR [ebp-0x60]
  42162e:	push   eax
  42162f:	push   0x0
  421631:	push   0x0
  421633:	mov    ecx,DWORD PTR [ebp-0x68]
  421636:	push   ecx
  421637:	call   0x422a10
  42163c:	lea    edx,[ebp-0xc]
  42163f:	push   edx
  421640:	lea    eax,[ebp-0xc]
  421643:	push   eax
  421644:	lea    ecx,[ebp-0x14]
  421647:	push   ecx
  421648:	call   DWORD PTR ds:0x428004
  42164e:	test   eax,eax
  421650:	je     0x42166b
  421652:	mov    edx,DWORD PTR [ebp-0x60]
  421655:	push   edx
  421656:	push   0x8
  421658:	mov    eax,DWORD PTR [ebp-0x68]
  42165b:	push   eax
  42165c:	call   DWORD PTR ds:0x428030
  421662:	mov    ecx,DWORD PTR [ebp-0xc]
  421665:	add    ecx,0x1
  421668:	mov    DWORD PTR [ebp-0xc],ecx
  42166b:	push   0x0
  42166d:	push   0x0
  42166f:	push   0x0
  421671:	call   DWORD PTR ds:0x428000
  421677:	mov    BYTE PTR [ebp-0x40],0x56
  42167b:	call   DWORD PTR ds:0x42803c
  421681:	mov    DWORD PTR [ebp-0x30],eax
  421684:	mov    BYTE PTR [ebp-0x3e],0x72
  421688:	movzx  edx,WORD PTR [ebp-0x30]
  42168c:	test   edx,edx
  42168e:	jne    0x4216e0
  421690:	mov    BYTE PTR [ebp-0x34],0x0
  421694:	mov    DWORD PTR [ebp-0x14],0xe0d
  42169b:	lea    eax,[ebp-0x28]
  42169e:	push   eax
  42169f:	call   DWORD PTR ds:0x428044
  4216a5:	mov    DWORD PTR [ebp-0x60],eax
  4216a8:	mov    DWORD PTR [ebp-0x58],0x3a
  4216af:	lea    ecx,[ebp-0x40]
  4216b2:	push   ecx
  4216b3:	mov    edx,DWORD PTR [ebp-0x60]
  4216b6:	push   edx
  4216b7:	call   DWORD PTR ds:0x428040
  4216bd:	mov    DWORD PTR [ebp-0x44],eax
  4216c0:	mov    DWORD PTR [ebp-0x4],0xcebf829e
  4216c7:	push   0x3
  4216c9:	push   0x0
  4216cb:	push   0x0
  4216cd:	mov    eax,DWORD PTR [ebp-0x68]
  4216d0:	push   eax
  4216d1:	call   DWORD PTR ds:0x42812c
  4216d7:	mov    DWORD PTR [ebp-0x6c],0x10e7cf
  4216de:	jmp    0x421701
  4216e0:	mov    BYTE PTR ds:0x445fe8,0x0
  4216e7:	mov    BYTE PTR ds:0x42d1f0,0x0
  4216ee:	push   0x0
  4216f0:	mov    ecx,DWORD PTR [ebp-0x60]
  4216f3:	push   ecx
  4216f4:	call   DWORD PTR ds:0x42800c
  4216fa:	mov    BYTE PTR ds:0x4439a8,0x0
  421701:	push   DWORD PTR [ebp-0x2c]
  421704:	push   0x1000
  421709:	mov    eax,DWORD PTR [ebp-0x14]
  42170c:	add    eax,0x23
  42170f:	add    eax,0x23
  421712:	push   eax
  421713:	xor    eax,eax
  421715:	push   eax
  421716:	mov    ecx,DWORD PTR [ebp-0x44]
  421719:	call   ecx
  42171b:	mov    edx,eax
  42171d:	mov    DWORD PTR [ebp-0x8],edx
  421720:	mov    edx,DWORD PTR [ebp-0x6c]
  421723:	sub    edx,0xdae0b
  421729:	mov    DWORD PTR [ebp-0x6c],edx
  42172c:	cmp    DWORD PTR [ebp-0x8],0x0
  421730:	jne    0x42174d
  421732:	mov    eax,DWORD PTR [ebp-0x68]
  421735:	push   eax
  421736:	push   0x0
  421738:	mov    ecx,DWORD PTR [ebp-0x60]
  42173b:	push   ecx
  42173c:	push   0x1
  42173e:	push   0x0
  421740:	call   DWORD PTR ds:0x428120
  421746:	mov    BYTE PTR ds:0x4439a8,0x0
  42174d:	mov    edx,DWORD PTR [ebp-0x8]
  421750:	add    edx,DWORD PTR [ebp-0x14]
  421753:	mov    eax,DWORD PTR [ebp-0x4]
  421756:	mov    DWORD PTR [edx],eax
  421758:	mov    DWORD PTR [ebp-0x30],0x410000
  42175f:	mov    ecx,DWORD PTR [ebp-0x60]
  421762:	push   ecx
  421763:	call   DWORD PTR ds:0x428048
  421769:	call   DWORD PTR ds:0x428130
  42176f:	push   DWORD PTR ds:0x428044
  421775:	pop    edx
  421776:	mov    DWORD PTR [ebp-0x70],edx
  421779:	mov    edx,DWORD PTR [ebp-0x8]
  42177c:	add    edx,DWORD PTR [ebp-0x58]
  42177f:	mov    DWORD PTR [ebp-0x5c],edx
  421782:	mov    eax,ds:0x428040
  421787:	mov    DWORD PTR [ebp-0x4c],eax
  42178a:	mov    ecx,DWORD PTR [ebp-0x8]
  42178d:	add    ecx,DWORD PTR [ebp-0x14]
  421790:	mov    edx,DWORD PTR [ebp+0x8]
  421793:	mov    DWORD PTR [ecx+0x4],edx
  421796:	mov    eax,DWORD PTR [ebp-0x8]
  421799:	add    eax,DWORD PTR [ebp-0x14]
  42179c:	mov    DWORD PTR [ebp-0x10],eax
  42179f:	mov    ecx,DWORD PTR [ebp-0x68]
  4217a2:	push   ecx
  4217a3:	call   DWORD PTR ds:0x428050
  4217a9:	cmp    DWORD PTR [ebp-0x6c],0x0
  4217ad:	jbe    0x4217ca
  4217af:	mov    edx,DWORD PTR [ebp-0x10]
  4217b2:	push   edx
  4217b3:	mov    eax,DWORD PTR [ebp-0x14]
  4217b6:	push   eax
  4217b7:	mov    ecx,DWORD PTR [ebp-0x30]
  4217ba:	add    ecx,DWORD PTR [ebp-0x6c]
  4217bd:	push   ecx
  4217be:	mov    edx,DWORD PTR [ebp-0x8]
  4217c1:	push   edx
  4217c2:	call   0x411000
  4217c7:	add    esp,0x10
  4217ca:	cmp    DWORD PTR [ebp-0x5c],0x0
  4217ce:	je     0x4217de
  4217d0:	push   DWORD PTR [ebp-0x4c]
  4217d3:	push   DWORD PTR [ebp-0x70]
  4217d6:	mov    edx,DWORD PTR [ebp-0x5c]
  4217d9:	push   eax
  4217da:	jmp    edx
  4217dc:	jmp    0x4217e4
  4217de:	mov    eax,DWORD PTR [ebp+0x8]
  4217e1:	mov    DWORD PTR [ebp-0x18],eax
  4217e4:	mov    eax,0x1
  4217e9:	mov    esp,ebp
  4217eb:	pop    ebp
  4217ec:	ret    
  4217ed:	int3   
  4217ee:	int3   
  4217ef:	int3   
  4217f0:	push   ebp
  4217f1:	mov    ebp,esp
  4217f3:	sub    esp,0x8
  4217f6:	push   esi
  4217f7:	push   0xa
  4217f9:	mov    DWORD PTR [ebp-0x4],0x0
  421800:	call   DWORD PTR ds:0x428028
  421806:	mov    esi,DWORD PTR ds:0x42803c
  42180c:	push   0xa
  42180e:	push   0xa
  421810:	push   0x0
  421812:	mov    DWORD PTR [ebp-0x8],esi
  421815:	call   DWORD PTR ds:0x428010
  42181b:	test   esi,esi
  42181d:	jne    0x421829
  42181f:	push   0xa
  421821:	push   esi
  421822:	push   esi
  421823:	call   DWORD PTR ds:0x428024
  421829:	call   DWORD PTR ds:0x428020
  42182f:	push   0x0
  421831:	push   0x4e
  421833:	push   0x1e
  421835:	push   0x0
  421837:	push   0xffffffff
  421839:	call   DWORD PTR ds:0x42801c
  42183f:	test   eax,eax
  421841:	je     0x421852
  421843:	push   0x0
  421845:	push   0x1
  421847:	push   0x0
  421849:	call   DWORD PTR ds:0x428018
  42184f:	mov    DWORD PTR [ebp-0x4],eax
  421852:	mov    esi,DWORD PTR [ebp-0x8]
  421855:	call   esi
  421857:	mov    DWORD PTR [ebp-0x4],eax
  42185a:	cmp    DWORD PTR [ebp-0x4],0x57
  42185e:	jne    0x421879
  421860:	push   0xad95e52f
  421865:	call   0x421550
  42186a:	add    esp,0x4
  42186d:	push   0x1
  42186f:	push   0x0
  421871:	push   0x0
  421873:	call   DWORD PTR ds:0x428128
  421879:	xor    eax,eax
  42187b:	pop    esi
  42187c:	mov    esp,ebp
  42187e:	pop    ebp
  42187f:	ret    
  421880:	sub    esp,0x10
  421883:	push   0x0
  421885:	push   0x0
  421887:	call   DWORD PTR ds:0x428034
  42188d:	lea    eax,[esp+0x0]
  421891:	push   eax
  421892:	call   DWORD PTR ds:0x42804c
  421898:	push   0xa
  42189a:	call   DWORD PTR ds:0x428028
  4218a0:	cmp    WORD PTR [esp+0x0],0x0
  4218a6:	je     0x4218c4
  4218a8:	push   0x0
  4218aa:	push   0x0
  4218ac:	push   0x0
  4218ae:	push   0x0
  4218b0:	call   0x422a10
  4218b5:	push   0x0
  4218b7:	call   0x4217f0
  4218bc:	add    esp,0x4
  4218bf:	jmp    0x4229f1
  4218c4:	jmp    FWORD PTR [ebx-0x29]
  4218c7:	rcl    DWORD PTR [ebp+0x3c],0xb0
  4218cb:	cmp    ch,dh
  4218cd:	mov    cl,0x7
  4218cf:	jecxz  0x421866
  4218d1:	xor    ecx,ebx
  4218d3:	lea    edx,[ecx-0x13]
  4218d6:	aas    
  4218d7:	mov    al,0x38
  4218d9:	cmc    
  4218da:	mov    ch,0x7
  4218dc:	jecxz  0x4218b3
  4218de:	into   
  4218df:	lea    edx,es:[ecx+0x55]
  4218e3:	aas    
  4218e4:	mov    al,0x38
  4218e6:	cmc    
  4218e7:	mov    ch,0x7
  4218e9:	jecxz  0x421880
  4218eb:	into   
  4218ec:	lea    edx,es:[ecx+0x55]
  4218f0:	aas    
  4218f1:	mov    al,0x38
  4218f3:	cmc    
  4218f4:	mov    ch,0x7
  4218f6:	jecxz  0x42188d
  4218f8:	into   
  4218f9:	lea    edx,es:[ecx+0x55]
  4218fd:	aas    
  4218fe:	mov    al,0x38
  421900:	cmc    
  421901:	dec    ebp
  421902:	pop    es
  421903:	jecxz  0x42189a
  421905:	sar    BYTE PTR [ecx],0x37
  421908:	pop    edi
  421909:	push   ebp
  42190a:	mov    edi,DWORD PTR [ecx+0x60dd4f5]
  421910:	scas   eax,DWORD PTR es:[edi]
  421911:	pop    eax
  421912:	out    dx,eax
  421913:	jb     0x4218fa
  421915:	cmp    BYTE PTR [esi],ah
  421917:	pop    ds
  421918:	ror    BYTE PTR [edx-0x66],0xd2
  42191c:	jne    0x4218a0
  42191e:	clc    
  42191f:	out    dx,al
  421920:	inc    ebp
  421921:	in     al,dx
  421922:	aas    
  421923:	cmp    edx,DWORD PTR [eax-0x3c]
  421926:	sbb    BYTE PTR [edi-0x1f6ed830],dl
  42192c:	mov    al,ds:0x753fe406
  421931:	jnp    0x421932
  421933:	imul   edx,ebp,0xffffffd8
  421936:	push   0x2be0f087
  42193b:	sbb    BYTE PTR [ebx+0x71],0x3f
  42193f:	mov    al,0x38
  421941:	cmc    
  421942:	mov    ch,0x7
  421944:	jecxz  0x4218d8
  421946:	push   edi
  421947:	fcmovbe st,st(4)
  421949:	adc    ch,BYTE PTR [ebp+0xd7bbaad]
  42194f:	daa    
  421950:	or     eax,0x2c5c6da0
  421955:	aad    0x34
  421957:	pop    ecx
  421958:	xor    eax,0xbf67c0ef
  42195d:	pop    edi
  42195e:	xchg   BYTE PTR [ebp-0x3c8a1b3c],ch
  421964:	pop    edi
  421965:	addr16 aad 0x1
  421968:	(bad)  
  421969:	(bad)  
  42196b:	jno    0x42190c
  42196d:	loop   0x421917
  42196f:	mov    ah,0x5b
  421971:	adc    eax,edi
  421973:	and    dh,BYTE PTR [edx]
  421975:	mov    edi,0xdfe91635
  42197a:	ss mov ah,0x87
  42197d:	sbb    edx,ebp
  42197f:	ds mov edx,0xd270d60
  421985:	mov    al,ds:0xa52c5d6d
  42198a:	test   al,0xc7
  42198c:	xor    eax,0xbf75e00f
  421991:	dec    edx
  421992:	sbb    eax,DWORD PTR [edi]
  421994:	les    edi,FWORD PTR [esi-0x18]
  421997:	ins    BYTE PTR es:[edi],dx
  421998:	pop    edi
  421999:	aaa    
  42199a:	dec    eax
  42199b:	stos   BYTE PTR es:[edi],al
  42199c:	(bad)  
  42199d:	in     eax,dx
  42199e:	(bad)  
  42199f:	jmp    0x421940
  4219a1:	mov    esi,ds
  4219a3:	pop    ds
  4219a4:	pop    ebx
  4219a5:	or     eax,0xb732bf5a
  4219aa:	dec    ebp
  4219ab:	xchg   ebp,eax
  4219ac:	jmp    0xe587c178
  4219b1:	adc    ch,BYTE PTR [ebp-0xac74553]
  4219b7:	mov    ch,0x7
  4219b9:	jecxz  0x421950
  4219bb:	into   
  4219bc:	fst    QWORD PTR es:[edx*2-0x8c603c1]
  4219c4:	mov    ch,0xeb
  4219c6:	add    dl,cl
  4219c8:	and    DWORD PTR [esi],0x3f55518d
  4219ce:	mov    al,0x38
  4219d0:	cmc    
  4219d1:	push   ebp
  4219d2:	pop    es
  4219d3:	loopne 0x421969
  4219d5:	lds    esp,FWORD PTR [edi]
  4219d7:	xchg   DWORD PTR [ecx+0x55],edx
  4219da:	shl    DWORD PTR [eax+edi*1-0x1cfe4e0b],cl
  4219e1:	xchg   ebp,eax
  4219e2:	into   
  4219e3:	lea    edx,es:[eax-0x18]
  4219e7:	aas    
  4219e8:	mov    al,0x38
  4219ea:	in     eax,0xb5
  4219ec:	pop    es
  4219ed:	jecxz  0x421984
  4219ef:	retf   
  4219f0:	lea    edx,es:[ecx+0x14]
  4219f4:	aas    
  4219f5:	mov    al,0x28
  4219f7:	cmc    
  4219f8:	mov    ch,0x7
  4219fa:	loope  0x421991
  4219fc:	into   
  4219fd:	and    ecx,DWORD PTR [ebp-0x4fc0aab0]
  421a03:	cmp    ch,dh
  421a05:	mov    al,0x7
  421a07:	loop   0x42199e
  421a09:	into   
  421a0a:	lea    edx,es:[ecx+0x55]
  421a0e:	mov    edi,0xb1f538bb
  421a13:	pop    es
  421a14:	jecxz  0x421a3e
  421a16:	jmp    DWORD PTR [ebx]
  421a18:	lea    edx,[ebx+0x55]
  421a1b:	aas    
  421a1c:	xor    BYTE PTR [eax],bh
  421a1e:	cmc    
  421a1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a20:	pop    es
  421a21:	jecxz  0x4219a8
  421a23:	into   
  421a24:	lea    edx,es:[ecx+0x45]
  421a28:	aas    
  421a29:	mov    al,0x28
  421a2b:	cmc    
  421a2c:	mov    ch,0x7
  421a2e:	jecxz  0x4219c5
  421a30:	into   
  421a31:	lea    edx,ss:[ecx+0x55]
  421a35:	aas    
  421a36:	mov    al,0x38
  421a38:	cmc    
  421a39:	mov    ch,0x7
  421a3b:	jecxz  0x4219d2
  421a3d:	dec    edx
  421a3e:	dec    eax
  421a3f:	xchg   BYTE PTR [ecx+0x3c],dl
  421a42:	cmp    al,0xb0
  421a44:	cmp    ch,dh
  421a46:	test   DWORD PTR [ebx+eiz*8],ecx
  421a49:	pop    edx
  421a4a:	repz lea edx,es:[ecx+0x55]
  421a4f:	aas    
  421a50:	mov    al,0x38
  421a52:	cmc    
  421a53:	mov    ch,0x7
  421a55:	jecxz  0x4219ec
  421a57:	into   
  421a58:	lea    edx,es:[ecx+0x55]
  421a5c:	aas    
  421a5d:	mov    al,0x38
  421a5f:	cmc    
  421a60:	mov    ch,0x7
  421a62:	jecxz  0x4219f9
  421a64:	into   
  421a65:	lea    edx,es:[ecx+0x55]
  421a69:	aas    
  421a6a:	mov    al,0x38
  421a6c:	cmc    
  421a6d:	mov    ch,0x7
  421a6f:	jecxz  0x421a06
  421a71:	into   
  421a72:	lea    edx,es:[ecx+0x55]
  421a76:	aas    
  421a77:	mov    al,0x38
  421a79:	cmc    
  421a7a:	mov    ch,0x7
  421a7c:	jecxz  0x421a13
  421a7e:	into   
  421a7f:	lea    edx,es:[ecx+0x55]
  421a83:	aas    
  421a84:	mov    al,0x38
  421a86:	cmc    
  421a87:	mov    ch,0x7
  421a89:	jecxz  0x421a20
  421a8b:	into   
  421a8c:	lea    edx,es:[ecx+0x55]
  421a90:	aas    
  421a91:	mov    al,0x38
  421a93:	cmc    
  421a94:	mov    ch,0x7
  421a96:	jecxz  0x421a2d
  421a98:	into   
  421a99:	lea    edx,es:[ecx+0x55]
  421a9d:	aas    
  421a9e:	mov    al,0x38
  421aa0:	cmc    
  421aa1:	mov    ch,0x7
  421aa3:	jecxz  0x421a3a
  421aa5:	into   
  421aa6:	lea    edx,es:[ecx+0x55]
  421aaa:	aas    
  421aab:	mov    al,0x38
  421aad:	cmc    
  421aae:	mov    ch,0x7
  421ab0:	jecxz  0x421a47
  421ab2:	into   
  421ab3:	lea    edi,es:[edi+0x21]
  421ab7:	pop    edx
  421ab8:	enter  0xf54c,0xb5
  421abc:	pop    es
  421abd:	jecxz  0x421a74
  421abf:	lds    esp,FWORD PTR [esi]
  421ac1:	lea    eax,[ecx+0x55]
  421ac4:	aas    
  421ac5:	mov    al,0x2
  421ac7:	icebp  
  421ac8:	mov    ch,0x7
  421aca:	out    0x95,eax
  421acc:	into   
  421acd:	jbe    0x421a97
  421acf:	adc    ah,BYTE PTR [edi+0x6b]
  421ad2:	(bad)  
  421ad3:	cmp    ch,dh
  421ad5:	mov    ch,0x7
  421ad7:	jecxz  0x421a6e
  421ad9:	out    dx,al
  421ada:	lea    esi,es:[ecx+0x4ac34d7b]
  421ae1:	xchg   esi,eax
  421ae2:	mov    ch,0x7
  421ae4:	jecxz  0x421a7b
  421ae6:	sahf   
  421ae7:	lea    edx,es:[ecx+0x65]
  421aeb:	xor    al,0xb0
  421aed:	cmp    BYTE PTR [ebp-0x541cf84b],ah
  421af3:	retf   0x8d26
  421af6:	push   ecx
  421af7:	push   ebp
  421af8:	aas    
  421af9:	mov    al,0x38
  421afb:	cmc    
  421afc:	mov    ch,0x7
  421afe:	jecxz  0x421a95
  421b00:	into   
  421b01:	push   es
  421b02:	lea    edx,[ecx-0x4b]
  421b05:	aas    
  421b06:	mov    al,0x38
  421b08:	cmc    
  421b09:	mov    ch,0x7
  421b0b:	jecxz  0x421aa2
  421b0d:	into   
  421b0e:	lea    edx,es:[ecx+0x55]
  421b12:	aas    
  421b13:	mov    al,0x38
  421b15:	cmc    
  421b16:	mov    ch,0x7
  421b18:	jecxz  0x421aaf
  421b1a:	into   
  421b1b:	lea    edx,es:[ecx+0x55]
  421b1f:	aas    
  421b20:	mov    al,0x38
  421b22:	cmc    
  421b23:	mov    ch,0x7
  421b25:	jecxz  0x421abc
  421b27:	into   
  421b28:	lea    edx,es:[ecx+0x55]
  421b2c:	aas    
  421b2d:	mov    al,0x38
  421b2f:	cmc    
  421b30:	mov    ch,0x7
  421b32:	jecxz  0x421ac9
  421b34:	into   
  421b35:	lea    edx,es:[ecx+0x55]
  421b39:	aas    
  421b3a:	mov    al,0x38
  421b3c:	cmc    
  421b3d:	mov    ch,0x7
  421b3f:	jecxz  0x421ad6
  421b41:	into   
  421b42:	lea    edx,es:[ecx+0x55]
  421b46:	aas    
  421b47:	mov    al,0x38
  421b49:	cmc    
  421b4a:	mov    ch,0x7
  421b4c:	jecxz  0x421ae3
  421b4e:	into   
  421b4f:	lea    edx,es:[ecx+0x55]
  421b53:	aas    
  421b54:	mov    al,0x38
  421b56:	cmc    
  421b57:	mov    ch,0x7
  421b59:	jecxz  0x421af0
  421b5b:	into   
  421b5c:	lea    edx,es:[ecx+0x55]
  421b60:	aas    
  421b61:	mov    al,0x38
  421b63:	cmc    
  421b64:	mov    ch,0x7
  421b66:	jecxz  0x421afd
  421b68:	into   
  421b69:	lea    edx,es:[ecx+0x55]
  421b6d:	aas    
  421b6e:	mov    al,0x38
  421b70:	cmc    
  421b71:	mov    ch,0x7
  421b73:	jecxz  0x421b0a
  421b75:	into   
  421b76:	lea    edx,es:[ecx+0x55]
  421b7a:	aas    
  421b7b:	mov    al,0x38
  421b7d:	cmc    
  421b7e:	mov    ch,0x7
  421b80:	jecxz  0x421b17
  421b82:	into   
  421b83:	lea    edx,es:[ecx+0x55]
  421b87:	aas    
  421b88:	mov    al,0x38
  421b8a:	cmc    
  421b8b:	mov    ch,0x7
  421b8d:	jecxz  0x421b24
  421b8f:	into   
  421b90:	lea    edx,es:[ecx+0x55]
  421b94:	aas    
  421b95:	mov    al,0x38
  421b97:	cmc    
  421b98:	mov    ch,0x7
  421b9a:	jecxz  0x421b31
  421b9c:	into   
  421b9d:	lea    edx,es:[ecx+0x55]
  421ba1:	aas    
  421ba2:	mov    al,0x38
  421ba4:	cmc    
  421ba5:	mov    ch,0x7
  421ba7:	jecxz  0x421b3e
  421ba9:	into   
  421baa:	lea    edx,es:[ecx+0x55]
  421bae:	aas    
  421baf:	mov    al,0x38
  421bb1:	cmc    
  421bb2:	mov    ch,0x7
  421bb4:	jecxz  0x421b4b
  421bb6:	into   
  421bb7:	lea    edx,es:[ecx+0x55]
  421bbb:	aas    
  421bbc:	mov    al,0x38
  421bbe:	cmc    
  421bbf:	mov    ch,0x7
  421bc1:	jecxz  0x421b58
  421bc3:	into   
  421bc4:	lea    edx,es:[ecx+0x55]
  421bc8:	aas    
  421bc9:	mov    al,0x38
  421bcb:	cmc    
  421bcc:	mov    ch,0x7
  421bce:	jecxz  0x421b65
  421bd0:	into   
  421bd1:	lea    edx,es:[ecx+0x55]
  421bd5:	aas    
  421bd6:	mov    al,0x38
  421bd8:	cmc    
  421bd9:	mov    ch,0x7
  421bdb:	jecxz  0x421b72
  421bdd:	into   
  421bde:	lea    edx,es:[ecx+0x55]
  421be2:	aas    
  421be3:	mov    al,0x38
  421be5:	cmc    
  421be6:	mov    ch,0x7
  421be8:	jecxz  0x421b7f
  421bea:	into   
  421beb:	lea    edx,es:[ecx+0x55]
  421bef:	aas    
  421bf0:	mov    al,0x38
  421bf2:	cmc    
  421bf3:	mov    ch,0x7
  421bf5:	jecxz  0x421b8c
  421bf7:	into   
  421bf8:	lea    edx,es:[ecx+0x55]
  421bfc:	aas    
  421bfd:	mov    al,0x38
  421bff:	cmc    
  421c00:	mov    ch,0x7
  421c02:	jecxz  0x421b99
  421c04:	into   
  421c05:	lea    edx,es:[ecx+0x55]
  421c09:	aas    
  421c0a:	mov    al,0x38
  421c0c:	cmc    
  421c0d:	mov    ch,0x7
  421c0f:	jecxz  0x421ba6
  421c11:	into   
  421c12:	lea    edx,es:[ecx+0x55]
  421c16:	aas    
  421c17:	mov    al,0x38
  421c19:	cmc    
  421c1a:	mov    ch,0x7
  421c1c:	jecxz  0x421bb3
  421c1e:	into   
  421c1f:	lea    edx,es:[ecx+0x55]
  421c23:	aas    
  421c24:	mov    al,0x38
  421c26:	cmc    
  421c27:	mov    ch,0x7
  421c29:	jecxz  0x421bc0
  421c2b:	into   
  421c2c:	lea    edx,es:[ecx+0x55]
  421c30:	aas    
  421c31:	mov    al,0x38
  421c33:	cmc    
  421c34:	mov    ch,0x7
  421c36:	jecxz  0x421bcd
  421c38:	into   
  421c39:	lea    edx,es:[ecx+0x55]
  421c3d:	aas    
  421c3e:	mov    al,0x38
  421c40:	cmc    
  421c41:	mov    ch,0x7
  421c43:	jecxz  0x421bda
  421c45:	into   
  421c46:	lea    edx,es:[ecx+0x55]
  421c4a:	aas    
  421c4b:	mov    al,0x38
  421c4d:	cmc    
  421c4e:	mov    ch,0x7
  421c50:	jecxz  0x421be7
  421c52:	into   
  421c53:	lea    edx,es:[ecx+0x55]
  421c57:	aas    
  421c58:	mov    al,0x38
  421c5a:	cmc    
  421c5b:	mov    ch,0x7
  421c5d:	jecxz  0x421bf4
  421c5f:	into   
  421c60:	lea    edx,es:[ecx+0x55]
  421c64:	aas    
  421c65:	mov    al,0x38
  421c67:	cmc    
  421c68:	mov    ch,0x7
  421c6a:	jecxz  0x421c01
  421c6c:	into   
  421c6d:	lea    edx,es:[ecx+0x55]
  421c71:	aas    
  421c72:	mov    al,0x38
  421c74:	cmc    
  421c75:	mov    ch,0x7
  421c77:	jecxz  0x421c0e
  421c79:	into   
  421c7a:	lea    edx,es:[ecx+0x55]
  421c7e:	aas    
  421c7f:	mov    al,0x38
  421c81:	cmc    
  421c82:	mov    ch,0x7
  421c84:	jecxz  0x421c1b
  421c86:	into   
  421c87:	lea    edx,es:[ecx+0x55]
  421c8b:	aas    
  421c8c:	mov    al,0x38
  421c8e:	cmc    
  421c8f:	mov    ch,0x7
  421c91:	jecxz  0x421c28
  421c93:	into   
  421c94:	lea    edx,es:[ecx+0x55]
  421c98:	aas    
  421c99:	mov    al,0x38
  421c9b:	cmc    
  421c9c:	mov    ch,0x7
  421c9e:	jecxz  0x421c35
  421ca0:	into   
  421ca1:	lea    edx,es:[ecx+0x55]
  421ca5:	aas    
  421ca6:	mov    al,0x38
  421ca8:	cmc    
  421ca9:	mov    ch,0x7
  421cab:	jecxz  0x421c42
  421cad:	into   
  421cae:	lea    edx,es:[ecx+0x55]
  421cb2:	aas    
  421cb3:	mov    al,0x38
  421cb5:	cmc    
  421cb6:	mov    ch,0x7
  421cb8:	jecxz  0x421c4f
  421cba:	into   
  421cbb:	lea    edx,es:[ecx+0x55]
  421cbf:	aas    
  421cc0:	mov    al,0x38
  421cc2:	cmc    
  421cc3:	mov    ch,0x7
  421cc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421cc6:	jnp    0x421c8c
  421cc8:	mov    es:0xb02f5551,al
  421cce:	cmp    bh,bl
  421cd0:	pop    ss
  421cd1:	fst    QWORD PTR [edx+0x130b31f3]
  421cd7:	(bad)  
  421cd8:	add    eax,0xe6d086d2
  421cdd:	add    DWORD PTR [edx+0x7c4ae485],edx
  421ce3:	sahf   
  421ce4:	loopne 0x421cc8
  421ce6:	sub    ebp,ebx
  421ce8:	fdivr  QWORD PTR [edi+0x34]
  421ceb:	ror    ebp,0xf7
  421cee:	pop    esi
  421cef:	sbb    DWORD PTR [edx+eiz*2+0x1aa78e1a],esi
  421cf6:	cmc    
  421cf7:	xchg   edx,eax
  421cf8:	mov    al,ds:0x4b9fc06b
  421cfd:	and    al,0x63
  421cff:	push   0x9589a4e2
  421d04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d05:	pop    esp
  421d06:	lds    eax,FWORD PTR [ecx+eiz*1-0x4dc2d3b1]
  421d0d:	test   DWORD PTR [edi+edi*8-0x2a061e88],ebx
  421d14:	in     eax,0x3
  421d16:	mov    edi,0x3b9cf18f
  421d1b:	daa    
  421d1c:	inc    ecx
  421d1d:	retf   0x72a9
  421d20:	(bad)  
  421d21:	and    al,0x60
  421d23:	icebp  
  421d24:	push   ss
  421d25:	mov    DWORD PTR [edx],edx
  421d27:	jne    0x421ce5
  421d29:	jno    0x421d23
  421d2b:	fnstcw WORD PTR [ebp-0x27796797]
  421d31:	imul   esp,DWORD PTR [esi+0x6ed53568],0x43
  421d38:	jbe    0x421cd3
  421d3a:	and    esi,ebp
  421d3c:	sbb    BYTE PTR [ebp-0x32],ch
  421d3f:	mov    ch,0xb7
  421d41:	(bad)  
  421d42:	pusha  
  421d43:	jae    0x421dbb
  421d45:	ins    DWORD PTR es:[edi],dx
  421d46:	sub    al,0x43
  421d48:	xchg   ecx,eax
  421d49:	and    eax,0xb71513ad
  421d4e:	call   0x99343915
  421d53:	aam    0x33
  421d55:	mov    ah,0xab
  421d57:	jl     0x421d1e
  421d59:	outs   dx,DWORD PTR ds:[esi]
  421d5a:	add    al,0xbc
  421d5c:	jl     0x421dd9
  421d5e:	and    DWORD PTR [esi+0x5],ebx
  421d61:	or     ecx,DWORD PTR [edi+0x4]
  421d64:	in     al,0xdd
  421d66:	jl     0x421ddb
  421d68:	jno    0x421d70
  421d6a:	add    ecx,DWORD PTR [eax+0x105cc451]
  421d70:	sahf   
  421d71:	mov    eax,0x8e7e63ee
  421d76:	inc    edi
  421d77:	xlat   BYTE PTR ds:[ebx]
  421d78:	or     BYTE PTR [eax+eiz*8+0x10],cl
  421d7c:	sbb    eax,DWORD PTR ds:0x3f7ce57c
  421d82:	cmp    ecx,DWORD PTR [edx-0x4a]
  421d85:	mov    dl,0x33
  421d87:	lahf   
  421d88:	(bad)  [ebx]
  421d8a:	cmp    BYTE PTR [edi],ch
  421d8c:	or     edi,eax
  421d8e:	pop    esp
  421d8f:	jmp    0xfdd3:0x65529b7e
  421d96:	xor    ah,ch
  421d98:	cld    
  421d99:	push   ebp
  421d9a:	mov    ch,BYTE PTR [ecx+0xb]
  421d9d:	adc    ah,0x96
  421da0:	add    eax,0xd377f268
  421da5:	pop    ebp
  421da6:	fld    DWORD PTR [ebp-0x576251f9]
  421dac:	int3   
  421dad:	out    0x90,eax
  421daf:	addr16 pop esi
  421db1:	sbb    eax,0x7e165680
  421db6:	fs and edi,esp
  421db9:	inc    edi
  421dba:	inc    edi
  421dbb:	scas   eax,DWORD PTR es:[edi]
  421dbc:	push   ecx
  421dbd:	dec    esi
  421dbe:	jb     0x421de5
  421dc0:	(bad)  
  421dc1:	xor    al,BYTE PTR [esi]
  421dc3:	test   BYTE PTR [esi-0x61d54447],dh
  421dc9:	or     BYTE PTR [ebx+0x7a0225b3],0xfe
  421dd0:	lock cmc 
  421dd2:	loop   0x421d9b
  421dd4:	rol    DWORD PTR [ecx-0x54],cl
  421dd7:	xor    ah,ch
  421dd9:	mov    cl,0x8b
  421ddb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ddc:	aam    0xe8
  421dde:	adc    ah,BYTE PTR cs:[esp+0x2b]
  421de3:	leave  
  421de4:	lds    ecx,FWORD PTR [ebx+0x42be131d]
  421dea:	lods   al,BYTE PTR ds:[esi]
  421deb:	pop    esi
  421dec:	sub    ecx,DWORD PTR [eax+0x75]
  421def:	add    eax,0x4253631f
  421df4:	pop    esi
  421df5:	mov    bl,0xa4
  421df7:	pop    ebx
  421df8:	test   eax,0x424c1881
  421dfd:	mov    cl,0x6d
  421dff:	test   ebx,0x4979ae87
  421e05:	or     BYTE PTR [ebp+0x1f],0x54
  421e09:	pop    esi
  421e0a:	push   ss
  421e0b:	arpl   WORD PTR ds:0x7118af0,cx
  421e11:	xchg   esi,eax
  421e12:	fmul   st,st(0)
  421e14:	sti    
  421e15:	mov    ecx,0x63d0f63b
  421e1a:	leave  
  421e1b:	dec    ecx
  421e1c:	les    eax,FWORD PTR [ebx-0x743abc8c]
  421e22:	adc    esi,esi
  421e24:	pop    ebp
  421e25:	(bad)  
  421e26:	out    0x94,eax
  421e28:	dec    esp
  421e29:	xor    eax,0xc913d2c3
  421e2e:	ret    
  421e2f:	push   eax
  421e30:	out    0x5b,eax
  421e32:	mov    DWORD PTR [esi+0x49],0x34b9ca3e
  421e39:	add    ah,BYTE PTR [edi-0x8]
  421e3c:	sub    DWORD PTR [edx+edx*1],edx
  421e3f:	add    BYTE PTR [ecx-0x63],dl
  421e42:	imul   esp,DWORD PTR [eax+0xcce1f94],0xffffffea
  421e49:	jmp    0x421de8
  421e4b:	fistp  WORD PTR [edi-0x493f553]
  421e51:	pop    ds
  421e52:	pop    ebx
  421e53:	lea    ecx,[ebx-0x16]
  421e56:	dec    eax
  421e57:	xchg   ebp,eax
  421e58:	cmp    eax,ebx
  421e5a:	adc    al,0x58
  421e5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e5d:	xchg   ebp,eax
  421e5e:	pop    es
  421e5f:	stos   DWORD PTR es:[edi],eax
  421e60:	psraw  mm2,QWORD PTR [edx-0xcec31ce]
  421e67:	jns    0x421e48
  421e69:	nop
  421e6a:	mov    dl,0x94
  421e6c:	and    BYTE PTR [edi],0x70
  421e6f:	mov    DWORD PTR ds:0x74726631,ebx
  421e75:	xor    edi,DWORD PTR [edx]
  421e77:	inc    edx
  421e78:	cmp    esp,esi
  421e7a:	out    0xbd,eax
  421e7c:	pop    ebp
  421e7d:	jp     0x421efb
  421e7f:	test   BYTE PTR [ecx-0xad2c32],bh
  421e85:	aas    
  421e86:	adc    eax,0x441ace02
  421e8b:	faddp  st(1),st
  421e8d:	sub    edi,DWORD PTR [esi-0xd1d8680]
  421e93:	icebp  
  421e94:	push   ds
  421e95:	sbb    al,0x39
  421e97:	sahf   
  421e98:	mov    edi,?
  421e9a:	jno    0x421e70
  421e9c:	scas   al,BYTE PTR es:[edi]
  421e9d:	push   eax
  421e9e:	shr    DWORD PTR [eax+0xd],cl
  421ea1:	inc    edi
  421ea2:	jno    0x421ef4
  421ea4:	mov    esp,0xd0745b18
  421ea9:	pop    eax
  421eaa:	js     0x421eb9
  421eac:	out    0xcb,eax
  421eae:	cmp    BYTE PTR [ecx+0x3c0a1fb],dl
  421eb4:	shl    DWORD PTR [esi],0x25
  421eb7:	mov    bh,0x4c
  421eb9:	pop    esi
  421eba:	inc    edi
  421ebb:	daa    
  421ebc:	push   edi
  421ebd:	cli    
  421ebe:	icebp  
  421ebf:	dec    ecx
  421ec0:	test   DWORD PTR [eax+0x737aaea2],eax
  421ec6:	pop    ebp
  421ec7:	jecxz  0x421eb6
  421ec9:	or     ecx,DWORD PTR [ebx+eiz*1]
  421ecc:	imul   ebx,DWORD PTR [edi-0x77],0xe
  421ed0:	xor    DWORD PTR [esi+0x5b97814a],esi
  421ed6:	mov    edi,0x8a72f360
  421edb:	xor    BYTE PTR ds:0xaa7c93ba,cl
  421ee1:	lock push ebx
  421ee3:	adc    DWORD PTR [edx],ebp
  421ee5:	adc    al,0xe8
  421ee7:	mov    DWORD PTR [esi],ebp
  421ee9:	pop    ds
  421eea:	ficomp WORD PTR [edi+eax*2-0x2a]
  421eee:	fstp   TBYTE PTR [ebx-0x37]
  421ef1:	push   ebp
  421ef2:	scas   al,BYTE PTR es:[edi]
  421ef3:	adc    ecx,DWORD PTR [edi-0x388f7818]
  421ef9:	push   esp
  421efa:	loop   0x421e81
  421efc:	fnstsw WORD PTR [edi+0xc]
  421eff:	repz pop eax
  421f01:	in     al,dx
  421f02:	pop    esp
  421f03:	push   esp
  421f04:	and    BYTE PTR [esi+ebp*1-0xf2364c7],bl
  421f0b:	ja     0x421ef6
  421f0d:	lods   eax,DWORD PTR ds:[esi]
  421f0e:	sub    cl,BYTE PTR [esi-0x1f219d86]
  421f14:	sbb    edx,esp
  421f16:	push   0x5f
  421f18:	cmp    BYTE PTR [ebx-0x32ecc1f6],ah
  421f1e:	stos   BYTE PTR es:[edi],al
  421f1f:	jo     0x421f60
  421f21:	pop    es
  421f22:	neg    BYTE PTR [edi+0x62888819]
  421f28:	push   edx
  421f29:	jbe    0x421ee6
  421f2b:	fist   DWORD PTR [ebx-0x17]
  421f2e:	lds    esp,FWORD PTR [ebx-0x43b71ade]
  421f34:	cmp    ebx,esi
  421f36:	push   edi
  421f37:	addr16 (bad) 
  421f39:	push   eax
  421f3a:	scas   eax,DWORD PTR es:[edi]
  421f3b:	ds cld 
  421f3d:	in     eax,0xcd
  421f3f:	hlt    
  421f40:	mov    DWORD PTR [esi-0x3e5f5237],ebx
  421f46:	std    
  421f47:	ret    0xdcbe
  421f4a:	mov    al,ds:0xed983004
  421f4f:	cwde   
  421f50:	jge    0x421f15
  421f52:	mov    esi,0x6bcc39fa
  421f57:	mov    esp,0x3a23b713
  421f5c:	retf   0x356f
  421f5f:	mov    bl,0xbc
  421f61:	add    eax,0xadc11a88
  421f66:	in     al,0x10
  421f68:	ds and eax,0x4b89d67b
  421f6e:	(bad)  
  421f6f:	int3   
  421f70:	mov    cl,0x54
  421f72:	ret    0x6271
  421f75:	sbb    al,0xd7
  421f77:	sub    DWORD PTR [ebp-0x610897e],0x2683212f
  421f81:	push   eax
  421f82:	jno    0x421f7e
  421f84:	jbe    0x421fe5
  421f86:	retf   
  421f87:	xchg   BYTE PTR [edx-0x23],bh
  421f8a:	mov    DWORD PTR [ebp-0x36],eax
  421f8d:	xchg   edx,eax
  421f8e:	xlat   BYTE PTR ds:[ebx]
  421f8f:	in     eax,dx
  421f90:	and    DWORD PTR [edi-0x4ace42e7],0x7f
  421f97:	repz clc 
  421f99:	xchg   ebx,eax
  421f9a:	jle    0x421f2e
  421f9c:	add    eax,0x7543d05f
  421fa1:	or     bh,dl
  421fa3:	adc    eax,0xfacf1224
  421fa8:	cmp    ch,BYTE PTR [edx-0x1]
  421fab:	ins    BYTE PTR es:[edi],dx
  421fac:	ins    DWORD PTR es:[edi],dx
  421fad:	fsubrp st(0),st
  421faf:	sbb    eax,0xefeccfa0
  421fb4:	cmp    DWORD PTR [edx],edx
  421fb6:	(bad)  
  421fb7:	or     eax,0x581a02d2
  421fbc:	sbb    bh,BYTE PTR [ebx-0x52]
  421fbf:	jecxz  0x422023
  421fc1:	loopne 0x421faf
  421fc3:	sub    eax,0x5d453510
  421fc8:	aas    
  421fc9:	push   esi
  421fca:	das    
  421fcb:	xchg   ecx,eax
  421fcc:	sbb    DWORD PTR [esi+0x73],ecx
  421fcf:	cmp    bl,BYTE PTR [esi+0x6c]
  421fd2:	push   edi
  421fd4:	sub    ecx,DWORD PTR [esp+ecx*4]
  421fd7:	push   edi
  421fd8:	das    
  421fd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421fda:	hlt    
  421fdb:	jne    0x422032
  421fdd:	outs   dx,BYTE PTR ds:[esi]
  421fde:	mov    edx,0xf6a49236
  421fe3:	jg     0x421fe7
  421fe5:	rcr    BYTE PTR [ecx+0x4722bb8f],1
  421feb:	fwait
  421fec:	sub    al,0x34
  421fee:	popa   
  421fef:	cdq    
  421ff0:	push   ecx
  421ff1:	cmp    DWORD PTR [esp+edi*4+0x5b0b5dcb],edi
  421ff8:	int    0xb3
  421ffa:	xor    al,0xbe
  421ffc:	(bad)  
  421ffd:	leave  
  421ffe:	jmp    0xf41c6629
  422003:	xchg   ebp,eax
  422004:	mov    ds:0x2075657b,al
  422009:	and    eax,0x9667a3de
  42200e:	(bad)  
  422010:	test   BYTE PTR [ecx],ch
  422012:	sub    al,0x77
  422014:	mov    ebx,0x6904e06
  422019:	sahf   
  42201a:	xchg   DWORD PTR [ecx],esp
  42201c:	in     eax,dx
  42201d:	outs   dx,BYTE PTR ds:[esi]
  42201e:	cld    
  42201f:	sbb    eax,DWORD PTR [esi+0x1cd8ed5e]
  422025:	dec    ebx
  422026:	test   al,0xad
  422028:	div    DWORD PTR [edx-0x6]
  42202b:	mov    ecx,DWORD PTR ds:0x6cb415be
  422031:	inc    eax
  422032:	inc    ebx
  422033:	mov    BYTE PTR [eax-0x46f0d4d3],bl
  422039:	push   0xc3fb6be5
  42203e:	adc    BYTE PTR [ebx+0x27],ah
  422041:	xor    dh,bl
  422043:	inc    esi
  422044:	leave  
  422045:	loop   0x42208e
  422047:	hlt    
  422048:	ss inc edi
  42204a:	and    DWORD PTR [ebx+0x1c],esi
  42204d:	loop   0x4220c5
  42204f:	gs (bad) 
  422051:	ins    BYTE PTR es:[edi],dx
  422052:	and    ah,BYTE PTR [ebx+0x4d7b5c7e]
  422058:	out    0x8b,eax
  42205a:	aad    0x9f
  42205c:	ds mov edi,0xc40c65b9
  422062:	dec    esi
  422063:	xor    DWORD PTR [ebx-0x183cc42f],eax
  422069:	xor    ebx,DWORD PTR ds:0xdb46e2b5
  42206f:	xor    al,0x16
  422071:	mov    WORD PTR [edi-0x1ea806e7],es
  422077:	add    BYTE PTR [edx],0xf8
  42207a:	fcom   DWORD PTR [edi+0x78c47494]
  422080:	or     cl,dh
  422082:	mov    ebx,0x24325761
  422087:	ja     0x42200e
  422089:	out    dx,al
  42208a:	jmp    0x422103
  42208c:	pushf  
  42208d:	sbb    BYTE PTR [eax],dh
  42208f:	loopne 0x422031
  422091:	fs jl  0x42207e
  422094:	sbb    BYTE PTR [ecx-0x64],ah
  422097:	shl    DWORD PTR [ebp+0x4ff446cc],cl
  42209d:	sbb    BYTE PTR [ecx+0x7c],al
  4220a0:	lods   al,BYTE PTR ds:[esi]
  4220a1:	sub    eax,ebx
  4220a3:	fsubr  DWORD PTR [esi-0x7b]
  4220a6:	neg    DWORD PTR [ebx]
  4220a8:	xchg   ebx,eax
  4220a9:	pusha  
  4220aa:	dec    ebx
  4220ab:	mov    edi,0xcc9ffaf9
  4220b0:	adc    eax,0x4b2bbfd3
  4220b5:	out    0x9e,al
  4220b7:	outs   dx,BYTE PTR ds:[esi]
  4220b8:	sbb    DWORD PTR [ecx-0x41ad461],esp
  4220be:	lds    esi,FWORD PTR [edx+0x2a]
  4220c1:	stos   DWORD PTR es:[edi],eax
  4220c2:	jno    0x42204d
  4220c4:	push   ecx
  4220c5:	mov    al,0xf8
  4220c7:	mov    bh,0xf7
  4220c9:	jno    0x4220a4
  4220cb:	rcl    BYTE PTR [ecx+0x13a0f163],1
  4220d1:	xchg   ebp,eax
  4220d2:	mov    al,0x3e
  4220d4:	add    dh,dl
  4220d6:	pop    eax
  4220d7:	adc    al,dl
  4220d9:	es pop esi
  4220db:	arpl   bp,ax
  4220dd:	daa    
  4220de:	mov    ebp,0xe88e7253
  4220e3:	add    al,0xdf
  4220e5:	jbe    0x4220c0
  4220e7:	cmp    edi,DWORD PTR gs:[ebx+0x41]
  4220eb:	dec    esi
  4220ec:	jle    0x422111
  4220ee:	out    dx,al
  4220ef:	or     eax,0x81173bab
  4220f4:	in     eax,dx
  4220f5:	sub    al,0x3
  4220f7:	int    0x59
  4220f9:	adc    edi,DWORD PTR [ecx-0x9371b7b]
  4220ff:	fisubr DWORD PTR [ecx+0x396016af]
  422105:	mov    al,ds:0xc8f5d796
  42210a:	mov    ds,WORD PTR [ebx+0x4]
  42210d:	dec    edi
  42210e:	jle    0x422122
  422110:	inc    edx
  422111:	aam    0x1d
  422113:	push   0x7
  422115:	mov    esi,0xf00cf17
  42211a:	mov    bl,cl
  42211c:	adc    BYTE PTR [eax+eax*1],bh
  42211f:	test   BYTE PTR [ecx],dl
  422121:	jle    0x422109
  422123:	push   ss
  422124:	outs   dx,BYTE PTR ds:[esi]
  422125:	cmp    esi,esi
  422127:	xchg   dh,dl
  422129:	repnz lea ecx,[esi]
  42212c:	jmp    0x59e60f54
  422131:	arpl   cx,dx
  422133:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422134:	mov    al,0x99
  422136:	and    esp,edi
  422138:	or     ebp,DWORD PTR [edx]
  42213a:	aaa    
  42213b:	mov    bh,0x7
  42213d:	mov    ebx,0x2c314815
  422142:	clc    
  422143:	push   cs
  422144:	adc    cl,cl
  422146:	jg     0x422112
  422148:	pop    ds
  422149:	sbb    al,0x3d
  42214b:	clc    
  42214c:	adc    edx,DWORD PTR [ecx]
  42214e:	inc    esi
  42214f:	jns    0x422139
  422151:	inc    esp
  422152:	mov    ah,0x92
  422154:	(bad)  
  422155:	fstp   DWORD PTR [eax-0x51bc7a09]
  42215b:	fwait
  42215c:	fwait
  42215d:	dec    eax
  42215e:	and    bh,0x39
  422161:	aam    0xb
  422163:	daa    
  422164:	jge    0x42219c
  422166:	mov    esp,edi
  422168:	cmp    ch,BYTE PTR [edx-0x27]
  42216b:	dec    ebx
  42216c:	das    
  42216d:	xor    al,0xae
  42216f:	mov    edi,DWORD PTR [ebx-0x41]
  422172:	push   ebp
  422173:	js     0x422116
  422175:	pop    esi
  422176:	push   ds
  422177:	rol    BYTE PTR [ebx],1
  422179:	cli    
  42217a:	xchg   DWORD PTR [ecx],edi
  42217c:	je     0x422131
  42217e:	and    BYTE PTR [edi],dl
  422180:	dec    edx
  422181:	push   esp
  422182:	ret    0x65b4
  422185:	cmp    al,0x6
  422187:	je     0x42210a
  422189:	sub    DWORD PTR [ebp-0x33],edi
  42218c:	loopne 0x4221ee
  42218e:	adc    ecx,ebp
  422190:	sbb    DWORD PTR [ebx+0x73],ecx
  422193:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422194:	adc    al,0xac
  422196:	cmp    dh,ah
  422198:	repz and al,0xe9
  42219b:	xchg   esi,eax
  42219c:	cli    
  42219d:	shr    dh,cl
  42219f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221a0:	retf   0x1f2f
  4221a3:	outs   dx,BYTE PTR ds:[esi]
  4221a4:	xchg   ebx,eax
  4221a5:	sub    DWORD PTR [ebp+0x54],ecx
  4221a8:	dec    ebp
  4221a9:	or     BYTE PTR [edi+esi*4+0x6],al
  4221ad:	les    eax,FWORD PTR [edx-0x69]
  4221b0:	aas    
  4221b1:	stos   DWORD PTR es:[edi],eax
  4221b2:	repnz add esi,DWORD PTR [eax]
  4221b5:	xlat   BYTE PTR ds:[ebx]
  4221b6:	inc    ecx
  4221b7:	sbb    bh,BYTE PTR [ecx]
  4221b9:	push   0x53
  4221bb:	jmp    0x422179
  4221bd:	aaa    
  4221be:	push   edx
  4221bf:	cs cmp al,0x3
  4221c2:	test   al,0xa
  4221c4:	aam    0x2b
  4221c6:	sub    DWORD PTR [eax-0x7d],edx
  4221c9:	lea    edi,[esi+0x6d22a976]
  4221cf:	adc    edx,DWORD PTR [edi]
  4221d1:	push   esp
  4221d2:	sar    BYTE PTR [bp+si],0x60
  4221d6:	mov    eax,ds:0x9c007dde
  4221db:	cmc    
  4221dc:	int3   
  4221dd:	sbb    eax,0x111f56f4
  4221e2:	jbe    0x422258
  4221e4:	sbb    eax,0x80ef4d4a
  4221e9:	fwait
  4221ea:	ins    DWORD PTR es:[edi],dx
  4221eb:	push   ecx
  4221ec:	jp     0x422245
  4221ee:	mov    edx,0x4532dc80
  4221f3:	sub    edx,ebx
  4221f5:	cmp    ah,dh
  4221f7:	adc    ecx,DWORD PTR [ebp-0xed4a261]
  4221fd:	iret   
  4221fe:	adc    esi,ebx
  422200:	inc    ebx
  422201:	out    dx,eax
  422202:	mov    ch,0xf0
  422204:	outs   dx,DWORD PTR ds:[esi]
  422205:	(bad)  
  422206:	es in  al,dx
  422208:	fdiv   DWORD PTR [edi+0x15]
  42220b:	daa    
  42220c:	xchg   edi,eax
  42220d:	jne    0x4221c2
  42220f:	sub    DWORD PTR [ecx+0x1d],0x890f0e1
  422216:	mov    edi,eax
  422218:	ins    DWORD PTR es:[edi],dx
  422219:	aaa    
  42221a:	cmc    
  42221b:	pop    ebp
  42221c:	add    BYTE PTR [edx],0xaf
  42221f:	pop    ds
  422220:	jg     0x4221dc
  422222:	or     edi,DWORD PTR [edi+0x39c4a0e3]
  422228:	push   0x7b
  42222a:	test   eax,0x1f03e231
  42222f:	pop    esp
  422230:	mov    al,ds:0x480518d5
  422235:	xchg   ecx,eax
  422236:	sub    al,0xfe
  422238:	icebp  
  422239:	mov    ah,0x4e
  42223b:	mov    ah,0x75
  42223d:	mov    bh,dl
  42223f:	fdivr  st,st(2)
  422241:	sub    BYTE PTR [eax],bl
  422243:	pusha  
  422244:	outs   dx,BYTE PTR ds:[esi]
  422245:	jle    0x42229d
  422247:	(bad)  
  422248:	mov    edi,0x393fb71b
  42224d:	sahf   
  42224e:	xor    ah,BYTE PTR [edx+edi*8+0x11]
  422252:	dec    esi
  422253:	repz xor eax,0x3f447785
  422259:	xor    DWORD PTR [esi],edx
  42225b:	iret   
  42225c:	imul   edi,ebp,0xb6367bc
  422262:	mov    gs,WORD PTR [eax-0x44b11850]
  422268:	xlat   BYTE PTR ds:[ebx]
  422269:	fnstenv [ebp+0x566b6b89]
  42226f:	pop    ecx
  422270:	ficomp WORD PTR ds:0x3730baf4
  422276:	xchg   esp,eax
  422277:	loope  0x422219
  422279:	mov    di,0x273c
  42227d:	cmp    ebx,eax
  42227f:	repz push ecx
  422281:	push   0x3ad857c1
  422286:	push   es
  422287:	ds dec ebp
  422289:	fist   DWORD PTR [edx]
  42228b:	fisttp DWORD PTR [edi-0x6d]
  42228e:	enter  0xcb60,0x8c
  422292:	and    al,0xa
  422294:	jae    0x422257
  422296:	and    eax,ebp
  422298:	xchg   edx,eax
  422299:	xlat   BYTE PTR ds:[ebx]
  42229a:	daa    
  42229b:	fild   DWORD PTR [esi+edx*4-0x1bca5505]
  4222a2:	push   0xffffffb3
  4222a4:	test   eax,0xf7a50548
  4222a9:	xchg   ebx,eax
  4222aa:	or     DWORD PTR ds:0xd678c85d,ecx
  4222b0:	add    eax,ebp
  4222b2:	mov    DWORD PTR ds:0xbf92599b,esp
  4222b8:	pop    es
  4222b9:	daa    
  4222ba:	and    esi,esp
  4222bc:	fs lock jo 0x4222bb
  4222c0:	mov    ebx,0xe138710d
  4222c5:	loop   0x42229c
  4222c7:	xor    al,0x48
  4222c9:	mov    dh,0x1e
  4222cb:	lock dec esi
  4222cd:	jne    0x42234a
  4222cf:	sub    eax,0xfb653b49
  4222d4:	push   edi
  4222d5:	mov    bl,0xca
  4222d7:	and    edx,0x18674bf
  4222dd:	ror    BYTE PTR [edx+0xbe23a05],1
  4222e3:	sub    edi,DWORD PTR [edx+edx*1]
  4222e6:	iret   
  4222e7:	add    cl,bl
  4222e9:	js     0x422310
  4222eb:	outs   dx,DWORD PTR ds:[esi]
  4222ec:	jp     0x4222fe
  4222ee:	(bad)  
  4222ef:	out    0x46,eax
  4222f1:	xchg   ebx,eax
  4222f2:	aam    0x7e
  4222f4:	icebp  
  4222f5:	shl    al,1
  4222f7:	adc    al,0x62
  4222f9:	add    esp,ebx
  4222fb:	lea    ecx,[ebx+0x7cfbf28e]
  422301:	add    BYTE PTR [edi-0x1167bc67],ch
  422307:	dec    esi
  422308:	xchg   ebx,eax
  422309:	aas    
  42230a:	or     BYTE PTR [esp+ecx*8+0xb],0x38
  42230f:	push   esi
  422310:	mov    edi,0x1b3544e
  422315:	cld    
  422316:	nop
  422317:	call   0xe1aa:0xa6cf7b86
  42231e:	jae    0x422349
  422320:	or     DWORD PTR [edx+ebp*1-0x537f5fdd],ebp
  422327:	in     al,dx
  422328:	aad    0xbf
  42232a:	dec    eax
  42232b:	jge    0x42235c
  42232d:	scas   eax,DWORD PTR es:[edi]
  42232e:	pop    es
  42232f:	jmp    0x4222f1
  422331:	ja     0x422344
  422333:	or     edi,DWORD PTR [edi-0x35]
  422336:	out    0x53,al
  422338:	push   esi
  422339:	fistp  QWORD PTR [edi-0x618324e0]
  42233f:	ds pop es
  422341:	pop    edx
  422342:	push   edx
  422343:	add    ch,ah
  422345:	mov    al,ds:0xd850a7d1
  42234a:	cmp    DWORD PTR [ecx],ecx
  42234c:	daa    
  42234d:	xchg   esp,eax
  42234e:	stc    
  42234f:	mov    eax,ds:0xd7bd207c
  422354:	ins    BYTE PTR es:[edi],dx
  422355:	mov    gs,WORD PTR [ecx-0x47]
  422358:	xor    al,0x63
  42235a:	or     al,0x7a
  42235c:	xchg   ebp,eax
  42235d:	int3   
  42235e:	sahf   
  42235f:	sub    eax,0xc5259973
  422364:	iret   
  422365:	and    ebp,DWORD PTR [ebp-0x4ebdb1a]
  42236b:	std    
  42236c:	scas   al,BYTE PTR es:[edi]
  42236d:	in     al,0xe0
  42236f:	xchg   ecx,eax
  422370:	add    DWORD PTR [esi],eax
  422372:	dec    edx
  422373:	fldcw  WORD PTR [edx]
  422375:	sbb    bl,0x64
  422378:	shr    DWORD PTR [ebx+0x3f14ee15],1
  42237e:	xchg   DWORD PTR [eax+0x593f9e69],ecx
  422384:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422385:	mov    ah,0x2a
  422387:	pmaxub mm0,QWORD PTR [ebp+0x55b2a252]
  42238e:	lahf   
  42238f:	jmp    0x422372
  422391:	(bad)  
  422392:	push   ecx
  422393:	popf   
  422394:	repnz push cs
  422396:	xor    ch,ah
  422398:	mov    ebp,0xcf2d6ea4
  42239d:	addr16 call 0x1ac6:0x5b3c478e
  4223a5:	fwait
  4223a6:	push   esp
  4223a7:	sub    dl,ch
  4223a9:	fidiv  DWORD PTR [edx+ebx*8-0x1c7e352d]
  4223b0:	xchg   BYTE PTR [ebx],dh
  4223b2:	xchg   ebx,eax
  4223b3:	jmp    0xab2e:0x5cb752fb
  4223ba:	sahf   
  4223bb:	mov    eax,DWORD PTR [edx+0x71]
  4223be:	sbb    eax,0xc49b2ac5
  4223c3:	lds    edi,FWORD PTR [edi+0x3f]
  4223c6:	mov    esi,0x38406224
  4223cb:	ret    0xaf1a
  4223ce:	or     al,0x68
  4223d0:	ret    
  4223d1:	jl     0x4223cd
  4223d3:	mov    eax,ds:0x1b5bc293
  4223d8:	jnp    0x422388
  4223da:	or     bl,al
  4223dc:	push   ss
  4223dd:	pop    eax
  4223de:	xor    al,0x4
  4223e0:	out    dx,al
  4223e1:	ficomp DWORD PTR [ebx+edi*2+0x28f567b0]
  4223e8:	popf   
  4223e9:	push   ss
  4223ea:	adc    al,0xec
  4223ec:	mov    ah,0xb4
  4223ee:	or     eax,0x5b36d1c2
  4223f3:	lahf   
  4223f4:	out    0x55,eax
  4223f6:	add    eax,0x86cf8166
  4223fb:	pop    edi
  4223fc:	test   eax,0x8ee0fbdd
  422401:	fiadd  WORD PTR [edx+0x217967b4]
  422407:	mov    cl,0x94
  422409:	loopne 0x42245c
  42240b:	jnp    0x42241a
  42240d:	hlt    
  42240e:	jo     0x42241c
  422410:	aad    0x2d
  422412:	aas    
  422413:	retf   
  422414:	fbld   TBYTE PTR [bx-0x79]
  422418:	jnp    0x422401
  42241a:	dec    edx
  42241b:	repnz xor eax,0xd68b287
  422421:	adc    al,0x27
  422423:	xchg   ecx,eax
  422424:	jae    0x422423
  422426:	fst    QWORD PTR [esi]
  422428:	xor    edi,esp
  42242a:	lods   eax,DWORD PTR ds:[esi]
  42242b:	aas    
  42242c:	aam    0x7f
  42242e:	cmp    eax,0x5d56f7d2
  422433:	push   0x36808211
  422438:	imul   edx,DWORD PTR [ebx+0x7b],0x48
  42243c:	imul   ebx,DWORD PTR [eax+0x4e],0xffffffcc
  422440:	call   0xe6a0:0xa262cec4
  422447:	jp     0x422419
  422449:	xor    BYTE PTR [esi-0x3ba3eb5d],bl
  42244f:	das    
  422450:	mov    ebx,DWORD PTR [edx+0x77]
  422453:	sub    ecx,DWORD PTR [ecx+0x66]
  422456:	add    cl,ah
  422458:	mov    bl,0xe4
  42245a:	popa   
  42245b:	call   0x4f6d:0x1737cc65
  422462:	sahf   
  422463:	sub    al,0x49
  422465:	xchg   edi,eax
  422466:	inc    ecx
  422467:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422468:	push   ds
  422469:	(bad)  
  42246a:	ja     0x422470
  42246c:	popf   
  42246d:	imul   ebx,DWORD PTR ds:0x6779ef52,0xbbf678a
  422477:	sbb    ch,BYTE PTR [edi+0x51]
  42247a:	jmp    0x42246b
  42247c:	hlt    
  42247d:	inc    edx
  42247e:	pop    esi
  42247f:	adc    eax,0x8ed3f115
  422484:	mov    edi,0xf0547ae4
  422489:	mov    bh,0xb5
  42248b:	push   ecx
  42248c:	or     DWORD PTR [eax],ebx
  42248e:	push   esp
  42248f:	jo     0x422503
  422491:	mov    ds:0x77872c10,eax
  422496:	and    ah,ah
  422498:	(bad)  
  42249a:	sub    DWORD PTR [edx+0x4e9150af],ebx
  4224a0:	push   eax
  4224a1:	out    0xf3,al
  4224a3:	mov    ecx,0xa6f7008a
  4224a8:	cwde   
  4224a9:	sub    bh,ah
  4224ab:	xchg   esp,eax
  4224ac:	xor    eax,0x8d2c1b5b
  4224b1:	ins    BYTE PTR es:[edi],dx
  4224b2:	add    DWORD PTR [eax],0xc4950880
  4224b8:	pop    edi
  4224b9:	(bad)  
  4224ba:	cld    
  4224bb:	or     eax,0xdd315cce
  4224c0:	sub    eax,0x7a334cad
  4224c5:	mov    esp,0xa08dc477
  4224ca:	sbb    al,0x88
  4224cc:	and    dh,BYTE PTR [esi]
  4224ce:	or     eax,0x7527ddf0
  4224d3:	imul   edi,DWORD PTR [esi-0x11],0x7a
  4224d7:	call   0x5401:0x26f23801
  4224de:	adc    cl,BYTE PTR [ecx]
  4224e0:	in     al,dx
  4224e1:	sti    
  4224e2:	mov    ds:0x33da513e,eax
  4224e7:	jae    0x422502
  4224e9:	cli    
  4224ea:	fimul  DWORD PTR [edi-0x30a06d97]
  4224f0:	sub    al,0x0
  4224f2:	sub    al,0x8c
  4224f4:	inc    edi
  4224f5:	imul   ebx,DWORD PTR [ebp-0x1e],0xb503de09
  4224fc:	dec    ecx
  4224fd:	outs   dx,DWORD PTR ds:[esi]
  4224fe:	and    BYTE PTR [edi+0x65],ah
  422501:	xchg   ebx,eax
  422502:	jmp    0x4224b9
  422504:	mov    BYTE PTR [edx-0x1f],0x3b
  422508:	xor    ecx,edi
  42250a:	ret    
  42250b:	out    dx,al
  42250c:	neg    DWORD PTR [edi+eax*4]
  42250f:	test   al,0x31
  422511:	xor    eax,0x84002596
  422516:	scas   al,BYTE PTR es:[edi]
  422517:	imul   esp,eax,0xffffffa4
  42251a:	xchg   DWORD PTR [esi+0x611ae7f0],ecx
  422520:	loope  0x4224d4
  422522:	adc    edi,edx
  422524:	adc    eax,0xaa726afd
  422529:	shl    ch,0xd2
  42252c:	imul   edi,edx,0x35bf2604
  422532:	mov    ebp,0x865e601f
  422537:	ins    BYTE PTR es:[edi],dx
  422538:	enter  0xcfd7,0x85
  42253c:	icebp  
  42253d:	imul   ebp,eax,0x3d78790e
  422543:	fmul   st,st(2)
  422545:	adc    eax,0x62e9c8aa
  42254a:	lea    edx,[eax]
  42254c:	ficom  WORD PTR [ebx+0x7fce5f17]
  422552:	pop    DWORD PTR [ebp-0x21]
  422555:	mov    BYTE PTR [ebp-0x4d],dh
  422558:	rol    BYTE PTR [eax-0x62],cl
  42255b:	pop    es
  42255c:	(bad)  
  42255d:	xchg   esi,eax
  42255e:	and    BYTE PTR [esp+edi*4-0x42],dl
  422562:	mov    dh,0x66
  422564:	mov    bh,0xb1
  422566:	popaw  
  422568:	test   BYTE PTR [edx+ecx*8-0x7002ec67],al
  42256f:	dec    ecx
  422570:	shl    BYTE PTR [edx+0x7e],0xcb
  422574:	cmc    
  422575:	ins    DWORD PTR es:[edi],dx
  422576:	inc    esp
  422577:	js     0x4224ff
  422579:	cs push ebp
  42257b:	cmp    ah,BYTE PTR [ebp+edi*2-0x63e9d94f]
  422582:	div    DWORD PTR ds:0xb360ab4d
  422588:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422589:	push   ecx
  42258a:	push   esp
  42258b:	mov    ecx,0x2e1c058c
  422590:	jp     0x422580
  422592:	sbb    DWORD PTR [edi+ebp*4+0x26],edi
  422596:	ja     0x422603
  422598:	jg     0x42251d
  42259a:	cmp    esi,DWORD PTR [esi-0x73]
  42259d:	ins    DWORD PTR es:[edi],dx
  42259e:	or     DWORD PTR [edx],edi
  4225a0:	test   ebp,0x3bea719a
  4225a6:	std    
  4225a7:	cmp    bl,bl
  4225a9:	jp     0x422613
  4225ab:	add    al,0x17
  4225ad:	cmp    al,ah
  4225af:	adc    bh,BYTE PTR [ecx+0x4395115]
  4225b5:	shl    dl,cl
  4225b7:	dec    ebp
  4225b8:	test   BYTE PTR [ecx],0x60
  4225bb:	mov    ds:0x4c3c5177,al
  4225c0:	adc    BYTE PTR [edx-0x5c892a9c],0xce
  4225c7:	and    dl,BYTE PTR [ecx]
  4225c9:	or     esp,0x22
  4225cc:	out    0x98,eax
  4225ce:	jns    0x422590
  4225d0:	pop    ds
  4225d1:	test   al,0xbe
  4225d3:	(bad)  
  4225d4:	or     DWORD PTR [edx-0x6596f3df],ebp
  4225da:	and    bh,bh
  4225dc:	sbb    BYTE PTR [ebx],dl
  4225de:	inc    edx
  4225df:	and    BYTE PTR [edi],ch
  4225e1:	push   ss
  4225e2:	imul   ebx,DWORD PTR [eax-0xc21406b],0x1bd4a2dd
  4225ec:	inc    edx
  4225ed:	mov    bh,0x41
  4225ef:	adc    dl,BYTE PTR [bx+si]
  4225f2:	cdq    
  4225f3:	pop    ebp
  4225f4:	dec    ebx
  4225f5:	pop    ebx
  4225f6:	xchg   DWORD PTR [eax],eax
  4225f8:	cmp    DWORD PTR [ecx+ebx*4-0x63c847c1],edi
  4225ff:	cmp    ebx,DWORD PTR [ebp+edi*1+0x61]
  422603:	inc    esp
  422604:	cld    
  422605:	and    dl,ah
  422607:	jae    0x4225f7
  422609:	aaa    
  42260a:	retf   
  42260b:	cmp    eax,eax
  42260d:	mov    ebp,DWORD PTR [esi*4-0x5458d43e]
  422614:	shr    ebx,0x8
  422617:	xchg   esi,eax
  422618:	and    BYTE PTR [eax-0x306abefb],dh
  42261e:	cmp    eax,0xec4ed308
  422623:	sahf   
  422624:	jmp    0x4225f8
  422626:	xor    bl,BYTE PTR [edi-0x7d]
  422629:	cmp    DWORD PTR [ebx-0x2f4cc59d],edi
  42262f:	jmp    0x42268d
  422631:	xchg   ebp,eax
  422632:	cmp    eax,0x60e76c1
  422637:	dec    ebx
  422638:	pushf  
  422639:	dec    edx
  42263a:	mov    esp,0xa2925091
  42263f:	sub    al,0xc9
  422641:	and    eax,0x88b0d093
  422646:	fistp  DWORD PTR [edx+0x3d]
  422649:	xchg   ebp,eax
  42264a:	out    dx,eax
  42264b:	adc    DWORD PTR [eax+0x6d],ebp
  42264e:	mov    ah,0xc4
  422650:	pop    esi
  422651:	imul   ebx,DWORD PTR [edx-0x7c87624b],0xf1dd603d
  42265b:	imul   ebx,DWORD PTR [edx],0xd473c35c
  422661:	push   eax
  422662:	or     esi,DWORD PTR [esi-0x73]
  422665:	pop    ebp
  422666:	mov    BYTE PTR [edx-0x75a33b7],cl
  42266c:	in     al,dx
  42266d:	ja     0x4225fa
  42266f:	test   DWORD PTR [esi-0x6f],esp
  422672:	pop    DWORD PTR [ebp+0x190cb20]
  422678:	inc    edx
  422679:	xor    BYTE PTR [edi],dl
  42267b:	add    esp,DWORD PTR ds:0x603b4573
  422681:	or     BYTE PTR [ecx+0x7d],ch
  422684:	adc    DWORD PTR [ebp-0x5c86715f],ebx
  42268a:	mov    ebx,0xea6afbe9
  42268f:	repnz iret 
  422691:	pop    ebp
  422692:	mov    eax,ds:0xb4a1cc9b
  422697:	mov    edx,0x862dd0e7
  42269c:	dec    eax
  42269d:	(bad)  
  42269e:	add    eax,0xce5407a2
  4226a3:	mov    WORD PTR [edx],ds
  4226a5:	push   ecx
  4226a6:	push   0x5c9bc448
  4226ab:	into   
  4226ac:	pop    esi
  4226ad:	and    eax,DWORD PTR [ecx-0x64884745]
  4226b3:	retf   
  4226b4:	mov    dl,0xc7
  4226b6:	aad    0xf8
  4226b8:	push   esi
  4226b9:	inc    ecx
  4226ba:	leave  
  4226bb:	sbb    dh,bh
  4226bd:	pop    ecx
  4226be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226bf:	rcr    DWORD PTR [ebx],1
  4226c1:	fwait
  4226c2:	cmp    dl,BYTE PTR es:[eax+0x4a]
  4226c6:	out    0xbe,al
  4226c8:	enter  0x4e8,0x53
  4226cc:	cmp    BYTE PTR [ecx+0x67ff42c8],bl
  4226d2:	rol    BYTE PTR [eax-0x57],1
  4226d5:	inc    ecx
  4226d6:	jns    0x422669
  4226d8:	ror    BYTE PTR [edi],1
  4226da:	mov    esp,0xbb6a4560
  4226df:	sbb    eax,0xa88fca2f
  4226e4:	or     ah,ah
  4226e6:	mov    WORD PTR [ebx+0x28d8221d],ss
  4226ec:	rol    BYTE PTR [edi],1
  4226ee:	call   0x7f5c:0x8b0936b7
  4226f5:	pop    ecx
  4226f6:	adc    eax,0xf220b0f9
  4226fb:	sub    al,BYTE PTR [eax+0xb]
  4226fe:	cdq    
  4226ff:	je     0x422736
  422701:	add    dh,BYTE PTR [edi+0x7b]
  422704:	mov    edi,0xa7f4e832
  422709:	fdivr  QWORD PTR [ebp+0x1]
  42270c:	mov    cl,0xe7
  42270e:	lds    eax,FWORD PTR [eax+0x2]
  422711:	jnp    0x4226e4
  422713:	jge    0x422706
  422715:	or     DWORD PTR [edi+0x23],0xffffffa2
  422719:	in     eax,0x20
  42271b:	inc    esi
  42271c:	les    ecx,FWORD PTR [ebx*8+0x44166f51]
  422723:	ror    ecx,0x29
  422726:	dec    ebx
  422727:	into   
  422728:	imul   eax,DWORD PTR [ebx+ecx*1+0x13d3c021],0x51059901
  422733:	(bad)  
  422734:	mov    edi,0x6f8a09a
  422739:	sar    DWORD PTR [edx+ebp*8+0x9],cl
  42273d:	adc    eax,DWORD PTR [ebp-0x54fc66ba]
  422743:	(bad)  
  422744:	cmp    ebx,DWORD PTR [edx+ebp*2-0x3e]
  422748:	and    al,0x6f
  42274a:	xchg   ecx,eax
  42274b:	xor    BYTE PTR [edx+0x5660190],dl
  422751:	dec    ebp
  422752:	dec    ebx
  422753:	aad    0x44
  422755:	mov    dl,0x5a
  422757:	aas    
  422758:	cmc    
  422759:	mov    eax,0xbf602aea
  42275e:	jp     0x422704
  422760:	pushf  
  422761:	sub    DWORD PTR [ebx-0x55],esp
  422764:	lahf   
  422765:	mov    BYTE PTR [eax-0x21],dl
  422768:	scas   eax,DWORD PTR es:[edi]
  422769:	push   edi
  42276a:	xchg   ebx,eax
  42276b:	out    dx,eax
  42276c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42276d:	add    BYTE PTR ds:0x509d5b00,ch
  422773:	not    BYTE PTR [eax+esi*2-0x3eb77043]
  42277a:	dec    ebx
  42277b:	cdq    
  42277c:	call   0x3461:0xf5e96c22
  422783:	xchg   esp,eax
  422784:	out    0x29,al
  422786:	add    dh,BYTE PTR [eax]
  422788:	jge    0x422745
  42278a:	push   ds
  42278b:	rcl    ebp,1
  42278d:	sbb    DWORD PTR [edx-0x23],eax
  422790:	dec    ebx
  422791:	ret    0xac46
  422794:	int    0xf6
  422796:	mov    ebx,0x201ffc62
  42279b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42279c:	enter  0x8800,0x24
  4227a0:	lods   al,BYTE PTR ds:[esi]
  4227a1:	outs   dx,DWORD PTR ds:[esi]
  4227a2:	in     al,dx
  4227a3:	mov    edx,0x132a83fb
  4227a8:	mov    ch,bl
  4227aa:	and    BYTE PTR ds:0x46706113,0x95
  4227b1:	(bad)  [edi-0x59]
  4227b4:	data16 out dx,al
  4227b6:	mov    dh,0x84
  4227b8:	inc    ebp
  4227b9:	inc    esi
  4227ba:	popa   
  4227bb:	psrld  mm6,QWORD PTR [edi]
  4227be:	stos   DWORD PTR es:[edi],eax
  4227bf:	jae    0x42278a
  4227c1:	xor    DWORD PTR [ebx-0x4d],eax
  4227c4:	(bad)  
  4227c5:	jnp    0x4227c9
  4227c7:	lods   eax,DWORD PTR ds:[esi]
  4227c8:	fdivr  DWORD PTR [edi]
  4227ca:	push   esi
  4227cb:	aas    
  4227cc:	adc    BYTE PTR [ebp-0x4d1b593],bl
  4227d2:	(bad)  
  4227d3:	loope  0x422826
  4227d5:	pop    edx
  4227d6:	lods   eax,DWORD PTR ds:[esi]
  4227d7:	sar    BYTE PTR ds:0xd579b216,1
  4227dd:	or     eax,0xe2ff342e
  4227e2:	xor    al,0x6c
  4227e4:	(bad)  
  4227e5:	call   0x296db16a
  4227ea:	jge    0x422851
  4227ec:	ja     0x4227cc
  4227ee:	bound  esp,QWORD PTR [edi]
  4227f0:	iret   
  4227f1:	xchg   edi,eax
  4227f2:	mov    ecx,0x81bf46c2
  4227f7:	mov    ebp,0x93cd7d9a
  4227fc:	jno    0x4227ea
  4227fe:	inc    edx
  4227ff:	retf   0x2efb
  422802:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422803:	cmp    al,0x43
  422805:	not    BYTE PTR [ebx-0x37]
  422808:	fbstp  TBYTE PTR [ebx]
  42280a:	dec    edx
  42280b:	retf   
  42280c:	(bad)  
  42280d:	ss cmp esp,esp
  422810:	mov    DWORD PTR [ebx+0x4f54775d],ebx
  422816:	mov    BYTE PTR [ebp-0x7ed8de89],ch
  42281c:	sar    BYTE PTR [edx-0x5f3f578c],0x54
  422823:	sar    BYTE PTR [edi],1
  422825:	or     esp,DWORD PTR [esi+0x7a]
  422828:	xor    DWORD PTR [ebp+0x7c],ebx
  42282b:	loop   0x4227b3
  42282d:	cmp    BYTE PTR [eax+0x61],cl
  422830:	mov    cl,0x73
  422832:	push   ebp
  422833:	sub    ebp,ebx
  422835:	fsub   st(4),st
  422837:	hlt    
  422838:	pop    ss
  422839:	ins    BYTE PTR es:[edi],dx
  42283a:	retf   0x2d1d
  42283d:	imul   edx
  42283f:	sar    DWORD PTR [esi+0x1e],cl
  422842:	(bad)
  422847:	in     eax,dx
  422848:	out    0xfd,al
  42284a:	push   ds
  42284b:	cmp    ch,BYTE PTR [edi-0x2609ec58]
  422851:	push   ebp
  422852:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422853:	push   eax
  422854:	sub    bl,BYTE PTR [edi+0x76]
  422857:	or     al,0xe7
  422859:	clc    
  42285a:	(bad)  
  42285b:	pop    ebp
  42285c:	shr    dh,cl
  42285e:	test   ch,al
  422860:	test   ecx,edx
  422862:	popf   
  422863:	fs mov dh,0x10
  422866:	sub    ebp,ecx
  422868:	mov    eax,0xb3889463
  42286d:	rcr    DWORD PTR [ebx+edi*2],0x4e
  422871:	pop    esp
  422872:	out    dx,eax
  422873:	scas   al,BYTE PTR es:[edi]
  422874:	xchg   esi,eax
  422875:	loop   0x42282c
  422877:	loopne 0x422851
  422879:	out    0xbd,al
  42287b:	repnz (bad) 
  42287d:	ficomp DWORD PTR [eax-0x4d9c213d]
  422883:	clc    
  422884:	shr    eax,1
  422886:	retf   
  422887:	push   ebx
  422888:	clc    
  422889:	repnz (bad)
  42288c:	mov    ds:0xde8ac2cb,al
  422891:	test   DWORD PTR [eax+0x11f460cb],ebx
  422897:	dec    esi
  422898:	or     al,0xd5
  42289a:	outs   dx,DWORD PTR ds:[esi]
  42289b:	xor    BYTE PTR [esi+0x1faa5edc],al
  4228a1:	push   ds
  4228a2:	shl    DWORD PTR [ecx],0xea
  4228a5:	mov    esi,0x223501d2
  4228aa:	mov    DWORD PTR [edx-0x4e3b85d6],ebx
  4228b0:	xchg   ebx,eax
  4228b1:	push   edi
  4228b2:	xchg   esi,eax
  4228b3:	xchg   edx,ebp
  4228b5:	mov    ah,BYTE PTR [ebp-0x544bd6a7]
  4228bb:	adc    DWORD PTR [ebx],ebx
  4228bd:	dec    esi
  4228be:	rol    DWORD PTR [ecx+0x1f314cb5],1
  4228c4:	lahf   
  4228c5:	pop    eax
  4228c6:	push   eax
  4228c7:	and    eax,0xe71e3acb
  4228cc:	shr    BYTE PTR [ebp+0x52e43913],cl
  4228d2:	jecxz  0x422927
  4228d4:	dec    edi
  4228d5:	into   
  4228d6:	cli    
  4228d7:	jmp    0x42286b
  4228d9:	pop    es
  4228da:	adc    cl,BYTE PTR [ebp+0x2]
  4228dd:	neg    edi
  4228df:	add    DWORD PTR [eax+ebx*8+0x75],ecx
  4228e3:	das    
  4228e4:	mov    ds:0xc669bf38,al
  4228e9:	xchg   esp,eax
  4228ea:	adc    eax,0x711a9d9a
  4228ef:	sub    BYTE PTR [edi],0x5
  4228f2:	jecxz  0x42296b
  4228f4:	test   DWORD PTR [edi],esi
  4228f6:	mov    ?,ebp
  4228f8:	mov    dh,0xe8
  4228fa:	inc    edx
  4228fb:	mov    al,0x3f
  4228fd:	in     eax,dx
  4228fe:	test   eax,0x14bdd6bb
  422903:	dec    ebp
  422904:	dec    ebx
  422905:	fisttp QWORD PTR [ebp+0x6723cf03]
  42290b:	fcomp  QWORD PTR [ebp+0x71]
  42290e:	jp     0x4228a7
  422910:	into   
  422911:	std    
  422912:	in     al,0x65
  422914:	xlat   BYTE PTR ds:[ebx]
  422915:	xor    esp,esp
  422917:	mov    eax,0x8558d022
  42291c:	pop    ebp
  42291d:	pop    esp
  42291e:	pop    eax
  42291f:	xor    dh,BYTE PTR [edi]
  422921:	rol    DWORD PTR [ecx+0x2a],1
  422924:	pop    esp
  422925:	and    ecx,edx
  422927:	ds adc al,0x4d
  42292a:	neg    edx
  42292c:	aaa    
  42292d:	rcl    DWORD PTR [eax],1
  42292f:	test   al,0x4e
  422931:	aaa    
  422932:	mov    ds:0x2447f86,eax
  422937:	test   eax,0xbe6947d5
  42293c:	jmp    0xffa441d5
  422941:	jne    0x422940
  422943:	xchg   BYTE PTR [edx],bh
  422945:	push   eax
  422946:	test   eax,0x1de56719
  42294b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42294c:	pop    edx
  42294d:	stos   BYTE PTR es:[edi],al
  42294e:	fsubr  st,st(7)
  422950:	(bad)  
  422951:	xor    DWORD PTR [ecx+esi*2-0x33],esp
  422955:	out    dx,al
  422956:	pop    esi
  422957:	cmp    eax,0xd3408f51
  42295c:	addr16 jl 0x422943
  42295f:	or     ebp,DWORD PTR [esi-0x60]
  422962:	std    
  422963:	push   esp
  422964:	lods   al,BYTE PTR ds:[esi]
  422965:	out    dx,eax
  422966:	push   es
  422967:	stos   DWORD PTR es:[edi],eax
  422968:	adc    BYTE PTR [eax-0x18],dh
  42296b:	sub    DWORD PTR ds:0xc0be02fc,ebx
  422971:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422972:	mov    esi,0xe3702ef9
  422977:	jecxz  0x4229e2
  422979:	jp     0x4229b3
  42297b:	out    0xc7,eax
  42297d:	pop    eax
  42297e:	or     eax,0xda94d5b4
  422983:	pusha  
  422984:	jno    0x422942
  422986:	and    al,0x66
  422988:	mov    dl,dl
  42298a:	add    al,0xa0
  42298c:	mov    edi,DWORD PTR [esi+0x5100877e]
  422992:	imul   ecx,DWORD PTR [ecx],0xf28f0a1b
  422998:	dec    esp
  422999:	in     al,0xa6
  42299b:	ror    DWORD PTR [ebx+ebx*1-0x4c7f57d6],0x43
  4229a3:	and    al,ah
  4229a5:	adc    eax,0xaa919e43
  4229aa:	popa   
  4229ab:	xchg   esi,eax
  4229ac:	into   
  4229ad:	fstp   QWORD PTR [eax+ebx*8+0x55e0e936]
  4229b4:	in     eax,dx
  4229b5:	xchg   edx,eax
  4229b6:	pusha  
  4229b7:	mov    ds:0x67bcb36f,eax
  4229bc:	xchg   dl,ah
  4229be:	add    eax,0x6977a037
  4229c3:	ret    
  4229c4:	cmp    eax,0x430c5c64
  4229c9:	call   0x7a18540b
  4229ce:	dec    eax
  4229cf:	lahf   
  4229d0:	xchg   edi,eax
  4229d1:	ds ins DWORD PTR es:[edi],dx
  4229d3:	sbb    BYTE PTR [ebp+0x37c30b9f],0xdd
  4229da:	rcr    DWORD PTR [esi],1
  4229dc:	fidivr DWORD PTR [edx-0x242e5f1e]
  4229e2:	rcl    BYTE PTR [ebx],1
  4229e4:	dec    edi
  4229e5:	iret   
  4229e6:	dec    edi
  4229e7:	sahf   
  4229e8:	add    dl,BYTE PTR [ebp-0x31d44000]
  4229ee:	std    
  4229ef:	pusha  
  4229f0:	and    BYTE PTR [edx+0x0],ch
  4229f3:	call   DWORD PTR ds:0x428134
  4229f9:	push   0x0
  4229fb:	push   0x0
  4229fd:	push   0x100000
  422a02:	call   DWORD PTR ds:0x42802c
  422a08:	xor    eax,eax
  422a0a:	add    esp,0x10
  422a0d:	ret    0x10
  422a10:	jmp    DWORD PTR ds:0x428118
  422a16:	cmp    DWORD PTR ds:0x465cfc,0x1
  422a1d:	jne    0x422a24
  422a1f:	call   0x422f62
  422a24:	push   DWORD PTR [esp+0x4]
  422a28:	call   0x422deb
  422a2d:	push   0xff
  422a32:	call   DWORD PTR ds:0x4653e8
  422a38:	pop    ecx
  422a39:	pop    ecx
  422a3a:	ret    
  422a3b:	cmp    DWORD PTR ds:0x465cfc,0x1
  422a42:	jne    0x422a49
  422a44:	call   0x422f62
  422a49:	push   DWORD PTR [esp+0x4]
  422a4d:	call   0x422deb
  422a52:	push   0xff
  422a57:	call   0x422c31
  422a5c:	pop    ecx
  422a5d:	pop    ecx
  422a5e:	ret    
  422a5f:	push   0x60
  422a61:	push   0x428160
  422a66:	call   0x423950
  422a6b:	mov    edi,0x94
  422a70:	mov    eax,edi
  422a72:	call   0x4239a0
  422a77:	mov    DWORD PTR [ebp-0x18],esp
  422a7a:	mov    esi,esp
  422a7c:	mov    DWORD PTR [esi],edi
  422a7e:	push   esi
  422a7f:	call   DWORD PTR ds:0x428064
  422a85:	mov    ecx,DWORD PTR [esi+0x10]
  422a88:	mov    DWORD PTR ds:0x465d04,ecx
  422a8e:	mov    eax,DWORD PTR [esi+0x4]
  422a91:	mov    ds:0x465d10,eax
  422a96:	mov    edx,DWORD PTR [esi+0x8]
  422a99:	mov    DWORD PTR ds:0x465d14,edx
  422a9f:	mov    esi,DWORD PTR [esi+0xc]
  422aa2:	and    esi,0x7fff
  422aa8:	mov    DWORD PTR ds:0x465d08,esi
  422aae:	cmp    ecx,0x2
  422ab1:	je     0x422abf
  422ab3:	or     esi,0x8000
  422ab9:	mov    DWORD PTR ds:0x465d08,esi
  422abf:	shl    eax,0x8
  422ac2:	add    eax,edx
  422ac4:	mov    ds:0x465d0c,eax
  422ac9:	xor    esi,esi
  422acb:	push   esi
  422acc:	mov    edi,DWORD PTR ds:0x428044
  422ad2:	call   edi
  422ad4:	cmp    WORD PTR [eax],0x5a4d
  422ad9:	jne    0x422afa
  422adb:	mov    ecx,DWORD PTR [eax+0x3c]
  422ade:	add    ecx,eax
  422ae0:	cmp    DWORD PTR [ecx],0x4550
  422ae6:	jne    0x422afa
  422ae8:	movzx  eax,WORD PTR [ecx+0x18]
  422aec:	cmp    eax,0x10b
  422af1:	je     0x422b12
  422af3:	cmp    eax,0x20b
  422af8:	je     0x422aff
  422afa:	mov    DWORD PTR [ebp-0x1c],esi
  422afd:	jmp    0x422b26
  422aff:	cmp    DWORD PTR [ecx+0x84],0xe
  422b06:	jbe    0x422afa
  422b08:	xor    eax,eax
  422b0a:	cmp    DWORD PTR [ecx+0xf8],esi
  422b10:	jmp    0x422b20
  422b12:	cmp    DWORD PTR [ecx+0x74],0xe
  422b16:	jbe    0x422afa
  422b18:	xor    eax,eax
  422b1a:	cmp    DWORD PTR [ecx+0xe8],esi
  422b20:	setne  al
  422b23:	mov    DWORD PTR [ebp-0x1c],eax
  422b26:	push   0x1
  422b28:	call   0x4238fd
  422b2d:	pop    ecx
  422b2e:	test   eax,eax
  422b30:	jne    0x422b3a
  422b32:	push   0x1c
  422b34:	call   0x422a3b
  422b39:	pop    ecx
  422b3a:	call   0x423874
  422b3f:	test   eax,eax
  422b41:	jne    0x422b4b
  422b43:	push   0x10
  422b45:	call   0x422a3b
  422b4a:	pop    ecx
  422b4b:	call   0x42375d
  422b50:	mov    DWORD PTR [ebp-0x4],esi
  422b53:	call   0x42355f
  422b58:	test   eax,eax
  422b5a:	jge    0x422b64
  422b5c:	push   0x1b
  422b5e:	call   0x422a16
  422b63:	pop    ecx
  422b64:	call   DWORD PTR ds:0x428060
  422b6a:	mov    ds:0x4664b4,eax
  422b6f:	call   0x42343d
  422b74:	mov    ds:0x465cf4,eax
  422b79:	call   0x42339b
  422b7e:	test   eax,eax
  422b80:	jge    0x422b8a
  422b82:	push   0x8
  422b84:	call   0x422a16
  422b89:	pop    ecx
  422b8a:	call   0x423168
  422b8f:	test   eax,eax
  422b91:	jge    0x422b9b
  422b93:	push   0x9
  422b95:	call   0x422a16
  422b9a:	pop    ecx
  422b9b:	call   0x422c73
  422ba0:	mov    DWORD PTR [ebp-0x20],eax
  422ba3:	cmp    eax,esi
  422ba5:	je     0x422bae
  422ba7:	push   eax
  422ba8:	call   0x422a16
  422bad:	pop    ecx
  422bae:	mov    DWORD PTR [ebp-0x38],esi
  422bb1:	lea    eax,[ebp-0x64]
  422bb4:	push   eax
  422bb5:	call   DWORD PTR ds:0x42805c
  422bbb:	call   0x4230ff
  422bc0:	mov    DWORD PTR [ebp-0x68],eax
  422bc3:	test   BYTE PTR [ebp-0x38],0x1
  422bc7:	je     0x422bcf
  422bc9:	movzx  eax,WORD PTR [ebp-0x34]
  422bcd:	jmp    0x422bd2
  422bcf:	push   0xa
  422bd1:	pop    eax
  422bd2:	push   eax
  422bd3:	push   DWORD PTR [ebp-0x68]
  422bd6:	push   esi
  422bd7:	push   esi
  422bd8:	call   edi
  422bda:	push   eax
  422bdb:	call   0x421880
  422be0:	mov    edi,eax
  422be2:	mov    DWORD PTR [ebp-0x6c],edi
  422be5:	cmp    DWORD PTR [ebp-0x1c],esi
  422be8:	jne    0x422bf0
  422bea:	push   edi
  422beb:	call   0x422dab
  422bf0:	call   0x422dcd
  422bf5:	jmp    0x422c22
  422bf7:	mov    eax,DWORD PTR [ebp-0x14]
  422bfa:	mov    ecx,DWORD PTR [eax]
  422bfc:	mov    ecx,DWORD PTR [ecx]
  422bfe:	mov    DWORD PTR [ebp-0x70],ecx
  422c01:	push   eax
  422c02:	push   ecx
  422c03:	call   0x422f9b
  422c08:	pop    ecx
  422c09:	pop    ecx
  422c0a:	ret    
  422c0b:	mov    esp,DWORD PTR [ebp-0x18]
  422c0e:	mov    edi,DWORD PTR [ebp-0x70]
  422c11:	cmp    DWORD PTR [ebp-0x1c],0x0
  422c15:	jne    0x422c1d
  422c17:	push   edi
  422c18:	call   0x422dbc
  422c1d:	call   0x422ddc
  422c22:	or     DWORD PTR [ebp-0x4],0xffffffff
  422c26:	mov    eax,edi
  422c28:	lea    esp,[ebp-0x7c]
  422c2b:	call   0x42398b
  422c30:	ret    
  422c31:	push   0x42817c
  422c36:	call   DWORD PTR ds:0x428044
  422c3c:	test   eax,eax
  422c3e:	je     0x422c56
  422c40:	push   0x42816c
  422c45:	push   eax
  422c46:	call   DWORD PTR ds:0x428040
  422c4c:	test   eax,eax
  422c4e:	je     0x422c56
  422c50:	push   DWORD PTR [esp+0x4]
  422c54:	call   eax
  422c56:	push   DWORD PTR [esp+0x4]
  422c5a:	call   DWORD PTR ds:0x428068
  422c60:	int3   
  422c61:	push   0x8
  422c63:	call   0x423b0f
  422c68:	pop    ecx
  422c69:	ret    
  422c6a:	push   0x8
  422c6c:	call   0x423a7b
  422c71:	pop    ecx
  422c72:	ret    
  422c73:	mov    eax,ds:0x4664b0
  422c78:	test   eax,eax
  422c7a:	je     0x422c7e
  422c7c:	call   eax
  422c7e:	push   esi
  422c7f:	push   edi
  422c80:	mov    ecx,0x42a00c
  422c85:	mov    edi,0x42a018
  422c8a:	xor    eax,eax
  422c8c:	cmp    ecx,edi
  422c8e:	mov    esi,ecx
  422c90:	jae    0x422ca9
  422c92:	test   eax,eax
  422c94:	jne    0x422cd5
  422c96:	mov    ecx,DWORD PTR [esi]
  422c98:	test   ecx,ecx
  422c9a:	je     0x422c9e
  422c9c:	call   ecx
  422c9e:	add    esi,0x4
  422ca1:	cmp    esi,edi
  422ca3:	jb     0x422c92
  422ca5:	test   eax,eax
  422ca7:	jne    0x422cd5
  422ca9:	push   0x4237a1
  422cae:	call   0x423c20
  422cb3:	mov    esi,0x42a000
  422cb8:	mov    eax,esi
  422cba:	mov    edi,0x42a008
  422cbf:	cmp    eax,edi
  422cc1:	pop    ecx
  422cc2:	jae    0x422cd3
  422cc4:	mov    eax,DWORD PTR [esi]
  422cc6:	test   eax,eax
  422cc8:	je     0x422ccc
  422cca:	call   eax
  422ccc:	add    esi,0x4
  422ccf:	cmp    esi,edi
  422cd1:	jb     0x422cc4
  422cd3:	xor    eax,eax
  422cd5:	pop    edi
  422cd6:	pop    esi
  422cd7:	ret    
  422cd8:	push   ebp
  422cd9:	mov    ebp,esp
  422cdb:	push   esi
  422cdc:	push   edi
  422cdd:	push   0x8
  422cdf:	call   0x423b0f
  422ce4:	xor    esi,esi
  422ce6:	inc    esi
  422ce7:	cmp    DWORD PTR ds:0x465d44,esi
  422ced:	pop    ecx
  422cee:	jne    0x422d00
  422cf0:	push   DWORD PTR [ebp+0x8]
  422cf3:	call   DWORD PTR ds:0x428070
  422cf9:	push   eax
  422cfa:	call   DWORD PTR ds:0x42806c
  422d00:	cmp    DWORD PTR [ebp+0xc],0x0
  422d04:	mov    al,BYTE PTR [ebp+0x10]
  422d07:	mov    DWORD PTR ds:0x465d40,esi
  422d0d:	mov    ds:0x465d3c,al
  422d12:	jne    0x422d66
  422d14:	mov    ecx,DWORD PTR ds:0x4664a8
  422d1a:	test   ecx,ecx
  422d1c:	je     0x422d47
  422d1e:	mov    eax,ds:0x4664a4
  422d23:	sub    eax,0x4
  422d26:	cmp    eax,ecx
  422d28:	jmp    0x422d40
  422d2a:	mov    eax,DWORD PTR [eax]
  422d2c:	test   eax,eax
  422d2e:	je     0x422d32
  422d30:	call   eax
  422d32:	mov    eax,ds:0x4664a4
  422d37:	sub    eax,0x4
  422d3a:	cmp    eax,DWORD PTR ds:0x4664a8
  422d40:	mov    ds:0x4664a4,eax
  422d45:	jae    0x422d2a
  422d47:	mov    eax,0x42a01c
  422d4c:	mov    esi,0x42a020
  422d51:	cmp    eax,esi
  422d53:	mov    edi,eax
  422d55:	jae    0x422d66
  422d57:	mov    eax,DWORD PTR [edi]
  422d59:	test   eax,eax
  422d5b:	je     0x422d5f
  422d5d:	call   eax
  422d5f:	add    edi,0x4
  422d62:	cmp    edi,esi
  422d64:	jb     0x422d57
  422d66:	mov    eax,0x42a024
  422d6b:	mov    esi,0x42a028
  422d70:	cmp    eax,esi
  422d72:	mov    edi,eax
  422d74:	jae    0x422d85
  422d76:	mov    eax,DWORD PTR [edi]
  422d78:	test   eax,eax
  422d7a:	je     0x422d7e
  422d7c:	call   eax
  422d7e:	add    edi,0x4
  422d81:	cmp    edi,esi
  422d83:	jb     0x422d76
  422d85:	cmp    DWORD PTR [ebp+0x10],0x0
  422d89:	pop    edi
  422d8a:	pop    esi
  422d8b:	je     0x422d96
  422d8d:	push   0x8
  422d8f:	call   0x423a7b
  422d94:	jmp    0x422da8
  422d96:	push   DWORD PTR [ebp+0x8]
  422d99:	mov    DWORD PTR ds:0x465d44,0x1
  422da3:	call   0x422c31
  422da8:	pop    ecx
  422da9:	pop    ebp
  422daa:	ret    
  422dab:	push   0x0
  422dad:	push   0x0
  422daf:	push   DWORD PTR [esp+0xc]
  422db3:	call   0x422cd8
  422db8:	add    esp,0xc
  422dbb:	ret    
  422dbc:	push   0x0
  422dbe:	push   0x1
  422dc0:	push   DWORD PTR [esp+0xc]
  422dc4:	call   0x422cd8
  422dc9:	add    esp,0xc
  422dcc:	ret    
  422dcd:	push   0x1
  422dcf:	push   0x0
  422dd1:	push   0x0
  422dd3:	call   0x422cd8
  422dd8:	add    esp,0xc
  422ddb:	ret    
  422ddc:	push   0x1
  422dde:	push   0x1
  422de0:	push   0x0
  422de2:	call   0x422cd8
  422de7:	add    esp,0xc
  422dea:	ret    
  422deb:	push   ebp
  422dec:	mov    ebp,esp
  422dee:	sub    esp,0x10c
  422df4:	mov    eax,ds:0x465660
  422df9:	xor    eax,DWORD PTR [ebp+0x4]
  422dfc:	mov    ecx,DWORD PTR [ebp+0x8]
  422dff:	push   ebx
  422e00:	push   esi
  422e01:	mov    DWORD PTR [ebp-0x4],eax
  422e04:	xor    edx,edx
  422e06:	push   edi
  422e07:	xor    eax,eax
  422e09:	cmp    ecx,DWORD PTR [eax*8+0x4653f0]
  422e10:	je     0x422e18
  422e12:	inc    eax
  422e13:	cmp    eax,0x12
  422e16:	jb     0x422e09
  422e18:	mov    esi,eax
  422e1a:	shl    esi,0x3
  422e1d:	cmp    ecx,DWORD PTR [esi+0x4653f0]
  422e23:	jne    0x422f4c
  422e29:	mov    eax,ds:0x465cfc
  422e2e:	cmp    eax,0x1
  422e31:	je     0x422f27
  422e37:	cmp    eax,edx
  422e39:	jne    0x422e48
  422e3b:	cmp    DWORD PTR ds:0x4653ec,0x1
  422e42:	je     0x422f27
  422e48:	cmp    ecx,0xfc
  422e4e:	je     0x422f4c
  422e54:	push   0x104
  422e59:	lea    eax,[ebp-0x10c]
  422e5f:	push   eax
  422e60:	push   edx
  422e61:	mov    BYTE PTR [ebp-0x8],dl
  422e64:	call   DWORD PTR ds:0x42807c
  422e6a:	test   eax,eax
  422e6c:	jne    0x422e81
  422e6e:	lea    eax,[ebp-0x10c]
  422e74:	push   0x4284d4
  422e79:	push   eax
  422e7a:	call   0x423d30
  422e7f:	pop    ecx
  422e80:	pop    ecx
  422e81:	lea    eax,[ebp-0x10c]
  422e87:	push   eax
  422e88:	lea    edi,[ebp-0x10c]
  422e8e:	call   0x423f60
  422e93:	inc    eax
  422e94:	cmp    eax,0x3c
  422e97:	pop    ecx
  422e98:	jbe    0x422ec3
  422e9a:	lea    eax,[ebp-0x10c]
  422ea0:	push   eax
  422ea1:	call   0x423f60
  422ea6:	mov    edi,eax
  422ea8:	lea    eax,[ebp-0x10c]
  422eae:	sub    eax,0x3b
  422eb1:	push   0x3
  422eb3:	add    edi,eax
  422eb5:	push   0x4284d0
  422eba:	push   edi
  422ebb:	call   0x423e30
  422ec0:	add    esp,0x10
  422ec3:	push   edi
  422ec4:	call   0x423f60
  422ec9:	push   DWORD PTR [esi+0x4653f4]
  422ecf:	mov    ebx,eax
  422ed1:	call   0x423f60
  422ed6:	lea    eax,[ebx+eax*1+0x1c]
  422eda:	pop    ecx
  422edb:	add    eax,0x3
  422ede:	pop    ecx
  422edf:	and    eax,0xfffffffc
  422ee2:	call   0x4239a0
  422ee7:	mov    ebx,esp
  422ee9:	push   0x4284b4
  422eee:	push   ebx
  422eef:	call   0x423d30
  422ef4:	push   edi
  422ef5:	push   ebx
  422ef6:	call   0x423d40
  422efb:	push   0x4284b0
  422f00:	push   ebx
  422f01:	call   0x423d40
  422f06:	push   DWORD PTR [esi+0x4653f4]
  422f0c:	push   ebx
  422f0d:	call   0x423d40
  422f12:	push   0x12010
  422f17:	push   0x428488
  422f1c:	push   ebx
  422f1d:	call   0x423c32
  422f22:	add    esp,0x2c
  422f25:	jmp    0x422f4c
  422f27:	push   edx
  422f28:	lea    eax,[ebp+0x8]
  422f2b:	push   eax
  422f2c:	lea    esi,[esi+0x4653f4]
  422f32:	push   DWORD PTR [esi]
  422f34:	call   0x423f60
  422f39:	pop    ecx
  422f3a:	push   eax
  422f3b:	push   DWORD PTR [esi]
  422f3d:	push   0xfffffff4
  422f3f:	call   DWORD PTR ds:0x428078
  422f45:	push   eax
  422f46:	call   DWORD PTR ds:0x428074
  422f4c:	lea    esp,[ebp-0x118]
  422f52:	mov    ecx,DWORD PTR [ebp-0x4]
  422f55:	xor    ecx,DWORD PTR [ebp+0x4]
  422f58:	call   0x42401c
  422f5d:	pop    edi
  422f5e:	pop    esi
  422f5f:	pop    ebx
  422f60:	leave  
  422f61:	ret    
  422f62:	mov    eax,ds:0x465cfc
  422f67:	cmp    eax,0x1
  422f6a:	je     0x422f79
  422f6c:	test   eax,eax
  422f6e:	jne    0x422f9a
  422f70:	cmp    DWORD PTR ds:0x4653ec,0x1
  422f77:	jne    0x422f9a
  422f79:	push   0xfc
  422f7e:	call   0x422deb
  422f83:	mov    eax,ds:0x465d48
  422f88:	test   eax,eax
  422f8a:	pop    ecx
  422f8b:	je     0x422f8f
  422f8d:	call   eax
  422f8f:	push   0xff
  422f94:	call   0x422deb
  422f99:	pop    ecx
  422f9a:	ret    
  422f9b:	push   ebp
  422f9c:	mov    ebp,esp
  422f9e:	push   ecx
  422f9f:	push   ebx
  422fa0:	push   esi
  422fa1:	push   edi
  422fa2:	call   0x423803
  422fa7:	mov    edi,DWORD PTR [ebp+0x8]
  422faa:	mov    esi,eax
  422fac:	mov    edx,DWORD PTR [esi+0x54]
  422faf:	mov    eax,ds:0x465504
  422fb4:	mov    ecx,edx
  422fb6:	cmp    DWORD PTR [ecx],edi
  422fb8:	je     0x422fc7
  422fba:	lea    ebx,[eax+eax*2]
  422fbd:	add    ecx,0xc
  422fc0:	lea    ebx,[edx+ebx*4]
  422fc3:	cmp    ecx,ebx
  422fc5:	jb     0x422fb6
  422fc7:	lea    eax,[eax+eax*2]
  422fca:	lea    eax,[edx+eax*4]
  422fcd:	cmp    ecx,eax
  422fcf:	jae    0x422fd5
  422fd1:	cmp    DWORD PTR [ecx],edi
  422fd3:	je     0x422fd7
  422fd5:	xor    ecx,ecx
  422fd7:	test   ecx,ecx
  422fd9:	je     0x4230f1
  422fdf:	mov    ebx,DWORD PTR [ecx+0x8]
  422fe2:	test   ebx,ebx
  422fe4:	mov    DWORD PTR [ebp+0x8],ebx
  422fe7:	je     0x4230f1
  422fed:	cmp    ebx,0x5
  422ff0:	jne    0x422ffe
  422ff2:	and    DWORD PTR [ecx+0x8],0x0
  422ff6:	xor    eax,eax
  422ff8:	inc    eax
  422ff9:	jmp    0x4230fa
  422ffe:	cmp    ebx,0x1
  423001:	je     0x4230ec
  423007:	mov    eax,DWORD PTR [esi+0x58]
  42300a:	mov    DWORD PTR [ebp-0x4],eax
  42300d:	mov    eax,DWORD PTR [ebp+0xc]
  423010:	mov    DWORD PTR [esi+0x58],eax
  423013:	mov    eax,DWORD PTR [ecx+0x4]
  423016:	cmp    eax,0x8
  423019:	jne    0x4230de
  42301f:	mov    edx,DWORD PTR ds:0x4654f8
  423025:	mov    eax,ds:0x4654fc
  42302a:	add    eax,edx
  42302c:	cmp    edx,eax
  42302e:	jge    0x423057
  423030:	lea    eax,[edx+edx*2]
  423033:	shl    eax,0x2
  423036:	mov    edi,DWORD PTR [esi+0x54]
  423039:	and    DWORD PTR [eax+edi*1+0x8],0x0
  42303e:	mov    edi,DWORD PTR ds:0x4654f8
  423044:	mov    ebx,DWORD PTR ds:0x4654fc
  42304a:	inc    edx
  42304b:	add    ebx,edi
  42304d:	add    eax,0xc
  423050:	cmp    edx,ebx
  423052:	jl     0x423036
  423054:	mov    ebx,DWORD PTR [ebp+0x8]
  423057:	mov    ecx,DWORD PTR [ecx]
  423059:	cmp    ecx,0xc000008e
  42305f:	mov    edi,DWORD PTR [esi+0x5c]
  423062:	jne    0x42306d
  423064:	mov    DWORD PTR [esi+0x5c],0x83
  42306b:	jmp    0x4230d1
  42306d:	cmp    ecx,0xc0000090
  423073:	jne    0x42307e
  423075:	mov    DWORD PTR [esi+0x5c],0x81
  42307c:	jmp    0x4230d1
  42307e:	cmp    ecx,0xc0000091
  423084:	jne    0x42308f
  423086:	mov    DWORD PTR [esi+0x5c],0x84
  42308d:	jmp    0x4230d1
  42308f:	cmp    ecx,0xc0000093
  423095:	jne    0x4230a0
  423097:	mov    DWORD PTR [esi+0x5c],0x85
  42309e:	jmp    0x4230d1
  4230a0:	cmp    ecx,0xc000008d
  4230a6:	jne    0x4230b1
  4230a8:	mov    DWORD PTR [esi+0x5c],0x82
  4230af:	jmp    0x4230d1
  4230b1:	cmp    ecx,0xc000008f
  4230b7:	jne    0x4230c2
  4230b9:	mov    DWORD PTR [esi+0x5c],0x86
  4230c0:	jmp    0x4230d1
  4230c2:	cmp    ecx,0xc0000092
  4230c8:	jne    0x4230d1
  4230ca:	mov    DWORD PTR [esi+0x5c],0x8a
  4230d1:	push   DWORD PTR [esi+0x5c]
  4230d4:	push   0x8
  4230d6:	call   ebx
  4230d8:	pop    ecx
  4230d9:	mov    DWORD PTR [esi+0x5c],edi
  4230dc:	jmp    0x4230e5
  4230de:	and    DWORD PTR [ecx+0x8],0x0
  4230e2:	push   eax
  4230e3:	call   ebx
  4230e5:	mov    eax,DWORD PTR [ebp-0x4]
  4230e8:	pop    ecx
  4230e9:	mov    DWORD PTR [esi+0x58],eax
  4230ec:	or     eax,0xffffffff
  4230ef:	jmp    0x4230fa
  4230f1:	push   DWORD PTR [ebp+0xc]
  4230f4:	call   DWORD PTR ds:0x428080
  4230fa:	pop    edi
  4230fb:	pop    esi
  4230fc:	pop    ebx
  4230fd:	leave  
  4230fe:	ret    
  4230ff:	cmp    DWORD PTR ds:0x4664ac,0x0
  423106:	jne    0x42310d
  423108:	call   0x42453c
  42310d:	push   esi
  42310e:	mov    esi,DWORD PTR ds:0x4664b4
  423114:	test   esi,esi
  423116:	jne    0x42311f
  423118:	mov    esi,0x4284eb
  42311d:	jmp    0x423164
  42311f:	mov    al,BYTE PTR [esi]
  423121:	cmp    al,0x22
  423123:	jne    0x42314d
  423125:	inc    esi
  423126:	mov    al,BYTE PTR [esi]
  423128:	cmp    al,0x22
  42312a:	je     0x42315d
  42312c:	test   al,al
  42312e:	je     0x423146
  423130:	movzx  eax,al
  423133:	push   eax
  423134:	call   0x42405b
  423139:	test   eax,eax
  42313b:	pop    ecx
  42313c:	je     0x42313f
  42313e:	inc    esi
  42313f:	inc    esi
  423140:	mov    al,BYTE PTR [esi]
  423142:	cmp    al,0x22
  423144:	jne    0x42312c
  423146:	cmp    BYTE PTR [esi],0x22
  423149:	jne    0x42315e
  42314b:	jmp    0x42315d
  42314d:	cmp    al,0x20
  42314f:	jbe    0x42315e
  423151:	inc    esi
  423152:	cmp    BYTE PTR [esi],0x20
  423155:	ja     0x423151
  423157:	jmp    0x42315e
  423159:	cmp    al,0x20
  42315b:	ja     0x423164
  42315d:	inc    esi
  42315e:	mov    al,BYTE PTR [esi]
  423160:	test   al,al
  423162:	jne    0x423159
  423164:	mov    eax,esi
  423166:	pop    esi
  423167:	ret    
  423168:	push   ebx
  423169:	xor    ebx,ebx
  42316b:	cmp    DWORD PTR ds:0x4664ac,ebx
  423171:	push   esi
  423172:	push   edi
  423173:	jne    0x42317a
  423175:	call   0x42453c
  42317a:	mov    esi,DWORD PTR ds:0x465cf4
  423180:	xor    edi,edi
  423182:	cmp    esi,ebx
  423184:	jne    0x423198
  423186:	jmp    0x4231b8
  423188:	cmp    al,0x3d
  42318a:	je     0x42318d
  42318c:	inc    edi
  42318d:	push   esi
  42318e:	call   0x423f60
  423193:	pop    ecx
  423194:	lea    esi,[esi+eax*1+0x1]
  423198:	mov    al,BYTE PTR [esi]
  42319a:	cmp    al,bl
  42319c:	jne    0x423188
  42319e:	lea    eax,[edi*4+0x4]
  4231a5:	push   eax
  4231a6:	call   0x424672
  4231ab:	mov    edi,eax
  4231ad:	cmp    edi,ebx
  4231af:	pop    ecx
  4231b0:	mov    DWORD PTR ds:0x465d24,edi
  4231b6:	jne    0x4231bd
  4231b8:	or     eax,0xffffffff
  4231bb:	jmp    0x423215
  4231bd:	mov    esi,DWORD PTR ds:0x465cf4
  4231c3:	push   ebp
  4231c4:	jmp    0x4231f0
  4231c6:	push   esi
  4231c7:	call   0x423f60
  4231cc:	mov    ebp,eax
  4231ce:	inc    ebp
  4231cf:	cmp    BYTE PTR [esi],0x3d
  4231d2:	pop    ecx
  4231d3:	je     0x4231ee
  4231d5:	push   ebp
  4231d6:	call   0x424672
  4231db:	cmp    eax,ebx
  4231dd:	pop    ecx
  4231de:	mov    DWORD PTR [edi],eax
  4231e0:	je     0x423219
  4231e2:	push   esi
  4231e3:	push   eax
  4231e4:	call   0x423d30
  4231e9:	pop    ecx
  4231ea:	pop    ecx
  4231eb:	add    edi,0x4
  4231ee:	add    esi,ebp
  4231f0:	cmp    BYTE PTR [esi],bl
  4231f2:	jne    0x4231c6
  4231f4:	push   DWORD PTR ds:0x465cf4
  4231fa:	call   0x42455a
  4231ff:	mov    DWORD PTR ds:0x465cf4,ebx
  423205:	mov    DWORD PTR [edi],ebx
  423207:	mov    DWORD PTR ds:0x4664a0,0x1
  423211:	xor    eax,eax
  423213:	pop    ecx
  423214:	pop    ebp
  423215:	pop    edi
  423216:	pop    esi
  423217:	pop    ebx
  423218:	ret    
  423219:	push   DWORD PTR ds:0x465d24
  42321f:	call   0x42455a
  423224:	mov    DWORD PTR ds:0x465d24,ebx
  42322a:	or     eax,0xffffffff
  42322d:	jmp    0x423213
  42322f:	push   ebp
  423230:	mov    ebp,esp
  423232:	push   ecx
  423233:	push   ebx
  423234:	mov    ebx,DWORD PTR [ebp+0xc]
  423237:	xor    edx,edx
  423239:	cmp    DWORD PTR [ebp+0x8],edx
  42323c:	push   edi
  42323d:	mov    DWORD PTR [esi],edx
  42323f:	mov    edi,ecx
  423241:	mov    DWORD PTR [ebx],0x1
  423247:	je     0x423252
  423249:	mov    ecx,DWORD PTR [ebp+0x8]
  42324c:	add    DWORD PTR [ebp+0x8],0x4
  423250:	mov    DWORD PTR [ecx],edi
  423252:	cmp    BYTE PTR [eax],0x22
  423255:	jne    0x423265
  423257:	xor    ecx,ecx
  423259:	test   edx,edx
  42325b:	sete   cl
  42325e:	inc    eax
  42325f:	mov    edx,ecx
  423261:	mov    cl,0x22
  423263:	jmp    0x423292
  423265:	inc    DWORD PTR [esi]
  423267:	test   edi,edi
  423269:	je     0x423270
  42326b:	mov    cl,BYTE PTR [eax]
  42326d:	mov    BYTE PTR [edi],cl
  42326f:	inc    edi
  423270:	mov    cl,BYTE PTR [eax]
  423272:	movzx  ebx,cl
  423275:	inc    eax
  423276:	test   BYTE PTR [ebx+0x466161],0x4
  42327d:	je     0x42328b
  42327f:	inc    DWORD PTR [esi]
  423281:	test   edi,edi
  423283:	je     0x42328a
  423285:	mov    bl,BYTE PTR [eax]
  423287:	mov    BYTE PTR [edi],bl
  423289:	inc    edi
  42328a:	inc    eax
  42328b:	test   cl,cl
  42328d:	mov    ebx,DWORD PTR [ebp+0xc]
  423290:	je     0x4232c4
  423292:	test   edx,edx
  423294:	jne    0x423252
  423296:	cmp    cl,0x20
  423299:	je     0x4232a0
  42329b:	cmp    cl,0x9
  42329e:	jne    0x423252
  4232a0:	test   edi,edi
  4232a2:	je     0x4232a8
  4232a4:	and    BYTE PTR [edi-0x1],0x0
  4232a8:	and    DWORD PTR [ebp-0x4],0x0
  4232ac:	cmp    BYTE PTR [eax],0x0
  4232af:	je     0x42338b
  4232b5:	mov    cl,BYTE PTR [eax]
  4232b7:	cmp    cl,0x20
  4232ba:	je     0x4232c1
  4232bc:	cmp    cl,0x9
  4232bf:	jne    0x4232c7
  4232c1:	inc    eax
  4232c2:	jmp    0x4232b5
  4232c4:	dec    eax
  4232c5:	jmp    0x4232a8
  4232c7:	cmp    BYTE PTR [eax],0x0
  4232ca:	je     0x42338b
  4232d0:	cmp    DWORD PTR [ebp+0x8],0x0
  4232d4:	je     0x4232df
  4232d6:	mov    ecx,DWORD PTR [ebp+0x8]
  4232d9:	add    DWORD PTR [ebp+0x8],0x4
  4232dd:	mov    DWORD PTR [ecx],edi
  4232df:	inc    DWORD PTR [ebx]
  4232e1:	xor    ebx,ebx
  4232e3:	inc    ebx
  4232e4:	xor    edx,edx
  4232e6:	jmp    0x4232ea
  4232e8:	inc    eax
  4232e9:	inc    edx
  4232ea:	cmp    BYTE PTR [eax],0x5c
  4232ed:	je     0x4232e8
  4232ef:	cmp    BYTE PTR [eax],0x22
  4232f2:	jne    0x42331a
  4232f4:	test   dl,0x1
  4232f7:	jne    0x423318
  4232f9:	cmp    DWORD PTR [ebp-0x4],0x0
  4232fd:	je     0x42330b
  4232ff:	lea    ecx,[eax+0x1]
  423302:	cmp    BYTE PTR [ecx],0x22
  423305:	jne    0x42330b
  423307:	mov    eax,ecx
  423309:	jmp    0x42330d
  42330b:	xor    ebx,ebx
  42330d:	xor    ecx,ecx
  42330f:	cmp    DWORD PTR [ebp-0x4],ecx
  423312:	sete   cl
  423315:	mov    DWORD PTR [ebp-0x4],ecx
  423318:	shr    edx,1
  42331a:	test   edx,edx
  42331c:	je     0x42332b
  42331e:	test   edi,edi
  423320:	je     0x423326
  423322:	mov    BYTE PTR [edi],0x5c
  423325:	inc    edi
  423326:	inc    DWORD PTR [esi]
  423328:	dec    edx
  423329:	jne    0x42331e
  42332b:	mov    cl,BYTE PTR [eax]
  42332d:	test   cl,cl
  42332f:	je     0x423379
  423331:	cmp    DWORD PTR [ebp-0x4],0x0
  423335:	jne    0x423341
  423337:	cmp    cl,0x20
  42333a:	je     0x423379
  42333c:	cmp    cl,0x9
  42333f:	je     0x423379
  423341:	test   ebx,ebx
  423343:	je     0x423373
  423345:	test   edi,edi
  423347:	je     0x423362
  423349:	movzx  edx,cl
  42334c:	test   BYTE PTR [edx+0x466161],0x4
  423353:	je     0x42335b
  423355:	mov    BYTE PTR [edi],cl
  423357:	inc    edi
  423358:	inc    eax
  423359:	inc    DWORD PTR [esi]
  42335b:	mov    cl,BYTE PTR [eax]
  42335d:	mov    BYTE PTR [edi],cl
  42335f:	inc    edi
  423360:	jmp    0x423371
  423362:	movzx  ecx,cl
  423365:	test   BYTE PTR [ecx+0x466161],0x4
  42336c:	je     0x423371
  42336e:	inc    eax
  42336f:	inc    DWORD PTR [esi]
  423371:	inc    DWORD PTR [esi]
  423373:	inc    eax
  423374:	jmp    0x4232e1
  423379:	test   edi,edi
  42337b:	je     0x423381
  42337d:	and    BYTE PTR [edi],0x0
  423380:	inc    edi
  423381:	inc    DWORD PTR [esi]
  423383:	mov    ebx,DWORD PTR [ebp+0xc]
  423386:	jmp    0x4232ac
  42338b:	mov    eax,DWORD PTR [ebp+0x8]
  42338e:	test   eax,eax
  423390:	je     0x423395
  423392:	and    DWORD PTR [eax],0x0
  423395:	inc    DWORD PTR [ebx]
  423397:	pop    edi
  423398:	pop    ebx
  423399:	leave  
  42339a:	ret    
  42339b:	push   ebp
  42339c:	mov    ebp,esp
  42339e:	push   ecx
  42339f:	push   ecx
  4233a0:	push   ebx
  4233a1:	push   esi
  4233a2:	push   edi
  4233a3:	xor    edi,edi
  4233a5:	cmp    DWORD PTR ds:0x4664ac,edi
  4233ab:	jne    0x4233b2
  4233ad:	call   0x42453c
  4233b2:	and    BYTE PTR ds:0x465e54,0x0
  4233b9:	push   0x104
  4233be:	mov    esi,0x465d50
  4233c3:	push   esi
  4233c4:	push   edi
  4233c5:	call   DWORD PTR ds:0x42807c
  4233cb:	mov    eax,ds:0x4664b4
  4233d0:	cmp    eax,edi
  4233d2:	mov    DWORD PTR ds:0x465d34,esi
  4233d8:	je     0x4233e1
  4233da:	cmp    BYTE PTR [eax],0x0
  4233dd:	mov    ebx,eax
  4233df:	jne    0x4233e3
  4233e1:	mov    ebx,esi
  4233e3:	lea    eax,[ebp-0x4]
  4233e6:	push   eax
  4233e7:	push   edi
  4233e8:	lea    esi,[ebp-0x8]
  4233eb:	xor    ecx,ecx
  4233ed:	mov    eax,ebx
  4233ef:	call   0x42322f
  4233f4:	mov    esi,DWORD PTR [ebp-0x4]
  4233f7:	mov    eax,DWORD PTR [ebp-0x8]
  4233fa:	shl    esi,0x2
  4233fd:	add    eax,esi
  4233ff:	push   eax
  423400:	call   0x424672
  423405:	mov    edi,eax
  423407:	add    esp,0xc
  42340a:	test   edi,edi
  42340c:	jne    0x423413
  42340e:	or     eax,0xffffffff
  423411:	jmp    0x423438
  423413:	lea    eax,[ebp-0x4]
  423416:	push   eax
  423417:	lea    ecx,[esi+edi*1]
  42341a:	push   edi
  42341b:	lea    esi,[ebp-0x8]
  42341e:	mov    eax,ebx
  423420:	call   0x42322f
  423425:	mov    eax,DWORD PTR [ebp-0x4]
  423428:	dec    eax
  423429:	pop    ecx
  42342a:	mov    ds:0x465d18,eax
  42342f:	pop    ecx
  423430:	mov    DWORD PTR ds:0x465d1c,edi
  423436:	xor    eax,eax
  423438:	pop    edi
  423439:	pop    esi
  42343a:	pop    ebx
  42343b:	leave  
  42343c:	ret    
  42343d:	push   ecx
  42343e:	push   ecx
  42343f:	mov    eax,ds:0x465e58
  423444:	push   ebx
  423445:	push   ebp
  423446:	push   esi
  423447:	push   edi
  423448:	mov    edi,DWORD PTR ds:0x428094
  42344e:	xor    ebx,ebx
  423450:	xor    esi,esi
  423452:	cmp    eax,ebx
  423454:	push   0x2
  423456:	pop    ebp
  423457:	jne    0x423486
  423459:	call   edi
  42345b:	mov    esi,eax
  42345d:	cmp    esi,ebx
  42345f:	je     0x42346d
  423461:	mov    DWORD PTR ds:0x465e58,0x1
  42346b:	jmp    0x42348b
  42346d:	call   DWORD PTR ds:0x42803c
  423473:	cmp    eax,0x78
  423476:	jne    0x423481
  423478:	mov    eax,ebp
  42347a:	mov    ds:0x465e58,eax
  42347f:	jmp    0x423486
  423481:	mov    eax,ds:0x465e58
  423486:	cmp    eax,0x1
  423489:	jne    0x423508
  42348b:	cmp    esi,ebx
  42348d:	jne    0x423497
  42348f:	call   edi
  423491:	mov    esi,eax
  423493:	cmp    esi,ebx
  423495:	je     0x423510
  423497:	cmp    WORD PTR [esi],bx
  42349a:	mov    eax,esi
  42349c:	je     0x4234ac
  42349e:	add    eax,ebp
  4234a0:	cmp    WORD PTR [eax],bx
  4234a3:	jne    0x42349e
  4234a5:	add    eax,ebp
  4234a7:	cmp    WORD PTR [eax],bx
  4234aa:	jne    0x42349e
  4234ac:	mov    edi,DWORD PTR ds:0x428090
  4234b2:	push   ebx
  4234b3:	push   ebx
  4234b4:	push   ebx
  4234b5:	sub    eax,esi
  4234b7:	push   ebx
  4234b8:	sar    eax,1
  4234ba:	inc    eax
  4234bb:	push   eax
  4234bc:	push   esi
  4234bd:	push   ebx
  4234be:	push   ebx
  4234bf:	mov    DWORD PTR [esp+0x34],eax
  4234c3:	call   edi
  4234c5:	mov    ebp,eax
  4234c7:	cmp    ebp,ebx
  4234c9:	je     0x4234fd
  4234cb:	push   ebp
  4234cc:	call   0x424672
  4234d1:	cmp    eax,ebx
  4234d3:	pop    ecx
  4234d4:	mov    DWORD PTR [esp+0x10],eax
  4234d8:	je     0x4234fd
  4234da:	push   ebx
  4234db:	push   ebx
  4234dc:	push   ebp
  4234dd:	push   eax
  4234de:	push   DWORD PTR [esp+0x24]
  4234e2:	push   esi
  4234e3:	push   ebx
  4234e4:	push   ebx
  4234e5:	call   edi
  4234e7:	test   eax,eax
  4234e9:	jne    0x4234f9
  4234eb:	push   DWORD PTR [esp+0x10]
  4234ef:	call   0x42455a
  4234f4:	pop    ecx
  4234f5:	mov    DWORD PTR [esp+0x10],ebx
  4234f9:	mov    ebx,DWORD PTR [esp+0x10]
  4234fd:	push   esi
  4234fe:	call   DWORD PTR ds:0x42808c
  423504:	mov    eax,ebx
  423506:	jmp    0x423558
  423508:	cmp    eax,ebp
  42350a:	je     0x423514
  42350c:	cmp    eax,ebx
  42350e:	je     0x423514
  423510:	xor    eax,eax
  423512:	jmp    0x423558
  423514:	call   DWORD PTR ds:0x428088
  42351a:	mov    esi,eax
  42351c:	cmp    esi,ebx
  42351e:	je     0x423510
  423520:	cmp    BYTE PTR [esi],bl
  423522:	je     0x42352e
  423524:	inc    eax
  423525:	cmp    BYTE PTR [eax],bl
  423527:	jne    0x423524
  423529:	inc    eax
  42352a:	cmp    BYTE PTR [eax],bl
  42352c:	jne    0x423524
  42352e:	sub    eax,esi
  423530:	inc    eax
  423531:	mov    ebp,eax
  423533:	push   ebp
  423534:	call   0x424672
  423539:	mov    edi,eax
  42353b:	cmp    edi,ebx
  42353d:	pop    ecx
  42353e:	jne    0x423544
  423540:	xor    edi,edi
  423542:	jmp    0x42354f
  423544:	push   ebp
  423545:	push   esi
  423546:	push   edi
  423547:	call   0x424690
  42354c:	add    esp,0xc
  42354f:	push   esi
  423550:	call   DWORD PTR ds:0x428084
  423556:	mov    eax,edi
  423558:	pop    edi
  423559:	pop    esi
  42355a:	pop    ebp
  42355b:	pop    ebx
  42355c:	pop    ecx
  42355d:	pop    ecx
  42355e:	ret    
  42355f:	sub    esp,0x48
  423562:	push   ebx
  423563:	mov    ebx,0x480
  423568:	push   ebx
  423569:	call   0x424672
  42356e:	test   eax,eax
  423570:	pop    ecx
  423571:	jne    0x42357b
  423573:	or     eax,0xffffffff
  423576:	jmp    0x423758
  42357b:	mov    ds:0x4663a0,eax
  423580:	mov    DWORD PTR ds:0x466388,0x20
  42358a:	lea    ecx,[eax+0x480]
  423590:	jmp    0x4235b0
  423592:	and    BYTE PTR [eax+0x4],0x0
  423596:	or     DWORD PTR [eax],0xffffffff
  423599:	and    DWORD PTR [eax+0x8],0x0
  42359d:	mov    BYTE PTR [eax+0x5],0xa
  4235a1:	mov    ecx,DWORD PTR ds:0x4663a0
  4235a7:	add    eax,0x24
  4235aa:	add    ecx,0x480
  4235b0:	cmp    eax,ecx
  4235b2:	jb     0x423592
  4235b4:	push   ebp
  4235b5:	push   esi
  4235b6:	push   edi
  4235b7:	lea    eax,[esp+0x14]
  4235bb:	push   eax
  4235bc:	call   DWORD PTR ds:0x42805c
  4235c2:	cmp    WORD PTR [esp+0x46],0x0
  4235c8:	je     0x4236b7
  4235ce:	mov    eax,DWORD PTR [esp+0x48]
  4235d2:	test   eax,eax
  4235d4:	je     0x4236b7
  4235da:	mov    edi,DWORD PTR [eax]
  4235dc:	lea    ebp,[eax+0x4]
  4235df:	lea    eax,[edi+ebp*1]
  4235e2:	mov    DWORD PTR [esp+0x10],eax
  4235e6:	mov    eax,0x800
  4235eb:	cmp    edi,eax
  4235ed:	jl     0x4235f1
  4235ef:	mov    edi,eax
  4235f1:	cmp    DWORD PTR ds:0x466388,edi
  4235f7:	jge    0x423647
  4235f9:	mov    esi,0x4663a4
  4235fe:	push   ebx
  4235ff:	call   0x424672
  423604:	test   eax,eax
  423606:	pop    ecx
  423607:	je     0x423641
  423609:	add    DWORD PTR ds:0x466388,0x20
  423610:	mov    DWORD PTR [esi],eax
  423612:	lea    ecx,[eax+0x480]
  423618:	jmp    0x423630
  42361a:	and    BYTE PTR [eax+0x4],0x0
  42361e:	or     DWORD PTR [eax],0xffffffff
  423621:	and    DWORD PTR [eax+0x8],0x0
  423625:	mov    BYTE PTR [eax+0x5],0xa
  423629:	mov    ecx,DWORD PTR [esi]
  42362b:	add    eax,0x24
  42362e:	add    ecx,ebx
  423630:	cmp    eax,ecx
  423632:	jb     0x42361a
  423634:	add    esi,0x4
  423637:	cmp    DWORD PTR ds:0x466388,edi
  42363d:	jl     0x4235fe
  42363f:	jmp    0x423647
  423641:	mov    edi,DWORD PTR ds:0x466388
  423647:	xor    ebx,ebx
  423649:	test   edi,edi
  42364b:	jle    0x4236b7
  42364d:	mov    eax,DWORD PTR [esp+0x10]
  423651:	mov    eax,DWORD PTR [eax]
  423653:	cmp    eax,0xffffffff
  423656:	je     0x4236ac
  423658:	mov    cl,BYTE PTR [ebp+0x0]
  42365b:	test   cl,0x1
  42365e:	je     0x4236ac
  423660:	test   cl,0x8
  423663:	jne    0x423670
  423665:	push   eax
  423666:	call   DWORD PTR ds:0x42809c
  42366c:	test   eax,eax
  42366e:	je     0x4236ac
  423670:	mov    ecx,ebx
  423672:	mov    eax,ebx
  423674:	and    eax,0x1f
  423677:	lea    eax,[eax+eax*8]
  42367a:	sar    ecx,0x5
  42367d:	mov    ecx,DWORD PTR [ecx*4+0x4663a0]
  423684:	lea    esi,[ecx+eax*4]
  423687:	mov    eax,DWORD PTR [esp+0x10]
  42368b:	mov    eax,DWORD PTR [eax]
  42368d:	mov    DWORD PTR [esi],eax
  42368f:	mov    al,BYTE PTR [ebp+0x0]
  423692:	mov    BYTE PTR [esi+0x4],al
  423695:	lea    eax,[esi+0xc]
  423698:	push   0xfa0
  42369d:	push   eax
  42369e:	call   0x4249dd
  4236a3:	test   eax,eax
  4236a5:	pop    ecx
  4236a6:	pop    ecx
  4236a7:	je     0x4236d7
  4236a9:	inc    DWORD PTR [esi+0x8]
  4236ac:	add    DWORD PTR [esp+0x10],0x4
  4236b1:	inc    ebx
  4236b2:	inc    ebp
  4236b3:	cmp    ebx,edi
  4236b5:	jl     0x42364d
  4236b7:	xor    ebx,ebx
  4236b9:	mov    ecx,DWORD PTR ds:0x4663a0
  4236bf:	lea    eax,[ebx+ebx*8]
  4236c2:	lea    esi,[ecx+eax*4]
  4236c5:	cmp    DWORD PTR [esi],0xffffffff
  4236c8:	jne    0x423739
  4236ca:	test   ebx,ebx
  4236cc:	mov    BYTE PTR [esi+0x4],0x81
  4236d0:	jne    0x4236dc
  4236d2:	push   0xfffffff6
  4236d4:	pop    eax
  4236d5:	jmp    0x4236e6
  4236d7:	or     eax,0xffffffff
  4236da:	jmp    0x423755
  4236dc:	mov    eax,ebx
  4236de:	dec    eax
  4236df:	neg    eax
  4236e1:	sbb    eax,eax
  4236e3:	add    eax,0xfffffff5
  4236e6:	push   eax
  4236e7:	call   DWORD PTR ds:0x428078
  4236ed:	mov    edi,eax
  4236ef:	cmp    edi,0xffffffff
  4236f2:	je     0x423733
  4236f4:	push   edi
  4236f5:	call   DWORD PTR ds:0x42809c
  4236fb:	test   eax,eax
  4236fd:	je     0x423733
  4236ff:	and    eax,0xff
  423704:	cmp    eax,0x2
  423707:	mov    DWORD PTR [esi],edi
  423709:	jne    0x423711
  42370b:	or     BYTE PTR [esi+0x4],0x40
  42370f:	jmp    0x42371a
  423711:	cmp    eax,0x3
  423714:	jne    0x42371a
  423716:	or     BYTE PTR [esi+0x4],0x8
  42371a:	lea    eax,[esi+0xc]
  42371d:	push   0xfa0
  423722:	push   eax
  423723:	call   0x4249dd
  423728:	test   eax,eax
  42372a:	pop    ecx
  42372b:	pop    ecx
  42372c:	je     0x4236d7
  42372e:	inc    DWORD PTR [esi+0x8]
  423731:	jmp    0x42373d
  423733:	or     BYTE PTR [esi+0x4],0x40
  423737:	jmp    0x42373d
  423739:	or     BYTE PTR [esi+0x4],0x80
  42373d:	inc    ebx
  42373e:	cmp    ebx,0x3
  423741:	jl     0x4236b9
  423747:	push   DWORD PTR ds:0x466388
  42374d:	call   DWORD PTR ds:0x428098
  423753:	xor    eax,eax
  423755:	pop    edi
  423756:	pop    esi
  423757:	pop    ebp
  423758:	pop    ebx
  423759:	add    esp,0x48
  42375c:	ret    
  42375d:	push   0xc
  42375f:	push   0x4284f0
  423764:	call   0x423950
  423769:	mov    DWORD PTR [ebp-0x1c],0x428f48
  423770:	cmp    DWORD PTR [ebp-0x1c],0x428f48
  423777:	jae    0x42379b
  423779:	and    DWORD PTR [ebp-0x4],0x0
  42377d:	mov    eax,DWORD PTR [ebp-0x1c]
  423780:	mov    eax,DWORD PTR [eax]
  423782:	test   eax,eax
  423784:	je     0x423791
  423786:	call   eax
  423788:	jmp    0x423791
  42378a:	xor    eax,eax
  42378c:	inc    eax
  42378d:	ret    
  42378e:	mov    esp,DWORD PTR [ebp-0x18]
  423791:	or     DWORD PTR [ebp-0x4],0xffffffff
  423795:	add    DWORD PTR [ebp-0x1c],0x4
  423799:	jmp    0x423770
  42379b:	call   0x42398b
  4237a0:	ret    
  4237a1:	push   0xc
  4237a3:	push   0x428500
  4237a8:	call   0x423950
  4237ad:	mov    DWORD PTR [ebp-0x1c],0x428f50
  4237b4:	cmp    DWORD PTR [ebp-0x1c],0x428f50
  4237bb:	jae    0x4237df
  4237bd:	and    DWORD PTR [ebp-0x4],0x0
  4237c1:	mov    eax,DWORD PTR [ebp-0x1c]
  4237c4:	mov    eax,DWORD PTR [eax]
  4237c6:	test   eax,eax
  4237c8:	je     0x4237d5
  4237ca:	call   eax
  4237cc:	jmp    0x4237d5
  4237ce:	xor    eax,eax
  4237d0:	inc    eax
  4237d1:	ret    
  4237d2:	mov    esp,DWORD PTR [ebp-0x18]
  4237d5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4237d9:	add    DWORD PTR [ebp-0x1c],0x4
  4237dd:	jmp    0x4237b4
  4237df:	call   0x42398b
  4237e4:	ret    
  4237e5:	call   0x423a26
  4237ea:	mov    eax,ds:0x46552c
  4237ef:	cmp    eax,0xffffffff
  4237f2:	je     0x423802
  4237f4:	push   eax
  4237f5:	call   DWORD PTR ds:0x4280a4
  4237fb:	or     DWORD PTR ds:0x46552c,0xffffffff
  423802:	ret    
  423803:	push   ebx
  423804:	push   esi
  423805:	call   DWORD PTR ds:0x42803c
  42380b:	push   DWORD PTR ds:0x46552c
  423811:	mov    ebx,eax
  423813:	call   DWORD PTR ds:0x4280b0
  423819:	mov    esi,eax
  42381b:	test   esi,esi
  42381d:	jne    0x423868
  42381f:	push   0x88
  423824:	push   0x1
  423826:	call   0x424a68
  42382b:	mov    esi,eax
  42382d:	test   esi,esi
  42382f:	pop    ecx
  423830:	pop    ecx
  423831:	je     0x423860
  423833:	push   esi
  423834:	push   DWORD PTR ds:0x46552c
  42383a:	call   DWORD PTR ds:0x4280ac
  423840:	test   eax,eax
  423842:	je     0x423860
  423844:	mov    DWORD PTR [esi+0x54],0x465480
  42384b:	mov    DWORD PTR [esi+0x14],0x1
  423852:	call   DWORD PTR ds:0x428020
  423858:	or     DWORD PTR [esi+0x4],0xffffffff
  42385c:	mov    DWORD PTR [esi],eax
  42385e:	jmp    0x423868
  423860:	push   0x10
  423862:	call   0x422a16
  423867:	pop    ecx
  423868:	push   ebx
  423869:	call   DWORD PTR ds:0x4280a8
  42386f:	mov    eax,esi
  423871:	pop    esi
  423872:	pop    ebx
  423873:	ret    
  423874:	call   0x4239dd
  423879:	test   eax,eax
  42387b:	je     0x42388d
  42387d:	call   DWORD PTR ds:0x4280b4
  423883:	cmp    eax,0xffffffff
  423886:	mov    ds:0x46552c,eax
  42388b:	jne    0x423895
  42388d:	call   0x4237e5
  423892:	xor    eax,eax
  423894:	ret    
  423895:	push   esi
  423896:	push   0x88
  42389b:	push   0x1
  42389d:	call   0x424a68
  4238a2:	mov    esi,eax
  4238a4:	test   esi,esi
  4238a6:	pop    ecx
  4238a7:	pop    ecx
  4238a8:	je     0x4238da
  4238aa:	push   esi
  4238ab:	push   DWORD PTR ds:0x46552c
  4238b1:	call   DWORD PTR ds:0x4280ac
  4238b7:	test   eax,eax
  4238b9:	je     0x4238da
  4238bb:	mov    DWORD PTR [esi+0x54],0x465480
  4238c2:	mov    DWORD PTR [esi+0x14],0x1
  4238c9:	call   DWORD PTR ds:0x428020
  4238cf:	or     DWORD PTR [esi+0x4],0xffffffff
  4238d3:	mov    DWORD PTR [esi],eax
  4238d5:	xor    eax,eax
  4238d7:	inc    eax
  4238d8:	pop    esi
  4238d9:	ret    
  4238da:	call   0x4237e5
  4238df:	xor    eax,eax
  4238e1:	pop    esi
  4238e2:	ret    
  4238e3:	cmp    DWORD PTR ds:0x465d04,0x2
  4238ea:	jne    0x4238f9
  4238ec:	cmp    DWORD PTR ds:0x465d10,0x5
  4238f3:	jb     0x4238f9
  4238f5:	xor    eax,eax
  4238f7:	inc    eax
  4238f8:	ret    
  4238f9:	push   0x3
  4238fb:	pop    eax
  4238fc:	ret    
  4238fd:	xor    eax,eax
  4238ff:	cmp    DWORD PTR [esp+0x4],eax
  423903:	push   0x0
  423905:	sete   al
  423908:	push   0x1000
  42390d:	push   eax
  42390e:	call   DWORD PTR ds:0x4280bc
  423914:	test   eax,eax
  423916:	mov    ds:0x466380,eax
  42391b:	je     0x423947
  42391d:	call   0x4238e3
  423922:	cmp    eax,0x3
  423925:	mov    ds:0x466384,eax
  42392a:	jne    0x42394a
  42392c:	push   0x3f8
  423931:	call   0x424cea
  423936:	test   eax,eax
  423938:	pop    ecx
  423939:	jne    0x42394a
  42393b:	push   DWORD PTR ds:0x466380
  423941:	call   DWORD PTR ds:0x4280b8
  423947:	xor    eax,eax
  423949:	ret    
  42394a:	xor    eax,eax
  42394c:	inc    eax
  42394d:	ret    
  42394e:	int3   
  42394f:	int3   
  423950:	push   0x425818
  423955:	mov    eax,fs:0x0
  42395b:	push   eax
  42395c:	mov    eax,DWORD PTR [esp+0x10]
  423960:	mov    DWORD PTR [esp+0x10],ebp
  423964:	lea    ebp,[esp+0x10]
  423968:	sub    esp,eax
  42396a:	push   ebx
  42396b:	push   esi
  42396c:	push   edi
  42396d:	mov    eax,DWORD PTR [ebp-0x8]
  423970:	mov    DWORD PTR [ebp-0x18],esp
  423973:	push   eax
  423974:	mov    eax,DWORD PTR [ebp-0x4]
  423977:	mov    DWORD PTR [ebp-0x4],0xffffffff
  42397e:	mov    DWORD PTR [ebp-0x8],eax
  423981:	lea    eax,[ebp-0x10]
  423984:	mov    fs:0x0,eax
  42398a:	ret    
  42398b:	mov    ecx,DWORD PTR [ebp-0x10]
  42398e:	mov    DWORD PTR fs:0x0,ecx
  423995:	pop    ecx
  423996:	pop    edi
  423997:	pop    esi
  423998:	pop    ebx
  423999:	leave  
  42399a:	push   ecx
  42399b:	ret    
  42399c:	int3   
  42399d:	int3   
  42399e:	int3   
  42399f:	int3   
  4239a0:	cmp    eax,0x1000
  4239a5:	jae    0x4239b5
  4239a7:	neg    eax
  4239a9:	add    eax,esp
  4239ab:	add    eax,0x4
  4239ae:	test   DWORD PTR [eax],eax
  4239b0:	xchg   esp,eax
  4239b1:	mov    eax,DWORD PTR [eax]
  4239b3:	push   eax
  4239b4:	ret    
  4239b5:	push   ecx
  4239b6:	lea    ecx,[esp+0x8]
  4239ba:	sub    ecx,0x1000
  4239c0:	sub    eax,0x1000
  4239c5:	test   DWORD PTR [ecx],eax
  4239c7:	cmp    eax,0x1000
  4239cc:	jae    0x4239ba
  4239ce:	sub    ecx,eax
  4239d0:	mov    eax,esp
  4239d2:	test   DWORD PTR [ecx],eax
  4239d4:	mov    esp,ecx
  4239d6:	mov    ecx,DWORD PTR [eax]
  4239d8:	mov    eax,DWORD PTR [eax+0x4]
  4239db:	push   eax
  4239dc:	ret    
  4239dd:	push   esi
  4239de:	push   edi
  4239df:	xor    esi,esi
  4239e1:	mov    edi,0x465e60
  4239e6:	cmp    DWORD PTR [esi*8+0x465544],0x1
  4239ee:	jne    0x423a0e
  4239f0:	lea    eax,[esi*8+0x465540]
  4239f7:	mov    DWORD PTR [eax],edi
  4239f9:	push   0xfa0
  4239fe:	push   DWORD PTR [eax]
  423a00:	add    edi,0x18
  423a03:	call   0x4249dd
  423a08:	test   eax,eax
  423a0a:	pop    ecx
  423a0b:	pop    ecx
  423a0c:	je     0x423a1a
  423a0e:	inc    esi
  423a0f:	cmp    esi,0x24
  423a12:	jl     0x4239e6
  423a14:	xor    eax,eax
  423a16:	inc    eax
  423a17:	pop    edi
  423a18:	pop    esi
  423a19:	ret    
  423a1a:	and    DWORD PTR [esi*8+0x465540],0x0
  423a22:	xor    eax,eax
  423a24:	jmp    0x423a17
  423a26:	push   ebx
  423a27:	mov    ebx,DWORD PTR ds:0x4280a0
  423a2d:	push   esi
  423a2e:	mov    esi,0x465540
  423a33:	push   edi
  423a34:	mov    edi,DWORD PTR [esi]
  423a36:	test   edi,edi
  423a38:	je     0x423a4d
  423a3a:	cmp    DWORD PTR [esi+0x4],0x1
  423a3e:	je     0x423a4d
  423a40:	push   edi
  423a41:	call   ebx
  423a43:	push   edi
  423a44:	call   0x42455a
  423a49:	and    DWORD PTR [esi],0x0
  423a4c:	pop    ecx
  423a4d:	add    esi,0x8
  423a50:	cmp    esi,0x465660
  423a56:	jl     0x423a34
  423a58:	mov    esi,0x465540
  423a5d:	pop    edi
  423a5e:	mov    eax,DWORD PTR [esi]
  423a60:	test   eax,eax
  423a62:	je     0x423a6d
  423a64:	cmp    DWORD PTR [esi+0x4],0x1
  423a68:	jne    0x423a6d
  423a6a:	push   eax
  423a6b:	call   ebx
  423a6d:	add    esi,0x8
  423a70:	cmp    esi,0x465660
  423a76:	jl     0x423a5e
  423a78:	pop    esi
  423a79:	pop    ebx
  423a7a:	ret    
  423a7b:	push   ebp
  423a7c:	mov    ebp,esp
  423a7e:	mov    eax,DWORD PTR [ebp+0x8]
  423a81:	push   DWORD PTR [eax*8+0x465540]
  423a88:	call   DWORD PTR ds:0x4280c8
  423a8e:	pop    ebp
  423a8f:	ret    
  423a90:	push   ebp
  423a91:	mov    ebp,esp
  423a93:	push   esi
  423a94:	mov    esi,DWORD PTR [ebp+0x8]
  423a97:	lea    esi,[esi*8+0x465540]
  423a9e:	cmp    DWORD PTR [esi],0x0
  423aa1:	je     0x423aa8
  423aa3:	xor    eax,eax
  423aa5:	inc    eax
  423aa6:	jmp    0x423b0c
  423aa8:	push   edi
  423aa9:	push   0x18
  423aab:	call   0x424672
  423ab0:	mov    edi,eax
  423ab2:	test   edi,edi
  423ab4:	pop    ecx
  423ab5:	jne    0x423ac6
  423ab7:	call   0x4258f0
  423abc:	mov    DWORD PTR [eax],0xc
  423ac2:	xor    eax,eax
  423ac4:	jmp    0x423b0b
  423ac6:	push   0xa
  423ac8:	call   0x423b0f
  423acd:	cmp    DWORD PTR [esi],0x0
  423ad0:	pop    ecx
  423ad1:	jne    0x423af9
  423ad3:	push   0xfa0
  423ad8:	push   edi
  423ad9:	call   0x4249dd
  423ade:	test   eax,eax
  423ae0:	pop    ecx
  423ae1:	pop    ecx
  423ae2:	jne    0x423af5
  423ae4:	push   edi
  423ae5:	call   0x42455a
  423aea:	push   0xa
  423aec:	call   0x423a7b
  423af1:	pop    ecx
  423af2:	pop    ecx
  423af3:	jmp    0x423ab7
  423af5:	mov    DWORD PTR [esi],edi
  423af7:	jmp    0x423b00
  423af9:	push   edi
  423afa:	call   0x42455a
  423aff:	pop    ecx
  423b00:	push   0xa
  423b02:	call   0x423a7b
  423b07:	xor    eax,eax
  423b09:	pop    ecx
  423b0a:	inc    eax
  423b0b:	pop    edi
  423b0c:	pop    esi
  423b0d:	pop    ebp
  423b0e:	ret    
  423b0f:	push   ebp
  423b10:	mov    ebp,esp
  423b12:	mov    eax,DWORD PTR [ebp+0x8]
  423b15:	push   esi
  423b16:	lea    esi,[eax*8+0x465540]
  423b1d:	cmp    DWORD PTR [esi],0x0
  423b20:	jne    0x423b35
  423b22:	push   eax
  423b23:	call   0x423a90
  423b28:	test   eax,eax
  423b2a:	pop    ecx
  423b2b:	jne    0x423b35
  423b2d:	push   0x11
  423b2f:	call   0x422a16
  423b34:	pop    ecx
  423b35:	push   DWORD PTR [esi]
  423b37:	call   DWORD PTR ds:0x4280cc
  423b3d:	pop    esi
  423b3e:	pop    ebp
  423b3f:	ret    
  423b40:	push   esi
  423b41:	push   DWORD PTR ds:0x4664a8
  423b47:	call   0x425aa6
  423b4c:	pop    ecx
  423b4d:	mov    ecx,DWORD PTR ds:0x4664a4
  423b53:	mov    esi,eax
  423b55:	mov    eax,ds:0x4664a8
  423b5a:	mov    edx,ecx
  423b5c:	sub    edx,eax
  423b5e:	add    edx,0x4
  423b61:	cmp    esi,edx
  423b63:	jae    0x423bb3
  423b65:	mov    ecx,0x800
  423b6a:	cmp    esi,ecx
  423b6c:	jae    0x423b70
  423b6e:	mov    ecx,esi
  423b70:	add    ecx,esi
  423b72:	push   ecx
  423b73:	push   eax
  423b74:	call   0x4258f9
  423b79:	test   eax,eax
  423b7b:	pop    ecx
  423b7c:	pop    ecx
  423b7d:	jne    0x423b96
  423b7f:	add    esi,0x10
  423b82:	push   esi
  423b83:	push   DWORD PTR ds:0x4664a8
  423b89:	call   0x4258f9
  423b8e:	test   eax,eax
  423b90:	pop    ecx
  423b91:	pop    ecx
  423b92:	jne    0x423b96
  423b94:	pop    esi
  423b95:	ret    
  423b96:	mov    ecx,DWORD PTR ds:0x4664a4
  423b9c:	sub    ecx,DWORD PTR ds:0x4664a8
  423ba2:	mov    ds:0x4664a8,eax
  423ba7:	sar    ecx,0x2
  423baa:	lea    ecx,[eax+ecx*4]
  423bad:	mov    DWORD PTR ds:0x4664a4,ecx
  423bb3:	mov    DWORD PTR [ecx],edi
  423bb5:	add    DWORD PTR ds:0x4664a4,0x4
  423bbc:	mov    eax,edi
  423bbe:	pop    esi
  423bbf:	ret    
  423bc0:	push   0x80
  423bc5:	call   0x424672
  423bca:	test   eax,eax
  423bcc:	pop    ecx
  423bcd:	mov    ds:0x4664a8,eax
  423bd2:	jne    0x423bd8
  423bd4:	push   0x18
  423bd6:	pop    eax
  423bd7:	ret    
  423bd8:	and    DWORD PTR [eax],0x0
  423bdb:	mov    eax,ds:0x4664a8
  423be0:	mov    ds:0x4664a4,eax
  423be5:	xor    eax,eax
  423be7:	ret    
  423be8:	push   0xc
  423bea:	push   0x428510
  423bef:	call   0x423950
  423bf4:	call   0x422c61
  423bf9:	and    DWORD PTR [ebp-0x4],0x0
  423bfd:	mov    edi,DWORD PTR [ebp+0x8]
  423c00:	call   0x423b40
  423c05:	mov    DWORD PTR [ebp-0x1c],eax
  423c08:	or     DWORD PTR [ebp-0x4],0xffffffff
  423c0c:	call   0x423c1a
  423c11:	mov    eax,DWORD PTR [ebp-0x1c]
  423c14:	call   0x42398b
  423c19:	ret    
  423c1a:	call   0x422c6a
  423c1f:	ret    
  423c20:	push   DWORD PTR [esp+0x4]
  423c24:	call   0x423be8
  423c29:	neg    eax
  423c2b:	sbb    eax,eax
  423c2d:	neg    eax
  423c2f:	pop    ecx
  423c30:	dec    eax
  423c31:	ret    
  423c32:	push   ebp
  423c33:	mov    ebp,esp
  423c35:	sub    esp,0x10
  423c38:	push   ebx
  423c39:	xor    ebx,ebx
  423c3b:	cmp    DWORD PTR ds:0x465fb0,ebx
  423c41:	push   esi
  423c42:	push   edi
  423c43:	jne    0x423cb2
  423c45:	push   0x428580
  423c4a:	call   DWORD PTR ds:0x4280d0
  423c50:	mov    edi,eax
  423c52:	cmp    edi,ebx
  423c54:	je     0x423ced
  423c5a:	mov    esi,DWORD PTR ds:0x428040
  423c60:	push   0x428574
  423c65:	push   edi
  423c66:	call   esi
  423c68:	test   eax,eax
  423c6a:	mov    ds:0x465fb0,eax
  423c6f:	je     0x423ced
  423c71:	push   0x428564
  423c76:	push   edi
  423c77:	call   esi
  423c79:	push   0x428550
  423c7e:	push   edi
  423c7f:	mov    ds:0x465fb4,eax
  423c84:	call   esi
  423c86:	cmp    DWORD PTR ds:0x465d04,0x2
  423c8d:	mov    ds:0x465fb8,eax
  423c92:	jne    0x423cb2
  423c94:	push   0x428534
  423c99:	push   edi
  423c9a:	call   esi
  423c9c:	test   eax,eax
  423c9e:	mov    ds:0x465fc0,eax
  423ca3:	je     0x423cb2
  423ca5:	push   0x42851c
  423caa:	push   edi
  423cab:	call   esi
  423cad:	mov    ds:0x465fbc,eax
  423cb2:	mov    eax,ds:0x465fbc
  423cb7:	test   eax,eax
  423cb9:	je     0x423cf7
  423cbb:	call   eax
  423cbd:	test   eax,eax
  423cbf:	je     0x423cde
  423cc1:	lea    ecx,[ebp-0x4]
  423cc4:	push   ecx
  423cc5:	push   0xc
  423cc7:	lea    ecx,[ebp-0x10]
  423cca:	push   ecx
  423ccb:	push   0x1
  423ccd:	push   eax
  423cce:	call   DWORD PTR ds:0x465fc0
  423cd4:	test   eax,eax
  423cd6:	je     0x423cde
  423cd8:	test   BYTE PTR [ebp-0x8],0x1
  423cdc:	jne    0x423cf7
  423cde:	cmp    DWORD PTR ds:0x465d10,0x4
  423ce5:	jb     0x423cf1
  423ce7:	or     BYTE PTR [ebp+0x12],0x20
  423ceb:	jmp    0x423d16
  423ced:	xor    eax,eax
  423cef:	jmp    0x423d26
  423cf1:	or     BYTE PTR [ebp+0x12],0x4
  423cf5:	jmp    0x423d16
  423cf7:	mov    eax,ds:0x465fb4
  423cfc:	test   eax,eax
  423cfe:	je     0x423d16
  423d00:	call   eax
  423d02:	mov    ebx,eax
  423d04:	test   ebx,ebx
  423d06:	je     0x423d16
  423d08:	mov    eax,ds:0x465fb8
  423d0d:	test   eax,eax
  423d0f:	je     0x423d16
  423d11:	push   ebx
  423d12:	call   eax
  423d14:	mov    ebx,eax
  423d16:	push   DWORD PTR [ebp+0x10]
  423d19:	push   DWORD PTR [ebp+0xc]
  423d1c:	push   DWORD PTR [ebp+0x8]
  423d1f:	push   ebx
  423d20:	call   DWORD PTR ds:0x465fb0
  423d26:	pop    edi
  423d27:	pop    esi
  423d28:	pop    ebx
  423d29:	leave  
  423d2a:	ret    
  423d2b:	int3   
  423d2c:	int3   
  423d2d:	int3   
  423d2e:	int3   
  423d2f:	int3   
  423d30:	push   edi
  423d31:	mov    edi,DWORD PTR [esp+0x8]
  423d35:	jmp    0x423da5
  423d37:	lea    esp,[esp+0x0]
  423d3e:	mov    edi,edi
  423d40:	mov    ecx,DWORD PTR [esp+0x4]
  423d44:	push   edi
  423d45:	test   ecx,0x3
  423d4b:	je     0x423d60
  423d4d:	mov    al,BYTE PTR [ecx]
  423d4f:	add    ecx,0x1
  423d52:	test   al,al
  423d54:	je     0x423d93
  423d56:	test   ecx,0x3
  423d5c:	jne    0x423d4d
  423d5e:	mov    edi,edi
  423d60:	mov    eax,DWORD PTR [ecx]
  423d62:	mov    edx,0x7efefeff
  423d67:	add    edx,eax
  423d69:	xor    eax,0xffffffff
  423d6c:	xor    eax,edx
  423d6e:	add    ecx,0x4
  423d71:	test   eax,0x81010100
  423d76:	je     0x423d60
  423d78:	mov    eax,DWORD PTR [ecx-0x4]
  423d7b:	test   al,al
  423d7d:	je     0x423da2
  423d7f:	test   ah,ah
  423d81:	je     0x423d9d
  423d83:	test   eax,0xff0000
  423d88:	je     0x423d98
  423d8a:	test   eax,0xff000000
  423d8f:	je     0x423d93
  423d91:	jmp    0x423d60
  423d93:	lea    edi,[ecx-0x1]
  423d96:	jmp    0x423da5
  423d98:	lea    edi,[ecx-0x2]
  423d9b:	jmp    0x423da5
  423d9d:	lea    edi,[ecx-0x3]
  423da0:	jmp    0x423da5
  423da2:	lea    edi,[ecx-0x4]
  423da5:	mov    ecx,DWORD PTR [esp+0xc]
  423da9:	test   ecx,0x3
  423daf:	je     0x423dce
  423db1:	mov    dl,BYTE PTR [ecx]
  423db3:	add    ecx,0x1
  423db6:	test   dl,dl
  423db8:	je     0x423e20
  423dba:	mov    BYTE PTR [edi],dl
  423dbc:	add    edi,0x1
  423dbf:	test   ecx,0x3
  423dc5:	jne    0x423db1
  423dc7:	jmp    0x423dce
  423dc9:	mov    DWORD PTR [edi],edx
  423dcb:	add    edi,0x4
  423dce:	mov    edx,0x7efefeff
  423dd3:	mov    eax,DWORD PTR [ecx]
  423dd5:	add    edx,eax
  423dd7:	xor    eax,0xffffffff
  423dda:	xor    eax,edx
  423ddc:	mov    edx,DWORD PTR [ecx]
  423dde:	add    ecx,0x4
  423de1:	test   eax,0x81010100
  423de6:	je     0x423dc9
  423de8:	test   dl,dl
  423dea:	je     0x423e20
  423dec:	test   dh,dh
  423dee:	je     0x423e17
  423df0:	test   edx,0xff0000
  423df6:	je     0x423e0a
  423df8:	test   edx,0xff000000
  423dfe:	je     0x423e02
  423e00:	jmp    0x423dc9
  423e02:	mov    DWORD PTR [edi],edx
  423e04:	mov    eax,DWORD PTR [esp+0x8]
  423e08:	pop    edi
  423e09:	ret    
  423e0a:	mov    WORD PTR [edi],dx
  423e0d:	mov    eax,DWORD PTR [esp+0x8]
  423e11:	mov    BYTE PTR [edi+0x2],0x0
  423e15:	pop    edi
  423e16:	ret    
  423e17:	mov    WORD PTR [edi],dx
  423e1a:	mov    eax,DWORD PTR [esp+0x8]
  423e1e:	pop    edi
  423e1f:	ret    
  423e20:	mov    BYTE PTR [edi],dl
  423e22:	mov    eax,DWORD PTR [esp+0x8]
  423e26:	pop    edi
  423e27:	ret    
  423e28:	int3   
  423e29:	int3   
  423e2a:	int3   
  423e2b:	int3   
  423e2c:	int3   
  423e2d:	int3   
  423e2e:	int3   
  423e2f:	int3   
  423e30:	mov    ecx,DWORD PTR [esp+0xc]
  423e34:	push   edi
  423e35:	test   ecx,ecx
  423e37:	je     0x423ecf
  423e3d:	push   esi
  423e3e:	push   ebx
  423e3f:	mov    ebx,ecx
  423e41:	mov    esi,DWORD PTR [esp+0x14]
  423e45:	test   esi,0x3
  423e4b:	mov    edi,DWORD PTR [esp+0x10]
  423e4f:	jne    0x423e5c
  423e51:	shr    ecx,0x2
  423e54:	jne    0x423edf
  423e5a:	jmp    0x423e83
  423e5c:	mov    al,BYTE PTR [esi]
  423e5e:	add    esi,0x1
  423e61:	mov    BYTE PTR [edi],al
  423e63:	add    edi,0x1
  423e66:	sub    ecx,0x1
  423e69:	je     0x423e96
  423e6b:	test   al,al
  423e6d:	je     0x423e9e
  423e6f:	test   esi,0x3
  423e75:	jne    0x423e5c
  423e77:	mov    ebx,ecx
  423e79:	shr    ecx,0x2
  423e7c:	jne    0x423edf
  423e7e:	and    ebx,0x3
  423e81:	je     0x423e96
  423e83:	mov    al,BYTE PTR [esi]
  423e85:	add    esi,0x1
  423e88:	mov    BYTE PTR [edi],al
  423e8a:	add    edi,0x1
  423e8d:	test   al,al
  423e8f:	je     0x423ec8
  423e91:	sub    ebx,0x1
  423e94:	jne    0x423e83
  423e96:	mov    eax,DWORD PTR [esp+0x10]
  423e9a:	pop    ebx
  423e9b:	pop    esi
  423e9c:	pop    edi
  423e9d:	ret    
  423e9e:	test   edi,0x3
  423ea4:	je     0x423ebc
  423ea6:	mov    BYTE PTR [edi],al
  423ea8:	add    edi,0x1
  423eab:	sub    ecx,0x1
  423eae:	je     0x423f4c
  423eb4:	test   edi,0x3
  423eba:	jne    0x423ea6
  423ebc:	mov    ebx,ecx
  423ebe:	shr    ecx,0x2
  423ec1:	jne    0x423f37
  423ec3:	mov    BYTE PTR [edi],al
  423ec5:	add    edi,0x1
  423ec8:	sub    ebx,0x1
  423ecb:	jne    0x423ec3
  423ecd:	pop    ebx
  423ece:	pop    esi
  423ecf:	mov    eax,DWORD PTR [esp+0x8]
  423ed3:	pop    edi
  423ed4:	ret    
  423ed5:	mov    DWORD PTR [edi],edx
  423ed7:	add    edi,0x4
  423eda:	sub    ecx,0x1
  423edd:	je     0x423e7e
  423edf:	mov    edx,0x7efefeff
  423ee4:	mov    eax,DWORD PTR [esi]
  423ee6:	add    edx,eax
  423ee8:	xor    eax,0xffffffff
  423eeb:	xor    eax,edx
  423eed:	mov    edx,DWORD PTR [esi]
  423eef:	add    esi,0x4
  423ef2:	test   eax,0x81010100
  423ef7:	je     0x423ed5
  423ef9:	test   dl,dl
  423efb:	je     0x423f29
  423efd:	test   dh,dh
  423eff:	je     0x423f1f
  423f01:	test   edx,0xff0000
  423f07:	je     0x423f15
  423f09:	test   edx,0xff000000
  423f0f:	jne    0x423ed5
  423f11:	mov    DWORD PTR [edi],edx
  423f13:	jmp    0x423f2d
  423f15:	and    edx,0xffff
  423f1b:	mov    DWORD PTR [edi],edx
  423f1d:	jmp    0x423f2d
  423f1f:	and    edx,0xff
  423f25:	mov    DWORD PTR [edi],edx
  423f27:	jmp    0x423f2d
  423f29:	xor    edx,edx
  423f2b:	mov    DWORD PTR [edi],edx
  423f2d:	add    edi,0x4
  423f30:	xor    eax,eax
  423f32:	sub    ecx,0x1
  423f35:	je     0x423f43
  423f37:	xor    eax,eax
  423f39:	mov    DWORD PTR [edi],eax
  423f3b:	add    edi,0x4
  423f3e:	sub    ecx,0x1
  423f41:	jne    0x423f39
  423f43:	and    ebx,0x3
  423f46:	jne    0x423ec3
  423f4c:	mov    eax,DWORD PTR [esp+0x10]
  423f50:	pop    ebx
  423f51:	pop    esi
  423f52:	pop    edi
  423f53:	ret    
  423f54:	int3   
  423f55:	int3   
  423f56:	int3   
  423f57:	int3   
  423f58:	int3   
  423f59:	int3   
  423f5a:	int3   
  423f5b:	int3   
  423f5c:	int3   
  423f5d:	int3   
  423f5e:	int3   
  423f5f:	int3   
  423f60:	mov    ecx,DWORD PTR [esp+0x4]
  423f64:	test   ecx,0x3
  423f6a:	je     0x423f90
  423f6c:	mov    al,BYTE PTR [ecx]
  423f6e:	add    ecx,0x1
  423f71:	test   al,al
  423f73:	je     0x423fc3
  423f75:	test   ecx,0x3
  423f7b:	jne    0x423f6c
  423f7d:	add    eax,0x0
  423f82:	lea    esp,[esp+0x0]
  423f89:	lea    esp,[esp+0x0]
  423f90:	mov    eax,DWORD PTR [ecx]
  423f92:	mov    edx,0x7efefeff
  423f97:	add    edx,eax
  423f99:	xor    eax,0xffffffff
  423f9c:	xor    eax,edx
  423f9e:	add    ecx,0x4
  423fa1:	test   eax,0x81010100
  423fa6:	je     0x423f90
  423fa8:	mov    eax,DWORD PTR [ecx-0x4]
  423fab:	test   al,al
  423fad:	je     0x423fe1
  423faf:	test   ah,ah
  423fb1:	je     0x423fd7
  423fb3:	test   eax,0xff0000
  423fb8:	je     0x423fcd
  423fba:	test   eax,0xff000000
  423fbf:	je     0x423fc3
  423fc1:	jmp    0x423f90
  423fc3:	lea    eax,[ecx-0x1]
  423fc6:	mov    ecx,DWORD PTR [esp+0x4]
  423fca:	sub    eax,ecx
  423fcc:	ret    
  423fcd:	lea    eax,[ecx-0x2]
  423fd0:	mov    ecx,DWORD PTR [esp+0x4]
  423fd4:	sub    eax,ecx
  423fd6:	ret    
  423fd7:	lea    eax,[ecx-0x3]
  423fda:	mov    ecx,DWORD PTR [esp+0x4]
  423fde:	sub    eax,ecx
  423fe0:	ret    
  423fe1:	lea    eax,[ecx-0x4]
  423fe4:	mov    ecx,DWORD PTR [esp+0x4]
  423fe8:	sub    eax,ecx
  423fea:	ret    
  423feb:	push   0x8
  423fed:	push   0x428590
  423ff2:	call   0x423950
  423ff7:	and    DWORD PTR [ebp-0x4],0x0
  423ffb:	push   0x0
  423ffd:	push   0x1
  423fff:	call   0x425b72
  424004:	pop    ecx
  424005:	pop    ecx
  424006:	jmp    0x42400f
  424008:	xor    eax,eax
  42400a:	inc    eax
  42400b:	ret    
  42400c:	mov    esp,DWORD PTR [ebp-0x18]
  42400f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424013:	push   0x3
  424015:	call   DWORD PTR ds:0x428068
  42401b:	int3   
  42401c:	cmp    ecx,DWORD PTR ds:0x465660
  424022:	jne    0x424025
  424024:	ret    
  424025:	jmp    0x423feb
  42402a:	movzx  eax,BYTE PTR [esp+0x4]
  42402f:	mov    cl,BYTE PTR [esp+0xc]
  424033:	test   BYTE PTR [eax+0x466161],cl
  424039:	jne    0x424057
  42403b:	cmp    DWORD PTR [esp+0x8],0x0
  424040:	je     0x424050
  424042:	movzx  eax,WORD PTR [eax*2+0x42898a]
  42404a:	and    eax,DWORD PTR [esp+0x8]
  42404e:	jmp    0x424052
  424050:	xor    eax,eax
  424052:	test   eax,eax
  424054:	jne    0x424057
  424056:	ret    
  424057:	xor    eax,eax
  424059:	inc    eax
  42405a:	ret    
  42405b:	push   0x4
  42405d:	push   0x0
  42405f:	push   DWORD PTR [esp+0xc]
  424063:	call   0x42402a
  424068:	add    esp,0xc
  42406b:	ret    
  42406c:	sub    eax,0x3a4
  424071:	je     0x424095
  424073:	sub    eax,0x4
  424076:	je     0x42408f
  424078:	sub    eax,0xd
  42407b:	je     0x424089
  42407d:	dec    eax
  42407e:	je     0x424083
  424080:	xor    eax,eax
  424082:	ret    
  424083:	mov    eax,0x404
  424088:	ret    
  424089:	mov    eax,0x412
  42408e:	ret    
  42408f:	mov    eax,0x804
  424094:	ret    
  424095:	mov    eax,0x411
  42409a:	ret    
  42409b:	push   edi
  42409c:	push   0x40
  42409e:	xor    eax,eax
  4240a0:	pop    ecx
  4240a1:	mov    edi,0x466160
  4240a6:	rep stos DWORD PTR es:[edi],eax
  4240a8:	stos   BYTE PTR es:[edi],al
  4240a9:	xor    eax,eax
  4240ab:	mov    ds:0x466264,eax
  4240b0:	mov    ds:0x46615c,eax
  4240b5:	mov    ds:0x466154,eax
  4240ba:	mov    edi,0x466270
  4240bf:	stos   DWORD PTR es:[edi],eax
  4240c0:	stos   DWORD PTR es:[edi],eax
  4240c1:	stos   DWORD PTR es:[edi],eax
  4240c2:	pop    edi
  4240c3:	ret    
  4240c4:	push   ebp
  4240c5:	mov    ebp,esp
  4240c7:	sub    esp,0x518
  4240cd:	mov    eax,ds:0x465660
  4240d2:	xor    eax,DWORD PTR [ebp+0x4]
  4240d5:	push   esi
  4240d6:	mov    DWORD PTR [ebp-0x4],eax
  4240d9:	lea    eax,[ebp-0x18]
  4240dc:	push   eax
  4240dd:	push   DWORD PTR ds:0x466264
  4240e3:	call   DWORD PTR ds:0x4280dc
  4240e9:	cmp    eax,0x1
  4240ec:	mov    esi,0x100
  4240f1:	jne    0x424204
  4240f7:	xor    eax,eax
  4240f9:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424100:	inc    eax
  424101:	cmp    eax,esi
  424103:	jb     0x4240f9
  424105:	mov    al,BYTE PTR [ebp-0x12]
  424108:	test   al,al
  42410a:	mov    BYTE PTR [ebp-0x118],0x20
  424111:	je     0x424149
  424113:	push   ebx
  424114:	lea    edx,[ebp-0x11]
  424117:	push   edi
  424118:	movzx  ecx,BYTE PTR [edx]
  42411b:	movzx  eax,al
  42411e:	cmp    eax,ecx
  424120:	ja     0x42413f
  424122:	sub    ecx,eax
  424124:	inc    ecx
  424125:	mov    ebx,ecx
  424127:	shr    ecx,0x2
  42412a:	lea    edi,[ebp+eax*1-0x118]
  424131:	mov    eax,0x20202020
  424136:	rep stos DWORD PTR es:[edi],eax
  424138:	mov    ecx,ebx
  42413a:	and    ecx,0x3
  42413d:	rep stos BYTE PTR es:[edi],al
  42413f:	inc    edx
  424140:	mov    al,BYTE PTR [edx]
  424142:	inc    edx
  424143:	test   al,al
  424145:	jne    0x424118
  424147:	pop    edi
  424148:	pop    ebx
  424149:	push   0x0
  42414b:	push   DWORD PTR ds:0x466154
  424151:	lea    eax,[ebp-0x518]
  424157:	push   DWORD PTR ds:0x466264
  42415d:	push   eax
  42415e:	push   esi
  42415f:	lea    eax,[ebp-0x118]
  424165:	push   eax
  424166:	push   0x1
  424168:	call   0x426078
  42416d:	push   0x0
  42416f:	push   DWORD PTR ds:0x466264
  424175:	lea    eax,[ebp-0x218]
  42417b:	push   esi
  42417c:	push   eax
  42417d:	push   esi
  42417e:	lea    eax,[ebp-0x118]
  424184:	push   eax
  424185:	push   esi
  424186:	push   DWORD PTR ds:0x466154
  42418c:	call   0x425cbc
  424191:	push   0x0
  424193:	push   DWORD PTR ds:0x466264
  424199:	lea    eax,[ebp-0x318]
  42419f:	push   esi
  4241a0:	push   eax
  4241a1:	push   esi
  4241a2:	lea    eax,[ebp-0x118]
  4241a8:	push   eax
  4241a9:	push   0x200
  4241ae:	push   DWORD PTR ds:0x466154
  4241b4:	call   0x425cbc
  4241b9:	add    esp,0x5c
  4241bc:	xor    eax,eax
  4241be:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  4241c6:	test   cl,0x1
  4241c9:	je     0x4241e1
  4241cb:	or     BYTE PTR [eax+0x466161],0x10
  4241d2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  4241d9:	mov    BYTE PTR [eax+0x466280],cl
  4241df:	jmp    0x4241fd
  4241e1:	test   cl,0x2
  4241e4:	je     0x4241f6
  4241e6:	or     BYTE PTR [eax+0x466161],0x20
  4241ed:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  4241f4:	jmp    0x4241d9
  4241f6:	and    BYTE PTR [eax+0x466280],0x0
  4241fd:	inc    eax
  4241fe:	cmp    eax,esi
  424200:	jb     0x4241be
  424202:	jmp    0x424248
  424204:	xor    eax,eax
  424206:	cmp    eax,0x41
  424209:	jb     0x424224
  42420b:	cmp    eax,0x5a
  42420e:	ja     0x424224
  424210:	or     BYTE PTR [eax+0x466161],0x10
  424217:	mov    cl,al
  424219:	add    cl,0x20
  42421c:	mov    BYTE PTR [eax+0x466280],cl
  424222:	jmp    0x424243
  424224:	cmp    eax,0x61
  424227:	jb     0x42423c
  424229:	cmp    eax,0x7a
  42422c:	ja     0x42423c
  42422e:	or     BYTE PTR [eax+0x466161],0x20
  424235:	mov    cl,al
  424237:	sub    cl,0x20
  42423a:	jmp    0x42421c
  42423c:	and    BYTE PTR [eax+0x466280],0x0
  424243:	inc    eax
  424244:	cmp    eax,esi
  424246:	jb     0x424206
  424248:	mov    ecx,DWORD PTR [ebp-0x4]
  42424b:	xor    ecx,DWORD PTR [ebp+0x4]
  42424e:	pop    esi
  42424f:	call   0x42401c
  424254:	leave  
  424255:	ret    
  424256:	push   ebp
  424257:	mov    ebp,esp
  424259:	sub    esp,0x1c
  42425c:	mov    eax,ds:0x465660
  424261:	xor    eax,DWORD PTR [ebp+0x4]
  424264:	push   ebx
  424265:	push   esi
  424266:	mov    esi,DWORD PTR [ebp+0x8]
  424269:	xor    ebx,ebx
  42426b:	cmp    esi,ebx
  42426d:	mov    DWORD PTR [ebp-0x4],eax
  424270:	push   edi
  424271:	je     0x4243cb
  424277:	xor    edx,edx
  424279:	xor    eax,eax
  42427b:	cmp    DWORD PTR [eax+0x465670],esi
  424281:	je     0x4242e8
  424283:	add    eax,0x30
  424286:	inc    edx
  424287:	cmp    eax,0xf0
  42428c:	jb     0x42427b
  42428e:	lea    eax,[ebp-0x1c]
  424291:	push   eax
  424292:	push   esi
  424293:	call   DWORD PTR ds:0x4280dc
  424299:	cmp    eax,0x1
  42429c:	jne    0x4243c3
  4242a2:	push   0x40
  4242a4:	xor    eax,eax
  4242a6:	cmp    DWORD PTR [ebp-0x1c],0x1
  4242aa:	pop    ecx
  4242ab:	mov    edi,0x466160
  4242b0:	rep stos DWORD PTR es:[edi],eax
  4242b2:	stos   BYTE PTR es:[edi],al
  4242b3:	mov    DWORD PTR ds:0x466264,esi
  4242b9:	mov    DWORD PTR ds:0x466154,ebx
  4242bf:	jbe    0x4243b1
  4242c5:	cmp    BYTE PTR [ebp-0x16],0x0
  4242c9:	je     0x424389
  4242cf:	lea    ecx,[ebp-0x15]
  4242d2:	mov    dl,BYTE PTR [ecx]
  4242d4:	test   dl,dl
  4242d6:	je     0x424389
  4242dc:	movzx  eax,BYTE PTR [ecx-0x1]
  4242e0:	movzx  edx,dl
  4242e3:	jmp    0x424379
  4242e8:	push   0x40
  4242ea:	xor    eax,eax
  4242ec:	pop    ecx
  4242ed:	mov    edi,0x466160
  4242f2:	rep stos DWORD PTR es:[edi],eax
  4242f4:	lea    ecx,[edx+edx*2]
  4242f7:	shl    ecx,0x4
  4242fa:	mov    DWORD PTR [ebp-0x8],ebx
  4242fd:	stos   BYTE PTR es:[edi],al
  4242fe:	lea    ebx,[ecx+0x465680]
  424304:	mov    al,BYTE PTR [ebx]
  424306:	mov    esi,ebx
  424308:	jmp    0x424333
  42430a:	mov    dl,BYTE PTR [esi+0x1]
  42430d:	test   dl,dl
  42430f:	je     0x424337
  424311:	movzx  eax,al
  424314:	movzx  edi,dl
  424317:	cmp    eax,edi
  424319:	ja     0x42432f
  42431b:	mov    edx,DWORD PTR [ebp-0x8]
  42431e:	mov    dl,BYTE PTR [edx+0x465668]
  424324:	or     BYTE PTR [eax+0x466161],dl
  42432a:	inc    eax
  42432b:	cmp    eax,edi
  42432d:	jbe    0x424324
  42432f:	inc    esi
  424330:	inc    esi
  424331:	mov    al,BYTE PTR [esi]
  424333:	test   al,al
  424335:	jne    0x42430a
  424337:	inc    DWORD PTR [ebp-0x8]
  42433a:	add    ebx,0x8
  42433d:	cmp    DWORD PTR [ebp-0x8],0x4
  424341:	jb     0x424304
  424343:	mov    eax,DWORD PTR [ebp+0x8]
  424346:	mov    ds:0x466264,eax
  42434b:	mov    DWORD PTR ds:0x46615c,0x1
  424355:	call   0x42406c
  42435a:	lea    ecx,[ecx+0x465674]
  424360:	mov    esi,ecx
  424362:	mov    edi,0x466270
  424367:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424368:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424369:	mov    ds:0x466154,eax
  42436e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42436f:	jmp    0x4243d0
  424371:	or     BYTE PTR [eax+0x466161],0x4
  424378:	inc    eax
  424379:	cmp    eax,edx
  42437b:	jbe    0x424371
  42437d:	inc    ecx
  42437e:	inc    ecx
  42437f:	cmp    BYTE PTR [ecx-0x1],0x0
  424383:	jne    0x4242d2
  424389:	xor    ecx,ecx
  42438b:	inc    ecx
  42438c:	mov    eax,ecx
  42438e:	or     BYTE PTR [eax+0x466161],0x8
  424395:	inc    eax
  424396:	cmp    eax,0xff
  42439b:	jb     0x42438e
  42439d:	mov    eax,esi
  42439f:	call   0x42406c
  4243a4:	mov    ds:0x466154,eax
  4243a9:	mov    DWORD PTR ds:0x46615c,ecx
  4243af:	jmp    0x4243b7
  4243b1:	mov    DWORD PTR ds:0x46615c,ebx
  4243b7:	xor    eax,eax
  4243b9:	mov    edi,0x466270
  4243be:	stos   DWORD PTR es:[edi],eax
  4243bf:	stos   DWORD PTR es:[edi],eax
  4243c0:	stos   DWORD PTR es:[edi],eax
  4243c1:	jmp    0x4243d0
  4243c3:	cmp    DWORD PTR ds:0x465fc4,ebx
  4243c9:	je     0x4243d9
  4243cb:	call   0x42409b
  4243d0:	call   0x4240c4
  4243d5:	xor    eax,eax
  4243d7:	jmp    0x4243dc
  4243d9:	or     eax,0xffffffff
  4243dc:	mov    ecx,DWORD PTR [ebp-0x4]
  4243df:	xor    ecx,DWORD PTR [ebp+0x4]
  4243e2:	pop    edi
  4243e3:	pop    esi
  4243e4:	pop    ebx
  4243e5:	call   0x42401c
  4243ea:	leave  
  4243eb:	ret    
  4243ec:	push   0x14
  4243ee:	push   0x4285a0
  4243f3:	call   0x423950
  4243f8:	or     DWORD PTR [ebp-0x1c],0xffffffff
  4243fc:	push   0xd
  4243fe:	call   0x423b0f
  424403:	pop    ecx
  424404:	xor    edi,edi
  424406:	mov    DWORD PTR [ebp-0x4],edi
  424409:	mov    DWORD PTR ds:0x465fc4,edi
  42440f:	mov    eax,DWORD PTR [ebp+0x8]
  424412:	cmp    eax,0xfffffffe
  424415:	jne    0x424429
  424417:	mov    DWORD PTR ds:0x465fc4,0x1
  424421:	call   DWORD PTR ds:0x4280d8
  424427:	jmp    0x424454
  424429:	cmp    eax,0xfffffffd
  42442c:	jne    0x424440
  42442e:	mov    DWORD PTR ds:0x465fc4,0x1
  424438:	call   DWORD PTR ds:0x4280d4
  42443e:	jmp    0x424454
  424440:	cmp    eax,0xfffffffc
  424443:	jne    0x424454
  424445:	mov    DWORD PTR ds:0x465fc4,0x1
  42444f:	mov    eax,ds:0x465ff4
  424454:	mov    DWORD PTR [ebp+0x8],eax
  424457:	cmp    eax,DWORD PTR ds:0x466264
  42445d:	je     0x42451e
  424463:	mov    esi,DWORD PTR ds:0x466158
  424469:	mov    DWORD PTR [ebp-0x20],esi
  42446c:	cmp    esi,edi
  42446e:	je     0x424474
  424470:	cmp    DWORD PTR [esi],edi
  424472:	je     0x424484
  424474:	push   0x220
  424479:	call   0x424672
  42447e:	pop    ecx
  42447f:	mov    esi,eax
  424481:	mov    DWORD PTR [ebp-0x20],esi
  424484:	cmp    esi,edi
  424486:	je     0x424507
  424488:	push   DWORD PTR [ebp+0x8]
  42448b:	call   0x424256
  424490:	pop    ecx
  424491:	mov    DWORD PTR [ebp-0x1c],eax
  424494:	cmp    eax,edi
  424496:	jne    0x424507
  424498:	mov    DWORD PTR [esi],edi
  42449a:	mov    eax,ds:0x466264
  42449f:	mov    DWORD PTR [esi+0x4],eax
  4244a2:	mov    eax,ds:0x46615c
  4244a7:	mov    DWORD PTR [esi+0x8],eax
  4244aa:	mov    eax,ds:0x466154
  4244af:	mov    DWORD PTR [esi+0xc],eax
  4244b2:	xor    eax,eax
  4244b4:	mov    DWORD PTR [ebp-0x24],eax
  4244b7:	cmp    eax,0x5
  4244ba:	jge    0x4244cc
  4244bc:	mov    cx,WORD PTR [eax*2+0x466270]
  4244c4:	mov    WORD PTR [esi+eax*2+0x10],cx
  4244c9:	inc    eax
  4244ca:	jmp    0x4244b4
  4244cc:	xor    eax,eax
  4244ce:	mov    DWORD PTR [ebp-0x24],eax
  4244d1:	cmp    eax,0x101
  4244d6:	jge    0x4244e5
  4244d8:	mov    cl,BYTE PTR [eax+0x466160]
  4244de:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  4244e2:	inc    eax
  4244e3:	jmp    0x4244ce
  4244e5:	xor    eax,eax
  4244e7:	mov    DWORD PTR [ebp-0x24],eax
  4244ea:	cmp    eax,0x100
  4244ef:	jge    0x424501
  4244f1:	mov    cl,BYTE PTR [eax+0x466280]
  4244f7:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  4244fe:	inc    eax
  4244ff:	jmp    0x4244e7
  424501:	mov    DWORD PTR ds:0x466158,esi
  424507:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42450b:	jne    0x424521
  42450d:	cmp    esi,DWORD PTR ds:0x466158
  424513:	je     0x424521
  424515:	push   esi
  424516:	call   0x42455a
  42451b:	pop    ecx
  42451c:	jmp    0x424521
  42451e:	mov    DWORD PTR [ebp-0x1c],edi
  424521:	or     DWORD PTR [ebp-0x4],0xffffffff
  424525:	call   0x424533
  42452a:	mov    eax,DWORD PTR [ebp-0x1c]
  42452d:	call   0x42398b
  424532:	ret    
  424533:	push   0xd
  424535:	call   0x423a7b
  42453a:	pop    ecx
  42453b:	ret    
  42453c:	cmp    DWORD PTR ds:0x4664ac,0x0
  424543:	jne    0x424557
  424545:	push   0xfffffffd
  424547:	call   0x4243ec
  42454c:	pop    ecx
  42454d:	mov    DWORD PTR ds:0x4664ac,0x1
  424557:	xor    eax,eax
  424559:	ret    
  42455a:	push   0xc
  42455c:	push   0x4285b0
  424561:	call   0x423950
  424566:	mov    esi,DWORD PTR [ebp+0x8]
  424569:	test   esi,esi
  42456b:	je     0x4245c5
  42456d:	cmp    DWORD PTR ds:0x466384,0x3
  424574:	jne    0x4245b6
  424576:	push   0x4
  424578:	call   0x423b0f
  42457d:	pop    ecx
  42457e:	and    DWORD PTR [ebp-0x4],0x0
  424582:	push   esi
  424583:	call   0x424d32
  424588:	pop    ecx
  424589:	mov    DWORD PTR [ebp-0x1c],eax
  42458c:	test   eax,eax
  42458e:	je     0x424599
  424590:	push   esi
  424591:	push   eax
  424592:	call   0x424d5d
  424597:	pop    ecx
  424598:	pop    ecx
  424599:	or     DWORD PTR [ebp-0x4],0xffffffff
  42459d:	call   0x4245ad
  4245a2:	cmp    DWORD PTR [ebp-0x1c],0x0
  4245a6:	jne    0x4245c5
  4245a8:	push   DWORD PTR [ebp+0x8]
  4245ab:	jmp    0x4245b7
  4245ad:	push   0x4
  4245af:	call   0x423a7b
  4245b4:	pop    ecx
  4245b5:	ret    
  4245b6:	push   esi
  4245b7:	push   0x0
  4245b9:	push   DWORD PTR ds:0x466380
  4245bf:	call   DWORD PTR ds:0x4280c4
  4245c5:	call   0x42398b
  4245ca:	ret    
  4245cb:	push   0xc
  4245cd:	push   0x4285c0
  4245d2:	call   0x423950
  4245d7:	mov    esi,DWORD PTR [ebp+0x8]
  4245da:	cmp    DWORD PTR ds:0x466384,0x3
  4245e1:	jne    0x424611
  4245e3:	cmp    esi,DWORD PTR ds:0x466144
  4245e9:	ja     0x424611
  4245eb:	push   0x4
  4245ed:	call   0x423b0f
  4245f2:	pop    ecx
  4245f3:	and    DWORD PTR [ebp-0x4],0x0
  4245f7:	push   esi
  4245f8:	call   0x425511
  4245fd:	pop    ecx
  4245fe:	mov    DWORD PTR [ebp-0x1c],eax
  424601:	or     DWORD PTR [ebp-0x4],0xffffffff
  424605:	call   0x42463d
  42460a:	mov    eax,DWORD PTR [ebp-0x1c]
  42460d:	test   eax,eax
  42460f:	jne    0x424634
  424611:	test   esi,esi
  424613:	jne    0x424616
  424615:	inc    esi
  424616:	cmp    DWORD PTR ds:0x466384,0x1
  42461d:	je     0x424625
  42461f:	add    esi,0xf
  424622:	and    esi,0xfffffff0
  424625:	push   esi
  424626:	push   0x0
  424628:	push   DWORD PTR ds:0x466380
  42462e:	call   DWORD PTR ds:0x428030
  424634:	call   0x42398b
  424639:	ret    
  42463a:	mov    esi,DWORD PTR [ebp+0x8]
  42463d:	push   0x4
  42463f:	call   0x423a7b
  424644:	pop    ecx
  424645:	ret    
  424646:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42464b:	ja     0x42466f
  42464d:	push   DWORD PTR [esp+0x4]
  424651:	call   0x4245cb
  424656:	test   eax,eax
  424658:	pop    ecx
  424659:	jne    0x424671
  42465b:	cmp    DWORD PTR [esp+0x8],eax
  42465f:	je     0x424671
  424661:	push   DWORD PTR [esp+0x4]
  424665:	call   0x426232
  42466a:	test   eax,eax
  42466c:	pop    ecx
  42466d:	jne    0x42464d
  42466f:	xor    eax,eax
  424671:	ret    
  424672:	push   DWORD PTR ds:0x466008
  424678:	push   DWORD PTR [esp+0x8]
  42467c:	call   0x424646
  424681:	pop    ecx
  424682:	pop    ecx
  424683:	ret    
  424684:	int3   
  424685:	int3   
  424686:	int3   
  424687:	int3   
  424688:	int3   
  424689:	int3   
  42468a:	int3   
  42468b:	int3   
  42468c:	int3   
  42468d:	int3   
  42468e:	int3   
  42468f:	int3   
  424690:	push   ebp
  424691:	mov    ebp,esp
  424693:	push   edi
  424694:	push   esi
  424695:	mov    esi,DWORD PTR [ebp+0xc]
  424698:	mov    ecx,DWORD PTR [ebp+0x10]
  42469b:	mov    edi,DWORD PTR [ebp+0x8]
  42469e:	mov    eax,ecx
  4246a0:	mov    edx,ecx
  4246a2:	add    eax,esi
  4246a4:	cmp    edi,esi
  4246a6:	jbe    0x4246b0
  4246a8:	cmp    edi,eax
  4246aa:	jb     0x42482c
  4246b0:	test   edi,0x3
  4246b6:	jne    0x4246cc
  4246b8:	shr    ecx,0x2
  4246bb:	and    edx,0x3
  4246be:	cmp    ecx,0x8
  4246c1:	jb     0x4246ec
  4246c3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246c5:	jmp    DWORD PTR [edx*4+0x4247dc]
  4246cc:	mov    eax,edi
  4246ce:	mov    edx,0x3
  4246d3:	sub    ecx,0x4
  4246d6:	jb     0x4246e4
  4246d8:	and    eax,0x3
  4246db:	add    ecx,eax
  4246dd:	jmp    DWORD PTR [eax*4+0x4246f0]
  4246e4:	jmp    DWORD PTR [ecx*4+0x4247ec]
  4246eb:	nop
  4246ec:	jmp    DWORD PTR [ecx*4+0x424770]
  4246f3:	nop
  4246f4:	add    BYTE PTR [edi+0x42],al
  4246f7:	add    BYTE PTR [edi+eax*2],ch
  4246fa:	inc    edx
  4246fb:	add    BYTE PTR [eax+0x47],dl
  4246fe:	inc    edx
  4246ff:	add    BYTE PTR [ebx],ah
  424701:	ror    DWORD PTR [edx-0x75f877fa],1
  424707:	inc    esi
  424708:	add    DWORD PTR [eax+0x468a0147],ecx
  42470e:	add    al,cl
  424710:	jmp    0x289cf17
  424715:	add    esi,0x3
  424718:	add    edi,0x3
  42471b:	cmp    ecx,0x8
  42471e:	jb     0x4246ec
  424720:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424722:	jmp    DWORD PTR [edx*4+0x4247dc]
  424729:	lea    ecx,[ecx+0x0]
  42472c:	and    edx,ecx
  42472e:	mov    al,BYTE PTR [esi]
  424730:	mov    BYTE PTR [edi],al
  424732:	mov    al,BYTE PTR [esi+0x1]
  424735:	shr    ecx,0x2
  424738:	mov    BYTE PTR [edi+0x1],al
  42473b:	add    esi,0x2
  42473e:	add    edi,0x2
  424741:	cmp    ecx,0x8
  424744:	jb     0x4246ec
  424746:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424748:	jmp    DWORD PTR [edx*4+0x4247dc]
  42474f:	nop
  424750:	and    edx,ecx
  424752:	mov    al,BYTE PTR [esi]
  424754:	mov    BYTE PTR [edi],al
  424756:	add    esi,0x1
  424759:	shr    ecx,0x2
  42475c:	add    edi,0x1
  42475f:	cmp    ecx,0x8
  424762:	jb     0x4246ec
  424764:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424766:	jmp    DWORD PTR [edx*4+0x4247dc]
  42476d:	lea    ecx,[ecx+0x0]
  424770:	rol    DWORD PTR [edi+0x42],cl
  424773:	add    al,al
  424775:	inc    edi
  424776:	inc    edx
  424777:	add    BYTE PTR [eax-0x4fffbdb9],bh
  42477d:	inc    edi
  42477e:	inc    edx
  42477f:	add    BYTE PTR [eax-0x5fffbdb9],ch
  424785:	inc    edi
  424786:	inc    edx
  424787:	add    BYTE PTR [eax-0x6fffbdb9],bl
  42478d:	inc    edi
  42478e:	inc    edx
  42478f:	add    BYTE PTR [ebx-0x761b71bc],cl
  424795:	inc    esp
  424796:	(bad)  
  424797:	in     al,0x8b
  424799:	inc    esp
  42479a:	mov    gs,eax
  42479c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4247a0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4247a4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4247a8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4247ac:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4247b0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4247b4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4247b8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4247bc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4247c0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4247c4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4247c8:	lea    eax,[ecx*4+0x0]
  4247cf:	add    esi,eax
  4247d1:	add    edi,eax
  4247d3:	jmp    DWORD PTR [edx*4+0x4247dc]
  4247da:	mov    edi,edi
  4247dc:	in     al,dx
  4247dd:	inc    edi
  4247de:	inc    edx
  4247df:	add    ah,dh
  4247e1:	inc    edi
  4247e2:	inc    edx
  4247e3:	add    BYTE PTR [eax],al
  4247e5:	dec    eax
  4247e6:	inc    edx
  4247e7:	add    BYTE PTR [eax+ecx*2],dl
  4247ea:	inc    edx
  4247eb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4247f1:	leave  
  4247f2:	ret    
  4247f3:	nop
  4247f4:	mov    al,BYTE PTR [esi]
  4247f6:	mov    BYTE PTR [edi],al
  4247f8:	mov    eax,DWORD PTR [ebp+0x8]
  4247fb:	pop    esi
  4247fc:	pop    edi
  4247fd:	leave  
  4247fe:	ret    
  4247ff:	nop
  424800:	mov    al,BYTE PTR [esi]
  424802:	mov    BYTE PTR [edi],al
  424804:	mov    al,BYTE PTR [esi+0x1]
  424807:	mov    BYTE PTR [edi+0x1],al
  42480a:	mov    eax,DWORD PTR [ebp+0x8]
  42480d:	pop    esi
  42480e:	pop    edi
  42480f:	leave  
  424810:	ret    
  424811:	lea    ecx,[ecx+0x0]
  424814:	mov    al,BYTE PTR [esi]
  424816:	mov    BYTE PTR [edi],al
  424818:	mov    al,BYTE PTR [esi+0x1]
  42481b:	mov    BYTE PTR [edi+0x1],al
  42481e:	mov    al,BYTE PTR [esi+0x2]
  424821:	mov    BYTE PTR [edi+0x2],al
  424824:	mov    eax,DWORD PTR [ebp+0x8]
  424827:	pop    esi
  424828:	pop    edi
  424829:	leave  
  42482a:	ret    
  42482b:	nop
  42482c:	lea    esi,[ecx+esi*1-0x4]
  424830:	lea    edi,[ecx+edi*1-0x4]
  424834:	test   edi,0x3
  42483a:	jne    0x424860
  42483c:	shr    ecx,0x2
  42483f:	and    edx,0x3
  424842:	cmp    ecx,0x8
  424845:	jb     0x424854
  424847:	std    
  424848:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42484a:	cld    
  42484b:	jmp    DWORD PTR [edx*4+0x424978]
  424852:	mov    edi,edi
  424854:	neg    ecx
  424856:	jmp    DWORD PTR [ecx*4+0x424928]
  42485d:	lea    ecx,[ecx+0x0]
  424860:	mov    eax,edi
  424862:	mov    edx,0x3
  424867:	cmp    ecx,0x4
  42486a:	jb     0x424878
  42486c:	and    eax,0x3
  42486f:	sub    ecx,eax
  424871:	jmp    DWORD PTR [eax*4+0x42487c]
  424878:	jmp    DWORD PTR [ecx*4+0x424978]
  42487f:	nop
  424880:	mov    WORD PTR [eax+0x42],cs
  424883:	add    BYTE PTR [eax-0x27ffbdb8],dh
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [edx-0x2edcfcba],cl
  424891:	mov    BYTE PTR [edi+0x3],al
  424894:	sub    esi,0x1
  424897:	shr    ecx,0x2
  42489a:	sub    edi,0x1
  42489d:	cmp    ecx,0x8
  4248a0:	jb     0x424854
  4248a2:	std    
  4248a3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4248a5:	cld    
  4248a6:	jmp    DWORD PTR [edx*4+0x424978]
  4248ad:	lea    ecx,[ecx+0x0]
  4248b0:	mov    al,BYTE PTR [esi+0x3]
  4248b3:	and    edx,ecx
  4248b5:	mov    BYTE PTR [edi+0x3],al
  4248b8:	mov    al,BYTE PTR [esi+0x2]
  4248bb:	shr    ecx,0x2
  4248be:	mov    BYTE PTR [edi+0x2],al
  4248c1:	sub    esi,0x2
  4248c4:	sub    edi,0x2
  4248c7:	cmp    ecx,0x8
  4248ca:	jb     0x424854
  4248cc:	std    
  4248cd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4248cf:	cld    
  4248d0:	jmp    DWORD PTR [edx*4+0x424978]
  4248d7:	nop
  4248d8:	mov    al,BYTE PTR [esi+0x3]
  4248db:	and    edx,ecx
  4248dd:	mov    BYTE PTR [edi+0x3],al
  4248e0:	mov    al,BYTE PTR [esi+0x2]
  4248e3:	mov    BYTE PTR [edi+0x2],al
  4248e6:	mov    al,BYTE PTR [esi+0x1]
  4248e9:	shr    ecx,0x2
  4248ec:	mov    BYTE PTR [edi+0x1],al
  4248ef:	sub    esi,0x3
  4248f2:	sub    edi,0x3
  4248f5:	cmp    ecx,0x8
  4248f8:	jb     0x424854
  4248fe:	std    
  4248ff:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424901:	cld    
  424902:	jmp    DWORD PTR [edx*4+0x424978]
  424909:	lea    ecx,[ecx+0x0]
  42490c:	sub    al,0x49
  42490e:	inc    edx
  42490f:	add    BYTE PTR [ecx+ecx*2],dh
  424912:	inc    edx
  424913:	add    BYTE PTR [ecx+ecx*2],bh
  424916:	inc    edx
  424917:	add    BYTE PTR [ecx+ecx*2+0x42],al
  42491b:	add    BYTE PTR [ecx+ecx*2+0x42],cl
  42491f:	add    BYTE PTR [ecx+ecx*2+0x42],dl
  424923:	add    BYTE PTR [ecx+ecx*2+0x42],bl
  424927:	add    BYTE PTR [edi+0x49],ch
  42492a:	inc    edx
  42492b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424931:	inc    esp
  424932:	(bad)  
  424933:	sbb    al,0x8b
  424935:	inc    esp
  424936:	mov    ds,WORD PTR [eax]
  424938:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42493c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  424940:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  424944:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  424948:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42494c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  424950:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  424954:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  424958:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42495c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  424960:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  424964:	lea    eax,[ecx*4+0x0]
  42496b:	add    esi,eax
  42496d:	add    edi,eax
  42496f:	jmp    DWORD PTR [edx*4+0x424978]
  424976:	mov    edi,edi
  424978:	mov    BYTE PTR [ecx+0x42],cl
  42497b:	add    BYTE PTR [eax-0x5fffbdb7],dl
  424981:	dec    ecx
  424982:	inc    edx
  424983:	add    BYTE PTR [ecx+ecx*2+0x458b0042],dh
  42498a:	or     BYTE PTR [esi+0x5f],bl
  42498d:	leave  
  42498e:	ret    
  42498f:	nop
  424990:	mov    al,BYTE PTR [esi+0x3]
  424993:	mov    BYTE PTR [edi+0x3],al
  424996:	mov    eax,DWORD PTR [ebp+0x8]
  424999:	pop    esi
  42499a:	pop    edi
  42499b:	leave  
  42499c:	ret    
  42499d:	lea    ecx,[ecx+0x0]
  4249a0:	mov    al,BYTE PTR [esi+0x3]
  4249a3:	mov    BYTE PTR [edi+0x3],al
  4249a6:	mov    al,BYTE PTR [esi+0x2]
  4249a9:	mov    BYTE PTR [edi+0x2],al
  4249ac:	mov    eax,DWORD PTR [ebp+0x8]
  4249af:	pop    esi
  4249b0:	pop    edi
  4249b1:	leave  
  4249b2:	ret    
  4249b3:	nop
  4249b4:	mov    al,BYTE PTR [esi+0x3]
  4249b7:	mov    BYTE PTR [edi+0x3],al
  4249ba:	mov    al,BYTE PTR [esi+0x2]
  4249bd:	mov    BYTE PTR [edi+0x2],al
  4249c0:	mov    al,BYTE PTR [esi+0x1]
  4249c3:	mov    BYTE PTR [edi+0x1],al
  4249c6:	mov    eax,DWORD PTR [ebp+0x8]
  4249c9:	pop    esi
  4249ca:	pop    edi
  4249cb:	leave  
  4249cc:	ret    
  4249cd:	push   DWORD PTR [esp+0x4]
  4249d1:	call   DWORD PTR ds:0x4280e0
  4249d7:	xor    eax,eax
  4249d9:	inc    eax
  4249da:	ret    0x8
  4249dd:	push   0x10
  4249df:	push   0x428608
  4249e4:	call   0x423950
  4249e9:	mov    eax,ds:0x465fc8
  4249ee:	test   eax,eax
  4249f0:	jne    0x424a29
  4249f2:	cmp    DWORD PTR ds:0x465d04,0x1
  4249f9:	je     0x424a1f
  4249fb:	push   0x4285f4
  424a00:	call   DWORD PTR ds:0x428044
  424a06:	test   eax,eax
  424a08:	je     0x424a1f
  424a0a:	push   0x4285cc
  424a0f:	push   eax
  424a10:	call   DWORD PTR ds:0x428040
  424a16:	mov    ds:0x465fc8,eax
  424a1b:	test   eax,eax
  424a1d:	jne    0x424a29
  424a1f:	mov    eax,0x4249cd
  424a24:	mov    ds:0x465fc8,eax
  424a29:	and    DWORD PTR [ebp-0x4],0x0
  424a2d:	push   DWORD PTR [ebp+0xc]
  424a30:	push   DWORD PTR [ebp+0x8]
  424a33:	call   eax
  424a35:	mov    DWORD PTR [ebp-0x1c],eax
  424a38:	jmp    0x424a5e
  424a3a:	mov    eax,DWORD PTR [ebp-0x14]
  424a3d:	mov    eax,DWORD PTR [eax]
  424a3f:	mov    eax,DWORD PTR [eax]
  424a41:	mov    DWORD PTR [ebp-0x20],eax
  424a44:	xor    eax,eax
  424a46:	inc    eax
  424a47:	ret    
  424a48:	mov    esp,DWORD PTR [ebp-0x18]
  424a4b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  424a52:	jne    0x424a5c
  424a54:	push   0x8
  424a56:	call   DWORD PTR ds:0x4280a8
  424a5c:	xor    eax,eax
  424a5e:	or     DWORD PTR [ebp-0x4],0xffffffff
  424a62:	call   0x42398b
  424a67:	ret    
  424a68:	push   0x10
  424a6a:	push   0x428618
  424a6f:	call   0x423950
  424a74:	mov    esi,DWORD PTR [ebp+0x8]
  424a77:	imul   esi,DWORD PTR [ebp+0xc]
  424a7b:	mov    DWORD PTR [ebp-0x1c],esi
  424a7e:	test   esi,esi
  424a80:	jne    0x424a83
  424a82:	inc    esi
  424a83:	xor    edi,edi
  424a85:	mov    DWORD PTR [ebp-0x20],edi
  424a88:	cmp    esi,0xffffffe0
  424a8b:	ja     0x424af2
  424a8d:	cmp    DWORD PTR ds:0x466384,0x3
  424a94:	jne    0x424add
  424a96:	add    esi,0xf
  424a99:	and    esi,0xfffffff0
  424a9c:	mov    DWORD PTR [ebp+0xc],esi
  424a9f:	mov    ebx,DWORD PTR [ebp-0x1c]
  424aa2:	cmp    ebx,DWORD PTR ds:0x466144
  424aa8:	ja     0x424add
  424aaa:	push   0x4
  424aac:	call   0x423b0f
  424ab1:	pop    ecx
  424ab2:	and    DWORD PTR [ebp-0x4],edi
  424ab5:	push   ebx
  424ab6:	call   0x425511
  424abb:	pop    ecx
  424abc:	mov    DWORD PTR [ebp-0x20],eax
  424abf:	or     DWORD PTR [ebp-0x4],0xffffffff
  424ac3:	call   0x424b12
  424ac8:	mov    edi,DWORD PTR [ebp-0x20]
  424acb:	test   edi,edi
  424acd:	je     0x424ae1
  424acf:	push   DWORD PTR [ebp-0x1c]
  424ad2:	push   0x0
  424ad4:	push   edi
  424ad5:	call   0x426250
  424ada:	add    esp,0xc
  424add:	test   edi,edi
  424adf:	jne    0x424b1b
  424ae1:	push   esi
  424ae2:	push   0x8
  424ae4:	push   DWORD PTR ds:0x466380
  424aea:	call   DWORD PTR ds:0x428030
  424af0:	mov    edi,eax
  424af2:	test   edi,edi
  424af4:	jne    0x424b1b
  424af6:	cmp    DWORD PTR ds:0x466008,edi
  424afc:	je     0x424b1b
  424afe:	push   esi
  424aff:	call   0x426232
  424b04:	pop    ecx
  424b05:	test   eax,eax
  424b07:	jne    0x424a83
  424b0d:	jmp    0x424b1d
  424b0f:	mov    esi,DWORD PTR [ebp+0xc]
  424b12:	push   0x4
  424b14:	call   0x423a7b
  424b19:	pop    ecx
  424b1a:	ret    
  424b1b:	mov    eax,edi
  424b1d:	call   0x42398b
  424b22:	ret    
  424b23:	push   esi
  424b24:	mov    esi,DWORD PTR [esp+0x8]
  424b28:	mov    eax,DWORD PTR [esi+0x3c]
  424b2b:	push   edi
  424b2c:	xor    edi,edi
  424b2e:	cmp    eax,DWORD PTR ds:0x466014
  424b34:	je     0x424b99
  424b36:	cmp    eax,edi
  424b38:	je     0x424b99
  424b3a:	mov    eax,DWORD PTR [esi+0x2c]
  424b3d:	cmp    DWORD PTR [eax],edi
  424b3f:	jne    0x424b99
  424b41:	mov    eax,DWORD PTR [esi+0x34]
  424b44:	cmp    eax,edi
  424b46:	je     0x424b64
  424b48:	cmp    DWORD PTR [eax],edi
  424b4a:	jne    0x424b64
  424b4c:	cmp    eax,DWORD PTR ds:0x466130
  424b52:	je     0x424b64
  424b54:	push   eax
  424b55:	call   0x42455a
  424b5a:	push   DWORD PTR [esi+0x3c]
  424b5d:	call   0x42649f
  424b62:	pop    ecx
  424b63:	pop    ecx
  424b64:	mov    eax,DWORD PTR [esi+0x30]
  424b67:	cmp    eax,edi
  424b69:	je     0x424b87
  424b6b:	cmp    DWORD PTR [eax],edi
  424b6d:	jne    0x424b87
  424b6f:	cmp    eax,DWORD PTR ds:0x466134
  424b75:	je     0x424b87
  424b77:	push   eax
  424b78:	call   0x42455a
  424b7d:	push   DWORD PTR [esi+0x3c]
  424b80:	call   0x426440
  424b85:	pop    ecx
  424b86:	pop    ecx
  424b87:	push   DWORD PTR [esi+0x2c]
  424b8a:	call   0x42455a
  424b8f:	push   DWORD PTR [esi+0x3c]
  424b92:	call   0x42455a
  424b97:	pop    ecx
  424b98:	pop    ecx
  424b99:	mov    eax,DWORD PTR [esi+0x40]
  424b9c:	cmp    eax,DWORD PTR ds:0x46612c
  424ba2:	je     0x424bbc
  424ba4:	cmp    eax,edi
  424ba6:	je     0x424bbc
  424ba8:	cmp    DWORD PTR [eax],edi
  424baa:	jne    0x424bbc
  424bac:	push   eax
  424bad:	call   0x42455a
  424bb2:	push   DWORD PTR [esi+0x44]
  424bb5:	call   0x42455a
  424bba:	pop    ecx
  424bbb:	pop    ecx
  424bbc:	mov    eax,DWORD PTR [esi+0x50]
  424bbf:	cmp    eax,DWORD PTR ds:0x466010
  424bc5:	je     0x424be3
  424bc7:	cmp    eax,edi
  424bc9:	je     0x424be3
  424bcb:	cmp    DWORD PTR [eax+0xb4],edi
  424bd1:	jne    0x424be3
  424bd3:	push   eax
  424bd4:	call   0x4262b0
  424bd9:	push   DWORD PTR [esi+0x50]
  424bdc:	call   0x42455a
  424be1:	pop    ecx
  424be2:	pop    ecx
  424be3:	push   esi
  424be4:	call   0x42455a
  424be9:	pop    ecx
  424bea:	pop    edi
  424beb:	pop    esi
  424bec:	ret    
  424bed:	push   esi
  424bee:	call   0x423803
  424bf3:	mov    esi,eax
  424bf5:	mov    eax,DWORD PTR [esi+0x64]
  424bf8:	cmp    eax,DWORD PTR ds:0x4657bc
  424bfe:	je     0x424caa
  424c04:	test   eax,eax
  424c06:	je     0x424c37
  424c08:	mov    ecx,DWORD PTR [eax+0x2c]
  424c0b:	dec    DWORD PTR [eax]
  424c0d:	test   ecx,ecx
  424c0f:	je     0x424c13
  424c11:	dec    DWORD PTR [ecx]
  424c13:	mov    ecx,DWORD PTR [eax+0x34]
  424c16:	test   ecx,ecx
  424c18:	je     0x424c1c
  424c1a:	dec    DWORD PTR [ecx]
  424c1c:	mov    ecx,DWORD PTR [eax+0x30]
  424c1f:	test   ecx,ecx
  424c21:	je     0x424c25
  424c23:	dec    DWORD PTR [ecx]
  424c25:	mov    ecx,DWORD PTR [eax+0x40]
  424c28:	test   ecx,ecx
  424c2a:	je     0x424c2e
  424c2c:	dec    DWORD PTR [ecx]
  424c2e:	mov    ecx,DWORD PTR [eax+0x4c]
  424c31:	dec    DWORD PTR [ecx+0xb4]
  424c37:	mov    ecx,DWORD PTR ds:0x4657bc
  424c3d:	mov    DWORD PTR [esi+0x64],ecx
  424c40:	mov    ecx,DWORD PTR ds:0x4657bc
  424c46:	inc    DWORD PTR [ecx]
  424c48:	mov    ecx,DWORD PTR ds:0x4657bc
  424c4e:	mov    ecx,DWORD PTR [ecx+0x2c]
  424c51:	test   ecx,ecx
  424c53:	je     0x424c57
  424c55:	inc    DWORD PTR [ecx]
  424c57:	mov    ecx,DWORD PTR ds:0x4657bc
  424c5d:	mov    ecx,DWORD PTR [ecx+0x34]
  424c60:	test   ecx,ecx
  424c62:	je     0x424c66
  424c64:	inc    DWORD PTR [ecx]
  424c66:	mov    ecx,DWORD PTR ds:0x4657bc
  424c6c:	mov    ecx,DWORD PTR [ecx+0x30]
  424c6f:	test   ecx,ecx
  424c71:	je     0x424c75
  424c73:	inc    DWORD PTR [ecx]
  424c75:	mov    ecx,DWORD PTR ds:0x4657bc
  424c7b:	mov    ecx,DWORD PTR [ecx+0x40]
  424c7e:	test   ecx,ecx
  424c80:	je     0x424c84
  424c82:	inc    DWORD PTR [ecx]
  424c84:	mov    ecx,DWORD PTR ds:0x4657bc
  424c8a:	mov    ecx,DWORD PTR [ecx+0x4c]
  424c8d:	inc    DWORD PTR [ecx+0xb4]
  424c93:	test   eax,eax
  424c95:	je     0x424caa
  424c97:	cmp    DWORD PTR [eax],0x0
  424c9a:	jne    0x424caa
  424c9c:	cmp    eax,0x465768
  424ca1:	je     0x424caa
  424ca3:	push   eax
  424ca4:	call   0x424b23
  424ca9:	pop    ecx
  424caa:	mov    eax,DWORD PTR [esi+0x64]
  424cad:	pop    esi
  424cae:	ret    
  424caf:	push   0xc
  424cb1:	push   0x4287a8
  424cb6:	call   0x423950
  424cbb:	push   0xc
  424cbd:	call   0x423b0f
  424cc2:	pop    ecx
  424cc3:	and    DWORD PTR [ebp-0x4],0x0
  424cc7:	call   0x424bed
  424ccc:	mov    DWORD PTR [ebp-0x1c],eax
  424ccf:	or     DWORD PTR [ebp-0x4],0xffffffff
  424cd3:	call   0x424ce1
  424cd8:	mov    eax,DWORD PTR [ebp-0x1c]
  424cdb:	call   0x42398b
  424ce0:	ret    
  424ce1:	push   0xc
  424ce3:	call   0x423a7b
  424ce8:	pop    ecx
  424ce9:	ret    
  424cea:	push   0x140
  424cef:	push   0x0
  424cf1:	push   DWORD PTR ds:0x466380
  424cf7:	call   DWORD PTR ds:0x428030
  424cfd:	test   eax,eax
  424cff:	mov    ds:0x466140,eax
  424d04:	jne    0x424d07
  424d06:	ret    
  424d07:	mov    ecx,DWORD PTR [esp+0x4]
  424d0b:	and    DWORD PTR ds:0x466138,0x0
  424d12:	and    DWORD PTR ds:0x46613c,0x0
  424d19:	mov    ds:0x466148,eax
  424d1e:	xor    eax,eax
  424d20:	mov    DWORD PTR ds:0x466144,ecx
  424d26:	mov    DWORD PTR ds:0x46614c,0x10
  424d30:	inc    eax
  424d31:	ret    
  424d32:	mov    eax,ds:0x46613c
  424d37:	lea    ecx,[eax+eax*4]
  424d3a:	mov    eax,ds:0x466140
  424d3f:	lea    ecx,[eax+ecx*4]
  424d42:	jmp    0x424d56
  424d44:	mov    edx,DWORD PTR [esp+0x4]
  424d48:	sub    edx,DWORD PTR [eax+0xc]
  424d4b:	cmp    edx,0x100000
  424d51:	jb     0x424d5c
  424d53:	add    eax,0x14
  424d56:	cmp    eax,ecx
  424d58:	jb     0x424d44
  424d5a:	xor    eax,eax
  424d5c:	ret    
  424d5d:	push   ebp
  424d5e:	mov    ebp,esp
  424d60:	sub    esp,0x10
  424d63:	mov    ecx,DWORD PTR [ebp+0x8]
  424d66:	mov    eax,DWORD PTR [ecx+0x10]
  424d69:	push   esi
  424d6a:	mov    esi,DWORD PTR [ebp+0xc]
  424d6d:	push   edi
  424d6e:	mov    edi,esi
  424d70:	sub    edi,DWORD PTR [ecx+0xc]
  424d73:	add    esi,0xfffffffc
  424d76:	shr    edi,0xf
  424d79:	mov    ecx,edi
  424d7b:	imul   ecx,ecx,0x204
  424d81:	lea    ecx,[ecx+eax*1+0x144]
  424d88:	mov    DWORD PTR [ebp-0x10],ecx
  424d8b:	mov    ecx,DWORD PTR [esi]
  424d8d:	dec    ecx
  424d8e:	test   cl,0x1
  424d91:	mov    DWORD PTR [ebp-0x4],ecx
  424d94:	jne    0x425071
  424d9a:	push   ebx
  424d9b:	lea    ebx,[ecx+esi*1]
  424d9e:	mov    edx,DWORD PTR [ebx]
  424da0:	mov    DWORD PTR [ebp-0xc],edx
  424da3:	mov    edx,DWORD PTR [esi-0x4]
  424da6:	mov    DWORD PTR [ebp-0x8],edx
  424da9:	mov    edx,DWORD PTR [ebp-0xc]
  424dac:	test   dl,0x1
  424daf:	mov    DWORD PTR [ebp+0xc],ebx
  424db2:	jne    0x424e28
  424db4:	sar    edx,0x4
  424db7:	dec    edx
  424db8:	cmp    edx,0x3f
  424dbb:	jbe    0x424dc0
  424dbd:	push   0x3f
  424dbf:	pop    edx
  424dc0:	mov    ecx,DWORD PTR [ebx+0x4]
  424dc3:	cmp    ecx,DWORD PTR [ebx+0x8]
  424dc6:	jne    0x424e0a
  424dc8:	cmp    edx,0x20
  424dcb:	mov    ebx,0x80000000
  424dd0:	jae    0x424deb
  424dd2:	mov    ecx,edx
  424dd4:	shr    ebx,cl
  424dd6:	lea    ecx,[edx+eax*1+0x4]
  424dda:	not    ebx
  424ddc:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424de0:	dec    BYTE PTR [ecx]
  424de2:	jne    0x424e07
  424de4:	mov    ecx,DWORD PTR [ebp+0x8]
  424de7:	and    DWORD PTR [ecx],ebx
  424de9:	jmp    0x424e07
  424deb:	lea    ecx,[edx-0x20]
  424dee:	shr    ebx,cl
  424df0:	lea    ecx,[edx+eax*1+0x4]
  424df4:	not    ebx
  424df6:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424dfd:	dec    BYTE PTR [ecx]
  424dff:	jne    0x424e07
  424e01:	mov    ecx,DWORD PTR [ebp+0x8]
  424e04:	and    DWORD PTR [ecx+0x4],ebx
  424e07:	mov    ebx,DWORD PTR [ebp+0xc]
  424e0a:	mov    edx,DWORD PTR [ebx+0x8]
  424e0d:	mov    ebx,DWORD PTR [ebx+0x4]
  424e10:	mov    ecx,DWORD PTR [ebp-0x4]
  424e13:	add    ecx,DWORD PTR [ebp-0xc]
  424e16:	mov    DWORD PTR [edx+0x4],ebx
  424e19:	mov    edx,DWORD PTR [ebp+0xc]
  424e1c:	mov    ebx,DWORD PTR [edx+0x4]
  424e1f:	mov    edx,DWORD PTR [edx+0x8]
  424e22:	mov    DWORD PTR [ebx+0x8],edx
  424e25:	mov    DWORD PTR [ebp-0x4],ecx
  424e28:	mov    edx,ecx
  424e2a:	sar    edx,0x4
  424e2d:	dec    edx
  424e2e:	cmp    edx,0x3f
  424e31:	jbe    0x424e36
  424e33:	push   0x3f
  424e35:	pop    edx
  424e36:	mov    ebx,DWORD PTR [ebp-0x8]
  424e39:	and    ebx,0x1
  424e3c:	mov    DWORD PTR [ebp-0xc],ebx
  424e3f:	jne    0x424ed4
  424e45:	sub    esi,DWORD PTR [ebp-0x8]
  424e48:	mov    ebx,DWORD PTR [ebp-0x8]
  424e4b:	sar    ebx,0x4
  424e4e:	push   0x3f
  424e50:	mov    DWORD PTR [ebp+0xc],esi
  424e53:	dec    ebx
  424e54:	pop    esi
  424e55:	cmp    ebx,esi
  424e57:	jbe    0x424e5b
  424e59:	mov    ebx,esi
  424e5b:	add    ecx,DWORD PTR [ebp-0x8]
  424e5e:	mov    edx,ecx
  424e60:	sar    edx,0x4
  424e63:	dec    edx
  424e64:	cmp    edx,esi
  424e66:	mov    DWORD PTR [ebp-0x4],ecx
  424e69:	jbe    0x424e6d
  424e6b:	mov    edx,esi
  424e6d:	cmp    ebx,edx
  424e6f:	je     0x424ecf
  424e71:	mov    ecx,DWORD PTR [ebp+0xc]
  424e74:	mov    esi,DWORD PTR [ecx+0x4]
  424e77:	cmp    esi,DWORD PTR [ecx+0x8]
  424e7a:	jne    0x424eb7
  424e7c:	cmp    ebx,0x20
  424e7f:	mov    esi,0x80000000
  424e84:	jae    0x424e9d
  424e86:	mov    ecx,ebx
  424e88:	shr    esi,cl
  424e8a:	not    esi
  424e8c:	and    DWORD PTR [eax+edi*4+0x44],esi
  424e90:	dec    BYTE PTR [ebx+eax*1+0x4]
  424e94:	jne    0x424eb7
  424e96:	mov    ecx,DWORD PTR [ebp+0x8]
  424e99:	and    DWORD PTR [ecx],esi
  424e9b:	jmp    0x424eb7
  424e9d:	lea    ecx,[ebx-0x20]
  424ea0:	shr    esi,cl
  424ea2:	not    esi
  424ea4:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424eab:	dec    BYTE PTR [ebx+eax*1+0x4]
  424eaf:	jne    0x424eb7
  424eb1:	mov    ecx,DWORD PTR [ebp+0x8]
  424eb4:	and    DWORD PTR [ecx+0x4],esi
  424eb7:	mov    ecx,DWORD PTR [ebp+0xc]
  424eba:	mov    esi,DWORD PTR [ecx+0x8]
  424ebd:	mov    ecx,DWORD PTR [ecx+0x4]
  424ec0:	mov    DWORD PTR [esi+0x4],ecx
  424ec3:	mov    ecx,DWORD PTR [ebp+0xc]
  424ec6:	mov    esi,DWORD PTR [ecx+0x4]
  424ec9:	mov    ecx,DWORD PTR [ecx+0x8]
  424ecc:	mov    DWORD PTR [esi+0x8],ecx
  424ecf:	mov    esi,DWORD PTR [ebp+0xc]
  424ed2:	jmp    0x424ed7
  424ed4:	mov    ebx,DWORD PTR [ebp+0x8]
  424ed7:	cmp    DWORD PTR [ebp-0xc],0x0
  424edb:	jne    0x424ee5
  424edd:	cmp    ebx,edx
  424edf:	je     0x424f65
  424ee5:	mov    ecx,DWORD PTR [ebp-0x10]
  424ee8:	lea    ecx,[ecx+edx*8]
  424eeb:	mov    ebx,DWORD PTR [ecx+0x4]
  424eee:	mov    DWORD PTR [esi+0x8],ecx
  424ef1:	mov    DWORD PTR [esi+0x4],ebx
  424ef4:	mov    DWORD PTR [ecx+0x4],esi
  424ef7:	mov    ecx,DWORD PTR [esi+0x4]
  424efa:	mov    DWORD PTR [ecx+0x8],esi
  424efd:	mov    ecx,DWORD PTR [esi+0x4]
  424f00:	cmp    ecx,DWORD PTR [esi+0x8]
  424f03:	jne    0x424f65
  424f05:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424f09:	mov    BYTE PTR [ebp+0xf],cl
  424f0c:	inc    cl
  424f0e:	cmp    edx,0x20
  424f11:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424f15:	jae    0x424f3c
  424f17:	cmp    BYTE PTR [ebp+0xf],0x0
  424f1b:	jne    0x424f2b
  424f1d:	mov    ecx,edx
  424f1f:	mov    ebx,0x80000000
  424f24:	shr    ebx,cl
  424f26:	mov    ecx,DWORD PTR [ebp+0x8]
  424f29:	or     DWORD PTR [ecx],ebx
  424f2b:	mov    ebx,0x80000000
  424f30:	mov    ecx,edx
  424f32:	shr    ebx,cl
  424f34:	lea    eax,[eax+edi*4+0x44]
  424f38:	or     DWORD PTR [eax],ebx
  424f3a:	jmp    0x424f65
  424f3c:	cmp    BYTE PTR [ebp+0xf],0x0
  424f40:	jne    0x424f52
  424f42:	lea    ecx,[edx-0x20]
  424f45:	mov    ebx,0x80000000
  424f4a:	shr    ebx,cl
  424f4c:	mov    ecx,DWORD PTR [ebp+0x8]
  424f4f:	or     DWORD PTR [ecx+0x4],ebx
  424f52:	lea    ecx,[edx-0x20]
  424f55:	mov    edx,0x80000000
  424f5a:	shr    edx,cl
  424f5c:	lea    eax,[eax+edi*4+0xc4]
  424f63:	or     DWORD PTR [eax],edx
  424f65:	mov    eax,DWORD PTR [ebp-0x4]
  424f68:	mov    DWORD PTR [esi],eax
  424f6a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424f6e:	mov    eax,DWORD PTR [ebp-0x10]
  424f71:	dec    DWORD PTR [eax]
  424f73:	jne    0x425070
  424f79:	mov    eax,ds:0x466138
  424f7e:	test   eax,eax
  424f80:	je     0x425062
  424f86:	mov    ecx,DWORD PTR ds:0x466150
  424f8c:	mov    esi,DWORD PTR ds:0x4280c0
  424f92:	push   0x4000
  424f97:	shl    ecx,0xf
  424f9a:	add    ecx,DWORD PTR [eax+0xc]
  424f9d:	mov    ebx,0x8000
  424fa2:	push   ebx
  424fa3:	push   ecx
  424fa4:	call   esi
  424fa6:	mov    ecx,DWORD PTR ds:0x466150
  424fac:	mov    eax,ds:0x466138
  424fb1:	mov    edx,0x80000000
  424fb6:	shr    edx,cl
  424fb8:	or     DWORD PTR [eax+0x8],edx
  424fbb:	mov    eax,ds:0x466138
  424fc0:	mov    eax,DWORD PTR [eax+0x10]
  424fc3:	mov    ecx,DWORD PTR ds:0x466150
  424fc9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424fd1:	mov    eax,ds:0x466138
  424fd6:	mov    eax,DWORD PTR [eax+0x10]
  424fd9:	dec    BYTE PTR [eax+0x43]
  424fdc:	mov    eax,ds:0x466138
  424fe1:	mov    ecx,DWORD PTR [eax+0x10]
  424fe4:	cmp    BYTE PTR [ecx+0x43],0x0
  424fe8:	jne    0x424ff3
  424fea:	and    DWORD PTR [eax+0x4],0xfffffffe
  424fee:	mov    eax,ds:0x466138
  424ff3:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424ff7:	jne    0x425062
  424ff9:	push   ebx
  424ffa:	push   0x0
  424ffc:	push   DWORD PTR [eax+0xc]
  424fff:	call   esi
  425001:	mov    eax,ds:0x466138
  425006:	push   DWORD PTR [eax+0x10]
  425009:	push   0x0
  42500b:	push   DWORD PTR ds:0x466380
  425011:	call   DWORD PTR ds:0x4280c4
  425017:	mov    eax,ds:0x46613c
  42501c:	mov    edx,DWORD PTR ds:0x466140
  425022:	lea    eax,[eax+eax*4]
  425025:	shl    eax,0x2
  425028:	mov    ecx,eax
  42502a:	mov    eax,ds:0x466138
  42502f:	sub    ecx,eax
  425031:	lea    ecx,[ecx+edx*1-0x14]
  425035:	push   ecx
  425036:	lea    ecx,[eax+0x14]
  425039:	push   ecx
  42503a:	push   eax
  42503b:	call   0x426890
  425040:	mov    eax,DWORD PTR [ebp+0x8]
  425043:	add    esp,0xc
  425046:	dec    DWORD PTR ds:0x46613c
  42504c:	cmp    eax,DWORD PTR ds:0x466138
  425052:	jbe    0x425058
  425054:	sub    DWORD PTR [ebp+0x8],0x14
  425058:	mov    eax,ds:0x466140
  42505d:	mov    ds:0x466148,eax
  425062:	mov    eax,DWORD PTR [ebp+0x8]
  425065:	mov    ds:0x466138,eax
  42506a:	mov    DWORD PTR ds:0x466150,edi
  425070:	pop    ebx
  425071:	pop    edi
  425072:	pop    esi
  425073:	leave  
  425074:	ret    
  425075:	mov    eax,ds:0x46613c
  42507a:	mov    ecx,DWORD PTR ds:0x46614c
  425080:	push   edi
  425081:	xor    edi,edi
  425083:	cmp    eax,ecx
  425085:	jne    0x4250bb
  425087:	lea    eax,[ecx+ecx*4+0x50]
  42508b:	shl    eax,0x2
  42508e:	push   eax
  42508f:	push   DWORD PTR ds:0x466140
  425095:	push   edi
  425096:	push   DWORD PTR ds:0x466380
  42509c:	call   DWORD PTR ds:0x4280e8
  4250a2:	cmp    eax,edi
  4250a4:	jne    0x4250aa
  4250a6:	xor    eax,eax
  4250a8:	pop    edi
  4250a9:	ret    
  4250aa:	add    DWORD PTR ds:0x46614c,0x10
  4250b1:	mov    ds:0x466140,eax
  4250b6:	mov    eax,ds:0x46613c
  4250bb:	mov    ecx,DWORD PTR ds:0x466140
  4250c1:	push   esi
  4250c2:	push   0x41c4
  4250c7:	push   0x8
  4250c9:	push   DWORD PTR ds:0x466380
  4250cf:	lea    eax,[eax+eax*4]
  4250d2:	lea    esi,[ecx+eax*4]
  4250d5:	call   DWORD PTR ds:0x428030
  4250db:	cmp    eax,edi
  4250dd:	mov    DWORD PTR [esi+0x10],eax
  4250e0:	jne    0x4250e6
  4250e2:	xor    eax,eax
  4250e4:	jmp    0x425129
  4250e6:	push   0x4
  4250e8:	push   0x2000
  4250ed:	push   0x100000
  4250f2:	push   edi
  4250f3:	call   DWORD PTR ds:0x4280e4
  4250f9:	cmp    eax,edi
  4250fb:	mov    DWORD PTR [esi+0xc],eax
  4250fe:	jne    0x425112
  425100:	push   DWORD PTR [esi+0x10]
  425103:	push   edi
  425104:	push   DWORD PTR ds:0x466380
  42510a:	call   DWORD PTR ds:0x4280c4
  425110:	jmp    0x4250e2
  425112:	or     DWORD PTR [esi+0x8],0xffffffff
  425116:	mov    DWORD PTR [esi],edi
  425118:	mov    DWORD PTR [esi+0x4],edi
  42511b:	inc    DWORD PTR ds:0x46613c
  425121:	mov    eax,DWORD PTR [esi+0x10]
  425124:	or     DWORD PTR [eax],0xffffffff
  425127:	mov    eax,esi
  425129:	pop    esi
  42512a:	pop    edi
  42512b:	ret    
  42512c:	push   ebp
  42512d:	mov    ebp,esp
  42512f:	push   ecx
  425130:	push   ecx
  425131:	mov    ecx,DWORD PTR [ebp+0x8]
  425134:	mov    eax,DWORD PTR [ecx+0x8]
  425137:	push   ebx
  425138:	push   esi
  425139:	mov    esi,DWORD PTR [ecx+0x10]
  42513c:	push   edi
  42513d:	xor    ebx,ebx
  42513f:	jmp    0x425144
  425141:	shl    eax,1
  425143:	inc    ebx
  425144:	test   eax,eax
  425146:	jge    0x425141
  425148:	mov    eax,ebx
  42514a:	imul   eax,eax,0x204
  425150:	lea    eax,[eax+esi*1+0x144]
  425157:	push   0x3f
  425159:	mov    DWORD PTR [ebp-0x8],eax
  42515c:	pop    edx
  42515d:	mov    DWORD PTR [eax+0x8],eax
  425160:	mov    DWORD PTR [eax+0x4],eax
  425163:	add    eax,0x8
  425166:	dec    edx
  425167:	jne    0x42515d
  425169:	push   0x4
  42516b:	mov    edi,ebx
  42516d:	push   0x1000
  425172:	shl    edi,0xf
  425175:	add    edi,DWORD PTR [ecx+0xc]
  425178:	push   0x8000
  42517d:	push   edi
  42517e:	call   DWORD PTR ds:0x4280e4
  425184:	test   eax,eax
  425186:	jne    0x425190
  425188:	or     eax,0xffffffff
  42518b:	jmp    0x42522d
  425190:	lea    edx,[edi+0x7000]
  425196:	cmp    edi,edx
  425198:	mov    DWORD PTR [ebp-0x4],edx
  42519b:	ja     0x4251e0
  42519d:	mov    ecx,edx
  42519f:	sub    ecx,edi
  4251a1:	shr    ecx,0xc
  4251a4:	lea    eax,[edi+0x10]
  4251a7:	inc    ecx
  4251a8:	or     DWORD PTR [eax-0x8],0xffffffff
  4251ac:	or     DWORD PTR [eax+0xfec],0xffffffff
  4251b3:	lea    edx,[eax+0xffc]
  4251b9:	mov    DWORD PTR [eax],edx
  4251bb:	lea    edx,[eax-0x1004]
  4251c1:	mov    DWORD PTR [eax-0x4],0xff0
  4251c8:	mov    DWORD PTR [eax+0x4],edx
  4251cb:	mov    DWORD PTR [eax+0xfe8],0xff0
  4251d5:	add    eax,0x1000
  4251da:	dec    ecx
  4251db:	jne    0x4251a8
  4251dd:	mov    edx,DWORD PTR [ebp-0x4]
  4251e0:	mov    eax,DWORD PTR [ebp-0x8]
  4251e3:	add    eax,0x1f8
  4251e8:	lea    ecx,[edi+0xc]
  4251eb:	mov    DWORD PTR [eax+0x4],ecx
  4251ee:	mov    DWORD PTR [ecx+0x8],eax
  4251f1:	lea    ecx,[edx+0xc]
  4251f4:	mov    DWORD PTR [eax+0x8],ecx
  4251f7:	mov    DWORD PTR [ecx+0x4],eax
  4251fa:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  4251ff:	xor    edi,edi
  425201:	inc    edi
  425202:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425209:	mov    al,BYTE PTR [esi+0x43]
  42520c:	mov    cl,al
  42520e:	inc    cl
  425210:	test   al,al
  425212:	mov    eax,DWORD PTR [ebp+0x8]
  425215:	mov    BYTE PTR [esi+0x43],cl
  425218:	jne    0x42521d
  42521a:	or     DWORD PTR [eax+0x4],edi
  42521d:	mov    edx,0x80000000
  425222:	mov    ecx,ebx
  425224:	shr    edx,cl
  425226:	not    edx
  425228:	and    DWORD PTR [eax+0x8],edx
  42522b:	mov    eax,ebx
  42522d:	pop    edi
  42522e:	pop    esi
  42522f:	pop    ebx
  425230:	leave  
  425231:	ret    
  425232:	push   ebp
  425233:	mov    ebp,esp
  425235:	sub    esp,0xc
  425238:	mov    ecx,DWORD PTR [ebp+0x8]
  42523b:	mov    eax,DWORD PTR [ecx+0x10]
  42523e:	push   ebx
  42523f:	push   esi
  425240:	mov    esi,DWORD PTR [ebp+0x10]
  425243:	push   edi
  425244:	mov    edi,DWORD PTR [ebp+0xc]
  425247:	mov    edx,edi
  425249:	sub    edx,DWORD PTR [ecx+0xc]
  42524c:	add    esi,0x17
  42524f:	shr    edx,0xf
  425252:	mov    ecx,edx
  425254:	imul   ecx,ecx,0x204
  42525a:	lea    ecx,[ecx+eax*1+0x144]
  425261:	mov    DWORD PTR [ebp-0xc],ecx
  425264:	mov    ecx,DWORD PTR [edi-0x4]
  425267:	and    esi,0xfffffff0
  42526a:	dec    ecx
  42526b:	cmp    esi,ecx
  42526d:	lea    edi,[ecx+edi*1-0x4]
  425271:	mov    ebx,DWORD PTR [edi]
  425273:	mov    DWORD PTR [ebp+0x10],ecx
  425276:	mov    DWORD PTR [ebp-0x4],ebx
  425279:	jle    0x4253d4
  42527f:	test   bl,0x1
  425282:	jne    0x4253cd
  425288:	add    ebx,ecx
  42528a:	cmp    esi,ebx
  42528c:	jg     0x4253cd
  425292:	mov    ecx,DWORD PTR [ebp-0x4]
  425295:	sar    ecx,0x4
  425298:	dec    ecx
  425299:	cmp    ecx,0x3f
  42529c:	mov    DWORD PTR [ebp-0x8],ecx
  42529f:	jbe    0x4252a7
  4252a1:	push   0x3f
  4252a3:	pop    ecx
  4252a4:	mov    DWORD PTR [ebp-0x8],ecx
  4252a7:	mov    ebx,DWORD PTR [edi+0x4]
  4252aa:	cmp    ebx,DWORD PTR [edi+0x8]
  4252ad:	jne    0x4252f2
  4252af:	cmp    ecx,0x20
  4252b2:	mov    ebx,0x80000000
  4252b7:	jae    0x4252d3
  4252b9:	shr    ebx,cl
  4252bb:	mov    ecx,DWORD PTR [ebp-0x8]
  4252be:	lea    ecx,[ecx+eax*1+0x4]
  4252c2:	not    ebx
  4252c4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  4252c8:	dec    BYTE PTR [ecx]
  4252ca:	jne    0x4252f2
  4252cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4252cf:	and    DWORD PTR [ecx],ebx
  4252d1:	jmp    0x4252f2
  4252d3:	add    ecx,0xffffffe0
  4252d6:	shr    ebx,cl
  4252d8:	mov    ecx,DWORD PTR [ebp-0x8]
  4252db:	lea    ecx,[ecx+eax*1+0x4]
  4252df:	not    ebx
  4252e1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4252e8:	dec    BYTE PTR [ecx]
  4252ea:	jne    0x4252f2
  4252ec:	mov    ecx,DWORD PTR [ebp+0x8]
  4252ef:	and    DWORD PTR [ecx+0x4],ebx
  4252f2:	mov    ecx,DWORD PTR [edi+0x8]
  4252f5:	mov    ebx,DWORD PTR [edi+0x4]
  4252f8:	mov    DWORD PTR [ecx+0x4],ebx
  4252fb:	mov    ecx,DWORD PTR [edi+0x4]
  4252fe:	mov    edi,DWORD PTR [edi+0x8]
  425301:	mov    DWORD PTR [ecx+0x8],edi
  425304:	mov    ecx,DWORD PTR [ebp+0x10]
  425307:	sub    ecx,esi
  425309:	add    DWORD PTR [ebp-0x4],ecx
  42530c:	cmp    DWORD PTR [ebp-0x4],0x0
  425310:	jle    0x4253bb
  425316:	mov    edi,DWORD PTR [ebp-0x4]
  425319:	mov    ecx,DWORD PTR [ebp+0xc]
  42531c:	sar    edi,0x4
  42531f:	dec    edi
  425320:	cmp    edi,0x3f
  425323:	lea    ecx,[ecx+esi*1-0x4]
  425327:	jbe    0x42532c
  425329:	push   0x3f
  42532b:	pop    edi
  42532c:	mov    ebx,DWORD PTR [ebp-0xc]
  42532f:	lea    ebx,[ebx+edi*8]
  425332:	mov    DWORD PTR [ebp+0x10],ebx
  425335:	mov    ebx,DWORD PTR [ebx+0x4]
  425338:	mov    DWORD PTR [ecx+0x4],ebx
  42533b:	mov    ebx,DWORD PTR [ebp+0x10]
  42533e:	mov    DWORD PTR [ecx+0x8],ebx
  425341:	mov    DWORD PTR [ebx+0x4],ecx
  425344:	mov    ebx,DWORD PTR [ecx+0x4]
  425347:	mov    DWORD PTR [ebx+0x8],ecx
  42534a:	mov    ebx,DWORD PTR [ecx+0x4]
  42534d:	cmp    ebx,DWORD PTR [ecx+0x8]
  425350:	jne    0x4253a9
  425352:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  425356:	mov    BYTE PTR [ebp+0x13],cl
  425359:	inc    cl
  42535b:	cmp    edi,0x20
  42535e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  425362:	jae    0x425380
  425364:	cmp    BYTE PTR [ebp+0x13],0x0
  425368:	jne    0x425378
  42536a:	mov    ecx,edi
  42536c:	mov    ebx,0x80000000
  425371:	shr    ebx,cl
  425373:	mov    ecx,DWORD PTR [ebp+0x8]
  425376:	or     DWORD PTR [ecx],ebx
  425378:	lea    eax,[eax+edx*4+0x44]
  42537c:	mov    ecx,edi
  42537e:	jmp    0x4253a0
  425380:	cmp    BYTE PTR [ebp+0x13],0x0
  425384:	jne    0x425396
  425386:	lea    ecx,[edi-0x20]
  425389:	mov    ebx,0x80000000
  42538e:	shr    ebx,cl
  425390:	mov    ecx,DWORD PTR [ebp+0x8]
  425393:	or     DWORD PTR [ecx+0x4],ebx
  425396:	lea    eax,[eax+edx*4+0xc4]
  42539d:	lea    ecx,[edi-0x20]
  4253a0:	mov    edx,0x80000000
  4253a5:	shr    edx,cl
  4253a7:	or     DWORD PTR [eax],edx
  4253a9:	mov    edx,DWORD PTR [ebp+0xc]
  4253ac:	mov    ecx,DWORD PTR [ebp-0x4]
  4253af:	lea    eax,[edx+esi*1-0x4]
  4253b3:	mov    DWORD PTR [eax],ecx
  4253b5:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  4253b9:	jmp    0x4253be
  4253bb:	mov    edx,DWORD PTR [ebp+0xc]
  4253be:	lea    eax,[esi+0x1]
  4253c1:	mov    DWORD PTR [edx-0x4],eax
  4253c4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  4253c8:	jmp    0x425509
  4253cd:	xor    eax,eax
  4253cf:	jmp    0x42550c
  4253d4:	jge    0x425509
  4253da:	mov    ebx,DWORD PTR [ebp+0xc]
  4253dd:	sub    DWORD PTR [ebp+0x10],esi
  4253e0:	lea    ecx,[esi+0x1]
  4253e3:	mov    DWORD PTR [ebx-0x4],ecx
  4253e6:	lea    ebx,[ebx+esi*1-0x4]
  4253ea:	mov    esi,DWORD PTR [ebp+0x10]
  4253ed:	sar    esi,0x4
  4253f0:	dec    esi
  4253f1:	cmp    esi,0x3f
  4253f4:	mov    DWORD PTR [ebp+0xc],ebx
  4253f7:	mov    DWORD PTR [ebx-0x4],ecx
  4253fa:	jbe    0x4253ff
  4253fc:	push   0x3f
  4253fe:	pop    esi
  4253ff:	test   BYTE PTR [ebp-0x4],0x1
  425403:	jne    0x425489
  425409:	mov    esi,DWORD PTR [ebp-0x4]
  42540c:	sar    esi,0x4
  42540f:	dec    esi
  425410:	cmp    esi,0x3f
  425413:	jbe    0x425418
  425415:	push   0x3f
  425417:	pop    esi
  425418:	mov    ecx,DWORD PTR [edi+0x4]
  42541b:	cmp    ecx,DWORD PTR [edi+0x8]
  42541e:	jne    0x425462
  425420:	cmp    esi,0x20
  425423:	mov    ebx,0x80000000
  425428:	jae    0x425443
  42542a:	mov    ecx,esi
  42542c:	shr    ebx,cl
  42542e:	lea    esi,[esi+eax*1+0x4]
  425432:	not    ebx
  425434:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425438:	dec    BYTE PTR [esi]
  42543a:	jne    0x42545f
  42543c:	mov    ecx,DWORD PTR [ebp+0x8]
  42543f:	and    DWORD PTR [ecx],ebx
  425441:	jmp    0x42545f
  425443:	lea    ecx,[esi-0x20]
  425446:	shr    ebx,cl
  425448:	lea    ecx,[esi+eax*1+0x4]
  42544c:	not    ebx
  42544e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425455:	dec    BYTE PTR [ecx]
  425457:	jne    0x42545f
  425459:	mov    ecx,DWORD PTR [ebp+0x8]
  42545c:	and    DWORD PTR [ecx+0x4],ebx
  42545f:	mov    ebx,DWORD PTR [ebp+0xc]
  425462:	mov    ecx,DWORD PTR [edi+0x8]
  425465:	mov    esi,DWORD PTR [edi+0x4]
  425468:	mov    DWORD PTR [ecx+0x4],esi
  42546b:	mov    esi,DWORD PTR [edi+0x8]
  42546e:	mov    ecx,DWORD PTR [edi+0x4]
  425471:	mov    DWORD PTR [ecx+0x8],esi
  425474:	mov    esi,DWORD PTR [ebp+0x10]
  425477:	add    esi,DWORD PTR [ebp-0x4]
  42547a:	mov    DWORD PTR [ebp+0x10],esi
  42547d:	sar    esi,0x4
  425480:	dec    esi
  425481:	cmp    esi,0x3f
  425484:	jbe    0x425489
  425486:	push   0x3f
  425488:	pop    esi
  425489:	mov    ecx,DWORD PTR [ebp-0xc]
  42548c:	lea    ecx,[ecx+esi*8]
  42548f:	mov    edi,DWORD PTR [ecx+0x4]
  425492:	mov    DWORD PTR [ebx+0x8],ecx
  425495:	mov    DWORD PTR [ebx+0x4],edi
  425498:	mov    DWORD PTR [ecx+0x4],ebx
  42549b:	mov    ecx,DWORD PTR [ebx+0x4]
  42549e:	mov    DWORD PTR [ecx+0x8],ebx
  4254a1:	mov    ecx,DWORD PTR [ebx+0x4]
  4254a4:	cmp    ecx,DWORD PTR [ebx+0x8]
  4254a7:	jne    0x425500
  4254a9:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4254ad:	mov    BYTE PTR [ebp+0xf],cl
  4254b0:	inc    cl
  4254b2:	cmp    esi,0x20
  4254b5:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4254b9:	jae    0x4254d7
  4254bb:	cmp    BYTE PTR [ebp+0xf],0x0
  4254bf:	jne    0x4254cf
  4254c1:	mov    ecx,esi
  4254c3:	mov    edi,0x80000000
  4254c8:	shr    edi,cl
  4254ca:	mov    ecx,DWORD PTR [ebp+0x8]
  4254cd:	or     DWORD PTR [ecx],edi
  4254cf:	lea    eax,[eax+edx*4+0x44]
  4254d3:	mov    ecx,esi
  4254d5:	jmp    0x4254f7
  4254d7:	cmp    BYTE PTR [ebp+0xf],0x0
  4254db:	jne    0x4254ed
  4254dd:	lea    ecx,[esi-0x20]
  4254e0:	mov    edi,0x80000000
  4254e5:	shr    edi,cl
  4254e7:	mov    ecx,DWORD PTR [ebp+0x8]
  4254ea:	or     DWORD PTR [ecx+0x4],edi
  4254ed:	lea    eax,[eax+edx*4+0xc4]
  4254f4:	lea    ecx,[esi-0x20]
  4254f7:	mov    edx,0x80000000
  4254fc:	shr    edx,cl
  4254fe:	or     DWORD PTR [eax],edx
  425500:	mov    eax,DWORD PTR [ebp+0x10]
  425503:	mov    DWORD PTR [ebx],eax
  425505:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425509:	xor    eax,eax
  42550b:	inc    eax
  42550c:	pop    edi
  42550d:	pop    esi
  42550e:	pop    ebx
  42550f:	leave  
  425510:	ret    
  425511:	push   ebp
  425512:	mov    ebp,esp
  425514:	sub    esp,0x14
  425517:	mov    ecx,DWORD PTR [ebp+0x8]
  42551a:	mov    eax,ds:0x46613c
  42551f:	mov    edx,DWORD PTR ds:0x466140
  425525:	add    ecx,0x17
  425528:	and    ecx,0xfffffff0
  42552b:	push   ebx
  42552c:	mov    DWORD PTR [ebp-0x10],ecx
  42552f:	sar    ecx,0x4
  425532:	push   esi
  425533:	lea    eax,[eax+eax*4]
  425536:	push   edi
  425537:	dec    ecx
  425538:	cmp    ecx,0x20
  42553b:	lea    edi,[edx+eax*4]
  42553e:	mov    DWORD PTR [ebp-0x4],edi
  425541:	jge    0x42554e
  425543:	or     esi,0xffffffff
  425546:	shr    esi,cl
  425548:	or     DWORD PTR [ebp-0x8],0xffffffff
  42554c:	jmp    0x42555b
  42554e:	add    ecx,0xffffffe0
  425551:	or     eax,0xffffffff
  425554:	xor    esi,esi
  425556:	shr    eax,cl
  425558:	mov    DWORD PTR [ebp-0x8],eax
  42555b:	mov    eax,ds:0x466148
  425560:	mov    ebx,eax
  425562:	mov    DWORD PTR [ebp-0xc],esi
  425565:	cmp    ebx,edi
  425567:	jmp    0x42557d
  425569:	mov    ecx,DWORD PTR [ebx+0x4]
  42556c:	mov    edi,DWORD PTR [ebx]
  42556e:	and    ecx,DWORD PTR [ebp-0x8]
  425571:	and    edi,esi
  425573:	or     ecx,edi
  425575:	jne    0x425582
  425577:	add    ebx,0x14
  42557a:	cmp    ebx,DWORD PTR [ebp-0x4]
  42557d:	mov    DWORD PTR [ebp+0x8],ebx
  425580:	jb     0x425569
  425582:	cmp    ebx,DWORD PTR [ebp-0x4]
  425585:	jne    0x4255ab
  425587:	mov    ebx,edx
  425589:	jmp    0x42559c
  42558b:	mov    ecx,DWORD PTR [ebx+0x4]
  42558e:	mov    edi,DWORD PTR [ebx]
  425590:	and    ecx,DWORD PTR [ebp-0x8]
  425593:	and    edi,esi
  425595:	or     ecx,edi
  425597:	jne    0x4255a3
  425599:	add    ebx,0x14
  42559c:	cmp    ebx,eax
  42559e:	mov    DWORD PTR [ebp+0x8],ebx
  4255a1:	jb     0x42558b
  4255a3:	cmp    ebx,eax
  4255a5:	je     0x42563f
  4255ab:	mov    DWORD PTR ds:0x466148,ebx
  4255b1:	mov    eax,DWORD PTR [ebx+0x10]
  4255b4:	mov    edx,DWORD PTR [eax]
  4255b6:	cmp    edx,0xffffffff
  4255b9:	mov    DWORD PTR [ebp-0x4],edx
  4255bc:	je     0x4255d2
  4255be:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  4255c5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  4255c9:	and    ecx,DWORD PTR [ebp-0x8]
  4255cc:	and    edi,esi
  4255ce:	or     ecx,edi
  4255d0:	jne    0x425608
  4255d2:	mov    edx,DWORD PTR [eax+0xc4]
  4255d8:	and    edx,DWORD PTR [ebp-0x8]
  4255db:	and    DWORD PTR [ebp-0x4],0x0
  4255df:	lea    ecx,[eax+0x44]
  4255e2:	mov    esi,DWORD PTR [ecx]
  4255e4:	and    esi,DWORD PTR [ebp-0xc]
  4255e7:	or     edx,esi
  4255e9:	mov    esi,DWORD PTR [ebp-0xc]
  4255ec:	jne    0x425605
  4255ee:	mov    edx,DWORD PTR [ecx+0x84]
  4255f4:	and    edx,DWORD PTR [ebp-0x8]
  4255f7:	inc    DWORD PTR [ebp-0x4]
  4255fa:	add    ecx,0x4
  4255fd:	mov    edi,DWORD PTR [ecx]
  4255ff:	and    edi,esi
  425601:	or     edx,edi
  425603:	je     0x4255ee
  425605:	mov    edx,DWORD PTR [ebp-0x4]
  425608:	mov    ecx,edx
  42560a:	imul   ecx,ecx,0x204
  425610:	lea    ecx,[ecx+eax*1+0x144]
  425617:	mov    DWORD PTR [ebp-0xc],ecx
  42561a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42561e:	xor    edi,edi
  425620:	and    ecx,esi
  425622:	jne    0x425691
  425624:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42562b:	and    ecx,DWORD PTR [ebp-0x8]
  42562e:	push   0x20
  425630:	pop    edi
  425631:	jmp    0x425691
  425633:	cmp    DWORD PTR [ebx+0x8],0x0
  425637:	jne    0x425644
  425639:	add    ebx,0x14
  42563c:	mov    DWORD PTR [ebp+0x8],ebx
  42563f:	cmp    ebx,DWORD PTR [ebp-0x4]
  425642:	jb     0x425633
  425644:	cmp    ebx,DWORD PTR [ebp-0x4]
  425647:	jne    0x42566f
  425649:	mov    ebx,edx
  42564b:	jmp    0x425656
  42564d:	cmp    DWORD PTR [ebx+0x8],0x0
  425651:	jne    0x42565d
  425653:	add    ebx,0x14
  425656:	cmp    ebx,eax
  425658:	mov    DWORD PTR [ebp+0x8],ebx
  42565b:	jb     0x42564d
  42565d:	cmp    ebx,eax
  42565f:	jne    0x42566f
  425661:	call   0x425075
  425666:	mov    ebx,eax
  425668:	test   ebx,ebx
  42566a:	mov    DWORD PTR [ebp+0x8],ebx
  42566d:	je     0x425687
  42566f:	push   ebx
  425670:	call   0x42512c
  425675:	pop    ecx
  425676:	mov    ecx,DWORD PTR [ebx+0x10]
  425679:	mov    DWORD PTR [ecx],eax
  42567b:	mov    eax,DWORD PTR [ebx+0x10]
  42567e:	cmp    DWORD PTR [eax],0xffffffff
  425681:	jne    0x4255ab
  425687:	xor    eax,eax
  425689:	jmp    0x425808
  42568e:	shl    ecx,1
  425690:	inc    edi
  425691:	test   ecx,ecx
  425693:	jge    0x42568e
  425695:	mov    ecx,DWORD PTR [ebp-0xc]
  425698:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  42569c:	mov    ecx,DWORD PTR [edx]
  42569e:	sub    ecx,DWORD PTR [ebp-0x10]
  4256a1:	mov    esi,ecx
  4256a3:	sar    esi,0x4
  4256a6:	dec    esi
  4256a7:	cmp    esi,0x3f
  4256aa:	mov    DWORD PTR [ebp-0x8],ecx
  4256ad:	jle    0x4256b2
  4256af:	push   0x3f
  4256b1:	pop    esi
  4256b2:	cmp    esi,edi
  4256b4:	je     0x4257bb
  4256ba:	mov    ecx,DWORD PTR [edx+0x4]
  4256bd:	cmp    ecx,DWORD PTR [edx+0x8]
  4256c0:	jne    0x42571e
  4256c2:	cmp    edi,0x20
  4256c5:	mov    ebx,0x80000000
  4256ca:	jge    0x4256f2
  4256cc:	mov    ecx,edi
  4256ce:	shr    ebx,cl
  4256d0:	mov    ecx,DWORD PTR [ebp-0x4]
  4256d3:	lea    edi,[eax+edi*1+0x4]
  4256d7:	not    ebx
  4256d9:	mov    DWORD PTR [ebp-0x14],ebx
  4256dc:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4256e0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4256e4:	dec    BYTE PTR [edi]
  4256e6:	jne    0x42571b
  4256e8:	mov    ecx,DWORD PTR [ebp-0x14]
  4256eb:	mov    ebx,DWORD PTR [ebp+0x8]
  4256ee:	and    DWORD PTR [ebx],ecx
  4256f0:	jmp    0x42571e
  4256f2:	lea    ecx,[edi-0x20]
  4256f5:	shr    ebx,cl
  4256f7:	mov    ecx,DWORD PTR [ebp-0x4]
  4256fa:	lea    ecx,[eax+ecx*4+0xc4]
  425701:	lea    edi,[eax+edi*1+0x4]
  425705:	not    ebx
  425707:	and    DWORD PTR [ecx],ebx
  425709:	dec    BYTE PTR [edi]
  42570b:	mov    DWORD PTR [ebp-0x14],ebx
  42570e:	jne    0x42571b
  425710:	mov    ebx,DWORD PTR [ebp+0x8]
  425713:	mov    ecx,DWORD PTR [ebp-0x14]
  425716:	and    DWORD PTR [ebx+0x4],ecx
  425719:	jmp    0x42571e
  42571b:	mov    ebx,DWORD PTR [ebp+0x8]
  42571e:	cmp    DWORD PTR [ebp-0x8],0x0
  425722:	mov    ecx,DWORD PTR [edx+0x8]
  425725:	mov    edi,DWORD PTR [edx+0x4]
  425728:	mov    DWORD PTR [ecx+0x4],edi
  42572b:	mov    ecx,DWORD PTR [edx+0x4]
  42572e:	mov    edi,DWORD PTR [edx+0x8]
  425731:	mov    DWORD PTR [ecx+0x8],edi
  425734:	je     0x4257c7
  42573a:	mov    ecx,DWORD PTR [ebp-0xc]
  42573d:	lea    ecx,[ecx+esi*8]
  425740:	mov    edi,DWORD PTR [ecx+0x4]
  425743:	mov    DWORD PTR [edx+0x8],ecx
  425746:	mov    DWORD PTR [edx+0x4],edi
  425749:	mov    DWORD PTR [ecx+0x4],edx
  42574c:	mov    ecx,DWORD PTR [edx+0x4]
  42574f:	mov    DWORD PTR [ecx+0x8],edx
  425752:	mov    ecx,DWORD PTR [edx+0x4]
  425755:	cmp    ecx,DWORD PTR [edx+0x8]
  425758:	jne    0x4257b8
  42575a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42575e:	mov    BYTE PTR [ebp+0xb],cl
  425761:	inc    cl
  425763:	cmp    esi,0x20
  425766:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42576a:	jge    0x42578f
  42576c:	cmp    BYTE PTR [ebp+0xb],0x0
  425770:	jne    0x42577d
  425772:	mov    edi,0x80000000
  425777:	mov    ecx,esi
  425779:	shr    edi,cl
  42577b:	or     DWORD PTR [ebx],edi
  42577d:	mov    ecx,esi
  42577f:	mov    edi,0x80000000
  425784:	shr    edi,cl
  425786:	mov    ecx,DWORD PTR [ebp-0x4]
  425789:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42578d:	jmp    0x4257b8
  42578f:	cmp    BYTE PTR [ebp+0xb],0x0
  425793:	jne    0x4257a2
  425795:	lea    ecx,[esi-0x20]
  425798:	mov    edi,0x80000000
  42579d:	shr    edi,cl
  42579f:	or     DWORD PTR [ebx+0x4],edi
  4257a2:	mov    ecx,DWORD PTR [ebp-0x4]
  4257a5:	lea    edi,[eax+ecx*4+0xc4]
  4257ac:	lea    ecx,[esi-0x20]
  4257af:	mov    esi,0x80000000
  4257b4:	shr    esi,cl
  4257b6:	or     DWORD PTR [edi],esi
  4257b8:	mov    ecx,DWORD PTR [ebp-0x8]
  4257bb:	test   ecx,ecx
  4257bd:	je     0x4257ca
  4257bf:	mov    DWORD PTR [edx],ecx
  4257c1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4257c5:	jmp    0x4257ca
  4257c7:	mov    ecx,DWORD PTR [ebp-0x8]
  4257ca:	mov    esi,DWORD PTR [ebp-0x10]
  4257cd:	add    edx,ecx
  4257cf:	lea    ecx,[esi+0x1]
  4257d2:	mov    DWORD PTR [edx],ecx
  4257d4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4257d8:	mov    esi,DWORD PTR [ebp-0xc]
  4257db:	mov    ecx,DWORD PTR [esi]
  4257dd:	test   ecx,ecx
  4257df:	lea    edi,[ecx+0x1]
  4257e2:	mov    DWORD PTR [esi],edi
  4257e4:	jne    0x425800
  4257e6:	cmp    ebx,DWORD PTR ds:0x466138
  4257ec:	jne    0x425800
  4257ee:	mov    ecx,DWORD PTR [ebp-0x4]
  4257f1:	cmp    ecx,DWORD PTR ds:0x466150
  4257f7:	jne    0x425800
  4257f9:	and    DWORD PTR ds:0x466138,0x0
  425800:	mov    ecx,DWORD PTR [ebp-0x4]
  425803:	mov    DWORD PTR [eax],ecx
  425805:	lea    eax,[edx+0x4]
  425808:	pop    edi
  425809:	pop    esi
  42580a:	pop    ebx
  42580b:	leave  
  42580c:	ret    
  42580d:	int3   
  42580e:	int3   
  42580f:	int3   
  425810:	push   esi
  425811:	inc    ebx
  425812:	xor    dh,BYTE PTR [eax]
  425814:	pop    eax
  425815:	inc    ebx
  425816:	xor    BYTE PTR [eax],dh
  425818:	push   ebp
  425819:	mov    ebp,esp
  42581b:	sub    esp,0x8
  42581e:	push   ebx
  42581f:	push   esi
  425820:	push   edi
  425821:	push   ebp
  425822:	cld    
  425823:	mov    ebx,DWORD PTR [ebp+0xc]
  425826:	mov    eax,DWORD PTR [ebp+0x8]
  425829:	test   DWORD PTR [eax+0x4],0x6
  425830:	jne    0x4258b8
  425836:	mov    DWORD PTR [ebp-0x8],eax
  425839:	mov    eax,DWORD PTR [ebp+0x10]
  42583c:	mov    DWORD PTR [ebp-0x4],eax
  42583f:	lea    eax,[ebp-0x8]
  425842:	mov    DWORD PTR [ebx-0x4],eax
  425845:	mov    esi,DWORD PTR [ebx+0xc]
  425848:	mov    edi,DWORD PTR [ebx+0x8]
  42584b:	cmp    esi,0xffffffff
  42584e:	je     0x4258b1
  425850:	lea    ecx,[esi+esi*2]
  425853:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  425858:	je     0x42589f
  42585a:	push   esi
  42585b:	push   ebp
  42585c:	lea    ebp,[ebx+0x10]
  42585f:	call   DWORD PTR [edi+ecx*4+0x4]
  425863:	pop    ebp
  425864:	pop    esi
  425865:	mov    ebx,DWORD PTR [ebp+0xc]
  425868:	or     eax,eax
  42586a:	je     0x42589f
  42586c:	js     0x4258aa
  42586e:	mov    edi,DWORD PTR [ebx+0x8]
  425871:	push   ebx
  425872:	call   0x4267a0
  425877:	add    esp,0x4
  42587a:	lea    ebp,[ebx+0x10]
  42587d:	push   esi
  42587e:	push   ebx
  42587f:	call   0x4267e2
  425884:	add    esp,0x8
  425887:	lea    ecx,[esi+esi*2]
  42588a:	push   0x1
  42588c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  425890:	call   0x426876
  425895:	mov    eax,DWORD PTR [edi+ecx*4]
  425898:	mov    DWORD PTR [ebx+0xc],eax
  42589b:	call   DWORD PTR [edi+ecx*4+0x8]
  42589f:	mov    edi,DWORD PTR [ebx+0x8]
  4258a2:	lea    ecx,[esi+esi*2]
  4258a5:	mov    esi,DWORD PTR [edi+ecx*4]
  4258a8:	jmp    0x42584b
  4258aa:	mov    eax,0x0
  4258af:	jmp    0x4258cd
  4258b1:	mov    eax,0x1
  4258b6:	jmp    0x4258cd
  4258b8:	push   ebp
  4258b9:	lea    ebp,[ebx+0x10]
  4258bc:	push   0xffffffff
  4258be:	push   ebx
  4258bf:	call   0x4267e2
  4258c4:	add    esp,0x8
  4258c7:	pop    ebp
  4258c8:	mov    eax,0x1
  4258cd:	pop    ebp
  4258ce:	pop    edi
  4258cf:	pop    esi
  4258d0:	pop    ebx
  4258d1:	mov    esp,ebp
  4258d3:	pop    ebp
  4258d4:	ret    
  4258d5:	push   ebp
  4258d6:	mov    ecx,DWORD PTR [esp+0x8]
  4258da:	mov    ebp,DWORD PTR [ecx]
  4258dc:	mov    eax,DWORD PTR [ecx+0x1c]
  4258df:	push   eax
  4258e0:	mov    eax,DWORD PTR [ecx+0x18]
  4258e3:	push   eax
  4258e4:	call   0x4267e2
  4258e9:	add    esp,0x8
  4258ec:	pop    ebp
  4258ed:	ret    0x4
  4258f0:	call   0x423803
  4258f5:	add    eax,0x8
  4258f8:	ret    
  4258f9:	push   0x14
  4258fb:	push   0x4287b8
  425900:	call   0x423950
  425905:	mov    edi,DWORD PTR [ebp+0x8]
  425908:	xor    ebx,ebx
  42590a:	cmp    edi,ebx
  42590c:	jne    0x42591c
  42590e:	push   DWORD PTR [ebp+0xc]
  425911:	call   0x424672
  425916:	pop    ecx
  425917:	jmp    0x425aa0
  42591c:	mov    esi,DWORD PTR [ebp+0xc]
  42591f:	cmp    esi,ebx
  425921:	jne    0x42592f
  425923:	push   edi
  425924:	call   0x42455a
  425929:	pop    ecx
  42592a:	jmp    0x425a9e
  42592f:	cmp    DWORD PTR ds:0x466384,0x3
  425936:	jne    0x425a6a
  42593c:	mov    DWORD PTR [ebp-0x1c],ebx
  42593f:	cmp    esi,0xffffffe0
  425942:	ja     0x425a39
  425948:	push   0x4
  42594a:	call   0x423b0f
  42594f:	pop    ecx
  425950:	mov    DWORD PTR [ebp-0x4],ebx
  425953:	push   edi
  425954:	call   0x424d32
  425959:	pop    ecx
  42595a:	mov    DWORD PTR [ebp-0x20],eax
  42595d:	cmp    eax,ebx
  42595f:	je     0x425a09
  425965:	cmp    esi,DWORD PTR ds:0x466144
  42596b:	ja     0x4259b9
  42596d:	push   esi
  42596e:	push   edi
  42596f:	push   eax
  425970:	call   0x425232
  425975:	add    esp,0xc
  425978:	test   eax,eax
  42597a:	je     0x425981
  42597c:	mov    DWORD PTR [ebp-0x1c],edi
  42597f:	jmp    0x4259b9
  425981:	push   esi
  425982:	call   0x425511
  425987:	pop    ecx
  425988:	mov    DWORD PTR [ebp-0x1c],eax
  42598b:	cmp    eax,ebx
  42598d:	je     0x4259b9
  42598f:	mov    eax,DWORD PTR [edi-0x4]
  425992:	dec    eax
  425993:	mov    DWORD PTR [ebp-0x24],eax
  425996:	cmp    eax,esi
  425998:	jb     0x42599c
  42599a:	mov    eax,esi
  42599c:	push   eax
  42599d:	push   edi
  42599e:	push   DWORD PTR [ebp-0x1c]
  4259a1:	call   0x424690
  4259a6:	push   edi
  4259a7:	call   0x424d32
  4259ac:	mov    DWORD PTR [ebp-0x20],eax
  4259af:	push   edi
  4259b0:	push   eax
  4259b1:	call   0x424d5d
  4259b6:	add    esp,0x18
  4259b9:	cmp    DWORD PTR [ebp-0x1c],ebx
  4259bc:	jne    0x425a09
  4259be:	cmp    esi,ebx
  4259c0:	jne    0x4259c8
  4259c2:	xor    esi,esi
  4259c4:	inc    esi
  4259c5:	mov    DWORD PTR [ebp+0xc],esi
  4259c8:	add    esi,0xf
  4259cb:	and    esi,0xfffffff0
  4259ce:	mov    DWORD PTR [ebp+0xc],esi
  4259d1:	push   esi
  4259d2:	push   ebx
  4259d3:	push   DWORD PTR ds:0x466380
  4259d9:	call   DWORD PTR ds:0x428030
  4259df:	mov    DWORD PTR [ebp-0x1c],eax
  4259e2:	cmp    eax,ebx
  4259e4:	je     0x425a09
  4259e6:	mov    eax,DWORD PTR [edi-0x4]
  4259e9:	dec    eax
  4259ea:	mov    DWORD PTR [ebp-0x24],eax
  4259ed:	cmp    eax,esi
  4259ef:	jb     0x4259f3
  4259f1:	mov    eax,esi
  4259f3:	push   eax
  4259f4:	push   edi
  4259f5:	push   DWORD PTR [ebp-0x1c]
  4259f8:	call   0x424690
  4259fd:	push   edi
  4259fe:	push   DWORD PTR [ebp-0x20]
  425a01:	call   0x424d5d
  425a06:	add    esp,0x14
  425a09:	or     DWORD PTR [ebp-0x4],0xffffffff
  425a0d:	call   0x425a61
  425a12:	cmp    DWORD PTR [ebp-0x20],ebx
  425a15:	jne    0x425a39
  425a17:	cmp    esi,ebx
  425a19:	jne    0x425a1e
  425a1b:	xor    esi,esi
  425a1d:	inc    esi
  425a1e:	add    esi,0xf
  425a21:	and    esi,0xfffffff0
  425a24:	mov    DWORD PTR [ebp+0xc],esi
  425a27:	push   esi
  425a28:	push   edi
  425a29:	push   ebx
  425a2a:	push   DWORD PTR ds:0x466380
  425a30:	call   DWORD PTR ds:0x4280e8
  425a36:	mov    DWORD PTR [ebp-0x1c],eax
  425a39:	mov    eax,DWORD PTR [ebp-0x1c]
  425a3c:	cmp    eax,ebx
  425a3e:	jne    0x425aa0
  425a40:	cmp    DWORD PTR ds:0x466008,ebx
  425a46:	je     0x425aa0
  425a48:	push   esi
  425a49:	call   0x426232
  425a4e:	pop    ecx
  425a4f:	test   eax,eax
  425a51:	jne    0x42593c
  425a57:	jmp    0x425a9e
  425a59:	xor    ebx,ebx
  425a5b:	mov    esi,DWORD PTR [ebp+0xc]
  425a5e:	mov    edi,DWORD PTR [ebp+0x8]
  425a61:	push   0x4
  425a63:	call   0x423a7b
  425a68:	pop    ecx
  425a69:	ret    
  425a6a:	xor    eax,eax
  425a6c:	cmp    esi,0xffffffe0
  425a6f:	ja     0x425a87
  425a71:	cmp    esi,ebx
  425a73:	jne    0x425a78
  425a75:	xor    esi,esi
  425a77:	inc    esi
  425a78:	push   esi
  425a79:	push   edi
  425a7a:	push   ebx
  425a7b:	push   DWORD PTR ds:0x466380
  425a81:	call   DWORD PTR ds:0x4280e8
  425a87:	cmp    eax,ebx
  425a89:	jne    0x425aa0
  425a8b:	cmp    DWORD PTR ds:0x466008,ebx
  425a91:	je     0x425aa0
  425a93:	push   esi
  425a94:	call   0x426232
  425a99:	pop    ecx
  425a9a:	test   eax,eax
  425a9c:	jne    0x425a6a
  425a9e:	xor    eax,eax
  425aa0:	call   0x42398b
  425aa5:	ret    
  425aa6:	push   0x10
  425aa8:	push   0x4287c8
  425aad:	call   0x423950
  425ab2:	cmp    DWORD PTR ds:0x466384,0x3
  425ab9:	jne    0x425af5
  425abb:	push   0x4
  425abd:	call   0x423b0f
  425ac2:	pop    ecx
  425ac3:	and    DWORD PTR [ebp-0x4],0x0
  425ac7:	mov    esi,DWORD PTR [ebp+0x8]
  425aca:	push   esi
  425acb:	call   0x424d32
  425ad0:	pop    ecx
  425ad1:	mov    DWORD PTR [ebp-0x1c],eax
  425ad4:	test   eax,eax
  425ad6:	je     0x425ae3
  425ad8:	mov    esi,DWORD PTR [esi-0x4]
  425adb:	sub    esi,0x9
  425ade:	mov    DWORD PTR [ebp-0x20],esi
  425ae1:	jmp    0x425ae6
  425ae3:	mov    esi,DWORD PTR [ebp-0x20]
  425ae6:	or     DWORD PTR [ebp-0x4],0xffffffff
  425aea:	call   0x425b13
  425aef:	cmp    DWORD PTR [ebp-0x1c],0x0
  425af3:	jne    0x425b08
  425af5:	push   DWORD PTR [ebp+0x8]
  425af8:	push   0x0
  425afa:	push   DWORD PTR ds:0x466380
  425b00:	call   DWORD PTR ds:0x428018
  425b06:	mov    esi,eax
  425b08:	mov    eax,esi
  425b0a:	call   0x42398b
  425b0f:	ret    
  425b10:	mov    esi,DWORD PTR [ebp-0x20]
  425b13:	push   0x4
  425b15:	call   0x423a7b
  425b1a:	pop    ecx
  425b1b:	ret    
  425b1c:	push   ebp
  425b1d:	mov    ebp,esp
  425b1f:	sub    esp,0x10
  425b22:	push   esi
  425b23:	lea    eax,[ebp-0x8]
  425b26:	push   eax
  425b27:	call   DWORD PTR ds:0x4280f8
  425b2d:	mov    esi,DWORD PTR [ebp-0x4]
  425b30:	xor    esi,DWORD PTR [ebp-0x8]
  425b33:	call   DWORD PTR ds:0x4280f4
  425b39:	xor    esi,eax
  425b3b:	call   DWORD PTR ds:0x428020
  425b41:	xor    esi,eax
  425b43:	call   DWORD PTR ds:0x4280f0
  425b49:	xor    esi,eax
  425b4b:	lea    eax,[ebp-0x10]
  425b4e:	push   eax
  425b4f:	call   DWORD PTR ds:0x4280ec
  425b55:	mov    eax,DWORD PTR [ebp-0xc]
  425b58:	xor    eax,DWORD PTR [ebp-0x10]
  425b5b:	xor    esi,eax
  425b5d:	mov    DWORD PTR ds:0x465660,esi
  425b63:	jne    0x425b6f
  425b65:	mov    DWORD PTR ds:0x465660,0xbb40e64e
  425b6f:	pop    esi
  425b70:	leave  
  425b71:	ret    
  425b72:	push   0x118
  425b77:	push   0x428978
  425b7c:	call   0x423950
  425b81:	mov    eax,ds:0x465660
  425b86:	xor    eax,DWORD PTR [ebp+0x4]
  425b89:	mov    DWORD PTR [ebp-0x1c],eax
  425b8c:	mov    eax,ds:0x465fd8
  425b91:	xor    ecx,ecx
  425b93:	cmp    eax,ecx
  425b95:	je     0x425bb6
  425b97:	mov    DWORD PTR [ebp-0x4],ecx
  425b9a:	push   DWORD PTR [ebp+0xc]
  425b9d:	push   DWORD PTR [ebp+0x8]
  425ba0:	call   eax
  425ba2:	pop    ecx
  425ba3:	pop    ecx
  425ba4:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ba8:	jmp    0x425cb4
  425bad:	xor    eax,eax
  425baf:	inc    eax
  425bb0:	ret    
  425bb1:	mov    esp,DWORD PTR [ebp-0x18]
  425bb4:	jmp    0x425ba4
  425bb6:	mov    eax,DWORD PTR [ebp+0x8]
  425bb9:	dec    eax
  425bba:	je     0x425bcf
  425bbc:	mov    edi,0x428954
  425bc1:	mov    DWORD PTR [ebp-0x20],0x4288a0
  425bc8:	mov    esi,0xd4
  425bcd:	jmp    0x425be0
  425bcf:	mov    edi,0x428880
  425bd4:	mov    DWORD PTR [ebp-0x20],0x4287e0
  425bdb:	mov    esi,0xb9
  425be0:	mov    BYTE PTR [ebp-0x24],cl
  425be3:	push   0x104
  425be8:	lea    eax,[ebp-0x128]
  425bee:	push   eax
  425bef:	push   ecx
  425bf0:	call   DWORD PTR ds:0x42807c
  425bf6:	test   eax,eax
  425bf8:	jne    0x425c0d
  425bfa:	push   0x4284d4
  425bff:	lea    eax,[ebp-0x128]
  425c05:	push   eax
  425c06:	call   0x423d30
  425c0b:	pop    ecx
  425c0c:	pop    ecx
  425c0d:	lea    ebx,[ebp-0x128]
  425c13:	lea    eax,[ebp-0x128]
  425c19:	push   eax
  425c1a:	call   0x423f60
  425c1f:	pop    ecx
  425c20:	add    eax,0xb
  425c23:	cmp    eax,0x3c
  425c26:	jbe    0x425c51
  425c28:	lea    eax,[ebp-0x128]
  425c2e:	push   eax
  425c2f:	call   0x423f60
  425c34:	mov    ebx,eax
  425c36:	lea    eax,[ebp-0x128]
  425c3c:	sub    eax,0x31
  425c3f:	add    ebx,eax
  425c41:	push   0x3
  425c43:	push   0x4284d0
  425c48:	push   ebx
  425c49:	call   0x423e30
  425c4e:	add    esp,0x10
  425c51:	push   ebx
  425c52:	call   0x423f60
  425c57:	pop    ecx
  425c58:	lea    eax,[eax+esi*1+0xc]
  425c5c:	add    eax,0x3
  425c5f:	and    eax,0xfffffffc
  425c62:	call   0x4239a0
  425c67:	mov    DWORD PTR [ebp-0x18],esp
  425c6a:	mov    esi,esp
  425c6c:	push   edi
  425c6d:	push   esi
  425c6e:	call   0x423d30
  425c73:	mov    edi,0x4284b0
  425c78:	push   edi
  425c79:	push   esi
  425c7a:	call   0x423d40
  425c7f:	push   0x4287d4
  425c84:	push   esi
  425c85:	call   0x423d40
  425c8a:	push   ebx
  425c8b:	push   esi
  425c8c:	call   0x423d40
  425c91:	push   edi
  425c92:	push   esi
  425c93:	call   0x423d40
  425c98:	push   DWORD PTR [ebp-0x20]
  425c9b:	push   esi
  425c9c:	call   0x423d40
  425ca1:	push   0x12010
  425ca6:	push   0x428488
  425cab:	push   esi
  425cac:	call   0x423c32
  425cb1:	add    esp,0x3c
  425cb4:	push   0x3
  425cb6:	call   0x422dbc
  425cbb:	int3   
  425cbc:	push   0x38
  425cbe:	push   0x428d98
  425cc3:	call   0x423950
  425cc8:	xor    ebx,ebx
  425cca:	cmp    DWORD PTR ds:0x465ffc,ebx
  425cd0:	jne    0x425d0a
  425cd2:	push   ebx
  425cd3:	push   ebx
  425cd4:	xor    esi,esi
  425cd6:	inc    esi
  425cd7:	push   esi
  425cd8:	push   0x428d94
  425cdd:	push   0x100
  425ce2:	push   ebx
  425ce3:	call   DWORD PTR ds:0x428104
  425ce9:	test   eax,eax
  425ceb:	je     0x425cf5
  425ced:	mov    DWORD PTR ds:0x465ffc,esi
  425cf3:	jmp    0x425d0a
  425cf5:	call   DWORD PTR ds:0x42803c
  425cfb:	cmp    eax,0x78
  425cfe:	jne    0x425d0a
  425d00:	mov    DWORD PTR ds:0x465ffc,0x2
  425d0a:	cmp    DWORD PTR [ebp+0x14],ebx
  425d0d:	jle    0x425d2a
  425d0f:	mov    ecx,DWORD PTR [ebp+0x14]
  425d12:	mov    eax,DWORD PTR [ebp+0x10]
  425d15:	dec    ecx
  425d16:	cmp    BYTE PTR [eax],bl
  425d18:	je     0x425d22
  425d1a:	inc    eax
  425d1b:	cmp    ecx,ebx
  425d1d:	jne    0x425d15
  425d1f:	or     ecx,0xffffffff
  425d22:	or     eax,0xffffffff
  425d25:	sub    eax,ecx
  425d27:	add    DWORD PTR [ebp+0x14],eax
  425d2a:	mov    eax,ds:0x465ffc
  425d2f:	cmp    eax,0x2
  425d32:	je     0x425f14
  425d38:	cmp    eax,ebx
  425d3a:	je     0x425f14
  425d40:	cmp    eax,0x1
  425d43:	jne    0x425f47
  425d49:	xor    edi,edi
  425d4b:	mov    DWORD PTR [ebp-0x1c],edi
  425d4e:	mov    DWORD PTR [ebp-0x20],ebx
  425d51:	mov    DWORD PTR [ebp-0x24],ebx
  425d54:	cmp    DWORD PTR [ebp+0x20],ebx
  425d57:	jne    0x425d61
  425d59:	mov    eax,ds:0x465ff4
  425d5e:	mov    DWORD PTR [ebp+0x20],eax
  425d61:	push   ebx
  425d62:	push   ebx
  425d63:	push   DWORD PTR [ebp+0x14]
  425d66:	push   DWORD PTR [ebp+0x10]
  425d69:	xor    eax,eax
  425d6b:	cmp    DWORD PTR [ebp+0x24],ebx
  425d6e:	setne  al
  425d71:	lea    eax,[eax*8+0x1]
  425d78:	push   eax
  425d79:	push   DWORD PTR [ebp+0x20]
  425d7c:	call   DWORD PTR ds:0x428100
  425d82:	mov    esi,eax
  425d84:	mov    DWORD PTR [ebp-0x28],esi
  425d87:	cmp    esi,ebx
  425d89:	je     0x425f47
  425d8f:	mov    DWORD PTR [ebp-0x4],0x1
  425d96:	lea    eax,[esi+esi*1]
  425d99:	add    eax,0x3
  425d9c:	and    eax,0xfffffffc
  425d9f:	call   0x4239a0
  425da4:	mov    DWORD PTR [ebp-0x18],esp
  425da7:	mov    eax,esp
  425da9:	mov    DWORD PTR [ebp-0x2c],eax
  425dac:	or     DWORD PTR [ebp-0x4],0xffffffff
  425db0:	jmp    0x425dcd
  425db2:	xor    eax,eax
  425db4:	inc    eax
  425db5:	ret    
  425db6:	mov    esp,DWORD PTR [ebp-0x18]
  425db9:	call   0x426de5
  425dbe:	xor    ebx,ebx
  425dc0:	mov    DWORD PTR [ebp-0x2c],ebx
  425dc3:	or     DWORD PTR [ebp-0x4],0xffffffff
  425dc7:	mov    edi,DWORD PTR [ebp-0x1c]
  425dca:	mov    esi,DWORD PTR [ebp-0x28]
  425dcd:	cmp    DWORD PTR [ebp-0x2c],ebx
  425dd0:	jne    0x425dee
  425dd2:	lea    eax,[esi+esi*1]
  425dd5:	push   eax
  425dd6:	call   0x424672
  425ddb:	pop    ecx
  425ddc:	mov    DWORD PTR [ebp-0x2c],eax
  425ddf:	cmp    eax,ebx
  425de1:	je     0x425f47
  425de7:	mov    DWORD PTR [ebp-0x20],0x1
  425dee:	push   esi
  425def:	push   DWORD PTR [ebp-0x2c]
  425df2:	push   DWORD PTR [ebp+0x14]
  425df5:	push   DWORD PTR [ebp+0x10]
  425df8:	push   0x1
  425dfa:	push   DWORD PTR [ebp+0x20]
  425dfd:	call   DWORD PTR ds:0x428100
  425e03:	test   eax,eax
  425e05:	je     0x425ef1
  425e0b:	push   ebx
  425e0c:	push   ebx
  425e0d:	push   esi
  425e0e:	push   DWORD PTR [ebp-0x2c]
  425e11:	push   DWORD PTR [ebp+0xc]
  425e14:	push   DWORD PTR [ebp+0x8]
  425e17:	call   DWORD PTR ds:0x428104
  425e1d:	mov    edi,eax
  425e1f:	mov    DWORD PTR [ebp-0x1c],edi
  425e22:	cmp    edi,ebx
  425e24:	je     0x425ef1
  425e2a:	test   BYTE PTR [ebp+0xd],0x4
  425e2e:	je     0x425e5d
  425e30:	cmp    DWORD PTR [ebp+0x1c],ebx
  425e33:	je     0x425ef1
  425e39:	cmp    edi,DWORD PTR [ebp+0x1c]
  425e3c:	jg     0x425ef1
  425e42:	push   DWORD PTR [ebp+0x1c]
  425e45:	push   DWORD PTR [ebp+0x18]
  425e48:	push   esi
  425e49:	push   DWORD PTR [ebp-0x2c]
  425e4c:	push   DWORD PTR [ebp+0xc]
  425e4f:	push   DWORD PTR [ebp+0x8]
  425e52:	call   DWORD PTR ds:0x428104
  425e58:	jmp    0x425ef1
  425e5d:	mov    DWORD PTR [ebp-0x4],0x2
  425e64:	lea    eax,[edi+edi*1]
  425e67:	add    eax,0x3
  425e6a:	and    eax,0xfffffffc
  425e6d:	call   0x4239a0
  425e72:	mov    DWORD PTR [ebp-0x18],esp
  425e75:	mov    eax,esp
  425e77:	mov    DWORD PTR [ebp-0x30],eax
  425e7a:	or     DWORD PTR [ebp-0x4],0xffffffff
  425e7e:	jmp    0x425e9b
  425e80:	xor    eax,eax
  425e82:	inc    eax
  425e83:	ret    
  425e84:	mov    esp,DWORD PTR [ebp-0x18]
  425e87:	call   0x426de5
  425e8c:	xor    ebx,ebx
  425e8e:	mov    DWORD PTR [ebp-0x30],ebx
  425e91:	or     DWORD PTR [ebp-0x4],0xffffffff
  425e95:	mov    edi,DWORD PTR [ebp-0x1c]
  425e98:	mov    esi,DWORD PTR [ebp-0x28]
  425e9b:	cmp    DWORD PTR [ebp-0x30],ebx
  425e9e:	jne    0x425eb8
  425ea0:	lea    eax,[edi+edi*1]
  425ea3:	push   eax
  425ea4:	call   0x424672
  425ea9:	pop    ecx
  425eaa:	mov    DWORD PTR [ebp-0x30],eax
  425ead:	cmp    eax,ebx
  425eaf:	je     0x425ef1
  425eb1:	mov    DWORD PTR [ebp-0x24],0x1
  425eb8:	push   edi
  425eb9:	push   DWORD PTR [ebp-0x30]
  425ebc:	push   esi
  425ebd:	push   DWORD PTR [ebp-0x2c]
  425ec0:	push   DWORD PTR [ebp+0xc]
  425ec3:	push   DWORD PTR [ebp+0x8]
  425ec6:	call   DWORD PTR ds:0x428104
  425ecc:	test   eax,eax
  425ece:	je     0x425ef1
  425ed0:	push   ebx
  425ed1:	push   ebx
  425ed2:	cmp    DWORD PTR [ebp+0x1c],ebx
  425ed5:	jne    0x425edb
  425ed7:	push   ebx
  425ed8:	push   ebx
  425ed9:	jmp    0x425ee1
  425edb:	push   DWORD PTR [ebp+0x1c]
  425ede:	push   DWORD PTR [ebp+0x18]
  425ee1:	push   edi
  425ee2:	push   DWORD PTR [ebp-0x30]
  425ee5:	push   ebx
  425ee6:	push   DWORD PTR [ebp+0x20]
  425ee9:	call   DWORD PTR ds:0x428090
  425eef:	mov    edi,eax
  425ef1:	cmp    DWORD PTR [ebp-0x24],ebx
  425ef4:	je     0x425eff
  425ef6:	push   DWORD PTR [ebp-0x30]
  425ef9:	call   0x42455a
  425efe:	pop    ecx
  425eff:	cmp    DWORD PTR [ebp-0x20],ebx
  425f02:	je     0x425f0d
  425f04:	push   DWORD PTR [ebp-0x2c]
  425f07:	call   0x42455a
  425f0c:	pop    ecx
  425f0d:	mov    eax,edi
  425f0f:	jmp    0x42606f
  425f14:	mov    DWORD PTR [ebp-0x34],ebx
  425f17:	xor    edi,edi
  425f19:	mov    DWORD PTR [ebp-0x38],ebx
  425f1c:	cmp    DWORD PTR [ebp+0x8],ebx
  425f1f:	jne    0x425f29
  425f21:	mov    eax,ds:0x465fe4
  425f26:	mov    DWORD PTR [ebp+0x8],eax
  425f29:	cmp    DWORD PTR [ebp+0x20],ebx
  425f2c:	jne    0x425f36
  425f2e:	mov    eax,ds:0x465ff4
  425f33:	mov    DWORD PTR [ebp+0x20],eax
  425f36:	push   DWORD PTR [ebp+0x8]
  425f39:	call   0x426bcd
  425f3e:	pop    ecx
  425f3f:	mov    DWORD PTR [ebp-0x3c],eax
  425f42:	cmp    eax,0xffffffff
  425f45:	jne    0x425f4e
  425f47:	xor    eax,eax
  425f49:	jmp    0x42606f
  425f4e:	cmp    eax,DWORD PTR [ebp+0x20]
  425f51:	je     0x426045
  425f57:	push   ebx
  425f58:	push   ebx
  425f59:	lea    ecx,[ebp+0x14]
  425f5c:	push   ecx
  425f5d:	push   DWORD PTR [ebp+0x10]
  425f60:	push   eax
  425f61:	push   DWORD PTR [ebp+0x20]
  425f64:	call   0x426c16
  425f69:	add    esp,0x18
  425f6c:	mov    DWORD PTR [ebp-0x34],eax
  425f6f:	cmp    eax,ebx
  425f71:	je     0x425f47
  425f73:	push   ebx
  425f74:	push   ebx
  425f75:	push   DWORD PTR [ebp+0x14]
  425f78:	push   eax
  425f79:	push   DWORD PTR [ebp+0xc]
  425f7c:	push   DWORD PTR [ebp+0x8]
  425f7f:	call   DWORD PTR ds:0x4280fc
  425f85:	mov    esi,eax
  425f87:	mov    DWORD PTR [ebp-0x40],esi
  425f8a:	cmp    esi,ebx
  425f8c:	je     0x426034
  425f92:	mov    DWORD PTR [ebp-0x4],ebx
  425f95:	add    eax,0x3
  425f98:	and    eax,0xfffffffc
  425f9b:	call   0x4239a0
  425fa0:	mov    DWORD PTR [ebp-0x18],esp
  425fa3:	mov    edi,esp
  425fa5:	mov    DWORD PTR [ebp-0x44],edi
  425fa8:	push   esi
  425fa9:	push   ebx
  425faa:	push   edi
  425fab:	call   0x426250
  425fb0:	add    esp,0xc
  425fb3:	jmp    0x425fc5
  425fb5:	xor    eax,eax
  425fb7:	inc    eax
  425fb8:	ret    
  425fb9:	mov    esp,DWORD PTR [ebp-0x18]
  425fbc:	call   0x426de5
  425fc1:	xor    ebx,ebx
  425fc3:	xor    edi,edi
  425fc5:	or     DWORD PTR [ebp-0x4],0xffffffff
  425fc9:	cmp    edi,ebx
  425fcb:	jne    0x425ff0
  425fcd:	push   DWORD PTR [ebp-0x40]
  425fd0:	call   0x424672
  425fd5:	pop    ecx
  425fd6:	mov    edi,eax
  425fd8:	cmp    edi,ebx
  425fda:	je     0x42600d
  425fdc:	push   DWORD PTR [ebp-0x40]
  425fdf:	push   ebx
  425fe0:	push   edi
  425fe1:	call   0x426250
  425fe6:	add    esp,0xc
  425fe9:	mov    DWORD PTR [ebp-0x38],0x1
  425ff0:	push   DWORD PTR [ebp-0x40]
  425ff3:	push   edi
  425ff4:	push   DWORD PTR [ebp+0x14]
  425ff7:	push   DWORD PTR [ebp-0x34]
  425ffa:	push   DWORD PTR [ebp+0xc]
  425ffd:	push   DWORD PTR [ebp+0x8]
  426000:	call   DWORD PTR ds:0x4280fc
  426006:	mov    DWORD PTR [ebp-0x40],eax
  426009:	cmp    eax,ebx
  42600b:	jne    0x426011
  42600d:	xor    esi,esi
  42600f:	jmp    0x426037
  426011:	push   DWORD PTR [ebp+0x1c]
  426014:	push   DWORD PTR [ebp+0x18]
  426017:	lea    eax,[ebp-0x40]
  42601a:	push   eax
  42601b:	push   edi
  42601c:	push   DWORD PTR [ebp+0x20]
  42601f:	push   DWORD PTR [ebp-0x3c]
  426022:	call   0x426c16
  426027:	add    esp,0x18
  42602a:	mov    esi,eax
  42602c:	neg    esi
  42602e:	sbb    esi,esi
  426030:	neg    esi
  426032:	jmp    0x426037
  426034:	mov    esi,DWORD PTR [ebp-0x48]
  426037:	cmp    DWORD PTR [ebp-0x38],ebx
  42603a:	je     0x42605f
  42603c:	push   edi
  42603d:	call   0x42455a
  426042:	pop    ecx
  426043:	jmp    0x42605f
  426045:	push   DWORD PTR [ebp+0x1c]
  426048:	push   DWORD PTR [ebp+0x18]
  42604b:	push   DWORD PTR [ebp+0x14]
  42604e:	push   DWORD PTR [ebp+0x10]
  426051:	push   DWORD PTR [ebp+0xc]
  426054:	push   DWORD PTR [ebp+0x8]
  426057:	call   DWORD PTR ds:0x4280fc
  42605d:	mov    esi,eax
  42605f:	cmp    DWORD PTR [ebp-0x34],ebx
  426062:	je     0x42606d
  426064:	push   DWORD PTR [ebp-0x34]
  426067:	call   0x42455a
  42606c:	pop    ecx
  42606d:	mov    eax,esi
  42606f:	lea    esp,[ebp-0x54]
  426072:	call   0x42398b
  426077:	ret    
  426078:	push   0x1c
  42607a:	push   0x428dc0
  42607f:	call   0x423950
  426084:	xor    esi,esi
  426086:	cmp    DWORD PTR ds:0x466000,esi
  42608c:	jne    0x4260c3
  42608e:	lea    eax,[ebp-0x1c]
  426091:	push   eax
  426092:	xor    edi,edi
  426094:	inc    edi
  426095:	push   edi
  426096:	push   0x428d94
  42609b:	push   edi
  42609c:	call   DWORD PTR ds:0x42810c
  4260a2:	test   eax,eax
  4260a4:	je     0x4260ae
  4260a6:	mov    DWORD PTR ds:0x466000,edi
  4260ac:	jmp    0x4260c3
  4260ae:	call   DWORD PTR ds:0x42803c
  4260b4:	cmp    eax,0x78
  4260b7:	jne    0x4260c3
  4260b9:	mov    DWORD PTR ds:0x466000,0x2
  4260c3:	mov    eax,ds:0x466000
  4260c8:	cmp    eax,0x2
  4260cb:	je     0x4261bb
  4260d1:	cmp    eax,esi
  4260d3:	je     0x4261bb
  4260d9:	cmp    eax,0x1
  4260dc:	jne    0x4261e1
  4260e2:	mov    DWORD PTR [ebp-0x20],esi
  4260e5:	mov    DWORD PTR [ebp-0x24],esi
  4260e8:	cmp    DWORD PTR [ebp+0x18],esi
  4260eb:	jne    0x4260f5
  4260ed:	mov    eax,ds:0x465ff4
  4260f2:	mov    DWORD PTR [ebp+0x18],eax
  4260f5:	push   esi
  4260f6:	push   esi
  4260f7:	push   DWORD PTR [ebp+0x10]
  4260fa:	push   DWORD PTR [ebp+0xc]
  4260fd:	xor    eax,eax
  4260ff:	cmp    DWORD PTR [ebp+0x20],esi
  426102:	setne  al
  426105:	lea    eax,[eax*8+0x1]
  42610c:	push   eax
  42610d:	push   DWORD PTR [ebp+0x18]
  426110:	call   DWORD PTR ds:0x428100
  426116:	mov    edi,eax
  426118:	mov    DWORD PTR [ebp-0x28],edi
  42611b:	test   edi,edi
  42611d:	je     0x4261e1
  426123:	and    DWORD PTR [ebp-0x4],0x0
  426127:	lea    ebx,[edi+edi*1]
  42612a:	mov    eax,ebx
  42612c:	add    eax,0x3
  42612f:	and    eax,0xfffffffc
  426132:	call   0x4239a0
  426137:	mov    DWORD PTR [ebp-0x18],esp
  42613a:	mov    esi,esp
  42613c:	mov    DWORD PTR [ebp-0x2c],esi
  42613f:	push   ebx
  426140:	push   0x0
  426142:	push   esi
  426143:	call   0x426250
  426148:	add    esp,0xc
  42614b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42614f:	jmp    0x426166
  426151:	xor    eax,eax
  426153:	inc    eax
  426154:	ret    
  426155:	mov    esp,DWORD PTR [ebp-0x18]
  426158:	call   0x426de5
  42615d:	xor    esi,esi
  42615f:	or     DWORD PTR [ebp-0x4],0xffffffff
  426163:	mov    edi,DWORD PTR [ebp-0x28]
  426166:	test   esi,esi
  426168:	jne    0x426181
  42616a:	push   edi
  42616b:	push   0x2
  42616d:	call   0x424a68
  426172:	pop    ecx
  426173:	pop    ecx
  426174:	mov    esi,eax
  426176:	test   esi,esi
  426178:	je     0x4261e1
  42617a:	mov    DWORD PTR [ebp-0x24],0x1
  426181:	push   edi
  426182:	push   esi
  426183:	push   DWORD PTR [ebp+0x10]
  426186:	push   DWORD PTR [ebp+0xc]
  426189:	push   0x1
  42618b:	push   DWORD PTR [ebp+0x18]
  42618e:	call   DWORD PTR ds:0x428100
  426194:	test   eax,eax
  426196:	je     0x4261a9
  426198:	push   DWORD PTR [ebp+0x14]
  42619b:	push   eax
  42619c:	push   esi
  42619d:	push   DWORD PTR [ebp+0x8]
  4261a0:	call   DWORD PTR ds:0x42810c
  4261a6:	mov    DWORD PTR [ebp-0x20],eax
  4261a9:	cmp    DWORD PTR [ebp-0x24],0x0
  4261ad:	je     0x4261b6
  4261af:	push   esi
  4261b0:	call   0x42455a
  4261b5:	pop    ecx
  4261b6:	mov    eax,DWORD PTR [ebp-0x20]
  4261b9:	jmp    0x426229
  4261bb:	mov    ebx,DWORD PTR [ebp+0x1c]
  4261be:	cmp    ebx,esi
  4261c0:	jne    0x4261c8
  4261c2:	mov    ebx,DWORD PTR ds:0x465fe4
  4261c8:	mov    edi,DWORD PTR [ebp+0x18]
  4261cb:	test   edi,edi
  4261cd:	jne    0x4261d5
  4261cf:	mov    edi,DWORD PTR ds:0x465ff4
  4261d5:	push   ebx
  4261d6:	call   0x426bcd
  4261db:	pop    ecx
  4261dc:	cmp    eax,0xffffffff
  4261df:	jne    0x4261e5
  4261e1:	xor    eax,eax
  4261e3:	jmp    0x426229
  4261e5:	cmp    eax,edi
  4261e7:	je     0x426207
  4261e9:	push   0x0
  4261eb:	push   0x0
  4261ed:	lea    ecx,[ebp+0x10]
  4261f0:	push   ecx
  4261f1:	push   DWORD PTR [ebp+0xc]
  4261f4:	push   eax
  4261f5:	push   edi
  4261f6:	call   0x426c16
  4261fb:	add    esp,0x18
  4261fe:	mov    esi,eax
  426200:	test   esi,esi
  426202:	je     0x4261e1
  426204:	mov    DWORD PTR [ebp+0xc],esi
  426207:	push   DWORD PTR [ebp+0x14]
  42620a:	push   DWORD PTR [ebp+0x10]
  42620d:	push   DWORD PTR [ebp+0xc]
  426210:	push   DWORD PTR [ebp+0x8]
  426213:	push   ebx
  426214:	call   DWORD PTR ds:0x428108
  42621a:	mov    edi,eax
  42621c:	test   esi,esi
  42621e:	je     0x426227
  426220:	push   esi
  426221:	call   0x42455a
  426226:	pop    ecx
  426227:	mov    eax,edi
  426229:	lea    esp,[ebp-0x38]
  42622c:	call   0x42398b
  426231:	ret    
  426232:	mov    eax,ds:0x466004
  426237:	test   eax,eax
  426239:	je     0x42624a
  42623b:	push   DWORD PTR [esp+0x4]
  42623f:	call   eax
  426241:	test   eax,eax
  426243:	pop    ecx
  426244:	je     0x42624a
  426246:	xor    eax,eax
  426248:	inc    eax
  426249:	ret    
  42624a:	xor    eax,eax
  42624c:	ret    
  42624d:	int3   
  42624e:	int3   
  42624f:	int3   
  426250:	mov    edx,DWORD PTR [esp+0xc]
  426254:	mov    ecx,DWORD PTR [esp+0x4]
  426258:	test   edx,edx
  42625a:	je     0x4262ab
  42625c:	xor    eax,eax
  42625e:	mov    al,BYTE PTR [esp+0x8]
  426262:	push   edi
  426263:	mov    edi,ecx
  426265:	cmp    edx,0x4
  426268:	jb     0x42629b
  42626a:	neg    ecx
  42626c:	and    ecx,0x3
  42626f:	je     0x42627d
  426271:	sub    edx,ecx
  426273:	mov    BYTE PTR [edi],al
  426275:	add    edi,0x1
  426278:	sub    ecx,0x1
  42627b:	jne    0x426273
  42627d:	mov    ecx,eax
  42627f:	shl    eax,0x8
  426282:	add    eax,ecx
  426284:	mov    ecx,eax
  426286:	shl    eax,0x10
  426289:	add    eax,ecx
  42628b:	mov    ecx,edx
  42628d:	and    edx,0x3
  426290:	shr    ecx,0x2
  426293:	je     0x42629b
  426295:	rep stos DWORD PTR es:[edi],eax
  426297:	test   edx,edx
  426299:	je     0x4262a5
  42629b:	mov    BYTE PTR [edi],al
  42629d:	add    edi,0x1
  4262a0:	sub    edx,0x1
  4262a3:	jne    0x42629b
  4262a5:	mov    eax,DWORD PTR [esp+0x8]
  4262a9:	pop    edi
  4262aa:	ret    
  4262ab:	mov    eax,DWORD PTR [esp+0x4]
  4262af:	ret    
  4262b0:	push   esi
  4262b1:	mov    esi,DWORD PTR [esp+0x8]
  4262b5:	test   esi,esi
  4262b7:	je     0x42643e
  4262bd:	push   DWORD PTR [esi+0x4]
  4262c0:	call   0x42455a
  4262c5:	push   DWORD PTR [esi+0x8]
  4262c8:	call   0x42455a
  4262cd:	push   DWORD PTR [esi+0xc]
  4262d0:	call   0x42455a
  4262d5:	push   DWORD PTR [esi+0x10]
  4262d8:	call   0x42455a
  4262dd:	push   DWORD PTR [esi+0x14]
  4262e0:	call   0x42455a
  4262e5:	push   DWORD PTR [esi+0x18]
  4262e8:	call   0x42455a
  4262ed:	push   DWORD PTR [esi]
  4262ef:	call   0x42455a
  4262f4:	push   DWORD PTR [esi+0x20]
  4262f7:	call   0x42455a
  4262fc:	push   DWORD PTR [esi+0x24]
  4262ff:	call   0x42455a
  426304:	push   DWORD PTR [esi+0x28]
  426307:	call   0x42455a
  42630c:	push   DWORD PTR [esi+0x2c]
  42630f:	call   0x42455a
  426314:	push   DWORD PTR [esi+0x30]
  426317:	call   0x42455a
  42631c:	push   DWORD PTR [esi+0x34]
  42631f:	call   0x42455a
  426324:	push   DWORD PTR [esi+0x1c]
  426327:	call   0x42455a
  42632c:	push   DWORD PTR [esi+0x38]
  42632f:	call   0x42455a
  426334:	push   DWORD PTR [esi+0x3c]
  426337:	call   0x42455a
  42633c:	add    esp,0x40
  42633f:	push   DWORD PTR [esi+0x40]
  426342:	call   0x42455a
  426347:	push   DWORD PTR [esi+0x44]
  42634a:	call   0x42455a
  42634f:	push   DWORD PTR [esi+0x48]
  426352:	call   0x42455a
  426357:	push   DWORD PTR [esi+0x4c]
  42635a:	call   0x42455a
  42635f:	push   DWORD PTR [esi+0x50]
  426362:	call   0x42455a
  426367:	push   DWORD PTR [esi+0x54]
  42636a:	call   0x42455a
  42636f:	push   DWORD PTR [esi+0x58]
  426372:	call   0x42455a
  426377:	push   DWORD PTR [esi+0x5c]
  42637a:	call   0x42455a
  42637f:	push   DWORD PTR [esi+0x60]
  426382:	call   0x42455a
  426387:	push   DWORD PTR [esi+0x64]
  42638a:	call   0x42455a
  42638f:	push   DWORD PTR [esi+0x68]
  426392:	call   0x42455a
  426397:	push   DWORD PTR [esi+0x6c]
  42639a:	call   0x42455a
  42639f:	push   DWORD PTR [esi+0x70]
  4263a2:	call   0x42455a
  4263a7:	push   DWORD PTR [esi+0x74]
  4263aa:	call   0x42455a
  4263af:	push   DWORD PTR [esi+0x78]
  4263b2:	call   0x42455a
  4263b7:	push   DWORD PTR [esi+0x7c]
  4263ba:	call   0x42455a
  4263bf:	add    esp,0x40
  4263c2:	push   DWORD PTR [esi+0x80]
  4263c8:	call   0x42455a
  4263cd:	push   DWORD PTR [esi+0x84]
  4263d3:	call   0x42455a
  4263d8:	push   DWORD PTR [esi+0x88]
  4263de:	call   0x42455a
  4263e3:	push   DWORD PTR [esi+0x8c]
  4263e9:	call   0x42455a
  4263ee:	push   DWORD PTR [esi+0x90]
  4263f4:	call   0x42455a
  4263f9:	push   DWORD PTR [esi+0x94]
  4263ff:	call   0x42455a
  426404:	push   DWORD PTR [esi+0x98]
  42640a:	call   0x42455a
  42640f:	push   DWORD PTR [esi+0x9c]
  426415:	call   0x42455a
  42641a:	push   DWORD PTR [esi+0xa0]
  426420:	call   0x42455a
  426425:	push   DWORD PTR [esi+0xa4]
  42642b:	call   0x42455a
  426430:	push   DWORD PTR [esi+0xa8]
  426436:	call   0x42455a
  42643b:	add    esp,0x2c
  42643e:	pop    esi
  42643f:	ret    
  426440:	push   esi
  426441:	mov    esi,DWORD PTR [esp+0x8]
  426445:	test   esi,esi
  426447:	je     0x42649d
  426449:	mov    eax,DWORD PTR [esi]
  42644b:	mov    ecx,DWORD PTR ds:0x465b64
  426451:	cmp    eax,DWORD PTR [ecx]
  426453:	je     0x426464
  426455:	cmp    eax,DWORD PTR ds:0x465b34
  42645b:	je     0x426464
  42645d:	push   eax
  42645e:	call   0x42455a
  426463:	pop    ecx
  426464:	mov    eax,DWORD PTR [esi+0x4]
  426467:	mov    ecx,DWORD PTR ds:0x465b64
  42646d:	cmp    eax,DWORD PTR [ecx+0x4]
  426470:	je     0x426481
  426472:	cmp    eax,DWORD PTR ds:0x465b38
  426478:	je     0x426481
  42647a:	push   eax
  42647b:	call   0x42455a
  426480:	pop    ecx
  426481:	mov    esi,DWORD PTR [esi+0x8]
  426484:	mov    eax,ds:0x465b64
  426489:	cmp    esi,DWORD PTR [eax+0x8]
  42648c:	je     0x42649d
  42648e:	cmp    esi,DWORD PTR ds:0x465b3c
  426494:	je     0x42649d
  426496:	push   esi
  426497:	call   0x42455a
  42649c:	pop    ecx
  42649d:	pop    esi
  42649e:	ret    
  42649f:	push   esi
  4264a0:	mov    esi,DWORD PTR [esp+0x8]
  4264a4:	test   esi,esi
  4264a6:	je     0x426576
  4264ac:	mov    eax,DWORD PTR [esi+0xc]
  4264af:	mov    ecx,DWORD PTR ds:0x465b64
  4264b5:	cmp    eax,DWORD PTR [ecx+0xc]
  4264b8:	je     0x4264c9
  4264ba:	cmp    eax,DWORD PTR ds:0x465b40
  4264c0:	je     0x4264c9
  4264c2:	push   eax
  4264c3:	call   0x42455a
  4264c8:	pop    ecx
  4264c9:	mov    eax,DWORD PTR [esi+0x10]
  4264cc:	mov    ecx,DWORD PTR ds:0x465b64
  4264d2:	cmp    eax,DWORD PTR [ecx+0x10]
  4264d5:	je     0x4264e6
  4264d7:	cmp    eax,DWORD PTR ds:0x465b44
  4264dd:	je     0x4264e6
  4264df:	push   eax
  4264e0:	call   0x42455a
  4264e5:	pop    ecx
  4264e6:	mov    eax,DWORD PTR [esi+0x14]
  4264e9:	mov    ecx,DWORD PTR ds:0x465b64
  4264ef:	cmp    eax,DWORD PTR [ecx+0x14]
  4264f2:	je     0x426503
  4264f4:	cmp    eax,DWORD PTR ds:0x465b48
  4264fa:	je     0x426503
  4264fc:	push   eax
  4264fd:	call   0x42455a
  426502:	pop    ecx
  426503:	mov    eax,DWORD PTR [esi+0x18]
  426506:	mov    ecx,DWORD PTR ds:0x465b64
  42650c:	cmp    eax,DWORD PTR [ecx+0x18]
  42650f:	je     0x426520
  426511:	cmp    eax,DWORD PTR ds:0x465b4c
  426517:	je     0x426520
  426519:	push   eax
  42651a:	call   0x42455a
  42651f:	pop    ecx
  426520:	mov    eax,DWORD PTR [esi+0x1c]
  426523:	mov    ecx,DWORD PTR ds:0x465b64
  426529:	cmp    eax,DWORD PTR [ecx+0x1c]
  42652c:	je     0x42653d
  42652e:	cmp    eax,DWORD PTR ds:0x465b50
  426534:	je     0x42653d
  426536:	push   eax
  426537:	call   0x42455a
  42653c:	pop    ecx
  42653d:	mov    eax,DWORD PTR [esi+0x20]
  426540:	mov    ecx,DWORD PTR ds:0x465b64
  426546:	cmp    eax,DWORD PTR [ecx+0x20]
  426549:	je     0x42655a
  42654b:	cmp    eax,DWORD PTR ds:0x465b54
  426551:	je     0x42655a
  426553:	push   eax
  426554:	call   0x42455a
  426559:	pop    ecx
  42655a:	mov    esi,DWORD PTR [esi+0x24]
  42655d:	mov    eax,ds:0x465b64
  426562:	cmp    esi,DWORD PTR [eax+0x24]
  426565:	je     0x426576
  426567:	cmp    esi,DWORD PTR ds:0x465b58
  42656d:	je     0x426576
  42656f:	push   esi
  426570:	call   0x42455a
  426575:	pop    ecx
  426576:	pop    esi
  426577:	ret    
  426578:	int3   
  426579:	int3   
  42657a:	int3   
  42657b:	int3   
  42657c:	int3   
  42657d:	int3   
  42657e:	int3   
  42657f:	int3   
  426580:	push   ebp
  426581:	mov    ebp,esp
  426583:	push   esi
  426584:	xor    eax,eax
  426586:	push   eax
  426587:	push   eax
  426588:	push   eax
  426589:	push   eax
  42658a:	push   eax
  42658b:	push   eax
  42658c:	push   eax
  42658d:	push   eax
  42658e:	mov    edx,DWORD PTR [ebp+0xc]
  426591:	lea    ecx,[ecx+0x0]
  426594:	mov    al,BYTE PTR [edx]
  426596:	or     al,al
  426598:	je     0x4265a3
  42659a:	add    edx,0x1
  42659d:	bts    DWORD PTR [esp],eax
  4265a1:	jmp    0x426594
  4265a3:	mov    esi,DWORD PTR [ebp+0x8]
  4265a6:	or     ecx,0xffffffff
  4265a9:	lea    ecx,[ecx+0x0]
  4265ac:	add    ecx,0x1
  4265af:	mov    al,BYTE PTR [esi]
  4265b1:	or     al,al
  4265b3:	je     0x4265be
  4265b5:	add    esi,0x1
  4265b8:	bt     DWORD PTR [esp],eax
  4265bc:	jae    0x4265ac
  4265be:	mov    eax,ecx
  4265c0:	add    esp,0x20
  4265c3:	pop    esi
  4265c4:	leave  
  4265c5:	ret    
  4265c6:	int3   
  4265c7:	int3   
  4265c8:	int3   
  4265c9:	int3   
  4265ca:	int3   
  4265cb:	int3   
  4265cc:	int3   
  4265cd:	int3   
  4265ce:	int3   
  4265cf:	int3   
  4265d0:	mov    edx,DWORD PTR [esp+0x4]
  4265d4:	mov    ecx,DWORD PTR [esp+0x8]
  4265d8:	test   edx,0x3
  4265de:	jne    0x42661c
  4265e0:	mov    eax,DWORD PTR [edx]
  4265e2:	cmp    al,BYTE PTR [ecx]
  4265e4:	jne    0x426614
  4265e6:	or     al,al
  4265e8:	je     0x426610
  4265ea:	cmp    ah,BYTE PTR [ecx+0x1]
  4265ed:	jne    0x426614
  4265ef:	or     ah,ah
  4265f1:	je     0x426610
  4265f3:	shr    eax,0x10
  4265f6:	cmp    al,BYTE PTR [ecx+0x2]
  4265f9:	jne    0x426614
  4265fb:	or     al,al
  4265fd:	je     0x426610
  4265ff:	cmp    ah,BYTE PTR [ecx+0x3]
  426602:	jne    0x426614
  426604:	add    ecx,0x4
  426607:	add    edx,0x4
  42660a:	or     ah,ah
  42660c:	jne    0x4265e0
  42660e:	mov    edi,edi
  426610:	xor    eax,eax
  426612:	ret    
  426613:	nop
  426614:	sbb    eax,eax
  426616:	shl    eax,1
  426618:	add    eax,0x1
  42661b:	ret    
  42661c:	test   edx,0x1
  426622:	je     0x42663c
  426624:	mov    al,BYTE PTR [edx]
  426626:	add    edx,0x1
  426629:	cmp    al,BYTE PTR [ecx]
  42662b:	jne    0x426614
  42662d:	add    ecx,0x1
  426630:	or     al,al
  426632:	je     0x426610
  426634:	test   edx,0x2
  42663a:	je     0x4265e0
  42663c:	mov    ax,WORD PTR [edx]
  42663f:	add    edx,0x2
  426642:	cmp    al,BYTE PTR [ecx]
  426644:	jne    0x426614
  426646:	or     al,al
  426648:	je     0x426610
  42664a:	cmp    ah,BYTE PTR [ecx+0x1]
  42664d:	jne    0x426614
  42664f:	or     ah,ah
  426651:	je     0x426610
  426653:	add    ecx,0x2
  426656:	jmp    0x4265e0
  426658:	int3   
  426659:	int3   
  42665a:	int3   
  42665b:	int3   
  42665c:	int3   
  42665d:	int3   
  42665e:	int3   
  42665f:	int3   
  426660:	mov    eax,DWORD PTR [esp+0xc]
  426664:	test   eax,eax
  426666:	je     0x4266b2
  426668:	mov    edx,DWORD PTR [esp+0x4]
  42666c:	push   esi
  42666d:	push   edi
  42666e:	mov    esi,edx
  426670:	mov    edi,DWORD PTR [esp+0x10]
  426674:	or     edx,edi
  426676:	and    edx,0x3
  426679:	je     0x4266b3
  42667b:	test   eax,0x1
  426680:	je     0x426693
  426682:	mov    cl,BYTE PTR [esi]
  426684:	cmp    cl,BYTE PTR [edi]
  426686:	jne    0x4266e0
  426688:	add    esi,0x1
  42668b:	add    edi,0x1
  42668e:	sub    eax,0x1
  426691:	je     0x4266b0
  426693:	mov    cl,BYTE PTR [esi]
  426695:	mov    dl,BYTE PTR [edi]
  426697:	cmp    cl,dl
  426699:	jne    0x4266e0
  42669b:	mov    cl,BYTE PTR [esi+0x1]
  42669e:	mov    dl,BYTE PTR [edi+0x1]
  4266a1:	cmp    cl,dl
  4266a3:	jne    0x4266e0
  4266a5:	add    edi,0x2
  4266a8:	add    esi,0x2
  4266ab:	sub    eax,0x2
  4266ae:	jne    0x426693
  4266b0:	pop    edi
  4266b1:	pop    esi
  4266b2:	ret    
  4266b3:	mov    ecx,eax
  4266b5:	and    eax,0x3
  4266b8:	shr    ecx,0x2
  4266bb:	je     0x4266e8
  4266bd:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4266bf:	je     0x4266e8
  4266c1:	mov    ecx,DWORD PTR [esi-0x4]
  4266c4:	mov    edx,DWORD PTR [edi-0x4]
  4266c7:	cmp    cl,dl
  4266c9:	jne    0x4266db
  4266cb:	cmp    ch,dh
  4266cd:	jne    0x4266db
  4266cf:	shr    ecx,0x10
  4266d2:	shr    edx,0x10
  4266d5:	cmp    cl,dl
  4266d7:	jne    0x4266db
  4266d9:	cmp    ch,dh
  4266db:	mov    eax,0x0
  4266e0:	sbb    eax,eax
  4266e2:	pop    edi
  4266e3:	sbb    eax,0xffffffff
  4266e6:	pop    esi
  4266e7:	ret    
  4266e8:	test   eax,eax
  4266ea:	je     0x4266b0
  4266ec:	mov    edx,DWORD PTR [esi]
  4266ee:	mov    ecx,DWORD PTR [edi]
  4266f0:	cmp    dl,cl
  4266f2:	jne    0x4266db
  4266f4:	sub    eax,0x1
  4266f7:	je     0x426715
  4266f9:	cmp    dh,ch
  4266fb:	jne    0x4266db
  4266fd:	sub    eax,0x1
  426700:	je     0x426715
  426702:	and    ecx,0xff0000
  426708:	and    edx,0xff0000
  42670e:	cmp    edx,ecx
  426710:	jne    0x4266db
  426712:	sub    eax,0x1
  426715:	pop    edi
  426716:	pop    esi
  426717:	ret    
  426718:	int3   
  426719:	int3   
  42671a:	int3   
  42671b:	int3   
  42671c:	int3   
  42671d:	int3   
  42671e:	int3   
  42671f:	int3   
  426720:	push   ebp
  426721:	mov    ebp,esp
  426723:	push   edi
  426724:	push   esi
  426725:	push   ebx
  426726:	mov    ecx,DWORD PTR [ebp+0x10]
  426729:	jecxz  0x426752
  42672b:	mov    ebx,ecx
  42672d:	mov    edi,DWORD PTR [ebp+0x8]
  426730:	mov    esi,edi
  426732:	xor    eax,eax
  426734:	repnz scas al,BYTE PTR es:[edi]
  426736:	neg    ecx
  426738:	add    ecx,ebx
  42673a:	mov    edi,esi
  42673c:	mov    esi,DWORD PTR [ebp+0xc]
  42673f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426741:	mov    al,BYTE PTR [esi-0x1]
  426744:	xor    ecx,ecx
  426746:	cmp    al,BYTE PTR [edi-0x1]
  426749:	ja     0x426750
  42674b:	je     0x426752
  42674d:	sub    ecx,0x2
  426750:	not    ecx
  426752:	mov    eax,ecx
  426754:	pop    ebx
  426755:	pop    esi
  426756:	pop    edi
  426757:	leave  
  426758:	ret    
  426759:	int3   
  42675a:	int3   
  42675b:	int3   
  42675c:	int3   
  42675d:	int3   
  42675e:	int3   
  42675f:	int3   
  426760:	push   ebp
  426761:	mov    ebp,esp
  426763:	push   esi
  426764:	xor    eax,eax
  426766:	push   eax
  426767:	push   eax
  426768:	push   eax
  426769:	push   eax
  42676a:	push   eax
  42676b:	push   eax
  42676c:	push   eax
  42676d:	push   eax
  42676e:	mov    edx,DWORD PTR [ebp+0xc]
  426771:	lea    ecx,[ecx+0x0]
  426774:	mov    al,BYTE PTR [edx]
  426776:	or     al,al
  426778:	je     0x426783
  42677a:	add    edx,0x1
  42677d:	bts    DWORD PTR [esp],eax
  426781:	jmp    0x426774
  426783:	mov    esi,DWORD PTR [ebp+0x8]
  426786:	mov    edi,edi
  426788:	mov    al,BYTE PTR [esi]
  42678a:	or     al,al
  42678c:	je     0x42679a
  42678e:	add    esi,0x1
  426791:	bt     DWORD PTR [esp],eax
  426795:	jae    0x426788
  426797:	lea    eax,[esi-0x1]
  42679a:	add    esp,0x20
  42679d:	pop    esi
  42679e:	leave  
  42679f:	ret    
  4267a0:	push   ebp
  4267a1:	mov    ebp,esp
  4267a3:	push   ebx
  4267a4:	push   esi
  4267a5:	push   edi
  4267a6:	push   ebp
  4267a7:	push   0x0
  4267a9:	push   0x0
  4267ab:	push   0x4267b8
  4267b0:	push   DWORD PTR [ebp+0x8]
  4267b3:	call   0x42722e
  4267b8:	pop    ebp
  4267b9:	pop    edi
  4267ba:	pop    esi
  4267bb:	pop    ebx
  4267bc:	mov    esp,ebp
  4267be:	pop    ebp
  4267bf:	ret    
  4267c0:	mov    ecx,DWORD PTR [esp+0x4]
  4267c4:	test   DWORD PTR [ecx+0x4],0x6
  4267cb:	mov    eax,0x1
  4267d0:	je     0x4267e1
  4267d2:	mov    eax,DWORD PTR [esp+0x8]
  4267d6:	mov    edx,DWORD PTR [esp+0x10]
  4267da:	mov    DWORD PTR [edx],eax
  4267dc:	mov    eax,0x3
  4267e1:	ret    
  4267e2:	push   ebx
  4267e3:	push   esi
  4267e4:	push   edi
  4267e5:	mov    eax,DWORD PTR [esp+0x10]
  4267e9:	push   eax
  4267ea:	push   0xfffffffe
  4267ec:	push   0x4267c0
  4267f1:	push   DWORD PTR fs:0x0
  4267f8:	mov    DWORD PTR fs:0x0,esp
  4267ff:	mov    eax,DWORD PTR [esp+0x20]
  426803:	mov    ebx,DWORD PTR [eax+0x8]
  426806:	mov    esi,DWORD PTR [eax+0xc]
  426809:	cmp    esi,0xffffffff
  42680c:	je     0x42683c
  42680e:	cmp    esi,DWORD PTR [esp+0x24]
  426812:	je     0x42683c
  426814:	lea    esi,[esi+esi*2]
  426817:	mov    ecx,DWORD PTR [ebx+esi*4]
  42681a:	mov    DWORD PTR [esp+0x8],ecx
  42681e:	mov    DWORD PTR [eax+0xc],ecx
  426821:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426826:	jne    0x42683a
  426828:	push   0x101
  42682d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426831:	call   0x426876
  426836:	call   DWORD PTR [ebx+esi*4+0x8]
  42683a:	jmp    0x4267ff
  42683c:	pop    DWORD PTR fs:0x0
  426843:	add    esp,0xc
  426846:	pop    edi
  426847:	pop    esi
  426848:	pop    ebx
  426849:	ret    
  42684a:	xor    eax,eax
  42684c:	mov    ecx,DWORD PTR fs:0x0
  426853:	cmp    DWORD PTR [ecx+0x4],0x4267c0
  42685a:	jne    0x42686c
  42685c:	mov    edx,DWORD PTR [ecx+0xc]
  42685f:	mov    edx,DWORD PTR [edx+0xc]
  426862:	cmp    DWORD PTR [ecx+0x8],edx
  426865:	jne    0x42686c
  426867:	mov    eax,0x1
  42686c:	ret    
  42686d:	push   ebx
  42686e:	push   ecx
  42686f:	mov    ebx,0x465b7c
  426874:	jmp    0x426880
  426876:	push   ebx
  426877:	push   ecx
  426878:	mov    ebx,0x465b7c
  42687d:	mov    ecx,DWORD PTR [ebp+0x8]
  426880:	mov    DWORD PTR [ebx+0x8],ecx
  426883:	mov    DWORD PTR [ebx+0x4],eax
  426886:	mov    DWORD PTR [ebx+0xc],ebp
  426889:	pop    ecx
  42688a:	pop    ebx
  42688b:	ret    0x4
  42688e:	int3   
  42688f:	int3   
  426890:	push   ebp
  426891:	mov    ebp,esp
  426893:	push   edi
  426894:	push   esi
  426895:	mov    esi,DWORD PTR [ebp+0xc]
  426898:	mov    ecx,DWORD PTR [ebp+0x10]
  42689b:	mov    edi,DWORD PTR [ebp+0x8]
  42689e:	mov    eax,ecx
  4268a0:	mov    edx,ecx
  4268a2:	add    eax,esi
  4268a4:	cmp    edi,esi
  4268a6:	jbe    0x4268b0
  4268a8:	cmp    edi,eax
  4268aa:	jb     0x426a2c
  4268b0:	test   edi,0x3
  4268b6:	jne    0x4268cc
  4268b8:	shr    ecx,0x2
  4268bb:	and    edx,0x3
  4268be:	cmp    ecx,0x8
  4268c1:	jb     0x4268ec
  4268c3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268c5:	jmp    DWORD PTR [edx*4+0x4269dc]
  4268cc:	mov    eax,edi
  4268ce:	mov    edx,0x3
  4268d3:	sub    ecx,0x4
  4268d6:	jb     0x4268e4
  4268d8:	and    eax,0x3
  4268db:	add    ecx,eax
  4268dd:	jmp    DWORD PTR [eax*4+0x4268f0]
  4268e4:	jmp    DWORD PTR [ecx*4+0x4269ec]
  4268eb:	nop
  4268ec:	jmp    DWORD PTR [ecx*4+0x426970]
  4268f3:	nop
  4268f4:	add    BYTE PTR [ecx+0x42],ch
  4268f7:	add    BYTE PTR [ecx+ebp*2],ch
  4268fa:	inc    edx
  4268fb:	add    BYTE PTR [eax+0x69],dl
  4268fe:	inc    edx
  4268ff:	add    BYTE PTR [ebx],ah
  426901:	ror    DWORD PTR [edx-0x75f877fa],1
  426907:	inc    esi
  426908:	add    DWORD PTR [eax+0x468a0147],ecx
  42690e:	add    al,cl
  426910:	jmp    0x289f117
  426915:	add    esi,0x3
  426918:	add    edi,0x3
  42691b:	cmp    ecx,0x8
  42691e:	jb     0x4268ec
  426920:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426922:	jmp    DWORD PTR [edx*4+0x4269dc]
  426929:	lea    ecx,[ecx+0x0]
  42692c:	and    edx,ecx
  42692e:	mov    al,BYTE PTR [esi]
  426930:	mov    BYTE PTR [edi],al
  426932:	mov    al,BYTE PTR [esi+0x1]
  426935:	shr    ecx,0x2
  426938:	mov    BYTE PTR [edi+0x1],al
  42693b:	add    esi,0x2
  42693e:	add    edi,0x2
  426941:	cmp    ecx,0x8
  426944:	jb     0x4268ec
  426946:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426948:	jmp    DWORD PTR [edx*4+0x4269dc]
  42694f:	nop
  426950:	and    edx,ecx
  426952:	mov    al,BYTE PTR [esi]
  426954:	mov    BYTE PTR [edi],al
  426956:	add    esi,0x1
  426959:	shr    ecx,0x2
  42695c:	add    edi,0x1
  42695f:	cmp    ecx,0x8
  426962:	jb     0x4268ec
  426964:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426966:	jmp    DWORD PTR [edx*4+0x4269dc]
  42696d:	lea    ecx,[ecx+0x0]
  426970:	shr    DWORD PTR [ecx+0x42],cl
  426973:	add    al,al
  426975:	imul   eax,DWORD PTR [edx+0x0],0x4269b8
  42697c:	mov    al,0x69
  42697e:	inc    edx
  42697f:	add    BYTE PTR [eax-0x5fffbd97],ch
  426985:	imul   eax,DWORD PTR [edx+0x0],0x426998
  42698c:	nop
  42698d:	imul   eax,DWORD PTR [edx+0x0],0xe48e448b
  426994:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
  426998:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
  42699c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4269a0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4269a4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4269a8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4269ac:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4269b0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4269b4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4269b8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4269bc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4269c0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4269c4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4269c8:	lea    eax,[ecx*4+0x0]
  4269cf:	add    esi,eax
  4269d1:	add    edi,eax
  4269d3:	jmp    DWORD PTR [edx*4+0x4269dc]
  4269da:	mov    edi,edi
  4269dc:	in     al,dx
  4269dd:	imul   eax,DWORD PTR [edx+0x0],0x4269f4
  4269e4:	add    BYTE PTR [edx+0x42],ch
  4269e7:	add    BYTE PTR [edx+ebp*2],dl
  4269ea:	inc    edx
  4269eb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4269f1:	leave  
  4269f2:	ret    
  4269f3:	nop
  4269f4:	mov    al,BYTE PTR [esi]
  4269f6:	mov    BYTE PTR [edi],al
  4269f8:	mov    eax,DWORD PTR [ebp+0x8]
  4269fb:	pop    esi
  4269fc:	pop    edi
  4269fd:	leave  
  4269fe:	ret    
  4269ff:	nop
  426a00:	mov    al,BYTE PTR [esi]
  426a02:	mov    BYTE PTR [edi],al
  426a04:	mov    al,BYTE PTR [esi+0x1]
  426a07:	mov    BYTE PTR [edi+0x1],al
  426a0a:	mov    eax,DWORD PTR [ebp+0x8]
  426a0d:	pop    esi
  426a0e:	pop    edi
  426a0f:	leave  
  426a10:	ret    
  426a11:	lea    ecx,[ecx+0x0]
  426a14:	mov    al,BYTE PTR [esi]
  426a16:	mov    BYTE PTR [edi],al
  426a18:	mov    al,BYTE PTR [esi+0x1]
  426a1b:	mov    BYTE PTR [edi+0x1],al
  426a1e:	mov    al,BYTE PTR [esi+0x2]
  426a21:	mov    BYTE PTR [edi+0x2],al
  426a24:	mov    eax,DWORD PTR [ebp+0x8]
  426a27:	pop    esi
  426a28:	pop    edi
  426a29:	leave  
  426a2a:	ret    
  426a2b:	nop
  426a2c:	lea    esi,[ecx+esi*1-0x4]
  426a30:	lea    edi,[ecx+edi*1-0x4]
  426a34:	test   edi,0x3
  426a3a:	jne    0x426a60
  426a3c:	shr    ecx,0x2
  426a3f:	and    edx,0x3
  426a42:	cmp    ecx,0x8
  426a45:	jb     0x426a54
  426a47:	std    
  426a48:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a4a:	cld    
  426a4b:	jmp    DWORD PTR [edx*4+0x426b78]
  426a52:	mov    edi,edi
  426a54:	neg    ecx
  426a56:	jmp    DWORD PTR [ecx*4+0x426b28]
  426a5d:	lea    ecx,[ecx+0x0]
  426a60:	mov    eax,edi
  426a62:	mov    edx,0x3
  426a67:	cmp    ecx,0x4
  426a6a:	jb     0x426a78
  426a6c:	and    eax,0x3
  426a6f:	sub    ecx,eax
  426a71:	jmp    DWORD PTR [eax*4+0x426a7c]
  426a78:	jmp    DWORD PTR [ecx*4+0x426b78]
  426a7f:	nop
  426a80:	mov    WORD PTR [edx+0x42],gs
  426a83:	add    BYTE PTR [eax-0x27ffbd96],dh
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [edx-0x2edcfcba],cl
  426a91:	mov    BYTE PTR [edi+0x3],al
  426a94:	sub    esi,0x1
  426a97:	shr    ecx,0x2
  426a9a:	sub    edi,0x1
  426a9d:	cmp    ecx,0x8
  426aa0:	jb     0x426a54
  426aa2:	std    
  426aa3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426aa5:	cld    
  426aa6:	jmp    DWORD PTR [edx*4+0x426b78]
  426aad:	lea    ecx,[ecx+0x0]
  426ab0:	mov    al,BYTE PTR [esi+0x3]
  426ab3:	and    edx,ecx
  426ab5:	mov    BYTE PTR [edi+0x3],al
  426ab8:	mov    al,BYTE PTR [esi+0x2]
  426abb:	shr    ecx,0x2
  426abe:	mov    BYTE PTR [edi+0x2],al
  426ac1:	sub    esi,0x2
  426ac4:	sub    edi,0x2
  426ac7:	cmp    ecx,0x8
  426aca:	jb     0x426a54
  426acc:	std    
  426acd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426acf:	cld    
  426ad0:	jmp    DWORD PTR [edx*4+0x426b78]
  426ad7:	nop
  426ad8:	mov    al,BYTE PTR [esi+0x3]
  426adb:	and    edx,ecx
  426add:	mov    BYTE PTR [edi+0x3],al
  426ae0:	mov    al,BYTE PTR [esi+0x2]
  426ae3:	mov    BYTE PTR [edi+0x2],al
  426ae6:	mov    al,BYTE PTR [esi+0x1]
  426ae9:	shr    ecx,0x2
  426aec:	mov    BYTE PTR [edi+0x1],al
  426aef:	sub    esi,0x3
  426af2:	sub    edi,0x3
  426af5:	cmp    ecx,0x8
  426af8:	jb     0x426a54
  426afe:	std    
  426aff:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426b01:	cld    
  426b02:	jmp    DWORD PTR [edx*4+0x426b78]
  426b09:	lea    ecx,[ecx+0x0]
  426b0c:	sub    al,0x6b
  426b0e:	inc    edx
  426b0f:	add    BYTE PTR [ebx+ebp*2],dh
  426b12:	inc    edx
  426b13:	add    BYTE PTR [ebx+ebp*2],bh
  426b16:	inc    edx
  426b17:	add    BYTE PTR [ebx+ebp*2+0x42],al
  426b1b:	add    BYTE PTR [ebx+ebp*2+0x42],cl
  426b1f:	add    BYTE PTR [ebx+ebp*2+0x42],dl
  426b23:	add    BYTE PTR [ebx+ebp*2+0x42],bl
  426b27:	add    BYTE PTR [edi+0x6b],ch
  426b2a:	inc    edx
  426b2b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426b31:	inc    esp
  426b32:	(bad)  
  426b33:	sbb    al,0x8b
  426b35:	inc    esp
  426b36:	mov    ds,WORD PTR [eax]
  426b38:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426b3c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426b40:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426b44:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426b48:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426b4c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426b50:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426b54:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426b58:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426b5c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426b60:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426b64:	lea    eax,[ecx*4+0x0]
  426b6b:	add    esi,eax
  426b6d:	add    edi,eax
  426b6f:	jmp    DWORD PTR [edx*4+0x426b78]
  426b76:	mov    edi,edi
  426b78:	mov    BYTE PTR [ebx+0x42],ch
  426b7b:	add    BYTE PTR [eax-0x5fffbd95],dl
  426b81:	imul   eax,DWORD PTR [edx+0x0],0xffffffb4
  426b85:	imul   eax,DWORD PTR [edx+0x0],0xffffff8b
  426b89:	inc    ebp
  426b8a:	or     BYTE PTR [esi+0x5f],bl
  426b8d:	leave  
  426b8e:	ret    
  426b8f:	nop
  426b90:	mov    al,BYTE PTR [esi+0x3]
  426b93:	mov    BYTE PTR [edi+0x3],al
  426b96:	mov    eax,DWORD PTR [ebp+0x8]
  426b99:	pop    esi
  426b9a:	pop    edi
  426b9b:	leave  
  426b9c:	ret    
  426b9d:	lea    ecx,[ecx+0x0]
  426ba0:	mov    al,BYTE PTR [esi+0x3]
  426ba3:	mov    BYTE PTR [edi+0x3],al
  426ba6:	mov    al,BYTE PTR [esi+0x2]
  426ba9:	mov    BYTE PTR [edi+0x2],al
  426bac:	mov    eax,DWORD PTR [ebp+0x8]
  426baf:	pop    esi
  426bb0:	pop    edi
  426bb1:	leave  
  426bb2:	ret    
  426bb3:	nop
  426bb4:	mov    al,BYTE PTR [esi+0x3]
  426bb7:	mov    BYTE PTR [edi+0x3],al
  426bba:	mov    al,BYTE PTR [esi+0x2]
  426bbd:	mov    BYTE PTR [edi+0x2],al
  426bc0:	mov    al,BYTE PTR [esi+0x1]
  426bc3:	mov    BYTE PTR [edi+0x1],al
  426bc6:	mov    eax,DWORD PTR [ebp+0x8]
  426bc9:	pop    esi
  426bca:	pop    edi
  426bcb:	leave  
  426bcc:	ret    
  426bcd:	push   ebp
  426bce:	mov    ebp,esp
  426bd0:	sub    esp,0xc
  426bd3:	mov    eax,ds:0x465660
  426bd8:	xor    eax,DWORD PTR [ebp+0x4]
  426bdb:	and    BYTE PTR [ebp-0x6],0x0
  426bdf:	push   0x6
  426be1:	mov    DWORD PTR [ebp-0x4],eax
  426be4:	lea    eax,[ebp-0xc]
  426be7:	push   eax
  426be8:	push   0x1004
  426bed:	push   DWORD PTR [ebp+0x8]
  426bf0:	call   DWORD PTR ds:0x428110
  426bf6:	test   eax,eax
  426bf8:	jne    0x426bff
  426bfa:	or     eax,0xffffffff
  426bfd:	jmp    0x426c09
  426bff:	lea    eax,[ebp-0xc]
  426c02:	push   eax
  426c03:	call   0x426f0e
  426c08:	pop    ecx
  426c09:	mov    ecx,DWORD PTR [ebp-0x4]
  426c0c:	xor    ecx,DWORD PTR [ebp+0x4]
  426c0f:	call   0x42401c
  426c14:	leave  
  426c15:	ret    
  426c16:	push   0x38
  426c18:	push   0x428ef8
  426c1d:	call   0x423950
  426c22:	mov    eax,ds:0x465660
  426c27:	xor    eax,DWORD PTR [ebp+0x4]
  426c2a:	mov    DWORD PTR [ebp-0x1c],eax
  426c2d:	xor    edi,edi
  426c2f:	mov    DWORD PTR [ebp-0x20],edi
  426c32:	mov    DWORD PTR [ebp-0x24],edi
  426c35:	mov    eax,DWORD PTR [ebp+0x14]
  426c38:	mov    ebx,DWORD PTR [eax]
  426c3a:	mov    DWORD PTR [ebp-0x28],ebx
  426c3d:	mov    DWORD PTR [ebp-0x2c],edi
  426c40:	mov    eax,DWORD PTR [ebp+0x8]
  426c43:	cmp    eax,DWORD PTR [ebp+0xc]
  426c46:	je     0x426dbf
  426c4c:	lea    ecx,[ebp-0x40]
  426c4f:	push   ecx
  426c50:	push   eax
  426c51:	mov    esi,DWORD PTR ds:0x4280dc
  426c57:	call   esi
  426c59:	test   eax,eax
  426c5b:	je     0x426c7d
  426c5d:	cmp    DWORD PTR [ebp-0x40],0x1
  426c61:	jne    0x426c7d
  426c63:	lea    eax,[ebp-0x40]
  426c66:	push   eax
  426c67:	push   DWORD PTR [ebp+0xc]
  426c6a:	call   esi
  426c6c:	test   eax,eax
  426c6e:	je     0x426c7d
  426c70:	cmp    DWORD PTR [ebp-0x40],0x1
  426c74:	jne    0x426c7d
  426c76:	mov    DWORD PTR [ebp-0x2c],0x1
  426c7d:	cmp    DWORD PTR [ebp-0x2c],edi
  426c80:	je     0x426c9c
  426c82:	cmp    ebx,0xffffffff
  426c85:	je     0x426c8b
  426c87:	mov    esi,ebx
  426c89:	jmp    0x426c97
  426c8b:	push   DWORD PTR [ebp+0x10]
  426c8e:	call   0x423f60
  426c93:	pop    ecx
  426c94:	mov    esi,eax
  426c96:	inc    esi
  426c97:	mov    DWORD PTR [ebp-0x44],esi
  426c9a:	jmp    0x426c9f
  426c9c:	mov    esi,DWORD PTR [ebp-0x44]
  426c9f:	cmp    DWORD PTR [ebp-0x2c],edi
  426ca2:	jne    0x426cbe
  426ca4:	push   edi
  426ca5:	push   edi
  426ca6:	push   ebx
  426ca7:	push   DWORD PTR [ebp+0x10]
  426caa:	push   0x1
  426cac:	push   DWORD PTR [ebp+0x8]
  426caf:	call   DWORD PTR ds:0x428100
  426cb5:	mov    esi,eax
  426cb7:	mov    DWORD PTR [ebp-0x44],esi
  426cba:	cmp    esi,edi
  426cbc:	je     0x426d16
  426cbe:	mov    DWORD PTR [ebp-0x4],edi
  426cc1:	lea    eax,[esi+esi*1]
  426cc4:	add    eax,0x3
  426cc7:	and    eax,0xfffffffc
  426cca:	call   0x4239a0
  426ccf:	mov    DWORD PTR [ebp-0x18],esp
  426cd2:	mov    ebx,esp
  426cd4:	mov    DWORD PTR [ebp-0x48],ebx
  426cd7:	lea    eax,[esi+esi*1]
  426cda:	push   eax
  426cdb:	push   edi
  426cdc:	push   ebx
  426cdd:	call   0x426250
  426ce2:	add    esp,0xc
  426ce5:	or     DWORD PTR [ebp-0x4],0xffffffff
  426ce9:	jmp    0x426d02
  426ceb:	xor    eax,eax
  426ced:	inc    eax
  426cee:	ret    
  426cef:	mov    esp,DWORD PTR [ebp-0x18]
  426cf2:	call   0x426de5
  426cf7:	xor    edi,edi
  426cf9:	xor    ebx,ebx
  426cfb:	or     DWORD PTR [ebp-0x4],0xffffffff
  426cff:	mov    esi,DWORD PTR [ebp-0x44]
  426d02:	cmp    ebx,edi
  426d04:	jne    0x426d24
  426d06:	push   esi
  426d07:	push   0x2
  426d09:	call   0x424a68
  426d0e:	pop    ecx
  426d0f:	pop    ecx
  426d10:	mov    ebx,eax
  426d12:	cmp    ebx,edi
  426d14:	jne    0x426d1d
  426d16:	xor    eax,eax
  426d18:	jmp    0x426dd1
  426d1d:	mov    DWORD PTR [ebp-0x24],0x1
  426d24:	push   esi
  426d25:	push   ebx
  426d26:	push   DWORD PTR [ebp-0x28]
  426d29:	push   DWORD PTR [ebp+0x10]
  426d2c:	push   0x1
  426d2e:	push   DWORD PTR [ebp+0x8]
  426d31:	call   DWORD PTR ds:0x428100
  426d37:	test   eax,eax
  426d39:	je     0x426dc2
  426d3f:	cmp    DWORD PTR [ebp+0x18],edi
  426d42:	je     0x426d64
  426d44:	push   edi
  426d45:	push   edi
  426d46:	push   DWORD PTR [ebp+0x1c]
  426d49:	push   DWORD PTR [ebp+0x18]
  426d4c:	push   esi
  426d4d:	push   ebx
  426d4e:	push   edi
  426d4f:	push   DWORD PTR [ebp+0xc]
  426d52:	call   DWORD PTR ds:0x428090
  426d58:	test   eax,eax
  426d5a:	je     0x426dc2
  426d5c:	mov    eax,DWORD PTR [ebp+0x18]
  426d5f:	mov    DWORD PTR [ebp-0x20],eax
  426d62:	jmp    0x426dc2
  426d64:	cmp    DWORD PTR [ebp-0x2c],edi
  426d67:	jne    0x426d7f
  426d69:	push   edi
  426d6a:	push   edi
  426d6b:	push   edi
  426d6c:	push   edi
  426d6d:	push   esi
  426d6e:	push   ebx
  426d6f:	push   edi
  426d70:	push   DWORD PTR [ebp+0xc]
  426d73:	call   DWORD PTR ds:0x428090
  426d79:	mov    esi,eax
  426d7b:	cmp    esi,edi
  426d7d:	je     0x426dc2
  426d7f:	push   esi
  426d80:	push   0x1
  426d82:	call   0x424a68
  426d87:	pop    ecx
  426d88:	pop    ecx
  426d89:	mov    DWORD PTR [ebp-0x20],eax
  426d8c:	cmp    eax,edi
  426d8e:	je     0x426dc2
  426d90:	push   edi
  426d91:	push   edi
  426d92:	push   esi
  426d93:	push   eax
  426d94:	push   esi
  426d95:	push   ebx
  426d96:	push   edi
  426d97:	push   DWORD PTR [ebp+0xc]
  426d9a:	call   DWORD PTR ds:0x428090
  426da0:	cmp    eax,edi
  426da2:	jne    0x426db2
  426da4:	push   DWORD PTR [ebp-0x20]
  426da7:	call   0x42455a
  426dac:	pop    ecx
  426dad:	mov    DWORD PTR [ebp-0x20],edi
  426db0:	jmp    0x426dc2
  426db2:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426db6:	je     0x426dc2
  426db8:	mov    ecx,DWORD PTR [ebp+0x14]
  426dbb:	mov    DWORD PTR [ecx],eax
  426dbd:	jmp    0x426dc2
  426dbf:	mov    ebx,DWORD PTR [ebp-0x48]
  426dc2:	cmp    DWORD PTR [ebp-0x24],edi
  426dc5:	je     0x426dce
  426dc7:	push   ebx
  426dc8:	call   0x42455a
  426dcd:	pop    ecx
  426dce:	mov    eax,DWORD PTR [ebp-0x20]
  426dd1:	lea    esp,[ebp-0x54]
  426dd4:	mov    ecx,DWORD PTR [ebp-0x1c]
  426dd7:	xor    ecx,DWORD PTR [ebp+0x4]
  426dda:	call   0x42401c
  426ddf:	call   0x42398b
  426de4:	ret    
  426de5:	push   ebp
  426de6:	mov    ebp,esp
  426de8:	sub    esp,0x48
  426deb:	push   ebx
  426dec:	push   esi
  426ded:	push   edi
  426dee:	push   0x4
  426df0:	pop    eax
  426df1:	call   0x4239a0
  426df6:	mov    ebx,esp
  426df8:	push   0x1c
  426dfa:	lea    eax,[ebp-0x24]
  426dfd:	push   eax
  426dfe:	push   ebx
  426dff:	call   DWORD PTR ds:0x428024
  426e05:	test   eax,eax
  426e07:	je     0x426e7a
  426e09:	mov    edi,DWORD PTR [ebp-0x20]
  426e0c:	lea    eax,[ebp-0x48]
  426e0f:	push   eax
  426e10:	call   DWORD PTR ds:0x428038
  426e16:	mov    eax,DWORD PTR [ebp-0x44]
  426e19:	lea    esi,[eax-0x1]
  426e1c:	not    esi
  426e1e:	and    esi,ebx
  426e20:	sub    esi,eax
  426e22:	mov    DWORD PTR [ebp-0x4],eax
  426e25:	mov    eax,ds:0x465d04
  426e2a:	mov    ecx,eax
  426e2c:	dec    ecx
  426e2d:	neg    ecx
  426e2f:	sbb    ecx,ecx
  426e31:	and    ecx,0xffff1000
  426e37:	add    ecx,0x11000
  426e3d:	add    ecx,edi
  426e3f:	cmp    esi,ecx
  426e41:	jb     0x426e7a
  426e43:	cmp    eax,0x1
  426e46:	je     0x426e92
  426e48:	mov    ebx,edi
  426e4a:	mov    edi,0x1000
  426e4f:	push   0x1c
  426e51:	lea    eax,[ebp-0x24]
  426e54:	push   eax
  426e55:	push   ebx
  426e56:	call   DWORD PTR ds:0x428024
  426e5c:	test   eax,eax
  426e5e:	je     0x426e7a
  426e60:	add    ebx,DWORD PTR [ebp-0x18]
  426e63:	test   DWORD PTR [ebp-0x14],edi
  426e66:	je     0x426e4f
  426e68:	test   BYTE PTR [ebp-0xf],0x1
  426e6c:	mov    ebx,DWORD PTR [ebp-0x24]
  426e6f:	je     0x426e76
  426e71:	xor    eax,eax
  426e73:	inc    eax
  426e74:	jmp    0x426eae
  426e76:	cmp    esi,ebx
  426e78:	jae    0x426e7e
  426e7a:	xor    eax,eax
  426e7c:	jmp    0x426eae
  426e7e:	push   0x4
  426e80:	push   edi
  426e81:	push   DWORD PTR [ebp-0x4]
  426e84:	push   ebx
  426e85:	call   DWORD PTR ds:0x4280e4
  426e8b:	mov    eax,ds:0x465d04
  426e90:	jmp    0x426e94
  426e92:	mov    ebx,esi
  426e94:	dec    eax
  426e95:	neg    eax
  426e97:	sbb    eax,eax
  426e99:	and    eax,0x103
  426e9e:	lea    ecx,[ebp-0x8]
  426ea1:	push   ecx
  426ea2:	inc    eax
  426ea3:	push   eax
  426ea4:	push   DWORD PTR [ebp-0x4]
  426ea7:	push   ebx
  426ea8:	call   DWORD PTR ds:0x428054
  426eae:	lea    esp,[ebp-0x54]
  426eb1:	pop    edi
  426eb2:	pop    esi
  426eb3:	pop    ebx
  426eb4:	leave  
  426eb5:	ret    
  426eb6:	int3   
  426eb7:	int3   
  426eb8:	int3   
  426eb9:	int3   
  426eba:	int3   
  426ebb:	int3   
  426ebc:	int3   
  426ebd:	int3   
  426ebe:	int3   
  426ebf:	int3   
  426ec0:	push   ebp
  426ec1:	mov    ebp,esp
  426ec3:	push   edi
  426ec4:	push   esi
  426ec5:	push   ebx
  426ec6:	mov    esi,DWORD PTR [ebp+0xc]
  426ec9:	mov    edi,DWORD PTR [ebp+0x8]
  426ecc:	mov    al,0xff
  426ece:	mov    edi,edi
  426ed0:	or     al,al
  426ed2:	je     0x426f06
  426ed4:	mov    al,BYTE PTR [esi]
  426ed6:	add    esi,0x1
  426ed9:	mov    ah,BYTE PTR [edi]
  426edb:	add    edi,0x1
  426ede:	cmp    ah,al
  426ee0:	je     0x426ed0
  426ee2:	sub    al,0x41
  426ee4:	cmp    al,0x1a
  426ee6:	sbb    cl,cl
  426ee8:	and    cl,0x20
  426eeb:	add    al,cl
  426eed:	add    al,0x41
  426eef:	xchg   al,ah
  426ef1:	sub    al,0x41
  426ef3:	cmp    al,0x1a
  426ef5:	sbb    cl,cl
  426ef7:	and    cl,0x20
  426efa:	add    al,cl
  426efc:	add    al,0x41
  426efe:	cmp    al,ah
  426f00:	je     0x426ed0
  426f02:	sbb    al,al
  426f04:	sbb    al,0xff
  426f06:	movsx  eax,al
  426f09:	pop    ebx
  426f0a:	pop    esi
  426f0b:	pop    edi
  426f0c:	leave  
  426f0d:	ret    
  426f0e:	push   esi
  426f0f:	push   edi
  426f10:	call   0x423803
  426f15:	mov    edi,DWORD PTR [eax+0x64]
  426f18:	cmp    edi,DWORD PTR ds:0x4657bc
  426f1e:	je     0x426f27
  426f20:	call   0x424caf
  426f25:	mov    edi,eax
  426f27:	mov    esi,DWORD PTR [esp+0xc]
  426f2b:	cmp    DWORD PTR [edi+0x28],0x1
  426f2f:	movzx  eax,BYTE PTR [esi]
  426f32:	jle    0x426f42
  426f34:	push   0x8
  426f36:	push   eax
  426f37:	push   edi
  426f38:	call   0x426f96
  426f3d:	add    esp,0xc
  426f40:	jmp    0x426f4c
  426f42:	mov    ecx,DWORD PTR [edi+0x48]
  426f45:	movzx  eax,BYTE PTR [ecx+eax*2]
  426f49:	and    eax,0x8
  426f4c:	test   eax,eax
  426f4e:	je     0x426f53
  426f50:	inc    esi
  426f51:	jmp    0x426f2b
  426f53:	movzx  ecx,BYTE PTR [esi]
  426f56:	inc    esi
  426f57:	cmp    ecx,0x2d
  426f5a:	mov    edx,ecx
  426f5c:	je     0x426f63
  426f5e:	cmp    ecx,0x2b
  426f61:	jne    0x426f67
  426f63:	movzx  ecx,BYTE PTR [esi]
  426f66:	inc    esi
  426f67:	xor    eax,eax
  426f69:	cmp    ecx,0x30
  426f6c:	jl     0x426f78
  426f6e:	cmp    ecx,0x39
  426f71:	jg     0x426f78
  426f73:	sub    ecx,0x30
  426f76:	jmp    0x426f7b
  426f78:	or     ecx,0xffffffff
  426f7b:	cmp    ecx,0xffffffff
  426f7e:	je     0x426f8c
  426f80:	lea    eax,[eax+eax*4]
  426f83:	lea    eax,[ecx+eax*2]
  426f86:	movzx  ecx,BYTE PTR [esi]
  426f89:	inc    esi
  426f8a:	jmp    0x426f69
  426f8c:	cmp    edx,0x2d
  426f8f:	pop    edi
  426f90:	pop    esi
  426f91:	jne    0x426f95
  426f93:	neg    eax
  426f95:	ret    
  426f96:	push   ebp
  426f97:	mov    ebp,esp
  426f99:	push   ecx
  426f9a:	mov    eax,DWORD PTR [ebp+0xc]
  426f9d:	lea    ecx,[eax+0x1]
  426fa0:	cmp    ecx,0x100
  426fa6:	mov    ecx,DWORD PTR [ebp+0x8]
  426fa9:	ja     0x426fb4
  426fab:	mov    ecx,DWORD PTR [ecx+0x48]
  426fae:	movzx  eax,WORD PTR [ecx+eax*2]
  426fb2:	jmp    0x427008
  426fb4:	push   esi
  426fb5:	mov    edx,eax
  426fb7:	sar    edx,0x8
  426fba:	push   edi
  426fbb:	mov    edi,DWORD PTR [ecx+0x48]
  426fbe:	movzx  esi,dl
  426fc1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426fc6:	pop    edi
  426fc7:	pop    esi
  426fc8:	je     0x426fd9
  426fca:	and    BYTE PTR [ebp-0x2],0x0
  426fce:	push   0x2
  426fd0:	mov    BYTE PTR [ebp-0x3],al
  426fd3:	mov    BYTE PTR [ebp-0x4],dl
  426fd6:	pop    eax
  426fd7:	jmp    0x426fe3
  426fd9:	and    BYTE PTR [ebp-0x3],0x0
  426fdd:	mov    BYTE PTR [ebp-0x4],al
  426fe0:	xor    eax,eax
  426fe2:	inc    eax
  426fe3:	push   0x1
  426fe5:	push   DWORD PTR [ecx+0x14]
  426fe8:	push   DWORD PTR [ecx+0x4]
  426feb:	lea    ecx,[ebp+0xe]
  426fee:	push   ecx
  426fef:	push   eax
  426ff0:	lea    eax,[ebp-0x4]
  426ff3:	push   eax
  426ff4:	push   0x1
  426ff6:	call   0x426078
  426ffb:	add    esp,0x1c
  426ffe:	test   eax,eax
  427000:	jne    0x427004
  427002:	leave  
  427003:	ret    
  427004:	movzx  eax,WORD PTR [ebp+0xe]
  427008:	and    eax,DWORD PTR [ebp+0x10]
  42700b:	leave  
  42700c:	ret    
  42700d:	int3   
  42700e:	int3   
  42700f:	int3   
  427010:	mov    eax,DWORD PTR [esp+0x8]
  427014:	mov    ecx,DWORD PTR [esp+0x10]
  427018:	or     ecx,eax
  42701a:	mov    ecx,DWORD PTR [esp+0xc]
  42701e:	jne    0x427029
  427020:	mov    eax,DWORD PTR [esp+0x4]
  427024:	mul    ecx
  427026:	ret    0x10
  427029:	push   ebx
  42702a:	mul    ecx
  42702c:	mov    ebx,eax
  42702e:	mov    eax,DWORD PTR [esp+0x8]
  427032:	mul    DWORD PTR [esp+0x14]
  427036:	add    ebx,eax
  427038:	mov    eax,DWORD PTR [esp+0x8]
  42703c:	mul    ecx
  42703e:	add    edx,ebx
  427040:	pop    ebx
  427041:	ret    0x10
  427044:	int3   
  427045:	int3   
  427046:	int3   
  427047:	int3   
  427048:	int3   
  427049:	int3   
  42704a:	int3   
  42704b:	int3   
  42704c:	int3   
  42704d:	int3   
  42704e:	int3   
  42704f:	int3   
  427050:	push   ebp
  427051:	mov    ebp,esp
  427053:	push   edi
  427054:	push   esi
  427055:	push   ebx
  427056:	mov    ecx,DWORD PTR [ebp+0x10]
  427059:	or     ecx,ecx
  42705b:	je     0x4270aa
  42705d:	mov    esi,DWORD PTR [ebp+0x8]
  427060:	mov    edi,DWORD PTR [ebp+0xc]
  427063:	mov    bh,0x41
  427065:	mov    bl,0x5a
  427067:	mov    dh,0x20
  427069:	lea    ecx,[ecx+0x0]
  42706c:	mov    ah,BYTE PTR [esi]
  42706e:	or     ah,ah
  427070:	mov    al,BYTE PTR [edi]
  427072:	je     0x42709b
  427074:	or     al,al
  427076:	je     0x42709b
  427078:	add    esi,0x1
  42707b:	add    edi,0x1
  42707e:	cmp    ah,bh
  427080:	jb     0x427088
  427082:	cmp    ah,bl
  427084:	ja     0x427088
  427086:	add    ah,dh
  427088:	cmp    al,bh
  42708a:	jb     0x427092
  42708c:	cmp    al,bl
  42708e:	ja     0x427092
  427090:	add    al,dh
  427092:	cmp    ah,al
  427094:	jne    0x4270a1
  427096:	sub    ecx,0x1
  427099:	jne    0x42706c
  42709b:	xor    ecx,ecx
  42709d:	cmp    ah,al
  42709f:	je     0x4270aa
  4270a1:	mov    ecx,0xffffffff
  4270a6:	jb     0x4270aa
  4270a8:	neg    ecx
  4270aa:	mov    eax,ecx
  4270ac:	pop    ebx
  4270ad:	pop    esi
  4270ae:	pop    edi
  4270af:	leave  
  4270b0:	ret    
  4270b1:	int3   
  4270b2:	int3   
  4270b3:	int3   
  4270b4:	int3   
  4270b5:	int3   
  4270b6:	int3   
  4270b7:	int3   
  4270b8:	int3   
  4270b9:	int3   
  4270ba:	int3   
  4270bb:	int3   
  4270bc:	int3   
  4270bd:	int3   
  4270be:	int3   
  4270bf:	int3   
  4270c0:	push   esi
  4270c1:	mov    eax,DWORD PTR [esp+0x14]
  4270c5:	or     eax,eax
  4270c7:	jne    0x4270f1
  4270c9:	mov    ecx,DWORD PTR [esp+0x10]
  4270cd:	mov    eax,DWORD PTR [esp+0xc]
  4270d1:	xor    edx,edx
  4270d3:	div    ecx
  4270d5:	mov    ebx,eax
  4270d7:	mov    eax,DWORD PTR [esp+0x8]
  4270db:	div    ecx
  4270dd:	mov    esi,eax
  4270df:	mov    eax,ebx
  4270e1:	mul    DWORD PTR [esp+0x10]
  4270e5:	mov    ecx,eax
  4270e7:	mov    eax,esi
  4270e9:	mul    DWORD PTR [esp+0x10]
  4270ed:	add    edx,ecx
  4270ef:	jmp    0x427138
  4270f1:	mov    ecx,eax
  4270f3:	mov    ebx,DWORD PTR [esp+0x10]
  4270f7:	mov    edx,DWORD PTR [esp+0xc]
  4270fb:	mov    eax,DWORD PTR [esp+0x8]
  4270ff:	shr    ecx,1
  427101:	rcr    ebx,1
  427103:	shr    edx,1
  427105:	rcr    eax,1
  427107:	or     ecx,ecx
  427109:	jne    0x4270ff
  42710b:	div    ebx
  42710d:	mov    esi,eax
  42710f:	mul    DWORD PTR [esp+0x14]
  427113:	mov    ecx,eax
  427115:	mov    eax,DWORD PTR [esp+0x10]
  427119:	mul    esi
  42711b:	add    edx,ecx
  42711d:	jb     0x42712d
  42711f:	cmp    edx,DWORD PTR [esp+0xc]
  427123:	ja     0x42712d
  427125:	jb     0x427136
  427127:	cmp    eax,DWORD PTR [esp+0x8]
  42712b:	jbe    0x427136
  42712d:	dec    esi
  42712e:	sub    eax,DWORD PTR [esp+0x10]
  427132:	sbb    edx,DWORD PTR [esp+0x14]
  427136:	xor    ebx,ebx
  427138:	sub    eax,DWORD PTR [esp+0x8]
  42713c:	sbb    edx,DWORD PTR [esp+0xc]
  427140:	neg    edx
  427142:	neg    eax
  427144:	sbb    edx,0x0
  427147:	mov    ecx,edx
  427149:	mov    edx,ebx
  42714b:	mov    ebx,ecx
  42714d:	mov    ecx,eax
  42714f:	mov    eax,esi
  427151:	pop    esi
  427152:	ret    0x10
  427155:	int3   
  427156:	int3   
  427157:	int3   
  427158:	int3   
  427159:	int3   
  42715a:	int3   
  42715b:	int3   
  42715c:	int3   
  42715d:	int3   
  42715e:	int3   
  42715f:	int3   
  427160:	lea    eax,[edx-0x1]
  427163:	pop    ebx
  427164:	ret    
  427165:	lea    esp,[esp+0x0]
  42716c:	lea    esp,[esp+0x0]
  427170:	xor    eax,eax
  427172:	mov    al,BYTE PTR [esp+0x8]
  427176:	push   ebx
  427177:	mov    ebx,eax
  427179:	shl    eax,0x8
  42717c:	mov    edx,DWORD PTR [esp+0x8]
  427180:	test   edx,0x3
  427186:	je     0x42719d
  427188:	mov    cl,BYTE PTR [edx]
  42718a:	add    edx,0x1
  42718d:	cmp    cl,bl
  42718f:	je     0x427160
  427191:	test   cl,cl
  427193:	je     0x4271e6
  427195:	test   edx,0x3
  42719b:	jne    0x427188
  42719d:	or     ebx,eax
  42719f:	push   edi
  4271a0:	mov    eax,ebx
  4271a2:	shl    ebx,0x10
  4271a5:	push   esi
  4271a6:	or     ebx,eax
  4271a8:	mov    ecx,DWORD PTR [edx]
  4271aa:	mov    edi,0x7efefeff
  4271af:	mov    eax,ecx
  4271b1:	mov    esi,edi
  4271b3:	xor    ecx,ebx
  4271b5:	add    esi,eax
  4271b7:	add    edi,ecx
  4271b9:	xor    ecx,0xffffffff
  4271bc:	xor    eax,0xffffffff
  4271bf:	xor    ecx,edi
  4271c1:	xor    eax,esi
  4271c3:	add    edx,0x4
  4271c6:	and    ecx,0x81010100
  4271cc:	jne    0x4271ea
  4271ce:	and    eax,0x81010100
  4271d3:	je     0x4271a8
  4271d5:	and    eax,0x1010100
  4271da:	jne    0x4271e4
  4271dc:	and    esi,0x80000000
  4271e2:	jne    0x4271a8
  4271e4:	pop    esi
  4271e5:	pop    edi
  4271e6:	pop    ebx
  4271e7:	xor    eax,eax
  4271e9:	ret    
  4271ea:	mov    eax,DWORD PTR [edx-0x4]
  4271ed:	cmp    al,bl
  4271ef:	je     0x427227
  4271f1:	test   al,al
  4271f3:	je     0x4271e4
  4271f5:	cmp    ah,bl
  4271f7:	je     0x427220
  4271f9:	test   ah,ah
  4271fb:	je     0x4271e4
  4271fd:	shr    eax,0x10
  427200:	cmp    al,bl
  427202:	je     0x427219
  427204:	test   al,al
  427206:	je     0x4271e4
  427208:	cmp    ah,bl
  42720a:	je     0x427212
  42720c:	test   ah,ah
  42720e:	je     0x4271e4
  427210:	jmp    0x4271a8
  427212:	pop    esi
  427213:	pop    edi
  427214:	lea    eax,[edx-0x1]
  427217:	pop    ebx
  427218:	ret    
  427219:	lea    eax,[edx-0x2]
  42721c:	pop    esi
  42721d:	pop    edi
  42721e:	pop    ebx
  42721f:	ret    
  427220:	lea    eax,[edx-0x3]
  427223:	pop    esi
  427224:	pop    edi
  427225:	pop    ebx
  427226:	ret    
  427227:	lea    eax,[edx-0x4]
  42722a:	pop    esi
  42722b:	pop    edi
  42722c:	pop    ebx
  42722d:	ret    
  42722e:	jmp    DWORD PTR ds:0x428058
