
b47d45dbf6585f7277f19e8e3065e2e54edb489ea5e29f0d54fee797eca80dfd.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	sbb    ecx,0x40a3
  40100f:	mov    eax,DWORD PTR [ebp+0x8]
  401012:	push   ebx
  401013:	mov    ecx,DWORD PTR ds:0x42a1b3
  401019:	adc    DWORD PTR ds:0x42a14f,ecx
  40101f:	push   esi
  401020:	push   edi
  401021:	and    DWORD PTR ds:0x42a183,0x0
  40102b:	jmp    0x40103d
  401030:	mov    edi,DWORD PTR ds:0x42a183
  401036:	inc    edi
  401037:	mov    DWORD PTR ds:0x42a183,edi
  40103d:	cmp    DWORD PTR ds:0x42a183,0x17
  401044:	jae    0x401067
  40104a:	cmp    DWORD PTR ds:0x42a183,0x1c
  401051:	ja     0x401067
  401057:	jmp    0x401062
  40105c:	call   DWORD PTR ds:0x42a293
  401062:	jmp    0x401030
  401067:	mov    esi,0x75108a8
  40106c:	mov    DWORD PTR ds:0x42a13f,0x1f
  401076:	cmp    DWORD PTR ds:0x42a13f,0x0
  40107d:	je     0x4010bf
  401083:	cmp    DWORD PTR ds:0x42a13f,0x2c
  40108a:	ja     0x4010bf
  401090:	jmp    0x4010ad
  401095:	push   DWORD PTR [ebp-0x1c]
  401098:	push   0x6c93
  40109d:	push   0x429093
  4010a2:	push   0x400000
  4010a7:	call   DWORD PTR ds:0x42a297
  4010ad:	mov    edi,DWORD PTR ds:0x42a13f
  4010b3:	dec    edi
  4010b4:	mov    DWORD PTR ds:0x42a13f,edi
  4010ba:	jmp    0x401076
  4010bf:	xor    eax,esi
  4010c1:	sbb    DWORD PTR ds:0x42a18f,0x4c4b
  4010cb:	mov    edi,0x3272ef
  4010d0:	and    DWORD PTR ds:0x42a13f,0x59cd
  4010da:	add    eax,edi
  4010dc:	mov    ecx,DWORD PTR ds:0x42a13b
  4010e2:	sbb    ecx,DWORD PTR ds:0x42a17b
  4010e8:	mov    DWORD PTR ds:0x42a13b,ecx
  4010ee:	mov    DWORD PTR [ebp-0x40],eax
  4010f1:	mov    DWORD PTR ds:0x42a167,0x1b
  4010fb:	cmp    DWORD PTR ds:0x42a167,0x0
  401102:	je     0x40114e
  401108:	cmp    DWORD PTR ds:0x42a167,0x3
  40110f:	jb     0x40114e
  401115:	jmp    0x401120
  40111a:	call   DWORD PTR ds:0x42a29b
  401120:	cmp    DWORD PTR ds:0x42a167,0x4
  401127:	jne    0x40113c
  40112d:	xor    ecx,ecx
  40112f:	add    ecx,DWORD PTR ds:0x42a167
  401135:	dec    ecx
  401136:	mov    DWORD PTR ds:0x42a167,ecx
  40113c:	mov    ecx,DWORD PTR ds:0x42a167
  401142:	dec    ecx
  401143:	mov    DWORD PTR ds:0x42a167,ecx
  401149:	jmp    0x4010fb
  40114e:	mov    eax,ds:0x4292af
  401153:	mov    eax,DWORD PTR [eax]
  401155:	xor    ecx,ecx
  401157:	or     ecx,DWORD PTR ds:0x42a27f
  40115d:	mov    ecx,DWORD PTR [ecx]
  40115f:	sbb    DWORD PTR ds:0x42a15f,ecx
  401165:	mov    DWORD PTR [ebp-0x3c],eax
  401168:	sub    ecx,0x5dee
  40116e:	mov    eax,ds:0x4294bf
  401173:	and    DWORD PTR ds:0x42a1b7,edx
  401179:	mov    eax,DWORD PTR [eax]
  40117b:	and    DWORD PTR ds:0x42a18f,0x0
  401185:	jmp    0x401197
  40118a:	mov    ecx,DWORD PTR ds:0x42a18f
  401190:	inc    ecx
  401191:	mov    DWORD PTR ds:0x42a18f,ecx
  401197:	cmp    DWORD PTR ds:0x42a18f,0x1d
  40119e:	jae    0x4011d3
  4011a4:	cmp    DWORD PTR ds:0x42a18f,0x22
  4011ab:	jg     0x4011d3
  4011b1:	jmp    0x4011ce
  4011b6:	push   DWORD PTR [ebp-0x10]
  4011b9:	push   0x1d13
  4011be:	push   0x42920b
  4011c3:	push   0x400000
  4011c8:	call   DWORD PTR ds:0x42a2a3
  4011ce:	jmp    0x40118a
  4011d3:	mov    DWORD PTR [ebp-0x1c],eax
  4011d6:	sub    ecx,eax
  4011d8:	mov    DWORD PTR [ebp-0x34],0xf89c87b9
  4011df:	mov    DWORD PTR ds:0x42a16b,0x4da
  4011e9:	mov    eax,DWORD PTR [ebp-0x34]
  4011ec:	dec    ecx
  4011ed:	xor    eax,esi
  4011ef:	xor    DWORD PTR ds:0x42a1a7,0x5e5b
  4011f9:	add    eax,edi
  4011fb:	add    DWORD PTR ds:0x42a16f,0x6276
  401205:	mov    DWORD PTR [ebp-0x40],eax
  401208:	and    DWORD PTR ds:0x42a147,0x0
  401212:	jmp    0x401226
  401217:	xor    ecx,ecx
  401219:	or     ecx,DWORD PTR ds:0x42a147
  40121f:	inc    ecx
  401220:	mov    DWORD PTR ds:0x42a147,ecx
  401226:	cmp    DWORD PTR ds:0x42a147,0x15
  40122d:	jae    0x401250
  401233:	cmp    DWORD PTR ds:0x42a147,0x19
  40123a:	jle    0x401250
  401240:	jmp    0x40124b
  401245:	call   DWORD PTR ds:0x42a2a7
  40124b:	jmp    0x401217
  401250:	mov    eax,ds:0x42942f
  401255:	mov    DWORD PTR [ebp-0x40],eax
  401258:	mov    eax,DWORD PTR [ebp-0x3c]
  40125b:	mov    DWORD PTR ds:0x42a18b,0x16
  401265:	cmp    DWORD PTR ds:0x42a18b,0x0
  40126c:	je     0x4012a7
  401272:	cmp    DWORD PTR ds:0x42a18b,0x20
  401279:	jg     0x4012a7
  40127f:	jmp    0x401295
  401284:	push   DWORD PTR [ebp-0x28]
  401287:	push   0x42a137
  40128c:	push   DWORD PTR [ebp-0x28]
  40128f:	call   DWORD PTR ds:0x42a2ab
  401295:	mov    ecx,DWORD PTR ds:0x42a18b
  40129b:	dec    ecx
  40129c:	mov    DWORD PTR ds:0x42a18b,ecx
  4012a2:	jmp    0x401265
  4012a7:	mov    DWORD PTR [ebp-0x14],eax
  4012aa:	sub    ecx,eax
  4012ac:	mov    eax,DWORD PTR [ebp-0x14]
  4012af:	push   0x4
  4012b1:	xor    ecx,ecx
  4012b3:	xor    ecx,DWORD PTR ds:0x42a1cb
  4012b9:	xor    DWORD PTR ds:0x42a143,ecx
  4012bf:	pop    ecx
  4012c0:	or     DWORD PTR ds:0x42a197,0x7ab3
  4012ca:	sub    ecx,eax
  4012cc:	add    DWORD PTR ds:0x42a13f,0x1333
  4012d6:	add    ecx,DWORD PTR [ebp-0x1c]
  4012d9:	movzx  eax,BYTE PTR ds:0x42a187
  4012e0:	xor    DWORD PTR ds:0x42a14b,eax
  4012e6:	mov    DWORD PTR [ebp-0x2c],0xf89c85f9
  4012ed:	mov    DWORD PTR [ebp-0x18],ecx
  4012f0:	mov    DWORD PTR [ebp-0xa0],0xf89c85bd
  4012fa:	add    DWORD PTR ds:0x42a1b3,0x1736
  401304:	mov    eax,DWORD PTR [ebp-0x14]
  401307:	mov    DWORD PTR [ebp-0x9c],eax
  40130d:	and    DWORD PTR ds:0x42a1ab,0x0
  401317:	jmp    0x40132a
  40131c:	xor    eax,eax
  40131e:	xor    eax,DWORD PTR ds:0x42a1ab
  401324:	inc    eax
  401325:	mov    ds:0x42a1ab,eax
  40132a:	cmp    DWORD PTR ds:0x42a1ab,0x18
  401331:	jae    0x401364
  401337:	cmp    DWORD PTR ds:0x42a1ab,0x1e
  40133e:	jb     0x401364
  401344:	jmp    0x40135f
  401349:	push   0x8043
  40134e:	push   0x4a07
  401353:	push   DWORD PTR [ebp-0x24]
  401356:	push   DWORD PTR [ebp-0xc]
  401359:	call   DWORD PTR ds:0x42a2af
  40135f:	jmp    0x40131c
  401364:	mov    eax,DWORD PTR [ebp-0x18]
  401367:	xor    DWORD PTR ds:0x42a18f,0x63f7
  401371:	mov    DWORD PTR [ebp-0x98],eax
  401377:	mov    eax,DWORD PTR [ebp-0x2c]
  40137a:	sbb    DWORD PTR ds:0x42a18f,0x379e
  401384:	xor    eax,esi
  401386:	add    eax,edi
  401388:	mov    DWORD PTR [ebp-0x94],eax
  40138e:	or     DWORD PTR ds:0x42a16b,0x36f8
  401398:	lea    eax,[ebp-0x48]
  40139b:	mov    DWORD PTR [ebp-0x90],eax
  4013a1:	mov    eax,DWORD PTR [ebp-0xa0]
  4013a7:	inc    DWORD PTR ds:0x42a18b
  4013ad:	xor    eax,esi
  4013af:	sbb    DWORD PTR ds:0x42a18b,0x42a177
  4013b9:	add    eax,edi
  4013bb:	or     DWORD PTR ds:0x42a19b,0x42a15b
  4013c5:	mov    DWORD PTR [ebp-0xa0],eax
  4013cb:	sub    DWORD PTR ds:0x42a143,0x1d49
  4013d5:	lea    eax,[ebp-0xa0]
  4013db:	push   eax
  4013dc:	neg    eax
  4013de:	mov    eax,DWORD PTR [ebp+0xc]
  4013e1:	sub    DWORD PTR ds:0x42a17b,0x2c11
  4013eb:	xor    eax,esi
  4013ed:	add    eax,edi
  4013ef:	push   eax
  4013f0:	mov    eax,ds:0x42944f
  4013f5:	push   0x4293a5
  4013fa:	mov    DWORD PTR ds:0x42a157,0x524d
  401404:	push   DWORD PTR [eax]
  401406:	call   0x40a8fb
  40140b:	xor    edx,edx
  40140d:	add    edx,DWORD PTR ds:0x42a16f
  401413:	and    DWORD PTR ds:0x42a15f,edx
  401419:	mov    ebx,DWORD PTR [ebp-0x14]
  40141c:	mov    eax,DWORD PTR [ebp-0x18]
  40141f:	mov    DWORD PTR [ebp-0x58],eax
  401422:	mov    eax,ds:0x42a1d7
  401427:	mov    edx,DWORD PTR ds:0x42a21f
  40142d:	sub    edx,eax
  40142f:	sub    eax,DWORD PTR [eax+edx*1]
  401432:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  401439:	mov    eax,0xf89c85bb
  40143e:	mov    DWORD PTR [ebp-0x1c],eax
  401441:	xor    DWORD PTR ds:0x42a157,0x37ec
  40144b:	lea    ecx,[eax-0x2]
  40144e:	and    DWORD PTR ds:0x42a1b3,0x0
  401458:	jmp    0x40146a
  40145d:	mov    edx,DWORD PTR ds:0x42a1b3
  401463:	inc    edx
  401464:	mov    DWORD PTR ds:0x42a1b3,edx
  40146a:	cmp    DWORD PTR ds:0x42a1b3,0x18
  401471:	jae    0x4014be
  401477:	cmp    DWORD PTR ds:0x42a1b3,0x4
  40147e:	jge    0x4014be
  401484:	jmp    0x40149f
  401489:	push   DWORD PTR [ebp-0x18]
  40148c:	push   DWORD PTR [ebp-0x14]
  40148f:	push   0x42a1af
  401494:	push   0x249d
  401499:	call   DWORD PTR ds:0x42a2b3
  40149f:	cmp    DWORD PTR ds:0x42a1b3,0x3
  4014a6:	jne    0x4014b9
  4014ac:	mov    edx,DWORD PTR ds:0x42a1b3
  4014b2:	inc    edx
  4014b3:	mov    DWORD PTR ds:0x42a1b3,edx
  4014b9:	jmp    0x40145d
  4014be:	mov    DWORD PTR [ebp-0x28],ecx
  4014c1:	movzx  edx,WORD PTR ds:0x42a173
  4014c8:	sbb    DWORD PTR ds:0x42a157,edx
  4014ce:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  4014d5:	mov    DWORD PTR [ebp-0x8],eax
  4014d8:	mov    eax,DWORD PTR [ebp-0x10]
  4014db:	xor    eax,esi
  4014dd:	and    DWORD PTR ds:0x42a14f,0x0
  4014e7:	jmp    0x4014fb
  4014ec:	xor    edx,edx
  4014ee:	or     edx,DWORD PTR ds:0x42a14f
  4014f4:	inc    edx
  4014f5:	mov    DWORD PTR ds:0x42a14f,edx
  4014fb:	cmp    DWORD PTR ds:0x42a14f,0x18
  401502:	jae    0x401551
  401508:	cmp    DWORD PTR ds:0x42a14f,0x5
  40150f:	jb     0x401551
  401515:	jmp    0x401532
  40151a:	push   0x42a167
  40151f:	push   DWORD PTR [ebp-0xc]
  401522:	push   0x4290bb
  401527:	push   0x429032
  40152c:	call   DWORD PTR ds:0x42a2b7
  401532:	cmp    DWORD PTR ds:0x42a14f,0x4
  401539:	jne    0x40154c
  40153f:	mov    edx,DWORD PTR ds:0x42a14f
  401545:	inc    edx
  401546:	mov    DWORD PTR ds:0x42a14f,edx
  40154c:	jmp    0x4014ec
  401551:	mov    edx,0xffcd8d91
  401556:	or     DWORD PTR ds:0x42a137,0x42a15b
  401560:	sub    edx,eax
  401562:	not    eax
  401564:	mov    DWORD PTR [ebp-0xc],edx
  401567:	mov    DWORD PTR ds:0x42a19f,0x2809
  401571:	mov    DWORD PTR [ebp-0x18],0xf89c85be
  401578:	mov    DWORD PTR ds:0x42a13b,ecx
  40157e:	mov    eax,DWORD PTR [ebp-0x8]
  401581:	mov    DWORD PTR ds:0x42a193,0x7f63
  40158b:	mov    DWORD PTR [ebp-0x3c],ebx
  40158e:	mov    DWORD PTR ds:0x42a193,0x4784
  401598:	cmp    eax,ecx
  40159a:	mov    DWORD PTR ds:0x42a1d3,0x12a
  4015a4:	je     0x40185b
  4015aa:	and    eax,ecx
  4015ac:	mov    eax,DWORD PTR [ebp-0x10]
  4015af:	and    DWORD PTR ds:0x42a163,0x0
  4015b9:	jmp    0x4015cb
  4015be:	mov    ecx,DWORD PTR ds:0x42a163
  4015c4:	inc    ecx
  4015c5:	mov    DWORD PTR ds:0x42a163,ecx
  4015cb:	cmp    DWORD PTR ds:0x42a163,0x10
  4015d2:	jae    0x401614
  4015d8:	cmp    DWORD PTR ds:0x42a163,0x6
  4015df:	jbe    0x401614
  4015e5:	jmp    0x4015f5
  4015ea:	push   0x4c56
  4015ef:	call   DWORD PTR ds:0x42a2bf
  4015f5:	cmp    DWORD PTR ds:0x42a163,0x5
  4015fc:	jne    0x40160f
  401602:	mov    ecx,DWORD PTR ds:0x42a163
  401608:	inc    ecx
  401609:	mov    DWORD PTR ds:0x42a163,ecx
  40160f:	jmp    0x4015be
  401614:	mov    ecx,DWORD PTR [ebp-0x10]
  401617:	sbb    DWORD PTR ds:0x42a13f,0x6da3
  401621:	xor    eax,esi
  401623:	xor    ecx,esi
  401625:	or     DWORD PTR ds:0x42a193,0x42a197
  40162f:	lea    ecx,[eax+ecx*1+0x64e5de]
  401636:	xor    eax,DWORD PTR ds:0x42a1c7
  40163c:	mov    eax,DWORD PTR [ebp-0xc]
  40163f:	xor    edx,edx
  401641:	div    ecx
  401643:	sub    ecx,eax
  401645:	mov    eax,DWORD PTR [ebp-0x8]
  401648:	mov    ecx,DWORD PTR [ebp-0x10]
  40164b:	sbb    DWORD PTR ds:0x42a18f,0x52cd
  401655:	xor    eax,esi
  401657:	xor    ecx,esi
  401659:	sub    eax,ecx
  40165b:	cmp    edx,eax
  40165d:	mov    DWORD PTR ds:0x42a15b,0x4928
  401667:	jne    0x401805
  40166d:	add    DWORD PTR ds:0x42a1ab,edi
  401673:	mov    eax,DWORD PTR [ebp-0xc]
  401676:	add    DWORD PTR ds:0x42a17b,ebx
  40167c:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  401683:	mov    eax,DWORD PTR [ebp-0x28]
  401686:	xor    DWORD PTR ds:0x42a16f,0x3725
  401690:	mov    ecx,DWORD PTR [ebp-0x18]
  401693:	add    DWORD PTR ds:0x42a13f,0x6412
  40169d:	xor    eax,esi
  40169f:	xor    ecx,esi
  4016a1:	add    eax,edi
  4016a3:	xor    DWORD PTR ds:0x42a15f,0x42a18b
  4016ad:	add    ecx,edi
  4016af:	mov    BYTE PTR [ebp-0x21],dl
  4016b2:	cmp    eax,ecx
  4016b4:	jae    0x4017dd
  4016ba:	lea    ecx,[eax-0x3272ef]
  4016c0:	mov    DWORD PTR ds:0x42a183,0x1c
  4016ca:	cmp    DWORD PTR ds:0x42a183,0x0
  4016d1:	je     0x401709
  4016d7:	cmp    DWORD PTR ds:0x42a183,0x23
  4016de:	jg     0x401709
  4016e4:	jmp    0x4016f7
  4016e9:	push   DWORD PTR [ebp-0x20]
  4016ec:	push   0x5db4
  4016f1:	call   DWORD PTR ds:0x42a2c3
  4016f7:	mov    edx,DWORD PTR ds:0x42a183
  4016fd:	dec    edx
  4016fe:	mov    DWORD PTR ds:0x42a183,edx
  401704:	jmp    0x4016ca
  401709:	mov    DWORD PTR [ebp-0x14],ecx
  40170c:	xor    DWORD PTR ds:0x42a1af,ecx
  401712:	mov    edx,DWORD PTR [ebp-0x14]
  401715:	xor    edx,esi
  401717:	add    edx,0x7f55d8fb
  40171d:	mov    DWORD PTR ds:0x42a14b,0x52dc
  401727:	lea    ecx,[ebp+eax*4-0xb4]
  40172e:	mov    DWORD PTR ds:0x42a16b,0x1786
  401738:	mov    DWORD PTR [ecx],edx
  40173a:	not    edx
  40173c:	mov    edx,DWORD PTR [ecx]
  40173e:	mov    DWORD PTR ds:0x42a13f,0x42a6
  401748:	cmp    edx,0x244ecb9c
  40174e:	mov    DWORD PTR ds:0x42a187,0x6943
  401758:	jbe    0x40177d
  40175e:	add    DWORD PTR ds:0x42a147,0x3ac8
  401768:	add    DWORD PTR [ecx],0x405fcdd
  40176e:	mov    DWORD PTR ds:0x42a17b,0x6763
  401778:	jmp    0x40178d
  40177d:	add    DWORD PTR ds:0x42a12b,0x42a18b
  401787:	add    DWORD PTR [ecx],0xfdaf4323
  40178d:	sub    ecx,0x38f7
  401793:	mov    ecx,DWORD PTR [ebp-0x18]
  401796:	xor    DWORD PTR ds:0x42a1a3,0x8c7
  4017a0:	xor    ecx,esi
  4017a2:	dec    DWORD PTR ds:0x42a137
  4017a8:	inc    eax
  4017a9:	sbb    DWORD PTR ds:0x42a1ab,0x42a1bb
  4017b3:	inc    DWORD PTR [ebp-0x14]
  4017b6:	add    DWORD PTR ds:0x42a1cf,0x42a16f
  4017c0:	add    ecx,edi
  4017c2:	cmp    eax,ecx
  4017c4:	mov    DWORD PTR ds:0x42a1af,0x74e1
  4017ce:	jb     0x40170c
  4017d4:	not    DWORD PTR ds:0x42a18b
  4017da:	mov    dl,BYTE PTR [ebp-0x21]
  4017dd:	xor    DWORD PTR ds:0x42a12f,edi
  4017e3:	mov    eax,DWORD PTR [ebp-0x34]
  4017e6:	xor    al,0xa8
  4017e8:	mov    cl,0x11
  4017ea:	sub    cl,al
  4017ec:	add    dl,cl
  4017ee:	mov    ecx,DWORD PTR [ebp-0x1c]
  4017f1:	xor    cl,0xa8
  4017f4:	sub    cl,0x11
  4017f7:	ror    dl,cl
  4017f9:	xor    eax,eax
  4017fb:	mov    eax,DWORD PTR [ebp-0xc]
  4017fe:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  401805:	mov    eax,DWORD PTR [ebp-0xc]
  401808:	mov    ecx,DWORD PTR [ebp-0x28]
  40180b:	sub    eax,edi
  40180d:	xor    eax,esi
  40180f:	cmp    eax,ecx
  401811:	jne    0x40183b
  401817:	mov    eax,DWORD PTR [ebp-0x8]
  40181a:	mov    ecx,DWORD PTR [ebp-0x10]
  40181d:	xor    eax,esi
  40181f:	xor    ecx,esi
  401821:	sub    eax,ecx
  401823:	sub    eax,edi
  401825:	xor    eax,esi
  401827:	mov    DWORD PTR [ebp-0x8],eax
  40182a:	mov    eax,DWORD PTR [ebp-0x10]
  40182d:	xor    eax,esi
  40182f:	mov    ecx,0xffcd8d91
  401834:	sub    ecx,eax
  401836:	jmp    0x40184a
  40183b:	mov    eax,DWORD PTR [ebp-0x10]
  40183e:	xor    eax,esi
  401840:	mov    ecx,0xffcd8d11
  401845:	sub    ecx,eax
  401847:	add    ecx,DWORD PTR [ebp-0xc]
  40184a:	mov    DWORD PTR [ebp-0xc],ecx
  40184d:	mov    eax,DWORD PTR [ebp-0x8]
  401850:	cmp    eax,0xf89c85b9
  401855:	jne    0x4015aa
  40185b:	mov    DWORD PTR [ebp-0x34],0x9
  401862:	mov    ecx,DWORD PTR [ebp+0x8]
  401865:	xor    ecx,esi
  401867:	add    ecx,edi
  401869:	jmp    0x40a889
  40186e:	lea    eax,[ecx+ebx*1]
  401871:	mov    DWORD PTR [ebp-0x2c],eax
  401874:	mov    eax,DWORD PTR [ebp-0x58]
  401877:	sub    eax,ecx
  401879:	mov    DWORD PTR [ebp-0x1c],eax
  40187c:	mov    eax,DWORD PTR [ebp-0x1c]
  40187f:	mov    DWORD PTR [ebp-0x14],eax
  401882:	mov    eax,DWORD PTR [ebp-0x2c]
  401885:	mov    DWORD PTR [ebp-0x38],0xf89c85b9
  40188c:	mov    DWORD PTR [ebp-0x54],eax
  40188f:	mov    DWORD PTR [ebp-0x20],0xf89c85ba
  401896:	mov    eax,DWORD PTR [ebp-0x38]
  401899:	xor    eax,esi
  40189b:	add    eax,edi
  40189d:	mov    DWORD PTR [ebp-0x10],eax
  4018a0:	mov    eax,DWORD PTR [ebp-0x38]
  4018a3:	xor    eax,esi
  4018a5:	add    eax,edi
  4018a7:	mov    DWORD PTR [ebp-0x8],eax
  4018aa:	mov    DWORD PTR [ebp-0x2c],0xf89c8599
  4018b1:	mov    DWORD PTR [ebp-0x44],0xf89c85b0
  4018b8:	mov    eax,DWORD PTR [ebp-0x38]
  4018bb:	mov    edx,DWORD PTR [ebp-0x14]
  4018be:	xor    eax,esi
  4018c0:	add    eax,edi
  4018c2:	cmp    edx,eax
  4018c4:	je     0x40a87d
  4018ca:	mov    eax,DWORD PTR [ebp-0x20]
  4018cd:	xor    eax,esi
  4018cf:	mov    edx,0xffcd8d11
  4018d4:	sub    edx,eax
  4018d6:	add    edx,DWORD PTR [ebp-0x14]
  4018d9:	mov    eax,DWORD PTR [ebp-0x20]
  4018dc:	mov    ebx,DWORD PTR [ebp-0x10]
  4018df:	xor    eax,esi
  4018e1:	add    eax,edi
  4018e3:	imul   eax,ebx
  4018e6:	cmp    eax,edx
  4018e8:	ja     0x40a87a
  4018ee:	mov    edx,DWORD PTR [ebp-0x10]
  4018f1:	mov    eax,DWORD PTR [ebp-0x14]
  4018f4:	mov    ebx,DWORD PTR [ebp-0x2c]
  4018f7:	sub    eax,edx
  4018f9:	xor    ebx,esi
  4018fb:	xor    edx,edx
  4018fd:	add    ebx,edi
  4018ff:	div    ebx
  401901:	mov    DWORD PTR [ebp-0x8],eax
  401904:	mov    eax,DWORD PTR [ebp-0x44]
  401907:	mov    edx,DWORD PTR [ebp-0x8]
  40190a:	xor    eax,esi
  40190c:	add    eax,edi
  40190e:	cmp    edx,eax
  401910:	jbe    0x401920
  401916:	mov    eax,DWORD PTR [ebp-0x44]
  401919:	xor    eax,esi
  40191b:	add    eax,edi
  40191d:	mov    DWORD PTR [ebp-0x8],eax
  401920:	mov    eax,DWORD PTR [ebp-0x2c]
  401923:	mov    edx,DWORD PTR [ebp-0x8]
  401926:	xor    eax,esi
  401928:	add    eax,edi
  40192a:	imul   eax,edx
  40192d:	mov    DWORD PTR [ebp-0x8],eax
  401930:	mov    eax,DWORD PTR [ebp-0x38]
  401933:	mov    edx,DWORD PTR [ebp-0x8]
  401936:	xor    eax,esi
  401938:	add    eax,edi
  40193a:	cmp    edx,eax
  40193c:	je     0x40a863
  401942:	mov    eax,DWORD PTR [ebp-0x8]
  401945:	mov    DWORD PTR [ebp-0x18],eax
  401948:	mov    eax,DWORD PTR [ebp-0x10]
  40194b:	add    eax,DWORD PTR [ebp-0x54]
  40194e:	mov    DWORD PTR [ebp-0x1c],0xf89c85b9
  401955:	mov    DWORD PTR [ebp-0x8],eax
  401958:	mov    eax,0xf89c85ba
  40195d:	mov    DWORD PTR [ebp-0x28],eax
  401960:	mov    DWORD PTR [ebp-0x5c],0xf89c85bb
  401967:	mov    DWORD PTR [ebp-0x40],0xf89c85bc
  40196e:	mov    DWORD PTR [ebp-0x30],eax
  401971:	mov    eax,DWORD PTR [ebp-0x1c]
  401974:	xor    eax,esi
  401976:	add    eax,edi
  401978:	jmp    0x40613f
  40197d:	mov    DWORD PTR [ebp-0x4c],0xf89c85b4
  401984:	mov    DWORD PTR [ebp-0x50],0xf89c858f
  40198b:	mov    eax,DWORD PTR [ebp-0x30]
  40198e:	mov    edx,DWORD PTR [ebp-0xc]
  401991:	xor    eax,esi
  401993:	add    eax,edi
  401995:	imul   eax,edx
  401998:	mov    edx,DWORD PTR [ebp-0x8]
  40199b:	mov    al,BYTE PTR [eax+edx*1]
  40199e:	mov    BYTE PTR [ebp-0x1],al
  4019a1:	mov    eax,DWORD PTR [ebp-0x30]
  4019a4:	mov    edx,DWORD PTR [ebp-0xc]
  4019a7:	xor    eax,esi
  4019a9:	add    eax,edi
  4019ab:	imul   eax,edx
  4019ae:	mov    edx,DWORD PTR [ebp-0x5c]
  4019b1:	xor    edx,esi
  4019b3:	add    eax,edx
  4019b5:	mov    edx,DWORD PTR [ebp-0x8]
  4019b8:	movzx  eax,BYTE PTR [eax+edx*1+0x3272ef]
  4019c0:	mov    edx,DWORD PTR [ebp-0x4c]
  4019c3:	xor    edx,esi
  4019c5:	lea    eax,[edx+eax*1+0x3272ef]
  4019cc:	movzx  edx,BYTE PTR [ebp-0x1]
  4019d0:	xor    edx,eax
  4019d2:	mov    BYTE PTR [ebp-0x1],dl
  4019d5:	mov    al,BYTE PTR [ebp-0x1]
  4019d8:	mov    edx,DWORD PTR [ebp-0x30]
  4019db:	mov    ebx,DWORD PTR [ebp-0xc]
  4019de:	xor    edx,esi
  4019e0:	add    edx,edi
  4019e2:	jmp    0x403d52
  4019e7:	and    ebx,DWORD PTR [eax-0x16]
  4019ea:	daa    
  4019eb:	lea    eax,[edi+0x3005549b]
  4019f1:	repz shl DWORD PTR [edi],1
  4019f4:	scas   al,BYTE PTR es:[edi]
  4019f5:	sbb    ch,BYTE PTR [edi+0x7a]
  4019f8:	jp     0x401a74
  4019fa:	jp     0x401a2b
  4019fc:	pop    edi
  4019fd:	jp     0x401a79
  4019ff:	and    DWORD PTR [eax],ebp
  401a01:	daa    
  401a02:	cmp    eax,0x2f1b3125
  401a07:	jno    0x401a41
  401a09:	jne    0x401a81
  401a0b:	shl    BYTE PTR [esi+0x6a],cl
  401a0e:	push   0x69
  401a10:	inc    edx
  401a11:	rcr    eax,1
  401a13:	std    
  401a14:	ins    BYTE PTR es:[edi],dx
  401a15:	push   esp
  401a16:	imul   edi,DWORD PTR [ebp+0x5b],0xffffffac
  401a1a:	jl     0x401a85
  401a1c:	gs iret 
  401a1e:	pop    ecx
  401a1f:	dec    edx
  401a20:	cmp    al,0x88
  401a22:	cli    
  401a23:	xchg   edi,eax
  401a24:	xchg   BYTE PTR [edi+0x49],ah
  401a27:	jg     0x401a70
  401a29:	mov    WORD PTR [esi+0x3bb2bc7f],?
  401a2f:	sub    bh,bh
  401a31:	jbe    0x401a0b
  401a33:	cli    
  401a34:	arpl   WORD PTR [edi+0x1e],di
  401a37:	jmp    0xe9fae381
  401a3c:	xchg   edi,eax
  401a3d:	and    ebx,esi
  401a3f:	mov    esi,DWORD PTR ds:0x8aab650f
  401a45:	rol    BYTE PTR [edi],1
  401a47:	imul   ebx,ecx,0xfa0ee010
  401a4d:	ss and al,0x54
  401a50:	or     BYTE PTR [esi],dh
  401a52:	imul   esi,DWORD PTR [ebp+eax*8-0x51],0x23
  401a57:	pop    ebp
  401a58:	adc    DWORD PTR [esi+0x2b55f5ff],esi
  401a5e:	add    BYTE PTR [edx-0x2c],0x5b
  401a62:	add    eax,0xbd84fa1a
  401a67:	jae    0x401a42
  401a69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a6a:	pop    edi
  401a6b:	mov    edi,DWORD PTR [ebp+0x4d922017]
  401a71:	add    ebx,DWORD PTR [esi+0xb838238]
  401a77:	fisubr DWORD PTR [ecx]
  401a79:	bound  ecx,QWORD PTR [ecx-0xc9fbcc0]
  401a7f:	iret   
  401a80:	mov    dh,BYTE PTR ds:0xc8c7cc95
  401a86:	xchg   esp,eax
  401a87:	ins    DWORD PTR es:[edi],dx
  401a88:	lock push ecx
  401a8a:	bound  ecx,QWORD PTR [eax+0x8]
  401a8d:	add    eax,DWORD PTR ds:[esi+0x13]
  401a91:	test   eax,0x4cb7ca4b
  401a96:	fcom   QWORD PTR [eax]
  401a98:	data16 stc 
  401a9a:	bound  esp,QWORD PTR [esi-0x4f]
  401a9d:	add    eax,0x5204bf74
  401aa2:	pop    ds
  401aa3:	jae    0x401a70
  401aa5:	addr16 sbb dh,dl
  401aa8:	into   
  401aa9:	fcom   QWORD PTR [edi-0x37a39b5e]
  401aaf:	jne    0x401a35
  401ab1:	pop    edx
  401ab2:	dec    edi
  401ab3:	inc    BYTE PTR [edx+0x25]
  401ab6:	push   edi
  401ab7:	sahf   
  401ab8:	dec    esp
  401ab9:	add    edx,DWORD PTR [esi]
  401abb:	je     0x401ad0
  401abd:	pop    esp
  401abe:	cdq    
  401abf:	lods   eax,DWORD PTR ds:[esi]
  401ac0:	pop    esi
  401ac1:	xor    eax,0x7e8b6b53
  401ac6:	mov    BYTE PTR [edx],dh
  401ac8:	out    0xd8,al
  401aca:	outs   dx,BYTE PTR ds:[esi]
  401acb:	cmp    ebp,ebp
  401acd:	jmp    0x8f30c6c4
  401ad2:	sub    edx,edx
  401ad4:	sub    eax,0xc3e74d80
  401ad9:	jl     0x401ac8
  401adb:	lods   al,BYTE PTR ds:[esi]
  401adc:	call   edx
  401ade:	pop    esp
  401adf:	rcl    BYTE PTR [ecx],cl
  401ae1:	lock jns 0x401b2a
  401ae4:	xor    edx,DWORD PTR [edi]
  401ae6:	not    DWORD PTR [ebp+0x17ff63ee]
  401aec:	rol    BYTE PTR [ebx+0x27],1
  401aef:	mov    edi,0xc95754c0
  401af4:	sti    
  401af5:	add    DWORD PTR [esi],esp
  401af7:	js     0x401a89
  401af9:	mov    al,ds:0xe3a397ba
  401afe:	mov    ch,0xb4
  401b00:	cmp    al,BYTE PTR [eax]
  401b02:	(bad)  
  401b03:	mov    ch,0x37
  401b05:	bound  esp,QWORD PTR [ecx-0x7b]
  401b08:	xchg   ecx,eax
  401b09:	push   esi
  401b0a:	jb     0x401b80
  401b0c:	addr16 mov esp,0x1c3e19e1
  401b12:	loope  0x401ac9
  401b14:	fstp   DWORD PTR [edi]
  401b16:	aas    
  401b17:	sbb    al,0xd7
  401b19:	icebp  
  401b1a:	jmp    0x336:0x38c3e6b5
  401b21:	fsubp  st(6),st
  401b23:	in     eax,0x98
  401b25:	sti    
  401b26:	fidivr DWORD PTR [eax]
  401b28:	jbe    0x401b9e
  401b2a:	cmc    
  401b2b:	sub    al,0x7f
  401b2d:	adc    eax,0xe783969f
  401b32:	cmp    DWORD PTR [ecx+0x77],0xffffff81
  401b36:	mov    bl,BYTE PTR [eax]
  401b38:	je     0x401b43
  401b3a:	aas    
  401b3b:	and    BYTE PTR [ecx],bl
  401b3d:	ins    DWORD PTR es:[edi],dx
  401b3e:	sbb    eax,0x64b48a07
  401b43:	aam    0x4
  401b45:	and    ecx,DWORD PTR [edi+0x68e36098]
  401b4b:	pop    esi
  401b4c:	or     BYTE PTR fs:[ebx+0x6bdd1a33],ch
  401b53:	cwde   
  401b54:	or     DWORD PTR [esi+ebp*2],ecx
  401b57:	sti    
  401b58:	sbb    DWORD PTR [ebp-0x2d],ebp
  401b5b:	adc    BYTE PTR [ecx+0xd652191],dh
  401b61:	rcl    eax,1
  401b63:	sub    eax,DWORD PTR [esi+0x48d640cc]
  401b69:	pop    edx
  401b6a:	pop    eax
  401b6b:	lock dec ecx
  401b6d:	test   eax,0x2d8edb0
  401b72:	mov    cl,0x79
  401b74:	inc    esp
  401b75:	fisubr DWORD PTR [edx-0x5fc0e2e6]
  401b7b:	or     al,BYTE PTR [edx-0x79a938ba]
  401b81:	mov    ah,0x8
  401b83:	mov    ebx,0xd875d8c7
  401b88:	jge    0x401c07
  401b8a:	fnstcw WORD PTR [esp+edi*4+0x12]
  401b8e:	jae    0x401bbf
  401b90:	and    eax,0x9ca919eb
  401b95:	sub    BYTE PTR [edi],dl
  401b97:	xor    DWORD PTR [ebx],esi
  401b99:	xor    esi,DWORD PTR [edi]
  401b9b:	cmc    
  401b9c:	ror    BYTE PTR [edi+0x6f],1
  401b9f:	into   
  401ba0:	or     eax,0xe6c67cd2
  401ba5:	xor    bl,BYTE PTR [edx]
  401ba7:	xchg   edx,eax
  401ba8:	ret    0x730c
  401bab:	sti    
  401bac:	gs cmp al,0xec
  401baf:	inc    esi
  401bb0:	dec    ecx
  401bb1:	loop   0x401bc3
  401bb3:	adc    BYTE PTR [edx+esi*2+0x3ab37f2d],cl
  401bba:	in     al,dx
  401bbb:	mov    edx,0x1df50574
  401bc0:	pop    esi
  401bc1:	pusha  
  401bc2:	mov    ch,0x93
  401bc4:	lods   al,BYTE PTR ds:[esi]
  401bc5:	das    
  401bc6:	sbb    dl,dh
  401bc8:	test   DWORD PTR [eax],edx
  401bca:	mov    ds:0x838f8ca5,al
  401bcf:	jb     0x401b53
  401bd1:	or     eax,0x7518d5b3
  401bd6:	in     al,0x15
  401bd8:	cli    
  401bd9:	adc    eax,DWORD PTR [edx-0x750ab365]
  401bdf:	jmp    0xe07a4354
  401be4:	xchg   esp,eax
  401be5:	lods   al,BYTE PTR ds:[esi]
  401be6:	loopne 0x401bb3
  401be8:	sahf   
  401be9:	daa    
  401bea:	dec    esi
  401beb:	call   0x60cd:0x38cea898
  401bf2:	cli    
  401bf3:	ins    DWORD PTR es:[edi],dx
  401bf4:	fiadd  DWORD PTR [ebp+eiz*1+0x5b0f0dd8]
  401bfb:	inc    edi
  401bfc:	mov    bh,0xa4
  401bfe:	xor    eax,0x945b5693
  401c03:	or     BYTE PTR [ebp+0x76],bh
  401c06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c07:	in     eax,0xb4
  401c09:	(bad)  
  401c0a:	pop    ebp
  401c0b:	aaa    
  401c0c:	push   eax
  401c0d:	retf   0x15f4
  401c10:	xor    BYTE PTR [ebx+0x4c3bef15],dh
  401c16:	cs push ecx
  401c18:	xlat   BYTE PTR ds:[ebx]
  401c19:	mov    dl,0x65
  401c1b:	ins    BYTE PTR es:[edi],dx
  401c1c:	ds scas al,BYTE PTR es:[edi]
  401c1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c1f:	inc    edx
  401c20:	push   edi
  401c21:	inc    ebp
  401c22:	sbb    cl,BYTE PTR [ecx+0x7]
  401c25:	and    al,0x4e
  401c27:	sub    eax,0x224bc4b0
  401c2c:	lods   eax,DWORD PTR ds:[esi]
  401c2d:	fs mov ch,0x92
  401c30:	sahf   
  401c31:	mov    eax,0x1a794633
  401c36:	in     eax,dx
  401c37:	stos   DWORD PTR es:[edi],eax
  401c38:	arpl   WORD PTR [edx],ax
  401c3a:	mov    ecx,0x106af6b5
  401c3f:	mov    ecx,0x8c87ea79
  401c44:	mov    ecx,0x339d59c1
  401c49:	enter  0xfa18,0x3c
  401c4d:	push   edx
  401c4e:	arpl   WORD PTR ds:0x648f5d6e,si
  401c54:	loopne 0x401c3b
  401c56:	loopne 0x401c02
  401c58:	lods   eax,DWORD PTR ds:[esi]
  401c59:	popa   
  401c5a:	dec    ecx
  401c5b:	sbb    al,BYTE PTR [eax]
  401c5d:	js     0x401c1b
  401c5f:	push   cs
  401c60:	pop    ds
  401c61:	push   esp
  401c62:	push   0xfffffff0
  401c64:	mov    ds:0x49c7259e,al
  401c69:	pusha  
  401c6a:	push   ss
  401c6b:	inc    ebx
  401c6c:	in     al,0x1d
  401c6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c6f:	xor    BYTE PTR [ecx],dh
  401c71:	int    0x6a
  401c73:	inc    ebx
  401c74:	xchg   esp,eax
  401c75:	int3   
  401c76:	cdq    
  401c77:	and    BYTE PTR [ebx+0x73],bh
  401c7a:	jecxz  0x401c07
  401c7c:	push   ebp
  401c7d:	xchg   BYTE PTR [edx],cl
  401c7f:	cwde   
  401c80:	stos   DWORD PTR es:[edi],eax
  401c81:	mov    al,ds:0xaf4710c9
  401c86:	mov    esi,0x4e609624
  401c8b:	out    dx,eax
  401c8c:	sub    ah,BYTE PTR [ebx]
  401c8e:	jno    0x401cee
  401c90:	push   edx
  401c91:	push   di
  401c93:	std    
  401c94:	lahf   
  401c95:	cmp    ecx,DWORD PTR ds:0x7ecb89cf
  401c9b:	xchg   esp,eax
  401c9c:	int    0x6a
  401c9e:	fwait
  401c9f:	push   esi
  401ca0:	mov    bl,0x21
  401ca2:	ins    DWORD PTR es:[edi],dx
  401ca3:	loope  0x401c85
  401ca5:	push   ds
  401ca6:	icebp  
  401ca7:	std    
  401ca8:	stc    
  401ca9:	loope  0x401c6c
  401cab:	icebp  
  401cac:	xor    eax,0xca17efb1
  401cb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401cb2:	mov    esi,0x80c750c1
  401cb7:	shl    BYTE PTR [ebx+0x72],0xa4
  401cbb:	mov    bl,0xb7
  401cbd:	mov    cs,WORD PTR [eax+ecx*8]
  401cc0:	jmp    DWORD PTR [ecx-0x6a481397]
  401cc6:	jmp    0x401d1c
  401cc8:	dec    esp
  401cc9:	sub    eax,DWORD PTR [edx+0x5a]
  401ccc:	ret    
  401ccd:	pusha  
  401cce:	jmp    0x401c87
  401cd0:	add    eax,0xdb325e34
  401cd5:	pop    ebx
  401cd6:	fwait
  401cd7:	dec    BYTE PTR [eax+0x5478542e]
  401cdd:	js     0x401d5e
  401cdf:	gs in  eax,0x2e
  401ce2:	mov    dl,dh
  401ce4:	push   ebx
  401ce5:	outs   dx,BYTE PTR ds:[esi]
  401ce6:	and    al,0xdd
  401ce8:	xor    eax,0x9b8980f3
  401ced:	sti    
  401cee:	pushf  
  401cef:	mov    eax,ds:0x8c8b167
  401cf4:	mov    eax,ds:0x1151d1e6
  401cf9:	add    BYTE PTR [edx+0x40],bh
  401cfc:	inc    eax
  401cfd:	shl    esp,cl
  401cff:	xchg   ecx,eax
  401d00:	jmp    0xfd61:0xe555e08b
  401d07:	sbb    al,BYTE PTR [edi-0x44d719a4]
  401d0d:	push   es
  401d0e:	gs icebp 
  401d10:	cmp    BYTE PTR ds:0xc71659e0,ch
  401d16:	sti    
  401d17:	cdq    
  401d18:	nop
  401d19:	sub    esi,DWORD PTR [ebx+0x4d]
  401d1c:	cli    
  401d1d:	loopne 0x401d4f
  401d1f:	frstor [ecx+0x3]
  401d22:	ret    
  401d23:	mov    ah,0x37
  401d25:	enter  0x28de,0x25
  401d29:	cmp    eax,DWORD PTR [edi-0x4b]
  401d2c:	es jmp 0x9cbbda2b
  401d32:	mov    ss,WORD PTR [edx]
  401d34:	shl    edx,cl
  401d36:	popf   
  401d37:	jbe    0x401d92
  401d39:	sbb    DWORD PTR [edx],ebp
  401d3b:	lock xor eax,0x36401f7b
  401d41:	push   es
  401d42:	mov    eax,ds:0x2fed89d9
  401d47:	into   
  401d48:	xor    BYTE PTR ds:0x96603127,al
  401d4e:	icebp  
  401d4f:	xor    eax,0xa42f489
  401d54:	rcr    DWORD PTR [edx+0x2566ded5],1
  401d5a:	jl     0x401dc1
  401d5c:	mov    ebp,0x35e67c26
  401d61:	out    dx,al
  401d62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d63:	std    
  401d64:	pop    esi
  401d65:	fs xchg ebp,eax
  401d67:	mov    ds:0xfd959661,al
  401d6c:	loopne 0x401d61
  401d6e:	xlat   BYTE PTR ds:[ebx]
  401d6f:	sub    ch,BYTE PTR [ebx-0x2dd10194]
  401d75:	adc    al,0x7f
  401d77:	pushf  
  401d78:	pop    edx
  401d79:	in     eax,0xb7
  401d7b:	bound  esi,QWORD PTR [esi+0x338c1186]
  401d81:	lods   eax,DWORD PTR ds:[esi]
  401d82:	push   ds
  401d83:	fdiv   QWORD PTR [ebx+0x64]
  401d86:	sub    cl,cl
  401d88:	xor    eax,esp
  401d8a:	pop    ebx
  401d8b:	psubb  mm7,QWORD PTR [esi+0x49]
  401d8f:	scas   al,BYTE PTR es:[edi]
  401d90:	ss cmc 
  401d92:	dec    eax
  401d93:	lea    edi,[edi+0x2b]
  401d96:	pandn  mm7,QWORD PTR [edi+0x73]
  401d9a:	dec    edi
  401d9b:	xor    eax,0xf8204f9a
  401da0:	xor    eax,0xcff709de
  401da5:	add    DWORD PTR [esp+ecx*2-0x35055fb5],0x23f5e94b
  401db0:	das    
  401db1:	dec    edx
  401db2:	jmp    FWORD PTR [ebx+0x1dba5b2b]
  401db8:	test   DWORD PTR [edx+0x17],esi
  401dbb:	mov    ds,WORD PTR ss:[ebx-0x6ea077c8]
  401dc2:	inc    esi
  401dc3:	mov    esp,eax
  401dc5:	test   DWORD PTR [ebx+0x22bc10ea],esi
  401dcb:	aaa    
  401dcc:	retf   
  401dcd:	loope  0x401dca
  401dcf:	push   eax
  401dd0:	(bad)  
  401dd1:	test   al,0x22
  401dd3:	aam    0x52
  401dd5:	cmp    dh,BYTE PTR [edx]
  401dd7:	scas   eax,DWORD PTR es:[edi]
  401dd8:	push   cs
  401dd9:	aaa    
  401dda:	lods   eax,DWORD PTR ds:[esi]
  401ddb:	push   ebp
  401ddc:	fsubr  QWORD PTR [eax+0x5d]
  401ddf:	(bad)  
  401de1:	pop    es
  401de2:	clc    
  401de3:	jnp    0x401e3f
  401de5:	in     eax,dx
  401de6:	aaa    
  401de7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401de8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401de9:	pop    ecx
  401dea:	rcl    BYTE PTR [ecx],0xb7
  401ded:	jp     0x401d8e
  401def:	xlat   BYTE PTR ds:[ebx]
  401df0:	aam    0x69
  401df2:	out    dx,al
  401df3:	pop    ds
  401df4:	(bad)  
  401df5:	cmp    DWORD PTR [ecx+0x7242f95b],esp
  401dfb:	shr    BYTE PTR [ecx+0x30b3489a],cl
  401e01:	retf   0x2165
  401e04:	outs   dx,DWORD PTR ds:[esi]
  401e05:	xchg   esp,eax
  401e06:	adc    eax,0xa977c5f
  401e0b:	or     DWORD PTR [ecx],eax
  401e0d:	mov    dl,0x67
  401e0f:	or     eax,DWORD PTR [esp+edx*2+0x3c943ecd]
  401e16:	mov    al,ds:0x733116fb
  401e1b:	popf   
  401e1c:	sub    DWORD PTR [eax-0x1c],ebx
  401e1f:	sub    al,0xe
  401e21:	(bad)
  401e25:	mov    ch,0xd2
  401e27:	pop    eax
  401e28:	or     DWORD PTR [ebx+0x5c],ecx
  401e2b:	adc    DWORD PTR [ecx+0x79f52bc2],eax
  401e31:	cdq    
  401e32:	aaa    
  401e33:	bound  edx,QWORD PTR [ebx+ebx*4]
  401e36:	adc    ebx,ebp
  401e38:	mov    edx,0xaac4e3a5
  401e3d:	xor    edx,ecx
  401e3f:	(bad)  
  401e40:	fs jmp 0x6159:0xdbbde0e1
  401e48:	xor    DWORD PTR [edi+0x7a],ecx
  401e4b:	cmp    DWORD PTR [edi+0x56c75dc8],edx
  401e51:	or     DWORD PTR [ecx],edx
  401e53:	xor    edi,edi
  401e55:	inc    BYTE PTR [eax+0x27b9b292]
  401e5b:	adc    DWORD PTR [edi-0x1c],ecx
  401e5e:	xchg   ebp,eax
  401e5f:	dec    ecx
  401e60:	push   ebp
  401e61:	mov    cl,0x4b
  401e63:	jne    0x401e1c
  401e65:	ret    
  401e66:	cmp    al,0xac
  401e68:	mov    ds:0x1f654d4d,al
  401e6d:	sbb    ah,BYTE PTR [edx]
  401e6f:	out    dx,eax
  401e70:	add    ebx,DWORD PTR [edx-0x30]
  401e73:	push   es
  401e74:	mov    al,ds:0x7f45c80
  401e79:	xchg   edi,eax
  401e7a:	add    eax,0x1b4eb843
  401e7f:	sti    
  401e80:	cmp    BYTE PTR [esp+eiz*2-0x7950a1d6],bh
  401e87:	sahf   
  401e88:	xchg   ecx,eax
  401e89:	retf   0x2015
  401e8c:	pop    es
  401e8d:	or     ch,BYTE PTR [ebp+0x62edd4aa]
  401e93:	adc    cl,BYTE PTR [esp+esi*2+0x4fd4d6f5]
  401e9a:	fld    TBYTE PTR [ebx-0x46a424ac]
  401ea0:	add    bl,BYTE PTR [esi+0x1d]
  401ea3:	xchg   BYTE PTR ds:0xfc57b23e,cl
  401ea9:	or     ecx,DWORD PTR [ebx-0x48]
  401eac:	call   0x180b:0xf2c2bec1
  401eb3:	jb     0x401e7a
  401eb5:	cmp    bl,BYTE PTR [eax-0x788ead8c]
  401ebb:	enter  0x1df6,0x9e
  401ebf:	call   0x5472:0x443522e7
  401ec6:	ds pop ss
  401ec8:	leave  
  401ec9:	xor    esi,DWORD PTR [edx]
  401ecb:	ss or  eax,0xa0d80982
  401ed1:	adc    bl,BYTE PTR [ebx+0x6a]
  401ed4:	push   ecx
  401ed5:	(bad)  [edx+0x61c46f06]
  401edb:	mov    edi,0x9a4bb85e
  401ee0:	sbb    eax,0x15e4fc3e
  401ee5:	or     BYTE PTR [ebp+0x4a2ed62d],0x52
  401eec:	aas    
  401eed:	dec    edi
  401eee:	(bad)  
  401eef:	loopne 0x401eff
  401ef1:	jns    0x401ed1
  401ef3:	mov    eax,0x3f7b4d99
  401ef8:	adc    al,0xf3
  401efa:	inc    eax
  401efb:	clc    
  401efc:	lock scas al,BYTE PTR es:[edi]
  401efe:	call   0xa06:0x896fab15
  401f05:	jmp    0x401ef6
  401f07:	push   cs
  401f08:	mul    BYTE PTR [edx+esi*2+0x78eb310a]
  401f0f:	mov    ds,esp
  401f11:	sbb    al,0x8e
  401f13:	add    eax,0xee0e4ec1
  401f18:	pop    ss
  401f19:	aas    
  401f1a:	push   edi
  401f1b:	jg     0x401ea4
  401f1d:	inc    ecx
  401f1e:	out    dx,eax
  401f1f:	add    BYTE PTR [esi-0x51],0xdc
  401f23:	test   DWORD PTR [edx-0x41],edx
  401f26:	jg     0x401f04
  401f28:	inc    ah
  401f2a:	jecxz  0x401f1c
  401f2c:	rol    DWORD PTR [ebp-0x2667ad9],cl
  401f32:	sbb    al,0x70
  401f34:	push   ebp
  401f35:	and    DWORD PTR [ebp-0x43],eax
  401f38:	mov    DWORD PTR [eax+0x55],esp
  401f3b:	rcr    DWORD PTR [ecx+0x40],0xd
  401f3f:	sub    eax,0x7f2e04de
  401f44:	lock and BYTE PTR [eax-0x3773493a],ah
  401f4b:	in     eax,0x0
  401f4d:	mov    bh,0xf9
  401f4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f50:	hlt    
  401f51:	cs jo  0x401f9f
  401f54:	sub    DWORD PTR [ebx],ebp
  401f56:	inc    eax
  401f57:	adc    al,BYTE PTR [esi]
  401f59:	jmp    0x7475e6de
  401f5e:	xor    esp,DWORD PTR [eax+0x1791422]
  401f64:	push   DWORD PTR [ebx]
  401f66:	xor    eax,0xe7e56e05
  401f6b:	and    al,0xa4
  401f6d:	jecxz  0x401f2e
  401f6f:	push   edi
  401f70:	out    dx,eax
  401f71:	mov    ch,0x8
  401f73:	outs   dx,DWORD PTR ds:[esi]
  401f74:	fdiv   DWORD PTR [ebx-0x6004d140]
  401f7a:	lods   al,BYTE PTR ds:[esi]
  401f7b:	fptan  
  401f7d:	pop    ebx
  401f7e:	dec    ecx
  401f7f:	mov    cl,0x8e
  401f81:	sbb    BYTE PTR [eax-0x32],0x5e
  401f85:	repnz test al,0xc
  401f88:	xchg   esi,eax
  401f89:	cdq    
  401f8a:	push   cs
  401f8b:	mov    BYTE PTR [ecx+0x25],0xfa
  401f8f:	add    al,0x80
  401f91:	pop    edx
  401f92:	push   esi
  401f93:	ror    BYTE PTR [esi],cl
  401f95:	loop   0x401f9d
  401f97:	loopne 0x401fd1
  401f99:	lea    ecx,[eax-0x72]
  401f9c:	sub    bl,BYTE PTR [edx]
  401f9e:	or     ebx,DWORD PTR [ebx]
  401fa0:	data16 jne 0x401f88
  401fa3:	sub    al,ch
  401fa5:	int    0x34
  401fa7:	add    BYTE PTR [eax+0x28],dh
  401faa:	pop    ebp
  401fab:	dec    esp
  401fac:	push   ss
  401fad:	or     eax,DWORD PTR ds:0x43b958eb
  401fb3:	mov    BYTE PTR [ecx-0x47e0524e],dl
  401fb9:	pusha  
  401fba:	(bad)  
  401fbb:	add    BYTE PTR [eax],cl
  401fbd:	out    dx,al
  401fbe:	shr    BYTE PTR [ebx+0x1b],1
  401fc1:	jns    0x401fa9
  401fc3:	add    dh,BYTE PTR ds:0x1b3808d1
  401fc9:	mov    ds:0x40ec06d0,eax
  401fce:	outs   dx,BYTE PTR ds:[esi]
  401fcf:	loopne 0x401fc1
  401fd1:	mov    WORD PTR [ecx],ds
  401fd3:	cdq    
  401fd4:	and    BYTE PTR [ebx],cl
  401fd6:	retf   
  401fd7:	(bad)  
  401fd8:	leave  
  401fd9:	jmp    0x4ad:0xf6528e2a
  401fe0:	add    ecx,DWORD PTR [ecx+edi*4]
  401fe3:	sbb    cl,bl
  401fe5:	xor    ebp,DWORD PTR ds:0xa7e0d993
  401feb:	mov    ebx,0xfa01ba43
  401ff0:	sub    DWORD PTR [ebx-0x3c],ebp
  401ff3:	pop    edx
  401ff4:	ret    0x11a9
  401ff7:	inc    edi
  401ff8:	sub    al,0x62
  401ffa:	aam    0x6a
  401ffc:	and    BYTE PTR [ebp+0x5296c123],ch
  402002:	popf   
  402003:	test   al,0x1f
  402005:	xchg   BYTE PTR [edx],bl
  402007:	pop    ds
  402008:	jb     0x401fcf
  40200a:	push   ebx
  40200b:	mov    edx,0x7059405c
  402010:	out    dx,eax
  402011:	test   DWORD PTR [esi+0x42fccf24],0xd50a081f
  40201b:	sub    al,0x77
  40201d:	jmp    0xfbdc:0xb4d49608
  402024:	jnp    0x401fc7
  402026:	out    0xf4,al
  402028:	adc    DWORD PTR [edx+0x1509bd47],ebx
  40202e:	aas    
  40202f:	data16 fsubr DWORD PTR [edi-0x1a]
  402033:	les    esi,FWORD PTR [edi]
  402035:	test   eax,0x91c6e415
  40203a:	jp     0x401fc9
  40203c:	jns    0x40209c
  40203e:	fwait
  40203f:	cmp    dh,BYTE PTR [esi+edx*2-0x3d]
  402043:	pop    ebx
  402044:	pushf  
  402045:	push   edx
  402046:	into   
  402047:	ins    BYTE PTR es:[edi],dx
  402048:	jecxz  0x4020b3
  40204a:	pop    ebx
  40204b:	xchg   ebx,eax
  40204c:	jo     0x40203f
  40204e:	adc    DWORD PTR [ecx],eax
  402050:	cmp    eax,0x2ab61506
  402055:	ins    DWORD PTR es:[edi],dx
  402056:	jmp    0x192e:0x8802239
  40205d:	pop    ebx
  40205e:	jae    0x40209b
  402060:	pop    edi
  402061:	stc    
  402062:	sub    edi,eax
  402064:	int3   
  402065:	xchg   edi,eax
  402066:	push   0xa641c689
  40206b:	scas   eax,DWORD PTR es:[edi]
  40206c:	mov    eax,ds:0xa3a14677
  402071:	or     al,BYTE PTR [ecx]
  402073:	mov    ebx,0xdd41671
  402078:	push   ebx
  402079:	into   
  40207a:	inc    esp
  40207b:	mov    eax,ds:0xb667921f
  402080:	sbb    al,0x1d
  402082:	dec    ecx
  402083:	mov    cl,0x70
  402085:	mov    al,0x80
  402087:	scas   eax,DWORD PTR es:[edi]
  402088:	rcr    DWORD PTR [edi-0xb6e4cd4],0xb2
  40208f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402090:	xchg   esi,eax
  402091:	js     0x4020cb
  402093:	repz adc eax,ebx
  402096:	jne    0x4020d2
  402098:	pop    ds
  402099:	dec    ecx
  40209a:	and    al,BYTE PTR [ecx+0x3e]
  40209d:	mov    cl,0xbe
  40209f:	cld    
  4020a0:	(bad)  
  4020a2:	cmp    ebp,ecx
  4020a4:	xor    edi,ebx
  4020a6:	fwait
  4020a7:	bound  edi,QWORD PTR [ebx+0x4]
  4020aa:	mov    ch,0xff
  4020ac:	dec    ecx
  4020ad:	mov    ds:0x5550289d,eax
  4020b2:	popa   
  4020b3:	sti    
  4020b4:	test   eax,0xd6a31e83
  4020b9:	loop   0x402066
  4020bb:	xor    ah,ch
  4020bd:	mov    dl,0xd2
  4020bf:	scas   eax,DWORD PTR es:[edi]
  4020c0:	jb     0x40207b
  4020c2:	push   es
  4020c3:	inc    esi
  4020c4:	les    esp,FWORD PTR [ebp-0x40]
  4020c7:	hlt    
  4020c8:	sbb    BYTE PTR [ebp-0x75],0xf3
  4020cc:	mov    ds:0x179c85e2,al
  4020d1:	icebp  
  4020d2:	mov    ecx,0x7331fad8
  4020d7:	jecxz  0x402080
  4020d9:	bound  ebp,QWORD PTR [eax]
  4020db:	jl     0x4020c1
  4020dd:	inc    ebx
  4020de:	or     ah,0x3f
  4020e1:	or     BYTE PTR [esi-0x3cea99d6],bh
  4020e7:	add    al,0xe0
  4020e9:	shr    BYTE PTR [edi-0x5f7c7f97],0x27
  4020f0:	adc    bh,BYTE PTR [edx-0x5d]
  4020f3:	retf   
  4020f4:	in     al,dx
  4020f5:	inc    esp
  4020f6:	icebp  
  4020f7:	shl    edx,cl
  4020f9:	in     al,dx
  4020fa:	pop    es
  4020fb:	mov    ah,dh
  4020fd:	mov    WORD PTR [ecx],ss
  4020ff:	pop    ecx
  402100:	call   0x433a:0xfc07f34d
  402107:	dec    edx
  402108:	adc    cl,BYTE PTR [edi+0x5ba2f589]
  40210e:	test   BYTE PTR [edi-0x3fa6a982],bh
  402114:	jbe    0x40212e
  402116:	out    dx,al
  402117:	push   ss
  402118:	aas    
  402119:	dec    ecx
  40211a:	sar    BYTE PTR [ecx-0x25],1
  40211d:	cmp    BYTE PTR [ebx+ecx*8-0x6326885c],0x32
  402125:	sub    eax,0x2a4cddf5
  40212a:	mov    ah,0x74
  40212c:	scas   al,BYTE PTR es:[edi]
  40212d:	ret    0x8b84
  402130:	inc    esp
  402131:	push   ecx
  402132:	fild   WORD PTR [edi-0x1502dcac]
  402138:	cmp    eax,0x559816a
  40213d:	repz mov ds:0x6d02da50,al
  402143:	in     al,0xf9
  402145:	pop    ss
  402146:	mov    edi,0x2f68c309
  40214b:	retf   0x2df5
  40214e:	mov    al,0xdb
  402150:	push   ebp
  402151:	ins    DWORD PTR es:[edi],dx
  402152:	ja     0x40211a
  402154:	jecxz  0x4020f1
  402156:	pop    ebp
  402157:	push   ecx
  402158:	inc    BYTE PTR [ebx-0x48]
  40215b:	in     eax,dx
  40215c:	je     0x4021c5
  40215e:	mov    cl,0x3
  402160:	and    eax,0x64782014
  402165:	xchg   esp,eax
  402166:	lods   eax,DWORD PTR ds:[esi]
  402167:	add    al,0xf8
  402169:	mov    al,ds:0x251a959c
  40216e:	push   esi
  40216f:	lods   al,BYTE PTR ds:[esi]
  402170:	adc    ebp,DWORD PTR [ebp+esi*2-0x238eae5a]
  402177:	and    al,0x74
  402179:	gs ins DWORD PTR es:[edi],dx
  40217b:	jb     0x4021b8
  40217d:	or     eax,0x6b096c59
  402182:	fld    QWORD PTR [esi-0x3e]
  402185:	push   ebx
  402186:	sub    BYTE PTR [esi+0x16],cl
  402189:	mov    bh,BYTE PTR [ebx-0x24cf13c]
  40218f:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402191:	pop    es
  402192:	bound  esp,QWORD PTR [edi+eiz*1-0x3b]
  402196:	cmp    ebp,eax
  402198:	or     al,0x3c
  40219a:	jecxz  0x4021bf
  40219c:	test   DWORD PTR [ebx-0x13],ebp
  40219f:	mov    cl,0x8b
  4021a1:	dec    ebx
  4021a2:	hlt    
  4021a3:	adc    cl,BYTE PTR [edx+0x59be530a]
  4021a9:	das    
  4021aa:	ins    DWORD PTR es:[edi],dx
  4021ab:	xchg   edi,eax
  4021ac:	mov    ebx,gs
  4021ae:	loope  0x402131
  4021b0:	mov    esi,0x858b0c42
  4021b5:	or     ah,dl
  4021b7:	ret    
  4021b8:	add    al,0x6b
  4021ba:	sbb    cl,0x17
  4021bd:	call   0xb9396531
  4021c2:	fadd   DWORD PTR [edi+0x1f]
  4021c5:	retf   0xaa29
  4021c8:	xchg   ecx,eax
  4021c9:	xchg   edx,eax
  4021ca:	mov    bh,0x66
  4021cc:	cmp    eax,0x13c76d5a
  4021d1:	pop    edx
  4021d2:	js     0x402178
  4021d4:	loope  0x402225
  4021d6:	or     DWORD PTR [esi],ebp
  4021d8:	or     edi,DWORD PTR [ecx-0x64]
  4021db:	test   al,0xfc
  4021dd:	xchg   DWORD PTR [ebp-0x98b1494],edx
  4021e3:	mov    ch,0x27
  4021e5:	(bad)  
  4021e6:	mov    WORD PTR [ebx],gs
  4021e8:	cmp    DWORD PTR [ebp+0x70],0x6bbd04d5
  4021ef:	mov    edx,0x4c90873
  4021f4:	mov    eax,ds:0xf379e646
  4021f9:	cli    
  4021fa:	or     DWORD PTR [edx],esp
  4021fc:	stos   DWORD PTR es:[edi],eax
  4021fd:	sahf   
  4021fe:	jno    0x402185
  402200:	sahf   
  402201:	mov    edx,0xe3f8df0f
  402206:	mov    edx,0xcd5bc2d2
  40220b:	pop    es
  40220c:	es lock test cl,bl
  402210:	aas    
  402211:	(bad)  
  402212:	pop    eax
  402213:	jmp    0x96507b1e
  402218:	hlt    
  402219:	cmp    BYTE PTR [eax-0x47],bh
  40221c:	aam    0xdd
  40221e:	fwait
  40221f:	sub    ah,0xc7
  402222:	dec    esp
  402223:	clc    
  402224:	gs call 0x60eb:0xd2decfd7
  40222c:	and    al,0xbe
  40222e:	cmp    edi,DWORD PTR [edi-0x31]
  402231:	fs aam 0xd
  402234:	add    al,0xc7
  402236:	cmp    eax,0xa0c6acb8
  40223b:	and    BYTE PTR [esi-0x73],0xd1
  40223f:	stc    
  402240:	popa   
  402241:	and    al,al
  402243:	loope  0x40229a
  402245:	add    DWORD PTR [edi+0x672c4c80],ebp
  40224b:	sub    DWORD PTR [ebp+ecx*8+0x40239591],edi
  402252:	cmp    BYTE PTR [edi+0x50],cl
  402255:	(bad)  
  402256:	clc    
  402257:	ins    BYTE PTR es:[edi],dx
  402258:	mov    ds:0x57ff5226,eax
  40225d:	outs   dx,BYTE PTR ds:[esi]
  40225e:	or     al,0x36
  402260:	imul   ebx,DWORD PTR [ecx-0x79202cc1],0x56
  402267:	fidiv  WORD PTR [edx-0x3d481595]
  40226d:	gs aad 0x44
  402270:	(bad)  
  402271:	fst    QWORD PTR [ecx+ebp*2+0x6f]
  402275:	cmp    BYTE PTR [edi-0x6e],ah
  402278:	arpl   WORD PTR [eax-0x1030c024],bx
  40227e:	cmc    
  40227f:	xchg   dh,al
  402281:	push   es
  402282:	jo     0x402254
  402284:	and    ah,BYTE PTR [edx+0x2377fc2e]
  40228a:	out    0xe0,eax
  40228c:	loopne 0x402308
  40228e:	lods   al,BYTE PTR ds:[esi]
  40228f:	out    dx,eax
  402290:	scas   eax,DWORD PTR es:[edi]
  402291:	jge    0x40224b
  402293:	dec    cx
  402295:	xchg   edi,eax
  402296:	repnz mov al,ds:0x5f433ba6
  40229c:	pop    eax
  40229d:	dec    eax
  40229e:	inc    ecx
  40229f:	in     al,0x23
  4022a1:	jne    0x402310
  4022a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4022a4:	pop    ds
  4022a5:	enter  0x5a60,0x1b
  4022a9:	sahf   
  4022aa:	pushf  
  4022ab:	call   0x8ef15629
  4022b0:	mov    esp,0x34fe0eb7
  4022b5:	xchg   BYTE PTR [ebx],dh
  4022b7:	mov    DWORD PTR [ebx],edx
  4022b9:	fs out dx,al
  4022bb:	sub    dl,BYTE PTR [edi]
  4022bd:	pop    es
  4022be:	daa    
  4022bf:	call   0xcbac6097
  4022c4:	dec    edi
  4022c5:	arpl   WORD PTR [esp+ebp*2],cx
  4022c8:	dec    ebp
  4022c9:	pop    edi
  4022ca:	or     eax,0xd15a2fd1
  4022cf:	xor    dh,BYTE PTR [ebx+0x2e8d86b]
  4022d5:	mov    edi,0x5d8f85b8
  4022da:	add    BYTE PTR [ecx-0x59e6ffc8],bh
  4022e0:	mov    DWORD PTR [ebp-0x1ada56a5],esp
  4022e6:	jp     0x402354
  4022e8:	mov    al,0x66
  4022ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4022eb:	(bad)  
  4022ec:	mov    al,ds:0xceca31d7
  4022f1:	inc    esi
  4022f2:	int3   
  4022f3:	(bad)  
  4022f4:	in     al,0xfa
  4022f6:	jnp    0x402346
  4022f8:	(bad)  
  4022f9:	lea    ebx,[edx]
  4022fb:	cmc    
  4022fc:	cmp    eax,0x152e5f7a
  402301:	lods   al,BYTE PTR ds:[esi]
  402302:	rol    BYTE PTR [ebp-0x23],cl
  402305:	outs   dx,DWORD PTR ds:[esi]
  402306:	xchg   edi,eax
  402307:	inc    esp
  402308:	xor    bl,BYTE PTR [edi-0x49]
  40230b:	push   0xffffffe6
  40230d:	shl    BYTE PTR [esi],1
  40230f:	stc    
  402310:	or     BYTE PTR [edx+ebp*4-0x55],dh
  402314:	mov    ds:0xfedf3a2b,eax
  402319:	ins    BYTE PTR es:[edi],dx
  40231a:	mov    dh,0x98
  40231c:	outs   dx,BYTE PTR ds:[esi]
  40231d:	fisttp DWORD PTR ds:0xcfc26b4f
  402323:	arpl   WORD PTR [ebp+0x6f9c9512],si
  402329:	int    0x19
  40232b:	lea    esp,[ecx+ecx*8]
  40232e:	ret    0x303e
  402331:	sbb    ecx,DWORD PTR [ebp+0x6c]
  402334:	or     al,BYTE PTR [edx]
  402336:	aas    
  402337:	add    eax,0x779298e8
  40233c:	loope  0x402390
  40233e:	test   DWORD PTR [eax-0x68],esp
  402341:	sub    esi,DWORD PTR [ebx-0x60]
  402344:	inc    ecx
  402345:	sub    eax,0xc69b9561
  40234a:	hlt    
  40234b:	inc    ebp
  40234c:	adc    ax,0x4b2c
  402350:	outs   dx,BYTE PTR ds:[esi]
  402351:	pop    DWORD PTR ds:0x99c52852
  402357:	sbb    DWORD PTR cs:[edi+0x30],ebx
  40235b:	data16 loopne 0x402395
  40235e:	fimul  DWORD PTR [ebp+0x6daa88b5]
  402364:	call   0xd331:0xa8dc88a1
  40236b:	popf   
  40236c:	push   ebp
  40236d:	ror    DWORD PTR [ebp-0x3d5ad930],0x73
  402374:	mov    al,0x71
  402376:	inc    ebx
  402377:	and    ebx,DWORD PTR [ebp-0x31]
  40237a:	jns    0x4023aa
  40237c:	fist   WORD PTR [edi-0x44]
  40237f:	(bad)  
  402381:	add    edx,DWORD PTR ds:0x108958b
  402387:	sbb    esi,DWORD PTR [ebp+0x49efa66f]
  40238d:	xchg   esi,eax
  40238e:	push   cs
  40238f:	stos   BYTE PTR es:[edi],al
  402390:	femms  
  402392:	mov    ds:0xe8b9f92f,eax
  402397:	cmc    
  402398:	shl    BYTE PTR ds:0x5cf39419,1
  40239e:	mov    ebp,0xbfb7c0d9
  4023a3:	dec    ecx
  4023a4:	add    eax,0xba4bc021
  4023a9:	add    eax,0x99444450
  4023ae:	pusha  
  4023af:	mov    ds:0xd6aec036,al
  4023b4:	jmp    0x17447bc0
  4023b9:	push   edi
  4023ba:	xchg   edi,eax
  4023bb:	xor    al,0x97
  4023bd:	dec    ebx
  4023be:	fidiv  WORD PTR [ecx+ecx*4+0x7e]
  4023c2:	mov    cl,0xd1
  4023c4:	push   es
  4023c5:	or     edi,DWORD PTR [ebp+ebp*8-0x516be168]
  4023cc:	leave  
  4023cd:	push   0x3f
  4023cf:	add    eax,0xabaa69c2
  4023d4:	xor    edi,ebx
  4023d6:	outs   dx,BYTE PTR ds:[esi]
  4023d7:	add    BYTE PTR [ebp-0x6e],ch
  4023da:	lock jecxz 0x4023eb
  4023dd:	out    dx,eax
  4023de:	shl    DWORD PTR [ecx+0x278c8418],cl
  4023e4:	test   DWORD PTR [ebx+edi*1-0x4a],esi
  4023e8:	push   ebx
  4023e9:	fcomip st,st(3)
  4023eb:	gs and al,0x34
  4023ee:	lea    esp,[ebx-0x7e634e96]
  4023f4:	sbb    ah,BYTE PTR ds:0xc66650da
  4023fa:	imul   edi,DWORD PTR [edx+0x12eb3306],0x3adc6135
  402404:	inc    ebx
  402405:	dec    ebx
  402406:	sub    al,0x5a
  402408:	fdiv   DWORD PTR [edi-0x7b1d4d22]
  40240e:	cmp    eax,0x9ff57067
  402413:	dec    ebx
  402414:	sar    ebp,cl
  402416:	not    DWORD PTR [edx+0x55]
  402419:	dec    ecx
  40241a:	loopne 0x40239f
  40241c:	xchg   DWORD PTR [esi+0x5b],edx
  40241f:	loope  0x4023de
  402421:	in     eax,0x8f
  402423:	aas    
  402424:	xor    DWORD PTR [esi],ebx
  402426:	mov    edx,es
  402428:	fstp   QWORD PTR [edi]
  40242a:	stc    
  40242b:	pop    esi
  40242c:	inc    eax
  40242d:	clc    
  40242e:	mov    esi,0x7d7a1a28
  402433:	in     eax,0x98
  402435:	adc    DWORD PTR [ebp+0x1e50004c],ebp
  40243b:	int    0x5
  40243d:	inc    ebx
  40243e:	aam    0x8e
  402440:	and    al,0xa8
  402442:	xchg   ebp,eax
  402443:	xchg   ebx,ecx
  402445:	iret   
  402446:	std    
  402447:	mov    ebx,0x81f9c358
  40244c:	sub    eax,DWORD PTR [ebx+0x76]
  40244f:	xor    BYTE PTR [ebp+0x7f],0xb6
  402453:	sub    BYTE PTR [esp+edx*2+0x8],dl
  402457:	dec    edi
  402458:	cmp    eax,0xefd55686
  40245d:	call   0x46db:0xb49d3362
  402464:	scas   eax,DWORD PTR es:[edi]
  402465:	fwait
  402466:	and    ah,al
  402468:	ss nop
  40246a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40246b:	mov    ch,0x0
  40246d:	ret    0xcb53
  402470:	not    BYTE PTR [ebp-0x71]
  402473:	lods   eax,DWORD PTR ds:[esi]
  402474:	sub    al,al
  402476:	repnz inc esi
  402478:	iret   
  402479:	push   esp
  40247a:	shr    BYTE PTR [eax+0xca0efeb],0x63
  402481:	inc    eax
  402482:	xchg   edx,eax
  402483:	push   0x26
  402485:	call   FWORD PTR [ebp+0x1a]
  402488:	push   es
  402489:	sub    al,0x19
  40248b:	sub    eax,0x16291178
  402490:	(bad)  
  402491:	cmp    eax,0xe3b8e44c
  402496:	pop    edx
  402497:	mov    ebp,0x5d7a97
  40249c:	dec    esp
  40249d:	add    DWORD PTR [esp+ebx*4],ebx
  4024a0:	push   0xffffff96
  4024a2:	aaa    
  4024a3:	jne    0x402442
  4024a5:	jp     0x40247c
  4024a7:	inc    ebx
  4024a8:	pop    ebp
  4024a9:	sahf   
  4024aa:	pushf  
  4024ab:	(bad)  
  4024ac:	fst    QWORD PTR [edx+edi*4]
  4024af:	jbe    0x4024fd
  4024b1:	les    edx,FWORD PTR [edx+0x52]
  4024b4:	je     0x4024ca
  4024b6:	cld    
  4024b7:	xchg   ebx,eax
  4024b8:	jno    0x4024a4
  4024ba:	lock xor DWORD PTR [edx+edi*4-0x52c39a30],ebx
  4024c2:	cmp    eax,0xaa1ef3db
  4024c7:	push   ds
  4024c8:	jb     0x4024f7
  4024ca:	jns    0xf9b93ed4
  4024d0:	jg     0x4024ff
  4024d2:	pop    ss
  4024d3:	enter  0x42f1,0x32
  4024d7:	mov    eax,ds:0xd9d37577
  4024dc:	cld    
  4024dd:	mov    ch,0x1
  4024df:	cdq    
  4024e0:	pop    ebx
  4024e1:	inc    eax
  4024e2:	fwait
  4024e3:	adc    al,0x99
  4024e5:	push   eax
  4024e6:	mov    edx,0xa64d7c1d
  4024eb:	das    
  4024ec:	mov    edi,DWORD PTR [edx-0x3b]
  4024ef:	(bad)  
  4024f0:	into   
  4024f1:	cmp    eax,0x48b6afd3
  4024f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4024f7:	aaa    
  4024f8:	dec    ecx
  4024f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4024fa:	enter  0x17f4,0x6b
  4024fe:	adc    esi,ebx
  402500:	mov    al,0xd5
  402502:	dec    eax
  402503:	mov    al,0x1b
  402505:	sub    DWORD PTR [ebx+eiz*1+0x385dfd77],0xffffffea
  40250d:	or     ebp,edi
  40250f:	add    DWORD PTR [edi-0xdbc0b07],ebp
  402515:	in     eax,0x5d
  402517:	cmp    ah,BYTE PTR [edi]
  402519:	xor    DWORD PTR [ebx+0x57],edi
  40251c:	rcr    DWORD PTR [ebx+ebx*1-0xe30c8b3],0x3
  402524:	cmp    al,0x88
  402526:	sahf   
  402527:	retf   0xf343
  40252a:	rcr    BYTE PTR [ebx-0x10],1
  40252d:	call   0x4f7659ee
  402532:	cld    
  402533:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402534:	rcl    DWORD PTR [ebx+ebp*4],cl
  402537:	push   ds
  402538:	ins    DWORD PTR es:[edi],dx
  402539:	out    dx,eax
  40253a:	call   0x7a2a8b06
  40253f:	sbb    eax,0xf17dbfaf
  402544:	or     BYTE PTR [ebx+0x6c],dh
  402547:	leave  
  402548:	mov    WORD PTR [edx+ebp*4-0x675ac34f],ds
  40254f:	inc    ebx
  402550:	or     ecx,DWORD PTR [esi+0x1a]
  402553:	and    ebx,DWORD PTR [ebx-0x19de2bc0]
  402559:	imul   ebp
  40255b:	push   ecx
  40255c:	sbb    dh,BYTE PTR [eax+0x41fe9baa]
  402562:	mov    ebp,0x1e8917cb
  402567:	test   eax,0x2b8d8a53
  40256c:	push   ebp
  40256d:	nop
  40256e:	lea    edx,cs:[ebp-0x65ca39f]
  402575:	jle    0x4025f0
  402577:	lds    eax,FWORD PTR [esp+eiz*8+0x1f]
  40257b:	ret    
  40257c:	push   ebp
  40257d:	retf   
  40257e:	xor    ch,cl
  402580:	cli    
  402581:	(bad)
  402585:	push   ebp
  402586:	mov    cl,0x9c
  402588:	cmp    edx,DWORD PTR ds:0xb225c3ee
  40258e:	cmp    eax,0x766a1b0d
  402593:	sbb    edx,DWORD PTR [eax-0x1b]
  402596:	dec    edi
  402597:	fisub  WORD PTR [esi]
  402599:	sbb    esp,ebx
  40259b:	out    dx,al
  40259c:	test   DWORD PTR [edx+0x7a],eax
  40259f:	add    DWORD PTR [ebx+esi*1+0x68],esp
  4025a3:	ret    0x68d1
  4025a6:	repz jle 0x4025e8
  4025a9:	or     BYTE PTR [ebp+0x20a378aa],cl
  4025af:	mov    edi,0x5aba17f1
  4025b4:	call   0x83da8a41
  4025b9:	inc    edx
  4025ba:	mov    dh,0x43
  4025bc:	fld    QWORD PTR [esp+eiz*2+0xd]
  4025c0:	lea    edx,[esi]
  4025c2:	and    BYTE PTR [ecx+0x48fb8b6d],bh
  4025c8:	div    ebx
  4025ca:	xchg   edi,eax
  4025cb:	add    DWORD PTR [ecx+0x23],esi
  4025ce:	mov    bh,0x34
  4025d0:	std    
  4025d1:	sub    edi,eax
  4025d3:	scas   eax,DWORD PTR es:[edi]
  4025d4:	nop
  4025d5:	or     ch,bl
  4025d7:	fdivr  QWORD PTR [eax-0x5c067b60]
  4025dd:	bound  ecx,QWORD PTR [ebx-0x50]
  4025e0:	pop    ecx
  4025e1:	repnz and BYTE PTR [edx-0xc],ch
  4025e5:	pop    eax
  4025e6:	fs popf 
  4025e8:	jmp    0x4025a0
  4025ea:	repz mov esp,0xebdfdb09
  4025f0:	cmp    BYTE PTR [eax+0x53],dl
  4025f3:	add    al,0x7
  4025f5:	mov    ds:0xf48c1466,al
  4025fa:	xchg   ebp,eax
  4025fb:	clc    
  4025fc:	dec    ecx
  4025fd:	popa   
  4025fe:	inc    ebp
  4025ff:	mov    al,ds:0x340ddd42
  402604:	popa   
  402605:	xor    eax,0x928f6561
  40260a:	cs daa 
  40260c:	in     al,dx
  40260d:	inc    ecx
  40260e:	scas   al,BYTE PTR es:[edi]
  40260f:	mov    cl,0x38
  402611:	or     DWORD PTR [ecx+0x5e0fa958],ebx
  402617:	mov    ch,0x45
  402619:	shl    BYTE PTR [eax-0x44a61ade],0x5f
  402620:	std    
  402621:	cmp    BYTE PTR [eax-0x73553db6],bh
  402627:	mov    ebx,DWORD PTR [edi-0x5b7eed03]
  40262d:	jecxz  0x402663
  40262f:	ror    edx,0x11
  402632:	cld    
  402633:	push   ds
  402634:	jge    0x4025ef
  402636:	push   esp
  402637:	popa   
  402638:	jmp    0x40269e
  40263a:	arpl   WORD PTR [ebp+0x13],ax
  40263d:	xchg   edi,eax
  40263e:	dec    esi
  40263f:	cmp    al,0x55
  402641:	mov    ebx,DWORD PTR ds:0xd667a015
  402647:	retf   0x5736
  40264a:	pop    esp
  40264b:	mov    WORD PTR [esi],cs
  40264d:	pop    esi
  40264e:	aam    0x84
  402650:	shl    BYTE PTR [edx-0x6e],cl
  402653:	mov    cl,0xf5
  402655:	cmp    BYTE PTR [ebp+0x19a91f34],dl
  40265b:	cmp    al,0x79
  40265d:	inc    ecx
  40265e:	add    al,0xed
  402660:	ins    DWORD PTR es:[edi],dx
  402661:	cs or  edi,esp
  402664:	imul   ecx,DWORD PTR [ecx],0x4f96b25b
  40266a:	ins    BYTE PTR es:[edi],dx
  40266b:	cdq    
  40266c:	(bad)  
  40266d:	mov    al,ds:0x1d89a6b2
  402672:	(bad)  
  402673:	xchg   ebx,eax
  402674:	push   ebp
  402675:	inc    edi
  402676:	mov    al,ds:0x6e097b23
  40267b:	push   ebp
  40267c:	loopne 0x40260b
  40267e:	jl     0x4026f7
  402680:	in     eax,dx
  402681:	es mov eax,0x7f654ae7
  402687:	jp     0x40265d
  402689:	(bad)  
  40268a:	das    
  40268b:	out    dx,al
  40268c:	retf   
  40268d:	fsub   st(3),st
  40268f:	adc    eax,0xc9206687
  402694:	jl     0x402709
  402696:	push   0x73a619e5
  40269b:	shl    esi,1
  40269d:	inc    esi
  40269e:	lods   al,BYTE PTR ds:[esi]
  40269f:	or     al,BYTE PTR [ecx]
  4026a1:	retf   0x9daa
  4026a4:	ret    0x26e3
  4026a7:	rcl    BYTE PTR [edi+0x77],cl
  4026aa:	fs (bad) 
  4026ac:	ret    0x5932
  4026af:	js     0x402721
  4026b1:	inc    ebx
  4026b2:	push   edi
  4026b3:	aam    0x3b
  4026b5:	add    eax,0x84ea60f6
  4026ba:	(bad)  
  4026bb:	ror    edi,1
  4026bd:	mov    ah,0xb6
  4026bf:	aam    0xce
  4026c1:	ins    DWORD PTR es:[edi],dx
  4026c2:	mov    ebp,0x9f455a3e
  4026c7:	nop
  4026c8:	inc    esp
  4026c9:	fiadd  WORD PTR [ebp-0x36]
  4026cc:	pop    edi
  4026cd:	out    0x4c,eax
  4026cf:	lahf   
  4026d0:	xchg   ebx,eax
  4026d1:	push   ebp
  4026d2:	mov    edx,0xe2ef31b
  4026d7:	push   ss
  4026d8:	xchg   ebx,eax
  4026d9:	fiadd  WORD PTR [edx-0x2bdb2df2]
  4026df:	in     al,0xdb
  4026e1:	sub    DWORD PTR [edi-0x840cdd3],eax
  4026e7:	xchg   esi,eax
  4026e8:	scas   al,BYTE PTR es:[edi]
  4026e9:	aad    0xb9
  4026eb:	mov    ch,0xb2
  4026ed:	mov    cl,0x27
  4026ef:	push   ebp
  4026f0:	out    0x7e,eax
  4026f2:	lods   al,BYTE PTR ds:[esi]
  4026f3:	mov    ecx,0x774ba189
  4026f8:	stc    
  4026f9:	add    eax,0xa5039f9f
  4026fe:	or     BYTE PTR [ecx],dh
  402700:	imul   BYTE PTR [esi-0x68]
  402703:	pop    esi
  402704:	aas    
  402705:	ret    
  402706:	push   ebp
  402707:	inc    ebp
  402708:	stos   DWORD PTR es:[edi],eax
  402709:	test   eax,0xf47b1de7
  40270e:	retf   
  40270f:	es and dl,ah
  402712:	icebp  
  402713:	add    DWORD PTR [esi+0x3a3f03ce],edi
  402719:	inc    eax
  40271a:	sbb    ecx,edx
  40271c:	mov    ss,WORD PTR [ebx-0x7b]
  40271f:	sahf   
  402720:	cmp    eax,0x2e810d21
  402725:	jno    0x402761
  402727:	lock xchg BYTE PTR [edi],dh
  40272a:	outs   dx,BYTE PTR ds:[esi]
  40272b:	js     0x40278b
  40272d:	js     0x402725
  40272f:	xchg   DWORD PTR [ebp-0x67],edx
  402732:	hlt    
  402733:	push   ss
  402734:	scas   al,BYTE PTR es:[edi]
  402735:	das    
  402736:	stos   BYTE PTR es:[edi],al
  402737:	lods   al,BYTE PTR ds:[esi]
  402738:	inc    edx
  402739:	adc    BYTE PTR [edx-0x3a],bh
  40273c:	hlt    
  40273d:	popa   
  40273e:	cli    
  40273f:	shr    BYTE PTR [edi],cl
  402741:	lea    edi,[edi]
  402743:	dec    eax
  402744:	adc    cl,ch
  402746:	mov    ds:0x211b6775,eax
  40274b:	sbb    al,BYTE PTR [esi]
  40274d:	popf   
  40274e:	dec    esi
  40274f:	or     BYTE PTR [ebx+ebp*4],ah
  402752:	jecxz  0x4027a9
  402754:	jmp    0x3a58bd2e
  402759:	lds    esi,FWORD PTR [ecx+edx*4]
  40275c:	push   cs
  40275d:	fld    QWORD PTR [ebp+ebp*8+0x4d]
  402761:	sahf   
  402762:	and    edx,DWORD PTR [ebx+ebx*4]
  402765:	inc    BYTE PTR [edx]
  402767:	jb     0x40275e
  402769:	in     eax,0x6b
  40276b:	mov    DWORD PTR [ebx+0x2c],edx
  40276e:	cld    
  40276f:	mov    BYTE PTR ss:[esi+eax*4-0x1c92d228],dl
  402777:	je     0x40270c
  402779:	int    0x60
  40277b:	ins    DWORD PTR es:[edi],dx
  40277c:	fwait
  40277d:	mov    dh,0xd
  40277f:	mov    ds:0xb33d30c8,al
  402784:	mov    al,ch
  402786:	bound  esi,QWORD PTR cs:[eax]
  402789:	jmp    0x40271b
  40278b:	or     dh,bh
  40278d:	mov    esp,0x693b8393
  402792:	add    al,0xaa
  402794:	pop    ds
  402795:	mov    ecx,0x407e36eb
  40279a:	cdq    
  40279b:	(bad)  
  40279c:	sbb    eax,0x945e9e01
  4027a1:	mov    edi,0x62487da5
  4027a6:	cli    
  4027a7:	and    cl,bh
  4027a9:	add    ch,BYTE PTR [eax]
  4027ab:	sbb    BYTE PTR ds:0x9e727f9,ch
  4027b1:	inc    esi
  4027b2:	stos   BYTE PTR es:[edi],al
  4027b3:	dec    esi
  4027b4:	daa    
  4027b5:	sub    edx,edx
  4027b7:	int    0x2c
  4027b9:	adc    BYTE PTR [ebx+0x14d004cf],cl
  4027bf:	push   ecx
  4027c0:	ins    BYTE PTR es:[edi],dx
  4027c1:	out    dx,al
  4027c2:	sahf   
  4027c3:	xchg   BYTE PTR [edx-0x67],ch
  4027c6:	pop    esi
  4027c7:	dec    ebx
  4027c8:	xor    BYTE PTR [ecx+esi*4-0x5f],0x8a
  4027cd:	xor    dl,bh
  4027cf:	and    dl,al
  4027d1:	loopne 0x40279b
  4027d3:	pminsw mm3,mm5
  4027d6:	inc    ecx
  4027d7:	fsub   QWORD PTR ds:0x127bf8d5
  4027dd:	cld    
  4027de:	ja     0x4027f1
  4027e0:	push   ds
  4027e1:	add    edx,DWORD PTR [eax]
  4027e3:	pop    ds
  4027e4:	xor    al,0xa7
  4027e6:	pushf  
  4027e7:	sbb    bh,BYTE PTR [esp+ebx*2]
  4027ea:	xchg   edi,eax
  4027eb:	sbb    eax,0x865b2f9
  4027f0:	cli    
  4027f1:	jecxz  0x402866
  4027f3:	int3   
  4027f4:	mov    esi,0x73380312
  4027f9:	call   0x3d56:0xea1341ce
  402800:	ror    DWORD PTR [edx],0x74
  402803:	jge    0x402837
  402805:	mov    ah,0xba
  402807:	fcom   DWORD PTR [ebp+0x7a2d5ea3]
  40280d:	mov    al,ds:0x915c4147
  402812:	je     0x402804
  402814:	cli    
  402815:	xor    ch,BYTE PTR [edx]
  402817:	shl    BYTE PTR [ebx-0x552fc183],0x4e
  40281e:	xchg   DWORD PTR [edx],esp
  402820:	and    BYTE PTR gs:[edx+0x510d6398],ah
  402827:	sub    cl,dl
  402829:	push   ecx
  40282a:	pop    ds
  40282b:	ror    dh,0x7e
  40282e:	push   0xb
  402830:	fild   WORD PTR [esi-0x45]
  402833:	into   
  402834:	mov    eax,DWORD PTR [eax+edi*8+0x2c]
  402838:	xchg   BYTE PTR [ecx],bl
  40283a:	ins    DWORD PTR es:[edi],dx
  40283b:	hlt    
  40283c:	add    al,0xb9
  40283e:	lds    edi,FWORD PTR [ebp-0x23]
  402841:	mov    ebp,esi
  402843:	mov    DWORD PTR [eax-0x30],eax
  402846:	mov    edi,0xf1c862d3
  40284b:	cmp    DWORD PTR [eax-0x1afca495],ebx
  402851:	sub    dh,0xa2
  402854:	cmp    dl,BYTE PTR [edx+eax*8-0x515074a5]
  40285b:	and    DWORD PTR [ecx],0x1239fe0c
  402861:	adc    BYTE PTR ds:0x8015b162,bh
  402867:	and    DWORD PTR [edx+0x52],eax
  40286a:	push   ebx
  40286b:	dec    esp
  40286c:	das    
  40286d:	or     BYTE PTR [ebx+edi*4+0x14],cl
  402871:	mov    al,ds:0xae2b0a90
  402876:	test   eax,0xa1437add
  40287b:	daa    
  40287c:	scas   eax,DWORD PTR es:[edi]
  40287d:	hlt    
  40287e:	pop    esp
  40287f:	mov    esi,0xe664ec0
  402884:	fmul   DWORD PTR [ebx+0x64]
  402887:	mov    bh,0x36
  402889:	dec    eax
  40288a:	jp     0x4028e6
  40288c:	dec    eax
  40288d:	scas   eax,DWORD PTR es:[edi]
  40288e:	std    
  40288f:	pop    gs
  402891:	jmp    0x402875
  402893:	pop    ss
  402894:	inc    ebp
  402895:	es xchg ebp,eax
  402897:	xor    cl,BYTE PTR [ebx-0x4309e7fc]
  40289d:	inc    edx
  40289e:	adc    al,0xed
  4028a0:	mov    WORD PTR [edi+edx*8+0x12],?
  4028a4:	cli    
  4028a5:	jae    0x4028df
  4028a7:	mov    ebx,0xea27329
  4028ac:	jp     0x4028ee
  4028ae:	into   
  4028af:	scas   al,BYTE PTR es:[edi]
  4028b0:	push   ebx
  4028b1:	ret    0x9a64
  4028b4:	aad    0xc0
  4028b6:	dec    ecx
  4028b7:	add    cl,bh
  4028b9:	xor    cl,ah
  4028bb:	aaa    
  4028bc:	call   FWORD PTR [eax-0x608ff17e]
  4028c2:	inc    esp
  4028c3:	not    bl
  4028c5:	xchg   ecx,eax
  4028c6:	rcr    DWORD PTR [ebx],1
  4028c8:	fisubr WORD PTR [ecx+0x64]
  4028cb:	ss pop ebp
  4028cd:	fs mov ah,0x11
  4028d0:	stc    
  4028d1:	sbb    al,0xcf
  4028d3:	out    dx,eax
  4028d4:	lock mov al,ds:0x1016c3ff
  4028da:	adc    eax,0x105ed4a0
  4028df:	inc    esi
  4028e0:	out    dx,al
  4028e1:	mov    bl,0x18
  4028e3:	cmc    
  4028e4:	es push esi
  4028e6:	or     DWORD PTR [ecx+0x245e9a15],esi
  4028ec:	in     eax,dx
  4028ed:	popf   
  4028ee:	(bad)  
  4028ef:	leave  
  4028f0:	iret   
  4028f1:	or     al,0x46
  4028f3:	jo     0x4028c7
  4028f5:	mov    cl,0x6c
  4028f7:	outs   dx,BYTE PTR ds:[esi]
  4028f8:	fldcw  WORD PTR [ebx+0x1c2fc138]
  4028fe:	stos   DWORD PTR es:[edi],eax
  4028ff:	add    bl,BYTE PTR [ebx]
  402901:	(bad)  
  402902:	mov    ah,BYTE PTR [ebx+ecx*8-0x5e4bdc82]
  402909:	and    BYTE PTR [edx-0xb],dh
  40290c:	es ret 
  40290e:	aam    0x64
  402910:	pop    ebp
  402911:	test   DWORD PTR [edi+ebx*1+0x2c],ebx
  402915:	iret   
  402916:	loopne 0x40290e
  402918:	cmp    ebp,DWORD PTR [ebx]
  40291a:	push   0x5b0d6fdc
  40291f:	sbb    eax,0xff07738c
  402924:	call   0x70e:0xee25c0d1
  40292b:	mov    eax,0x17fcf5ed
  402930:	lahf   
  402931:	xchg   DWORD PTR [edi-0x52f76f4a],ecx
  402937:	mov    eax,ds:0x853eaf84
  40293c:	sahf   
  40293d:	mov    ebx,esp
  40293f:	and    BYTE PTR [ecx],cl
  402941:	and    DWORD PTR [edi-0x477bda4],ebx
  402947:	call   0xdb61:0x6f5ef95e
  40294e:	push   DWORD PTR [eax-0x67]
  402951:	js     0x402909
  402953:	addr16 jne 0x40293e
  402956:	mov    edi,ebx
  402958:	scas   al,BYTE PTR es:[edi]
  402959:	out    0xff,eax
  40295b:	or     ah,bh
  40295d:	or     BYTE PTR [eax+0x1],ah
  402960:	cs cld 
  402962:	rol    DWORD PTR [edi+0x2c4e7b90],1
  402968:	jmp    0x40298b
  40296a:	pop    ebp
  40296b:	outs   dx,DWORD PTR ds:[esi]
  40296c:	inc    ebp
  40296d:	in     eax,dx
  40296e:	inc    eax
  40296f:	or     BYTE PTR [esp+0x6],dh
  402973:	pop    edx
  402974:	int3   
  402975:	les    edx,FWORD PTR [ebx-0x46]
  402978:	or     BYTE PTR [edi+0x19],bh
  40297b:	sub    esp,DWORD PTR [esi]
  40297d:	mov    edx,0x9365b17d
  402982:	int    0x4
  402984:	adc    bl,ah
  402986:	jns    0x402956
  402988:	loope  0x402982
  40298a:	(bad)  
  40298b:	xor    DWORD PTR [eax],ecx
  40298d:	test   dl,cl
  40298f:	bound  eax,QWORD PTR [esi+eax*4+0x3ae75e6d]
  402996:	lea    eax,[ebp+ebp*2-0x53]
  40299a:	loopne 0x402973
  40299c:	mov    al,0x16
  40299e:	pop    esp
  40299f:	xchg   BYTE PTR ds:0xc17f95ad,bh
  4029a5:	adc    dl,BYTE PTR [ebx+0x23]
  4029a8:	mov    eax,ds:0x1c3277a8
  4029ad:	addr16 mov edi,0x56d2d0b2
  4029b3:	mov    cl,0x6d
  4029b5:	rcr    DWORD PTR [eax-0x19fcb890],0xa9
  4029bc:	dec    ebp
  4029bd:	lds    ebp,FWORD PTR [edi+0x7e]
  4029c0:	imul   ebx,DWORD PTR [ecx+eiz*2-0x38],0xffffff8b
  4029c5:	xor    esi,ebx
  4029c7:	push   ebp
  4029c8:	rcr    bl,0x16
  4029cb:	shl    DWORD PTR [ebp-0x38f35290],1
  4029d1:	lods   eax,DWORD PTR ds:[esi]
  4029d2:	push   esi
  4029d3:	push   ebp
  4029d4:	fadd   DWORD PTR [eax]
  4029d6:	lahf   
  4029d7:	call   0x64edf3ad
  4029dc:	call   0xeb8b8cd7
  4029e1:	fdivr  DWORD PTR [edx+0x7368b00]
  4029e7:	int    0x64
  4029e9:	cmc    
  4029ea:	mov    ah,0xc5
  4029ec:	scas   eax,DWORD PTR es:[edi]
  4029ed:	outs   dx,BYTE PTR ds:[esi]
  4029ee:	repnz dec ebx
  4029f0:	add    eax,0x23092920
  4029f5:	(bad)  
  4029f6:	fdiv   QWORD PTR [eax]
  4029f8:	add    BYTE PTR [eax-0x27],dl
  4029fb:	loope  0x402a77
  4029fd:	scas   eax,DWORD PTR es:[edi]
  4029fe:	imul   DWORD PTR [edi*8+0x81abf66]
  402a05:	dec    ecx
  402a06:	dec    edi
  402a07:	mov    al,ds:0xaa54c8d5
  402a0c:	xor    bl,al
  402a0e:	lods   al,BYTE PTR ds:[esi]
  402a10:	jl     0x402a75
  402a12:	mov    ch,0x5a
  402a14:	and    BYTE PTR ds:0xbaaf36b1,ch
  402a1a:	nop
  402a1b:	into   
  402a1c:	lahf   
  402a1d:	icebp  
  402a1e:	sub    al,0x94
  402a20:	leave  
  402a21:	aas    
  402a22:	xor    eax,0x82fac995
  402a27:	imul   sp,WORD PTR [esi],0xffcb
  402a2b:	mov    eax,ds:0xaabf31a6
  402a30:	aam    0x5e
  402a32:	shr    BYTE PTR [edx+0x221270da],0xc
  402a39:	dec    ebp
  402a3a:	xor    al,0xe9
  402a3c:	stos   BYTE PTR es:[edi],al
  402a3d:	les    ecx,FWORD PTR [edx-0x76]
  402a40:	add    eax,0xa29354eb
  402a45:	adc    ah,bh
  402a47:	in     al,0xc
  402a49:	jge    0x402a46
  402a4b:	xchg   ebx,eax
  402a4c:	mov    cl,BYTE PTR [ebp-0x4e9e8f29]
  402a52:	mov    esp,0x1597a9ba
  402a57:	sub    al,0x75
  402a59:	in     al,dx
  402a5a:	pop    ebp
  402a5b:	push   cs
  402a5c:	cmp    bh,BYTE PTR [esi+edi*2+0x355850be]
  402a63:	call   0x9996:0x44faecf6
  402a6a:	pop    edx
  402a6b:	cmp    eax,0x99c88e20
  402a70:	mov    ah,0xf
  402a72:	xor    ah,cl
  402a74:	mov    ch,BYTE PTR [edi-0x6f944ecf]
  402a7a:	std    
  402a7b:	popf   
  402a7c:	in     al,dx
  402a7d:	int    0xe8
  402a7f:	aas    
  402a80:	xlat   BYTE PTR ds:[ebx]
  402a81:	mov    ch,bh
  402a83:	mov    eax,0x25a2b0b4
  402a88:	xor    ecx,DWORD PTR [esp+ebp*8-0x4e]
  402a8c:	out    0x50,eax
  402a8e:	jnp    0x402ad3
  402a90:	arpl   sp,ax
  402a92:	inc    ebx
  402a93:	cmp    bh,bl
  402a95:	dec    ecx
  402a96:	adc    DWORD PTR [esi-0x543824e0],edi
  402a9c:	sub    bl,BYTE PTR [ecx+0x642ad6d]
  402aa2:	jo     0x402a81
  402aa4:	and    dl,BYTE PTR [eax]
  402aa6:	mov    esi,0xfccd0d8b
  402aab:	icebp  
  402aac:	shl    DWORD PTR [ebx+0x41c71de7],1
  402ab2:	popf   
  402ab3:	mov    fs,WORD PTR [eax]
  402ab5:	inc    ebx
  402ab6:	ror    al,0x3b
  402ab9:	repz cs in eax,dx
  402abc:	adc    BYTE PTR [eax+0x3de8974f],cl
  402ac2:	xchg   edi,eax
  402ac3:	fld    QWORD PTR [edi]
  402ac5:	in     eax,dx
  402ac6:	popf   
  402ac7:	adc    al,0x85
  402ac9:	test   eax,0x6c2befc7
  402ace:	hlt    
  402acf:	or     BYTE PTR [ebx-0x4a5736a4],dh
  402ad5:	ret    0x58fe
  402ad8:	inc    edx
  402ad9:	addr16 sub al,0x94
  402adc:	sbb    BYTE PTR [ebp-0x28ca1d9f],dl
  402ae2:	fwait
  402ae3:	cmp    dh,BYTE PTR ds:[edi+esi*4]
  402ae7:	aas    
  402ae8:	ret    
  402ae9:	mov    edx,0xbc32cc9a
  402aee:	(bad)  
  402aef:	scas   eax,DWORD PTR es:[edi]
  402af0:	in     eax,0x75
  402af2:	jno    0x402aeb
  402af4:	sbb    bl,BYTE PTR [ebx]
  402af6:	test   DWORD PTR [ebp+0x6a],0x33a33a73
  402afd:	and    eax,0x1355863f
  402b02:	dec    edi
  402b03:	rcl    DWORD PTR [ebx-0x44],cl
  402b06:	repnz mov ebx,0xa26c3198
  402b0c:	test   BYTE PTR [ecx-0x35b3c088],0x48
  402b13:	(bad)  
  402b14:	xchg   ebp,eax
  402b15:	jmp    0x402b87
  402b17:	push   eax
  402b18:	cmp    BYTE PTR [esi-0x78],ch
  402b1b:	loopne 0x402b04
  402b1d:	push   esi
  402b1e:	pop    edi
  402b1f:	mov    ecx,0xed496129
  402b24:	jle    0x402b52
  402b26:	sbb    dh,BYTE PTR [ebx+0x7a]
  402b29:	add    edi,DWORD PTR [esi+0x2c]
  402b2c:	xor    ah,dl
  402b2e:	mov    edx,0x3c60fece
  402b33:	xchg   ebp,eax
  402b34:	lods   eax,DWORD PTR ds:[esi]
  402b35:	mov    DWORD PTR [ebx],esi
  402b37:	inc    ebp
  402b38:	pop    ds
  402b39:	aaa    
  402b3a:	xchg   esp,eax
  402b3b:	sub    dh,BYTE PTR ds:0xae6f6926
  402b41:	rol    DWORD PTR [ecx],1
  402b43:	jge    0x402aea
  402b45:	int3   
  402b46:	cld    
  402b47:	pop    es
  402b48:	dec    ebx
  402b49:	loopne 0x402b3b
  402b4b:	ret    
  402b4c:	aam    0xee
  402b4e:	clc    
  402b4f:	(bad)  
  402b50:	cmc    
  402b51:	outs   dx,BYTE PTR ds:[esi]
  402b52:	pop    esi
  402b53:	gs mov ch,0xd8
  402b56:	in     eax,dx
  402b57:	xchg   esp,eax
  402b58:	jl     0x402baa
  402b5a:	xor    DWORD PTR [esi+0x54],edi
  402b5d:	mov    WORD PTR [edi],fs
  402b5f:	gs push ebx
  402b61:	aaa    
  402b62:	mov    edx,0x2e6bd3b6
  402b67:	adc    BYTE PTR [esi+0x107d79fc],0xaf
  402b6e:	mov    esi,0x4937d1f
  402b73:	add    bl,BYTE PTR [ecx]
  402b75:	shr    ch,1
  402b77:	cdq    
  402b78:	lock ss mov esi,0xf32fbcf8
  402b7f:	jl     0x402bb1
  402b81:	mov    eax,0x2b94f451
  402b86:	inc    ebp
  402b87:	xor    dh,BYTE PTR [eax]
  402b89:	push   ds
  402b8a:	push   esi
  402b8b:	rol    ah,0x3
  402b8e:	outs   dx,BYTE PTR ds:[esi]
  402b8f:	sub    esp,ebp
  402b91:	sbb    BYTE PTR [esi-0x6071ed3],0xa2
  402b98:	sbb    DWORD PTR [edi-0x73566303],esp
  402b9e:	push   ds
  402b9f:	clc    
  402ba0:	add    BYTE PTR [edi-0x1a],dl
  402ba3:	shl    DWORD PTR [ebp+0x42],1
  402ba6:	int3   
  402ba7:	and    bh,bh
  402ba9:	arpl   dx,dx
  402bab:	test   eax,0x44d222d
  402bb0:	xchg   bl,bh
  402bb2:	loop   0x402bc5
  402bb4:	push   eax
  402bb5:	call   0xce4f7221
  402bba:	ins    BYTE PTR es:[edi],dx
  402bbb:	setge  BYTE PTR [edi]
  402bbe:	mov    ch,0xf8
  402bc0:	adc    DWORD PTR [ecx-0x6a8bb8e4],ecx
  402bc6:	dec    ebx
  402bc7:	call   0xeacf5f01
  402bcc:	bound  esp,QWORD PTR [edx+0x6175998a]
  402bd2:	or     al,0xae
  402bd4:	inc    ecx
  402bd5:	mov    DWORD PTR [ecx+0x776825f8],ebx
  402bdb:	pop    ebp
  402bdc:	(bad)  
  402bdd:	xor    al,0xca
  402bdf:	cmp    edi,DWORD PTR [ecx+ebx*4-0x6dee1dc4]
  402be6:	mov    bl,BYTE PTR [esi+0x7c]
  402be9:	xor    eax,0x6929da01
  402bee:	add    ecx,edx
  402bf0:	clc    
  402bf1:	es fwait
  402bf3:	dec    edi
  402bf4:	aas    
  402bf5:	xor    DWORD PTR [esi],0x1e
  402bf8:	xchg   ecx,eax
  402bf9:	push   ss
  402bfa:	mov    ecx,0xed7942a6
  402bff:	ror    BYTE PTR [edx+ebp*2+0x524d52a8],1
  402c06:	in     al,dx
  402c07:	icebp  
  402c08:	add    ah,al
  402c0a:	mul    DWORD PTR [ebx-0xe]
  402c0d:	jmp    0x52e0:0xe7602a79
  402c14:	xchg   ebx,eax
  402c15:	pop    ss
  402c16:	add    eax,0xcce49e31
  402c1b:	in     eax,0x9b
  402c1d:	pop    edi
  402c1e:	xchg   ah,al
  402c20:	sti    
  402c21:	mov    dl,0x66
  402c23:	in     al,dx
  402c24:	xor    BYTE PTR [edx+0x5e],dl
  402c27:	mov    esi,0x5e7b999e
  402c2c:	pop    esi
  402c2d:	dec    esi
  402c2e:	es xor DWORD PTR cs:[eax+0x55],ecx
  402c33:	dec    ebp
  402c34:	pop    esi
  402c35:	or     esi,ebx
  402c37:	pshufw mm6,mm6,0x38
  402c3b:	and    eax,0x172ce79
  402c40:	jns    0x402bd6
  402c42:	cdq    
  402c43:	jo     0x402cc4
  402c45:	imul   esi,DWORD PTR [ebx],0xb78a657f
  402c4b:	pop    esi
  402c4c:	adc    edi,DWORD PTR [ebp-0x5c871d2]
  402c52:	add    BYTE PTR [ebp-0x157b37bb],dl
  402c58:	pusha  
  402c59:	add    dl,ah
  402c5b:	pushf  
  402c5c:	mov    dh,dl
  402c5e:	add    al,0x56
  402c60:	clc    
  402c61:	in     eax,0x1
  402c63:	cld    
  402c64:	push   ecx
  402c65:	repz sbb al,ah
  402c68:	dec    esi
  402c69:	jne    0x402c7c
  402c6b:	fistp  QWORD PTR [edx+edi*1]
  402c6e:	mov    ecx,0x1e99f2f7
  402c73:	ins    BYTE PTR es:[edi],dx
  402c74:	imul   DWORD PTR [ecx-0x3e]
  402c77:	jne    0x402c9c
  402c79:	xor    al,0xb8
  402c7b:	rol    DWORD PTR [esi+0x8],0x19
  402c7f:	jge    0x402cdb
  402c81:	adc    eax,0x13c127a1
  402c86:	pop    ss
  402c87:	inc    eax
  402c88:	lds    ecx,FWORD PTR [ebx+eax*4-0x69802f6a]
  402c8f:	sbb    DWORD PTR [edx],ebx
  402c91:	inc    edx
  402c92:	or     al,0xe4
  402c94:	push   ebx
  402c95:	cmp    ebx,DWORD PTR [edx]
  402c97:	sub    edx,edx
  402c99:	mov    eax,ds:0x701a9687
  402c9e:	cmp    dl,BYTE PTR [edi-0x34]
  402ca1:	jmp    0x91f847a0
  402ca6:	dec    ecx
  402ca7:	mov    eax,ds:0xf02a2725
  402cac:	cmp    ah,BYTE PTR [edi+edx*4+0x3649f3ce]
  402cb3:	add    BYTE PTR ds:0x5ec9ad61,0x1
  402cba:	lods   al,BYTE PTR ds:[esi]
  402cbb:	push   0xbdb1752e
  402cc0:	mov    bh,0x70
  402cc2:	icebp  
  402cc3:	loop   0x402d1c
  402cc5:	inc    eax
  402cc6:	shl    dh,1
  402cc8:	mov    dh,0x2f
  402cca:	retf   0x2edf
  402ccd:	pop    ecx
  402cce:	push   cs
  402ccf:	repnz xchg ecx,eax
  402cd1:	pop    ecx
  402cd2:	lock push esp
  402cd4:	pop    esi
  402cd5:	loop   0x402d53
  402cd7:	jl     0x402cd9
  402cd9:	inc    esp
  402cda:	(bad)  
  402cdc:	and    DWORD PTR [edi+0x76],ebp
  402cdf:	(bad)  
  402ce0:	pushf  
  402ce1:	sahf   
  402ce2:	cdq    
  402ce3:	jbe    0x402d24
  402ce5:	mov    ss,edx
  402ce7:	adc    bh,BYTE PTR [edi-0x3a]
  402cea:	mov    al,0xb5
  402cec:	(bad)  
  402ced:	lock jp 0x402c98
  402cf0:	arpl   WORD PTR [ebx-0x3d733112],di
  402cf6:	test   DWORD PTR [ecx+edi*2+0x7ed0dd13],ebx
  402cfd:	sub    ecx,esp
  402cff:	outs   dx,BYTE PTR ds:[esi]
  402d00:	lods   al,BYTE PTR ds:[esi]
  402d01:	fwait
  402d02:	jb     0x402d51
  402d04:	jp     0x402d06
  402d06:	xchg   al,dh
  402d08:	mov    ah,0x93
  402d0a:	xchg   edx,eax
  402d0b:	xor    eax,0x67f49df5
  402d10:	push   ds
  402d11:	sti    
  402d12:	dec    BYTE PTR [ecx-0x5dd1288f]
  402d18:	cmp    al,0xac
  402d1a:	lea    edx,[eax-0x30]
  402d1d:	rcr    esi,cl
  402d1f:	sbb    ebp,eax
  402d21:	(bad)  
  402d22:	sbb    al,0xb8
  402d24:	(bad)  
  402d25:	sub    ch,ah
  402d27:	les    edx,FWORD PTR [edx-0x4a93438b]
  402d2d:	mov    ch,0xc5
  402d2f:	lds    edx,FWORD PTR [edi]
  402d31:	les    eax,FWORD PTR [edi-0x137f8484]
  402d37:	inc    ecx
  402d38:	lock imul edx,eax,0xffffff8a
  402d3c:	jae    0x402d8c
  402d3e:	xor    eax,0x89912b1
  402d43:	out    0x27,eax
  402d45:	(bad)  [ebx-0x2e]
  402d48:	or     DWORD PTR [esi+0x23],esi
  402d4b:	push   esi
  402d4c:	stos   BYTE PTR es:[edi],al
  402d4d:	jo     0x402d24
  402d4f:	outs   dx,BYTE PTR ds:[esi]
  402d50:	inc    esp
  402d51:	in     eax,dx
  402d52:	gs xchg esp,eax
  402d54:	jge    0x402d1e
  402d56:	cmp    DWORD PTR [ecx-0x70],esp
  402d59:	and    al,bl
  402d5b:	ret    0xb6ac
  402d5e:	stos   DWORD PTR es:[edi],eax
  402d5f:	rol    BYTE PTR fs:[eax+eax*4-0x244c008d],cl
  402d67:	xor    BYTE PTR ds:0x391ada60,al
  402d6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d6e:	loop   0x402d4f
  402d70:	lods   eax,DWORD PTR ds:[esi]
  402d71:	or     eax,DWORD PTR [edx+ebp*2+0x1c19f6fd]
  402d78:	add    ebx,DWORD PTR [edx-0x67]
  402d7b:	imul   edi,DWORD PTR cs:[esi+esi*2],0x3ea8dbdc
  402d83:	jmp    0xae55:0x71995403
  402d8a:	ss (bad) 
  402d8c:	(bad)  
  402d8d:	rcl    DWORD PTR [eax-0x4a],cl
  402d90:	xchg   edx,eax
  402d91:	xchg   ecx,eax
  402d92:	lods   eax,DWORD PTR ds:[esi]
  402d93:	add    DWORD PTR [ebp-0x3a0d51a1],esp
  402d99:	dec    ebx
  402d9a:	xchg   edi,eax
  402d9b:	or     al,0x45
  402d9d:	aas    
  402d9e:	gs push ebx
  402da0:	inc    ebp
  402da1:	lea    eax,[eax+0x5422521e]
  402da7:	add    BYTE PTR [esi+0x7689e5db],al
  402dad:	inc    ebp
  402dae:	int    0xec
  402db0:	push   ss
  402db1:	jp     0x402da2
  402db3:	and    BYTE PTR [ebx],ch
  402db5:	and    al,0x8e
  402db7:	add    dh,cl
  402db9:	mov    bl,0xf0
  402dbb:	mov    ch,0x13
  402dbd:	in     eax,dx
  402dbe:	and    eax,0xc02faf30
  402dc3:	add    DWORD PTR [edi],ebx
  402dc5:	cwde   
  402dc6:	(bad)
  402dc9:	jne    0x402d92
  402dcb:	sbb    eax,0x5ba03ce4
  402dd0:	xor    edx,DWORD PTR [edi+0x716c1720]
  402dd6:	mov    edx,DWORD PTR [edi-0x36]
  402dd9:	jnp    0x402e50
  402ddb:	mov    esi,0x7cc4658
  402de0:	cmp    dh,BYTE PTR [ebx+ebx*1+0x4a]
  402de4:	push   edi
  402de5:	imul   esp,DWORD PTR [esi-0x3b6d3c2c],0x7e40aa58
  402def:	inc    ebp
  402df0:	sub    al,0x63
  402df2:	in     al,0x8a
  402df4:	mov    al,ds:0x84f7061
  402df9:	dec    DWORD PTR [eax+0x3018ad01]
  402dff:	sahf   
  402e00:	sbb    eax,0x8174ba81
  402e05:	jae    0x402dfb
  402e07:	inc    esp
  402e08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e09:	and    al,0xe
  402e0b:	loop   0x402d99
  402e0d:	and    eax,0x39f2ad7d
  402e12:	xor    eax,0x80f28144
  402e17:	cdq    
  402e18:	xor    eax,0xaf95e8
  402e1d:	je     0x402e32
  402e1f:	jmp    0xd9dd:0x37d7bd00
  402e26:	mov    esi,0x19accfea
  402e2b:	inc    esi
  402e2c:	call   0x10be:0x8737e309
  402e33:	les    edi,FWORD PTR [ebp+0x4639041b]
  402e39:	int    0xc8
  402e3b:	jle    0x402e18
  402e3d:	mov    bl,0x33
  402e3f:	gs ret 
  402e41:	daa    
  402e42:	pop    esi
  402e43:	mov    esp,0x575c8aa5
  402e48:	fist   WORD PTR [ecx]
  402e4a:	addr16 xor eax,0x80a32f30
  402e50:	adc    DWORD PTR [edx+eax*2+0x55],ebp
  402e54:	test   BYTE PTR [ebx],0xbe
  402e57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e58:	(bad)  
  402e59:	adc    DWORD PTR [eax+0x5275a10],edi
  402e5f:	add    DWORD PTR [esi],edi
  402e61:	retf   
  402e62:	mov    al,bl
  402e64:	jne    0x402eba
  402e66:	jecxz  0x402e53
  402e68:	and    dh,BYTE PTR [ebx]
  402e6a:	fidiv  WORD PTR [esp+esi*4]
  402e6d:	xchg   edi,eax
  402e6e:	add    BYTE PTR [ebx],ah
  402e70:	cwde   
  402e71:	adc    DWORD PTR [si+0x7bd3],ecx
  402e76:	fimul  DWORD PTR [edx-0x4d]
  402e79:	sar    DWORD PTR [ecx+ebx*4-0x28a1c156],cl
  402e80:	shl    DWORD PTR [ebx+0x5f],1
  402e83:	dec    ecx
  402e84:	dec    esp
  402e85:	xchg   BYTE PTR [edi+0x379a42e4],ah
  402e8b:	xchg   esi,eax
  402e8c:	add    DWORD PTR [ebx],esp
  402e8e:	inc    ecx
  402e8f:	xor    al,BYTE PTR [esi]
  402e91:	in     al,dx
  402e92:	ss call 0xde48:0xe9383d19
  402e9a:	mov    bl,dl
  402e9c:	sbb    al,0x37
  402e9e:	(bad)  
  402ea0:	sbb    edx,edx
  402ea2:	mov    dh,0x29
  402ea4:	jnp    0x402e9c
  402ea6:	test   bl,ch
  402ea8:	out    dx,eax
  402ea9:	mov    edx,0xde110fe8
  402eae:	pop    ebp
  402eaf:	stos   BYTE PTR es:[edi],al
  402eb0:	xchg   esp,eax
  402eb1:	scas   al,BYTE PTR es:[edi]
  402eb2:	jo     0x402eb2
  402eb4:	and    al,0x24
  402eb6:	adc    DWORD PTR [eax],0x6a
  402eb9:	out    dx,al
  402eba:	cmp    DWORD PTR [edi+0x2d9853f2],0x599378e4
  402ec4:	out    dx,eax
  402ec5:	cmp    al,0xb
  402ec7:	out    0x58,al
  402ec9:	or     ecx,edi
  402ecb:	xor    esp,DWORD PTR [ebx+0x15]
  402ece:	scas   al,BYTE PTR es:[edi]
  402ecf:	scas   al,BYTE PTR es:[edi]
  402ed0:	or     al,0xfe
  402ed2:	push   cs
  402ed3:	jno    0xd56883e8
  402ed9:	stc    
  402eda:	add    esp,DWORD PTR [ebp-0x72e74e87]
  402ee0:	aaa    
  402ee1:	inc    edi
  402ee2:	lds    eax,FWORD PTR [edx+ecx*8-0x28]
  402ee6:	cmp    dl,bl
  402ee8:	fld    st(2)
  402eea:	push   esi
  402eeb:	xchg   bh,ah
  402eed:	call   0x2ee3:0x837886c1
  402ef4:	sbb    al,0x29
  402ef6:	add    eax,0xa3eacbed
  402efb:	mov    esi,0xe648bfc0
  402f00:	dec    ebp
  402f01:	xor    DWORD PTR [ecx-0x74],ebx
  402f04:	cs inc edi
  402f06:	(bad)  
  402f07:	sub    edi,edi
  402f09:	test   DWORD PTR [ecx-0x42354cb6],edx
  402f0f:	sub    dh,0x55
  402f12:	std    
  402f13:	mov    esi,0xc240718c
  402f18:	sahf   
  402f19:	adc    al,0x30
  402f1b:	jno    0x402f99
  402f1d:	clc    
  402f1e:	xor    dl,BYTE PTR [ebx]
  402f20:	inc    edx
  402f21:	inc    BYTE PTR [ecx+0x70e1467d]
  402f27:	bound  edx,QWORD PTR [ecx]
  402f29:	sar    al,cl
  402f2b:	rol    BYTE PTR [eax],1
  402f2d:	in     al,dx
  402f2e:	cmc    
  402f2f:	cdq    
  402f30:	xchg   ebx,eax
  402f31:	das    
  402f32:	xchg   esi,eax
  402f33:	or     eax,0x97d40357
  402f38:	cs test DWORD PTR gs:[ecx-0x48d62e4e],0xc2fcca6a
  402f44:	neg    ebx
  402f46:	mov    ebp,ebp
  402f48:	stc    
  402f49:	sbb    al,BYTE PTR [edi+0x6c]
  402f4c:	mov    ebp,edx
  402f4e:	int3   
  402f4f:	push   ebx
  402f50:	push   es
  402f51:	cmp    DWORD PTR [esi+0x4b],ecx
  402f54:	js     0x402f70
  402f56:	and    al,0x8c
  402f58:	mov    dh,0x54
  402f5a:	mov    eax,ds:0x3a9b9fa9
  402f5f:	mov    edi,ecx
  402f61:	leave  
  402f62:	inc    ebp
  402f63:	pop    edi
  402f64:	dec    esp
  402f65:	cs mov ebp,0xec5583a4
  402f6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f6c:	out    0xa2,eax
  402f6e:	or     eax,0xd656c8fa
  402f73:	cmp    eax,0x89c31692
  402f78:	loopne 0x402fe5
  402f7a:	pop    ss
  402f7b:	jb     0x402f38
  402f7d:	push   edx
  402f7e:	stc    
  402f7f:	out    0x33,eax
  402f81:	sub    BYTE PTR [edi],0x57
  402f84:	jl     0x402fd1
  402f86:	nop
  402f87:	dec    ebx
  402f88:	fwait
  402f89:	div    eax
  402f8b:	xchg   ebx,eax
  402f8c:	nop
  402f8d:	jle    0x402f94
  402f8f:	div    DWORD PTR [ebx+0x6f]
  402f92:	hlt    
  402f93:	int    0xb4
  402f95:	push   eax
  402f96:	push   ebp
  402f97:	sub    DWORD PTR [ebp+0x1f94516b],edx
  402f9d:	rcr    BYTE PTR [edx],cl
  402f9f:	in     eax,dx
  402fa0:	es and al,0x1
  402fa3:	xchg   BYTE PTR [edi+esi*4-0x1fd37e1b],dh
  402faa:	mov    al,ds:0x2066f3fd
  402faf:	jg     0x402f67
  402fb1:	shl    DWORD PTR [ebp+0x1b],0x18
  402fb5:	pushf  
  402fb6:	or     DWORD PTR [edx+0x1606314c],esi
  402fbc:	fld    TBYTE PTR [eax+0x1d]
  402fbf:	pop    edi
  402fc0:	inc    ebp
  402fc1:	bound  esi,QWORD PTR [eax+eax*2-0x14db644f]
  402fc8:	pmaxsw mm2,QWORD PTR [edx+eax*1]
  402fcc:	xchg   ebx,eax
  402fcd:	xchg   DWORD PTR [eax],eax
  402fcf:	mov    bh,0x40
  402fd1:	push   esp
  402fd2:	pop    ecx
  402fd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fd4:	push   ebp
  402fd5:	ret    
  402fd6:	cwde   
  402fd7:	add    al,0x16
  402fd9:	out    dx,al
  402fda:	dec    esp
  402fdb:	aad    0x5c
  402fdd:	fnstsw WORD PTR ds:0x25b3ff36
  402fe3:	mov    eax,ebx
  402fe5:	pop    eax
  402fe6:	add    edx,DWORD PTR [edx]
  402fe8:	cmc    
  402fe9:	add    al,0xd5
  402feb:	lahf   
  402fec:	push   0x45105279
  402ff1:	add    esp,DWORD PTR [ebx-0xfc992be]
  402ff7:	adc    al,0x35
  402ff9:	or     edi,DWORD PTR [ebx+0x4f29aed]
  402fff:	sbb    DWORD PTR [esi+0x150bdad0],0x4e
  403006:	popf   
  403007:	(bad)  
  403008:	out    dx,al
  403009:	stc    
  40300a:	shr    BYTE PTR [eax],0x69
  40300d:	jno    0x403058
  40300f:	push   ebp
  403010:	pop    edx
  403011:	xchg   DWORD PTR [ecx+0x7d96e71b],eax
  403017:	mov    ebp,0xe84be732
  40301c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40301d:	pop    edx
  40301e:	cmp    cl,BYTE PTR [edx]
  403020:	call   0x130319d1
  403025:	sbb    BYTE PTR [ebx-0x65],ah
  403028:	aad    0x99
  40302a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40302b:	sahf   
  40302c:	or     BYTE PTR [esi+eax*1+0x6ad52f64],ah
  403033:	xlat   BYTE PTR ds:[ebx]
  403034:	in     eax,0x1a
  403036:	jecxz  0x403008
  403038:	add    DWORD PTR [edi],eax
  40303a:	jmp    0xd1b1f3c9
  40303f:	push   edx
  403040:	xchg   BYTE PTR ds:0x1cbadc74,ch
  403046:	(bad)  
  403047:	out    0x7d,eax
  403049:	ins    DWORD PTR es:[edi],dx
  40304a:	out    dx,eax
  40304b:	in     eax,dx
  40304c:	pusha  
  40304d:	jp     0x402ffd
  40304f:	sbb    al,0xc2
  403051:	fldcw  WORD PTR [edi+0x46223be9]
  403057:	xor    edi,DWORD PTR [eax-0x52]
  40305a:	push   es
  40305b:	test   al,ch
  40305d:	mov    dh,0x1f
  40305f:	push   ebx
  403060:	das    
  403061:	dec    esp
  403062:	out    0x20,eax
  403064:	pop    ecx
  403065:	cmp    edi,eax
  403067:	daa    
  403068:	xor    eax,0xe339af60
  40306d:	mov    ch,0xdc
  40306f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403070:	test   BYTE PTR [eax],dl
  403072:	nop
  403073:	pop    ebx
  403074:	lods   al,BYTE PTR ds:[esi]
  403075:	daa    
  403076:	or     ch,ah
  403078:	popa   
  403079:	mov    bl,0x21
  40307b:	mov    ebp,0xac8b20a8
  403080:	add    eax,0x828bfe32
  403085:	clc    
  403086:	cmp    BYTE PTR [edx+eiz*4-0x26],0x27
  40308b:	xor    DWORD PTR [ebx+0xef477fc],ebp
  403091:	(bad)
  403095:	getsec 
  403097:	(bad)  
  403098:	lock push ds
  40309a:	xchg   ebx,eax
  40309b:	dec    esi
  40309c:	pop    DWORD PTR [esi]
  40309e:	outs   dx,DWORD PTR ds:[esi]
  40309f:	and    al,BYTE PTR [edx]
  4030a1:	scas   al,BYTE PTR es:[edi]
  4030a2:	and    cl,BYTE PTR [eax+0x3bed1e7b]
  4030a8:	xchg   BYTE PTR [edi+eiz*4-0x6be706f4],ch
  4030af:	push   0x2750fe64
  4030b4:	sub    BYTE PTR [edi],dh
  4030b6:	and    ch,dh
  4030b8:	stos   BYTE PTR es:[edi],al
  4030b9:	mov    bl,0xbc
  4030bb:	xchg   ebx,eax
  4030bc:	jbe    0x40303e
  4030be:	cmp    esi,DWORD PTR ds:0xb142a188
  4030c4:	inc    esp
  4030c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030c6:	mov    edi,DWORD PTR [edi+0x1f]
  4030c9:	mov    bl,0x72
  4030cb:	imul   eax,DWORD PTR [ecx],0x31
  4030ce:	mov    al,ds:0x950ed40a
  4030d3:	jge    0x40305d
  4030d5:	call   0x106f491f
  4030da:	lahf   
  4030db:	cld    
  4030dc:	leave  
  4030dd:	mov    edi,0x610f6a61
  4030e2:	(bad)
  4030e5:	push   0x1b
  4030e7:	ss adc eax,0xc22d5876
  4030ed:	in     al,dx
  4030ee:	and    dl,BYTE PTR [eax]
  4030f0:	jns    0x4030b5
  4030f2:	not    BYTE PTR [eax]
  4030f4:	dec    esi
  4030f5:	(bad)  
  4030f6:	or     DWORD PTR [ebp+0xf6d66b8],0xffffffdc
  4030fd:	call   FWORD PTR [esi+ebx*1+0x2f]
  403101:	shl    DWORD PTR [eax+0x6386b6e8],1
  403107:	fwait
  403108:	pop    ds
  403109:	test   BYTE PTR [ebx],0xb9
  40310c:	ror    BYTE PTR [ebx+0x55],0xfb
  403110:	xor    ebp,DWORD PTR [ebp+0xdbc19f5]
  403116:	int3   
  403117:	mov    cl,0x4b
  403119:	out    dx,al
  40311a:	pop    ebp
  40311b:	(bad)  
  40311c:	mov    ecx,DWORD PTR [edi+0x44bc74d2]
  403122:	inc    ecx
  403123:	das    
  403124:	retf   
  403125:	leave  
  403126:	bound  ebp,QWORD PTR [ebx]
  403128:	test   al,0x58
  40312a:	imul   esp,eax,0xffffffbf
  40312d:	inc    DWORD PTR [eax+0x3c]
  403130:	aad    0x6
  403132:	loop   0x40317f
  403134:	and    DWORD PTR [bp+si],ecx
  403137:	or     BYTE PTR [ebp+edx*2+0x5c],0x39
  40313c:	mov    edx,ds
  40313e:	push   esp
  40313f:	pop    esi
  403140:	daa    
  403141:	sub    DWORD PTR [ecx+0x28254c87],ecx
  403147:	jbe    0x403143
  403149:	fldcw  WORD PTR [esi+0x6c]
  40314c:	mov    ds:0x7895345,eax
  403151:	mov    ah,0xa3
  403154:	lock cld 
  403156:	jle    0x40313e
  403158:	push   ss
  403159:	adc    eax,0xcdca9b0b
  40315e:	int3   
  40315f:	in     eax,dx
  403160:	pop    eax
  403161:	inc    esi
  403162:	in     eax,0x8a
  403164:	cdq    
  403165:	nop
  403166:	adc    esp,DWORD PTR ds:0xe0d07101
  40316c:	pop    ebx
  40316d:	lds    ecx,FWORD PTR ds:[edi+0x5d]
  403171:	nop
  403172:	test   eax,0xc845c40a
  403177:	push   edi
  403178:	and    DWORD PTR [ecx+0x4a],edi
  40317b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40317c:	mov    ds:0xac273e8,al
  403181:	int3   
  403182:	xchg   DWORD PTR [edi+0x52c6be77],esi
  403188:	xchg   edi,eax
  403189:	sbb    DWORD PTR [ebx+edx*2+0x7582d519],ebx
  403190:	and    eax,0xb25e5af6
  403195:	ret    
  403196:	(bad)  
  403197:	sub    BYTE PTR [ebx+0x5800e078],al
  40319d:	pop    eax
  40319e:	dec    esp
  40319f:	adc    eax,0x7f217f6c
  4031a4:	shr    DWORD PTR [eax-0x7b],0xb0
  4031a8:	sub    BYTE PTR [ebx+esi*2],bh
  4031ab:	fcmovnb st,st(6)
  4031ad:	sub    dl,al
  4031af:	lahf   
  4031b0:	pop    ecx
  4031b1:	in     al,dx
  4031b2:	bound  ecx,QWORD PTR [eax]
  4031b4:	(bad)  
  4031b5:	lahf   
  4031b6:	cmp    ch,dl
  4031b8:	aad    0xf7
  4031ba:	int    0xfe
  4031bc:	adc    eax,0xcaf5705b
  4031c1:	mov    BYTE PTR [edx],dh
  4031c3:	pusha  
  4031c4:	pop    ds
  4031c5:	mov    edx,0x27269796
  4031ca:	neg    ebp
  4031cc:	sub    bl,BYTE PTR [edx+0x4d]
  4031cf:	adc    edi,DWORD PTR [ebx+0x36]
  4031d2:	jmp    0x403222
  4031d4:	sar    DWORD PTR [eax-0x71],1
  4031d7:	ret    0x7e2b
  4031da:	cmp    al,0xef
  4031dc:	xor    esp,edx
  4031de:	adc    eax,0xa07323ce
  4031e3:	sub    BYTE PTR [esi+0x41],bl
  4031e6:	cli    
  4031e7:	(bad)  
  4031e9:	and    al,0xf0
  4031eb:	repnz xchg esp,eax
  4031ed:	xchg   esi,eax
  4031ee:	int    0xa0
  4031f0:	pop    eax
  4031f1:	arpl   WORD PTR [ecx+0x2965f597],di
  4031f7:	inc    edi
  4031f8:	daa    
  4031f9:	adc    BYTE PTR [edx+esi*4],ah
  4031fc:	mov    eax,ds:0xe591c6df
  403201:	mov    WORD PTR [eax-0x5],?
  403204:	xor    eax,0x151ef884
  403209:	data16 add bl,BYTE PTR [esi+0x7c20a0db]
  403210:	into   
  403211:	popa   
  403212:	jb     0x4031e9
  403214:	std    
  403215:	popf   
  403216:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403217:	jecxz  0x4031c5
  403219:	lea    edx,[edi-0x28]
  40321c:	outs   dx,DWORD PTR ds:[esi]
  40321d:	rcl    DWORD PTR [ebp-0x48],1
  403220:	inc    edi
  403221:	push   edx
  403222:	mov    DWORD PTR [ebx-0x4c87906f],esp
  403228:	pop    edx
  403229:	sbb    al,0x87
  40322b:	mov    bl,BYTE PTR [ebp+0x43]
  40322e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40322f:	pop    ebp
  403230:	ror    DWORD PTR [esi-0x535750f1],cl
  403236:	add    BYTE PTR [ecx+0x6a],ah
  403239:	shr    ebx,0xdb
  40323c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40323d:	add    al,0x63
  40323f:	in     al,0xb
  403241:	cmp    bl,BYTE PTR [edx]
  403243:	add    eax,0xf4ad80bc
  403248:	sbb    eax,0xd0e43b04
  40324d:	inc    esi
  40324e:	mov    ah,0x62
  403250:	adc    ebx,DWORD PTR [edx-0x747ebabb]
  403256:	pop    esi
  403257:	arpl   WORD PTR [edi],ax
  403259:	push   ecx
  40325a:	jb     0x4032cb
  40325c:	test   dh,0x2b
  40325f:	mov    eax,0x52734f38
  403264:	hlt    
  403265:	retf   0x8d27
  403268:	push   esi
  403269:	inc    ebp
  40326a:	mov    ch,0xf1
  40326c:	dec    ebx
  40326d:	mov    ecx,0x91b09421
  403272:	int3   
  403273:	popf   
  403274:	sub    eax,0xe2845614
  403279:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40327a:	dec    esp
  40327b:	cmp    eax,0x3810c40b
  403280:	mov    ds:0x77bfc580,al
  403285:	add    BYTE PTR [edi-0x2396269a],bh
  40328b:	loope  0x4032c1
  40328d:	xor    edi,DWORD PTR [edx-0x626aaab8]
  403293:	shl    DWORD PTR [eax],0x1a
  403296:	push   ebp
  403297:	mov    ebp,ecx
  403299:	fmul   QWORD PTR [ebx-0x22]
  40329c:	mov    ds:0x4f12cdf7,eax
  4032a1:	pop    ebp
  4032a2:	outs   dx,DWORD PTR ds:[esi]
  4032a3:	mov    esp,DWORD PTR [ebx+0x43]
  4032a6:	and    ecx,ebx
  4032a8:	and    bl,dl
  4032aa:	in     eax,0x6e
  4032ac:	lahf   
  4032ad:	repz adc DWORD PTR [esi],esi
  4032b0:	mov    esp,0x4d585ea8
  4032b5:	xchg   ecx,eax
  4032b6:	sub    ch,bh
  4032b8:	sti    
  4032b9:	mov    dh,0xbc
  4032bb:	sbb    eax,0xd05d53ad
  4032c0:	sbb    bh,BYTE PTR [edi-0x5ca61525]
  4032c6:	aam    0x2f
  4032c8:	cmp    bh,BYTE PTR [edi-0xf9d7d0b]
  4032ce:	sahf   
  4032cf:	in     eax,dx
  4032d0:	imul   eax,DWORD PTR [esi],0xffffffd1
  4032d3:	sub    al,0x3d
  4032d5:	out    0xc9,al
  4032d7:	je     0x403265
  4032d9:	mov    ch,0x6e
  4032db:	and    DWORD PTR [edi+0x3c],ebx
  4032de:	inc    ecx
  4032df:	imul   esp,DWORD PTR [eax+ebp*1],0xed5e433f
  4032e6:	sbb    eax,0x7a4952cf
  4032eb:	test   al,0xba
  4032ed:	outs   dx,BYTE PTR ds:[esi]
  4032ee:	jmp    0x7d659c97
  4032f3:	or     al,ch
  4032f5:	jno    0x403372
  4032f7:	in     eax,0x7a
  4032f9:	inc    eax
  4032fa:	jp     0x4032fe
  4032fc:	popf   
  4032fd:	fmul   DWORD PTR [ebp-0x4bcb5055]
  403303:	imul   edi,DWORD PTR [ebx+ebx*2-0x3f],0x9f0e90d2
  40330b:	mov    ds:0x1a84fdd3,al
  403310:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403311:	fild   QWORD PTR [ecx+ecx*1-0x2a5b15e9]
  403318:	pop    ebx
  403319:	mov    ds,WORD PTR [edi-0x1a]
  40331c:	sbb    eax,0x4dcf96c3
  403321:	push   cs
  403322:	cli    
  403323:	inc    ecx
  403324:	out    0x3d,al
  403326:	test   DWORD PTR fs:[esi+0xd],ebx
  40332a:	addr16 clc 
  40332c:	in     al,0xe5
  40332e:	dec    DWORD PTR [edi-0x3]
  403331:	iret   
  403332:	fnstcw WORD PTR [edi+ebx*2]
  403335:	shl    DWORD PTR [ebp+0x31],cl
  403338:	pop    es
  403339:	sbb    edi,eax
  40333b:	mov    al,ds:0xed4e5306
  403340:	dec    esp
  403341:	mov    ebx,0xe4794bdf
  403346:	data16 jecxz 0x40338f
  403349:	mov    ebx,0x9b4972f4
  40334e:	and    BYTE PTR [edx+esi*8+0xc4bce4e],0xd7
  403356:	mov    bl,0x8
  403358:	push   cs
  403359:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40335a:	jnp    0x403325
  40335c:	loopne 0x403385
  40335e:	and    eax,0x5ad11c4c
  403363:	add    DWORD PTR [eax+0x236d9f47],ebp
  403369:	jmp    0x6253d4ad
  40336e:	out    0xc,eax
  403370:	popf   
  403371:	stos   BYTE PTR es:[edi],al
  403372:	test   DWORD PTR [edi+ebp*2+0x47],esp
  403376:	ins    BYTE PTR es:[edi],dx
  403377:	imul   ebp,DWORD PTR [ebp+0x4e],0xadec013b
  40337e:	pop    ds
  40337f:	addr16 je 0x40331b
  403382:	inc    esp
  403383:	(bad)  
  403384:	sbb    ebx,DWORD PTR [edx+0x1b]
  403387:	and    BYTE PTR fs:[esi-0x37],0x6b
  40338c:	cld    
  40338d:	dec    ecx
  40338e:	cs push edi
  403390:	repnz sub DWORD PTR [edx+0x7434b52],ebx
  403397:	mov    ds:0x67fa84e9,al
  40339c:	js     0x403393
  40339e:	xchg   esi,eax
  40339f:	arpl   WORD PTR [ecx+0x3897f20c],di
  4033a5:	rcl    BYTE PTR [edx+0x7fe22a20],cl
  4033ab:	and    DWORD PTR [edi-0x19],ebp
  4033ae:	aas    
  4033af:	cdq    
  4033b0:	inc    DWORD PTR [eax+0x46]
  4033b3:	and    ch,bh
  4033b5:	mov    dh,dl
  4033b7:	mov    bl,0x3d
  4033b9:	call   0x33fd3924
  4033be:	push   esi
  4033bf:	cmp    al,0xd6
  4033c1:	(bad)  
  4033c2:	cld    
  4033c3:	out    0xa7,al
  4033c5:	mov    al,0x2a
  4033c7:	sub    DWORD PTR [esi],0x1b604e89
  4033cd:	idiv   BYTE PTR [ebp-0x7556741f]
  4033d3:	ja     0x4033b3
  4033d5:	add    al,0xda
  4033d7:	xchg   esp,eax
  4033d8:	push   ds
  4033d9:	ret    0xb7a1
  4033dc:	pusha  
  4033dd:	jne    0x4033ae
  4033df:	pop    ecx
  4033e0:	or     ah,dl
  4033e2:	inc    ecx
  4033e3:	jmp    0x4033e2
  4033e5:	mov    bl,0xfb
  4033e7:	(bad)  
  4033e8:	repnz xchg ebx,eax
  4033ea:	call   0xa159713
  4033ef:	jl     0x403388
  4033f1:	pop    ecx
  4033f2:	jo     0x4033ba
  4033f4:	adc    bh,0xa5
  4033f7:	scas   eax,DWORD PTR es:[edi]
  4033f8:	push   esp
  4033f9:	(bad)  
  4033fa:	mov    DWORD PTR [ebp+0x48],ebx
  4033fd:	bound  esp,QWORD PTR [ecx-0x7d]
  403400:	sub    al,0xec
  403402:	mov    ?,WORD PTR [ebx+0xf4ec6df]
  403408:	dec    eax
  403409:	cmp    eax,0x131016cb
  40340e:	in     eax,0xdc
  403410:	fistp  WORD PTR [edi-0x17e56b02]
  403416:	or     esp,ebp
  403418:	imul   eax,DWORD PTR [ecx],0x955abc9
  40341e:	(bad)  
  40341f:	xchg   esi,eax
  403420:	int    0xe3
  403422:	sbb    ah,ch
  403424:	xchg   edx,eax
  403425:	dec    eax
  403426:	(bad)  
  403428:	xor    ebp,DWORD PTR [ecx-0x57]
  40342b:	enter  0xc379,0xc5
  40342f:	mov    ah,0x60
  403431:	sbb    edi,ebp
  403433:	(bad)  
  403435:	(bad)  
  403436:	outs   dx,BYTE PTR ds:[esi]
  403437:	mov    cl,ch
  403439:	dec    esi
  40343a:	add    al,cl
  40343c:	jno    0x403402
  40343e:	push   esi
  40343f:	int3   
  403440:	ret    0x44ce
  403443:	jp     0x40341d
  403445:	push   ss
  403446:	in     eax,dx
  403447:	sub    BYTE PTR [edx],ch
  403449:	add    BYTE PTR [esi],al
  40344b:	jno    0x4034a3
  40344d:	inc    ebp
  40344e:	sbb    dl,BYTE PTR [ebp+0x65]
  403451:	inc    ecx
  403452:	cmp    al,0xe7
  403454:	mov    di,0x31b4
  403458:	mov    fs,ebx
  40345a:	test   ebx,eax
  40345c:	pop    es
  40345d:	xchg   esi,eax
  40345e:	aad    0x16
  403460:	adc    DWORD PTR [ecx+0x31f34221],esi
  403466:	icebp  
  403467:	jmp    0x4033f5
  403469:	test   BYTE PTR [esi],ch
  40346b:	pop    ecx
  40346c:	fidiv  DWORD PTR [ebx+eax*4-0x45]
  403470:	fdiv   DWORD PTR [ebp-0x5478886e]
  403476:	inc    edx
  403477:	enter  0xb5ed,0xf4
  40347b:	xchg   ebx,eax
  40347c:	inc    eax
  40347d:	shl    DWORD PTR [ecx-0x19e43c90],cl
  403483:	xchg   ebx,eax
  403484:	je     0x403489
  403486:	dec    esp
  403487:	push   eax
  403488:	lods   eax,DWORD PTR ds:[esi]
  403489:	jb     0x403443
  40348b:	repnz data16 mov al,0x91
  40348f:	ficomp DWORD PTR [edx-0x4f079f4d]
  403495:	imul   ecx,ecx,0x83761beb
  40349b:	push   eax
  40349c:	adc    DWORD PTR [esi],eax
  40349e:	or     ecx,DWORD PTR [ebx-0x7b4684a7]
  4034a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034a5:	repnz bound esp,QWORD PTR [ecx+0x18d5317e]
  4034ac:	out    0x6c,eax
  4034ae:	loope  0x4034ea
  4034b0:	xor    al,0x5f
  4034b2:	push   edx
  4034b3:	arpl   WORD PTR [ebx+0x55],sp
  4034b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034b7:	ret    
  4034b8:	xchg   esp,eax
  4034b9:	mov    bh,0x24
  4034bb:	xor    eax,0x7deb71ad
  4034c0:	lock mov al,0x51
  4034c3:	push   es
  4034c4:	pop    DWORD PTR [ebp+0x1923db3b]
  4034ca:	test   DWORD PTR [ebp-0x37],esi
  4034cd:	iret   
  4034ce:	lods   eax,DWORD PTR ds:[esi]
  4034cf:	or     DWORD PTR [edi+0x4e7d3524],esp
  4034d5:	push   es
  4034d6:	ret    0xa114
  4034d9:	gs add al,0x37
  4034dc:	dec    edx
  4034dd:	mov    bh,0xba
  4034df:	jbe    0x4034be
  4034e1:	into   
  4034e2:	xor    ecx,DWORD PTR [ecx+0x62fb8aa6]
  4034e8:	mov    bh,dh
  4034ea:	(bad)  
  4034eb:	jmp    0x40354d
  4034ed:	cmp    dh,BYTE PTR [eax-0x4deb1eab]
  4034f3:	mov    dl,BYTE PTR [esi]
  4034f5:	je     0x40352f
  4034f7:	mov    esp,0xb0bab7ea
  4034fc:	rol    BYTE PTR ds:0x5b9a77cf,1
  403502:	arpl   WORD PTR [esp+ecx*2],dx
  403505:	das    
  403506:	cs inc edx
  403508:	or     bl,BYTE PTR [esi-0x10]
  40350b:	adc    eax,0xa07c1739
  403510:	add    al,0xc0
  403512:	add    eax,0x614df0bc
  403517:	retf   
  403518:	out    dx,al
  403519:	push   ecx
  40351a:	or     eax,0xcff58af8
  40351f:	mov    esi,0xb0ee476a
  403524:	(bad)  
  403525:	in     al,dx
  403526:	mov    dh,0xd
  403528:	lock pop edi
  40352a:	jmp    0x11c7:0x40b92c0
  403531:	rep outs dx,DWORD PTR ds:[esi]
  403533:	sahf   
  403534:	aas    
  403535:	and    edi,DWORD PTR [esi-0x14]
  403538:	cmp    edx,0x38
  40353b:	or     al,0xd1
  40353d:	mov    ecx,0x650dd6b
  403542:	adc    edx,esp
  403544:	inc    edx
  403545:	pop    eax
  403546:	mov    ds:0x8bd0dd6,eax
  40354b:	xchg   ecx,eax
  40354c:	or     al,0x37
  40354e:	call   0x8a8c5977
  403553:	std    
  403554:	je     0x40358b
  403556:	repz ret 
  403558:	pop    eax
  403559:	into   
  40355a:	mov    dl,BYTE PTR [edx+0x2c160c30]
  403560:	mov    ecx,0x37b822b6
  403565:	jge    0x4035cb
  403567:	loopne 0x4035b4
  403569:	jge    0x403555
  40356b:	mov    cl,0x1a
  40356d:	loop   0x4035c8
  40356f:	xor    DWORD PTR [esi-0x4cc677d7],esp
  403575:	cld    
  403576:	xlat   BYTE PTR ds:[ebx]
  403577:	jb     0x4035be
  403579:	aas    
  40357a:	jmp    0x4035a7
  40357c:	push   edx
  40357d:	cmc    
  40357e:	adc    DWORD PTR [ebx-0x70542e30],0x7317f618
  403588:	xchg   edx,eax
  403589:	pop    ebx
  40358a:	(bad)  
  40358b:	scas   al,BYTE PTR es:[edi]
  40358c:	or     esp,0xe2b55e57
  403592:	mov    ebx,0x9748581f
  403597:	mov    esp,esp
  403599:	jne    0x4035c3
  40359b:	mov    edi,0x8917d69a
  4035a0:	cwde   
  4035a1:	shr    DWORD PTR [esi-0xb],1
  4035a4:	xchg   ebx,eax
  4035a5:	push   ds
  4035a6:	mov    ebp,gs
  4035a8:	(bad)  
  4035a9:	cdq    
  4035aa:	repnz add al,ch
  4035ad:	fcomp  QWORD PTR [ecx+edx*4]
  4035b0:	cmp    DWORD PTR [ebx+ebx*8-0x16],edx
  4035b4:	dec    edx
  4035b5:	lods   al,BYTE PTR ds:[esi]
  4035b6:	push   0xa740c9fe
  4035bb:	fst    QWORD PTR [ebp+0x36349bc]
  4035c1:	xor    DWORD PTR [edx],0x54
  4035c4:	mov    eax,edx
  4035c6:	or     bl,BYTE PTR [ecx]
  4035c8:	gs and al,0x40
  4035cb:	or     bh,dh
  4035cd:	adc    bl,dl
  4035cf:	popa   
  4035d0:	or     ebx,DWORD PTR [edi+0x57]
  4035d3:	push   ebp
  4035d4:	les    edx,FWORD PTR [ebx+0x4ddba728]
  4035da:	xlat   BYTE PTR ds:[ebx]
  4035db:	jle    0x40355d
  4035dd:	aad    0x52
  4035df:	pop    ss
  4035e0:	inc    edi
  4035e1:	sub    BYTE PTR [esi],cl
  4035e3:	repz sahf 
  4035e5:	mov    cl,0x30
  4035e7:	dec    eax
  4035e8:	sbb    BYTE PTR [ebx-0x7aeea2bb],dl
  4035ee:	adc    BYTE PTR [ecx],0x69
  4035f1:	lea    ecx,[edi+0x8]
  4035f4:	(bad)  
  4035f5:	pop    ecx
  4035f6:	mov    ebx,0x488b9795
  4035fb:	sahf   
  4035fc:	fcom   QWORD PTR cs:[edi-0x2d]
  403600:	into   
  403601:	push   ebp
  403602:	xchg   esp,eax
  403603:	pop    esp
  403604:	adc    ebp,ebx
  403606:	ss cmp al,0xaf
  403609:	xrelease xchg BYTE PTR [edi+0x4b],ch
  40360d:	ss ins BYTE PTR es:[edi],dx
  40360f:	xor    al,0x24
  403611:	jg     0x403673
  403613:	sub    al,0xcb
  403615:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403616:	imul   ebp,DWORD PTR [edi-0x4c],0x74
  40361a:	nop
  40361b:	loopne 0x403696
  40361d:	shr    DWORD PTR [edx+edi*2],1
  403620:	adc    cl,BYTE PTR [ebx-0x24e2882a]
  403626:	mov    dl,0xac
  403628:	cmp    ecx,ebx
  40362a:	call   0x5f7:0x5498d3f7
  403631:	adc    DWORD PTR [esi],esp
  403633:	addr16 mov bh,0x1
  403636:	adc    DWORD PTR [eax-0x5f0f0441],0xffffffbc
  40363d:	out    dx,al
  40363e:	jecxz  0x4035d6
  403640:	(bad)  
  403641:	mov    ds:0x78fb7351,eax
  403646:	outs   dx,BYTE PTR ds:[esi]
  403647:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403648:	push   0xce166df9
  40364d:	das    
  40364e:	lahf   
  40364f:	or     al,0xf2
  403651:	imul   ebp,DWORD PTR [ecx+0x7d],0x3e
  403655:	push   esp
  403656:	and    DWORD PTR [esi],ebx
  403658:	mov    esp,0xf71ee184
  40365d:	dec    ebx
  40365e:	inc    edi
  40365f:	add    al,0x1
  403661:	test   eax,0x75b6c468
  403666:	fld    DWORD PTR [ebp+0x7c635141]
  40366c:	fdiv   DWORD PTR [ebx+0x44196730]
  403672:	js     0x403614
  403674:	test   eax,0xd9e67147
  403679:	jno    0x40362e
  40367b:	sub    DWORD PTR [ecx],esp
  40367d:	(bad)  
  40367e:	mov    eax,0xa299865a
  403683:	xchg   esp,eax
  403684:	or     al,0xa1
  403686:	daa    
  403687:	or     ch,dh
  403689:	dec    esp
  40368a:	inc    eax
  40368b:	pop    ebx
  40368c:	scas   eax,DWORD PTR es:[edi]
  40368d:	test   al,0x63
  40368f:	lea    edx,[edx-0x35]
  403692:	or     eax,0x37f483f3
  403697:	or     eax,0x7bd0cf35
  40369c:	mov    ebx,0xc2949860
  4036a1:	test   BYTE PTR [edi+0x5e14e349],bh
  4036a7:	mov    dh,0xf7
  4036a9:	sub    DWORD PTR [edi],edi
  4036ab:	inc    esp
  4036ac:	mov    esi,0xdbcd0699
  4036b1:	mov    ecx,0x6a3d0fc7
  4036b6:	dec    esp
  4036b7:	mov    cl,dh
  4036b9:	stc    
  4036ba:	(bad)  
  4036bb:	lods   eax,DWORD PTR ds:[esi]
  4036bc:	stos   BYTE PTR es:[edi],al
  4036bd:	or     al,BYTE PTR [esi-0x3e6bc2db]
  4036c3:	and    ebp,ebx
  4036c5:	mov    ch,0xe8
  4036c7:	outs   dx,DWORD PTR ds:[esi]
  4036c8:	ja     0x4036de
  4036ca:	mov    ?,WORD PTR [ebx+ebp*8+0x25]
  4036ce:	adc    ch,cl
  4036d0:	mov    DWORD PTR [eax],ebx
  4036d2:	mov    cl,0x6d
  4036d4:	pop    ds
  4036d5:	in     al,0x7e
  4036d7:	pop    esi
  4036d8:	repz sbb al,0x12
  4036db:	mov    dl,0x2f
  4036dd:	test   al,dl
  4036df:	cli    
  4036e0:	mov    ecx,es
  4036e2:	call   0x45fc2292
  4036e7:	jns    0x4036b1
  4036e9:	hlt    
  4036ea:	mov    ?,esp
  4036ec:	or     DWORD PTR [edx-0x42268597],ebp
  4036f2:	xor    DWORD PTR [eax+eiz*8-0x6],edi
  4036f6:	cmp    BYTE PTR [edi+ebp*8],dl
  4036f9:	jmp    0x252f:0x8881d6b4
  403700:	mov    eax,ds:0x5cfc274b
  403705:	add    BYTE PTR [ebx+esi*1-0x7a484c20],0x21
  40370d:	jb     0x4036c4
  40370f:	inc    edi
  403710:	dec    esi
  403711:	push   ebx
  403712:	xchg   esp,eax
  403713:	xchg   esi,eax
  403714:	aas    
  403715:	call   0x2f60b2d1
  40371a:	aad    0x55
  40371c:	test   eax,0x921c2502
  403721:	jo     0x40379f
  403723:	jae    0x403783
  403725:	xor    ah,BYTE PTR [esi]
  403727:	dec    edx
  403728:	addr16 pop ds
  40372a:	pop    edi
  40372b:	arpl   si,ax
  40372d:	xor    ebp,ecx
  40372f:	aad    0xc
  403731:	test   BYTE PTR [ebx+0x3e7e58c9],cl
  403737:	daa    
  403738:	xchg   edi,eax
  403739:	aaa    
  40373a:	sub    al,0x5e
  40373c:	jnp    0x40378c
  40373e:	sub    al,0xe1
  403740:	lods   eax,DWORD PTR ds:[esi]
  403741:	leave  
  403742:	xor    ah,ch
  403744:	pop    ss
  403745:	xchg   esp,eax
  403746:	sub    BYTE PTR [ebp+0x77bf7eb1],ah
  40374c:	dec    ebp
  40374d:	mov    ebp,0xb6800b3b
  403752:	ss push edi
  403754:	gs cwde 
  403756:	sbb    BYTE PTR [ebp-0x21dee4b3],0x25
  40375d:	mov    bh,0xf6
  40375f:	int3   
  403760:	xchg   ebp,eax
  403761:	push   edx
  403762:	jnp    0x403703
  403764:	mov    WORD PTR [ecx],?
  403766:	into   
  403767:	out    0xc5,eax
  403769:	push   ecx
  40376a:	ins    BYTE PTR es:[edi],dx
  40376b:	aam    0xbf
  40376d:	dec    ebp
  40376e:	push   edx
  40376f:	xchg   edx,eax
  403770:	cmp    eax,0x62ba8f98
  403775:	fwait
  403776:	cdq    
  403777:	in     eax,dx
  403778:	cmp    BYTE PTR [ebp+eiz*2+0x6c458cf8],dh
  40377f:	cmp    BYTE PTR [esp+ecx*1-0x3b],0x2
  403784:	scas   eax,DWORD PTR es:[edi]
  403785:	out    0x47,eax
  403787:	pop    edx
  403788:	cmp    BYTE PTR [esi+0x77d49c1a],dl
  40378e:	pushf  
  40378f:	push   edi
  403790:	ds dec esp
  403792:	mov    bl,BYTE PTR [ebp-0x2d]
  403795:	or     ah,bh
  403797:	shl    BYTE PTR [ecx-0x28adfcf4],0x65
  40379e:	cmc    
  40379f:	fdiv   st,st(1)
  4037a1:	stos   BYTE PTR es:[edi],al
  4037a2:	ds dec eax
  4037a4:	and    eax,0xa8025c9e
  4037a9:	rol    DWORD PTR [eax-0x61],cl
  4037ac:	add    dh,BYTE PTR [esi+0x73]
  4037af:	xor    al,0x45
  4037b1:	inc    DWORD PTR [edi-0x1f2fe851]
  4037b7:	pop    ebp
  4037b8:	stos   BYTE PTR es:[edi],al
  4037b9:	inc    esi
  4037ba:	pop    ebp
  4037bb:	std    
  4037bc:	stos   BYTE PTR es:[edi],al
  4037bd:	push   ecx
  4037be:	cli    
  4037bf:	call   0x9c3a:0x2c066b54
  4037c6:	dec    ebp
  4037c7:	popf   
  4037c8:	es popa 
  4037ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4037cb:	xor    dl,al
  4037cd:	pop    edx
  4037ce:	(bad)  
  4037cf:	aad    0x31
  4037d1:	inc    ecx
  4037d2:	leave  
  4037d3:	loop   0x4037d9
  4037d5:	(bad)  
  4037d6:	imul   edx,DWORD PTR [ebp-0x5b887ac2],0x1f522799
  4037e0:	out    0x5d,eax
  4037e2:	mov    ecx,ss
  4037e4:	cdq    
  4037e5:	nop
  4037e6:	addr16 mov bh,0x66
  4037e9:	enter  0xd457,0xd4
  4037ed:	aaa    
  4037ee:	bnd jbe 0x403804
  4037f1:	aaa    
  4037f2:	pop    eax
  4037f3:	lock neg DWORD PTR [ebp+ebp*1-0x206eead6]
  4037fb:	ds (bad) 
  4037fd:	and    ecx,DWORD PTR [ecx]
  4037ff:	cmp    edx,DWORD PTR [ecx+0x22557b92]
  403805:	cmc    
  403806:	and    esi,esi
  403808:	xchg   edi,eax
  403809:	out    0xa,eax
  40380b:	(bad)  
  40380c:	xchg   edx,eax
  40380d:	cs in  al,dx
  40380f:	push   ds
  403810:	adc    ch,bh
  403812:	loope  0x40383d
  403814:	add    bh,BYTE PTR [ecx-0x78]
  403817:	fcom   st(4)
  403819:	mov    al,ds:0x346f2597
  40381e:	(bad)  
  40381f:	hlt    
  403820:	xor    edx,ecx
  403822:	push   0x78
  403824:	jo     0x4037f7
  403826:	jno    0x40385a
  403828:	mov    WORD PTR [esi-0x5e],gs
  40382b:	cmp    esi,ebp
  40382d:	and    BYTE PTR [eax+eiz*1+0xb],bh
  403831:	(bad)  
  403832:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403833:	xor    al,0xc8
  403835:	packsswb mm4,QWORD PTR [ebx-0x40ec2287]
  40383c:	enter  0x9a52,0xbe
  403840:	popa   
  403841:	test   esi,ecx
  403843:	int    0xa2
  403845:	pop    edi
  403846:	ins    DWORD PTR es:[edi],dx
  403847:	cmp    BYTE PTR [edx+ebp*8-0x58],ch
  40384b:	bound  esi,QWORD PTR [ebx-0x59afccc3]
  403851:	jmp    0x138859c2
  403856:	dec    esi
  403857:	cmp    eax,0x7334cd30
  40385c:	or     ebx,eax
  40385e:	pop    ss
  40385f:	cld    
  403860:	ja     0x4038ce
  403862:	sub    al,0xa6
  403864:	jmp    0x8ad7:0x1419dba3
  40386b:	out    dx,eax
  40386c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40386d:	mov    esp,0x8ebc33e4
  403872:	sub    BYTE PTR [edx+0x72c84f48],al
  403878:	pop    edi
  403879:	rcl    BYTE PTR [edi-0x78bb3a74],0x97
  403880:	cmp    BYTE PTR [edi-0x4d8480a4],dl
  403886:	ins    DWORD PTR es:[edi],dx
  403887:	mov    ebp,0xf32d86fd
  40388c:	retf   0x6a56
  40388f:	mov    esi,0xf77e0f5c
  403894:	adc    eax,0x80c449ca
  403899:	mov    ebx,0xa49a8a4e
  40389e:	xor    ebp,DWORD PTR [edi-0x7287a364]
  4038a4:	mov    BYTE PTR [ecx+0x64d3350c],ch
  4038aa:	cwde   
  4038ab:	mov    ebp,DWORD PTR [eax-0x77]
  4038ae:	xchg   ebx,eax
  4038af:	jmp    0x1bef8c92
  4038b4:	repnz pop ebx
  4038b6:	xchg   ecx,eax
  4038b7:	or     al,0xb5
  4038b9:	setbe  BYTE PTR [esi+eax*4-0x2b]
  4038be:	hlt    
  4038bf:	jae    0x403900
  4038c1:	dec    edx
  4038c2:	stc    
  4038c3:	push   esp
  4038c4:	and    al,dh
  4038c6:	in     eax,0x29
  4038c8:	lea    ecx,[esi-0x514d891d]
  4038ce:	jge    0x403932
  4038d0:	in     eax,0x29
  4038d2:	adc    ah,BYTE PTR [ebx-0x2b0f8d22]
  4038d8:	xchg   esp,eax
  4038d9:	das    
  4038da:	popf   
  4038db:	mov    al,0x4
  4038dd:	and    eax,0x70495479
  4038e2:	mov    bh,0x62
  4038e4:	mov    dl,0xf0
  4038e6:	pushf  
  4038e7:	sti    
  4038e8:	mov    bl,0xf2
  4038ea:	xchg   edi,eax
  4038eb:	lods   al,BYTE PTR ds:[esi]
  4038ec:	scas   al,BYTE PTR es:[edi]
  4038ed:	imul   edi,DWORD PTR [ebx],0xf05efa9e
  4038f3:	scas   al,BYTE PTR es:[edi]
  4038f4:	lahf   
  4038f5:	mov    dl,0x8c
  4038f7:	mov    ebp,0x931598ea
  4038fc:	sub    esp,0x62
  4038ff:	imul   edi,DWORD PTR [edx+0x43],0x9b887de4
  403906:	dec    ecx
  403907:	shl    cl,1
  403909:	fdivr  st(1),st
  40390b:	daa    
  40390c:	call   0x9f0a50e8
  403911:	add    esi,DWORD PTR [esp+eiz*2-0x66799313]
  403918:	scas   al,BYTE PTR es:[edi]
  403919:	call   0xda6dcab3
  40391e:	cmp    dl,bl
  403920:	shl    BYTE PTR [ebp-0x68d9dfb],1
  403926:	hlt    
  403927:	popf   
  403928:	sbb    edx,DWORD PTR [edi]
  40392a:	adc    dh,BYTE PTR [edi]
  40392c:	xor    al,0x52
  40392e:	pop    edi
  40392f:	retf   
  403930:	cld    
  403931:	(bad)  
  403933:	jne    0x40394f
  403935:	fisubr DWORD PTR [ebx-0x18]
  403938:	ja     0x4038e6
  40393a:	pop    ds
  40393b:	pop    ebx
  40393c:	sub    esi,edi
  40393e:	cs ins BYTE PTR es:[edi],dx
  403940:	stos   BYTE PTR es:[edi],al
  403941:	jmp    0x154f:0x77e2f64c
  403948:	fldenv [eax-0x59]
  40394b:	sti    
  40394c:	pop    ss
  40394d:	adc    eax,0x8b2e7f5
  403952:	jnp    0x40398e
  403954:	xchg   esi,eax
  403955:	js     0x4038f2
  403957:	lahf   
  403958:	xor    DWORD PTR [edx],eax
  40395a:	rcl    BYTE PTR [ebx+edx*2-0xa],1
  40395e:	sbb    esi,DWORD PTR [edi-0x1197d782]
  403964:	or     eax,edi
  403966:	or     DWORD PTR [ebp+eiz*2-0x2a],0xffffffa6
  40396b:	and    eax,0xcfe2614e
  403970:	or     esi,DWORD PTR [ecx]
  403972:	scas   eax,DWORD PTR es:[edi]
  403973:	mov    WORD PTR [ebp+0x72],?
  403976:	mov    ebp,0x3d1b31a7
  40397b:	mov    WORD PTR [eax],gs
  40397d:	dec    edx
  40397e:	mov    edi,DWORD PTR [ecx+0x69]
  403981:	adc    DWORD PTR [esi],edi
  403983:	shr    DWORD PTR [eax],0x14
  403986:	iret   
  403987:	mov    dh,0xc8
  403989:	xor    DWORD PTR [bx],ecx
  40398c:	lds    esi,FWORD PTR [esi]
  40398e:	sub    cl,BYTE PTR [edi]
  403990:	mov    ds:0xca3dd2e2,al
  403995:	lea    esi,[eax-0x28]
  403998:	cld    
  403999:	dec    ebx
  40399a:	imul   eax,DWORD PTR [edx+ebx*2+0x759f48a2],0x12
  4039a2:	cld    
  4039a3:	add    DWORD PTR [edx+eiz*4],0xffffffb3
  4039a7:	inc    eax
  4039a8:	shr    DWORD PTR [esi+ebx*1],0xbc
  4039ac:	ins    BYTE PTR es:[edi],dx
  4039ad:	scas   eax,DWORD PTR es:[edi]
  4039ae:	popf   
  4039af:	pop    ds
  4039b0:	xchg   ecx,eax
  4039b1:	push   ds
  4039b2:	pusha  
  4039b3:	jecxz  0x40394f
  4039b5:	(bad)
  4039b8:	rol    BYTE PTR [edx+0x62149bd5],1
  4039be:	fcomi  st,st(1)
  4039c0:	pusha  
  4039c1:	imul   ebp,DWORD PTR [ecx],0x6ccf493e
  4039c7:	pop    edi
  4039c8:	addr16 call 0xc8c0895b
  4039ce:	outs   dx,DWORD PTR ds:[esi]
  4039cf:	loopne 0x40395e
  4039d1:	fld    QWORD PTR [ebp+0x31]
  4039d4:	das    
  4039d5:	push   ecx
  4039d6:	loope  0x40397c
  4039d8:	push   eax
  4039da:	into   
  4039db:	lods   eax,DWORD PTR ds:[esi]
  4039dc:	retf   
  4039dd:	dec    eax
  4039de:	repnz xor BYTE PTR [ebp-0x522c0e95],ch
  4039e5:	push   eax
  4039e6:	es push esi
  4039e8:	js     0x403997
  4039ea:	mov    ds:0x509b5dc3,al
  4039ef:	out    dx,eax
  4039f0:	xor    BYTE PTR [ebx-0x35d41a45],al
  4039f6:	leave  
  4039f7:	aas    
  4039f8:	push   ds
  4039f9:	dec    esp
  4039fa:	mov    bh,0xe9
  4039fc:	outs   dx,BYTE PTR ds:[esi]
  4039fe:	xchg   ebp,eax
  4039ff:	test   eax,0x9109973d
  403a04:	cmp    bh,BYTE PTR ds:0xc87244d4
  403a0a:	pop    eax
  403a0b:	cmp    ch,dl
  403a0d:	pop    edi
  403a0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a0f:	int3   
  403a10:	and    eax,DWORD PTR [ebx+ebp*4+0x2e]
  403a14:	xchg   edx,eax
  403a15:	inc    ecx
  403a16:	sbb    eax,0xa9e1a0fd
  403a1b:	dec    ebp
  403a1c:	mov    al,dl
  403a1e:	and    eax,eax
  403a20:	cwde   
  403a21:	sbb    eax,DWORD PTR [ebp+0x5fadaab]
  403a27:	int3   
  403a28:	dec    ecx
  403a29:	sub    BYTE PTR [eax+0x73],0x71
  403a2d:	leave  
  403a2e:	jge    0x4039ca
  403a30:	int    0xb
  403a32:	jbe    0x4039b7
  403a34:	or     al,0xa5
  403a36:	jmp    0x84a4:0xc550193b
  403a3d:	retf   
  403a3e:	mov    cl,0x10
  403a40:	or     ch,BYTE PTR [esi]
  403a42:	xchg   ebp,eax
  403a43:	ins    DWORD PTR es:[edi],dx
  403a44:	mov    dl,BYTE PTR [eax]
  403a46:	(bad)  
  403a47:	sbb    BYTE PTR [ebx-0x60],dl
  403a4a:	mov    dl,BYTE PTR [eax-0xe]
  403a4d:	lods   al,BYTE PTR ds:[esi]
  403a4f:	stc    
  403a50:	aas    
  403a51:	fld    QWORD PTR [edx-0x42a1d3c9]
  403a57:	fbld   TBYTE PTR [ecx]
  403a59:	loopne 0x403a31
  403a5b:	mul    cl
  403a5d:	outs   dx,BYTE PTR ds:[esi]
  403a5e:	aam    0x9f
  403a60:	test   BYTE PTR [ecx+0x38],0x51
  403a64:	dec    esp
  403a65:	push   edx
  403a66:	xchg   BYTE PTR [ecx],ch
  403a68:	or     esp,DWORD PTR [ebx+0x5e]
  403a6b:	mov    eax,ds:0xe41cdb73
  403a70:	mov    BYTE PTR [edx],bh
  403a72:	cmp    al,BYTE PTR [esi]
  403a74:	mov    eax,ds:0xe8f069ef
  403a79:	ins    DWORD PTR es:[edi],dx
  403a7a:	xchg   BYTE PTR [edi+ecx*8],bl
  403a7d:	add    eax,0xff6a2c7a
  403a82:	or     eax,DWORD PTR [ebx]
  403a84:	jae    0x403a33
  403a86:	(bad)  
  403a87:	cmovns ebx,ebp
  403a8a:	call   0x587d:0x2c1a6dca
  403a91:	sbb    eax,0x226e26c
  403a96:	mov    bh,0xac
  403a98:	add    BYTE PTR ds:[eax-0x7261f0a],ah
  403a9f:	les    edx,FWORD PTR [ecx-0x40d346a8]
  403aa5:	test   DWORD PTR [ebp+0x50],edi
  403aa8:	jb     0x403aba
  403aaa:	outs   dx,DWORD PTR ds:[esi]
  403aab:	daa    
  403aac:	cld    
  403aad:	dec    ebx
  403aae:	mov    ch,0xf4
  403ab0:	(bad)  
  403ab1:	cmp    BYTE PTR [edi-0x61d6d231],ah
  403ab7:	and    al,BYTE PTR [ecx+edx*8]
  403aba:	xchg   edi,eax
  403abb:	imul   edx,ebx,0xffffffb0
  403abe:	dec    ecx
  403abf:	push   ds
  403ac0:	dec    edx
  403ac1:	mov    ah,0xf2
  403ac3:	xchg   ecx,eax
  403ac4:	push   edi
  403ac5:	sar    BYTE PTR ds:0xc6b8f274,cl
  403acb:	imul   bh
  403acd:	aaa    
  403ace:	push   0x5e
  403ad0:	pop    ss
  403ad1:	jmp    0x2bd67ea6
  403ad6:	mov    bl,0x21
  403ad8:	jmp    0xaba9:0x6f580177
  403adf:	test   DWORD PTR [ebx],0x41cf8f97
  403ae5:	pop    edx
  403ae6:	lds    ebx,FWORD PTR [edx]
  403ae8:	sbb    ebx,ebp
  403aea:	cli    
  403aeb:	mov    edi,0x3ffe97e7
  403af0:	pushf  
  403af1:	push   ss
  403af2:	mov    edi,DWORD PTR [edi-0x275d89dd]
  403af8:	push   edi
  403af9:	cmp    dh,BYTE PTR [ebp-0x46]
  403afc:	test   DWORD PTR [eax-0x222457bf],esi
  403b02:	test   al,0xf9
  403b04:	retf   0xb627
  403b07:	adc    esi,eax
  403b09:	popa   
  403b0a:	adc    DWORD PTR [eax+0x42],esi
  403b0d:	mov    ah,0xc4
  403b0f:	dec    edx
  403b10:	xchg   edx,eax
  403b11:	test   edi,0xf11255b7
  403b17:	inc    esi
  403b18:	xchg   esp,eax
  403b19:	fldpi  
  403b1b:	or     dl,BYTE PTR [ebx+0x5e78a8be]
  403b21:	lds    esp,FWORD PTR [edi]
  403b23:	js     0x403ace
  403b25:	and    DWORD PTR [esi-0x2aa56f7a],esp
  403b2b:	adc    ah,BYTE PTR cs:[edx+0x7]
  403b2f:	scas   al,BYTE PTR es:[edi]
  403b30:	add    DWORD PTR [ecx-0x7dd762cc],ecx
  403b36:	pop    ebx
  403b37:	into   
  403b38:	inc    esp
  403b39:	inc    esi
  403b3a:	dec    ebp
  403b3b:	cmp    eax,0xa046f94f
  403b40:	or     DWORD PTR [esi-0x4685962e],eax
  403b46:	repnz neg BYTE PTR [edi+0x18]
  403b4a:	dec    edi
  403b4b:	test   al,0x22
  403b4d:	and    eax,0xb80c31b0
  403b52:	(bad)  
  403b53:	stos   DWORD PTR es:[edi],eax
  403b54:	out    dx,al
  403b55:	cdq    
  403b56:	scas   al,BYTE PTR es:[edi]
  403b57:	mov    ch,0x1d
  403b59:	add    edi,eax
  403b5b:	pop    ebx
  403b5c:	ja     0x403bd9
  403b5e:	mov    cl,cl
  403b60:	test   eax,0x53343cb
  403b65:	mov    edi,0xeb3e4ae4
  403b6a:	jbe    0x403b42
  403b6c:	fst    DWORD PTR [ecx+ecx*4]
  403b6f:	fadd   DWORD PTR ds:0x4d12ed31
  403b75:	fwait
  403b76:	adc    BYTE PTR [ecx+ebx*4+0x27],dl
  403b7a:	mov    eax,ds:0x483837be
  403b7f:	xor    edi,0xffffff95
  403b82:	push   cs
  403b83:	inc    ebx
  403b84:	fst    st(4)
  403b86:	and    BYTE PTR [eax+0x732a0edb],0x8c
  403b8d:	push   esp
  403b8e:	(bad)  
  403b8f:	adc    eax,0x385e65b7
  403b94:	int    0x41
  403b96:	pop    es
  403b97:	int    0x7
  403b99:	sti    
  403b9a:	mov    dl,0xbd
  403b9c:	pop    esp
  403b9d:	mov    ds:0x86fe1ab4,eax
  403ba2:	pop    ebx
  403ba3:	push   cs
  403ba4:	sub    bh,BYTE PTR [ebp+0x36]
  403ba7:	mov    bl,0x8f
  403ba9:	mov    dh,0xa6
  403bab:	call   0x8d34:0xbcd4c677
  403bb2:	sbb    cl,BYTE PTR [eax+ebx*1+0x67]
  403bb6:	inc    esp
  403bb7:	fwait
  403bb8:	rol    DWORD PTR [esp+ecx*8],0x2d
  403bbc:	sbb    BYTE PTR [ebp-0x5e],bl
  403bbf:	cmp    al,0xa9
  403bc1:	fcomp  DWORD PTR [edx-0x42615cee]
  403bc7:	pusha  
  403bc8:	mov    ah,0xae
  403bca:	ins    DWORD PTR es:[edi],dx
  403bcb:	sub    dh,dh
  403bcd:	mov    eax,0x4f2c66e5
  403bd2:	add    eax,0xdfd0237b
  403bd7:	pop    edx
  403bd8:	fld    TBYTE PTR [ecx]
  403bda:	mov    cl,0x21
  403bdc:	pop    ebp
  403bdd:	mov    bh,BYTE PTR [ebx-0x77ea65c]
  403be3:	clc    
  403be4:	mov    dl,0x69
  403be6:	push   ebp
  403be7:	cmp    bl,BYTE PTR [eax]
  403be9:	and    BYTE PTR [eax+0x5127019d],bh
  403bef:	adc    esi,esi
  403bf1:	sub    esp,ecx
  403bf3:	dec    esi
  403bf4:	xor    DWORD PTR [edx-0x7a2c9d67],ebp
  403bfa:	call   0x1413:0xac561348
  403c01:	mov    DWORD PTR [edi+0x4e32a836],ebp
  403c07:	repz in al,0x35
  403c0a:	inc    edi
  403c0b:	lock jb 0x403c60
  403c0e:	icebp  
  403c0f:	inc    ebx
  403c10:	imul   eax
  403c12:	out    dx,al
  403c13:	inc    ebx
  403c14:	iret   
  403c15:	mov    ds:0xb4c08c76,al
  403c1a:	pushf  
  403c1b:	sar    dh,0x99
  403c1e:	mov    dl,0x25
  403c20:	pusha  
  403c21:	xor    eax,DWORD PTR [edi]
  403c23:	sbb    BYTE PTR [ebp+0x1e2025d0],0x8
  403c2a:	scas   eax,DWORD PTR es:[edi]
  403c2b:	in     eax,0xb
  403c2d:	shl    DWORD PTR [edx],cl
  403c2f:	imul   ebp,DWORD PTR [ebx],0xe9ef8e3
  403c35:	or     dh,BYTE PTR [esi+eax*8+0x6cc431b6]
  403c3c:	mov    al,0x20
  403c3e:	xchg   ebp,eax
  403c3f:	ds icebp 
  403c41:	retf   0x3558
  403c44:	call   0x8927:0xa1e5dbd3
  403c4b:	cdq    
  403c4c:	bound  ecx,QWORD PTR [eax+ecx*8-0x63f0c112]
  403c53:	mov    eax,ds:0x6f8dc7bb
  403c58:	push   0x21
  403c5a:	shr    esp,cl
  403c5c:	out    0x25,al
  403c5e:	ins    BYTE PTR es:[edi],dx
  403c5f:	out    0xb8,al
  403c61:	inc    ecx
  403c62:	jl     0x403ccf
  403c64:	stos   BYTE PTR es:[edi],al
  403c65:	add    BYTE PTR [edi-0x7ccae42d],ch
  403c6b:	sbb    esi,DWORD PTR [edx-0xd]
  403c6e:	adc    DWORD PTR [ebp-0x3e47dc19],edx
  403c74:	push   eax
  403c75:	imul   ch
  403c77:	jnp    0x403c54
  403c79:	mov    ah,0x15
  403c7b:	clc    
  403c7c:	xor    eax,0x64b4722b
  403c81:	and    dl,BYTE PTR [esp]
  403c84:	sbb    BYTE PTR [ecx],0x7c
  403c87:	setg   BYTE PTR [ecx]
  403c8a:	pushf  
  403c8b:	sbb    DWORD PTR [ecx-0x68],esp
  403c8e:	inc    ebx
  403c8f:	and    ah,bh
  403c91:	mov    cs,WORD PTR [esi+esi*4+0x66e2a139]
  403c98:	sub    al,0x4d
  403c9a:	loop   0x403c4f
  403c9c:	or     dl,BYTE PTR ds:0x1e28209c
  403ca2:	jns    0x403c28
  403ca4:	xchg   DWORD PTR [ebx+0x5465acd],edx
  403caa:	xchg   DWORD PTR [ebx+0x48],ebp
  403cad:	or     ebx,edi
  403caf:	das    
  403cb0:	mov    ecx,0x992a190e
  403cb5:	fisttp WORD PTR ds:0x2297fc43
  403cbb:	sahf   
  403cbc:	imul   esp,DWORD PTR [edx],0xffffff9c
  403cbf:	repz imul ebx,DWORD PTR [edx],0xffffffb0
  403cc3:	fdivr  QWORD PTR [ebx+0x584c78c6]
  403cc9:	loope  0x403c89
  403ccb:	mov    cl,0xa8
  403ccd:	jmp    0x61edb17d
  403cd2:	into   
  403cd3:	pop    es
  403cd4:	adc    BYTE PTR [ebx-0x451023d3],bl
  403cda:	pop    ss
  403cdb:	and    DWORD PTR [ebp+0x67],edx
  403cde:	push   esp
  403cdf:	into   
  403ce0:	xor    al,0x4e
  403ce2:	xor    DWORD PTR [ecx+0x608d74a5],edi
  403ce8:	minps  xmm6,XMMWORD PTR [edi+eax*1-0x3cd078b5]
  403cf0:	dec    ebp
  403cf1:	xor    edx,DWORD PTR [esi-0x6]
  403cf4:	jp     0x403ca8
  403cf6:	sahf   
  403cf7:	jns    0x403cbf
  403cf9:	xchg   ax,ax
  403cfb:	or     eax,0x88aae745
  403d00:	push   eax
  403d01:	int3   
  403d02:	repnz sahf 
  403d04:	test   eax,0x35d9bbb4
  403d09:	inc    esi
  403d0a:	cmp    bl,BYTE PTR [edi+0x25]
  403d0d:	mov    DWORD PTR [ecx+ecx*8+0x1e],ecx
  403d11:	rep ins DWORD PTR es:[edi],dx
  403d13:	jo     0x403c9c
  403d15:	sub    esi,DWORD PTR [edi+eiz*8-0x10]
  403d19:	mov    ecx,0xf43a1140
  403d1e:	pop    ss
  403d1f:	dec    ebp
  403d20:	xor    al,0x6f
  403d22:	or     dl,BYTE PTR ds:0x1727a459
  403d28:	call   0xe5be:0xc96ae912
  403d2f:	mov    edx,0x1c68697f
  403d34:	fidivr DWORD PTR [edx+0x1b]
  403d37:	push   cs
  403d38:	pop    esi
  403d39:	lock pop edx
  403d3b:	sub    eax,0xcb231b6e
  403d40:	dec    esp
  403d41:	(bad)  
  403d42:	pop    edx
  403d43:	fsub   st(6),st
  403d45:	push   esp
  403d46:	fcomp  DWORD PTR [edi-0x8d9d79c]
  403d4c:	mov    esp,0xed1ee367
  403d51:	add    DWORD PTR [edi],ecx
  403d53:	scas   eax,DWORD PTR es:[edi]
  403d54:	ror    DWORD PTR [ebx+0x488f85d],cl
  403d5a:	sbb    cl,BYTE PTR [ebx+0x558bd045]
  403d60:	hlt    
  403d61:	xor    eax,esi
  403d63:	add    eax,edi
  403d65:	jmp    0x4060d5
  403d6a:	scas   al,BYTE PTR es:[edi]
  403d6b:	pushf  
  403d6c:	and    al,0xa
  403d6e:	add    al,0x82
  403d70:	test   BYTE PTR [eax+eiz*4+0x62488d78],bl
  403d77:	adc    DWORD PTR [ecx+0xe],eax
  403d7a:	das    
  403d7b:	pop    edi
  403d7c:	jp     0x403df8
  403d7e:	das    
  403d7f:	pop    edi
  403d80:	jp     0x403dfc
  403d82:	and    eax,0xdc0b87f0
  403d87:	pushf  
  403d88:	pop    cx
  403d8a:	jne    0x403d7f
  403d8c:	or     dh,BYTE PTR [ecx-0x399a918a]
  403d92:	jmp    0x403d40
  403d94:	call   0x473a:0x88b4375
  403d9b:	shl    edi,1
  403d9d:	cmp    DWORD PTR [edx+ebx*2+0x53],0xba036bd8
  403da5:	out    dx,eax
  403da6:	mov    al,0xb2
  403da8:	mov    eax,ds:0x23fe16ac
  403dad:	lahf   
  403dae:	mov    esi,0x35b8c104
  403db3:	mov    ecx,0xca2788df
  403db8:	mov    eax,ds:0x8e547263
  403dbd:	add    bl,ah
  403dbf:	push   edi
  403dc0:	ss out dx,al
  403dc2:	cmp    BYTE PTR [ebp+0x77],ch
  403dc5:	cmc    
  403dc6:	sub    bl,BYTE PTR [ebp+0x9]
  403dc9:	fstp   TBYTE PTR [ebx+0x6c]
  403dcc:	xchg   ebp,eax
  403dcd:	adc    BYTE PTR [ecx+edi*4],0x27
  403dd1:	shl    DWORD PTR [edx+0x5f9b88f7],0xe1
  403dd8:	pop    esi
  403dd9:	imul   BYTE PTR [edi]
  403ddb:	or     dh,0x8b
  403dde:	repz (bad) [esi-0x3e]
  403de2:	add    BYTE PTR ds:0x394b9c1a,0x1a
  403de9:	dec    esi
  403dea:	sti    
  403deb:	pop    ebx
  403dec:	mov    esp,0xf11e2ee7
  403df1:	out    dx,eax
  403df2:	mov    cl,0x2c
  403df4:	inc    ecx
  403df5:	leave  
  403df6:	fidiv  WORD PTR [ecx]
  403df8:	ror    cl,0xd5
  403dfb:	cli    
  403dfc:	leave  
  403dfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403dfe:	sub    cl,0xf3
  403e01:	imul   ecx,DWORD PTR [edx-0x3a913e7a],0xf3949ba9
  403e0b:	inc    edx
  403e0c:	mov    ebx,0xa8c88848
  403e11:	xor    dh,BYTE PTR [ebp-0x60]
  403e14:	push   ebp
  403e15:	pusha  
  403e16:	mov    ds:0x1c4a4245,eax
  403e1b:	mov    esp,0xbcd1041f
  403e20:	and    BYTE PTR [edi],cl
  403e22:	push   ebp
  403e23:	push   cs
  403e24:	dec    esi
  403e25:	aas    
  403e26:	loope  0x403dd9
  403e28:	ret    0x1565
  403e2b:	mov    ds:0xcbcf5736,al
  403e30:	mov    DWORD PTR [edx-0x5b],eax
  403e33:	rcr    DWORD PTR [esi+ecx*4+0x49d07c27],cl
  403e3a:	xchg   DWORD PTR [ecx-0x9],eax
  403e3d:	xor    al,0x9d
  403e3f:	pop    esp
  403e40:	test   al,0x36
  403e42:	rcl    DWORD PTR [ebx+edx*2-0x457cd99d],cl
  403e49:	or     DWORD PTR [ecx+ebx*2],edi
  403e4c:	fcmove st,st(2)
  403e4e:	dec    ebp
  403e4f:	arpl   WORD PTR ds:0x14debb76,bp
  403e55:	mov    BYTE PTR ss:[esi],ah
  403e58:	xchg   edi,eax
  403e59:	jmp    0xd477a72c
  403e5e:	daa    
  403e5f:	jmp    0x403ebf
  403e61:	mov    bh,BYTE PTR [edi]
  403e63:	xchg   ecx,eax
  403e64:	or     dh,ah
  403e66:	pop    es
  403e67:	cmp    cl,dl
  403e69:	daa    
  403e6a:	cli    
  403e6b:	xchg   edi,eax
  403e6c:	icebp  
  403e6d:	inc    ecx
  403e6e:	jo     0x403e83
  403e70:	cli    
  403e71:	in     al,dx
  403e72:	mov    al,ds:0xf2953692
  403e77:	pop    ecx
  403e78:	mov    ds:0xe20fe43c,eax
  403e7d:	dec    eax
  403e7e:	cli    
  403e7f:	xor    eax,0x775e2d6d
  403e84:	mov    ds:0x998f53d7,eax
  403e89:	mov    al,BYTE PTR [edi+0x28]
  403e8c:	mov    edi,0xb81cc99d
  403e91:	push   0x346eaa7a
  403e96:	mov    ch,0xc1
  403e98:	pop    esi
  403e99:	inc    esp
  403e9a:	test   ebx,esp
  403e9c:	cmp    DWORD PTR [esi-0x346a9fac],0xc087a19f
  403ea6:	and    DWORD PTR [edi+0x67275f7f],0x3c
  403ead:	xchg   edi,eax
  403eae:	add    eax,0xe54d739c
  403eb3:	push   edx
  403eb4:	cmc    
  403eb5:	inc    edi
  403eb6:	mov    cs,WORD PTR [esi-0x44]
  403eb9:	dec    ecx
  403eba:	cld    
  403ebb:	stos   BYTE PTR es:[edi],al
  403ebc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ebd:	push   0x199c9430
  403ec2:	mov    ebp,0xaad77b01
  403ec7:	call   0xaf38:0x49b03647
  403ece:	sub    DWORD PTR [edx],eax
  403ed0:	mov    ebp,0xb27e53d0
  403ed5:	xor    DWORD PTR [ebp+0x31],0xffffffae
  403ed9:	cmp    DWORD PTR [edi-0x7e18bcb0],esi
  403edf:	sar    BYTE PTR [ebp+0x3bbcbb32],cl
  403ee5:	fwait
  403ee6:	mov    cl,0x59
  403ee8:	mov    ah,BYTE PTR [edi-0x548f93d8]
  403eee:	pushf  
  403eef:	push   edx
  403ef0:	pop    esi
  403ef1:	les    esp,FWORD PTR [ebp-0x56601bd6]
  403ef7:	retf   0x2fa9
  403efa:	xchg   ecx,eax
  403efb:	iret   
  403efc:	in     al,0x77
  403efe:	les    edi,FWORD PTR [esi]
  403f00:	mov    bh,0x67
  403f02:	pop    edx
  403f03:	scas   eax,DWORD PTR es:[edi]
  403f04:	pushf  
  403f05:	sbb    esp,DWORD PTR [ecx]
  403f07:	ds jns 0x403f1d
  403f0a:	enter  0x8297,0xcb
  403f0e:	mov    WORD PTR [edi+0x2e431d9b],gs
  403f14:	enter  0x5063,0xe0
  403f18:	jo     0x403f73
  403f1a:	ret    0xa855
  403f1d:	push   0x74c99fad
  403f22:	loopne 0x403f5f
  403f24:	jbe    0x403f02
  403f26:	jecxz  0x403ebc
  403f28:	mov    al,ds:0x57c3f44
  403f2d:	mov    ah,0x67
  403f2f:	adc    al,0x63
  403f31:	xor    ebp,DWORD PTR [edi]
  403f33:	xchg   ecx,eax
  403f34:	mov    ebp,0x6cd49d64
  403f39:	inc    eax
  403f3a:	out    0xb7,eax
  403f3c:	scas   al,BYTE PTR es:[edi]
  403f3d:	fcomp  QWORD PTR [esi-0x46930858]
  403f43:	mov    ds:0x195ec7ec,eax
  403f48:	imul   edi,DWORD PTR [esp+eax*1-0x5],0xffffffad
  403f4d:	or     BYTE PTR [edx+0x26080a09],cl
  403f53:	cld    
  403f54:	push   edx
  403f55:	fidivr DWORD PTR [esi+0x7d084ee]
  403f5b:	cs mov esi,0x71b19948
  403f61:	and    eax,DWORD PTR [edx+0x260a5ca0]
  403f67:	push   edx
  403f68:	es adc cl,dl
  403f6b:	sbb    ebx,edx
  403f6d:	popf   
  403f6e:	psraw  mm6,QWORD PTR [eax-0x13]
  403f72:	jl     0x403fcf
  403f74:	cmp    al,0xe4
  403f76:	mov    al,0xea
  403f78:	ret    
  403f79:	leave  
  403f7a:	mov    esp,0x607f2b9b
  403f7f:	xchg   esi,eax
  403f80:	cmc    
  403f81:	dec    eax
  403f82:	out    dx,eax
  403f83:	pop    edx
  403f84:	or     eax,0xfbfec320
  403f89:	dec    edx
  403f8a:	pop    esp
  403f8b:	loop   0x403f54
  403f8d:	call   DWORD PTR [eax+0x7cd7a0eb]
  403f93:	mov    al,0xd6
  403f95:	sub    al,0xd8
  403f97:	and    BYTE PTR [eax+0x10],cl
  403f9a:	sub    DWORD PTR [ecx+0x5411f7c],0xffffff9e
  403fa1:	mov    dl,0xa0
  403fa3:	inc    eax
  403fa4:	loopne 0x40400e
  403fa6:	pusha  
  403fa7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fa9:	or     DWORD PTR [ebp+0x87b7f2c],edx
  403faf:	clc    
  403fb0:	jo     0x403f92
  403fb2:	xor    ecx,eax
  403fb4:	arpl   WORD PTR [ecx-0x46],bp
  403fb7:	cmc    
  403fb8:	mov    ah,0x91
  403fba:	mov    dl,0x14
  403fbc:	adc    eax,0x270950bc
  403fc1:	repz add al,0xe9
  403fc4:	sbb    ebx,DWORD PTR [ebx+0x24]
  403fc7:	xchg   DWORD PTR [ebx-0x6dd041c3],ebp
  403fcd:	pusha  
  403fce:	pop    ss
  403fcf:	repz iret 
  403fd1:	in     al,dx
  403fd2:	rcl    BYTE PTR [ecx],0x5b
  403fd5:	and    esi,edi
  403fd7:	dec    esp
  403fd8:	scas   al,BYTE PTR es:[edi]
  403fd9:	int    0xe0
  403fdb:	retf   
  403fdc:	lds    eax,FWORD PTR [ecx-0x32]
  403fdf:	or     al,0x72
  403fe1:	mov    bl,BYTE PTR [ecx+0x3a]
  403fe4:	mov    cl,0xfe
  403fe6:	dec    DWORD PTR [ebp+0x1d]
  403fe9:	sub    BYTE PTR [esi],bl
  403feb:	or     DWORD PTR [edi+0x0],esi
  403fee:	jp     0x404019
  403ff0:	dec    eax
  403ff1:	ja     0x403ff4
  403ff3:	into   
  403ff4:	mov    es,ecx
  403ff6:	popf   
  403ff7:	and    eax,0x68f94d49
  403ffc:	lods   al,BYTE PTR ds:[esi]
  403ffd:	enter  0x35ad,0x25
  404001:	mov    ebx,0xcf918001
  404006:	jb     0x403f89
  404008:	pop    ebp
  404009:	jo     0x40403d
  40400b:	cli    
  40400c:	push   0xffffff8f
  40400e:	jg     0x403f9f
  404010:	push   edi
  404011:	cmc    
  404012:	push   ebx
  404013:	xor    BYTE PTR [ebx-0x54],dl
  404016:	mul    esi
  404018:	fsubr  DWORD PTR ds:0x25514cdc
  40401e:	ror    dh,1
  404020:	pop    ebx
  404021:	repz ret 0xaabf
  404025:	jbe    0x403fd0
  404027:	test   eax,0x68bd3e31
  40402c:	xchg   edi,eax
  40402d:	push   edi
  40402e:	pop    esp
  40402f:	shl    DWORD PTR es:[ebx-0x3a],1
  404033:	ds loop 0x40403a
  404036:	jne    0x40408d
  404038:	out    dx,al
  404039:	pop    ds
  40403a:	retf   0x5eb7
  40403d:	test   al,0xc5
  40403f:	adc    BYTE PTR [ebx-0xe83018a],0x6a
  404046:	push   ecx
  404047:	push   eax
  404048:	daa    
  404049:	cmp    edi,ebx
  40404b:	sub    edi,DWORD PTR [eax-0x6153cfc1]
  404051:	scas   al,BYTE PTR es:[edi]
  404052:	lahf   
  404053:	jecxz  0x4040a2
  404055:	clc    
  404056:	fisub  WORD PTR [edx+edx*2+0x4d]
  40405a:	int3   
  40405b:	mov    bl,0xcb
  40405d:	add    al,BYTE PTR [ebx-0x51]
  404060:	pop    ds
  404061:	adc    DWORD PTR [edi-0x22],esp
  404064:	mov    dl,0x85
  404066:	adc    BYTE PTR [ebx-0x60],al
  404069:	sbb    DWORD PTR [esi],0xffd76bc1
  40406f:	xchg   esi,eax
  404070:	pop    ecx
  404071:	add    al,0xaa
  404073:	and    BYTE PTR [ebx+esi*1-0x7fd1cc28],0x25
  40407b:	scas   al,BYTE PTR es:[edi]
  40407c:	and    BYTE PTR [ecx-0x725b3c8d],ch
  404082:	pushf  
  404083:	lods   eax,DWORD PTR ds:[esi]
  404084:	sub    eax,esi
  404086:	sar    dh,cl
  404088:	jmp    0x4040b4
  40408a:	mov    dl,0xd4
  40408c:	test   al,0xf5
  40408e:	inc    eax
  40408f:	out    0x65,al
  404091:	pop    es
  404092:	jae    0x40407d
  404094:	out    0x93,al
  404096:	inc    esi
  404097:	or     eax,0x2b2fe48c
  40409c:	not    DWORD PTR [eax+0x65]
  40409f:	inc    ebp
  4040a0:	(bad)  
  4040a1:	out    dx,eax
  4040a2:	sub    eax,0x1e4b3354
  4040a7:	lds    ebp,FWORD PTR [eax+0x6]
  4040aa:	push   esi
  4040ab:	ret    0xea0e
  4040ae:	pushf  
  4040af:	arpl   WORD PTR [ebx-0x443e18d],si
  4040b5:	pop    ds
  4040b6:	push   0xb8d54c3d
  4040bb:	inc    BYTE PTR [ebp+0x2c4faa29]
  4040c1:	fmul   DWORD PTR [eax-0x24]
  4040c4:	inc    esi
  4040c5:	and    dh,BYTE PTR fs:0x3f74506e
  4040cc:	push   es
  4040cd:	jo     0x404088
  4040cf:	pop    esp
  4040d0:	dec    edx
  4040d1:	pop    ebp
  4040d2:	push   edx
  4040d3:	ds jno 0x40409f
  4040d6:	pop    ds
  4040d7:	sbb    cl,BYTE PTR [ecx-0x4c2b0064]
  4040dd:	mov    eax,ds:0x40ab225f
  4040e2:	push   eax
  4040e3:	enter  0x9e2a,0x85
  4040e7:	inc    eax
  4040e8:	cmc    
  4040e9:	pop    eax
  4040ea:	sub    esi,ecx
  4040ec:	jp     0x4040cc
  4040ee:	cdq    
  4040ef:	jge    0x4040eb
  4040f1:	jmp    0x77ce:0x48681019
  4040f8:	add    ebx,DWORD PTR [ebx]
  4040fa:	fnstenv [esi+0x54834bd8]
  404100:	adc    DWORD PTR [edi+edx*2-0x4400ee1d],edx
  404107:	ss dec edx
  404109:	stos   BYTE PTR es:[edi],al
  40410a:	sbb    ah,ah
  40410c:	mov    ds:0x19e5360a,al
  404111:	mov    edx,0xb67a0ce9
  404116:	or     ebx,esp
  404118:	sbb    eax,0xc703d0ad
  40411d:	mov    dh,0xc1
  40411f:	mov    WORD PTR [edx-0x32],es
  404122:	aam    0x7e
  404124:	or     ch,ah
  404126:	jmp    0xa4e89f33
  40412b:	cmp    al,0x12
  40412d:	sub    eax,0x20e54861
  404132:	popf   
  404133:	cmp    BYTE PTR [eax+0x43],ch
  404136:	addr16 pop eax
  404138:	test   al,0xc8
  40413a:	jp     0x404198
  40413c:	add    al,0xd6
  40413e:	cmp    BYTE PTR [edx-0x1db76c6c],bh
  404144:	inc    ebx
  404145:	mov    bh,0xd0
  404147:	int    0x7a
  404149:	mov    ebp,0x5954680b
  40414e:	pop    esp
  40414f:	pop    ss
  404150:	cmp    ebp,edi
  404152:	lahf   
  404153:	imul   esp,DWORD PTR [ebx+0x79],0x520c1740
  40415a:	and    ebx,DWORD PTR [esp+eiz*2+0x27]
  40415e:	mov    BYTE PTR [esp+eax*1],0xa6
  404162:	scas   eax,DWORD PTR es:[edi]
  404163:	jp     0x4041b9
  404165:	(bad)  
  404166:	fmul   DWORD PTR [eax+0x7e]
  404169:	out    0xd0,eax
  40416b:	icebp  
  40416c:	jno    0x404181
  40416e:	jbe    0x404177
  404170:	scas   eax,DWORD PTR es:[edi]
  404171:	xlat   BYTE PTR ds:[ebx]
  404172:	adc    BYTE PTR [ebx+ebp*8+0x2c],ah
  404176:	shl    BYTE PTR [esi-0x6],1
  404179:	inc    edi
  40417a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40417b:	sbb    ah,BYTE PTR [esi+0x51b8f04d]
  404181:	adc    BYTE PTR [eax-0x6b833580],0x8f
  404188:	adc    BYTE PTR [edi-0x5c9baa31],bl
  40418e:	fnstcw WORD PTR [eax-0x2f]
  404191:	jae    0x4041e2
  404193:	les    ecx,FWORD PTR [edi-0x5d]
  404196:	leave  
  404197:	sub    cl,BYTE PTR [esi]
  404199:	and    ecx,edx
  40419b:	jecxz  0x404162
  40419d:	addr16 pop esp
  40419f:	sbb    DWORD PTR [ebp+edx*4+0x1d305a65],eax
  4041a6:	xor    dl,bh
  4041a8:	stc    
  4041a9:	retf   0x3d61
  4041ac:	lods   eax,DWORD PTR ds:[esi]
  4041ad:	js     0x4041a9
  4041af:	sub    eax,0xc6c2aefb
  4041b4:	dec    ecx
  4041b5:	jbe    0x4041e4
  4041b7:	std    
  4041b8:	mov    eax,0x62a3577c
  4041bd:	mov    eax,0xc0ccd3c2
  4041c2:	mov    ds:0xac88839c,al
  4041c7:	mov    edi,0x76c422e4
  4041cc:	inc    edi
  4041cd:	jne    0x404231
  4041cf:	or     eax,0x73aaf4c3
  4041d4:	sbb    ah,cl
  4041d6:	mov    ah,0xc
  4041d8:	into   
  4041d9:	jmp    0xb05aa480
  4041de:	outs   dx,WORD PTR ds:[esi]
  4041e0:	sub    DWORD PTR [eax+0x66],edi
  4041e3:	aad    0x49
  4041e5:	mov    ss,WORD PTR [ecx+0x6b]
  4041e8:	(bad)  ds:0x3694607
  4041ee:	mov    ah,0xe
  4041f0:	push   eax
  4041f1:	clc    
  4041f2:	loop   0x4041df
  4041f4:	lods   al,BYTE PTR ds:[esi]
  4041f5:	inc    esp
  4041f6:	adc    edx,esp
  4041f8:	(bad)  
  4041f9:	pop    edx
  4041fa:	jbe    0x404211
  4041fc:	jl     0x404265
  4041fe:	mov    bh,0xd2
  404200:	adc    BYTE PTR [edi],bh
  404202:	cmp    eax,0x91e6955f
  404207:	(bad)  
  404208:	push   ebp
  404209:	loop   0x4041a2
  40420b:	push   es
  40420c:	inc    edi
  40420d:	xchg   edi,eax
  40420e:	rol    DWORD PTR [ebp-0x3b],cl
  404211:	popf   
  404212:	mov    ebx,DWORD PTR [ebp+eax*8-0x13d3842d]
  404219:	cmp    BYTE PTR [edx],ch
  40421b:	lods   al,BYTE PTR ds:[esi]
  40421c:	jb     0x404248
  40421e:	xor    ebp,edi
  404220:	lods   al,BYTE PTR ds:[esi]
  404221:	in     al,dx
  404222:	adc    BYTE PTR [esi-0x498fbc63],dh
  404228:	test   al,0x55
  40422a:	xor    eax,0x2e0aabcf
  40422f:	dec    ecx
  404230:	ins    BYTE PTR es:[edi],dx
  404231:	mov    al,0xec
  404233:	lods   al,BYTE PTR ds:[esi]
  404234:	mov    esp,ss
  404236:	lock cdq 
  404238:	sbb    DWORD PTR [eax+edx*4+0x19ca41af],ecx
  40423f:	pop    ebp
  404240:	out    0x85,al
  404242:	test   BYTE PTR [edi-0x32a468f4],cl
  404248:	jns    0x404210
  40424a:	cmp    eax,0x7a093303
  40424f:	mov    cl,0xca
  404251:	pop    ecx
  404252:	out    dx,eax
  404253:	inc    ebx
  404254:	push   ebp
  404255:	cld    
  404256:	jmp    0xecdc301e
  40425b:	scas   eax,DWORD PTR es:[edi]
  40425c:	cwde   
  40425d:	inc    eax
  40425e:	rcl    DWORD PTR [ebx-0x337cfc0e],0xa4
  404265:	mov    ss:0xf06f269c,eax
  40426b:	jo     0x4042de
  40426d:	xor    eax,0x39228e5c
  404272:	test   BYTE PTR [edi+0x49],cl
  404275:	push   edx
  404276:	sub    ch,dh
  404278:	clc    
  404279:	ss sub eax,ebp
  40427c:	xchg   al,dh
  40427e:	in     eax,0x1a
  404280:	pop    ecx
  404281:	imul   ebx,DWORD PTR [edx+edi*2],0xec17c6cf
  404288:	push   cs
  404289:	xor    al,0xcb
  40428b:	ja     0x404295
  40428d:	pop    ebp
  40428e:	and    eax,DWORD PTR [ecx-0x23]
  404291:	call   0x7174:0xaa4b55b1
  404298:	dec    esi
  404299:	fistp  DWORD PTR [ecx]
  40429b:	mov    al,ds:0x98053aa8
  4042a0:	into   
  4042a1:	add    cl,bh
  4042a3:	lods   eax,DWORD PTR ds:[esi]
  4042a4:	sbb    bh,al
  4042a6:	lods   al,BYTE PTR ds:[esi]
  4042a7:	out    dx,eax
  4042a8:	pushf  
  4042a9:	add    eax,ebp
  4042ab:	cdq    
  4042ac:	popa   
  4042ad:	(bad)  [ecx]
  4042af:	leave  
  4042b0:	ss scas eax,DWORD PTR es:[edi]
  4042b2:	fadd   DWORD PTR [ebx-0x52]
  4042b5:	sub    cl,BYTE PTR [esi]
  4042b7:	xchg   edi,eax
  4042b8:	mov    ds:0x6c1edf3a,eax
  4042bd:	push   ds
  4042be:	shr    ebx,0x41
  4042c1:	ins    BYTE PTR es:[edi],dx
  4042c2:	(bad)  
  4042c3:	add    dh,BYTE PTR [ebx]
  4042c5:	sub    DWORD PTR [esi-0x61e5a71f],edi
  4042cb:	jno    0x40427c
  4042cd:	sbb    DWORD PTR [esp+ebp*2],ebx
  4042d0:	imul   ecx,DWORD PTR ds:0x8ed0fa7a,0x992afea2
  4042da:	aas    
  4042db:	test   BYTE PTR [ecx+0x2e],dh
  4042de:	mov    al,ds:0x77766a6
  4042e3:	cmp    ebx,DWORD PTR ds:0xa987045f
  4042e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4042ea:	add    edi,eax
  4042ec:	fstp   DWORD PTR [ecx+0x735fd6f8]
  4042f2:	mov    DWORD PTR [ebx+0x60b03864],eax
  4042f8:	fadd   st,st(3)
  4042fa:	jmp    0xd185:0xc78e7c12
  404301:	ins    BYTE PTR es:[edi],dx
  404302:	lods   al,BYTE PTR ds:[esi]
  404303:	adc    ch,BYTE PTR [eax+0x3e8abc57]
  404309:	cmp    bl,BYTE PTR [esi+0x2f]
  40430c:	pop    esp
  40430d:	xchg   edi,eax
  40430e:	fs sbb eax,0xe9658080
  404314:	jmp    0x7c6e145f
  404319:	rol    BYTE PTR [edx+0x67],cl
  40431c:	xor    esi,DWORD PTR [edx+esi*4]
  40431f:	adc    BYTE PTR [eax+0xa],cl
  404322:	mov    DWORD PTR [edi+0x6abfc634],eax
  404328:	repz ret 0xae86
  40432c:	jae    0x4042df
  40432e:	call   0x397c:0x70e15ca
  404335:	cmc    
  404336:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404337:	push   esi
  404338:	sbb    eax,0xb3903060
  40433d:	ds cdq 
  40433f:	and    cl,BYTE PTR [edi+edi*8]
  404342:	test   BYTE PTR ds:0xc061b7b8,al
  404348:	pop    ebx
  404349:	jo     0x4043b0
  40434b:	aaa    
  40434c:	(bad)  
  40434d:	ins    DWORD PTR es:[edi],dx
  40434e:	mov    edx,0x6bf15431
  404353:	sbb    al,0x63
  404355:	dec    esp
  404356:	hlt    
  404357:	ret    0x2941
  40435a:	jmp    0xb5cc:0x5e92d495
  404361:	loop   0x4043b6
  404363:	mov    esi,0x40f6075a
  404368:	je     0x404393
  40436a:	mov    DWORD PTR [edx*1-0x2c4aa6cf],edx
  404371:	sub    esi,DWORD PTR [edx]
  404373:	mov    ah,0x4
  404375:	shl    bh,0x52
  404378:	stos   DWORD PTR es:[edi],eax
  404379:	(bad)  
  40437a:	ret    
  40437b:	scas   eax,DWORD PTR es:[edi]
  40437c:	enter  0x8a27,0xbe
  404380:	xchg   ebx,eax
  404381:	sub    edi,edx
  404383:	call   0x42e8:0x2cac27c2
  40438a:	lods   al,BYTE PTR ds:[esi]
  40438b:	jge    0x4043e1
  40438d:	retf   0xd9d1
  404390:	dec    edx
  404391:	loope  0x404341
  404393:	hlt    
  404394:	xlat   BYTE PTR ds:[ebx]
  404395:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404397:	or     BYTE PTR [edi],dl
  404399:	xchg   ebx,eax
  40439a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40439b:	mul    ebp
  40439d:	adc    BYTE PTR [ebx+0x7c],0x83
  4043a1:	push   esp
  4043a2:	cmp    BYTE PTR [edx+eiz*1],ah
  4043a5:	call   DWORD PTR [ebp+0x77]
  4043a8:	loopne 0x40433e
  4043aa:	add    BYTE PTR [edx+0x4a5dd93],0x3a
  4043b1:	push   eax
  4043b2:	push   ds
  4043b3:	add    BYTE PTR [edi+0x77],dl
  4043b6:	test   BYTE PTR [edx+ebx*1-0x35],bh
  4043ba:	std    
  4043bb:	jmp    0x404345
  4043bd:	ins    BYTE PTR es:[edi],dx
  4043be:	xchg   DWORD PTR ds:0x341a6992,edi
  4043c4:	xchg   ebp,eax
  4043c5:	aad    0x22
  4043c7:	loope  0x404391
  4043c9:	xchg   ecx,eax
  4043ca:	cs icebp 
  4043cc:	adc    al,0x4
  4043ce:	retf   
  4043cf:	and    cl,BYTE PTR [edx+0x34]
  4043d2:	je     0x40436d
  4043d4:	jmp    0xa723:0xb184d399
  4043db:	sub    DWORD PTR [esi],ebp
  4043dd:	and    al,0x3e
  4043df:	jnp    0x4043a5
  4043e1:	cmp    eax,0x125dbbde
  4043e6:	dec    ecx
  4043e7:	fmul   st(7),st
  4043e9:	and    eax,0x2c053fb6
  4043ee:	push   ebx
  4043ef:	lea    ebx,[ebp+0x4c]
  4043f2:	repz enter 0xe27a,0x96
  4043f7:	lahf   
  4043f8:	add    ebp,DWORD PTR [edx-0x6e]
  4043fb:	add    DWORD PTR [edx+0x23],edi
  4043fe:	pop    ss
  4043ff:	test   DWORD PTR [ebx],ecx
  404401:	pop    ebp
  404402:	jmp    0xc997524a
  404407:	loop   0x404390
  404409:	sbb    dh,BYTE PTR [esi-0x29]
  40440c:	push   0x1b201fe2
  404411:	push   ss
  404412:	xchg   ebp,eax
  404413:	push   0x1a
  404415:	rol    cl,cl
  404417:	cmp    al,0x19
  404419:	xlat   BYTE PTR ds:[ebx]
  40441a:	mov    al,ds:0xd75c78ee
  40441f:	pusha  
  404420:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404421:	or     BYTE PTR [esi+ebp*4],bl
  404424:	out    dx,al
  404425:	push   edi
  404426:	fdivr  DWORD PTR [esi+esi*8]
  404429:	aam    0x88
  40442b:	xor    DWORD PTR [ecx-0x61],edi
  40442e:	mov    al,0x2b
  404430:	mov    ds,WORD PTR [ebx]
  404432:	inc    edi
  404433:	mov    eax,0x81619f94
  404438:	mov    ebx,0xa71da58c
  40443d:	sahf   
  40443e:	xor    DWORD PTR [ebx],edi
  404440:	scas   al,BYTE PTR es:[edi]
  404441:	add    al,0xf8
  404443:	mov    bl,0x35
  404445:	or     DWORD PTR [esi+0x39],ecx
  404448:	dec    edi
  404449:	dec    esp
  40444a:	fisttp DWORD PTR ds:0xee56d01c
  404450:	push   0xd70d78d7
  404455:	push   cs
  404456:	adc    eax,0x9566a48d
  40445b:	aas    
  40445c:	jnp    0x404489
  40445e:	and    bh,BYTE PTR gs:[ecx+0x15]
  404462:	cld    
  404463:	jg     0x404432
  404465:	push   cs
  404466:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404467:	fdivr  DWORD PTR [ebp+eax*1+0x14eb76e6]
  40446e:	arpl   sp,bx
  404470:	jmp    0x404454
  404472:	pop    edi
  404473:	les    ebx,FWORD PTR [ebx]
  404475:	and    al,BYTE PTR [esp+ebp*2]
  404478:	push   edx
  404479:	out    dx,al
  40447a:	fcomp  QWORD PTR [edi]
  40447c:	xlat   BYTE PTR ds:[ebx]
  40447d:	cdq    
  40447e:	gs out 0xb9,al
  404481:	(bad)  
  404482:	mov    cl,0x72
  404484:	adc    edi,DWORD PTR [ecx-0x66dfa04c]
  40448a:	jno    0x40447d
  40448c:	stos   BYTE PTR es:[edi],al
  40448d:	(bad)  
  40448e:	mov    al,0x9
  404490:	mov    edi,0xbd04c7ca
  404495:	jnp    0x4044dc
  404497:	mov    gs,WORD PTR [esi+ebx*1]
  40449a:	stc    
  40449b:	adc    esi,DWORD PTR [edx-0x50766413]
  4044a1:	out    0x68,al
  4044a3:	push   ebp
  4044a4:	cmp    BYTE PTR [esi-0x10],ah
  4044a7:	loopne 0x404508
  4044a9:	add    bl,BYTE PTR [ecx]
  4044ab:	dec    edi
  4044ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044ad:	mov    ch,0x89
  4044af:	pop    eax
  4044b0:	mov    ecx,0x883d34be
  4044b5:	fstp   DWORD PTR [eax]
  4044b7:	xor    ch,BYTE PTR fs:[ebx-0x7941b54f]
  4044be:	inc    edi
  4044bf:	mov    al,ds:0x645636ec
  4044c4:	ds xchg ebx,eax
  4044c6:	in     eax,0x3e
  4044c8:	jne    0x4044da
  4044ca:	adc    DWORD PTR [edx+0x60],ecx
  4044cd:	cmp    esi,DWORD PTR [edx]
  4044cf:	ja     0x404484
  4044d1:	mov    esp,0xfe18604f
  4044d6:	adc    eax,DWORD PTR [edi+0x6d08fbf0]
  4044dc:	cld    
  4044dd:	push   ebp
  4044de:	or     ecx,eax
  4044e0:	add    ebx,eax
  4044e2:	xchg   ebp,eax
  4044e3:	pusha  
  4044e4:	jp     0x4044c3
  4044e6:	jg     0x4044c9
  4044e8:	xlat   BYTE PTR ds:[ebx]
  4044e9:	dec    ebp
  4044ea:	mov    esi,0xf91981df
  4044ef:	mov    dl,0xa8
  4044f1:	xchg   esp,eax
  4044f2:	mov    ds:0xe681d6b1,al
  4044f7:	in     eax,dx
  4044f8:	dec    edx
  4044f9:	repz lea esi,[ecx+0xd]
  4044fd:	cmp    BYTE PTR [ebx+ecx*2+0x12561bcf],al
  404504:	out    dx,eax
  404505:	sbb    esi,DWORD PTR [ecx]
  404507:	lea    eax,[ebx+esi*8+0x7c]
  40450b:	sbb    BYTE PTR [edx-0x44],ch
  40450e:	clc    
  40450f:	mov    fs,WORD PTR [eax-0x1b]
  404512:	mov    eax,0x9c5aba3c
  404517:	cdq    
  404518:	test   BYTE PTR [eax+ebp*8-0xe12c336],bh
  40451f:	jne    0x404560
  404521:	es icebp 
  404523:	pop    ebp
  404524:	cmp    DWORD PTR [ebp-0x24],edi
  404527:	jmp    0x47b290c0
  40452c:	cmp    DWORD PTR [edi+0x11],ecx
  40452f:	jae    0x404598
  404531:	das    
  404532:	push   ss
  404533:	ds push ss
  404535:	pop    es
  404536:	imul   dh
  404538:	fwait
  404539:	mov    edi,ebp
  40453b:	ret    0xad07
  40453e:	xlat   BYTE PTR ds:[ebx]
  40453f:	ins    DWORD PTR es:[edi],dx
  404540:	mov    dl,0xe1
  404542:	stos   DWORD PTR es:[edi],eax
  404543:	push   ds
  404544:	int    0x4e
  404546:	rcl    dh,cl
  404548:	sbb    ah,BYTE PTR [ecx+0x1a7db365]
  40454e:	push   ebp
  40454f:	sbb    DWORD PTR [esi+0x59],0x36
  404553:	je     0x404537
  404555:	sbb    dh,BYTE PTR [ecx]
  404557:	stos   BYTE PTR es:[edi],al
  404558:	(bad)  
  404559:	arpl   WORD PTR [ebp-0x256fe3f6],di
  40455f:	cmp    esi,esi
  404561:	(bad)  
  404562:	sub    eax,0xa331622b
  404567:	repnz fldln2 
  40456a:	xor    al,0xae
  40456c:	out    dx,eax
  40456d:	adc    bh,al
  40456f:	idiv   BYTE PTR ds:[esi+ecx*1]
  404573:	mov    al,ds:0x25a04e61
  404578:	cmp    al,0x7a
  40457a:	push   ds
  40457b:	lock inc edi
  40457d:	sbb    eax,0xbb21b219
  404582:	or     DWORD PTR ds:0xc051c397,0xffffffbe
  404589:	push   esp
  40458a:	pop    edx
  40458b:	in     eax,dx
  40458c:	je     0x404544
  40458e:	bound  eax,QWORD PTR [edx-0x21]
  404591:	aam    0x3c
  404593:	sub    DWORD PTR [edx-0x3209a6c4],ebp
  404599:	mov    cl,0x4c
  40459b:	pushf  
  40459c:	fisub  WORD PTR [edi-0x5d]
  40459f:	popf   
  4045a0:	sbb    BYTE PTR ss:[edi+0x4eac6d75],bl
  4045a7:	inc    esp
  4045a8:	push   ecx
  4045a9:	dec    esi
  4045aa:	dec    edx
  4045ab:	fsubr  DWORD PTR [ecx-0x19]
  4045ae:	xor    al,0xbe
  4045b0:	add    edi,DWORD PTR [ecx]
  4045b2:	pop    es
  4045b3:	mov    edx,0x98433e14
  4045b8:	scas   al,BYTE PTR es:[edi]
  4045b9:	pop    ds
  4045ba:	xor    ah,BYTE PTR [edi]
  4045bc:	ja     0x4045ef
  4045be:	mov    ebp,0x80440c26
  4045c3:	cmp    BYTE PTR [eax-0x16f428c9],bh
  4045c9:	call   0x81ae3fad
  4045ce:	test   al,0xb4
  4045d0:	dec    ebp
  4045d1:	sbb    esp,DWORD PTR ds:0xdd5c3d3a
  4045d7:	ss daa 
  4045d9:	test   al,0xaf
  4045db:	push   ss
  4045dc:	int3   
  4045dd:	xchg   edx,esp
  4045df:	fsubr  QWORD PTR [ecx+0x5f04131e]
  4045e5:	adc    BYTE PTR [edx],dh
  4045e7:	cdq    
  4045e8:	mov    edi,0x8242cf2c
  4045ed:	mov    bl,0x2d
  4045ef:	ins    BYTE PTR es:[edi],dx
  4045f0:	xor    al,dl
  4045f2:	pop    ebx
  4045f3:	sbb    eax,0xe869167a
  4045f8:	adc    al,0x30
  4045fa:	stc    
  4045fb:	lahf   
  4045fc:	ins    BYTE PTR es:[edi],dx
  4045fd:	daa    
  4045fe:	jp     0x404606
  404600:	mov    esi,0x3fcd3e6c
  404605:	icebp  
  404606:	arpl   bp,si
  404608:	xchg   esi,eax
  404609:	js     0x40464d
  40460b:	sub    eax,0x5a32d67c
  404610:	pop    edi
  404611:	loope  0x4045f4
  404613:	push   ecx
  404614:	fs aam 0xfd
  404617:	push   eax
  404618:	adc    eax,DWORD PTR [esi]
  40461a:	lods   al,BYTE PTR ds:[esi]
  40461b:	jne    0x40460f
  40461d:	loope  0x4045e7
  40461f:	ds or  al,0xd1
  404622:	push   edi
  404623:	mov    ecx,0x1e9e889b
  404628:	push   eax
  404629:	cmp    BYTE PTR [ecx],dl
  40462b:	xchg   dl,dh
  40462d:	sub    ecx,DWORD PTR [ebx]
  40462f:	push   es
  404630:	or     eax,0xde42dca4
  404635:	or     cl,BYTE PTR [ebx]
  404637:	sbb    DWORD PTR [esi-0x762e6199],ebp
  40463d:	mov    ebp,0xb718deed
  404642:	add    ebp,esi
  404644:	adc    eax,edx
  404646:	mov    dh,0xaf
  404648:	mov    ebx,0xb1437cf8
  40464d:	xor    al,0xdd
  40464f:	out    dx,al
  404650:	sbb    ch,BYTE PTR [edi]
  404652:	jge    0x4046b2
  404654:	or     DWORD PTR [ecx+0xc9358f1],ecx
  40465a:	mov    ecx,ss
  40465c:	push   edi
  40465d:	xor    BYTE PTR [ebx+ebx*8],ah
  404660:	repz and ecx,DWORD PTR [ecx+edx*2]
  404664:	jns    0x404609
  404666:	mov    eax,0x79d2fe68
  40466b:	fld    TBYTE PTR [edi+0x29fdf1c6]
  404671:	cdq    
  404672:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404673:	push   edi
  404674:	(bad)
  404677:	(bad)  
  404679:	mov    bh,0x88
  40467b:	mov    eax,0x64b8709b
  404680:	enter  0x9caf,0xe7
  404684:	adc    BYTE PTR [eax+ebp*8-0x1c9ab5d0],dl
  40468b:	leave  
  40468c:	inc    esi
  40468d:	lahf   
  40468e:	adc    BYTE PTR [edi],al
  404690:	xor    dl,ah
  404692:	les    edx,FWORD PTR [ecx+ebx*1]
  404695:	xchg   ebp,eax
  404696:	outs   dx,BYTE PTR ds:[esi]
  404697:	cmp    BYTE PTR [esi-0x3e],bh
  40469a:	xchg   esp,eax
  40469b:	mov    esp,0xce584ae3
  4046a0:	pop    es
  4046a1:	sub    ebp,DWORD PTR [esi-0x2d]
  4046a4:	and    DWORD PTR [edi-0x485c332d],ebx
  4046aa:	dec    esi
  4046ab:	sub    esp,DWORD PTR [ebp-0x68c307e5]
  4046b1:	bound  ebp,QWORD PTR [esi+0x19f7967d]
  4046b7:	retf   
  4046b8:	mov    ah,0x23
  4046ba:	mov    cl,0xed
  4046bc:	dec    esi
  4046bd:	ja     0x40471a
  4046bf:	fiadd  WORD PTR [ecx+0x7f]
  4046c2:	xchg   DWORD PTR [ebp+0x6087a266],eax
  4046c8:	leave  
  4046c9:	sti    
  4046ca:	in     al,dx
  4046cb:	mov    ebp,0x1f78de74
  4046d0:	mov    bl,0xe6
  4046d2:	jmp    0x9bc5:0x6137100d
  4046d9:	sbb    eax,0x322a761d
  4046de:	mov    al,ds:0x64fd9ef5
  4046e3:	dec    ecx
  4046e4:	xor    BYTE PTR [eax-0x48],bl
  4046e7:	imul   edx,DWORD PTR [ebp-0x7f002a29],0xd790b287
  4046f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046f2:	ficomp DWORD PTR [edi-0x5820c616]
  4046f8:	mov    WORD PTR [esi+0x1039231d],es
  4046fe:	mov    ebx,0x8bb5eee5
  404703:	loop   0x4046c7
  404705:	aam    0x1a
  404707:	push   ebp
  404708:	push   ds
  404709:	leave  
  40470a:	inc    ebp
  40470b:	push   ebp
  40470c:	jnp    0x4046bc
  40470e:	xchg   DWORD PTR [eax],ebx
  404710:	or     DWORD PTR [eax-0x7f9cc910],edx
  404716:	sbb    al,0xbd
  404718:	fnstenv [esi]
  40471a:	push   edi
  40471b:	xor    BYTE PTR [ebp+0x10505cb5],0x8f
  404722:	dec    esi
  404723:	xor    ebp,ecx
  404725:	in     eax,dx
  404726:	mov    ebx,0x49e80fc
  40472b:	into   
  40472c:	pop    edi
  40472d:	out    0xe5,al
  40472f:	cmp    DWORD PTR [edx-0x7ea9e6f],ecx
  404735:	repnz mov eax,ds:0x7aee4e3f
  40473b:	mov    esi,0x89c7259e
  404740:	leave  
  404741:	fcom   st(0)
  404743:	xchg   ecx,eax
  404744:	outs   dx,BYTE PTR ds:[esi]
  404745:	sbb    al,0x84
  404747:	arpl   WORD PTR [eax-0x41],dx
  40474a:	and    ecx,DWORD PTR ds:0xc3ba6198
  404750:	push   0x90051c88
  404755:	sbb    cl,BYTE PTR [edx+0x74d1c881]
  40475b:	add    esp,DWORD PTR [eax]
  40475d:	xchg   ebx,eax
  40475e:	push   0x4d3b763f
  404763:	sub    eax,0xb8723e6d
  404768:	out    0x5a,eax
  40476a:	push   eax
  40476b:	push   edx
  40476c:	ror    BYTE PTR [ecx+0x78bd91e],1
  404772:	mov    eax,ds:0x8f06c2d4
  404777:	inc    edx
  404778:	push   esi
  404779:	sub    DWORD PTR [edx],0x47
  40477c:	ja     0x4047e3
  40477e:	mov    ds:0x3a8fd96e,eax
  404783:	loope  0x404751
  404785:	(bad)  
  404786:	jmp    0xb8cc6201
  40478b:	mov    ebx,0xa4d0f7f0
  404790:	out    dx,al
  404791:	test   eax,0x6c7f101
  404796:	mov    al,ds:0x1e944bff
  40479b:	jl     0x4047e5
  40479d:	pushf  
  40479e:	and    al,0x8b
  4047a0:	leave  
  4047a1:	mov    ds:0x48944ccb,al
  4047a6:	mov    dh,0x7e
  4047a8:	sub    al,0xe1
  4047aa:	repz ja 0x404809
  4047ad:	and    al,0x2a
  4047af:	mov    eax,0x7f889761
  4047b4:	lods   eax,DWORD PTR ds:[esi]
  4047b5:	mov    al,ds:0x57cd6f73
  4047ba:	scas   al,BYTE PTR es:[edi]
  4047bb:	push   cs
  4047bc:	and    DWORD PTR [edx-0x37],0x1b
  4047c0:	ins    DWORD PTR es:[edi],dx
  4047c1:	add    DWORD PTR [ecx],esi
  4047c3:	test   BYTE PTR cs:[ebp-0x1b],0xaa
  4047c8:	shr    BYTE PTR [esi],1
  4047ca:	daa    
  4047cb:	ss mov ebp,0x7b91e70b
  4047d1:	mov    dh,0x43
  4047d3:	popf   
  4047d4:	sub    eax,0x9184e02
  4047d9:	adc    edi,eax
  4047db:	xor    WORD PTR [ebx+0x7c91fb5d],si
  4047e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4047e3:	out    dx,eax
  4047e4:	test   eax,0xfce1d0a6
  4047e9:	dec    edx
  4047ea:	pusha  
  4047eb:	repnz mov dl,BYTE PTR [edi+0x1f]
  4047ef:	rcl    DWORD PTR [esi],1
  4047f1:	ror    BYTE PTR [edx+eiz*4-0x22],0x48
  4047f6:	popf   
  4047f7:	push   ss
  4047f8:	jle    0x404828
  4047fa:	stos   DWORD PTR es:[edi],eax
  4047fb:	in     al,0x23
  4047fd:	mov    al,0x93
  4047ff:	add    DWORD PTR [ebx],ebp
  404801:	loopne 0x40482e
  404803:	jnp    0x404837
  404805:	into   
  404806:	jmp    0xb0016293
  40480b:	mov    edx,0x65c1b901
  404810:	mov    cl,0x12
  404812:	inc    eax
  404813:	loopne 0x404826
  404815:	jns    0x404887
  404817:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404818:	jp     0x4047d3
  40481a:	sub    ch,BYTE PTR [edx+0x79843cee]
  404820:	hlt    
  404821:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404822:	or     eax,0x3c063b51
  404827:	lock mov eax,0xc1835160
  40482d:	jle    0x404854
  40482f:	xchg   ecx,eax
  404830:	adc    edi,esp
  404832:	inc    esi
  404833:	jbe    0x40489c
  404835:	mov    ebx,ebx
  404837:	xchg   ebp,eax
  404839:	pextrw ecx,(bad),0xc5
  40483b:	dec    esp
  40483c:	inc    esp
  40483d:	add    eax,0xf3213a5
  404842:	pop    edx
  404843:	jne    0x40483a
  404845:	enter  0xf364,0xf2
  404849:	pop    es
  40484a:	cmp    BYTE PTR [edx-0x46],0x34
  40484e:	iret   
  40484f:	jge    0x404877
  404851:	pop    esp
  404852:	inc    esi
  404853:	sti    
  404854:	ficom  DWORD PTR [edx+0x9b362de]
  40485a:	jo     0x4048c6
  40485c:	ds out 0xd7,eax
  40485f:	enter  0x4aa9,0x7c
  404863:	and    BYTE PTR [esi+0x6d],al
  404866:	add    al,0x96
  404868:	xchg   esi,eax
  404869:	sbb    DWORD PTR [edi],ecx
  40486b:	out    0xbe,eax
  40486d:	push   ebp
  40486e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40486f:	das    
  404870:	ds (bad) 
  404873:	lock mov ebx,edx
  404876:	loope  0x4048e2
  404878:	push   edi
  404879:	jg     0x404894
  40487b:	jp     0x40489a
  40487d:	mov    eax,0xc43a1adf
  404882:	pop    ebp
  404883:	inc    ebp
  404884:	jae    0x4048fa
  404886:	cmp    DWORD PTR [edx],ebp
  404888:	xchg   DWORD PTR [esi],ebp
  40488a:	dec    esp
  40488b:	cmc    
  40488c:	and    DWORD PTR [ecx],edi
  40488e:	out    dx,al
  40488f:	aad    0xfc
  404891:	fist   DWORD PTR [ecx+0x65]
  404894:	inc    edi
  404895:	xlat   BYTE PTR ds:[ebx]
  404896:	pop    es
  404897:	sbb    al,0x18
  404899:	fadd   QWORD PTR [ebp+eax*8-0x2146549d]
  4048a0:	cmp    BYTE PTR [ecx+0x3c6508ed],cl
  4048a6:	xor    bh,BYTE PTR [esi]
  4048a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048a9:	scas   eax,DWORD PTR es:[edi]
  4048aa:	test   al,0x30
  4048ac:	push   ss
  4048ad:	lods   al,BYTE PTR ds:[esi]
  4048ae:	out    dx,eax
  4048af:	sub    bh,BYTE PTR [edi]
  4048b1:	sub    BYTE PTR [edx+0x6f64588b],al
  4048b7:	mov    DWORD PTR [edi-0x2d],edx
  4048ba:	and    edi,DWORD PTR [ecx-0x5a43337a]
  4048c0:	jne    0x404918
  4048c2:	adc    eax,DWORD PTR [ebx+ecx*1]
  4048c5:	sbb    eax,0x834828d9
  4048ca:	fist   WORD PTR [edi]
  4048cc:	pushf  
  4048cd:	sahf   
  4048ce:	rcl    BYTE PTR [eax+0x45],0xcf
  4048d2:	sbb    eax,0x99f27f9c
  4048d7:	jge    0x404877
  4048d9:	scas   eax,DWORD PTR es:[edi]
  4048da:	icebp  
  4048db:	in     al,0x20
  4048dd:	sub    BYTE PTR [ebp+eax*4+0x5],bh
  4048e1:	hlt    
  4048e2:	leave  
  4048e3:	pop    es
  4048e4:	or     al,0xe9
  4048e6:	loope  0x404905
  4048e8:	not    BYTE PTR [edi+0x64]
  4048eb:	push   ds
  4048ec:	push   cs
  4048ed:	mov    DWORD PTR [edx+0x5a],edi
  4048f0:	mov    ebx,ds
  4048f2:	add    DWORD PTR [esi+0x2],ebp
  4048f5:	mov    eax,ds:0xa3148fc2
  4048fa:	dec    ebp
  4048fb:	dec    BYTE PTR [ecx+0x3d]
  4048fe:	pop    esp
  4048ff:	sub    edi,ebx
  404901:	arpl   di,bx
  404903:	adc    esi,DWORD PTR [edi-0x4f2b1a9]
  404909:	and    ax,bp
  40490c:	cmc    
  40490d:	sub    DWORD PTR [edx],0x142dd0de
  404913:	out    dx,al
  404914:	add    al,bh
  404916:	mov    ds:0xe54de30f,al
  40491b:	and    al,0xf6
  40491d:	test   DWORD PTR ss:[ecx],eax
  404920:	mov    cx,0xdb75
  404924:	dec    edx
  404925:	or     ah,BYTE PTR [edx-0x370387a4]
  40492b:	dec    ebp
  40492c:	(bad)  
  40492d:	fistp  DWORD PTR [eax]
  40492f:	imul   esp,esp,0x45
  404932:	into   
  404933:	rsqrtps xmm1,xmm2
  404936:	cmc    
  404937:	add    eax,0x826f09a0
  40493c:	out    dx,al
  40493d:	adc    edx,ecx
  40493f:	fucomip st,st(2)
  404941:	push   eax
  404942:	movaps xmm0,xmm3
  404945:	es ret 
  404947:	add    al,0x21
  404949:	cmp    ch,BYTE PTR [ebx]
  40494b:	xchg   esi,eax
  40494c:	aaa    
  40494d:	and    eax,0xa9c804d3
  404952:	jmp    FWORD PTR [esi]
  404954:	mov    ebp,0x69c15d1
  404959:	retf   0xffc8
  40495c:	rdtsc  
  40495e:	mov    dh,0x2f
  404960:	cli    
  404961:	add    DWORD PTR [ecx-0x28],ecx
  404964:	pop    es
  404965:	xchg   edi,eax
  404966:	add    al,0x10
  404968:	mov    ecx,0xfce681e5
  40496d:	cmp    BYTE PTR [edi-0x2a210a6f],bl
  404973:	inc    eax
  404974:	ret    
  404975:	pop    ebx
  404976:	mov    ebx,0xb27d40be
  40497b:	add    bl,bh
  40497d:	lods   al,BYTE PTR ds:[esi]
  40497e:	sar    dh,1
  404980:	and    BYTE PTR [eax],ah
  404982:	jl     0x404917
  404984:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404985:	sbb    eax,0xcddd9f0a
  40498a:	push   ebp
  40498b:	lahf   
  40498c:	int3   
  40498d:	ficomp DWORD PTR [ebp+0x57716bbc]
  404993:	mov    edi,0xfa0f3b27
  404998:	or     al,0x73
  40499a:	sub    al,0x6d
  40499c:	pop    esp
  40499d:	cmp    DWORD PTR [ebx-0x1ec6b0dd],ecx
  4049a3:	and    eax,0x8810f149
  4049a8:	or     al,0xb9
  4049aa:	cld    
  4049ab:	dec    esp
  4049ac:	xor    BYTE PTR [edx],ah
  4049ae:	pop    ebx
  4049af:	cmp    al,0x38
  4049b1:	mov    eax,0x76e69c2f
  4049b6:	or     eax,0x4c58fc29
  4049bb:	xor    cl,BYTE PTR [eax-0x42]
  4049be:	jl     0x404955
  4049c0:	inc    edx
  4049c1:	pop    edx
  4049c2:	jle    0x4049ef
  4049c4:	sub    dh,BYTE PTR [eax+0x7]
  4049c7:	in     al,0xeb
  4049c9:	pusha  
  4049ca:	add    BYTE PTR [edx],dl
  4049cc:	ins    DWORD PTR es:[edi],dx
  4049cd:	dec    edx
  4049ce:	adc    ebp,DWORD PTR [ebx-0x2c6ef81b]
  4049d4:	and    BYTE PTR [edi+0x3e],0x20
  4049d8:	push   ds
  4049d9:	dec    edi
  4049da:	das    
  4049db:	ret    
  4049dc:	mov    edi,0xf786f059
  4049e1:	xor    ecx,DWORD PTR [esi]
  4049e3:	pop    ecx
  4049e4:	cwde   
  4049e5:	ss sub edi,esp
  4049e8:	ret    0x81ce
  4049eb:	mov    dl,0xd4
  4049ed:	shr    BYTE PTR ss:[eax+eax*1+0x4],cl
  4049f2:	pop    ds
  4049f3:	sar    BYTE PTR [edi-0x46],cl
  4049f6:	sub    DWORD PTR [edi+0x18],edx
  4049f9:	or     al,0x54
  4049fb:	sbb    eax,0xa5ec3d0
  404a00:	aas    
  404a01:	jno    0x404a76
  404a03:	jmp    0x31a3:0x8975ce02
  404a0a:	adc    DWORD PTR [eax-0xe],edx
  404a0d:	dec    esp
  404a0e:	int    0x5
  404a10:	xor    DWORD PTR [eax-0x19],edx
  404a13:	fwait
  404a14:	ds dec esi
  404a16:	sar    DWORD PTR [ebx-0x43],0xc9
  404a1a:	ja     0x404a80
  404a1c:	mov    edx,0xb5f2f257
  404a21:	push   ebx
  404a22:	push   ebp
  404a23:	sbb    BYTE PTR [edx-0xc],bl
  404a26:	add    dh,dl
  404a28:	int    0xd
  404a2a:	cld    
  404a2b:	adc    dh,BYTE PTR [esi-0x42]
  404a2e:	inc    ecx
  404a2f:	mov    cl,0xd0
  404a31:	xlat   BYTE PTR ds:[ebx]
  404a32:	jb     0x404a73
  404a34:	imul   DWORD PTR [edx+0x79]
  404a37:	pop    esi
  404a38:	push   0x94f65cb9
  404a3d:	enter  0xa14d,0x26
  404a41:	aam    0x5
  404a43:	sahf   
  404a44:	ret    0x39cb
  404a47:	jae    0x404a6d
  404a49:	test   al,0x4a
  404a4b:	xchg   ecx,eax
  404a4c:	xadd   bl,cl
  404a4f:	and    edi,DWORD PTR cs:[edi-0x4bb4070b]
  404a56:	mov    dl,0xb3
  404a58:	sub    al,BYTE PTR [edx-0x3c]
  404a5b:	dec    ebp
  404a5c:	loopne 0x4049f8
  404a5e:	aam    0x3c
  404a60:	(bad)  [ebx+0x5d]
  404a63:	(bad)  
  404a64:	leave  
  404a65:	xchg   ebx,eax
  404a66:	or     ebx,ecx
  404a68:	aam    0x7d
  404a6a:	fcom   QWORD PTR [ecx+0x78]
  404a6d:	dec    eax
  404a6e:	hlt    
  404a6f:	jecxz  0x404ab7
  404a71:	dec    edx
  404a72:	fimul  DWORD PTR [ebx+ebx*2-0x78]
  404a76:	add    al,0x6b
  404a78:	test   al,0x2c
  404a7a:	xor    ah,BYTE PTR [esi]
  404a7c:	retf   
  404a7d:	shr    ebx,1
  404a7f:	mov    ds:0xb049dac,al
  404a84:	adc    al,0x3f
  404a86:	dec    ebp
  404a87:	ror    BYTE PTR [ebp-0x35e51dc7],1
  404a8d:	ja     0x404a82
  404a8f:	ds or  al,0xb2
  404a92:	loope  0x404a3e
  404a94:	fimul  WORD PTR [edi-0x78532392]
  404a9a:	sub    eax,0xb7e7faf
  404a9f:	icebp  
  404aa0:	outs   dx,BYTE PTR ds:[esi]
  404aa1:	aad    0xcf
  404aa3:	test   al,0xfc
  404aa5:	(bad)  
  404aa6:	lea    ebp,[esi+0x551d536f]
  404aac:	mov    ds,WORD PTR [eax+0x11226bc1]
  404ab2:	out    dx,al
  404ab3:	out    0xff,al
  404ab5:	ror    BYTE PTR [ecx-0x5d986c9d],1
  404abb:	shl    ecx,cl
  404abd:	out    dx,al
  404abe:	out    dx,eax
  404abf:	dec    ebx
  404ac0:	xor    bh,bl
  404ac2:	call   FWORD PTR ds:0x233e2695
  404ac8:	sub    DWORD PTR [edx],edx
  404aca:	fadd   QWORD PTR [ebx+0x56]
  404acd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ace:	cmp    BYTE PTR [esi+0x2deac9b0],ch
  404ad4:	and    DWORD PTR [edx+0xdef6e15],0x6c
  404adb:	pop    es
  404adc:	loope  0x404aae
  404ade:	ja     0x404acf
  404ae0:	add    ebx,DWORD PTR [ecx+0x57]
  404ae3:	call   0x20d530b1
  404ae8:	loopne 0x404ad3
  404aea:	add    al,0xed
  404aec:	lea    edx,[edx+ebx*4-0x30a6c1e]
  404af3:	cwde   
  404af4:	and    BYTE PTR [ebx+0x5ab53767],bh
  404afa:	out    0xf,al
  404afc:	(bad)  
  404afd:	(bad)  
  404afe:	icebp  
  404aff:	mov    DWORD PTR [eax+edx*4+0x2c],esp
  404b03:	(bad)  
  404b05:	jmp    0x404b76
  404b07:	sar    DWORD PTR [edx],0x59
  404b0a:	int    0x2d
  404b0c:	fnstenv [ecx+0x1]
  404b0f:	fs and ah,dh
  404b12:	retf   
  404b13:	inc    ebp
  404b14:	shl    DWORD PTR [esi+0x69],1
  404b17:	cld    
  404b18:	add    bl,BYTE PTR [eax+0x46]
  404b1b:	or     eax,0x311a5946
  404b20:	dec    ebp
  404b21:	mov    esp,0x10fe0df8
  404b26:	in     al,dx
  404b27:	clc    
  404b28:	cmc    
  404b29:	(bad)  
  404b2b:	call   FWORD PTR [ecx+0x45]
  404b2e:	pop    ds
  404b2f:	mov    ebp,0x2ced99ea
  404b34:	or     al,0xc
  404b36:	ret    
  404b37:	ss es shl ecx,1
  404b3b:	pop    ss
  404b3c:	and    BYTE PTR [ebx-0x3d1a055],al
  404b42:	push   ss
  404b43:	mov    esi,0xe2550395
  404b48:	mov    bh,0x45
  404b4a:	mov    bh,0xb9
  404b4c:	ret    
  404b4d:	mov    dh,0xe6
  404b4f:	xchg   esp,eax
  404b50:	ins    BYTE PTR es:[edi],dx
  404b51:	adc    DWORD PTR [edx],edx
  404b53:	fs jno 0x404b40
  404b56:	sbb    ecx,DWORD PTR [ebx+ebx*2]
  404b59:	std    
  404b5a:	xlat   BYTE PTR ds:[ebx]
  404b5b:	push   eax
  404b5c:	pop    sp
  404b5e:	arpl   WORD PTR [eax+0x3b],bx
  404b61:	xor    ebp,DWORD PTR [eax]
  404b63:	or     ah,BYTE PTR [edi-0x4a]
  404b66:	inc    edi
  404b67:	jns    0x404bc4
  404b69:	add    DWORD PTR [edi],ecx
  404b6b:	out    dx,al
  404b6c:	or     al,0xd0
  404b6e:	push   ebx
  404b6f:	dec    edx
  404b70:	mov    al,0xaf
  404b72:	mov    edx,0xe85b9c09
  404b77:	push   esi
  404b78:	or     esi,DWORD PTR [eax-0x4412b4ec]
  404b7e:	jne    0x404b1c
  404b80:	out    0x3f,eax
  404b82:	jmp    0x404b23
  404b84:	add    DWORD PTR [esi+0x262c483e],eax
  404b8a:	add    BYTE PTR [eax+0x19],ah
  404b8d:	repz and al,BYTE PTR [ebp+0x5f]
  404b91:	into   
  404b92:	lock repnz dec bx
  404b96:	dec    eax
  404b97:	pop    edx
  404b98:	pop    ebp
  404b99:	xor    ebp,DWORD PTR [edx+0xe301a74]
  404b9f:	cmp    al,0xb1
  404ba1:	pop    es
  404ba2:	pop    ebx
  404ba3:	dec    ebx
  404ba4:	push   esi
  404ba5:	les    esp,FWORD PTR [eax-0x1772d31d]
  404bab:	add    BYTE PTR [edi],0xf5
  404bae:	rcl    eax,0x92
  404bb1:	std    
  404bb2:	loopne 0x404b8c
  404bb4:	or     ecx,DWORD PTR [ebx+0x2dc8977b]
  404bba:	stos   BYTE PTR es:[edi],al
  404bbb:	push   ds
  404bbc:	fdivr  st(4),st
  404bbe:	loop   0x404bcd
  404bc0:	mov    ecx,0x479414a7
  404bc5:	add    esi,eax
  404bc7:	xchg   ebx,eax
  404bc8:	or     al,BYTE PTR [edx+eiz*2+0xd]
  404bcc:	out    dx,eax
  404bcd:	xchg   ecx,eax
  404bce:	ds call 0x94df:0x254c5885
  404bd6:	les    esi,FWORD PTR cs:[eax]
  404bd9:	adc    edi,DWORD PTR [edi+0x7c]
  404bdc:	add    BYTE PTR [esi],bh
  404bde:	push   es
  404bdf:	pop    gs
  404be1:	inc    edx
  404be2:	mov    edi,0xbe9c6d8f
  404be7:	xchg   esp,eax
  404be8:	adc    eax,0x6f710eeb
  404bed:	push   ss
  404bee:	sub    DWORD PTR [edi+0x67],0x89ecdc90
  404bf5:	scas   eax,DWORD PTR es:[edi]
  404bf6:	das    
  404bf7:	adc    DWORD PTR [esi],esi
  404bf9:	ds pop edi
  404bfb:	mov    ebx,DWORD PTR ds:0x2ba18e4a
  404c01:	pusha  
  404c02:	pop    ecx
  404c03:	ret    0xb61e
  404c06:	and    ch,BYTE PTR [eax+0x44]
  404c09:	xchg   BYTE PTR [esi+0x2353e1b8],cl
  404c0f:	and    esi,DWORD PTR [ecx-0x6d]
  404c12:	pop    ds
  404c13:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  404c15:	or     BYTE PTR [ecx],0xa4
  404c18:	(bad)  
  404c19:	shl    cl,1
  404c1b:	and    edi,ecx
  404c1d:	ds stos BYTE PTR es:[edi],al
  404c1f:	dec    esi
  404c20:	ficomp WORD PTR [edx-0x7bc51fdd]
  404c26:	ins    BYTE PTR es:[edi],dx
  404c27:	mov    eax,0x2d8e5e92
  404c2c:	mov    ebx,0xbe70a4a1
  404c31:	mov    cl,al
  404c33:	push   0x3467297b
  404c38:	addr16 push esp
  404c3a:	sbb    bl,BYTE PTR [ebp+0x24]
  404c3d:	cmp    ch,BYTE PTR [ebp+0x5f82cbb1]
  404c43:	and    DWORD PTR [esi+eiz*4+0x4b472945],edx
  404c4a:	mov    ch,0x5e
  404c4c:	rol    DWORD PTR [ebx+0x7c],cl
  404c4f:	mov    al,ds:0x2ebdd6c8
  404c54:	add    eax,esi
  404c56:	and    dl,bl
  404c58:	loopne 0x404c03
  404c5a:	(bad)  [eax+eiz*8+0x47]
  404c5e:	dec    ebp
  404c5f:	add    eax,0xe11b6cc8
  404c64:	popa   
  404c65:	test   DWORD PTR [ebx+ebp*2-0x30],edi
  404c69:	and    al,0xc9
  404c6b:	jle    0x404cb7
  404c6d:	(bad)
  404c71:	xchg   DWORD PTR [esi-0x6f],edi
  404c74:	stos   DWORD PTR es:[edi],eax
  404c75:	aas    
  404c76:	repnz mov WORD PTR [ecx-0x42],fs
  404c7a:	xchg   edi,eax
  404c7b:	imul   edi,DWORD PTR [ebp+edi*1-0x7d],0xee26dcf3
  404c83:	mov    eax,0xea7255c9
  404c88:	hlt    
  404c89:	test   ax,0x8ae1
  404c8d:	sti    
  404c8e:	adc    ch,dh
  404c90:	les    ecx,FWORD PTR [edi+0x6a5adc41]
  404c96:	int    0x75
  404c98:	(bad)  
  404c99:	stos   DWORD PTR es:[edi],eax
  404c9a:	inc    ebx
  404c9b:	mov    ebx,0xf955edd5
  404ca0:	push   edi
  404ca1:	and    esi,DWORD PTR [edi+0x7e]
  404ca4:	push   esi
  404ca5:	ret    0x10cc
  404ca8:	(bad)  
  404caa:	adc    bh,BYTE PTR [edx+0x29a5ab68]
  404cb0:	push   ss
  404cb1:	push   ebp
  404cb2:	ret    0x32cf
  404cb5:	aad    0xb4
  404cb7:	pop    ecx
  404cb8:	mov    ah,0x71
  404cba:	or     esi,ebx
  404cbc:	retf   0xc461
  404cbf:	inc    edi
  404cc0:	in     eax,0x18
  404cc2:	inc    ebx
  404cc3:	mov    ch,0x68
  404cc5:	dec    edx
  404cc6:	lods   al,BYTE PTR ds:[esi]
  404cc7:	(bad)  
  404cc8:	add    DWORD PTR [eax-0x22],0x590c82b5
  404ccf:	repnz pop es
  404cd1:	adc    al,BYTE PTR [ecx]
  404cd3:	add    al,0x28
  404cd5:	push   esi
  404cd6:	ss xchg ebp,eax
  404cd8:	push   0x76
  404cda:	jbe    0x404d50
  404cdc:	retf   0x967f
  404cdf:	cmp    DWORD PTR [edi],ebx
  404ce1:	sub    eax,0xc0005a47
  404ce6:	cmp    al,0xe4
  404ce8:	push   eax
  404ce9:	inc    edi
  404cea:	add    DWORD PTR [eax+0x5b14cc8a],eax
  404cf0:	not    edi
  404cf2:	das    
  404cf3:	popa   
  404cf4:	add    edx,edx
  404cf6:	mov    ds:0xcf5dd65c,eax
  404cfb:	or     al,0xd5
  404cfd:	je     0x404ce7
  404cff:	dec    ebp
  404d00:	mov    ss,WORD PTR [ebp-0x1e]
  404d03:	pop    eax
  404d04:	inc    ebx
  404d05:	in     al,0x6
  404d07:	xor    al,0x34
  404d09:	cdq    
  404d0a:	popa   
  404d0b:	les    esi,FWORD PTR [edx]
  404d0d:	xor    al,0xc4
  404d0f:	(bad)  
  404d10:	ror    DWORD PTR ss:[edx+0x76],cl
  404d14:	(bad)  
  404d15:	int3   
  404d16:	bnd js 0x404d58
  404d19:	push   esi
  404d1a:	inc    esi
  404d1b:	dec    eax
  404d1c:	outs   dx,DWORD PTR ds:[esi]
  404d1d:	mov    DWORD PTR [edi+0x2a],edi
  404d20:	sub    eax,0x2280b0ec
  404d25:	mov    eax,0x3c47c14f
  404d2a:	jnp    0x404d21
  404d2c:	adc    eax,0x6d57d1f2
  404d31:	mov    dl,0xd7
  404d33:	xor    ebp,DWORD PTR [ecx+0x28]
  404d36:	or     DWORD PTR [ebx],eax
  404d38:	sbb    edi,edx
  404d3a:	xor    eax,0x81a70e62
  404d3f:	mov    eax,ds:0xf6318494
  404d44:	pop    eax
  404d45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d46:	dec    edi
  404d47:	mov    DWORD PTR cs:[edx-0x79e5644e],ebp
  404d4e:	(bad)  
  404d4f:	xor    eax,0x20c2992b
  404d54:	into   
  404d55:	add    dh,BYTE PTR [eax-0x34]
  404d58:	mov    ebp,0x8e06f65c
  404d5d:	lds    esp,FWORD PTR [ecx+0x76]
  404d60:	add    dl,BYTE PTR [ebp+eiz*1-0x4c1f257]
  404d67:	push   ebx
  404d68:	or     ch,al
  404d6a:	(bad)  
  404d6c:	cs push esi
  404d6e:	int3   
  404d6f:	xchg   esp,eax
  404d70:	and    DWORD PTR [esi],ebx
  404d72:	and    al,0x46
  404d74:	or     al,0x42
  404d76:	fwait
  404d77:	aad    0xc
  404d79:	std    
  404d7a:	sub    dh,ah
  404d7c:	mov    al,0x2
  404d7e:	mov    ebx,0xab104254
  404d83:	hlt    
  404d84:	mov    esi,DWORD PTR [esi-0x3dc719a4]
  404d8a:	push   edx
  404d8b:	sbb    al,0xe4
  404d8d:	dec    ebp
  404d8e:	fist   DWORD PTR [esi]
  404d90:	push   0x92d98c6f
  404d95:	gs pop ebx
  404d97:	mov    ch,0x24
  404d99:	pop    ebx
  404d9a:	je     0x404d74
  404d9c:	jns    0x404dd9
  404d9e:	or     al,0xed
  404da0:	mov    esp,0xe39056e8
  404da5:	xchg   edx,eax
  404da6:	cmp    eax,DWORD PTR [esi]
  404da8:	jns    0x404d49
  404daa:	mov    ch,al
  404dac:	inc    edx
  404dad:	js     0x404dbf
  404daf:	jno    0x404d95
  404db1:	xchg   edi,eax
  404db2:	mov    ?,WORD PTR [ebx]
  404db4:	stc    
  404db5:	aaa    
  404db6:	cmp    DWORD PTR [edi-0x6456d2b7],ecx
  404dbc:	call   0xa55ccc28
  404dc1:	shr    BYTE PTR [edx],1
  404dc3:	addr16 pop ecx
  404dc5:	push   esp
  404dc6:	pop    esi
  404dc7:	addr16 jbe 0x404dc4
  404dca:	sti    
  404dcb:	pop    esi
  404dcc:	cmc    
  404dcd:	adc    al,BYTE PTR [edi]
  404dcf:	xchg   edi,ecx
  404dd1:	popf   
  404dd2:	sub    al,0xe
  404dd4:	inc    ebx
  404dd5:	scas   eax,DWORD PTR es:[edi]
  404dd6:	call   0x2376:0x2c39544f
  404ddd:	(bad)  
  404dde:	xchg   edx,eax
  404ddf:	hlt    
  404de0:	dec    eax
  404de1:	dec    esp
  404de2:	mov    eax,0xee4c57e0
  404de7:	loop   0x404e08
  404de9:	rcr    esp,cl
  404deb:	xchg   ebp,eax
  404dec:	arpl   WORD PTR [edx-0x6607374a],bx
  404df2:	icebp  
  404df3:	push   ebx
  404df4:	adc    eax,0x99344486
  404df9:	xlat   BYTE PTR ds:[ebx]
  404dfa:	std    
  404dfb:	add    eax,0x154f725d
  404e00:	cld    
  404e01:	cs push edx
  404e03:	sub    BYTE PTR [edi+0x43],0xd9
  404e07:	push   cs
  404e08:	out    dx,al
  404e09:	lock pop esp
  404e0b:	mov    ds:0xf2d0a173,eax
  404e10:	repz pop edx
  404e12:	adc    al,0xcf
  404e14:	mov    eax,ds:0x4605c9d7
  404e19:	lds    ecx,FWORD PTR [ebx+0x42]
  404e1c:	mov    dh,0x61
  404e1e:	xor    BYTE PTR [eax],dh
  404e20:	mov    eax,0xae95192f
  404e25:	leave  
  404e26:	jmp    0x4a417d82
  404e2b:	(bad)  
  404e2c:	shl    DWORD PTR [ecx-0x3340d6e4],cl
  404e32:	sbb    ah,BYTE PTR [ecx-0x7f]
  404e35:	data16 jae 0x404e4b
  404e38:	jae    0x404e96
  404e3a:	mov    edi,0x5d355d9c
  404e3f:	push   ss
  404e40:	xor    DWORD PTR [edi],edi
  404e42:	push   ecx
  404e43:	(bad)  
  404e44:	dec    ebp
  404e45:	mov    esi,0xb491f168
  404e4a:	aaa    
  404e4b:	jae    0x404e6b
  404e4d:	retf   0x4c9c
  404e50:	lds    eax,FWORD PTR [edi-0x4d8ca218]
  404e56:	lea    ebp,[edi+0x6b]
  404e59:	pop    edx
  404e5a:	aad    0x75
  404e5c:	or     ebx,eax
  404e5e:	push   cs
  404e5f:	nop
  404e60:	jb     0x404e65
  404e62:	pop    eax
  404e63:	ins    DWORD PTR es:[edi],dx
  404e64:	sub    al,dh
  404e66:	test   BYTE PTR [edi+0x37],0x24
  404e6a:	cdq    
  404e6b:	mul    esi
  404e6d:	jl     0x404e38
  404e6f:	ret    0x5bc0
  404e72:	popa   
  404e73:	adc    DWORD PTR [ebp-0x4],esi
  404e76:	inc    ebx
  404e77:	jo     0x404ed8
  404e79:	scas   al,BYTE PTR es:[edi]
  404e7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e7b:	push   edi
  404e7c:	dec    ebx
  404e7d:	fst    DWORD PTR [eax+0x2]
  404e80:	push   0xfb71427e
  404e85:	mov    edi,0xc9adcae7
  404e8a:	and    cl,BYTE PTR [ebx]
  404e8c:	cmp    DWORD PTR ds:0x85733baa,0x28
  404e93:	call   0x708:0x1dd32e89
  404e9a:	sbb    BYTE PTR [ecx+edx*8],bl
  404e9d:	ret    
  404e9e:	sub    esi,esi
  404ea0:	inc    ebp
  404ea1:	dec    ecx
  404ea2:	fcom   DWORD PTR [ebp-0x42]
  404ea5:	ret    
  404ea6:	cmp    eax,0x42c38d14
  404eab:	add    bh,BYTE PTR [eax]
  404ead:	push   es
  404eae:	into   
  404eaf:	cmp    eax,0x75274a43
  404eb4:	push   0xf207d3e9
  404eb9:	xor    BYTE PTR [edx+0x7b3ac96a],0x47
  404ec0:	sub    bl,BYTE PTR [edx+edi*1+0x760704f8]
  404ec7:	ins    DWORD PTR es:[edi],dx
  404ec8:	cs cmp esp,edx
  404ecb:	retf   0x75cb
  404ece:	sub    al,BYTE PTR [edi-0x59fb938b]
  404ed4:	push   0xffffffb6
  404ed6:	test   DWORD PTR [esi+0x4c],ecx
  404ed9:	pop    ebp
  404eda:	fmul   QWORD PTR [edi+0x533aa140]
  404ee0:	fidivr DWORD PTR [ecx+0x67f714c]
  404ee6:	jmp    FWORD PTR [ebx-0x795b3fc9]
  404eec:	sbb    DWORD PTR [ebx-0x506ddc5],esp
  404ef2:	lea    edx,[eax-0x71e2e41c]
  404ef8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ef9:	mov    eax,0xb8400a63
  404efe:	data16 jne 0x404efb
  404f01:	pop    ebx
  404f02:	cwde   
  404f03:	mov    al,0xd5
  404f05:	cmp    esp,ebp
  404f07:	leave  
  404f08:	pop    ebx
  404f09:	xor    al,0x62
  404f0b:	sahf   
  404f0c:	stc    
  404f0d:	or     ebp,DWORD PTR [ecx+edi*2+0x1cff8a67]
  404f14:	push   esp
  404f15:	xor    al,0x8f
  404f17:	and    DWORD PTR [edi+0x4a],esp
  404f1a:	mov    ch,0xb0
  404f1c:	fld    QWORD PTR [edi-0x4a8ca4c8]
  404f22:	sahf   
  404f23:	xchg   BYTE PTR [esi+0x73],bl
  404f26:	inc    ebp
  404f27:	aaa    
  404f28:	pop    ds
  404f29:	mul    DWORD PTR [edx+0x24]
  404f2c:	(bad)  
  404f2e:	cmp    dl,BYTE PTR [ebp+0x3b]
  404f31:	mov    al,ds:0xedf8d70b
  404f36:	cmp    BYTE PTR [esp+edx*8-0x76],dl
  404f3a:	repnz cdq 
  404f3c:	sbb    dh,bh
  404f3e:	fisttp WORD PTR [ebx-0x64306718]
  404f44:	test   edx,edx
  404f46:	(bad)  
  404f47:	popf   
  404f48:	int    0x52
  404f4a:	mov    ecx,0xbd78a278
  404f4f:	sub    al,0xda
  404f51:	or     eax,0x41cfb735
  404f56:	adc    DWORD PTR [edi+ecx*8+0x2b],0xffffffe3
  404f5b:	pusha  
  404f5c:	xor    DWORD PTR [edi],eax
  404f5e:	fs out dx,eax
  404f60:	add    BYTE PTR [ebx+0x71fe11d1],0xf0
  404f67:	std    
  404f68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f69:	sti    
  404f6a:	cmp    BYTE PTR [edi+0x61],cl
  404f6d:	add    BYTE PTR [eax],al
  404f6f:	adc    bh,BYTE PTR [eax+0x4e]
  404f72:	rcl    BYTE PTR [ebx+eiz*4],0x5
  404f76:	xchg   ecx,eax
  404f77:	lea    ebx,[ebx]
  404f79:	mov    ?,WORD PTR [ebx+0x74d3e855]
  404f7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f81:	shl    DWORD PTR [edi-0x18],cl
  404f84:	fucompp 
  404f86:	mov    bh,0x80
  404f88:	xor    al,0xf2
  404f8a:	inc    ebx
  404f8b:	sbb    cl,dh
  404f8d:	jnp    0x404f37
  404f8f:	pop    edi
  404f90:	mov    ?,WORD PTR [ebp+0x1c]
  404f93:	stos   BYTE PTR es:[edi],al
  404f94:	push   0xffffffef
  404f96:	shr    DWORD PTR [ebx],cl
  404f98:	push   edx
  404f99:	gs push ebx
  404f9b:	jl     0x404fc6
  404f9d:	nop
  404f9e:	or     eax,0x8d2b6fe2
  404fa3:	cmp    ch,BYTE PTR [esi+0x5e9a0b1a]
  404fa9:	push   ds
  404faa:	call   0xe81b4fd3
  404faf:	cmp    DWORD PTR [esp+eax*2+0x77af52c6],esp
  404fb6:	ffree  st(0)
  404fb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404fb9:	aas    
  404fba:	add    eax,0x6dfb1edb
  404fbf:	inc    esi
  404fc0:	or     BYTE PTR [ecx],al
  404fc2:	stos   BYTE PTR es:[edi],al
  404fc3:	cdq    
  404fc4:	cwde   
  404fc5:	jle    0x405037
  404fc7:	adc    eax,0x69b94cab
  404fcc:	and    DWORD PTR [ecx+0x6a7ecae4],0x47
  404fd3:	imul   ecx,ebp,0xffffffe0
  404fd6:	add    eax,0xf5019dcd
  404fdb:	or     eax,0x4141cb17
  404fe0:	stc    
  404fe1:	cmp    al,0x64
  404fe3:	(bad)  
  404fe4:	jnp    0x404f90
  404fe6:	jb     0x404fa5
  404fe8:	stos   DWORD PTR es:[edi],eax
  404fe9:	addr16 je 0x405068
  404fec:	js     0x405066
  404fee:	je     0x405038
  404ff0:	lahf   
  404ff1:	hlt    
  404ff2:	mov    ebx,0xab5a65c
  404ff7:	jecxz  0x404fd3
  404ff9:	cmp    DWORD PTR [edx-0x6c],ebp
  404ffc:	or     ebp,esi
  404ffe:	cwde   
  404fff:	push   0x30
  405001:	and    BYTE PTR [esi],0x11
  405004:	xchg   edi,eax
  405005:	repz shl BYTE PTR [ecx-0x3ff22b2c],0xd0
  40500d:	mov    ds:0xed1c0630,eax
  405012:	aam    0xfc
  405014:	or     ah,dh
  405016:	sbb    al,0x2a
  405018:	dec    ebp
  405019:	mov    dh,dl
  40501b:	ret    0x326b
  40501e:	ja     0x405059
  405020:	mov    edi,0x7e9f115d
  405025:	mov    ch,0x75
  405027:	xor    esi,DWORD PTR [edx-0x3801fb92]
  40502d:	inc    ecx
  40502e:	sbb    esi,DWORD PTR [ecx-0x421c7dda]
  405034:	test   eax,0x5fd475dd
  405039:	fistp  DWORD PTR [esi-0xe370729]
  40503f:	inc    ecx
  405040:	and    BYTE PTR [esi],0xa9
  405043:	mov    eax,ds:0x8b41a066
  405048:	mov    dh,0x9a
  40504a:	pop    esp
  40504b:	and    BYTE PTR [edi],bh
  40504d:	and    BYTE PTR [bx+0x3f],cl
  405051:	sbb    bl,BYTE PTR [ecx]
  405053:	jg     0x40500e
  405055:	pop    ebp
  405056:	pop    eax
  405057:	popf   
  405058:	test   al,0x1c
  40505a:	pop    ecx
  40505b:	popa   
  40505c:	or     ecx,esp
  40505e:	cmp    DWORD PTR [edi-0x723f1483],ebp
  405064:	or     esi,DWORD PTR [ebp+0xbd66eee]
  40506a:	dec    esi
  40506b:	xchg   edi,eax
  40506c:	(bad)  
  40506e:	(bad)  
  40506f:	mov    al,ds:0x346dff2c
  405074:	mov    dl,0x7e
  405076:	jns    0x405022
  405078:	inc    esi
  405079:	ret    0xed7e
  40507c:	xchg   ecx,eax
  40507d:	dec    ebp
  40507e:	mov    bh,0x37
  405080:	jle    0x40502d
  405082:	arpl   WORD PTR [ecx+0x21],di
  405085:	(bad)  
  405086:	adc    eax,0x25b8c8
  40508b:	cld    
  40508c:	sub    BYTE PTR [edi-0x35ba11b0],ch
  405092:	aam    0x3
  405094:	les    edi,FWORD PTR [ebx]
  405096:	mov    ch,0x2d
  405098:	sbb    dh,BYTE PTR [eax]
  40509a:	push   ds
  40509b:	arpl   WORD PTR [ebp-0x5865e530],bp
  4050a1:	add    al,BYTE PTR [ebx-0x6d]
  4050a4:	mov    esi,0x99b595c0
  4050a9:	rol    DWORD PTR [edx+edi*4-0x67],1
  4050ad:	pop    edx
  4050ae:	mov    edi,0x3eb9a0c4
  4050b3:	cdq    
  4050b4:	out    dx,eax
  4050b5:	je     0x405096
  4050b7:	mov    dh,0x65
  4050b9:	pop    edi
  4050ba:	push   esp
  4050bb:	sahf   
  4050bc:	xchg   BYTE PTR [ebx],ah
  4050be:	inc    ecx
  4050bf:	dec    ebx
  4050c0:	(bad)  
  4050c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4050c2:	jne    0x405102
  4050c4:	clc    
  4050c5:	pusha  
  4050c6:	and    BYTE PTR [ebx+0x67],al
  4050c9:	sub    BYTE PTR [edi+0x29],ch
  4050cc:	xchg   BYTE PTR [ebx-0x7a],bl
  4050cf:	cwde   
  4050d0:	popf   
  4050d1:	stc    
  4050d2:	push   es
  4050d3:	add    al,0x17
  4050d5:	sbb    DWORD PTR [ebx+0x50],eax
  4050d8:	push   edx
  4050d9:	or     BYTE PTR [edx-0x7c],0x1c
  4050dd:	jmp    0x4050da
  4050df:	data16 xlat BYTE PTR ds:[ebx]
  4050e1:	outs   dx,DWORD PTR ds:[esi]
  4050e2:	fisubr DWORD PTR [eax+eax*8-0x10]
  4050e6:	mov    dh,0x27
  4050e8:	stos   BYTE PTR es:[edi],al
  4050e9:	pop    ebp
  4050ea:	imul   edi,DWORD PTR [ebx+0x6adec13d],0xffffffd0
  4050f1:	retf   0x61e3
  4050f4:	and    eax,0xc436fb41
  4050f9:	push   es
  4050fa:	mov    edi,0x446297be
  4050ff:	dec    edi
  405100:	jmp    0x1d39:0xa643c1d0
  405107:	ins    BYTE PTR es:[edi],dx
  405108:	mov    cl,0x62
  40510a:	push   ebx
  40510b:	test   BYTE PTR [edx],bh
  40510d:	mov    bl,0xa4
  40510f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405110:	inc    ebp
  405111:	outs   dx,BYTE PTR ds:[esi]
  405112:	aad    0x6a
  405114:	inc    eax
  405115:	pop    ebx
  405116:	fwait
  405117:	and    ah,dl
  405119:	lods   al,BYTE PTR ds:[esi]
  40511a:	lock xor DWORD PTR [eax+0x4fb93b88],0xffffff93
  405122:	dec    ecx
  405123:	bound  esi,QWORD PTR [ebx]
  405125:	jle    0x4050d5
  405127:	int3   
  405128:	ret    0x5bf4
  40512b:	add    edi,DWORD PTR [eax+ecx*8-0x79]
  40512f:	test   BYTE PTR [ebp+0x355a39c],bh
  405135:	or     al,BYTE PTR [ebx+0x34]
  405138:	iret   
  405139:	mov    ebx,0xf24926bb
  40513e:	jb     0x4050eb
  405140:	repnz push esi
  405142:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405143:	je     0x40511b
  405145:	ja     0x40512c
  405147:	xchg   esi,eax
  405148:	cmp    BYTE PTR [ebx],dh
  40514a:	mov    dl,0xad
  40514c:	fcom   st(1)
  40514e:	in     al,0x81
  405150:	adc    BYTE PTR [edi-0x6487d2b4],bl
  405156:	jo     0x4051ca
  405158:	sub    bh,BYTE PTR [edx-0x50]
  40515b:	mov    bh,0x3
  40515d:	jmp    FWORD PTR [ecx+0x2c95eb73]
  405163:	aad    0xc7
  405165:	into   
  405166:	aam    0xa7
  405168:	in     eax,0x94
  40516a:	or     eax,0xa059c858
  40516f:	xor    BYTE PTR [esi+0x128f6ed3],cl
  405175:	push   0x7520bcca
  40517a:	pusha  
  40517b:	daa    
  40517c:	mov    ds:0xfa876cdd,eax
  405181:	mov    ds:0x835de348,al
  405186:	sub    BYTE PTR [ecx-0x69],ch
  405189:	and    ebx,DWORD PTR [edi-0x19]
  40518c:	leave  
  40518d:	popf   
  40518e:	je     0x40516a
  405190:	in     eax,0x6f
  405192:	aaa    
  405193:	jle    0x405161
  405195:	or     bl,BYTE PTR [ebx-0x7]
  405198:	or     al,0x78
  40519a:	icebp  
  40519b:	lods   al,BYTE PTR ds:[esi]
  40519c:	adc    DWORD PTR [esi],edi
  40519e:	bound  edx,QWORD PTR [ebx]
  4051a0:	lock or DWORD PTR [ecx+0x32fe547a],ebp
  4051a7:	sub    ebx,ebx
  4051a9:	xor    edx,edi
  4051ab:	push   esp
  4051ac:	cmp    dh,al
  4051ae:	adc    ecx,DWORD PTR [esi]
  4051b0:	mul    DWORD PTR [esi*4+0x5557ff6b]
  4051b7:	dec    eax
  4051b8:	iret   
  4051b9:	inc    ebp
  4051ba:	cmc    
  4051bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051bc:	mov    esp,0xfca6909c
  4051c1:	mov    eax,ds:0xb62e4b29
  4051c6:	(bad)
  4051c9:	jae    0x405221
  4051cb:	sbb    al,0xa
  4051cd:	inc    ebp
  4051ce:	lahf   
  4051cf:	push   eax
  4051d0:	adc    eax,0xc80f3062
  4051d5:	shl    DWORD PTR [edx],0xeb
  4051d8:	push   ebx
  4051d9:	mov    ecx,0xec993f2a
  4051de:	gs push edi
  4051e0:	inc    esi
  4051e1:	xchg   ecx,eax
  4051e2:	shr    BYTE PTR ds:0x89734a15,cl
  4051e8:	mov    esi,0x81202ca2
  4051ed:	ins    DWORD PTR es:[edi],dx
  4051ee:	enter  0x9950,0xb2
  4051f2:	imul   esp,edi,0x1f
  4051f5:	lds    ecx,FWORD PTR [ebx-0x34]
  4051f8:	mov    al,0xd8
  4051fa:	adc    BYTE PTR [eax+0x3b70eee3],ch
  405200:	inc    ebp
  405201:	mov    ebx,0x856a9db5
  405206:	dec    ebx
  405207:	xor    al,0x1b
  405209:	xchg   ecx,eax
  40520a:	mov    esp,DWORD PTR [ebx+ebp*8-0x7467ca9c]
  405211:	ret    0xbbcc
  405214:	pushf  
  405215:	je     0x40523e
  405217:	mov    eax,0x96a95969
  40521c:	cmc    
  40521d:	inc    edx
  40521e:	out    0x5e,al
  405220:	or     esi,edi
  405222:	imul   ebp,eax,0x1d2239f
  405228:	sub    DWORD PTR [ebx],eax
  40522a:	mov    esp,0xfbb6233c
  40522f:	arpl   si,si
  405231:	and    ebx,DWORD PTR [ebx-0x9]
  405234:	and    DWORD PTR [esp+ecx*1+0x1bdaf45],edx
  40523b:	int    0xbc
  40523d:	das    
  40523e:	cmp    DWORD PTR ds:0x38f181f2,eax
  405244:	std    
  405245:	pop    ss
  405246:	mov    esi,0x5d836437
  40524b:	mov    dl,0xe2
  40524d:	sub    eax,0xc4199da3
  405252:	sbb    DWORD PTR [edi-0x3e53ec43],ecx
  405258:	push   0xffffff83
  40525a:	cwde   
  40525b:	int    0x1b
  40525d:	push   0xa25a9aec
  405262:	jnp    0x40526d
  405264:	xlat   BYTE PTR ds:[ebx]
  405265:	mov    edi,DWORD PTR [ebx]
  405267:	cmc    
  405268:	mov    ebx,0xe5df36dc
  40526d:	scas   eax,DWORD PTR es:[edi]
  40526e:	jbe    0x405279
  405270:	scas   eax,DWORD PTR es:[edi]
  405271:	inc    edi
  405272:	push   0xd8d34f45
  405277:	mov    ch,0x5a
  405279:	shr    BYTE PTR [ebx+0x24],0x91
  40527d:	push   ebx
  40527e:	or     cl,BYTE PTR [eax+0x40a7a04f]
  405284:	pop    esi
  405285:	shr    BYTE PTR [eax*1-0x41b528d6],cl
  40528c:	popf   
  40528d:	leave  
  40528e:	jge    0x40528b
  405290:	and    ch,BYTE PTR [esi+eax*8]
  405293:	das    
  405294:	sbb    al,0x1
  405296:	mov    ds:0x613ce06d,eax
  40529b:	mov    bl,0x8b
  40529d:	in     al,dx
  40529e:	or     ch,dh
  4052a0:	push   es
  4052a1:	mov    ecx,0xc8782897
  4052a6:	test   DWORD PTR [edx-0x1a],edi
  4052a9:	cmp    al,0x57
  4052ab:	lock push esi
  4052ad:	pop    es
  4052ae:	pop    ss
  4052af:	imul   ecx,DWORD PTR [ebx],0xffffff9f
  4052b2:	enter  0xf124,0xa
  4052b6:	mov    ecx,0x834c008a
  4052bb:	mov    bl,0x6d
  4052bd:	outs   dx,DWORD PTR ds:[esi]
  4052be:	sub    DWORD PTR [esi+0x7921871c],0x4b8db81e
  4052c8:	shr    DWORD PTR [ebp+0x7d],cl
  4052cb:	mov    ebp,0x922a3bbe
  4052d0:	jns    0x405289
  4052d2:	(bad)  
  4052d3:	stc    
  4052d4:	fcom   QWORD PTR [edx-0x6e]
  4052d7:	test   eax,0xa928cf6
  4052dc:	pop    esi
  4052dd:	push   ds
  4052de:	(bad)  
  4052e0:	sti    
  4052e1:	aad    0x79
  4052e3:	into   
  4052e4:	cli    
  4052e5:	ins    DWORD PTR es:[edi],dx
  4052e6:	cmp    dl,BYTE PTR [edi+0x16]
  4052e9:	pop    edx
  4052ea:	imul   edx,DWORD PTR [edi+0x38],0xb6908bb
  4052f1:	gs ds push esp
  4052f4:	and    bh,cl
  4052f6:	cwde   
  4052f7:	jns    0x40535a
  4052f9:	lock cdq 
  4052fb:	(bad)  
  4052fc:	xchg   edi,eax
  4052fd:	xor    eax,0xd6c96570
  405302:	(bad)  
  405303:	out    dx,eax
  405304:	lahf   
  405305:	test   eax,0x3104bcdb
  40530a:	or     ebx,0xcdeec98
  405310:	sbb    DWORD PTR [ebp-0x35],ebp
  405313:	ja     0x4052cd
  405315:	popa   
  405316:	repnz adc ah,BYTE PTR [edx-0x4201ae1d]
  40531d:	xor    BYTE PTR [edx],bl
  40531f:	int    0xaa
  405321:	out    0x5d,eax
  405323:	add    DWORD PTR [edx-0x36867191],eax
  405329:	dec    esp
  40532a:	retf   0xacec
  40532d:	or     ecx,edx
  40532f:	int    0x4e
  405331:	iret   
  405332:	retf   0x8d6f
  405335:	push   ebp
  405336:	dec    ebx
  405337:	in     eax,dx
  405338:	push   edx
  405339:	into   
  40533a:	push   ebx
  40533b:	inc    ecx
  40533c:	dec    ebx
  40533d:	pusha  
  40533e:	mov    esp,0x1519d9e9
  405343:	mov    WORD PTR [esi+eax*4],ss
  405346:	pop    ebx
  405347:	leave  
  405348:	xchg   ecx,eax
  405349:	loop   0x405319
  40534b:	cmp    eax,0x2ad00c77
  405350:	scas   eax,DWORD PTR es:[edi]
  405351:	jle    0x40530e
  405353:	retf   
  405354:	and    al,0xf2
  405356:	cmp    BYTE PTR [edi+0x13f32e03],bh
  40535c:	push   ebx
  40535d:	sub    ah,BYTE PTR es:[ebx]
  405360:	push   0x5cc6c35
  405365:	ins    BYTE PTR es:[edi],dx
  405366:	retf   
  405367:	cmp    BYTE PTR [eax+0x4a],dl
  40536a:	mov    eax,DWORD PTR [esi-0x5b90c941]
  405370:	sub    DWORD PTR [edi+ebx*8+0x973f276],edi
  405377:	iret   
  405378:	jge    0x4053bd
  40537a:	adc    al,0xc8
  40537c:	xchg   edx,edx
  40537e:	mov    cl,0x8
  405380:	ud2    
  405382:	xchg   ebp,eax
  405383:	sbb    ebx,DWORD PTR [edi]
  405385:	bound  ebx,QWORD PTR [edx]
  405387:	pop    ds
  405388:	sbb    dh,BYTE PTR [esi]
  40538a:	or     DWORD PTR [esi+eiz*1-0x45],esp
  40538e:	jl     0x405335
  405390:	aas    
  405391:	dec    ebp
  405392:	fadd   DWORD PTR [edx+eiz*8+0x4]
  405396:	in     eax,0x53
  405398:	jg     0x405336
  40539a:	std    
  40539b:	retf   0x8830
  40539e:	into   
  40539f:	lods   al,BYTE PTR ds:[esi]
  4053a0:	out    0xff,al
  4053a2:	adc    eax,0x61a80684
  4053a7:	hlt    
  4053a8:	jne    0x405367
  4053aa:	add    al,0x2f
  4053ac:	pop    es
  4053ad:	rcl    BYTE PTR [edi-0x5d83b607],1
  4053b3:	in     eax,0x8
  4053b5:	sub    BYTE PTR [edx+edx*2+0x34],ah
  4053b9:	or     BYTE PTR [ebx-0x6631ac7e],bh
  4053bf:	std    
  4053c0:	pop    eax
  4053c1:	into   
  4053c2:	aas    
  4053c3:	jb     0x4053a6
  4053c5:	cdq    
  4053c6:	push   cs
  4053c7:	xchg   ecx,eax
  4053c8:	popa   
  4053c9:	xchg   edx,eax
  4053ca:	retf   0x982a
  4053cd:	fcom   QWORD PTR [ecx-0x6b]
  4053d0:	outs   dx,DWORD PTR ds:[esi]
  4053d1:	test   bl,dh
  4053d3:	sub    edx,DWORD PTR [eax+0x90619ee]
  4053d9:	aaa    
  4053da:	sbb    dh,BYTE PTR [edx]
  4053dc:	clc    
  4053dd:	lods   al,BYTE PTR ds:[esi]
  4053de:	retf   0x9a60
  4053e1:	and    al,0x7d
  4053e3:	mov    bl,0x6c
  4053e5:	rdpmc  
  4053e7:	sahf   
  4053e8:	jl     0x405407
  4053ea:	push   eax
  4053eb:	and    BYTE PTR [ebx],0xfc
  4053ee:	xor    dl,BYTE PTR [esi+0x5c851ed3]
  4053f4:	stos   DWORD PTR es:[edi],eax
  4053f5:	ret    
  4053f6:	sti    
  4053f7:	sub    al,BYTE PTR [ecx]
  4053f9:	dec    ebp
  4053fa:	cld    
  4053fb:	cmp    dh,BYTE PTR [ecx+0x23]
  4053fe:	pop    eax
  4053ff:	sub    BYTE PTR ds:[edi],0xa3
  405403:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405404:	cmc    
  405405:	and    al,0x44
  405407:	repnz ss sbb al,0xb9
  40540b:	pop    ss
  40540c:	sub    al,0x54
  40540e:	not    BYTE PTR [ecx]
  405410:	and    dh,0x9c
  405413:	xor    BYTE PTR [eax-0xda72aeb],cl
  405419:	xor    al,0x24
  40541b:	sbb    BYTE PTR [eax+0x5abebd45],ch
  405421:	test   eax,0x34f8335f
  405426:	call   0x297c:0xd2a641fe
  40542d:	cmp    DWORD PTR [edi],esp
  40542f:	adc    al,0xef
  405431:	sub    eax,0x7502e76a
  405436:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405437:	outs   dx,DWORD PTR ds:[esi]
  405438:	push   esp
  405439:	jnp    0x40543a
  40543b:	add    ch,dl
  40543d:	pop    edx
  40543e:	not    BYTE PTR [edx]
  405440:	shr    DWORD PTR [ecx],cl
  405442:	rcl    BYTE PTR [ecx+ecx*8],cl
  405445:	add    al,0x8
  405447:	cmp    esp,esi
  405449:	xor    al,0xf4
  40544b:	into   
  40544c:	sub    edi,esi
  40544e:	ror    DWORD PTR [edx],0x58
  405451:	mov    bl,0xc3
  405453:	outs   dx,DWORD PTR ds:[esi]
  405454:	push   cs
  405455:	or     eax,0x48caaa63
  40545a:	add    cl,bl
  40545c:	rcr    ebp,0x18
  40545f:	mov    WORD PTR [ebx],cs
  405461:	or     al,0xdb
  405463:	ins    BYTE PTR es:[edi],dx
  405464:	and    al,0x5b
  405466:	xor    BYTE PTR [ecx-0x31e3d290],0x24
  40546d:	clc    
  40546e:	jb     0x40545e
  405470:	scas   al,BYTE PTR es:[edi]
  405471:	pop    eax
  405472:	std    
  405473:	aaa    
  405474:	xchg   ebp,eax
  405475:	into   
  405476:	or     dl,BYTE PTR [ecx]
  405478:	in     al,dx
  405479:	dec    DWORD PTR ss:[eax+0x18657b74]
  405480:	and    DWORD PTR [edx+0x4f],0x321f244a
  405487:	not    DWORD PTR [esi+0x7e]
  40548a:	sub    BYTE PTR [ebp+0x54],dh
  40548d:	neg    ebp
  40548f:	aaa    
  405490:	clc    
  405491:	mov    bl,0x87
  405493:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405494:	mov    eax,ds:0x4e3b31c8
  405499:	cs fdiv st,st(6)
  40549c:	sbb    dh,BYTE PTR [esi+0x72eb35d0]
  4054a2:	mov    fs,WORD PTR [ecx-0x1638a65c]
  4054a8:	je     0x405439
  4054aa:	xor    cl,BYTE PTR [ebp+0x39]
  4054ad:	mov    esi,0xb6acf81c
  4054b2:	or     esp,esi
  4054b4:	mov    ch,BYTE PTR [ebx-0x717272c2]
  4054ba:	test   eax,0xdcecc593
  4054bf:	inc    edi
  4054c0:	push   ebx
  4054c1:	ror    BYTE PTR [eax+0x485cea29],cl
  4054c7:	pop    ebx
  4054c8:	add    al,0x3
  4054ca:	inc    edx
  4054cb:	neg    BYTE PTR [ebp+0x4b]
  4054ce:	jge    0x4054c4
  4054d0:	adc    esi,DWORD PTR ds:0x7ecc8aec
  4054d6:	sbb    ch,ah
  4054d8:	push   cs
  4054d9:	rcl    BYTE PTR [edi+edi*2-0x4154c3d5],0xc4
  4054e1:	adc    BYTE PTR ds:0xcfc91871,bl
  4054e7:	jns    0x405529
  4054e9:	rol    DWORD PTR [edi],1
  4054eb:	in     al,0x46
  4054ed:	inc    dl
  4054ef:	cmp    eax,0x8701216
  4054f4:	push   ebp
  4054f5:	adc    BYTE PTR [ebp-0x36],dh
  4054f8:	sub    BYTE PTR [edx-0x2d],dl
  4054fb:	lods   al,BYTE PTR ds:[esi]
  4054fc:	adc    DWORD PTR [ecx+0x5a],0xd
  405500:	push   ebp
  405501:	push   DWORD PTR [esi]
  405503:	mov    bh,0xdf
  405505:	das    
  405506:	push   0xffffffdd
  405508:	or     al,0x27
  40550a:	(bad)  
  40550b:	xchg   esi,eax
  40550c:	sbb    al,0x75
  40550e:	and    al,0xac
  405510:	pop    ebp
  405511:	mov    DWORD PTR ds:0xb554e609,esp
  405517:	sahf   
  405518:	fcom   DWORD PTR [eax-0x36]
  40551b:	add    BYTE PTR [ecx+eiz*8-0xce101a7],0x57
  405523:	xchg   ebx,eax
  405524:	sub    DWORD PTR [edi+edx*8],esp
  405527:	popf   
  405528:	xor    BYTE PTR [ebp-0x5fc9dee1],dl
  40552e:	mov    edx,0xe16f510f
  405533:	mov    bh,0x94
  405535:	pop    es
  405536:	inc    ebp
  405537:	daa    
  405538:	adc    al,0xc3
  40553a:	sub    ah,bl
  40553c:	iret   
  40553d:	cmp    bl,BYTE PTR [eax-0x1f]
  405540:	jmp    0x1c529d16
  405545:	add    DWORD PTR ds:0xc8c1f153,esi
  40554b:	cmc    
  40554c:	(bad)  
  40554e:	mov    ?,WORD PTR [esi+0x53]
  405551:	xor    eax,0xf5c6e092
  405556:	fbld   TBYTE PTR [ecx+edx*4+0x7c00b21]
  40555d:	xchg   ecx,eax
  40555e:	call   0x3a330b6b
  405563:	jnp    0x405531
  405565:	hlt    
  405566:	(bad)  
  405567:	adc    al,0x55
  405569:	mov    al,0xd
  40556b:	jne    0x405516
  40556d:	or     eax,0x6fe33384
  405572:	adc    eax,DWORD PTR [edx]
  405574:	pop    es
  405575:	faddp  st(5),st
  405577:	fdivp  st(5),st
  405579:	fmul   st,st(7)
  40557b:	(bad)  es:[esi-0x3f5da280]
  405582:	xor    BYTE PTR [edi-0x34],bl
  405585:	push   eax
  405586:	push   ebx
  405587:	mov    edi,0xa9c0478
  40558c:	or     al,0x12
  40558e:	or     ebx,DWORD PTR ds:0x3166a67b
  405594:	jmp    0x405614
  405596:	cmp    eax,0x2e265558
  40559b:	add    ecx,edi
  40559d:	jg     0x4055d9
  40559f:	nop
  4055a0:	xor    ebx,ebx
  4055a2:	push   eax
  4055a3:	lds    edx,FWORD PTR [edi]
  4055a5:	xor    al,0x7a
  4055a7:	mov    esi,0xa50d0274
  4055ac:	cmp    al,0x64
  4055ae:	sbb    DWORD PTR es:[esi+0x24],0x134d6ee7
  4055b6:	sub    DWORD PTR [eax+0x77709cb9],esp
  4055bc:	mov    cs,WORD PTR [esi+edx*1]
  4055bf:	test   eax,0xda8495a6
  4055c4:	ins    BYTE PTR es:[edi],dx
  4055c5:	in     eax,0x2a
  4055c7:	(bad)  
  4055c8:	mov    ds:0xdfd093e2,al
  4055cd:	jbe    0x4055fd
  4055cf:	je     0x4055fa
  4055d1:	pop    edi
  4055d2:	addr16 jge 0x405561
  4055d5:	fimul  WORD PTR [ebx+0x53]
  4055d8:	inc    eax
  4055d9:	jge    0x40560e
  4055db:	ret    0xc123
  4055de:	mov    BYTE PTR ds:0xaa1538b6,al
  4055e4:	retf   0xe880
  4055e7:	scas   eax,DWORD PTR es:[edi]
  4055e8:	movzx  ecx,WORD PTR [ecx-0x60770181]
  4055ef:	inc    edx
  4055f0:	or     eax,DWORD PTR [edi+0x73]
  4055f3:	jecxz  0x405578
  4055f5:	and    al,0x26
  4055f7:	push   ecx
  4055f8:	cmp    ecx,esi
  4055fa:	cmp    eax,edx
  4055fc:	sub    al,0xe9
  4055fe:	inc    ecx
  4055ff:	call   0xc653918
  405604:	loopne 0x405657
  405606:	test   eax,0x58dac7e
  40560b:	push   ecx
  40560c:	test   al,0x34
  40560e:	jb     0x405644
  405610:	pop    ebx
  405611:	add    BYTE PTR es:[edx+0xb5e2e7e],ah
  405618:	dec    ecx
  405619:	adc    edx,DWORD PTR [ebx]
  40561b:	adc    BYTE PTR [edx+0x3d1d362d],bl
  405621:	push   ds
  405622:	xchg   esi,eax
  405623:	gs jg  0xe0e05075
  40562a:	stos   DWORD PTR es:[edi],eax
  40562b:	jbe    0x405608
  40562d:	or     dl,bl
  40562f:	stos   BYTE PTR es:[edi],al
  405630:	mov    ch,0xc6
  405632:	jg     0x4056b2
  405634:	sbb    bh,ah
  405636:	cli    
  405637:	repnz mov bl,0xa6
  40563a:	push   edx
  40563b:	jns    0x4055cc
  40563d:	je     0x405620
  40563f:	out    dx,al
  405640:	push   edi
  405641:	xchg   esp,eax
  405642:	push   esp
  405643:	fcom   DWORD PTR [ebx+eax*8+0x5f]
  405647:	xchg   esp,eax
  405648:	std    
  405649:	mov    ecx,0xfb7fbfbf
  40564e:	sbb    DWORD PTR [esi],eax
  405650:	gs ja  0x40563c
  405653:	xchg   ebp,eax
  405654:	and    al,0x6f
  405656:	sti    
  405657:	cmp    DWORD PTR [edx],esi
  405659:	and    DWORD PTR [edi],ebp
  40565b:	jmp    0x1e9f:0xa277270
  405662:	pusha  
  405663:	cli    
  405664:	or     esi,DWORD PTR cs:[esi-0xc]
  405668:	mov    cl,0x93
  40566a:	and    al,0x80
  40566c:	inc    ecx
  40566d:	call   0xeb644cc1
  405672:	jb     0x405696
  405674:	sub    eax,0x11c1c429
  405679:	rcr    edi,1
  40567b:	mov    ebx,0xd744a121
  405680:	add    ebp,DWORD PTR ds:0x4d66bfd1
  405686:	mov    ebx,0x6622741c
  40568b:	retf   
  40568c:	push   edx
  40568d:	nop
  40568e:	mov    esi,0x33e2dfd0
  405693:	stos   BYTE PTR es:[edi],al
  405694:	enter  0xd558,0x53
  405698:	pusha  
  405699:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40569a:	jecxz  0x4056df
  40569c:	out    dx,al
  40569d:	mov    BYTE PTR [eax+0x1d],cl
  4056a0:	stos   DWORD PTR es:[edi],eax
  4056a1:	popa   
  4056a2:	mov    ecx,0xab8ac64
  4056a7:	jnp    0x40563b
  4056a9:	clc    
  4056aa:	mov    bl,0x3
  4056ac:	mov    bl,0xc3
  4056ae:	cld    
  4056af:	ds in  eax,dx
  4056b1:	in     al,dx
  4056b2:	fadd   DWORD PTR [esi-0x11]
  4056b5:	inc    ecx
  4056b6:	mov    bh,BYTE PTR [esp+esi*1+0x177128b1]
  4056bd:	mov    bh,0x5e
  4056bf:	enter  0x6042,0x53
  4056c3:	mov    ?,WORD PTR [ecx-0x7a]
  4056c6:	popa   
  4056c7:	mov    dh,0xc0
  4056c9:	outs   dx,DWORD PTR ds:[esi]
  4056ca:	int    0x85
  4056cc:	stc    
  4056cd:	mov    bl,0xcf
  4056cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056d0:	sbb    ecx,DWORD PTR [edi+esi*1]
  4056d3:	loopne 0x405725
  4056d5:	imul   esp,edx,0x83d8a737
  4056db:	pop    ebx
  4056dc:	pop    ss
  4056dd:	xor    bh,BYTE PTR [edx+eax*1-0x52]
  4056e1:	add    al,0x5d
  4056e3:	mov    edx,?
  4056e5:	mov    ebp,0x8c186263
  4056ea:	retf   0x50be
  4056ed:	mov    ebp,0x13ff7f5f
  4056f2:	or     al,0x45
  4056f4:	jl     0x405736
  4056f6:	and    DWORD PTR ds:0xae430adc,ebp
  4056fc:	mov    ds:0x8412518e,al
  405701:	loope  0x405726
  405703:	jae    0x40571a
  405705:	sti    
  405706:	xchg   ebp,eax
  405707:	shr    BYTE PTR [edi+0x73],cl
  40570a:	popf   
  40570b:	int    0x3a
  40570d:	icebp  
  40570e:	pop    edx
  40570f:	sbb    al,0x2a
  405711:	or     DWORD PTR [esi-0x5b84a5fa],edx
  405717:	inc    esi
  405718:	jmp    0x4056ee
  40571a:	frstor [edx+ecx*8]
  40571d:	jmp    0xbe416eb6
  405722:	lea    eax,[esi-0x23]
  405725:	xor    dl,BYTE PTR [eax]
  405727:	add    BYTE PTR [edi+0xe],bh
  40572a:	pop    ds
  40572b:	and    edi,DWORD PTR [edi]
  40572d:	call   0xbac7:0xc3b5dc8c
  405734:	punpcklwd mm6,DWORD PTR [edx+0x74e9dc23]
  40573b:	icebp  
  40573c:	mov    dh,BYTE PTR [eax+esi*1-0x2dcda5cf]
  405743:	sub    DWORD PTR [ebx],ecx
  405745:	fsubr  DWORD PTR [ecx]
  405747:	cli    
  405748:	jmp    0x405782
  40574a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40574b:	adc    ebx,DWORD PTR [edx]
  40574d:	test   edi,0xa966c083
  405753:	in     eax,0xb8
  405755:	xor    eax,0x87552ad0
  40575a:	adc    DWORD PTR [ebx+ecx*4-0x74],ebp
  40575e:	loope  0x4057bd
  405760:	pop    edx
  405761:	rcl    BYTE PTR [esi],0xbf
  405764:	mov    WORD PTR [edx+0x6ff65a30],ss
  40576a:	stc    
  40576b:	mov    bh,0x92
  40576d:	test   BYTE PTR [esi],al
  40576f:	test   al,0xca
  405771:	mov    edx,0xff020e55
  405776:	mov    al,0x12
  405778:	cmp    al,al
  40577a:	sbb    BYTE PTR [eax+0x78],ch
  40577d:	mov    al,0x9d
  40577f:	pop    ebp
  405780:	adc    al,BYTE PTR [eax]
  405782:	fwait
  405783:	call   0xa85:0x76c286be
  40578a:	adc    eax,0x2101b126
  40578f:	dec    eax
  405790:	pop    eax
  405791:	aam    0x58
  405793:	std    
  405794:	fld    TBYTE PTR [edi-0x6e]
  405797:	fldpi  
  405799:	push   edx
  40579a:	dec    eax
  40579b:	das    
  40579c:	inc    esi
  40579d:	mov    al,0xb7
  40579f:	mov    BYTE PTR [esi],cl
  4057a1:	mov    dh,0x0
  4057a3:	fnstsw WORD PTR [eax]
  4057a5:	(bad)  
  4057a6:	pop    eax
  4057a7:	dec    ebx
  4057a8:	in     al,0x5e
  4057aa:	in     al,0x5f
  4057ac:	mov    bh,0xb
  4057ae:	loope  0x405820
  4057b0:	or     eax,0xdb8cbf59
  4057b5:	aaa    
  4057b6:	jbe    0x40573f
  4057b8:	rcl    DWORD PTR [ecx-0x37e52d6d],1
  4057be:	leave  
  4057bf:	push   cs
  4057c0:	mov    eax,ds:0xbd075977
  4057c5:	stos   BYTE PTR es:[edi],al
  4057c6:	outs   dx,BYTE PTR ds:[esi]
  4057c7:	adc    bh,BYTE PTR [ebx-0x6f]
  4057ca:	mov    dl,0x58
  4057cc:	(bad)  
  4057cd:	aad    0xc7
  4057cf:	pop    edx
  4057d0:	aad    0xab
  4057d2:	jnp    0x40575b
  4057d4:	jne    0x405825
  4057d6:	retf   
  4057d7:	out    0xa2,eax
  4057d9:	inc    ecx
  4057da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057db:	xor    DWORD PTR ds:0x445b3d72,esi
  4057e1:	dec    ebx
  4057e2:	scas   eax,DWORD PTR es:[edi]
  4057e3:	mov    eax,ds:0x258d51a4
  4057e8:	xchg   edi,eax
  4057e9:	pop    esi
  4057ea:	mov    al,ds:0x76fba96a
  4057ef:	fist   DWORD PTR ds:0xf2d6ba32
  4057f5:	inc    esp
  4057f6:	les    esp,FWORD PTR [edx-0x6fe922c0]
  4057fc:	rol    DWORD PTR [eax],cl
  4057fe:	push   0xbd128f0c
  405803:	push   ss
  405804:	out    dx,al
  405805:	popa   
  405806:	aaa    
  405807:	xor    esi,DWORD PTR [esi+0x59a57f5e]
  40580d:	dec    ecx
  40580e:	inc    edi
  40580f:	add    bh,BYTE PTR [edi+esi*2]
  405812:	push   edx
  405813:	fwait
  405814:	mov    cl,0x34
  405816:	jnp    0x40585d
  405818:	je     0x4057c4
  40581a:	scas   al,BYTE PTR es:[edi]
  40581b:	lea    esi,[ebx-0x9]
  40581e:	pop    ss
  40581f:	push   edx
  405820:	cs mov eax,0x21bc438c
  405826:	adc    DWORD PTR [edi-0x10],edx
  405829:	jae    0x405857
  40582b:	ficomp DWORD PTR [ebp-0x680472f4]
  405831:	push   0xffffff93
  405833:	or     eax,eax
  405835:	add    al,0x4f
  405837:	jno    0x405859
  405839:	ret    
  40583a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40583b:	ins    BYTE PTR es:[edi],dx
  40583c:	mov    cl,0x6e
  40583e:	mov    BYTE PTR [eax-0x17],bl
  405841:	sub    al,0x22
  405843:	sbb    al,0xa5
  405845:	mov    ebp,?
  405847:	cmp    edi,ebx
  405849:	mov    dh,0x15
  40584b:	inc    eax
  40584c:	push   esp
  40584d:	cld    
  40584e:	pop    edi
  40584f:	dec    edi
  405850:	and    al,0xc8
  405852:	repnz repnz fs (bad) 
  405856:	(bad)  
  405857:	pop    edx
  405858:	sub    ebp,ebx
  40585a:	frstor [eax+0x5a]
  40585d:	jbe    0x4058dd
  40585f:	dec    esp
  405860:	xor    BYTE PTR [ebp+0x26],dl
  405863:	fdiv   DWORD PTR [ebp+0xe]
  405866:	xchg   esp,eax
  405867:	add    eax,0x97fc6d41
  40586c:	pop    esp
  40586d:	(bad)  
  40586e:	ss scas al,BYTE PTR es:[edi]
  405870:	(bad)  
  405871:	sbb    BYTE PTR fs:[ebp+0x1c],0xb0
  405876:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405877:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405878:	loope  0x405802
  40587a:	shl    BYTE PTR [ecx-0x5e],0x39
  40587e:	dec    ebx
  40587f:	pop    edi
  405880:	lea    ebx,[esi]
  405882:	cmc    
  405883:	pop    edx
  405884:	mov    bh,0x36
  405886:	or     bl,BYTE PTR [ecx-0x7489c673]
  40588c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40588d:	xor    al,0xf5
  40588f:	dec    esi
  405890:	cli    
  405891:	adc    eax,0x349cd094
  405896:	repnz mov bl,0x6e
  405899:	aaa    
  40589a:	jle    0x4058d2
  40589c:	aaa    
  40589d:	test   BYTE PTR [edx+ebx*4-0x24c08a33],dl
  4058a4:	pusha  
  4058a5:	arpl   WORD PTR [ebp+0x56a9ae6f],bx
  4058ab:	pop    edi
  4058ac:	sbb    al,0x9c
  4058ae:	mov    ?,WORD PTR [edx*8-0x43b510ff]
  4058b5:	lock lahf 
  4058b7:	(bad)  
  4058b8:	aam    0x21
  4058ba:	jl     0x40585e
  4058bc:	loopne 0x40586b
  4058be:	mov    ds:0x2ee808ea,eax
  4058c3:	hlt    
  4058c4:	or     esp,edi
  4058c6:	jb     0x4058e4
  4058c8:	out    dx,al
  4058c9:	mov    eax,ds:0xe1c74c48
  4058ce:	ja     0x4058c6
  4058d0:	out    dx,eax
  4058d1:	daa    
  4058d2:	imul   ebp,DWORD PTR [ecx+0x12],0x8f690a02
  4058d9:	mov    esi,0x840e2101
  4058de:	or     al,dl
  4058e0:	retf   0xc995
  4058e3:	pusha  
  4058e4:	lds    esi,FWORD PTR [ebx+0x21e10157]
  4058ea:	fist   WORD PTR ds:0xae7a11d0
  4058f0:	inc    edx
  4058f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4058f2:	rol    BYTE PTR [eax+0x49],cl
  4058f5:	mov    cl,bh
  4058f7:	inc    esp
  4058f8:	jo     0x4058fb
  4058fa:	and    ch,ch
  4058fc:	cmp    al,0x71
  4058fe:	sbb    BYTE PTR [ecx],cl
  405900:	aam    0xa2
  405902:	or     esp,eax
  405904:	fisubr WORD PTR [ecx+eax*4+0x1f0d5d55]
  40590b:	xor    edx,DWORD PTR [ebp-0x6ba46d89]
  405911:	(bad)  
  405912:	cmp    bl,BYTE PTR [eax-0x24147cf7]
  405918:	add    eax,0x28db2f32
  40591d:	push   es
  40591e:	mov    BYTE PTR [ebx+eax*2-0x3273efb9],al
  405925:	add    cl,BYTE PTR [edi]
  405927:	sbb    BYTE PTR [esi+0x13],dl
  40592a:	sahf   
  40592b:	push   ecx
  40592c:	mov    ebx,0xbbeb486b
  405931:	not    BYTE PTR [edi-0x6e6ad359]
  405937:	mov    WORD PTR [ebx-0x17],es
  40593a:	outs   dx,DWORD PTR ds:[esi]
  40593c:	repnz lods al,BYTE PTR ds:[esi]
  40593e:	jp     0x4059b0
  405940:	lock in eax,0x81
  405943:	fdiv   st,st(6)
  405945:	hlt    
  405946:	nop
  405947:	mov    edi,0x89b88d58
  40594c:	(bad)  
  40594d:	and    al,BYTE PTR [ecx-0xd]
  405950:	fcom   DWORD PTR [esi+eax*4+0x64]
  405954:	shr    DWORD PTR [ecx+eiz*8-0x23],0x73
  405959:	shl    BYTE PTR [esi],cl
  40595b:	jecxz  0x405942
  40595d:	mov    BYTE PTR [ecx],dl
  40595f:	xchg   edx,eax
  405960:	pop    edi
  405961:	(bad)  
  405962:	in     eax,0x7c
  405964:	inc    eax
  405965:	jecxz  0x4059ce
  405967:	sub    BYTE PTR [esi],ah
  405969:	mov    edi,0xc9f2a8ca
  40596e:	rcl    BYTE PTR [eax+0x3ec89cd8],cl
  405974:	push   0xffffffa0
  405976:	push   ebx
  405977:	jno    0x405942
  405979:	pop    edx
  40597a:	adc    esp,0x311b6a69
  405980:	xchg   ebp,eax
  405981:	arpl   bp,bp
  405983:	inc    ecx
  405984:	std    
  405985:	sub    ecx,DWORD PTR [ebx]
  405987:	in     al,dx
  405988:	sar    BYTE PTR [esp+eax*8+0x6fcf7cf3],cl
  40598f:	inc    eax
  405990:	or     eax,0xb9a937bc
  405995:	js     0x4059f1
  405997:	mov    ah,ch
  405999:	or     al,0x92
  40599b:	pop    es
  40599c:	push   0x2aa8db04
  4059a1:	mov    ebx,0x538d60ee
  4059a6:	ins    BYTE PTR es:[edi],dx
  4059a7:	fistp  DWORD PTR [eax+0x56]
  4059aa:	mov    BYTE PTR [esi+0x1fa3b868],al
  4059b0:	xchg   ebp,eax
  4059b1:	push   edi
  4059b2:	cmc    
  4059b3:	in     eax,0x76
  4059b5:	add    al,0x32
  4059b7:	and    eax,0x805202b7
  4059bc:	mov    esi,DWORD PTR [ecx+0x37fac95c]
  4059c2:	mov    edi,0x352de5eb
  4059c7:	mov    esp,edi
  4059c9:	imul   eax,DWORD PTR [esi+esi*1+0x341d6c47],0xf83368b3
  4059d4:	xchg   ebp,eax
  4059d5:	sbb    al,0xd7
  4059d7:	icebp  
  4059d8:	leave  
  4059d9:	out    dx,eax
  4059da:	cs xchg esi,eax
  4059dc:	cmp    eax,0xd282ee24
  4059e1:	xchg   edx,eax
  4059e2:	dec    esi
  4059e3:	inc    esp
  4059e4:	push   ds
  4059e5:	rcl    bl,cl
  4059e7:	and    ah,BYTE PTR [ecx+0x7f0e47ee]
  4059ed:	xchg   edi,eax
  4059ee:	pushf  
  4059ef:	mov    esi,0x804a95d4
  4059f4:	lahf   
  4059f5:	mov    dl,0xfe
  4059f7:	xor    ch,BYTE PTR [edx+0x39]
  4059fa:	push   ecx
  4059fb:	ds inc eax
  4059fd:	sub    al,0xed
  4059ff:	jns    0x40598d
  405a01:	push   0x26
  405a03:	push   edi
  405a04:	mov    ch,0xa2
  405a06:	mov    eax,ds:0x1e9cda94
  405a0b:	adc    ebp,DWORD PTR [esi]
  405a0d:	xchg   ebp,eax
  405a0e:	pop    ecx
  405a0f:	sbb    al,0x98
  405a11:	mov    ds:0x5f798322,al
  405a16:	ficomp WORD PTR [ebx]
  405a18:	out    0x67,al
  405a1a:	xchg   esi,eax
  405a1b:	addr16 in al,0xf3
  405a1e:	mov    BYTE PTR [ebx],ah
  405a20:	sbb    DWORD PTR [eax],0x1
  405a23:	adc    DWORD PTR [esi+0x4122e760],edi
  405a29:	adc    edx,DWORD PTR [esi+0x7b80d57f]
  405a2f:	jne    0x405a00
  405a31:	xor    ebx,DWORD PTR [eax]
  405a33:	and    dh,bl
  405a35:	push   ebp
  405a36:	jg     0x405a8c
  405a38:	pushf  
  405a39:	dec    bx
  405a3b:	mov    dh,0xbb
  405a3d:	push   edi
  405a3e:	mov    al,0x1f
  405a40:	sbb    al,0x67
  405a42:	lds    esi,FWORD PTR [ebx+0x1e03dca0]
  405a48:	pop    edx
  405a49:	sub    eax,0x1e9afadd
  405a4e:	xor    bl,ch
  405a50:	repz push esp
  405a52:	or     DWORD PTR [ebp+ebp*2-0x1b3c8d82],edi
  405a59:	imul   ecx,DWORD PTR [edi],0x75
  405a5c:	xchg   ecx,eax
  405a5d:	inc    edx
  405a5e:	retf   
  405a5f:	and    ch,BYTE PTR ds:0xd851db3d
  405a65:	push   esi
  405a66:	ds mov ah,0x9d
  405a6a:	adc    edx,DWORD PTR [edi]
  405a6c:	push   esp
  405a6d:	mov    cs,WORD PTR [ebx]
  405a6f:	or     BYTE PTR es:[ebx-0xea266e7],0xfb
  405a77:	fcmovnu st,st(2)
  405a79:	dec    BYTE PTR [ecx]
  405a7b:	dec    esp
  405a7c:	fidivr DWORD PTR [edx-0x4af8af47]
  405a82:	push   ss
  405a83:	fnstenv [ecx+0x54d4b04c]
  405a89:	push   es
  405a8a:	cld    
  405a8b:	mov    WORD PTR [edi],fs
  405a8d:	jns    0x405a5f
  405a8f:	pop    edi
  405a90:	setb   bh
  405a93:	sub    DWORD PTR [esi],esi
  405a95:	and    eax,0x7e1c8f91
  405a9a:	inc    edx
  405a9b:	jge    0x405b09
  405a9d:	xchg   edi,eax
  405a9e:	cwde   
  405a9f:	mov    ah,0x11
  405aa1:	neg    ebx
  405aa3:	aam    0x3d
  405aa5:	push   ss
  405aa6:	xchg   ebp,eax
  405aa7:	mov    WORD PTR [eax-0x4bc431a4],ss
  405aad:	sub    eax,0x30dbf264
  405ab2:	push   ebp
  405ab3:	jne    0x405ae7
  405ab5:	xchg   ebx,eax
  405ab6:	lods   eax,DWORD PTR ds:[esi]
  405ab7:	xchg   esp,eax
  405ab8:	int    0x6a
  405aba:	jp     0x405b17
  405abc:	adc    edi,DWORD PTR [esi+0x19]
  405abf:	mov    ebp,0x3631792a
  405ac4:	mov    bl,0x32
  405ac6:	(bad)  
  405ac7:	adc    eax,0x57707b6
  405acc:	adc    al,0x36
  405ace:	inc    esi
  405acf:	cmp    BYTE PTR [esi-0x76],ch
  405ad2:	outs   dx,DWORD PTR ds:[esi]
  405ad3:	sar    ch,cl
  405ad5:	cwde   
  405ad6:	or     BYTE PTR [ebx+0x5a990e03],0x2f
  405add:	push   ebx
  405ade:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405adf:	or     DWORD PTR [ecx-0x38],esp
  405ae2:	mov    bh,0x69
  405ae4:	dec    ebx
  405ae5:	clc    
  405ae6:	jecxz  0x405ac7
  405ae8:	and    BYTE PTR [eax-0x2c],dl
  405aeb:	out    0x41,eax
  405aed:	adc    BYTE PTR [ebx],ah
  405aef:	jmp    0x405ad4
  405af1:	aad    0x83
  405af3:	lahf   
  405af4:	ficomp DWORD PTR [ebp+0x68]
  405af7:	in     al,0x87
  405af9:	test   BYTE PTR [ebx],0x4b
  405afc:	clc    
  405afd:	test   ebp,esp
  405aff:	xchg   esp,eax
  405b00:	pop    edx
  405b01:	pop    edi
  405b02:	inc    eax
  405b03:	addr16 or eax,0x9c5363a9
  405b09:	push   ecx
  405b0a:	repz popf 
  405b0c:	ret    
  405b0d:	add    al,0x1
  405b0f:	pop    ecx
  405b10:	jnp    0x405b63
  405b12:	lods   al,BYTE PTR cs:[esi]
  405b14:	xchg   edi,eax
  405b15:	ins    DWORD PTR es:[edi],dx
  405b16:	xchg   ebp,eax
  405b17:	clc    
  405b18:	paddw  mm6,QWORD PTR [ecx]
  405b1b:	add    eax,0x58db16dd
  405b20:	je     0x405b00
  405b22:	ss or  cl,bh
  405b25:	std    
  405b26:	les    esi,FWORD PTR [esi-0x58]
  405b29:	jmp    0x55de:0x52422226
  405b30:	xchg   edx,eax
  405b31:	mov    al,ds:0x89360464
  405b36:	into   
  405b37:	mov    dh,0x17
  405b39:	add    al,BYTE PTR [edi]
  405b3b:	inc    ebx
  405b3d:	inc    esp
  405b3e:	cmp    al,0xc2
  405b40:	out    0x39,al
  405b42:	out    0x23,eax
  405b44:	sti    
  405b45:	mov    eax,0x5c33ba5e
  405b4a:	and    al,0xaa
  405b4c:	dec    DWORD PTR [ecx+0x7c]
  405b4f:	fild   WORD PTR [ecx-0x43e2919f]
  405b56:	jge    0x405b90
  405b58:	pusha  
  405b59:	pop    ds
  405b5a:	xor    eax,ebx
  405b5c:	sbb    dh,BYTE PTR [ecx]
  405b5e:	(bad)  
  405b5f:	test   BYTE PTR [ebp+0x2f9cfb48],0x75
  405b66:	mov    eax,ds:0x4c51aafa
  405b6b:	or     edi,edi
  405b6d:	out    dx,al
  405b6e:	add    eax,0xa998c57b
  405b73:	inc    esp
  405b74:	mov    ebx,DWORD PTR [edx-0x2c29691d]
  405b7a:	cmp    al,bl
  405b7c:	push   cs
  405b7d:	rcr    BYTE PTR [edi+esi*4+0x1838e6c8],0x6b
  405b85:	not    BYTE PTR [edx]
  405b87:	sbb    al,0xa6
  405b89:	hlt    
  405b8a:	or     DWORD PTR [eax-0x75],ebp
  405b8d:	aad    0xa7
  405b8f:	test   al,0xa6
  405b91:	mov    edx,0xf0a8149
  405b96:	dec    ebp
  405b97:	ret    0x2d64
  405b9a:	jle    0x405b31
  405b9c:	sub    DWORD PTR [ecx],esp
  405b9e:	fidivr WORD PTR [edx]
  405ba0:	stos   DWORD PTR es:[edi],eax
  405ba1:	mov    ah,0x24
  405ba3:	mov    ebx,0x5b8a2d69
  405ba8:	sbb    eax,DWORD PTR [edi-0x594e1638]
  405bae:	popf   
  405baf:	rol    DWORD PTR [eax],0xed
  405bb2:	clc    
  405bb3:	or     ecx,ecx
  405bb5:	cli    
  405bb6:	out    0xc5,eax
  405bb8:	mov    ebx,ds
  405bba:	dec    edx
  405bbb:	inc    esi
  405bbc:	nop
  405bbd:	dec    ebp
  405bbe:	cwde   
  405bbf:	mov    esp,0xbb83987c
  405bc4:	cmp    eax,DWORD PTR [eax+0x5d]
  405bc7:	data16 stc 
  405bc9:	or     edi,ebp
  405bcb:	jecxz  0x405bb7
  405bcd:	sub    al,0x35
  405bcf:	aaa    
  405bd0:	stc    
  405bd1:	(bad)  
  405bd2:	pop    ebp
  405bd3:	mov    bh,0x73
  405bd5:	jge    0x405c43
  405bd7:	adc    DWORD PTR [ebx-0x6a0de2b8],ebp
  405bdd:	aaa    
  405bde:	mov    cl,0xa1
  405be0:	addr16 aas 
  405be2:	or     BYTE PTR [ecx+ebp*4+0x6e],0xc2
  405be7:	mov    ds:0x98e4f294,al
  405bec:	test   BYTE PTR [ecx+0x39c2057a],bh
  405bf2:	adc    al,0x65
  405bf4:	mov    WORD PTR [eax],cs
  405bf6:	int3   
  405bf7:	pop    eax
  405bf8:	add    BYTE PTR [edx-0x58],0xd4
  405bfc:	retf   
  405bfd:	aas    
  405bfe:	adc    al,0x1c
  405c00:	xor    BYTE PTR [edi-0x7],bh
  405c03:	shr    edx,cl
  405c05:	inc    ebx
  405c06:	mov    DWORD PTR [esi+0x36c9bbba],eax
  405c0c:	mov    ah,0xb1
  405c0e:	dec    edi
  405c0f:	jecxz  0x405b9d
  405c11:	shl    BYTE PTR [ebp-0x26],0x25
  405c15:	sbb    BYTE PTR [edx],0xae
  405c18:	and    ch,bh
  405c1a:	push   edi
  405c1b:	mov    dh,BYTE PTR [ecx+0x7363da76]
  405c21:	dec    edx
  405c22:	sbb    esi,DWORD PTR [edi+0x73d3059f]
  405c28:	mov    eax,ds:0x7458a947
  405c2d:	mov    al,ds:0xeed05cfc
  405c32:	out    dx,eax
  405c33:	jnp    0x405c3e
  405c35:	or     al,0xf4
  405c37:	add    DWORD PTR [ebx],0x396b4da4
  405c3d:	mov    dh,0x5b
  405c3f:	or     edi,ebx
  405c41:	retf   0x2149
  405c44:	mov    cl,0xda
  405c46:	xor    BYTE PTR [ebp+0x4e],dl
  405c49:	int3   
  405c4a:	mov    ah,0x8d
  405c4c:	je     0x405be0
  405c4e:	out    0x19,al
  405c50:	jmp    0x963ad3c3
  405c55:	or     al,cl
  405c57:	popa   
  405c58:	in     al,0x80
  405c5a:	cld    
  405c5b:	data16 adc BYTE PTR [edi],dh
  405c5e:	retf   0x725d
  405c61:	(bad)  
  405c63:	fdiv   DWORD PTR [ebp+0x2b]
  405c66:	mov    ch,0x5e
  405c68:	mov    bl,0xd8
  405c6a:	lahf   
  405c6b:	xchg   edx,eax
  405c6c:	sbb    bh,BYTE PTR [ecx-0x19]
  405c6f:	aam    0x5d
  405c71:	lock ins DWORD PTR es:[edi],dx
  405c73:	aaa    
  405c74:	mov    ecx,es
  405c76:	jecxz  0x405c1e
  405c78:	(bad)  
  405c79:	cmp    al,0x7d
  405c7b:	mov    BYTE PTR [ecx-0x23],dh
  405c7e:	stc    
  405c7f:	fwait
  405c80:	loopne 0x405c09
  405c82:	pop    ss
  405c83:	xor    ah,dh
  405c85:	mov    DWORD PTR [esi],eax
  405c87:	and    eax,0x3b2575c1
  405c8c:	jp     0x405d07
  405c8e:	dec    edx
  405c8f:	mov    BYTE PTR [ecx],bh
  405c91:	leave  
  405c92:	test   eax,0x810f04c4
  405c97:	jno    0x405c31
  405c99:	xchg   edi,eax
  405c9a:	xchg   esi,eax
  405c9b:	push   eax
  405c9c:	add    DWORD PTR [di-0x4e],0xffffffee
  405ca1:	cmp    BYTE PTR [ecx+edi*1],bh
  405ca4:	pop    esi
  405ca5:	and    eax,0x9eda1434
  405caa:	pop    ebp
  405cab:	mov    ebx,0xd995f912
  405cb0:	mov    esp,0x517e9c6d
  405cb5:	das    
  405cb6:	in     al,dx
  405cb7:	jg     0x405d13
  405cb9:	ret    
  405cba:	sub    bh,BYTE PTR [edi+0x3de104b2]
  405cc0:	in     al,0xba
  405cc2:	xchg   DWORD PTR [edi],edi
  405cc4:	outs   dx,DWORD PTR ds:[esi]
  405cc5:	fsubr  QWORD PTR [eax+0x4f08d750]
  405ccb:	pop    ds
  405ccc:	je     0x405d02
  405cce:	jg     0x405ca9
  405cd0:	push   ebp
  405cd1:	sahf   
  405cd2:	dec    esi
  405cd3:	ja     0x405d01
  405cd5:	bound  edi,QWORD PTR [eax]
  405cd7:	iret   
  405cd8:	loop   0x405cd7
  405cda:	and    dh,0xd6
  405cdd:	fnsave [ebp-0x3fc183c4]
  405ce3:	add    ebx,edi
  405ce5:	xor    dl,BYTE PTR [edx-0x72]
  405ce8:	fs push 0xc1309795
  405cee:	xchg   DWORD PTR [edi+0x236f1101],eax
  405cf4:	jmp    0x405d11
  405cf6:	sub    eax,0x9983518f
  405cfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405cfc:	cs pop esp
  405cfe:	pop    ecx
  405cff:	and    al,0x54
  405d01:	int3   
  405d02:	repz (bad) 
  405d04:	cmp    al,0x70
  405d06:	sbb    bh,BYTE PTR [esi+0xf4f845]
  405d0c:	push   eax
  405d0d:	cmp    BYTE PTR [esi-0x51de4266],bh
  405d13:	in     al,0x40
  405d15:	je     0x405d77
  405d17:	push   0xffffffa7
  405d19:	add    DWORD PTR ds:0x5db68d3d,0xffffffd5
  405d20:	test   al,0x50
  405d22:	xor    eax,0xf0305e49
  405d27:	sbb    DWORD PTR [edi-0x26a38f32],esi
  405d2d:	or     BYTE PTR [esp+esi*2],dh
  405d30:	push   es
  405d31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d32:	dec    ecx
  405d33:	mov    esp,0x63d4caea
  405d38:	sbb    bh,BYTE PTR [ebx-0x60b7226d]
  405d3e:	repnz push eax
  405d40:	xchg   BYTE PTR [edi],al
  405d42:	inc    edi
  405d43:	adc    eax,0x800b0fa0
  405d48:	inc    ecx
  405d49:	jg     0x405cfc
  405d4b:	and    BYTE PTR [edi-0x1a],dl
  405d4e:	push   edx
  405d4f:	cli    
  405d50:	je     0x405d97
  405d52:	inc    edx
  405d53:	mov    eax,ds:0xdab26e94
  405d58:	fistp  QWORD PTR [ecx+0x6d]
  405d5b:	sbb    al,0xed
  405d5d:	mov    al,ds:0x495105ec
  405d62:	xor    eax,0xcf7c9b41
  405d67:	in     al,0x18
  405d69:	call   0x6d62:0xf0651e5a
  405d70:	leave  
  405d71:	mov    ebx,0x84ff10ce
  405d76:	scas   eax,DWORD PTR es:[edi]
  405d77:	test   BYTE PTR [ecx+0x14],cl
  405d7a:	int    0x64
  405d7c:	cmp    DWORD PTR [eax-0x67],0x33305a8f
  405d83:	les    esi,FWORD PTR [esi]
  405d85:	inc    edx
  405d86:	mov    ds:0x5641e7ad,al
  405d8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d8c:	mov    edi,0x417bcd6b
  405d91:	inc    ebp
  405d92:	ds gs test eax,0xa595ba21
  405d99:	adc    BYTE PTR [edi+ebp*8+0x56663506],bh
  405da0:	sahf   
  405da1:	in     al,dx
  405da2:	push   ebp
  405da3:	inc    eax
  405da4:	call   0xb09d29fd
  405da9:	or     ecx,edx
  405dab:	dec    edx
  405dac:	mov    bh,0x71
  405dae:	test   esp,0xb676d731
  405db4:	shl    BYTE PTR [edx],cl
  405db6:	shr    DWORD PTR [esi],0x30
  405db9:	xchg   esp,eax
  405dba:	hlt    
  405dbb:	arpl   di,di
  405dbd:	add    DWORD PTR [edx-0x71],esp
  405dc0:	dec    esi
  405dc1:	adc    al,BYTE PTR [ebp+0x3c]
  405dc4:	xchg   BYTE PTR [esi+0x4b],bh
  405dc7:	icebp  
  405dc8:	pusha  
  405dc9:	add    al,0xc4
  405dcb:	jl     0x405dd4
  405dcd:	push   es
  405dce:	ins    DWORD PTR es:[edi],dx
  405dcf:	out    0x30,eax
  405dd1:	add    ah,bl
  405dd3:	adc    al,0xbf
  405dd5:	int3   
  405dd6:	sub    ebx,DWORD PTR [esi-0x4f]
  405dd9:	test   al,0x75
  405ddb:	dec    edx
  405ddc:	mov    esp,0xaf5b2348
  405de1:	mov    bl,0xcd
  405de3:	pop    ecx
  405de4:	out    dx,al
  405de5:	test   DWORD PTR [edx+0x700d6579],edx
  405deb:	pop    ds
  405dec:	rcl    BYTE PTR [ebx+ebx*4],0xdf
  405df0:	sti    
  405df1:	lods   eax,DWORD PTR ds:[esi]
  405df2:	cmp    al,0x62
  405df4:	inc    ebp
  405df5:	int3   
  405df6:	xchg   ebp,eax
  405df7:	sub    edi,DWORD PTR [ebx+esi*4-0x61]
  405dfb:	jns    0x405e5a
  405dfd:	repz mov bh,0x7e
  405e00:	pop    esi
  405e01:	sbb    eax,0x8c92d573
  405e06:	jnp    0x405dda
  405e08:	int    0x47
  405e0a:	outs   dx,BYTE PTR ds:[esi]
  405e0b:	or     al,0x56
  405e0d:	mov    eax,ds:0x1fefc916
  405e12:	mov    edx,0x6b786a6b
  405e17:	(bad)  
  405e18:	and    DWORD PTR [edx-0x24],edx
  405e1b:	sbb    edi,DWORD PTR [ebx-0x2c65e8d5]
  405e21:	adc    al,0x64
  405e23:	or     bl,bh
  405e25:	clc    
  405e26:	imul   ebp,ebp,0x24b1539c
  405e2c:	xor    al,0x30
  405e2e:	cmp    bl,BYTE PTR [eax+0x35db73cd]
  405e34:	mov    BYTE PTR [edi-0x50],bl
  405e37:	xor    eax,0x8360b2a4
  405e3c:	repnz aad 0xe1
  405e3f:	int3   
  405e40:	xchg   ebx,eax
  405e41:	xchg   edi,eax
  405e42:	push   ecx
  405e43:	add    ch,BYTE PTR [ecx-0x23adfad4]
  405e49:	test   al,0xb8
  405e4b:	mov    edi,0x62fb6afe
  405e50:	push   ecx
  405e51:	or     eax,0x13cb5cae
  405e56:	fistp  WORD PTR [eax-0x55]
  405e59:	ins    DWORD PTR es:[edi],dx
  405e5a:	shl    DWORD PTR [edi+ebp*2+0x75c468ae],cl
  405e61:	push   edx
  405e62:	test   al,0xc4
  405e64:	xlat   BYTE PTR ds:[ebx]
  405e65:	sub    DWORD PTR [ebp-0x34527baf],ebx
  405e6b:	jmp    0x405e07
  405e6d:	jae    0x405ed4
  405e6f:	pop    esi
  405e70:	jo     0x405e16
  405e72:	std    
  405e73:	fsubr  DWORD PTR [edx-0x35]
  405e76:	adc    DWORD PTR [ecx+ebp*2-0x67],esi
  405e7a:	xlat   BYTE PTR ds:[ebx]
  405e7b:	push   ds
  405e7c:	jecxz  0x405e34
  405e7e:	pop    edi
  405e7f:	cmp    eax,0x8c43bdd5
  405e84:	and    DWORD PTR [eax+0x3d],eax
  405e87:	and    eax,0x769f2cad
  405e8c:	outs   dx,DWORD PTR ds:[esi]
  405e8d:	add    DWORD PTR ds:0x1374bc1f,esi
  405e93:	push   edx
  405e94:	inc    eax
  405e95:	or     eax,0xebf85ec5
  405e9a:	(bad)  
  405e9b:	fucomi st,st(2)
  405e9d:	adc    edx,DWORD PTR [edx+eiz*8+0x2d]
  405ea1:	inc    eax
  405ea2:	jg     0x405e43
  405ea4:	jae    0x405ef6
  405ea6:	cmp    bl,bh
  405ea8:	or     eax,0xda6710cc
  405ead:	jo     0x405e9d
  405eaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405eb0:	jecxz  0x405e65
  405eb2:	xchg   edi,eax
  405eb3:	jge    0x405f02
  405eb5:	sbb    cl,bl
  405eb7:	push   esp
  405eb8:	pop    ds
  405eb9:	dec    ebx
  405ebb:	sbb    al,0x0
  405ebd:	popf   
  405ebe:	mov    al,ds:0x62557b26
  405ec3:	mov    ah,0xa1
  405ec5:	sbb    DWORD PTR [ebp-0x5520a017],ebp
  405ecb:	sbb    al,0x70
  405ecd:	jmp    0xa8b0:0x86d8fb99
  405ed4:	sbb    eax,0x3798e68e
  405ed9:	pusha  
  405eda:	test   eax,0x82ed66a3
  405edf:	clc    
  405ee0:	test   DWORD PTR [eax+0x38],edi
  405ee3:	fldl2t 
  405ee5:	push   ds
  405ee6:	loop   0x405e79
  405ee8:	addr16 stc 
  405eea:	jg     0x405ed2
  405eec:	jge    0x405f5f
  405eee:	ror    BYTE PTR [esp+edi*2-0x42f4205c],1
  405ef5:	imul   esp,DWORD PTR [bx+0x3e],0x41043fb8
  405efd:	retf   
  405efe:	mov    ebp,0xfee35f00
  405f03:	enter  0xc55e,0x6f
  405f07:	sar    edx,cl
  405f09:	adc    bh,BYTE PTR [edx+0x36]
  405f0c:	loop   0x405f5d
  405f0e:	ja     0x405f83
  405f10:	mov    edx,0xce7e1a2c
  405f15:	sar    BYTE PTR [ebx-0x3728edb1],0xdb
  405f1c:	lahf   
  405f1d:	pushf  
  405f1e:	xor    al,0xfa
  405f20:	xor    BYTE PTR [ebp+0x62],ch
  405f23:	push   esi
  405f24:	mov    dl,0xf7
  405f26:	or     eax,0xaa854d36
  405f2b:	sub    ebx,DWORD PTR [esi]
  405f2d:	jl     0x405f35
  405f2f:	pop    eax
  405f30:	test   DWORD PTR [esp+eiz*2+0x4068fa44],edx
  405f37:	adc    eax,DWORD PTR [edx-0x25d9142c]
  405f3d:	popa   
  405f3e:	aas    
  405f3f:	mov    ebx,0x14dbad79
  405f44:	mul    BYTE PTR [eax-0x216b5ac1]
  405f4a:	mov    dl,BYTE PTR [ecx-0x7dffa6b6]
  405f50:	pop    ebp
  405f51:	rcr    BYTE PTR [ecx+0x6f8134c9],1
  405f57:	popa   
  405f58:	ret    0xdad0
  405f5b:	fucomip st,st(4)
  405f5d:	xchg   esi,eax
  405f5e:	js     0x405f67
  405f60:	xor    ch,BYTE PTR [edi+0x4e49567]
  405f66:	gs dec ecx
  405f68:	cmp    BYTE PTR [esi],cl
  405f6a:	mov    al,0x50
  405f6c:	dec    ebp
  405f6d:	clc    
  405f6e:	sub    bh,BYTE PTR [ecx]
  405f70:	nop
  405f71:	and    eax,0x5e218d04
  405f76:	mov    esi,0xec429dfc
  405f7b:	call   0x9399:0x816ab119
  405f82:	xor    ecx,DWORD PTR [eax]
  405f84:	or     BYTE PTR [edx],bh
  405f86:	sar    BYTE PTR [edx],cl
  405f88:	add    BYTE PTR [ecx],bh
  405f8a:	scas   al,BYTE PTR es:[edi]
  405f8b:	pop    ds
  405f8c:	mov    gs,edx
  405f8e:	fldpi  
  405f90:	fcmove st,st(4)
  405f92:	jae    0x405ff7
  405f94:	add    dh,BYTE PTR [edx]
  405f96:	xchg   DWORD PTR [ebp-0x64],ebx
  405f99:	push   ebp
  405f9a:	outs   dx,BYTE PTR ds:[esi]
  405f9b:	sub    ebp,edx
  405f9d:	mov    DWORD PTR ds:[eax],eax
  405fa0:	scas   eax,DWORD PTR es:[edi]
  405fa1:	pop    esi
  405fa2:	pop    ecx
  405fa3:	enter  0xedbe,0xda
  405fa7:	pop    ebx
  405fa8:	jb     0x405f35
  405faa:	push   edx
  405fab:	add    al,0xfc
  405fad:	neg    BYTE PTR [edx+0xf]
  405fb0:	mov    esp,0xe729b4bd
  405fb5:	fcom   DWORD PTR [eax+0x34]
  405fb8:	repnz ins DWORD PTR es:[edi],dx
  405fba:	cmp    ch,al
  405fbc:	lods   eax,DWORD PTR ds:[esi]
  405fbd:	(bad)  
  405fbe:	ret    
  405fbf:	xor    eax,0xc79e394
  405fc4:	jecxz  0x406015
  405fc6:	mov    cl,0xf2
  405fc8:	and    ebp,DWORD PTR [edx]
  405fca:	out    dx,eax
  405fcb:	xchg   esi,eax
  405fcc:	mov    ebp,0x4f39211
  405fd1:	pop    ds
  405fd2:	add    DWORD PTR [edi+0x18c962c3],0x33
  405fd9:	xor    BYTE PTR [ebx+edi*4-0x3edba309],bl
  405fe0:	mov    WORD PTR [edx],ss
  405fe2:	pop    edx
  405fe3:	idiv   DWORD PTR [edx+0x54]
  405fe6:	mov    bl,0xb9
  405fe8:	arpl   WORD PTR [eax-0x35337c94],si
  405fee:	repnz xlat BYTE PTR ds:[ebx]
  405ff0:	mov    eax,0xaf0ccf66
  405ff5:	mov    ah,0x3d
  405ff7:	dec    esp
  405ff8:	xchg   edx,eax
  405ff9:	jmp    0x406056
  405ffb:	push   ebx
  405ffc:	daa    
  405ffd:	stc    
  405ffe:	and    DWORD PTR [edi],eax
  406000:	ret    0x77d4
  406003:	test   BYTE PTR [ebx],cl
  406005:	dec    esp
  406006:	push   ecx
  406007:	out    dx,eax
  406008:	div    BYTE PTR [ecx]
  40600a:	xor    al,0x6e
  40600c:	mov    dl,0x89
  40600e:	in     al,dx
  40600f:	add    esp,DWORD PTR [edi+0x6a]
  406012:	pop    ebp
  406013:	lods   eax,DWORD PTR ds:[esi]
  406014:	xor    BYTE PTR [eax],0xc1
  406017:	jae    0x406061
  406019:	push   cs
  40601a:	jb     0x40606b
  40601c:	xchg   esi,eax
  40601d:	push   ds
  40601e:	push   ds
  40601f:	push   es
  406020:	rol    BYTE PTR [eax-0x5a],0x7f
  406024:	test   eax,0xc25ea771
  406029:	ss sub al,0x40
  40602c:	dec    esi
  40602d:	mov    al,ds:0xb1c9b7e3
  406032:	icebp  
  406033:	test   ch,ch
  406035:	mov    cl,0x57
  406037:	add    eax,ebx
  406039:	les    ebp,FWORD PTR [esi+0x18]
  40603c:	ja     0x40605f
  40603e:	jge    0x40609b
  406040:	pushf  
  406041:	mov    dl,0x8f
  406043:	mov    ah,0xaa
  406045:	retf   0x7fde
  406048:	dec    eax
  406049:	fist   DWORD PTR [esi-0x29]
  40604c:	call   0xea1422f0
  406051:	fmul   DWORD PTR [eax+0x2fe42d61]
  406057:	jbe    0x405ff8
  406059:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40605a:	es loope 0x406049
  40605d:	sbb    esi,DWORD PTR ds:0x3783f9b8
  406063:	ret    0x5f24
  406066:	int    0xcb
  406068:	shl    DWORD PTR [esi-0xfb2539c],1
  40606e:	mov    ecx,0x1f360352
  406073:	fs mov dl,0x6f
  406076:	jns    0x406082
  406078:	(bad)  
  40607a:	fld    QWORD PTR [ebx+0x18]
  40607d:	sub    esp,DWORD PTR [ecx+0x6f]
  406080:	mov    bh,0x5a
  406082:	ss daa 
  406084:	test   DWORD PTR ds:0xee1bb4fe,eax
  40608a:	push   edx
  40608b:	mov    dh,BYTE PTR fs:[edx+ebp*8]
  40608f:	addr16 add al,0xd7
  406092:	adc    eax,0xfc817775
  406097:	and    BYTE PTR [edx-0x637df996],0x2a
  40609e:	add    bh,BYTE PTR [edx+ebx*2+0x12b0fd40]
  4060a5:	ins    DWORD PTR es:[edi],dx
  4060a6:	enter  0x4fdb,0xd0
  4060aa:	adc    esp,DWORD PTR [esi+0x4e6fa575]
  4060b0:	mov    al,ds:0x3c93ab69
  4060b5:	xor    DWORD PTR [edi+0x16132e85],edx
  4060bb:	sub    DWORD PTR [ebp+0x26],ebp
  4060be:	es jle 0x4060a1
  4060c1:	or     ebp,ebx
  4060c3:	loop   0x406055
  4060c5:	(bad)  
  4060c6:	clc    
  4060c7:	jl     0x406148
  4060c9:	and    edx,DWORD PTR [edx]
  4060cb:	fadd   QWORD PTR [edx]
  4060cd:	sbb    edx,DWORD PTR [esi+0x4d73c2d5]
  4060d3:	mov    cl,0x6
  4060d5:	imul   eax,edx
  4060d8:	mov    edx,DWORD PTR [ebp-0x8]
  4060db:	mov    al,BYTE PTR [eax+edx*1]
  4060de:	mov    BYTE PTR [ebp-0x1],al
  4060e1:	mov    eax,DWORD PTR [ebp-0x30]
  4060e4:	mov    edx,DWORD PTR [ebp-0xc]
  4060e7:	xor    eax,esi
  4060e9:	add    eax,edi
  4060eb:	imul   eax,edx
  4060ee:	mov    edx,DWORD PTR [ebp-0x28]
  4060f1:	xor    edx,esi
  4060f3:	add    eax,edx
  4060f5:	mov    edx,DWORD PTR [ebp-0x8]
  4060f8:	movzx  eax,BYTE PTR [eax+edx*1+0x3272ef]
  406100:	mov    edx,DWORD PTR [ebp-0x50]
  406103:	xor    edx,esi
  406105:	lea    eax,[edx+eax*1+0x3272ef]
  40610c:	movzx  edx,BYTE PTR [ebp-0x1]
  406110:	xor    edx,eax
  406112:	mov    BYTE PTR [ebp-0x1],dl
  406115:	mov    al,BYTE PTR [ebp-0x1]
  406118:	mov    edx,DWORD PTR [ebp-0x30]
  40611b:	mov    ebx,DWORD PTR [ebp-0xc]
  40611e:	xor    edx,esi
  406120:	add    edx,edi
  406122:	imul   edx,ebx
  406125:	mov    ebx,DWORD PTR [ebp-0x8]
  406128:	mov    BYTE PTR [edx+ebx*1],al
  40612b:	mov    eax,DWORD PTR [ebp-0x40]
  40612e:	mov    edx,DWORD PTR [ebp-0x28]
  406131:	xor    eax,esi
  406133:	xor    edx,esi
  406135:	add    eax,edi
  406137:	add    edx,edi
  406139:	imul   eax,edx
  40613c:	add    eax,DWORD PTR [ebp-0xc]
  40613f:	mov    DWORD PTR [ebp-0xc],eax
  406142:	mov    eax,DWORD PTR [ebp-0xc]
  406145:	mov    edx,DWORD PTR [ebp-0x18]
  406148:	cmp    edx,eax
  40614a:	jb     0x40197d
  406150:	mov    eax,DWORD PTR [ebp-0x28]
  406153:	mov    edx,DWORD PTR [ebp-0x18]
  406156:	xor    eax,esi
  406158:	add    eax,edi
  40615a:	imul   eax,edx
  40615d:	jmp    0x4084cd
  406162:	daa    
  406163:	add    edi,DWORD PTR [ebx]
  406165:	in     al,dx
  406166:	cmp    esp,DWORD PTR [edi+eax*4-0x6cabb385]
  40616d:	push   edi
  40616e:	xchg   esp,eax
  40616f:	lods   eax,DWORD PTR ds:[esi]
  406170:	jno    0x406110
  406172:	fdivr  QWORD PTR [edx+edi*2]
  406175:	jp     0x4061a6
  406177:	pop    edi
  406178:	jp     0x4061f4
  40617a:	mov    dl,0xe4
  40617c:	je     0x40618d
  40617e:	dec    eax
  40617f:	sbb    edx,DWORD PTR [ebx]
  406181:	and    eax,0xba9160a0
  406186:	lea    esi,[ebx-0x8]
  406189:	mov    eax,ds:0x3e737b77
  40618e:	and    eax,0x4945d149
  406193:	xor    al,0xee
  406195:	lods   eax,DWORD PTR ds:[esi]
  406196:	test   DWORD PTR [eax+0x6e],edx
  406199:	pop    ss
  40619a:	mov    ah,0xc1
  40619c:	mov    esp,0xc6815b32
  4061a1:	jb     0x40612d
  4061a3:	cmp    bh,bl
  4061a5:	pop    es
  4061a6:	or     al,BYTE PTR [esi+0x3ad45610]
  4061ac:	loopne 0x406210
  4061ae:	add    DWORD PTR [ebx-0x336fe86c],esp
  4061b4:	out    dx,al
  4061b5:	lea    ecx,[eax-0x5d48615e]
  4061bb:	inc    edi
  4061bc:	inc    ebp
  4061bd:	aad    0xec
  4061bf:	(bad)  
  4061c0:	aas    
  4061c1:	call   0xfa3b75d6
  4061c6:	push   esi
  4061c7:	push   ebp
  4061c8:	(bad)  
  4061c9:	xor    eax,0x50ebfbe1
  4061ce:	shr    BYTE PTR [ecx+0x1d6382ab],cl
  4061d4:	and    DWORD PTR [eax-0x1],edx
  4061d7:	mov    ?,WORD PTR [ecx+0x49bd8af1]
  4061dd:	test   al,0x0
  4061df:	xor    eax,ebx
  4061e1:	cmp    edx,ebx
  4061e3:	cmp    dl,BYTE PTR [ecx-0x735cf6f9]
  4061e9:	pop    es
  4061ea:	and    al,0x72
  4061ec:	mov    dh,0x9a
  4061ee:	sbb    BYTE PTR [eax+0x5a],bl
  4061f1:	fist   WORD PTR [eax]
  4061f3:	pop    ebp
  4061f4:	inc    edx
  4061f5:	leave  
  4061f6:	addr16 push es
  4061f8:	mov    DWORD PTR [eax],edi
  4061fa:	stos   BYTE PTR es:[edi],al
  4061fb:	push   ebp
  4061fc:	adc    ch,BYTE PTR [eax+ebx*8+0x4]
  406200:	or     eax,0x7aedfd54
  406205:	pop    ecx
  406206:	jo     0x40622a
  406208:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406209:	jne    0x4061d3
  40620b:	mov    ds:0xab0c3d73,al
  406210:	add    al,0x2d
  406212:	inc    edi
  406213:	pop    ecx
  406214:	pop    ecx
  406215:	lahf   
  406216:	fisubr WORD PTR [edx-0x46]
  406219:	and    DWORD PTR [edx],0x76
  40621c:	in     eax,0x7d
  40621e:	enter  0x493a,0xd4
  406222:	cmp    DWORD PTR [ebp-0x62871fe4],edx
  406228:	dec    esp
  406229:	ins    DWORD PTR es:[edi],dx
  40622a:	imul   ebx,DWORD PTR [ecx-0x788d58cc],0xa94f5f73
  406234:	and    DWORD PTR [ebx-0x3e8b46b6],esp
  40623a:	fst    QWORD PTR [ecx+esi*1]
  40623d:	mov    ?,WORD PTR [edx+0x2f]
  406240:	fwait
  406241:	ja     0x4061f3
  406243:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406244:	gs sub al,0xf2
  406247:	jmp    0x80a9:0xd4cd3a08
  40624e:	pop    edi
  40624f:	xchg   edi,eax
  406250:	sbb    eax,DWORD PTR [edx-0x7a]
  406253:	ins    BYTE PTR es:[edi],dx
  406254:	mov    edi,0x252ff34e
  406259:	jle    0x40628e
  40625b:	and    ecx,0xffffffd8
  40625e:	or     eax,0xf224770d
  406263:	mov    ebx,0x3ed9059e
  406268:	stc    
  406269:	ficomp DWORD PTR ds:0x4da82fa6
  40626f:	jmp    0xc169aaae
  406274:	push   es
  406275:	jae    0x406265
  406277:	les    esi,FWORD PTR [eax-0x62e27600]
  40627d:	jp     0x40629a
  40627f:	xor    dh,BYTE PTR [ebx+esi*4+0x54580e5c]
  406286:	cli    
  406287:	or     dh,dh
  406289:	push   0x4a
  40628b:	dec    ecx
  40628c:	(bad)  [edx+0x1622f233]
  406292:	leave  
  406293:	test   eax,0x18f0e7a3
  406298:	out    0x41,eax
  40629a:	dec    edi
  40629b:	(bad)  
  40629d:	sub    DWORD PTR [edi],edx
  40629f:	mov    eax,0x1944b09f
  4062a4:	mov    edi,0x62db873e
  4062a9:	mov    ah,0xc9
  4062ab:	inc    esp
  4062ac:	push   ds
  4062ad:	inc    edx
  4062ae:	cmp    al,0xbd
  4062b0:	jmp    0xfcd6a35e
  4062b5:	mov    eax,ds:0x9875e2d4
  4062ba:	cld    
  4062bb:	jnp    0x406339
  4062bd:	bound  ecx,QWORD PTR [eax-0x1d]
  4062c0:	xor    eax,0x8bd32c59
  4062c5:	jne    0x406334
  4062c7:	outs   dx,BYTE PTR gs:[esi]
  4062c9:	cs dec ebp
  4062cb:	add    esp,esp
  4062cd:	pop    ds
  4062ce:	add    BYTE PTR [eax-0x33062dba],0x78
  4062d5:	call   0xdc27470e
  4062da:	and    DWORD PTR [ebx-0x5d758110],esi
  4062e0:	out    dx,eax
  4062e1:	int3   
  4062e2:	cmp    ch,BYTE PTR [edi-0x7cd6d094]
  4062e8:	and    BYTE PTR [ebx+ebp*2+0x1f],al
  4062ec:	inc    esp
  4062ed:	repnz xchg esi,eax
  4062ef:	sbb    edi,0x67a22f11
  4062f5:	icebp  
  4062f6:	nop
  4062f7:	inc    ecx
  4062f8:	cmp    BYTE PTR [ebx+0x3ee2e510],cl
  4062fe:	jno    0x4062ff
  406300:	mov    dh,0x13
  406302:	and    BYTE PTR [ebp-0x3e9674f3],al
  406308:	sar    bh,0x5f
  40630b:	mov    al,0xfd
  40630d:	dec    esi
  40630e:	scas   eax,DWORD PTR es:[edi]
  40630f:	mov    edx,0xdeb289bf
  406314:	add    cl,BYTE PTR [eax+eiz*8]
  406317:	adc    al,0x93
  406319:	and    bl,BYTE PTR [edx]
  40631b:	scas   eax,DWORD PTR es:[edi]
  40631c:	xor    eax,0x869f7d0c
  406321:	enter  0x5280,0x24
  406325:	dec    ecx
  406326:	pop    ss
  406327:	fdiv   DWORD PTR [esi+0x13d24835]
  40632d:	dec    esi
  40632e:	test   BYTE PTR [edx],0x5a
  406331:	fimul  WORD PTR [ecx+0xf]
  406334:	xchg   edx,eax
  406335:	or     BYTE PTR [eax-0x67a0cef2],ah
  40633b:	push   ds
  40633c:	xor    BYTE PTR [edx-0x6ba887f9],bl
  406342:	xchg   ecx,eax
  406343:	pushf  
  406344:	mov    ebx,0x241c86b7
  406349:	xor    DWORD PTR [edx],edi
  40634b:	out    dx,eax
  40634c:	pop    esi
  40634d:	in     eax,dx
  40634e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40634f:	in     al,0xb2
  406351:	or     DWORD PTR [eax],edx
  406353:	mov    ch,0x48
  406355:	inc    esp
  406356:	or     edi,ebx
  406358:	jno    0x4063b6
  40635a:	test   eax,0x7a2e8ee0
  40635f:	fcom   DWORD PTR [edx]
  406361:	(bad)  
  406362:	out    0xc5,al
  406364:	sbb    BYTE PTR [edx+esi*8-0x18],0xab
  406369:	lds    ebp,FWORD PTR [esi-0x5359c5b5]
  40636f:	fidivr WORD PTR [ebx+0x76ea44d1]
  406375:	dec    si
  406377:	xor    edi,esp
  406379:	pop    ebp
  40637a:	xchg   edi,eax
  40637b:	sbb    al,BYTE PTR [ebx+0xf]
  40637e:	jmp    0x7c2e:0x3cac5f50
  406385:	stos   BYTE PTR es:[edi],al
  406386:	sbb    eax,0xc366767b
  40638b:	cmp    BYTE PTR ds:0x551eb8a1,dl
  406391:	xchg   DWORD PTR [ecx-0x4a],ebx
  406394:	outs   dx,DWORD PTR ds:[esi]
  406395:	push   ecx
  406396:	mov    ch,0x98
  406398:	xchg   esi,eax
  406399:	inc    ebx
  40639a:	cs callw 0x25d5
  40639f:	mov    dh,0xf2
  4063a1:	xchg   esi,eax
  4063a2:	lahf   
  4063a3:	aas    
  4063a4:	jno    0x40637c
  4063a6:	and    BYTE PTR [ecx-0x359ea38],bh
  4063ac:	fist   DWORD PTR [esp+edi*4+0x16316c53]
  4063b3:	sbb    ch,0xc7
  4063b6:	arpl   ax,di
  4063b8:	pop    ecx
  4063b9:	dec    esi
  4063ba:	mov    ecx,gs
  4063bc:	adc    esp,DWORD PTR ds:0xba580f06
  4063c2:	dec    ebx
  4063c3:	xchg   esp,eax
  4063c4:	mov    bl,0xc0
  4063c6:	nop
  4063c7:	xor    eax,0x6d73f540
  4063cc:	sar    DWORD PTR [ebx+edi*2+0x51fd49bc],1
  4063d3:	xchg   DWORD PTR [edi-0x9ad4ebf],ecx
  4063d9:	lock clc 
  4063db:	fcomp  DWORD PTR [edx+0x21ef8796]
  4063e1:	and    eax,eax
  4063e3:	dec    esp
  4063e4:	sub    eax,DWORD PTR [esi+0x53300aa6]
  4063ea:	adc    ch,BYTE PTR [eax+edi*8]
  4063ed:	jecxz  0x40643a
  4063ef:	fisubr DWORD PTR [edi-0x48]
  4063f2:	sbb    dl,BYTE PTR [edx]
  4063f4:	fsubrp st(1),st
  4063f6:	sbb    dl,bh
  4063f8:	pop    ss
  4063f9:	fst    st(5)
  4063fb:	inc    edx
  4063fc:	daa    
  4063fd:	ror    BYTE PTR [eax-0x56121069],0xd2
  406404:	cmp    edi,edi
  406406:	or     al,0xbd
  406408:	shl    BYTE PTR [edx],0xe5
  40640b:	jns    0x406408
  40640d:	pop    esi
  40640e:	mov    al,ds:0x2e599232
  406413:	(bad)  
  406414:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406415:	ret    0x9ddf
  406418:	jbe    0x406433
  40641a:	cmp    al,0x52
  40641c:	jmp    0x406424
  40641e:	mov    esp,0xd0b86499
  406423:	and    DWORD PTR ds:0x86ea97f9,0x31576c4b
  40642d:	loope  0x4063cb
  40642f:	in     eax,dx
  406430:	sub    eax,0x5a0a3fde
  406435:	jge    0x4063ca
  406437:	sub    DWORD PTR [edi],0x97906dbc
  40643d:	inc    BYTE PTR [eax-0x3c]
  406440:	mov    DWORD PTR gs:[esi+0x69],ebx
  406444:	xor    eax,0x7de91efc
  406449:	gs clc 
  40644b:	add    eax,0x4c80ce1a
  406450:	std    
  406451:	cmc    
  406452:	or     al,0x24
  406454:	into   
  406455:	aam    0xa0
  406457:	outs   dx,BYTE PTR ds:[esi]
  406458:	out    0xb9,eax
  40645a:	cwde   
  40645b:	bound  esi,QWORD PTR [edi-0xf]
  40645e:	outs   dx,BYTE PTR ds:[esi]
  40645f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406460:	fdivr  st(3),st
  406462:	shl    BYTE PTR [ecx+eax*4+0x549c1c1a],cl
  406469:	int    0x2e
  40646b:	add    eax,0xfe11a23e
  406470:	and    al,0xe8
  406472:	or     al,0x14
  406474:	sar    DWORD PTR [ebx],1
  406476:	inc    eax
  406477:	or     edi,DWORD PTR [eax+0x2f]
  40647a:	push   cs
  40647b:	repnz mov bh,0xc8
  40647e:	or     DWORD PTR [ecx+0xd],esp
  406481:	mov    al,0x33
  406483:	dec    ebp
  406484:	dec    edx
  406485:	(bad)  
  406486:	jno    0x406415
  406488:	popf   
  406489:	xchg   edx,eax
  40648a:	rol    BYTE PTR [edi-0x102fb30d],1
  406490:	out    dx,eax
  406491:	sub    DWORD PTR [ebx],ecx
  406493:	add    al,0x5e
  406495:	pop    ebp
  406496:	lods   eax,DWORD PTR ds:[esi]
  406497:	les    esi,FWORD PTR [ecx+0x2b]
  40649a:	int    0x85
  40649c:	ja     0x406445
  40649e:	mov    edx,esp
  4064a0:	sub    ebp,DWORD PTR [eax]
  4064a2:	retf   0xc2ed
  4064a5:	loopne 0x40648d
  4064a7:	mov    edx,0xf29cd3d1
  4064ac:	je     0x406486
  4064ae:	push   ss
  4064af:	(bad)  
  4064b0:	jns    0x4064f1
  4064b2:	ret    0x35bc
  4064b5:	mov    BYTE PTR [esi+edx*4+0x10],0x3e
  4064ba:	xchg   ebp,eax
  4064bb:	imul   ebp,edx,0x99e679f9
  4064c1:	dec    eax
  4064c2:	jb     0x406534
  4064c4:	pop    ss
  4064c5:	shl    BYTE PTR [edi-0x177fce7e],0xc
  4064cc:	aam    0x22
  4064ce:	(bad)  
  4064cf:	out    dx,al
  4064d0:	sbb    DWORD PTR ds:0x71b1eab,esi
  4064d6:	pop    edx
  4064d7:	in     eax,dx
  4064d8:	xchg   ebp,eax
  4064d9:	pop    edi
  4064da:	std    
  4064db:	in     al,dx
  4064dc:	mov    ch,0xd1
  4064de:	xchg   ecx,eax
  4064df:	inc    edx
  4064e0:	mov    dh,bh
  4064e2:	xchg   ebx,eax
  4064e3:	and    edi,DWORD PTR [ebp-0x1c]
  4064e6:	jb     0x40652f
  4064e8:	int    0x69
  4064ea:	shl    dl,cl
  4064ec:	outs   dx,BYTE PTR ds:[esi]
  4064ed:	pop    esp
  4064ee:	mov    ch,0xe
  4064f0:	mov    eax,ds:0x1c75fb1e
  4064f5:	mov    edi,0x8eae5eec
  4064fa:	test   DWORD PTR [eax+0x6a900df1],0x2940f833
  406504:	pop    edi
  406505:	mov    eax,gs:0x5835841c
  40650b:	js     0x406529
  40650d:	mov    eax,ds:0x1e9025ce
  406512:	(bad)  
  406513:	test   al,0x75
  406515:	mov    al,ds:0xdbfa0aae
  40651a:	aas    
  40651b:	pop    edi
  40651c:	scas   al,BYTE PTR es:[edi]
  40651d:	stos   BYTE PTR es:[edi],al
  40651e:	ret    
  40651f:	outs   dx,BYTE PTR ds:[esi]
  406520:	or     eax,0x1acb2900
  406525:	dec    ebp
  406526:	icebp  
  406527:	jo     0x406514
  406529:	aam    0xb9
  40652b:	das    
  40652c:	xchg   esp,eax
  40652d:	bound  eax,QWORD PTR [edi]
  40652f:	or     eax,0x8e30b3f3
  406534:	pop    es
  406535:	cmc    
  406536:	sbb    BYTE PTR [esi-0x73872d87],0x5f
  40653d:	mov    dl,0xf3
  40653f:	push   edi
  406540:	jbe    0x4064cd
  406542:	sbb    al,0xe
  406544:	mov    ebx,0xb7d52cb8
  406549:	fisttp QWORD PTR cs:[edx]
  40654c:	add    eax,0x55b37924
  406551:	inc    ebx
  406552:	push   esp
  406553:	mov    esi,0xe60ff883
  406558:	repz adc BYTE PTR [eax-0x30fa3e8],bl
  40655f:	sbb    eax,edi
  406561:	jp     0x406547
  406563:	test   al,0xcc
  406565:	idiv   BYTE PTR [ecx]
  406567:	cmc    
  406568:	mov    ah,0x53
  40656a:	or     ah,BYTE PTR [edi]
  40656c:	and    ebx,DWORD PTR [eax-0x7b2b1cf7]
  406572:	jbe    0x406524
  406574:	mov    esp,0x442a307d
  406579:	retf   
  40657a:	imul   eax,DWORD PTR [edx+0x782801d],0xbf86b738
  406584:	scas   eax,DWORD PTR es:[edi]
  406585:	iret   
  406586:	adc    DWORD PTR [esi+0x45e6cef8],edx
  40658c:	inc    esi
  40658d:	jle    0x40651c
  40658f:	ror    bh,cl
  406591:	mov    al,ds:0x1243a85f
  406596:	cwde   
  406597:	ret    
  406598:	(bad)  
  406599:	call   0xd1f90422
  40659e:	xchg   edi,eax
  40659f:	cwde   
  4065a0:	aaa    
  4065a1:	test   BYTE PTR [edi+0x43a64623],0x1c
  4065a8:	fadd   DWORD PTR [edx+edi*8]
  4065ab:	stos   DWORD PTR es:[edi],eax
  4065ac:	nop
  4065ad:	cli    
  4065ae:	in     al,dx
  4065af:	inc    esp
  4065b0:	mov    ah,0x31
  4065b2:	xor    al,0x27
  4065b4:	jp     0x4065d4
  4065b6:	outs   dx,BYTE PTR ds:[esi]
  4065b7:	lods   al,BYTE PTR ds:[esi]
  4065b8:	and    esi,DWORD PTR [ebx+0x5]
  4065bb:	fucomp st(6)
  4065bd:	enter  0x6790,0xc0
  4065c1:	cmp    al,0x71
  4065c3:	xlat   BYTE PTR ds:[ebx]
  4065c4:	ret    0x1f1d
  4065c7:	aaa    
  4065c8:	mov    esi,0x2058ab74
  4065cd:	ins    DWORD PTR es:[edi],dx
  4065ce:	jp     0x4065d2
  4065d0:	add    al,0x98
  4065d2:	fstp   DWORD PTR [ebx+0x53]
  4065d5:	jmp    0xa6c59cf
  4065da:	ds stc 
  4065dc:	mov    bh,BYTE PTR [ebx+0x797a2a52]
  4065e2:	iret   
  4065e3:	aaa    
  4065e4:	mov    ds:0x254c5553,eax
  4065e9:	cmp    eax,0x8ba5c66f
  4065ee:	sub    dl,bl
  4065f0:	sbb    BYTE PTR [edi-0x752bb545],bh
  4065f6:	lods   al,BYTE PTR ds:[esi]
  4065f7:	hlt    
  4065f8:	mov    ecx,0xecdc7efb
  4065fd:	inc    ecx
  4065fe:	sub    ah,BYTE PTR [edx+ebp*4+0x272728c8]
  406605:	ja     0x40658c
  406607:	das    
  406608:	sbb    al,0x8e
  40660a:	dec    ebx
  40660b:	hlt    
  40660c:	or     eax,0xbecf0523
  406611:	cs jnp 0x40663a
  406614:	push   ebx
  406615:	das    
  406616:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406617:	fs push ebx
  406619:	jo     0x4065b0
  40661b:	mov    bh,BYTE PTR [ebx]
  40661d:	pop    ecx
  40661e:	shl    BYTE PTR [edi+0x5a],1
  406621:	ss out 0xba,al
  406624:	jnp    0x4065cc
  406626:	and    esp,DWORD PTR [ebx+ebp*4]
  406629:	jns    0x4066a5
  40662b:	or     BYTE PTR [ebx],ch
  40662d:	in     al,dx
  40662e:	add    BYTE PTR [edx+0x2ec5dcf3],cl
  406634:	ja     0x4066b0
  406636:	aam    0x72
  406638:	test   DWORD PTR [esi],ebx
  40663a:	xor    BYTE PTR ds:0xb5aad225,cl
  406640:	cwde   
  406641:	pop    ebx
  406642:	inc    edi
  406643:	xchg   ebp,eax
  406644:	test   ebx,esi
  406646:	mov    bh,0xd9
  406648:	int3   
  406649:	pop    ss
  40664a:	test   BYTE PTR [ebp+0x58],dh
  40664d:	mov    al,ds:0x2ebfd66c
  406652:	pop    ds
  406653:	out    0xd5,al
  406655:	in     al,0xb0
  406657:	jmp    0x56702701
  40665c:	test   BYTE PTR [ecx+0x4e7ce39c],cl
  406662:	sti    
  406663:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406664:	outs   dx,BYTE PTR ds:[esi]
  406665:	shr    DWORD PTR [esi-0x79eaae6c],1
  40666b:	les    ebx,FWORD PTR ds:0x957f747e
  406671:	cmp    DWORD PTR [ecx+0x25d7f901],ebp
  406677:	addr16 aam 0x41
  40667a:	ss aad 0x99
  40667d:	ret    
  40667e:	xchg   esi,eax
  40667f:	je     0x4066d2
  406681:	add    sp,cx
  406684:	mov    ah,0xb3
  406686:	(bad)  
  406687:	and    al,0xdf
  406689:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40668a:	fiadd  DWORD PTR [esi+0x40]
  40668d:	mov    edi,0x35021565
  406692:	out    dx,eax
  406693:	addr16 mov ecx,0x80bd285d
  406699:	adc    DWORD PTR [edx+ecx*4],0x55
  40669d:	inc    ebp
  40669e:	or     al,0xd7
  4066a0:	retf   
  4066a1:	xor    esp,DWORD PTR ds:0x44d71bc9
  4066a7:	cwde   
  4066a8:	and    dh,bh
  4066aa:	aaa    
  4066ab:	pop    es
  4066ac:	jmp    0xe5ba9063
  4066b1:	mov    bl,0x45
  4066b3:	int3   
  4066b4:	in     al,dx
  4066b5:	add    al,0xef
  4066b7:	add    al,bl
  4066b9:	add    BYTE PTR [edi-0x40eea760],ah
  4066bf:	xchg   BYTE PTR [esp+eax*1+0x38],cl
  4066c3:	or     BYTE PTR [ecx-0x3d],0xd0
  4066c7:	rcl    BYTE PTR [ebx-0x70783c28],1
  4066cd:	and    eax,eax
  4066cf:	mov    esi,0x7ba7ceb6
  4066d4:	inc    ebx
  4066d5:	cmp    al,bh
  4066d7:	pop    ebp
  4066d8:	push   esi
  4066d9:	mov    bl,0x4d
  4066db:	sbb    al,0x7c
  4066dd:	loop   0x40673b
  4066df:	mov    edx,0xed9dacba
  4066e4:	push   es
  4066e5:	fsubr  DWORD PTR [ebx]
  4066e7:	cmp    eax,0xc0e41d4b
  4066ec:	adc    edi,esi
  4066ee:	or     ebp,DWORD PTR [esi*4-0x24336783]
  4066f5:	fdiv   QWORD PTR [ebx+0x4a]
  4066f8:	jnp    0x40673a
  4066fa:	cmovnp esp,DWORD PTR cs:[ecx-0x1c]
  4066ff:	add    bl,BYTE PTR [edx]
  406701:	and    eax,0xc2a80528
  406706:	ss pop edx
  406708:	aas    
  406709:	push   es
  40670a:	jp     0x406735
  40670c:	jecxz  0x40672f
  40670e:	aas    
  40670f:	mov    ecx,0x6a01b318
  406714:	lea    edx,[eax+0x14]
  406717:	into   
  406718:	lock jl 0x40670a
  40671b:	cdq    
  40671c:	xchg   esi,eax
  40671d:	aam    0xdd
  40671f:	sub    DWORD PTR [ebx-0x19],ebx
  406722:	sbb    DWORD PTR [edi-0x41a8fa5d],edx
  406728:	push   esi
  406729:	out    dx,eax
  40672a:	ret    
  40672b:	dec    ebx
  40672c:	adc    ah,BYTE PTR [ecx]
  40672e:	pop    edi
  40672f:	(bad)  
  406730:	jne    0x4066f3
  406732:	push   0x9a9f8cca
  406737:	pop    ebx
  406738:	push   cs
  406739:	dec    ebp
  40673a:	mov    cl,0xfe
  40673c:	outs   dx,BYTE PTR ds:[esi]
  40673d:	(bad)  
  40673f:	jns    0x40678b
  406741:	loope  0x40677f
  406743:	mov    dh,0xcd
  406745:	gs jcxz 0x406774
  406749:	adc    esp,DWORD PTR [eax-0x207e144c]
  40674f:	mov    al,0x13
  406751:	dec    ebx
  406752:	and    BYTE PTR [edx],al
  406754:	xchg   ecx,eax
  406755:	pop    esp
  406756:	nop
  406757:	fwait
  406758:	fwait
  406759:	adc    eax,0x59a92652
  40675e:	dec    edi
  406760:	xor    dl,BYTE PTR [ebp+ebx*8+0x4031727b]
  406767:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406768:	(bad)  
  406769:	pop    ecx
  40676a:	aad    0xe5
  40676c:	ds retf 0x7d1d
  406770:	or     al,0x43
  406772:	int    0x2b
  406774:	push   cs
  406775:	inc    ebp
  406776:	xchg   DWORD PTR [ebp+0x9],eax
  406779:	pop    esp
  40677a:	mov    bl,0xd6
  40677c:	mov    al,ds:0x360c7a74
  406781:	hlt    
  406782:	jns    0x406797
  406784:	xlat   BYTE PTR ds:[ebx]
  406785:	loop   0x406721
  406787:	pop    esp
  406788:	xchg   DWORD PTR [ecx-0x3eff9d2],esp
  40678e:	sub    ecx,DWORD PTR [edx-0x20839f76]
  406794:	ins    DWORD PTR es:[edi],dx
  406795:	or     esp,edi
  406797:	mov    ah,BYTE PTR [ebp-0x5a]
  40679a:	call   0xe86b:0xa7818e06
  4067a1:	mov    ch,0x58
  4067a3:	rcl    BYTE PTR [ebp-0x64e581d6],1
  4067a9:	sbb    BYTE PTR [ebp-0x3537edb0],dh
  4067af:	ror    BYTE PTR [ebx+0x4cbf5b4],cl
  4067b5:	push   0x9f67d736
  4067ba:	or     cl,BYTE PTR [esi-0x63287f8b]
  4067c0:	pusha  
  4067c1:	into   
  4067c2:	sub    eax,0xda8f8a30
  4067c7:	ins    BYTE PTR es:[edi],dx
  4067c8:	test   BYTE PTR [ecx-0x4f],bh
  4067cb:	mov    edi,0x51003cbb
  4067d0:	xchg   esi,eax
  4067d1:	sti    
  4067d2:	and    eax,0x727a85b0
  4067d7:	xor    BYTE PTR [ebx+0x4c8a1517],dl
  4067dd:	test   BYTE PTR [ebx+0x4c],cl
  4067e0:	jle    0x40680f
  4067e2:	pop    ebp
  4067e3:	ins    BYTE PTR es:[edi],dx
  4067e4:	dec    edi
  4067e5:	retf   
  4067e6:	mov    edi,DWORD PTR [ecx]
  4067e8:	mov    al,ds:0xc671441f
  4067ed:	loope  0x406784
  4067ef:	and    eax,0x23cdbfcf
  4067f4:	sub    esp,DWORD PTR [esi+0x60]
  4067f7:	xchg   esp,eax
  4067f8:	icebp  
  4067f9:	xchg   edx,eax
  4067fa:	rcr    BYTE PTR [eax+0x2c5e49da],1
  406800:	cmp    ebx,DWORD PTR [ebx]
  406802:	xchg   esi,eax
  406803:	stc    
  406804:	out    0x71,eax
  406806:	mov    dl,0x2a
  406808:	sub    cl,BYTE PTR [eax-0x428e8e1c]
  40680e:	out    0x27,eax
  406810:	mov    ebx,0x76ab3677
  406815:	mov    ch,0x45
  406817:	pop    esi
  406818:	or     ebp,DWORD PTR [eax+0x5d]
  40681b:	cli    
  40681c:	mov    dh,0xff
  40681e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40681f:	pop    eax
  406820:	mov    ds:0x300863c7,eax
  406825:	retf   0x6653
  406828:	sbb    bl,BYTE PTR [ebp+eiz*4+0x42c80362]
  40682f:	ret    0x842b
  406832:	xor    DWORD PTR [ebx-0x6858f33b],eax
  406838:	push   ebp
  406839:	iret   
  40683a:	xor    eax,0x7995db39
  40683f:	ret    0xd7a5
  406842:	mov    ebx,0x43f2a7c5
  406847:	lock adc cl,ah
  40684a:	push   es
  40684b:	cdq    
  40684c:	xor    BYTE PTR [edi-0x2ea25954],0x2b
  406853:	dec    edi
  406854:	sti    
  406855:	ins    BYTE PTR es:[edi],dx
  406856:	jno    0x40682f
  406858:	ror    DWORD PTR [edx],1
  40685a:	jle    0x4068b7
  40685c:	icebp  
  40685d:	pop    esp
  40685e:	lods   eax,DWORD PTR ds:[esi]
  40685f:	dec    eax
  406860:	pop    ss
  406861:	fidiv  WORD PTR [edx+0x2ff58bd5]
  406867:	mov    DWORD PTR [edi],ebx
  406869:	(bad)  
  40686a:	sub    ch,0xa6
  40686d:	push   cs
  40686e:	push   0x275374fe
  406873:	fs scas al,BYTE PTR es:[edi]
  406875:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406876:	sub    cl,BYTE PTR [ebx+0x76]
  406879:	scas   eax,DWORD PTR es:[edi]
  40687a:	jb     0x40683d
  40687c:	das    
  40687d:	shr    dl,1
  40687f:	mov    DWORD PTR [eax-0x722fc73b],edi
  406885:	popa   
  406886:	lock push eax
  406888:	mov    cl,0x58
  40688a:	pop    ebp
  40688b:	mov    edi,0x7601bd83
  406890:	sahf   
  406891:	push   esp
  406892:	inc    ebx
  406893:	mov    ds:0xaf69bc2a,al
  406898:	lods   al,BYTE PTR ds:[esi]
  406899:	pusha  
  40689a:	push   ds
  40689b:	out    0x92,al
  40689d:	xlat   BYTE PTR ds:[ebx]
  40689e:	lods   eax,DWORD PTR ds:[esi]
  40689f:	and    ebp,DWORD PTR [edi+0x21]
  4068a2:	jo     0x406909
  4068a4:	clc    
  4068a5:	dec    edi
  4068a6:	ret    0x92f7
  4068a9:	pop    ss
  4068aa:	cwde   
  4068ab:	rcr    edx,1
  4068ad:	dec    edi
  4068ae:	adc    dl,bh
  4068b0:	adc    ebx,DWORD PTR [esi]
  4068b2:	cmp    dh,BYTE PTR [ecx+0x69878b43]
  4068b8:	mov    al,0xa8
  4068ba:	fs gs pop es
  4068bd:	and    al,0xf
  4068bf:	inc    edi
  4068c0:	add    ah,BYTE PTR [edx+eax*4]
  4068c3:	div    bh
  4068c5:	jbe    0x4068a4
  4068c7:	(bad)  
  4068c8:	lock or ebp,DWORD PTR [ebp-0x6794f368]
  4068cf:	adc    ch,ch
  4068d1:	test   eax,0xe22f5eca
  4068d6:	mov    eax,0x66b9c5ff
  4068db:	inc    eax
  4068dc:	fstp   QWORD PTR [edi+0xf6742c1]
  4068e2:	jb     0x4068c6
  4068e4:	jge    0x40686d
  4068e6:	hlt    
  4068e7:	iret   
  4068e8:	xor    al,0x82
  4068ea:	es dec edx
  4068ec:	cmp    al,0x58
  4068ee:	imul   DWORD PTR [ecx+0x4a04bc9d]
  4068f4:	cmp    esi,DWORD PTR [ebx-0x6f]
  4068f7:	add    DWORD PTR [ebp+0x37],edx
  4068fa:	add    bl,BYTE PTR [edi-0x684e6dd9]
  406900:	outs   dx,DWORD PTR ds:[esi]
  406901:	sub    eax,0xb6e7f27e
  406906:	dec    edi
  406907:	jg     0x40694c
  406909:	stos   BYTE PTR es:[edi],al
  40690a:	outs   dx,BYTE PTR ds:[esi]
  40690b:	lods   al,BYTE PTR ds:[esi]
  40690c:	mov    ebp,0xb9a934fa
  406911:	adc    al,0xde
  406913:	out    dx,al
  406914:	or     DWORD PTR [eax],0x16
  406917:	pop    es
  406918:	(bad)  
  406919:	bound  ebp,QWORD PTR [ebp-0x507e0e3]
  40691f:	stos   BYTE PTR es:[edi],al
  406920:	xchg   ecx,eax
  406921:	xor    ax,0x8c71
  406925:	sub    BYTE PTR [eax],ch
  406927:	(bad)  
  406928:	repz int 0x2a
  40692b:	mov    esi,0xb1dcc53f
  406930:	jmp    0x406936
  406932:	fist   DWORD PTR [eax-0x7d]
  406935:	xchg   edx,eax
  406936:	(bad)  [edx+0xb3a7157]
  40693c:	sub    eax,0xac886bdf
  406941:	out    dx,al
  406942:	jge    0x4069a4
  406944:	aas    
  406945:	into   
  406946:	fcomp  DWORD PTR [ebp+0x75]
  406949:	pop    edi
  40694a:	jmp    0xf9488cd3
  40694f:	jl     0x406974
  406951:	or     eax,0xa2b3ea97
  406956:	inc    esp
  406957:	(bad)  [edi*8+0x607f2a05]
  40695e:	shr    DWORD PTR [ecx],cl
  406960:	sub    ch,ch
  406962:	xor    BYTE PTR [ebx],0x41
  406965:	pushf  
  406966:	stos   DWORD PTR es:[edi],eax
  406967:	call   0x360148a2
  40696c:	lahf   
  40696d:	js     0x40693e
  40696f:	sbb    eax,0x4c99ba6d
  406974:	mov    ah,0x71
  406976:	pop    edx
  406977:	shr    DWORD PTR [ecx-0x2f],cl
  40697a:	cmp    edx,DWORD PTR [eax]
  40697c:	neg    BYTE PTR [esi]
  40697e:	test   eax,0x73b8c7d7
  406983:	enter  0xcce5,0xfb
  406987:	pop    esi
  406988:	lock jg 0x406923
  40698b:	ins    DWORD PTR es:[edi],dx
  40698c:	pop    ecx
  40698d:	or     dl,BYTE PTR [esi+0x67a1af97]
  406993:	mov    edx,0x399f6cfa
  406998:	fidivr WORD PTR ds:0x3436a356
  40699e:	and    ah,BYTE PTR [esi+0x1e251b33]
  4069a4:	add    edi,DWORD PTR [ebx+0x2d]
  4069a7:	pusha  
  4069a8:	das    
  4069a9:	cmp    DWORD PTR [ebp-0x63fd950e],ebx
  4069af:	cmc    
  4069b0:	mov    ebx,0x80163745
  4069b5:	mov    edi,0xae02864
  4069ba:	mov    ebp,DWORD PTR [ebp-0x33]
  4069bd:	pop    es
  4069be:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069c0:	pusha  
  4069c1:	mov    ah,0x61
  4069c3:	adc    eax,DWORD PTR ss:[eax+0x24]
  4069c7:	cmp    bl,BYTE PTR [ecx+0x1fb6d57e]
  4069cd:	jg     0x4069b6
  4069cf:	push   esp
  4069d0:	cld    
  4069d1:	jecxz  0x406a40
  4069d3:	mov    ebp,0xa16d0adf
  4069d8:	fstp   DWORD PTR [eax]
  4069da:	es dec ebp
  4069dc:	mov    DWORD PTR [edi+edx*2],esp
  4069df:	aam    0xb0
  4069e1:	loop   0x4069ba
  4069e3:	mov    ebx,0xd83ff8c1
  4069e8:	repz fstp TBYTE PTR [edx-0x17]
  4069ec:	mov    BYTE PTR [edx+0x15],ch
  4069ef:	cmp    BYTE PTR [eax-0x6b],dh
  4069f2:	ins    DWORD PTR es:[edi],dx
  4069f3:	xor    eax,0x82b94085
  4069f8:	inc    ebx
  4069f9:	(bad)  
  4069fa:	addr16 dec ebx
  4069fc:	imul   esp,DWORD PTR [ebp+eax*2+0x2aa663e],0xffffffba
  406a04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a05:	or     eax,0xbcda1ade
  406a0a:	fistp  QWORD PTR [ecx+edx*2+0x4ab9204a]
  406a11:	loope  0x406a7b
  406a13:	int    0x69
  406a15:	(bad)  
  406a16:	leave  
  406a17:	fadd   DWORD PTR [edi-0x5e]
  406a1a:	not    BYTE PTR [edx]
  406a1c:	call   0x436bfe3b
  406a21:	push   ds
  406a22:	sti    
  406a23:	jg     0x406a8b
  406a25:	test   BYTE PTR [ecx+0x32fd4f82],ch
  406a2b:	jmp    0x73863d8b
  406a30:	mov    esi,0x35221bd7
  406a35:	mov    ebx,0x3a8cfeb9
  406a3a:	inc    ecx
  406a3b:	ret    
  406a3c:	jne    0x406abc
  406a3e:	outs   dx,BYTE PTR es:[esi]
  406a40:	lods   eax,DWORD PTR ds:[esi]
  406a41:	pop    ebx
  406a42:	mov    ch,0xe2
  406a44:	jmp    0x2bc17eb4
  406a49:	jle    0x4069e0
  406a4b:	mov    ds:0x26e574a3,eax
  406a50:	(bad)
  406a53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a54:	(bad)  
  406a55:	adc    bh,BYTE PTR [ecx]
  406a57:	mov    al,BYTE PTR [ebx+0x5874fd2]
  406a5d:	clc    
  406a5e:	pusha  
  406a5f:	mov    bh,0x51
  406a61:	jg     0x406a43
  406a63:	push   ecx
  406a64:	push   ds
  406a65:	jb     0x406a79
  406a67:	pop    edi
  406a68:	xchg   edx,eax
  406a69:	lods   eax,DWORD PTR ds:[esi]
  406a6a:	sbb    al,BYTE PTR [esi]
  406a6c:	in     eax,0x64
  406a6e:	imul   edi,DWORD PTR [ecx],0xd5297c06
  406a74:	dec    ecx
  406a75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a76:	cmc    
  406a77:	stc    
  406a78:	add    BYTE PTR [edx],bl
  406a7a:	jb     0x406a83
  406a7c:	or     DWORD PTR [eax-0x43],ebp
  406a7f:	and    eax,0x8ef5dd13
  406a84:	in     eax,0x52
  406a86:	out    0xa2,eax
  406a88:	adc    DWORD PTR [eax+0x1049d5a4],ebx
  406a8e:	pop    edx
  406a8f:	or     al,0x83
  406a91:	pop    ebx
  406a92:	add    al,0x2d
  406a94:	sub    bh,0x78
  406a97:	pop    ss
  406a98:	mov    ecx,0x76b7264e
  406a9d:	xchg   edx,eax
  406a9e:	aas    
  406a9f:	xchg   ebx,eax
  406aa0:	aas    
  406aa1:	inc    eax
  406aa2:	test   eax,0x69e54c39
  406aa7:	xchg   esp,eax
  406aa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406aa9:	pop    ebp
  406aaa:	(bad)  [edi]
  406aac:	jg     0x406ad2
  406aae:	(bad)  
  406aaf:	pop    edi
  406ab0:	out    dx,eax
  406ab1:	push   edi
  406ab2:	mov    ebp,0xa2a2814f
  406ab7:	retf   
  406ab8:	sub    al,0x53
  406aba:	pop    ebp
  406abb:	cli    
  406abc:	inc    edi
  406abd:	jecxz  0x406b2a
  406abf:	dec    esi
  406ac0:	jb     0x3fa6cb76
  406ac6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ac7:	pop    esp
  406ac8:	sbb    al,BYTE PTR ds:0x5c13a88a
  406ace:	mov    bl,0x3d
  406ad0:	(bad)  
  406ad1:	xor    esp,DWORD PTR [ebx+0x37ebf636]
  406ad7:	mov    fs,WORD PTR [edi-0x523e21b]
  406add:	fwait
  406ade:	and    dh,BYTE PTR [edi+ecx*4]
  406ae1:	jb     0x406a9a
  406ae3:	pop    esi
  406ae4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ae5:	xor    eax,edx
  406ae7:	jae    0x406b03
  406ae9:	inc    ebp
  406aea:	push   eax
  406aeb:	xor    bh,BYTE PTR [ebp+0x3f]
  406aee:	mov    al,ds:0x630834d2
  406af3:	jne    0x406aa8
  406af5:	or     al,0xa5
  406af7:	fld    TBYTE PTR [ebp+0x11]
  406afa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406afb:	jle    0x406b0d
  406afd:	(bad)  
  406afe:	iret   
  406aff:	fcom   DWORD PTR [ecx+0x25dc793]
  406b05:	stc    
  406b06:	or     DWORD PTR [ebx+esi*4-0x60300c6a],esi
  406b0d:	clts   
  406b0f:	add    al,0x96
  406b11:	sub    ecx,DWORD PTR [ebx]
  406b13:	es fs inc edx
  406b16:	jnp    0x406b66
  406b18:	sbb    eax,0x9fc884ce
  406b1d:	push   ds
  406b1e:	ds sbb dl,0xa9
  406b22:	popa   
  406b23:	out    dx,al
  406b24:	push   ecx
  406b25:	fs call 0xa99cae89
  406b2b:	fwait
  406b2c:	xor    DWORD PTR [edi],0xffffffa2
  406b2f:	test   eax,0x2377731d
  406b34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b35:	or     BYTE PTR ds:0xd8c5c062,0x7b
  406b3c:	xor    bl,cl
  406b3e:	aaa    
  406b3f:	ror    DWORD PTR [esi-0x77378642],1
  406b45:	test   BYTE PTR [edi+0x6],ah
  406b48:	in     al,dx
  406b49:	jg     0x406bc3
  406b4b:	push   ds
  406b4c:	sbb    eax,0xe2dfdb59
  406b51:	add    eax,0x7f41cf45
  406b56:	repnz mov edi,0x63b4ffd2
  406b5c:	mov    eax,ds:0x6aacea54
  406b61:	and    al,0x59
  406b63:	(bad)  
  406b64:	rol    DWORD PTR [ecx+0x6c],cl
  406b67:	pop    edx
  406b68:	push   ds
  406b69:	push   edi
  406b6a:	or     BYTE PTR [ebp+0x58],ch
  406b6d:	inc    ebx
  406b6e:	dec    edx
  406b6f:	adc    al,0xf6
  406b71:	mov    dh,0xf2
  406b73:	and    ah,BYTE PTR [esi+0x64]
  406b76:	enter  0x69b5,0xd6
  406b7a:	jae    0x406b00
  406b7c:	retf   0x33c7
  406b7f:	dec    esp
  406b80:	mov    edx,0xf6cfa18e
  406b86:	dec    ecx
  406b87:	shr    DWORD PTR [ebx-0x1e3a1a7b],0xe0
  406b8e:	mov    dh,0x45
  406b90:	cwde   
  406b91:	jb     0x406bb6
  406b93:	adc    al,0xe0
  406b95:	xchg   edx,eax
  406b96:	mov    cl,0x54
  406b98:	xlat   BYTE PTR ds:[ebx]
  406b99:	retf   0x3af3
  406b9c:	xor    BYTE PTR es:[ecx+edx*8-0x9],cl
  406ba1:	loope  0x406b2a
  406ba3:	mulps  xmm5,XMMWORD PTR [ebp-0x21]
  406ba7:	jecxz  0x406b93
  406ba9:	add    eax,0x45960c2c
  406bae:	cwde   
  406baf:	jae    0x406bd8
  406bb1:	xchg   BYTE PTR [eax-0x3c032e53],al
  406bb7:	mov    al,ds:0x3418ae99
  406bbc:	mov    edx,0x6b3691c5
  406bc1:	leave  
  406bc2:	sub    DWORD PTR [edi+edi*4-0x3296de48],edi
  406bc9:	xor    eax,0xed0c95bc
  406bce:	js     0x406c29
  406bd0:	hlt    
  406bd1:	push   0x2d0b8a7d
  406bd6:	(bad)  
  406bd7:	cs mov edx,0x43f009c9
  406bdd:	sub    BYTE PTR [edx-0x26bbb3b6],al
  406be3:	pushf  
  406be4:	adc    BYTE PTR ds:[esi+edi*8-0x30],0xb4
  406bea:	sbb    BYTE PTR [ebp-0x5c],cl
  406bed:	pop    ebp
  406bee:	xchg   eax,ebx
  406bf0:	mov    esi,0x3d81d2da
  406bf5:	idiv   DWORD PTR [ecx-0x1]
  406bf8:	sub    BYTE PTR [edi+0x5f718b49],cl
  406bfe:	xchg   edx,eax
  406bff:	sub    al,0xe8
  406c01:	icebp  
  406c02:	push   ss
  406c03:	and    edi,DWORD PTR [esi+0x27187f18]
  406c09:	mov    al,0xe8
  406c0b:	inc    eax
  406c0c:	xlat   BYTE PTR ds:[ebx]
  406c0d:	mov    BYTE PTR [edx-0x3d3c4fe],al
  406c13:	lahf   
  406c14:	rcr    DWORD PTR [eax],0xcb
  406c17:	call   0xd6407813
  406c1c:	dec    edi
  406c1d:	mov    dl,0xb1
  406c1f:	cmp    cl,BYTE PTR [ebx]
  406c21:	inc    ebx
  406c22:	jle    0x406c7b
  406c24:	(bad)  
  406c25:	arpl   bx,sp
  406c27:	jnp    0x406bf7
  406c29:	xor    cl,BYTE PTR [ebx+edi*1]
  406c2c:	push   0x763f78d
  406c31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c32:	push   ebx
  406c33:	xchg   ebx,eax
  406c34:	int3   
  406c35:	pop    eax
  406c36:	inc    DWORD PTR [ecx+0x76]
  406c39:	out    dx,al
  406c3a:	or     eax,0xe83f855d
  406c3f:	or     al,0xc3
  406c41:	js     0x406c8c
  406c43:	push   ecx
  406c44:	mov    ch,0x78
  406c46:	mov    dl,0x5e
  406c48:	or     cl,bh
  406c4a:	adc    eax,0xa2ce34b2
  406c4f:	pop    ebx
  406c50:	mov    dl,al
  406c52:	push   ds
  406c53:	test   DWORD PTR [edi+edi*4-0x2f7c7764],esi
  406c5a:	pop    edx
  406c5b:	mov    al,ds:0xc0b987d6
  406c60:	add    DWORD PTR [eax],ecx
  406c62:	pop    ecx
  406c63:	ins    BYTE PTR es:[edi],dx
  406c64:	(bad)  
  406c66:	inc    ebp
  406c67:	jp     0x406c60
  406c69:	dec    ebp
  406c6a:	aas    
  406c6b:	cdq    
  406c6c:	fwait
  406c6d:	push   esp
  406c6e:	out    dx,eax
  406c6f:	sahf   
  406c70:	inc    ebp
  406c71:	xchg   ebx,eax
  406c72:	add    DWORD PTR [eax+0x1b],edx
  406c75:	and    ebp,esi
  406c77:	push   ecx
  406c78:	ret    
  406c79:	lods   al,BYTE PTR ds:[esi]
  406c7a:	test   esp,ebx
  406c7c:	jecxz  0x406c51
  406c7e:	ret    0x4731
  406c81:	stos   DWORD PTR es:[edi],eax
  406c82:	(bad)  
  406c83:	push   esi
  406c84:	mov    ch,0xaa
  406c86:	ss mov ebx,0xf11114b5
  406c8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c8d:	mov    cs,WORD PTR [edx+0x21]
  406c90:	aas    
  406c91:	pop    esi
  406c93:	pusha  
  406c94:	push   ds
  406c95:	je     0x406c76
  406c97:	add    DWORD PTR [eax-0x55],edi
  406c9a:	push   0x3414beaa
  406c9f:	xchg   ebp,eax
  406ca0:	add    al,0xfd
  406ca2:	and    eax,DWORD PTR [ebp+0x3c]
  406ca5:	or     eax,DWORD PTR [eax]
  406ca7:	xchg   esi,eax
  406ca8:	xchg   ebp,eax
  406ca9:	push   ds
  406caa:	(bad)  
  406cab:	mov    BYTE PTR [edi-0x33],0x54
  406caf:	cli    
  406cb0:	dec    esp
  406cb1:	in     eax,dx
  406cb2:	xchg   BYTE PTR [edx],cl
  406cb4:	loopne 0x406ce1
  406cb6:	js     0x406cdd
  406cb8:	dec    ebp
  406cb9:	xor    BYTE PTR [ebp-0x15],ch
  406cbc:	retf   
  406cbd:	xor    BYTE PTR [ebp-0x49],al
  406cc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406cc1:	and    BYTE PTR [edx],cl
  406cc3:	lahf   
  406cc4:	in     eax,0x52
  406cc6:	div    BYTE PTR [edx]
  406cc8:	mov    ch,0xf9
  406cca:	imul   ecx,DWORD PTR [ebx-0x5eb4b370],0x22
  406cd1:	loopne 0x406cda
  406cd3:	gs loope 0x406cfc
  406cd6:	and    al,BYTE PTR [esi+0x6f]
  406cd9:	mov    eax,ds:0x2101f863
  406cde:	xor    BYTE PTR [ecx+0xbfd7934],0x5b
  406ce5:	push   0x1e851e44
  406cea:	cmp    dh,BYTE PTR [ecx+0x656349c]
  406cf0:	dec    eax
  406cf1:	or     BYTE PTR [edi],0x90
  406cf4:	jmp    0x406d58
  406cf6:	mov    edx,0x8f694fb
  406cfb:	sbb    eax,0xf85c8732
  406d00:	sbb    ch,BYTE PTR [ebx+0xd44cae3]
  406d06:	jno    0x406d43
  406d08:	xor    DWORD PTR [edi-0x4ef4d6a1],ebx
  406d0e:	aad    0xea
  406d10:	cmp    ah,BYTE PTR [ecx+0x4a]
  406d13:	pop    eax
  406d14:	int3   
  406d15:	xchg   edx,eax
  406d16:	adc    eax,0x55956e90
  406d1b:	cmp    ecx,edx
  406d1d:	sbb    dh,BYTE PTR [ecx-0x3f]
  406d20:	mov    dl,0xff
  406d22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d23:	adc    al,0xc7
  406d25:	jmp    0x733b:0xc451453c
  406d2c:	cmp    esi,DWORD PTR [edi+0x22]
  406d2f:	mov    DWORD PTR [edx-0x67],esi
  406d32:	mov    eax,0xb42adfb
  406d37:	adc    DWORD PTR [edi-0x5b],edx
  406d3a:	push   es
  406d3b:	call   FWORD PTR [ebx-0x2aab36c4]
  406d41:	mul    edi
  406d43:	(bad)  
  406d45:	pop    ds
  406d46:	mov    BYTE PTR [ebx],bl
  406d48:	adc    al,0x2
  406d4a:	fisubr WORD PTR [eax+0x92853ac]
  406d50:	xchg   esp,eax
  406d51:	add    dh,BYTE PTR [edi-0x52]
  406d54:	inc    ebp
  406d55:	pop    esi
  406d56:	push   ecx
  406d57:	(bad)  
  406d58:	jns    0x406d0a
  406d5a:	std    
  406d5b:	pop    ss
  406d5c:	repnz mov eax,ds:0x73289dc6
  406d62:	dec    ebp
  406d63:	and    DWORD PTR [ecx+eax*4-0x559f3f86],esi
  406d6a:	in     eax,dx
  406d6b:	adc    al,0xbf
  406d6d:	sub    BYTE PTR [edx-0x420d3b97],cl
  406d73:	fadd   DWORD PTR [edi+0x29]
  406d76:	sub    bl,BYTE PTR [edi+esi*1+0x4a058bf4]
  406d7d:	in     al,dx
  406d7e:	xor    ah,BYTE PTR [edi]
  406d80:	out    dx,eax
  406d81:	push   ebx
  406d82:	add    BYTE PTR [edi+ebp*4-0x683f2af5],0xf0
  406d8a:	inc    esi
  406d8b:	mov    bh,0x69
  406d8d:	scas   eax,DWORD PTR es:[edi]
  406d8e:	mov    dl,0x9b
  406d90:	std    
  406d91:	mov    esp,DWORD PTR [ecx+0x5d]
  406d94:	fistp  DWORD PTR [edi]
  406d96:	daa    
  406d97:	cli    
  406d98:	push   esp
  406d99:	inc    esi
  406d9a:	scas   al,BYTE PTR es:[edi]
  406d9b:	cwde   
  406d9c:	sub    eax,0x70e88e05
  406da1:	stos   WORD PTR es:[edi],ax
  406da3:	loopne 0x406dc2
  406da5:	or     eax,0x488d351d
  406daa:	ds mov ebp,0xd8bcc209
  406db0:	jne    0x406e08
  406db2:	xor    DWORD PTR [edx-0x616e1282],0x23e8344b
  406dbc:	jne    0x406da5
  406dbe:	enter  0x2ca,0x68
  406dc2:	loopne 0x406e0f
  406dc4:	fsubr  DWORD PTR [eax-0x5c45687e]
  406dca:	mov    eax,ds:0x819d9298
  406dcf:	int3   
  406dd0:	lods   eax,DWORD PTR ds:[esi]
  406dd1:	xor    edx,DWORD PTR [eax+0x65]
  406dd4:	ret    0xa782
  406dd7:	mov    esi,edx
  406dd9:	or     eax,0xd8af44c6
  406dde:	call   0xd2aed291
  406de3:	pop    ds
  406de4:	pushf  
  406de5:	inc    esp
  406de6:	pusha  
  406de7:	add    BYTE PTR ds:0xa4a7f358,ah
  406ded:	fdivr  QWORD PTR [esi]
  406def:	inc    ecx
  406df0:	scas   al,BYTE PTR es:[edi]
  406df1:	add    ecx,DWORD PTR [ebp-0x27]
  406df4:	mov    WORD PTR [ebp+0x38],fs
  406df7:	inc    edi
  406df8:	mov    ebx,0x135bfc8d
  406dfd:	cmp    BYTE PTR [ecx-0x2f877a75],0xfb
  406e04:	xchg   esi,eax
  406e05:	cmp    ebx,DWORD PTR [edx]
  406e07:	xor    al,0x44
  406e09:	push   ecx
  406e0a:	sbb    eax,0x995ef226
  406e0f:	sahf   
  406e10:	push   ebx
  406e11:	mov    edi,DWORD PTR [edi-0x6b632678]
  406e17:	add    eax,0xf02edcd6
  406e1c:	(bad)  
  406e1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e1f:	push   ebx
  406e20:	push   ebx
  406e21:	ret    0x134a
  406e24:	in     al,dx
  406e25:	xor    cl,dl
  406e27:	icebp  
  406e28:	in     eax,0xe3
  406e2a:	push   es
  406e2b:	sub    DWORD PTR [edx+0x21c68a8d],0x68
  406e32:	fwait
  406e33:	das    
  406e34:	cmp    edi,DWORD PTR [esi-0x4f4be972]
  406e3a:	ret    0x286e
  406e3d:	sbb    esp,DWORD PTR [edx+eiz*4-0x6]
  406e41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e42:	cwde   
  406e43:	xor    edx,esp
  406e45:	adc    ecx,DWORD PTR [ebx]
  406e47:	lock mov ds:0x69af6b5d,al
  406e4d:	cli    
  406e4e:	pushf  
  406e4f:	jbe    0x406e57
  406e51:	jmp    0x7700ee57
  406e56:	add    BYTE PTR [edx-0x79ae8b2d],cl
  406e5c:	lea    edx,[esi]
  406e5e:	in     eax,0x1c
  406e60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e61:	or     eax,0xa2516d69
  406e66:	lock push edx
  406e68:	sub    dl,BYTE PTR [edx-0x35]
  406e6b:	xchg   ebx,eax
  406e6c:	push   ebp
  406e6d:	jbe    0x406e61
  406e6f:	or     ch,BYTE PTR [esi-0x717aa8bb]
  406e75:	push   ecx
  406e76:	fsub   DWORD PTR [esi+ebp*2+0x3bf34eec]
  406e7d:	adc    al,0x7
  406e7f:	jns    0x406e43
  406e81:	aas    
  406e82:	dec    edx
  406e83:	adc    eax,0x5067407e
  406e88:	outs   dx,BYTE PTR ds:[esi]
  406e89:	sbb    edx,DWORD PTR [ecx+0x310c98ce]
  406e8f:	push   esp
  406e90:	outs   dx,BYTE PTR ds:[esi]
  406e91:	mov    al,0x11
  406e93:	pop    ebp
  406e94:	fldln2 
  406e96:	retf   0xa867
  406e99:	mov    dh,0xf8
  406e9b:	push   ss
  406e9c:	(bad)  
  406e9d:	dec    edx
  406e9e:	push   ecx
  406e9f:	inc    esp
  406ea0:	jnp    0x406ea6
  406ea2:	shr    cl,cl
  406ea4:	add    dl,BYTE PTR [eax+0x43ef4e43]
  406eaa:	fwait
  406eab:	mov    ecx,0xb93377bb
  406eb0:	(bad)  
  406eb1:	imul   edi,esi,0x29
  406eb4:	(bad)  
  406eb6:	mov    edx,0x16b5c846
  406ebb:	test   DWORD PTR [ecx+0x20f7100a],0x9008d8ff
  406ec5:	loopne 0x406e7c
  406ec7:	fdiv   st,st(6)
  406ec9:	cmp    DWORD PTR ds:0x35f71e48,0x2f1204f2
  406ed3:	aaa    
  406ed4:	stos   DWORD PTR es:[edi],eax
  406ed5:	dec    esi
  406ed6:	mov    esp,0xeb6bcf85
  406edb:	call   0xa5a9970a
  406ee0:	xlat   BYTE PTR ds:[ebx]
  406ee1:	outs   dx,DWORD PTR ds:[esi]
  406ee2:	ss pop ds
  406ee4:	jle    0x406f51
  406ee6:	scas   al,BYTE PTR es:[edi]
  406ee7:	in     al,dx
  406ee8:	mov    bh,ah
  406eea:	sub    eax,edx
  406eec:	gs pop esi
  406eee:	sub    DWORD PTR [ebp+ebp*8-0x43],esi
  406ef2:	jo     0x406efa
  406ef4:	pop    ebp
  406ef5:	fcomp  DWORD PTR [ebx]
  406ef7:	jmp    0xe631127e
  406efc:	imul   ebp,DWORD PTR [edx-0x2b],0x802fd82
  406f03:	stos   DWORD PTR es:[edi],eax
  406f04:	fcomp  st(6)
  406f06:	sub    BYTE PTR [ecx-0x65ac7320],al
  406f0c:	adc    al,0x7f
  406f0e:	ins    BYTE PTR es:[edi],dx
  406f0f:	cdq    
  406f10:	les    edx,FWORD PTR [ebx+0x63b56be4]
  406f16:	jb     0x406edb
  406f18:	xchg   esi,eax
  406f19:	fild   WORD PTR [ebp-0x70]
  406f1c:	lods   al,BYTE PTR ds:[esi]
  406f1d:	jmp    0x406f31
  406f1f:	cs ja  0x406f61
  406f22:	(bad)  
  406f23:	dec    ebx
  406f24:	sub    BYTE PTR [ebx+0x273552a9],ah
  406f2a:	xor    DWORD PTR [eax+0x41],edi
  406f2d:	dec    ecx
  406f2e:	inc    edi
  406f2f:	push   ebp
  406f30:	dec    ebp
  406f31:	call   0x11da:0x5711c718
  406f38:	and    eax,DWORD PTR [ebx+0x3a5227ba]
  406f3e:	xor    DWORD PTR [edi+0x4],edx
  406f41:	dec    ebx
  406f42:	bound  ebp,QWORD PTR [ecx-0x14]
  406f45:	not    BYTE PTR [edi+0x554c61dd]
  406f4b:	inc    DWORD PTR [ecx+0x4e]
  406f4e:	bound  ecx,QWORD PTR [ebx-0x693e27f8]
  406f54:	jno    0x406f2f
  406f56:	mov    dh,0x91
  406f58:	or     DWORD PTR [eax+0x16468dc8],esp
  406f5e:	or     ecx,DWORD PTR [edx-0x1d13f517]
  406f64:	jo     0x406f08
  406f66:	pop    ss
  406f67:	(bad)  
  406f68:	lds    ecx,FWORD PTR [edi+0x71]
  406f6b:	rol    bl,1
  406f6d:	and    DWORD PTR [edi],ecx
  406f6f:	std    
  406f70:	mov    ebp,0x1ca5fbe2
  406f75:	xchg   ecx,eax
  406f76:	std    
  406f77:	mov    dl,0x8d
  406f79:	repz jmp DWORD PTR [ebp+0x1d]
  406f7d:	lods   eax,DWORD PTR ds:[esi]
  406f7e:	sti    
  406f7f:	sub    al,0x90
  406f81:	or     ch,BYTE PTR [ebx+0x8]
  406f84:	out    0x41,eax
  406f86:	sbb    ebx,esi
  406f88:	and    eax,0xf467222d
  406f8d:	jmp    0x4db4062c
  406f92:	push   eax
  406f93:	out    dx,eax
  406f94:	ds stos BYTE PTR es:[edi],al
  406f96:	lds    edi,FWORD PTR [edi]
  406f98:	inc    esp
  406f99:	stos   DWORD PTR es:[edi],eax
  406f9a:	mov    ch,0xf8
  406f9c:	retf   0x504c
  406f9f:	cmp    BYTE PTR [ebp+0xa944a11],0xf5
  406fa6:	pusha  
  406fa7:	sbb    bh,BYTE PTR [edx+0x3aa640d9]
  406fad:	dec    ecx
  406fae:	hlt    
  406faf:	loop   0x406f32
  406fb1:	ss out dx,al
  406fb3:	sub    BYTE PTR [ebp-0x15],cl
  406fb6:	inc    edi
  406fb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406fb8:	icebp  
  406fb9:	ret    0x4c95
  406fbc:	jne    0x406fa2
  406fbe:	add    al,0x79
  406fc0:	dec    esi
  406fc1:	lea    esi,[ebp+0x6a]
  406fc4:	or     al,0x8a
  406fc6:	add    eax,DWORD PTR [ecx+0x8a05ab8]
  406fcc:	dec    edx
  406fcd:	retf   
  406fce:	and    eax,0xe988e799
  406fd3:	inc    esi
  406fd4:	gs (bad) 
  406fd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406fd8:	jp     0x407015
  406fda:	ins    DWORD PTR es:[edi],dx
  406fdb:	aad    0xe1
  406fdd:	jbe    0x406fc4
  406fdf:	mov    eax,ds:0x235d4204
  406fe4:	add    al,0x86
  406fe6:	push   ebp
  406fe7:	xchg   ebx,eax
  406fe8:	mov    ?,ebp
  406fea:	push   es
  406feb:	mov    bl,0x32
  406fed:	mov    edx,DWORD PTR gs:[ecx]
  406ff0:	ret    
  406ff1:	xor    DWORD PTR [edi+edi*8-0x6657c5b6],esp
  406ff8:	lds    ebp,FWORD PTR [ecx+0x1bb06da7]
  406ffe:	and    al,0x0
  407000:	aas    
  407001:	movzx  eax,ch
  407004:	neg    BYTE PTR [ebp+0x41838850]
  40700a:	or     eax,0xa55460b
  40700f:	pop    ebp
  407010:	inc    DWORD PTR [ecx+0x5c787f6b]
  407016:	rcl    ecx,1
  407018:	(bad)  
  407019:	sti    
  40701a:	dec    esi
  40701b:	out    dx,al
  40701c:	adc    BYTE PTR [eax+0x50dcb39a],0xff
  407023:	lods   eax,DWORD PTR es:[esi]
  407025:	jae    0x406fe7
  407027:	mov    esp,0x335595e2
  40702c:	fwait
  40702d:	jecxz  0x40707f
  40702f:	in     al,0x3b
  407031:	fisttp DWORD PTR [ebx-0x74]
  407034:	add    BYTE PTR [edi+0x3b],0x26
  407038:	(bad)  
  407039:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40703a:	imul   ebp,DWORD PTR [eax+0x747f0b29],0x26c4af4a
  407044:	sbb    eax,DWORD PTR [ebx-0x47]
  407047:	mov    cl,0x38
  407049:	fsub   st(3),st
  40704b:	inc    edx
  40704c:	push   0xddf50f23
  407051:	pop    ss
  407052:	loopne 0x4070cf
  407054:	push   esp
  407055:	mov    ds:0x472a5323,al
  40705a:	inc    ebp
  40705b:	or     bh,ah
  40705d:	std    
  40705e:	push   es
  40705f:	dec    ecx
  407060:	push   ecx
  407061:	xchg   DWORD PTR [ebx+0x59bd6758],ebx
  407067:	jno    0x406ff9
  407069:	dec    esp
  40706a:	sub    BYTE PTR [eax],dh
  40706c:	dec    esi
  40706d:	add    BYTE PTR [esi+0x66],bh
  407070:	jns    0x407050
  407072:	sti    
  407073:	jle    0x40707d
  407075:	sti    
  407076:	fwait
  407077:	cld    
  407078:	xor    eax,0x3ddada85
  40707d:	cmp    al,0xe1
  407080:	call   0xa6ce:0x2c613545
  407087:	fsubr  QWORD PTR [ebx]
  407089:	pop    esi
  40708a:	jge    0x407056
  40708c:	pop    es
  40708d:	mov    ebx,0x4cec2fa1
  407092:	mov    esi,0x8b374403
  407097:	mov    eax,ds:0x5126603c
  40709c:	and    al,0xe2
  40709e:	test   esi,eax
  4070a0:	dec    ebp
  4070a1:	jbe    0x407101
  4070a3:	in     al,dx
  4070a4:	cmp    BYTE PTR [edx+0x30d5d3],dh
  4070aa:	xchg   DWORD PTR fs:[ebx],ebp
  4070ad:	call   0xfcd9d3b9
  4070b2:	and    al,BYTE PTR [ecx-0x2a]
  4070b5:	ret    
  4070b6:	aam    0x96
  4070b8:	push   eax
  4070b9:	lods   eax,DWORD PTR ds:[esi]
  4070ba:	xor    BYTE PTR ds:0x5875759,cl
  4070c0:	das    
  4070c1:	push   DWORD PTR [edi]
  4070c3:	mov    gs:0x64eea04,al
  4070c9:	nop
  4070ca:	gs loop 0x4070eb
  4070cd:	cmc    
  4070ce:	shr    DWORD PTR [esi-0x63e7ec5b],cl
  4070d4:	and    ch,BYTE PTR [eax+ecx*1-0x4dfc705c]
  4070db:	xor    dh,BYTE PTR [edi+ecx*4-0x44]
  4070df:	push   ebx
  4070e0:	dec    ebp
  4070e1:	jbe    0x4070af
  4070e3:	xchg   DWORD PTR [ebx-0xc],edx
  4070e6:	xchg   edi,eax
  4070e7:	sti    
  4070e8:	push   ebx
  4070e9:	add    DWORD PTR [esi-0x68016db6],edx
  4070ef:	popf   
  4070f0:	nop
  4070f1:	and    DWORD PTR [esi],ecx
  4070f3:	enter  0x285e,0x7
  4070f7:	xchg   esi,eax
  4070f8:	stos   DWORD PTR es:[edi],eax
  4070f9:	(bad)  
  4070fa:	jp     0x4070ea
  4070fc:	sbb    dh,BYTE PTR [edi]
  4070fe:	leave  
  4070ff:	cwde   
  407100:	clc    
  407101:	dec    ebx
  407102:	jne    0x4070e7
  407104:	dec    ebp
  407105:	push   ebp
  407106:	js     0x4070db
  407108:	pop    ebx
  407109:	dec    ebx
  40710a:	pop    ebx
  40710b:	mov    bl,0x6c
  40710d:	mov    bh,0xd0
  40710f:	push   0x47c4c3b8
  407114:	and    ecx,0xffffffad
  407117:	ins    DWORD PTR es:[edi],dx
  407118:	stos   DWORD PTR es:[edi],eax
  407119:	jecxz  0x407162
  40711b:	jp     0x4070eb
  40711d:	pop    ss
  40711e:	test   al,0x38
  407120:	push   esp
  407121:	in     eax,dx
  407122:	push   cs
  407123:	outs   dx,BYTE PTR ds:[esi]
  407124:	xor    BYTE PTR [ecx],dh
  407126:	dec    ebx
  407127:	xor    eax,0xee757a1e
  40712c:	repnz fwait
  40712e:	or     al,0x90
  407130:	in     eax,0x9f
  407132:	retf   0x60e3
  407135:	jg     0x4070b7
  407137:	mov    eax,0x2e180a5c
  40713c:	and    DWORD PTR [ebx],ebx
  40713e:	adc    al,BYTE PTR [esi+0xa7fd8cb]
  407144:	push   esi
  407145:	push   esp
  407146:	in     al,dx
  407147:	and    dl,bl
  407149:	ins    BYTE PTR es:[edi],dx
  40714a:	(bad)  
  40714b:	xor    ecx,eax
  40714d:	fcom   QWORD PTR [ebx]
  40714f:	imul   ebp,DWORD PTR [edx+0x4b],0xffffffbd
  407153:	cs call 0x74a3a758
  407159:	daa    
  40715a:	arpl   WORD PTR [eax],bx
  40715c:	sub    dl,0x76
  40715f:	sbb    ecx,DWORD PTR [edx-0x78]
  407162:	test   BYTE PTR [esi],0x3e
  407165:	mov    edx,0x5d48805d
  40716a:	cdq    
  40716b:	add    BYTE PTR [esi],0x7b
  40716e:	test   BYTE PTR [ebp-0x1419e283],0xfc
  407175:	mov    edx,0x496f7837
  40717a:	push   eax
  40717b:	enter  0x8575,0x83
  40717f:	lods   al,BYTE PTR ds:[esi]
  407180:	(bad)  [edi]
  407182:	mov    bh,0x7a
  407184:	cmc    
  407185:	test   DWORD PTR [edi+0x4b],esi
  407188:	and    ah,BYTE PTR fs:[esi+0xd]
  40718c:	mov    ebx,0xf6ff784f
  407191:	(bad)  
  407192:	jp     0x40711f
  407194:	inc    ebp
  407195:	outs   dx,DWORD PTR ds:[esi]
  407196:	out    0xec,al
  407198:	outs   dx,DWORD PTR ds:[esi]
  407199:	pop    ss
  40719a:	mov    dh,0x51
  40719c:	ret    
  40719d:	pop    esp
  40719e:	scas   al,BYTE PTR es:[edi]
  40719f:	(bad)  
  4071a0:	ficomp DWORD PTR [eax]
  4071a2:	fcmovb st,st(3)
  4071a4:	pop    eax
  4071a5:	adc    eax,0x73c70efd
  4071aa:	lds    esi,FWORD PTR [ebp+0x4f]
  4071ad:	mov    ?,WORD PTR [ebp-0x1f]
  4071b0:	adc    ebx,DWORD PTR [edi]
  4071b2:	and    al,0x7c
  4071b4:	iret   
  4071b5:	and    dl,BYTE PTR [ecx]
  4071b7:	fistp  WORD PTR [edx+0x13]
  4071ba:	in     al,0x2a
  4071bc:	jecxz  0x407174
  4071be:	sbb    eax,0x80d0225
  4071c3:	fst    DWORD PTR [ebx+0x30]
  4071c6:	jbe    0x40715e
  4071c8:	xor    edx,edx
  4071ca:	es jmp 0x69d:0x7235abd4
  4071d2:	les    ebx,FWORD PTR [ebx]
  4071d4:	fdivr  QWORD PTR [ebx+ebp*8]
  4071d7:	test   DWORD PTR [ebx-0x159d60],0xcba9f747
  4071e1:	cwde   
  4071e2:	test   eax,0x43347cee
  4071e7:	add    DWORD PTR [ebx+edi*2-0x46],esp
  4071eb:	retf   0x574d
  4071ee:	sahf   
  4071ef:	mov    WORD PTR [eax+0x6f],?
  4071f2:	div    cl
  4071f4:	in     al,0x6b
  4071f6:	(bad)  
  4071f7:	jmp    0x4071f3
  4071f9:	cmp    DWORD PTR gs:[edx],0xffffffd6
  4071fd:	pop    es
  4071fe:	and    ebp,DWORD PTR fs:[edx]
  407201:	xchg   ebp,eax
  407202:	pop    es
  407203:	in     al,0x2d
  407205:	int    0x3f
  407207:	jg     0x40727b
  407209:	in     al,dx
  40720a:	js     0x40722e
  40720c:	cwde   
  40720d:	mov    edx,0x4f934f57
  407212:	test   BYTE PTR [eax],dl
  407214:	hlt    
  407215:	aad    0x64
  407217:	ret    0xf884
  40721a:	cmp    BYTE PTR [esi+edi*1],al
  40721d:	push   ebx
  40721e:	fsubr  DWORD PTR [esp+edx*1+0x1d5525f1]
  407225:	outs   dx,DWORD PTR ss:[esi]
  407227:	(bad)  
  407229:	cli    
  40722a:	repz das 
  40722c:	popa   
  40722d:	fadd   DWORD PTR [ecx]
  40722f:	shl    DWORD PTR [ebx-0xaef5bc0],1
  407235:	bound  eax,QWORD PTR [esi+0x53]
  407238:	sahf   
  407239:	popa   
  40723a:	(bad)  
  40723b:	shl    BYTE PTR [ecx+ebp*2-0x1b77ccbf],1
  407242:	hlt    
  407243:	sub    al,0xae
  407245:	jmp    0x407248
  407247:	sbb    al,0x2f
  407249:	sub    BYTE PTR [eax+0x4c7abe37],ch
  40724f:	fs mov eax,esp
  407252:	scas   al,BYTE PTR es:[edi]
  407253:	xchg   ecx,eax
  407254:	adc    BYTE PTR [ebx+edi*8-0x39],0x56
  407259:	push   ss
  40725a:	neg    DWORD PTR [esi-0x140e1344]
  407260:	inc    ebx
  407261:	(bad)  
  407263:	loope  0x40723b
  407265:	js     0x407240
  407267:	push   ebp
  407268:	(bad)  
  407269:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40726a:	icebp  
  40726b:	arpl   WORD PTR [edx],ax
  40726d:	ins    BYTE PTR es:[edi],dx
  40726e:	ins    DWORD PTR es:[edi],dx
  40726f:	icebp  
  407270:	sbb    ah,bl
  407272:	jle    0x407287
  407274:	add    BYTE PTR [ecx-0x61],dh
  407277:	pop    edi
  407278:	(bad)  
  407279:	call   0x6df2ce09
  40727e:	call   0xc944:0x95565f1b
  407285:	jl     0x407299
  407287:	outs   dx,DWORD PTR ds:[esi]
  407288:	div    BYTE PTR es:[edi]
  40728b:	cmp    eax,0x88cefd8c
  407290:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407291:	stos   DWORD PTR es:[edi],eax
  407292:	hlt    
  407293:	xor    esi,DWORD PTR [esi]
  407295:	idiv   DWORD PTR [ecx+0xe]
  407298:	ins    DWORD PTR es:[edi],dx
  407299:	iret   
  40729a:	mov    esi,0xb14e5988
  40729f:	(bad)  
  4072a1:	fistp  DWORD PTR [ebx]
  4072a3:	mov    eax,ds:0xe7989c3c
  4072a8:	imul   ebx,DWORD PTR [eax-0x27],0x52
  4072ac:	les    ebp,FWORD PTR [ecx-0x7e]
  4072af:	rcr    dh,cl
  4072b1:	push   esp
  4072b2:	leave  
  4072b3:	pushf  
  4072b4:	iret   
  4072b5:	push   ds
  4072b6:	enter  0xd582,0x82
  4072ba:	sub    eax,DWORD PTR [esi-0xe]
  4072bd:	jp     0x4072f7
  4072bf:	xlat   BYTE PTR ds:[ebx]
  4072c0:	jmp    0x2c7a:0x17a8578a
  4072c7:	dec    ebp
  4072c8:	es int 0x84
  4072cb:	lods   eax,DWORD PTR ds:[esi]
  4072cc:	fisubr WORD PTR [ecx+0x5f68d3a3]
  4072d2:	in     eax,0x90
  4072d4:	nop
  4072d5:	dec    esi
  4072d6:	fldcw  WORD PTR [eax+0x31]
  4072d9:	and    eax,0x96f3aea3
  4072de:	mov    bh,BYTE PTR [esi]
  4072e0:	sub    ecx,DWORD PTR [edi+esi*4+0x52]
  4072e4:	xchg   ebx,eax
  4072e5:	jecxz  0x4072da
  4072e7:	addr16 push es
  4072e9:	pop    ds
  4072ea:	xchg   esp,eax
  4072eb:	int    0xc7
  4072ed:	mov    edx,0x29d4ae5c
  4072f2:	sti    
  4072f3:	fdivr  st,st(1)
  4072f5:	ss out 0x8d,al
  4072f8:	dec    eax
  4072f9:	mov    dh,0xea
  4072fb:	and    eax,0x47653a6
  407300:	jno    0x407354
  407302:	xor    edi,ebx
  407304:	not    BYTE PTR [ecx+0x23]
  407307:	repnz jecxz 0x4072c1
  40730a:	and    eax,0xfd1077eb
  40730f:	or     edx,DWORD PTR [ebx+edx*2+0x7d]
  407313:	add    al,0x77
  407315:	ficomp DWORD PTR [esi]
  407317:	es cli 
  407319:	adc    eax,0xd06ab124
  40731e:	or     edx,DWORD PTR [edi-0x2d]
  407321:	pop    eax
  407322:	cmp    eax,eax
  407324:	lods   al,BYTE PTR ds:[esi]
  407325:	int    0x58
  407327:	jnp    0x4072ee
  407329:	call   0xb841:0x3bd6f78b
  407330:	out    dx,eax
  407331:	add    cl,BYTE PTR ds:0xbe65cb9a
  407337:	adc    DWORD PTR [esp+edx*8+0x5f],edx
  40733b:	rol    BYTE PTR [edx-0x174f2a40],0xb8
  407342:	hlt    
  407343:	inc    edi
  407344:	stos   DWORD PTR es:[edi],eax
  407345:	add    BYTE PTR [eax],cl
  407347:	jmp    FWORD PTR [ebx+eiz*4-0x75]
  40734b:	js     0x40731b
  40734d:	push   es
  40734e:	shl    BYTE PTR [ecx-0x4d],cl
  407351:	xchg   esp,eax
  407352:	xor    BYTE PTR [ebp-0x46d264ff],dl
  407358:	je     0x407311
  40735a:	scas   al,BYTE PTR es:[edi]
  40735b:	fmul   DWORD PTR [ecx-0x4453a641]
  407361:	out    0x85,al
  407363:	dec    ecx
  407364:	xchg   edx,edi
  407366:	mov    al,0x58
  407368:	mov    cl,0xc6
  40736a:	repnz pop eax
  40736c:	dec    eax
  40736d:	mov    bl,0x1
  40736f:	cmp    al,0x53
  407371:	int3   
  407372:	sub    DWORD PTR [edx],eax
  407374:	sub    dl,ah
  407376:	retf   0x47dc
  407379:	outs   dx,BYTE PTR ds:[esi]
  40737a:	rcl    BYTE PTR [esi-0x18],cl
  40737d:	sbb    al,0xd5
  40737f:	add    al,0xbd
  407381:	loopne 0x407375
  407383:	mov    al,0x0
  407385:	les    ebx,FWORD PTR [ecx+edi*2+0x7f64ff68]
  40738c:	fwait
  40738d:	sub    BYTE PTR [esi+0x6a],dh
  407390:	fisub  DWORD PTR [ebx]
  407392:	aas    
  407393:	pop    ecx
  407394:	jnp    0x407346
  407396:	es repz jb 0x40733a
  40739a:	add    DWORD PTR [edx],0xffffffbc
  40739d:	pop    ss
  40739e:	test   cl,dh
  4073a0:	(bad)  
  4073a1:	stos   BYTE PTR es:[edi],al
  4073a2:	gs call 0x3ed8cde
  4073a8:	add    eax,0xf7615a63
  4073ad:	test   eax,0x5647e58
  4073b2:	mov    edx,0x67ada537
  4073b7:	sbb    eax,0xf30d9c42
  4073bc:	out    dx,al
  4073bd:	jmp    0x826e63b6
  4073c2:	jns    0x4073c8
  4073c4:	shl    BYTE PTR [edi-0x44],1
  4073c7:	xor    ecx,ecx
  4073c9:	adc    bh,BYTE PTR [edx+0x68]
  4073cc:	inc    eax
  4073cd:	imul   edx,DWORD PTR [esp+eax*2-0x58],0x534307fa
  4073d5:	jmp    0x1933:0x12f60cc4
  4073dc:	(bad)  
  4073dd:	pop    ss
  4073de:	jmp    DWORD PTR [esi+0xb]
  4073e1:	js     0x40743f
  4073e3:	mov    ebx,0xf6efd490
  4073e8:	pop    ss
  4073e9:	shl    BYTE PTR [ebx+ebx*1-0x3f],1
  4073ed:	sbb    edx,0x26b8d000
  4073f3:	inc    ebp
  4073f4:	mov    edx,0xd3b44144
  4073f9:	or     eax,0x10488af5
  4073fe:	aas    
  4073ff:	inc    edi
  407400:	dec    ecx
  407401:	adc    DWORD PTR [ebp+0x21],edi
  407404:	pop    ss
  407405:	mov    ds:0x5a6e6001,al
  40740a:	dec    ebx
  40740b:	mov    eax,ss
  40740d:	xor    eax,0xa14391f4
  407412:	or     al,0xb1
  407414:	jne    0x4073ac
  407416:	pop    esp
  407417:	push   esi
  407418:	lahf   
  407419:	rol    DWORD PTR [esi+0x635632fc],cl
  40741f:	outs   dx,DWORD PTR ds:[esi]
  407420:	es test eax,0x97332482
  407426:	pop    edi
  407427:	pop    esi
  407428:	xor    bh,dl
  40742a:	dec    eax
  40742b:	pop    ds
  40742c:	and    eax,0x74cc7a95
  407431:	pop    ebx
  407432:	pop    eax
  407433:	xchg   edi,eax
  407434:	adc    al,0xd6
  407436:	adc    al,0x8f
  407438:	into   
  407439:	add    BYTE PTR [edx+0x69d0b623],0xbe
  407440:	mov    al,ds:0x642cde2a
  407445:	xor    al,0x28
  407447:	das    
  407448:	(bad)  
  407449:	jnp    0x4073fc
  40744b:	inc    ebx
  40744c:	and    eax,0x24061f7b
  407451:	(bad)  [ebx-0x3e]
  407454:	fcomi  st,st(5)
  407456:	or     edx,DWORD PTR [ebx-0x7c]
  407459:	pop    es
  40745a:	pop    ecx
  40745b:	dec    eax
  40745c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40745d:	ror    BYTE PTR [eax-0x2e23121d],1
  407463:	sub    edx,DWORD PTR [ecx]
  407465:	int3   
  407466:	mov    ebp,0x53021927
  40746b:	std    
  40746c:	in     eax,dx
  40746d:	jmp    0x40747d
  40746f:	shl    edx,cl
  407471:	(bad)  
  407472:	fmul   QWORD PTR [edi+0x46]
  407475:	mov    edi,0xeeb4ca29
  40747a:	pop    ebx
  40747b:	pop    esi
  40747c:	or     edi,DWORD PTR [edx-0x2]
  40747f:	pop    ebp
  407480:	push   cs
  407481:	leave  
  407482:	cdq    
  407483:	pop    ebx
  407484:	mov    ds:0x99c4191f,eax
  407489:	dec    ebp
  40748a:	inc    edi
  40748b:	jne    0x40749c
  40748d:	inc    ebx
  40748e:	xchg   BYTE PTR [ebx-0xc2cffc],bh
  407494:	cmc    
  407495:	int3   
  407496:	fmul   st,st(5)
  407498:	and    BYTE PTR [eax-0x4deee6e0],dh
  40749e:	inc    edi
  40749f:	sub    DWORD PTR [ecx-0x74],ebx
  4074a2:	in     eax,dx
  4074a3:	mov    ah,0x58
  4074a5:	add    eax,0x8f3d7a6e
  4074aa:	stos   BYTE PTR es:[edi],al
  4074ab:	nop
  4074ac:	mov    dl,0x58
  4074ae:	ds push 0xec0ed3d2
  4074b4:	loop   0x4074a1
  4074b6:	and    esi,esp
  4074b8:	ss push edx
  4074ba:	dec    ebx
  4074bb:	ret    0x92e0
  4074be:	ret    0x76d0
  4074c1:	cs retf 0x5f76
  4074c5:	aas    
  4074c6:	in     al,dx
  4074c7:	push   ebx
  4074c8:	xor    dl,BYTE PTR [ecx-0x4f84f671]
  4074ce:	xor    edi,DWORD PTR [edi]
  4074d0:	push   0xbc517e50
  4074d5:	sbb    al,0x2f
  4074d7:	pusha  
  4074d8:	in     eax,0x91
  4074da:	sti    
  4074db:	dec    edi
  4074dc:	or     al,0x5
  4074de:	sub    al,0x8b
  4074e0:	jmp    0x8308b4e3
  4074e5:	popf   
  4074e6:	cmp    DWORD PTR [edi+0x1b],eax
  4074e9:	push   es
  4074ea:	add    DWORD PTR ds:0x8184b8ec,ecx
  4074f0:	cmp    al,0x67
  4074f2:	stos   BYTE PTR es:[edi],al
  4074f3:	and    edx,DWORD PTR [eax+eiz*8-0x369cda18]
  4074fa:	sbb    ch,ah
  4074fc:	dec    esi
  4074fd:	popa   
  4074fe:	loopne 0x40753a
  407500:	mov    WORD PTR [ebp-0x21],ss
  407503:	xchg   BYTE PTR [ecx+0x1b],cl
  407506:	jnp    0x40750f
  407508:	fidivr DWORD PTR [esi-0x5f1487b4]
  40750e:	mov    edi,0x75f235e4
  407513:	jg     0x4074ca
  407515:	enter  0x25a0,0x11
  407519:	cmp    ecx,DWORD PTR [eax+edx*1+0x94e5d5b]
  407520:	mov    ch,0xcb
  407522:	int    0xf2
  407524:	mov    ecx,0x6e410efc
  407529:	add    DWORD PTR [edx+0x7b],esi
  40752c:	jmp    0x5db9:0x6cb1aa20
  407533:	cld    
  407534:	(bad)  
  407535:	jl     0x407546
  407537:	imul   ecx,DWORD PTR [ecx],0xffffff8c
  40753a:	aam    0x1b
  40753c:	sub    ebx,esi
  40753e:	adc    DWORD PTR [eiz*8+0xcbf9d20],edx
  407545:	sub    eax,0x12e9c7c9
  40754a:	adc    ebp,DWORD PTR [ebp+0x7]
  40754d:	xchg   ecx,eax
  40754e:	mov    DWORD PTR [esp+edi*4],eax
  407551:	adc    DWORD PTR [ebx],esi
  407553:	mov    eax,0x47d8a5c5
  407558:	aad    0xd7
  40755a:	cmp    dh,BYTE PTR [esi+0x71507f7c]
  407560:	add    eax,0xbdb79d6
  407565:	jmp    FWORD PTR ds:0xb9554498
  40756b:	xor    eax,0xb94090f8
  407570:	or     eax,0x74340422
  407575:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407576:	test   ecx,esp
  407578:	mov    WORD PTR [ecx-0x790aef64],ds
  40757e:	cmp    eax,0xb00cdb7c
  407583:	inc    BYTE PTR [eax-0x10]
  407586:	cwde   
  407587:	mov    cl,BYTE PTR [esi-0x1619b732]
  40758d:	mov    ebp,0x70f77317
  407592:	push   es
  407593:	xchg   BYTE PTR [esi+0xc3f8f90],dh
  407599:	xor    al,0xf5
  40759b:	js     0x40759b
  40759d:	dec    ebp
  40759e:	repnz fidiv DWORD PTR [ecx+0x3c779895]
  4075a5:	pop    edi
  4075a6:	cld    
  4075a7:	and    DWORD PTR [ecx],esp
  4075a9:	loop   0x40753b
  4075ab:	or     bl,cl
  4075ad:	out    dx,eax
  4075ae:	mov    WORD PTR ds:0x53d64512,?
  4075b4:	jne    0x40762e
  4075b6:	rol    BYTE PTR [eax-0x3d5457fe],cl
  4075bc:	cmp    DWORD PTR [edx-0x7f127806],ebp
  4075c2:	jb     0x407642
  4075c4:	outs   dx,DWORD PTR ds:[esi]
  4075c5:	popf   
  4075c6:	push   edx
  4075c7:	mov    al,ds:0xbe2d9e9
  4075cc:	mov    eax,esi
  4075ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075cf:	imul   esi,DWORD PTR [eax],0x5
  4075d2:	out    dx,al
  4075d3:	call   0xaa7a:0xf0c7169b
  4075da:	sbb    ebx,ecx
  4075dc:	dec    BYTE PTR [eax-0x382a7dce]
  4075e2:	push   eax
  4075e3:	shl    DWORD PTR [edx-0x5c56dc4f],1
  4075e9:	iret   
  4075ea:	inc    ebp
  4075eb:	adc    ecx,ebx
  4075ed:	ss jno 0x407628
  4075f0:	push   es
  4075f1:	aaa    
  4075f2:	xchg   edi,eax
  4075f3:	mov    bl,0xd9
  4075f5:	loope  0x40757f
  4075f7:	int3   
  4075f8:	add    BYTE PTR [edx],bh
  4075fa:	xchg   edx,eax
  4075fb:	into   
  4075fc:	(bad)  
  4075fd:	adc    BYTE PTR [edx],0x7d
  407600:	jne    0x4075f4
  407602:	popa   
  407603:	mov    al,0x25
  407605:	mov    ebp,0xfc5273fd
  40760a:	xor    BYTE PTR [esi],al
  40760c:	hlt    
  40760d:	aaa    
  40760e:	jmp    0x9441:0x4c89769d
  407615:	pop    esi
  407616:	cs push cs
  407618:	icebp  
  407619:	imul   ebx,DWORD PTR [ecx+0x3bf7c487],0xd17ac8e9
  407623:	daa    
  407624:	inc    ecx
  407625:	or     BYTE PTR [ebp-0x60],cl
  407628:	inc    esi
  407629:	(bad)  
  40762a:	dec    ebp
  40762b:	cld    
  40762c:	ins    DWORD PTR es:[edi],dx
  40762d:	sbb    DWORD PTR [edi-0x39803985],0x3890cab5
  407637:	mov    al,0x8d
  407639:	mov    esp,0xd8223462
  40763e:	mov    ax,ax
  407641:	(bad)  
  407642:	inc    edx
  407643:	push   eax
  407644:	cmp    edx,DWORD PTR [eax]
  407646:	aas    
  407647:	aaa    
  407648:	push   ss
  407649:	into   
  40764a:	sti    
  40764b:	sbb    DWORD PTR [ebp+esi*2+0x1e0c347d],esp
  407652:	inc    ebp
  407653:	cwde   
  407654:	sbb    dh,ch
  407656:	xchg   esi,eax
  407657:	add    DWORD PTR [eax],esp
  407659:	pop    ecx
  40765a:	jne    0x40760d
  40765c:	mov    DWORD PTR [ebx+0x69a55253],ebx
  407662:	and    eax,0x9b34c15d
  407667:	mov    ?,WORD PTR [ecx]
  407669:	xchg   ecx,eax
  40766a:	push   0x5afe09db
  40766f:	mov    dh,BYTE PTR [eax-0x1e]
  407672:	retf   0x35a6
  407675:	fcom   DWORD PTR [ecx]
  407677:	call   DWORD PTR [edi-0x23894ba6]
  40767d:	lds    ecx,FWORD PTR [ebx+0x44f1e9f8]
  407683:	call   FWORD PTR [edi+ebx*4+0x63a58672]
  40768a:	pop    edi
  40768b:	jbe    0x4076ee
  40768d:	icebp  
  40768e:	adc    ebp,esi
  407690:	lea    edi,[ecx+0x47]
  407693:	and    dh,BYTE PTR [edi+esi*4]
  407696:	jmp    0x77136e4
  40769b:	inc    eax
  40769c:	lods   eax,DWORD PTR ds:[esi]
  40769d:	dec    eax
  40769e:	and    BYTE PTR [esi],cl
  4076a0:	or     ch,BYTE PTR [edi-0x25]
  4076a3:	add    BYTE PTR ds:0x836ab2f1,al
  4076a9:	pop    edi
  4076aa:	sbb    ch,BYTE PTR [edi+0x3a1c9a70]
  4076b0:	mov    edx,0xb37a292b
  4076b5:	mov    esp,0x5fe5d89d
  4076ba:	leave  
  4076bb:	push   ds
  4076bc:	and    al,0x56
  4076be:	dec    edx
  4076bf:	(bad)
  4076c2:	mov    ch,0x30
  4076c4:	cs inc ecx
  4076c6:	mov    dh,0x2c
  4076c8:	or     ebp,DWORD PTR [ebx-0x71]
  4076cb:	mov    edx,0xac6796ec
  4076d0:	pop    ebx
  4076d1:	add    DWORD PTR [esi],edi
  4076d3:	sbb    DWORD PTR es:[ecx+0x3cbdd293],ebx
  4076da:	jns    0x4076cf
  4076dc:	leave  
  4076dd:	sbb    esp,DWORD PTR [eax+0x67]
  4076e0:	adc    BYTE PTR [edi],dh
  4076e2:	jnp    0x40771d
  4076e4:	cwde   
  4076e5:	enter  0xfe54,0xa5
  4076e9:	xor    DWORD PTR [esi],edi
  4076eb:	push   ss
  4076ec:	jp     0x4076e5
  4076ee:	sub    BYTE PTR [ebp+0x41328230],0xa3
  4076f5:	pop    esp
  4076f6:	shl    DWORD PTR ds:0x5557b13a,cl
  4076fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076fd:	or     ecx,DWORD PTR [ecx-0x69276051]
  407703:	pop    ss
  407704:	or     edi,DWORD PTR [edi]
  407706:	pop    esi
  407707:	add    eax,0xb7e14641
  40770c:	dec    esp
  40770d:	inc    esp
  40770e:	jnp    0x40770c
  407710:	sar    DWORD PTR cs:[edx-0x64416b5e],cl
  407717:	push   DWORD PTR ds:0x49ef9b30
  40771d:	sahf   
  40771e:	mov    ah,0x6a
  407720:	push   cs
  407721:	outs   dx,DWORD PTR ds:[esi]
  407722:	test   BYTE PTR [edx],ch
  407724:	mov    ds:0x64622dd,al
  407729:	sbb    BYTE PTR [edx-0x41],cl
  40772c:	lock jbe 0x4076b3
  40772f:	retf   0x3138
  407732:	pop    es
  407733:	push   0xe2fba792
  407738:	xchg   esi,eax
  407739:	out    dx,al
  40773a:	mov    ebx,0x777301a1
  40773f:	pop    ss
  407740:	or     eax,0xfd9f9be4
  407745:	nop
  407746:	pop    esi
  407747:	sbb    dl,ch
  407749:	gs inc esp
  40774b:	mov    ds:0xcaad9f66,al
  407750:	ss pushf 
  407752:	sub    esp,DWORD PTR [ebx+0x0]
  407755:	pop    es
  407756:	mov    es,ebx
  407758:	ffreep st(7)
  40775a:	ret    
  40775b:	inc    BYTE PTR [esi+ebp*4-0x7c1b4ba3]
  407762:	enter  0x32f5,0x24
  407766:	scas   eax,DWORD PTR es:[edi]
  407767:	pop    esi
  407768:	mov    bl,0x17
  40776a:	fldcw  WORD PTR [edi-0x7bbb286a]
  407770:	loope  0x40772a
  407772:	inc    esi
  407773:	nop
  407774:	mov    bl,0xdc
  407776:	xlat   BYTE PTR ds:[ebx]
  407777:	and    DWORD PTR [edx],0x28
  40777a:	push   edi
  40777b:	jbe    0x40777c
  40777d:	mov    edi,0x17eb3e06
  407782:	aas    
  407783:	pop    esi
  407784:	ficom  WORD PTR [edx-0x4b]
  407787:	lea    ebx,[edx]
  407789:	add    al,0x8c
  40778b:	xor    al,0x5d
  40778d:	push   0x4cee811f
  407792:	data16 test BYTE PTR [ecx-0x118f6494],0x58
  40779a:	sub    al,0x1e
  40779c:	dec    edi
  40779d:	fmul   QWORD PTR [eax]
  40779f:	xor    ax,0xa8b8
  4077a3:	sub    al,0xe0
  4077a5:	test   al,0x14
  4077a7:	mov    eax,ds:0xfd61b18e
  4077ac:	mov    eax,0xbadfa618
  4077b1:	fwait
  4077b2:	and    al,0x98
  4077b4:	into   
  4077b5:	adc    al,al
  4077b7:	push   ebx
  4077b8:	retf   0xaa66
  4077bb:	push   ds
  4077bc:	or     DWORD PTR gs:[ecx*8-0x26602dc4],esp
  4077c4:	stos   DWORD PTR es:[edi],eax
  4077c5:	stc    
  4077c6:	sub    eax,0x1317e3d4
  4077cb:	data16 js 0x407756
  4077ce:	cmp    cl,BYTE PTR [esp+eiz*4-0x792fc7ee]
  4077d5:	sub    eax,0xc362570c
  4077da:	xor    esi,DWORD PTR [ecx-0x9]
  4077dd:	push   ecx
  4077de:	cmp    ah,dh
  4077e0:	cmp    DWORD PTR [edx+esi*8+0x6d68de36],esp
  4077e7:	inc    esp
  4077e8:	std    
  4077e9:	out    0x64,eax
  4077eb:	je     0x4077db
  4077ed:	data16 cld 
  4077ef:	(bad)  
  4077f0:	adc    edx,esi
  4077f2:	in     al,0x56
  4077f4:	addr16 call 0xe89d:0xd4086868
  4077fc:	or     eax,0x10e75b89
  407801:	aad    0x92
  407803:	and    al,BYTE PTR [esi-0x4]
  407806:	aad    0x7e
  407808:	test   BYTE PTR [ebx-0x1],ch
  40780b:	sub    ch,BYTE PTR [ebp-0x5e95bac6]
  407811:	rcl    BYTE PTR [ebx],cl
  407813:	or     dh,BYTE PTR [eax-0x16]
  407816:	add    ebx,DWORD PTR [ebx-0x21b750b4]
  40781c:	les    ebx,FWORD PTR [edx-0x6c]
  40781f:	inc    esi
  407820:	or     edi,eax
  407822:	mov    ah,0x2d
  407824:	iret   
  407825:	ret    
  407826:	nop
  407827:	bnd jo 0x4077ae
  40782a:	sbb    DWORD PTR [ecx],esi
  40782c:	jmp    0x518d:0xc479d4ae
  407833:	sub    BYTE PTR [ebp+ebp*4+0x67bee181],dh
  40783a:	jl     0x407895
  40783c:	das    
  40783d:	je     0x40784d
  40783f:	cmc    
  407840:	ret    0x7fa6
  407843:	lock mov eax,ds:0x38f31da9
  407849:	pop    eax
  40784a:	adc    eax,0xdd790c3e
  40784f:	in     al,dx
  407850:	xlat   BYTE PTR ds:[ebx]
  407851:	mov    al,ds:0x64799858
  407856:	sbb    ebx,ebx
  407858:	imul   esi,DWORD PTR [esi-0xf384b58],0x45181afc
  407862:	push   edi
  407863:	mov    ah,0x16
  407865:	and    eax,0xfcf6459f
  40786a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40786b:	and    cl,0x44
  40786e:	out    0xc8,eax
  407870:	scas   eax,DWORD PTR es:[edi]
  407871:	cmp    al,BYTE PTR [ebp-0x7f]
  407874:	test   al,0x6c
  407876:	sbb    DWORD PTR [eax],ebp
  407878:	outs   dx,DWORD PTR ds:[esi]
  407879:	sahf   
  40787a:	dec    ebx
  40787b:	stc    
  40787c:	xor    ebp,DWORD PTR [edx-0x134d6b6b]
  407882:	pushf  
  407883:	cmp    esi,DWORD PTR [eiz*8-0x6b06eee4]
  40788a:	bnd je 0x40780d
  40788d:	sub    bl,bh
  40788f:	mov    ds:0x63d4e470,al
  407894:	jle    0x4078da
  407896:	retf   
  407897:	in     al,0x22
  407899:	call   0x6a4a:0xb563c797
  4078a0:	pop    ss
  4078a1:	and    al,0x57
  4078a3:	and    DWORD PTR [edx+0x3f36a572],edi
  4078a9:	sbb    DWORD PTR [edx+0x55166f27],esi
  4078af:	mov    bl,0x6b
  4078b1:	mov    dh,0x45
  4078b3:	out    dx,eax
  4078b4:	xchg   esi,eax
  4078b5:	rcr    DWORD PTR [edi+0x6977b9a],1
  4078bb:	popa   
  4078bc:	(bad)  
  4078bd:	dec    eax
  4078be:	scas   eax,DWORD PTR es:[edi]
  4078bf:	pop    ss
  4078c0:	jnp    0x407849
  4078c2:	jmp    0x1c37822f
  4078c7:	cdq    
  4078c8:	daa    
  4078c9:	rcl    ecx,cl
  4078cb:	inc    eax
  4078cc:	mov    cl,0x4
  4078ce:	add    DWORD PTR [ebp-0x4ae6721e],eax
  4078d4:	sub    DWORD PTR [ecx],esi
  4078d6:	add    bl,BYTE PTR [edi-0x578f9be5]
  4078dc:	jge    0x407892
  4078de:	sbb    al,0xfb
  4078e0:	scas   eax,DWORD PTR es:[edi]
  4078e1:	mov    al,ds:0x116fafdf
  4078e6:	and    DWORD PTR [edx-0x3d],esi
  4078e9:	aam    0x5d
  4078eb:	xor    ecx,DWORD PTR ds:0x2b22c159
  4078f1:	cmp    esp,DWORD PTR [ebx-0x7fcc829f]
  4078f7:	and    ah,BYTE PTR [ecx]
  4078f9:	pop    edx
  4078fa:	shl    ebx,1
  4078fc:	jmp    0x41b6fa2c
  407901:	(bad)  
  407902:	loopne 0x407926
  407904:	inc    eax
  407905:	js     0x407903
  407907:	pusha  
  407908:	int3   
  407909:	in     al,dx
  40790a:	dec    esp
  40790b:	push   ebx
  40790c:	pop    ebp
  40790d:	dec    ebp
  40790e:	stos   DWORD PTR es:[edi],eax
  40790f:	jb     0x407989
  407911:	sbb    DWORD PTR [ecx],edi
  407913:	adc    ebp,DWORD PTR [edi+edi*8]
  407916:	shl    BYTE PTR [edi+ecx*2-0x45],cl
  40791a:	mov    ah,0x72
  40791c:	sbb    dh,cl
  40791e:	scas   al,BYTE PTR es:[edi]
  40791f:	xor    eax,DWORD PTR [edx+0x440297d4]
  407925:	adc    BYTE PTR [ebp+0x4c],al
  407928:	xchg   esp,eax
  407929:	gs pusha 
  40792b:	mov    al,ds:0x38c95bf2
  407930:	imul   eax,DWORD PTR [edi+0x7c937849],0xb1a98a06
  40793a:	mov    ebp,0x9ffe9b89
  40793f:	push   0x50b9725d
  407944:	pop    edi
  407945:	retf   0xdead
  407948:	das    
  407949:	loop   0x4078fc
  40794b:	je     0x4078d0
  40794d:	xchg   ebp,eax
  40794e:	inc    esi
  40794f:	cmp    edx,DWORD PTR [edx]
  407951:	lods   eax,DWORD PTR ds:[esi]
  407952:	mov    cl,0x55
  407954:	rcl    DWORD PTR [ebx],cl
  407956:	sahf   
  407957:	mov    ds:0x33ea4a9c,eax
  40795c:	out    0x82,al
  40795e:	shl    DWORD PTR [edi+edx*8-0x3b],1
  407962:	test   al,0x56
  407964:	xchg   edi,eax
  407965:	mov    dl,0x84
  407967:	fcmovbe st,st(4)
  407969:	fdiv   QWORD PTR [eax]
  40796b:	gs ret 
  40796d:	(bad)  
  40796e:	dec    ecx
  40796f:	rol    esi,0x81
  407972:	dec    ebx
  407973:	mov    esi,0xe3af34b4
  407979:	push   cs
  40797a:	imul   edx,DWORD PTR [eax-0x4e51ce26],0x8d18d130
  407984:	shl    BYTE PTR ds:[ebx],cl
  407987:	shl    BYTE PTR [esi],1
  407989:	lods   al,BYTE PTR ds:[esi]
  40798a:	ret    
  40798b:	sahf   
  40798c:	mov    edx,0xe94c94a5
  407991:	jp     0x4079b2
  407993:	dec    esp
  407994:	sub    DWORD PTR [esp+edx*4+0x27b1c3ab],0x7c434c50
  40799f:	fistp  WORD PTR [edi]
  4079a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079a2:	push   cs
  4079a3:	jmp    0xd01418c
  4079a8:	mov    eax,0xd2e6202c
  4079ad:	icebp  
  4079ae:	test   al,0xbf
  4079b0:	cdq    
  4079b1:	fnstcw WORD PTR [edx+0x22171689]
  4079b7:	and    DWORD PTR [eax+0x5b],esp
  4079ba:	inc    esp
  4079bb:	shl    BYTE PTR [edi],1
  4079bd:	ja     0x40795c
  4079bf:	add    al,0x86
  4079c1:	add    al,0x9e
  4079c3:	jmp    0x407968
  4079c5:	adc    DWORD PTR [ebx+0x24],esi
  4079c8:	dec    esi
  4079c9:	pop    ds
  4079ca:	ret    
  4079cb:	xor    BYTE PTR [ebx+edx*8-0x27f90403],0xd
  4079d3:	mov    DWORD PTR [eax],0xaa6debef
  4079d9:	int3   
  4079da:	test   al,0x18
  4079dc:	sub    DWORD PTR [ebp+0x37cef1f6],eax
  4079e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079e3:	pop    edx
  4079e4:	int3   
  4079e5:	inc    ebx
  4079e6:	inc    DWORD PTR [esi]
  4079e8:	inc    ebx
  4079e9:	push   edi
  4079ea:	aam    0x1b
  4079ec:	cdq    
  4079ed:	hlt    
  4079ee:	dec    esi
  4079ef:	test   esi,esi
  4079f1:	(bad)  
  4079f2:	cmp    DWORD PTR [edi],ebx
  4079f4:	xor    BYTE PTR [edx-0x31326626],0x6f
  4079fb:	add    BYTE PTR ds:0xb5b19f09,ah
  407a01:	mov    bh,0x93
  407a03:	sub    eax,0x6594f91d
  407a08:	fdivr  QWORD PTR [ecx+0x6]
  407a0b:	jge    0x407a25
  407a0d:	sbb    BYTE PTR ds:0x3561b10d,bl
  407a13:	aam    0x69
  407a15:	xchg   edx,ebp
  407a17:	fisub  WORD PTR [ecx]
  407a19:	fild   QWORD PTR [ecx]
  407a1b:	cmp    cl,cl
  407a1d:	xchg   edi,eax
  407a1e:	test   al,0x1c
  407a20:	push   eax
  407a21:	call   0x9088:0xd6fc71f5
  407a28:	int    0xf2
  407a2a:	aaa    
  407a2b:	and    bh,ah
  407a2d:	mov    cl,0xd0
  407a2f:	jb     0x4079d7
  407a31:	cmp    BYTE PTR [ebp-0x17fc824d],ah
  407a37:	xchg   edx,eax
  407a38:	out    0x50,eax
  407a3a:	bound  edi,QWORD PTR [eax]
  407a3c:	loope  0x407a65
  407a3e:	dec    esp
  407a3f:	xor    BYTE PTR [ebx+0x48058250],bh
  407a45:	imul   ebx,eax,0x25
  407a48:	and    DWORD PTR [ecx+0x5ae07718],eax
  407a4e:	stc    
  407a4f:	ret    
  407a50:	pusha  
  407a51:	jge    0x407a1d
  407a53:	or     al,0x7f
  407a55:	dec    edx
  407a56:	dec    ebx
  407a57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a58:	and    edx,ecx
  407a5a:	mov    eax,ds:0x8793ac3c
  407a5f:	enter  0x40fa,0x4
  407a63:	fld    DWORD PTR [edi]
  407a65:	inc    eax
  407a66:	and    al,cl
  407a68:	mov    bh,0x75
  407a6a:	xchg   esp,eax
  407a6b:	inc    ebp
  407a6c:	and    eax,ecx
  407a6e:	sar    BYTE PTR [esp+eiz*2],0xac
  407a72:	push   cs
  407a73:	sub    al,dl
  407a75:	stc    
  407a76:	jp     0x407a9f
  407a78:	(bad)  
  407a79:	cmc    
  407a7a:	add    esp,0x6b
  407a7d:	lods   eax,DWORD PTR ds:[esi]
  407a7e:	push   ds
  407a7f:	(bad)  
  407a80:	sbb    BYTE PTR [esi],ch
  407a82:	iret   
  407a83:	jmp    0x407a49
  407a85:	xor    al,0x2c
  407a87:	call   0x2d2e3d76
  407a8c:	je     0x407abf
  407a8e:	in     eax,dx
  407a8f:	push   esi
  407a90:	into   
  407a91:	cmp    BYTE PTR [edx+esi*2],0xb9
  407a95:	int    0x95
  407a97:	xor    ecx,DWORD PTR [ebp-0x6a]
  407a9a:	or     DWORD PTR [edx-0x66],edi
  407a9d:	rcl    BYTE PTR [edx],1
  407a9f:	pop    DWORD PTR [ecx+0x685a9438]
  407aa5:	lods   eax,DWORD PTR ds:[esi]
  407aa6:	inc    edi
  407aa7:	dec    ebp
  407aa8:	inc    esi
  407aa9:	mov    al,0xe8
  407aab:	clc    
  407aac:	sub    DWORD PTR [esi+0x65229e20],edi
  407ab2:	and    DWORD PTR [edx+0x23],esi
  407ab5:	inc    ecx
  407ab6:	push   cs
  407ab7:	mov    al,0x4
  407ab9:	rcr    DWORD PTR [eax+0x40],cl
  407abc:	pop    es
  407abd:	cmp    eax,0x6db8a07e
  407ac2:	xor    DWORD PTR [eax],0x6c
  407ac5:	inc    edx
  407ac6:	dec    ecx
  407ac7:	das    
  407ac8:	cwde   
  407ac9:	arpl   WORD PTR [esi],bx
  407acb:	or     edi,DWORD PTR [esp+eax*4-0x4f532bb7]
  407ad2:	aaa    
  407ad3:	sub    BYTE PTR [edx+0x326a7d10],dl
  407ad9:	(bad)  
  407adb:	dec    edx
  407adc:	in     eax,0xcc
  407ade:	dec    ecx
  407adf:	gs ret 
  407ae1:	mov    al,ds:0xfb89f1b4
  407ae6:	mov    es,WORD PTR [edi+0x1f]
  407ae9:	push   ebp
  407aea:	dec    ecx
  407aeb:	ds dec esp
  407aed:	jo     0x407acd
  407aef:	mov    dl,0xf9
  407af1:	repnz sbb bh,BYTE PTR [edi]
  407af4:	pop    ss
  407af5:	in     al,0x3c
  407af7:	retf   
  407af8:	jbe    0x407adf
  407afa:	inc    ebx
  407afb:	inc    ecx
  407afc:	stos   BYTE PTR es:[edi],al
  407afd:	push   esp
  407afe:	sbb    BYTE PTR [ecx],dh
  407b00:	adc    edi,DWORD PTR [edx]
  407b02:	cwde   
  407b03:	inc    ebp
  407b04:	add    al,0x6b
  407b06:	outs   dx,BYTE PTR ds:[esi]
  407b07:	je     0x407b36
  407b09:	jb     0x407b87
  407b0b:	sbb    al,0xf4
  407b0d:	aad    0xe8
  407b0f:	inc    ebp
  407b10:	cmp    eax,0xc35d7509
  407b15:	nop
  407b16:	(bad)  
  407b17:	sahf   
  407b18:	mov    ecx,0xb5731286
  407b1d:	add    dl,bl
  407b1f:	mov    al,0x1b
  407b21:	out    0xff,eax
  407b23:	test   DWORD PTR [edx-0x18640781],esi
  407b29:	cwde   
  407b2a:	mov    BYTE PTR [ecx-0x3b9bd13d],dh
  407b30:	(bad)  [esi+0x75]
  407b33:	aad    0xc9
  407b35:	jmp    DWORD PTR [ecx-0x14]
  407b38:	or     eax,0xdfae6e1b
  407b3d:	int3   
  407b3e:	scas   al,BYTE PTR es:[edi]
  407b3f:	mov    bh,0x37
  407b41:	xor    al,al
  407b43:	xchg   edi,eax
  407b44:	push   edx
  407b45:	cmc    
  407b46:	fsub   st(7),st
  407b48:	pop    ebx
  407b49:	and    eax,0xc254c49c
  407b4e:	(bad)  
  407b4f:	cmp    BYTE PTR [bx+si-0x701],al
  407b54:	jl     0x407ae8
  407b56:	inc    ebp
  407b57:	dec    ebx
  407b58:	and    al,0x4b
  407b5a:	sub    esi,ecx
  407b5c:	in     al,dx
  407b5d:	xlat   BYTE PTR ds:[ebx]
  407b5e:	xlat   BYTE PTR ds:[ebx]
  407b5f:	stc    
  407b60:	(bad)
  407b63:	sbb    eax,0x7f56cd93
  407b68:	call   0x1f7812ee
  407b6d:	imul   edi,DWORD PTR [esi+0xe],0xb77a8c9b
  407b74:	mov    ds:0xe1e67f5a,eax
  407b79:	sbb    ebx,DWORD PTR [edi]
  407b7b:	data16 adc al,0x7d
  407b7e:	cmp    eax,0x1d530ce5
  407b83:	imul   edi,DWORD PTR [esi-0x70],0x72
  407b87:	and    edx,edi
  407b89:	xchg   ebp,eax
  407b8a:	nop
  407b8b:	cdq    
  407b8c:	rcl    DWORD PTR [edi],cl
  407b8e:	arpl   WORD PTR [ecx+0x4],ax
  407b91:	adc    al,0x1c
  407b93:	out    0xe4,eax
  407b95:	sub    eax,0x76115de2
  407b9b:	repz jecxz 0x407b70
  407b9e:	mov    bl,ch
  407ba0:	mov    bh,0x57
  407ba2:	push   ecx
  407ba3:	push   ebp
  407ba4:	sub    ch,BYTE PTR [ecx]
  407ba6:	and    al,0x4e
  407ba8:	jno    0x407bc5
  407baa:	pop    ecx
  407bab:	iret   
  407bac:	frstpm(287 only) 
  407bae:	gs cmp eax,0x232ce6dd
  407bb4:	cld    
  407bb5:	dec    ecx
  407bb6:	out    dx,eax
  407bb7:	bound  ebx,QWORD PTR [edx]
  407bb9:	test   al,0xb6
  407bbb:	(bad)  
  407bbc:	mov    ecx,0x1af132e6
  407bc1:	test   DWORD PTR [edx+0x27917cb5],esi
  407bc7:	mov    WORD PTR [ecx+0xe],fs
  407bca:	pop    ds
  407bcb:	xchg   BYTE PTR [edx],dh
  407bcd:	mov    bl,0x39
  407bcf:	popf   
  407bd0:	mov    eax,ds:0x262af03
  407bd5:	push   es
  407bd6:	loopne 0x407b81
  407bd8:	and    BYTE PTR [ebp-0x1e],0x68
  407bdc:	(bad)  
  407bdd:	fiadd  DWORD PTR [ebx-0xc1fd9ad]
  407be3:	adc    bl,bl
  407be5:	aad    0xbc
  407be7:	push   ds
  407be8:	push   edx
  407be9:	fprem1 
  407beb:	mov    WORD PTR [ecx+0x6b321c7c],ds
  407bf1:	cld    
  407bf2:	sub    ah,BYTE PTR [esi+0x5b]
  407bf5:	jmp    0x1d3f:0xe7fde858
  407bfc:	cs jmp 0x35ccf59f
  407c02:	inc    edi
  407c03:	les    ecx,FWORD PTR fs:[eax-0x7ac415ce]
  407c0a:	push   0xffffff9e
  407c0c:	rcl    BYTE PTR [edx-0xc],1
  407c0f:	dec    ebp
  407c10:	aam    0xb7
  407c12:	aaa    
  407c13:	pop    ebx
  407c14:	jbe    0x407c6a
  407c16:	fdivr  DWORD PTR ds:0x4105bf3f
  407c1c:	sub    eax,esi
  407c1e:	and    BYTE PTR [ebp+0x2c2e78b5],bh
  407c24:	cmp    dx,si
  407c27:	out    dx,eax
  407c28:	push   esi
  407c29:	dec    esi
  407c2a:	sub    DWORD PTR [ebx+0x43],eax
  407c2d:	aas    
  407c2e:	test   al,bh
  407c30:	js     0x407bc8
  407c32:	bound  edx,QWORD PTR [edx-0xe]
  407c35:	cwde   
  407c36:	ins    DWORD PTR es:[edi],dx
  407c37:	xor    edx,eax
  407c39:	or     eax,esp
  407c3b:	sbb    al,0x57
  407c3d:	call   0xf515a463
  407c42:	add    edi,ebp
  407c44:	sbb    BYTE PTR [edx],dl
  407c46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c47:	mov    ebx,0x5bbd56a
  407c4c:	stos   BYTE PTR es:[edi],al
  407c4d:	aam    0xc7
  407c4f:	xor    DWORD PTR [esi],ecx
  407c51:	outs   dx,BYTE PTR ds:[esi]
  407c52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c53:	sub    ah,BYTE PTR [eax+0x69527d2b]
  407c59:	dec    esi
  407c5a:	ror    DWORD PTR [ebx],0x88
  407c5d:	dec    edi
  407c5e:	pushf  
  407c5f:	pop    eax
  407c60:	dec    esi
  407c61:	dec    ebx
  407c62:	xor    eax,0x9bc558ff
  407c67:	cmp    ah,0xdb
  407c6a:	mov    eax,0x22975faa
  407c6f:	popa   
  407c70:	sub    al,0x4
  407c72:	push   ds
  407c73:	leave  
  407c74:	fcom   QWORD PTR [esi]
  407c76:	mov    ch,0x29
  407c78:	les    esp,FWORD PTR [eax-0x6f9e8d17]
  407c7e:	push   ds
  407c7f:	or     bl,dl
  407c81:	ins    DWORD PTR es:[edi],dx
  407c82:	(bad)  
  407c83:	push   ecx
  407c84:	popf   
  407c85:	or     DWORD PTR [edx],edx
  407c87:	(bad)  
  407c88:	mov    edi,edi
  407c8a:	(bad)  
  407c8b:	xchg   esp,eax
  407c8c:	jl     0x407c59
  407c8e:	adc    BYTE PTR [eax+0x3e],cl
  407c91:	mov    bl,0x4b
  407c93:	jb     0x407c6a
  407c95:	add    eax,0xfffffff6
  407c98:	leave  
  407c99:	stc    
  407c9a:	sbb    eax,0x175bdb6b
  407c9f:	arpl   WORD PTR [eax],si
  407ca1:	fistp  DWORD PTR [ebx-0x1cf25794]
  407ca7:	(bad)  [edx]
  407ca9:	mov    esp,0x23c182fa
  407cae:	jno    0x407cd2
  407cb0:	js     0x407ce8
  407cb2:	(bad)  
  407cb3:	pop    ebx
  407cb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407cb5:	pop    eax
  407cb6:	xor    BYTE PTR [eax+0x40],dl
  407cb9:	aam    0xaa
  407cbb:	push   edi
  407cbc:	xchg   esp,eax
  407cbd:	xor    ecx,ebp
  407cbf:	test   BYTE PTR [eax+0x22],dl
  407cc2:	leave  
  407cc3:	xor    ebx,DWORD PTR [edx]
  407cc5:	and    edx,DWORD PTR [esi-0x1e71bb95]
  407ccb:	lahf   
  407ccc:	cmp    esp,ecx
  407cce:	fbld   TBYTE PTR [ebx+0x27]
  407cd1:	(bad)  
  407cd2:	in     al,0x3
  407cd4:	sub    DWORD PTR [edi-0xe],0xffffffed
  407cd8:	push   cs
  407cd9:	adc    ecx,DWORD PTR [esi+0x1132efec]
  407cdf:	push   edx
  407ce0:	iret   
  407ce1:	ins    DWORD PTR es:[edi],dx
  407ce2:	or     bh,BYTE PTR [ecx]
  407ce4:	jge    0x407c86
  407ce6:	repnz push esp
  407ce8:	outs   dx,DWORD PTR ds:[esi]
  407ce9:	jmp    0xfa92:0x268da466
  407cf0:	hlt    
  407cf1:	fidiv  DWORD PTR [ecx]
  407cf3:	or     BYTE PTR [ecx+ecx*4+0x784eafeb],bh
  407cfa:	ret    
  407cfb:	sub    bl,BYTE PTR [edi+0x79]
  407cfe:	push   0x59
  407d00:	into   
  407d01:	sub    ebx,eax
  407d03:	fcom   DWORD PTR [ecx]
  407d05:	jmp    FWORD PTR [edx-0x495e37f0]
  407d0b:	out    dx,eax
  407d0c:	mov    edi,0xc75a20a8
  407d11:	mov    al,0x4d
  407d13:	mov    BYTE PTR [edx+0x1d],bl
  407d16:	icebp  
  407d17:	fisttp QWORD PTR [ecx*1-0x2a9efa28]
  407d1e:	xchg   BYTE PTR [eax+ebp*4-0x89a64a9],cl
  407d25:	pusha  
  407d26:	pop    edx
  407d27:	fsub   st,st(4)
  407d29:	pop    ss
  407d2a:	inc    edi
  407d2b:	or     BYTE PTR [edi],bl
  407d2d:	xor    dl,ah
  407d2f:	pop    ds
  407d30:	jno    0x407cf0
  407d32:	mov    edx,0x2b52c353
  407d37:	push   edx
  407d38:	xor    ch,dl
  407d3a:	cmp    dh,ch
  407d3c:	retf   
  407d3d:	adc    BYTE PTR [eax+0x4],dh
  407d40:	icebp  
  407d41:	test   DWORD PTR [edx+0x3aeee576],ebx
  407d47:	mov    BYTE PTR [edx-0x36],dl
  407d4a:	jne    0x407d54
  407d4c:	push   edx
  407d4d:	(bad)  
  407d4e:	dec    esp
  407d4f:	div    DWORD PTR [edx-0x37f14c2d]
  407d55:	jbe    0x407d34
  407d57:	shl    DWORD PTR [ebx],cl
  407d59:	and    edi,ebx
  407d5b:	push   ds
  407d5c:	leave  
  407d5d:	(bad)  
  407d5e:	adc    eax,0xd7fba6bb
  407d63:	cli    
  407d64:	add    DWORD PTR [edi],edx
  407d66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d67:	mov    al,dl
  407d69:	(bad)  
  407d6a:	push   edi
  407d6b:	clc    
  407d6c:	jmp    0xba29:0x7899dee4
  407d73:	sbb    BYTE PTR [eax+eiz*4-0x451ac84c],bh
  407d7a:	retf   0xd52a
  407d7d:	xor    eax,0x88dcda54
  407d82:	pop    es
  407d83:	pop    ebx
  407d84:	jecxz  0x407d5d
  407d86:	or     DWORD PTR [edx],0x5e972ac
  407d8c:	dec    ebp
  407d8d:	xor    ebp,DWORD PTR [esi+0xb]
  407d90:	sbb    al,0xd4
  407d92:	jmp    0x1796:0x3c35078d
  407d99:	je     0x407d68
  407d9b:	adc    esp,esi
  407d9d:	dec    DWORD PTR [edi-0x15]
  407da0:	jo     0x407d6b
  407da2:	test   al,0x91
  407da4:	push   ebx
  407da5:	call   0xb37da41f
  407daa:	jle    0x407d3c
  407dac:	dec    edi
  407dad:	bnd jne 0x407db2
  407db0:	sbb    BYTE PTR [ebp+0x25],al
  407db3:	adc    BYTE PTR [eax+0x24421828],0x94
  407dba:	fild   QWORD PTR [edx]
  407dbc:	xchg   ebp,eax
  407dbd:	aas    
  407dbe:	icebp  
  407dbf:	mov    al,0x28
  407dc1:	cdq    
  407dc2:	imul   BYTE PTR [edi-0x70]
  407dc5:	pop    ds
  407dc6:	fistp  QWORD PTR [ecx+0x1b]
  407dc9:	(bad)  
  407dca:	dec    ecx
  407dcb:	xchg   ecx,eax
  407dcc:	stc    
  407dcd:	mov    esi,0x4fc75d44
  407dd2:	dec    esi
  407dd3:	jl     0x407da2
  407dd5:	int    0x5e
  407dd7:	cmp    eax,0xb7cd077a
  407ddc:	or     DWORD PTR es:[edx],ecx
  407ddf:	mov    ebx,0x6784ba50
  407de4:	jns    0x407d79
  407de6:	out    dx,al
  407de7:	push   esi
  407de8:	sbb    al,0xa7
  407dea:	sbb    eax,0x142a00a8
  407def:	add    DWORD PTR [eax],esp
  407df1:	push   ss
  407df2:	into   
  407df3:	in     eax,0x98
  407df5:	mov    ebp,0x9248c69b
  407dfa:	add    al,0x69
  407dfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407dfd:	fbld   TBYTE PTR [edi+ebx*4+0x2a]
  407e01:	retf   
  407e02:	jecxz  0x407e41
  407e04:	repz mov edx,0xa68aa32b
  407e0a:	jnp    0x407e38
  407e0c:	cs xchg edi,eax
  407e0e:	add    esi,0xff51bf7f
  407e14:	hlt    
  407e15:	ret    
  407e16:	push   ebp
  407e17:	dec    edi
  407e18:	push   0xffffff8b
  407e1a:	scas   al,BYTE PTR es:[edi]
  407e1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e1c:	shl    DWORD PTR [esi+0x633fe54b],0x23
  407e23:	cs retf 
  407e25:	push   ss
  407e26:	mov    ds:0x8da1c739,al
  407e2b:	imul   edx,DWORD PTR [esi+0x4f],0x56d9e56c
  407e32:	lds    esi,FWORD PTR [ecx*4+0x2986d8ee]
  407e39:	sbb    cl,bl
  407e3b:	lds    edx,FWORD PTR [edx]
  407e3d:	xor    dh,BYTE PTR [ebx-0x7]
  407e40:	out    dx,eax
  407e41:	dec    ecx
  407e42:	cmc    
  407e43:	lsl    edx,cx
  407e46:	add    ebp,esp
  407e48:	sbb    ebx,DWORD PTR [edi+0x75]
  407e4b:	ins    DWORD PTR es:[edi],dx
  407e4c:	or     bl,dh
  407e4e:	mov    ch,0x64
  407e50:	jns    0x407ddb
  407e52:	xchg   ebp,eax
  407e53:	not    BYTE PTR [edi+0x4d]
  407e56:	jnp    0x407e89
  407e58:	loop   0x407ebb
  407e5a:	repz lds esp,FWORD PTR [esi-0xc]
  407e5e:	and    cl,BYTE PTR [esi+0x7]
  407e61:	add    BYTE PTR [ebx+0x2967d198],0x6a
  407e68:	cmc    
  407e69:	fsubr  QWORD PTR [edx-0x4]
  407e6c:	push   0x3c332276
  407e71:	(bad)  
  407e72:	mov    ebp,0xc31d046
  407e77:	xor    eax,0x5bc8fa97
  407e7c:	daa    
  407e7d:	push   eax
  407e7e:	out    0xf3,eax
  407e80:	inc    edx
  407e81:	dec    ebx
  407e82:	pop    ecx
  407e83:	jbe    0x407e46
  407e85:	popf   
  407e86:	std    
  407e87:	pop    edx
  407e88:	inc    esp
  407e89:	lea    esi,[ebx-0x77]
  407e8c:	mov    eax,0xe90ff8a4
  407e91:	xor    ecx,edx
  407e93:	test   bh,dl
  407e95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e96:	js     0x407e49
  407e98:	add    cl,al
  407e9a:	mov    edi,0xade04a5b
  407e9f:	mov    esp,0x46de33a
  407ea4:	mov    edx,0xd5ef34e
  407ea9:	pop    ds
  407eaa:	int3   
  407eab:	mov    dl,0x5e
  407ead:	fsub   st(3),st
  407eaf:	adc    eax,0x9a0637da
  407eb4:	fsubr  QWORD PTR [edi+esi*4-0x3467abac]
  407ebb:	cmp    eax,DWORD PTR [edx+0x605cb7bd]
  407ec1:	jle    0x407f3a
  407ec3:	dec    esi
  407ec4:	and    ch,dh
  407ec6:	dec    esp
  407ec7:	and    DWORD PTR [esi+0xa93f7a2],eax
  407ecd:	pushf  
  407ece:	retf   0x4235
  407ed1:	test   DWORD PTR [ebx+0x79],ebp
  407ed4:	mov    esp,DWORD PTR [ebx+esi*8+0x2c]
  407ed8:	ja     0x407eb7
  407eda:	sbb    esp,DWORD PTR [edx+0x12]
  407edd:	push   ss
  407ede:	les    ecx,FWORD PTR [edx]
  407ee0:	push   esi
  407ee1:	xchg   ebx,eax
  407ee2:	stos   BYTE PTR es:[edi],al
  407ee3:	adc    al,0x9
  407ee5:	inc    esp
  407ee6:	cli    
  407ee7:	ret    0x8475
  407eea:	imul   BYTE PTR [ecx+0x528df7fc]
  407ef0:	ins    BYTE PTR es:[edi],dx
  407ef1:	or     edi,eax
  407ef3:	mov    DWORD PTR [ebp-0xb5855a9],esi
  407ef9:	pop    ebx
  407efa:	imul   eax,eax,0xffffffaa
  407efd:	mov    esi,0x7e09cd8c
  407f02:	mov    dl,0xb8
  407f04:	xchg   edi,eax
  407f05:	xor    esi,DWORD PTR [esi-0x44]
  407f08:	dec    ebx
  407f09:	mov    ebp,DWORD PTR [ebx+0x54]
  407f0c:	mov    eax,0x9c86308c
  407f11:	dec    edx
  407f12:	leave  
  407f13:	or     ecx,eax
  407f15:	sti    
  407f16:	fisttp DWORD PTR [ecx-0x78]
  407f19:	mov    BYTE PTR [edx],dh
  407f1b:	mov    ds:0xc98376fe,eax
  407f20:	cli    
  407f21:	push   ebp
  407f22:	sub    al,0x3e
  407f24:	mov    ds:0xfe654bb6,eax
  407f29:	dec    esp
  407f2a:	jecxz  0x407f50
  407f2c:	mov    ecx,0xff357727
  407f31:	push   0xffffffcd
  407f33:	jbe    0x407fa4
  407f35:	or     al,0xd
  407f37:	and    ah,BYTE PTR [eax]
  407f39:	fld    QWORD PTR [esi+0x22fc5a50]
  407f3f:	adc    al,BYTE PTR [ecx]
  407f41:	pop    ebp
  407f42:	xchg   esp,eax
  407f43:	es loopne 0x407f80
  407f46:	neg    DWORD PTR [ebx-0x3c]
  407f49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f4a:	cdq    
  407f4b:	aaa    
  407f4c:	push   eax
  407f4d:	jecxz  0x407f80
  407f4f:	icebp  
  407f50:	std    
  407f51:	icebp  
  407f52:	xor    eax,0xf5034012
  407f57:	nop
  407f58:	arpl   dx,bp
  407f5a:	jne    0x407f36
  407f5c:	mov    eax,ds:0xe391010b
  407f61:	mov    bh,0x73
  407f63:	jge    0x407f9b
  407f65:	out    dx,al
  407f66:	sub    al,0xa5
  407f68:	mov    eax,ds:0x37c2cbc1
  407f6d:	addr16 jae 0x407fb7
  407f70:	pop    esp
  407f71:	enter  0xbfb6,0x5b
  407f75:	(bad)  
  407f76:	push   ecx
  407f77:	mov    db1,esp
  407f7a:	pop    ebx
  407f7b:	stos   DWORD PTR es:[edi],eax
  407f7c:	daa    
  407f7d:	loop   0x407f36
  407f7f:	cld    
  407f80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f81:	test   BYTE PTR [edx],ch
  407f83:	call   0x56a1:0x9cbef762
  407f8a:	std    
  407f8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f8c:	push   ss
  407f8d:	sub    DWORD PTR ds:0xd4bde1f2,esp
  407f93:	jl     0x407fe3
  407f95:	adc    bl,BYTE PTR [edx+0x54500f1d]
  407f9b:	(bad)  
  407f9c:	iret   
  407f9d:	ins    BYTE PTR es:[edi],dx
  407f9e:	das    
  407f9f:	and    DWORD PTR [ecx],esp
  407fa1:	out    dx,eax
  407fa2:	and    eax,esi
  407fa4:	adc    ebx,DWORD PTR [edi-0x63]
  407fa7:	or     BYTE PTR [ebx],ch
  407fa9:	xor    al,0x39
  407fab:	daa    
  407fac:	icebp  
  407fad:	add    BYTE PTR [esi+0x3d2e0d22],0x6
  407fb4:	mov    ah,BYTE PTR [eax-0x4f008ad0]
  407fba:	repz cmp BYTE PTR [edi-0x4a],0xa4
  407fbf:	jbe    0x407fd6
  407fc1:	lods   eax,DWORD PTR ds:[esi]
  407fc2:	hlt    
  407fc3:	ret    0xc7d
  407fc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407fc7:	pop    ss
  407fc8:	mov    ?,WORD PTR [edi+0x7cfe0d7d]
  407fce:	rcr    DWORD PTR [eax+0x19f8a1fe],cl
  407fd4:	add    BYTE PTR [edx+0x6],cl
  407fd7:	xchg   esp,eax
  407fd8:	xor    al,0x81
  407fda:	mov    al,0x4e
  407fdc:	and    al,0xfc
  407fde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407fdf:	mov    esp,0xc307535
  407fe4:	aaa    
  407fe5:	hlt    
  407fe6:	imul   esi,DWORD PTR [esi-0x28bf9d57],0x47
  407fed:	xchg   ebp,eax
  407fee:	repnz (bad) 
  407ff1:	(bad)  
  407ff2:	not    DWORD PTR [ebx+0x3bcea268]
  407ff8:	in     al,dx
  407ff9:	mov    al,0x26
  407ffb:	mov    eax,ds:0x3c63a6b4
  408000:	hlt    
  408001:	(bad)  
  408002:	shl    DWORD PTR [edi],1
  408004:	push   ss
  408005:	shl    DWORD PTR [ebx-0x16c85a1e],0x17
  40800c:	inc    edi
  40800d:	jbe    0x407f9e
  40800f:	ss rcr cl,cl
  408012:	add    al,0x42
  408014:	repnz adc BYTE PTR [ebx+eax*1],0x1c
  408019:	and    BYTE PTR [edi],0xab
  40801c:	mov    DWORD PTR [edi-0x7bcbe59a],ebp
  408022:	add    dh,0x0
  408025:	push   edi
  408026:	out    0x5,al
  408028:	inc    eax
  408029:	ja     0x40804e
  40802b:	outs   dx,BYTE PTR ds:[esi]
  40802c:	mov    bl,0xc4
  40802e:	xchg   ecx,eax
  40802f:	scas   al,BYTE PTR es:[edi]
  408030:	cmp    edi,DWORD PTR [esi+0x3a]
  408033:	cmp    eax,0x722f947f
  408038:	mov    bh,0x26
  40803a:	cmp    dh,dl
  40803c:	cmp    BYTE PTR [ebp-0x4a],0xe
  408040:	cs icebp 
  408042:	(bad)  
  408043:	mov    edi,0x5805df5c
  408048:	imul   esp,DWORD PTR [edx],0x3a7b6348
  40804e:	adc    ch,0x47
  408051:	mov    al,ds:0x30218888
  408056:	lock mov ds:0x7d986bb6,eax
  40805c:	fiadd  WORD PTR ss:[eax+0x3cbdc6c3]
  408063:	inc    esp
  408064:	sbb    ah,cl
  408066:	les    esp,FWORD PTR [ebx-0x32e15b7d]
  40806c:	xchg   ebx,eax
  40806d:	cmp    al,0xe9
  40806f:	mov    ebx,0xa7cd8313
  408074:	or     esp,ebp
  408076:	addr16 test al,0x81
  408079:	jae    0x408080
  40807b:	cmc    
  40807c:	sub    bl,BYTE PTR [ebp+0x1]
  40807f:	(bad)  
  408080:	jbe    0x40801a
  408082:	loop   0x4080e6
  408084:	icebp  
  408085:	and    cl,BYTE PTR [ecx+ecx*2]
  408088:	push   cs
  408089:	fnsave [ecx-0x6f4d6cd3]
  40808f:	cmp    DWORD PTR [eax+0x127d32c],esi
  408095:	adc    DWORD PTR [ecx-0x44],edi
  408098:	push   cs
  408099:	mov    bh,BYTE PTR ds:0x8503e7ae
  40809f:	call   0xda90:0xc8cd6bd5
  4080a6:	mov    ebp,0xa4258fb6
  4080ab:	sahf   
  4080ac:	jg     0x408116
  4080ae:	int3   
  4080af:	pop    ss
  4080b0:	jle    0x408085
  4080b2:	mov    edi,0xe1558dd4
  4080b7:	mov    edi,0xdf0dd7da
  4080bc:	stc    
  4080bd:	push   ds
  4080be:	pop    ebp
  4080bf:	pop    edi
  4080c0:	bound  ecx,QWORD PTR [eax]
  4080c2:	or     BYTE PTR [ecx+0x55531ed8],cl
  4080c8:	add    dl,cl
  4080ca:	sub    al,0x51
  4080cc:	mov    ds:0x48b63b5,eax
  4080d1:	sub    esp,DWORD PTR [edx+0x4]
  4080d4:	shr    DWORD PTR [esi-0x3],cl
  4080d7:	popf   
  4080d8:	(bad)  
  4080d9:	mov    ebx,0xe81f112b
  4080de:	sbb    DWORD PTR [ecx+edx*2],edi
  4080e1:	call   FWORD PTR [eax]
  4080e3:	ficom  WORD PTR ds:0xaf985875
  4080e9:	ret    
  4080ea:	scas   eax,DWORD PTR es:[edi]
  4080eb:	iret   
  4080ec:	sbb    DWORD PTR [esp+eax*2],edx
  4080ef:	sbb    bh,BYTE PTR [eax+ecx*2-0x7c]
  4080f3:	mov    dh,0x65
  4080f5:	dec    edx
  4080f6:	clc    
  4080f7:	and    ebx,DWORD PTR [edx+0x5c]
  4080fa:	leave  
  4080fb:	sub    bh,dl
  4080fd:	stos   DWORD PTR es:[edi],eax
  4080fe:	inc    esi
  4080ff:	jmp    0xbf85aa56
  408104:	ins    BYTE PTR es:[edi],dx
  408105:	scas   al,BYTE PTR es:[edi]
  408106:	sub    BYTE PTR [ebx+eax*1+0x76],dh
  40810a:	xor    bh,ah
  40810c:	and    BYTE PTR [ecx],0x6e
  40810f:	test   ebx,ebp
  408111:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408112:	clc    
  408113:	fcom   DWORD PTR [ebx-0x14]
  408116:	sub    al,0x0
  408118:	ret    0x3e32
  40811b:	test   BYTE PTR [eax+0x6],0x2d
  40811f:	ss add dh,al
  408122:	dec    eax
  408123:	mov    al,dl
  408125:	jne    0x40819f
  408127:	retf   
  408128:	jbe    0x40812e
  40812a:	jnp    0x4080ae
  40812c:	fidivr DWORD PTR [edx]
  40812e:	jg     0x408199
  408130:	scas   al,BYTE PTR es:[edi]
  408131:	cli    
  408132:	add    BYTE PTR ds:0xf8d5e76d,bl
  408138:	ret    
  408139:	and    al,0x15
  40813b:	jecxz  0x4080cb
  40813d:	fiadd  DWORD PTR [ebx-0x66]
  408140:	mov    cl,0xe9
  408142:	and    eax,0xf2d26cb
  408147:	and    bl,ch
  408149:	imul   edx,DWORD PTR [edi-0x6a],0x7c
  40814d:	lods   al,BYTE PTR ds:[esi]
  40814e:	mov    edx,0x990cd21f
  408153:	adc    ch,BYTE PTR [edx+0x458c50f7]
  408159:	lods   eax,DWORD PTR ds:[esi]
  40815a:	into   
  40815b:	push   ss
  40815c:	popf   
  40815d:	mov    al,0x19
  40815f:	push   ss
  408160:	loop   0x408193
  408162:	dec    DWORD PTR [edx+edx*8-0x23c298e0]
  408169:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40816a:	data16 add BYTE PTR [eax+0x66fcf55b],al
  408171:	xor    eax,0xb8c52993
  408176:	(bad)  
  408177:	repnz test al,0x48
  40817b:	mov    esp,0x790698f2
  408180:	pop    ebx
  408181:	jge    0x4081e8
  408183:	iret   
  408184:	push   edi
  408185:	mov    esp,0xde46917
  40818a:	scas   al,BYTE PTR es:[edi]
  40818b:	inc    BYTE PTR [edi-0x421205ae]
  408191:	xchg   esp,eax
  408192:	aam    0xd9
  408194:	mov    esi,0x4b8677b4
  408199:	jae    0x408129
  40819b:	shr    DWORD PTR [eax-0x2278869c],0x82
  4081a2:	iret   
  4081a3:	or     DWORD PTR [ecx+0x72cd899],eax
  4081a9:	cmp    bl,BYTE PTR [ebp-0x35]
  4081ac:	dec    esp
  4081ad:	mov    ebx,0xd53f6a0b
  4081b2:	adc    al,0x22
  4081b4:	mov    cl,0x35
  4081b6:	jns    0x4081ec
  4081b8:	scas   al,BYTE PTR es:[edi]
  4081b9:	shr    BYTE PTR [edi-0x42],cl
  4081bc:	pop    esi
  4081bd:	sbb    edi,esi
  4081bf:	out    dx,eax
  4081c0:	adc    bl,BYTE PTR [eax+0x6bdd96e7]
  4081c6:	or     edx,DWORD PTR [edx-0x3f]
  4081c9:	leave  
  4081ca:	mov    eax,ds:0xb097e70
  4081cf:	cmp    edx,DWORD PTR [ecx-0x666537b1]
  4081d5:	ins    DWORD PTR es:[edi],dx
  4081d6:	pcmpeqw mm7,QWORD PTR [edi+0x6e]
  4081da:	mov    eax,ds:0xdcb5c379
  4081df:	(bad)  
  4081e0:	leave  
  4081e1:	sar    DWORD PTR [eax],0x9c
  4081e4:	dec    ebx
  4081e5:	mov    esi,0x3e0d1d70
  4081ea:	dec    edi
  4081eb:	adc    DWORD PTR [esi],ebx
  4081ed:	in     eax,dx
  4081ee:	jl     0x40824f
  4081f0:	aas    
  4081f1:	cmp    al,0x7
  4081f3:	loop   0x408179
  4081f5:	push   ecx
  4081f6:	cmp    al,0x1
  4081f8:	repz jl 0x408277
  4081fb:	bnd jae 0x4081b2
  4081fe:	push   edi
  4081ff:	out    0x87,al
  408201:	pop    ebx
  408202:	into   
  408203:	(bad)  [edi]
  408205:	mov    ?,WORD PTR [ebx-0x79f84b35]
  40820b:	push   ds
  40820c:	xor    DWORD PTR [esi+0x3e],0x51c45478
  408213:	mov    ch,0x44
  408215:	stc    
  408216:	(bad)  
  408217:	xor    ch,dh
  408219:	jecxz  0x408266
  40821b:	and    al,0x9f
  40821d:	icebp  
  40821e:	js     0x4081cd
  408220:	jno    0x408207
  408222:	jle    0x408225
  408224:	mov    dl,0xc2
  408226:	repnz sub eax,0xfb37decd
  40822c:	hlt    
  40822d:	shr    DWORD PTR [ebx+0x1c9af0ea],0x88
  408234:	jle    0x40821c
  408236:	out    0x4f,al
  408238:	push   es
  408239:	icebp  
  40823a:	cld    
  40823b:	cs (bad) 
  40823d:	sbb    edx,DWORD PTR [eax]
  40823f:	cwde   
  408240:	ret    
  408241:	adc    BYTE PTR [ebx+0x5],dh
  408244:	jmp    ebx
  408246:	or     al,0xec
  408248:	ss dec edx
  40824a:	xor    dl,BYTE PTR gs:[edx-0x26]
  40824e:	jns    0x4082ae
  408250:	rcr    DWORD PTR [eax-0x42],0xbf
  408254:	popa   
  408255:	add    bh,dh
  408257:	icebp  
  408258:	push   ss
  408259:	lahf   
  40825a:	mov    ebp,0xf04113c3
  40825f:	xor    BYTE PTR [ecx],0x20
  408262:	repz sbb al,0xee
  408265:	jmp    0xb218b4e9
  40826a:	sub    ebp,DWORD PTR [ebx+0x387fce3d]
  408270:	xor    BYTE PTR [esi+edx*4+0x29216aa],0x86
  408278:	fldenv [ebx-0x55]
  40827b:	xor    dh,bl
  40827d:	jno    0x4082c6
  40827f:	jmp    0x91a:0x33fea559
  408286:	xchg   BYTE PTR [edi],ch
  408288:	inc    ecx
  408289:	call   0xbc3804ee
  40828e:	repz imul ecx,esp,0xffffff98
  408292:	cs sahf 
  408294:	in     eax,0x4e
  408296:	push   ecx
  408297:	outs   dx,DWORD PTR ds:[esi]
  408298:	outs   dx,DWORD PTR ds:[esi]
  408299:	cwde   
  40829a:	add    BYTE PTR [edi+0x16f78b58],0xb4
  4082a1:	fldenv [eax-0x2e78e046]
  4082a7:	ins    DWORD PTR es:[edi],dx
  4082a8:	add    eax,0x6cd10375
  4082ad:	push   ebx
  4082ae:	ret    0x380b
  4082b1:	xor    al,0x50
  4082b3:	les    edx,FWORD PTR [eax+0x3d9ea950]
  4082b9:	repz lahf 
  4082bb:	push   ebx
  4082bc:	mov    dh,0x4a
  4082be:	or     al,0xf1
  4082c0:	icebp  
  4082c1:	stos   DWORD PTR es:[edi],eax
  4082c2:	inc    bh
  4082c4:	cdq    
  4082c5:	loopne 0x4082c1
  4082c7:	mov    edi,0x16c5ccf1
  4082cc:	add    DWORD PTR es:[ebp-0x51282a11],0xffffffbc
  4082d4:	pop    eax
  4082d5:	dec    ecx
  4082d6:	push   es
  4082d7:	arpl   WORD PTR [ecx],sp
  4082d9:	push   edi
  4082da:	pop    edx
  4082db:	push   es
  4082dc:	imul   esi,DWORD PTR [edi-0x7753e620],0xa16e55eb
  4082e6:	push   ebx
  4082e7:	mov    bh,0x77
  4082e9:	pop    ecx
  4082ea:	test   DWORD PTR [edi-0x74],eax
  4082ed:	out    dx,eax
  4082ee:	sub    bl,BYTE PTR [esi-0x28]
  4082f1:	mov    esp,0xab2fd4f0
  4082f6:	pop    esp
  4082f7:	mov    edi,0xe0ab09ac
  4082fc:	sub    al,0xa3
  4082fe:	xchg   esi,eax
  4082ff:	cmp    dl,bh
  408301:	fnstcw WORD PTR [esi+0x71]
  408304:	sahf   
  408305:	fidiv  WORD PTR [ebp+0x4]
  408308:	ficomp DWORD PTR [eax+ebp*2]
  40830b:	pusha  
  40830c:	inc    eax
  40830d:	xlat   BYTE PTR ds:[ebx]
  40830e:	or     bh,BYTE PTR [ecx+0x7fc8201d]
  408314:	xchg   ebx,eax
  408315:	(bad)  
  408316:	not    BYTE PTR [eax+0x39]
  408319:	mov    dh,0xc2
  40831b:	xor    esi,DWORD PTR [eax]
  40831d:	imul   ecx,DWORD PTR [ecx],0xfe42b303
  408323:	mov    DWORD PTR [edx],0xd932b23b
  408329:	jl     0x4082cb
  40832b:	(bad)  
  40832c:	neg    BYTE PTR [edi]
  40832e:	xor    DWORD PTR [edi+0x2d582abf],edx
  408334:	rcr    DWORD PTR [ecx],0xa8
  408337:	mov    esi,0x848b9bcd
  40833c:	pop    ss
  40833d:	lds    ebx,FWORD PTR [edx+0x73beed5d]
  408343:	jo     0x4082d6
  408345:	mov    eax,0x80dcf05d
  40834a:	inc    edx
  40834b:	mov    ebx,0x1e87755b
  408350:	cmp    eax,0x73a7dfd0
  408355:	and    eax,0x2952df42
  40835a:	add    eax,0xce334aa2
  40835f:	sbb    eax,0x7e1107f3
  408364:	push   edx
  408365:	xlat   BYTE PTR ds:[ebx]
  408366:	mov    edx,0x429e614
  40836b:	jno    0x40833c
  40836d:	pop    gs
  40836f:	push   edx
  408370:	push   0xffffffb3
  408372:	(bad)  
  408373:	cdq    
  408374:	retf   0x1b5a
  408377:	cdq    
  408378:	or     DWORD PTR [eax-0x73e8061b],ebx
  40837e:	fs sub dl,al
  408381:	inc    ebp
  408382:	in     al,0x8f
  408384:	mov    eax,DWORD PTR [edi+0x2acf2d06]
  40838a:	jb     0x4083bf
  40838c:	jle    0x4083e9
  40838e:	jecxz  0x4083ba
  408390:	test   BYTE PTR [ecx],ch
  408392:	or     al,0x27
  408394:	je     0x40832d
  408396:	mov    ah,0x30
  408398:	or     ebp,esi
  40839a:	push   es
  40839b:	or     dh,bh
  40839d:	mov    ebx,0xbbe6e8a5
  4083a2:	cs cdq 
  4083a4:	lods   eax,DWORD PTR ds:[esi]
  4083a5:	pop    ss
  4083a6:	lock sti 
  4083a8:	retf   0x7a0d
  4083ab:	ins    BYTE PTR es:[edi],dx
  4083ac:	push   esi
  4083ad:	sub    eax,0x1b30113e
  4083b2:	jnp    0x408353
  4083b4:	xor    al,0xc2
  4083b6:	jp     0x408351
  4083b8:	jae    0x408386
  4083ba:	fxch   st(6)
  4083bc:	and    dl,BYTE PTR [ecx]
  4083be:	fs out 0xae,al
  4083c1:	out    dx,eax
  4083c2:	push   esp
  4083c3:	jmp    DWORD PTR [eax+ebp*4-0x59]
  4083c7:	mov    bh,0x6e
  4083c9:	pop    ebp
  4083ca:	xchg   ebx,eax
  4083cb:	pop    esp
  4083cc:	mov    bl,0xac
  4083ce:	scas   eax,DWORD PTR es:[edi]
  4083cf:	cmp    eax,0xc6cc092e
  4083d4:	xchg   esp,eax
  4083d5:	int    0x1b
  4083d7:	pop    es
  4083d8:	data16 data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4083db:	sbb    DWORD PTR [edi],ebx
  4083dd:	pop    edx
  4083de:	mov    edx,0x1b1262fb
  4083e3:	xor    esi,DWORD PTR [edx-0x10]
  4083e6:	cmp    al,bl
  4083e8:	pop    ds
  4083e9:	mov    edi,0x8c1803c6
  4083ee:	dec    esp
  4083ef:	mov    ebp,0xd06eb25f
  4083f5:	std    
  4083f6:	add    al,BYTE PTR [ecx-0x71]
  4083f9:	pop    edx
  4083fa:	mov    edx,0x70548f29
  4083ff:	add    al,0xc1
  408401:	fist   DWORD PTR [eax-0x69]
  408404:	fs mov ebx,0x1bca2e9a
  40840a:	and    DWORD PTR ds:0x2caaf28c,esp
  408410:	jns    0x408417
  408412:	dec    esp
  408413:	pusha  
  408414:	cmp    eax,0xa1abe9d6
  408419:	dec    esp
  40841a:	push   0x864cf3e4
  40841f:	test   eax,0x6ee091b1
  408424:	shl    BYTE PTR [ebx-0x63],0xef
  408428:	retf   0x55a7
  40842b:	out    dx,al
  40842c:	(bad)  
  40842d:	enter  0x90cc,0x78
  408431:	sub    BYTE PTR [ebx+0x3a],bl
  408434:	in     eax,0x84
  408436:	xor    DWORD PTR fs:[ecx+eax*4-0x23],ebx
  40843b:	xchg   DWORD PTR ds:0xec3b1394,esp
  408441:	gs test eax,0x7d6c36de
  408447:	int    0x54
  408449:	mov    ds:0x4044af4e,al
  40844e:	mov    ebx,0x87d91e39
  408453:	(bad)  
  408454:	and    al,0xe2
  408456:	es push ecx
  408458:	lods   al,BYTE PTR ds:[esi]
  408459:	imul   ebp,DWORD PTR [edi+0x16],0x3059f897
  408460:	es clc 
  408462:	retf   
  408463:	sub    ebx,esp
  408465:	add    edx,DWORD PTR [edi-0x6]
  408468:	stc    
  408469:	mov    eax,gs
  40846b:	jmp    FWORD PTR [eax]
  40846d:	jmp    0xa59f:0x3c888f05
  408474:	jle    0x40846a
  408476:	dec    edi
  408477:	inc    esp
  408478:	or     al,0x41
  40847a:	stos   DWORD PTR es:[edi],eax
  40847b:	fwait
  40847c:	(bad)  
  40847d:	or     eax,0x351ff43a
  408482:	cmp    eax,0x67c1f12
  408487:	(bad)  
  408489:	push   ebx
  40848a:	xor    cl,BYTE PTR [edi-0x467c49f1]
  408490:	inc    ecx
  408491:	std    
  408492:	jg     0x4084b6
  408494:	jns    0x408471
  408496:	adc    ah,BYTE PTR [ebx+0x17a50080]
  40849c:	mov    ecx,0x46f701fc
  4084a1:	xor    eax,0x56805d54
  4084a6:	or     dh,BYTE PTR [ebp-0x54]
  4084a9:	push   edx
  4084aa:	push   es
  4084ab:	test   al,0xbd
  4084ad:	adc    ch,ch
  4084af:	jg     0x40848a
  4084b1:	pop    ds
  4084b2:	lods   eax,DWORD PTR ds:[esi]
  4084b3:	or     eax,DWORD PTR [eax+0xb]
  4084b6:	push   es
  4084b7:	loop   0x408488
  4084b9:	mov    BYTE PTR [esi+0x76],ch
  4084bc:	push   ss
  4084bd:	sbb    DWORD PTR [esi-0x18],ecx
  4084c0:	dec    esi
  4084c1:	int3   
  4084c2:	push   ss
  4084c3:	std    
  4084c4:	dec    ebx
  4084c5:	sub    BYTE PTR [edi+0x24],dl
  4084c8:	jge    0x408475
  4084ca:	push   esi
  4084cb:	dec    ebx
  4084cc:	fmul   QWORD PTR [ebx-0x29cc1bab]
  4084d2:	add    edx,edi
  4084d4:	or     eax,edx
  4084d6:	mov    edx,DWORD PTR [ebp-0x20]
  4084d9:	xor    edx,esi
  4084db:	add    eax,edx
  4084dd:	mov    edx,DWORD PTR [ebp-0x20]
  4084e0:	xor    edx,esi
  4084e2:	add    eax,edx
  4084e4:	mov    edx,DWORD PTR [ebp-0x10]
  4084e7:	lea    eax,[eax+edx*1+0x64e5de]
  4084ee:	jmp    0x40a872
  4084f3:	jmp    0x40a863
  4084f8:	mov    ecx,0x7b608113
  4084fd:	in     al,0x9f
  4084ff:	jnp    0x40851c
  408501:	mov    bl,0xe4
  408503:	pop    ebx
  408504:	shl    DWORD PTR ds:0x1181db7d,cl
  40850a:	jp     0x408586
  40850c:	das    
  40850d:	pop    edi
  40850e:	jp     0x40858a
  408510:	ffreep st(5)
  408512:	sahf   
  408513:	push   eax
  408514:	pop    ebx
  408515:	cmp    eax,0xd914c579
  40851a:	nop
  40851b:	leave  
  40851c:	jne    0x408583
  40851e:	mov    ah,0xf9
  408520:	ja     0x4085a1
  408522:	or     DWORD PTR [eax],ebx
  408524:	addr16 adc eax,0x794d9c63
  40852a:	add    DWORD PTR [edi-0x726e6286],eax
  408530:	push   edi
  408531:	sbb    bh,BYTE PTR [esi-0x5e]
  408534:	xchg   ebx,eax
  408535:	pop    edi
  408536:	sbb    al,BYTE PTR [edi]
  408538:	xchg   ebx,eax
  408539:	lea    ebx,[ebx-0x1678778d]
  40853f:	pop    ds
  408540:	into   
  408541:	(bad)  
  408542:	xor    BYTE PTR [ebx+0x12],bh
  408545:	sub    DWORD PTR [ebx+0x733881c9],ebp
  40854b:	rcr    bl,1
  40854d:	cmp    BYTE PTR [edi],dl
  40854f:	into   
  408550:	mov    ebx,ebp
  408552:	icebp  
  408553:	jo     0x4085bb
  408555:	out    dx,eax
  408556:	xchg   esi,eax
  408557:	mov    WORD PTR [esi],ss
  408559:	scas   eax,DWORD PTR es:[edi]
  40855a:	or     DWORD PTR [edx],esi
  40855c:	dec    esp
  40855d:	addr16 test eax,0x27fefa28
  408563:	or     DWORD PTR [eax-0x50],0xf62f0b05
  40856a:	xlat   BYTE PTR ds:[ebx]
  40856b:	add    DWORD PTR [edi-0x72],esi
  40856e:	add    al,0x3
  408570:	mov    dh,0xba
  408572:	adc    bh,dh
  408574:	retf   0xe83d
  408577:	dec    eax
  408578:	push   0x3fbb9b2d
  40857d:	int3   
  40857e:	in     eax,0xf4
  408580:	sbb    al,0xcb
  408582:	lods   al,BYTE PTR ds:[esi]
  408583:	arpl   ax,bp
  408585:	jecxz  0x4085c5
  408587:	pop    es
  408588:	pop    es
  408589:	pop    ebp
  40858a:	pop    ss
  40858b:	jle    0x408588
  40858d:	scas   al,BYTE PTR es:[edi]
  40858e:	jbe    0x40856b
  408590:	retf   
  408591:	jo     0x408539
  408593:	cmp    eax,0x8d9b1d23
  408598:	into   
  408599:	ins    DWORD PTR es:[edi],dx
  40859a:	xor    ebp,DWORD PTR [ebx-0xd]
  40859d:	and    DWORD PTR [eax-0x43],esp
  4085a0:	stc    
  4085a1:	imul   edi,DWORD PTR [edi+ecx*4],0xd32af621
  4085a8:	stc    
  4085a9:	mov    al,ds:0x501caee4
  4085ae:	in     eax,0x87
  4085b0:	fist   WORD PTR [ebp+0x6e]
  4085b3:	fst    DWORD PTR [edi-0x731d3e08]
  4085b9:	enter  0xd5f1,0xdc
  4085bd:	sub    eax,0xfbca7f12
  4085c2:	(bad)  
  4085c3:	jne    0x408585
  4085c5:	retf   0xf311
  4085c8:	add    al,0x87
  4085ca:	(bad)  
  4085cb:	mov    dl,0xb1
  4085cd:	push   eax
  4085ce:	or     DWORD PTR [ebp+0x6d],edx
  4085d1:	push   ss
  4085d2:	ss mov bl,0x24
  4085d5:	pushf  
  4085d6:	outs   dx,DWORD PTR ds:[esi]
  4085d7:	or     al,ch
  4085d9:	leave  
  4085da:	xor    al,0xb
  4085dc:	pusha  
  4085dd:	stc    
  4085de:	adc    DWORD PTR [eax-0x1fda0704],0xffffffa6
  4085e5:	call   0xd7222e72
  4085ea:	and    eax,0x5bd39cfc
  4085ef:	jo     0x408645
  4085f1:	or     al,0x32
  4085f3:	(bad)  
  4085f4:	(bad)  
  4085f6:	sahf   
  4085f7:	scas   al,BYTE PTR es:[edi]
  4085f8:	pop    eax
  4085f9:	popa   
  4085fa:	sahf   
  4085fb:	cld    
  4085fc:	rcl    BYTE PTR [ecx-0x2c],cl
  4085ff:	mov    eax,0x8c258ba3
  408604:	xor    edi,DWORD PTR [esi+eiz*8+0xefca048]
  40860b:	dec    edx
  40860c:	push   cs
  40860d:	lds    ebp,FWORD PTR [esp+esi*4+0x3c]
  408611:	mov    al,ds:0x303dfa75
  408616:	sbb    DWORD PTR ss:[ecx+0x3505c5a0],esi
  40861d:	dec    eax
  40861e:	inc    ecx
  408620:	fs jp  0x4085f9
  408623:	and    DWORD PTR [ecx],0x75bcca9a
  408629:	jecxz  0x4085d9
  40862b:	xchg   esi,edx
  40862d:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40862f:	sti    
  408630:	jno    0x40862e
  408632:	outs   dx,DWORD PTR ds:[esi]
  408633:	sti    
  408634:	mov    dl,0x65
  408636:	dec    esp
  408637:	mov    WORD PTR [edx+ecx*8],es
  40863a:	pop    edi
  40863b:	retf   
  40863c:	jb     0x408677
  40863e:	in     eax,dx
  40863f:	pushf  
  408640:	sub    dl,BYTE PTR [ecx-0x76]
  408643:	loop   0x40865c
  408645:	cmp    cl,BYTE PTR ds:0x2b28
  40864a:	stos   DWORD PTR es:[edi],eax
  40864b:	in     al,dx
  40864c:	push   ebx
  40864d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40864e:	imul   edi,DWORD PTR [edi],0xa67429e9
  408654:	stc    
  408655:	and    BYTE PTR [edi],0x56
  408658:	cld    
  408659:	scas   al,BYTE PTR es:[edi]
  40865a:	jno    0x4086c1
  40865c:	fidivr WORD PTR [edx-0x3ea1179d]
  408662:	inc    edi
  408663:	hlt    
  408664:	in     al,0xa2
  408666:	rcr    BYTE PTR [eax],cl
  408668:	fstp   TBYTE PTR [edx-0x79]
  40866b:	sahf   
  40866c:	mov    ah,BYTE PTR [ebx+0x51876af6]
  408672:	jecxz  0x4086aa
  408674:	adc    eax,0x7284a34c
  408679:	push   esp
  40867a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40867b:	sti    
  40867c:	or     al,BYTE PTR [ecx+esi*1-0x27]
  408680:	movups xmm5,XMMWORD PTR [edx-0x233d79b3]
  408687:	imul   ebx,DWORD PTR [ebx],0xffffff9f
  40868a:	(bad)  
  40868b:	(bad)  
  40868c:	lahf   
  40868d:	push   es
  40868e:	stc    
  40868f:	inc    edi
  408690:	mov    al,0xf6
  408692:	fild   WORD PTR [edx]
  408694:	sbb    DWORD PTR [edi-0x779ebda4],0x7f963e5
  40869e:	push   ds
  40869f:	fwait
  4086a0:	sbb    BYTE PTR [edi],bl
  4086a2:	push   0xffffffcc
  4086a4:	inc    edi
  4086a5:	inc    ebx
  4086a6:	les    edi,FWORD PTR [ebp-0x46]
  4086a9:	loopne 0x4086ae
  4086ab:	add    eax,0xaa8dc2c4
  4086b0:	les    eax,FWORD PTR [ebx]
  4086b2:	lock pop ecx
  4086b4:	push   esp
  4086b5:	sbb    DWORD PTR [esi+edx*2-0x74],esp
  4086b9:	sub    al,0x88
  4086bb:	pusha  
  4086bc:	cld    
  4086bd:	inc    edx
  4086be:	pop    esp
  4086bf:	sbb    bh,BYTE PTR [edx+0x750c2f34]
  4086c5:	sub    BYTE PTR [eax-0x3f7362b],ah
  4086cb:	js     0x40867a
  4086cd:	add    bl,BYTE PTR [edi-0x4e]
  4086d0:	mov    al,0xdb
  4086d2:	jbe    0x408664
  4086d4:	sub    eax,0x5820a4c0
  4086d9:	loope  0x4086b1
  4086db:	add    BYTE PTR [eax+0x3d2b1d04],dl
  4086e1:	sbb    DWORD PTR ds:0xda833314,0xffffffaa
  4086e8:	ds pop ebx
  4086ea:	lock push esi
  4086ec:	sub    bl,BYTE PTR [ebx-0x1e966a91]
  4086f2:	xchg   edi,eax
  4086f3:	das    
  4086f4:	jle    0x408714
  4086f6:	mov    ch,0xbb
  4086f8:	xchg   ebp,eax
  4086f9:	jmp    0x8cf43e12
  4086fe:	ffree  st(3)
  408700:	and    DWORD PTR [ebx],edx
  408702:	cld    
  408703:	retf   0xdaae
  408706:	sti    
  408707:	jo     0x4086d6
  408709:	pop    esi
  40870a:	cmp    DWORD PTR [edx+0x528e202c],ecx
  408710:	bound  eax,QWORD PTR [ecx+eax*2+0x46]
  408714:	push   0x2aae20e
  408719:	lea    eax,[edi]
  40871b:	cmp    edx,DWORD PTR [esi+0x4998491d]
  408721:	sbb    eax,0xb3c33f1e
  408726:	fstp   DWORD PTR [edi]
  408728:	add    al,BYTE PTR [eax]
  40872a:	push   esp
  40872b:	and    BYTE PTR [ebx+0x5c],dl
  40872e:	lods   al,BYTE PTR ds:[esi]
  40872f:	data16 mov al,ds:0xe0b99f8
  408735:	jg     0x408760
  408737:	fdiv   DWORD PTR [esi+0x74f770e0]
  40873d:	das    
  40873e:	and    ecx,DWORD PTR [ecx+0x35]
  408741:	es int 0x9
  408744:	stos   DWORD PTR es:[edi],eax
  408745:	sub    ecx,DWORD PTR [ebx+0x1f]
  408748:	jae    0x4087b9
  40874a:	sub    ebx,0xcfee9fa6
  408750:	add    bh,BYTE PTR [eax-0x4c]
  408753:	dec    ecx
  408754:	retf   0xb834
  408757:	shl    DWORD PTR [ebx+ebp*1],cl
  40875a:	sahf   
  40875b:	push   esp
  40875c:	xchg   BYTE PTR [ebp-0x4e2d14b1],dh
  408762:	jg     0x4086f4
  408764:	loop   0x4087b7
  408766:	repnz adc ebx,edi
  408769:	(bad)  
  40876a:	(bad)  
  40876b:	cmp    DWORD PTR [ebp-0x76],ebp
  40876e:	dec    esp
  40876f:	adc    al,0x8f
  408771:	dec    ecx
  408772:	in     eax,0xe2
  408774:	lock dec esi
  408776:	and    DWORD PTR [edi+0x5b16907c],edx
  40877c:	retf   0x2b5c
  40877f:	jmp    0x4087bf
  408781:	or     al,BYTE PTR [edx-0x35e72c61]
  408787:	xchg   ebx,eax
  408788:	pop    ecx
  408789:	call   0x174f37bb
  40878e:	addr16 xchg ebp,eax
  408790:	test   al,0x3c
  408792:	shl    DWORD PTR [eax],1
  408794:	xor    ecx,DWORD PTR [eax]
  408796:	push   0x2ca39b8f
  40879b:	fwait
  40879c:	out    0xa8,eax
  40879e:	inc    ecx
  40879f:	in     al,dx
  4087a0:	adc    DWORD PTR [ecx-0x66],0x4b
  4087a4:	(bad)  
  4087a5:	(bad)  
  4087a6:	in     eax,0xa6
  4087a8:	dec    ebp
  4087a9:	xchg   ecx,eax
  4087aa:	sahf   
  4087ab:	mov    esp,0x85506d13
  4087b0:	dec    edi
  4087b1:	cwde   
  4087b2:	(bad)  
  4087b3:	popa   
  4087b4:	ja     0x408775
  4087b6:	arpl   bp,dx
  4087b8:	and    BYTE PTR [edx-0x453b1ebd],0x7b
  4087bf:	in     al,dx
  4087c0:	mov    gs,WORD PTR [ebx]
  4087c2:	inc    ecx
  4087c3:	fwait
  4087c4:	rcl    DWORD PTR [ebp+edi*2-0x4ec59df6],cl
  4087cb:	dec    eax
  4087cc:	mov    ah,0xd7
  4087ce:	push   DWORD PTR [ebx]
  4087d0:	and    DWORD PTR [esi+eax*2+0x16],edi
  4087d4:	lea    esi,[edi+0x22]
  4087d7:	fs inc eax
  4087d9:	pop    es
  4087da:	ret    
  4087db:	sti    
  4087dc:	inc    esp
  4087de:	add    al,0x7b
  4087e0:	mov    edi,0xd7060382
  4087e5:	inc    eax
  4087e6:	cmp    al,0x72
  4087e8:	sbb    BYTE PTR [ebx],bl
  4087ea:	cmp    DWORD PTR [eax+ebp*1],0xffffff92
  4087ee:	out    dx,eax
  4087ef:	(bad)  
  4087f0:	int    0xd4
  4087f2:	mul    edi
  4087f4:	fwait
  4087f5:	ror    DWORD PTR [ebx+0x28b1a12c],cl
  4087fb:	bound  ebp,QWORD PTR [edi-0x117ee35c]
  408801:	push   ebp
  408802:	lods   al,BYTE PTR ds:[esi]
  408803:	or     dh,BYTE PTR [edi+edi*1-0x10fa4cde]
  40880a:	push   ebp
  40880b:	or     DWORD PTR [edi+0x5adea1a3],esi
  408811:	and    bh,BYTE PTR [edi]
  408813:	mov    ecx,0x7de99ecc
  408818:	iret   
  408819:	push   0x9d1861ef
  40881e:	xchg   ebx,eax
  40881f:	cmp    DWORD PTR es:[ebx-0x6d],edi
  408823:	in     al,dx
  408824:	push   eax
  408825:	fwait
  408826:	test   dh,bh
  408828:	push   ebp
  408829:	aaa    
  40882a:	push   ebp
  40882b:	add    esi,DWORD PTR [esi]
  40882d:	fcom   QWORD PTR ds:0xd25ccc60
  408833:	mov    al,ds:0xc05b36ad
  408838:	dec    esi
  408839:	sbb    edx,DWORD PTR [ecx+0x4e]
  40883c:	retf   
  40883d:	jecxz  0x408828
  40883f:	inc    edi
  408840:	into   
  408841:	and    al,0x5e
  408843:	lods   eax,DWORD PTR ds:[esi]
  408844:	stos   DWORD PTR es:[edi],eax
  408845:	dec    edx
  408846:	mov    ds:0x7b54971e,eax
  40884b:	push   es
  40884c:	dec    esi
  40884d:	fiadd  WORD PTR [ebx+0x74e15553]
  408853:	js     0x408817
  408855:	mov    ss,esi
  408857:	pop    esp
  408858:	and    dl,dh
  40885a:	inc    esi
  40885b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40885c:	out    dx,al
  40885d:	inc    edx
  40885e:	ds enter 0xb1fc,0x31
  408863:	xchg   ebp,eax
  408864:	mov    bh,0xc6
  408866:	push   0xffffffe7
  408868:	stos   BYTE PTR es:[edi],al
  408869:	or     dh,BYTE PTR [edx+ebp*1+0x7e]
  40886d:	adc    edx,DWORD PTR [eax+0x37]
  408870:	mov    edx,0x88fa24dc
  408875:	mov    bh,0xbf
  408877:	adc    al,0x63
  408879:	jecxz  0x4088db
  40887b:	jmp    0x4088a2
  40887d:	aad    0xb4
  40887f:	je     0x408891
  408881:	ins    DWORD PTR es:[edi],dx
  408882:	xchg   esi,eax
  408883:	(bad)  [edx-0x5c]
  408886:	inc    edi
  408887:	fisttp WORD PTR [edi+0x60]
  40888a:	jmp    0x6339:0xea2be935
  408891:	fnstenv [edx]
  408893:	clc    
  408894:	add    DWORD PTR [edi+0x2a],esi
  408897:	push   esp
  408898:	outs   dx,DWORD PTR ds:[esi]
  408899:	pop    esi
  40889a:	jge    0x40885a
  40889c:	sbb    al,0x9a
  40889e:	out    dx,al
  40889f:	jno    0x408897
  4088a1:	add    DWORD PTR [ebx],esi
  4088a3:	dec    edi
  4088a4:	and    DWORD PTR [edi+0x25],ebp
  4088a7:	scas   eax,DWORD PTR es:[edi]
  4088a8:	mov    ch,BYTE PTR [ecx-0x50751845]
  4088ae:	fnstenv [edx+0x4f]
  4088b1:	xor    edx,ebx
  4088b3:	fs push 0xffffffd1
  4088b6:	cli    
  4088b7:	out    dx,eax
  4088b8:	push   ds
  4088b9:	cli    
  4088ba:	push   ss
  4088bb:	and    ah,BYTE PTR [ebp+0x12fca7d2]
  4088c1:	jge    0x408888
  4088c3:	or     BYTE PTR [esi],dh
  4088c5:	mov    eax,0x23209ad8
  4088ca:	pop    ecx
  4088cb:	xchg   esi,eax
  4088cc:	test   DWORD PTR [eax+0xd],ebx
  4088cf:	(bad)  
  4088d0:	das    
  4088d1:	inc    ebp
  4088d2:	mov    bh,0x2a
  4088d4:	sub    BYTE PTR [edi-0x12],ch
  4088d7:	addr16 jbe 0x4088c6
  4088da:	sub    ebx,DWORD PTR [ecx]
  4088dc:	ficom  DWORD PTR [ecx]
  4088de:	push   ebx
  4088df:	jbe    0x40894b
  4088e1:	fistp  QWORD PTR [ebp-0x556297e5]
  4088e7:	popa   
  4088e8:	sub    al,0x13
  4088ea:	inc    BYTE PTR [ebx+ebp*2-0x6529e6bc]
  4088f1:	out    0x85,eax
  4088f3:	pop    edi
  4088f4:	sub    eax,0x2c9b3a99
  4088f9:	outs   dx,DWORD PTR ds:[esi]
  4088fa:	into   
  4088fb:	jmp    0x170d971b
  408900:	adc    al,0xc4
  408902:	mov    edi,0x4f5bc92d
  408907:	es mov dh,0x84
  40890a:	push   edi
  40890b:	mov    ah,0x5f
  40890d:	(bad)  
  40890e:	inc    BYTE PTR [ebp-0x68a0ed97]
  408914:	inc    esp
  408915:	js     0x408945
  408917:	xor    DWORD PTR ds:0x403bf1f2,eax
  40891d:	fsubr  DWORD PTR [eax]
  40891f:	push   0x842f8642
  408924:	adc    al,0xc7
  408926:	xor    BYTE PTR [eax-0x71fd1fbe],0xb
  40892d:	imul   ebp,DWORD PTR [edi-0x6b],0x6a7ea6ba
  408934:	pop    ebx
  408935:	cmp    edx,eax
  408937:	stc    
  408938:	mov    dh,0xb2
  40893a:	in     eax,0x6b
  40893c:	xchg   ebx,eax
  40893d:	ficom  WORD PTR cs:[eax]
  408940:	test   eax,0x1c9446a7
  408945:	stc    
  408946:	loop   0x408991
  408948:	fs loope 0x40899c
  40894b:	cli    
  40894c:	ror    DWORD PTR [edi+0xf2a86bd],0x5b
  408953:	pop    ebp
  408954:	pushf  
  408955:	sbb    al,BYTE PTR [esi+0x7c]
  408958:	xchg   edx,eax
  408959:	dec    edi
  40895a:	dec    ebp
  40895b:	sbb    DWORD PTR [ebx-0xbd4fa6f],edi
  408961:	loop   0x408933
  408963:	sub    al,0xcb
  408965:	jno    0x40894e
  408967:	scas   eax,DWORD PTR es:[edi]
  408968:	enter  0x61a9,0x5b
  40896c:	or     DWORD PTR [edx+0x67],ecx
  40896f:	fwait
  408970:	ja     0x40896c
  408972:	(bad)  
  408973:	cmp    eax,0x4c690fb5
  408978:	mov    ah,0xc4
  40897a:	jae    0x4089d6
  40897c:	push   ecx
  40897d:	test   eax,0x4a591a8c
  408982:	xor    DWORD PTR [ebp-0x4c],eax
  408985:	mov    ds:0xda7e919c,eax
  40898a:	pop    ds
  40898b:	adc    eax,0xbdd221e4
  408990:	ins    DWORD PTR es:[edi],dx
  408991:	jae    0x4089ad
  408993:	(bad)  [edi]
  408995:	jmp    0x40898c
  408997:	lds    edi,FWORD PTR [ecx-0x41a5a425]
  40899d:	out    0x89,eax
  40899f:	jb     0x408a10
  4089a1:	inc    edi
  4089a2:	or     bh,BYTE PTR [edx-0x3a]
  4089a5:	out    0xd1,al
  4089a7:	jmp    0x4089e9
  4089a9:	add    dl,BYTE PTR cs:[edi-0x47]
  4089ad:	enter  0x5098,0xf0
  4089b1:	adc    bl,BYTE PTR [ebx-0x5d97f6e0]
  4089b7:	pop    ebx
  4089b8:	cmp    eax,0xc41f245f
  4089bd:	pop    esi
  4089be:	pop    es
  4089bf:	sti    
  4089c0:	int3   
  4089c1:	fcom   DWORD PTR [ebp+0x32a4a3f3]
  4089c7:	pop    edi
  4089c8:	scas   eax,DWORD PTR es:[edi]
  4089c9:	push   ss
  4089ca:	and    dl,ch
  4089cc:	je     0x408972
  4089ce:	test   BYTE PTR [esi],al
  4089d0:	fnstsw WORD PTR [ebx+0x65277786]
  4089d6:	lods   al,BYTE PTR ds:[esi]
  4089d7:	retf   
  4089d8:	lods   al,BYTE PTR ds:[esi]
  4089d9:	aaa    
  4089da:	mov    al,ds:0x2e94a4e2
  4089df:	popf   
  4089e0:	fiadd  DWORD PTR [eax+0x76]
  4089e3:	sti    
  4089e4:	sbb    dh,BYTE PTR [edx]
  4089e6:	test   DWORD PTR [ebp-0x250f5900],ebx
  4089ec:	lods   al,BYTE PTR ds:[esi]
  4089ed:	hlt    
  4089ee:	or     esp,DWORD PTR [eax]
  4089f0:	ror    DWORD PTR [edx+0x51],cl
  4089f3:	mov    bh,0x64
  4089f5:	mov    dl,0x7a
  4089f7:	aad    0x49
  4089f9:	bound  ebp,QWORD PTR [esi+0x2bcafc46]
  4089ff:	(bad)  
  408a00:	in     al,0x2b
  408a02:	(bad)  
  408a03:	mov    ds:0x785f568f,eax
  408a08:	pop    edi
  408a09:	in     al,0x37
  408a0b:	or     al,0xc9
  408a0d:	jmp    0xe074:0x8d1cd0c8
  408a14:	clc    
  408a15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a16:	xor    ch,bl
  408a18:	push   ebp
  408a19:	pop    ss
  408a1a:	cld    
  408a1b:	(bad)  
  408a1d:	mov    ch,0x16
  408a1f:	pop    ds
  408a20:	pusha  
  408a21:	fisubr DWORD PTR [ebx-0x4e]
  408a24:	xchg   DWORD PTR [eax+ecx*8-0x4f],ebp
  408a28:	cli    
  408a29:	mov    WORD PTR [esi+0x16],gs
  408a2c:	push   es
  408a2d:	mov    WORD PTR [ecx],?
  408a2f:	clc    
  408a30:	mov    edx,0xeef43a16
  408a35:	icebp  
  408a36:	and    BYTE PTR [ebp-0x14],0x6d
  408a3a:	jb     0x408a55
  408a3c:	cli    
  408a3d:	out    dx,al
  408a3e:	lods   al,BYTE PTR ds:[esi]
  408a3f:	mov    eax,ds:0x4d1d6912
  408a44:	sub    bl,cl
  408a46:	mov    dh,0x4a
  408a48:	dec    edi
  408a49:	sar    DWORD PTR [edx],1
  408a4b:	enter  0x8416,0x9f
  408a4f:	call   0x5903:0xc632376e
  408a56:	mov    al,0xa7
  408a58:	dec    esp
  408a59:	pop    ebx
  408a5a:	add    DWORD PTR gs:[ebx],esp
  408a5d:	mov    dl,0xb4
  408a5f:	(bad)  
  408a60:	jnp    0x408a12
  408a62:	enter  0xf90a,0xf8
  408a66:	inc    edx
  408a67:	add    DWORD PTR [eax+0x7a],edi
  408a6a:	mov    al,ds:0x528163a0
  408a6f:	fisttp QWORD PTR [esi+0x79857b2f]
  408a75:	jb     0x408a78
  408a77:	stos   BYTE PTR es:[edi],al
  408a78:	cs hlt 
  408a7a:	cld    
  408a7b:	cmp    cl,BYTE PTR [ecx+0x57fd04f1]
  408a81:	sar    DWORD PTR [edx+0x41],cl
  408a84:	sub    edi,DWORD PTR [esi-0x208557fc]
  408a8a:	ins    BYTE PTR es:[edi],dx
  408a8b:	mov    ch,0x56
  408a8d:	fucomi st,st(1)
  408a8f:	lods   eax,DWORD PTR ds:[esi]
  408a90:	or     al,0xb7
  408a92:	xchg   ebx,eax
  408a93:	pushf  
  408a94:	cmp    ax,0x6768
  408a98:	in     al,dx
  408a99:	xor    dh,BYTE PTR [esi-0x11]
  408a9c:	adc    ax,0x5c5a
  408aa0:	push   edx
  408aa1:	push   ss
  408aa2:	lock nop
  408aa4:	sub    DWORD PTR [edi+0x1],0x951e333d
  408aab:	ds xor al,0x4c
  408aae:	and    bh,0xa2
  408ab1:	lahf   
  408ab2:	adc    eax,0x7824bc2c
  408ab7:	call   0x55b121d8
  408abc:	cmp    DWORD PTR [ecx+0x41],esi
  408abf:	push   ecx
  408ac0:	jno    0x408ae6
  408ac2:	in     eax,dx
  408ac3:	add    esp,DWORD PTR [eax+edx*4]
  408ac6:	in     eax,dx
  408ac7:	call   0x9f7eb921
  408acc:	or     ebx,DWORD PTR [eax-0x29]
  408acf:	mov    ds:0x182c2e11,eax
  408ad4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ad5:	sti    
  408ad6:	(bad)  
  408ad8:	call   0xa9c9:0x1bc95237
  408adf:	(bad)
  408ae3:	(bad)
  408ae7:	ss push cs
  408ae9:	cdq    
  408aea:	cwde   
  408aeb:	push   0xffffffe8
  408aed:	sahf   
  408aee:	xchg   DWORD PTR [eax-0x7d2f8195],edi
  408af4:	retf   0x80c8
  408af7:	jne    0x408ae2
  408af9:	jae    0x408b31
  408afb:	loope  0x408b55
  408afd:	and    eax,0x5d784a75
  408b02:	or     dl,BYTE PTR [eax+eiz*8+0xa]
  408b06:	imul   esi,DWORD PTR [ebx+0x3dbbfb10],0xd658220c
  408b10:	mov    ds:0x28b0f754,al
  408b15:	ret    0x3838
  408b18:	mov    ds:0x1daee937,al
  408b1d:	jns    0x408ab2
  408b1f:	ror    DWORD PTR [edx+ebx*1],cl
  408b22:	add    al,0x6f
  408b24:	js     0x408b97
  408b26:	in     al,dx
  408b27:	lea    esi,[edi]
  408b29:	popf   
  408b2a:	jle    0x408af3
  408b2c:	jno    0x408b49
  408b2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b2f:	stc    
  408b30:	jae    0x408b1c
  408b32:	xor    DWORD PTR [edi-0x67],0xffffffb4
  408b36:	push   esi
  408b37:	fild   DWORD PTR ds:0x5877397d
  408b3d:	hlt    
  408b3e:	sbb    esp,esp
  408b40:	push   cs
  408b41:	div    BYTE PTR [edi+0x1c899524]
  408b47:	fistp  WORD PTR [esi+0x41d895]
  408b4d:	pop    edx
  408b4e:	jno    0x408b1e
  408b50:	inc    sp
  408b52:	add    esp,edi
  408b54:	inc    edi
  408b55:	popa   
  408b56:	ja     0x408ada
  408b58:	ins    DWORD PTR es:[edi],dx
  408b59:	jbe    0x408b42
  408b5b:	stos   BYTE PTR es:[edi],al
  408b5c:	pop    esi
  408b5d:	fidivr DWORD PTR [ecx+0x399bda85]
  408b63:	or     edx,edi
  408b65:	pop    esp
  408b66:	xchg   esi,eax
  408b67:	cmp    DWORD PTR [ebp-0x64],esp
  408b6a:	pusha  
  408b6b:	or     eax,0x21c64dd0
  408b70:	xchg   ecx,eax
  408b71:	(bad)  
  408b72:	aam    0x3f
  408b74:	push   ecx
  408b75:	and    bl,BYTE PTR [ebx-0x3b]
  408b78:	call   0xf311b1d2
  408b7d:	pop    esp
  408b7e:	cli    
  408b7f:	out    dx,al
  408b80:	mov    al,0x9a
  408b82:	jns    0x408bd8
  408b84:	lahf   
  408b85:	and    al,0x70
  408b87:	jge    0x408bcf
  408b89:	out    dx,eax
  408b8a:	push   esi
  408b8b:	scas   al,BYTE PTR es:[edi]
  408b8c:	ja     0x408b4e
  408b8e:	mov    esi,0xfa6b60a0
  408b93:	mov    ebx,0x5305e1f7
  408b98:	(bad)  
  408b99:	loope  0x408b65
  408b9b:	pop    ds
  408b9c:	and    eax,0xc4763fa6
  408ba1:	cwde   
  408ba2:	add    ch,BYTE PTR [ebp-0x7e973e9b]
  408ba8:	sbb    BYTE PTR [ecx+0x5723900e],ah
  408bae:	stc    
  408baf:	xor    eax,0x48bf83ba
  408bb4:	add    BYTE PTR [edx],0x31
  408bb7:	ins    BYTE PTR es:[edi],dx
  408bb8:	jbe    0x408ba1
  408bba:	adc    eax,0x229c2ad
  408bbf:	sub    dl,BYTE PTR [ebx-0x1eb9aa99]
  408bc5:	loope  0x408b54
  408bc7:	mov    edx,eax
  408bc9:	(bad)  
  408bcb:	push   0x1ee9e251
  408bd0:	or     al,cl
  408bd2:	adc    ecx,eax
  408bd4:	mov    edi,0x9638c5f5
  408bd9:	push   edx
  408bda:	add    esi,DWORD PTR [ecx-0xb495246]
  408be0:	jecxz  0x408bb7
  408be2:	push   0x17
  408be4:	test   ch,bl
  408be6:	lods   eax,DWORD PTR ds:[esi]
  408be7:	cmp    esi,DWORD PTR [esi+0x8]
  408bea:	inc    eax
  408beb:	scas   eax,DWORD PTR es:[edi]
  408bec:	mov    eax,0x73bdd02a
  408bf1:	add    eax,0x304acb6a
  408bf6:	daa    
  408bf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408bf8:	repnz repz and esi,esp
  408bfc:	std    
  408bfd:	mov    dl,0x90
  408bff:	jns    0x408c2b
  408c01:	cmp    ebx,DWORD PTR [ecx-0x6d]
  408c04:	(bad)
  408c07:	mov    edi,cs
  408c09:	or     bh,BYTE PTR [edi]
  408c0b:	(bad)  [edx+ecx*4+0x718df354]
  408c12:	ror    DWORD PTR [eax-0x284c11e7],1
  408c18:	adc    al,0xa0
  408c1a:	or     eax,0xe67c5338
  408c1f:	lahf   
  408c20:	push   0xffffff8e
  408c22:	jbe    0x408c48
  408c24:	stc    
  408c25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c26:	adc    DWORD PTR [ebx-0x73],eax
  408c29:	xchg   esi,eax
  408c2a:	or     ch,bh
  408c2c:	add    bh,0xd8
  408c2f:	rcr    BYTE PTR [ecx],1
  408c31:	outs   dx,BYTE PTR ds:[esi]
  408c32:	rcr    BYTE PTR [ebp-0x4d2994ab],0x9e
  408c39:	sahf   
  408c3a:	sbb    al,0xfa
  408c3c:	or     DWORD PTR [ebx+0x42],esp
  408c3f:	retf   0xed17
  408c42:	in     eax,dx
  408c43:	test   eax,0x5dcc5b80
  408c48:	jne    0x408cc8
  408c4a:	jmp    FWORD PTR [eax-0x5dbf13bd]
  408c50:	mov    edi,0xca46c66f
  408c55:	mov    bl,0x5b
  408c57:	push   ebx
  408c58:	shl    BYTE PTR [ecx+0x410491a7],cl
  408c5e:	fistp  DWORD PTR [ebx-0x2f]
  408c61:	mov    bl,0xd5
  408c63:	mov    ebx,0xa1ecdeb6
  408c68:	fidivr WORD PTR [esi+edx*8+0x16688b8a]
  408c6f:	jb     0x408ca4
  408c71:	mov    eax,0x45688623
  408c76:	sbb    dh,BYTE PTR [ecx+0x50]
  408c79:	lahf   
  408c7a:	fistp  DWORD PTR [edi-0x46fc7b37]
  408c80:	hlt    
  408c81:	jmp    0x408c90
  408c83:	sub    al,0x8d
  408c85:	scas   al,BYTE PTR es:[edi]
  408c86:	retf   
  408c87:	retf   
  408c88:	sub    al,BYTE PTR [edx+0x6b]
  408c8b:	cmp    al,0x36
  408c8d:	aam    0xeb
  408c8f:	and    edi,DWORD PTR [ebp+0x5d]
  408c92:	adc    BYTE PTR [ebx],cl
  408c94:	push   esi
  408c95:	movlps xmm4,QWORD PTR [edx-0x18]
  408c99:	mov    eax,0xeba8258
  408c9e:	mov    edx,0x34ac209c
  408ca3:	mov    al,0xee
  408ca5:	retf   0xfbab
  408ca8:	ja     0x408cc0
  408caa:	add    BYTE PTR [edx+0x3c0f2861],dl
  408cb0:	pop    esp
  408cb1:	add    eax,0x7422a3ab
  408cb6:	fs out dx,eax
  408cb8:	dec    DWORD PTR [edi+edx*4-0x52]
  408cbc:	mov    eax,0xa605e876
  408cc1:	iret   
  408cc2:	cmp    dl,cl
  408cc4:	imul   ebp
  408cc6:	jecxz  0x408cb2
  408cc8:	data16 data16 jnp 0x408c79
  408ccc:	repz dec eax
  408cce:	inc    ebp
  408ccf:	pop    esp
  408cd0:	xchg   ebp,eax
  408cd1:	out    0x4b,al
  408cd3:	pop    ss
  408cd4:	jmp    0x408c66
  408cd6:	pop    edx
  408cd7:	aad    0xe
  408cd9:	aam    0x0
  408cdb:	mov    al,al
  408cdd:	icebp  
  408cde:	test   BYTE PTR [ebx-0x6c],bh
  408ce1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ce2:	cld    
  408ce3:	fsubr  st(5),st
  408ce5:	lea    esp,[eax]
  408ce7:	adc    edx,DWORD PTR [edi-0x7a]
  408cea:	(bad)  
  408ceb:	or     esp,DWORD PTR [ecx-0x53]
  408cee:	loope  0x408d37
  408cf0:	retf   
  408cf1:	xchg   ebp,eax
  408cf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408cf3:	push   esi
  408cf4:	rcl    DWORD PTR [edi+edx*4+0x661576e7],1
  408cfb:	lds    ecx,FWORD PTR [ecx]
  408cfd:	int    0x25
  408cff:	ja     0x408cb1
  408d01:	mov    ebp,0xc51b87c4
  408d06:	cmp    esp,DWORD PTR [edx+0x3a3ee3b0]
  408d0c:	and    BYTE PTR [eax-0xe3768be],bl
  408d12:	pop    edx
  408d13:	cmp    DWORD PTR [ebp+eax*4+0xc883291],edi
  408d1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d1b:	pop    ss
  408d1c:	sti    
  408d1d:	icebp  
  408d1e:	jle    0x408d35
  408d20:	push   eax
  408d21:	mov    DWORD PTR [ebp+0x37],edx
  408d24:	fcmovne st,st(7)
  408d26:	in     eax,dx
  408d27:	ins    DWORD PTR es:[edi],dx
  408d28:	mov    ah,0x2
  408d2a:	in     al,dx
  408d2b:	fisubr WORD PTR [esi+0x3601aa93]
  408d31:	push   esi
  408d32:	add    ah,bl
  408d34:	stos   BYTE PTR es:[edi],al
  408d35:	push   0x90d72ffd
  408d3a:	bound  esi,QWORD PTR [edi-0x2]
  408d3d:	adc    edx,DWORD PTR [ebx-0x4e991ff6]
  408d43:	cli    
  408d44:	and    al,0x31
  408d46:	out    dx,eax
  408d47:	dec    edi
  408d48:	dec    esp
  408d49:	test   al,0x2
  408d4b:	fidiv  WORD PTR [eax+0x4e]
  408d4e:	mov    al,ds:0x4f3b0708
  408d53:	fdiv   QWORD PTR [ecx+0x25bcd069]
  408d59:	push   ecx
  408d5a:	std    
  408d5b:	push   ebp
  408d5c:	and    al,0x21
  408d5e:	jg     0x408d93
  408d60:	mov    cl,0x87
  408d62:	dec    eax
  408d63:	repnz inc edi
  408d65:	scas   al,BYTE PTR es:[edi]
  408d66:	jmp    0xb2d828d4
  408d6b:	and    al,0xfa
  408d6d:	sub    al,0x0
  408d6f:	cmp    eax,0x4c04f6fe
  408d74:	mov    ebp,0x8809c8
  408d79:	jecxz  0x408dbf
  408d7b:	inc    edx
  408d7c:	retf   
  408d7d:	sub    al,0xe3
  408d7f:	dec    esi
  408d80:	in     eax,0x39
  408d82:	(bad)  
  408d83:	pop    edx
  408d84:	adc    BYTE PTR [ebx],cl
  408d86:	mov    ah,0xb
  408d88:	mov    edx,0x1715b294
  408d8d:	jmp    0x70a0d4de
  408d92:	xchg   esp,eax
  408d93:	rcr    DWORD PTR [ebx+ebp*2],1
  408d96:	push   ds
  408d97:	bound  esi,QWORD PTR [edx+eax*1+0x50]
  408d9b:	pop    ebp
  408d9c:	sbb    dl,BYTE PTR [edx+0x56]
  408d9f:	ficomp DWORD PTR [eax]
  408da1:	fnstenv [esi]
  408da3:	out    dx,al
  408da4:	in     al,dx
  408da5:	retf   
  408da6:	cmp    DWORD PTR [edx-0x5c93517b],0xd9d48496
  408db0:	ficom  WORD PTR [ebx]
  408db2:	nop
  408db3:	ret    
  408db4:	adc    al,bh
  408db6:	xchg   edx,eax
  408db7:	fdivrp st(0),st
  408db9:	outs   dx,BYTE PTR ds:[esi]
  408dba:	clc    
  408dbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408dbc:	shrd   DWORD PTR [ebp+0x6d],ecx,0x41
  408dc1:	or     eax,0x5a91a4ef
  408dc6:	xor    BYTE PTR [ecx+0x42892dfb],dh
  408dcc:	int    0x79
  408dce:	pop    edi
  408dcf:	xchg   edi,eax
  408dd0:	adc    edi,eax
  408dd2:	cmp    al,0xc1
  408dd4:	mov    bl,BYTE PTR [edx]
  408dd6:	mov    esi,0xe7e3782d
  408ddb:	mov    ?,esi
  408ddd:	call   0x9b2ec6ca
  408de2:	(bad)  
  408de4:	jno    0x408e3c
  408de6:	ja     0x408e4b
  408de8:	(bad)  [esi]
  408dea:	mov    edi,0xb90ce22b
  408def:	and    al,0xbb
  408df1:	adc    BYTE PTR [esi+0x6a3bbe92],0xcd
  408df8:	xor    DWORD PTR [esi-0x14],0x4edc1838
  408dff:	cwde   
  408e00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e01:	in     eax,0xee
  408e03:	aaa    
  408e04:	(bad)  
  408e05:	int3   
  408e06:	xor    al,0x14
  408e08:	lea    eax,[edx-0x6b]
  408e0b:	das    
  408e0c:	xor    al,BYTE PTR [esi]
  408e0e:	lahf   
  408e0f:	test   eax,0x4033f385
  408e14:	or     DWORD PTR [ecx+eax*4],edx
  408e17:	std    
  408e18:	es push ds
  408e1a:	mov    dh,0xcb
  408e1c:	test   al,0x92
  408e1e:	pop    ebx
  408e1f:	adc    eax,ecx
  408e21:	add    esi,DWORD PTR [edx+0x4e]
  408e24:	aas    
  408e25:	and    BYTE PTR [ebx-0x6b],ah
  408e28:	push   edx
  408e29:	xchg   ebx,eax
  408e2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e2b:	mov    eax,0xb9762094
  408e30:	and    eax,DWORD PTR [ebp+0x65505c10]
  408e36:	xor    DWORD PTR [ebp+0x3e],ebp
  408e39:	cmp    eax,0xbcca64e4
  408e3e:	sbb    BYTE PTR [eax+0x75],dl
  408e41:	xchg   ebp,eax
  408e42:	pop    es
  408e43:	gs test al,0x10
  408e46:	lds    esp,FWORD PTR [ecx+0x5d]
  408e49:	push   0xffffff89
  408e4b:	sub    al,0x7d
  408e4d:	call   0x886312ba
  408e52:	sub    eax,ebp
  408e54:	loope  0x408ec3
  408e56:	das    
  408e57:	xor    ah,BYTE PTR ss:[esi+0x1]
  408e5b:	jl     0x408ea3
  408e5d:	jno    0x408e9b
  408e5f:	or     al,0x72
  408e61:	mov    WORD PTR ds:0x4caec086,?
  408e67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e68:	push   es
  408e69:	loopne 0x408e89
  408e6b:	or     BYTE PTR ds:0xb366f468,0xd7
  408e72:	outs   dx,BYTE PTR ds:[esi]
  408e73:	mov    dl,0xec
  408e75:	repnz sub ah,0x38
  408e79:	aam    0x90
  408e7b:	sets   BYTE PTR [ecx+0x60]
  408e7f:	pop    ebx
  408e80:	add    al,0x64
  408e82:	jmp    0x20540d86
  408e87:	lds    eax,FWORD PTR [ebx+ebx*8]
  408e8a:	loopne 0x408ea7
  408e8c:	cdq    
  408e8d:	xlat   BYTE PTR ds:[ebx]
  408e8e:	adc    DWORD PTR [edi+0x7f],eax
  408e91:	fdivrp st(4),st
  408e93:	test   eax,0x69e2e578
  408e98:	outs   dx,BYTE PTR ds:[esi]
  408e99:	cmp    al,0x64
  408e9b:	sbb    DWORD PTR [ecx+eax*2+0x79],0xffffff97
  408ea0:	xor    DWORD PTR [edx],ebx
  408ea2:	xor    bh,BYTE PTR [esi-0x65cd7ec3]
  408ea8:	icebp  
  408ea9:	jbe    0x408f0e
  408eab:	and    ah,BYTE PTR [ebp-0x31e7a5a3]
  408eb1:	cmp    cl,ch
  408eb3:	call   0x8407:0xb2d2e3a6
  408eba:	imul   eax,DWORD PTR [ebp+0x1f],0x4b
  408ebe:	out    dx,al
  408ebf:	mov    esp,DWORD PTR [eax-0x17]
  408ec2:	cmp    DWORD PTR [edi],ecx
  408ec4:	add    eax,0xce825b18
  408ec9:	into   
  408eca:	imul   esp,DWORD PTR [edx+0x40dfa6ae],0x68
  408ed1:	shr    ebp,0x91
  408ed4:	mov    ds:0xd119da07,eax
  408ed9:	sahf   
  408eda:	inc    esi
  408edb:	loope  0x408f4a
  408edd:	push   edi
  408ede:	std    
  408edf:	sbb    al,0xeb
  408ee1:	sub    esi,ebp
  408ee3:	inc    eax
  408ee4:	sub    DWORD PTR [ecx-0x1b],edi
  408ee7:	test   DWORD PTR [eax+0x80be14e],0x64b93bb9
  408ef1:	inc    edi
  408ef2:	into   
  408ef3:	or     al,0x4c
  408ef5:	add    BYTE PTR [esi+0x9a83be7],dh
  408efb:	(bad)  
  408efc:	sub    BYTE PTR [ecx-0x3e],ah
  408eff:	in     eax,dx
  408f00:	test   al,0x35
  408f02:	test   eax,0x4f90ae59
  408f07:	pop    esi
  408f08:	leave  
  408f09:	sar    BYTE PTR [edi+esi*4],cl
  408f0c:	cmp    DWORD PTR [eax+0x15],edx
  408f0f:	addr16 dec ebp
  408f11:	(bad)  
  408f13:	ret    
  408f14:	dec    esp
  408f15:	and    eax,0x76f7a4d7
  408f1a:	mov    bl,0xe1
  408f1c:	add    esp,esi
  408f1e:	(bad)
  408f22:	adc    DWORD PTR [esi],ecx
  408f24:	mov    edi,0xd77aa290
  408f29:	sub    eax,DWORD PTR [eax-0x6f1d880d]
  408f2f:	xchg   DWORD PTR [edx+eiz*8],ebp
  408f32:	lds    eax,FWORD PTR [edx-0x35]
  408f35:	out    0xb,al
  408f37:	popf   
  408f38:	adc    al,0x4e
  408f3a:	inc    edx
  408f3b:	jbe    0x408f50
  408f3d:	bound  ebx,QWORD PTR [edi-0x2336ade0]
  408f43:	icebp  
  408f44:	xchg   ebx,eax
  408f45:	jno    0x408f8d
  408f47:	rcl    DWORD PTR [edx],1
  408f49:	loopne 0x408ee0
  408f4b:	pop    esi
  408f4c:	jmp    0x408f6d
  408f4e:	mov    ebp,0xd3752f10
  408f53:	push   ecx
  408f54:	js     0x408f82
  408f56:	xor    eax,0x69d80ae3
  408f5b:	in     eax,0xd0
  408f5d:	cmp    dl,0x38
  408f60:	aaa    
  408f61:	fwait
  408f62:	or     al,al
  408f64:	scas   al,BYTE PTR es:[edi]
  408f65:	lods   eax,DWORD PTR ds:[esi]
  408f66:	xchg   esi,ebx
  408f68:	xchg   edx,eax
  408f69:	and    cl,BYTE PTR [ecx-0x7144f346]
  408f6f:	cmp    al,BYTE PTR [edx+0x7a896aa1]
  408f75:	lahf   
  408f76:	aam    0xcf
  408f78:	adc    al,0x15
  408f7a:	push   es
  408f7b:	push   eax
  408f7c:	add    ebp,DWORD PTR [eax]
  408f7e:	add    edx,DWORD PTR [ecx]
  408f80:	or     edx,ecx
  408f82:	ret    
  408f83:	mov    esi,0xf6f89d4b
  408f88:	push   ebx
  408f89:	mov    ecx,0x60f6e886
  408f8e:	pushw  ss
  408f90:	push   cs
  408f91:	push   cs
  408f92:	jmp    0x56ec:0x4a6d91f5
  408f99:	add    bh,BYTE PTR [esi+0x618d6b84]
  408f9f:	or     eax,0xe9533cff
  408fa4:	and    dl,BYTE PTR [esi]
  408fa6:	aaa    
  408fa7:	cwde   
  408fa8:	and    al,0xd3
  408faa:	inc    edi
  408fab:	dec    ecx
  408fac:	push   edx
  408fad:	rol    al,cl
  408faf:	push   cs
  408fb0:	add    eax,0x525ed8cc
  408fb5:	jnp    0x40900d
  408fb7:	mov    ecx,0xad1120c
  408fbc:	test   BYTE PTR [edi],0x5b
  408fbf:	cs ins BYTE PTR es:[edi],dx
  408fc1:	(bad)  
  408fc2:	pop    ss
  408fc3:	mov    esp,0x5958d239
  408fc8:	mov    ebx,esi
  408fca:	xor    ebp,DWORD PTR [esi+0x6e05f687]
  408fd0:	mov    ebx,0x5d961a62
  408fd5:	out    dx,eax
  408fd6:	add    al,0xb9
  408fd8:	pusha  
  408fd9:	aas    
  408fda:	ror    DWORD PTR [eax],1
  408fdc:	sbb    eax,DWORD PTR [edx]
  408fde:	and    dh,dl
  408fe0:	mov    esp,0x15387fab
  408fe5:	ins    DWORD PTR es:[edi],dx
  408fe6:	mov    esp,0xaf19f5d
  408feb:	jge    0x408fb9
  408fed:	ds pop edx
  408fef:	ds push ss
  408ff1:	push   0xffffff9c
  408ff3:	xchg   ebp,eax
  408ff4:	push   cs
  408ff5:	aaa    
  408ff6:	pop    DWORD PTR [esi]
  408ff8:	push   ebx
  408ff9:	(bad)  
  408ffb:	inc    esi
  408ffc:	pop    ebx
  408ffd:	scas   al,BYTE PTR es:[edi]
  408ffe:	or     edi,DWORD PTR [ecx+0x55d88732]
  409004:	test   al,0x3b
  409006:	test   esi,esp
  409008:	jae    0x408f9d
  40900a:	in     al,0x4f
  40900c:	neg    BYTE PTR [ecx-0x2a]
  40900f:	jmp    0x409060
  409011:	fidivr DWORD PTR [ecx]
  409013:	test   al,0x5c
  409015:	lods   eax,DWORD PTR ds:[esi]
  409016:	cmp    eax,0x77e8bb14
  40901b:	stos   DWORD PTR es:[edi],eax
  40901c:	jns    0x409067
  40901e:	jmp    0x8f66:0x4b144cc0
  409025:	imul   ebp,DWORD PTR [eax+0x475ef1ae],0xfffffff2
  40902c:	mov    ch,0x44
  40902e:	cmp    ebx,DWORD PTR [esi]
  409030:	xchg   esp,eax
  409031:	mov    eax,ds:0x29d74662
  409036:	jb     0x408fe5
  409038:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409039:	pop    edx
  40903a:	imul   ebp,DWORD PTR [edx-0x56],0xffffff96
  40903e:	ret    0xd39d
  409041:	xor    ebx,edx
  409043:	int    0x52
  409045:	inc    esp
  409046:	div    BYTE PTR [edx+0x7fbc1c54]
  40904c:	lahf   
  40904d:	popf   
  40904e:	fwait
  40904f:	scas   al,BYTE PTR es:[edi]
  409050:	(bad)  
  409051:	cli    
  409052:	arpl   WORD PTR [ebx],ax
  409054:	cmp    cl,BYTE PTR [esp+eax*1+0x4a]
  409058:	push   ss
  409059:	je     0x40903d
  40905b:	mov    ?,eax
  40905d:	(bad)  
  40905f:	in     al,0x9f
  409061:	push   0xfffffff1
  409063:	jae    0x40902f
  409065:	xchg   ecx,ecx
  409067:	dec    ebx
  409068:	mov    eax,0xf2f7d7ef
  40906d:	enter  0x6fbd,0xdb
  409071:	les    ebp,FWORD PTR [edi]
  409073:	pop    ebx
  409074:	add    al,BYTE PTR [ebp+0xf]
  409077:	stc    
  409078:	hlt    
  409079:	out    dx,al
  40907a:	test   al,0x10
  40907c:	or     eax,esi
  40907e:	add    al,0xc
  409080:	inc    ecx
  409081:	xor    DWORD PTR [esi-0x6ae81a01],ebp
  409087:	pop    edi
  409088:	jmp    0xc0c2:0xf8cb743b
  40908f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409090:	add    eax,DWORD PTR [edi+ebx*1]
  409093:	cmp    al,0xa4
  409095:	fld    TBYTE PTR [ebp-0x52]
  409098:	push   0xa206fbdc
  40909d:	daa    
  40909e:	mov    esp,DWORD PTR ds:0x9e7ebaa0
  4090a4:	jo     0x409044
  4090a6:	imul   ebp,DWORD PTR [edi-0x69],0xb5b81c18
  4090ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090ae:	push   ds
  4090af:	push   eax
  4090b0:	dec    esi
  4090b1:	fisttp DWORD PTR [ecx-0xe2da35f]
  4090b7:	cld    
  4090b8:	nop
  4090b9:	stc    
  4090ba:	aas    
  4090bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090bc:	push   0x33a6ac5b
  4090c1:	repz and bh,dh
  4090c4:	pop    esi
  4090c5:	pushf  
  4090c6:	push   ds
  4090c7:	add    DWORD PTR [esi+0x118e8648],ecx
  4090cd:	pop    ss
  4090ce:	mov    WORD PTR [edi],gs
  4090d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090d1:	pop    esi
  4090d2:	ret    
  4090d3:	repz jmp 0x47a3727
  4090d9:	mov    ebp,DWORD PTR [esi+0xc]
  4090dc:	cmp    DWORD PTR [edi*8+0x79f9bde7],edi
  4090e3:	xlat   BYTE PTR ds:[ebx]
  4090e4:	adc    BYTE PTR [esi-0x5362579],bh
  4090ea:	nop
  4090eb:	xor    al,0x22
  4090ed:	jnp    0x40915d
  4090ef:	in     al,0xd3
  4090f1:	fcomp  QWORD PTR ds:[ecx+0x67658cac]
  4090f8:	pop    ss
  4090f9:	jbe    0x409158
  4090fb:	leave  
  4090fc:	or     DWORD PTR [edi],esp
  4090fe:	pushf  
  4090ff:	inc    edi
  409100:	jo     0x409150
  409102:	and    eax,0xb5447853
  409107:	scas   eax,DWORD PTR es:[edi]
  409108:	pop    esp
  409109:	(bad)  
  40910b:	xor    eax,0x8f08a20a
  409110:	pop    ebx
  409111:	enter  0xcf68,0x55
  409115:	xchg   ecx,eax
  409116:	jno    0x40909d
  409118:	in     al,dx
  409119:	sbb    eax,0x118bb47d
  40911e:	add    eax,0xf96a08eb
  409123:	xchg   BYTE PTR [ecx+0x1bb377bc],bl
  409129:	bound  esi,QWORD PTR [eax-0x62]
  40912c:	int    0x2d
  40912e:	js     0x4090ca
  409130:	jbe    0x409128
  409132:	addr16 pop edi
  409134:	out    0x6a,eax
  409136:	aad    0x16
  409138:	scas   al,BYTE PTR es:[edi]
  409139:	cmp    ebp,DWORD PTR [ebx+edx*2]
  40913c:	xor    al,BYTE PTR [bx]
  40913f:	xor    bl,BYTE PTR [esi]
  409141:	pop    esp
  409142:	out    0xe3,eax
  409144:	and    DWORD PTR [ebp-0x24],ebp
  409147:	jne    0x4090e1
  409149:	adc    eax,0x1e842e42
  40914e:	pop    edx
  40914f:	dec    ebx
  409150:	mov    al,ds:0xd9ac7a8
  409155:	test   cl,bh
  409157:	pop    ebx
  409158:	dec    ecx
  409159:	call   0x162c:0xb359412c
  409160:	mov    dh,0x11
  409162:	es sahf 
  409164:	xor    al,0xc8
  409166:	mov    DWORD PTR [esi-0x6],edi
  409169:	fwait
  40916a:	pop    ebp
  40916b:	dec    edi
  40916c:	cmp    BYTE PTR [ebp+edx*4+0x45],ah
  409170:	out    0x96,eax
  409172:	jb     0x409177
  409174:	jg     0x40912c
  409176:	aam    0x66
  409178:	stc    
  409179:	xor    esi,esp
  40917b:	dec    edi
  40917c:	stc    
  40917d:	enter  0x4fc0,0xab
  409181:	push   0x5a6a8bd1
  409186:	pop    es
  409187:	outs   dx,DWORD PTR ds:[esi]
  409188:	mov    esi,0xe3a6e669
  40918d:	mov    ah,0x77
  40918f:	push   0xbd05e9ac
  409194:	mov    edi,?
  409196:	dec    esi
  409197:	pop    ecx
  409198:	loop   0x4091a9
  40919a:	push   ds
  40919b:	push   esi
  40919c:	mov    BYTE PTR [edx+0x2a],dh
  40919f:	ja     0x409162
  4091a1:	addr16 xchg ebx,eax
  4091a3:	(bad)  
  4091a4:	xchg   esi,eax
  4091a5:	xchg   edi,eax
  4091a6:	imul   edi,DWORD PTR [bx+si-0x23],0xade2fda
  4091ae:	cmp    DWORD PTR [eax+0x31],edi
  4091b1:	loopne 0x4091c9
  4091b3:	mov    esi,0x6673decd
  4091b8:	jae    0x409181
  4091ba:	xchg   edx,eax
  4091bb:	fdivr  st,st(6)
  4091bd:	adc    edx,DWORD PTR ds:0x236b9efb
  4091c3:	adc    dh,BYTE PTR [esi]
  4091c5:	sbb    BYTE PTR [ecx+eax*1],0xee
  4091c9:	int    0x6
  4091cb:	int3   
  4091cc:	daa    
  4091cd:	test   eax,0x16c7de06
  4091d2:	xor    esp,DWORD PTR [esi]
  4091d4:	add    BYTE PTR [eax],0x16
  4091d7:	nop
  4091d8:	push   ecx
  4091d9:	push   esi
  4091da:	sub    ah,ch
  4091dc:	gs ss jnp 0x4091f9
  4091e0:	push   ss
  4091e1:	ds pop es
  4091e3:	mov    ebx,0x1689cecc
  4091e8:	xchg   ebp,eax
  4091e9:	mov    ebp,DWORD PTR [ebp+0x3d690f7e]
  4091ef:	les    ecx,FWORD PTR [esi-0x7bd76062]
  4091f5:	loop   0x409209
  4091f7:	ins    BYTE PTR es:[edi],dx
  4091f8:	cli    
  4091f9:	push   0xa5cf28bc
  4091fe:	daa    
  4091ff:	ss mov ebp,0x171ad631
  409205:	ficom  DWORD PTR [esi-0x60a7a72]
  40920b:	imul   eax,DWORD PTR [edi+0x1a],0xcfa01806
  409212:	lds    edi,FWORD PTR [edi+0x75]
  409215:	ja     0x409290
  409217:	and    cl,ch
  409219:	in     eax,0x2a
  40921b:	ins    BYTE PTR es:[edi],dx
  40921c:	adc    DWORD PTR [ecx],0xffffffd1
  40921f:	xor    eax,0x39b02c46
  409224:	push   ebx
  409225:	xchg   ecx,eax
  409226:	mov    ch,0xfd
  409228:	mov    eax,0xdac365ed
  40922d:	and    DWORD PTR ds:0xe8ba084e,ebx
  409233:	dec    edi
  409234:	pop    esp
  409235:	fidiv  DWORD PTR [esi+0x3fcd654e]
  40923b:	loope  0x4091d0
  40923d:	sub    BYTE PTR [eax+edx*8+0x1d],0xe
  409242:	adc    al,0x4c
  409244:	paddw  mm2,QWORD PTR [esi]
  409247:	xor    DWORD PTR [edx+0x3e02c18b],edi
  40924d:	push   ss
  40924e:	call   DWORD PTR [esi+0x54fe6f10]
  409254:	icebp  
  409255:	pop    ebx
  409256:	lock ins BYTE PTR es:[edi],dx
  409258:	pop    esi
  409259:	xor    DWORD PTR [ecx],ebx
  40925b:	js     0x409200
  40925d:	test   eax,edx
  40925f:	jmp    0x40923e
  409261:	leave  
  409262:	push   es
  409263:	int    0xd
  409265:	jne    0x4092b3
  409267:	sbb    edx,edi
  409269:	imul   DWORD PTR [ebp-0x3e3e635c]
  40926f:	mov    esi,esp
  409271:	jb     0x4092d0
  409273:	in     eax,0x1d
  409275:	lds    edi,FWORD PTR ds:0x8597225b
  40927b:	jmp    0x60ce77b2
  409280:	mov    dh,0x31
  409282:	and    BYTE PTR [ebp+0x67],0xe0
  409286:	mul    BYTE PTR [ebx]
  409288:	ror    DWORD PTR [ebx+ebp*1],1
  40928b:	rol    DWORD PTR [ebx],cl
  40928d:	fwait
  40928e:	lea    esi,[ebp+0x36]
  409291:	call   DWORD PTR [edx+0x48]
  409294:	mov    ah,0xf0
  409296:	stos   DWORD PTR es:[edi],eax
  409297:	lods   eax,DWORD PTR ds:[esi]
  409298:	pop    ecx
  409299:	into   
  40929a:	mov    esp,0x4caa8da4
  40929f:	pop    es
  4092a0:	sbb    ah,dh
  4092a2:	mov    ds:0xc26ea53f,al
  4092a7:	jl     0x4092d8
  4092a9:	sbb    DWORD PTR [ebp+0x7f369d3a],ebx
  4092af:	mov    dh,0x2a
  4092b1:	ret    
  4092b2:	jg     0x40932d
  4092b4:	test   eax,0xa8dcb598
  4092b9:	mov    eax,0x8408e602
  4092be:	and    eax,DWORD PTR [eax+ebx*4+0x6c]
  4092c2:	inc    edi
  4092c3:	pop    edx
  4092c4:	sbb    BYTE PTR [edi+0x36ddde64],ch
  4092ca:	rcr    ebx,0x54
  4092cd:	push   0x48
  4092cf:	mov    BYTE PTR [ecx+0x59],dh
  4092d2:	xchg   ebx,eax
  4092d3:	retf   0x832c
  4092d6:	jg     0x40927f
  4092d8:	sbb    DWORD PTR [edi],esi
  4092da:	xchg   edx,eax
  4092db:	push   ds
  4092dc:	inc    esp
  4092dd:	shl    ah,1
  4092df:	int    0x77
  4092e1:	sti    
  4092e2:	push   ds
  4092e3:	fisttp DWORD PTR [esi]
  4092e5:	fdivr  st(1),st
  4092e7:	ret    0x1747
  4092ea:	sub    eax,0x5263b4eb
  4092ef:	iret   
  4092f0:	push   edi
  4092f1:	pop    ss
  4092f2:	inc    ebx
  4092f3:	pop    ds
  4092f4:	push   cs
  4092f5:	xchg   ebp,eax
  4092f6:	fidiv  DWORD PTR [ebx+0x1]
  4092f9:	not    DWORD PTR [ebp-0xa]
  4092fc:	jmp    0x409357
  4092fe:	cmc    
  4092ff:	dec    esi
  409300:	and    bh,BYTE PTR [esi]
  409302:	adc    eax,0x2bb7c531
  409307:	int3   
  409308:	add    ah,BYTE PTR [edi+0x26]
  40930b:	mov    edi,0x35f394d2
  409310:	ja     0x40933f
  409312:	pop    ebp
  409313:	es scas al,BYTE PTR es:[edi]
  409315:	lock loopne 0x40929d
  409318:	es pushf 
  40931a:	fst    st(6)
  40931c:	inc    edi
  40931d:	hlt    
  40931e:	jp     0x4092cd
  409320:	jmp    0x78b9:0x9d73e00b
  409327:	test   al,0x85
  409329:	aad    0x24
  40932b:	fs mov dl,BYTE PTR ss:[ebx-0x49]
  409330:	pop    edi
  409331:	xchg   DWORD PTR [eax+0x31],esp
  409334:	mov    ebp,0x9db8d3b1
  409339:	adc    ebp,DWORD PTR ds:0x9927e4e1
  40933f:	ror    DWORD PTR [edi+0x3a377af1],1
  409345:	nop
  409346:	sub    BYTE PTR [edx-0x7d],0x22
  40934a:	push   esi
  40934b:	repz fcompp 
  40934e:	ds in  eax,dx
  409350:	mov    esi,0x7d819192
  409355:	fstp   QWORD PTR [eax+0x1f]
  409358:	int3   
  409359:	lds    esp,FWORD PTR [eax+edi*2+0x67]
  40935d:	dec    ecx
  40935e:	push   0x6c
  409360:	push   esi
  409361:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409362:	addr16 jle 0x4093cb
  409365:	add    DWORD PTR [eax],esi
  409367:	push   ebx
  409368:	into   
  409369:	jmp    0x40931c
  40936b:	and    dl,BYTE PTR [eax-0x43eae1de]
  409371:	dec    eax
  409372:	and    ebx,edx
  409374:	mov    eax,0x419a56e6
  409379:	mov    cl,0xed
  40937b:	push   ss
  40937c:	pop    esi
  40937d:	sbb    ebx,DWORD PTR [edi+0x2]
  409380:	mov    eax,ds:0xaf53cd45
  409385:	or     bh,bl
  409387:	mov    cl,0xcb
  409389:	out    dx,eax
  40938a:	inc    ebp
  40938b:	imul   ebx,DWORD PTR [ecx-0x60],0x6e
  40938f:	jb     0x8b47b219
  409395:	and    ch,ah
  409397:	push   ss
  409398:	inc    eax
  409399:	dec    eax
  40939a:	add    ax,0x46b2
  40939e:	daa    
  40939f:	xor    edi,edx
  4093a1:	mov    ds:0x28dce994,eax
  4093a6:	sub    esp,0xffffffb4
  4093a9:	or     eax,0x467c9f77
  4093ae:	imul   edx,DWORD PTR [esi+0x48],0x23
  4093b2:	xchg   ecx,eax
  4093b3:	jecxz  0x409380
  4093b5:	out    0x5a,al
  4093b7:	stos   DWORD PTR es:[edi],eax
  4093b8:	out    dx,al
  4093b9:	or     al,0xc
  4093bb:	add    DWORD PTR [edx-0x5ffb5b2e],esp
  4093c1:	inc    esp
  4093c2:	jno    0x409409
  4093c4:	mov    eax,DWORD PTR [eax]
  4093c6:	outs   dx,DWORD PTR ds:[esi]
  4093c7:	sbb    eax,0x6b818f92
  4093cc:	push   ebp
  4093cd:	call   0x6c3b:0xe9b52716
  4093d4:	mov    al,ds:0x9be59b8a
  4093d9:	mov    eax,ds:0xcea9bf1a
  4093de:	xor    ah,al
  4093e0:	popa   
  4093e1:	iret   
  4093e2:	leave  
  4093e3:	mov    BYTE PTR [esi],al
  4093e5:	popa   
  4093e6:	xchg   ebx,eax
  4093e7:	jnp    0x4093d1
  4093e9:	adc    ebx,ecx
  4093eb:	ins    BYTE PTR es:[edi],dx
  4093ec:	pop    ds
  4093ed:	retf   0xeb4e
  4093f0:	ror    BYTE PTR [esi],1
  4093f2:	sbb    BYTE PTR [ebp+0x6e],0xbe
  4093f6:	imul   ecx,DWORD PTR [ebp-0x47],0xfffffff8
  4093fa:	test   BYTE PTR [ebx-0x74],bl
  4093fd:	sub    dh,BYTE PTR [edx-0xe]
  409400:	cmp    al,0xa1
  409402:	es hlt 
  409404:	stos   DWORD PTR es:[edi],eax
  409405:	cwde   
  409406:	pop    edi
  409407:	dec    ecx
  409408:	pop    ds
  409409:	cmp    eax,0x8b6e2041
  40940e:	es cs je 0x4093a5
  409412:	adc    eax,0xd2284f86
  409417:	popf   
  409418:	jns    0x4093ea
  40941a:	dec    ebp
  40941b:	fistp  DWORD PTR [ecx-0x62e33bf3]
  409421:	popa   
  409422:	pop    esp
  409423:	push   esi
  409424:	push   esi
  409425:	inc    ebp
  409426:	mov    dh,0x17
  409428:	inc    ebp
  409429:	lahf   
  40942a:	mov    eax,0xdf241e85
  40942f:	cmp    DWORD PTR [ecx+edx*2-0x1e],ebp
  409433:	mov    esp,0xb801a8e5
  409438:	inc    ebp
  409439:	lea    eax,fs:[edx]
  40943c:	es add eax,0xa6933802
  409442:	ds push cs
  409444:	sbb    bl,BYTE PTR [ebx]
  409446:	or     al,0x8
  409448:	jno    0x4094c1
  40944a:	sbb    al,BYTE PTR [eax]
  40944c:	jne    0x409406
  40944e:	jp     0x4093e3
  409450:	rcl    BYTE PTR [eax-0x2f8d1e69],0x74
  409457:	js     0x409423
  409459:	cli    
  40945a:	test   al,0x38
  40945c:	push   ebp
  40945d:	mov    dh,0x82
  40945f:	sbb    al,0xfe
  409461:	(bad)  
  409462:	das    
  409463:	and    BYTE PTR [ecx],cl
  409465:	add    BYTE PTR [edi+0x1f],0xc9
  409469:	dec    eax
  40946a:	outs   dx,DWORD PTR ds:[esi]
  40946b:	pop    ds
  40946c:	xor    edi,DWORD PTR [edi]
  40946e:	pop    edi
  40946f:	xchg   ecx,eax
  409470:	lea    esi,[ebx+0x29]
  409473:	imul   esi,DWORD PTR [edi],0xa805d270
  409479:	rcl    edi,0x91
  40947c:	sbb    ebp,DWORD PTR [eax-0x12246054]
  409482:	sub    dh,bh
  409484:	(bad)  
  409485:	hlt    
  409486:	fsub   DWORD PTR ds:0xb34a7d12
  40948c:	push   ebx
  40948d:	push   ebp
  40948e:	iret   
  40948f:	sbb    dh,dh
  409491:	xchg   esi,eax
  409492:	mov    bl,0x55
  409494:	int    0xf0
  409496:	xchg   ebp,eax
  409497:	jnp    0x40943f
  409499:	add    DWORD PTR [edi+0x78],0x6888a112
  4094a0:	imul   ebp,DWORD PTR [edx+eax*8+0x7d6c4650],0x42
  4094a8:	pop    esp
  4094a9:	and    eax,0xc678f6c6
  4094ae:	lods   al,BYTE PTR ds:[esi]
  4094af:	into   
  4094b0:	call   0x664f:0x420ed987
  4094b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4094b8:	(bad)  
  4094b9:	(bad)  
  4094ba:	cwde   
  4094bb:	push   edx
  4094bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094bd:	pop    edx
  4094be:	scas   eax,DWORD PTR es:[edi]
  4094bf:	sub    DWORD PTR [edi-0x1a],edi
  4094c2:	mov    ah,0x8d
  4094c4:	or     bl,cl
  4094c6:	dec    ecx
  4094c7:	and    al,0x84
  4094c9:	sbb    eax,0xd65471d8
  4094ce:	mov    esi,DWORD PTR [ebp+0x1d]
  4094d1:	pop    es
  4094d2:	gs jo  0x409494
  4094d5:	les    edx,FWORD PTR [eax-0x27]
  4094d8:	scas   al,BYTE PTR es:[edi]
  4094d9:	mov    edx,0x540a5a85
  4094de:	pusha  
  4094df:	sti    
  4094e0:	xchg   DWORD PTR [eax-0x69c27d73],eax
  4094e6:	je     0x409521
  4094e8:	push   esp
  4094e9:	es jns 0x40952b
  4094ec:	fs mov bl,0xac
  4094ef:	imul   ebx,DWORD PTR [edi+ebp*4-0x22ce3213],0x13
  4094f7:	and    BYTE PTR [edi+eax*4],ah
  4094fa:	and    al,0xb0
  4094fc:	out    0x27,eax
  4094fe:	(bad)  
  4094ff:	lock mov ebp,0xc11a02ff
  409505:	push   ecx
  409506:	imul   ebp,DWORD PTR [ebp-0x2b],0xffffffbb
  40950a:	pop    edi
  40950b:	jge    0x409569
  40950d:	out    0x20,al
  40950f:	fwait
  409510:	mov    ebp,0x4f4bda74
  409515:	fsub   QWORD PTR [esi-0x50c6051c]
  40951b:	dec    esi
  40951c:	adc    edx,ebp
  40951e:	sbb    BYTE PTR [ebp+0x41103477],dl
  409524:	dec    ebp
  409525:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409526:	and    al,0xda
  409528:	xor    esp,esp
  40952a:	adc    ebx,eax
  40952c:	cmp    BYTE PTR [esi-0x7796e889],ch
  409532:	push   esi
  409533:	push   edx
  409534:	pusha  
  409535:	cmp    bl,BYTE PTR [esi+0x4a]
  409538:	pop    es
  409539:	call   0x462749de
  40953e:	pop    edx
  40953f:	je     0x40950d
  409541:	or     edx,DWORD PTR [edx]
  409543:	dec    esi
  409544:	int3   
  409545:	cmp    eax,DWORD PTR [eax-0x3d7ca2]
  40954b:	inc    eax
  40954c:	ret    
  40954d:	mov    eax,ds:0x625ae13f
  409552:	retf   0x2586
  409555:	imul   edi,DWORD PTR [edi+0x22c8b1a2],0x88f903f3
  40955f:	mov    ebx,0xfed242d3
  409564:	das    
  409565:	jle    0x4095bc
  409567:	xor    DWORD PTR [esi-0x35fcf72b],ebp
  40956d:	cmp    al,0xa8
  40956f:	mov    dl,0x58
  409571:	loop   0x409570
  409573:	(bad)  
  409574:	jmp    0x364d4235
  409579:	stos   BYTE PTR es:[edi],al
  40957a:	or     al,0x76
  40957c:	fsubp  st(1),st
  40957e:	pop    eax
  40957f:	dec    ebp
  409580:	fmulp  st(4),st
  409582:	iret   
  409583:	movsx  eax,BYTE PTR ds:0x70011e43
  40958a:	mov    cl,0xf9
  40958c:	xor    eax,0xcfed5159
  409591:	adc    DWORD PTR [ebx+0xbb521cb],esi
  409597:	jmp    0xb18c:0x19a6c03f
  40959e:	adc    cl,bh
  4095a0:	sar    DWORD PTR [edx],cl
  4095a2:	into   
  4095a3:	out    0x67,al
  4095a5:	adc    eax,0x7d913ab8
  4095aa:	add    al,0x77
  4095ac:	xchg   edi,eax
  4095ad:	aad    0xc7
  4095af:	retf   0x16a7
  4095b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095b3:	xlat   BYTE PTR ds:[ebx]
  4095b4:	stos   DWORD PTR es:[edi],eax
  4095b5:	sar    BYTE PTR [eax-0x6e481102],cl
  4095bb:	lock sbb cl,BYTE PTR [edi+eiz*1]
  4095bf:	mov    edi,?
  4095c1:	aad    0xdd
  4095c3:	mov    WORD PTR [ebx+0x58304acf],fs
  4095c9:	jnp    0x4095c1
  4095cb:	or     eax,0xf002a27a
  4095d0:	pop    edx
  4095d1:	push   edx
  4095d2:	jo     0x4095e2
  4095d4:	jecxz  0x409654
  4095d6:	ja     0x40956c
  4095d8:	pop    ecx
  4095d9:	es jp  0x4095c8
  4095dc:	aaa    
  4095dd:	adc    eax,0x798f4316
  4095e2:	push   cs
  4095e3:	jne    0x40965b
  4095e5:	stos   BYTE PTR es:[edi],al
  4095e6:	(bad)  
  4095e7:	int    0xc3
  4095e9:	push   esi
  4095ea:	arpl   si,bp
  4095ec:	lods   eax,DWORD PTR ds:[esi]
  4095ed:	xchg   edi,eax
  4095ee:	fisttp DWORD PTR [ebx+0x7744f77a]
  4095f4:	dec    ebp
  4095f5:	add    eax,edx
  4095f7:	xchg   esi,eax
  4095f8:	mov    BYTE PTR [ecx],al
  4095fa:	(bad)  
  4095fb:	addr16 aaa 
  4095fd:	out    0x8f,al
  4095ff:	pop    es
  409600:	into   
  409601:	jb     0x4095a0
  409603:	add    bh,BYTE PTR [ebx-0x12540897]
  409609:	lea    edx,[ebp-0x1d]
  40960c:	sub    ebp,esi
  40960e:	fstp   QWORD PTR [esi-0x61]
  409611:	ins    BYTE PTR es:[edi],dx
  409612:	mov    ebp,0x95f3a339
  409617:	or     DWORD PTR [ecx-0x56],0xffffffde
  40961b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40961c:	jo     0x40962e
  40961e:	int3   
  40961f:	call   0x642245aa
  409624:	adc    BYTE PTR [esi-0x1f],dh
  409627:	jno    0x40968a
  409629:	mov    eax,ds:0x5d6c5f46
  40962e:	aam    0xf1
  409630:	sub    al,0x57
  409632:	inc    esi
  409633:	repz sti 
  409635:	mov    dl,0xe2
  409637:	jno    0x40960e
  409639:	out    0x96,eax
  40963b:	sbb    dl,0x34
  40963e:	and    bh,BYTE PTR [esi]
  409640:	fwait
  409641:	out    0x9a,eax
  409643:	fld    TBYTE PTR [edx-0x55]
  409646:	sub    al,0x3e
  409648:	pushf  
  409649:	add    DWORD PTR [ecx+0x62272921],ecx
  40964f:	inc    ebp
  409650:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  409652:	mov    al,ds:0xbaba16db
  409657:	mov    cl,0xa7
  409659:	adc    eax,0x7390fdc1
  40965e:	ficom  DWORD PTR [ebx+esi*8]
  409661:	push   ebp
  409662:	or     al,0x2b
  409664:	or     BYTE PTR [edi+0x436219f],ah
  40966a:	das    
  40966b:	lahf   
  40966c:	fisubr WORD PTR [edx-0x60]
  40966f:	pop    esi
  409670:	ret    0xcad4
  409673:	out    dx,al
  409674:	fs xchg edi,eax
  409676:	jg     0x409665
  409678:	sub    BYTE PTR [esi-0x70684ad3],bl
  40967e:	int3   
  40967f:	call   0x1c0d:0xc86d33e8
  409686:	inc    eax
  409687:	sub    BYTE PTR [edx-0x6f],cl
  40968a:	push   ds
  40968b:	and    DWORD PTR [esi],eax
  40968d:	push   0x127fbd81
  409692:	cmp    DWORD PTR [eax],edx
  409694:	in     al,dx
  409695:	addr16 dec ebp
  409697:	push   esi
  409698:	jmp    0x2c86a6c6
  40969d:	or     edx,DWORD PTR [edi-0x7a]
  4096a0:	and    bl,dl
  4096a2:	sbb    eax,DWORD PTR [eax-0x12]
  4096a5:	ins    BYTE PTR es:[edi],dx
  4096a6:	rcr    BYTE PTR [ebp+ebp*4-0x59],0xa7
  4096ab:	xchg   esp,eax
  4096ac:	inc    ebp
  4096ad:	push   ebx
  4096ae:	loope  0x40966a
  4096b0:	jp     0x40968c
  4096b2:	retf   0x26ef
  4096b5:	mov    ds:0x4937b408,eax
  4096ba:	int3   
  4096bb:	xor    DWORD PTR [edi],0x589b2758
  4096c1:	cmp    al,0x35
  4096c3:	cmc    
  4096c4:	cmp    ebx,DWORD PTR [ebx-0x64689ea3]
  4096ca:	pop    edi
  4096cb:	jmp    0xf38e:0x185c1e35
  4096d2:	(bad)  
  4096d3:	fdiv   QWORD PTR [eax]
  4096d5:	push   es
  4096d6:	imul   esi,DWORD PTR [si-0x4789],0xc31b8649
  4096df:	addr16 (bad) 
  4096e1:	jmp    0x409682
  4096e3:	bound  ebp,QWORD PTR [eax+0x3]
  4096e6:	jns    0x409742
  4096e8:	xor    BYTE PTR [edx],ch
  4096ea:	adc    ecx,0x58
  4096ed:	fwait
  4096ee:	mov    ecx,0xed4c60b3
  4096f3:	and    edi,DWORD PTR [edx-0x5277e1e1]
  4096f9:	or     ch,BYTE PTR ds:0xc59fc70b
  4096ff:	call   0xef33:0x3597e338
  409706:	(bad)  
  409707:	out    dx,eax
  409708:	sub    eax,0x2c5f3f39
  40970d:	dec    edi
  40970e:	mov    ecx,edi
  409710:	xchg   DWORD PTR [edi-0xd],ebp
  409713:	out    0xd8,al
  409715:	push   ds
  409716:	ins    BYTE PTR es:[edi],dx
  409717:	aad    0x38
  409719:	aad    0xc5
  40971b:	pop    ebp
  40971c:	push   ecx
  40971d:	mov    edx,0xe14525bc
  409722:	fistp  WORD PTR [eax+0x62]
  409725:	hlt    
  409726:	push   eax
  409727:	mov    BYTE PTR [edi+edx*8+0x481eb30b],bl
  40972e:	jp     0x40971b
  409730:	ins    DWORD PTR es:[edi],dx
  409731:	mov    ecx,0x614c4024
  409736:	adc    bl,dl
  409738:	pop    ecx
  409739:	jg     0x409784
  40973b:	xchg   esp,eax
  40973c:	fsubr  DWORD PTR [esi+0x2b]
  40973f:	dec    edx
  409740:	jl     0x409733
  409742:	add    eax,0x8b300dfd
  409747:	push   0xffffffb0
  409749:	jmp    0x409704
  40974b:	or     esp,DWORD PTR [ebp-0x3b00ffc]
  409751:	mov    eax,0x8d7e704
  409756:	test   eax,0x4f86eb9a
  40975b:	adc    al,0x16
  40975d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40975e:	cli    
  40975f:	or     eax,0xb55656c7
  409764:	hlt    
  409765:	enter  0x8ba4,0xfa
  409769:	sub    eax,0x9f4f8ebf
  40976e:	sbb    BYTE PTR [eiz*1-0x14ffbc9d],0xc0
  409776:	not    DWORD PTR [esi+0x3f]
  409779:	xor    BYTE PTR [eax],0xc0
  40977c:	xor    eax,0x77f459bf
  409781:	adc    dh,BYTE PTR [eax]
  409783:	add    bh,ah
  409785:	(bad)  
  409787:	les    edi,FWORD PTR [edx-0x6d]
  40978a:	xlat   BYTE PTR ds:[ebx]
  40978b:	inc    edx
  40978c:	test   DWORD PTR [edx-0x63],0x1ead1c61
  409793:	stc    
  409794:	cs es cli 
  409797:	nop
  409798:	push   ebp
  409799:	mov    bh,0x16
  40979b:	ret    0x7492
  40979e:	(bad)  
  40979f:	mov    edi,0x99a19502
  4097a4:	sahf   
  4097a5:	loopne 0x409821
  4097a7:	leave  
  4097a8:	mov    bl,0x81
  4097aa:	(bad)  
  4097ab:	mov    ebx,0x83b4dd1c
  4097b0:	adc    edi,DWORD PTR [ecx+0x622c7fa2]
  4097b6:	aam    0xf2
  4097b8:	dec    ebp
  4097b9:	hlt    
  4097ba:	ret    0x1241
  4097bd:	in     eax,dx
  4097be:	mov    BYTE PTR [ebp+0x2c331b18],ah
  4097c4:	arpl   WORD PTR [ecx-0x7a],di
  4097c7:	and    DWORD PTR [edx-0x1a887b4b],esi
  4097cd:	nop
  4097ce:	cmp    eax,0x566e52f8
  4097d3:	fbld   TBYTE PTR [edi+esi*4+0x41]
  4097d7:	aam    0x92
  4097d9:	dec    ebx
  4097da:	mov    cl,0xa8
  4097dc:	stos   BYTE PTR es:[edi],al
  4097dd:	jl     0x409769
  4097df:	xor    al,0xca
  4097e1:	mov    bh,0x30
  4097e3:	add    DWORD PTR [ebp*4+0x119f104f],0x1
  4097eb:	cmc    
  4097ec:	pop    ss
  4097ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097ee:	inc    eax
  4097ef:	xchg   DWORD PTR [ebp+0x2b72d3ea],eax
  4097f5:	dec    ebp
  4097f6:	fwait
  4097f7:	mov    bl,0x79
  4097f9:	ret    
  4097fa:	adc    cl,ch
  4097fc:	imul   edi,DWORD PTR [eax-0x531f6fc3],0x9f0b449a
  409806:	(bad)  
  409807:	fmul   st,st(6)
  409809:	(bad)  
  40980b:	loop   0x40985b
  40980d:	inc    ebx
  40980e:	in     eax,0xa8
  409810:	add    BYTE PTR [ebp-0x71],cl
  409813:	arpl   WORD PTR [ebp-0x3a],bx
  409816:	loope  0x4097b9
  409818:	sub    BYTE PTR [edx+0x4cd03562],0x40
  40981f:	test   DWORD PTR [ebx-0x42a7d3d],ebx
  409825:	jae    0x409870
  409827:	or     BYTE PTR [ebp-0x46],ch
  40982a:	push   ecx
  40982b:	enter  0x1dcb,0xcd
  40982f:	imul   ebp,ebx,0x1b
  409832:	push   ds
  409833:	pop    esp
  409834:	pop    es
  409835:	mov    dl,0xca
  409837:	ds in  al,dx
  409839:	sub    al,0xb2
  40983b:	jle    0x40981d
  40983d:	loope  0x409832
  40983f:	test   BYTE PTR [esp+ebp*4-0x17858f8e],bh
  409846:	or     eax,0x933aa7e
  40984b:	test   DWORD PTR es:[ebp+0x40f227f9],ebx
  409852:	jecxz  0x4098a7
  409854:	fild   QWORD PTR [eax+0x3a93d7b0]
  40985a:	aas    
  40985b:	outs   dx,BYTE PTR ds:[esi]
  40985c:	adc    DWORD PTR [ebp+0x57],ebp
  40985f:	icebp  
  409860:	adc    cl,BYTE PTR [ecx]
  409862:	jnp    0x409826
  409864:	jmp    FWORD PTR [esi-0x6800dbf6]
  40986a:	jge    0x40980b
  40986c:	aas    
  40986d:	leave  
  40986e:	nop
  40986f:	ins    BYTE PTR es:[edi],dx
  409870:	pusha  
  409871:	repnz inc ecx
  409873:	xchg   ebx,eax
  409874:	sub    bh,BYTE PTR [ecx+0x4b0e6c60]
  40987a:	jns    0x40983a
  40987c:	pop    ebx
  40987d:	test   bl,dl
  40987f:	pop    eax
  409880:	popf   
  409881:	push   0x3cd39b05
  409886:	es or  eax,0x6fecf38a
  40988c:	sub    edi,ebp
  40988e:	add    DWORD PTR ds:0xdbe3216a,ecx
  409894:	lahf   
  409895:	(bad)  
  409896:	leave  
  409897:	pop    eax
  409898:	push   cs
  409899:	adc    BYTE PTR ds:0x5af46079,dh
  40989f:	inc    edi
  4098a0:	retf   
  4098a1:	clc    
  4098a2:	sub    ebx,DWORD PTR [edx+edi*8-0x39dd42f9]
  4098a9:	mov    eax,0xa69ba1aa
  4098ae:	ror    ch,1
  4098b0:	jle    0x409855
  4098b2:	ror    BYTE PTR [ebx+0x4c],1
  4098b5:	pop    ecx
  4098b6:	mov    eax,ds:0xdb39e437
  4098bb:	sti    
  4098bc:	mov    al,ds:0xe86e54f7
  4098c1:	popa   
  4098c2:	pop    ss
  4098c3:	je     0x4098f6
  4098c5:	shl    ch,0x68
  4098c8:	cli    
  4098c9:	fld    TBYTE PTR [esp+ecx*4]
  4098cc:	jg     0x40986d
  4098ce:	repnz stc 
  4098d0:	clc    
  4098d1:	adc    BYTE PTR [esi+0x7d],dh
  4098d4:	mov    edx,0xc2350be7
  4098d9:	mov    ds,WORD PTR [edi]
  4098db:	mov    edi,0x43c8ee85
  4098e0:	sbb    eax,0x2f489b30
  4098e5:	sahf   
  4098e6:	push   cs
  4098e7:	out    dx,eax
  4098e8:	inc    ecx
  4098e9:	jo     0x4098a4
  4098eb:	(bad)  [ecx]
  4098ed:	bound  eax,QWORD PTR [ecx-0x13]
  4098f0:	(bad)  
  4098f1:	jmp    0xd121:0x54025280
  4098f8:	icebp  
  4098f9:	jb     0x4098b0
  4098fb:	iret   
  4098fc:	sub    dh,0xa0
  4098ff:	outs   dx,DWORD PTR ds:[esi]
  409900:	adc    al,0xb
  409902:	adc    DWORD PTR [ecx+0x1a],edi
  409905:	js     0x409965
  409907:	cld    
  409908:	sbb    BYTE PTR [ebp+0x6d],ah
  40990b:	add    BYTE PTR [eax-0x1dc66820],ah
  409911:	push   0x41
  409913:	cli    
  409914:	sbb    al,0x42
  409916:	sbb    BYTE PTR [edx],0xc2
  409919:	lock (bad) 
  40991b:	int3   
  40991c:	push   esi
  40991d:	pushf  
  40991e:	shl    BYTE PTR [ebx],1
  409920:	push   esp
  409921:	pop    edx
  409922:	jae    0x40990e
  409924:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409925:	sysexit 
  409927:	hlt    
  409928:	sub    ecx,esp
  40992a:	jg     0x409926
  40992c:	mov    ds:0x6e6b635f,eax
  409931:	inc    esi
  409932:	ds jg  0x4099a1
  409935:	add    BYTE PTR [edx],dl
  409937:	and    al,0x5e
  409939:	adc    esp,edi
  40993b:	(bad)  
  40993c:	pop    edi
  40993d:	test   al,0x30
  40993f:	leave  
  409940:	push   cs
  409941:	adc    al,0xeb
  409943:	pop    esi
  409944:	cmp    BYTE PTR [esp+ebp*2-0x22],cl
  409948:	xor    al,0xc4
  40994a:	push   ecx
  40994b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40994c:	push   ecx
  40994d:	stc    
  40994e:	sbb    BYTE PTR [eax],dh
  409950:	sar    esp,0x1c
  409953:	lods   al,BYTE PTR ds:[esi]
  409954:	push   ss
  409955:	aad    0x8a
  409957:	xchg   ebp,eax
  409958:	test   BYTE PTR [esi+0xc],dl
  40995b:	aas    
  40995c:	jmp    0x40994d
  40995e:	xor    al,0x50
  409960:	(bad)  
  409961:	pop    esi
  409962:	push   cs
  409963:	pushf  
  409964:	pop    es
  409965:	nop
  409966:	mov    ds:0xd5ede773,al
  40996c:	sub    bh,cl
  40996e:	xor    ebx,DWORD PTR [esi]
  409970:	mov    bh,dh
  409972:	fld    DWORD PTR [edi]
  409974:	mov    WORD PTR ds:0xec5ead04,ds
  40997a:	pop    es
  40997b:	jle    0x409993
  40997d:	test   eax,0x131c6e34
  409982:	(bad)  
  409983:	stos   DWORD PTR es:[edi],eax
  409984:	cld    
  409985:	cmp    DWORD PTR [eax],edi
  409987:	jge    0x409945
  409989:	push   ss
  40998a:	mov    bh,0x3a
  40998c:	test   al,0x5c
  40998e:	xchg   edx,eax
  40998f:	in     al,0x5e
  409991:	retf   
  409992:	push   ebx
  409993:	iret   
  409994:	mov    ecx,0x79b37ea0
  409999:	rcr    BYTE PTR [edi],1
  40999b:	adc    DWORD PTR [esi],0x5d
  40999e:	stos   BYTE PTR es:[edi],al
  40999f:	mov    ds:0x1b434d4e,eax
  4099a4:	pop    ss
  4099a5:	or     edi,DWORD PTR [ebx-0x57d8a87a]
  4099ab:	sahf   
  4099ac:	push   fs
  4099ae:	jl     0x409946
  4099b0:	sub    BYTE PTR [edx+0x14d3fffe],dl
  4099b6:	or     DWORD PTR [edi-0x19],0xffffffd8
  4099ba:	xor    al,0x62
  4099bc:	push   es
  4099bd:	inc    eax
  4099be:	push   ss
  4099bf:	fsubr  QWORD PTR [ebx]
  4099c1:	xchg   ebp,eax
  4099c2:	add    edx,DWORD PTR [esi+ecx*4+0x4d812c5f]
  4099c9:	inc    ebp
  4099ca:	mov    edi,0xe2ef9d34
  4099cf:	adc    eax,DWORD PTR [ebx+edi*4]
  4099d2:	leave  
  4099d3:	adc    al,0x4e
  4099d6:	loope  0x409962
  4099d8:	jmp    0xed49d114
  4099dd:	fadd   DWORD PTR [eax]
  4099df:	je     0x409a27
  4099e1:	mov    ebx,0x888bdcf7
  4099e6:	es mov al,0x6e
  4099e9:	jnp    0x4099e3
  4099eb:	out    dx,eax
  4099ec:	mov    esi,0x7c617b33
  4099f1:	mov    dl,0xd4
  4099f3:	daa    
  4099f4:	fnsave [edx-0x66]
  4099f7:	xchg   ebx,eax
  4099f8:	push   ds
  4099f9:	pop    ss
  4099fa:	aad    0x6a
  4099fc:	fsub   DWORD PTR [edi+0x7d]
  4099ff:	xor    bl,bl
  409a01:	jae    0x4099fc
  409a03:	or     BYTE PTR [edi],0x1d
  409a06:	mov    ebp,DWORD PTR [ecx+0x6f274ec8]
  409a0c:	sub    DWORD PTR [eax],0xffffffce
  409a0f:	lock test eax,0x9f927e04
  409a15:	dec    esp
  409a16:	in     eax,0xd9
  409a18:	pop    ecx
  409a19:	jecxz  0x4099a6
  409a1b:	or     BYTE PTR [edx],bh
  409a1d:	fistp  QWORD PTR [edi]
  409a1f:	or     edi,ecx
  409a21:	ret    
  409a22:	jns    0x4099f4
  409a24:	clc    
  409a25:	sbb    BYTE PTR [edx-0x70713a95],dl
  409a2b:	and    BYTE PTR [ecx+esi*2-0x785facb4],al
  409a32:	mov    DWORD PTR [eax+0x6aad153e],ebp
  409a38:	mov    eax,0x9ac9fb1a
  409a3d:	and    BYTE PTR [edi-0x2a659e6e],0xd5
  409a44:	jbe    0x409abc
  409a46:	icebp  
  409a47:	retf   
  409a48:	scas   eax,DWORD PTR es:[edi]
  409a49:	cli    
  409a4a:	loope  0x4099ec
  409a4c:	dec    ebx
  409a4d:	ja     0x4099e5
  409a4f:	js     0x4099e9
  409a51:	and    al,0x1f
  409a53:	xchg   BYTE PTR [eax-0x18],bl
  409a56:	lea    ebx,[edx+ebp*1]
  409a59:	cmp    edi,0x630a63b8
  409a5f:	mov    al,ds:0x18a5d18c
  409a64:	pop    ebp
  409a65:	mul    BYTE PTR fs:[edi+0x1]
  409a69:	mov    ecx,0x47ab5c98
  409a6e:	mov    edi,0x50556f1b
  409a73:	lahf   
  409a74:	push   ecx
  409a75:	add    eax,0x69979462
  409a7a:	fs or  bl,bl
  409a7d:	xchg   DWORD PTR [ecx+ecx*2],ebp
  409a80:	fmul   QWORD PTR [ebx-0x60dcfae]
  409a86:	leave  
  409a87:	fidiv  WORD PTR [ebx+0x469789df]
  409a8d:	pop    edx
  409a8e:	sbb    al,0xc7
  409a90:	xchg   ecx,eax
  409a91:	pop    esp
  409a92:	pop    ds
  409a93:	js     0x409a3a
  409a95:	mov    WORD PTR [eax+0x70bd8eff],fs
  409a9b:	cli    
  409a9c:	imul   eax,DWORD PTR [eax+ebp*2-0x46],0x7c
  409aa1:	pop    esp
  409aa2:	js     0x409b11
  409aa4:	arpl   dx,dx
  409aa6:	(bad)  
  409aa7:	jno    0x409a4a
  409aa9:	fisubr DWORD PTR [edi-0x16]
  409aac:	sbb    eax,0x5f3b8bdd
  409ab1:	mov    bl,0x6c
  409ab3:	repnz mov ebx,0xb6f7297e
  409ab9:	aas    
  409aba:	and    cl,BYTE PTR [edi-0x4a]
  409abd:	ins    BYTE PTR es:[edi],dx
  409abe:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ac0:	push   ecx
  409ac1:	lds    edi,FWORD PTR [edx]
  409ac3:	mov    ds:0x274721fe,eax
  409ac8:	pop    ebp
  409ac9:	stos   BYTE PTR es:[edi],al
  409aca:	mov    esi,0xe307577b
  409acf:	jle    0x409af7
  409ad1:	push   ss
  409ad2:	jmp    0x409b3a
  409ad4:	shr    BYTE PTR [eax],cl
  409ad6:	inc    ebx
  409ad7:	cmp    dh,dh
  409ad9:	ins    BYTE PTR es:[edi],dx
  409ada:	xor    BYTE PTR [ebx+0x6d],bl
  409add:	jge    0x409a72
  409adf:	gs enter 0xd911,0x67
  409ae4:	pop    ebx
  409ae5:	pop    ebx
  409ae6:	mov    ?,WORD PTR [ecx]
  409ae8:	cs dec eax
  409aea:	add    ebx,edx
  409aec:	and    ch,BYTE PTR [esi+ebx*1]
  409aef:	inc    ebx
  409af0:	or     BYTE PTR [edi+0x39],dh
  409af3:	add    bl,BYTE PTR [edi]
  409af5:	inc    edi
  409af6:	pop    esi
  409af7:	pusha  
  409af8:	jne    0x409b5a
  409afa:	mov    dl,BYTE PTR [eax-0x68d932e7]
  409b00:	push   eax
  409b01:	mov    cl,0x56
  409b03:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  409b05:	push   ecx
  409b06:	mov    edx,0xaca80400
  409b0b:	xchg   BYTE PTR [esi],bh
  409b0d:	scas   al,BYTE PTR es:[edi]
  409b0e:	xchg   ecx,eax
  409b0f:	and    DWORD PTR [esi+0x165db2b7],0x4345d80f
  409b19:	dec    edi
  409b1a:	aad    0x6c
  409b1c:	adc    DWORD PTR [ecx+0x2092321f],ecx
  409b22:	loop   0x409b39
  409b24:	cwde   
  409b25:	xchg   BYTE PTR [esi],ch
  409b27:	and    bl,cl
  409b29:	test   al,0x62
  409b2b:	(bad)  
  409b2c:	jmp    0xbc377ea2
  409b31:	jl     0x409b89
  409b33:	mov    esi,0x4796e497
  409b38:	xchg   esi,eax
  409b39:	and    al,0x96
  409b3b:	pop    es
  409b3c:	xor    DWORD PTR [eax+0x61],0xd0c4e5f1
  409b43:	mov    edi,0xfd3cd9d6
  409b48:	outs   dx,DWORD PTR ds:[esi]
  409b49:	mov    ecx,0x380abe61
  409b4e:	or     edx,DWORD PTR [ecx]
  409b50:	retf   0xf64b
  409b53:	out    dx,eax
  409b54:	leave  
  409b55:	lods   eax,DWORD PTR ds:[esi]
  409b56:	push   0x19bcb4a7
  409b5b:	add    esi,esp
  409b5d:	adc    DWORD PTR [edi-0x4f],esi
  409b60:	add    al,ch
  409b62:	(bad)  
  409b63:	mov    bl,0x44
  409b65:	pop    ss
  409b66:	dec    ebp
  409b67:	adc    al,0x4a
  409b69:	idiv   edx
  409b6b:	xchg   BYTE PTR fs:[ebx],bh
  409b6e:	scas   al,BYTE PTR es:[edi]
  409b6f:	sub    eax,DWORD PTR [eax+0x739b5ee]
  409b75:	mov    ebx,0xfbdf3cbb
  409b7a:	sbb    BYTE PTR [edi+0x45],0x7b
  409b7e:	(bad)  
  409b7f:	jecxz  0x409bdc
  409b81:	(bad)  
  409b82:	daa    
  409b83:	push   ebp
  409b84:	pop    ebp
  409b85:	(bad)  
  409b86:	sbb    eax,0x56192e33
  409b8b:	rol    esp,0xe5
  409b8e:	sub    al,0xac
  409b90:	pop    edi
  409b91:	adc    eax,0x15e7df94
  409b96:	lds    ebx,FWORD PTR [ebp+0x75]
  409b99:	jp     0x409bf2
  409b9b:	xor    al,0xf7
  409b9d:	adc    ebp,DWORD PTR [ecx-0x2cde5231]
  409ba3:	clc    
  409ba4:	shr    DWORD PTR [ebp-0x1f1723f2],cl
  409baa:	inc    edi
  409bab:	add    eax,0x66ed98b7
  409bb0:	pop    edi
  409bb1:	(bad)  
  409bb2:	fisub  DWORD PTR [esi]
  409bb4:	stc    
  409bb5:	mov    gs,WORD PTR [edi+0x496421ae]
  409bbb:	dec    eax
  409bbc:	mov    esp,DWORD PTR [edx+esi*2+0x13]
  409bc0:	ins    DWORD PTR es:[edi],dx
  409bc1:	cmc    
  409bc2:	jbe    0x409c2f
  409bc4:	pop    eax
  409bc5:	fs es stc 
  409bc8:	mov    eax,0xb36c9cea
  409bcd:	scas   eax,DWORD PTR es:[edi]
  409bce:	aaa    
  409bcf:	addr16 inc edx
  409bd1:	lds    esp,FWORD PTR [edx+eax*1]
  409bd4:	repz pop ebp
  409bd6:	es fs ins BYTE PTR es:[edi],dx
  409bd9:	sbb    ebp,ebp
  409bdb:	mov    eax,?
  409bdd:	xchg   esp,eax
  409bde:	sbb    BYTE PTR [edx+0x11],ah
  409be1:	lods   eax,DWORD PTR ds:[esi]
  409be2:	enter  0xfda3,0xcc
  409be6:	pop    edx
  409be7:	test   BYTE PTR [ebp+0x49406a0c],0xde
  409bee:	adc    BYTE PTR [eax+0x4cae0671],dh
  409bf4:	hlt    
  409bf5:	sub    dh,BYTE PTR [esi+esi*1+0x38d13c03]
  409bfc:	xchg   bl,ch
  409bfe:	icebp  
  409bff:	data16 lods al,BYTE PTR ds:[esi]
  409c01:	push   ss
  409c02:	push   edi
  409c03:	xor    bh,cl
  409c05:	push   0xffffff94
  409c07:	das    
  409c08:	sbb    BYTE PTR [esp+edi*8],ah
  409c0b:	addr16 retf 0xd942
  409c0f:	push   ebp
  409c10:	inc    ecx
  409c11:	test   DWORD PTR [eax+0xbfe1159],0x167e0700
  409c1b:	cmp    BYTE PTR [ebp-0x28212948],0x63
  409c22:	sub    dh,ah
  409c24:	shl    BYTE PTR [edx-0x66],1
  409c27:	push   ss
  409c28:	ja     0x409c11
  409c2a:	and    BYTE PTR [eax+edx*2+0x1957199c],bh
  409c31:	nop
  409c32:	or     DWORD PTR [edx],edi
  409c34:	mov    ebp,0xa767411e
  409c39:	loope  0x409c43
  409c3b:	fcom   DWORD PTR [eax-0x4]
  409c3e:	(bad)  
  409c3f:	dec    esi
  409c40:	sbb    dh,BYTE PTR [edi-0x5e71b8ba]
  409c46:	sti    
  409c47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c48:	lods   eax,DWORD PTR ds:[esi]
  409c49:	and    eax,0x77871752
  409c4e:	push   eax
  409c4f:	jge    0x409caf
  409c51:	out    0xa0,al
  409c53:	cli    
  409c54:	stos   BYTE PTR es:[edi],al
  409c55:	or     ebx,DWORD PTR [ecx+ebx*8+0xe]
  409c59:	popa   
  409c5a:	inc    ebx
  409c5b:	mov    al,ds:0x69d93139
  409c60:	dec    ebx
  409c61:	loope  0x409cbf
  409c63:	xchg   ebp,eax
  409c64:	dec    dh
  409c66:	ret    0x310b
  409c69:	or     edi,edx
  409c6b:	push   es
  409c6c:	outs   dx,DWORD PTR ds:[esi]
  409c6d:	and    al,0xfb
  409c6f:	adc    eax,0x90371c1b
  409c74:	inc    edx
  409c75:	sub    DWORD PTR [ebx-0x4c2cbf79],ebp
  409c7b:	jle    0x409c22
  409c7d:	push   ebx
  409c7e:	jo     0x409c36
  409c80:	and    ecx,ecx
  409c82:	ret    
  409c83:	fidivr DWORD PTR [ecx-0x9]
  409c86:	retf   0x563c
  409c89:	dec    edi
  409c8a:	push   0x50
  409c8c:	add    eax,0x84417dea
  409c91:	xor    ebp,ebp
  409c93:	adc    bl,BYTE PTR [ebx]
  409c95:	sar    DWORD PTR [ebp-0x59],0xc3
  409c99:	sbb    ebp,edi
  409c9b:	inc    ebp
  409c9c:	dec    DWORD PTR [esi+ecx*2+0x2c1427fd]
  409ca3:	and    DWORD PTR ds:0x49108ad,ecx
  409ca9:	mov    al,0x11
  409cab:	pop    ss
  409cac:	ds das 
  409cae:	mov    bh,0x61
  409cb0:	fild   WORD PTR [ebx]
  409cb2:	icebp  
  409cb3:	test   eax,0x87be36bf
  409cb8:	mov    eax,0x639603af
  409cbd:	xor    BYTE PTR [edi+0x47],dh
  409cc0:	sbb    dl,BYTE PTR [ecx-0x2a06d2ca]
  409cc6:	mov    ah,dl
  409cc8:	dec    ebp
  409cc9:	xchg   esp,eax
  409cca:	inc    ebx
  409ccb:	scas   eax,DWORD PTR es:[edi]
  409ccc:	pop    esp
  409ccd:	and    DWORD PTR [eax+eiz*2],0x538c31e2
  409cd4:	xchg   BYTE PTR [ebx+0x3b],al
  409cd7:	mov    al,ds:0x5fa65fdb
  409cdc:	mov    ch,BYTE PTR [edi-0x26623cb0]
  409ce2:	push   edx
  409ce3:	mov    esp,0xce05980c
  409ce8:	fwait
  409ce9:	rcl    BYTE PTR [eax],cl
  409ceb:	jp     0x409d36
  409ced:	xchg   esi,eax
  409cee:	jmp    0xb7f1:0xf02f1a91
  409cf5:	sub    DWORD PTR [ecx+ebp*1+0x2],esp
  409cf9:	out    0x71,al
  409cfb:	push   0x1c
  409cfd:	mov    ebp,0xbb70f133
  409d02:	int3   
  409d03:	adc    BYTE PTR [ecx-0x64],0xd2
  409d07:	out    0xfb,eax
  409d09:	jno    0x409d49
  409d0b:	mov    ebp,0x7b3dc479
  409d10:	sub    cl,cl
  409d12:	or     ecx,ebx
  409d14:	mov    ds:0x5b8f42c0,al
  409d19:	add    DWORD PTR [edx+0x2d],ecx
  409d1c:	xor    bl,BYTE PTR [esi]
  409d1e:	call   0x86879995
  409d23:	xlat   BYTE PTR ds:[ebx]
  409d24:	stos   DWORD PTR es:[edi],eax
  409d25:	or     eax,0xb1e9e399
  409d2a:	mov    ds:0xc92bd5f7,eax
  409d2f:	sbb    bl,BYTE PTR [edi]
  409d31:	ror    bl,0xa2
  409d34:	mov    ch,0xe7
  409d36:	xchg   edi,eax
  409d37:	(bad)  
  409d38:	and    al,0x40
  409d3a:	out    dx,al
  409d3b:	fcomp  DWORD PTR [edi-0x63]
  409d3e:	dec    esp
  409d3f:	dec    ebx
  409d40:	test   BYTE PTR [ebx],ch
  409d42:	mov    ah,0x85
  409d44:	mov    edi,0x15afdb27
  409d49:	ds stos BYTE PTR es:[edi],al
  409d4b:	xchg   ecx,eax
  409d4c:	mov    al,dh
  409d4e:	pushf  
  409d4f:	sbb    BYTE PTR [esi+0x8],ah
  409d52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d53:	bound  ebp,QWORD PTR [ecx]
  409d55:	xor    DWORD PTR [ecx-0x1808b657],edi
  409d5b:	sbb    DWORD PTR [eax-0x221d72e4],ebx
  409d61:	ret    
  409d62:	sub    bh,BYTE PTR [ecx-0x2808ae14]
  409d68:	push   edx
  409d69:	inc    ebp
  409d6a:	jmp    0x409d5e
  409d6c:	outs   dx,BYTE PTR ds:[esi]
  409d6d:	add    al,0x93
  409d6f:	pop    esi
  409d70:	mov    esp,0x33e44c96
  409d75:	test   BYTE PTR [edi],dh
  409d77:	rcr    BYTE PTR [ecx+ebx*1+0x22],1
  409d7b:	or     al,0xd6
  409d7d:	jbe    0x409dc4
  409d7f:	jns    0x409d70
  409d81:	mov    ds:0x5e842f9e,eax
  409d86:	popa   
  409d87:	mov    ecx,0x4696e3cb
  409d8c:	or     DWORD PTR [ecx+0x3e979d96],edx
  409d92:	jno    0x409dd1
  409d94:	test   eax,0x9827966d
  409d99:	mov    WORD PTR [esi],?
  409d9b:	mov    cl,0xce
  409d9d:	pushw  cs
  409d9f:	push   edx
  409da0:	test   al,0x62
  409da2:	pop    ebx
  409da3:	fadd   st,st(3)
  409da5:	shl    BYTE PTR ds:0xa692d46a,cl
  409dab:	and    dh,BYTE PTR [ebp+0x378bc5ea]
  409db1:	mov    ds:0xb7e97c70,al
  409db6:	popa   
  409db7:	or     ecx,esi
  409db9:	stc    
  409dba:	mov    edi,eax
  409dbc:	add    al,0xec
  409dbe:	pop    ebp
  409dbf:	lods   al,BYTE PTR ds:[esi]
  409dc0:	rcl    DWORD PTR [ebx],cl
  409dc2:	or     edi,DWORD PTR [edi-0x8ad94a4]
  409dc8:	test   al,0x96
  409dca:	mov    eax,ds:0x9b9680a0
  409dcf:	lock mov ds:0x8f1632f6,al
  409dd5:	push   es
  409dd6:	sbb    eax,0x9217a6fb
  409ddb:	gs dec esp
  409ddd:	ret    0x1c1e
  409de0:	(bad)  
  409de1:	mov    al,0xe
  409de3:	cs inc ebx
  409de5:	loope  0x409d6b
  409de7:	pop    edi
  409de8:	xchg   edi,eax
  409de9:	pop    esp
  409dea:	mov    al,0x95
  409dec:	(bad)  
  409ded:	dec    esp
  409dee:	push   edx
  409def:	loopne 0x409e68
  409df1:	push   esi
  409df2:	mov    dl,0x39
  409df4:	and    al,0x90
  409df6:	mov    esi,0x806397f0
  409dfb:	jb     0x409dbf
  409dfd:	ficomp WORD PTR [ebx-0x75]
  409e00:	sub    al,0x91
  409e02:	xchg   DWORD PTR [ebx-0x1f],ebp
  409e05:	loopne 0x409dd0
  409e07:	xchg   DWORD PTR ds:0x36a609cb,edi
  409e0d:	ret    0xa628
  409e10:	add    eax,0x843660d2
  409e15:	mov    bh,0x50
  409e17:	push   ss
  409e18:	popf   
  409e19:	sbb    esi,DWORD PTR [esi]
  409e1b:	es inc ecx
  409e1d:	jne    0x409de9
  409e1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e20:	mov    eax,0x1dbab88c
  409e25:	or     ah,bh
  409e27:	sbb    esi,ebx
  409e29:	push   ss
  409e2a:	xchg   ebp,eax
  409e2b:	call   FWORD PTR [esi-0x5a]
  409e2e:	jne    0x409de1
  409e30:	fisttp DWORD PTR [ebx-0x7ddbd459]
  409e36:	jae    0x409ddc
  409e38:	jg     0x409e8f
  409e3a:	pop    ebx
  409e3b:	xor    DWORD PTR [edx-0x20],ebp
  409e3e:	std    
  409e3f:	jg     0x409e62
  409e41:	stos   DWORD PTR es:[edi],eax
  409e42:	pop    ecx
  409e43:	push   ecx
  409e44:	data16 add BYTE PTR [ebx+0x68594a9e],bl
  409e4b:	lods   al,BYTE PTR ds:[esi]
  409e4c:	aaa    
  409e4d:	stos   DWORD PTR es:[edi],eax
  409e4e:	mov    dl,0x9c
  409e50:	dec    edi
  409e51:	dec    esp
  409e52:	outs   dx,BYTE PTR ds:[esi]
  409e53:	aaa    
  409e54:	inc    eax
  409e55:	sub    edx,ebx
  409e57:	mov    ebp,0xafb78a5a
  409e5c:	push   cs
  409e5d:	ins    BYTE PTR es:[edi],dx
  409e5e:	in     eax,0x5e
  409e60:	and    DWORD PTR [ebx],eax
  409e62:	jmp    0x5ff8ae1e
  409e67:	imul   edx,DWORD PTR [ecx],0xb759d57d
  409e6d:	(bad)  
  409e6e:	lock test DWORD PTR [ebp-0x18],edi
  409e72:	fdiv   QWORD PTR [edi+edi*2]
  409e75:	pop    edx
  409e76:	adc    ah,cl
  409e78:	std    
  409e79:	std    
  409e7a:	xchg   ecx,eax
  409e7b:	xchg   edx,eax
  409e7c:	sub    DWORD PTR [esi],ebx
  409e7e:	test   al,ch
  409e80:	or     al,0xa
  409e82:	inc    eax
  409e83:	xchg   esp,edx
  409e85:	xchg   esi,eax
  409e86:	ja     0x409ebf
  409e88:	popa   
  409e89:	enter  0x6273,0xb5
  409e8d:	ins    BYTE PTR es:[edi],dx
  409e8e:	lock push esp
  409e90:	sbb    ch,BYTE PTR [esi+0x6320056]
  409e96:	xlat   BYTE PTR ds:[ebx]
  409e97:	bound  edi,QWORD PTR [eax]
  409e99:	sbb    al,0x44
  409e9b:	jnp    0x409f1b
  409e9d:	mov    ebp,0xce63387d
  409ea2:	sbb    BYTE PTR [esi+edx*4+0x60],bh
  409ea6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ea7:	scas   al,BYTE PTR es:[edi]
  409ea8:	push   esi
  409ea9:	es xchg edx,eax
  409eab:	and    eax,0x2bd12492
  409eb0:	jns    0x409ef3
  409eb2:	lods   eax,DWORD PTR ds:[esi]
  409eb3:	aas    
  409eb4:	or     ah,BYTE PTR [eax-0x6f145813]
  409eba:	xor    al,0xc2
  409ebc:	or     eax,0x6cd4f7ba
  409ec1:	and    al,0x7b
  409ec3:	stc    
  409ec4:	pop    eax
  409ec5:	push   esi
  409ec6:	or     dh,cl
  409ec8:	ret    
  409ec9:	mov    edi,0x54f7bb20
  409ece:	or     DWORD PTR [esi],esi
  409ed0:	ret    
  409ed1:	mov    ah,0xb7
  409ed3:	pop    ebx
  409ed4:	repnz or BYTE PTR [ecx-0x6e],cl
  409ed8:	dec    esi
  409ed9:	pop    edi
  409eda:	xchg   BYTE PTR [ecx],dh
  409edc:	(bad)  
  409edd:	push   ds
  409ede:	js     0x409f4e
  409ee0:	out    dx,al
  409ee1:	cmp    dh,BYTE PTR [eax+0x4507530f]
  409ee7:	inc    esi
  409ee8:	cwde   
  409ee9:	aas    
  409eea:	pushf  
  409eeb:	leave  
  409eec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409eed:	arpl   si,cx
  409eef:	aaa    
  409ef0:	retf   
  409ef1:	sbb    al,0x10
  409ef3:	inc    ebp
  409ef4:	sbb    al,BYTE PTR gs:[edi]
  409ef7:	xchg   esi,eax
  409ef8:	sbb    eax,0x2e8399d8
  409efd:	push   eax
  409efe:	push   ebp
  409eff:	xchg   ebp,eax
  409f00:	test   al,0x89
  409f02:	pop    ebp
  409f03:	cmp    eax,0x86e70395
  409f08:	(bad)  
  409f09:	shr    DWORD PTR [edi-0x63db8da2],cl
  409f0f:	push   ebx
  409f10:	(bad)  
  409f11:	add    dh,0xa4
  409f14:	push   0x4f
  409f16:	test   BYTE PTR [esi-0xa],dl
  409f19:	scas   al,BYTE PTR es:[edi]
  409f1a:	cs xchg ebp,eax
  409f1c:	(bad)  
  409f1d:	int    0xf3
  409f1f:	jb     0x409eae
  409f21:	jbe    0x409ecb
  409f23:	dec    ebx
  409f24:	fidiv  DWORD PTR [ebp-0x40ed3d38]
  409f2a:	cmc    
  409f2b:	jae    0x409ec9
  409f2d:	fs popa 
  409f2f:	call   0xfb57c388
  409f34:	sub    bh,BYTE PTR [edx+0x3b06f9ef]
  409f3a:	fdecstp 
  409f3c:	and    edi,DWORD PTR [ebx-0x17]
  409f3f:	ds icebp 
  409f41:	pop    esi
  409f42:	add    eax,0xc2b5f78d
  409f47:	scas   al,BYTE PTR es:[edi]
  409f48:	shl    BYTE PTR [eax],0x31
  409f4b:	stc    
  409f4c:	mov    ah,0xd
  409f4e:	mov    edi,0xe937c6c7
  409f53:	bound  edi,QWORD PTR [esi-0x26d36619]
  409f59:	jns    0x409ee5
  409f5b:	and    ebp,DWORD PTR [esi]
  409f5d:	jne    0x409f18
  409f5f:	bnd ret 
  409f61:	and    BYTE PTR [eax-0x53],0xa3
  409f65:	cld    
  409f66:	mov    dh,0x7a
  409f68:	loopne 0x409fe3
  409f6a:	sbb    esp,0xfec60a2
  409f70:	psrad  mm0,QWORD PTR [ebp-0x1f]
  409f74:	dec    esi
  409f75:	aad    0xc
  409f77:	xor    eax,0xe149f08
  409f7c:	call   0xbe5d106d
  409f81:	pop    esi
  409f82:	xor    al,0xc4
  409f84:	mov    edi,0x5f26912a
  409f89:	or     ebp,DWORD PTR ds:0x5b6f44ba
  409f8f:	in     al,0x8b
  409f91:	daa    
  409f92:	sbb    dl,BYTE PTR [eax+0x4]
  409f95:	test   DWORD PTR [ebp+0x4f6cd31c],0xf67e9765
  409f9f:	xchg   edi,eax
  409fa0:	sbb    eax,0x327b0a95
  409fa5:	leave  
  409fa6:	dec    edx
  409fa7:	dec    edi
  409fa8:	push   ebp
  409fa9:	push   0xffffffd2
  409fab:	add    ebp,ebx
  409fad:	retf   
  409fae:	lock xor eax,0xb2df3091
  409fb4:	jnp    0x409ff0
  409fb6:	(bad)  
  409fb7:	pop    ebp
  409fb8:	dec    ebx
  409fb9:	ins    DWORD PTR es:[edi],dx
  409fba:	hlt    
  409fbb:	add    al,0xe6
  409fbd:	mov    dl,0xc7
  409fbf:	jp     0x40a020
  409fc1:	into   
  409fc2:	sub    DWORD PTR [edi+0x7c],eax
  409fc5:	popa   
  409fc6:	mov    fs,esi
  409fc8:	mov    ah,0x26
  409fca:	cld    
  409fcb:	mov    dl,0x1f
  409fcd:	ins    DWORD PTR es:[edi],dx
  409fce:	nop
  409fcf:	lds    ebx,FWORD PTR [ebp-0x507c1612]
  409fd5:	sub    eax,0xec7f80e3
  409fda:	xor    dl,BYTE PTR [eax-0x694a3560]
  409fe0:	nop
  409fe1:	mov    ah,0x30
  409fe3:	jne    0x40a05c
  409fe5:	sahf   
  409fe6:	mov    ah,BYTE PTR [eax-0x6d]
  409fe9:	push   eax
  409fea:	loope  0x409f9e
  409fec:	jl     0x409f81
  409fee:	ret    
  409fef:	fsubr  DWORD PTR [eax+0x27]
  409ff2:	pop    ss
  409ff3:	or     ah,ah
  409ff5:	fs (bad) 
  409ff7:	push   esi
  409ff8:	mov    edx,0x46c3df96
  409ffd:	sub    ch,ch
  409fff:	test   eax,0xa71c17a0
  40a004:	cmp    ebp,esi
  40a006:	xlat   BYTE PTR ds:[ebx]
  40a007:	jmp    0x40a070
  40a009:	repnz push ecx
  40a00b:	test   DWORD PTR [ebx+0x7b72063c],0x1b85713a
  40a015:	jg     0x40a067
  40a017:	call   0x4ef0:0xac767f58
  40a01e:	or     eax,0x41dcb5c8
  40a023:	(bad)  
  40a024:	mov    edi,0x3d29947
  40a029:	pop    ecx
  40a02a:	xchg   ebp,eax
  40a02b:	repz mov esp,0xde9815ca
  40a031:	push   edx
  40a032:	add    eax,0xa896e1c
  40a037:	inc    eax
  40a038:	or     DWORD PTR [ebx+0x3e12bfb6],eax
  40a03e:	cld    
  40a03f:	push   ebx
  40a040:	xlat   BYTE PTR ds:[ebx]
  40a041:	xor    ah,0x7c
  40a044:	add    bl,BYTE PTR [edi-0x3b]
  40a047:	test   BYTE PTR [edx],ah
  40a049:	ja     0x40a093
  40a04b:	push   ss
  40a04c:	jecxz  0x409fe0
  40a04e:	xor    al,0x5f
  40a050:	rcl    eax,0xcd
  40a053:	jno    0x40a0c8
  40a055:	and    BYTE PTR [ebx+0xab2080],0xf1
  40a05c:	mov    ebx,0xbc2bcf72
  40a061:	aas    
  40a062:	mov    ebx,0xab5f3278
  40a067:	sbb    BYTE PTR [ecx+0x5b96da3a],bh
  40a06d:	push   ebp
  40a06e:	dec    ebp
  40a06f:	pop    edx
  40a070:	mov    edi,0x97f745b7
  40a075:	mov    BYTE PTR [edi],bl
  40a077:	push   ss
  40a078:	push   es
  40a079:	sub    DWORD PTR [esi],esp
  40a07b:	cmc    
  40a07c:	scas   al,BYTE PTR es:[edi]
  40a07d:	push   ebp
  40a07e:	jne    0x40a022
  40a080:	cmp    ch,BYTE PTR [ebx]
  40a082:	inc    edi
  40a083:	test   DWORD PTR [eax+0x7559e38e],0xebc15138
  40a08d:	dec    esp
  40a08e:	mov    gs,eax
  40a090:	and    BYTE PTR [edi],ah
  40a092:	stos   DWORD PTR es:[edi],eax
  40a093:	push   edi
  40a094:	mov    gs,WORD PTR [eax]
  40a096:	jmp    0x4325:0x8c2733d0
  40a09d:	test   DWORD PTR es:[edi-0x8a87f41],0x6e4f7979
  40a0a8:	push   ds
  40a0a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0aa:	loope  0x40a05b
  40a0ac:	out    dx,eax
  40a0ad:	inc    esp
  40a0ae:	dec    esp
  40a0af:	retf   
  40a0b0:	stos   BYTE PTR es:[edi],al
  40a0b1:	adc    edx,DWORD PTR [edi-0x4e]
  40a0b4:	cld    
  40a0b5:	fistp  QWORD PTR [edx-0x4b]
  40a0b8:	loop   0x40a0a0
  40a0ba:	fist   WORD PTR [esi-0x4214f0db]
  40a0c0:	xor    ebx,eax
  40a0c2:	push   ecx
  40a0c3:	pushf  
  40a0c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0c5:	pop    edx
  40a0c6:	pop    es
  40a0c7:	fcomp  QWORD PTR [edi]
  40a0c9:	sbb    al,0x6c
  40a0cb:	clc    
  40a0cc:	dec    edx
  40a0cd:	js     0x40a0b3
  40a0cf:	xor    bh,bl
  40a0d1:	xor    ah,0xfa
  40a0d4:	adc    al,0x3
  40a0d6:	fstp   QWORD PTR [esp+edi*8+0x74bb946d]
  40a0dd:	mov    dh,0x68
  40a0df:	das    
  40a0e0:	std    
  40a0e1:	mov    esp,0x56a140c8
  40a0e6:	xor    al,0x77
  40a0e8:	mov    ebp,0x1d92b625
  40a0ed:	xor    eax,0x46b3bf34
  40a0f2:	xchg   edx,eax
  40a0f3:	push   esi
  40a0f4:	cmp    al,0xa3
  40a0f6:	adc    eax,0xb7ca73e0
  40a0fb:	je     0x40a093
  40a0fd:	test   eax,0x55d6f672
  40a102:	aaa    
  40a103:	imul   esi,DWORD PTR [ecx],0x0
  40a106:	mov    ds:0x9f8dab1a,al
  40a10b:	lahf   
  40a10c:	adc    DWORD PTR ds:0x3edec933,ebx
  40a112:	pop    esi
  40a113:	(bad)  
  40a114:	mov    dl,0x88
  40a116:	push   esp
  40a118:	mov    edx,0xa79d925a
  40a11d:	repz mov esp,0x600fd1dd
  40a123:	in     al,0x21
  40a125:	push   ebp
  40a126:	pop    edx
  40a127:	dec    ecx
  40a128:	xor    DWORD PTR [edi-0x7835ff5f],ebx
  40a12e:	adc    eax,0x781e84fc
  40a133:	jge    0x40a157
  40a135:	mov    ebx,0xc5ee08a9
  40a13a:	pop    eax
  40a13b:	and    eax,0x3e2a266
  40a140:	mov    edi,0x17cac6a7
  40a145:	shr    DWORD PTR [ebx-0x43],cl
  40a148:	pop    ecx
  40a149:	push   esi
  40a14a:	sbb    eax,0x3faa89a3
  40a14f:	add    edx,DWORD PTR [esi+edx*2]
  40a152:	inc    edx
  40a153:	std    
  40a154:	cmp    BYTE PTR [esi-0x307410f6],0x4e
  40a15b:	(bad)  
  40a15c:	xor    al,0xbc
  40a15e:	push   cs
  40a15f:	jl     0x40a1ce
  40a161:	das    
  40a162:	ror    BYTE PTR [ecx-0x4ff42e11],0xf
  40a169:	mov    bh,0xd5
  40a16b:	aaa    
  40a16c:	and    BYTE PTR [ebp+0x536265e2],ah
  40a172:	adc    BYTE PTR [ecx],bh
  40a174:	arpl   dx,dx
  40a176:	xchg   edi,eax
  40a177:	dec    ebx
  40a178:	push   edx
  40a179:	sub    DWORD PTR [eax-0x42],0xffffffcd
  40a17d:	ds iretw 
  40a180:	in     al,0x9c
  40a182:	pop    ebp
  40a183:	rol    BYTE PTR [ebp-0x13c235fd],cl
  40a189:	leave  
  40a18a:	xchg   ebp,eax
  40a18b:	mov    ebx,0xe83e047c
  40a190:	pushf  
  40a191:	fisub  WORD PTR [ebp+0x50ed28ae]
  40a197:	mov    bl,BYTE PTR [eax+0x4deb4a94]
  40a19d:	into   
  40a19e:	jp     0x40a17d
  40a1a0:	dec    ecx
  40a1a1:	pop    es
  40a1a2:	mov    ch,0xc6
  40a1a4:	call   0xf8ba:0x46d5688b
  40a1ab:	pcmpgtb mm7,QWORD PTR [ebp-0x4f4bc42a]
  40a1b2:	std    
  40a1b3:	xor    eax,0x5f96c64c
  40a1b8:	mov    edi,0x3d78e758
  40a1bd:	or     DWORD PTR [eax+0x50],ecx
  40a1c0:	add    dh,BYTE PTR [eax]
  40a1c2:	std    
  40a1c3:	inc    edi
  40a1c4:	push   cs
  40a1c5:	mov    WORD PTR [ebx],es
  40a1c7:	bound  esi,QWORD PTR [ebx]
  40a1c9:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1cb:	mov    eax,ds:0xc15648b3
  40a1d0:	nop
  40a1d1:	lods   al,BYTE PTR ds:[esi]
  40a1d2:	fisttp WORD PTR [ebx]
  40a1d4:	ss pop ebp
  40a1d6:	retf   
  40a1d7:	popf   
  40a1d8:	xor    esp,DWORD PTR [ecx]
  40a1da:	std    
  40a1db:	in     eax,0x54
  40a1dd:	retf   
  40a1de:	lahf   
  40a1df:	call   0x7322:0xc98b6d9a
  40a1e6:	imul   ebp,DWORD PTR [edx-0x72],0xffffff94
  40a1ea:	mov    ah,0x8c
  40a1ec:	xor    BYTE PTR ds:0x116445ea,dh
  40a1f2:	xchg   esp,eax
  40a1f3:	dec    ecx
  40a1f4:	lea    edx,[edi+edx*2]
  40a1f7:	and    eax,0x2e6e29b7
  40a1fc:	stos   DWORD PTR es:[edi],eax
  40a1fd:	test   al,0xe2
  40a1ff:	aas    
  40a200:	ret    
  40a201:	ret    
  40a202:	leave  
  40a203:	xchg   edx,eax
  40a204:	jmp    0xc06e:0x2571f7ab
  40a20b:	loopne 0x40a1ef
  40a20d:	sbb    eax,0xb3e3a5ba
  40a212:	add    BYTE PTR [ebp+0x50],al
  40a215:	and    eax,0x397abec
  40a21a:	add    DWORD PTR ds:0xb2d3f3fb,esi
  40a220:	dec    ecx
  40a221:	adc    bh,dh
  40a223:	fmul   QWORD PTR [ecx+ebp*1]
  40a226:	sub    DWORD PTR ds:0x9ae3c38,0x23
  40a22d:	data16 int 0xc
  40a230:	fisub  DWORD PTR [eax+0x5]
  40a233:	repnz jmp 0x19b7:0x52060e71
  40a23b:	stos   DWORD PTR es:[edi],eax
  40a23c:	lahf   
  40a23d:	aaa    
  40a23e:	cmp    bl,BYTE PTR [ecx-0x7bd979a7]
  40a244:	mov    esi,ebx
  40a246:	bound  esi,QWORD PTR [edx]
  40a248:	cwde   
  40a249:	mov    ah,BYTE PTR [ebx]
  40a24b:	sub    al,0x83
  40a24d:	jae    0x40a2c5
  40a24f:	jl     0x40a1de
  40a251:	or     DWORD PTR [esi],esp
  40a253:	aad    0x48
  40a255:	jmp    0x6fd4dcc2
  40a25a:	dec    esi
  40a25b:	pop    eax
  40a25c:	push   ebp
  40a25d:	add    BYTE PTR [eax],al
  40a25f:	fisub  DWORD PTR [edi+ecx*4+0x7c]
  40a263:	mov    ecx,0xc55f1012
  40a268:	and    al,0x53
  40a26a:	mov    bl,0x60
  40a26c:	repz xor cl,al
  40a26f:	sub    cl,BYTE PTR [ecx+0x4c37fe4]
  40a275:	mov    eax,ds:0x293f5a2
  40a27a:	jae    0x40a284
  40a27c:	(bad)  
  40a27d:	ins    DWORD PTR es:[edi],dx
  40a27e:	popf   
  40a27f:	fstp   QWORD PTR [esi]
  40a281:	mov    esp,0x3e07c8f9
  40a286:	test   BYTE PTR [ecx+0x34],dl
  40a289:	jne    0x40a2bd
  40a28b:	mov    DWORD PTR [edi],ebp
  40a28d:	jne    0x40a290
  40a28f:	and    eax,0xc32c93d4
  40a294:	aas    
  40a295:	jle    0x40a2d6
  40a297:	aam    0x88
  40a299:	push   ebp
  40a29a:	ins    BYTE PTR es:[edi],dx
  40a29b:	out    dx,al
  40a29c:	mov    esp,0x3bad3bd3
  40a2a1:	ret    
  40a2a2:	jb     0x40a231
  40a2a4:	mov    dh,0x4
  40a2a6:	mov    esi,0x7a4f1832
  40a2ab:	mov    al,0x5e
  40a2ad:	add    DWORD PTR [ecx-0x4c0b0f37],ebx
  40a2b3:	loope  0x40a262
  40a2b5:	xchg   esp,eax
  40a2b6:	jl     0x40a2ff
  40a2b8:	sahf   
  40a2b9:	rcr    BYTE PTR ds:0xa11d1243,1
  40a2bf:	push   ss
  40a2c0:	xchg   esi,eax
  40a2c1:	sahf   
  40a2c2:	addr16 pop ds
  40a2c4:	in     al,0x4a
  40a2c6:	add    cl,bh
  40a2c8:	ror    ah,0x18
  40a2cb:	repz dec edx
  40a2cd:	jecxz  0x40a27e
  40a2cf:	or     BYTE PTR [eax],dl
  40a2d1:	jmp    0x2162:0x5a5a7b32
  40a2d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2d9:	rol    DWORD PTR [ebp-0x43bce2b6],cl
  40a2df:	pop    es
  40a2e0:	mov    edx,0xda1c8af8
  40a2e5:	jne    0x40a2cb
  40a2e7:	nop
  40a2e8:	push   eax
  40a2e9:	adc    ebx,DWORD PTR [eax]
  40a2eb:	call   DWORD PTR [ebx-0xc]
  40a2ee:	mov    esi,DWORD PTR [ebp-0x2e0ecf6b]
  40a2f4:	or     BYTE PTR [edx],dl
  40a2f6:	jl     0x40a2c6
  40a2f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2f9:	push   cs
  40a2fa:	cld    
  40a2fb:	push   edx
  40a2fc:	mov    edx,0xbabe4b1e
  40a301:	mov    al,ds:0x793ee0fe
  40a306:	add    al,0x68
  40a308:	outs   dx,BYTE PTR ds:[esi]
  40a309:	out    dx,eax
  40a30a:	aaa    
  40a30b:	stc    
  40a30c:	rcr    BYTE PTR [ebp+0x76],cl
  40a30f:	addr16 inc ebp
  40a311:	(bad)  
  40a312:	xchg   edi,eax
  40a313:	sti    
  40a314:	inc    ecx
  40a315:	mov    dh,0x25
  40a317:	sub    al,0x14
  40a319:	xor    DWORD PTR [edx-0x405aea44],edi
  40a31f:	aad    0x7b
  40a321:	iret   
  40a322:	xchg   edx,eax
  40a323:	mov    esp,0x96897f90
  40a328:	test   BYTE PTR [edi+0x4864fb41],ah
  40a32e:	lods   eax,DWORD PTR ds:[esi]
  40a32f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a330:	rol    DWORD PTR [edx],cl
  40a332:	pop    ecx
  40a333:	add    eax,0x14286cdd
  40a338:	(bad)  
  40a339:	jae    0x40a360
  40a33b:	xor    eax,ecx
  40a33d:	sub    eax,0x9e9e9d12
  40a342:	enter  0x2611,0x12
  40a346:	xor    DWORD PTR [ebp+0x2a33814c],ebp
  40a34c:	clc    
  40a34d:	out    0x14,eax
  40a34f:	nop
  40a350:	adc    bl,BYTE PTR [eax+0x4f4e843c]
  40a356:	pop    edi
  40a357:	cmp    DWORD PTR [ebx-0x7a],ecx
  40a35a:	stos   DWORD PTR es:[edi],eax
  40a35b:	test   DWORD PTR [edi],0x72923bbf
  40a361:	ror    ah,cl
  40a363:	out    0xb,al
  40a365:	out    dx,al
  40a366:	neg    BYTE PTR [edi+0x63]
  40a369:	fsubr  QWORD PTR [ecx]
  40a36b:	sahf   
  40a36c:	or     BYTE PTR ds:0x76327a15,ch
  40a372:	pop    ebp
  40a373:	cmp    eax,0x5c8778d3
  40a378:	ja     0x40a38c
  40a37a:	mov    edi,DWORD PTR [edx]
  40a37c:	adc    BYTE PTR [esi+edi*1],0x92
  40a380:	dec    esi
  40a381:	(bad)  [edi]
  40a383:	stos   DWORD PTR es:[edi],eax
  40a384:	(bad)  [eax+0x63]
  40a387:	out    dx,eax
  40a388:	shl    DWORD PTR [ebx],1
  40a38a:	mov    cl,0xae
  40a38c:	inc    ecx
  40a38d:	mov    ebp,DWORD PTR [eax-0x63]
  40a390:	es push ebx
  40a392:	cwde   
  40a393:	jecxz  0x40a31b
  40a395:	(bad)  
  40a396:	data16 mov ds:0xf154a965,al
  40a39c:	retf   
  40a39d:	and    eax,0xb18343ca
  40a3a2:	jle    0x40a34d
  40a3a4:	sub    eax,0xac60dbf4
  40a3a9:	bswap  eax
  40a3ab:	nop
  40a3ac:	sub    ecx,ebx
  40a3ae:	pop    edx
  40a3af:	dec    eax
  40a3b0:	sti    
  40a3b1:	mov    ebp,0xaaac2888
  40a3b6:	out    dx,eax
  40a3b7:	adc    eax,0xe0add65f
  40a3bc:	sub    esp,ecx
  40a3be:	fwait
  40a3bf:	adc    edx,eax
  40a3c1:	mov    eax,0x864c9dd
  40a3c6:	xchg   DWORD PTR [ebp+0x1d],esp
  40a3c9:	iret   
  40a3ca:	in     eax,0x21
  40a3cc:	or     BYTE PTR ds:0xe6e10438,cl
  40a3d2:	ja     0x40a3e5
  40a3d4:	push   ss
  40a3d5:	sbb    al,0x81
  40a3d7:	lock push 0xffffff99
  40a3da:	(bad)  
  40a3db:	iret   
  40a3dc:	sbb    al,BYTE PTR [esi+eax*4]
  40a3df:	mov    dl,BYTE PTR [eax+0x6f]
  40a3e2:	shl    DWORD PTR [eax+0x4f],1
  40a3e5:	jo     0x40a3c2
  40a3e7:	fwait
  40a3e8:	out    dx,eax
  40a3e9:	mov    dl,0x87
  40a3eb:	mov    eax,ds:0x12fd16a9
  40a3f0:	mov    bl,0x31
  40a3f2:	es (bad) 
  40a3f4:	mov    ah,0x80
  40a3f6:	not    eax
  40a3f8:	cmp    al,0x8b
  40a3fa:	sub    cl,BYTE PTR [eax]
  40a3fc:	jle    0x40a43f
  40a3fe:	cdq    
  40a3ff:	or     BYTE PTR [eax],bh
  40a401:	idiv   BYTE PTR [esi]
  40a403:	and    al,0x26
  40a405:	pop    ebp
  40a406:	add    ah,dh
  40a408:	scas   al,BYTE PTR es:[edi]
  40a409:	or     al,bl
  40a40b:	add    cl,bl
  40a40d:	and    BYTE PTR es:[edx-0x1e],bh
  40a411:	pop    esi
  40a412:	nop
  40a413:	push   es
  40a414:	jno    0x40a470
  40a416:	in     eax,dx
  40a417:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a418:	or     ebx,esi
  40a41a:	les    ebx,FWORD PTR [esi+0x3c]
  40a41d:	leave  
  40a41e:	mov    bl,ah
  40a420:	mov    dl,0xb1
  40a422:	ins    BYTE PTR es:[edi],dx
  40a423:	ds sub ebx,edx
  40a426:	sub    eax,DWORD PTR [edi-0x12]
  40a429:	imul   ebp,DWORD PTR ds:0x6e9facee,0xf18dca13
  40a433:	xor    eax,DWORD PTR [edx-0x1b]
  40a436:	fcmovb st,st(5)
  40a438:	push   eax
  40a439:	xchg   edi,eax
  40a43a:	inc    edx
  40a43b:	push   ecx
  40a43c:	div    DWORD PTR [eax-0x351a181d]
  40a442:	aaa    
  40a443:	pusha  
  40a444:	jae    0x40a436
  40a446:	leave  
  40a447:	ins    BYTE PTR es:[edi],dx
  40a448:	in     al,0x54
  40a44a:	inc    esp
  40a44b:	nop
  40a44c:	inc    eax
  40a44d:	ss inc eax
  40a44f:	stc    
  40a450:	sbb    ecx,esp
  40a452:	(bad)  
  40a453:	mov    ?,WORD PTR [edx+0x3438999d]
  40a459:	pop    ebp
  40a45a:	nop
  40a45b:	test   eax,0x2a4a7781
  40a460:	xchg   edi,edi
  40a462:	dec    esp
  40a463:	push   ds
  40a464:	mov    ch,0x8b
  40a466:	popa   
  40a467:	fld    QWORD PTR [ecx-0x15]
  40a46a:	mov    dl,0x36
  40a46c:	sub    al,0x8
  40a46e:	push   ds
  40a46f:	aam    0x16
  40a471:	pop    ds
  40a472:	std    
  40a473:	cmp    al,0x86
  40a475:	rcl    DWORD PTR [ebx-0x7b],0x50
  40a479:	(bad)  
  40a47b:	or     eax,0x1956e12f
  40a480:	lea    esi,[ebp+0x6e]
  40a483:	test   eax,0xd374d36a
  40a488:	test   al,0x2e
  40a48a:	cmp    eax,0xb81dac85
  40a48f:	addr16 das 
  40a491:	dec    esp
  40a492:	arpl   bx,dx
  40a494:	xchg   ecx,eax
  40a495:	icebp  
  40a496:	jnp    0x40a4f2
  40a498:	mov    ds,WORD PTR [edi+edx*4]
  40a49b:	lahf   
  40a49c:	jo     0x40a4b5
  40a49e:	sub    al,0xf8
  40a4a0:	es in  al,dx
  40a4a2:	mov    cl,0xdd
  40a4a4:	cld    
  40a4a5:	inc    edx
  40a4a6:	daa    
  40a4a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a4a8:	into   
  40a4a9:	push   ebp
  40a4aa:	add    eax,0xbc485c04
  40a4af:	daa    
  40a4b0:	cmp    eax,0x4c685985
  40a4b5:	add    ebp,DWORD PTR [eax+0x58]
  40a4b8:	mov    dl,bh
  40a4ba:	xor    BYTE PTR [ebx],ah
  40a4bc:	lahf   
  40a4bd:	mov    bh,0x0
  40a4bf:	sub    bl,dl
  40a4c1:	mov    al,ds:0x4594a5f9
  40a4c6:	cmp    BYTE PTR ds:0xe5c83417,al
  40a4cc:	fisttp QWORD PTR [edi]
  40a4ce:	jge    0x40a455
  40a4d0:	pop    ecx
  40a4d1:	xchg   ecx,eax
  40a4d2:	sbb    BYTE PTR [edi+0x3d],ah
  40a4d5:	fidiv  WORD PTR [ebp-0x570146cc]
  40a4db:	mov    ah,0x79
  40a4dd:	sbb    DWORD PTR [ebx+esi*4-0x14c0b823],ebp
  40a4e4:	in     eax,dx
  40a4e5:	dec    ecx
  40a4e6:	add    DWORD PTR [edi],ecx
  40a4e8:	mov    ds:0x5b8fa7bb,al
  40a4ed:	xchg   BYTE PTR [ebp-0x544ca52b],ah
  40a4f3:	icebp  
  40a4f4:	jl     0x40a48b
  40a4f6:	mov    WORD PTR [eax+0x8],ss
  40a4f9:	xor    bh,BYTE PTR [ecx]
  40a4fb:	test   eax,0xf1a2b6e4
  40a500:	retf   
  40a501:	dec    eax
  40a502:	retf   0x42b6
  40a505:	jmp    0x40a537
  40a507:	or     ah,bh
  40a509:	leave  
  40a50a:	test   al,0xb2
  40a50c:	sub    esi,DWORD PTR [esi-0x49]
  40a50f:	gs jmp edx
  40a512:	mov    eax,ds:0x5d28bb5d
  40a517:	mov    ds:0x4241dcc6,eax
  40a51c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a51d:	fxch   st(3)
  40a520:	push   edi
  40a521:	lods   eax,DWORD PTR ds:[esi]
  40a522:	mov    ds:0xc64be0f6,eax
  40a527:	sti    
  40a528:	jnp    0x40a568
  40a52a:	push   ebp
  40a52b:	sub    DWORD PTR [ebx+0x4f32e5fe],ebp
  40a531:	inc    esp
  40a532:	pop    ecx
  40a533:	outs   dx,DWORD PTR ds:[esi]
  40a534:	jge    0x40a570
  40a536:	adc    DWORD PTR [eax],eax
  40a538:	xor    eax,0x790ac0fe
  40a53d:	xor    eax,0xc9232521
  40a542:	out    0xa8,al
  40a544:	cmp    DWORD PTR ds:0x441fa844,esp
  40a54a:	sub    dl,bh
  40a54c:	cli    
  40a54d:	clc    
  40a54e:	adc    al,0x23
  40a550:	imul   esi,DWORD PTR ds:0x8fc11c52,0xff97fa83
  40a55a:	push   0xffffffae
  40a55c:	jb     0x40a5c5
  40a55e:	sub    edx,edi
  40a560:	cmp    eax,0xf1a2e41
  40a565:	pop    esi
  40a566:	jns    0x40a4e9
  40a568:	lea    esp,[edx]
  40a56a:	mov    eax,0x31d8840e
  40a56f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a570:	adc    ebp,DWORD PTR [ebx]
  40a572:	es dec ebx
  40a574:	les    ebp,FWORD PTR [esi]
  40a576:	sub    BYTE PTR [ebx],bl
  40a578:	ficom  WORD PTR [ebx+0x41]
  40a57b:	ret    0x7dfd
  40a57e:	jmp    0xeaf8:0xceb97f50
  40a585:	add    al,0x1a
  40a587:	(bad)  
  40a588:	pop    esi
  40a589:	push   edx
  40a58a:	inc    eax
  40a58b:	add    DWORD PTR [ebx-0x74],esp
  40a58e:	ja     0x40a5be
  40a590:	xchg   edi,eax
  40a591:	stc    
  40a592:	fsubr  DWORD PTR [ebp+0x1b]
  40a595:	scas   eax,DWORD PTR es:[edi]
  40a596:	call   0xb6b4:0x588407c0
  40a59d:	gs loopne 0x40a5ed
  40a5a0:	imul   eax,DWORD PTR [edx-0xa],0xd6e0b7a8
  40a5a7:	push   edx
  40a5a8:	out    0x97,al
  40a5aa:	mov    al,BYTE PTR [ebx+ecx*2+0x783fc3eb]
  40a5b1:	dec    ebx
  40a5b2:	dec    esp
  40a5b3:	fidivr DWORD PTR [esi-0x48]
  40a5b6:	arpl   dx,bp
  40a5b8:	jnp    0x40a5a6
  40a5ba:	jnp    0x40a553
  40a5bc:	lock loope 0x40a62d
  40a5bf:	cli    
  40a5c0:	mov    ah,0x2f
  40a5c2:	fmul   QWORD PTR [edx]
  40a5c4:	bound  ebp,QWORD PTR ds:0x8a3ab2fd
  40a5ca:	push   ebx
  40a5cb:	xchg   DWORD PTR [edi],ebx
  40a5cd:	mov    dh,0x46
  40a5cf:	dec    esp
  40a5d0:	add    esp,edx
  40a5d2:	push   ecx
  40a5d3:	cmp    eax,0xb5aa291
  40a5d8:	sbb    DWORD PTR [edx+0x50d64e8f],0x31de86e8
  40a5e2:	adc    ebx,esp
  40a5e4:	inc    ebp
  40a5e5:	jne    0x40a636
  40a5e7:	rcl    BYTE PTR [eax],cl
  40a5e9:	out    0x81,al
  40a5eb:	jg     0x40a645
  40a5ed:	ror    BYTE PTR [ebp-0x7fb0ebdd],0x6e
  40a5f4:	jmp    0x1fbf:0x4080cfa6
  40a5fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5fc:	clc    
  40a5fd:	aad    0x1a
  40a5ff:	jle    0x40a676
  40a601:	fadd   DWORD PTR [edi]
  40a603:	test   al,0x2a
  40a605:	aaa    
  40a606:	push   ds
  40a607:	int3   
  40a608:	or     BYTE PTR [edi+ebp*2-0x4],bl
  40a60c:	(bad)  
  40a60e:	xchg   bl,al
  40a610:	mov    BYTE PTR [ebx],bh
  40a612:	xor    DWORD PTR [edx-0x1983a592],eax
  40a618:	xchg   ecx,eax
  40a619:	adc    eax,0x1ee43565
  40a61e:	int    0xed
  40a620:	arpl   WORD PTR [edx+0x76],bp
  40a623:	enter  0x7a27,0x90
  40a627:	aas    
  40a628:	les    eax,FWORD PTR [ecx+0x7f]
  40a62b:	sub    DWORD PTR [ecx],edx
  40a62d:	or     esi,DWORD PTR [edi+0x42dde69c]
  40a633:	icebp  
  40a634:	inc    esp
  40a635:	lock das 
  40a637:	cmp    al,0xcf
  40a639:	mov    bh,BYTE PTR [edx+0x540c01c1]
  40a63f:	push   esp
  40a640:	mov    ecx,0xfd85491f
  40a645:	and    ebx,DWORD PTR [esi-0x1d]
  40a648:	jmp    0x2a0d:0x966f81d9
  40a64f:	dec    ebp
  40a650:	add    DWORD PTR [edx+0x6a7610c9],eax
  40a656:	pop    eax
  40a657:	jno    0x40a6a1
  40a659:	adc    DWORD PTR [edi+0x2eb42fb8],esi
  40a65f:	cmp    esi,esi
  40a661:	adc    al,0x48
  40a663:	cmc    
  40a664:	xchg   DWORD PTR [edx+0x2a],eax
  40a667:	ins    DWORD PTR es:[edi],dx
  40a668:	scas   al,BYTE PTR es:[edi]
  40a669:	popa   
  40a66a:	push   esp
  40a66b:	stos   DWORD PTR es:[edi],eax
  40a66c:	and    eax,0xe0f036a
  40a671:	cdq    
  40a672:	xor    edx,ebp
  40a674:	jnp    0x40a62c
  40a676:	loop   0x40a6f4
  40a678:	shl    DWORD PTR [edi-0x3a],0x13
  40a67c:	nop
  40a67d:	mov    edi,0x512fc834
  40a682:	mov    edx,0x64a9de71
  40a687:	in     eax,0xab
  40a689:	push   es
  40a68a:	mov    bh,0x7d
  40a68c:	call   0x5815:0xb203258a
  40a693:	cmp    edi,DWORD PTR [ecx]
  40a695:	and    ebp,esp
  40a697:	out    0x75,al
  40a699:	push   edx
  40a69a:	add    ah,dh
  40a69c:	(bad)  
  40a69d:	out    0xd,eax
  40a69f:	rcr    DWORD PTR [ebx],0xb4
  40a6a2:	fld    TBYTE PTR [ebp+0x11]
  40a6a5:	mov    edx,0xa2caa8f4
  40a6aa:	sbb    DWORD PTR [esi+ecx*2-0x73],0xe35f84d2
  40a6b2:	fdivr  QWORD PTR [eax-0x52]
  40a6b5:	in     al,0x83
  40a6b7:	inc    eax
  40a6b8:	push   ds
  40a6b9:	lods   eax,DWORD PTR ds:[esi]
  40a6ba:	in     al,dx
  40a6bb:	xchg   edx,eax
  40a6bc:	dec    edi
  40a6bd:	xor    al,0x2a
  40a6bf:	and    ecx,ecx
  40a6c1:	inc    ebp
  40a6c2:	leave  
  40a6c3:	xor    ch,dh
  40a6c5:	or     dh,al
  40a6c7:	xor    al,ch
  40a6c9:	fwait
  40a6ca:	lds    ebp,FWORD PTR [ebx-0x18]
  40a6cd:	retf   
  40a6ce:	loope  0x40a744
  40a6d0:	dec    ebx
  40a6d1:	fild   DWORD PTR [eax]
  40a6d3:	scas   eax,DWORD PTR es:[edi]
  40a6d4:	call   0x24c2ff1b
  40a6d9:	mov    dl,0x9f
  40a6db:	popa   
  40a6dc:	out    0x2e,eax
  40a6de:	fsubr  QWORD PTR [ebx]
  40a6e0:	(bad)  
  40a6e1:	jbe    0x40a6f9
  40a6e3:	xor    ebp,DWORD PTR [esp+ebp*2]
  40a6e6:	inc    ecx
  40a6e7:	mov    bh,dl
  40a6e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6ea:	es pop esp
  40a6ec:	test   al,0x95
  40a6ee:	dec    DWORD PTR [eax+esi*8]
  40a6f1:	(bad)  
  40a6f3:	in     al,dx
  40a6f4:	fldenv [ebp-0x2e]
  40a6f7:	sti    
  40a6f8:	xchg   ecx,eax
  40a6f9:	dec    ecx
  40a6fa:	mov    ds:0xb12a015c,al
  40a6ff:	pop    ds
  40a700:	ret    
  40a701:	push   edx
  40a702:	stos   BYTE PTR es:[edi],al
  40a703:	or     ebp,ecx
  40a705:	shr    BYTE PTR [edx+esi*8+0x78],0xdd
  40a70a:	and    BYTE PTR [ecx+ebx*1-0x47],0xed
  40a70f:	sub    DWORD PTR [esi-0x57],ebp
  40a712:	mov    eax,esi
  40a714:	xor    al,0xbc
  40a716:	push   0x1447f0ce
  40a71b:	mov    ch,0xb2
  40a71d:	sbb    esi,DWORD PTR [esi+0x9b5df10]
  40a723:	sub    DWORD PTR [edi],0xffffffa1
  40a726:	xchg   edi,eax
  40a727:	push   edx
  40a728:	aam    0x84
  40a72a:	inc    edi
  40a72b:	int    0x7
  40a72d:	adc    eax,0xce83e831
  40a732:	push   ecx
  40a733:	pop    ss
  40a734:	retf   0xf785
  40a737:	in     eax,0x36
  40a739:	mov    al,cl
  40a73b:	push   eax
  40a73c:	push   ebx
  40a73d:	jae    0x40a701
  40a73f:	and    DWORD PTR [edx-0x380647ff],edi
  40a745:	inc    edi
  40a746:	mov    ch,0xad
  40a748:	cld    
  40a749:	xor    ah,ah
  40a74b:	pop    ecx
  40a74c:	pushf  
  40a74d:	pop    ecx
  40a74e:	inc    eax
  40a74f:	jmp    0xa452:0x7ef85e93
  40a756:	xor    ch,dh
  40a758:	jb     0x40a78f
  40a75a:	jl     0x40a76a
  40a75c:	mov    dl,0xf9
  40a75e:	mov    esp,0x582b663a
  40a763:	jmp    0x2707:0x3b7ff4e8
  40a76a:	sub    al,0xe8
  40a76c:	loop   0x40a748
  40a76e:	data16 jge 0x40a79c
  40a771:	dec    edi
  40a772:	jp     0x40a706
  40a774:	ja     0x40a746
  40a776:	outs   dx,BYTE PTR ds:[esi]
  40a777:	fsubrp st(7),st
  40a779:	xor    BYTE PTR ds:0x61e7c58c,ah
  40a77f:	rcl    eax,1
  40a781:	(bad)  
  40a782:	pop    ss
  40a783:	pop    esp
  40a784:	push   cs
  40a785:	mov    bl,0xbf
  40a787:	enter  0x7ede,0x79
  40a78b:	in     al,0xa7
  40a78d:	inc    esp
  40a78e:	(bad)  [ecx]
  40a790:	xor    BYTE PTR [eax-0x31],0xba
  40a794:	cld    
  40a795:	xchg   ebp,edx
  40a797:	lahf   
  40a798:	jmp    0xa3e0f0a9
  40a79d:	aam    0x4e
  40a79f:	cmp    ebx,ecx
  40a7a1:	or     al,0x52
  40a7a3:	lock cmp esp,DWORD PTR [esi]
  40a7a6:	shr    ah,1
  40a7a8:	inc    ecx
  40a7a9:	sahf   
  40a7aa:	div    BYTE PTR [edi+0x22]
  40a7ad:	mov    ebx,DWORD PTR [edi+ebx*4-0x1b]
  40a7b1:	inc    BYTE PTR [edx]
  40a7b3:	shr    BYTE PTR [esi],1
  40a7b5:	stos   DWORD PTR es:[edi],eax
  40a7b6:	mov    dh,0xb2
  40a7b8:	les    ebp,FWORD PTR [edi]
  40a7ba:	out    0x33,eax
  40a7bc:	cmp    eax,0x3d885298
  40a7c1:	mov    cl,0x9c
  40a7c3:	test   al,0xda
  40a7c5:	jae    0x40a83d
  40a7c7:	dec    ecx
  40a7c8:	adc    ebp,ebp
  40a7ca:	xchg   edi,eax
  40a7cb:	mov    bl,dh
  40a7cd:	hlt    
  40a7ce:	pop    ds
  40a7cf:	(bad)  
  40a7d0:	out    0xd8,eax
  40a7d2:	aam    0x81
  40a7d4:	or     al,0xe0
  40a7d6:	call   0x2fa8c133
  40a7db:	add    ebx,ecx
  40a7dd:	add    DWORD PTR [ecx],esp
  40a7df:	cmp    al,al
  40a7e1:	sub    eax,0xde5befa6
  40a7e6:	mov    ebx,ebx
  40a7e8:	aaa    
  40a7e9:	mov    dh,0x11
  40a7eb:	jp     0x40a7bb
  40a7ed:	mov    cl,0x94
  40a7ef:	mov    DWORD PTR [esi+0x720e319a],ecx
  40a7f5:	pop    esi
  40a7f6:	cdq    
  40a7f7:	push   ds
  40a7f8:	and    al,0x44
  40a7fa:	(bad)  
  40a7fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7fc:	dec    edi
  40a7fd:	inc    esp
  40a7fe:	clc    
  40a7ff:	and    DWORD PTR [ecx-0x3a],eax
  40a802:	aam    0x21
  40a804:	sbb    ebx,DWORD PTR [ecx+0x3b9cd647]
  40a80a:	mov    ah,BYTE PTR [esi+eax*8+0x1d]
  40a80e:	fcomp  st(2)
  40a810:	scas   al,BYTE PTR es:[edi]
  40a811:	inc    edx
  40a812:	cmp    al,0x7
  40a814:	fdiv   st(2),st
  40a816:	xchg   esi,eax
  40a817:	jne    0x40a7d2
  40a819:	popf   
  40a81a:	xor    ecx,eax
  40a81c:	loop   0x40a866
  40a81e:	and    bh,BYTE PTR [edi-0x3810fd50]
  40a824:	xchg   ebp,eax
  40a825:	popa   
  40a826:	and    esi,DWORD PTR [esp+esi*4]
  40a829:	scas   eax,DWORD PTR es:[edi]
  40a82a:	and    dl,0xe2
  40a82d:	xchg   BYTE PTR [edi-0x4d],ch
  40a830:	ds and al,0x54
  40a833:	mov    dh,0x93
  40a835:	ja     0x40a7de
  40a837:	dec    edx
  40a838:	dec    ecx
  40a839:	mov    esi,0x27711bae
  40a83e:	add    DWORD PTR [ecx-0x2dbb33c9],edx
  40a844:	mov    al,bh
  40a846:	lods   al,BYTE PTR gs:[esi]
  40a848:	inc    esp
  40a849:	mov    ah,0xe2
  40a84b:	mov    dl,0x5b
  40a84d:	pop    ebx
  40a84e:	arpl   bx,bx
  40a850:	cs push edx
  40a852:	(bad)  [edi]
  40a854:	dec    ebp
  40a855:	ss (bad) 
  40a857:	fsub   DWORD PTR [edi]
  40a859:	push   esi
  40a85a:	jge    0x40a871
  40a85c:	nop
  40a85d:	mov    al,ds:0x66ba8b82
  40a862:	loopne 0x40a7ef
  40a864:	inc    ebp
  40a865:	loopne 0x40a7f2
  40a867:	push   ebp
  40a868:	lock xor eax,esi
  40a86b:	lea    eax,[eax+edx*1+0x3272ef]
  40a872:	mov    DWORD PTR [ebp-0x10],eax
  40a875:	jmp    0x4018ca
  40a87a:	mov    ebx,DWORD PTR [ebp-0x3c]
  40a87d:	mov    eax,DWORD PTR [ebp+0xc]
  40a880:	xor    eax,esi
  40a882:	lea    ecx,[ecx+eax*1+0x3272ef]
  40a889:	lea    eax,[ecx-0x3272ef]
  40a88f:	xor    eax,esi
  40a891:	cmp    eax,0xf89c95b9
  40a896:	jne    0x40186e
  40a89c:	dec    DWORD PTR [ebp-0x34]
  40a89f:	jne    0x401862
  40a8a5:	mov    eax,DWORD PTR [ebp+0x8]
  40a8a8:	mov    ecx,DWORD PTR [ebp+0xc]
  40a8ab:	mov    edx,DWORD PTR [ebp+0x8]
  40a8ae:	xor    ecx,esi
  40a8b0:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272ef]
  40a8b7:	xor    eax,esi
  40a8b9:	mov    al,BYTE PTR [eax+ebx*1+0x3272ef]
  40a8c0:	xor    edx,esi
  40a8c2:	mov    BYTE PTR [edx+ebx*1+0x3272ef],cl
  40a8c9:	mov    ecx,DWORD PTR [ebp+0xc]
  40a8cc:	xor    ecx,esi
  40a8ce:	mov    BYTE PTR [ecx+ebx*1+0x3272ef],al
  40a8d5:	mov    eax,DWORD PTR [ebp+0xc]
  40a8d8:	xor    eax,esi
  40a8da:	add    eax,edi
  40a8dc:	pop    edi
  40a8dd:	pop    esi
  40a8de:	pop    ebx
  40a8df:	leave  
  40a8e0:	ret    0x8
  40a8e3:	mov    DWORD PTR ds:0x42a14f,0x31f7
  40a8ed:	xor    eax,eax
  40a8ef:	xor    DWORD PTR ds:0x42a133,0x42a16f
  40a8f9:	inc    eax
  40a8fa:	ret    
  40a8fb:	push   ebp
  40a8fc:	mov    ebp,esp
  40a8fe:	sub    esp,0x38
  40a901:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40a908:	push   ebx
  40a909:	mov    DWORD PTR [ebp-0xc],0xf89c85ba
  40a910:	add    eax,0x7451
  40a915:	mov    eax,DWORD PTR [ebp-0x4]
  40a918:	push   esi
  40a919:	adc    DWORD PTR ds:0x42a16f,0x11c9
  40a923:	mov    esi,0x75108a8
  40a928:	xor    eax,esi
  40a92a:	and    DWORD PTR ds:0x42a1cb,0x42a193
  40a934:	push   edi
  40a935:	mov    edi,DWORD PTR ds:0x42a1bf
  40a93b:	or     DWORD PTR ds:0x42a1cb,edi
  40a941:	mov    edi,0x3272ef
  40a946:	add    eax,edi
  40a948:	sub    DWORD PTR ds:0x42a1a7,0x1574
  40a952:	mov    DWORD PTR [ebp-0x1c],eax
  40a955:	mov    DWORD PTR ds:0x42a16b,0x10
  40a95f:	cmp    DWORD PTR ds:0x42a16b,0x0
  40a966:	je     0x40a99e
  40a96c:	cmp    DWORD PTR ds:0x42a16b,0x12
  40a973:	jle    0x40a99e
  40a979:	jmp    0x40a98e
  40a97e:	push   0x8e23
  40a983:	push   0x3392
  40a988:	call   DWORD PTR ds:0x42a2c7
  40a98e:	mov    eax,ds:0x42a16b
  40a993:	dec    eax
  40a994:	mov    ds:0x42a16b,eax
  40a999:	jmp    0x40a95f
  40a99e:	mov    eax,DWORD PTR [ebp+0x14]
  40a9a1:	test   eax,eax
  40a9a3:	mov    DWORD PTR ds:0x42a19b,0x1a9e
  40a9ad:	je     0x40aa33
  40a9b3:	mov    DWORD PTR ds:0x42a17f,0x1e
  40a9bd:	cmp    DWORD PTR ds:0x42a17f,0x0
  40a9c4:	je     0x40aa1b
  40a9ca:	cmp    DWORD PTR ds:0x42a17f,0xc
  40a9d1:	jb     0x40aa1b
  40a9d7:	jmp    0x40a9ef
  40a9dc:	push   DWORD PTR [ebp-0xc]
  40a9df:	push   0x42a1af
  40a9e4:	push   0x400000
  40a9e9:	call   DWORD PTR ds:0x42a2cf
  40a9ef:	cmp    DWORD PTR ds:0x42a17f,0xd
  40a9f6:	jne    0x40aa09
  40a9fc:	mov    ebx,DWORD PTR ds:0x42a17f
  40aa02:	dec    ebx
  40aa03:	mov    DWORD PTR ds:0x42a17f,ebx
  40aa09:	mov    ebx,DWORD PTR ds:0x42a17f
  40aa0f:	dec    ebx
  40aa10:	mov    DWORD PTR ds:0x42a17f,ebx
  40aa16:	jmp    0x40a9bd
  40aa1b:	mov    eax,DWORD PTR [ebp+0x14]
  40aa1e:	or     ebx,0x6757
  40aa24:	mov    eax,DWORD PTR [eax]
  40aa26:	xor    DWORD PTR ds:0x42a127,0x5a4b
  40aa30:	mov    DWORD PTR [ebp-0x1c],eax
  40aa33:	mov    eax,DWORD PTR [ebp-0x4]
  40aa36:	dec    DWORD PTR ds:0x42a18f
  40aa3c:	xor    eax,esi
  40aa3e:	add    eax,edi
  40aa40:	and    DWORD PTR ds:0x42a18f,0x0
  40aa4a:	jmp    0x40aa5c
  40aa4f:	mov    ebx,DWORD PTR ds:0x42a18f
  40aa55:	inc    ebx
  40aa56:	mov    DWORD PTR ds:0x42a18f,ebx
  40aa5c:	cmp    DWORD PTR ds:0x42a18f,0x13
  40aa63:	jae    0x40aaaa
  40aa69:	cmp    DWORD PTR ds:0x42a18f,0x4
  40aa70:	jb     0x40aaaa
  40aa76:	jmp    0x40aa8b
  40aa7b:	push   0x42a127
  40aa80:	push   0x37a6
  40aa85:	call   DWORD PTR ds:0x42a2d3
  40aa8b:	cmp    DWORD PTR ds:0x42a18f,0x3
  40aa92:	jne    0x40aaa5
  40aa98:	mov    ebx,DWORD PTR ds:0x42a18f
  40aa9e:	inc    ebx
  40aa9f:	mov    DWORD PTR ds:0x42a18f,ebx
  40aaa5:	jmp    0x40aa4f
  40aaaa:	mov    DWORD PTR [ebp-0x8],eax
  40aaad:	mov    ebx,DWORD PTR ds:0x42a1e7
  40aab3:	mov    ebx,DWORD PTR [ebx]
  40aab5:	xor    DWORD PTR ds:0x42a17f,ebx
  40aabb:	mov    eax,DWORD PTR [ebp-0xc]
  40aabe:	mov    DWORD PTR ds:0x42a1cb,0x14
  40aac8:	cmp    DWORD PTR ds:0x42a1cb,0x0
  40aacf:	je     0x40aaff
  40aad5:	cmp    DWORD PTR ds:0x42a1cb,0x16
  40aadc:	jbe    0x40aaff
  40aae2:	jmp    0x40aaed
  40aae7:	call   DWORD PTR ds:0x42a293
  40aaed:	mov    ebx,DWORD PTR ds:0x42a1cb
  40aaf3:	dec    ebx
  40aaf4:	mov    DWORD PTR ds:0x42a1cb,ebx
  40aafa:	jmp    0x40aac8
  40aaff:	xor    eax,esi
  40ab01:	movzx  ebx,BYTE PTR ds:0x42a17b
  40ab08:	adc    ebx,DWORD PTR ds:0x42a1af
  40ab0e:	mov    DWORD PTR ds:0x42a17b,ebx
  40ab14:	add    eax,edi
  40ab16:	mov    DWORD PTR ds:0x42a16f,0x16
  40ab20:	cmp    DWORD PTR ds:0x42a16f,0x0
  40ab27:	je     0x40ab6b
  40ab2d:	cmp    DWORD PTR ds:0x42a16f,0x1e
  40ab34:	jbe    0x40ab6b
  40ab3a:	jmp    0x40ab57
  40ab3f:	push   DWORD PTR [ebp-0x1c]
  40ab42:	push   0x2f0e
  40ab47:	push   0x429025
  40ab4c:	push   0x400000
  40ab51:	call   DWORD PTR ds:0x42a297
  40ab57:	xor    ebx,ebx
  40ab59:	add    ebx,DWORD PTR ds:0x42a16f
  40ab5f:	dec    ebx
  40ab60:	mov    DWORD PTR ds:0x42a16f,ebx
  40ab66:	jmp    0x40ab20
  40ab6b:	mov    DWORD PTR [ebp-0x24],eax
  40ab6e:	sub    DWORD PTR ds:0x42a183,0x244c
  40ab78:	mov    eax,DWORD PTR [ebp-0x4]
  40ab7b:	xor    eax,esi
  40ab7d:	neg    DWORD PTR ds:0x42a1c7
  40ab83:	add    eax,edi
  40ab85:	and    DWORD PTR ds:0x42a18b,0x0
  40ab8f:	jmp    0x40aba1
  40ab94:	mov    ebx,DWORD PTR ds:0x42a18b
  40ab9a:	inc    ebx
  40ab9b:	mov    DWORD PTR ds:0x42a18b,ebx
  40aba1:	cmp    DWORD PTR ds:0x42a18b,0x19
  40aba8:	jae    0x40abe5
  40abae:	cmp    DWORD PTR ds:0x42a18b,0xf
  40abb5:	jb     0x40abe5
  40abbb:	jmp    0x40abc6
  40abc0:	call   DWORD PTR ds:0x42a29b
  40abc6:	cmp    DWORD PTR ds:0x42a18b,0xe
  40abcd:	jne    0x40abe0
  40abd3:	mov    ebx,DWORD PTR ds:0x42a18b
  40abd9:	inc    ebx
  40abda:	mov    DWORD PTR ds:0x42a18b,ebx
  40abe0:	jmp    0x40ab94
  40abe5:	mov    DWORD PTR [ebp-0x30],eax
  40abe8:	mov    ebx,DWORD PTR [ebp-0x4]
  40abeb:	and    DWORD PTR ds:0x42a13f,ecx
  40abf1:	xor    ebx,esi
  40abf3:	and    DWORD PTR ds:0x42a17f,0x0
  40abfd:	jmp    0x40ac0d
  40ac02:	mov    eax,ds:0x42a17f
  40ac07:	inc    eax
  40ac08:	mov    ds:0x42a17f,eax
  40ac0d:	cmp    DWORD PTR ds:0x42a17f,0x13
  40ac14:	jae    0x40ac61
  40ac1a:	cmp    DWORD PTR ds:0x42a17f,0x6
  40ac21:	jb     0x40ac61
  40ac27:	jmp    0x40ac44
  40ac2c:	push   0x65b7
  40ac31:	push   0x437f
  40ac36:	push   0x4291f1
  40ac3b:	push   DWORD PTR [ebp-0x1c]
  40ac3e:	call   DWORD PTR ds:0x42a2a3
  40ac44:	cmp    DWORD PTR ds:0x42a17f,0x5
  40ac4b:	jne    0x40ac5c
  40ac51:	mov    eax,ds:0x42a17f
  40ac56:	inc    eax
  40ac57:	mov    ds:0x42a17f,eax
  40ac5c:	jmp    0x40ac02
  40ac61:	add    ebx,edi
  40ac63:	mov    DWORD PTR ds:0x42a147,0x13
  40ac6d:	cmp    DWORD PTR ds:0x42a147,0x0
  40ac74:	je     0x40aca2
  40ac7a:	cmp    DWORD PTR ds:0x42a147,0x18
  40ac81:	jg     0x40aca2
  40ac87:	jmp    0x40ac92
  40ac8c:	call   DWORD PTR ds:0x42a2a7
  40ac92:	mov    eax,ds:0x42a147
  40ac97:	dec    eax
  40ac98:	mov    ds:0x42a147,eax
  40ac9d:	jmp    0x40ac6d
  40aca2:	mov    eax,DWORD PTR [ebp-0x24]
  40aca5:	or     DWORD PTR ds:0x42a177,0x6e45
  40acaf:	sub    eax,edi
  40acb1:	sub    DWORD PTR ds:0x42a143,0x42a193
  40acbb:	lea    ecx,[ebx-0x3272ef]
  40acc1:	xor    eax,esi
  40acc3:	xor    ecx,esi
  40acc5:	mov    DWORD PTR ds:0x42a1b7,0x526e
  40accf:	cmp    ecx,eax
  40acd1:	je     0x40aeaf
  40acd7:	or     DWORD PTR ds:0x42a127,0x176b
  40ace1:	mov    eax,DWORD PTR [ebp-0x4]
  40ace4:	xor    eax,esi
  40ace6:	add    DWORD PTR ds:0x42a14f,0x42a14b
  40acf0:	add    eax,edi
  40acf2:	cmp    ebx,eax
  40acf4:	mov    DWORD PTR ds:0x42a1bf,0x7cb
  40acfe:	jne    0x40ae8c
  40ad04:	xor    DWORD PTR ds:0x42a163,0x47ee
  40ad0e:	push   DWORD PTR [ebp+0x8]
  40ad11:	not    DWORD PTR ds:0x42a177
  40ad17:	call   0x424e09
  40ad1c:	mov    DWORD PTR [ebp-0x14],eax
  40ad1f:	and    DWORD PTR ds:0x42a163,0x0
  40ad29:	mov    ecx,DWORD PTR ds:0x42a163
  40ad2f:	inc    ecx
  40ad30:	mov    DWORD PTR ds:0x42a163,ecx
  40ad36:	cmp    DWORD PTR ds:0x42a163,0x9
  40ad3d:	jle    0x40ad82
  40ad43:	jmp    0x40ad5b
  40ad48:	push   0x1fb9
  40ad4d:	push   0x42a1c3
  40ad52:	push   DWORD PTR [ebp-0x28]
  40ad55:	call   DWORD PTR ds:0x42a2ab
  40ad5b:	cmp    DWORD PTR ds:0x42a163,0x8
  40ad62:	jne    0x40ad75
  40ad68:	mov    ecx,DWORD PTR ds:0x42a163
  40ad6e:	inc    ecx
  40ad6f:	mov    DWORD PTR ds:0x42a163,ecx
  40ad75:	cmp    DWORD PTR ds:0x42a163,0x13
  40ad7c:	jb     0x40ad29
  40ad82:	mov    eax,DWORD PTR [ebp-0x4]
  40ad85:	sub    ecx,DWORD PTR ds:0x42a1af
  40ad8b:	mov    ecx,DWORD PTR [ebp-0x14]
  40ad8e:	xor    DWORD PTR ds:0x42a137,0x508b
  40ad98:	xor    eax,esi
  40ad9a:	sub    DWORD PTR ds:0x42a177,0x58b3
  40ada4:	add    eax,edi
  40ada6:	mov    DWORD PTR ds:0x42a1cf,0x3d63
  40adb0:	cmp    ecx,eax
  40adb2:	mov    DWORD PTR ds:0x42a15f,0x56c5
  40adbc:	je     0x40af1a
  40adc2:	sub    DWORD PTR ds:0x42a15f,0x42a183
  40adcc:	push   DWORD PTR [ebp-0x14]
  40adcf:	add    DWORD PTR ds:0x42a147,0x42a193
  40add9:	push   DWORD PTR [ebp+0x8]
  40addc:	call   0x424f0a
  40ade1:	mov    DWORD PTR [ebp-0x14],eax
  40ade4:	and    DWORD PTR ds:0x42a1af,0x0
  40adee:	mov    ecx,DWORD PTR ds:0x42a1af
  40adf4:	inc    ecx
  40adf5:	mov    DWORD PTR ds:0x42a1af,ecx
  40adfb:	cmp    DWORD PTR ds:0x42a1af,0xd
  40ae02:	ja     0x40ae48
  40ae08:	jmp    0x40ae21
  40ae0d:	push   0x24a8
  40ae12:	push   DWORD PTR [ebp-0x1c]
  40ae15:	push   DWORD PTR [ebp-0x14]
  40ae18:	push   DWORD PTR [ebp-0x10]
  40ae1b:	call   DWORD PTR ds:0x42a2af
  40ae21:	cmp    DWORD PTR ds:0x42a1af,0xc
  40ae28:	jne    0x40ae3b
  40ae2e:	mov    ecx,DWORD PTR ds:0x42a1af
  40ae34:	inc    ecx
  40ae35:	mov    DWORD PTR ds:0x42a1af,ecx
  40ae3b:	cmp    DWORD PTR ds:0x42a1af,0x18
  40ae42:	jb     0x40adee
  40ae48:	mov    eax,DWORD PTR [ebp-0x4]
  40ae4b:	mov    ecx,DWORD PTR [ebp-0x14]
  40ae4e:	xor    eax,esi
  40ae50:	add    eax,edi
  40ae52:	cmp    ecx,eax
  40ae54:	je     0x40af1a
  40ae5a:	mov    eax,DWORD PTR [ebp-0x14]
  40ae5d:	mov    eax,DWORD PTR [eax+0x18]
  40ae60:	mov    DWORD PTR [ebp-0x24],eax
  40ae63:	mov    eax,DWORD PTR [ebp-0x14]
  40ae66:	mov    ecx,DWORD PTR [ebp+0x8]
  40ae69:	add    ecx,DWORD PTR [eax+0x20]
  40ae6c:	mov    DWORD PTR [ebp-0x2c],ecx
  40ae6f:	mov    eax,DWORD PTR [ebp-0x14]
  40ae72:	mov    ecx,DWORD PTR [ebp+0x8]
  40ae75:	add    ecx,DWORD PTR [eax+0x24]
  40ae78:	mov    DWORD PTR [ebp-0x34],ecx
  40ae7b:	mov    eax,DWORD PTR [ebp-0x14]
  40ae7e:	mov    ecx,DWORD PTR [ebp+0x8]
  40ae81:	add    ecx,DWORD PTR [eax+0x1c]
  40ae84:	mov    DWORD PTR [ebp-0x14],ecx
  40ae87:	jmp    0x40aee2
  40ae8c:	mov    eax,DWORD PTR [ebp-0x2c]
  40ae8f:	mov    ecx,DWORD PTR [ebp+0x8]
  40ae92:	add    ecx,DWORD PTR [eax+ebx*4]
  40ae95:	mov    DWORD PTR [ebp-0x28],ecx
  40ae98:	mov    eax,DWORD PTR [ebp-0x4]
  40ae9b:	mov    ecx,DWORD PTR [ebp-0x28]
  40ae9e:	xor    eax,esi
  40aea0:	add    eax,edi
  40aea2:	cmp    ecx,eax
  40aea4:	je     0x40aee2
  40aeaa:	jmp    0x40aed3
  40aeaf:	mov    eax,DWORD PTR [ebp-0x4]
  40aeb2:	mov    ecx,DWORD PTR [ebp-0x8]
  40aeb5:	xor    eax,esi
  40aeb7:	add    eax,edi
  40aeb9:	cmp    ecx,eax
  40aebb:	mov    eax,DWORD PTR [ebp-0x4]
  40aebe:	je     0x40af1d
  40aec4:	mov    ecx,DWORD PTR [ebp-0x30]
  40aec7:	xor    eax,esi
  40aec9:	add    eax,edi
  40aecb:	cmp    ecx,eax
  40aecd:	je     0x40af26
  40aed3:	lea    eax,[ebp-0x8]
  40aed6:	push   eax
  40aed7:	push   DWORD PTR [ebp-0x28]
  40aeda:	push   DWORD PTR [ebp+0xc]
  40aedd:	call   0x40b11d
  40aee2:	mov    eax,DWORD PTR [ebp-0x4]
  40aee5:	mov    ecx,DWORD PTR [ebp-0x8]
  40aee8:	xor    eax,esi
  40aeea:	add    eax,edi
  40aeec:	cmp    ecx,eax
  40aeee:	je     0x40af09
  40aef4:	mov    eax,DWORD PTR [ebp-0x34]
  40aef7:	movzx  eax,WORD PTR [eax+ebx*2]
  40aefb:	mov    ecx,DWORD PTR [ebp-0x14]
  40aefe:	mov    eax,DWORD PTR [ecx+eax*4]
  40af01:	mov    DWORD PTR [ebp-0x38],eax
  40af04:	jmp    0x40aeaf
  40af09:	mov    eax,DWORD PTR [ebp-0xc]
  40af0c:	xor    eax,esi
  40af0e:	lea    ebx,[ebx+eax*1+0x3272ef]
  40af15:	jmp    0x40ac63
  40af1a:	mov    eax,DWORD PTR [ebp-0x4]
  40af1d:	xor    eax,esi
  40af1f:	add    eax,edi
  40af21:	jmp    0x40b045
  40af26:	mov    eax,DWORD PTR [ebp-0x38]
  40af29:	add    eax,DWORD PTR [ebp+0x8]
  40af2c:	mov    DWORD PTR [ebp-0x18],eax
  40af2f:	mov    eax,DWORD PTR [ebp-0x1c]
  40af32:	test   eax,eax
  40af34:	je     0x40afce
  40af3a:	mov    DWORD PTR [ebp-0x20],0x0
  40af41:	push   0x3
  40af43:	xor    edx,edx
  40af45:	pop    edx
  40af46:	add    edx,0x8
  40af49:	push   edx
  40af4a:	pop    ecx
  40af4b:	push   0x6
  40af4d:	dec    ecx
  40af4e:	pop    ebx
  40af4f:	dec    ebx
  40af50:	xchg   ebx,ecx
  40af52:	sub    ebx,ecx
  40af54:	xchg   ebx,ecx
  40af56:	dec    ecx
  40af57:	mov    eax,DWORD PTR [ebp-0x1c]
  40af5a:	imul   eax,ecx
  40af5d:	sub    esp,eax
  40af5f:	mov    DWORD PTR [ebp-0x20],esp
  40af62:	mov    eax,DWORD PTR [ebp-0x4]
  40af65:	xor    eax,esi
  40af67:	add    eax,edi
  40af69:	jmp    0x40afa7
  40af6e:	mov    ecx,DWORD PTR [ebp-0xc]
  40af71:	mov    eax,DWORD PTR [ebp+0x8]
  40af74:	mov    edx,DWORD PTR [ebp+0x14]
  40af77:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40af7b:	xor    ecx,esi
  40af7d:	add    ecx,edi
  40af7f:	xor    edx,edx
  40af81:	div    ecx
  40af83:	mov    ecx,DWORD PTR [ebp-0x4]
  40af86:	xor    ecx,esi
  40af88:	lea    eax,[ecx+eax*1+0x3272ef]
  40af8f:	mov    ecx,DWORD PTR [ebp+0x8]
  40af92:	mov    edx,DWORD PTR [ebp-0x20]
  40af95:	mov    DWORD PTR [edx+ecx*4],eax
  40af98:	mov    eax,DWORD PTR [ebp-0xc]
  40af9b:	mov    ecx,DWORD PTR [ebp+0x8]
  40af9e:	xor    eax,esi
  40afa0:	lea    eax,[eax+ecx*1+0x3272ef]
  40afa7:	mov    DWORD PTR [ebp+0x8],eax
  40afaa:	mov    eax,DWORD PTR [ebp-0xc]
  40afad:	mov    ecx,DWORD PTR [ebp+0x14]
  40afb0:	xor    eax,esi
  40afb2:	add    eax,edi
  40afb4:	imul   eax,DWORD PTR [ecx]
  40afb7:	mov    ecx,DWORD PTR [ebp-0x4]
  40afba:	mov    edx,DWORD PTR [ebp+0x8]
  40afbd:	xor    ecx,esi
  40afbf:	lea    ecx,[ecx+edx*1+0x3272ef]
  40afc6:	cmp    ecx,eax
  40afc8:	jne    0x40af6e
  40afce:	mov    eax,DWORD PTR [ebp-0x4]
  40afd1:	xor    eax,esi
  40afd3:	add    eax,edi
  40afd5:	mov    DWORD PTR [ebp-0x10],eax
  40afd8:	mov    ebx,0x65655
  40afdd:	add    ebx,0x3234
  40afe3:	xchg   ebx,esi
  40afe5:	xor    ebx,ebx
  40afe7:	push   esi
  40afe8:	mov    esi,ebx
  40afea:	pop    ebx
  40afeb:	mov    edx,esi
  40afed:	add    ebx,0x1002
  40aff3:	lea    eax,[ebp-0x18]
  40aff6:	add    edx,eax
  40aff8:	add    edx,0x5
  40affb:	push   edx
  40affc:	inc    esi
  40affd:	pop    ecx
  40affe:	dec    ecx
  40afff:	xchg   ecx,eax
  40b000:	dec    eax
  40b001:	xchg   ecx,eax
  40b002:	dec    ecx
  40b003:	xchg   ecx,edx
  40b005:	dec    edx
  40b006:	push   edx
  40b007:	mov    edx,ebx
  40b009:	pop    ebx
  40b00a:	dec    ebx
  40b00b:	call   DWORD PTR [ebx]
  40b00d:	cmp    DWORD PTR [ebp+0x10],esi
  40b010:	je     0x40b031
  40b016:	xchg   edx,eax
  40b017:	push   0xc
  40b019:	pop    ecx
  40b01a:	dec    ecx
  40b01b:	push   0x3
  40b01d:	pop    ebx
  40b01e:	inc    ebx
  40b01f:	xchg   ebx,ecx
  40b021:	inc    ecx
  40b022:	sub    ebx,ecx
  40b024:	xchg   ebx,ecx
  40b026:	dec    ecx
  40b027:	dec    ecx
  40b028:	mov    eax,DWORD PTR [ebp-0x1c]
  40b02b:	imul   eax,ecx
  40b02e:	add    esp,eax
  40b030:	xchg   edx,eax
  40b031:	push   eax
  40b032:	xor    ebx,ebx
  40b034:	mov    edx,esp
  40b036:	dec    edx
  40b037:	inc    ebx
  40b038:	add    ebx,DWORD PTR [edx+ebx*1]
  40b03b:	dec    ebx
  40b03c:	xor    edx,edx
  40b03e:	add    DWORD PTR [ebp-0x10],ebx
  40b041:	pop    ebx
  40b042:	mov    eax,DWORD PTR [ebp-0x10]
  40b045:	pop    edi
  40b046:	pop    esi
  40b047:	pop    ebx
  40b048:	leave  
  40b049:	ret    0x10
  40b04c:	push   ebp
  40b04d:	mov    ebp,esp
  40b04f:	push   ecx
  40b050:	and    DWORD PTR ds:0x42a13f,0x0
  40b05a:	mov    ecx,DWORD PTR ds:0x42a13f
  40b060:	inc    ecx
  40b061:	mov    DWORD PTR ds:0x42a13f,ecx
  40b067:	cmp    DWORD PTR ds:0x42a13f,0x9
  40b06e:	jl     0x40b0b8
  40b074:	jmp    0x40b091
  40b079:	push   0x2d70
  40b07e:	push   DWORD PTR [ebp-0x14]
  40b081:	push   0x42a187
  40b086:	push   0x2ee9
  40b08b:	call   DWORD PTR ds:0x42a2b3
  40b091:	cmp    DWORD PTR ds:0x42a13f,0x8
  40b098:	jne    0x40b0ab
  40b09e:	mov    ecx,DWORD PTR ds:0x42a13f
  40b0a4:	inc    ecx
  40b0a5:	mov    DWORD PTR ds:0x42a13f,ecx
  40b0ab:	cmp    DWORD PTR ds:0x42a13f,0x1b
  40b0b2:	jb     0x40b05a
  40b0b8:	mov    DWORD PTR [ebp-0x4],0xf89c85bd
  40b0bf:	mov    eax,DWORD PTR [ebp-0x4]
  40b0c2:	mov    edx,DWORD PTR [ebp+0x10]
  40b0c5:	and    ecx,DWORD PTR ds:0x42a1a7
  40b0cb:	mov    ecx,0x75108a8
  40b0d0:	or     DWORD PTR ds:0x42a187,0x42a183
  40b0da:	xor    eax,ecx
  40b0dc:	add    eax,0x3272ef
  40b0e1:	mov    DWORD PTR [edx],eax
  40b0e3:	mov    eax,DWORD PTR [ebp+0xc]
  40b0e6:	xor    eax,ecx
  40b0e8:	push   esi
  40b0e9:	mov    esi,DWORD PTR [ebp+0x10]
  40b0ec:	mov    edx,0x3272ef
  40b0f1:	add    eax,edx
  40b0f3:	mov    DWORD PTR [esi+0x4],eax
  40b0f6:	mov    eax,DWORD PTR [ebp+0x14]
  40b0f9:	mov    esi,DWORD PTR [ebp+0x10]
  40b0fc:	mov    DWORD PTR [esi+0x8],eax
  40b0ff:	mov    eax,DWORD PTR [ebp+0x18]
  40b102:	mov    esi,DWORD PTR [ebp+0x10]
  40b105:	mov    DWORD PTR [esi+0xc],eax
  40b108:	mov    eax,DWORD PTR [ebp+0x1c]
  40b10b:	mov    esi,DWORD PTR [ebp+0x10]
  40b10e:	mov    DWORD PTR [esi+0x10],eax
  40b111:	mov    eax,DWORD PTR [ebp+0x8]
  40b114:	xor    eax,ecx
  40b116:	add    eax,edx
  40b118:	pop    esi
  40b119:	leave  
  40b11a:	ret    0x18
  40b11d:	push   ebp
  40b11e:	mov    ebp,esp
  40b120:	sub    esp,0x9c
  40b126:	mov    ecx,DWORD PTR [ebp+0x8]
  40b129:	and    DWORD PTR ds:0x42a17f,0x0
  40b133:	mov    eax,ds:0x42a17f
  40b138:	inc    eax
  40b139:	mov    ds:0x42a17f,eax
  40b13e:	cmp    DWORD PTR ds:0x42a17f,0x9
  40b145:	jbe    0x40b18f
  40b14b:	jmp    0x40b16a
  40b150:	push   0x42a15f
  40b155:	push   0x468f
  40b15a:	push   0x42900e
  40b15f:	push   0x4290e5
  40b164:	call   DWORD PTR ds:0x42a2b7
  40b16a:	cmp    DWORD PTR ds:0x42a17f,0x8
  40b171:	jne    0x40b182
  40b177:	mov    eax,ds:0x42a17f
  40b17c:	inc    eax
  40b17d:	mov    ds:0x42a17f,eax
  40b182:	cmp    DWORD PTR ds:0x42a17f,0x13
  40b189:	jb     0x40b133
  40b18f:	mov    eax,0x8a96
  40b194:	xor    ax,WORD PTR [ecx+0x20]
  40b198:	add    DWORD PTR ds:0x42a18f,ecx
  40b19e:	mov    ecx,0x3b59
  40b1a3:	adc    DWORD PTR ds:0x42a1af,0x457a
  40b1ad:	add    ax,cx
  40b1b0:	movzx  eax,ax
  40b1b3:	mov    DWORD PTR ds:0x42a16b,0x1b
  40b1bd:	cmp    DWORD PTR ds:0x42a16b,0x0
  40b1c4:	je     0x40b1f7
  40b1ca:	cmp    DWORD PTR ds:0x42a16b,0x1f
  40b1d1:	ja     0x40b1f7
  40b1d7:	jmp    0x40b1e5
  40b1dc:	push   DWORD PTR [ebp-0x1c]
  40b1df:	call   DWORD PTR ds:0x42a2bf
  40b1e5:	mov    ecx,DWORD PTR ds:0x42a16b
  40b1eb:	dec    ecx
  40b1ec:	mov    DWORD PTR ds:0x42a16b,ecx
  40b1f2:	jmp    0x40b1bd
  40b1f7:	mov    DWORD PTR [ebp-0x10],eax
  40b1fa:	jmp    0x40d57f
  40b1ff:	inc    ecx
  40b200:	pop    edx
  40b201:	cmp    edi,esi
  40b203:	and    DWORD PTR [edi-0x78343779],edx
  40b209:	dec    ebp
  40b20a:	pop    eax
  40b20b:	outs   dx,BYTE PTR ds:[esi]
  40b20c:	add    al,0x56
  40b20e:	sbb    al,0x36
  40b210:	cmc    
  40b211:	jp     0x40b28d
  40b213:	adc    bl,BYTE PTR [edi+0x7a]
  40b216:	jp     0x40b1fb
  40b218:	cmp    ebx,DWORD PTR [edi-0x7dab839a]
  40b21e:	sar    BYTE PTR [edx],1
  40b220:	fsubr  QWORD PTR es:[edx]
  40b223:	ret    0xb8da
  40b226:	push   eax
  40b227:	ficomp DWORD PTR [ecx]
  40b229:	sub    bl,al
  40b22b:	icebp  
  40b22c:	mov    ecx,DWORD PTR [ebp+0x1e]
  40b22f:	loopne 0x40b25e
  40b231:	or     BYTE PTR [ebx-0x15],cl
  40b234:	and    BYTE PTR [edx],0xc6
  40b237:	bound  esp,QWORD PTR [ebx]
  40b239:	adc    al,0x7f
  40b23b:	mov    ebx,DWORD PTR [eax-0x2f]
  40b23e:	xor    ah,BYTE PTR [ecx-0x11]
  40b241:	xor    esi,DWORD PTR [eax+0x4b7fdf1e]
  40b247:	dec    ebx
  40b248:	outs   dx,DWORD PTR ds:[esi]
  40b249:	inc    ecx
  40b24a:	jmp    0x5275:0x2c2a7d5e
  40b251:	cmp    DWORD PTR [ebx],0xc34600e2
  40b257:	loop   0x40b268
  40b259:	dec    ecx
  40b25a:	push   0xfffffff1
  40b25c:	retf   
  40b25d:	into   
  40b25e:	pop    ss
  40b25f:	clc    
  40b260:	fwait
  40b261:	cmp    BYTE PTR [ebx+eiz*1-0x2ef20117],0x66
  40b269:	dec    esi
  40b26a:	sti    
  40b26b:	mov    bh,0xde
  40b26d:	push   eax
  40b26e:	mov    dl,BYTE PTR gs:[edx]
  40b271:	imul   edi,ebp,0x7ef13be3
  40b277:	call   0x239fc7d7
  40b27c:	out    0x4a,al
  40b27e:	lds    ebp,FWORD PTR [esp+esi*2-0x13]
  40b282:	pop    ss
  40b283:	hlt    
  40b284:	rcr    BYTE PTR [esi-0x71c6da64],0xc8
  40b28b:	fcom   DWORD PTR [ebx]
  40b28d:	jno    0x40b235
  40b28f:	stos   DWORD PTR es:[edi],eax
  40b290:	lds    edx,FWORD PTR [esi]
  40b292:	lods   al,BYTE PTR ds:[esi]
  40b293:	mov    bl,0x2
  40b295:	pop    ebx
  40b296:	loop   0x40b2b5
  40b298:	jge    0x40b259
  40b29a:	jne    0x40b2fb
  40b29c:	add    DWORD PTR [ecx-0x38],eax
  40b29f:	cmp    al,0xe2
  40b2a1:	jge    0x40b248
  40b2a3:	dec    eax
  40b2a4:	(bad)  
  40b2a5:	cwde   
  40b2a6:	das    
  40b2a7:	cmp    si,WORD PTR ds:0xa574035b
  40b2ae:	out    0xf1,al
  40b2b0:	lds    eax,FWORD PTR ds:0xa5ffb2cf
  40b2b6:	add    DWORD PTR [edx-0x18],ebp
  40b2b9:	shl    dl,cl
  40b2bb:	(bad)  
  40b2bd:	ror    DWORD PTR [ecx-0x6dc50cf],0xa
  40b2c4:	call   0x2ef6c97f
  40b2c9:	push   esi
  40b2ca:	push   esp
  40b2cb:	xor    BYTE PTR ds:[ebp+0x1834cebe],ah
  40b2d2:	sbb    eax,0xc16dc73b
  40b2d7:	mov    dl,0xe6
  40b2d9:	int    0xcd
  40b2db:	ja     0x40b297
  40b2dd:	aad    0x39
  40b2df:	adc    dl,BYTE PTR [edx+0x4c]
  40b2e2:	imul   ebx,DWORD PTR [ecx-0x335b804],0xffffff9f
  40b2e9:	arpl   WORD PTR [ecx+edx*2+0x81a6a32],di
  40b2f0:	dec    ecx
  40b2f1:	xchg   DWORD PTR [esp+ebp*4-0x4a],edx
  40b2f5:	cmp    edi,DWORD PTR [esi+0x57d67da6]
  40b2fb:	iret   
  40b2fc:	shl    DWORD PTR [esp+eax*8],cl
  40b2ff:	sbb    DWORD PTR [ecx-0x7d],esp
  40b302:	iret   
  40b303:	pop    edi
  40b304:	inc    edx
  40b305:	fsubr  DWORD PTR [eax+0x12]
  40b308:	sahf   
  40b309:	pop    esp
  40b30a:	hlt    
  40b30b:	rcl    edx,0x46
  40b30e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b30f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b310:	lods   eax,DWORD PTR ds:[esi]
  40b311:	loop   0x40b320
  40b313:	push   0xffffffbc
  40b315:	test   eax,0x319465ab
  40b31a:	push   eax
  40b31b:	inc    esi
  40b31c:	sbb    cl,dh
  40b31e:	xchg   ebx,eax
  40b31f:	shl    DWORD PTR [esi+ecx*1],cl
  40b322:	mov    DWORD PTR [esp+esi*8-0x3d],ebp
  40b326:	mov    ebx,0xfea5ca48
  40b32b:	out    dx,al
  40b32c:	into   
  40b32d:	fcmovnbe st,st(2)
  40b32f:	ret    0xf31f
  40b332:	mov    edi,0x87d8a962
  40b337:	cmp    BYTE PTR cs:[esi-0x33d6e3b5],ah
  40b33e:	test   BYTE PTR [edx],dh
  40b340:	inc    edi
  40b341:	in     al,dx
  40b342:	inc    esi
  40b344:	lea    ebx,[eax+0x4c]
  40b347:	inc    ebp
  40b348:	loop   0x40b36b
  40b34a:	or     BYTE PTR [esi-0x62],dl
  40b34d:	iret   
  40b34e:	xor    eax,0x6ab60542
  40b353:	inc    esi
  40b354:	loop   0x40b33a
  40b356:	dec    ebx
  40b357:	cmc    
  40b358:	daa    
  40b359:	pop    ss
  40b35a:	xor    eax,0x792f520c
  40b35f:	ins    BYTE PTR es:[edi],dx
  40b360:	pop    ecx
  40b361:	jae    0x40b38a
  40b363:	ret    
  40b364:	or     eax,0xfd62e2ec
  40b369:	call   DWORD PTR [edi+0x3]
  40b36c:	das    
  40b36d:	add    BYTE PTR [ecx+0x15],0xe7
  40b371:	push   cs
  40b372:	ss and al,0x34
  40b375:	cli    
  40b376:	ja     0x40b359
  40b378:	(bad)  
  40b37a:	aaa    
  40b37b:	xor    al,0x65
  40b37d:	fnsave [ebx+0x57]
  40b380:	pop    esi
  40b381:	cli    
  40b382:	addr16 int3 
  40b384:	jg     0x40b349
  40b386:	sub    cl,dl
  40b388:	add    edi,ebp
  40b38a:	pop    edi
  40b38b:	and    BYTE PTR [eax],dl
  40b38d:	scas   eax,DWORD PTR es:[edi]
  40b38e:	jmp    0xc7e8:0x64bc73c4
  40b395:	add    ch,cl
  40b397:	jge    0x40b3be
  40b399:	fwait
  40b39a:	mov    fs,WORD PTR [eax-0x63b149b1]
  40b3a0:	pop    ebx
  40b3a1:	pop    esi
  40b3a2:	lahf   
  40b3a3:	stc    
  40b3a4:	xchg   DWORD PTR [esi],edx
  40b3a6:	loopne 0x40b356
  40b3a8:	pop    ebx
  40b3a9:	sub    cl,BYTE PTR [ebx+ebx*2+0x64]
  40b3ad:	xor    ebx,DWORD PTR [ecx]
  40b3af:	fs (bad) 
  40b3b1:	ja     0x40b371
  40b3b3:	test   BYTE PTR [ebx-0x3a],al
  40b3b6:	inc    edi
  40b3b7:	jns    0x40b357
  40b3b9:	fwait
  40b3ba:	jne    0x40b382
  40b3bc:	adc    bh,BYTE PTR ds:0x46a46855
  40b3c2:	shr    BYTE PTR [ebx+0x9],1
  40b3c5:	push   0x67
  40b3c7:	(bad)  
  40b3c9:	jbe    0x40b40b
  40b3cb:	(bad)  
  40b3cc:	ins    DWORD PTR es:[edi],dx
  40b3cd:	loop   0x40b417
  40b3cf:	add    esi,DWORD PTR [esi]
  40b3d1:	jecxz  0x40b413
  40b3d3:	stos   BYTE PTR es:[edi],al
  40b3d4:	xchg   edi,eax
  40b3d5:	sub    eax,0xb1cde54a
  40b3da:	mov    esp,DWORD PTR [ebx-0x58]
  40b3dd:	dec    ebp
  40b3de:	sub    BYTE PTR [eax+0x64eeb419],cl
  40b3e4:	loope  0x40b3c4
  40b3e6:	sub    BYTE PTR [ecx+esi*1],dh
  40b3e9:	aam    0xf0
  40b3eb:	mov    DWORD PTR [ecx+0x5365a8bc],ebx
  40b3f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3f2:	or     BYTE PTR [ecx-0x70],al
  40b3f5:	pop    ebp
  40b3f6:	dec    ebx
  40b3f7:	or     BYTE PTR [edx],dl
  40b3f9:	xchg   esi,eax
  40b3fa:	mov    cl,0xc7
  40b3fc:	cmp    al,0xfe
  40b3fe:	mov    ds:0x94ae3296,eax
  40b403:	jns    0x40b3c9
  40b405:	fisubr DWORD PTR [esi-0x6936189e]
  40b40b:	jecxz  0x40b404
  40b40d:	dec    esp
  40b40e:	jp     0x40b487
  40b410:	popf   
  40b411:	and    al,0x42
  40b413:	pop    ss
  40b414:	in     al,0xb3
  40b416:	pusha  
  40b417:	adc    al,0x80
  40b419:	(bad)  
  40b41a:	ret    0x46ed
  40b41d:	sub    cl,BYTE PTR [eax]
  40b41f:	add    DWORD PTR [edi+0xcbcaa37],esi
  40b425:	lds    eax,FWORD PTR [edi]
  40b427:	push   ebx
  40b428:	lea    edi,[edi]
  40b42a:	clc    
  40b42b:	push   ebx
  40b42c:	jp     0x40b3f1
  40b42e:	jecxz  0x40b453
  40b430:	int3   
  40b431:	push   esp
  40b432:	es call 0x8c5a41ae
  40b438:	enter  0x54c3,0x97
  40b43c:	and    BYTE PTR [ecx+0x6c177d1d],cl
  40b442:	jle    0x40b423
  40b444:	and    ebx,DWORD PTR [esp+eax*8+0x102d87af]
  40b44b:	push   0x2da1af1c
  40b450:	xchg   BYTE PTR [edx-0x50],bh
  40b453:	push   ss
  40b454:	jle    0x40b4b3
  40b456:	mov    bl,0x70
  40b458:	lahf   
  40b459:	(bad)
  40b45c:	cmp    BYTE PTR [edx],0x35
  40b45f:	out    dx,eax
  40b460:	jb     0x40b474
  40b462:	je     0x40b484
  40b464:	mov    bh,0x99
  40b466:	(bad)  
  40b467:	iret   
  40b468:	retf   0xfc0a
  40b46b:	iret   
  40b46c:	cmp    dl,0xac
  40b46f:	test   eax,0x7ea772e
  40b474:	call   0x2128:0x600f3d57
  40b47b:	jp     0x40b417
  40b47d:	push   ds
  40b47e:	mov    ds:0xcb8b230f,al
  40b483:	cdq    
  40b484:	push   es
  40b485:	sahf   
  40b486:	cwde   
  40b487:	sbb    eax,0xe5a57e1a
  40b48c:	mov    dl,0xd0
  40b48e:	push   ss
  40b48f:	psubsb mm1,QWORD PTR [eax+0x4b7aed05]
  40b496:	and    al,0xe1
  40b498:	mov    DWORD PTR [ebx+esi*8],edi
  40b49b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b49c:	lods   eax,DWORD PTR ds:[esi]
  40b49e:	dec    ebp
  40b49f:	aaa    
  40b4a0:	xchg   esi,eax
  40b4a1:	leave  
  40b4a2:	jmp    0x40b4bc
  40b4a4:	stos   BYTE PTR es:[edi],al
  40b4a5:	dec    ebx
  40b4a6:	popa   
  40b4a7:	inc    edi
  40b4a8:	mov    ebx,0x73f512ad
  40b4ad:	add    DWORD PTR [edx],eax
  40b4af:	out    0xf1,eax
  40b4b1:	mov    dh,0x11
  40b4b3:	stos   BYTE PTR es:[edi],al
  40b4b4:	push   0xf3b6579a
  40b4b9:	sbb    al,0xca
  40b4bb:	and    dl,bh
  40b4bd:	and    al,0x22
  40b4bf:	test   al,0x36
  40b4c1:	jo     0x40b53e
  40b4c3:	test   BYTE PTR [ebp+0x28],cl
  40b4c6:	or     al,BYTE PTR [ebx-0x4]
  40b4c9:	fidivr DWORD PTR [eax+ecx*4-0xb30a547]
  40b4d0:	adc    dl,dh
  40b4d2:	cmp    cl,BYTE PTR [edi]
  40b4d4:	dec    ebx
  40b4d5:	bound  eax,QWORD PTR [ebx-0x46]
  40b4d8:	dec    ebx
  40b4d9:	xor    eax,0xb3045cbc
  40b4de:	into   
  40b4df:	mov    ds:0xaa63f183,eax
  40b4e4:	and    al,0x10
  40b4e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4e7:	add    eax,0x2d96798a
  40b4ec:	scas   eax,DWORD PTR es:[edi]
  40b4ed:	sti    
  40b4ee:	pop    ss
  40b4ef:	jnp    0x40b4b3
  40b4f1:	adc    eax,0x4d080e00
  40b4f6:	ret    0xe243
  40b4f9:	fstp   QWORD PTR [esi+0x9]
  40b4fc:	mov    ah,0x5
  40b4fe:	mov    ch,0xd7
  40b500:	js     0x40b4e4
  40b502:	mov    dh,bl
  40b504:	xchg   esi,eax
  40b505:	bound  ebx,QWORD PTR [ecx+0x31]
  40b508:	repz cmc 
  40b50a:	pop    es
  40b50b:	int3   
  40b50c:	pop    esi
  40b50d:	or     DWORD PTR [ebx+0x47],ecx
  40b510:	push   ss
  40b511:	aas    
  40b512:	fs mov esi,0x45644368
  40b518:	gs jle 0x40b502
  40b51b:	test   esp,edi
  40b51d:	inc    ecx
  40b51e:	mov    bl,0x1c
  40b520:	mov    dh,BYTE PTR [edi-0x277ec825]
  40b526:	sbb    DWORD PTR [edx],0xffffffe9
  40b529:	xchg   esi,eax
  40b52a:	inc    BYTE PTR [ecx+esi*4+0x6098cbb8]
  40b531:	or     BYTE PTR [edi],ah
  40b533:	imul   ecx,ecx,0x1361838e
  40b539:	popf   
  40b53a:	adc    al,0xa7
  40b53c:	daa    
  40b53d:	enter  0x2606,0xe9
  40b541:	stos   BYTE PTR es:[edi],al
  40b542:	push   esi
  40b543:	xor    al,0xe6
  40b545:	call   0x6d58:0x984fda36
  40b54c:	xchg   edx,edi
  40b54e:	aaa    
  40b54f:	dec    edx
  40b550:	mov    eax,0xa5b27b4d
  40b555:	xchg   DWORD PTR [esi-0x44f95944],ebp
  40b55b:	push   edx
  40b55c:	sbb    al,BYTE PTR [ebx+0x6]
  40b55f:	adc    edx,DWORD PTR ds:0x5e61affb
  40b565:	adc    eax,0x5910671a
  40b56a:	dec    edi
  40b56b:	enter  0xcb72,0xd5
  40b56f:	and    al,0x10
  40b571:	imul   edi,DWORD PTR [ebx-0x41],0xffffffca
  40b575:	js     0x40b5d7
  40b577:	xlat   BYTE PTR ds:[ebx]
  40b578:	pop    esp
  40b579:	popf   
  40b57a:	sbb    al,0x95
  40b57c:	in     al,0x31
  40b57e:	add    bh,BYTE PTR [ecx]
  40b580:	cmp    al,0xf1
  40b582:	jp     0x40b543
  40b584:	lods   eax,DWORD PTR ds:[esi]
  40b585:	cld    
  40b586:	add    dh,BYTE PTR [edi-0x1cb1ab58]
  40b58c:	inc    edi
  40b58d:	sti    
  40b58e:	outs   dx,DWORD PTR ds:[esi]
  40b590:	pmaxsw mm3,QWORD PTR [ecx]
  40b593:	test   BYTE PTR [esi-0x15],0x79
  40b597:	and    al,cl
  40b599:	or     dh,ah
  40b59b:	adc    cl,BYTE PTR [ebx+edi*1+0x4e]
  40b59f:	sar    BYTE PTR [ebx-0x4a850b4a],0x6b
  40b5a6:	sbb    ebp,DWORD PTR [ecx-0x1cf91827]
  40b5ac:	int3   
  40b5ad:	inc    eax
  40b5ae:	jns    0x40b5eb
  40b5b0:	in     eax,0x1e
  40b5b2:	jge    0x40b5e8
  40b5b4:	in     al,dx
  40b5b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5b6:	and    DWORD PTR [ebp+0x7f433b6d],ecx
  40b5bc:	push   ebx
  40b5bd:	ret    
  40b5be:	mov    bl,0xc
  40b5c0:	xor    edi,DWORD PTR [ebx-0x58]
  40b5c3:	arpl   WORD PTR [esi],bx
  40b5c5:	jns    0x40b637
  40b5c7:	loopne 0x40b561
  40b5c9:	and    BYTE PTR [ebp+0x41],ah
  40b5cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5cd:	cmp    al,0x39
  40b5cf:	idiv   DWORD PTR [edx+ebx*2-0x74768002]
  40b5d6:	or     DWORD PTR [edi-0x2318f541],ebx
  40b5dc:	(bad)  
  40b5dd:	mov    BYTE PTR [ebx-0xc6edb4b],bl
  40b5e3:	push   ecx
  40b5e4:	mov    edi,0xe8b7bbfd
  40b5e9:	(bad)  
  40b5ea:	outs   dx,BYTE PTR ds:[esi]
  40b5eb:	je     0x40b5b7
  40b5ed:	clc    
  40b5ee:	mov    al,0x6
  40b5f0:	pop    ebx
  40b5f1:	stos   BYTE PTR es:[edi],al
  40b5f2:	int    0xba
  40b5f4:	cmp    al,0xcd
  40b5f6:	inc    ebx
  40b5f7:	sbb    ecx,ebp
  40b5f9:	out    0xa4,al
  40b5fb:	and    DWORD PTR [edi],edx
  40b5fd:	jnp    0x40b61f
  40b5ff:	inc    esp
  40b600:	lock test al,0x97
  40b603:	and    bh,0xba
  40b606:	and    DWORD PTR [ebp-0x49],0x41e793a9
  40b60d:	hlt    
  40b60e:	pop    ds
  40b60f:	shl    ebp,cl
  40b611:	es mov ebx,0x21ed248e
  40b617:	ficomp WORD PTR [ebx-0x3d]
  40b61a:	test   BYTE PTR ds:0x1f5bd9cc,0x61
  40b621:	lds    ebp,FWORD PTR [edx]
  40b623:	mov    bl,0xc5
  40b625:	(bad)  
  40b626:	outs   dx,DWORD PTR ds:[esi]
  40b627:	imul   ebp,edi,0x9acef0ea
  40b62d:	lea    edx,[edx+0x8]
  40b630:	cmp    BYTE PTR ds:0x6b2e7433,bl
  40b636:	and    BYTE PTR [eax+ebx*8+0x34244048],bl
  40b63d:	xchg   ebp,eax
  40b63e:	push   0xffffffb0
  40b640:	imul   edi,DWORD PTR [eax],0xe0fc2567
  40b646:	stos   BYTE PTR es:[edi],al
  40b647:	popf   
  40b648:	jbe    0x40b5cb
  40b64a:	mov    dh,0xf8
  40b64c:	sub    edx,esi
  40b64e:	(bad)  
  40b64f:	mov    DWORD PTR [edi+0x5e641f9e],eax
  40b655:	xor    eax,0xfef19b7e
  40b65a:	xor    ch,BYTE PTR [eax-0x1457d49e]
  40b660:	xchg   esi,eax
  40b661:	hlt    
  40b662:	sub    ah,al
  40b664:	out    dx,al
  40b665:	mov    esp,0xd6f1b028
  40b66a:	pop    edi
  40b66b:	inc    edx
  40b66c:	test   al,0x6b
  40b66e:	sar    BYTE PTR [edx],1
  40b670:	jnp    0x40b658
  40b672:	into   
  40b673:	test   BYTE PTR [edi+0x17],0x30
  40b677:	and    bh,BYTE PTR [edx]
  40b679:	xor    bh,BYTE PTR [ecx-0x24f0e73d]
  40b67f:	jne    0x40b6a6
  40b681:	mov    DWORD PTR [edx+0x310595aa],ebx
  40b687:	push   edx
  40b688:	fs sub eax,0x4b577920
  40b68e:	xchg   dl,al
  40b690:	jmp    0x311b8d1c
  40b695:	sub    eax,0xa60b9788
  40b69a:	outs   dx,DWORD PTR ds:[esi]
  40b69b:	loop   0x40b705
  40b69d:	test   al,0xd2
  40b69f:	or     ebx,DWORD PTR [edi]
  40b6a1:	jl     0x40b71a
  40b6a3:	std    
  40b6a4:	neg    BYTE PTR [edi+eiz*4]
  40b6a7:	in     al,0xa1
  40b6a9:	int3   
  40b6aa:	add    al,bl
  40b6ac:	cwde   
  40b6ad:	push   cs
  40b6ae:	pop    ebx
  40b6af:	jns    0x40b6cd
  40b6b1:	shr    DWORD PTR [eax+edi*4-0x51],1
  40b6b5:	xchg   edi,eax
  40b6b6:	icebp  
  40b6b7:	add    esi,ebx
  40b6b9:	pop    esp
  40b6ba:	mov    cl,0x8e
  40b6bc:	enter  0x54dc,0xe9
  40b6c0:	jb     0x40b6cf
  40b6c2:	mov    ecx,0x1754ff
  40b6c7:	icebp  
  40b6c8:	push   ss
  40b6c9:	dec    edx
  40b6ca:	(bad)  
  40b6cb:	lock repz or al,0x8b
  40b6cf:	out    dx,eax
  40b6d0:	push   es
  40b6d1:	xor    edi,edi
  40b6d3:	or     eax,0x37dfaa79
  40b6d8:	mov    dl,0xa4
  40b6da:	or     bh,BYTE PTR [esi+0x19]
  40b6dd:	sti    
  40b6de:	repz add cl,BYTE PTR [edx+0x484ffc78]
  40b6e5:	sub    eax,0x8f26f282
  40b6ea:	jne    0x40b740
  40b6ec:	lds    esp,FWORD PTR [edx]
  40b6ee:	sub    eax,0xb2e8c89c
  40b6f3:	pop    ebx
  40b6f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6f5:	inc    ebp
  40b6f6:	test   al,0xf
  40b6f8:	and    eax,0x42be00c5
  40b6fd:	dec    edx
  40b6fe:	xor    DWORD PTR [edx],ebp
  40b700:	call   0xcf81:0x96946738
  40b707:	mov    edi,cs
  40b709:	imul   edx,DWORD PTR [edi],0x67100f08
  40b70f:	mov    dl,0xd7
  40b711:	lea    edi,[ecx]
  40b713:	dec    edi
  40b714:	push   esp
  40b715:	cli    
  40b716:	cwde   
  40b717:	mov    gs,WORD PTR [edx+0x62746bef]
  40b71d:	pop    esp
  40b71e:	sbb    BYTE PTR [eax+0x1b],dl
  40b721:	jge    0x40b6cd
  40b723:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b725:	sahf   
  40b726:	bound  esi,QWORD PTR [ebx]
  40b728:	mov    edi,0x35c42f59
  40b72d:	mov    es,WORD PTR ds:0xcc28ef2f
  40b733:	dec    ecx
  40b734:	add    al,0x9d
  40b736:	into   
  40b737:	xchg   ebx,eax
  40b738:	push   esi
  40b739:	sub    cl,BYTE PTR [ecx-0x11]
  40b73c:	xor    al,0xa9
  40b73e:	jno    0x40b6e8
  40b740:	cmp    DWORD PTR [edi],0x7326811e
  40b746:	fnstenv [esi]
  40b748:	xor    al,ah
  40b74a:	adc    dl,ah
  40b74c:	mov    bl,0xe2
  40b74e:	xchg   edi,eax
  40b74f:	lock in eax,0x3e
  40b752:	mov    ah,0xef
  40b754:	sar    BYTE PTR [edi+0x55],1
  40b757:	fist   DWORD PTR [eax+0x4]
  40b75a:	mov    edi,DWORD PTR [edx+0x6e]
  40b75d:	mov    ebp,DWORD PTR [eax+0x2ab2928b]
  40b763:	sahf   
  40b764:	repnz cmp edx,0x8f3662d6
  40b76b:	les    esi,FWORD PTR [edx-0x7d8e6cb1]
  40b771:	and    eax,0xa429e78f
  40b776:	test   DWORD PTR [edx+eiz*4],0xa3e074da
  40b77d:	push   0x4c1d7965
  40b782:	xchg   esp,esi
  40b784:	aaa    
  40b785:	loop   0x40b70b
  40b787:	leave  
  40b788:	out    dx,al
  40b789:	fs in  eax,dx
  40b78b:	aas    
  40b78c:	add    al,0x89
  40b78e:	mov    eax,0xbe9303a0
  40b793:	jbe    0x40b763
  40b795:	imul   esi,DWORD PTR ds:0x95edcebd,0x49
  40b79c:	repnz (bad) 
  40b79e:	ins    DWORD PTR es:[edi],dx
  40b79f:	stos   DWORD PTR es:[edi],eax
  40b7a0:	push   edi
  40b7a1:	dec    eax
  40b7a2:	push   eax
  40b7a3:	or     bh,dh
  40b7a5:	out    0x65,eax
  40b7a7:	adc    DWORD PTR [edi-0x2c02912b],eax
  40b7ad:	mov    bl,BYTE PTR [edx+0x5876412c]
  40b7b3:	popa   
  40b7b4:	jg     0x40b7b9
  40b7b6:	dec    esi
  40b7b7:	ds loope 0x40b7b6
  40b7ba:	mov    ecx,0xbba3d8c4
  40b7bf:	dec    eax
  40b7c0:	addr16 inc ebp
  40b7c2:	inc    ecx
  40b7c3:	add    al,0x42
  40b7c5:	lds    ebx,FWORD PTR ds:0x8772794c
  40b7cb:	push   edx
  40b7cc:	and    al,0x70
  40b7ce:	jnp    0x40b820
  40b7d0:	jmp    esi
  40b7d2:	fwait
  40b7d3:	or     ecx,DWORD PTR [edx+0x54b23d0d]
  40b7d9:	out    0x4d,eax
  40b7db:	stc    
  40b7dc:	lahf   
  40b7dd:	mov    cl,0xb9
  40b7df:	stos   BYTE PTR es:[edi],al
  40b7e0:	cli    
  40b7e1:	xor    DWORD PTR [eax-0x9],0xffffffb0
  40b7e5:	xor    DWORD PTR [eax-0x12],edx
  40b7e8:	inc    edx
  40b7e9:	std    
  40b7ea:	cmp    al,0x71
  40b7ec:	push   esp
  40b7ed:	repz sbb DWORD PTR [ebx-0x78],0xffffffa2
  40b7f2:	mov    ecx,0xbe2bc568
  40b7f7:	push   cs
  40b7f8:	outs   dx,BYTE PTR ds:[esi]
  40b7f9:	inc    DWORD PTR [esi+0xbdf8aca]
  40b7ff:	lock cwde 
  40b801:	rol    bh,1
  40b803:	mov    BYTE PTR [ecx],ah
  40b805:	call   0x7714:0x2109c3fb
  40b80c:	fs das 
  40b80e:	stos   BYTE PTR es:[edi],al
  40b80f:	adc    BYTE PTR [edi],bh
  40b811:	jge    0x40b7fd
  40b813:	leave  
  40b814:	mov    dh,BYTE PTR [ebp-0x34]
  40b817:	fwait
  40b818:	dec    ecx
  40b819:	clc    
  40b81a:	hlt    
  40b81b:	mov    esp,0x705637e2
  40b820:	fisubr DWORD PTR [eax-0x6cd9f177]
  40b826:	adc    al,0x3e
  40b828:	fmul   DWORD PTR ds:0x513e43c9
  40b82e:	loope  0x40b822
  40b830:	adc    al,0xf0
  40b832:	sbb    eax,0xdbdbd2f2
  40b837:	add    BYTE PTR [ecx+0x29],bh
  40b83a:	stos   DWORD PTR es:[edi],eax
  40b83b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b83c:	pop    es
  40b83d:	mov    es,ebx
  40b83f:	add    ebx,ecx
  40b841:	and    DWORD PTR [ecx+0x5a],0x40
  40b845:	push   cs
  40b846:	mov    edi,0x5c97c6c2
  40b84b:	pop    ebx
  40b84c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b84d:	push   cs
  40b84e:	mov    ecx,0x5475d9d1
  40b853:	test   DWORD PTR [edx],ebp
  40b855:	adc    al,0xf7
  40b857:	(bad)  
  40b858:	xor    DWORD PTR [edi],eax
  40b85a:	mov    edx,DWORD PTR [edx+0x7b]
  40b85d:	jmp    0x40b891
  40b85f:	jecxz  0x40b83b
  40b861:	xor    eax,0x9aede91a
  40b866:	pushf  
  40b867:	test   DWORD PTR [esi-0x5a],esp
  40b86a:	mov    bl,0xd0
  40b86c:	mov    ds:0x1ed12b64,al
  40b871:	add    BYTE PTR [eax-0x18],ch
  40b874:	stos   BYTE PTR es:[edi],al
  40b875:	or     DWORD PTR [edi-0x417c20ce],ecx
  40b87b:	mov    bh,0x1f
  40b87d:	pop    ebp
  40b87e:	cdq    
  40b87f:	push   es
  40b880:	xor    bl,dh
  40b882:	loope  0x40b8aa
  40b884:	add    ebx,DWORD PTR [ecx]
  40b886:	push   ss
  40b887:	push   cs
  40b888:	xor    al,0xa
  40b88a:	jae    0x40b83e
  40b88c:	adc    al,0xee
  40b88e:	adc    al,0x16
  40b890:	cmc    
  40b891:	popf   
  40b892:	pop    esi
  40b893:	add    ebp,DWORD PTR [ecx+edx*2+0x3d]
  40b897:	dec    esp
  40b898:	lock inc ebx
  40b89a:	js     0x40b83f
  40b89c:	xchg   BYTE PTR [ecx],dl
  40b89e:	js     0x40b8f8
  40b8a0:	inc    esp
  40b8a1:	dec    ebx
  40b8a2:	aad    0xff
  40b8a4:	in     eax,dx
  40b8a5:	not    dh
  40b8a7:	cmp    cl,dl
  40b8a9:	cmp    BYTE PTR ds:0x167e758f,cl
  40b8af:	cwde   
  40b8b0:	sbb    DWORD PTR [ebx],ecx
  40b8b2:	pop    ss
  40b8b3:	shl    BYTE PTR [edx-0x33],1
  40b8b6:	iret   
  40b8b7:	repz inc esi
  40b8b9:	jg     0x40b888
  40b8bb:	xor    DWORD PTR [edx+0x29],ecx
  40b8be:	out    0xb4,al
  40b8c0:	mov    dh,0xf5
  40b8c2:	sbb    eax,0xc8c72494
  40b8c7:	loopne 0x40b8d6
  40b8c9:	pop    ss
  40b8ca:	data16 or al,0x20
  40b8cd:	ins    DWORD PTR es:[edi],dx
  40b8ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8cf:	jnp    0x40b8f8
  40b8d1:	in     al,0x15
  40b8d3:	mov    esp,0xdfa33e2
  40b8d8:	sub    edx,DWORD PTR [eax-0x51]
  40b8db:	cmp    BYTE PTR [eax+0x4f],dh
  40b8de:	dec    esp
  40b8df:	inc    esi
  40b8e0:	push   edi
  40b8e1:	ffreep st(3)
  40b8e3:	mov    ch,0xc8
  40b8e5:	sub    DWORD PTR [edi],edi
  40b8e7:	loope  0x40b871
  40b8e9:	inc    ebp
  40b8ea:	enter  0x140,0x1d
  40b8ee:	repnz mov BYTE PTR [edi],0x47
  40b8f2:	jb     0x40b921
  40b8f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8f5:	lods   al,BYTE PTR ds:[esi]
  40b8f6:	add    edi,esp
  40b8f8:	inc    esi
  40b8f9:	js     0x40b92d
  40b8fb:	sti    
  40b8fc:	xor    DWORD PTR [ebx+0x177361d2],eax
  40b902:	sahf   
  40b903:	icebp  
  40b904:	fadd   DWORD PTR [edx]
  40b906:	add    ecx,esi
  40b908:	call   0x38469947
  40b90d:	mov    BYTE PTR [esi+ebp*4],ah
  40b910:	add    eax,0x14c6ee5b
  40b915:	sbb    ebp,ecx
  40b917:	push   0xd8e6473d
  40b91c:	mov    dl,0xb6
  40b91e:	or     cl,dh
  40b920:	pop    esi
  40b921:	sar    BYTE PTR [esi+0x25],cl
  40b924:	ret    
  40b925:	adc    al,0x8d
  40b927:	test   DWORD PTR [edi-0xee80f0a],edi
  40b92d:	call   0xed37b36
  40b932:	mov    al,0x97
  40b934:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b935:	and    BYTE PTR [edi],cl
  40b937:	inc    edi
  40b938:	mov    BYTE PTR [eax],al
  40b93a:	dec    eax
  40b93b:	xor    eax,0xbac64826
  40b940:	mov    esi,0x466122fd
  40b945:	mul    cl
  40b947:	jb     0x40b9a0
  40b949:	push   ebx
  40b94a:	jecxz  0x40b9a4
  40b94c:	pop    ds
  40b94d:	adc    ah,BYTE PTR [esi+0x5e]
  40b950:	add    eax,0x2381d761
  40b955:	dec    ebp
  40b956:	js     0x40b90e
  40b958:	retf   
  40b959:	test   eax,0xdf3ecf27
  40b95e:	xchg   ebx,eax
  40b95f:	xchg   ecx,eax
  40b960:	adc    eax,0x49adc9e8
  40b965:	jmp    0x9e8b:0xe2e5c378
  40b96c:	add    DWORD PTR [ebp-0x1ac9bf01],edi
  40b972:	dec    ebx
  40b973:	rcl    DWORD PTR gs:[edi],1
  40b976:	(bad)  
  40b978:	out    dx,al
  40b979:	inc    esi
  40b97a:	sar    DWORD PTR [esi-0x6570c9f4],0x12
  40b981:	jnp    0x40b916
  40b983:	or     ecx,DWORD PTR [esi]
  40b985:	and    ebx,esp
  40b987:	and    ecx,esi
  40b989:	fcomp  DWORD PTR [eax-0x22]
  40b98c:	shr    BYTE PTR [ebp+0x12],1
  40b98f:	lods   eax,DWORD PTR ds:[esi]
  40b990:	aad    0xf0
  40b992:	cmp    al,0x90
  40b994:	jae    0x40ba02
  40b996:	out    dx,al
  40b997:	gs push edi
  40b999:	lahf   
  40b99a:	or     al,0x48
  40b99c:	cmp    al,0x9
  40b99e:	push   ebp
  40b99f:	sbb    dh,BYTE PTR [ecx+ebx*1-0x4a78bab1]
  40b9a6:	int3   
  40b9a7:	inc    DWORD PTR [ebp+0xfb65b11]
  40b9ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9ae:	ficom  WORD PTR [edx+0x7a1dc8f4]
  40b9b4:	out    0x8d,eax
  40b9b6:	(bad)
  40b9ba:	mov    ss,ebp
  40b9bc:	popf   
  40b9bd:	sbb    edi,eax
  40b9bf:	inc    eax
  40b9c0:	or     edx,esp
  40b9c2:	dec    BYTE PTR [esi-0x27]
  40b9c5:	out    dx,eax
  40b9c6:	(bad)  
  40b9c7:	jmp    DWORD PTR [eax+0x56]
  40b9ca:	out    dx,eax
  40b9cb:	jo     0x40b9c4
  40b9cd:	pop    esp
  40b9ce:	test   dl,0x3c
  40b9d1:	lea    esp,[eax]
  40b9d3:	pop    ss
  40b9d4:	sub    bl,ah
  40b9d6:	jg     0x40b9c3
  40b9d8:	ds mov ch,0x87
  40b9db:	daa    
  40b9dc:	scas   eax,DWORD PTR es:[edi]
  40b9dd:	inc    ebp
  40b9de:	mov    esi,0x268c2106
  40b9e3:	leave  
  40b9e4:	add    ah,BYTE PTR [ebx]
  40b9e6:	mov    BYTE PTR [esi],bh
  40b9e8:	(bad)  
  40b9e9:	outs   dx,BYTE PTR ds:[esi]
  40b9ea:	sbb    DWORD PTR ds:0x80fb655,esi
  40b9f0:	retf   
  40b9f1:	adc    ah,dh
  40b9f3:	cld    
  40b9f4:	test   al,0xbc
  40b9f6:	je     0x40b98c
  40b9f8:	or     al,BYTE PTR [eax-0x2f0961df]
  40b9fe:	rol    DWORD PTR [esi],0xcc
  40ba01:	loopne 0x40ba5f
  40ba03:	xor    BYTE PTR [edx+0x1e023891],0x13
  40ba0a:	addr16 into 
  40ba0c:	inc    edx
  40ba0d:	imul   esp,DWORD PTR [edx],0x45
  40ba10:	add    DWORD PTR [edx+0x5c],esi
  40ba13:	popa   
  40ba14:	fwait
  40ba15:	out    0xa1,eax
  40ba17:	ins    BYTE PTR es:[edi],dx
  40ba18:	loopne 0x40ba40
  40ba1a:	ret    0x9569
  40ba1d:	ds mov edi,0x96a9032b
  40ba23:	lods   al,BYTE PTR ds:[esi]
  40ba24:	out    0x38,eax
  40ba26:	ror    dh,0x4c
  40ba29:	dec    eax
  40ba2a:	rol    esi,0x36
  40ba2d:	jne    0x40baae
  40ba2f:	jbe    0x40ba62
  40ba31:	xor    al,0xba
  40ba33:	mov    ecx,0xc7ae63b1
  40ba38:	mov    DWORD PTR [eax-0x53],edi
  40ba3b:	push   eax
  40ba3c:	mov    bh,bl
  40ba3e:	test   eax,0x7086612c
  40ba43:	push   esp
  40ba44:	xor    edi,ebx
  40ba46:	pop    ds
  40ba47:	jg     0x40ba8d
  40ba49:	add    al,0x7a
  40ba4b:	xor    al,0xc5
  40ba4d:	lock fisub DWORD PTR [esi]
  40ba50:	dec    ebx
  40ba51:	sbb    ch,bh
  40ba53:	int    0xd8
  40ba55:	xchg   ecx,eax
  40ba56:	add    esi,DWORD PTR [esi+0x1d823014]
  40ba5c:	retf   0xb5f6
  40ba5f:	pop    edx
  40ba60:	or     al,0x72
  40ba62:	dec    esp
  40ba63:	adc    ah,BYTE PTR [ecx]
  40ba65:	pop    ds
  40ba66:	(bad)  
  40ba67:	xchg   ebp,eax
  40ba68:	adc    ecx,DWORD PTR [ebx+eax*2+0x79a56713]
  40ba6f:	adc    BYTE PTR [ecx],dl
  40ba71:	jns    0x40ba8f
  40ba73:	aad    0xda
  40ba75:	push   cs
  40ba76:	dec    edi
  40ba77:	jae    0x40b9f9
  40ba79:	push   esi
  40ba7a:	inc    eax
  40ba7b:	add    al,0x8b
  40ba7d:	add    al,0xba
  40ba7f:	pop    eax
  40ba80:	add    dh,BYTE PTR [ecx+0x464dd7a2]
  40ba86:	imul   ebp,DWORD PTR [esi+0x5],0x6d
  40ba8a:	and    al,BYTE PTR [ebp+0x563eb73c]
  40ba90:	push   ebx
  40ba91:	out    dx,al
  40ba92:	arpl   WORD PTR [ecx-0x41],dx
  40ba95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba96:	jecxz  0x40bae6
  40ba98:	jge    0x40ba55
  40ba9a:	push   eax
  40ba9b:	jbe    0x40bb04
  40ba9d:	adc    cl,BYTE PTR [eax]
  40ba9f:	xchg   ebp,eax
  40baa0:	jg     0x40babb
  40baa2:	pop    esi
  40baa3:	mov    bh,0xf7
  40baa5:	ds pop es
  40baa7:	into   
  40baa8:	push   edi
  40baa9:	jnp    0x40bad2
  40baab:	pop    ds
  40baac:	mov    eax,ds:0x19525274
  40bab1:	fadd   st,st(6)
  40bab3:	mov    BYTE PTR [esi-0x26],dl
  40bab6:	add    DWORD PTR [edx+0x43],ecx
  40bab9:	test   bh,bl
  40babb:	xchg   ebp,eax
  40babc:	retf   0x5470
  40babf:	cmp    DWORD PTR [ecx+0x22],esi
  40bac2:	sub    ebp,DWORD PTR cs:[edi+eiz*4]
  40bac6:	push   cs
  40bac7:	cmc    
  40bac8:	xor    dh,bl
  40baca:	sub    ebx,DWORD PTR [ecx+0x32]
  40bacd:	mov    al,ds:0x8bc9728f
  40bad2:	daa    
  40bad3:	mov    ebp,0x2bbc715a
  40bad8:	and    BYTE PTR [edx-0x78],0x25
  40badc:	test   eax,0x5e09370f
  40bae1:	xchg   ecx,eax
  40bae2:	outs   dx,DWORD PTR ds:[esi]
  40bae3:	xor    ch,BYTE PTR [ebx-0x1c83291b]
  40bae9:	dec    ecx
  40baea:	aam    0x51
  40baec:	icebp  
  40baed:	popf   
  40baee:	in     eax,0xd5
  40baf0:	adc    eax,0x6fb706cf
  40baf5:	add    DWORD PTR ds:[eax],ebp
  40baf8:	xor    dh,ch
  40bafa:	popf   
  40bafb:	mov    ah,0x45
  40bafd:	(bad)  
  40bafe:	cmc    
  40baff:	cmp    eax,0xc2030af5
  40bb04:	xchg   ecx,eax
  40bb05:	cmp    eax,0xed80936f
  40bb0a:	xchg   edi,eax
  40bb0b:	mov    al,BYTE PTR [ebx+0x5b251238]
  40bb11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb12:	iret   
  40bb13:	sub    al,0x2d
  40bb15:	(bad)
  40bb19:	fisub  WORD PTR ds:0x448d8f77
  40bb1f:	cmp    eax,0xca1e324c
  40bb24:	lock dec edi
  40bb26:	or     eax,0x4a1f0f43
  40bb2b:	jae    0x40bae6
  40bb2d:	xor    cl,BYTE PTR ds:0x55927b13
  40bb33:	(bad)  
  40bb34:	repz cmp eax,0x95677728
  40bb3a:	pop    ebx
  40bb3b:	push   ebp
  40bb3c:	jnp    0x40bae8
  40bb3e:	stc    
  40bb3f:	sub    DWORD PTR [eax+0x43],edi
  40bb42:	in     eax,dx
  40bb43:	sub    ebp,DWORD PTR [esp+eiz*8+0x2d3e43ef]
  40bb4a:	add    DWORD PTR [edi+0x5ae38f5d],esi
  40bb50:	or     BYTE PTR [edx-0x3b21c8a7],bl
  40bb56:	hlt    
  40bb57:	jnp    0x40bbb4
  40bb59:	pushf  
  40bb5a:	int    0x5e
  40bb5c:	xlat   BYTE PTR ds:[ebx]
  40bb5d:	fild   WORD PTR [ebp+eax*1+0x30f07749]
  40bb64:	inc    ecx
  40bb65:	dec    ecx
  40bb66:	mov    BYTE PTR [esp+ebx*8-0x1c],cl
  40bb6a:	mov    ebp,0xc80332ae
  40bb6f:	sub    DWORD PTR [ecx],ebx
  40bb71:	retf   0x8ebe
  40bb74:	jb     0x40bb64
  40bb76:	imul   eax,DWORD PTR [edx+0xbe4af9f],0x6
  40bb7d:	stos   DWORD PTR es:[edi],eax
  40bb7e:	and    ch,BYTE PTR [eax-0x56646edc]
  40bb84:	xor    eax,DWORD PTR [ebx-0x6dc21b28]
  40bb8a:	mov    edi,0x675c1b9d
  40bb8f:	sbb    al,BYTE PTR [edx+0x29]
  40bb92:	mov    BYTE PTR [ebp-0x7d],0xc6
  40bb96:	jne    0x40bc04
  40bb98:	ret    
  40bb99:	idiv   BYTE PTR [eax]
  40bb9b:	(bad)  
  40bb9c:	mov    ecx,0x26c7756e
  40bba1:	adc    DWORD PTR [ebp-0x3],0x58
  40bba5:	dec    eax
  40bba6:	lods   al,BYTE PTR ds:[esi]
  40bba7:	jle    0x40bbd0
  40bba9:	pop    ecx
  40bbaa:	inc    edx
  40bbab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbac:	fld    QWORD PTR [edx]
  40bbae:	pop    eax
  40bbaf:	es nop
  40bbb1:	jns    0x40bc01
  40bbb3:	(bad)  
  40bbb4:	fst    QWORD PTR [ebp-0x2e]
  40bbb7:	xor    al,0x3a
  40bbb9:	imul   DWORD PTR [ebx]
  40bbbb:	test   eax,0x74236825
  40bbc0:	jbe    0x40bb79
  40bbc2:	fld    st(0)
  40bbc4:	es ins BYTE PTR es:[edi],dx
  40bbc6:	jo     0x40bba2
  40bbc8:	test   BYTE PTR [eax],0xc8
  40bbcb:	add    eax,0xa895c1d3
  40bbd0:	mov    WORD PTR [ecx-0x44],es
  40bbd3:	jo     0x40bb8d
  40bbd5:	jae    0x40bc16
  40bbd7:	adc    BYTE PTR [ebp-0x17],bl
  40bbda:	jae    0x40bc1d
  40bbdc:	repnz retf 0x6221
  40bbe0:	jmp    0xa8850088
  40bbe5:	int3   
  40bbe6:	adc    DWORD PTR [ebp+0x34],0xffffffb4
  40bbea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbeb:	jns    0x40bbcd
  40bbed:	fadd   DWORD PTR [esi-0x19bc277]
  40bbf3:	jle    0x40bbcb
  40bbf5:	and    edx,edx
  40bbf7:	sub    eax,0xcbe499e9
  40bbfc:	sub    ecx,DWORD PTR [eax+0x2f35468e]
  40bc02:	(bad)  
  40bc03:	xchg   esp,eax
  40bc04:	ja     0x40bc85
  40bc06:	jb     0x40bc39
  40bc08:	ins    DWORD PTR es:[edi],dx
  40bc09:	jne    0x40bbea
  40bc0b:	lea    esi,[esi]
  40bc0d:	inc    esi
  40bc0e:	pop    es
  40bc0f:	push   eax
  40bc10:	je     0x40bc0e
  40bc12:	add    al,cl
  40bc14:	cmp    BYTE PTR [edx+0x2],dh
  40bc17:	icebp  
  40bc18:	add    BYTE PTR [ebp+0xe16ec5],cl
  40bc1e:	js     0x40bc51
  40bc20:	repnz pop eax
  40bc22:	hlt    
  40bc23:	and    eax,0xf20f4007
  40bc28:	call   0x8cd9:0x85b2b03b
  40bc2f:	(bad)
  40bc33:	sbb    esp,DWORD PTR [ebp+0xb]
  40bc36:	in     al,0xe0
  40bc38:	add    bh,bl
  40bc3a:	jne    0x40bc57
  40bc3c:	fsubr  DWORD PTR [edi+0xa]
  40bc3f:	fbld   TBYTE PTR [ebx]
  40bc41:	sub    ebx,DWORD PTR [esi-0x27]
  40bc44:	push   eax
  40bc45:	add    eax,0x5b09f66c
  40bc4a:	lods   al,BYTE PTR ds:[esi]
  40bc4b:	and    dh,dh
  40bc4d:	pop    esp
  40bc4e:	xchg   ebp,eax
  40bc4f:	push   ebp
  40bc50:	sub    DWORD PTR [ebx-0x52d0633],0x43
  40bc57:	test   edi,eax
  40bc59:	jecxz  0x40bcc6
  40bc5b:	adc    ecx,ebx
  40bc5d:	jmp    0x40bc60
  40bc5f:	jg     0x40bc83
  40bc61:	jmp    0x4b1a:0xbee01a6
  40bc68:	mov    ebx,0x9e476d7a
  40bc6d:	std    
  40bc6e:	push   esi
  40bc6f:	cmc    
  40bc70:	rcr    DWORD PTR [ebp+0x3f],0x81
  40bc74:	pop    ecx
  40bc75:	(bad)  
  40bc76:	mov    dh,0xd3
  40bc78:	in     al,dx
  40bc79:	push   ss
  40bc7a:	cmp    eax,0x9c35965b
  40bc7f:	hlt    
  40bc80:	add    BYTE PTR [esi],bh
  40bc82:	std    
  40bc83:	(bad)  
  40bc84:	out    dx,eax
  40bc85:	cmp    DWORD PTR [esi],ecx
  40bc87:	pusha  
  40bc88:	jg     0x40bc82
  40bc8a:	into   
  40bc8b:	cdq    
  40bc8c:	push   edi
  40bc8d:	retf   0xc0fd
  40bc90:	(bad)  
  40bc91:	dec    esp
  40bc92:	mov    eax,ds:0x4a84bb21
  40bc97:	(bad)  
  40bc98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc99:	pop    ebx
  40bc9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc9b:	or     al,0xf5
  40bc9d:	ret    0x3ec3
  40bca0:	mul    DWORD PTR [edx-0x67db979f]
  40bca6:	stos   BYTE PTR es:[edi],al
  40bca7:	ds or  eax,0x628e8587
  40bcad:	jo     0x40bc4e
  40bcaf:	sub    eax,0x49d40f54
  40bcb4:	dec    eax
  40bcb5:	xchg   ebp,eax
  40bcb6:	cmp    DWORD PTR [ebp+eiz*2-0x5a],edi
  40bcba:	dec    ecx
  40bcbb:	add    DWORD PTR [edi],ebp
  40bcbd:	pop    ecx
  40bcbe:	pop    esp
  40bcbf:	leave  
  40bcc0:	xchg   ecx,eax
  40bcc1:	mov    DWORD PTR [esi],ecx
  40bcc3:	jbe    0x40bc93
  40bcc5:	aaa    
  40bcc6:	dec    ebx
  40bcc7:	xlat   BYTE PTR ds:[ebx]
  40bcc8:	(bad)  
  40bcc9:	loope  0x40bcd5
  40bccb:	outs   dx,DWORD PTR ds:[esi]
  40bccc:	stos   DWORD PTR es:[edi],eax
  40bccd:	outs   dx,BYTE PTR ds:[esi]
  40bcce:	sbb    ah,ch
  40bcd0:	call   0xf9b2:0x61ca3aa4
  40bcd7:	push   esp
  40bcd8:	ds retf 
  40bcda:	adc    DWORD PTR [ebp-0x39],ebx
  40bcdd:	xchg   BYTE PTR [eax],dl
  40bcdf:	les    ebp,FWORD PTR [ecx-0x1896eeb1]
  40bce5:	mov    ds:0x70f8a2dc,al
  40bcea:	mov    esi,eax
  40bcec:	outs   dx,DWORD PTR ds:[esi]
  40bced:	dec    edi
  40bcee:	push   esi
  40bcef:	popa   
  40bcf0:	sub    eax,0x15ab4306
  40bcf5:	daa    
  40bcf6:	sahf   
  40bcf7:	push   ss
  40bcf8:	add    ecx,DWORD PTR [eax+ecx*8+0x6]
  40bcfc:	popa   
  40bcfd:	retf   
  40bcfe:	inc    edx
  40bcff:	dec    esp
  40bd00:	out    dx,al
  40bd01:	test   al,0x64
  40bd03:	sub    eax,0xb5526d41
  40bd08:	cmp    DWORD PTR [ebp+0x53],eax
  40bd0b:	mov    ds:0xd1a2123d,al
  40bd10:	ins    DWORD PTR es:[edi],dx
  40bd11:	in     al,dx
  40bd12:	dec    bp
  40bd14:	mov    cl,0x3e
  40bd16:	adc    al,0xd6
  40bd18:	and    al,0x82
  40bd1a:	push   ss
  40bd1b:	lea    ebp,ds:0xa8171cca
  40bd21:	xor    ebp,DWORD PTR ds:0xbaf6b752
  40bd27:	mov    ds:0x9f8ebcf2,eax
  40bd2c:	dec    ebp
  40bd2d:	(bad)  
  40bd2e:	jbe    0x40bd40
  40bd30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd31:	test   DWORD PTR [ebp-0xe],0x91679b6c
  40bd38:	ss test eax,0x34df6e59
  40bd3e:	and    BYTE PTR [ebx],dh
  40bd40:	adc    edi,DWORD PTR [eax+0x25]
  40bd43:	in     eax,0xce
  40bd45:	dec    eax
  40bd46:	and    bl,BYTE PTR [esi]
  40bd48:	int3   
  40bd49:	xchg   ecx,eax
  40bd4a:	inc    esi
  40bd4b:	push   ebx
  40bd4c:	pop    ds
  40bd4d:	test   BYTE PTR [edx+eiz*4+0x15],dh
  40bd51:	scas   al,BYTE PTR es:[edi]
  40bd52:	dec    ebx
  40bd53:	test   DWORD PTR [edx],0xfeec9ae2
  40bd59:	add    BYTE PTR [eax+0x4d7b8097],ch
  40bd5f:	clc    
  40bd60:	xlat   BYTE PTR ds:[ebx]
  40bd61:	cmp    BYTE PTR [esi-0x52],dh
  40bd64:	xchg   edi,eax
  40bd65:	ror    DWORD PTR [eax],cl
  40bd67:	(bad)  
  40bd68:	imul   edx,esi,0x9fe0c04b
  40bd6e:	icebp  
  40bd6f:	cli    
  40bd70:	dec    eax
  40bd71:	sub    edi,DWORD PTR [esi]
  40bd73:	fisttp WORD PTR [ecx+0x35278f3a]
  40bd79:	mov    ah,0xe8
  40bd7b:	loopne 0x40bd82
  40bd7d:	adc    cl,BYTE PTR [ebx+0x23dcd337]
  40bd83:	imul   ebx,DWORD PTR [ecx],0x68e983c4
  40bd89:	popa   
  40bd8a:	jae    0x40bd6a
  40bd8c:	addr16 push ebx
  40bd8e:	in     al,0x0
  40bd90:	sub    BYTE PTR [ebx+0x5a698086],ch
  40bd96:	xor    edi,DWORD PTR [edi-0x59]
  40bd99:	shl    ah,1
  40bd9b:	add    BYTE PTR [edx-0x4a],dh
  40bd9e:	mov    al,0x3a
  40bda0:	mov    WORD PTR [edx-0x6d],gs
  40bda3:	add    esp,DWORD PTR [eax-0x1a303c2d]
  40bda9:	or     BYTE PTR [esi],bh
  40bdab:	aam    0x1e
  40bdad:	retf   0xded3
  40bdb0:	arpl   WORD PTR [ebp+0xb19072c],ax
  40bdb6:	enter  0x916a,0xe6
  40bdba:	mov    ds:0x847dbc6,eax
  40bdbf:	sbb    al,0xae
  40bdc1:	rcr    DWORD PTR [esi],0xe0
  40bdc4:	xor    ecx,edi
  40bdc6:	push   ebx
  40bdc7:	loope  0x40be48
  40bdc9:	cmp    eax,DWORD PTR [edi-0x7d53d0c9]
  40bdcf:	outs   dx,DWORD PTR ds:[esi]
  40bdd0:	or     BYTE PTR [ebx+0x43b58930],bl
  40bdd6:	mov    ds:0xf1b5700d,al
  40bddb:	fild   QWORD PTR [edx]
  40bddd:	sbb    BYTE PTR [ebp-0x7e],0x71
  40bde1:	cmc    
  40bde2:	add    esp,edx
  40bde4:	mov    cl,0x44
  40bde6:	jge    0x40be1d
  40bde8:	cmp    ecx,DWORD PTR [edi+0x32894d2a]
  40bdee:	sbb    ch,BYTE PTR [ebp+0x1650d785]
  40bdf4:	ror    bl,cl
  40bdf6:	std    
  40bdf7:	push   esi
  40bdf8:	sahf   
  40bdf9:	xchg   ecx,eax
  40bdfa:	mov    eax,0x645d3a27
  40bdff:	xor    BYTE PTR [esi+ebp*4+0xe609376],0xc4
  40be07:	inc    edx
  40be08:	outs   dx,BYTE PTR ds:[esi]
  40be09:	and    eax,0x59fe545b
  40be0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be0f:	sbb    eax,0x1f737281
  40be14:	sub    esi,eax
  40be16:	dec    edx
  40be17:	cmp    al,0xc7
  40be19:	jl     0x40bdfb
  40be1b:	(bad)  
  40be1c:	pop    edx
  40be1d:	test   BYTE PTR [edi+0x68],0xe7
  40be21:	jle    0x40bdec
  40be23:	(bad)
  40be26:	add    BYTE PTR ds:0xc7c0da6,bl
  40be2c:	mov    al,0xc0
  40be2e:	hlt    
  40be2f:	add    al,dl
  40be31:	call   0x93f3:0x66017802
  40be38:	cmp    eax,0x3fd2f1f9
  40be3d:	dec    edi
  40be3e:	dec    DWORD PTR [ecx-0x22]
  40be41:	ret    
  40be42:	jns    0x40beb5
  40be44:	mov    BYTE PTR [esi],dh
  40be46:	lds    eax,FWORD PTR [edi-0xd]
  40be49:	retf   0xbb8a
  40be4c:	jg     0x40bea5
  40be4e:	add    BYTE PTR [edi-0x63f5577d],cl
  40be54:	rcr    BYTE PTR [ecx+0x6f3cdfed],1
  40be5a:	pop    ecx
  40be5b:	dec    edi
  40be5c:	push   0xffffffe7
  40be5e:	or     esp,edx
  40be60:	push   edx
  40be61:	std    
  40be62:	or     BYTE PTR [ebp+ebp*8-0x20],0xbc
  40be67:	iret   
  40be68:	inc    esp
  40be69:	add    eax,DWORD PTR [eax+0x79875d97]
  40be6f:	mov    edx,DWORD PTR [esp+ebx*4-0x34]
  40be73:	test   DWORD PTR [eax+eax*2],0x585ee18b
  40be7a:	mov    ecx,0x66b4cf71
  40be7f:	mov    al,ds:0x81a49075
  40be84:	fwait
  40be85:	mov    ch,0x1d
  40be87:	bound  edx,QWORD PTR [eax+0x11]
  40be8a:	pop    ebp
  40be8b:	sub    edi,0xfffffffe
  40be8e:	je     0x40be7a
  40be90:	dec    esp
  40be91:	cld    
  40be92:	(bad)  
  40be93:	fisttp WORD PTR [edx-0x10]
  40be96:	mov    esp,0x63c1b467
  40be9b:	cmp    DWORD PTR [edi],ecx
  40be9d:	push   es
  40be9e:	mov    WORD PTR [edi+0x7f8d3055],fs
  40bea4:	pop    edi
  40bea5:	jge    0x40bf16
  40bea7:	mov    ?,WORD PTR [ebx]
  40bea9:	(bad)  
  40beaa:	mov    ch,0xb8
  40beac:	cmp    al,0x7a
  40beae:	adc    ecx,esp
  40beb0:	stos   BYTE PTR es:[edi],al
  40beb1:	mov    edi,0x67643ee0
  40beb6:	mov    ?,WORD PTR [edi-0x6e]
  40beb9:	adc    DWORD PTR ds:0x5533616b,edi
  40bebf:	dec    ecx
  40bec0:	lods   al,BYTE PTR ds:[esi]
  40bec1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bec2:	xchg   esi,eax
  40bec3:	stc    
  40bec4:	adc    ebx,ecx
  40bec6:	dec    edx
  40bec7:	(bad)  
  40bec8:	shl    BYTE PTR [esi],1
  40beca:	int3   
  40becb:	jmp    0x9fda:0x487161a7
  40bed2:	pop    edx
  40bed3:	or     eax,ebp
  40bed5:	mov    ch,0x43
  40bed7:	and    DWORD PTR [ecx],edx
  40bed9:	(bad)  
  40beda:	xor    dl,BYTE PTR [ebx-0x39]
  40bedd:	adc    al,0x8d
  40bedf:	sbb    bh,BYTE PTR [edi-0x51c3a273]
  40bee5:	outs   dx,BYTE PTR ds:[esi]
  40bee6:	add    DWORD PTR [ebp-0x60],ecx
  40bee9:	(bad)  
  40beea:	scas   eax,DWORD PTR es:[edi]
  40beeb:	xor    DWORD PTR ds:0xa690bbd1,esi
  40bef1:	lds    ebx,FWORD PTR [eax]
  40bef3:	imul   edx,ecx,0xa52c964b
  40bef9:	dec    eax
  40befa:	cmp    BYTE PTR [ecx],dh
  40befc:	mov    bh,0x9
  40befe:	pop    ss
  40beff:	ror    DWORD PTR [edx+edx*8+0x5acedadb],0x60
  40bf07:	push   ebx
  40bf09:	mov    edi,0x7c9e26d9
  40bf0e:	jno    0x40bf38
  40bf10:	aas    
  40bf11:	sbb    BYTE PTR ds:0xe0fec238,dh
  40bf17:	and    eax,0x7e1c532a
  40bf1c:	call   0x7d57:0x98068ecf
  40bf23:	push   es
  40bf24:	xor    ah,BYTE PTR [ebx+esi*2]
  40bf27:	push   0xffffffb5
  40bf29:	mov    eax,ds:0x7763fcab
  40bf2e:	add    dl,dl
  40bf30:	(bad)  
  40bf31:	fs in  al,0x63
  40bf34:	(bad)  
  40bf35:	enter  0x1a5f,0x47
  40bf39:	adc    al,0x50
  40bf3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf3d:	mov    dh,0xd2
  40bf3f:	push   ecx
  40bf40:	sub    DWORD PTR [ebx+edi*2+0x617ccef4],ebp
  40bf47:	fcom   DWORD PTR [edi-0x7d]
  40bf4a:	ror    esp,1
  40bf4c:	js     0x40bf4a
  40bf4e:	out    dx,eax
  40bf4f:	imul   esp,DWORD PTR [ebx+0x49a2929d],0xbae50187
  40bf59:	mov    ds:0xc3b62585,al
  40bf5e:	xor    bh,BYTE PTR [edx+0x36]
  40bf61:	mov    DWORD PTR [edi+0x9],edi
  40bf64:	into   
  40bf65:	mov    cl,BYTE PTR [edx-0x2623b92d]
  40bf6b:	idiv   BYTE PTR [eax-0x32]
  40bf6e:	stc    
  40bf6f:	addr16 (bad) 
  40bf71:	in     al,0xa2
  40bf73:	add    edx,esi
  40bf75:	(bad)  
  40bf76:	jle    0x40bf98
  40bf78:	loope  0x40bf62
  40bf7a:	jns    0x40beff
  40bf7c:	test   BYTE PTR [ecx+0x7f337c8a],0x78
  40bf83:	and    al,0xd6
  40bf85:	inc    ebx
  40bf86:	sub    BYTE PTR [ecx],dh
  40bf88:	ror    BYTE PTR [ebp+0x2b],1
  40bf8b:	(bad)  
  40bf8c:	xchg   esp,eax
  40bf8d:	xchg   edx,eax
  40bf8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf8f:	loope  0x40c009
  40bf91:	pop    es
  40bf92:	(bad)  
  40bf94:	loopne 0x40bf47
  40bf96:	cmp    al,0xbd
  40bf98:	jbe    0x40bf3b
  40bf9a:	xchg   ebx,eax
  40bf9b:	add    esp,DWORD PTR [edi+0x53]
  40bf9e:	daa    
  40bf9f:	pop    eax
  40bfa0:	add    DWORD PTR [ebp-0x5929478b],0x65d09bcf
  40bfaa:	(bad)
  40bfae:	outs   dx,DWORD PTR ds:[esi]
  40bfaf:	daa    
  40bfb0:	ins    BYTE PTR es:[edi],dx
  40bfb1:	mov    bl,0x38
  40bfb3:	fidiv  WORD PTR [edi+0x78]
  40bfb6:	adc    DWORD PTR [ecx+0x6da9fc66],esp
  40bfbc:	pop    ds
  40bfbd:	mov    ch,0x36
  40bfbf:	call   0x7012:0x72f4909
  40bfc6:	pop    ecx
  40bfc7:	test   al,0x80
  40bfc9:	push   ebx
  40bfca:	in     al,0xb0
  40bfcc:	jmp    0x40bfd4
  40bfce:	sbb    al,0x78
  40bfd0:	test   edi,0x8c630675
  40bfd6:	inc    ecx
  40bfd7:	nop
  40bfd8:	inc    esp
  40bfd9:	pop    esp
  40bfda:	ret    
  40bfdb:	pop    eax
  40bfdc:	sar    BYTE PTR [edi-0x50],1
  40bfdf:	pop    esp
  40bfe0:	push   0x65
  40bfe2:	les    edx,FWORD PTR [edx+0x1]
  40bfe5:	adc    al,0xd
  40bfe7:	mov    cl,BYTE PTR [esi+edx*1-0x6313b836]
  40bfee:	(bad)  
  40bfef:	loope  0x40bfbc
  40bff1:	mov    edx,edx
  40bff3:	dec    eax
  40bff4:	adc    dl,BYTE PTR [edx-0x7d]
  40bff7:	xchg   DWORD PTR [edi+0x6e],esi
  40bffa:	into   
  40bffb:	sub    ch,BYTE PTR ds:0xc2a85521
  40c001:	sar    DWORD PTR [ecx+0x7e],0xc4
  40c005:	mov    ah,0x9
  40c007:	loopne 0x40bf92
  40c009:	pop    ds
  40c00a:	mov    edx,eax
  40c00c:	loope  0x40c086
  40c00e:	or     ax,0x9b9
  40c012:	push   cs
  40c013:	(bad)  
  40c014:	fidivr DWORD PTR [eax-0x65]
  40c017:	lods   eax,DWORD PTR ds:[esi]
  40c018:	dec    edi
  40c019:	mov    edx,0xc0bac07
  40c01e:	into   
  40c01f:	push   ebp
  40c020:	xor    ah,BYTE PTR [edx+0x78ca5f7f]
  40c026:	push   eax
  40c027:	mov    al,ds:0xbc884380
  40c02c:	adc    BYTE PTR [edx+ebp*4+0x6d25dbd7],dh
  40c033:	mov    eax,ds:0x687ca747
  40c038:	push   ebp
  40c039:	ja     0x40bfee
  40c03b:	das    
  40c03c:	mov    ds:0xf07152ea,eax
  40c041:	adc    al,0x57
  40c043:	push   ebx
  40c044:	sub    ecx,eax
  40c046:	mov    edi,0xcb447890
  40c04b:	loopne 0x40c047
  40c04d:	xchg   edx,eax
  40c04e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c04f:	and    DWORD PTR [ebp-0x3c8644f],edx
  40c055:	loopne 0x40bfdb
  40c057:	(bad)  
  40c058:	adc    eax,edx
  40c05a:	jecxz  0x40c015
  40c05c:	(bad)  
  40c05d:	stos   DWORD PTR es:[edi],eax
  40c05e:	jmp    0xf7a1ae05
  40c063:	into   
  40c064:	lds    esp,FWORD PTR [eax+edi*8]
  40c067:	lods   eax,DWORD PTR ds:[esi]
  40c068:	cmc    
  40c069:	inc    esi
  40c06a:	inc    esi
  40c06b:	inc    esi
  40c06c:	add    al,0x3
  40c06e:	cli    
  40c06f:	cs mov dh,0x6a
  40c072:	loope  0x40c00c
  40c074:	inc    edx
  40c075:	icebp  
  40c076:	mov    bh,0x30
  40c078:	scas   eax,DWORD PTR es:[edi]
  40c079:	sub    DWORD PTR [eax-0x4c80fc72],eax
  40c07f:	pop    edx
  40c080:	test   BYTE PTR [ebx],bh
  40c082:	sbb    DWORD PTR [ebx-0x60],ebx
  40c085:	mov    bl,0xad
  40c087:	sbb    eax,0x801144b2
  40c08c:	jb     0x40c05e
  40c08e:	push   esi
  40c08f:	cmp    esp,DWORD PTR [ecx-0x49d9a509]
  40c095:	jecxz  0x40c111
  40c097:	xchg   ebp,eax
  40c098:	cmp    ax,WORD PTR [ebx]
  40c09b:	outs   dx,BYTE PTR ds:[esi]
  40c09c:	mov    esp,0xefa0c278
  40c0a1:	xchg   edi,eax
  40c0a2:	jl     0x40c0d2
  40c0a4:	sahf   
  40c0a5:	push   ecx
  40c0a6:	pushw  0xffd6
  40c0a9:	das    
  40c0aa:	pop    edi
  40c0ab:	mov    dh,0x68
  40c0ad:	mov    edx,0x797e86f2
  40c0b2:	in     al,dx
  40c0b3:	dec    ecx
  40c0b4:	mov    al,0x59
  40c0b6:	mov    eax,0x9952480e
  40c0bb:	sbb    al,ah
  40c0bd:	mov    BYTE PTR [edx+0x4d],cl
  40c0c0:	aas    
  40c0c1:	call   0xa2b9:0x5b88dfc3
  40c0c8:	test   al,0x86
  40c0ca:	add    al,0xcf
  40c0cc:	lods   al,BYTE PTR ds:[esi]
  40c0cd:	jmp    0xeaed:0xb1c387ff
  40c0d4:	sbb    al,0x87
  40c0d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c0d7:	outs   dx,DWORD PTR ds:[esi]
  40c0d8:	fisubr DWORD PTR [ecx-0x4e]
  40c0db:	mov    al,0x9
  40c0dd:	xchg   edx,eax
  40c0de:	pop    ds
  40c0df:	pop    ss
  40c0e0:	call   0x2642:0x51048335
  40c0e7:	xchg   ebp,eax
  40c0e8:	xor    ah,BYTE PTR [edx+ebp*1]
  40c0eb:	xchg   edx,eax
  40c0ec:	add    DWORD PTR [eax],edx
  40c0ee:	in     eax,dx
  40c0ef:	mov    eax,ds:0x7b645323
  40c0f4:	push   ss
  40c0f5:	add    al,0x11
  40c0f7:	(bad)  
  40c0f8:	cli    
  40c0f9:	icebp  
  40c0fa:	push   ss
  40c0fb:	add    al,0xb6
  40c0fd:	out    dx,al
  40c0fe:	inc    ebx
  40c0ff:	adc    BYTE PTR [edx+0x6],al
  40c102:	dec    ebp
  40c103:	bound  edx,QWORD PTR [ecx-0x53]
  40c106:	rol    BYTE PTR [ebx+eax*8+0x5e],1
  40c10a:	pop    eax
  40c10b:	retf   
  40c10c:	jmp    0xd4e9:0xaadb1a45
  40c113:	out    dx,al
  40c114:	inc    edi
  40c115:	add    eax,0xd0bb0d5a
  40c11a:	pusha  
  40c11b:	mov    ebp,0x80313746
  40c120:	into   
  40c121:	je     0x40c18d
  40c123:	mov    dl,0x84
  40c125:	add    al,0xdb
  40c127:	pop    ds
  40c128:	cs add al,0x3d
  40c12b:	enter  0xfa2f,0x2e
  40c12f:	jbe    0x40c100
  40c131:	mov    ecx,0x45478a82
  40c136:	push   esi
  40c137:	mov    al,ds:0x87820e6c
  40c13c:	pop    esp
  40c13d:	inc    esi
  40c13e:	cmc    
  40c13f:	imul   eax,DWORD PTR [eax+0x7933e2f6],0x8d2e8be4
  40c149:	call   0x5dc3:0x9333cd18
  40c150:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c151:	mov    eax,ds:0x3627e827
  40c156:	push   esp
  40c157:	adc    dh,dl
  40c159:	jb     0x40c118
  40c15b:	dec    ebp
  40c15c:	es iret 
  40c15e:	call   FWORD PTR [edx-0x63]
  40c161:	jo     0x40c1d9
  40c163:	and    BYTE PTR [ecx+eiz*8],0xbe
  40c167:	fnstcw WORD PTR [eax+0x37]
  40c16a:	cmp    DWORD PTR [ecx],ecx
  40c16c:	fs adc eax,0x5152aed4
  40c172:	pushf  
  40c173:	ret    0x7184
  40c176:	add    eax,0x6f372468
  40c17b:	cmc    
  40c17c:	leave  
  40c17d:	mov    bl,0xe1
  40c17f:	rol    DWORD PTR [edx-0x42c5e4dd],0xd
  40c186:	mov    BYTE PTR [esi-0x504f6614],ch
  40c18c:	scas   eax,DWORD PTR es:[edi]
  40c18d:	mov    eax,ds:0x650550f3
  40c192:	cmp    BYTE PTR [ecx],ch
  40c194:	mov    eax,0x7c4877b3
  40c199:	sub    bl,BYTE PTR [edi-0x4afe8f3b]
  40c19f:	out    dx,eax
  40c1a0:	pop    esi
  40c1a1:	cmp    DWORD PTR [edi],esp
  40c1a3:	sub    ch,BYTE PTR [esi+0x74]
  40c1a6:	or     dh,BYTE PTR [ebp+0x358cd95d]
  40c1ac:	fcmovnbe st,st(6)
  40c1ae:	outs   dx,BYTE PTR ds:[esi]
  40c1af:	add    edx,DWORD PTR [ecx]
  40c1b1:	(bad)  
  40c1b2:	mov    al,ds:0xb7efa4d7
  40c1b7:	mov    ds:0x1873d02,eax
  40c1bc:	push   ds
  40c1bd:	ret    
  40c1be:	and    DWORD PTR [ebp-0x24],esi
  40c1c1:	xor    eax,DWORD PTR [ebp-0x71c78005]
  40c1c7:	mov    edx,0xe8661c19
  40c1cc:	stos   BYTE PTR es:[edi],al
  40c1cd:	jnp    0x40c239
  40c1cf:	lock jle 0x40c1de
  40c1d2:	jecxz  0x40c17d
  40c1d4:	xor    BYTE PTR [edi],ah
  40c1d6:	adc    esp,DWORD PTR [esi+0x1b]
  40c1d9:	cmp    BYTE PTR [eax-0x4],0xf0
  40c1dd:	push   ebx
  40c1de:	fbstp  TBYTE PTR [edx-0x2d05c82a]
  40c1e4:	xor    edx,esi
  40c1e6:	mov    eax,0x545908bf
  40c1eb:	fsub   QWORD PTR [ebx]
  40c1ed:	pusha  
  40c1ee:	int3   
  40c1ef:	mov    ds:0x38e54110,eax
  40c1f4:	xlat   BYTE PTR ds:[ebx]
  40c1f5:	aam    0x31
  40c1f7:	ret    0xf3d0
  40c1fa:	mov    eax,0xe9196984
  40c1ff:	test   al,0x24
  40c201:	shl    BYTE PTR [ebp-0x47],1
  40c204:	les    edx,FWORD PTR [eax]
  40c206:	das    
  40c207:	(bad)  
  40c208:	les    esp,FWORD PTR [eax+0x3c]
  40c20b:	ins    BYTE PTR es:[edi],dx
  40c20c:	gs (bad) 
  40c20e:	hlt    
  40c20f:	and    al,BYTE PTR [ecx+0x2c1a5e3b]
  40c215:	jg     0x40c1aa
  40c217:	je     0x40c294
  40c219:	mul    BYTE PTR [ebx]
  40c21b:	pop    edi
  40c21c:	mov    ecx,0x8e86386d
  40c221:	dec    ecx
  40c222:	fdivr  QWORD PTR [esi]
  40c224:	dec    esi
  40c225:	retf   
  40c226:	sbb    edi,0xb5663cb2
  40c22c:	fcomi  st,st(4)
  40c22e:	adc    al,0xf
  40c230:	jp     0x40c297
  40c232:	fs daa 
  40c234:	out    dx,eax
  40c235:	inc    ecx
  40c236:	hlt    
  40c237:	mov    edi,0xc4f28132
  40c23c:	fiadd  WORD PTR [edi]
  40c23e:	cmp    ah,cl
  40c240:	std    
  40c241:	repnz push ebx
  40c243:	adc    al,0x44
  40c245:	add    edi,DWORD PTR ds:0x3d521bd6
  40c24b:	xchg   esp,eax
  40c24c:	sbb    al,0x8
  40c24e:	lods   al,BYTE PTR ds:[esi]
  40c24f:	outs   dx,BYTE PTR ds:[esi]
  40c250:	push   0x6f
  40c252:	jno    0x40c1d6
  40c254:	pop    es
  40c255:	mov    ebx,ecx
  40c257:	push   esp
  40c258:	aam    0x5
  40c25a:	es push edx
  40c25c:	fnstcw WORD PTR [edi+eax*4-0x307e039c]
  40c263:	stos   DWORD PTR es:[edi],eax
  40c264:	xchg   edx,eax
  40c265:	daa    
  40c266:	push   eax
  40c267:	inc    ecx
  40c268:	cmp    DWORD PTR [ebx-0xd],edi
  40c26b:	dec    edi
  40c26c:	int3   
  40c26d:	and    al,bl
  40c26f:	adc    al,0x2
  40c271:	scas   al,BYTE PTR es:[edi]
  40c272:	frstor [edi-0x26e1200c]
  40c278:	adc    BYTE PTR [edi-0x114b76d],dl
  40c27e:	ss cdq 
  40c280:	mov    ebp,0xf1d05fa7
  40c285:	adc    edx,DWORD PTR [ecx+0x620e21b6]
  40c28b:	jecxz  0x40c279
  40c28d:	and    esp,DWORD PTR [eax+0x351cd380]
  40c293:	add    al,BYTE PTR [edx]
  40c295:	loop   0x40c284
  40c297:	and    eax,0x625825fd
  40c29c:	adc    eax,0xf95d6b9c
  40c2a1:	xchg   edx,eax
  40c2a2:	in     eax,dx
  40c2a3:	cmp    eax,0x272e1c8b
  40c2a8:	adc    al,0x28
  40c2aa:	jle    0x40c31f
  40c2ac:	xchg   BYTE PTR [ebx+ebx*1],dl
  40c2af:	push   edx
  40c2b0:	ds out dx,eax
  40c2b2:	into   
  40c2b3:	pop    ecx
  40c2b4:	mov    ah,0xd6
  40c2b6:	cs loopne 0x40c2bc
  40c2b9:	inc    ebp
  40c2ba:	inc    esp
  40c2bb:	mov    ?,WORD PTR ds:0xdde11510
  40c2c1:	call   0x8b59:0x853e5044
  40c2c8:	cmp    ebp,ebx
  40c2ca:	ins    DWORD PTR es:[edi],dx
  40c2cb:	aas    
  40c2cc:	jno    0x40c307
  40c2ce:	xor    BYTE PTR [ecx+0x12],0xa5
  40c2d2:	mov    ecx,0x97486bd9
  40c2d7:	inc    edx
  40c2d8:	cmp    eax,0x318664be
  40c2dd:	imul   edx,DWORD PTR [ebp-0x61],0x4404c8b5
  40c2e4:	test   bh,0xc8
  40c2e7:	aam    0x93
  40c2e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2eb:	mov    ebx,0x3951a10f
  40c2f0:	pop    edi
  40c2f1:	mov    fs,WORD PTR [ebp-0x6bfd6e68]
  40c2f7:	add    BYTE PTR [eax],0xbf
  40c2fa:	mov    gs:0x82b58f24,al
  40c300:	push   ebx
  40c301:	cli    
  40c302:	xlat   BYTE PTR ds:[ebx]
  40c303:	(bad)  
  40c304:	stos   DWORD PTR es:[edi],eax
  40c305:	stos   DWORD PTR es:[edi],eax
  40c306:	push   es
  40c307:	xchg   edx,eax
  40c308:	stc    
  40c309:	adc    edx,DWORD PTR ds:[edi]
  40c30c:	pusha  
  40c30d:	cld    
  40c30e:	mov    edx,0x6a40d9f
  40c313:	push   0xffffffc5
  40c315:	push   esp
  40c316:	mov    cl,0xe3
  40c318:	pop    ds
  40c319:	mov    ds:0xeae9dde2,al
  40c31e:	stc    
  40c31f:	jmp    0xc286:0xfebf49bc
  40c326:	les    esi,FWORD PTR [esi+eax*1-0x6e44d44f]
  40c32d:	push   ss
  40c32e:	adc    esp,esi
  40c330:	xchg   ebx,eax
  40c331:	in     al,0x58
  40c333:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c334:	into   
  40c335:	inc    ebp
  40c336:	loopne 0x40c325
  40c338:	and    eax,ebp
  40c33a:	mov    WORD PTR [edi+ebp*8-0x15],ds
  40c33e:	mov    ds:0xf53a76cd,eax
  40c343:	xor    BYTE PTR [ecx-0x7a],ah
  40c346:	xor    ecx,DWORD PTR [edx]
  40c348:	int3   
  40c349:	shl    BYTE PTR ds:0x672f2695,0x30
  40c350:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c351:	add    bh,BYTE PTR [eiz*8+0x66c7504f]
  40c358:	mov    ch,BYTE PTR [ebx]
  40c35a:	mov    eax,edx
  40c35c:	jle    0x40c2f8
  40c35e:	sub    BYTE PTR [ecx+eax*8+0x3370f7b5],0x2c
  40c366:	inc    ebx
  40c367:	mov    bl,0x74
  40c369:	lahf   
  40c36a:	iret   
  40c36b:	jb     0x40c314
  40c36d:	and    ebp,DWORD PTR [edx-0x326134cd]
  40c373:	sbb    edx,DWORD PTR [edi]
  40c375:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c377:	pop    eax
  40c378:	mov    edx,0x138e0a26
  40c37d:	rcl    cl,0x51
  40c380:	imul   esi,edi,0xde3cb390
  40c386:	lock (bad) 
  40c388:	cmp    esi,edx
  40c38a:	push   eax
  40c38b:	fidiv  WORD PTR [edi]
  40c38d:	sahf   
  40c38e:	sar    DWORD PTR [eax],1
  40c390:	jg     0x40c336
  40c392:	mov    esp,0xe83e0980
  40c397:	(bad)  
  40c398:	push   esi
  40c399:	sub    DWORD PTR [edx-0x6fcd7445],eax
  40c39f:	push   eax
  40c3a0:	sbb    eax,0x363ac3ca
  40c3a5:	and    eax,0xd86d8a09
  40c3aa:	or     eax,0x86ca19b6
  40c3af:	jbe    0x40c417
  40c3b1:	std    
  40c3b2:	push   edx
  40c3b3:	push   eax
  40c3b4:	mov    esi,0x9b52f92f
  40c3b9:	aad    0x1
  40c3bb:	pop    ebx
  40c3bc:	inc    ebp
  40c3bd:	push   eax
  40c3be:	push   esp
  40c3bf:	leave  
  40c3c0:	mov    cl,0x7f
  40c3c2:	jp     0x40c3c5
  40c3c4:	xor    BYTE PTR [ebp-0x2f],bl
  40c3c7:	(bad)  
  40c3c9:	pop    edi
  40c3ca:	dec    ebx
  40c3cb:	jecxz  0x40c396
  40c3cd:	cmp    al,0xb1
  40c3cf:	fld    st(0)
  40c3d1:	jmp    0x9768:0x3c63c2c8
  40c3d8:	sub    al,0xdd
  40c3da:	push   0x60e5a72c
  40c3df:	pushf  
  40c3e0:	ret    0x2230
  40c3e3:	push   0x19
  40c3e5:	jle    0x40c431
  40c3e7:	gs xchg ecx,eax
  40c3e9:	stc    
  40c3ea:	xchg   ebp,edx
  40c3ec:	sub    DWORD PTR [edx+0x31d85493],0x614d747e
  40c3f6:	mov    cl,0x80
  40c3f8:	cs test al,0x8e
  40c3fb:	adc    BYTE PTR [eax-0x22502ae4],dh
  40c401:	mov    BYTE PTR ds:0x2b87ab54,bl
  40c407:	(bad)  
  40c408:	clc    
  40c409:	sbb    ch,BYTE PTR [edi+0x68]
  40c40c:	ficom  DWORD PTR [edi]
  40c40e:	mov    bl,0x47
  40c410:	adc    bh,bl
  40c412:	popa   
  40c413:	inc    eax
  40c414:	aad    0x93
  40c416:	outs   dx,DWORD PTR ds:[esi]
  40c417:	(bad)  
  40c418:	sbb    al,0x6d
  40c41a:	mov    bl,0x4b
  40c41c:	add    al,0x41
  40c41e:	add    ecx,esi
  40c420:	xor    DWORD PTR [ebp+eiz*4+0x64356a1e],ecx
  40c427:	mov    cl,0xb3
  40c429:	dec    ecx
  40c42a:	dec    ebx
  40c42b:	add    BYTE PTR [edi+0x51482474],al
  40c431:	add    cl,BYTE PTR [ebp+0x647d835d]
  40c437:	je     0x40c404
  40c439:	and    al,0x84
  40c43b:	pop    esp
  40c43c:	xor    BYTE PTR [esi+ebp*1-0x348e96f5],bh
  40c443:	mov    BYTE PTR [ebx-0x6],ch
  40c446:	jns    0x40c440
  40c448:	arpl   WORD PTR [ebp-0x5b],cx
  40c44b:	cmp    edi,edx
  40c44d:	in     al,dx
  40c44e:	mov    edi,0x5d344fff
  40c453:	gs cs ins DWORD PTR es:[edi],dx
  40c456:	sbb    al,0xdb
  40c458:	mov    dh,0xcd
  40c45a:	stos   BYTE PTR es:[di],al
  40c45c:	push   cs
  40c45d:	aas    
  40c45e:	test   DWORD PTR [ecx],esi
  40c460:	sub    dh,BYTE PTR [esi]
  40c462:	dec    ecx
  40c463:	sub    ah,ah
  40c465:	neg    DWORD PTR [eax]
  40c467:	outs   dx,BYTE PTR ds:[esi]
  40c468:	inc    edi
  40c469:	and    eax,0xaf0e0f2e
  40c46e:	call   0x16f4:0x3fae6f2d
  40c475:	rcl    edx,1
  40c477:	mov    ebp,0x6b38f15b
  40c47c:	sbb    DWORD PTR [esi-0x53],edx
  40c47f:	fisub  DWORD PTR [edx+0x51]
  40c482:	inc    eax
  40c483:	pop    es
  40c484:	push   es
  40c485:	sub    al,0x8
  40c487:	mov    ebp,0x68bf416b
  40c48c:	in     al,dx
  40c48d:	popf   
  40c48e:	jo     0x40c475
  40c490:	ins    DWORD PTR es:[edi],dx
  40c491:	test   edi,edx
  40c493:	cli    
  40c494:	dec    eax
  40c495:	sar    bh,cl
  40c497:	enter  0xcc83,0xe0
  40c49b:	fdivr  st,st(5)
  40c49d:	(bad)  
  40c49e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c49f:	cwde   
  40c4a0:	sub    al,0xb
  40c4a2:	fadd   st(5),st
  40c4a4:	popa   
  40c4a5:	pop    esp
  40c4a6:	and    al,0xd2
  40c4a8:	sub    al,BYTE PTR [edx+0x52]
  40c4ab:	sub    ebx,DWORD PTR [eax+0x749b8ca]
  40c4b1:	push   ebx
  40c4b2:	enter  0x9fc4,0x51
  40c4b6:	arpl   dx,bx
  40c4b8:	mov    edx,0xb9b9cbe0
  40c4bd:	sbb    eax,0x6a7305c2
  40c4c2:	jmp    0x40c445
  40c4c4:	(bad)  
  40c4c5:	loop   0x40c47a
  40c4c7:	fmul   DWORD PTR [edx+eiz*4-0x59f36df3]
  40c4ce:	add    al,0x50
  40c4d0:	push   DWORD PTR [eax-0x4591fab8]
  40c4d6:	ret    
  40c4d7:	ret    0x1a34
  40c4da:	js     0x40c4e4
  40c4dc:	dec    ebx
  40c4dd:	cwde   
  40c4de:	mov    ah,0xf3
  40c4e0:	mov    eax,ds:0xaf5cac12
  40c4e5:	xchg   ebp,eax
  40c4e6:	(bad)  
  40c4e7:	aad    0x5d
  40c4e9:	dec    ebx
  40c4ea:	rcl    BYTE PTR [ecx-0x6e963d34],0x3a
  40c4f1:	or     al,0x69
  40c4f3:	dec    esp
  40c4f4:	xor    BYTE PTR [ebx+eax*1-0x68],dh
  40c4f8:	xchg   esp,eax
  40c4f9:	mov    esi,0x3dfe7f30
  40c4fe:	cmp    DWORD PTR [eax-0x10b1fc35],ebp
  40c504:	into   
  40c505:	sar    DWORD PTR [ebp+0x34],1
  40c508:	je     0x40c54e
  40c50a:	lea    edx,[edx-0x36]
  40c50d:	cmp    BYTE PTR [ebx-0x79d583fc],al
  40c513:	mov    al,ds:0xd24c0b3b
  40c518:	pop    eax
  40c519:	pop    edx
  40c51a:	mov    BYTE PTR [edi-0x6d],al
  40c51d:	les    ecx,FWORD PTR [ecx]
  40c51f:	adc    bl,dh
  40c521:	jno    0x40c55b
  40c523:	jg     0x40c4b0
  40c525:	pop    ebx
  40c526:	cmc    
  40c527:	out    0xd4,eax
  40c529:	mov    dh,0x4e
  40c52b:	jb     0x40c59a
  40c52d:	mov    ds:0xa33926d1,al
  40c532:	cwde   
  40c533:	sub    dl,bl
  40c535:	pop    ebx
  40c536:	test   al,0xa8
  40c538:	into   
  40c539:	ja     0x40c529
  40c53b:	cmp    DWORD PTR [edx-0x7b],0xffffffc1
  40c53f:	test   BYTE PTR [eax+edi*8-0x2f],dh
  40c543:	sbb    esp,0x30344a78
  40c549:	push   ecx
  40c54a:	das    
  40c54b:	cmp    dl,BYTE PTR [ebp+eax*2+0x7]
  40c54f:	scas   eax,DWORD PTR es:[edi]
  40c550:	jmp    0xb38f:0x52ca972f
  40c557:	ret    
  40c558:	push   esi
  40c559:	xchg   esi,eax
  40c55a:	add    esi,ecx
  40c55c:	add    BYTE PTR [edx-0x72],0x97
  40c560:	dec    ecx
  40c561:	stos   DWORD PTR es:[edi],eax
  40c562:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c563:	push   0x14
  40c565:	pop    esp
  40c566:	mov    edi,esi
  40c568:	jae    0x40c53e
  40c56a:	xchg   BYTE PTR [edi+0x15d94b38],dh
  40c570:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c571:	push   ebp
  40c572:	mov    cs,WORD PTR [edx]
  40c574:	hlt    
  40c575:	iret   
  40c576:	mov    esp,0x70fb1d26
  40c57b:	loopne 0x40c5a5
  40c57d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c57e:	not    DWORD PTR [ebp+0x2f73b190]
  40c584:	inc    esp
  40c585:	call   0x7876c6ca
  40c58a:	gs mov dl,0xa0
  40c58d:	push   edi
  40c58e:	jnp    0x40c51d
  40c590:	pop    ss
  40c591:	das    
  40c592:	aam    0xa0
  40c594:	xor    al,0x68
  40c596:	out    0xcd,eax
  40c598:	in     al,dx
  40c599:	jp     0x40c5ce
  40c59b:	stos   BYTE PTR es:[edi],al
  40c59c:	dec    esi
  40c59d:	rcl    DWORD PTR [eax-0x5b],0xc4
  40c5a1:	cmp    DWORD PTR [esi+0x25],esp
  40c5a4:	enter  0x7601,0xf6
  40c5a8:	enter  0xc17a,0xa7
  40c5ac:	test   DWORD PTR [esi+0x68bb137b],ecx
  40c5b2:	pop    ecx
  40c5b3:	mov    ecx,0x15f9693f
  40c5b8:	xor    al,0x56
  40c5ba:	add    esi,DWORD PTR [edx-0x2460bcf9]
  40c5c0:	(bad)  
  40c5c1:	jo     0x40c633
  40c5c3:	out    0x7b,al
  40c5c5:	out    dx,eax
  40c5c6:	adc    BYTE PTR [edx+0x0],ah
  40c5c9:	jmp    0x836e:0x2f6967c9
  40c5d0:	pushf  
  40c5d1:	xchg   ecx,eax
  40c5d2:	imul   edx,DWORD PTR [eax-0x7216d732],0x893676da
  40c5dc:	(bad)  
  40c5dd:	sbb    edi,eax
  40c5df:	pop    esp
  40c5e0:	sbb    edi,edx
  40c5e2:	mov    ah,0xe8
  40c5e4:	dec    edi
  40c5e5:	int3   
  40c5e6:	sbb    BYTE PTR [eax+eiz*8],bl
  40c5e9:	push   edx
  40c5ea:	adc    edx,ecx
  40c5ec:	jb     0x40c586
  40c5ee:	xchg   edi,eax
  40c5ef:	cmp    eax,0xff51d60f
  40c5f4:	sub    DWORD PTR [ebx],edi
  40c5f6:	mov    bl,BYTE PTR [eax-0x117f4eb]
  40c5fc:	jo     0x40c661
  40c5fe:	adc    eax,0xa8470cdc
  40c603:	hlt    
  40c604:	cdq    
  40c605:	lahf   
  40c606:	cwde   
  40c607:	cmp    ebx,eax
  40c609:	rcr    BYTE PTR [ebx+0x31],0x49
  40c60d:	cmp    al,0xfa
  40c60f:	test   DWORD PTR [ebp+esi*8+0x1d],ecx
  40c613:	or     ebx,esp
  40c615:	jne    0x40c5cd
  40c617:	arpl   WORD PTR [esi-0x60],cx
  40c61a:	or     eax,0xcf09e7b5
  40c61f:	jno    0x40c646
  40c621:	fcmovb st,st(7)
  40c623:	mov    esi,0xeb76d95
  40c628:	sub    dl,BYTE PTR [ecx]
  40c62a:	inc    BYTE PTR [edi-0x54]
  40c62d:	cmp    BYTE PTR [eax+0x4f8d756e],ch
  40c633:	cmp    eax,0x5c26c2ff
  40c638:	(bad)  
  40c639:	xor    eax,0x9fe650ce
  40c63e:	mov    eax,ds:0x159f97f
  40c643:	jbe    0x40c5d2
  40c645:	retf   
  40c646:	and    ch,cl
  40c648:	ret    0x71ec
  40c64b:	or     eax,0x9b9027de
  40c650:	ins    BYTE PTR es:[edi],dx
  40c651:	clc    
  40c652:	retf   
  40c653:	imul   ecx,DWORD PTR [esi],0xc7f8605b
  40c659:	fucomip st,st(6)
  40c65b:	call   0xf9159780
  40c660:	std    
  40c661:	inc    ebx
  40c662:	jne    0x40c678
  40c664:	push   esp
  40c665:	xchg   ecx,eax
  40c666:	call   0x39e3:0xaf60ac99
  40c66d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c66e:	sbb    ebp,ebx
  40c670:	pop    ebp
  40c671:	adc    BYTE PTR [ebp+0xa1e07fc],cl
  40c677:	jp     0x40c656
  40c679:	sub    BYTE PTR [edx+0x662b4043],0x6b
  40c680:	or     DWORD PTR [eax-0x5021dbc6],edi
  40c686:	xor    bh,BYTE PTR [esi+0x47]
  40c689:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c68a:	retf   
  40c68b:	gs inc edi
  40c68d:	push   edx
  40c68e:	jae    0x40c642
  40c690:	mov    ah,0x2c
  40c692:	cmp    eax,edi
  40c694:	mov    edi,0xe153f529
  40c699:	sar    BYTE PTR [ebx+0x0],0x71
  40c69d:	loopne 0x40c68b
  40c69f:	mov    edi,0x9829dea1
  40c6a4:	jb     0x40c697
  40c6a6:	arpl   WORD PTR [edi-0x7346bd41],dx
  40c6ac:	inc    edx
  40c6ad:	mov    bh,0x8c
  40c6af:	sub    ecx,DWORD PTR [edi+0x5]
  40c6b2:	add    eax,0x9818dae3
  40c6b7:	pop    eax
  40c6b8:	int    0xea
  40c6ba:	sbb    BYTE PTR [esi-0x264e6444],0x39
  40c6c1:	push   es
  40c6c2:	fiadd  DWORD PTR [ecx+0x49e44b8d]
  40c6c8:	loop   0x40c6e0
  40c6ca:	popf   
  40c6cb:	xchg   ebx,eax
  40c6cc:	jl     0x40c719
  40c6ce:	jecxz  0x40c70d
  40c6d0:	mov    esp,0x97f9d4f8
  40c6d5:	mov    ebp,0xde532828
  40c6da:	dec    ebx
  40c6db:	inc    esi
  40c6dc:	div    DWORD PTR [edi+ebx*2]
  40c6df:	add    dl,bl
  40c6e1:	loopne 0x40c6e5
  40c6e3:	adc    cl,BYTE PTR [esi+0x73701f0a]
  40c6e9:	cs adc eax,0x677c22ca
  40c6ef:	add    al,0x9f
  40c6f1:	ins    DWORD PTR es:[edi],dx
  40c6f2:	and    al,0xb1
  40c6f4:	bound  esi,QWORD PTR [ebx]
  40c6f6:	test   eax,0xe45348a7
  40c6fb:	push   es
  40c6fc:	push   esi
  40c6fd:	xor    ecx,DWORD PTR [esi+0x3a]
  40c700:	(bad)  
  40c701:	clc    
  40c702:	ror    BYTE PTR [edx-0x70],1
  40c705:	ficom  DWORD PTR [ebp+edx*1-0x48]
  40c709:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c70a:	out    dx,eax
  40c70b:	clc    
  40c70c:	in     al,0x7e
  40c70e:	mov    eax,ds:0x4586fbfb
  40c713:	sub    BYTE PTR [edi],bh
  40c715:	cmp    eax,0x54b487cb
  40c71a:	in     al,dx
  40c71b:	cmp    eax,0x18d1e406
  40c720:	or     DWORD PTR [ecx-0x3b],edi
  40c723:	pop    ss
  40c724:	cmp    eax,0x7a806a09
  40c729:	mov    bh,0xe5
  40c72b:	retf   
  40c72c:	add    eax,0x3239005e
  40c731:	scas   al,BYTE PTR es:[edi]
  40c732:	(bad)  
  40c733:	add    al,0xe9
  40c735:	iret   
  40c736:	inc    edi
  40c737:	jae    0x40c6c1
  40c739:	adc    eax,0xa0741e17
  40c73e:	lahf   
  40c73f:	ds pop eax
  40c741:	fdiv   DWORD PTR [eax+0x1c1e3bea]
  40c747:	or     eax,0x35010dbb
  40c74c:	and    dh,bh
  40c74e:	test   BYTE PTR [edi+0x6],0x9c
  40c752:	pop    ebp
  40c753:	not    BYTE PTR [ecx-0x4f00af92]
  40c759:	leave  
  40c75a:	jg     0x40c79c
  40c75c:	mov    eax,0xa035238d
  40c761:	js     0x40c7c4
  40c763:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c764:	in     eax,dx
  40c765:	jo     0x40c742
  40c767:	mov    BYTE PTR [eax-0x13641a50],0xcf
  40c76e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c76f:	in     al,dx
  40c770:	iret   
  40c771:	jg     0x40c788
  40c773:	shl    BYTE PTR [ebx-0xa],0x16
  40c777:	aam    0x46
  40c779:	retf   0x2d18
  40c77c:	mov    ebx,0xf6466bb7
  40c781:	in     eax,0xab
  40c783:	lds    edx,FWORD PTR [ebp+ebp*4+0x5]
  40c787:	dec    ecx
  40c788:	(bad)  
  40c789:	xor    ebp,DWORD PTR [ebp*1+0x5f0607bb]
  40c790:	jp     0x40c80c
  40c792:	fnstenv [eax]
  40c794:	inc    eax
  40c795:	push   edi
  40c796:	test   DWORD PTR [ecx+0x25],esp
  40c799:	push   eax
  40c79a:	jmp    0x61d1c807
  40c79f:	push   esi
  40c7a0:	inc    ecx
  40c7a1:	mov    dh,0x47
  40c7a3:	mov    ds:0x1bb13d2a,eax
  40c7a8:	fwait
  40c7a9:	xor    BYTE PTR [esi+0xa],ch
  40c7ac:	adc    ebx,DWORD PTR [edi+0x10f7582c]
  40c7b2:	cld    
  40c7b3:	jge    0x40c799
  40c7b5:	mov    dh,0x0
  40c7b7:	jecxz  0x40c7b3
  40c7b9:	adc    al,0x22
  40c7bb:	(bad)  
  40c7bc:	in     al,0xc1
  40c7be:	inc    ebp
  40c7bf:	cli    
  40c7c0:	out    dx,eax
  40c7c1:	outs   dx,BYTE PTR ds:[esi]
  40c7c2:	outs   dx,BYTE PTR ds:[esi]
  40c7c3:	test   BYTE PTR [esi],bl
  40c7c5:	outs   dx,BYTE PTR ds:[esi]
  40c7c6:	push   0x21c41dc3
  40c7cb:	js     0x40c7e7
  40c7cd:	and    bl,BYTE PTR [edx-0x17]
  40c7d0:	fwait
  40c7d1:	call   0x3ace:0xc8ff344a
  40c7d8:	dec    esi
  40c7d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7da:	bound  edx,QWORD PTR [esi-0x3e]
  40c7dd:	mov    al,0x1c
  40c7df:	(bad)  
  40c7e0:	int    0x68
  40c7e2:	mul    BYTE PTR [ebx-0x5d21bba5]
  40c7e8:	jmp    0x40c801
  40c7ea:	sbb    al,BYTE PTR [ecx-0x1e]
  40c7ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7ee:	xor    eax,0xbfad11f9
  40c7f3:	inc    eax
  40c7f4:	adc    al,0xa
  40c7f6:	sti    
  40c7f7:	mov    edi,DWORD PTR [ebx-0x33]
  40c7fa:	xchg   esi,eax
  40c7fb:	xor    al,0xc2
  40c7fd:	rcr    BYTE PTR [esi-0x7],cl
  40c800:	arpl   cx,dx
  40c802:	or     al,0x2
  40c804:	fwait
  40c805:	shl    ebx,cl
  40c807:	mov    esp,0x32398604
  40c80c:	out    0xbd,eax
  40c80e:	adc    al,BYTE PTR [edx-0x5a27a892]
  40c814:	pop    eax
  40c815:	push   ebx
  40c816:	adc    bl,BYTE PTR [edi+0x3e015bc2]
  40c81c:	xchg   DWORD PTR [ebx],edx
  40c81e:	and    esi,DWORD PTR [edi+0xd8e58e]
  40c824:	add    edi,eax
  40c826:	sub    eax,0xfe004b72
  40c82b:	and    al,0xa7
  40c82d:	push   esp
  40c82e:	xor    eax,DWORD PTR [ebp+0x4c]
  40c831:	adc    eax,0x96c23cdc
  40c836:	addr16 mov edx,edi
  40c839:	(bad)  
  40c83a:	je     0x40c886
  40c83c:	mov    ebx,0x5d5116e5
  40c841:	int3   
  40c842:	aas    
  40c843:	xor    DWORD PTR [eax],eax
  40c845:	pop    es
  40c846:	ins    DWORD PTR es:[edi],dx
  40c847:	sbb    bh,bl
  40c849:	push   ds
  40c84a:	das    
  40c84b:	pop    edx
  40c84c:	push   0x98f57aa8
  40c851:	jg     0x40c896
  40c853:	push   cs
  40c854:	push   es
  40c855:	jmp    0x40c8b8
  40c857:	fcomp  DWORD PTR [ecx]
  40c859:	dec    eax
  40c85a:	cmovae edi,DWORD PTR [ebp+esi*4-0x23]
  40c85f:	stos   DWORD PTR es:[edi],eax
  40c860:	or     cl,BYTE PTR [esi]
  40c862:	sub    DWORD PTR [esi-0x4a35efb9],ebx
  40c868:	in     al,0x74
  40c86a:	pavgw  mm0,mm3
  40c86d:	push   0xffffffbf
  40c86f:	arpl   WORD PTR [esi+0x1c],ax
  40c872:	test   al,0xd5
  40c874:	(bad)  
  40c875:	jle    0x40c7f8
  40c877:	std    
  40c878:	jecxz  0x40c878
  40c87a:	ror    BYTE PTR [edi+0x1e],cl
  40c87d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c87e:	fsub   QWORD PTR [ebx+0x25]
  40c881:	fucomp st(1)
  40c883:	add    esp,ebp
  40c885:	les    ebp,FWORD PTR [eax+esi*1-0x3744a124]
  40c88c:	mov    edx,0x5a08c615
  40c891:	mov    ch,0x78
  40c893:	dec    esp
  40c894:	mov    ds:0xb930868b,eax
  40c899:	xor    edi,DWORD PTR [edi+0x2a0bc4ae]
  40c89f:	sbb    dh,BYTE PTR [ebx-0x35]
  40c8a2:	ret    0xefdd
  40c8a5:	cmp    cl,BYTE PTR [ebx-0x73]
  40c8a8:	push   es
  40c8a9:	mul    dh
  40c8ab:	and    DWORD PTR [eax+ebp*2],ecx
  40c8ae:	hlt    
  40c8af:	leave  
  40c8b0:	sub    ebx,DWORD PTR [esi+0x5]
  40c8b3:	cmc    
  40c8b4:	push   ss
  40c8b5:	sbb    al,0x3d
  40c8b7:	mov    al,0x96
  40c8b9:	push   ecx
  40c8ba:	inc    esp
  40c8bb:	pop    edi
  40c8bc:	mov    ebp,0x62cb0365
  40c8c1:	mov    ecx,0x4cd2e390
  40c8c6:	add    cl,al
  40c8c8:	inc    ebp
  40c8c9:	sar    DWORD PTR [eax+edi*2+0x4d],0xe1
  40c8ce:	cmp    dl,BYTE PTR [esi+0x2a10058]
  40c8d4:	cmp    eax,0x5d49ddda
  40c8d9:	fyl2x  
  40c8db:	test   DWORD PTR [ebx-0x16],ecx
  40c8de:	sub    DWORD PTR ds:0x228f5f0e,0x4e
  40c8e5:	push   ebx
  40c8e6:	stc    
  40c8e7:	sbb    ecx,DWORD PTR [edx-0x68]
  40c8ea:	icebp  
  40c8eb:	dec    ebx
  40c8ec:	cs inc ecx
  40c8ee:	xor    dh,0x47
  40c8f1:	xor    esi,0xdad4a348
  40c8f7:	jmp    0x40c8ad
  40c8f9:	push   ebp
  40c8fa:	clc    
  40c8fb:	stos   BYTE PTR es:[edi],al
  40c8fc:	(bad)
  40c900:	and    eax,0xde9b94ee
  40c905:	enter  0xb0bb,0x2
  40c909:	xor    ebp,DWORD PTR [esi]
  40c90b:	inc    eax
  40c90c:	xchg   ecx,eax
  40c90d:	ds in  al,0xea
  40c910:	retf   
  40c911:	(bad)  
  40c912:	jmp    0xc2f431ff
  40c917:	jmp    0xa25f8167
  40c91c:	xchg   ebp,eax
  40c91d:	ds mov dl,0x82
  40c920:	sbb    DWORD PTR [eax-0x8c7fdff],eax
  40c926:	in     eax,dx
  40c927:	adc    DWORD PTR [ecx-0x11],ebx
  40c92a:	ja     0x40c8bb
  40c92c:	jo     0x40c8c8
  40c92e:	icebp  
  40c92f:	xchg   DWORD PTR [edx],ebx
  40c931:	ins    BYTE PTR es:[edi],dx
  40c932:	pop    edx
  40c933:	std    
  40c934:	lods   al,BYTE PTR ds:[esi]
  40c935:	mov    al,ds:0xeb3f0284
  40c93a:	pop    ds
  40c93b:	shl    BYTE PTR [esi],cl
  40c93d:	retf   
  40c93e:	jecxz  0x40c8e8
  40c940:	push   0x67
  40c942:	js     0x40c915
  40c944:	int    0x8d
  40c946:	loopne 0x40c8ec
  40c948:	pushf  
  40c949:	sub    al,0x4e
  40c94b:	pop    ds
  40c94c:	adc    BYTE PTR [edi],0x8c
  40c94f:	scas   al,BYTE PTR es:[edi]
  40c950:	xchg   esp,eax
  40c951:	pop    ds
  40c952:	jge    0x40c972
  40c954:	sub    BYTE PTR [edx-0x70b865ba],ch
  40c95a:	call   0xecd77c26
  40c95f:	ror    dl,1
  40c961:	imul   DWORD PTR [ebx+0x4]
  40c964:	dec    DWORD PTR [edx-0x272f212b]
  40c96a:	mov    cl,0xcc
  40c96c:	xor    al,0x79
  40c96e:	jb     0x40c9cd
  40c970:	sti    
  40c971:	sbb    BYTE PTR [ebp+0x3011ac45],bh
  40c977:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c978:	mov    eax,ds:0xf30758d7
  40c97d:	mov    al,BYTE PTR [esi]
  40c97f:	mov    ecx,0xcda68e56
  40c984:	movhps xmm3,QWORD PTR [esi]
  40c987:	and    bl,ch
  40c989:	sbb    cl,ch
  40c98b:	push   eax
  40c98c:	cmp    esi,esp
  40c98e:	pop    ds
  40c98f:	enter  0x2d91,0x4d
  40c993:	imul   esp,DWORD PTR [ebx],0xf
  40c996:	rcl    BYTE PTR [ebp+ebp*2+0x1c],0x5e
  40c99b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c99c:	popa   
  40c99d:	xor    al,0xa6
  40c99f:	test   DWORD PTR [esi+0x64],ecx
  40c9a2:	punpckhdq mm5,QWORD PTR [eax-0x37014236]
  40c9a9:	adc    eax,0x537f0ec4
  40c9ae:	pop    ss
  40c9af:	inc    edi
  40c9b0:	bound  ebp,QWORD PTR [ebp-0x5c]
  40c9b3:	in     al,0x57
  40c9b5:	or     al,0x5b
  40c9b7:	pop    ebp
  40c9b8:	sahf   
  40c9b9:	in     al,dx
  40c9ba:	mov    DWORD PTR [edx+ebx*4-0x3f1029af],ebp
  40c9c1:	inc    edx
  40c9c2:	xchg   ebp,eax
  40c9c3:	push   edx
  40c9c4:	add    al,0x10
  40c9c6:	idiv   esp
  40c9c8:	(bad)
  40c9cc:	xchg   DWORD PTR [ebx+0x63],edi
  40c9cf:	icebp  
  40c9d0:	push   es
  40c9d1:	shl    BYTE PTR [eax],0x55
  40c9d4:	xor    bh,dl
  40c9d6:	jle    0x40c9ae
  40c9d8:	mov    ebp,0x57029e8e
  40c9dd:	into   
  40c9de:	sbb    esi,edi
  40c9e0:	dec    ecx
  40c9e1:	mov    ch,0x0
  40c9e3:	xchg   esp,eax
  40c9e4:	loope  0x40c979
  40c9e6:	dec    edi
  40c9e7:	pop    ebp
  40c9e8:	inc    ebp
  40c9e9:	ret    0xa7d1
  40c9ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9ed:	leave  
  40c9ee:	push   edi
  40c9ef:	imul   esi,DWORD PTR [edi+edx*2],0x3767c727
  40c9f6:	addr16 popa 
  40c9f8:	repz jo 0x40c9f1
  40c9fb:	mov    ch,0xc7
  40c9fd:	jmp    0x40ca2c
  40c9ff:	dec    eax
  40ca00:	dec    ebx
  40ca01:	fsubr  QWORD PTR [esi]
  40ca03:	test   DWORD PTR ds:0x2dbe3bf3,esi
  40ca09:	xchg   ebp,eax
  40ca0a:	add    eax,0x817c691a
  40ca0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca10:	mul    BYTE PTR [ecx]
  40ca12:	pop    ebx
  40ca13:	mov    DWORD PTR [ebx],esi
  40ca15:	or     DWORD PTR [ecx-0x3170c190],eax
  40ca1b:	(bad)  
  40ca1c:	fld    TBYTE PTR [ecx+0x626a6f7b]
  40ca22:	or     eax,0x3a6ce782
  40ca27:	inc    ecx
  40ca28:	std    
  40ca29:	jnp    0x40c9cd
  40ca2b:	jp     0x40ca68
  40ca2d:	jg     0x40caae
  40ca2f:	jge    0x40ca77
  40ca31:	mov    ds:0x75a97cb8,al
  40ca36:	fnstenv [ebx]
  40ca38:	dec    edx
  40ca39:	or     cl,BYTE PTR [esi-0x5e]
  40ca3c:	adc    BYTE PTR [esi],ch
  40ca3e:	(bad)  
  40ca3f:	loop   0x40ca31
  40ca41:	popf   
  40ca42:	mov    bl,0x51
  40ca44:	push   0xffffffe0
  40ca46:	rol    DWORD PTR [edx],cl
  40ca48:	xchg   bl,ch
  40ca4a:	aad    0x58
  40ca4c:	jge    0x40c9f6
  40ca4e:	mov    al,0x3e
  40ca50:	inc    ebx
  40ca51:	call   DWORD PTR [ecx+ebx*1-0x1d]
  40ca55:	add    ah,cl
  40ca57:	cmp    BYTE PTR [edi+0x2e],bl
  40ca5a:	mov    bl,dl
  40ca5c:	xor    al,0xb6
  40ca5e:	out    dx,al
  40ca5f:	dec    edx
  40ca60:	sti    
  40ca61:	repnz das 
  40ca63:	sub    eax,0xae903bc0
  40ca68:	outs   dx,DWORD PTR ds:[esi]
  40ca69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca6a:	pop    esp
  40ca6b:	push   ebp
  40ca6c:	dec    ecx
  40ca6d:	ror    DWORD PTR [ebx],1
  40ca6f:	push   es
  40ca70:	add    al,0x8c
  40ca72:	push   eax
  40ca73:	lea    ebp,[ecx-0x25c8308f]
  40ca79:	sbb    BYTE PTR [edx-0x4f2d1e3e],cl
  40ca7f:	retf   
  40ca80:	cs add eax,ebp
  40ca83:	dec    ecx
  40ca84:	inc    DWORD PTR [edi+eiz*2]
  40ca87:	ret    0x1468
  40ca8a:	mov    ebx,0xbaba8152
  40ca8f:	in     eax,0x98
  40ca91:	or     DWORD PTR [edi],0x6fadc120
  40ca97:	xor    dh,BYTE PTR [edi]
  40ca99:	pushf  
  40ca9a:	xacquire lock adc BYTE PTR [edi-0x6d],al
  40ca9f:	stos   DWORD PTR es:[edi],eax
  40caa0:	mov    es,WORD PTR [edi]
  40caa2:	sbb    al,0x17
  40caa4:	sub    BYTE PTR [ecx+0x41b86249],0xbe
  40caab:	jp     0x40ca96
  40caad:	cwde   
  40caae:	nop
  40caaf:	mov    eax,fs
  40cab1:	in     eax,0xd
  40cab3:	adc    BYTE PTR [ebx+0x7c788af],ah
  40cab9:	scas   al,BYTE PTR es:[edi]
  40caba:	adc    al,0x11
  40cabc:	xor    BYTE PTR [ebx],0xb
  40cabf:	(bad)  
  40cac0:	repz mov cl,0x37
  40cac3:	dec    ebx
  40cac4:	or     DWORD PTR [eax],esi
  40cac6:	clc    
  40cac7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cac8:	xchg   ebp,eax
  40cac9:	xor    ecx,eax
  40cacb:	fwait
  40cacc:	sbb    ah,dl
  40cace:	jl     0x40cb0d
  40cad0:	or     eax,0x7bf52803
  40cad5:	jl     0x40ca58
  40cad7:	mov    ecx,0xcb68ccd6
  40cadc:	xor    al,BYTE PTR [edx]
  40cade:	mov    al,ds:0x3cf54986
  40cae3:	and    al,BYTE PTR [edi+0x53]
  40cae6:	lock mov ch,0x79
  40cae9:	bound  ebx,QWORD PTR [edi+esi*4]
  40caec:	call   0x485e088f
  40caf1:	mov    ch,0xaf
  40caf3:	mov    ss,eax
  40caf5:	clc    
  40caf6:	push   esi
  40caf7:	das    
  40caf8:	hlt    
  40caf9:	add    BYTE PTR [ebx],bh
  40cafb:	arpl   WORD PTR ds:0xc573f57,ax
  40cb01:	idiv   BYTE PTR [ecx-0x6e]
  40cb04:	data16 clc 
  40cb06:	inc    edi
  40cb07:	stc    
  40cb08:	sbb    eax,esi
  40cb0a:	in     al,dx
  40cb0b:	in     eax,dx
  40cb0c:	test   BYTE PTR [ebx+0xf],ah
  40cb0f:	sar    DWORD PTR ds:0x65210171,cl
  40cb15:	out    0x47,eax
  40cb17:	shr    BYTE PTR [esi-0x33],1
  40cb1a:	xchg   bh,dh
  40cb1c:	in     eax,0xa2
  40cb1e:	mov    ecx,0xfe82663e
  40cb23:	inc    edx
  40cb24:	pop    ebx
  40cb25:	xor    esi,DWORD PTR [esi+0x4e]
  40cb28:	clc    
  40cb29:	xor    BYTE PTR [edi],al
  40cb2b:	push   edi
  40cb2c:	pop    esp
  40cb2d:	add    cl,BYTE PTR [ecx+0x70]
  40cb30:	out    dx,al
  40cb31:	jae    0x40cba9
  40cb33:	dec    edi
  40cb34:	retf   0x9c68
  40cb37:	sbb    DWORD PTR [ebx+0x10e15f07],ebx
  40cb3d:	sar    BYTE PTR [esi],1
  40cb3f:	addr16 push ecx
  40cb41:	cmc    
  40cb42:	(bad)  
  40cb43:	push   ds
  40cb44:	mov    es,WORD PTR [ebx]
  40cb46:	jle    0x40cb77
  40cb48:	push   esp
  40cb49:	mov    esi,0x282d623
  40cb4e:	dec    esi
  40cb4f:	out    0x92,al
  40cb51:	mov    bh,BYTE PTR [ecx-0x69]
  40cb54:	fchs   
  40cb56:	push   ecx
  40cb57:	pop    ds
  40cb58:	bound  ebp,QWORD PTR [edi-0x3294bfbb]
  40cb5e:	std    
  40cb5f:	mov    al,0x76
  40cb61:	mov    ecx,0x1cd4c26f
  40cb66:	inc    esp
  40cb67:	inc    ebp
  40cb68:	das    
  40cb69:	in     al,dx
  40cb6a:	dec    ecx
  40cb6b:	into   
  40cb6c:	out    0xd0,eax
  40cb6e:	push   eax
  40cb6f:	les    esi,FWORD PTR [ebp+0x94eda7a]
  40cb75:	mov    ebp,DWORD PTR ds:0xbb05d10d
  40cb7b:	jl     0x40cb96
  40cb7d:	ret    0x5e90
  40cb80:	imul   ecx,DWORD PTR [ebp-0x2cf06b0f],0x102ac3e4
  40cb8a:	dec    ecx
  40cb8b:	dec    edi
  40cb8c:	ror    BYTE PTR [ecx-0x2],cl
  40cb8f:	dec    ebp
  40cb90:	outs   dx,BYTE PTR ds:[esi]
  40cb91:	jmp    0xa474:0x9c71772a
  40cb98:	adc    edx,DWORD PTR [ecx+0x45]
  40cb9b:	pusha  
  40cb9c:	pop    ecx
  40cb9d:	shl    DWORD PTR [ebx-0x74],1
  40cba0:	inc    esp
  40cba1:	shl    DWORD PTR ds:0x5b150877,0x93
  40cba8:	stos   DWORD PTR es:[edi],eax
  40cba9:	sar    DWORD PTR [edx],0xb5
  40cbac:	jb     0x40cb6d
  40cbae:	ret    
  40cbaf:	int    0x3e
  40cbb1:	fcom   st(1)
  40cbb3:	aaa    
  40cbb4:	or     al,0xc5
  40cbb6:	dec    edi
  40cbb7:	add    eax,0x58bea2d6
  40cbbc:	js     0x40cc20
  40cbbe:	mov    esp,0x115e8b54
  40cbc3:	push   ebx
  40cbc4:	xchg   esp,eax
  40cbc5:	push   0xffffff97
  40cbc7:	ja     0x40cb57
  40cbc9:	retf   
  40cbca:	mov    al,0xca
  40cbcc:	or     eax,0x168c48f5
  40cbd1:	or     BYTE PTR [edx+0x528e5dab],ch
  40cbd7:	add    esp,DWORD PTR [ebx]
  40cbd9:	adc    eax,0x1246f81e
  40cbde:	xchg   esp,eax
  40cbdf:	cli    
  40cbe0:	jp     0x40cb7a
  40cbe2:	fcom   DWORD PTR fs:[edi+ecx*8+0x12]
  40cbe7:	ins    DWORD PTR es:[edi],dx
  40cbe8:	data16 fsub DWORD PTR [edi-0xdc2d88b]
  40cbef:	(bad)  
  40cbf0:	sar    DWORD PTR [ebp-0x77],1
  40cbf3:	into   
  40cbf4:	inc    edx
  40cbf5:	inc    ebx
  40cbf6:	outs   dx,BYTE PTR ds:[esi]
  40cbf7:	xor    DWORD PTR [edx-0x46cb8c3c],edi
  40cbfd:	(bad)  
  40cbfe:	lods   al,BYTE PTR ds:[esi]
  40cbff:	cmp    al,0x2b
  40cc01:	scas   eax,DWORD PTR es:[edi]
  40cc02:	fsubr  QWORD PTR [ebx]
  40cc04:	pushf  
  40cc05:	pushf  
  40cc06:	mov    gs,WORD PTR [edi+eiz*4+0x55]
  40cc0a:	dec    edx
  40cc0b:	call   0xc5280660
  40cc10:	xlat   BYTE PTR ds:[ebx]
  40cc11:	xchg   DWORD PTR [ebp-0x6fcd695e],ebp
  40cc17:	xlat   BYTE PTR ds:[ebx]
  40cc18:	popf   
  40cc19:	mov    eax,ds:0xf33fffed
  40cc1e:	pusha  
  40cc1f:	xlat   BYTE PTR ds:[ebx]
  40cc20:	mov    edx,0x93b14e55
  40cc25:	jb     0x40cc58
  40cc27:	lods   al,BYTE PTR ds:[esi]
  40cc28:	imul   esi,DWORD PTR [eax],0xffffffef
  40cc2b:	test   dh,dl
  40cc2d:	dec    esp
  40cc2e:	lahf   
  40cc2f:	adc    eax,0xf8072290
  40cc34:	add    eax,0x7b98feb9
  40cc39:	mov    ch,cl
  40cc3b:	mov    esi,0xc4485c58
  40cc40:	lds    eax,FWORD PTR [eax-0x6d]
  40cc43:	xor    DWORD PTR [esi-0x9],0xfffffffd
  40cc47:	add    DWORD PTR [esi-0x1a],esi
  40cc4a:	fsub   DWORD PTR [ebx-0x327f73b]
  40cc50:	(bad)
  40cc54:	scas   eax,DWORD PTR es:[edi]
  40cc55:	cmp    dl,BYTE PTR [ecx+edi*2-0x27de02bc]
  40cc5c:	or     DWORD PTR [ecx-0x1c],eax
  40cc5f:	jo     0x40cc0a
  40cc61:	sub    ebp,DWORD PTR [eax+0x61]
  40cc64:	daa    
  40cc65:	int3   
  40cc66:	aad    0xbd
  40cc68:	dec    edi
  40cc69:	inc    edi
  40cc6a:	sbb    al,BYTE PTR [edi-0x752b9174]
  40cc70:	mov    WORD PTR [ebx-0x23],dx
  40cc74:	xchg   ebx,eax
  40cc75:	daa    
  40cc76:	dec    esi
  40cc77:	cs add ebp,eax
  40cc7a:	sbb    ebp,DWORD PTR [ebx+0xd]
  40cc7d:	pop    ebp
  40cc7e:	test   BYTE PTR [edx+ebx*1-0x7a],cl
  40cc82:	test   DWORD PTR [edi],esp
  40cc84:	cmp    ecx,DWORD PTR [edi]
  40cc86:	bound  esi,QWORD PTR [eax+ebp*4-0x7f]
  40cc8a:	jbe    0x40cc5e
  40cc8c:	fwait
  40cc8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc8e:	outs   dx,DWORD PTR ds:[esi]
  40cc8f:	aam    0x2b
  40cc91:	fwait
  40cc92:	sbb    edx,DWORD PTR [edx]
  40cc94:	(bad)  
  40cc96:	rcr    DWORD PTR [edx-0x55],cl
  40cc99:	in     eax,0xb1
  40cc9b:	out    dx,eax
  40cc9c:	adc    BYTE PTR [edi],bh
  40cc9e:	ficomp DWORD PTR [esi+edx*2]
  40cca1:	stos   BYTE PTR es:[edi],al
  40cca2:	mov    bl,0x2
  40cca4:	cmc    
  40cca5:	cmp    ch,ah
  40cca7:	xchg   ebx,eax
  40cca8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cca9:	fwait
  40ccaa:	cmp    cl,BYTE PTR [edx]
  40ccac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ccad:	nop
  40ccae:	xor    eax,0x4ad10415
  40ccb3:	stos   DWORD PTR es:[edi],eax
  40ccb4:	sti    
  40ccb5:	(bad)  
  40ccb7:	call   0x16bc:0x9b103c3c
  40ccbe:	lahf   
  40ccbf:	pavgw  mm3,mm6
  40ccc2:	inc    edx
  40ccc3:	sbb    edx,edx
  40ccc5:	pop    edi
  40ccc6:	int    0xe0
  40ccc8:	dec    eax
  40ccc9:	cmp    DWORD PTR [ecx],ebx
  40cccb:	jmp    0x45230890
  40ccd0:	sub    ah,BYTE PTR ds:0xed0c7014
  40ccd6:	or     DWORD PTR [edi+ebx*8+0x19762dfa],0x65
  40ccde:	pop    ebp
  40ccdf:	mov    eax,0x5b91db3c
  40cce4:	or     edx,DWORD PTR [ebp+eax*8-0x46fe95cc]
  40cceb:	repz or eax,0x2e7760bc
  40ccf1:	cwde   
  40ccf2:	xchg   sp,ax
  40ccf4:	cmp    DWORD PTR [eax+0x72393fa],ebx
  40ccfa:	stos   BYTE PTR es:[edi],al
  40ccfb:	loope  0x40cd59
  40ccfd:	cmp    DWORD PTR [edx],eax
  40ccff:	xor    dl,al
  40cd01:	mov    eax,ds:0xcac8653d
  40cd06:	jbe    0x40cd24
  40cd08:	(bad)  
  40cd09:	push   ds
  40cd0a:	call   0x2a2b1bf2
  40cd0f:	jo     0x40cd73
  40cd11:	jmp    0xeaef6353
  40cd16:	push   ss
  40cd17:	pusha  
  40cd18:	mov    ds:0xd46555a,al
  40cd1d:	fisub  WORD PTR [esp+ebp*1+0x40]
  40cd21:	push   edi
  40cd22:	jmp    0x40cd05
  40cd24:	fsub   DWORD PTR [esi]
  40cd26:	and    al,0xf
  40cd28:	xchg   ebp,eax
  40cd29:	mov    eax,ds:0x8cb052e
  40cd2e:	popa   
  40cd2f:	mov    dl,0x2e
  40cd31:	cmp    al,0xf9
  40cd33:	push   ds
  40cd34:	out    dx,eax
  40cd35:	dec    ebp
  40cd36:	push   esi
  40cd37:	icebp  
  40cd38:	xor    eax,0x5561c48f
  40cd3d:	(bad)  
  40cd3e:	fdivr  DWORD PTR [ebx+edi*8-0x7d971791]
  40cd45:	lea    edx,[esi+eax*1+0x352e085e]
  40cd4c:	loope  0x40cd1f
  40cd4e:	stos   DWORD PTR es:[edi],eax
  40cd4f:	sbb    al,0x31
  40cd51:	hlt    
  40cd52:	jle    0x40cd09
  40cd54:	pusha  
  40cd55:	icebp  
  40cd56:	inc    ecx
  40cd57:	xchg   esi,eax
  40cd58:	fwait
  40cd59:	mov    ss,WORD PTR [ebx]
  40cd5b:	inc    edx
  40cd5c:	dec    eax
  40cd5d:	pop    esi
  40cd5e:	leave  
  40cd5f:	mov    dh,0x1d
  40cd61:	push   cs
  40cd62:	ffree  st(0)
  40cd64:	(bad)  
  40cd65:	xchg   esi,eax
  40cd66:	dec    edi
  40cd67:	scas   al,BYTE PTR es:[edi]
  40cd68:	ins    DWORD PTR es:[edi],dx
  40cd69:	pop    eax
  40cd6a:	cmp    bl,BYTE PTR [ebp+esi*2-0x19572b3]
  40cd71:	mov    edx,0xf3d24f6e
  40cd76:	in     eax,0xb4
  40cd78:	stos   DWORD PTR es:[edi],eax
  40cd79:	pop    ecx
  40cd7a:	pop    ebx
  40cd7b:	mov    edi,0x3b5b9220
  40cd80:	inc    eax
  40cd81:	dec    esi
  40cd82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd83:	cdq    
  40cd84:	sbb    al,0xf9
  40cd86:	xchg   ecx,eax
  40cd87:	push   es
  40cd88:	pop    ecx
  40cd89:	pushf  
  40cd8a:	jns    0x40cd95
  40cd8c:	adc    DWORD PTR [esi-0x51],0xffffffb0
  40cd90:	das    
  40cd91:	lock cmp bl,BYTE PTR [edx]
  40cd94:	fnsave [ecx]
  40cd96:	sbb    al,0x8f
  40cd98:	cdq    
  40cd99:	test   ebx,ecx
  40cd9b:	jmp    0x389755b1
  40cda0:	and    DWORD PTR [edi],0x6a
  40cda3:	jne    0x40cd79
  40cda5:	outs   dx,BYTE PTR ds:[esi]
  40cda6:	test   al,0x5f
  40cda8:	out    0x60,eax
  40cdaa:	mov    ah,0x70
  40cdac:	test   eax,0x9988bf0c
  40cdb1:	mov    bh,BYTE PTR [ebx+0x6c]
  40cdb4:	bound  esi,QWORD PTR [ecx]
  40cdb6:	sub    cl,cl
  40cdb8:	iret   
  40cdb9:	inc    edx
  40cdba:	push   ebp
  40cdbb:	stos   BYTE PTR es:[edi],al
  40cdbc:	imul   ecx,DWORD PTR [esi+0x5e77e8a],0x9bf3c5d6
  40cdc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cdc7:	sbb    al,0x12
  40cdc9:	add    edi,ebx
  40cdcb:	dec    edx
  40cdcc:	cwde   
  40cdcd:	push   ebx
  40cdce:	xchg   ebx,eax
  40cdcf:	xchg   ebx,eax
  40cdd0:	lock dec esp
  40cdd2:	mov    ecx,0x712ff4e
  40cdd7:	aaa    
  40cdd8:	push   edx
  40cdd9:	pop    esi
  40cdda:	pop    esi
  40cddb:	or     BYTE PTR [edi+0x1a4bd54e],ah
  40cde1:	add    esp,DWORD PTR [ebp+0x14ffdc4d]
  40cde7:	arpl   sp,si
  40cde9:	xchg   ebp,eax
  40cdea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cdeb:	pop    ss
  40cdec:	cmp    eax,0xf8b6e853
  40cdf1:	fs push 0x3c6ecc02
  40cdf7:	cmp    ch,BYTE PTR [esp+eax*2-0x60]
  40cdfb:	fwait
  40cdfc:	cwde   
  40cdfd:	stos   BYTE PTR es:[edi],al
  40cdfe:	cmp    esp,DWORD PTR [edi-0x4963e61f]
  40ce04:	retf   
  40ce05:	cld    
  40ce06:	sbb    DWORD PTR [ebx+0x15e0450d],0xffffff8c
  40ce0d:	sub    BYTE PTR [ecx],0x33
  40ce10:	fcom   QWORD PTR [esi]
  40ce12:	aad    0x26
  40ce14:	jl     0x40ce5c
  40ce16:	mov    bl,bh
  40ce18:	dec    edi
  40ce19:	xchg   ecx,eax
  40ce1a:	adc    al,0x74
  40ce1c:	dec    eax
  40ce1d:	or     DWORD PTR [esi+0x4e560cb9],esi
  40ce23:	mov    esp,0x3838df63
  40ce28:	hlt    
  40ce29:	sub    ch,BYTE PTR [ecx+0x61]
  40ce2c:	leave  
  40ce2d:	call   0xcd8a:0xb182342c
  40ce34:	rol    DWORD PTR [ecx+0x64b9b935],0xf6
  40ce3b:	adc    DWORD PTR [edi],esi
  40ce3d:	jns    0x40ceb0
  40ce3f:	(bad)  
  40ce40:	sbb    BYTE PTR [ebp-0x30],al
  40ce43:	and    DWORD PTR [ebx+0xbf6c89c],esi
  40ce49:	out    0xca,al
  40ce4b:	dec    edi
  40ce4c:	xchg   edi,eax
  40ce4d:	mov    al,ds:0xe8d656c7
  40ce52:	aas    
  40ce53:	mov    eax,0xc3263a96
  40ce58:	loopne 0x40cde3
  40ce5a:	xchg   ebx,eax
  40ce5b:	mov    ch,0xcd
  40ce5e:	pushf  
  40ce5f:	or     DWORD PTR [edx+0x7c],esp
  40ce62:	(bad)  
  40ce63:	pop    edx
  40ce64:	mov    ecx,0xd3c445ea
  40ce69:	neg    BYTE PTR [ebx+0x66a21770]
  40ce6f:	add    esi,0xffffffac
  40ce72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce73:	fisubr WORD PTR [ecx+ebx*1]
  40ce76:	jnp    0x40cec7
  40ce78:	imul   BYTE PTR [esi+ebp*2-0x5b]
  40ce7c:	sbb    ch,ch
  40ce7e:	xchg   ebx,eax
  40ce7f:	jne    0x40ced2
  40ce81:	inc    eax
  40ce82:	sub    ebx,edi
  40ce84:	idiv   DWORD PTR [ecx]
  40ce86:	rol    DWORD PTR [ebp+0x16d236c7],cl
  40ce8c:	sti    
  40ce8d:	sub    BYTE PTR [ebp-0x4a0361df],ah
  40ce93:	push   edi
  40ce94:	cld    
  40ce95:	mov    esp,0xdf3e640f
  40ce9a:	lea    esp,[edi]
  40ce9c:	mov    eax,ds:0x9e236138
  40cea1:	shl    DWORD PTR [edi-0x52],1
  40cea4:	jbe    0x40ce98
  40cea6:	lods   al,BYTE PTR ds:[esi]
  40cea7:	adc    eax,0x3ff55ed9
  40ceac:	in     al,0xe3
  40ceae:	push   ss
  40ceaf:	fmul   DWORD PTR [edi]
  40ceb1:	mov    edx,0x69fbc074
  40ceb6:	jl     0x40cea0
  40ceb8:	push   eax
  40ceb9:	loope  0x40ce49
  40cebb:	test   eax,0x58aa269b
  40cec0:	xchg   ebx,eax
  40cec1:	cmc    
  40cec2:	mov    BYTE PTR [ebp+0x720c41ee],al
  40cec8:	out    0xef,eax
  40ceca:	jp     0x40ceab
  40cecc:	adc    al,0xf0
  40cece:	inc    bp
  40ced0:	add    BYTE PTR [eax+0x30],bh
  40ced3:	ja     0x40ce98
  40ced5:	scas   al,BYTE PTR es:[edi]
  40ced6:	das    
  40ced7:	mov    al,0x16
  40ced9:	lods   eax,DWORD PTR ds:[esi]
  40ceda:	test   eax,0x946fd25a
  40cedf:	retf   0xbf65
  40cee2:	or     BYTE PTR [edi+0x48ffed6e],ch
  40cee8:	cli    
  40cee9:	les    ebp,FWORD PTR [eax-0x2bcc535c]
  40ceef:	push   cs
  40cef0:	mov    bh,BYTE PTR [esi+0x7e0de5b4]
  40cef6:	gs sti 
  40cef8:	add    ah,dl
  40cefa:	aad    0xa3
  40cefc:	push   edx
  40cefd:	mov    edi,0x1c2429c7
  40cf02:	add    eax,0xc7f640e7
  40cf07:	adc    eax,0x2b4aaaf6
  40cf0c:	jge    0x40cf8c
  40cf0e:	retf   0x55ed
  40cf11:	push   ebp
  40cf12:	push   esi
  40cf13:	and    ch,BYTE PTR [esi+0x43ba78e9]
  40cf19:	outs   dx,BYTE PTR ds:[esi]
  40cf1a:	loopne 0x40cee9
  40cf1c:	cmp    DWORD PTR [edi+0x42],0x41
  40cf20:	arpl   WORD PTR [ebp-0x38],bp
  40cf23:	repz mov eax,ds:0xe78f5ac9
  40cf29:	data16 je 0x40cf7b
  40cf2c:	mov    ebx,0x78c6e96c
  40cf31:	and    al,0x2
  40cf33:	fsub   DWORD PTR [ecx]
  40cf35:	repz dec eax
  40cf37:	int    0xa9
  40cf39:	popf   
  40cf3a:	mov    eax,ds:0x1edf304b
  40cf3f:	dec    eax
  40cf40:	sbb    eax,0x7c52f4e0
  40cf45:	adc    al,0xf1
  40cf47:	or     DWORD PTR [edx-0x42cd8356],esp
  40cf4d:	adc    al,BYTE PTR [edi]
  40cf4f:	pushf  
  40cf50:	int3   
  40cf51:	cdq    
  40cf52:	dec    esp
  40cf53:	or     edx,DWORD PTR [ebp+0x1e0c16e5]
  40cf59:	xlat   BYTE PTR ds:[ebx]
  40cf5a:	fimul  DWORD PTR [eax]
  40cf5c:	xor    dl,BYTE PTR [edx-0x1a884271]
  40cf62:	enter  0x42ba,0xd4
  40cf66:	jle    0x40cf00
  40cf68:	or     BYTE PTR [eax+0x7dcc4fb1],ah
  40cf6e:	sub    al,0x11
  40cf70:	sbb    DWORD PTR [edi-0x4c1cbae3],eax
  40cf76:	xor    ebx,edi
  40cf78:	and    al,0x26
  40cf7a:	push   ds
  40cf7b:	inc    ecx
  40cf7c:	cmp    ch,BYTE PTR [edx]
  40cf7e:	pop    ds
  40cf7f:	push   edi
  40cf80:	in     eax,dx
  40cf81:	popa   
  40cf82:	outs   dx,BYTE PTR ds:[esi]
  40cf83:	mov    ecx,0x50cc586e
  40cf88:	jo     0x40cf24
  40cf8a:	xchg   ebx,eax
  40cf8b:	out    dx,eax
  40cf8c:	or     ch,BYTE PTR [ebp+0x61]
  40cf8f:	lahf   
  40cf90:	frstor ds:0x18a1ea7c
  40cf96:	xor    DWORD PTR [edx-0x7297f60],edx
  40cf9c:	sti    
  40cf9d:	(bad)  
  40cf9e:	scas   al,BYTE PTR es:[edi]
  40cf9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfa0:	adc    bl,BYTE PTR gs:[ebx]
  40cfa3:	and    cl,BYTE PTR [ebx]
  40cfa5:	lock mov al,ds:0x245feed3
  40cfab:	cmc    
  40cfac:	loope  0x40d018
  40cfae:	push   ecx
  40cfaf:	fist   DWORD PTR [edi+0x6b]
  40cfb2:	xor    esp,DWORD PTR [esp+edi*8+0x2fd9cd19]
  40cfb9:	(bad)  
  40cfba:	aaa    
  40cfbb:	mov    ds:0x916520b5,eax
  40cfc0:	ds inc ebp
  40cfc2:	fucom  st(1)
  40cfc4:	mov    al,0x86
  40cfc6:	xchg   BYTE PTR [ecx+0x59abd8b7],dh
  40cfcc:	mov    edi,0xfb75ada
  40cfd1:	xlat   BYTE PTR ds:[ebx]
  40cfd2:	pop    ss
  40cfd3:	push   edi
  40cfd4:	mul    DWORD PTR [ecx-0x21]
  40cfd7:	fs jae 0x40cff7
  40cfda:	das    
  40cfdb:	mov    eax,ds:0x8c40e0c1
  40cfe0:	in     al,0x5e
  40cfe2:	pop    ss
  40cfe3:	fisub  WORD PTR [ecx-0x43]
  40cfe6:	cmp    BYTE PTR [ecx-0x717fe45c],ah
  40cfec:	mov    ah,0xd4
  40cfee:	sbb    eax,0x5523d2b4
  40cff3:	ja     0x40cfdb
  40cff5:	mov    cl,0xe
  40cff7:	mov    ecx,0xab37aae2
  40cffc:	mov    esp,0x3b35a8f7
  40d001:	cld    
  40d002:	mov    ebx,0x7cdef5fe
  40d007:	les    ecx,FWORD PTR [ebx]
  40d009:	in     eax,dx
  40d00a:	in     al,0xf4
  40d00c:	leave  
  40d00d:	dec    eax
  40d00e:	push   edx
  40d00f:	dec    esi
  40d010:	jge    0x40cfe9
  40d012:	sbb    BYTE PTR [ebx-0x413fbebf],bh
  40d018:	ds aad 0x1f
  40d01b:	add    edx,DWORD PTR [ebx-0x14]
  40d01e:	call   0xdd76e805
  40d023:	dec    esi
  40d024:	mov    esp,ecx
  40d026:	adc    al,0xa3
  40d028:	call   FWORD PTR [edi+ecx*4+0x7fcf38de]
  40d02f:	div    DWORD PTR [eax]
  40d031:	ror    ecx,cl
  40d033:	rol    BYTE PTR [ebx-0x3976c83],1
  40d039:	dec    edx
  40d03a:	adc    ecx,DWORD PTR [ebp+0x46391f05]
  40d040:	ja     0x40d096
  40d042:	adc    edi,DWORD PTR [eax]
  40d044:	dec    DWORD PTR [ebx+0x10]
  40d047:	or     BYTE PTR [esi+eiz*8],al
  40d04a:	pushf  
  40d04b:	ss loopne 0x40d099
  40d04e:	mov    dh,0xab
  40d050:	mov    eax,ds:0x7429323
  40d055:	les    eax,FWORD PTR ss:[ecx+0x20885273]
  40d05c:	xor    BYTE PTR [ebx-0x1184ca3c],ah
  40d062:	je     0x40d0bc
  40d064:	fadd   st(2),st
  40d066:	lods   al,BYTE PTR ds:[esi]
  40d067:	fist   WORD PTR [edi+edi*1-0x2e]
  40d06b:	in     al,dx
  40d06c:	cwde   
  40d06d:	or     bh,BYTE PTR [ebp-0x74]
  40d070:	mov    dh,0x37
  40d072:	mov    ch,0x8e
  40d074:	pop    edx
  40d075:	xor    BYTE PTR [esi-0x186604f6],0x78
  40d07c:	(bad)  
  40d07d:	fnsave [edx-0x47a28e8d]
  40d083:	pop    eax
  40d084:	ror    DWORD PTR [ebx+0xb],0x27
  40d088:	(bad)  
  40d089:	dec    esi
  40d08a:	aam    0x96
  40d08c:	es mov esp,0xc538ac9a
  40d092:	xchg   ebp,eax
  40d093:	test   ebp,esp
  40d095:	icebp  
  40d096:	shr    DWORD PTR [edi+0x39008440],1
  40d09c:	aaa    
  40d09d:	mov    cl,0xfa
  40d09f:	jg     0x40d0b0
  40d0a1:	mov    ch,0xac
  40d0a3:	adc    eax,0xf8324992
  40d0a8:	jo     0x40d098
  40d0aa:	pop    ecx
  40d0ab:	fmul   st(4),st
  40d0ad:	imul   ecx,esi,0x8f9f4b9b
  40d0b3:	mov    ebx,0x9d002996
  40d0b8:	pop    ebx
  40d0b9:	add    DWORD PTR [edi+0x61ad8b1e],ebp
  40d0bf:	push   esi
  40d0c0:	data16 and al,0xe
  40d0c3:	call   0xdf3f58f6
  40d0c8:	pop    es
  40d0c9:	ja     0x40d09d
  40d0cb:	ret    
  40d0cc:	cmp    ah,dl
  40d0ce:	xchg   ebx,eax
  40d0cf:	add    DWORD PTR [edi+0x7],eax
  40d0d2:	dec    esp
  40d0d3:	(bad)  
  40d0d4:	add    ch,ch
  40d0d6:	ror    DWORD PTR [ebp-0x13],cl
  40d0d9:	aad    0x14
  40d0db:	arpl   WORD PTR [esi+ecx*1],ax
  40d0de:	shl    esi,cl
  40d0e0:	sbb    DWORD PTR [eax],esp
  40d0e2:	hlt    
  40d0e3:	cmp    ah,BYTE PTR [edi+0x1c]
  40d0e6:	ss in  eax,0x9f
  40d0e9:	mov    ah,0xd6
  40d0eb:	sbb    BYTE PTR [ebx-0x3732fec2],bh
  40d0f1:	pop    esi
  40d0f2:	cld    
  40d0f3:	das    
  40d0f4:	repz pop ebx
  40d0f6:	jno    0x40d152
  40d0f8:	cmp    BYTE PTR [ebp+0x7283ac52],bl
  40d0fe:	or     ah,bl
  40d100:	jae    0x40d0fb
  40d102:	push   edx
  40d103:	nop
  40d104:	sub    esp,DWORD PTR [ebx]
  40d106:	push   edi
  40d107:	mov    bh,0xa
  40d109:	retf   0x137b
  40d10c:	mov    cl,0xf4
  40d10e:	inc    edi
  40d10f:	adc    BYTE PTR [esi+edi*4],cl
  40d112:	xchg   ebx,eax
  40d113:	adc    al,al
  40d115:	sub    BYTE PTR [ecx-0x36],al
  40d118:	inc    eax
  40d119:	sub    cl,BYTE PTR [eax-0x76beb1a]
  40d11f:	push   ebp
  40d120:	ror    BYTE PTR [ecx-0x3a9f1f8e],0x65
  40d127:	pop    es
  40d128:	in     eax,0x84
  40d12a:	dec    edi
  40d12b:	repnz mov dh,0x45
  40d12e:	into   
  40d12f:	mov    ebx,0xfbbc4420
  40d134:	push   ebp
  40d135:	sub    DWORD PTR [edi],0xffffffa8
  40d138:	adc    ah,BYTE PTR fs:[esi]
  40d13b:	scas   al,BYTE PTR es:[edi]
  40d13c:	add    DWORD PTR [ebp-0x380557c8],ecx
  40d142:	mov    esp,0x46cbece2
  40d147:	inc    esi
  40d148:	mov    cl,0x3e
  40d14a:	mov    edi,DWORD PTR [esi]
  40d14c:	mov    ebp,DWORD PTR [eax+0x70f45efb]
  40d152:	jg     0x40d152
  40d154:	lock test DWORD PTR [eax-0x4a],edx
  40d158:	adc    eax,0xec7f880f
  40d15d:	outs   dx,BYTE PTR ds:[esi]
  40d15e:	shl    dh,1
  40d160:	ret    0x1ee8
  40d163:	aas    
  40d164:	aaa    
  40d165:	popa   
  40d166:	adc    esi,DWORD PTR [edx+0x7d797639]
  40d16c:	clc    
  40d16d:	gs rcr edi,cl
  40d170:	stos   DWORD PTR es:[edi],eax
  40d171:	ins    DWORD PTR es:[edi],dx
  40d172:	mov    dl,BYTE PTR [edx]
  40d174:	int3   
  40d175:	popa   
  40d176:	mov    ds:0xd1a566c3,eax
  40d17b:	lods   al,BYTE PTR ds:[esi]
  40d17c:	inc    ecx
  40d17d:	jns    0x40d13c
  40d17f:	dec    edi
  40d180:	or     al,0x6c
  40d182:	or     eax,0xb1c3e7a
  40d187:	outs   dx,DWORD PTR ds:[esi]
  40d188:	push   ss
  40d189:	lea    ecx,[ecx-0x5c2fadf4]
  40d18f:	add    al,0x92
  40d191:	adc    al,0x34
  40d193:	sbb    DWORD PTR [ebp-0x5b],ecx
  40d196:	int    0xc4
  40d198:	fisubr WORD PTR [ebx+ecx*8-0x28a18cd7]
  40d19f:	adc    eax,0xe1cc6d8d
  40d1a4:	sbb    DWORD PTR [esi],eax
  40d1a6:	sbb    bl,BYTE PTR [edx-0x5a]
  40d1a9:	mov    al,ds:0x2043652d
  40d1ae:	das    
  40d1af:	pop    esi
  40d1b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1b1:	arpl   WORD PTR [edi+0xc],bp
  40d1b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1b5:	xor    DWORD PTR [edx+edi*8-0xa217415],esi
  40d1bc:	jecxz  0x40d1bf
  40d1be:	lock or cl,0x68
  40d1c2:	mov    eax,0xd03069ee
  40d1c7:	or     edx,DWORD PTR [ecx]
  40d1c9:	add    edi,DWORD PTR [ebx]
  40d1cb:	sahf   
  40d1cc:	adc    esi,DWORD PTR [eax]
  40d1ce:	or     BYTE PTR [esi+0x4df9a0a],ch
  40d1d4:	or     BYTE PTR [esi],cl
  40d1d6:	xor    BYTE PTR [edx+0x48463d87],0xa
  40d1dd:	pop    esi
  40d1de:	dec    eax
  40d1df:	mov    bl,0xd9
  40d1e1:	test   eax,0xa681177c
  40d1e6:	repnz (bad) 
  40d1e9:	cli    
  40d1ea:	fcom   QWORD PTR [eax]
  40d1ec:	cmp    ebp,esi
  40d1ee:	sub    bh,dh
  40d1f0:	sub    al,0xe1
  40d1f2:	sub    eax,0x8fbc8ddc
  40d1f7:	push   esp
  40d1f8:	jl     0x40d184
  40d1fa:	cdq    
  40d1fb:	dec    eax
  40d1fc:	or     al,0x61
  40d1fe:	(bad)  [edx]
  40d200:	ret    
  40d201:	sar    DWORD PTR [ebp+0x7e],1
  40d204:	mov    esi,0x4f19297
  40d209:	or     ah,bh
  40d20b:	push   ds
  40d20c:	(bad)  
  40d20d:	in     eax,dx
  40d20e:	jo     0x40d22f
  40d210:	retf   
  40d211:	cmp    al,0x8b
  40d213:	jg     0x40d247
  40d215:	jmp    FWORD PTR [eax+ebx*4-0x4b]
  40d219:	fucomp st(0)
  40d21b:	pop    esi
  40d21c:	test   DWORD PTR [ebx-0x7e],edx
  40d21f:	shl    BYTE PTR [ebx],cl
  40d221:	jmp    0xce78:0xa02c6e6e
  40d228:	cmp    BYTE PTR [edi-0x2703a1fe],dh
  40d22e:	cwde   
  40d22f:	into   
  40d230:	lods   al,BYTE PTR ds:[esi]
  40d231:	neg    BYTE PTR [esi+0x3118a3da]
  40d237:	mov    al,dl
  40d239:	sbb    ebx,DWORD PTR [ebp+0x4cac05e5]
  40d23f:	repnz in al,0xdf
  40d242:	js     0x40d29f
  40d244:	and    BYTE PTR [ecx+0x22],dl
  40d247:	scas   al,BYTE PTR es:[edi]
  40d248:	stos   DWORD PTR es:[edi],eax
  40d249:	mov    cl,ah
  40d24b:	cmp    DWORD PTR [esi+0x54],ecx
  40d24e:	cmc    
  40d24f:	dec    edi
  40d250:	and    DWORD PTR [edx+0x401160fe],esp
  40d256:	test   ecx,ebp
  40d258:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d259:	jl     0x40d22c
  40d25b:	popa   
  40d25c:	lods   eax,DWORD PTR ds:[esi]
  40d25d:	outs   dx,DWORD PTR ds:[esi]
  40d25e:	daa    
  40d25f:	clc    
  40d260:	add    cl,BYTE PTR [eax+0x40]
  40d263:	jl     0x40d2a7
  40d265:	and    ebp,DWORD PTR [ebp+0xa]
  40d268:	jl     0x40d2c7
  40d26a:	adc    esp,DWORD PTR [eax]
  40d26c:	popf   
  40d26d:	call   0x3aab:0x58f57a38
  40d274:	rcr    BYTE PTR [esi+0x46],0xa9
  40d278:	daa    
  40d279:	mov    eax,ds:0x12f61147
  40d27e:	in     al,dx
  40d27f:	mov    bl,0xc6
  40d281:	push   edx
  40d282:	mov    ds:0x7ce47834,al
  40d287:	jecxz  0x40d212
  40d289:	repnz xchg edx,edi
  40d28c:	add    ch,BYTE PTR [edx-0x474fc507]
  40d292:	and    edx,ebp
  40d294:	test   eax,0xfc3ff33
  40d299:	add    DWORD PTR [edx-0x56],0x5ae0470c
  40d2a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2a1:	scas   al,BYTE PTR es:[edi]
  40d2a2:	in     al,dx
  40d2a3:	add    ebx,DWORD PTR ds:0xa05fe06f
  40d2a9:	pop    ecx
  40d2aa:	out    0x5e,eax
  40d2ac:	sbb    eax,0x9075de82
  40d2b1:	xchg   esi,eax
  40d2b2:	pushf  
  40d2b3:	into   
  40d2b4:	je     0x40d2fc
  40d2b6:	loopne 0x40d263
  40d2b8:	mov    bl,0x8e
  40d2ba:	(bad)  
  40d2bb:	pop    esi
  40d2bc:	xor    BYTE PTR [ebx],ch
  40d2be:	mov    esi,0x8a00c306
  40d2c3:	inc    esp
  40d2c4:	dec    ecx
  40d2c5:	cmp    dl,bh
  40d2c7:	shr    esp,cl
  40d2c9:	cmp    ah,BYTE PTR [edi]
  40d2cb:	fnstcw WORD PTR [edi+0x122a1fe2]
  40d2d1:	mov    ?,WORD PTR [edx-0x4b12e47]
  40d2d7:	pop    es
  40d2d8:	sub    eax,0xf942e12b
  40d2dd:	xor    edx,ebp
  40d2df:	cmp    ch,BYTE PTR [eax-0x80]
  40d2e2:	mov    edi,0x680a2f7f
  40d2e7:	in     al,dx
  40d2e8:	mov    ch,0x50
  40d2ea:	lahf   
  40d2eb:	pop    eax
  40d2ec:	scas   eax,DWORD PTR es:[edi]
  40d2ed:	push   edi
  40d2ee:	dec    esp
  40d2ef:	gs dec esi
  40d2f1:	out    dx,eax
  40d2f2:	sub    al,0x2
  40d2f4:	mov    es,ebx
  40d2f6:	sub    DWORD PTR [ecx+edx*8],0xffffffda
  40d2fa:	idiv   BYTE PTR [edi-0x3e45a0a2]
  40d300:	shr    BYTE PTR [eax],1
  40d302:	repnz mov esi,0xac8715c7
  40d308:	outs   dx,DWORD PTR ds:[esi]
  40d309:	xor    DWORD PTR [esi-0x26],esi
  40d30c:	js     0x40d363
  40d30e:	test   eax,0x71e872ff
  40d313:	inc    ecx
  40d314:	scas   al,BYTE PTR es:[edi]
  40d315:	in     al,dx
  40d316:	int    0x64
  40d318:	adc    esi,DWORD PTR [esi+0x150252cf]
  40d31e:	jmp    0x40d319
  40d320:	jl     0x40d361
  40d322:	and    ecx,DWORD PTR [edx+0x65]
  40d325:	push   ebx
  40d326:	pop    ebp
  40d327:	sbb    ebp,DWORD PTR [edi]
  40d329:	dec    ebp
  40d32a:	cwde   
  40d32b:	push   es
  40d32c:	outs   dx,BYTE PTR ds:[esi]
  40d32d:	repnz push ecx
  40d32f:	in     eax,0xe4
  40d331:	sub    dl,BYTE PTR [esi+ebx*8+0x8b78f78]
  40d338:	xchg   ecx,eax
  40d339:	and    eax,0x658e2709
  40d33f:	outs   dx,DWORD PTR ds:[esi]
  40d340:	ffree  st(2)
  40d342:	std    
  40d343:	pop    esi
  40d344:	ins    BYTE PTR es:[edi],dx
  40d345:	or     ah,BYTE PTR ss:[eax-0x48bb4780]
  40d34c:	mov    BYTE PTR ds:0x115ab431,dl
  40d352:	(bad)  [edx]
  40d354:	mov    al,0x17
  40d356:	(bad)
  40d35a:	cmc    
  40d35b:	ret    0xd642
  40d35e:	add    edx,esp
  40d360:	jmp    0x40d3a0
  40d362:	pop    esp
  40d363:	shl    ch,cl
  40d365:	shr    ecx,1
  40d367:	xor    eax,0x58ca843
  40d36c:	add    eax,0xe447787e
  40d371:	inc    ebp
  40d372:	jbe    0x40d395
  40d374:	sbb    BYTE PTR [edx+esi*4],0x5c
  40d378:	xor    eax,0xda480343
  40d37d:	mov    DWORD PTR [ebx-0x76],eax
  40d380:	rol    ch,1
  40d382:	out    dx,al
  40d383:	in     al,0xf0
  40d385:	push   es
  40d386:	xchg   ebp,eax
  40d387:	add    al,0xb
  40d389:	cmp    DWORD PTR [ecx-0x76],ebp
  40d38c:	jecxz  0x40d3ba
  40d38e:	aas    
  40d38f:	out    0x29,al
  40d391:	cwde   
  40d392:	adc    DWORD PTR [ecx-0x155c1d85],ecx
  40d398:	pop    ds
  40d399:	push   eax
  40d39a:	mov    dh,0x14
  40d39c:	loope  0x40d394
  40d39e:	xchg   edx,eax
  40d39f:	daa    
  40d3a0:	push   edi
  40d3a1:	popf   
  40d3a2:	adc    DWORD PTR [ebx],esi
  40d3a4:	ficom  DWORD PTR [eax-0x16705cae]
  40d3aa:	das    
  40d3ab:	shr    DWORD PTR [edi-0x26],1
  40d3ae:	pop    edx
  40d3af:	(bad)  
  40d3b0:	pop    ecx
  40d3b1:	loop   0x40d407
  40d3b3:	aas    
  40d3b4:	push   0xffffffa0
  40d3b6:	inc    ebp
  40d3b7:	cmc    
  40d3b8:	fldcw  WORD PTR [eax+0x23]
  40d3bb:	adc    eax,0x13155bab
  40d3c0:	jbe    0x40d3f8
  40d3c2:	fadd   DWORD PTR [ecx+esi*4-0x5bd39709]
  40d3c9:	aas    
  40d3ca:	popa   
  40d3cb:	clc    
  40d3cc:	js     0x40d38f
  40d3ce:	(bad)  
  40d3d0:	ins    BYTE PTR es:[edi],dx
  40d3d1:	lods   al,BYTE PTR ds:[esi]
  40d3d2:	xchg   ebp,eax
  40d3d3:	jns    0x40d3d6
  40d3d5:	call   FWORD PTR [edi]
  40d3d7:	pusha  
  40d3d8:	add    esi,DWORD PTR [edi]
  40d3da:	xchg   edx,eax
  40d3db:	shl    BYTE PTR cs:[ecx],0x2e
  40d3df:	ret    0xa6e9
  40d3e2:	jl     0x40d447
  40d3e4:	retf   
  40d3e5:	fwait
  40d3e6:	sti    
  40d3e7:	and    BYTE PTR [eax+0x0],ch
  40d3ea:	sub    BYTE PTR [edi+0x1e88f061],0xf8
  40d3f1:	mov    eax,0xdaa95171
  40d3f6:	cmp    BYTE PTR [edx-0x7332b415],al
  40d3fc:	or     al,0xd8
  40d3fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3ff:	xor    edx,ecx
  40d401:	ret    0xf8c6
  40d404:	mov    ds:0xd5c0fd24,al
  40d409:	sub    esi,esp
  40d40b:	bnd jl 0x40d477
  40d40e:	cmc    
  40d40f:	pusha  
  40d410:	sbb    BYTE PTR [eax+0x89edffc],bh
  40d416:	or     al,BYTE PTR [ebx-0x44a1966c]
  40d41c:	ss push 0x56b14eaa
  40d422:	jmp    0xc11c818d
  40d427:	mov    ebp,0xfebaa9f2
  40d42c:	mov    edi,ecx
  40d42e:	add    eax,0xbbd27c8d
  40d433:	test   esi,esi
  40d435:	sbb    ch,BYTE PTR [ecx+0x3f]
  40d438:	push   esp
  40d439:	js     0x40d3c5
  40d43b:	cmc    
  40d43c:	sar    esi,0x77
  40d43f:	pop    ss
  40d440:	idiv   DWORD PTR [esi+ecx*4-0x42]
  40d444:	ins    BYTE PTR es:[edi],dx
  40d445:	aaa    
  40d446:	pop    esi
  40d447:	ss mov esi,0x26f48981
  40d44d:	bound  esp,QWORD PTR [esi+edi*8]
  40d450:	inc    ecx
  40d451:	arpl   WORD PTR [edi-0x64fa2c5f],ax
  40d457:	add    al,0xb0
  40d459:	mov    db4,ebp
  40d45c:	sub    edx,esp
  40d45e:	pop    ds
  40d45f:	retf   
  40d460:	test   al,0x3a
  40d462:	xchg   esp,eax
  40d463:	push   ebp
  40d464:	cdq    
  40d465:	ja     0x40d4aa
  40d467:	into   
  40d468:	push   esp
  40d469:	sbb    dl,BYTE PTR [ebp-0x47]
  40d46c:	pop    ebp
  40d46d:	dec    eax
  40d46e:	inc    esp
  40d46f:	pop    ebp
  40d470:	cld    
  40d471:	push   eax
  40d472:	sbb    ebp,DWORD PTR [eax]
  40d474:	retf   
  40d475:	popf   
  40d476:	in     eax,0x7c
  40d478:	xchg   edi,eax
  40d479:	popa   
  40d47a:	adc    edi,DWORD PTR gs:[ebp-0x4b]
  40d47e:	in     al,0x87
  40d480:	getsec 
  40d482:	es out dx,eax
  40d484:	xchg   ebx,eax
  40d485:	daa    
  40d486:	sub    al,0x52
  40d488:	and    dl,dh
  40d48a:	test   eax,0x3bb6560f
  40d48f:	fwait
  40d490:	sub    cl,BYTE PTR [edi-0xe7ac5b0]
  40d496:	sbb    al,0x65
  40d498:	(bad)  
  40d499:	ins    BYTE PTR es:[edi],dx
  40d49a:	push   ds
  40d49b:	mov    eax,0x41eac5b
  40d4a0:	fdivr  st,st(0)
  40d4a2:	bound  ebp,QWORD PTR [edi+0x7d]
  40d4a5:	or     eax,0xd0b04a99
  40d4aa:	sbb    DWORD PTR ds:0x9aafad17,ebp
  40d4b0:	sbb    BYTE PTR [ecx-0x6c],ch
  40d4b3:	clc    
  40d4b4:	fmul   st,st(6)
  40d4b6:	or     eax,0xd94e6fe2
  40d4bb:	idiv   DWORD PTR [ebx-0x3f]
  40d4be:	bound  esi,QWORD PTR [ebx+ebp*1-0xb]
  40d4c2:	push   ecx
  40d4c3:	inc    ecx
  40d4c4:	repnz shl DWORD PTR [ebp+esi*8-0x4d6deb5],1
  40d4cc:	jl     0x40d523
  40d4ce:	mov    ebp,0xf65d641d
  40d4d3:	and    al,0xd8
  40d4d5:	scas   al,BYTE PTR es:[edi]
  40d4d6:	test   BYTE PTR ds:0x81870338,bh
  40d4dc:	ins    DWORD PTR es:[edi],dx
  40d4dd:	push   0xcfc6ea56
  40d4e2:	add    eax,0x1703fee3
  40d4e7:	ins    BYTE PTR es:[edi],dx
  40d4e8:	cmova  edx,DWORD PTR ds:0x6f80e4c
  40d4ef:	or     DWORD PTR [eax-0x30],esp
  40d4f2:	fcomp  DWORD PTR [ebx-0x40]
  40d4f5:	sbb    ecx,ebp
  40d4f7:	fcmovu st,st(3)
  40d4f9:	dec    edi
  40d4fa:	push   0xffffffdd
  40d4fc:	fisubr DWORD PTR [edi+0x45]
  40d4ff:	sahf   
  40d500:	imul   ebp,DWORD PTR [ebx+esi*4-0x6d],0xffffffd7
  40d505:	and    BYTE PTR [ecx],cl
  40d507:	push   ebp
  40d508:	or     ch,ah
  40d50a:	out    0x37,eax
  40d50c:	repnz loopne 0x40d4f7
  40d50f:	dec    edi
  40d510:	test   eax,0x6d8cae09
  40d515:	out    dx,eax
  40d516:	fs dec esp
  40d518:	sub    edx,DWORD PTR [eax+0x466d068f]
  40d51e:	inc    esi
  40d51f:	mov    ch,0x90
  40d521:	and    DWORD PTR [esi],ebx
  40d523:	jg     0x40d511
  40d525:	je     0x40d59f
  40d527:	ss add eax,0x77770e7e
  40d52d:	loopne 0x40d58f
  40d52f:	jle    0x40d4e5
  40d531:	mov    bh,0xd
  40d533:	xor    DWORD PTR [esi-0x24],0x64
  40d537:	aaa    
  40d538:	lock mov dh,0x57
  40d53b:	inc    ebp
  40d53c:	cmp    edi,DWORD PTR [eax]
  40d53e:	les    edx,FWORD PTR [ebp-0x2a]
  40d541:	test   edx,edi
  40d543:	dec    ebx
  40d544:	ins    BYTE PTR es:[edi],dx
  40d545:	jp     0x40d5ba
  40d547:	pop    esi
  40d548:	push   0xffffffed
  40d54a:	loopne 0x40d586
  40d54c:	rcl    BYTE PTR [ecx+0x1c],1
  40d54f:	lahf   
  40d550:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d551:	xlat   BYTE PTR ds:[ebx]
  40d552:	arpl   WORD PTR [ecx+edi*2],di
  40d555:	mov    cl,0xe4
  40d557:	and    al,0xc3
  40d559:	in     al,0xb7
  40d55b:	push   eax
  40d55c:	pop    edx
  40d55d:	sub    ecx,DWORD PTR [eax-0x7aaf681c]
  40d563:	loope  0x40d506
  40d565:	int3   
  40d566:	mov    ecx,0x14ab307c
  40d56b:	sub    BYTE PTR [esi-0x6a2c1784],0x45
  40d572:	cmp    eax,0x55cc4447
  40d577:	std    
  40d578:	sar    esi,0xc3
  40d57b:	mov    esi,0xc621290e
  40d580:	inc    ebp
  40d581:	(bad)  
  40d582:	jns    0x40d505
  40d584:	shl    DWORD PTR [edi],1
  40d586:	jne    0x40d588
  40d588:	add    BYTE PTR [ebp+0x1511ff45],cl
  40d58e:	fwait
  40d58f:	mov    eax,ds:0x45890042
  40d594:	hlt    
  40d595:	mov    al,BYTE PTR [ebp-0x1]
  40d598:	sbb    ecx,DWORD PTR ds:0x42a173
  40d59e:	mov    ecx,DWORD PTR [ebp-0xc]
  40d5a1:	xor    al,0x7b
  40d5a3:	dec    al
  40d5a5:	add    DWORD PTR ds:0x42a147,0x42a177
  40d5af:	mov    BYTE PTR [ecx],al
  40d5b1:	dec    ecx
  40d5b2:	mov    DWORD PTR [ebp-0x18],0xf89c85b9
  40d5b9:	push   ebx
  40d5ba:	mov    eax,ds:0x42a227
  40d5bf:	xor    ecx,ecx
  40d5c1:	xor    ecx,DWORD PTR ds:0x42a25f
  40d5c7:	sub    ecx,eax
  40d5c9:	sub    eax,DWORD PTR [eax+ecx*1]
  40d5cc:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  40d5d3:	and    DWORD PTR ds:0x42a1b7,0x0
  40d5dd:	jmp    0x40d5ef
  40d5e2:	mov    ecx,DWORD PTR ds:0x42a1b7
  40d5e8:	inc    ecx
  40d5e9:	mov    DWORD PTR ds:0x42a1b7,ecx
  40d5ef:	cmp    DWORD PTR ds:0x42a1b7,0x1e
  40d5f6:	jae    0x40d623
  40d5fc:	cmp    DWORD PTR ds:0x42a1b7,0x27
  40d603:	ja     0x40d623
  40d609:	jmp    0x40d61e
  40d60e:	push   0x2919
  40d613:	push   0x5f54
  40d618:	call   DWORD PTR ds:0x42a2c3
  40d61e:	jmp    0x40d5e2
  40d623:	mov    ecx,DWORD PTR [ebp-0x18]
  40d626:	xor    DWORD PTR ds:0x42a14b,ebx
  40d62c:	push   esi
  40d62d:	and    DWORD PTR ds:0x42a147,0x0
  40d637:	jmp    0x40d647
  40d63c:	mov    eax,ds:0x42a147
  40d641:	inc    eax
  40d642:	mov    ds:0x42a147,eax
  40d647:	cmp    DWORD PTR ds:0x42a147,0x19
  40d64e:	jae    0x40d679
  40d654:	cmp    DWORD PTR ds:0x42a147,0x22
  40d65b:	jbe    0x40d679
  40d661:	jmp    0x40d674
  40d666:	push   0x61d1
  40d66b:	push   DWORD PTR [ebp-0x18]
  40d66e:	call   DWORD PTR ds:0x42a2c7
  40d674:	jmp    0x40d63c
  40d679:	mov    eax,0x75108a8
  40d67e:	sub    esi,DWORD PTR ds:0x42a1ab
  40d684:	xor    ecx,eax
  40d686:	mov    esi,0x3272ef
  40d68b:	push   edi
  40d68c:	sbb    DWORD PTR ds:0x42a1cb,0x42a1c7
  40d696:	add    ecx,esi
  40d698:	mov    DWORD PTR ds:0x42a1bf,0x6562
  40d6a2:	jmp    0x40d6b2
  40d6a7:	mov    dl,BYTE PTR [ebp-0x1]
  40d6aa:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  40d6b1:	inc    ecx
  40d6b2:	mov    DWORD PTR ds:0x42a1af,0x1651
  40d6bc:	cmp    ecx,0x40
  40d6bf:	jb     0x40d6a7
  40d6c5:	mov    DWORD PTR ds:0x42a19f,0x1c
  40d6cf:	cmp    DWORD PTR ds:0x42a19f,0x0
  40d6d6:	je     0x40d72f
  40d6dc:	cmp    DWORD PTR ds:0x42a19f,0x5
  40d6e3:	jb     0x40d72f
  40d6e9:	jmp    0x40d703
  40d6ee:	push   0x2a2f
  40d6f3:	push   0x42a1ab
  40d6f8:	push   0x400000
  40d6fd:	call   DWORD PTR ds:0x42a2cf
  40d703:	cmp    DWORD PTR ds:0x42a19f,0x6
  40d70a:	jne    0x40d71d
  40d710:	mov    edx,DWORD PTR ds:0x42a19f
  40d716:	dec    edx
  40d717:	mov    DWORD PTR ds:0x42a19f,edx
  40d71d:	mov    edx,DWORD PTR ds:0x42a19f
  40d723:	dec    edx
  40d724:	mov    DWORD PTR ds:0x42a19f,edx
  40d72a:	jmp    0x40d6cf
  40d72f:	mov    edx,DWORD PTR [ebp-0x18]
  40d732:	mov    DWORD PTR ds:0x42a17b,0x4b1
  40d73c:	xor    edx,eax
  40d73e:	adc    DWORD PTR ds:0x42a19b,0x42a1cf
  40d748:	add    edx,esi
  40d74a:	mov    DWORD PTR ds:0x42a1ab,0x5d5c
  40d754:	jmp    0x40fb6b
  40d759:	mov    edi,DWORD PTR [ebp+0x8]
  40d75c:	xor    DWORD PTR ds:0x42a167,0x6495
  40d766:	mov    ecx,0x8a96
  40d76b:	and    DWORD PTR ds:0x42a133,0x42a1a7
  40d775:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40d77a:	sbb    DWORD PTR ds:0x42a17b,0x2976
  40d784:	mov    edi,0x3b59
  40d789:	xor    DWORD PTR ds:0x42a143,0x42a187
  40d793:	add    cx,di
  40d796:	movzx  ecx,cx
  40d799:	sbb    DWORD PTR ds:0x42a193,0x4902
  40d7a3:	mov    DWORD PTR [ebp-0xc],ecx
  40d7a6:	xor    DWORD PTR ds:0x42a167,edx
  40d7ac:	jmp    0x40fb31
  40d7b1:	popa   
  40d7b2:	sbb    DWORD PTR [edi],0x5b849f06
  40d7b8:	test   DWORD PTR [esp+eiz*4],ebx
  40d7bb:	push   esp
  40d7bc:	pop    esi
  40d7bd:	test   eax,0xce204c0d
  40d7c2:	retf   0x7a7a
  40d7c5:	adc    bl,BYTE PTR [edi+0x7a]
  40d7c8:	jp     0x40d7a7
  40d7ca:	repnz outs dx,BYTE PTR ds:[esi]
  40d7cc:	push   ss
  40d7cd:	sbb    BYTE PTR [edx-0x4b4e5d58],dh
  40d7d3:	pop    es
  40d7d4:	inc    DWORD PTR [eax-0x4dbe48a7]
  40d7da:	into   
  40d7db:	test   BYTE PTR [eax-0x37be5741],al
  40d7e1:	out    dx,eax
  40d7e2:	sbb    BYTE PTR [ebp+0x63],bl
  40d7e5:	shr    DWORD PTR [eax+edi*4+0x50],0xb5
  40d7ea:	xor    ah,BYTE PTR [edi]
  40d7ec:	ja     0x40d7ff
  40d7ee:	and    DWORD PTR [edi],edx
  40d7f0:	lea    ebp,[ecx-0x7c]
  40d7f3:	jl     0x40d86a
  40d7f5:	std    
  40d7f6:	mov    cl,0x4d
  40d7f8:	into   
  40d7f9:	pop    ebp
  40d7fa:	in     eax,0x25
  40d7fc:	push   0xc672c177
  40d801:	inc    edi
  40d802:	xor    al,0x67
  40d805:	dec    esp
  40d806:	rcl    DWORD PTR [ecx+0x10bc072],1
  40d80c:	push   edx
  40d80d:	stos   DWORD PTR es:[edi],eax
  40d80e:	cmp    BYTE PTR [esi-0x793f38a9],bh
  40d814:	pusha  
  40d815:	in     eax,0x0
  40d817:	fild   DWORD PTR [ebx-0x324796b3]
  40d81d:	out    dx,eax
  40d81e:	ss (bad) 
  40d821:	clc    
  40d822:	cli    
  40d823:	mov    ebp,0xff38a93f
  40d828:	cmp    al,0xde
  40d82a:	fdivr  st(6),st
  40d82c:	adc    eax,0xcaab93e3
  40d831:	add    BYTE PTR [ebx-0x710e2222],ch
  40d837:	dec    esi
  40d838:	ret    0xc98e
  40d83b:	stos   DWORD PTR es:[edi],eax
  40d83c:	dec    esi
  40d83d:	jo     0x40d8af
  40d83f:	call   0xec4317f2
  40d844:	js     0x40d84d
  40d846:	call   0xf645:0xe1a6ac20
  40d84d:	out    dx,eax
  40d84e:	pop    ds
  40d84f:	mov    ebx,0x6c868002
  40d854:	(bad)  [edx+0x13]
  40d857:	or     cl,BYTE PTR [ebx-0x1f117a5c]
  40d85d:	test   eax,0xb80b2808
  40d862:	not    DWORD PTR [ecx+0x5a]
  40d865:	rol    DWORD PTR [esi-0x14],1
  40d868:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d869:	fstp   DWORD PTR [eax]
  40d86b:	fmulp  st(2),st
  40d86d:	outs   dx,DWORD PTR ds:[esi]
  40d86e:	mov    ah,0x39
  40d870:	shl    BYTE PTR [esp+edi*2-0x6c],1
  40d874:	std    
  40d875:	push   esp
  40d876:	sub    DWORD PTR [esi+0x15],edi
  40d879:	ret    0xf29
  40d87c:	rol    BYTE PTR [eax],1
  40d87e:	sbb    eax,0x1aba6efa
  40d883:	(bad)  
  40d884:	fmul   st,st(2)
  40d886:	jmp    0x7e5a79e2
  40d88b:	arpl   WORD PTR [esi-0x64],cx
  40d88e:	iret   
  40d88f:	jae    0x40d87c
  40d891:	mov    gs,WORD PTR [edi+esi*1-0x21a53c33]
  40d898:	rcr    BYTE PTR [ecx-0x57fb2cd],0x3a
  40d89f:	gs mov ch,0xcb
  40d8a2:	push   ebp
  40d8a3:	mov    cl,dl
  40d8a5:	xor    al,0xab
  40d8a7:	jge    0x40d8ad
  40d8a9:	fnstsw WORD PTR [edx+0x34]
  40d8ac:	dec    ecx
  40d8ad:	cmp    al,0xe3
  40d8af:	xchg   BYTE PTR [eax+0x4d],ah
  40d8b2:	dec    ebx
  40d8b3:	sbb    ah,BYTE PTR [esp+ebp*2-0x4d865f1]
  40d8ba:	jb     0x40d8ed
  40d8bc:	outs   dx,DWORD PTR ds:[esi]
  40d8bd:	inc    eax
  40d8be:	push   edi
  40d8bf:	sbb    DWORD PTR [esi+eax*1+0x24d452a5],edi
  40d8c6:	call   0x2595c867
  40d8cb:	shl    DWORD PTR [esi],cl
  40d8cd:	imul   DWORD PTR [edx+edi*2]
  40d8d0:	in     al,0xf9
  40d8d2:	and    BYTE PTR [ebx],0xb1
  40d8d5:	aad    0x3d
  40d8d7:	or     BYTE PTR [edx+ebx*2+0x41],bh
  40d8db:	mov    edx,0xc90ca333
  40d8e0:	mov    BYTE PTR [ebp+eax*8-0x3e],bh
  40d8e4:	xor    eax,0xe841d33d
  40d8e9:	xchg   esi,eax
  40d8ea:	mov    ch,0xc9
  40d8ec:	xchg   ebp,eax
  40d8ed:	cmc    
  40d8ee:	jns    0x40d8e7
  40d8f0:	pop    esp
  40d8f1:	imul   ecx,DWORD PTR [ecx+0x656e1968],0x21
  40d8f8:	addr16 jo 0x40d92f
  40d8fb:	push   0x813de6b
  40d900:	add    ebp,DWORD PTR [edi+ebp*4+0x52ff6831]
  40d907:	sub    ah,ah
  40d909:	daa    
  40d90a:	push   edi
  40d90b:	(bad)  
  40d90c:	loope  0x40d955
  40d90e:	or     ecx,DWORD PTR [edx+edi*1]
  40d911:	(bad)  
  40d912:	pop    ebx
  40d913:	xchg   esi,eax
  40d914:	sahf   
  40d915:	xor    al,0x2f
  40d917:	gs ja  0x40d98d
  40d91a:	inc    ebp
  40d91b:	add    ch,BYTE PTR [esi]
  40d91d:	cmp    DWORD PTR [ecx+0x165df435],0x149a098
  40d927:	lea    ebx,[ebp+0x22]
  40d92a:	icebp  
  40d92b:	inc    esi
  40d92c:	or     BYTE PTR [edx+0x43],0xed
  40d930:	pop    edi
  40d931:	in     al,0x57
  40d933:	dec    ecx
  40d934:	mov    eax,0xf34ebd1d
  40d939:	inc    edi
  40d93a:	push   ebx
  40d93b:	xor    DWORD PTR es:[ebx+ebx*8],0xfffffffb
  40d940:	or     edx,ebx
  40d942:	sbb    BYTE PTR [ecx+eax*2-0xd908405],dl
  40d949:	(bad)  
  40d94b:	sbb    eax,0x481b1342
  40d950:	jne    0x40d9ad
  40d952:	sub    cl,ch
  40d954:	add    ebx,edx
  40d956:	xchg   edi,eax
  40d957:	and    al,BYTE PTR [esi+esi*8-0x3]
  40d95b:	repnz add DWORD PTR [ecx],esp
  40d95e:	pop    edx
  40d95f:	lods   al,BYTE PTR ds:[esi]
  40d960:	sar    BYTE PTR [edi+esi*8],0x58
  40d964:	js     0x40d9a6
  40d966:	and    al,BYTE PTR [eax+0x6c]
  40d969:	mov    eax,0x26a00aa8
  40d96e:	cmp    cl,BYTE PTR [esi-0x2de01242]
  40d974:	ror    DWORD PTR [esi],0x21
  40d977:	push   ds
  40d978:	xor    ebp,edx
  40d97a:	aaa    
  40d97b:	std    
  40d97c:	iret   
  40d97d:	xor    eax,DWORD PTR [edi-0x8daa09c]
  40d983:	mov    eax,0x5bb77097
  40d988:	ror    DWORD PTR [esi+0x116fd252],1
  40d98e:	add    al,0xb9
  40d990:	mov    al,0xd8
  40d992:	mov    ch,0xff
  40d994:	mov    dh,BYTE PTR [edi+eax*4+0x9df9301]
  40d99b:	and    al,ch
  40d99d:	mov    cl,0x34
  40d99f:	int3   
  40d9a0:	cmp    al,0x55
  40d9a2:	leave  
  40d9a3:	lea    cx,[esi+ecx*2-0x33]
  40d9a8:	leave  
  40d9a9:	xchg   ecx,eax
  40d9aa:	xor    eax,0xcdb304df
  40d9af:	add    eax,0x268c5f85
  40d9b4:	int3   
  40d9b5:	or     eax,0xca37226f
  40d9ba:	sub    ebp,DWORD PTR [ecx-0x71]
  40d9bd:	test   eax,0x582114b6
  40d9c2:	sub    al,0x37
  40d9c4:	cmp    eax,0xa050bf03
  40d9c9:	je     0x40d9ac
  40d9cb:	lods   eax,DWORD PTR ds:[esi]
  40d9cc:	push   0x23
  40d9ce:	push   es
  40d9cf:	sub    al,0x64
  40d9d1:	inc    edx
  40d9d2:	and    DWORD PTR [esi+0x69e81247],0x5a
  40d9d9:	sub    esi,DWORD PTR [edx+0x34]
  40d9dc:	sahf   
  40d9dd:	retf   
  40d9de:	repz es mov bh,0x22
  40d9e2:	jne    0x40da5c
  40d9e4:	or     BYTE PTR [eax+0x59],dl
  40d9e7:	or     esi,0x8a919a46
  40d9ed:	xor    bl,BYTE PTR [edi]
  40d9ef:	mov    al,ds:0x89b5d1df
  40d9f4:	ins    DWORD PTR es:[edi],dx
  40d9f5:	aaa    
  40d9f6:	xchg   ecx,eax
  40d9f7:	hlt    
  40d9f8:	jecxz  0x40d9e5
  40d9fa:	and    esi,DWORD PTR [ebx+0x809469d]
  40da00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da01:	dec    esi
  40da02:	ss add eax,0x4b57a5df
  40da08:	fcomp  QWORD PTR [esi]
  40da0a:	push   ecx
  40da0b:	add    al,0x31
  40da0d:	mov    eax,0x51903c0f
  40da12:	adc    edi,edi
  40da14:	adc    DWORD PTR fs:[edi+0x1a],0xffffff94
  40da19:	mov    bh,0x62
  40da1b:	rcr    BYTE PTR [ebx-0x7eeaf7fa],0xa6
  40da22:	aas    
  40da23:	test   eax,0xf3a557d6
  40da28:	adc    DWORD PTR [esi],ebx
  40da2a:	sti    
  40da2b:	sbb    cl,BYTE PTR [ebp+ebp*1-0x5c37fbaa]
  40da32:	dec    ebp
  40da33:	xchg   edi,eax
  40da34:	mov    eax,0x73b4ec65
  40da39:	push   es
  40da3a:	cmc    
  40da3b:	into   
  40da3c:	xor    ch,BYTE PTR [esi]
  40da3e:	test   al,0x50
  40da40:	jmp    0x89d9e4d
  40da45:	cmp    cl,BYTE PTR [ebx-0x4b]
  40da48:	cmp    eax,0x3daf74ec
  40da4d:	jno    0x40da4a
  40da4f:	imul   ecx,DWORD PTR [esi-0x1c],0x4c936db5
  40da56:	jmp    DWORD PTR [ebx+0x47]
  40da59:	adc    dl,BYTE PTR [ebp+0x2e]
  40da5c:	fisttp WORD PTR [ebx-0x7f]
  40da5f:	pusha  
  40da60:	pop    eax
  40da61:	push   ds
  40da62:	xchg   ecx,eax
  40da63:	gs push ebp
  40da65:	sbb    eax,0xf68e7c35
  40da6a:	mov    ds:0xc034424c,eax
  40da6f:	(bad)  
  40da70:	mov    ds:0xd48acf2c,al
  40da75:	nop
  40da76:	pop    esi
  40da77:	xor    ebp,DWORD PTR [esi]
  40da79:	xchg   ecx,eax
  40da7a:	neg    DWORD PTR [ebp+0x67]
  40da7d:	inc    ecx
  40da7e:	xor    ah,dl
  40da80:	pop    esi
  40da81:	je     0x40daa9
  40da83:	pop    ebx
  40da84:	push   edx
  40da85:	inc    esp
  40da86:	loop   0x40da32
  40da88:	cmp    ecx,edi
  40da8a:	pop    ecx
  40da8b:	test   eax,0x3d1faf95
  40da90:	ds enter 0x12a,0x86
  40da95:	inc    ebp
  40da96:	test   al,0x2a
  40da98:	and    al,0x8e
  40da9a:	inc    esi
  40da9b:	lds    edx,FWORD PTR [ebp-0x16ab6d79]
  40daa1:	and    eax,DWORD PTR [edx+eax*2]
  40daa4:	adc    ah,BYTE PTR [edi]
  40daa6:	leave  
  40daa7:	cdq    
  40daa8:	pop    es
  40daa9:	clc    
  40daaa:	pop    ebp
  40daab:	mov    al,ds:0x6f37c7a8
  40dab0:	test   eax,0xd06f69a
  40dab5:	mov    ah,BYTE PTR [eax+0x5c]
  40dab8:	repnz cwde 
  40daba:	repnz rol BYTE PTR [eax+0x70],1
  40dabe:	push   cs
  40dabf:	or     bh,bh
  40dac1:	sbb    esi,ebx
  40dac3:	iret   
  40dac4:	fcmove st,st(7)
  40dac6:	fdivrp st(2),st
  40dac8:	mov    dh,0x9e
  40daca:	jmp    0x9eaf31b2
  40dacf:	push   edi
  40dad0:	jnp    0x40da62
  40dad2:	jmp    0x424b:0x5723a76b
  40dad9:	push   esi
  40dada:	retf   
  40dadb:	push   edx
  40dadc:	and    dl,BYTE PTR [edx]
  40dade:	mov    edx,DWORD PTR [esi]
  40dae0:	dec    ebp
  40dae1:	cmp    BYTE PTR [eax],0xd3
  40dae4:	mul    DWORD PTR [eax-0x59]
  40dae7:	cmp    al,0xbe
  40dae9:	push   es
  40daea:	aaa    
  40daeb:	mov    edx,DWORD PTR [edx-0x4ffbeb2f]
  40daf1:	cwde   
  40daf2:	nop
  40daf3:	jle    0x40dad9
  40daf5:	pop    esp
  40daf6:	iret   
  40daf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40daf8:	out    dx,al
  40daf9:	inc    edx
  40dafa:	inc    eax
  40dafb:	pop    esp
  40dafc:	loope  0x40dade
  40dafe:	ins    DWORD PTR es:[edi],dx
  40daff:	inc    esi
  40db00:	ins    DWORD PTR es:[edi],dx
  40db01:	cmp    al,0xe2
  40db03:	std    
  40db04:	inc    esi
  40db05:	pop    es
  40db06:	mov    eax,ds:0x357232e3
  40db0b:	es cwde 
  40db0d:	mov    ebx,0x2f6338e3
  40db12:	lock adc DWORD PTR [eax+0x2a],ebp
  40db16:	rcl    cl,0x4
  40db19:	lea    ebp,[eax]
  40db1b:	scas   eax,DWORD PTR es:[edi]
  40db1c:	xchg   ecx,eax
  40db1d:	pop    ss
  40db1e:	add    bl,dl
  40db20:	popa   
  40db21:	mov    ds:0xc9e379c4,al
  40db26:	shl    DWORD PTR [eax+0x2],1
  40db29:	xlat   BYTE PTR ds:[ebx]
  40db2a:	aam    0xca
  40db2c:	repz lahf 
  40db2e:	dec    ebp
  40db2f:	cmp    ebp,DWORD PTR [eax+esi*2-0x4d]
  40db33:	sub    dl,0x3b
  40db36:	cmp    BYTE PTR [eax-0x381c4920],ch
  40db3c:	jns    0x40db57
  40db3e:	mov    eax,0x405ebe76
  40db43:	test   DWORD PTR [edx-0x4b],ebp
  40db46:	out    dx,eax
  40db47:	cmc    
  40db48:	ror    DWORD PTR [ebx],0xb4
  40db4b:	xchg   ecx,eax
  40db4c:	mov    gs,ebp
  40db4e:	(bad)  
  40db4f:	pushf  
  40db50:	imul   ebp,DWORD PTR [ebx+0x5071b8fb],0xb458bf06
  40db5a:	aaa    
  40db5b:	adc    DWORD PTR [ecx-0x50e7a43e],ebx
  40db61:	sub    ebp,DWORD PTR [ebp-0x74]
  40db64:	rcr    DWORD PTR ds:0xfa5e0680,0x69
  40db6b:	call   DWORD PTR [edi+0x67da4aef]
  40db71:	ror    DWORD PTR [edx],0x25
  40db74:	dec    ebp
  40db75:	mov    al,0xdb
  40db77:	mov    ah,0xe1
  40db79:	or     ah,BYTE PTR [ebx]
  40db7b:	sub    BYTE PTR [ebp+0x1f9e2bfc],ah
  40db81:	std    
  40db82:	pop    ecx
  40db83:	icebp  
  40db84:	sbb    ebp,DWORD PTR [ebp-0x97797cf]
  40db8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db8b:	pop    ebp
  40db8c:	add    BYTE PTR [edi+0x340ca796],dh
  40db92:	fdiv   QWORD PTR [edx]
  40db94:	push   esp
  40db95:	jecxz  0x40dbad
  40db97:	lahf   
  40db98:	jbe    0x40dbe0
  40db9a:	push   ss
  40db9b:	in     al,0x38
  40db9d:	inc    edi
  40db9e:	dec    ebp
  40db9f:	retf   0xe8d1
  40dba2:	outs   dx,DWORD PTR ds:[esi]
  40dba3:	ds ja  0x40dbf2
  40dba6:	push   es
  40dba7:	jecxz  0x40db91
  40dba9:	sti    
  40dbaa:	sbb    ebx,DWORD PTR [ecx+0x6b5e9d35]
  40dbb0:	data16 cmp bh,bl
  40dbb3:	dec    ecx
  40dbb4:	push   edx
  40dbb5:	add    DWORD PTR [esi-0x11b498e2],esp
  40dbbb:	mov    dl,0x4f
  40dbbd:	dec    eax
  40dbbe:	inc    ecx
  40dbbf:	jle    0x40dba9
  40dbc1:	add    ax,0xdf38
  40dbc5:	xor    eax,0xf6934d85
  40dbca:	push   cs
  40dbcb:	or     al,0x9b
  40dbcd:	cmp    al,0x76
  40dbcf:	add    al,0x64
  40dbd1:	nop
  40dbd2:	push   0xffffffe3
  40dbd4:	pop    ebp
  40dbd5:	call   0x153e:0x9d97705a
  40dbdc:	hlt    
  40dbdd:	out    dx,al
  40dbde:	scas   eax,DWORD PTR es:[edi]
  40dbdf:	jge    0x40dbef
  40dbe1:	loope  0x40db92
  40dbe3:	sbb    bl,BYTE PTR [ebx-0x28b8f78]
  40dbe9:	jnp    0x40dbf9
  40dbeb:	shl    BYTE PTR fs:[esi+0x66],0xe6
  40dbf0:	pop    esi
  40dbf1:	xor    al,0xce
  40dbf3:	loopne 0x40dc5f
  40dbf5:	jae    0x40dbfc
  40dbf7:	mov    ds:0xf7863fb9,eax
  40dbfc:	int    0xf9
  40dbfe:	inc    esp
  40dbff:	enter  0xe0e6,0xe8
  40dc03:	mov    edx,0x91550188
  40dc08:	push   ss
  40dc09:	into   
  40dc0a:	mov    WORD PTR [edx-0x3c],?
  40dc0d:	pushf  
  40dc0e:	inc    esi
  40dc0f:	stos   BYTE PTR es:[edi],al
  40dc10:	push   cs
  40dc11:	pop    ds
  40dc12:	add    al,0xaf
  40dc14:	mov    es,WORD PTR [eax+0x2e]
  40dc17:	mov    ebx,DWORD PTR [eax-0x71877105]
  40dc1d:	aad    0x5b
  40dc1f:	xchg   esi,eax
  40dc20:	xchg   esi,eax
  40dc21:	jmp    0x40dbd3
  40dc23:	(bad)  
  40dc25:	xlat   BYTE PTR ds:[ebx]
  40dc26:	retf   
  40dc27:	push   ebp
  40dc28:	pop    ss
  40dc29:	rcr    DWORD PTR [edi],cl
  40dc2b:	inc    edx
  40dc2c:	into   
  40dc2d:	inc    ecx
  40dc2e:	mov    WORD PTR [ecx+0x27e9a795],ss
  40dc34:	lods   al,BYTE PTR ds:[esi]
  40dc35:	iret   
  40dc36:	xchg   edi,eax
  40dc37:	mov    eax,0x5cec697b
  40dc3c:	clc    
  40dc3d:	push   0x61
  40dc3f:	dec    eax
  40dc40:	jae    0x40dbdd
  40dc42:	int    0x5d
  40dc44:	pop    eax
  40dc45:	and    DWORD PTR [edx],esp
  40dc47:	mov    esp,0xb3877b52
  40dc4c:	add    eax,0x749223c8
  40dc51:	push   0xffffffbc
  40dc53:	or     DWORD PTR [ebx+0x28],0xe8504ce6
  40dc5a:	mov    edi,DWORD PTR [ebp-0x7c]
  40dc5d:	or     al,0x86
  40dc5f:	cmp    dl,BYTE PTR [ebx+0xf]
  40dc62:	or     edi,DWORD PTR [esi]
  40dc64:	sbb    DWORD PTR [eax],esp
  40dc66:	ins    BYTE PTR es:[edi],dx
  40dc67:	xchg   DWORD PTR [esp+eax*2+0x1a],eax
  40dc6b:	fwait
  40dc6c:	xor    esp,DWORD PTR [edx-0x3dac80d3]
  40dc72:	lods   al,BYTE PTR ds:[esi]
  40dc73:	(bad)  
  40dc74:	dec    eax
  40dc75:	cs jo  0x40dc5a
  40dc78:	rol    DWORD PTR [ebx-0x44],0x9f
  40dc7c:	fldenvw [edi]
  40dc7f:	call   DWORD PTR [ecx-0x6502ab6b]
  40dc85:	iret   
  40dc86:	test   cl,dh
  40dc88:	mov    ds:0x7dc6c081,eax
  40dc8d:	adc    al,0x6d
  40dc8f:	lods   al,BYTE PTR ds:[esi]
  40dc90:	and    ebx,DWORD PTR [edi+0x2f]
  40dc93:	sub    DWORD PTR [edx-0x22],edi
  40dc96:	neg    edx
  40dc98:	inc    ebx
  40dc99:	frstor [esi-0x4e690cd8]
  40dc9f:	fnsave [bp+si]
  40dca2:	and    al,0x17
  40dca4:	pop    edi
  40dca5:	mov    eax,0x457e43f3
  40dcaa:	icebp  
  40dcab:	jecxz  0x40dcce
  40dcad:	sahf   
  40dcae:	mov    bl,BYTE PTR [ecx+0x4a]
  40dcb1:	arpl   dx,cx
  40dcb3:	push   es
  40dcb4:	outs   dx,BYTE PTR ds:[esi]
  40dcb5:	mov    al,ds:0x55a05ec4
  40dcba:	push   edx
  40dcbb:	add    ebp,DWORD PTR [eax+0x1de282fc]
  40dcc1:	retf   0xbce4
  40dcc4:	mov    ecx,DWORD PTR [edx+0x2d7a6f73]
  40dcca:	arpl   WORD PTR [ecx],dx
  40dccc:	add    eax,0x217eebcf
  40dcd1:	cli    
  40dcd2:	mov    ecx,0xdff7c5ec
  40dcd7:	ja     0x40dd34
  40dcd9:	mov    esi,0x3b1e1162
  40dcde:	test   al,0x50
  40dce0:	out    0xc3,al
  40dce2:	out    dx,eax
  40dce3:	cmp    al,0x23
  40dce5:	sar    BYTE PTR ds:0x16c4bb0f,cl
  40dceb:	jno    0x40dc97
  40dced:	jns    0x40dd3e
  40dcef:	xchg   ebx,eax
  40dcf0:	pusha  
  40dcf1:	icebp  
  40dcf2:	shufps xmm5,XMMWORD PTR [edi],0x27
  40dcf6:	call   0x5b54:0x483f235c
  40dcfd:	xchg   ecx,eax
  40dcfe:	inc    ebx
  40dcff:	int3   
  40dd00:	pop    edi
  40dd01:	push   edx
  40dd02:	pop    eax
  40dd03:	mov    ebp,0x821c261e
  40dd08:	jge    0x40dcaf
  40dd0a:	sbb    eax,DWORD PTR [esi-0x60]
  40dd0d:	dec    edi
  40dd0e:	stos   BYTE PTR es:[edi],al
  40dd0f:	mov    esp,0x331b0163
  40dd14:	aad    0x2f
  40dd16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd17:	or     DWORD PTR [ecx-0x1b48740e],esi
  40dd1d:	sbb    al,0x7c
  40dd1f:	cmp    DWORD PTR [eax+0x2d467d08],eax
  40dd25:	das    
  40dd26:	pop    eax
  40dd27:	jecxz  0x40dda6
  40dd29:	add    eax,0xb75a2fa6
  40dd2e:	pop    ss
  40dd2f:	mov    ebx,0x1eabc59
  40dd34:	test   BYTE PTR [edi-0x2f],al
  40dd37:	push   ebx
  40dd38:	mov    dl,0xae
  40dd3a:	bound  edx,QWORD PTR [edi]
  40dd3c:	sar    edx,cl
  40dd3e:	cld    
  40dd3f:	pusha  
  40dd40:	shr    BYTE PTR cs:[edi],cl
  40dd43:	xchg   edi,eax
  40dd44:	fwait
  40dd45:	jecxz  0x40dd45
  40dd47:	push   es
  40dd48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd49:	pop    edx
  40dd4a:	mov    ebp,0xbeba1485
  40dd4f:	dec    esi
  40dd50:	pop    es
  40dd51:	sbb    ebx,esp
  40dd53:	rcl    DWORD PTR [ebp+edx*4-0xe],1
  40dd57:	sbb    DWORD PTR ss:[edx],ecx
  40dd5a:	jg     0x40dd6f
  40dd5c:	push   esi
  40dd5d:	scas   al,BYTE PTR es:[edi]
  40dd5e:	and    BYTE PTR gs:[ecx+0x3df91269],al
  40dd65:	push   ebp
  40dd66:	mov    DWORD PTR [eax],edi
  40dd68:	int    0xbe
  40dd6a:	or     BYTE PTR [ecx+0x6f],ch
  40dd6d:	pop    es
  40dd6e:	std    
  40dd6f:	dec    ebx
  40dd70:	ja     0x40dd02
  40dd72:	pop    ds
  40dd73:	lahf   
  40dd74:	rcl    BYTE PTR ds:0x44a86462,cl
  40dd7a:	sti    
  40dd7b:	jno    0x40ddec
  40dd7d:	out    dx,eax
  40dd7e:	sub    ah,BYTE PTR [ecx+eax*8]
  40dd81:	mov    esi,0xf68194cd
  40dd86:	js     0x40ddf9
  40dd88:	push   eax
  40dd89:	pop    edx
  40dd8a:	loope  0x40dda9
  40dd8c:	ds out 0x28,eax
  40dd8f:	fild   WORD PTR [ebp-0x10]
  40dd92:	sub    DWORD PTR [ebx+0x5690f74a],0x4097f541
  40dd9c:	mov    ds:0x295a284e,eax
  40dda1:	arpl   WORD PTR [esi+ebx*2+0x5e548adb],si
  40dda8:	jb     0x40dd56
  40ddaa:	xchg   ecx,eax
  40ddab:	outs   dx,DWORD PTR ds:[esi]
  40ddac:	les    edi,FWORD PTR [edx]
  40ddae:	aas    
  40ddaf:	inc    ecx
  40ddb0:	mov    ecx,?
  40ddb2:	popa   
  40ddb3:	in     eax,0x97
  40ddb5:	sub    esp,edi
  40ddb7:	adc    esi,edx
  40ddb9:	sub    eax,0x82e3558a
  40ddbe:	xchg   edx,eax
  40ddbf:	jnp    0x40de20
  40ddc1:	in     al,dx
  40ddc2:	(bad)  [esi-0x3fdecc22]
  40ddc8:	das    
  40ddc9:	cmp    eax,0x222cf985
  40ddce:	xchg   esp,eax
  40ddcf:	icebp  
  40ddd0:	jmp    0x40de51
  40ddd2:	mov    ds:0xefad7633,eax
  40ddd7:	mov    ds:0x61683fa8,al
  40dddc:	add    cl,BYTE PTR [ecx+0x4d24bab1]
  40dde2:	stos   DWORD PTR es:[edi],eax
  40dde3:	imul   edi,ecx,0xccbb2cb6
  40dde9:	cmp    eax,0xac0993b2
  40ddee:	ja     0x40dddc
  40ddf0:	aam    0xfe
  40ddf2:	pop    ecx
  40ddf3:	adc    DWORD PTR [edi+0xc048635],edx
  40ddf9:	outs   dx,DWORD PTR ds:[esi]
  40ddfa:	and    al,0x6e
  40ddfc:	popf   
  40ddfd:	stos   BYTE PTR es:[edi],al
  40ddfe:	ret    0xe49e
  40de01:	outs   dx,DWORD PTR fs:[esi]
  40de03:	ja     0x40de05
  40de05:	enter  0xb08b,0xd
  40de09:	push   edx
  40de0a:	mov    ch,0x80
  40de0c:	sbb    al,0x3a
  40de0e:	daa    
  40de0f:	pop    eax
  40de10:	popa   
  40de11:	mov    BYTE PTR [ecx+ecx*4],ch
  40de14:	mov    eax,ds:0x58f23c99
  40de19:	jecxz  0x40de81
  40de1b:	jmp    0xbce7:0xe5dcc1d5
  40de22:	retf   0xb222
  40de25:	or     BYTE PTR [edi-0x68494f88],dh
  40de2b:	out    dx,al
  40de2c:	fisub  WORD PTR [esi-0x59]
  40de2f:	cmp    bl,BYTE PTR [edx]
  40de31:	mov    esp,0x66b1b441
  40de36:	ss jp  0x40de88
  40de39:	inc    esp
  40de3a:	sub    cl,BYTE PTR [edx]
  40de3c:	add    BYTE PTR [ebx+esi*1+0xfbd5a1d],0x4e
  40de44:	jae    0x40de9f
  40de46:	dec    edi
  40de47:	pop    esi
  40de48:	test   al,0xe3
  40de4a:	inc    edx
  40de4b:	add    ebp,DWORD PTR [esi+0x56]
  40de4e:	hlt    
  40de4f:	test   dh,dl
  40de51:	cwde   
  40de52:	adc    eax,0x3410b996
  40de57:	push   ecx
  40de58:	inc    esp
  40de59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de5a:	mov    DWORD PTR [eax*8+0x9c814d7],edi
  40de61:	cli    
  40de62:	xchg   ebp,eax
  40de63:	push   eax
  40de64:	das    
  40de65:	mov    ebx,0x35c63fc0
  40de6a:	fmul   st(4),st
  40de6c:	sbb    eax,0xcfa67cb2
  40de71:	jle    0x40de6b
  40de73:	(bad)  
  40de74:	cmp    eax,0x2aa59c3b
  40de7a:	fcom   QWORD PTR [edi]
  40de7c:	push   ecx
  40de7d:	xchg   edx,eax
  40de7e:	or     al,0xe4
  40de80:	jne    0x40de40
  40de82:	arpl   WORD PTR [ebp-0x50],ax
  40de85:	dec    edi
  40de86:	cmp    DWORD PTR [edx],esp
  40de88:	and    eax,0x8b423b68
  40de8d:	push   eax
  40de8e:	fdiv   DWORD PTR [edi-0x4b]
  40de91:	into   
  40de92:	mov    al,0x17
  40de94:	dec    ecx
  40de95:	xchg   ecx,eax
  40de96:	push   edx
  40de97:	ins    DWORD PTR es:[edi],dx
  40de98:	(bad)  
  40de99:	cmc    
  40de9a:	test   eax,0xe692d0
  40de9f:	test   ah,dh
  40dea1:	cmc    
  40dea2:	aas    
  40dea3:	nop
  40dea4:	push   0x9f9165ea
  40dea9:	mov    ds:0xdcc9fee7,eax
  40deae:	div    BYTE PTR [esi+ebp*8-0x47038eae]
  40deb5:	cmp    edx,esi
  40deb7:	mov    eax,0x507b58e0
  40debc:	hlt    
  40debd:	dec    ebp
  40debe:	jge    0x40de6b
  40dec0:	xchg   BYTE PTR [ebx],dh
  40dec2:	add    eax,0xa78f7382
  40dec7:	pop    eax
  40dec8:	ins    DWORD PTR es:[edi],dx
  40dec9:	cmp    BYTE PTR [edx-0x7aecf25f],0xec
  40ded0:	pop    ss
  40ded1:	shr    BYTE PTR [ecx-0x124e97b3],1
  40ded7:	pop    ebx
  40ded8:	out    dx,al
  40ded9:	in     al,0xa4
  40dedb:	aam    0x8
  40dedd:	nop
  40dede:	outs   dx,DWORD PTR ds:[esi]
  40dedf:	and    DWORD PTR [edi],edi
  40dee1:	inc    edx
  40dee2:	ficom  DWORD PTR [edi+0x25]
  40dee5:	jecxz  0x40de7f
  40dee7:	aam    0xbf
  40dee9:	retf   0x7d3
  40deec:	sti    
  40deed:	mov    ebp,DWORD PTR [ecx+ecx*1-0x2e]
  40def1:	xchg   esi,eax
  40def2:	or     DWORD PTR [ebx+0x39],0x90e81b0e
  40def9:	and    BYTE PTR [edx],cl
  40defb:	call   0xad4f8bc7
  40df00:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40df02:	inc    esp
  40df03:	ds jg  0x40df6f
  40df06:	pop    es
  40df07:	jmp    0xf26798e3
  40df0c:	retf   
  40df0d:	pop    edi
  40df0e:	jns    0x40dee4
  40df10:	mov    ds:0xa935fb21,al
  40df15:	adc    esp,DWORD PTR [edx-0x2fdf0d3d]
  40df1b:	push   ds
  40df1c:	call   0xfed0173a
  40df21:	add    bh,cl
  40df23:	mov    DWORD PTR [ebx+0x1acfabb8],ecx
  40df29:	push   DWORD PTR [esi]
  40df2b:	dec    ebp
  40df2c:	jl     0x40df06
  40df2e:	lds    edi,FWORD PTR [edx-0x31a92638]
  40df34:	nop
  40df35:	arpl   bx,sp
  40df37:	sbb    bx,WORD PTR [edi*4+0x76199ee7]
  40df3f:	ss pusha 
  40df41:	clc    
  40df42:	jns    0x40df52
  40df44:	(bad)  
  40df47:	call   0xad28:0x8bbc5ebe
  40df4e:	and    dh,BYTE PTR [eax+0x7c]
  40df51:	adc    DWORD PTR [esi],esp
  40df53:	cmp    BYTE PTR [edx+0xc8c583c],dl
  40df59:	push   ds
  40df5a:	push   es
  40df5b:	add    al,0x96
  40df5d:	outs   dx,BYTE PTR ds:[esi]
  40df5e:	xor    BYTE PTR [ebp-0x76],ch
  40df61:	add    al,BYTE PTR [esp+ecx*4-0x59]
  40df65:	inc    esp
  40df66:	inc    edx
  40df67:	out    dx,eax
  40df68:	in     al,dx
  40df69:	daa    
  40df6a:	shr    cl,1
  40df6c:	jl     0x40df51
  40df6e:	aam    0x6c
  40df70:	bound  ecx,QWORD PTR [ecx-0x49f6f059]
  40df76:	aaa    
  40df77:	push   esi
  40df78:	xlat   BYTE PTR ds:[ebx]
  40df79:	cmp    edx,edx
  40df7b:	adc    ah,BYTE PTR [esi]
  40df7d:	mov    edi,ss
  40df7f:	(bad)  
  40df80:	test   DWORD PTR [edi-0x38d2ce17],0x13911ec1
  40df8a:	mov    cs,WORD PTR [esi+0x30bbb328]
  40df90:	mov    edi,0x7364e89d
  40df95:	sahf   
  40df96:	inc    eax
  40df97:	cmp    BYTE PTR [esi],al
  40df99:	xor    ebp,DWORD PTR [esi+0x49]
  40df9c:	and    BYTE PTR [ebx-0x66],dl
  40df9f:	into   
  40dfa0:	pusha  
  40dfa1:	jbe    0x40df8a
  40dfa3:	scas   al,BYTE PTR es:[edi]
  40dfa4:	or     ebx,ecx
  40dfa6:	pop    esi
  40dfa7:	adc    BYTE PTR [esi+0x2bb5103],bl
  40dfad:	mov    bl,0xe0
  40dfaf:	add    BYTE PTR ds:0x33663ea8,dh
  40dfb5:	bound  esi,QWORD PTR [edi-0x44]
  40dfb8:	mov    fs,WORD PTR [ebp+0x1a]
  40dfbb:	add    DWORD PTR [edx+ebx*2+0x47],0xffffffa6
  40dfc0:	and    ah,BYTE PTR [edi+0x1cafa897]
  40dfc6:	call   0xa03e7d0c
  40dfcb:	jno    0x40dfbd
  40dfcd:	dec    ebx
  40dfce:	(bad)  
  40dfcf:	sub    eax,0xfcd75134
  40dfd4:	dec    edx
  40dfd5:	cld    
  40dfd6:	cmp    al,0xe8
  40dfd8:	jecxz  0x40dfd4
  40dfda:	pusha  
  40dfdb:	mov    edx,0x14a6bf71
  40dfe0:	es push ebx
  40dfe2:	shr    BYTE PTR ds:0x5283f3b9,cl
  40dfe8:	sub    dl,BYTE PTR [edx-0xaf102fe]
  40dfee:	js     0x40e01c
  40dff0:	jl     0x40dfd6
  40dff2:	mov    al,dl
  40dff4:	cmp    ebx,DWORD PTR [ebx-0x44db4228]
  40dffa:	sbb    eax,0x37e81015
  40dfff:	ja     0x40e021
  40e001:	inc    edx
  40e002:	adc    eax,0x97ad3a99
  40e007:	jmp    0x44d1ab5d
  40e00c:	out    0x27,eax
  40e00e:	cmp    eax,0x6071469f
  40e013:	adc    bl,dl
  40e015:	fist   DWORD PTR [ebx+ebx*8-0x18]
  40e019:	imul   edi,edi,0xbea34395
  40e01f:	out    0xb4,eax
  40e021:	sbb    eax,edi
  40e023:	and    eax,0x283fd268
  40e028:	mov    BYTE PTR [edi-0x7e],0x50
  40e02c:	push   edi
  40e02d:	rcr    bh,0x9e
  40e030:	out    0xb,eax
  40e032:	arpl   WORD PTR [edx-0x45364028],bx
  40e038:	ret    0x6f71
  40e03b:	adc    BYTE PTR [esi+0x14],dh
  40e03e:	int    0xdc
  40e040:	xor    ecx,DWORD PTR [edi+0xc]
  40e043:	in     al,dx
  40e044:	and    DWORD PTR [edx],0xdf72092a
  40e04a:	mov    ebp,0x8d655c71
  40e04f:	mov    esp,0x308e9073
  40e054:	in     al,dx
  40e055:	jnp    0x40e0c7
  40e057:	cmp    DWORD PTR [edx+0x4a],0x53
  40e05b:	ins    BYTE PTR es:[edi],dx
  40e05c:	fucomi st,st(1)
  40e05e:	test   al,0xb9
  40e060:	xchg   ebx,eax
  40e061:	into   
  40e062:	or     bl,BYTE PTR [esi]
  40e064:	mov    bl,0x8e
  40e066:	cs jge 0x40e056
  40e069:	mov    ecx,0x694a150b
  40e06e:	sti    
  40e06f:	lock jle 0x40e057
  40e072:	push   ebx
  40e073:	int    0xb2
  40e075:	lea    esi,[eax]
  40e077:	cmp    eax,0xe4d52ebc
  40e07c:	dec    edx
  40e07d:	js     0x40e00a
  40e07f:	add    ecx,DWORD PTR [edx+0x57]
  40e082:	push   0xffffff96
  40e084:	inc    ebx
  40e085:	shr    BYTE PTR [esi-0x7d],cl
  40e088:	arpl   WORD PTR [edi+0x63],dx
  40e08b:	pusha  
  40e08c:	mov    ecx,ebx
  40e08e:	ret    
  40e08f:	cwde   
  40e090:	scas   al,BYTE PTR es:[edi]
  40e091:	std    
  40e092:	mov    dl,0x7b
  40e094:	jns    0x40e0d8
  40e096:	and    eax,edi
  40e098:	mov    ds,esp
  40e09a:	adc    dh,BYTE PTR [ecx-0x49]
  40e09d:	loopne 0x40e0ad
  40e09f:	ficomp DWORD PTR [ecx+0x5c]
  40e0a2:	cmp    ah,ah
  40e0a4:	lods   al,BYTE PTR ds:[esi]
  40e0a5:	push   ebx
  40e0a6:	xor    al,0x9a
  40e0a8:	jb     0x40e0a8
  40e0aa:	rcl    DWORD PTR [esi+0xb],1
  40e0ad:	aas    
  40e0ae:	or     BYTE PTR [esi+0x644f97fb],bl
  40e0b4:	fcmovnb st,st(2)
  40e0b6:	push   esi
  40e0b7:	cld    
  40e0b8:	lock in eax,0x16
  40e0bb:	repnz add DWORD PTR [esi],0x36
  40e0bf:	cmc    
  40e0c0:	int3   
  40e0c1:	jge    0x40e074
  40e0c3:	je     0x40e06e
  40e0c5:	jbe    0x40e0fa
  40e0c7:	shr    DWORD PTR [eax-0x15],1
  40e0ca:	xor    al,0x1b
  40e0cc:	test   cl,cl
  40e0ce:	sbb    eax,ebx
  40e0d0:	out    dx,eax
  40e0d1:	or     al,0xa
  40e0d3:	ds dec edi
  40e0d5:	sbb    bl,BYTE PTR [ebx-0x2ae2ef2a]
  40e0db:	xchg   DWORD PTR [ebx-0x12],edi
  40e0de:	loop   0x40e0aa
  40e0e0:	pop    edx
  40e0e1:	sub    dh,BYTE PTR [ebp+0x67]
  40e0e4:	dec    ebp
  40e0e5:	push   edi
  40e0e6:	test   BYTE PTR [eax+0xf409e57],al
  40e0ec:	imul   DWORD PTR [ebp-0x15bb5601]
  40e0f2:	mov    ecx,0x8b6d7a53
  40e0f7:	ss aam 0xc6
  40e0fa:	jg     0x40e0ee
  40e0fc:	xor    BYTE PTR [esi+0x4e9909d2],cl
  40e102:	push   eax
  40e103:	call   0x606d40e6
  40e108:	adc    al,0xff
  40e10a:	shl    bh,cl
  40e10c:	or     DWORD PTR [edx+0x183b16ac],ecx
  40e112:	adc    edx,DWORD PTR [ecx-0x3c]
  40e115:	scas   eax,DWORD PTR es:[edi]
  40e116:	push   esp
  40e117:	ins    BYTE PTR es:[edi],dx
  40e118:	dec    edx
  40e119:	push   esi
  40e11a:	mov    bh,al
  40e11c:	(bad)  
  40e11d:	xchg   edx,eax
  40e11e:	stos   BYTE PTR es:[edi],al
  40e11f:	popw   es
  40e121:	retf   0x652d
  40e124:	in     eax,0xd9
  40e126:	inc    esi
  40e127:	daa    
  40e128:	and    eax,0x5d4720a7
  40e12d:	std    
  40e12e:	or     dh,0x11
  40e131:	xor    esi,DWORD PTR [edi+0x4d31e4f6]
  40e137:	inc    edx
  40e138:	dec    edx
  40e139:	dec    ebx
  40e13a:	pop    ebp
  40e13b:	aas    
  40e13c:	out    0x70,eax
  40e13e:	jecxz  0x40e161
  40e140:	mov    bl,0xab
  40e142:	mov    al,ah
  40e144:	add    BYTE PTR [eax+eiz*2-0x77],dh
  40e148:	mov    ds:0x4609232a,eax
  40e14d:	sub    al,0xc4
  40e14f:	pop    ss
  40e150:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e151:	sub    eax,0x10d1df31
  40e156:	mov    eax,0xe699f777
  40e15b:	sub    edi,edi
  40e15d:	mov    bh,0x6
  40e15f:	fld    QWORD PTR [esi+eiz*8]
  40e162:	sub    ebx,esp
  40e164:	pop    ds
  40e165:	dec    ebx
  40e166:	mov    eax,ds:0x661c5737
  40e16b:	fcomp  st(3)
  40e16d:	ror    DWORD PTR [edi+0x42],1
  40e170:	xchg   edi,eax
  40e171:	ins    BYTE PTR es:[edi],dx
  40e172:	add    DWORD PTR [edi-0x356acde8],ebx
  40e178:	adc    al,BYTE PTR [eax+ebp*8-0x5a]
  40e17c:	mov    ch,BYTE PTR [esi+ebx*2]
  40e17f:	push   cs
  40e180:	stos   DWORD PTR es:[edi],eax
  40e181:	aad    0x5c
  40e183:	jecxz  0x40e1c0
  40e185:	call   0x4233:0x293f8233
  40e18c:	pop    es
  40e18d:	jnp    0x40e1e5
  40e18f:	mov    bh,0x5d
  40e191:	jge    0x40e19f
  40e193:	and    edi,DWORD PTR [edx+0x22acd8b3]
  40e199:	add    eax,0x6aa16de7
  40e19e:	imul   esp,DWORD PTR [edi],0xead00a26
  40e1a4:	jnp    0x40e1ba
  40e1a6:	mov    fs,WORD PTR [ebx-0x6b]
  40e1a9:	cli    
  40e1aa:	xchg   BYTE PTR [eax+0x2d],bl
  40e1ad:	(bad)  
  40e1ae:	iret   
  40e1af:	dec    esp
  40e1b0:	jmp    0xeca5f945
  40e1b5:	outs   dx,BYTE PTR ds:[esi]
  40e1b6:	repz or eax,0xdb21a848
  40e1bc:	pmaxsw mm4,mm6
  40e1bf:	into   
  40e1c0:	inc    ecx
  40e1c1:	mov    esp,0x8de3d06d
  40e1c6:	test   al,0x8d
  40e1c8:	pusha  
  40e1c9:	add    eax,0x77be862f
  40e1ce:	test   BYTE PTR [eax],dl
  40e1d0:	xor    eax,0xe44c2f7b
  40e1d5:	fnstcw WORD PTR [edi+0x15]
  40e1d8:	xor    eax,0xb525abad
  40e1dd:	bound  edi,QWORD PTR [eax+0x4e57aec1]
  40e1e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1e4:	sbb    BYTE PTR [esi+0x5c522b11],al
  40e1ea:	inc    edx
  40e1eb:	inc    ebp
  40e1ec:	xlat   BYTE PTR ds:[ebx]
  40e1ed:	mov    ch,BYTE PTR ds:0xd0295fe1
  40e1f3:	rol    BYTE PTR [ebp-0x5a],1
  40e1f6:	cmp    eax,eax
  40e1f8:	or     eax,0x4447d320
  40e1fd:	xchg   BYTE PTR [ecx+0x7f050a41],dh
  40e203:	in     al,0xe7
  40e205:	es mov ecx,0xe95a713b
  40e20b:	mov    ah,0xcc
  40e20d:	fidiv  DWORD PTR [ebx+ecx*8]
  40e210:	leave  
  40e211:	cdq    
  40e212:	or     BYTE PTR [esi],dh
  40e214:	jg     0x40e254
  40e216:	sub    eax,0xf39315a6
  40e21b:	stc    
  40e21c:	mov    eax,ds:0x7ebe0864
  40e221:	jno    0x40e22d
  40e223:	call   0x50ba600b
  40e228:	push   cs
  40e229:	inc    esp
  40e22a:	cdq    
  40e22b:	aad    0x46
  40e22d:	pop    ds
  40e22e:	sbb    eax,0x6a85073b
  40e233:	mov    eax,0xabeeed9b
  40e238:	out    dx,eax
  40e239:	sub    bl,BYTE PTR [esi]
  40e23b:	imul   edx,DWORD PTR [ebx-0x272a4e68],0x29aba707
  40e245:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e246:	shl    DWORD PTR [edi+0x4424afd8],0xeb
  40e24d:	or     eax,0xdca2c195
  40e252:	inc    edx
  40e253:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e254:	into   
  40e255:	popa   
  40e256:	jg     0x40e2d5
  40e258:	adc    BYTE PTR [edx+ebx*2-0x43],dh
  40e25c:	and    eax,0x2120f5e6
  40e261:	ror    ecx,0xa7
  40e264:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e265:	fist   DWORD PTR [esi+ebx*2-0x10]
  40e269:	xor    al,0x9d
  40e26b:	int    0xab
  40e26d:	add    BYTE PTR [ebx],0x9b
  40e270:	sbb    al,0x67
  40e272:	xchg   ebp,eax
  40e273:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e274:	arpl   WORD PTR [ebx],dx
  40e276:	mov    ds:0x1c655b60,eax
  40e27b:	ins    BYTE PTR es:[edi],dx
  40e27c:	adc    dl,dl
  40e27e:	in     al,dx
  40e27f:	mov    ecx,0xdd4f0f0a
  40e284:	xor    BYTE PTR [eax],bh
  40e286:	mov    bl,0x15
  40e288:	jns    0x40e27f
  40e28a:	jmp    0x40e21e
  40e28c:	push   ecx
  40e28d:	(bad)  
  40e28e:	push   esp
  40e28f:	stos   BYTE PTR es:[edi],al
  40e290:	std    
  40e291:	ds mov eax,gs:0xcf24ba3
  40e298:	xor    DWORD PTR [ecx-0x1a80a0a2],ebp
  40e29e:	sahf   
  40e29f:	or     BYTE PTR [edx],0x85
  40e2a2:	sbb    dl,BYTE PTR [eax-0x76e89b66]
  40e2a8:	and    al,0x79
  40e2aa:	cmp    BYTE PTR [eax],ah
  40e2ac:	jg     0x40e2b3
  40e2ae:	les    ebx,FWORD PTR [ecx]
  40e2b0:	adc    al,0x48
  40e2b2:	xchg   edi,eax
  40e2b3:	jmp    0x4c0b:0xaf73339b
  40e2ba:	aam    0xc4
  40e2bc:	jo     0x40e244
  40e2be:	popf   
  40e2bf:	lds    edx,FWORD PTR [esi+edx*4]
  40e2c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e2c3:	push   0xffffffe4
  40e2c5:	outs   dx,BYTE PTR ds:[esi]
  40e2c6:	loop   0x40e305
  40e2c8:	jbe    0x40e2a1
  40e2ca:	dec    esi
  40e2cb:	xor    al,0x86
  40e2cd:	out    dx,al
  40e2ce:	add    DWORD PTR [ecx-0x75],edi
  40e2d1:	je     0x40e25c
  40e2d3:	inc    ecx
  40e2d4:	xchg   esp,eax
  40e2d5:	sbb    esp,DWORD PTR [edx]
  40e2d7:	inc    esi
  40e2d8:	pop    esp
  40e2d9:	nop
  40e2da:	in     eax,dx
  40e2db:	push   edx
  40e2dd:	loop   0x40e34b
  40e2df:	aam    0x76
  40e2e1:	xor    esp,ebx
  40e2e3:	push   ebp
  40e2e4:	idiv   BYTE PTR [edx+0x14]
  40e2e7:	int    0xb9
  40e2e9:	sub    DWORD PTR [edx-0x17],esi
  40e2ec:	pop    es
  40e2ed:	pop    esi
  40e2ee:	sub    ebp,DWORD PTR fs:[edx+0x27bf6577]
  40e2f5:	xchg   esi,eax
  40e2f6:	je     0x40e311
  40e2f8:	in     al,dx
  40e2f9:	jge    0x40e2e7
  40e2fb:	push   ebp
  40e2fc:	push   0xffffffdd
  40e2fe:	jecxz  0x40e2df
  40e300:	daa    
  40e301:	loop   0x40e306
  40e303:	jb     0x40e2a7
  40e305:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e306:	shl    DWORD PTR [ebx-0x7c],1
  40e309:	xchg   edi,eax
  40e30a:	push   ds
  40e30b:	xchg   DWORD PTR [eax],eax
  40e30d:	cmp    bl,0xf6
  40e310:	bound  ecx,QWORD PTR [esp+ecx*4+0x21]
  40e314:	(bad)  
  40e315:	inc    dl
  40e317:	repz aam 0x3c
  40e31a:	dec    edi
  40e31b:	push   esi
  40e31c:	rol    DWORD PTR [edx-0x6be0a1d1],1
  40e322:	shl    BYTE PTR [edx+ebx*2],1
  40e325:	push   ebp
  40e326:	sub    al,0xcc
  40e328:	out    dx,al
  40e329:	pop    ecx
  40e32a:	push   ss
  40e32b:	add    eax,0x8e6ff1fd
  40e330:	neg    DWORD PTR [esi+0x147f6594]
  40e336:	neg    DWORD PTR [eax+0x5c4d4f04]
  40e33c:	cdq    
  40e33d:	jmp    0x4976d47a
  40e342:	jb     0x40e377
  40e344:	aad    0x2a
  40e346:	lods   al,BYTE PTR ds:[esi]
  40e347:	(bad)  ds:0x9d4cc297
  40e34d:	aaa    
  40e34e:	and    DWORD PTR [edi-0x37],0x7ae29548
  40e355:	mov    cl,0x99
  40e357:	xlat   BYTE PTR ds:[ebx]
  40e358:	std    
  40e359:	cld    
  40e35a:	gs mov bh,0x53
  40e35d:	fadd   DWORD PTR [ebp+0xfd9e748]
  40e363:	mov    esi,0x3c66119f
  40e368:	mov    esi,0xafa87b92
  40e36d:	mov    ecx,0xa7075418
  40e372:	lahf   
  40e373:	mov    dl,0xc2
  40e375:	or     al,0xc0
  40e377:	mov    esi,0xf1a5ab98
  40e37c:	or     al,0x82
  40e37e:	repz pop ds
  40e380:	idiv   DWORD PTR [eax]
  40e382:	sub    DWORD PTR [ecx-0x4a4154ee],eax
  40e388:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e389:	jle    0x40e3fc
  40e38b:	aad    0x77
  40e38d:	ret    
  40e38e:	sbb    ebx,DWORD PTR [edi-0x4c16ad56]
  40e394:	xor    eax,0x7b04497a
  40e399:	xchg   DWORD PTR [ebx+0x18],ebx
  40e39c:	shr    BYTE PTR [ebx-0x31],0xa5
  40e3a0:	and    eax,0xb0c6c8cd
  40e3a5:	cmp    DWORD PTR [edi+0x41f3f880],0x58bd6b59
  40e3af:	xchg   edx,eax
  40e3b0:	ss pop eax
  40e3b2:	shr    cl,1
  40e3b4:	push   edx
  40e3b5:	shl    dh,cl
  40e3b7:	pushf  
  40e3b8:	jae    0x40e436
  40e3ba:	pop    esp
  40e3bb:	pop    ss
  40e3bc:	xchg   ebx,eax
  40e3bd:	sbb    BYTE PTR [ebx],al
  40e3bf:	int3   
  40e3c0:	nop
  40e3c1:	or     al,0x5d
  40e3c3:	test   ebp,ebx
  40e3c5:	xchg   ah,dh
  40e3c7:	pop    edx
  40e3c8:	sub    ch,dh
  40e3ca:	and    dh,bl
  40e3cc:	inc    edi
  40e3cd:	dec    eax
  40e3ce:	sub    eax,0xd029f4c6
  40e3d3:	push   edi
  40e3d4:	aad    0xdb
  40e3d6:	aaa    
  40e3d7:	jns    0x40e3cc
  40e3d9:	jne    0x40e436
  40e3db:	jno    0x40e3bd
  40e3dd:	fdivp  st(2),st
  40e3df:	clc    
  40e3e0:	add    ebp,DWORD PTR [ebx]
  40e3e2:	stc    
  40e3e3:	lds    esp,FWORD PTR [edx+0x5]
  40e3e6:	xchg   ebx,eax
  40e3e7:	and    esi,DWORD PTR [edi+eiz*8]
  40e3ea:	adc    eax,0xa5e025aa
  40e3ef:	jge    0x40e428
  40e3f1:	sbb    cl,BYTE PTR [ebx+0x64]
  40e3f4:	jbe    0x40e3c4
  40e3f6:	dec    ebp
  40e3f7:	and    eax,0x71c48529
  40e3fc:	lods   eax,DWORD PTR ds:[esi]
  40e3fd:	adc    esp,edx
  40e3ff:	pop    ss
  40e400:	aam    0xc2
  40e402:	in     eax,dx
  40e403:	sbb    ebp,0x8c8b96b2
  40e409:	jnp    0x40e484
  40e40b:	sbb    bl,BYTE PTR [edi]
  40e40d:	jp     0x40e3f8
  40e40f:	fucomp st(6)
  40e411:	invd   
  40e413:	jmp    0x20045861
  40e418:	xchg   esi,eax
  40e419:	mov    esp,0xcb4a1f52
  40e41e:	or     esp,edi
  40e420:	imul   edx,DWORD PTR [esi+0x1f],0xeab231eb
  40e427:	ja     0x40e3e4
  40e429:	lods   eax,DWORD PTR ds:[esi]
  40e42a:	mov    ch,0x84
  40e42c:	(bad)  
  40e42d:	nop
  40e42e:	push   edi
  40e42f:	sbb    BYTE PTR [edi-0x14ba96ef],bl
  40e435:	repz out 0x30,eax
  40e438:	ficom  DWORD PTR [eax-0x7a]
  40e43b:	jecxz  0x40e43a
  40e43d:	call   0xefb1:0xcdcddb2f
  40e444:	je     0x40e468
  40e446:	jle    0x40e466
  40e448:	mov    eax,ds:0x56708bd0
  40e44d:	dec    eax
  40e44e:	mov    esi,0x41c4d86e
  40e453:	call   DWORD PTR cs:[ebp+0x1ca57cd9]
  40e45a:	and    ebp,edx
  40e45c:	lds    esp,FWORD PTR [ecx+0x2e]
  40e45f:	sahf   
  40e460:	push   es
  40e461:	jae    0x40e40d
  40e463:	xchg   ecx,eax
  40e464:	nop
  40e465:	push   0x79594418
  40e46a:	dec    ebx
  40e46b:	ss jle 0x40e3f8
  40e46e:	stos   BYTE PTR es:[edi],al
  40e46f:	scas   eax,DWORD PTR es:[edi]
  40e470:	stos   DWORD PTR es:[edi],eax
  40e471:	scas   eax,DWORD PTR es:[edi]
  40e472:	cdq    
  40e473:	pop    edi
  40e474:	mov    ds:0x904e9ae9,eax
  40e479:	setne  al
  40e47c:	jno    0x40e4d4
  40e47e:	leave  
  40e47f:	xor    eax,0xaec10a3f
  40e484:	ins    DWORD PTR es:[edi],dx
  40e485:	mov    ch,0x48
  40e487:	xchg   esi,eax
  40e488:	lods   al,BYTE PTR ds:[esi]
  40e489:	shl    DWORD PTR [ecx-0x6f97ceec],0x53
  40e490:	bound  esi,QWORD PTR [ebx]
  40e492:	sbb    al,0xc7
  40e494:	pushf  
  40e495:	mov    ah,0x1b
  40e497:	push   ecx
  40e498:	cmp    esp,esi
  40e49a:	outs   dx,BYTE PTR ds:[esi]
  40e49b:	add    BYTE PTR [edi],cl
  40e49d:	ret    
  40e49e:	imul   DWORD PTR [ecx-0x6c]
  40e4a1:	out    dx,al
  40e4a2:	retf   
  40e4a3:	ss cmp edi,eax
  40e4a6:	out    0xb7,eax
  40e4a8:	stos   BYTE PTR es:[edi],al
  40e4a9:	aaa    
  40e4aa:	add    eax,ebx
  40e4ac:	jbe    0x40e4ce
  40e4ae:	jmp    0xf1a3:0xe7b8859c
  40e4b5:	xor    ebx,ebp
  40e4b7:	jnp    0x40e51f
  40e4b9:	or     ebx,DWORD PTR [edx+0x16]
  40e4bc:	jae    0x40e450
  40e4be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4bf:	fist   WORD PTR [esi-0x8e01972]
  40e4c5:	xchg   ebx,eax
  40e4c6:	xchg   esi,eax
  40e4c7:	sub    al,0x71
  40e4c9:	cmc    
  40e4ca:	in     al,0xb4
  40e4cc:	mov    al,ds:0x25b8ba94
  40e4d1:	sbb    BYTE PTR [esi+0x13a2a80e],al
  40e4d7:	scas   al,BYTE PTR es:[edi]
  40e4d8:	test   ebx,edx
  40e4da:	lds    edi,FWORD PTR [ecx+0x1d]
  40e4dd:	or     BYTE PTR [edi-0x66dfc2d6],dh
  40e4e3:	(bad)  
  40e4e4:	sti    
  40e4e5:	add    DWORD PTR [esi],edx
  40e4e7:	mov    eax,es:0xd78e66ce
  40e4ed:	push   0x5035d1d3
  40e4f2:	or     BYTE PTR [esi-0x38],al
  40e4f5:	jno    0x40e527
  40e4f7:	call   0x7be334d6
  40e4fc:	jae    0x40e486
  40e4fe:	repnz xor BYTE PTR [bp+si+0x61],bl
  40e503:	stos   BYTE PTR es:[edi],al
  40e504:	fs loop 0x40e547
  40e507:	sbb    al,0xf6
  40e509:	pop    ecx
  40e50a:	jb     0x40e4ff
  40e50c:	xor    ch,BYTE PTR [esp+0x7f]
  40e510:	jne    0x40e506
  40e512:	push   0xffffff98
  40e514:	loopne 0x40e57a
  40e516:	pop    ebp
  40e517:	mov    ds:0xe0fda115,eax
  40e51c:	dec    ebp
  40e51d:	dec    edi
  40e51e:	addr16 pop ebx
  40e520:	sbb    edx,DWORD PTR [ebp+0x41]
  40e523:	pop    edi
  40e524:	gs (bad) 
  40e526:	sub    esp,eax
  40e528:	popf   
  40e529:	retf   
  40e52a:	retf   
  40e52b:	push   ss
  40e52c:	pop    esi
  40e52d:	loope  0x40e5a9
  40e52f:	mov    edi,0x399194eb
  40e534:	call   0x4785:0xe311e2f6
  40e53b:	xchg   esp,eax
  40e53c:	ret    
  40e53d:	scas   al,BYTE PTR es:[edi]
  40e53e:	mov    esp,0xca5fffa5
  40e543:	sub    bh,BYTE PTR [eax]
  40e545:	or     DWORD PTR [edi+edx*4],edx
  40e548:	add    eax,DWORD PTR [eax-0xc]
  40e54b:	cmp    DWORD PTR [edx-0x26],ebx
  40e54e:	lock mov esi,0x84eb8d1f
  40e554:	jmp    0xf033af45
  40e559:	jmp    0xcf25:0xbfdc5c64
  40e560:	iret   
  40e561:	fwait
  40e562:	xor    DWORD PTR [esi-0x425e54b8],ebx
  40e568:	jge    0x40e538
  40e56a:	jge    0x40e52b
  40e56c:	push   edx
  40e56d:	and    esp,DWORD PTR [edx]
  40e56f:	jno    0x40e557
  40e571:	loop   0x40e506
  40e573:	or     BYTE PTR [edi],bh
  40e575:	mov    bh,0x1a
  40e577:	cmp    ebp,DWORD PTR [eax+0x31]
  40e57a:	dec    ebx
  40e57b:	mov    cl,0x7b
  40e57d:	add    BYTE PTR [ecx-0x39],dh
  40e580:	das    
  40e581:	jp     0x40e519
  40e583:	jmp    edi
  40e585:	mov    ecx,0xc804c985
  40e58a:	scas   al,BYTE PTR es:[edi]
  40e58b:	jg     0x40e59a
  40e58d:	jmp    0x5a71:0x34281a40
  40e594:	pushf  
  40e595:	test   BYTE PTR ds:0x20cd20cc,bh
  40e59b:	outs   dx,DWORD PTR ds:[esi]
  40e59c:	in     al,0x7a
  40e59e:	bound  edi,QWORD PTR [esi+0x45631e35]
  40e5a4:	jne    0x40e55b
  40e5a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e5a7:	std    
  40e5a8:	aaa    
  40e5a9:	sbb    eax,0xd3dc6791
  40e5ae:	xchg   ebx,eax
  40e5af:	sar    BYTE PTR [ecx+eiz*1-0x6576904],0x75
  40e5b7:	daa    
  40e5b8:	in     eax,dx
  40e5b9:	jle    0x40e60b
  40e5bb:	adc    eax,0x45af8b9d
  40e5c0:	mov    ah,0xff
  40e5c2:	mov    edx,0x4ee68022
  40e5c7:	add    edi,ebx
  40e5c9:	sub    DWORD PTR [edx-0x464c2e86],ecx
  40e5cf:	and    eax,0x49021773
  40e5d4:	sti    
  40e5d5:	je     0x40e599
  40e5d7:	push   esi
  40e5d8:	dec    ebp
  40e5d9:	and    ebp,DWORD PTR [edx]
  40e5db:	ret    
  40e5dc:	and    eax,0x2087bc70
  40e5e1:	push   ss
  40e5e2:	or     al,0xf0
  40e5e4:	inc    BYTE PTR [ebp+0x44]
  40e5e7:	and    BYTE PTR [edi+0x58b8a473],al
  40e5ed:	retf   
  40e5ee:	add    ebp,DWORD PTR [edi]
  40e5f0:	xor    ecx,DWORD PTR [edx-0x3d78442d]
  40e5f6:	test   BYTE PTR [ebx-0x2c492b51],bh
  40e5fc:	jg     0x40e659
  40e5fe:	or     eax,0xdcb4cbb8
  40e603:	enter  0x48b1,0xf
  40e607:	inc    eax
  40e608:	(bad)  
  40e609:	aam    0xbf
  40e60b:	add    eax,0x80becb09
  40e610:	pop    es
  40e611:	neg    BYTE PTR [edi+0x6a]
  40e614:	mov    ah,0x30
  40e616:	add    DWORD PTR [ebp+0x57257663],ebx
  40e61c:	test   BYTE PTR [ecx-0x27],0xd0
  40e620:	mov    esp,0x1364c479
  40e625:	xchg   ch,bh
  40e627:	rcr    ch,0xda
  40e62a:	adc    BYTE PTR [ebx+0x1ba6c7c7],dh
  40e630:	in     al,dx
  40e631:	and    DWORD PTR [esi],eax
  40e633:	or     cl,BYTE PTR [esi+0x22]
  40e636:	xchg   edx,eax
  40e637:	in     eax,0x24
  40e639:	popa   
  40e63a:	jmp    0x88ef64a8
  40e63f:	enter  0x686c,0xaf
  40e643:	rcr    DWORD PTR [ebp+0x4bb1ba9b],0x30
  40e64a:	push   ebp
  40e64b:	adc    BYTE PTR [eax+0xd],ah
  40e64e:	xor    al,0xd2
  40e650:	add    esp,esi
  40e652:	ja     0x40e67e
  40e654:	into   
  40e655:	fistp  DWORD PTR [esp+eiz*4]
  40e658:	adc    DWORD PTR [ecx],ecx
  40e65a:	dec    ecx
  40e65b:	jmp    0xe8f8:0x765d365
  40e662:	jmp    0x47b730d1
  40e667:	jns    0x40e6a6
  40e669:	clc    
  40e66a:	adc    BYTE PTR [ebx],bh
  40e66c:	data16 fs mov ah,0xee
  40e670:	add    al,0x82
  40e672:	pop    ss
  40e673:	(bad)  
  40e674:	repz das 
  40e676:	in     eax,0x28
  40e678:	xchg   DWORD PTR [ecx],edi
  40e67a:	or     esi,edi
  40e67c:	sub    eax,0xad85ca85
  40e681:	jl     0x40e677
  40e683:	mov    bh,BYTE PTR [esi]
  40e685:	fwait
  40e686:	jg     0x40e60a
  40e688:	or     DWORD PTR [ebx],ebx
  40e68a:	push   esp
  40e68b:	jecxz  0x40e6bf
  40e68d:	xchg   DWORD PTR [ecx-0x31],edi
  40e690:	loopne 0x40e6aa
  40e692:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e693:	cmp    al,BYTE PTR [ebx]
  40e695:	sub    ecx,DWORD PTR [edx]
  40e697:	sbb    DWORD PTR [esi+ecx*1-0x488c74b5],ebx
  40e69e:	or     eax,eax
  40e6a0:	shr    bl,1
  40e6a2:	xlat   BYTE PTR ds:[ebx]
  40e6a3:	xor    cl,BYTE PTR [eax-0x63]
  40e6a6:	mov    bh,0x3
  40e6a8:	add    cl,BYTE PTR [esi-0x1d07ab2e]
  40e6ae:	in     eax,0x5f
  40e6b0:	add    DWORD PTR [edx+0xe],eax
  40e6b3:	mov    ebx,0x9cc4181b
  40e6b8:	dec    edi
  40e6b9:	arpl   WORD PTR ds:0x4b88ba66,bp
  40e6bf:	and    BYTE PTR [edi],0xfe
  40e6c2:	xchg   ecx,eax
  40e6c3:	inc    eax
  40e6c4:	jo     0x40e733
  40e6c6:	jg     0x40e6ec
  40e6c8:	sbb    BYTE PTR [ebp-0x5],0xe7
  40e6cc:	mov    ebx,edi
  40e6ce:	call   DWORD PTR [ecx]
  40e6d0:	push   edx
  40e6d1:	in     al,dx
  40e6d2:	(bad)  
  40e6d4:	xchg   esi,eax
  40e6d5:	and    eax,eax
  40e6d7:	jg     0x40e744
  40e6d9:	push   es
  40e6da:	cmp    al,dh
  40e6dc:	inc    esi
  40e6dd:	jl     0x40e6ab
  40e6df:	push   esp
  40e6e0:	call   0x384c:0xbea2c86f
  40e6e7:	addr16 or eax,0xdafac6b9
  40e6ed:	std    
  40e6ee:	std    
  40e6ef:	test   BYTE PTR [ebp-0x31],dh
  40e6f2:	(bad)  
  40e6f4:	jle    0x40e766
  40e6f6:	mov    ?,WORD PTR [edx-0x26321cb7]
  40e6fc:	scas   eax,DWORD PTR es:[edi]
  40e6fd:	and    bh,BYTE PTR [ecx+0x5ccac217]
  40e703:	ja     0x40e69d
  40e705:	int    0xd0
  40e707:	xor    bl,BYTE PTR [eax]
  40e709:	adc    DWORD PTR [ebp-0x6a],edi
  40e70c:	bound  ebx,QWORD PTR ds:0xff1103e5
  40e712:	inc    ecx
  40e713:	mov    ch,0x9e
  40e715:	test   DWORD PTR [esp+ebp*8-0x5e2f6c9f],esp
  40e71c:	pushf  
  40e71d:	push   ss
  40e71e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e71f:	mov    edi,0xf9a02b77
  40e724:	sub    DWORD PTR [eax],esi
  40e726:	jg     0x40e6bd
  40e728:	dec    eax
  40e729:	mov    dh,0x7f
  40e72b:	jb     0x40e6f7
  40e72d:	mov    edi,0x4b007f88
  40e732:	outs   dx,BYTE PTR ds:[esi]
  40e733:	arpl   dx,cx
  40e735:	or     DWORD PTR ds:0xa7a37c9f,esi
  40e73b:	adc    eax,0x68a985e7
  40e740:	jmp    0x5be7:0x670d5951
  40e747:	pop    edx
  40e748:	pop    ecx
  40e749:	outs   dx,BYTE PTR ds:[esi]
  40e74a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e74b:	inc    edi
  40e74c:	jge    0x40e7a1
  40e74e:	ins    DWORD PTR es:[edi],dx
  40e74f:	sub    DWORD PTR [ebx+0xb],ecx
  40e752:	xor    DWORD PTR [ebp+0x44836f63],ecx
  40e758:	sub    edx,edx
  40e75a:	adc    eax,0x8f360152
  40e75f:	sbb    DWORD PTR [esi],esp
  40e761:	mov    edi,0xbcc9eea9
  40e766:	mov    eax,esi
  40e768:	aaa    
  40e769:	xor    al,0xb1
  40e76b:	mov    edi,0x2ee62542
  40e770:	rol    BYTE PTR [ebx+0x49],0xdb
  40e774:	call   FWORD PTR [ebx+0x76]
  40e777:	out    0xfd,al
  40e779:	out    0x7c,eax
  40e77b:	adc    ecx,DWORD PTR [edx]
  40e77d:	into   
  40e77e:	sub    bh,BYTE PTR [ebp+0x37]
  40e781:	add    eax,0x9e7b71ba
  40e786:	and    eax,0x4655062b
  40e78b:	sub    BYTE PTR [ebx],ah
  40e78d:	and    dh,ah
  40e78f:	lahf   
  40e790:	in     eax,dx
  40e791:	push   edx
  40e792:	jne    0x40e7c5
  40e794:	sub    DWORD PTR [eax],0xffffffa6
  40e797:	(bad)  
  40e798:	mov    al,0xed
  40e79a:	mov    edx,0x34fe81b2
  40e79f:	xchg   esi,eax
  40e7a0:	aam    0xda
  40e7a2:	and    dl,BYTE PTR [ecx]
  40e7a4:	xlat   BYTE PTR ss:[ebx]
  40e7a6:	dec    esp
  40e7a7:	adc    ebx,ebp
  40e7a9:	rcl    DWORD PTR ds:0xda95a07,cl
  40e7af:	cmp    ah,BYTE PTR [edx-0x55]
  40e7b2:	js     0x40e824
  40e7b4:	lahf   
  40e7b5:	mov    WORD PTR [edx],ds
  40e7b7:	in     eax,dx
  40e7b8:	aad    0xd9
  40e7ba:	sub    ah,BYTE PTR [edx+ecx*1]
  40e7bd:	js     0x40e788
  40e7bf:	dec    ebp
  40e7c0:	xor    cl,BYTE PTR [ebx+0x7aaf61bf]
  40e7c6:	mov    edx,0x7c89b99c
  40e7cb:	shr    BYTE PTR [ebp-0x5],cl
  40e7ce:	dec    edx
  40e7cf:	jmp    0x9159:0x35da5e6e
  40e7d6:	mov    bh,0x3a
  40e7d8:	std    
  40e7d9:	dec    ebx
  40e7da:	push   ecx
  40e7db:	dec    ebx
  40e7dc:	cld    
  40e7dd:	cs data16 mov di,0xb1e8
  40e7e3:	xchg   edx,eax
  40e7e4:	cmp    eax,0x98a503a5
  40e7e9:	pop    ebp
  40e7ea:	test   BYTE PTR [ecx+esi*2-0xc],ch
  40e7ee:	push   es
  40e7ef:	pop    edx
  40e7f0:	mov    dh,0x3a
  40e7f2:	je     0x40e7c0
  40e7f4:	pop    es
  40e7f5:	sar    DWORD PTR [ecx+edi*2+0x36c95cfc],0x21
  40e7fd:	and    edx,ebx
  40e7ff:	pop    eax
  40e800:	xchg   ebp,eax
  40e801:	lea    edi,gs:[ebx+0x7557b80d]
  40e808:	dec    ebx
  40e809:	mov    DWORD PTR ds:0x8edfbe3f,ebx
  40e80f:	fld    QWORD PTR [eax+eax*1-0x69]
  40e813:	mov    ds:0xd45b8053,eax
  40e818:	dec    ebp
  40e819:	std    
  40e81a:	test   DWORD PTR [edi-0x2caf4a2f],0xca014c89
  40e824:	push   edi
  40e825:	popf   
  40e826:	pop    eax
  40e827:	and    al,0x18
  40e829:	repnz out 0x80,al
  40e82c:	inc    ebx
  40e82d:	jne    0x40e8a0
  40e82f:	mov    BYTE PTR [ecx-0x82484a2],ch
  40e835:	sbb    al,0x94
  40e837:	xchg   edx,eax
  40e838:	sub    al,0xc9
  40e83a:	(bad)  
  40e83b:	std    
  40e83c:	dec    esi
  40e83d:	into   
  40e83e:	out    0xad,al
  40e840:	(bad)  
  40e841:	nop
  40e842:	pop    eax
  40e843:	dec    edx
  40e844:	aaa    
  40e845:	adc    edx,esp
  40e847:	and    edi,0x30
  40e84a:	sbb    BYTE PTR [ecx+0x5a],0x24
  40e84e:	jo     0x40e842
  40e850:	add    eax,0xd14ad6d5
  40e855:	sar    DWORD PTR [ecx+ebp*4+0x14df7597],1
  40e85c:	cmp    eax,0xc9b7dbec
  40e861:	mov    DWORD PTR [ebx+0x610e0bb6],ebp
  40e867:	jmp    0x879a:0xe8eb4b4e
  40e86e:	mov    esi,0xc5ac447f
  40e873:	xchg   ecx,eax
  40e874:	rcl    DWORD PTR ds:0x71e2bddb,0xd7
  40e87b:	sbb    dl,al
  40e87d:	mov    cl,0xd9
  40e87f:	or     DWORD PTR [ecx+esi*2+0x6980887b],esi
  40e886:	xchg   esp,eax
  40e887:	pop    ss
  40e888:	jo     0x40e8d4
  40e88a:	and    BYTE PTR [edi+ecx*4],al
  40e88d:	cmp    dh,BYTE PTR [ebx+0x26]
  40e890:	in     al,dx
  40e891:	mov    dl,0x15
  40e893:	xchg   edi,eax
  40e894:	fsub   DWORD PTR [edx+0x20c7db70]
  40e89a:	jp     0x40e87d
  40e89c:	dec    esi
  40e89d:	ret    
  40e89e:	test   eax,0x452ac496
  40e8a3:	push   ecx
  40e8a4:	test   eax,0xdad74320
  40e8a9:	sbb    esi,0xffffff82
  40e8ac:	ror    DWORD PTR [edx-0x75bbbb80],1
  40e8b2:	cs leave 
  40e8b4:	add    BYTE PTR [eax-0x26199f4c],ah
  40e8ba:	push   esp
  40e8bb:	shr    DWORD PTR [ebx],0xb6
  40e8be:	inc    esi
  40e8bf:	add    ecx,edx
  40e8c1:	in     eax,0x7d
  40e8c3:	(bad)  
  40e8c4:	push   esp
  40e8c5:	je     0x40e865
  40e8c7:	jo     0x40e8e0
  40e8c9:	cmc    
  40e8ca:	and    esi,DWORD PTR [ebp-0x3e890b53]
  40e8d0:	hlt    
  40e8d1:	sub    DWORD PTR [ecx+edi*1],edx
  40e8d4:	outs   dx,BYTE PTR ds:[esi]
  40e8d5:	jge    0x40e8ad
  40e8d7:	pop    ecx
  40e8d8:	aam    0xd9
  40e8da:	jbe    0x40e8db
  40e8dc:	mov    ch,0x8a
  40e8de:	pop    edi
  40e8df:	cmp    BYTE PTR [edx+ebp*2],0x2a
  40e8e3:	cmp    eax,0x20ec6cfa
  40e8e8:	call   0xb8956a1c
  40e8ed:	mov    eax,?
  40e8ef:	mov    edi,0x4d165855
  40e8f4:	mov    edi,0xb10d2a3e
  40e8f9:	cmp    al,0xdd
  40e8fb:	jmp    0x9978:0xee1c1776
  40e902:	in     al,0x33
  40e904:	xchg   edx,eax
  40e905:	idiv   BYTE PTR [edx-0x66]
  40e908:	ins    DWORD PTR es:[edi],dx
  40e909:	pop    eax
  40e90a:	push   ebp
  40e90b:	dec    esi
  40e90c:	and    DWORD PTR [ecx+0x7518d2b4],esi
  40e912:	popf   
  40e913:	pop    ss
  40e914:	outs   dx,DWORD PTR ds:[esi]
  40e915:	into   
  40e916:	jno    0x40e95d
  40e918:	xchg   edi,eax
  40e919:	sub    DWORD PTR [ecx+0x1e489adb],esi
  40e91f:	shr    BYTE PTR [edi+0x504ef485],1
  40e925:	or     eax,0x5cb34b04
  40e92a:	xlat   BYTE PTR ds:[ebx]
  40e92b:	pusha  
  40e92c:	sbb    ebx,DWORD PTR [ebx]
  40e92e:	xor    al,0x8b
  40e930:	shl    cl,0x73
  40e933:	jne    0x40e8c8
  40e935:	ss jp  0x40e94d
  40e938:	rcr    BYTE PTR [edx+0x28],cl
  40e93b:	in     al,dx
  40e93c:	mov    edx,0x3b35ccac
  40e941:	mov    BYTE PTR [eax-0x4080c5ed],ch
  40e947:	push   edi
  40e948:	xchg   edx,eax
  40e949:	inc    ecx
  40e94a:	push   ecx
  40e94b:	sbb    al,BYTE PTR [edi-0x52ec120b]
  40e951:	dec    edi
  40e952:	push   0x927deb0e
  40e957:	pop    ecx
  40e958:	add    ecx,DWORD PTR [edx+0x5c5d5810]
  40e95e:	fld    DWORD PTR [ebp-0x36]
  40e961:	mov    esp,0x28be504a
  40e966:	sbb    eax,0xd0f7ea8a
  40e96b:	pop    eax
  40e96c:	mov    bl,0xf7
  40e96e:	xchg   ebx,eax
  40e96f:	loope  0x40e97b
  40e971:	bound  ebp,QWORD PTR ds:0x66480f7a
  40e977:	xchg   esi,eax
  40e978:	fist   DWORD PTR [ebx+edi*4-0x25]
  40e97c:	jmp    0x65d2:0x5669317b
  40e983:	adc    DWORD PTR [ecx-0x1],0x21
  40e987:	stos   BYTE PTR es:[edi],al
  40e988:	xchg   DWORD PTR [esi-0x5b],ecx
  40e98b:	adc    eax,0x688f7499
  40e990:	cmp    DWORD PTR [eax+0x5250479],edx
  40e996:	retf   0x360e
  40e999:	and    eax,DWORD PTR [ecx-0x73]
  40e99c:	(bad)  
  40e99e:	aaa    
  40e99f:	xor    dh,dh
  40e9a1:	xchg   bl,ah
  40e9a3:	outs   dx,BYTE PTR ds:[esi]
  40e9a4:	add    DWORD PTR [esi],0xffffffbb
  40e9a7:	pop    es
  40e9a8:	cmp    BYTE PTR [ecx-0x52fc1c25],dh
  40e9ae:	push   ebx
  40e9af:	cmc    
  40e9b0:	mov    ebx,0xfef8f43
  40e9b5:	cmp    cl,BYTE PTR [ecx-0x39553792]
  40e9bb:	fbstp  TBYTE PTR [ebx]
  40e9bd:	ror    DWORD PTR [esi],1
  40e9bf:	mov    esp,0x4ed41b1
  40e9c4:	inc    ebx
  40e9c5:	jo     0x40e9b8
  40e9c7:	push   es
  40e9c8:	xchg   edx,eax
  40e9c9:	xor    ebp,DWORD PTR [edx+0x53]
  40e9cc:	sbb    DWORD PTR [edx],edi
  40e9ce:	mov    esp,0xf6aa56d1
  40e9d3:	jbe    0x40ea1c
  40e9d5:	ds ss sbb edi,ebp
  40e9d9:	lods   eax,DWORD PTR ds:[esi]
  40e9da:	popa   
  40e9db:	imul   esi,ebx,0xe9144be1
  40e9e1:	cmp    al,al
  40e9e3:	push   ds
  40e9e4:	(bad)  
  40e9e5:	fwait
  40e9e6:	outs   dx,BYTE PTR ds:[esi]
  40e9e7:	rol    edi,1
  40e9e9:	ins    BYTE PTR es:[edi],dx
  40e9ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9eb:	scas   al,BYTE PTR es:[edi]
  40e9ec:	pop    ecx
  40e9ed:	fs sub eax,0xbae924e
  40e9f3:	fstp   TBYTE PTR ds:0xc39293b
  40e9f9:	test   al,0x5
  40e9fb:	imul   ebx,DWORD PTR [edx-0x2a],0x10
  40e9ff:	rcr    BYTE PTR [ecx+edi*8-0x6b],0xc0
  40ea04:	dec    ecx
  40ea05:	inc    esi
  40ea06:	pusha  
  40ea07:	aad    0xf0
  40ea09:	xor    eax,0x59ea7108
  40ea0e:	push   esp
  40ea0f:	xchg   DWORD PTR [eax+0x6ba66776],ebp
  40ea15:	shl    DWORD PTR [esi-0x909cb5b],1
  40ea1b:	pop    es
  40ea1c:	(bad)  
  40ea1d:	shl    BYTE PTR ds:0xa772e8cd,0xa6
  40ea24:	push   esi
  40ea25:	sub    edx,DWORD PTR [edx]
  40ea27:	mov    esp,0x4371f1ed
  40ea2c:	out    0x25,eax
  40ea2e:	push   esi
  40ea2f:	aaa    
  40ea30:	ins    DWORD PTR es:[edi],dx
  40ea31:	jnp    0x40ea11
  40ea33:	lods   eax,DWORD PTR ds:[esi]
  40ea34:	test   DWORD PTR [ecx+0x3a8e9def],ecx
  40ea3a:	pusha  
  40ea3b:	(bad)  
  40ea3c:	into   
  40ea3d:	add    ah,BYTE PTR [ebx]
  40ea3f:	and    al,0x0
  40ea41:	push   edx
  40ea42:	bound  eax,QWORD PTR [ebx+0x22]
  40ea45:	mov    edi,0xbfaa3012
  40ea4a:	ins    BYTE PTR es:[edi],dx
  40ea4b:	pop    ecx
  40ea4c:	in     al,0x8e
  40ea4e:	or     BYTE PTR [esi],cl
  40ea50:	fld    DWORD PTR ds:0x44cdd1b2
  40ea56:	inc    esp
  40ea57:	xchg   esp,eax
  40ea58:	jno    0x40ea46
  40ea5a:	fdivr  QWORD PTR [ebx-0x7]
  40ea5d:	js     0x40ea05
  40ea5f:	jle    0x40ea7e
  40ea61:	in     al,dx
  40ea62:	popf   
  40ea63:	lea    ecx,[ebx]
  40ea65:	hlt    
  40ea66:	mov    al,0x97
  40ea68:	cld    
  40ea69:	dec    ebx
  40ea6a:	nop
  40ea6b:	xor    ah,ah
  40ea6d:	cli    
  40ea6e:	sbb    al,BYTE PTR [esi+0x7d]
  40ea71:	mov    ecx,0xf72a312b
  40ea76:	cdq    
  40ea77:	adc    eax,0x582dffac
  40ea7c:	sbb    bh,BYTE PTR [edx]
  40ea7e:	mov    ebp,0x758d99f7
  40ea83:	sbb    esi,DWORD PTR [edx]
  40ea85:	and    al,0x79
  40ea87:	sbb    al,0xc
  40ea89:	mov    ecx,0x248e62e8
  40ea8e:	and    BYTE PTR [eax],cl
  40ea90:	icebp  
  40ea91:	push   0x3d0e009e
  40ea96:	imul   DWORD PTR [eax+0x59]
  40ea99:	rol    esi,cl
  40ea9b:	loope  0x40eaf9
  40ea9d:	sub    esp,DWORD PTR [edi+0x41a03f70]
  40eaa3:	shr    BYTE PTR [edx],cl
  40eaa5:	push   ss
  40eaa6:	xor    edx,DWORD PTR [ebx-0x61008b09]
  40eaac:	push   esi
  40eaad:	push   edi
  40eaae:	ins    DWORD PTR es:[edi],dx
  40eaaf:	out    dx,al
  40eab0:	push   cs
  40eab1:	gs stos BYTE PTR es:[edi],al
  40eab3:	cmc    
  40eab4:	inc    edx
  40eab5:	loopne 0x40ea95
  40eab7:	mov    ch,0x71
  40eab9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eaba:	mov    ebp,0xd678cdd3
  40eabf:	dec    ebx
  40eac0:	or     eax,ebx
  40eac2:	or     al,0xbb
  40eac4:	jmp    0x40eb1e
  40eac6:	es pop esi
  40eac8:	jns    0x40ea88
  40eaca:	int3   
  40eacb:	dec    ebx
  40eacc:	xor    eax,0x613934d1
  40ead1:	inc    edi
  40ead2:	pop    ecx
  40ead3:	fs mov ch,0x57
  40ead6:	and    DWORD PTR [ebx+0x4faa59d5],eax
  40eadc:	std    
  40eadd:	cmp    BYTE PTR [eax-0x3a],ah
  40eae0:	ror    DWORD PTR [edx+0x1f2df5e1],1
  40eae6:	mov    al,0x8
  40eae8:	push   ebx
  40eae9:	addr16 pop ss
  40eaeb:	mov    ebx,0xfeda7b8a
  40eaf0:	in     eax,0xa2
  40eaf2:	cmp    eax,0xa81fe1d1
  40eaf7:	fstp   TBYTE PTR [ebp+ebx*4+0x5c]
  40eafb:	dec    BYTE PTR [ebp+0x78]
  40eafe:	in     al,0xa1
  40eb00:	jle    0x40eb66
  40eb02:	dec    esp
  40eb03:	sbb    DWORD PTR [esi-0x1e464d9a],esp
  40eb09:	inc    ebp
  40eb0a:	mov    ds:0x8c2d6c44,eax
  40eb0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb11:	fs das 
  40eb13:	jbe    0x40eb88
  40eb15:	call   0x879d:0x7a9cd510
  40eb1c:	dec    ebp
  40eb1d:	shr    BYTE PTR [ebx-0x3c],cl
  40eb20:	cs xor al,al
  40eb23:	xor    eax,DWORD PTR [esp+ecx*8-0x146b661b]
  40eb2a:	enter  0x3038,0xa1
  40eb2e:	inc    esp
  40eb2f:	bound  ebx,QWORD PTR ds:0xcf0be8fe
  40eb35:	das    
  40eb36:	push   0x675a0913
  40eb3b:	sbb    DWORD PTR [ebp+0x5021aee],0x5f
  40eb42:	(bad)  
  40eb43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb44:	dec    eax
  40eb45:	dec    edi
  40eb46:	cmp    DWORD PTR [ebx],edi
  40eb48:	(bad)  
  40eb4a:	inc    edx
  40eb4b:	and    al,0xac
  40eb4d:	sub    DWORD PTR [edi-0x63],esp
  40eb50:	ss (bad) 
  40eb52:	cmp    al,0x51
  40eb55:	add    ecx,DWORD PTR [ebx+ebx*1+0x63]
  40eb59:	in     eax,dx
  40eb5a:	enter  0x49f4,0x4a
  40eb5e:	xchg   BYTE PTR [eax+ebp*8],cl
  40eb61:	and    al,0xec
  40eb63:	pop    edi
  40eb64:	add    esi,DWORD PTR [ebp-0x3e]
  40eb67:	xchg   ebp,eax
  40eb68:	(bad)  
  40eb69:	jne    0x40eb1f
  40eb6b:	adc    bl,BYTE PTR [ecx-0x41e4c555]
  40eb71:	inc    ecx
  40eb72:	sbb    DWORD PTR [esi-0x73],esi
  40eb75:	sub    al,al
  40eb77:	retf   
  40eb78:	mov    cl,0x72
  40eb7a:	push   ebp
  40eb7b:	retf   
  40eb7c:	nop
  40eb7d:	jne    0x40ebf7
  40eb7f:	sar    eax,cl
  40eb81:	xchg   esi,eax
  40eb82:	add    BYTE PTR [edx+0x65d782c0],ch
  40eb88:	mov    edi,0x1e7ee52e
  40eb8d:	ret    
  40eb8e:	xchg   ecx,eax
  40eb8f:	imul   eax,DWORD PTR [ecx+0x34],0x24
  40eb93:	hlt    
  40eb94:	xchg   esp,eax
  40eb95:	icebp  
  40eb96:	xor    al,0x1
  40eb98:	dec    ebx
  40eb99:	sbb    eax,0x44f1ba24
  40eb9e:	les    esp,FWORD PTR [ebx]
  40eba0:	pop    ecx
  40eba1:	mov    fs,eax
  40eba3:	cli    
  40eba4:	mov    esi,0xa1d186c6
  40eba9:	mov    edx,0xaa54be59
  40ebae:	aaa    
  40ebaf:	popf   
  40ebb0:	sbb    BYTE PTR [eax],bl
  40ebb2:	and    eax,0xdf5078b
  40ebb7:	stos   DWORD PTR es:[edi],eax
  40ebb8:	mov    dl,0x92
  40ebba:	call   0xdd21:0x7efc1b2e
  40ebc1:	mov    dl,dl
  40ebc3:	loope  0x40eb94
  40ebc5:	out    0x20,al
  40ebc7:	add    BYTE PTR [edi],0x4c
  40ebca:	jo     0x40eb8d
  40ebcc:	addr16 cli 
  40ebce:	cmp    DWORD PTR [esp+ebp*2-0x16],0xffffffab
  40ebd3:	jmp    0x40eb82
  40ebd5:	jae    0x40eb79
  40ebd7:	nop
  40ebd8:	jmp    DWORD PTR [edx+0x58c962b]
  40ebde:	lods   eax,DWORD PTR ds:[esi]
  40ebdf:	sub    al,0x4
  40ebe1:	cmp    al,0x32
  40ebe3:	xor    DWORD PTR [edi+0x6b],ebx
  40ebe6:	jmp    0xe571f65c
  40ebeb:	dec    BYTE PTR [edx+0x47dba6b]
  40ebf1:	lock add al,0x58
  40ebf4:	mov    cl,0x26
  40ebf6:	test   al,0x63
  40ebf8:	xor    BYTE PTR [ecx+esi*4],dh
  40ebfb:	(bad)  
  40ebfc:	mov    ecx,0x20788e8f
  40ec01:	push   eax
  40ec02:	call   0x6419260c
  40ec07:	loop   0x40ec03
  40ec09:	mov    ecx,0xa060fc40
  40ec0e:	in     al,dx
  40ec0f:	lods   al,BYTE PTR ds:[esi]
  40ec10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec11:	call   0xd3d:0xa68d7ada
  40ec18:	mov    ebp,0x34b58b2
  40ec1d:	add    ecx,DWORD PTR [ebp+0x409592c6]
  40ec23:	xlat   BYTE PTR ds:[ebx]
  40ec24:	jbe    0x40ec2d
  40ec26:	add    ecx,ecx
  40ec28:	dec    edi
  40ec29:	xor    ebp,ebx
  40ec2b:	inc    esp
  40ec2c:	cmc    
  40ec2d:	mov    bh,0xb7
  40ec2f:	fadd   QWORD PTR [ecx-0x451158e7]
  40ec35:	pop    ebp
  40ec36:	xchg   esi,eax
  40ec37:	scas   al,BYTE PTR es:[edi]
  40ec38:	das    
  40ec39:	mov    edi,0x5a4fd70a
  40ec3e:	ds in  eax,dx
  40ec40:	jmp    0x24:0xd91cb2b1
  40ec47:	aad    0xfd
  40ec49:	jno    0x40ec48
  40ec4b:	shr    BYTE PTR [esi],1
  40ec4d:	pop    DWORD PTR [ebx+0x3285caf3]
  40ec53:	mov    ch,0x6b
  40ec55:	lea    edi,[ecx+ebp*2-0x45]
  40ec59:	repnz cmp al,0x1
  40ec5c:	je     0x40ecb0
  40ec5e:	call   0x4b9:0x2e59191c
  40ec65:	mov    DWORD PTR ds:0xec08a7a5,edx
  40ec6b:	inc    eax
  40ec6c:	pop    ss
  40ec6d:	addr16 pop ecx
  40ec6f:	jmp    0x40ec6f
  40ec71:	fadd   st,st(7)
  40ec73:	test   eax,0x80ff6439
  40ec78:	mul    BYTE PTR [esi+0x4]
  40ec7b:	ficomp DWORD PTR [esi-0x14e81a8a]
  40ec81:	cdq    
  40ec82:	sub    ecx,DWORD PTR [ecx-0x2706c828]
  40ec88:	mov    bl,0x68
  40ec8a:	ins    DWORD PTR es:[edi],dx
  40ec8b:	nop
  40ec8c:	jmp    0x40ec76
  40ec8e:	pop    ebx
  40ec8f:	pop    ecx
  40ec91:	enter  0xc2ed,0x6c
  40ec95:	sub    esp,ebp
  40ec97:	leave  
  40ec98:	imul   BYTE PTR [ebx]
  40ec9a:	imul   eax,DWORD PTR [esi-0x56c29bcf],0xffffffd6
  40eca1:	mov    edi,0x6e53ad5f
  40eca6:	into   
  40eca7:	cld    
  40eca8:	scas   eax,DWORD PTR es:[edi]
  40eca9:	pop    es
  40ecaa:	jmp    0x40ecce
  40ecac:	sti    
  40ecad:	test   eax,0x876cb70a
  40ecb2:	dec    eax
  40ecb3:	jmp    DWORD PTR [edi]
  40ecb5:	inc    esi
  40ecb6:	mov    ds:0xea615dbe,al
  40ecbb:	ret    
  40ecbc:	fnsetpm(287 only) 
  40ecbe:	xor    ah,dl
  40ecc0:	outs   dx,DWORD PTR ds:[esi]
  40ecc1:	sub    eax,0x662010eb
  40ecc6:	outs   dx,DWORD PTR ds:[esi]
  40ecc7:	sahf   
  40ecc8:	(bad)  
  40ecc9:	xchg   esp,eax
  40ecca:	mov    edx,ebp
  40eccc:	add    eax,0x8bc28842
  40ecd1:	adc    BYTE PTR [esp+eiz*8+0x4db1d5c4],ah
  40ecd8:	loopne 0x40eced
  40ecda:	pop    ds
  40ecdb:	jl     0x40ec80
  40ecdd:	or     al,0xc6
  40ecdf:	mov    bh,0x13
  40ece1:	std    
  40ece2:	mov    bl,BYTE PTR [ebx]
  40ece4:	popa   
  40ece5:	cmp    eax,0x4d638af8
  40ecea:	adc    bh,ch
  40ecec:	loop   0x40ec7f
  40ecee:	push   0x561d22a6
  40ecf3:	xchg   ebx,eax
  40ecf4:	push   edx
  40ecf5:	jo     0x40ec9f
  40ecf7:	std    
  40ecf8:	xor    DWORD PTR [edx-0x5e],eax
  40ecfb:	mov    esp,0xecd9fe65
  40ed00:	dec    esi
  40ed01:	jnp    0x40ed32
  40ed03:	scas   al,BYTE PTR es:[edi]
  40ed04:	ja     0x40eccd
  40ed06:	(bad)  
  40ed07:	pop    ss
  40ed08:	mov    ch,0x52
  40ed0a:	pop    es
  40ed0b:	mov    ecx,DWORD PTR [ebx+0x1b83ed50]
  40ed11:	out    0x26,ax
  40ed14:	out    dx,eax
  40ed15:	jno    0x40ed1a
  40ed17:	cmp    DWORD PTR [edi+0x51956311],ebx
  40ed1d:	inc    edi
  40ed1e:	rcl    BYTE PTR [ebx-0xa23531f],cl
  40ed24:	test   DWORD PTR [ecx],eax
  40ed26:	jmp    0x9445:0x3da2a5c4
  40ed2d:	enter  0x5660,0x5a
  40ed31:	jmp    0x40ed06
  40ed33:	arpl   dx,cx
  40ed35:	scas   al,BYTE PTR es:[edi]
  40ed36:	or     BYTE PTR [edi+ecx*8-0xd9933c2],ah
  40ed3d:	jle    0x40ece5
  40ed3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed41:	sti    
  40ed42:	pop    ebx
  40ed43:	arpl   si,sp
  40ed45:	mov    BYTE PTR [eax+0x5914b667],dl
  40ed4b:	dec    esi
  40ed4c:	sbb    cl,BYTE PTR [esi-0x1db3dae5]
  40ed52:	das    
  40ed53:	inc    DWORD PTR [ebx+0x2]
  40ed56:	iret   
  40ed57:	enter  0xe25e,0x34
  40ed5b:	sub    edi,DWORD PTR [edi]
  40ed5d:	dec    edx
  40ed5e:	push   ecx
  40ed5f:	les    ebp,FWORD PTR [edi+ecx*4-0x4ace10ce]
  40ed66:	out    0x2a,eax
  40ed68:	adc    BYTE PTR [edi],ch
  40ed6a:	aas    
  40ed6b:	mov    esi,0x7f46e998
  40ed70:	dec    eax
  40ed71:	xor    edx,DWORD PTR [ecx+0xd]
  40ed74:	in     al,0x32
  40ed76:	cdq    
  40ed77:	xlat   BYTE PTR ds:[bx]
  40ed79:	inc    eax
  40ed7a:	mov    edi,0x75a77d98
  40ed7f:	cli    
  40ed80:	stos   BYTE PTR es:[edi],al
  40ed81:	jle    0x40edd6
  40ed83:	pop    es
  40ed84:	jb     0x40ed7a
  40ed86:	test   BYTE PTR [ecx+0x633b1f85],bl
  40ed8c:	sti    
  40ed8d:	inc    edi
  40ed8e:	or     dh,bh
  40ed90:	fdiv   DWORD PTR [edi]
  40ed92:	mov    bl,0x8d
  40ed94:	je     0x40ed33
  40ed96:	sub    dh,BYTE PTR [ebx+ebx*2+0x498ebd18]
  40ed9d:	mov    cl,0x53
  40ed9f:	pop    esi
  40eda0:	add    ecx,esi
  40eda2:	pusha  
  40eda3:	xchg   edx,eax
  40eda4:	idiv   bh
  40eda6:	fwait
  40eda7:	mov    bh,0x93
  40eda9:	jecxz  0x40ed7c
  40edab:	into   
  40edac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edad:	inc    esp
  40edae:	push   ecx
  40edaf:	test   DWORD PTR [ecx],edi
  40edb1:	shl    BYTE PTR [esi-0x47],cl
  40edb4:	sbb    edi,DWORD PTR [edx-0xee8ab99]
  40edba:	and    edi,0x1e37eca4
  40edc0:	fmul   DWORD PTR [ebp+0x304d1a3]
  40edc6:	out    dx,al
  40edc7:	jecxz  0x40edf6
  40edc9:	dec    esp
  40edca:	push   ecx
  40edcb:	xor    eax,0xbfd8e0d1
  40edd0:	ja     0x40ed5e
  40edd2:	mov    bl,0x3b
  40edd4:	call   0xcfeaab71
  40edd9:	mov    esi,edx
  40eddb:	int    0x2a
  40eddd:	mov    ebx,0x33217a1a
  40ede2:	enter  0xdb43,0x99
  40ede6:	xchg   esp,ebx
  40ede8:	je     0x40edd9
  40edea:	iret   
  40edeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40edec:	lds    eax,FWORD PTR [ebx+0x54dbb861]
  40edf2:	jne    0x40edbe
  40edf4:	sahf   
  40edf5:	add    eax,0x22a6c6e1
  40edfa:	(bad)  
  40edfb:	jg     0x40ee15
  40edfd:	mov    al,ds:0x282da816
  40ee02:	popf   
  40ee03:	mov    cl,0x7b
  40ee05:	enter  0xce01,0x58
  40ee09:	push   esi
  40ee0a:	gs cdq 
  40ee0c:	jnp    0x40ee23
  40ee0e:	sbb    esp,DWORD PTR [eax+0x5f]
  40ee11:	dec    eax
  40ee12:	(bad)  
  40ee13:	fnstsw WORD PTR [ebp-0x1fb2c70f]
  40ee19:	xchg   ecx,eax
  40ee1a:	lods   al,BYTE PTR ds:[esi]
  40ee1b:	push   edi
  40ee1c:	pop    ds
  40ee1d:	outs   dx,DWORD PTR ds:[esi]
  40ee1e:	test   eax,0x2f7912c3
  40ee24:	ins    BYTE PTR es:[edi],dx
  40ee25:	inc    eax
  40ee26:	aaa    
  40ee27:	mov    ecx,0x427751b5
  40ee2c:	dec    eax
  40ee2d:	ja     0x40ee04
  40ee2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee32:	icebp  
  40ee33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee34:	jmp    0x5c36daad
  40ee39:	in     al,0xa0
  40ee3b:	cmp    al,0x2e
  40ee3d:	(bad)  
  40ee3e:	jg     0x40ede7
  40ee40:	dec    ebx
  40ee41:	dec    ecx
  40ee42:	mov    ds:0x2176ba95,al
  40ee47:	iret   
  40ee48:	call   0x46c6:0x804648e4
  40ee4f:	mov    ebx,0x86446620
  40ee54:	and    al,0x79
  40ee56:	div    DWORD PTR [edx]
  40ee58:	mov    dl,0x2b
  40ee5a:	mov    ch,0x93
  40ee5c:	popa   
  40ee5d:	stos   BYTE PTR es:[edi],al
  40ee5e:	jbe    0x40eeac
  40ee60:	data16 mov dh,0xf3
  40ee63:	(bad)  
  40ee64:	psraw  mm7,QWORD PTR [edi+0x29]
  40ee68:	lahf   
  40ee69:	sbb    al,0x55
  40ee6b:	ret    0x96a
  40ee6e:	mov    DWORD PTR [ecx+ebx*4-0x45813487],esp
  40ee75:	xor    esi,ebp
  40ee77:	mov    ebp,0xd8f21c33
  40ee7c:	mul    ecx
  40ee7e:	xchg   edi,eax
  40ee7f:	pushf  
  40ee80:	sbb    ch,dl
  40ee82:	dec    ecx
  40ee83:	jae    0x40ee53
  40ee85:	in     eax,dx
  40ee86:	push   ss
  40ee87:	dec    ebx
  40ee88:	fdivp  st(5),st
  40ee8a:	adc    al,0x9b
  40ee8c:	stos   BYTE PTR es:[edi],al
  40ee8d:	sbb    bh,BYTE PTR [edx-0xf40d217]
  40ee93:	cmp    al,0xb6
  40ee95:	xor    al,0xc8
  40ee97:	xor    al,0x3a
  40ee99:	idiv   BYTE PTR es:[ebx-0x5578e090]
  40eea0:	mov    BYTE PTR [ebx+0x18],dl
  40eea3:	or     al,0xfe
  40eea5:	mov    edx,0xfd1ac3b4
  40eeaa:	add    dh,BYTE PTR [ebp+0x71]
  40eead:	push   cs
  40eeae:	or     al,0x9c
  40eeb0:	jbe    0x40eeeb
  40eeb2:	mov    al,ds:0x376a6ed
  40eeb7:	cdq    
  40eeb8:	fmul   st,st(0)
  40eeba:	pop    esi
  40eebb:	gs ds sub eax,0x35aab166
  40eec2:	int    0xbb
  40eec4:	jbe    0x40ee48
  40eec6:	retf   
  40eec7:	sbb    al,0x9c
  40eec9:	ds pop ecx
  40eecb:	cld    
  40eecc:	jae    0x40ee9b
  40eece:	cmp    eax,0x77df6a44
  40eed3:	ficom  DWORD PTR [esi]
  40eed5:	popf   
  40eed6:	push   edx
  40eed7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eed8:	sbb    BYTE PTR [ecx-0x7d],0x2d
  40eedc:	inc    ebp
  40eedd:	mov    bh,0xda
  40eedf:	and    DWORD PTR [ebp+0x653990ca],ebp
  40eee5:	and    eax,0xbff62d1f
  40eeea:	sahf   
  40eeeb:	adc    eax,0x20e028ac
  40eef0:	fst    DWORD PTR [ebp+edi*2+0x73]
  40eef4:	mov    esp,0x145f38df
  40eef9:	sub    al,0x6
  40eefb:	leave  
  40eefc:	push   0xefee8156
  40ef01:	xchg   edi,eax
  40ef02:	cli    
  40ef03:	cmp    esi,esi
  40ef05:	pusha  
  40ef06:	popa   
  40ef07:	out    dx,al
  40ef08:	and    eax,0xde036553
  40ef0d:	add    ecx,DWORD PTR [ebx+0xe6db113]
  40ef13:	xchg   edx,eax
  40ef14:	jmp    0x9e74:0xe16c295b
  40ef1b:	mov    ecx,0x8168102d
  40ef20:	fs ins BYTE PTR es:[edi],dx
  40ef22:	cmp    ecx,DWORD PTR [ecx-0x63]
  40ef25:	xor    al,0x2
  40ef27:	mov    al,0x0
  40ef29:	adc    al,0x1b
  40ef2b:	adc    BYTE PTR [eax+0x59a8d881],ch
  40ef31:	add    al,0xe1
  40ef33:	jb     0x40ef02
  40ef35:	xor    al,0xbe
  40ef37:	(bad)  
  40ef38:	enter  0x58bf,0xb7
  40ef3c:	pop    esi
  40ef3d:	cmp    BYTE PTR [edi-0x68],0x3b
  40ef41:	mov    ds:0xed642775,eax
  40ef46:	xchg   esp,eax
  40ef47:	lods   eax,DWORD PTR ds:[esi]
  40ef48:	xchg   edx,eax
  40ef49:	hlt    
  40ef4a:	sar    DWORD PTR [ecx-0x1a97e60a],1
  40ef50:	jae    0x40ef62
  40ef52:	push   ebx
  40ef53:	and    BYTE PTR [ecx],ch
  40ef55:	test   al,0x5c
  40ef57:	fwait
  40ef58:	pop    edi
  40ef59:	addr16 sbb al,0x20
  40ef5c:	pop    ecx
  40ef5d:	mov    ch,0xff
  40ef5f:	dec    ebx
  40ef60:	lahf   
  40ef61:	cmc    
  40ef62:	sahf   
  40ef63:	jmp    0xdefe8559
  40ef68:	gs aad 0x9f
  40ef6b:	pop    es
  40ef6c:	jno    0x40efab
  40ef6e:	sub    BYTE PTR [ecx+0x2a07caab],dh
  40ef74:	jbe    0x40ef76
  40ef76:	mov    eax,0xf6ae425e
  40ef7b:	hlt    
  40ef7c:	xchg   edx,eax
  40ef7d:	stos   BYTE PTR es:[edi],al
  40ef7e:	gs loopne 0x40efe1
  40ef81:	ins    BYTE PTR es:[edi],dx
  40ef82:	aad    0xc
  40ef84:	xor    al,0x6e
  40ef86:	sbb    dl,al
  40ef88:	mov    al,0xf4
  40ef8a:	jbe    0x40ef49
  40ef8c:	pop    ds
  40ef8d:	jl     0x40ef85
  40ef8f:	ds push ds
  40ef91:	or     bl,0x68
  40ef94:	dec    esi
  40ef95:	test   al,0xe2
  40ef97:	push   esi
  40ef98:	mov    ah,0x4c
  40ef9a:	adc    BYTE PTR [ebx],al
  40ef9c:	pop    esp
  40ef9d:	test   DWORD PTR [esi-0x63e0cbbb],ebp
  40efa3:	cs mov ebp,0xeb29b1d3
  40efa9:	sub    esi,DWORD PTR [ebx]
  40efab:	sar    DWORD PTR fs:[eax],0x4c
  40efaf:	pop    ds
  40efb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40efb1:	mov    dl,0x42
  40efb3:	icebp  
  40efb4:	add    eax,0xaf0ab0ed
  40efb9:	and    ebx,DWORD PTR [eax+0xc]
  40efbc:	lods   al,BYTE PTR ds:[esi]
  40efbd:	pop    ecx
  40efbe:	jg     0x40efd8
  40efc0:	das    
  40efc1:	shr    DWORD PTR [esi+0x7354d494],0x2b
  40efc8:	out    0x16,eax
  40efca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40efcb:	call   0x3e25:0x2c33848d
  40efd2:	push   ds
  40efd3:	mov    ds:0x8c0a56e3,eax
  40efd8:	cmc    
  40efd9:	mov    bh,0x62
  40efdb:	jl     0x40efeb
  40efdd:	mov    ebx,0xa20be6ee
  40efe2:	sub    al,0x19
  40efe4:	dec    ecx
  40efe5:	push   ebx
  40efe6:	and    esp,edx
  40efe8:	arpl   WORD PTR [ebp-0x3b],bx
  40efeb:	cmp    BYTE PTR [edi],cl
  40efed:	inc    esp
  40efee:	push   esp
  40efef:	push   es
  40eff0:	out    0x71,eax
  40eff2:	js     0x40f023
  40eff4:	and    DWORD PTR [eax-0x4a5152ef],ecx
  40effa:	mov    ds:0xae4763a8,eax
  40efff:	xor    al,BYTE PTR [edi-0x6088cde]
  40f005:	bound  eax,QWORD PTR [ecx]
  40f007:	push   0x11ec9e81
  40f00c:	sub    DWORD PTR [ecx+0x7c],0xffffff9e
  40f010:	inc    esp
  40f011:	pop    ecx
  40f012:	push   ebx
  40f013:	xor    al,0xd8
  40f015:	dec    DWORD PTR [ebx+0x5a]
  40f018:	push   edx
  40f019:	js     0x40f007
  40f01b:	icebp  
  40f01c:	mov    WORD PTR [edx-0x38],es
  40f01f:	dec    ecx
  40f020:	jo     0x40efec
  40f022:	fwait
  40f023:	mov    edi,0xe38af5bc
  40f028:	retf   
  40f029:	mov    ch,0x16
  40f02b:	xor    BYTE PTR [edi-0xcbf0af9],0xfe
  40f032:	rol    ecx,1
  40f034:	in     eax,dx
  40f035:	or     ah,BYTE PTR ds:0x1c183e25
  40f03b:	mov    esi,edx
  40f03d:	fisub  WORD PTR [edi+0x67]
  40f040:	jno    0x40f082
  40f042:	mov    ch,ah
  40f044:	cmp    ah,cl
  40f046:	mov    al,ds:0xa48b34ab
  40f04b:	popa   
  40f04c:	jmp    0x76e8:0xf63def47
  40f053:	es push esi
  40f055:	mov    BYTE PTR [esi+0x2c1a785d],dh
  40f05b:	outs   dx,BYTE PTR ds:[esi]
  40f05c:	cmp    eax,ebp
  40f05e:	sub    eax,DWORD PTR [eax]
  40f060:	(bad)  
  40f061:	arpl   sp,cx
  40f063:	xchg   edx,eax
  40f064:	pop    esi
  40f065:	imul   edx,DWORD PTR [edx+0x85d5dc3],0xbfab4644
  40f06f:	xchg   ebx,eax
  40f070:	shl    DWORD PTR [eax-0x7051320c],1
  40f076:	test   BYTE PTR [ebx-0x51],0xf1
  40f07a:	mov    ah,0x2
  40f07c:	mov    dh,0x2d
  40f07e:	pop    dx
  40f080:	add    bh,BYTE PTR [ecx+0x64f8de2c]
  40f086:	and    ecx,DWORD PTR [eax]
  40f088:	or     al,0x0
  40f08a:	fidivr WORD PTR [ebx+0x47c52616]
  40f090:	in     al,0x3f
  40f092:	xchg   ebx,eax
  40f093:	xor    al,0xf8
  40f095:	push   eax
  40f096:	inc    edi
  40f097:	outs   dx,BYTE PTR ds:[esi]
  40f098:	mov    ah,0xd3
  40f09a:	loop   0x40f077
  40f09c:	inc    edi
  40f09d:	out    0x79,eax
  40f09f:	sub    esi,DWORD PTR [edx-0xb463fb6]
  40f0a5:	add    ebp,edi
  40f0a7:	sub    al,0x7
  40f0a9:	rcr    ecx,cl
  40f0ab:	inc    ecx
  40f0ac:	dec    esp
  40f0ad:	ja     0x40f0e3
  40f0af:	fs inc ecx
  40f0b1:	jl     0x40f0ab
  40f0b3:	(bad)  
  40f0b4:	or     esp,DWORD PTR [ecx-0x53]
  40f0b7:	and    ebx,DWORD PTR [ecx*4+0xf3cadbb]
  40f0be:	adc    ch,bh
  40f0c0:	or     al,0x77
  40f0c2:	sahf   
  40f0c3:	lods   al,BYTE PTR ds:[esi]
  40f0c4:	push   esi
  40f0c5:	neg    BYTE PTR [ecx+0x6f1d5424]
  40f0cb:	sahf   
  40f0cc:	test   DWORD PTR [edx],0x719384f
  40f0d2:	out    0xb4,al
  40f0d4:	loope  0x40f0bb
  40f0d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0d7:	ds sbb bl,al
  40f0da:	out    dx,eax
  40f0db:	lods   al,BYTE PTR ds:[esi]
  40f0dc:	push   edx
  40f0dd:	fwait
  40f0de:	mov    dl,0x93
  40f0e0:	fadd   DWORD PTR [eax+0x66]
  40f0e3:	mov    eax,0xd214a06e
  40f0e8:	ret    
  40f0e9:	test   DWORD PTR [ebp+0xd88ef25],ecx
  40f0ef:	ss xor al,0x32
  40f0f2:	mov    al,BYTE PTR [eax+0x5f]
  40f0f5:	and    cl,BYTE PTR [ecx+0x3b]
  40f0f8:	add    cl,BYTE PTR [ecx+0x3]
  40f0fb:	test   BYTE PTR [ecx],bl
  40f0fd:	pop    ss
  40f0fe:	push   ds
  40f0ff:	mov    ds:0xa1aac9d0,al
  40f104:	and    DWORD PTR [eax],0x709e8664
  40f10a:	outs   dx,DWORD PTR ds:[esi]
  40f10b:	mov    bl,0x5f
  40f10d:	scas   al,BYTE PTR es:[edi]
  40f10e:	and    al,0xf8
  40f110:	frstor [esi+0x25]
  40f113:	mov    al,0x5e
  40f115:	stos   BYTE PTR es:[edi],al
  40f116:	cmp    al,0x82
  40f118:	mov    edx,0xb55f3b21
  40f11d:	sar    DWORD PTR [edx],0xa4
  40f120:	or     esp,eax
  40f122:	enter  0x2843,0xa6
  40f126:	test   eax,0xfdd1b7a5
  40f12b:	fisttp QWORD PTR [ecx-0x3]
  40f12e:	nop
  40f12f:	and    edx,ebx
  40f131:	std    
  40f132:	push   es
  40f133:	cmp    BYTE PTR [ecx+ebx*8],ch
  40f136:	cmp    edi,ebp
  40f138:	or     dh,dl
  40f13a:	arpl   WORD PTR [esp+esi*1],di
  40f13d:	mov    dl,0x5f
  40f13f:	scas   eax,DWORD PTR es:[edi]
  40f140:	retf   
  40f141:	adc    DWORD PTR [eax+ecx*1-0x5f],esi
  40f145:	pop    ebp
  40f146:	sbb    eax,0x6c8902ed
  40f14b:	ss xor al,0x8e
  40f14e:	xchg   bl,bl
  40f150:	mov    ah,0x6
  40f152:	inc    ebx
  40f153:	sbb    ah,BYTE PTR ss:[edi+0x7e]
  40f157:	pusha  
  40f158:	inc    eax
  40f159:	outs   dx,DWORD PTR ds:[esi]
  40f15a:	pop    ebx
  40f15b:	(bad)  
  40f15c:	push   0x3e3296fb
  40f161:	add    esp,DWORD PTR [edi+0x3f]
  40f164:	add    BYTE PTR [esi],al
  40f166:	leave  
  40f167:	inc    esi
  40f168:	ins    BYTE PTR es:[edi],dx
  40f169:	or     eax,0x53bd5298
  40f16e:	dec    eax
  40f16f:	and    ebp,0x546abe34
  40f175:	retf   
  40f176:	call   0xc548aa62
  40f17b:	(bad)  
  40f17c:	xlat   BYTE PTR ds:[ebx]
  40f17d:	push   ecx
  40f17e:	pop    es
  40f17f:	mov    al,0xb
  40f181:	jo     0x40f148
  40f183:	or     eax,0x48a1e80
  40f188:	cmp    BYTE PTR [ecx-0x791acf65],al
  40f18e:	add    al,0xf5
  40f191:	xor    al,0x15
  40f193:	out    dx,eax
  40f194:	pop    ecx
  40f195:	aas    
  40f196:	inc    ecx
  40f197:	cmp    al,0x3f
  40f199:	pop    edi
  40f19a:	scas   eax,DWORD PTR es:[edi]
  40f19b:	lock add eax,0x36bf017d
  40f1a1:	push   0xffffff94
  40f1a3:	or     al,0x51
  40f1a5:	out    0xed,eax
  40f1a7:	xchg   ebx,eax
  40f1a8:	mov    ah,0xa7
  40f1aa:	jo     0x40f21d
  40f1ac:	out    dx,eax
  40f1ad:	mov    ebp,0x438f0f42
  40f1b2:	pop    esp
  40f1b3:	cwde   
  40f1b4:	dec    esp
  40f1b5:	mov    esp,0x77616172
  40f1ba:	les    ebp,FWORD PTR [esi-0x19]
  40f1bd:	lea    ebx,[eax-0x228c4f37]
  40f1c3:	pop    ebp
  40f1c4:	vsqrtss xmm0,xmm5,DWORD PTR [edx-0x19f5c8b6]
  40f1cc:	xor    DWORD PTR [esi+0x43],0x38988c46
  40f1d3:	pop    eax
  40f1d4:	aaa    
  40f1d5:	mov    esi,0x9a05318e
  40f1da:	data16 xor cl,BYTE PTR [edx-0x588e526a]
  40f1e1:	or     ch,bl
  40f1e3:	retfw  
  40f1e5:	dec    esi
  40f1e6:	cmp    DWORD PTR [edx+eiz*4],edx
  40f1e9:	aaa    
  40f1ea:	int    0x11
  40f1ec:	xchg   BYTE PTR [eax+edx*4-0x659a641e],al
  40f1f3:	add    eax,0x8791605a
  40f1f8:	nop
  40f1f9:	cmp    ebp,ecx
  40f1fb:	(bad)  
  40f1fc:	fbstp  TBYTE PTR [esi-0x63]
  40f1ff:	lea    eax,[edi-0xda2f59e]
  40f205:	xor    bl,dl
  40f207:	ins    BYTE PTR es:[edi],dx
  40f208:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f209:	aad    0x93
  40f20b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f20c:	adc    al,0x5
  40f20e:	sub    al,0x94
  40f210:	iret   
  40f211:	inc    ebp
  40f212:	sbb    eax,0x7736ee70
  40f217:	cmp    al,al
  40f219:	mov    al,al
  40f21b:	sub    BYTE PTR [esi+edi*1-0x76],dh
  40f21f:	dec    eax
  40f220:	mov    bh,BYTE PTR ds:0x5f607b04
  40f226:	and    edi,DWORD PTR ds:0xe6886ce0
  40f22c:	sub    al,0x4d
  40f22e:	out    dx,al
  40f22f:	dec    ebx
  40f230:	xlat   BYTE PTR ds:[ebx]
  40f231:	sub    al,0x42
  40f233:	mov    edx,0x8b1f469a
  40f238:	cmp    al,0x89
  40f23a:	sbb    al,0x3e
  40f23c:	add    eax,0x3a1419cc
  40f241:	push   cs
  40f242:	fucomp st(0)
  40f244:	int    0xc3
  40f246:	xchg   esp,eax
  40f247:	dec    ebx
  40f248:	stc    
  40f249:	outs   dx,BYTE PTR ds:[esi]
  40f24a:	mov    esp,0x95c3d5d6
  40f24f:	fsubrp st(4),st
  40f251:	pop    ds
  40f252:	sbb    dh,dh
  40f254:	shl    BYTE PTR [ebp-0x6d],cl
  40f257:	stc    
  40f258:	loope  0x40f229
  40f25a:	pop    edi
  40f25b:	xlat   BYTE PTR ds:[ebx]
  40f25c:	daa    
  40f25d:	jb     0x40f262
  40f25f:	dec    eax
  40f260:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f261:	aas    
  40f262:	mov    ch,0xd8
  40f264:	(bad)  
  40f265:	sbb    eax,0x4a7d1725
  40f26a:	not    DWORD PTR [esi-0x5811e9a]
  40f270:	test   DWORD PTR [ecx-0x6332ef9],esi
  40f276:	xchg   ebx,eax
  40f277:	not    DWORD PTR [edx]
  40f279:	repnz mov eax,ds:0xd6c03f9d
  40f27f:	sbb    bl,BYTE PTR [esi+eax*4]
  40f282:	dec    edi
  40f283:	and    bl,BYTE PTR [ecx+0x7d]
  40f286:	mov    ds:0x1b27bac1,al
  40f28b:	out    dx,eax
  40f28c:	(bad)  
  40f28d:	leave  
  40f28e:	jecxz  0x40f23f
  40f290:	retf   0xbf42
  40f293:	stc    
  40f294:	jns    0x40f311
  40f296:	cmp    esp,0x6c632f7
  40f29c:	jl     0x40f2d4
  40f29e:	aas    
  40f29f:	pusha  
  40f2a0:	sub    ecx,DWORD PTR [edx]
  40f2a2:	jnp    0x40f2e9
  40f2a4:	dec    edi
  40f2a5:	popf   
  40f2a6:	adc    ebx,ebx
  40f2a8:	xchg   bp,bx
  40f2ab:	pop    esp
  40f2ac:	sbb    BYTE PTR [ecx-0x5a],bh
  40f2af:	push   esp
  40f2b0:	(bad)  
  40f2b1:	cmp    BYTE PTR [edx-0x6780a5c6],0xa1
  40f2b8:	(bad)  
  40f2b9:	(bad)
  40f2bc:	cmp    eax,0x29a62d03
  40f2c1:	pop    ebp
  40f2c2:	xchg   edi,eax
  40f2c3:	mov    edi,0x3ccd3560
  40f2c8:	les    ebx,FWORD PTR cs:[ebp+ecx*1-0x24bebc5b]
  40f2d0:	jno    0x40f30f
  40f2d2:	ror    ah,0x2c
  40f2d5:	aam    0x5f
  40f2d7:	nop
  40f2d8:	ror    ecx,cl
  40f2da:	jge    0x40f291
  40f2dc:	js     0x40f2ec
  40f2de:	inc    edx
  40f2df:	cdq    
  40f2e0:	inc    ebx
  40f2e1:	pop    ebp
  40f2e2:	ja     0x40f312
  40f2e4:	push   cs
  40f2e5:	mov    ds:0xc3370200,eax
  40f2ea:	imul   DWORD PTR [ecx+0x76]
  40f2ed:	test   eax,0x67e67fda
  40f2f2:	int    0xd9
  40f2f4:	cmp    DWORD PTR [edx],ebx
  40f2f6:	jae    0x40f364
  40f2f8:	xchg   esp,eax
  40f2f9:	mov    WORD PTR [eax+0x30],fs
  40f2fc:	pop    es
  40f2fd:	sub    BYTE PTR [eax-0x7c],0x42
  40f301:	shl    BYTE PTR [eax],0xa3
  40f304:	enter  0xd036,0xea
  40f308:	inc    ebp
  40f309:	in     eax,dx
  40f30a:	sbb    BYTE PTR [eax],ah
  40f30c:	rcl    BYTE PTR [eax+ecx*4+0x3aa4655c],0x2
  40f314:	or     BYTE PTR [eax],0x93
  40f317:	fsubr  DWORD PTR [ebp+0x24]
  40f31a:	dec    ebp
  40f31b:	or     BYTE PTR [ecx-0x7b],al
  40f31e:	or     cl,BYTE PTR [eax]
  40f320:	dec    edx
  40f321:	js     0x40f38c
  40f323:	clc    
  40f324:	mov    eax,ds:0x3e8ff4c5
  40f329:	inc    esp
  40f32a:	call   0x82e6624c
  40f32f:	bound  ecx,QWORD PTR [ebp-0x11]
  40f332:	jecxz  0x40f387
  40f334:	(bad)  
  40f335:	in     eax,dx
  40f336:	inc    edx
  40f337:	(bad)  
  40f338:	mov    bh,0xc4
  40f33a:	test   DWORD PTR [ecx-0x4d],ebx
  40f33d:	arpl   WORD PTR [edx+0x42ce9a66],ax
  40f343:	rep stos BYTE PTR es:[edi],al
  40f345:	out    dx,eax
  40f346:	cmc    
  40f347:	in     eax,dx
  40f348:	sub    al,0x7
  40f34a:	push   cs
  40f34b:	ror    BYTE PTR [esi],cl
  40f34d:	mov    bh,0xb9
  40f34f:	test   DWORD PTR [esp+edx*2-0x75],ecx
  40f353:	push   0xffffff9a
  40f355:	(bad)  
  40f356:	sbb    al,0x39
  40f358:	stos   BYTE PTR es:[edi],al
  40f359:	mov    ds:0x88a381c8,al
  40f35e:	mov    al,BYTE PTR [ecx+0x7689931]
  40f364:	xlat   BYTE PTR ds:[ebx]
  40f365:	in     eax,0xdf
  40f367:	cmc    
  40f368:	(bad)  
  40f369:	jns    0x40f342
  40f36b:	sti    
  40f36c:	dec    edx
  40f36d:	pushf  
  40f36e:	xchg   edi,eax
  40f36f:	stc    
  40f370:	aam    0x75
  40f372:	test   BYTE PTR ds:0xa44faf0d,0x87
  40f379:	mov    ecx,0xa952c53c
  40f37e:	ficom  WORD PTR [eax]
  40f380:	fsub   DWORD PTR [esi-0x4e5a18e8]
  40f386:	int    0x73
  40f388:	jnp    0x40f3c8
  40f38a:	mov    ecx,0x43228b21
  40f38f:	iret   
  40f390:	inc    ebx
  40f391:	jg     0x40f40a
  40f393:	lock and BYTE PTR ds:0xb832ad1f,0x56
  40f39b:	jp     0x40f336
  40f39d:	xor    ecx,ebp
  40f39f:	mov    bl,0xf2
  40f3a1:	ret    
  40f3a2:	sti    
  40f3a3:	and    al,0x81
  40f3a5:	push   edi
  40f3a6:	scas   al,BYTE PTR es:[edi]
  40f3a7:	sti    
  40f3a8:	loope  0x40f342
  40f3aa:	sub    edx,ecx
  40f3ac:	lds    ecx,FWORD PTR [eax+0x65a54c3a]
  40f3b2:	out    0xcd,al
  40f3b4:	fcomp  QWORD PTR [bx+di+0x22]
  40f3b8:	pop    DWORD PTR [ebp+0x48e62ca2]
  40f3be:	dec    edi
  40f3bf:	xor    cl,BYTE PTR [ecx-0x5fd4f129]
  40f3c5:	add    esi,esi
  40f3c7:	inc    eax
  40f3c8:	xor    esi,DWORD PTR [ecx-0x9daee9b]
  40f3ce:	add    ch,cl
  40f3d0:	mov    al,ds:0xda19a3c
  40f3d5:	icebp  
  40f3d6:	clc    
  40f3d7:	mov    dh,0x95
  40f3d9:	imul   edx,DWORD PTR [eax+0x3afca9e3],0x62842365
  40f3e3:	je     0x40f432
  40f3e5:	jmp    0x5d60:0x4c622e7a
  40f3ec:	cwde   
  40f3ed:	jmp    0x6766:0x7134b7d5
  40f3f4:	imul   ebx,DWORD PTR [ebx],0x6b
  40f3f7:	(bad)  
  40f3f8:	or     BYTE PTR [edi+ecx*2-0x1dac3d1f],dl
  40f3ff:	sbb    ebp,DWORD PTR [eax+ecx*4+0x33]
  40f403:	(bad)  
  40f405:	(bad)  
  40f406:	xlat   BYTE PTR ds:[ebx]
  40f407:	sahf   
  40f408:	xchg   esi,eax
  40f409:	(bad)  
  40f40a:	jl     0x40f483
  40f40c:	xchg   ebx,eax
  40f40d:	adc    BYTE PTR [eax+eiz*1-0x37dd03c0],0xa8
  40f415:	loope  0x40f441
  40f417:	fadd   st(7),st
  40f419:	sbb    bh,cl
  40f41b:	(bad)  
  40f41c:	(bad)  
  40f41d:	in     eax,dx
  40f41e:	jecxz  0x40f3b8
  40f420:	jne    0x40f3fb
  40f422:	push   ss
  40f423:	stc    
  40f424:	xor    BYTE PTR [edx],cl
  40f426:	jg     0x40f476
  40f428:	xchg   edx,eax
  40f429:	mov    ebp,0x204a2ce4
  40f42e:	lds    edi,FWORD PTR [ebp+0x71]
  40f431:	pushf  
  40f432:	scas   al,BYTE PTR es:[edi]
  40f433:	les    edi,FWORD PTR [esi-0x33]
  40f436:	cmp    eax,0xb7baf718
  40f43b:	dec    edi
  40f43c:	sub    BYTE PTR [edi+0x69],cl
  40f43f:	popf   
  40f440:	mov    bh,0x58
  40f442:	sahf   
  40f443:	and    DWORD PTR [ecx+ecx*8+0x6d],ebp
  40f447:	movlps xmm4,QWORD PTR [eax+0x7c]
  40f44b:	inc    edi
  40f44c:	push   edi
  40f44d:	ins    BYTE PTR es:[edi],dx
  40f44e:	addr16 fmul st,st(7)
  40f451:	icebp  
  40f452:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f453:	ds cmp ebp,edi
  40f456:	sub    DWORD PTR [ecx],ebx
  40f458:	mov    esp,0x6457912f
  40f45d:	add    al,ah
  40f45f:	lahf   
  40f460:	xchg   ax,ax
  40f462:	ficomp DWORD PTR [edx+0x1bd37f6c]
  40f468:	sbb    DWORD PTR [eax-0x4b],ebp
  40f46b:	inc    ecx
  40f46c:	ret    0x3331
  40f46f:	sbb    al,0x99
  40f471:	lahf   
  40f472:	pop    es
  40f473:	cmc    
  40f474:	clc    
  40f475:	and    al,0xa9
  40f477:	sub    cl,BYTE PTR [esi-0x521cc32a]
  40f47d:	or     ecx,eax
  40f47f:	inc    ebp
  40f480:	(bad)  
  40f481:	cli    
  40f482:	mov    cl,0x1
  40f484:	fldenv [ecx+0x12]
  40f487:	add    DWORD PTR [ebx-0x2312e4b],0xfffffff0
  40f48e:	inc    esi
  40f48f:	stc    
  40f490:	inc    esi
  40f491:	dec    esi
  40f492:	jge    0x40f4a0
  40f494:	test   al,0xe9
  40f496:	ss scas eax,DWORD PTR es:[edi]
  40f498:	imul   edi,edi,0xf
  40f49b:	enter  0x9fcf,0x1f
  40f49f:	mov    edx,cs
  40f4a1:	mov    ch,0x2
  40f4a3:	cmp    eax,0x652356d3
  40f4a8:	xor    DWORD PTR [edx+0x4965dd1],edx
  40f4ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4af:	test   al,0xd3
  40f4b1:	icebp  
  40f4b2:	stos   DWORD PTR es:[edi],eax
  40f4b3:	mov    eax,0xa551cd96
  40f4b8:	mov    esp,DWORD PTR [esi+0x62]
  40f4bb:	arpl   WORD PTR [edx+0x76],ax
  40f4be:	sar    BYTE PTR [ebx-0x25d77bed],cl
  40f4c4:	jg     0x40f46c
  40f4c6:	dec    esp
  40f4c7:	jl     0x40f482
  40f4c9:	xor    dh,BYTE PTR [ebp+ebx*1-0x36]
  40f4cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4ce:	adc    al,0x9a
  40f4d0:	xchg   esi,eax
  40f4d1:	hlt    
  40f4d2:	add    ah,dh
  40f4d4:	leave  
  40f4d5:	pushf  
  40f4d6:	cmp    BYTE PTR [ecx-0x17],0x45
  40f4da:	hlt    
  40f4db:	mov    al,ds:0x50ef5cc
  40f4e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4e1:	js     0x40f4a5
  40f4e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4e4:	in     al,dx
  40f4e5:	iret   
  40f4e6:	mov    eax,0x6235acea
  40f4eb:	scas   al,BYTE PTR es:[edi]
  40f4ec:	xlat   BYTE PTR ds:[ebx]
  40f4ed:	mov    esi,0xb1bf5253
  40f4f2:	rcr    DWORD PTR [ebx-0x4a9931de],0x2
  40f4f9:	sbb    dl,ah
  40f4fb:	mov    esp,0xaa12543a
  40f500:	push   es
  40f501:	sbb    bl,dl
  40f503:	sub    al,0x3
  40f505:	mov    DWORD PTR [esi-0x5a],ebx
  40f508:	pop    ss
  40f509:	or     cl,BYTE PTR [esi+0x56]
  40f50c:	rcl    BYTE PTR [edi-0x363d1417],cl
  40f512:	push   0xd0fd615f
  40f517:	mov    bl,0x76
  40f519:	adc    BYTE PTR [edx],ah
  40f51b:	mov    ecx,0xc6ff8db5
  40f520:	or     edx,ebp
  40f522:	jecxz  0x40f597
  40f524:	lea    esp,[ebx+0x2d]
  40f527:	cdq    
  40f528:	cmp    al,0x1c
  40f52a:	sbb    DWORD PTR [ecx],esp
  40f52c:	jns    0x40f55e
  40f52e:	ret    
  40f52f:	pop    es
  40f530:	stos   BYTE PTR es:[edi],al
  40f531:	popa   
  40f532:	xor    al,0xa4
  40f534:	xchg   edx,eax
  40f535:	in     al,dx
  40f536:	test   esi,ebx
  40f538:	xchg   edi,eax
  40f539:	test   al,0xa9
  40f53b:	jecxz  0x40f549
  40f53d:	scas   al,BYTE PTR es:[edi]
  40f53e:	outs   dx,BYTE PTR ds:[esi]
  40f53f:	jae    0x40f5a5
  40f541:	sahf   
  40f542:	scas   eax,DWORD PTR es:[edi]
  40f543:	pusha  
  40f544:	mov    bl,0xbd
  40f546:	dec    ebx
  40f547:	repz cmp DWORD PTR [eax],esp
  40f54a:	mov    ah,0x86
  40f54c:	jl     0x40f582
  40f54e:	ss arpl si,dx
  40f551:	dec    ecx
  40f552:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f553:	and    eax,0xa3c430f7
  40f558:	shl    DWORD PTR [ebx+0x64df8289],1
  40f55e:	data16 jns 0x40f50b
  40f561:	mov    esi,0xfcf9708a
  40f566:	mov    ebx,DWORD PTR [ecx-0x42d44f1a]
  40f56c:	push   edx
  40f56d:	dec    esp
  40f56e:	sbb    al,BYTE PTR [esi+0x67]
  40f571:	dec    ebx
  40f572:	push   edx
  40f573:	repnz or eax,0x8b90d9d
  40f579:	pop    edx
  40f57a:	fstp   TBYTE PTR [ebx]
  40f57c:	dec    esi
  40f57d:	cwde   
  40f57e:	out    dx,al
  40f57f:	retf   0xc780
  40f582:	std    
  40f583:	pop    es
  40f584:	mov    eax,0xf976fa26
  40f589:	sub    ecx,ecx
  40f58b:	mov    ?,edx
  40f58d:	in     al,dx
  40f58e:	popf   
  40f58f:	lea    edx,[esi-0x68cfb326]
  40f595:	mov    bl,dh
  40f597:	cdq    
  40f598:	inc    esp
  40f599:	jo     0x40f521
  40f59b:	ficom  WORD PTR [esi+0x76]
  40f59e:	mov    edx,0x9e03e56f
  40f5a3:	push   edx
  40f5a4:	push   edx
  40f5a5:	retf   
  40f5a6:	cmp    al,0x3f
  40f5a8:	jmp    0x22c9fa21
  40f5ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f5ae:	in     al,dx
  40f5af:	fisub  WORD PTR [ecx+0x2]
  40f5b2:	(bad)  
  40f5b3:	fs cmp eax,0xfbbfb7e8
  40f5b9:	push   esp
  40f5ba:	sbb    cl,BYTE PTR [ecx+ebp*2+0x3ec3e2b9]
  40f5c1:	(bad)  
  40f5c2:	mov    ds:0xfc8755e4,al
  40f5c7:	ja     0x40f56d
  40f5c9:	dec    eax
  40f5ca:	dec    esi
  40f5cb:	jl     0x40f5d0
  40f5cd:	sbb    al,0x27
  40f5cf:	ds or  eax,0x19c4eeaa
  40f5d5:	sub    al,al
  40f5d7:	add    DWORD PTR [ecx-0x2],ebp
  40f5da:	mov    ds:0x17da4a2a,eax
  40f5df:	xchg   ebp,eax
  40f5e0:	clc    
  40f5e1:	cmp    edx,DWORD PTR [ebp+0x2c]
  40f5e4:	jno    0x40f603
  40f5e6:	or     BYTE PTR [ecx-0x308e45c9],bl
  40f5ec:	cli    
  40f5ed:	mov    cl,0x87
  40f5ef:	cmp    DWORD PTR [esi],esi
  40f5f1:	leave  
  40f5f2:	mov    ds:0x5b2fbc9e,al
  40f5f7:	addr16 ja 0x40f64f
  40f5fa:	dec    edx
  40f5fb:	lds    ecx,FWORD PTR [edx-0x3fe77b6c]
  40f601:	adc    dl,BYTE PTR [edi+0x2943a16b]
  40f607:	ss dec esp
  40f609:	clc    
  40f60a:	test   BYTE PTR [edi+edx*2],al
  40f60d:	test   DWORD PTR [edi+0x5955d7f0],ecx
  40f613:	ins    BYTE PTR es:[edi],dx
  40f614:	adc    al,0x5f
  40f616:	loope  0x40f60f
  40f618:	(bad)  
  40f619:	or     ah,BYTE PTR [ebp+0xbd55023]
  40f61f:	ror    DWORD PTR [ebp+0x50],0xc8
  40f623:	lods   eax,DWORD PTR ds:[esi]
  40f624:	clc    
  40f625:	or     BYTE PTR [eax+edx*8],dl
  40f628:	lea    edx,[ebp+0xf]
  40f62b:	lds    ecx,FWORD PTR [esi-0x5e]
  40f62e:	mov    ebp,0xff4ddc5b
  40f633:	out    dx,eax
  40f634:	out    0x81,al
  40f636:	sub    DWORD PTR [ebx-0x76c36bd7],ecx
  40f63c:	sub    BYTE PTR [edx],bl
  40f63e:	pop    ebx
  40f63f:	and    BYTE PTR [edx],bh
  40f641:	mov    BYTE PTR ds:0x74cd0425,dh
  40f647:	ds cli 
  40f649:	add    al,0xf8
  40f64b:	jmp    0x40f675
  40f64d:	cmp    dl,bh
  40f64f:	pop    eax
  40f650:	rcl    DWORD PTR [ebp-0x75],cl
  40f653:	and    al,0x76
  40f655:	dec    esp
  40f656:	or     DWORD PTR [edi],edi
  40f658:	pusha  
  40f659:	mov    eax,0x8b2f70e4
  40f65e:	mov    eax,ds:0x3284c5fd
  40f663:	scas   eax,DWORD PTR es:[edi]
  40f664:	and    eax,0xff9fbb4
  40f669:	fbstp  TBYTE PTR [ecx+ebp*8-0x71]
  40f66d:	mov    edi,0x974239be
  40f672:	iret   
  40f673:	add    ecx,edx
  40f675:	xchg   ecx,eax
  40f676:	push   edi
  40f677:	aas    
  40f678:	adc    DWORD PTR [ecx-0x55],esp
  40f67b:	lahf   
  40f67c:	nop
  40f67d:	jle    0x40f671
  40f67f:	je     0x40f6d5
  40f681:	cli    
  40f682:	adc    DWORD PTR [esi-0x3cdf7449],edx
  40f688:	xor    ch,BYTE PTR [eax]
  40f68a:	jae    0x40f6e0
  40f68c:	out    0x91,eax
  40f68e:	or     esi,esp
  40f690:	mov    eax,ds:0xb9a5cea4
  40f695:	rcl    DWORD PTR [ebx+0xb],1
  40f698:	jb     0x40f6b8
  40f69a:	pop    ebp
  40f69b:	push   eax
  40f69c:	retf   0xd247
  40f69f:	jp     0x40f69b
  40f6a1:	scas   eax,DWORD PTR es:[edi]
  40f6a2:	jne    0x40f6f3
  40f6a4:	out    dx,al
  40f6a5:	inc    esp
  40f6a6:	pusha  
  40f6a7:	rcr    BYTE PTR ds:0xa651d59f,cl
  40f6ad:	mov    cs,WORD PTR [edx+0x5f]
  40f6b0:	ja     0x40f6d9
  40f6b2:	es jnp 0x40f71f
  40f6b5:	stos   DWORD PTR es:[edi],eax
  40f6b6:	sub    ebp,DWORD PTR [ecx-0x2b]
  40f6b9:	loopne 0x40f646
  40f6bb:	rcr    DWORD PTR [eax],1
  40f6bd:	fisttp DWORD PTR [ecx-0x6e]
  40f6c0:	or     BYTE PTR [esi],ah
  40f6c2:	das    
  40f6c3:	inc    edi
  40f6c4:	dec    BYTE PTR [edi-0x26866f74]
  40f6ca:	fldenv [esi+0x7d63091d]
  40f6d0:	cmp    ecx,DWORD PTR [edi+0x3d0d792e]
  40f6d6:	arpl   bp,cx
  40f6d8:	adc    DWORD PTR [edi],esp
  40f6da:	jne    0x40f726
  40f6dc:	and    bh,dh
  40f6de:	xor    ah,0xd7
  40f6e1:	outs   dx,DWORD PTR ds:[esi]
  40f6e2:	arpl   WORD PTR [ebx+ebp*4-0x5865e356],bp
  40f6e9:	fcomp  QWORD PTR [ebp-0x5e8270aa]
  40f6ef:	in     al,dx
  40f6f0:	inc    edx
  40f6f1:	or     edx,0xd43b49fb
  40f6f7:	leave  
  40f6f8:	push   ebp
  40f6f9:	(bad)  
  40f6fa:	adc    al,0xc5
  40f6fc:	lahf   
  40f6fd:	sbb    DWORD PTR [ebx],edx
  40f6ff:	je     0x40f6f6
  40f701:	xchg   ecx,eax
  40f702:	test   eax,0xbd7b9e8c
  40f707:	js     0x40f6fd
  40f709:	xor    edi,DWORD PTR [edx+esi*1+0x16ebdae2]
  40f710:	xor    DWORD PTR ds:0x710e6ee0,edi
  40f717:	int    0x9e
  40f719:	ret    0xd85d
  40f71c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f71d:	inc    esp
  40f71e:	hlt    
  40f71f:	bound  ecx,QWORD PTR [eax+0x3c]
  40f722:	bound  ebp,QWORD PTR ds:0xe348d7da
  40f728:	fild   QWORD PTR [ebp+ebx*8+0x47551a61]
  40f72f:	push   ecx
  40f730:	xchg   ebx,eax
  40f731:	cmp    ebp,DWORD PTR [ebp+0x53cacfda]
  40f737:	retf   0x4dc5
  40f73a:	mov    eax,0x8534f777
  40f73f:	push   es
  40f740:	popf   
  40f741:	mov    ah,0x31
  40f743:	daa    
  40f744:	inc    esi
  40f745:	mov    edi,0x511aa1b7
  40f74a:	stos   BYTE PTR es:[edi],al
  40f74b:	cdq    
  40f74c:	and    edx,esp
  40f74e:	and    eax,0x46aac961
  40f753:	retf   
  40f754:	stos   BYTE PTR es:[edi],al
  40f755:	adc    BYTE PTR [ecx+0x10],0xde
  40f759:	outs   dx,BYTE PTR ds:[esi]
  40f75a:	stc    
  40f75b:	cwde   
  40f75c:	dec    ebp
  40f75d:	jne    0x40f73d
  40f75f:	jg     0x40f706
  40f761:	cmp    BYTE PTR [ecx-0x18],cl
  40f764:	fs xchg ebp,eax
  40f766:	mov    esp,0xa720cb70
  40f76b:	lahf   
  40f76c:	xchg   DWORD PTR [ebx-0x5eff247f],ebp
  40f772:	cdq    
  40f773:	cld    
  40f774:	sbb    BYTE PTR [edx-0x52],bh
  40f777:	data16 js 0x40f737
  40f77a:	arpl   WORD PTR [esi-0x68],cx
  40f77d:	inc    ebp
  40f77e:	ins    DWORD PTR es:[edi],dx
  40f77f:	fxch   st(3)
  40f781:	shl    BYTE PTR [ebp+0x32d9374f],cl
  40f787:	push   ebx
  40f788:	imul   esp,DWORD PTR [ebp+0x5ba6d210],0xffffffad
  40f78f:	xor    eax,0xf41c467a
  40f794:	cmc    
  40f795:	stos   DWORD PTR es:[edi],eax
  40f796:	(bad)  
  40f797:	xor    al,0x34
  40f799:	stos   BYTE PTR es:[edi],al
  40f79a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f79b:	test   eax,0xb9f11735
  40f7a1:	inc    ecx
  40f7a2:	inc    ecx
  40f7a3:	xor    dl,0xa0
  40f7a6:	adc    al,0x7c
  40f7a8:	(bad)  [edx]
  40f7aa:	outs   dx,BYTE PTR ds:[esi]
  40f7ab:	push   edi
  40f7ac:	fcom   QWORD PTR [edx+0x6b]
  40f7af:	popf   
  40f7b0:	or     al,0x30
  40f7b2:	cwde   
  40f7b3:	mov    ds:0x4271bec3,al
  40f7b8:	push   edx
  40f7b9:	pop    ss
  40f7ba:	paddusw mm5,mm4
  40f7bd:	or     BYTE PTR [edi],al
  40f7bf:	fisttp WORD PTR [edx-0x4b]
  40f7c2:	mov    esi,0x584ed6fb
  40f7c7:	jo     0x40f803
  40f7c9:	sbb    ecx,ecx
  40f7cb:	test   DWORD PTR [edx],ebx
  40f7cd:	hlt    
  40f7ce:	lea    edx,[ecx]
  40f7d0:	int3   
  40f7d1:	in     al,0xfb
  40f7d3:	mov    dh,0xe5
  40f7d5:	hlt    
  40f7d6:	iret   
  40f7d7:	lahf   
  40f7d8:	je     0x40f836
  40f7da:	popa   
  40f7db:	lea    ebx,[edx+eax*1-0x5b]
  40f7df:	test   DWORD PTR [ebx+ebp*2],ebx
  40f7e2:	or     al,0x49
  40f7e4:	enter  0x68d6,0xe7
  40f7e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f7e9:	test   BYTE PTR [ebp+ebp*2+0x5e],dl
  40f7ed:	mov    eax,ds:0xc43a42f6
  40f7f2:	xor    DWORD PTR [edx-0x51f48e15],ebx
  40f7f8:	es pop ecx
  40f7fa:	mov    esi,0xad2a0c13
  40f7ff:	xchg   ecx,eax
  40f800:	(bad)  
  40f801:	fwait
  40f802:	je     0x40f870
  40f804:	inc    esp
  40f805:	out    dx,al
  40f806:	mov    eax,0x63f5197c
  40f80b:	aad    0x2d
  40f80d:	rol    DWORD PTR [edx-0x46f0b177],cl
  40f813:	cmp    ah,al
  40f815:	rol    cl,cl
  40f817:	mov    ds:0xaf6700a8,eax
  40f81c:	mov    esp,0x889c202
  40f821:	stos   BYTE PTR es:[edi],al
  40f822:	leave  
  40f823:	rcl    BYTE PTR [ecx-0x58],cl
  40f826:	stc    
  40f827:	xchg   ecx,eax
  40f828:	cmp    BYTE PTR [eax+0x1573a6bb],ch
  40f82e:	fnstcw WORD PTR [eax-0xc]
  40f831:	int3   
  40f832:	xchg   edi,eax
  40f833:	inc    eax
  40f834:	jge    0x40f884
  40f836:	sahf   
  40f837:	mov    dh,0x98
  40f839:	lahf   
  40f83a:	jo     0x40f804
  40f83c:	or     esp,DWORD PTR [esp+esi*4]
  40f83f:	inc    edx
  40f840:	clc    
  40f841:	bound  eax,QWORD PTR [eax]
  40f843:	adc    BYTE PTR [edx],bh
  40f845:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f846:	jl     0x40f848
  40f848:	xchg   esp,eax
  40f849:	xor    DWORD PTR [esi-0x35072113],ecx
  40f84f:	aam    0x7b
  40f851:	outs   dx,BYTE PTR ds:[esi]
  40f852:	retf   0x3c4f
  40f855:	cmp    DWORD PTR [esp+eiz*4],esp
  40f858:	bound  esp,QWORD PTR [ebp+0x61]
  40f85b:	hlt    
  40f85c:	adc    bl,dh
  40f85e:	repnz push edi
  40f860:	ds jns 0x40f803
  40f863:	jbe    0x40f7e8
  40f865:	iret   
  40f866:	mov    ebp,0xfcdb4122
  40f86b:	xchg   DWORD PTR [ecx+eiz*4+0x237dd96c],edx
  40f872:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f873:	sahf   
  40f874:	xor    al,0xf1
  40f876:	adc    ecx,esi
  40f878:	pop    ecx
  40f879:	into   
  40f87a:	sub    BYTE PTR [edi+ebx*4-0x2bafbd95],bl
  40f881:	pop    ss
  40f882:	nop
  40f883:	xor    ah,BYTE PTR [edi]
  40f885:	lods   al,BYTE PTR ds:[esi]
  40f886:	mov    esi,0xa70e1a8c
  40f88b:	mov    ch,0x7c
  40f88d:	out    0x8d,eax
  40f88f:	and    edx,0x5a
  40f892:	and    al,0xf3
  40f894:	sti    
  40f895:	mov    WORD PTR [eax+edi*4],es
  40f898:	aaa    
  40f899:	gs add eax,0xffd93c20
  40f89f:	mov    ebp,0x1968caf0
  40f8a4:	(bad)  
  40f8a5:	neg    eax
  40f8a7:	fnstenv [ecx]
  40f8a9:	and    DWORD PTR [edi+0x1c291876],0x209d6cb8
  40f8b3:	mov    dl,0xd8
  40f8b5:	mov    ah,0x8
  40f8b7:	out    dx,al
  40f8b8:	mov    edi,0x8135c45
  40f8bd:	loop   0x40f861
  40f8bf:	je     0x40f91b
  40f8c1:	mov    dl,0x6a
  40f8c3:	enter  0x410d,0x3c
  40f8c7:	fnstenv [ecx]
  40f8c9:	iret   
  40f8ca:	pop    esi
  40f8cb:	stos   DWORD PTR es:[edi],eax
  40f8cc:	push   ebx
  40f8cd:	rcl    BYTE PTR [esi],0x9a
  40f8d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8d1:	out    0x52,al
  40f8d3:	pop    edx
  40f8d4:	fimul  WORD PTR [ebp+0x13]
  40f8d7:	jg     0x40f938
  40f8d9:	cmp    BYTE PTR [ebx],0x6
  40f8dc:	sub    BYTE PTR [ecx+0x7e],0x68
  40f8e0:	das    
  40f8e1:	pop    esi
  40f8e2:	repnz pop es
  40f8e4:	xor    dh,ah
  40f8e6:	cmp    eax,0x73507eb
  40f8eb:	pop    ecx
  40f8ec:	sub    eax,0x3f024bf9
  40f8f1:	push   0x50
  40f8f3:	pop    edx
  40f8f4:	cmp    dh,BYTE PTR [ecx-0x5e]
  40f8f7:	shl    BYTE PTR [edi-0x7eaf0b8b],0xfd
  40f8fe:	add    ecx,esp
  40f900:	scas   eax,DWORD PTR es:[edi]
  40f901:	jnp    0x40f892
  40f903:	push   esi
  40f904:	sub    DWORD PTR [ecx],ecx
  40f906:	mov    al,0xa6
  40f908:	cmp    BYTE PTR [esi-0x6],bl
  40f90b:	lods   eax,DWORD PTR ds:[esi]
  40f90c:	inc    esi
  40f90d:	fldcw  WORD PTR [edi]
  40f90f:	mul    DWORD PTR [edi]
  40f911:	icebp  
  40f912:	jbe    0x40f8f7
  40f914:	das    
  40f915:	int    0xe5
  40f917:	xchg   BYTE PTR [ebx],dh
  40f919:	jbe    0x40f97b
  40f91b:	sbb    edx,eax
  40f91d:	mov    ebx,0x8468cace
  40f922:	and    eax,0x60d643e8
  40f927:	or     al,0xe8
  40f929:	imul   esp,esi,0xfa4f0519
  40f92f:	jg     0x40f96b
  40f931:	sub    DWORD PTR [edi],ebx
  40f933:	push   edi
  40f934:	jno    0x40f955
  40f936:	enter  0x7e9e,0x81
  40f93a:	int    0x89
  40f93c:	test   BYTE PTR [ecx],0xb4
  40f93f:	icebp  
  40f940:	and    eax,0xda12fc32
  40f945:	push   edi
  40f946:	push   0xffffff8b
  40f948:	sbb    eax,0x53e1024c
  40f94d:	sar    DWORD PTR [ebx+0x7a],0xd8
  40f951:	sbb    ebp,DWORD PTR [esi+0x66]
  40f954:	je     0x40f9c7
  40f956:	dec    edi
  40f957:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f958:	test   ecx,edx
  40f95a:	adc    cl,BYTE PTR [eax+0x367a7055]
  40f960:	and    eax,0xc1f76897
  40f965:	jne    0x40f98f
  40f967:	mov    bl,0x6b
  40f969:	shl    edi,1
  40f96b:	stos   BYTE PTR es:[edi],al
  40f96c:	popf   
  40f96d:	cmp    BYTE PTR [esp+esi*1-0x3ef3ff6f],cl
  40f974:	push   ecx
  40f975:	sub    ebp,esp
  40f977:	addr16 mov bh,0x9d
  40f97a:	adc    eax,0xe4bd52f
  40f97f:	fldcw  WORD PTR [edi-0x8a8b470]
  40f985:	jle    0x40f920
  40f987:	or     BYTE PTR [ebx-0x4d],bl
  40f98a:	imul   BYTE PTR [eax-0x38459ea6]
  40f990:	not    DWORD PTR ds:0x48a32b10
  40f996:	icebp  
  40f997:	sbb    cl,dh
  40f999:	inc    ebp
  40f99a:	pop    ebp
  40f99b:	imul   edx,DWORD PTR [edi+0x21],0xd13a26e8
  40f9a2:	push   eax
  40f9a3:	lds    ebx,FWORD PTR [esi+0x9f9234]
  40f9a9:	push   ds
  40f9aa:	fstp   st(7)
  40f9ac:	mov    al,0x3f
  40f9ae:	inc    DWORD PTR [ecx+ebp*2+0x40]
  40f9b2:	and    DWORD PTR [ebp-0x10],0xffffff8e
  40f9b6:	(bad)  
  40f9b7:	dec    ebx
  40f9b8:	in     eax,0x5
  40f9ba:	out    dx,eax
  40f9bb:	xchg   ecx,eax
  40f9bc:	jge    0x40fa1a
  40f9be:	lods   al,BYTE PTR ds:[esi]
  40f9bf:	xchg   ebx,eax
  40f9c0:	and    BYTE PTR [edi-0x3b26e31e],0x57
  40f9c7:	(bad)  
  40f9c8:	xchg   edi,eax
  40f9c9:	pop    ecx
  40f9ca:	mov    BYTE PTR [ebx+ecx*1+0x4740575d],al
  40f9d1:	pop    ebx
  40f9d2:	stc    
  40f9d3:	push   edi
  40f9d4:	sub    BYTE PTR [ecx+0x525dd9e8],ah
  40f9da:	pop    ds
  40f9db:	sub    DWORD PTR [edx],ebx
  40f9dd:	mov    ds:0xe5c87864,eax
  40f9e2:	je     0x40f9e4
  40f9e4:	lods   al,BYTE PTR ds:[esi]
  40f9e5:	arpl   WORD PTR [eax+0x1d],di
  40f9e8:	jecxz  0x40fa03
  40f9ea:	in     eax,dx
  40f9eb:	pop    esp
  40f9ec:	inc    esp
  40f9ed:	call   0x414ce2e9
  40f9f2:	(bad)  
  40f9f3:	inc    ecx
  40f9f4:	jbe    0x40f9d5
  40f9f6:	ja     0x40fa03
  40f9f8:	hlt    
  40f9f9:	nop
  40f9fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9fb:	push   ebp
  40f9fc:	xchg   BYTE PTR [ecx],dh
  40f9fe:	es sbb al,0x6c
  40fa01:	cmp    al,BYTE PTR [ecx-0x42a7efea]
  40fa07:	scas   eax,DWORD PTR es:[edi]
  40fa08:	in     eax,0x58
  40fa0a:	push   ss
  40fa0b:	push   edx
  40fa0c:	sub    eax,0x1e0068b4
  40fa11:	and    eax,0x501bc0c6
  40fa16:	jp     0x40f9dc
  40fa18:	pop    edx
  40fa19:	jp     0x40fa6f
  40fa1b:	adc    BYTE PTR ds:0xb1acd5bc,al
  40fa21:	test   BYTE PTR [eax],ch
  40fa23:	push   es
  40fa24:	xchg   DWORD PTR [eax-0x4b],eax
  40fa27:	je     0x40fa82
  40fa29:	cmp    eax,ebx
  40fa2b:	jl     0x40f9f1
  40fa2d:	mov    WORD PTR [ebx],cs
  40fa2f:	mov    al,ss:0xc85b0654
  40fa35:	sub    eax,0x50d5a290
  40fa3a:	xchg   edx,eax
  40fa3b:	and    bl,BYTE PTR [edx-0x10]
  40fa3e:	pop    ebx
  40fa3f:	and    eax,0xa851071f
  40fa44:	popa   
  40fa45:	(bad)  [edx]
  40fa47:	jmp    0xb09f:0x2a2da7b1
  40fa4e:	push   es
  40fa4f:	je     0x40fa41
  40fa51:	and    esi,DWORD PTR [edx+0x63]
  40fa54:	mov    cs,WORD PTR [ebp+0x3d21c969]
  40fa5a:	stos   DWORD PTR es:[edi],eax
  40fa5b:	push   cs
  40fa5c:	inc    edi
  40fa5d:	adc    DWORD PTR [esi-0x76a548a5],esp
  40fa63:	cmp    eax,0x479ec2dc
  40fa68:	or     bl,ch
  40fa6a:	inc    ecx
  40fa6b:	inc    eax
  40fa6c:	pop    ss
  40fa6d:	push   es
  40fa6e:	or     BYTE PTR [edi],0x73
  40fa71:	shr    BYTE PTR [ecx],0xf1
  40fa74:	adc    edi,edi
  40fa76:	xchg   edx,eax
  40fa77:	js     0x40fab7
  40fa79:	push   0x59
  40fa7b:	dec    edi
  40fa7c:	mov    ds:0xd1b7978e,al
  40fa81:	xchg   DWORD PTR [esi+0x3],edx
  40fa84:	inc    ecx
  40fa85:	adc    ecx,edi
  40fa87:	add    al,0x2d
  40fa89:	inc    ecx
  40fa8a:	pusha  
  40fa8b:	mov    esp,0x23171284
  40fa90:	js     0x40faa0
  40fa92:	cmp    ah,al
  40fa94:	aaa    
  40fa95:	mov    ecx,0xbab080f3
  40fa9a:	inc    eax
  40fa9b:	fild   DWORD PTR [ebx+ebp*8]
  40fa9e:	ret    
  40fa9f:	retf   
  40faa0:	inc    eax
  40faa1:	jp     0x40faa9
  40faa3:	mov    bh,0x7a
  40faa5:	adc    DWORD PTR [edx+ebx*4-0x586bd873],ebx
  40faac:	sub    esi,DWORD PTR [ecx+0x6718e869]
  40fab2:	addr16 loopne 0x40fa52
  40fab5:	add    esi,eax
  40fab7:	rol    DWORD PTR [ecx+edi*4],1
  40faba:	mov    dh,0xb0
  40fabc:	popa   
  40fabd:	and    eax,0x1a4f4e97
  40fac2:	addr16 xor al,0xe5
  40fac5:	adc    BYTE PTR [esi],ch
  40fac7:	out    0xcd,al
  40fac9:	fisttp QWORD PTR [ebp-0x3be8c90e]
  40facf:	mov    eax,0x31cecd2f
  40fad4:	cwde   
  40fad5:	dec    edi
  40fad6:	push   esp
  40fad7:	aaa    
  40fad8:	and    BYTE PTR [ebx+ebx*8],cl
  40fadb:	fild   QWORD PTR [esi]
  40fadd:	lock (bad) 
  40fadf:	hlt    
  40fae0:	call   0x833b:0x4328694c
  40fae7:	xchg   DWORD PTR cs:[edx],esp
  40faea:	sti    
  40faeb:	stos   BYTE PTR es:[edi],al
  40faec:	cmp    ch,BYTE PTR [edi]
  40faee:	(bad)  
  40faef:	jmp    0x86f80ac7
  40faf4:	sbb    BYTE PTR [eax],ch
  40faf6:	or     BYTE PTR [ebp-0x30],0xcb
  40fafa:	cli    
  40fafb:	dec    ecx
  40fafc:	fld    st(5)
  40fafe:	ins    DWORD PTR es:[edi],dx
  40faff:	jns    0x40fb10
  40fb01:	push   esp
  40fb02:	xor    ah,0xf0
  40fb05:	dec    edi
  40fb06:	lea    eax,[ebp+ebx*2+0x6f]
  40fb0a:	dec    edx
  40fb0b:	cdq    
  40fb0c:	fninit 
  40fb0e:	xchg   ebx,eax
  40fb0f:	pop    ecx
  40fb10:	and    ebx,DWORD PTR [ebp-0x12a81d75]
  40fb16:	xor    al,0x32
  40fb18:	push   ebp
  40fb19:	enter  0xf279,0xd1
  40fb1d:	mov    BYTE PTR [eax-0x1431a4b9],cl
  40fb23:	push   0x7e
  40fb25:	inc    esi
  40fb26:	sub    al,0x2f
  40fb28:	inc    BYTE PTR [eax+0x41]
  40fb2b:	mov    eax,ds:0xa0b96d47
  40fb30:	js     0x40fabd
  40fb32:	dec    ebp
  40fb33:	or     BYTE PTR [edi],cl
  40fb35:	mov    bh,0xc
  40fb37:	xchg   ecx,eax
  40fb38:	xor    DWORD PTR ds:0x42a16f,0x6377
  40fb42:	xor    ecx,0x8a96
  40fb48:	sub    DWORD PTR ds:0x42a16f,0x7d05
  40fb52:	add    ecx,edi
  40fb54:	mov    DWORD PTR ds:0x42a1a7,edi
  40fb5a:	mov    edi,DWORD PTR [ebp-0xc]
  40fb5d:	inc    DWORD PTR ds:0x42a12b
  40fb63:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  40fb6a:	inc    edx
  40fb6b:	mov    ecx,DWORD PTR [ebp-0x10]
  40fb6e:	mov    DWORD PTR ds:0x42a1af,0x4619
  40fb78:	cmp    edx,ecx
  40fb7a:	jne    0x40d759
  40fb80:	mov    ecx,DWORD PTR [ebp-0x18]
  40fb83:	and    DWORD PTR ds:0x42a1a7,0x0
  40fb8d:	jmp    0x40fb9f
  40fb92:	mov    edi,DWORD PTR ds:0x42a1a7
  40fb98:	inc    edi
  40fb99:	mov    DWORD PTR ds:0x42a1a7,edi
  40fb9f:	cmp    DWORD PTR ds:0x42a1a7,0x1c
  40fba6:	jae    0x40fbd1
  40fbac:	cmp    DWORD PTR ds:0x42a1a7,0x20
  40fbb3:	jg     0x40fbd1
  40fbb9:	jmp    0x40fbcc
  40fbbe:	push   0x42a1d3
  40fbc3:	push   DWORD PTR [ebp-0x10]
  40fbc6:	call   DWORD PTR ds:0x42a2d3
  40fbcc:	jmp    0x40fb92
  40fbd1:	mov    edx,DWORD PTR [ebp+0x10]
  40fbd4:	or     edi,0x72f1
  40fbda:	xor    ecx,eax
  40fbdc:	add    ecx,esi
  40fbde:	mov    DWORD PTR [edx],ecx
  40fbe0:	adc    DWORD PTR ds:0x42a17b,0xfda
  40fbea:	mov    ecx,DWORD PTR [ebp-0x18]
  40fbed:	and    DWORD PTR ds:0x42a127,ecx
  40fbf3:	xor    ecx,eax
  40fbf5:	add    ecx,esi
  40fbf7:	mov    DWORD PTR [ebp-0xc],ecx
  40fbfa:	mov    DWORD PTR [ebp+0x8],0xf89c85b9
  40fc01:	mov    ecx,DWORD PTR ds:0x42a12f
  40fc07:	xor    ecx,DWORD PTR ds:0x42a13b
  40fc0d:	mov    DWORD PTR ds:0x42a12f,ecx
  40fc13:	mov    DWORD PTR [ebp-0x14],0xf89c8589
  40fc1a:	and    edi,DWORD PTR ds:0x42a13f
  40fc20:	mov    DWORD PTR [ebp-0x10],0xf89c95b9
  40fc27:	and    DWORD PTR ds:0x42a13b,0x0
  40fc31:	mov    ecx,DWORD PTR ds:0x42a13b
  40fc37:	inc    ecx
  40fc38:	mov    DWORD PTR ds:0x42a13b,ecx
  40fc3e:	cmp    DWORD PTR ds:0x42a13b,0x24
  40fc45:	jbe    0x40fc63
  40fc4b:	jmp    0x40fc56
  40fc50:	call   DWORD PTR ds:0x42a293
  40fc56:	cmp    DWORD PTR ds:0x42a13b,0x15
  40fc5d:	jb     0x40fc31
  40fc63:	mov    ecx,DWORD PTR [ebp-0x14]
  40fc66:	sbb    DWORD PTR ds:0x42a1bb,ebx
  40fc6c:	mov    DWORD PTR [ebp+0x8],ecx
  40fc6f:	and    edi,DWORD PTR ds:0x42a17f
  40fc75:	mov    ecx,DWORD PTR [ebp+0x8]
  40fc78:	adc    edi,0x3f37
  40fc7e:	xor    ecx,eax
  40fc80:	xor    DWORD PTR ds:0x42a18b,edx
  40fc86:	add    ecx,esi
  40fc88:	mov    edi,0x2513
  40fc8d:	mov    ecx,0x242ebcd
  40fc92:	mov    edi,0xf641bcc
  40fc97:	mov    DWORD PTR ds:0x42a163,0x3833
  40fca1:	je     0x41b544
  40fca7:	movzx  edx,WORD PTR ds:0x42a143
  40fcae:	or     DWORD PTR ds:0x42a1bb,edx
  40fcb4:	mov    edx,DWORD PTR [ebp+0x8]
  40fcb7:	or     DWORD PTR ds:0x42a12b,edi
  40fcbd:	mov    ebx,DWORD PTR [ebp-0x8]
  40fcc0:	adc    DWORD PTR ds:0x42a18f,0x42a177
  40fcca:	xor    edx,eax
  40fccc:	mov    DWORD PTR ds:0x42a1ab,0x2aa1
  40fcd6:	xor    ebx,eax
  40fcd8:	sub    edx,ebx
  40fcda:	neg    ebx
  40fcdc:	sub    edx,esi
  40fcde:	adc    ebx,DWORD PTR ds:0x42a16b
  40fce4:	xor    edx,eax
  40fce6:	xor    ebx,ebx
  40fce8:	or     ebx,DWORD PTR ds:0x42a187
  40fcee:	sub    DWORD PTR ds:0x42a147,ebx
  40fcf4:	mov    DWORD PTR [ebp+0x8],edx
  40fcf7:	mov    edx,DWORD PTR [ebp+0x8]
  40fcfa:	and    DWORD PTR ds:0x42a13f,ebx
  40fd00:	mov    ebx,DWORD PTR [ebp-0x58]
  40fd03:	sub    DWORD PTR ds:0x42a17f,0x42a1b3
  40fd0d:	add    edx,0x5708fa
  40fd13:	sub    DWORD PTR ds:0x42a16f,0x2df9
  40fd1d:	imul   edx,ebx
  40fd20:	and    DWORD PTR ds:0x42a14f,0x0
  40fd2a:	jmp    0x40fd3c
  40fd2f:	mov    ebx,DWORD PTR ds:0x42a14f
  40fd35:	inc    ebx
  40fd36:	mov    DWORD PTR ds:0x42a14f,ebx
  40fd3c:	cmp    DWORD PTR ds:0x42a14f,0x1e
  40fd43:	jae    0x40fd94
  40fd49:	cmp    DWORD PTR ds:0x42a14f,0x9
  40fd50:	jbe    0x40fd94
  40fd56:	jmp    0x40fd73
  40fd5b:	push   0x5a7a
  40fd60:	push   DWORD PTR [ebp-0x1c]
  40fd63:	push   0x4290f0
  40fd68:	push   0x400000
  40fd6d:	call   DWORD PTR ds:0x42a297
  40fd73:	cmp    DWORD PTR ds:0x42a14f,0x8
  40fd7a:	jne    0x40fd8f
  40fd80:	xor    ebx,ebx
  40fd82:	or     ebx,DWORD PTR ds:0x42a14f
  40fd88:	inc    ebx
  40fd89:	mov    DWORD PTR ds:0x42a14f,ebx
  40fd8f:	jmp    0x40fd2f
  40fd94:	mov    DWORD PTR [ebp-0x58],edx
  40fd97:	mov    DWORD PTR ds:0x42a1a3,0x13
  40fda1:	cmp    DWORD PTR ds:0x42a1a3,0x0
  40fda8:	je     0x40fdd8
  40fdae:	cmp    DWORD PTR ds:0x42a1a3,0x14
  40fdb5:	jb     0x40fdd8
  40fdbb:	jmp    0x40fdc6
  40fdc0:	call   DWORD PTR ds:0x42a29b
  40fdc6:	mov    edx,DWORD PTR ds:0x42a1a3
  40fdcc:	dec    edx
  40fdcd:	mov    DWORD PTR ds:0x42a1a3,edx
  40fdd3:	jmp    0x40fda1
  40fdd8:	mov    edx,DWORD PTR [ebp+0x8]
  40fddb:	xor    DWORD PTR ds:0x42a167,0x6c23
  40fde5:	mov    ebx,DWORD PTR [ebp-0x54]
  40fde8:	sbb    DWORD PTR ds:0x42a183,0x57b9
  40fdf2:	add    edx,0x64f89c
  40fdf8:	or     edx,ebx
  40fdfa:	movzx  ebx,WORD PTR ds:0x42a187
  40fe01:	sbb    DWORD PTR ds:0x42a1b3,ebx
  40fe07:	mov    DWORD PTR [ebp-0x54],edx
  40fe0a:	mov    edx,DWORD PTR [ebp+0x8]
  40fe0d:	and    DWORD PTR ds:0x42a1af,0x0
  40fe17:	xor    ebx,ebx
  40fe19:	xor    ebx,DWORD PTR ds:0x42a1af
  40fe1f:	inc    ebx
  40fe20:	mov    DWORD PTR ds:0x42a1af,ebx
  40fe26:	cmp    DWORD PTR ds:0x42a1af,0x7
  40fe2d:	jge    0x40fe75
  40fe33:	jmp    0x40fe4e
  40fe38:	push   0x45bb
  40fe3d:	push   DWORD PTR [ebp-0x20]
  40fe40:	push   0x42923d
  40fe45:	push   DWORD PTR [ebp-0x18]
  40fe48:	call   DWORD PTR ds:0x42a2a3
  40fe4e:	cmp    DWORD PTR ds:0x42a1af,0x6
  40fe55:	jne    0x40fe68
  40fe5b:	mov    ebx,DWORD PTR ds:0x42a1af
  40fe61:	inc    ebx
  40fe62:	mov    DWORD PTR ds:0x42a1af,ebx
  40fe68:	cmp    DWORD PTR ds:0x42a1af,0x14
  40fe6f:	jb     0x40fe17
  40fe75:	mov    ebx,DWORD PTR [ebp-0x50]
  40fe78:	add    edx,ecx
  40fe7a:	adc    DWORD PTR ds:0x42a167,0x1f0e
  40fe84:	xor    edx,ebx
  40fe86:	and    DWORD PTR ds:0x42a17b,0x42a1a7
  40fe90:	mov    DWORD PTR [ebp-0x50],edx
  40fe93:	and    DWORD PTR ds:0x42a1a3,0x1c1b
  40fe9d:	mov    edx,DWORD PTR [ebp+0x8]
  40fea0:	mov    ebx,DWORD PTR [ebp-0x4c]
  40fea3:	sbb    DWORD PTR ds:0x42a177,0x5e0b
  40fead:	add    edx,edi
  40feaf:	and    edx,ebx
  40feb1:	xor    DWORD PTR ds:0x42a12f,ecx
  40feb7:	mov    DWORD PTR [ebp-0x4c],edx
  40feba:	and    DWORD PTR ds:0x42a16f,0x0
  40fec4:	jmp    0x40fed6
  40fec9:	mov    edx,DWORD PTR ds:0x42a16f
  40fecf:	inc    edx
  40fed0:	mov    DWORD PTR ds:0x42a16f,edx
  40fed6:	cmp    DWORD PTR ds:0x42a16f,0x1b
  40fedd:	jae    0x40ff00
  40fee3:	cmp    DWORD PTR ds:0x42a16f,0x1e
  40feea:	jge    0x40ff00
  40fef0:	jmp    0x40fefb
  40fef5:	call   DWORD PTR ds:0x42a2a7
  40fefb:	jmp    0x40fec9
  40ff00:	mov    edx,DWORD PTR [ebp+0x8]
  40ff03:	mov    ebx,DWORD PTR [ebp-0x48]
  40ff06:	not    DWORD PTR ds:0x42a183
  40ff0c:	lea    edx,[ebx+edx*1+0x241fcdf]
  40ff13:	add    ebx,DWORD PTR ds:0x42a1c7
  40ff19:	mov    DWORD PTR [ebp-0x48],edx
  40ff1c:	mov    DWORD PTR ds:0x42a19b,0x1d36
  40ff26:	mov    edx,DWORD PTR [ebp+0x8]
  40ff29:	mov    ebx,0xfa5e1530
  40ff2e:	sub    ebx,edx
  40ff30:	mov    DWORD PTR ds:0x42a1bf,0x1f
  40ff3a:	cmp    DWORD PTR ds:0x42a1bf,0x0
  40ff41:	je     0x40ff82
  40ff47:	cmp    DWORD PTR ds:0x42a1bf,0x22
  40ff4e:	jge    0x40ff82
  40ff54:	jmp    0x40ff6e
  40ff59:	push   0x84e5
  40ff5e:	push   0x42a137
  40ff63:	push   0x6ce8
  40ff68:	call   DWORD PTR ds:0x42a2ab
  40ff6e:	xor    edx,edx
  40ff70:	or     edx,DWORD PTR ds:0x42a1bf
  40ff76:	dec    edx
  40ff77:	mov    DWORD PTR ds:0x42a1bf,edx
  40ff7d:	jmp    0x40ff3a
  40ff82:	add    ebx,DWORD PTR [ebp-0x44]
  40ff85:	mov    DWORD PTR [ebp-0x44],ebx
  40ff88:	mov    edx,DWORD PTR [ebp+0x8]
  40ff8b:	adc    DWORD PTR ds:0x42a16b,0x42a12f
  40ff95:	xor    edx,eax
  40ff97:	adc    DWORD PTR ds:0x42a163,0x5ee0
  40ffa1:	add    edx,esi
  40ffa3:	jne    0x40fca7
  40ffa9:	mov    DWORD PTR ds:0x42a147,0x481d
  40ffb3:	jmp    0x41b544
  40ffb8:	mov    edx,DWORD PTR [ebp-0xc]
  40ffbb:	adc    DWORD PTR ds:0x42a137,edi
  40ffc1:	sub    edx,esi
  40ffc3:	xor    ebx,ebx
  40ffc5:	or     ebx,DWORD PTR ds:0x42a197
  40ffcb:	or     ebx,DWORD PTR ds:0x42a137
  40ffd1:	mov    DWORD PTR ds:0x42a197,ebx
  40ffd7:	xor    edx,eax
  40ffd9:	mov    DWORD PTR [ebp-0x5c],edx
  40ffdc:	mov    edx,DWORD PTR [ebp-0x10]
  40ffdf:	sbb    DWORD PTR ds:0x42a143,0x42a15b
  40ffe9:	mov    ebx,DWORD PTR [ebp-0x8]
  40ffec:	sub    DWORD PTR ds:0x42a193,0x2e82
  40fff6:	xor    edx,eax
  40fff8:	xor    ebx,eax
  40fffa:	mov    DWORD PTR ds:0x42a177,0x1dc1
  410004:	sub    edx,ebx
  410006:	and    DWORD PTR ds:0x42a1c3,0x42a17b
  410010:	sub    edx,esi
  410012:	xor    edx,eax
  410014:	mov    DWORD PTR ds:0x42a18b,0x3cb9
  41001e:	mov    DWORD PTR [ebp-0x10],edx
  410021:	mov    edx,DWORD PTR [ebp-0x14]
  410024:	mov    DWORD PTR [ebp+0x8],edx
  410027:	jmp    0x412514
  41002c:	mov    edx,DWORD PTR [ebp+0x8]
  41002f:	mov    ebx,DWORD PTR [ebp-0x8]
  410032:	xor    DWORD PTR ds:0x42a1cb,0x42a163
  41003c:	xor    edx,eax
  41003e:	adc    DWORD PTR ds:0x42a16b,0x42a177
  410048:	xor    ebx,eax
  41004a:	sbb    DWORD PTR ds:0x42a1c3,0x42a1af
  410054:	sub    edx,ebx
  410056:	or     DWORD PTR ds:0x42a1af,edx
  41005c:	sub    edx,esi
  41005e:	and    DWORD PTR ds:0x42a133,0x0
  410068:	xor    ebx,ebx
  41006a:	xor    ebx,DWORD PTR ds:0x42a133
  410070:	inc    ebx
  410071:	mov    DWORD PTR ds:0x42a133,ebx
  410077:	cmp    DWORD PTR ds:0x42a133,0x5
  41007e:	jbe    0x4100c6
  410084:	jmp    0x41009d
  410089:	push   DWORD PTR [ebp-0x14]
  41008c:	push   DWORD PTR [ebp-0x24]
  41008f:	push   0x52a1
  410094:	push   DWORD PTR [ebp-0x20]
  410097:	call   DWORD PTR ds:0x42a2af
  41009d:	cmp    DWORD PTR ds:0x42a133,0x4
  4100a4:	jne    0x4100b9
  4100aa:	xor    ebx,ebx
  4100ac:	or     ebx,DWORD PTR ds:0x42a133
  4100b2:	inc    ebx
  4100b3:	mov    DWORD PTR ds:0x42a133,ebx
  4100b9:	cmp    DWORD PTR ds:0x42a133,0x16
  4100c0:	jb     0x410068
  4100c6:	xor    edx,eax
  4100c8:	and    DWORD PTR ds:0x42a1c3,0x0
  4100d2:	xor    ebx,ebx
  4100d4:	or     ebx,DWORD PTR ds:0x42a1c3
  4100da:	inc    ebx
  4100db:	mov    DWORD PTR ds:0x42a1c3,ebx
  4100e1:	cmp    DWORD PTR ds:0x42a1c3,0xb
  4100e8:	jbe    0x4124b4
  4100ee:	jmp    0x410108
  4100f3:	push   0x81d2
  4100f8:	push   0x1
  4100fa:	push   0x42a1a7
  4100ff:	push   DWORD PTR [ebp-0x14]
  410102:	call   DWORD PTR ds:0x42a2b3
  410108:	cmp    DWORD PTR ds:0x42a1c3,0xa
  41010f:	jne    0x410122
  410115:	mov    ebx,DWORD PTR ds:0x42a1c3
  41011b:	inc    ebx
  41011c:	mov    DWORD PTR ds:0x42a1c3,ebx
  410122:	cmp    DWORD PTR ds:0x42a1c3,0x18
  410129:	jb     0x4100d2
  41012f:	jmp    0x4124b4
  410134:	or     ah,BYTE PTR [ebp-0x5e]
  410137:	jns    0x4100be
  410139:	mov    ebp,0x52330581
  41013e:	test   al,0xcd
  410140:	push   esi
  410141:	aaa    
  410142:	stos   DWORD PTR es:[edi],eax
  410143:	cmc    
  410144:	data16 scas al,BYTE PTR es:[edi]
  410146:	jp     0x4101c2
  410148:	adc    bl,BYTE PTR [edi+0x7a]
  41014b:	jp     0x410179
  41014d:	fwait
  41014e:	(bad)  
  41014f:	imul   ecx,esi,0xffffff90
  410152:	pop    ebx
  410153:	lods   al,BYTE PTR ds:[esi]
  410154:	(bad)  
  410155:	jb     0x4101ba
  410157:	hlt    
  410158:	imul   BYTE PTR [esi+0x5628f1aa]
  41015e:	test   DWORD PTR [edx],edi
  410160:	arpl   WORD PTR [ecx],dx
  410162:	mov    dl,0x53
  410164:	jne    0x41012f
  410166:	dec    edx
  410167:	xor    DWORD PTR [eax+eiz*2],eax
  41016a:	xchg   ebx,eax
  41016b:	mov    dl,0x1a
  41016d:	xchg   BYTE PTR [ebx],dl
  41016f:	and    eax,0xcf6fed3b
  410174:	jmpw   0x6d7b
  410178:	xchg   ebp,eax
  410179:	sahf   
  41017a:	bound  esi,QWORD PTR [edx]
  41017c:	xor    BYTE PTR [esi],0x49
  41017f:	sbb    eax,edx
  410181:	stos   BYTE PTR es:[edi],al
  410182:	in     eax,0xe9
  410184:	addr16 xchg esi,eax
  410186:	outs   dx,DWORD PTR ds:[esi]
  410187:	cmc    
  410188:	mov    ds:0x52ebc062,eax
  41018d:	pop    esi
  41018e:	sbb    DWORD PTR ds:0xb4ee7fd8,ecx
  410194:	add    DWORD PTR [ebx],0xffffff98
  410197:	or     ah,bl
  410199:	sub    ebp,DWORD PTR [ecx+0x53837ba]
  41019f:	add    eax,0x833f845b
  4101a4:	jne    0x410172
  4101a6:	fs xor al,0x4c
  4101a9:	ret    
  4101aa:	imul   ecx,ebx,0x62cfaa3c
  4101b0:	sub    eax,0xa6822204
  4101b5:	outs   dx,DWORD PTR ds:[esi]
  4101b6:	push   ds
  4101b7:	ret    
  4101b8:	push   edi
  4101b9:	and    BYTE PTR [ebx-0x80],dh
  4101bc:	enter  0xea03,0x69
  4101c0:	push   eax
  4101c1:	push   ebx
  4101c2:	mov    esi,0xb10e5dd1
  4101c7:	jns    0x410153
  4101c9:	inc    edi
  4101ca:	push   cs
  4101cb:	sbb    ch,BYTE PTR [edx]
  4101cd:	inc    ebx
  4101ce:	mov    esi,0xe829154d
  4101d3:	or     BYTE PTR [eax+0x74],ah
  4101d6:	mov    bh,0x39
  4101d8:	pop    eax
  4101d9:	jns    0x4101f5
  4101db:	mov    ebp,0xe4e7c8ae
  4101e0:	and    bh,cl
  4101e2:	jmp    0xf3ff:0xae6b7517
  4101e9:	fdivr  QWORD PTR es:[edx-0x4d]
  4101ed:	outs   dx,BYTE PTR ds:[esi]
  4101ee:	push   edi
  4101ef:	push   0x476e3ff2
  4101f4:	mov    dl,0xde
  4101f6:	out    dx,eax
  4101f7:	scas   al,BYTE PTR es:[edi]
  4101f8:	push   esp
  4101f9:	dec    ebx
  4101fa:	loop   0x410246
  4101fc:	adc    ah,bl
  4101fe:	inc    ebp
  4101ff:	jne    0x4101c2
  410201:	cld    
  410202:	dec    ebx
  410203:	arpl   WORD PTR [ecx-0xbc9a3f2],bp
  410209:	enter  0x75d6,0x84
  41020d:	inc    edi
  41020e:	sbb    BYTE PTR [eax+0x79],dh
  410211:	pop    edi
  410212:	add    al,0xd8
  410214:	outs   dx,DWORD PTR ds:[esi]
  410215:	pop    ss
  410216:	stos   DWORD PTR es:[edi],eax
  410217:	fwait
  410218:	sub    dl,cl
  41021a:	xor    ah,BYTE PTR [ecx-0x792bb7bd]
  410220:	add    eax,0x92231819
  410225:	dec    ebp
  410226:	jne    0x410279
  410228:	and    ebp,DWORD PTR [edx+esi*4+0x53b8b01f]
  41022f:	arpl   ax,cx
  410231:	mov    BYTE PTR [eax+ecx*2],ch
  410234:	or     BYTE PTR [eax-0x5df8305],dh
  41023a:	out    0xed,al
  41023c:	aad    0x84
  41023e:	and    bh,BYTE PTR [ebx]
  410240:	push   edx
  410241:	data16 jle 0x41021b
  410244:	shl    BYTE PTR [eax+ebx*2],1
  410247:	test   ecx,esi
  410249:	xor    DWORD PTR [ebx+0x3416d5f5],esp
  41024f:	leave  
  410250:	adc    edi,edx
  410252:	pop    es
  410253:	xchg   BYTE PTR [ebp+0x3c169671],al
  410259:	(bad)  
  41025a:	leave  
  41025b:	daa    
  41025c:	push   esi
  41025d:	inc    esp
  41025e:	ret    0xe352
  410261:	add    ecx,edi
  410263:	sub    bh,BYTE PTR [ecx+0x479d5194]
  410269:	or     bl,ah
  41026b:	xor    al,BYTE PTR [ecx]
  41026d:	pop    edi
  41026e:	or     DWORD PTR [ebx+0x64],ebp
  410271:	idiv   BYTE PTR [eax+0x66]
  410274:	cwde   
  410275:	in     eax,0x77
  410277:	cs and eax,0x4050faf8
  41027d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41027e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41027f:	cmp    BYTE PTR ds:0xff2bd249,cl
  410285:	(bad)  
  410286:	data16 or bh,dh
  410289:	and    ebx,DWORD PTR [esi]
  41028b:	pop    esp
  41028c:	push   es
  41028d:	mov    ebp,0xc761a059
  410292:	sbb    ebp,DWORD PTR [edx+0x1ec6d3a7]
  410298:	arpl   cx,bx
  41029a:	or     ebx,edi
  41029c:	in     al,0x27
  41029e:	nop
  41029f:	pop    esi
  4102a0:	sar    BYTE PTR ds:0x70783154,0xdd
  4102a7:	pop    esi
  4102a8:	push   edi
  4102a9:	mov    ecx,0x4771b1df
  4102ae:	popa   
  4102af:	xchg   ebp,eax
  4102b0:	jmp    0x1f02063c
  4102b5:	mov    eax,0x6b8b2bed
  4102ba:	mov    al,ds:0x87cff775
  4102bf:	lock xor BYTE PTR [edi-0xa],ch
  4102c3:	clc    
  4102c4:	sub    al,0x7e
  4102c6:	xchg   edx,eax
  4102c7:	jns    0x4102f9
  4102c9:	jmp    esi
  4102cb:	adc    eax,0x46b8e18
  4102d0:	pop    edx
  4102d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4102d2:	pusha  
  4102d3:	mov    dl,0xb5
  4102d5:	enter  0x26c7,0xa2
  4102d9:	adc    al,0x9c
  4102db:	sub    BYTE PTR [edx+0x12a39308],ah
  4102e1:	mul    BYTE PTR [ebp+eiz*4-0x7]
  4102e5:	in     eax,dx
  4102e6:	jp     0x4102bc
  4102e8:	lock jge 0x410351
  4102eb:	sub    al,ch
  4102ed:	comiss xmm2,DWORD PTR [edx+0x4e68e083]
  4102f4:	aam    0x3f
  4102f6:	push   0xffffff81
  4102f8:	enter  0x6013,0xd6
  4102fc:	retf   0xdaa2
  4102ff:	mov    ah,0x3a
  410301:	or     edi,ebp
  410303:	mov    ecx,0x59a0d9a9
  410308:	mov    cl,0x82
  41030a:	or     edx,DWORD PTR [edi+0x7b]
  41030d:	fisub  DWORD PTR [ebx]
  41030f:	repnz std 
  410311:	iret   
  410312:	cld    
  410313:	imul   ebx,esp,0xd9e00d71
  410319:	pop    esp
  41031a:	mov    ecx,0x491fd37e
  41031f:	aaa    
  410320:	lds    edi,FWORD PTR [ecx]
  410322:	cld    
  410323:	fld    QWORD PTR [ebp+0xa9d1ca0]
  410329:	int    0x1b
  41032b:	or     BYTE PTR [eax-0x6c],0x87
  41032f:	and    esi,DWORD PTR [bx+si-0xc]
  410333:	push   0xffffffce
  410335:	cli    
  410336:	or     dl,BYTE PTR [edi-0x60a0cb5e]
  41033c:	sahf   
  41033d:	pop    ebp
  41033e:	icebp  
  41033f:	mov    ebx,0x20b6d49b
  410344:	sub    BYTE PTR [eax+edi*1-0x59],bl
  410348:	js     0x410313
  41034a:	es (bad) 
  41034c:	fadd   QWORD PTR [eax]
  41034e:	or     eax,0x745d095a
  410353:	inc    ecx
  410354:	seta   BYTE PTR [edi+esi*2]
  410358:	adc    edi,0xffffff9d
  41035b:	lods   al,BYTE PTR ds:[esi]
  41035c:	adc    eax,0x3d870ce
  410361:	aas    
  410362:	mov    WORD PTR [esi-0x47f0f270],es
  410368:	mov    al,0xef
  41036a:	mov    ah,0xd1
  41036c:	enter  0x9f57,0x6b
  410370:	mov    cl,0xfa
  410372:	inc    ebp
  410373:	and    eax,0xf265966c
  410378:	les    edx,FWORD PTR [edi-0x13709411]
  41037e:	jmp    0xd5d90cd9
  410383:	icebp  
  410384:	mov    edi,edi
  410386:	and    DWORD PTR [ebp-0x336825aa],0x65
  41038d:	shr    DWORD PTR [eax+0xebb505d],0x40
  410394:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410395:	pusha  
  410396:	ficom  DWORD PTR [esi-0x71]
  410399:	adc    ebp,edx
  41039b:	push   esp
  41039c:	or     al,0x88
  41039e:	clc    
  41039f:	push   ecx
  4103a0:	in     eax,0x9d
  4103a2:	test   BYTE PTR [ebp+0x1bfc9d09],dl
  4103a8:	mov    ebp,0xc413c90c
  4103ad:	das    
  4103ae:	sbb    eax,0x5e932ffc
  4103b3:	in     al,dx
  4103b4:	out    dx,eax
  4103b5:	(bad)  
  4103b6:	push   0x6f524ece
  4103bb:	sub    BYTE PTR [esi+0x119bd693],dh
  4103c1:	and    dl,dl
  4103c3:	jns    0x410430
  4103c5:	jmp    0x99379a20
  4103ca:	shl    bl,0x9c
  4103cd:	imul   edx,DWORD PTR [ebx],0x6f
  4103d0:	or     al,0x22
  4103d2:	xchg   edi,eax
  4103d3:	pop    es
  4103d4:	leave  
  4103d5:	push   cs
  4103d6:	mov    bl,0xfe
  4103d8:	lods   al,BYTE PTR ds:[esi]
  4103d9:	(bad)  
  4103da:	sbb    edi,edx
  4103dc:	cdq    
  4103dd:	(bad)  
  4103de:	xlat   BYTE PTR ds:[ebx]
  4103df:	fmulp  st(5),st
  4103e1:	(bad)  
  4103e2:	repnz push ds
  4103e4:	rcr    ebp,0x37
  4103e7:	retf   0x1ad4
  4103ea:	xchg   edx,eax
  4103eb:	jno    0x4103f1
  4103ed:	mov    DWORD PTR [ecx],ebp
  4103ef:	adc    edi,ebx
  4103f1:	hlt    
  4103f2:	scas   eax,DWORD PTR es:[edi]
  4103f3:	ds fsubp st(3),st
  4103f6:	imul   esi,DWORD PTR [edi+0x3a5194f9],0x73345611
  410400:	xchg   edi,eax
  410401:	adc    edx,0x1c21ad05
  410407:	aad    0x95
  410409:	loopne 0x41042e
  41040b:	fistp  DWORD PTR [edx+0x4e]
  41040e:	xchg   DWORD PTR [esi],edi
  410410:	mov    ds,esi
  410412:	or     ch,BYTE PTR [edx]
  410414:	cmp    bh,ch
  410416:	sub    BYTE PTR [edi+ebx*4+0xc],0x91
  41041b:	inc    esi
  41041c:	xlat   BYTE PTR ds:[ebx]
  41041d:	push   0x1d
  41041f:	inc    edx
  410420:	scas   eax,DWORD PTR es:[edi]
  410421:	repz inc esi
  410423:	fst    DWORD PTR [ebx-0x418695d5]
  410429:	xchg   ebp,eax
  41042a:	sbb    edi,DWORD PTR [esi+0x4d0463e9]
  410430:	mov    bl,0xe1
  410432:	out    0x1f,al
  410434:	sub    edx,DWORD PTR [edx+0x16aca585]
  41043a:	inc    ebp
  41043b:	and    bh,BYTE PTR [edi+0x5473cce9]
  410441:	ins    BYTE PTR es:[edi],dx
  410442:	push   ebx
  410443:	or     al,0x8d
  410446:	int    0xec
  410448:	aaa    
  410449:	push   0xffffff9d
  41044b:	sbb    BYTE PTR [edi-0x312ae96c],bh
  410451:	and    al,0x32
  410453:	cld    
  410454:	dec    edi
  410455:	shl    BYTE PTR [ecx+0x6e],cl
  410458:	cmp    BYTE PTR [eax],dh
  41045a:	stos   DWORD PTR es:[edi],eax
  41045b:	xchg   edi,eax
  41045c:	scas   eax,DWORD PTR es:[edi]
  41045d:	mov    ecx,0xf4a53fab
  410462:	lock add esp,esp
  410465:	jl     0x410488
  410467:	pop    eax
  410468:	inc    ebp
  410469:	lahf   
  41046a:	push   0xc0e06c62
  41046f:	dec    esp
  410470:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410471:	(bad)  
  410472:	xchg   DWORD PTR [eax],edi
  410474:	in     al,dx
  410475:	loop   0x41043e
  410477:	push   ecx
  410478:	out    0x7d,al
  41047a:	fcmovb st,st(4)
  41047c:	add    bh,bl
  41047e:	gs sbb edi,edx
  410481:	sbb    dh,al
  410483:	jo     0x4104ea
  410485:	jmp    0x1b826ca9
  41048a:	(bad)  
  41048c:	xchg   esp,eax
  41048d:	adc    BYTE PTR [ebx-0x4dd42388],0x91
  410494:	cmp    al,0x4f
  410496:	hlt    
  410497:	fcomp  st(3)
  410499:	(bad)  
  41049a:	mov    ecx,0x82eb50d7
  41049f:	arpl   di,si
  4104a1:	cmp    eax,0xd502d662
  4104a6:	pop    esp
  4104a7:	push   ebp
  4104a8:	jb     0x410526
  4104aa:	jo     0x410485
  4104ac:	jo     0x4104d1
  4104ae:	loop   0x410513
  4104b0:	mov    DWORD PTR [ebp+edi*1+0x54d1b394],ebx
  4104b7:	shl    DWORD PTR [esp+eiz*4],cl
  4104ba:	sub    eax,0xbbc47b95
  4104bf:	xchg   BYTE PTR [edi],dl
  4104c1:	dec    ecx
  4104c2:	icebp  
  4104c3:	mov    ah,0xa6
  4104c5:	(bad)  
  4104c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104c7:	rcl    eax,0xb0
  4104ca:	ins    DWORD PTR es:[edi],dx
  4104cb:	and    al,0x7
  4104cd:	pop    edx
  4104ce:	mov    DWORD PTR [eax],ebx
  4104d0:	(bad)  
  4104d4:	lods   eax,DWORD PTR ds:[esi]
  4104d5:	push   cs
  4104d6:	or     eax,0xb16c540f
  4104db:	in     al,dx
  4104dc:	mov    ds:0xa6a4664a,al
  4104e1:	repz add ebx,DWORD PTR [ecx]
  4104e4:	call   0x84fe0e83
  4104e9:	adc    eax,0x11d49210
  4104ee:	(bad)  
  4104ef:	clc    
  4104f0:	je     0x4104d5
  4104f2:	test   ah,bl
  4104f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104f5:	jne    0x4104ee
  4104f7:	push   esp
  4104f8:	shl    DWORD PTR [ebp-0x6d7b33be],cl
  4104fe:	add    al,0xae
  410500:	cwde   
  410501:	dec    ebp
  410502:	pop    es
  410503:	xor    ecx,DWORD PTR [edx+0x45]
  410506:	push   0x73
  410508:	push   ss
  410509:	xchg   esi,eax
  41050a:	sub    dl,BYTE PTR [ecx]
  41050c:	or     BYTE PTR [esi],dh
  41050e:	push   ss
  41050f:	ins    BYTE PTR es:[edi],dx
  410510:	loop   0x4104aa
  410512:	pop    ebp
  410513:	sar    ah,0x95
  410516:	out    dx,eax
  410517:	push   esp
  410518:	sub    BYTE PTR [edx],dl
  41051a:	pop    esi
  41051b:	ret    0x855
  41051e:	mov    ds:0xa4c346e6,eax
  410523:	arpl   WORD PTR [edi-0x1c],bp
  410526:	jmp    0x2ddd:0x97ced9c5
  41052d:	jle    0x410502
  41052f:	jo     0x410528
  410531:	ja     0x4104d2
  410533:	out    0xd7,eax
  410535:	sti    
  410536:	add    eax,0xc8f54a2d
  41053b:	add    DWORD PTR [edi-0x19347f1b],0x28
  410542:	test   eax,0x3ad9091
  410547:	ret    0x1d5d
  41054a:	jmp    0xf96b2231
  41054f:	fisubr WORD PTR [edi]
  410551:	arpl   WORD PTR [esi+edx*8],ax
  410554:	ins    BYTE PTR es:[edi],dx
  410555:	stos   BYTE PTR es:[edi],al
  410556:	jmp    0x6821:0xcac86970
  41055d:	xor    esp,eax
  41055f:	dec    eax
  410560:	xchg   DWORD PTR [esi],edx
  410562:	loope  0x410545
  410564:	pop    es
  410565:	pop    ebp
  410566:	scas   al,BYTE PTR es:[edi]
  410567:	(bad)  
  410568:	fsubr  st(0),st
  41056a:	ret    0xb921
  41056d:	fmul   DWORD PTR [edi+0xd88e4b2]
  410573:	and    esi,DWORD PTR [edi-0x28]
  410576:	dec    ecx
  410577:	fisub  DWORD PTR [edi+0x7b]
  41057a:	mov    ch,0xe8
  41057c:	fidivr WORD PTR [edi+0x1c]
  41057f:	add    ebx,DWORD PTR [esi]
  410581:	stos   DWORD PTR es:[edi],eax
  410582:	dec    ecx
  410583:	mov    ds:0x788e4cd9,al
  410588:	call   0xfe85f68f
  41058d:	adc    al,0xff
  41058f:	lods   al,BYTE PTR ds:[esi]
  410590:	mov    ch,0x49
  410592:	imul   edx
  410594:	xlat   BYTE PTR ds:[ebx]
  410595:	sar    DWORD PTR [esi+0x28],cl
  410598:	dec    esp
  410599:	or     ecx,DWORD PTR [edx+eiz*8+0x28]
  41059d:	adc    ebx,DWORD PTR [eax+0x6e]
  4105a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4105a1:	ins    DWORD PTR es:[edi],dx
  4105a2:	ficom  WORD PTR [edi+0x5a048eef]
  4105a8:	mov    ebx,0x7294efa
  4105ad:	xlat   BYTE PTR ds:[ebx]
  4105ae:	inc    eax
  4105af:	or     DWORD PTR ds:0x61c6d0d5,edi
  4105b5:	jge    0x4105b3
  4105b7:	pop    ss
  4105b8:	jne    0x4105be
  4105ba:	and    DWORD PTR [ebx+ecx*2-0xd9c51de],0x849b4ed3
  4105c5:	aad    0x52
  4105c7:	pop    eax
  4105c8:	addr16 dec ebx
  4105ca:	imul   esi,eax,0xffffffb1
  4105cd:	and    esi,edi
  4105cf:	repz sbb ebx,DWORD PTR [edi+esi*2+0x61c8827d]
  4105d7:	or     bl,BYTE PTR [ebx+0x4d6f44ee]
  4105dd:	aas    
  4105de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105df:	xchg   ebx,eax
  4105e0:	gs push ebx
  4105e2:	out    0x53,al
  4105e4:	in     al,0xf
  4105e6:	add    ah,ch
  4105e8:	jmp    0x642e52fa
  4105ed:	jns    0x410613
  4105ef:	adc    ah,BYTE PTR [ecx]
  4105f1:	xchg   edi,eax
  4105f2:	pusha  
  4105f3:	aas    
  4105f4:	pop    esp
  4105f5:	in     eax,dx
  4105f6:	aas    
  4105f7:	fcomp  DWORD PTR [ebx]
  4105f9:	pop    ebp
  4105fa:	push   es
  4105fb:	es not edx
  4105fe:	pop    esp
  4105ff:	scas   eax,DWORD PTR es:[edi]
  410600:	mov    DWORD PTR [ecx],eax
  410602:	es or  al,0x36
  410605:	out    dx,eax
  410606:	mov    eax,ds:0x84247415
  41060b:	loope  0x41066a
  41060d:	ja     0x410627
  41060f:	repz bound edx,QWORD PTR ds:[esi]
  410613:	icebp  
  410614:	test   DWORD PTR [ebx],edx
  410616:	sub    DWORD PTR [ebx+0x1a],esi
  410619:	and    al,0xa5
  41061b:	ffree  st(7)
  41061d:	add    dl,BYTE PTR [esi-0x3a7d86b]
  410623:	jae    0x4105ba
  410625:	mov    bl,0xb1
  410627:	rcl    DWORD PTR [edi],1
  410629:	push   edx
  41062a:	adc    al,0x89
  41062c:	or     ecx,DWORD PTR [ebx-0x5]
  41062f:	sar    dh,0xad
  410632:	xchg   DWORD PTR [ebx+0x4d],edx
  410635:	xchg   ebx,eax
  410636:	inc    esp
  410637:	adc    BYTE PTR [edx],bh
  410639:	aam    0x45
  41063b:	adc    eax,0x1bb60a90
  410640:	dec    ebp
  410641:	fisttp WORD PTR [eax+0x73829442]
  410647:	jmp    0xc72d3616
  41064c:	mov    WORD PTR [si-0x63],gs
  410650:	cmp    al,0x55
  410652:	cmp    DWORD PTR [ebp-0x32],ecx
  410655:	xchg   esi,eax
  410656:	rep outs dx,BYTE PTR ds:[esi]
  410658:	jp     0x4106c6
  41065a:	or     bh,BYTE PTR [ecx+0x2544ec9a]
  410660:	sahf   
  410661:	scas   al,BYTE PTR es:[edi]
  410662:	sbb    dh,dh
  410664:	or     al,0x15
  410666:	cli    
  410667:	std    
  410668:	ror    ch,1
  41066a:	mov    BYTE PTR [ecx+0x38],0x38
  41066e:	push   es
  41066f:	push   0x38
  410671:	fdiv   DWORD PTR [ebx]
  410673:	add    al,0xf2
  410675:	xor    BYTE PTR [edx+0x6b],0xac
  410679:	es jb  0x4106e1
  41067c:	dec    esi
  41067d:	mov    ecx,0x626ccd3f
  410682:	and    eax,0x93b308d3
  410687:	mov    edx,0xc8ae0e5c
  41068c:	mov    al,ds:0xcaba234a
  410691:	sbb    DWORD PTR [esi],esi
  410693:	pop    ss
  410694:	int3   
  410695:	xor    edx,esi
  410697:	xor    eax,0x73b6143a
  41069c:	and    eax,0x72592749
  4106a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106a2:	je     0x41064b
  4106a4:	push   esp
  4106a5:	retf   
  4106a6:	push   0xffffff96
  4106a8:	inc    ecx
  4106a9:	pop    ss
  4106aa:	xchg   DWORD PTR [ecx-0x5598b8d3],esp
  4106b0:	xor    ecx,DWORD PTR [ebx-0x68]
  4106b3:	ret    
  4106b4:	mov    eax,0xc0947f93
  4106b9:	scas   eax,DWORD PTR es:[edi]
  4106ba:	sub    BYTE PTR [esi],0x89
  4106bd:	dec    ebp
  4106be:	xor    esi,esp
  4106c0:	mov    bh,0x33
  4106c2:	jae    0x410712
  4106c4:	outs   dx,BYTE PTR ds:[esi]
  4106c5:	js     0x41073a
  4106c7:	fs xor al,0x8b
  4106ca:	dec    edx
  4106cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106cc:	hlt    
  4106cd:	jne    0x4106b3
  4106cf:	dec    ecx
  4106d0:	ins    DWORD PTR es:[edi],dx
  4106d1:	push   ebx
  4106d2:	sar    DWORD PTR [ebx],1
  4106d4:	sahf   
  4106d5:	and    ah,bl
  4106d7:	and    BYTE PTR [edx-0x78],dl
  4106da:	pop    edi
  4106db:	or     al,0xa9
  4106dd:	or     eax,0xab7d185
  4106e2:	push   esp
  4106e3:	leave  
  4106e4:	jae    0x410702
  4106e6:	xor    bl,dh
  4106e8:	hlt    
  4106e9:	pop    ss
  4106ea:	dec    eax
  4106eb:	sbb    eax,0xa1fc1f3e
  4106f0:	sub    BYTE PTR [ecx],bh
  4106f2:	or     esi,DWORD PTR [ecx-0x33e5bbea]
  4106f8:	push   cs
  4106f9:	mov    ecx,0x9d0208e9
  4106fe:	scas   eax,DWORD PTR es:[edi]
  4106ff:	sbb    eax,0x620e18f3
  410704:	xlat   BYTE PTR ds:[ebx]
  410705:	(bad)  
  410706:	fidivr DWORD PTR [eax+0x24828071]
  41070c:	lods   al,BYTE PTR ds:[esi]
  41070d:	addr16 jg 0x410692
  410710:	inc    ebp
  410711:	dec    ebp
  410712:	dec    esi
  410713:	aas    
  410714:	lock dec ebp
  410716:	fwait
  410717:	rcl    DWORD PTR [esi],cl
  410719:	aam    0x22
  41071b:	and    eax,0xb7940f11
  410720:	jg     0x4106f7
  410722:	popf   
  410723:	mov    ebp,0xd6add493
  410728:	in     eax,0xb5
  41072a:	push   edx
  41072b:	mov    ebx,0xea021509
  410730:	stos   BYTE PTR es:[edi],al
  410731:	test   al,0x40
  410733:	sub    ebp,DWORD PTR [esp+ecx*4]
  410736:	neg    BYTE PTR ds:0x5f5df8f6
  41073c:	cmp    bh,BYTE PTR [ebp-0x6c059a6]
  410742:	sbb    BYTE PTR es:[ecx+0xf],ch
  410746:	mov    bl,0xb
  410748:	sbb    al,0x77
  41074a:	(bad)  
  41074c:	loop   0x4107ab
  41074e:	and    DWORD PTR [esi],edi
  410750:	inc    ebp
  410751:	mov    esp,0x8945675e
  410756:	add    al,0xab
  410758:	(bad)  
  410759:	ficom  DWORD PTR [ebp+edx*2+0x39]
  41075d:	pop    ds
  41075e:	stc    
  41075f:	xchg   DWORD PTR [esi+ebp*1+0x28],ebx
  410763:	dec    ebx
  410764:	add    DWORD PTR ds:[edx],eax
  410767:	or     edx,DWORD PTR [esi-0x728c4bfb]
  41076d:	xchg   ecx,eax
  41076e:	add    cl,al
  410770:	and    eax,DWORD PTR [edi-0x587a59a1]
  410776:	xor    dh,ch
  410778:	xor    al,0x6d
  41077a:	or     bh,BYTE PTR [esi+edx*1]
  41077d:	mov    edx,0x109748e6
  410782:	(bad)  
  410783:	xor    BYTE PTR [ebp+0x4516f1df],dh
  410789:	or     esp,edx
  41078b:	cli    
  41078c:	fnstsw WORD PTR [esi+0x77e0c8ff]
  410792:	int    0x3
  410794:	jnp    0x410812
  410796:	inc    edx
  410797:	jne    0x4107ab
  410799:	xor    edi,DWORD PTR [esi+0x32094428]
  41079f:	out    0xe2,eax
  4107a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107a2:	cmp    ebx,DWORD PTR [ebx-0x10]
  4107a5:	pop    ebp
  4107a6:	je     0x4107a2
  4107a8:	add    al,0x74
  4107aa:	cld    
  4107ab:	lods   al,BYTE PTR ds:[esi]
  4107ac:	out    0x6e,eax
  4107ae:	aaa    
  4107af:	mov    ah,0x85
  4107b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107b2:	sbb    DWORD PTR [edx],edi
  4107b4:	jmp    0x4107c0
  4107b6:	push   0xffffffa8
  4107b8:	sbb    BYTE PTR [ecx-0x5423e848],ah
  4107be:	sbb    ah,BYTE PTR [ebp+0x3e7acd0d]
  4107c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4107c5:	and    BYTE PTR [esi+0x9c6e5ce],bl
  4107cb:	jb     0x4107d2
  4107cd:	jmp    DWORD PTR [esp+ebx*2+0x48]
  4107d1:	leave  
  4107d2:	imul   BYTE PTR [edx+0x6d]
  4107d5:	in     eax,dx
  4107d6:	dec    esi
  4107d7:	retf   
  4107d8:	jmp    0x410831
  4107da:	and    eax,esi
  4107dc:	lahf   
  4107dd:	jno    0x410782
  4107df:	pop    ebx
  4107e0:	jmp    0x4cfd8aea
  4107e5:	clc    
  4107e6:	(bad)  
  4107e9:	dec    ebx
  4107ea:	inc    esp
  4107eb:	push   edx
  4107ec:	push   ecx
  4107ed:	frstor [esi-0x40]
  4107f0:	in     al,0xc1
  4107f2:	mov    ds:0x2f6cf1b3,eax
  4107f7:	in     al,0x44
  4107f9:	outs   dx,DWORD PTR ds:[esi]
  4107fa:	sbb    al,0x9b
  4107fc:	mov    ds:0x8bdb2e1b,eax
  410801:	cmp    ebp,DWORD PTR [eax-0x51]
  410804:	aaa    
  410805:	sbb    BYTE PTR [edi-0xe8d81a1],cl
  41080b:	ins    DWORD PTR es:[edi],dx
  41080c:	aad    0xc8
  41080e:	in     al,dx
  41080f:	(bad)  [ebp-0x75]
  410812:	push   ss
  410813:	dec    esi
  410814:	into   
  410815:	gs icebp 
  410817:	int    0x8c
  410819:	or     ebx,DWORD PTR [ebp+0x3b738aa7]
  41081f:	inc    edi
  410820:	repnz mov edx,0x1fa0730b
  410826:	scas   eax,DWORD PTR es:[edi]
  410827:	ss add eax,0x8aef0558
  41082d:	sbb    ebp,esi
  41082f:	call   FWORD PTR [ebp+ecx*8+0x78]
  410833:	sahf   
  410834:	and    eax,0x492eff3
  410839:	xor    BYTE PTR [eax+edi*8-0x16],bl
  41083d:	inc    ecx
  41083e:	fs fwait
  410840:	jb     0x4107e2
  410842:	add    ebx,DWORD PTR [edx-0x48abf7c1]
  410848:	mov    ch,0x9e
  41084a:	cld    
  41084b:	cs (bad) 
  41084d:	mov    esp,0x6910810a
  410852:	test   DWORD PTR [esi-0x36b9b08a],esp
  410858:	ins    BYTE PTR es:[edi],dx
  410859:	inc    ebx
  41085a:	jb     0x410818
  41085c:	and    dl,BYTE PTR [ebp-0x67]
  41085f:	mov    cl,0xb8
  410861:	adc    DWORD PTR ds:0x2efa09ea,edx
  410867:	inc    ecx
  410868:	lahf   
  410869:	inc    ecx
  41086a:	repz clc 
  41086c:	mov    edi,0x23ca45
  410871:	ret    0xeffe
  410874:	lods   al,BYTE PTR ds:[esi]
  410875:	scas   al,BYTE PTR es:[edi]
  410876:	ins    BYTE PTR es:[edi],dx
  410877:	fwait
  410878:	adc    BYTE PTR [ebp+0x6335d9d3],cl
  41087e:	push   edi
  41087f:	and    ebx,DWORD PTR [edx]
  410881:	inc    eax
  410882:	add    BYTE PTR [edx],dh
  410884:	mov    fs,WORD PTR [edx+0x62]
  410887:	jbe    0x4108b8
  410889:	lock dec ebp
  41088b:	out    0xfd,eax
  41088d:	push   es
  41088e:	mov    ecx,0x831fa305
  410893:	xchg   DWORD PTR [esi],edi
  410895:	mov    dl,0x2a
  410897:	pop    es
  410898:	push   edx
  410899:	gs fsubr st(0),st
  41089c:	sub    BYTE PTR [edx-0x140aa88a],bl
  4108a2:	push   ds
  4108a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108a4:	or     DWORD PTR [ecx-0x5673811f],esp
  4108aa:	retf   0x7ebc
  4108ad:	xchg   ebx,eax
  4108ae:	push   ds
  4108af:	pop    ss
  4108b0:	push   ds
  4108b1:	scas   al,BYTE PTR es:[edi]
  4108b2:	stc    
  4108b3:	xlat   BYTE PTR ds:[ebx]
  4108b4:	test   BYTE PTR [edi-0x840e36a],ch
  4108ba:	xlat   BYTE PTR ds:[ebx]
  4108bb:	out    dx,al
  4108bc:	in     al,0x76
  4108be:	sub    eax,0x5fbab16e
  4108c3:	xlat   BYTE PTR ds:[ebx]
  4108c4:	es adc dh,0x0
  4108c8:	sub    cl,BYTE PTR es:[edx]
  4108cb:	push   esp
  4108cc:	pop    edi
  4108ce:	xlat   BYTE PTR ds:[ebx]
  4108cf:	inc    esi
  4108d0:	cwde   
  4108d1:	push   ebp
  4108d2:	je     0x4108ac
  4108d4:	in     al,0xae
  4108d6:	addr16 mov ds:0x16ed,al
  4108da:	fwait
  4108db:	outs   dx,BYTE PTR ds:[esi]
  4108dc:	fxch   st(0)
  4108de:	(bad)  
  4108df:	int    0xec
  4108e1:	scas   al,BYTE PTR es:[edi]
  4108e2:	mov    ch,0x54
  4108e4:	out    dx,al
  4108e5:	pop    esp
  4108e6:	mov    ds:0x35d8bd01,eax
  4108eb:	mov    dh,0xd
  4108ed:	loope  0x4108a5
  4108ef:	push   0xffffff93
  4108f1:	sar    DWORD PTR [esp+ecx*1-0x339716c3],1
  4108f8:	push   cs
  4108f9:	lods   al,BYTE PTR ds:[esi]
  4108fa:	and    DWORD PTR [ebx+0x59],esi
  4108fd:	jb     0x4108f0
  4108ff:	xor    edi,DWORD PTR [edx+0x38]
  410902:	cmc    
  410903:	out    0xba,eax
  410905:	jae    0x410921
  410907:	cld    
  410908:	pop    ds
  410909:	ds and eax,0x4e9e7fa0
  41090f:	enter  0x5437,0xc2
  410913:	sbb    eax,0xeee0ea5c
  410918:	retf   0x4256
  41091b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41091c:	xchg   ebx,eax
  41091d:	push   es
  41091e:	or     esi,DWORD PTR ds:0xec0e0228
  410924:	or     al,0xa2
  410926:	out    0x2,al
  410928:	push   eax
  410929:	and    al,0xe4
  41092b:	sti    
  41092c:	and    ah,BYTE PTR [ebx-0x37]
  41092f:	fwait
  410930:	inc    eax
  410931:	inc    edx
  410932:	push   0x2e2ed811
  410937:	push   esi
  410938:	xchg   edi,eax
  410939:	outs   dx,DWORD PTR ds:[esi]
  41093a:	shr    DWORD PTR [ebp+0x76d38e6e],cl
  410940:	adc    ecx,DWORD PTR [eax-0x3d]
  410943:	or     al,0xa2
  410945:	into   
  410946:	pop    es
  410947:	retf   0xf10f
  41094a:	ja     0x410996
  41094c:	shl    BYTE PTR [edx],cl
  41094e:	mov    ecx,0x4db4180b
  410953:	xchg   edx,eax
  410954:	sbb    edi,DWORD PTR [ebp+0x57]
  410957:	shl    DWORD PTR [ecx+eiz*4-0x467e718],cl
  41095e:	cwde   
  41095f:	inc    ebp
  410960:	jbe    0x4109a4
  410962:	xchg   edx,eax
  410963:	mov    ?,WORD PTR [ebx+0x47]
  410966:	hlt    
  410967:	or     al,0xe2
  410969:	adc    BYTE PTR [eax],dh
  41096b:	push   cs
  41096c:	push   edx
  41096d:	mov    ch,0xf0
  41096f:	xchg   esi,eax
  410970:	sub    ebp,DWORD PTR [edx-0x7dde9738]
  410976:	jns    0x4108f8
  410978:	popa   
  410979:	mov    eax,gs:0x3971c625
  41097f:	std    
  410980:	and    al,0x61
  410982:	scas   al,BYTE PTR es:[edi]
  410983:	out    dx,al
  410984:	add    esi,esi
  410986:	sbb    al,0x93
  410988:	in     eax,dx
  410989:	and    al,bl
  41098b:	cwde   
  41098c:	stos   DWORD PTR es:[edi],eax
  41098d:	(bad)  
  41098e:	xor    DWORD PTR [edx],esp
  410990:	pop    ss
  410991:	hlt    
  410992:	and    ebx,esi
  410994:	mov    edi,0x96717c50
  410999:	and    al,BYTE PTR [eax+0x2c5da8ab]
  41099f:	aas    
  4109a0:	push   ds
  4109a1:	aas    
  4109a2:	lock push esp
  4109a4:	jns    0x410a19
  4109a6:	imul   edi,DWORD PTR [edx],0xa5208c26
  4109ac:	jg     0x410a13
  4109ae:	mov    esp,0x1b7e7ef4
  4109b3:	add    eax,edx
  4109b5:	jle    0x41099f
  4109b7:	(bad)  
  4109b9:	xor    ch,al
  4109bb:	adc    eax,0xda3c7d22
  4109c0:	adc    BYTE PTR [edi+0x3dc73dbb],bh
  4109c6:	xchg   esi,eax
  4109c7:	xor    ah,ch
  4109c9:	jp     0x410a0b
  4109cb:	icebp  
  4109cc:	mov    eax,DWORD PTR [eax+esi*8+0x15]
  4109d0:	mov    eax,0xbeb23fee
  4109d5:	hlt    
  4109d6:	pop    edx
  4109d7:	mov    WORD PTR [edi+0x1479bd2],gs
  4109dd:	adc    DWORD PTR [eax],ebp
  4109df:	inc    ecx
  4109e0:	cmp    al,0xf
  4109e2:	clc    
  4109e3:	mov    eax,0x3c883a3d
  4109e8:	sub    eax,0xfe81bff8
  4109ed:	not    BYTE PTR [edx+0x27]
  4109f0:	sbb    BYTE PTR [eax+0x5cd4cf78],ch
  4109f6:	dec    ecx
  4109f7:	mov    ebx,0x73428120
  4109fc:	stc    
  4109fd:	icebp  
  4109fe:	add    eax,0xae11c756
  410a03:	or     al,BYTE PTR [ebp+0x7c]
  410a06:	mov    dh,0x1d
  410a08:	mov    edi,DWORD PTR [eax+0x73276afe]
  410a0e:	sbb    ebx,0xbb55b093
  410a14:	mov    edx,0x1c528f32
  410a19:	xor    BYTE PTR [ecx],dl
  410a1b:	not    BYTE PTR [ebp+0x4506968b]
  410a21:	jnp    0x4109ac
  410a23:	ja     0x410a61
  410a25:	cmp    ebp,eax
  410a27:	ret    0xf539
  410a2a:	ror    BYTE PTR [ebx+0x4f8cd54e],cl
  410a30:	pushf  
  410a31:	pop    edx
  410a32:	mov    ebx,eax
  410a34:	out    dx,al
  410a35:	jae    0x410aae
  410a37:	fisttp DWORD PTR [esp+esi*1]
  410a3a:	rcr    DWORD PTR [ecx-0x754e85e3],cl
  410a40:	pop    ecx
  410a41:	shl    DWORD PTR [edi+0x1de44857],cl
  410a47:	out    dx,al
  410a48:	je     0x4109e5
  410a4a:	ins    BYTE PTR es:[edi],dx
  410a4b:	dec    ebx
  410a4c:	or     bl,BYTE PTR [edx]
  410a4e:	fstp   QWORD PTR [esi+0x4c]
  410a51:	loopne 0x410aa1
  410a53:	sbb    esp,DWORD PTR [ecx-0x29]
  410a56:	cld    
  410a57:	mov    esp,0xdb8a0632
  410a5c:	xor    bh,BYTE PTR [eax+edi*2]
  410a5f:	xchg   esp,eax
  410a60:	cmp    al,BYTE PTR [ecx]
  410a62:	stc    
  410a63:	dec    esi
  410a65:	push   edi
  410a66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a67:	imul   esp,DWORD PTR [eax+0x70df2162],0x92505135
  410a71:	dec    esp
  410a72:	sbb    eax,DWORD PTR [ecx]
  410a74:	mov    ebp,ebx
  410a76:	push   ss
  410a77:	and    eax,0x1df499f2
  410a7c:	dec    edi
  410a7d:	xchg   ecx,eax
  410a7e:	fistp  DWORD PTR [edi-0x5b]
  410a81:	cmc    
  410a82:	ins    DWORD PTR es:[edi],dx
  410a83:	ret    
  410a84:	cs cmp al,0x4b
  410a87:	jge    0x410a87
  410a89:	push   es
  410a8a:	(bad)  
  410a8b:	mov    al,ds:0x8a21ee73
  410a90:	repnz and bh,BYTE PTR [eax]
  410a93:	mov    dl,0x79
  410a95:	es ret 
  410a97:	icebp  
  410a98:	sub    eax,0x62fb0c3
  410a9d:	inc    ebx
  410a9e:	mov    al,gs:0x260db627
  410aa4:	mov    edx,0x24016715
  410aa9:	fistp  QWORD PTR [edx-0x4fa4456]
  410aaf:	mov    edi,0x90532547
  410ab4:	adc    al,0xff
  410ab6:	sbb    DWORD PTR [esi],0x7e644c08
  410abc:	repnz loop 0x410a71
  410abf:	push   esi
  410ac0:	outs   dx,DWORD PTR ds:[esi]
  410ac1:	adc    esi,ebp
  410ac3:	mov    esp,0xe733f3b4
  410ac8:	and    edx,DWORD PTR [edx]
  410aca:	popf   
  410acb:	mov    ecx,0xcec055ed
  410ad0:	dec    edi
  410ad1:	test   BYTE PTR [ebx],bh
  410ad3:	xchg   ebx,eax
  410ad4:	das    
  410ad5:	ins    BYTE PTR es:[edi],dx
  410ad6:	xchg   edi,eax
  410ad7:	aam    0xec
  410ad9:	inc    eax
  410ada:	and    edx,DWORD PTR [ebp+eax*2-0x7b]
  410ade:	mov    eax,0x72e54675
  410ae3:	push   0xfd147478
  410ae8:	lea    edi,[edx]
  410aea:	popf   
  410aeb:	or     eax,0x9c7eeb12
  410af0:	dec    eax
  410af1:	(bad)  
  410af3:	loop   0x410b4f
  410af5:	sbb    al,0x3
  410af7:	and    ebx,DWORD PTR [eax+esi*1]
  410afa:	xchg   ebx,eax
  410afb:	shl    bh,cl
  410afd:	or     al,0xdb
  410aff:	fbld   TBYTE PTR [ecx+0x43f69424]
  410b05:	es loop 0x410b78
  410b08:	mov    dl,0xaf
  410b0a:	xor    DWORD PTR [ebp-0xf5a412c],esp
  410b10:	cmp    eax,0x11ab8247
  410b15:	sub    eax,0x76ff7fc9
  410b1a:	ss fld st(7)
  410b1d:	(bad)  
  410b1e:	push   ss
  410b1f:	mov    WORD PTR [edi],?
  410b21:	lods   al,BYTE PTR ds:[esi]
  410b22:	pop    edi
  410b23:	cld    
  410b24:	inc    eax
  410b25:	dec    ebp
  410b26:	scas   eax,DWORD PTR es:[edi]
  410b27:	jae    0x410b54
  410b29:	cmp    ah,BYTE PTR [esi-0x76]
  410b2c:	popa   
  410b2d:	jmp    0x94beb80d
  410b32:	ret    
  410b33:	je     0x410ae8
  410b35:	stos   BYTE PTR es:[edi],al
  410b36:	mov    bl,cl
  410b38:	jmp    0x410bae
  410b3a:	rol    BYTE PTR [ebx-0x51c5784c],0x7d
  410b41:	or     al,0xa8
  410b43:	mov    ds:0xf202cdca,al
  410b48:	mov    edi,0x62fad593
  410b4d:	ret    
  410b4e:	adc    eax,0x8c56a953
  410b53:	das    
  410b54:	adc    al,0x41
  410b56:	dec    esp
  410b57:	lds    edx,FWORD PTR [edx]
  410b59:	jb     0x410b0b
  410b5b:	dec    eax
  410b5c:	and    al,BYTE PTR [ebx+0x61]
  410b5f:	les    edx,FWORD PTR [ebx+esi*1-0x1c]
  410b63:	xor    DWORD PTR [ecx],eax
  410b65:	adc    al,0xa2
  410b67:	push   ebp
  410b68:	lods   al,BYTE PTR ds:[esi]
  410b69:	pusha  
  410b6a:	popa   
  410b6b:	mov    eax,0xa1a388cd
  410b70:	inc    ecx
  410b71:	xor    dl,ch
  410b73:	xor    eax,0x1fd267bc
  410b78:	pop    eax
  410b79:	icebp  
  410b7a:	shr    ecx,0x6d
  410b7d:	push   0x2
  410b7f:	cmp    edi,eax
  410b81:	xor    eax,0xbe1c8822
  410b86:	or     eax,0x419cf54c
  410b8b:	arpl   WORD PTR [edx-0x33],bp
  410b8e:	xchg   ebx,eax
  410b8f:	cld    
  410b90:	sub    BYTE PTR [edi],ch
  410b92:	popa   
  410b93:	dec    ebx
  410b94:	in     al,0xb3
  410b96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b97:	pop    ecx
  410b98:	lahf   
  410b99:	scas   eax,DWORD PTR es:[edi]
  410b9a:	aaa    
  410b9b:	sub    ebp,DWORD PTR cs:[ecx]
  410b9e:	add    al,0xb8
  410ba0:	sahf   
  410ba1:	dec    ebx
  410ba2:	int3   
  410ba3:	sbb    al,0x27
  410ba5:	rcr    BYTE PTR [edx+eax*4-0x4b],cl
  410ba9:	sti    
  410baa:	inc    edi
  410bab:	lea    esp,ds:0xa927acb7
  410bb1:	xlat   BYTE PTR ds:[ebx]
  410bb2:	(bad)  
  410bb3:	les    edi,FWORD PTR [edi-0x7ff38530]
  410bb9:	scas   eax,DWORD PTR es:[edi]
  410bba:	dec    edx
  410bbb:	in     eax,dx
  410bbc:	or     BYTE PTR [ecx+eax*2+0x2f],ah
  410bc0:	repnz scas al,BYTE PTR es:[edi]
  410bc2:	jnp    0x410bfc
  410bc4:	sbb    DWORD PTR [ebx+0x55f07d89],edi
  410bca:	push   ecx
  410bcb:	xor    eax,0x909ca30c
  410bd0:	sbb    eax,0xa6cba3b8
  410bd5:	mov    ebx,0xb9a01240
  410bda:	jnp    0x410baa
  410bdc:	in     eax,0x36
  410bde:	mul    dh
  410be0:	lods   eax,DWORD PTR ds:[esi]
  410be1:	sub    eax,0xfbc006ee
  410be6:	cs call 0x509c4af6
  410bec:	add    ch,bl
  410bee:	test   al,0xad
  410bf0:	xchg   ebp,eax
  410bf1:	add    ebx,DWORD PTR [edx-0x60]
  410bf4:	mov    dh,0xe
  410bf6:	dec    esp
  410bf7:	push   cs
  410bf8:	aam    0xb5
  410bfa:	inc    esi
  410bfb:	hlt    
  410bfc:	xchg   esi,eax
  410bfd:	mov    ecx,0x227ec77c
  410c02:	fbstp  TBYTE PTR [ecx+0x2c]
  410c05:	mov    bh,dh
  410c07:	xlat   BYTE PTR ds:[ebx]
  410c08:	mov    DWORD PTR [ebx+0x63779c4d],ecx
  410c0e:	popa   
  410c0f:	mov    ch,0xa7
  410c11:	mov    bl,BYTE PTR [ecx+eax*2-0x13]
  410c15:	jns    0x410bfc
  410c17:	adc    ebx,eax
  410c19:	addr16 repnz pop ss
  410c1c:	cli    
  410c1d:	arpl   sp,ax
  410c1f:	xchg   BYTE PTR [edx-0x78],dl
  410c22:	lock jge 0x410c56
  410c25:	xchg   ebx,eax
  410c26:	mov    edi,0x4ea04eed
  410c2b:	jb     0x410c30
  410c2d:	cmp    edi,DWORD PTR [esi-0x5d]
  410c30:	jnp    0x410c60
  410c32:	jg     0x410c57
  410c34:	(bad)  
  410c35:	in     ax,0x2e
  410c38:	or     DWORD PTR [ecx],0xffffffd7
  410c3b:	push   ebx
  410c3c:	loop   0x410c11
  410c3e:	(bad)  
  410c3f:	pop    ss
  410c40:	fwait
  410c41:	es push es
  410c43:	stc    
  410c44:	dec    edx
  410c45:	imul   ebp,DWORD PTR [esi+0x1c8272dd],0xd3dfbb29
  410c4f:	cmp    eax,0x6dae2cc3
  410c54:	add    al,0xe1
  410c56:	and    ah,ch
  410c58:	adc    eax,0x808eeb4d
  410c5d:	ret    0xba18
  410c60:	push   ss
  410c61:	add    esi,DWORD PTR [edi-0x55]
  410c64:	push   edx
  410c65:	sub    eax,0x34779ce2
  410c6a:	cdq    
  410c6b:	outs   dx,BYTE PTR ds:[esi]
  410c6c:	xchg   edi,eax
  410c6d:	dec    edi
  410c6e:	inc    ebp
  410c6f:	cmp    al,0xe
  410c71:	add    eax,0x7f624bf5
  410c76:	push   ss
  410c77:	clc    
  410c78:	fcom   DWORD PTR [eax-0x352e57f2]
  410c7e:	adc    al,dh
  410c80:	sub    bh,ch
  410c82:	sahf   
  410c83:	xchg   ecx,eax
  410c84:	ret    0x6cb2
  410c87:	cmp    esi,DWORD PTR [eax+0x49b504ea]
  410c8d:	xchg   edx,eax
  410c8e:	in     al,dx
  410c8f:	mov    cl,BYTE PTR [esi]
  410c91:	std    
  410c92:	jle    0x410c2f
  410c94:	adc    eax,0x4822c4f5
  410c99:	out    0xf0,al
  410c9b:	mov    al,0xa4
  410c9d:	pop    edi
  410c9e:	jp     0x410c8a
  410ca0:	xor    BYTE PTR [eax],0xce
  410ca3:	imul   DWORD PTR [edi+0x23]
  410ca6:	clc    
  410ca7:	jmp    0xbe4c:0xbb5358fe
  410cae:	pop    ebx
  410caf:	lea    ebp,[ebx+0x4a]
  410cb2:	scas   eax,DWORD PTR es:[edi]
  410cb3:	in     al,0x57
  410cb5:	stos   DWORD PTR es:[edi],eax
  410cb6:	out    0xe1,eax
  410cb8:	sub    BYTE PTR [eax],0x4a
  410cbb:	mov    ebx,0x86a3bcc8
  410cc0:	cmp    esp,DWORD PTR [ebx+0x6855848a]
  410cc6:	pop    esi
  410cc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cc8:	jl     0x410cc0
  410cca:	jle    0x410cf9
  410ccc:	jge    0x410d42
  410cce:	sbb    DWORD PTR [edx],ebp
  410cd0:	pop    edx
  410cd1:	jo     0x410d4f
  410cd3:	mov    dl,0xb4
  410cd5:	dec    edx
  410cd6:	add    eax,0x72dd40d
  410cdb:	rol    BYTE PTR [eax+0x3a900a2],cl
  410ce1:	cmp    cl,ch
  410ce3:	mov    dh,0x6c
  410ce5:	sbb    BYTE PTR [eax-0x3c],al
  410ce8:	iret   
  410ce9:	sar    DWORD PTR [ecx*2-0x7ff13c56],0x25
  410cf1:	int    0x5f
  410cf3:	adc    al,0x2f
  410cf5:	mov    bh,0x79
  410cf7:	(bad)  
  410cf8:	jmp    0x410cd5
  410cfa:	add    DWORD PTR [ebp-0x4df43123],ebx
  410d00:	aam    0x3f
  410d02:	push   edx
  410d03:	xlat   BYTE PTR ds:[ebx]
  410d04:	adc    DWORD PTR ds:0x5515f1f,eax
  410d0a:	sub    ch,BYTE PTR [ebx+0x2f0f8945]
  410d10:	jbe    0x410d26
  410d12:	cmp    al,0x3b
  410d14:	jmp    0x9a98:0x5de7ca0d
  410d1b:	jae    0x410cc2
  410d1d:	xor    DWORD PTR [edx+ecx*1+0x39f3e9a2],ebp
  410d24:	adc    BYTE PTR [edx-0x6f],ch
  410d27:	pushf  
  410d28:	push   edx
  410d29:	inc    ebx
  410d2a:	ins    DWORD PTR es:[edi],dx
  410d2b:	jae    0x410d64
  410d2d:	shr    ah,cl
  410d2f:	shr    bl,0x6e
  410d32:	and    BYTE PTR [eax+edx*8],0xec
  410d36:	jmp    0x9de29504
  410d3b:	les    ebp,FWORD PTR [edx]
  410d3d:	aas    
  410d3e:	(bad)  
  410d41:	push   0x2d0f59db
  410d46:	fisubr WORD PTR [ebp+eiz*4+0x74f9ca72]
  410d4d:	cmp    al,0xb5
  410d4f:	nop
  410d50:	sti    
  410d51:	in     al,dx
  410d52:	inc    esi
  410d53:	sub    BYTE PTR [eax*4-0x57963fe2],al
  410d5a:	adc    eax,0x3bc289ca
  410d5f:	(bad)  
  410d61:	jmp    0x4228:0xc9c704bd
  410d68:	or     dl,cl
  410d6a:	or     BYTE PTR [edi-0x16],dh
  410d6d:	cmp    ah,cl
  410d6f:	ss add bh,al
  410d72:	mov    dh,0x2c
  410d74:	xor    al,0x8b
  410d76:	xchg   ebx,eax
  410d77:	xchg   ebp,eax
  410d78:	stc    
  410d79:	or     BYTE PTR [esi],0x26
  410d7c:	adc    eax,DWORD PTR [ebx+edx*2-0x32]
  410d80:	sbb    DWORD PTR [edi-0x11b22076],eax
  410d86:	push   0xffffff88
  410d88:	mov    ch,0x66
  410d8a:	or     ch,al
  410d8c:	and    eax,0xe024a9de
  410d91:	inc    edx
  410d92:	and    dh,0x8f
  410d95:	jle    0x410db6
  410d97:	add    eax,0x8ca60f4b
  410d9c:	push   es
  410d9d:	xchg   esi,eax
  410d9e:	sbb    BYTE PTR [ecx+0x4f2779c0],cl
  410da4:	cmp    bh,BYTE PTR [eax-0x63]
  410da7:	js     0x410d38
  410da9:	xchg   esp,eax
  410daa:	es jge 0x410e0f
  410dad:	out    0x55,eax
  410daf:	fidivr DWORD PTR [ecx+esi*4-0x14]
  410db3:	pop    ecx
  410db4:	fs dec eax
  410db6:	push   edi
  410db7:	cmp    al,0x94
  410db9:	repz xchg ebx,eax
  410dbb:	cmp    BYTE PTR [edx],ch
  410dbd:	jns    0x410d89
  410dbf:	rcl    DWORD PTR [edi+0x4f],1
  410dc2:	mov    edx,esp
  410dc4:	in     eax,0xc2
  410dc6:	mov    esp,0x9d4465f0
  410dcb:	inc    esp
  410dcc:	in     eax,dx
  410dcd:	js     0x410de1
  410dcf:	or     dl,BYTE PTR [ebp+0x32ae83d5]
  410dd5:	sbb    BYTE PTR [edi-0x15675cbe],ch
  410ddb:	pop    es
  410ddc:	sbb    al,0x9a
  410dde:	push   ds
  410ddf:	pop    edi
  410de0:	inc    eax
  410de1:	mov    bh,0xcb
  410de3:	add    BYTE PTR [ecx+eiz*4-0x37745853],cl
  410dea:	dec    edx
  410deb:	sub    BYTE PTR [ebx-0x34],cl
  410dee:	jg     0x75b47e42
  410df4:	xlat   BYTE PTR ds:[ebx]
  410df5:	outs   dx,DWORD PTR ds:[esi]
  410df6:	mov    esp,0xe0d9c462
  410dfb:	repnz fstp QWORD PTR [edi+0x1c]
  410dff:	cmp    esi,esp
  410e01:	sbb    edx,eax
  410e03:	arpl   di,sp
  410e05:	and    eax,0x8fbdc5a0
  410e0a:	or     eax,0x26c71c70
  410e0f:	mov    cl,0x95
  410e11:	add    al,BYTE PTR [esi+0x27]
  410e14:	xor    DWORD PTR [edx-0x3c],eax
  410e17:	and    dl,BYTE PTR [ebx+edi*1]
  410e1a:	jns    0x410da5
  410e1c:	pusha  
  410e1d:	fwait
  410e1e:	stos   BYTE PTR es:[edi],al
  410e1f:	mov    dh,al
  410e21:	inc    esi
  410e22:	pop    esi
  410e23:	data16 mov ah,0x72
  410e26:	jne    0x410dea
  410e28:	shl    bl,0x75
  410e2b:	sbb    al,0xbd
  410e2d:	mov    edx,0x7269e150
  410e32:	fdivr  QWORD PTR [eax+ecx*8+0x72]
  410e36:	push   eax
  410e37:	pop    ebx
  410e38:	fwait
  410e39:	mov    es,WORD PTR [edi]
  410e3b:	jno    0x410eae
  410e3d:	sub    al,0x1d
  410e3f:	inc    edi
  410e40:	sub    BYTE PTR [esi],cl
  410e42:	jne    0x410dd9
  410e44:	rcl    DWORD PTR ds:0xc22ae795,1
  410e4a:	jmp    0x5931bd1f
  410e4f:	ret    
  410e50:	fdiv   QWORD PTR ds:0x3ae22100
  410e56:	shl    DWORD PTR [edx+0x42],cl
  410e59:	ins    BYTE PTR es:[edi],dx
  410e5a:	inc    ebp
  410e5b:	add    DWORD PTR [esi],0xffffff8c
  410e5e:	cmp    DWORD PTR [edi-0x45],edi
  410e61:	out    0x47,eax
  410e63:	and    al,0xa8
  410e65:	push   cs
  410e66:	mov    dl,0x56
  410e68:	addr16 sbb al,0xa4
  410e6b:	lock dec eax
  410e6d:	ja     0x410e74
  410e6f:	je     0x410e97
  410e71:	int3   
  410e72:	cmp    al,0x96
  410e74:	xor    dl,dl
  410e76:	lods   eax,DWORD PTR ds:[esi]
  410e77:	mov    al,0x20
  410e79:	sub    eax,0xf4239045
  410e7e:	mov    eax,ds:0xa9b7ce43
  410e83:	cmp    eax,0xf6340028
  410e88:	push   ss
  410e89:	xchg   esp,eax
  410e8a:	pusha  
  410e8b:	pop    eax
  410e8c:	jmp    0x6f6d:0x92ce5d99
  410e93:	retf   
  410e94:	loopne 0x410e1f
  410e96:	mov    WORD PTR [ebx-0x54],?
  410e99:	scas   eax,DWORD PTR es:[edi]
  410e9a:	xor    bh,BYTE PTR [ebp+0x27]
  410e9d:	dec    ebx
  410e9e:	sbb    BYTE PTR [ecx+0x73f1200b],ah
  410ea4:	frstor [esi]
  410ea6:	dec    ebx
  410ea7:	or     BYTE PTR [ecx+ecx*4-0x54],cl
  410eab:	int3   
  410eac:	adc    DWORD PTR [ebx+ebp*2],0xffffff99
  410eb0:	inc    ebp
  410eb1:	or     al,0x77
  410eb3:	or     eax,DWORD PTR [edx-0x61300466]
  410eb9:	jne    0x410ea0
  410ebb:	dec    ebx
  410ebc:	mov    ebp,DWORD PTR [edi+0x73]
  410ebf:	stos   BYTE PTR es:[edi],al
  410ec0:	leave  
  410ec1:	sbb    al,0x36
  410ec4:	adc    bl,BYTE PTR [eax-0x67]
  410ec7:	shr    DWORD PTR [eax+esi*8+0x486daf13],0xd4
  410ecf:	dec    esp
  410ed0:	push   ds
  410ed1:	aaa    
  410ed2:	push   edx
  410ed3:	push   ebp
  410ed4:	out    dx,al
  410ed5:	pop    ebp
  410ed6:	pop    ebx
  410ed7:	or     BYTE PTR [esi+0x5f761439],ah
  410edd:	ins    DWORD PTR es:[edi],dx
  410ede:	inc    ebp
  410edf:	test   eax,0xca97c501
  410ee4:	imul   ebx,DWORD PTR [ebx+0x1192eb82],0x5cc69d9f
  410eee:	(bad)  
  410eef:	push   ebp
  410ef0:	adc    edx,DWORD PTR es:[edi-0x35]
  410ef4:	ds xor al,0x84
  410ef7:	push   esp
  410ef8:	sub    al,0x75
  410efa:	jp     0x410f74
  410efc:	add    DWORD PTR [ebx+ebp*8-0x7c01c639],eax
  410f03:	push   cs
  410f04:	push   esi
  410f05:	repnz es dec eax
  410f08:	xor    edx,DWORD PTR [esi-0x48]
  410f0b:	popf   
  410f0c:	inc    esp
  410f0d:	loopne 0x410f7e
  410f0f:	and    al,0x68
  410f11:	jl     0x410f45
  410f13:	imul   ebp,DWORD PTR [ecx+0x4a],0x92ffc264
  410f1a:	cmp    eax,eax
  410f1c:	mov    ebp,0xcca2cf22
  410f21:	test   eax,0x40aae8e7
  410f26:	addr16 xchg ebp,eax
  410f28:	adc    DWORD PTR [ebx],eax
  410f2a:	in     al,dx
  410f2b:	int    0xb8
  410f2d:	in     eax,dx
  410f2e:	std    
  410f2f:	call   0x88da:0x44f92a5f
  410f36:	test   eax,0xa411be72
  410f3b:	or     DWORD PTR [ebx],esp
  410f3d:	mov    ah,BYTE PTR [ebx+0x7077d6c1]
  410f43:	lds    ebp,FWORD PTR [edx+0x9fb82d9]
  410f49:	sbb    al,ah
  410f4b:	sbb    eax,0xce809e03
  410f51:	adc    eax,0x8e92f812
  410f56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f57:	mov    ds:0x428152cd,al
  410f5c:	mov    ds:0x307382ea,eax
  410f61:	or     DWORD PTR [edi+0x75],0x47467ff0
  410f68:	fadd   QWORD PTR [edx+0x38]
  410f6b:	aaa    
  410f6c:	mov    bh,0xaf
  410f6e:	push   cs
  410f6f:	imul   eax,esp,0x6587e779
  410f75:	xchg   esi,eax
  410f76:	ins    BYTE PTR es:[edi],dx
  410f77:	imul   edx,DWORD PTR [edi],0xbebcab50
  410f7d:	push   eax
  410f7e:	shl    BYTE PTR [edx+0x5b42df60],cl
  410f84:	jge    0x410ff3
  410f86:	inc    esp
  410f87:	cs retf 0xd03d
  410f8b:	mov    esp,0xc88c18e3
  410f90:	mov    ebx,0x64b4a1bb
  410f95:	add    DWORD PTR [edx-0x50],ebx
  410f98:	nop
  410f99:	cmp    al,0xb5
  410f9b:	mov    dl,0xd2
  410f9d:	xor    BYTE PTR [ebp-0x6c],bl
  410fa0:	(bad)  [edx]
  410fa2:	and    al,0x77
  410fa4:	int3   
  410fa5:	push   0xe
  410fa7:	xchg   DWORD PTR [ecx],ecx
  410fa9:	dec    ebx
  410faa:	imul   edi,DWORD PTR [edx+0x47],0x952c81b3
  410fb1:	and    al,0x10
  410fb3:	push   ecx
  410fb4:	push   ebp
  410fb5:	jp     0x410f93
  410fb7:	push   0x309b3ba5
  410fbc:	ins    DWORD PTR es:[edi],dx
  410fbd:	sbb    al,dh
  410fbf:	js     0x410fa4
  410fc1:	out    dx,al
  410fc2:	or     esi,ebp
  410fc4:	imul   ebp,DWORD PTR [eax],0xfffffffb
  410fc7:	push   ecx
  410fc8:	add    eax,0x941db3e9
  410fcd:	mov    edx,0xccbc8f8f
  410fd2:	clc    
  410fd3:	sbb    BYTE PTR [esi],dh
  410fd5:	mov    dh,0x27
  410fd7:	sti    
  410fd8:	sbb    dl,cl
  410fda:	arpl   bx,ax
  410fdc:	ds leave 
  410fde:	jmp    0x410fb1
  410fe0:	cmc    
  410fe1:	xchg   esi,eax
  410fe2:	aaa    
  410fe3:	inc    esi
  410fe4:	xor    bl,al
  410fe6:	mov    edi,0x87a15e79
  410feb:	pop    es
  410fec:	xor    eax,0xc4ea6289
  410ff1:	dec    edx
  410ff2:	mov    bl,0x19
  410ff4:	sar    DWORD PTR [eax+0x328beb18],0x2a
  410ffb:	call   0xaf03:0x3d6a5e58
  411002:	ds push esi
  411004:	ins    DWORD PTR es:[edi],dx
  411005:	jl     0x410fbd
  411007:	or     BYTE PTR [edx],cl
  411009:	mul    bl
  41100b:	or     al,0xa9
  41100d:	in     eax,0xc3
  41100f:	add    BYTE PTR [eax+0x4b02d7bc],0xf3
  411016:	cmp    BYTE PTR [eax],cl
  411018:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411019:	dec    BYTE PTR [edx]
  41101b:	mov    ds,WORD PTR [edi]
  41101d:	push   0x1e6d78af
  411022:	adc    bh,BYTE PTR ds:0x158f1827
  411028:	fstp   DWORD PTR [edx-0x33322466]
  41102e:	lock pushw es
  411031:	pop    edi
  411032:	sbb    eax,0xd14e86bd
  411037:	or     eax,0x9666ecd3
  41103c:	in     al,0x72
  41103e:	mov    ch,0x18
  411040:	jne    0x41101a
  411042:	es pop ebx
  411044:	rcr    BYTE PTR [eax-0x2d],cl
  411047:	dec    ebx
  411048:	push   edi
  411049:	mov    esi,0x28f3ee9e
  41104e:	push   ds
  41104f:	bnd jb 0x410ff1
  411052:	test   eax,0x1bc5eb8b
  411057:	adc    ah,BYTE PTR [ecx]
  411059:	adc    al,BYTE PTR [ecx]
  41105b:	(bad)  
  41105d:	fwait
  41105e:	hlt    
  41105f:	dec    esi
  411060:	call   0x7d36123d
  411065:	mov    al,ds:0x406bfe98
  41106a:	jp     0xcd7692f3
  411070:	ja     0x41103e
  411072:	arpl   WORD PTR [edx-0x3a9894b6],dx
  411078:	fsubr  st,st(2)
  41107a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41107b:	sub    BYTE PTR es:[ebx],0xf8
  41107f:	push   edx
  411080:	das    
  411081:	sub    BYTE PTR [eax-0x751b78b6],0xe9
  411088:	dec    esp
  411089:	gs stc 
  41108b:	aam    0xc0
  41108d:	push   esi
  41108e:	inc    ebx
  41108f:	jge    0x41103a
  411091:	pusha  
  411092:	xchg   edx,eax
  411093:	jle    0x41105e
  411095:	pop    esi
  411096:	dec    ecx
  411097:	nop
  411098:	nop
  411099:	adc    al,0x58
  41109b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41109c:	and    eax,0x1c3a913b
  4110a1:	dec    ebp
  4110a2:	push   es
  4110a3:	add    eax,0x75b62cb8
  4110a8:	xchg   edi,eax
  4110a9:	ror    DWORD PTR [esi],0xe9
  4110ac:	lea    ecx,[edx-0x4ad02597]
  4110b2:	mov    ch,0xf9
  4110b4:	xor    edx,DWORD PTR [esi]
  4110b6:	and    ah,BYTE PTR [ebp-0x1b2f1afd]
  4110bc:	mov    edx,0x9f0bebf8
  4110c1:	nop
  4110c2:	les    ecx,FWORD PTR [eax-0x7503c1eb]
  4110c8:	pop    ebp
  4110c9:	and    al,0x3d
  4110cb:	or     DWORD PTR [edx-0x25],ecx
  4110ce:	or     BYTE PTR [esi+eax*8],dl
  4110d1:	push   ss
  4110d2:	jnp    0x4110f0
  4110d4:	xchg   BYTE PTR [esi],ch
  4110d6:	add    eax,0xac20612e
  4110db:	outs   dx,BYTE PTR ds:[esi]
  4110dc:	in     eax,0x91
  4110de:	xchg   edi,eax
  4110df:	repnz pop ecx
  4110e1:	popf   
  4110e2:	pushf  
  4110e3:	dec    edi
  4110e4:	mov    esi,0xd2750a97
  4110e9:	jno    0x411162
  4110eb:	jno    0x4110e2
  4110ed:	test   BYTE PTR [edi-0x5527ee58],ch
  4110f3:	or     esp,0xe5055d9b
  4110f9:	xor    eax,0x3cfaa491
  4110fe:	repnz push edx
  411100:	or     DWORD PTR [edx-0x607eb351],ecx
  411106:	out    0xbd,eax
  411108:	jbe    0x411184
  41110a:	pop    edi
  41110b:	pop    ecx
  41110c:	mov    ?,WORD PTR [ebp-0x74b1e3f9]
  411112:	pop    ebp
  411113:	push   ebx
  411114:	cmp    BYTE PTR [eax-0x31],bl
  411117:	pop    esp
  411118:	xchg   esi,eax
  411119:	jge    0x41116c
  41111b:	dec    edi
  41111c:	push   eax
  41111d:	mov    edi,0x3845cec1
  411122:	sub    esi,DWORD PTR [ebx]
  411124:	push   es
  411125:	pop    eax
  411126:	js     0x411141
  411128:	shl    BYTE PTR [ebx-0x4360233b],0xa5
  41112f:	out    dx,eax
  411130:	test   BYTE PTR [ecx],dl
  411132:	xchg   ecx,eax
  411133:	retf   0x8f6b
  411136:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411137:	cdq    
  411138:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411139:	out    dx,al
  41113a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41113b:	lea    ecx,[esi]
  41113d:	fild   WORD PTR [ebp-0x6]
  411140:	fs add al,0xfb
  411143:	imul   edx,DWORD PTR [ebp+ebx*1+0x7640049f],0xf3316781
  41114e:	jle    0x411170
  411150:	add    BYTE PTR [edx],bl
  411152:	cli    
  411153:	imul   edi,DWORD PTR [esi+eiz*1+0x3a],0xf2420fc0
  41115b:	inc    ebx
  41115c:	daa    
  41115d:	xchg   ebp,eax
  41115e:	sub    eax,0x462a9ee3
  411163:	iret   
  411164:	loop   0x411196
  411166:	xor    DWORD PTR [eax-0x5f99228f],ebp
  41116c:	sahf   
  41116d:	or     DWORD PTR [ecx],ebx
  41116f:	jp     0x41114e
  411171:	add    DWORD PTR [esi],esp
  411173:	lock add edi,DWORD PTR [ecx+0x5c]
  411177:	aad    0x24
  411179:	adc    edx,DWORD PTR [ebx+0x3deab74f]
  41117f:	pusha  
  411180:	icebp  
  411181:	push   esp
  411182:	mov    cl,0x57
  411184:	mov    DWORD PTR [ebx],esp
  411186:	sbb    al,0xb1
  411188:	out    0x10,eax
  41118a:	popf   
  41118b:	inc    DWORD PTR [eax-0x51]
  41118e:	lahf   
  41118f:	lea    edi,[esp+ebp*4+0x4b]
  411193:	out    dx,al
  411194:	inc    esi
  411195:	cld    
  411196:	push   cs
  411197:	js     0x4111c4
  411199:	mov    bh,0x82
  41119b:	xchg   BYTE PTR [ebx+0x0],dl
  41119e:	in     al,dx
  41119f:	sub    dl,cl
  4111a1:	fild   WORD PTR [edx]
  4111a3:	leave  
  4111a4:	mov    eax,0xaf56cada
  4111a9:	out    dx,eax
  4111aa:	xor    cl,BYTE PTR [ebp+0x5cb14df3]
  4111b0:	call   0x19d7:0xef5567ed
  4111b7:	pusha  
  4111b8:	cs out 0x64,eax
  4111bb:	std    
  4111bc:	es or  edi,eax
  4111bf:	pop    ss
  4111c0:	int    0xc
  4111c2:	pop    edx
  4111c3:	dec    eax
  4111c4:	iret   
  4111c5:	adc    esi,edi
  4111c7:	popf   
  4111c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111c9:	jle    0x41118e
  4111cb:	mov    DWORD PTR [ebx-0x7de5366d],edi
  4111d1:	(bad)  
  4111d2:	in     eax,0xeb
  4111d4:	push   eax
  4111d5:	sbb    bh,0x74
  4111d8:	arpl   WORD PTR [edx-0x23],di
  4111db:	shl    DWORD PTR [eax],0x87
  4111de:	inc    ebx
  4111df:	xor    BYTE PTR [edx],0x55
  4111e2:	or     al,0xff
  4111e4:	or     BYTE PTR [ecx-0x38],cl
  4111e7:	or     al,0xed
  4111e9:	jae    0x411254
  4111eb:	out    0x2f,al
  4111ed:	sbb    BYTE PTR [esi-0x3dc89447],0xe
  4111f4:	inc    ecx
  4111f5:	ficomp WORD PTR [ecx]
  4111f7:	mov    edx,0xb7f60f74
  4111fc:	pusha  
  4111fd:	addr16 pop ds
  4111ff:	hlt    
  411200:	push   ss
  411201:	mov    ah,0x4f
  411203:	jmp    0xb881:0xbc41e2ff
  41120a:	xchg   al,dl
  41120c:	int    0x27
  41120e:	push   ds
  41120f:	rcl    DWORD PTR [ecx+ebx*4],0x45
  411213:	inc    ebp
  411214:	inc    ebp
  411215:	sbb    eax,0xad50e541
  41121a:	test   BYTE PTR [edx-0x6b60521c],bh
  411220:	fild   WORD PTR [edx-0x7d51a0eb]
  411226:	fucomi st,st(2)
  411228:	stc    
  411229:	or     ebp,DWORD PTR [ebp+0x78dd3831]
  41122f:	adc    eax,0x9ffcb66b
  411234:	cmc    
  411235:	sbb    DWORD PTR [edi],ebx
  411237:	arpl   WORD PTR [ebx],bx
  411239:	arpl   WORD PTR [ecx+ebp*8-0x33],cx
  41123d:	dec    eax
  41123e:	stos   BYTE PTR es:[edi],al
  41123f:	sbb    al,0xee
  411241:	lahf   
  411242:	inc    ebx
  411243:	(bad)  
  411244:	ror    BYTE PTR [eax+0x2f5de1f5],cl
  41124a:	dec    eax
  41124b:	sub    ch,BYTE PTR [ebx+0x13]
  41124e:	lea    ecx,[edi-0x68]
  411251:	fcom   QWORD PTR [ecx-0x60c0d645]
  411257:	push   ds
  411258:	ins    BYTE PTR es:[edi],dx
  411259:	test   eax,0x6f3ffbc
  41125e:	test   BYTE PTR [eax],bl
  411260:	sahf   
  411261:	xor    esi,DWORD PTR [esi+0x71]
  411264:	mov    ?,edi
  411266:	call   0x3a327f7e
  41126b:	stc    
  41126c:	push   ecx
  41126d:	pop    es
  41126e:	xchg   ecx,eax
  41126f:	sub    DWORD PTR [edi+0x4d],edi
  411272:	lea    ecx,[edx+0x3aa8564a]
  411278:	ror    DWORD PTR [edi-0x65],0xde
  41127c:	lods   al,BYTE PTR ds:[esi]
  41127d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41127e:	rol    eax,1
  411280:	xlat   BYTE PTR ds:[ebx]
  411281:	ds mov esp,0x69ed92d3
  411287:	scas   eax,DWORD PTR es:[edi]
  411288:	aad    0xcd
  41128a:	push   edx
  41128b:	mov    bh,0x9b
  41128d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41128e:	fdiv   QWORD PTR [esi+0x57]
  411291:	jl     0x411223
  411293:	sub    edx,DWORD PTR [ebx-0x15]
  411296:	ret    
  411297:	dec    eax
  411298:	add    eax,0xe973fe8c
  41129d:	push   es
  41129e:	cdq    
  41129f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112a0:	lods   eax,DWORD PTR ds:[esi]
  4112a1:	sbb    ecx,DWORD PTR ds:0xe7bc5403
  4112a7:	mov    eax,0xc3a0af7e
  4112ac:	xchg   edx,eax
  4112ad:	push   es
  4112ae:	es out dx,al
  4112b0:	adc    BYTE PTR [ecx-0x5dee83f1],dh
  4112b6:	sbb    BYTE PTR [ebx+ebp*2-0x7a],0x2b
  4112bb:	sti    
  4112bc:	or     DWORD PTR [ebx+esi*1-0x2a],0x16
  4112c1:	fidiv  DWORD PTR [ecx]
  4112c3:	pop    esp
  4112c4:	sub    eax,0x7f23b74d
  4112c9:	cmp    ebx,DWORD PTR [ebx]
  4112cb:	sbb    ch,BYTE PTR [esp+ebx*1]
  4112ce:	cmp    ebp,DWORD PTR [edx+eax*1-0x46]
  4112d2:	cld    
  4112d3:	scas   eax,DWORD PTR es:[edi]
  4112d4:	and    al,0x68
  4112d6:	push   ebx
  4112d7:	mov    ebp,0x392ff631
  4112dc:	mov    ebp,0x731d8aff
  4112e1:	sbb    cl,bh
  4112e3:	ret    
  4112e4:	and    al,0xc8
  4112e6:	xchg   BYTE PTR [eax],ch
  4112e8:	adc    al,0xf6
  4112ea:	xchg   ecx,eax
  4112eb:	sub    edx,DWORD PTR [edi-0x3f]
  4112ee:	aaa    
  4112ef:	ret    
  4112f0:	cdq    
  4112f1:	rol    DWORD PTR [ecx+0x4c],0x45
  4112f5:	jecxz  0x41127c
  4112f7:	(bad)  
  4112f8:	adc    ah,cl
  4112fa:	mov    dl,0x2d
  4112fc:	jae    0x41137c
  4112fe:	mov    ecx,0x90ca3728
  411303:	inc    eax
  411304:	(bad)  
  411305:	xchg   edi,eax
  411306:	mov    eax,ecx
  411308:	inc    esi
  411309:	pop    ds
  41130a:	fbld   TBYTE PTR [eax-0x49]
  41130d:	adc    dh,dh
  41130f:	scas   eax,DWORD PTR es:[edi]
  411310:	(bad)  
  411311:	dec    ebp
  411312:	jp     0x41129f
  411314:	add    edi,esi
  411316:	and    ah,BYTE PTR [ebx-0x7ec6ddb2]
  41131c:	xchg   ebx,eax
  41131d:	lods   eax,DWORD PTR ds:[esi]
  41131e:	jge    0x411369
  411320:	mov    edx,ss
  411322:	dec    eax
  411323:	fwait
  411324:	outs   dx,BYTE PTR ds:[esi]
  411325:	or     ebx,DWORD PTR [edi-0x7c7a9c35]
  41132b:	aaa    
  41132c:	inc    edx
  41132d:	ficom  DWORD PTR [esi]
  41132f:	adc    ebp,ecx
  411331:	sub    ah,BYTE PTR [edi+0x75055398]
  411337:	pop    ds
  411338:	scas   al,BYTE PTR es:[edi]
  411339:	call   0xece5:0xf3d5bf0d
  411340:	ss in  al,0x92
  411343:	sub    dl,BYTE PTR [esi+0x30e6069b]
  411349:	jp     0x411303
  41134b:	add    dh,ch
  41134d:	fld    DWORD PTR [edx+eiz*1+0x11efcd82]
  411354:	inc    esi
  411355:	sub    BYTE PTR [eax],cl
  411357:	cli    
  411358:	adc    ch,0xd1
  41135b:	mov    ch,0x36
  41135d:	cld    
  41135e:	je     0x4113cb
  411360:	cmp    bh,BYTE PTR [ebx+0x6a69d8c9]
  411366:	in     al,dx
  411367:	xor    ebx,ebx
  411369:	sbb    ch,BYTE PTR [ebp-0x69]
  41136c:	pop    es
  41136d:	inc    ecx
  41136e:	dec    edi
  41136f:	pop    es
  411370:	push   eax
  411371:	daa    
  411372:	adc    ecx,DWORD PTR [edi+0x7c27865f]
  411378:	aad    0x90
  41137a:	lea    ebp,[esi+0x51]
  41137d:	dec    edx
  41137e:	cs push edx
  411380:	lds    ebx,FWORD PTR [ebp+0x7]
  411383:	or     al,0x85
  411385:	push   edx
  411386:	addr16 (bad) 
  411388:	sub    BYTE PTR [edx+ecx*2-0x77],al
  41138c:	add    BYTE PTR [edx-0x750eeead],bh
  411392:	xchg   edx,eax
  411393:	mov    bl,0xd6
  411395:	retf   
  411396:	cmc    
  411397:	idiv   BYTE PTR [eax]
  411399:	jae    0x411400
  41139b:	rcr    BYTE PTR [esi-0x4],0x3c
  41139f:	push   ebp
  4113a0:	iret   
  4113a1:	sbb    al,BYTE PTR [edx*8+0x2ff6f795]
  4113a8:	jo     0x41137d
  4113aa:	dec    edx
  4113ab:	xchg   esp,eax
  4113ac:	mov    edi,0x5de96bd7
  4113b1:	into   
  4113b2:	es pop ebp
  4113b4:	lds    ebp,FWORD PTR [ebx+edx*4]
  4113b7:	ret    
  4113b8:	mov    WORD PTR [ecx+0x3a],ss
  4113bb:	push   esp
  4113bc:	ffree  st(0)
  4113be:	add    ah,BYTE PTR [esi-0x4d]
  4113c1:	xor    bh,ah
  4113c3:	inc    eax
  4113c4:	jp     0x4113fb
  4113c6:	sbb    ch,cl
  4113c8:	sti    
  4113c9:	stos   DWORD PTR es:[edi],eax
  4113ca:	sub    DWORD PTR [esi+0x25db746],0x1e
  4113d1:	or     esi,DWORD PTR es:[edx-0x7aac9f25]
  4113d8:	aad    0x35
  4113da:	dec    edx
  4113db:	cmp    al,0x23
  4113dd:	in     eax,0x10
  4113df:	mov    eax,ds:0x3af65fb
  4113e4:	popa   
  4113e5:	adc    DWORD PTR [eax-0x1f],edi
  4113e8:	sub    dh,BYTE PTR [ebp+0x421c108]
  4113ee:	adc    BYTE PTR [edx],al
  4113f0:	repz test al,0x48
  4113f3:	xor    ecx,DWORD PTR [esi-0x3c2de1c4]
  4113f9:	stc    
  4113fa:	sub    esi,DWORD PTR [ebx+0x50dcd71]
  411400:	dec    edi
  411401:	xchg   ebp,eax
  411402:	dec    ebx
  411403:	jno    0x4113fb
  411405:	xchg   esi,eax
  411406:	and    BYTE PTR ds:0xf3e9e7c1,bh
  41140c:	xchg   edi,eax
  41140d:	fimul  WORD PTR [eax-0x62b6dc6]
  411413:	(bad)  
  411414:	mov    cl,0xba
  411416:	outs   dx,BYTE PTR ds:[esi]
  411417:	jnp    0x41140e
  411419:	pop    edi
  41141a:	out    dx,eax
  41141b:	add    BYTE PTR [ebx],cl
  41141d:	inc    eax
  41141e:	xchg   ecx,eax
  41141f:	outs   dx,BYTE PTR ds:[esi]
  411420:	dec    esi
  411421:	jecxz  0x411472
  411423:	cmc    
  411424:	jp     0x4113a6
  411426:	mov    eax,ds:0xde27cd11
  41142b:	mov    dl,0xa1
  41142d:	ror    BYTE PTR [ebp-0x67],0x24
  411431:	fdivp  st(5),st
  411433:	es fstp DWORD PTR fs:[edx-0x3783700d]
  41143b:	or     eax,0x9cc5e620
  411440:	pop    esp
  411441:	dec    ebp
  411442:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411443:	xor    esi,eax
  411445:	jbe    0x41144f
  411447:	jmp    FWORD PTR [edi]
  411449:	mov    al,0xfe
  41144b:	sbb    al,0xad
  41144d:	mov    ?,ebx
  41144f:	fbld   TBYTE PTR [ecx]
  411451:	das    
  411452:	mov    edx,0x8096fd2b
  411457:	les    edx,FWORD PTR ds:[ebx+0x44bd7d4f]
  41145e:	mov    al,ds:0x8db50b03
  411463:	push   ecx
  411464:	jbe    0x4114c6
  411466:	pop    ecx
  411467:	push   ss
  411468:	jp     0x4114d8
  41146a:	sub    al,0x65
  41146c:	fcomp  DWORD PTR gs:[ecx+0x11]
  411470:	sbb    al,0x76
  411472:	icebp  
  411473:	push   esi
  411474:	scas   eax,DWORD PTR es:[edi]
  411475:	lds    ecx,FWORD PTR [edx-0x2a]
  411478:	sub    bl,ah
  41147a:	mov    ebx,DWORD PTR [eax+0x49]
  41147d:	xor    DWORD PTR [edx-0x56],edx
  411480:	in     eax,0xd9
  411482:	les    edx,FWORD PTR ds:0x912cb61d
  411488:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411489:	xor    DWORD PTR [edx+0x6c],edx
  41148c:	mov    ds:0x263445a3,al
  411491:	jmp    0x41146d
  411493:	out    dx,eax
  411494:	gs dec ebx
  411496:	ret    
  411497:	bound  ebp,QWORD PTR [esi]
  411499:	ja     0x411453
  41149b:	add    esp,DWORD PTR [edi+ebp*1-0xc2cc850]
  4114a2:	jmp    0xa105:0xc83436b
  4114a9:	aas    
  4114aa:	jmp    0x91038b0
  4114af:	test   BYTE PTR [ebx+0x49ce957e],al
  4114b5:	cmp    al,0x8e
  4114b7:	rol    esp,0xe7
  4114ba:	stc    
  4114bb:	retf   0xcf94
  4114be:	fwait
  4114bf:	cmp    ah,BYTE PTR [ebp-0x1b]
  4114c2:	or     al,0x3b
  4114c4:	xor    ch,0x50
  4114c7:	leave  
  4114c8:	cmp    al,0xb3
  4114ca:	sbb    ch,BYTE PTR ds:[ecx+0x2d]
  4114ce:	sub    dl,BYTE PTR [edi]
  4114d0:	add    eax,0xf224475b
  4114d5:	mul    BYTE PTR [edx+0x3bef1e1e]
  4114db:	jae    0x411512
  4114dd:	push   edi
  4114de:	sbb    al,0x21
  4114e0:	xchg   ebx,eax
  4114e1:	mov    ebp,0x1e61bef5
  4114e6:	dec    ecx
  4114e7:	ja     0x4114a5
  4114e9:	hlt    
  4114ea:	and    eax,0xba96cb2
  4114ef:	xor    DWORD PTR [ecx-0x38f7ad56],0xe45dbd5c
  4114f9:	mov    eax,0xd95c6ed7
  4114fe:	xlat   BYTE PTR ds:[ebx]
  4114ff:	push   cs
  411500:	xchg   edi,eax
  411501:	add    esi,DWORD PTR [edx-0x53f3e47]
  411507:	mov    es,WORD PTR [edx]
  411509:	int    0xd
  41150b:	or     ebx,eax
  41150d:	sbb    al,0x7e
  41150f:	mov    ch,0x65
  411511:	imul   BYTE PTR [ebx]
  411513:	sbb    al,0x72
  411515:	mov    ah,0xec
  411517:	jp     0x411538
  411519:	push   ebp
  41151a:	mov    al,ds:0x463e5ca4
  41151f:	push   edi
  411520:	out    dx,al
  411521:	fwait
  411522:	sub    ah,BYTE PTR [esi+0x7fe94c4f]
  411528:	and    eax,0x6cec17fe
  41152d:	in     eax,0x66
  41152f:	test   eax,0xe77942e5
  411534:	(bad)  
  411535:	xor    ecx,DWORD PTR [ecx+0x43418051]
  41153b:	xchg   ebp,eax
  41153c:	pop    ebp
  41153d:	sub    eax,0x8de7e965
  411542:	mov    ecx,ebx
  411544:	(bad)
  411547:	adc    eax,0x55159c3b
  41154c:	xor    DWORD PTR ds:0x7e62af9f,edx
  411552:	jnp    0x4114e0
  411554:	dec    ecx
  411555:	es mov ebp,0x9fd2d85a
  41155b:	mov    ch,0xdb
  41155d:	cmp    eax,0xeae58d0b
  411562:	(bad)  
  411563:	jp     0x411582
  411565:	imul   edx,DWORD PTR [eax+0x31],0x27
  411569:	mov    eax,ds:0xc09417a1
  41156e:	or     dl,ch
  411570:	jmp    0x8c8be592
  411575:	cmp    dl,BYTE PTR [ecx]
  411577:	(bad)  [ecx]
  411579:	or     DWORD PTR [ecx],eax
  41157b:	sbb    eax,0x86ed357b
  411580:	out    0xdd,eax
  411582:	cmp    BYTE PTR [ebp-0x29],al
  411585:	and    BYTE PTR [ebx-0x1a6cc19e],al
  41158b:	clc    
  41158c:	adc    BYTE PTR [esi],dh
  41158e:	out    dx,eax
  41158f:	jge    0x4115a8
  411591:	and    eax,0xf2a97bb0
  411596:	in     al,0x58
  411598:	sub    DWORD PTR [edi+eax*8+0x11ea6e35],ebp
  41159f:	test   al,0xad
  4115a1:	idiv   dh
  4115a3:	popa   
  4115a4:	inc    eax
  4115a5:	add    DWORD PTR [edi-0x7d],edi
  4115a8:	mov    ds:0x9c41fddb,al
  4115ad:	add    dl,BYTE PTR [edx+0x6b]
  4115b0:	dec    eax
  4115b1:	sub    BYTE PTR [ebx],0xa6
  4115b4:	scas   al,BYTE PTR es:[edi]
  4115b5:	inc    ebx
  4115b6:	pop    es
  4115b7:	xchg   edi,eax
  4115b8:	loope  0x411612
  4115ba:	aaa    
  4115bb:	jl     0x4115f4
  4115bd:	rcl    DWORD PTR [esi-0x7c4052e7],1
  4115c3:	jb     0x411625
  4115c5:	or     bl,dh
  4115c7:	popa   
  4115c8:	adc    DWORD PTR gs:[edi+0x45],0xebf600d4
  4115d0:	mov    al,0xc
  4115d2:	dec    ecx
  4115d3:	cmp    DWORD PTR [ecx+ebp*2],esp
  4115d6:	sub    bh,BYTE PTR [edx+eax*4-0x38]
  4115da:	inc    eax
  4115db:	fst    QWORD PTR [ebx+0x4c]
  4115de:	xchg   edx,eax
  4115df:	cmp    eax,0xb3b8747e
  4115e4:	sbb    eax,0xe13b90
  4115e9:	sbb    eax,esp
  4115eb:	jnp    0x4115b7
  4115ed:	xor    al,0xe5
  4115ef:	in     al,0x64
  4115f1:	push   ss
  4115f2:	dec    ebx
  4115f3:	std    
  4115f4:	rcr    DWORD PTR [edi+ebp*1],cl
  4115f7:	mov    ebx,DWORD PTR ss:[ecx-0x12]
  4115fb:	dec    esp
  4115fc:	ins    BYTE PTR es:[edi],dx
  4115fd:	pop    esi
  4115fe:	add    DWORD PTR ds:0x28ac2603,eax
  411604:	out    0x79,al
  411606:	jno    0x411671
  411608:	push   edx
  411609:	cmp    bl,BYTE PTR [eax-0x334afa15]
  41160f:	add    esi,ebx
  411611:	sbb    al,0x1e
  411613:	mov    ecx,0xd8ddf6f7
  411618:	iret   
  411619:	sar    DWORD PTR [ecx-0x1c],cl
  41161c:	ss and esp,esi
  41161f:	popa   
  411620:	stos   DWORD PTR es:[edi],eax
  411621:	inc    ebp
  411622:	sub    BYTE PTR [ecx],dh
  411624:	ins    BYTE PTR es:[edi],dx
  411625:	lahf   
  411626:	in     eax,0xb0
  411628:	dec    ebp
  411629:	xor    al,0x23
  41162b:	sbb    al,0x0
  41162d:	dec    esp
  41162e:	clc    
  41162f:	or     eax,0x15f245fc
  411634:	push   edx
  411635:	push   cs
  411636:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411637:	aas    
  411638:	mov    al,0xa5
  41163a:	adc    BYTE PTR [esi-0x28321d69],0xd5
  411641:	test   al,0x61
  411643:	push   0xc7e201ed
  411648:	pop    ebx
  411649:	adc    dh,dh
  41164b:	or     BYTE PTR [ecx+0x3f],ah
  41164e:	out    0xc,eax
  411650:	inc    edx
  411651:	sbb    eax,0x96fe9817
  411656:	outs   dx,BYTE PTR ds:[esi]
  411657:	clc    
  411658:	cwde   
  411659:	cmp    esp,DWORD PTR [ebp-0xd]
  41165c:	ds in  eax,0x3b
  41165f:	xchg   ebx,eax
  411660:	xchg   esp,eax
  411661:	js     0x4116cd
  411663:	outs   dx,DWORD PTR ds:[esi]
  411664:	mov    WORD PTR [ecx-0x23aeb894],ds
  41166a:	cdq    
  41166b:	ret    
  41166c:	loope  0x411695
  41166e:	mov    ebx,0x2f05bf6f
  411673:	mov    dh,0xd8
  411675:	daa    
  411676:	aad    0x71
  411678:	jge    0x41160e
  41167a:	or     ebp,DWORD PTR [esi+0x173b39c9]
  411680:	cmp    DWORD PTR [ebx-0x5375ecf4],edi
  411686:	aad    0xef
  411688:	(bad)  
  411689:	mov    edx,0x4e76d46a
  41168e:	fwait
  41168f:	inc    eax
  411690:	push   ds
  411691:	sar    BYTE PTR [edx],cl
  411693:	add    BYTE PTR [edi+esi*4+0x4e],0x6b
  411698:	std    
  411699:	inc    ecx
  41169a:	add    eax,0x147d6717
  41169f:	js     0x4116e8
  4116a1:	inc    esi
  4116a2:	pop    eax
  4116a3:	rcl    ah,0x41
  4116a6:	test   eax,0x15e9a65b
  4116ab:	inc    esp
  4116ac:	test   DWORD PTR [edx],esi
  4116ae:	jbe    0x411646
  4116b0:	sbb    esi,DWORD PTR [esp+edx*1-0x6]
  4116b4:	and    eax,0x31f50a59
  4116b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116ba:	(bad)  
  4116bb:	cmp    cl,bh
  4116bd:	nop
  4116be:	imul   ebx,DWORD PTR ds:0xe977c368,0x65
  4116c5:	test   BYTE PTR [edi+ecx*2],dh
  4116c8:	add    DWORD PTR [edx+eiz*2-0x66],ebx
  4116cc:	inc    ebp
  4116cd:	push   edx
  4116ce:	push   ebx
  4116cf:	mov    ecx,0x27556a03
  4116d4:	push   0xffffffe5
  4116d6:	mov    gs,WORD PTR [eax]
  4116d8:	sub    BYTE PTR [edi],bh
  4116da:	xchg   DWORD PTR [eax-0x7f],ecx
  4116dd:	add    BYTE PTR [edx-0x2b],bl
  4116e0:	(bad)
  4116e3:	shl    BYTE PTR [ebp-0x2e5f85a1],1
  4116e9:	popf   
  4116ea:	test   BYTE PTR [esi-0x49cdfec9],al
  4116f0:	pop    esi
  4116f1:	sub    DWORD PTR [ebp-0x71],ecx
  4116f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116f5:	or     eax,0x859a8150
  4116fa:	ja     0x41171d
  4116fc:	sbb    ebx,DWORD PTR [ebp+0x72]
  4116ff:	mov    eax,0xa7638e14
  411704:	mov    dh,0x73
  411706:	jle    0x411733
  411708:	cmp    DWORD PTR [ecx-0x32c252c0],ebp
  41170e:	in     eax,0x32
  411710:	pop    ds
  411711:	xor    DWORD PTR [ecx],0x22
  411714:	dec    edx
  411715:	inc    ecx
  411716:	adc    eax,0x7b6cb2c3
  41171b:	ror    DWORD PTR [esi+0x4],1
  41171e:	xor    BYTE PTR [eax-0x61f9b021],ah
  411724:	fisttp WORD PTR [ecx]
  411726:	fist   DWORD PTR [ecx-0x63]
  411729:	xlat   BYTE PTR ds:[ebx]
  41172a:	mov    ebx,0xf5aadf24
  41172f:	rol    BYTE PTR [edi],1
  411731:	mov    esp,0x1e571d07
  411736:	pop    ecx
  411737:	jae    0x4116f7
  411739:	sbb    al,BYTE PTR [esi+ebp*2+0x43554d89]
  411740:	jl     0x4116c6
  411742:	stos   BYTE PTR es:[edi],al
  411743:	mov    DWORD PTR [ecx+0x6fe223fc],ebx
  411749:	fdivr  QWORD PTR [ebx-0x11abe45d]
  41174f:	imul   ebp,DWORD PTR [edi],0xdfd5f885
  411755:	dec    eax
  411756:	js     0x41178d
  411758:	inc    eax
  411759:	mov    ds:0xbcf307ec,al
  41175e:	popf   
  41175f:	push   ds
  411760:	lods   eax,DWORD PTR ds:[esi]
  411761:	sub    BYTE PTR [edi+0x1d],bl
  411764:	hlt    
  411765:	inc    esp
  411766:	pushf  
  411767:	adc    edi,edx
  411769:	imul   BYTE PTR [ecx]
  41176b:	xchg   esi,eax
  41176c:	in     eax,0x76
  41176e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41176f:	xchg   BYTE PTR [esi-0x4bc265af],al
  411775:	jno    0x41175d
  411777:	and    BYTE PTR [edi-0x5e],ch
  41177a:	add    BYTE PTR [edi+0x3a0328a4],cl
  411780:	stos   BYTE PTR es:[edi],al
  411781:	xor    eax,0xa16d1728
  411786:	sub    DWORD PTR [ebx+0x2f],edi
  411789:	repnz aas 
  41178b:	push   cs
  41178c:	pop    edx
  41178d:	xchg   edx,eax
  41178e:	add    BYTE PTR [edx],ch
  411790:	out    dx,eax
  411791:	out    dx,eax
  411792:	mov    ds:0xe0526429,eax
  411797:	xchg   DWORD PTR [ebx+eax*4],eax
  41179a:	ret    0x7ca2
  41179d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41179e:	gs inc esi
  4117a0:	inc    ebx
  4117a1:	(bad)  
  4117a2:	loope  0x4117b6
  4117a4:	jne    0x4117fd
  4117a6:	jbe    0x41175c
  4117a8:	xor    al,0x2f
  4117aa:	and    BYTE PTR [eax+eiz*1],dh
  4117ad:	leave  
  4117ae:	aaa    
  4117af:	add    ecx,eax
  4117b1:	xor    eax,0xebfbc1ff
  4117b6:	int    0x9
  4117b8:	repnz repnz mov esi,0x6e60b8eb
  4117bf:	and    al,0x9
  4117c1:	call   0x5fe1:0x23820b38
  4117c8:	adc    esi,DWORD PTR [edx]
  4117ca:	sbb    bh,BYTE PTR [edx]
  4117cc:	xlat   BYTE PTR ds:[ebx]
  4117cd:	mov    ?,WORD PTR [ecx-0x12]
  4117d0:	cld    
  4117d1:	or     dh,BYTE PTR [ebx]
  4117d3:	cmp    al,0xdb
  4117d5:	in     al,dx
  4117d6:	add    ebx,DWORD PTR [edx-0x63]
  4117d9:	shr    BYTE PTR [esi],cl
  4117db:	xor    DWORD PTR ds:0x5700ffc4,ecx
  4117e1:	mov    DWORD PTR [esi],eax
  4117e3:	jmp    0x1bd0:0x8e0f38e8
  4117ea:	xchg   edi,eax
  4117eb:	xchg   BYTE PTR [edx],bh
  4117ed:	or     BYTE PTR [edi+0x36],bh
  4117f0:	dec    ebp
  4117f1:	and    eax,0x569db64c
  4117f6:	popf   
  4117f7:	adc    eax,DWORD PTR [ecx]
  4117f9:	xor    ebp,esi
  4117fb:	inc    edi
  4117fc:	jno    0x411817
  4117fe:	test   eax,0x41ff0a80
  411803:	repz and DWORD PTR [ebx-0x475102ea],esi
  41180a:	outs   dx,BYTE PTR ds:[esi]
  41180b:	ins    DWORD PTR es:[edi],dx
  41180c:	ret    0xcb46
  41180f:	sbb    eax,0x7823b7fc
  411814:	or     dh,BYTE PTR [ecx-0x7e5b9cf]
  41181a:	div    BYTE PTR [esi]
  41181c:	add    al,0x75
  41181e:	mov    ebp,0x3d674468
  411823:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411824:	(bad)  
  411825:	int3   
  411826:	pop    ebp
  411827:	adc    al,0x9d
  411829:	shl    dl,1
  41182b:	imul   BYTE PTR [edi+0x7aa89a57]
  411831:	xlat   BYTE PTR ds:[ebx]
  411832:	out    dx,eax
  411833:	add    esp,ebp
  411835:	stos   BYTE PTR es:[edi],al
  411836:	jecxz  0x411825
  411838:	jne    0x41186d
  41183a:	jg     0x41189f
  41183c:	(bad)  
  41183e:	push   esp
  41183f:	mov    cl,0x87
  411841:	xchg   BYTE PTR [edx],al
  411843:	cdq    
  411844:	sbb    eax,0x113f352c
  411849:	popf   
  41184a:	es adc dl,dh
  41184d:	outs   dx,DWORD PTR ds:[esi]
  41184e:	fadd   DWORD PTR [ebp+0x5c]
  411851:	add    DWORD PTR [edx+esi*4+0x5e131dae],esp
  411858:	sub    DWORD PTR [esi+0x707d7ce5],0xffffffc0
  41185f:	inc    edi
  411860:	pop    esi
  411861:	(bad)  
  411862:	aas    
  411863:	mov    bl,0x15
  411865:	adc    ebx,edx
  411867:	jmp    0x411850
  411869:	shl    DWORD PTR [ecx-0x5b716b7f],1
  41186f:	cmp    dl,BYTE PTR [ecx+eax*4-0x5c]
  411873:	fwait
  411874:	and    al,0x2e
  411876:	loopne 0x411803
  411878:	ficom  DWORD PTR [esi]
  41187a:	mov    ebx,0x16eb8eec
  41187f:	das    
  411880:	pop    eax
  411881:	dec    ebx
  411882:	fwait
  411883:	and    bh,ch
  411885:	js     0x4118f9
  411887:	xchg   ecx,eax
  411888:	cwde   
  411889:	jmp    0x4118f6
  41188b:	pop    ecx
  41188c:	je     0x4118f1
  41188e:	sub    BYTE PTR [edx],ch
  411890:	(bad)  
  411891:	jmp    0x41183e
  411893:	(bad)  [ebx]
  411895:	mov    ebp,0xf3e34ba3
  41189a:	sar    BYTE PTR [ecx+0x7f],cl
  41189d:	jmp    0x6cc1:0xa78c74df
  4118a4:	in     eax,0x1
  4118a6:	aas    
  4118a7:	ss mov ecx,0x59959d3d
  4118ad:	fld    TBYTE PTR [esi+0x324202e]
  4118b3:	xor    edx,ebx
  4118b5:	xor    al,0x46
  4118b7:	out    dx,eax
  4118b8:	les    edx,FWORD PTR [edx+0x2210ed88]
  4118be:	jnp    0x41189c
  4118c0:	fs push es
  4118c2:	sub    ch,dl
  4118c4:	push   ds
  4118c5:	daa    
  4118c6:	cmp    eax,DWORD PTR [ebx+0x13]
  4118c9:	xor    BYTE PTR [edi-0x69c11c46],ah
  4118cf:	lods   eax,DWORD PTR ds:[esi]
  4118d0:	add    esp,DWORD PTR [ecx+0x62f9c845]
  4118d6:	xchg   DWORD PTR [eax+ebp*2+0x3b],eax
  4118da:	inc    edi
  4118db:	std    
  4118dc:	push   0xffffffcf
  4118de:	addr16 push ebp
  4118e0:	mov    BYTE PTR [ecx-0x71d2ea5b],cl
  4118e6:	fisttp DWORD PTR [edx-0x4388cd98]
  4118ec:	add    eax,0xfeac338f
  4118f1:	popa   
  4118f2:	es push es
  4118f4:	and    al,0xf7
  4118f6:	xchg   edx,eax
  4118f7:	popf   
  4118f8:	or     eax,DWORD PTR [bx+di+0x47a5]
  4118fd:	dec    eax
  4118fe:	ins    DWORD PTR es:[edi],dx
  4118ff:	add    eax,0xe88ae424
  411904:	mov    ds:0xffd64fb7,eax
  411909:	sbb    al,0x8b
  41190b:	call   0x1eec:0xc00ae588
  411912:	or     eax,0x8fc4d1ca
  411917:	cmp    BYTE PTR [edx+eiz*4+0x64],cl
  41191b:	aaa    
  41191c:	sbb    esp,ebp
  41191e:	clc    
  41191f:	cmc    
  411920:	ins    BYTE PTR es:[edi],dx
  411921:	test   BYTE PTR [ecx-0x45607fe1],al
  411927:	vmwrite edx,DWORD PTR [ecx]
  41192a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41192b:	stc    
  41192c:	xor    ebx,esp
  41192e:	cmp    DWORD PTR [edx-0x5edec372],edi
  411934:	nop
  411935:	cmp    eax,0xc57dcd18
  41193a:	pop    esi
  41193b:	repz push edx
  41193d:	mov    eax,ds:0x9a8905cc
  411942:	test   BYTE PTR [ebx],cl
  411944:	or     esi,DWORD PTR ds:0x656be8e6
  41194a:	test   esp,ebx
  41194c:	pop    edx
  41194d:	ss out 0x42,eax
  411950:	fldcw  WORD PTR [ebx+0x4c5a7e1e]
  411956:	inc    ecx
  411957:	and    edx,edi
  411959:	jmp    0xe4108a02
  41195e:	ja     0x41199a
  411960:	sahf   
  411961:	ds xchg edx,eax
  411963:	jge    0x41198e
  411965:	aas    
  411966:	fisub  DWORD PTR [edi+0xc0c1ca6]
  41196c:	push   ecx
  41196d:	inc    ebp
  41196e:	pop    edi
  41196f:	ds jnp 0x41195e
  411972:	sbb    ah,BYTE PTR [edx-0x6b]
  411975:	pop    es
  411976:	inc    esi
  411977:	pop    ds
  411978:	adc    bl,BYTE PTR [edx+0x71922674]
  41197e:	sub    bh,BYTE PTR [ecx]
  411980:	inc    esp
  411981:	xlat   BYTE PTR ds:[ebx]
  411982:	mov    ecx,0x1b3f1cef
  411987:	imul   ebx,DWORD PTR [ebx+0x530907a5],0x2b74b809
  411991:	ficom  DWORD PTR [edx+0x3e]
  411994:	adc    edi,DWORD PTR [edx+edi*2-0x276e942c]
  41199b:	les    edi,FWORD PTR [edi]
  41199d:	daa    
  41199e:	sahf   
  41199f:	cwde   
  4119a0:	repz push 0xffffffdd
  4119a3:	mov    eax,DWORD PTR [edi+0xf]
  4119a6:	cmp    ebx,esp
  4119a8:	data16 jb 0x411930
  4119ab:	xor    edx,esp
  4119ad:	aaa    
  4119ae:	out    0x47,eax
  4119b0:	and    cl,BYTE PTR [ebx]
  4119b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119b3:	ret    0xc06b
  4119b6:	push   esp
  4119b7:	dec    eax
  4119b8:	mov    ebp,fs
  4119ba:	ret    
  4119bb:	xchg   edx,eax
  4119bc:	lahf   
  4119bd:	rcl    DWORD PTR [ebx-0x88ae205],cl
  4119c3:	repz jl 0x411a3f
  4119c6:	or     DWORD PTR [edi+edi*1],ecx
  4119c9:	js     0x411968
  4119cb:	mov    ebp,0x23c0482
  4119d0:	jmp    0x41195e
  4119d2:	popf   
  4119d3:	or     BYTE PTR es:[esi-0x6e],cl
  4119d7:	(bad)  
  4119d8:	out    0xf1,al
  4119da:	ins    DWORD PTR es:[edi],dx
  4119db:	push   cs
  4119dc:	push   ebp
  4119dd:	dec    ebx
  4119de:	mov    ch,0xe8
  4119e0:	cli    
  4119e1:	dec    esp
  4119e2:	mov    cl,0x50
  4119e4:	mov    eax,0x147fa77d
  4119e9:	hlt    
  4119ea:	xor    DWORD PTR [esi+0x26],esi
  4119ed:	xchg   edx,eax
  4119ee:	jo     0x411991
  4119f0:	or     bh,BYTE PTR [eax+0x73]
  4119f3:	enter  0xc8ba,0xa1
  4119f7:	push   esi
  4119f8:	fadd   DWORD PTR [ebx]
  4119fa:	fsin   
  4119fc:	and    al,0x8d
  4119fe:	repnz push 0xc930724f
  411a04:	aas    
  411a05:	ss es int 0x23
  411a09:	js     0x411a60
  411a0b:	dec    eax
  411a0c:	scas   eax,DWORD PTR es:[edi]
  411a0d:	(bad)  
  411a0e:	in     eax,dx
  411a0f:	mov    BYTE PTR [ebx],dh
  411a11:	jb     0x4119ba
  411a13:	in     eax,dx
  411a14:	jbe    0x411a38
  411a16:	mov    bl,BYTE PTR [ecx]
  411a18:	adc    eax,0x7f0b5eaa
  411a1d:	push   ebx
  411a1e:	xchg   ebp,eax
  411a1f:	xor    al,0x69
  411a21:	jmp    0x4119f1
  411a23:	add    dl,0xaf
  411a26:	xor    DWORD PTR [edi+0x356ec6a4],edx
  411a2c:	out    0x74,eax
  411a2e:	fwait
  411a2f:	and    al,BYTE PTR ss:[esi-0x14]
  411a33:	mov    edi,0xb987815
  411a38:	jmp    0xc3d0:0xaa1b4d50
  411a3f:	jmp    0x40435bf9
  411a44:	adc    al,0xda
  411a46:	in     al,0xcb
  411a48:	repz clc 
  411a4a:	fdivr  st(0),st
  411a4c:	jg     0x4119eb
  411a4e:	ins    DWORD PTR es:[edi],dx
  411a4f:	arpl   bx,sp
  411a51:	ins    DWORD PTR es:[edi],dx
  411a52:	xchg   BYTE PTR [ecx+eiz*8-0x7d8c23b6],bh
  411a59:	sub    DWORD PTR gs:[ebp-0x15e2e7c],0xffffff9e
  411a61:	pop    esp
  411a62:	loope  0x411a2c
  411a64:	or     DWORD PTR [esi-0x381d366b],ecx
  411a6a:	cdq    
  411a6b:	push   ebx
  411a6c:	push   ebp
  411a6d:	and    eax,0xaf9f5b1e
  411a72:	pop    edx
  411a73:	sbb    DWORD PTR [edi-0x7ffd00a2],esp
  411a79:	sub    al,0x29
  411a7b:	push   ebp
  411a7c:	mov    ebx,eax
  411a7e:	fdivr  QWORD PTR [ebx+0xf]
  411a81:	shr    DWORD PTR [esi+0x1594f47],0xd
  411a88:	inc    edi
  411a89:	shl    al,1
  411a8b:	scas   eax,DWORD PTR es:[edi]
  411a8c:	mov    ds:0x698da0b4,al
  411a91:	add    eax,0xaf5797c9
  411a96:	stos   BYTE PTR es:[edi],al
  411a97:	inc    eax
  411a98:	out    0xc7,eax
  411a9a:	pop    ecx
  411a9b:	adc    dl,BYTE PTR [ecx-0x4a]
  411a9e:	ja     0x411aa3
  411aa0:	jns    0x411aab
  411aa2:	(bad)  
  411aa3:	setp   BYTE PTR [edx+0x7b]
  411aa7:	inc    ebp
  411aa8:	adc    edi,DWORD PTR [ebp-0x20]
  411aab:	mov    ds:0xf8e62472,eax
  411ab0:	icebp  
  411ab1:	call   0x5d0e5fcb
  411ab6:	into   
  411ab7:	sub    esi,ecx
  411ab9:	cdq    
  411aba:	mov    eax,ds:0x81a58d4f
  411abf:	add    al,0xd8
  411ac1:	sub    BYTE PTR [ecx+0x67a16f81],al
  411ac7:	fidiv  WORD PTR [edi+0x6da258d4]
  411acd:	ss mov esp,0x7bd5aba9
  411ad3:	push   0x2f35c10b
  411ad8:	xchg   esp,eax
  411ad9:	out    0x10,eax
  411adb:	sahf   
  411adc:	mov    BYTE PTR [ebp-0x27],bl
  411adf:	scas   al,BYTE PTR es:[edi]
  411ae0:	mov    ebx,0xba7676a7
  411ae5:	rcr    DWORD PTR [ebx+0x5f],cl
  411ae8:	fnstcw WORD PTR [ebx+0x63]
  411aeb:	cld    
  411aec:	enter  0xcbbf,0x74
  411af0:	mov    BYTE PTR [edx],ah
  411af2:	test   BYTE PTR [ebx-0x10e47348],ah
  411af8:	mov    bh,0xc7
  411afa:	popf   
  411afb:	pushf  
  411afc:	mov    ah,dl
  411afe:	dec    edx
  411aff:	jge    0x411b24
  411b01:	add    BYTE PTR [edi+ebx*2],cl
  411b04:	jnp    0x411aa3
  411b06:	in     eax,dx
  411b07:	mov    dh,0x11
  411b09:	(bad)  
  411b0a:	xlat   BYTE PTR ds:[ebx]
  411b0b:	inc    ebx
  411b0c:	in     al,0xd8
  411b0e:	dec    esi
  411b0f:	repnz sub DWORD PTR [ebp-0x58],ebp
  411b13:	(bad)  
  411b15:	sub    eax,0xe46c61c3
  411b1a:	bound  ebp,QWORD PTR [edx+0x75ec2e7c]
  411b20:	push   ebx
  411b21:	mov    DWORD PTR [edi],ecx
  411b23:	or     ecx,DWORD PTR [edx+0x63]
  411b26:	cmp    DWORD PTR [eax],edx
  411b28:	je     0x411b9b
  411b2a:	retf   
  411b2b:	popa   
  411b2c:	cld    
  411b2d:	call   0xb006997f
  411b32:	cmp    eax,0x12f5c39b
  411b37:	cmp    ah,ch
  411b39:	nop
  411b3a:	mov    al,0x8a
  411b3c:	outs   dx,BYTE PTR ds:[esi]
  411b3d:	push   ebx
  411b3e:	inc    edi
  411b3f:	aaa    
  411b40:	mov    WORD PTR [eax-0x73415b7d],ds
  411b46:	(bad)  
  411b47:	cld    
  411b48:	push   ecx
  411b49:	call   0x4eef:0xc2d45c93
  411b50:	cmc    
  411b51:	jge    0x411b9d
  411b53:	mov    ebx,0xc9eecfca
  411b58:	mov    BYTE PTR [ebp+0x5bde4c59],dl
  411b5e:	ins    BYTE PTR es:[edi],dx
  411b5f:	xchg   esi,eax
  411b60:	ds inc edx
  411b62:	xor    ah,BYTE PTR [edx+0x50]
  411b65:	sub    al,cl
  411b67:	std    
  411b68:	aad    0x9d
  411b6a:	xchg   edx,eax
  411b6b:	call   0xb219403
  411b70:	loop   0x411b81
  411b72:	and    al,0x14
  411b74:	(bad)  
  411b75:	rcl    BYTE PTR ds:0xc2df90d0,1
  411b7b:	call   0xd3b022e
  411b80:	add    DWORD PTR [ecx-0xb],esi
  411b83:	daa    
  411b84:	test   eax,0x2aff261c
  411b89:	xchg   ebp,eax
  411b8a:	jae    0x411b0f
  411b8c:	xor    DWORD PTR [eax+ebp*8],eax
  411b8f:	push   esp
  411b90:	xchg   ebx,eax
  411b91:	inc    ecx
  411b92:	arpl   ax,cx
  411b94:	das    
  411b95:	cmp    eax,DWORD PTR [ebx-0x54]
  411b98:	xor    al,0x46
  411b9a:	js     0x411beb
  411b9c:	ss sbb eax,0x98e1e778
  411ba2:	ret    
  411ba3:	cmp    eax,DWORD PTR [ebx-0x6c]
  411ba6:	in     al,dx
  411ba7:	inc    esp
  411ba8:	jo     0x411bfa
  411baa:	push   ds
  411bab:	daa    
  411bac:	sub    ah,BYTE PTR [edx+ebx*4+0x985f098]
  411bb3:	aad    0x88
  411bb5:	or     eax,0xa55d9157
  411bba:	(bad)  
  411bbb:	xchg   ecx,eax
  411bbc:	mov    edx,0x45ec0de
  411bc1:	jns    0x411b70
  411bc3:	adc    DWORD PTR [ebx-0x7eb8023d],esi
  411bc9:	xchg   edx,eax
  411bca:	retf   0x2ddf
  411bcd:	sbb    eax,0xb83952be
  411bd2:	cwde   
  411bd3:	jge    0x411bcb
  411bd5:	jne    0x411c0d
  411bd7:	sub    BYTE PTR [eax-0x45],bl
  411bda:	cmc    
  411bdb:	(bad)  
  411bdc:	xchg   ebp,eax
  411bdd:	adc    eax,0xf9ab07ab
  411be2:	arpl   bx,sp
  411be4:	xchg   edi,eax
  411be5:	cwde   
  411be6:	mov    ebp,DWORD PTR ds:0xe47005ef
  411bec:	or     eax,0x469fc235
  411bf1:	pop    ecx
  411bf2:	add    eax,0x27931c09
  411bf7:	test   DWORD PTR [edi+0x6d],esi
  411bfa:	lock fst DWORD PTR [edi-0x54299107]
  411c01:	mov    al,0x7
  411c03:	lods   eax,DWORD PTR ds:[esi]
  411c04:	sbb    bl,BYTE PTR [edi-0x12]
  411c07:	imul   eax,DWORD PTR [ebp-0x37f7cf1d],0xffffff81
  411c0e:	pop    ebx
  411c0f:	adc    BYTE PTR ds:0xaed19a8,0x7c
  411c16:	iret   
  411c17:	sbb    edx,ecx
  411c19:	lahf   
  411c1a:	jg     0x411bac
  411c1c:	pop    ss
  411c1d:	sub    al,0x88
  411c1f:	jae    0x411c59
  411c21:	(bad)  
  411c22:	xor    ecx,ecx
  411c24:	call   0x678a4754
  411c29:	adc    BYTE PTR [edx+0x76],0xde
  411c2d:	mov    BYTE PTR [esp+ebx*4-0x73dc1f83],dl
  411c34:	ins    BYTE PTR es:[edi],dx
  411c35:	jmp    0x411be8
  411c37:	mov    ds:0x5ca61c63,al
  411c3c:	push   ebx
  411c3d:	enter  0x91eb,0x36
  411c41:	popf   
  411c42:	iret   
  411c43:	sbb    al,0xbe
  411c45:	fdivr  DWORD PTR [ebp-0x1649dd94]
  411c4b:	sub    al,0xd1
  411c4d:	dec    ebp
  411c4e:	call   0xce3c:0xb3f42693
  411c55:	lods   eax,DWORD PTR ds:[esi]
  411c56:	mov    ecx,0x440f1620
  411c5b:	dec    edi
  411c5c:	in     al,dx
  411c5d:	sbb    al,0xb6
  411c5f:	jno    0x411c7a
  411c61:	and    bh,bl
  411c63:	fsub   QWORD PTR [esi+0x3a51c743]
  411c69:	add    BYTE PTR ds:0xdb98a52c,ah
  411c6f:	dec    edi
  411c70:	adc    bh,BYTE PTR [esi-0xf1a8ae5]
  411c76:	cmc    
  411c77:	test   eax,0x342d8b80
  411c7c:	mov    edi,0x9c812703
  411c81:	jmp    0x411c58
  411c83:	fnstsw WORD PTR [eax+esi*2-0x42]
  411c87:	lds    ebx,FWORD PTR [esi-0x2]
  411c8a:	sub    ebx,ebx
  411c8c:	push   esi
  411c8d:	sub    BYTE PTR [esi+0x282c5bbc],ah
  411c93:	cmp    eax,0x8bb4e73a
  411c98:	out    dx,al
  411c99:	lods   al,BYTE PTR ds:[esi]
  411c9a:	or     BYTE PTR [ebx+0x64],al
  411c9d:	xor    eax,0x1a2bcb83
  411ca2:	fimul  WORD PTR [edx+0x26]
  411ca5:	jo     0x411c8e
  411ca7:	mov    edx,0x721c1521
  411cac:	imul   edx,DWORD PTR [eax],0xe916338
  411cb2:	popf   
  411cb3:	std    
  411cb4:	sbb    BYTE PTR [edi-0x23],0xf8
  411cb8:	mul    DWORD PTR [esi]
  411cba:	pop    esp
  411cbb:	cmp    DWORD PTR [ebx+0x5f682947],esi
  411cc1:	push   cs
  411cc2:	in     eax,dx
  411cc3:	hlt    
  411cc4:	aas    
  411cc5:	fld    QWORD PTR [ecx+0x2ba3dbe5]
  411ccb:	test   BYTE PTR [esi],bh
  411ccd:	mov    ecx,0xf0022bab
  411cd2:	pop    edi
  411cd3:	xor    ebx,esi
  411cd5:	ins    DWORD PTR es:[edi],dx
  411cd6:	mov    cl,0x5d
  411cd8:	sbb    esp,DWORD PTR [ecx]
  411cda:	(bad)  
  411cdb:	and    al,0xa
  411cdd:	adc    ebp,ebx
  411cdf:	pop    edx
  411ce0:	push   edx
  411ce1:	scas   al,BYTE PTR es:[edi]
  411ce2:	ficom  WORD PTR [edx-0x18]
  411ce5:	cld    
  411ce6:	fcmovnu st,st(4)
  411ce8:	ins    DWORD PTR es:[edi],dx
  411ce9:	gs enter 0x7657,0xed
  411cee:	xchg   esp,eax
  411cef:	leave  
  411cf0:	add    ebx,edi
  411cf2:	shr    ch,cl
  411cf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411cf5:	ret    
  411cf6:	and    eax,0x5823a8d9
  411cfb:	mov    bl,0xb
  411cfd:	xchg   DWORD PTR [eax],esp
  411cff:	shr    DWORD PTR [ebx],1
  411d01:	retf   0xdef
  411d04:	int    0xbe
  411d06:	fdivr  DWORD PTR [ecx]
  411d08:	jl     0x411d7e
  411d0a:	pop    ebx
  411d0b:	mov    edx,0x937141cf
  411d10:	sub    DWORD PTR [edi+0x469a0113],ecx
  411d16:	adc    dh,BYTE PTR [ecx+0x32]
  411d19:	mov    esi,0x45ac1997
  411d1e:	adc    eax,0xdc66b1ff
  411d23:	mov    ds:0xe547b356,eax
  411d28:	jno    0x411cbe
  411d2a:	(bad)  [eax]
  411d2c:	jp     0x411d71
  411d2e:	daa    
  411d2f:	and    BYTE PTR [ecx],dl
  411d31:	or     bl,bl
  411d33:	xlat   BYTE PTR ds:[ebx]
  411d34:	mov    al,BYTE PTR [ebx]
  411d36:	mov    dh,0x2e
  411d38:	je     0x411cbc
  411d3a:	les    edi,FWORD PTR [eax]
  411d3c:	cmp    bh,ch
  411d3e:	push   esp
  411d3f:	jnp    0x411dad
  411d41:	adc    cl,BYTE PTR [ecx-0x12]
  411d44:	sub    al,0x4
  411d46:	mov    ebp,?
  411d48:	push   edx
  411d49:	scas   al,BYTE PTR es:[edi]
  411d4a:	icebp  
  411d4b:	(bad)  es:[ebx]
  411d4e:	fs mov edi,0xb9dc6914
  411d54:	and    DWORD PTR [edi],ecx
  411d56:	fisttp QWORD PTR [ebx+0x7a]
  411d59:	faddp  st(6),st
  411d5b:	cmc    
  411d5c:	xchg   ebx,eax
  411d5d:	enter  0x375c,0xcd
  411d61:	iret   
  411d62:	xor    dh,BYTE PTR [ecx+0x32]
  411d65:	nop
  411d66:	jle    0x411d4c
  411d68:	xor    esi,DWORD PTR [esi+0x2c]
  411d6b:	ret    
  411d6c:	inc    edx
  411d6d:	cwde   
  411d6e:	(bad)  
  411d6f:	xlat   BYTE PTR ds:[ebx]
  411d70:	jl     0x411d49
  411d72:	add    al,0x8e
  411d74:	and    BYTE PTR [eax],dh
  411d76:	aad    0x9d
  411d78:	mov    ah,0x8d
  411d7a:	sbb    ebx,DWORD PTR [ebp-0x53]
  411d7d:	lock and ecx,ebp
  411d80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d81:	push   edx
  411d82:	and    eax,0x5816217e
  411d87:	inc    edx
  411d88:	comiss xmm6,xmm3
  411d8b:	in     al,dx
  411d8c:	cmc    
  411d8d:	retf   0xda83
  411d90:	popf   
  411d91:	xchg   ebp,eax
  411d92:	xchg   edx,eax
  411d93:	mov    esp,0xfbc6552b
  411d98:	push   cs
  411d99:	mov    ah,0xef
  411d9b:	ins    DWORD PTR es:[edi],dx
  411d9c:	jb     0x411d61
  411d9e:	inc    ebx
  411d9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411da0:	mov    WORD PTR [edi+0x527dfac2],es
  411da6:	pop    ds
  411da7:	sub    DWORD PTR [eax],ebp
  411da9:	push   ecx
  411daa:	(bad)  
  411dac:	push   edx
  411dad:	sbb    DWORD PTR [ecx],ebp
  411daf:	loopne 0x411dd3
  411db1:	stos   BYTE PTR es:[edi],al
  411db2:	hlt    
  411db3:	inc    eax
  411db4:	test   DWORD PTR [eax+0x2c],edx
  411db7:	or     al,al
  411db9:	or     DWORD PTR [esi-0x70],ecx
  411dbc:	stc    
  411dbd:	sahf   
  411dbe:	lahf   
  411dbf:	sub    al,BYTE PTR [edx]
  411dc1:	hlt    
  411dc2:	jae    0x411e3e
  411dc4:	repz sbb ch,ah
  411dc7:	(bad)
  411dca:	or     DWORD PTR [esi+edx*8+0x7e],esp
  411dce:	int3   
  411dcf:	out    dx,eax
  411dd0:	fadd   QWORD PTR [edi+ebp*1]
  411dd3:	loop   0x411d59
  411dd5:	(bad)  
  411dd6:	ds push cs
  411dd8:	enter  0xbee6,0xaa
  411ddc:	mov    edi,0x3b70762f
  411de1:	ror    DWORD PTR [ecx],1
  411de3:	mov    esi,DWORD PTR ds:0xed206812
  411de9:	sbb    BYTE PTR [edi+0x72],bl
  411dec:	push   ebp
  411ded:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411dee:	and    eax,0xccf96bfb
  411df3:	test   eax,0x3b5d5701
  411df8:	mov    dh,ch
  411dfa:	sbb    bl,al
  411dfc:	jecxz  0x411db1
  411dfe:	je     0x411dcb
  411e00:	ja     0x411e29
  411e02:	xlat   BYTE PTR ds:[ebx]
  411e03:	jbe    0x411e01
  411e05:	enter  0x9a8b,0x4e
  411e09:	push   es
  411e0a:	iret   
  411e0b:	ins    DWORD PTR es:[edi],dx
  411e0c:	test   eax,0x9a0eee57
  411e11:	add    BYTE PTR [ecx-0x22163eb3],ah
  411e17:	rcl    BYTE PTR [ecx-0x165e38fc],1
  411e1d:	mov    ds:0x28685b77,eax
  411e22:	loop   0x411dcf
  411e24:	mov    ds:0xe1770c09,al
  411e29:	lea    ebx,[edx-0x2a12eacd]
  411e2f:	mov    al,ds:0x8047dbbf
  411e34:	rol    DWORD PTR [edx],cl
  411e36:	add    cl,BYTE PTR [eax+0x9ce1ec4]
  411e3c:	js     0x411de8
  411e3e:	adc    al,0xe4
  411e40:	inc    esp
  411e41:	jmp    0xb911693f
  411e46:	fldenv [ebx]
  411e48:	addr16 sbb cl,dh
  411e4b:	jmp    0x411e7b
  411e4d:	ja     0x411dde
  411e4f:	xor    bh,BYTE PTR [ebp+0x9]
  411e52:	inc    ecx
  411e53:	dec    ebp
  411e54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e55:	mov    esp,0x1ebf998f
  411e5a:	dec    edx
  411e5b:	leave  
  411e5c:	ret    
  411e5d:	mov    eax,ds:0xcd2f24d7
  411e62:	pop    ds
  411e63:	mov    al,ds:0x7df993b5
  411e68:	cmp    BYTE PTR [ecx+0x4065ff44],bl
  411e6e:	push   edi
  411e6f:	cmp    BYTE PTR [esi+0x71],0xa8
  411e73:	push   ds
  411e74:	mov    ebp,0xb64ec7a1
  411e79:	loop   0x411eb7
  411e7b:	stos   DWORD PTR es:[edi],eax
  411e7c:	dec    esp
  411e7d:	mov    ch,BYTE PTR [ecx]
  411e7f:	xor    eax,0xe7816dc6
  411e84:	mov    dl,0x33
  411e86:	(bad)  
  411e87:	paddw  mm3,QWORD PTR [esi]
  411e8a:	in     eax,0x58
  411e8c:	xor    BYTE PTR [edx+0x708140f4],dh
  411e92:	jb     0x411e8d
  411e94:	push   0x3
  411e96:	test   al,0x75
  411e98:	pop    ecx
  411e99:	addr16 dec edi
  411e9b:	push   ecx
  411e9c:	(bad)  
  411e9d:	(bad)  
  411e9f:	jge    0x411ed5
  411ea1:	call   0x8cda5e33
  411ea6:	(bad)  
  411ea7:	out    0x96,eax
  411ea9:	push   esp
  411eaa:	mov    eax,esp
  411eac:	enter  0xb83a,0x7e
  411eb0:	adc    al,0x7c
  411eb2:	adc    eax,0x33542139
  411eb7:	sbb    eax,0x3ad0f1e1
  411ebc:	mov    cl,0xc1
  411ebe:	out    dx,al
  411ebf:	jge    0x411ec0
  411ec1:	jle    0x411e97
  411ec3:	scas   eax,DWORD PTR es:[edi]
  411ec4:	sub    al,0xb7
  411ec6:	retf   
  411ec7:	(bad)  
  411ec9:	dec    edx
  411eca:	int3   
  411ecb:	ret    
  411ecc:	(bad)  
  411ecd:	push   esp
  411ece:	sub    DWORD PTR [edi-0x7cef16],0xe55f596e
  411ed8:	das    
  411ed9:	sahf   
  411eda:	and    esp,DWORD PTR [esi-0x23]
  411edd:	popa   
  411ede:	xchg   edi,eax
  411edf:	sbb    al,0x3a
  411ee1:	scas   al,BYTE PTR es:[edi]
  411ee2:	jecxz  0x411ec8
  411ee4:	aaa    
  411ee5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ee6:	lea    eax,[ebp+0x29661a22]
  411eec:	and    al,0xe1
  411eee:	add    ah,bh
  411ef0:	xchg   ecx,eax
  411ef1:	fnstsw WORD PTR [ecx-0x3d]
  411ef4:	(bad)  
  411ef5:	xor    BYTE PTR [ebx],bh
  411ef7:	mov    ebx,0xbb95c55d
  411efc:	icebp  
  411efd:	or     BYTE PTR [ebx+0x41],al
  411f00:	pusha  
  411f01:	push   es
  411f02:	xor    BYTE PTR [ebx-0xd],0x70
  411f06:	push   cs
  411f07:	xchg   ebx,eax
  411f08:	mov    al,0x4
  411f0a:	inc    ecx
  411f0b:	dec    ebp
  411f0c:	ins    BYTE PTR es:[edi],dx
  411f0d:	mov    edi,0x183bd67c
  411f12:	or     bh,BYTE PTR [edx+0x1d]
  411f15:	cdq    
  411f16:	sbb    BYTE PTR [eax-0x632cf2d0],ch
  411f1c:	and    eax,0x7825caab
  411f21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f22:	pop    edi
  411f23:	cdq    
  411f24:	cwde   
  411f25:	mov    eax,0x1b072444
  411f2a:	inc    ebx
  411f2b:	in     al,dx
  411f2c:	dec    esi
  411f2d:	scas   eax,DWORD PTR es:[edi]
  411f2e:	(bad)  
  411f2f:	sbb    al,0x8e
  411f31:	jmp    0x411fab
  411f33:	jle    0x411f66
  411f35:	bound  eax,QWORD PTR [edx+0x3e]
  411f38:	xchg   BYTE PTR [edi],cl
  411f3a:	pop    eax
  411f3b:	pop    ds
  411f3c:	shl    DWORD PTR [eax],cl
  411f3e:	fstp   DWORD PTR [ecx-0x53]
  411f41:	jecxz  0x411f8f
  411f43:	dec    edx
  411f44:	pop    es
  411f45:	add    al,0x7c
  411f47:	retf   
  411f48:	xchg   edx,eax
  411f49:	jecxz  0x411f25
  411f4b:	loopne 0x411f85
  411f4d:	retf   
  411f4e:	and    BYTE PTR [edi-0xd],0x21
  411f52:	div    DWORD PTR [esi-0x14614f99]
  411f58:	ret    
  411f59:	in     al,0xe8
  411f5b:	lods   eax,DWORD PTR ds:[esi]
  411f5c:	push   es
  411f5d:	adc    al,0xc5
  411f5f:	sti    
  411f60:	ins    DWORD PTR es:[edi],dx
  411f61:	cld    
  411f62:	(bad)  
  411f63:	shl    bh,1
  411f65:	sbb    eax,0x4066efe0
  411f6a:	pop    ecx
  411f6b:	popf   
  411f6c:	and    DWORD PTR [edi+0x1e],ebp
  411f6f:	rcl    DWORD PTR [ebx],cl
  411f71:	jmp    DWORD PTR [esi]
  411f73:	fistp  DWORD PTR [esi]
  411f75:	sbb    DWORD PTR [ebp-0x1e],eax
  411f78:	mov    ch,0x3e
  411f7a:	cmp    al,0x35
  411f7c:	sub    DWORD PTR [edx+0x49b34def],eax
  411f82:	or     al,0x32
  411f84:	xchg   esp,eax
  411f85:	dec    ebp
  411f86:	(bad)  
  411f87:	cmp    DWORD PTR [ebx],ebp
  411f89:	jg     0x411fa1
  411f8b:	retf   0xf3bf
  411f8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f8f:	sahf   
  411f90:	int3   
  411f91:	mov    dl,0xf1
  411f93:	adc    bh,BYTE PTR [esi-0xe]
  411f96:	(bad)  
  411f97:	aam    0x31
  411f99:	xchg   ebx,eax
  411f9a:	daa    
  411f9b:	xor    DWORD PTR [ebx-0x6d],ebp
  411f9e:	scas   al,BYTE PTR es:[edi]
  411f9f:	sbb    BYTE PTR [edx+0x2],0x9d
  411fa3:	lods   eax,DWORD PTR ds:[esi]
  411fa4:	or     BYTE PTR es:[edi+0x57],bl
  411fa8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411fa9:	mov    ebx,0x9364ba1b
  411fae:	int3   
  411faf:	popa   
  411fb0:	inc    ecx
  411fb1:	push   eax
  411fb2:	test   eax,0xcec5b167
  411fb7:	or     DWORD PTR [edi-0x30],edi
  411fba:	or     BYTE PTR [ebx],dl
  411fbc:	pop    ds
  411fbd:	bound  edi,QWORD PTR [esi+0x7]
  411fc0:	lds    ebx,FWORD PTR [edx+0x66]
  411fc3:	in     eax,dx
  411fc4:	pop    edi
  411fc5:	cld    
  411fc6:	dec    edx
  411fc7:	stos   DWORD PTR es:[edi],eax
  411fc8:	outs   dx,DWORD PTR ds:[esi]
  411fc9:	push   0xe1508b1b
  411fce:	and    DWORD PTR [edx+0x14],edi
  411fd1:	test   edi,0xda1a96af
  411fd7:	loope  0x412048
  411fd9:	cwde   
  411fda:	aad    0xe9
  411fdc:	push   ss
  411fdd:	fwait
  411fde:	out    dx,al
  411fdf:	mov    bh,0x3a
  411fe1:	adc    bl,BYTE PTR [eax+0x2d]
  411fe4:	inc    edx
  411fe5:	add    al,0x28
  411fe7:	addr16 fnstsw ax
  411fea:	push   eax
  411feb:	pop    ds
  411fec:	or     bl,ch
  411fee:	sub    esp,DWORD PTR [esi-0x18]
  411ff1:	test   BYTE PTR [edi+0x4b93084f],0xc
  411ff8:	mov    eax,ds:0xf0cf6ca
  411ffd:	mov    eax,0xd23386e1
  412002:	cli    
  412003:	xor    edx,DWORD PTR [edi]
  412005:	inc    esi
  412006:	mov    dh,0xc
  412008:	push   ebx
  412009:	aas    
  41200a:	dec    ebp
  41200b:	and    al,0xf6
  41200d:	and    al,0x78
  41200f:	sub    ecx,DWORD PTR [edi]
  412011:	xor    eax,0x817ba3b9
  412016:	and    edi,0xf4909fb3
  41201c:	lods   eax,DWORD PTR ds:[esi]
  41201d:	adc    esp,DWORD PTR [eax+0x23]
  412020:	or     bh,BYTE PTR [ebp-0x6b7574aa]
  412026:	mov    eax,0xcfd8c3a0
  41202b:	arpl   WORD PTR [eax],ax
  41202d:	jb     0x412039
  41202f:	lods   eax,DWORD PTR ds:[esi]
  412030:	adc    edx,DWORD PTR ds:0x43e0bdfc
  412036:	xchg   cx,ax
  412038:	sbb    al,0xda
  41203a:	in     eax,0xf2
  41203c:	sahf   
  41203d:	jp     0x411fc7
  41203f:	and    ebp,edi
  412041:	mov    eax,ds:0xfc4da1a4
  412046:	leave  
  412047:	ret    
  412048:	or     cl,cl
  41204a:	cmc    
  41204b:	lea    eax,[ecx+esi*2+0x192d968]
  412052:	xor    al,0x0
  412054:	xchg   edx,eax
  412055:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412056:	dec    ebx
  412057:	adc    DWORD PTR [esi+0x38],0x43
  41205b:	jmp    0x4120c9
  41205d:	lods   eax,DWORD PTR ds:[esi]
  41205e:	pop    ds
  41205f:	push   ecx
  412060:	xchg   BYTE PTR es:[ebx-0x43],dh
  412064:	jmp    0x6aca:0x3b97e24e
  41206b:	pop    esp
  41206c:	mov    dh,ah
  41206e:	pusha  
  41206f:	fadd   QWORD PTR [ebp-0x55]
  412072:	mov    bh,0x70
  412074:	or     al,0xb3
  412076:	mov    dh,0xd9
  412078:	mov    ah,0x63
  41207a:	xchg   ecx,eax
  41207b:	mov    edi,0xebda8f43
  412080:	fist   DWORD PTR [esp+ecx*4+0x8]
  412084:	rcl    DWORD PTR [ecx-0x2b2b7d00],1
  41208a:	sti    
  41208b:	shr    ah,0xe5
  41208e:	ins    BYTE PTR es:[edi],dx
  41208f:	mov    ebx,DWORD PTR [ecx]
  412091:	and    dl,BYTE PTR [esi+0x52b3c592]
  412097:	daa    
  412098:	cmp    eax,0x7930ed2a
  41209d:	retf   0x1811
  4120a0:	and    bh,BYTE PTR [edx]
  4120a2:	sbb    ecx,DWORD PTR cs:[ebx]
  4120a5:	stc    
  4120a6:	fcomi  st,st(7)
  4120a8:	jmp    0xe9f8:0xa4548620
  4120af:	pop    edx
  4120b0:	jnp    0x412083
  4120b2:	cld    
  4120b3:	add    al,0x15
  4120b5:	sub    cl,0x11
  4120b8:	(bad)  
  4120b9:	cmp    BYTE PTR [edx],0x40
  4120bc:	mov    eax,ds:0xf76e2e1
  4120c1:	int3   
  4120c2:	mov    ds:0x3bc61772,eax
  4120c7:	push   edi
  4120c8:	sbb    DWORD PTR [ebx-0x6630369],edx
  4120ce:	retf   0x757
  4120d1:	jge    0x412141
  4120d3:	xchg   ebp,eax
  4120d4:	add    esp,DWORD PTR [ebx+0x6d]
  4120d7:	xor    DWORD PTR [eax-0x3],ecx
  4120da:	enter  0xf822,0xa9
  4120de:	(bad)  
  4120df:	and    eax,0x4de35cde
  4120e4:	mov    DWORD PTR [esi],edx
  4120e6:	dec    esi
  4120e7:	xchg   esp,eax
  4120e8:	sbb    DWORD PTR [edi+0x745ce0ef],ebx
  4120ee:	cs mov dl,0x18
  4120f1:	mov    al,0x76
  4120f3:	ror    edx,1
  4120f5:	pushf  
  4120f6:	stos   BYTE PTR es:[edi],al
  4120f7:	inc    ebx
  4120f8:	fisubr DWORD PTR [edi+0xbfdf91]
  4120fe:	or     cl,al
  412100:	push   cs
  412101:	xor    edx,DWORD PTR ds:0x9189d9f1
  412107:	(bad)  
  412109:	std    
  41210a:	jmp    0x9dbb:0x270e0680
  412111:	push   edi
  412112:	into   
  412113:	and    bl,BYTE PTR [ecx-0x4c]
  412116:	dec    edi
  412117:	add    esp,esp
  412119:	xor    ah,0x75
  41211c:	sub    BYTE PTR [ebx+ecx*1],dh
  41211f:	ror    BYTE PTR [edx-0x15885c2c],cl
  412125:	sahf   
  412126:	cmp    DWORD PTR [edi],ecx
  412128:	ds pop edi
  41212a:	push   esp
  41212b:	or     DWORD PTR [edx+0x242da395],eax
  412131:	xchg   BYTE PTR [edx-0x3b4a172e],cl
  412137:	jo     0x4120cd
  412139:	imul   ebx,esi,0xf9c25b66
  41213f:	enter  0xab92,0x9a
  412143:	dec    ebx
  412144:	js     0x41211a
  412146:	sbb    eax,0xbbe3e84b
  41214b:	int    0x12
  41214d:	jo     0x41211e
  41214f:	in     al,dx
  412150:	call   0x34ab:0xbc4fb693
  412157:	push   ebp
  412158:	sbb    edx,DWORD PTR [ebp-0x7bfe00ae]
  41215e:	fcom   QWORD PTR [ebp+0x5f]
  412161:	cmp    BYTE PTR [ebx],ah
  412163:	div    dl
  412165:	retf   0xf129
  412168:	nop
  412169:	in     eax,dx
  41216a:	int    0xaf
  41216c:	or     DWORD PTR [edx-0x3fd49a43],eax
  412172:	cmc    
  412173:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412174:	lds    eax,FWORD PTR [esi+eiz*2]
  412177:	test   eax,0xdfa68f66
  41217c:	xchg   edx,eax
  41217d:	mov    es,WORD PTR [ecx]
  41217f:	cmp    eax,0xa889510c
  412184:	adc    eax,0x31261b71
  412189:	fwait
  41218a:	and    edx,ebx
  41218c:	enter  0x6772,0xac
  412190:	shl    DWORD PTR [edi+0x23],0xc4
  412194:	pop    edx
  412195:	dec    esp
  412196:	and    al,0x68
  412198:	or     al,0x39
  41219a:	adc    ch,cl
  41219c:	out    dx,eax
  41219d:	bound  esi,QWORD PTR [edi+0xc310fe1]
  4121a3:	inc    esi
  4121a4:	add    cl,bl
  4121a6:	addr16 mov eax,0xc2f7b5e0
  4121ac:	push   esi
  4121ad:	dec    ebx
  4121ae:	iret   
  4121af:	ds mov esi,0xc3c3826f
  4121b5:	test   BYTE PTR [edx+0x4c],al
  4121b8:	xchg   ecx,eax
  4121b9:	mov    bl,0x4
  4121bb:	leave  
  4121bc:	lds    esi,FWORD PTR [ecx+eiz*2]
  4121bf:	and    DWORD PTR [eax+0x6547db7f],ebx
  4121c5:	dec    esp
  4121c6:	jno    0x4121aa
  4121c8:	jno    0x412230
  4121ca:	stos   BYTE PTR es:[edi],al
  4121cb:	call   0x5f07:0xe6378f9b
  4121d2:	lods   al,BYTE PTR ds:[esi]
  4121d3:	pop    ebx
  4121d4:	pop    ebp
  4121d5:	rol    DWORD PTR [edi+0x1],0x7d
  4121d9:	ins    BYTE PTR es:[edi],dx
  4121da:	jae    0x412168
  4121dc:	test   eax,0x264239a6
  4121e1:	pushf  
  4121e2:	sti    
  4121e3:	dec    edi
  4121e4:	add    eax,esi
  4121e6:	add    BYTE PTR [edi-0x7c],dl
  4121e9:	jno    0x412194
  4121eb:	add    eax,0x6af55dfe
  4121f0:	loop   0x4121e7
  4121f2:	jle    0x412212
  4121f4:	jmp    0x98075a10
  4121f9:	out    dx,al
  4121fa:	pop    ebx
  4121fb:	jl     0x412206
  4121fd:	mov    ah,0xdc
  4121ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412200:	pop    ds
  412201:	popf   
  412202:	shl    al,1
  412204:	sub    cl,BYTE PTR [eax+edx*4]
  412207:	pop    es
  412208:	aam    0xa
  41220a:	dec    ebp
  41220b:	cli    
  41220c:	jmp    0x41227b
  41220e:	adc    al,0xd0
  412210:	mov    dl,0x78
  412212:	outs   dx,DWORD PTR ds:[esi]
  412213:	pushf  
  412214:	loope  0x41226c
  412216:	sbb    dl,ch
  412218:	aam    0x64
  41221a:	(bad)  
  41221b:	xchg   ecx,eax
  41221c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41221d:	data16 aaa 
  41221f:	push   0xd0685323
  412224:	push   es
  412225:	xchg   ebp,eax
  412226:	imul   BYTE PTR [esi-0x12]
  412229:	(bad)
  41222c:	icebp  
  41222d:	pop    ebx
  41222e:	jg     0x41228a
  412230:	das    
  412231:	rol    al,cl
  412233:	or     DWORD PTR [eax-0x22],0x231a168b
  41223a:	add    esp,esi
  41223c:	mov    ch,0xe7
  41223e:	stc    
  41223f:	(bad)  
  412240:	jl     0x412204
  412242:	jmp    0xe532661
  412247:	(bad)  
  412248:	popf   
  412249:	sub    DWORD PTR [eax-0x55],ebx
  41224c:	or     bl,dl
  41224e:	arpl   WORD PTR [eax],si
  412250:	loopne 0x41229c
  412252:	jle    0x412248
  412254:	ins    BYTE PTR es:[edi],dx
  412255:	xchg   ebx,eax
  412256:	xor    al,0x5a
  412258:	lock ins DWORD PTR es:[edi],dx
  41225a:	das    
  41225b:	fild   QWORD PTR [esi]
  41225d:	bound  esi,QWORD PTR [edi]
  41225f:	cmp    BYTE PTR [edx+eax*8],0x27
  412263:	jle    0x41224b
  412265:	js     0x412238
  412267:	scas   eax,DWORD PTR es:[edi]
  412268:	ds (bad) 
  41226a:	mov    al,ds:0x1dc9463e
  41226f:	aas    
  412270:	xchg   edi,eax
  412271:	int3   
  412272:	aas    
  412273:	mov    edx,DWORD PTR [ecx-0x63]
  412276:	mov    bl,BYTE PTR [esi-0x716ff43c]
  41227c:	mov    bl,0x90
  41227e:	and    esi,DWORD PTR [eax-0x4232c22a]
  412284:	xor    al,0xf6
  412286:	cmc    
  412287:	sbb    DWORD PTR [edi+0x53],ecx
  41228a:	lods   al,BYTE PTR ds:[esi]
  41228b:	push   esi
  41228c:	imul   edx,DWORD PTR [edi+0x4a],0x1b361891
  412293:	add    DWORD PTR [ebx-0x5c],ecx
  412296:	or     al,0x95
  412298:	cmp    eax,0xfeb1f3bd
  41229d:	xchg   edi,eax
  41229e:	cmp    al,0x54
  4122a0:	shr    bh,0x39
  4122a3:	jne    0x412310
  4122a5:	push   0x6a98ef4f
  4122aa:	pop    ds
  4122ab:	aas    
  4122ac:	out    0xf8,eax
  4122ae:	inc    ebp
  4122af:	adc    ecx,0x5c
  4122b2:	push   ds
  4122b3:	jg     0x41228e
  4122b5:	out    0xf9,al
  4122b7:	fs jge 0x412245
  4122ba:	test   BYTE PTR [edi-0x43b73c5],ah
  4122c0:	xor    eax,0xdb3588c1
  4122c5:	aad    0x62
  4122c7:	fnstcw WORD PTR [esi]
  4122c9:	(bad)  
  4122ca:	in     al,dx
  4122cb:	into   
  4122cc:	or     eax,0x82a658d3
  4122d1:	shl    BYTE PTR [edx-0x2a16954f],0x3c
  4122d8:	mov    al,0x7
  4122da:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122dc:	mov    WORD PTR [edx+0x51f95d80],?
  4122e2:	xor    dh,BYTE PTR [eax-0x462f42da]
  4122e8:	retf   
  4122e9:	scas   al,BYTE PTR es:[edi]
  4122ea:	jmp    0x904b:0xe9f2e41c
  4122f1:	mov    eax,gs
  4122f3:	jnp    0x4122eb
  4122f5:	or     al,0xc0
  4122f7:	ss repnz ins BYTE PTR es:[edi],dx
  4122fa:	mov    ebp,DWORD PTR [edi]
  4122fc:	sbb    DWORD PTR [edx+0x370e70e5],edi
  412302:	cvtps2pi mm6,QWORD PTR [ecx-0x4fab28f0]
  412309:	mov    esp,0x491aa754
  41230e:	or     ecx,ebx
  412310:	push   edx
  412311:	jmp    0x38c0:0x207951f3
  412318:	je     0x41237a
  41231a:	xchg   edx,eax
  41231b:	cld    
  41231c:	push   edi
  41231d:	int    0xdb
  41231f:	ins    DWORD PTR es:[edi],dx
  412320:	stos   DWORD PTR es:[edi],eax
  412321:	test   eax,0xa549e538
  412326:	mov    ds:0x1b9c1277,eax
  41232b:	dec    esi
  41232c:	dec    ecx
  41232d:	push   cs
  41232e:	mov    esi,DWORD PTR [eax]
  412330:	mov    dh,0x55
  412332:	popf   
  412333:	xchg   esi,eax
  412334:	xchg   esp,eax
  412335:	adc    BYTE PTR [edx-0x21c56c27],bl
  41233b:	test   ecx,esi
  41233d:	cmc    
  41233e:	sub    BYTE PTR [eax-0x58],al
  412341:	mov    fs,WORD PTR [esi-0x12]
  412344:	add    DWORD PTR [eax],edi
  412346:	xor    ecx,DWORD PTR [ebp-0x66]
  412349:	push   0x78dc9be0
  41234e:	or     bl,ah
  412350:	xchg   esp,eax
  412351:	xchg   ebp,eax
  412352:	int    0x32
  412354:	lahf   
  412355:	iret   
  412356:	xor    DWORD PTR [ecx],ebp
  412358:	cli    
  412359:	fld    QWORD PTR [eax+esi*8]
  41235c:	cmp    al,BYTE PTR ds:0x8a62a225
  412362:	or     ah,bl
  412364:	jmp    DWORD PTR [esi+0x6d]
  412367:	jno    0x4123e6
  412369:	lahf   
  41236a:	aad    0x13
  41236c:	xor    DWORD PTR [edx+0x55],ebx
  41236f:	fisub  DWORD PTR [edi+0x35]
  412372:	push   0xfe871a57
  412377:	pusha  
  412378:	rol    bh,0x1c
  41237b:	pop    ds
  41237c:	adc    bh,BYTE PTR [edx-0x7b]
  41237f:	call   0x8cd6:0xd49de348
  412386:	std    
  412387:	mov    dh,al
  412389:	xchg   esi,eax
  41238a:	pop    ebx
  41238b:	jb     0xd4359dc5
  412391:	sub    bp,WORD PTR [edi+0x4ea03978]
  412398:	cmc    
  412399:	out    dx,al
  41239a:	lods   al,BYTE PTR ds:[esi]
  41239b:	mov    dh,0xb7
  41239d:	and    al,0x1d
  41239f:	sub    eax,0x36c07f76
  4123a4:	mov    al,ds:0x23a1cb39
  4123a9:	dec    eax
  4123aa:	retf   
  4123ab:	adc    cl,dh
  4123ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123ae:	cld    
  4123af:	mov    DWORD PTR [edx+0x659b199],esp
  4123b5:	cmc    
  4123b6:	loopne 0x412342
  4123b8:	stos   BYTE PTR es:[edi],al
  4123b9:	cli    
  4123ba:	pushf  
  4123bb:	sbb    ch,ah
  4123bd:	xchg   BYTE PTR [esp+ecx*4],bh
  4123c0:	mov    esi,0xa316ff08
  4123c5:	jnp    0x412384
  4123c7:	mov    al,ds:0x81d17761
  4123cc:	fistp  WORD PTR [esi-0x48888239]
  4123d2:	pop    edx
  4123d3:	sub    eax,0xc75d4b41
  4123d8:	(bad)  
  4123d9:	xchg   ecx,eax
  4123da:	rcl    DWORD PTR [ecx],1
  4123dc:	pop    edx
  4123dd:	in     al,0xc5
  4123df:	scas   al,BYTE PTR es:[edi]
  4123e0:	rcl    cl,0x81
  4123e3:	loop   0x412374
  4123e5:	cmp    ebp,DWORD PTR [ecx]
  4123e7:	add    al,0x80
  4123e9:	mov    al,ds:0x9e964c31
  4123ee:	and    ebx,DWORD PTR [esi]
  4123f0:	jecxz  0x412424
  4123f2:	cs mov ebp,esp
  4123f5:	arpl   WORD PTR [ecx-0x31fbb6c],di
  4123fb:	pop    eax
  4123fc:	xor    BYTE PTR [eax-0x796a8098],dh
  412402:	inc    ebx
  412403:	add    BYTE PTR [ebp+0x4b],ch
  412406:	ror    edi,0x3c
  412409:	mov    cl,0x1
  41240b:	int    0x27
  41240d:	pop    esi
  41240e:	out    0x2c,al
  412410:	jmp    ebx
  412412:	je     0x412449
  412414:	mov    ?,WORD PTR [edi+ebx*1-0x16]
  412418:	rsm    
  41241a:	xor    eax,0x7fc0af7d
  41241f:	push   edx
  412420:	lock not BYTE PTR [ebx-0x49]
  412424:	ret    
  412425:	jg     0x412491
  412427:	lds    edx,FWORD PTR [ebx-0x78ede93b]
  41242d:	xor    esp,DWORD PTR [edi-0x67]
  412430:	sbb    eax,0x376cc6c9
  412435:	or     eax,DWORD PTR [edi-0x6b89ea2d]
  41243b:	push   0xf53267b6
  412440:	test   al,0xa0
  412442:	clc    
  412443:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412444:	es std 
  412446:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412448:	or     DWORD PTR [eax+0x4540ddd7],0x63
  41244f:	xlat   BYTE PTR ds:[bx]
  412451:	jne    0x41248d
  412453:	lds    ebp,FWORD PTR [ebp-0x3b]
  412456:	sbb    eax,0xd1ff566d
  41245b:	fwait
  41245c:	and    eax,0xb19b4bc2
  412461:	pop    ebp
  412462:	push   0xb9b08507
  412467:	mov    dl,0xac
  412469:	mov    dh,0xff
  41246b:	ds xchg esp,eax
  41246d:	cmc    
  41246e:	sbb    BYTE PTR [eax],bl
  412470:	push   edi
  412471:	add    edx,edi
  412473:	sub    BYTE PTR [esi],0xd2
  412476:	pop    ecx
  412477:	mov    edi,0x44c6c3c8
  41247c:	or     al,0xa0
  41247e:	push   ds
  41247f:	or     ah,BYTE PTR [esi+0x20]
  412482:	sub    BYTE PTR [edi+edx*1-0x6e],al
  412486:	popf   
  412487:	pop    ds
  412488:	sbb    eax,edi
  41248a:	inc    eax
  41248b:	js     0x4124e5
  41248d:	push   edi
  41248e:	pop    DWORD PTR [esi]
  412490:	jmp    0xfc2b5b24
  412495:	and    BYTE PTR [ebp+ebx*1+0x2c],bl
  412499:	call   FWORD PTR [edx+0x4b]
  41249c:	dec    edi
  41249d:	and    BYTE PTR [eax+0x36],0x35
  4124a1:	mov    dl,0x99
  4124a3:	jae    0x41244f
  4124a5:	xor    eax,0x41fff54d
  4124aa:	dec    esp
  4124ab:	(bad)  
  4124ad:	sub    eax,0xb2ae8c7e
  4124b2:	lahf   
  4124b3:	js     0x41243e
  4124b5:	push   ebp
  4124b6:	or     BYTE PTR [ebx+0x5d8b0855],cl
  4124bc:	test   al,0x81
  4124be:	ret    0x8fa
  4124c1:	push   edi
  4124c2:	add    BYTE PTR [edi],cl
  4124c4:	scas   eax,DWORD PTR es:[edi]
  4124c5:	ror    DWORD PTR [ecx+0x558ba855],cl
  4124cb:	or     BYTE PTR [ebx-0x3d7e53a3],cl
  4124d1:	pushf  
  4124d2:	clc    
  4124d3:	add    BYTE PTR fs:[ebx],cl
  4124d6:	ror    DWORD PTR [ecx+0x558bac55],cl
  4124dc:	or     BYTE PTR [ebx-0x2efc4fa3],cl
  4124e2:	xor    edx,ebx
  4124e4:	mov    DWORD PTR [ebp-0x50],edx
  4124e7:	mov    edx,DWORD PTR [ebp+0x8]
  4124ea:	mov    ebx,DWORD PTR [ebp-0x4c]
  4124ed:	add    edx,edi
  4124ef:	and    edx,ebx
  4124f1:	mov    DWORD PTR [ebp-0x4c],edx
  4124f4:	mov    edx,DWORD PTR [ebp+0x8]
  4124f7:	mov    ebx,DWORD PTR [ebp-0x48]
  4124fa:	lea    edx,[ebx+edx*1+0x241fcdf]
  412501:	mov    DWORD PTR [ebp-0x48],edx
  412504:	mov    edx,DWORD PTR [ebp+0x8]
  412507:	mov    ebx,0xfa5e1530
  41250c:	sub    ebx,edx
  41250e:	add    ebx,DWORD PTR [ebp-0x44]
  412511:	mov    DWORD PTR [ebp-0x44],ebx
  412514:	mov    edx,DWORD PTR [ebp+0x8]
  412517:	xor    edx,eax
  412519:	add    edx,esi
  41251b:	jne    0x41002c
  412521:	mov    edx,DWORD PTR [ebp-0xc]
  412524:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  41252b:	mov    bl,BYTE PTR [ebp-0x1]
  41252e:	cmp    dl,bl
  412530:	je     0x41909d
  412536:	mov    ecx,DWORD PTR [ebp-0x5c]
  412539:	mov    edx,DWORD PTR [ebp-0xc]
  41253c:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  412543:	mov    ebx,DWORD PTR [ebp+0xc]
  412546:	xor    ecx,eax
  412548:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272ef]
  41254f:	jne    0x41b556
  412555:	mov    ecx,DWORD PTR [ebp-0x5c]
  412558:	mov    edx,DWORD PTR [ebp+0xc]
  41255b:	xor    ecx,eax
  41255d:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272ef]
  412565:	mov    edx,DWORD PTR [ebp-0x18]
  412568:	xor    edx,eax
  41256a:	add    edx,esi
  41256c:	cmp    ecx,edx
  41256e:	mov    ecx,DWORD PTR [ebp-0x14]
  412571:	mov    DWORD PTR [ebp+0x8],ecx
  412574:	mov    ecx,DWORD PTR [ebp+0x8]
  412577:	je     0x41d9e3
  41257d:	jmp    0x414902
  412582:	lods   eax,DWORD PTR ds:[esi]
  412583:	xor    edi,DWORD PTR [ecx-0x65]
  412586:	out    dx,eax
  412587:	fwait
  412588:	fwait
  412589:	sub    edi,DWORD PTR [esi+0x6ef535c0]
  41258f:	add    BYTE PTR [ecx-0x62],cl
  412592:	inc    BYTE PTR [ebx+0x5f127a7a]
  412598:	jp     0x412614
  41259a:	xor    bl,BYTE PTR [ebx+0x21838621]
  4125a0:	mov    eax,0x8fd27c96
  4125a5:	mov    WORD PTR [ebx-0x11],es
  4125a8:	and    DWORD PTR [ebp+edi*4+0x9],0xffffffe0
  4125ad:	sbb    bh,ch
  4125af:	popf   
  4125b0:	sub    DWORD PTR [ecx+0x63],esp
  4125b3:	adc    DWORD PTR [ebx-0x29],eax
  4125b6:	push   eax
  4125b7:	mov    WORD PTR [edi+eiz*8],cs
  4125ba:	push   eax
  4125bb:	outs   dx,BYTE PTR ds:[esi]
  4125bc:	das    
  4125bd:	adc    BYTE PTR [ebx-0x1f],dl
  4125c0:	outs   dx,BYTE PTR ds:[esi]
  4125c1:	inc    ebx
  4125c2:	xchg   ebp,eax
  4125c3:	and    dl,BYTE PTR [eax]
  4125c5:	pushf  
  4125c6:	adc    bh,BYTE PTR [ebx-0x61818cad]
  4125cc:	test   eax,0x1575ef96
  4125d1:	cmc    
  4125d2:	adc    al,bh
  4125d4:	inc    ecx
  4125d5:	pop    ebx
  4125d6:	nop
  4125d7:	test   eax,0xda511898
  4125dc:	jo     0x4125ce
  4125de:	xor    ah,ah
  4125e0:	ins    BYTE PTR es:[edi],dx
  4125e1:	ret    
  4125e2:	sub    ecx,DWORD PTR [edi]
  4125e4:	lahf   
  4125e5:	lahf   
  4125e6:	adc    edi,ebp
  4125e8:	frstor [edi+0x3a899e7f]
  4125ee:	cdq    
  4125ef:	lods   eax,DWORD PTR ds:[esi]
  4125f0:	stc    
  4125f1:	std    
  4125f2:	adc    BYTE PTR [eax],ah
  4125f4:	outs   dx,DWORD PTR ds:[esi]
  4125f5:	pop    edx
  4125f6:	pop    eax
  4125f7:	enter  0xa1a6,0x97
  4125fb:	(bad)  
  4125fc:	jmp    0x1e0a:0x1e2bafd3
  412603:	push   0xcda01555
  412608:	dec    ebp
  412609:	mov    ebp,0x82f6f3f0
  41260e:	add    esi,DWORD PTR [ebp+0x17]
  412611:	mov    eax,ds:0x6df51c95
  412616:	cmp    eax,0x52af4605
  41261b:	push   0xec762f2d
  412620:	fbstp  TBYTE PTR [edi-0x44]
  412623:	fisub  DWORD PTR [ecx]
  412625:	aam    0x42
  412627:	xchg   ebx,eax
  412628:	fwait
  412629:	inc    edi
  41262a:	(bad)  
  41262b:	sbb    esi,DWORD PTR [ecx]
  41262d:	xor    DWORD PTR [ebx-0x42836ad0],esp
  412633:	loopne 0x4125cf
  412635:	ret    0x91d5
  412638:	pop    edx
  412639:	pusha  
  41263a:	imul   edi,DWORD PTR [ecx+ebx*4-0x56a2e2fc],0x2b8ff11c
  412645:	ds push es
  412647:	popa   
  412648:	xchg   ecx,eax
  412649:	inc    eax
  41264a:	je     0x4126c4
  41264c:	icebp  
  41264d:	adc    al,BYTE PTR [ecx]
  41264f:	inc    ecx
  412650:	fdiv   DWORD PTR [esi+0x38]
  412653:	(bad)  
  412654:	cmp    al,0x3a
  412656:	pop    ss
  412657:	inc    ebx
  412658:	repnz add ah,BYTE PTR [ebp-0x5a]
  41265c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41265d:	jbe    0x412672
  41265f:	cwde   
  412660:	ficomp WORD PTR ds:0x303bd188
  412666:	inc    ebx
  412667:	popf   
  412668:	cdq    
  412669:	pop    edi
  41266a:	pop    ebp
  41266b:	bswap  eax
  41266d:	mov    ebx,0xf07160b6
  412672:	js     0x4126cc
  412674:	aam    0x46
  412676:	fst    DWORD PTR [ecx]
  412678:	sbb    esp,esp
  41267a:	std    
  41267b:	push   esp
  41267c:	jnp    0x4126fa
  41267e:	mov    DWORD PTR [edx-0x531f349a],esp
  412684:	imul   ecx,ebp,0x7f
  412687:	sbb    DWORD PTR [esp+eax*8+0x1607032d],eax
  41268e:	mov    ch,0xec
  412690:	(bad)  
  412691:	fild   WORD PTR [edx]
  412693:	add    bh,BYTE PTR [eax+edx*8]
  412696:	stc    
  412697:	ds inc eax
  412699:	out    dx,al
  41269a:	das    
  41269b:	cmc    
  41269c:	imul   ebp,DWORD PTR [ecx+0x7c2988c0],0xffffffd1
  4126a3:	xor    BYTE PTR [edx+0x2a4add90],0x2d
  4126aa:	retf   0xd7c9
  4126ad:	ins    BYTE PTR es:[edi],dx
  4126ae:	out    0x20,al
  4126b0:	ja     0x4126a4
  4126b2:	fucomi st,st(6)
  4126b4:	fmul   st(2),st
  4126b6:	daa    
  4126b7:	xchg   edx,eax
  4126b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4126b9:	retf   0xfbd3
  4126bc:	lahf   
  4126bd:	sbb    DWORD PTR [eax+0x60],ebp
  4126c0:	sahf   
  4126c1:	and    al,0x4b
  4126c3:	pop    ebp
  4126c4:	lds    edx,FWORD PTR [ebp+0x7ce6f2e7]
  4126ca:	mov    bl,0xd5
  4126cc:	jl     0x412738
  4126ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126cf:	dec    eax
  4126d0:	jp     0x4126b6
  4126d2:	and    dh,bl
  4126d4:	cmp    DWORD PTR [eax],ebp
  4126d6:	outs   dx,BYTE PTR ds:[esi]
  4126d7:	jnp    0x412716
  4126d9:	lods   al,BYTE PTR ds:[esi]
  4126da:	int3   
  4126db:	add    BYTE PTR fs:[ecx+ebp*2+0x37],0xba
  4126e1:	call   0x1480:0x12b8a614
  4126e8:	fwait
  4126e9:	push   0xdc4754ff
  4126ee:	fs std 
  4126f0:	lea    edx,[edx]
  4126f2:	mov    ebp,0x3d68fee7
  4126f7:	(bad)  
  4126f8:	packssdw mm0,mm4
  4126fb:	jo     0x4126da
  4126fd:	stos   BYTE PTR es:[edi],al
  4126fe:	adc    ebx,DWORD PTR [edx]
  412700:	mov    bl,0x4f
  412702:	pop    ebp
  412703:	cld    
  412704:	fdiv   QWORD PTR [esi]
  412706:	int    0x38
  412708:	outs   dx,DWORD PTR ds:[esi]
  412709:	push   ds
  41270a:	add    al,0x9c
  41270c:	rcr    DWORD PTR [edx-0x39],cl
  41270f:	xor    DWORD PTR [eax-0x13],esp
  412712:	pop    ss
  412713:	xor    eax,0x2b7059af
  412718:	adc    al,0xb8
  41271a:	aad    0xa5
  41271c:	mov    al,ds:0x7f5302ed
  412721:	mov    ebp,0x5a11cc16
  412726:	push   eax
  412727:	ret    0x45eb
  41272a:	ins    BYTE PTR es:[edi],dx
  41272b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41272c:	and    al,0xbc
  41272e:	cmp    DWORD PTR [edx+0xd],ecx
  412731:	js     0x4126bd
  412733:	and    BYTE PTR ds:0xb6862425,dh
  412739:	or     DWORD PTR fs:[ebx+0x74],esi
  41273d:	dec    edx
  41273e:	mov    cl,0xaf
  412740:	mov    dh,0x53
  412742:	and    cl,bh
  412744:	push   ss
  412745:	push   ds
  412746:	outs   dx,DWORD PTR ds:[esi]
  412747:	push   sp
  412749:	test   DWORD PTR [eax-0x31656f7d],esp
  41274f:	and    eax,0xe932138b
  412754:	pop    es
  412755:	push   0xffffffff
  412757:	inc    ebp
  412758:	sub    ebx,DWORD PTR [esi-0x72]
  41275b:	aam    0xdf
  41275d:	pop    esp
  41275e:	enter  0x90e2,0xd1
  412762:	xlat   BYTE PTR ds:[ebx]
  412763:	jmp    0xeaf1:0x4ec006ac
  41276a:	aad    0x4c
  41276c:	xchg   esi,eax
  41276d:	je     0x412769
  41276f:	aam    0xf9
  412771:	lods   al,BYTE PTR ds:[esi]
  412772:	fidiv  WORD PTR [eax+0x4b3b077c]
  412778:	in     eax,0x26
  41277a:	sub    eax,0x97b0c0ae
  41277f:	inc    BYTE PTR [ebx+0x6f380a5b]
  412785:	add    DWORD PTR [esi],ebx
  412787:	or     DWORD PTR [edx+0x18],edi
  41278a:	imul   edi,DWORD PTR es:[esp+edi*8],0xffffffdb
  41278f:	jl     0x4127fa
  412791:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412792:	or     dl,bl
  412794:	aam    0x97
  412796:	in     al,dx
  412797:	dec    ebp
  412798:	shl    BYTE PTR [esi+0x39c54fb8],cl
  41279e:	inc    edx
  41279f:	loope  0x41273c
  4127a1:	xchg   esi,eax
  4127a2:	js     0x412806
  4127a4:	out    dx,eax
  4127a5:	xor    eax,0xb6491c4a
  4127aa:	xchg   ebx,eax
  4127ab:	push   edi
  4127ac:	jg     0x4127b6
  4127ae:	(bad)
  4127b1:	and    BYTE PTR [ebp-0x49],bl
  4127b4:	xchg   edx,eax
  4127b5:	in     al,0x4a
  4127b7:	xor    DWORD PTR [eax+0x609f00b],0x63
  4127be:	scas   eax,DWORD PTR es:[edi]
  4127bf:	ins    BYTE PTR es:[edi],dx
  4127c0:	sub    bl,BYTE PTR [esp+edx*8]
  4127c3:	out    dx,al
  4127c4:	mov    ecx,0x95338ad
  4127c9:	sub    DWORD PTR [eax-0x5ed9d18a],ecx
  4127cf:	push   ecx
  4127d0:	xor    DWORD PTR ds:0xb441b61e,ebx
  4127d6:	mov    ebp,0x8ed539e7
  4127db:	pop    edi
  4127dc:	ret    
  4127dd:	push   es
  4127de:	push   ss
  4127df:	(bad)  
  4127e1:	ret    0x84cf
  4127e4:	rcr    esi,0x35
  4127e7:	add    edx,ebp
  4127e9:	je     0x412854
  4127eb:	repnz in eax,0xe4
  4127ee:	fnclex 
  4127f0:	ret    0x5b7c
  4127f3:	mov    al,0xbb
  4127f5:	push   DWORD PTR [eax+0x5e]
  4127f8:	in     eax,0xd8
  4127fa:	mov    WORD PTR [esi-0x2badda62],cs
  412800:	push   edi
  412801:	pop    edx
  412802:	and    BYTE PTR [ebx-0x1926a3f0],0xf1
  412809:	inc    edi
  41280a:	add    edx,DWORD PTR [ecx+0x44dc4f66]
  412810:	into   
  412811:	mov    esi,0xdefd04b8
  412816:	xor    bh,ah
  412818:	lods   al,BYTE PTR ds:[esi]
  412819:	clc    
  41281a:	mov    ds:0x6829cde3,al
  41281f:	or     DWORD PTR [ebp+ebp*1+0x5d],0x5925d1e5
  412827:	test   al,0xfe
  412829:	dec    ebp
  41282a:	pushf  
  41282b:	inc    esp
  41282c:	les    ebp,FWORD PTR [ebp-0x3bb63b82]
  412832:	or     DWORD PTR [ecx+0x73],ecx
  412835:	xor    esp,DWORD PTR [ebx]
  412837:	pop    ss
  412838:	std    
  412839:	(bad)  
  41283a:	fist   DWORD PTR [ebx+ebx*4+0x40]
  41283e:	retf   0x4755
  412841:	mov    ebp,0xc6f59995
  412846:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412847:	leave  
  412848:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412849:	sub    ch,cl
  41284b:	out    0x2c,al
  41284d:	push   0x45
  41284f:	cmp    BYTE PTR [ebx-0x4b469438],0x6
  412856:	int    0xcd
  412858:	std    
  412859:	mov    eax,0xce6b3aa1
  41285e:	jne    0x41283a
  412860:	xor    eax,0xa6ffe995
  412865:	retf   
  412866:	imul   ebx,DWORD PTR ds:0x49663a70,0x9e0d47a1
  412870:	int3   
  412871:	inc    ecx
  412872:	pop    edi
  412873:	mov    edi,0xd9d24525
  412878:	and    cl,BYTE PTR [ebp+0x77]
  41287b:	pop    es
  41287c:	cmp    ecx,DWORD PTR [esi+0x6088aa72]
  412882:	pop    ebp
  412883:	test   DWORD PTR [ebx+ebx*8+0x75],ebp
  412887:	popa   
  412888:	cmp    BYTE PTR [ecx-0x4e41640a],bl
  41288e:	repnz dec ebx
  412890:	mov    DWORD PTR [edi+0x2a],eax
  412893:	jno    0x4128b1
  412895:	js     0x41288f
  412897:	or     al,0x2d
  412899:	loopne 0x412846
  41289b:	ret    
  41289c:	sbb    bh,ch
  41289e:	clc    
  41289f:	clc    
  4128a0:	lods   eax,DWORD PTR ds:[esi]
  4128a1:	out    dx,al
  4128a2:	repnz dec eax
  4128a4:	enter  0x1994,0x25
  4128a8:	add    ebp,DWORD PTR [esi-0x3a]
  4128ab:	ret    0x38a0
  4128ae:	call   0x2cd8:0x254c4447
  4128b5:	int3   
  4128b6:	lods   al,BYTE PTR ds:[esi]
  4128b7:	pop    ebp
  4128b8:	cmc    
  4128b9:	shr    DWORD PTR [eax],cl
  4128bb:	inc    edi
  4128bc:	cmc    
  4128bd:	les    ebp,FWORD PTR [edi-0x18d5d4f1]
  4128c3:	push   eax
  4128c4:	lds    esp,FWORD PTR [eax+ecx*2]
  4128c7:	push   esi
  4128c8:	sbb    DWORD PTR [eax+0x66],ecx
  4128cb:	pushf  
  4128cc:	add    edx,ebx
  4128ce:	test   DWORD PTR [edx+0xf],ebx
  4128d1:	pop    esp
  4128d2:	or     DWORD PTR [esi],0x33eb8a6a
  4128d8:	aam    0x4
  4128da:	out    0xbe,al
  4128dc:	sar    DWORD PTR [edi*1-0x44d70f3f],1
  4128e3:	out    0x8b,al
  4128e5:	shl    edx,1
  4128e7:	mul    DWORD PTR [ebx]
  4128e9:	mov    ebx,DWORD PTR [esp-0x4b7f4116]
  4128f0:	push   cs
  4128f1:	push   ebx
  4128f2:	mov    dh,BYTE PTR [ebp+0x3448c03f]
  4128f8:	push   ebx
  4128f9:	shl    dl,cl
  4128fb:	xor    BYTE PTR [ecx-0x63],ch
  4128fe:	rol    BYTE PTR [edi+0x76],1
  412901:	outs   dx,BYTE PTR ds:[esi]
  412902:	int3   
  412903:	repz adc ecx,DWORD PTR ds:0x6e8c8d0
  41290a:	aam    0x22
  41290c:	mov    edx,0x1ab9f987
  412911:	int    0x99
  412913:	push   ebx
  412914:	jmp    DWORD PTR [edi]
  412916:	mov    dh,0x36
  412918:	add    eax,0x63144be9
  41291d:	jmp    0xa23e21f5
  412922:	addr16 lock inc edi
  412925:	in     al,0x7e
  412927:	pop    ss
  412928:	shl    BYTE PTR [esi-0x6636e156],cl
  41292e:	sbb    al,0x43
  412930:	xor    ebx,DWORD PTR [edx]
  412932:	les    esp,FWORD PTR [edi]
  412934:	loopne 0x412931
  412936:	cmp    edi,edx
  412938:	pop    ds
  412939:	out    dx,eax
  41293a:	stos   DWORD PTR es:[edi],eax
  41293b:	mov    ch,BYTE PTR [eax+0x490e6ad3]
  412941:	xor    eax,0xd5d39d10
  412946:	outs   dx,BYTE PTR ds:[esi]
  412947:	mov    ebx,0x147c58f
  41294c:	pop    ss
  41294d:	loop   0x4128f9
  41294f:	repnz xor DWORD PTR [edx+0x55558b73],edi
  412956:	cli    
  412957:	imul   ebp,esp,0xe324add6
  41295d:	enter  0x7552,0x9b
  412961:	cmp    dl,BYTE PTR [edx]
  412963:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412964:	loop   0x412925
  412966:	mov    WORD PTR [edx-0x7d9e06ba],fs
  41296c:	icebp  
  41296d:	adc    ah,BYTE PTR [edx-0x152d99d7]
  412973:	ja     0x4129c4
  412975:	cmp    BYTE PTR [ebx-0x38768822],0x52
  41297c:	xor    esp,DWORD PTR [edx]
  41297e:	cmc    
  41297f:	push   ebp
  412980:	in     eax,dx
  412981:	pop    edi
  412982:	mov    al,ds:0x623b85fd
  412987:	mov    cl,0x96
  412989:	xchg   ecx,eax
  41298a:	cmp    eax,0xffea3bf8
  41298f:	stos   BYTE PTR es:[edi],al
  412990:	ins    BYTE PTR es:[edi],dx
  412991:	test   eax,0x538a8b6d
  412996:	dec    eax
  412997:	test   al,0xec
  412999:	aam    0x66
  41299b:	lods   al,BYTE PTR ds:[esi]
  41299c:	adc    ebx,DWORD PTR [ecx]
  41299e:	(bad)  
  41299f:	jnp    0x412a0e
  4129a1:	push   DWORD PTR [eax]
  4129a3:	jmp    0x57c0:0xaee19e05
  4129aa:	mov    ah,0x90
  4129ac:	cwde   
  4129ad:	test   DWORD PTR [eax-0x4c],esp
  4129b0:	and    eax,0xebd605d0
  4129b5:	push   ecx
  4129b6:	pop    eax
  4129b7:	clc    
  4129b8:	sahf   
  4129b9:	or     DWORD PTR [ebx-0x17],ebp
  4129bc:	sbb    al,0xa6
  4129bf:	xchg   esi,eax
  4129c0:	icebp  
  4129c1:	mov    BYTE PTR [edi+0x8a54b6c],bl
  4129c7:	xor    al,0xc1
  4129c9:	icebp  
  4129ca:	out    0x1d,al
  4129cc:	and    esi,DWORD PTR [eax-0x68]
  4129cf:	add    al,BYTE PTR [ecx+0x1c]
  4129d2:	scas   al,BYTE PTR es:[edi]
  4129d3:	and    BYTE PTR [edx+0x3665845c],bl
  4129d9:	pop    ss
  4129da:	je     0x412a44
  4129dc:	mov    esi,0xf48c65cc
  4129e1:	sbb    eax,0xd1805298
  4129e6:	or     al,0xd5
  4129e8:	enter  0xc857,0xca
  4129ec:	sub    eax,0xd22b58b2
  4129f1:	jo     0x412a38
  4129f3:	js     0x4129a5
  4129f5:	stos   BYTE PTR es:[edi],al
  4129f6:	retf   
  4129f7:	fcmovnu st,st(6)
  4129f9:	mov    eax,ds:0x325c0ea0
  4129fe:	adc    eax,0x6de0106a
  412a03:	mov    ebp,0x4e387c7
  412a08:	pop    edx
  412a09:	inc    ebp
  412a0a:	addr16 mov edi,0x1ed883b3
  412a10:	inc    eax
  412a11:	jo     0x412a68
  412a13:	stc    
  412a14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a15:	scas   al,BYTE PTR es:[edi]
  412a16:	ret    0xea7c
  412a19:	jb     0x412a18
  412a1b:	stos   DWORD PTR es:[edi],eax
  412a1c:	mov    ah,0x10
  412a1e:	sti    
  412a1f:	add    al,BYTE PTR [ebx+0x29]
  412a22:	cld    
  412a23:	push   esp
  412a24:	les    ebx,FWORD PTR [eax+ebp*8-0x4d496a4e]
  412a2b:	mov    ebx,0x231291b1
  412a30:	bound  ebp,QWORD PTR [edx]
  412a32:	out    0xbb,eax
  412a34:	sub    edi,DWORD PTR [edx+0x14ad79a9]
  412a3a:	lea    ecx,[ebx]
  412a3c:	in     eax,dx
  412a3d:	mov    ebp,DWORD PTR [edi+0x36]
  412a40:	(bad)  
  412a41:	push   ebx
  412a42:	loop   0x412ac2
  412a44:	sbb    al,0xbc
  412a46:	add    al,0x17
  412a48:	adc    eax,0x5d9899a7
  412a4d:	out    0x2f,eax
  412a4f:	in     al,0xaf
  412a51:	jne    0x412a5f
  412a53:	pop    ebp
  412a54:	and    ah,BYTE PTR [esi+0x504d552a]
  412a5a:	leave  
  412a5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a5c:	add    DWORD PTR [esi-0x217d85f8],0xffffffe9
  412a63:	adc    al,BYTE PTR [ebx]
  412a65:	mov    ds:0x476665ad,al
  412a6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a6b:	add    dh,al
  412a6d:	nop
  412a6e:	pop    esp
  412a6f:	retf   0x268e
  412a72:	out    0x60,al
  412a74:	push   es
  412a75:	mov    dl,0x22
  412a77:	adc    esi,DWORD PTR [edi+edx*2]
  412a7a:	pushf  
  412a7b:	xor    al,0xb2
  412a7d:	(bad)  
  412a7e:	pop    WORD PTR [ebx]
  412a81:	jnp    0x412a88
  412a83:	mov    ?,WORD PTR ds:0x5ae94e4f
  412a89:	loopne 0x412ac4
  412a8b:	out    0x63,al
  412a8d:	fs push edi
  412a8f:	pmaxub mm7,QWORD PTR ds:0x3a72a99c
  412a96:	leave  
  412a97:	sub    al,0x7e
  412a99:	jne    0x412aae
  412a9b:	leave  
  412a9c:	push   esp
  412a9d:	add    edi,DWORD PTR [ecx-0x122f92ec]
  412aa3:	fwait
  412aa4:	and    DWORD PTR [ecx-0x6c],0x11a10836
  412aab:	retf   0xc64d
  412aae:	(bad)  
  412aaf:	(bad)  
  412ab1:	adc    esi,DWORD PTR [edi-0x51b9db7b]
  412ab7:	mov    edi,0xd2adde1
  412abc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412abd:	test   DWORD PTR [ecx],ebx
  412abf:	or     eax,0x2b78a270
  412ac4:	mul    BYTE PTR [ebx+0x41]
  412ac7:	mov    esi,0x23a3a555
  412acc:	push   edi
  412acd:	shl    BYTE PTR [eax],0xfc
  412ad0:	mov    ecx,eax
  412ad2:	inc    ebp
  412ad3:	jb     0x412a9c
  412ad5:	mov    edi,0x1fb067d9
  412ada:	mov    ds:0x3d5045a1,al
  412adf:	iret   
  412ae0:	out    0x8,al
  412ae2:	stos   BYTE PTR es:[edi],al
  412ae3:	test   BYTE PTR [ebp+0x752b54d],ah
  412ae9:	push   edi
  412aea:	enter  0x3889,0x25
  412aee:	data16 aam 0x86
  412af1:	mov    ds:0x3c7adc99,eax
  412af6:	push   eax
  412af7:	sbb    BYTE PTR [esi],0xf1
  412afa:	xchg   ecx,eax
  412afb:	lds    eax,FWORD PTR [edx+eiz*8+0x6]
  412aff:	popf   
  412b00:	xor    eax,0x95566ff8
  412b05:	ror    DWORD PTR [eax+0x67],cl
  412b08:	loope  0x412b5c
  412b0a:	sub    eax,0x760938b4
  412b0f:	fwait
  412b10:	sub    dh,BYTE PTR [edi-0x459f21b]
  412b16:	sub    BYTE PTR [ebx+0xcb63561],dh
  412b1c:	lahf   
  412b1d:	stos   BYTE PTR es:[edi],al
  412b1e:	inc    esp
  412b1f:	and    DWORD PTR [eax+0x2],eax
  412b22:	nop
  412b23:	push   esi
  412b24:	dec    ecx
  412b25:	pop    eax
  412b26:	dec    eax
  412b27:	jbe    0x412b60
  412b29:	es sbb eax,0x8bf2f377
  412b2f:	ret    
  412b30:	or     eax,0x8d528bbb
  412b35:	adc    edi,ecx
  412b37:	or     DWORD PTR [edx],0xffffffba
  412b3a:	outs   dx,BYTE PTR ds:[esi]
  412b3b:	jmp    0xaf76:0x3b04c42c
  412b42:	lock sahf 
  412b44:	sbb    al,0xfa
  412b46:	in     al,dx
  412b47:	nop
  412b48:	or     cl,ch
  412b4a:	out    dx,eax
  412b4b:	and    al,0xb9
  412b4d:	aad    0x78
  412b4f:	adc    esi,DWORD PTR [ebp+0x68fc1495]
  412b55:	dec    esp
  412b56:	adc    ecx,DWORD PTR [edi+0x41b26fa5]
  412b5c:	js     0x412b3c
  412b5e:	inc    edi
  412b5f:	sbb    al,BYTE PTR [ebp-0x44]
  412b62:	sbb    BYTE PTR [edx+ebx*4+0x8],ah
  412b66:	and    ecx,DWORD PTR [edi+0x6273c2ea]
  412b6c:	sbb    DWORD PTR [ebp-0xc],esp
  412b6f:	jl     0x412b95
  412b71:	out    dx,al
  412b72:	hlt    
  412b73:	xchg   ebx,ebx
  412b75:	add    BYTE PTR [edi+esi*4],ch
  412b78:	cli    
  412b79:	stos   DWORD PTR es:[edi],eax
  412b7a:	cmp    eax,0x6d420ccc
  412b7f:	add    al,0x75
  412b81:	outs   dx,DWORD PTR ds:[esi]
  412b82:	sahf   
  412b83:	adc    BYTE PTR [ecx+0x4e],dl
  412b86:	shl    DWORD PTR [edx],0x89
  412b89:	sar    ebp,cl
  412b8b:	sbb    DWORD PTR [edx],ebx
  412b8d:	lea    eax,[ebp-0x41daa16a]
  412b93:	loop   0x412bc5
  412b95:	jge    0x412c0a
  412b97:	cs leave 
  412b99:	jo     0x412b7c
  412b9b:	es fsubp st(2),st
  412b9e:	fild   DWORD PTR [ebp+0x76]
  412ba1:	ins    BYTE PTR es:[edi],dx
  412ba2:	test   dh,dh
  412ba4:	inc    esp
  412ba5:	mov    esp,0x8e5ba380
  412baa:	pop    edx
  412bab:	xor    eax,0x24afb568
  412bb0:	adc    BYTE PTR [ebp-0x7f],dh
  412bb3:	in     al,dx
  412bb4:	das    
  412bb5:	push   0x1029dbc
  412bba:	add    cl,dl
  412bbc:	cmc    
  412bbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bbe:	stos   DWORD PTR es:[edi],eax
  412bbf:	adc    al,0x27
  412bc1:	add    ecx,DWORD PTR [eax]
  412bc3:	mov    al,0xe9
  412bc5:	pop    ds
  412bc6:	les    edx,FWORD PTR [esp+ebp*4+0x13]
  412bca:	ficom  WORD PTR [esi+0x1c]
  412bcd:	hlt    
  412bce:	dec    ebx
  412bcf:	adc    ch,ch
  412bd1:	inc    ecx
  412bd2:	ret    0x894f
  412bd5:	cmp    DWORD PTR [ecx+0x7a9c5335],ebp
  412bdb:	sub    DWORD PTR [esi+0x11],esp
  412bde:	xor    eax,0xa61cd8c8
  412be3:	lea    esi,[ebx*1+0x5a5ed87f]
  412bea:	cmp    DWORD PTR ds:0x83ded417,0x3
  412bf1:	push   esp
  412bf2:	adc    eax,0xe3a1298b
  412bf7:	jmp    0x9d10924e
  412bfc:	jge    0x412c0d
  412bfe:	cmp    DWORD PTR [ecx],edi
  412c00:	fwait
  412c01:	inc    esp
  412c02:	mov    eax,ds:0x2d5a77b7
  412c07:	repnz add ch,BYTE PTR [edi+0x2a96c387]
  412c0e:	or     ch,ah
  412c10:	jmp    0xfd10:0xf273295f
  412c17:	loope  0x412bb6
  412c19:	stc    
  412c1a:	xor    al,0xb7
  412c1c:	shl    DWORD PTR [edi+0x23b93848],0x47
  412c23:	dec    edi
  412c24:	nop
  412c25:	adc    esi,DWORD PTR [esi-0x627c767b]
  412c2b:	out    dx,eax
  412c2c:	jno    0x412c76
  412c2e:	add    ch,BYTE PTR [edi]
  412c30:	(bad)  
  412c31:	push   ebp
  412c32:	and    ebp,DWORD PTR [ebx+0x69]
  412c35:	push   0x875161fb
  412c3a:	dec    ebx
  412c3b:	outs   dx,BYTE PTR ds:[esi]
  412c3c:	aad    0x65
  412c3e:	gs ret 0x6189
  412c42:	pop    ecx
  412c43:	xchg   ebx,eax
  412c44:	xor    ah,BYTE PTR [edi]
  412c46:	fild   WORD PTR [ebx-0x58db36b0]
  412c4c:	in     eax,dx
  412c4d:	and    al,0x5
  412c4f:	mov    esi,0xa2638e9b
  412c54:	fldenv [ebx+0x37]
  412c57:	aaa    
  412c58:	mov    bh,al
  412c5a:	lods   al,BYTE PTR ds:[esi]
  412c5b:	in     al,dx
  412c5c:	aas    
  412c5d:	cmc    
  412c5e:	adc    eax,0x2c34c170
  412c63:	xchg   ebx,eax
  412c64:	nop
  412c65:	adc    dh,BYTE PTR [edi-0x41]
  412c68:	sbb    edx,DWORD PTR [esi-0x43]
  412c6b:	sti    
  412c6c:	into   
  412c6d:	xchg   edi,eax
  412c6e:	and    BYTE PTR [ecx-0xe4e3fb2],0xfa
  412c75:	ja     0x412ca7
  412c77:	mov    ebx,0x63d2e194
  412c7c:	cwde   
  412c7d:	retf   0xab34
  412c80:	cmp    eax,0xd1bb1eab
  412c85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c86:	or     eax,0x21182880
  412c8b:	or     al,0xec
  412c8d:	cli    
  412c8e:	add    eax,0xdac5b35d
  412c93:	shld   DWORD PTR [esi-0x48bfe4ce],eax,0x8a
  412c9b:	pop    ebx
  412c9c:	sbb    eax,0x4f56446
  412ca1:	push   edx
  412ca2:	and    dl,bl
  412ca4:	sub    eax,0x61b71971
  412ca9:	mov    dh,BYTE PTR [ecx+0x24]
  412cac:	(bad)  
  412cad:	lods   al,BYTE PTR ds:[esi]
  412cae:	cmp    BYTE PTR [edi],al
  412cb0:	(bad)  
  412cb2:	ret    
  412cb3:	int3   
  412cb4:	and    al,BYTE PTR [edx-0x6b]
  412cb7:	inc    edx
  412cb8:	ret    0x588b
  412cbb:	jns    0x412d2e
  412cbd:	data16 sbb bl,bh
  412cc0:	sbb    edi,esp
  412cc2:	push   es
  412cc3:	xor    edx,DWORD PTR [ebp-0x2474dfb]
  412cc9:	jmp    0x412ce7
  412ccb:	gs (bad) 
  412ccd:	cmp    BYTE PTR [ebx],bl
  412ccf:	sbb    dh,ch
  412cd1:	inc    edx
  412cd2:	int3   
  412cd3:	scas   al,BYTE PTR es:[edi]
  412cd4:	jp     0x412cae
  412cd6:	xor    DWORD PTR [eax-0x6408676f],0x50391252
  412ce0:	jecxz  0x412c8d
  412ce2:	inc    ecx
  412ce3:	cmp    bh,BYTE PTR [esi]
  412ce5:	xor    ah,bl
  412ce7:	mov    bh,0xd1
  412ce9:	add    esi,DWORD PTR [esi]
  412ceb:	fsubr  st(6),st
  412ced:	jecxz  0x412ca8
  412cef:	loope  0x412d1b
  412cf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412cf2:	dec    ebx
  412cf3:	imul   esp,esp,0xffffff95
  412cf6:	cli    
  412cf7:	out    dx,eax
  412cf8:	mov    ch,0xf3
  412cfa:	mov    bh,0x15
  412cfc:	das    
  412cfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cfe:	pushf  
  412cff:	cmp    eax,0xc60100b3
  412d04:	(bad)  
  412d05:	cli    
  412d06:	push   edi
  412d07:	cmp    al,0xef
  412d09:	lods   eax,DWORD PTR ds:[esi]
  412d0a:	lock out dx,eax
  412d0c:	push   ebp
  412d0d:	dec    ebx
  412d0e:	jl     0x412d53
  412d10:	mov    edi,0x3d83e34d
  412d15:	hlt    
  412d16:	ret    0x26ed
  412d19:	mov    ah,0xef
  412d1b:	mov    ebx,0xcb60a4b4
  412d20:	(bad)  
  412d21:	cmc    
  412d22:	sub    edx,ecx
  412d24:	mov    ds:0xba18baf3,eax
  412d29:	outs   dx,BYTE PTR ds:[esi]
  412d2a:	jecxz  0x412d6b
  412d2c:	mov    ds:0x529afa00,al
  412d31:	add    eax,0x52fa902a
  412d36:	retf   
  412d37:	add    al,0x8d
  412d39:	enter  0x5938,0x52
  412d3d:	frstor [ebp-0x1e10a676]
  412d43:	lods   eax,DWORD PTR ds:[esi]
  412d44:	inc    edx
  412d45:	call   0x897d47a4
  412d4a:	fiadd  WORD PTR [edi+0x56fe09f9]
  412d50:	arpl   WORD PTR [ecx+0x9cae692],bx
  412d56:	mov    eax,ds:0xdf7a617e
  412d5b:	jl     0x412d44
  412d5d:	dec    ecx
  412d5e:	pop    ebx
  412d5f:	lods   al,BYTE PTR ds:[esi]
  412d60:	lods   eax,DWORD PTR ds:[esi]
  412d61:	add    DWORD PTR [ebp-0x6f],eax
  412d64:	jbe    0x412dbb
  412d66:	loope  0x412cee
  412d68:	sahf   
  412d69:	sub    ah,BYTE PTR [eax-0x47]
  412d6c:	int3   
  412d6d:	mov    edi,0x5b09014e
  412d72:	jo     0x412d57
  412d74:	leave  
  412d75:	pop    edi
  412d76:	fmul   st(2),st
  412d78:	and    BYTE PTR [eax-0x766bf],al
  412d7e:	push   cs
  412d7f:	xor    eax,0x592e1587
  412d84:	icebp  
  412d85:	add    edi,DWORD PTR [esi-0x27]
  412d88:	sub    DWORD PTR [si],0xf813478c
  412d8f:	mov    esp,0xa3a10b0b
  412d94:	test   eax,0xb0beb5ba
  412d99:	lds    eax,FWORD PTR [edi+0x7]
  412d9c:	fist   DWORD PTR [ecx-0x3ecdf131]
  412da2:	fnstcw WORD PTR [eax+0x2d]
  412da5:	cdq    
  412da6:	lea    ebx,[ebx+0x60]
  412da9:	ret    0xee7e
  412dac:	inc    ecx
  412dad:	enter  0x304a,0xa3
  412db1:	or     ah,BYTE PTR [esi]
  412db3:	shl    BYTE PTR [ecx+edi*8+0x68],1
  412db7:	mov    dh,0xac
  412db9:	stos   BYTE PTR es:[edi],al
  412dba:	mov    al,0x7c
  412dbc:	icebp  
  412dbd:	ins    DWORD PTR es:[edi],dx
  412dbe:	sti    
  412dbf:	jae    0x412daa
  412dc1:	call   0x2ed9:0x2c8f4d8f
  412dc8:	jg     0x412d6e
  412dca:	dec    ebx
  412dcb:	leave  
  412dcc:	outs   dx,BYTE PTR ds:[esi]
  412dcd:	mov    edi,0x2147d6df
  412dd2:	rcr    DWORD PTR [ebx+ecx*2],cl
  412dd5:	and    edi,DWORD PTR [edx]
  412dd7:	adc    cl,BYTE PTR [ebx+ebx*8]
  412dda:	pop    edx
  412ddb:	mov    al,0xe
  412ddd:	inc    ecx
  412dde:	popf   
  412ddf:	xchg   ecx,eax
  412de0:	inc    esp
  412de1:	sbb    al,0xc8
  412de3:	xchg   ebx,eax
  412de4:	adc    DWORD PTR [edi+esi*2+0x41fe2fe6],esp
  412deb:	cmp    eax,0x22235b4
  412df0:	fsubr  QWORD PTR ds:0x4ca48e4b
  412df6:	xchg   edi,eax
  412df7:	pop    ds
  412df8:	dec    edi
  412df9:	and    BYTE PTR [ecx],al
  412dfb:	lea    esi,[ebx]
  412dfd:	xchg   ebx,eax
  412dfe:	xor    eax,0x83d672dd
  412e03:	xchg   edx,eax
  412e04:	lds    eax,FWORD PTR [edi+0x69]
  412e07:	xchg   ebx,eax
  412e08:	sbb    DWORD PTR [esi],ecx
  412e0a:	add    ebp,DWORD PTR [ecx+ecx*1-0x6509d2ef]
  412e11:	jo     0x412dab
  412e13:	xor    al,0x26
  412e15:	or     DWORD PTR [ecx-0x38cb0299],ebx
  412e1b:	mov    ebx,0x234ca399
  412e20:	into   
  412e21:	push   ss
  412e22:	cs pushf 
  412e24:	and    dh,BYTE PTR [bx+di+0x4974]
  412e29:	adc    ah,dl
  412e2b:	arpl   WORD PTR [eax+0x7b],di
  412e2e:	mov    WORD PTR [esi],?
  412e30:	xor    ebp,DWORD PTR [edi]
  412e32:	loope  0x412dce
  412e34:	jbe    0x412e1d
  412e36:	or     BYTE PTR [esi],cl
  412e38:	ja     0x412e3d
  412e3a:	fs int3 
  412e3c:	mov    ah,0xbe
  412e3e:	stc    
  412e3f:	mov    bh,0xcd
  412e41:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e43:	cs (bad) 
  412e45:	jns    0x412ebe
  412e47:	(bad)  [ebp+0x3e]
  412e4a:	pop    ebp
  412e4b:	pop    esi
  412e4c:	ss jb  0x412ec1
  412e4f:	dec    edx
  412e50:	inc    esp
  412e51:	jecxz  0x412ed1
  412e53:	popa   
  412e54:	sbb    ah,ch
  412e56:	int    0xa9
  412e58:	out    dx,al
  412e59:	pusha  
  412e5a:	sti    
  412e5b:	arpl   WORD PTR [edi+0x11],dx
  412e5e:	push   0xe228cc96
  412e63:	rol    ecx,cl
  412e65:	jmp    0x412e2e
  412e67:	ds je  0x412ecc
  412e6a:	add    cl,dh
  412e6c:	pop    ss
  412e6d:	cmc    
  412e6e:	in     al,dx
  412e6f:	jbe    0x412e6c
  412e71:	cmp    eax,0xfb20a736
  412e76:	jo     0x412ef2
  412e78:	(bad)  
  412e79:	or     al,0xc0
  412e7b:	rcr    al,cl
  412e7d:	sbb    esi,0x1f0a23ec
  412e83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e84:	adc    al,dh
  412e86:	adc    dh,BYTE PTR [edx-0x4ecff4e9]
  412e8c:	pop    eax
  412e8d:	jae    0x412eb9
  412e8f:	xor    BYTE PTR [eax-0x389cc923],dh
  412e95:	in     eax,0xb5
  412e97:	leave  
  412e98:	xor    ebx,DWORD PTR [ebx-0x38]
  412e9b:	in     al,0x6
  412e9d:	or     al,0x22
  412e9f:	mov    ch,0x2d
  412ea1:	mov    BYTE PTR [edi-0x49],bl
  412ea4:	mov    edi,0x15e6a09d
  412ea9:	mov    al,ds:0x6d0fb113
  412eae:	add    ecx,DWORD PTR [eax+0x6368ea17]
  412eb4:	or     cl,dh
  412eb6:	xchg   ebx,eax
  412eb7:	mov    ecx,0x7a7da00a
  412ebc:	push   ebp
  412ebd:	cld    
  412ebe:	cmp    BYTE PTR [ecx-0x48],0x26
  412ec2:	sbb    al,0x3d
  412ec4:	stos   BYTE PTR es:[edi],al
  412ec5:	ins    BYTE PTR es:[edi],dx
  412ec6:	mov    DWORD PTR [esi],0xfdc5b2cb
  412ecc:	std    
  412ecd:	pop    edx
  412ece:	pop    ds
  412ecf:	xor    DWORD PTR [ebp+0x324f6dd2],esp
  412ed5:	xchg   DWORD PTR [ebp+0xc36bef3],ebx
  412edb:	xchg   DWORD PTR [ebp+0x6c],edi
  412ede:	adc    al,0x9e
  412ee0:	shl    BYTE PTR [ecx],1
  412ee2:	es jmp 0x825c0c32
  412ee8:	(bad)  
  412ee9:	outs   dx,DWORD PTR ds:[esi]
  412eea:	sbb    DWORD PTR [edi],ecx
  412eec:	mov    dh,0x8a
  412eee:	out    0xf,eax
  412ef0:	xchg   BYTE PTR [ecx],dh
  412ef2:	pushf  
  412ef3:	xchg   ecx,eax
  412ef4:	mov    bl,0xc3
  412ef6:	adc    ecx,DWORD PTR [ecx]
  412ef8:	mov    esp,0x5a47f7af
  412efd:	fcomi  st,st(3)
  412eff:	pop    ebp
  412f00:	jg     0x412eb7
  412f02:	(bad)  
  412f03:	pop    ebp
  412f04:	inc    eax
  412f05:	test   DWORD PTR [ebx],ebp
  412f07:	mov    esi,0x4e70ad9f
  412f0c:	pop    ecx
  412f0d:	ret    
  412f0e:	(bad)  
  412f0f:	lds    esi,FWORD PTR [edi+0x75dfdf54]
  412f15:	or     eax,0x9e4bdf17
  412f1a:	aaa    
  412f1b:	call   0x717712d7
  412f20:	dec    eax
  412f21:	nop
  412f22:	ror    BYTE PTR [edx+0x6a],0x78
  412f26:	call   0xe6ab4d9d
  412f2b:	mov    ecx,0x8b29815
  412f30:	pop    es
  412f31:	daa    
  412f32:	rol    DWORD PTR [esp+ecx*1],cl
  412f35:	pop    ecx
  412f36:	pop    ebx
  412f37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f38:	mov    DWORD PTR [ecx-0x2ade996f],ebp
  412f3e:	mov    eax,ds:0x8a87daa8
  412f43:	mov    edx,0xc3900ed2
  412f48:	pushf  
  412f49:	hlt    
  412f4a:	rol    BYTE PTR [ebx],cl
  412f4c:	pop    ebx
  412f4d:	arpl   WORD PTR [eax-0x71],dx
  412f50:	and    cl,BYTE PTR [edi+0x4adbd6e9]
  412f56:	pop    edx
  412f57:	(bad)  
  412f58:	pop    ds
  412f59:	je     0x412fcd
  412f5b:	shl    esp,1
  412f5d:	aas    
  412f5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f5f:	test   al,0xe4
  412f61:	or     bh,BYTE PTR [esi-0x2af284f3]
  412f67:	fst    DWORD PTR [esp+esi*8]
  412f6a:	sbb    al,0x5e
  412f6c:	std    
  412f6d:	mov    al,ds:0xb043f86f
  412f72:	sbb    eax,0xd299bbfb
  412f77:	in     eax,dx
  412f78:	jo     0x412f1c
  412f7a:	and    al,0x10
  412f7c:	out    0xf,al
  412f7e:	cmp    al,BYTE PTR [esi+edx*1]
  412f81:	bound  ebx,QWORD PTR [esi-0x5185aaf3]
  412f87:	(bad)  
  412f88:	sti    
  412f89:	iret   
  412f8a:	outs   dx,BYTE PTR ds:[esi]
  412f8b:	sub    BYTE PTR [eax+0x46],bl
  412f8e:	adc    al,0xd7
  412f90:	jb     0x412fa5
  412f92:	cdq    
  412f93:	inc    ebp
  412f94:	(bad)  
  412f96:	lods   al,BYTE PTR ds:[esi]
  412f97:	dec    esp
  412f98:	fadd   st(2),st
  412f9a:	sub    BYTE PTR [ecx-0x7abcf551],dl
  412fa0:	and    cl,BYTE PTR [eax+0x11fcbbff]
  412fa6:	push   ss
  412fa7:	adc    edi,0xdf68b9da
  412fad:	mov    bl,cl
  412faf:	scas   al,BYTE PTR es:[edi]
  412fb0:	mov    DWORD PTR [ebp-0x2528c779],eax
  412fb6:	mov    edx,0x2cb48651
  412fbb:	rol    ebx,cl
  412fbd:	stc    
  412fbe:	mov    es,ebx
  412fc0:	aad    0x6
  412fc2:	mov    cl,0xe4
  412fc4:	jmp    0x412fb5
  412fc6:	je     0x413013
  412fc8:	push   esi
  412fc9:	dec    eax
  412fca:	test   eax,0xa62aed3d
  412fcf:	xor    ah,bl
  412fd1:	cmp    BYTE PTR [ebx-0x2bb842a0],bl
  412fd7:	and    BYTE PTR [eax],bl
  412fd9:	push   ebx
  412fda:	rcl    edi,cl
  412fdc:	pop    ebp
  412fdd:	mov    cl,0xe9
  412fdf:	dec    esi
  412fe0:	shr    ebx,0x25
  412fe3:	xor    BYTE PTR [ebp+0x513b7bd0],dl
  412fe9:	adc    al,0x4d
  412feb:	push   eax
  412fec:	adc    edx,0xffffffca
  412fef:	fidivr WORD PTR [ebx]
  412ff1:	ja     0x412f79
  412ff3:	sahf   
  412ff4:	or     esi,edi
  412ff6:	push   ebp
  412ff7:	inc    ebp
  412ff8:	dec    edx
  412ff9:	ins    BYTE PTR es:[edi],dx
  412ffa:	inc    edx
  412ffb:	pop    ebp
  412ffc:	xchg   edi,eax
  412ffd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ffe:	rep outs dx,BYTE PTR ds:[esi]
  413000:	les    esp,FWORD PTR [ecx]
  413002:	sbb    edx,DWORD PTR [edi]
  413004:	pop    ecx
  413005:	(bad)  
  413007:	adc    al,0x5c
  413009:	imul   esp,DWORD PTR [edi],0x23
  41300c:	int    0x68
  41300e:	xchg   ebp,eax
  41300f:	add    BYTE PTR [esi],bh
  413011:	shl    DWORD PTR [ebx],1
  413013:	xchg   edi,eax
  413014:	ret    
  413015:	mov    ah,0x39
  413017:	out    dx,al
  413018:	mov    edi,ebp
  41301a:	rcl    DWORD PTR [eax*4-0x543ef5f1],1
  413021:	jge    0x413000
  413023:	dec    ecx
  413024:	pop    es
  413025:	es inc ebp
  413027:	sub    ebp,DWORD PTR [eax+ebp*2-0x39390c4]
  41302e:	hlt    
  41302f:	cmp    DWORD PTR ds:0x4a7796f,eax
  413035:	popf   
  413036:	sbb    dh,BYTE PTR [esp+edi*8+0x52]
  41303a:	fcos   
  41303c:	inc    esp
  41303d:	add    al,0xd4
  41303f:	not    BYTE PTR [ecx+0x30]
  413042:	mov    ?,WORD PTR [ebp+0x55cfc10c]
  413048:	sti    
  413049:	xchg   ebp,eax
  41304a:	out    0x3c,al
  41304c:	pop    ebp
  41304d:	retf   0xd85b
  413050:	or     BYTE PTR [edi],al
  413052:	mov    edi,esp
  413054:	iret   
  413055:	rcl    ah,1
  413057:	adc    edx,DWORD PTR [eax+0x2ddad8f0]
  41305d:	clc    
  41305e:	(bad)  
  413060:	and    DWORD PTR [edi],ebp
  413062:	call   0x37566707
  413067:	or     al,0xb8
  413069:	data16 ins BYTE PTR es:[edi],dx
  41306b:	out    0xd4,eax
  41306d:	sub    BYTE PTR [ecx+0x65],bl
  413070:	stos   DWORD PTR es:[edi],eax
  413071:	(bad)  
  413072:	mov    ebp,0x4e81cdb2
  413077:	fld    DWORD PTR [ebx]
  413079:	pushf  
  41307a:	adc    ah,al
  41307c:	mov    eax,ds:0xe2a857e8
  413081:	mov    al,ds:0x6e0a4220
  413086:	iret   
  413087:	scas   al,BYTE PTR es:[edi]
  413088:	inc    esi
  413089:	dec    ebx
  41308a:	add    ebp,edx
  41308c:	cmp    eax,0x2a144487
  413091:	xor    BYTE PTR ss:[edi],0x53
  413095:	dec    eax
  413096:	sub    DWORD PTR [ebx-0x4c],esp
  413099:	mov    ch,0xa7
  41309b:	iret   
  41309c:	inc    ebx
  41309d:	inc    ecx
  41309e:	xchg   esi,eax
  41309f:	pushf  
  4130a0:	fcmovu st,st(6)
  4130a2:	xor    edi,ebx
  4130a4:	out    0x59,eax
  4130a6:	mov    ds:0x2323c034,al
  4130ab:	mov    ebp,0x995c7347
  4130b0:	imul   edx,DWORD PTR [edi],0xa
  4130b3:	jno    0x4130e9
  4130b5:	not    dh
  4130b7:	xchg   edi,eax
  4130b8:	adc    eax,0xf8208b07
  4130bd:	xor    DWORD PTR [eax+0x78],esp
  4130c0:	and    al,bl
  4130c2:	mov    WORD PTR [ebx-0x52ba7c39],ss
  4130c8:	dec    ebp
  4130c9:	push   ebp
  4130ca:	clc    
  4130cb:	addr16 adc edx,ebp
  4130ce:	sub    eax,0xe24a8ee9
  4130d3:	cli    
  4130d4:	inc    BYTE PTR [edi]
  4130d6:	or     DWORD PTR [eax],ebp
  4130d8:	xchg   ebp,eax
  4130d9:	sub    al,BYTE PTR [esi]
  4130db:	loope  0x41309b
  4130dd:	jecxz  0x413103
  4130df:	mov    eax,gs:0x1503c786
  4130e5:	call   0x3305:0xf7fb818b
  4130ec:	out    0x9a,eax
  4130ee:	sub    DWORD PTR [esi-0x4e9e6514],ecx
  4130f4:	jne    0x4130d9
  4130f6:	xchg   edi,eax
  4130f7:	inc    esp
  4130f8:	dec    eax
  4130f9:	(bad)  
  4130fa:	xor    al,0xf
  4130fc:	ret    
  4130fd:	jle    0x413134
  4130ff:	pop    ds
  413100:	stos   DWORD PTR es:[edi],eax
  413101:	les    ebp,FWORD PTR [ebx-0x54e967ee]
  413107:	adc    DWORD PTR [esi],ecx
  413109:	push   edi
  41310a:	jl     0x413177
  41310c:	fadd   QWORD PTR [edx-0x30]
  41310f:	jl     0x41309a
  413111:	jno    0x4130c0
  413113:	lock push ecx
  413115:	cmp    BYTE PTR [eax+0x49],ah
  413118:	mov    edx,DWORD PTR [eax+esi*8]
  41311b:	mov    dh,0xb4
  41311d:	fld    DWORD PTR [ebx]
  41311f:	dec    esi
  413120:	jne    0x4130ed
  413122:	mov    ecx,0xaaf1ec8
  413127:	popf   
  413128:	adc    eax,0x54c1d777
  41312d:	adc    cl,BYTE PTR [esi]
  41312f:	ret    
  413130:	jb     0x413170
  413132:	cmp    DWORD PTR [edi-0x48564fd5],ebx
  413138:	pop    ebp
  413139:	sahf   
  41313a:	outs   dx,BYTE PTR ds:[esi]
  41313b:	mov    eax,ds:0x427ccbaa
  413140:	ds int 0xed
  413143:	push   ecx
  413144:	imul   eax,DWORD PTR [ebp+0x49],0x4
  413148:	or     DWORD PTR [ebp+edx*4-0x80],0xed50e662
  413150:	and    cl,BYTE PTR [edi-0x675f2c3e]
  413156:	mov    edx,0xaa9a3b38
  41315b:	mov    eax,ds:0xfab725a2
  413160:	ror    DWORD PTR [ecx],0x33
  413163:	mov    bl,0x4
  413165:	lods   al,BYTE PTR ds:[esi]
  413166:	add    DWORD PTR [edx],ebp
  413168:	aam    0x44
  41316a:	in     al,dx
  41316b:	or     DWORD PTR [eax+0x45],ecx
  41316e:	scas   eax,DWORD PTR es:[edi]
  41316f:	dec    ebx
  413170:	bound  esp,QWORD PTR [edx]
  413172:	icebp  
  413173:	aaa    
  413174:	dec    esp
  413175:	icebp  
  413176:	aaa    
  413177:	daa    
  413178:	add    eax,0xeffe363f
  41317d:	daa    
  41317e:	(bad)  
  41317f:	adc    BYTE PTR [ecx+eax*8],bh
  413182:	(bad)  
  413184:	aam    0xcc
  413186:	dec    eax
  413187:	pop    ebx
  413188:	daa    
  413189:	add    eax,0x2ae11028
  41318e:	ror    BYTE PTR [ecx],0xcc
  413191:	or     ecx,edx
  413193:	or     edi,DWORD PTR [eax+0x1fa3ed4e]
  413199:	sub    eax,0x3cdfa37d
  41319e:	xor    eax,esp
  4131a0:	es test dh,0xb2
  4131a4:	xlat   BYTE PTR ds:[ebx]
  4131a5:	jmp    0x36fd:0x7996d4e1
  4131ac:	pop    ebp
  4131ad:	push   0x9c6f293d
  4131b2:	mov    ebx,0xe06f70dc
  4131b7:	pop    edi
  4131b8:	int    0x99
  4131ba:	leave  
  4131bb:	adc    dl,BYTE PTR [edi]
  4131bd:	mov    edi,0x86e14714
  4131c2:	retf   0xaa2d
  4131c5:	and    esi,DWORD PTR [esi+0x2cc0ed50]
  4131cb:	rcr    DWORD PTR [edx+0x257e7e5f],1
  4131d1:	aaa    
  4131d2:	int    0x72
  4131d4:	lahf   
  4131d5:	hlt    
  4131d6:	mov    esi,0x8240093e
  4131db:	push   ss
  4131dc:	mov    ds:0x9f761cec,eax
  4131e1:	shr    al,0x77
  4131e4:	push   eax
  4131e5:	dec    ebp
  4131e6:	les    edi,FWORD PTR [edi-0x3a]
  4131e9:	pusha  
  4131ea:	inc    esi
  4131eb:	add    edi,DWORD PTR [ecx]
  4131ed:	mov    al,0x4c
  4131ef:	test   al,0x7d
  4131f1:	cli    
  4131f2:	hlt    
  4131f3:	mov    bh,0xa7
  4131f5:	add    al,0x38
  4131f7:	pusha  
  4131f8:	ds push ebx
  4131fa:	popa   
  4131fb:	mov    eax,ds:0x658e257f
  413200:	rcr    BYTE PTR [eax],1
  413202:	sahf   
  413203:	mov    cl,0x66
  413205:	cmc    
  413206:	js     0x413254
  413208:	xchg   edx,eax
  413209:	in     eax,dx
  41320a:	out    dx,al
  41320b:	dec    esp
  41320c:	dec    edi
  41320d:	pop    esp
  41320e:	pop    esp
  41320f:	and    DWORD PTR [esi-0x6a],0x4562be1
  413216:	es push ecx
  413218:	xchg   ebp,eax
  413219:	push   ds
  41321a:	lock in eax,dx
  41321c:	ret    0x7d9b
  41321f:	inc    ebp
  413220:	aas    
  413221:	pop    es
  413222:	mov    esi,0x468ea6c7
  413228:	inc    eax
  413229:	call   0xbcff2521
  41322e:	std    
  41322f:	mov    ds:0x7b97d4ac,al
  413234:	adc    dh,BYTE PTR [eax-0x56]
  413237:	adc    ch,BYTE PTR [ecx-0x680564d0]
  41323d:	out    dx,al
  41323e:	sub    esp,edx
  413240:	push   ds
  413241:	adc    BYTE PTR [ebx+esi*4],0x84
  413245:	cli    
  413246:	mov    BYTE PTR [ebx+0x1ba5ec40],cl
  41324c:	test   eax,0x5d984ce0
  413251:	not    BYTE PTR fs:[ebx+0x5a9e0c60]
  413258:	cli    
  413259:	pop    ecx
  41325a:	or     eax,0x50c06d9b
  41325f:	inc    esp
  413260:	cld    
  413261:	sub    DWORD PTR [edx-0x7c],esi
  413264:	test   DWORD PTR [edi],ecx
  413266:	sub    ch,BYTE PTR [ecx-0x21c8201e]
  41326c:	dec    esi
  41326d:	mov    fs,esp
  41326f:	imul   edx,DWORD PTR [ebx+0x1e],0xccda3f23
  413276:	push   ebp
  413277:	pop    ss
  413278:	div    esp
  41327a:	mov    ebx,ebx
  41327c:	wrmsr  
  41327e:	ja     0x413283
  413280:	jno    0x413236
  413282:	pop    esp
  413283:	xchg   edi,eax
  413284:	mov    al,BYTE PTR [edi-0x4542e655]
  41328a:	xchg   BYTE PTR [esi],ch
  41328c:	adc    DWORD PTR [edi+0x78190748],0xffffffe5
  413293:	int3   
  413294:	xor    eax,0xe4764a6a
  413299:	add    DWORD PTR [ebx],esp
  41329b:	pop    esi
  41329c:	mov    fs,WORD PTR [edx+0x6ae60f4d]
  4132a2:	imul   edi,DWORD PTR [eax+0x64c4c5e9],0xffffff9d
  4132a9:	adc    ebx,DWORD PTR [esp+eiz*4-0x4a]
  4132ad:	fld    TBYTE PTR [ebx-0x42e84a72]
  4132b3:	sbb    al,0x5a
  4132b5:	test   DWORD PTR [ecx],ebx
  4132b7:	scas   al,BYTE PTR es:[edi]
  4132b8:	mov    al,ds:0x87cd545f
  4132bd:	add    eax,0xb82af4dc
  4132c2:	sbb    al,0x3
  4132c4:	dec    edi
  4132c5:	sbb    al,0xd9
  4132c7:	scas   eax,DWORD PTR es:[edi]
  4132c8:	shl    DWORD PTR [edi],cl
  4132ca:	ret    0x800b
  4132cd:	inc    esp
  4132ce:	sub    al,0x7c
  4132d0:	mov    WORD PTR [esi-0xb],?
  4132d3:	pusha  
  4132d4:	jmp    0xbddb:0x979665a
  4132db:	fist   WORD PTR [ebx]
  4132dd:	push   ebp
  4132de:	xrelease mov BYTE PTR [esi],ah
  4132e1:	jbe    0x4132ce
  4132e3:	and    al,0xc9
  4132e5:	fwait
  4132e6:	xor    edx,DWORD PTR [edx-0x309f65da]
  4132ec:	loop   0x4132b3
  4132ee:	out    0x31,eax
  4132f0:	ret    0x1915
  4132f3:	or     ch,BYTE PTR [esp+esi*8-0x553f0ced]
  4132fa:	je     0x4132b7
  4132fc:	inc    ebx
  4132fd:	cs mov eax,eax
  413300:	cli    
  413301:	cdq    
  413302:	shl    ecx,1
  413304:	mov    esi,0x94335944
  413309:	dec    esp
  41330a:	xchg   esi,eax
  41330b:	or     al,0x3d
  41330d:	jbe    0x41331a
  41330f:	jl     0x41336c
  413311:	xor    al,0xea
  413313:	(bad)  
  413314:	and    bh,BYTE PTR [ecx]
  413316:	sub    BYTE PTR [edx-0x27d05f8],0xfe
  41331d:	setge  BYTE PTR [eax+0x381cfec6]
  413324:	push   ecx
  413325:	cdq    
  413326:	imul   ecx,DWORD PTR [edx+0xc],0x26
  41332a:	mov    cl,0x6c
  41332c:	(bad)  
  41332d:	pop    ds
  41332e:	ss jl  0x4132d2
  413331:	push   cs
  413332:	daa    
  413333:	ins    BYTE PTR es:[edi],dx
  413334:	arpl   WORD PTR [ebx],di
  413336:	sbb    al,0x75
  413338:	pop    ebx
  413339:	mov    dl,0x86
  41333b:	out    0x29,al
  41333d:	popf   
  41333e:	sar    BYTE PTR [edi+0x600ae822],cl
  413344:	push   ds
  413345:	jmp    DWORD PTR [edi]
  413347:	imul   ebx,DWORD PTR [eax+0x1],0x66ae5200
  41334e:	inc    edx
  41334f:	pop    ebp
  413350:	sub    dh,BYTE PTR [esi+0x48a26db6]
  413356:	aad    0x3
  413358:	sbb    dh,dl
  41335a:	in     eax,dx
  41335b:	lock xchg esi,eax
  41335d:	ins    BYTE PTR es:[edi],dx
  41335e:	jg     0x4132e4
  413360:	popf   
  413361:	jl     0x4133b1
  413363:	inc    esp
  413364:	pusha  
  413365:	dec    edi
  413366:	inc    ecx
  413367:	int3   
  413368:	dec    esp
  413369:	cwde   
  41336a:	dec    ebx
  41336b:	or     edx,esp
  41336d:	stos   BYTE PTR es:[edi],al
  41336e:	add    BYTE PTR [eax-0x78],ch
  413371:	dec    eax
  413372:	push   ebp
  413373:	pop    es
  413374:	adc    cl,BYTE PTR [ecx-0x21]
  413377:	push   ds
  413378:	xchg   edi,eax
  413379:	fbld   TBYTE PTR [edx-0x72]
  41337c:	inc    edi
  41337d:	les    edx,FWORD PTR [ebx+0xdc5d2f8]
  413383:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  413385:	ret    
  413386:	imul   BYTE PTR [edi+0x674c5a1d]
  41338c:	(bad)  
  41338d:	and    ah,al
  41338f:	push   esp
  413390:	inc    ebx
  413391:	push   ebp
  413392:	inc    ecx
  413393:	and    BYTE PTR [esi-0x4],bl
  413396:	(bad)  
  413397:	ficom  WORD PTR [edi]
  413399:	or     DWORD PTR [ebx],esi
  41339b:	mov    esp,0xf51c1644
  4133a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133a1:	and    ebp,0xbfc185
  4133a7:	mov    ebx,0xac89aee0
  4133ac:	std    
  4133ad:	fisttp QWORD PTR [edx-0x6c]
  4133b0:	xor    DWORD PTR [ecx-0x7d],0xffffffd2
  4133b4:	mov    edi,0x2db0f098
  4133b9:	fidiv  DWORD PTR [edx-0x21]
  4133bc:	add    eax,0x6845559e
  4133c1:	out    0x66,al
  4133c3:	xchg   ebp,eax
  4133c4:	adc    eax,0x4e22d6f8
  4133c9:	outs   dx,BYTE PTR ds:[esi]
  4133ca:	in     eax,0x69
  4133cc:	cwde   
  4133cd:	push   ss
  4133ce:	and    eax,0x621e5a84
  4133d3:	pop    ss
  4133d4:	adc    al,0x65
  4133d6:	add    al,0xba
  4133d8:	dec    edx
  4133d9:	xchg   esi,eax
  4133da:	imul   eax,DWORD PTR [ecx-0x76],0x8398a8fd
  4133e1:	jle    0x4133e9
  4133e3:	xchg   ebx,eax
  4133e4:	div    bh
  4133e6:	pop    edx
  4133e7:	test   al,0x9b
  4133e9:	sub    DWORD PTR [edx-0x6],ebp
  4133ec:	repz pop eax
  4133ee:	pop    eax
  4133ef:	pop    edi
  4133f0:	pop    es
  4133f1:	and    bh,BYTE PTR [edi]
  4133f3:	xchg   ebp,eax
  4133f4:	and    BYTE PTR [ecx-0x3a],cl
  4133f7:	daa    
  4133f8:	dec    edi
  4133f9:	jl     0x413462
  4133fb:	mov    ah,BYTE PTR [edx+eiz*2]
  4133fe:	bound  edx,QWORD PTR [edi]
  413400:	fwait
  413401:	jb     0x41343d
  413403:	loop   0x413403
  413405:	dec    esp
  413406:	inc    ecx
  413407:	pop    ds
  413408:	xlat   BYTE PTR ds:[ebx]
  413409:	sar    BYTE PTR [ecx],0x3f
  41340c:	xor    edx,DWORD PTR [ebx*8+0x1a10caa2]
  413413:	call   0x8676:0x4213b9da
  41341a:	pusha  
  41341b:	or     al,0xbb
  41341d:	jl     0x4133bb
  41341f:	add    al,0x40
  413421:	push   ss
  413422:	ror    ecx,0xb3
  413425:	xchg   edi,eax
  413426:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413427:	or     eax,0xd45b634d
  41342c:	(bad)  
  41342d:	js     0x4133be
  41342f:	pop    esp
  413430:	jae    0x413481
  413432:	imul   edx,DWORD PTR [esi],0x11
  413435:	imul   ecx,esp,0x2afcfa64
  41343b:	sub    ecx,edx
  41343d:	sub    ebp,edi
  41343f:	test   BYTE PTR [eax],dh
  413441:	aas    
  413442:	in     eax,0xe1
  413444:	jmp    0x41340f
  413446:	lods   eax,DWORD PTR ds:[esi]
  413447:	mov    dh,0xe3
  413449:	stos   DWORD PTR es:[edi],eax
  41344a:	arpl   bx,dx
  41344c:	fcomp  DWORD PTR [ebx+0x26]
  41344f:	sti    
  413450:	xchg   ebp,eax
  413451:	cmp    eax,esi
  413453:	out    0x7,eax
  413455:	addr16 out dx,al
  413457:	dec    edi
  413458:	js     0x41344a
  41345a:	jnp    0x41340a
  41345c:	dec    esp
  41345d:	jno    0x4134de
  41345f:	pusha  
  413460:	(bad)  [edi+0x57940847]
  413466:	sub    BYTE PTR [edi-0x5e],al
  413469:	mov    ebp,0xdc3dbaf5
  41346e:	sub    al,0x5b
  413470:	das    
  413471:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413472:	pop    ds
  413473:	jecxz  0x4134ef
  413475:	fstp   TBYTE PTR [ebx+0x2dc06adf]
  41347b:	sbb    dh,BYTE PTR [ecx]
  41347d:	stos   DWORD PTR es:[edi],eax
  41347e:	fldcw  WORD PTR [ecx]
  413480:	pop    esi
  413481:	sub    al,0x33
  413483:	push   esi
  413484:	mov    ebx,0xbbec60ba
  413489:	dec    edx
  41348a:	jl     0x4134b9
  41348c:	cmp    eax,0xba6cf1f0
  413491:	cmp    DWORD PTR [ebp+0x45ccea46],esi
  413497:	ds retf 0x6313
  41349b:	xor    al,0x2b
  41349d:	xchg   edi,eax
  41349e:	jne    0x413500
  4134a0:	sub    edx,DWORD PTR [esi]
  4134a2:	dec    edi
  4134a3:	icebp  
  4134a4:	and    BYTE PTR [esi+0x41],dl
  4134a7:	lahf   
  4134a8:	jmp    0x4134a9
  4134aa:	xchg   ebx,eax
  4134ab:	mov    ah,0x93
  4134ad:	inc    eax
  4134ae:	push   esi
  4134af:	stos   BYTE PTR es:[edi],al
  4134b0:	cmp    ebp,edi
  4134b2:	xor    edx,DWORD PTR [edx+0x7a]
  4134b5:	sbb    BYTE PTR [edx],dl
  4134b7:	mov    ?,WORD PTR [edi-0x79018305]
  4134bd:	cs pop eax
  4134bf:	idiv   BYTE PTR [edx+0x37690288]
  4134c5:	ja     0x41347b
  4134c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4134c8:	dec    eax
  4134c9:	pop    es
  4134ca:	mov    esp,0x18564e9f
  4134cf:	mov    ah,0xaa
  4134d1:	xchg   esi,eax
  4134d2:	mov    esp,0x96932969
  4134d7:	xor    ebx,DWORD PTR [edi+0x3c]
  4134da:	fadd   DWORD PTR [ebx+edx*4]
  4134dd:	ret    0x75d0
  4134e0:	in     al,dx
  4134e1:	bound  esi,QWORD PTR [ebp-0x5b6931c2]
  4134e7:	or     esp,eax
  4134e9:	jne    0x41354f
  4134eb:	add    eax,0x7ffb2eeb
  4134f0:	pop    ecx
  4134f1:	in     eax,0xfa
  4134f3:	xor    eax,0xccd14d86
  4134f8:	sbb    dl,dh
  4134fa:	mov    esi,0x5d3d7717
  4134ff:	outs   dx,BYTE PTR ds:[esi]
  413500:	data16 and BYTE PTR [eax+eiz*1],dl
  413504:	(bad)  
  413505:	sbb    eax,0x9dae72a0
  41350a:	or     DWORD PTR [esi-0x785dff1],ebx
  413510:	nop
  413511:	or     esp,DWORD PTR [ebx+edi*8+0xd7b3f7d]
  413518:	sbb    ah,BYTE PTR ds:0x79f06869
  41351e:	push   esp
  41351f:	rol    BYTE PTR [edi+0x73],cl
  413522:	sub    eax,0xfc9f36da
  413527:	xor    dh,dl
  413529:	test   al,0xe8
  41352b:	clc    
  41352c:	loope  0x4134e3
  41352e:	fwait
  41352f:	test   al,0xe7
  413531:	gs out 0xce,eax
  413534:	add    DWORD PTR [ecx-0x30339bb6],edx
  41353a:	xlat   BYTE PTR ds:[ebx]
  41353b:	add    dl,0xb
  41353e:	xchg   esp,eax
  41353f:	shl    BYTE PTR [edx+esi*2-0x6f],0x5c
  413544:	shl    DWORD PTR [edi],cl
  413546:	stos   DWORD PTR es:[edi],eax
  413547:	adc    eax,0xffb3af0a
  41354c:	ja     0x413529
  41354e:	ficomp DWORD PTR [ebp+0x54f2ac18]
  413554:	iret   
  413555:	imul   eax,DWORD PTR [edi],0xffffffd5
  413558:	push   edx
  413559:	jns    0x41352a
  41355b:	inc    esp
  41355c:	rcl    DWORD PTR [esi],1
  41355e:	xchg   esp,eax
  41355f:	mov    ebp,0x25dd8e73
  413564:	or     al,0xa4
  413566:	mov    ds:0x340e127f,al
  41356b:	int3   
  41356c:	sub    eax,edx
  41356e:	push   esi
  41356f:	push   esp
  413570:	mov    edi,0x30956cd4
  413575:	cmp    BYTE PTR [edi+0x734e6ef9],ch
  41357b:	xor    cl,0xc7
  41357e:	mov    edi,0x2dbb0ca8
  413583:	data16 sar BYTE PTR [ebx+0x13],cl
  413587:	ret    
  413588:	push   eax
  413589:	in     eax,dx
  41358a:	xor    ecx,DWORD PTR [ebx]
  41358c:	and    eax,0x4e280b47
  413591:	shr    BYTE PTR ds:0x30c18d3d,1
  413597:	fsubr  DWORD PTR [ebx]
  413599:	mov    ch,0x52
  41359b:	(bad)  
  41359c:	in     eax,0x2c
  41359e:	push   ss
  41359f:	adc    ebx,edx
  4135a1:	jp     0x4135de
  4135a3:	(bad)  
  4135a4:	sub    esi,DWORD PTR [edi-0x6]
  4135a7:	jg     0x4135e6
  4135a9:	lahf   
  4135aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135ab:	jns    0x413532
  4135ad:	or     BYTE PTR [ebx+eiz*8],ch
  4135b0:	mov    edx,0x5e099817
  4135b5:	xchg   esp,eax
  4135b6:	xchg   ebx,eax
  4135b7:	out    0x3e,eax
  4135b9:	fdiv   DWORD PTR [ebx+0x77b84d3a]
  4135bf:	pop    ds
  4135c0:	int    0xa7
  4135c2:	inc    edx
  4135c3:	cmp    DWORD PTR [esi+0x6e4b4918],esi
  4135c9:	jnp    0x413591
  4135cb:	cmp    ebx,esp
  4135cd:	clc    
  4135ce:	sub    ah,BYTE PTR [eax]
  4135d0:	cmp    al,0x7e
  4135d2:	js     0x413623
  4135d4:	xor    al,0x10
  4135d6:	push   esp
  4135d7:	mov    dh,0xe9
  4135d9:	lods   al,BYTE PTR ds:[esi]
  4135da:	fdivrp st(2),st
  4135dc:	xchg   ebp,eax
  4135dd:	test   DWORD PTR [ecx+0x43],edx
  4135e0:	(bad)  
  4135e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135e3:	sbb    BYTE PTR [ebx+0x55f4480f],ah
  4135e9:	xor    esi,edx
  4135eb:	fsqrt  
  4135ed:	sbb    ch,dl
  4135ef:	in     eax,dx
  4135f0:	and    al,BYTE PTR [edx-0x66da1d48]
  4135f6:	shl    DWORD PTR [edx-0x17fc6922],cl
  4135fc:	xchg   ecx,eax
  4135fd:	je     0x41364c
  4135ff:	inc    edi
  413600:	add    al,0x72
  413602:	add    eax,0xe2717594
  413607:	into   
  413608:	mov    eax,ds:0x94e8ed6a
  41360d:	sbb    cl,BYTE PTR [ecx+0xfe7d04e]
  413613:	fnsave [ebp-0x46]
  413616:	aad    0x57
  413618:	dec    edi
  413619:	xchg   esi,eax
  41361a:	inc    ecx
  41361b:	sbb    edi,esi
  41361d:	cdq    
  41361e:	ja     0x4135df
  413620:	sub    BYTE PTR [ebp+0x7c56630a],0x93
  413627:	in     al,dx
  413628:	cld    
  413629:	stos   WORD PTR es:[edi],ax
  41362b:	jno    0x413640
  41362d:	nop
  41362e:	jg     0x4135cc
  413630:	iret   
  413631:	add    ecx,DWORD PTR [edx+eiz*8-0x2d302276]
  413638:	jg     0x413632
  41363a:	outs   dx,DWORD PTR ds:[esi]
  41363b:	pop    edi
  41363c:	pop    es
  41363d:	dec    edx
  41363e:	mov    ebp,0x4d7f9715
  413643:	push   ebx
  413644:	fild   QWORD PTR [ecx+0x1fa4f4d5]
  41364a:	push   edx
  41364b:	sub    al,0xc5
  41364d:	fnsave [ebx+0x34406884]
  413653:	loope  0x4136c6
  413655:	lea    edx,[ebx]
  413657:	sbb    esi,esi
  413659:	lock pushf 
  41365b:	jge    0x4136b9
  41365d:	or     bh,dl
  41365f:	and    al,0x56
  413661:	xchg   edx,eax
  413662:	sub    dh,dh
  413664:	sub    eax,0xa734f2dd
  413669:	xchg   esp,eax
  41366a:	sti    
  41366b:	pcmpgtw mm7,mm2
  41366e:	sub    DWORD PTR [edx+0x59],ecx
  413671:	xchg   esi,eax
  413672:	int3   
  413673:	cmp    al,0x7f
  413675:	adc    BYTE PTR [ecx-0x31797008],ah
  41367b:	pop    ebx
  41367c:	enter  0xad1b,0xa7
  413680:	cmp    dl,BYTE PTR ds:0x2b3581e3
  413686:	pusha  
  413687:	repz call 0xc961fc7e
  41368d:	call   0xa076:0xedbc6690
  413694:	ja     0x413665
  413696:	push   0x38
  413698:	div    BYTE PTR [edx-0x526390c9]
  41369e:	pop    ebx
  41369f:	mov    esi,0xd6499719
  4136a4:	mov    ds:0x62fde008,eax
  4136a9:	pop    esi
  4136aa:	test   al,0x28
  4136ac:	mov    edi,0xa2c9bf03
  4136b1:	(bad)  
  4136b2:	fcomi  st,st(5)
  4136b4:	cmp    esp,DWORD PTR [esi-0x385fa1fa]
  4136ba:	or     BYTE PTR [ebx],ch
  4136bc:	std    
  4136bd:	or     BYTE PTR [ebp+0x63f7149],ah
  4136c3:	pop    ss
  4136c4:	xchg   edx,eax
  4136c5:	lods   al,BYTE PTR ds:[esi]
  4136c6:	enter  0xcafb,0xd1
  4136ca:	stos   DWORD PTR es:[edi],eax
  4136cb:	in     al,0x23
  4136cd:	pop    ss
  4136ce:	xchg   BYTE PTR [esi+0x8],bl
  4136d1:	fcomp  DWORD PTR [edi+0x6d5eed16]
  4136d7:	jns    0x41369a
  4136d9:	or     eax,0x864be3e7
  4136de:	sahf   
  4136df:	pusha  
  4136e0:	sub    BYTE PTR [ecx+0x79362e4b],0x31
  4136e7:	dec    edi
  4136e8:	mov    WORD PTR [edx],gs
  4136ea:	pop    edi
  4136eb:	mov    esi,0xf42a9e97
  4136f0:	bound  ebp,QWORD PTR [ebx]
  4136f2:	js     0x4136f5
  4136f4:	push   0x29
  4136f6:	pop    edi
  4136f7:	mov    dh,0x7c
  4136f9:	inc    esi
  4136fa:	ffree  st(0)
  4136fc:	mov    BYTE PTR [ebx+0x72],bl
  4136ff:	stos   BYTE PTR es:[edi],al
  413700:	rcr    BYTE PTR [eax+0x6eca48f3],0xe6
  413707:	push   es
  413708:	cmp    al,0x95
  41370a:	daa    
  41370b:	rcr    DWORD PTR [edx+eiz*4],cl
  41370e:	fcom   QWORD PTR [ebx]
  413710:	sbb    eax,0x4aba8cc3
  413715:	(bad)  
  413716:	retf   0xb3a4
  413719:	cmp    BYTE PTR [eax],bl
  41371b:	les    edi,FWORD PTR [ebp-0x1b8edc48]
  413721:	cmp    edi,edi
  413723:	ins    BYTE PTR es:[edi],dx
  413724:	sbb    esi,DWORD PTR [ebp-0x320f35e7]
  41372a:	mov    al,ds:0xd40c11a5
  41372f:	ds mov ch,0x5b
  413732:	sub    DWORD PTR [esi-0x3656bc80],0xffffffcb
  413739:	cmp    ecx,DWORD PTR [esp+eiz*4]
  41373c:	push   edx
  41373d:	rcl    DWORD PTR [ebp+0x2],1
  413740:	xor    eax,0x2356e944
  413745:	mov    cs,WORD PTR [esi-0x5c]
  413748:	mov    esp,0x4ef880c4
  41374d:	call   0xc60a:0x4ca2e73
  413754:	xchg   DWORD PTR [esi+0x74281c63],eax
  41375a:	push   esp
  41375b:	inc    eax
  41375c:	and    eax,0x80b6eb5d
  413761:	mov    eax,ds:0xc2246715
  413766:	sub    DWORD PTR [ebx],edx
  413768:	push   esp
  413769:	pop    ebp
  41376a:	xor    edx,DWORD PTR [edi]
  41376c:	loopne 0x413749
  41376e:	cdq    
  41376f:	fidivr DWORD PTR [esi]
  413771:	inc    edi
  413772:	mov    BYTE PTR [edi],cl
  413774:	push   ecx
  413775:	cmc    
  413776:	(bad)  
  413779:	sub    ch,BYTE PTR [esi-0x4724039f]
  41377f:	push   ds
  413780:	mov    esi,0xf3f315fb
  413785:	mov    bl,0x4c
  413787:	push   cs
  413788:	(bad)  
  41378a:	xor    BYTE PTR [ecx-0x65a7414],al
  413790:	jmp    0xa852:0xb5acd9ab
  413797:	sub    eax,0xa9643b41
  41379c:	and    dh,ah
  41379e:	aad    0x9
  4137a0:	cdq    
  4137a1:	pushf  
  4137a2:	cmp    DWORD PTR [edi],ebp
  4137a4:	sar    DWORD PTR [edi+0xa],1
  4137a7:	loope  0x4137d4
  4137a9:	inc    edi
  4137aa:	cdq    
  4137ab:	fld    QWORD PTR [ebp+0x76]
  4137ae:	imul   edi,edx,0x4cba7187
  4137b4:	enter  0x1f18,0xc4
  4137b8:	sub    al,0xd9
  4137ba:	jbe    0x413790
  4137bc:	bound  esi,QWORD PTR [eax]
  4137be:	fnsave [esp+ebp*8+0x13]
  4137c2:	jae    0x413836
  4137c4:	jge    0x41375c
  4137c6:	push   ecx
  4137c7:	and    al,0x66
  4137c9:	inc    ecx
  4137ca:	mov    al,BYTE PTR [edx-0x80]
  4137cd:	mov    eax,ds:0x409f537e
  4137d2:	cld    
  4137d3:	leave  
  4137d4:	cli    
  4137d5:	sbb    eax,0x5d15a334
  4137da:	(bad)  [ebp-0x1c]
  4137dd:	dec    esi
  4137de:	xor    eax,0x48a539b1
  4137e3:	setno  cl
  4137e6:	and    esi,DWORD PTR [edi+0x48]
  4137e9:	dec    ebp
  4137ea:	or     ebx,DWORD PTR [ecx]
  4137ec:	cmp    al,0xc6
  4137ee:	add    bh,BYTE PTR ds:0x95c2bd8d
  4137f4:	mov    ?,WORD PTR [ebp+0x2c]
  4137f7:	or     BYTE PTR [eax+0x40],0xf3
  4137fb:	xchg   edi,eax
  4137fc:	or     al,0xb
  4137fe:	(bad)  
  4137ff:	out    0x7e,eax
  413801:	dec    eax
  413802:	call   0x15ff:0xb3b5f1a0
  413809:	out    dx,al
  41380a:	mov    edi,0xe3c12baf
  41380f:	pop    ss
  413810:	ds pop edi
  413812:	mov    esp,0xf2c91d54
  413817:	and    eax,0xca6ca602
  41381c:	sub    DWORD PTR [edi],edi
  41381e:	add    BYTE PTR [edx+0x27084d4],cl
  413824:	rcl    BYTE PTR ds:0xa57fd9f1,1
  41382a:	push   ebp
  41382b:	inc    edx
  41382c:	push   es
  41382d:	mov    al,0x13
  41382f:	xchg   ecx,eax
  413830:	outs   dx,DWORD PTR ds:[esi]
  413831:	mov    eax,ds:0x86f8f6ce
  413836:	lds    ebx,FWORD PTR [edi+0x98cc33d]
  41383c:	jo     0x41386e
  41383e:	inc    esi
  41383f:	mov    bl,0x6
  413841:	mov    ds:0x31220f23,al
  413846:	push   edx
  413847:	mov    edx,0x85c11f82
  41384c:	pop    esp
  41384d:	(bad)  
  41384e:	xor    al,0x76
  413850:	dec    esp
  413851:	and    dl,BYTE PTR [esi]
  413853:	lahf   
  413854:	fstp   TBYTE PTR [edi-0x67]
  413857:	gs push ebx
  413859:	bound  edx,QWORD PTR [ebx-0x4c]
  41385c:	add    edi,0xafb63d84
  413862:	add    BYTE PTR [si],dh
  413865:	pop    ss
  413866:	jnp    0x4138c1
  413868:	push   edx
  413869:	popa   
  41386a:	test   DWORD PTR [edi],eax
  41386c:	(bad)  
  41386d:	js     0x4138ac
  41386f:	push   eax
  413870:	push   esp
  413871:	adc    eax,esi
  413873:	sub    ch,BYTE PTR [eax]
  413875:	clc    
  413876:	(bad)  
  413877:	daa    
  413878:	push   bp
  41387a:	arpl   WORD PTR [edi+0x5d],bp
  41387d:	xchg   esp,esi
  41387f:	call   0xdf5:0x26c5a1d5
  413886:	mul    al
  413888:	xchg   ecx,eax
  413889:	stos   DWORD PTR es:[edi],eax
  41388a:	ret    0x8c8c
  41388d:	mov    bh,0x58
  41388f:	jo     0x4138de
  413891:	jp     0x41384d
  413893:	jmp    0x413821
  413895:	dec    ebp
  413896:	dec    ebx
  413897:	je     0x41385e
  413899:	add    cl,BYTE PTR [edi-0x294e380b]
  41389f:	add    BYTE PTR [esi],ch
  4138a1:	mov    bl,0x14
  4138a3:	(bad)  
  4138a4:	pop    ecx
  4138a5:	icebp  
  4138a6:	test   eax,0x9c6f716a
  4138ab:	xor    esp,ecx
  4138ad:	mov    bh,BYTE PTR [ebx+esi*1+0x5feb4e73]
  4138b4:	sbb    eax,0x6f5cb4b2
  4138b9:	pop    esi
  4138ba:	mov    dh,0x50
  4138bc:	add    DWORD PTR [edi-0x2f],esi
  4138bf:	jecxz  0x4138ce
  4138c1:	lds    ebp,FWORD PTR [ebp-0x4a71243e]
  4138c7:	sar    DWORD PTR [edx],1
  4138c9:	div    dl
  4138cb:	lahf   
  4138cc:	icebp  
  4138cd:	cmp    esi,ebp
  4138cf:	add    al,0x99
  4138d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138d2:	mov    dl,dh
  4138d4:	inc    esp
  4138d5:	jge    0x41391b
  4138d7:	popf   
  4138d8:	lock adc BYTE PTR [esi-0x21cea141],0x64
  4138e0:	mov    bl,0x45
  4138e2:	leave  
  4138e3:	pop    esp
  4138e4:	cwde   
  4138e5:	jge    0x4138b8
  4138e7:	mov    ecx,0x9fdd8b40
  4138ec:	sub    eax,0x1a1ece2a
  4138f1:	je     0x4138ba
  4138f3:	test   eax,0xaf48fb20
  4138f8:	push   esi
  4138f9:	xlat   BYTE PTR ds:[ebx]
  4138fa:	sahf   
  4138fb:	test   eax,0x88db06cf
  413900:	mov    eax,ds:0xebecf0cc
  413905:	imul   edx,DWORD PTR [esi+ebx*4+0x407227df],0x31
  41390d:	out    0x47,al
  41390f:	stos   BYTE PTR es:[edi],al
  413910:	ret    
  413911:	cld    
  413912:	std    
  413913:	repnz push esp
  413915:	pop    ebp
  413916:	in     al,0xeb
  413918:	xchg   BYTE PTR [esi+0x62],al
  41391b:	in     al,0xeb
  41391d:	jae    0x41395e
  41391f:	pop    edx
  413920:	call   0x2482:0xf918390b
  413927:	mov    al,0x73
  413929:	(bad)  
  41392a:	fwait
  41392b:	(bad)  
  41392c:	dec    edx
  41392d:	add    al,0x3b
  41392f:	imul   ebp,DWORD PTR ds:0xf107b92b,0xffffffc4
  413936:	sub    ah,BYTE PTR [ebx+0xd]
  413939:	ins    DWORD PTR es:[edi],dx
  41393a:	(bad)  [eax+0x608959b4]
  413940:	shr    DWORD PTR [ecx+ebx*4-0x1068bc22],1
  413947:	mov    ebx,0xd7b3e677
  41394c:	push   esi
  41394d:	or     DWORD PTR [ebx-0x52],0xe97e2cfd
  413954:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413955:	mov    fs,WORD PTR [edx]
  413957:	pop    esp
  413958:	out    dx,eax
  413959:	int    0xda
  41395b:	out    0x19,al
  41395d:	sub    eax,0x28bfa868
  413962:	mov    ebx,0xbf39e712
  413967:	jge    0x413923
  413969:	lods   al,BYTE PTR ds:[esi]
  41396a:	ret    0x55a4
  41396d:	fst    QWORD PTR [esi+0x74e811fc]
  413973:	js     0x4139a1
  413975:	and    ebp,DWORD PTR [ecx-0x2143e89b]
  41397b:	(bad)  
  41397c:	out    0x2,eax
  41397e:	lds    ebp,FWORD PTR [edx+0x2344b598]
  413984:	imul   eax,DWORD PTR gs:[eax],0xfffffff2
  413988:	outs   dx,BYTE PTR ds:[esi]
  413989:	popf   
  41398a:	es mov ch,0xb0
  41398d:	and    DWORD PTR [esi-0x79aaadf1],edx
  413993:	and    eax,0xb4e8557b
  413998:	and    bh,BYTE PTR [eax+0x2c]
  41399b:	jae    0x4139dc
  41399d:	outs   dx,BYTE PTR ds:[esi]
  41399e:	push   esi
  41399f:	xchg   BYTE PTR [ebx-0x6aba4030],dl
  4139a5:	adc    ch,ch
  4139a7:	or     ebx,DWORD PTR ds:[eax-0x54eff250]
  4139ae:	push   cs
  4139af:	mov    DWORD PTR [ecx-0x5b8511f7],esp
  4139b5:	sub    DWORD PTR [ecx+0xd27a233],0x8c23bb55
  4139bf:	mov    ds:0xb8fa7261,eax
  4139c4:	push   ebx
  4139c5:	cld    
  4139c6:	(bad)  
  4139c7:	fst    QWORD PTR [ebx+0x6924e559]
  4139cd:	bswap  esp
  4139cf:	adc    BYTE PTR [edx+0x3],0x2b
  4139d3:	fdiv   DWORD PTR [ebx+0x1d03b045]
  4139d9:	inc    eax
  4139da:	dec    esp
  4139db:	cmp    eax,DWORD PTR es:[ebp+esi*4-0x57]
  4139e0:	cmp    BYTE PTR [ecx],al
  4139e2:	out    dx,al
  4139e3:	and    eax,0x27ed9967
  4139e8:	std    
  4139e9:	or     DWORD PTR ss:[ecx+0x1a],esi
  4139ed:	cmc    
  4139ee:	add    edx,eax
  4139f0:	mov    ds:0x17d60b22,al
  4139f5:	cmp    al,0xd9
  4139f7:	cli    
  4139f8:	cmp    edx,esi
  4139fa:	out    0x30,al
  4139fc:	jge    0x413a48
  4139fe:	jnp    0x413a00
  413a00:	mov    dl,0x38
  413a02:	xor    edx,DWORD PTR [eax+ebx*8-0x20]
  413a06:	push   0xbab24f0
  413a0b:	(bad)  
  413a0c:	pop    edx
  413a0d:	inc    ebp
  413a0e:	lods   eax,DWORD PTR ds:[esi]
  413a0f:	cmp    BYTE PTR [esi],0xbe
  413a12:	and    DWORD PTR [ecx],edi
  413a14:	add    BYTE PTR [ebx-0x1],bh
  413a17:	lea    esi,[edi]
  413a19:	or     al,0x72
  413a1b:	mov    edx,0xc887220c
  413a20:	in     al,dx
  413a21:	sbb    BYTE PTR [eax],ah
  413a23:	sbb    ecx,ebx
  413a25:	adc    dh,BYTE PTR [edx]
  413a27:	pop    esp
  413a28:	sub    eax,0x88560408
  413a2d:	or     edx,DWORD PTR [ebx]
  413a2f:	add    al,0x6e
  413a31:	jo     0x4139f0
  413a33:	in     al,dx
  413a34:	aam    0x59
  413a36:	or     eax,0x16a04b3d
  413a3b:	add    al,BYTE PTR [esi-0x4b]
  413a3e:	scas   al,BYTE PTR es:[edi]
  413a3f:	sbb    BYTE PTR [edi-0x54],al
  413a42:	add    DWORD PTR [ecx+0x0],esi
  413a45:	mov    eax,0x57afb5df
  413a4a:	in     al,dx
  413a4b:	jae    0x413a3a
  413a4d:	(bad)
  413a50:	ja     0x4139f7
  413a52:	mul    BYTE PTR [ebx+edi*8]
  413a55:	sub    al,0x20
  413a57:	retf   
  413a58:	adc    al,0xf7
  413a5a:	inc    ebx
  413a5b:	mov    esp,0x9b4c34e9
  413a60:	pop    ss
  413a61:	loope  0x413ad7
  413a63:	bound  esp,QWORD PTR [ebx+eiz*2-0x2a]
  413a67:	sbb    al,BYTE PTR ds:0xb83f7377
  413a6d:	jp     0x413a5c
  413a6f:	inc    eax
  413a70:	xchg   edx,eax
  413a71:	adc    BYTE PTR [ebx],al
  413a73:	jbe    0x413a73
  413a75:	lds    edx,FWORD PTR [edi-0x52]
  413a78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a79:	cmp    esp,0x8eaefc83
  413a7f:	or     dh,bh
  413a81:	add    al,0x80
  413a83:	jb     0x413a6e
  413a85:	mov    eax,0x6b3bda0
  413a8a:	popa   
  413a8b:	test   BYTE PTR [esi+ecx*2+0x27],bl
  413a8f:	xchg   ebp,eax
  413a90:	or     BYTE PTR [edx-0x8],bh
  413a93:	inc    ecx
  413a94:	dec    eax
  413a95:	ins    DWORD PTR es:[edi],dx
  413a96:	add    BYTE PTR [edi],al
  413a98:	popf   
  413a99:	jb     0x413afc
  413a9b:	adc    BYTE PTR [edi+0x28ab68c5],ah
  413aa1:	repnz enter 0xe3b6,0x65
  413aa6:	or     DWORD PTR [edi+0x57a4bb86],0x3b
  413aad:	popf   
  413aae:	fnstenv [esi]
  413ab0:	jp     0x413a94
  413ab2:	sbb    edi,DWORD PTR [esi]
  413ab4:	adc    BYTE PTR [edx-0x4e],bh
  413ab7:	inc    ebx
  413ab8:	dec    ebp
  413ab9:	test   DWORD PTR es:[ebx+0x31],edx
  413abd:	ds out 0x67,al
  413ac0:	or     DWORD PTR ss:0x7abcd3a8,ecx
  413ac7:	mov    cl,BYTE PTR cs:[edi-0x5ae670c5]
  413ace:	xor    al,0x84
  413ad0:	test   eax,ecx
  413ad2:	mov    al,ds:0x3911d7a0
  413ad7:	repnz push ds
  413ad9:	inc    esp
  413ada:	jecxz  0x413b25
  413adc:	gs jb  0x413abe
  413adf:	std    
  413ae0:	jle    0x413b00
  413ae2:	loope  0x413ac1
  413ae4:	setle  BYTE PTR [ebp-0x2d5bd41]
  413aeb:	cs pop ecx
  413aed:	fdivr  st(0),st
  413aef:	ret    0x4a1c
  413af2:	xchg   ebx,eax
  413af3:	lods   al,BYTE PTR ds:[esi]
  413af5:	inc    ebp
  413af6:	das    
  413af7:	push   esp
  413af8:	xor    edi,DWORD PTR [edi+0x7d]
  413afb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413afc:	add    BYTE PTR [esi+esi*1],ch
  413aff:	sbb    al,0x9a
  413b01:	adc    DWORD PTR [eax-0x6d573331],esi
  413b07:	lock inc esi
  413b09:	inc    ecx
  413b0a:	pop    ss
  413b0b:	sbb    ah,BYTE PTR [ebp+0x2b9c911d]
  413b11:	push   DWORD PTR [esi-0x46]
  413b14:	mov    es,WORD PTR [ecx-0x6]
  413b17:	nop
  413b18:	mov    cl,0x55
  413b1a:	mov    dl,BYTE PTR [esi-0x4fa25d4d]
  413b20:	jp     0x413b08
  413b22:	mov    ah,BYTE PTR [ecx+0x5994851d]
  413b28:	gs xor al,0xe8
  413b2b:	and    DWORD PTR [esi+0x41],ebp
  413b2e:	shl    ecx,1
  413b30:	cdq    
  413b31:	and    ebx,ebp
  413b33:	sub    DWORD PTR [ecx],edi
  413b35:	inc    eax
  413b36:	add    DWORD PTR [ebp*1+0x6977c481],ecx
  413b3d:	mov    ah,0xb8
  413b3f:	out    dx,al
  413b40:	test   al,0x40
  413b42:	add    BYTE PTR [ebx-0xd],0xc3
  413b46:	aas    
  413b47:	imul   ebx,edi,0x45
  413b4a:	test   al,0xe8
  413b4c:	lods   eax,DWORD PTR ds:[esi]
  413b4d:	dec    eax
  413b4e:	out    0xab,eax
  413b50:	jns    0x413ad8
  413b52:	adc    bl,BYTE PTR [ebx-0x42]
  413b55:	in     al,0x6c
  413b57:	imul   BYTE PTR [esi+0x0]
  413b5a:	and    al,0x54
  413b5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b5d:	mov    bh,0xd9
  413b5f:	xor    al,0x9d
  413b61:	test   eax,esi
  413b63:	add    DWORD PTR [edi+0x50],0xeee7bd2d
  413b6a:	retf   0x3c7a
  413b6d:	(bad)  
  413b6e:	imul   ebx,ebx,0x833332fe
  413b74:	test   BYTE PTR [edi-0x49ac0188],dh
  413b7a:	and    eax,0xa620e9bd
  413b7f:	xor    ah,BYTE PTR [ebx+0x340cfeff]
  413b85:	add    BYTE PTR [esi+0x5e],ch
  413b88:	mov    eax,0x79f1b64b
  413b8d:	or     al,0x79
  413b8f:	cmp    DWORD PTR [bp+si+0xf],ebp
  413b93:	add    ah,dl
  413b95:	and    dl,BYTE PTR [ebx-0x4e]
  413b98:	pop    ss
  413b99:	xor    BYTE PTR [esp+edx*8],0xba
  413b9d:	fisttp DWORD PTR [ecx-0x7e]
  413ba0:	or     eax,ecx
  413ba2:	enter  0x8272,0x3b
  413ba6:	call   0x61834690
  413bab:	inc    edx
  413bac:	hlt    
  413bad:	test   BYTE PTR ds:0xbbdc3d19,cl
  413bb3:	dec    edx
  413bb4:	mov    ch,0x25
  413bb6:	stc    
  413bb7:	jnp    0x413b95
  413bb9:	test   eax,0xd7ce807d
  413bbe:	inc    ecx
  413bbf:	aad    0xd1
  413bc1:	jns    0x413c10
  413bc3:	sti    
  413bc4:	add    al,0x5f
  413bc6:	inc    ebx
  413bc7:	out    dx,eax
  413bc8:	jge    0x413bf4
  413bca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413bcb:	or     esi,edi
  413bcd:	scas   eax,DWORD PTR es:[edi]
  413bce:	cmp    al,0x6b
  413bd0:	mov    eax,0x421edd24
  413bd5:	rol    DWORD PTR [edx],0xf8
  413bd8:	(bad)  
  413bd9:	xchg   edi,eax
  413bda:	mov    eax,ds:0xea52d783
  413bdf:	adc    DWORD PTR [ecx-0x65b111e0],edx
  413be5:	cwde   
  413be6:	enter  0x9c37,0x9d
  413bea:	loop   0x413c42
  413bec:	out    dx,eax
  413bed:	rol    BYTE PTR [ecx+0x299538e1],cl
  413bf3:	dec    ecx
  413bf4:	jecxz  0x413c5b
  413bf6:	ja     0x413c15
  413bf8:	std    
  413bf9:	rcr    BYTE PTR [ebx+0x12],cl
  413bfc:	cmp    esi,DWORD PTR [ecx+ebx*8]
  413bff:	ja     0x413bfa
  413c01:	jmp    0xab6b:0xfc753005
  413c08:	sti    
  413c09:	aaa    
  413c0a:	stos   BYTE PTR es:[edi],al
  413c0b:	jge    0x413c42
  413c0d:	pop    edx
  413c0e:	in     eax,dx
  413c0f:	push   ecx
  413c10:	mov    dl,0xf8
  413c12:	add    eax,0xe81f1eaa
  413c17:	xchg   BYTE PTR [ebx],ch
  413c19:	fsubr  st(4),st
  413c1b:	push   0xffffffd6
  413c1d:	jno    0x413ba6
  413c1f:	stos   DWORD PTR es:[edi],eax
  413c20:	hlt    
  413c21:	sub    eax,0x31ea3904
  413c26:	jmp    DWORD PTR [ebx]
  413c28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c29:	push   cs
  413c2a:	pushf  
  413c2b:	hlt    
  413c2c:	sub    edx,DWORD PTR [esi+0x65]
  413c2f:	(bad)  
  413c30:	push   edi
  413c31:	gs cmp eax,0xf772333e
  413c37:	mov    ecx,0x86d7af67
  413c3c:	popf   
  413c3d:	add    dl,ah
  413c3f:	pop    ecx
  413c40:	or     ecx,0x61
  413c43:	cdq    
  413c44:	pop    ebx
  413c45:	xchg   edx,eax
  413c46:	out    0x22,eax
  413c48:	adc    edi,eax
  413c4a:	xor    ch,BYTE PTR [edx+0x64d56a0b]
  413c50:	or     ebp,esi
  413c52:	or     eax,edx
  413c54:	mov    esi,0xa7dd7ef1
  413c59:	xchg   ebp,eax
  413c5a:	ret    0xefaa
  413c5d:	mov    bl,0xc6
  413c5f:	push   di
  413c61:	and    bl,BYTE PTR [eax-0x1914408d]
  413c67:	leave  
  413c68:	sar    DWORD PTR [ecx+ebp*1-0x22],cl
  413c6c:	sbb    BYTE PTR [edi-0x3202b6c],dh
  413c72:	sysret 
  413c74:	pop    edx
  413c75:	cs cmc 
  413c77:	imul   esi,DWORD PTR ds:0xc2ae57c2,0xfffffff4
  413c7e:	jae    0x413c41
  413c80:	cs out dx,al
  413c82:	hlt    
  413c83:	lahf   
  413c84:	lods   eax,DWORD PTR ds:[esi]
  413c85:	and    al,0x5c
  413c87:	dec    edx
  413c88:	ja     0x413cdf
  413c8a:	mov    dh,0xad
  413c8c:	les    ebp,FWORD PTR ds:0x2e68caf6
  413c92:	rcl    DWORD PTR [eax-0x25],1
  413c95:	xor    dl,BYTE PTR [eax-0xce7aefe]
  413c9b:	jg     0x413c75
  413c9d:	jno    0x413cb3
  413c9f:	lock ins BYTE PTR es:[edi],dx
  413ca1:	mov    eax,ds:0xdaecacd9
  413ca6:	dec    esi
  413ca7:	mov    cl,0x22
  413ca9:	mov    cl,0xb9
  413cab:	pop    edx
  413cac:	sub    BYTE PTR [edx],0xad
  413caf:	cmp    DWORD PTR [ebx+edx*2+0x52852bd3],edi
  413cb6:	lods   al,BYTE PTR ds:[esi]
  413cb7:	int3   
  413cb8:	aaa    
  413cb9:	aad    0x1c
  413cbb:	pop    esi
  413cbc:	lock arpl WORD PTR [edi+0x7a],bp
  413cc0:	stos   DWORD PTR es:[edi],eax
  413cc1:	jns    0x413c71
  413cc3:	push   es
  413cc4:	fld    DWORD PTR [edi]
  413cc6:	push   0x22
  413cc8:	addr16 or eax,0x21579a0e
  413cce:	iret   
  413ccf:	(bad)  
  413cd0:	out    0x82,eax
  413cd2:	push   edi
  413cd3:	sub    eax,DWORD PTR [edx-0x38]
  413cd6:	mov    edi,0x2e7ce3f2
  413cdb:	adc    al,BYTE PTR [esi+0x10]
  413cde:	repz mov edi,0x22d7c862
  413ce4:	push   ecx
  413ce5:	cmp    bh,BYTE PTR [ecx]
  413ce7:	ja     0x413d54
  413ce9:	pop    ebp
  413cea:	daa    
  413ceb:	mov    ah,0xbf
  413ced:	mov    ecx,0xb4544ca8
  413cf2:	dec    eax
  413cf3:	or     ebx,esp
  413cf5:	mov    edi,esi
  413cf7:	cmp    edx,DWORD PTR [edi+0x19030336]
  413cfd:	imul   BYTE PTR [edx-0x53]
  413d00:	dec    esi
  413d01:	adc    al,0x0
  413d03:	sar    DWORD PTR [eax],cl
  413d05:	leave  
  413d06:	cmp    DWORD PTR [ebp+0x505eaa33],esi
  413d0c:	sub    al,0x54
  413d0e:	outs   dx,BYTE PTR ds:[esi]
  413d0f:	(bad)  
  413d10:	jno    0x413cbb
  413d12:	xor    al,0xe6
  413d14:	or     ebx,esp
  413d16:	pusha  
  413d17:	xor    BYTE PTR fs:[ebx+0x63],dl
  413d1b:	jge    0x413cc6
  413d1d:	out    0x7,al
  413d1f:	add    al,0xea
  413d21:	das    
  413d22:	popf   
  413d23:	rcl    DWORD PTR [edi+0x3aa6e253],cl
  413d29:	sbb    eax,0x2b0d7e6b
  413d2e:	xchg   ecx,eax
  413d2f:	je     0x413d47
  413d31:	ftst   
  413d33:	and    DWORD PTR [ecx-0xc],eax
  413d36:	push   0x4e
  413d38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d39:	add    ebx,DWORD PTR ds:0x14a4a8e5
  413d3f:	mov    BYTE PTR [eax+0x4],dh
  413d42:	addr16 jae 0x413d8a
  413d45:	adc    BYTE PTR [ecx+0x2e],al
  413d48:	inc    eax
  413d49:	fsub   QWORD PTR [ebx+0x7b]
  413d4c:	iret   
  413d4d:	adc    eax,0x6c298e76
  413d52:	hlt    
  413d53:	mov    ch,bh
  413d55:	inc    edx
  413d56:	cld    
  413d57:	add    al,0xe3
  413d59:	(bad)  
  413d5a:	in     al,0x68
  413d5c:	inc    BYTE PTR [ebp+0x781b625]
  413d62:	mov    ebx,DWORD PTR [ebx+0x5b]
  413d65:	add    cl,BYTE PTR [edx]
  413d67:	mov    dh,0x5
  413d69:	ss pusha 
  413d6b:	xchg   ebp,eax
  413d6c:	adc    BYTE PTR [esi+0x38b48fc7],bl
  413d72:	(bad)  
  413d73:	xchg   esp,eax
  413d74:	inc    eax
  413d75:	fidiv  DWORD PTR [ebx]
  413d77:	sahf   
  413d78:	enter  0x510,0x7f
  413d7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d7d:	inc    ebp
  413d7e:	nop
  413d7f:	and    al,0x36
  413d81:	xchg   ecx,ebx
  413d83:	popf   
  413d84:	fs dec ebp
  413d86:	mov    esi,0x99458602
  413d8b:	jl     0x413dbd
  413d8d:	fwait
  413d8e:	pop    edi
  413d8f:	inc    edx
  413d90:	ins    BYTE PTR es:[edi],dx
  413d91:	test   BYTE PTR [ecx],cl
  413d93:	fcom   QWORD PTR [eax]
  413d95:	fsub   st,st(4)
  413d97:	clc    
  413d98:	jmp    0x54e96574
  413d9d:	jp     0x413dad
  413d9f:	stos   BYTE PTR es:[edi],al
  413da0:	add    BYTE PTR [esi-0x53ea39dc],dl
  413da6:	and    ebx,DWORD PTR [ebx+0x42f8b290]
  413dac:	lea    ecx,[ebx+0x57]
  413daf:	xor    ebx,DWORD PTR [eax]
  413db1:	ins    BYTE PTR es:[edi],dx
  413db2:	sahf   
  413db3:	mov    eax,0x155ada8c
  413db8:	aaa    
  413db9:	inc    ebx
  413dba:	stos   DWORD PTR es:[edi],eax
  413dbb:	sbb    eax,0x4ef01598
  413dc0:	add    BYTE PTR [eax+0x1b],bl
  413dc3:	xchg   ebp,eax
  413dc4:	jle    0x413dc8
  413dc6:	or     al,0xed
  413dc8:	in     al,dx
  413dc9:	jg     0x413dc2
  413dcb:	rcr    DWORD PTR [edx],0xa4
  413dce:	lods   eax,DWORD PTR ds:[esi]
  413dcf:	xor    al,0x3d
  413dd1:	inc    esp
  413dd2:	pop    eax
  413dd3:	push   edi
  413dd4:	push   ss
  413dd5:	sub    dh,BYTE PTR [edx-0x2e16db80]
  413ddb:	cmp    al,ah
  413ddd:	bound  edx,QWORD PTR [edi+0x21f10219]
  413de3:	and    BYTE PTR [esi-0x145a2e2d],cl
  413de9:	jnp    0x413dc6
  413deb:	sbb    dl,cl
  413ded:	fisubr WORD PTR [ecx]
  413def:	sub    DWORD PTR [ebx],ecx
  413df1:	or     BYTE PTR [ecx+0x3],bl
  413df4:	(bad)  
  413df5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413df6:	test   BYTE PTR [eax],dh
  413df8:	xchg   ecx,eax
  413df9:	ficomp DWORD PTR [ebx-0x21e5c13e]
  413dff:	push   ds
  413e00:	adc    ch,BYTE PTR [ecx]
  413e02:	add    esp,DWORD PTR [eax]
  413e04:	hlt    
  413e05:	mov    ecx,0x75d5fa92
  413e0a:	xlat   BYTE PTR ds:[ebx]
  413e0b:	cmp    eax,0x6cfd9a86
  413e10:	mov    edi,0xbbd139ce
  413e15:	inc    ebx
  413e16:	xchg   ebp,eax
  413e17:	sub    esp,eax
  413e19:	outs   dx,DWORD PTR ds:[esi]
  413e1a:	imul   ebp,DWORD PTR [esi-0x43bd749b],0xffffff80
  413e21:	sub    BYTE PTR ss:[ebx],al
  413e24:	adc    ebp,ebx
  413e26:	mov    edi,?
  413e28:	sbb    DWORD PTR [ebx+ebx*8+0x6],edx
  413e2c:	cmp    eax,DWORD PTR [esi+0x83db78b]
  413e32:	mov    cl,0x4b
  413e34:	iret   
  413e35:	fild   DWORD PTR [edx+edi*2]
  413e38:	jge    0x413e0f
  413e3a:	aam    0xaf
  413e3c:	dec    edi
  413e3d:	pop    esi
  413e3e:	add    DWORD PTR [esi-0x5f4bb1a7],0xffffff9c
  413e45:	mov    ebp,0x86026215
  413e4a:	(bad)  
  413e4c:	stc    
  413e4d:	mov    ebp,0x1329a7cc
  413e52:	int3   
  413e53:	adc    ebp,ebx
  413e55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e56:	push   cs
  413e57:	cmp    ebx,0xffffffa2
  413e5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e5b:	inc    eax
  413e5c:	inc    eax
  413e5d:	jne    0x413e9e
  413e5f:	call   0x24245a0f
  413e64:	adc    eax,0xd1f07f7f
  413e69:	xchg   esp,eax
  413e6a:	sub    al,0x1e
  413e6c:	push   ss
  413e6d:	in     eax,dx
  413e6e:	inc    ebp
  413e6f:	xor    edi,ecx
  413e71:	jl     0x413e0a
  413e73:	jecxz  0x413ee0
  413e75:	push   0xe8807934
  413e7a:	enter  0xd1ca,0xde
  413e7e:	adc    DWORD PTR [eax+esi*8+0x1b7a9b5e],0xa9fb798d
  413e89:	fmul   DWORD PTR [esi-0x59]
  413e8c:	and    DWORD PTR [ecx],0xffffff9c
  413e8f:	out    dx,al
  413e90:	mov    bl,0x1b
  413e92:	fwait
  413e93:	jle    0x413e63
  413e95:	mov    ah,0xd5
  413e97:	lods   al,BYTE PTR ds:[esi]
  413e98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e99:	scas   eax,DWORD PTR es:[edi]
  413e9a:	adc    BYTE PTR [esi+0x59],ah
  413e9d:	mov    ch,0x21
  413e9f:	pusha  
  413ea0:	lods   eax,DWORD PTR ds:[esi]
  413ea1:	in     eax,dx
  413ea2:	jge    0x413eda
  413ea4:	mov    cl,bh
  413ea6:	push   ss
  413ea7:	jle    0x413ec8
  413ea9:	mov    ebp,0xdd891e59
  413eae:	sbb    dl,0xc4
  413eb1:	xor    al,0xcf
  413eb3:	leave  
  413eb4:	xor    eax,0x10255e06
  413eb9:	cmc    
  413eba:	jg     0x413e95
  413ebc:	jp     0x413ee7
  413ebe:	sbb    eax,0xbd1c58f9
  413ec3:	xchg   DWORD PTR [edx],ebp
  413ec5:	xor    BYTE PTR [ecx+0x1c],0xb2
  413ec9:	shl    DWORD PTR [ecx],1
  413ecb:	adc    edx,edx
  413ecd:	inc    edi
  413ece:	jg     0x413ef2
  413ed0:	mov    dh,0x42
  413ed2:	jmp    0x413e5a
  413ed4:	inc    esi
  413ed5:	dec    edx
  413ed6:	add    ebx,ebx
  413ed8:	scas   al,BYTE PTR es:[edi]
  413ed9:	repz xchg ebp,edx
  413edc:	push   ecx
  413edd:	stc    
  413ede:	add    eax,0x8b971830
  413ee3:	ret    
  413ee4:	inc    esp
  413ee5:	mov    ch,0x52
  413ee7:	mov    ecx,0xa3ca0c18
  413eec:	sub    eax,0x52fc956f
  413ef1:	pop    esi
  413ef2:	fist   DWORD PTR [edx-0x4a21c668]
  413ef8:	arpl   WORD PTR cs:[edx],bx
  413efb:	repz cmp al,0x1a
  413efe:	pusha  
  413eff:	jnp    0x413ee4
  413f01:	in     al,0x63
  413f03:	scas   al,BYTE PTR es:[edi]
  413f04:	retf   0xed8c
  413f07:	stc    
  413f08:	imul   esi,DWORD PTR [ebp+0x7a4bd8e4],0xfffffff9
  413f0f:	lea    ecx,[eax+0x474d97a4]
  413f15:	inc    edi
  413f16:	fisub  DWORD PTR [edx+0x48]
  413f19:	repnz sub eax,0x63adf094
  413f1f:	push   ebp
  413f20:	leave  
  413f21:	add    dh,BYTE PTR [eax+0x59]
  413f24:	pop    es
  413f25:	fbld   TBYTE PTR [ecx-0x59]
  413f28:	int    0x29
  413f2a:	fdivr  DWORD PTR [esp+ebx*8]
  413f2d:	scas   eax,DWORD PTR es:[edi]
  413f2e:	xor    eax,0xe56580d
  413f33:	push   esi
  413f34:	or     BYTE PTR [esi+0x6642a282],0xde
  413f3b:	add    esp,edx
  413f3d:	xchg   edx,eax
  413f3e:	rcl    DWORD PTR ds:0x48b0a8f7,0x76
  413f45:	xor    eax,0x769bbe93
  413f4a:	iret   
  413f4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f4c:	clc    
  413f4d:	test   eax,0xed9aa591
  413f52:	mov    ch,dh
  413f54:	dec    eax
  413f55:	scas   al,BYTE PTR es:[edi]
  413f56:	mov    edi,0x723898b3
  413f5b:	push   cs
  413f5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f5d:	(bad)
  413f61:	cmc    
  413f62:	pop    edx
  413f63:	xor    al,0x2a
  413f65:	into   
  413f66:	pop    ebp
  413f67:	jg     0x413fa0
  413f69:	sbb    ecx,DWORD PTR [edx+0x16918933]
  413f6f:	jbe    0x413f39
  413f71:	int3   
  413f72:	jle    0x413f04
  413f74:	sahf   
  413f75:	mov    dh,0x13
  413f77:	sti    
  413f78:	mov    al,0xba
  413f7a:	js     0x413f9e
  413f7c:	mov    bl,0x69
  413f7e:	adc    DWORD PTR [ebx-0x41],ebx
  413f81:	out    0xef,al
  413f83:	mov    BYTE PTR [ecx-0x1],0x56
  413f87:	cli    
  413f88:	mov    al,0x9c
  413f8a:	sti    
  413f8b:	adc    BYTE PTR [esi+ebx*4+0x6b],0x91
  413f90:	sbb    al,0xe2
  413f92:	mov    ds:0x648ada66,al
  413f97:	seto   BYTE PTR [edx]
  413f9a:	and    ebp,DWORD PTR [ecx-0x6bd548fe]
  413fa0:	or     eax,0xa620e33a
  413fa5:	xchg   edi,eax
  413fa6:	xchg   DWORD PTR ds:0xeecafc0,esi
  413fac:	clc    
  413fad:	jno    0x413fa6
  413faf:	icebp  
  413fb0:	aas    
  413fb1:	scas   eax,DWORD PTR es:[edi]
  413fb2:	out    dx,eax
  413fb3:	jae    0x413f64
  413fb5:	or     bh,BYTE PTR [esi-0x409c613d]
  413fbb:	adc    eax,0x2093ca46
  413fc0:	mov    al,es:0x9597faa0
  413fc6:	xor    eax,0x5fd437bb
  413fcb:	adc    al,0x79
  413fcd:	xor    edi,DWORD PTR [eax+0x34dd8abb]
  413fd3:	stos   BYTE PTR es:[edi],al
  413fd4:	icebp  
  413fd5:	push   ss
  413fd6:	sbb    BYTE PTR [ecx+0x1d5c8806],al
  413fdc:	xor    bh,ah
  413fde:	cmp    DWORD PTR [ecx],0xffffff80
  413fe1:	cmp    ecx,0x3e318d0c
  413fe7:	push   ebx
  413fe8:	ins    BYTE PTR es:[edi],dx
  413fe9:	xchg   edi,eax
  413fea:	fadd   QWORD PTR [esi+eiz*4-0x3bfe2ae7]
  413ff1:	mov    edx,0xbe6dbb16
  413ff6:	outs   dx,BYTE PTR ds:[esi]
  413ff7:	ins    BYTE PTR es:[edi],dx
  413ff8:	xchg   BYTE PTR [edi],ch
  413ffa:	xchg   esp,eax
  413ffb:	sbb    esp,DWORD PTR [edi+eax*1]
  413ffe:	sub    BYTE PTR [edi+0x75],bh
  414001:	push   edi
  414002:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414003:	std    
  414004:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414005:	cmp    DWORD PTR [ebx+edx*1],edx
  414008:	and    eax,0xa0765f20
  41400d:	cmc    
  41400e:	lods   al,BYTE PTR ds:[esi]
  41400f:	mov    cl,0x7
  414011:	test   ch,dl
  414013:	aaa    
  414014:	xor    eax,0xfdf72cc5
  414019:	mov    esp,0xb437469a
  41401e:	push   0x4d4fc97
  414023:	cmp    eax,0x292cdf1a
  414028:	push   ecx
  414029:	lahf   
  41402a:	or     eax,0xfd76dfb3
  41402f:	js     0x414095
  414031:	sbb    DWORD PTR [eax+0x79],edx
  414034:	out    0x82,al
  414036:	pop    es
  414037:	popa   
  414038:	dec    ecx
  414039:	sub    al,al
  41403b:	and    eax,0xaa7eabe4
  414040:	adc    al,0x62
  414042:	test   eax,0xb2aafdc0
  414047:	inc    ecx
  414048:	pop    esp
  41404a:	sbb    ebx,DWORD PTR [edi+0x54d0af56]
  414050:	mov    eax,0x1d5855fe
  414055:	pop    ebp
  414056:	mov    bl,0xa
  414058:	ins    DWORD PTR es:[edi],dx
  414059:	mov    ah,0x2f
  41405b:	cmp    al,0xf5
  41405d:	inc    ebp
  41405e:	fnstcw WORD PTR [edx-0xa47d53f]
  414064:	inc    esi
  414065:	cld    
  414066:	fwait
  414067:	adc    BYTE PTR [eax+0x601d167b],ah
  41406d:	mov    ecx,0x2b05d9b5
  414072:	lods   al,BYTE PTR ds:[esi]
  414073:	mov    al,ds:0xe4d51d5f
  414078:	add    ebx,DWORD PTR [ebp+eax*4-0x5583e626]
  41407f:	mov    cx,0x9cb9
  414083:	pop    edi
  414084:	inc    ebx
  414085:	cld    
  414086:	or     DWORD PTR [eax+0x2d4659c],eax
  41408c:	mov    dh,0x65
  41408e:	loopne 0x41408b
  414090:	or     BYTE PTR ds:0xa248cd58,al
  414096:	push   0xffffff88
  414098:	push   0xab87eae5
  41409d:	hlt    
  41409e:	sbb    cl,ah
  4140a0:	inc    ecx
  4140a1:	jbe    0x414062
  4140a3:	adc    BYTE PTR [edi+0xe],bl
  4140a6:	test   al,0xee
  4140a8:	fst    QWORD PTR [edi]
  4140aa:	or     BYTE PTR [edx+edx*8],dh
  4140ad:	jmp    0xdd70:0x75d93d40
  4140b4:	adc    bl,ch
  4140b6:	xlat   BYTE PTR ds:[ebx]
  4140b7:	test   eax,0x82f68bba
  4140bc:	cdq    
  4140bd:	das    
  4140be:	enter  0x8b1,0xa1
  4140c2:	neg    BYTE PTR [edi+0x298fbaaa]
  4140c8:	fst    QWORD PTR [edi+0x6f]
  4140cb:	rcr    BYTE PTR [eax-0x6218963b],0x57
  4140d2:	mov    dl,0xcf
  4140d4:	inc    edx
  4140d5:	push   eax
  4140d6:	shl    BYTE PTR [esi],1
  4140d8:	push   ecx
  4140d9:	mov    ah,0xd4
  4140db:	inc    esp
  4140dc:	dec    esp
  4140dd:	mov    ds:0x227f4c7,al
  4140e2:	es jmp 0x414155
  4140e5:	ins    BYTE PTR es:[edi],dx
  4140e6:	addr16 inc edx
  4140e8:	in     al,dx
  4140e9:	adc    al,0x64
  4140eb:	stc    
  4140ec:	retf   
  4140ed:	in     eax,dx
  4140ee:	mov    eax,0xc95028ed
  4140f3:	pop    es
  4140f4:	fbstp  TBYTE PTR [ecx+0x6c]
  4140f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140f8:	cmp    bl,ch
  4140fa:	or     DWORD PTR [edi+0x4c680bd4],ecx
  414100:	pop    esp
  414101:	(bad)  
  414102:	fild   QWORD PTR [edi+0x644b164e]
  414108:	cs sbb dl,bh
  41410b:	xchg   ebp,eax
  41410c:	in     al,dx
  41410d:	and    di,WORD PTR [ebx]
  414110:	test   dl,dh
  414112:	out    dx,eax
  414113:	pushf  
  414114:	test   al,0x9
  414116:	out    0xa4,eax
  414118:	fst    DWORD PTR [eax+0x582532a7]
  41411e:	sar    DWORD PTR [ebx+ebx*4+0x1e],1
  414122:	int3   
  414123:	push   bp
  414125:	xchg   DWORD PTR [esi+ebp*2],eax
  414128:	pop    ecx
  414129:	add    DWORD PTR [eax+edx*4-0x3d687c89],eax
  414130:	adc    BYTE PTR [ebp-0x3d],bl
  414133:	adc    esp,esi
  414135:	sub    eax,0x5e8f3183
  41413a:	cld    
  41413b:	push   ecx
  41413c:	nop
  41413d:	(bad)  
  41413e:	sahf   
  41413f:	imul   bh
  414141:	shl    DWORD PTR [edx+esi*8-0x4074b52f],0x36
  414149:	retf   
  41414a:	clc    
  41414b:	into   
  41414c:	(bad)  
  41414d:	into   
  41414e:	lea    ebx,[edi+0x61292ef9]
  414154:	sub    DWORD PTR [esi+0x5bdf737c],edi
  41415a:	out    dx,eax
  41415b:	stc    
  41415c:	out    dx,eax
  41415d:	sbb    BYTE PTR [esi-0x3f7e77ce],dh
  414163:	pop    ebx
  414164:	push   ebx
  414165:	popa   
  414166:	mov    ecx,0x7e02a5ec
  41416b:	and    DWORD PTR [ebx],edx
  41416d:	scas   al,BYTE PTR es:[edi]
  41416e:	fisttp QWORD PTR [ebx+0x676347bf]
  414174:	cdq    
  414175:	cmp    dh,al
  414177:	push   es
  414178:	arpl   WORD PTR [ecx-0x65],cx
  41417b:	sub    DWORD PTR [ebp-0x5d19a717],eax
  414181:	cmp    al,0xbf
  414183:	xchg   BYTE PTR [edi+0x74],cl
  414186:	test   BYTE PTR [ebp-0x1574b9ab],dl
  41418c:	icebp  
  41418d:	out    0xb1,eax
  41418f:	pop    ebp
  414190:	jle    0x4141eb
  414192:	jge    0x4141ff
  414194:	arpl   WORD PTR [ebp+eax*2-0x55],dx
  414198:	test   DWORD PTR [esi+0x33ff5145],eax
  41419e:	jmp    0x6d09:0x8a43cb80
  4141a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141a6:	test   BYTE PTR [eax+edx*2],dl
  4141a9:	cmc    
  4141aa:	add    al,0xb9
  4141ac:	idiv   edx
  4141ae:	imul   esi,DWORD PTR [ebx-0x22],0xecf6c813
  4141b5:	std    
  4141b6:	call   0xdf4cf0b8
  4141bb:	int    0x2b
  4141bd:	scas   al,BYTE PTR es:[edi]
  4141be:	push   0x73
  4141c0:	clc    
  4141c1:	out    0x3f,eax
  4141c3:	scas   al,BYTE PTR es:[edi]
  4141c4:	push   edi
  4141c5:	xchg   esp,eax
  4141c6:	stos   DWORD PTR es:[edi],eax
  4141c7:	lea    edi,[ebp-0x654a9877]
  4141cd:	and    ch,0x15
  4141d0:	(bad)  
  4141d1:	pop    ss
  4141d2:	xor    eax,esi
  4141d4:	mov    BYTE PTR [ecx],bh
  4141d6:	gs ffreep st(1)
  4141d9:	cmc    
  4141da:	ins    DWORD PTR es:[edi],dx
  4141db:	fstp   QWORD PTR [ecx+0x2d]
  4141de:	mov    db7,ebp
  4141e1:	std    
  4141e2:	ror    BYTE PTR [eax+0x18],0xe5
  4141e6:	pusha  
  4141e7:	cld    
  4141e8:	push   edi
  4141e9:	out    0x26,eax
  4141eb:	mov    eax,0xb47c0232
  4141f0:	inc    esi
  4141f1:	mov    eax,0x7d222bd1
  4141f6:	inc    edi
  4141f7:	(bad)
  4141fa:	rol    DWORD PTR [ebp+0x424146c1],1
  414200:	cwde   
  414201:	dec    ebp
  414202:	enter  0xfe50,0x66
  414206:	mov    cs,WORD PTR [esi+0x4f]
  414209:	int    0x38
  41420b:	mov    eax,ds:0x157cc00
  414210:	daa    
  414211:	xor    al,0x71
  414213:	(bad)  
  414214:	repz jecxz 0x4141ed
  414217:	(bad)  
  414218:	aas    
  414219:	popf   
  41421a:	xor    al,0x5c
  41421c:	push   0x8b764c26
  414221:	test   al,0xf7
  414223:	inc    ebp
  414224:	inc    ecx
  414225:	jne    0x414241
  414227:	mov    ecx,?
  414229:	xor    bh,BYTE PTR [ebp+0x5230bf4b]
  41422f:	pop    ds
  414230:	jne    0x414222
  414232:	sbb    DWORD PTR [eax],esp
  414234:	mov    eax,ds:0xb62e7207
  414239:	xor    eax,0xa8cce20e
  41423e:	or     dl,bl
  414240:	adc    BYTE PTR ds:0x42a26af2,cl
  414246:	mov    edx,DWORD PTR [eax+0x6a]
  414249:	ret    0x6e57
  41424c:	mov    bh,0x65
  41424e:	pop    eax
  41424f:	loope  0x41427c
  414251:	bound  ebp,QWORD PTR ds:0x21c22d68
  414257:	adc    bl,bl
  414259:	ret    0xb76f
  41425c:	sbb    eax,0x5e330074
  414261:	add    esp,DWORD PTR [edx]
  414263:	das    
  414264:	fidivr DWORD PTR [edx+0x59]
  414267:	loopne 0x4142ab
  414269:	push   ebp
  41426a:	(bad)  
  41426b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41426c:	cmp    ah,ch
  41426e:	cmp    bl,bh
  414270:	mov    bl,0x79
  414272:	adc    al,0x42
  414274:	jnp    0x4142ac
  414276:	ds addr16 out 0xe7,eax
  41427a:	shr    BYTE PTR gs:[ecx+0x33],1
  41427e:	bound  esp,QWORD PTR [ecx-0x5a251d0a]
  414284:	stc    
  414285:	mov    esp,0xdbc2cfed
  41428a:	push   cs
  41428b:	test   al,0x7e
  41428e:	fist   WORD PTR [esp+ebp*8+0x16]
  414292:	cdq    
  414293:	outs   dx,DWORD PTR ds:[esi]
  414294:	pop    ds
  414295:	inc    esp
  414296:	fiadd  DWORD PTR ds:0xc1cead2a
  41429c:	mov    ah,0x7b
  41429e:	sbb    ah,ah
  4142a0:	mov    edi,0x35834b53
  4142a5:	(bad)  
  4142a6:	xchg   edx,eax
  4142a7:	cdq    
  4142a8:	outs   dx,DWORD PTR ds:[esi]
  4142a9:	xlat   BYTE PTR ds:[ebx]
  4142aa:	dec    ebx
  4142ab:	sub    ch,BYTE PTR [eax-0x6b]
  4142ae:	(bad)  
  4142af:	push   ecx
  4142b0:	js     0x4142d1
  4142b2:	ins    BYTE PTR es:[edi],dx
  4142b3:	fsubr  st,st(3)
  4142b5:	gs out 0x9c,eax
  4142b8:	sbb    DWORD PTR [ecx+0x953f6dd],edx
  4142be:	and    BYTE PTR [edi+0x13],al
  4142c1:	sub    edi,DWORD PTR [ebx+0x1]
  4142c4:	call   0xaed2b8c
  4142c9:	mov    ch,0x4b
  4142cb:	ror    DWORD PTR [eax+0x38],1
  4142ce:	fcmovnbe st,st(7)
  4142d0:	fcmovne st,st(1)
  4142d2:	and    bh,BYTE PTR [ecx]
  4142d4:	mov    esi,edx
  4142d6:	pop    ebp
  4142d7:	xor    BYTE PTR [ebx],dh
  4142d9:	xchg   al,bh
  4142db:	and    DWORD PTR [edx+eax*4],esp
  4142de:	add    BYTE PTR [edx],dh
  4142e0:	cmp    bl,BYTE PTR [edi+0x78]
  4142e3:	add    al,0x3a
  4142e5:	cmp    eax,edi
  4142e7:	pusha  
  4142e8:	ins    BYTE PTR es:[edi],dx
  4142e9:	sbb    eax,0xf7390202
  4142ee:	loopne 0x414351
  4142f0:	adc    BYTE PTR [ebx-0x51c73a7e],bh
  4142f6:	arpl   WORD PTR [edx+0x3a0fedf4],sp
  4142fc:	and    DWORD PTR [edi-0x56],ecx
  4142ff:	xor    DWORD PTR [edx-0x62],ecx
  414302:	lods   al,BYTE PTR ds:[esi]
  414303:	jmp    0x4dc9d07d
  414308:	mov    ah,0x50
  41430a:	or     al,0x3
  41430c:	out    0x7f,eax
  41430e:	rol    BYTE PTR [ecx-0x7f],0xd9
  414312:	mov    bl,0xeb
  414314:	ds xchg esi,eax
  414316:	in     al,0x83
  414318:	cmp    DWORD PTR [edi],esp
  41431a:	mov    esp,0x4ec66e40
  41431f:	push   ds
  414320:	in     eax,0xb6
  414322:	jmp    0x7ce7:0xaf02ee8
  414329:	xor    al,0x97
  41432b:	loope  0x414351
  41432d:	and    BYTE PTR [eax],al
  41432f:	push   esi
  414330:	xchg   BYTE PTR [esp+ebx*4+0x3a8251b6],cl
  414337:	push   0x7
  414339:	and    DWORD PTR [edi+0x53],eax
  41433c:	sar    BYTE PTR [edx+0x22ead400],0xfc
  414343:	pop    edi
  414344:	cs fwait
  414346:	sar    ah,cl
  414348:	fstp   QWORD PTR [esi]
  41434a:	pop    esp
  41434b:	shr    DWORD PTR [eax],1
  41434d:	aad    0xfc
  41434f:	jmp    0xba2456ea
  414354:	loopne 0x414318
  414356:	xor    DWORD PTR [eax+0x21],eax
  414359:	add    eax,0x660dbc4c
  41435e:	cmp    BYTE PTR [edi-0x52],dl
  414361:	pop    ss
  414362:	je     0x4143d7
  414364:	fwait
  414365:	daa    
  414366:	sbb    al,0x5b
  414368:	stos   DWORD PTR es:[edi],eax
  414369:	test   al,0x6c
  41436b:	into   
  41436c:	(bad)  
  41436d:	(bad)  
  41436e:	and    BYTE PTR [eax+0x117aa3f5],ah
  414374:	sbb    al,0xe3
  414376:	lock jo 0x414304
  414379:	add    al,ah
  41437b:	ds jmp 0xc54c:0x16089c0
  414383:	sbb    al,0xf1
  414385:	fbstp  TBYTE PTR [eax]
  414387:	call   0x4a5f942c
  41438c:	(bad)  
  41438d:	mov    ebx,0x3d81e8d4
  414392:	call   0x7cfc5685
  414397:	jns    0x414409
  414399:	and    al,BYTE PTR [esi]
  41439b:	repnz into 
  41439d:	jno    0x414397
  41439f:	cmp    DWORD PTR [esi-0x5265ff34],ebx
  4143a5:	call   0xe55895ac
  4143aa:	jle    0x4143d7
  4143ac:	dec    esi
  4143ad:	ss clc 
  4143af:	cs add al,0x8e
  4143b2:	mov    ds:0x5322e0ab,eax
  4143b7:	push   ss
  4143b8:	loop   0x414391
  4143ba:	cmp    DWORD PTR [ecx+0x73],ecx
  4143bd:	(bad)  
  4143bf:	rcr    DWORD PTR [ecx-0x31],cl
  4143c2:	push   ebp
  4143c3:	addr16 ds or dl,bh
  4143c7:	xor    BYTE PTR [edx-0x70],0xc9
  4143cb:	jg     0x414440
  4143cd:	pop    edx
  4143ce:	not    BYTE PTR [esi-0x12]
  4143d1:	daa    
  4143d2:	mov    ds:0x91e149dd,eax
  4143d7:	test   BYTE PTR ds:0x6fc08816,ah
  4143dd:	fmul   QWORD PTR [eax]
  4143df:	pop    eax
  4143e0:	jb     0x414406
  4143e2:	test   esi,esi
  4143e4:	or     dh,dh
  4143e6:	rcl    DWORD PTR [ebx+0x5f4a8c07],1
  4143ec:	imul   esp,DWORD PTR [ebp-0x189a802],0x41fc4cc7
  4143f6:	scas   eax,DWORD PTR es:[edi]
  4143f7:	xchg   edi,eax
  4143f8:	and    edx,DWORD PTR [edi]
  4143fa:	cmp    cl,ch
  4143fc:	add    ebx,DWORD PTR [esi+ebx*8-0x4]
  414400:	inc    esi
  414401:	int3   
  414402:	jge    0x4143f5
  414404:	out    0x96,al
  414406:	les    eax,FWORD PTR [edi-0x3010b93f]
  41440c:	repz or BYTE PTR [edx-0x52],al
  414410:	adc    DWORD PTR [ecx*2+0x45395a2a],edx
  414417:	push   edi
  414418:	leave  
  414419:	xchg   DWORD PTR [esi],esp
  41441b:	mov    bh,0x9c
  41441d:	fdiv   QWORD PTR [ebp-0x1b]
  414420:	push   es
  414421:	sahf   
  414422:	add    BYTE PTR [eax+eax*4+0x8],bh
  414426:	mov    ecx,0x57b2819e
  41442b:	mov    esp,0xe229a1a6
  414430:	mov    esp,DWORD PTR [ecx-0x23]
  414433:	add    al,0xdf
  414435:	pop    ss
  414436:	test   eax,0x913531dc
  41443b:	mov    dl,BYTE PTR [esi+edi*1]
  41443e:	pop    ecx
  41443f:	scas   eax,DWORD PTR es:[edi]
  414440:	push   edi
  414441:	jmp    0x414472
  414443:	cmp    edx,edi
  414445:	jle    0x41449f
  414447:	xchg   esp,eax
  414448:	imul   ebx,DWORD PTR [esi+ebp*2],0x2437a30b
  41444f:	mov    al,ds:0x683e96e9
  414454:	fnstsw WORD PTR [edx-0x6aa40156]
  41445a:	pop    ebp
  41445b:	(bad)  
  41445c:	repz push esp
  41445e:	cmp    DWORD PTR [eax+0x6eac2620],edi
  414464:	push   esi
  414465:	dec    esi
  414466:	inc    esp
  414467:	jns    0x414400
  414469:	pop    es
  41446a:	dec    ecx
  41446b:	pop    es
  41446c:	mov    ecx,DWORD PTR [edx-0x5]
  41446f:	pushw  0x71f5
  414473:	inc    ecx
  414474:	and    BYTE PTR [edi+0x5d2b544a],dl
  41447a:	pop    ds
  41447b:	and    BYTE PTR [esi],0xf2
  41447e:	cmp    ebp,edx
  414480:	sbb    eax,0xce1a559d
  414485:	sbb    ch,BYTE PTR [edx+0x12cf47bb]
  41448b:	xor    ecx,0x2e71411c
  414491:	call   0xbaab:0x470673f5
  414498:	sub    BYTE PTR [ebx],al
  41449a:	dec    ecx
  41449b:	aam    0xed
  41449d:	call   0x3bb1:0x8ae3df7d
  4144a4:	bound  esp,QWORD PTR [edi-0x7ca84641]
  4144aa:	or     DWORD PTR [eax+0x262798e1],0xffffff8d
  4144b1:	jmp    0x26c260a6
  4144b6:	ret    0x4ae3
  4144b9:	jecxz  0x414481
  4144bb:	stc    
  4144bc:	mov    al,0xc4
  4144be:	test   eax,0xbdf69e67
  4144c3:	cmp    ch,dl
  4144c5:	xchg   edi,eax
  4144c6:	cmp    eax,DWORD PTR [ecx+0x12]
  4144c9:	push   ecx
  4144ca:	or     al,0xf
  4144cc:	stc    
  4144cd:	dec    edx
  4144ce:	iret   
  4144cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144d0:	enter  0xa9d,0x9c
  4144d4:	cmp    DWORD PTR [esi+0x64],esi
  4144d7:	gs jae 0x4144b5
  4144da:	je     0x4144ad
  4144dc:	sar    bh,0x85
  4144df:	jno    0x41449c
  4144e1:	adc    bl,ch
  4144e3:	loopne 0x41455c
  4144e5:	mov    ds:0xeee773b1,eax
  4144ea:	ja     0x414546
  4144ec:	mov    ebp,0xa8f993b6
  4144f1:	loop   0x41456a
  4144f3:	daa    
  4144f4:	xchg   ebx,eax
  4144f5:	mov    eax,ds:0xc0a5568c
  4144fa:	ja     0x4144af
  4144fc:	js     0x4144ae
  4144fe:	and    eax,0x94f6525b
  414503:	adc    al,0x78
  414505:	xor    eax,0x747ae4d1
  41450a:	cmp    bh,BYTE PTR ds:0x675c5688
  414510:	fnsave [edi+edi*8]
  414513:	lahf   
  414514:	sub    esi,DWORD PTR [edx+0x7c]
  414517:	xchg   DWORD PTR [ebp-0x7],ebp
  41451a:	clc    
  41451b:	mov    edi,0xee93f3d9
  414520:	cdq    
  414521:	adc    bh,bl
  414523:	cmp    DWORD PTR [ebx],0x409c5156
  414529:	fisttp QWORD PTR [ebx-0x38]
  41452c:	mov    ebp,0x855117cb
  414531:	sub    al,0x87
  414533:	stc    
  414534:	mov    edx,0xecda143b
  414539:	ror    edx,cl
  41453b:	or     eax,DWORD PTR [esi+0x0]
  41453e:	sbb    al,0xd7
  414540:	adc    bl,bh
  414542:	jle    0x4144ca
  414544:	call   0xf4e9:0x13b0cb7b
  41454b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41454c:	cmp    dl,BYTE PTR [ecx+eax*4]
  41454f:	rcl    DWORD PTR [esi-0x2778f98b],cl
  414555:	cmp    ecx,DWORD PTR [ecx-0x34]
  414558:	adc    BYTE PTR ds:0x436fafa3,bh
  41455e:	push   esp
  41455f:	jbe    0x41455c
  414561:	ja     0x414583
  414563:	test   ax,0xdedb
  414567:	(bad)
  41456b:	call   0x6625:0x1570ba0d
  414572:	adc    bl,BYTE PTR [edi]
  414574:	push   es
  414575:	rcr    BYTE PTR [edx+0x5d],0xde
  414579:	adc    eax,0x2c6d668a
  41457e:	sbb    al,0x4e
  414580:	push   ebp
  414581:	pop    eax
  414582:	retf   
  414583:	pushf  
  414584:	push   esi
  414585:	push   ds
  414586:	adc    edx,DWORD PTR [edx+edx*1]
  414589:	ret    
  41458a:	sahf   
  41458b:	xchg   ecx,eax
  41458c:	xor    eax,edi
  41458e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41458f:	les    ebx,FWORD PTR [eax+0x18]
  414592:	sbb    al,0xb7
  414594:	mov    eax,ds:0xaa118851
  414599:	push   ss
  41459a:	(bad)  
  41459c:	(bad)  
  41459d:	adc    al,0x6
  41459f:	push   edx
  4145a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145a1:	idiv   BYTE PTR [edi-0x7a]
  4145a4:	pop    edi
  4145a5:	pop    esp
  4145a6:	mov    esp,0xa54628f2
  4145ab:	hlt    
  4145ac:	daa    
  4145ad:	xor    ecx,DWORD PTR [ebp+eiz*8+0x719b4c84]
  4145b4:	shl    BYTE PTR [eax*4-0x16348947],1
  4145bb:	pusha  
  4145bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145bd:	stos   BYTE PTR es:[edi],al
  4145be:	fsubr  QWORD PTR ss:[ebx-0x2e9d03f8]
  4145c5:	fimul  WORD PTR [ebp-0x6f]
  4145c8:	add    DWORD PTR [eax+0x2b],edx
  4145cb:	in     eax,0x1b
  4145cd:	out    0xd0,eax
  4145cf:	pop    esi
  4145d0:	jle    0x41455b
  4145d2:	adc    edi,0x51
  4145d5:	sbb    dh,0xf5
  4145d8:	lods   eax,DWORD PTR ds:[esi]
  4145d9:	jno    0x4145d9
  4145db:	loop   0x4145a9
  4145dd:	xlat   BYTE PTR ds:[ebx]
  4145de:	mov    edx,0xedd9ce09
  4145e3:	cdq    
  4145e4:	xchg   ecx,eax
  4145e5:	mov    BYTE PTR [ebp-0x435b6b80],ch
  4145eb:	leave  
  4145ec:	loop   0x41457b
  4145ee:	or     BYTE PTR [esp+ebx*8-0x71b5b488],bl
  4145f5:	mov    ch,0x49
  4145f7:	not    esp
  4145f9:	js     0x4145a1
  4145fb:	rol    BYTE PTR [ebx-0x43],cl
  4145fe:	xlat   BYTE PTR ds:[ebx]
  4145ff:	jnp    0x414671
  414601:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414602:	adc    DWORD PTR [ebx+0xe],0x54f5421f
  414609:	ret    
  41460a:	push   esp
  41460b:	push   ebp
  41460c:	daa    
  41460d:	inc    edi
  41460e:	lods   eax,DWORD PTR ds:[esi]
  41460f:	fcmovnu st,st(6)
  414611:	mov    ebp,DWORD PTR [ebx+0x59]
  414614:	loope  0x4145a2
  414616:	pusha  
  414617:	xor    dl,BYTE PTR [eax-0xf]
  41461a:	sbb    al,0x8b
  41461c:	mov    al,0x81
  41461e:	mov    edi,gs
  414620:	nop
  414621:	sbb    esp,eax
  414623:	push   esi
  414624:	jp     0x41465b
  414626:	stos   BYTE PTR es:[edi],al
  414627:	and    BYTE PTR [esp+ecx*4+0x16640030],al
  41462e:	cmc    
  41462f:	sub    DWORD PTR [ebp-0x5cc4fe23],esp
  414635:	mov    al,0x25
  414637:	mov    al,ds:0x59cab93b
  41463c:	ins    DWORD PTR es:[edi],dx
  41463d:	jge    0x41469a
  41463f:	or     edx,DWORD PTR [ebx-0x9]
  414642:	call   0x5f06b5d8
  414647:	sbb    ecx,ebp
  414649:	push   ebx
  41464a:	mov    bh,0xdb
  41464c:	dec    edx
  41464d:	add    ch,BYTE PTR [ebx+0x11]
  414650:	ins    BYTE PTR es:[edi],dx
  414651:	enter  0xfbeb,0xe1
  414655:	jp     0x41461e
  414657:	fcmovu st,st(6)
  414659:	popf   
  41465a:	sbb    DWORD PTR [ebp-0x20f78c6d],esi
  414660:	xchg   esp,eax
  414661:	int3   
  414662:	push   ecx
  414663:	outs   dx,BYTE PTR ds:[esi]
  414664:	add    al,0xca
  414666:	(bad)  
  414667:	add    dl,0x55
  41466a:	sbb    cl,al
  41466c:	adc    DWORD PTR [eax],0x36ab127b
  414672:	(bad)  
  414674:	xor    BYTE PTR [esi+0x4a],cl
  414677:	rcl    BYTE PTR [ecx-0x2],cl
  41467a:	cmc    
  41467b:	or     al,BYTE PTR ds:0x2fd5c59d
  414681:	popf   
  414682:	and    DWORD PTR [ecx],0x3d
  414685:	or     al,0xe9
  414687:	or     cl,dl
  414689:	shl    DWORD PTR [ecx+0x1],0x9a
  41468d:	jg     0x414648
  41468f:	mov    al,ds:0x137e3c64
  414694:	and    al,0x7d
  414696:	pop    edi
  414697:	push   ds
  414698:	and    DWORD PTR [esi],ecx
  41469a:	outs   dx,BYTE PTR ds:[esi]
  41469b:	lods   eax,DWORD PTR ds:[esi]
  41469c:	cdq    
  41469d:	aam    0x2
  41469f:	lahf   
  4146a0:	add    al,0x8f
  4146a2:	or     al,0x28
  4146a4:	pop    eax
  4146a5:	sbb    bl,BYTE PTR [ebp+0x4717a523]
  4146ab:	dec    eax
  4146ac:	or     ah,BYTE PTR [eax+eiz*4-0x3334e932]
  4146b3:	cwde   
  4146b4:	cld    
  4146b5:	loop   0x41464d
  4146b7:	push   esi
  4146b8:	jo     0x26116051
  4146be:	xor    ebp,eax
  4146c0:	stc    
  4146c1:	(bad)  [esi+ebx*1]
  4146c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4146c5:	out    dx,eax
  4146c6:	aas    
  4146c7:	pusha  
  4146c8:	jl     0x41465f
  4146ca:	sbb    al,0x7a
  4146cc:	mov    ebp,0x1db19109
  4146d1:	adc    cl,BYTE PTR [esi+0x55e3277c]
  4146d7:	int3   
  4146d8:	dec    esi
  4146d9:	sbb    cl,al
  4146db:	bswap  edx
  4146dd:	cwde   
  4146de:	pop    ss
  4146df:	mov    dl,0x28
  4146e1:	cs rcr ebx,0x1e
  4146e5:	gs loope 0x414759
  4146e8:	mov    edi,0x7fa1aa25
  4146ed:	or     eax,0x21a16e1
  4146f2:	ins    BYTE PTR es:[edi],dx
  4146f3:	xchg   BYTE PTR [edi+eax*2+0x63],dh
  4146f7:	mov    ecx,0x6fb80c03
  4146fc:	add    edx,0x5c
  4146ff:	test   al,0x3c
  414701:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414702:	sbb    al,0xf6
  414704:	push   edi
  414705:	stos   BYTE PTR es:[edi],al
  414706:	xor    DWORD PTR [edi-0x15a0b927],ebx
  41470c:	sbb    BYTE PTR [edi+0x10],al
  41470f:	inc    ebx
  414710:	or     BYTE PTR [ebp-0x27c75c02],bh
  414716:	jg     0x4146a8
  414718:	enter  0xe3a2,0x2c
  41471c:	xchg   edx,eax
  41471d:	pop    ecx
  41471e:	inc    eax
  41471f:	or     bl,ch
  414721:	or     dh,dl
  414723:	mov    eax,ds:0xc94f3774
  414728:	inc    esi
  414729:	jmp    0x8e4b:0x74484435
  414730:	shr    BYTE PTR [edx],0xc2
  414733:	iret   
  414734:	or     ebp,DWORD PTR [ebp+0x794dddd9]
  41473a:	adc    dl,BYTE PTR [ecx+ecx*8+0x356b298e]
  414741:	dec    edi
  414742:	push   eax
  414743:	repz (bad) 
  414745:	mov    bh,0x61
  414747:	cmp    al,BYTE PTR [ebx+esi*4]
  41474a:	dec    ebx
  41474b:	ror    BYTE PTR [ebx+0x116acc78],0x2c
  414752:	sub    al,0xf3
  414754:	imul   edx,DWORD PTR [ebx],0xffffffa0
  414757:	xchg   ecx,eax
  414758:	arpl   WORD PTR [edx],dx
  41475a:	outs   dx,DWORD PTR ds:[esi]
  41475b:	mov    al,ds:0xb056f50f
  414760:	fnstenv [ecx]
  414762:	pop    ebx
  414763:	sti    
  414764:	pop    esp
  414765:	aad    0xc4
  414767:	jecxz  0x4147b1
  414769:	mov    ecx,DWORD PTR [eax+0xc970f74]
  41476f:	daa    
  414770:	adc    ebx,DWORD PTR [edx+0x3519c3d3]
  414776:	ror    DWORD PTR [eax],1
  414778:	sub    bh,BYTE PTR [esi-0x25]
  41477b:	inc    ebx
  41477c:	xor    esi,0xd7c38139
  414782:	mov    cl,0xfc
  414784:	xor    eax,ebx
  414786:	pop    ebx
  414787:	jl     0x41475d
  414789:	or     al,0x42
  41478b:	cmc    
  41478c:	ds add al,0x15
  41478f:	jno    0x414764
  414791:	cwde   
  414792:	add    al,0x40
  414794:	fcomip st,st(3)
  414796:	neg    BYTE PTR [edx]
  414798:	stc    
  414799:	mov    WORD PTR [edi+0x41b17834],ss
  41479f:	out    dx,al
  4147a0:	pop    ecx
  4147a1:	scas   al,BYTE PTR es:[edi]
  4147a2:	jno    0x41475a
  4147a4:	sbb    BYTE PTR [ebx-0x1d],dh
  4147a7:	lods   al,BYTE PTR ds:[esi]
  4147a8:	cmp    BYTE PTR [edi-0x6475b437],cl
  4147ae:	adc    al,0x8a
  4147b0:	pop    ss
  4147b1:	mov    eax,ds:0x1b5b6afa
  4147b6:	inc    edx
  4147b7:	add    esi,DWORD PTR [edi+0x36]
  4147ba:	lds    eax,FWORD PTR [esi+esi*8+0x7000d3f6]
  4147c1:	pop    edx
  4147c2:	fs mov ebp,?
  4147c5:	cwde   
  4147c6:	mov    edx,0xb41325c2
  4147cb:	and    al,0x60
  4147cd:	xchg   edi,eax
  4147ce:	dec    ebp
  4147cf:	arpl   di,bx
  4147d1:	les    esi,FWORD PTR [ebp-0xb]
  4147d4:	icebp  
  4147d5:	clc    
  4147d6:	lock or esi,DWORD PTR [edi-0x1da138da]
  4147dd:	xchg   esi,eax
  4147de:	(bad)  
  4147df:	fadd   st,st(5)
  4147e1:	cli    
  4147e2:	stc    
  4147e3:	test   DWORD PTR [edx],ebp
  4147e5:	lock outs dx,DWORD PTR ds:[esi]
  4147e7:	xor    bl,BYTE PTR [eax-0xb]
  4147ea:	push   edx
  4147eb:	mov    esp,0xe5375dc1
  4147f0:	aaa    
  4147f1:	or     edx,ebx
  4147f3:	nop
  4147f4:	ins    DWORD PTR es:[edi],dx
  4147f5:	xlat   BYTE PTR ds:[ebx]
  4147f6:	int3   
  4147f7:	push   edx
  4147f8:	sbb    eax,0xde87c373
  4147fd:	sar    BYTE PTR [esp+edi*1],cl
  414800:	(bad)  
  414801:	mov    cl,0x91
  414803:	sub    eax,0xe1c61711
  414808:	inc    edi
  414809:	adc    DWORD PTR [ebp-0x18],ebp
  41480c:	xchg   ecx,eax
  41480d:	jge    0x4147fe
  41480f:	fsubp  st(7),st
  414811:	jge    0x414830
  414813:	shr    DWORD PTR [ebx+0x6fbd4702],cl
  414819:	mov    dl,0x2a
  41481b:	lods   eax,DWORD PTR ds:[esi]
  41481c:	dec    eax
  41481d:	mov    cl,0xc9
  41481f:	or     eax,ecx
  414821:	jno    0x4147b9
  414823:	inc    edx
  414824:	pop    DWORD PTR [eax+0x49]
  414827:	sub    BYTE PTR [edi-0x5ef2ceb9],0x1e
  41482e:	or     bh,dh
  414830:	jl     0x414885
  414832:	mov    cs,WORD PTR [ecx]
  414834:	jo     0x414830
  414836:	add    ch,BYTE PTR [esi-0x6c18435d]
  41483c:	pop    ebx
  41483d:	ror    DWORD PTR [ecx-0x66],cl
  414840:	or     BYTE PTR [ebx+0x48e54f1f],dh
  414846:	dec    edx
  414847:	or     ah,BYTE PTR [edi-0x5a]
  41484a:	scas   al,BYTE PTR es:[edi]
  41484b:	aad    0xd7
  41484d:	add    al,0x78
  41484f:	xchg   ebx,eax
  414850:	sub    eax,0xa31e5587
  414855:	push   ebx
  414856:	push   edi
  414857:	adc    DWORD PTR [ecx+0x36932cad],0x2
  41485e:	push   eax
  41485f:	xor    ah,dl
  414861:	sub    DWORD PTR [eax-0x5a8ac6a1],ebp
  414867:	pop    ds
  414868:	jb     0x414882
  41486a:	hlt    
  41486b:	mov    edx,0xb3ec087d
  414870:	les    ebx,FWORD PTR [ecx-0x19]
  414873:	dec    ecx
  414874:	into   
  414875:	in     al,0xa7
  414877:	jmp    0xe0b7:0x403ab32f
  41487e:	stos   BYTE PTR es:[edi],al
  41487f:	xor    DWORD PTR [eax-0x7a],ebp
  414882:	sbb    al,0xe
  414884:	shl    BYTE PTR [edx-0x2e4e4627],0x5b
  41488b:	and    eax,esp
  41488d:	popf   
  41488e:	inc    esp
  41488f:	int3   
  414890:	out    dx,al
  414891:	(bad)  
  414892:	(bad)  [esi-0x7319a617]
  414898:	mov    bh,0xcc
  41489a:	dec    ebx
  41489b:	xchg   ecx,eax
  41489c:	lods   eax,DWORD PTR ds:[esi]
  41489d:	inc    edi
  41489e:	add    ax,WORD PTR [eax]
  4148a1:	sub    DWORD PTR [ecx],esp
  4148a3:	cmp    DWORD PTR [esi-0x78],esi
  4148a6:	fs out 0x37,eax
  4148a9:	push   eax
  4148aa:	mov    dl,0xab
  4148ac:	push   0xffffff93
  4148ae:	pop    eax
  4148af:	xor    eax,0x24a6dbde
  4148b4:	rcl    BYTE PTR [esi-0x45],1
  4148b7:	push   ss
  4148b8:	sti    
  4148b9:	mov    ecx,DWORD PTR [eax]
  4148bb:	mov    ds:0x9b7db507,eax
  4148c0:	dec    edx
  4148c1:	lahf   
  4148c2:	mov    ebp,0xc9ec0eea
  4148c7:	pop    edi
  4148c8:	jne    0x414876
  4148ca:	jb     0x4148ad
  4148cc:	cdq    
  4148cd:	lods   eax,DWORD PTR ds:[esi]
  4148ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148cf:	jg     0x41492d
  4148d1:	lds    edx,FWORD PTR [edx+0x7b]
  4148d4:	leave  
  4148d5:	daa    
  4148d6:	cmp    DWORD PTR [edx+0x1b],edx
  4148d9:	ret    
  4148da:	cld    
  4148db:	dec    ecx
  4148dc:	clc    
  4148dd:	xor    bh,BYTE PTR [edx+edi*2]
  4148e0:	mov    WORD PTR [edi+0x223c87eb],es
  4148e6:	add    al,0x86
  4148e8:	test   al,0x6d
  4148ea:	xchg   esp,eax
  4148eb:	pop    eax
  4148ec:	stos   BYTE PTR es:[edi],al
  4148ed:	inc    edx
  4148ee:	retf   0x7449
  4148f1:	cmc    
  4148f2:	loope  0x414906
  4148f4:	fild   WORD PTR [esp+ebx*2-0x75e18a6b]
  4148fb:	sub    DWORD PTR [ebx],0xcd833614
  414901:	xchg   ecx,eax
  414902:	xor    ecx,eax
  414904:	add    ecx,esi
  414906:	mov    ecx,0x242ebcd
  41490b:	je     0x419125
  414911:	jmp    0x416c96
  414916:	cwde   
  414917:	add    BYTE PTR [ecx],al
  414919:	or     eax,0x7b940381
  41491e:	test   al,0xe5
  414920:	pusha  
  414921:	mov    ah,0xc7
  414923:	mov    BYTE PTR [edx+0x3],dh
  414926:	xchg   esi,eax
  414927:	pusha  
  414928:	jns    0x4149a4
  41492a:	adc    bl,BYTE PTR [edi+0x7a]
  41492d:	jp     0x4148f2
  41492f:	and    BYTE PTR [eax+0x5eb3390f],ah
  414935:	aad    0xa7
  414937:	fist   DWORD PTR [ebx]
  414939:	mov    ah,0xb8
  41493b:	leave  
  41493c:	sub    eax,edi
  41493e:	addr16 stc 
  414940:	dec    eax
  414941:	push   ebp
  414942:	clc    
  414943:	mov    bh,0x0
  414945:	dec    esp
  414946:	add    bh,BYTE PTR ds:0x4f57f665
  41494c:	and    DWORD PTR [edi],0x2c813f5b
  414952:	cs je  0x4149c5
  414955:	arpl   cx,sp
  414957:	shl    edi,0xe3
  41495a:	push   0xffffffd0
  41495c:	dec    esp
  41495d:	mov    BYTE PTR [ebp-0x61],bl
  414960:	popf   
  414961:	xchg   edx,eax
  414962:	dec    esp
  414963:	jle    0x41490f
  414965:	and    ch,al
  414967:	push   esi
  414968:	mov    eax,0xf4c2efa8
  41496d:	stos   DWORD PTR es:[edi],eax
  41496e:	sbb    BYTE PTR [eax],dl
  414970:	sahf   
  414971:	(bad)
  414974:	sub    dh,BYTE PTR [eax-0x61]
  414977:	sub    dh,dl
  414979:	rol    cl,1
  41497b:	push   cs
  41497c:	xor    DWORD PTR [ecx-0x80],0xffffff95
  414980:	icebp  
  414981:	idiv   BYTE PTR [edi]
  414983:	in     al,0x35
  414985:	cmp    eax,0xc0cf302f
  41498a:	add    al,0x5
  41498c:	cld    
  41498d:	mov    bl,0x5
  41498f:	das    
  414990:	shr    BYTE PTR [esi],0x92
  414993:	jo     0x414a06
  414995:	addr16 jo 0x414937
  414998:	stos   BYTE PTR es:[edi],al
  414999:	gs call 0x6f27:0x18388aff
  4149a1:	or     eax,0x8d76d9d6
  4149a6:	pop    ebp
  4149a7:	fcomp  QWORD PTR [edi+ebx*1+0x1c9e7016]
  4149ae:	mov    bl,0x0
  4149b0:	push   ecx
  4149b1:	retf   
  4149b2:	cmp    edi,DWORD PTR [esi]
  4149b4:	lods   al,BYTE PTR ds:[esi]
  4149b5:	cwde   
  4149b6:	push   esi
  4149b7:	scas   eax,DWORD PTR es:[edi]
  4149b8:	mov    ss,WORD PTR [esi]
  4149ba:	sub    BYTE PTR [esi+0x9],0xf9
  4149be:	inc    DWORD PTR [ebp+0x45]
  4149c1:	psubsb mm3,mm4
  4149c4:	dec    ecx
  4149c5:	adc    al,ch
  4149c7:	sbb    DWORD PTR [edx],eax
  4149c9:	cmp    al,0x73
  4149cb:	jl     0x4149d7
  4149cd:	mov    ds:0x52b31917,al
  4149d2:	mov    eax,ds:0x455c5fc2
  4149d7:	add    bh,BYTE PTR [ebx+0xe0069c8]
  4149dd:	cli    
  4149de:	mov    esp,0x46d1ac6c
  4149e3:	xor    eax,0xa4cb47c4
  4149e8:	mov    esp,0x6cc292b
  4149ed:	xchg   esp,eax
  4149ee:	push   ebx
  4149ef:	sbb    esp,DWORD PTR [edx]
  4149f1:	jnp    0x414a3d
  4149f3:	mov    dl,0x45
  4149f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149f6:	pop    ecx
  4149f7:	add    eax,DWORD PTR [ebp+0x6f]
  4149fa:	repz mov ds:0x446ecea4,eax
  414a00:	pop    ds
  414a01:	jae    0x414a07
  414a03:	ret    
  414a04:	nop
  414a05:	xchg   ebp,eax
  414a06:	retf   0xbd22
  414a09:	scas   eax,DWORD PTR es:[edi]
  414a0a:	(bad)  
  414a0b:	jmp    0x802f:0x363ddfaa
  414a12:	xchg   ebp,eax
  414a13:	outs   dx,DWORD PTR ds:[esi]
  414a14:	or     eax,0x7e60f680
  414a19:	add    dl,0x54
  414a1c:	xchg   edi,eax
  414a1d:	int3   
  414a1e:	push   ebx
  414a1f:	cdq    
  414a20:	shr    DWORD PTR [eax+0x4e],1
  414a23:	pop    eax
  414a24:	sbb    DWORD PTR [ecx+0x44],0xffffffc0
  414a28:	adc    DWORD PTR es:[ebp+0x16],0xc5a8262b
  414a30:	push   edx
  414a31:	cmp    edi,DWORD PTR [ebx+0x76]
  414a34:	ins    DWORD PTR es:[edi],dx
  414a35:	(bad)  
  414a37:	mov    esp,0x98a31bdc
  414a3c:	push   0x589ab991
  414a41:	xor    al,0x7b
  414a43:	mov    ebx,0xcdd1b6a7
  414a48:	div    DWORD PTR [ecx]
  414a4a:	iret   
  414a4b:	aaa    
  414a4c:	jb     0x414a84
  414a4e:	xchg   edx,eax
  414a4f:	ror    DWORD PTR [edx],1
  414a51:	xor    ch,bl
  414a53:	inc    ebx
  414a54:	add    bh,BYTE PTR [ebp+0x5d]
  414a57:	jae    0x414a7b
  414a59:	fcom   DWORD PTR [eax-0x3e]
  414a5c:	aaa    
  414a5d:	mov    esp,0x23b653eb
  414a62:	dec    esi
  414a63:	ret    
  414a64:	out    0xc1,eax
  414a66:	mov    bh,0x3
  414a68:	jbe    0x414a56
  414a6a:	mov    WORD PTR [edi],gs
  414a6c:	mov    ds:0x8cc6dfbc,eax
  414a71:	fs inc esi
  414a73:	stos   DWORD PTR es:[edi],eax
  414a74:	aam    0x47
  414a76:	dec    edi
  414a77:	mov    BYTE PTR [ebp-0x3e9b11ce],ch
  414a7d:	jg     0x414a32
  414a7f:	jg     0x414aa0
  414a81:	(bad)  
  414a82:	stos   DWORD PTR es:[edi],eax
  414a83:	sbb    DWORD PTR [esp+ebx*8-0x70],ecx
  414a87:	mov    dh,0x1f
  414a89:	and    eax,0x236d96e4
  414a8e:	push   ebx
  414a8f:	dec    esp
  414a90:	fisubr WORD PTR [ebp+0x7e]
  414a93:	or     ebp,DWORD PTR [edx+0x4d]
  414a96:	xor    al,0x5c
  414a98:	jge    0x414a88
  414a9a:	test   ah,dl
  414a9c:	add    ebp,DWORD PTR [esi]
  414a9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a9f:	gs in  eax,dx
  414aa1:	not    al
  414aa3:	jmp    0x575f:0x5e749441
  414aaa:	xor    BYTE PTR [edi-0x5b5c55f],al
  414ab0:	enter  0xb45b,0x9a
  414ab4:	shr    DWORD PTR cs:[esi-0x16],1
  414ab8:	adc    DWORD PTR [edi+0x6c899c4e],edx
  414abe:	and    BYTE PTR [edi-0xb],0xd2
  414ac2:	call   0x834a6b3b
  414ac7:	or     al,0x65
  414ac9:	pop    ds
  414aca:	fist   WORD PTR [edx-0x6c]
  414acd:	int3   
  414ace:	(bad)  
  414ad0:	ror    edx,1
  414ad2:	and    DWORD PTR [eax+0x59defd7c],0xffffffb2
  414ad9:	fwait
  414ada:	push   edx
  414adb:	jg     0x414ae4
  414add:	popa   
  414ade:	mov    ch,0xcf
  414ae0:	ss stos DWORD PTR es:[edi],eax
  414ae2:	pop    ss
  414ae3:	push   ecx
  414ae4:	cmp    dl,bh
  414ae6:	mov    esp,0x2554fcb6
  414aeb:	push   ebx
  414aec:	jge    0x414b2b
  414aee:	xor    al,0xcc
  414af0:	fistp  QWORD PTR [esi+0x40a5c4dc]
  414af6:	addr16 push 0xffffff87
  414af9:	adc    BYTE PTR [eax+0x68],bh
  414afc:	xor    eax,0x265f8b77
  414b01:	adc    edx,edx
  414b03:	sub    ebx,DWORD PTR [eax-0x6f486745]
  414b09:	call   0xdf85c77f
  414b0e:	test   BYTE PTR [ecx-0x4],ah
  414b11:	test   DWORD PTR [ebx+0x2f23ece4],esi
  414b17:	repnz mov ebp,0x4ebcc9d8
  414b1d:	lds    ebx,FWORD PTR [ebp-0x29c51ef5]
  414b23:	mov    dl,0x6e
  414b25:	sbb    eax,0xc94bb45f
  414b2a:	scas   al,BYTE PTR es:[edi]
  414b2b:	ja     0x414b53
  414b2d:	mov    edx,0x3d380d4e
  414b32:	int3   
  414b33:	outs   dx,DWORD PTR ds:[esi]
  414b34:	in     al,0xff
  414b36:	xor    BYTE PTR [esi+ebp*1+0x13],bh
  414b3a:	inc    ebx
  414b3b:	push   ds
  414b3c:	inc    esp
  414b3d:	mov    bp,0x5459
  414b41:	addr16 (bad) 
  414b43:	fstp   DWORD PTR [edx]
  414b45:	shr    BYTE PTR [eax-0xc9b378e],0x1f
  414b4c:	lods   al,BYTE PTR ds:[esi]
  414b4d:	cmovle edx,DWORD PTR [esi-0x614852b9]
  414b54:	dec    esp
  414b55:	arpl   WORD PTR [edi],bp
  414b57:	in     eax,0xd0
  414b59:	jge    0x414b2d
  414b5b:	js     0x414b6b
  414b5d:	popa   
  414b5e:	cmp    eax,0x22115748
  414b63:	lea    edi,[esi-0x32235ecc]
  414b69:	push   esi
  414b6a:	jecxz  0x414b86
  414b6c:	es push ebx
  414b6e:	sbb    eax,0x9cae4db7
  414b73:	dec    esp
  414b74:	inc    edi
  414b75:	inc    edx
  414b76:	cmp    dh,BYTE PTR [ecx+eax*1-0x65e291ba]
  414b7d:	xor    DWORD PTR [ecx+edi*2-0x7da04990],esp
  414b84:	div    BYTE PTR [edx+0x41]
  414b87:	pushf  
  414b88:	jl     0x414b6a
  414b8a:	test   BYTE PTR ds:[eax-0x36],cl
  414b8e:	stc    
  414b8f:	and    edx,DWORD PTR [edi]
  414b91:	push   sp
  414b93:	mov    ds:0xa17f84fd,eax
  414b98:	mov    esp,0x528af4ec
  414b9d:	pop    edi
  414b9e:	mov    al,0xa4
  414ba0:	shl    BYTE PTR [eax+0x9837fb6],1
  414ba6:	push   ebp
  414ba7:	pop    ss
  414ba8:	imul   ebp,eax,0x71
  414bab:	sub    al,0x8c
  414bad:	call   ebp
  414baf:	fnstenv [esp+edi*4]
  414bb2:	mov    ds:0x1c83f1c7,al
  414bb7:	dec    esi
  414bb8:	jae    0x414bc1
  414bba:	imul   ebx,ebx,0x5439a1fd
  414bc0:	sbb    ebp,DWORD PTR [ecx-0xa]
  414bc3:	pop    eax
  414bc4:	dec    edi
  414bc5:	xchg   BYTE PTR ds:0x4f3f9972,dl
  414bcb:	xor    al,0x7e
  414bcd:	mov    al,cl
  414bcf:	or     bh,BYTE PTR [edx+edx*1+0x56a4076]
  414bd6:	retf   0xb28a
  414bd9:	loop   0x414b82
  414bdb:	cmp    eax,0x783d18f8
  414be0:	cs mov ebx,0x2f2de771
  414be6:	mov    ch,0xc5
  414be8:	clc    
  414be9:	sbb    edx,DWORD PTR [ecx+eiz*1-0x66]
  414bed:	pop    ebx
  414bee:	int    0x51
  414bf0:	frstor [esi]
  414bf2:	ja     0x414c6c
  414bf4:	inc    ebx
  414bf5:	scas   al,BYTE PTR es:[edi]
  414bf6:	addr16 cmp al,0x52
  414bf9:	repnz rcr DWORD PTR [eax-0x16ec86a4],1
  414c00:	jnp    0x414c30
  414c02:	sbb    ah,BYTE PTR [ebx+0x7b]
  414c05:	xchg   BYTE PTR [ebx-0x2a],ch
  414c08:	les    ebx,FWORD PTR [esi-0x2b]
  414c0b:	mov    BYTE PTR [ebx],bl
  414c0d:	sbb    cl,dl
  414c0f:	inc    ebx
  414c10:	test   al,0x1a
  414c12:	fisub  WORD PTR [esi-0x1519ae60]
  414c18:	out    dx,al
  414c19:	cmc    
  414c1a:	jne    0x414c68
  414c1c:	sub    edi,0x7b
  414c1f:	ja     0x414c78
  414c21:	int3   
  414c22:	mov    dl,0x91
  414c24:	push   cs
  414c25:	adc    bl,BYTE PTR [ebx+ecx*2]
  414c28:	adc    ch,BYTE PTR ds:0x94dce942
  414c2e:	xor    ebx,DWORD PTR ds:0x3843cc02
  414c34:	cdq    
  414c35:	add    eax,DWORD PTR [eax+ebx*1-0x37]
  414c39:	retf   0xa9d7
  414c3c:	loopne 0x414bd0
  414c3e:	xchg   ecx,eax
  414c3f:	pop    eax
  414c40:	leave  
  414c41:	aaa    
  414c42:	dec    esp
  414c43:	stos   BYTE PTR es:[edi],al
  414c44:	mov    esp,0xaae95194
  414c49:	test   bh,ah
  414c4b:	jmp    0x414c48
  414c4d:	dec    esi
  414c4e:	(bad)  
  414c50:	dec    ebp
  414c51:	gs xor al,0xa6
  414c54:	adc    al,0xb
  414c56:	in     al,0x22
  414c58:	dec    edx
  414c59:	add    eax,0x132738b5
  414c5e:	adc    eax,0xb366e62b
  414c63:	lods   al,BYTE PTR ds:[esi]
  414c64:	sbb    bl,BYTE PTR cs:[esi]
  414c67:	loopne 0x414c35
  414c69:	iret   
  414c6a:	and    bl,BYTE PTR [eax+0x6a66b6a8]
  414c70:	xchg   ecx,eax
  414c71:	xchg   edx,eax
  414c72:	pusha  
  414c73:	cmp    al,BYTE PTR [ebx-0x53]
  414c76:	inc    ebp
  414c77:	lds    edx,FWORD PTR [ecx]
  414c79:	pushf  
  414c7a:	mov    bl,0x3c
  414c7c:	push   0xc820922a
  414c81:	or     al,0x4a
  414c83:	addr16 pop ebp
  414c85:	sub    bh,BYTE PTR [esi+0x2c]
  414c88:	inc    ebp
  414c89:	leave  
  414c8a:	pusha  
  414c8b:	enter  0x2812,0xef
  414c8f:	aas    
  414c90:	call   0xad21:0xb14e9f4a
  414c97:	xchg   ebp,eax
  414c98:	push   ds
  414c99:	jo     0x414c89
  414c9b:	pop    DWORD PTR [ebp-0x5b]
  414c9e:	add    esp,DWORD PTR ds:[esi-0x10]
  414ca2:	repz adc eax,edi
  414ca5:	fs sbb al,0x21
  414ca8:	xor    al,0xcf
  414caa:	aaa    
  414cab:	add    edi,esp
  414cad:	(bad)  
  414caf:	imul   edi,DWORD PTR ds:0x2955e0c8,0x90266551
  414cb9:	sbb    DWORD PTR [esi+0x26d2eec3],0x101e9fa5
  414cc3:	mov    eax,0x61d136a4
  414cc8:	inc    esp
  414cc9:	test   edi,esp
  414ccb:	xor    ah,BYTE PTR [ebx]
  414ccd:	and    BYTE PTR [ebp-0x5ece2b9e],bh
  414cd3:	rcl    BYTE PTR [ebp-0x37f730a1],1
  414cd9:	dec    esi
  414cda:	cmc    
  414cdb:	mov    eax,ds:0x4c78d131
  414ce0:	aad    0xef
  414ce2:	dec    ebx
  414ce3:	hlt    
  414ce4:	and    ecx,edx
  414ce6:	lock inc esp
  414ce8:	sub    eax,0xa1366f57
  414ced:	add    BYTE PTR [ebx+0x753dfe81],0x63
  414cf4:	sbb    BYTE PTR [eax],0x3f
  414cf7:	scas   eax,DWORD PTR es:[edi]
  414cf8:	stos   DWORD PTR es:[edi],eax
  414cf9:	and    eax,0x1aa61ad0
  414cfe:	mov    gs,WORD PTR [edi+0x4f]
  414d01:	xor    eax,0xebcd88a
  414d06:	or     DWORD PTR [ebp+0x4c801111],edx
  414d0c:	cmp    esi,DWORD PTR [esi+0xe4ff5d3]
  414d12:	ret    
  414d13:	mov    al,0xd6
  414d15:	pop    ss
  414d16:	aad    0xcf
  414d18:	dec    edi
  414d19:	mov    edi,0x3190080a
  414d1e:	loop   0x414d60
  414d20:	pop    esi
  414d21:	ja     0x414d6e
  414d23:	add    eax,0xc3571c65
  414d28:	loop   0x414ce8
  414d2a:	push   ss
  414d2b:	mov    al,BYTE PTR [eax-0x8]
  414d2e:	je     0x414cd4
  414d30:	sbb    ebp,DWORD PTR [esi]
  414d32:	mov    eax,0x20626585
  414d37:	in     eax,0x2f
  414d39:	sbb    eax,0xf92d6d0d
  414d3e:	(bad)  
  414d3f:	fidivr DWORD PTR [ecx-0x46]
  414d42:	xor    dh,BYTE PTR [edi]
  414d44:	cld    
  414d45:	bound  ebx,QWORD PTR [eax]
  414d47:	das    
  414d48:	sub    al,0x1e
  414d4a:	push   eax
  414d4b:	icebp  
  414d4c:	and    esi,DWORD PTR [eax+edi*2-0xc]
  414d50:	jmp    0xcce20da6
  414d55:	out    0xfa,al
  414d57:	pop    esp
  414d58:	dec    edi
  414d59:	or     edi,eax
  414d5b:	push   ds
  414d5c:	sti    
  414d5d:	neg    edx
  414d5f:	dec    esp
  414d60:	stos   DWORD PTR es:[edi],eax
  414d61:	mov    al,0xa4
  414d63:	js     0x414ddf
  414d65:	shl    BYTE PTR [edi],0x61
  414d68:	sbb    eax,0x96f60a57
  414d6d:	int    0x29
  414d6f:	std    
  414d70:	inc    edx
  414d71:	and    DWORD PTR [edx+0x2ad61822],ebx
  414d77:	scas   eax,DWORD PTR es:[edi]
  414d78:	aaa    
  414d79:	mov    eax,ds:0xd58f599d
  414d7e:	adc    DWORD PTR [eax-0x6b],ebp
  414d81:	popa   
  414d82:	leave  
  414d83:	jmp    0x3d5fd224
  414d88:	(bad)  
  414d89:	fst    QWORD PTR [ebx-0x2c0c7849]
  414d8f:	ret    0x634d
  414d92:	cmp    BYTE PTR [ebp-0x49],0x86
  414d96:	xchg   ebp,eax
  414d97:	inc    eax
  414d98:	dec    eax
  414d99:	pop    esp
  414d9a:	sub    DWORD PTR [eax-0x404570a],0x60ff45a1
  414da4:	mov    ch,0x54
  414da6:	icebp  
  414da7:	das    
  414da8:	add    DWORD PTR [edx+0x12],ecx
  414dab:	int3   
  414dac:	fs fsub st(6),st
  414daf:	les    ebx,FWORD PTR [edi+0x2af7fb34]
  414db5:	es mov ecx,0xe76120bd
  414dbb:	out    0x10,al
  414dbd:	sub    dh,BYTE PTR [edi+0x5762dace]
  414dc3:	push   esi
  414dc4:	dec    eax
  414dc5:	mov    dl,0xe2
  414dc7:	jp     0x414e17
  414dc9:	lock cmp BYTE PTR [esi+0x5b0c7cc7],dh
  414dd0:	scas   al,BYTE PTR es:[edi]
  414dd1:	push   esp
  414dd2:	pop    ebp
  414dd3:	push   ds
  414dd4:	nop
  414dd5:	es nop
  414dd7:	mov    WORD PTR [esi-0x7f12dd6d],ss
  414ddd:	jae    0x414db6
  414ddf:	sahf   
  414de0:	cmp    cl,cl
  414de2:	mov    edi,0x677e6125
  414de7:	pop    edi
  414de8:	aas    
  414de9:	mov    ds:0xae95a8a1,al
  414dee:	shl    bh,0x9b
  414df1:	adc    ah,BYTE PTR [esi-0x59833691]
  414df7:	stos   BYTE PTR es:[edi],al
  414df8:	or     ebp,DWORD PTR ds:0x16f4ad53
  414dfe:	sub    cl,al
  414e00:	fnstenv [ecx-0x59807929]
  414e06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e07:	dec    eax
  414e08:	ret    0x4587
  414e0b:	sbb    BYTE PTR [edi-0x4d],dh
  414e0e:	add    ch,ch
  414e10:	scas   eax,DWORD PTR es:[edi]
  414e11:	mov    al,dh
  414e13:	(bad)  
  414e14:	sbb    ecx,edx
  414e16:	mov    eax,0x4c8438e8
  414e1b:	dec    edx
  414e1c:	sbb    dl,BYTE PTR [ecx+0x752d9c10]
  414e22:	mov    ebx,ebp
  414e24:	push   edi
  414e25:	xor    BYTE PTR [edi-0x38],bl
  414e28:	xchg   edi,eax
  414e29:	aas    
  414e2a:	sub    BYTE PTR [edi],0x11
  414e2d:	call   0xef46e86b
  414e32:	(bad)  
  414e33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e34:	mov    eax,ds:0x42eb3d83
  414e39:	sub    edi,DWORD PTR ds:0x844ea23e
  414e3f:	int    0x54
  414e41:	and    DWORD PTR [ebx+0x6339e1a0],esp
  414e47:	or     edx,DWORD PTR [ebx]
  414e49:	push   0x64
  414e4b:	jecxz  0x414ea0
  414e4d:	fdiv   QWORD PTR [ecx+eiz*4]
  414e50:	fwait
  414e51:	dec    ebx
  414e52:	out    0x87,al
  414e54:	mov    WORD PTR ds:0x688fe2c3,cs
  414e5a:	mov    bh,0x45
  414e5c:	icebp  
  414e5d:	push   0x24
  414e5f:	sub    edx,ecx
  414e61:	jp     0x414de9
  414e63:	xchg   ecx,eax
  414e64:	fdivr  QWORD PTR [edx+0x430d5b93]
  414e6a:	inc    ebp
  414e6b:	mov    al,dh
  414e6d:	aam    0x81
  414e6f:	adc    BYTE PTR [edx],al
  414e71:	outs   dx,BYTE PTR ds:[esi]
  414e72:	es sti 
  414e74:	xchg   DWORD PTR [ecx],edi
  414e76:	adc    eax,0x3af8c57a
  414e7b:	out    0x6d,al
  414e7d:	sbb    edx,ebx
  414e7f:	mov    dh,0xa0
  414e81:	jno    0x414e41
  414e83:	sti    
  414e84:	iret   
  414e85:	js     0x414e77
  414e87:	jae    0x414eda
  414e89:	sub    BYTE PTR [edx+0x71],0x6f
  414e8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e8e:	cmp    edi,DWORD PTR [ecx+0x66]
  414e91:	pop    ss
  414e92:	hlt    
  414e93:	and    al,0x1
  414e95:	cmp    esp,DWORD PTR [ebx+0x395b0877]
  414e9b:	shl    DWORD PTR [edi+0x63],0xba
  414e9f:	js     0x414ea3
  414ea1:	jg     0x414eb6
  414ea3:	jns    0x414e58
  414ea5:	xor    bh,BYTE PTR [ebp+0x33]
  414ea8:	stos   BYTE PTR es:[edi],al
  414ea9:	ja     0x414e4f
  414eab:	mov    WORD PTR [edi],?
  414ead:	clc    
  414eae:	(bad)  
  414eaf:	outs   dx,DWORD PTR ds:[esi]
  414eb0:	les    esi,FWORD PTR [eax-0x5d123253]
  414eb6:	jb     0x414e8c
  414eb8:	jmp    0x1082d2c2
  414ebd:	dec    ebp
  414ebe:	fst    DWORD PTR [esi+edx*4]
  414ec1:	cmp    bl,BYTE PTR [ecx-0x3]
  414ec4:	ja     0x414f13
  414ec6:	loop   0x414f15
  414ec8:	push   es
  414ec9:	imul   ebx,edi,0xaf004c43
  414ecf:	retf   0xb115
  414ed2:	bnd jge 0x414ed5
  414ed5:	pop    ecx
  414ed6:	xchg   ebp,eax
  414ed7:	inc    ecx
  414ed8:	mov    ebp,0x4f87ae8a
  414edd:	mov    edi,0xe285199e
  414ee2:	ds aas 
  414ee4:	xchg   esi,eax
  414ee5:	(bad)  
  414ee6:	xchg   BYTE PTR [esi],ch
  414ee8:	add    eax,0x272e1b3d
  414eed:	mov    eax,ds:0x83be667d
  414ef2:	pop    ecx
  414ef3:	scas   al,BYTE PTR es:[edi]
  414ef4:	rcr    edi,1
  414ef6:	mov    esp,0x32b00f4
  414efb:	hlt    
  414efc:	xor    BYTE PTR [ecx+0x7ecf3506],al
  414f02:	scas   eax,DWORD PTR es:[edi]
  414f03:	lahf   
  414f04:	add    al,BYTE PTR [eax]
  414f06:	lods   eax,DWORD PTR ds:[esi]
  414f07:	inc    esp
  414f08:	dec    edi
  414f09:	mov    eax,ds:0x89e54d8c
  414f0e:	add    dl,0xef
  414f11:	les    esp,FWORD PTR [edi]
  414f13:	shr    DWORD PTR [edx+0xdb84a39],1
  414f19:	jmp    ecx
  414f1b:	scas   eax,DWORD PTR es:[edi]
  414f1c:	mov    ebx,0xb8cbcb45
  414f21:	outs   dx,DWORD PTR ds:[esi]
  414f22:	push   esi
  414f23:	add    BYTE PTR [ecx+0x7299105f],dh
  414f29:	push   edi
  414f2a:	and    al,0x1b
  414f2c:	jl     0x414f44
  414f2e:	and    eax,0x866ebe36
  414f33:	pop    esi
  414f34:	xchg   ebp,eax
  414f35:	mov    BYTE PTR [edx+esi*4+0xc228df3],ch
  414f3c:	arpl   WORD PTR ds:[eax+0x68],bp
  414f40:	les    ecx,FWORD PTR [ebp+0x37]
  414f43:	out    dx,al
  414f44:	xchg   esp,eax
  414f45:	popf   
  414f46:	or     dl,bh
  414f48:	arpl   WORD PTR [ebx-0x44],si
  414f4b:	rol    BYTE PTR [edx-0x52b958f5],0xb
  414f52:	xor    dh,BYTE PTR [ebp+eax*1-0x1a785a03]
  414f59:	xlat   BYTE PTR ds:[ebx]
  414f5a:	inc    eax
  414f5b:	cwde   
  414f5c:	sbb    esi,edx
  414f5e:	(bad)  
  414f5f:	inc    edi
  414f60:	je     0x414f98
  414f62:	dec    ecx
  414f63:	sbb    al,0xbe
  414f65:	and    al,0x46
  414f67:	jl     0x414eea
  414f69:	shr    ebp,0xca
  414f6c:	je     0x414fca
  414f6e:	out    0xd1,al
  414f70:	dec    esi
  414f71:	mov    eax,0xd287690d
  414f76:	pop    ecx
  414f77:	dec    esp
  414f78:	js     0x414f9d
  414f7a:	dec    BYTE PTR [eax-0x978c842]
  414f80:	xchg   ecx,eax
  414f81:	fcom   QWORD PTR [esi+0x49dba14]
  414f87:	adc    eax,0x27d60795
  414f8c:	clc    
  414f8d:	adc    eax,0x1976d76c
  414f92:	call   0xb99e:0xd2a169d2
  414f99:	jp     0x414f38
  414f9b:	pushf  
  414f9c:	jle    0x414f4d
  414f9e:	cmp    ebp,DWORD PTR [ebp-0x5e70e889]
  414fa4:	mov    eax,ss
  414fa6:	arpl   ax,bp
  414fa8:	stos   DWORD PTR es:[edi],eax
  414fa9:	xchg   DWORD PTR [edi+0x667665fc],ebx
  414faf:	mov    ds:0xa9f93124,al
  414fb4:	sbb    eax,0xd4f1e803
  414fb9:	mov    eax,0x8537202b
  414fbe:	scas   al,BYTE PTR es:[edi]
  414fbf:	mov    edx,0xd33d7c17
  414fc4:	mov    eax,ds:0xf8e265ea
  414fc9:	sahf   
  414fca:	cmp    esp,0xffffff9d
  414fcd:	mov    ah,0xbe
  414fcf:	xchg   ecx,eax
  414fd0:	adc    ch,dh
  414fd2:	ficomp WORD PTR [eax+ecx*1+0x74]
  414fd6:	or     al,0xa0
  414fd8:	std    
  414fd9:	mov    al,ds:0xa00bb594
  414fde:	ja     0x414fab
  414fe0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fe1:	mov    esi,0x9c1eb516
  414fe6:	clc    
  414fe7:	je     0x414f7f
  414fe9:	mov    WORD PTR [edx+0xd],fs
  414fec:	inc    ebp
  414fed:	fdivr  DWORD PTR [eax-0x41e5fd2c]
  414ff3:	sbb    edi,DWORD PTR [ecx+0x45]
  414ff6:	dec    esp
  414ff7:	adc    eax,0xe299506c
  414ffc:	lods   eax,DWORD PTR ds:[esi]
  414ffd:	jno    0x414f91
  414fff:	fimul  WORD PTR [ebx]
  415001:	cmp    BYTE PTR [edx],ah
  415003:	dec    edi
  415004:	cwde   
  415005:	mov    DWORD PTR [eax+ecx*4-0x3b],ebx
  415009:	lea    eax,[ecx-0x18]
  41500c:	addr16 jne 0x414fb1
  41500f:	and    BYTE PTR [edi-0x43aa01a2],ah
  415015:	gs xchg edx,eax
  415017:	and    DWORD PTR [edi],edx
  415019:	push   ebx
  41501a:	jp     0x41504b
  41501c:	adc    ebp,edx
  41501e:	stc    
  41501f:	jne    0x41504d
  415021:	pop    es
  415022:	adc    esp,esp
  415024:	jb     0x414fdd
  415026:	stc    
  415027:	int    0xc7
  415029:	xchg   ebp,eax
  41502a:	mov    dh,0x9
  41502c:	ins    BYTE PTR es:[edi],dx
  41502d:	push   ebx
  41502e:	adc    eax,0x27f67083
  415033:	xor    DWORD PTR ds:0x9e585e6f,ecx
  415039:	pop    edx
  41503a:	cwde   
  41503b:	out    0xea,al
  41503d:	(bad)  
  41503e:	adc    eax,0x9d403b6b
  415043:	lock ret 0x3b5
  415047:	je     0x4150b6
  415049:	lods   eax,DWORD PTR ds:[esi]
  41504a:	xchg   ecx,eax
  41504b:	mov    bl,0xc2
  41504d:	push   edx
  41504e:	mov    bh,0x67
  415050:	push   ecx
  415051:	mov    esi,0x7170a0d2
  415056:	rol    ch,0x80
  415059:	add    esp,DWORD PTR [edi]
  41505b:	enter  0x4293,0xdd
  41505f:	call   DWORD PTR [eax-0x638dd1e6]
  415065:	mov    dl,BYTE PTR ds:0x10e9bc2e
  41506b:	repz (bad) 
  41506d:	rol    BYTE PTR [ebx-0x3c],1
  415070:	cmp    cl,BYTE PTR [esi]
  415072:	mov    esi,0xcd2c23d
  415077:	inc    edx
  415078:	loop   0x4150b9
  41507a:	xchg   esi,eax
  41507b:	xor    BYTE PTR [eax],dh
  41507d:	lds    ebp,FWORD PTR [edx-0x67]
  415080:	jp     0x4150d9
  415082:	xlat   BYTE PTR ds:[ebx]
  415083:	or     eax,0x6a2687a8
  415088:	adc    al,0x7a
  41508a:	xchg   DWORD PTR [eax],esp
  41508c:	fcmove st,st(6)
  41508e:	popa   
  41508f:	imul   esi,DWORD PTR [ebp-0x59],0x76358406
  415096:	push   es
  415097:	call   0x5bb7:0x430a1ad0
  41509e:	adc    esi,0xffffffd5
  4150a1:	mov    ds:0xcdf37dba,eax
  4150a6:	cs jmp 0x41504e
  4150a9:	ds js  0x415099
  4150ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150ad:	stos   DWORD PTR es:[edi],eax
  4150ae:	mov    dh,0x1d
  4150b0:	push   ebx
  4150b1:	sub    esi,DWORD PTR [esi+edi*4+0x5c2a8d4b]
  4150b8:	test   eax,0xbdac5f26
  4150bd:	push   0xffffff81
  4150bf:	sub    bl,bh
  4150c1:	out    dx,al
  4150c2:	fucom  st(5)
  4150c4:	push   esi
  4150c5:	pop    ebp
  4150c6:	xor    al,0x63
  4150c8:	cdq    
  4150c9:	pushf  
  4150ca:	fistp  QWORD PTR [ebp-0x68]
  4150cd:	jmp    0x4150eb
  4150cf:	(bad)  
  4150d0:	push   0xffffffc7
  4150d2:	test   BYTE PTR [edx+0x4f774ba7],0xad
  4150d9:	jle    0x415118
  4150db:	mov    edi,0xe206f8cb
  4150e0:	mov    ecx,0x4c413b1
  4150e5:	add    al,BYTE PTR [ebx+0xb88334]
  4150eb:	imul   esi,ebp,0x57
  4150ee:	in     eax,dx
  4150ef:	or     cl,ah
  4150f1:	lods   al,BYTE PTR ds:[esi]
  4150f2:	and    BYTE PTR es:[ecx],al
  4150f5:	xor    al,0xd2
  4150f7:	ret    
  4150f8:	lods   eax,DWORD PTR ds:[esi]
  4150f9:	call   0xc4cb7c85
  4150fe:	out    0x35,al
  415100:	in     al,0xdd
  415102:	sub    dh,BYTE PTR [ebx]
  415104:	and    al,0x26
  415106:	rol    BYTE PTR [ebx+0x6d],cl
  415109:	mov    ch,0xc9
  41510b:	mov    dl,0xe7
  41510d:	xor    al,0x3
  41510f:	push   esi
  415110:	pop    esi
  415111:	stos   DWORD PTR es:[edi],eax
  415112:	cld    
  415113:	fsubr  QWORD PTR [edi+0x67d68678]
  415119:	dec    ecx
  41511a:	ret    0xad1a
  41511d:	jmp    0x246f98d
  415122:	ret    
  415123:	mov    esp,0xb2eff00c
  415128:	shl    esi,1
  41512a:	mov    ?,WORD PTR [edi]
  41512c:	add    BYTE PTR [edx],0xca
  41512f:	and    DWORD PTR [ebx+0x57521e93],ecx
  415135:	jns    0x4150e4
  415137:	inc    BYTE PTR [ebx]
  415139:	xor    cl,0xfb
  41513c:	mov    bh,0x30
  41513e:	(bad)  
  41513f:	dec    edi
  415140:	adc    DWORD PTR [esi+ebp*2],0xfffffff2
  415144:	sub    BYTE PTR [edx],al
  415146:	jl     0x415113
  415148:	mov    ah,0x3c
  41514a:	inc    eax
  41514b:	sbb    al,0x3a
  41514d:	sti    
  41514e:	pop    ebx
  41514f:	clc    
  415150:	div    BYTE PTR [ecx+0x36]
  415153:	dec    edx
  415154:	xor    eax,0x42262c0e
  415159:	(bad)  
  41515a:	sub    al,dl
  41515c:	dec    edi
  41515d:	cdq    
  41515e:	push   es
  41515f:	pop    ds
  415160:	(bad)
  415165:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415166:	jmp    0x26dd:0x1820e123
  41516d:	and    al,0x46
  41516f:	dec    eax
  415170:	xchg   esi,eax
  415171:	mov    al,ds:0xef37ec20
  415176:	add    edi,edi
  415178:	mov    dh,0x75
  41517a:	push   ebx
  41517b:	addr16 in eax,0xae
  41517e:	sbb    BYTE PTR ds:0xef21d8c3,dl
  415184:	cmp    BYTE PTR [ecx+0x14b5708a],dh
  41518a:	call   0x260a:0xdba7d05f
  415191:	sbb    al,0x8a
  415193:	call   0x43235793
  415198:	or     ebx,DWORD PTR [esp+esi*1-0x4]
  41519c:	inc    edx
  41519d:	leave  
  41519e:	jl     0x415198
  4151a0:	int    0x80
  4151a2:	xor    al,0x34
  4151a4:	pop    ecx
  4151a5:	xchg   edx,eax
  4151a6:	mov    WORD PTR [ecx+0x187dd4d9],cs
  4151ac:	sbb    BYTE PTR [ebp-0x508c73c0],ah
  4151b2:	adc    eax,0x4ca93a09
  4151b7:	mov    esi,DWORD PTR [ecx-0x68]
  4151ba:	inc    cx
  4151bc:	mov    DWORD PTR [ebx-0x4f],ebx
  4151bf:	adc    al,BYTE PTR [ebx+0x85ac941]
  4151c5:	inc    eax
  4151c6:	jmp    0x4151e9
  4151c8:	mov    DWORD PTR [ebx+0x7f],ecx
  4151cb:	js     0x41519e
  4151cd:	xor    BYTE PTR [esi],cl
  4151cf:	mov    eax,ds:0xf09e5f30
  4151d4:	mov    bl,0x25
  4151d6:	jae    0x415246
  4151d8:	push   0x51
  4151da:	push   ebx
  4151db:	mov    ds:0x15e5d40d,eax
  4151e0:	jnp    0x415195
  4151e2:	mov    esp,0x35ac2b1d
  4151e7:	or     esp,ecx
  4151e9:	(bad)  
  4151ea:	or     al,0x41
  4151ec:	stos   DWORD PTR es:[edi],eax
  4151ed:	xchg   ebx,eax
  4151ee:	ret    
  4151ef:	dec    edx
  4151f0:	ror    DWORD PTR ds:0x5e9fc68d,cl
  4151f6:	(bad)  
  4151f7:	jp     0x415181
  4151f9:	inc    BYTE PTR [ebp-0x27]
  4151fc:	sbb    BYTE PTR [esi-0x61],cl
  4151ff:	jl     0x4151f2
  415201:	pop    esi
  415202:	iret   
  415203:	dec    esp
  415204:	sbb    BYTE PTR [ecx+eax*4],ch
  415207:	cmp    al,0x52
  415209:	mov    dh,0x66
  41520b:	lock push eax
  41520d:	inc    eax
  41520e:	dec    edi
  41520f:	cs sub ecx,esp
  415212:	not    DWORD PTR [ebp+0x3dd2b57f]
  415218:	fidiv  DWORD PTR [edx-0x7c]
  41521b:	inc    ebx
  41521c:	dec    edx
  41521d:	cmp    ah,BYTE PTR [eax-0x40160a6c]
  415223:	push   ecx
  415224:	mov    eax,0x7e24e253
  415229:	jne    0x415285
  41522b:	pop    ebp
  41522c:	push   esp
  41522d:	dec    esp
  41522e:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  415230:	jb     0x41521c
  415232:	cmp    DWORD PTR [eax+0x61],edx
  415235:	dec    eax
  415236:	popa   
  415237:	and    ch,BYTE PTR [eax+0x1eb9369c]
  41523d:	jecxz  0x41529a
  41523f:	push   cs
  415240:	sbb    BYTE PTR [edi*4-0x19f8c1c4],bh
  415247:	mov    bh,0x76
  415249:	adc    al,0x8a
  41524b:	lods   al,BYTE PTR ds:[esi]
  41524c:	cld    
  41524d:	jns    0x41528d
  41524f:	jecxz  0x4151f7
  415251:	jne    0x4152c4
  415253:	aad    0xc1
  415255:	and    eax,0xa4c2c93f
  41525a:	pop    ecx
  41525b:	pushf  
  41525c:	mov    ch,BYTE PTR [eax+0x6e98c550]
  415262:	and    al,0x55
  415264:	push   edi
  415265:	mov    al,0xc3
  415267:	xlat   BYTE PTR ds:[ebx]
  415268:	(bad)  
  415269:	leave  
  41526a:	mov    DWORD PTR [ebp+0x4ada5ae9],0xc0da7f8b
  415274:	sub    BYTE PTR [edi+edx*8],al
  415277:	cmp    ch,ah
  415279:	imul   DWORD PTR es:[ecx-0x12]
  41527d:	imul   edx,DWORD PTR [edx+0x7a],0x71
  415281:	nop
  415282:	mul    BYTE PTR [edx]
  415284:	icebp  
  415285:	ja     0x415252
  415287:	retf   
  415288:	leave  
  415289:	enter  0xfc76,0x3d
  41528d:	call   0xd5824f04
  415292:	lahf   
  415293:	sub    edi,ebx
  415295:	mov    ch,0x30
  415297:	jp     0x4152e5
  415299:	or     BYTE PTR [esi+0x78],dh
  41529c:	dec    edx
  41529d:	cmc    
  41529e:	inc    eax
  41529f:	ds cmp bh,0x85
  4152a3:	ja     0x41522b
  4152a5:	fld    TBYTE PTR [eax+0x237f1057]
  4152ab:	leave  
  4152ac:	fwait
  4152ad:	or     BYTE PTR [ebp+0x5f],ch
  4152b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152b1:	push   edi
  4152b2:	ffree  st(0)
  4152b4:	aas    
  4152b5:	jmp    0xc1f07da2
  4152ba:	pop    esi
  4152bb:	retf   0xebde
  4152be:	in     eax,0x4
  4152c0:	rcl    BYTE PTR [esi+ecx*1-0xf],1
  4152c4:	sbb    eax,0x9707307f
  4152c9:	jbe    0x4152e2
  4152cb:	test   eax,esp
  4152cd:	(bad)  
  4152ce:	xor    al,0xb2
  4152d0:	sti    
  4152d1:	mov    DWORD PTR [edi],ebp
  4152d3:	daa    
  4152d4:	popf   
  4152d5:	ror    BYTE PTR [ecx+0x186f44f5],1
  4152db:	clc    
  4152dc:	push   ebx
  4152dd:	sbb    bl,al
  4152df:	xchg   ebx,eax
  4152e0:	push   esp
  4152e1:	fadd   QWORD PTR [eax]
  4152e3:	(bad)  
  4152e4:	mov    eax,ds:0xee569c97
  4152e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152ea:	lahf   
  4152eb:	mov    al,ds:0xa4900244
  4152f0:	stc    
  4152f1:	cli    
  4152f2:	stos   BYTE PTR es:[edi],al
  4152f3:	scas   eax,DWORD PTR es:[edi]
  4152f4:	mov    al,0x45
  4152f6:	cli    
  4152f7:	imul   ecx,DWORD PTR [ebx],0x60f1a90d
  4152fd:	fwait
  4152fe:	(bad)  
  4152ff:	push   esp
  415300:	mov    dh,0x66
  415302:	enter  0x3cad,0x4
  415306:	or     eax,0x9cacd053
  41530b:	xor    DWORD PTR [edx-0x72bdeaa],esi
  415311:	jae    0x4152da
  415313:	pop    eax
  415314:	push   0x97d3f5b3
  415319:	inc    edx
  41531a:	push   cs
  41531b:	shr    DWORD PTR [edi+0x57],cl
  41531e:	mov    cl,0x1a
  415320:	ins    DWORD PTR es:[edi],dx
  415321:	arpl   WORD PTR [edx-0x51745ce5],di
  415327:	cmp    ah,al
  415329:	(bad)  
  41532a:	mov    WORD PTR cs:[eax],cs
  41532d:	push   ds
  41532e:	jns    0x415378
  415330:	jg     0x41532d
  415332:	(bad)  
  415333:	jmp    0x76774252
  415338:	das    
  415339:	repnz test DWORD PTR [ecx+0x47],0x26305095
  415341:	xchg   ebp,edi
  415343:	addr16 inc ebx
  415345:	mov    WORD PTR [edx+0x3c664b42],ds
  41534b:	loopne 0x4153c7
  41534d:	call   0x161bc622
  415352:	lea    edx,[edx+0x7a]
  415355:	out    0x79,al
  415357:	xchg   ebx,eax
  415358:	jno    0x4153ca
  41535a:	dec    edx
  41535b:	xor    al,0x2a
  41535d:	sbb    al,0xfa
  41535f:	jnp    0x4153b8
  415361:	arpl   WORD PTR [edx+0x447710e5],si
  415367:	xchg   BYTE PTR [edi-0x5f30e97],dl
  41536d:	out    0x26,al
  41536f:	lock mov ds:0x70060dce,al
  415375:	scas   al,BYTE PTR es:[edi]
  415376:	xchg   edx,eax
  415377:	aam    0x41
  415379:	loope  0x41530f
  41537b:	add    al,0xa8
  41537d:	nop
  41537e:	sub    eax,0xb6be9741
  415383:	pop    es
  415384:	in     eax,0x29
  415386:	sub    BYTE PTR ds:[ebp-0x18],ah
  41538a:	pop    esi
  41538b:	sub    bh,cl
  41538d:	xor    ecx,DWORD PTR [ebx+0x30bfc994]
  415393:	jecxz  0x41540f
  415395:	or     DWORD PTR [eax+0x5188271a],edx
  41539b:	mov    eax,ds:0xe698a7d9
  4153a0:	dec    esp
  4153a1:	lahf   
  4153a2:	lahf   
  4153a3:	sub    al,0x6e
  4153a5:	(bad)  
  4153a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4153a7:	out    dx,eax
  4153a8:	mov    bl,0x7b
  4153aa:	mov    esi,0xd457e054
  4153af:	rcl    DWORD PTR [edx+ebx*4+0x75],1
  4153b3:	jmp    0x4153b8
  4153b5:	clc    
  4153b6:	in     al,0x15
  4153b8:	sub    bh,bl
  4153ba:	pusha  
  4153bb:	jmp    0x8c90:0x18911fdb
  4153c2:	test   edx,ebx
  4153c4:	add    ah,dl
  4153c6:	(bad)  
  4153c8:	add    bh,bl
  4153ca:	pop    ecx
  4153cb:	test   eax,0x555b2c11
  4153d0:	sub    cl,ah
  4153d2:	push   esi
  4153d3:	clc    
  4153d4:	mov    esi,0xd21a3ce9
  4153d9:	je     0x4153c1
  4153db:	sbb    bh,dh
  4153dd:	shl    DWORD PTR [ebx-0x69],1
  4153e0:	mov    bh,0x33
  4153e2:	and    DWORD PTR [esi-0x41],ecx
  4153e5:	xor    edi,edx
  4153e7:	inc    eax
  4153e8:	pop    ebp
  4153e9:	mov    al,0xb0
  4153eb:	xchg   BYTE PTR [ebx*4+0x6f09769c],dl
  4153f2:	mov    cl,0xfd
  4153f4:	fstp   st(0)
  4153f6:	jge    0x41537a
  4153f8:	xor    BYTE PTR [esi],bh
  4153fa:	leave  
  4153fb:	sbb    ebx,DWORD PTR ds:[edi+ebp*8+0x687fc35b]
  415403:	rcl    dl,0x61
  415406:	bound  esi,QWORD PTR [eax+0x5c]
  415409:	xor    ebx,ebx
  41540b:	mov    al,ds:0xf118b81b
  415410:	or     esi,DWORD PTR [eax+0x26a1054a]
  415416:	push   edi
  415417:	xor    edx,0x634145c1
  41541d:	stos   DWORD PTR es:[edi],eax
  41541e:	add    al,0x33
  415420:	or     ch,BYTE PTR [edx+0x7b]
  415423:	and    BYTE PTR [edi],ch
  415425:	pop    edx
  415426:	adc    eax,0x51711b43
  41542b:	add    edx,DWORD PTR [ecx+ecx*1-0x44]
  41542f:	jnp    0x4153ea
  415431:	xchg   ebx,eax
  415432:	xchg   ebx,eax
  415433:	and    DWORD PTR [esi-0xc5427a0],0xffffffa5
  41543a:	ret    0x5277
  41543d:	popa   
  41543e:	or     ecx,esi
  415440:	push   ds
  415441:	xchg   esp,eax
  415442:	lods   eax,DWORD PTR ds:[esi]
  415443:	bound  ecx,QWORD PTR [ebx]
  415445:	jl     0x415465
  415447:	test   ebp,esp
  415449:	(bad)  
  41544a:	push   esp
  41544b:	stos   DWORD PTR es:[edi],eax
  41544c:	or     edi,DWORD PTR [esi+ebp*2]
  41544f:	mov    ds:0x5608e43e,al
  415454:	jl     0x415496
  415456:	adc    eax,0x6c0aaeef
  41545b:	pop    ss
  41545c:	repnz pushf 
  41545e:	mov    DWORD PTR ds:0xc8227577,edi
  415464:	jbe    0x415423
  415466:	popf   
  415467:	out    dx,eax
  415468:	iret   
  415469:	mov    edx,ecx
  41546b:	daa    
  41546c:	ret    0x8fa3
  41546f:	shr    eax,1
  415471:	mov    ecx,0x7dc94813
  415476:	and    bh,BYTE PTR [edi+ebx*4]
  415479:	in     al,dx
  41547a:	loopne 0x415496
  41547c:	popf   
  41547d:	pop    eax
  41547e:	nop
  41547f:	push   esi
  415480:	int    0xff
  415482:	inc    esp
  415483:	cdq    
  415484:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415485:	jae    0x4154a2
  415487:	xchg   DWORD PTR [ecx+ebp*2-0x44],esi
  41548b:	scas   eax,DWORD PTR es:[edi]
  41548c:	inc    edx
  41548d:	jg     0x4154a2
  41548f:	inc    edi
  415490:	in     eax,dx
  415491:	pop    ds
  415492:	rol    BYTE PTR [edi],1
  415494:	or     ecx,ecx
  415496:	call   0xc41f:0xe493e4fd
  41549d:	sti    
  41549e:	dec    ecx
  41549f:	jp     0x415511
  4154a1:	sub    al,0xbe
  4154a3:	mov    eax,DWORD PTR [ebx]
  4154a5:	or     bl,bh
  4154a7:	push   edx
  4154a8:	in     al,dx
  4154a9:	ficom  DWORD PTR [edx*2+0x182b8fa1]
  4154b0:	sbb    eax,0x4dc291ec
  4154b5:	xor    DWORD PTR [eax+0x5fdf77bc],esp
  4154bb:	(bad)  
  4154bc:	push   ebx
  4154bd:	mov    cl,0x5
  4154bf:	shr    DWORD PTR [ebx-0xe],cl
  4154c2:	pop    ds
  4154c3:	adc    eax,DWORD PTR [ecx]
  4154c5:	jae    0x41552b
  4154c7:	pop    edi
  4154c8:	dec    esp
  4154c9:	or     edi,esp
  4154cb:	add    al,BYTE PTR [ebp-0x3c]
  4154ce:	push   0xfa10d4ae
  4154d3:	or     DWORD PTR [edx+0xe],esi
  4154d6:	pop    es
  4154d7:	pop    edi
  4154d8:	mov    edi,0x6c1cb519
  4154dd:	pop    ds
  4154de:	xchg   esp,esp
  4154e0:	mov    eax,ds:0x615c1e59
  4154e5:	cmp    DWORD PTR [esi],esp
  4154e7:	test   BYTE PTR [edi-0x7a],ah
  4154ea:	dec    esi
  4154eb:	push   ecx
  4154ec:	neg    BYTE PTR [esi+0x59]
  4154ef:	in     eax,0x3f
  4154f1:	pop    es
  4154f2:	push   eax
  4154f3:	into   
  4154f4:	in     eax,0x61
  4154f6:	push   esi
  4154f7:	pop    ebp
  4154f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154f9:	daa    
  4154fa:	nop
  4154fb:	fisttp DWORD PTR [ecx-0x9]
  4154fe:	sti    
  4154ff:	pop    ecx
  415500:	ret    0xddfd
  415503:	push   edx
  415504:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415505:	rcl    BYTE PTR [esi+edi*4],cl
  415508:	push   ds
  415509:	pop    edx
  41550a:	clc    
  41550b:	pop    esp
  41550c:	add    ch,ah
  41550e:	ja     0x4154da
  415510:	cmp    edx,edi
  415512:	or     ch,cl
  415514:	stos   BYTE PTR es:[edi],al
  415515:	push   ebx
  415516:	mov    edi,0xfc8baf87
  41551b:	push   edi
  41551c:	hlt    
  41551d:	scas   eax,DWORD PTR es:[edi]
  41551e:	add    eax,0xd0807922
  415523:	push   esp
  415524:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415525:	dec    ebp
  415526:	loopne 0x415519
  415528:	mov    cl,0x8b
  41552a:	sbb    al,0x13
  41552c:	xor    ecx,DWORD PTR [esi-0x5]
  41552f:	shl    BYTE PTR [esi],cl
  415531:	pop    esp
  415532:	lds    esp,FWORD PTR [ebp-0x36e9d1c5]
  415538:	rol    BYTE PTR [esi+ecx*2+0x79],1
  41553c:	mov    eax,0xd80d4c0
  415541:	xor    edx,DWORD PTR [edi-0x64]
  415544:	xchg   BYTE PTR [ebx+edi*8-0x141f64d3],dh
  41554b:	out    0x84,eax
  41554d:	sahf   
  41554e:	call   0x3a5578a3
  415553:	adc    ebx,DWORD PTR [ebx-0x20]
  415556:	add    ebp,DWORD PTR [ebp-0x36440a50]
  41555c:	es icebp 
  41555e:	pop    esi
  41555f:	dec    edi
  415560:	pusha  
  415561:	jle    0x41551d
  415563:	data16 ins BYTE PTR es:[edi],dx
  415565:	fcom   QWORD PTR [ebx]
  415567:	xchg   edx,eax
  415568:	lods   eax,DWORD PTR ds:[esi]
  415569:	jb     0x4154f3
  41556b:	into   
  41556c:	mov    edi,ecx
  41556e:	data16 clc 
  415570:	aas    
  415571:	cmp    al,0x5f
  415573:	ins    BYTE PTR es:[edi],dx
  415574:	(bad)  
  415575:	sbb    DWORD PTR [edx-0x4aabc288],0xc9956583
  41557f:	sbb    BYTE PTR [edx],bl
  415581:	cli    
  415582:	inc    ebp
  415583:	sbb    BYTE PTR [ebx],0xff
  415586:	call   0x4725e0b7
  41558b:	shl    DWORD PTR [ebx+0x568bdc97],cl
  415591:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415592:	xchg   ebp,eax
  415593:	adc    DWORD PTR [ebp+0x377bf3e3],edx
  415599:	adc    BYTE PTR [edi],bh
  41559b:	stos   DWORD PTR es:[edi],eax
  41559c:	aas    
  41559d:	ins    DWORD PTR es:[edi],dx
  41559e:	mov    al,ds:0x66f9ecd7
  4155a3:	popf   
  4155a4:	fbld   TBYTE PTR [ebx+0x5059dad4]
  4155aa:	or     bl,BYTE PTR ds:0xcbbb2f05
  4155b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155b1:	lds    ecx,FWORD PTR [esi+edi*4-0x149d9c54]
  4155b8:	popf   
  4155b9:	jecxz  0x4155b2
  4155bb:	(bad)  
  4155bc:	xor    cl,BYTE PTR ds:[esi]
  4155bf:	lods   eax,DWORD PTR ds:[esi]
  4155c0:	imul   ebx,esp,0xf11c3e76
  4155c6:	mov    edx,0x3244b574
  4155cb:	jnp    0x4155f6
  4155cd:	xchg   ecx,eax
  4155ce:	out    0x3b,al
  4155d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155d1:	in     eax,0x49
  4155d3:	push   eax
  4155d4:	fwait
  4155d5:	jmp    0x39e4:0x475b3f36
  4155dc:	stos   BYTE PTR es:[edi],al
  4155dd:	push   cs
  4155de:	jno    0x415624
  4155e0:	push   edi
  4155e1:	pop    eax
  4155e2:	(bad)  
  4155e3:	jae    0x415569
  4155e5:	and    esi,ebp
  4155e7:	into   
  4155e8:	test   eax,0x7178099c
  4155ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155ee:	ror    DWORD PTR [edx-0x77],1
  4155f1:	out    0x37,al
  4155f3:	ins    BYTE PTR es:[edi],dx
  4155f4:	xchg   ecx,eax
  4155f5:	mov    WORD PTR [ebp+0x7d],cs
  4155f8:	repnz ins BYTE PTR es:[edi],dx
  4155fa:	dec    edi
  4155fb:	jmp    0x415636
  4155fd:	mov    eax,0x2f6a4855
  415602:	pop    ebx
  415603:	bndstx [ebp+ecx*2-0x61891212],bnd0
  41560b:	xor    ah,BYTE PTR [ecx-0x200e3246]
  415611:	stos   BYTE PTR es:[edi],al
  415612:	dec    edx
  415613:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415614:	sub    ecx,DWORD PTR [ecx]
  415616:	cmc    
  415617:	and    BYTE PTR [edx-0x5d],ah
  41561a:	mov    al,ds:0x214f0312
  41561f:	fdiv   QWORD PTR [ebx-0x20]
  415622:	inc    ecx
  415623:	cmp    BYTE PTR [ecx+0x2e],bl
  415626:	mov    ah,0x7d
  415628:	lds    ebp,FWORD PTR [ebx+0x68]
  41562b:	pop    ecx
  41562c:	ss cmp al,0xfb
  41562f:	push   edx
  415630:	push   esp
  415631:	data16 ficomp WORD PTR [ebp-0x3]
  415635:	xor    ebp,eax
  415637:	shl    BYTE PTR [eax+edx*8],1
  41563a:	stos   BYTE PTR es:[edi],al
  41563b:	js     0x4155df
  41563d:	loopne 0x415692
  41563f:	lods   eax,DWORD PTR ds:[esi]
  415640:	and    eax,0x5659d0b4
  415645:	cmp    al,0xc4
  415647:	xchg   edx,eax
  415648:	xchg   edi,eax
  415649:	in     al,0x15
  41564b:	adc    DWORD PTR [esi+eax*2+0x5852e952],eax
  415652:	fadd   st,st(6)
  415654:	test   eax,0x75431939
  415659:	jnp    0x415615
  41565b:	(bad)  
  41565c:	mov    cl,0x86
  41565e:	pop    edx
  41565f:	and    eax,0xf128f717
  415664:	arpl   si,cx
  415666:	xchg   ebx,eax
  415667:	and    DWORD PTR [eax],edx
  415669:	mov    cl,0xf3
  41566b:	cdq    
  41566c:	pop    esp
  41566d:	or     cl,BYTE PTR [esi]
  41566f:	push   edx
  415670:	and    bl,al
  415672:	shr    ch,1
  415674:	push   edi
  415675:	mov    bl,0x4c
  415677:	pop    esi
  415678:	mov    ebp,DWORD PTR [ebp+0x1db397b3]
  41567e:	dec    ebx
  41567f:	sti    
  415680:	inc    ebx
  415681:	adc    BYTE PTR [ecx-0x1dd51456],ch
  415687:	fcomp  DWORD PTR [esi]
  415689:	ret    
  41568a:	adc    BYTE PTR [esi+0x4440cb3e],cl
  415690:	fcmovne st,st(6)
  415692:	hlt    
  415693:	ficomp DWORD PTR [edi+0x2b]
  415696:	data16 jnp 0x4156ec
  415699:	push   esi
  41569a:	in     eax,dx
  41569b:	out    0xf4,eax
  41569d:	pop    ds
  41569e:	frstor [esi]
  4156a0:	aam    0xe
  4156a2:	sahf   
  4156a3:	(bad)  
  4156a4:	cmp    eax,0x32efd25a
  4156a9:	and    al,0xc7
  4156ab:	lock jns 0x415717
  4156ae:	pop    ecx
  4156af:	les    esi,FWORD PTR [edx]
  4156b1:	add    DWORD PTR [edi],ebx
  4156b3:	lds    ebx,FWORD PTR [edx+0x6d]
  4156b6:	add    al,BYTE PTR [esi]
  4156b8:	retf   0xce77
  4156bb:	cmp    BYTE PTR [ebp+0x76f46be1],bl
  4156c1:	push   esi
  4156c2:	popf   
  4156c3:	xchg   esp,eax
  4156c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156c5:	pop    esi
  4156c6:	daa    
  4156c7:	sub    esi,edi
  4156c9:	sbb    DWORD PTR [esi-0x194781f7],ebp
  4156cf:	mov    al,ds:0xebc746f0
  4156d4:	dec    ebp
  4156d5:	bnd je 0x41565d
  4156d8:	ins    BYTE PTR es:[edi],dx
  4156d9:	sub    DWORD PTR [esi+0x42],ebp
  4156dc:	or     al,0x9a
  4156de:	xchg   BYTE PTR [ecx-0x75],bl
  4156e1:	lods   al,BYTE PTR ds:[esi]
  4156e2:	xchg   ecx,eax
  4156e3:	loope  0x4156af
  4156e5:	out    0x78,eax
  4156e7:	std    
  4156e8:	or     dh,BYTE PTR [esi+0x53f8ac85]
  4156ee:	out    0x4e,al
  4156f0:	icebp  
  4156f1:	gs xchg edx,eax
  4156f3:	loope  0x415704
  4156f5:	imul   ebp,DWORD PTR [edi-0x77],0xa390e6ad
  4156fc:	sbb    al,0xa7
  4156fe:	dec    esi
  4156ff:	(bad)  
  415700:	cmc    
  415701:	sub    eax,0xe4e88a85
  415706:	jnp    0x41576d
  415708:	mov    dl,0x6
  41570a:	push   0xffffffe7
  41570c:	mov    ch,al
  41570e:	les    esp,FWORD PTR [eax]
  415710:	sbb    esi,eax
  415712:	out    dx,al
  415713:	scas   eax,DWORD PTR es:[edi]
  415714:	imul   edx,DWORD PTR [ebp-0x439b0d65],0xffffffbc
  41571b:	sbb    eax,DWORD PTR [ecx+0x1f779db4]
  415721:	jbe    0x415732
  415723:	or     al,bl
  415725:	repz lock xor al,0xc9
  415729:	cs push es
  41572b:	pop    ebx
  41572c:	ins    DWORD PTR es:[edi],dx
  41572d:	or     BYTE PTR [ecx-0x3e],ch
  415730:	call   FWORD PTR [ebp+0x62]
  415733:	sub    eax,0xfd620674
  415738:	es mov esi,0xb34c0b82
  41573e:	sbb    ah,BYTE PTR [ecx-0x36]
  415741:	add    DWORD PTR [edi],esp
  415743:	mov    ch,0xd2
  415745:	pop    edx
  415746:	jne    0x4156f0
  415748:	cmc    
  415749:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41574a:	and    BYTE PTR [ecx-0x6e],ah
  41574d:	lock rcr BYTE PTR ds:0xd9f645f1,0xa3
  415755:	or     BYTE PTR [ebx+0x5e],cl
  415758:	dec    esp
  415759:	lds    edi,FWORD PTR [ecx-0x4f9f9df6]
  41575f:	cmp    BYTE PTR [ebx],bh
  415761:	mov    ds:0x657277bb,eax
  415766:	push   es
  415767:	(bad)  
  415769:	int3   
  41576a:	push   es
  41576b:	mov    edi,0x5eed2ee2
  415770:	push   eax
  415771:	inc    esi
  415772:	push   esp
  415773:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415774:	add    al,0x53
  415776:	stos   DWORD PTR es:[edi],eax
  415777:	push   edi
  415778:	aaa    
  415779:	popf   
  41577a:	adc    DWORD PTR [ebp+0x93e0325],0x5fe909f2
  415784:	xchg   ebx,eax
  415785:	dec    eax
  415786:	stos   DWORD PTR es:[edi],eax
  415787:	xchg   edx,eax
  415788:	out    dx,eax
  415789:	ret    
  41578a:	ja     0x41579d
  41578c:	or     edx,ecx
  41578e:	retf   0x8fc0
  415791:	dec    esi
  415792:	xlat   BYTE PTR cs:[ebx]
  415794:	mov    eax,ds:0xa0c144c4
  415799:	retf   0x2da6
  41579c:	pop    es
  41579d:	push   0xffffff87
  41579f:	sbb    dh,BYTE PTR [edi+0x11435c0]
  4157a5:	std    
  4157a6:	dec    edx
  4157a7:	arpl   WORD PTR [edi-0x1d],dx
  4157aa:	xor    edx,DWORD PTR [eax+ebp*2+0xa]
  4157ae:	dec    esi
  4157af:	loope  0x415786
  4157b1:	les    ebp,FWORD PTR [ecx]
  4157b3:	out    0x11,al
  4157b5:	push   es
  4157b6:	mov    ch,0x43
  4157b8:	mov    ecx,0x3862a428
  4157bd:	hlt    
  4157be:	jno    0x415830
  4157c0:	in     eax,dx
  4157c1:	adc    dh,BYTE PTR [ebp+eiz*8-0x3496ea4f]
  4157c8:	mov    bh,0x85
  4157ca:	aas    
  4157cb:	rol    DWORD PTR [ebx+0x332a8eb],cl
  4157d1:	pop    ebp
  4157d2:	pop    eax
  4157d3:	fdivr  QWORD PTR [ebx]
  4157d5:	test   DWORD PTR [eax+0x574a0f2d],eax
  4157db:	add    BYTE PTR [esi+0x1],ch
  4157de:	ja     0x4157f9
  4157e0:	and    DWORD PTR [ebp+0x1b],esi
  4157e3:	jae    0x4157e1
  4157e5:	xchg   esp,eax
  4157e6:	jno    0x41578e
  4157e8:	fxch   st(0)
  4157ea:	loopne 0x415841
  4157ec:	clc    
  4157ed:	mov    ebx,esp
  4157ef:	inc    ebx
  4157f0:	or     BYTE PTR [edx-0x562e6c1b],dh
  4157f6:	retf   
  4157f7:	sbb    edi,DWORD PTR [ecx-0x2b]
  4157fa:	jp     0x4157c3
  4157fc:	push   ebx
  4157fd:	mov    al,ds:0xc43b7d7
  415802:	cdq    
  415803:	and    al,0x1b
  415805:	repnz enter 0x364,0xa1
  41580a:	jno    0x4157b6
  41580c:	add    eax,DWORD PTR [edx-0x5a]
  41580f:	jnp    0x41588a
  415811:	xchg   edx,eax
  415812:	mov    ebx,DWORD PTR [edi-0x184f95d0]
  415818:	sub    al,0xa
  41581a:	div    DWORD PTR [ebx+0x53]
  41581d:	sbb    DWORD PTR [edx+0x7b],0x5eee428e
  415824:	push   edi
  415825:	cmp    esi,ecx
  415827:	dec    esi
  415828:	dec    edx
  415829:	shl    dh,1
  41582b:	mov    ?,WORD PTR [esi]
  41582d:	sbb    BYTE PTR [ebp+esi*4+0x36132a41],cl
  415834:	xor    BYTE PTR [edi-0x5a],cl
  415837:	fs in  eax,0x69
  41583a:	div    BYTE PTR [edi]
  41583c:	ss arpl bp,dx
  41583f:	sti    
  415840:	inc    eax
  415841:	repnz mov eax,0xef0ff2fb
  415847:	ja     0x4157e6
  415849:	imul   DWORD PTR [ebx-0x13]
  41584c:	mov    esp,0xe6ae227d
  415851:	popf   
  415852:	lods   eax,DWORD PTR ds:[esi]
  415853:	jecxz  0x4157ec
  415855:	jno    0x415899
  415857:	(bad)  
  415858:	aad    0xe4
  41585a:	in     eax,dx
  41585b:	lods   al,BYTE PTR fs:[esi]
  41585d:	(bad)  
  41585e:	mov    al,ds:0x8e98efc5
  415863:	pop    ecx
  415864:	iret   
  415865:	cdq    
  415866:	sub    DWORD PTR [esi],ecx
  415868:	inc    esi
  415869:	jmp    0x415882
  41586b:	test   BYTE PTR [ebp-0xa7ca84d],bh
  415871:	nop
  415872:	fadd   QWORD PTR [ebp+0x399e17b]
  415878:	cmp    bh,al
  41587a:	mov    cl,0x64
  41587c:	push   edi
  41587d:	and    ch,bh
  41587f:	repz push ebx
  415881:	(bad)  
  415883:	fnsetpm(287 only) 
  415885:	inc    edx
  415886:	push   0xffffff99
  415888:	inc    ebp
  415889:	mov    bh,0x22
  41588b:	sub    eax,DWORD PTR [ecx]
  41588d:	mov    esi,0x78b62add
  415892:	rol    ch,0xd6
  415895:	mov    esi,0x72bda34e
  41589a:	cmp    eax,0x8bee09a3
  41589f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158a0:	pmulhuw mm6,QWORD PTR [ecx+edx*8-0x36f0e0cc]
  4158a8:	mov    al,0x24
  4158aa:	sub    al,0x35
  4158ac:	or     BYTE PTR [edx-0x25],0xdb
  4158b0:	xlat   BYTE PTR ds:[ebx]
  4158b1:	xor    BYTE PTR [ebp-0x1e],0x19
  4158b5:	clc    
  4158b6:	imul   ecx,DWORD PTR [edx],0x7aacd343
  4158bc:	out    0xc8,eax
  4158be:	shr    BYTE PTR [edx+eax*8-0x77fdf4a2],cl
  4158c5:	xor    al,0x99
  4158c7:	xor    eax,0xa71fa81
  4158cc:	and    dh,BYTE PTR [eax-0x3978ef07]
  4158d2:	int    0xdb
  4158d4:	in     eax,dx
  4158d5:	or     eax,0xc7be7c1a
  4158da:	sbb    al,0xb5
  4158dc:	xchg   edx,eax
  4158dd:	dec    edi
  4158de:	mov    eax,DWORD PTR [eax-0x22833220]
  4158e4:	xor    esi,DWORD PTR [ebx-0x7e]
  4158e7:	mov    bl,0xa9
  4158e9:	xor    BYTE PTR [esi+eiz*1-0x1e6dee90],bl
  4158f0:	shr    DWORD PTR [edi-0x17],cl
  4158f3:	fwait
  4158f4:	push   ebx
  4158f5:	neg    BYTE PTR [eax]
  4158f7:	push   ebx
  4158f8:	or     DWORD PTR [ebx+0x2c9cf34],ebp
  4158fe:	inc    esp
  415900:	or     edx,ebx
  415902:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415903:	xor    BYTE PTR [esi],al
  415905:	hlt    
  415906:	retf   0x9d14
  415909:	outs   dx,BYTE PTR ds:[esi]
  41590a:	sbb    al,0x23
  41590c:	imul   eax,esp,0x72
  41590f:	cmp    al,0x12
  415911:	pop    edx
  415912:	mov    ds,WORD PTR fs:[eax]
  415915:	pop    es
  415916:	leave  
  415917:	lds    edi,FWORD PTR [ebp+ebx*1-0x44]
  41591b:	int    0x98
  41591d:	ret    
  41591e:	mov    bh,0x45
  415920:	call   0x7c9d8ca0
  415925:	xor    ch,BYTE PTR [ecx+0x20b63ae0]
  41592b:	bound  esp,QWORD PTR [edi-0x44]
  41592e:	jno    0x4158ea
  415930:	les    esi,FWORD PTR [ebp+0x7e3d0c6e]
  415936:	pusha  
  415937:	test   DWORD PTR [edx-0x27],edi
  41593a:	test   eax,esp
  41593c:	or     edi,eax
  41593e:	lds    eax,FWORD PTR [edi+0x7f]
  415941:	mov    ecx,0x193c466
  415946:	add    eax,0x596071b0
  41594b:	and    bl,cl
  41594d:	dec    eax
  41594e:	pusha  
  41594f:	push   ebx
  415950:	shr    BYTE PTR [esi],1
  415952:	mov    cl,0xf5
  415954:	mov    dh,0xd9
  415956:	mov    eax,0x57c2f427
  41595b:	sub    DWORD PTR [edx+ebp*1+0x4e],0x8d42ca
  415963:	dec    edi
  415964:	and    DWORD PTR [ebx-0x32],eax
  415967:	pop    ebp
  415968:	xchg   ebx,eax
  415969:	(bad)  
  41596a:	scas   eax,DWORD PTR es:[edi]
  41596b:	rcr    BYTE PTR [esi+0x1536779e],1
  415971:	ror    DWORD PTR [edx+0x1a83a6da],0x0
  415978:	daa    
  415979:	jge    0x4159b4
  41597b:	stos   DWORD PTR es:[edi],eax
  41597c:	shr    edi,cl
  41597e:	cmp    ah,bl
  415980:	and    cl,BYTE PTR [edi+0x4c]
  415983:	or     DWORD PTR [ecx],ecx
  415985:	push   esp
  415986:	jns    0x41597a
  415988:	or     al,0x78
  41598a:	add    eax,0x6166e2e6
  41598f:	add    al,0x1
  415991:	jecxz  0x4159cc
  415993:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415994:	add    dh,BYTE PTR [edx]
  415996:	adc    BYTE PTR [ecx],al
  415998:	mov    edi,es
  41599a:	sbb    edx,DWORD PTR [edi+0x277cdba5]
  4159a0:	sub    al,0xaf
  4159a2:	xchg   edi,eax
  4159a3:	jae    0x4159dc
  4159a5:	xor    DWORD PTR ds:0x19d9b0b8,esi
  4159ab:	bound  ebp,QWORD PTR [edx+esi*8]
  4159ae:	sub    DWORD PTR [eax],ebp
  4159b0:	xchg   ecx,eax
  4159b1:	adc    bl,cl
  4159b3:	fiadd  WORD PTR [esi-0x40e58518]
  4159b9:	and    ebx,DWORD PTR ss:0xd38d1dcf
  4159c0:	cdq    
  4159c1:	jl     0x4159b7
  4159c3:	mov    ah,ch
  4159c5:	ror    BYTE PTR [ebp+0x72229e18],1
  4159cb:	cmp    edx,ebp
  4159cd:	int3   
  4159ce:	dec    eax
  4159cf:	push   ss
  4159d0:	push   ds
  4159d1:	imul   esp,DWORD PTR [eax-0x7fa20d85],0x4a805023
  4159db:	bound  edx,QWORD PTR [ecx+0x2c]
  4159de:	add    eax,0x1dd83e1c
  4159e3:	mov    ebx,0x8163ef52
  4159e8:	jp     0x4159eb
  4159ea:	gs mov cl,0x3
  4159ed:	aaa    
  4159ee:	push   es
  4159ef:	inc    edx
  4159f0:	inc    esi
  4159f1:	shl    ch,0x7f
  4159f4:	pop    es
  4159f5:	jmp    0x9cc0:0x7fe30bc9
  4159fc:	out    dx,eax
  4159fd:	iret   
  4159fe:	pop    edi
  4159ff:	push   ds
  415a00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a01:	xor    eax,DWORD PTR ds:0x48ebcbf3
  415a07:	push   cs
  415a08:	jne    0x415a74
  415a0a:	mov    esi,0xe8627d58
  415a0f:	fwait
  415a10:	in     al,0xc4
  415a12:	or     ch,0x74
  415a15:	add    al,0x9b
  415a17:	sub    ecx,edi
  415a19:	ror    bl,cl
  415a1b:	jmp    FWORD PTR [esi+0x5e]
  415a1e:	push   edx
  415a1f:	mov    ebp,0xfcb21356
  415a24:	shl    BYTE PTR [edx-0x3f],1
  415a27:	in     al,0xb8
  415a29:	into   
  415a2a:	int    0xad
  415a2c:	(bad)  
  415a2d:	sbb    bh,cl
  415a2f:	add    ah,BYTE PTR [eax+eax*4]
  415a32:	stc    
  415a33:	loopne 0x415a3a
  415a35:	(bad)
  415a3a:	or     eax,0x72e4bdc1
  415a3f:	mov    ecx,ecx
  415a41:	and    al,0x83
  415a43:	je     0x415a87
  415a45:	push   es
  415a46:	scas   eax,DWORD PTR es:[edi]
  415a47:	jg     0x415a0b
  415a49:	sub    ah,BYTE PTR [edx]
  415a4b:	in     al,0xac
  415a4d:	pop    ss
  415a4e:	jmp    0x206f:0x4c36c239
  415a55:	shr    DWORD PTR [ebp-0x66d4e657],0x70
  415a5c:	pop    es
  415a5d:	std    
  415a5e:	cmp    bh,BYTE PTR [ebx-0x552261fd]
  415a64:	test   bl,dh
  415a66:	xchg   ebp,eax
  415a67:	das    
  415a68:	lea    ebp,[ecx+0x170488b3]
  415a6e:	(bad)  
  415a6f:	in     eax,0xad
  415a71:	add    ebp,DWORD PTR [ebx+0x2c73926d]
  415a77:	sbb    al,0x17
  415a79:	pop    edx
  415a7a:	jns    0x415a6c
  415a7c:	retf   0xc5d0
  415a7f:	and    DWORD PTR [esi-0x57],0x6fc1a5d9
  415a86:	rcl    DWORD PTR [eax+0x55],0xc7
  415a8a:	(bad)
  415a8e:	lds    ebp,FWORD PTR [eax-0x78]
  415a91:	scas   eax,DWORD PTR es:[edi]
  415a92:	pop    edi
  415a93:	mov    ah,0x94
  415a95:	or     eax,0x387e8be0
  415a9a:	out    dx,al
  415a9b:	fld    QWORD PTR [esi-0x5c]
  415a9e:	pushf  
  415a9f:	pusha  
  415aa0:	push   es
  415aa1:	jl     0x415a78
  415aa3:	mov    esp,ecx
  415aa5:	dec    ebx
  415aa6:	(bad)  [esi+0x56]
  415aa9:	sbb    eax,0x3afc2d93
  415aae:	(bad)  
  415aaf:	cmp    DWORD PTR [ebx+0x1f],esi
  415ab2:	clc    
  415ab3:	mov    edx,DWORD PTR [edx]
  415ab5:	and    eax,0x9976ec7b
  415aba:	(bad)  
  415abb:	rcl    DWORD PTR [edi+ecx*1-0x6c],1
  415abf:	add    edx,ebp
  415ac1:	sub    BYTE PTR ds:0x83cd658f,cl
  415ac7:	retf   
  415ac8:	ins    BYTE PTR es:[edi],dx
  415ac9:	pop    edx
  415aca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415acb:	mov    BYTE PTR [edi+ecx*2],bl
  415ace:	xor    eax,edx
  415ad0:	push   ecx
  415ad1:	push   cs
  415ad2:	jbe    0x415acd
  415ad4:	mov    esp,0x175c8341
  415ad9:	hlt    
  415ada:	pop    eax
  415adb:	dec    edx
  415adc:	xlat   BYTE PTR ds:[ebx]
  415add:	inc    eax
  415ade:	pop    ds
  415adf:	nop
  415ae0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ae1:	jecxz  0x415aaf
  415ae3:	jl     0x415afb
  415ae5:	xor    eax,0x585b2a0a
  415aea:	loopne 0x415afe
  415aec:	ss sahf 
  415aee:	adc    BYTE PTR [ebx-0x2d],ch
  415af1:	xchg   edx,eax
  415af2:	mov    bl,0x1a
  415af4:	(bad)  [edx+0x5b]
  415af7:	or     dl,bh
  415af9:	(bad)  
  415afa:	in     eax,dx
  415afb:	and    eax,0x4b37d63d
  415b00:	sar    BYTE PTR [ecx+0x6d],1
  415b03:	mov    DWORD PTR [esi],esp
  415b05:	mov    dh,0x70
  415b07:	jbe    0x415adc
  415b09:	sbb    BYTE PTR [edx],al
  415b0b:	jmp    0x415b5e
  415b0d:	dec    ecx
  415b0e:	ds scas al,BYTE PTR es:[edi]
  415b10:	dec    ebx
  415b11:	scas   eax,DWORD PTR es:[edi]
  415b12:	sar    DWORD PTR [ebp+0x2a],cl
  415b15:	jge    0x415ade
  415b17:	jb     0x415b4b
  415b19:	test   eax,0xe11b3c0d
  415b1e:	loopne 0x415ab9
  415b20:	imul   edi,DWORD PTR [esi+esi*2],0x76eebb89
  415b27:	fidiv  DWORD PTR [edx]
  415b29:	jmp    0x415ab4
  415b2b:	mov    bh,0x13
  415b2d:	outs   dx,BYTE PTR ds:[esi]
  415b2e:	sub    ch,bl
  415b30:	sub    ebx,eax
  415b32:	out    dx,al
  415b33:	dec    ebp
  415b34:	cmp    eax,0x7cbd0159
  415b39:	enter  0x9299,0x82
  415b3d:	xor    BYTE PTR [ebp+0x4a],ah
  415b40:	in     al,dx
  415b41:	pop    esi
  415b42:	hlt    
  415b43:	repz add BYTE PTR [edi-0x6bd32dd4],0xb4
  415b4b:	mov    al,0x5d
  415b4d:	mov    dl,BYTE PTR [esi]
  415b4f:	cwde   
  415b50:	and    al,BYTE PTR ds:0xda35f63d
  415b56:	pop    edx
  415b57:	mov    edi,0x9214d28f
  415b5c:	jb     0x415b2e
  415b5e:	imul   ebp,DWORD PTR [ebp+0x69],0xad91f12a
  415b65:	jl     0x415b81
  415b67:	mov    ds:0xcec657a8,eax
  415b6c:	mov    dh,0xc4
  415b6e:	mov    edx,0xbb5dd0d2
  415b73:	mov    edi,0xe47ac926
  415b78:	sub    eax,0xefdda0dc
  415b7d:	jne    0x415b69
  415b7f:	stc    
  415b80:	xor    eax,0xff915663
  415b85:	cmp    BYTE PTR [ecx+edx*4+0x6c7fcbf3],dh
  415b8c:	out    dx,eax
  415b8d:	pop    edi
  415b8e:	mov    al,ds:0xe66b8b48
  415b93:	fsub   QWORD PTR [edx]
  415b95:	pop    esp
  415b96:	inc    ebx
  415b97:	pop    edx
  415b98:	push   esp
  415b99:	jns    0x415bc2
  415b9b:	jg     0x415b7b
  415b9d:	push   esp
  415b9e:	jle    0x415be1
  415ba0:	adc    ebx,DWORD PTR [ecx-0x72b8f190]
  415ba6:	scas   al,BYTE PTR es:[edi]
  415ba7:	mov    ds:0x93571d26,al
  415bac:	xlat   BYTE PTR ds:[ebx]
  415bad:	(bad)  
  415bae:	out    0xa0,al
  415bb0:	jb     0x415b55
  415bb2:	mov    ah,0xae
  415bb4:	sub    BYTE PTR [ebx+0x3e0ff2a6],ch
  415bba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415bbb:	push   eax
  415bbc:	xchg   ecx,eax
  415bbd:	cmp    dh,BYTE PTR [edi+0x95f1478]
  415bc3:	pop    ebp
  415bc4:	(bad)  
  415bc5:	push   ecx
  415bc6:	or     BYTE PTR [edx],bh
  415bc8:	pop    edx
  415bc9:	mov    al,0x4
  415bcb:	jmp    0xf88:0x64fd16d9
  415bd2:	jnp    0x415bc2
  415bd4:	mov    edi,0x6e83c9c0
  415bd9:	sti    
  415bda:	inc    ebp
  415bdb:	adc    eax,0xb76b016a
  415be0:	je     0x415b63
  415be2:	outs   dx,DWORD PTR ds:[esi]
  415be3:	dec    edi
  415be4:	mov    edi,0xd5305d98
  415be9:	rcl    bh,0x65
  415bec:	into   
  415bed:	scas   eax,DWORD PTR es:[edi]
  415bee:	jmp    0xc1ba:0xf5903e70
  415bf5:	mov    ah,0x12
  415bf7:	test   eax,0x72fc1617
  415bfc:	scas   eax,DWORD PTR es:[edi]
  415bfd:	mov    ebx,DWORD PTR [ecx-0x782c583d]
  415c03:	dec    esp
  415c04:	int3   
  415c05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c06:	lea    ebx,[esi-0x77b3c076]
  415c0c:	retf   
  415c0d:	cmp    bh,BYTE PTR [eax-0xd57375b]
  415c13:	call   0x556:0xbb7847f
  415c1a:	adc    al,BYTE PTR [esi+0x7c]
  415c1d:	xchg   edx,eax
  415c1e:	call   0xb3a3:0xd07e4124
  415c25:	sbb    BYTE PTR [ebx+0x77953cae],dl
  415c2b:	push   es
  415c2c:	xchg   edx,eax
  415c2d:	bound  edi,QWORD PTR [ebx]
  415c2f:	pop    edx
  415c30:	add    edx,DWORD PTR [edi]
  415c32:	xchg   ecx,eax
  415c33:	cmp    al,0x99
  415c35:	out    0x2,al
  415c37:	add    DWORD PTR [esi],ebp
  415c39:	dec    ecx
  415c3a:	xor    DWORD PTR [esi-0x5f],ecx
  415c3d:	adc    ebx,edi
  415c3f:	xchg   edx,eax
  415c40:	jne    0x415bee
  415c42:	xor    ah,BYTE PTR [eax]
  415c44:	loop   0x415bfd
  415c46:	xor    ah,bl
  415c48:	mov    edx,0x6670225
  415c4d:	adc    al,0xda
  415c4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c50:	pop    ebx
  415c51:	addr16 mov bl,0x22
  415c54:	xchg   edx,eax
  415c55:	dec    ebp
  415c56:	stos   BYTE PTR es:[edi],al
  415c57:	mov    ds:0x9f7edeca,eax
  415c5c:	pop    edi
  415c5d:	pop    ds
  415c5e:	jle    0x415c52
  415c60:	pusha  
  415c61:	push   ds
  415c62:	mov    ds:0x9a62a402,eax
  415c67:	arpl   WORD PTR [edi-0x7b],sp
  415c6a:	(bad)  
  415c6c:	icebp  
  415c6d:	int    0x16
  415c6f:	pushf  
  415c70:	rcr    esi,0x53
  415c73:	cdq    
  415c74:	cli    
  415c75:	(bad)  
  415c77:	jp     0x415c64
  415c79:	pop    ebx
  415c7a:	adc    ch,bl
  415c7c:	inc    ecx
  415c7d:	jle    0x415cfe
  415c7f:	fs int3 
  415c81:	jnp    0x415cae
  415c83:	dec    esp
  415c84:	ins    DWORD PTR es:[edi],dx
  415c85:	jmp    0x1fde:0xf985584e
  415c8c:	fild   WORD PTR [ebp+eax*8-0x31d82e5b]
  415c93:	cmp    DWORD PTR [ebx-0x19],ebx
  415c96:	mov    bl,0xca
  415c98:	xchg   esi,eax
  415c99:	add    bl,BYTE PTR [ebp-0x330a91d4]
  415c9f:	repnz inc ebx
  415ca1:	loop   0x415c84
  415ca3:	pop    esi
  415ca4:	das    
  415ca5:	xor    edi,esi
  415ca7:	and    eax,0x2283c4f8
  415cac:	and    al,0x3a
  415cae:	adc    eax,0x23631091
  415cb3:	fidiv  DWORD PTR [edi-0x5f]
  415cb6:	inc    esi
  415cb7:	jmp    0x415d20
  415cb9:	addr16 sbb edi,0x38
  415cbd:	and    al,0x6b
  415cbf:	adc    al,0xf6
  415cc1:	push   0x2e
  415cc3:	rcr    DWORD PTR [ebx],0x8f
  415cc6:	rcl    ah,cl
  415cc8:	test   cl,ch
  415cca:	addr16 xchg edx,edx
  415ccd:	(bad)  
  415cce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ccf:	adc    DWORD PTR [ebp-0x254e23d8],edx
  415cd5:	xchg   edx,eax
  415cd6:	jnp    0x415d2c
  415cd8:	mov    ds:0xb55fdbc0,eax
  415cdd:	inc    esi
  415cde:	push   ebx
  415cdf:	fdivr  st(3),st
  415ce1:	or     BYTE PTR [edi+0x22],dh
  415ce4:	add    eax,0x2ee26305
  415ce9:	(bad)  
  415ceb:	call   0x1e038081
  415cf0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415cf1:	and    al,BYTE PTR [edx+edx*1+0x7a633370]
  415cf8:	add    bh,BYTE PTR [esp+ecx*2+0xe]
  415cfc:	sub    DWORD PTR [eax-0x2d217b07],0x5b
  415d03:	icebp  
  415d04:	clc    
  415d05:	mov    ch,0x89
  415d07:	bound  ebx,QWORD PTR [esi+ebx*8-0x26]
  415d0b:	pop    esp
  415d0c:	add    al,0x0
  415d0e:	push   ss
  415d0f:	imul   ebx,DWORD PTR [edi+0x18],0xb64feaea
  415d16:	adc    edx,ebp
  415d18:	imul   ecx,DWORD PTR [edx*4-0x50a24426],0xc0129ebd
  415d23:	mov    cs:0xeedd556b,al
  415d29:	ins    DWORD PTR es:[edi],dx
  415d2a:	mov    cx,0x5b1d
  415d2e:	lods   al,BYTE PTR ds:[esi]
  415d2f:	push   esp
  415d30:	xor    al,0x48
  415d32:	mov    BYTE PTR [ebp+0x21be6b92],al
  415d38:	pusha  
  415d39:	inc    DWORD PTR [ebx]
  415d3b:	je     0x415db1
  415d3d:	mov    eax,0x99c728dc
  415d42:	test   BYTE PTR [eax+0x40673500],bl
  415d48:	dec    ebx
  415d49:	or     esp,DWORD PTR [edx+0x72596d52]
  415d4f:	inc    ebx
  415d50:	retf   0x7c96
  415d53:	hlt    
  415d54:	fwait
  415d55:	xor    DWORD PTR [edx+0x14e42ff0],edi
  415d5b:	jae    0x415da7
  415d5d:	loopne 0x415d7a
  415d5f:	and    DWORD PTR [esi+0x68],esi
  415d62:	pop    edi
  415d63:	enter  0x126a,0x14
  415d67:	rcr    BYTE PTR [ebx],cl
  415d69:	xor    eax,DWORD PTR [edx-0x1d64c8b2]
  415d6f:	mov    ch,BYTE PTR [ecx]
  415d71:	out    0x32,eax
  415d73:	jb     0x415dac
  415d75:	fwait
  415d76:	adc    DWORD PTR [eax+ecx*8],ebp
  415d79:	fwait
  415d7a:	repz xchg ecx,eax
  415d7c:	mov    dl,0x96
  415d7e:	cmp    BYTE PTR [ebp-0x34],bl
  415d81:	or     eax,eax
  415d83:	or     al,0xea
  415d85:	cmp    DWORD PTR [eax],esp
  415d87:	jb     0x415dca
  415d89:	mov    ecx,0x203f7e9e
  415d8e:	adc    DWORD PTR ds:0x3e024e1,edi
  415d94:	push   0xa297067b
  415d99:	cmc    
  415d9a:	xchg   esi,eax
  415d9b:	sbb    DWORD PTR [edi],edx
  415d9d:	and    BYTE PTR [edx],bl
  415d9f:	in     al,0xde
  415da1:	add    eax,0xcc8dd289
  415da6:	fs in  eax,0x8a
  415da9:	sbb    DWORD PTR [edi],edx
  415dab:	mov    esi,0xa975f5e5
  415db0:	inc    esp
  415db1:	mov    edi,DWORD PTR gs:[ecx-0x54d8f098]
  415db8:	adc    ebp,DWORD PTR [ebx-0x57]
  415dbb:	pop    ds
  415dbc:	mov    al,0xf6
  415dbe:	mov    al,BYTE PTR [esi-0x1f6da620]
  415dc4:	or     BYTE PTR [edx],dl
  415dc6:	push   ds
  415dc7:	test   eax,0xda51bb74
  415dcc:	test   BYTE PTR [eax],cl
  415dce:	in     al,dx
  415dcf:	mov    ss:0x3e8b72c5,eax
  415dd5:	inc    ebx
  415dd6:	in     al,dx
  415dd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415dd8:	ja     0x415dea
  415dda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ddb:	mov    bl,0x7b
  415ddd:	fidivr DWORD PTR [ebp-0x6679ebed]
  415de3:	int    0x65
  415de5:	(bad)  
  415de7:	icebp  
  415de8:	inc    ecx
  415de9:	out    0x25,al
  415deb:	dec    eax
  415dec:	sti    
  415ded:	stos   BYTE PTR es:[edi],al
  415dee:	push   0x397a19e3
  415df3:	or     eax,DWORD PTR [eax-0x7d]
  415df6:	and    eax,0x7aa9020a
  415dfb:	fs xor al,0x64
  415dfe:	xchg   edi,eax
  415dff:	es pop edx
  415e01:	dec    ebx
  415e02:	lahf   
  415e03:	mov    ebx,DWORD PTR [eax-0x19]
  415e06:	inc    esi
  415e07:	addr16 mov ch,bl
  415e0a:	adc    eax,0xead6411
  415e0f:	adc    BYTE PTR [eax+esi*8-0x4a],bl
  415e13:	push   ss
  415e14:	scas   al,BYTE PTR es:[edi]
  415e15:	jmp    0x6221217
  415e1a:	xor    al,0x86
  415e1c:	mov    esp,0xac887057
  415e21:	dec    ebp
  415e22:	pusha  
  415e23:	dec    edi
  415e24:	mov    ebx,0x3030668e
  415e29:	mov    WORD PTR [ecx],?
  415e2b:	add    BYTE PTR ds:0xa32855c5,dl
  415e31:	push   eax
  415e32:	ficom  WORD PTR [ecx+0x45]
  415e35:	imul   cl
  415e37:	push   ecx
  415e38:	(bad)  
  415e39:	out    dx,al
  415e3a:	cld    
  415e3b:	inc    edi
  415e3c:	xchg   ebp,eax
  415e3d:	inc    edx
  415e3e:	cmp    ah,al
  415e40:	scas   eax,DWORD PTR es:[edi]
  415e41:	xor    eax,0xe84f547c
  415e46:	call   0xbf59:0x2194d780
  415e4d:	mov    eax,0xe8dae49d
  415e52:	lds    edi,FWORD PTR ds:0x64218250
  415e58:	xrelease mov BYTE PTR gs:[ecx],bh
  415e5c:	mov    DWORD PTR [ebx+0x3922d8e2],ebp
  415e62:	adc    al,0x28
  415e64:	ja     0x415e12
  415e66:	cld    
  415e67:	inc    ebx
  415e68:	pop    eax
  415e69:	pop    eax
  415e6a:	sub    eax,0xab938e0a
  415e6f:	lock ficomp DWORD PTR [edx-0x7a383bd1]
  415e76:	lds    eax,FWORD PTR [edx]
  415e78:	pop    eax
  415e79:	mov    ds:0x72fd27e8,al
  415e7e:	inc    BYTE PTR [edx-0x5c9e59ae]
  415e84:	cmc    
  415e85:	repnz adc BYTE PTR [esi+0xf],cl
  415e89:	or     cx,dx
  415e8c:	fcomp  QWORD PTR ds:0x98f83824
  415e92:	shr    dl,0x93
  415e95:	sbb    al,0x8f
  415e97:	xchg   ebx,eax
  415e98:	mov    ds:0xc2cb15f2,eax
  415e9d:	inc    esi
  415e9e:	dec    esi
  415e9f:	mov    eax,ds:0x41d47e1a
  415ea4:	sti    
  415ea5:	pop    esi
  415ea6:	sbb    BYTE PTR [ecx+eax*2-0x77],bl
  415eaa:	push   ds
  415eab:	ins    DWORD PTR es:[edi],dx
  415eac:	adc    BYTE PTR [edx],0xf1
  415eaf:	add    DWORD PTR [ebp+0x59],ebp
  415eb2:	and    esi,edx
  415eb4:	xor    eax,0x2740c8a6
  415eb9:	jo     0x415f0c
  415ebb:	gs out dx,eax
  415ebd:	mov    ds:0x9b8a0e59,al
  415ec2:	(bad)  
  415ec3:	clc    
  415ec4:	mov    al,0x7
  415ec6:	sub    ebx,ecx
  415ec8:	mov    ds:0x8c22dc61,al
  415ecd:	dec    edi
  415ece:	jl     0x415ef5
  415ed0:	mov    ds:0xa984cc2e,eax
  415ed5:	pop    ss
  415ed6:	cli    
  415ed7:	cmp    ch,BYTE PTR fs:[ecx-0x1ee7292c]
  415ede:	mov    al,0x5a
  415ee0:	and    eax,0x1280171e
  415ee5:	mov    cl,0x95
  415ee7:	int3   
  415ee8:	sbb    DWORD PTR [eax+0x28],eax
  415eeb:	mov    ecx,0x7f4a885c
  415ef0:	add    al,0x90
  415ef2:	icebp  
  415ef3:	pop    ds
  415ef4:	xor    DWORD PTR [esi],ebx
  415ef6:	dec    eax
  415ef7:	push   cs
  415ef8:	push   0x892a068e
  415efd:	nop
  415efe:	aas    
  415eff:	fstp   QWORD PTR [esi-0x35]
  415f02:	dec    edi
  415f03:	mov    ebp,0x31cdf6a6
  415f08:	jns    0x415e8b
  415f0a:	cld    
  415f0b:	mov    esp,0x64302eea
  415f10:	pop    esp
  415f11:	inc    edi
  415f12:	test   al,0x36
  415f14:	sbb    al,0x9c
  415f16:	pop    edx
  415f17:	js     0x415ef4
  415f19:	cdq    
  415f1a:	aad    0x7c
  415f1c:	cmp    eax,0x46786370
  415f21:	out    0x30,al
  415f23:	cmp    ebp,esp
  415f25:	mov    eax,0x3ab4c024
  415f2a:	or     DWORD PTR [esi+0x2a86ed61],ecx
  415f30:	lock dec ebx
  415f32:	(bad)  
  415f33:	mov    eax,0x5f85c497
  415f38:	mov    ch,0xeb
  415f3a:	sub    ecx,DWORD PTR [esi-0x3fcf1ff8]
  415f40:	mov    BYTE PTR [ecx],0xf5
  415f43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f44:	jae    0x415f0f
  415f46:	je     0x415f2a
  415f48:	adc    BYTE PTR [ecx+edx*8-0x6b],0x37
  415f4d:	push   ss
  415f4e:	mov    eax,0xfc060c38
  415f53:	cdq    
  415f54:	push   eax
  415f55:	push   0xffffffc1
  415f57:	pop    ss
  415f58:	fcomp  QWORD PTR [esi+0x56a1e6e1]
  415f5e:	and    BYTE PTR [edx],cl
  415f60:	and    ch,BYTE PTR [edx+0x70]
  415f63:	xor    BYTE PTR [edi],ch
  415f65:	fisub  DWORD PTR [ecx+0x6e]
  415f68:	gs mov cl,0x40
  415f6b:	mov    ds:0x12b4a672,eax
  415f70:	repnz stc 
  415f72:	jecxz  0x415faa
  415f74:	jmp    0x6fa9:0x91167e6f
  415f7b:	sbb    eax,0x7d018c55
  415f80:	xor    eax,DWORD PTR [esi]
  415f82:	jb     0x415f65
  415f84:	dec    esp
  415f85:	jnp    0x415ffa
  415f87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f88:	retf   
  415f89:	adc    bl,BYTE PTR [edx-0x3a]
  415f8c:	push   ebp
  415f8d:	pop    edi
  415f8e:	or     DWORD PTR [edi+0x79a02558],eax
  415f94:	sar    edx,0x82
  415f97:	pop    ecx
  415f98:	dec    edi
  415f99:	pop    ss
  415f9a:	xlat   BYTE PTR ds:[ebx]
  415f9b:	stos   DWORD PTR es:[edi],eax
  415f9c:	shr    BYTE PTR [edi+0x47e0a5c0],0xd8
  415fa3:	fist   DWORD PTR [eax+ecx*4]
  415fa6:	mov    WORD PTR [esp+edx*4],cs
  415fa9:	int    0x43
  415fab:	repz pop ds
  415fad:	sti    
  415fae:	ret    0x3996
  415fb1:	int    0xcc
  415fb3:	push   0xfb8902fe
  415fb8:	dec    esi
  415fb9:	and    DWORD PTR [esi+0x64],0x62
  415fbd:	repz iret 
  415fbf:	mov    ebp,0x7ed009f7
  415fc4:	sbb    eax,0x466f3410
  415fc9:	mov    al,ds:0xdd517d58
  415fce:	mov    bh,0xb0
  415fd0:	jmp    0x41604d
  415fd2:	cmp    al,0x5a
  415fd4:	push   eax
  415fd5:	pop    esp
  415fd6:	xchg   esi,eax
  415fd7:	or     eax,0x797eac41
  415fdc:	and    eax,0xcbfa9dac
  415fe1:	ins    DWORD PTR es:[edi],dx
  415fe2:	mov    ds:0x89f0bfb1,al
  415fe7:	je     0x415fa0
  415fe9:	das    
  415fea:	cmp    BYTE PTR [ebx-0x50eea7f9],bh
  415ff0:	mov    DWORD PTR [ebp+0x2a],eax
  415ff3:	add    ebx,DWORD PTR [esi-0x4a]
  415ff6:	aad    0xf
  415ff8:	test   BYTE PTR [ecx+0x47],ch
  415ffb:	mov    esi,0x174b8447
  416000:	xchg   bp,ax
  416002:	int3   
  416003:	mov    ds,esp
  416005:	daa    
  416006:	jnp    0x416038
  416008:	(bad)
  41600b:	and    DWORD PTR [eax-0x52],0xee7b1097
  416012:	outs   dx,BYTE PTR ds:[esi]
  416013:	push   ebp
  416014:	and    BYTE PTR [ecx],dl
  416016:	jae    0x41602d
  416018:	rol    DWORD PTR [edx+0x3d5c4719],cl
  41601e:	sahf   
  41601f:	push   esp
  416020:	ins    BYTE PTR es:[edi],dx
  416021:	and    BYTE PTR [ecx-0x77b0f23e],0x57
  416028:	jp     0x416087
  41602a:	pop    ebx
  41602c:	jg     0x416031
  41602e:	popf   
  41602f:	xor    esi,eax
  416031:	ins    DWORD PTR es:[edi],dx
  416032:	ret    
  416033:	push   edx
  416034:	rcl    BYTE PTR [esi],1
  416036:	jne    0x41603f
  416038:	int    0x6a
  41603a:	shl    DWORD PTR [eax],0x47
  41603d:	pop    esp
  41603e:	imul   esi,DWORD PTR [ebx-0x14],0xffffffb4
  416042:	dec    eax
  416043:	sub    ebx,esi
  416045:	and    al,0xd8
  416047:	sbb    cl,dl
  416049:	hlt    
  41604a:	pop    ecx
  41604b:	jle    0x416073
  41604d:	fdivr  DWORD PTR gs:[esi]
  416050:	dec    esp
  416052:	add    cl,cl
  416054:	xchg   ecx,ecx
  416056:	or     ecx,DWORD PTR [ebx-0x2a7e5771]
  41605c:	cmp    eax,0xc5f3d6c9
  416061:	jnp    0x41608d
  416063:	cmp    eax,0x8e7c9902
  416068:	cmc    
  416069:	in     eax,0xe9
  41606b:	mov    ch,0x7
  41606d:	push   cs
  41606e:	jmp    0x2957:0x839c8472
  416075:	dec    esp
  416076:	mov    ecx,0x838e7ea5
  41607b:	mov    WORD PTR [eax],ds
  41607d:	in     eax,0xbe
  41607f:	pop    edi
  416080:	lods   al,BYTE PTR ds:[esi]
  416081:	pop    esi
  416082:	jle    0x416050
  416084:	push   0x3c
  416086:	imul   esi,DWORD PTR [ecx],0x4d2b74c
  41608c:	inc    esp
  41608d:	push   0xffffffd5
  41608f:	lahf   
  416090:	test   BYTE PTR [edi-0x53c9157c],0xe9
  416097:	add    eax,0x47252598
  41609c:	pusha  
  41609d:	bound  esi,QWORD PTR [esi+0x6f0ef473]
  4160a3:	push   edi
  4160a4:	mov    esi,0x47c10d52
  4160a9:	das    
  4160aa:	mov    eax,ds:0x65fc3d7b
  4160af:	mov    ebp,edi
  4160b1:	push   ebx
  4160b2:	retf   0x3315
  4160b5:	mov    bh,0xe3
  4160b7:	dec    eax
  4160b8:	das    
  4160b9:	(bad)  
  4160ba:	jmp    0x416052
  4160bc:	mov    dl,0x99
  4160be:	clc    
  4160bf:	push   edi
  4160c0:	xchg   esp,eax
  4160c1:	rcr    DWORD PTR [ecx],cl
  4160c3:	pop    eax
  4160c4:	mul    DWORD PTR [esi+0x68]
  4160c7:	test   BYTE PTR ds:0x4148e533,ch
  4160cd:	jmp    0x4160ba
  4160cf:	lock adc ebx,DWORD PTR [ebp-0x2df92ee7]
  4160d6:	lods   al,BYTE PTR ds:[esi]
  4160d7:	in     eax,dx
  4160d8:	int    0x5d
  4160da:	scas   al,BYTE PTR es:[edi]
  4160db:	pushf  
  4160dc:	fcomp  QWORD PTR cs:[eax+0x780d2e35]
  4160e3:	dec    ebx
  4160e4:	xchg   edx,eax
  4160e5:	mov    ebp,0x4522b8ca
  4160ea:	add    DWORD PTR [edx+eax*1-0x283f5fb5],edx
  4160f1:	jle    0x41608f
  4160f3:	xlat   BYTE PTR ds:[ebx]
  4160f4:	fs xor eax,0x4b1ecd58
  4160fa:	inc    ebx
  4160fb:	inc    ebp
  4160fc:	bswap  ecx
  4160fe:	(bad)  
  4160ff:	popa   
  416100:	sbb    eax,0xe8a56242
  416105:	adc    al,0x3d
  416107:	loop   0x4160d4
  416109:	loope  0x4160fa
  41610b:	add    esp,DWORD PTR [ebx]
  41610d:	push   ebp
  41610e:	sbb    dl,dl
  416110:	xor    eax,0x3d7dfc08
  416115:	int    0xc
  416117:	enter  0xdc8e,0x48
  41611b:	inc    esi
  41611c:	in     al,0x9a
  41611e:	fstp   TBYTE PTR [esi+0x233192a0]
  416124:	mov    DWORD PTR [eax-0x48],ecx
  416127:	lods   al,BYTE PTR ds:[esi]
  416128:	pop    esi
  416129:	sahf   
  41612a:	les    esi,FWORD PTR [edi]
  41612c:	les    esi,FWORD PTR [ecx]
  41612e:	push   edx
  41612f:	jecxz  0x4160e8
  416131:	es loope 0x4161aa
  416134:	push   ax
  416136:	push   edx
  416137:	sub    al,BYTE PTR ds:0xfded1bf4
  41613d:	pop    ecx
  41613e:	add    dh,cl
  416140:	lea    esi,[ebp-0x35e8a001]
  416146:	call   0x7e0f:0xea740df2
  41614d:	and    al,0xef
  41614f:	adc    al,0xe2
  416151:	dec    eax
  416152:	jns    0x416166
  416154:	push   esp
  416155:	(bad)  
  416156:	xor    al,0x25
  416158:	out    0x83,eax
  41615a:	leave  
  41615b:	ret    0x9e95
  41615e:	jmp    0x7be8061f
  416163:	test   BYTE PTR [ebx+esi*8+0x4e],bl
  416167:	outs   dx,DWORD PTR ds:[esi]
  416168:	xchg   esi,eax
  416169:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41616a:	mov    cl,0xb5
  41616c:	enter  0xdf93,0xba
  416170:	mov    ebx,0x3167c962
  416175:	xchg   esi,eax
  416176:	xor    dh,ch
  416178:	lods   eax,DWORD PTR ds:[esi]
  416179:	test   DWORD PTR [ecx-0x54],edi
  41617c:	test   edi,eax
  41617e:	jle    0x4161dc
  416180:	jnp    0x416165
  416182:	xchg   esi,eax
  416183:	lods   eax,DWORD PTR ds:[esi]
  416184:	cmp    cl,BYTE PTR [edx-0x22]
  416187:	mov    esp,0x1cf116f8
  41618c:	add    eax,0x81593c2
  416191:	dec    edx
  416192:	or     BYTE PTR ds:0x31315596,0xda
  416199:	ds pop ebx
  41619b:	enter  0xeeb7,0xf6
  41619f:	xor    DWORD PTR [eax+0xf9d7b8e],ecx
  4161a5:	js     0x4161a3
  4161a7:	jne    0x416182
  4161a9:	leave  
  4161aa:	jne    0x4161cf
  4161ac:	mov    esp,0x3c8aee04
  4161b1:	fdiv   QWORD PTR ds:0x5fa6b687
  4161b7:	mov    edx,0xa65ab762
  4161bc:	shl    DWORD PTR [esi],0x99
  4161bf:	jmp    0x416234
  4161c1:	lods   eax,DWORD PTR ds:[esi]
  4161c2:	dec    esi
  4161c3:	call   FWORD PTR [edx-0x10]
  4161c6:	xchg   esp,eax
  4161c7:	cs dec esp
  4161c9:	lods   al,BYTE PTR ds:[esi]
  4161ca:	jg     0x416187
  4161cc:	dec    ebx
  4161cd:	mov    al,ds:0x824a328e
  4161d2:	sti    
  4161d3:	sti    
  4161d4:	in     eax,dx
  4161d5:	mov    eax,ebp
  4161d7:	call   0x696ed4ce
  4161dc:	mov    bl,0x1
  4161de:	div    DWORD PTR [ecx]
  4161e0:	mov    bl,0x15
  4161e2:	jl     0x4161ee
  4161e4:	jae    0x416170
  4161e6:	(bad)  
  4161e7:	or     edx,edx
  4161e9:	test   al,0x91
  4161eb:	les    ecx,FWORD PTR [eax+ebx*4-0x9864937]
  4161f2:	or     BYTE PTR [ebp-0x2e560958],dl
  4161f8:	pusha  
  4161f9:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161fb:	adc    DWORD PTR [ebx-0x4c08f795],ebp
  416201:	xchg   esp,eax
  416202:	nop
  416203:	mov    ebp,0x4c14385c
  416208:	retf   
  416209:	push   esp
  41620a:	jecxz  0x41626b
  41620c:	dec    ebx
  41620d:	ror    dl,1
  41620f:	(bad)  
  416210:	mov    dh,0x4f
  416212:	aas    
  416213:	mov    ecx,0x49020ef7
  416218:	sub    BYTE PTR [edi-0x27],bh
  41621b:	loope  0x4161aa
  41621d:	dec    ebx
  41621e:	sub    esp,DWORD PTR [edi+0x63]
  416221:	sbb    al,0x2
  416223:	dec    esp
  416224:	loop   0x416211
  416226:	rcl    DWORD PTR [edi+0x69],cl
  416229:	ins    DWORD PTR es:[edi],dx
  41622a:	adc    ah,bl
  41622c:	cmp    al,0x8
  41622e:	test   BYTE PTR [ebp-0xf],0xd7
  416232:	daa    
  416233:	mov    dh,0x92
  416235:	mov    dl,BYTE PTR [esp+eax*2+0x4]
  416239:	lock xchg esp,eax
  41623b:	xor    eax,0x10e3c392
  416240:	shl    ebp,0x4d
  416243:	jge    0x416293
  416245:	(bad)  
  416246:	rcl    edi,0x4e
  416249:	adc    ebx,DWORD PTR [ebp+0x1feac83f]
  41624f:	ret    
  416250:	bound  eax,QWORD PTR [esi+0x1cd72f96]
  416256:	or     BYTE PTR [ebx],dl
  416258:	xchg   BYTE PTR [edx+0x3839d826],ch
  41625e:	sub    cl,BYTE PTR [ecx-0x3d]
  416261:	icebp  
  416262:	rcr    eax,0xac
  416265:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416266:	or     ecx,DWORD PTR [esi-0x64]
  416269:	gs inc esp
  41626b:	(bad)  
  41626c:	inc    bl
  41626e:	pusha  
  41626f:	add    eax,0xdbd1bcc5
  416274:	outs   dx,BYTE PTR ds:[esi]
  416275:	test   al,0xcf
  416277:	mov    WORD PTR [ebp-0x18c9a81],?
  41627d:	push   ebx
  41627e:	fidiv  WORD PTR [eax]
  416280:	mov    DWORD PTR [edi+0x26ee5240],edx
  416286:	adc    dh,ch
  416288:	xchg   esi,eax
  416289:	jg     0x4162ee
  41628b:	fistp  DWORD PTR [ecx]
  41628d:	fidivr DWORD PTR ds:0x7d4f8835
  416293:	int3   
  416294:	push   0xf303954e
  416299:	jp     0x41624f
  41629b:	pop    ss
  41629c:	loop   0x416248
  41629e:	push   esp
  41629f:	imul   eax,eax,0xfffffff7
  4162a2:	out    dx,eax
  4162a3:	mov    cl,0xcd
  4162a5:	fwait
  4162a6:	or     al,0xaa
  4162a8:	xchg   esp,eax
  4162a9:	or     edi,esi
  4162ab:	rol    DWORD PTR [esi-0xc],cl
  4162ae:	pop    esp
  4162af:	mov    al,ds:0x2b23639f
  4162b4:	mov    al,ds:0x602ed43b
  4162b9:	push   edx
  4162ba:	xchg   edi,eax
  4162bb:	arpl   bp,sp
  4162bd:	shr    BYTE PTR [ecx-0x33],1
  4162c0:	mov    ch,0x51
  4162c2:	mov    eax,ds:0x985217ba
  4162c7:	jnp    0x41630d
  4162c9:	sub    BYTE PTR [ebp+ecx*1-0x7fed032c],cl
  4162d0:	add    DWORD PTR [esp+edi*1-0x5e49662e],ebp
  4162d7:	mov    bh,0x60
  4162d9:	out    dx,eax
  4162da:	retf   
  4162db:	mov    ds:0xafb1a80f,al
  4162e0:	jmp    0xfcadcda6
  4162e5:	in     eax,0xd0
  4162e7:	xchg   DWORD PTR [ebx+0x1fcc8bd9],ecx
  4162ed:	jmp    0x26dc1fd2
  4162f2:	pop    esp
  4162f3:	or     BYTE PTR [ebp+0x3],cl
  4162f6:	icebp  
  4162f7:	add    DWORD PTR [ebx],esp
  4162f9:	and    ebx,DWORD PTR [eax+eiz*1-0x4d45aad]
  416300:	popa   
  416301:	fwait
  416302:	stos   DWORD PTR es:[edi],eax
  416303:	cs mov cl,0x3c
  416306:	es sub al,0xa
  416309:	iret   
  41630a:	ffree  st(2)
  41630c:	aaa    
  41630d:	fdivr  QWORD PTR [eax+ecx*2]
  416310:	and    BYTE PTR [edi+0x26],bl
  416313:	adc    al,0xa9
  416315:	lock ins DWORD PTR es:[edi],dx
  416317:	loopne 0x4162c1
  416319:	nop
  41631a:	aad    0x9f
  41631c:	add    edx,DWORD PTR [eax-0x2e980877]
  416322:	jmp    0xc6e1:0xa62ba0ec
  416329:	mov    al,ds:0x3fbd5f11
  41632e:	aaa    
  41632f:	push   0x7b
  416331:	dec    esi
  416332:	shl    BYTE PTR [eax],1
  416334:	fstp   DWORD PTR [edi+0x33768c3c]
  41633a:	mov    DWORD PTR ds:0x11a2ace0,esp
  416340:	cmp    eax,0xfeb0026e
  416345:	pop    ebx
  416346:	mov    BYTE PTR [ecx+esi*1+0x7aecffc5],0x3a
  41634e:	outs   dx,DWORD PTR ds:[esi]
  41634f:	xchg   esi,eax
  416350:	(bad)  
  416351:	xchg   ebp,eax
  416352:	push   edi
  416353:	(bad)  
  416355:	jb     0x416332
  416357:	push   0xffffffb1
  416359:	stos   DWORD PTR es:[edi],eax
  41635a:	imul   ebp,esi,0xb675e24b
  416360:	aaa    
  416361:	stos   DWORD PTR es:[edi],eax
  416362:	xor    al,0x5a
  416364:	fild   DWORD PTR ds:0xfedd1b9f
  41636a:	mov    esp,0x913223e6
  41636f:	or     DWORD PTR [eax],eax
  416371:	in     al,dx
  416372:	nop
  416373:	cdq    
  416374:	test   eax,0x9794583a
  416379:	adc    BYTE PTR [eax+eiz*2-0x90df9ec],bh
  416380:	aad    0x6
  416382:	ret    
  416383:	or     cl,BYTE PTR [esi-0x38]
  416386:	inc    ecx
  416387:	xchg   ebp,eax
  416388:	dec    edx
  416389:	push   ds
  41638a:	int    0xa2
  41638c:	push   cs
  41638d:	inc    ecx
  41638e:	inc    eax
  41638f:	iret   
  416390:	pop    ds
  416391:	test   eax,0x216f68f1
  416396:	mov    dh,0x7e
  416398:	push   ecx
  416399:	pop    es
  41639a:	lods   al,BYTE PTR cs:[esi]
  41639c:	jbe    0x416323
  41639e:	adc    BYTE PTR [edi+0x70],0x91
  4163a2:	sub    BYTE PTR [esi-0x13],ah
  4163a5:	add    dl,bh
  4163a7:	jo     0x416421
  4163a9:	pop    esi
  4163aa:	(bad)  
  4163ab:	aad    0x72
  4163ad:	add    eax,0xdfce43f0
  4163b2:	aaa    
  4163b3:	jbe    0x4163c9
  4163b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163b6:	sbb    al,0x50
  4163b8:	ja     0x41641e
  4163ba:	pop    ds
  4163bb:	adc    edi,DWORD PTR [ebp-0x6c030403]
  4163c1:	mov    BYTE PTR ds:0x48df7520,dl
  4163c7:	xor    eax,0x8c22d441
  4163cc:	test   al,0x96
  4163ce:	push   es
  4163cf:	mov    bh,0x54
  4163d1:	into   
  4163d2:	and    al,0x2d
  4163d4:	inc    eax
  4163d5:	jg     0x41638a
  4163d7:	test   al,0xf8
  4163d9:	push   edi
  4163da:	popa   
  4163db:	cmp    eax,0xeb692412
  4163e0:	inc    ecx
  4163e1:	ins    BYTE PTR es:[edi],dx
  4163e2:	clc    
  4163e3:	aaa    
  4163e4:	xor    bh,0x32
  4163e7:	dec    ecx
  4163e8:	hlt    
  4163e9:	jmp    0xcacfb70a
  4163ee:	ss jg  0x41640f
  4163f1:	push   esp
  4163f2:	loope  0x416461
  4163f4:	xchg   DWORD PTR [ebp-0x10e37233],ebx
  4163fa:	pop    ebx
  4163fb:	iret   
  4163fc:	fcomip st,st(0)
  4163fe:	mov    al,0xa1
  416400:	sub    al,0xba
  416402:	std    
  416403:	es lods al,BYTE PTR fs:[esi]
  416406:	pop    ds
  416407:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416408:	adc    eax,0x6231fc9a
  41640d:	mov    eax,0x69040351
  416412:	and    BYTE PTR [esi*1+0x41db8c25],al
  416419:	mov    BYTE PTR [edx+0x919b517],dl
  41641f:	test   eax,0xae50637d
  416424:	xlat   BYTE PTR ds:[ebx]
  416425:	out    dx,al
  416426:	mov    ecx,0xb2859635
  41642b:	pop    ebp
  41642c:	les    ebx,FWORD PTR [esi+ebx*1-0x2954245c]
  416433:	jecxz  0x416426
  416435:	call   0x7dc7:0xe67a5a5c
  41643c:	jg     0x416477
  41643e:	and    BYTE PTR [ebx+0x420988a0],al
  416444:	shl    DWORD PTR [edx-0x4600e26e],0x6c
  41644b:	cld    
  41644c:	cmp    eax,0x2fd809c5
  416451:	dec    edi
  416452:	repz sbb al,0xb4
  416455:	loopne 0x41649f
  416457:	sub    BYTE PTR [ebp+0x58d57766],0xbc
  41645e:	or     DWORD PTR [ebp-0x52],0x4d
  416462:	jl     0x4163f2
  416464:	and    al,0xc7
  416466:	dec    ecx
  416467:	sbb    bh,BYTE PTR [edi+0x3]
  41646a:	mov    esi,DWORD PTR [ebp-0x6f]
  41646d:	(bad)  
  41646e:	stos   DWORD PTR es:[edi],eax
  41646f:	loop   0x4164a1
  416471:	xlat   BYTE PTR ds:[ebx]
  416472:	mov    al,0xc2
  416474:	(bad)  
  416476:	push   esp
  416477:	das    
  416478:	pop    es
  416479:	fild   QWORD PTR [edx]
  41647b:	and    DWORD PTR [eax-0x36],eax
  41647e:	cmc    
  41647f:	xchg   ebp,eax
  416480:	out    dx,al
  416481:	sbb    BYTE PTR [edi+ebx*1+0x39],dl
  416485:	cmp    esi,DWORD PTR [ebx-0x43a4ca81]
  41648b:	or     eax,0x3ffb1c89
  416490:	mov    esi,fs
  416492:	int3   
  416493:	test   DWORD PTR [edi+0x7dba9eaf],esi
  416499:	xchg   edi,eax
  41649a:	in     eax,dx
  41649b:	fstp   DWORD PTR [ebp-0x2f766a2d]
  4164a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164a2:	std    
  4164a3:	test   eax,0xd2225a67
  4164a8:	and    BYTE PTR [edx],ah
  4164aa:	pop    ss
  4164ab:	pop    ebp
  4164ac:	inc    eax
  4164ad:	jmp    0x416505
  4164af:	(bad)  
  4164b0:	mov    dh,0x32
  4164b2:	add    ah,BYTE PTR [edi-0x3d4ddd63]
  4164b8:	cs pop ss
  4164ba:	scas   eax,DWORD PTR es:[edi]
  4164bb:	push   cs
  4164bc:	test   ch,dh
  4164be:	xchg   ebp,eax
  4164bf:	(bad)  
  4164c1:	xchg   DWORD PTR [ebx-0x5a3c1b94],esi
  4164c7:	pop    ds
  4164c8:	jmp    0x13dc:0xe8552ff4
  4164cf:	out    dx,eax
  4164d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164d1:	addr16 pop ebx
  4164d3:	push   ebp
  4164d4:	ror    DWORD PTR [esi-0x1abb61f4],cl
  4164da:	add    esi,edi
  4164dc:	jle    0x416495
  4164de:	mov    eax,0x7be4281f
  4164e3:	xchg   ebp,eax
  4164e4:	jne    0x4164a2
  4164e6:	and    eax,0x26db91a2
  4164eb:	std    
  4164ec:	stos   DWORD PTR es:[edi],eax
  4164ed:	sbb    eax,0xf2e28546
  4164f2:	mov    ch,0xf9
  4164f4:	jbe    0x4164ac
  4164f6:	push   eax
  4164f7:	scas   eax,DWORD PTR es:[edi]
  4164f8:	out    0x93,al
  4164fa:	push   0x9af7b153
  4164ff:	push   esi
  416501:	sub    ch,BYTE PTR [edi]
  416503:	adc    eax,0x121186f
  416508:	outs   dx,DWORD PTR ds:[esi]
  416509:	or     eax,0x9fb71eab
  41650e:	out    dx,al
  41650f:	(bad)  
  416510:	xchg   ebp,eax
  416511:	jbe    0x41650d
  416513:	bound  ecx,QWORD PTR [eax]
  416515:	cwde   
  416516:	ss xchg esi,eax
  416518:	sbb    eax,0x20fb1a24
  41651d:	sub    al,0xe0
  41651f:	fdiv   QWORD PTR [esi+ebp*1-0xa790ea1]
  416527:	mov    bh,0x30
  416529:	mov    bh,BYTE PTR ds:0x5a70304c
  41652f:	cwde   
  416530:	xchg   ecx,eax
  416531:	add    al,0x6b
  416533:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416534:	inc    edi
  416535:	mov    esi,0xf9d82653
  41653a:	pusha  
  41653b:	lds    edi,FWORD PTR [eax]
  41653d:	les    edi,FWORD PTR [edi]
  41653f:	and    edx,ecx
  416541:	pop    esi
  416542:	aaa    
  416543:	dec    bh
  416545:	loopne 0x41652a
  416547:	dec    edi
  416548:	nop
  416549:	pusha  
  41654a:	xor    eax,0x7d798a85
  41654f:	xchg   BYTE PTR [ebx],ch
  416551:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416552:	les    ebx,FWORD PTR [esi-0x41]
  416555:	adc    DWORD PTR [edx-0x76],ebp
  416558:	into   
  416559:	shl    DWORD PTR [ecx+edx*1+0xf],cl
  41655d:	adc    DWORD PTR [edi+ecx*2],esi
  416560:	cmp    edx,DWORD PTR [ebx+0xb6d9e25]
  416566:	mov    esp,0x49bbf360
  41656b:	sbb    edi,edi
  41656d:	inc    esp
  41656e:	push   edi
  41656f:	jb     0x4165a8
  416571:	jbe    0x4165f0
  416573:	ret    
  416574:	add    ecx,DWORD PTR [edi]
  416576:	mov    DWORD PTR [edx-0x7a961803],ecx
  41657c:	popa   
  41657d:	cs mov bh,0xbd
  416580:	push   es
  416581:	adc    eax,0x53faebea
  416586:	jl     0x416533
  416588:	stos   BYTE PTR es:[edi],al
  416589:	test   BYTE PTR [eax-0x7d],cl
  41658c:	mov    cl,0x18
  41658e:	fisttp QWORD PTR [edx+0x3072a3fc]
  416594:	stos   DWORD PTR es:[edi],eax
  416595:	sub    BYTE PTR [ebp+edx*2+0xc],0x6
  41659a:	or     edi,esp
  41659c:	push   ss
  41659d:	call   0x15e1:0xe69240d5
  4165a4:	aam    0xd5
  4165a6:	pop    es
  4165a7:	fs sahf 
  4165a9:	ins    BYTE PTR es:[edi],dx
  4165aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165ab:	and    al,0x8
  4165ad:	or     al,0x92
  4165af:	push   esp
  4165b0:	xor    esp,edi
  4165b2:	inc    esi
  4165b3:	int3   
  4165b4:	les    ebp,FWORD PTR [ebx-0xd3f7aae]
  4165ba:	ss dec ebp
  4165bc:	jmp    0xc5e6:0x8b11195d
  4165c3:	pop    ebp
  4165c4:	and    al,0x0
  4165c6:	stc    
  4165c7:	std    
  4165c8:	add    ch,BYTE PTR [ebp-0x145fc60f]
  4165ce:	add    al,0xff
  4165d0:	outs   dx,BYTE PTR ds:[esi]
  4165d1:	out    dx,eax
  4165d2:	inc    edx
  4165d3:	bound  edi,QWORD PTR [edi-0x74dddbc9]
  4165d9:	loop   0x4165cf
  4165db:	shr    BYTE PTR [eax-0x1f],cl
  4165de:	jbe    0x4165a3
  4165e0:	imul   eax,DWORD PTR [edx+0x5b],0x5e7acb1f
  4165e7:	pop    ebp
  4165e8:	xchg   edx,eax
  4165e9:	ss jecxz 0x41656d
  4165ec:	bnd jno 0x416643
  4165ef:	adc    ebp,DWORD PTR [eax-0x11dadb53]
  4165f5:	fwait
  4165f6:	int3   
  4165f7:	ins    DWORD PTR es:[edi],dx
  4165f8:	jo     0x41664d
  4165fa:	es out 0x11,al
  4165fd:	rol    ecx,0xe0
  416600:	out    0x3c,eax
  416602:	xor    esi,DWORD PTR [ebx-0x2c]
  416605:	in     eax,0xed
  416607:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416608:	iret   
  416609:	fidiv  WORD PTR [edi+0x70]
  41660c:	cmp    DWORD PTR [esi+0x1778458e],ecx
  416612:	mov    ds:0x23d1984d,eax
  416617:	pop    ss
  416618:	adc    DWORD PTR [eax],0xcbd2f2c
  41661e:	and    edi,DWORD PTR [eax+0x560ea68a]
  416624:	inc    esp
  416625:	and    BYTE PTR [ecx-0x6fdaa730],ah
  41662b:	xor    edx,DWORD PTR ds:0x5430e941
  416631:	inc    ebp
  416632:	pop    esp
  416633:	sar    BYTE PTR ds:0x41108c7a,1
  416639:	add    BYTE PTR [ebx+0x65ddf23c],0xa9
  416640:	push   ecx
  416641:	inc    edi
  416642:	fadd   DWORD PTR [edi-0x118a1b2]
  416648:	das    
  416649:	(bad)  
  41664a:	dec    edx
  41664b:	in     eax,0x21
  41664d:	int    0x52
  41664f:	mov    al,0x0
  416651:	into   
  416652:	out    0x36,al
  416654:	je     0x41666a
  416656:	hlt    
  416657:	es gs push edx
  41665a:	add    BYTE PTR [edx+0x2c43684e],dl
  416660:	mov    edx,0x61c3c2b
  416665:	mov    eax,0xf92fa537
  41666a:	jle    0x416608
  41666c:	ss out 0xf3,eax
  41666f:	out    0x74,eax
  416671:	add    esp,esi
  416673:	push   edi
  416674:	sub    eax,0x7e570db2
  416679:	(bad)  
  41667a:	jo     0x41662a
  41667c:	add    DWORD PTR cs:[edi],ecx
  41667f:	stos   BYTE PTR es:[edi],al
  416680:	std    
  416681:	fisttp QWORD PTR [edx-0x7a]
  416684:	shl    DWORD PTR [esi-0x7d],0xbf
  416688:	out    0x7d,al
  41668a:	imul   esp,DWORD PTR [eax-0x45444aa9],0x5e772128
  416694:	daa    
  416695:	add    bl,dh
  416697:	test   DWORD PTR [eax+0x26],edx
  41669a:	jbe    0x4166f5
  41669c:	mul    DWORD PTR [ebx+0x1d]
  41669f:	(bad)  [esi+ecx*1]
  4166a2:	adc    DWORD PTR [ecx+0x31],ebx
  4166a5:	(bad)
  4166a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166a9:	lods   eax,DWORD PTR ds:[esi]
  4166aa:	push   esi
  4166ab:	in     al,0x20
  4166ad:	fcmovne st,st(4)
  4166af:	(bad)  
  4166b0:	push   cs
  4166b1:	cmp    BYTE PTR [edi+0x24],ah
  4166b4:	cmp    edx,DWORD PTR [esp+ebp*4]
  4166b7:	dec    edi
  4166b8:	mov    ss,WORD PTR [eax-0xd]
  4166bb:	shr    ch,1
  4166bd:	(bad)  
  4166be:	fnstsw WORD PTR [esi]
  4166c0:	mov    ebx,0x7d77804a
  4166c5:	dec    ecx
  4166c6:	xor    DWORD PTR [edi-0x42c40bad],ebx
  4166cc:	fcomp  DWORD PTR [edi]
  4166ce:	inc    edx
  4166cf:	xchg   al,bh
  4166d1:	shl    BYTE PTR [eax+ebx*1],1
  4166d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166d5:	mov    BYTE PTR [ebp-0x65],ch
  4166d8:	fisttp WORD PTR [ebx]
  4166da:	(bad)  
  4166db:	push   esp
  4166dc:	xor    DWORD PTR [esi-0x7c],esi
  4166df:	test   ecx,ecx
  4166e1:	fisub  WORD PTR [edi-0x46]
  4166e4:	jp     0x4166ab
  4166e6:	retf   
  4166e7:	xor    ah,bh
  4166e9:	mov    ah,ah
  4166eb:	cwde   
  4166ec:	sbb    eax,0xbc28270b
  4166f1:	imul   edx,DWORD PTR [ebp+0x1fd87480],0x3f
  4166f8:	sub    ecx,DWORD PTR [ebx+0x5212c7cd]
  4166fe:	mov    ss,WORD PTR [edx-0x29]
  416701:	xchg   edi,eax
  416702:	push   ebp
  416703:	cmc    
  416704:	daa    
  416705:	or     eax,0x7804dbd6
  41670a:	pushf  
  41670b:	sbb    eax,0x4a21f494
  416710:	xor    BYTE PTR [ebx+0x29],al
  416713:	repnz in eax,0xd3
  416716:	test   BYTE PTR [edx+0x45],al
  416719:	retf   
  41671a:	or     al,0x14
  41671c:	retf   
  41671d:	jb     0x4166e0
  41671f:	imul   ebp,DWORD PTR [ebx+0x1f211227],0xffffffa7
  416726:	loopne 0x41679a
  416728:	jns    0x41675e
  41672a:	jne    0x4166ad
  41672c:	ret    
  41672d:	adc    al,0x9
  41672f:	scas   eax,DWORD PTR es:[edi]
  416730:	or     eax,0x194f0f63
  416735:	fisubr DWORD PTR [ebx-0x74]
  416738:	nop
  416739:	and    al,0x9c
  41673b:	sub    ax,0x629b
  41673f:	fidivr WORD PTR [edx]
  416741:	dec    edi
  416742:	pop    es
  416743:	add    edi,edi
  416745:	int3   
  416746:	scas   al,BYTE PTR es:[edi]
  416747:	rol    DWORD PTR [edx+ebp*4+0xb],cl
  41674b:	jb     0x416764
  41674d:	cmp    ch,bl
  41674f:	inc    DWORD PTR [ebx+0x2932fc92]
  416755:	test   DWORD PTR [ebx+0xb],0x8c31c867
  41675c:	cld    
  41675d:	mov    ebx,0xfc8b3b03
  416762:	ins    DWORD PTR es:[edi],dx
  416763:	lock pusha 
  416765:	adc    eax,0x43215669
  41676a:	lea    edi,[edx+0x29d75f70]
  416770:	jle    0x416713
  416772:	and    eax,0x815a9a6d
  416777:	inc    eax
  416778:	inc    esi
  416779:	call   0xfece01cc
  41677e:	jbe    0x416782
  416780:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416781:	out    dx,al
  416782:	or     esp,DWORD PTR [edi+0x2cf9f844]
  416788:	jns    0x4167d1
  41678a:	std    
  41678b:	pop    ds
  41678c:	es cwde 
  41678e:	fs inc esp
  416790:	jb     0x416746
  416792:	mov    ebp,0xa7b0c715
  416797:	sbb    al,0x3b
  416799:	not    ch
  41679b:	pop    esp
  41679c:	xor    eax,0xf8d67a68
  4167a1:	js     0x416787
  4167a3:	fbld   TBYTE PTR [esi-0x4f]
  4167a6:	lds    ecx,FWORD PTR [edx]
  4167a8:	inc    ebp
  4167a9:	ret    0x94da
  4167ac:	sbb    BYTE PTR [edi+0x2c],ch
  4167af:	daa    
  4167b0:	mov    eax,0xba9b5a1a
  4167b5:	(bad)  
  4167b6:	and    DWORD PTR ds:0xb36ab491,eax
  4167bc:	rcl    DWORD PTR [edx+0x5a],0x94
  4167c0:	hlt    
  4167c1:	lock es mov ecx,0x500ba34
  4167c8:	xchg   DWORD PTR [esi],ebp
  4167ca:	mov    edi,0xc852faf
  4167cf:	xchg   BYTE PTR es:[eax],bl
  4167d2:	mov    cs,WORD PTR [esi+eax*1+0x5a]
  4167d6:	mov    ah,0x5a
  4167d8:	push   ss
  4167d9:	and    BYTE PTR [ebp-0x3ee823ae],al
  4167df:	xchg   ebp,eax
  4167e0:	sbb    eax,0x4d7325ed
  4167e5:	inc    esi
  4167e6:	mov    dl,0xc8
  4167e8:	jl     0x416849
  4167ea:	inc    edi
  4167eb:	cs in  al,0xf3
  4167ee:	jno    0x4167fd
  4167f0:	sbb    al,0x2c
  4167f2:	sti    
  4167f3:	iret   
  4167f4:	shl    DWORD PTR [eax+0x47],cl
  4167f7:	inc    eax
  4167f8:	das    
  4167f9:	inc    esi
  4167fa:	popa   
  4167fb:	xor    bh,ah
  4167fd:	xchg   ebx,eax
  4167fe:	add    BYTE PTR [eax+ecx*4-0xc111c9d],dl
  416805:	ret    
  416806:	mov    ecx,0xe3101bf8
  41680b:	mov    edx,0xdd54bc0
  416810:	icebp  
  416811:	add    al,0x7d
  416813:	rcl    dl,cl
  416815:	mov    ?,WORD PTR [ebx-0x14e66312]
  41681b:	dec    ebp
  41681c:	dec    esp
  41681d:	iret   
  41681e:	cli    
  41681f:	mov    BYTE PTR [edi],bl
  416821:	xor    dh,ch
  416823:	(bad)  
  416824:	mov    ch,0x34
  416826:	hlt    
  416827:	xchg   edi,eax
  416828:	pop    esp
  416829:	scas   eax,DWORD PTR es:[edi]
  41682a:	push   0x346329ae
  41682f:	mov    ebp,0x62e5941b
  416834:	ficom  WORD PTR [ebx-0x50abac2b]
  41683a:	cmp    ecx,DWORD PTR [edi+0x691e61a4]
  416840:	call   DWORD PTR [ecx+0x44]
  416843:	adc    al,0xe9
  416845:	aaa    
  416846:	ror    DWORD PTR [ebp-0x5a180ada],1
  41684c:	shl    ch,0x6
  41684f:	test   BYTE PTR [edx+0x5e],cl
  416852:	push   cs
  416853:	out    dx,eax
  416854:	dec    ebx
  416855:	mov    esp,es
  416857:	test   BYTE PTR [edi+0x319f3e85],ch
  41685d:	inc    esp
  41685e:	and    eax,0x82807111
  416863:	mov    bh,0xad
  416865:	imul   ecx,ebx,0xd
  416868:	clc    
  416869:	arpl   cx,ax
  41686b:	pop    edx
  41686c:	dec    esp
  41686d:	rol    BYTE PTR [ebp-0x1326f22a],cl
  416873:	and    DWORD PTR [eax],ebp
  416875:	dec    edx
  416876:	dec    esp
  416877:	iret   
  416878:	jo     0x41687f
  41687a:	popf   
  41687b:	ds inc ecx
  41687d:	jmp    0x3c45239b
  416882:	cmp    ecx,edx
  416884:	shr    edi,0xa8
  416887:	js     0x4168f8
  416889:	push   eax
  41688a:	push   esi
  41688b:	or     BYTE PTR [edx+0x392bd305],bh
  416891:	mov    BYTE PTR [ebx-0x2463c79a],cl
  416897:	jae    0x41690b
  416899:	and    eax,0x9eb51cd0
  41689e:	inc    ecx
  41689f:	jno    0x41683e
  4168a1:	ret    
  4168a2:	das    
  4168a3:	inc    ebp
  4168a4:	popa   
  4168a5:	inc    edi
  4168a7:	xor    BYTE PTR es:[ecx-0x3724fbd3],al
  4168ae:	push   0x3a
  4168b0:	mov    dl,0xff
  4168b2:	push   edx
  4168b3:	mov    ah,0xfa
  4168b5:	adc    al,0xb
  4168b7:	fsub   QWORD PTR [eax]
  4168b9:	jne    0x4168f4
  4168bb:	push   0xffffff93
  4168bd:	jmp    0x4168cb
  4168bf:	pop    esp
  4168c0:	outs   dx,DWORD PTR ds:[esi]
  4168c1:	stos   DWORD PTR es:[edi],eax
  4168c2:	xor    DWORD PTR [edx-0x27],0x4789646c
  4168c9:	push   ss
  4168ca:	fst    DWORD PTR [ecx+eax*4+0x50bd1528]
  4168d1:	inc    BYTE PTR [ecx-0x14276142]
  4168d7:	sbb    esp,DWORD PTR [edx+0x21]
  4168da:	rcr    DWORD PTR [edi],cl
  4168dc:	sub    BYTE PTR [ecx-0x50],bl
  4168df:	inc    eax
  4168e0:	mov    fs,WORD PTR [edx*8-0x26282d6a]
  4168e7:	jno    0x4168ec
  4168e9:	loop   0x41691b
  4168eb:	push   edx
  4168ec:	into   
  4168ed:	mov    DWORD PTR [edi],esi
  4168ef:	jns    0x4168b3
  4168f1:	or     al,0xc7
  4168f3:	mov    dh,0x18
  4168f5:	sbb    BYTE PTR [edx+edx*8-0x74],al
  4168f9:	pop    ds
  4168fa:	xor    edx,DWORD PTR [ebp+0x251bbed0]
  416900:	fwait
  416901:	imul   edx,DWORD PTR [ebx-0x7f56d90],0xffffffd8
  416908:	popa   
  416909:	and    dl,dh
  41690b:	lods   al,BYTE PTR ds:[esi]
  41690c:	jge    0x416946
  41690e:	inc    esp
  41690f:	mov    bh,0x9f
  416911:	mov    dh,0x92
  416913:	sub    BYTE PTR ds:0x1a2f8844,dh
  416919:	hlt    
  41691a:	hlt    
  41691b:	or     DWORD PTR [edi+0x47],eax
  41691e:	lods   eax,DWORD PTR ds:[esi]
  41691f:	push   ebp
  416920:	aas    
  416921:	add    BYTE PTR [esi+0x1a2ec428],al
  416927:	dec    ebp
  416928:	mov    ebx,0xbe8a831f
  41692d:	cld    
  41692e:	inc    esp
  41692f:	stos   BYTE PTR es:[edi],al
  416930:	inc    esp
  416931:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416932:	neg    DWORD PTR [ebx-0x2dd3e509]
  416938:	ja     0x416965
  41693a:	xchg   DWORD PTR [eax+0x4e],ecx
  41693d:	ins    DWORD PTR es:[edi],dx
  41693e:	and    DWORD PTR [ebp+0x5d],esi
  416941:	add    DWORD PTR [ecx],ebx
  416943:	out    0x8b,eax
  416945:	add    eax,0x1648ef84
  41694a:	xor    esp,ebp
  41694c:	shl    DWORD PTR [edi+0x51],cl
  41694f:	fs xchg esi,eax
  416951:	repz inc BYTE PTR [esi-0x306cda9b]
  416958:	outs   dx,DWORD PTR ds:[esi]
  416959:	mov    eax,edx
  41695b:	mov    bl,0x88
  41695d:	sbb    eax,0xdfc472ae
  416962:	mul    ah
  416964:	push   ss
  416965:	(bad)
  416968:	stc    
  416969:	hlt    
  41696a:	popf   
  41696b:	fcom   DWORD PTR [ecx+ecx*2]
  41696e:	mov    esi,ebx
  416970:	imul   eax,DWORD PTR [edi+0x1cf5a3ff],0x897a64c0
  41697a:	call   0xe5e7da41
  41697f:	rcr    DWORD PTR [ebp+0x21],1
  416982:	fnsave [edi+0x6db0566]
  416988:	sbb    bh,BYTE PTR [ecx+eiz*4+0x3]
  41698c:	dec    eax
  41698d:	add    BYTE PTR [esi+0x60],0xe
  416991:	(bad)  
  416992:	pop    esi
  416993:	xchg   ecx,eax
  416994:	add    DWORD PTR [esi+0x34],edi
  416997:	stos   DWORD PTR es:[edi],eax
  416998:	pop    edi
  416999:	dec    ecx
  41699a:	icebp  
  41699b:	mov    esp,0x314d6d4
  4169a0:	iret   
  4169a1:	sbb    DWORD PTR [ebx+0x50],edi
  4169a4:	push   es
  4169a5:	into   
  4169a6:	popa   
  4169a7:	sub    DWORD PTR [ecx],esi
  4169a9:	dec    eax
  4169aa:	or     al,0x33
  4169ac:	ret    
  4169ad:	dec    edi
  4169ae:	dec    edx
  4169af:	loopne 0x416949
  4169b1:	sub    DWORD PTR [edi-0x2d1124ba],ebp
  4169b7:	sbb    eax,0xd6767a9d
  4169bc:	xor    eax,0x929e1f57
  4169c1:	dec    esp
  4169c2:	dec    eax
  4169c3:	hlt    
  4169c4:	or     DWORD PTR [ebp-0x36],esp
  4169c7:	push   0x37
  4169c9:	fistp  QWORD PTR [edx+edi*2]
  4169cc:	cmp    DWORD PTR [ebx+ecx*4-0x359e7d89],esp
  4169d3:	dec    al
  4169d5:	stos   BYTE PTR es:[edi],al
  4169d6:	ror    BYTE PTR [ebp+0x75e11a66],1
  4169dc:	and    ebx,ebp
  4169de:	mov    bl,ah
  4169e0:	xor    eax,0xe10e143a
  4169e5:	jnp    0x416972
  4169e7:	cmp    bh,dl
  4169e9:	adc    esi,DWORD PTR [ebp+0x34a7ace1]
  4169ef:	leave  
  4169f0:	xor    ecx,DWORD PTR ds:0x70352f17
  4169f6:	aad    0xae
  4169f8:	mov    dl,0x7
  4169fa:	mov    BYTE PTR [ecx],0x4c
  4169fd:	pop    ecx
  4169fe:	sub    esi,esp
  416a00:	inc    edx
  416a01:	sub    esp,DWORD PTR [eax+0x697baf61]
  416a07:	icebp  
  416a08:	push   ebp
  416a09:	jmp    0x4169c6
  416a0b:	mov    bh,0x27
  416a0d:	dec    esp
  416a0e:	mov    al,ds:0xb5cb4bb6
  416a13:	or     DWORD PTR [edx],eax
  416a15:	jno    0x416a30
  416a17:	sbb    al,0x28
  416a19:	lock mov al,ds:0x2c93cc8e
  416a1f:	ins    DWORD PTR es:[edi],dx
  416a20:	scas   eax,DWORD PTR es:[edi]
  416a21:	int3   
  416a22:	mov    DWORD PTR [edx+0x6dcb4a79],esp
  416a28:	pop    esp
  416a29:	div    BYTE PTR [ebp-0x356932a9]
  416a2f:	pop    edi
  416a30:	cli    
  416a31:	in     eax,dx
  416a32:	fidivr WORD PTR [edi+0x52]
  416a35:	je     0x416a60
  416a37:	repnz xchg ebx,eax
  416a39:	imul   ebx,ecx,0xbd638ddb
  416a3f:	add    ebx,DWORD PTR [eax]
  416a41:	pop    es
  416a42:	fisub  DWORD PTR [ecx]
  416a44:	add    BYTE PTR [ebx],cl
  416a46:	(bad)  
  416a47:	xor    DWORD PTR [ecx+0x50],edi
  416a4a:	push   esi
  416a4b:	dec    edi
  416a4c:	and    al,0x38
  416a4e:	add    BYTE PTR ds:0x94c7ede7,dl
  416a54:	in     eax,dx
  416a55:	and    eax,0x3a6e3e7f
  416a5a:	sbb    DWORD PTR [esi],0x3
  416a5d:	push   esi
  416a5e:	in     al,dx
  416a5f:	dec    edi
  416a60:	mov    al,ch
  416a62:	out    0xca,al
  416a64:	mov    ch,0x2c
  416a66:	ret    
  416a67:	(bad)
  416a6a:	aam    0x10
  416a6c:	and    BYTE PTR [edx+0x154164d5],dl
  416a72:	std    
  416a73:	retf   
  416a74:	adc    ah,BYTE PTR [ebx]
  416a76:	out    dx,al
  416a77:	aad    0xe9
  416a79:	(bad)  
  416a7a:	push   edx
  416a7b:	adc    al,0xcb
  416a7d:	push   esp
  416a7e:	pop    ecx
  416a7f:	pop    ebp
  416a80:	stos   DWORD PTR es:[edi],eax
  416a81:	xchg   edi,eax
  416a82:	sbb    esi,ecx
  416a84:	or     al,0xe3
  416a86:	add    BYTE PTR [edi-0x33aea139],dh
  416a8c:	pushf  
  416a8d:	pop    esi
  416a8e:	shl    ecx,cl
  416a90:	fdiv   QWORD PTR [ecx+0x6abfdb3e]
  416a96:	cld    
  416a97:	das    
  416a98:	jl     0x416aeb
  416a9a:	pop    eax
  416a9b:	mov    al,ds:0x93cc57b8
  416aa0:	test   DWORD PTR [edi],0x92a997d4
  416aa6:	or     esi,DWORD PTR [edi-0x335e1fb2]
  416aac:	out    dx,al
  416aad:	jp     0x416a54
  416aaf:	call   0x599a:0x7e562d4c
  416ab6:	stos   BYTE PTR es:[edi],al
  416ab7:	mov    al,0xe9
  416ab9:	(bad)  [ebx+0x5007e736]
  416abf:	adc    dh,BYTE PTR [edx+0xb8be5ef]
  416ac5:	iret   
  416ac6:	jmp    0x768bea2b
  416acb:	xchg   ebp,eax
  416acc:	in     al,0x32
  416ace:	fwait
  416acf:	add    bl,dh
  416ad1:	mov    esp,0x21e6f716
  416ad6:	sahf   
  416ad7:	push   cs
  416ad8:	mov    edx,0x374f2552
  416add:	jl     0x416b32
  416adf:	aad    0xcb
  416ae1:	call   0xb4f3:0x11f67937
  416ae8:	adc    eax,0x79819fd4
  416aed:	or     al,dh
  416aef:	adc    esp,DWORD PTR [edi-0x22515738]
  416af5:	mov    edx,0x84854111
  416afa:	push   edx
  416afb:	xchg   esp,eax
  416afc:	es retf 0x68f6
  416b00:	jl     0x416ab5
  416b02:	jns    0x416b48
  416b04:	stos   DWORD PTR es:[edi],eax
  416b05:	mov    ch,0xe8
  416b07:	or     bh,BYTE PTR [esi+0x60]
  416b0a:	out    dx,al
  416b0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b0c:	mov    ds:0x26ce997d,ax
  416b12:	jo     0x416aff
  416b14:	sub    esi,DWORD PTR [edi+ebx*4]
  416b17:	mov    eax,ds:0x92db0716
  416b1c:	mov    ch,0xf5
  416b1e:	fld    TBYTE PTR [esi+0x51]
  416b21:	shl    BYTE PTR [ebp+ecx*4+0x42a15b43],1
  416b28:	adc    al,0xc7
  416b2a:	cs jae 0x416aea
  416b2d:	xchg   ebp,eax
  416b2e:	xchg   esp,eax
  416b2f:	add    dl,BYTE PTR [eax+0x70c73ce]
  416b35:	(bad)  
  416b36:	jl     0x416ad1
  416b38:	jge    0xe2db5bd8
  416b3e:	test   dh,dh
  416b40:	mov    al,ds:0x97030b75
  416b45:	jl     0x416b2b
  416b47:	aaa    
  416b48:	ss jecxz 0x416b7c
  416b4b:	dec    esp
  416b4c:	test   DWORD PTR [esi-0x5d39d1c0],ebp
  416b52:	sub    ebx,eax
  416b54:	dec    ebx
  416b55:	xor    bh,BYTE PTR [eax-0x3b]
  416b58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b59:	sub    esp,DWORD PTR [esi*2+0x55d8cc9e]
  416b60:	dec    edx
  416b61:	addr16 sbb al,0x42
  416b64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b65:	lahf   
  416b66:	seto   BYTE PTR [edi-0x5d]
  416b6a:	iret   
  416b6b:	sub    BYTE PTR [ecx-0x5aeb105a],dl
  416b71:	pop    edx
  416b72:	mov    ebp,0xe36359fd
  416b77:	sbb    dl,bl
  416b79:	sbb    BYTE PTR [edx+0x5497c119],bh
  416b7f:	das    
  416b80:	mov    edx,0xd6de53c7
  416b85:	sbb    DWORD PTR [edi-0x7d49a015],edx
  416b8b:	cmp    al,0x18
  416b8d:	adc    DWORD PTR ss:[ecx+0x1da4c06d],ebx
  416b94:	pusha  
  416b95:	cdq    
  416b96:	popa   
  416b97:	jnp    0x416bb0
  416b99:	sti    
  416b9a:	dec    ebx
  416b9b:	ret    
  416b9c:	mov    ebp,0x5f675e2f
  416ba1:	sbb    al,0xe4
  416ba3:	hlt    
  416ba4:	fdiv   DWORD PTR [ebp+ebx*1-0x38452adc]
  416bab:	js     0x416c0e
  416bad:	sbb    eax,0x45fcd785
  416bb2:	mov    ebp,0xe54195b9
  416bb7:	cmp    dh,BYTE PTR [edx+0x195c3806]
  416bbd:	pushf  
  416bbe:	adc    eax,0x701ed299
  416bc3:	ror    DWORD PTR [ebp-0x51],0x42
  416bc7:	jbe    0x416c22
  416bc9:	sub    BYTE PTR [edi+0x9],0x5
  416bcd:	pop    ebp
  416bce:	push   0x10
  416bd0:	je     0x416b8c
  416bd2:	stos   DWORD PTR es:[edi],eax
  416bd3:	imul   ecx,eax,0x2b
  416bd6:	ins    BYTE PTR es:[edi],dx
  416bd7:	cs mov edi,0xc4f2ba4d
  416bdd:	imul   ebp,DWORD PTR [edx+0x78],0x3902f589
  416be4:	mov    bl,0x2
  416be6:	push   esi
  416be7:	fistp  WORD PTR [ecx-0xd19dcf7]
  416bed:	add    edx,esi
  416bef:	xchg   BYTE PTR [esi],ah
  416bf1:	mov    ebx,0x258c0e28
  416bf6:	pop    ds
  416bf7:	mov    eax,0x996ae2e9
  416bfc:	cmc    
  416bfd:	adc    DWORD PTR [ebx+0x3b],ecx
  416c00:	call   FWORD PTR [edi]
  416c02:	ja     0x416c82
  416c04:	and    DWORD PTR [ecx],ebx
  416c06:	mov    ecx,es
  416c08:	stos   DWORD PTR es:[edi],eax
  416c09:	mov    al,0xa0
  416c0b:	bound  ebp,QWORD PTR [edi-0x58b0b02e]
  416c11:	fldcw  WORD PTR [esp+eax*8+0x4624bab9]
  416c18:	scas   al,BYTE PTR es:[edi]
  416c19:	dec    ecx
  416c1a:	lahf   
  416c1b:	add    eax,DWORD PTR [ebx-0x548ae6eb]
  416c21:	in     al,dx
  416c22:	mov    ebp,0x2b711198
  416c27:	push   esi
  416c28:	sub    BYTE PTR [edi+0x19179480],0xab
  416c2f:	icebp  
  416c30:	fdiv   DWORD PTR [edx+0xb]
  416c33:	cmp    eax,0x1fa1ec1b
  416c38:	call   DWORD PTR [ebx]
  416c3a:	arpl   WORD PTR [edi+0x1],si
  416c3d:	rcr    DWORD PTR [eax],cl
  416c3f:	sahf   
  416c40:	fcmovnbe st,st(4)
  416c42:	dec    ebx
  416c43:	icebp  
  416c44:	rcr    cl,cl
  416c46:	push   ebp
  416c47:	adc    edx,DWORD PTR ds:0xc9258f25
  416c4d:	cmc    
  416c4e:	lahf   
  416c4f:	jmp    DWORD PTR [edi]
  416c51:	xlat   BYTE PTR ds:[ebx]
  416c52:	pusha  
  416c53:	lods   al,BYTE PTR ds:[esi]
  416c54:	mov    cl,0xc0
  416c56:	inc    DWORD PTR [edi+0x6a]
  416c59:	push   es
  416c5a:	sub    al,0x4e
  416c5c:	popw   es
  416c5e:	pop    ecx
  416c5f:	popa   
  416c60:	pop    ds
  416c61:	daa    
  416c62:	push   ebp
  416c63:	adc    al,0xda
  416c65:	adc    dl,BYTE PTR [edx-0x42]
  416c68:	das    
  416c69:	fiadd  WORD PTR [ebp-0x7a]
  416c6c:	test   bl,bh
  416c6e:	jp     0x416c70
  416c70:	mov    edi,0xb58cfbc2
  416c75:	cmp    al,ch
  416c77:	lea    esp,[ebx+0xd]
  416c7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c7b:	mov    DWORD PTR [ebx-0x5a],esi
  416c7e:	xchg   edx,eax
  416c7f:	addr16 and eax,0x8f6b230e
  416c85:	sbb    eax,0x5e2b05fc
  416c8a:	lods   eax,DWORD PTR ds:[esi]
  416c8b:	fdiv   st(3),st
  416c8d:	dec    esp
  416c8e:	jmp    0xe56340c7
  416c93:	xlat   BYTE PTR ds:[ebx]
  416c94:	(bad)  
  416c95:	ror    BYTE PTR [ebx+0x5d8b0855],1
  416c9b:	clc    
  416c9c:	xor    edx,eax
  416c9e:	xor    ebx,eax
  416ca0:	sub    edx,ebx
  416ca2:	sub    edx,esi
  416ca4:	xor    edx,eax
  416ca6:	mov    DWORD PTR [ebp+0x8],edx
  416ca9:	mov    edx,DWORD PTR [ebp+0x8]
  416cac:	mov    ebx,DWORD PTR [ebp-0x58]
  416caf:	add    edx,0x5708fa
  416cb5:	imul   edx,ebx
  416cb8:	mov    DWORD PTR [ebp-0x58],edx
  416cbb:	mov    edx,DWORD PTR [ebp+0x8]
  416cbe:	mov    ebx,DWORD PTR [ebp-0x54]
  416cc1:	add    edx,0x64f89c
  416cc7:	or     edx,ebx
  416cc9:	mov    DWORD PTR [ebp-0x54],edx
  416ccc:	mov    edx,DWORD PTR [ebp+0x8]
  416ccf:	mov    ebx,DWORD PTR [ebp-0x50]
  416cd2:	add    edx,ecx
  416cd4:	xor    edx,ebx
  416cd6:	mov    DWORD PTR [ebp-0x50],edx
  416cd9:	mov    edx,DWORD PTR [ebp+0x8]
  416cdc:	mov    ebx,DWORD PTR [ebp-0x4c]
  416cdf:	add    edx,edi
  416ce1:	jmp    0x419066
  416ce6:	fidivr WORD PTR [ecx-0x44]
  416ce9:	call   0x43d01081
  416cee:	xchg   ebx,eax
  416cef:	jmp    0xe819:0xf58282c3
  416cf6:	cs inc esp
  416cf8:	jns    0x416d74
  416cfa:	adc    bl,BYTE PTR [edi+0x7a]
  416cfd:	jp     0x416d77
  416cff:	cs or  BYTE PTR cs:[ebp-0x5b],al
  416d04:	dec    ebp
  416d05:	idiv   BYTE PTR fs:[esi]
  416d08:	mov    BYTE PTR [ecx],dl
  416d0a:	test   al,0xb5
  416d0c:	leave  
  416d0d:	push   edx
  416d0e:	or     DWORD PTR [edx],eax
  416d10:	enter  0x960b,0x44
  416d14:	xor    ch,ch
  416d16:	cmp    esp,DWORD PTR [esi]
  416d18:	jmp    0x416ce8
  416d1a:	sbb    ch,ah
  416d1c:	mov    esp,0x75e49565
  416d21:	mov    ebx,0x55e02428
  416d26:	mov    eax,ds:0xf1393676
  416d2b:	xchg   di,ax
  416d2d:	add    DWORD PTR [eax+edx*1-0x40],0x1ffc6148
  416d35:	or     DWORD PTR [ecx-0x57657d4],eax
  416d3b:	lds    ebp,FWORD PTR [eax+0x47f7935c]
  416d41:	mov    ebp,0x621bb7ef
  416d46:	inc    ebx
  416d47:	mov    esi,0x99dd518a
  416d4c:	mov    esi,DWORD PTR [esi+0x78c7fd05]
  416d52:	in     al,dx
  416d53:	add    eax,0xa59d3546
  416d58:	add    esi,edx
  416d5a:	aad    0x6e
  416d5c:	imul   ebx,edi,0x2826182f
  416d62:	lahf   
  416d63:	xor    BYTE PTR [edi+0x35],bh
  416d66:	cmp    DWORD PTR [esi-0x32],0x61bae7b4
  416d6d:	mov    dh,0x40
  416d6f:	jo     0x416d99
  416d71:	into   
  416d72:	pop    es
  416d73:	sbb    dh,BYTE PTR [esi+0x6a]
  416d76:	in     al,0xfe
  416d78:	bound  esp,QWORD PTR [eax]
  416d7a:	out    0x9a,al
  416d7c:	dec    esp
  416d7d:	das    
  416d7e:	jbe    0x416d35
  416d80:	or     DWORD PTR [ecx],ecx
  416d82:	cld    
  416d83:	pop    edi
  416d84:	icebp  
  416d85:	and    dl,BYTE PTR [ebx+ecx*1]
  416d88:	rcr    DWORD PTR [ecx-0x3da6bd5],1
  416d8e:	popf   
  416d8f:	xchg   esi,eax
  416d90:	pop    ecx
  416d91:	fcmovb st,st(1)
  416d93:	xor    eax,0x4569cd8d
  416d98:	mov    al,ds:0x6e0559ae
  416d9d:	and    esp,DWORD PTR [edx]
  416d9f:	dec    ebx
  416da0:	ins    BYTE PTR es:[edi],dx
  416da1:	push   esp
  416da2:	or     BYTE PTR [esi+0x26],bl
  416da5:	or     bl,BYTE PTR [eax+0x3f]
  416da8:	lods   eax,DWORD PTR ds:[esi]
  416da9:	es in  al,0x62
  416dac:	jne    0x416dc1
  416dae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416daf:	mov    BYTE PTR [esi-0x5e],bl
  416db2:	in     al,dx
  416db3:	mov    cl,0x6b
  416db5:	pop    edi
  416db6:	jge    0x416d9b
  416db8:	ins    DWORD PTR es:[edi],dx
  416db9:	fcomi  st,st(2)
  416dbb:	or     edi,ecx
  416dbd:	hlt    
  416dbe:	fadd   QWORD PTR [eax+ebx*2]
  416dc1:	fisubr WORD PTR [ecx+ecx*4-0x54dedfb4]
  416dc8:	ret    0x55c5
  416dcb:	cmp    al,0x68
  416dcd:	inc    edi
  416dce:	sbb    BYTE PTR [ebx+0x25],cl
  416dd1:	push   ss
  416dd2:	push   es
  416dd3:	push   ebp
  416dd4:	xlat   BYTE PTR ds:[ebx]
  416dd5:	add    eax,DWORD PTR [ebx-0x7d]
  416dd8:	arpl   si,cx
  416dda:	jb     0x416df9
  416ddc:	leave  
  416ddd:	xchg   esp,eax
  416dde:	jb     0x416dfb
  416de0:	and    esi,DWORD PTR [ecx+esi*4]
  416de3:	(bad)  
  416de4:	stos   BYTE PTR es:[edi],al
  416de5:	mov    edx,0x2921d276
  416dea:	inc    edx
  416deb:	lock je 0x416dd1
  416dee:	sbb    ebx,ebp
  416df0:	pop    ebx
  416df1:	imul   bl
  416df3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416df4:	ins    BYTE PTR es:[edi],dx
  416df5:	add    eax,0xee938470
  416dfa:	push   esp
  416dfb:	loope  0x416dd1
  416dfd:	jmp    0xe33562e4
  416e02:	rcl    bh,0xa9
  416e05:	inc    ecx
  416e06:	retf   
  416e07:	cmp    cl,BYTE PTR [edx+0x260c4faa]
  416e0d:	and    al,BYTE PTR [eax]
  416e0f:	cs pop edi
  416e11:	mov    ebp,0x14c596f4
  416e16:	push   edi
  416e17:	sar    al,0xd5
  416e1a:	dec    ecx
  416e1b:	inc    edi
  416e1c:	inc    ecx
  416e1d:	int    0x88
  416e1f:	ins    DWORD PTR es:[edi],dx
  416e20:	nop
  416e21:	aas    
  416e22:	inc    esp
  416e23:	loopne 0x416df2
  416e25:	push   ebx
  416e26:	hlt    
  416e27:	sbb    esi,DWORD PTR [ebx+0x4488aa8c]
  416e2d:	in     eax,dx
  416e2e:	inc    esi
  416e2f:	or     DWORD PTR [ecx+0x22],ebp
  416e32:	das    
  416e33:	pop    eax
  416e34:	imul   DWORD PTR [eax+0x4c]
  416e37:	xchg   esp,eax
  416e38:	mov    esi,0xfd721b06
  416e3d:	dec    ecx
  416e3e:	xor    BYTE PTR [eax+esi*8-0x7a3c7ae8],dl
  416e45:	out    dx,eax
  416e46:	fmul   DWORD PTR [edi-0x33]
  416e49:	fs dec ebx
  416e4b:	push   eax
  416e4c:	sbb    bh,ah
  416e4e:	mov    cl,0xf3
  416e50:	inc    ebx
  416e51:	lock sub ebp,DWORD PTR [esi]
  416e54:	loopne 0x416de8
  416e56:	shl    BYTE PTR [edi],0x9e
  416e59:	mov    al,ds:0x64c5d302
  416e5e:	push   ss
  416e5f:	psllq  mm2,QWORD PTR [ebp+0x4e]
  416e63:	retf   
  416e64:	mov    ebp,0x4433a55
  416e69:	jge    0x416e47
  416e6b:	or     eax,0x47f642e7
  416e70:	(bad)  
  416e71:	icebp  
  416e72:	sahf   
  416e73:	in     al,0xa6
  416e75:	jbe    0x416e78
  416e77:	imul   ecx,DWORD PTR [edi+0x7b79a89f],0x62
  416e7e:	(bad)  
  416e7f:	out    0x95,al
  416e81:	adc    BYTE PTR [eax],dl
  416e83:	retf   
  416e84:	mov    bl,0x67
  416e86:	mov    al,0x24
  416e88:	repz in eax,0x52
  416e8b:	nop
  416e8c:	bound  ebp,QWORD PTR [ebp+edx*8-0x4d4c48f4]
  416e93:	jg     0x416e83
  416e95:	mov    edi,0xe3187945
  416e9a:	enter  0x44c6,0xdb
  416e9e:	call   0xb2a9:0x860ccea9
  416ea5:	or     dl,BYTE PTR ds:0xd7527521
  416eab:	mov    ecx,0xc16ca510
  416eb0:	push   eax
  416eb1:	or     BYTE PTR [edi],0xaf
  416eb4:	in     eax,dx
  416eb5:	dec    DWORD PTR [eax+0x3dd7ca49]
  416ebb:	xor    al,0x6
  416ebd:	std    
  416ebe:	xor    eax,0xde973f21
  416ec3:	jne    0x416f03
  416ec5:	xor    BYTE PTR ss:[eax+0x6d],bh
  416ec9:	loop   0x416e91
  416ecb:	in     al,dx
  416ecc:	or     eax,0xab80e3ee
  416ed1:	jns    0x416e71
  416ed3:	cmp    ch,BYTE PTR [edx+0x883eee]
  416ed9:	(bad)  
  416eda:	jecxz  0x416f12
  416edc:	data16 cld 
  416ede:	addr16 ss clc 
  416ee1:	sti    
  416ee2:	leave  
  416ee3:	(bad)  
  416ee4:	fmulp  st(5),st
  416ee6:	cmc    
  416ee7:	jbe    0x416ef8
  416ee9:	fucomi st,st(6)
  416eeb:	dec    ebp
  416eec:	push   esi
  416eed:	mov    al,ds:0x5afd7e85
  416ef2:	and    eax,0xe7c832c1
  416ef7:	bound  edi,QWORD PTR [eax]
  416ef9:	or     bl,BYTE PTR [ebp+edx*4-0x42]
  416efd:	sub    al,0x6e
  416eff:	mov    ah,0xcc
  416f01:	rcr    DWORD PTR [esi-0x6b9a165f],0xcd
  416f08:	and    BYTE PTR [ebx],bl
  416f0a:	mov    edi,0x8a46dd71
  416f0f:	cmp    ebx,DWORD PTR [esi+0x50112276]
  416f15:	ins    DWORD PTR es:[edi],dx
  416f16:	push   cs
  416f17:	push   eax
  416f18:	sub    DWORD PTR [edi+0x20],0x65
  416f1c:	in     eax,dx
  416f1d:	dec    ecx
  416f1e:	icebp  
  416f1f:	jmp    0xb17a1270
  416f24:	push   ds
  416f25:	pop    ss
  416f26:	aad    0x6f
  416f28:	cmp    al,0x4d
  416f2a:	and    eax,0x48e155fa
  416f2f:	aaa    
  416f30:	ins    BYTE PTR es:[edi],dx
  416f31:	rcr    eax,cl
  416f33:	mov    ebp,0xc30c21b4
  416f38:	popa   
  416f39:	or     ch,BYTE PTR [edx-0x3af703b1]
  416f3f:	stc    
  416f40:	jns    0x416fb3
  416f42:	fsub   DWORD PTR [ebx-0x3b291db0]
  416f48:	out    dx,al
  416f49:	or     ebx,DWORD PTR [ebp-0x70]
  416f4c:	retf   
  416f4d:	fisttp DWORD PTR [esi+ecx*8-0x153ab163]
  416f54:	shl    bl,1
  416f56:	pop    ss
  416f57:	enter  0x8bf6,0x42
  416f5b:	mov    al,ds:0xad54ae77
  416f60:	xchg   DWORD PTR [ebp+ebx*4+0x7fef238a],ebx
  416f67:	fld    TBYTE PTR ds:0x6e21229d
  416f6d:	out    dx,eax
  416f6e:	dec    ebx
  416f6f:	sbb    ch,BYTE PTR [eax-0x6d7564cb]
  416f75:	bound  edx,QWORD PTR [eax]
  416f77:	in     al,0x45
  416f79:	inc    esp
  416f7a:	rcr    BYTE PTR [eax+0x3e],0xb2
  416f7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f7f:	adc    al,0x33
  416f81:	cmp    eax,0x839066d8
  416f86:	addr16 (bad) 
  416f88:	int    0x69
  416f8a:	push   eax
  416f8b:	fstp   DWORD PTR [edi+0x2cfc7b33]
  416f91:	pop    eax
  416f92:	loop   0x416fda
  416f94:	sahf   
  416f95:	into   
  416f96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f97:	hlt    
  416f98:	fwait
  416f99:	adc    BYTE PTR [esi+0x22],bl
  416f9c:	(bad)  
  416f9d:	sub    DWORD PTR [edx+0x5],ebx
  416fa0:	xor    DWORD PTR ds:0x6a4bfdd6,esp
  416fa6:	ja     0x416fe5
  416fa8:	add    ebp,DWORD PTR [edx+ebx*2]
  416fab:	movntsd QWORD PTR [ecx-0x5],xmm1
  416fb0:	icebp  
  416fb1:	mov    bh,BYTE PTR [esi+ebx*8+0x268e722e]
  416fb8:	xor    DWORD PTR [edi-0x61a7d635],0xffffffff
  416fbf:	push   edx
  416fc0:	cld    
  416fc1:	or     esp,DWORD PTR [eax]
  416fc3:	or     eax,0x65b653
  416fc8:	fwait
  416fc9:	sub    BYTE PTR [ebp-0x2e327fba],0xad
  416fd0:	repz lea esi,[esi+0x2a]
  416fd4:	bound  esp,QWORD PTR [ebx-0x4ca35fd]
  416fda:	mov    esi,0xe6f62abf
  416fdf:	imul   esp,DWORD PTR [edi],0xa724de21
  416fe5:	aam    0xf6
  416fe7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fe8:	xchg   DWORD PTR [edx-0x53fb1f95],ebp
  416fee:	cmp    DWORD PTR [ebx+0x1f66d12],eax
  416ff4:	cmp    eax,0xfec24c70
  416ff9:	xlat   BYTE PTR ds:[ebx]
  416ffa:	mov    esi,ecx
  416ffc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ffd:	outs   dx,BYTE PTR ds:[esi]
  416ffe:	outs   dx,BYTE PTR ds:[esi]
  416fff:	nop
  417000:	and    eax,0x27846e02
  417005:	jnp    0x41705b
  417007:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417008:	stos   DWORD PTR es:[edi],eax
  417009:	outs   dx,DWORD PTR ds:[esi]
  41700a:	(bad)  
  41700b:	mov    eax,0x1ad9f484
  417010:	call   0xf450f615
  417015:	(bad)  
  417016:	std    
  417017:	mov    ebp,DWORD PTR [ebx-0x54]
  41701a:	push   ebp
  41701b:	xchg   DWORD PTR [esp+ebx*1],esp
  41701e:	out    0x49,al
  417020:	aad    0xbc
  417022:	mov    di,0xd7e8
  417026:	das    
  417027:	gs sbb ah,bh
  41702a:	scas   eax,DWORD PTR es:[edi]
  41702b:	daa    
  41702c:	loop   0x4170a8
  41702e:	add    al,0xa2
  417030:	in     al,0x82
  417032:	(bad)
  417035:	pop    ecx
  417036:	int    0x3a
  417038:	popa   
  417039:	mov    al,0x20
  41703b:	pop    edx
  41703c:	div    DWORD PTR [ecx+0x1a16e438]
  417042:	mov    ds:0x5bfaa9b7,al
  417047:	sub    BYTE PTR [esi-0x2e689be2],dh
  41704d:	push   edx
  41704e:	add    DWORD PTR [edi+0xd70b17a],edx
  417054:	xchg   esi,eax
  417055:	mov    BYTE PTR [edx+eax*1+0x2c],dl
  417059:	rcr    BYTE PTR [edx-0x6bc243c6],cl
  41705f:	stc    
  417060:	js     0x4170dd
  417062:	int    0xc1
  417064:	or     DWORD PTR [edi+0x66],ebx
  417067:	ss int 0x77
  41706a:	sub    al,0x99
  41706c:	fsubr  st(3),st
  41706e:	pop    ecx
  41706f:	out    0xf3,al
  417071:	aas    
  417072:	jmp    0x83da9b89
  417077:	jo     0x417060
  417079:	push   0x7d0c563d
  41707e:	gs mov dh,0xa7
  417081:	dec    edi
  417082:	and    DWORD PTR [edi-0x3c782132],0x38
  417089:	inc    ebp
  41708a:	repz (bad) 
  41708c:	hlt    
  41708d:	rol    edx,0x73
  417090:	test   al,dl
  417092:	lds    esi,FWORD PTR [eax-0x4a]
  417095:	fisttp DWORD PTR [eax]
  417097:	jae    0x41708e
  417099:	jmp    0x4170d5
  41709b:	mov    esi,0x68dd8025
  4170a0:	mov    DWORD PTR [esi-0x4f],ebp
  4170a3:	inc    ebp
  4170a4:	push   cs
  4170a5:	out    dx,eax
  4170a6:	idiv   ah
  4170a8:	sub    al,0x2
  4170aa:	outs   dx,BYTE PTR ds:[esi]
  4170ab:	stos   BYTE PTR es:[edi],al
  4170ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170ad:	mov    ebp,0xdcf1b401
  4170b2:	jae    0x4170b9
  4170b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170b5:	aas    
  4170b6:	sahf   
  4170b7:	inc    ebp
  4170b8:	xchg   esp,eax
  4170b9:	adc    DWORD PTR [ecx+ecx*8+0x518d8d92],ecx
  4170c0:	or     DWORD PTR [ecx-0x514cc6ee],eax
  4170c6:	push   ds
  4170c7:	push   edi
  4170c8:	pop    edi
  4170c9:	les    eax,FWORD PTR [edx]
  4170cb:	gs xchg edx,eax
  4170cd:	pop    edi
  4170ce:	iret   
  4170cf:	mov    ecx,0xec1904be
  4170d4:	lods   eax,DWORD PTR ds:[esi]
  4170d5:	jmp    0xf279:0x6cda38b9
  4170dc:	ja     0x41713a
  4170de:	aam    0x32
  4170e0:	push   0xd
  4170e2:	jo     0x417123
  4170e4:	retf   
  4170e5:	int    0x5
  4170e7:	arpl   WORD PTR [ebp+0x10],bx
  4170ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170eb:	cdq    
  4170ec:	xchg   DWORD PTR [esi-0x38],ecx
  4170ef:	mov    esi,0x52796093
  4170f4:	stc    
  4170f5:	sahf   
  4170f6:	shr    ecx,0x23
  4170f9:	(bad)  
  4170fa:	pop    esi
  4170fb:	(bad)  
  4170fc:	pop    ebp
  4170fd:	int3   
  4170fe:	push   ebp
  4170ff:	mov    dl,0xa6
  417101:	adc    BYTE PTR [eax],0x24
  417104:	mov    dh,0x7f
  417106:	adc    DWORD PTR [ebx],0xffffffaf
  417109:	mov    es,WORD PTR [edi+0x19]
  41710c:	cld    
  41710d:	in     al,0x9
  41710f:	adc    DWORD PTR [edx+0x47],edi
  417112:	shl    BYTE PTR [edx-0x77],cl
  417115:	fcmovnbe st,st(5)
  417117:	mov    esp,0x40b44a33
  41711c:	and    edi,DWORD PTR [ecx-0xc]
  41711f:	fwait
  417120:	xor    BYTE PTR [esi+0x3b4fb21a],dl
  417126:	clc    
  417127:	pop    esp
  417128:	adc    al,0xfe
  41712a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41712b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41712c:	ret    
  41712d:	jo     0x4170cb
  41712f:	shl    DWORD PTR [ebp-0xb],1
  417132:	sbb    DWORD PTR [ebx+ebx*1+0xa],0x7c29f71c
  41713a:	repnz xor BYTE PTR [ecx],cl
  41713d:	add    ebp,esi
  41713f:	fistp  WORD PTR [edi-0x7b4c7bd4]
  417145:	out    0xaa,eax
  417147:	push   ebx
  417148:	push   esp
  417149:	rcl    BYTE PTR [esi],1
  41714b:	repnz int3 
  41714d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41714e:	pop    ds
  41714f:	and    al,0xe1
  417151:	in     al,dx
  417152:	out    0x55,eax
  417154:	inc    ecx
  417155:	jg     0x41715a
  417157:	add    ah,BYTE PTR [ebx]
  417159:	sbb    DWORD PTR fs:[eax],ebx
  41715c:	(bad)  
  41715d:	cmc    
  41715e:	fucomp st(4)
  417160:	dec    ebx
  417161:	aad    0x91
  417163:	iret   
  417164:	xchg   ecx,eax
  417165:	mov    esp,0x7fce8a1a
  41716a:	mov    gs,WORD PTR [ebp-0x6c9069]
  417170:	fs pop ss
  417172:	mov    al,ds:0x436d43e3
  417177:	rcl    edx,1
  417179:	loopne 0x417102
  41717b:	pop    eax
  41717c:	scas   al,BYTE PTR es:[edi]
  41717d:	pop    edx
  41717e:	jne    0x4171a1
  417180:	std    
  417181:	ss aas 
  417183:	cmp    eax,0x391c0501
  417188:	sbb    bh,BYTE PTR [ebx+0x9]
  41718b:	xchg   ebp,eax
  41718c:	jae    0x417167
  41718e:	mov    esi,0x8301a523
  417193:	cmp    BYTE PTR [esp+esi*4-0x326591c8],ch
  41719a:	mov    ds:0xba819814,eax
  41719f:	fnstsw WORD PTR [edi]
  4171a1:	cmp    DWORD PTR [esi-0x4e],eax
  4171a4:	mov    ah,ch
  4171a6:	popa   
  4171a7:	mov    ebx,0x3f54e7da
  4171ac:	ror    BYTE PTR [eiz*2+0xce06a7b],cl
  4171b3:	mov    edi,DWORD PTR [esi+0x56534ada]
  4171b9:	xchg   edx,eax
  4171ba:	lds    edi,FWORD PTR [esi-0x16]
  4171bd:	out    dx,eax
  4171be:	and    edi,DWORD PTR [ecx+0x62]
  4171c1:	sub    DWORD PTR [ebp-0x4b],ebx
  4171c4:	adc    ecx,DWORD PTR [ebx-0x1d]
  4171c7:	xchg   edi,eax
  4171c8:	out    0x23,al
  4171ca:	and    eax,0x6e0ea186
  4171cf:	or     bl,ah
  4171d1:	inc    esp
  4171d2:	push   ds
  4171d3:	dec    esp
  4171d4:	pop    ds
  4171d5:	push   ecx
  4171d6:	and    eax,0x69d35621
  4171db:	icebp  
  4171dc:	xchg   DWORD PTR [esi],ecx
  4171de:	add    edx,DWORD PTR [ebp-0x18792f6b]
  4171e4:	das    
  4171e5:	cld    
  4171e6:	(bad)  
  4171e7:	push   edx
  4171e8:	mov    cl,0x68
  4171ea:	stc    
  4171eb:	sar    DWORD PTR [eax-0x6de47f4c],1
  4171f1:	frstor [edx-0x69]
  4171f4:	int    0xbc
  4171f6:	cmp    ecx,DWORD PTR [ebx]
  4171f8:	push   edx
  4171f9:	mov    dl,0x52
  4171fb:	inc    edx
  4171fc:	sbb    eax,0xa6a7d7d1
  417201:	stc    
  417202:	(bad)  
  417203:	pop    ds
  417204:	mov    ebx,0xa7cab2de
  417209:	rcl    edx,cl
  41720b:	ins    BYTE PTR es:[edi],dx
  41720c:	mov    edi,0x84c0bd1c
  417211:	fistp  DWORD PTR [edx+0x7946c035]
  417217:	daa    
  417218:	jg     0xd733046b
  41721e:	inc    ebx
  41721f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417220:	push   edx
  417221:	mov    ah,al
  417223:	mov    esi,0x1b640897
  417228:	pushf  
  417229:	daa    
  41722a:	add    esp,DWORD PTR [esi-0xaad0531]
  417230:	enter  0xbe67,0x91
  417234:	mov    ah,0x2c
  417236:	add    BYTE PTR [ecx+0x746c8661],ch
  41723c:	or     BYTE PTR [esi],0x93
  41723f:	xchg   ebx,eax
  417240:	mov    bl,0xdb
  417242:	dec    eax
  417243:	dec    esi
  417244:	dec    esi
  417245:	mov    esp,0xc0957aa
  41724a:	popa   
  41724b:	adc    eax,0xa23c5ca2
  417250:	sahf   
  417251:	inc    esi
  417252:	xchg   esp,eax
  417253:	fwait
  417254:	gs es adc al,0x92
  417258:	loope  0x417227
  41725a:	(bad)  
  41725b:	repz js 0x4171ec
  41725e:	jae    0x417258
  417260:	mov    edi,0x711909b2
  417265:	lock push edx
  417267:	adc    edi,DWORD PTR [eax+0x6e]
  41726a:	jmp    0xfc6fe12e
  41726f:	pop    es
  417270:	repz ds xor esi,edx
  417274:	or     ebx,DWORD PTR [eax+eiz*8-0x67eb7346]
  41727b:	popa   
  41727c:	or     eax,0xc2a3c91e
  417281:	or     eax,0xf21fc996
  417286:	pop    esp
  417287:	jg     0x4172ce
  417289:	scas   al,BYTE PTR es:[edi]
  41728a:	push   0x202fc9b8
  41728f:	mov    cl,0x5d
  417291:	fcom   st(0)
  417293:	retf   
  417294:	cmp    eax,DWORD PTR [edi-0x4fe4682f]
  41729a:	ss sbb edi,esi
  41729d:	xchg   ebx,eax
  41729e:	jmp    0xc8e2:0xb5095dfa
  4172a5:	mov    fs,WORD PTR [ecx+0x23]
  4172a8:	or     esp,DWORD PTR [edi-0x4bd00099]
  4172ae:	cwde   
  4172af:	pop    ebp
  4172b0:	pop    ecx
  4172b1:	jmp    ebx
  4172b3:	ja     0x4172a1
  4172b5:	or     eax,0xf2281343
  4172ba:	call   0xf2dfdde4
  4172bf:	hlt    
  4172c0:	inc    esi
  4172c1:	sbb    cl,al
  4172c3:	mov    eax,ds:0x8d6ded18
  4172c8:	outs   dx,DWORD PTR ds:[esi]
  4172c9:	mov    fs,WORD PTR [esi+0x63]
  4172cc:	sbb    dl,BYTE PTR [ecx-0x39]
  4172cf:	sti    
  4172d0:	(bad)  
  4172d1:	jnp    0x417256
  4172d3:	or     eax,0x69edca5a
  4172d8:	das    
  4172d9:	js     0x4172a5
  4172db:	sbb    DWORD PTR [edi+0x1f2fa92c],esp
  4172e1:	add    DWORD PTR [ebx],ecx
  4172e3:	sbb    al,0x40
  4172e5:	pop    esi
  4172e6:	retf   
  4172e7:	mov    dh,0xa4
  4172e9:	je     0x417321
  4172eb:	in     al,0x4b
  4172ed:	rcl    DWORD PTR [ecx+0x185b7451],1
  4172f3:	dec    eax
  4172f4:	push   es
  4172f5:	ret    0x5b75
  4172f8:	aad    0xa7
  4172fa:	dec    edx
  4172fb:	xor    eax,0xec89720f
  417300:	idiv   DWORD PTR [edi]
  417302:	or     bl,BYTE PTR [eax-0x6a]
  417305:	cdq    
  417306:	popf   
  417307:	out    dx,eax
  417308:	fsubr  DWORD PTR [edi]
  41730a:	int3   
  41730b:	ins    DWORD PTR es:[edi],dx
  41730c:	jno    0x417369
  41730e:	and    eax,0xef1e3ebd
  417313:	popa   
  417314:	and    DWORD PTR [edx-0x147ec7bd],edx
  41731a:	fsub   QWORD PTR [ebp+0x1d]
  41731d:	cs mov al,0xb0
  417320:	arpl   WORD PTR [ecx],si
  417322:	ds mov esi,0x3142f4c9
  417328:	sbb    dl,dl
  41732a:	icebp  
  41732b:	mov    edi,0x4faf512d
  417330:	fs mov ebx,0xdd493f58
  417336:	and    al,BYTE PTR [ebp-0x4b]
  417339:	fisub  WORD PTR [ebx+0x75]
  41733c:	pushf  
  41733d:	mov    edx,0x3deced9a
  417342:	inc    eax
  417343:	and    al,0x69
  417345:	jg     0x41738e
  417347:	push   es
  417348:	and    DWORD PTR [edx],ebx
  41734a:	into   
  41734b:	sbb    al,0x4b
  41734d:	sub    ebx,DWORD PTR [esp+ecx*2]
  417350:	sub    eax,0x142b6d0c
  417355:	xchg   ebx,eax
  417356:	xor    ch,BYTE PTR [edx+0x716bdb99]
  41735c:	fsubr  DWORD PTR [ebp-0x63]
  41735f:	xchg   esp,eax
  417360:	in     al,0xe
  417362:	pop    esp
  417363:	pop    ecx
  417364:	cwde   
  417365:	rol    BYTE PTR [ecx-0x7b29fd17],cl
  41736b:	pop    edi
  41736c:	or     BYTE PTR [ecx-0x36],al
  41736f:	xchg   ecx,eax
  417370:	jp     0x41732b
  417372:	inc    eax
  417373:	lods   al,BYTE PTR ds:[esi]
  417374:	xchg   DWORD PTR [edx],ebp
  417376:	push   cs
  417377:	mov    ecx,0xa7478d3
  41737c:	pop    eax
  41737d:	adc    eax,0xf318fa66
  417382:	sub    eax,0x9791f928
  417387:	xchg   ebx,eax
  417388:	inc    eax
  417389:	stos   DWORD PTR es:[edi],eax
  41738a:	scas   al,BYTE PTR es:[edi]
  41738b:	mov    al,BYTE PTR [eax+0x62]
  41738e:	xchg   esi,eax
  41738f:	aas    
  417390:	xor    ah,BYTE PTR [eax]
  417392:	dec    edi
  417393:	pop    edi
  417394:	aaa    
  417395:	cmp    BYTE PTR [eax],cl
  417397:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  417399:	mov    ds,WORD PTR [ecx-0x5575fd5c]
  41739f:	lahf   
  4173a0:	mov    bh,0xdb
  4173a2:	mov    ds:0xf1382508,al
  4173a7:	cld    
  4173a8:	les    ecx,FWORD PTR [edx+0x3a]
  4173ab:	add    edx,DWORD PTR [ecx+0x6b]
  4173ae:	mov    bh,0x3e
  4173b0:	and    al,0xca
  4173b2:	shl    DWORD PTR [edi],1
  4173b4:	mov    al,ds:0xb0cd7547
  4173b9:	jge    0x41735b
  4173bb:	test   DWORD PTR [ecx],edx
  4173bd:	ds pop ss
  4173bf:	adc    DWORD PTR [ebp-0x3c],0x173a1aa8
  4173c6:	mov    ebp,0xc9bf0b36
  4173cb:	in     eax,dx
  4173cc:	push   eax
  4173cd:	mov    eax,cs:0x647f44ca
  4173d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173d4:	inc    eax
  4173d5:	dec    edi
  4173d6:	sub    al,0x45
  4173d8:	xchg   edx,eax
  4173d9:	mov    ch,0x69
  4173db:	sub    DWORD PTR [edi-0x2b],ebp
  4173de:	loop   0x4173d4
  4173e0:	test   DWORD PTR [ebp-0x3c224c5],edx
  4173e6:	add    al,0x34
  4173e8:	push   0xffffffc6
  4173ea:	xchg   DWORD PTR [ebp-0x15],edi
  4173ed:	push   esp
  4173ee:	cmp    al,0xd0
  4173f0:	imul   esi,DWORD PTR [edx],0x80ce4935
  4173f6:	pop    DWORD PTR [eax-0x9]
  4173f9:	imul   ebp,DWORD PTR [eax+0x11bc2af2],0x33
  417400:	xchg   edi,eax
  417401:	neg    BYTE PTR [edi+ebx*1]
  417404:	mov    eax,0x17143d1f
  417409:	ins    BYTE PTR es:[edi],dx
  41740a:	not    bh
  41740c:	ret    0x7d17
  41740f:	int3   
  417410:	fistp  QWORD PTR [ebx-0x3f]
  417413:	daa    
  417414:	ss push edi
  417416:	clc    
  417417:	add    al,0x33
  417419:	retf   
  41741a:	push   eax
  41741b:	or     al,0x87
  41741d:	or     al,0x80
  41741f:	pop    ebp
  417420:	adc    DWORD PTR [edi+esi*4+0x1bd762bc],edi
  417427:	inc    ebx
  417428:	hlt    
  417429:	jb     0x4173bb
  41742b:	mov    ah,0xb2
  41742d:	hlt    
  41742e:	hlt    
  41742f:	dec    ebx
  417430:	daa    
  417431:	inc    eax
  417432:	cmp    al,0xcd
  417434:	mov    bh,0xc1
  417436:	cli    
  417437:	inc    ecx
  417438:	cmc    
  417439:	jp     0x417443
  41743b:	adc    al,0x1b
  41743d:	push   es
  41743e:	mov    ?,edx
  417440:	sub    DWORD PTR [ebp+0x72ee4e8b],ebx
  417446:	fs repz call 0xcc27c
  41744d:	cmp    ch,bl
  41744f:	lds    ebp,FWORD PTR [esi]
  417451:	adc    eax,0x69ac058e
  417456:	mov    ch,0x8e
  417458:	inc    edi
  417459:	rcl    BYTE PTR [edi+0x59],0x5b
  41745d:	ins    BYTE PTR es:[edi],dx
  41745e:	int3   
  41745f:	pop    ebx
  417460:	cmp    BYTE PTR [esi+0x5],0x8e
  417464:	push   edi
  417465:	mov    edi,0x85a3db5d
  41746a:	pop    edx
  41746b:	repnz int3 
  41746d:	sbb    BYTE PTR [ebx],0x49
  417470:	jmp    0xacaeb39
  417475:	repz das 
  417477:	out    dx,eax
  417478:	ret    0x5076
  41747b:	jnp    0x417455
  41747d:	inc    esi
  41747e:	mov    ecx,ebp
  417480:	fldcw  WORD PTR [edx-0x4901e96]
  417486:	shr    BYTE PTR [ecx-0x2ff42b6e],1
  41748c:	xor    BYTE PTR [edi+0x10b79a75],dh
  417492:	(bad)  
  417493:	push   0xffffffb2
  417495:	mov    bh,0xcc
  417497:	or     ch,BYTE PTR [di]
  41749a:	add    DWORD PTR [ebx-0x5a6d1eaa],ecx
  4174a0:	inc    esi
  4174a1:	stc    
  4174a2:	jno    0x417498
  4174a4:	xor    eax,ebx
  4174a6:	jmp    0x9cc2:0x2b01306b
  4174ad:	pop    eax
  4174ae:	cmp    al,bl
  4174b0:	aad    0x2e
  4174b2:	and    edx,DWORD PTR [ecx]
  4174b4:	stos   DWORD PTR es:[edi],eax
  4174b5:	xor    eax,DWORD PTR [ebx]
  4174b7:	in     eax,0x2e
  4174b9:	jg     0x417530
  4174bb:	rcl    BYTE PTR [edx-0x78],1
  4174be:	pop    ebx
  4174bf:	aad    0x5a
  4174c1:	pop    DWORD PTR [ebx-0x4849f189]
  4174c7:	jne    0x417538
  4174c9:	inc    ecx
  4174ca:	enter  0xa6ff,0xc4
  4174ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4174cf:	shl    bl,1
  4174d1:	push   edx
  4174d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174d3:	les    ebp,FWORD PTR [eax+0x34]
  4174d6:	js     0x417495
  4174d8:	cmp    al,0x32
  4174da:	mov    al,0xb7
  4174dc:	xor    bl,BYTE PTR [edi+0x57f0ff3e]
  4174e2:	push   ss
  4174e3:	inc    ebx
  4174e4:	mov    esp,DWORD PTR [edi]
  4174e6:	stos   DWORD PTR es:[edi],eax
  4174e7:	in     al,dx
  4174e8:	rcl    DWORD PTR [edx-0x5c],1
  4174eb:	retf   
  4174ec:	fst    st(1)
  4174ee:	pop    esi
  4174ef:	sub    eax,0xfffffff9
  4174f2:	dec    esi
  4174f3:	ret    
  4174f4:	sub    eax,esi
  4174f6:	das    
  4174f7:	sub    ebx,DWORD PTR [ecx+0x6a]
  4174fa:	mov    al,0x9e
  4174fc:	shl    BYTE PTR [ecx-0x46982f2f],cl
  417502:	mov    ecx,eax
  417504:	sub    ch,dl
  417506:	xor    ebx,DWORD PTR [eax+0x22]
  417509:	push   ds
  41750a:	es mov ah,0xaf
  41750d:	mov    cl,BYTE PTR [edx+0x6f]
  417510:	shl    ebp,cl
  417512:	lods   al,BYTE PTR ds:[esi]
  417513:	xchg   edx,eax
  417514:	jecxz  0x4174f1
  417516:	xor    al,BYTE PTR [edi+0x0]
  417519:	or     edi,DWORD PTR [ebx+0x35]
  41751c:	scas   al,BYTE PTR es:[edi]
  41751d:	pop    ebx
  41751e:	jp     0x417505
  417520:	and    eax,0x64b0527a
  417525:	(bad)
  417528:	xchg   ebp,eax
  417529:	push   ecx
  41752a:	and    esp,ebp
  41752c:	cs cwde 
  41752e:	pop    ebp
  41752f:	cli    
  417530:	pop    edx
  417531:	lods   al,BYTE PTR ds:[esi]
  417532:	adc    ebx,DWORD PTR [ebx+0x6b6fb455]
  417538:	shl    BYTE PTR [esi+eax*1+0xb],1
  41753c:	pusha  
  41753d:	mov    dl,0xab
  41753f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417540:	push   0x1493bcaf
  417545:	push   ecx
  417546:	or     eax,0xecbd4f2e
  41754b:	scas   al,BYTE PTR es:[edi]
  41754c:	push   ds
  41754d:	xchg   esi,eax
  41754e:	xor    ebp,esp
  417550:	and    al,0xb6
  417552:	push   0x12
  417554:	sbb    al,0xe
  417557:	enter  0x34b5,0xad
  41755b:	sub    esi,edi
  41755d:	adc    WORD PTR [eax],0xff98
  417561:	mov    ds:0xe6c8db73,eax
  417566:	push   ebp
  417567:	and    BYTE PTR [esi+eiz*1],dh
  41756a:	xchg   ecx,eax
  41756b:	or     edx,DWORD PTR [esi-0x15808554]
  417571:	mov    cl,0x10
  417573:	aam    0x75
  417575:	cwde   
  417576:	add    eax,0x7eeb92e4
  41757b:	mov    edi,0xb30f8049
  417580:	xor    bl,BYTE PTR [edi]
  417582:	sbb    eax,0x6097a625
  417587:	xchg   edi,eax
  417588:	iret   
  417589:	xor    DWORD PTR [edi-0x2170979d],eax
  41758f:	je     0x41759d
  417591:	xchg   ebx,eax
  417592:	imul   ecx,DWORD PTR ds:0x2baba87c,0xaf3372e8
  41759c:	call   0xfaaa:0x718911
  4175a3:	push   ebx
  4175a4:	jae    0x417533
  4175a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175a7:	jecxz  0x417610
  4175a9:	iret   
  4175aa:	fwait
  4175ab:	add    ch,ch
  4175ad:	push   edx
  4175ae:	dec    ebx
  4175af:	push   ebx
  4175b0:	mov    esi,0x48f69af
  4175b5:	or     DWORD PTR [edx],edi
  4175b7:	jnp    0x4175bc
  4175b9:	paddusw mm4,QWORD PTR [ebx+0x7d]
  4175bd:	std    
  4175be:	loop   0x417565
  4175c0:	xor    ah,0xdd
  4175c3:	xchg   esp,eax
  4175c4:	aas    
  4175c5:	cwde   
  4175c6:	and    al,0x1c
  4175c8:	jns    0x4175e5
  4175ca:	push   ds
  4175cb:	xchg   esp,eax
  4175cc:	xchg   edi,eax
  4175cd:	dec    ebx
  4175ce:	dec    edx
  4175cf:	jle    0x417642
  4175d1:	mov    dh,0x97
  4175d3:	(bad)  
  4175d4:	mov    ds:0xc3789fd6,al
  4175d9:	imul   cl
  4175db:	xor    edx,DWORD PTR [edx]
  4175dd:	sbb    dl,dh
  4175df:	push   eax
  4175e0:	retf   0x5078
  4175e3:	rcl    DWORD PTR [ecx],0xc5
  4175e6:	inc    edi
  4175e7:	inc    DWORD PTR [edx+ebx*2]
  4175ea:	jae    0x417608
  4175ec:	adc    al,0x72
  4175ee:	lods   al,BYTE PTR ds:[esi]
  4175ef:	jmp    0x41765f
  4175f1:	pop    DWORD PTR [ecx+0x21022d23]
  4175f7:	popa   
  4175f8:	sar    ebp,1
  4175fa:	sti    
  4175fb:	cli    
  4175fc:	inc    ebp
  4175fd:	(bad)  
  4175fe:	fsubr  DWORD PTR [ebp+0x5e3a0111]
  417604:	fs jns 0x417628
  417607:	and    al,0xaf
  417609:	xchg   ebp,eax
  41760a:	in     al,0x3c
  41760c:	and    DWORD PTR [edi+0x617a6bcc],ebp
  417612:	scas   al,BYTE PTR es:[edi]
  417613:	xor    BYTE PTR [ebx-0x3e94f97a],dh
  417619:	lock and ah,BYTE PTR ds:[eax]
  41761d:	mov    BYTE PTR [esi],0x14
  417620:	cli    
  417621:	sbb    al,0x6a
  417623:	pop    ss
  417624:	cdq    
  417625:	pop    ecx
  417626:	sub    BYTE PTR [eax+0x55879b0b],0x66
  41762d:	cmp    BYTE PTR [ecx-0xade55d0],cl
  417633:	dec    eax
  417634:	inc    eax
  417635:	adc    eax,ebp
  417637:	jmp    DWORD PTR [ebx-0x39]
  41763a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41763b:	rcl    DWORD PTR [eax-0x72],0xa
  41763f:	test   eax,0xecc92628
  417644:	ins    DWORD PTR es:[edi],dx
  417645:	int    0x85
  417647:	addr16 cmp al,0xf
  41764a:	xchg   BYTE PTR [edx],cl
  41764c:	mov    ebp,0x92b08b9c
  417651:	adc    DWORD PTR ds:0x5c4e4821,edi
  417657:	shl    BYTE PTR [eax+0x51142bb3],cl
  41765d:	inc    eax
  41765e:	pop    ss
  41765f:	cli    
  417660:	xor    ebx,DWORD PTR ds:0xbff76ec1
  417666:	and    esi,edi
  417668:	ins    DWORD PTR es:[edi],dx
  417669:	call   0x908702e6
  41766e:	inc    esp
  41766f:	push   ss
  417670:	jae    0x417655
  417672:	ss clc 
  417674:	cld    
  417675:	shl    bh,0x91
  417678:	pop    es
  417679:	push   edx
  41767a:	rcl    DWORD PTR [edx-0x170bd8ec],1
  417680:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417681:	cmp    DWORD PTR [edi+0x30],edi
  417684:	cdq    
  417685:	in     al,dx
  417686:	jg     0x417685
  417688:	mov    BYTE PTR [ecx],bl
  41768a:	into   
  41768b:	scas   al,BYTE PTR es:[edi]
  41768c:	imul   eax,edi,0x3b
  41768f:	pushw  cs
  417691:	out    dx,eax
  417692:	pop    ds
  417693:	or     ecx,DWORD PTR [ebx-0x4169b1a3]
  417699:	mov    ebp,0xeb541799
  41769e:	out    dx,eax
  41769f:	pop    es
  4176a0:	imul   esp,DWORD PTR [eax-0x52],0x6b
  4176a4:	nop
  4176a5:	xor    bl,BYTE PTR [ebp+0x10]
  4176a8:	(bad)  
  4176a9:	les    esi,FWORD PTR ds:0xb4c9cc73
  4176af:	in     al,dx
  4176b0:	shl    BYTE PTR [ebp-0x46583f28],0x73
  4176b7:	rol    BYTE PTR [eax-0x3],1
  4176ba:	shl    ch,0x99
  4176bd:	sbb    al,0xb0
  4176bf:	and    al,BYTE PTR [esi+0x38]
  4176c2:	aam    0x57
  4176c4:	(bad)  
  4176c5:	(bad)  
  4176c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176c7:	pop    ebx
  4176c8:	sbb    DWORD PTR [eax+esi*1],esi
  4176cb:	rcr    DWORD PTR [ebx],0xca
  4176ce:	scas   eax,DWORD PTR es:[edi]
  4176cf:	mov    dh,0x89
  4176d1:	or     esp,esi
  4176d3:	jae    0x417679
  4176d5:	call   FWORD PTR [eax+0x35]
  4176d8:	fisub  DWORD PTR [ecx-0x1fc7448d]
  4176de:	icebp  
  4176df:	pop    ds
  4176e0:	pop    eax
  4176e1:	mov    dh,0xff
  4176e3:	aad    0xdd
  4176e5:	and    BYTE PTR [ebp-0xd],dl
  4176e8:	xchg   esi,eax
  4176e9:	pop    ds
  4176ea:	(bad)  
  4176eb:	mov    ds:0x19347a4b,eax
  4176f0:	test   DWORD PTR [ebp-0x3f],edx
  4176f3:	out    0x47,eax
  4176f5:	cdq    
  4176f6:	mov    ebp,0xc47271ba
  4176fb:	or     eax,0x2d76d18e
  417700:	mov    eax,0xc7f8e9fe
  417705:	addr16 push es
  417707:	xor    esi,DWORD PTR [edi+ebp*4-0x76d46b31]
  41770e:	sbb    ah,BYTE PTR [eax+0xb749a78]
  417714:	add    DWORD PTR [ecx-0x4f],0xffffffcc
  417718:	xor    bl,BYTE PTR [edx-0x53]
  41771b:	repz add ebp,ecx
  41771e:	aad    0x7b
  417720:	xchg   edi,eax
  417721:	xchg   esi,eax
  417722:	stos   DWORD PTR es:[edi],eax
  417723:	cmp    BYTE PTR [ebp+edx*8-0x4a],ch
  417727:	dec    edx
  417728:	sbb    eax,ecx
  41772a:	push   ecx
  41772b:	xchg   ebp,eax
  41772c:	lods   al,BYTE PTR ds:[esi]
  41772d:	les    ecx,FWORD PTR [edi+eax*4+0x47607125]
  417734:	jnp    0x41779b
  417736:	mov    ecx,0x6c99d564
  41773b:	ins    DWORD PTR es:[edi],dx
  41773c:	pop    esi
  41773d:	mov    bl,0x71
  41773f:	mov    bh,0x6c
  417741:	push   cs
  417742:	(bad)  
  417743:	mov    edi,0x455c1cbc
  417748:	not    DWORD PTR [ecx-0x20c8383b]
  41774e:	push   es
  41774f:	pop    edi
  417750:	mov    WORD PTR [eax+0x9903a0a],?
  417756:	mov    cl,0x7b
  417758:	add    al,0xd3
  41775a:	push   0x50
  41775c:	fcom   st(5)
  41775e:	cdq    
  41775f:	lods   eax,DWORD PTR ds:[esi]
  417760:	dec    ebp
  417761:	aas    
  417762:	popa   
  417763:	dec    ebp
  417764:	sub    DWORD PTR [ebp+esi*4-0x29],esp
  417768:	gs xchg edi,eax
  41776a:	gs jge 0x4177dd
  41776d:	dec    esi
  41776e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41776f:	cld    
  417770:	mov    edi,0xf8fa3b48
  417775:	jp     0x41777c
  417777:	hlt    
  417778:	or     edi,esi
  41777a:	sub    eax,0x7b20e08b
  41777f:	push   eax
  417780:	pop    ss
  417781:	and    ah,dh
  417783:	xor    eax,0x480c9945
  417788:	lods   al,BYTE PTR ds:[esi]
  417789:	dec    edi
  41778a:	mov    bh,0x40
  41778c:	adc    ecx,DWORD PTR [ebx]
  41778e:	aas    
  41778f:	push   ds
  417790:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417791:	inc    eax
  417792:	call   0xc92bccd9
  417797:	aaa    
  417798:	jns    0x4177eb
  41779a:	ss jb  0x4177f2
  41779d:	jle    0x41777b
  41779f:	xchg   DWORD PTR [edx],ecx
  4177a1:	in     al,dx
  4177a2:	aam    0xe5
  4177a4:	mov    ch,0xf1
  4177a6:	stos   DWORD PTR es:[edi],eax
  4177a7:	in     al,0x6d
  4177a9:	loop   0x41773e
  4177ab:	shl    DWORD PTR [edi],cl
  4177ad:	cmp    BYTE PTR [ebx],cl
  4177af:	pop    ebx
  4177b0:	scas   al,BYTE PTR es:[edi]
  4177b1:	inc    esp
  4177b2:	pop    es
  4177b3:	(bad)  
  4177b5:	pop    eax
  4177b6:	loop   0x4177d8
  4177b8:	sub    ah,ah
  4177ba:	push   edx
  4177bb:	ss repz xor ah,al
  4177bf:	shr    BYTE PTR ds:0x7cb90000,cl
  4177c5:	jecxz  0x41781f
  4177c7:	(bad)  
  4177c8:	push   ecx
  4177c9:	or     al,0x93
  4177cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177cc:	std    
  4177cd:	es sub edx,0xa7fc38e2
  4177d4:	sbb    edi,DWORD PTR [esi]
  4177d6:	das    
  4177d7:	neg    DWORD PTR [edi+eiz*8]
  4177da:	fdiv   QWORD PTR [edi+0x1b]
  4177dd:	retf   
  4177de:	arpl   bp,cx
  4177e0:	push   cs
  4177e1:	scas   al,BYTE PTR es:[edi]
  4177e2:	mov    eax,esi
  4177e4:	sbb    eax,0xb915a0d1
  4177e9:	sbb    eax,0x4ed6412b
  4177ee:	push   eax
  4177ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177f0:	push   ds
  4177f1:	not    BYTE PTR [ebx+esi*2-0x49]
  4177f5:	rcl    DWORD PTR [ebx+0x72],cl
  4177f8:	aaa    
  4177f9:	mov    BYTE PTR [eax+0x37f4000a],0xae
  417800:	or     dl,BYTE PTR [edi]
  417802:	cmp    ecx,DWORD PTR [ebx-0x27edcf48]
  417808:	adc    DWORD PTR [ecx-0x80],eax
  41780b:	add    eax,0x3bd2e05f
  417810:	jbe    0x417872
  417812:	nop
  417813:	ror    DWORD PTR [ebx+edx*1],cl
  417816:	pusha  
  417817:	into   
  417818:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417819:	push   ecx
  41781a:	add    eax,0xb6b68ee2
  41781f:	hlt    
  417820:	or     eax,DWORD PTR [edi+0x7b]
  417823:	fdiv   QWORD PTR [ecx-0x49]
  417826:	cwde   
  417827:	add    BYTE PTR [ebx-0x165b5c2e],0x14
  41782e:	int    0x14
  417830:	sbb    cl,BYTE PTR [eax+0x75]
  417833:	mov    esi,0xb58a8d4d
  417838:	test   esi,ebp
  41783a:	out    0x2,eax
  41783c:	mov    BYTE PTR [edi-0x7a7a98e4],0xa7
  417843:	or     bl,ch
  417845:	xchg   esp,eax
  417846:	pop    edx
  417847:	repz les ecx,FWORD PTR [eax]
  41784a:	push   es
  41784b:	std    
  41784c:	sar    BYTE PTR [esi-0x61],0xb5
  417850:	xchg   esp,eax
  417851:	in     al,dx
  417852:	sub    ebx,DWORD PTR [esi-0x4b295d93]
  417858:	sbb    DWORD PTR es:[edx+0x5c],esi
  41785c:	pushf  
  41785d:	mov    ebp,0x6605e0d7
  417862:	push   esi
  417863:	pop    esi
  417864:	aad    0x5f
  417866:	test   eax,0xbf25cc53
  41786b:	or     al,0x9f
  41786d:	add    dl,BYTE PTR [ebp-0xf]
  417870:	pushf  
  417871:	mov    ebx,0xfa38bb9d
  417876:	inc    eax
  417877:	aas    
  417878:	mov    ah,0x45
  41787a:	mov    esi,0x8cc5381
  41787f:	iret   
  417880:	inc    esp
  417881:	pop    ebx
  417882:	stos   BYTE PTR es:[edi],al
  417883:	push   esi
  417884:	enter  0x21b1,0x6e
  417888:	ja     0x4178a9
  41788a:	test   DWORD PTR [edx],eax
  41788c:	sub    al,0x86
  41788e:	cwde   
  41788f:	mov    ebx,0x40281af2
  417894:	cli    
  417895:	sub    esi,DWORD PTR gs:[eax+eax*8]
  417899:	inc    eax
  41789a:	cdq    
  41789b:	hlt    
  41789c:	mov    ecx,edx
  41789e:	sbb    BYTE PTR [edx+0x2767c01c],0x10
  4178a5:	jl     0x417909
  4178a7:	or     eax,esi
  4178a9:	fimul  WORD PTR [edi-0x56c593f9]
  4178af:	lods   eax,DWORD PTR ds:[esi]
  4178b0:	ss xchg edx,eax
  4178b2:	adc    DWORD PTR [ecx],ebp
  4178b4:	pop    ds
  4178b5:	js     0x4178dc
  4178b7:	or     BYTE PTR [edi-0x77],dh
  4178ba:	pushf  
  4178bb:	inc    esi
  4178bc:	mov    dh,0xaf
  4178be:	or     ebx,DWORD PTR [eax+0x27]
  4178c1:	stos   BYTE PTR es:[edi],al
  4178c2:	je     0x4178f1
  4178c4:	icebp  
  4178c5:	or     al,0x63
  4178c7:	enter  0x1795,0xa4
  4178cb:	xchg   BYTE PTR [edi],cl
  4178cd:	das    
  4178ce:	cmp    ah,BYTE PTR [edx+0x764b99f9]
  4178d4:	xor    DWORD PTR [ebp+edx*2+0x1adb0517],edx
  4178db:	mov    ebx,0xe136963b
  4178e0:	(bad)  
  4178e1:	rcl    DWORD PTR [eax-0x397716f3],1
  4178e7:	mov    al,0x8c
  4178e9:	(bad)  
  4178ea:	mov    dl,0xda
  4178ec:	adc    DWORD PTR [ecx],edx
  4178ee:	mov    edi,0x2c140c12
  4178f3:	or     eax,0x16f2c935
  4178f8:	pop    edx
  4178f9:	mov    ds:0x8f7a184c,eax
  4178fe:	pop    ss
  4178ff:	jmp    DWORD PTR [edx-0x13]
  417902:	xor    DWORD PTR [ecx-0x1c79a77f],esp
  417908:	dec    esp
  417909:	dec    eax
  41790a:	(bad)  
  41790b:	jecxz  0x4178a5
  41790d:	mov    dl,0x3b
  41790f:	adc    al,0xfc
  417911:	dec    esp
  417912:	jl     0x4178e1
  417914:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417915:	jno    0x4178ca
  417917:	fnstenv [ecx-0x61]
  41791a:	mov    al,0x5
  41791c:	pop    edi
  41791d:	xor    bh,BYTE PTR [eax+0x52]
  417920:	(bad)
  417924:	cmc    
  417925:	gs fwait
  417927:	sub    edx,DWORD PTR [esi]
  417929:	dec    esi
  41792a:	mov    eax,esp
  41792c:	dec    ch
  41792e:	inc    esi
  41792f:	test   BYTE PTR [edi-0x7a],bh
  417932:	sbb    dl,BYTE PTR [edi]
  417934:	xor    DWORD PTR [ebx-0x41],esi
  417937:	sub    al,0x37
  417939:	xor    bh,BYTE PTR [esp+ebp*8-0x10]
  41793d:	js     0x417952
  41793f:	in     eax,0x27
  417941:	mov    ebp,DWORD PTR [esi+esi*1-0x4e76c513]
  417948:	je     0x4178d3
  41794a:	retf   0xf852
  41794d:	or     eax,0x60c30a12
  417952:	jecxz  0x417906
  417954:	inc    edx
  417956:	scas   eax,DWORD PTR es:[edi]
  417957:	popf   
  417958:	popa   
  417959:	out    0xef,eax
  41795b:	mov    ecx,0xbebafcc7
  417960:	and    eax,0x68c3fa4e
  417965:	mov    ebp,0xa1472635
  41796a:	mov    esp,0x550cbd8c
  41796f:	bound  esi,QWORD PTR [ebp+0x69ab17d4]
  417975:	inc    esp
  417976:	fisttp QWORD PTR [edi-0x6969ba1c]
  41797c:	int    0x72
  41797e:	pop    edx
  41797f:	lea    ebx,[edx-0x60bd8528]
  417985:	or     DWORD PTR [edi-0x316f8419],0x52
  41798c:	gs inc edi
  41798e:	mov    bl,0x51
  417990:	and    dl,BYTE PTR [edi+eax*2]
  417993:	mov    eax,ds:0x9a1df695
  417998:	cmp    DWORD PTR [esi],0xc49e25de
  41799e:	pop    edi
  41799f:	lods   eax,DWORD PTR ds:[esi]
  4179a0:	sub    BYTE PTR [eax],bh
  4179a2:	xchg   edi,eax
  4179a3:	fucomi st,st(3)
  4179a5:	mov    DWORD PTR [edi+eiz*8],ecx
  4179a8:	aas    
  4179a9:	adc    BYTE PTR [edx-0x6b],0xbe
  4179ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179ae:	push   eax
  4179af:	dec    ecx
  4179b0:	adc    DWORD PTR [ecx+esi*1+0x35],edx
  4179b4:	aaa    
  4179b5:	fwait
  4179b6:	mov    eax,ds:0x3754a24d
  4179bb:	mov    ch,0x2b
  4179bd:	outs   dx,DWORD PTR ds:[esi]
  4179be:	(bad)  
  4179bf:	push   0x98081839
  4179c4:	stc    
  4179c5:	out    dx,al
  4179c6:	add    BYTE PTR [ecx-0x7f77adf5],0x90
  4179cd:	mov    esi,0x53a31425
  4179d2:	adc    esi,DWORD PTR [edi-0x61dc2b18]
  4179d8:	je     0x4179a9
  4179da:	mov    ss,WORD PTR [ebp+0x24556793]
  4179e0:	std    
  4179e1:	sub    eax,0x749603eb
  4179e6:	xchg   ch,ah
  4179e8:	pop    edi
  4179e9:	inc    esi
  4179ea:	iret   
  4179eb:	or     DWORD PTR ds:0xc6edf813,edx
  4179f1:	pop    esi
  4179f2:	outs   dx,DWORD PTR ds:[esi]
  4179f3:	std    
  4179f4:	sub    al,0xb1
  4179f6:	gs and al,0x81
  4179f9:	mov    ds:0x58efbc5c,eax
  4179fe:	je     0x417a1c
  417a00:	(bad)  
  417a01:	fdivrp st(7),st
  417a03:	imul   ecx,DWORD PTR [ebp+esi*4+0x7e],0x46083a58
  417a0b:	push   ds
  417a0c:	add    al,0x96
  417a0e:	mov    ch,cl
  417a10:	xor    BYTE PTR [ebp-0x31],0x49
  417a14:	pop    edi
  417a15:	sahf   
  417a16:	pop    esp
  417a17:	scas   eax,DWORD PTR es:[edi]
  417a18:	xor    ebx,eax
  417a1a:	setp   BYTE PTR [edi+eiz*1]
  417a1e:	xlat   BYTE PTR ds:[ebx]
  417a1f:	pop    ds
  417a20:	adc    eax,0x110feb9c
  417a25:	xlat   BYTE PTR ds:[ebx]
  417a26:	fs scas al,BYTE PTR es:[edi]
  417a28:	out    dx,eax
  417a29:	fucomi st,st(6)
  417a2b:	shl    ah,1
  417a2d:	jge    0x4179bf
  417a2f:	push   ebx
  417a30:	je     0x417a54
  417a32:	pop    ebp
  417a33:	(bad)  
  417a34:	es xchg edx,eax
  417a36:	bound  ebx,QWORD PTR [edx]
  417a38:	stos   DWORD PTR es:[edi],eax
  417a39:	xor    al,0x57
  417a3b:	ins    BYTE PTR es:[edi],dx
  417a3c:	loopne 0x417a47
  417a3e:	(bad)  
  417a3f:	fwait
  417a40:	adc    cl,BYTE PTR [ebx-0x5ba3118f]
  417a46:	jle    0x4179cf
  417a48:	pop    esi
  417a49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a4a:	mov    al,0x29
  417a4c:	jmp    0x417a20
  417a4e:	jnp    0x4179db
  417a50:	das    
  417a51:	iret   
  417a52:	outs   dx,DWORD PTR ds:[esi]
  417a53:	sub    BYTE PTR [eax+0x49],0x34
  417a57:	sar    BYTE PTR [ebp+0xf78bd1e],0xad
  417a5e:	repz sub BYTE PTR [ebx-0x1d],al
  417a62:	inc    esp
  417a63:	sbb    esp,DWORD PTR [esi-0x64dc201c]
  417a69:	sbb    ah,ch
  417a6b:	xor    al,0x1e
  417a6d:	ins    BYTE PTR es:[edi],dx
  417a6e:	aas    
  417a6f:	popa   
  417a70:	fsubr  DWORD PTR [edi]
  417a72:	imul   esp,DWORD PTR [ebx],0xfffffff0
  417a75:	or     dh,BYTE PTR [ecx]
  417a77:	shl    dh,0x33
  417a7a:	jp     0x417a44
  417a7c:	cmc    
  417a7d:	jns    0x417a13
  417a7f:	lods   al,BYTE PTR ds:[esi]
  417a80:	mov    dl,0xad
  417a82:	adc    al,0xe5
  417a84:	data16 (bad) 
  417a86:	dec    edi
  417a87:	iret   
  417a88:	ins    BYTE PTR es:[edi],dx
  417a89:	or     dh,0xaf
  417a8c:	xor    al,0xb9
  417a8e:	mov    dl,0x27
  417a90:	cmc    
  417a91:	mov    edx,0x4bccd84f
  417a96:	cmp    al,0x13
  417a98:	push   ss
  417a99:	in     al,dx
  417a9a:	into   
  417a9b:	(bad)  
  417a9c:	push   edi
  417a9d:	in     eax,0x30
  417a9f:	pop    edx
  417aa0:	lods   al,BYTE PTR ds:[esi]
  417aa1:	sbb    ebx,esi
  417aa3:	ins    DWORD PTR es:[edi],dx
  417aa4:	push   esi
  417aa5:	xor    ebp,DWORD PTR [ecx-0x1480dbfd]
  417aab:	jg     0x417afa
  417aad:	fadd   QWORD PTR [ebx+0x4a]
  417ab0:	data16 mov BYTE PTR [ebp+ecx*2+0x3a],dl
  417ab5:	xlat   BYTE PTR ds:[ebx]
  417ab6:	cmp    bh,BYTE PTR [ebx+0x26]
  417ab9:	loop   0x417a67
  417abb:	shr    DWORD PTR [eax+0x5a],0x83
  417abf:	call   FWORD PTR [edx]
  417ac1:	es mov dl,0x5b
  417ac4:	cdq    
  417ac5:	stos   DWORD PTR es:[edi],eax
  417ac6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ac7:	addr16 in eax,0xb3
  417aca:	inc    ecx
  417acb:	pop    edi
  417acc:	adc    BYTE PTR [ebp+0x74],ah
  417acf:	push   esp
  417ad0:	xchg   ecx,eax
  417ad1:	push   esi
  417ad2:	mov    al,BYTE PTR [ecx-0x6b9d1c72]
  417ad8:	pop    eax
  417ad9:	int3   
  417ada:	inc    ecx
  417adb:	mov    ah,BYTE PTR [ecx+0x36696d2b]
  417ae1:	jl     0x417aeb
  417ae3:	(bad)  
  417ae4:	mov    bl,0x7f
  417ae6:	lods   al,BYTE PTR ds:[esi]
  417ae7:	out    dx,eax
  417ae8:	adc    DWORD PTR [eax],esi
  417aea:	mov    esi,0x23dca611
  417aef:	popa   
  417af0:	push   0xcebe96c
  417af5:	add    BYTE PTR [esi-0x1],ah
  417af8:	mov    esp,ebp
  417afa:	cld    
  417afb:	arpl   WORD PTR [edi],ax
  417afd:	and    al,0x7d
  417aff:	outs   dx,DWORD PTR ds:[esi]
  417b00:	dec    esp
  417b01:	pop    ecx
  417b02:	outs   dx,BYTE PTR ds:[esi]
  417b03:	sbb    BYTE PTR [ecx+0x6],al
  417b06:	adc    eax,0x5e
  417b09:	arpl   WORD PTR [ebx+0x5e],bx
  417b0c:	pushf  
  417b0d:	sar    BYTE PTR [ebx-0x166d1859],0x8
  417b14:	mov    dl,0x7a
  417b16:	pop    ss
  417b17:	adc    DWORD PTR [ebx],edi
  417b19:	leave  
  417b1a:	sbb    bl,BYTE PTR [edx+0x3e]
  417b1d:	ins    DWORD PTR es:[edi],dx
  417b1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b1f:	mov    al,0xed
  417b21:	inc    esp
  417b22:	xchg   ecx,eax
  417b23:	mov    esp,0x43e33561
  417b28:	mov    edx,0xcec0210e
  417b2d:	test   DWORD PTR [ecx-0x66],0xfb0790a4
  417b34:	aaa    
  417b35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b36:	pop    ecx
  417b37:	jle    0x417b35
  417b39:	mov    ebx,0xc8c8b6b5
  417b3e:	stc    
  417b3f:	push   edx
  417b40:	or     al,0x20
  417b42:	lods   eax,DWORD PTR ds:[esi]
  417b43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b44:	inc    esp
  417b45:	clc    
  417b46:	mov    ebx,0xca37eb1c
  417b4b:	scas   eax,DWORD PTR es:[edi]
  417b4c:	icebp  
  417b4d:	int3   
  417b4e:	shl    BYTE PTR [ecx],0xee
  417b51:	aad    0xa4
  417b53:	add    DWORD PTR [esi+0x3c],esi
  417b56:	jmp    0x4f29:0x2f2459a6
  417b5d:	arpl   WORD PTR [esi-0x486cd2e0],bp
  417b63:	and    edx,esp
  417b65:	neg    DWORD PTR [ecx+edi*4+0x6e]
  417b69:	push   eax
  417b6a:	jge    0x417b0b
  417b6c:	out    dx,eax
  417b6d:	jae    0x417bea
  417b6f:	test   eax,0x77f956b9
  417b74:	push   eax
  417b75:	js     0x417b19
  417b77:	cmp    bl,BYTE PTR [esi-0x56]
  417b7a:	mov    BYTE PTR [edx-0x3],bl
  417b7d:	sti    
  417b7e:	arpl   WORD PTR [eax-0x4a],cx
  417b81:	dec    ebx
  417b82:	ins    BYTE PTR es:[edi],dx
  417b83:	jnp    0x417b40
  417b85:	shl    ebx,0x52
  417b88:	call   FWORD PTR [ebx+0x7f554031]
  417b8e:	dec    DWORD PTR [ecx+0x69bdd88e]
  417b94:	add    cl,cl
  417b96:	add    eax,0x942febf5
  417b9b:	int3   
  417b9c:	lds    edi,FWORD PTR [eax+0x65]
  417b9f:	ins    BYTE PTR es:[edi],dx
  417ba0:	mov    bh,0xb7
  417ba2:	or     DWORD PTR [ecx],edx
  417ba4:	(bad)  
  417ba5:	jo     0x417ba2
  417ba7:	xor    ecx,DWORD PTR [esi]
  417ba9:	js     0x417b3b
  417bab:	popf   
  417bac:	(bad)  
  417bad:	fsub   DWORD PTR [ecx-0x51]
  417bb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417bb1:	adc    al,0x93
  417bb3:	mov    esp,0x4792bbea
  417bb8:	adc    esp,DWORD PTR [edx-0x6d622412]
  417bbe:	ret    
  417bbf:	dec    ecx
  417bc0:	cmovp  esp,DWORD PTR [ecx]
  417bc3:	cli    
  417bc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417bc5:	out    dx,eax
  417bc6:	(bad)  
  417bc7:	xchg   ebx,eax
  417bc8:	push   esi
  417bc9:	pusha  
  417bca:	xor    eax,0xb6066c54
  417bcf:	mov    edx,DWORD PTR [esi-0x2]
  417bd2:	push   esp
  417bd3:	test   DWORD PTR [eax],ecx
  417bd5:	pop    edi
  417bd6:	and    eax,0xcbc3da3c
  417bdb:	add    ch,dh
  417bdd:	jns    0x417c34
  417bdf:	and    BYTE PTR [eax-0x2aafe72f],bh
  417be5:	jg     0x417baf
  417be7:	adc    al,0xc9
  417be9:	popf   
  417bea:	cmp    al,0xa3
  417bec:	mov    dl,0x6d
  417bee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bef:	mov    eax,0xda94b05c
  417bf4:	in     eax,dx
  417bf5:	mov    ah,0xa1
  417bf7:	in     al,0x5b
  417bf9:	ret    
  417bfa:	daa    
  417bfb:	and    eax,DWORD PTR [ecx-0x4f73784b]
  417c01:	daa    
  417c02:	dec    edi
  417c03:	sar    BYTE PTR [ebx+eiz*4],1
  417c06:	mov    BYTE PTR [ecx+0x5565648f],bl
  417c0c:	int    0xa5
  417c0e:	pop    eax
  417c0f:	rol    BYTE PTR [ebx+0x7f],1
  417c12:	out    dx,eax
  417c13:	push   esi
  417c14:	sbb    DWORD PTR ds:0xaf07395b,0x29b92a02
  417c1e:	dec    ebx
  417c1f:	neg    DWORD PTR [ecx+0x7ef264e8]
  417c25:	ds and al,0x74
  417c28:	repz push esi
  417c2a:	lds    edi,FWORD PTR [eax-0xd]
  417c2d:	lods   eax,DWORD PTR ds:[esi]
  417c2e:	jl     0x417c26
  417c30:	mov    bl,0xe2
  417c32:	sbb    eax,0x39d672d6
  417c37:	pop    edi
  417c38:	dec    edi
  417c39:	cmp    DWORD PTR [ebp+0xa14d6e5],esi
  417c3f:	lods   al,BYTE PTR ds:[esi]
  417c40:	push   ds
  417c41:	dec    ecx
  417c42:	(bad)  
  417c43:	mov    DWORD PTR [edx+0x176e7bfa],edx
  417c49:	jge    0x417c76
  417c4b:	outs   dx,BYTE PTR ds:[esi]
  417c4c:	mov    ah,BYTE PTR [edi]
  417c4e:	cs jl  0x417c22
  417c51:	rcr    BYTE PTR [edx],0x6a
  417c54:	cmp    DWORD PTR [esi+ebp*1],ebx
  417c57:	xor    edx,esi
  417c59:	jecxz  0x417c54
  417c5b:	in     al,dx
  417c5c:	fsubr  DWORD PTR [ecx]
  417c5e:	cdq    
  417c5f:	mov    edi,0x26736278
  417c64:	lea    ecx,[ebp+0x7f7a6505]
  417c6a:	retf   0x9e94
  417c6d:	in     eax,dx
  417c6e:	cld    
  417c6f:	leave  
  417c70:	or     al,0x80
  417c72:	mov    bl,0x1d
  417c74:	aam    0x28
  417c76:	lods   al,BYTE PTR ds:[esi]
  417c77:	jmp    0x6fd1:0xadecca65
  417c7e:	retf   0x557c
  417c81:	or     al,0x58
  417c83:	lahf   
  417c84:	mov    eax,0xe5060d3c
  417c89:	shl    BYTE PTR [ecx+0x5e0d1d2],1
  417c8f:	push   esp
  417c90:	cmp    eax,0x8d519440
  417c95:	aas    
  417c96:	les    edi,FWORD PTR [ecx]
  417c98:	jb     0x417d08
  417c9a:	xor    eax,0x386dc68d
  417c9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ca0:	pextrw ebp,(bad),0xc5
  417ca2:	lods   eax,DWORD PTR ds:[esi]
  417ca3:	ror    BYTE PTR [esi+ecx*2-0x3c],cl
  417ca7:	or     al,0x34
  417ca9:	mov    esp,0x7c54ebf5
  417cae:	into   
  417caf:	out    dx,eax
  417cb0:	xor    eax,0xa728def2
  417cb5:	inc    edi
  417cb6:	sbb    BYTE PTR [eax-0x57b2284],bh
  417cbc:	ds adc al,0xfc
  417cbf:	and    al,0x60
  417cc1:	dec    edx
  417cc2:	push   esi
  417cc3:	ror    DWORD PTR [eax],1
  417cc5:	aaa    
  417cc6:	and    BYTE PTR [ecx],al
  417cc8:	xchg   BYTE PTR [edi+0x1],bl
  417ccb:	lahf   
  417ccc:	mov    ah,0x47
  417cce:	push   es
  417ccf:	jnp    0x417c96
  417cd1:	mov    ds:0x73419990,eax
  417cd6:	cmp    ebp,esi
  417cd8:	popa   
  417cd9:	fcmovne st,st(5)
  417cdb:	fnsave [ebp+0x42fdfcc6]
  417ce1:	jo     0x417d09
  417ce3:	mov    eax,0x3d51e124
  417ce8:	mov    WORD PTR [ecx+edi*4+0x79],?
  417cec:	fmul   QWORD PTR [esi+ebp*1-0x7d]
  417cf0:	mov    esi,DWORD PTR [ebx+0x5e]
  417cf3:	mov    WORD PTR [esp+ebx*2],ds
  417cf6:	call   0x89ab6fc
  417cfb:	(bad)  
  417cfd:	clc    
  417cfe:	popf   
  417cff:	sub    BYTE PTR [esi-0x40e3c50],ah
  417d05:	mov    eax,0x46ea9c33
  417d0a:	push   ecx
  417d0b:	pop    edi
  417d0c:	loop   0x417cd6
  417d0e:	cdq    
  417d0f:	mov    es,edi
  417d11:	adc    ebp,DWORD PTR [ebx-0x3e74edda]
  417d17:	push   ebx
  417d18:	push   edi
  417d19:	push   esi
  417d1a:	test   DWORD PTR [edi+0x32550566],edx
  417d20:	lock push ss
  417d22:	retf   0xfe3f
  417d25:	adc    DWORD PTR [eax],edx
  417d27:	push   cs
  417d28:	xchg   esi,eax
  417d29:	sbb    BYTE PTR [edx+0x513b99f0],bh
  417d2f:	lea    ecx,[edi]
  417d31:	inc    esp
  417d32:	and    DWORD PTR [eax+0x4c],0xffffff80
  417d36:	add    DWORD PTR [ecx+0x34d4d436],ebx
  417d3c:	es dec esi
  417d3e:	cdq    
  417d3f:	xchg   edx,eax
  417d40:	xchg   BYTE PTR [ebx],ah
  417d42:	jle    0x417d17
  417d44:	mov    ch,0xc6
  417d46:	(bad)
  417d4a:	dec    edx
  417d4b:	scas   eax,DWORD PTR es:[edi]
  417d4c:	retf   
  417d4d:	or     ebp,DWORD PTR [edx-0x555bc8f]
  417d53:	add    eax,0x6c419c95
  417d58:	inc    esp
  417d59:	mov    esp,0x98a65558
  417d5e:	xchg   BYTE PTR [ecx-0x4acb1fae],ch
  417d64:	push   eax
  417d65:	ja     0x417d1c
  417d67:	test   eax,0x9a9520ae
  417d6c:	sahf   
  417d6d:	mov    BYTE PTR fs:[esi],dl
  417d70:	and    ch,BYTE PTR [ecx-0x29]
  417d73:	pop    es
  417d74:	ins    DWORD PTR es:[edi],dx
  417d75:	mov    ebx,0x4955d8c6
  417d7a:	dec    esp
  417d7b:	int3   
  417d7c:	call   0x5f72:0xd4332379
  417d83:	test   al,0xef
  417d85:	sub    al,0xc2
  417d87:	loopne 0x417dcb
  417d89:	xor    eax,0x353aa3e9
  417d8e:	sbb    eax,0x4ede3926
  417d93:	stos   DWORD PTR es:[edi],eax
  417d94:	mov    bl,0x6f
  417d96:	icebp  
  417d97:	mov    esp,0x2f49b4ec
  417d9c:	fsub   QWORD PTR [ecx-0x38]
  417d9f:	int3   
  417da0:	dec    ebp
  417da1:	pop    es
  417da2:	sbb    eax,DWORD PTR [ebp+0x29bb1fc3]
  417da8:	out    dx,eax
  417da9:	loop   0x417de6
  417dab:	dec    eax
  417dac:	iret   
  417dad:	popf   
  417dae:	rcl    esi,cl
  417db0:	mov    ds:0xd65d8e3e,eax
  417db5:	and    al,0x3
  417db7:	sub    edi,DWORD PTR [ebx+ebp*2]
  417dba:	xor    eax,0xe305e57c
  417dbf:	scas   eax,DWORD PTR es:[edi]
  417dc0:	int3   
  417dc1:	xor    ecx,DWORD PTR [eax]
  417dc3:	mov    ecx,0xd310c4c0
  417dc8:	mov    dl,0x37
  417dca:	xlat   BYTE PTR ds:[ebx]
  417dcb:	fwait
  417dcc:	and    dh,dh
  417dce:	xor    ebx,DWORD PTR [ebx+0x3a]
  417dd1:	add    bl,BYTE PTR [ebx+0x50a9fd2d]
  417dd7:	push   ss
  417dd8:	and    DWORD PTR [ebp+ebx*2-0x7173dbff],edx
  417ddf:	fbstp  TBYTE PTR [ebx+0x7e]
  417de2:	jbe    0x417dff
  417de4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417de5:	pop    edi
  417de6:	dec    ecx
  417de7:	cmpps  xmm6,XMMWORD PTR [ebx-0x250aeb45],0x68
  417def:	push   ebx
  417df0:	xchg   BYTE PTR [ecx+0x2e1300ed],bh
  417df6:	cmp    BYTE PTR fs:[esi],dl
  417df9:	xlat   BYTE PTR ds:[ebx]
  417dfa:	mov    ch,0xa
  417dfc:	or     bh,cl
  417dfe:	dec    ebp
  417dff:	hlt    
  417e00:	scas   eax,DWORD PTR es:[edi]
  417e01:	xchg   ebp,eax
  417e02:	rol    bl,cl
  417e04:	out    dx,eax
  417e05:	sub    eax,0x54ffa37f
  417e0a:	popf   
  417e0b:	fucomp st(4)
  417e0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e0e:	das    
  417e0f:	icebp  
  417e10:	adc    al,0x2b
  417e12:	out    0x54,al
  417e14:	repz mov al,0xdc
  417e17:	pop    ebp
  417e18:	inc    esi
  417e19:	jne    0x417e4c
  417e1b:	mov    edi,0x9ab12cde
  417e20:	push   ebp
  417e21:	(bad)  
  417e22:	clc    
  417e23:	fcomp  QWORD PTR [esi]
  417e25:	xor    eax,0x3f3d37a9
  417e2a:	hlt    
  417e2b:	sub    al,0x47
  417e2d:	jns    0x417e39
  417e2f:	and    al,0xae
  417e31:	in     eax,dx
  417e32:	add    esp,DWORD PTR [ebx-0x718d18bb]
  417e38:	shl    cl,cl
  417e3a:	inc    ebp
  417e3b:	je     0x417e5b
  417e3d:	xchg   edx,eax
  417e3e:	dec    ebx
  417e3f:	rcr    dl,1
  417e41:	mov    ah,0x40
  417e43:	add    al,al
  417e45:	popa   
  417e46:	sub    al,0xa2
  417e48:	aas    
  417e49:	das    
  417e4a:	sbb    al,0x5b
  417e4c:	es add bl,dl
  417e4f:	shr    BYTE PTR ds:[eax],0xff
  417e53:	(bad)  
  417e55:	mov    ch,0x54
  417e57:	cdq    
  417e58:	mov    ebp,0x4d01e494
  417e5d:	xor    ecx,DWORD PTR [edi+0x78]
  417e60:	icebp  
  417e61:	lock out 0x27,al
  417e64:	dec    ebx
  417e65:	pop    es
  417e66:	sbb    al,0x76
  417e68:	inc    edx
  417e69:	jmp    0x417eae
  417e6b:	pop    ecx
  417e6c:	cmp    eax,0x8c59e533
  417e71:	xchg   edi,eax
  417e72:	fstp   DWORD PTR [eax-0x7b]
  417e75:	cwde   
  417e76:	sub    esp,eax
  417e78:	fisttp DWORD PTR [ecx-0x55]
  417e7b:	arpl   WORD PTR [esi-0x6d],bx
  417e7e:	bound  ecx,QWORD PTR ss:[ebx]
  417e81:	ret    0x137b
  417e84:	pop    edi
  417e85:	xor    al,0x40
  417e87:	xchg   esp,eax
  417e88:	shr    DWORD PTR [ebx+eiz*4],0x92
  417e8c:	dec    ebp
  417e8d:	pop    edx
  417e8e:	call   0x64b4cbff
  417e93:	outs   dx,BYTE PTR ds:[esi]
  417e94:	retf   0xf664
  417e97:	lahf   
  417e98:	mov    edx,es
  417e9a:	jecxz  0x417e54
  417e9c:	dec    ebp
  417e9d:	dec    ebx
  417e9e:	in     al,dx
  417e9f:	sub    BYTE PTR [ecx+edi*8+0x33],al
  417ea3:	in     eax,dx
  417ea4:	pop    ebp
  417ea5:	sbb    eax,0x6e0806c
  417eaa:	add    dl,BYTE PTR [ecx-0x5c0b6e54]
  417eb0:	jno    0x417edb
  417eb2:	call   0x6619f3a2
  417eb7:	adc    ecx,esi
  417eb9:	dec    esi
  417eba:	dec    edx
  417ebb:	or     ebx,esi
  417ebd:	mov    esp,0x7db91918
  417ec2:	dec    eax
  417ec3:	sub    al,0xb8
  417ec5:	out    dx,eax
  417ec6:	pop    ebp
  417ec7:	fwait
  417ec8:	mov    esp,0x6791ece5
  417ecd:	xlat   BYTE PTR ds:[ebx]
  417ece:	and    eax,0x22933509
  417ed3:	mov    edx,DWORD PTR [ecx+0x6ccf6ace]
  417ed9:	and    dl,BYTE PTR [esi-0x35]
  417edc:	into   
  417edd:	pop    edi
  417ede:	loop   0x417f0e
  417ee0:	out    0x6b,eax
  417ee2:	and    cl,BYTE PTR [edi+0x66]
  417ee5:	mul    esi
  417ee7:	jb     0x417f57
  417ee9:	lahf   
  417eea:	sbb    eax,DWORD PTR [ecx-0x46]
  417eed:	dec    esp
  417eee:	jmp    0x417f59
  417ef0:	sbb    ah,ah
  417ef2:	mov    ecx,0x51589f1b
  417ef7:	cli    
  417ef8:	pop    edi
  417ef9:	push   ebp
  417efa:	hlt    
  417efb:	add    eax,0xfbf64ebc
  417f00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f01:	mov    esi,0x7b8283a2
  417f06:	lods   al,BYTE PTR ds:[esi]
  417f07:	fcom   DWORD PTR [edi+edx*4+0x16]
  417f0b:	ret    0x4ce8
  417f0e:	test   eax,0x70bcd437
  417f13:	mov    dl,0xa7
  417f15:	call   0xe757754c
  417f1a:	test   dl,0xe5
  417f1d:	popa   
  417f1e:	xor    bh,dl
  417f20:	ds int 0xed
  417f23:	test   DWORD PTR [edx-0x51],esi
  417f26:	retf   
  417f27:	jmp    0x417f3d
  417f29:	ret    
  417f2a:	shr    edx,1
  417f2c:	shr    al,1
  417f2e:	test   al,0x9f
  417f30:	scas   al,BYTE PTR es:[edi]
  417f31:	enter  0xdb6a,0x38
  417f35:	or     ecx,DWORD PTR [edx]
  417f37:	test   DWORD PTR [edx],eax
  417f39:	adc    eax,0x711f3761
  417f3e:	jge    0x417ec7
  417f40:	lock clc 
  417f42:	push   ss
  417f43:	lods   eax,DWORD PTR ds:[esi]
  417f44:	pop    ebp
  417f45:	les    ebp,FWORD PTR [ecx+edi*8+0x53036fcc]
  417f4c:	data16 xor dl,BYTE PTR [ebx-0x4a8aeac8]
  417f53:	or     al,0xaa
  417f55:	shl    DWORD PTR [eax+0x7a],1
  417f58:	sub    al,0xf8
  417f5a:	stos   BYTE PTR es:[edi],al
  417f5b:	inc    esi
  417f5c:	xor    BYTE PTR [ebx-0x3b],bh
  417f5f:	test   DWORD PTR [ecx+ecx*1],0x24683942
  417f66:	push   ebx
  417f67:	mov    ss,edx
  417f69:	push   esp
  417f6a:	or     al,0x58
  417f6c:	inc    esi
  417f6d:	sub    DWORD PTR [edi-0x72a8087c],ebp
  417f73:	scas   al,BYTE PTR es:[edi]
  417f74:	fdiv   QWORD PTR [esi+ecx*1]
  417f77:	push   edx
  417f78:	mov    esp,0xc6972ca4
  417f7d:	add    eax,0xa5cf6028
  417f82:	jo     0x417f54
  417f84:	retf   0x899
  417f87:	stos   BYTE PTR es:[edi],al
  417f88:	(bad)  
  417f8a:	out    dx,eax
  417f8b:	scas   al,BYTE PTR es:[edi]
  417f8c:	fcomp  st(1)
  417f8e:	ins    BYTE PTR es:[edi],dx
  417f8f:	xchg   ebx,eax
  417f90:	fcomp  DWORD PTR [edi+0x64]
  417f93:	lods   eax,DWORD PTR ds:[esi]
  417f94:	into   
  417f95:	ss loop 0x417f9b
  417f98:	push   0x212ef462
  417f9d:	movhps xmm0,QWORD PTR [ebp+0xd6b9afa]
  417fa4:	pop    edx
  417fa5:	sbb    bh,BYTE PTR [esi-0x40]
  417fa8:	test   al,0xf8
  417faa:	retf   
  417fab:	ret    
  417fac:	div    BYTE PTR [edx+0x66dd744b]
  417fb2:	(bad)  
  417fb3:	and    eax,0xf2d61576
  417fb8:	jne    0x417fdf
  417fba:	sbb    esp,eax
  417fbc:	test   BYTE PTR [edx+0x374b1a69],ah
  417fc2:	sbb    ah,BYTE PTR [edi]
  417fc4:	mov    al,ds:0xe50b6040
  417fc9:	mov    cl,0x3
  417fcb:	imul   esp,DWORD PTR [esp+esi*8],0xfffffffc
  417fcf:	add    al,0x7c
  417fd1:	jecxz  0x417fcf
  417fd3:	(bad)  
  417fd4:	pop    ebx
  417fd5:	fidivr WORD PTR ds:0x5c308c26
  417fdb:	cdq    
  417fdc:	mov    ecx,0xd6e7e333
  417fe1:	dec    ebp
  417fe2:	fdiv   st(2),st
  417fe4:	pop    ss
  417fe5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417fe6:	xchg   ebp,eax
  417fe7:	push   ds
  417fe8:	jne    0x418056
  417fea:	popf   
  417feb:	adc    edi,DWORD PTR [ecx]
  417fed:	test   DWORD PTR [esi],ebp
  417fef:	int    0x2d
  417ff1:	lods   eax,DWORD PTR ds:[esi]
  417ff2:	sub    dx,WORD PTR [ecx-0x7979de64]
  417ff9:	fst    DWORD PTR [bx+si]
  417ffc:	push   edx
  417ffd:	mov    bl,BYTE PTR ds:0xa78d88b7
  418003:	jle    0x417f8b
  418005:	push   edx
  418006:	into   
  418007:	clc    
  418008:	or     DWORD PTR ds:0x770d5b67,ecx
  41800e:	sbb    bl,BYTE PTR [ecx+0x67]
  418011:	jmp    0xdfaf:0x3de1a44
  418018:	pop    ss
  418019:	enter  0x6ca6,0xe
  41801d:	test   esi,ecx
  41801f:	dec    esp
  418020:	jnp    0x417fa5
  418022:	jae    0x417fa5
  418024:	dec    edx
  418025:	fldenv [edi-0xf]
  418028:	out    dx,al
  418029:	lods   eax,DWORD PTR ds:[esi]
  41802a:	in     eax,dx
  41802b:	xor    DWORD PTR [eax-0x71],esi
  41802e:	in     eax,dx
  41802f:	ficom  WORD PTR [esi+0x4479aab4]
  418035:	mov    cl,0x9f
  418037:	dec    esp
  418038:	(bad)  
  418039:	aas    
  41803a:	scas   al,BYTE PTR es:[edi]
  41803b:	push   edi
  41803c:	(bad)  
  41803d:	out    0xc1,eax
  41803f:	pusha  
  418040:	icebp  
  418041:	add    edx,DWORD PTR [eax+0xb7a3780]
  418047:	mov    ebx,0x3e95042e
  41804c:	in     eax,0x6a
  41804e:	int    0x47
  418050:	inc    eax
  418051:	in     al,0xd
  418053:	jne    0x418044
  418055:	fs in  eax,dx
  418057:	dec    esp
  418058:	xchg   ecx,eax
  418059:	ja     0x418012
  41805b:	and    BYTE PTR [ecx+0x5ecc9ced],cl
  418061:	into   
  418062:	xchg   ecx,eax
  418063:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418064:	scas   eax,DWORD PTR es:[edi]
  418065:	push   ebx
  418066:	mov    al,ds:0xa205d00e
  41806b:	dec    ebx
  41806c:	inc    edi
  41806d:	scas   al,BYTE PTR es:[edi]
  41806e:	xor    al,0xa1
  418070:	nop
  418071:	test   BYTE PTR [edi],cl
  418073:	push   ss
  418074:	test   eax,0xc1aef27e
  418079:	or     eax,0xc9a73c1f
  41807e:	ds dec ebp
  418080:	mov    esi,0xb41f49b1
  418085:	ins    DWORD PTR es:[edi],dx
  418086:	jbe    0x418027
  418088:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418089:	inc    eax
  41808a:	inc    ebp
  41808b:	inc    esi
  41808c:	rol    ch,cl
  41808e:	test   eax,0x6cd0c70b
  418093:	push   esp
  418094:	out    0x8,eax
  418096:	test   al,0xa0
  418098:	mov    ecx,0x4cdceeed
  41809d:	inc    esp
  41809e:	mov    BYTE PTR [edx],cl
  4180a0:	jo     0x41811b
  4180a2:	(bad)  
  4180a3:	sbb    eax,0xec51c4d3
  4180a8:	jno    0x41803d
  4180aa:	fidiv  DWORD PTR [ecx+0x4317b34f]
  4180b0:	mov    cl,dh
  4180b2:	mov    dl,0x1e
  4180b4:	add    BYTE PTR [ecx+0x6350b289],cl
  4180ba:	inc    esi
  4180bb:	jle    0x418096
  4180bd:	push   edx
  4180be:	test   eax,0x73962808
  4180c3:	ficom  WORD PTR [ebp-0x6ac4e81d]
  4180c9:	xchg   ebx,eax
  4180ca:	push   edx
  4180cb:	ror    BYTE PTR [edx+0x7ae0f568],0x20
  4180d2:	invd   
  4180d4:	sub    al,0x19
  4180d6:	sbb    eax,0xa2011e55
  4180db:	addr16 inc ebx
  4180dd:	mov    ah,0x4e
  4180df:	pop    ebx
  4180e0:	lods   eax,DWORD PTR ds:[esi]
  4180e1:	rcr    BYTE PTR [ebx-0x42],cl
  4180e4:	mov    esp,0xc46672c6
  4180e9:	inc    esi
  4180ea:	push   esi
  4180eb:	mov    es,WORD PTR [esi]
  4180ed:	add    eax,0x16403664
  4180f2:	cwd    
  4180f4:	inc    edi
  4180f5:	popa   
  4180f6:	jp     0x41814c
  4180f8:	shr    BYTE PTR [ecx],1
  4180fa:	pop    es
  4180fb:	or     al,0x18
  4180fd:	and    DWORD PTR [eax+0xd7733a5],edi
  418103:	pop    esi
  418104:	jp     0x4180a2
  418106:	push   ebp
  418107:	ds add al,0x2d
  41810a:	pop    esi
  41810b:	xchg   edx,eax
  41810c:	adc    eax,0x361d8146
  418111:	adc    eax,DWORD PTR [ecx+0x18bef1ed]
  418117:	sbb    DWORD PTR [ebx-0x36],eax
  41811a:	sbb    ebx,DWORD PTR [ecx+eiz*8]
  41811d:	dec    edx
  41811e:	imul   eax,DWORD PTR [eax],0x41e77c66
  418124:	pop    esi
  418125:	ds jbe 0x4180da
  418128:	xchg   ebx,eax
  418129:	or     bl,BYTE PTR [eax+0x13c781cf]
  41812f:	adc    edx,ebp
  418131:	iret   
  418132:	add    al,BYTE PTR [esi-0x4]
  418135:	cld    
  418136:	call   0x46cbe716
  41813b:	dec    eax
  41813c:	iret   
  41813d:	add    al,0x9
  41813f:	sar    DWORD PTR [ebx-0xc],0x53
  418143:	mov    ecx,0x3385c736
  418148:	xor    eax,0x4139629a
  41814d:	adc    bl,BYTE PTR [edx+esi*8]
  418150:	pop    es
  418151:	dec    edi
  418152:	cmp    BYTE PTR [edx],cl
  418154:	cmp    dh,BYTE PTR [ebx-0x36874f6c]
  41815a:	mov    edi,0xf900f97c
  41815f:	inc    eax
  418160:	rol    DWORD PTR [edx+0x7f0366c],0x7e
  418167:	sub    eax,0x95baeeb4
  41816c:	std    
  41816d:	xchg   ecx,eax
  41816e:	mov    ebp,0x996a9344
  418173:	add    DWORD PTR [esi+0x79],0xffffffd3
  418177:	(bad)  
  418178:	fsubr  QWORD PTR [ebx+0x609c7940]
  41817e:	es das 
  418180:	xor    edx,esp
  418182:	jae    0x418125
  418184:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418185:	pop    ds
  418186:	arpl   WORD PTR [eax],bx
  418188:	push   ecx
  418189:	ffreep st(2)
  41818b:	push   ss
  41818c:	mov    al,0xdf
  41818e:	sbb    al,BYTE PTR fs:[eax-0x4]
  418192:	fs std 
  418194:	dec    esi
  418195:	dec    esi
  418196:	dec    edx
  418197:	(bad)  
  418198:	fcmove st,st(4)
  41819a:	es das 
  41819c:	rcr    DWORD PTR [edx],0x31
  41819f:	mov    ebx,0x6d8749e1
  4181a4:	sbb    BYTE PTR [ecx+0xa9ac54f],0xc3
  4181ab:	pop    edx
  4181ac:	and    ebp,ecx
  4181ae:	fdiv   QWORD PTR [eax+0x76]
  4181b1:	jge    0x41816b
  4181b3:	call   0x5b16:0x75a149f0
  4181ba:	outs   dx,BYTE PTR ds:[esi]
  4181bb:	cli    
  4181bc:	mov    fs,WORD PTR [edi+0x4fc4db5c]
  4181c2:	pandn  mm5,QWORD PTR [eax]
  4181c5:	or     DWORD PTR [edx],edi
  4181c7:	xor    eax,ebx
  4181c9:	test   eax,0x3f6d8cee
  4181ce:	stos   DWORD PTR es:[edi],eax
  4181cf:	fdivr  st,st(2)
  4181d1:	inc    ebp
  4181d2:	pusha  
  4181d3:	(bad)  
  4181d4:	jg     0x418221
  4181d6:	les    ebp,FWORD PTR [edx+0x7f]
  4181d9:	or     BYTE PTR [esi-0x5c],0x29
  4181dd:	div    DWORD PTR [edx+0x6b2dc0f9]
  4181e3:	xlat   BYTE PTR ds:[ebx]
  4181e4:	fwait
  4181e5:	push   0x23
  4181e7:	movaps XMMWORD PTR [esp+esi*1-0x47],xmm1
  4181ec:	adc    al,0xdb
  4181ee:	xor    eax,0x79918d67
  4181f3:	and    ebp,DWORD PTR [eax-0x70]
  4181f6:	adc    ebp,DWORD PTR [esi+eax*8-0x24398419]
  4181fd:	lahf   
  4181fe:	hlt    
  4181ff:	(bad)  
  418200:	es sub eax,0xf8eb7297
  418206:	pop    edi
  418207:	dec    ebp
  418208:	pop    ecx
  418209:	push   esp
  41820a:	leave  
  41820b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41820c:	cmp    DWORD PTR [esp+eax*2-0xc],eax
  418210:	xchg   edi,eax
  418211:	ret    
  418212:	mov    ds:0xe7fcf790,eax
  418217:	or     eax,0x17099bcc
  41821c:	stc    
  41821d:	mov    eax,ds:0x3735674e
  418222:	lods   eax,DWORD PTR ds:[esi]
  418223:	scas   al,BYTE PTR es:[edi]
  418224:	ss pusha 
  418226:	(bad)  
  418227:	div    ecx
  418229:	hlt    
  41822a:	out    dx,eax
  41822b:	mov    esp,0x6bb437bf
  418230:	pop    ss
  418231:	mov    ss,esp
  418233:	fidivr DWORD PTR [ebx]
  418235:	loopne 0x4181fa
  418237:	(bad)  
  418238:	stc    
  418239:	and    eax,0x9400ba8a
  41823e:	sar    DWORD PTR [eax+0x40031071],1
  418244:	pop    ebp
  418245:	cmp    eax,0x2ef8a072
  41824a:	imul   ebp,DWORD PTR [edi-0x10],0xc638bb43
  418251:	call   ebx
  418253:	mov    eax,0xf6d3aca2
  418258:	dec    esi
  418259:	icebp  
  41825a:	cwde   
  41825b:	adc    BYTE PTR [esi],bl
  41825d:	pop    esp
  41825e:	sub    dh,BYTE PTR [ebx+0x58]
  418261:	repnz xchg ecx,eax
  418263:	jno    0x418207
  418265:	dec    esp
  418266:	les    esi,FWORD PTR [eax-0x12d5fd21]
  41826c:	fwait
  41826d:	sbb    dh,BYTE PTR [ebx+esi*4-0x70]
  418271:	pop    esi
  418272:	sub    edi,ebx
  418274:	mov    esp,0xf38e1f2f
  418279:	icebp  
  41827a:	data16 out dx,al
  41827c:	xlat   BYTE PTR ds:[ebx]
  41827d:	lahf   
  41827e:	int    0x63
  418280:	mov    ebp,0x4bd9549a
  418285:	and    ah,dl
  418287:	nop
  418288:	push   ebp
  418289:	push   eax
  41828a:	je     0x4182d2
  41828c:	adc    BYTE PTR [edx+0x4c291a5b],dh
  418292:	and    ebx,DWORD PTR [ebp-0x3399c106]
  418298:	jmp    0x31413ae4
  41829d:	in     al,dx
  41829e:	inc    esi
  41829f:	mov    eax,ds:0xc3fda9fc
  4182a4:	and    DWORD PTR [edi+0x51faa2c8],0xffffff8c
  4182ab:	cmp    ch,BYTE PTR [ebp+0x31]
  4182ae:	mov    bl,0x49
  4182b0:	jecxz  0x41825e
  4182b2:	mov    BYTE PTR [eax],dl
  4182b4:	adc    eax,0x89a46a28
  4182b9:	(bad)  
  4182ba:	push   eax
  4182bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182bc:	jne    0x41826b
  4182be:	or     edi,DWORD PTR [edi]
  4182c0:	call   0xf62407d2
  4182c5:	pop    ebp
  4182c6:	add    BYTE PTR [esi+0x7f],ah
  4182c9:	outs   dx,BYTE PTR ds:[esi]
  4182ca:	mov    eax,0x9ac1bfc9
  4182cf:	jno    0x4182ba
  4182d1:	enter  0xa1a9,0x63
  4182d5:	dec    edi
  4182d6:	retf   0xc3e2
  4182d9:	lahf   
  4182da:	add    al,0x23
  4182dc:	das    
  4182dd:	xchg   ebp,eax
  4182de:	push   edi
  4182df:	sub    eax,0xf13b00a3
  4182e4:	push   ecx
  4182e5:	mov    bh,0xb1
  4182e7:	dec    eax
  4182e8:	stc    
  4182e9:	mov    edx,0x13f33258
  4182ee:	sub    eax,0x8f47b22b
  4182f3:	push   ds
  4182f4:	xchg   esp,eax
  4182f5:	es int 0xfd
  4182f8:	xchg   ebx,eax
  4182f9:	xchg   DWORD PTR [ebx+0x376f4b63],ebx
  4182ff:	mov    ds:0xeb6fad88,al
  418304:	rcl    DWORD PTR [ebp-0x3a],cl
  418307:	sub    DWORD PTR [eax+0x5c],0x71
  41830b:	mov    edx,DWORD PTR [ebp+0x19]
  41830e:	ss (bad) 
  418310:	push   ebx
  418311:	add    eax,eax
  418313:	xadd   DWORD PTR [ebx+eiz*2-0x66645b2b],ebp
  41831b:	sub    eax,0x4e375c58
  418320:	dec    ecx
  418321:	cs mov ebp,0x3cac6b91
  418327:	add    al,0x60
  418329:	popf   
  41832a:	clc    
  41832b:	ret    
  41832c:	jno    0x418385
  41832e:	xor    BYTE PTR [eax],dl
  418330:	dec    edx
  418331:	add    BYTE PTR [eax-0x24],al
  418334:	push   ebx
  418335:	push   eax
  418336:	shl    BYTE PTR ds:0x37fb7d7c,1
  41833c:	inc    ecx
  41833d:	xchg   ebp,eax
  41833e:	and    esi,edi
  418340:	js     0x418336
  418342:	jp     0x4182f5
  418344:	mov    ch,0x88
  418346:	push   0x1b09eca5
  41834b:	xchg   esp,eax
  41834c:	dec    edi
  41834d:	mov    eax,0xb8c8e50b
  418352:	(bad)  
  418353:	xlat   BYTE PTR ds:[ebx]
  418354:	jmp    0x418331
  418356:	mov    al,0xc1
  418358:	adc    DWORD PTR [ebx],edi
  41835a:	addr16 cmp dl,cl
  41835d:	jno    0x4182ea
  41835f:	outs   dx,BYTE PTR ds:[esi]
  418360:	imul   eax,DWORD PTR [ecx+0x75],0x8644fd0e
  418367:	or     dl,BYTE PTR [ecx-0x8]
  41836a:	push   cs
  41836b:	imul   edi,DWORD PTR [ebx],0x2b5b8fa3
  418371:	sbb    ah,BYTE PTR [ecx+0x62640915]
  418377:	test   BYTE PTR [esi+0x30b22219],0x52
  41837e:	inc    BYTE PTR [ebp+0x61]
  418381:	push   esp
  418382:	(bad)  
  418384:	je     0x418316
  418386:	cwde   
  418387:	aam    0x6d
  418389:	inc    edi
  41838a:	loope  0x418318
  41838c:	shl    DWORD PTR [edi-0x22881a0b],1
  418392:	push   0x3a4482a1
  418397:	aas    
  418398:	imul   ebp,DWORD PTR [edx],0x3d
  41839b:	sahf   
  41839c:	icebp  
  41839d:	cmp    eax,0x400a354
  4183a2:	mov    al,0xbc
  4183a4:	(bad)  
  4183a6:	fimul  WORD PTR [ecx]
  4183a8:	(bad)
  4183ab:	fbld   TBYTE PTR [edi-0x795b67e1]
  4183b1:	pop    esi
  4183b2:	pop    es
  4183b3:	ins    DWORD PTR es:[edi],dx
  4183b4:	jmp    0x2d1d7fda
  4183b9:	pop    ecx
  4183ba:	aam    0xab
  4183bc:	and    cl,BYTE PTR [ebx+0x53]
  4183bf:	gs int3 
  4183c1:	lds    eax,FWORD PTR [eax]
  4183c3:	arpl   WORD PTR [edi+0x6f],cx
  4183c6:	sahf   
  4183c7:	loop   0x4183f9
  4183c9:	data16 rol BYTE PTR [edi+0x28a61a58],0x79
  4183d1:	mov    BYTE PTR [esi],dl
  4183d3:	and    eax,0xbd08a69e
  4183d8:	pop    esp
  4183d9:	loopne 0x418439
  4183db:	adc    esp,DWORD PTR [ecx]
  4183dd:	test   esp,esi
  4183df:	xor    cl,BYTE PTR [ebx+ecx*1]
  4183e2:	cwde   
  4183e3:	push   esp
  4183e4:	jp     0x41843a
  4183e6:	arpl   WORD PTR [esp+edx*4],bx
  4183e9:	dec    ebp
  4183ea:	mov    ch,ch
  4183ec:	call   DWORD PTR [esi+0x34]
  4183ef:	call   0xf2e2b7c1
  4183f4:	dec    ebx
  4183f5:	cdq    
  4183f6:	dec    ecx
  4183f7:	or     BYTE PTR [ebp-0x2f],0x86
  4183fb:	arpl   WORD PTR [eax-0x68],bp
  4183fe:	inc    ebp
  4183ff:	rcr    DWORD PTR [eax],cl
  418401:	out    dx,al
  418402:	cmp    edi,DWORD PTR [ebx-0x1a634f8]
  418408:	pop    edi
  418409:	pop    es
  41840a:	jg     0x418428
  41840c:	pop    ecx
  41840d:	daa    
  41840e:	ss push ds
  418410:	mov    ah,0x67
  418412:	mov    ds:0x2871800,eax
  418417:	pop    ds
  418418:	inc    ebx
  418419:	icebp  
  41841a:	push   ecx
  41841b:	inc    eax
  41841c:	mov    ds:0x7f86c73a,al
  418421:	nop
  418422:	cmp    al,0x12
  418424:	(bad)  
  418425:	popf   
  418426:	jnp    0x4183c5
  418428:	dec    edi
  418429:	push   edx
  41842a:	push   es
  41842b:	push   ebp
  41842c:	test   edx,ebx
  41842e:	fcmovnb st,st(0)
  418430:	xchg   BYTE PTR [ecx+esi*2],dh
  418433:	pushf  
  418434:	ss mov bh,0x5d
  418437:	mov    ebp,0x776104db
  41843c:	add    DWORD PTR [edi+0x52],eax
  41843f:	ss dec edi
  418441:	xor    ah,BYTE PTR [eax+0x7e470aa9]
  418447:	in     eax,dx
  418448:	mov    eax,0x164b2b59
  41844d:	pop    ss
  41844e:	je     0x418457
  418450:	fiadd  WORD PTR [eax]
  418452:	push   es
  418453:	mov    DWORD PTR [ebx+esi*1],esp
  418456:	push   ebp
  418457:	jmp    DWORD PTR [ebx+edi*4]
  41845a:	je     0x4184ac
  41845c:	(bad)  
  41845d:	call   0xb5ec:0xc2c96095
  418464:	inc    ecx
  418465:	retf   
  418466:	sar    DWORD PTR ss:[edx-0x3],1
  41846a:	mov    eax,0x21007776
  41846f:	and    DWORD PTR [edi],ebx
  418471:	loop   0x418441
  418473:	std    
  418474:	sub    DWORD PTR [esp],ebp
  418477:	inc    esp
  418478:	mov    ch,0x13
  41847a:	adc    DWORD PTR [edi],esp
  41847c:	cmc    
  41847d:	rcr    DWORD PTR [ebx],0x2
  418480:	sar    ecx,0x6e
  418483:	inc    ecx
  418484:	xchg   edi,eax
  418485:	shl    ch,cl
  418487:	and    esi,DWORD PTR [ebp-0x21]
  41848a:	(bad)  
  41848b:	ror    ebx,0xf8
  41848e:	stc    
  41848f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418490:	inc    ecx
  418491:	add    BYTE PTR [edx],al
  418493:	add    al,0x87
  418495:	outs   dx,DWORD PTR ds:[esi]
  418496:	sub    ah,BYTE PTR [ebp*2-0x3c8a7b86]
  41849d:	fist   DWORD PTR [eax]
  41849f:	cmp    ebx,DWORD PTR [edi-0x28]
  4184a2:	mov    eax,ds:0xa0ad3bf7
  4184a7:	sub    dh,BYTE PTR [esi+0x5c59a11]
  4184ad:	jno    0x418499
  4184af:	xor    esp,DWORD PTR [ebx]
  4184b1:	fdiv   QWORD PTR [ebx-0x780ce59f]
  4184b7:	or     bh,dl
  4184b9:	out    dx,eax
  4184ba:	adc    eax,0x7f9a00e
  4184bf:	icebp  
  4184c0:	dec    ebp
  4184c1:	mov    ecx,ss
  4184c3:	retf   0xb67c
  4184c6:	and    al,0x85
  4184c8:	test   al,0xaf
  4184ca:	adc    eax,0x46767353
  4184cf:	or     al,0xe5
  4184d1:	test   al,0xaf
  4184d3:	add    eax,DWORD PTR [ecx+0x7132ccc7]
  4184d9:	pop    edx
  4184da:	repz aam 0x6a
  4184dd:	xchg   esi,esp
  4184df:	leave  
  4184e0:	cli    
  4184e1:	sub    BYTE PTR [ecx-0x30],dl
  4184e4:	out    dx,al
  4184e5:	jge    0x4184d5
  4184e7:	xor    eax,0x5e9f173d
  4184ec:	rol    BYTE PTR cs:0x3583c301,1
  4184f3:	ds leave 
  4184f5:	pop    edi
  4184f6:	xchg   esp,eax
  4184f7:	sahf   
  4184f8:	mov    ah,ah
  4184fa:	dec    edx
  4184fb:	push   es
  4184fc:	sub    al,0x65
  4184fe:	call   0xff51:0x2f10eeeb
  418505:	int3   
  418506:	aam    0xcc
  418508:	sti    
  418509:	in     eax,0xb1
  41850b:	or     BYTE PTR [edi],al
  41850d:	stos   DWORD PTR es:[edi],eax
  41850e:	rcl    ebx,1
  418510:	sbb    eax,0x562792a2
  418515:	jge    0x4184ad
  418517:	and    edx,ebx
  418519:	and    eax,0xa9604fe6
  41851e:	xlat   BYTE PTR ds:[ebx]
  41851f:	push   ebp
  418520:	or     ebx,eax
  418522:	mov    dl,0x55
  418524:	push   edx
  418525:	push   eax
  418526:	ret    
  418527:	cs push ebp
  418529:	addr16 mov eax,ds:0x114c
  41852d:	in     eax,dx
  41852e:	pop    eax
  41852f:	add    al,0x7
  418531:	retf   0x87ae
  418534:	das    
  418535:	mov    WORD PTR [edi-0x75df6c6c],?
  41853b:	pop    esp
  41853c:	jbe    0x4185ba
  41853e:	test   BYTE PTR [esi-0x291e56d3],bl
  418544:	xchg   edx,eax
  418545:	scas   al,BYTE PTR es:[edi]
  418546:	push   es
  418547:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418548:	nop
  418549:	aas    
  41854a:	sbb    DWORD PTR [edx*2+0x12660583],0xfffffffe
  418552:	pop    ebp
  418553:	out    dx,al
  418554:	test   al,0x2a
  418556:	int    0xf3
  418558:	mov    ds:0xb722ad56,al
  41855d:	dec    dx
  41855f:	icebp  
  418560:	or     eax,0xcd23061
  418565:	repz jecxz 0x41851c
  418568:	stc    
  418569:	jns    0x418551
  41856b:	xor    al,BYTE PTR [eax+0x65]
  41856e:	mov    cl,0x30
  418570:	sbb    ebp,edi
  418572:	ins    BYTE PTR es:[edi],dx
  418573:	push   0xd
  418575:	cmp    BYTE PTR [ecx*1+0x762c909d],bh
  41857c:	jb     0x418597
  41857e:	pop    ecx
  41857f:	pop    ebp
  418580:	dec    esi
  418581:	jae    0x41852a
  418583:	or     DWORD PTR [esi+0x6be42422],ebp
  418589:	push   eax
  41858a:	or     bh,bl
  41858c:	js     0x418576
  41858e:	dec    eax
  41858f:	pop    ds
  418590:	xor    dh,dh
  418592:	xor    eax,0x60de8e28
  418597:	push   edi
  418598:	mov    bh,ch
  41859a:	cmp    DWORD PTR [ecx],ebp
  41859c:	das    
  41859d:	cld    
  41859e:	lods   al,BYTE PTR ds:[esi]
  41859f:	fldenv [eax+esi*8]
  4185a2:	cwde   
  4185a3:	mov    eax,ds:0x1c2b5b46
  4185a8:	mov    dh,0x8f
  4185aa:	xchg   esp,eax
  4185ab:	in     al,dx
  4185ac:	(bad)  
  4185ad:	fs mov dh,0xcd
  4185b0:	sbb    DWORD PTR [ebx],0x28
  4185b3:	xchg   esp,eax
  4185b4:	ss test eax,0x515afd6f
  4185ba:	dec    ecx
  4185bb:	mov    BYTE PTR [eax+edx*4],0x22
  4185bf:	jle    0x418573
  4185c1:	and    edx,DWORD PTR [ebp+0x72]
  4185c4:	xchg   edx,eax
  4185c5:	pop    ebp
  4185c6:	mov    edi,0xf4d31ca9
  4185cb:	or     BYTE PTR [edi],cl
  4185cd:	rcr    BYTE PTR [esi-0x2],cl
  4185d0:	les    edi,FWORD PTR [ecx+0x2e77674d]
  4185d6:	popa   
  4185d7:	xchg   esp,eax
  4185d8:	jno    0x418617
  4185da:	js     0x418577
  4185dc:	sub    bh,bh
  4185de:	les    edi,FWORD PTR [ecx]
  4185e0:	inc    esi
  4185e1:	xchg   esi,eax
  4185e2:	inc    esi
  4185e3:	sub    DWORD PTR [ebp+0x5],esi
  4185e6:	lahf   
  4185e7:	mov    DWORD PTR [ebx],esi
  4185e9:	sbb    DWORD PTR [eax+0x54],ecx
  4185ec:	add    dh,dl
  4185ee:	jmp    0x5c035f12
  4185f3:	ins    DWORD PTR es:[edi],dx
  4185f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185f5:	in     al,0x5d
  4185f7:	push   esi
  4185f8:	add    eax,0xcafbd38d
  4185fd:	leave  
  4185fe:	fistp  QWORD PTR [edx+0x5b]
  418601:	scas   al,BYTE PTR es:[edi]
  418602:	cmp    ch,BYTE PTR [ebx-0x1263ca8a]
  418608:	retf   
  418609:	cld    
  41860a:	lahf   
  41860b:	retf   0xe991
  41860e:	jmp    0xff79:0xb23669a1
  418615:	fmul   QWORD PTR ds:0x59573144
  41861b:	jl     0x418606
  41861d:	rcr    DWORD PTR [esi+0xd],cl
  418620:	dec    edx
  418621:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418622:	es pop ss
  418624:	xor    DWORD PTR ss:[eax],0xdf141005
  41862b:	ja     0x418611
  41862d:	pop    ecx
  41862e:	out    0x12,eax
  418630:	xchg   eax,ebx
  418632:	cs loope 0x4185e0
  418635:	and    bl,cl
  418637:	adc    BYTE PTR [esi],0x6b
  41863a:	icebp  
  41863b:	or     al,0x84
  41863d:	jne    0x418668
  41863f:	mov    ds:0x4bf509ec,al
  418644:	sbb    DWORD PTR [eax+0x779a238f],ebx
  41864a:	xchg   esi,ebx
  41864c:	mov    esp,0xc8f9497f
  418652:	dec    eax
  418653:	cmp    BYTE PTR [eax-0xc6c2ca4],dl
  418659:	jne    0x4185ea
  41865b:	pop    esi
  41865c:	retf   0xfa9f
  41865f:	fsub   QWORD PTR [eax-0x57]
  418662:	out    0x36,al
  418664:	push   edx
  418665:	mov    ch,BYTE PTR [ecx-0x160a6988]
  41866b:	push   edi
  41866c:	aad    0xb9
  41866e:	mov    bh,BYTE PTR [eax+0x7]
  418671:	or     eax,0xf3a7158f
  418676:	add    BYTE PTR [edx-0x2e],ch
  418679:	(bad)  
  41867a:	pop    edx
  41867b:	xchg   esi,eax
  41867c:	or     al,0x7b
  41867e:	jmp    0x4051:0x780affbc
  418685:	xor    edx,0xffffffc9
  418688:	call   0xda96:0xcfcc5cfc
  41868f:	and    ebx,0xffffffc3
  418692:	jl     0x41863e
  418694:	and    esp,DWORD PTR [edi+0x7a6b107e]
  41869a:	pop    ebp
  41869b:	scas   al,BYTE PTR es:[edi]
  41869c:	int    0x2f
  41869e:	xor    ebp,0xf916ddd6
  4186a4:	adc    BYTE PTR [edx+0x4],al
  4186a7:	icebp  
  4186a8:	jle    0x4186a1
  4186aa:	xchg   BYTE PTR [ebp-0x2c72963f],bh
  4186b0:	(bad)  
  4186b1:	out    0x16,eax
  4186b3:	and    eax,DWORD PTR [edi]
  4186b5:	adc    edi,esi
  4186b7:	imul   esp,DWORD PTR [ebx-0x1bdc00a0],0x72fc0e20
  4186c1:	test   BYTE PTR [ebp-0x4a6231ed],cl
  4186c7:	sbb    al,0xc5
  4186c9:	mov    edx,0xa6e16a78
  4186ce:	test   eax,0x42afb66e
  4186d3:	(bad)  
  4186d4:	push   esp
  4186d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186d6:	cmp    BYTE PTR [ebx-0x16],0x2
  4186da:	mov    esi,0x7f2bc4d9
  4186df:	mov    ah,0x64
  4186e1:	std    
  4186e2:	or     al,BYTE PTR [edx]
  4186e4:	push   ebp
  4186e5:	xchg   ebp,eax
  4186e6:	stos   DWORD PTR es:[edi],eax
  4186e7:	addr16 mov esi,ebp
  4186ea:	jg     0x418677
  4186ec:	push   ebp
  4186ed:	ret    
  4186ee:	mov    ah,0x11
  4186f0:	push   edx
  4186f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186f2:	add    DWORD PTR ds:0x1af47275,edi
  4186f8:	aam    0x1b
  4186fa:	jne    0x41871b
  4186fc:	push   edi
  4186fd:	cmp    cl,BYTE PTR [edi]
  4186ff:	dec    ebx
  418700:	jp     0x4186ab
  418702:	cld    
  418703:	push   0xffffff94
  418705:	retf   
  418706:	pop    ebx
  418707:	sub    DWORD PTR [ebp+0x23],eax
  41870a:	aam    0x13
  41870c:	push   esi
  41870d:	pushf  
  41870e:	mov    ds,edx
  418710:	xchg   edx,eax
  418711:	outs   dx,BYTE PTR ds:[esi]
  418712:	mov    BYTE PTR [esi],dh
  418714:	pushf  
  418715:	test   ebx,ecx
  418717:	fwait
  418718:	imul   DWORD PTR [eax-0x2128c91d]
  41871e:	cld    
  41871f:	ret    0x259d
  418722:	fld    TBYTE PTR [eax+0x6b087762]
  418728:	mov    dh,BYTE PTR [ebp-0x36]
  41872b:	or     eax,0x3e80d768
  418730:	add    dh,ah
  418732:	sub    eax,0xf65c43b3
  418737:	shr    DWORD PTR [ebx+edx*1-0x3e65fc1b],cl
  41873e:	mov    ebx,0x8eef12c8
  418743:	and    BYTE PTR [ebx*8+0x4a83a516],al
  41874a:	mov    edx,0x5696b63
  41874f:	stos   BYTE PTR es:[edi],al
  418750:	shl    BYTE PTR [edx],0x66
  418753:	xor    esi,DWORD PTR [eax+0x3c]
  418756:	(bad)  
  418757:	push   ebp
  418758:	imul   eax,DWORD PTR [esi+ebp*8],0xffffffcf
  41875c:	sbb    eax,0x382b6857
  418761:	lods   eax,DWORD PTR ds:[esi]
  418762:	dec    eax
  418763:	push   edx
  418764:	push   edx
  418765:	mov    ds:0x9d31bcef,al
  41876a:	scas   al,BYTE PTR es:[edi]
  41876b:	shl    eax,0x68
  41876e:	inc    esi
  41876f:	popa   
  418770:	jne    0x418733
  418772:	lea    ebp,[esi]
  418774:	retf   0x6a7e
  418777:	leave  
  418778:	out    0xbe,eax
  41877a:	xor    eax,0x4293fd83
  41877f:	jecxz  0x418722
  418781:	and    al,BYTE PTR [ecx]
  418783:	mov    ds:0x8f8e9005,eax
  418788:	(bad)  [ebx]
  41878a:	jo     0x41876f
  41878c:	dec    edi
  41878d:	mov    DWORD PTR [ecx-0x55a3b574],ebx
  418793:	cmp    ch,bh
  418795:	push   ebp
  418796:	sub    edi,ebp
  418798:	inc    ebx
  418799:	and    eax,0xe953fe60
  41879e:	clc    
  41879f:	loopne 0x418757
  4187a1:	mov    dh,0x87
  4187a3:	or     DWORD PTR [eax+eiz*4],ebx
  4187a6:	ins    BYTE PTR es:[edi],dx
  4187a7:	neg    BYTE PTR [edi]
  4187a9:	sub    al,0xe9
  4187ab:	loopne 0x4187a2
  4187ad:	jg     0x41877d
  4187af:	ss jnp 0x41879e
  4187b2:	push   0xffffff96
  4187b4:	fnstsw WORD PTR [ecx]
  4187b6:	popf   
  4187b7:	fidivr WORD PTR [ebx*4+0xc93234d]
  4187be:	out    dx,al
  4187bf:	clc    
  4187c0:	mov    esp,0x6a64ef8a
  4187c5:	test   al,0x31
  4187c7:	scas   al,BYTE PTR es:[edi]
  4187c8:	mov    cl,0x92
  4187ca:	or     bh,BYTE PTR [esi+ebx*8-0x6b30e31b]
  4187d1:	xchg   edi,eax
  4187d2:	xchg   esp,eax
  4187d3:	xchg   ebp,eax
  4187d4:	push   eax
  4187d5:	inc    ecx
  4187d6:	cmp    ch,ah
  4187d8:	test   eax,ebx
  4187da:	or     DWORD PTR [esi+0x26],edx
  4187dd:	adc    edx,0x62
  4187e0:	jge    0x41883e
  4187e2:	adc    cl,BYTE PTR [esi-0x76]
  4187e5:	lds    ecx,FWORD PTR [esi+0x581a4b85]
  4187eb:	xor    al,0x73
  4187ed:	pop    edx
  4187ee:	mov    al,0x41
  4187f0:	jl     0x418789
  4187f2:	xchg   BYTE PTR [ebx+0xd4e5f01],al
  4187f8:	pop    edx
  4187f9:	jno    0x41879d
  4187fb:	push   esi
  4187fc:	call   0x9c9229e6
  418801:	dec    ebp
  418802:	les    esp,FWORD PTR [eax-0x59]
  418805:	pop    ebp
  418806:	ja     0x41886f
  418808:	pop    es
  418809:	push   cs
  41880a:	ja     0x41880b
  41880c:	pop    esi
  41880d:	jae    0x418831
  41880f:	and    eax,0x4ab0fb11
  418814:	jmp    0x8449:0xfa3fa5e8
  41881b:	stos   DWORD PTR es:[edi],eax
  41881c:	inc    esi
  41881d:	add    BYTE PTR cs:[esp+ebx*2],bl
  418821:	push   edx
  418822:	loope  0x41885e
  418824:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418825:	mov    ah,0x2e
  418827:	cdq    
  418828:	das    
  418829:	sahf   
  41882a:	sub    al,0xaf
  41882c:	push   edx
  41882d:	add    edi,DWORD PTR [edi+edi*1]
  418830:	sbb    eax,DWORD PTR fs:0xde5a69f3
  418837:	cli    
  418838:	fild   WORD PTR [ebp+0x64]
  41883b:	sahf   
  41883c:	pop    edi
  41883d:	push   cs
  41883e:	call   FWORD PTR [eax+0x51e7f367]
  418844:	js     0x418873
  418846:	xchg   ecx,eax
  418847:	mov    ah,0x94
  418849:	cld    
  41884a:	cmc    
  41884b:	mov    eax,DWORD PTR [edx]
  41884d:	or     ah,bh
  41884f:	xor    eax,0xdac1e8b0
  418854:	sbb    eax,0xffffff89
  418857:	lock pop ecx
  418859:	ficom  DWORD PTR ds:0x375a3ebe
  41885f:	jae    0x41888c
  418861:	push   ebx
  418862:	ss push eax
  418864:	popa   
  418865:	push   eax
  418866:	mov    ah,0xab
  418868:	or     ch,BYTE PTR [edi]
  41886a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41886b:	les    ecx,FWORD PTR gs:[ebx]
  41886e:	ins    BYTE PTR es:[edi],dx
  41886f:	inc    edx
  418870:	ss lahf 
  418872:	push   eax
  418873:	cmp    al,0x1d
  418875:	xlat   BYTE PTR ds:[ebx]
  418876:	and    BYTE PTR [ebx+0x8],bl
  418879:	mov    esp,0xd93d2071
  41887e:	xor    bh,BYTE PTR [edx+0x22]
  418881:	iret   
  418882:	cs mov ch,0x11
  418885:	shl    BYTE PTR [esi+0x4ee272cd],0xa
  41888c:	push   ebp
  41888d:	mov    ebp,0x70b5400b
  418892:	mov    ch,0x3c
  418894:	mov    al,ds:0x6d249ccb
  418899:	mov    bl,0x88
  41889b:	dec    edi
  41889c:	adc    DWORD PTR [edi],esi
  41889e:	(bad)  
  41889f:	mov    al,ds:0x97647f86
  4188a4:	fidivr WORD PTR [esi-0x119d3dd4]
  4188aa:	sbb    eax,0x8462cba7
  4188af:	xchg   BYTE PTR [ebx-0x19a35420],dl
  4188b5:	xor    BYTE PTR [edi+0x7a],ah
  4188b8:	sub    eax,0x7ce83d29
  4188bd:	lods   eax,DWORD PTR ds:[esi]
  4188be:	pop    ss
  4188bf:	call   0xea794137
  4188c4:	xor    ebp,DWORD PTR [eax+ebp*8+0x254fd79b]
  4188cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188cc:	jns    0x4188c5
  4188ce:	hlt    
  4188cf:	inc    eax
  4188d0:	iret   
  4188d1:	sbb    al,0xf4
  4188d3:	add    BYTE PTR [ebp+0x6c53c4b7],dh
  4188d9:	pop    ebx
  4188da:	xor    BYTE PTR [ebx-0x617c9fb],dl
  4188e0:	push   ebp
  4188e1:	sub    DWORD PTR [edi],ecx
  4188e3:	push   es
  4188e4:	sub    DWORD PTR [esi+0x12],eax
  4188e7:	out    dx,al
  4188e8:	push   es
  4188e9:	cs out 0xae,eax
  4188ec:	and    DWORD PTR [eax-0x50],edx
  4188ef:	sar    ebx,0xe8
  4188f2:	mov    esi,0xf0317219
  4188f7:	jae    0x418971
  4188f9:	or     BYTE PTR [eax-0x4c],ah
  4188fc:	fist   WORD PTR [edx]
  4188fe:	cdq    
  4188ff:	outs   dx,DWORD PTR ds:[esi]
  418900:	sub    eax,DWORD PTR [esi+edx*4+0x2c11da61]
  418907:	lods   al,BYTE PTR ds:[esi]
  418908:	jl     0x4188f7
  41890a:	ss push esp
  41890c:	ret    0x6b7c
  41890f:	mov    gs,WORD PTR [edx-0x3f]
  418912:	or     edx,DWORD PTR [ecx]
  418914:	pop    ss
  418915:	dec    esp
  418916:	adc    BYTE PTR [ebp+0x16],al
  418919:	mov    dl,0x3a
  41891b:	push   eax
  41891c:	aad    0xa5
  41891e:	(bad)  
  41891f:	cli    
  418920:	add    esi,DWORD PTR [edx]
  418922:	xchg   ecx,eax
  418923:	in     al,0xf8
  418925:	xor    al,0x55
  418927:	add    edx,DWORD PTR [eax+0x2e]
  41892a:	into   
  41892b:	lea    ebp,[edx-0x64]
  41892e:	fimul  WORD PTR [esi-0x3b]
  418931:	and    edx,DWORD PTR [edi+0x6e8a9da1]
  418937:	inc    esi
  418938:	(bad)  
  418939:	fidivr WORD PTR [esi]
  41893b:	pop    es
  41893c:	dec    edx
  41893d:	cs loope 0x418937
  418940:	ins    DWORD PTR es:[edi],dx
  418941:	repz out 0x19,eax
  418944:	adc    dh,ah
  418946:	std    
  418947:	pop    edi
  418948:	std    
  418949:	lods   al,BYTE PTR ds:[esi]
  41894a:	pop    esp
  41894b:	cmp    al,0x6d
  41894d:	inc    edi
  41894e:	inc    esp
  41894f:	test   DWORD PTR [esi-0x7],0x1558961c
  418956:	inc    edx
  418957:	imul   ecx,DWORD PTR [esi],0xaf998ad4
  41895d:	out    0x90,al
  41895f:	sahf   
  418960:	add    DWORD PTR [ecx+0xb17037a],esi
  418966:	inc    esp
  418967:	or     DWORD PTR [ebx+0x778e27ec],ecx
  41896d:	popf   
  41896e:	or     dl,BYTE PTR [ebx]
  418970:	hlt    
  418971:	leave  
  418972:	adc    bl,BYTE PTR [eax]
  418974:	ret    
  418975:	and    al,0x20
  418977:	push   edi
  418978:	sbb    al,0x7e
  41897a:	unpcklps xmm1,XMMWORD PTR [ecx+ebp*8+0x2c3d2961]
  418982:	sub    BYTE PTR [edx+0x57],cl
  418985:	mov    al,ds:0x6510232d
  41898a:	cmp    DWORD PTR [ecx],edi
  41898c:	rcr    DWORD PTR [ebx],cl
  41898e:	xchg   DWORD PTR [esi-0x2e],ebp
  418991:	mov    eax,0x4f5ec106
  418996:	int    0x72
  418998:	lods   al,BYTE PTR ds:[esi]
  418999:	add    al,0xe7
  41899b:	mov    ds:0x823c628b,eax
  4189a0:	jbe    0x418998
  4189a2:	pop    ss
  4189a3:	fimul  WORD PTR ds:0x74ce7acb
  4189a9:	in     eax,0xdc
  4189ab:	mov    esp,ebx
  4189ad:	adc    edi,DWORD PTR [ebx-0x79]
  4189b0:	cmp    DWORD PTR [ecx+ebp*8-0x29a98725],0x62
  4189b8:	ror    DWORD PTR [ecx-0x7f52d29],1
  4189be:	in     al,0x5b
  4189c0:	push   esi
  4189c1:	mov    esi,DWORD PTR [ecx-0x71]
  4189c4:	pop    es
  4189c5:	aas    
  4189c6:	or     ecx,DWORD PTR [ebx]
  4189c8:	add    BYTE PTR [edi-0x165285f2],dh
  4189ce:	cmp    bl,BYTE PTR [edx]
  4189d0:	das    
  4189d1:	outs   dx,BYTE PTR ds:[esi]
  4189d2:	xor    al,0x68
  4189d4:	repnz std 
  4189d6:	outs   dx,BYTE PTR ds:[esi]
  4189d7:	mov    edx,0x4d816dea
  4189dc:	xchg   edi,eax
  4189dd:	dec    esi
  4189de:	(bad)  
  4189df:	mov    eax,0x1dbd696c
  4189e4:	gs push ebp
  4189e6:	push   esi
  4189e7:	mov    fs,WORD PTR [ecx+0x4215c8ab]
  4189ed:	and    BYTE PTR [ecx],bh
  4189ef:	pop    ss
  4189f0:	bound  edi,QWORD PTR [edx]
  4189f2:	hlt    
  4189f3:	repz (bad) 
  4189f6:	pop    ebp
  4189f7:	dec    ebx
  4189f8:	or     eax,0x7d5fa3ec
  4189fd:	retf   0xa94a
  418a00:	(bad)  
  418a01:	pop    gs
  418a03:	shr    ch,1
  418a05:	out    dx,al
  418a06:	in     al,dx
  418a07:	xor    eax,0x30107768
  418a0c:	(bad)  
  418a0d:	(bad)  
  418a0e:	out    0x13,eax
  418a10:	mov    edi,0xa02818d0
  418a15:	loopne 0x4189a8
  418a17:	ret    
  418a18:	les    ecx,FWORD PTR [esi+0x7db0473e]
  418a1e:	push   ebx
  418a1f:	shl    BYTE PTR [edx+0x3b449cfb],1
  418a25:	mov    cl,0x67
  418a27:	mov    eax,ds:0x7ceac09a
  418a2c:	sar    DWORD PTR [edx-0x7883e46e],cl
  418a32:	add    DWORD PTR ds:0x2c4dd306,0x78cd852e
  418a3c:	outs   dx,DWORD PTR ds:[esi]
  418a3d:	mov    esp,0x3cecdd30
  418a42:	jge    0x4189f7
  418a44:	or     dh,BYTE PTR [eax+0x53]
  418a47:	and    eax,0xb0aa241d
  418a4c:	aas    
  418a4d:	lea    esp,[ecx-0x4c]
  418a50:	rcr    DWORD PTR [ecx-0x54],0xa7
  418a54:	add    eax,0xbc3d319
  418a59:	adc    eax,0x50898e1b
  418a5e:	dec    edi
  418a5f:	xchg   edi,eax
  418a60:	mov    ebx,0xff3a7f03
  418a65:	inc    esi
  418a66:	jmp    0x27c7:0x1666a9d8
  418a6d:	adc    ebp,DWORD PTR [esi]
  418a6f:	jnp    0x418ae2
  418a71:	mov    al,0x4f
  418a73:	mov    ds:0x5068216f,eax
  418a78:	popa   
  418a79:	(bad)  
  418a7a:	pushf  
  418a7b:	popf   
  418a7c:	into   
  418a7d:	ds mov al,0xd1
  418a80:	outs   dx,BYTE PTR ds:[esi]
  418a81:	rcr    cl,1
  418a83:	xor    eax,0x9ca11c40
  418a88:	jnp    0x418acd
  418a8a:	jbe    0x418aab
  418a8c:	mov    al,0xea
  418a8e:	pop    esi
  418a8f:	xor    BYTE PTR [ebx],dh
  418a91:	push   ecx
  418a92:	lea    dx,[ecx+0x313ab170]
  418a99:	jbe    0x418ad8
  418a9b:	loop   0x418ac5
  418a9d:	int    0x9
  418a9f:	xchg   edi,eax
  418aa0:	cmc    
  418aa1:	xor    eax,0xad4b3e03
  418aa6:	shl    BYTE PTR [esi+0x461ec106],0x6d
  418aad:	mov    dh,0x31
  418aaf:	sub    ebp,DWORD PTR [esi+0x4736b35e]
  418ab5:	cwde   
  418ab6:	pusha  
  418ab7:	pop    edi
  418ab8:	sub    esi,eax
  418aba:	inc    edx
  418abb:	push   DWORD PTR [edi+0x33]
  418abe:	dec    edx
  418abf:	test   BYTE PTR [edi],dh
  418ac1:	dec    esp
  418ac2:	int3   
  418ac3:	(bad)  
  418ac4:	xchg   edx,eax
  418ac5:	jb     0x418a74
  418ac7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ac8:	cmp    BYTE PTR [edi+edx*2+0x4915dc37],bh
  418acf:	gs jne 0x418a78
  418ad2:	xor    al,0xd5
  418ad4:	(bad)  
  418ad5:	pop    esp
  418ad6:	mov    al,0x4a
  418ad8:	in     eax,dx
  418ad9:	sbb    eax,DWORD PTR [edx]
  418adb:	ja     0x418ac9
  418add:	xor    dh,BYTE PTR [ebp+0x1639ffc2]
  418ae3:	ret    
  418ae4:	(bad)  
  418ae5:	sbb    edi,DWORD PTR [ecx-0x16]
  418ae8:	xchg   ecx,eax
  418ae9:	aas    
  418aea:	pushf  
  418aeb:	jns    0x418a8a
  418aed:	scas   al,BYTE PTR es:[edi]
  418aee:	jb     0x418b32
  418af0:	fldenv [ebx]
  418af2:	adc    eax,0xa6fb386d
  418af7:	xor    ebp,DWORD PTR [ebp-0x3a]
  418afa:	pushf  
  418afb:	xchg   ebp,eax
  418afc:	mov    WORD PTR es:[ebx+eax*8+0x64686d0],gs
  418b04:	jmp    0x418b1c
  418b06:	arpl   WORD PTR [eax+eax*4+0x1f2e51e0],dx
  418b0d:	xchg   edi,eax
  418b0e:	mov    ecx,0x8cac0c08
  418b13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b14:	div    bh
  418b16:	stos   WORD PTR es:[edi],ax
  418b18:	pop    ebx
  418b19:	dec    edx
  418b1a:	hlt    
  418b1b:	jne    0x418b29
  418b1d:	inc    ebp
  418b1e:	jno    0x418b96
  418b20:	sbb    BYTE PTR [ebx+0x566ef2e7],dh
  418b26:	test   al,0xae
  418b28:	pop    eax
  418b29:	(bad)  
  418b2a:	sbb    eax,0x2dd951c3
  418b2f:	pop    ebx
  418b30:	add    BYTE PTR [esi-0x135b85ae],bh
  418b36:	lahf   
  418b37:	cdq    
  418b38:	int    0xe
  418b3a:	pop    ebx
  418b3b:	jecxz  0x418b6c
  418b3d:	mov    ecx,0x76c0d8f7
  418b42:	dec    esi
  418b43:	xchg   BYTE PTR [edx+0x50cb4bf1],ch
  418b49:	xor    esp,DWORD PTR [ecx-0xb3dcdd1]
  418b4f:	sub    BYTE PTR [edi+0x7d9fa6c3],ah
  418b55:	ficomp WORD PTR [esp+edx*4+0xe]
  418b59:	fild   QWORD PTR [ebx]
  418b5b:	xchg   esi,eax
  418b5c:	xor    al,0x59
  418b5e:	xlat   BYTE PTR ds:[ebx]
  418b5f:	ficom  DWORD PTR [ecx+0x1a]
  418b62:	int3   
  418b63:	cs xchg ebp,eax
  418b65:	xor    BYTE PTR [edx],ch
  418b67:	xor    BYTE PTR [edx+eiz*1],al
  418b6a:	int    0x31
  418b6c:	jns    0x418ba2
  418b6e:	ret    
  418b6f:	and    eax,0x64d054ce
  418b74:	repz ss mov bh,0x3e
  418b78:	fcomp  DWORD PTR [esi+0x1b]
  418b7b:	add    dh,bl
  418b7d:	or     eax,0x18e6f106
  418b82:	pop    edx
  418b83:	frstor [edi+esi*2-0x2f96426e]
  418b8a:	daa    
  418b8b:	mov    ebx,0x4aa2ae9d
  418b90:	daa    
  418b91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b92:	js     0x418b5a
  418b94:	test   al,0xd1
  418b96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b97:	sbb    ch,BYTE PTR [ebp+0x20]
  418b9a:	fld    TBYTE PTR [edx-0x7586600e]
  418ba0:	clc    
  418ba1:	sbb    al,BYTE PTR [esp+eax*1+0x16]
  418ba5:	dec    esp
  418ba6:	inc    edx
  418ba7:	ja     0x418c13
  418ba9:	ins    DWORD PTR es:[edi],dx
  418baa:	mov    DWORD PTR [esi-0x13],0x89939614
  418bb1:	(bad)  
  418bb2:	addr16 loop 0x418b89
  418bb5:	mov    dl,0x5a
  418bb7:	loop   0x418b62
  418bb9:	mov    al,0xdf
  418bbb:	jae    0x418b5e
  418bbd:	adc    ch,BYTE PTR [eax+0x6774f8e3]
  418bc3:	icebp  
  418bc4:	xchg   edx,eax
  418bc5:	sar    BYTE PTR [eax],1
  418bc7:	(bad)  
  418bc8:	mov    al,0x11
  418bca:	cmovbe edi,DWORD PTR [edi-0x34]
  418bce:	xor    edx,eax
  418bd0:	pand   mm7,mm0
  418bd3:	xor    ecx,DWORD PTR [ecx-0x561831ee]
  418bd9:	inc    esi
  418bda:	(bad)  
  418bdb:	inc    edx
  418bdc:	inc    esp
  418bdd:	cli    
  418bde:	test   eax,0xaf5d8f9e
  418be3:	mov    al,0xfb
  418be5:	dec    ecx
  418be6:	and    ebx,DWORD PTR [ebp+0xb]
  418be9:	adc    dl,BYTE PTR [edx+eax*4]
  418bec:	cmc    
  418bed:	jle    0x418b92
  418bef:	daa    
  418bf0:	xchg   edx,eax
  418bf1:	int    0x51
  418bf3:	add    dl,BYTE PTR [esi]
  418bf5:	push   0x6b357c79
  418bfa:	xor    DWORD PTR ds:0xbd9638b,eax
  418c00:	mov    ds:0x908a49d1,eax
  418c05:	test   BYTE PTR [ebx-0x8],al
  418c08:	test   BYTE PTR [ebp+0x61],al
  418c0b:	clc    
  418c0c:	ja     0x418c7e
  418c0e:	sub    dh,BYTE PTR [edi+0x73]
  418c11:	test   BYTE PTR [ecx+0x60074080],ah
  418c17:	pop    ebp
  418c18:	loope  0x418c98
  418c1a:	xor    al,0x95
  418c1c:	rcl    BYTE PTR ds:0x81d4d130,0x68
  418c23:	push   ss
  418c24:	push   0x731696d4
  418c29:	fxch   st(7)
  418c2b:	addr16 xchg ebx,eax
  418c2d:	jne    0x418c5c
  418c2f:	inc    ecx
  418c30:	idiv   bh
  418c32:	arpl   WORD PTR [esi-0x47653363],dx
  418c38:	in     eax,dx
  418c39:	push   ss
  418c3a:	xchg   ecx,eax
  418c3b:	push   esi
  418c3c:	lods   eax,DWORD PTR ds:[esi]
  418c3d:	shl    esi,cl
  418c3f:	iret   
  418c40:	jbe    0x418bcc
  418c42:	out    dx,al
  418c43:	jg     0x418bf1
  418c45:	fadd   st(5),st
  418c47:	(bad)  
  418c49:	push   ebp
  418c4a:	test   BYTE PTR [edi],bl
  418c4c:	test   BYTE PTR [esp+ecx*1+0x4005533f],0x56
  418c54:	and    eax,0xda5003f2
  418c59:	push   ebp
  418c5a:	jae    0x418c0f
  418c5c:	inc    esi
  418c5d:	nop
  418c5e:	scas   eax,DWORD PTR es:[edi]
  418c5f:	xchg   ch,cl
  418c61:	ficomp DWORD PTR [edi+0x0]
  418c64:	pop    ebp
  418c65:	mov    DWORD PTR [ecx-0x63],ebx
  418c68:	shr    BYTE PTR [ecx-0x4bcb0f5],0x6a
  418c6f:	jecxz  0x418c23
  418c71:	sbb    al,0x23
  418c73:	xor    dl,BYTE PTR [esi+0x6dc69ca8]
  418c79:	popf   
  418c7a:	pop    DWORD PTR [ebp-0x1bedc98b]
  418c80:	test   BYTE PTR cs:[esi],ch
  418c83:	ret    
  418c84:	and    ebp,DWORD PTR [ecx]
  418c86:	cdq    
  418c87:	int    0x1b
  418c89:	enter  0x30e2,0x10
  418c8d:	jecxz  0x418ca9
  418c8f:	ins    DWORD PTR es:[edi],dx
  418c90:	push   eax
  418c91:	mov    cl,0x32
  418c93:	dec    esp
  418c94:	jne    0x418c1a
  418c96:	mov    ds:0x2bc027f7,eax
  418c9b:	inc    edx
  418c9c:	xor    eax,0x6905c3ea
  418ca1:	in     al,dx
  418ca2:	repnz dec eax
  418ca4:	dec    ebx
  418ca5:	pushf  
  418ca6:	or     DWORD PTR [edx+0x651d7732],eax
  418cac:	add    al,0x68
  418cae:	out    0xac,al
  418cb0:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418cb2:	and    ch,BYTE PTR [ecx-0x2cce6884]
  418cb8:	mov    esi,0x71089e97
  418cbd:	pop    ebp
  418cbe:	xchg   ebp,eax
  418cbf:	push   ebp
  418cc0:	add    ch,0x10
  418cc3:	cwde   
  418cc4:	je     0x418cc2
  418cc6:	leave  
  418cc7:	jle    0x418c8b
  418cc9:	pop    ecx
  418cca:	push   esi
  418ccb:	sub    BYTE PTR [edx+eax*4-0x3],0xdf
  418cd0:	in     al,0x45
  418cd2:	mov    ebx,0x4079530a
  418cd7:	iret   
  418cd8:	xor    eax,0xc7fd89c9
  418cdd:	cwde   
  418cde:	mov    dl,0x4d
  418ce0:	xor    eax,0x6a9f28d4
  418ce5:	jns    0x418c81
  418ce7:	cmp    ch,BYTE PTR [esi+ebx*1-0x4e]
  418ceb:	enter  0x482f,0xc4
  418cef:	int3   
  418cf0:	push   cs
  418cf1:	cld    
  418cf2:	ss dec esi
  418cf4:	in     al,dx
  418cf5:	lods   eax,DWORD PTR ds:[esi]
  418cf6:	push   0xffffffcb
  418cf8:	sete   BYTE PTR [edx]
  418cfb:	(bad)
  418cff:	rcr    BYTE PTR [ebp-0x4eff1cd8],1
  418d05:	cmc    
  418d06:	push   esp
  418d07:	retf   
  418d08:	xor    DWORD PTR [esi-0x274548f5],eax
  418d0e:	in     eax,dx
  418d0f:	sbb    eax,0x4e39524
  418d14:	add    BYTE PTR [eax],al
  418d16:	into   
  418d17:	repnz xor eax,0xb2e2a381
  418d1d:	aaa    
  418d1e:	sbb    eax,DWORD PTR [esi-0x5e]
  418d21:	out    0x7,eax
  418d23:	sbb    al,0xf0
  418d25:	fisub  DWORD PTR [edx]
  418d27:	shl    DWORD PTR [ecx],0x58
  418d2a:	les    ecx,FWORD PTR [ecx+ecx*4-0x52a7a800]
  418d31:	push   edi
  418d32:	or     eax,0xbc241fed
  418d37:	dec    edi
  418d38:	sbb    cl,BYTE PTR [edi+0xccbab82]
  418d3e:	xor    eax,0xe94a85f
  418d43:	xchg   ebp,eax
  418d44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d45:	rcl    edi,1
  418d47:	pop    ebp
  418d48:	aaa    
  418d49:	(bad)  
  418d4a:	sbb    BYTE PTR [ecx+0x2d0bf51],0x31
  418d51:	or     edi,DWORD PTR [ecx+0x4d]
  418d54:	ins    DWORD PTR es:[edi],dx
  418d55:	dec    eax
  418d56:	add    eax,0xf2dee57
  418d5b:	ja     0x418cf9
  418d5d:	sbb    eax,DWORD PTR [esi-0x22846887]
  418d63:	add    bh,dl
  418d65:	xor    BYTE PTR [ebx],bh
  418d67:	jb     0x418da3
  418d69:	pop    ds
  418d6a:	test   ch,ch
  418d6c:	fild   WORD PTR [ecx]
  418d6e:	lea    ebx,[ebx+0x1e]
  418d71:	(bad)  
  418d72:	stos   DWORD PTR es:[edi],eax
  418d73:	jne    0x418db1
  418d75:	pop    ebp
  418d76:	jmp    0x7efc:0xf3562013
  418d7d:	add    edi,DWORD PTR [edi+edi*1+0x34845bd9]
  418d84:	call   0xe67c:0x8d8fd0bf
  418d8b:	pop    edi
  418d8c:	popf   
  418d8d:	mov    ds:0x3bbc43d8,al
  418d92:	push   ebx
  418d93:	jecxz  0x418d60
  418d95:	mov    bl,BYTE PTR ds:0x9fd5b01b
  418d9b:	mov    BYTE PTR ds:[eax],ch
  418d9e:	push   edi
  418d9f:	mov    al,0xc
  418da1:	in     eax,0xc0
  418da3:	in     al,0x68
  418da5:	mov    bl,0x8c
  418da7:	pop    es
  418da8:	ss or  cl,dl
  418dab:	test   BYTE PTR [ebx],bl
  418dad:	cmp    eax,0x58d31364
  418db2:	jmp    0x2c4214c
  418db7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418db8:	pop    ds
  418db9:	cli    
  418dba:	and    al,0xa6
  418dbc:	cmp    eax,ebx
  418dbe:	in     eax,0x66
  418dc0:	mov    bh,0x37
  418dc2:	xchg   esi,eax
  418dc3:	lds    edx,FWORD PTR [esi]
  418dc5:	aad    0x0
  418dc7:	mov    ds:0xfb080b5a,al
  418dcc:	das    
  418dcd:	sub    al,0xd1
  418dcf:	mov    edi,0x1921383b
  418dd4:	xchg   ecx,eax
  418dd5:	inc    esp
  418dd6:	hlt    
  418dd7:	enter  0x9d7e,0x92
  418ddb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ddc:	sbb    DWORD PTR [ebp+0x24],edx
  418ddf:	into   
  418de0:	out    dx,al
  418de1:	xor    DWORD PTR [ebp+0x1],eax
  418de4:	(bad)  
  418de5:	rcr    DWORD PTR [edi],cl
  418de7:	mov    cl,0xff
  418de9:	stc    
  418dea:	mov    bh,0xb2
  418dec:	mov    ebx,0x8d5fb918
  418df1:	ret    0xbd51
  418df4:	(bad)
  418df8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418df9:	(bad)
  418dfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418dfd:	(bad)  
  418dfe:	daa    
  418dff:	mov    DWORD PTR [edx+0x22],esi
  418e02:	in     al,0xe3
  418e04:	inc    esp
  418e05:	jl     0x418e60
  418e07:	lods   eax,DWORD PTR ds:[esi]
  418e08:	stos   BYTE PTR es:[edi],al
  418e09:	jbe    0x418e7e
  418e0b:	inc    edx
  418e0c:	out    dx,eax
  418e0d:	cmp    al,0x41
  418e0f:	retf   0x3352
  418e12:	push   es
  418e13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e14:	cli    
  418e15:	inc    edx
  418e16:	cwde   
  418e17:	cli    
  418e18:	pop    ecx
  418e19:	jae    0x418db7
  418e1b:	jnp    0x418dcb
  418e1d:	out    0xac,al
  418e1f:	pop    ebx
  418e20:	stos   DWORD PTR es:[edi],eax
  418e21:	jge    0x418e56
  418e23:	fisttp WORD PTR [edi]
  418e25:	hlt    
  418e26:	les    esi,FWORD PTR [eax-0x10]
  418e29:	pop    edi
  418e2a:	push   esp
  418e2b:	mov    edx,0xe8a3b9da
  418e30:	jl     0x418e05
  418e32:	aam    0xda
  418e34:	pop    ss
  418e35:	jp     0x418df1
  418e37:	push   edi
  418e38:	inc    esp
  418e39:	int    0xd1
  418e3b:	dec    ebx
  418e3c:	pushf  
  418e3d:	sar    BYTE PTR [edi+0x4bc84d37],0x71
  418e44:	push   0xffffffa6
  418e46:	ins    DWORD PTR es:[edi],dx
  418e47:	mov    bh,0xf3
  418e49:	(bad)  [eax]
  418e4b:	mov    al,ds:0xd1c94cd5
  418e50:	mov    edi,DWORD PTR [ecx-0x5a]
  418e53:	fdiv   QWORD PTR [edx+edx*2]
  418e56:	loop   0x418e1b
  418e58:	jle    0x418e2d
  418e5a:	jmp    0x418ec8
  418e5c:	es sbb al,0xf8
  418e5f:	mov    esp,0xa46b12ff
  418e64:	xchg   ebx,eax
  418e65:	pop    esi
  418e66:	and    ch,BYTE PTR [eax+0x6646a22e]
  418e6c:	mov    edx,0x567d8371
  418e71:	mov    es,WORD PTR [ebx]
  418e73:	ins    BYTE PTR es:[edi],dx
  418e74:	loopne 0x418ea9
  418e76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e77:	xor    dh,BYTE PTR [ecx]
  418e79:	mov    al,ds:0x573fb45a
  418e7e:	test   eax,0xacffe1f9
  418e83:	or     al,0x5
  418e85:	mov    ebp,0x4d460f63
  418e8a:	sti    
  418e8b:	sbb    BYTE PTR [ebx-0x32fbb439],bh
  418e91:	das    
  418e92:	push   es
  418e93:	bound  esi,QWORD PTR [esi-0x6faba8af]
  418e99:	mov    cl,0x2
  418e9b:	loop   0x418f06
  418e9d:	inc    edx
  418e9e:	mov    bl,BYTE PTR [esi-0x73780e6]
  418ea4:	aaa    
  418ea5:	popa   
  418ea6:	jge    0x418f27
  418ea8:	cld    
  418ea9:	sub    eax,0xaa34eca0
  418eae:	imul   edi,DWORD PTR [ebx-0x14646492],0x1
  418eb5:	sbb    BYTE PTR [ecx+0x52370ba],ch
  418ebb:	xor    ecx,esi
  418ebd:	(bad)  
  418ebe:	push   ebx
  418ebf:	dec    edx
  418ec0:	xlat   BYTE PTR ds:[ebx]
  418ec1:	adc    al,BYTE PTR [edi+0x3d415529]
  418ec7:	arpl   WORD PTR [ebp+eiz*8-0x73f412ad],si
  418ece:	mov    al,0x99
  418ed0:	sub    ah,BYTE PTR [ecx+eiz*4]
  418ed3:	mov    eax,ds:0xbcaacae8
  418ed8:	cmp    eax,DWORD PTR [edi+0xd]
  418edb:	add    al,0xa8
  418edd:	or     DWORD PTR [edx-0x2],ebx
  418ee0:	xchg   ecx,eax
  418ee1:	dec    eax
  418ee2:	fwait
  418ee3:	pop    ebx
  418ee4:	ss hlt 
  418ee6:	call   0x5c6fcefc
  418eeb:	push   eax
  418eec:	popa   
  418eed:	or     al,0x4e
  418eef:	sub    eax,0x4c845e2b
  418ef4:	fs (bad) 
  418ef6:	jmp    0x418e7a
  418ef8:	jno    0x418e85
  418efa:	iret   
  418efb:	mov    bl,0xfb
  418efd:	(bad)  
  418efe:	scas   eax,DWORD PTR es:[edi]
  418eff:	iret   
  418f00:	(bad)  
  418f01:	lea    ebx,[eax]
  418f03:	mov    ch,0x53
  418f05:	or     al,0xf1
  418f07:	ss dec di
  418f0a:	jecxz  0x418ec9
  418f0c:	jno    0x418eba
  418f0e:	rcl    BYTE PTR [eax+0x32aed483],cl
  418f14:	cwde   
  418f15:	repnz in al,dx
  418f17:	jnp    0x418f5b
  418f19:	sbb    dh,bh
  418f1b:	mov    dl,0x59
  418f1d:	enter  0x9f2b,0x8d
  418f21:	(bad)  
  418f22:	pop    eax
  418f23:	mov    al,ds:0xe8e68a4c
  418f28:	fcomi  st,st(1)
  418f2a:	and    eax,0x2dd8fe5a
  418f2f:	mov    eax,0x7cb0a212
  418f34:	cld    
  418f35:	or     ch,0xc0
  418f38:	imul   ecx,DWORD PTR [edi],0x32118563
  418f3e:	or     esp,DWORD PTR [ebx]
  418f40:	dec    esi
  418f41:	out    dx,eax
  418f42:	pop    edx
  418f43:	or     BYTE PTR [ecx+0x71606607],al
  418f49:	push   edx
  418f4a:	adc    esp,DWORD PTR [ecx]
  418f4c:	aad    0xb8
  418f4e:	(bad)  
  418f4f:	out    dx,eax
  418f50:	cmp    esi,DWORD PTR [esp+esi*8-0x29]
  418f54:	mov    edx,0x6fc119b0
  418f59:	jmp    0x7617:0x4373ad2b
  418f60:	in     eax,dx
  418f61:	(bad)  
  418f62:	gs push edx
  418f64:	pop    es
  418f65:	lods   al,BYTE PTR ds:[esi]
  418f66:	xor    eax,0xdb7e26f5
  418f6b:	mov    dh,0x46
  418f6d:	fadd   st(1),st
  418f6f:	mov    edx,0x6e680b10
  418f74:	xchg   ecx,eax
  418f75:	adc    BYTE PTR [ecx],0x65
  418f78:	push   ebx
  418f79:	outs   dx,DWORD PTR ds:[esi]
  418f7a:	mov    cl,0xd1
  418f7c:	dec    edx
  418f7d:	mov    al,0x57
  418f7f:	(bad)  
  418f80:	stos   DWORD PTR es:[di],eax
  418f82:	shr    DWORD PTR [ebx-0x5e],1
  418f85:	jg     0x418f53
  418f87:	sub    bl,al
  418f89:	xchg   esi,eax
  418f8a:	inc    ebp
  418f8b:	and    DWORD PTR [ebx+0x12],0xfffffffc
  418f8f:	mul    ebx
  418f91:	je     0x418f1a
  418f93:	imul   esp,esi,0x75
  418f96:	fwait
  418f97:	adc    al,0x3
  418f99:	test   BYTE PTR [ebp+edi*4+0x681b48a5],dl
  418fa0:	pop    edi
  418fa1:	ja     0x418fe2
  418fa3:	fld    QWORD PTR [ecx+0x62]
  418fa6:	mov    bh,0x44
  418fa8:	cmp    ch,BYTE PTR [ebx]
  418faa:	xchg   ebp,eax
  418fab:	mov    bl,0xc0
  418fad:	scas   eax,DWORD PTR es:[edi]
  418fae:	aam    0x1f
  418fb0:	out    dx,al
  418fb1:	stos   BYTE PTR es:[edi],al
  418fb2:	jbe    0x418f37
  418fb4:	imul   dx,bx,0x3836
  418fb9:	fdivr  DWORD PTR [eax]
  418fbb:	mov    eax,ds:0x698519b7
  418fc0:	pop    cx
  418fc2:	ret    0x80b0
  418fc5:	and    cl,BYTE PTR [eax]
  418fc7:	pop    esi
  418fc8:	adc    BYTE PTR [esi],dl
  418fca:	push   0x6a
  418fcc:	sti    
  418fcd:	pusha  
  418fce:	sbb    al,0x23
  418fd0:	dec    esp
  418fd1:	fwait
  418fd2:	clc    
  418fd3:	mov    bh,0x53
  418fd5:	push   ecx
  418fd6:	aam    0xe1
  418fd8:	inc    edi
  418fd9:	std    
  418fda:	imul   BYTE PTR [ebp-0x70]
  418fdd:	test   DWORD PTR ds:0x5ccfc03d,esi
  418fe3:	push   ds
  418fe4:	mov    eax,ds:0x33b6cc6e
  418fe9:	cli    
  418fea:	dec    edx
  418feb:	test   BYTE PTR [edi+0x2d37f7b8],ah
  418ff1:	sub    ebp,DWORD PTR [edi+eax*2]
  418ff4:	fst    DWORD PTR [edi+0x69]
  418ff7:	test   al,0x77
  418ff9:	call   0xf97f:0xa5dad75d
  419000:	sbb    BYTE PTR cs:[edi+0x16],0xac
  419005:	and    DWORD PTR [edx-0x22],edi
  419008:	or     eax,0xcaa9feaf
  41900d:	rcl    DWORD PTR fs:[edx+0x2cb9ec41],0x17
  419015:	and    dl,BYTE PTR [eax+ecx*4]
  419018:	ja     0x419014
  41901a:	jno    0x418fbd
  41901c:	dec    ebx
  41901d:	fimul  WORD PTR [ebp+0x1c]
  419020:	dec    ebp
  419021:	push   esi
  419022:	inc    esi
  419023:	call   0x10c5710b
  419028:	jns    0x418ff6
  41902a:	outs   dx,DWORD PTR ds:[esi]
  41902b:	add    dl,BYTE PTR [edi+0x4a31320d]
  419031:	mov    bh,0xba
  419033:	xchg   ecx,eax
  419034:	sahf   
  419035:	call   0x7736:0x47dfcbb2
  41903c:	je     0x418fda
  41903e:	je     0x41903e
  419040:	mov    cl,0x76
  419042:	mov    ds:0xab55cdbf,eax
  419047:	mov    ah,BYTE PTR [edi+esi*4]
  41904a:	mov    esp,0xdb53bf0f
  41904f:	test   al,0xed
  419051:	mov    eax,ds:0x8a2d5f91
  419056:	add    BYTE PTR [esi+edi*8-0x71c92e05],bh
  41905d:	xor    cl,BYTE PTR [ebp+0x75]
  419060:	mov    al,ds:0x250afdd1
  419065:	pop    edi
  419066:	and    edx,ebx
  419068:	mov    DWORD PTR [ebp-0x4c],edx
  41906b:	mov    edx,DWORD PTR [ebp+0x8]
  41906e:	mov    ebx,DWORD PTR [ebp-0x48]
  419071:	lea    edx,[ebx+edx*1+0x241fcdf]
  419078:	mov    DWORD PTR [ebp-0x48],edx
  41907b:	mov    edx,DWORD PTR [ebp+0x8]
  41907e:	mov    ebx,0xfa5e1530
  419083:	sub    ebx,edx
  419085:	add    ebx,DWORD PTR [ebp-0x44]
  419088:	mov    DWORD PTR [ebp-0x44],ebx
  41908b:	mov    edx,DWORD PTR [ebp+0x8]
  41908e:	xor    edx,eax
  419090:	add    edx,esi
  419092:	jne    0x416c96
  419098:	jmp    0x419125
  41909d:	mov    edx,DWORD PTR [ebp-0x14]
  4190a0:	mov    DWORD PTR [ebp+0x8],edx
  4190a3:	jmp    0x419118
  4190a8:	mov    edx,DWORD PTR [ebp+0x8]
  4190ab:	mov    ebx,DWORD PTR [ebp-0x8]
  4190ae:	xor    edx,eax
  4190b0:	xor    ebx,eax
  4190b2:	sub    edx,ebx
  4190b4:	sub    edx,esi
  4190b6:	xor    edx,eax
  4190b8:	mov    DWORD PTR [ebp+0x8],edx
  4190bb:	mov    edx,DWORD PTR [ebp+0x8]
  4190be:	mov    ebx,DWORD PTR [ebp-0x58]
  4190c1:	add    edx,0x5708fa
  4190c7:	imul   edx,ebx
  4190ca:	mov    DWORD PTR [ebp-0x58],edx
  4190cd:	mov    edx,DWORD PTR [ebp+0x8]
  4190d0:	mov    ebx,DWORD PTR [ebp-0x54]
  4190d3:	add    edx,0x64f89c
  4190d9:	or     edx,ebx
  4190db:	mov    DWORD PTR [ebp-0x54],edx
  4190de:	mov    edx,DWORD PTR [ebp+0x8]
  4190e1:	mov    ebx,DWORD PTR [ebp-0x50]
  4190e4:	add    edx,ecx
  4190e6:	xor    edx,ebx
  4190e8:	mov    DWORD PTR [ebp-0x50],edx
  4190eb:	mov    edx,DWORD PTR [ebp+0x8]
  4190ee:	mov    ebx,DWORD PTR [ebp-0x4c]
  4190f1:	add    edx,edi
  4190f3:	and    edx,ebx
  4190f5:	mov    DWORD PTR [ebp-0x4c],edx
  4190f8:	mov    edx,DWORD PTR [ebp+0x8]
  4190fb:	mov    ebx,DWORD PTR [ebp-0x48]
  4190fe:	lea    edx,[ebx+edx*1+0x241fcdf]
  419105:	mov    DWORD PTR [ebp-0x48],edx
  419108:	mov    edx,DWORD PTR [ebp+0x8]
  41910b:	mov    ebx,0xfa5e1530
  419110:	sub    ebx,edx
  419112:	add    ebx,DWORD PTR [ebp-0x44]
  419115:	mov    DWORD PTR [ebp-0x44],ebx
  419118:	mov    edx,DWORD PTR [ebp+0x8]
  41911b:	xor    edx,eax
  41911d:	add    edx,esi
  41911f:	jne    0x4190a8
  419125:	mov    edx,DWORD PTR [ebp-0x14]
  419128:	mov    DWORD PTR [ebp+0x8],edx
  41912b:	jmp    0x41b525
  419130:	mov    edx,DWORD PTR [ebp+0x8]
  419133:	mov    ebx,DWORD PTR [ebp-0x8]
  419136:	xor    edx,eax
  419138:	xor    ebx,eax
  41913a:	sub    edx,ebx
  41913c:	sub    edx,esi
  41913e:	xor    edx,eax
  419140:	mov    DWORD PTR [ebp+0x8],edx
  419143:	mov    edx,DWORD PTR [ebp+0x8]
  419146:	mov    ebx,DWORD PTR [ebp-0x58]
  419149:	add    edx,0x5708fa
  41914f:	imul   edx,ebx
  419152:	mov    DWORD PTR [ebp-0x58],edx
  419155:	mov    edx,DWORD PTR [ebp+0x8]
  419158:	mov    ebx,DWORD PTR [ebp-0x54]
  41915b:	add    edx,0x64f89c
  419161:	or     edx,ebx
  419163:	mov    DWORD PTR [ebp-0x54],edx
  419166:	mov    edx,DWORD PTR [ebp+0x8]
  419169:	mov    ebx,DWORD PTR [ebp-0x50]
  41916c:	add    edx,ecx
  41916e:	xor    edx,ebx
  419170:	mov    DWORD PTR [ebp-0x50],edx
  419173:	mov    edx,DWORD PTR [ebp+0x8]
  419176:	mov    ebx,DWORD PTR [ebp-0x4c]
  419179:	add    edx,edi
  41917b:	and    edx,ebx
  41917d:	mov    DWORD PTR [ebp-0x4c],edx
  419180:	mov    edx,DWORD PTR [ebp+0x8]
  419183:	mov    ebx,DWORD PTR [ebp-0x48]
  419186:	lea    edx,[ebx+edx*1+0x241fcdf]
  41918d:	jmp    0x41b512
  419192:	stos   DWORD PTR es:[edi],eax
  419193:	push   ds
  419194:	(bad)  
  419195:	and    al,0xcb
  419197:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419198:	jnp    0x419127
  41919a:	jge    0x41913b
  41919c:	xor    eax,0x410e411b
  4191a1:	sahf   
  4191a2:	(bad)  
  4191a3:	sbb    DWORD PTR [ecx+0x7a],edi
  4191a6:	adc    bl,BYTE PTR [edi+0x7a]
  4191a9:	jp     0x419180
  4191ab:	(bad)  
  4191ac:	popf   
  4191ad:	sbb    DWORD PTR [eax-0x3c],ecx
  4191b0:	mov    esi,0x9c2aad08
  4191b5:	inc    ecx
  4191b6:	pop    ebx
  4191b7:	sub    BYTE PTR [ebx],al
  4191b9:	sub    DWORD PTR [edx+0x654e354c],ebx
  4191bf:	call   0xab75c2eb
  4191c4:	mov    ds:0xa80b19d3,al
  4191c9:	repz in al,dx
  4191cb:	hlt    
  4191cc:	pop    ecx
  4191cd:	out    0x25,al
  4191cf:	aam    0xbf
  4191d1:	shl    ebx,1
  4191d3:	shl    BYTE PTR [ebx+0x65],0xb7
  4191d7:	fstp   QWORD PTR [ecx+0x2e]
  4191da:	add    DWORD PTR [eax],edx
  4191dc:	inc    esi
  4191dd:	outs   dx,DWORD PTR ds:[esi]
  4191de:	adc    al,0x15
  4191e0:	mov    edx,0x901c7986
  4191e5:	pop    ss
  4191e6:	clc    
  4191e7:	cmp    al,0xeb
  4191e9:	retf   0x370c
  4191ec:	dec    edx
  4191ed:	inc    ebp
  4191ee:	clc    
  4191ef:	aam    0x16
  4191f1:	and    DWORD PTR [esi-0x63bea4fc],ecx
  4191f7:	rcr    DWORD PTR [edx+0x664e29b6],cl
  4191fd:	cwde   
  4191fe:	add    eax,0xc5a3e465
  419203:	ins    BYTE PTR es:[edi],dx
  419204:	mov    ss,WORD PTR [edi]
  419206:	lar    esi,sp
  419209:	jle    0x4191ce
  41920b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41920c:	xor    DWORD PTR ds:0xcef7ff66,edx
  419212:	and    edi,DWORD PTR [eax+eax*8-0x5b]
  419216:	inc    esi
  419217:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419218:	in     al,0xa7
  41921a:	xchg   BYTE PTR [ebp+ebx*2+0x54],bl
  41921e:	fcmovnb st,st(3)
  419220:	push   ebp
  419221:	(bad)  
  419222:	std    
  419223:	push   es
  419224:	inc    esi
  419225:	ror    DWORD PTR [esi],0xa
  419228:	xor    ecx,ecx
  41922a:	or     eax,DWORD PTR ds:0xbe49afef
  419230:	xlat   BYTE PTR ds:[ebx]
  419231:	dec    esi
  419232:	rcr    DWORD PTR [esi-0x4e66989f],cl
  419238:	int    0xc1
  41923a:	stc    
  41923b:	mov    BYTE PTR [eax-0x10c15d6c],bl
  419241:	push   0xffffff97
  419243:	dec    ebx
  419244:	push   es
  419245:	or     al,0xcc
  419247:	call   0x5006:0x455b243d
  41924e:	adc    DWORD PTR [ebp-0x4b502e9],ebx
  419254:	jae    0x4192b5
  419256:	mov    ah,0xb1
  419258:	je     0x419296
  41925a:	push   ebp
  41925b:	lock mov dh,BYTE PTR [eax-0xb]
  41925f:	fild   WORD PTR [edx-0x460b0e7c]
  419265:	push   ds
  419266:	pusha  
  419267:	cmp    ah,BYTE PTR [esp+0x7c]
  41926b:	and    ebp,DWORD PTR [edx+0x31]
  41926e:	pop    edi
  41926f:	fcomp  st(2)
  419271:	stos   DWORD PTR es:[edi],eax
  419272:	pop    eax
  419273:	imul   edi,ebx,0xffffffbf
  419276:	dec    ecx
  419277:	jmp    0xe62d6938
  41927c:	inc    ebx
  41927d:	pop    esi
  41927e:	lods   eax,DWORD PTR ds:[esi]
  41927f:	shr    ebp,0x64
  419282:	ret    
  419283:	ds cli 
  419285:	jno    0x4192cd
  419287:	add    BYTE PTR [esp+eax*4-0x65d62f3c],cl
  41928e:	and    BYTE PTR [edi],ah
  419290:	add    edx,DWORD PTR [edi]
  419292:	fs mov ebp,0x4327ed50
  419298:	push   ss
  419299:	mov    al,0x60
  41929b:	push   ebp
  41929c:	loopne 0x419260
  41929e:	ins    DWORD PTR es:[edi],dx
  41929f:	cmp    esp,DWORD PTR [ecx]
  4192a1:	add    al,0xd7
  4192a3:	cmp    eax,0x9734802f
  4192a8:	jp     0x419323
  4192aa:	mov    eax,0x5638b99f
  4192af:	outs   dx,DWORD PTR ds:[esi]
  4192b0:	iret   
  4192b1:	out    0x4b,al
  4192b3:	mov    esi,0x791aae0b
  4192b8:	mov    edx,0x6d6caa0
  4192bd:	hlt    
  4192be:	out    dx,eax
  4192bf:	lahf   
  4192c0:	iret   
  4192c1:	repnz jecxz 0x4192cc
  4192c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4192c5:	push   esi
  4192c6:	loope  0x419337
  4192c8:	cmp    eax,0xaa5d2912
  4192cd:	cmp    DWORD PTR [esi+0x4da095e2],esi
  4192d3:	and    ah,dl
  4192d5:	(bad)  
  4192d6:	fldenv [esi+ebp*1+0x32]
  4192da:	pop    ss
  4192db:	out    dx,al
  4192dc:	nop
  4192dd:	xchg   edx,eax
  4192de:	mov    ch,0xa9
  4192e0:	push   es
  4192e1:	jo     0x419329
  4192e3:	push   ebx
  4192e4:	jmp    DWORD PTR [ebp+ebx*8+0x7b339be4]
  4192eb:	or     DWORD PTR [eax-0xc],eax
  4192ee:	push   es
  4192ef:	adc    ebx,DWORD PTR [ebx+edx*8]
  4192f2:	jmp    0x9e2fa6c1
  4192f7:	push   ecx
  4192f8:	jl     0x41935c
  4192fa:	dec    esp
  4192fb:	imul   ecx,DWORD PTR ds:0xf61e14c5,0xffffffb5
  419302:	mov    edi,0x6a951470
  419307:	push   ecx
  419308:	push   0xffffffde
  41930a:	add    cl,BYTE PTR [ebp-0x378bc527]
  419310:	rcr    BYTE PTR [ecx+0x3b],0xb9
  419314:	inc    esi
  419315:	enter  0x2933,0xd5
  419319:	adc    dh,dh
  41931b:	mov    ecx,0xb1446af3
  419320:	pusha  
  419321:	(bad)  
  419322:	or     eax,0x70a28bba
  419327:	loop   0x4192f2
  419329:	push   ecx
  41932a:	enter  0xf4a2,0x6
  41932e:	push   cs
  41932f:	out    0x6b,eax
  419331:	jae    0x419324
  419333:	sbb    eax,0xa212b730
  419338:	lock jle 0x419351
  41933b:	dec    esp
  41933c:	mov    al,ds:0x3f10a386
  419341:	fstp   DWORD PTR [edx+0x5c1fd3e6]
  419347:	add    eax,0x391add93
  41934c:	and    esi,ecx
  41934e:	ins    DWORD PTR es:[edi],dx
  41934f:	jae    0x41932e
  419351:	pop    ebp
  419352:	mov    bl,0xf4
  419354:	xor    bl,ch
  419356:	ret    
  419357:	mul    BYTE PTR [edx]
  419359:	xor    bh,BYTE PTR [esi+0x7c4d5a3c]
  41935f:	push   edi
  419360:	call   0xe7434c30
  419365:	or     BYTE PTR [edi+0x2b],ah
  419368:	sbb    al,BYTE PTR [ebp+ebp*8-0x6d]
  41936c:	(bad)  
  41936d:	xor    dl,BYTE PTR [eax+0x61]
  419370:	inc    ebp
  419371:	xor    ah,dl
  419373:	xor    DWORD PTR [edx+eax*4-0x34],ebx
  419377:	sub    BYTE PTR [ebx+0x635d0f0f],dh
  41937d:	xchg   esi,eax
  41937e:	mov    esi,DWORD PTR [ecx]
  419380:	mov    bl,0xde
  419382:	sbb    al,0x9d
  419384:	cmp    al,0x50
  419386:	add    edi,DWORD PTR [ebp+0x7bdc018b]
  41938c:	call   0x6e0ba625
  419391:	push   edx
  419392:	lahf   
  419393:	arpl   WORD PTR [edi-0x3c88d8f6],dx
  419399:	push   ds
  41939a:	mov    al,ds:0xc0f85e57
  41939f:	xchg   DWORD PTR [ecx+0x5a],eax
  4193a2:	dec    ecx
  4193a3:	push   ds
  4193a4:	mov    ?,WORD PTR [eax+0x4e]
  4193a7:	mov    bh,0xc5
  4193a9:	mov    ah,0xb2
  4193ab:	mov    ch,0xa6
  4193ad:	cmp    DWORD PTR [eax+ebp*1-0x285e1d2d],eax
  4193b4:	test   BYTE PTR [edi-0x44d6e4bb],dh
  4193ba:	sti    
  4193bb:	jno    0x419410
  4193bd:	cmp    al,0x10
  4193bf:	mov    al,0xc4
  4193c1:	imul   ebx,DWORD PTR [edx],0x4f
  4193c4:	stc    
  4193c5:	in     eax,0x91
  4193c7:	mov    dl,0xf1
  4193c9:	or     BYTE PTR [ecx+ecx*8-0x29c44823],bh
  4193d0:	call   0x654f02b7
  4193d5:	shr    BYTE PTR [ebx-0xafb8786],cl
  4193db:	scas   al,BYTE PTR es:[edi]
  4193dc:	sbb    BYTE PTR [eax],0x32
  4193df:	push   0x14517100
  4193e4:	mov    eax,0x69748249
  4193e9:	mov    ebp,0x4c25d903
  4193ee:	cmp    BYTE PTR [ecx+esi*1],ah
  4193f1:	add    ch,BYTE PTR [edi]
  4193f3:	gs dec ebx
  4193f5:	mov    eax,DWORD PTR [esi+0x3]
  4193f8:	mov    al,0xff
  4193fa:	pop    esi
  4193fb:	clc    
  4193fc:	hlt    
  4193fd:	hlt    
  4193fe:	pushf  
  4193ff:	add    ebp,ebx
  419401:	pop    fs
  419403:	jg     0x41941c
  419405:	xlat   BYTE PTR ds:[ebx]
  419406:	sbb    DWORD PTR [esi-0x2335fe28],ebx
  41940c:	xor    esi,edx
  41940e:	popf   
  41940f:	pop    ecx
  419410:	push   0xfffffff1
  419412:	pop    esi
  419413:	test   DWORD PTR [edx-0x335b438e],eax
  419419:	repz mov ebp,0x1858666c
  41941f:	dec    ebx
  419420:	lds    esi,FWORD PTR [edx+ebp*8-0x46]
  419424:	add    DWORD PTR [esp+ecx*2-0x9],ebx
  419428:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419429:	cmp    eax,0x7fcd1817
  41942e:	cmp    eax,0x93b057d
  419433:	cli    
  419434:	(bad)
  419437:	fstp   QWORD PTR [edi+0x212d3d74]
  41943d:	push   ebx
  41943e:	imul   ecx,DWORD PTR ds:0xb42173ee,0xffffffa1
  419445:	std    
  419446:	or     DWORD PTR [edi+edx*4],edi
  419449:	fs push ebp
  41944b:	xchg   ebp,eax
  41944c:	ror    ecx,0xff
  41944f:	adc    DWORD PTR [esp+ecx*8],esp
  419452:	xor    BYTE PTR [ecx+0x5f],0xd6
  419456:	int3   
  419457:	lods   eax,DWORD PTR ds:[esi]
  419458:	mov    ch,0x81
  41945a:	lock fs sub al,0xae
  41945e:	adc    cl,BYTE PTR [eax+0x1bcbaa7e]
  419464:	or     eax,0x6f0e7427
  419469:	lahf   
  41946a:	iret   
  41946b:	clc    
  41946c:	loopne 0x41946d
  41946e:	gs mov esi,0x9b9f8295
  419474:	dec    esp
  419475:	xchg   ebx,eax
  419476:	mov    edi,0xe1a7f8e3
  41947b:	mov    edx,0x73d311a1
  419480:	sub    al,BYTE PTR [edi+ebp*8]
  419483:	adc    ebp,0xd5a94d53
  419489:	cli    
  41948a:	push   ebx
  41948b:	xchg   ecx,eax
  41948c:	xor    bl,dh
  41948e:	shl    DWORD PTR [ecx],0x8c
  419491:	(bad)  
  419492:	rol    dh,0x4a
  419495:	dec    ecx
  419496:	xor    DWORD PTR [edi-0x291abd9],eax
  41949c:	in     eax,0xc
  41949e:	pop    ss
  41949f:	add    BYTE PTR [eax+0x4],ch
  4194a2:	test   BYTE PTR [esi-0x155a5764],dl
  4194a8:	aad    0x3f
  4194aa:	clc    
  4194ab:	push   eax
  4194ac:	dec    esi
  4194ad:	ja     0x41951a
  4194af:	in     al,0x14
  4194b1:	retf   0xd14e
  4194b4:	or     eax,0x95f7c156
  4194b9:	dec    esi
  4194ba:	push   0x719b03d0
  4194bf:	and    ebp,DWORD PTR [eax+0x73]
  4194c2:	stos   DWORD PTR es:[edi],eax
  4194c3:	jmp    0xfbf4:0xb0b1b403
  4194ca:	xor    cl,bl
  4194cc:	fbstp  TBYTE PTR [ecx]
  4194ce:	push   ecx
  4194cf:	test   al,0x11
  4194d1:	stos   BYTE PTR es:[edi],al
  4194d2:	lock jmp 0x75837760
  4194d8:	push   0x2e7ed16d
  4194dd:	jae    0x4194e3
  4194df:	fdivr  QWORD PTR [ecx]
  4194e1:	dec    ebp
  4194e2:	mov    edx,0x6c5d5b64
  4194e7:	or     dl,dl
  4194e9:	or     BYTE PTR [ecx-0x12f06e9a],0x3e
  4194f0:	lods   eax,DWORD PTR ds:[esi]
  4194f1:	push   edi
  4194f2:	(bad)  
  4194f3:	cld    
  4194f4:	or     BYTE PTR [eax],0x8d
  4194f7:	inc    ecx
  4194f8:	mov    ah,ch
  4194fa:	inc    ebp
  4194fb:	fisttp WORD PTR [ecx-0x74]
  4194fe:	xchg   DWORD PTR [esi*2+0x38e6bfcb],esi
  419505:	sub    eax,0x2e714aa0
  41950a:	jno    0x4194ff
  41950c:	ret    
  41950d:	mov    esp,fs
  41950f:	push   ebx
  419510:	(bad)  
  419511:	les    edx,FWORD PTR [edi-0x13]
  419514:	mov    esi,0xd184be71
  419519:	retf   
  41951a:	addr16 sbb al,0x38
  41951d:	pop    eax
  41951e:	ds test eax,0x6db7182b
  419524:	xor    BYTE PTR [edx+edi*1-0x19],bh
  419528:	popa   
  419529:	dec    ecx
  41952a:	mov    bl,0x4c
  41952c:	adc    BYTE PTR [esi],al
  41952e:	jge    0x41952b
  419530:	jae    0x4195a2
  419532:	mov    WORD PTR [edx+ebp*4+0x42088293],cs
  419539:	js     0x4195ab
  41953b:	dec    ebp
  41953c:	pushf  
  41953d:	xchg   BYTE PTR [ebx],bl
  41953f:	add    eax,0x8050576e
  419544:	pop    ecx
  419545:	cmp    eax,0xb6940f1b
  41954a:	stos   DWORD PTR es:[edi],eax
  41954b:	call   0xcaa74287
  419550:	js     0x419512
  419552:	lock adc bl,BYTE PTR [ebx-0x47b50dcb]
  419559:	in     al,dx
  41955a:	inc    ebx
  41955b:	ins    BYTE PTR es:[edi],dx
  41955c:	mov    es,WORD PTR [edx+0x68d78cd]
  419562:	hlt    
  419563:	xor    ah,BYTE PTR [ebp+0x31]
  419566:	inc    ecx
  419567:	dec    si
  419569:	bound  esp,QWORD PTR [ebx-0x39]
  41956c:	add    al,0x83
  41956e:	pushf  
  41956f:	mov    eax,0x6119afa9
  419574:	and    al,0xd9
  419576:	xor    BYTE PTR [eax],dl
  419578:	(bad)  
  419579:	mov    ebp,0xf93e731
  41957e:	and    al,0x8d
  419580:	push   es
  419581:	cmp    dh,BYTE PTR [ebp-0x9]
  419584:	push   edi
  419585:	cmc    
  419586:	idiv   DWORD PTR [eax-0x5649b1b6]
  41958c:	iret   
  41958d:	sub    DWORD PTR [eax+0x76],esp
  419590:	lahf   
  419591:	(bad)  
  419593:	lods   al,BYTE PTR ds:[esi]
  419594:	push   ss
  419595:	xchg   edi,eax
  419596:	inc    edi
  419597:	mov    ebx,0x72ca3b3b
  41959c:	(bad)  [edi-0x2b28ea8a]
  4195a2:	sbb    DWORD PTR [eax+ebx*2],ebx
  4195a5:	and    dl,BYTE PTR [eax]
  4195a7:	js     0x4195c3
  4195a9:	sub    ch,BYTE PTR [ebx]
  4195ab:	or     al,0xc2
  4195ad:	pop    edi
  4195ae:	push   ecx
  4195af:	xor    dl,al
  4195b1:	nop
  4195b2:	xchg   esi,eax
  4195b3:	inc    ebp
  4195b4:	add    DWORD PTR [edi],0xffffffe8
  4195b7:	aaa    
  4195b8:	outs   dx,DWORD PTR ds:[esi]
  4195b9:	or     esi,DWORD PTR [ecx-0x1b]
  4195bc:	pop    ecx
  4195bd:	or     bh,0x21
  4195c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195c1:	mov    WORD PTR [ebp+0x40],es
  4195c4:	fild   WORD PTR ds:[esi+esi*1]
  4195c8:	push   edx
  4195c9:	push   ebx
  4195ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195cb:	sub    ch,BYTE PTR [edi+0x65258f8a]
  4195d1:	pusha  
  4195d2:	xlat   BYTE PTR ds:[ebx]
  4195d3:	mov    ds:0x85dc8c76,al
  4195d8:	lods   eax,DWORD PTR ds:[esi]
  4195d9:	mul    DWORD PTR [edi+0xf]
  4195dc:	lods   eax,DWORD PTR ds:[esi]
  4195dd:	mov    eax,ds:0xb226c7fb
  4195e2:	mov    bl,dh
  4195e4:	xchg   ebx,eax
  4195e5:	adc    eax,0xabcf4681
  4195ea:	sub    al,0x3f
  4195ec:	dec    esi
  4195ed:	sahf   
  4195ee:	and    al,0x19
  4195f0:	inc    esi
  4195f1:	or     eax,0xd90dcf4a
  4195f6:	stc    
  4195f7:	dec    esp
  4195f8:	cmp    esi,DWORD PTR [esi+0x68]
  4195fb:	xchg   esp,eax
  4195fc:	push   ecx
  4195fd:	jno    0x4195af
  4195ff:	mov    BYTE PTR [esi+0x39],al
  419602:	inc    ebx
  419603:	lods   al,BYTE PTR ds:[esi]
  419604:	mov    ds:0xc96c727c,eax
  419609:	xchg   edx,eax
  41960a:	test   al,0x81
  41960c:	popf   
  41960d:	jns    0x4195e7
  41960f:	mov    edx,0x5c2b25d7
  419614:	cmp    edi,DWORD PTR ds:0xbc86116e
  41961a:	pop    DWORD PTR [edi+0x67b0362d]
  419620:	cmp    dh,dl
  419622:	adc    dl,0xed
  419625:	rcr    BYTE PTR [edx+ecx*1-0x3f],1
  419629:	xchg   ebp,eax
  41962a:	mov    cl,0x98
  41962c:	adc    dh,BYTE PTR ds:0xe3d2b062
  419632:	push   edi
  419633:	retf   0xb559
  419636:	mov    bl,BYTE PTR [ebx]
  419638:	inc    edx
  419639:	adc    ch,0x9c
  41963c:	imul   ebp,DWORD PTR [ebx-0x1b],0xffffffa5
  419640:	aas    
  419641:	jl     0x419652
  419643:	ins    DWORD PTR es:[edi],dx
  419644:	loope  0x419642
  419646:	sub    DWORD PTR [esi-0x20],ebx
  419649:	imul   edx,DWORD PTR [ebp+0x417c0da9],0xffffffcf
  419650:	sar    BYTE PTR [edx],1
  419652:	pop    es
  419653:	mov    ebx,0xe4ceba8b
  419658:	ds aam 0x5b
  41965b:	sub    BYTE PTR [ebx],bh
  41965d:	push   0x57
  41965f:	jge    0x419649
  419661:	xor    eax,DWORD PTR [ecx+0x7df2c3c3]
  419667:	mov    dl,0xce
  419669:	dec    ebp
  41966a:	fist   DWORD PTR [esi+0x73]
  41966d:	adc    DWORD PTR [edx],eax
  41966f:	inc    esp
  419670:	ret    
  419671:	mov    ds:0x4b29185b,al
  419676:	lahf   
  419677:	adc    eax,0xcad4931f
  41967c:	enter  0xd4ad,0x80
  419680:	(bad)  
  419681:	adc    DWORD PTR cs:[ecx+eax*8-0x65],ecx
  419686:	and    al,0x95
  419688:	es xor eax,0xa938aff4
  41968e:	mov    ds:0x4ddf267a,al
  419693:	cmc    
  419694:	add    BYTE PTR [edi+0x33],dh
  419697:	add    dl,al
  419699:	jno    0x4196d3
  41969b:	and    dh,BYTE PTR [ebp-0x125387c3]
  4196a1:	adc    bl,cl
  4196a3:	push   edx
  4196a4:	or     al,0x1b
  4196a6:	jmp    0x4196ea
  4196a8:	jne    0x419681
  4196aa:	loop   0x4196a2
  4196ac:	sub    DWORD PTR [ecx-0xdd00e83],ebx
  4196b2:	mov    edx,0x89dd63b7
  4196b7:	pop    ebx
  4196b8:	jb     0x4196be
  4196ba:	mov    WORD PTR [ebx+0x13a531c8],cs
  4196c0:	repz push cs
  4196c2:	pop    eax
  4196c3:	mov    ebx,DWORD PTR [ebx+ebx*8-0x325bebf5]
  4196ca:	out    0xc3,eax
  4196cc:	(bad)
  4196cf:	push   cs
  4196d0:	(bad)  
  4196d1:	or     esp,ebp
  4196d3:	xchg   ax,ax
  4196d5:	jle    0x4196d2
  4196d7:	shr    BYTE PTR [esi],1
  4196d9:	mov    ?,WORD PTR [esi-0x1e]
  4196dc:	adc    DWORD PTR [edi+eiz*8-0x66fdcacb],ebp
  4196e3:	mov    edx,0x72393915
  4196e8:	inc    esi
  4196e9:	test   al,0xa9
  4196eb:	pop    ebx
  4196ec:	scas   al,BYTE PTR es:[edi]
  4196ed:	mov    ch,0x7
  4196ef:	add    al,0x37
  4196f1:	cli    
  4196f2:	push   0xaf0772ab
  4196f7:	sbb    esp,DWORD PTR [ebx]
  4196f9:	fld    TBYTE PTR [ebx]
  4196fb:	shl    BYTE PTR [edx-0x20],1
  4196fe:	jae    0x4196dc
  419700:	rcr    al,1
  419702:	pop    esp
  419703:	aas    
  419704:	fs int 0xf3
  419707:	shr    DWORD PTR [ecx+0x62bf4bda],0x6a
  41970e:	cmc    
  41970f:	push   ebx
  419710:	(bad)  
  419711:	xor    dl,dl
  419713:	pop    esi
  419714:	mov    ds:0xcf520865,eax
  419719:	jnp    0x41970c
  41971b:	mov    al,ds:0x185d1153
  419720:	jb     0x419728
  419722:	stos   DWORD PTR es:[edi],eax
  419723:	jb     0x419760
  419725:	call   0x690d:0xddfdee49
  41972c:	outs   dx,BYTE PTR ds:[esi]
  41972d:	outs   dx,BYTE PTR ds:[esi]
  41972e:	scas   al,BYTE PTR es:[edi]
  41972f:	push   es
  419730:	mov    eax,0x788f4e83
  419735:	arpl   bp,sp
  419737:	enter  0xcd87,0xb6
  41973b:	cmp    eax,0x33822978
  419740:	mov    ah,0x48
  419742:	and    ah,BYTE PTR ds:0xcbf84a10
  419748:	pop    ds
  419749:	jl     0x4197a1
  41974b:	lods   eax,DWORD PTR ds:[esi]
  41974c:	cwde   
  41974d:	xchg   ebp,eax
  41974e:	xchg   ebp,eax
  41974f:	and    BYTE PTR [edi-0x70],bh
  419752:	aaa    
  419753:	lock mov edi,0xf51de9ca
  419759:	aam    0x3
  41975b:	mov    eax,ds:0x4665ac12
  419760:	(bad)  
  419761:	or     ah,BYTE PTR [esi-0x34]
  419764:	mov    ah,0xa8
  419766:	push   ecx
  419767:	and    bh,BYTE PTR [esi-0x2f47255b]
  41976d:	enter  0x5618,0x5a
  419771:	inc    edi
  419772:	dec    esp
  419773:	aam    0x37
  419775:	xchg   ebx,eax
  419776:	adc    BYTE PTR [eax],ch
  419778:	sbb    DWORD PTR ds:0xafcc2554,edi
  41977e:	push   cs
  41977f:	xchg   esi,eax
  419780:	dec    ecx
  419781:	add    ecx,DWORD PTR [ebp+0x60]
  419784:	scas   eax,DWORD PTR es:[edi]
  419785:	ja     0x419742
  419787:	push   0x63213aff
  41978c:	popf   
  41978d:	sub    bh,BYTE PTR [edi-0x21]
  419790:	idiv   BYTE PTR [edx+0x789418b3]
  419796:	sub    ebp,esi
  419798:	loope  0x4197bf
  41979a:	pop    ebx
  41979b:	mov    dl,0x79
  41979d:	jle    0x4197b5
  41979f:	mov    ah,0xba
  4197a1:	cdq    
  4197a2:	and    eax,0x13bfdfe7
  4197a7:	pop    ss
  4197a8:	fnstenv [edx+eiz*4-0x47b296dd]
  4197af:	mov    al,0xc7
  4197b1:	dec    esp
  4197b2:	adc    DWORD PTR [ecx+0x32],ebp
  4197b5:	cdq    
  4197b6:	retf   0x8783
  4197b9:	pop    ds
  4197ba:	pshufw mm4,QWORD PTR [eax+0x747e8d31],0x4a
  4197c2:	scas   eax,DWORD PTR es:[edi]
  4197c3:	stos   DWORD PTR es:[edi],eax
  4197c4:	call   0xfba2:0xca8a5a7e
  4197cb:	dec    esi
  4197cc:	mov    bh,0x9f
  4197ce:	mov    ds:0x9be039e2,al
  4197d3:	es rcl edx,cl
  4197d6:	int3   
  4197d7:	int    0x48
  4197d9:	into   
  4197da:	outs   dx,BYTE PTR ds:[esi]
  4197db:	rcr    BYTE PTR [ebx-0xc],1
  4197de:	xor    dl,dh
  4197e0:	jmp    0xacb3:0x33ff9059
  4197e7:	sbb    ch,BYTE PTR [ebx-0x28]
  4197ea:	push   edx
  4197eb:	cmp    eax,0x7daa0312
  4197f0:	cwde   
  4197f1:	lds    esi,FWORD PTR [edi+eiz*1]
  4197f4:	xor    eax,0xd6099e9b
  4197f9:	xchg   edx,eax
  4197fa:	jmp    0x41986b
  4197fc:	and    BYTE PTR [ebx],ch
  4197fe:	hlt    
  4197ff:	dec    edi
  419800:	call   0x2acba5a1
  419805:	test   eax,0xf43f334
  41980a:	pop    es
  41980b:	js     0x419841
  41980d:	cmp    cl,0xb1
  419810:	sbb    eax,0xf75418fe
  419815:	add    eax,0xd80a9f98
  41981a:	add    eax,DWORD PTR [ecx+0x330815db]
  419820:	inc    eax
  419821:	mov    eax,ds:0xbe0ec4bc
  419826:	cmp    BYTE PTR [ebp+0xf08a73e],ah
  41982c:	les    esi,FWORD PTR [edx]
  41982e:	mov    edx,DWORD PTR [ebx]
  419830:	and    BYTE PTR [edi+0x2],bl
  419833:	ret    0x7b1b
  419836:	push   esi
  419837:	mov    dh,0x82
  419839:	add    ebx,ebx
  41983b:	outs   dx,DWORD PTR ds:[esi]
  41983c:	ficomp WORD PTR [ecx]
  41983e:	cmp    al,0xdf
  419840:	aas    
  419841:	xchg   ecx,eax
  419842:	lock in al,dx
  419844:	shl    DWORD PTR [ecx],0x6b
  419847:	pop    ds
  419848:	xor    al,0xc4
  41984a:	jo     0x4198b4
  41984c:	dec    edi
  41984d:	rol    BYTE PTR [esi],0x20
  419850:	mov    bh,0xd9
  419852:	repz arpl WORD PTR cs:[ebp+0x5a4ff7],ax
  41985a:	stos   DWORD PTR es:[edi],eax
  41985b:	lea    edx,[edi-0x12d545fc]
  419861:	push   ebp
  419862:	imul   eax,DWORD PTR [edi-0x3d0bb968],0x5f
  419869:	xor    BYTE PTR [eax-0x6cfc478e],0x9a
  419870:	retf   0x900b
  419873:	mov    edx,0xca219cc9
  419878:	mov    dl,0xb
  41987a:	mov    ?,WORD PTR [edi-0x56]
  41987d:	mov    dh,0x4c
  41987f:	(bad)  
  419880:	cli    
  419881:	cwde   
  419882:	and    al,0xca
  419884:	lds    edx,FWORD PTR ds:0xa43f5fff
  41988a:	dec    ebp
  41988b:	xchg   esi,eax
  41988c:	xchg   esp,eax
  41988d:	ins    DWORD PTR es:[edi],dx
  41988e:	test   DWORD PTR [ebx],esi
  419890:	retf   0x748f
  419893:	mov    ss,edx
  419895:	jmp    0xfdf18281
  41989a:	retf   0xbc7f
  41989d:	xchg   esp,eax
  41989e:	outs   dx,DWORD PTR ds:[esi]
  41989f:	mov    ebp,0x19398109
  4198a4:	mov    ds:0x1c9b099a,eax
  4198a9:	xlat   BYTE PTR ds:[ebx]
  4198aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198ab:	add    cl,BYTE PTR [ecx+0xaaa2041]
  4198b1:	test   BYTE PTR [edx],0xab
  4198b4:	dec    edi
  4198b5:	je     0x4198f2
  4198b7:	mov    WORD PTR [ecx+edx*1+0x38],?
  4198bb:	scas   al,BYTE PTR es:[edi]
  4198bc:	sbb    DWORD PTR [edi+0x23],ebp
  4198bf:	icebp  
  4198c0:	inc    ebp
  4198c1:	mov    al,0xc
  4198c3:	jg     0x4198c5
  4198c5:	pop    eax
  4198c6:	and    esi,DWORD PTR [edx-0x35]
  4198c9:	xlat   BYTE PTR ds:[ebx]
  4198ca:	jge    0x4198ca
  4198cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4198cd:	pop    edi
  4198ce:	jmp    0x2593:0x9c06370f
  4198d5:	jne    0x4198ec
  4198d7:	std    
  4198d8:	inc    ebx
  4198d9:	pop    edi
  4198da:	push   0x50
  4198dc:	jb     0x419923
  4198de:	pop    ds
  4198df:	cwde   
  4198e0:	or     al,0x39
  4198e2:	fs addr16 xchg edi,eax
  4198e5:	sub    cl,ch
  4198e7:	ins    DWORD PTR es:[edi],dx
  4198e8:	jb     0x4198c0
  4198ea:	scas   eax,DWORD PTR es:[edi]
  4198eb:	sub    al,0xf6
  4198ed:	xor    BYTE PTR [esi],al
  4198ef:	dec    edi
  4198f0:	scas   al,BYTE PTR es:[edi]
  4198f1:	ret    0x4432
  4198f4:	call   0xad43:0x409d9bf8
  4198fb:	rol    DWORD PTR [esi],0xe7
  4198fe:	in     eax,dx
  4198ff:	mov    ds:0x749e9d78,eax
  419904:	ret    0x2dd1
  419907:	mov    ebp,0x30a651eb
  41990c:	popf   
  41990d:	pop    ebx
  41990e:	pop    eax
  41990f:	pusha  
  419910:	jbe    0x41990e
  419912:	pushf  
  419913:	cs pop es
  419915:	loope  0x419943
  419917:	adc    DWORD PTR [esi],esp
  419919:	pop    esi
  41991a:	mov    fs,WORD PTR [edx]
  41991c:	mov    cl,0x79
  41991e:	dec    eax
  41991f:	push   esp
  419920:	xor    cl,BYTE PTR [edi-0xf]
  419923:	push   edx
  419924:	aad    0xd7
  419926:	jno    0x4198df
  419928:	dec    eax
  419929:	test   BYTE PTR [ecx],dh
  41992b:	inc    esi
  41992c:	(bad)  
  41992e:	cwde   
  41992f:	dec    edx
  419930:	pop    edi
  419931:	add    al,0x38
  419933:	arpl   WORD PTR [ecx+0x572195e2],dx
  419939:	inc    edx
  41993a:	bound  eax,QWORD PTR [edi+eiz*4+0x70]
  41993e:	or     DWORD PTR [esi+0x64],0xa30f4763
  419945:	arpl   WORD PTR [ebp+eax*2-0x7],sp
  419949:	pusha  
  41994a:	iret   
  41994b:	ds test eax,0xa68f848d
  419951:	push   ecx
  419952:	call   0xc65f:0xa8eefd62
  419959:	pop    edi
  41995a:	inc    ebp
  41995b:	dec    ebx
  41995c:	mov    WORD PTR [ebx-0x69],?
  41995f:	test   al,0xbe
  419961:	push   ecx
  419962:	jmp    0xc94f6b0f
  419967:	lahf   
  419968:	xchg   ebx,eax
  419969:	mov    ah,0xfe
  41996b:	adc    esi,DWORD PTR [edi]
  41996d:	xor    esi,ebx
  41996f:	cli    
  419970:	jl     0x419969
  419972:	cwde   
  419973:	iret   
  419974:	ficomp WORD PTR es:[eax+0x56d33f45]
  41997b:	fist   WORD PTR ds:0xdce9f2e6
  419981:	pop    edx
  419982:	out    dx,al
  419983:	push   ebx
  419984:	pop    esi
  419985:	push   0xffffff81
  419987:	fmul   DWORD PTR [esi]
  419989:	arpl   WORD PTR [edi-0x50],si
  41998c:	mov    ds:0x793fa640,eax
  419991:	push   ebp
  419992:	and    dl,cl
  419994:	ret    0x1da7
  419997:	neg    ebx
  419999:	stc    
  41999a:	shl    BYTE PTR [esi+ebp*1+0x756b4654],0x69
  4199a2:	jge    0x419a1e
  4199a4:	adc    eax,0x8a45cc80
  4199a9:	leave  
  4199aa:	cmp    BYTE PTR [edi+0x40591b08],0xb0
  4199b1:	scas   al,BYTE PTR es:[edi]
  4199b2:	jbe    0x4199d3
  4199b4:	dec    edx
  4199b5:	add    cl,bh
  4199b7:	fdivr  QWORD PTR [esp+edx*2+0x5]
  4199bb:	push   ds
  4199bc:	push   esp
  4199bd:	stos   BYTE PTR es:[edi],al
  4199be:	inc    eax
  4199bf:	retf   0x3c7
  4199c2:	push   0xf389ae23
  4199c7:	std    
  4199c8:	lods   al,BYTE PTR ds:[esi]
  4199c9:	icebp  
  4199ca:	dec    eax
  4199cb:	sub    eax,0xa65f73fd
  4199d0:	and    dh,BYTE PTR [ecx+eiz*2+0x3]
  4199d4:	dec    esi
  4199d5:	inc    ecx
  4199d6:	mov    ds:0xf814ddc2,al
  4199db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199dc:	repnz pop ebx
  4199de:	in     al,0xaf
  4199e0:	inc    ebx
  4199e1:	aas    
  4199e2:	sahf   
  4199e3:	or     BYTE PTR ds:0xebbc01e9,dl
  4199e9:	mov    ch,0xee
  4199eb:	mov    esi,0xf5210a72
  4199f0:	pop    ebx
  4199f1:	jnp    0x419a0f
  4199f3:	and    bh,BYTE PTR [ecx+0x55702d8c]
  4199f9:	push   0x73301e6d
  4199fe:	int3   
  4199ff:	mov    ecx,0xac0e19d6
  419a04:	inc    edx
  419a05:	inc    ebp
  419a06:	add    BYTE PTR [ebx+0x21fe9740],cl
  419a0c:	xchg   DWORD PTR [esi+0x6bba6dcc],eax
  419a12:	cld    
  419a13:	test   eax,0x6d0008ec
  419a18:	(bad)  
  419a1a:	add    dh,BYTE PTR [ebx-0x65d5a1aa]
  419a20:	mov    edi,0xeccc697
  419a25:	(bad)  
  419a26:	loope  0x419a68
  419a28:	(bad)  
  419a29:	jmp    0x7327fbb0
  419a2e:	sub    BYTE PTR [ebp+0x1c],dh
  419a31:	and    al,0x16
  419a33:	aas    
  419a34:	xchg   BYTE PTR [edi],ch
  419a36:	xchg   ecx,eax
  419a37:	mov    DWORD PTR [eax-0x4f104aee],eax
  419a3d:	xor    eax,ebx
  419a3f:	lods   eax,DWORD PTR ds:[esi]
  419a40:	cmp    DWORD PTR [eax],esp
  419a42:	xor    eax,0xe47cd2d1
  419a47:	pop    eax
  419a48:	mov    ah,0x58
  419a4a:	or     BYTE PTR [ebx-0x4f],dl
  419a4d:	ins    BYTE PTR es:[edi],dx
  419a4e:	fimul  WORD PTR [ebp+0x7c]
  419a51:	pop    eax
  419a52:	out    dx,al
  419a53:	retf   0x617b
  419a56:	mov    dl,BYTE PTR gs:[esi-0x436a5032]
  419a5d:	xchg   ebx,eax
  419a5e:	out    0x46,eax
  419a60:	xchg   edx,eax
  419a61:	mov    al,ds:0xe81d8634
  419a66:	mov    WORD PTR [ebp-0x7d],es
  419a69:	xor    eax,0x9434b0a
  419a6e:	test   al,0x7c
  419a70:	push   0xa5beecd5
  419a75:	cld    
  419a76:	mov    dh,0x46
  419a78:	or     al,0x76
  419a7a:	shl    DWORD PTR ds:0xa8bd9c91,1
  419a80:	stc    
  419a81:	xor    DWORD PTR [edi],eax
  419a83:	jge    0x419a3b
  419a85:	pop    edi
  419a86:	mov    bl,dl
  419a88:	into   
  419a89:	lahf   
  419a8a:	mov    ecx,0x271ffbd5
  419a8f:	push   eax
  419a90:	lods   al,BYTE PTR ds:[esi]
  419a91:	(bad)  
  419a93:	jl     0x419b0c
  419a95:	xchg   esi,eax
  419a96:	call   0x2fda:0x691b20ee
  419a9d:	mov    ah,0xd1
  419a9f:	popa   
  419aa0:	inc    edx
  419aa1:	inc    ebx
  419aa2:	rcr    DWORD PTR [ecx],1
  419aa4:	pushf  
  419aa5:	(bad)  
  419aa6:	mov    al,ds:0x82ca3afe
  419aab:	fsub   st,st(4)
  419aad:	or     BYTE PTR [edx+0x48350ea6],dl
  419ab3:	popa   
  419ab4:	repz sbb DWORD PTR [ebx],edx
  419ab7:	out    dx,eax
  419ab8:	test   eax,0x359abe80
  419abd:	stc    
  419abe:	lea    ebx,[ebx+0x2e]
  419ac1:	sbb    DWORD PTR [ecx+0x7f],0x46
  419ac5:	push   ebp
  419ac6:	out    dx,al
  419ac7:	(bad)  
  419ac9:	push   esp
  419aca:	and    esp,DWORD PTR [ebx-0x791e5781]
  419ad0:	nop
  419ad1:	or     esi,DWORD PTR [edx+0xc973e7d]
  419ad7:	mov    esp,0xc7faa139
  419adc:	jg     0x419b4f
  419ade:	or     esi,DWORD PTR [edx+0x1e]
  419ae1:	(bad)  
  419ae2:	cwde   
  419ae3:	test   DWORD PTR [esi-0x6b],0xa5dbbc63
  419aea:	pop    eax
  419aeb:	jae    0x419b5a
  419aed:	pop    esp
  419aee:	xchg   ebx,eax
  419aef:	je     0x419b32
  419af1:	xor    cl,0x12
  419af4:	mov    DWORD PTR [esp+eiz*4+0xa],edx
  419af8:	mov    cl,0x86
  419afa:	arpl   WORD PTR [ecx+esi*2+0x4e7e369c],bx
  419b01:	mov    eax,ds:0x33554ec8
  419b06:	pop    esp
  419b07:	sub    DWORD PTR [edx-0x27],0xadc9d138
  419b0e:	push   eax
  419b0f:	and    al,0x4f
  419b11:	mov    al,ds:0x2f6751b9
  419b16:	repnz or BYTE PTR [esi-0x1c888db0],0xcb
  419b1e:	or     al,0xb
  419b20:	xor    eax,0xcc754976
  419b25:	pushf  
  419b26:	jl     0x419ac3
  419b28:	cmp    BYTE PTR [eax],ch
  419b2a:	cmp    eax,0x69e84fac
  419b2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b30:	jge    0x419acf
  419b32:	inc    eax
  419b33:	stc    
  419b34:	adc    dl,bh
  419b36:	cmp    al,BYTE PTR [ebx-0x2e]
  419b39:	pop    ss
  419b3a:	sti    
  419b3b:	mov    edx,DWORD PTR [ebx]
  419b3d:	or     eax,0x8248a878
  419b42:	inc    ebp
  419b43:	mov    al,0x53
  419b45:	pop    edi
  419b46:	pop    ds
  419b47:	sub    DWORD PTR [ebx],esp
  419b49:	loope  0x419ae1
  419b4b:	fnsave [ebp+eax*8+0x5f96f9aa]
  419b52:	xchg   ebx,eax
  419b53:	nop
  419b54:	ins    DWORD PTR es:[edi],dx
  419b55:	and    al,0x64
  419b57:	rcr    BYTE PTR [edx+0x29],cl
  419b5a:	stc    
  419b5b:	cmp    ch,BYTE PTR [esi-0x37]
  419b5e:	and    eax,0x49394c17
  419b63:	dec    ebp
  419b64:	fst    QWORD PTR [edx]
  419b66:	ds inc ebp
  419b68:	sbb    al,0x48
  419b6a:	sbb    DWORD PTR [esi-0x5d],edx
  419b6d:	pop    edi
  419b6e:	xchg   ebp,eax
  419b6f:	sub    dl,BYTE PTR [ebp+0x78]
  419b72:	retf   
  419b73:	rcr    DWORD PTR [ebx-0x7636b25],cl
  419b79:	stc    
  419b7a:	das    
  419b7b:	jae    0x419bbc
  419b7d:	or     BYTE PTR [edi],al
  419b7f:	fmulp  st(1),st
  419b81:	mov    bl,0x3d
  419b83:	mov    eax,0x918bfaa9
  419b88:	cmp    eax,0x418aace
  419b8d:	cmp    DWORD PTR [ebx*2-0x6d410005],ebx
  419b94:	arpl   WORD PTR [esi],cx
  419b96:	mov    eax,ds:0x2cc98497
  419b9b:	xchg   esp,eax
  419b9c:	aad    0x67
  419b9e:	icebp  
  419b9f:	(bad)  
  419ba0:	adc    eax,0xa59b1d33
  419ba5:	inc    edx
  419ba6:	pop    edx
  419ba7:	mov    ebx,0x6ea3d0f3
  419bac:	call   0xb5305eeb
  419bb1:	mov    dl,0x4f
  419bb3:	xchg   esi,eax
  419bb4:	fwait
  419bb5:	inc    eax
  419bb6:	inc    ebp
  419bb7:	mov    esp,0x352fb383
  419bbc:	clc    
  419bbd:	lods   al,BYTE PTR ds:[esi]
  419bbe:	outs   dx,BYTE PTR ds:[esi]
  419bbf:	sub    ch,BYTE PTR [edi]
  419bc1:	or     esp,esp
  419bc3:	fisubr WORD PTR [edi]
  419bc5:	xchg   ebp,eax
  419bc6:	(bad)  
  419bc8:	shl    DWORD PTR [esi],1
  419bca:	push   ecx
  419bcb:	lahf   
  419bcc:	sar    BYTE PTR [esi-0x4fa11744],0xa5
  419bd3:	(bad)  
  419bd5:	imul   esp,edi,0x2ddc0764
  419bdb:	jl     0x419b85
  419bdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419bde:	imul   edi,DWORD PTR [eax+0x75857ae9],0xffffffaa
  419be5:	hlt    
  419be6:	pop    ebx
  419be7:	jmp    0x6b2bebe0
  419bec:	in     al,dx
  419bed:	scas   eax,DWORD PTR es:[edi]
  419bee:	mov    ch,0xa6
  419bf0:	push   ebp
  419bf1:	nop
  419bf2:	push   ss
  419bf3:	(bad)  
  419bf4:	leave  
  419bf5:	cmp    DWORD PTR [eax],ebx
  419bf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bf8:	fdiv   QWORD PTR [ebx]
  419bfa:	push   edi
  419bfb:	inc    ebp
  419bfc:	add    ebx,ebp
  419bfe:	lock fdiv st,st(4)
  419c01:	jecxz  0x419bf3
  419c03:	xlat   BYTE PTR ds:[ebx]
  419c04:	lods   al,BYTE PTR ds:[esi]
  419c05:	retf   
  419c06:	call   0xba7d:0xa96cda04
  419c0d:	sar    DWORD PTR [esi+0xc],0x52
  419c11:	(bad)  
  419c12:	jb     0x419c69
  419c14:	sub    ch,BYTE PTR [eax+edi*4-0x40]
  419c18:	jle    0x419bdf
  419c1a:	(bad)  
  419c1b:	stos   DWORD PTR es:[edi],eax
  419c1c:	jns    0x419c79
  419c1e:	retf   
  419c1f:	mov    edx,0x5e47d35e
  419c24:	lea    esp,[edi-0x4f]
  419c27:	jae    0x419c90
  419c29:	jno    0x419c66
  419c2b:	popa   
  419c2c:	push   ecx
  419c2d:	imul   BYTE PTR [eax-0x5c0f97e4]
  419c33:	fld    TBYTE PTR [ebp+0x79]
  419c36:	test   eax,0xa6ce670
  419c3b:	xor    DWORD PTR [edx+0x1130193b],ecx
  419c41:	adc    eax,0x4572c1e7
  419c46:	aad    0xa6
  419c48:	mov    cl,BYTE PTR [edi-0x62320844]
  419c4e:	test   al,0xef
  419c50:	daa    
  419c51:	out    dx,al
  419c52:	cli    
  419c53:	sub    al,BYTE PTR [edx]
  419c55:	aad    0x55
  419c57:	das    
  419c58:	adc    eax,0xf01278bf
  419c5d:	sbb    BYTE PTR [ecx+0x59ad0c1f],dl
  419c63:	icebp  
  419c64:	lds    ecx,FWORD PTR [edi-0x159493]
  419c6a:	dec    ecx
  419c6b:	xchg   DWORD PTR [ecx-0x40],esp
  419c6e:	stos   BYTE PTR es:[edi],al
  419c6f:	xor    BYTE PTR ds:0xde83042a,bh
  419c75:	loopne 0x419cf2
  419c77:	inc    eax
  419c78:	pcmpgtw mm2,QWORD PTR [edx+edx*2-0x32]
  419c7d:	sub    BYTE PTR [esi+0x12],ah
  419c80:	inc    eax
  419c81:	test   DWORD PTR [eax],esi
  419c83:	cdq    
  419c84:	fsub   DWORD PTR [edi+ecx*1+0x14]
  419c88:	mov    ebp,0xf3846961
  419c8d:	inc    ecx
  419c8e:	sahf   
  419c8f:	cmc    
  419c90:	inc    ecx
  419c91:	mov    edi,0x959ab042
  419c96:	pop    ds
  419c97:	sub    bl,BYTE PTR [eax-0x4]
  419c9a:	jno    0x419c5a
  419c9c:	mov    esp,0x409b063c
  419ca1:	ss pop edx
  419ca3:	popf   
  419ca4:	bound  esp,QWORD PTR [edx+0x3d]
  419ca7:	mov    WORD PTR [ebp-0xf],ds
  419caa:	ja     0x419c84
  419cac:	pop    eax
  419cad:	loopne 0x419cf9
  419caf:	jle    0x419cae
  419cb1:	mov    esi,0xffd4a0bf
  419cb6:	jmp    0x419cdc
  419cb8:	or     DWORD PTR [eax-0x2d390fa6],edx
  419cbe:	stos   DWORD PTR es:[edi],eax
  419cbf:	pusha  
  419cc0:	aam    0x56
  419cc2:	adc    al,0x3b
  419cc4:	ror    DWORD PTR [ecx+0x343a77bf],0x22
  419ccb:	xchg   ebx,eax
  419ccc:	push   ss
  419ccd:	xchg   esp,eax
  419cce:	shl    DWORD PTR [esi-0x6d6531b9],1
  419cd4:	nop
  419cd5:	jp     0x419ce4
  419cd7:	xchg   BYTE PTR [eax],dh
  419cd9:	inc    ebx
  419cda:	sbb    al,0x15
  419cdc:	loopne 0x419caa
  419cde:	jle    0x419cf8
  419ce0:	sbb    DWORD PTR [edx-0x1aa74424],0x7064b4cb
  419cea:	push   0x20
  419cec:	(bad)  
  419ced:	cli    
  419cee:	sub    BYTE PTR [ecx+0x73d39992],dl
  419cf4:	mov    esi,0xfff81992
  419cf9:	adc    BYTE PTR [esi],cl
  419cfb:	pushf  
  419cfc:	or     DWORD PTR [ebx-0x3c],eax
  419cff:	jb     0x419d30
  419d01:	iret   
  419d02:	xchg   ebp,eax
  419d03:	int    0x97
  419d05:	sub    bl,BYTE PTR [eax-0x3ff56de0]
  419d0b:	stc    
  419d0c:	cli    
  419d0d:	mov    esp,0x4ed7b38
  419d12:	jp     0x419d32
  419d14:	adc    ecx,ebp
  419d16:	add    eax,0x17c0fe14
  419d1b:	loope  0x419ca6
  419d1d:	xor    eax,0xb9aace99
  419d22:	hlt    
  419d23:	ss (bad) 
  419d25:	xchg   ebp,eax
  419d26:	in     eax,dx
  419d27:	iret   
  419d28:	mov    edx,0x315862d
  419d2d:	push   eax
  419d2e:	jno    0x419d9e
  419d30:	sub    al,0xe4
  419d32:	xor    ch,BYTE PTR [eax]
  419d34:	ret    0xd865
  419d37:	pop    esp
  419d38:	pushf  
  419d39:	ret    
  419d3a:	in     eax,dx
  419d3b:	out    dx,al
  419d3c:	dec    eax
  419d3d:	inc    esp
  419d3e:	pop    edx
  419d3f:	add    DWORD PTR [ecx],ebp
  419d41:	jae    0x419d03
  419d43:	stos   DWORD PTR es:[edi],eax
  419d44:	neg    BYTE PTR [esi+esi*8]
  419d47:	jg     0x419dba
  419d49:	push   ebx
  419d4a:	scas   al,BYTE PTR es:[edi]
  419d4b:	inc    edi
  419d4c:	xchg   BYTE PTR [edi+0x65],bl
  419d4f:	mov    esp,DWORD PTR [ebp-0x65]
  419d52:	mov    edx,0xaf1ba27e
  419d57:	mov    DWORD PTR [edi+0x43c7709b],ebx
  419d5d:	jg     0x419daf
  419d5f:	fld    QWORD PTR [ebx]
  419d61:	adc    al,0xca
  419d63:	and    esp,ebp
  419d65:	clc    
  419d66:	pushf  
  419d67:	jle    0x419dbe
  419d69:	mov    ds:0x1e5b875d,eax
  419d6e:	das    
  419d6f:	mov    eax,0x5514aa33
  419d74:	aam    0x90
  419d76:	pop    edx
  419d77:	fstp   QWORD PTR [eax-0x23178f63]
  419d7d:	sub    BYTE PTR [ebp-0x72],dl
  419d80:	jp     0x419da1
  419d82:	and    al,0x2
  419d84:	dec    esp
  419d85:	sub    cl,BYTE PTR [eax+0x1b]
  419d88:	xor    eax,0xd9663841
  419d8d:	shl    DWORD PTR [edx+edi*2],1
  419d90:	cmp    esp,edx
  419d92:	mov    al,ds:0x6e64f5e1
  419d97:	and    BYTE PTR [ebx+0xb82dc25],al
  419d9d:	bound  edi,QWORD PTR [eax-0x38]
  419da0:	sub    bh,BYTE PTR [edx]
  419da2:	test   DWORD PTR [ebx+0x21],esp
  419da5:	mov    BYTE PTR [esi],dl
  419da7:	xor    bl,BYTE PTR [ecx+ebx*1]
  419daa:	cdq    
  419dab:	dec    ecx
  419dac:	bound  ebp,QWORD PTR [edi-0x6c2524ca]
  419db2:	out    dx,eax
  419db3:	jl     0x419e14
  419db5:	pusha  
  419db6:	clc    
  419db7:	daa    
  419db8:	pop    edi
  419db9:	bound  esi,QWORD PTR [edx+0x75ce02d7]
  419dbf:	adc    BYTE PTR [edi],0x71
  419dc2:	xchg   edi,eax
  419dc3:	sbb    eax,0x6e505f8e
  419dc8:	and    ebx,DWORD PTR [edi]
  419dca:	jp     0x419daa
  419dcc:	dec    ebx
  419dcd:	hlt    
  419dce:	xlat   BYTE PTR ds:[ebx]
  419dcf:	cld    
  419dd0:	icebp  
  419dd1:	inc    esi
  419dd2:	push   ds
  419dd3:	and    BYTE PTR [eax+eiz*1],0x85
  419dd7:	pop    ss
  419dd8:	icebp  
  419dd9:	sub    al,0x7c
  419ddb:	sti    
  419ddc:	inc    ebp
  419ddd:	push   ecx
  419dde:	int3   
  419ddf:	pop    ss
  419de0:	jmp    0x419dd1
  419de2:	dec    edx
  419de3:	rol    ebx,0x10
  419de6:	test   eax,0xf59cdb91
  419deb:	add    al,cl
  419ded:	xchg   ebp,eax
  419dee:	adc    BYTE PTR [ebx],bh
  419df0:	aaa    
  419df1:	loopne 0x419dc4
  419df3:	xchg   edi,eax
  419df4:	dec    ecx
  419df5:	mov    bh,0xf8
  419df7:	mov    gs,WORD PTR [edi+0x41e8050a]
  419dfd:	or     al,0x4b
  419dff:	fxch   st(3)
  419e01:	or     DWORD PTR [edi-0x1c1b9602],eax
  419e07:	sti    
  419e08:	lods   eax,DWORD PTR ds:[esi]
  419e09:	mov    al,ds:0xd0a4c37f
  419e0e:	retf   0x4aa8
  419e11:	jl     0x419dec
  419e13:	push   ecx
  419e14:	out    0x71,eax
  419e16:	mov    bh,0x30
  419e18:	mov    dh,0x70
  419e1a:	dec    ebx
  419e1b:	xchg   ecx,eax
  419e1c:	cmp    DWORD PTR ss:[edx+0x0],eax
  419e20:	pop    edi
  419e21:	mov    BYTE PTR [ebp+0x2a2953e1],ch
  419e27:	sahf   
  419e28:	mov    cl,0x11
  419e2a:	repz mov fs,WORD PTR [ecx+0x65]
  419e2e:	sahf   
  419e2f:	adc    eax,0x1b5c6719
  419e34:	fsubr  QWORD PTR [ecx-0x57e47dc]
  419e3a:	inc    edx
  419e3b:	repz xlat BYTE PTR ds:[ebx]
  419e3d:	iret   
  419e3e:	mov    esp,0xfde8ddac
  419e43:	cmp    DWORD PTR [edx+ebx*2-0x36],0xffffff8e
  419e48:	fisubr WORD PTR [eax]
  419e4b:	sub    eax,0x1c5518df
  419e50:	or     al,0x17
  419e52:	mov    esp,0x8f2c392f
  419e57:	sub    eax,DWORD PTR [ecx]
  419e59:	sbb    eax,0x785e72ed
  419e5e:	jmp    0x419e2b
  419e60:	addr16 retf 0xe334
  419e64:	inc    edi
  419e65:	jle    0x419e3e
  419e67:	adc    ebx,0x26
  419e6a:	je     0x419ea8
  419e6c:	mov    BYTE PTR [edi],al
  419e6e:	cmp    ebx,esp
  419e70:	mov    dl,0xf8
  419e72:	xchg   esi,eax
  419e73:	cmp    al,0xa3
  419e75:	fist   WORD PTR [eax]
  419e77:	cmp    ebx,0xffffffd8
  419e7a:	adc    edx,DWORD PTR [edx+edx*4]
  419e7d:	iret   
  419e7e:	xor    al,0xa2
  419e80:	mov    ds:0x4f6aa682,al
  419e85:	adc    eax,0x85d7306a
  419e8a:	test   al,0xcf
  419e8c:	cs inc ebx
  419e8e:	mov    WORD PTR [esi],cs
  419e90:	jle    0x419ea1
  419e92:	or     eax,0x322f5a7
  419e97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e98:	push   esp
  419e99:	popa   
  419e9a:	push   ss
  419e9b:	pop    ebp
  419e9c:	dec    ecx
  419e9d:	retf   
  419e9e:	pop    esi
  419e9f:	popf   
  419ea0:	fwait
  419ea1:	repz mov bl,0x4c
  419ea4:	pop    es
  419ea5:	push   0x1a
  419ea7:	dec    edi
  419ea8:	mov    eax,ds:0xf7cfd39e
  419ead:	call   0xeb73be3d
  419eb2:	nop
  419eb3:	add    al,0xaf
  419eb5:	mov    al,0xba
  419eb7:	pop    ss
  419eb8:	fcomip st,st(4)
  419eba:	mov    BYTE PTR [ecx+0x69c744ed],dh
  419ec0:	in     eax,0xf4
  419ec2:	mov    bl,0xab
  419ec4:	nop
  419ec5:	ror    cl,1
  419ec7:	stc    
  419ec8:	adc    DWORD PTR [eax+0x4c507f2c],ebp
  419ece:	xlat   BYTE PTR ds:[ebx]
  419ecf:	adc    eax,DWORD PTR [eax+0x40]
  419ed2:	pop    ebx
  419ed3:	ins    DWORD PTR es:[edi],dx
  419ed4:	js     0x419e6a
  419ed6:	jne    0x419f13
  419ed8:	xor    eax,0x7c15a54f
  419edd:	lahf   
  419ede:	inc    ebx
  419edf:	sub    ah,BYTE PTR [ebp-0x1d]
  419ee2:	test   DWORD PTR [ecx-0x23],0x93f034ae
  419ee9:	add    eax,0xbab6a387
  419eee:	nop    ebx
  419ef1:	test   eax,0xc0c4f01c
  419ef6:	mov    eax,DWORD PTR [ebp+0x31c99885]
  419efc:	or     al,0x47
  419efe:	pop    eax
  419eff:	sub    DWORD PTR [edi+0x104b3cfd],edi
  419f05:	mov    al,ds:0xe09d2b13
  419f0a:	lods   al,BYTE PTR ds:[esi]
  419f0b:	mov    ah,0x10
  419f0d:	cmp    al,0x96
  419f0f:	jmp    0x8a03:0xefc8bc59
  419f16:	mov    edx,0x8ca3d50b
  419f1b:	jmp    0x419f97
  419f1d:	add    edi,DWORD PTR [edx+0x1f317f8]
  419f23:	mov    edx,0x8ece1ea2
  419f28:	pop    esp
  419f29:	add    bh,BYTE PTR [esi]
  419f2b:	retf   
  419f2c:	mov    ah,0x10
  419f2e:	or     al,0x46
  419f30:	fst    QWORD PTR [edi]
  419f32:	sar    dh,0x4a
  419f35:	adc    edx,DWORD PTR [edi+edx*8-0xa]
  419f39:	cli    
  419f3a:	jbe    0x419f92
  419f3c:	iret   
  419f3d:	or     al,0x8
  419f3f:	repz ror DWORD PTR [ecx+ebx*1-0x307d33b5],1
  419f47:	xor    cl,0x43
  419f4a:	dec    ebx
  419f4b:	ror    DWORD PTR [edi],0x27
  419f4e:	mov    ebx,0x18dcda9c
  419f53:	sub    dl,BYTE PTR [ecx]
  419f55:	sub    DWORD PTR [ecx],edx
  419f57:	mov    BYTE PTR [edi+0x55fc1268],ah
  419f5d:	nop
  419f5e:	rol    BYTE PTR [ebp-0x47d3b65],cl
  419f64:	aaa    
  419f65:	mov    ch,ch
  419f67:	mov    dh,0xdb
  419f69:	pop    es
  419f6a:	(bad)  
  419f6b:	aam    0xb5
  419f6d:	mov    dh,0x67
  419f6f:	test   al,0xf
  419f71:	mov    eax,ds:0xc3910df7
  419f76:	sub    al,BYTE PTR [ebx-0x63a50296]
  419f7c:	adc    DWORD PTR [eax+0x66ffef0c],eax
  419f82:	or     DWORD PTR gs:[ecx],eax
  419f85:	xchg   edi,eax
  419f86:	pop    eax
  419f87:	sahf   
  419f88:	es jle 0x419fca
  419f8b:	cmc    
  419f8c:	jbe    0x419f10
  419f8e:	repz scas al,BYTE PTR es:[edi]
  419f90:	mov    bl,0xa9
  419f92:	ficom  DWORD PTR [edx-0x5b]
  419f95:	outs   dx,DWORD PTR ds:[esi]
  419f96:	imul   ebx,DWORD PTR [eax+edx*8+0x41],0x27ddce0
  419f9e:	xor    al,0x9a
  419fa0:	les    eax,FWORD PTR [eax]
  419fa2:	mov    eax,0x930c4d62
  419fa7:	jecxz  0x419f4e
  419fa9:	push   esi
  419faa:	lds    eax,FWORD PTR [edx+ebp*8+0x5fd8a175]
  419fb1:	cmp    edi,ebx
  419fb3:	dec    ecx
  419fb4:	and    al,cl
  419fb6:	ror    DWORD PTR [edi],0x90
  419fb9:	add    al,0xb6
  419fbb:	xchg   edx,eax
  419fbc:	addr16 pop edi
  419fbe:	clc    
  419fbf:	jmp    0x419f6d
  419fc1:	pop    edi
  419fc2:	out    0x64,al
  419fc4:	mov    edi,edi
  419fc6:	arpl   ax,sp
  419fc8:	pusha  
  419fc9:	inc    esp
  419fca:	inc    esi
  419fcb:	(bad)  
  419fcc:	icebp  
  419fcd:	add    ecx,DWORD PTR [edi-0x4e]
  419fd0:	inc    ebx
  419fd1:	arpl   ax,cx
  419fd3:	adc    BYTE PTR [eax-0x15],bl
  419fd6:	pop    es
  419fd7:	and    esi,edx
  419fd9:	mov    ch,0x96
  419fdb:	or     al,cl
  419fdd:	sub    eax,DWORD PTR [ebx+ebp*1+0x57]
  419fe1:	js     0x41a049
  419fe3:	repnz or eax,0x4c7433fa
  419fe9:	push   cs
  419fea:	out    0x88,eax
  419fec:	les    ecx,FWORD PTR [ebx+eax*1-0x1f8dcd3a]
  419ff3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ff4:	push   edi
  419ff5:	mov    eax,0x76e1a00c
  419ffa:	scas   ax,WORD PTR es:[edi]
  419ffc:	rcl    BYTE PTR [ebp-0x1d],1
  419fff:	(bad)  
  41a000:	in     eax,0x40
  41a002:	adc    DWORD PTR [edx+esi*4+0x19fa381f],edx
  41a009:	jnp    0x41a07f
  41a00b:	pop    esi
  41a00c:	rcl    eax,0x95
  41a00f:	loope  0x41a07a
  41a011:	jbe    0x419ff4
  41a013:	outs   dx,DWORD PTR ds:[esi]
  41a014:	xchg   ebp,eax
  41a015:	or     ecx,edi
  41a017:	mov    BYTE PTR [esi+0x6200f22e],bl
  41a01d:	lds    ebx,FWORD PTR ds:0x13c5a56f
  41a023:	xor    al,0x60
  41a025:	mov    ecx,0xfb21147d
  41a02a:	jno    0x41a041
  41a02c:	lea    esp,[edx-0x580b74eb]
  41a032:	add    DWORD PTR [edx],esi
  41a034:	sub    dh,ch
  41a036:	test   eax,0xd1bda32a
  41a03b:	les    esp,FWORD PTR ds:0xbed90054
  41a041:	in     eax,dx
  41a042:	lea    esp,[bx+di]
  41a045:	mov    eax,0xe78b0ea7
  41a04a:	imul   ebx,DWORD PTR [edx+0x7fd21a3d],0xe4f0436c
  41a054:	xchg   ecx,eax
  41a055:	aas    
  41a056:	mov    ah,0x48
  41a058:	pop    esi
  41a059:	pop    ebp
  41a05a:	xor    BYTE PTR ds:0x1f3e6955,0x2c
  41a061:	sbb    BYTE PTR [ebx-0x71],0x64
  41a065:	lea    ebp,[esi+0x36]
  41a068:	das    
  41a069:	jp     0x41a04b
  41a06b:	pop    ebp
  41a06c:	imul   ebp,DWORD PTR [ecx-0x44c21a5],0xc3bf4fd5
  41a076:	sbb    eax,0x95466cda
  41a07b:	mov    al,0xab
  41a07d:	mov    edi,0x4a0e4cfc
  41a082:	mov    ecx,0x81145263
  41a087:	dec    esi
  41a088:	inc    edx
  41a089:	sbb    al,0x19
  41a08b:	mov    bl,0x82
  41a08d:	or     BYTE PTR [ebp+0x45],cl
  41a090:	loopne 0x41a0d7
  41a092:	imul   esp,DWORD PTR [ecx-0x23d80631],0xb72c08bb
  41a09c:	imul   ebp,edi,0x87957b5f
  41a0a2:	fdiv   QWORD PTR [ebp+ebp*4-0x60f7a79c]
  41a0a9:	inc    edi
  41a0aa:	adc    dl,dl
  41a0ac:	mov    fs,WORD PTR [edi+0x46]
  41a0af:	adc    DWORD PTR [eax-0x7a],esi
  41a0b2:	jle    0x41a0e0
  41a0b4:	and    ebp,esi
  41a0b6:	mov    ebp,0x43b0c5ee
  41a0bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0bc:	jbe    0x41a0f5
  41a0be:	xchg   edx,eax
  41a0bf:	xchg   edi,eax
  41a0c0:	fnstenv [edx]
  41a0c2:	outs   dx,BYTE PTR ds:[esi]
  41a0c3:	and    eax,edx
  41a0c5:	dec    esp
  41a0c6:	out    dx,al
  41a0c7:	pop    esi
  41a0c8:	pop    esp
  41a0c9:	lea    esp,[edi]
  41a0cb:	mov    edi,0x4a1b90c1
  41a0d0:	daa    
  41a0d1:	icebp  
  41a0d2:	adc    ebp,esp
  41a0d4:	dec    edi
  41a0d5:	pop    esi
  41a0d6:	out    dx,eax
  41a0d7:	mov    al,0xbc
  41a0d9:	inc    edi
  41a0da:	(bad)
  41a0dd:	retf   0xb6c3
  41a0e0:	inc    DWORD PTR [ecx+0x3ecc0e2f]
  41a0e6:	jmp    0x650801d6
  41a0eb:	xlat   BYTE PTR ds:[ebx]
  41a0ec:	jo     0x41a08a
  41a0ee:	pop    esi
  41a0ef:	call   0x144b59de
  41a0f4:	in     al,0x43
  41a0f6:	loop   0x41a094
  41a0f8:	out    dx,al
  41a0f9:	ins    DWORD PTR es:[edi],dx
  41a0fa:	mov    edi,0x7c729503
  41a0ff:	nop
  41a100:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a101:	jp     0x41a09e
  41a103:	sbb    ah,cl
  41a105:	push   esi
  41a106:	mov    dh,0x2
  41a108:	xchg   ebx,eax
  41a109:	inc    edx
  41a10a:	push   ebx
  41a10b:	jle    0x41a096
  41a10d:	or     edi,DWORD PTR [edx+0xb]
  41a110:	cdq    
  41a111:	push   ecx
  41a112:	cmp    dl,dh
  41a114:	push   eax
  41a115:	inc    ecx
  41a116:	adc    al,0x27
  41a118:	add    ecx,DWORD PTR [ecx]
  41a11a:	test   BYTE PTR [ebp-0x1ae4b3ca],ch
  41a120:	in     al,0xba
  41a122:	cld    
  41a123:	push   0xa60fbdf4
  41a128:	pop    eax
  41a129:	int3   
  41a12a:	das    
  41a12b:	mov    es,WORD PTR [ecx-0x315d46c9]
  41a131:	xchg   ecx,eax
  41a132:	push   0x2caad6c2
  41a137:	dec    eax
  41a138:	imul   eax,edx,0x6e
  41a13b:	mov    WORD PTR [eax+0x30aa77ab],ds
  41a141:	fimul  DWORD PTR [esi+eiz*8+0x3613b930]
  41a148:	stos   DWORD PTR es:[edi],eax
  41a149:	and    DWORD PTR [ecx+0x70a72db5],eax
  41a14f:	jg     0x41a130
  41a151:	xchg   ecx,eax
  41a152:	aad    0xcb
  41a154:	mov    al,0xef
  41a156:	(bad)  
  41a157:	repnz ins DWORD PTR es:[edi],dx
  41a159:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a15a:	scas   al,BYTE PTR es:[edi]
  41a15b:	sbb    eax,edi
  41a15d:	xchg   ecx,eax
  41a15e:	fwait
  41a15f:	addr16 push edx
  41a161:	jg     0x41a0f8
  41a163:	push   edx
  41a164:	pushf  
  41a165:	mov    esi,cs
  41a167:	bound  ebx,QWORD PTR [eax+0x4a]
  41a16a:	stos   DWORD PTR es:[edi],eax
  41a16b:	fild   QWORD PTR [eax-0x80]
  41a16e:	aaa    
  41a16f:	push   edi
  41a170:	ret    
  41a171:	inc    esi
  41a172:	gs push es
  41a174:	xor    BYTE PTR [eax+edx*8],al
  41a177:	sbb    al,ch
  41a179:	jne    0x41a1dc
  41a17b:	inc    ebx
  41a17c:	xchg   ecx,eax
  41a17d:	dec    esp
  41a17e:	outs   dx,DWORD PTR ds:[esi]
  41a17f:	loope  0x41a132
  41a181:	fist   DWORD PTR [edi+0x3c]
  41a184:	xchg   ecx,eax
  41a185:	mov    edx,0x5cb3b878
  41a18a:	loopne 0x41a1df
  41a18c:	push   esp
  41a18d:	pop    eax
  41a18e:	cmp    BYTE PTR [ebx],ah
  41a190:	sub    BYTE PTR [eax+0x52],dh
  41a193:	xor    eax,0x4a958477
  41a198:	dec    edi
  41a199:	or     dh,BYTE PTR [esi-0x21767537]
  41a19f:	scas   al,BYTE PTR es:[edi]
  41a1a0:	push   esi
  41a1a1:	pusha  
  41a1a2:	push   0x2f6c556f
  41a1a7:	sbb    ebp,edi
  41a1a9:	xchg   ebx,eax
  41a1aa:	xchg   esi,eax
  41a1ab:	iret   
  41a1ac:	outs   dx,DWORD PTR ds:[esi]
  41a1ad:	daa    
  41a1ae:	xchg   DWORD PTR [eax],esp
  41a1b0:	test   BYTE PTR [ebx+0x7d30dfd3],dl
  41a1b6:	ins    DWORD PTR es:[edi],dx
  41a1b7:	fiadd  DWORD PTR [esi+0x37bb4674]
  41a1bd:	mov    eax,eax
  41a1bf:	pop    ecx
  41a1c0:	lods   al,BYTE PTR ds:[esi]
  41a1c1:	aam    0x29
  41a1c3:	mov    ebx,0xdb0b6f0a
  41a1c8:	imul   eax,DWORD PTR ds:0x8c721aff,0x2a8fe1bc
  41a1d2:	outs   dx,DWORD PTR ds:[esi]
  41a1d3:	sti    
  41a1d4:	adc    BYTE PTR [ebx-0x69901109],0x3a
  41a1db:	mov    edi,eax
  41a1dd:	or     al,BYTE PTR ds:0x62f1ba5a
  41a1e3:	xor    ch,cl
  41a1e5:	lea    esi,[edx]
  41a1e7:	inc    BYTE PTR [ebx]
  41a1e9:	pop    ebx
  41a1ea:	enter  0xb330,0x4d
  41a1ee:	icebp  
  41a1ef:	js     0x41a256
  41a1f1:	test   al,0x15
  41a1f3:	ss push ecx
  41a1f5:	inc    eax
  41a1f6:	pop    ss
  41a1f7:	inc    edi
  41a1f8:	std    
  41a1f9:	pop    ds
  41a1fa:	jb     0x41a260
  41a1fc:	and    dl,BYTE PTR [ebx]
  41a1fe:	adc    eax,0xc6f6d2c
  41a203:	mov    dl,0x41
  41a205:	out    dx,al
  41a206:	xchg   edx,eax
  41a207:	dec    ebp
  41a208:	(bad)  
  41a20a:	adc    al,0x81
  41a20c:	dec    esi
  41a20d:	xor    esp,ebx
  41a20f:	enter  0xb256,0x4e
  41a213:	les    ebx,FWORD PTR [edi-0x1a]
  41a216:	jg     0x41a1d9
  41a218:	outs   dx,BYTE PTR ds:[esi]
  41a219:	shl    ebp,1
  41a21b:	push   ebx
  41a21c:	pop    edx
  41a21d:	fwait
  41a21e:	cmp    BYTE PTR [edi-0x2],dl
  41a221:	mov    esi,0x359b348c
  41a226:	out    dx,al
  41a227:	rol    DWORD PTR [edi-0x6cac3279],0x7
  41a22e:	lock xchg edi,eax
  41a230:	pop    esi
  41a231:	xchg   esi,eax
  41a232:	fdivp  st(4),st
  41a234:	pop    esp
  41a235:	add    al,BYTE PTR [edx-0x2773a21c]
  41a23b:	xor    al,0x6
  41a23d:	inc    ecx
  41a23e:	add    esi,DWORD PTR [ecx-0x47]
  41a241:	xor    DWORD PTR [esp+ecx*4-0x4cd5ff8f],0xb28642b1
  41a24c:	test   DWORD PTR [ecx-0x7c],ebp
  41a24f:	sbb    esp,DWORD PTR [ecx+0x2b]
  41a252:	xor    ecx,edi
  41a254:	loop   0x41a1ff
  41a256:	add    BYTE PTR [ebx],al
  41a258:	aad    0xbc
  41a25a:	dec    esp
  41a25b:	ret    
  41a25c:	aam    0xa5
  41a25e:	pop    esp
  41a25f:	pop    ebp
  41a260:	stos   DWORD PTR es:[edi],eax
  41a261:	std    
  41a262:	loop   0x41a1f7
  41a264:	fcomp  QWORD PTR [edi-0x136f7279]
  41a26a:	dec    bp
  41a26c:	push   0x7c230fd3
  41a271:	imul   eax,DWORD PTR [eax],0xffffffa2
  41a274:	dec    ebp
  41a275:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a276:	stc    
  41a277:	mov    esi,0x5fcd11f7
  41a27c:	xor    DWORD PTR [edi+ecx*8],ecx
  41a27f:	sub    al,0xd6
  41a281:	fld    DWORD PTR ds:0xa556840
  41a287:	fistp  WORD PTR ds:0xebe695f0
  41a28d:	dec    esi
  41a28e:	mov    ah,0xe4
  41a290:	push   ebp
  41a291:	shl    eax,0x3a
  41a294:	or     eax,0xdb0fee66
  41a299:	cmp    BYTE PTR [esi+0x14],bh
  41a29c:	inc    BYTE PTR [edi-0x78]
  41a29f:	lock jg 0x41a22d
  41a2a2:	fld    TBYTE PTR [edi+0x3f64fa1b]
  41a2a8:	in     al,dx
  41a2a9:	outs   dx,BYTE PTR ds:[esi]
  41a2aa:	jae    0x41a2de
  41a2ac:	cmp    BYTE PTR [ebx-0x55238009],al
  41a2b2:	mov    DWORD PTR [edx+esi*1+0x11],edi
  41a2b6:	sti    
  41a2b7:	mov    edx,0xc7623aff
  41a2bc:	sbb    esp,esi
  41a2be:	shr    DWORD PTR ds:0xa5afc11e,0xc1
  41a2c5:	jp     0x41a2a8
  41a2c7:	or     ch,BYTE PTR [ebx+0x553fc3fc]
  41a2cd:	jnp    0x41a2be
  41a2cf:	ds jp  0x41a284
  41a2d2:	rol    DWORD PTR [edx-0xc],1
  41a2d5:	(bad)  
  41a2d6:	mov    edx,?
  41a2d8:	push   es
  41a2d9:	test   eax,0x953fac26
  41a2de:	pop    es
  41a2df:	or     eax,0xe4b23caa
  41a2e4:	popa   
  41a2e5:	(bad)  
  41a2e6:	mov    eax,0xec7e49bf
  41a2eb:	dec    ebx
  41a2ec:	in     eax,0xef
  41a2ee:	(bad)  
  41a2ef:	mov    ss,WORD PTR [ebx]
  41a2f1:	jns    0x41a2e6
  41a2f3:	and    BYTE PTR [ebx],cl
  41a2f5:	xor    DWORD PTR [ebx+eiz*4-0x27],0x57
  41a2fa:	not    BYTE PTR ss:[ebx+0x57]
  41a2fe:	fnstenv [ebx-0x6c]
  41a301:	es fwait
  41a303:	mov    ecx,0x5216d4cc
  41a308:	xor    eax,0x9cc3269f
  41a30d:	outs   dx,BYTE PTR ds:[esi]
  41a30e:	gs dec eax
  41a310:	push   ss
  41a311:	dec    eax
  41a312:	popa   
  41a313:	call   0x54bb:0x4cc0d672
  41a31a:	daa    
  41a31b:	ds cld 
  41a31d:	push   edi
  41a31e:	shl    DWORD PTR [ebx-0x54653c40],1
  41a324:	(bad)  
  41a325:	jp     0x41a390
  41a327:	ficom  DWORD PTR [ebx+0x62]
  41a32a:	or     DWORD PTR [esi+0x2a],esi
  41a32d:	mov    edx,0xe1a92501
  41a332:	mov    dl,0x3e
  41a334:	sub    eax,0x95a4fe4
  41a339:	add    eax,DWORD PTR ds:0x3bacbed3
  41a33f:	add    DWORD PTR [ebp-0x2a0d6615],esi
  41a345:	add    eax,0x4593b3fc
  41a34a:	mov    BYTE PTR [ebx+0x4e],cl
  41a34d:	sbb    al,0x9
  41a34f:	mov    ebx,0xd50c1e00
  41a354:	fisttp WORD PTR [ecx-0x71]
  41a357:	push   ss
  41a358:	and    cl,BYTE PTR [edx]
  41a35a:	add    bh,BYTE PTR [eax+0x36]
  41a35d:	mov    bl,0x27
  41a35f:	cmp    bh,al
  41a361:	pminub mm1,mm7
  41a364:	push   es
  41a365:	cld    
  41a366:	jnp    0x41a3be
  41a368:	jecxz  0x41a388
  41a36a:	mov    esi,0xa34077a4
  41a36f:	enter  0x42a,0x4a
  41a373:	outs   dx,BYTE PTR ds:[esi]
  41a374:	add    DWORD PTR [eax+eiz*2],0x12e8d253
  41a37b:	cmp    al,0x54
  41a37d:	mov    ah,0xdc
  41a37f:	push   edi
  41a380:	icebp  
  41a381:	add    BYTE PTR [ecx+eax*1-0x35],dh
  41a385:	pop    ebx
  41a386:	pop    esp
  41a387:	ror    DWORD PTR [edx+0x1f],cl
  41a38a:	inc    ebx
  41a38b:	fwait
  41a38c:	es sbb eax,0xbf154fea
  41a392:	sti    
  41a393:	inc    ebp
  41a394:	or     al,0x15
  41a396:	(bad)  
  41a397:	andnps xmm7,xmm5
  41a39a:	aas    
  41a39b:	pop    ds
  41a39c:	popf   
  41a39d:	(bad)  
  41a39e:	ins    DWORD PTR es:[edi],dx
  41a39f:	in     eax,0xc1
  41a3a1:	aad    0x96
  41a3a3:	xchg   ebx,eax
  41a3a4:	fisttp QWORD PTR [ebx-0x1d9b31b4]
  41a3aa:	pop    ds
  41a3ab:	pop    ebp
  41a3ac:	js     0x41a3e8
  41a3ae:	jge    0x41a39d
  41a3b0:	and    esp,ebp
  41a3b2:	ins    DWORD PTR es:[edi],dx
  41a3b3:	scas   al,BYTE PTR es:[edi]
  41a3b4:	mov    DWORD PTR [edi+0x6e903d77],eax
  41a3ba:	dec    esi
  41a3bb:	seta   BYTE PTR [edi]
  41a3be:	in     eax,0xe8
  41a3c0:	fmul   st,st(1)
  41a3c2:	inc    esi
  41a3c3:	sti    
  41a3c4:	sbb    ah,ah
  41a3c6:	cli    
  41a3c7:	pop    edi
  41a3c8:	out    dx,al
  41a3c9:	mov    ds:0x9740f699,eax
  41a3ce:	mov    edi,0x67c0c380
  41a3d3:	or     eax,0xc3c3f043
  41a3d8:	mov    ecx,0xd6e8c5a
  41a3dd:	xor    al,0xb6
  41a3df:	fst    DWORD PTR [ebx+0x265c4b8c]
  41a3e5:	(bad)  
  41a3e6:	sub    eax,0xe8027ada
  41a3eb:	xor    edi,DWORD PTR [esi+esi*1+0x10]
  41a3ef:	sbb    BYTE PTR [ebx-0x428ecb47],0x63
  41a3f6:	add    DWORD PTR ds:0x70e3dca,ecx
  41a3fc:	inc    edx
  41a3fd:	into   
  41a3fe:	add    al,0x8a
  41a400:	add    al,dh
  41a402:	mov    edx,0xe987c065
  41a407:	test   DWORD PTR [edx+0x1a],0x69c73b4
  41a40e:	fimul  WORD PTR [edx-0x8c4fa69]
  41a414:	push   esp
  41a415:	xor    eax,0xa7b538d6
  41a41a:	out    dx,eax
  41a41b:	sbb    esi,edi
  41a41d:	add    ecx,edi
  41a41f:	test   eax,0xac301e69
  41a424:	fidivr DWORD PTR [edi]
  41a426:	fld    TBYTE PTR [ebp+0x1e86aef0]
  41a42c:	cld    
  41a42d:	xor    cl,BYTE PTR [eax]
  41a42f:	hlt    
  41a430:	mov    ds:0x40abcf16,eax
  41a435:	ret    
  41a436:	and    DWORD PTR [eax],esp
  41a438:	xlat   BYTE PTR ds:[ebx]
  41a439:	(bad)  
  41a43a:	push   esi
  41a43b:	or     ah,BYTE PTR [edi-0x76]
  41a43e:	aam    0x3
  41a440:	jb     0x41a3e9
  41a442:	jl     0x41a41e
  41a444:	out    0xa9,eax
  41a446:	ins    DWORD PTR es:[edi],dx
  41a447:	std    
  41a448:	mov    edi,0x79e42213
  41a44d:	les    ecx,FWORD PTR ss:[edx]
  41a450:	mov    edx,0x7a89c567
  41a455:	popa   
  41a456:	adc    DWORD PTR [esi+0x700a9d5b],ebx
  41a45c:	(bad)  
  41a45d:	cmp    edi,eax
  41a45f:	retf   
  41a460:	cmp    al,dh
  41a462:	into   
  41a463:	daa    
  41a464:	jg     0x41a49b
  41a466:	stos   BYTE PTR es:[edi],al
  41a467:	rol    BYTE PTR [esi-0x21],cl
  41a46a:	add    cl,dl
  41a46c:	ror    BYTE PTR [edx+0x6418bf1a],0x11
  41a473:	xchg   ebx,eax
  41a474:	mov    cs,WORD PTR [edi]
  41a476:	(bad)  
  41a477:	int3   
  41a478:	ds enter 0xf9ef,0x2e
  41a47d:	mov    ebp,0x705da0f0
  41a482:	adc    al,0xaf
  41a484:	jo     0x41a4ba
  41a486:	rol    bl,cl
  41a488:	add    esp,esi
  41a48a:	mov    eax,ds:0xab2f8c59
  41a48f:	jae    0x41a48b
  41a491:	fnstsw WORD PTR cs:[ecx+ecx*1+0x15]
  41a496:	xchg   ebx,eax
  41a497:	out    dx,al
  41a498:	cld    
  41a499:	jmp    0xba77:0xa022480
  41a4a0:	cli    
  41a4a1:	imul   esp,DWORD PTR [edx+0x28],0xffffffe9
  41a4a5:	xchg   BYTE PTR [eax-0x9],bh
  41a4a8:	rol    esi,cl
  41a4aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a4ab:	rcl    DWORD PTR [edx],1
  41a4ad:	lds    ebx,FWORD PTR [ecx+eiz*1+0x7a69dc5e]
  41a4b4:	mov    al,ch
  41a4b6:	add    dl,al
  41a4b8:	pop    ecx
  41a4b9:	ss pop eax
  41a4bb:	out    0xe2,al
  41a4bd:	and    ebx,DWORD PTR [eax+0x1464185f]
  41a4c3:	cmc    
  41a4c4:	or     ebx,DWORD PTR [esp+ebp*8+0x9]
  41a4c8:	(bad)  
  41a4ca:	jns    0x41a4cc
  41a4cc:	pop    eax
  41a4cd:	clc    
  41a4ce:	ror    DWORD PTR [ecx],0x68
  41a4d1:	scas   eax,DWORD PTR es:[edi]
  41a4d2:	xchg   esp,eax
  41a4d3:	mov    eax,0x3569f008
  41a4d8:	dec    esi
  41a4d9:	inc    edi
  41a4da:	mov    ebp,0x2cb50fa2
  41a4df:	mov    cl,BYTE PTR [edx]
  41a4e1:	lds    esi,FWORD PTR [esi]
  41a4e3:	pop    ebp
  41a4e4:	mov    ebp,0x290444a
  41a4e9:	mov    WORD PTR [esi],gs
  41a4eb:	lea    ebp,[esi-0x7e]
  41a4ee:	int3   
  41a4ef:	stos   BYTE PTR es:[edi],al
  41a4f0:	pop    ebp
  41a4f1:	xchg   ebp,eax
  41a4f2:	sbb    ch,BYTE PTR [ebx-0x7f]
  41a4f5:	inc    ebx
  41a4f6:	leave  
  41a4f7:	cmc    
  41a4f8:	out    dx,al
  41a4f9:	mov    ebx,0x14342706
  41a4fe:	xchg   edx,eax
  41a4ff:	frstor [ebx-0x5838eaea]
  41a505:	lods   eax,DWORD PTR ds:[esi]
  41a506:	or     DWORD PTR [esi-0xd],edi
  41a509:	sub    edx,DWORD PTR [ecx-0x6fb53950]
  41a50f:	ins    BYTE PTR es:[edi],dx
  41a510:	in     eax,dx
  41a511:	cmp    al,0xa5
  41a513:	xor    eax,0xa2ac7de9
  41a518:	pop    ebp
  41a519:	out    0x6,al
  41a51b:	push   esi
  41a51c:	sbb    al,0xd8
  41a51e:	xlat   BYTE PTR ds:[ebx]
  41a51f:	xchg   edx,eax
  41a520:	es mov bh,cl
  41a523:	push   ebx
  41a524:	mov    edx,0x3af14c46
  41a529:	(bad)  
  41a52a:	into   
  41a52b:	enter  0xd02a,0x21
  41a52f:	je     0x41a4d6
  41a531:	sbb    ecx,0x69
  41a534:	inc    ebx
  41a535:	sbb    al,0x9
  41a537:	inc    ebx
  41a538:	add    al,0xdd
  41a53a:	clc    
  41a53b:	jno    0x41a56f
  41a53d:	enter  0xf5b2,0xd
  41a541:	ror    bh,0x96
  41a544:	cdq    
  41a545:	stos   BYTE PTR es:[edi],al
  41a546:	sar    DWORD PTR cs:[esi-0xe9f5008],1
  41a54d:	shl    ebx,1
  41a54f:	fld    QWORD PTR [ebx-0x7c]
  41a552:	pop    esi
  41a553:	out    0xd5,eax
  41a555:	xchg   edx,eax
  41a556:	jmp    0xef40d02f
  41a55b:	add    bh,BYTE PTR [edi+eiz*8]
  41a55e:	sbb    cl,BYTE PTR [ecx+0x6b]
  41a561:	cmp    ecx,ebx
  41a563:	inc    ebp
  41a564:	clc    
  41a565:	jmp    0xa26c5026
  41a56a:	and    ebx,ecx
  41a56c:	imul   ecx,DWORD PTR [edi],0xffffffac
  41a56f:	out    0x85,eax
  41a571:	inc    ebp
  41a572:	pop    ds
  41a573:	push   edx
  41a574:	jp     0x41a511
  41a576:	sub    BYTE PTR [esi],dl
  41a578:	fcom   DWORD PTR [edi+eiz*4+0x72]
  41a57c:	mov    dl,0xcd
  41a57e:	out    0x84,eax
  41a580:	jbe    0x41a5e5
  41a582:	cdq    
  41a583:	jnp    0x41a5e9
  41a585:	mov    ds:0x6958aae5,al
  41a58a:	pop    ecx
  41a58b:	inc    edi
  41a58c:	jmp    0x9734:0xdbc252a3
  41a593:	cdq    
  41a594:	xor    eax,ebx
  41a596:	repz pop ebx
  41a598:	mov    ebx,0x38686dde
  41a59d:	adc    eax,0xa0d47d29
  41a5a2:	das    
  41a5a3:	daa    
  41a5a4:	retf   
  41a5a5:	mov    ebx,0xd6aa6144
  41a5aa:	xchg   edi,eax
  41a5ab:	into   
  41a5ac:	fstp   QWORD PTR [ecx*2+0x1107e17c]
  41a5b3:	inc    ebx
  41a5b4:	aad    0x7f
  41a5b6:	cmp    eax,0x516d14e8
  41a5bb:	pusha  
  41a5bc:	or     edx,ebx
  41a5be:	fsub   st(2),st
  41a5c0:	xor    DWORD PTR [ebp+ebp*4+0x559614e2],ecx
  41a5c7:	fadd   DWORD PTR [eax-0x11]
  41a5ca:	and    edi,edx
  41a5cc:	xor    edi,DWORD PTR [edi+0x1d04a040]
  41a5d2:	in     eax,0xe1
  41a5d4:	mov    ebp,DWORD PTR [esi+0x7023891d]
  41a5da:	iret   
  41a5db:	push   0x884d7aca
  41a5e0:	sbb    ebp,DWORD PTR [ebp+0x77cee61d]
  41a5e6:	sbb    BYTE PTR [edx*8+0x2141e582],0xfd
  41a5ee:	inc    edx
  41a5ef:	xchg   DWORD PTR [edx-0x5dfa3c06],edx
  41a5f5:	(bad)  
  41a5f7:	jg     0x41a587
  41a5f9:	ss mov bh,0x70
  41a5fc:	and    DWORD PTR [esi],0xffffffa3
  41a5ff:	adc    ebx,DWORD PTR [ebx-0x52]
  41a602:	inc    ebp
  41a603:	mov    dh,0xc5
  41a605:	jns    0x41a663
  41a607:	xchg   edi,eax
  41a608:	mov    ds:0x31299161,eax
  41a60d:	pop    edx
  41a60e:	push   cs
  41a60f:	adc    dh,BYTE PTR [ebx+eax*2+0x1]
  41a613:	mov    ds:0x3697b31,eax
  41a618:	and    DWORD PTR [ebx+0x57],0x17
  41a61c:	fdivp  st(5),st
  41a61e:	nop
  41a61f:	stc    
  41a620:	and    BYTE PTR [ecx+0x56571c3e],cl
  41a626:	pop    esp
  41a627:	or     DWORD PTR [ecx+ecx*4+0x376c1e2f],edi
  41a62e:	lea    edi,[edx-0x6ce24dc4]
  41a634:	sbb    al,0xf6
  41a636:	test   al,0x97
  41a638:	xchg   DWORD PTR [eax+0x1f7ebcd3],ebp
  41a63e:	xchg   esp,eax
  41a63f:	loopne 0x41a5fa
  41a641:	inc    eax
  41a642:	pop    esp
  41a643:	mov    ds:0x44bb3922,al
  41a648:	sub    bl,BYTE PTR [esi]
  41a64a:	sar    DWORD PTR [edx+0x3b],0xdb
  41a64e:	fwait
  41a64f:	scas   eax,DWORD PTR es:[edi]
  41a650:	cli    
  41a651:	inc    edi
  41a652:	xchg   esi,eax
  41a653:	sub    eax,0xa7c7c2f2
  41a658:	aam    0x72
  41a65a:	adc    dl,bh
  41a65c:	inc    ebx
  41a65d:	and    DWORD PTR [ebp+0x4272e4a0],edx
  41a663:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a664:	pop    esi
  41a665:	call   0x54e7:0x2481f45b
  41a66c:	dec    ecx
  41a66d:	retf   0xe3fc
  41a670:	loop   0x41a659
  41a672:	mov    ebx,0xf312cb4
  41a677:	add    DWORD PTR [eax+0x6d3fb423],0x81f40708
  41a681:	leave  
  41a682:	cmp    eax,0x3e402d01
  41a687:	or     eax,0x5155c16f
  41a68c:	mov    edx,0x644cd29a
  41a691:	(bad)  
  41a692:	in     al,0xf2
  41a694:	das    
  41a695:	pop    ds
  41a696:	mov    ecx,0x6bc11684
  41a69b:	jp     0x41a710
  41a69d:	xor    al,0xe4
  41a69f:	adc    dh,BYTE PTR [eax+ebp*8]
  41a6a2:	fsub   DWORD PTR ds:0x582ae287
  41a6a8:	shl    esp,0x8e
  41a6ab:	mov    dh,0xfe
  41a6ad:	iret   
  41a6ae:	shl    DWORD PTR [edi-0x13c049de],1
  41a6b4:	inc    esp
  41a6b5:	mov    dl,0x44
  41a6b7:	je     0x41a6a8
  41a6b9:	mov    esp,DWORD PTR [esi+0x35c17848]
  41a6bf:	push   eax
  41a6c0:	sbb    BYTE PTR [edx-0x4c],cl
  41a6c3:	mov    DWORD PTR ds:0x3a04dbdf,edi
  41a6c9:	mov    bl,0x40
  41a6cb:	jg     0x41a6fb
  41a6cd:	test   BYTE PTR [edi+0x4bc80d96],bh
  41a6d3:	jne    0x41a690
  41a6d5:	iret   
  41a6d6:	call   0x3ad3:0xab2938ad
  41a6dd:	cmp    ah,bh
  41a6df:	and    esp,DWORD PTR [ebp+0x76]
  41a6e2:	imul   esp,DWORD PTR [ebx+0x7d],0xf87955a5
  41a6e9:	add    BYTE PTR [ecx+0x0],dh
  41a6ec:	daa    
  41a6ed:	sbb    al,0x8f
  41a6ef:	inc    ebp
  41a6f0:	mov    dh,0x3e
  41a6f2:	jl     0x41a6b2
  41a6f4:	and    ebp,DWORD PTR [ebp-0x47]
  41a6f7:	(bad)  
  41a6f8:	jmp    0x3561be7c
  41a6fd:	jmp    0x645d:0xbc0215df
  41a704:	shr    BYTE PTR [eax+0x15],1
  41a707:	adc    eax,0x1e75caa9
  41a70c:	cmp    eax,0x383fbc1d
  41a711:	mov    ah,0x82
  41a713:	cmp    al,0x72
  41a715:	arpl   bp,ax
  41a717:	and    eax,0xae5cfb4b
  41a71c:	sti    
  41a71d:	leave  
  41a71e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a71f:	mov    bh,BYTE PTR [edi]
  41a721:	rol    ebx,1
  41a723:	(bad)  
  41a724:	out    dx,al
  41a725:	fdivr  st,st(6)
  41a727:	fnstsw ax
  41a729:	adc    bh,BYTE PTR [eax]
  41a72b:	mov    al,0xe8
  41a72d:	aad    0x80
  41a72f:	ins    BYTE PTR es:[edi],dx
  41a730:	xor    BYTE PTR [eax-0x46d633bd],bh
  41a736:	xchg   esp,eax
  41a737:	into   
  41a738:	mov    es,ecx
  41a73a:	push   0xb9afa99a
  41a73f:	sub    DWORD PTR [ebx-0x34],edx
  41a742:	and    BYTE PTR [edx+0x35c47819],ah
  41a748:	add    DWORD PTR [esi+0x7e],esi
  41a74b:	dec    ebp
  41a74c:	(bad)  
  41a74d:	fcmovnbe st,st(5)
  41a74f:	pusha  
  41a750:	xchg   BYTE PTR [edi],bh
  41a752:	sub    al,0xbe
  41a754:	repnz in eax,0xb
  41a757:	sbb    BYTE PTR [ebx-0x59ea612a],bl
  41a75d:	cmp    al,0x8e
  41a75f:	jmp    0x15bb:0x87f02b15
  41a766:	sti    
  41a767:	lea    ebp,ss:[esi+ebp*1]
  41a76b:	ds pop esp
  41a76d:	mov    eax,ds:0x7037a915
  41a772:	xor    ebx,DWORD PTR [edx+0x1c7720ca]
  41a778:	xchg   edx,eax
  41a779:	dec    esi
  41a77a:	rol    edx,0x98
  41a77d:	repz mov dl,0x20
  41a780:	std    
  41a781:	sub    al,0x22
  41a783:	mov    edx,0x9dfa7843
  41a788:	out    dx,al
  41a789:	int    0xcb
  41a78b:	inc    edx
  41a78c:	lahf   
  41a78d:	pop    ebx
  41a78e:	mov    al,ss:0xc13be2b0
  41a794:	repz loopne 0x41a720
  41a797:	fisub  WORD PTR [ebp+ebx*2-0x30bbf089]
  41a79e:	sub    al,0x7b
  41a7a0:	cdq    
  41a7a1:	xchg   edi,eax
  41a7a2:	xchg   DWORD PTR [ecx+0x38],ebp
  41a7a5:	add    dl,BYTE PTR ds:0xed541197
  41a7ab:	sbb    dh,dl
  41a7ad:	xchg   ecx,eax
  41a7ae:	loope  0x41a81f
  41a7b0:	fs jp  0x41a813
  41a7b3:	or     eax,0x1a80017a
  41a7b8:	pop    ss
  41a7b9:	les    ecx,FWORD PTR [edi]
  41a7bb:	(bad)
  41a7be:	sahf   
  41a7bf:	xchg   ecx,eax
  41a7c0:	call   0xf0802cd0
  41a7c5:	mov    ebx,0xfa16f223
  41a7ca:	inc    ebp
  41a7cb:	cld    
  41a7cc:	jg     0x41a753
  41a7ce:	xchg   esp,eax
  41a7cf:	dec    edx
  41a7d0:	fisub  WORD PTR [ebp-0x58af991]
  41a7d6:	imul   BYTE PTR [edi+ebp*8-0x57]
  41a7da:	push   es
  41a7db:	or     DWORD PTR [edx+0x2f],edx
  41a7de:	imul   DWORD PTR [ebp+0x60f7f786]
  41a7e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a7e5:	les    edi,FWORD PTR [eax-0x4d]
  41a7e8:	sbb    ecx,DWORD PTR [edi+0x4b95e79a]
  41a7ee:	(bad)  
  41a7ef:	(bad)  
  41a7f0:	nop
  41a7f1:	pop    ds
  41a7f2:	fcom   st(3)
  41a7f4:	sbb    cl,BYTE PTR [edi]
  41a7f6:	add    ah,BYTE PTR cs:[ecx+0x53]
  41a7fa:	ret    
  41a7fb:	outs   dx,DWORD PTR ds:[esi]
  41a7fc:	cmp    eax,0x248e801e
  41a801:	pop    ecx
  41a802:	push   ecx
  41a803:	retf   
  41a804:	cmp    al,0x7a
  41a806:	mov    edi,0xf6dbea93
  41a80b:	add    eax,DWORD PTR [esp+esi*8]
  41a80e:	addr16 push ebx
  41a810:	test   BYTE PTR [edx+0x5c85236b],cl
  41a816:	fst    DWORD PTR [edi+0x1e49abf8]
  41a81c:	xchg   edi,eax
  41a81d:	cmp    BYTE PTR [ecx+edi*4-0x5620ebde],al
  41a824:	jb     0x41a817
  41a826:	jne    0x41a82f
  41a828:	(bad)  
  41a829:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a82a:	add    edx,DWORD PTR [ecx]
  41a82c:	dec    eax
  41a82d:	and    BYTE PTR [edx],0x4b
  41a830:	call   0xa525f69c
  41a835:	mov    cl,0x8a
  41a837:	mov    ecx,0x68bc8e1
  41a83c:	mov    ah,bh
  41a83e:	add    dh,BYTE PTR [ecx]
  41a840:	mov    eax,ds:0x2d5d4b7f
  41a845:	loope  0x41a860
  41a847:	out    0x8e,al
  41a849:	push   cs
  41a84a:	or     BYTE PTR [edi-0x6a],0x46
  41a84e:	loope  0x41a8ac
  41a850:	fild   DWORD PTR [eax-0x10]
  41a853:	sar    bh,cl
  41a855:	daa    
  41a856:	scas   al,BYTE PTR es:[edi]
  41a857:	ja     0x41a7fb
  41a859:	pop    edi
  41a85a:	js     0x41a809
  41a85c:	push   0xbca9738e
  41a861:	arpl   WORD PTR [esi],di
  41a863:	mov    ecx,0x7f85428d
  41a868:	aam    0xa4
  41a86a:	cmp    dl,BYTE PTR [esi]
  41a86c:	cwde   
  41a86d:	inc    ebp
  41a86e:	and    DWORD PTR [esi],ebp
  41a870:	and    DWORD PTR [ebx-0x1721fa5d],ebx
  41a876:	mov    cs,WORD PTR [edx+0x2c]
  41a879:	adc    eax,0x16e81a84
  41a87e:	rol    BYTE PTR [ebx+0x1ef4edbe],cl
  41a884:	ins    DWORD PTR es:[edi],dx
  41a885:	or     al,0xdf
  41a887:	pushf  
  41a888:	idiv   BYTE PTR [ecx+0x31353ff1]
  41a88e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a88f:	jnp    0x41a86c
  41a891:	fadd   DWORD PTR [ebx+ebp*1+0xb]
  41a895:	ret    0xed07
  41a898:	out    dx,al
  41a899:	lods   eax,DWORD PTR ds:[esi]
  41a89a:	push   ecx
  41a89b:	out    0x76,eax
  41a89d:	inc    edx
  41a89e:	mov    ch,0x55
  41a8a0:	xchg   edi,eax
  41a8a1:	popf   
  41a8a2:	ret    
  41a8a3:	xor    edi,DWORD PTR [ebx]
  41a8a5:	jge    0x41a8bb
  41a8a7:	mov    al,0x16
  41a8a9:	cli    
  41a8aa:	neg    BYTE PTR ds:[esi+ebx*2-0x59]
  41a8af:	xor    eax,0x3b489ca1
  41a8b4:	test   DWORD PTR [ebx-0x50],edx
  41a8b7:	push   ds
  41a8b8:	aam    0xcc
  41a8ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8bb:	(bad)  
  41a8bc:	bnd cs jbe 0x41a888
  41a8c0:	jbe    0x41a86e
  41a8c2:	cld    
  41a8c3:	push   esi
  41a8c4:	in     eax,0x7e
  41a8c6:	adc    DWORD PTR [edi],edi
  41a8c8:	fs pop edx
  41a8ca:	pop    edi
  41a8cb:	pcmpeqd mm4,QWORD PTR [ebx+0x40]
  41a8cf:	push   ss
  41a8d0:	pop    eax
  41a8d1:	add    BYTE PTR [ecx],al
  41a8d3:	je     0x41a860
  41a8d5:	mov    esp,ecx
  41a8d7:	pushf  
  41a8d8:	or     eax,0xefc2df9a
  41a8dd:	adc    al,BYTE PTR [ebx+ecx*2]
  41a8e0:	mov    dh,0xe9
  41a8e2:	adc    ebp,ebp
  41a8e4:	push   edx
  41a8e5:	fbld   TBYTE PTR [ebx]
  41a8e7:	out    0xe0,eax
  41a8e9:	fwait
  41a8ea:	xor    al,0x33
  41a8ec:	cmp    BYTE PTR [ebx+0x3018f33b],bl
  41a8f2:	adc    DWORD PTR [eax+0x2c],ecx
  41a8f5:	jns    0x41a944
  41a8f7:	jg     0x41a8e4
  41a8f9:	js     0x41a8b8
  41a8fb:	pop    ds
  41a8fc:	push   eax
  41a8fd:	in     al,dx
  41a8fe:	add    al,0xbc
  41a900:	xor    esi,ebx
  41a902:	lds    ebx,FWORD PTR [ebx+0x5f95038a]
  41a908:	scas   al,BYTE PTR es:[edi]
  41a909:	out    dx,al
  41a90a:	mov    cl,dh
  41a90c:	psrlq  mm6,QWORD PTR [eax]
  41a90f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a910:	push   esp
  41a911:	push   ecx
  41a912:	dec    ecx
  41a913:	jp     0x41a96c
  41a915:	mov    edx,0xeb70e274
  41a91a:	inc    ecx
  41a91b:	push   ebx
  41a91c:	mov    WORD PTR [edi],?
  41a91e:	cmovs  ebp,ebp
  41a921:	pop    ebp
  41a922:	popf   
  41a923:	pop    ecx
  41a924:	dec    ebx
  41a925:	aas    
  41a926:	and    al,0xf8
  41a928:	call   0xa49e0aae
  41a92d:	hlt    
  41a92e:	out    0x36,eax
  41a930:	pop    ebp
  41a931:	or     ebx,edx
  41a933:	mov    esp,0x125d2822
  41a938:	dec    esp
  41a939:	mov    ecx,0x95fed14b
  41a93e:	in     eax,dx
  41a93f:	pop    es
  41a940:	pop    ss
  41a941:	pop    ss
  41a942:	add    eax,0xe5827875
  41a947:	ror    BYTE PTR [esp+esi*8-0xecb711c],cl
  41a94e:	cmp    DWORD PTR [esi],0x42
  41a951:	cdq    
  41a952:	test   cl,ch
  41a954:	cmp    esp,ebx
  41a956:	push   ebx
  41a957:	adc    BYTE PTR [ecx+0x19],al
  41a95a:	outs   dx,DWORD PTR ds:[esi]
  41a95b:	sbb    esp,DWORD PTR [edx+0x2a]
  41a95e:	lahf   
  41a95f:	(bad)  
  41a960:	mov    BYTE PTR [ebx],0x83
  41a963:	sub    eax,0xb2232495
  41a968:	lahf   
  41a969:	jns    0x41a908
  41a96b:	sbb    al,0xad
  41a96d:	xor    BYTE PTR [ecx],al
  41a96f:	es xor al,0x5c
  41a972:	xor    BYTE PTR [edi+0x66358eb6],ah
  41a978:	mov    DWORD PTR [esi+0x18ded8d7],ebx
  41a97e:	mov    esp,0x8abf8b91
  41a983:	cmp    al,0x2c
  41a985:	hlt    
  41a986:	js     0x41a959
  41a988:	xchg   ebx,eax
  41a989:	iret   
  41a98a:	aam    0x9b
  41a98c:	adc    esi,DWORD PTR [ebp-0x40]
  41a98f:	jmp    0xe39c:0x9569a7b4
  41a996:	aaa    
  41a997:	sub    esp,DWORD PTR [ebp+0x41]
  41a99a:	test   eax,0x3d745a42
  41a99f:	xlat   BYTE PTR ds:[ebx]
  41a9a0:	sub    BYTE PTR [eax+0x26],ch
  41a9a3:	pop    ecx
  41a9a4:	jbe    0x41a999
  41a9a6:	dec    ebp
  41a9a7:	inc    ebp
  41a9a8:	xor    ch,ch
  41a9aa:	and    ah,BYTE PTR [esi+0x67]
  41a9ad:	adc    edx,edi
  41a9af:	mov    ch,0x7a
  41a9b1:	jmp    0x41a9d8
  41a9b3:	fsubp  st(6),st
  41a9b5:	add    eax,0x64817b33
  41a9ba:	xor    esp,edx
  41a9bc:	ja     0x41aa09
  41a9be:	and    ch,BYTE PTR [edi]
  41a9c0:	push   edx
  41a9c1:	pop    ss
  41a9c2:	test   dl,bl
  41a9c4:	fldcw  WORD PTR [ebp+0x73]
  41a9c7:	jmp    0x1cc668cc
  41a9cc:	out    dx,al
  41a9cd:	adc    eax,0x9c27d5c9
  41a9d2:	stos   DWORD PTR es:[edi],eax
  41a9d3:	jmp    0xcab147c7
  41a9d8:	or     edi,ebx
  41a9da:	xor    al,0x52
  41a9dc:	sbb    eax,0x1bcf742d
  41a9e1:	sub    ah,BYTE PTR [ecx+0x16]
  41a9e4:	nop
  41a9e5:	imul   edx,DWORD PTR [esi-0x7e],0x2e1b5fd7
  41a9ec:	and    ebp,DWORD PTR [esi]
  41a9ee:	iret   
  41a9ef:	pop    edx
  41a9f0:	in     eax,0xa6
  41a9f2:	mov    bh,0xef
  41a9f4:	test   al,0xd7
  41a9f6:	outs   dx,DWORD PTR ds:[esi]
  41a9f7:	inc    esi
  41a9f8:	cmc    
  41a9f9:	jl     0x41aa48
  41a9fb:	cmp    dh,0xd8
  41a9fe:	leave  
  41a9ff:	pop    ss
  41aa00:	popf   
  41aa01:	cwde   
  41aa02:	mov    edi,0x1741224f
  41aa07:	jecxz  0x41aa62
  41aa09:	js     0x41a9eb
  41aa0b:	bound  esi,QWORD PTR ds:[edi+0xf]
  41aa0f:	(bad)  
  41aa10:	adc    cl,BYTE PTR [eax-0x2001833]
  41aa16:	push   eax
  41aa17:	push   ebp
  41aa18:	nop
  41aa19:	scas   eax,DWORD PTR es:[edi]
  41aa1a:	loope  0x41a9a1
  41aa1c:	scas   eax,DWORD PTR es:[edi]
  41aa1d:	mov    esp,0x190fd76f
  41aa22:	sti    
  41aa23:	cmp    al,0xec
  41aa25:	inc    ebp
  41aa26:	dec    edi
  41aa27:	jb     0x41aa04
  41aa29:	test   bh,0xe9
  41aa2c:	imul   ebx,DWORD PTR [edx+0x72],0x48af38dd
  41aa33:	fst    st(3)
  41aa35:	loop   0x41a9f0
  41aa37:	mov    esi,ebp
  41aa39:	out    dx,al
  41aa3a:	adc    BYTE PTR [ebx+ecx*2],bl
  41aa3d:	mov    bh,0xc3
  41aa3f:	push   ebx
  41aa40:	add    al,BYTE PTR gs:[edi+eax*1+0x4d6829a7]
  41aa48:	aas    
  41aa49:	js     0x41aa01
  41aa4b:	mov    al,ds:0x758dbae1
  41aa50:	sub    eax,0x6fd5d630
  41aa55:	pop    edi
  41aa56:	xor    DWORD PTR [ecx],0x63
  41aa59:	test   al,0xed
  41aa5b:	les    ebx,FWORD PTR [edx+esi*4+0x1]
  41aa5f:	inc    edi
  41aa60:	das    
  41aa61:	mov    WORD PTR [eax+ebp*8+0x187a62ff],gs
  41aa68:	rcl    ebx,0xba
  41aa6b:	and    eax,0xeaca25ea
  41aa70:	scas   al,BYTE PTR es:[edi]
  41aa71:	das    
  41aa72:	push   esp
  41aa73:	cdq    
  41aa74:	mov    bh,ah
  41aa76:	jne    0x41aa50
  41aa78:	das    
  41aa79:	inc    esi
  41aa7a:	xchg   BYTE PTR [edi],bh
  41aa7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa7d:	jle    0x41aabe
  41aa7f:	or     eax,0x3b27acfc
  41aa84:	aaa    
  41aa85:	and    BYTE PTR [esi+0xa6cf832],bh
  41aa8b:	retf   0xc34f
  41aa8e:	and    dh,BYTE PTR [ebx-0x5a]
  41aa91:	ins    DWORD PTR es:[edi],dx
  41aa92:	cmc    
  41aa93:	xchg   ebp,eax
  41aa94:	call   DWORD PTR [edi+0x77]
  41aa97:	out    0xdc,al
  41aa99:	aas    
  41aa9a:	cmp    cl,0x1b
  41aa9d:	sbb    DWORD PTR [ebx+ecx*1-0x2834fb07],ebx
  41aaa4:	imul   edi,DWORD PTR ds:0xc51041d5,0xe8069427
  41aaae:	mov    eax,0xb3cecdad
  41aab3:	xor    BYTE PTR [eax],bh
  41aab5:	jo     0x41ab25
  41aab7:	and    DWORD PTR [edi-0x1e],ecx
  41aaba:	fsubr  st(5),st
  41aabc:	fld    QWORD PTR [esi+0x10f0cf92]
  41aac2:	add    edi,esp
  41aac4:	retf   
  41aac5:	xor    edx,DWORD PTR [ecx]
  41aac7:	rcl    BYTE PTR [eax+edx*2+0x3b96e0f7],0xb4
  41aacf:	outs   dx,DWORD PTR ds:[esi]
  41aad0:	stc    
  41aad1:	enter  0xe5f0,0x43
  41aad5:	rcl    BYTE PTR [eax+eiz*1],0x40
  41aad9:	fidiv  WORD PTR [esi-0x15892321]
  41aadf:	xchg   esp,eax
  41aae0:	loope  0x41aa8e
  41aae2:	stos   BYTE PTR es:[edi],al
  41aae3:	mov    ecx,0x66acf264
  41aae8:	scas   al,BYTE PTR es:[edi]
  41aae9:	mov    ebp,0xbfd681da
  41aaee:	xchg   esi,eax
  41aaef:	jmp    0xc2b3:0xe94cd121
  41aaf6:	push   DWORD PTR [edi+0x16]
  41aaf9:	cmp    ch,bh
  41aafb:	mov    ds:0x76de5671,eax
  41ab00:	sub    al,0x12
  41ab02:	aas    
  41ab03:	(bad)  
  41ab04:	jns    0x41ab5c
  41ab06:	nop
  41ab07:	int    0xfd
  41ab09:	xor    DWORD PTR [ecx-0x2c],edx
  41ab0c:	or     dh,BYTE PTR [esi-0x50921a36]
  41ab12:	push   ecx
  41ab13:	lock push 0x13
  41ab16:	pop    ss
  41ab17:	es in  eax,dx
  41ab19:	lods   eax,DWORD PTR ds:[esi]
  41ab1a:	push   0x1fdf5e86
  41ab1f:	data16 or cl,BYTE PTR [ebx]
  41ab22:	pmullw mm4,QWORD PTR [ebp+0x6f]
  41ab26:	add    BYTE PTR [ebx-0x17],bh
  41ab29:	pop    ebx
  41ab2a:	push   edx
  41ab2b:	(bad)  
  41ab2c:	xor    ebx,DWORD PTR [esi-0x11]
  41ab2f:	cdq    
  41ab30:	iret   
  41ab31:	dec    ebx
  41ab32:	enter  0x6223,0x8c
  41ab36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab37:	mul    al
  41ab39:	repnz lock lds edi,FWORD PTR [edi+ecx*2+0x5bd0708d]
  41ab42:	sub    BYTE PTR [ebx+0xc],0xd8
  41ab46:	jmp    0x9f5d:0xde1c302d
  41ab4d:	add    al,0xc2
  41ab4f:	mov    bh,0xe0
  41ab51:	mov    al,0x42
  41ab53:	dec    ebp
  41ab54:	cmp    eax,edx
  41ab56:	clc    
  41ab57:	out    dx,al
  41ab58:	mov    dh,0xb3
  41ab5a:	add    BYTE PTR [ecx-0x60],dh
  41ab5d:	pop    edx
  41ab5e:	push   ss
  41ab5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab60:	sbb    eax,0x8242026c
  41ab65:	fdivr  st,st(4)
  41ab67:	sub    BYTE PTR [edi-0x6c],ah
  41ab6a:	mov    eax,ds:0x53fddfec
  41ab6f:	adc    eax,0xe8156b5f
  41ab74:	ins    BYTE PTR es:[edi],dx
  41ab75:	xchg   ebx,eax
  41ab76:	outs   dx,BYTE PTR ds:[esi]
  41ab77:	lahf   
  41ab78:	adc    DWORD PTR [esi-0x98354ac],ecx
  41ab7e:	mov    WORD PTR [edx],es
  41ab80:	and    ch,BYTE PTR [eax+0x27]
  41ab83:	dec    esp
  41ab84:	push   edi
  41ab85:	push   edx
  41ab86:	mov    al,0xe1
  41ab88:	pop    es
  41ab89:	cmp    DWORD PTR [edx],ebx
  41ab8b:	mul    DWORD PTR [ebp+eiz*4+0x3b996cc8]
  41ab92:	push   cs
  41ab93:	xor    BYTE PTR [edx-0x1f],0xc1
  41ab97:	fsub   DWORD PTR [ebx]
  41ab99:	push   ss
  41ab9a:	cmp    eax,0x39c5f2d7
  41ab9f:	or     eax,DWORD PTR [ebp+0x61d73b81]
  41aba5:	mov    esp,0x6fa60ca4
  41abaa:	xor    eax,0xe40015f4
  41abaf:	stos   BYTE PTR es:[edi],al
  41abb0:	cmp    bh,bl
  41abb2:	call   0xca3a:0x73ca7296
  41abb9:	pop    es
  41abba:	(bad)  
  41abbc:	mov    ds:0x1d6b7f,al
  41abc1:	dec    eax
  41abc2:	popf   
  41abc3:	sahf   
  41abc4:	scas   al,BYTE PTR es:[edi]
  41abc5:	dec    edi
  41abc6:	inc    esp
  41abc7:	push   esi
  41abc8:	in     al,0x3a
  41abca:	les    edx,FWORD PTR [eax-0x40]
  41abcd:	xor    ecx,eax
  41abcf:	ins    BYTE PTR es:[edi],dx
  41abd0:	mov    ds:0xa72f033a,eax
  41abd5:	iret   
  41abd6:	rol    ch,cl
  41abd8:	pop    eax
  41abd9:	stc    
  41abda:	out    dx,eax
  41abdb:	or     ebp,DWORD PTR [esi+0x60]
  41abde:	stc    
  41abdf:	sub    ecx,DWORD PTR [esi]
  41abe1:	clc    
  41abe2:	cmc    
  41abe3:	data16 or al,0xfc
  41abe6:	mov    WORD PTR [ebp-0x8],gs
  41abe9:	shr    BYTE PTR [ebx],1
  41abeb:	xlat   BYTE PTR ds:[ebx]
  41abec:	test   DWORD PTR [edi+0x3e],ebx
  41abef:	jg     0x41ac35
  41abf1:	inc    ebx
  41abf2:	mov    edi,0xf1e9f613
  41abf7:	ins    DWORD PTR es:[edi],dx
  41abf8:	inc    esi
  41abf9:	xchg   ecx,eax
  41abfa:	scas   al,BYTE PTR es:[edi]
  41abfb:	je     0x41ac38
  41abfd:	mov    bh,dh
  41abff:	iret   
  41ac00:	lock fistp QWORD PTR [ebp+0xd]
  41ac04:	jmp    0x41ac30
  41ac06:	cmp    BYTE PTR [esi+0x7c],0x4f
  41ac0a:	int3   
  41ac0b:	dec    DWORD PTR [ebp-0x53876bd5]
  41ac11:	xor    DWORD PTR [ecx],ebp
  41ac13:	cmp    al,0xc4
  41ac15:	int    0x5f
  41ac17:	pop    ecx
  41ac18:	daa    
  41ac19:	pop    esp
  41ac1a:	iret   
  41ac1b:	sub    bh,BYTE PTR ds:0x986e07c5
  41ac21:	push   0x35e03d62
  41ac26:	std    
  41ac27:	shr    esp,0x5c
  41ac2a:	ds nop
  41ac2c:	xchg   DWORD PTR ds:0xa1a513b7,edi
  41ac32:	xchg   esi,eax
  41ac33:	mov    al,0x2f
  41ac35:	or     cl,dh
  41ac37:	cmp    al,0x34
  41ac39:	in     eax,0x4c
  41ac3b:	(bad)  [ecx+0xd1f6258]
  41ac41:	test   DWORD PTR [edx],edx
  41ac43:	xchg   ebp,eax
  41ac44:	(bad)  
  41ac45:	lods   eax,DWORD PTR ds:[esi]
  41ac46:	ds jmp 0x41ac2a
  41ac49:	loope  0x41ac60
  41ac4b:	and    eax,0x4a77229f
  41ac50:	add    DWORD PTR [edx-0x57],0x35905dc1
  41ac57:	jmp    0x41ac01
  41ac59:	inc    ebp
  41ac5a:	and    edi,DWORD PTR [ebp-0x60]
  41ac5d:	add    ecx,edx
  41ac5f:	cld    
  41ac60:	xor    cl,BYTE PTR [ecx+0x4]
  41ac63:	ins    DWORD PTR es:[edi],dx
  41ac64:	in     eax,0x5e
  41ac66:	sub    DWORD PTR [ebp+0x43],ebp
  41ac69:	jnp    0x41ac30
  41ac6b:	xchg   edi,eax
  41ac6c:	sub    DWORD PTR [ebx+ebp*1],ecx
  41ac6f:	adc    DWORD PTR [edx-0x1e1d4b2e],esi
  41ac75:	mov    eax,ds:0x69507be5
  41ac7a:	sbb    al,0x7f
  41ac7c:	out    dx,eax
  41ac7d:	je     0x41ac16
  41ac7f:	xor    dl,BYTE PTR [edi-0x3418a3d3]
  41ac85:	aaa    
  41ac86:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41ac88:	sub    al,BYTE PTR ds:0x70f3bcd6
  41ac8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac8f:	cmc    
  41ac90:	jp     0x41ac56
  41ac92:	mov    edx,0x123f0627
  41ac97:	push   0x7f
  41ac99:	mov    eax,0x31fb3fbb
  41ac9e:	inc    eax
  41ac9f:	jmp    0x2108:0xb5750dac
  41aca6:	and    al,0x26
  41aca8:	jmp    0x20d9b0bd
  41acad:	pop    edi
  41acae:	add    ebp,ebx
  41acb0:	add    esp,DWORD PTR [ebx+ebp*1]
  41acb3:	rcl    DWORD PTR [edx+edx*2],1
  41acb6:	das    
  41acb7:	(bad)  
  41acb8:	rcl    DWORD PTR [eax+eax*8],0xcc
  41acbc:	pop    esi
  41acbd:	dec    ebp
  41acbe:	cld    
  41acbf:	arpl   WORD PTR [ebx],dx
  41acc1:	data16 sub dh,ah
  41acc4:	fsubr  DWORD PTR [edi+0x1c]
  41acc7:	push   edi
  41acc8:	pop    edi
  41acc9:	mov    ds:0xa44c5c3,eax
  41acce:	into   
  41accf:	icebp  
  41acd0:	(bad)  
  41acd1:	xor    bh,BYTE PTR [esi]
  41acd3:	inc    esp
  41acd4:	test   al,0x38
  41acd6:	push   ss
  41acd7:	in     eax,0xaa
  41acd9:	and    BYTE PTR [esi+0x5d8ad597],ch
  41acdf:	test   eax,0x9f974916
  41ace4:	nop
  41ace5:	adc    ebx,DWORD PTR [ebp+0x6c]
  41ace8:	addr16 (bad) 
  41acea:	clc    
  41aceb:	mov    ?,eax
  41aced:	xor    bh,BYTE PTR [eax+edx*1-0x5fc7eb46]
  41acf4:	mov    WORD PTR [esi+0x5c],es
  41acf7:	inc    edi
  41acf8:	sub    ebx,DWORD PTR [eax+0x8b8c1a8]
  41acfe:	xchg   ecx,eax
  41acff:	int3   
  41ad00:	push   ebx
  41ad01:	push   edi
  41ad02:	cdq    
  41ad03:	xor    ebx,DWORD PTR [edi+0x2fb8b159]
  41ad09:	shr    BYTE PTR ds:0xaa626ff5,cl
  41ad0f:	mov    ds:0x29b11fa3,al
  41ad14:	inc    ebx
  41ad15:	stos   DWORD PTR es:[edi],eax
  41ad16:	dec    ebx
  41ad17:	and    al,BYTE PTR [edx+0x6b]
  41ad1a:	lods   al,BYTE PTR ds:[esi]
  41ad1b:	push   bp
  41ad1d:	stos   BYTE PTR es:[edi],al
  41ad1e:	int    0xdb
  41ad20:	sub    BYTE PTR ds:0x5708cc22,dh
  41ad26:	bound  ecx,QWORD PTR [ecx+0x48]
  41ad29:	jl     0x41ad73
  41ad2b:	imul   ebp,DWORD PTR [esi+0x47a67589],0x44
  41ad32:	int    0x30
  41ad34:	sbb    cl,BYTE PTR [ecx-0x1d94a6d1]
  41ad3a:	jns    0x41ad42
  41ad3c:	fadd   DWORD PTR [ebp+eiz*8+0x5d]
  41ad40:	jmp    0x41ad5e
  41ad42:	push   ss
  41ad43:	std    
  41ad44:	cmp    DWORD PTR [edx],edi
  41ad46:	test   dl,cl
  41ad48:	nop
  41ad49:	out    0x89,eax
  41ad4b:	jle    0x41ad8c
  41ad4d:	(bad)  
  41ad4e:	es repnz leave 
  41ad51:	cmp    eax,0x229511aa
  41ad56:	dec    ebx
  41ad57:	dec    edx
  41ad58:	jo     0x41ad21
  41ad5a:	mov    bh,0x98
  41ad5c:	cmp    ecx,DWORD PTR [ebp-0x39]
  41ad5f:	test   al,0xce
  41ad61:	dec    eax
  41ad62:	sbb    dl,BYTE PTR [eax]
  41ad64:	fnstcw WORD PTR fs:[ebp+0x3c]
  41ad68:	fstp   QWORD PTR [ebx]
  41ad6a:	adc    al,0x27
  41ad6c:	jne    0x41ad51
  41ad6e:	dec    esi
  41ad6f:	fs sbb al,ah
  41ad72:	mov    ch,0x80
  41ad74:	fist   WORD PTR [ecx-0x6b]
  41ad77:	addr16 dec ecx
  41ad79:	cmc    
  41ad7a:	sar    ebx,1
  41ad7c:	mov    ch,0xe3
  41ad7e:	sub    BYTE PTR [eax],cl
  41ad80:	hlt    
  41ad81:	int3   
  41ad82:	mov    eax,0xe52592af
  41ad87:	loopne 0x41ade2
  41ad89:	clc    
  41ad8a:	adc    ebp,DWORD PTR [ebp+edi*2+0x17f60ca3]
  41ad91:	xchg   esi,eax
  41ad92:	cmp    ah,al
  41ad94:	mov    ch,0x36
  41ad96:	sub    dl,0xed
  41ad99:	out    dx,eax
  41ad9a:	lea    edx,[edx-0x79918d3f]
  41ada0:	xchg   esp,eax
  41ada1:	or     eax,DWORD PTR [ebp+0x14d7733a]
  41ada7:	fwait
  41ada8:	xchg   edx,eax
  41ada9:	push   esi
  41adaa:	jno    0x41ae20
  41adac:	pop    edi
  41adad:	xor    bl,BYTE PTR [ebx+0x28]
  41adb0:	lock mov edx,0xde34c059
  41adb6:	retf   0xb64
  41adb9:	pop    esi
  41adba:	out    0xc4,al
  41adbc:	loopne 0x41adca
  41adbe:	sbb    dh,BYTE PTR [edi+0x3d]
  41adc1:	or     BYTE PTR [edx+0x3],cl
  41adc4:	cmp    esi,DWORD PTR [esi]
  41adc6:	cmp    edi,DWORD PTR [edi-0x73]
  41adc9:	mov    ebx,DWORD PTR [ecx-0x6230353d]
  41adcf:	jb     0x41ad91
  41add1:	gs pop ds
  41add3:	ror    BYTE PTR [edx],cl
  41add5:	pop    ds
  41add6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41add7:	cmp    al,0xdd
  41add9:	jne    0x41ae49
  41addb:	add    edi,DWORD PTR [edx]
  41addd:	fcomp  QWORD PTR [eax+0x7c27efd0]
  41ade3:	cmp    eax,0xeda67e1f
  41ade8:	fimul  WORD PTR [edx+0x42]
  41adeb:	xor    DWORD PTR [ebx],edx
  41aded:	aam    0x32
  41adef:	(bad)  
  41adf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41adf1:	sub    eax,0x874dc54e
  41adf6:	xchg   ecx,eax
  41adf7:	in     al,0x7
  41adf9:	adc    eax,0xcc986ff5
  41adfe:	retf   
  41adff:	call   DWORD PTR [edi+0x1a9dbbe1]
  41ae05:	rcr    DWORD PTR [eax+0x6c],1
  41ae08:	test   BYTE PTR [edx-0xe],dh
  41ae0b:	mov    ebp,0xdd5bc51f
  41ae10:	push   ebp
  41ae11:	imul   edi,edx,0xae8f9f7e
  41ae17:	sbb    BYTE PTR [edx+eax*2+0x1f1c0c1b],al
  41ae1e:	(bad)  [ecx+0x733207b9]
  41ae24:	jmp    0x41ae73
  41ae26:	push   es
  41ae27:	cmp    bl,BYTE PTR cs:[esi+0x66]
  41ae2b:	mov    ebx,0xcf8037ca
  41ae30:	mov    BYTE PTR [ebx+0x4328107c],bl
  41ae36:	pushf  
  41ae37:	adc    BYTE PTR [edx],dl
  41ae39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae3a:	jle    0x41ae9f
  41ae3c:	mov    dh,0xcb
  41ae3e:	test   DWORD PTR [esp+eax*4-0x41],0x4b040fa6
  41ae46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae47:	mov    ?,WORD PTR [edi]
  41ae49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae4a:	mov    WORD PTR [edx+0xf],es
  41ae4d:	sub    ebp,ebp
  41ae4f:	adc    BYTE PTR [ebx-0x578b7195],ch
  41ae55:	fdiv   QWORD PTR [ecx-0x1f8af632]
  41ae5b:	xlat   BYTE PTR ds:[ebx]
  41ae5c:	xlat   BYTE PTR ds:[ebx]
  41ae5d:	sbb    DWORD PTR [edx],0xffffffed
  41ae60:	retf   0x1363
  41ae63:	xchg   DWORD PTR [ebp-0x76d4671a],ebx
  41ae69:	dec    ebx
  41ae6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae6b:	mov    ecx,0x35a101b1
  41ae70:	ss mov ecx,0x2f60cd52
  41ae76:	jmp    0xb89f3a
  41ae7b:	icebp  
  41ae7c:	or     dh,BYTE PTR [ecx+0x8]
  41ae7f:	retf   
  41ae80:	push   eax
  41ae81:	mov    dl,0xf1
  41ae83:	add    al,0x9c
  41ae85:	je     0x41ae39
  41ae87:	repz push esi
  41ae89:	cmp    eax,0x3d9f16ea
  41ae8e:	mov    ebx,DWORD PTR [ebx+0x34]
  41ae91:	inc    edx
  41ae92:	aas    
  41ae93:	in     eax,dx
  41ae94:	push   ss
  41ae95:	lock imul ebp,DWORD PTR [esi-0x1c],0xb368b4ff
  41ae9d:	xor    cl,BYTE PTR [edx-0x7]
  41aea0:	add    eax,0x232c2c54
  41aea5:	mov    bh,0x3f
  41aea7:	mov    cl,0xe7
  41aea9:	shr    ch,cl
  41aeab:	add    DWORD PTR [edx-0x1da0f81c],esi
  41aeb1:	js     0x41aedd
  41aeb3:	cmp    DWORD PTR [eax-0x2],esi
  41aeb6:	into   
  41aeb7:	pop    ds
  41aeb8:	gs xchg ebx,eax
  41aeba:	dec    edi
  41aebb:	ins    BYTE PTR es:[edi],dx
  41aebc:	jl     0x41aeaa
  41aebe:	mov    edi,0x61595267
  41aec3:	mov    eax,ds:0xb2969f3f
  41aec8:	mov    bh,0x82
  41aeca:	xor    BYTE PTR [ebp-0x13],al
  41aecd:	call   0xf2265521
  41aed2:	in     eax,dx
  41aed3:	sub    DWORD PTR [eax],ecx
  41aed5:	arpl   WORD PTR [edi],dx
  41aed7:	mov    ds:0x25ff905a,eax
  41aedc:	shl    ecx,0xe5
  41aedf:	jbe    0x41aeaa
  41aee1:	mov    bx,0xeb72
  41aee5:	dec    ebx
  41aee6:	push   edx
  41aee7:	fucomp st(4)
  41aee9:	fld    TBYTE PTR [esi]
  41aeeb:	addr16 jge 0x41aeed
  41aeee:	imul   esp,DWORD PTR [edi+esi*1],0xffffff80
  41aef2:	inc    esi
  41aef3:	dec    esi
  41aef4:	cdq    
  41aef5:	or     ecx,ecx
  41aef7:	mov    eax,ebp
  41aef9:	mov    ah,0x55
  41aefb:	or     ah,cl
  41aefd:	sub    DWORD PTR ds:0x60011b2a,0x74a9a924
  41af07:	fisub  WORD PTR [ebx]
  41af09:	lea    esp,[ebp-0x2a]
  41af0c:	dec    edi
  41af0d:	push   ss
  41af0e:	leave  
  41af0f:	hlt    
  41af10:	imul   eax,DWORD PTR [edx],0xffffffbc
  41af13:	iret   
  41af14:	add    al,0x9a
  41af16:	and    DWORD PTR [ebx+0x545dacf5],0x7
  41af1d:	adc    edi,edi
  41af1f:	cwde   
  41af20:	mov    esp,0x599369a
  41af25:	mov    DWORD PTR [eax-0x69],ecx
  41af28:	adc    dl,BYTE PTR [edx+0x2f]
  41af2b:	or     ebx,DWORD PTR [ecx+0x48]
  41af2e:	fs push ds
  41af30:	data16 fsub DWORD PTR [eax+0x49]
  41af34:	sbb    BYTE PTR [eax],al
  41af36:	jns    0x41af78
  41af38:	sub    al,0xec
  41af3a:	dec    ebp
  41af3b:	mov    ecx,0x5ec8dd8
  41af40:	or     DWORD PTR [esi],ebp
  41af42:	sbb    ecx,0xdae9b937
  41af48:	outs   dx,DWORD PTR ds:[esi]
  41af49:	ins    BYTE PTR es:[edi],dx
  41af4a:	hlt    
  41af4b:	fistp  DWORD PTR [eax+0x19]
  41af4e:	sbb    ecx,DWORD PTR [ebx+0x63]
  41af51:	aam    0xc3
  41af53:	sahf   
  41af54:	scas   eax,DWORD PTR es:[edi]
  41af55:	adc    edx,DWORD PTR [ecx-0x6]
  41af58:	dec    ecx
  41af59:	test   eax,0xf58827da
  41af5e:	cmp    eax,DWORD PTR [edx]
  41af60:	test   ebp,eax
  41af62:	cmp    edi,DWORD PTR [esi]
  41af64:	cmp    eax,0x521d228b
  41af69:	imul   ebp,DWORD PTR [ecx],0x6aba9f48
  41af6f:	mov    dh,0x6
  41af71:	popf   
  41af72:	dec    esi
  41af73:	rcr    eax,0x2f
  41af76:	sub    eax,0x264ffb97
  41af7b:	sub    ebx,ebx
  41af7d:	cmp    al,0x6c
  41af7f:	sub    al,0xe8
  41af81:	ret    
  41af82:	sbb    al,0xcb
  41af84:	push   esp
  41af85:	dec    ebp
  41af86:	ffree  st(5)
  41af88:	mov    cl,0x9f
  41af8a:	adc    eax,0x29f47c22
  41af8f:	inc    edi
  41af90:	popf   
  41af91:	aam    0x21
  41af93:	mov    WORD PTR [edx],fs
  41af95:	mov    edi,0xab434205
  41af9a:	cmp    al,0xc0
  41af9c:	mov    ds:0x332d29b4,al
  41afa1:	loop   0x41af41
  41afa3:	sbb    BYTE PTR [ebx-0x30],bl
  41afa6:	sbb    al,0xe1
  41afa8:	je     0x41afb4
  41afaa:	push   esp
  41afab:	mov    ecx,0x7584351a
  41afb0:	pop    ebp
  41afb1:	adc    bh,BYTE PTR [ecx-0x2c]
  41afb4:	cmc    
  41afb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41afb6:	aaa    
  41afb7:	push   edx
  41afb8:	ins    DWORD PTR es:[edi],dx
  41afb9:	call   0x250ddd59
  41afbe:	sub    eax,0x3e7b4a76
  41afc3:	hlt    
  41afc4:	pop    ds
  41afc5:	push   ecx
  41afc6:	fs cli 
  41afc8:	gs aaa 
  41afca:	sub    al,0x95
  41afcc:	in     al,0xdc
  41afce:	je     0x41b04b
  41afd0:	clc    
  41afd1:	push   es
  41afd2:	xchg   ebx,eax
  41afd3:	mov    esp,0xf51432b8
  41afd8:	cdq    
  41afd9:	repz push ds
  41afdb:	xchg   BYTE PTR [eax],bl
  41afdd:	neg    BYTE PTR [edi]
  41afdf:	leave  
  41afe0:	imul   eax,DWORD PTR [edx],0xd8d616c6
  41afe6:	mov    esi,0x8edd066e
  41afeb:	or     ch,ch
  41afed:	jg     0x41aff1
  41afef:	mov    bl,0x65
  41aff1:	and    al,0x1b
  41aff3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aff4:	jno    0x41afdc
  41aff6:	sbb    edi,0xffffff8f
  41aff9:	and    bl,BYTE PTR [eax]
  41affb:	imul   edx,DWORD PTR [ecx+edx*2],0xb4f1fa50
  41b002:	int3   
  41b003:	cld    
  41b004:	pop    es
  41b005:	popa   
  41b006:	fisub  WORD PTR [ebp+eax*4-0x46e15261]
  41b00d:	mov    ch,0x99
  41b00f:	rep ins DWORD PTR es:[edi],dx
  41b011:	inc    esi
  41b012:	mov    eax,ds:0x34d8daa6
  41b017:	call   0x50783722
  41b01c:	mov    ebx,esp
  41b01e:	gs in  al,0x3
  41b021:	std    
  41b022:	jp     0x41afb7
  41b024:	mov    bl,0x11
  41b026:	stos   BYTE PTR es:[edi],al
  41b027:	aam    0x55
  41b029:	in     al,dx
  41b02a:	iret   
  41b02b:	dec    esi
  41b02c:	xchg   BYTE PTR [esp+ebp*2-0x66],dl
  41b030:	jge    0x41b07f
  41b032:	pop    edx
  41b033:	push   0x38
  41b035:	(bad)  
  41b036:	mov    ds:0x11355f7b,al
  41b03b:	jmp    0x41b00e
  41b03d:	inc    ebp
  41b03e:	cdq    
  41b03f:	outs   dx,BYTE PTR ds:[esi]
  41b040:	inc    esi
  41b041:	add    eax,0x7e7f37b2
  41b046:	mov    ch,0x43
  41b048:	cmp    ah,bh
  41b04a:	inc    edi
  41b04b:	pop    esi
  41b04c:	dec    edx
  41b04d:	out    dx,al
  41b04e:	dec    edx
  41b04f:	inc    esp
  41b050:	test   esp,ecx
  41b052:	pop    ebx
  41b053:	retf   0x9274
  41b056:	cmp    al,bh
  41b058:	mov    bl,0xca
  41b05a:	sbb    eax,DWORD PTR [edx+0x46]
  41b05d:	dec    ebx
  41b05e:	rol    DWORD PTR ds:0xb8a9ff3f,cl
  41b064:	mov    eax,ds:0xa2547bf
  41b069:	lods   al,BYTE PTR ds:[esi]
  41b06a:	push   ds
  41b06b:	lods   al,BYTE PTR ds:[esi]
  41b06c:	dec    eax
  41b06d:	push   ecx
  41b06e:	pusha  
  41b06f:	dec    ebx
  41b070:	stos   BYTE PTR es:[edi],al
  41b071:	jmp    0x41b07b
  41b073:	mov    ah,0x52
  41b075:	lock push ss
  41b077:	(bad)  
  41b078:	mov    esi,0xa5492c0d
  41b07d:	ret    
  41b07e:	cmovp  ebx,DWORD PTR [edx+0xa]
  41b082:	mov    ebx,edx
  41b084:	add    al,0x59
  41b086:	test   DWORD PTR [ebp-0x12],edx
  41b089:	sbb    eax,0x4da6e743
  41b08e:	add    eax,0x54d08a11
  41b093:	dec    esi
  41b094:	xchg   edx,eax
  41b095:	pop    eax
  41b096:	into   
  41b097:	or     al,0xc2
  41b099:	mov    eax,ds:0xdf7c42f2
  41b09e:	xchg   ebp,eax
  41b09f:	test   BYTE PTR [esi-0x2ef59444],0xe9
  41b0a6:	sti    
  41b0a7:	sbb    DWORD PTR [edi+0x47],edi
  41b0aa:	adc    dl,bh
  41b0ac:	lock push esi
  41b0ae:	lods   al,BYTE PTR ds:[esi]
  41b0af:	nop
  41b0b0:	adc    DWORD PTR [esi],eax
  41b0b2:	xor    edi,0x76
  41b0b5:	div    BYTE PTR ds:0xb98a3f96
  41b0bb:	outs   dx,BYTE PTR ds:[esi]
  41b0bc:	add    dh,BYTE PTR ds:0xdf6ce50e
  41b0c2:	pop    es
  41b0c3:	sbb    BYTE PTR [ebx+0x5307e9b3],bh
  41b0c9:	dec    edx
  41b0ca:	sub    bl,BYTE PTR [edx+ebx*2+0x16]
  41b0ce:	aas    
  41b0cf:	aam    0x19
  41b0d1:	shl    DWORD PTR ds:0xe368c7a6,1
  41b0d7:	sti    
  41b0d8:	neg    ah
  41b0da:	shr    DWORD PTR ds:0x108da428,1
  41b0e0:	push   0xffffffaa
  41b0e2:	retf   
  41b0e3:	loopne 0x41b15b
  41b0e5:	loopne 0x41b069
  41b0e7:	lds    edx,FWORD PTR [edx+0x37]
  41b0ea:	icebp  
  41b0eb:	mov    ah,0x5d
  41b0ed:	ficomp DWORD PTR [edi-0x2c753d56]
  41b0f3:	xchg   ecx,eax
  41b0f4:	outs   dx,DWORD PTR ds:[esi]
  41b0f5:	shr    DWORD PTR [ebp+0x7a943ff],1
  41b0fb:	in     al,0xff
  41b0fd:	cdq    
  41b0fe:	leave  
  41b0ff:	pop    ebp
  41b100:	outs   dx,DWORD PTR ds:[esi]
  41b101:	in     eax,dx
  41b102:	and    DWORD PTR ds:0xf884f9da,esi
  41b108:	call   0x5eb7:0xeb3a4c1d
  41b10f:	icebp  
  41b110:	stos   DWORD PTR es:[edi],eax
  41b111:	fist   WORD PTR [ebp-0x142188e5]
  41b117:	dec    ebp
  41b118:	ror    DWORD PTR [esi+0x30],0xac
  41b11c:	mov    ds:0xfbdcaeb2,eax
  41b121:	mov    dh,0xdc
  41b123:	jae    0x41b12d
  41b125:	mov    eax,0x83b49d10
  41b12a:	dec    edx
  41b12b:	cmp    eax,0xddd1ff1e
  41b130:	lock push ebx
  41b132:	push   ebx
  41b133:	dec    esp
  41b134:	ficom  WORD PTR [ebx+0x232030df]
  41b13a:	mov    DWORD PTR [esi+0x63],edi
  41b13d:	stc    
  41b13e:	mov    al,ds:0x898dfb7e
  41b143:	btr    DWORD PTR [eax],ebp
  41b146:	mov    ebx,DWORD PTR gs:0xfb7ae53
  41b14d:	add    ah,BYTE PTR [ebx+ebp*8]
  41b150:	xchg   ebx,eax
  41b151:	xor    ebx,DWORD PTR [eax+eiz*8]
  41b154:	sub    al,BYTE PTR [esi+0x4a351445]
  41b15a:	sbb    dh,dl
  41b15c:	jae    0x41b1ad
  41b15e:	rcr    BYTE PTR [ecx+0x37ecded5],1
  41b164:	mov    edi,DWORD PTR [edi]
  41b166:	sub    al,0x67
  41b168:	int    0xd8
  41b16a:	hlt    
  41b16b:	ret    
  41b16c:	jl     0x41b121
  41b16e:	bnd jae 0x41b1ea
  41b171:	sub    ebx,DWORD PTR [edx-0x476473da]
  41b177:	pop    edx
  41b178:	inc    ebx
  41b179:	push   0x68c8eb80
  41b17e:	add    ebx,ebx
  41b180:	sbb    DWORD PTR [ebp+0x5b],eax
  41b183:	push   ecx
  41b184:	inc    edx
  41b185:	inc    ecx
  41b186:	mov    al,0x60
  41b188:	fcmovu st,st(6)
  41b18a:	dec    esp
  41b18b:	sbb    al,0x7
  41b18d:	xchg   DWORD PTR [ebx+0x51],ecx
  41b190:	push   edx
  41b191:	scas   eax,DWORD PTR es:[edi]
  41b192:	add    esp,ebx
  41b194:	mov    bh,BYTE PTR [edx-0x3d286bc]
  41b19a:	fst    DWORD PTR ds:[ecx+0x23561edd]
  41b1a1:	mov    edi,0xe102276e
  41b1a6:	push   ecx
  41b1a7:	mul    BYTE PTR ds:0xbff49edb
  41b1ad:	jnp    0x41b1be
  41b1af:	push   cs
  41b1b0:	pop    edx
  41b1b1:	sub    al,BYTE PTR [ecx]
  41b1b3:	sub    al,0x97
  41b1b5:	int    0x29
  41b1b7:	adc    al,0x1e
  41b1b9:	and    eax,0xd85d5ef2
  41b1be:	bound  eax,QWORD PTR [esi]
  41b1c0:	fisttp WORD PTR [ebx]
  41b1c2:	add    BYTE PTR [esi-0x2a],cl
  41b1c5:	mov    ebp,0x1cd22dbe
  41b1ca:	mov    gs,WORD PTR ds:0xe178157
  41b1d0:	sub    esp,DWORD PTR [ebx+0x2f]
  41b1d3:	out    0x75,eax
  41b1d5:	xchg   esp,eax
  41b1d6:	cs jb  0x41b1e0
  41b1d9:	pop    ds
  41b1da:	xchg   esi,eax
  41b1db:	rcl    bl,1
  41b1dd:	cmp    BYTE PTR [esi],ch
  41b1df:	in     eax,0x8e
  41b1e1:	aas    
  41b1e2:	lock leave 
  41b1e4:	imul   dx,ax,0x9284
  41b1e9:	aam    0x6
  41b1eb:	std    
  41b1ec:	push   esp
  41b1ed:	jg     0x41b1df
  41b1ef:	fsubr  st(5),st
  41b1f1:	push   ebx
  41b1f2:	jbe    0x41b1a3
  41b1f4:	mov    BYTE PTR [edx+0x65],ch
  41b1f7:	int3   
  41b1f8:	inc    eax
  41b1f9:	add    DWORD PTR [esi+ecx*1],ebp
  41b1fc:	lahf   
  41b1fd:	jbe    0x41b1af
  41b1ff:	in     eax,0x18
  41b201:	(bad)  
  41b202:	into   
  41b203:	xchg   esp,eax
  41b204:	sub    eax,0x85373d2c
  41b209:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b20a:	dec    esi
  41b20b:	stos   DWORD PTR es:[edi],eax
  41b20c:	imul   esi,ecx,0x994d90fb
  41b212:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b213:	imul   ecx,edi,0xffffffcd
  41b216:	jmp    0x41b1b0
  41b218:	cwde   
  41b219:	ret    0x6126
  41b21c:	mov    edi,DWORD PTR [edi+esi*1]
  41b21f:	ja     0x41b1bf
  41b221:	xchg   ebp,eax
  41b222:	mov    BYTE PTR [edx-0x70],ah
  41b225:	add    al,0xd1
  41b227:	not    BYTE PTR [ecx]
  41b229:	jge    0x41b279
  41b22b:	shl    DWORD PTR [esi+0x77],0xe1
  41b22f:	add    cl,BYTE PTR [ecx]
  41b231:	mov    ds:0x235eb40b,al
  41b236:	aad    0x21
  41b238:	ret    
  41b239:	ja     0x41b227
  41b23b:	clc    
  41b23c:	sbb    DWORD PTR [eax-0x65],ebx
  41b23f:	call   0x1313f2c7
  41b244:	add    DWORD PTR [esi],esp
  41b246:	mov    ds:0x42e5d985,al
  41b24b:	gs dec esi
  41b24d:	or     cl,BYTE PTR [esi]
  41b24f:	out    dx,al
  41b250:	daa    
  41b251:	add    eax,0x4264bac9
  41b256:	pop    ebp
  41b257:	imul   eax,DWORD PTR [edx],0x19
  41b25a:	inc    ecx
  41b25b:	pandn  mm7,QWORD PTR [ebx]
  41b25e:	lock pop edx
  41b260:	out    dx,al
  41b261:	push   ds
  41b262:	dec    ecx
  41b263:	fcmovnbe st,st(5)
  41b265:	dec    ebp
  41b266:	sahf   
  41b267:	mov    eax,ds:0x26bcbe6c
  41b26c:	in     eax,0x9d
  41b26e:	lods   eax,DWORD PTR ds:[esi]
  41b26f:	or     BYTE PTR [edi+0x7a],bh
  41b272:	rol    DWORD PTR [edx],cl
  41b274:	std    
  41b275:	std    
  41b276:	jmp    ecx
  41b278:	push   es
  41b279:	mov    bl,0x43
  41b27b:	cdq    
  41b27c:	call   0xc709:0x35ecd0a9
  41b283:	and    dl,BYTE PTR [edi-0x303d2e6e]
  41b289:	mov    esp,0x39c015cb
  41b28e:	sbb    eax,0xe66fe7ce
  41b293:	sbb    eax,0xf958dba
  41b298:	(bad)  
  41b299:	int3   
  41b29a:	mov    ds:0x16ee73d9,eax
  41b29f:	or     eax,0x715a9274
  41b2a4:	mov    cl,0x2a
  41b2a6:	pop    ds
  41b2a7:	aaa    
  41b2a8:	xchg   esi,eax
  41b2a9:	dec    eax
  41b2aa:	xchg   esi,eax
  41b2ab:	(bad)  
  41b2ac:	rcl    BYTE PTR [ecx+ebx*4],cl
  41b2af:	push   edi
  41b2b0:	les    eax,FWORD PTR [ebx+0x34]
  41b2b3:	(bad)  
  41b2b4:	in     eax,dx
  41b2b5:	add    BYTE PTR [eax+edi*8-0x78],0xbb
  41b2ba:	mov    BYTE PTR [ecx-0x47],dl
  41b2bd:	add    eax,0xd3a2aad
  41b2c2:	(bad)  
  41b2c3:	mov    ds:0xefb9c20c,eax
  41b2c8:	mov    cl,0x68
  41b2ca:	adc    cl,al
  41b2cc:	mov    eax,ds:0xa103ee4f
  41b2d1:	jge    0x41b2af
  41b2d3:	(bad)  
  41b2d5:	ror    eax,1
  41b2d7:	pop    ebx
  41b2d8:	enter  0xde5d,0xc3
  41b2dc:	(bad)  
  41b2dd:	in     al,dx
  41b2de:	sti    
  41b2df:	clc    
  41b2e0:	xchg   edi,eax
  41b2e1:	xor    al,0xe1
  41b2e3:	cmp    al,BYTE PTR [ebp-0x443ed906]
  41b2e9:	ja     0x41b29c
  41b2eb:	xor    al,0xe9
  41b2ed:	sub    dl,BYTE PTR gs:[ecx+0x23]
  41b2f1:	jmp    0x651020a6
  41b2f6:	pop    ss
  41b2f7:	mov    ds:0x2e350b67,eax
  41b2fc:	push   edx
  41b2fd:	out    dx,al
  41b2fe:	adc    al,0xed
  41b300:	jmp    0x41b327
  41b302:	cmp    BYTE PTR [esi],dl
  41b304:	fcmovnu st,st(2)
  41b306:	dec    ebx
  41b307:	ins    BYTE PTR es:[edi],dx
  41b308:	neg    DWORD PTR [edx]
  41b30a:	int3   
  41b30b:	xor    eax,0xa51092cd
  41b310:	dec    ecx
  41b311:	or     cl,ah
  41b313:	add    DWORD PTR [edx+0x38b1b4a2],0x29
  41b31a:	das    
  41b31b:	jbe    0x41b34a
  41b31d:	dec    edx
  41b31e:	ror    bh,cl
  41b320:	xchg   BYTE PTR [ebp+0x69],ah
  41b323:	cmp    ebx,DWORD PTR [ecx+0x3cb60da2]
  41b329:	cmp    DWORD PTR [ebx],esi
  41b32b:	cwde   
  41b32c:	ret    0xa193
  41b32f:	pop    ss
  41b330:	rol    DWORD PTR [ebx+0x89dd056],1
  41b336:	icebp  
  41b337:	sub    eax,0x9248d4fd
  41b33c:	retf   
  41b33d:	rol    BYTE PTR [esi],1
  41b33f:	imul   ecx,DWORD PTR [ecx-0x11],0xffffff9b
  41b343:	pusha  
  41b344:	dec    ecx
  41b345:	pop    edi
  41b346:	mov    edi,0xddd7f926
  41b34b:	rcl    esi,1
  41b34d:	adc    al,0x64
  41b34f:	mov    al,ds:0xe682ec68
  41b354:	xchg   esp,eax
  41b355:	push   ebp
  41b356:	fnstcw WORD PTR [ecx+eax*4]
  41b359:	xchg   ebx,eax
  41b35a:	cmp    BYTE PTR [esi-0x32878905],ah
  41b360:	(bad)  ds:0x5e043f15
  41b366:	imul   BYTE PTR fs:[bp+0x46]
  41b36b:	sub    DWORD PTR [esi],0x853324e6
  41b371:	fimul  WORD PTR ds:0x81a4625d
  41b377:	cmp    BYTE PTR [ecx-0x35c10217],dh
  41b37d:	loope  0x41b31f
  41b37f:	sub    al,0x50
  41b381:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b382:	pop    es
  41b383:	adc    BYTE PTR ds:0xa0e0ad5,dh
  41b389:	mov    ds:0xeb9b4a2b,eax
  41b38e:	scas   al,BYTE PTR es:[edi]
  41b38f:	xor    al,BYTE PTR [eax+0x6ddbc883]
  41b395:	js     0x41b3a6
  41b397:	daa    
  41b398:	push   eax
  41b399:	rcr    DWORD PTR [edi+0x5b],cl
  41b39c:	push   ss
  41b39d:	pop    esi
  41b39e:	and    BYTE PTR [eax+0x6add703f],al
  41b3a4:	xchg   bh,dl
  41b3a6:	jge    0x41b418
  41b3a8:	pop    eax
  41b3a9:	(bad)  
  41b3aa:	jp     0x41b363
  41b3ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b3ad:	jns    0x41b3e4
  41b3af:	pop    edi
  41b3b0:	das    
  41b3b1:	icebp  
  41b3b2:	mov    al,ds:0x51e2ca26
  41b3b7:	push   es
  41b3b8:	xor    al,0x7f
  41b3ba:	and    ebp,DWORD PTR [esi]
  41b3bc:	or     ebx,DWORD PTR [ebp+0x57940874]
  41b3c2:	daa    
  41b3c3:	xor    al,0xe
  41b3c5:	sbb    DWORD PTR [esi+ebp*2],esi
  41b3c8:	shl    ebx,0xc5
  41b3cb:	aas    
  41b3cc:	xchg   DWORD PTR [edi],ebx
  41b3ce:	mov    dl,0xbe
  41b3d0:	mov    edi,eax
  41b3d2:	add    eax,0x6212f15f
  41b3d7:	loopne 0x41b441
  41b3d9:	cli    
  41b3da:	mov    eax,ds:0x17ea89de
  41b3df:	cmp    eax,0x9464a282
  41b3e4:	mov    ch,ah
  41b3e6:	or     al,0x0
  41b3e8:	lahf   
  41b3e9:	aas    
  41b3ea:	clc    
  41b3eb:	push   esi
  41b3ec:	mov    ds:0x962a82ce,eax
  41b3f1:	ds test bh,0x7
  41b3f5:	rol    BYTE PTR [eax-0x73],1
  41b3f8:	inc    edx
  41b3f9:	hlt    
  41b3fa:	idiv   DWORD PTR [ecx-0x1e]
  41b3fd:	adc    cl,BYTE PTR [ecx]
  41b3ff:	cwde   
  41b400:	lahf   
  41b401:	jb     0x41b425
  41b403:	xchg   ecx,eax
  41b404:	scas   eax,DWORD PTR es:[edi]
  41b405:	xchg   dl,bh
  41b407:	adc    ah,BYTE PTR [esi+0xa]
  41b40a:	(bad)  
  41b40b:	pop    ss
  41b40c:	jnp    0x41b395
  41b40e:	pop    ebx
  41b40f:	imul   esp,DWORD PTR [eax-0x12],0x20d94ccc
  41b416:	cmp    esp,DWORD PTR [esi]
  41b418:	mov    edx,0x65050f78
  41b41d:	jge    0x41b3dc
  41b41f:	dec    esi
  41b420:	inc    eax
  41b421:	push   esp
  41b422:	mov    ecx,es
  41b424:	call   0x6497:0xb1e2f4ed
  41b42b:	push   esi
  41b42c:	jnp    0x41b42a
  41b42e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b42f:	cld    
  41b430:	inc    esp
  41b431:	or     eax,0x42e223b8
  41b436:	retf   0x4648
  41b439:	mov    cl,0x34
  41b43b:	sbb    cl,bh
  41b43d:	and    eax,0x2088bd4
  41b442:	push   edx
  41b443:	stos   DWORD PTR es:[edi],eax
  41b444:	or     eax,0xa2bc72a0
  41b449:	pop    ebx
  41b44a:	adc    BYTE PTR [ebx+0x787f361c],ah
  41b450:	sbb    eax,DWORD PTR [edx-0x25]
  41b453:	paddsb mm2,mm0
  41b456:	(bad)  
  41b457:	push   ebx
  41b458:	xchg   eax,edi
  41b45a:	ds call 0x61a642e8
  41b460:	mov    edi,0x9e715c43
  41b466:	leave  
  41b467:	fidiv  DWORD PTR [ebp+0x76c54649]
  41b46d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b46e:	(bad)  
  41b470:	clc    
  41b471:	jle    0x41b463
  41b473:	inc    esi
  41b474:	sub    ebp,DWORD PTR [edx]
  41b476:	aaa    
  41b477:	push   ss
  41b478:	out    dx,eax
  41b479:	fcomp  QWORD PTR [edi-0x38]
  41b47c:	idiv   DWORD PTR ds:0xa152bc6d
  41b482:	lea    ecx,[ecx]
  41b484:	fs out 0xea,al
  41b487:	jecxz  0x41b438
  41b489:	or     DWORD PTR [edx-0x3b2d73da],eax
  41b48f:	pop    ds
  41b490:	ja     0x41b42d
  41b492:	sub    eax,0x88960e66
  41b497:	rcl    DWORD PTR [edx-0x77],1
  41b49a:	scas   al,BYTE PTR es:[edi]
  41b49b:	jg     0x41b484
  41b49d:	pmuludq mm7,QWORD PTR [bp+si]
  41b4a1:	sub    dh,bl
  41b4a3:	mov    DWORD PTR [eax-0x54e1ce2c],ebx
  41b4a9:	fadd   QWORD PTR [ebx]
  41b4ab:	enter  0x4ec8,0x39
  41b4af:	popf   
  41b4b0:	sub    dl,BYTE PTR [esi]
  41b4b2:	test   eax,0xd3485de
  41b4b7:	cs in  eax,dx
  41b4b9:	mov    eax,0x5c4691ab
  41b4be:	xor    BYTE PTR [esi-0x3d0ad3eb],al
  41b4c4:	scas   eax,DWORD PTR es:[edi]
  41b4c5:	add    esp,DWORD PTR [esi+0x3]
  41b4c8:	add    ah,dl
  41b4ca:	pushw  ss
  41b4cc:	(bad)  
  41b4cd:	push   0x6
  41b4cf:	mov    edi,cs
  41b4d1:	or     dh,BYTE PTR [ebx+0x5d539053]
  41b4d7:	adc    BYTE PTR [edx-0x11],dl
  41b4da:	rcl    cl,1
  41b4dc:	add    DWORD PTR [esi],eax
  41b4de:	mov    esi,0x472dba1a
  41b4e3:	cmp    eax,0x2c6c5215
  41b4e8:	fs inc ebp
  41b4ea:	call   0xc87b:0x8a3567c0
  41b4f1:	loop   0x41b572
  41b4f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4f4:	rcl    cl,1
  41b4f6:	sbb    esp,DWORD PTR ds:0x1815c8b4
  41b4fc:	(bad)  
  41b4fd:	and    esi,DWORD PTR [edx]
  41b4ff:	xor    BYTE PTR [edi],bh
  41b501:	xchg   esi,eax
  41b502:	pusha  
  41b503:	int    0x7a
  41b505:	mov    ah,0x42
  41b507:	test   DWORD PTR [ebp-0x6b163cc2],eax
  41b50d:	sub    al,0x85
  41b50f:	and    ah,al
  41b511:	and    BYTE PTR [ecx+0x558bb855],cl
  41b517:	or     BYTE PTR [ebx-0x5a1ead0],bh
  41b51d:	sub    ebx,edx
  41b51f:	add    ebx,DWORD PTR [ebp-0x44]
  41b522:	mov    DWORD PTR [ebp-0x44],ebx
  41b525:	mov    edx,DWORD PTR [ebp+0x8]
  41b528:	xor    edx,eax
  41b52a:	add    edx,esi
  41b52c:	jne    0x419130
  41b532:	mov    edx,DWORD PTR [ebp-0x8]
  41b535:	mov    ebx,DWORD PTR [ebp-0xc]
  41b538:	xor    edx,eax
  41b53a:	lea    edx,[edx+ebx*1+0x3272ef]
  41b541:	mov    DWORD PTR [ebp-0xc],edx
  41b544:	mov    edx,DWORD PTR [ebp-0x10]
  41b547:	xor    edx,eax
  41b549:	add    edx,esi
  41b54b:	jne    0x40ffb8
  41b551:	jmp    0x41d9ed
  41b556:	mov    ecx,DWORD PTR [ebp-0x14]
  41b559:	mov    DWORD PTR [ebp+0x8],ecx
  41b55c:	jmp    0x41b5d5
  41b561:	mov    ecx,DWORD PTR [ebp+0x8]
  41b564:	mov    edx,DWORD PTR [ebp-0x8]
  41b567:	xor    ecx,eax
  41b569:	xor    edx,eax
  41b56b:	sub    ecx,edx
  41b56d:	sub    ecx,esi
  41b56f:	xor    ecx,eax
  41b571:	mov    DWORD PTR [ebp+0x8],ecx
  41b574:	mov    ecx,DWORD PTR [ebp+0x8]
  41b577:	mov    edx,DWORD PTR [ebp-0x58]
  41b57a:	add    ecx,0x5708fa
  41b580:	imul   ecx,edx
  41b583:	mov    DWORD PTR [ebp-0x58],ecx
  41b586:	mov    ecx,DWORD PTR [ebp+0x8]
  41b589:	mov    edx,DWORD PTR [ebp-0x54]
  41b58c:	add    ecx,0x64f89c
  41b592:	or     ecx,edx
  41b594:	mov    DWORD PTR [ebp-0x54],ecx
  41b597:	mov    ecx,DWORD PTR [ebp+0x8]
  41b59a:	mov    edx,DWORD PTR [ebp-0x50]
  41b59d:	add    ecx,0x242ebcd
  41b5a3:	xor    ecx,edx
  41b5a5:	mov    DWORD PTR [ebp-0x50],ecx
  41b5a8:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5ab:	mov    edx,DWORD PTR [ebp-0x4c]
  41b5ae:	add    ecx,edi
  41b5b0:	and    ecx,edx
  41b5b2:	mov    DWORD PTR [ebp-0x4c],ecx
  41b5b5:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5b8:	mov    edx,DWORD PTR [ebp-0x48]
  41b5bb:	lea    ecx,[edx+ecx*1+0x241fcdf]
  41b5c2:	mov    DWORD PTR [ebp-0x48],ecx
  41b5c5:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5c8:	mov    edx,0xfa5e1530
  41b5cd:	sub    edx,ecx
  41b5cf:	add    edx,DWORD PTR [ebp-0x44]
  41b5d2:	mov    DWORD PTR [ebp-0x44],edx
  41b5d5:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5d8:	xor    ecx,eax
  41b5da:	add    ecx,esi
  41b5dc:	jne    0x41b561
  41b5e2:	jmp    0x41d9f9
  41b5e7:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5ea:	mov    edx,DWORD PTR [ebp-0x8]
  41b5ed:	xor    ecx,eax
  41b5ef:	xor    edx,eax
  41b5f1:	sub    ecx,edx
  41b5f3:	sub    ecx,esi
  41b5f5:	xor    ecx,eax
  41b5f7:	mov    DWORD PTR [ebp+0x8],ecx
  41b5fa:	mov    ecx,DWORD PTR [ebp+0x8]
  41b5fd:	mov    edx,DWORD PTR [ebp-0x58]
  41b600:	add    ecx,0x5708fa
  41b606:	imul   ecx,edx
  41b609:	mov    DWORD PTR [ebp-0x58],ecx
  41b60c:	mov    ecx,DWORD PTR [ebp+0x8]
  41b60f:	mov    edx,DWORD PTR [ebp-0x54]
  41b612:	add    ecx,0x64f89c
  41b618:	or     ecx,edx
  41b61a:	mov    DWORD PTR [ebp-0x54],ecx
  41b61d:	mov    ecx,DWORD PTR [ebp+0x8]
  41b620:	mov    edx,DWORD PTR [ebp-0x50]
  41b623:	add    ecx,0x242ebcd
  41b629:	xor    ecx,edx
  41b62b:	mov    DWORD PTR [ebp-0x50],ecx
  41b62e:	mov    ecx,DWORD PTR [ebp+0x8]
  41b631:	mov    edx,DWORD PTR [ebp-0x4c]
  41b634:	add    ecx,edi
  41b636:	jmp    0x41d9bb
  41b63b:	mov    ch,ah
  41b63d:	cmp    al,0x62
  41b63f:	sbb    al,0xa2
  41b641:	test   BYTE PTR [edi+ebp*2-0x3fddf391],al
  41b648:	int3   
  41b649:	sub    DWORD PTR [edx],esi
  41b64b:	pop    esi
  41b64c:	std    
  41b64d:	jns    0x41b6c9
  41b64f:	adc    bl,BYTE PTR [edi+0x7a]
  41b652:	jp     0x41b69b
  41b654:	sub    al,0xe9
  41b656:	mov    bl,0x2b
  41b658:	xchg   edx,eax
  41b659:	adc    ebx,DWORD PTR [ebp+0x7123b976]
  41b65f:	cmp    al,0x5b
  41b661:	add    esp,edi
  41b663:	les    eax,FWORD PTR [esi+0x5152b133]
  41b669:	aad    0x47
  41b66b:	inc    ebx
  41b66c:	and    BYTE PTR [eax-0x4b],0x6a
  41b670:	adc    esp,DWORD PTR [ebp+0x797fb0f5]
  41b676:	cli    
  41b677:	xor    dl,BYTE PTR [ebp+0x76]
  41b67a:	xchg   BYTE PTR [eax-0x6d149f83],ch
  41b680:	sbb    dl,0xc
  41b683:	mov    ah,0x4
  41b685:	xchg   ebp,eax
  41b686:	(bad)
  41b689:	sahf   
  41b68a:	aad    0xd6
  41b68c:	sub    al,0x98
  41b68e:	jle    0x41b698
  41b690:	mov    dh,0x9f
  41b692:	sub    ah,BYTE PTR [ebx]
  41b694:	mov    bl,0xc
  41b696:	sbb    ch,BYTE PTR [esi]
  41b698:	add    ah,dh
  41b69a:	stc    
  41b69b:	retf   0x48bf
  41b69e:	adc    BYTE PTR [eax+0x7f],dh
  41b6a1:	sub    edi,DWORD PTR [eax-0x6c6e71ab]
  41b6a7:	rcl    BYTE PTR [ebx+0x3],0xb0
  41b6ab:	jecxz  0x41b688
  41b6ad:	daa    
  41b6ae:	(bad)  
  41b6af:	and    edx,DWORD PTR [edi+ebx*2]
  41b6b2:	cwde   
  41b6b3:	je     0x41b652
  41b6b5:	push   cs
  41b6b6:	and    dh,BYTE PTR [esi-0x1b]
  41b6b9:	mov    ds:0x64ee31c7,eax
  41b6be:	cdq    
  41b6bf:	stc    
  41b6c0:	jecxz  0x41b738
  41b6c2:	cdq    
  41b6c3:	push   edx
  41b6c4:	cmp    eax,DWORD PTR [esi+ebx*4]
  41b6c7:	jmp    0xf2c7e4e7
  41b6cc:	mov    ecx,DWORD PTR [edi]
  41b6ce:	mov    eax,ds:0x333dddce
  41b6d3:	(bad)  
  41b6d4:	push   edx
  41b6d5:	and    ebx,DWORD PTR ds:0x6241a7a2
  41b6db:	in     al,0xf9
  41b6dd:	lock nop
  41b6df:	inc    esi
  41b6e0:	dec    edi
  41b6e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6e2:	dec    ebp
  41b6e3:	ss inc eax
  41b6e5:	push   esp
  41b6e6:	jge    0x41b6c0
  41b6e8:	push   cs
  41b6e9:	xchg   edx,eax
  41b6ea:	jp     0x41b6a5
  41b6ec:	sbb    eax,0xc8c77a62
  41b6f1:	vpacksswb ymm2,ymm2,YMMWORD PTR [edi]
  41b6f5:	adc    DWORD PTR [esi-0x36],edx
  41b6f8:	fsubr  QWORD PTR [edx]
  41b6fa:	sbb    eax,0x890ac68d
  41b6ff:	test   al,0xf4
  41b701:	adc    al,0x8c
  41b703:	fidiv  DWORD PTR [edx-0x3590ba4b]
  41b709:	iret   
  41b70a:	ss push 0xe8498d87
  41b710:	xchg   ebp,eax
  41b711:	and    bl,cl
  41b713:	bnd jae 0x41b6e9
  41b716:	jmp    0x41b70b
  41b718:	mov    ds:0x21fa85c6,al
  41b71d:	push   edi
  41b71e:	dec    DWORD PTR [edi-0x206d09a8]
  41b724:	push   ds
  41b725:	nop
  41b726:	add    DWORD PTR [edi],0xffffffd3
  41b729:	jmp    0x41b75e
  41b72b:	jmp    0x41b76a
  41b72d:	mov    DWORD PTR [edi+0x4c1469b4],0x98ad05a4
  41b737:	xor    ah,BYTE PTR [ecx-0x6d2355ec]
  41b73d:	inc    edx
  41b73e:	lods   al,BYTE PTR ds:[esi]
  41b73f:	mov    dl,0x55
  41b741:	cmp    eax,0x5c09e330
  41b746:	mov    edx,0xbd862699
  41b74b:	dec    edx
  41b74c:	ja     0x41b79b
  41b74e:	repnz mov ds:0x55035225,eax
  41b754:	pop    ds
  41b755:	icebp  
  41b756:	mov    ch,0x6a
  41b758:	(bad)  
  41b759:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b75a:	repnz inc esi
  41b75c:	adc    edx,DWORD PTR [ecx+0x75f13f38]
  41b762:	mov    ss,WORD PTR [ecx+0x6f]
  41b765:	mov    ds:0x97efba02,al
  41b76a:	daa    
  41b76b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b76c:	jbe    0x41b731
  41b76e:	mov    bl,0x2
  41b770:	jae    0x41b7db
  41b772:	pop    esp
  41b773:	add    edi,edx
  41b775:	adc    al,0x18
  41b777:	xor    BYTE PTR [esi+edi*8+0x77192c9d],0x6a
  41b77f:	jae    0x41b7e6
  41b781:	(bad)  
  41b782:	out    0x71,al
  41b784:	cli    
  41b785:	add    al,0x3d
  41b787:	pop    eax
  41b788:	push   esi
  41b789:	pop    edi
  41b78a:	push   edi
  41b78b:	push   esi
  41b78c:	cli    
  41b78d:	test   DWORD PTR ss:[esi+0x2f],ebp
  41b791:	ss mov dh,0x35
  41b794:	xchg   ecx,eax
  41b795:	fcmovu st,st(1)
  41b797:	pop    esi
  41b798:	jb     0x41b7fd
  41b79a:	push   0xa56deada
  41b79f:	dec    ebp
  41b7a0:	in     eax,0x57
  41b7a2:	sbb    BYTE PTR [esi+0x2f4944a4],ah
  41b7a8:	or     al,0x6d
  41b7aa:	mov    eax,DWORD PTR [ebp-0x15e2fb61]
  41b7b0:	call   0xeef1:0xf5d6bcdf
  41b7b7:	ret    
  41b7b8:	in     al,dx
  41b7b9:	loop   0x41b757
  41b7bb:	cmp    ecx,0xa8509fc2
  41b7c1:	std    
  41b7c2:	mov    eax,0xf49b1e22
  41b7c7:	(bad)  
  41b7c8:	push   ds
  41b7c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7ca:	sar    BYTE PTR [ebp-0x80],cl
  41b7cd:	aas    
  41b7ce:	leave  
  41b7cf:	jle    0x41b751
  41b7d1:	imul   edi,edx,0x9b3518ca
  41b7d7:	shr    bh,0x18
  41b7da:	pop    esp
  41b7db:	call   0x2aa6daeb
  41b7e0:	jmp    0x6047:0xce967467
  41b7e7:	sub    esp,DWORD PTR [ecx]
  41b7e9:	scas   eax,DWORD PTR es:[edi]
  41b7ea:	ins    DWORD PTR es:[edi],dx
  41b7eb:	mov    edi,0xf5604145
  41b7f0:	jb     0x41b7fa
  41b7f2:	mov    ebp,0x68c9818f
  41b7f7:	jnp    0x41b81f
  41b7f9:	push   es
  41b7fa:	fwait
  41b7fb:	or     BYTE PTR [ebx+0x1bbadc],dh
  41b801:	repnz adc cx,0x3b60
  41b807:	xchg   edx,eax
  41b808:	loop   0x41b86f
  41b80a:	jno    0x41b7a9
  41b80c:	push   ss
  41b80d:	popf   
  41b80e:	retf   
  41b80f:	jle    0x41b86e
  41b811:	xchg   edx,eax
  41b812:	cdq    
  41b813:	enter  0xc29c,0xc3
  41b817:	mov    dl,BYTE PTR [esi]
  41b819:	(bad)
  41b81c:	push   esi
  41b81d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b81e:	lods   al,BYTE PTR ds:[esi]
  41b81f:	shl    DWORD PTR [ebp+0x18],cl
  41b822:	sar    BYTE PTR cs:[esi],0x45
  41b826:	loope  0x41b7cf
  41b828:	fstp   TBYTE PTR [ecx-0x658f1e1e]
  41b82e:	jmp    0x41b7cb
  41b830:	add    al,0x8f
  41b832:	jno    0x41b841
  41b834:	imul   esp,ebx,0x75789120
  41b83a:	xchg   edx,eax
  41b83b:	jbe    0x41b7c3
  41b83d:	push   ss
  41b83e:	add    eax,esp
  41b840:	push   es
  41b841:	shr    DWORD PTR [ecx],cl
  41b843:	fld    st(5)
  41b845:	outs   dx,BYTE PTR ds:[esi]
  41b846:	mov    ebx,ebp
  41b848:	mov    ?,ebp
  41b84a:	scas   eax,DWORD PTR es:[edi]
  41b84b:	xor    ecx,DWORD PTR [ecx]
  41b84d:	fimul  DWORD PTR [ebp-0x7e5d69e2]
  41b853:	jecxz  0x41b859
  41b855:	push   0x6a
  41b857:	push   edx
  41b858:	add    eax,0xec110437
  41b85d:	(bad)  
  41b85e:	std    
  41b85f:	mov    bh,BYTE PTR [edx+0x31]
  41b862:	and    al,0xf7
  41b864:	ss ss sbb eax,0xf90936d4
  41b86b:	add    eax,0x2bf3b63a
  41b870:	shl    DWORD PTR [ebx+ecx*8+0x20f3925],0x6c
  41b878:	jmp    FWORD PTR [ebp-0x47]
  41b87b:	xor    cl,dl
  41b87d:	je     0x41b8f2
  41b87f:	jnp    0x41b88d
  41b881:	daa    
  41b882:	retf   0x4a24
  41b885:	cwde   
  41b886:	dec    edx
  41b887:	pop    esp
  41b888:	push   esp
  41b889:	cmp    eax,0xaba8891f
  41b88e:	mov    cl,0x56
  41b890:	div    ebx
  41b892:	xor    eax,0x10820f99
  41b897:	jp     0x41b83e
  41b899:	stc    
  41b89a:	popf   
  41b89b:	push   cs
  41b89c:	xor    ecx,DWORD PTR [edx+0xa3bac7e]
  41b8a2:	es and eax,0x7b1ac75d
  41b8a8:	mov    esp,0xdfa0150c
  41b8ad:	sub    ah,BYTE PTR [ebx]
  41b8af:	mov    dl,0xb6
  41b8b1:	mov    cl,0xaf
  41b8b3:	jg     0x41b8f3
  41b8b5:	mov    ds,edx
  41b8b7:	pop    ds
  41b8b8:	sbb    BYTE PTR [ebp+0x22f5be28],cl
  41b8be:	es data16 in al,0xb6
  41b8c2:	dec    edx
  41b8c3:	and    al,0x95
  41b8c5:	sub    esp,DWORD PTR [ecx+0x7a]
  41b8c8:	mov    esp,0x413b086a
  41b8cd:	cs inc eax
  41b8cf:	and    DWORD PTR [edi-0x39],edx
  41b8d2:	rcl    bh,0x42
  41b8d5:	idiv   DWORD PTR cs:[edx]
  41b8d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8d9:	lods   eax,DWORD PTR ds:[esi]
  41b8da:	mov    ?,WORD PTR [ebp-0x74]
  41b8dd:	pop    ecx
  41b8de:	cs push cs
  41b8e0:	loop   0x41b914
  41b8e2:	and    eax,0xf1272e4c
  41b8e7:	gs in  eax,dx
  41b8e9:	pop    edx
  41b8ea:	aaa    
  41b8eb:	addr16 iret 
  41b8ed:	dec    ebp
  41b8ee:	inc    eax
  41b8ef:	pop    ds
  41b8f0:	xchg   DWORD PTR [esp+eiz*2+0x71],edx
  41b8f4:	mov    DWORD PTR [ebx],ecx
  41b8f6:	mov    bh,BYTE PTR [ebp+0x4c]
  41b8f9:	xchg   ch,al
  41b8fb:	xchg   ecx,eax
  41b8fc:	rol    BYTE PTR [ebp+0x2d21dd08],1
  41b902:	ss xchg esp,eax
  41b904:	ds (bad) 
  41b906:	stc    
  41b907:	jne    0x41b8a6
  41b909:	xor    eax,0x3c8fa71f
  41b90e:	fsub   QWORD PTR [ebx-0x5c9f19e5]
  41b914:	mov    edi,0xb57b8181
  41b919:	out    0xc4,al
  41b91b:	cmp    eax,0x351a7ee4
  41b920:	or     ecx,DWORD PTR [eax+0x73]
  41b923:	sub    DWORD PTR [eax],esi
  41b925:	neg    edx
  41b927:	dec    edi
  41b928:	inc    ebp
  41b929:	repnz xchg esp,eax
  41b92b:	stos   DWORD PTR es:[edi],eax
  41b92c:	jmp    0xab6edc70
  41b931:	leave  
  41b932:	mov    al,0xa
  41b934:	rol    ebx,0xf5
  41b937:	dec    edi
  41b938:	inc    ebx
  41b939:	mov    esi,0x3f000bb6
  41b93e:	xchg   ecx,eax
  41b93f:	jo     0x41b9b5
  41b941:	sub    eax,0xdad5fc4c
  41b946:	lahf   
  41b947:	xchg   edx,eax
  41b948:	add    eax,0xb76f7471
  41b94d:	or     BYTE PTR [edi+eiz*4],cl
  41b950:	and    ah,dl
  41b952:	ret    
  41b953:	ins    BYTE PTR es:[edi],dx
  41b954:	add    al,0x7
  41b956:	outs   dx,BYTE PTR ds:[esi]
  41b957:	mov    ch,0xf0
  41b959:	pop    ss
  41b95a:	adc    ebx,ecx
  41b95c:	fwait
  41b95d:	lock call 0x8044b37f
  41b963:	mov    ecx,0x84acfc3b
  41b968:	stc    
  41b969:	dec    edi
  41b96a:	mov    al,ds:0xce46e206
  41b96f:	mov    dl,0x9a
  41b971:	mov    ds:0x6d5962ce,al
  41b976:	push   edx
  41b977:	mov    edx,0x52832dd6
  41b97c:	jecxz  0x41b9f1
  41b97e:	xlat   BYTE PTR ds:[ebx]
  41b97f:	add    BYTE PTR [edx-0x3d58028a],ch
  41b985:	hlt    
  41b986:	mov    ds:0xfb867ab6,al
  41b98b:	lods   eax,DWORD PTR ds:[esi]
  41b98c:	shr    DWORD PTR [ebp+0x2d],0x5c
  41b990:	stos   BYTE PTR es:[edi],al
  41b991:	xchg   BYTE PTR [ebx-0x44],bl
  41b994:	xor    eax,0xd4eaba7b
  41b999:	out    0xdb,al
  41b99b:	xchg   ebp,eax
  41b99c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b99d:	mov    eax,0x94967ef
  41b9a2:	xchg   ebp,eax
  41b9a3:	aad    0x3b
  41b9a5:	scas   al,BYTE PTR es:[edi]
  41b9a6:	cmp    al,0x74
  41b9a8:	jp     0x41b99e
  41b9aa:	lods   eax,DWORD PTR ds:[esi]
  41b9ab:	rol    BYTE PTR [edx-0x381d9dda],1
  41b9b1:	lods   al,BYTE PTR ds:[esi]
  41b9b2:	cld    
  41b9b3:	retf   0x4e4b
  41b9b6:	imul   esi,DWORD PTR [eax-0x7f],0x44
  41b9ba:	popa   
  41b9bb:	xchg   edx,eax
  41b9bc:	dec    ecx
  41b9bd:	cmp    al,0x57
  41b9bf:	pop    eax
  41b9c0:	test   BYTE PTR [esi-0x4ebe0714],0xdb
  41b9c7:	fldenv [eax-0x3870f322]
  41b9cd:	dec    edx
  41b9ce:	and    ch,BYTE PTR [ebp-0x34]
  41b9d1:	enter  0xa914,0x7d
  41b9d5:	test   al,0xcd
  41b9d7:	test   al,0xed
  41b9d9:	sub    eax,0xdda31bc1
  41b9de:	loopne 0x41ba40
  41b9e0:	outs   dx,BYTE PTR ds:[esi]
  41b9e1:	scas   eax,DWORD PTR es:[edi]
  41b9e2:	xor    eax,0xec50435
  41b9e7:	rcr    BYTE PTR [edi+esi*4+0x9951c57],1
  41b9ee:	out    dx,eax
  41b9ef:	and    al,0x7d
  41b9f1:	adc    BYTE PTR [eax],bh
  41b9f3:	adc    eax,0xb87e38a6
  41b9f8:	loope  0x41ba61
  41b9fa:	loopne 0x41ba02
  41b9fc:	rcr    ebx,0x2e
  41b9ff:	dec    ebx
  41ba00:	inc    ebp
  41ba01:	clc    
  41ba02:	mov    ebp,0xc3951442
  41ba07:	push   esi
  41ba08:	clc    
  41ba09:	and    esp,ebp
  41ba0b:	ins    BYTE PTR es:[edi],dx
  41ba0c:	ficomp WORD PTR [edx-0x29]
  41ba0f:	(bad)  [ebx]
  41ba11:	mov    BYTE PTR [edi+0x4f],bl
  41ba14:	inc    eax
  41ba15:	sahf   
  41ba16:	xchg   ebx,eax
  41ba17:	lock jns 0x41ba25
  41ba1a:	std    
  41ba1b:	in     al,dx
  41ba1c:	out    dx,al
  41ba1d:	inc    edi
  41ba1e:	sbb    edi,DWORD PTR [ebx]
  41ba20:	nop
  41ba21:	aam    0xc0
  41ba23:	cld    
  41ba24:	leave  
  41ba25:	push   ebx
  41ba26:	xor    DWORD PTR [edx],ebx
  41ba28:	shl    DWORD PTR ds:0x7ca88e56,cl
  41ba2e:	mov    bh,0xa5
  41ba30:	fmul   st,st(3)
  41ba32:	adc    DWORD PTR [edx-0x12],edi
  41ba35:	icebp  
  41ba36:	xchg   ebp,eax
  41ba37:	aam    0x83
  41ba39:	jmp    0xcfb0476
  41ba3e:	inc    ecx
  41ba3f:	outs   dx,BYTE PTR ds:[esi]
  41ba40:	mov    al,ds:0x53660492
  41ba45:	inc    edx
  41ba46:	jmp    0xd4571d2
  41ba4b:	add    esi,0x35bab863
  41ba51:	int3   
  41ba52:	rcr    BYTE PTR [edx+0x4a6b7620],cl
  41ba58:	inc    esp
  41ba59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba5a:	dec    edi
  41ba5b:	sbb    eax,0xfbe03a29
  41ba60:	and    ah,BYTE PTR [edx-0x48dbba8d]
  41ba66:	dec    ecx
  41ba67:	shl    BYTE PTR [ebp-0xe],cl
  41ba6a:	lods   al,BYTE PTR ds:[esi]
  41ba6b:	icebp  
  41ba6c:	mov    cs,ebp
  41ba6e:	adc    bh,BYTE PTR ds:0x930ddb6d
  41ba74:	inc    edi
  41ba75:	or     BYTE PTR [edi],0xc9
  41ba78:	dec    ebp
  41ba79:	sbb    eax,0xff4ea0ad
  41ba7e:	not    DWORD PTR [ecx-0x5d]
  41ba81:	sbb    DWORD PTR [edi-0x3d],eax
  41ba84:	idiv   BYTE PTR [edx-0x43]
  41ba87:	lods   al,BYTE PTR ds:[esi]
  41ba88:	xchg   DWORD PTR [edx-0x5],eax
  41ba8b:	push   0x9
  41ba8d:	jne    0x41bad0
  41ba8f:	xor    dh,bh
  41ba91:	outs   dx,BYTE PTR ds:[esi]
  41ba92:	enter  0x6a61,0x51
  41ba96:	sub    ebp,edx
  41ba98:	out    dx,al
  41ba99:	inc    ebx
  41ba9a:	iret   
  41ba9b:	inc    edi
  41ba9c:	or     eax,0x5948c2e9
  41baa1:	and    DWORD PTR [edi-0x6b8949ce],0xdb6031f2
  41baab:	or     ecx,DWORD PTR [edx-0x2e]
  41baae:	clc    
  41baaf:	xchg   ecx,eax
  41bab0:	cdq    
  41bab1:	out    0x12,eax
  41bab3:	rcr    DWORD PTR [edx+0x7a492109],cl
  41bab9:	sbb    al,BYTE PTR [ebp+0x4f]
  41babc:	or     edi,DWORD PTR [edx+0x77]
  41babf:	jmp    esp
  41bac1:	lea    esi,[ebx+0x4e]
  41bac4:	push   ecx
  41bac5:	cmp    esi,DWORD PTR [esi+0x44]
  41bac8:	iret   
  41bac9:	in     al,dx
  41baca:	add    DWORD PTR [esi],0x1d
  41bacd:	and    ecx,esi
  41bacf:	test   DWORD PTR [edi+0x11],edi
  41bad2:	(bad)  
  41bad3:	xchg   ecx,eax
  41bad4:	std    
  41bad5:	pop    DWORD PTR [ecx]
  41bad7:	xor    ecx,ecx
  41bad9:	in     al,0xe
  41badb:	jbe    0x41bb57
  41badd:	cmc    
  41bade:	and    dh,dl
  41bae0:	aaa    
  41bae1:	add    eax,0x452f5817
  41bae6:	lods   eax,DWORD PTR ds:[esi]
  41bae7:	mov    eax,0x5b8f8698
  41baec:	xchg   BYTE PTR [eax+0x65],ah
  41baef:	les    edx,FWORD PTR [eax]
  41baf1:	jo     0x41bb12
  41baf3:	int3   
  41baf4:	aas    
  41baf5:	xchg   esi,eax
  41baf6:	les    ecx,FWORD PTR [ebp-0x10]
  41baf9:	jo     0x41bafe
  41bafb:	jne    0x41bb15
  41bafd:	mov    BYTE PTR [eax+0x22],ch
  41bb00:	test   edx,0xd90e7bea
  41bb06:	aaa    
  41bb07:	test   eax,0x98b6041d
  41bb0c:	push   0x5867762a
  41bb11:	push   0x53
  41bb13:	and    al,0x41
  41bb15:	nop
  41bb16:	sub    eax,0xf308b992
  41bb1b:	push   esi
  41bb1c:	sub    DWORD PTR [ebp-0x1185aabc],0xdabe7b02
  41bb26:	or     al,BYTE PTR [esp+esi*2]
  41bb29:	loope  0x41badd
  41bb2b:	pop    esp
  41bb2c:	dec    ebx
  41bb2d:	jo     0x41baef
  41bb2f:	xchg   esi,eax
  41bb30:	out    0x3c,al
  41bb32:	inc    esi
  41bb33:	or     DWORD PTR [edi+0x6c934cbf],edx
  41bb39:	daa    
  41bb3a:	pop    ds
  41bb3b:	add    ecx,DWORD PTR [ebx]
  41bb3d:	xchg   ebx,eax
  41bb3e:	neg    DWORD PTR [esi]
  41bb40:	xchg   BYTE PTR [eax+edx*1],al
  41bb43:	pop    ds
  41bb44:	shr    DWORD PTR [ebx+0x33],1
  41bb47:	rol    eax,1
  41bb49:	mov    esi,0x2e231d44
  41bb4e:	jbe    0x41bb16
  41bb50:	push   es
  41bb51:	sbb    ecx,DWORD PTR [esi]
  41bb53:	sar    DWORD PTR ds:0x6f5cd26c,cl
  41bb59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb5a:	inc    ecx
  41bb5b:	inc    eax
  41bb5c:	sbb    al,BYTE PTR [edi-0x5]
  41bb5f:	aas    
  41bb60:	jle    0x41bb33
  41bb62:	pop    ss
  41bb63:	in     al,0xa6
  41bb65:	hlt    
  41bb66:	fstp   QWORD PTR [ecx]
  41bb68:	scas   eax,DWORD PTR es:[edi]
  41bb69:	imul   DWORD PTR [esi+0x2cdb71b5]
  41bb6f:	jmp    0x9b3d2c5c
  41bb74:	sbb    eax,0x1afb841b
  41bb79:	pop    ebp
  41bb7a:	test   DWORD PTR [ecx+eax*2+0x39ce0b30],ecx
  41bb81:	daa    
  41bb82:	pop    ebx
  41bb83:	mov    edi,0x9180253b
  41bb88:	retf   0x2912
  41bb8b:	adc    DWORD PTR ds:0x9ee93eef,0x8aed5803
  41bb95:	sbb    bl,cl
  41bb97:	icebp  
  41bb98:	stos   BYTE PTR es:[edi],al
  41bb99:	or     DWORD PTR [edi],edx
  41bb9b:	in     eax,dx
  41bb9c:	iret   
  41bb9d:	inc    esi
  41bb9e:	ror    BYTE PTR [edi+0x0],1
  41bba1:	arpl   WORD PTR [ebp-0x61],si
  41bba4:	test   eax,0x88200680
  41bba9:	sub    DWORD PTR [edi+eax*1],esp
  41bbac:	ret    0x74c0
  41bbaf:	push   ebp
  41bbb0:	nop
  41bbb1:	or     esi,ecx
  41bbb3:	mov    esi,0x9ca4cee1
  41bbb8:	jb     0x41bbc0
  41bbba:	inc    esi
  41bbbb:	jmp    0x7e8e1728
  41bbc0:	add    dl,BYTE PTR [ebp+edi*1-0x35025e46]
  41bbc7:	cdq    
  41bbc8:	xchg   BYTE PTR [edi+eiz*4+0x629a8076],dl
  41bbcf:	inc    DWORD PTR [eax+edx*4-0x8538c29]
  41bbd6:	sbb    eax,0xcf1007d5
  41bbdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bbdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bbdd:	lds    eax,FWORD PTR [edx-0x792cad47]
  41bbe3:	in     eax,0x68
  41bbe5:	adc    esp,DWORD PTR [esi]
  41bbe7:	das    
  41bbe8:	sub    DWORD PTR [ecx+0x3faf30e4],0xffffffa2
  41bbef:	adc    ebp,0xffffffbe
  41bbf2:	shl    BYTE PTR [ebx-0x2b091533],cl
  41bbf8:	lea    edx,[ebx]
  41bbfa:	dec    edi
  41bbfb:	loopne 0x41bbd8
  41bbfd:	push   es
  41bbfe:	dec    eax
  41bbff:	mov    ebx,DWORD PTR [eax+0x4]
  41bc02:	jg     0x41bbc7
  41bc04:	jmp    0x41bbb4
  41bc06:	call   0x517e619a
  41bc0b:	dec    edx
  41bc0c:	jle    0x41bc51
  41bc0e:	dec    edx
  41bc0f:	lods   eax,DWORD PTR ds:[esi]
  41bc10:	adc    eax,0xf25a4cc4
  41bc15:	jle    0x41bc21
  41bc17:	jmp    0x90b6:0x726cf1f9
  41bc1e:	jecxz  0x41bc14
  41bc20:	loop   0x41bbe0
  41bc22:	in     al,dx
  41bc23:	loopne 0x41bbdb
  41bc25:	mov    edx,0xf9788f03
  41bc2a:	call   0xbd36:0xfe16878c
  41bc31:	pop    es
  41bc32:	jle    0x41bc03
  41bc34:	scas   al,BYTE PTR es:[edi]
  41bc35:	and    eax,0xd7d111bf
  41bc3a:	mov    ch,0xb
  41bc3c:	pop    eax
  41bc3d:	mov    eax,ds:0xc872649c
  41bc42:	(bad)  [esi]
  41bc44:	push   ecx
  41bc45:	jp     0x1d9d765f
  41bc4b:	inc    esi
  41bc4c:	lods   al,BYTE PTR ds:[esi]
  41bc4d:	and    DWORD PTR [edi+0x6f4c0d02],ecx
  41bc53:	inc    esp
  41bc54:	loop   0x41bcb8
  41bc56:	lods   al,BYTE PTR ds:[esi]
  41bc57:	inc    ecx
  41bc58:	test   eax,0x5f3cca9
  41bc5d:	out    0xd5,al
  41bc5f:	test   BYTE PTR [edx-0x1],dl
  41bc62:	push   ds
  41bc63:	cli    
  41bc64:	adc    al,0xb7
  41bc66:	mov    al,0xa2
  41bc68:	ret    
  41bc69:	jecxz  0x41bca6
  41bc6b:	outs   dx,BYTE PTR ds:[esi]
  41bc6c:	test   eax,0xbee7d1fd
  41bc71:	int3   
  41bc72:	retf   
  41bc73:	fwait
  41bc74:	jge    0x41bc52
  41bc76:	jge    0x41bcc5
  41bc78:	mov    al,0xef
  41bc7a:	test   al,0x29
  41bc7c:	es pop eax
  41bc7e:	xchg   edx,eax
  41bc7f:	dec    ebp
  41bc80:	test   DWORD PTR [edi+0x56],edi
  41bc83:	cmp    dl,bh
  41bc85:	and    bl,BYTE PTR [ecx+0x6b04c1a]
  41bc8b:	in     eax,0x94
  41bc8d:	aas    
  41bc8e:	mov    ah,0xd1
  41bc90:	retf   
  41bc91:	pop    ds
  41bc92:	gs xchg esp,eax
  41bc94:	aam    0x7f
  41bc96:	push   esi
  41bc97:	fnstenv [eax+0x75cf30c9]
  41bc9d:	mov    WORD PTR ss:[ebx+0x129ad50d],ss
  41bca4:	mov    bl,0x8d
  41bca6:	jg     0x41bd0f
  41bca8:	mov    ebx,0x2fef92cb
  41bcad:	mov    ecx,0x4ef4aef5
  41bcb2:	jae    0x41bc94
  41bcb4:	aam    0xd7
  41bcb6:	or     BYTE PTR [edx-0x40],al
  41bcb9:	xchg   ebx,eax
  41bcba:	push   cs
  41bcbb:	ds aas 
  41bcbd:	test   eax,0x7d1c2570
  41bcc2:	test   dl,bh
  41bcc4:	xchg   esi,eax
  41bcc5:	jne    0x41bd24
  41bcc7:	jb     0x41bd0b
  41bcc9:	stos   BYTE PTR es:[edi],al
  41bcca:	(bad)  
  41bccb:	mov    bl,0xf5
  41bccd:	popf   
  41bcce:	rcr    DWORD PTR [ebx-0x64],1
  41bcd1:	lea    ebp,[eax+0x1a]
  41bcd4:	mov    edi,0xc8f2f7af
  41bcd9:	mov    ds:0x8de65b6f,eax
  41bcde:	cli    
  41bcdf:	and    dl,bh
  41bce1:	(bad)  
  41bce2:	stos   BYTE PTR es:[edi],al
  41bce3:	cwde   
  41bce4:	ror    ecx,0x6
  41bce7:	mov    BYTE PTR [edi+0x32],bh
  41bcea:	xor    edi,DWORD PTR [eax]
  41bcec:	jl     0x41bc70
  41bcee:	adc    BYTE PTR [ebp+0x2bf4bd52],0xa5
  41bcf5:	sub    BYTE PTR [ecx-0x3a],al
  41bcf8:	inc    esi
  41bcf9:	push   es
  41bcfa:	xchg   ebx,eax
  41bcfb:	shl    DWORD PTR [ebp-0x17e8bb3a],1
  41bd01:	fidivr WORD PTR [ebx+0x4d]
  41bd04:	mov    gs,WORD PTR [ebp+0x3b5ad60f]
  41bd0a:	lods   al,BYTE PTR ds:[esi]
  41bd0b:	or     al,0x13
  41bd0d:	jne    0x41bc8f
  41bd0f:	lea    edi,[edx-0x6c1a6f2e]
  41bd15:	pop    ecx
  41bd16:	push   ss
  41bd17:	lock mov edi,0x5cbcae34
  41bd1d:	sbb    BYTE PTR [ecx+eiz*4],dl
  41bd20:	mov    edi,0x17fc7bd5
  41bd25:	or     dh,BYTE PTR [edi+edi*4]
  41bd28:	xor    DWORD PTR [esi-0x1b6f6f5b],0x5afc938b
  41bd32:	sbb    edx,ebp
  41bd34:	xchg   esi,eax
  41bd35:	ins    BYTE PTR es:[edi],dx
  41bd36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd37:	mov    ch,0x2e
  41bd39:	ins    DWORD PTR es:[edi],dx
  41bd3a:	lock repnz mov dl,0x5a
  41bd3e:	jecxz  0x41bd07
  41bd40:	add    eax,DWORD PTR cs:[eax+0x3759e676]
  41bd47:	sbb    al,0x99
  41bd49:	out    dx,al
  41bd4a:	and    dl,BYTE PTR [edx]
  41bd4c:	and    bl,BYTE PTR [ebp+eax*8+0x15ccd1f7]
  41bd53:	int3   
  41bd54:	push   ds
  41bd55:	cmp    BYTE PTR [edi+0x18582e0b],dh
  41bd5b:	mov    edx,0x64e7e4f2
  41bd60:	xchg   esi,eax
  41bd61:	in     eax,dx
  41bd62:	and    edi,ebx
  41bd64:	shl    BYTE PTR [ebx+0x38],cl
  41bd67:	adc    al,0x7d
  41bd69:	mov    al,0xe2
  41bd6b:	sbb    edx,edx
  41bd6d:	cmp    eax,DWORD PTR [esi]
  41bd6f:	in     eax,dx
  41bd70:	xor    eax,0x8d0f7c43
  41bd75:	mov    eax,0x358a433
  41bd7a:	jle    0x41bdaa
  41bd7c:	jl     0x41bd2c
  41bd7e:	mov    al,0x90
  41bd80:	xlat   BYTE PTR ds:[ebx]
  41bd81:	adc    al,0xec
  41bd83:	(bad)  
  41bd84:	shl    dl,cl
  41bd86:	sar    DWORD PTR [esi-0x49d48824],1
  41bd8c:	ja     0x41bdde
  41bd8e:	mov    ?,WORD PTR [ebx-0x18]
  41bd91:	nop
  41bd92:	in     eax,dx
  41bd93:	(bad)  
  41bd95:	retfw  
  41bd97:	push   es
  41bd98:	jne    0x41be16
  41bd9a:	xchg   edi,eax
  41bd9b:	ss jmp 0xafd5e949
  41bda1:	pop    ss
  41bda2:	dec    BYTE PTR [edx-0x6e]
  41bda5:	sub    DWORD PTR [ebp+0x3f],esp
  41bda8:	and    DWORD PTR [eax+ebp*4-0xa],0xffffffb6
  41bdad:	dec    edx
  41bdae:	(bad)  
  41bdaf:	fdivr  st,st(6)
  41bdb2:	xor    dl,BYTE PTR [ecx]
  41bdb4:	dec    eax
  41bdb5:	(bad)  
  41bdb6:	cmp    edi,DWORD PTR [edx+0x6b]
  41bdb9:	sbb    esp,DWORD PTR [ebp+0x7b]
  41bdbc:	mov    esp,0xb5fcfda8
  41bdc1:	dec    edi
  41bdc2:	sti    
  41bdc3:	mov    edx,0x30335c73
  41bdc8:	neg    edx
  41bdca:	pop    eax
  41bdcb:	mov    ebp,0xaf94005e
  41bdd0:	stc    
  41bdd1:	xlat   BYTE PTR gs:[ebx]
  41bdd3:	mov    ah,0x3b
  41bdd5:	ds icebp 
  41bdd7:	mov    ah,0x67
  41bdd9:	mov    ebx,0x35bd9867
  41bdde:	inc    ecx
  41bddf:	pop    ds
  41bde0:	fst    DWORD PTR [ebx-0xe]
  41bde3:	lea    ecx,[ecx-0x1d80dcd1]
  41bde9:	pop    eax
  41bdea:	inc    esi
  41bdeb:	mov    cl,0xbb
  41bded:	aaa    
  41bdee:	ficomp DWORD PTR ds:0xbc1f53a4
  41bdf4:	fabs   
  41bdf6:	cmp    eax,0xe7a1cd3
  41bdfb:	ins    DWORD PTR es:[edi],dx
  41bdfc:	sub    eax,DWORD PTR [ebx+0x199868e4]
  41be02:	jnp    0x41bdf4
  41be04:	cmp    eax,edx
  41be06:	jae    0x41be1d
  41be08:	fwait
  41be09:	pinsrw mm6,WORD PTR [edi],0xfb
  41be0d:	push   ebp
  41be0e:	pop    eax
  41be0f:	sahf   
  41be10:	sbb    DWORD PTR [ecx],ecx
  41be12:	fnstenv [edx-0x1842fcdc]
  41be18:	dec    edi
  41be19:	ss mov bh,0x82
  41be1c:	add    ebx,DWORD PTR [ebx]
  41be1e:	adc    BYTE PTR [ecx],cl
  41be20:	les    esp,FWORD PTR [edi-0x78f7905a]
  41be26:	dec    edx
  41be27:	into   
  41be28:	inc    ebp
  41be29:	adc    eax,0xc9aa019f
  41be2e:	jae    0x41bdf4
  41be30:	pop    eax
  41be31:	mov    cl,BYTE PTR [esi]
  41be33:	mov    esp,0x560485d8
  41be38:	sar    dh,1
  41be3a:	cmp    al,BYTE PTR [ebp-0x476bba2d]
  41be40:	jle    0x41bdfd
  41be42:	mov    al,ds:0x4a22c58
  41be47:	sbb    al,0xb5
  41be49:	mov    esp,0xa252c3aa
  41be4e:	shl    BYTE PTR [esi-0x10],1
  41be51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be52:	push   es
  41be53:	sub    al,bh
  41be55:	ret    
  41be56:	sub    BYTE PTR [esi],bh
  41be58:	fwait
  41be59:	push   eax
  41be5a:	inc    ecx
  41be5b:	xor    eax,0xd69e6695
  41be60:	xchg   BYTE PTR [edi-0xd6d6629],cl
  41be66:	sahf   
  41be67:	out    0x12,al
  41be69:	pushf  
  41be6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be6b:	fsubr  DWORD PTR [eax+0x62]
  41be6e:	leave  
  41be6f:	inc    eax
  41be70:	dec    ecx
  41be71:	loop   0x41be36
  41be73:	pop    esi
  41be74:	stos   DWORD PTR es:[edi],eax
  41be75:	mov    cl,BYTE PTR [eax-0x7069ecdc]
  41be7b:	push   ss
  41be7c:	mov    bl,al
  41be7e:	adc    BYTE PTR [edx+0x11],dl
  41be81:	mov    ah,0x42
  41be83:	jp     0x41be88
  41be85:	std    
  41be86:	xchg   ah,bh
  41be88:	inc    ebx
  41be89:	stc    
  41be8a:	inc    esp
  41be8b:	pop    edx
  41be8c:	cmp    DWORD PTR [ebp+0x4b824a46],0xffffffb2
  41be93:	push   esp
  41be94:	dec    ebx
  41be95:	sub    eax,0x70f9aa58
  41be9a:	inc    eax
  41be9b:	cli    
  41be9c:	adc    ah,BYTE PTR [esi-0x3e]
  41be9f:	jae    0x41beed
  41bea1:	les    eax,FWORD PTR [ebx*8+0x5779af97]
  41bea8:	xor    dl,bh
  41beaa:	or     DWORD PTR [esi],edx
  41beac:	and    edi,eax
  41beae:	mov    bl,0xcd
  41beb0:	add    ebx,edx
  41beb2:	jmp    0x41be97
  41beb4:	fistp  QWORD PTR [ebp-0x4670965f]
  41beba:	xchg   edi,eax
  41bebb:	sti    
  41bebc:	push   ss
  41bebd:	aaa    
  41bebe:	out    dx,eax
  41bebf:	xchg   ebp,eax
  41bec0:	or     al,dh
  41bec2:	or     esp,ebp
  41bec4:	add    DWORD PTR [ebp+ecx*2-0x127acdaf],0x10
  41becc:	xchg   dh,cl
  41bece:	jne    0x41bee2
  41bed0:	repnz loopne 0x41be91
  41bed3:	das    
  41bed4:	lea    esp,ds:0xeb8c4825
  41beda:	sbb    DWORD PTR [ecx+0x24],esi
  41bedd:	sar    DWORD PTR [eax+edi*2+0x75bddb13],cl
  41bee4:	jmp    0x41bec2
  41bee6:	jmp    0x41befc
  41bee8:	xlat   BYTE PTR ds:[ebx]
  41bee9:	add    BYTE PTR [esi-0x64],0x9a
  41beed:	dec    ecx
  41beee:	lds    esi,FWORD PTR [esi+esi*4+0x1a5beae3]
  41bef5:	dec    eax
  41bef6:	lods   eax,DWORD PTR ds:[esi]
  41bef7:	mov    esp,0x13345c32
  41befc:	shl    ebp,0xee
  41beff:	jne    0x41bf70
  41bf01:	shr    DWORD PTR [edi+0x31],cl
  41bf04:	in     al,0x15
  41bf06:	out    0xe9,al
  41bf08:	cmc    
  41bf09:	inc    edi
  41bf0a:	xor    cl,ah
  41bf0c:	mov    ah,0x69
  41bf0e:	jle    0x41bf2b
  41bf10:	or     DWORD PTR [ecx],0xffffffed
  41bf13:	jb     0x41bf7a
  41bf15:	adc    al,0xe5
  41bf17:	int3   
  41bf18:	bound  edx,QWORD PTR [ebp*2-0x2b1cf0f5]
  41bf1f:	push   edi
  41bf20:	(bad)  
  41bf21:	or     ebp,DWORD PTR [esi-0x1b887c]
  41bf27:	das    
  41bf28:	neg    DWORD PTR [ecx-0x2c23191c]
  41bf2e:	test   eax,0x84b30842
  41bf33:	lea    edx,[esi+edx*8]
  41bf36:	pop    es
  41bf37:	or     edi,ebp
  41bf39:	push   edx
  41bf3a:	ja     0x41beed
  41bf3c:	hlt    
  41bf3d:	cmp    dh,0xb
  41bf40:	ret    0x305
  41bf43:	pop    esp
  41bf44:	push   cs
  41bf45:	pop    edi
  41bf46:	cmp    DWORD PTR [edx],0xb2b638fa
  41bf4c:	dec    esp
  41bf4e:	pusha  
  41bf4f:	rol    BYTE PTR [ecx-0x52],1
  41bf52:	rcr    BYTE PTR [edx+ecx*2-0x18],0x7c
  41bf57:	push   0xffffff86
  41bf59:	jmp    0x41bf07
  41bf5b:	inc    ebp
  41bf5c:	mov    eax,ds:0xd8761e23
  41bf61:	hlt    
  41bf62:	inc    ecx
  41bf63:	jmp    0x41bf7c
  41bf65:	push   edx
  41bf66:	or     DWORD PTR [edx-0x4a],eax
  41bf69:	mov    ebx,0x853ab377
  41bf6e:	xchg   DWORD PTR [esi-0x3324afe9],eax
  41bf74:	jbe    0x41bf2e
  41bf76:	dec    esi
  41bf77:	push   edx
  41bf78:	rcl    DWORD PTR [ebx-0x512dc5d5],cl
  41bf7e:	leave  
  41bf7f:	cmp    ebx,edi
  41bf81:	call   0x565a:0xd4a84d7d
  41bf88:	and    esi,DWORD PTR [esi-0x32]
  41bf8b:	aaa    
  41bf8c:	and    BYTE PTR [ebp-0x6b],cl
  41bf8f:	imul   eax,ecx,0x1a
  41bf92:	sbb    cl,0x9c
  41bf95:	repnz dec esp
  41bf97:	cli    
  41bf98:	jg     0x41bf4c
  41bf9a:	xchg   BYTE PTR [ebp-0x3758ea4f],dl
  41bfa0:	loop   0x41bf40
  41bfa2:	cwde   
  41bfa3:	call   0xb0a6d00d
  41bfa8:	into   
  41bfa9:	jg     0x41c01e
  41bfab:	scas   eax,DWORD PTR es:[edi]
  41bfac:	jno    0x41bf4d
  41bfae:	(bad)  
  41bfaf:	jne    0x41bf4a
  41bfb1:	loope  0x41c01e
  41bfb3:	js     0x41c01d
  41bfb5:	scas   eax,DWORD PTR es:[edi]
  41bfb6:	sub    bh,BYTE PTR [ecx+0x75]
  41bfb9:	push   edx
  41bfba:	aad    0x3f
  41bfbc:	cmp    al,0xff
  41bfbe:	adc    BYTE PTR [ebp-0x51],al
  41bfc1:	xchg   ecx,eax
  41bfc2:	push   edx
  41bfc3:	(bad)  
  41bfc4:	outs   dx,DWORD PTR ds:[esi]
  41bfc5:	sub    eax,0xa44964fb
  41bfca:	setg   ah
  41bfcd:	fwait
  41bfce:	sub    al,0xe4
  41bfd0:	add    DWORD PTR [edi+0x7064b817],esi
  41bfd6:	lock xchg ah,bh
  41bfd9:	mov    DWORD PTR [esi+0x63],0x1c04b73e
  41bfe0:	aaa    
  41bfe1:	enter  0x592a,0x10
  41bfe5:	or     DWORD PTR [eax+0x3],0x22840a7c
  41bfec:	dec    ecx
  41bfed:	aaa    
  41bfee:	adc    dl,BYTE PTR [edx+0xe5b8b04]
  41bff4:	mov    eax,0x40c743d0
  41bff9:	jno    0x41bff6
  41bffb:	push   esi
  41bffc:	and    DWORD PTR [esi],0x2d4cd698
  41c002:	mov    ebx,0x8460a9a3
  41c007:	call   DWORD PTR [ebx]
  41c009:	(bad)  
  41c00a:	xlat   BYTE PTR ds:[ebx]
  41c00b:	(bad)  
  41c00c:	ss pop es
  41c00e:	addr16 pop ds
  41c010:	sar    BYTE PTR [edi],1
  41c012:	fwait
  41c013:	mov    eax,?
  41c015:	cld    
  41c016:	mov    edx,0x378839bb
  41c01b:	pusha  
  41c01c:	adc    esi,0x7a
  41c01f:	dec    eax
  41c020:	lock pop ds
  41c022:	or     dl,ch
  41c024:	xchg   edi,eax
  41c025:	shl    DWORD PTR [edx-0x25965d86],1
  41c02b:	ds test eax,0x5767cc5c
  41c031:	call   0xd848:0xa6e5fd19
  41c038:	add    DWORD PTR [ecx-0x23],ebx
  41c03b:	loopne 0x41bfcf
  41c03d:	sbb    eax,0x7f29b2ce
  41c042:	test   al,0x5a
  41c044:	cmp    DWORD PTR [ecx-0x72],eax
  41c047:	fidivr WORD PTR [ecx+0x55993bcb]
  41c04d:	cmp    eax,ebx
  41c04f:	mov    DWORD PTR [ebp-0x13d0fcba],0xbb3d13ee
  41c059:	cmp    DWORD PTR [ebp+0xd909add],ebp
  41c05f:	xchg   esi,eax
  41c060:	adc    BYTE PTR [edx],0x1c
  41c063:	cdq    
  41c064:	leave  
  41c065:	fwait
  41c066:	dec    bp
  41c068:	int3   
  41c069:	das    
  41c06a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c06b:	test   eax,0xb5854081
  41c070:	xchg   ecx,eax
  41c071:	mov    dl,0xbe
  41c073:	mov    al,ds:0xb95020c7
  41c078:	and    DWORD PTR [eax-0x6460b731],0xffffff83
  41c07f:	and    ah,BYTE PTR [ecx+ebx*2-0x6e]
  41c083:	pop    ebx
  41c084:	push   DWORD PTR ds:0x2a9eabbf
  41c08a:	jbe    0x41c06b
  41c08c:	xchg   ecx,eax
  41c08d:	fdiv   st(0),st
  41c08f:	clc    
  41c090:	stc    
  41c091:	push   esp
  41c092:	jb     0x41c0bb
  41c094:	mov    ch,0x1c
  41c096:	sub    eax,0xf358984
  41c09b:	cmp    BYTE PTR [eax-0x16],al
  41c09e:	push   ecx
  41c09f:	xor    eax,0x4dbd783c
  41c0a4:	cmp    ax,0xb82b
  41c0a8:	fsub   st,st(5)
  41c0aa:	out    0xb7,eax
  41c0ac:	jnp    0x41c105
  41c0ae:	push   ebx
  41c0af:	mov    ah,0xc7
  41c0b1:	xor    BYTE PTR ds:0x287df97,bh
  41c0b7:	aas    
  41c0b8:	sahf   
  41c0b9:	popa   
  41c0ba:	pop    ds
  41c0bb:	jg     0x41c0c6
  41c0bd:	add    ebx,edx
  41c0bf:	iret   
  41c0c0:	and    edi,DWORD PTR [edx+0x1a]
  41c0c3:	add    al,0xcd
  41c0c5:	xor    ecx,ebp
  41c0c7:	jb     0x41c092
  41c0c9:	repnz loope 0x41c058
  41c0cc:	jmp    0x2c8356d4
  41c0d1:	jb     0x41c0b5
  41c0d3:	bound  ebx,QWORD PTR ds:0x5b58d064
  41c0d9:	loopne 0x41c0fc
  41c0db:	xchg   ebx,eax
  41c0dc:	aad    0x80
  41c0de:	arpl   WORD PTR [edi+edx*2],cx
  41c0e1:	sub    DWORD PTR [eax+0x14ebe663],esp
  41c0e7:	sub    al,0x61
  41c0e9:	jmp    0x5f17:0xfd42d6a7
  41c0f0:	mov    al,0x7f
  41c0f2:	mov    DWORD PTR [ebx+0x31],edx
  41c0f5:	and    DWORD PTR [eax-0x6cfb056f],eax
  41c0fb:	js     0x41c15b
  41c0fd:	test   BYTE PTR [bx],bh
  41c100:	dec    esp
  41c101:	sbb    ah,BYTE PTR fs:[ecx]
  41c104:	dec    ecx
  41c105:	rcl    ecx,0x6e
  41c108:	and    DWORD PTR [ebp-0xd],0x3
  41c10c:	push   esp
  41c10d:	pop    ebp
  41c10e:	jp     0x41c0a6
  41c110:	xchg   BYTE PTR [esi],ch
  41c112:	mov    cl,0x10
  41c114:	(bad)  
  41c117:	ins    BYTE PTR es:[edi],dx
  41c118:	into   
  41c119:	pusha  
  41c11a:	adc    dl,bh
  41c11c:	push   esi
  41c11d:	push   0x7638eabb
  41c122:	mov    al,fs:0xa8f1c9ff
  41c128:	adc    DWORD PTR [edx-0x6f410c75],ecx
  41c12e:	aam    0x3
  41c130:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c131:	jo     0x41c0dd
  41c133:	sub    al,0x3b
  41c135:	or     eax,0x8ba024a3
  41c13a:	fucom  st(2)
  41c13c:	aam    0xfa
  41c13e:	pop    es
  41c13f:	sub    edx,DWORD PTR [ebx+0x3f]
  41c142:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c143:	pusha  
  41c144:	jp     0x41c0d1
  41c146:	xchg   edx,eax
  41c147:	push   eax
  41c148:	or     DWORD PTR [eax+0x16],edi
  41c14b:	xchg   ch,dh
  41c14d:	or     cl,0xca
  41c150:	ret    
  41c151:	aaa    
  41c152:	mov    ds:0xbf4194c5,al
  41c157:	(bad)  
  41c158:	ror    DWORD PTR [esi-0x74],cl
  41c15b:	inc    esp
  41c15c:	shl    DWORD PTR [edi-0x2ca20ae8],cl
  41c162:	lods   eax,DWORD PTR cs:[esi]
  41c164:	vmovq  QWORD PTR [ecx-0x14bee169],xmm1
  41c16c:	mov    edx,0x2f2b4a3b
  41c171:	sbb    dh,al
  41c173:	es pop es
  41c175:	fnstcw WORD PTR [ebx-0xd]
  41c178:	lds    esi,FWORD PTR [ecx+0x21]
  41c17b:	mov    ebp,0x568a1ac6
  41c180:	pop    eax
  41c181:	loop   0x41c168
  41c183:	ins    DWORD PTR es:[edi],dx
  41c184:	loop   0x41c1c8
  41c186:	das    
  41c187:	loope  0x41c181
  41c189:	pop    ebp
  41c18a:	jnp    0x41c1ff
  41c18c:	pop    ebx
  41c18d:	call   0x1d7a7966
  41c192:	jmp    DWORD PTR [eax-0x7b984225]
  41c198:	pop    edx
  41c199:	stos   DWORD PTR es:[edi],eax
  41c19a:	retf   0xc896
  41c19d:	dec    ebx
  41c19e:	jl     0x41c123
  41c1a0:	push   ebp
  41c1a1:	loop   0x41c133
  41c1a3:	pop    edx
  41c1a4:	push   ebx
  41c1a5:	and    edi,esi
  41c1a7:	push   esp
  41c1a8:	jp     0x41c1bd
  41c1aa:	add    ah,BYTE PTR [ecx-0x65]
  41c1ad:	jg     0x41c199
  41c1af:	xor    al,BYTE PTR [ecx]
  41c1b1:	pop    ds
  41c1b2:	jmp    0x41c1d0
  41c1b4:	(bad)  
  41c1b5:	xlat   BYTE PTR ds:[ebx]
  41c1b6:	gs sahf 
  41c1b8:	in     eax,0x52
  41c1ba:	xor    BYTE PTR [eax+0x1d],dh
  41c1bd:	jo     0x41c20c
  41c1bf:	jnp    0x41c18d
  41c1c1:	fcomp  st(6)
  41c1c3:	pop    ss
  41c1c4:	out    0x83,eax
  41c1c6:	adc    ebp,0xa7fb5301
  41c1cc:	mov    ah,0xe1
  41c1ce:	aam    0xd5
  41c1d0:	xor    al,BYTE PTR [eax+0x8101238]
  41c1d6:	imul   eax,DWORD PTR [eax-0x31],0x5
  41c1da:	add    al,0xa
  41c1dc:	xor    ch,ch
  41c1de:	or     ebp,DWORD PTR [ecx+ebx*8-0xb8cfc4a]
  41c1e5:	(bad)  
  41c1e6:	mov    bl,0x66
  41c1e8:	scas   al,BYTE PTR es:[edi]
  41c1e9:	or     edi,DWORD PTR [ecx]
  41c1eb:	xor    BYTE PTR [eax],0xdd
  41c1ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1ef:	jle    0x41c1c5
  41c1f1:	neg    BYTE PTR [eax+0x35cda051]
  41c1f7:	retf   0xe896
  41c1fa:	adc    DWORD PTR [edx],ecx
  41c1fc:	add    DWORD PTR [edi],0x8231a9f4
  41c202:	fld    QWORD PTR [ecx-0x19e103ce]
  41c208:	mov    dh,0xf4
  41c20a:	mov    dh,0xc9
  41c20c:	xchg   edi,eax
  41c20d:	test   ebx,eax
  41c20f:	sub    al,0xcd
  41c211:	addr16 xchg ecx,eax
  41c213:	in     eax,dx
  41c214:	cs push ss
  41c216:	or     eax,esi
  41c218:	and    DWORD PTR [ebp-0x6a],0xacb89853
  41c21f:	in     al,0x79
  41c221:	imul   ecx,DWORD PTR [esi+0x41],0xffffffb0
  41c225:	mov    dh,0xf
  41c227:	jbe    0x41c258
  41c229:	or     esi,DWORD PTR [edx-0x7d1773fb]
  41c22f:	xchg   edx,eax
  41c230:	sbb    al,0x31
  41c232:	jnp    0x41c212
  41c234:	or     dh,bl
  41c236:	pushf  
  41c237:	mov    ds:0x94c14e95,eax
  41c23c:	leave  
  41c23d:	adc    ah,dl
  41c23f:	lahf   
  41c240:	js     0x41c235
  41c242:	(bad)  [eax-0x5b39edc1]
  41c248:	push   es
  41c249:	pop    ebx
  41c24a:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41c24c:	stc    
  41c24d:	or     eax,0x5a9c7d2c
  41c252:	dec    ebp
  41c253:	inc    ecx
  41c254:	lods   eax,DWORD PTR ds:[esi]
  41c255:	pop    eax
  41c256:	xchg   ebx,eax
  41c257:	sbb    esp,DWORD PTR [ecx-0x5fcb88de]
  41c25d:	ret    
  41c25e:	mov    esp,0x718dbf5b
  41c263:	xchg   DWORD PTR [di],ebx
  41c266:	xor    eax,DWORD PTR [esi-0xb]
  41c269:	jle    0x41c2a8
  41c26b:	pop    ss
  41c26c:	push   ss
  41c26d:	cdq    
  41c26e:	cli    
  41c26f:	cmp    esp,DWORD PTR [esi]
  41c271:	test   BYTE PTR [edx-0x4a0c8fe9],0xc7
  41c278:	jl     0x41c27b
  41c27a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c27b:	jle    0x41c2d8
  41c27d:	sub    ch,al
  41c27f:	jne    0x41c27d
  41c281:	mov    edi,0xd606346d
  41c286:	pop    eax
  41c287:	bound  esp,QWORD PTR [ecx+edx*1-0x48]
  41c28b:	mov    ss,WORD PTR [ecx+0x5d]
  41c28e:	stos   BYTE PTR es:[edi],al
  41c28f:	aas    
  41c290:	aas    
  41c291:	gs or  ch,dh
  41c294:	inc    DWORD PTR ds:0xc5d53652
  41c29a:	data16 and al,0x6c
  41c29d:	call   0x27d1:0xaed42ee5
  41c2a4:	pop    edx
  41c2a5:	jge    0x41c2fb
  41c2a7:	mov    ds:0x5a3dec4b,eax
  41c2ac:	xchg   esi,eax
  41c2ad:	mov    ch,0xdf
  41c2af:	popa   
  41c2b0:	jbe    0x41c305
  41c2b2:	hlt    
  41c2b3:	adc    al,0x22
  41c2b5:	fstp   QWORD PTR [ebx+0x10]
  41c2b8:	cmp    eax,0x6699de5c
  41c2bd:	fmul   DWORD PTR [edx-0x60]
  41c2c0:	leave  
  41c2c1:	test   DWORD PTR [eax],0xcbc8153a
  41c2c7:	inc    esi
  41c2c8:	or     eax,0x712ef48d
  41c2cd:	inc    esi
  41c2ce:	fdiv   st,st(6)
  41c2d0:	out    0x24,al
  41c2d2:	fsubr  st(2),st
  41c2d4:	sbb    ax,0x9a4
  41c2d8:	jp     0x41c317
  41c2da:	or     eax,0xe31c38c5
  41c2df:	mov    esp,0x4f0c3442
  41c2e4:	repnz clc 
  41c2e6:	cmp    al,0xb1
  41c2e8:	mov    DWORD PTR [eax],esp
  41c2ea:	outs   dx,DWORD PTR ds:[esi]
  41c2eb:	add    edi,DWORD PTR [edi]
  41c2ed:	repz (bad) 
  41c2ef:	xlat   BYTE PTR ds:[ebx]
  41c2f0:	mov    dx,0x2d8a
  41c2f4:	add    al,0x1c
  41c2f6:	rcl    DWORD PTR [ebp-0x4adedd0d],0xfd
  41c2fd:	push   0x537bbfb5
  41c302:	or     ch,BYTE PTR [esi+ecx*4-0x1002ef1f]
  41c309:	or     edx,DWORD PTR [esi+0x1ab01759]
  41c30f:	mov    WORD PTR ds:0xcb70e7b,?
  41c315:	mov    dl,0xd9
  41c317:	sbb    ebx,DWORD PTR [edx]
  41c319:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c31a:	jl     0x41c31f
  41c31c:	xor    al,0x4c
  41c31e:	pop    ds
  41c31f:	cdq    
  41c320:	hlt    
  41c321:	pop    esp
  41c322:	mov    ebx,DWORD PTR [eax+0x58d45fa5]
  41c328:	dec    ebp
  41c329:	scas   al,BYTE PTR es:[edi]
  41c32a:	sub    edi,DWORD PTR [ebx-0x6a]
  41c32d:	int    0x41
  41c32f:	loop   0x41c38b
  41c331:	stos   BYTE PTR es:[edi],al
  41c332:	stos   DWORD PTR es:[edi],eax
  41c333:	mov    bl,BYTE PTR [ebp-0x5015e1e8]
  41c339:	cmp    esp,DWORD PTR [ecx+ebx*4-0x3e66fa2b]
  41c340:	ret    
  41c341:	jg     0x41c39f
  41c343:	mov    ebx,0xf2be3e65
  41c348:	inc    esp
  41c349:	ja     0x41c315
  41c34b:	or     DWORD PTR [ebp+0x57ae3fb3],edi
  41c351:	ret    0x1bba
  41c354:	and    cl,ah
  41c356:	idiv   DWORD PTR [edx+0x2bf369a]
  41c35c:	push   ss
  41c35d:	sbb    esp,eax
  41c35f:	test   DWORD PTR [esi+0x4f],edx
  41c362:	inc    esp
  41c363:	mov    al,0xb4
  41c365:	push   eax
  41c366:	aad    0xf9
  41c368:	push   cs
  41c369:	push   cs
  41c36a:	(bad)  
  41c36b:	adc    edx,esi
  41c36d:	fmul   DWORD PTR [esi+0x1]
  41c370:	dec    ebx
  41c371:	(bad)  
  41c372:	sbb    eax,0xe27bf0b6
  41c377:	mov    al,0xc3
  41c379:	pop    ss
  41c37a:	dec    ecx
  41c37b:	bound  ebx,QWORD PTR [edx+ebx*2]
  41c37e:	(bad)  
  41c37f:	sahf   
  41c380:	mov    ds:0xccce602d,eax
  41c385:	sti    
  41c386:	aas    
  41c387:	xor    esi,ecx
  41c389:	mov    eax,0x946ffa78
  41c38e:	aaa    
  41c38f:	das    
  41c390:	fbld   TBYTE PTR [esi+0x2]
  41c393:	cdq    
  41c394:	push   edx
  41c395:	outs   dx,BYTE PTR ds:[esi]
  41c396:	shl    cl,1
  41c398:	jae    0x41c397
  41c39a:	inc    esi
  41c39b:	lahf   
  41c39c:	pop    eax
  41c39d:	and    edx,DWORD PTR [esi-0x75b23e45]
  41c3a3:	mov    edx,0x8f0e6ca
  41c3a8:	mov    eax,ds:0x2e95d38c
  41c3ad:	(bad)  
  41c3ae:	stc    
  41c3af:	adc    dh,BYTE PTR [ebx+0x31]
  41c3b2:	repnz das 
  41c3b4:	fadd   DWORD PTR [ecx]
  41c3b6:	adc    bh,bh
  41c3b8:	inc    eax
  41c3b9:	or     ecx,DWORD PTR [esi]
  41c3bb:	or     dh,al
  41c3bd:	sbb    DWORD PTR [esi+0x4ec9f759],0x60
  41c3c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3c5:	jno    0x41c369
  41c3c7:	mov    ebp,DWORD PTR [edx-0x7f]
  41c3ca:	int    0x67
  41c3cc:	retf   
  41c3cd:	mov    ebp,0x53676822
  41c3d2:	(bad)  
  41c3d3:	lods   al,BYTE PTR ds:[esi]
  41c3d4:	adc    ch,BYTE PTR [esi+ebx*2]
  41c3d7:	xchg   edx,eax
  41c3d8:	pop    ebx
  41c3d9:	imul   esi,DWORD PTR [ecx+0x31],0x6f80bfef
  41c3e0:	jo     0x41c3a1
  41c3e2:	cmp    eax,0x186fb033
  41c3e7:	pop    ds
  41c3e8:	xchg   ebp,eax
  41c3e9:	nop
  41c3ea:	bndstx [eax],(bad)
  41c3ed:	out    0xa1,al
  41c3ef:	xor    BYTE PTR [ecx+0x4],al
  41c3f2:	mov    cl,0xcf
  41c3f4:	cmp    al,ah
  41c3f6:	leave  
  41c3f7:	pop    ebx
  41c3f8:	iret   
  41c3f9:	enter  0x9167,0x5c
  41c3fd:	shl    DWORD PTR [eax],0x37
  41c400:	int3   
  41c401:	in     eax,dx
  41c402:	or     eax,0x785b2d8d
  41c407:	push   esp
  41c408:	jecxz  0x41c3ed
  41c40a:	ss call 0xa8a5:0xd127f44d
  41c412:	lods   al,BYTE PTR ds:[esi]
  41c413:	fwait
  41c414:	pusha  
  41c415:	cwde   
  41c416:	mov    ebp,DWORD PTR [edi+0x69d6f430]
  41c41c:	popf   
  41c41d:	(bad)  
  41c41e:	mov    al,ds:0xe5f02f42
  41c423:	into   
  41c424:	mov    cl,0x67
  41c426:	sbb    eax,0xe54dcc31
  41c42b:	push   edi
  41c42c:	mov    al,BYTE PTR [eax+0x8]
  41c42f:	mov    esp,0x20c34f20
  41c434:	jne    0x41c3fd
  41c436:	mov    dh,0xdb
  41c438:	dec    ebx
  41c439:	dec    esi
  41c43a:	fistp  WORD PTR [esp+ebp*8-0x19]
  41c43e:	pop    ecx
  41c43f:	fs xchg ebx,eax
  41c441:	test   DWORD PTR [ebp+0x23],esp
  41c444:	gs (bad) 
  41c446:	mov    esi,0xae764784
  41c44b:	jo     0x41c42e
  41c44d:	and    ah,BYTE PTR [edi]
  41c44f:	adc    eax,0x926199e7
  41c454:	popf   
  41c455:	scas   eax,DWORD PTR es:[edi]
  41c456:	ret    0x973b
  41c459:	iret   
  41c45a:	xor    dl,BYTE PTR [ecx+0x41]
  41c45d:	sbb    al,0xa
  41c45f:	xor    DWORD PTR [edx],esi
  41c461:	loop   0x41c4c6
  41c463:	dec    ebp
  41c464:	push   ebx
  41c466:	(bad)  
  41c467:	and    esi,DWORD PTR [esi]
  41c469:	or     al,0x8e
  41c46b:	fstp   TBYTE PTR [edi+0x45b352e8]
  41c471:	sbb    DWORD PTR [ebx],esi
  41c473:	mov    esp,0xa4c16462
  41c478:	fild   QWORD PTR [ebp+0x1c3f1b98]
  41c47e:	fiadd  WORD PTR [esi+0x7920af58]
  41c484:	jns    0x41c4bf
  41c486:	rcl    eax,1
  41c488:	fs fwait
  41c48a:	cwde   
  41c48b:	rol    BYTE PTR [ebx+eiz*8],cl
  41c48e:	sub    al,0xd0
  41c490:	push   esp
  41c491:	lock mov dh,0x24
  41c494:	xchg   ecx,eax
  41c495:	jbe    0x41c4a4
  41c497:	in     eax,dx
  41c498:	neg    BYTE PTR [ebx+edi*8]
  41c49b:	xor    BYTE PTR [eax-0x9d55eb8],0xe
  41c4a2:	mov    dh,0xeb
  41c4a4:	xchg   ecx,eax
  41c4a5:	dec    esp
  41c4a6:	mov    ecx,0xd60eaf2d
  41c4ab:	call   0x3e69:0x386f80e9
  41c4b2:	std    
  41c4b3:	sub    BYTE PTR [eax+0x1efd6d63],cl
  41c4b9:	lods   eax,DWORD PTR ds:[esi]
  41c4ba:	xchg   ebx,eax
  41c4bb:	and    al,0xcd
  41c4bd:	jmp    0xc9cf618b
  41c4c2:	outs   dx,BYTE PTR ds:[esi]
  41c4c3:	loop   0x41c53a
  41c4c5:	neg    DWORD PTR [ebp+0x70f5d44b]
  41c4cb:	adc    esi,ebx
  41c4cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c4ce:	add    BYTE PTR [edx+0x44],al
  41c4d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4d2:	dec    ebx
  41c4d3:	repnz ins BYTE PTR es:[edi],dx
  41c4d5:	cmp    eax,0x9120cb7a
  41c4da:	nop
  41c4db:	(bad)  
  41c4dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c4dd:	sub    eax,0x9e221bb5
  41c4e2:	cmp    DWORD PTR ds:0x162c60d5,eax
  41c4e8:	ror    dh,cl
  41c4ea:	xchg   BYTE PTR [esi+0x58fe7bf0],bl
  41c4f0:	mov    eax,0xc618fe01
  41c4f5:	dec    ebp
  41c4f6:	std    
  41c4f7:	xchg   edi,eax
  41c4f8:	call   0x285e:0x47557754
  41c4ff:	xor    ah,BYTE PTR [ebp-0x7c7bcd45]
  41c505:	xchg   esi,eax
  41c506:	mov    eax,ds:0x48f8488c
  41c50b:	imul   edx,DWORD PTR [esi-0x363da4c3],0x23c17f44
  41c515:	aaa    
  41c516:	mov    BYTE PTR [ebx+0x447111fa],0x42
  41c51d:	loope  0x41c519
  41c51f:	rcl    BYTE PTR [edx+0x7af19f22],1
  41c525:	inc    edx
  41c526:	sub    BYTE PTR [esi+0x291ddb0b],ah
  41c52c:	push   esi
  41c52d:	loope  0x41c4c1
  41c52f:	jnp    0x41c544
  41c531:	and    eax,0xe2713dad
  41c536:	sbb    al,0xf3
  41c538:	xor    al,bl
  41c53a:	mov    edi,DWORD PTR [eax-0x75]
  41c53d:	aad    0x4d
  41c53f:	jno    0x41c574
  41c541:	pop    ecx
  41c542:	(bad)  
  41c543:	out    dx,al
  41c544:	mov    esp,DWORD PTR [edx]
  41c546:	xchg   edx,eax
  41c547:	mov    bh,0x6d
  41c549:	in     eax,0x6f
  41c54b:	adc    esp,DWORD PTR [ebx+0x42]
  41c54e:	ins    DWORD PTR es:[edi],dx
  41c54f:	mov    ?,esp
  41c551:	fld    TBYTE PTR [ebx+esi*4]
  41c554:	loope  0x41c5d4
  41c556:	add    al,0x61
  41c558:	repz cli 
  41c55a:	dec    edx
  41c55b:	call   0x4a2650b6
  41c560:	icebp  
  41c561:	mov    edx,0xf79d0c96
  41c566:	cmp    DWORD PTR [ecx-0x13709027],edx
  41c56c:	ror    BYTE PTR [esi+0x42],1
  41c56f:	pop    edx
  41c570:	xor    al,BYTE PTR [edi+0x130fba06]
  41c576:	or     DWORD PTR [edx-0x5dd820a],edx
  41c57c:	sbb    BYTE PTR [eax-0x3d16f887],al
  41c582:	repnz popa 
  41c584:	xchg   edx,eax
  41c585:	jae    0x41c52e
  41c587:	aad    0x46
  41c589:	outs   dx,BYTE PTR ds:[esi]
  41c58a:	inc    eax
  41c58b:	leave  
  41c58c:	mov    dh,BYTE PTR [ecx+0x3f]
  41c58f:	ret    
  41c590:	cmp    DWORD PTR [edi],0x62
  41c593:	mov    al,ds:0x4ee328e4
  41c598:	push   cs
  41c599:	int    0x82
  41c59b:	xchg   ebp,eax
  41c59c:	out    dx,al
  41c59d:	mov    ah,0x4f
  41c59f:	inc    eax
  41c5a0:	inc    ecx
  41c5a1:	jp     0x41c5b2
  41c5a3:	sub    al,0xfa
  41c5a5:	loope  0x41c60f
  41c5a7:	xor    DWORD PTR [di-0x2d],0x367aaad
  41c5af:	xor    eax,0xf11cfa33
  41c5b4:	cmp    BYTE PTR [esi-0x14677476],bh
  41c5ba:	sub    DWORD PTR [eax+eiz*2],ebp
  41c5bd:	mov    edi,0xb3a58701
  41c5c2:	jne    0x41c583
  41c5c4:	in     eax,0x99
  41c5c6:	pop    edx
  41c5c7:	cmp    esp,esi
  41c5c9:	outs   dx,DWORD PTR ds:[esi]
  41c5ca:	(bad)  
  41c5cb:	mov    eax,ds:0x4be406d2
  41c5d0:	shl    DWORD PTR [ebp-0xe],cl
  41c5d3:	xchg   esp,eax
  41c5d4:	repnz arpl WORD PTR [ebx-0xe45ce8e],cx
  41c5db:	aaa    
  41c5dc:	int    0xf5
  41c5de:	inc    ecx
  41c5df:	fiadd  WORD PTR ds:[ecx]
  41c5e2:	xor    eax,0x18371bd0
  41c5e7:	sbb    eax,0x10f215a3
  41c5ec:	outs   dx,DWORD PTR ds:[esi]
  41c5ed:	mov    bl,0x67
  41c5ef:	pop    ebp
  41c5f0:	cmc    
  41c5f1:	cmp    eax,0xb3a8cd5
  41c5f6:	sbb    DWORD PTR [edi+0x2593f7a5],eax
  41c5fc:	out    dx,eax
  41c5fd:	cmc    
  41c5fe:	loopne 0x41c5f0
  41c600:	call   0xdfd1d7b1
  41c605:	call   0xc921e6f8
  41c60a:	mov    WORD PTR [eax-0x5de116ad],fs
  41c610:	cmp    eax,0x4da91c18
  41c615:	push   edx
  41c616:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c617:	ror    BYTE PTR [ebp+0x48],cl
  41c61a:	loope  0x41c5bf
  41c61c:	in     eax,dx
  41c61d:	xchg   ebx,eax
  41c61e:	add    edi,ebx
  41c620:	iret   
  41c621:	push   esi
  41c622:	mov    ebx,0x6380e057
  41c627:	push   0x2a
  41c629:	fistp  WORD PTR [esi-0xf]
  41c62c:	mov    eax,ds:0xf098ea04
  41c631:	ror    BYTE PTR [edi-0x4f6ce255],1
  41c637:	mov    esi,0x7ea44d2b
  41c63c:	jmp    0xfd2d667f
  41c641:	(bad)  
  41c642:	pop    ebx
  41c643:	sub    eax,esi
  41c645:	test   eax,0x8927b668
  41c64a:	imul   esp,ebx,0x1
  41c64d:	ss hlt 
  41c64f:	pop    edi
  41c650:	pop    DWORD PTR ds:0xb863b52b
  41c656:	cmc    
  41c657:	cmp    edx,DWORD PTR [ecx+0x7b]
  41c65a:	add    BYTE PTR [eax*2+0x53dfc0db],ch
  41c661:	cmp    BYTE PTR [ebp+0x77d03645],bl
  41c667:	leave  
  41c668:	lahf   
  41c669:	push   cs
  41c66a:	add    al,0x7b
  41c66c:	aad    0xc3
  41c66e:	or     ebp,0xb9c7b058
  41c674:	(bad)  
  41c675:	sti    
  41c676:	push   es
  41c677:	sbb    DWORD PTR [edx],0xffffffc3
  41c67a:	pop    ebp
  41c67b:	inc    esp
  41c67c:	loope  0x41c6c0
  41c67e:	lds    esi,FWORD PTR [eax+0x7ce7f5a1]
  41c684:	or     BYTE PTR [ebp+0x46441193],al
  41c68a:	xor    bl,BYTE PTR [eax+ebp*4]
  41c68d:	jmp    0xff5:0xc89e31ce
  41c694:	mov    ds:0xb99d6148,eax
  41c699:	scas   eax,DWORD PTR es:[edi]
  41c69a:	add    eax,0xd655467d
  41c69f:	mov    edi,0xf7597adb
  41c6a4:	jae    0x41c6be
  41c6a6:	mov    ebx,0xf0485c83
  41c6ab:	shl    WORD PTR [ebx],0x33
  41c6af:	push   ss
  41c6b0:	mov    dl,0xcb
  41c6b2:	imul   eax,DWORD PTR [eax+0x4c1045c3],0xffffffb0
  41c6b9:	daa    
  41c6ba:	sbb    cl,bl
  41c6bc:	xlat   BYTE PTR ds:[ebx]
  41c6bd:	jns    0x41c6d7
  41c6bf:	add    dl,BYTE PTR [esi-0x17]
  41c6c2:	fcomp  DWORD PTR [eax]
  41c6c4:	xor    eax,0xc386555
  41c6c9:	push   eax
  41c6ca:	dec    ebp
  41c6cb:	out    0x2a,eax
  41c6cd:	adc    ecx,DWORD PTR [edx]
  41c6cf:	loopne 0x41c727
  41c6d1:	and    eax,0x29ce589
  41c6d6:	inc    edi
  41c6d7:	pusha  
  41c6d8:	jns    0x41c6e8
  41c6da:	xor    al,0x13
  41c6dc:	nop
  41c6dd:	push   edx
  41c6de:	sti    
  41c6df:	popf   
  41c6e0:	inc    edx
  41c6e1:	inc    esp
  41c6e2:	sub    DWORD PTR [eax-0xaa80312],edx
  41c6e8:	push   eax
  41c6e9:	push   eax
  41c6ea:	inc    esp
  41c6eb:	sub    ebx,DWORD PTR [edx+0x4cdc2c90]
  41c6f1:	imul   esp,DWORD PTR [esp+ebp*2+0x49db3242],0xeab4f326
  41c6fc:	mov    cl,0x7a
  41c6fe:	rcr    DWORD PTR [ecx],0x5b
  41c701:	sbb    eax,0x4c7d77da
  41c706:	fcmovbe st,st(2)
  41c708:	pusha  
  41c709:	aaa    
  41c70a:	pop    ecx
  41c70b:	mov    dl,BYTE PTR [ebp+0xc894590]
  41c711:	cdq    
  41c712:	sub    al,0x8f
  41c714:	shl    BYTE PTR [esi+edi*4],0xaa
  41c718:	push   edi
  41c719:	cmp    eax,eax
  41c71b:	aaa    
  41c71c:	adc    esp,DWORD PTR [edi-0x1c]
  41c71f:	mov    ah,bh
  41c721:	or     BYTE PTR [ecx+0x4e743e6a],ch
  41c727:	cmp    BYTE PTR [eax+0x558d4654],ch
  41c72d:	sti    
  41c72e:	(bad)  
  41c72f:	lods   al,BYTE PTR ds:[esi]
  41c730:	stos   BYTE PTR es:[edi],al
  41c731:	hlt    
  41c732:	js     0x41c6f2
  41c734:	xchg   ebx,eax
  41c735:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c736:	xchg   ebx,eax
  41c737:	xchg   esi,eax
  41c738:	call   0x2207:0x16140055
  41c73f:	push   eax
  41c740:	jo     0x41c6c8
  41c742:	or     DWORD PTR [ecx+0x3d21bb3a],esp
  41c748:	push   cs
  41c749:	pop    ds
  41c74a:	mov    bh,0x42
  41c74c:	sbb    DWORD PTR [edi-0x5798d731],eax
  41c752:	cli    
  41c753:	push   ds
  41c754:	xor    dl,BYTE PTR [esi+ebp*8-0x3b]
  41c758:	mov    eax,0x32212e97
  41c75d:	xor    DWORD PTR [ecx-0x732f2a7a],ebp
  41c763:	inc    ecx
  41c764:	dec    ebx
  41c765:	push   esp
  41c766:	jle    0x41c742
  41c768:	xor    DWORD PTR [edi+0x1d],eax
  41c76b:	aad    0xa3
  41c76d:	out    dx,al
  41c76e:	pop    edi
  41c76f:	iret   
  41c770:	rcr    DWORD PTR [edx],1
  41c772:	add    DWORD PTR [edx-0x1911d33f],ecx
  41c778:	xor    ebp,edi
  41c77a:	shr    DWORD PTR [ebx-0x6fb5cd17],cl
  41c780:	popa   
  41c781:	inc    ebp
  41c782:	jecxz  0x41c7ad
  41c784:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c786:	es call 0x69bae576
  41c78c:	fstp   TBYTE PTR [edx+esi*4-0x6d]
  41c790:	or     eax,0xd861f62d
  41c795:	fwait
  41c796:	nop
  41c797:	ret    0x3fa3
  41c79a:	loope  0x41c78b
  41c79c:	push   ss
  41c79d:	call   0x9667faba
  41c7a2:	js     0x41c76d
  41c7a4:	xchg   ebx,eax
  41c7a5:	jno    0x41c72f
  41c7a7:	push   cs
  41c7a8:	rcr    DWORD PTR [ebx],0x64
  41c7ab:	pusha  
  41c7ac:	xchg   ecx,eax
  41c7ad:	(bad)  
  41c7ae:	cmp    al,0x20
  41c7b0:	(bad)  
  41c7b1:	jmp    0x9597ad23
  41c7b6:	mov    esi,0x8d7ff65d
  41c7bb:	mov    edi,0x7b89a616
  41c7c0:	mov    fs,esp
  41c7c2:	ss mov al,0x45
  41c7c5:	out    dx,al
  41c7c6:	push   ds
  41c7c7:	push   ebx
  41c7c8:	mov    ch,BYTE PTR [ecx]
  41c7ca:	mov    ch,0x8e
  41c7cc:	mov    cl,0x33
  41c7ce:	mov    eax,0x55f46729
  41c7d3:	xlat   BYTE PTR ds:[ebx]
  41c7d4:	aas    
  41c7d5:	jg     0x41c7f3
  41c7d7:	pop    esi
  41c7d8:	(bad)  
  41c7d9:	jl     0x41c772
  41c7db:	adc    al,0xa5
  41c7dd:	loopne 0x41c7a2
  41c7df:	mov    al,0x54
  41c7e1:	mov    ?,WORD PTR [eax]
  41c7e3:	lock sub eax,0x902f26f4
  41c7e9:	dec    eax
  41c7ea:	sti    
  41c7eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c7ec:	mov    edx,0x658a7381
  41c7f1:	xor    edi,DWORD PTR [esi]
  41c7f3:	jae    0x41c7e9
  41c7f5:	mov    ecx,ds
  41c7f7:	(bad)  [esi-0x36]
  41c7fa:	arpl   WORD PTR [edi+0x3b],sp
  41c7fd:	call   0x9d5471f9
  41c802:	jle    0x41c858
  41c804:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c805:	dec    bp
  41c807:	mov    ds,WORD PTR [ecx]
  41c809:	loop   0x41c7fa
  41c80b:	mov    dh,0xe6
  41c80d:	sub    al,0x36
  41c80f:	rcr    BYTE PTR ds:0x5eead31b,cl
  41c815:	push   edx
  41c816:	add    al,0x4d
  41c818:	out    dx,eax
  41c819:	mov    eax,0x34168f63
  41c81e:	(bad)  
  41c81f:	pop    edx
  41c820:	xchg   ecx,eax
  41c821:	add    dl,BYTE PTR [edx+0x7e]
  41c824:	xor    al,BYTE PTR [ecx]
  41c826:	(bad)  
  41c827:	imul   ebp,DWORD PTR [edi+0x766c0d06],0xf
  41c82e:	xchg   esi,eax
  41c82f:	jo     0x41c84c
  41c831:	cmp    al,0xb8
  41c833:	mov    BYTE PTR [ebp+0x7a],0x25
  41c837:	xchg   ecx,eax
  41c838:	fxch   st(4)
  41c83a:	xchg   edx,eax
  41c83b:	(bad)  
  41c83c:	sub    eax,0xa1e5522a
  41c841:	adc    BYTE PTR [eax+0x4b7dfc18],dh
  41c847:	jmp    0x6210:0xe6725511
  41c84e:	std    
  41c84f:	and    esi,DWORD PTR [ebx+0x7c]
  41c852:	and    ch,BYTE PTR [esi+0x7cdc63d6]
  41c858:	sub    BYTE PTR [ebx],ch
  41c85a:	sub    al,0xce
  41c85c:	aad    0x32
  41c85e:	mov    al,ds:0x9ccaa761
  41c863:	sub    DWORD PTR [eax+0x26c63411],ebp
  41c869:	pop    ebx
  41c86a:	repnz pop ds
  41c86c:	fmul   QWORD PTR [edi-0x1a]
  41c86f:	add    BYTE PTR [ebp+0x45be8035],ch
  41c875:	xchg   ebp,eax
  41c876:	xchg   edi,eax
  41c877:	retf   0x56ee
  41c87a:	cdq    
  41c87b:	and    al,0x68
  41c87d:	add    BYTE PTR [esi-0x58f99255],cl
  41c883:	jp     0x41c8fb
  41c885:	add    eax,0xef2a5606
  41c88a:	clc    
  41c88b:	cwde   
  41c88c:	xor    ecx,DWORD PTR ds:0xa31562e1
  41c892:	and    BYTE PTR [edi+ecx*8+0x4fa42b35],al
  41c899:	popa   
  41c89a:	adc    al,0x11
  41c89c:	fldenv [ecx]
  41c89e:	les    edi,FWORD PTR [ebx+0x44b37b03]
  41c8a4:	stc    
  41c8a5:	jae    0x41c82b
  41c8a7:	cdq    
  41c8a8:	lds    ecx,FWORD PTR ds:0x3209d4fc
  41c8ae:	ss iret 
  41c8b0:	jb     0x41c857
  41c8b2:	in     eax,dx
  41c8b3:	jl     0x41c8f2
  41c8b5:	xchg   ecx,eax
  41c8b6:	xor    DWORD PTR [ecx],esi
  41c8b8:	fimul  WORD PTR [esi+0x67a59a56]
  41c8be:	scas   al,BYTE PTR es:[edi]
  41c8bf:	sub    BYTE PTR [eax+0x1e],bh
  41c8c2:	add    eax,0xdbfa0e9a
  41c8c7:	pop    es
  41c8c8:	imul   edx,DWORD PTR [edx-0x30f26430],0x5a
  41c8cf:	sub    bl,BYTE PTR [ecx-0x2]
  41c8d2:	cli    
  41c8d3:	out    0xd7,al
  41c8d5:	xchg   edx,eax
  41c8d6:	sub    al,0xfc
  41c8d8:	mov    esi,0x37159b64
  41c8dd:	(bad)  
  41c8de:	iret   
  41c8df:	mov    cl,0x19
  41c8e1:	cmp    esp,DWORD PTR [ebp-0x4]
  41c8e4:	iret   
  41c8e5:	mov    ds:0x5f682dce,eax
  41c8ea:	aam    0x7
  41c8ec:	mov    ecx,0x74745e34
  41c8f1:	push   cs
  41c8f2:	mov    ds:0xb60205d5,al
  41c8f7:	shl    ebx,1
  41c8f9:	sahf   
  41c8fa:	adc    eax,0xef736edd
  41c8ff:	stos   BYTE PTR es:[edi],al
  41c900:	ss pop esp
  41c902:	inc    esp
  41c903:	(bad)  [eax+0x1209fe45]
  41c909:	pop    ebp
  41c90a:	add    edx,ebx
  41c90c:	jmp    0x41c900
  41c90e:	loop   0x41c8c0
  41c910:	sbb    al,0x5b
  41c912:	push   0xa087ee02
  41c917:	scas   eax,DWORD PTR es:[edi]
  41c918:	lds    ebp,FWORD PTR [ebx-0x144cf50c]
  41c91e:	hlt    
  41c91f:	aad    0xc5
  41c921:	jg     0x41c8d3
  41c923:	xlat   BYTE PTR ds:[ebx]
  41c924:	rcr    dh,cl
  41c926:	out    dx,al
  41c927:	jno    0x41c95b
  41c929:	or     BYTE PTR [edx],ch
  41c92b:	ins    DWORD PTR es:[edi],dx
  41c92c:	cdq    
  41c92d:	cmp    eax,0xf5c5178a
  41c932:	sbb    bl,cl
  41c934:	test   DWORD PTR [ebx-0x1667a181],ebp
  41c93a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c93b:	popf   
  41c93c:	es mov dh,0x48
  41c93f:	mov    gs,edx
  41c941:	sub    DWORD PTR [edi+esi*2-0x7e],0xa7de4204
  41c949:	rcl    DWORD PTR [ecx],0x93
  41c94c:	dec    esi
  41c94d:	add    eax,0xa389c854
  41c952:	add    BYTE PTR ds:0xb9609111,dl
  41c958:	fld    QWORD PTR [edx]
  41c95a:	ja     0x41c95f
  41c95c:	in     al,dx
  41c95d:	mov    ds:0x51d339c0,al
  41c962:	or     al,0xe5
  41c964:	jmp    0xe49322d
  41c969:	ins    DWORD PTR es:[edi],dx
  41c96a:	mov    ecx,0x2bd5eacc
  41c96f:	jp     0x41c96e
  41c971:	jecxz  0x41c95a
  41c973:	into   
  41c974:	xchg   ecx,eax
  41c975:	adc    al,0xc8
  41c977:	adc    ebp,ebp
  41c979:	lods   eax,DWORD PTR ds:[esi]
  41c97a:	outs   dx,DWORD PTR ds:[esi]
  41c97b:	jo     0x41c988
  41c97d:	sub    BYTE PTR [ebp+0x3d],0xea
  41c981:	shr    WORD PTR [esi-0x1d7bd8c8],1
  41c988:	cmp    ch,dh
  41c98a:	outs   dx,BYTE PTR ds:[esi]
  41c98b:	test   eax,0xd32ede96
  41c990:	mov    edx,0x188de061
  41c995:	xchg   ebx,eax
  41c996:	retf   
  41c997:	(bad)  
  41c998:	sub    BYTE PTR [esp+edi*8],bh
  41c99b:	sar    DWORD PTR [ebp-0x57],cl
  41c99e:	in     al,0x39
  41c9a0:	cmp    BYTE PTR [edi+0x1c],0xd3
  41c9a4:	mov    dh,0x11
  41c9a6:	les    edi,FWORD PTR [edi-0x7e]
  41c9a9:	inc    ecx
  41c9aa:	push   0x75
  41c9ac:	fwait
  41c9ad:	mov    ebx,0xd1f7c64c
  41c9b2:	call   FWORD PTR es:[esi+eiz*2+0x3f]
  41c9b7:	add    DWORD PTR [eax-0x3afcbfae],0x10
  41c9be:	imul   BYTE PTR [ecx+0x64845bc4]
  41c9c4:	jbe    0x41ca14
  41c9c6:	stc    
  41c9c7:	xchg   ecx,eax
  41c9c8:	repz fsubrp st(3),st
  41c9cb:	mov    bl,0xc0
  41c9cd:	pop    edx
  41c9ce:	mov    eax,0xac6d0a2d
  41c9d3:	adc    DWORD PTR [eax-0x29],ebx
  41c9d6:	add    al,0xe1
  41c9d8:	ror    DWORD PTR [edi],1
  41c9da:	shl    DWORD PTR [edi],1
  41c9dc:	call   0x467b564b
  41c9e1:	call   0x11ff5161
  41c9e6:	xor    eax,0x9a9b1ccd
  41c9eb:	cmp    ebp,DWORD PTR [ebx-0x6c]
  41c9ee:	shl    DWORD PTR [ecx-0x3dc85225],0x61
  41c9f5:	rol    BYTE PTR [ecx],1
  41c9f7:	xor    eax,DWORD PTR [eax-0x70]
  41c9fa:	jno    0x41ca6b
  41c9fc:	push   es
  41c9fd:	jns    0x41ca0f
  41c9ff:	leave  
  41ca00:	rol    BYTE PTR [esi+0x32],cl
  41ca03:	js     0x41ca1c
  41ca05:	into   
  41ca06:	rcr    DWORD PTR [edx+0x10],1
  41ca09:	inc    esp
  41ca0a:	(bad)  
  41ca0c:	pusha  
  41ca0d:	cmp    al,0x1b
  41ca0f:	mov    al,0xf6
  41ca11:	mov    ebp,0x744146a2
  41ca16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca17:	mov    dl,0x42
  41ca19:	and    eax,0x234bedd9
  41ca1e:	fcomp  QWORD PTR [eax]
  41ca20:	std    
  41ca21:	xor    eax,0x9b9395a3
  41ca26:	mov    esi,0x7806a25e
  41ca2b:	adc    eax,0xc6ac2759
  41ca30:	(bad)  
  41ca31:	pop    ss
  41ca32:	or     BYTE PTR [eax],ch
  41ca34:	ins    DWORD PTR es:[edi],dx
  41ca35:	ja     0x41ca60
  41ca37:	add    eax,0x7fdf83e2
  41ca3c:	mov    dl,0x3f
  41ca3e:	dec    ebx
  41ca3f:	jns    0x41c9d3
  41ca41:	rcl    DWORD PTR [ecx+0x48],0x91
  41ca45:	push   ss
  41ca46:	add    eax,0x5ab2e2b
  41ca4b:	ins    DWORD PTR es:[edi],dx
  41ca4c:	bnd ret 0xd44a
  41ca50:	inc    eax
  41ca51:	or     al,al
  41ca53:	(bad)
  41ca56:	lds    edx,FWORD PTR [edi+eax*2+0x52aa8bb3]
  41ca5d:	xor    eax,0x1ed2ed0d
  41ca62:	aaa    
  41ca63:	mov    ah,0x68
  41ca65:	xchg   ebp,eax
  41ca66:	mov    DWORD PTR [edi+0x4fff9265],0x28acfb83
  41ca70:	imul   ecx,DWORD PTR [edx+0x5e],0xffffffda
  41ca74:	xor    eax,0x42c3ab47
  41ca79:	sbb    eax,0x6a848654
  41ca7e:	mov    dh,0x55
  41ca80:	out    0x4d,al
  41ca82:	push   eax
  41ca83:	test   ch,0x6e
  41ca86:	(bad)  
  41ca87:	jle    0x41ca26
  41ca89:	not    DWORD PTR [eax+0x486a5f8d]
  41ca8f:	in     eax,0xe4
  41ca91:	ins    BYTE PTR es:[di],dx
  41ca93:	imul   ecx,DWORD PTR [ebp+0x12],0xffffffa9
  41ca97:	xor    eax,0x14867116
  41ca9c:	ja     0x41cb1b
  41ca9e:	jmp    0x8121:0xbef71842
  41caa5:	mov    ch,0x75
  41caa7:	push   ss
  41caa8:	jb     0x41ca4d
  41caaa:	xor    al,0x41
  41caac:	int    0xcc
  41caae:	repnz or ah,BYTE PTR [ecx+0x2365fd9c]
  41cab5:	imul   DWORD PTR [ecx]
  41cab7:	add    DWORD PTR [ebx+ecx*4-0x2032211d],eax
  41cabe:	fsubr  QWORD PTR [edx-0x511febf1]
  41cac4:	push   0x4a
  41cac6:	pop    eax
  41cac7:	dec    esp
  41cac8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cac9:	push   ebp
  41caca:	push   0x7e16a306
  41cacf:	ret    0xb13c
  41cad2:	(bad)  
  41cad3:	jo     0x41caa3
  41cad5:	aam    0x5d
  41cad7:	inc    ebx
  41cad8:	arpl   WORD PTR [edx],ax
  41cada:	cdq    
  41cadb:	mov    ebp,0x9d264a72
  41cae0:	std    
  41cae1:	adc    al,0xb9
  41cae3:	adc    BYTE PTR [edi],ah
  41cae5:	(bad)  
  41cae7:	lods   eax,DWORD PTR ds:[esi]
  41cae8:	leave  
  41cae9:	push   es
  41caea:	sub    ah,dl
  41caec:	jo     0x41cb4e
  41caee:	mov    ch,0xae
  41caf0:	inc    eax
  41caf1:	mov    ebx,0xeff2d9bd
  41caf6:	mov    dh,BYTE PTR [esi-0x2d859d4]
  41cafc:	shl    DWORD PTR [ebp+0x5f37cae9],cl
  41cb02:	repz mov cl,0xc
  41cb05:	xor    eax,0x6025b9c8
  41cb0a:	aad    0x65
  41cb0c:	push   ss
  41cb0d:	xor    eax,0xbba7c903
  41cb12:	pop    edi
  41cb13:	lock push edi
  41cb15:	lea    ebp,[edx+0x2b64c015]
  41cb1b:	push   eax
  41cb1c:	icebp  
  41cb1d:	mov    db0,ebp
  41cb20:	ja     0x41cab5
  41cb22:	loope  0x41cb11
  41cb24:	pop    eax
  41cb25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb26:	push   ds
  41cb27:	add    ecx,ecx
  41cb29:	sub    ecx,DWORD PTR [eax+esi*4+0x16]
  41cb2d:	mov    BYTE PTR [esi+0x11314e9e],dl
  41cb33:	shr    BYTE PTR [ecx+0x45],0xa1
  41cb37:	pop    es
  41cb38:	inc    esp
  41cb39:	je     0x41cbb1
  41cb3b:	dec    eax
  41cb3c:	sbb    al,0xb5
  41cb3e:	and    edi,DWORD PTR [eax+0x1140b70c]
  41cb44:	outs   dx,BYTE PTR ds:[esi]
  41cb45:	mov    dl,0xbc
  41cb47:	ror    BYTE PTR [ebx-0x52],0xe7
  41cb4b:	dec    esp
  41cb4c:	arpl   WORD PTR [eax+0x61],dx
  41cb4f:	xchg   ebx,eax
  41cb50:	cmp    BYTE PTR [edi-0x12],ch
  41cb53:	test   DWORD PTR [edi+0x361fa289],ecx
  41cb59:	loopne 0x41cbaa
  41cb5b:	cmc    
  41cb5c:	dec    ebp
  41cb5d:	ret    
  41cb5e:	pop    ebp
  41cb5f:	sar    DWORD PTR [eax],0xbd
  41cb62:	fimul  DWORD PTR [ebx]
  41cb64:	or     esi,esi
  41cb66:	jmp    0x41cb4f
  41cb68:	sub    al,0x4e
  41cb6a:	push   edi
  41cb6b:	dec    ecx
  41cb6c:	or     al,0x1
  41cb6e:	fisttp QWORD PTR [esi]
  41cb70:	cmp    bl,0xbc
  41cb73:	addr16 aas 
  41cb75:	mov    ds:0x6799d9f6,al
  41cb7a:	and    al,0x6
  41cb7c:	inc    esi
  41cb7d:	int    0x49
  41cb7f:	mov    edx,0xdc5393ba
  41cb84:	adc    eax,0xc776aef3
  41cb89:	dec    ebx
  41cb8a:	aad    0x34
  41cb8c:	adc    BYTE PTR [edx],ah
  41cb8e:	mov    ds:0x6c1b4fec,al
  41cb93:	mov    eax,0x7f659c71
  41cb98:	jmp    0x41cbe1
  41cb9a:	jns    0x41cb3c
  41cb9c:	mov    ds:0x320bdf09,eax
  41cba1:	shl    BYTE PTR [ebx],0x88
  41cba4:	fs out dx,eax
  41cba6:	ss (bad) 
  41cba8:	pop    edi
  41cba9:	sub    eax,DWORD PTR [eax+eax*1+0x3a6ac306]
  41cbb0:	fwait
  41cbb1:	lods   eax,DWORD PTR ds:[esi]
  41cbb2:	add    DWORD PTR [esi+edx*8+0x7cad06f1],eax
  41cbb9:	pop    ebp
  41cbba:	out    0xbd,eax
  41cbbc:	sar    edi,0x8a
  41cbbf:	add    eax,0x462c5766
  41cbc4:	mov    dl,BYTE PTR [ecx]
  41cbc6:	ror    ecx,1
  41cbc8:	cmp    al,0x63
  41cbca:	clc    
  41cbcb:	out    dx,al
  41cbcc:	ss jno 0x41cbf3
  41cbcf:	mov    edx,0xcfd4354c
  41cbd4:	xor    edi,ecx
  41cbd6:	addr16 and eax,ecx
  41cbd9:	retf   0x6c47
  41cbdc:	inc    edi
  41cbdd:	ficomp DWORD PTR gs:[eax]
  41cbe0:	mov    al,0x92
  41cbe2:	xor    esi,DWORD PTR [edx-0x1dd3e1f7]
  41cbe8:	repnz dec edi
  41cbea:	mov    ecx,0xb3a599e
  41cbef:	retf   0x3e70
  41cbf2:	adc    ch,0xe3
  41cbf5:	inc    edi
  41cbf6:	add    BYTE PTR [edx],al
  41cbf8:	pop    esi
  41cbf9:	js     0x41cc3f
  41cbfb:	fdivrp st(6),st
  41cbfd:	pop    eax
  41cbfe:	enter  0x6ab2,0xf4
  41cc02:	fdiv   DWORD PTR [ecx]
  41cc04:	iret   
  41cc05:	mov    WORD PTR [ebx-0x59fb1088],?
  41cc0b:	mov    ebx,DWORD PTR [esi]
  41cc0d:	or     BYTE PTR [esi],cl
  41cc0f:	pop    es
  41cc10:	std    
  41cc11:	add    BYTE PTR [esi],cl
  41cc13:	ja     0x41cbcd
  41cc15:	dec    eax
  41cc16:	inc    edi
  41cc17:	not    BYTE PTR [edx-0x26921056]
  41cc1d:	sahf   
  41cc1e:	retf   
  41cc1f:	push   ebx
  41cc20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc21:	dec    ebx
  41cc22:	mov    dl,0x7d
  41cc24:	retf   0x38df
  41cc27:	inc    ebp
  41cc28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc29:	mov    ebp,0xc5e89169
  41cc2e:	int    0xe3
  41cc30:	das    
  41cc31:	sti    
  41cc32:	in     eax,0xae
  41cc34:	test   al,0xc8
  41cc36:	bound  edx,QWORD PTR [esi]
  41cc38:	sub    esi,DWORD PTR [ecx-0x37]
  41cc3b:	mov    ds:0xd67014f9,al
  41cc40:	into   
  41cc41:	ins    BYTE PTR es:[edi],dx
  41cc42:	lea    esi,[eax]
  41cc44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc45:	dec    esp
  41cc46:	stos   DWORD PTR es:[edi],eax
  41cc47:	xchg   esi,eax
  41cc48:	sub    dl,bh
  41cc4a:	aas    
  41cc4b:	rol    BYTE PTR [esi-0x28],1
  41cc4e:	dec    edi
  41cc4f:	xor    dl,BYTE PTR [bx+si-0x15c1]
  41cc54:	add    eax,0x688e22d
  41cc59:	push   es
  41cc5a:	jecxz  0x41cc45
  41cc5c:	mov    bl,0x12
  41cc5e:	clc    
  41cc5f:	pop    esp
  41cc60:	int3   
  41cc61:	test   DWORD PTR [eax-0x3e],ecx
  41cc64:	mov    eax,ds:0x13b9a677
  41cc69:	cmp    BYTE PTR [edx],dh
  41cc6b:	scas   al,BYTE PTR es:[edi]
  41cc6c:	xlat   BYTE PTR ds:[ebx]
  41cc6d:	out    0xed,al
  41cc6f:	sbb    eax,0x31411e7a
  41cc74:	imul   ebx,edi,0xfffffffb
  41cc77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc78:	mov    ebp,0x5c6ddfef
  41cc7d:	ss xchg edx,eax
  41cc7f:	sahf   
  41cc80:	sbb    eax,0xf71601ef
  41cc85:	outs   dx,BYTE PTR ds:[esi]
  41cc86:	shl    DWORD PTR [ebp+0xf1390c2],0x8d
  41cc8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc8f:	fdivrp st(5),st
  41cc91:	imul   edx,DWORD PTR [ecx],0xfffffff0
  41cc94:	jo     0x41ccc1
  41cc96:	and    al,0xd6
  41cc98:	test   eax,0x128545f4
  41cc9d:	(bad)  
  41cc9e:	adc    ch,BYTE PTR [ebx-0x206faf6a]
  41cca4:	test   eax,0x9beff863
  41cca9:	fs xchg ebp,eax
  41ccab:	stos   DWORD PTR es:[edi],eax
  41ccac:	mov    WORD PTR [edx+0x16],ds
  41ccaf:	jb     0x41cc69
  41ccb1:	xchg   BYTE PTR [esi],dl
  41ccb3:	pop    edx
  41ccb4:	retf   
  41ccb5:	jbe    0x41cd32
  41ccb7:	lods   eax,DWORD PTR ds:[esi]
  41ccb8:	xor    DWORD PTR [ecx+0x637dd7e8],esp
  41ccbe:	dec    esi
  41ccbf:	hlt    
  41ccc0:	clc    
  41ccc1:	push   cs
  41ccc2:	push   0x3ed7580e
  41ccc7:	fwait
  41ccc8:	pop    esi
  41ccc9:	aas    
  41ccca:	mov    bl,0xdc
  41cccc:	xchg   ebp,eax
  41cccd:	ret    0x339f
  41ccd0:	and    al,bh
  41ccd2:	and    al,0x7
  41ccd4:	or     BYTE PTR [ecx*2-0x2286bac8],0x13
  41ccdc:	push   ss
  41ccdd:	mov    edi,0xf8b9f8bc
  41cce2:	test   ebp,edi
  41cce4:	mov    ds:0x8eb080d4,eax
  41cce9:	pop    ds
  41ccea:	lahf   
  41cceb:	and    al,0xff
  41ccee:	jp     0x41ccd9
  41ccf0:	mov    BYTE PTR [ecx],al
  41ccf2:	mov    dl,0x43
  41ccf4:	add    eax,0x8fc50bc1
  41ccf9:	scas   al,BYTE PTR es:[edi]
  41ccfa:	das    
  41ccfb:	jg     0x41cc84
  41ccfd:	jns    0x41ccd7
  41ccff:	call   DWORD PTR [eax+0x8]
  41cd02:	mov    ebx,eax
  41cd04:	and    dh,BYTE PTR [ebx]
  41cd06:	adc    dl,bl
  41cd08:	add    BYTE PTR [esi-0x1a],al
  41cd0b:	xor    al,0xd9
  41cd0d:	shl    BYTE PTR [ebp-0x7d],0x6a
  41cd11:	imul   ebp,esp,0x5
  41cd14:	lea    ecx,[eax+0x20]
  41cd17:	lds    eax,FWORD PTR [edx]
  41cd19:	jb     0x41cd24
  41cd1b:	add    BYTE PTR [edx+0x7615393d],al
  41cd21:	xchg   ah,ah
  41cd23:	add    BYTE PTR [ebp+0x79919ec8],bl
  41cd29:	sub    ch,BYTE PTR [edx+0xf]
  41cd2c:	push   es
  41cd2d:	jp     0x41cd62
  41cd2f:	cli    
  41cd30:	loop   0x41cce4
  41cd32:	out    dx,eax
  41cd33:	out    dx,eax
  41cd34:	fadd   st,st(7)
  41cd36:	test   DWORD PTR [edx-0x30],ebp
  41cd39:	xchg   edi,eax
  41cd3a:	(bad)  
  41cd3b:	or     bl,cl
  41cd3d:	loopne 0x41cd90
  41cd3f:	xor    al,0x59
  41cd41:	push   es
  41cd42:	inc    edx
  41cd43:	(bad)  
  41cd44:	mov    ecx,0xd72e083a
  41cd49:	dec    eax
  41cd4a:	repz icebp 
  41cd4c:	jnp    0x41cdc8
  41cd4e:	sbb    edx,ecx
  41cd50:	shr    DWORD PTR [edi+0xf],cl
  41cd53:	jmp    0x84fc1e62
  41cd58:	into   
  41cd59:	f2xm1  
  41cd5b:	push   0xffffffb3
  41cd5d:	push   ss
  41cd5e:	mov    ah,BYTE PTR ds:0x5f8eb109
  41cd64:	inc    ecx
  41cd65:	mov    ah,0x66
  41cd67:	stc    
  41cd68:	repnz mov dl,BYTE PTR [eax+0x59]
  41cd6c:	daa    
  41cd6d:	rcl    DWORD PTR [ecx-0x5],0xab
  41cd71:	push   esi
  41cd72:	and    eax,0x95ff9122
  41cd77:	xchg   ebp,eax
  41cd78:	data16 shl BYTE PTR ds:0xae3016d6,0x93
  41cd80:	xchg   BYTE PTR [eax+0x248bf9f6],al
  41cd86:	inc    eax
  41cd87:	loop   0x41ce03
  41cd89:	(bad)  
  41cd8a:	xchg   DWORD PTR [ebp+0x61],edx
  41cd8d:	dec    esi
  41cd8e:	fmulp  st(0),st
  41cd90:	xchg   esp,eax
  41cd91:	and    BYTE PTR [edx],0x2
  41cd94:	into   
  41cd95:	mov    es,eax
  41cd97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd98:	test   al,0xb7
  41cd9a:	jo     0x41cd38
  41cd9c:	adc    BYTE PTR [eax],cl
  41cd9e:	inc    edi
  41cd9f:	or     dl,bh
  41cda1:	je     0x41ce1c
  41cda3:	add    BYTE PTR [ebx],al
  41cda5:	push   ds
  41cda6:	bnd call 0x66728158
  41cdac:	pop    esp
  41cdad:	mov    al,ds:0xc69024ea
  41cdb2:	adc    eax,0xf107279e
  41cdb7:	rcr    BYTE PTR [eax+0x74cf473],0xc4
  41cdbe:	cmp    ch,al
  41cdc0:	inc    ecx
  41cdc1:	shl    BYTE PTR ds:0x6b0715c2,cl
  41cdc7:	mov    ecx,esi
  41cdc9:	in     eax,0xa8
  41cdcb:	mov    dl,0x18
  41cdcd:	ror    BYTE PTR [eax-0x5d],0xd8
  41cdd1:	(bad)
  41cdd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cdd6:	mov    ebp,0xd45f0698
  41cddb:	and    dl,BYTE PTR [esi-0x4afaa23b]
  41cde1:	(bad)  
  41cde2:	jmp    0x41cdfa
  41cde4:	scas   eax,DWORD PTR es:[edi]
  41cde5:	mov    esp,DWORD PTR [ebx-0x284125f6]
  41cdeb:	pop    esp
  41cdec:	xlat   BYTE PTR ds:[ebx]
  41cded:	stos   BYTE PTR es:[edi],al
  41cdee:	jo     0x41cdd7
  41cdf0:	mov    esp,0x5c099005
  41cdf5:	jno    0x41ce3c
  41cdf7:	mov    bh,0x51
  41cdf9:	jbe    0x41ce64
  41cdfb:	xor    al,0xe8
  41cdfd:	inc    ebp
  41cdfe:	bound  esi,QWORD PTR [edi-0x31f5e062]
  41ce04:	jle    0x41ce73
  41ce06:	xor    ebx,DWORD PTR [eax-0x5854a8b9]
  41ce0c:	jno    0x41ce69
  41ce0e:	mov    eax,ds:0xf76d5332
  41ce13:	stos   DWORD PTR es:[edi],eax
  41ce14:	enter  0x4cdd,0xc
  41ce18:	pop    ebp
  41ce19:	fwait
  41ce1a:	or     BYTE PTR [edi+0x399b4fa],bl
  41ce20:	xor    al,0x76
  41ce22:	ds cld 
  41ce24:	cli    
  41ce25:	ins    BYTE PTR es:[edi],dx
  41ce26:	mov    cl,0x33
  41ce28:	addr16 xchg edi,eax
  41ce2a:	test   BYTE PTR es:[eax],bl
  41ce2d:	mov    eax,0x6ffaca01
  41ce32:	dec    edx
  41ce33:	hlt    
  41ce34:	mov    eax,0x4947c81b
  41ce39:	dec    ebp
  41ce3a:	inc    ebp
  41ce3b:	sbb    BYTE PTR [edi-0xc0de95],dh
  41ce41:	jno    0x41cdd8
  41ce43:	xor    dh,bl
  41ce45:	adc    edi,ecx
  41ce47:	repnz mov BYTE PTR [edx-0x1d5307b1],al
  41ce4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce4f:	in     al,0x7f
  41ce51:	or     ch,ah
  41ce53:	push   0xcd30c20e
  41ce58:	stc    
  41ce59:	or     DWORD PTR [ecx-0x382ee540],ecx
  41ce5f:	mov    al,ds:0xfbff3307
  41ce64:	dec    edx
  41ce65:	sub    al,0x38
  41ce67:	jne    0x41ce01
  41ce69:	pop    ss
  41ce6a:	aam    0xdc
  41ce6c:	mov    WORD PTR ds:0x9a3b55f8,gs
  41ce72:	fstp   QWORD PTR [ecx+0x302830ec]
  41ce78:	in     eax,dx
  41ce79:	(bad)  
  41ce7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce7b:	out    dx,eax
  41ce7c:	xchg   DWORD PTR [ebx+ebp*8+0x30],ecx
  41ce80:	mov    ds:0x9165e85c,eax
  41ce85:	fcmovnb st,st(1)
  41ce87:	mov    edx,0xe5dffb4
  41ce8c:	push   ds
  41ce8d:	out    dx,al
  41ce8e:	xchg   edx,eax
  41ce8f:	in     eax,0x4a
  41ce91:	stc    
  41ce92:	cmp    eax,0xe6d0ec4b
  41ce97:	test   ecx,esp
  41ce99:	cmp    BYTE PTR [edi+ebx*8-0x2809dc3a],ah
  41cea0:	sbb    esp,DWORD PTR [ecx-0x38f91972]
  41cea6:	cs mov dl,0xde
  41cea9:	hlt    
  41ceaa:	pop    ebp
  41ceab:	mov    al,ds:0x21e90916
  41ceb0:	mov    BYTE PTR [eax+0x6ca6b1cc],ah
  41ceb6:	xor    eax,0x12fcac1b
  41cebb:	loop   0x41cec2
  41cebd:	xchg   edi,eax
  41cebe:	sahf   
  41cebf:	inc    ecx
  41cec0:	popw   ds
  41cec2:	add    DWORD PTR [ecx],0xffffffa6
  41cec5:	cli    
  41cec6:	rol    DWORD PTR [esp+eiz*4],0x6
  41ceca:	jo     0x41ceda
  41cecc:	mov    ah,0x70
  41cece:	test   BYTE PTR [esi],0x46
  41ced1:	call   0xc0525324
  41ced6:	and    BYTE PTR [edx-0x4d],al
  41ced9:	and    al,BYTE PTR cs:[ecx+0x7b7e4af9]
  41cee0:	or     DWORD PTR [edx+0x43887c41],0xd5772b42
  41ceea:	jmp    0x66d7:0xeb78501f
  41cef1:	lods   al,BYTE PTR ds:[esi]
  41cef2:	mov    BYTE PTR [ecx],ch
  41cef4:	lods   al,BYTE PTR ds:[esi]
  41cef5:	bound  edx,QWORD PTR [eax]
  41cef7:	test   al,0x34
  41cef9:	fucomi st,st(4)
  41cefb:	leave  
  41cefc:	popa   
  41cefd:	jmp    0xab4f:0x4214a8c9
  41cf04:	out    0xc4,eax
  41cf06:	mov    ds:0x39c27c42,eax
  41cf0b:	sub    al,0xb8
  41cf0d:	(bad)  
  41cf0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf0f:	push   ebx
  41cf10:	ja     0x41cf7f
  41cf12:	pop    esp
  41cf13:	jecxz  0x41cf8b
  41cf15:	je     0x41cf4d
  41cf17:	test   eax,0x303b818d
  41cf1c:	mov    al,ds:0x16acdc26
  41cf21:	sbb    ecx,DWORD PTR [ebx]
  41cf23:	sti    
  41cf24:	shl    DWORD PTR [edx-0x3fa068e6],0x54
  41cf2b:	rcr    bh,1
  41cf2d:	gs mov ebp,0x216cc02d
  41cf33:	(bad)  
  41cf34:	sub    edi,DWORD PTR [ecx-0x477d0c9e]
  41cf3a:	fst    QWORD PTR [ebx+ecx*4-0x28]
  41cf3e:	push   esi
  41cf3f:	cwde   
  41cf40:	jmp    0x56ca9660
  41cf45:	inc    esi
  41cf46:	cmp    DWORD PTR [eax-0x1b0b8102],ecx
  41cf4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf4d:	in     al,0x17
  41cf4f:	test   eax,0xb30409c0
  41cf54:	xchg   ebx,eax
  41cf55:	cmc    
  41cf56:	pop    eax
  41cf57:	jbe    0x41cf37
  41cf59:	xchg   ebx,eax
  41cf5a:	rol    DWORD PTR [eax+ecx*4-0x16bb2ed5],1
  41cf61:	stos   BYTE PTR es:[edi],al
  41cf62:	cli    
  41cf63:	add    dl,cl
  41cf65:	subps  xmm4,XMMWORD PTR [ecx+eax*2-0x19]
  41cf6a:	fs cdq 
  41cf6c:	xor    al,0x25
  41cf6e:	fadd   QWORD PTR [ecx+0x4151445c]
  41cf74:	cdq    
  41cf75:	push   ds
  41cf76:	mov    edi,DWORD PTR [esi]
  41cf78:	inc    eax
  41cf79:	retf   
  41cf7a:	push   0xf035c8a3
  41cf7f:	xchg   ebx,eax
  41cf80:	lods   ax,WORD PTR ds:[esi]
  41cf82:	(bad)  
  41cf84:	or     eax,0x82dbaba2
  41cf89:	stc    
  41cf8a:	push   edx
  41cf8b:	pushf  
  41cf8c:	dec    ecx
  41cf8d:	imul   eax,DWORD PTR ds:0x41ced44b,0xf213f79c
  41cf97:	inc    esi
  41cf98:	xchg   edi,eax
  41cf99:	ins    DWORD PTR es:[edi],dx
  41cf9a:	and    DWORD PTR [eax],0x73
  41cf9d:	stos   BYTE PTR es:[edi],al
  41cf9e:	jge    0x41cf73
  41cfa0:	mov    edi,0x6786ee5c
  41cfa5:	(bad)  
  41cfa6:	imul   ecx,esp,0x1a
  41cfa9:	xor    al,0xcc
  41cfab:	jle    0x41cfce
  41cfad:	mov    esi,0xd14dfbe8
  41cfb2:	mov    esi,0xe3922bd1
  41cfb7:	xor    BYTE PTR [ebx+0x4e],al
  41cfba:	int3   
  41cfbb:	shr    DWORD PTR [edi-0x25e65ea0],0xc5
  41cfc2:	mov    ds:0x385398c5,al
  41cfc7:	fld    TBYTE PTR [ebx-0x4e]
  41cfca:	popf   
  41cfcb:	mov    ah,0x33
  41cfcd:	xor    DWORD PTR [edx],edx
  41cfcf:	aaa    
  41cfd0:	pop    ebx
  41cfd1:	xchg   edi,eax
  41cfd2:	jp     0x41cfb0
  41cfd4:	adc    ch,BYTE PTR ds:0xf77fb228
  41cfda:	(bad)  
  41cfdb:	int3   
  41cfdc:	test   BYTE PTR [edi+0x79],dl
  41cfdf:	outs   dx,DWORD PTR ds:[esi]
  41cfe0:	daa    
  41cfe1:	cs mov eax,0x89c34766
  41cfe7:	out    0x52,eax
  41cfe9:	cmc    
  41cfea:	lods   al,BYTE PTR ds:[esi]
  41cfeb:	inc    ebx
  41cfec:	fst    QWORD PTR [ecx+0x29]
  41cfef:	lock pushf 
  41cff1:	and    DWORD PTR [eax],ebp
  41cff3:	pop    edi
  41cff4:	ins    BYTE PTR es:[edi],dx
  41cff5:	sub    BYTE PTR [eax-0x6b],bh
  41cff8:	mov    esp,0x1c674877
  41cffd:	dec    eax
  41cffe:	jne    0x41d01c
  41d000:	not    DWORD PTR [eax]
  41d002:	push   ss
  41d003:	push   ss
  41d004:	xchg   edi,eax
  41d005:	add    eax,DWORD PTR [ebp-0x404398c4]
  41d00b:	nop
  41d00c:	jmp    FWORD PTR [esi+0x5033556e]
  41d012:	ret    
  41d013:	sbb    esp,ebx
  41d015:	jno    0x41cfdb
  41d017:	inc    edi
  41d018:	adc    edx,0x5b
  41d01b:	aas    
  41d01c:	sbb    al,0x23
  41d01e:	add    al,bl
  41d020:	mov    edi,0x59535ddd
  41d025:	lods   eax,DWORD PTR ds:[esi]
  41d026:	jns    0x41d0a6
  41d028:	test   DWORD PTR fs:[edi+0x9],0x6aa019d4
  41d030:	pop    ebx
  41d031:	inc    ecx
  41d032:	test   BYTE PTR [ecx-0x54ad4807],bh
  41d038:	popa   
  41d039:	xchg   esi,eax
  41d03a:	bnd jo 0x41d08f
  41d03d:	cmp    al,0x2a
  41d03f:	in     al,dx
  41d040:	jae    0x41d04f
  41d042:	in     eax,0x44
  41d044:	and    BYTE PTR [ebx-0x1ebf2c3b],0xd5
  41d04b:	popa   
  41d04c:	in     eax,dx
  41d04d:	mov    BYTE PTR [edi],dh
  41d04f:	pop    ss
  41d050:	inc    esp
  41d051:	push   0xffffffd3
  41d053:	out    0x60,eax
  41d055:	(bad)  
  41d056:	pop    ss
  41d057:	lds    edx,FWORD PTR [edi-0x73]
  41d05a:	loopne 0x41d086
  41d05c:	and    ebx,DWORD PTR [ecx+0x4ebadfe0]
  41d062:	push   ss
  41d063:	xlat   BYTE PTR ds:[ebx]
  41d064:	(bad)  
  41d065:	cmp    edx,DWORD PTR [edx]
  41d067:	into   
  41d068:	or     esi,0xffffffc5
  41d06b:	jne    0x41d07a
  41d06d:	outs   dx,BYTE PTR ds:[esi]
  41d06e:	xchg   ebp,ebp
  41d070:	dec    edx
  41d071:	daa    
  41d072:	pop    eax
  41d073:	jne    0x41d09c
  41d075:	sub    eax,0xa908e9cc
  41d07a:	adc    ch,BYTE PTR [eax-0x1f66e0c0]
  41d080:	popf   
  41d081:	inc    edi
  41d082:	push   ds
  41d083:	mov    ds:0x6d63d419,al
  41d088:	xchg   ebx,eax
  41d089:	xchg   BYTE PTR [ebp+ecx*2-0x28],ch
  41d08d:	ret    
  41d08e:	mov    ds:0x8f4f7360,eax
  41d093:	sti    
  41d094:	fnstsw WORD PTR [ebp+0x58bee45a]
  41d09a:	out    0x97,eax
  41d09c:	mov    ebx,0x6b447d25
  41d0a1:	cdq    
  41d0a2:	ror    BYTE PTR [edi-0x5e1b06cd],0xa0
  41d0a9:	dec    edx
  41d0aa:	syscall 
  41d0ac:	pushf  
  41d0ad:	sbb    ah,bh
  41d0af:	mov    cl,0xc7
  41d0b1:	lock scas al,BYTE PTR es:[edi]
  41d0b3:	(bad)  
  41d0b4:	js     0x41d05a
  41d0b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d0b7:	mov    al,ds:0xa5fe1d29
  41d0bc:	cdq    
  41d0bd:	cdq    
  41d0be:	jbe    0x41d057
  41d0c0:	dec    ebp
  41d0c1:	mov    ebx,0x8328a6ed
  41d0c6:	loope  0x41d0c1
  41d0c8:	add    al,0x84
  41d0ca:	outs   dx,DWORD PTR ds:[esi]
  41d0cb:	add    bh,ch
  41d0cd:	dec    esp
  41d0ce:	cwde   
  41d0cf:	add    ch,ah
  41d0d1:	int3   
  41d0d2:	test   al,0xe6
  41d0d4:	retf   0xba37
  41d0d7:	sbb    ecx,edi
  41d0d9:	ss (bad) 
  41d0db:	cmp    eax,0x832b67a5
  41d0e0:	div    ecx
  41d0e2:	dec    esp
  41d0e3:	mov    ecx,0xab0b708e
  41d0e8:	pop    esp
  41d0e9:	cs retf 
  41d0eb:	test   al,0xf7
  41d0ed:	add    BYTE PTR [ebp+0x47773caa],ah
  41d0f3:	aas    
  41d0f4:	push   ebx
  41d0f5:	int3   
  41d0f6:	inc    edi
  41d0f7:	and    DWORD PTR [edx],0xffffffea
  41d0fa:	mov    al,ds:0xd219a7da
  41d0ff:	pop    ecx
  41d100:	add    ebp,edi
  41d102:	imul   BYTE PTR [ebp-0x70]
  41d105:	out    dx,eax
  41d106:	mov    edi,0x68a71881
  41d10b:	cmp    ebx,DWORD PTR [ecx]
  41d10d:	test   al,0x86
  41d10f:	or     al,0xf7
  41d111:	jns    0x41d103
  41d113:	sbb    BYTE PTR [ebx-0x14],0x47
  41d117:	cmp    al,0x12
  41d119:	mov    al,ds:0x2338a9dc
  41d11e:	mov    ds:0x85739579,al
  41d123:	ds and al,0xe
  41d126:	mov    bh,0x8e
  41d128:	inc    ebp
  41d129:	clc    
  41d12a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d12b:	xchg   esp,eax
  41d12c:	test   al,0xd7
  41d12e:	push   cs
  41d12f:	in     al,dx
  41d130:	jge    0x41d165
  41d132:	(bad)  
  41d133:	cwde   
  41d134:	and    esi,DWORD PTR [ebx-0x8]
  41d137:	clc    
  41d138:	call   0xebc6c6e4
  41d13d:	ss jmp 0x4d6a4824
  41d143:	xchg   edi,eax
  41d144:	lds    ebx,FWORD PTR [ebp+0xc18cccc]
  41d14a:	(bad)  
  41d14b:	xchg   ebx,eax
  41d14c:	pop    es
  41d14d:	xor    al,0xc1
  41d14f:	es lock fsubp st(2),st
  41d153:	jp     0x41d19c
  41d155:	sbb    DWORD PTR [edi-0x2b480bf6],edi
  41d15b:	outs   dx,BYTE PTR ds:[esi]
  41d15c:	adc    eax,0xa584320a
  41d161:	out    0xf,al
  41d163:	stc    
  41d164:	cmp    dh,BYTE PTR [ebx-0x3ee9d076]
  41d16a:	jno    0x41d1ab
  41d16c:	add    eax,0x11e4f21a
  41d171:	adc    eax,DWORD PTR [ebx-0xb38bc4a]
  41d177:	mov    bl,0x4c
  41d179:	cmc    
  41d17a:	repnz sbb DWORD PTR [ebp-0x7f93c3d5],edx
  41d181:	outs   dx,BYTE PTR ds:[esi]
  41d182:	adc    bh,cl
  41d184:	cs mov dl,0xcc
  41d187:	ret    
  41d188:	out    dx,eax
  41d189:	daa    
  41d18a:	xchg   esp,eax
  41d18b:	cwde   
  41d18c:	sbb    DWORD PTR [edx-0x15],edi
  41d18f:	add    ch,BYTE PTR [esi+edi*4-0x4c]
  41d193:	nop
  41d194:	dec    edi
  41d195:	push   esi
  41d196:	mov    esi,DWORD PTR [ebx-0x80]
  41d199:	cmp    edi,DWORD PTR [ebx+0x1b075d37]
  41d19f:	pop    ecx
  41d1a0:	jmp    0xb340:0x97975bdc
  41d1a7:	jmp    0x41d21d
  41d1a9:	not    BYTE PTR [edi-0x46]
  41d1ac:	add    DWORD PTR [eax+0x421654c3],0x1d
  41d1b3:	jbe    0x41d197
  41d1b5:	popa   
  41d1b6:	std    
  41d1b7:	add    DWORD PTR [ebp+0x2bbb00ff],esp
  41d1bd:	sub    eax,0x48c6388e
  41d1c2:	pop    ds
  41d1c3:	ret    
  41d1c4:	mov    esp,fs
  41d1c6:	ins    BYTE PTR es:[edi],dx
  41d1c7:	lock repnz mov ebx,0x766c7ce9
  41d1ce:	in     al,dx
  41d1cf:	sahf   
  41d1d0:	xor    dh,BYTE PTR [ebx+0x1a630876]
  41d1d6:	(bad)  
  41d1d7:	jne    0x41d251
  41d1d9:	cmp    eax,0x991d0f6f
  41d1de:	nop
  41d1df:	push   0xc7e019d1
  41d1e4:	in     eax,dx
  41d1e5:	(bad)  
  41d1e6:	pop    ebp
  41d1e7:	pop    edx
  41d1e8:	cld    
  41d1e9:	or     bl,dl
  41d1eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d1ec:	adc    DWORD PTR [edx+edi*4+0x67],esi
  41d1f0:	sub    cl,0xb
  41d1f3:	cmp    al,0x51
  41d1f5:	sbb    esp,ebx
  41d1f7:	xor    eax,0x73a6216d
  41d1fc:	mov    cl,0x97
  41d1fe:	ins    DWORD PTR es:[edi],dx
  41d1ff:	adc    cl,BYTE PTR [esi-0x4beb29cb]
  41d205:	add    bl,ch
  41d207:	daa    
  41d208:	(bad)  
  41d209:	into   
  41d20a:	ins    BYTE PTR es:[edi],dx
  41d20b:	sbb    eax,DWORD PTR [edx]
  41d20d:	fidiv  WORD PTR ds:0xb4b2b0e6
  41d213:	test   DWORD PTR [ecx+0x19],edx
  41d216:	out    dx,al
  41d217:	div    BYTE PTR [ecx-0x13fc04ba]
  41d21d:	xchg   edx,eax
  41d21e:	dec    esp
  41d21f:	imul   esi,edx,0xf969c449
  41d225:	fs cdq 
  41d227:	sbb    al,0xc7
  41d229:	jmp    0x817d:0xbe6a372a
  41d230:	add    edx,edx
  41d232:	lock mov BYTE PTR [ebx-0x5b],bh
  41d236:	clc    
  41d237:	adc    edi,DWORD PTR [esi+0x2d]
  41d23a:	cs scas eax,DWORD PTR es:[edi]
  41d23c:	xchg   ebx,eax
  41d23d:	push   eax
  41d23e:	inc    esi
  41d23f:	dec    esp
  41d240:	adc    al,0x81
  41d242:	and    bl,BYTE PTR [esi]
  41d244:	xor    al,0x5
  41d246:	mov    ebx,0x7d877486
  41d24b:	mov    dh,0xbd
  41d24d:	dec    ebx
  41d24e:	mov    al,ds:0x431d58f7
  41d253:	jge    0x41d2cc
  41d255:	in     al,0xe9
  41d257:	mov    esp,edx
  41d259:	pop    ebp
  41d25a:	lds    edi,FWORD PTR [ebx+0x3a2f9c19]
  41d260:	mov    BYTE PTR [ebx-0x3340b25d],al
  41d266:	add    BYTE PTR [ecx+0x2342b4dc],al
  41d26c:	bound  ebx,QWORD PTR [edi+0x7b]
  41d26f:	mov    dh,0xed
  41d271:	xchg   edi,eax
  41d272:	loopne 0x41d2f3
  41d274:	int    0x30
  41d276:	push   edi
  41d277:	(bad)  
  41d279:	js     0x41d2ed
  41d27b:	jle    0x41d2bf
  41d27d:	mov    ds:0x4f4e1a66,al
  41d282:	jg     0x41d26d
  41d284:	dec    eax
  41d285:	loopne 0x41d283
  41d287:	jbe    0x41d20a
  41d289:	adc    DWORD PTR [ebx],0xffffffbe
  41d28c:	inc    ecx
  41d28d:	ficomp WORD PTR [ebp+0x6e4d2f54]
  41d293:	xor    edi,DWORD PTR [ecx+0x78]
  41d296:	dec    ebp
  41d297:	jge    0x41d30f
  41d299:	adc    DWORD PTR [esp+eax*4-0x4eb673f1],edi
  41d2a0:	sub    eax,0xeecc55d0
  41d2a5:	and    DWORD PTR [eax*2-0x48fb742],0x1b
  41d2ad:	mov    esp,0x542b76c1
  41d2b2:	mov    BYTE PTR [eax-0x9],ah
  41d2b5:	jns    0x41d30e
  41d2b7:	aaa    
  41d2b8:	sub    al,0xb9
  41d2ba:	or     al,0x7b
  41d2bc:	std    
  41d2bd:	fisttp QWORD PTR [edx*8-0x481511c6]
  41d2c4:	popa   
  41d2c5:	adc    eax,0x27905118
  41d2ca:	ins    BYTE PTR es:[edi],dx
  41d2cb:	(bad)  [ebx]
  41d2cd:	pop    edi
  41d2ce:	fstp   TBYTE PTR [eax-0x76]
  41d2d1:	sti    
  41d2d2:	adc    ecx,DWORD PTR [ecx-0x1faa862e]
  41d2d8:	iret   
  41d2d9:	dec    edi
  41d2da:	xor    DWORD PTR [eax],ecx
  41d2dc:	sub    esp,DWORD PTR [ebx-0x58609db]
  41d2e2:	aas    
  41d2e3:	and    BYTE PTR [esi+0x73],0xa
  41d2e7:	sub    bh,BYTE PTR es:[edx-0x4a]
  41d2eb:	popa   
  41d2ec:	dec    ebx
  41d2ed:	pop    ecx
  41d2ee:	jp     0x41d34f
  41d2f0:	ja     0x41d2cf
  41d2f2:	les    eax,FWORD PTR [ebx+0x17333d]
  41d2f8:	ror    DWORD PTR [esp+ebp*8],1
  41d2fb:	lea    ebx,[edi-0xe]
  41d2fe:	iret   
  41d2ff:	and    edi,DWORD PTR gs:[ebx-0x2bcdbca2]
  41d306:	cmp    ch,dh
  41d308:	sbb    BYTE PTR [ecx],al
  41d30a:	add    esp,edx
  41d30c:	lods   al,BYTE PTR ds:[esi]
  41d30d:	push   ebp
  41d30e:	jne    0x41d299
  41d310:	fs dec eax
  41d312:	mov    dl,0xf9
  41d314:	xor    esp,DWORD PTR gs:[eax+0x2e]
  41d318:	pop    edx
  41d319:	mov    cl,dh
  41d31b:	jnp    0x41d36f
  41d31d:	inc    esi
  41d31e:	inc    ebx
  41d31f:	pop    ss
  41d320:	xchg   BYTE PTR [edi+0x43c7388e],ch
  41d326:	add    DWORD PTR [esi-0x5dffec44],edx
  41d32c:	cmp    al,0x8e
  41d32e:	(bad)  
  41d32f:	jmp    0x431f49f4
  41d334:	and    ecx,ecx
  41d336:	cli    
  41d337:	pop    ss
  41d338:	test   BYTE PTR [edx-0x7],ah
  41d33b:	mov    ss,WORD PTR [eax-0x53]
  41d33e:	lea    ebp,[ecx]
  41d340:	call   0x3dbe:0xed048b2c
  41d347:	out    0x33,al
  41d349:	cmp    al,ah
  41d34b:	and    BYTE PTR [ecx],0x37
  41d34e:	xchg   esi,eax
  41d34f:	jae    0x41d3a7
  41d351:	push   es
  41d352:	sbb    BYTE PTR [edx+0x6c],dl
  41d355:	das    
  41d356:	loop   0x41d33a
  41d358:	ja     0x41d329
  41d35a:	cli    
  41d35b:	mov    eax,ds:0x325142e9
  41d360:	jmp    0x41d3e0
  41d362:	(bad)  
  41d363:	je     0x41d2f4
  41d365:	or     al,BYTE PTR [edi+0x47]
  41d368:	sar    BYTE PTR [ecx],cl
  41d36a:	icebp  
  41d36b:	cmc    
  41d36c:	pop    edi
  41d36d:	add    BYTE PTR [ecx-0x6f82e9a4],bl
  41d373:	add    DWORD PTR [eax+0x54],0x4e
  41d377:	lds    edx,FWORD PTR [esi+0x69]
  41d37a:	pop    cx
  41d37c:	jmp    0x75d0:0xa4c871a4
  41d383:	int    0xfa
  41d385:	mov    dh,0x1c
  41d387:	push   ebp
  41d388:	loope  0x41d374
  41d38a:	in     al,dx
  41d38b:	xor    eax,0x4171cf1a
  41d390:	cli    
  41d391:	scas   al,BYTE PTR es:[edi]
  41d392:	jo     0x41d355
  41d394:	add    edx,esp
  41d396:	mov    edx,esi
  41d398:	or     eax,0xe047328f
  41d39d:	sub    ch,al
  41d39f:	or     dl,al
  41d3a1:	clc    
  41d3a2:	arpl   WORD PTR [ebp+0x6d],cx
  41d3a5:	imul   ebp,DWORD PTR [esi-0x78],0x26
  41d3a9:	cmp    eax,0x1d159280
  41d3ae:	lods   eax,DWORD PTR ds:[esi]
  41d3af:	sub    eax,0xb5e23826
  41d3b4:	int    0xbf
  41d3b6:	mov    edx,edx
  41d3b8:	mov    WORD PTR [eax],ds
  41d3ba:	mov    cl,0xe7
  41d3bc:	and    al,0xeb
  41d3be:	and    eax,0x9fd96732
  41d3c3:	sbb    BYTE PTR [edx],dh
  41d3c5:	nop
  41d3c6:	pop    ds
  41d3c7:	fidivr DWORD PTR [edi-0x4e5db910]
  41d3cd:	xchg   ebx,eax
  41d3ce:	sbb    ch,bl
  41d3d0:	inc    edi
  41d3d1:	jbe    0x41d3ca
  41d3d3:	jnp    0x41d420
  41d3d5:	push   0xffffffe0
  41d3d7:	lock mov ecx,0x17dbfe51
  41d3dd:	addr16 mov esi,0xd9d9a4ac
  41d3e3:	jns    0x41d3e2
  41d3e5:	pop    esi
  41d3e6:	hlt    
  41d3e7:	mov    cl,0xec
  41d3e9:	ja     0x41d3ad
  41d3eb:	sbb    BYTE PTR [ecx+eiz*2],ch
  41d3ee:	out    dx,eax
  41d3ef:	mov    ah,0x8b
  41d3f1:	xchg   BYTE PTR [esi-0x29],al
  41d3f4:	fcomp  QWORD PTR [edi-0x7a3a1c66]
  41d3fa:	(bad)  
  41d3fc:	pop    esp
  41d3fd:	add    cl,BYTE PTR [ebp+0x748613b5]
  41d403:	fidiv  WORD PTR [edx+0x7d88b883]
  41d409:	or     ecx,DWORD PTR gs:[esi+ebx*4-0x7ae73eb3]
  41d411:	ror    BYTE PTR [ecx-0x16edc074],1
  41d417:	jo     0x41d42c
  41d419:	je     0x41d47b
  41d41b:	and    al,ch
  41d41d:	leave  
  41d41e:	sub    al,0xc
  41d420:	sub    eax,0xa2c02437
  41d425:	dec    BYTE PTR [edx]
  41d427:	nop
  41d428:	cmp    DWORD PTR [eax+0x26],eax
  41d42b:	push   0xffffffa6
  41d42d:	stos   BYTE PTR es:[edi],al
  41d42e:	loopne 0x41d428
  41d430:	sbb    al,0xaf
  41d432:	ja     0x41d453
  41d434:	jp     0x41d449
  41d436:	add    bl,ch
  41d438:	ins    DWORD PTR es:[edi],dx
  41d439:	xor    ah,ch
  41d43b:	mov    ds:0x3083ddf0,al
  41d440:	daa    
  41d441:	or     bh,bl
  41d443:	and    edi,esp
  41d445:	and    BYTE PTR [esi-0xe6a12f2],dh
  41d44b:	push   0x52799db5
  41d450:	popf   
  41d451:	test   BYTE PTR [esi-0x4bfe711b],al
  41d457:	sbb    al,0xc9
  41d459:	inc    esp
  41d45a:	and    DWORD PTR [eax+0x7d],ebp
  41d45d:	sub    DWORD PTR [edi],esi
  41d45f:	cli    
  41d460:	jle    0x41d4d9
  41d462:	mov    cl,0xb
  41d464:	lods   al,BYTE PTR ds:[esi]
  41d465:	shl    DWORD PTR [eax],cl
  41d467:	rol    BYTE PTR [edx-0x37ad3200],1
  41d46d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d46e:	repnz test DWORD PTR [ebp-0x38b12010],esi
  41d475:	fxch   st(7)
  41d477:	sub    eax,0xb66d1015
  41d47c:	xchg   edi,eax
  41d47d:	sbb    al,0xe7
  41d47f:	pop    ds
  41d480:	xchg   esi,eax
  41d481:	loopne 0x41d4f6
  41d483:	stos   DWORD PTR es:[edi],eax
  41d484:	sbb    BYTE PTR [eax],dh
  41d486:	push   ecx
  41d487:	or     ebp,ecx
  41d489:	mov    esi,0x14e7736b
  41d48e:	(bad)  [ecx+0x5d418dd]
  41d494:	xchg   DWORD PTR [edx-0x29afc3c7],ecx
  41d49a:	aam    0x6f
  41d49c:	adc    al,0xc3
  41d49e:	imul   eax,edi,0x376f73ec
  41d4a4:	mov    DWORD PTR [edx],ebx
  41d4a6:	dec    esp
  41d4a7:	push   ebp
  41d4a8:	sbb    BYTE PTR [ecx],bl
  41d4aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d4ab:	jle    0x41d44b
  41d4ad:	mov    esp,ebx
  41d4af:	jnp    0x41d46d
  41d4b1:	and    eax,0xf112db91
  41d4b6:	sub    bh,BYTE PTR [ebx-0x44d72a38]
  41d4bc:	mov    cl,BYTE PTR [esi+0x28806d12]
  41d4c2:	dec    ecx
  41d4c3:	iret   
  41d4c4:	and    BYTE PTR [ebx+0x31],ch
  41d4c7:	frstor [esi]
  41d4c9:	(bad)  
  41d4ca:	push   eax
  41d4cb:	lods   al,BYTE PTR ds:[esi]
  41d4cc:	fisttp QWORD PTR [edx+0xa]
  41d4cf:	jg     0x41d516
  41d4d1:	push   esp
  41d4d2:	(bad)  
  41d4d3:	(bad)  
  41d4d4:	imul   edi,DWORD PTR [ebp+0x34fd2091],0x3f
  41d4db:	in     eax,dx
  41d4dc:	cmp    eax,0x5b3067af
  41d4e1:	mov    ?,WORD PTR [edi+esi*2+0x3f]
  41d4e5:	sub    eax,0xb25144f5
  41d4ea:	rdpru  
  41d4ed:	inc    edx
  41d4ee:	add    dh,BYTE PTR [esi]
  41d4f0:	test   BYTE PTR [eax],dh
  41d4f2:	dec    edi
  41d4f3:	sub    edx,DWORD PTR [ebx+0x7d]
  41d4f6:	nop
  41d4f7:	and    al,0xce
  41d4f9:	xchg   ecx,eax
  41d4fa:	fsin   
  41d4fc:	sub    DWORD PTR [edi-0x5f16bda5],ebp
  41d502:	(bad)  
  41d503:	cwde   
  41d504:	mov    ?,edx
  41d506:	mov    ah,0xf3
  41d508:	xchg   BYTE PTR [edx+0xb],ah
  41d50b:	mov    ?,WORD PTR [ebp-0x5e6a6754]
  41d511:	fistp  QWORD PTR [ebx-0x7d1ede18]
  41d517:	mov    al,0xa
  41d519:	sbb    eax,0x89132fa2
  41d51e:	inc    ecx
  41d51f:	inc    eax
  41d520:	mov    edx,0x745b9377
  41d525:	dec    edi
  41d526:	aas    
  41d527:	push   esp
  41d528:	fnstenv [edx-0x3738dd91]
  41d52e:	sti    
  41d52f:	dec    ebp
  41d530:	jge    0x41d4dd
  41d532:	leave  
  41d533:	popa   
  41d534:	mov    BYTE PTR [edx+esi*4],dh
  41d537:	in     eax,dx
  41d538:	nop
  41d539:	and    ebp,DWORD PTR [ebx+0x1e]
  41d53c:	xchg   edx,eax
  41d53d:	jb     0x41d53b
  41d53f:	jecxz  0x41d52a
  41d541:	xor    esi,ebx
  41d543:	inc    edx
  41d544:	stos   BYTE PTR es:[edi],al
  41d545:	inc    edi
  41d546:	cmp    al,0x7b
  41d548:	gs mov ebp,0xd73f2d9f
  41d54e:	adc    ecx,DWORD PTR [esi]
  41d550:	mov    dl,0xf7
  41d552:	inc    ebx
  41d553:	dec    eax
  41d554:	push   esp
  41d555:	dec    esp
  41d556:	pop    ecx
  41d558:	sub    bl,0x90
  41d55b:	jecxz  0x41d56e
  41d55d:	jg     0x41d55c
  41d55f:	popf   
  41d560:	cdq    
  41d561:	iret   
  41d562:	test   eax,0xf20df1a7
  41d567:	jbe    0x41d52d
  41d569:	sbb    bl,BYTE PTR [ecx-0x44]
  41d56c:	das    
  41d56d:	retf   
  41d56e:	(bad)  
  41d570:	jmp    0x41d500
  41d572:	push   0xb4f4b1c0
  41d577:	aad    0xe0
  41d579:	push   eax
  41d57a:	push   0xffffff97
  41d57c:	push   ecx
  41d57d:	test   DWORD PTR [edi],ebx
  41d57f:	ret    0x37cc
  41d582:	mov    ch,0xee
  41d584:	or     ch,BYTE PTR [edx]
  41d586:	sub    al,0x8a
  41d588:	pop    esi
  41d589:	xchg   edx,eax
  41d58a:	sbb    BYTE PTR [eax-0x2823b92],al
  41d590:	cwde   
  41d591:	retf   0x31ee
  41d594:	adc    ebp,DWORD PTR [esi]
  41d596:	aas    
  41d597:	(bad)  [edx-0x251f8c3c]
  41d59d:	xchg   esp,edx
  41d59f:	popa   
  41d5a0:	pop    edi
  41d5a1:	push   es
  41d5a2:	jmp    0x41d5ed
  41d5a4:	cmp    esp,eax
  41d5a6:	mov    al,0x26
  41d5a8:	sub    ebp,DWORD PTR [esi-0x2b]
  41d5ab:	jle    0x41d5e1
  41d5ad:	stc    
  41d5ae:	or     DWORD PTR [ebx+0x4d],ecx
  41d5b1:	stc    
  41d5b2:	push   ds
  41d5b3:	add    edi,ecx
  41d5b5:	lds    ebx,FWORD PTR [esi]
  41d5b7:	loopne 0x41d5ee
  41d5b9:	adc    esp,eax
  41d5bb:	rcr    bl,cl
  41d5bd:	pop    ss
  41d5be:	mov    eax,ds:0x5767e2a8
  41d5c3:	push   esp
  41d5c4:	xor    BYTE PTR [edx+edi*1-0x3b31647a],0x27
  41d5cc:	out    0xd9,al
  41d5ce:	or     DWORD PTR [eax],ebp
  41d5d0:	enter  0xb5e,0xd3
  41d5d4:	lock enter 0xcff8,0x7f
  41d5d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5da:	jne    0x41d64a
  41d5dc:	adc    al,0x72
  41d5de:	cld    
  41d5df:	pop    DWORD PTR ds:[ebx+0x70]
  41d5e3:	call   0x4a6b:0xc4cf0371
  41d5ea:	in     eax,dx
  41d5eb:	daa    
  41d5ec:	dec    esi
  41d5ed:	test   BYTE PTR [ecx+0x72],dh
  41d5f0:	clc    
  41d5f1:	and    BYTE PTR [edx+0x29],0x3b
  41d5f5:	pop    eax
  41d5f6:	ret    
  41d5f7:	cwde   
  41d5f8:	(bad)  ds:0x795445a7
  41d5fe:	mov    eax,0x78c8ac22
  41d603:	scas   eax,DWORD PTR es:[edi]
  41d604:	inc    ecx
  41d605:	jno    0x41d61c
  41d607:	int3   
  41d608:	push   0xe4ed4d79
  41d60d:	dec    esi
  41d60e:	sbb    DWORD PTR [ebx-0x1578a9c1],ecx
  41d614:	pop    ebx
  41d615:	inc    eax
  41d616:	sub    DWORD PTR [eax+0x74],0x5e
  41d61a:	ror    bl,0x8e
  41d61d:	jg     0x41d5a3
  41d61f:	je     0x41d5ed
  41d621:	ins    BYTE PTR es:[edi],dx
  41d622:	cmc    
  41d623:	inc    esi
  41d624:	pushf  
  41d625:	out    0x30,eax
  41d627:	and    eax,0x3b261b66
  41d62c:	jo     0x41d5ce
  41d62e:	xchg   DWORD PTR [ecx-0x65],ecx
  41d631:	ror    BYTE PTR [ecx+0x7504136a],0x1d
  41d638:	stos   DWORD PTR es:[edi],eax
  41d639:	repnz nop
  41d63b:	shl    DWORD PTR [edi+ebp*2-0x2998a9e0],0x63
  41d643:	test   BYTE PTR [esi-0xe],0x50
  41d647:	test   esp,0xaf6f01ba
  41d64d:	fisub  DWORD PTR [eax]
  41d64f:	add    eax,0x47c0d711
  41d654:	jecxz  0x41d664
  41d656:	sub    al,0xcf
  41d658:	inc    eax
  41d659:	lods   eax,DWORD PTR ds:[esi]
  41d65a:	dec    ebp
  41d65b:	or     ch,bh
  41d65d:	inc    ebx
  41d65e:	adc    ebx,DWORD PTR [ebp-0xc981b32]
  41d664:	xor    dl,BYTE PTR [ebx]
  41d666:	(bad)  
  41d667:	shr    BYTE PTR ds:0xfeebca7f,cl
  41d66d:	push   0xffffffa4
  41d66f:	leave  
  41d670:	fs loopne 0x41d5f8
  41d673:	scas   eax,DWORD PTR es:[edi]
  41d674:	sub    BYTE PTR [bp+si+0x2199],al
  41d679:	or     DWORD PTR [ecx],0xffffffd4
  41d67c:	mov    DWORD PTR [esi-0x63c51b7b],eax
  41d682:	mov    WORD PTR [ecx-0x2ba26e6b],es
  41d688:	ret    0x31a0
  41d68b:	jno    0x41d633
  41d68d:	and    bh,BYTE PTR [ebx+0x541a8657]
  41d693:	or     al,0xc7
  41d695:	sbb    DWORD PTR [eax],esi
  41d697:	mov    ds:0x9f125c07,al
  41d69c:	pop    eax
  41d69d:	imul   edx,DWORD PTR [ebp+0x6],0xffffffb5
  41d6a1:	xor    eax,0xd2b503f6
  41d6a6:	repnz in eax,0xdd
  41d6a9:	push   cs
  41d6aa:	in     eax,0x96
  41d6ac:	sub    bl,bl
  41d6ae:	or     DWORD PTR [ebp+0x5d],ecx
  41d6b1:	daa    
  41d6b2:	(bad)  
  41d6b3:	(bad)
  41d6b8:	imul   ebx,ebx,0x72dfb3a6
  41d6be:	xor    BYTE PTR ds:0x20fe2cb4,0x59
  41d6c5:	or     DWORD PTR [ecx-0x68f8ed6c],esp
  41d6cb:	cmp    BYTE PTR [eax+ebp*1+0x37e003ff],ch
  41d6d2:	int3   
  41d6d3:	dec    ebx
  41d6d4:	mov    bl,0x1b
  41d6d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6d7:	push   0x39
  41d6d9:	pop    ebp
  41d6da:	dec    ebx
  41d6db:	fsub   DWORD PTR [ebx+ebx*8-0x4]
  41d6df:	mov    ebp,0x99c476c7
  41d6e4:	add    DWORD PTR ds:0xbf714c2a,esp
  41d6ea:	xchg   edi,eax
  41d6eb:	cmp    esi,DWORD PTR [edi-0x673a3569]
  41d6f1:	jl     0x41d687
  41d6f3:	out    dx,eax
  41d6f4:	and    dh,dh
  41d6f6:	cmp    cl,BYTE PTR [ebx-0x1d]
  41d6f9:	je     0x41d725
  41d6fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6fc:	imul   ebx,DWORD PTR [ebx-0x8f3648e],0x485b176e
  41d706:	jg     0x41d77c
  41d708:	je     0x41d6a4
  41d70a:	fsub   DWORD PTR [esi+0x4d]
  41d70d:	xchg   ebx,eax
  41d70e:	dec    ecx
  41d70f:	pop    esp
  41d710:	fwait
  41d711:	pushf  
  41d712:	jp     0x41d78a
  41d714:	pusha  
  41d715:	test   BYTE PTR [edx],dh
  41d717:	or     bl,bl
  41d719:	scas   eax,DWORD PTR es:[edi]
  41d71a:	cmp    al,0xbb
  41d71c:	pusha  
  41d71d:	aad    0x89
  41d71f:	daa    
  41d720:	gs push 0xa62d310b
  41d726:	pop    esi
  41d727:	pop    ebp
  41d728:	in     al,0x8e
  41d72a:	in     eax,dx
  41d72b:	nop
  41d72c:	xchg   ebp,eax
  41d72d:	fisubr DWORD PTR [esi-0x4699ecad]
  41d733:	push   ds
  41d734:	push   ebp
  41d735:	mov    al,ds:0x701449e9
  41d73a:	sub    dl,bl
  41d73c:	jne    0x41d740
  41d73e:	(bad)  
  41d73f:	jns    0x41d6ea
  41d741:	mov    al,0xc
  41d743:	inc    ecx
  41d744:	ins    BYTE PTR es:[edi],dx
  41d745:	leave  
  41d746:	les    esi,FWORD PTR [edx-0x2457de67]
  41d74c:	aad    0x22
  41d74e:	inc    ecx
  41d74f:	xor    ecx,edx
  41d751:	and    edi,DWORD PTR [edx+0x340e448]
  41d757:	jne    0x41d6fc
  41d759:	push   cs
  41d75a:	sub    esi,esi
  41d75c:	mov    al,0x34
  41d75e:	jb     0x41d747
  41d760:	ffreep st(3)
  41d762:	pop    esp
  41d763:	ror    BYTE PTR [edx+0xb],0x2e
  41d767:	jb     0x41d786
  41d769:	mov    ?,esp
  41d76b:	xlat   BYTE PTR ds:[ebx]
  41d76c:	push   ss
  41d76d:	test   BYTE PTR gs:[edi-0x71f264d1],bh
  41d774:	scas   eax,DWORD PTR es:[edi]
  41d775:	daa    
  41d776:	adc    al,BYTE PTR [ebx]
  41d778:	stos   DWORD PTR es:[edi],eax
  41d779:	cs dec edx
  41d77b:	dec    eax
  41d77c:	out    0xd,eax
  41d77e:	out    dx,al
  41d77f:	lds    ebp,FWORD PTR [ebx]
  41d781:	addr16 ja 0x41d741
  41d784:	into   
  41d785:	pop    ebp
  41d786:	lahf   
  41d787:	dec    esi
  41d788:	or     al,0x20
  41d78a:	bound  ecx,QWORD PTR [esi+0x1]
  41d78d:	jbe    0x41d808
  41d78f:	xchg   esp,eax
  41d790:	mov    ebx,0x77ea45e6
  41d795:	int    0xfc
  41d797:	or     esp,DWORD PTR [ebx+0x1dbb2eb5]
  41d79d:	(bad)  
  41d79e:	lock inc esi
  41d7a0:	sub    DWORD PTR [ecx],ebx
  41d7a2:	hlt    
  41d7a3:	adc    eax,esi
  41d7a5:	dec    esp
  41d7a6:	adc    bh,BYTE PTR [edx]
  41d7a8:	or     al,0xe9
  41d7aa:	xchg   edi,eax
  41d7ab:	fsubr  DWORD PTR [eax+eax*8]
  41d7ae:	jecxz  0x41d82b
  41d7b0:	sbb    bl,BYTE PTR [esi-0x31]
  41d7b3:	mov    bh,bl
  41d7b5:	icebp  
  41d7b6:	mov    dh,BYTE PTR [ecx]
  41d7b8:	ficomp DWORD PTR [ebx-0x6c26b394]
  41d7be:	fwait
  41d7bf:	out    dx,eax
  41d7c0:	mov    eax,0x7ff1eea2
  41d7c5:	mov    ah,0x9c
  41d7c7:	rol    BYTE PTR [edx-0x79750c2],cl
  41d7cd:	jnp    0x41d7d5
  41d7cf:	pop    es
  41d7d0:	test   eax,0x4e718e34
  41d7d5:	ficom  WORD PTR [edi-0x5c]
  41d7d8:	bound  ecx,QWORD PTR [eax]
  41d7da:	or     al,0xff
  41d7dc:	daa    
  41d7dd:	hlt    
  41d7de:	sbb    ch,BYTE PTR ds:0xf2f21485
  41d7e4:	out    0x2c,eax
  41d7e6:	into   
  41d7e7:	xor    edx,ebx
  41d7e9:	sbb    ch,BYTE PTR [eax]
  41d7eb:	scas   eax,DWORD PTR es:[edi]
  41d7ec:	mov    DWORD PTR [edx-0x24],ebx
  41d7ef:	dec    edx
  41d7f0:	int    0xd8
  41d7f2:	pop    esi
  41d7f3:	push   edx
  41d7f4:	mov    ds:0xf56ac23e,al
  41d7f9:	stc    
  41d7fa:	inc    edx
  41d7fb:	int    0x88
  41d7fd:	pushf  
  41d7fe:	js     0x41d784
  41d800:	mov    al,ds:0x206e8141
  41d805:	call   0x88430312
  41d80a:	cmp    ebp,eax
  41d80c:	adc    DWORD PTR [edi-0x1d],0xffffff86
  41d810:	and    al,BYTE PTR [edi]
  41d812:	ins    BYTE PTR es:[edi],dx
  41d813:	add    dl,BYTE PTR [ebx+0x57efa494]
  41d819:	rol    DWORD PTR [ebx+edx*4-0x6670b0bc],cl
  41d820:	mov    edx,0x768d49b0
  41d825:	or     bh,BYTE PTR [ecx+ebx*1+0x60dc032d]
  41d82c:	out    0xcc,al
  41d82e:	pop    eax
  41d82f:	push   ebp
  41d830:	stos   BYTE PTR es:[edi],al
  41d831:	fnstenv [edi]
  41d833:	fwait
  41d834:	mov    ah,BYTE PTR [edi-0x1d0acf7b]
  41d83a:	jns    0x41d89d
  41d83c:	stos   BYTE PTR es:[edi],al
  41d83d:	push   esi
  41d83e:	jmp    0xad4020cf
  41d843:	mov    cl,0x7c
  41d845:	mov    cl,0xe7
  41d847:	mov    es,WORD PTR [esi+0x5f48516]
  41d84d:	mov    ?,WORD PTR [edx]
  41d84f:	pop    edx
  41d850:	jo     0x41d84a
  41d852:	mov    al,ds:0x41f1be17
  41d857:	pop    eax
  41d858:	push   0xce34873c
  41d85d:	rcr    edi,0x56
  41d860:	retf   0x90bc
  41d863:	push   ecx
  41d864:	in     al,dx
  41d865:	inc    edx
  41d866:	jbe    0x41d84f
  41d868:	dec    DWORD PTR [ecx]
  41d86a:	adc    DWORD PTR [esp+ebp*4],edx
  41d86d:	ins    DWORD PTR es:[edi],dx
  41d86e:	neg    DWORD PTR [ecx+ebp*8+0x74]
  41d872:	imul   edx,ecx,0x7141437a
  41d878:	mov    BYTE PTR [ebx-0x22],ah
  41d87b:	sub    edx,DWORD PTR ds:0x5db85be0
  41d881:	cdq    
  41d882:	int    0xa6
  41d884:	inc    edi
  41d885:	cmp    DWORD PTR [eax+0x73477311],esp
  41d88b:	jb     0x41d89e
  41d88d:	xor    esi,ebp
  41d88f:	add    DWORD PTR [ecx],ebx
  41d891:	stos   BYTE PTR es:[edi],al
  41d892:	inc    edi
  41d893:	jns    0x41d83a
  41d895:	pop    eax
  41d896:	cmp    esi,DWORD PTR [edx+0x76ebd57f]
  41d89c:	push   ecx
  41d89d:	cmc    
  41d89e:	outs   dx,DWORD PTR ds:[esi]
  41d89f:	cmp    DWORD PTR [edi],edi
  41d8a1:	push   0x5dcb6fe5
  41d8a6:	mov    ds:0x22b7ada0,eax
  41d8ab:	(bad)  
  41d8ac:	dec    ebp
  41d8ad:	rcr    DWORD PTR [eax+edx*8+0x1],cl
  41d8b1:	ins    DWORD PTR es:[edi],dx
  41d8b2:	push   ecx
  41d8b3:	loope  0x41d891
  41d8b5:	xor    BYTE PTR [ebx+ecx*4+0x7a87e52e],bl
  41d8bc:	sub    al,0x3f
  41d8bf:	rcl    BYTE PTR [ebx],cl
  41d8c1:	ret    0x87c5
  41d8c4:	sbb    DWORD PTR [eax-0x3031d162],esp
  41d8ca:	jmp    0x41d862
  41d8cc:	lds    esp,FWORD PTR [edi+0x12c20f52]
  41d8d2:	jecxz  0x41d8d2
  41d8d4:	test   edi,ebp
  41d8d6:	mov    ah,0xf6
  41d8d8:	ins    DWORD PTR es:[edi],dx
  41d8d9:	mov    ds:0x806b0f35,al
  41d8de:	push   es
  41d8df:	ret    0x283c
  41d8e2:	cs inc ecx
  41d8e4:	add    ch,BYTE PTR [esp+eiz*4+0x59cf676b]
  41d8eb:	pop    esp
  41d8ec:	add    BYTE PTR [edi+0x1a],ah
  41d8ef:	in     eax,0xf8
  41d8f1:	lea    eax,[ecx+edi*4-0x9]
  41d8f5:	test   eax,0x328977c5
  41d8fa:	or     bl,BYTE PTR [eax+0x31146c2c]
  41d900:	xchg   esp,eax
  41d901:	dec    ecx
  41d902:	add    ebp,DWORD PTR [edx]
  41d904:	cmp    BYTE PTR [ecx-0x6737d025],dh
  41d90a:	pop    esi
  41d90b:	mov    ecx,0xdd9c382b
  41d910:	(bad)
  41d913:	mov    ds:0xcf1e7c8b,eax
  41d918:	jmp    0x41d995
  41d91a:	test   bh,al
  41d91c:	or     eax,0x657cdef
  41d921:	mov    edx,0xadb7230c
  41d926:	(bad)
  41d92a:	or     eax,0xb8b3c1b0
  41d92f:	cdq    
  41d930:	gs jle 0x41d8eb
  41d933:	pop    ebp
  41d934:	fs pushf 
  41d936:	inc    esi
  41d937:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d938:	retf   0xb5bf
  41d93b:	clc    
  41d93c:	push   cs
  41d93d:	xor    BYTE PTR [ebp+edx*8-0x22],dl
  41d941:	(bad)  
  41d942:	pop    ebx
  41d943:	mov    esi,0x925eb989
  41d948:	cwde   
  41d949:	enter  0x3562,0xa3
  41d94d:	xchg   ebp,eax
  41d94e:	adc    eax,0x8a0ffd7f
  41d953:	or     eax,0xc5adc226
  41d958:	fdiv   st(2),st
  41d95a:	inc    edx
  41d95b:	scas   eax,DWORD PTR es:[edi]
  41d95c:	loop   0x41d91f
  41d95e:	pop    esp
  41d95f:	or     al,0x7a
  41d961:	adc    DWORD PTR [edx+0x2],0x505cb7a6
  41d968:	scas   al,BYTE PTR es:[edi]
  41d969:	mov    cl,0x61
  41d96b:	aaa    
  41d96c:	xor    BYTE PTR [ebx],bl
  41d96e:	aas    
  41d96f:	aad    0x84
  41d971:	ficom  DWORD PTR [eax]
  41d973:	mov    bl,BYTE PTR ss:[edx+0x36]
  41d977:	inc    esi
  41d978:	out    0x15,al
  41d97a:	sbb    BYTE PTR [eax+0x56],cl
  41d97d:	add    DWORD PTR [esi+0xf],ebp
  41d980:	xchg   esp,eax
  41d981:	(bad)  
  41d982:	or     ebp,DWORD PTR [ebx]
  41d984:	aaa    
  41d985:	mov    edx,0xa00f202b
  41d98a:	xor    ebx,edi
  41d98c:	pushf  
  41d98d:	aad    0xc6
  41d98f:	imul   ebx,DWORD PTR [ebp+0x3b],0x101d8ee7
  41d996:	mov    ds:0x8ed55136,eax
  41d99b:	or     ebp,DWORD PTR [ecx]
  41d99d:	lock sub BYTE PTR [esi+0x45300f4b],0x9b
  41d9a5:	jmp    esp
  41d9a7:	cmp    ch,BYTE PTR [edi-0x2335db64]
  41d9ad:	retf   
  41d9ae:	push   ecx
  41d9af:	mov    BYTE PTR [ecx-0x6b],ah
  41d9b2:	pop    edx
  41d9b3:	lea    ecx,[edi+0x4cc2f355]
  41d9b9:	dec    ebp
  41d9ba:	add    esp,DWORD PTR [ebx]
  41d9bc:	retf   0x4d89
  41d9bf:	mov    ah,0x8b
  41d9c1:	dec    ebp
  41d9c2:	or     BYTE PTR [ebx-0x737247ab],cl
  41d9c8:	or     bl,bh
  41d9ca:	cld    
  41d9cb:	inc    ecx
  41d9cc:	add    cl,BYTE PTR [ecx+0x4d8bb84d]
  41d9d2:	or     BYTE PTR [edx-0x5a1ead0],bh
  41d9d8:	sub    edx,ecx
  41d9da:	add    edx,DWORD PTR [ebp-0x44]
  41d9dd:	mov    DWORD PTR [ebp-0x44],edx
  41d9e0:	mov    ecx,DWORD PTR [ebp+0x8]
  41d9e3:	xor    ecx,eax
  41d9e5:	add    ecx,esi
  41d9e7:	jne    0x41b5e7
  41d9ed:	mov    ecx,DWORD PTR [ebp-0x8]
  41d9f0:	xor    ecx,eax
  41d9f2:	mov    eax,DWORD PTR [ebp+0x10]
  41d9f5:	add    ecx,esi
  41d9f7:	mov    DWORD PTR [eax],ecx
  41d9f9:	pop    edi
  41d9fa:	pop    esi
  41d9fb:	pop    ebx
  41d9fc:	leave  
  41d9fd:	ret    0xc
  41da00:	push   ebp
  41da01:	mov    ebp,esp
  41da03:	sub    esp,0x78
  41da06:	add    ecx,ecx
  41da08:	push   esi
  41da09:	mov    DWORD PTR ds:0x42a1a3,0x13
  41da13:	cmp    DWORD PTR ds:0x42a1a3,0x0
  41da1a:	je     0x41da5c
  41da20:	cmp    DWORD PTR ds:0x42a1a3,0x1e
  41da27:	jle    0x41da5c
  41da2d:	jmp    0x41da4a
  41da32:	push   0x42a18b
  41da37:	push   DWORD PTR [ebp-0x18]
  41da3a:	push   0x429018
  41da3f:	push   0x4290d7
  41da44:	call   DWORD PTR ds:0x42a2b7
  41da4a:	mov    esi,DWORD PTR ds:0x42a1a3
  41da50:	dec    esi
  41da51:	mov    DWORD PTR ds:0x42a1a3,esi
  41da57:	jmp    0x41da13
  41da5c:	push   edi
  41da5d:	mov    eax,ds:0x42942f
  41da62:	sub    DWORD PTR ds:0x42a1d3,ecx
  41da68:	mov    DWORD PTR [ebp-0x24],eax
  41da6b:	and    eax,edi
  41da6d:	mov    eax,ds:0x42954f
  41da72:	movzx  ecx,WORD PTR ds:0x42a12b
  41da79:	adc    ecx,DWORD PTR ds:0x42a19f
  41da7f:	mov    DWORD PTR ds:0x42a12b,ecx
  41da85:	mov    DWORD PTR [ebp-0x30],eax
  41da88:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  41da8f:	and    DWORD PTR ds:0x42a12b,ebx
  41da95:	mov    DWORD PTR [ebp-0x28],0xf89c85ba
  41da9c:	mov    eax,DWORD PTR [ebp-0x10]
  41da9f:	sub    DWORD PTR ds:0x42a12f,0x69af
  41daa9:	mov    ecx,DWORD PTR [ebp-0x10]
  41daac:	and    edi,0x886
  41dab2:	sub    eax,ecx
  41dab4:	mov    DWORD PTR [ebp-0x10],eax
  41dab7:	sbb    DWORD PTR ds:0x42a16b,0x4fc4
  41dac1:	xor    DWORD PTR [ebp-0x10],0xf89cb5b9
  41dac8:	and    DWORD PTR ds:0x42a157,0x0
  41dad2:	xor    eax,eax
  41dad4:	or     eax,DWORD PTR ds:0x42a157
  41dada:	inc    eax
  41dadb:	mov    ds:0x42a157,eax
  41dae0:	cmp    DWORD PTR ds:0x42a157,0x2f
  41dae7:	jle    0x41db08
  41daed:	jmp    0x41dafb
  41daf2:	push   DWORD PTR [ebp-0x18]
  41daf5:	call   DWORD PTR ds:0x42a2bf
  41dafb:	cmp    DWORD PTR ds:0x42a157,0x1f
  41db02:	jb     0x41dad2
  41db08:	mov    eax,DWORD PTR [ebp-0x18]
  41db0b:	mov    ecx,DWORD PTR [ebp-0x18]
  41db0e:	mov    esi,DWORD PTR ds:0x42a22f
  41db14:	mov    esi,DWORD PTR [esi]
  41db16:	sbb    DWORD PTR ds:0x42a15b,esi
  41db1c:	sub    eax,ecx
  41db1e:	and    DWORD PTR ds:0x42a18f,0x0
  41db28:	jmp    0x41db3c
  41db2d:	xor    edi,edi
  41db2f:	xor    edi,DWORD PTR ds:0x42a18f
  41db35:	inc    edi
  41db36:	mov    DWORD PTR ds:0x42a18f,edi
  41db3c:	cmp    DWORD PTR ds:0x42a18f,0x19
  41db43:	jae    0x41db6e
  41db49:	cmp    DWORD PTR ds:0x42a18f,0x1e
  41db50:	jle    0x41db6e
  41db56:	jmp    0x41db69
  41db5b:	push   0x2b00
  41db60:	push   DWORD PTR [ebp-0xc]
  41db63:	call   DWORD PTR ds:0x42a2c3
  41db69:	jmp    0x41db2d
  41db6e:	mov    DWORD PTR [ebp-0x18],eax
  41db71:	xor    eax,0x7540
  41db76:	or     DWORD PTR [ebp-0x18],0xf89f05b9
  41db7d:	mov    eax,DWORD PTR [ebp-0xc]
  41db80:	xor    DWORD PTR ds:0x42a1d3,edi
  41db86:	mov    ecx,DWORD PTR [ebp-0xc]
  41db89:	sub    eax,ecx
  41db8b:	jmp    0x41ff41
  41db90:	loope  0x41db9a
  41db92:	loope  0x41db55
  41db94:	xchg   DWORD PTR [edi-0x1517f73f],eax
  41db9a:	iret   
  41db9b:	addr16 daa 
  41db9d:	inc    edi
  41db9e:	cmp    eax,0x79d2f63e
  41dba3:	jp     0x41db86
  41dba5:	pop    edi
  41dba6:	jp     0x41dc22
  41dba8:	inc    eax
  41dba9:	rcl    BYTE PTR [edi+0x6e5ce63e],cl
  41dbaf:	jg     0x41dc13
  41dbb1:	pop    edx
  41dbb2:	push   es
  41dbb3:	xor    eax,0x6bf182f8
  41dbb8:	adc    eax,0x6b9305b
  41dbbd:	jb     0x41db71
  41dbbf:	adc    ebx,ebp
  41dbc1:	mov    ds:0x1a2165a0,al
  41dbc6:	jb     0x41db6e
  41dbc8:	dec    edi
  41dbc9:	sbb    DWORD PTR [ebp-0x8],esp
  41dbcc:	das    
  41dbcd:	cmp    DWORD PTR [ecx+0x30e929f3],edx
  41dbd3:	and    dh,al
  41dbd5:	std    
  41dbd6:	popf   
  41dbd7:	sub    al,0x9c
  41dbd9:	adc    al,0xb7
  41dbdb:	mov    WORD PTR [ebx],fs
  41dbdd:	push   ecx
  41dbde:	pop    ebp
  41dbdf:	push   ebp
  41dbe0:	push   esi
  41dbe1:	shl    ecx,cl
  41dbe3:	mov    ch,0x79
  41dbe5:	addr16 mov ch,0xed
  41dbe8:	push   ds
  41dbe9:	xchg   ebp,esi
  41dbeb:	aas    
  41dbec:	hlt    
  41dbed:	lods   al,BYTE PTR ds:[esi]
  41dbee:	mov    ss,WORD PTR [esi+0x45]
  41dbf1:	ret    
  41dbf2:	push   ss
  41dbf3:	push   ebp
  41dbf4:	cmp    BYTE PTR [ebx-0xe],0xdf
  41dbf8:	and    BYTE PTR [esi-0x25],dl
  41dbfb:	mov    ebp,0x66045541
  41dc00:	pop    ebp
  41dc01:	mov    al,ds:0x6d67556c
  41dc06:	(bad)  
  41dc07:	and    BYTE PTR [edx-0x1f],ah
  41dc0a:	dec    eax
  41dc0b:	mov    BYTE PTR [esi+0x675c06d],ch
  41dc11:	jmp    0x41d7751f
  41dc16:	sbb    DWORD PTR [ecx+0x2a389901],edi
  41dc1c:	arpl   WORD PTR [esi-0x3b8c57f9],si
  41dc22:	sbb    dl,BYTE PTR [edx+0x71704196]
  41dc28:	rcl    edi,1
  41dc2a:	mov    ebp,0x27475936
  41dc2f:	xor    ebx,edx
  41dc31:	sub    BYTE PTR [ecx],ah
  41dc33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc34:	mov    bl,0xca
  41dc36:	bound  eax,QWORD PTR [edx+ebp*4+0x4c]
  41dc3a:	clc    
  41dc3b:	repz clc 
  41dc3d:	cwde   
  41dc3e:	mov    edi,0x3d14f362
  41dc43:	dec    ebx
  41dc44:	out    dx,eax
  41dc45:	rcl    BYTE PTR [esi+0xcf10bd9],0x31
  41dc4c:	xor    ebx,DWORD PTR [ebx+eiz*2]
  41dc4f:	jge    0x41dc5a
  41dc51:	les    esi,FWORD PTR [eax*2+0x36927886]
  41dc58:	mov    dh,0x7
  41dc5a:	repz mov ax,ds:0x977a3d60
  41dc61:	fnstcw WORD PTR [ebp-0x6c]
  41dc64:	xchg   esi,eax
  41dc65:	mov    ebp,0x2ec807f2
  41dc6a:	push   eax
  41dc6b:	inc    ebp
  41dc6c:	sbb    ecx,DWORD PTR [edi+ebx*1-0x55b5f2ba]
  41dc73:	dec    edi
  41dc74:	dec    edx
  41dc75:	inc    edi
  41dc76:	dec    esi
  41dc77:	shr    DWORD PTR [ebx],cl
  41dc79:	xchg   ecx,eax
  41dc7a:	sbb    DWORD PTR [ecx],0xd7519e17
  41dc80:	mov    ebx,0x6d38a2c1
  41dc85:	call   0xbcb4:0xb83da683
  41dc8c:	mov    ebx,DWORD PTR [eax]
  41dc8e:	xor    al,0xa1
  41dc90:	jp     0x41dc7b
  41dc92:	in     al,dx
  41dc93:	pop    edx
  41dc94:	mov    esi,0x12336f81
  41dc99:	int    0x40
  41dc9b:	xor    esi,DWORD PTR [eax]
  41dc9d:	cmp    al,0x7
  41dc9f:	xchg   ecx,eax
  41dca0:	xchg   dl,bh
  41dca2:	mov    dh,0xb0
  41dca4:	mov    ch,0x60
  41dca6:	mov    fs,WORD PTR [edi-0x6fd6fd25]
  41dcac:	imul   ecx,esi,0xffffffb7
  41dcaf:	lods   al,BYTE PTR ds:[si]
  41dcb1:	ret    0xb83d
  41dcb4:	adc    ebp,DWORD PTR [ebp-0x51]
  41dcb7:	jmp    0x41dcef
  41dcb9:	inc    esp
  41dcba:	pop    ds
  41dcbb:	nop
  41dcbc:	xlat   BYTE PTR ds:[ebx]
  41dcbd:	es ret 
  41dcbf:	(bad)  
  41dcc0:	fild   QWORD PTR [esi+0x2b]
  41dcc3:	ror    BYTE PTR [eax],0xb0
  41dcc6:	and    bl,BYTE PTR [eax]
  41dcc8:	xchg   dh,bh
  41dcca:	ss out dx,al
  41dccc:	xor    esi,DWORD PTR cs:[eax+0x7d620e28]
  41dcd3:	js     0xc6447ad9
  41dcd9:	mov    cl,0xcf
  41dcdb:	mov    ah,0xbf
  41dcdd:	dec    ebx
  41dcde:	jb     0x41dcde
  41dce0:	push   0x750a0eee
  41dce5:	mov    cl,0x1b
  41dce7:	sar    BYTE PTR [edi-0x7b5e2b6],1
  41dced:	not    BYTE PTR [esp+eax*1+0x677d5f3e]
  41dcf4:	sub    al,0xe4
  41dcf6:	xchg   edx,eax
  41dcf7:	xchg   esp,eax
  41dcf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dcf9:	push   edx
  41dcfa:	sub    dh,BYTE PTR [ecx]
  41dcfc:	out    0x90,eax
  41dcfe:	leave  
  41dcff:	ins    DWORD PTR es:[edi],dx
  41dd00:	mov    edx,0xbf62821e
  41dd05:	pusha  
  41dd06:	dec    ecx
  41dd07:	push   ebp
  41dd08:	or     eax,0x166ea962
  41dd0d:	int3   
  41dd0e:	push   cs
  41dd0f:	mov    dh,0x45
  41dd11:	xchg   DWORD PTR [eax],esi
  41dd13:	pop    ds
  41dd14:	jle    0x41dd10
  41dd16:	add    BYTE PTR [eax+0x1fcf40bd],0x85
  41dd1d:	xchg   BYTE PTR [ecx+0x74],bh
  41dd20:	mov    al,BYTE PTR [esi+0x38]
  41dd23:	(bad)  
  41dd24:	cmp    al,0x4d
  41dd26:	sbb    al,0x65
  41dd28:	dec    esp
  41dd29:	cmp    bl,ch
  41dd2b:	(bad)  
  41dd2c:	pop    esp
  41dd2d:	jnp    0x41dcc3
  41dd2f:	(bad)
  41dd33:	jns    0x41dda5
  41dd35:	sub    eax,0x553f517
  41dd3a:	cmp    ecx,edx
  41dd3c:	jmp    0x41dd33
  41dd3e:	(bad)  
  41dd40:	mov    eax,0x30fb37b0
  41dd45:	in     al,0x2a
  41dd47:	jp     0x41dd2d
  41dd49:	sub    dh,ch
  41dd4b:	lea    ebx,[edi-0x4294df19]
  41dd51:	test   eax,0xf219fd75
  41dd56:	add    al,0xc
  41dd58:	stc    
  41dd59:	sub    ecx,DWORD PTR [esi]
  41dd5b:	div    bh
  41dd5d:	xchg   edi,eax
  41dd5e:	std    
  41dd5f:	push   cs
  41dd60:	sub    edx,DWORD PTR [ecx]
  41dd62:	in     eax,0x69
  41dd64:	dec    edi
  41dd65:	out    dx,eax
  41dd66:	xor    al,0xb1
  41dd68:	sbb    al,0xa5
  41dd6a:	fistp  QWORD PTR [edi]
  41dd6c:	loopne 0x41ddcc
  41dd6e:	inc    esp
  41dd6f:	sub    bl,cl
  41dd71:	dec    esi
  41dd72:	inc    esi
  41dd73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd74:	push   ebp
  41dd75:	mov    ebp,0x6d165190
  41dd7b:	dec    ebx
  41dd7c:	addr16 and eax,0xdca4e377
  41dd82:	adc    eax,0x760984a3
  41dd87:	xor    esi,esp
  41dd89:	push   0x29
  41dd8b:	std    
  41dd8c:	xor    eax,0x2e7dd897
  41dd91:	mov    edx,?
  41dd93:	pop    edi
  41dd94:	dec    esi
  41dd95:	out    0xc0,eax
  41dd97:	cmp    esi,DWORD PTR [ecx-0x2fea911c]
  41dd9d:	cmp    ch,BYTE PTR [edx]
  41dd9f:	ss into 
  41dda1:	pop    eax
  41dda2:	jns    0x41ddc4
  41dda4:	rol    DWORD PTR [ebp-0x749f3098],1
  41ddaa:	cs mov ch,0x8
  41ddad:	and    ch,BYTE PTR [edi]
  41ddaf:	cs enter 0x7fb4,0xfd
  41ddb4:	call   0xa8b95132
  41ddb9:	dec    edx
  41ddba:	mov    ecx,0xc3a1b870
  41ddbf:	ror    BYTE PTR [eax-0x55451d96],1
  41ddc5:	(bad)  
  41ddc6:	js     0x41dd4f
  41ddc8:	pusha  
  41ddc9:	dec    esp
  41ddca:	cmp    ch,BYTE PTR [eax]
  41ddcc:	iret   
  41ddcd:	repz pop ecx
  41ddcf:	std    
  41ddd0:	mov    bh,0xf7
  41ddd2:	fild   WORD PTR [edi-0x79]
  41ddd5:	mov    edx,0xb2d6b521
  41ddda:	xchg   DWORD PTR [esi+0xcb730aa],edx
  41dde0:	repz icebp 
  41dde2:	repnz sub cl,BYTE PTR [ebx]
  41dde5:	jp     0x41de14
  41dde7:	sub    eax,0xbcad4aab
  41ddec:	shl    BYTE PTR [eax+0x76f0f130],1
  41ddf2:	mov    bh,0x67
  41ddf4:	cwde   
  41ddf5:	in     al,0xa6
  41ddf7:	cmp    al,0xc0
  41ddf9:	into   
  41ddfa:	mov    DWORD PTR [edi+ecx*1+0x7f],ecx
  41ddfe:	ins    BYTE PTR es:[edi],dx
  41ddff:	lahf   
  41de00:	inc    ebx
  41de01:	outs   dx,BYTE PTR ds:[esi]
  41de02:	ss push edi
  41de04:	jmp    0x41de71
  41de06:	pop    eax
  41de07:	ret    
  41de08:	push   ebp
  41de09:	pop    ebp
  41de0a:	sbb    dh,BYTE PTR [ebx-0x7]
  41de0d:	in     eax,0xa4
  41de0f:	jecxz  0x41de1b
  41de11:	mov    ds,edx
  41de13:	xchg   ebp,edi
  41de15:	mov    esp,0xb4a942de
  41de1a:	int3   
  41de1b:	enter  0x716b,0x5d
  41de1f:	not    eax
  41de21:	stc    
  41de22:	leave  
  41de23:	dec    eax
  41de24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de25:	stc    
  41de26:	ror    DWORD PTR [edx],cl
  41de28:	sub    dh,0xf2
  41de2b:	push   esp
  41de2c:	clc    
  41de2d:	test   al,0x52
  41de30:	mov    ebx,0xe4a91f2d
  41de35:	xor    al,0x70
  41de37:	push   es
  41de38:	bound  ebx,QWORD PTR [esi+eiz*1]
  41de3b:	fwait
  41de3c:	rcr    DWORD PTR [ebp-0x5d],0x74
  41de40:	push   es
  41de41:	pushf  
  41de42:	xor    DWORD PTR [ebp+eax*8-0x6bb19ec],edx
  41de49:	jmp    0xc956:0xf371129b
  41de50:	ret    
  41de51:	jbe    0x41ddfb
  41de53:	jns    0x41de22
  41de55:	xor    BYTE PTR [edi-0x7689d8e1],0xa4
  41de5c:	lahf   
  41de5d:	jle    0x41de00
  41de5f:	mov    edx,0xda00608a
  41de64:	sub    al,0xec
  41de66:	add    eax,0x1bff53de
  41de6b:	xchg   edx,eax
  41de6c:	rcl    BYTE PTR [ecx+0x69],1
  41de6f:	lds    ebx,FWORD PTR [ebp+0x4e]
  41de72:	mov    eax,ds:0xda547c84
  41de77:	push   esi
  41de78:	inc    esp
  41de79:	and    dh,BYTE PTR [eax]
  41de7b:	lahf   
  41de7c:	jns    0x41ddff
  41de7e:	inc    eax
  41de7f:	xor    al,0xc5
  41de81:	jb     0x41dee4
  41de83:	add    al,0x5f
  41de85:	xlat   BYTE PTR ds:[ebx]
  41de86:	idiv   BYTE PTR [edx-0x3aef214a]
  41de8c:	sbb    DWORD PTR [ebp+eiz*2+0x3c],eax
  41de90:	adc    BYTE PTR [ecx+0x1ccd0e02],dh
  41de96:	mov    ebx,0xb5c79d18
  41de9b:	dec    esp
  41de9c:	mov    edx,0xc2419d33
  41dea1:	mov    esp,0x1e142b71
  41dea6:	mov    ebx,cr3
  41dea9:	lods   eax,DWORD PTR ds:[esi]
  41deaa:	mov    edx,esp
  41deac:	xchg   ebx,eax
  41dead:	vhaddps ymm1,ymm7,YMMWORD PTR [eax-0x34f739ee]
  41deb5:	mov    dl,cl
  41deb7:	xor    eax,0xf66d71e2
  41debc:	xor    al,0x5f
  41debe:	scas   al,BYTE PTR es:[edi]
  41debf:	inc    edi
  41dec0:	int3   
  41dec1:	cmp    eax,0x9bb23c0e
  41dec6:	sub    eax,0x9eb8a2ef
  41decb:	int    0xa7
  41decd:	cld    
  41dece:	jae    0x41df10
  41ded0:	inc    ebx
  41ded1:	cdq    
  41ded2:	mov    DWORD PTR ds:0xc07bfad1,0x5a56bf5f
  41dedc:	lods   eax,DWORD PTR ds:[esi]
  41dedd:	mov    ecx,0x2e41006e
  41dee2:	sub    BYTE PTR [ebx+ebp*1-0x4b],bh
  41dee6:	hlt    
  41dee7:	cld    
  41dee8:	jl     0x41df4c
  41deea:	inc    edx
  41deeb:	enter  0x4a54,0xf6
  41deef:	loope  0x41def4
  41def1:	jmp    DWORD PTR [ecx-0x25346cfa]
  41def7:	push   esp
  41def8:	gs fwait
  41defa:	jbe    0x41de86
  41defc:	jmp    0x41dec3
  41defe:	mov    al,ds:0x41d5eb79
  41df03:	mov    eax,0xbac24368
  41df08:	shl    BYTE PTR [ebx],1
  41df0a:	lock adc al,0x63
  41df0d:	jecxz  0x41df0c
  41df0f:	inc    ebp
  41df10:	leave  
  41df11:	rcr    DWORD PTR [ecx],1
  41df13:	push   edi
  41df14:	xor    bl,bl
  41df16:	push   ss
  41df17:	mov    ecx,0x8484fd27
  41df1c:	mov    dh,0x46
  41df1e:	or     eax,DWORD PTR [edx-0x29]
  41df21:	sub    DWORD PTR [edx+0x3e],esi
  41df24:	out    dx,eax
  41df25:	cdq    
  41df26:	test   al,0xb0
  41df28:	and    eax,0xff1d7e06
  41df2d:	xchg   ebp,eax
  41df2e:	sti    
  41df2f:	dec    esp
  41df30:	cmp    DWORD PTR [edx+eiz*4],esp
  41df33:	fs mov al,0xdb
  41df36:	icebp  
  41df37:	mov    ch,0x52
  41df39:	xlat   BYTE PTR ds:[ebx]
  41df3a:	cld    
  41df3b:	dec    ebp
  41df3c:	cmp    ch,BYTE PTR [edx]
  41df3e:	xchg   edx,eax
  41df3f:	pop    ss
  41df40:	add    BYTE PTR [ebx+0x476dc50e],al
  41df46:	popf   
  41df47:	xchg   BYTE PTR [ebx],dl
  41df49:	inc    esp
  41df4a:	cmp    eax,ecx
  41df4c:	bound  ecx,QWORD PTR [ecx+0x472ac205]
  41df52:	adc    esi,edi
  41df54:	adc    BYTE PTR gs:[eax-0x69f284b3],0x32
  41df5c:	or     al,0x49
  41df5e:	push   ds
  41df5f:	stos   DWORD PTR es:[edi],eax
  41df60:	and    dl,dh
  41df62:	jl     0x41dee7
  41df64:	pop    ss
  41df65:	pop    ss
  41df66:	sub    DWORD PTR [esi+0x24300dc0],0x36
  41df6d:	sbb    DWORD PTR [ebx],ecx
  41df6f:	and    al,ah
  41df71:	into   
  41df72:	jne    0x41def4
  41df74:	cmp    ch,BYTE PTR [eax-0x14df2642]
  41df7a:	test   DWORD PTR [ebp-0x3c],ebp
  41df7d:	mov    bh,al
  41df7f:	(bad)  [ebx+eiz*2]
  41df82:	inc    eax
  41df83:	dec    edx
  41df84:	or     al,0x11
  41df86:	mov    ebp,0x920acb2f
  41df8b:	nop
  41df8c:	push   ds
  41df8d:	js     0x41df75
  41df8f:	outs   dx,BYTE PTR ds:[esi]
  41df90:	and    BYTE PTR [ecx-0x42],bh
  41df93:	sti    
  41df94:	push   ss
  41df95:	arpl   WORD PTR [ebp+0x52],ax
  41df98:	mov    WORD PTR [esi+edx*1],?
  41df9b:	jns    0x41df1d
  41df9d:	test   eax,0x5e9c27d9
  41dfa2:	loope  0x41df5c
  41dfa4:	pop    esp
  41dfa5:	sbb    BYTE PTR [edi+0x2b],bh
  41dfa8:	mov    edi,0xb9adcde2
  41dfad:	mov    edi,0x6f431b78
  41dfb2:	neg    al
  41dfb4:	out    dx,al
  41dfb5:	xchg   BYTE PTR [eax-0x2f],dl
  41dfb8:	and    eax,0x9d4cc6d3
  41dfbd:	les    edi,FWORD PTR [edi]
  41dfbf:	adc    bh,0xb4
  41dfc2:	ret    
  41dfc3:	stc    
  41dfc4:	in     al,dx
  41dfc5:	mov    edi,0x63ac3766
  41dfca:	stos   BYTE PTR es:[edi],al
  41dfcb:	cmp    al,0x36
  41dfcd:	stos   BYTE PTR es:[edi],al
  41dfce:	mov    ebp,0x389e2e17
  41dfd3:	xor    bl,0xb3
  41dfd6:	jae    0x41e035
  41dfd8:	push   esp
  41dfd9:	shl    DWORD PTR [ebp+0x97378c2],cl
  41dfdf:	or     esp,ecx
  41dfe1:	sbb    DWORD PTR [eax+0x499f578e],0x65a40232
  41dfeb:	fs jp  0x41e058
  41dfee:	sbb    DWORD PTR [ebx],eax
  41dff0:	jl     0x41e05d
  41dff2:	jl     0x41dfd4
  41dff4:	cmp    ecx,DWORD PTR [edx-0x452620fe]
  41dffa:	adc    ebx,ecx
  41dffc:	dec    edi
  41dffd:	jg     0x41dfe9
  41dfff:	stos   DWORD PTR es:[edi],eax
  41e000:	test   eax,0x8cb2135e
  41e005:	int3   
  41e006:	xor    eax,0xe3d2f9ef
  41e00b:	test   eax,0x1733846e
  41e010:	pop    esp
  41e011:	(bad)  
  41e012:	xchg   edx,eax
  41e013:	and    DWORD PTR [eax],eax
  41e015:	shl    BYTE PTR [edx+0x4d],cl
  41e018:	or     BYTE PTR [ebx+0x25549d06],ah
  41e01e:	sub    edi,eax
  41e020:	cdq    
  41e021:	ret    
  41e022:	or     edx,ebp
  41e024:	js     0x41dff0
  41e026:	mov    ecx,0xaee185df
  41e02b:	gs xchg edi,eax
  41e02d:	add    ecx,ecx
  41e02f:	vunpcklpd xmm0,xmm1,XMMWORD PTR [ebx-0x41]
  41e034:	neg    BYTE PTR [ecx]
  41e036:	jb     0x41dff0
  41e038:	dec    ah
  41e03a:	out    0x52,al
  41e03c:	xchg   esi,eax
  41e03d:	jg     0x41dfe6
  41e03f:	mov    ds:0xf361fba9,eax
  41e044:	jecxz  0x41e090
  41e046:	push   ss
  41e047:	mov    esp,0x39bd2a74
  41e04c:	call   0xd01c:0xa8e5449d
  41e053:	sub    BYTE PTR [ecx-0x3954397d],cl
  41e059:	jns    0x41e089
  41e05b:	pop    eax
  41e05c:	pshufw mm0,mm2,0xe0
  41e060:	test   al,0x25
  41e062:	or     eax,0xc8bf5d4f
  41e067:	xchg   esp,eax
  41e068:	fsub   QWORD PTR [ebp-0x8]
  41e06b:	jg     0x41e034
  41e06d:	push   0x2e
  41e06f:	retf   0x7c4d
  41e072:	xlat   BYTE PTR ds:[ebx]
  41e073:	pop    ebp
  41e074:	ins    DWORD PTR es:[edi],dx
  41e075:	mov    edx,0xe0173a5d
  41e07a:	add    al,0xe5
  41e07c:	mov    esi,0x29b624e1
  41e081:	xlat   BYTE PTR ds:[ebx]
  41e082:	cmp    BYTE PTR [edx+0x47],0x30
  41e086:	test   eax,0x7bc3a7f9
  41e08b:	scas   eax,DWORD PTR es:[edi]
  41e08c:	pop    cx
  41e08e:	into   
  41e08f:	push   ecx
  41e090:	push   ebx
  41e091:	xor    DWORD PTR [ecx+0x9],esi
  41e094:	jmp    0xfd92:0x65673215
  41e09b:	(bad)  [eax+0x7e48068]
  41e0a1:	repz pop ds
  41e0a3:	pushf  
  41e0a4:	(bad)  
  41e0a5:	std    
  41e0a6:	pop    ebx
  41e0a7:	imul   esp,DWORD PTR [edx],0xba73312
  41e0ad:	cmp    DWORD PTR [ebp+eax*1-0x59c478f8],eax
  41e0b4:	push   eax
  41e0b5:	aad    0x8b
  41e0b7:	in     al,dx
  41e0b8:	cmp    DWORD PTR [edi-0x3c],eax
  41e0bb:	push   esi
  41e0bc:	adc    bh,BYTE PTR [ecx]
  41e0be:	bnd jp 0x41e0d7
  41e0c1:	mov    ecx,0xdabb6836
  41e0c6:	out    0x80,eax
  41e0c8:	repz pop eax
  41e0ca:	xchg   ecx,eax
  41e0cb:	(bad)  
  41e0cc:	cmc    
  41e0cd:	xor    eax,0x6fd244ed
  41e0d2:	clc    
  41e0d3:	xchg   esp,eax
  41e0d4:	shr    cl,cl
  41e0d6:	xor    eax,0xde958ea6
  41e0db:	mov    cl,0x4a
  41e0dd:	lea    esi,[esi+0x74]
  41e0e0:	cmc    
  41e0e1:	inc    ebx
  41e0e2:	fptan  
  41e0e4:	fnstsw WORD PTR [esi]
  41e0e6:	pop    ebp
  41e0e7:	pop    edi
  41e0e8:	scas   al,BYTE PTR es:[edi]
  41e0e9:	jge    0x41e0a4
  41e0eb:	sbb    eax,0x695d853d
  41e0f0:	or     DWORD PTR [eax+edi*4-0x67],ebx
  41e0f4:	lock scas eax,DWORD PTR es:[edi]
  41e0f6:	adc    eax,0x444a98bc
  41e0fb:	inc    edi
  41e0fc:	mul    BYTE PTR [eax-0x38da36e1]
  41e102:	mov    edi,0x266a581e
  41e107:	push   0x94e71770
  41e10c:	and    eax,0x2be531cc
  41e111:	inc    BYTE PTR [edi-0x38]
  41e114:	inc    ebx
  41e115:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e116:	sbb    eax,0x5f4475e6
  41e11b:	ja     0x41e158
  41e11d:	iret   
  41e11e:	add    DWORD PTR [ecx-0x324980b7],esp
  41e124:	int3   
  41e125:	not    DWORD PTR [edi]
  41e127:	addr16 push ebp
  41e129:	jg     0x41e142
  41e12b:	call   0x692:0xb5146659
  41e132:	test   eax,0xb7052a16
  41e137:	inc    edi
  41e138:	sub    DWORD PTR [eax+ebp*1-0x5d],0x557a308a
  41e140:	pop    ss
  41e141:	mov    eax,esi
  41e143:	mov    DWORD PTR ds:0x9ba35013,edi
  41e149:	and    BYTE PTR [esi],ch
  41e14b:	mov    ecx,0x54cca973
  41e150:	(bad)  
  41e151:	and    edx,DWORD PTR [ecx-0x73]
  41e154:	ins    DWORD PTR es:[edi],dx
  41e155:	or     al,0x52
  41e157:	pushf  
  41e158:	inc    DWORD PTR [edx]
  41e15a:	inc    edi
  41e15b:	imul   eax,DWORD PTR [ebx],0x7ad9ecea
  41e161:	add    ebp,edi
  41e163:	aad    0x96
  41e165:	fs data16 jecxz 0x41e179
  41e169:	inc    eax
  41e16a:	scas   eax,DWORD PTR es:[edi]
  41e16b:	lea    esi,[edx]
  41e16d:	lods   eax,DWORD PTR ds:[esi]
  41e16e:	push   eax
  41e16f:	jo     0x41e154
  41e171:	push   esi
  41e172:	adc    eax,0xcba699bd
  41e177:	shr    BYTE PTR [eax+eiz*1-0x3a],cl
  41e17b:	(bad)  
  41e17c:	mov    ebx,0xf52b0362
  41e181:	popf   
  41e182:	sbb    al,0xba
  41e184:	and    esi,DWORD PTR [ebp+edx*2+0x2d995d99]
  41e18b:	push   ds
  41e18c:	ds pop esi
  41e18e:	aas    
  41e18f:	pop    esi
  41e190:	ret    0x91fc
  41e193:	aad    0xd4
  41e195:	sub    eax,0xc2f41165
  41e19a:	xor    ah,BYTE PTR [esi-0x33a22795]
  41e1a0:	fisttp QWORD PTR [esi+0x4e480549]
  41e1a6:	stos   DWORD PTR es:[edi],eax
  41e1a7:	ins    BYTE PTR es:[edi],dx
  41e1a8:	sub    eax,0xe4eeeae
  41e1ad:	jno    0x41e13b
  41e1af:	bound  ebp,QWORD PTR [ebp+0x3f]
  41e1b2:	daa    
  41e1b3:	add    al,0xd7
  41e1b5:	int    0x6a
  41e1b7:	adc    al,0xba
  41e1b9:	(bad)  
  41e1ba:	dec    esi
  41e1bb:	dec    ebx
  41e1bc:	inc    ebx
  41e1bd:	fmul   QWORD PTR [ebp+0x6610ee43]
  41e1c3:	pop    ebp
  41e1c4:	test   DWORD PTR [edi+0x55],esi
  41e1c7:	ret    0xf5ec
  41e1ca:	push   ebx
  41e1cb:	xor    dl,BYTE PTR [ecx]
  41e1cd:	stos   DWORD PTR es:[edi],eax
  41e1ce:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41e1d0:	cmp    eax,0x1d3c345
  41e1d5:	mov    eax,ds:0x9a6a9292
  41e1da:	inc    eax
  41e1db:	dec    ebp
  41e1dc:	test   eax,0xb3ee38b8
  41e1e1:	imul   esp,DWORD PTR [ecx+0x21],0x7
  41e1e5:	pop    ss
  41e1e6:	in     al,0x13
  41e1e8:	xchg   ebx,eax
  41e1e9:	das    
  41e1ea:	scas   al,BYTE PTR es:[edi]
  41e1eb:	jmp    0x41e1b9
  41e1ed:	ins    DWORD PTR es:[edi],dx
  41e1ee:	add    edx,DWORD PTR [ebx]
  41e1f0:	sbb    edi,DWORD PTR [esi-0xb]
  41e1f3:	mov    BYTE PTR [ecx-0x5c9f5698],dl
  41e1f9:	adc    eax,0x8e2b496a
  41e1fe:	imul   ebx,DWORD PTR [edx-0xd5b4c98],0x54
  41e205:	sub    al,0x90
  41e207:	cmc    
  41e208:	scas   eax,DWORD PTR es:[edi]
  41e209:	imul   esi,DWORD PTR [esi],0x3157d937
  41e20f:	add    eax,0xe25c66c
  41e214:	push   esp
  41e215:	test   eax,0xcf1636
  41e21a:	xlat   BYTE PTR ds:[ebx]
  41e21b:	cld    
  41e21c:	gs jae 0x41e1ac
  41e21f:	(bad)  
  41e220:	out    dx,al
  41e221:	mov    eax,ds:0xa8ebfccd
  41e226:	sbb    eax,0x5b6c1207
  41e22b:	mov    esp,0xc5b64697
  41e230:	and    eax,0xfb56291b
  41e235:	cmp    esp,DWORD PTR [esi+0x4d0234f0]
  41e23b:	stos   DWORD PTR es:[edi],eax
  41e23c:	adc    DWORD PTR [ebp+edi*1+0x13],eax
  41e240:	idiv   ebx
  41e242:	test   DWORD PTR [esi+0x623f94d8],0xcc0e303d
  41e24c:	push   edi
  41e24d:	ror    DWORD PTR [esi+0x74],cl
  41e250:	xchg   esi,eax
  41e251:	imul   eax,DWORD PTR [ebp-0x1c],0x27474291
  41e258:	adc    BYTE PTR [ecx-0x5c76b4eb],cl
  41e25e:	stos   BYTE PTR es:[edi],al
  41e25f:	mov    ecx,esp
  41e261:	daa    
  41e262:	(bad)  
  41e263:	cmp    al,0xcf
  41e265:	lock lock daa 
  41e268:	std    
  41e269:	out    0xb3,al
  41e26b:	mov    edx,0x4d707ee5
  41e270:	(bad)  
  41e271:	mov    bh,0xde
  41e273:	mov    dh,BYTE PTR [ebx]
  41e275:	mov    eax,0x1f033017
  41e27a:	mov    esp,0xc8351d89
  41e27f:	cdq    
  41e280:	neg    BYTE PTR [esi-0x6b]
  41e283:	and    cl,dl
  41e285:	out    0xa8,eax
  41e287:	mov    BYTE PTR [esi+ecx*1],dl
  41e28a:	xchg   ebx,eax
  41e28b:	mov    ebp,0xf956190b
  41e290:	jno    0x41e2f4
  41e292:	push   0x96d6e59a
  41e297:	jbe    0x41e230
  41e299:	repnz mov eax,ds:0x817d7555
  41e29f:	aam    0xb0
  41e2a1:	inc    ecx
  41e2a2:	inc    ecx
  41e2a3:	leave  
  41e2a4:	push   ecx
  41e2a5:	sbb    ah,BYTE PTR [eax]
  41e2a7:	(bad)  
  41e2a8:	cmc    
  41e2a9:	or     bl,BYTE PTR [ebp+0x6f]
  41e2ac:	add    ah,BYTE PTR [edx+0x31]
  41e2af:	int    0xf
  41e2b1:	jmp    0x11786354
  41e2b6:	pop    es
  41e2b7:	stc    
  41e2b8:	xchg   esi,eax
  41e2b9:	mov    ch,0xf4
  41e2bb:	xchg   ebx,eax
  41e2bc:	jmp    0x27c5abf1
  41e2c1:	adc    bh,al
  41e2c3:	cmp    BYTE PTR [edx-0x4c],dh
  41e2c6:	dec    ecx
  41e2c7:	sub    DWORD PTR [edi-0x708d5840],eax
  41e2cd:	fld    TBYTE PTR [ebp-0x54]
  41e2d0:	jbe    0x41e34c
  41e2d2:	inc    edi
  41e2d3:	or     BYTE PTR [edx],dh
  41e2d5:	ror    DWORD PTR [edi],1
  41e2d7:	pop    ebx
  41e2d8:	mov    al,ds:0xe994da85
  41e2dd:	cld    
  41e2de:	or     BYTE PTR [esp+eax*2-0x58d4640e],0x52
  41e2e6:	imul   ebp,DWORD PTR [eax-0x46],0xa1e9f5cd
  41e2ed:	jae    0x41e2a8
  41e2ef:	cmp    al,0x44
  41e2f1:	sbb    DWORD PTR [eax],ebx
  41e2f3:	mov    cl,0x14
  41e2f5:	mov    eax,0xf931dfa0
  41e2fa:	jns    0x41e358
  41e2fc:	mov    ds:0x2a2f178e,eax
  41e301:	cmp    al,BYTE PTR ds:0xf7ad5c36
  41e307:	add    DWORD PTR [edx-0x37b70de2],eax
  41e30d:	loop   0x41e337
  41e30f:	jns    0x41e33f
  41e311:	jno    0x41e30e
  41e313:	or     esp,eax
  41e315:	adc    ebx,DWORD PTR [esi-0x2b4ec09b]
  41e31b:	jmp    0xd8e8b214
  41e320:	(bad)  
  41e321:	jne    0x41e30a
  41e323:	mov    DWORD PTR [eax],edx
  41e325:	pop    ebx
  41e326:	mov    ah,0x70
  41e328:	xor    bl,BYTE PTR [ecx-0x177a385d]
  41e32e:	lahf   
  41e32f:	loop   0x41e379
  41e331:	and    eax,0x86ea45b8
  41e336:	or     al,0xcd
  41e338:	cli    
  41e339:	addr16 inc ecx
  41e33b:	sti    
  41e33c:	mov    ch,0xfd
  41e33e:	stos   BYTE PTR es:[edi],al
  41e33f:	xchg   ecx,eax
  41e340:	pop    ecx
  41e341:	iret   
  41e342:	punpckldq mm7,DWORD PTR [edi-0x51]
  41e346:	in     eax,0x6d
  41e348:	dec    eax
  41e349:	mov    al,0xef
  41e34b:	mov    bl,0x27
  41e34d:	test   BYTE PTR [eax-0x477a01b4],ch
  41e353:	push   cs
  41e354:	test   al,0xe0
  41e356:	and    eax,0xe7383b0c
  41e35b:	retf   
  41e35c:	xchg   esp,eax
  41e35d:	(bad)  
  41e35e:	pop    ebp
  41e35f:	or     BYTE PTR [edi],dh
  41e361:	fisub  DWORD PTR [esi-0x1f]
  41e364:	jecxz  0x41e363
  41e366:	cwde   
  41e367:	or     BYTE PTR [ebx+ecx*2],ah
  41e36a:	rcl    DWORD PTR [ebx-0x2c04301c],0x38
  41e371:	test   ch,0xcc
  41e374:	les    eax,FWORD PTR [ebx]
  41e376:	scas   al,BYTE PTR es:[edi]
  41e377:	out    dx,al
  41e378:	sub    al,ch
  41e37a:	xchg   ecx,eax
  41e37b:	push   es
  41e37c:	adc    DWORD PTR [edx-0x20fde1c6],esp
  41e382:	xchg   edi,eax
  41e383:	dec    edx
  41e384:	jl     0x41e368
  41e386:	inc    ecx
  41e387:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e388:	adc    eax,0x852d22da
  41e38d:	xchg   DWORD PTR [ecx+0x40ef2a8b],eax
  41e393:	cmp    esi,edi
  41e395:	mov    edx,0x751583f9
  41e39a:	xchg   ecx,eax
  41e39b:	push   es
  41e39c:	jmp    0x41e377
  41e39e:	push   ebp
  41e39f:	js     0x41e324
  41e3a1:	sub    al,0x26
  41e3a3:	sub    BYTE PTR [ecx+0x217aa89d],bh
  41e3a9:	ret    
  41e3aa:	test   bl,bh
  41e3ac:	adc    ah,BYTE PTR [ebp+0x1c0505b3]
  41e3b2:	jno    0x41e3cb
  41e3b4:	jmp    0x41e40e
  41e3b6:	lds    ecx,FWORD PTR [ebx-0x10]
  41e3b9:	xor    al,0x8a
  41e3bb:	mov    edx,0x13e55eb4
  41e3c0:	dec    ebp
  41e3c1:	add    esi,DWORD PTR [eax-0x5f1f640a]
  41e3c7:	xor    BYTE PTR [edx+esi*1+0x11],bh
  41e3cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e3cc:	in     eax,dx
  41e3cd:	inc    esi
  41e3ce:	or     al,0x45
  41e3d0:	xor    al,0x96
  41e3d2:	cmp    BYTE PTR [edx-0x62],ah
  41e3d5:	mov    ah,BYTE PTR [ecx-0x24]
  41e3d8:	push   es
  41e3d9:	push   esp
  41e3da:	arpl   di,si
  41e3dc:	je     0x41e433
  41e3de:	test   DWORD PTR [ebx-0x3186e71d],ebp
  41e3e4:	sbb    ch,ah
  41e3e6:	add    dh,0xf
  41e3e9:	mov    esi,ebx
  41e3eb:	sbb    cl,dl
  41e3ed:	pop    esi
  41e3ee:	xor    BYTE PTR [ebp-0x1681a5c6],dl
  41e3f4:	inc    esi
  41e3f5:	arpl   cx,ax
  41e3f7:	push   ecx
  41e3f8:	fisttp QWORD PTR [eax+0x0]
  41e3fb:	cld    
  41e3fc:	(bad)  
  41e3fd:	in     al,0xa1
  41e3ff:	push   ebp
  41e400:	scas   al,BYTE PTR es:[edi]
  41e401:	shr    BYTE PTR [edi+0x22],0x5c
  41e405:	inc    esi
  41e406:	bound  ebp,QWORD PTR [ebx-0x38]
  41e409:	or     BYTE PTR [ebx-0x3ed8bf12],cl
  41e40f:	outs   dx,DWORD PTR ds:[esi]
  41e410:	stc    
  41e411:	cmc    
  41e412:	pop    esp
  41e413:	ror    dl,1
  41e415:	aam    0x4e
  41e417:	lods   al,BYTE PTR ds:[esi]
  41e418:	sub    ebp,DWORD PTR [ebx]
  41e41a:	rcr    DWORD PTR [edx+0x40ce86f],0x94
  41e421:	jmp    0xe4df:0x7789c7cb
  41e428:	nop
  41e429:	jno    0x41e3c7
  41e42b:	add    al,0xf2
  41e42d:	cs out dx,eax
  41e42f:	jae    0x41e3ff
  41e431:	xor    DWORD PTR [esi+0x285db224],ebp
  41e437:	imul   esp,edi,0xffffffe0
  41e43a:	mov    esi,0xb0821a19
  41e43f:	clc    
  41e440:	fcomi  st,st(7)
  41e442:	mov    eax,ds:0x16fc3876
  41e447:	in     eax,0xb1
  41e449:	add    ch,dh
  41e44b:	test   edi,ebx
  41e44d:	xchg   esi,eax
  41e44e:	push   ss
  41e44f:	sub    eax,0x9bd11e24
  41e454:	add    DWORD PTR [esi-0xb942344],ebx
  41e45a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e45b:	jl     0x41e4cc
  41e45d:	(bad)  
  41e45e:	out    0x37,al
  41e460:	cs test al,0x97
  41e463:	push   cs
  41e464:	xchg   ebx,eax
  41e465:	mov    dl,BYTE PTR [edi]
  41e467:	add    esi,DWORD PTR [edi]
  41e469:	adc    bh,BYTE PTR [ebp+0x69c4ce33]
  41e46f:	outs   dx,BYTE PTR ds:[esi]
  41e470:	leave  
  41e471:	fistp  WORD PTR [ecx+0xe]
  41e474:	xchg   esp,eax
  41e475:	pop    ss
  41e476:	imul   ecx,DWORD PTR [edi+0x14],0xffffffd4
  41e47a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e47b:	aas    
  41e47c:	int3   
  41e47d:	test   eax,0x2f5dc855
  41e482:	cmp    ah,cl
  41e484:	or     DWORD PTR [ecx],esp
  41e486:	outs   dx,DWORD PTR ds:[esi]
  41e487:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e488:	nop
  41e489:	xchg   edi,eax
  41e48a:	mov    eax,0x98d05951
  41e48f:	fcomp  DWORD PTR [eax]
  41e491:	stc    
  41e492:	fcmovb st,st(5)
  41e494:	in     eax,0xb6
  41e496:	out    0x96,al
  41e498:	addr16 out dx,eax
  41e49a:	mov    ecx,0x9288cca9
  41e49f:	jbe    0x41e4f7
  41e4a1:	in     eax,0x9f
  41e4a3:	inc    eax
  41e4a4:	xchg   ebx,eax
  41e4a5:	es fadd st,st(7)
  41e4a8:	outs   dx,DWORD PTR ds:[esi]
  41e4a9:	call   FWORD PTR [edi]
  41e4ab:	or     edx,DWORD PTR [edx-0x1b]
  41e4ae:	es jb  0x41e453
  41e4b1:	ret    
  41e4b2:	dec    edx
  41e4b3:	xchg   BYTE PTR [esi],dh
  41e4b5:	arpl   WORD PTR [ebp+0x1a],bp
  41e4b8:	jge    0x41e458
  41e4ba:	or     ebp,esp
  41e4bc:	ja     0x41e522
  41e4be:	shl    ch,cl
  41e4c0:	mov    cl,BYTE PTR [edx+ebx*4-0x76]
  41e4c4:	dec    esp
  41e4c5:	(bad)  
  41e4c6:	in     al,dx
  41e4c7:	xchg   BYTE PTR [ebx],ch
  41e4c9:	mov    edi,0xe6a584aa
  41e4ce:	xchg   DWORD PTR [eax-0x361ef3d9],esi
  41e4d4:	lea    edx,[eax-0x2ada1ff1]
  41e4da:	std    
  41e4db:	add    BYTE PTR [esi+eiz*2+0x7dc56dd3],bl
  41e4e2:	jbe    0x41e53a
  41e4e4:	xor    al,0x1c
  41e4e6:	mov    ah,0x76
  41e4e8:	pop    ebp
  41e4e9:	ror    cl,cl
  41e4eb:	(bad)  
  41e4ed:	push   ss
  41e4ee:	xchg   DWORD PTR [eax],eax
  41e4f0:	shl    BYTE PTR [eax+0x22],0x60
  41e4f4:	adc    eax,0x3d347be9
  41e4f9:	push   eax
  41e4fa:	ins    DWORD PTR es:[edi],dx
  41e4fb:	mov    cs,WORD PTR [ebx+0x65]
  41e4fe:	sbb    ch,BYTE PTR [edi]
  41e500:	call   0x44447fe
  41e505:	sub    edi,DWORD PTR [eax]
  41e507:	ror    DWORD PTR [ecx+0x1e],0xc7
  41e50b:	lds    esi,FWORD PTR [edx-0x2b1c7fbb]
  41e511:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e512:	les    edx,FWORD PTR [ecx-0x1522b0b]
  41e518:	cli    
  41e519:	cmc    
  41e51a:	push   eax
  41e51b:	jmp    0x9547eed4
  41e520:	xchg   dh,bl
  41e522:	mov    cl,0x4b
  41e524:	aas    
  41e525:	push   ebp
  41e526:	hlt    
  41e527:	pop    ecx
  41e528:	push   eax
  41e529:	pusha  
  41e52a:	xchg   ebx,eax
  41e52b:	test   BYTE PTR [edi+edx*1+0xd],bh
  41e52f:	fiadd  DWORD PTR [ebx+eiz*4-0x5989203e]
  41e536:	xor    DWORD PTR [edx-0x2c],edi
  41e539:	ret    
  41e53a:	stos   DWORD PTR es:[edi],eax
  41e53b:	mov    bh,BYTE PTR [edx-0x75]
  41e53e:	dec    esi
  41e53f:	leave  
  41e540:	add    edx,DWORD PTR [edx+0x4d]
  41e543:	jecxz  0x41e56f
  41e545:	(bad)  
  41e546:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e547:	std    
  41e548:	cmc    
  41e549:	loopne 0x41e50e
  41e54b:	pop    ebx
  41e54c:	test   eax,0x846fa1c5
  41e551:	sub    eax,0x9a937332
  41e556:	sbb    DWORD PTR [ebx-0x38],0x53
  41e55a:	add    eax,0x70de9259
  41e55f:	pop    ebx
  41e560:	mov    al,ds:0x9bae67d0
  41e565:	xor    ecx,DWORD PTR es:[eax+0x128ea907]
  41e56c:	inc    ebx
  41e56d:	mov    ?,WORD PTR [edx]
  41e56f:	cmp    ebx,DWORD PTR cs:[ebx+0x7d]
  41e573:	xchg   bx,ax
  41e575:	rcr    DWORD PTR [ebx+0x3bf06b28],cl
  41e57b:	sub    BYTE PTR [ebx+0x33],al
  41e57e:	loop   0x41e5c6
  41e580:	cmp    ch,BYTE PTR [edx-0x5c2cf51]
  41e586:	js     0x41e52b
  41e588:	(bad)  
  41e589:	out    0x81,al
  41e58b:	adc    BYTE PTR [edx+eiz*1-0x1be42780],0x37
  41e593:	dec    ecx
  41e594:	lea    ecx,[ebp+0x57ba5e19]
  41e59a:	stos   BYTE PTR es:[edi],al
  41e59b:	jmp    0x37500129
  41e5a0:	push   ebp
  41e5a1:	push   ebp
  41e5a2:	and    eax,0x1518cad3
  41e5a7:	push   cs
  41e5a8:	mov    dh,0xc9
  41e5aa:	fwait
  41e5ab:	in     al,0xc5
  41e5ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e5ae:	or     BYTE PTR [edi-0x2c],ah
  41e5b1:	mov    bl,0x30
  41e5b3:	lods   al,BYTE PTR ds:[esi]
  41e5b4:	adc    al,0x64
  41e5b6:	je     0x41e608
  41e5b8:	jno    0x41e57a
  41e5ba:	xchg   esi,eax
  41e5bb:	in     al,0x7b
  41e5bd:	xchg   ch,bh
  41e5bf:	add    BYTE PTR cs:[ecx],cl
  41e5c2:	jecxz  0x41e5c5
  41e5c4:	inc    eax
  41e5c5:	pop    es
  41e5c6:	cmp    eax,0x495171
  41e5cb:	mov    ecx,0x488147db
  41e5d0:	rol    BYTE PTR [edx+0x74a5f40e],cl
  41e5d6:	push   eax
  41e5d7:	or     al,0x30
  41e5d9:	push   esi
  41e5da:	push   eax
  41e5db:	pop    esp
  41e5dc:	(bad)  
  41e5de:	retf   0xa5ec
  41e5e1:	(bad)  
  41e5e2:	fnsave [eax+0x36]
  41e5e5:	loop   0x41e598
  41e5e7:	call   0x44de:0x11544a10
  41e5ee:	pop    ss
  41e5ef:	cmp    BYTE PTR [eax-0x58],cl
  41e5f2:	sub    al,0x9
  41e5f4:	pop    ecx
  41e5f5:	ret    
  41e5f6:	mov    al,0x25
  41e5f8:	aad    0xc1
  41e5fa:	push   0xffffff83
  41e5fc:	dec    eax
  41e5fd:	mov    dl,0xeb
  41e5ff:	test   eax,0xb40cf338
  41e604:	xchg   edx,eax
  41e605:	xor    eax,eax
  41e607:	add    eax,0x9709300f
  41e60c:	cmp    BYTE PTR [ecx-0x1157f4ed],ah
  41e612:	addr16 jmp 0x41e5f5
  41e615:	and    BYTE PTR [esi+0x65],0x2
  41e619:	imul   eax,DWORD PTR [edx+0x67be4b36],0xe2eba301
  41e623:	pop    edx
  41e624:	add    eax,0x39b32034
  41e629:	push   ebx
  41e62a:	mov    ecx,0x9a788399
  41e62f:	and    ebp,ebx
  41e631:	jmp    0x1fac:0x632f7c8d
  41e638:	das    
  41e639:	xor    ebx,DWORD PTR [ebx+0x11]
  41e63c:	dec    eax
  41e63d:	dec    ebp
  41e63e:	inc    edx
  41e63f:	cli    
  41e640:	rcl    BYTE PTR [edi+0x6a],0xf8
  41e644:	outs   dx,BYTE PTR ds:[esi]
  41e645:	fwait
  41e646:	mov    bh,0xcd
  41e648:	frstor [ecx]
  41e64a:	pop    esp
  41e64b:	cld    
  41e64c:	mov    BYTE PTR [ecx+0x7d],ch
  41e64f:	pop    ds
  41e650:	test   DWORD PTR [eax],edx
  41e652:	mov    bh,0x65
  41e654:	push   ebp
  41e655:	push   esi
  41e656:	and    dl,BYTE PTR [ecx+0x68d0f2bd]
  41e65c:	xlat   BYTE PTR ds:[ebx]
  41e65d:	pop    ss
  41e65e:	mov    ds:0x102fd279,al
  41e663:	dec    esp
  41e664:	les    edx,FWORD PTR [edi-0x2e]
  41e667:	push   ecx
  41e668:	mov    eax,ds:0xf2ecdb3
  41e66d:	pop    eax
  41e66e:	add    al,0xec
  41e670:	arpl   WORD PTR [eax-0x55],si
  41e673:	clc    
  41e674:	push   ss
  41e675:	pop    edi
  41e676:	aam    0x1e
  41e678:	xor    esi,DWORD PTR cs:[eax-0xa]
  41e67c:	gs jnp 0x41e66a
  41e67f:	mov    ebx,0x17ccaf7f
  41e684:	enter  0xc5b9,0x52
  41e688:	arpl   WORD PTR [edi],bp
  41e68a:	in     eax,0xa1
  41e68c:	test   al,0xf1
  41e68e:	icebp  
  41e68f:	cmp    BYTE PTR [edi-0x64],bl
  41e692:	mov    cl,0xe7
  41e695:	or     DWORD PTR [ebp+0x58],eax
  41e698:	imul   ebp,DWORD PTR [edx-0x40faba16],0xffffffaa
  41e69f:	stos   DWORD PTR es:[edi],eax
  41e6a0:	xor    eax,0x5780340e
  41e6a5:	inc    esi
  41e6a6:	pop    edx
  41e6a7:	cwde   
  41e6a8:	jmp    0x865c6624
  41e6ad:	jb     0x41e64a
  41e6af:	inc    esi
  41e6b0:	(bad)  [ebx+0x53]
  41e6b3:	jne    0x41e655
  41e6b5:	movlps QWORD PTR ds:0x10ceab3c,xmm7
  41e6bc:	shl    DWORD PTR [esi+0x64],1
  41e6bf:	bound  edx,QWORD PTR [esi]
  41e6c1:	stos   DWORD PTR es:[edi],eax
  41e6c2:	mov    edi,0x2304f822
  41e6c7:	(bad)  
  41e6c8:	push   ebx
  41e6c9:	adc    al,0x24
  41e6cb:	and    BYTE PTR [esi+0x246612fc],0xfb
  41e6d2:	imul   eax,DWORD PTR [ecx],0xffffffeb
  41e6d5:	adc    esi,ebp
  41e6d7:	hlt    
  41e6d8:	and    BYTE PTR [esi-0x77],al
  41e6db:	add    al,0x66
  41e6dd:	sbb    BYTE PTR [ebp-0x5a],bh
  41e6e0:	or     eax,0xbabedcb8
  41e6e5:	stos   BYTE PTR es:[edi],al
  41e6e6:	xor    al,0x97
  41e6e8:	mov    ch,0x32
  41e6ea:	mov    dh,0x88
  41e6ec:	mov    edx,0xaa3e5144
  41e6f1:	pushf  
  41e6f2:	jae    0x41e6c0
  41e6f4:	sub    edi,DWORD PTR [esi]
  41e6f6:	test   eax,esi
  41e6f8:	sub    eax,0x9742a82d
  41e6fd:	leave  
  41e6fe:	xor    cl,BYTE PTR [ecx+edx*8-0x2551e0f3]
  41e705:	or     bl,BYTE PTR [edi-0x72]
  41e708:	sbb    al,0xf2
  41e70a:	adc    BYTE PTR ds:0x5e41c15a,bl
  41e710:	push   ebx
  41e711:	mov    ch,al
  41e713:	mov    dh,0x92
  41e715:	xchg   esi,eax
  41e716:	aaa    
  41e717:	jne    0x41e6f2
  41e719:	leave  
  41e71a:	scas   al,BYTE PTR es:[edi]
  41e71b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e71c:	xchg   edi,eax
  41e71d:	mov    bh,0x4d
  41e71f:	pop    ecx
  41e720:	xchg   DWORD PTR [ecx+0x16],ecx
  41e723:	out    dx,eax
  41e724:	dec    ebp
  41e725:	mul    dl
  41e727:	sbb    dh,BYTE PTR [edx]
  41e729:	faddp  st(7),st
  41e72b:	dec    ebp
  41e72c:	and    BYTE PTR [edx+ebp*2+0x26a1c700],0x84
  41e734:	add    al,0xd1
  41e736:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e737:	dec    ebx
  41e738:	xchg   edi,eax
  41e739:	sbb    bh,BYTE PTR [ebx-0x1f]
  41e73c:	mov    al,0xa8
  41e73e:	dec    eax
  41e73f:	rcl    DWORD PTR [ebx-0x17],0x3d
  41e743:	xor    BYTE PTR [esi+0x776711cd],al
  41e749:	and    al,BYTE PTR [edi+0x1eae1c1c]
  41e74f:	xor    al,0x1
  41e751:	mov    esi,0x81fb9ebc
  41e756:	push   eax
  41e757:	jo     0x41e7c1
  41e759:	(bad)  
  41e75a:	jl     0x41e7d2
  41e75c:	pop    ebx
  41e75d:	pop    eax
  41e75e:	add    eax,0x8e113a94
  41e763:	test   DWORD PTR [eax-0x596089ba],esp
  41e769:	adc    BYTE PTR [ebx-0x8f933c5],bl
  41e76f:	add    bl,bl
  41e771:	adc    BYTE PTR [eax],bh
  41e773:	adc    ecx,DWORD PTR [edi]
  41e775:	outs   dx,BYTE PTR ds:[esi]
  41e776:	gs adc al,0x3
  41e779:	call   0x3c94:0x89fb13f3
  41e780:	ja     0x41e7f8
  41e782:	cld    
  41e783:	mov    esp,0x2cbf6fa9
  41e788:	inc    ebp
  41e789:	fimul  DWORD PTR [edi+0x5c]
  41e78c:	daa    
  41e78d:	adc    dh,BYTE PTR [edi]
  41e78f:	pop    es
  41e790:	pop    ds
  41e791:	mov    DWORD PTR [ecx],esi
  41e793:	les    edx,FWORD PTR [edx-0x80]
  41e796:	shl    BYTE PTR [edx+0x4843b60c],cl
  41e79c:	fidivr WORD PTR [eax+0x46]
  41e79f:	les    edx,FWORD PTR [edx+edi*1+0x20c3fe0c]
  41e7a6:	add    ecx,DWORD PTR [eax+0x73]
  41e7a9:	xor    DWORD PTR [edi+0x2351f7f],ebx
  41e7af:	fwait
  41e7b0:	outs   dx,BYTE PTR ds:[esi]
  41e7b1:	sbb    BYTE PTR [esi+0x66],dl
  41e7b4:	xchg   ebx,eax
  41e7b5:	test   al,0x21
  41e7b7:	gs jae 0x41e758
  41e7ba:	pop    ecx
  41e7bb:	and    BYTE PTR [ecx+0x2513ec10],bh
  41e7c1:	xchg   esi,eax
  41e7c2:	mov    ebx,eax
  41e7c4:	data16 and cl,BYTE PTR [ebp+0x60b9b5d]
  41e7cb:	cmp    al,dl
  41e7cd:	shl    BYTE PTR [edx-0x6460f0d8],1
  41e7d3:	jmp    0x411:0xae97ee40
  41e7da:	imul   eax,DWORD PTR [ecx],0xffffffe2
  41e7dd:	or     eax,0xff958586
  41e7e2:	sahf   
  41e7e3:	pop    esi
  41e7e4:	loop   0x41e7aa
  41e7e6:	inc    eax
  41e7e7:	into   
  41e7e8:	fld    TBYTE PTR [eax-0xc]
  41e7eb:	(bad)  
  41e7ec:	mov    edx,0x69f15cfd
  41e7f1:	js     0x41e85f
  41e7f3:	xchg   ecx,eax
  41e7f4:	sub    DWORD PTR [esi+0x59dbb16a],edi
  41e7fa:	stos   DWORD PTR es:[edi],eax
  41e7fb:	(bad)  
  41e7fc:	push   eax
  41e7fd:	adc    eax,DWORD PTR [edi-0x280e86d5]
  41e803:	(bad)  
  41e804:	cmp    al,BYTE PTR [esi+0x1a]
  41e807:	lahf   
  41e808:	dec    esp
  41e809:	xor    ebx,DWORD PTR [ecx-0x6]
  41e80c:	scas   eax,DWORD PTR es:[edi]
  41e80d:	idiv   DWORD PTR [ebp-0x6e]
  41e810:	sbb    al,0xaa
  41e812:	outs   dx,DWORD PTR ss:[esi]
  41e814:	dec    ecx
  41e815:	out    0xce,eax
  41e817:	adc    al,0x71
  41e819:	xlat   BYTE PTR ds:[ebx]
  41e81a:	jge    0x41e837
  41e81c:	outs   dx,BYTE PTR ds:[esi]
  41e81d:	mov    al,ds:0x7576b51c
  41e822:	xchg   edx,eax
  41e823:	sub    al,0xbf
  41e825:	std    
  41e826:	lods   al,BYTE PTR ds:[esi]
  41e827:	mov    ah,0xe
  41e829:	scas   al,BYTE PTR es:[edi]
  41e82a:	inc    edx
  41e82b:	and    eax,0x3f5d6996
  41e830:	sub    BYTE PTR [esi+0x60],ah
  41e833:	adc    BYTE PTR ds:0xf6838ad9,0x3c
  41e83a:	adc    eax,DWORD PTR [ecx+0x22]
  41e83d:	push   ds
  41e83e:	lods   al,BYTE PTR ds:[esi]
  41e83f:	or     DWORD PTR [ebx+esi*8-0x6ff5da15],eax
  41e846:	test   DWORD PTR [ecx],0xb2afba24
  41e84c:	lock imul ebx,DWORD PTR [ecx+0x71],0x76
  41e851:	adc    ah,bh
  41e853:	adc    DWORD PTR [ebx-0xb56b6b9],ebx
  41e859:	mov    DWORD PTR [ecx],esi
  41e85b:	pop    ebp
  41e85c:	mov    dl,0xcd
  41e85e:	std    
  41e85f:	out    dx,eax
  41e860:	out    0x3e,al
  41e862:	mov    es,WORD PTR [edx-0x20]
  41e865:	mov    dh,0xcd
  41e867:	jnp    0x41e8e7
  41e869:	aam    0x1d
  41e86b:	push   cs
  41e86c:	in     eax,0x41
  41e86e:	mov    ah,0x96
  41e870:	dec    edi
  41e871:	mov    edi,0x83019ec4
  41e876:	int3   
  41e877:	rcl    BYTE PTR [edx+0x2a],0x58
  41e87b:	push   ecx
  41e87c:	stos   DWORD PTR es:[edi],eax
  41e87d:	pop    ss
  41e87e:	call   0x9cef3501
  41e883:	aaa    
  41e884:	int    0xb1
  41e886:	cmp    ecx,DWORD PTR [esi]
  41e888:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e889:	imul   eax,DWORD PTR [edi-0x639baacf],0xc64b836c
  41e893:	out    dx,al
  41e894:	dec    ebp
  41e895:	mov    edi,0x4c19fce
  41e89a:	xchg   edx,eax
  41e89b:	call   0xec7f:0x4b4a45e7
  41e8a2:	sub    edx,DWORD PTR [eax]
  41e8a4:	fdiv   DWORD PTR [ecx-0x76]
  41e8a7:	inc    esp
  41e8a8:	jmp    0x91d47514
  41e8ad:	retf   
  41e8ae:	imul   edi,DWORD PTR [ebx+edx*2],0x6ce064e0
  41e8b5:	fadd   DWORD PTR [edi-0x5c]
  41e8b8:	fild   DWORD PTR [eax+esi*2-0x1f64b658]
  41e8bf:	pop    edi
  41e8c0:	mov    edx,0xc968b51f
  41e8c5:	or     eax,0x37d9e63e
  41e8ca:	mov    ch,0x33
  41e8cc:	dec    ebx
  41e8cd:	lahf   
  41e8ce:	mov    ds:0x68648ffd,al
  41e8d3:	test   BYTE PTR [esi],cl
  41e8d5:	sbb    DWORD PTR [ebp+0x62],esi
  41e8d8:	lea    edi,[ebx+0x7d05c856]
  41e8de:	push   0x6a
  41e8e0:	outs   dx,BYTE PTR ds:[esi]
  41e8e1:	mov    ebp,0x15abd003
  41e8e6:	aas    
  41e8e7:	fwait
  41e8e8:	cwde   
  41e8e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8ea:	mov    edx,0x14340171
  41e8ef:	addr16 (bad) 
  41e8f1:	fisttp WORD PTR [edi+0x101778b8]
  41e8f7:	push   es
  41e8f8:	inc    ecx
  41e8f9:	mov    ebx,0xe6e4a140
  41e8fe:	push   es
  41e8ff:	lods   eax,DWORD PTR ds:[esi]
  41e900:	es jge 0x41e890
  41e903:	adc    ebp,ecx
  41e905:	in     al,dx
  41e906:	ins    BYTE PTR es:[edi],dx
  41e907:	bound  edi,QWORD PTR [ecx+0x7f91d11a]
  41e90d:	test   BYTE PTR [esi+0x2d],dl
  41e910:	lods   eax,DWORD PTR ds:[esi]
  41e911:	arpl   si,bx
  41e913:	mov    WORD PTR [esp+ebx*1-0x57],es
  41e917:	cmp    cl,ah
  41e919:	mov    ds:0x682e6656,al
  41e91e:	cmp    cl,BYTE PTR [edi-0x4a]
  41e921:	xor    eax,0xf0f8f04a
  41e926:	repz xor eax,0xac041042
  41e92c:	sub    BYTE PTR [esi],ah
  41e92e:	adc    eax,0x27993ead
  41e933:	mov    eax,eax
  41e935:	and    cl,BYTE PTR ds:0x5bf56cc5
  41e93b:	inc    esp
  41e93c:	cmp    al,0x8d
  41e93e:	mov    ch,0x9
  41e940:	add    DWORD PTR [ecx+0x2d],esp
  41e943:	mov    cl,0xcf
  41e945:	mov    cl,0x27
  41e947:	aad    0x9b
  41e949:	xor    al,0xe9
  41e94b:	inc    eax
  41e94c:	aam    0x97
  41e94e:	enter  0x8a92,0x5d
  41e952:	jp     0x41e97c
  41e954:	fild   DWORD PTR [ecx-0x5892dbdd]
  41e95a:	call   0x4f21aed7
  41e95f:	mov    al,ds:0xf0bfc049
  41e964:	mov    edx,0x66e6bb53
  41e969:	call   0x26eb:0x4624a575
  41e970:	daa    
  41e971:	popa   
  41e972:	jns    0x41e915
  41e974:	aam    0xe0
  41e976:	cmp    BYTE PTR [edi+0x7826ea54],ah
  41e97c:	nop
  41e97d:	jecxz  0x41e90e
  41e97f:	mov    dl,0x57
  41e981:	inc    edi
  41e982:	mov    cl,0xf0
  41e984:	mov    cl,0x6b
  41e986:	cmp    al,0x3f
  41e988:	xchg   ecx,eax
  41e989:	xor    eax,0x6ef78a08
  41e98e:	pop    ss
  41e98f:	loopne 0x41e958
  41e991:	jno    0x41ea0c
  41e993:	mov    DWORD PTR [esi],ecx
  41e995:	xlat   BYTE PTR ds:[ebx]
  41e996:	mov    eax,ds:0x70d9ccb4
  41e99b:	pop    esi
  41e99c:	add    eax,DWORD PTR [eax-0x5]
  41e99f:	call   0xb6:0x3c46fb4
  41e9a6:	aaa    
  41e9a7:	aad    0x71
  41e9a9:	lahf   
  41e9aa:	jle    0x41e9fd
  41e9ac:	shr    BYTE PTR [ecx],cl
  41e9ae:	xchg   esp,eax
  41e9af:	stc    
  41e9b0:	jne    0x41ea24
  41e9b2:	test   eax,0xc7b51a4e
  41e9b7:	fistp  QWORD PTR [ecx]
  41e9b9:	sbb    BYTE PTR [ecx+0x55],bh
  41e9bc:	ins    DWORD PTR es:[edi],dx
  41e9bd:	dec    ebx
  41e9be:	call   0x25b4:0x7bc1ed80
  41e9c5:	imul   ebx,DWORD PTR [eax],0x9fa54356
  41e9cb:	ror    DWORD PTR [ebx],0x57
  41e9ce:	xlat   BYTE PTR fs:[ebx]
  41e9d0:	jmp    0xd4f11be4
  41e9d5:	push   ebp
  41e9d6:	xchg   DWORD PTR [ecx],esp
  41e9d8:	imul   edi,DWORD PTR [edi+0x72],0x583e6fba
  41e9df:	jge    0x41ea12
  41e9e1:	scas   al,BYTE PTR es:[edi]
  41e9e2:	adc    eax,0xe74aeaac
  41e9e7:	int3   
  41e9e8:	test   eax,0xf2d6585b
  41e9ed:	stos   BYTE PTR es:[edi],al
  41e9ee:	ja     0x41e986
  41e9f0:	inc    ecx
  41e9f1:	fiadd  DWORD PTR [ecx+0x177c01c9]
  41e9f7:	sub    eax,0x69925080
  41e9fc:	sbb    al,0x22
  41e9fe:	mov    ecx,DWORD PTR [ebx+0x5b]
  41ea01:	adc    eax,DWORD PTR [edi]
  41ea03:	ss sahf 
  41ea05:	push   edx
  41ea06:	jmp    0x41e9d3
  41ea08:	cmp    eax,0x60d63076
  41ea0d:	aam    0xa7
  41ea0f:	fldcw  WORD PTR [esi+0x5e1900d6]
  41ea15:	shl    DWORD PTR [ecx-0x5b],cl
  41ea18:	jo     0x41ea14
  41ea1a:	pop    ebp
  41ea1b:	sahf   
  41ea1c:	jg     0x41ea26
  41ea1e:	(bad)  
  41ea1f:	push   es
  41ea20:	addr16 xchg ecx,eax
  41ea22:	jge    0x41ea73
  41ea24:	imul   esi,DWORD PTR [ecx+ecx*1+0x4c0978c6],0x8
  41ea2c:	out    0x86,al
  41ea2e:	xlat   BYTE PTR ds:[ebx]
  41ea2f:	dec    ecx
  41ea30:	sbb    cl,bh
  41ea32:	loopne 0x41ea3b
  41ea34:	sub    eax,0xeba5fbb9
  41ea39:	sbb    BYTE PTR [edx+0x59],dl
  41ea3c:	mov    eax,ds:0xbdb7771d
  41ea41:	std    
  41ea42:	jl     0x41e9f9
  41ea44:	and    ch,BYTE PTR [eax-0x2a071a53]
  41ea4a:	hlt    
  41ea4b:	add    ebp,eax
  41ea4d:	dec    ebx
  41ea4e:	shl    ebx,1
  41ea50:	stc    
  41ea51:	dec    esi
  41ea52:	sbb    eax,0x97bbd3dc
  41ea57:	mov    ch,0xc4
  41ea59:	pop    ebp
  41ea5a:	or     DWORD PTR [ecx-0x1f],ebx
  41ea5d:	mov    ebp,0x26f75983
  41ea62:	pushf  
  41ea63:	xchg   cl,bl
  41ea65:	int3   
  41ea66:	and    DWORD PTR [eax],ebp
  41ea68:	pop    ss
  41ea69:	out    dx,al
  41ea6a:	inc    ebx
  41ea6b:	dec    esi
  41ea6c:	or     eax,0xdbe56a0f
  41ea71:	dec    edx
  41ea72:	mov    ch,0x58
  41ea74:	(bad)  
  41ea75:	cs sub eax,esp
  41ea78:	push   eax
  41ea79:	xor    eax,0x7c3a6e3a
  41ea7e:	adc    esi,DWORD PTR [edx+0xd8975fc]
  41ea84:	pop    ds
  41ea85:	inc    edi
  41ea86:	mov    ebx,esp
  41ea88:	pop    ebp
  41ea89:	mov    esi,0xf169c3ed
  41ea8e:	(bad)  
  41ea8f:	xchg   esp,eax
  41ea90:	sub    eax,0xcaa5df2c
  41ea95:	push   cs
  41ea96:	adc    eax,0x9deb2f26
  41ea9b:	sub    BYTE PTR [ecx+0x6bd357fa],0xd4
  41eaa2:	adc    eax,0x72209f8
  41eaa7:	fisubr WORD PTR [esi]
  41eaa9:	push   edx
  41eaaa:	inc    edi
  41eaab:	adc    cl,BYTE PTR ds:0x11e1ad12
  41eab1:	out    dx,eax
  41eab2:	ss push esp
  41eab4:	mov    dh,0xfd
  41eab6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eab7:	add    DWORD PTR [esi-0x24],0x7f5f7ce3
  41eabe:	retf   
  41eabf:	pop    ebx
  41eac0:	(bad)  
  41eac1:	jbe    0x41eb30
  41eac3:	add    eax,0xfeccbd20
  41eac8:	xchg   DWORD PTR [esp+eax*8-0x46b5243b],eax
  41eacf:	xchg   DWORD PTR [edi],esi
  41ead1:	adc    cl,dh
  41ead3:	and    al,ch
  41ead5:	shl    edi,0x26
  41ead8:	cs retf 0xd2e4
  41eadc:	mov    ecx,0x967d7855
  41eae1:	faddp  st(0),st
  41eae3:	out    0xbd,al
  41eae5:	xchg   edx,eax
  41eae6:	cmp    ch,bl
  41eae8:	sbb    eax,0xd1030c25
  41eaed:	ror    DWORD PTR [edx+eiz*1],0x74
  41eaf1:	jae    0x41eb48
  41eaf3:	lods   eax,DWORD PTR ds:[esi]
  41eaf4:	ins    BYTE PTR es:[edi],dx
  41eaf5:	xchg   esi,eax
  41eaf6:	xor    al,0xa1
  41eaf8:	popf   
  41eaf9:	(bad)  
  41eafa:	sahf   
  41eafb:	mul    DWORD PTR [ecx]
  41eafd:	mov    ebx,0x38953aef
  41eb02:	mov    gs,WORD PTR [ecx]
  41eb04:	jae    0x41ead7
  41eb06:	jmp    0xa6014c94
  41eb0b:	in     eax,dx
  41eb0c:	cwde   
  41eb0d:	or     eax,0x3d5e0de3
  41eb12:	jg     0x41eaf4
  41eb14:	pop    ecx
  41eb15:	push   cs
  41eb16:	call   0x6659:0x4c89fde0
  41eb1d:	mov    esp,0x3b3b3e20
  41eb22:	mov    bh,0x1e
  41eb24:	push   ebx
  41eb25:	ret    0x984f
  41eb28:	loopne 0x41ead9
  41eb2a:	test   DWORD PTR [esi+0x5d],ebp
  41eb2d:	rcr    DWORD PTR [ebp-0x2d9e79f0],0xef
  41eb34:	clc    
  41eb35:	rol    BYTE PTR [eax-0x24],1
  41eb38:	imul   BYTE PTR [edi]
  41eb3a:	and    edx,ecx
  41eb3c:	jp     0x41eb79
  41eb3e:	lock sbb BYTE PTR [esi+eax*4-0x1c],dh
  41eb43:	mov    cl,BYTE PTR ds:0xd4be9b3b
  41eb49:	or     DWORD PTR [ebp+0x6f77686f],0xffffffa5
  41eb50:	(bad)  
  41eb51:	ss scas al,BYTE PTR es:[edi]
  41eb53:	test   ch,0x4d
  41eb56:	pop    es
  41eb57:	xchg   esp,eax
  41eb58:	mov    edx,0xd958feef
  41eb5d:	or     edx,DWORD PTR [edi-0x564b0cb4]
  41eb63:	jmp    0x41eb44
  41eb65:	and    esi,DWORD PTR ds:0x6c12491e
  41eb6b:	and    ah,BYTE PTR [ebp+ebp*1-0x32886656]
  41eb72:	loope  0x41eb2a
  41eb74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb75:	mov    BYTE PTR [ebp+ebx*8+0x29c32c7],0xd6
  41eb7d:	mov    edx,0xd8b0954f
  41eb82:	or     eax,0x4098490
  41eb87:	out    dx,eax
  41eb88:	inc    esi
  41eb89:	push   0x264c7e94
  41eb8e:	cmp    eax,0xbb4c8a37
  41eb93:	pushf  
  41eb94:	xlat   BYTE PTR ds:[ebx]
  41eb95:	sbb    DWORD PTR [edx+0x71],esi
  41eb98:	dec    eax
  41eb99:	or     ah,cl
  41eb9b:	mov    DWORD PTR [esi],edi
  41eb9d:	rcl    esi,1
  41eb9f:	sub    DWORD PTR [eax-0x40a0c1ae],0x5d97053b
  41eba9:	dec    ebp
  41ebaa:	jnp    0x41ec06
  41ebac:	loope  0x41eb3d
  41ebae:	fild   WORD PTR ds:0x6923ac3
  41ebb5:	(bad)  
  41ebb7:	sub    eax,0x2a76fdc6
  41ebbc:	pop    ebx
  41ebbd:	xchg   ebx,eax
  41ebbe:	xchg   ebx,eax
  41ebbf:	ds in  al,0x30
  41ebc2:	jno    0x41eb5a
  41ebc4:	mov    ebp,0x7b4cdd26
  41ebc9:	cmp    BYTE PTR [ebp-0x43156d4],dl
  41ebcf:	out    0x42,al
  41ebd1:	mov    eax,ds:0x6c99d7ae
  41ebd6:	ds mov ah,dh
  41ebd9:	pop    ss
  41ebda:	mov    ah,0xe1
  41ebdc:	repnz fdiv DWORD PTR [ebp+0x43]
  41ebe0:	mov    BYTE PTR [edx+0x1f6dfd92],cl
  41ebe6:	gs (bad) 
  41ebe8:	rcl    BYTE PTR [edi+0x7d49b873],cl
  41ebee:	cmc    
  41ebef:	call   0xc32e:0x7df16433
  41ebf6:	sbb    dh,BYTE PTR [esi]
  41ebf8:	pop    edi
  41ebf9:	repnz and ebx,DWORD PTR [ecx]
  41ebfc:	pop    ebp
  41ebfd:	sub    DWORD PTR [edx-0x5f],edx
  41ec00:	bound  edx,QWORD PTR [ebp-0x2b127638]
  41ec06:	or     eax,0x1d706d43
  41ec0b:	jae    0x41ec63
  41ec0d:	adc    BYTE PTR [ebp-0x2c],al
  41ec10:	int3   
  41ec11:	nop
  41ec12:	ins    DWORD PTR es:[edi],dx
  41ec13:	call   DWORD PTR [eax+0x6b]
  41ec17:	and    DWORD PTR [eax+eiz*1-0x6f617513],eax
  41ec1e:	std    
  41ec1f:	xchg   BYTE PTR [edi],bl
  41ec21:	xor    eax,0xdf1fee14
  41ec26:	fidivr DWORD PTR [ecx-0x65]
  41ec29:	push   ebp
  41ec2a:	mov    ecx,0x5fceecc
  41ec2f:	jl     0x41ec86
  41ec31:	inc    esi
  41ec32:	add    edx,DWORD PTR [edx+0x7]
  41ec35:	ret    0xae81
  41ec38:	fs retf 0x1844
  41ec3c:	mov    esp,0x7f7f0561
  41ec41:	push   ebx
  41ec42:	repz lea ecx,ds:0x15ac0ae9
  41ec49:	out    0xd0,eax
  41ec4b:	sub    BYTE PTR [esi-0x7ff7f333],dh
  41ec51:	add    BYTE PTR cs:[edi-0x1a332b4f],dh
  41ec58:	enter  0x2141,0x6c
  41ec5c:	(bad)  
  41ec5e:	mov    ebx,0x471775a8
  41ec63:	nop
  41ec64:	jmp    0xff00967d
  41ec69:	adc    DWORD PTR [edi],edx
  41ec6b:	push   edx
  41ec6c:	leave  
  41ec6d:	int3   
  41ec6e:	mov    eax,ds:0xd03e229
  41ec73:	cmp    ebx,ebp
  41ec75:	imul   esi,DWORD PTR ds:0x85e39c52,0x3a76c663
  41ec7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec80:	adc    eax,0xe1eae6e1
  41ec85:	jmp    0x6baa80e3
  41ec8a:	pop    ecx
  41ec8b:	push   esp
  41ec8c:	(bad)  
  41ec8d:	mov    esp,0xe54beeb8
  41ec92:	in     eax,dx
  41ec93:	xchg   DWORD PTR [ebx+0x44],esp
  41ec96:	hlt    
  41ec97:	arpl   sp,bp
  41ec99:	les    esi,FWORD PTR [edi+ebx*4-0x3ce6c504]
  41eca0:	shr    DWORD PTR [esi+edx*1],cl
  41eca3:	sti    
  41eca4:	mov    ch,0x8a
  41eca6:	xor    eax,0x873965aa
  41ecab:	mov    ebp,0xf9ab2abc
  41ecb0:	xchg   ecx,eax
  41ecb1:	mov    cl,0x29
  41ecb3:	loopne 0x41ec76
  41ecb5:	leave  
  41ecb6:	sbb    ebp,DWORD PTR [ebx-0x1f]
  41ecb9:	add    ecx,esp
  41ecbb:	dec    edx
  41ecbc:	jnp    0x41ed06
  41ecbe:	add    DWORD PTR [esi+0x85e996],ebp
  41ecc4:	jmp    FWORD PTR [eax-0x61]
  41ecc7:	dec    ebx
  41ecc8:	je     0x41ecf0
  41ecca:	mov    ?,ebp
  41eccc:	jl     0x41ec6a
  41ecce:	xchg   BYTE PTR [ecx+eiz*4-0x44],bh
  41ecd2:	xchg   ebx,eax
  41ecd3:	in     eax,0x2b
  41ecd5:	loopne 0x41ecff
  41ecd7:	or     esi,DWORD PTR [edi+0x21]
  41ecda:	dec    ecx
  41ecdb:	mov    WORD PTR [ebx],es
  41ecdd:	adc    eax,0x7fada029
  41ece2:	enter  0xac1b,0x53
  41ece6:	add    eax,0xd04c9567
  41eceb:	cmp    eax,0x601f5a14
  41ecf0:	mov    edx,0x6d0f125
  41ecf5:	(bad)  
  41ecf6:	fistp  QWORD PTR gs:[edx-0x1df03e20]
  41ecfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ecfe:	add    BYTE PTR [ebp-0x5e80f4c5],al
  41ed04:	rol    BYTE PTR [ebx+eax*2+0x69e6f70b],0x1d
  41ed0c:	xchg   esi,eax
  41ed0d:	rcr    DWORD PTR [ebp+0x780c8522],1
  41ed13:	ja     0x41ecfb
  41ed15:	ds lahf 
  41ed17:	mov    ds:0x6c99ba3b,al
  41ed1c:	inc    ebx
  41ed1d:	xor    eax,0x16f9f9b
  41ed22:	and    edi,DWORD PTR [ebp+0x756e6d8]
  41ed28:	cwde   
  41ed29:	xlat   BYTE PTR ds:[ebx]
  41ed2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed2b:	cmp    BYTE PTR [edx+0x51f81224],0xe6
  41ed32:	or     BYTE PTR [eax+0x1a],ch
  41ed35:	shl    al,0x24
  41ed38:	fdiv   QWORD PTR [ecx]
  41ed3a:	push   ebp
  41ed3b:	div    BYTE PTR [eax+0x7753d868]
  41ed41:	push   esp
  41ed42:	pop    edx
  41ed43:	push   esp
  41ed44:	push   es
  41ed45:	in     al,dx
  41ed46:	out    dx,eax
  41ed47:	mov    edx,0x9631555e
  41ed4c:	int3   
  41ed4d:	add    dl,BYTE PTR [edi+0x11e1a8f8]
  41ed53:	jb     0x41edb3
  41ed55:	int3   
  41ed56:	test   eax,0x56cf47f7
  41ed5b:	(bad)  
  41ed5c:	fistp  DWORD PTR [ebx]
  41ed5e:	stos   BYTE PTR es:[edi],al
  41ed5f:	sbb    ah,BYTE PTR [ebp+0x4a]
  41ed62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed63:	cdq    
  41ed64:	mov    WORD PTR ds:0x61efa394,ds
  41ed6a:	iret   
  41ed6b:	loop   0x41ed8e
  41ed6d:	xor    DWORD PTR [esi+0x5d6bf55a],esp
  41ed73:	push   cs
  41ed74:	mov    ebp,0x99dce183
  41ed79:	(bad)  
  41ed7b:	inc    ebx
  41ed7c:	test   DWORD PTR [eax-0x6b],esp
  41ed7f:	sub    ah,BYTE PTR [ebx-0x42]
  41ed82:	mov    ebp,0x6b83cefd
  41ed87:	dec    edi
  41ed88:	and    eax,0xdcb54426
  41ed8d:	cmp    BYTE PTR [edi+0x60ebf7fc],0xd7
  41ed94:	push   0x97d940e7
  41ed99:	or     BYTE PTR [ebx+0x22],bl
  41ed9c:	mov    ecx,0x51a17fba
  41eda1:	sub    eax,0x92c347d
  41eda6:	jg     0x41edfd
  41eda8:	cs pop ecx
  41edaa:	adc    eax,0x90c74599
  41edaf:	xor    al,0x8e
  41edb1:	mov    ds:0x31e82dc6,eax
  41edb6:	out    0xb8,al
  41edb8:	es or  eax,0x13cc0166
  41edbe:	xchg   BYTE PTR [edi+0xf0488d7],dh
  41edc4:	out    0x99,al
  41edc6:	(bad)  
  41edc7:	loopne 0x41ee3a
  41edc9:	(bad)  
  41edca:	and    al,0xe5
  41edcc:	mov    al,0xf4
  41edce:	jge    0x41edca
  41edd0:	push   0x64
  41edd2:	adc    edi,edi
  41edd4:	popf   
  41edd5:	(bad)  
  41edd6:	loop   0x41ed98
  41edd8:	sbb    edi,ecx
  41edda:	dec    eax
  41eddb:	loope  0x41ee04
  41eddd:	xchg   esp,eax
  41edde:	ins    DWORD PTR es:[edi],dx
  41eddf:	leave  
  41ede0:	cwde   
  41ede1:	es inc eax
  41ede3:	pop    edx
  41ede4:	ins    DWORD PTR es:[edi],dx
  41ede5:	cmp    ch,BYTE PTR [edx+0x29]
  41ede8:	mov    edi,ebp
  41edea:	(bad)  
  41edec:	jmp    0x41ee5a
  41edee:	test   al,0x9a
  41edf0:	pop    ecx
  41edf1:	mov    esi,0x1873919f
  41edf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41edf7:	dec    esi
  41edf8:	and    al,0x18
  41edfa:	(bad)  
  41edfb:	stos   DWORD PTR es:[edi],eax
  41edfc:	call   0x4984919c
  41ee01:	mov    edx,0xb1a7be34
  41ee06:	push   ebx
  41ee07:	gs out dx,al
  41ee09:	adc    eax,0xe14911ab
  41ee0e:	into   
  41ee0f:	cmp    al,0x3d
  41ee11:	cmp    BYTE PTR [ebp+0x74],bh
  41ee14:	or     al,0xe3
  41ee16:	cmp    bl,BYTE PTR [ebp+ebp*1-0x28dd1a3a]
  41ee1d:	cmp    eax,0x4f557897
  41ee22:	mov    al,ds:0xc1ae568
  41ee27:	das    
  41ee28:	mov    ecx,0x7c781644
  41ee2d:	jns    0x41eea8
  41ee2f:	inc    edx
  41ee30:	mov    ch,0x7d
  41ee32:	gs push ebx
  41ee34:	ds push 0xfffffff0
  41ee37:	push   edi
  41ee38:	icebp  
  41ee39:	call   0x839d42a8
  41ee3e:	adc    eax,ebp
  41ee40:	loop   0x41edd6
  41ee42:	cmc    
  41ee43:	aaa    
  41ee44:	or     bh,BYTE PTR [eax]
  41ee46:	retf   0xa373
  41ee49:	xor    DWORD PTR [edi-0x582e3e74],edi
  41ee4f:	das    
  41ee50:	dec    edi
  41ee51:	push   ecx
  41ee52:	xor    DWORD PTR [esp],ecx
  41ee55:	mov    ecx,0x506da7a2
  41ee5a:	ins    BYTE PTR es:[edi],dx
  41ee5b:	sbb    cl,bh
  41ee5d:	scas   eax,DWORD PTR es:[edi]
  41ee5e:	mov    ecx,0x784dbdf7
  41ee63:	push   es
  41ee64:	es fstp st(5)
  41ee67:	xchg   edx,eax
  41ee68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee69:	mov    ah,0x25
  41ee6b:	push   eax
  41ee6c:	adc    DWORD PTR [ecx],esp
  41ee6e:	cmp    ah,BYTE PTR [ecx+0x3e]
  41ee71:	loopne 0x41eedb
  41ee73:	xchg   DWORD PTR [ecx],esp
  41ee75:	fist   WORD PTR [ecx-0x5582df2a]
  41ee7b:	xchg   edx,eax
  41ee7c:	cmp    ah,bh
  41ee7e:	mov    eax,0x3a78243e
  41ee83:	or     al,0xa6
  41ee85:	cmp    al,0xce
  41ee87:	pop    ss
  41ee88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee89:	call   0xa35f:0x1e436727
  41ee90:	into   
  41ee91:	jle    0x41ee56
  41ee93:	or     al,0xc9
  41ee95:	push   0x56
  41ee97:	shl    DWORD PTR [ecx],1
  41ee99:	icebp  
  41ee9a:	rcr    BYTE PTR [ebp-0x53],1
  41ee9d:	sti    
  41ee9e:	sub    ebx,esi
  41eea0:	neg    ah
  41eea2:	das    
  41eea3:	mov    esi,0x481e2e1b
  41eea8:	sub    esp,DWORD PTR [eax]
  41eeaa:	jbe    0x41eeab
  41eeac:	ret    
  41eead:	lock loope 0x41eef0
  41eeb0:	pop    ebx
  41eeb1:	xor    bh,BYTE PTR [ebp+0x37]
  41eeb4:	cmp    BYTE PTR [edi],cl
  41eeb6:	dec    edx
  41eeb7:	xor    BYTE PTR [esi-0x2a],0x93
  41eebb:	inc    edx
  41eebc:	imul   esi,esi,0x6c3b5146
  41eec2:	sbb    dh,BYTE PTR [edi-0x2c]
  41eec5:	adc    al,0xe
  41eec7:	cmp    ah,dh
  41eec9:	add    esp,DWORD PTR [ecx+eax*8+0x1f1933f0]
  41eed0:	adc    dh,BYTE PTR [esi+ebp*4-0x6c]
  41eed4:	idiv   DWORD PTR [eax-0x78]
  41eed7:	push   cs
  41eed8:	mov    ds:0x3d4ef86c,al
  41eedd:	popf   
  41eede:	dec    ebp
  41eedf:	cmp    al,0xc7
  41eee1:	ja     0x41ef24
  41eee3:	add    DWORD PTR [esi+0x1c2b510c],ecx
  41eee9:	ret    
  41eeea:	test   ah,cl
  41eeec:	int    0xeb
  41eeee:	imul   edi,DWORD PTR [esp+edi*4+0x41b16dc1],0x9d6f588a
  41eef9:	add    bl,bl
  41eefb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eefc:	jno    0x41ee8c
  41eefe:	call   0x583a:0x5199ae1a
  41ef05:	push   0x4e40de5
  41ef0a:	inc    ebx
  41ef0b:	sbb    DWORD PTR [ebx+ebx*4],esp
  41ef0e:	mov    dl,0x76
  41ef10:	pop    ebp
  41ef11:	bound  edx,QWORD PTR ds:0xe5362043
  41ef17:	fs enter 0x705b,0x41
  41ef1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef1d:	sahf   
  41ef1e:	into   
  41ef1f:	xadd   esp,ebp
  41ef22:	push   0xe3089adc
  41ef27:	mov    WORD PTR [eax+0x1c4ef83c],cs
  41ef2d:	mov    WORD PTR [eax+0x20],ss
  41ef30:	cdq    
  41ef31:	pop    ss
  41ef32:	cld    
  41ef33:	into   
  41ef34:	retf   0xeda4
  41ef37:	xchg   ebp,eax
  41ef38:	fiadd  DWORD PTR [eax]
  41ef3a:	iret   
  41ef3b:	fldenv [edi+edi*1-0x2]
  41ef3f:	mov    esi,0xb5b9e612
  41ef44:	int3   
  41ef45:	imul   eax,DWORD PTR [edx+edi*4+0xb],0x307f0c11
  41ef4d:	xor    ebp,ebx
  41ef4f:	addr16 stc 
  41ef51:	fimul  DWORD PTR [ebx]
  41ef53:	bound  eax,QWORD PTR [eax]
  41ef55:	je     0x41efc0
  41ef57:	(bad)  
  41ef58:	int    0x5
  41ef5a:	sub    al,BYTE PTR [esi]
  41ef5c:	xlat   BYTE PTR ds:[ebx]
  41ef5d:	or     DWORD PTR [ebp-0x54],edi
  41ef60:	or     edi,DWORD PTR [edx-0x2004ce0a]
  41ef66:	add    eax,0x28f39f4
  41ef6b:	jge    0x41ef90
  41ef6d:	push   ecx
  41ef6e:	es sub eax,edi
  41ef71:	cld    
  41ef72:	mov    esp,DWORD PTR ds:0x5d080f7c
  41ef78:	and    al,0xc0
  41ef7a:	scas   al,BYTE PTR es:[edi]
  41ef7b:	inc    ecx
  41ef7c:	cmp    BYTE PTR [ebx],0xdc
  41ef7f:	sub    ebp,DWORD PTR [ebx+0x26292e97]
  41ef85:	xchg   ebx,eax
  41ef86:	fsubr  QWORD PTR [edx+0x320a77f2]
  41ef8c:	ds loopne 0x41ef4c
  41ef8f:	mov    ah,0x88
  41ef91:	sub    al,ah
  41ef93:	retf   0xcbb1
  41ef96:	addr16 xor al,0x21
  41ef99:	mov    bh,0xe2
  41ef9b:	popa   
  41ef9c:	ror    al,1
  41ef9e:	xor    BYTE PTR [ebx-0x22e40e66],bl
  41efa4:	and    BYTE PTR [edi],0xfa
  41efa7:	add    BYTE PTR [ebp-0x6a],cl
  41efaa:	rcr    DWORD PTR [edi+esi*4-0x7b],1
  41efae:	cs cmp edx,ecx
  41efb1:	ja     0x41ef79
  41efb3:	test   al,0xd7
  41efb5:	cdq    
  41efb6:	cmp    DWORD PTR [edx-0x1e],ebp
  41efb9:	mov    esi,0x5cd59a69
  41efbe:	add    eax,0xca13605b
  41efc3:	add    al,0x30
  41efc5:	inc    ebp
  41efc6:	inc    esi
  41efc7:	int3   
  41efc8:	fldenv [edi-0x62]
  41efcb:	pop    es
  41efcc:	cld    
  41efcd:	rcr    bh,cl
  41efcf:	fnstenv [edx+0x45]
  41efd2:	xor    ah,BYTE PTR ds:0xcee56b22
  41efd8:	adc    DWORD PTR [edx-0x49ef748a],esp
  41efde:	pushw  0x156a
  41efe2:	dec    ecx
  41efe3:	jbe    0x41f026
  41efe5:	loop   0x41ef80
  41efe7:	leave  
  41efe8:	fnsave [edi+0x161164fd]
  41efee:	jle    0x41f052
  41eff0:	hlt    
  41eff1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eff2:	xchg   DWORD PTR [edx-0x5acd9e70],esp
  41eff8:	sbb    eax,0xd414ca00
  41effd:	sub    ah,dh
  41efff:	outs   dx,DWORD PTR ds:[esi]
  41f000:	or     esp,0x18d31f21
  41f006:	dec    eax
  41f007:	pop    es
  41f008:	std    
  41f009:	xchg   DWORD PTR [esi],ebx
  41f00b:	jb     0xb061b73e
  41f011:	jp     0x41f006
  41f013:	cmp    BYTE PTR [edi+0x0],dh
  41f016:	int3   
  41f017:	mov    ds:0xa1ff112,eax
  41f01c:	test   al,0x79
  41f01e:	dec    edi
  41f01f:	test   al,ah
  41f021:	lds    ecx,FWORD PTR [edx+0x71]
  41f024:	fiadd  WORD PTR [edx+0x27]
  41f027:	sbb    edi,DWORD PTR [eax]
  41f029:	sbb    cl,BYTE PTR [ebx+0x24]
  41f02c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f02d:	ret    0xf950
  41f030:	hlt    
  41f031:	jecxz  0x41f027
  41f033:	mov    esi,DWORD PTR [ecx+ecx*2]
  41f036:	dec    esi
  41f037:	call   0xdeb6b273
  41f03c:	fs ss add dl,ah
  41f040:	arpl   sp,di
  41f042:	xchg   ebx,eax
  41f043:	jmp    0x1b99:0xc2e990d6
  41f04a:	mov    bl,0xf3
  41f04c:	adc    al,0x20
  41f04e:	mov    bh,0x24
  41f050:	mov    ecx,0xecfbf7cf
  41f055:	bound  esi,QWORD PTR [eax]
  41f057:	sub    DWORD PTR [edi],edx
  41f059:	dec    ebp
  41f05a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f05b:	lods   eax,DWORD PTR ds:[esi]
  41f05c:	jmp    0x41f0aa
  41f05e:	adc    al,BYTE PTR [ebx+0x16]
  41f061:	std    
  41f062:	int    0xd0
  41f064:	mov    bh,0x6a
  41f066:	in     al,0x47
  41f068:	scas   eax,DWORD PTR es:[edi]
  41f069:	outs   dx,BYTE PTR ds:[esi]
  41f06a:	inc    esp
  41f06b:	push   edi
  41f06c:	push   ecx
  41f06d:	fchs   
  41f06f:	mov    ds:0x3ab667ce,al
  41f074:	push   ebx
  41f075:	stos   BYTE PTR es:[edi],al
  41f076:	xor    ch,bh
  41f078:	leave  
  41f079:	aaa    
  41f07a:	jmp    0x41f055
  41f07c:	test   DWORD PTR [ebp-0x1e],ebp
  41f07f:	mov    al,0x2a
  41f081:	push   cs
  41f082:	sub    dh,ch
  41f084:	push   0xd3219093
  41f089:	ja     0x41f0f1
  41f08b:	jg     0x41f014
  41f08d:	dec    ebx
  41f08e:	adc    esi,DWORD PTR [eax-0x2e]
  41f091:	adc    eax,0x574184d2
  41f096:	add    BYTE PTR [ebx+0x6a4de15e],bl
  41f09c:	sahf   
  41f09d:	mov    bh,0xf4
  41f09f:	ror    BYTE PTR [edx+eax*8+0x7d4a8d66],1
  41f0a6:	dec    esp
  41f0a7:	mov    BYTE PTR [esi-0x3c],dh
  41f0aa:	js     0x41f043
  41f0ac:	sbb    BYTE PTR [ebx-0x7ea2d8a2],al
  41f0b2:	(bad)  
  41f0b3:	fst    QWORD PTR [edx+0x6815d1ba]
  41f0b9:	popf   
  41f0ba:	sbb    esp,ebp
  41f0bc:	jecxz  0x41f08b
  41f0be:	jecxz  0x41f08d
  41f0c0:	adc    ecx,edi
  41f0c2:	(bad)  
  41f0c3:	mov    ebx,0xad96da39
  41f0c8:	cwde   
  41f0c9:	(bad)  
  41f0ca:	(bad)  
  41f0cb:	jns    0x41f14b
  41f0cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0ce:	(bad)  
  41f0cf:	or     esi,edi
  41f0d1:	jno    0x41f08d
  41f0d3:	fnsave [ebp+0x5b204d46]
  41f0d9:	mov    bl,BYTE PTR [ecx-0x60]
  41f0dc:	adc    cl,BYTE PTR [eax+edi*1-0x9]
  41f0e0:	fs leave 
  41f0e2:	jbe    0x41f0ae
  41f0e4:	push   eax
  41f0e5:	push   es
  41f0e6:	cmc    
  41f0e7:	shr    BYTE PTR [ebp-0x9],1
  41f0ea:	lock sub eax,0x684ae595
  41f0f0:	xchg   ebx,eax
  41f0f1:	aas    
  41f0f2:	cmp    edx,edx
  41f0f4:	push   ss
  41f0f5:	bound  eax,QWORD PTR [ebx-0x6b]
  41f0f8:	in     al,dx
  41f0f9:	in     eax,dx
  41f0fa:	cmp    al,0xd5
  41f0fc:	pop    DWORD PTR [ebx+0x6ce3e14d]
  41f102:	xchg   esi,eax
  41f103:	std    
  41f104:	adc    dh,BYTE PTR ds:0xf05bc283
  41f10a:	sahf   
  41f10b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f10c:	jecxz  0x41f148
  41f10e:	clc    
  41f10f:	jmp    0x41f13a
  41f111:	jne    0x41f0f3
  41f113:	push   0x2e
  41f115:	inc    edx
  41f116:	mov    ah,0xbf
  41f118:	adc    eax,ecx
  41f11a:	dec    ecx
  41f11b:	push   edx
  41f11c:	ins    BYTE PTR es:[edi],dx
  41f11d:	sbb    esp,DWORD PTR [esi+0x18]
  41f120:	mul    BYTE PTR [edx-0x11]
  41f123:	jecxz  0x41f101
  41f125:	ds sub al,0x1c
  41f128:	fdivr  st(0),st
  41f12a:	mov    ebp,0x6662ce02
  41f12f:	add    al,0xe4
  41f131:	push   es
  41f132:	jmp    0x41f0b7
  41f134:	add    bh,BYTE PTR [esi+eiz*8+0x35370353]
  41f13b:	lods   al,BYTE PTR ds:[esi]
  41f13c:	jno    0x41f19c
  41f13e:	mov    dh,0x1
  41f140:	push   cs
  41f141:	(bad)  
  41f142:	lock jg 0x41f19b
  41f145:	fidivr DWORD PTR ds:0xce227492
  41f14b:	mov    ecx,DWORD PTR [esi-0x1cea56f2]
  41f151:	je     0x41f1ce
  41f153:	test   al,0x73
  41f155:	sub    ah,BYTE PTR [ebx-0x2f64d75d]
  41f15b:	mov    ebp,DWORD PTR [esi-0x5e]
  41f15e:	add    DWORD PTR [ebx],ecx
  41f160:	ins    WORD PTR es:[edi],dx
  41f162:	dec    edi
  41f163:	in     eax,0x21
  41f165:	out    dx,al
  41f166:	loopne 0x41f100
  41f168:	pop    esi
  41f169:	dec    edx
  41f16a:	jnp    0x41f1a6
  41f16c:	push   ebx
  41f16d:	and    DWORD PTR [edi+ebp*1],edi
  41f170:	or     eax,0xe04e092a
  41f175:	in     eax,0x7a
  41f177:	mov    cl,0xc3
  41f179:	mov    BYTE PTR [eax],bh
  41f17b:	add    bh,BYTE PTR [ebp+0xb49b17e]
  41f181:	jmp    0x6022:0x450bb10a
  41f188:	es push 0xd99d0a9d
  41f18e:	jle    0x41f186
  41f190:	jae    0x41f118
  41f192:	dec    ebp
  41f193:	(bad)  
  41f194:	lock xor DWORD PTR [ebp+0x5c],0x15
  41f199:	dec    eax
  41f19a:	mov    esp,0xfdb9ce19
  41f19f:	mov    ds:0xb3ae20c4,eax
  41f1a4:	push   ebp
  41f1a5:	push   0x37
  41f1a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1a8:	adc    bh,BYTE PTR [edx+0x3a]
  41f1ab:	push   0x42
  41f1ad:	xor    BYTE PTR [edi],al
  41f1af:	loop   0x41f170
  41f1b1:	inc    eax
  41f1b2:	sub    DWORD PTR [ebx-0x73],eax
  41f1b5:	ja     0x41f15a
  41f1b7:	mov    bh,0x4f
  41f1b9:	sbb    eax,0xd1d0173b
  41f1be:	and    DWORD PTR [ebp+esi*1+0x1d5bf3f2],ecx
  41f1c5:	outs   dx,BYTE PTR ds:[esi]
  41f1c6:	xchg   esi,eax
  41f1c7:	inc    ebp
  41f1c8:	outs   dx,BYTE PTR ds:[esi]
  41f1c9:	aam    0xa5
  41f1cb:	sub    ebx,esp
  41f1cd:	sbb    al,0x62
  41f1cf:	sbb    DWORD PTR gs:[ebx+ebp*2-0x56690bb9],0xa
  41f1d8:	out    0xd3,al
  41f1da:	xor    BYTE PTR [edx],0xff
  41f1dd:	jp     0x41f1ea
  41f1df:	push   0x75904558
  41f1e4:	push   ds
  41f1e5:	mov    bl,0x1b
  41f1e7:	add    al,0x3e
  41f1e9:	cmp    ebx,DWORD PTR [edx]
  41f1eb:	jge    0x41f16e
  41f1ed:	bound  edx,QWORD PTR [ebx]
  41f1ef:	jne    0x41f1be
  41f1f1:	cmp    eax,0xa0d81015
  41f1f6:	sub    DWORD PTR [edx],esi
  41f1f8:	xor    BYTE PTR [ebx],bh
  41f1fa:	cmp    DWORD PTR [edi+0x7d],ebp
  41f1fd:	or     DWORD PTR [esi],esp
  41f1ff:	ja     0x41f213
  41f201:	inc    ecx
  41f202:	mov    ch,0x23
  41f204:	popf   
  41f205:	and    al,0xf9
  41f207:	adc    DWORD PTR [eax+0x23e8062],0xffffffd5
  41f20e:	xor    al,0x75
  41f210:	ss gs sti 
  41f213:	jmp    DWORD PTR [edi-0x1e]
  41f216:	fisub  WORD PTR [eax]
  41f218:	imul   edx,DWORD PTR [edx],0x845dfb4d
  41f21e:	cmc    
  41f21f:	adc    al,0x52
  41f221:	jge    0x41f222
  41f223:	test   eax,0xb03b51a6
  41f228:	lock ins BYTE PTR es:[edi],dx
  41f22a:	retf   0xb3b
  41f22d:	iret   
  41f22e:	sub    eax,0xbdd7dfdc
  41f233:	or     DWORD PTR [edi-0x61],0x32ed70c3
  41f23a:	aad    0xad
  41f23c:	inc    ebx
  41f23d:	in     eax,dx
  41f23e:	out    0xd6,eax
  41f240:	out    dx,al
  41f241:	in     al,0x73
  41f243:	(bad)  
  41f244:	shl    BYTE PTR [ecx],cl
  41f246:	retf   0xf5ef
  41f249:	mov    al,ds:0x92b46d2c
  41f24e:	fstp   DWORD PTR [ebx+ebx*2]
  41f251:	iret   
  41f252:	mov    al,ds:0x4f90aedb
  41f257:	inc    eax
  41f258:	jecxz  0x41f236
  41f25a:	cmc    
  41f25b:	int3   
  41f25c:	imul   esi,DWORD PTR [edi+edi*2],0xd26fdffb
  41f263:	jl     0x41f1fa
  41f265:	pop    esi
  41f266:	mov    cl,0x23
  41f268:	cwde   
  41f269:	xchg   ebp,eax
  41f26a:	pop    ecx
  41f26b:	scas   eax,DWORD PTR es:[edi]
  41f26c:	cmp    dh,BYTE PTR [edi-0x643f0e43]
  41f272:	mov    gs,WORD PTR [esi+0x3]
  41f275:	xchg   ebp,eax
  41f276:	fnstcw WORD PTR [edx+0x12eda961]
  41f27c:	inc    esi
  41f27d:	fdivr  st(3),st
  41f27f:	sti    
  41f280:	mov    esi,0xc3f10d9f
  41f285:	aad    0x43
  41f287:	hlt    
  41f288:	jge    0x41f2d4
  41f28a:	adc    ecx,eax
  41f28c:	mov    ecx,0xef72d382
  41f291:	pop    ecx
  41f292:	mov    ?,WORD PTR [ecx+ecx*1+0x4ab1e1f1]
  41f299:	test   DWORD PTR [ebx-0x2c64638b],edx
  41f29f:	out    0x3f,eax
  41f2a1:	sbb    BYTE PTR [ecx+0x60],cl
  41f2a4:	add    bh,0x2d
  41f2a7:	cli    
  41f2a8:	lahf   
  41f2a9:	test   eax,0x54151a8c
  41f2ae:	push   0x793ba058
  41f2b3:	adc    eax,0x527c46d1
  41f2b8:	pop    edx
  41f2b9:	pop    ss
  41f2ba:	js     0x41f305
  41f2bc:	adc    al,0xa6
  41f2bf:	jl     0x41f286
  41f2c1:	fist   WORD PTR [ecx-0x5c]
  41f2c4:	sbb    DWORD PTR [edi-0x25b045cf],esp
  41f2ca:	adc    BYTE PTR [esi-0x59840db0],dl
  41f2d0:	jecxz  0x41f282
  41f2d2:	mov    dh,0x3d
  41f2d4:	pushf  
  41f2d5:	dec    edi
  41f2d6:	adc    cl,bl
  41f2d8:	pusha  
  41f2d9:	jge    0x41f29e
  41f2db:	sbb    eax,DWORD PTR [edx-0x24]
  41f2de:	rcr    BYTE PTR [ecx-0x2fff1de0],1
  41f2e4:	jne    0x41f2ba
  41f2e6:	pop    ds
  41f2e7:	mov    fs,WORD PTR [edx+0x1e27f0a5]
  41f2ed:	lahf   
  41f2ee:	or     BYTE PTR [ebp-0x53],ch
  41f2f1:	sbb    eax,ecx
  41f2f3:	sar    dh,cl
  41f2f5:	sbb    al,0xf2
  41f2f7:	jne    0x41f2a3
  41f2f9:	xchg   ebx,eax
  41f2fa:	push   esi
  41f2fb:	push   cs
  41f2fc:	jnp    0x41f347
  41f2fe:	push   ss
  41f2ff:	cmp    al,0x39
  41f301:	add    eax,ebp
  41f303:	imul   edi,DWORD PTR [ebp-0x2a07a6ab],0x6be803ba
  41f30d:	rol    esi,1
  41f30f:	(bad)  
  41f310:	test   eax,0xdc5ff052
  41f315:	test   BYTE PTR [eax],ch
  41f317:	jecxz  0x41f2a6
  41f319:	add    al,0x4f
  41f31b:	xor    eax,0x637471d5
  41f320:	cdq    
  41f321:	into   
  41f322:	mov    al,ds:0x694f1839
  41f327:	adc    BYTE PTR [esi],ch
  41f329:	mov    al,0xf1
  41f32b:	xchg   DWORD PTR ds:0x56d1cf,edi
  41f332:	dec    esi
  41f334:	in     al,dx
  41f335:	mov    ecx,0xf3e0faeb
  41f33a:	mov    ebx,0xdb36471e
  41f33f:	xchg   ch,al
  41f341:	adc    BYTE PTR [eax],bl
  41f343:	scas   eax,DWORD PTR es:[edi]
  41f344:	(bad)  
  41f345:	loopne 0x41f2cb
  41f347:	mov    bh,0xca
  41f349:	pop    esp
  41f34a:	stc    
  41f34b:	pop    esp
  41f34c:	mov    ch,0x30
  41f34e:	add    ah,BYTE PTR [esi-0x22]
  41f351:	ins    BYTE PTR es:[edi],dx
  41f352:	loope  0x41f314
  41f354:	jge    0x41f380
  41f356:	cmp    DWORD PTR [eax],edi
  41f358:	(bad)  
  41f35a:	leave  
  41f35b:	mov    ebp,0xb4fd30cf
  41f360:	lods   eax,DWORD PTR ds:[esi]
  41f361:	retf   
  41f362:	adc    BYTE PTR [edi-0x55],cl
  41f365:	mov    eax,0x57faeb79
  41f36a:	add    cl,bh
  41f36c:	add    cl,ch
  41f36e:	dec    esi
  41f36f:	leave  
  41f370:	lock xchg esp,eax
  41f372:	inc    esp
  41f373:	aas    
  41f374:	pusha  
  41f375:	inc    ebx
  41f376:	fwait
  41f377:	add    dl,al
  41f379:	out    dx,al
  41f37a:	pop    edi
  41f37b:	in     al,dx
  41f37c:	(bad)  
  41f37d:	push   esp
  41f37e:	stos   BYTE PTR es:[edi],al
  41f37f:	ss dec esi
  41f381:	out    dx,al
  41f382:	out    0x75,eax
  41f384:	rcl    DWORD PTR [eax-0x16],1
  41f387:	mov    dh,0x1d
  41f389:	std    
  41f38a:	sbb    DWORD PTR [edx-0x11fd7623],0xa829863e
  41f394:	bound  esp,QWORD PTR [eax+0x2f1dd75b]
  41f39a:	lods   eax,DWORD PTR ds:[esi]
  41f39b:	jle    0x41f402
  41f39d:	add    bh,ah
  41f39f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3a0:	push   cs
  41f3a1:	(bad)  
  41f3a2:	add    al,0xc0
  41f3a4:	jge    0x41f377
  41f3a6:	dec    ebp
  41f3a7:	push   edx
  41f3a8:	mov    bh,0x56
  41f3aa:	int    0xca
  41f3ac:	adc    bl,BYTE PTR [eax]
  41f3ae:	inc    ebx
  41f3af:	mov    edx,0x8ffacf9c
  41f3b4:	xchg   ebp,eax
  41f3b5:	data16 fstp QWORD PTR [ebp-0x702932e]
  41f3bc:	or     al,0x45
  41f3be:	sbb    BYTE PTR [ebx-0x5e2789a8],dl
  41f3c4:	std    
  41f3c5:	and    al,0xaf
  41f3c7:	sbb    eax,0x3ea4305e
  41f3cc:	int3   
  41f3cd:	adc    DWORD PTR [eax-0x2e],ebx
  41f3d0:	leave  
  41f3d1:	je     0x41f3a4
  41f3d3:	(bad)  
  41f3d4:	and    edx,esp
  41f3d6:	mov    eax,ds:0x10e42b7
  41f3db:	add    BYTE PTR [ebx],ch
  41f3dd:	fimul  WORD PTR [edx-0xf6f2064]
  41f3e3:	push   esp
  41f3e4:	pop    esp
  41f3e5:	mov    ds:0x27d99bac,al
  41f3ea:	xor    dl,bh
  41f3ec:	fild   QWORD PTR [esi+eiz*2-0x1c]
  41f3f0:	mov    bh,0x79
  41f3f2:	jns    0x41f41c
  41f3f4:	mov    DWORD PTR [ecx-0x16],ebx
  41f3f7:	cmp    BYTE PTR [ebx+0x38c05da4],dh
  41f3fd:	(bad)  
  41f3fe:	in     eax,dx
  41f3ff:	jge    0x41f437
  41f401:	mov    ebx,0xa0f0be0f
  41f406:	daa    
  41f407:	loopne 0x41f432
  41f409:	ficomp DWORD PTR [ebx+0x12]
  41f40c:	out    dx,al
  41f40d:	jecxz  0x41f446
  41f40f:	xchg   ecx,eax
  41f410:	lods   eax,DWORD PTR ds:[esi]
  41f411:	mov    ebp,0x55f43c88
  41f416:	pop    esi
  41f417:	mov    eax,ds:0x3600c38b
  41f41c:	sub    bh,BYTE PTR ds:0xe9e379a
  41f422:	popa   
  41f423:	mov    esi,0x3a45f0f6
  41f428:	mov    al,ds:0xc19f5a41
  41f42d:	pop    ebp
  41f42e:	aad    0x48
  41f430:	jb     0x41f3eb
  41f432:	outs   dx,DWORD PTR ds:[esi]
  41f433:	add    al,0x44
  41f435:	outs   dx,DWORD PTR ds:[esi]
  41f436:	imul   ah
  41f438:	sub    DWORD PTR [edi-0x278c16d],edi
  41f43e:	jmp    0x322b:0xab360dcb
  41f445:	(bad)  
  41f446:	or     eax,0xe48bf94d
  41f44b:	jo     0x41f416
  41f44d:	add    al,0xbf
  41f44f:	push   esp
  41f450:	pop    esp
  41f451:	adc    eax,0xd5a256bd
  41f456:	mov    esp,0x463d8119
  41f45b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f45c:	shl    DWORD PTR [esi+esi*2+0xd5ff22],1
  41f463:	cwde   
  41f464:	sub    DWORD PTR [esi+0x77],edx
  41f467:	or     DWORD PTR [ebx],ebx
  41f469:	adc    BYTE PTR [edi],dh
  41f46b:	scas   al,BYTE PTR es:[edi]
  41f46c:	repnz pop ds
  41f46e:	add    BYTE PTR [edx],ah
  41f470:	mov    edx,0xd93782d9
  41f475:	sar    BYTE PTR [edi],0xda
  41f478:	and    eax,edi
  41f47a:	pop    edi
  41f47b:	add    BYTE PTR [edi+edi*1-0x770ae6c4],bh
  41f482:	and    edi,ecx
  41f484:	mul    BYTE PTR [esi+0x8e88ad5]
  41f48a:	fcmovnbe st,st(2)
  41f48c:	ins    BYTE PTR es:[edi],dx
  41f48d:	cs loopne 0x41f46f
  41f490:	(bad)  
  41f491:	out    dx,al
  41f492:	sub    eax,DWORD PTR [esi-0x2e4c5b53]
  41f498:	xor    al,0x8
  41f49a:	out    0xed,al
  41f49c:	push   ebx
  41f49d:	leave  
  41f49e:	mov    DWORD PTR [eax],eax
  41f4a0:	loope  0x41f46a
  41f4a2:	or     DWORD PTR [ecx+0x39],edx
  41f4a5:	adc    eax,0xddfc3e8
  41f4aa:	fdivr  DWORD PTR [edx-0x32a175fd]
  41f4b0:	add    eax,0xa313b0bf
  41f4b5:	aaa    
  41f4b6:	js     0x41f4d8
  41f4b8:	in     eax,dx
  41f4b9:	stos   BYTE PTR es:[edi],al
  41f4ba:	adc    eax,0x9dea7041
  41f4bf:	push   edx
  41f4c0:	fild   QWORD PTR [edx]
  41f4c2:	add    BYTE PTR [eax+0x6c],dl
  41f4c5:	cdq    
  41f4c6:	(bad)  
  41f4c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4c8:	inc    ecx
  41f4c9:	adc    al,0xc8
  41f4cb:	rcl    DWORD PTR [ebp-0x7],1
  41f4ce:	push   ds
  41f4cf:	mov    esp,0xe82e417f
  41f4d4:	xchg   ebx,eax
  41f4d5:	push   edx
  41f4d6:	mov    esp,0x7bdf2e52
  41f4db:	sar    BYTE PTR [eax],0x9d
  41f4de:	jmp    0x1ac5:0xa319c3f2
  41f4e5:	ja     0x41f48b
  41f4e7:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f4e9:	xchg   edi,eax
  41f4ea:	xor    ebx,esp
  41f4ec:	js     0x41f498
  41f4ee:	stos   DWORD PTR es:[edi],eax
  41f4ef:	sar    BYTE PTR [ecx],cl
  41f4f1:	and    BYTE PTR cs:[eax+0x33bbff0],dl
  41f4f8:	pop    edi
  41f4f9:	push   edx
  41f4fa:	jo     0x41f55d
  41f4fc:	xchg   BYTE PTR [ebp-0x5f695dae],bh
  41f502:	add    BYTE PTR ds:0x49dcc84f,0x73
  41f509:	pop    esi
  41f50a:	mov    bl,0x28
  41f50c:	call   0xc6990e74
  41f511:	xor    ch,BYTE PTR [esi-0x771fdaa9]
  41f517:	push   ebp
  41f518:	mov    BYTE PTR [eax+ebp*1-0x22],bh
  41f51c:	syscall 
  41f51e:	xor    cl,BYTE PTR [ecx-0x71]
  41f521:	sbb    BYTE PTR [ebx-0x6f38ecdd],cl
  41f527:	jo     0x41f57e
  41f529:	mov    ds:0x39ed34f3,eax
  41f52e:	stc    
  41f52f:	dec    ebp
  41f530:	(bad)  
  41f531:	jge    0x41f524
  41f533:	sub    DWORD PTR [edx],edi
  41f535:	sub    eax,0xd68bd3ac
  41f53a:	or     al,0x12
  41f53c:	dec    edi
  41f53d:	adc    esi,ebp
  41f53f:	retf   
  41f540:	stos   DWORD PTR es:[edi],eax
  41f541:	sar    bl,0x71
  41f544:	xlat   BYTE PTR ds:[ebx]
  41f545:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f546:	cmp    ah,BYTE PTR [eax+0x5a]
  41f549:	inc    ebp
  41f54a:	fwait
  41f54b:	daa    
  41f54c:	sbb    esp,DWORD PTR [esi+0x56]
  41f54f:	in     eax,dx
  41f550:	add    al,0x57
  41f552:	xor    esp,DWORD PTR [eax+0x407e184d]
  41f558:	cmp    BYTE PTR [eax+0x10afe194],0x19
  41f55f:	xchg   edx,eax
  41f560:	imul   eax,DWORD PTR [ecx-0x53],0x4f
  41f564:	das    
  41f565:	imul   esi,DWORD PTR [ebp+0x39af9037],0xceef378
  41f56f:	out    dx,al
  41f570:	sbb    eax,0x766cd63c
  41f575:	test   eax,0x36eb6463
  41f57a:	sar    DWORD PTR [esi+0x3f9c3314],0xe0
  41f581:	pushf  
  41f582:	adc    al,0x55
  41f584:	imul   DWORD PTR [ebx-0x558bcde4]
  41f58a:	scas   eax,DWORD PTR es:[edi]
  41f58b:	add    eax,eax
  41f58d:	pop    ebx
  41f58e:	mov    dl,al
  41f590:	mov    DWORD PTR [ecx],ecx
  41f592:	outs   dx,BYTE PTR ds:[esi]
  41f593:	cmp    DWORD PTR [edi-0x3032b2a6],ebx
  41f599:	mov    ?,WORD PTR gs:[edx]
  41f59c:	les    ecx,FWORD PTR [edi+0x6eeb6124]
  41f5a2:	mov    ebp,0xcd00c586
  41f5a7:	cmovns ecx,DWORD PTR ds:0x4c225b3b
  41f5ae:	arpl   WORD PTR [edi+0x41],bx
  41f5b1:	repz and BYTE PTR [esi+0x14],ch
  41f5b5:	adc    al,bh
  41f5b7:	sbb    edi,DWORD PTR [edi+eiz*2-0x71]
  41f5bb:	xor    eax,0x8f814d36
  41f5c0:	pusha  
  41f5c1:	mov    eax,ds:0xc0f6f760
  41f5c6:	into   
  41f5c7:	es pop eax
  41f5c9:	mov    WORD PTR [eax],es
  41f5cb:	aaa    
  41f5cc:	or     eax,0xb2236bd9
  41f5d1:	adc    ch,ah
  41f5d3:	xor    bl,BYTE PTR [edi*1-0x61a3fca6]
  41f5da:	cmp    bl,0xa3
  41f5dd:	mov    WORD PTR ds:0x8c27befc,es
  41f5e3:	dec    edx
  41f5e4:	mov    al,0x70
  41f5e6:	mov    edi,0x1ad38b38
  41f5eb:	add    ah,BYTE PTR [esi-0x61]
  41f5ee:	gs push 0x6c67f82c
  41f5f4:	stos   DWORD PTR es:[edi],eax
  41f5f5:	sbb    dh,dh
  41f5f7:	or     al,0x17
  41f5f9:	outs   dx,DWORD PTR ds:[esi]
  41f5fa:	sub    eax,DWORD PTR [edx+0x4edb8233]
  41f600:	mov    dl,0xe0
  41f602:	sbb    esp,DWORD PTR [edi-0x203ad12a]
  41f608:	push   ss
  41f609:	scas   eax,DWORD PTR es:[edi]
  41f60a:	adc    DWORD PTR [edx+0x39],edx
  41f60d:	js     0x41f622
  41f60f:	(bad)  
  41f610:	sub    DWORD PTR [esi-0x3aec942b],ebp
  41f616:	mov    ah,0xa
  41f618:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f619:	cld    
  41f61a:	popa   
  41f61b:	xchg   edx,eax
  41f61c:	jecxz  0x41f649
  41f61e:	cmp    BYTE PTR [ecx+0x51466f67],bh
  41f624:	loop   0x41f5e7
  41f626:	and    al,BYTE PTR [esi-0x178580e7]
  41f62c:	adc    dh,cl
  41f62e:	stc    
  41f62f:	(bad)  
  41f630:	daa    
  41f631:	ds popa 
  41f633:	xchg   ecx,eax
  41f634:	test   DWORD PTR [ebx*1-0x12b0db4a],0xd19e7b65
  41f63f:	arpl   dx,di
  41f641:	xor    BYTE PTR [edi+0x1ee930bb],bh
  41f647:	xor    ch,0xa0
  41f64a:	xchg   edx,eax
  41f64b:	sar    DWORD PTR [edx+0x42],0xdf
  41f64f:	cmc    
  41f650:	xchg   ebp,eax
  41f651:	(bad)  
  41f652:	fucomip st,st(4)
  41f654:	mov    eax,ds:0x9c416c5b
  41f659:	fidivr DWORD PTR [ecx+0x72]
  41f65c:	adc    esp,edi
  41f65e:	fs nop
  41f660:	push   ebx
  41f661:	jge    0x41f674
  41f663:	sub    bh,BYTE PTR [edx-0x3b]
  41f666:	mov    ds:0xd4560fd1,eax
  41f66b:	les    edx,FWORD PTR [esi-0x5b]
  41f66e:	dec    esp
  41f66f:	je     0x41f6e4
  41f671:	mov    ds:0x4c34a34e,eax
  41f676:	fiadd  WORD PTR [edi]
  41f678:	dec    ecx
  41f679:	pop    ss
  41f67a:	or     DWORD PTR [edi],esp
  41f67c:	daa    
  41f67d:	retf   
  41f67e:	pop    ebx
  41f67f:	pop    edx
  41f680:	jne    0x41f6fc
  41f682:	cmp    esp,0xd4e88ec4
  41f688:	je     0x41f681
  41f68a:	xor    ebp,DWORD PTR [edx-0x73]
  41f68d:	inc    edx
  41f68e:	mov    bl,0x54
  41f690:	aas    
  41f691:	or     al,bl
  41f693:	arpl   WORD PTR [edx+0x8abbbed],cx
  41f699:	sub    DWORD PTR [edx+0x1392394c],0x8ae2f36b
  41f6a3:	xchg   ecx,eax
  41f6a4:	cmp    dh,BYTE PTR [esi+eiz*2+0x67abde5a]
  41f6ab:	test   DWORD PTR [ebx+ecx*1-0x4db2979],0x5ecb5007
  41f6b6:	pop    esi
  41f6b7:	cmc    
  41f6b8:	add    bh,BYTE PTR [esi+0x44]
  41f6bb:	add    al,0xcf
  41f6bd:	sahf   
  41f6be:	jl     0x41f6c7
  41f6c0:	(bad)  
  41f6c1:	mov    esi,0x6b9c1fba
  41f6c6:	mov    edx,0x9a0f475a
  41f6cb:	pusha  
  41f6cc:	mov    edi,DWORD PTR [esi+ecx*4]
  41f6cf:	push   cs
  41f6d0:	cmp    al,0xaf
  41f6d2:	and    DWORD PTR [edi+ebx*1],esi
  41f6d5:	pusha  
  41f6d6:	sar    DWORD PTR [edi+0x1d],0x7f
  41f6da:	push   ebx
  41f6db:	int    0x3e
  41f6dd:	and    BYTE PTR [ebx],0x77
  41f6e0:	and    DWORD PTR [esi+edi*1],ebp
  41f6e3:	iret   
  41f6e4:	push   eax
  41f6e5:	stos   DWORD PTR es:[edi],eax
  41f6e6:	retf   
  41f6e7:	aad    0x71
  41f6e9:	or     al,0x39
  41f6eb:	fsub   DWORD PTR [edi-0x6a]
  41f6ee:	jnp    0x41f68d
  41f6f0:	pop    ds
  41f6f1:	out    dx,al
  41f6f2:	and    BYTE PTR [edi-0x35e69b8],0x82
  41f6f9:	inc    eax
  41f6fa:	iret   
  41f6fb:	out    0x52,eax
  41f6fd:	mov    ebx,0x52c7f64c
  41f702:	xor    BYTE PTR [ebx],ah
  41f704:	jg     0x41f692
  41f706:	xchg   esi,eax
  41f707:	lds    edi,FWORD PTR [ebp+0x34]
  41f70a:	cdq    
  41f70b:	sbb    al,BYTE PTR [eax+0x59d0d352]
  41f711:	adc    BYTE PTR [edx+0x69781e01],bl
  41f717:	cs jp  0x41f77f
  41f71a:	cdq    
  41f71b:	ret    0x5102
  41f71e:	daa    
  41f71f:	mov    edx,DWORD PTR ss:[eax+eax*1]
  41f723:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f724:	outs   dx,BYTE PTR ds:[esi]
  41f726:	push   esp
  41f727:	test   al,0x21
  41f729:	pushf  
  41f72a:	imul   ebp,esi,0x60
  41f72d:	out    0x80,eax
  41f72f:	ins    BYTE PTR es:[edi],dx
  41f730:	mov    bl,0xc1
  41f732:	ins    BYTE PTR es:[edi],dx
  41f733:	repnz mov cl,0x88
  41f736:	mov    eax,ds:0x94702752
  41f73b:	inc    edx
  41f73c:	and    ebp,edx
  41f73e:	call   0x23a9a1c
  41f743:	ret    0x5854
  41f746:	xchg   edx,eax
  41f747:	dec    edx
  41f748:	jge    0x41f773
  41f74a:	hlt    
  41f74b:	jmp    0xa497d537
  41f750:	bound  eax,QWORD PTR [edx]
  41f752:	aaa    
  41f753:	xor    ecx,DWORD PTR [ebx-0x358aecd8]
  41f759:	inc    ebp
  41f75a:	cli    
  41f75b:	stos   BYTE PTR es:[edi],al
  41f75c:	iret   
  41f75d:	sbb    al,0x8a
  41f75f:	inc    ecx
  41f760:	sbb    ecx,DWORD PTR [esi+0xa]
  41f763:	push   ss
  41f764:	(bad)  
  41f765:	jmp    0x46c32e96
  41f76a:	popa   
  41f76b:	fbld   TBYTE PTR [eax+0x10]
  41f76e:	je     0x41f7ee
  41f770:	repz push 0xbd5dff06
  41f776:	dec    ebp
  41f777:	add    eax,ecx
  41f779:	sub    BYTE PTR ds:0x1f657622,bh
  41f77f:	pop    es
  41f780:	push   ebx
  41f781:	inc    edx
  41f782:	lods   eax,DWORD PTR ds:[esi]
  41f783:	add    dl,BYTE PTR [eax+0x1a9becfc]
  41f789:	mov    ebp,0x4b4544b9
  41f78e:	ins    BYTE PTR es:[edi],dx
  41f78f:	push   es
  41f790:	sbb    bl,dh
  41f792:	mov    eax,0x5e393fd8
  41f797:	sahf   
  41f798:	sub    eax,0xce346862
  41f79d:	call   0xe4c69fae
  41f7a2:	stos   BYTE PTR es:[edi],al
  41f7a3:	fcmovne st,st(5)
  41f7a5:	push   ebx
  41f7a6:	xchg   esp,eax
  41f7a7:	jns    0x41f7a9
  41f7a9:	(bad)  
  41f7aa:	dec    eax
  41f7ab:	arpl   WORD PTR [eax+ebp*2],bx
  41f7ae:	cmp    BYTE PTR [ecx+0x20],dl
  41f7b1:	rcr    BYTE PTR [edi],1
  41f7b3:	xchg   esi,edx
  41f7b5:	rcl    ch,1
  41f7b7:	xor    eax,0xf0adcd8b
  41f7bc:	(bad)  
  41f7bd:	(bad)  
  41f7be:	pop    bp
  41f7c0:	push   esp
  41f7c1:	xchg   ebp,eax
  41f7c2:	or     bl,BYTE PTR [esi-0xa9036dc]
  41f7c8:	jb     0x41f7db
  41f7ca:	lds    ebx,FWORD PTR [ebx-0x51]
  41f7cd:	clc    
  41f7ce:	fnstsw WORD PTR [esi-0x123ab9ca]
  41f7d4:	fcom   DWORD PTR [esi+0xd115322]
  41f7da:	mov    dl,BYTE PTR [esi]
  41f7dc:	loope  0x41f794
  41f7de:	sbb    DWORD PTR [edx],esi
  41f7e0:	aas    
  41f7e1:	cmp    eax,0xed2710e4
  41f7e6:	adc    bl,BYTE PTR [edx+eiz*8]
  41f7e9:	fsub   QWORD PTR [eax-0x6b326c44]
  41f7ef:	and    cl,0x7f
  41f7f2:	or     dh,ch
  41f7f4:	fadd   st,st(6)
  41f7f6:	pushf  
  41f7f7:	mov    WORD PTR [ecx],fs
  41f7f9:	scas   al,BYTE PTR es:[edi]
  41f7fa:	sbb    bh,BYTE PTR [esi-0x3bca69a5]
  41f800:	mul    BYTE PTR [edx-0x28]
  41f803:	jle    0x41f7b5
  41f805:	cs dec edx
  41f807:	ret    0x424c
  41f80a:	test   eax,0x7a8c825f
  41f80f:	pop    esp
  41f810:	xchg   ebx,eax
  41f811:	arpl   WORD PTR [ebx-0x5958d230],bx
  41f817:	shl    DWORD PTR [ecx-0x58],0x94
  41f81b:	in     eax,0x37
  41f81d:	sub    eax,0xf58483c3
  41f822:	dec    eax
  41f823:	loop   0x41f848
  41f825:	or     al,0x32
  41f827:	push   0xffffffd2
  41f829:	jns    0x41f89f
  41f82b:	push   ebx
  41f82c:	jl     0x41f848
  41f82e:	jmp    0xcb1:0x2527964c
  41f835:	js     0x41f8aa
  41f837:	mov    cl,0x5b
  41f839:	imul   edi,eax,0xcac91d82
  41f83f:	adc    BYTE PTR [edi+ebx*8-0x54],al
  41f843:	adc    eax,0x75e4b7ef
  41f848:	ja     0x41f824
  41f84a:	aas    
  41f84b:	jne    0x41f843
  41f84d:	(bad)  
  41f84e:	mov    dh,0xbf
  41f850:	add    DWORD PTR [esi+0xc],esi
  41f853:	push   edx
  41f854:	rcr    DWORD PTR [edi-0x17e29fc7],1
  41f85a:	adc    eax,0xfc16cd4d
  41f85f:	jmp    0x41f802
  41f861:	clc    
  41f862:	cld    
  41f863:	repnz jmp 0xe3eb:0x23a0da77
  41f86b:	jmp    0x2c97:0xcc367221
  41f872:	rcl    bl,cl
  41f874:	into   
  41f875:	dec    edx
  41f876:	xor    BYTE PTR [ecx+0x3f18f045],cl
  41f87c:	or     dl,BYTE PTR ds:0x3e624320
  41f882:	add    BYTE PTR [edx+0x6d],cl
  41f885:	adc    DWORD PTR [edi],0x5c
  41f888:	gs ins BYTE PTR es:[edi],dx
  41f88a:	jg     0x41f8ee
  41f88c:	test   DWORD PTR [edx-0x25],ecx
  41f88f:	xor    al,0x4a
  41f891:	push   ds
  41f892:	cmp    eax,0x26a01009
  41f897:	or     BYTE PTR [ecx-0x311e0177],dh
  41f89d:	adc    DWORD PTR [esi+ecx*8+0xa],ecx
  41f8a1:	and    al,0x5d
  41f8a3:	dec    esi
  41f8a4:	addr16 out dx,al
  41f8a6:	jmp    0xbe76:0x6c90622
  41f8ad:	mov    al,BYTE PTR [esi+0x2f]
  41f8b0:	outs   dx,BYTE PTR ds:[esi]
  41f8b1:	mov    bl,0x82
  41f8b3:	mov    dl,0x49
  41f8b5:	shl    DWORD PTR [ebp+0x44],1
  41f8b8:	lock dec eax
  41f8ba:	pop    ds
  41f8bb:	in     al,0xfb
  41f8bd:	fwait
  41f8be:	enter  0x7bca,0xcb
  41f8c2:	ins    DWORD PTR es:[edi],dx
  41f8c3:	push   esp
  41f8c4:	js     0x41f852
  41f8c6:	dec    edx
  41f8c7:	push   esi
  41f8c8:	nop
  41f8c9:	pusha  
  41f8ca:	push   ebp
  41f8cb:	fwait
  41f8cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8cd:	daa    
  41f8ce:	outs   dx,BYTE PTR ds:[esi]
  41f8cf:	fstp   TBYTE PTR [ecx]
  41f8d1:	stos   BYTE PTR es:[edi],al
  41f8d2:	inc    edx
  41f8d3:	div    DWORD PTR [edx-0x68]
  41f8d6:	push   cs
  41f8d7:	fcomp  DWORD PTR [edi-0x69d284b1]
  41f8dd:	vpaddq xmm2,xmm0,xmm4
  41f8e1:	jae    0x41f8f0
  41f8e3:	lods   eax,DWORD PTR ds:[esi]
  41f8e4:	cwde   
  41f8e5:	mov    bh,0x7
  41f8e7:	and    al,0xa3
  41f8e9:	scas   eax,DWORD PTR es:[edi]
  41f8ea:	jnp    0x41f8d3
  41f8ec:	shr    BYTE PTR [esi-0x2e],cl
  41f8ef:	out    dx,eax
  41f8f0:	sub    eax,0xb7a5d928
  41f8f5:	fs or  al,0x18
  41f8f8:	test   al,0x89
  41f8fa:	inc    ecx
  41f8fb:	or     esp,DWORD PTR [edx+0x521cc24f]
  41f901:	push   esp
  41f902:	lods   eax,DWORD PTR ds:[esi]
  41f903:	adc    BYTE PTR [eax+ebx*2],0x63
  41f907:	mov    ebp,0x94376f41
  41f90c:	mov    cl,0xef
  41f90e:	cmp    ah,BYTE PTR ds:0x8acea951
  41f914:	scas   eax,DWORD PTR es:[edi]
  41f915:	(bad)  
  41f916:	(bad)  
  41f917:	out    dx,eax
  41f918:	je     0x41f917
  41f91a:	and    BYTE PTR [ebp+0x1cc6460a],ch
  41f920:	outs   dx,BYTE PTR ds:[esi]
  41f921:	push   edx
  41f922:	mov    DWORD PTR [ebp+ecx*4-0x543f71d8],ebx
  41f929:	pinsrw mm6,WORD PTR [eax],0x49
  41f92d:	dec    edx
  41f92e:	adc    ebx,esi
  41f930:	inc    esi
  41f931:	jecxz  0x41f90a
  41f933:	push   esi
  41f934:	aad    0x96
  41f936:	xchg   ecx,eax
  41f937:	mov    ebx,0x926833a8
  41f93c:	and    eax,0xf8f6ff4c
  41f941:	pop    es
  41f942:	jl     0x41f9b9
  41f944:	cli    
  41f945:	(bad)  
  41f946:	pop    ebx
  41f947:	maskmovq mm1,(bad)
  41f948:	test   DWORD PTR [edx+eax*4+0x1b],0x1b5506bd
  41f950:	or     edi,esp
  41f952:	add    BYTE PTR [eax+0x21],0x76
  41f956:	mov    dl,0xc0
  41f958:	xchg   esi,eax
  41f959:	push   edx
  41f95a:	mov    dl,0x17
  41f95c:	jl     0x41f91e
  41f95e:	movsx  ebp,BYTE PTR [ecx]
  41f961:	in     al,0x2d
  41f963:	sub    DWORD PTR [ecx],eax
  41f965:	ret    0x8e1
  41f968:	add    ebx,DWORD PTR [eax-0x35]
  41f96b:	dec    esi
  41f96c:	leave  
  41f96d:	inc    edx
  41f96e:	lahf   
  41f96f:	or     esi,DWORD PTR [esi]
  41f971:	call   0xd311:0xcbc359cb
  41f978:	(bad)  
  41f979:	xor    DWORD PTR [ecx-0x274c3251],edi
  41f97f:	icebp  
  41f980:	(bad)  
  41f982:	mov    DWORD PTR [ecx+0x13],edx
  41f985:	(bad)  
  41f986:	sub    ebp,DWORD PTR ds:0x2ddcfa69
  41f98c:	mov    al,0x51
  41f98e:	jns    0x41f919
  41f990:	mov    bh,0x7b
  41f992:	mov    al,ds:0xcaabcc73
  41f997:	push   es
  41f998:	test   DWORD PTR [eax-0x50],edx
  41f99b:	xor    DWORD PTR [edi-0x15],edx
  41f99e:	jle    0x41f984
  41f9a0:	cli    
  41f9a1:	scas   al,BYTE PTR es:[edi]
  41f9a2:	cli    
  41f9a3:	push   ss
  41f9a4:	push   eax
  41f9a5:	cs cdq 
  41f9a7:	sub    eax,0x5f60883
  41f9ac:	imul   ecx,DWORD PTR gs:[esi+0x3d],0x60
  41f9b1:	cmp    DWORD PTR [ebx],edx
  41f9b3:	inc    ecx
  41f9b4:	and    eax,0xf91e4c35
  41f9b9:	cld    
  41f9ba:	dec    eax
  41f9bb:	lock idiv BYTE PTR [esi+0x18bb04f]
  41f9c2:	cmp    eax,0xef273338
  41f9c7:	cmp    BYTE PTR [ebp-0x4a],ch
  41f9ca:	mov    al,0x73
  41f9cc:	fucom  st(4)
  41f9ce:	mov    ch,0x4d
  41f9d0:	and    al,0xe8
  41f9d2:	cs sbb eax,0xce67ed7
  41f9d8:	lahf   
  41f9d9:	xchg   edi,eax
  41f9da:	in     eax,dx
  41f9db:	pop    edx
  41f9dc:	in     al,0x77
  41f9de:	cmp    BYTE PTR [edi-0x23],cl
  41f9e1:	sub    al,0x59
  41f9e3:	or     DWORD PTR [edx],ebp
  41f9e5:	div    DWORD PTR [ebx]
  41f9e7:	popf   
  41f9e8:	pop    ss
  41f9e9:	out    0xb3,al
  41f9eb:	repnz fiadd WORD PTR [ecx-0xa1e07e0]
  41f9f2:	test   al,0x12
  41f9f4:	xor    al,0x8
  41f9f6:	test   DWORD PTR [edx],edi
  41f9f8:	les    edx,FWORD PTR [ecx]
  41f9fa:	mov    edi,0xedd6ad35
  41f9ff:	push   ds
  41fa00:	xchg   ecx,eax
  41fa01:	adc    eax,0x8
  41fa04:	or     BYTE PTR [esi],bh
  41fa06:	mov    ah,0xce
  41fa08:	push   ss
  41fa09:	mov    BYTE PTR [esp+ebp*2-0x65],al
  41fa0d:	(bad)  
  41fa0e:	mov    eax,ds:0x8c18ce61
  41fa13:	dec    ebx
  41fa14:	and    DWORD PTR ds:0xfafc4c41,esp
  41fa1a:	pop    ebx
  41fa1b:	ds inc ebx
  41fa1d:	(bad)  
  41fa1e:	in     al,0x4
  41fa20:	arpl   sp,dx
  41fa22:	mov    ah,0x2a
  41fa24:	out    dx,eax
  41fa25:	popa   
  41fa26:	dec    ebx
  41fa27:	mov    edx,0xb1b7fa85
  41fa2c:	or     DWORD PTR [ecx-0x51],0x3ccc1efe
  41fa33:	jno    0x41fa77
  41fa35:	sahf   
  41fa36:	sahf   
  41fa37:	gs cmp eax,0xe625af12
  41fa3d:	push   esi
  41fa3e:	xor    al,ch
  41fa40:	cdq    
  41fa41:	outs   dx,BYTE PTR ds:[esi]
  41fa42:	sti    
  41fa43:	lods   al,BYTE PTR ds:[esi]
  41fa44:	dec    ecx
  41fa45:	pusha  
  41fa46:	ss jae 0x41f9e1
  41fa49:	scas   al,BYTE PTR es:[edi]
  41fa4a:	push   esp
  41fa4b:	lods   al,BYTE PTR ds:[esi]
  41fa4c:	shl    DWORD PTR [ebx],cl
  41fa4e:	mov    ah,0x99
  41fa50:	jle    0x41f9e6
  41fa52:	test   DWORD PTR [edi-0x76ae7e22],esp
  41fa58:	lods   al,BYTE PTR ds:[esi]
  41fa59:	outs   dx,BYTE PTR ds:[esi]
  41fa5a:	aaa    
  41fa5b:	test   eax,0x807266f5
  41fa60:	std    
  41fa61:	fcomip st,st(3)
  41fa63:	xchg   esp,ecx
  41fa65:	cmc    
  41fa66:	jns    0x41faab
  41fa68:	or     ebx,eax
  41fa6a:	imul   esp,ebp,0xb1cd6ae
  41fa70:	or     eax,0xd4a24f
  41fa75:	or     esp,esp
  41fa77:	in     al,dx
  41fa78:	movd   edi,mm5
  41fa7b:	inc    edi
  41fa7c:	cdq    
  41fa7d:	test   BYTE PTR [ebp+0x40d0f1b8],0xe4
  41fa84:	inc    esp
  41fa85:	aaa    
  41fa86:	sub    bh,BYTE PTR [ebx-0x44]
  41fa89:	nop
  41fa8a:	adc    al,0xde
  41fa8c:	ret    
  41fa8d:	xor    ah,BYTE PTR [eax]
  41fa8f:	ror    ch,0x8c
  41fa92:	pushw  cs
  41fa94:	jle    0x41faf6
  41fa96:	jmp    0xbe7a:0x4068fc31
  41fa9d:	sub    bh,bh
  41fa9f:	das    
  41faa0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41faa1:	gs mov ecx,0x11d53063
  41faa7:	outs   dx,DWORD PTR ds:[esi]
  41faa8:	ss mov ebp,0x851d6b5f
  41faae:	push   cs
  41faaf:	enter  0x6e2b,0x31
  41fab3:	call   0xa8898262
  41fab8:	mov    DWORD PTR [edi+edx*4+0x3b918a65],ebp
  41fabf:	pop    ebx
  41fac0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fac1:	fcomp  QWORD PTR [eax-0x4f2695a5]
  41fac7:	ja     0x41fa5e
  41fac9:	xchg   esp,eax
  41faca:	push   ds
  41facb:	push   edx
  41facc:	inc    esp
  41facd:	pop    edi
  41face:	xor    al,0xfd
  41fad0:	scas   eax,DWORD PTR es:[edi]
  41fad1:	jne    0x41faa8
  41fad3:	jge    0x41fab7
  41fad5:	pop    ds
  41fad6:	xchg   ecx,eax
  41fad7:	into   
  41fad8:	pop    esp
  41fad9:	cld    
  41fada:	xchg   esp,eax
  41fadb:	dec    esi
  41fadc:	hlt    
  41fadd:	cmp    eax,0xd125f99
  41fae2:	sbb    ch,BYTE PTR [edi]
  41fae4:	xor    eax,0xbee6ea6
  41fae9:	inc    esi
  41faea:	pop    ebx
  41faeb:	dec    esp
  41faec:	xor    BYTE PTR [ecx],ah
  41faee:	xchg   esi,eax
  41faef:	push   ecx
  41faf0:	mov    esi,0x35536b8f
  41faf5:	jge    0x41fb71
  41faf7:	or     eax,0x1ebc4392
  41fafc:	sub    al,0x28
  41fafe:	push   esp
  41faff:	or     DWORD PTR [ebp-0x66cdad7f],esi
  41fb05:	mov    DWORD PTR [edx+eax*1+0x26b5eac6],edi
  41fb0c:	(bad)  
  41fb0d:	lock mov ebp,ss
  41fb10:	shl    DWORD PTR [esi+0x4d],cl
  41fb13:	aam    0x64
  41fb15:	pusha  
  41fb16:	out    0x24,al
  41fb18:	adc    DWORD PTR ds:0xf7dd6b10,ebp
  41fb1e:	inc    DWORD PTR [esi-0x74]
  41fb21:	call   0x191b49d9
  41fb26:	mov    dl,0x88
  41fb28:	(bad)  
  41fb29:	gs cmc 
  41fb2b:	repz push edx
  41fb2d:	icebp  
  41fb2e:	cpuid  
  41fb30:	lods   eax,DWORD PTR ds:[esi]
  41fb31:	jle    0x41fbab
  41fb33:	outs   dx,DWORD PTR ds:[esi]
  41fb34:	sbb    eax,0xca0450a
  41fb39:	rol    DWORD PTR [ebp+eiz*4+0x5e55a042],0x2a
  41fb41:	lahf   
  41fb42:	out    0x75,eax
  41fb44:	mov    al,0xde
  41fb46:	cmc    
  41fb47:	test   eax,0xb969f440
  41fb4c:	sbb    ebp,DWORD PTR [eax+eiz*8+0x1e]
  41fb50:	loopne 0x41fbca
  41fb52:	and    DWORD PTR [edx+0x22],eax
  41fb55:	inc    ecx
  41fb56:	inc    edi
  41fb57:	rcl    DWORD PTR ds:0xda475a73,1
  41fb5d:	inc    edx
  41fb5e:	imul   eax,ebx,0xffffff8c
  41fb61:	int3   
  41fb62:	rol    BYTE PTR [ebx+0x7f14f083],1
  41fb68:	aam    0x24
  41fb6a:	push   0xffffffb0
  41fb6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb6d:	mov    eax,fs
  41fb6f:	call   0x6d3b4943
  41fb74:	dec    ebx
  41fb75:	xlat   BYTE PTR ds:[ebx]
  41fb76:	adc    bh,dh
  41fb78:	mov    BYTE PTR [eax+0x2171d7e6],cl
  41fb7e:	das    
  41fb7f:	push   cs
  41fb80:	push   es
  41fb81:	int3   
  41fb82:	cs mov edx,0x49df0258
  41fb88:	mov    BYTE PTR ds:0x599d6876,dh
  41fb8e:	ins    BYTE PTR es:[edi],dx
  41fb8f:	sub    eax,0x569285c8
  41fb94:	push   eax
  41fb95:	jne    0x41fbac
  41fb97:	sbb    esi,DWORD PTR [eax-0x7]
  41fb9a:	pop    ss
  41fb9b:	jns    0x41fbc2
  41fb9d:	mov    DWORD PTR [ebp+0x7b],ecx
  41fba0:	sbb    ah,0xe2
  41fba3:	and    al,0x43
  41fba5:	stc    
  41fba6:	mov    dl,0xd0
  41fba8:	addr16 fdivr st,st(6)
  41fbab:	sub    ebp,ebx
  41fbad:	pop    ss
  41fbae:	cmp    al,0x5b
  41fbb0:	pop    ebp
  41fbb1:	fs and eax,0x2f435ace
  41fbb7:	sbb    al,0x17
  41fbb9:	sbb    al,0xee
  41fbbb:	int3   
  41fbbc:	retf   
  41fbbd:	ss sub al,0xb2
  41fbc0:	ins    BYTE PTR es:[edi],dx
  41fbc1:	mov    al,0x2c
  41fbc3:	pop    ss
  41fbc4:	sbb    ecx,DWORD PTR [ebp+0x22df46ef]
  41fbca:	iret   
  41fbcb:	out    0x23,al
  41fbcd:	mov    bl,0x1b
  41fbcf:	jg     0x41fc0f
  41fbd1:	mov    al,ah
  41fbd3:	ja     0x41fc48
  41fbd5:	pushf  
  41fbd6:	cs out dx,eax
  41fbd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fbd9:	repnz push ebx
  41fbdb:	ret    
  41fbdc:	mov    esp,0xe8f29d31
  41fbe1:	mov    eax,ds:0x4fa3177d
  41fbe6:	xchg   BYTE PTR [eax-0x38],al
  41fbe9:	xlat   BYTE PTR ds:[ebx]
  41fbea:	cmp    al,0x6b
  41fbec:	stc    
  41fbed:	lahf   
  41fbee:	sub    BYTE PTR [ebx+edi*8-0x4e],0x27
  41fbf3:	add    DWORD PTR gs:[edi-0x79f4b205],esp
  41fbfa:	sbb    DWORD PTR [esp+ebx*2],esi
  41fbfd:	jp     0x41fb8f
  41fbff:	cld    
  41fc00:	jns    0x41fbc0
  41fc02:	sub    esp,edx
  41fc04:	sub    ecx,DWORD PTR [eax-0x71ed154c]
  41fc0a:	(bad)  
  41fc0c:	enter  0x464,0xc6
  41fc10:	add    esi,DWORD PTR [edi-0x38]
  41fc13:	xlat   BYTE PTR ds:[ebx]
  41fc14:	stos   DWORD PTR es:[edi],eax
  41fc15:	clc    
  41fc16:	mov    al,0xcd
  41fc18:	cdq    
  41fc19:	out    0xe9,eax
  41fc1b:	and    bl,bh
  41fc1d:	(bad)  
  41fc1f:	and    BYTE PTR [edx+0x54951634],ah
  41fc25:	div    BYTE PTR [edi+0x29]
  41fc28:	jmp    DWORD PTR [edx-0x5700cf87]
  41fc2e:	mov    ecx,0xab08c856
  41fc33:	inc    ebx
  41fc34:	push   edx
  41fc35:	popa   
  41fc36:	repnz or ecx,DWORD PTR [esi-0x3d]
  41fc3a:	or     DWORD PTR [edi+0x4fda0dd8],edx
  41fc40:	pop    ebp
  41fc41:	outs   dx,DWORD PTR ds:[esi]
  41fc42:	xchg   DWORD PTR [eax+0x399712d7],ecx
  41fc48:	lds    ebx,FWORD PTR [esp+esi*2]
  41fc4b:	out    0xbd,eax
  41fc4d:	jge    0x41fc4c
  41fc4f:	add    BYTE PTR [edx],ch
  41fc51:	sub    eax,0x9792558c
  41fc56:	jp     0x41fc6d
  41fc58:	out    dx,eax
  41fc59:	add    ecx,DWORD PTR [ebx+0x11]
  41fc5c:	cmp    edx,DWORD PTR [esp+edi*4]
  41fc5f:	cld    
  41fc60:	cdq    
  41fc61:	outs   dx,DWORD PTR ds:[esi]
  41fc62:	push   esp
  41fc63:	adc    dh,BYTE PTR [eax+0x78]
  41fc66:	jge    0x41fc30
  41fc68:	inc    ebp
  41fc69:	rol    BYTE PTR [edx],cl
  41fc6b:	aam    0xf3
  41fc6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc6e:	mov    DWORD PTR [esi+0x6a],edi
  41fc71:	xchg   esi,eax
  41fc72:	adc    eax,0x7ca9b999
  41fc77:	es pop esp
  41fc79:	or     BYTE PTR [eax],cl
  41fc7b:	je     0x41fc33
  41fc7d:	shl    BYTE PTR [esi],1
  41fc7f:	stos   BYTE PTR es:[edi],al
  41fc80:	fisttp DWORD PTR [edi]
  41fc82:	xchg   edi,eax
  41fc83:	vmread DWORD PTR [ecx-0x5f],esi
  41fc87:	das    
  41fc88:	lods   al,BYTE PTR ds:[esi]
  41fc89:	push   0xffffffca
  41fc8b:	mov    eax,DWORD PTR [esp+eax*4]
  41fc8e:	imul   esp,DWORD PTR [ebx+0x62],0xffffff88
  41fc92:	cmp    al,dl
  41fc94:	clc    
  41fc95:	aas    
  41fc96:	cdq    
  41fc97:	addr16 pop edi
  41fc99:	jae    0x41fcc9
  41fc9b:	mov    ah,0xd
  41fc9d:	ret    0x597c
  41fca0:	mov    ?,eax
  41fca2:	ja     0x41fc2b
  41fca4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fca5:	ja     0x41fcc5
  41fca7:	frstor [edi]
  41fca9:	pop    edx
  41fcaa:	dec    eax
  41fcab:	and    al,0xa0
  41fcad:	bound  ebp,QWORD PTR [ebp+0x355651cf]
  41fcb3:	mov    DWORD PTR [edx],edi
  41fcb5:	cwde   
  41fcb6:	xchg   ebx,eax
  41fcb7:	out    dx,eax
  41fcb8:	and    DWORD PTR [ebp+0x2d],0x5e
  41fcbc:	(bad)  
  41fcbd:	sbb    DWORD PTR gs:[edi+0x18b58484],0xffffffa7
  41fcc5:	mov    edi,0x8a9b7725
  41fcca:	push   ds
  41fccb:	imul   eax,ebp,0xffffffe1
  41fcce:	ins    DWORD PTR es:[edi],dx
  41fccf:	ret    
  41fcd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fcd1:	mov    al,ds:0x363c99d9
  41fcd6:	dec    esp
  41fcd7:	rol    BYTE PTR [eax-0x54],cl
  41fcda:	sti    
  41fcdb:	add    BYTE PTR [ebp-0x7cc46e01],ch
  41fce1:	ins    DWORD PTR es:[edi],dx
  41fce2:	stc    
  41fce3:	add    BYTE PTR [ecx],al
  41fce5:	sbb    eax,0xdcd9c18a
  41fcea:	loope  0x41fd16
  41fcec:	leave  
  41fced:	sbb    al,0x72
  41fcef:	retf   
  41fcf0:	js     0x41fcd5
  41fcf2:	(bad)  
  41fcf3:	in     eax,dx
  41fcf4:	(bad)  
  41fcf5:	sub    DWORD PTR [bp+di-0x15],ebx
  41fcf9:	mov    edi,0xc45bd4ee
  41fcfe:	cmc    
  41fcff:	adc    bl,0x57
  41fd02:	jmp    0x277:0xe433b085
  41fd09:	(bad)  
  41fd0a:	mov    esp,0xaed94a2a
  41fd0f:	cmp    WORD PTR [eax+0x5a],0x1b
  41fd14:	sti    
  41fd15:	or     al,0x8a
  41fd17:	inc    esi
  41fd18:	out    0x71,eax
  41fd1a:	sub    DWORD PTR [ebx-0x638486cf],esp
  41fd20:	inc    ebp
  41fd21:	iret   
  41fd22:	or     al,0x8b
  41fd24:	mov    cl,0xf6
  41fd26:	out    0xba,al
  41fd28:	div    edx
  41fd2a:	xchg   esi,eax
  41fd2b:	out    dx,eax
  41fd2c:	and    eax,0xf9a7961e
  41fd31:	shr    BYTE PTR [eax],0xfa
  41fd34:	test   DWORD PTR [eax+0xc],edi
  41fd37:	xor    ah,bl
  41fd39:	cmc    
  41fd3a:	xchg   edi,eax
  41fd3b:	lods   eax,DWORD PTR ds:[esi]
  41fd3c:	imul   ecx,DWORD PTR [esp+ebx*1-0x55ee2e78],0x1c64fc55
  41fd47:	repnz xchg esi,eax
  41fd49:	mov    al,0xa7
  41fd4b:	or     ebp,DWORD PTR [eax+ebp*1-0x13]
  41fd4f:	dec    edx
  41fd50:	dec    esp
  41fd51:	mov    eax,0x8cefd872
  41fd56:	or     eax,0xd02be86c
  41fd5b:	push   ds
  41fd5c:	jl     0x41fd24
  41fd5e:	inc    esp
  41fd5f:	lahf   
  41fd60:	out    0x6f,eax
  41fd62:	pop    ebp
  41fd63:	inc    edi
  41fd64:	dec    ecx
  41fd65:	pop    esp
  41fd66:	dec    edx
  41fd67:	mov    esi,0xa7d97008
  41fd6c:	mov    ds:0xecf881a8,eax
  41fd71:	shl    DWORD PTR [ecx+0x16e08de],0x48
  41fd78:	lea    eax,es:[eax]
  41fd7b:	leave  
  41fd7c:	adc    eax,0xe15a0981
  41fd81:	popf   
  41fd82:	rcl    ebp,1
  41fd84:	jno    0x41fdbf
  41fd86:	test   eax,0x94a11471
  41fd8b:	mov    ah,0xd3
  41fd8d:	nop
  41fd8e:	mov    al,ds:0x3aad4089
  41fd93:	xchg   edx,eax
  41fd94:	pop    esi
  41fd95:	push   cs
  41fd96:	jge    0x41fddf
  41fd98:	add    dh,BYTE PTR [edi+esi*4+0x1feb3ff1]
  41fd9f:	add    DWORD PTR [ebx-0xae852a],0x9de8b9cf
  41fda9:	mov    esi,0xe90a7d2b
  41fdae:	popa   
  41fdaf:	and    bl,BYTE PTR [esi+0x2d]
  41fdb2:	in     al,0x91
  41fdb4:	les    ebp,FWORD PTR [ebx+0x1a795531]
  41fdba:	in     eax,0x75
  41fdbc:	adc    dh,BYTE PTR [edx+0x3869be74]
  41fdc2:	xor    eax,0x2bbb4147
  41fdc7:	das    
  41fdc8:	outs   dx,BYTE PTR ds:[esi]
  41fdc9:	loopne 0x41fdb9
  41fdcb:	mov    esi,0x1d63b1f7
  41fdd0:	lock adc al,BYTE PTR [esi]
  41fdd3:	mov    eax,0x7b6e337e
  41fdd8:	push   cs
  41fdd9:	xchg   ebp,eax
  41fdda:	imul   edx,DWORD PTR [edx+ebx*1],0xffffffe6
  41fdde:	sti    
  41fddf:	sub    al,0x92
  41fde1:	add    BYTE PTR [ecx-0x505c9768],0x1e
  41fde8:	arpl   WORD PTR [edx-0x1e],dx
  41fdeb:	sub    DWORD PTR [edi],eax
  41fded:	iret   
  41fdee:	mov    edx,0x72faabb4
  41fdf3:	clc    
  41fdf4:	in     al,0x39
  41fdf6:	or     ebp,edi
  41fdf8:	mov    ebx,0xc979297b
  41fdfd:	jecxz  0x41fdc5
  41fdff:	fdivr  QWORD PTR [eax+0x40]
  41fe02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe03:	mov    bh,0x9b
  41fe05:	mov    bh,0xdf
  41fe07:	pop    ecx
  41fe08:	jo     0x41fdfd
  41fe0a:	test   eax,0x37b22efb
  41fe0f:	adc    eax,0x7e111473
  41fe14:	mov    WORD PTR [edi],ds
  41fe16:	add    eax,0x1b6f6ee8
  41fe1b:	test   DWORD PTR [esi+0x4d],edi
  41fe1e:	lds    ebx,FWORD PTR [edi-0x52]
  41fe21:	inc    eax
  41fe22:	xchg   edi,eax
  41fe23:	cdq    
  41fe24:	std    
  41fe25:	js     0x41fdef
  41fe27:	retf   0xf8c3
  41fe2a:	sbb    DWORD PTR [edx],eax
  41fe2c:	ret    
  41fe2d:	pop    edx
  41fe2e:	pop    ds
  41fe2f:	xchg   edi,eax
  41fe30:	test   DWORD PTR [edx],ebx
  41fe32:	shl    DWORD PTR [edx+0x1b],1
  41fe35:	xchg   BYTE PTR [ebx+0x3a],dh
  41fe38:	push   0x5f
  41fe3a:	icebp  
  41fe3b:	xor    DWORD PTR [edx+ecx*4-0x3],edx
  41fe3f:	pushf  
  41fe40:	(bad)  
  41fe41:	(bad)  
  41fe43:	mov    ebx,0x45ce2ef7
  41fe48:	mov    edi,0x9164865f
  41fe4d:	mov    BYTE PTR [ebp-0x1f],cl
  41fe50:	cmp    eax,0x71c4b0d0
  41fe55:	dec    edx
  41fe56:	(bad)  
  41fe57:	(bad)  
  41fe58:	jl     0x41fe8e
  41fe5a:	add    eax,DWORD PTR [ebp-0x190be718]
  41fe60:	mov    ebx,0x49dc099
  41fe65:	and    bl,BYTE PTR [ebx+edi*1-0x7a]
  41fe69:	mov    edx,0xeb08d161
  41fe6e:	xor    DWORD PTR [ebx-0xbcbe998],0x3b
  41fe75:	jno    0x41fe25
  41fe77:	mov    BYTE PTR [edx+0x5f46696c],al
  41fe7d:	xchg   edx,eax
  41fe7e:	push   cs
  41fe7f:	jl     0x41fea5
  41fe81:	xor    DWORD PTR [edi-0x43],ebp
  41fe84:	xchg   edx,eax
  41fe85:	sub    bl,ah
  41fe87:	jbe    0x41fee2
  41fe89:	inc    eax
  41fe8a:	mov    DWORD PTR [eax+0x7774f994],esp
  41fe90:	jmp    0xb5f8:0x6afe2e4
  41fe97:	imul   esi,ecx,0x101023e8
  41fe9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe9e:	pop    edi
  41fe9f:	inc    ebx
  41fea0:	leave  
  41fea1:	sbb    ecx,DWORD PTR [ecx+0x2f00546e]
  41fea7:	repz xchg edi,eax
  41fea9:	cdq    
  41feaa:	lods   al,BYTE PTR ds:[esi]
  41feab:	mov    esi,0x84d87267
  41feb0:	in     eax,dx
  41feb1:	mov    BYTE PTR [edi-0x76],dl
  41feb4:	push   ds
  41feb5:	mov    ah,0x1f
  41feb7:	outs   dx,DWORD PTR ds:[esi]
  41feb8:	push   es
  41feb9:	js     0x41fed1
  41febb:	ds dec edi
  41febd:	loope  0x41fedb
  41febf:	(bad)  [esi]
  41fec1:	xor    DWORD PTR [edx-0x3e],0xffffffc6
  41fec5:	cmc    
  41fec6:	mov    bh,0x91
  41fec8:	neg    BYTE PTR [ebx+ebx*8-0x2ef2896f]
  41fecf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fed0:	lahf   
  41fed1:	sbb    edi,DWORD PTR [ebp-0x44d165e2]
  41fed7:	call   0xabbd:0x9ef3201d
  41fede:	xor    esp,ebx
  41fee0:	stos   BYTE PTR es:[edi],al
  41fee1:	mov    esp,0x8635dcae
  41fee6:	jg     0x41fe8c
  41fee8:	in     eax,0xff
  41feea:	jae    0x41ff04
  41feec:	aaa    
  41feed:	sbb    eax,0xded0350
  41fef2:	push   ecx
  41fef3:	jmp    0xfa69:0x4f7a085
  41fefa:	or     DWORD PTR [esi+0x1e4deab0],0xffffffd7
  41ff01:	lock sbb al,BYTE PTR [esp+ebp*8-0x3cfd45ca]
  41ff09:	jg     0x41fef7
  41ff0b:	xor    DWORD PTR [edx+0x1c],edx
  41ff0e:	fiadd  WORD PTR [ebx+0x12]
  41ff11:	jmp    0x7a50:0x5d273867
  41ff18:	dec    edi
  41ff19:	mov    ds:0x1d2d2764,eax
  41ff1e:	je     0x41ff8d
  41ff20:	mov    ebp,0x74c5bd78
  41ff25:	(bad)  
  41ff26:	arpl   WORD PTR [ebx+0x9],cx
  41ff29:	ss jne 0x41ffa5
  41ff2c:	outs   dx,DWORD PTR ds:[esi]
  41ff2d:	pushf  
  41ff2e:	inc    edi
  41ff2f:	adc    eax,0xb3a074ee
  41ff34:	xor    dh,dl
  41ff36:	cmp    al,0x73
  41ff38:	call   DWORD PTR [ecx+0x4d108885]
  41ff3e:	fsub   QWORD PTR [ebx+eiz*1+0x1f44589]
  41ff45:	cmp    eax,0x42a18f
  41ff4a:	or     DWORD PTR [ebp-0xc],0xf89c85f9
  41ff51:	dec    DWORD PTR ds:0x42a193
  41ff57:	mov    eax,DWORD PTR [ebp-0x1c]
  41ff5a:	mov    ecx,DWORD PTR ds:0x42a207
  41ff60:	mov    ecx,DWORD PTR [ecx]
  41ff62:	xor    DWORD PTR ds:0x42a173,ecx
  41ff68:	mov    ecx,DWORD PTR [ebp-0x1c]
  41ff6b:	and    DWORD PTR ds:0x42a173,0x0
  41ff75:	mov    edi,DWORD PTR ds:0x42a173
  41ff7b:	inc    edi
  41ff7c:	mov    DWORD PTR ds:0x42a173,edi
  41ff82:	cmp    DWORD PTR ds:0x42a173,0x16
  41ff89:	jb     0x41ffb1
  41ff8f:	jmp    0x41ffa4
  41ff94:	push   0x372f
  41ff99:	push   0x5fe0
  41ff9e:	call   DWORD PTR ds:0x42a2c7
  41ffa4:	cmp    DWORD PTR ds:0x42a173,0x14
  41ffab:	jb     0x41ff75
  41ffb1:	sub    eax,ecx
  41ffb3:	mov    DWORD PTR [ebp-0x1c],eax
  41ffb6:	xor    ecx,ecx
  41ffb8:	or     DWORD PTR [ebp-0x1c],0xf89c8599
  41ffbf:	sub    ecx,DWORD PTR ds:0x42a133
  41ffc5:	mov    eax,DWORD PTR [ebp-0x20]
  41ffc8:	mov    ecx,DWORD PTR [ebp-0x20]
  41ffcb:	and    DWORD PTR ds:0x42a1af,0x0
  41ffd5:	jmp    0x41ffe9
  41ffda:	xor    edi,edi
  41ffdc:	add    edi,DWORD PTR ds:0x42a1af
  41ffe2:	inc    edi
  41ffe3:	mov    DWORD PTR ds:0x42a1af,edi
  41ffe9:	cmp    DWORD PTR ds:0x42a1af,0x1b
  41fff0:	jae    0x42003a
  41fff6:	cmp    DWORD PTR ds:0x42a1af,0x7
  41fffd:	ja     0x42003a
  420003:	jmp    0x42001b
  420008:	push   0x160a
  42000d:	push   0x42a157
  420012:	push   DWORD PTR [ebp-0x18]
  420015:	call   DWORD PTR ds:0x42a2cf
  42001b:	cmp    DWORD PTR ds:0x42a1af,0x6
  420022:	jne    0x420035
  420028:	mov    edi,DWORD PTR ds:0x42a1af
  42002e:	inc    edi
  42002f:	mov    DWORD PTR ds:0x42a1af,edi
  420035:	jmp    0x41ffda
  42003a:	sub    eax,ecx
  42003c:	mov    DWORD PTR [ebp-0x20],eax
  42003f:	mov    eax,DWORD PTR [ebp-0x2c]
  420042:	mov    ecx,DWORD PTR [ebp-0x20]
  420045:	mov    esi,0x75108a8
  42004a:	xor    eax,esi
  42004c:	mov    edi,0x3272ef
  420051:	add    eax,edi
  420053:	or     eax,ecx
  420055:	mov    DWORD PTR [ebp-0x20],eax
  420058:	mov    eax,DWORD PTR [ebp-0x4]
  42005b:	mov    ecx,DWORD PTR [ebp-0x4]
  42005e:	sub    eax,ecx
  420060:	mov    DWORD PTR [ebp-0x4],eax
  420063:	or     DWORD PTR [ebp-0x4],0xf89c85be
  42006a:	mov    eax,DWORD PTR [ebp-0xc]
  42006d:	xor    eax,esi
  42006f:	add    eax,edi
  420071:	push   eax
  420072:	mov    eax,DWORD PTR [ebp-0x10]
  420075:	xor    eax,esi
  420077:	add    eax,edi
  420079:	push   eax
  42007a:	mov    eax,DWORD PTR [ebp-0x4]
  42007d:	xor    eax,esi
  42007f:	add    eax,edi
  420081:	push   eax
  420082:	lea    eax,[ebp-0x78]
  420085:	push   eax
  420086:	push   DWORD PTR [ebp-0x2c]
  420089:	push   DWORD PTR [ebp-0x28]
  42008c:	call   0x40b04c
  420091:	test   eax,eax
  420093:	je     0x4200c1
  420099:	lea    eax,[ebp-0x78]
  42009c:	push   eax
  42009d:	mov    eax,DWORD PTR [ebp-0x28]
  4200a0:	xor    eax,esi
  4200a2:	add    eax,edi
  4200a4:	push   eax
  4200a5:	mov    eax,DWORD PTR [ebp-0x24]
  4200a8:	add    eax,0xaa
  4200ad:	push   eax
  4200ae:	mov    eax,DWORD PTR [ebp-0x24]
  4200b1:	mov    eax,DWORD PTR [eax+0x198]
  4200b7:	push   DWORD PTR [eax]
  4200b9:	call   0x40a8fb
  4200be:	mov    DWORD PTR [ebp-0x14],eax
  4200c1:	mov    ecx,DWORD PTR ds:0x429527
  4200c7:	lea    eax,[ebp+0x4]
  4200ca:	mov    DWORD PTR [ecx*4+0x42951f],eax
  4200d1:	inc    DWORD PTR ds:0x429527
  4200d7:	mov    eax,DWORD PTR [ebp-0x14]
  4200da:	test   eax,eax
  4200dc:	je     0x420144
  4200e2:	lea    eax,[ebp-0x8]
  4200e5:	mov    DWORD PTR [ebp-0x34],eax
  4200e8:	mov    eax,DWORD PTR [ebp-0x30]
  4200eb:	mov    DWORD PTR [ebp-0x8],eax
  4200ee:	mov    eax,DWORD PTR [ebp-0x8]
  4200f1:	mov    ecx,DWORD PTR [ebp-0x14]
  4200f4:	sub    eax,ecx
  4200f6:	mov    DWORD PTR [ebp-0x8],eax
  4200f9:	mov    ecx,DWORD PTR [ebp-0x4]
  4200fc:	xor    ecx,esi
  4200fe:	mov    eax,0xffcd8d11
  420103:	sub    eax,ecx
  420105:	add    DWORD PTR [ebp-0x8],eax
  420108:	mov    eax,DWORD PTR [ebp-0x8]
  42010b:	mov    ecx,DWORD PTR [ebp-0x14]
  42010e:	mov    DWORD PTR [ecx+0x1],eax
  420111:	mov    eax,DWORD PTR [ebp-0x14]
  420114:	push   DWORD PTR [ebp-0x24]
  420117:	mov    BYTE PTR [eax],0xe9
  42011a:	mov    eax,ds:0x4292ab
  42011f:	push   DWORD PTR [eax]
  420121:	push   DWORD PTR ds:0x42950f
  420127:	push   DWORD PTR ds:0x4292b3
  42012d:	push   DWORD PTR ds:0x4294ef
  420133:	push   DWORD PTR ds:0x429f1b
  420139:	push   DWORD PTR [ebp-0x28]
  42013c:	push   DWORD PTR [ebp-0x2c]
  42013f:	mov    eax,DWORD PTR [ebp-0x14]
  420142:	call   eax
  420144:	pop    edi
  420145:	pop    esi
  420146:	leave  
  420147:	ret    
  420148:	push   ebp
  420149:	mov    ebp,esp
  42014b:	sub    esp,0x1c
  42014e:	add    DWORD PTR ds:0x42a133,edx
  420154:	mov    DWORD PTR [ebp-0x10],0xf89f85b9
  42015b:	lea    eax,[ebp+0x14]
  42015e:	mov    DWORD PTR [ebp-0x4],eax
  420161:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  420168:	lea    eax,[ebp-0xc]
  42016b:	and    DWORD PTR ds:0x42a163,0x0
  420175:	jmp    0x420187
  42017a:	mov    ecx,DWORD PTR ds:0x42a163
  420180:	inc    ecx
  420181:	mov    DWORD PTR ds:0x42a163,ecx
  420187:	cmp    DWORD PTR ds:0x42a163,0x1d
  42018e:	jae    0x4201b9
  420194:	cmp    DWORD PTR ds:0x42a163,0x1e
  42019b:	jge    0x4201b9
  4201a1:	jmp    0x4201b4
  4201a6:	push   0x42a157
  4201ab:	push   DWORD PTR [ebp-0x28]
  4201ae:	call   DWORD PTR ds:0x42a2d3
  4201b4:	jmp    0x42017a
  4201b9:	mov    DWORD PTR [ebp-0x14],eax
  4201bc:	xor    ecx,ecx
  4201be:	or     ecx,DWORD PTR ds:0x42a1b7
  4201c4:	and    ecx,DWORD PTR ds:0x42a1ab
  4201ca:	mov    DWORD PTR ds:0x42a1b7,ecx
  4201d0:	mov    eax,DWORD PTR [ebp-0xc]
  4201d3:	sbb    ecx,edx
  4201d5:	mov    edx,DWORD PTR [ebp-0x14]
  4201d8:	mov    ecx,0x75108a8
  4201dd:	add    DWORD PTR ds:0x42a1d3,0x42a18f
  4201e7:	xor    eax,ecx
  4201e9:	sbb    DWORD PTR ds:0x42a1bb,0x42a13f
  4201f3:	add    eax,0x3272ef
  4201f8:	mov    DWORD PTR [edx],eax
  4201fa:	mov    DWORD PTR ds:0x42a16b,0x1a
  420204:	cmp    DWORD PTR ds:0x42a16b,0x0
  42020b:	je     0x420239
  420211:	cmp    DWORD PTR ds:0x42a16b,0x1c
  420218:	jge    0x420239
  42021e:	jmp    0x420229
  420223:	call   DWORD PTR ds:0x42a293
  420229:	mov    eax,ds:0x42a16b
  42022e:	dec    eax
  42022f:	mov    ds:0x42a16b,eax
  420234:	jmp    0x420204
  420239:	mov    eax,ds:0x4292a7
  42023e:	mov    edx,DWORD PTR [ebp-0x4]
  420241:	mov    eax,DWORD PTR [eax]
  420243:	mov    DWORD PTR ds:0x42a14b,0x12e2
  42024d:	add    eax,DWORD PTR [edx]
  42024f:	or     edx,0x7147
  420255:	push   esi
  420256:	mov    DWORD PTR [ebp-0x8],eax
  420259:	and    DWORD PTR ds:0x42a15f,0x0
  420263:	jmp    0x420273
  420268:	mov    eax,ds:0x42a15f
  42026d:	inc    eax
  42026e:	mov    ds:0x42a15f,eax
  420273:	cmp    DWORD PTR ds:0x42a15f,0x15
  42027a:	jae    0x4202af
  420280:	cmp    DWORD PTR ds:0x42a15f,0x1f
  420287:	jge    0x4202af
  42028d:	jmp    0x4202aa
  420292:	push   DWORD PTR [ebp-0x18]
  420295:	push   0x7a6f
  42029a:	push   0x42906a
  42029f:	push   0x400000
  4202a4:	call   DWORD PTR ds:0x42a297
  4202aa:	jmp    0x420268
  4202af:	mov    edx,DWORD PTR [ebp+0x8]
  4202b2:	xor    eax,eax
  4202b4:	mov    eax,ds:0x42942f
  4202b9:	mov    eax,DWORD PTR [eax+0x198]
  4202bf:	sub    DWORD PTR ds:0x42a163,ebx
  4202c5:	xor    edx,ecx
  4202c7:	add    esi,0x2212
  4202cd:	mov    esi,0x3272ef
  4202d2:	add    edx,esi
  4202d4:	mov    DWORD PTR ds:0x42a18b,0x2e1b
  4202de:	cmp    DWORD PTR [eax],edx
  4202e0:	je     0x420301
  4202e6:	mov    DWORD PTR ds:0x42a18b,0x7bac
  4202f0:	mov    eax,DWORD PTR [eax]
  4202f2:	mov    DWORD PTR ds:0x42a167,0x79fc
  4202fc:	jmp    0x423a4e
  420301:	mov    eax,DWORD PTR [ebp+0x18]
  420304:	xor    eax,ecx
  420306:	and    DWORD PTR ds:0x42a14b,0x42a13b
  420310:	push   ebx
  420311:	and    DWORD PTR ds:0x42a193,0x0
  42031b:	jmp    0x42032f
  420320:	xor    ebx,ebx
  420322:	xor    ebx,DWORD PTR ds:0x42a193
  420328:	inc    ebx
  420329:	mov    DWORD PTR ds:0x42a193,ebx
  42032f:	cmp    DWORD PTR ds:0x42a193,0x1b
  420336:	jae    0x420359
  42033c:	cmp    DWORD PTR ds:0x42a193,0x26
  420343:	jg     0x420359
  420349:	jmp    0x420354
  42034e:	call   DWORD PTR ds:0x42a29b
  420354:	jmp    0x420320
  420359:	add    eax,esi
  42035b:	movzx  ebx,WORD PTR ds:0x42a1b3
  420362:	sub    DWORD PTR ds:0x42a1ab,ebx
  420368:	xor    edx,edx
  42036a:	mov    ebx,0xfabdbeda
  42036f:	xor    DWORD PTR ds:0x42a1b7,0x42a143
  420379:	add    eax,ebx
  42037b:	mov    DWORD PTR ds:0x42a17f,0x709e
  420385:	push   edi
  420386:	mov    edi,0x12e3
  42038b:	adc    edx,0xffffffff
  42038e:	mov    edi,0x8a29a13b
  420393:	xor    eax,edi
  420395:	xor    edx,0x0
  420398:	cmp    eax,0x70941fe1
  42039d:	mov    DWORD PTR ds:0x42a18f,0x2900
  4203a7:	jne    0x4203de
  4203ad:	mov    DWORD PTR ds:0x42a1bb,0x7794
  4203b7:	cmp    edx,0xffffffff
  4203ba:	mov    DWORD PTR ds:0x42a183,0x5653
  4203c4:	jne    0x4203de
  4203ca:	push   0xf89c85ba
  4203cf:	mov    DWORD PTR ds:0x42a13f,0xea6
  4203d9:	jmp    0x423a3b
  4203de:	sbb    eax,DWORD PTR ds:0x42a167
  4203e4:	mov    eax,DWORD PTR [ebp+0x18]
  4203e7:	xor    eax,ecx
  4203e9:	adc    DWORD PTR ds:0x42a1b7,0x42a183
  4203f3:	add    eax,esi
  4203f5:	xor    edx,edx
  4203f7:	dec    DWORD PTR ds:0x42a17b
  4203fd:	add    eax,ebx
  4203ff:	mov    DWORD PTR ds:0x42a133,0x604
  420409:	adc    edx,0xffffffff
  42040c:	adc    DWORD PTR ds:0x42a12f,0x42a18f
  420416:	xor    eax,edi
  420418:	xor    edx,0x0
  42041b:	mov    DWORD PTR ds:0x42a14b,0x4b6d
  420425:	cmp    eax,0x70941fe7
  42042a:	mov    DWORD PTR ds:0x42a18f,0x342
  420434:	jne    0x423a28
  42043a:	mov    DWORD PTR ds:0x42a19b,0x69f4
  420444:	cmp    edx,0xffffffff
  420447:	jne    0x423a28
  42044d:	and    edx,eax
  42044f:	mov    eax,DWORD PTR [ebp+0x10]
  420452:	inc    edx
  420453:	xor    eax,ecx
  420455:	movzx  edx,BYTE PTR ds:0x42a173
  42045c:	and    DWORD PTR ds:0x42a1bf,edx
  420462:	add    eax,esi
  420464:	sub    DWORD PTR ds:0x42a1d3,0x2e10
  42046e:	mov    DWORD PTR [ebp-0x18],eax
  420471:	xor    DWORD PTR ds:0x42a197,ebx
  420477:	mov    eax,DWORD PTR [ebp+0xc]
  42047a:	mov    edx,DWORD PTR ds:0x42a14f
  420480:	and    DWORD PTR ds:0x42a1bf,edx
  420486:	mov    edx,DWORD PTR [ebp-0x8]
  420489:	or     DWORD PTR ds:0x42a197,0x42a1bb
  420493:	xor    eax,ecx
  420495:	xor    DWORD PTR ds:0x42a173,0x2c59
  42049f:	add    eax,esi
  4204a1:	add    DWORD PTR ds:0x42a12b,0x1203
  4204ab:	imul   eax,DWORD PTR [edx]
  4204ae:	mov    edx,DWORD PTR [ebp+0x8]
  4204b1:	xor    edx,ecx
  4204b3:	add    edx,esi
  4204b5:	mov    DWORD PTR ds:0x42a157,0x15dc
  4204bf:	cmp    edx,eax
  4204c1:	mov    eax,DWORD PTR [ebp-0x4]
  4204c4:	mov    DWORD PTR ds:0x42a19b,0x25f0
  4204ce:	je     0x422919
  4204d4:	xor    DWORD PTR ds:0x42a1b3,edi
  4204da:	mov    edx,DWORD PTR [ebp-0x18]
  4204dd:	and    DWORD PTR ds:0x42a12b,0x42a167
  4204e7:	add    DWORD PTR [eax],edx
  4204e9:	mov    eax,DWORD PTR [ebp-0x4]
  4204ec:	sbb    edx,0x41ab
  4204f2:	mov    edx,DWORD PTR [ebp+0xc]
  4204f5:	or     DWORD PTR ds:0x42a167,0x42a133
  4204ff:	xor    edx,ecx
  420501:	and    DWORD PTR ds:0x42a133,0x1b9a
  42050b:	add    edx,esi
  42050d:	imul   edx,DWORD PTR [eax]
  420510:	mov    DWORD PTR ds:0x42a1c7,0x43e8
  42051a:	mov    DWORD PTR [eax],edx
  42051c:	mov    eax,DWORD PTR [ebp-0x4]
  42051f:	and    DWORD PTR ds:0x42a183,0x0
  420529:	mov    edx,DWORD PTR ds:0x42a183
  42052f:	inc    edx
  420530:	mov    DWORD PTR ds:0x42a183,edx
  420536:	cmp    DWORD PTR ds:0x42a183,0x8
  42053d:	jge    0x420589
  420543:	jmp    0x420560
  420548:	push   0x4b4a
  42054d:	push   DWORD PTR [ebp-0x20]
  420550:	push   0x429257
  420555:	push   0x400000
  42055a:	call   DWORD PTR ds:0x42a2a3
  420560:	cmp    DWORD PTR ds:0x42a183,0x7
  420567:	jne    0x42057c
  42056d:	xor    edx,edx
  42056f:	or     edx,DWORD PTR ds:0x42a183
  420575:	inc    edx
  420576:	mov    DWORD PTR ds:0x42a183,edx
  42057c:	cmp    DWORD PTR ds:0x42a183,0x1f
  420583:	jb     0x420529
  420589:	mov    DWORD PTR [ebp-0x1c],eax
  42058c:	not    DWORD PTR ds:0x42a197
  420592:	mov    eax,DWORD PTR [ebp+0x10]
  420595:	jmp    0x422908
  42059a:	and    eax,0x3cc0e30
  42059f:	les    ebx,FWORD PTR [ebx+0x426a7a97]
  4205a5:	imul   ecx,ebx,0x5dceba1f
  4205ab:	mov    dh,0x79
  4205ad:	jp     0x4205db
  4205af:	pop    edi
  4205b0:	jp     0x42062c
  4205b2:	js     0x420562
  4205b4:	and    DWORD PTR [eax],ebx
  4205b6:	push   ss
  4205b7:	fwait
  4205b8:	sbb    dl,BYTE PTR [edx-0x7f25113c]
  4205be:	add    ah,BYTE PTR [esi-0x6a657974]
  4205c4:	ret    0x2001
  4205c7:	ins    BYTE PTR es:[edi],dx
  4205c8:	fwait
  4205c9:	(bad)  
  4205ca:	jg     0x420586
  4205cc:	ins    BYTE PTR es:[edi],dx
  4205cd:	shr    DWORD PTR [ecx],0x2c
  4205d0:	in     al,dx
  4205d1:	ret    0xbe9
  4205d4:	cli    
  4205d5:	push   eax
  4205d6:	data16 arpl sp,dx
  4205d9:	mov    eax,ds:0x2b83efb7
  4205de:	dec    esp
  4205df:	std    
  4205e0:	mov    ch,0x69
  4205e2:	jnp    0x4205d2
  4205e4:	xor    DWORD PTR [eax+0x28],ebp
  4205e7:	repz jle 0x4205e2
  4205ea:	adc    edx,ecx
  4205ec:	mov    WORD PTR [edi+0x6e],es
  4205ef:	jns    0x4205ce
  4205f1:	faddp  st(7),st
  4205f3:	iret   
  4205f4:	xor    DWORD PTR ds:0xf564b45e,ecx
  4205fa:	pop    ecx
  4205fb:	cld    
  4205fc:	or     DWORD PTR [ebx+0x46],esi
  4205ff:	xchg   ch,cl
  420601:	fild   WORD PTR [ecx]
  420603:	mov    WORD PTR [eax+ebp*1+0x41],ds
  420607:	and    BYTE PTR [edi],bl
  420609:	ss pop edx
  42060b:	xor    eax,0xc4b9991
  420610:	mov    cl,0x9a
  420612:	sahf   
  420613:	xlat   BYTE PTR ds:[ebx]
  420614:	call   0x7d87f137
  420619:	xchg   BYTE PTR [eax],cl
  42061b:	(bad)  
  42061c:	cmp    cl,BYTE PTR [ebx+esi*8-0x655c6fa6]
  420623:	xchg   ecx,eax
  420624:	jle    0x4205ef
  420626:	std    
  420627:	pop    ss
  420628:	sbb    dl,0xab
  42062b:	dec    ebx
  42062c:	jmp    0x9de31e63
  420631:	fsubr  DWORD PTR [esi-0x7ffdf9e3]
  420637:	rcl    BYTE PTR [ebx],0x9a
  42063a:	jae    0x42065b
  42063c:	inc    ecx
  42063d:	mov    WORD PTR [eax+0x3],fs
  420640:	or     edi,eax
  420642:	adc    eax,0xc1b4abeb
  420647:	out    dx,eax
  420648:	arpl   WORD PTR [ebx+0x7],ax
  42064b:	call   ebp
  42064d:	jp     0x4205f2
  42064f:	into   
  420650:	cli    
  420651:	sub    BYTE PTR [edi-0x295ab974],cl
  420657:	scas   eax,DWORD PTR es:[edi]
  420658:	ins    DWORD PTR es:[edi],dx
  420659:	inc    esi
  42065a:	sub    edx,ebx
  42065c:	jbe    0x4206d9
  42065e:	mov    edx,0xd0b6990d
  420663:	stos   DWORD PTR es:[edi],eax
  420664:	sbb    esi,DWORD PTR [esi-0x1a7aeaf0]
  42066a:	fidiv  WORD PTR [ebx-0x66]
  42066d:	dec    ebp
  42066e:	mov    ebx,0x424c9df4
  420673:	mov    ecx,0x3c8e755e
  420678:	inc    esp
  420679:	leave  
  42067a:	xchg   edx,eax
  42067b:	adc    ebx,edx
  42067d:	pop    ebx
  42067e:	std    
  42067f:	shr    BYTE PTR ds:0x518709cf,1
  420685:	hlt    
  420686:	pop    esp
  420687:	xchg   ebp,eax
  420688:	pop    esi
  420689:	dec    eax
  42068a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42068b:	dec    edx
  42068c:	push   edx
  42068d:	inc    esi
  42068e:	lock pop esi
  420690:	fldenv [ebp-0x7bf12b10]
  420696:	push   ecx
  420697:	(bad)
  42069b:	mov    cl,0x37
  42069d:	and    eax,0x6f491376
  4206a2:	mov    ch,0x9c
  4206a4:	push   edx
  4206a5:	cmp    BYTE PTR [ebp+0x7fcd12fc],dh
  4206ab:	cmp    DWORD PTR [edx+0x44],eax
  4206ae:	scas   al,BYTE PTR es:[edi]
  4206af:	or     BYTE PTR [eax-0x1e08dd64],ch
  4206b5:	sub    edx,DWORD PTR [edi-0x1f834ee7]
  4206bb:	loopne 0x4206f1
  4206bd:	xchg   edx,eax
  4206be:	clc    
  4206bf:	mov    eax,ds:0x9c9a26d3
  4206c4:	imul   ebp,DWORD PTR [edi+0x7ef577cd],0x5dcb4d7b
  4206ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206cf:	(bad)  
  4206d0:	das    
  4206d1:	jae    0x42066c
  4206d3:	add    BYTE PTR [esi+0x2c56daa5],al
  4206d9:	push   ds
  4206da:	cmp    edx,edi
  4206dc:	test   al,0xda
  4206de:	js     0x420726
  4206e0:	add    edx,esi
  4206e2:	mov    eax,ds:0x9c125b1a
  4206e7:	dec    edx
  4206e8:	dec    edx
  4206e9:	push   edi
  4206ea:	inc    eax
  4206eb:	rcr    BYTE PTR [edx+0x6b],0x12
  4206ef:	int    0xd0
  4206f1:	in     eax,dx
  4206f2:	adc    edi,ebx
  4206f4:	pusha  
  4206f5:	push   ebp
  4206f6:	(bad)  
  4206f7:	lds    ecx,FWORD PTR [esi-0xaca44fc]
  4206fd:	scas   eax,DWORD PTR es:[edi]
  4206fe:	pop    edi
  4206ff:	inc    edx
  420700:	cmc    
  420701:	(bad)  ds:0x6b66770c
  420707:	loopne 0x420708
  420709:	sbb    eax,0x7a2c8496
  42070e:	cmc    
  42070f:	stc    
  420710:	or     ebp,DWORD PTR [ebx+0x19]
  420713:	iret   
  420714:	jmp    0xa68ad4eb
  420719:	jmp    0xadb5c2bf
  42071e:	outs   dx,DWORD PTR ds:[esi]
  42071f:	stc    
  420720:	or     DWORD PTR [edx+0x951ff6b],ecx
  420726:	dec    eax
  420727:	xor    eax,0x14ea0d0b
  42072c:	stc    
  42072d:	ror    ebx,cl
  42072f:	dec    DWORD PTR [ebx-0x68]
  420732:	jnp    0x4206bf
  420734:	cmp    dl,BYTE PTR [edi+0x38]
  420737:	les    ebp,FWORD PTR [edi+0x143f38e9]
  42073d:	neg    BYTE PTR [edi]
  42073f:	in     al,0xa0
  420741:	jne    0x4206d3
  420743:	fcmovnu st,st(4)
  420745:	scas   eax,DWORD PTR es:[edi]
  420746:	cmp    al,0x65
  420748:	and    al,0x28
  42074a:	mov    eax,0xe8a2288a
  42074f:	sbb    BYTE PTR [eax+eax*2-0x2d],ah
  420753:	retf   0x23c3
  420756:	in     eax,dx
  420757:	jmp    0x420774
  420759:	pop    esi
  42075a:	adc    ah,BYTE PTR [edx+0x1d588f03]
  420760:	dec    esp
  420761:	cmp    BYTE PTR [eax-0x4c5fd7c3],0xfb
  420768:	lods   al,BYTE PTR ds:[esi]
  420769:	outs   dx,BYTE PTR ds:[esi]
  42076a:	in     al,dx
  42076b:	and    DWORD PTR [edi+0x3a],0x3104777
  420772:	or     eax,0x22c95bd5
  420777:	and    al,0x27
  420779:	enter  0x21f,0x98
  42077d:	jbe    0x420707
  42077f:	pop    ss
  420780:	lds    ecx,FWORD PTR [eax]
  420782:	mov    bh,0xe
  420784:	jae    0x4207e1
  420786:	add    DWORD PTR [eax+0x5f],ebp
  420789:	xchg   edi,eax
  42078a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42078b:	rol    BYTE PTR [ebp-0x4a],cl
  42078e:	xchg   ebx,eax
  42078f:	inc    edx
  420790:	ror    BYTE PTR [edi-0x3085acba],0xfe
  420797:	imul   ebx,DWORD PTR ss:[ecx+ebp*1+0x7c],0xb
  42079d:	out    0x55,al
  42079f:	jne    0x4207cb
  4207a1:	idiv   dh
  4207a3:	ror    BYTE PTR [ebp+0x19be2cd],1
  4207a9:	pop    edi
  4207aa:	(bad)  
  4207ab:	(bad)  
  4207ac:	sbb    BYTE PTR ds:0x55b6,dl
  4207b1:	xchg   ebp,eax
  4207b2:	enter  0xb5f4,0xed
  4207b6:	lods   eax,DWORD PTR gs:[esi]
  4207b8:	fdivr  DWORD PTR [eax-0x413608a0]
  4207be:	je     0x420797
  4207c0:	cs xor eax,0x55855a9e
  4207c6:	mov    gs,WORD PTR [ebx+0x768c0d96]
  4207cc:	(bad)  
  4207ce:	pop    esp
  4207cf:	ins    DWORD PTR es:[edi],dx
  4207d0:	or     DWORD PTR ds:[edx],eax
  4207d3:	push   es
  4207d4:	inc    ebp
  4207d5:	out    dx,eax
  4207d6:	in     al,dx
  4207d7:	(bad)
  4207db:	(bad)  
  4207dc:	xchg   ebp,eax
  4207dd:	adc    eax,0x6802e041
  4207e2:	xor    ch,bh
  4207e4:	sbb    DWORD PTR [ebx],ecx
  4207e6:	sahf   
  4207e7:	(bad)  
  4207e8:	call   0x8444a6e7
  4207ed:	ins    DWORD PTR es:[edi],dx
  4207ee:	push   ss
  4207ef:	add    ebx,esi
  4207f1:	sbb    al,0x5a
  4207f3:	test   eax,0x4ec776b8
  4207f8:	sti    
  4207f9:	jne    0x42081a
  4207fb:	or     DWORD PTR [esi-0x38],edx
  4207fe:	sub    bl,BYTE PTR [ecx-0x69]
  420801:	jmp    0x48de09be
  420806:	dec    esp
  420807:	sahf   
  420808:	add    esi,DWORD PTR [esi-0x62]
  42080b:	and    eax,0xff6d1e43
  420810:	push   0x74521897
  420815:	dec    edi
  420816:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420817:	adc    al,0x24
  420819:	cli    
  42081a:	lock ss push ds
  42081d:	push   edx
  42081e:	aaa    
  42081f:	les    ebp,FWORD PTR [eax+0x6f0f184]
  420825:	sbb    al,0x95
  420827:	jl     0x420874
  420829:	mov    bl,0xae
  42082b:	push   cs
  42082c:	mov    WORD PTR [edi-0x45],ds
  42082f:	int3   
  420830:	adc    al,0x83
  420832:	(bad)  
  420833:	cmc    
  420834:	dec    esi
  420835:	mov    dl,0x81
  420837:	shld   DWORD PTR [ecx-0x20ae29ed],esi,cl
  42083e:	mov    eax,ds:0x72f79e14
  420843:	pushf  
  420844:	popf   
  420845:	rol    DWORD PTR [esi-0x16],0x23
  420849:	jne    0x420865
  42084b:	add    al,0x54
  42084d:	cdq    
  42084e:	cmc    
  42084f:	jle    0x4208c3
  420851:	xchg   edi,eax
  420852:	xchg   BYTE PTR [ebx],cl
  420854:	dec    ebx
  420855:	dec    esi
  420856:	dec    ebp
  420857:	cmp    al,0x67
  420859:	mov    ebx,0x3bcf6090
  42085e:	std    
  42085f:	cmp    bl,BYTE PTR [eax-0x772a9dde]
  420865:	add    bh,BYTE PTR [edi]
  420867:	int3   
  420868:	adc    BYTE PTR [eax+0x38ce9abe],cl
  42086e:	xchg   ebp,eax
  42086f:	lods   eax,DWORD PTR ds:[esi]
  420870:	xchg   edi,eax
  420871:	ins    DWORD PTR es:[edi],dx
  420872:	sbb    DWORD PTR [ebp+0x21e491e9],0xffffffd3
  420879:	or     al,0x5a
  42087b:	mov    esp,0x25030c43
  420880:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420881:	mov    ebp,0xe58525bc
  420886:	pop    ds
  420887:	cli    
  420888:	push   ss
  420889:	shl    BYTE PTR [edi+0x596d299a],0xef
  420890:	scas   al,BYTE PTR es:[edi]
  420891:	aas    
  420892:	mov    ebp,0x1371e283
  420897:	and    eax,0x2dc7a3c9
  42089c:	ins    BYTE PTR es:[edi],dx
  42089d:	push   ds
  42089e:	pop    ss
  42089f:	(bad)  
  4208a0:	(bad)  
  4208a2:	or     BYTE PTR ds:0x96899578,dl
  4208a8:	or     al,0x95
  4208aa:	jns    0x42089d
  4208ac:	xor    eax,0xd5b90244
  4208b1:	lods   eax,DWORD PTR ds:[esi]
  4208b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208b3:	or     bl,BYTE PTR [ebp+0x727205c4]
  4208b9:	fcmovb st,st(0)
  4208bb:	mov    eax,0x9fe5d641
  4208c0:	pushf  
  4208c1:	ds sahf 
  4208c3:	iret   
  4208c4:	sub    cl,BYTE PTR [ecx-0x2d3beb2b]
  4208ca:	jbe    0x4208db
  4208cc:	cmc    
  4208cd:	ins    DWORD PTR es:[edi],dx
  4208ce:	fcmove st,st(7)
  4208d0:	pop    ss
  4208d1:	push   0xffffffc1
  4208d3:	pop    edi
  4208d4:	dec    esi
  4208d5:	mov    ?,WORD PTR [ebp+esi*2-0x960ca5e]
  4208dc:	push   es
  4208dd:	and    eax,0x559279c9
  4208e2:	mov    al,0x22
  4208e4:	in     eax,dx
  4208e5:	mov    dh,0x19
  4208e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208e8:	sbb    ah,BYTE PTR [ebp+eiz*4+0x13f70f30]
  4208ef:	mov    ah,0x81
  4208f1:	sbb    eax,0x90fec6a8
  4208f6:	repz mov esi,0xd148e719
  4208fc:	pop    esp
  4208fd:	or     ebx,esp
  4208ff:	jmp    0xe3a77353
  420904:	fild   QWORD PTR [ebp+0x6b]
  420907:	mov    ebp,0x3737d63a
  42090c:	dec    esi
  42090d:	stos   BYTE PTR es:[edi],al
  42090e:	js     0x420938
  420910:	out    dx,al
  420911:	out    0x58,eax
  420913:	std    
  420914:	jge    0x42094d
  420916:	outs   dx,BYTE PTR ds:[esi]
  420917:	repz rol DWORD PTR [eax],cl
  42091a:	test   DWORD PTR [edi+0x76],0x3762ae5e
  420921:	cld    
  420922:	bound  esi,QWORD PTR [ecx+0x32]
  420925:	lods   eax,DWORD PTR ds:[esi]
  420926:	xchg   esi,eax
  420927:	sbb    al,0xe4
  420929:	cmc    
  42092a:	xlat   BYTE PTR ds:[ebx]
  42092b:	mov    al,0xdc
  42092d:	ds ins BYTE PTR es:[edi],dx
  42092f:	xlat   BYTE PTR ds:[ebx]
  420930:	xchg   edi,eax
  420931:	stc    
  420932:	push   es
  420933:	aas    
  420934:	add    BYTE PTR [ebp-0x470f779c],dl
  42093a:	ja     0x4208ed
  42093c:	daa    
  42093d:	je     0x4208d5
  42093f:	jmp    0xdffdefff
  420944:	push   esi
  420945:	mov    ebp,DWORD PTR ds:0xf90af6b8
  42094b:	test   DWORD PTR [ecx],esp
  42094d:	adc    ecx,ecx
  42094f:	pop    ebp
  420950:	push   ds
  420951:	out    dx,eax
  420952:	add    BYTE PTR [eax-0x11f67506],dl
  420958:	add    ch,BYTE PTR [edi+0x22]
  42095b:	xchg   esp,eax
  42095c:	add    ecx,DWORD PTR [ebx+0x47ff9e4a]
  420962:	(bad)  [edx-0x14e13304]
  420968:	or     BYTE PTR [esi],cl
  42096a:	call   0xd5b:0xf8ea82c8
  420971:	out    0xfe,eax
  420973:	inc    edx
  420974:	int3   
  420975:	dec    ecx
  420976:	mov    ss:0xfc1820b7,eax
  42097c:	icebp  
  42097d:	rcl    BYTE PTR [eax],1
  42097f:	mov    edx,0xe92f4179
  420984:	shl    esp,cl
  420986:	xchg   edx,eax
  420987:	or     eax,esp
  420989:	push   cs
  42098a:	cli    
  42098b:	cmp    DWORD PTR [ecx],esp
  42098d:	psubb  mm7,mm4
  420990:	scas   al,BYTE PTR es:[edi]
  420991:	dec    ebp
  420992:	xchg   ecx,eax
  420993:	js     0x420971
  420995:	jge    0x420a0c
  420997:	push   ecx
  420998:	popa   
  420999:	or     ecx,DWORD PTR [edi*2+0x15a35017]
  4209a0:	inc    ebx
  4209a1:	clc    
  4209a2:	jo     0x420a22
  4209a4:	hlt    
  4209a5:	push   ax
  4209a7:	(bad)  
  4209a8:	lds    eax,FWORD PTR [ebp+0x1f44c97d]
  4209ae:	leave  
  4209af:	js     0x42099c
  4209b1:	ret    0xf53
  4209b4:	sahf   
  4209b5:	pop    ecx
  4209b6:	cmovns eax,ebx
  4209b9:	sub    BYTE PTR es:[edx-0x19],dh
  4209bd:	or     eax,0x8f031ad0
  4209c2:	retf   0x2720
  4209c5:	addr16 jbe 0x4209d1
  4209c8:	push   ebp
  4209c9:	xchg   ebx,eax
  4209ca:	sub    ecx,edi
  4209cc:	or     al,0xdd
  4209ce:	loope  0x4209b1
  4209d0:	repnz ins DWORD PTR es:[edi],dx
  4209d2:	push   edi
  4209d3:	sbb    al,0x41
  4209d5:	fucomi st,st(0)
  4209d7:	inc    esp
  4209d8:	fld    QWORD PTR [eax+0x55668a60]
  4209de:	add    ah,ch
  4209e0:	aad    0xb9
  4209e2:	adc    eax,0xcca6ce70
  4209e7:	add    eax,ebx
  4209e9:	pop    ebx
  4209ea:	add    edi,esi
  4209ec:	call   0x59f:0xc141a80b
  4209f3:	push   edx
  4209f4:	mov    dl,0x31
  4209f6:	sub    eax,0x461cfd5d
  4209fb:	(bad)
  4209fe:	and    al,BYTE PTR [esi-0x4d8d30c5]
  420a04:	mov    ebp,0xa7421e0c
  420a09:	ret    
  420a0a:	(bad)  
  420a0b:	xor    BYTE PTR [ebp+0x7ae9b46c],dl
  420a11:	inc    esi
  420a12:	jp     0x420a28
  420a14:	pop    ds
  420a15:	(bad)  
  420a16:	jmp    0x420a32
  420a18:	adc    bl,dh
  420a1a:	and    cl,BYTE PTR [ebp+0x193cfb6c]
  420a20:	add    dl,dh
  420a22:	ja     0x420a4c
  420a24:	loope  0x420a46
  420a26:	push   es
  420a27:	mov    cl,0x8e
  420a29:	mov    dh,0xdd
  420a2b:	mov    ds:0x1d55c2e1,eax
  420a30:	fsubr  QWORD PTR [ebp+0x1e]
  420a33:	xsha1  (bad)
  420a34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a35:	dec    ebx
  420a36:	test   DWORD PTR [ecx+0x58db5c5a],0x30623593
  420a40:	lahf   
  420a41:	stos   BYTE PTR es:[edi],al
  420a42:	and    eax,0x99eb6053
  420a47:	fcom   QWORD PTR [edi]
  420a49:	push   esi
  420a4a:	(bad)  [ecx+0x6503a735]
  420a50:	ja     0x420a28
  420a52:	mov    bh,0x62
  420a54:	popa   
  420a55:	loope  0x420a8d
  420a57:	je     0x4209f5
  420a59:	inc    ebx
  420a5a:	sar    al,1
  420a5c:	pushf  
  420a5d:	and    al,0xf1
  420a5f:	xchg   ebp,eax
  420a60:	mov    al,0x8
  420a62:	mov    bl,BYTE PTR [edi+0x53]
  420a65:	imul   esi,DWORD PTR [ebp-0x3974e34e],0xf45061b5
  420a6f:	mov    ah,0x9d
  420a71:	xor    al,0xc0
  420a73:	jne    0x420a95
  420a75:	dec    ecx
  420a76:	mov    bh,0xe5
  420a78:	mov    WORD PTR [ebx],ds
  420a7a:	loop   0x420acb
  420a7c:	push   ebp
  420a7d:	inc    BYTE PTR ds:0x7871cc4f
  420a83:	and    edi,edi
  420a85:	xor    DWORD PTR [ebx+eax*1],esp
  420a88:	push   edx
  420a89:	jo     0x420a7a
  420a8b:	(bad)  
  420a8c:	mov    ds:0x27b1556a,al
  420a91:	dec    edi
  420a92:	pop    ebx
  420a93:	(bad)  
  420a94:	mov    eax,ds:0x6cf4af6e
  420a99:	push   ebp
  420a9a:	mov    esp,0xbff5f625
  420a9f:	(bad)  
  420aa0:	in     eax,dx
  420aa1:	mov    ds:0x20324ffc,eax
  420aa6:	outs   dx,DWORD PTR ds:[esi]
  420aa7:	adc    DWORD PTR [eax],esi
  420aa9:	jae    0x420a8d
  420aab:	and    bh,BYTE PTR [ecx+0x2572d625]
  420ab1:	cmp    BYTE PTR [edi+eax*2],dl
  420ab4:	adc    DWORD PTR [ebp+edi*8-0x48],0xffffffc6
  420ab9:	cmp    eax,0xeedb66f8
  420abe:	xor    al,0xd6
  420ac0:	aam    0x85
  420ac2:	in     al,dx
  420ac3:	mov    bh,0x21
  420ac5:	xchg   ecx,eax
  420ac6:	add    al,0x7c
  420ac8:	cmp    DWORD PTR ds:0x40729975,0x58
  420acf:	push   cs
  420ad0:	call   0xe6587e70
  420ad5:	sub    esp,DWORD PTR [eax-0x55f39999]
  420adb:	test   DWORD PTR [edi+edx*2-0x530862cf],ebx
  420ae2:	push   esp
  420ae3:	add    eax,0x6078c5d2
  420ae8:	test   BYTE PTR [ebx+0x4c],dl
  420aeb:	jns    0x420b2b
  420aed:	stos   DWORD PTR es:[edi],eax
  420aee:	repz fistp DWORD PTR [ebx]
  420af1:	mov    esi,0xfa17706
  420af6:	iret   
  420af7:	dec    ebp
  420af8:	adc    esi,DWORD PTR [esi-0x17]
  420afb:	push   ds
  420afc:	jno    0x420af6
  420afe:	loopne 0x420b3a
  420b00:	imul   eax,eax,0xffffffe3
  420b03:	les    esi,FWORD PTR [ecx-0x32]
  420b06:	pop    edx
  420b07:	mov    edx,0xfe556789
  420b0c:	push   esi
  420b0d:	hlt    
  420b0e:	fwait
  420b0f:	into   
  420b10:	outs   dx,DWORD PTR ds:[esi]
  420b11:	into   
  420b12:	retf   0x1685
  420b15:	cmp    ebx,DWORD PTR [ecx]
  420b17:	and    BYTE PTR [edx-0x5cc3ef09],0xfe
  420b1e:	mov    ebx,ebp
  420b20:	dec    esi
  420b21:	dec    edx
  420b22:	ret    0x8799
  420b25:	(bad)  
  420b26:	std    
  420b27:	pusha  
  420b28:	mov    ah,0x5f
  420b2a:	mov    ebp,0x396a4308
  420b2f:	(bad)
  420b32:	retf   0x7c4e
  420b35:	(bad)  
  420b36:	stc    
  420b37:	clc    
  420b38:	pop    eax
  420b39:	sub    eax,0x1d8086d0
  420b3e:	std    
  420b3f:	sub    bl,ch
  420b41:	jno    0x420bb0
  420b43:	std    
  420b44:	fcmove st,st(3)
  420b46:	mov    esp,0x66720156
  420b4b:	and    BYTE PTR [ecx-0x2d4d4e85],al
  420b51:	nop
  420b52:	or     DWORD PTR [esi-0x61],0xfffffff7
  420b56:	mov    ds:0x8c271ecc,eax
  420b5b:	ds fcomip st,st(7)
  420b5e:	pop    es
  420b5f:	daa    
  420b60:	shl    BYTE PTR [esi],cl
  420b62:	call   0x9549cb8f
  420b67:	xchg   edx,eax
  420b68:	dec    edi
  420b69:	call   0x9fb7:0xb6f97866
  420b70:	mov    ecx,0xbc47110c
  420b75:	hlt    
  420b76:	retf   0xba95
  420b79:	sbb    DWORD PTR [ebx],0x41f4e3c9
  420b7f:	sbb    cl,bh
  420b81:	(bad)  
  420b82:	stos   BYTE PTR es:[edi],al
  420b83:	loop   0x420b3a
  420b85:	mov    eax,ds:0x6be626a1
  420b8a:	xchg   edx,eax
  420b8b:	mov    ecx,DWORD PTR [edi+eiz*2-0x282623c7]
  420b92:	xchg   esp,eax
  420b93:	outs   dx,DWORD PTR ds:[esi]
  420b94:	test   eax,0x7205e1d7
  420b99:	rcl    BYTE PTR [edx-0x43],cl
  420b9c:	outs   dx,BYTE PTR ds:[esi]
  420b9d:	repnz stos BYTE PTR es:[edi],al
  420b9f:	jge    0x420b8d
  420ba1:	loop   0x420c19
  420ba3:	clc    
  420ba4:	adc    ah,BYTE PTR [esi]
  420ba6:	les    ebx,FWORD PTR [edi+ebx*1-0x3fae9884]
  420bad:	push   0xaddbebe6
  420bb2:	pop    ss
  420bb3:	lock pop es
  420bb5:	in     al,dx
  420bb6:	adc    ebx,DWORD PTR [ebp-0x6c]
  420bb9:	dec    esp
  420bba:	inc    ecx
  420bbb:	cmp    BYTE PTR [eax+0x16b001a1],0xab
  420bc2:	popa   
  420bc3:	fsubr  DWORD PTR [edi-0x16]
  420bc6:	add    eax,0xc4b1216f
  420bcb:	mov    esp,0x65447361
  420bd0:	push   es
  420bd1:	repz (bad) 
  420bd3:	arpl   WORD PTR [ebx+0xfeb01a2],sp
  420bd9:	cwde   
  420bda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420bdb:	add    BYTE PTR [ebx+0x43],ch
  420bde:	repz mov WORD PTR [esi-0x29e93306],gs
  420be5:	add    al,0x2e
  420be7:	enter  0xfb4b,0x8c
  420beb:	fist   DWORD PTR [ebp+0x62]
  420bee:	push   edi
  420bef:	mov    ds:0x5d7877a0,al
  420bf4:	rcl    BYTE PTR [esi+0x2b],cl
  420bf7:	(bad)  
  420bf8:	pop    ss
  420bf9:	inc    esp
  420bfa:	xor    eax,0x1561d85d
  420bff:	mov    cl,0x15
  420c01:	lahf   
  420c02:	and    bl,BYTE PTR [eax+esi*8+0x32]
  420c06:	pop    edi
  420c07:	mov    ds:0x44a12aee,al
  420c0c:	dec    ebx
  420c0d:	jnp    0x420bb7
  420c0f:	frstor [edx+0x3c]
  420c12:	and    al,0x6b
  420c14:	call   0xf63a7c61
  420c19:	mov    BYTE PTR [edi-0x7df03d7a],ch
  420c1f:	mov    bh,0x8
  420c21:	xor    dl,BYTE PTR ds:0xefa57305
  420c27:	mov    ebp,?
  420c29:	repnz in eax,dx
  420c2b:	pop    eax
  420c2c:	add    DWORD PTR [esi+eax*1-0x3fabe675],ecx
  420c33:	pop    esp
  420c34:	das    
  420c35:	addr16 dec ecx
  420c37:	mov    al,0x28
  420c39:	dec    eax
  420c3a:	aaa    
  420c3b:	push   0x34
  420c3d:	ins    BYTE PTR es:[edi],dx
  420c3e:	ffreep st(3)
  420c40:	add    eax,0x9c603006
  420c45:	jge    0x420cb0
  420c47:	xor    bl,ah
  420c49:	mov    eax,DWORD PTR [esi-0x70cbb8e7]
  420c4f:	and    DWORD PTR [edx+0x7b6e11d],esp
  420c55:	shl    BYTE PTR ds:0xd4a1a51a,cl
  420c5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c5c:	out    0x4a,al
  420c5e:	fstp   TBYTE PTR [ebp+edi*4-0x3e46347a]
  420c65:	xchg   esi,eax
  420c66:	add    BYTE PTR [esi-0xe],al
  420c69:	inc    esp
  420c6a:	out    0x58,al
  420c6c:	pop    ebx
  420c6d:	and    edx,DWORD PTR [ebx-0x6c]
  420c70:	xlat   BYTE PTR ds:[ebx]
  420c71:	icebp  
  420c72:	sbb    ebx,DWORD PTR [ecx+0x63]
  420c75:	call   0xc948465f
  420c7a:	jmp    FWORD PTR [eax-0x5e]
  420c7d:	jmp    0xb1e9b2d3
  420c82:	cmp    BYTE PTR [eax+0x1fd51d6f],bl
  420c88:	mov    eax,ds:0x6e3798de
  420c8d:	mov    WORD PTR [edx+0x53],fs
  420c90:	ins    DWORD PTR es:[edi],dx
  420c91:	add    eax,0xdc9381f8
  420c96:	pop    edx
  420c97:	mov    eax,ds:0x5130e3c1
  420c9c:	xchg   ebx,eax
  420c9d:	es push esi
  420c9f:	in     eax,dx
  420ca0:	push   ebp
  420ca1:	inc    edx
  420ca2:	(bad)  
  420ca3:	fucomip st,st(2)
  420ca5:	call   0xc7df003b
  420caa:	aad    0x2c
  420cac:	add    ah,cl
  420cae:	mov    ds:0x3cabae13,eax
  420cb3:	mov    ds:0xb9cf341e,eax
  420cb8:	sbb    DWORD PTR [eax+0x1918e973],ebx
  420cbe:	adc    ah,BYTE PTR [ebx]
  420cc0:	xor    edi,esi
  420cc2:	(bad)  
  420cc3:	xchg   edi,eax
  420cc4:	and    ah,BYTE PTR [eax+0x6b6cb45c]
  420cca:	add    BYTE PTR [edi+edx*8+0x1],0x47
  420ccf:	cdq    
  420cd0:	int    0x53
  420cd2:	push   esp
  420cd3:	dec    ebx
  420cd4:	pop    ebx
  420cd5:	mov    WORD PTR [ecx],?
  420cd7:	cwde   
  420cd8:	push   edx
  420cd9:	sbb    BYTE PTR [esi-0x1e],dl
  420cdc:	sahf   
  420cdd:	jmp    0x420d58
  420cdf:	stos   DWORD PTR es:[edi],eax
  420ce0:	xor    DWORD PTR [eax-0x4c],0xffffffde
  420ce4:	pushf  
  420ce5:	fisttp DWORD PTR [ecx]
  420ce7:	mov    ch,0xae
  420ce9:	cmp    eax,0xe06bba41
  420cee:	clc    
  420cef:	retf   0xce14
  420cf2:	outs   dx,BYTE PTR ds:[esi]
  420cf3:	sbb    dl,BYTE PTR [edi]
  420cf5:	push   edx
  420cf6:	adc    DWORD PTR [esi],esi
  420cf8:	push   esi
  420cf9:	mov    cl,0xf8
  420cfb:	sub    eax,0xde0628ae
  420d00:	xchg   ebp,eax
  420d01:	pop    ebx
  420d02:	cmp    BYTE PTR ds:0xebc202da,0xc2
  420d09:	mov    dh,0x43
  420d0b:	jne    0x420ce2
  420d0d:	imul   edx,DWORD PTR [eax-0x26],0xa
  420d11:	add    dl,ah
  420d13:	repnz imul ebx,DWORD PTR gs:[edx+0x1c66c113],0xfffffffd
  420d1c:	jecxz  0x420d91
  420d1e:	aaa    
  420d1f:	and    BYTE PTR [eax+0x3e],bl
  420d22:	xor    ebp,DWORD PTR [edx-0x47]
  420d25:	jmp    0x206f336a
  420d2a:	fucomi st,st(4)
  420d2c:	sbb    ebx,ebx
  420d2e:	rol    BYTE PTR [edi+0x2d],0x4f
  420d32:	mov    al,ds:0x2b1dd6e0
  420d37:	scas   eax,DWORD PTR es:[edi]
  420d38:	dec    eax
  420d39:	push   0x2f
  420d3b:	clc    
  420d3c:	mov    edx,0xe28d1d42
  420d41:	cs inc eax
  420d43:	out    dx,al
  420d44:	and    DWORD PTR [eax+ebp*2+0x38],edx
  420d48:	or     bh,BYTE PTR [edi]
  420d4a:	stc    
  420d4b:	sbb    BYTE PTR [ebp+0x6399d02],bl
  420d51:	inc    ebp
  420d52:	scas   eax,DWORD PTR es:[edi]
  420d53:	cmc    
  420d54:	and    eax,0xf4867d4c
  420d59:	in     eax,dx
  420d5a:	xchg   DWORD PTR [edi],ebx
  420d5c:	jmp    0xb92b:0x32c8795b
  420d63:	or     DWORD PTR [eax+0x45],0xf6dd0ab1
  420d6a:	push   eax
  420d6b:	push   edi
  420d6c:	sub    DWORD PTR [esi+0x23],ebx
  420d6f:	jl     0x420db2
  420d71:	mov    ah,0xc6
  420d73:	in     eax,0x33
  420d75:	retf   
  420d76:	fisub  WORD PTR [ebx]
  420d78:	je     0x420d7b
  420d7a:	loop   0x420d20
  420d7c:	cdq    
  420d7d:	xlat   BYTE PTR ds:[ebx]
  420d7e:	lods   eax,DWORD PTR ds:[esi]
  420d7f:	fs lahf 
  420d81:	push   0xffffff8a
  420d83:	mov    edx,DWORD PTR [eax+0x2cd46081]
  420d89:	mov    bh,0x84
  420d8b:	scas   al,BYTE PTR es:[edi]
  420d8c:	mov    eax,ds:0x2a4d0f1a
  420d91:	xor    BYTE PTR [ebx+0x4f67c7db],ah
  420d97:	jp     0x420df2
  420d99:	mov    bl,0xcb
  420d9b:	inc    eax
  420d9c:	out    dx,al
  420d9d:	mov    ds:0x609fa58b,eax
  420da2:	popa   
  420da3:	jp     0x420dc1
  420da5:	and    al,0x79
  420da7:	(bad)  
  420da8:	sar    BYTE PTR [ebp+0x47],1
  420dab:	cmp    DWORD PTR [eax],esi
  420dad:	add    DWORD PTR [ecx-0xb],ecx
  420db0:	arpl   dx,di
  420db2:	test   al,0x0
  420db5:	mov    ch,0x73
  420db7:	fs xor cl,dl
  420dba:	jmp    0x420db4
  420dbc:	dec    esi
  420dbd:	mov    esi,0x3d27b586
  420dc2:	push   ecx
  420dc3:	and    ch,BYTE PTR [eax+0x65]
  420dc6:	pop    ebp
  420dc7:	shl    BYTE PTR [ebp+0xf485aaa],0xe5
  420dce:	cs in  eax,0x89
  420dd1:	and    edx,DWORD PTR [esi]
  420dd3:	xchg   ebp,eax
  420dd4:	pop    esi
  420dd5:	push   ss
  420dd6:	push   edi
  420dd7:	push   esi
  420dd8:	pushf  
  420dd9:	dec    edi
  420dda:	addr16 jb 0x420e46
  420ddd:	xchg   ecx,eax
  420dde:	out    0x1d,al
  420de0:	lock outs dx,BYTE PTR ds:[esi]
  420de2:	inc    ebp
  420de3:	and    bx,WORD PTR [ecx]
  420de6:	sbb    BYTE PTR [esi-0x17],ah
  420de9:	sub    eax,0xb27d7e93
  420dee:	cwde   
  420def:	sar    DWORD PTR [edi+edx*2-0x2e3fb17],cl
  420df6:	(bad)  
  420df7:	aad    0xbd
  420df9:	add    ah,ch
  420dfb:	out    dx,eax
  420dfc:	cmp    ah,BYTE PTR [edi]
  420dfe:	mov    DWORD PTR [eax+0x7fcfd703],edx
  420e04:	je     0x420e60
  420e06:	cmp    al,0x68
  420e08:	xor    ebx,DWORD PTR [eax+ebx*1+0x68fc4ac2]
  420e0f:	sahf   
  420e10:	pop    ecx
  420e11:	mov    ds:0x7f275893,al
  420e16:	push   ecx
  420e17:	jb     0x420de7
  420e19:	out    dx,eax
  420e1a:	pop    es
  420e1b:	mov    ch,0xef
  420e1d:	retf   
  420e1e:	pop    edi
  420e1f:	pop    edx
  420e20:	outs   dx,DWORD PTR ds:[esi]
  420e21:	sbb    BYTE PTR [edi+ecx*2],0x56
  420e25:	addr16 inc esi
  420e27:	cmp    BYTE PTR [ebx-0x4c],ch
  420e2a:	mov    dl,0xab
  420e2c:	inc    edi
  420e2d:	xor    eax,0x22bcce89
  420e32:	sbb    BYTE PTR [ecx+ebp*2],ch
  420e35:	sub    eax,0x52f35139
  420e3a:	cmp    al,0x96
  420e3c:	sub    DWORD PTR [edx],0xbc437b6d
  420e42:	or     edx,DWORD PTR [eax-0x2c555d6e]
  420e48:	outs   dx,DWORD PTR ds:[esi]
  420e49:	int3   
  420e4a:	jb     0x420e94
  420e4c:	or     ebp,DWORD PTR [eax+0x37]
  420e4f:	mov    edi,0x69819b09
  420e54:	inc    ebx
  420e55:	stc    
  420e56:	daa    
  420e57:	add    BYTE PTR [esi+0x63],0x44
  420e5b:	push   ds
  420e5c:	ins    BYTE PTR es:[edi],dx
  420e5d:	jmp    0x420e46
  420e5f:	(bad)  
  420e61:	sahf   
  420e62:	inc    edi
  420e63:	and    al,0xd6
  420e65:	inc    ebp
  420e66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e67:	push   ebp
  420e68:	ins    DWORD PTR es:[edi],dx
  420e69:	out    dx,eax
  420e6a:	dec    ebx
  420e6b:	fcom   DWORD PTR [ecx]
  420e6d:	push   ebp
  420e6e:	fsub   QWORD PTR [ecx]
  420e70:	arpl   dx,sp
  420e72:	sub    DWORD PTR [edx+0x41285002],edi
  420e78:	add    esi,DWORD PTR [esi-0x1f]
  420e7b:	jno    0x420e81
  420e7d:	loopne 0x420e05
  420e7f:	pusha  
  420e80:	inc    edi
  420e81:	popf   
  420e82:	cmp    al,BYTE PTR [esi-0x2a]
  420e85:	adc    eax,0x9236a720
  420e8a:	out    dx,al
  420e8b:	(bad)  
  420e8c:	sub    dl,BYTE PTR [ebp-0x6dc99ca9]
  420e92:	clc    
  420e93:	icebp  
  420e94:	jl     0x420f0d
  420e96:	adc    eax,0xc6dcc9c7
  420e9b:	and    eax,0x8a4d90be
  420ea0:	pop    ds
  420ea1:	push   esp
  420ea2:	mov    cl,0x45
  420ea4:	dec    esi
  420ea5:	pop    DWORD PTR [ecx+0x11171f1f]
  420eab:	adc    edx,DWORD PTR [edx-0x11]
  420eae:	pop    ss
  420eaf:	adc    dl,cl
  420eb1:	scas   al,BYTE PTR es:[edi]
  420eb2:	mov    esi,edx
  420eb4:	es sub al,0xc8
  420eb8:	jmp    0x3b97d1f1
  420ebd:	stc    
  420ebe:	pushf  
  420ebf:	mov    al,ds:0x8eb5cd46
  420ec4:	mov    ebp,0x3014561b
  420ec9:	jno    0x420f13
  420ecb:	rcl    BYTE PTR [edx+edx*2+0x49611bd7],cl
  420ed2:	test   al,0xfd
  420ed4:	adc    eax,DWORD PTR [ebx]
  420ed6:	mov    bl,0xbd
  420ed8:	dec    esp
  420ed9:	xchg   esi,eax
  420eda:	pop    esi
  420edb:	jmp    0x420f4d
  420edd:	cld    
  420ede:	sub    BYTE PTR [esi-0x669c96f7],dl
  420ee4:	aas    
  420ee5:	rol    DWORD PTR [edx],1
  420ee7:	xchg   esi,esp
  420ee9:	or     eax,0x9ed9c939
  420eee:	push   ds
  420eef:	jle    0x420f2c
  420ef1:	mov    esp,0xdc912832
  420ef6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ef7:	push   cs
  420ef8:	push   edi
  420ef9:	das    
  420efa:	and    ebx,DWORD PTR [esi]
  420efc:	pop    edx
  420efd:	adc    al,0x15
  420eff:	(bad)  
  420f01:	(bad)  
  420f02:	mov    al,ds:0x4a4d0b96
  420f07:	xor    dl,BYTE PTR [edx+0x27]
  420f0a:	pop    ds
  420f0b:	pop    esi
  420f0c:	fdivr  QWORD PTR [edx-0x6]
  420f0f:	mov    al,0xdb
  420f11:	repz in al,dx
  420f13:	test   ecx,edx
  420f15:	add    al,0x7f
  420f17:	jnp    0x420f92
  420f19:	out    0x7,eax
  420f1b:	shl    DWORD PTR [edi-0x15d65822],cl
  420f21:	dec    esp
  420f22:	xor    esi,ebx
  420f24:	dec    edi
  420f25:	test   dl,0xf3
  420f28:	xchg   ecx,eax
  420f29:	nop
  420f2a:	aaa    
  420f2b:	push   cs
  420f2c:	lods   eax,DWORD PTR ds:[esi]
  420f2d:	and    DWORD PTR [edi],ebp
  420f2f:	ss jne 0x420eda
  420f32:	push   es
  420f33:	xchg   esp,eax
  420f34:	mov    esi,0x9fcc5de7
  420f39:	(bad)  
  420f3a:	mov    dl,0x1e
  420f3c:	xlat   BYTE PTR ds:[ebx]
  420f3d:	add    edx,0x2b0e1b4c
  420f43:	dec    edx
  420f44:	call   0x4c9e:0x6aa2b073
  420f4b:	push   esp
  420f4c:	into   
  420f4d:	daa    
  420f4e:	aas    
  420f4f:	(bad)  
  420f50:	mov    ebp,0xfe1941ff
  420f55:	fild   WORD PTR ds:0x567d7c3f
  420f5b:	xor    al,0x48
  420f5d:	cli    
  420f5e:	sub    al,0x38
  420f60:	imul   ecx,edi,0x4bc69266
  420f66:	sahf   
  420f67:	adc    DWORD PTR [eax+0x6457a571],ebx
  420f6d:	retf   
  420f6e:	inc    eax
  420f6f:	cmp    cl,0x73
  420f72:	(bad)  
  420f73:	jg     0x420f68
  420f75:	fwait
  420f76:	test   DWORD PTR [ebx-0x6d],ebx
  420f79:	sbb    al,0xa6
  420f7b:	mov    WORD PTR [eax],?
  420f7d:	jecxz  0x420fec
  420f7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f80:	adc    DWORD PTR [eax-0x57],0xc2584cd5
  420f87:	mov    dh,0x52
  420f89:	xchg   ebx,eax
  420f8a:	xchg   ecx,eax
  420f8b:	pop    esi
  420f8c:	add    dl,BYTE PTR [edx-0x6b]
  420f8f:	mov    eax,ds:0x67370fc2
  420f94:	xor    dh,ch
  420f96:	xchg   ecx,eax
  420f97:	mov    edi,0xb553c26d
  420f9c:	jle    0x420fce
  420f9e:	sbb    eax,eax
  420fa0:	push   ds
  420fa1:	xor    DWORD PTR [eax],0xfffffff8
  420fa4:	jne    0x420f4d
  420fa6:	mov    bl,0xc2
  420fa8:	cmp    BYTE PTR [esi-0x1],bl
  420fab:	or     BYTE PTR [edi+0x4cabb02b],cl
  420fb1:	cdq    
  420fb2:	sbb    al,0x87
  420fb4:	xchg   ebx,eax
  420fb5:	arpl   di,bp
  420fb7:	dec    ebx
  420fb8:	sub    al,0xad
  420fba:	push   esi
  420fbb:	dec    esp
  420fbc:	xchg   edi,eax
  420fbd:	add    ecx,DWORD PTR [edi-0x1e]
  420fc0:	adc    DWORD PTR [eax],edi
  420fc2:	fisttp QWORD PTR [ebx]
  420fc4:	pop    esi
  420fc5:	scas   al,BYTE PTR es:[edi]
  420fc6:	stos   DWORD PTR es:[edi],eax
  420fc7:	scas   eax,DWORD PTR es:[edi]
  420fc8:	clc    
  420fc9:	inc    ebp
  420fca:	dec    ecx
  420fcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420fcc:	xchg   ebp,eax
  420fcd:	cli    
  420fce:	mov    bl,BYTE PTR [ebp-0x3a]
  420fd1:	xchg   edi,eax
  420fd2:	test   eax,0x5e2d4696
  420fd7:	fcmove st,st(0)
  420fd9:	adc    eax,DWORD PTR [edi]
  420fdb:	or     ch,BYTE PTR [ebx+edx*8]
  420fde:	cli    
  420fdf:	in     eax,dx
  420fe0:	pop    esi
  420fe1:	adc    eax,0x5f059967
  420fe6:	sbb    esp,ecx
  420fe8:	mov    DWORD PTR [ebp-0xf],0x7b828fdd
  420fef:	test   eax,0xb8406a47
  420ff5:	jne    0x420f9b
  420ff7:	or     esi,DWORD PTR [eax-0x45]
  420ffa:	lahf   
  420ffb:	jns    0x420ff5
  420ffd:	mov    eax,ds:0xb0b77900
  421002:	std    
  421003:	mov    BYTE PTR [esi],al
  421005:	mov    esi,0xdf9351dc
  42100a:	fcomp  DWORD PTR ds:0xf454e9f9
  421010:	cmp    edx,DWORD PTR [ebp-0x6a97f84e]
  421016:	popf   
  421017:	imul   edi,esp,0xffffff81
  42101a:	call   0xf280:0xa2b69b2b
  421021:	add    al,BYTE PTR [ebp+0x415f5849]
  421027:	add    dh,bl
  421029:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42102a:	stc    
  42102b:	sbb    eax,0xede09cc3
  421030:	lods   al,BYTE PTR ds:[esi]
  421031:	pop    esp
  421032:	fcom   DWORD PTR [edi+0x59]
  421035:	js     0x421036
  421037:	push   edi
  421038:	aam    0xd9
  42103a:	repz xchg ebp,eax
  42103c:	pop    es
  42103d:	bound  ebp,QWORD PTR ds:0x23919d27
  421043:	pop    edx
  421044:	mov    al,0xa6
  421046:	out    dx,al
  421047:	mov    ebx,0xfb235d7d
  42104c:	loop   0x4210b1
  42104e:	stos   DWORD PTR es:[edi],eax
  42104f:	cmc    
  421050:	ror    DWORD PTR [edi+0x12],0xa5
  421054:	add    bl,ah
  421056:	rcl    bl,1
  421058:	mov    al,ds:0x7e5f5d55
  42105d:	mov    al,ds:0xaac4cb8b
  421062:	cmp    ch,BYTE PTR [esp+ebx*1+0x251abb7f]
  421069:	dec    esp
  42106a:	fwait
  42106b:	out    dx,al
  42106c:	lea    ecx,[eax+0x3]
  42106f:	stos   BYTE PTR es:[edi],al
  421070:	jns    0x4210bb
  421072:	sbb    al,0x50
  421074:	pop    edx
  421075:	mov    es,WORD PTR [edi+esi*8]
  421078:	jbe    0x4210ab
  42107a:	adc    ah,al
  42107c:	cld    
  42107d:	jo     0x4210b9
  42107f:	mov    dh,0x4f
  421081:	lds    esi,FWORD PTR [ecx+ebp*1+0x1]
  421085:	les    ebx,FWORD PTR [edi-0x53]
  421088:	mov    ds:0x99d7451f,eax
  42108d:	pop    ss
  42108e:	xor    al,0x9d
  421090:	xchg   edx,eax
  421091:	adc    al,0xbf
  421093:	jmp    0x421043
  421095:	jbe    0x421107
  421097:	ss mov al,0xe3
  42109a:	stos   DWORD PTR es:[edi],eax
  42109b:	cwde   
  42109c:	test   DWORD PTR [edx-0x5a0c99ea],ebx
  4210a2:	push   esp
  4210a3:	dec    ebx
  4210a4:	jnp    0x421059
  4210a6:	(bad)  
  4210a7:	dec    edi
  4210a8:	and    ebx,ebp
  4210aa:	xchg   ebx,eax
  4210ab:	cmp    esp,eax
  4210ad:	mov    esi,0x9b080bdf
  4210b2:	repz adc BYTE PTR [esi],dl
  4210b5:	rcl    bl,cl
  4210b7:	mov    BYTE PTR [esi-0xe],dh
  4210ba:	pop    es
  4210bb:	aas    
  4210bc:	je     0x421045
  4210be:	imul   ecx,eax,0xc9687cc7
  4210c4:	mov    ebx,0x6433ced6
  4210c9:	push   ebx
  4210ca:	jae    0x4210cf
  4210cc:	fcom   QWORD PTR [ecx]
  4210ce:	push   eax
  4210cf:	push   cs
  4210d0:	xor    DWORD PTR [edx+0x5c7784f0],edx
  4210d6:	inc    edi
  4210d7:	inc    ebx
  4210d8:	sbb    al,cl
  4210da:	inc    eax
  4210db:	call   0x33f9:0x53c4281d
  4210e2:	int    0xbf
  4210e4:	add    esp,DWORD PTR ds:0xa378150a
  4210ea:	into   
  4210eb:	cs mov ebp,0x4bcdcefd
  4210f1:	cmp    ecx,DWORD PTR [ebp-0x4f228c6e]
  4210f7:	fnsave [ebx]
  4210f9:	repz pushf 
  4210fb:	xor    al,0x4e
  4210fd:	fdiv   DWORD PTR [esi]
  4210ff:	sbb    BYTE PTR ds:0x526ca54e,bh
  421105:	xchg   ebx,eax
  421106:	mov    gs,WORD PTR [eax-0x6c24d849]
  42110c:	ds mov bl,0x8
  42110f:	inc    esi
  421110:	or     dh,BYTE PTR [ebx-0x15]
  421113:	aas    
  421114:	das    
  421115:	stos   BYTE PTR es:[edi],al
  421116:	pop    eax
  421117:	and    al,0xd0
  421119:	add    al,0xa6
  42111b:	push   ds
  42111c:	lods   al,BYTE PTR ds:[esi]
  42111d:	test   DWORD PTR [esi],ebx
  42111f:	mov    esp,0x6e2971a8
  421124:	jle    0x421167
  421126:	into   
  421127:	call   0x5a88a8e7
  42112c:	or     al,0xcf
  42112e:	xchg   ecx,eax
  42112f:	scas   al,BYTE PTR es:[edi]
  421130:	push   ebx
  421131:	leave  
  421132:	or     eax,0xda0706d3
  421137:	int    0x16
  421139:	into   
  42113a:	inc    edi
  42113b:	icebp  
  42113c:	jne    0x421118
  42113e:	adc    al,0x1a
  421140:	lods   al,BYTE PTR ds:[esi]
  421141:	out    0xe9,al
  421143:	sub    bh,dl
  421145:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421146:	fisttp DWORD PTR [eax]
  421148:	sbb    bl,bh
  42114a:	jb     0x42119a
  42114c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42114d:	aam    0x4c
  42114f:	adc    BYTE PTR [edx+0x55],ah
  421152:	imul   ebx,DWORD PTR [esi-0x39ef0c8],0x8b6000f7
  42115c:	adc    cl,BYTE PTR [ecx]
  42115e:	mov    DWORD PTR [edx+0x1c],esi
  421161:	cmp    eax,0xf58c1e40
  421166:	sbb    edi,DWORD PTR [eax+0x34]
  421169:	dec    esp
  42116a:	ins    BYTE PTR es:[edi],dx
  42116b:	and    eax,DWORD PTR [ebx+0x418c04f9]
  421171:	sbb    ch,BYTE PTR [esi+0x7ce06b89]
  421177:	pop    edx
  421178:	jge    0x4211f6
  42117a:	sbb    edx,DWORD PTR [edi]
  42117c:	dec    ecx
  42117d:	push   0xffffffa6
  42117f:	xchg   ebp,eax
  421180:	dec    ebx
  421181:	aas    
  421182:	int3   
  421183:	enter  0xd306,0xc
  421187:	mov    bh,0x8e
  421189:	fadd   DWORD PTR [eax+0x1ee920cf]
  42118f:	repz test bl,ch
  421192:	icebp  
  421193:	xchg   DWORD PTR [ebx],esp
  421195:	icebp  
  421196:	es cld 
  421198:	(bad)  
  421199:	xchg   esi,eax
  42119a:	out    0x4e,eax
  42119c:	xchg   edi,eax
  42119d:	mov    ebx,0x7a6fef3f
  4211a2:	add    eax,0xa02e5605
  4211a7:	fwait
  4211a8:	push   0xffffffff
  4211aa:	dec    edx
  4211ab:	jg     0x4211ea
  4211ad:	(bad)  
  4211ae:	fist   DWORD PTR [ebp-0x67]
  4211b1:	daa    
  4211b2:	xor    esi,DWORD PTR [ecx+0x5e]
  4211b5:	std    
  4211b6:	clc    
  4211b7:	leave  
  4211b8:	mov    DWORD PTR [esi-0x1cee95c8],edx
  4211be:	lea    esi,[ebx+eiz*4+0x56791aa4]
  4211c5:	and    DWORD PTR [edi],edi
  4211c7:	inc    esp
  4211c8:	add    edi,DWORD PTR [ecx]
  4211ca:	dec    ebx
  4211cb:	je     0x4211e8
  4211cd:	gs push 0x1d
  4211d0:	cwde   
  4211d1:	inc    ebx
  4211d2:	repnz xchg edi,eax
  4211d4:	adc    eax,0xb188e733
  4211d9:	dec    edx
  4211da:	jb     0x4211b2
  4211dc:	shl    al,0x28
  4211df:	and    al,0x57
  4211e1:	aas    
  4211e2:	adc    DWORD PTR [ebp-0x49018550],eax
  4211e8:	lahf   
  4211e9:	xchg   edx,eax
  4211ea:	dec    ebp
  4211eb:	loopne 0x4211db
  4211ed:	mov    ebx,0xc7c34f37
  4211f2:	inc    eax
  4211f3:	and    BYTE PTR [edx-0x42351c6],bh
  4211f9:	add    BYTE PTR [ecx],ch
  4211fb:	fidivr WORD PTR [esi-0x2d7429c0]
  421201:	mov    esp,0xc198bc1d
  421206:	retf   0x9cd3
  421209:	xor    bh,BYTE PTR [ebx]
  42120b:	or     bh,ch
  42120d:	sub    BYTE PTR [edx],ah
  42120f:	aam    0xde
  421211:	jle    0x421262
  421213:	mov    ds:0x7f25a047,al
  421218:	(bad)  
  421219:	jmp    0x421264
  42121b:	pop    ss
  42121c:	xor    al,0x41
  42121e:	cld    
  42121f:	jne    0x4211f0
  421221:	and    BYTE PTR [edx],0x9b
  421224:	and    al,0x5e
  421226:	scas   al,BYTE PTR es:[edi]
  421227:	popf   
  421228:	fwait
  421229:	jle    0x421232
  42122b:	jg     0x421274
  42122d:	in     al,0x75
  42122f:	fcom   DWORD PTR [ecx+0x50ad1373]
  421235:	ror    BYTE PTR [ecx],1
  421237:	ins    DWORD PTR es:[edi],dx
  421238:	ss scas al,BYTE PTR es:[edi]
  42123a:	xor    bl,BYTE PTR [edi]
  42123c:	popf   
  42123d:	stc    
  42123e:	dec    esp
  42123f:	test   DWORD PTR ds:0x245fa35b,ebx
  421245:	dec    eax
  421246:	ins    BYTE PTR es:[edi],dx
  421247:	sahf   
  421248:	mov    esp,0x5ef66967
  42124d:	(bad)  
  42124e:	cmp    al,0xe7
  421250:	js     0x421277
  421252:	xchg   edi,eax
  421253:	hlt    
  421254:	dec    ebp
  421255:	fadd   st(3),st
  421257:	mov    esp,0xa05ce279
  42125c:	push   esi
  42125d:	int3   
  42125e:	push   ds
  42125f:	and    dl,BYTE PTR [esi+edi*1-0x7027b499]
  421266:	lds    ebx,FWORD PTR [edx-0x10]
  421269:	ret    0xe730
  42126c:	add    al,0xb5
  42126e:	inc    edx
  42126f:	xor    BYTE PTR [ecx],bl
  421271:	xor    BYTE PTR [ebx+0x1],0xeb
  421275:	jmp    0x42b6c044
  42127a:	dec    esi
  42127b:	daa    
  42127c:	ds jbe 0x421284
  42127f:	mov    ah,0x60
  421281:	xchg   edx,eax
  421282:	pop    eax
  421283:	loop   0x421220
  421285:	adc    al,0xf7
  421287:	inc    ecx
  421288:	out    dx,al
  421289:	popa   
  42128a:	dec    ebp
  42128b:	jae    0x421224
  42128d:	push   0xef1bc2df
  421292:	inc    esp
  421293:	sub    BYTE PTR [esi+0x60],dl
  421296:	pop    esi
  421297:	leave  
  421298:	sti    
  421299:	(bad)  
  42129a:	push   ds
  42129b:	pop    ecx
  42129c:	stc    
  42129d:	sub    DWORD PTR [ebp-0x2f],esp
  4212a0:	es sti 
  4212a2:	sbb    eax,0xa5129e2f
  4212a7:	add    al,0xaa
  4212a9:	sub    eax,0x6a17ee4c
  4212ae:	add    BYTE PTR [ecx],cl
  4212b0:	jecxz  0x421298
  4212b2:	mov    ds:0xe0e98ddd,eax
  4212b8:	fmul   st,st(4)
  4212ba:	push   es
  4212bb:	push   eax
  4212bc:	cmp    DWORD PTR [eax-0x75f00062],edx
  4212c2:	and    al,0x46
  4212c4:	mov    dh,0x81
  4212c6:	jp     0x4212f6
  4212c8:	cs sti 
  4212ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4212cb:	dec    ecx
  4212cc:	out    0x99,al
  4212ce:	jecxz  0x42133e
  4212d0:	aad    0x38
  4212d2:	jb     0x4212a1
  4212d4:	shr    BYTE PTR [ebx],1
  4212d6:	dec    edi
  4212d7:	sbb    al,0x5
  4212d9:	imul   BYTE PTR [esi+0x7b]
  4212dc:	fisubr DWORD PTR ss:[edi+0x54afbaa7]
  4212e3:	jmp    DWORD PTR [edi+eiz*4+0x27]
  4212e7:	dec    dx
  4212e9:	push   eax
  4212ea:	push   0xfffffffb
  4212ec:	sub    eax,0xc232cbb0
  4212f1:	(bad)  
  4212f2:	mov    edx,0x61a7488c
  4212f8:	in     al,dx
  4212f9:	xchg   ecx,eax
  4212fa:	mov    ch,BYTE PTR [eax]
  4212fc:	push   cs
  4212fd:	push   edx
  4212fe:	shr    BYTE PTR [eax+0xe],1
  421301:	dec    esp
  421302:	dec    esp
  421303:	xchg   BYTE PTR [edi],dh
  421305:	push   cs
  421306:	mov    ebp,0xebdea44b
  42130b:	sub    eax,0x3f29acbb
  421310:	retf   0x9e2f
  421313:	retf   0x95e9
  421316:	test   eax,0xd4b3bf0c
  42131b:	into   
  42131c:	std    
  42131d:	ss jbe 0x4212f7
  421320:	sti    
  421321:	ins    DWORD PTR es:[edi],dx
  421322:	dec    ebx
  421323:	and    eax,DWORD PTR ds:0x4cfddce0
  421329:	adc    esi,DWORD PTR [eax]
  42132b:	xchg   edi,eax
  42132c:	xor    ah,bl
  42132e:	(bad)  
  42132f:	idiv   esp
  421331:	or     BYTE PTR [esi-0x22],al
  421334:	add    eax,0x9ddab9c4
  421339:	sbb    dl,al
  42133b:	clc    
  42133c:	(bad)  
  42133d:	fdivr  QWORD PTR [eax+0x2f]
  421340:	sbb    bh,ch
  421342:	jno    0x42137a
  421344:	or     al,BYTE PTR [eax+eax*8+0x36ec422e]
  42134b:	mov    edx,DWORD PTR fs:[ebp+ebp*2+0x2208276]
  421353:	dec    ebp
  421354:	mov    bl,0x74
  421356:	jp     0x421328
  421358:	sub    bh,ah
  42135a:	mov    dh,0x3
  42135c:	dec    ebx
  42135d:	(bad)  
  42135e:	pop    ds
  42135f:	sbb    BYTE PTR [ecx-0x31560dca],cl
  421365:	sahf   
  421366:	pop    ebx
  421367:	mov    ebx,0x822b8294
  42136c:	and    esi,DWORD PTR [ecx+0x32aacd5]
  421372:	push   ss
  421373:	stos   BYTE PTR es:[edi],al
  421374:	lods   al,BYTE PTR ds:[esi]
  421375:	xchg   dh,ah
  421377:	and    edx,DWORD PTR [eax+eiz*2-0x457bf4c6]
  42137e:	push   es
  42137f:	pop    esp
  421380:	add    edi,DWORD PTR [eax+eax*8]
  421383:	scas   al,BYTE PTR es:[edi]
  421384:	cmp    al,0x3a
  421386:	xor    eax,0xffffffe7
  421389:	loope  0x421357
  42138b:	add    BYTE PTR [esi+0x632f635a],0x6e
  421392:	(bad)  
  421393:	stos   BYTE PTR es:[edi],al
  421394:	sahf   
  421395:	adc    al,0xa0
  421397:	out    dx,eax
  421398:	push   ebp
  421399:	mov    ebp,0x93fb9c2b
  42139e:	jae    0x421334
  4213a0:	dec    ebx
  4213a1:	pop    DWORD PTR [ebx-0x246ae720]
  4213a7:	mov    eax,ds:0x791c309a
  4213ac:	mov    ch,0x8
  4213ae:	call   0xd9ab:0x6f522b50
  4213b5:	push   cs
  4213b6:	imul   ecx,DWORD PTR [ecx+0x6c],0x255f3cb
  4213bd:	push   ss
  4213be:	inc    ebp
  4213c0:	outs   dx,BYTE PTR ds:[esi]
  4213c1:	mov    dh,0x60
  4213c3:	dec    eax
  4213c4:	cmp    al,0xf2
  4213c6:	mov    BYTE PTR [esi],0x23
  4213c9:	in     eax,dx
  4213ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213cb:	jg     0x42138d
  4213cd:	stos   BYTE PTR es:[edi],al
  4213ce:	push   esp
  4213cf:	call   0x83d70de2
  4213d4:	sub    al,0xa1
  4213d6:	mov    DWORD PTR [edx-0x354e21b],esp
  4213dc:	jle    0x421455
  4213de:	xchg   ebp,eax
  4213df:	retf   
  4213e0:	mov    ebx,0x92c053de
  4213e5:	pop    ds
  4213e6:	inc    edi
  4213e7:	call   0xd274:0xe52ecca3
  4213ee:	repz mov ch,0xb7
  4213f1:	adc    dl,BYTE PTR [ebp+0x63]
  4213f4:	fdivr  st(4),st
  4213f6:	lods   al,BYTE PTR ds:[esi]
  4213f7:	ficom  DWORD PTR [ebp+0x5d]
  4213fa:	cmp    BYTE PTR [edx+0x294d56c6],bl
  421400:	dec    esi
  421401:	mov    ecx,0x9e039138
  421406:	js     0x421404
  421408:	inc    esp
  421409:	aas    
  42140a:	pop    esp
  42140b:	push   edx
  42140c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42140d:	out    0x96,al
  42140f:	xor    BYTE PTR [ebx-0x39b8e7e4],bh
  421415:	sub    DWORD PTR [ebx],0xf5c5f062
  42141b:	adc    ebx,0x7
  42141e:	xchg   BYTE PTR [edi-0x1d],ch
  421421:	inc    ebx
  421422:	jmp    0xa8b4:0xff3121d2
  421429:	push   ebx
  42142a:	mov    esp,0x40aa5d02
  42142f:	sbb    cl,0x81
  421432:	imul   edi,DWORD PTR [esi],0x460fb5d7
  421438:	add    ebp,ebx
  42143a:	sub    DWORD PTR ds:0xa791cdd6,ebx
  421440:	xor    cl,bh
  421442:	jl     0x421446
  421444:	mov    ch,0xa3
  421446:	xchg   edi,eax
  421447:	xor    al,0xcd
  421449:	xor    DWORD PTR [eax+0x5b25026a],ebx
  42144f:	pop    edx
  421450:	(bad)  
  421452:	mov    bh,0x12
  421454:	mov    ds:0x58f85124,al
  421459:	(bad)  
  42145a:	(bad)  
  42145b:	retf   
  42145c:	mov    esp,0x16e9a25c
  421461:	fs aaa 
  421463:	mov    edi,?
  421465:	mov    ch,0xe7
  421467:	mov    dh,0x92
  421469:	pop    es
  42146a:	mov    eax,0xcb271693
  42146f:	ror    DWORD PTR [ebx-0x4bfa86d0],1
  421475:	jmp    0x42144e
  421477:	pop    es
  421478:	and    al,BYTE PTR [edx-0x44abd180]
  42147e:	jns    0x4214f8
  421480:	or     edx,edx
  421482:	and    ah,BYTE PTR [ebx-0x6c]
  421485:	pushf  
  421486:	ret    0x7bb1
  421489:	jmp    0x86bf:0x994cb6b5
  421490:	push   ss
  421491:	jo     0x42149b
  421493:	mov    eax,DWORD PTR [eax+eax*8+0x31]
  421497:	js     0x421510
  421499:	push   0x486ffad7
  42149e:	(bad)  
  42149f:	lahf   
  4214a0:	shl    ebx,0x10
  4214a3:	mov    ds:0x220682f2,al
  4214a8:	scas   al,BYTE PTR es:[edi]
  4214a9:	mov    edx,0xa5ead08d
  4214ae:	ror    DWORD PTR [edi-0x12b5ab89],cl
  4214b4:	pop    edx
  4214b5:	mov    dl,0x93
  4214b7:	jns    0x4214a6
  4214b9:	jge    0x4214c1
  4214bb:	sbb    eax,0xaa38c23b
  4214c0:	ins    BYTE PTR es:[edi],dx
  4214c1:	mov    edi,0x3978968f
  4214c6:	xor    eax,0xa2a41d89
  4214cb:	loop   0x42152c
  4214cd:	jno    0x42152a
  4214cf:	mov    esp,0x3cf23782
  4214d4:	bound  esi,QWORD PTR [edi-0x496edfbb]
  4214da:	jge    0x4214b9
  4214dc:	xor    DWORD PTR [ecx],eax
  4214de:	ins    DWORD PTR es:[edi],dx
  4214df:	xchg   ebp,eax
  4214e0:	lock mov dh,al
  4214e3:	mov    BYTE PTR ds:0x152df64f,bl
  4214e9:	sar    DWORD PTR [ebx+0x6],cl
  4214ec:	push   cs
  4214ed:	ss sbb al,0xc2
  4214f0:	or     eax,DWORD PTR [esi+0x24647d2b]
  4214f6:	add    eax,0xe7a9f65b
  4214fb:	pop    ebp
  4214fc:	outs   dx,DWORD PTR ds:[esi]
  4214fd:	dec    ebx
  4214fe:	test   BYTE PTR [ecx-0x34bdc7f],ch
  421504:	lds    ecx,FWORD PTR [edi+0x79e74502]
  42150a:	pop    esi
  42150b:	test   al,0x16
  42150d:	sbb    DWORD PTR [edi-0x744d6e25],esp
  421513:	xor    BYTE PTR [eax+0x1396bb69],al
  421519:	dec    ebx
  42151a:	outs   dx,BYTE PTR ds:[esi]
  42151b:	jnp    0x421590
  42151d:	xor    DWORD PTR [edi+ecx*8-0x2d59fe39],0x46dcdab3
  421528:	in     al,0xa4
  42152a:	arpl   WORD PTR [ebx+ebp*2-0x17],bx
  42152e:	jae    0x4214cc
  421530:	xchg   esi,eax
  421531:	sbb    dl,BYTE PTR [ebx+0x21]
  421534:	gs mov bl,0x93
  421537:	mov    esp,0xfddcfda1
  42153c:	or     BYTE PTR [ecx+0x3a],dh
  42153f:	push   es
  421540:	rol    DWORD PTR [edx+0x56],cl
  421543:	add    eax,0x5fd8c47a
  421548:	(bad)  
  421549:	xlat   BYTE PTR ds:[ebx]
  42154a:	ret    
  42154b:	mov    dl,0xfb
  42154d:	adc    al,0xb2
  42154f:	stos   DWORD PTR es:[edi],eax
  421550:	stos   DWORD PTR es:[edi],eax
  421551:	sub    al,0xa2
  421553:	(bad)  
  421554:	jecxz  0x4215a1
  421556:	cmc    
  421557:	ror    DWORD PTR [edi+0x35b8078e],0x90
  42155e:	cmp    ch,BYTE PTR [ebx-0x17]
  421561:	xor    ch,al
  421563:	mov    bl,BYTE PTR [ecx]
  421565:	or     al,al
  421567:	mov    WORD PTR [eax+0x60],gs
  42156a:	mov    ah,0x79
  42156c:	(bad)  
  42156d:	das    
  42156e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42156f:	pushf  
  421570:	pop    edi
  421571:	jbe    0x4215eb
  421573:	cdq    
  421574:	mov    ?,esp
  421576:	gs jecxz 0x421595
  421579:	std    
  42157a:	jp     0x4215e8
  42157c:	jnp    0x42153d
  42157e:	dec    esp
  42157f:	add    eax,0x1e79c6a6
  421584:	clc    
  421585:	test   al,0x47
  421587:	into   
  421588:	pushf  
  421589:	retf   
  42158a:	adc    BYTE PTR [ebx+0x41],dh
  42158d:	loope  0x42160a
  42158f:	xor    dl,BYTE PTR [ebp-0x2e0d8960]
  421595:	mov    bh,0xff
  421597:	js     0x4215fc
  421599:	jns    0x4215bf
  42159b:	xor    DWORD PTR [ebx],edi
  42159d:	stc    
  42159e:	dec    ecx
  42159f:	jae    0x4215ce
  4215a1:	mov    bl,0x76
  4215a3:	clc    
  4215a4:	sub    eax,0x36b1926f
  4215a9:	ja     0x42158b
  4215ab:	or     al,0x68
  4215ad:	imul   edx,DWORD PTR [edi-0x5cddc442],0xa6a5b78b
  4215b7:	or     al,0x19
  4215b9:	outs   dx,DWORD PTR ds:[esi]
  4215ba:	xchg   BYTE PTR [edi],bl
  4215bc:	pop    ds
  4215bd:	mov    ds:0x42e86d0b,eax
  4215c2:	or     al,0x32
  4215c4:	mov    ds:0xe7362c73,eax
  4215c9:	jmp    0x4215ab
  4215cb:	leave  
  4215cc:	sbb    al,0x2
  4215ce:	test   eax,0xd97a9839
  4215d3:	mov    edi,0xc7f8bb7c
  4215d8:	out    0x6a,al
  4215da:	in     eax,0xb0
  4215dc:	mov    al,ds:0x87797d97
  4215e1:	jno    0x42161b
  4215e3:	cmp    al,0xb3
  4215e5:	mov    esi,0x8876c42e
  4215ea:	pop    ebx
  4215eb:	scas   al,BYTE PTR es:[edi]
  4215ec:	ficomp WORD PTR [ebx+0x2e259940]
  4215f2:	xor    BYTE PTR fs:[esi],dh
  4215f5:	hlt    
  4215f6:	dec    esi
  4215f7:	sub    dh,BYTE PTR ds:0xfb5c32f4
  4215fd:	mov    ecx,0x5fb91bd0
  421602:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421603:	jo     0x4215de
  421605:	fild   WORD PTR [edx-0x6b]
  421608:	jmp    0x5d39:0x18529c70
  42160f:	mov    edi,0xafedf061
  421614:	std    
  421615:	fist   DWORD PTR [ecx+0x44104efb]
  42161b:	arpl   WORD PTR [eax+0x1ae4aa5b],cx
  421621:	push   edi
  421622:	jne    0x42169b
  421624:	adc    DWORD PTR gs:[ecx],ebx
  421627:	test   BYTE PTR [ecx+0x2877b221],bl
  42162d:	inc    ebp
  42162e:	dec    ecx
  42162f:	xor    BYTE PTR [eax-0x7c],bl
  421632:	add    al,0x9c
  421634:	sbb    BYTE PTR [esi-0x36],0x65
  421638:	in     al,0x3f
  42163a:	add    DWORD PTR ds:0x94e592a9,ebp
  421640:	fs push ds
  421642:	call   FWORD PTR [ecx-0x153b9d5]
  421648:	mov    WORD PTR [ebp-0x9055240],fs
  42164e:	or     BYTE PTR [eax-0x27b5641f],bh
  421654:	mov    esi,0x8208e762
  421659:	push   ecx
  42165a:	jecxz  0x421661
  42165c:	cmp    esi,DWORD PTR [edx]
  42165e:	dec    edi
  42165f:	out    0xd3,al
  421661:	ins    BYTE PTR es:[edi],dx
  421662:	pusha  
  421663:	lock pop ss
  421665:	fwait
  421666:	stos   BYTE PTR es:[edi],al
  421667:	xor    eax,0xde660729
  42166c:	sbb    ebp,DWORD PTR ds:0x483a585b
  421672:	int    0xeb
  421674:	ret    
  421675:	push   edi
  421676:	pxor   mm0,QWORD PTR [edx+0x411fb649]
  42167d:	xchg   esi,eax
  42167e:	in     eax,0x93
  421680:	sbb    BYTE PTR [esi],0xf8
  421683:	std    
  421684:	loop   0x421656
  421686:	pop    ecx
  421687:	retf   0x1513
  42168a:	dec    edx
  42168b:	xor    DWORD PTR [eax-0x58],0x2a6dace9
  421692:	adc    eax,0xdceccc5d
  421697:	leave  
  421698:	aas    
  421699:	xchg   DWORD PTR [esi-0x1f],ebx
  42169c:	aas    
  42169d:	sbb    ch,BYTE PTR [edi+0x1138b03c]
  4216a3:	cmova  ebx,DWORD PTR [ecx+0x3]
  4216a7:	outs   dx,DWORD PTR ds:[esi]
  4216a8:	cdq    
  4216a9:	and    ecx,DWORD PTR [edi+0x2c]
  4216ac:	xor    eax,0x164e6b21
  4216b1:	adc    al,0x45
  4216b3:	call   0xa169:0x6b99a608
  4216ba:	and    eax,0x50339c9c
  4216bf:	retf   0xa40c
  4216c2:	sub    BYTE PTR [esi+edi*2],0xf
  4216c6:	mov    dh,0xd3
  4216c8:	mov    al,BYTE PTR [eax+0x2]
  4216cb:	mov    eax,0x1aa34e54
  4216d0:	(bad)  
  4216d1:	aad    0x3e
  4216d3:	sub    DWORD PTR [ecx-0x2],ebx
  4216d6:	iret   
  4216d7:	call   0x9204:0xa11d24b3
  4216de:	xchg   edx,eax
  4216df:	push   eax
  4216e0:	adc    al,0x7b
  4216e2:	cs mov esi,0xd490b9c4
  4216e8:	xor    DWORD PTR ds:0x5515c480,ebp
  4216ee:	les    esi,FWORD PTR [edx]
  4216f0:	push   0x61bf6d86
  4216f5:	mov    dl,0xa4
  4216f7:	lds    edi,FWORD PTR [ecx+eiz*2]
  4216fa:	sbb    DWORD PTR [esi+ebx*8+0x23],0x53471c48
  421702:	test   al,0x3a
  421704:	sahf   
  421705:	dec    esp
  421706:	icebp  
  421707:	test   DWORD PTR [ebx+0x12],ecx
  42170a:	sbb    DWORD PTR [eax],0x78
  42170d:	sub    DWORD PTR [ebx+ebp*8+0x7],ebp
  421711:	cmp    esi,0xffffff8e
  421714:	sar    DWORD PTR [edi+edi*4],cl
  421717:	ins    DWORD PTR es:[edi],dx
  421718:	popf   
  421719:	push   ebx
  42171a:	jge    0x421796
  42171c:	outs   dx,DWORD PTR ds:[esi]
  42171d:	retf   
  42171e:	push   esi
  42171f:	stc    
  421720:	add    BYTE PTR [ebx-0x1e0b3a75],cl
  421726:	mov    edx,DWORD PTR [ebp-0x75]
  421729:	add    al,0xac
  42172b:	inc    esp
  42172c:	imul   edi,DWORD PTR [edi-0x7af961c4],0xffffffa8
  421733:	hlt    
  421734:	jle    0x4217af
  421736:	xchg   ecx,eax
  421737:	mov    ecx,0x9bf044da
  42173c:	mov    DWORD PTR [esi-0x700e99f1],eax
  421742:	inc    ecx
  421743:	push   esp
  421744:	pop    edi
  421745:	push   edx
  421746:	jge    0x4217be
  421748:	jmp    0x211:0x7d47968c
  42174f:	outs   dx,DWORD PTR ds:[esi]
  421750:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421751:	je     0x421783
  421753:	adc    bl,BYTE PTR [eax-0x485370b8]
  421759:	outs   dx,DWORD PTR ds:[esi]
  42175a:	jns    0x421700
  42175c:	mov    dl,0xc3
  42175e:	inc    esi
  42175f:	dec    ecx
  421760:	mov    dh,0x7d
  421762:	in     al,dx
  421763:	adc    BYTE PTR [edx+0x1ef60c02],bl
  421769:	inc    ecx
  42176a:	call   0xd406:0xe236ad15
  421771:	or     eax,0x3cfcbbfa
  421776:	cmp    ah,BYTE PTR [ecx]
  421778:	push   0x8e4dbcaa
  42177d:	rol    BYTE PTR [eax-0x4370ba58],cl
  421783:	add    esp,DWORD PTR [ebx-0x3ce97260]
  421789:	inc    edi
  42178a:	ds xchg esi,eax
  42178c:	test   BYTE PTR ds:0xf9520a30,bh
  421792:	and    al,0xbf
  421794:	jge    0x4217c2
  421796:	aam    0x18
  421798:	ja     0x421735
  42179a:	xchg   ebp,eax
  42179b:	adc    al,0xbf
  42179d:	push   edi
  42179e:	imul   ecx,esi,0xc853d599
  4217a4:	add    al,0xfe
  4217a6:	xlat   BYTE PTR ds:[ebx]
  4217a7:	pop    ebp
  4217a8:	bound  esi,QWORD PTR [edx]
  4217aa:	ins    DWORD PTR es:[di],dx
  4217ac:	lea    esi,[edx-0x21697dc]
  4217b2:	(bad)  
  4217b3:	cdq    
  4217b4:	jl     0x421758
  4217b6:	push   0xfffffff4
  4217b8:	dec    ebx
  4217b9:	mov    eax,ds:0x8a05ccba
  4217be:	xchg   esi,eax
  4217bf:	pop    edi
  4217c0:	adc    DWORD PTR [eax+0x7d],edi
  4217c3:	xchg   DWORD PTR [ebp-0x276310dd],ebx
  4217c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4217ca:	hlt    
  4217cb:	es js  0x421824
  4217ce:	out    0xbd,eax
  4217d0:	fdiv   DWORD PTR ds:[eax]
  4217d3:	int3   
  4217d4:	add    ebx,DWORD PTR [ebp-0x2]
  4217d7:	sti    
  4217d8:	push   ebp
  4217d9:	cmp    bh,BYTE PTR ds:0x3f7d4db1
  4217df:	add    edi,DWORD PTR [eax+esi*8+0x8]
  4217e3:	cmp    ecx,DWORD PTR [edi]
  4217e5:	fwait
  4217e6:	lea    ecx,[edi-0x58]
  4217e9:	fwait
  4217ea:	push   ebx
  4217eb:	jbe    0x421808
  4217ed:	cmp    ah,BYTE PTR [esi+esi*4]
  4217f0:	sub    DWORD PTR [edi+0x62],esi
  4217f3:	mov    ds:0xd8665000,eax
  4217f8:	sub    BYTE PTR [eax-0x70],ch
  4217fb:	les    edx,FWORD PTR [ebp-0x729fd72f]
  421801:	xchg   BYTE PTR [ebp+ebp*8-0x80],cl
  421805:	xchg   ebx,eax
  421806:	add    BYTE PTR [ebp+0x52],bh
  421809:	into   
  42180a:	sub    BYTE PTR [ecx],dl
  42180c:	cmp    BYTE PTR [eax+0x319cc74e],al
  421812:	aam    0x74
  421814:	pop    ds
  421815:	and    DWORD PTR [eax+0x7c],esp
  421818:	jecxz  0x42183a
  42181a:	cld    
  42181b:	(bad)  [ecx+0x544a12a8]
  421821:	mov    al,ds:0xfc640428
  421826:	call   0xed36:0x87ea89fd
  42182d:	(bad)  
  42182e:	fcomp  QWORD PTR ds:0x660571ec
  421834:	jae    0x4217ff
  421836:	mov    al,ds:0x508ebcc2
  42183b:	clc    
  42183c:	ins    BYTE PTR es:[edi],dx
  42183d:	jo     0x42182a
  42183f:	push   cs
  421840:	scas   eax,DWORD PTR es:[edi]
  421841:	and    eax,0xad2cfe6
  421846:	mov    ah,0x3b
  421848:	dec    esi
  421849:	inc    esp
  42184a:	push   0x23
  42184c:	add    ecx,esp
  42184e:	xchg   BYTE PTR cs:[esi-0x3f],al
  421852:	mov    bh,0xd5
  421854:	enter  0x6796,0x27
  421858:	cmp    ecx,DWORD PTR [edi-0x6d]
  42185b:	data16 sub dl,ch
  42185e:	mov    dh,0xd
  421860:	loope  0x42184e
  421862:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421863:	jne    0x42181b
  421865:	jecxz  0x4218b3
  421867:	fnstcw WORD PTR [esi-0x6]
  42186a:	sub    al,0xa1
  42186c:	push   edi
  42186d:	enter  0x76b,0x5d
  421871:	sbb    al,0x2
  421873:	mov    al,ah
  421875:	retf   0x41a8
  421878:	and    BYTE PTR [ebx-0x5e],0x93
  42187c:	test   eax,0x20b80d15
  421881:	shl    ah,cl
  421883:	mov    ebx,0x80d84fab
  421888:	icebp  
  421889:	push   ecx
  42188a:	leave  
  42188b:	dec    edi
  42188c:	inc    BYTE PTR [ecx-0x78efa6d7]
  421892:	addr16 mov ds:0x3a72,eax
  421896:	mov    ebp,DWORD PTR [ebp+0x61]
  421899:	xor    al,0xa9
  42189b:	push   0x1d9a0118
  4218a0:	sbb    eax,0xd2a45b6f
  4218a5:	cdq    
  4218a6:	nop
  4218a7:	sub    edi,eax
  4218a9:	ds inc ebp
  4218ab:	xadd   ecx,esp
  4218ae:	mov    ebp,0xdb6eed9f
  4218b3:	dec    cl
  4218b5:	call   0x5f8679e2
  4218ba:	dec    ebx
  4218bb:	jnp    0x421849
  4218bd:	lods   al,BYTE PTR ds:[esi]
  4218be:	enter  0x2e89,0x7a
  4218c2:	add    BYTE PTR [esi-0x67c6f918],dh
  4218c8:	gs scas al,BYTE PTR es:[edi]
  4218ca:	dec    edi
  4218cb:	sbb    edx,ecx
  4218cd:	dec    edi
  4218ce:	dec    esi
  4218cf:	or     BYTE PTR [eax-0x40],bh
  4218d2:	xchg   ebx,eax
  4218d3:	retf   0x2adb
  4218d6:	jo     0x421939
  4218d8:	invd   
  4218da:	inc    eax
  4218db:	jbe    0x4218b7
  4218dd:	bound  esi,QWORD PTR [ebx-0x66]
  4218e0:	xchg   ecx,eax
  4218e1:	loope  0x4218a7
  4218e3:	cwde   
  4218e4:	loope  0x4218d8
  4218e6:	lahf   
  4218e7:	jo     0x421898
  4218e9:	ins    DWORD PTR es:[edi],dx
  4218ea:	popf   
  4218eb:	js     0x4218a4
  4218ed:	test   DWORD PTR [edx+0x12],eax
  4218f0:	inc    eax
  4218f1:	js     0x42189f
  4218f3:	sbb    dl,0x1
  4218f6:	pop    ds
  4218f7:	test   al,0x4
  4218f9:	add    al,0x66
  4218fb:	add    ch,al
  4218fd:	out    dx,eax
  4218fe:	push   es
  4218ff:	(bad)  
  421900:	fistp  WORD PTR [edi]
  421902:	adc    al,0x84
  421904:	jecxz  0x4218c7
  421906:	in     al,dx
  421907:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421908:	inc    esp
  421909:	sub    bl,BYTE PTR [ecx+ebp*8+0x42]
  42190d:	jecxz  0x421968
  42190f:	(bad)  
  421910:	fidivr WORD PTR [edx]
  421912:	dec    ebx
  421913:	iret   
  421914:	cmp    dh,BYTE PTR ds:0x5fce5199
  42191a:	pop    ecx
  42191b:	les    esi,FWORD PTR [esi+0x723d5ae6]
  421921:	outs   dx,BYTE PTR ds:[esi]
  421922:	clc    
  421923:	lods   eax,DWORD PTR ds:[esi]
  421924:	dec    ecx
  421925:	mov    dl,0xf
  421927:	sub    al,0xc8
  421929:	je     0x4218c7
  42192b:	add    esi,edi
  42192d:	fcomi  st,st(0)
  42192f:	js     0x4219a0
  421931:	xor    bh,BYTE PTR [esi+eax*4-0x511f4f39]
  421938:	shl    DWORD PTR [ebp-0x5],cl
  42193b:	push   ds
  42193c:	rol    DWORD PTR [edi+edx*8+0x60b5ea9],0x16
  421944:	pop    edx
  421945:	inc    esi
  421946:	cmp    BYTE PTR [edi-0x2324b8de],0x98
  42194d:	pop    ebx
  42194e:	mov    BYTE PTR [esi+0x14],al
  421951:	push   edi
  421952:	call   0x9431256e
  421957:	push   cs
  421958:	outs   dx,DWORD PTR ds:[esi]
  421959:	fld    DWORD PTR [ecx+0x1ff619e2]
  42195f:	mov    al,0xe
  421961:	or     dh,cl
  421963:	call   0x8ea8:0xb0225018
  42196a:	cmp    eax,0x7f60e4c8
  42196f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421970:	push   cs
  421971:	mul    edx
  421973:	pop    edi
  421974:	shl    DWORD PTR [esi+0x35],cl
  421977:	js     0x421934
  421979:	das    
  42197a:	xchg   edx,eax
  42197b:	pop    eax
  42197c:	mov    BYTE PTR [edx],ch
  42197e:	int    0x7c
  421980:	add    DWORD PTR [eax],edx
  421982:	fisttp DWORD PTR [ecx+ebp*4]
  421985:	pop    ss
  421986:	cwde   
  421987:	test   DWORD PTR [edx+0x2f1aa95],edx
  42198d:	add    al,0x6d
  42198f:	(bad)  
  421991:	aas    
  421992:	sbb    DWORD PTR [ecx],ecx
  421994:	fmulp  st(5),st
  421996:	out    dx,eax
  421997:	xor    dl,bl
  421999:	(bad)  
  42199a:	xor    eax,0x25e49f9
  42199f:	sub    al,0xd7
  4219a1:	std    
  4219a2:	mov    bl,BYTE PTR [esi+ebx*8-0x62d72a2]
  4219a9:	fabs   
  4219ab:	js     0x4219aa
  4219ad:	out    0xd9,al
  4219af:	mov    ch,0x6b
  4219b1:	shr    BYTE PTR [edx+0x78],0x35
  4219b5:	(bad)  
  4219b6:	leave  
  4219b7:	scas   eax,DWORD PTR es:[edi]
  4219b8:	push   ss
  4219b9:	mov    BYTE PTR [ebp+esi*1+0x52],cl
  4219bd:	ins    BYTE PTR es:[edi],dx
  4219be:	fadd   QWORD PTR [edx]
  4219c0:	sbb    dl,ah
  4219c2:	sub    dl,BYTE PTR [edx]
  4219c4:	mov    al,ds:0xd8dd1e27
  4219c9:	leave  
  4219ca:	sub    esi,DWORD PTR [ecx]
  4219cc:	adc    al,0x8a
  4219ce:	adc    bl,cl
  4219d0:	cdq    
  4219d1:	test   DWORD PTR [edx+0x7f1256f7],edx
  4219d7:	dec    eax
  4219d8:	lods   al,BYTE PTR ds:[esi]
  4219d9:	out    dx,eax
  4219da:	je     0x421a21
  4219dc:	mov    al,0x8d
  4219de:	leave  
  4219df:	sub    bh,BYTE PTR [ebp+0x7d]
  4219e2:	test   eax,0x818be42f
  4219e7:	inc    esp
  4219e8:	push   eax
  4219e9:	(bad)  
  4219ea:	fstp   DWORD PTR [eax-0x32]
  4219ed:	mov    eax,0x7295c460
  4219f2:	inc    esp
  4219f3:	outs   dx,DWORD PTR ds:[esi]
  4219f4:	cli    
  4219f5:	pop    eax
  4219f6:	mov    cl,BYTE PTR [esi-0x6d]
  4219f9:	test   DWORD PTR [eax+ebp*2],eax
  4219fc:	xor    BYTE PTR [ecx+0x37],bl
  4219ff:	das    
  421a00:	hlt    
  421a01:	cmp    al,0x13
  421a03:	add    cl,cl
  421a05:	mov    ch,0x4d
  421a07:	(bad)
  421a0a:	and    DWORD PTR [edi-0x5c],esp
  421a0d:	xor    esp,DWORD PTR [ecx+0x76]
  421a10:	adc    eax,0x327ed717
  421a15:	jns    0x4219f4
  421a17:	aas    
  421a18:	dec    ecx
  421a19:	xchg   edx,eax
  421a1a:	cli    
  421a1b:	out    0x6e,eax
  421a1d:	daa    
  421a1e:	jmp    0x9fd4:0x5351acd2
  421a25:	xchg   edi,eax
  421a26:	rcr    DWORD PTR [esi+0x53],1
  421a29:	mov    dh,0x38
  421a2b:	push   eax
  421a2c:	push   edi
  421a2d:	push   ebp
  421a2e:	dec    edx
  421a2f:	pop    edx
  421a30:	mov    dh,0x1b
  421a32:	cld    
  421a33:	push   0x28
  421a35:	out    0x29,al
  421a37:	daa    
  421a38:	neg    DWORD PTR [eax+0x6d]
  421a3b:	adc    DWORD PTR [esi+0x128db28e],0x2b
  421a42:	and    al,0xfe
  421a44:	push   es
  421a45:	lahf   
  421a46:	idiv   DWORD PTR [esi-0xd]
  421a49:	aas    
  421a4a:	lods   eax,DWORD PTR ds:[esi]
  421a4b:	in     eax,dx
  421a4c:	data16 in al,0x31
  421a4f:	dec    edx
  421a50:	push   ecx
  421a51:	dec    edx
  421a52:	imul   edx,DWORD PTR [eax+0x7f],0xffffff91
  421a56:	push   edx
  421a57:	jmp    0x30e8:0x7a35e3cc
  421a5e:	shr    DWORD PTR [edx+0x67468e92],0x37
  421a65:	test   al,0x6b
  421a67:	pop    eax
  421a68:	in     eax,dx
  421a69:	xchg   ebx,eax
  421a6a:	pop    ebp
  421a6b:	jnp    0x421a12
  421a6d:	ss int 0x22
  421a70:	cmp    BYTE PTR [edx],dh
  421a72:	aas    
  421a73:	scas   al,BYTE PTR es:[edi]
  421a74:	mov    edx,0x556b782b
  421a79:	icebp  
  421a7a:	ret    
  421a7b:	fisttp QWORD PTR [edi]
  421a7d:	pop    esp
  421a7e:	rcr    BYTE PTR [edx+0x4052580a],cl
  421a84:	cmp    edx,esp
  421a86:	stc    
  421a87:	xchg   edx,eax
  421a88:	(bad)  
  421a8a:	mov    dh,0xfc
  421a8c:	cmp    ch,BYTE PTR [ebp-0x4e944e00]
  421a92:	sub    eax,0x3da07ec5
  421a97:	or     DWORD PTR [edi+edi*2+0x61410b99],ebx
  421a9e:	ja     0x421a81
  421aa0:	stc    
  421aa1:	scas   al,BYTE PTR es:[edi]
  421aa2:	or     eax,0x1c4320b4
  421aa7:	jmp    0x18b0:0xa456acd3
  421aae:	mov    cl,0xbc
  421ab0:	sbb    esp,edi
  421ab2:	call   0xe1c3d2d1
  421ab7:	sub    DWORD PTR [esi-0x26],ecx
  421aba:	and    bl,BYTE PTR [ebx+0x680ce29e]
  421ac0:	sub    eax,0xc5157f4b
  421ac5:	lea    ebp,[eax+0x2d918f18]
  421acb:	outs   dx,BYTE PTR ds:[esi]
  421acc:	pop    edx
  421acd:	lods   al,BYTE PTR ds:[esi]
  421ace:	dec    ebp
  421acf:	enter  0xc6b6,0x33
  421ad3:	or     DWORD PTR [esi-0x30],ebp
  421ad6:	enter  0x29a5,0x50
  421ada:	jg     0x421a73
  421adc:	inc    ebp
  421add:	mov    al,0x55
  421adf:	jp     0x421ae4
  421ae1:	es ja  0x421ac1
  421ae4:	scas   al,BYTE PTR es:[edi]
  421ae5:	sahf   
  421ae6:	mov    ?,WORD PTR [eax]
  421ae8:	pop    ecx
  421ae9:	cmp    DWORD PTR [esi+0xc6dff6],edi
  421aef:	sub    dh,bh
  421af1:	clc    
  421af2:	shl    DWORD PTR [edi],cl
  421af4:	sub    eax,0x6ad36ab1
  421af9:	pop    edx
  421afa:	inc    eax
  421afb:	pop    ebx
  421afc:	xchg   esp,eax
  421afd:	cmp    bl,BYTE PTR fs:[esi+0x5ae050ba]
  421b04:	adc    ch,ch
  421b06:	push   ss
  421b07:	popa   
  421b08:	xchg   edx,eax
  421b09:	push   ebp
  421b0a:	jl     0x421ae1
  421b0c:	sti    
  421b0d:	xchg   ebp,eax
  421b0e:	div    BYTE PTR [edi-0x70ef5ba5]
  421b14:	mov    cl,0x96
  421b16:	lock add eax,0xb3e0844
  421b1c:	lods   al,BYTE PTR ds:[esi]
  421b1d:	mov    edx,DWORD PTR ds:0xd88305b8
  421b23:	xchg   ebx,eax
  421b24:	and    al,0x4c
  421b26:	xchg   edi,eax
  421b27:	aaa    
  421b28:	in     al,0x2f
  421b2a:	xchg   edi,eax
  421b2b:	iret   
  421b2c:	and    ah,ch
  421b2e:	sub    ebx,edx
  421b30:	hlt    
  421b31:	xor    ecx,DWORD PTR [edi+0x36bb2638]
  421b37:	int3   
  421b38:	jmp    0xf434d668
  421b3d:	(bad)
  421b40:	mov    ds:0x63a8002,eax
  421b45:	dec    edx
  421b46:	mov    ah,0x99
  421b48:	and    al,0xe5
  421b4a:	retf   
  421b4b:	xor    eax,DWORD PTR [esi-0x2fe3c519]
  421b51:	ds or  al,0xbd
  421b54:	add    ecx,eax
  421b56:	push   edi
  421b57:	addr16 popf 
  421b59:	cmc    
  421b5a:	pop    eax
  421b5b:	bts    DWORD PTR [ebx+0x28],edx
  421b5f:	addr16 push esp
  421b61:	out    dx,eax
  421b62:	push   ecx
  421b63:	ins    BYTE PTR es:[edi],dx
  421b64:	mov    ds:0x4446a027,eax
  421b69:	lock (bad) 
  421b6d:	mov    DWORD PTR [ebp+0xb],ebp
  421b70:	adc    al,0x3c
  421b72:	(bad)  
  421b73:	data16 into 
  421b75:	sbb    eax,DWORD PTR [ebx-0xed2ea]
  421b7b:	cmc    
  421b7c:	add    ecx,0x710bfdd6
  421b82:	arpl   WORD PTR [edx-0x4c],di
  421b85:	adc    eax,0x45e5d7e5
  421b8a:	lds    esp,FWORD PTR [edx]
  421b8c:	iret   
  421b8d:	jg     0x421b8b
  421b8f:	call   DWORD PTR [eax+0x2bd54e72]
  421b95:	sbb    ch,bl
  421b97:	cmc    
  421b98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b99:	sti    
  421b9a:	sti    
  421b9b:	in     al,0x93
  421b9d:	push   ebp
  421b9e:	mov    esi,0x7bd92973
  421ba3:	out    dx,eax
  421ba4:	mov    eax,0xd9c0e6ca
  421ba9:	pop    ss
  421baa:	sub    DWORD PTR [eax],edi
  421bac:	lods   al,BYTE PTR ds:[esi]
  421bad:	adc    edi,DWORD PTR [edx]
  421baf:	ds jmp 0xc0344bab
  421bb5:	push   edi
  421bb6:	pop    edx
  421bb7:	mov    cl,0x72
  421bb9:	out    dx,eax
  421bba:	jne    0x421c2b
  421bbc:	aaa    
  421bbd:	sahf   
  421bbe:	repz stc 
  421bc0:	jecxz  0x421c34
  421bc2:	nop
  421bc3:	adc    ebp,0x2c
  421bc6:	and    ah,dl
  421bc8:	ret    0xf8c6
  421bcb:	(bad)  
  421bcc:	into   
  421bcd:	rol    ebp,0x88
  421bd0:	nop
  421bd1:	loopne 0x421b95
  421bd3:	(bad)  
  421bd4:	xchg   ebp,eax
  421bd5:	das    
  421bd6:	popa   
  421bd7:	ror    dh,cl
  421bd9:	in     al,0x71
  421bdb:	std    
  421bdc:	jns    0x421c5d
  421bde:	sub    DWORD PTR [ebx-0x4fba0604],0x3f
  421be5:	mov    edx,0x56134581
  421bea:	mov    DWORD PTR [eax+ecx*4-0x4c],esp
  421bee:	cdq    
  421bef:	inc    ebx
  421bf0:	push   cs
  421bf1:	inc    ecx
  421bf2:	cmc    
  421bf3:	xor    ebp,DWORD PTR [ebx+0x1a]
  421bf6:	mov    dh,BYTE PTR [edi-0x64]
  421bf9:	rcr    DWORD PTR [edi-0x10],0xb9
  421bfd:	cdq    
  421bfe:	into   
  421bff:	mov    dl,0xa7
  421c01:	mov    edx,0x7b2aae73
  421c06:	jmp    0x421beb
  421c08:	mov    ecx,0xb05e6a6a
  421c0d:	xor    bh,BYTE PTR [ebp-0x1]
  421c10:	mov    dl,0x15
  421c12:	jmp    0x421c75
  421c14:	cmp    DWORD PTR [ebx],esp
  421c16:	mov    ch,0xa8
  421c18:	fwait
  421c19:	sti    
  421c1a:	adc    DWORD PTR [esi+0x45],0xffffffa5
  421c1e:	mov    edi,0x46db295d
  421c23:	in     al,0xc2
  421c25:	cs jl  0x421c5f
  421c28:	fadd   st(0),st
  421c2a:	dec    esp
  421c2b:	push   ecx
  421c2c:	(bad)  
  421c2d:	and    BYTE PTR [ecx+0x5e],dl
  421c30:	inc    ecx
  421c31:	aad    0x83
  421c33:	imul   eax,DWORD PTR [ecx+0x4f],0xffffffa0
  421c37:	outs   dx,BYTE PTR ds:[esi]
  421c38:	mov    dl,ch
  421c3a:	mov    bh,0xfd
  421c3c:	push   0x49b10acd
  421c41:	jb     0x421ca3
  421c43:	addr16 sbb al,0x8d
  421c46:	sub    dl,BYTE PTR [edi-0x6a]
  421c49:	bound  edx,QWORD PTR [edi+0x65]
  421c4c:	dec    ebp
  421c4d:	cli    
  421c4e:	cmp    al,0x1f
  421c50:	retf   0xccfc
  421c53:	xor    DWORD PTR [esp+eiz*8+0x4ff37de5],ebx
  421c5a:	jnp    0x421c7f
  421c5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c5d:	inc    ebx
  421c5e:	bound  ecx,QWORD PTR [ebx]
  421c60:	inc    edi
  421c61:	xchg   edi,eax
  421c62:	sub    eax,0x50cb44e7
  421c67:	mov    eax,ds:0xf9a0297a
  421c6c:	ds daa 
  421c6e:	out    dx,al
  421c6f:	pushf  
  421c70:	ja     0x421cbd
  421c72:	(bad)  
  421c73:	mov    edx,0xd7ced208
  421c78:	fild   WORD PTR [ebx-0x2d]
  421c7b:	and    bl,BYTE PTR [ecx+0x1446849c]
  421c81:	fdivp  st(5),st
  421c83:	push   eax
  421c84:	stos   BYTE PTR es:[edi],al
  421c85:	xchg   ebp,eax
  421c86:	xchg   esi,eax
  421c87:	into   
  421c88:	push   ds
  421c89:	sub    ebx,edx
  421c8b:	xchg   edi,eax
  421c8c:	sbb    al,BYTE PTR [edi+0x3e51a0df]
  421c92:	into   
  421c93:	fsub   QWORD PTR [ecx-0x3b59bc6]
  421c99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c9a:	pusha  
  421c9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c9c:	dec    ebx
  421c9d:	icebp  
  421c9e:	and    eax,0xf98e3e00
  421ca3:	int    0x2
  421ca5:	push   es
  421ca6:	nop
  421ca7:	mov    WORD PTR [ecx],fs
  421ca9:	adc    dh,BYTE PTR [edi]
  421cab:	loope  0x421cf5
  421cad:	jg     0x421c68
  421caf:	lods   al,BYTE PTR ds:[esi]
  421cb0:	js     0x421ca3
  421cb2:	(bad)  
  421cb3:	cmp    edx,DWORD PTR [esi]
  421cb5:	mov    ecx,ebp
  421cb7:	rol    BYTE PTR [edi],cl
  421cb9:	and    al,0x13
  421cbb:	mov    al,ds:0xf07d85c2
  421cc0:	(bad)  
  421cc2:	mov    BYTE PTR [eax+0x47f56460],cl
  421cc8:	test   al,0x3a
  421cca:	call   0x62c8b527
  421ccf:	(bad)  
  421cd0:	(bad)  
  421cd1:	out    dx,eax
  421cd2:	adc    BYTE PTR [esi+edx*8],cl
  421cd5:	repnz cmp dl,BYTE PTR [edx]
  421cd8:	push   ebx
  421cd9:	jl     0x421d2a
  421cdb:	pop    esp
  421cdc:	seto   BYTE PTR [esi]
  421cdf:	fcom   DWORD PTR [edi+0x68]
  421ce2:	hlt    
  421ce3:	lods   eax,DWORD PTR ds:[esi]
  421ce4:	mov    edi,eax
  421ce6:	push   0x6eebc656
  421ceb:	scas   eax,DWORD PTR es:[edi]
  421cec:	xchg   ecx,eax
  421ced:	dec    ebx
  421cee:	add    dl,BYTE PTR [edi+ecx*4-0x63]
  421cf2:	push   eax
  421cf3:	popf   
  421cf4:	lods   eax,DWORD PTR ds:[esi]
  421cf5:	sti    
  421cf6:	sahf   
  421cf7:	aaa    
  421cf8:	push   ebp
  421cf9:	push   ebx
  421cfa:	pop    esi
  421cfb:	jae    0x421d0a
  421cfd:	mov    ebx,0xea7a36f3
  421d02:	push   ss
  421d03:	call   0xb71:0xd95371b6
  421d0a:	jecxz  0x421d88
  421d0c:	jmp    0x8c91:0xd91866d5
  421d13:	(bad)  
  421d14:	mov    eax,0x5946ca2f
  421d19:	je     0x421cb8
  421d1b:	push   ds
  421d1c:	cmp    eax,0x398e3ac2
  421d21:	xchg   esi,eax
  421d22:	add    cl,BYTE PTR [ebp-0x78]
  421d25:	out    0x4,al
  421d27:	mov    ch,0xe6
  421d29:	scas   al,BYTE PTR es:[edi]
  421d2a:	xchg   DWORD PTR [ecx+0x64],edx
  421d2d:	out    0x9d,eax
  421d2f:	and    BYTE PTR [esi-0x7e91dbc2],bh
  421d35:	aam    0xde
  421d37:	sbb    BYTE PTR [ecx+0x43],0x5b
  421d3b:	adc    esi,0x2d
  421d3e:	mov    esi,0xcf9d106a
  421d43:	mov    esi,DWORD PTR [eax+0x21]
  421d46:	popf   
  421d47:	jmp    0x421d67
  421d49:	xor    al,0xb2
  421d4b:	dec    edx
  421d4c:	lods   al,BYTE PTR ds:[esi]
  421d4d:	cmp    BYTE PTR [ecx-0x41254cfa],ch
  421d53:	aas    
  421d54:	rcl    DWORD PTR [ebp+0xb],1
  421d57:	jmp    0x980f:0xa2a89edb
  421d5e:	retf   0x70cc
  421d61:	sub    ah,BYTE PTR [ecx]
  421d63:	cmp    BYTE PTR [esi],0x6a
  421d66:	test   al,0xed
  421d68:	adc    dh,BYTE PTR [edx]
  421d6a:	pop    ebp
  421d6b:	pop    esp
  421d6c:	leave  
  421d6d:	push   ecx
  421d6e:	xor    al,0x8
  421d70:	test   BYTE PTR [ecx],bh
  421d72:	add    eax,0xf126958d
  421d77:	ficom  WORD PTR [eax+0x526d54b]
  421d7d:	fnstsw WORD PTR [esi+0x4c2d7873]
  421d83:	mov    ah,0x3
  421d85:	and    DWORD PTR ds:0x42b90574,esi
  421d8b:	pop    ebp
  421d8c:	std    
  421d8d:	test   DWORD PTR [edx+0x45],esi
  421d90:	or     bl,BYTE PTR [esi-0xc]
  421d93:	or     eax,edx
  421d95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d96:	mov    ds:0xee98cd9d,al
  421d9b:	daa    
  421d9c:	mov    ds:0x63b2b655,al
  421da1:	lods   al,BYTE PTR ds:[esi]
  421da2:	adc    BYTE PTR [eax-0x38844de8],0x5f
  421da9:	int3   
  421daa:	lds    eax,FWORD PTR ds:[eax-0x2efb4388]
  421db1:	jmp    0x38d3:0x839be9e4
  421db8:	xor    BYTE PTR [esi],cl
  421dba:	xchg   ebx,eax
  421dbb:	addr16 loope 0x421e07
  421dbe:	inc    esi
  421dbf:	or     eax,0x84d1414c
  421dc4:	jg     0x421de3
  421dc6:	mov    cl,0x90
  421dc8:	fcomp  DWORD PTR [ecx-0x5b]
  421dcb:	push   0x6093fc55
  421dd0:	sbb    eax,DWORD PTR [esi]
  421dd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421dd3:	(bad)  
  421dd5:	push   0x3769c1e2
  421dda:	aaa    
  421ddb:	mov    ebx,0x81a74754
  421de0:	sbb    ch,BYTE PTR [si]
  421de3:	add    dl,bl
  421de5:	jno    0x421d7f
  421de7:	xchg   DWORD PTR [ebx],edx
  421de9:	(bad)  
  421dea:	ins    BYTE PTR es:[edi],dx
  421deb:	jae    0x421d92
  421ded:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421dee:	xor    ebp,DWORD PTR [edx-0x79322bce]
  421df4:	sub    eax,0x188fb3d6
  421df9:	push   es
  421dfa:	retf   0xb17f
  421dfd:	or     DWORD PTR [edi-0x43c07b11],eax
  421e03:	xchg   edx,eax
  421e04:	retf   0x7151
  421e07:	rol    BYTE PTR [esp+ebp*2],cl
  421e0a:	pop    esi
  421e0b:	mov    al,ds:0x41732f24
  421e10:	mov    al,es:0xfca1e4e5
  421e16:	loop   0x421dfd
  421e18:	mov    cl,0x1
  421e1a:	ss dec edx
  421e1c:	jg     0x421e9a
  421e1e:	and    al,0x6e
  421e20:	sbb    eax,edi
  421e22:	enter  0xf45c,0xa0
  421e26:	jb     0x421e0c
  421e28:	pop    ebp
  421e29:	xor    eax,0x93cc6efd
  421e2e:	jmp    FWORD PTR [edx+0x6d]
  421e31:	add    ebx,DWORD PTR [ebx+0x17c5cbcc]
  421e37:	and    al,0x94
  421e39:	jmp    DWORD PTR [esi+0xf5f318a]
  421e3f:	rol    BYTE PTR [ebx-0x6],1
  421e42:	sar    BYTE PTR [ecx-0x27],cl
  421e45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e46:	int    0x61
  421e48:	push   ebx
  421e49:	mov    ebp,0x5e614790
  421e4e:	xchg   ebp,eax
  421e4f:	mov    ds:0xfa13749e,eax
  421e54:	push   cs
  421e55:	dec    ebx
  421e56:	popa   
  421e57:	cmp    BYTE PTR [edi],bh
  421e59:	pop    edx
  421e5a:	pop    edx
  421e5b:	out    0xdf,al
  421e5d:	inc    eax
  421e5e:	jle    0x421e45
  421e60:	out    0xd1,eax
  421e62:	scas   eax,DWORD PTR es:[edi]
  421e63:	pop    edi
  421e64:	or     BYTE PTR [edx+0x6a],dl
  421e67:	jg     0x421e91
  421e69:	pop    ecx
  421e6a:	push   0xd699db0
  421e6f:	pop    esp
  421e70:	jecxz  0x421df4
  421e72:	stc    
  421e73:	test   BYTE PTR [edx],dl
  421e75:	or     DWORD PTR [eax+0x21c2da7a],esi
  421e7b:	ss retf 
  421e7d:	mov    ecx,0xe070ee77
  421e82:	push   es
  421e83:	pop    es
  421e84:	fnsave [esi-0x4396ad]
  421e8a:	retf   0xa99b
  421e8d:	xchg   ebx,ecx
  421e8f:	shr    DWORD PTR [ecx],0x92
  421e92:	xor    DWORD PTR [eax],edx
  421e94:	int    0x54
  421e96:	(bad)  
  421e97:	pop    ebx
  421e98:	aad    0x5
  421e9a:	test   eax,0xb64c533d
  421e9f:	outs   dx,BYTE PTR ds:[esi]
  421ea0:	push   esp
  421ea1:	mov    dl,BYTE PTR [eax+edx*2]
  421ea4:	imul   esp,DWORD PTR [ebp+ecx*4-0x4b],0xc065acb0
  421eac:	retf   0x4c1e
  421eaf:	repz xor eax,0x70d1f0e6
  421eb5:	mov    bh,0xbd
  421eb7:	mov    ch,0x8e
  421eb9:	jg     0x421e47
  421ebb:	inc    esi
  421ebc:	cli    
  421ebd:	xchg   DWORD PTR [ecx-0x2bb9f1b9],ebx
  421ec3:	imul   DWORD PTR [ebx]
  421ec5:	ficomp WORD PTR [ebx]
  421ec7:	iret   
  421ec8:	aam    0xed
  421eca:	ins    BYTE PTR es:[edi],dx
  421ecb:	aaa    
  421ecc:	jg     0x421e9a
  421ece:	push   0xf68cd353
  421ed3:	iret   
  421ed4:	cmp    bh,BYTE PTR [ebp+0x4b]
  421ed7:	xchg   esi,eax
  421ed8:	pop    eax
  421ed9:	fwait
  421eda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421edb:	push   cs
  421edc:	or     DWORD PTR [ecx-0x337ab411],eax
  421ee2:	push   es
  421ee3:	and    eax,0x764e03d0
  421ee8:	daa    
  421ee9:	jmp    0x74ba:0x4b965fb6
  421ef0:	adc    DWORD PTR [edi],ebp
  421ef2:	scas   eax,DWORD PTR es:[edi]
  421ef3:	rcr    BYTE PTR [edx+edx*8+0x599cedcd],1
  421efa:	mov    dl,ah
  421efc:	test   ch,dh
  421efe:	dec    ebx
  421eff:	lods   al,BYTE PTR ds:[esi]
  421f00:	cli    
  421f01:	xor    eax,0xe895a42d
  421f06:	lock call 0xf209af71
  421f0c:	ins    BYTE PTR es:[edi],dx
  421f0d:	xor    BYTE PTR [esi],0x2c
  421f10:	sub    ebp,DWORD PTR [eax]
  421f12:	jb     0x421f68
  421f14:	mov    BYTE PTR [edi],ah
  421f16:	mov    al,0xc8
  421f18:	xlat   BYTE PTR ds:[ebx]
  421f19:	in     eax,dx
  421f1a:	pop    ecx
  421f1b:	cmp    DWORD PTR [edx+0x2d],esi
  421f1e:	dec    esp
  421f1f:	fnstenv [ecx+0xeb9b34c]
  421f25:	mov    ah,0x78
  421f27:	jae    0x421ecd
  421f29:	test   eax,0x3913b0b6
  421f2e:	test   BYTE PTR [ebx-0x591b2175],al
  421f34:	fisttp DWORD PTR [ebp+0x2b]
  421f37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f38:	mov    edx,0x49590704
  421f3d:	int3   
  421f3e:	dec    edx
  421f3f:	mov    cl,0xc0
  421f41:	add    bh,BYTE PTR [ebp-0x75]
  421f44:	imul   esi,edx,0x22
  421f47:	xchg   edi,eax
  421f48:	call   FWORD PTR [ebp+0x2261c92d]
  421f4e:	inc    esp
  421f4f:	and    eax,0x9436a7f1
  421f54:	jmp    0x421fbc
  421f56:	jae    0x421f5c
  421f58:	ja     0x421fbf
  421f5a:	cwde   
  421f5b:	adc    DWORD PTR [ecx-0xf4498ae],esi
  421f61:	sti    
  421f62:	or     eax,0xf336d63e
  421f67:	pop    ss
  421f68:	or     al,BYTE PTR [esp+eiz*2-0x5a34b37c]
  421f6f:	mov    al,ds:0xcf9c7d11
  421f74:	stc    
  421f75:	gs dec ebx
  421f77:	xor    al,0x9a
  421f79:	je     0x421f8e
  421f7b:	out    dx,eax
  421f7c:	mov    dl,0x5c
  421f7e:	push   ss
  421f7f:	sbb    al,0xb3
  421f81:	in     eax,dx
  421f82:	pusha  
  421f83:	mov    dh,0xfa
  421f85:	pop    edx
  421f86:	fs dec edi
  421f88:	les    ebx,FWORD PTR [ecx+eiz*2]
  421f8b:	scas   al,BYTE PTR es:[edi]
  421f8c:	ret    0xc44c
  421f8f:	leave  
  421f90:	pop    eax
  421f91:	add    ebp,ebx
  421f93:	es mov edi,0xbc64b303
  421f99:	mov    ds:0x7a8eef20,al
  421f9e:	push   esi
  421f9f:	sbb    DWORD PTR [ebx+0x6ad4ac09],eax
  421fa5:	out    0x5e,eax
  421fa7:	mov    DWORD PTR [ebx],ebp
  421fa9:	add    al,0x6e
  421fab:	(bad)  
  421fad:	mov    DWORD PTR [edi+esi*2],edx
  421fb0:	mov    al,ds:0xc5d092
  421fb5:	xchg   edx,eax
  421fb6:	sbb    bl,BYTE PTR [edi+0x2f]
  421fb9:	xor    ebp,edi
  421fbb:	aad    0x1e
  421fbd:	lahf   
  421fbe:	fdiv   QWORD PTR ds:0xea5683ae
  421fc4:	aam    0x80
  421fc6:	and    al,bl
  421fc8:	cwde   
  421fc9:	jmp    DWORD PTR [edi+ebp*8-0x1b]
  421fcd:	xchg   esp,eax
  421fce:	xchg   DWORD PTR [esi],edx
  421fd0:	ins    DWORD PTR es:[edi],dx
  421fd1:	out    dx,al
  421fd2:	push   cs
  421fd3:	sbb    al,0xac
  421fd5:	inc    esi
  421fd6:	in     al,0xf0
  421fd8:	sbb    eax,0x6f5c0a3c
  421fdd:	fst    QWORD PTR ds:0xa9157cb4
  421fe3:	jecxz  0x422000
  421fe5:	mov    edi,0x5caf0ebc
  421fea:	in     al,0x5e
  421fec:	dec    eax
  421fed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421fee:	pop    ss
  421fef:	(bad)  
  421ff0:	xchg   ecx,eax
  421ff1:	stos   BYTE PTR es:[edi],al
  421ff2:	in     al,0x20
  421ff4:	mov    BYTE PTR ds:0x64345186,dl
  421ffa:	adc    al,0xf3
  421ffc:	mov    ebp,0x45f2f2d3
  422001:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422002:	or     bh,dl
  422004:	add    BYTE PTR [esi],al
  422006:	jmp    0xf482:0xa765bc83
  42200d:	jae    0x422006
  42200f:	test   DWORD PTR [edx],eax
  422011:	jne    0x421fee
  422013:	shl    DWORD PTR [edx],0xcd
  422016:	mov    al,ds:0x4221b300
  42201b:	dec    esi
  42201c:	pop    esp
  42201d:	add    ecx,DWORD PTR [edx]
  42201f:	loope  0x42205f
  422021:	mov    dl,0xdf
  422023:	repnz push esp
  422025:	dec    esi
  422026:	(bad)  
  422027:	ficomp WORD PTR ds:0xc2089fae
  42202d:	jo     0x421fce
  42202f:	inc    edx
  422030:	mov    esp,0xb60aab43
  422035:	ins    DWORD PTR es:[edi],dx
  422036:	add    BYTE PTR [edi+0x6f],al
  422039:	pop    edx
  42203a:	lds    esi,FWORD PTR [esi+0x3f650566]
  422040:	les    edi,FWORD PTR [edx-0x410ab9de]
  422046:	js     0x4220c1
  422048:	xor    al,0x92
  42204a:	mov    ds:0x9e1c782e,al
  42204f:	fwait
  422050:	mov    ds:0xf248972a,eax
  422055:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422056:	in     eax,dx
  422057:	pusha  
  422058:	mov    ds:0x78a4645,eax
  42205d:	cs inc ecx
  42205f:	rcl    esi,cl
  422061:	mov    ah,0xdf
  422063:	inc    esi
  422064:	in     eax,dx
  422065:	iret   
  422066:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422067:	and    eax,0x476c2381
  42206c:	adc    BYTE PTR [edx+0x1ca52eac],al
  422072:	outs   dx,DWORD PTR ds:[esi]
  422073:	stos   DWORD PTR es:[edi],eax
  422074:	sbb    DWORD PTR [esi+0x7e],eax
  422077:	loop   0x422018
  422079:	je     0x422051
  42207b:	repz jmp 0xac5dc0cb
  422081:	iret   
  422082:	inc    eax
  422083:	div    al
  422085:	repnz mov ds:0x808bd35e,eax
  42208b:	jmp    0xdd42:0x2ee0daf9
  422092:	jle    0x422084
  422094:	push   0x7743e4f6
  422099:	dec    edx
  42209a:	lea    esp,[esi]
  42209c:	jmp    0x422022
  42209e:	jg     0x42208f
  4220a0:	mov    esi,ebp
  4220a2:	push   eax
  4220a3:	cmp    DWORD PTR [ecx+esi*1],edi
  4220a6:	adc    dl,BYTE PTR [esi+0x12]
  4220a9:	pusha  
  4220aa:	cvtdq2ps xmm1,XMMWORD PTR [esi+0x68d30d41]
  4220b1:	pusha  
  4220b2:	sar    ch,1
  4220b4:	rol    DWORD PTR [ecx-0x2b],1
  4220b7:	sbb    DWORD PTR [eax],esp
  4220b9:	mov    bl,0x38
  4220bb:	jb     0x42209e
  4220bd:	stos   BYTE PTR es:[edi],al
  4220be:	push   es
  4220bf:	cmp    BYTE PTR [edx],0x42
  4220c2:	pop    esi
  4220c3:	add    ebp,DWORD PTR [edx+0x42]
  4220c6:	xor    ecx,DWORD PTR [esi]
  4220c8:	sub    BYTE PTR [eax-0x537fdcdd],dl
  4220ce:	mov    ah,0x68
  4220d0:	cmp    BYTE PTR ds:0x1207a191,dl
  4220d6:	jle    0x4220a8
  4220d8:	rol    BYTE PTR [edx+eax*4+0x7d],cl
  4220dc:	jns    0x4220b0
  4220de:	bnd ret 0xd289
  4220e2:	lods   eax,DWORD PTR ds:[esi]
  4220e3:	sub    ebx,ebp
  4220e5:	push   ds
  4220e6:	jbe    0x42206a
  4220e8:	jmp    0xdaa34e95
  4220ed:	or     edx,DWORD PTR [edx]
  4220ef:	fild   QWORD PTR [eax-0x4fc26a7a]
  4220f5:	dec    edx
  4220f6:	hlt    
  4220f7:	push   0x58
  4220f9:	imul   ebp,DWORD PTR [edx-0x535536a6],0x955d1c22
  422103:	jb     0x422094
  422105:	jns    0x4220cb
  422107:	aas    
  422108:	popa   
  422109:	sar    DWORD PTR [ebx+0x26],cl
  42210c:	clc    
  42210d:	stos   DWORD PTR es:[edi],eax
  42210e:	jae    0x4220c8
  422110:	(bad)  
  422112:	jecxz  0x4220af
  422114:	mov    dl,0x39
  422116:	or     DWORD PTR [ebx-0x175d7f62],esi
  42211c:	push   edx
  42211d:	lods   al,BYTE PTR ds:[esi]
  42211e:	xlat   BYTE PTR ds:[ebx]
  42211f:	dec    edx
  422120:	iret   
  422121:	adc    edi,esp
  422123:	mov    WORD PTR [edi-0x66],ds
  422126:	jb     0x4220e5
  422128:	imul   esi,DWORD PTR [ebx],0x1e55c798
  42212e:	aas    
  42212f:	loope  0x42211c
  422131:	daa    
  422132:	(bad)  
  422133:	cli    
  422134:	pop    ds
  422135:	cwde   
  422136:	aad    0xf5
  422138:	dec    edi
  422139:	icebp  
  42213a:	loope  0x4220f7
  42213c:	jne    0x4221a2
  42213e:	fist   WORD PTR [eax+ebp*1-0x29aa6966]
  422145:	sub    bh,BYTE PTR [ebp+eiz*4-0x723456ff]
  42214c:	sbb    ch,BYTE PTR [eax+edi*2+0x38]
  422150:	pop    ebp
  422151:	mov    ebx,0x1aeb8fae
  422156:	scas   al,BYTE PTR es:[edi]
  422157:	aas    
  422158:	or     eax,0xd743730e
  42215d:	pop    edx
  42215e:	cwde   
  42215f:	frstor [esi+esi*2]
  422162:	mov    ch,0xbe
  422164:	retf   
  422165:	pop    ss
  422166:	in     al,0x54
  422168:	hlt    
  422169:	les    ebx,FWORD PTR [edx+0x29]
  42216c:	xor    dh,BYTE PTR [edx+ecx*1-0x2a]
  422170:	pop    ebx
  422171:	mov    ebp,DWORD PTR cs:[edi-0x560006b0]
  422178:	das    
  422179:	pop    ecx
  42217a:	sbb    DWORD PTR [esi-0x2ce6a282],edi
  422180:	mov    ebx,0x49c11208
  422185:	dec    edx
  422186:	pop    esi
  422187:	fistp  WORD PTR [edx]
  422189:	in     al,0x8
  42218b:	gs mov ah,0xec
  42218e:	and    DWORD PTR [ebp+0x4c],edx
  422191:	leave  
  422192:	sub    DWORD PTR [ebp-0x457bac91],ecx
  422198:	mov    ah,0xcf
  42219a:	enter  0x316e,0x98
  42219e:	dec    eax
  42219f:	jecxz  0x42221a
  4221a1:	inc    ebp
  4221a2:	fdiv   QWORD PTR [edx]
  4221a4:	gs (bad) 
  4221a6:	les    ebp,FWORD PTR [esi+ebp*2+0x5baed661]
  4221ad:	imul   eax,edx,0xd93710ad
  4221b3:	mov    DWORD PTR [edx],ebp
  4221b5:	xor    eax,0x5965d5f3
  4221ba:	add    BYTE PTR [edx],ch
  4221bc:	into   
  4221bd:	repz sub ebp,DWORD PTR ds:0xf1d0816a
  4221c4:	in     eax,0x6e
  4221c6:	(bad)  
  4221c7:	cwde   
  4221c8:	fcmovu st,st(7)
  4221ca:	pop    es
  4221cb:	call   0xa387286b
  4221d0:	push   DWORD PTR ds:0x8a7c8a69
  4221d6:	cmp    BYTE PTR [eax-0x11695419],cl
  4221dc:	jmp    0x828029eb
  4221e1:	ror    dl,0xc9
  4221e4:	jbe    0x422171
  4221e6:	xor    eax,0x41f9e6b0
  4221eb:	shl    DWORD PTR [eax],0xa3
  4221ee:	pop    ss
  4221ef:	ror    BYTE PTR [eax],cl
  4221f1:	jle    0x42222a
  4221f3:	or     edi,esi
  4221f5:	fwait
  4221f6:	or     al,0xb3
  4221f8:	adc    cl,BYTE PTR [edx-0x42]
  4221fb:	in     eax,0xf4
  4221fd:	mov    BYTE PTR [edi-0x62ae4702],bl
  422203:	shl    ecx,0x8
  422206:	add    esi,ebp
  422208:	push   esp
  422209:	adc    DWORD PTR [ebp+0x6b008c34],eax
  42220f:	test   eax,0x14182018
  422214:	out    dx,eax
  422215:	dec    ecx
  422216:	repz mov ah,0x79
  422219:	add    eax,0xcbb110bf
  42221e:	xchg   ebx,eax
  42221f:	inc    esp
  422220:	sub    al,0xb6
  422222:	mov    BYTE PTR [ebx+0x65],ah
  422225:	or     al,0x6e
  422227:	mov    bh,BYTE PTR [ebx]
  422229:	fcmovbe st,st(0)
  42222b:	fld    DWORD PTR [ebp-0x28]
  42222e:	fadd   DWORD PTR [edx]
  422230:	xchg   edx,eax
  422231:	scas   eax,DWORD PTR es:[edi]
  422232:	and    DWORD PTR [ebp+0x5b05a9ef],eax
  422238:	aam    0x15
  42223a:	int    0x73
  42223c:	out    dx,eax
  42223d:	or     bh,BYTE PTR [ecx-0x50]
  422240:	cmp    DWORD PTR [edi],eax
  422242:	mov    DWORD PTR [edi+eiz*2],ebx
  422245:	cwde   
  422246:	push   ebp
  422247:	xchg   ecx,eax
  422248:	inc    edi
  422249:	adc    BYTE PTR [ecx-0x4a],0xf7
  42224d:	or     BYTE PTR [ebx-0x47],0x8e
  422251:	sbb    BYTE PTR [ecx],bl
  422253:	xor    DWORD PTR [ebp+0x1d],ebp
  422256:	outs   dx,BYTE PTR ds:[esi]
  422257:	outs   dx,BYTE PTR ds:[esi]
  422258:	mov    ecx,0x637ffc9b
  42225d:	xchg   ecx,eax
  42225e:	sar    BYTE PTR [edx],0x39
  422261:	ror    BYTE PTR [ebx],0x8a
  422264:	sbb    al,0xb9
  422266:	div    dl
  422268:	in     eax,dx
  422269:	or     BYTE PTR [ecx],al
  42226b:	pop    esp
  42226c:	popa   
  42226d:	jg     0x422245
  42226f:	fsubrp st(4),st
  422271:	stos   DWORD PTR es:[edi],eax
  422272:	mov    WORD PTR [edi-0x562c37ce],ss
  422278:	hlt    
  422279:	sub    DWORD PTR [esi+edi*2+0x21c44b96],0xfffffff5
  422281:	or     eax,0x61a8c719
  422286:	fnstsw WORD PTR [ecx-0x4433a297]
  42228c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42228d:	lods   al,BYTE PTR ds:[esi]
  42228e:	adc    DWORD PTR [edi],0xffffffb2
  422291:	and    eax,0xe501cd44
  422296:	je     0x4222e4
  422298:	push   ss
  422299:	jbe    0x42230d
  42229b:	inc    ebp
  42229c:	inc    edx
  42229d:	xchg   al,ah
  42229f:	and    BYTE PTR [edx+0x6d97f546],dl
  4222a5:	mov    dl,0xee
  4222a7:	or     ebp,DWORD PTR [esp+eiz*4-0x60]
  4222ab:	aaa    
  4222ac:	aad    0xc4
  4222ae:	jne    0x42224c
  4222b0:	dec    esp
  4222b1:	cmp    BYTE PTR [ecx],bl
  4222b3:	mov    DWORD PTR [ebp+ebp*1-0x79c95392],esi
  4222ba:	(bad)  
  4222bb:	or     eax,0x5e306569
  4222c0:	stos   WORD PTR es:[edi],ax
  4222c2:	mov    es,WORD PTR [ebp-0x817e4e2]
  4222c8:	fistp  DWORD PTR [ebp+0x13d589db]
  4222ce:	cmc    
  4222cf:	or     edx,esp
  4222d1:	(bad)
  4222d5:	mov    ah,BYTE PTR [edx+0x2c314997]
  4222db:	lahf   
  4222dc:	(bad)  
  4222dd:	ficomp DWORD PTR [ecx-0x621a7bd3]
  4222e3:	cmovs  edi,DWORD PTR [ebp+0x223ed51b]
  4222ea:	aas    
  4222eb:	imul   edx,DWORD PTR [ebx+0x9],0xffffffe0
  4222ef:	bound  ebp,QWORD PTR [ecx-0x7cc4700c]
  4222f5:	fadd   QWORD PTR [edi+0xc8e7b92]
  4222fb:	cdq    
  4222fc:	aaa    
  4222fd:	jne    0x4222d4
  4222ff:	(bad)  
  422301:	mov    bl,0xe5
  422303:	or     ebx,DWORD PTR [esi+0x13]
  422306:	cmp    DWORD PTR [eax+0x609cb357],ecx
  42230c:	mov    bl,0x2a
  42230e:	sub    bh,dl
  422310:	dec    edx
  422311:	fld    QWORD PTR [ebx-0x5c]
  422314:	lock fcom QWORD PTR [ecx-0x48876f2f]
  42231b:	xchg   edx,eax
  42231c:	into   
  42231d:	xchg   DWORD PTR [ecx+0x1a6660fa],ebp
  422323:	jge    0x4222a5
  422325:	mov    BYTE PTR [ebx],cl
  422327:	or     ax,0x720d
  42232b:	xchg   esi,eax
  42232c:	cmp    ecx,DWORD PTR [edx-0x5c]
  42232f:	add    DWORD PTR [edx+0x8caba9d],ecx
  422335:	icebp  
  422336:	out    0x4c,eax
  422338:	fwait
  422339:	xchg   ebx,eax
  42233a:	shr    BYTE PTR [ebp+0x39abbede],1
  422340:	mov    ch,0xaa
  422342:	mov    al,ds:0xddd6a541
  422347:	mov    al,0xf5
  422349:	bound  ebx,QWORD PTR [ecx]
  42234b:	stos   DWORD PTR es:[edi],eax
  42234c:	lods   eax,DWORD PTR ds:[esi]
  42234d:	mov    ebp,0xac7fa5f5
  422352:	pop    es
  422353:	mov    ch,0x86
  422355:	add    al,0xaf
  422357:	or     al,0x45
  422359:	rcl    DWORD PTR [esp+edx*8-0x6a],0xba
  42235e:	repnz test BYTE PTR [edi+esi*2],cl
  422362:	jo     0x42231a
  422364:	fisubr DWORD PTR [esi+0x51]
  422367:	adc    esi,ecx
  422369:	push   0x7037416a
  42236e:	hlt    
  42236f:	cmp    BYTE PTR [esi],0x53
  422372:	lds    ecx,FWORD PTR [eax+0x1c0773be]
  422378:	cmp    bl,BYTE PTR [edi]
  42237a:	adc    eax,0xd6fe139f
  42237f:	pop    es
  422380:	and    al,0x4f
  422382:	repnz push edx
  422384:	ds xchg bx,ax
  422387:	xchg   BYTE PTR [edi],ah
  422389:	pop    esp
  42238a:	pop    ecx
  42238b:	hlt    
  42238c:	in     eax,0xa2
  42238e:	fnstcw WORD PTR [ebp-0x22f86456]
  422394:	js     0x422414
  422396:	dec    eax
  422397:	mov    ah,0xf2
  422399:	inc    ebp
  42239a:	xchg   esi,eax
  42239b:	jge    0x422323
  42239d:	fimul  WORD PTR [edx+0x4159ac58]
  4223a3:	stc    
  4223a4:	ds and eax,0x6f4f1d3
  4223aa:	mov    ebx,0xfccd5702
  4223af:	data16 and bh,dl
  4223b2:	fadd   QWORD PTR [ecx]
  4223b4:	push   0x3a99556e
  4223b9:	in     al,0xb6
  4223bb:	dec    ebx
  4223bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4223bd:	xor    DWORD PTR [edx-0x55],edx
  4223c0:	or     DWORD PTR [ebx-0x45],edi
  4223c3:	neg    DWORD PTR [eax+0x46ac9b57]
  4223c9:	and    eax,DWORD PTR [edx-0x11]
  4223cc:	dec    ebp
  4223cd:	leave  
  4223ce:	xchg   esi,eax
  4223cf:	or     dl,BYTE PTR [eax+eax*2-0x2a39ab96]
  4223d6:	xchg   edi,eax
  4223d7:	sbb    DWORD PTR [edx+0x21],edi
  4223da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223db:	dec    eax
  4223dc:	leave  
  4223dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223de:	pop    es
  4223df:	inc    esp
  4223e0:	and    ah,ch
  4223e2:	scas   al,BYTE PTR es:[edi]
  4223e3:	sub    esi,esi
  4223e5:	outs   dx,BYTE PTR ds:[esi]
  4223e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223e7:	mov    bh,0xac
  4223e9:	mov    edx,0x3f363dc7
  4223ee:	and    edi,ebx
  4223f0:	cmp    edi,0xff535919
  4223f6:	scas   eax,DWORD PTR es:[edi]
  4223f7:	call   DWORD PTR [edi+0x56]
  4223fa:	xlat   BYTE PTR ds:[ebx]
  4223fb:	neg    cl
  4223fd:	ss int3 
  4223ff:	les    edi,FWORD PTR [ebx-0x647d219d]
  422405:	jge    0x422445
  422407:	mov    eax,ds:0xf722330d
  42240c:	int3   
  42240d:	imul   ebp,DWORD PTR ds:0x8d3b217f,0x1bbd8e30
  422417:	add    cl,dh
  422419:	scas   eax,DWORD PTR es:[edi]
  42241a:	in     eax,0xdd
  42241c:	in     eax,0x37
  42241e:	rcl    edi,0x0
  422421:	cli    
  422422:	in     eax,0x12
  422424:	push   ds
  422425:	xchg   edx,eax
  422426:	jnp    0x422420
  422428:	jmp    0x4b9:0xd9d08e01
  42242f:	jae    0x42240e
  422431:	mov    al,0x0
  422433:	mov    bh,0xbf
  422435:	adc    bh,BYTE PTR [ebx]
  422437:	sub    DWORD PTR [esi+0x5b5e9363],edx
  42243d:	mov    ch,0xc2
  42243f:	cmp    DWORD PTR [edx-0x73],esp
  422442:	cmp    edi,ebx
  422444:	loop   0x42243b
  422446:	loope  0x4224bb
  422448:	pushf  
  422449:	mov    dh,0xc9
  42244b:	dec    edx
  42244c:	adc    eax,0x5e8f9db1
  422451:	mov    ah,0xec
  422453:	pop    edi
  422454:	ja     0x422499
  422456:	cmp    eax,DWORD PTR [edi+0x16]
  422459:	outs   dx,BYTE PTR ds:[esi]
  42245a:	and    DWORD PTR [ebp-0x5a],eax
  42245d:	adc    eax,0x27d80e88
  422462:	in     al,0xf6
  422464:	lods   al,BYTE PTR ds:[esi]
  422465:	jmp    0x48dd:0x1d34e237
  42246c:	mov    ebx,0x7f05e07e
  422471:	gs das 
  422473:	add    eax,0xdc5f87d5
  422478:	mov    ecx,?
  42247a:	popa   
  42247b:	sub    al,0xf3
  42247d:	jns    0x422483
  42247f:	xchg   esi,eax
  422480:	in     eax,dx
  422481:	(bad)  [esi-0x37]
  422484:	push   cs
  422485:	jecxz  0x422417
  422487:	lds    ecx,FWORD PTR [ecx]
  422489:	mov    dl,0x19
  42248b:	mov    eax,ds:0x90e692af
  422490:	div    BYTE PTR [ebx+eax*8+0x1f400ac]
  422497:	xchg   ecx,eax
  422498:	mov    ah,0x7b
  42249a:	mov    ch,0x81
  42249c:	ins    BYTE PTR es:[edi],dx
  42249d:	loop   0x422503
  42249f:	cmp    eax,0xbe9b3fbd
  4224a4:	push   ebp
  4224a5:	push   ds
  4224a6:	dec    ecx
  4224a7:	ss and dh,dh
  4224aa:	fisub  WORD PTR [edx+0x2]
  4224ad:	mov    bh,0x32
  4224af:	dec    esi
  4224b0:	mov    dh,0x5c
  4224b2:	je     0x422463
  4224b4:	call   0x1289:0x648f439c
  4224bb:	mov    al,ds:0x6606205a
  4224c0:	or     al,0xfa
  4224c2:	bound  ecx,QWORD PTR [ecx]
  4224c4:	mov    eax,0x1e2d0df8
  4224c9:	cmp    DWORD PTR ds:[edx-0x1727683b],esi
  4224d0:	dec    edi
  4224d1:	cwde   
  4224d2:	cs mov ch,0xa9
  4224d5:	int3   
  4224d6:	aas    
  4224d7:	rol    BYTE PTR [esi-0x1c],1
  4224da:	cmc    
  4224db:	in     al,dx
  4224dc:	inc    esp
  4224dd:	push   ebp
  4224de:	mov    esp,0xce398d3a
  4224e3:	pop    esp
  4224e4:	inc    eax
  4224e5:	sbb    DWORD PTR [eax],0xffffffe9
  4224e8:	fisttp DWORD PTR [ebx]
  4224ea:	(bad)  
  4224eb:	mov    ds:0x87b89257,al
  4224f0:	jns    0x422516
  4224f2:	rcr    BYTE PTR [edx],cl
  4224f4:	xchg   edi,eax
  4224f5:	sar    BYTE PTR ds:0x8c10838a,0xa0
  4224fc:	cli    
  4224fd:	adc    BYTE PTR [ebx+0x206655c5],ch
  422503:	mov    dh,0xf6
  422505:	leave  
  422506:	pop    edi
  422507:	xor    eax,0x80a9bce8
  42250c:	mov    BYTE PTR [esi-0x4bb76d22],ch
  422512:	and    ch,dh
  422514:	mov    ebp,0x437d090b
  422519:	xor    al,0x26
  42251b:	inc    ecx
  42251c:	mov    al,ds:0x1671e78f
  422521:	and    ecx,DWORD PTR ds:0xb3f59caf
  422527:	div    dh
  422529:	lds    ebx,FWORD PTR gs:[ebx+0x4d]
  42252d:	sub    edi,DWORD PTR [eax+ecx*8-0x2265b79d]
  422534:	lahf   
  422535:	fidivr DWORD PTR [esi-0x3a394de0]
  42253b:	and    al,0x63
  42253d:	repz fsub DWORD PTR [esi-0x27c0f0de]
  422544:	push   ds
  422545:	(bad)  
  422546:	xlat   BYTE PTR ds:[ebx]
  422547:	push   0x44cce02e
  42254c:	xor    edx,ecx
  42254e:	mov    gs,WORD PTR [eax+0x4dc820c8]
  422554:	or     edx,DWORD PTR [edx]
  422556:	call   0x862914ed
  42255b:	sbb    dh,dh
  42255d:	leave  
  42255e:	cdq    
  42255f:	repnz cmp BYTE PTR [ecx-0x6b9a1b24],ch
  422566:	jg     0x422598
  422568:	scas   eax,DWORD PTR es:[edi]
  422569:	call   0x61117799
  42256e:	jle    0x422590
  422570:	popf   
  422571:	cwde   
  422572:	dec    esi
  422573:	loopne 0x4225c2
  422575:	sub    bh,BYTE PTR [ecx-0x29]
  422578:	fdiv   QWORD PTR [eax+ebx*8+0x4c]
  42257c:	add    eax,0x5f94ed89
  422581:	xchg   esi,eax
  422582:	inc    edx
  422583:	pop    edi
  422584:	add    BYTE PTR [ecx+0x2ecb6d7d],dl
  42258a:	sub    BYTE PTR [esi+0x2f50b47d],ah
  422590:	pop    ds
  422591:	xor    BYTE PTR [edi-0x5d],ch
  422594:	mov    dh,0x68
  422596:	xchg   ecx,eax
  422597:	sub    ch,BYTE PTR [ecx-0xe]
  42259a:	aas    
  42259b:	fimul  WORD PTR [edi]
  42259d:	gs dec esp
  42259f:	adc    ebx,ebx
  4225a1:	cmp    esp,DWORD PTR [ebp-0x632e00a]
  4225a7:	ins    BYTE PTR es:[edi],dx
  4225a8:	sub    edx,DWORD PTR [eax+0x4ba6ea6c]
  4225ae:	dec    edx
  4225af:	in     al,0xf0
  4225b1:	jno    0x422546
  4225b3:	push   cs
  4225b4:	scas   eax,DWORD PTR es:[edi]
  4225b5:	or     BYTE PTR [edx+0x39a5cfd],dl
  4225bb:	mov    ch,dl
  4225bd:	push   0xffffffd7
  4225bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225c0:	(bad)  [ebp-0x3d]
  4225c3:	xchg   BYTE PTR ds:0x3447b05c,ch
  4225c9:	cmp    eax,0xbc2b6252
  4225ce:	inc    eax
  4225cf:	jo     0x4225da
  4225d1:	sub    al,0x8d
  4225d3:	not    ebx
  4225d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225d6:	aam    0xe1
  4225d8:	jp     0x42256a
  4225da:	mov    WORD PTR [edi],fs
  4225dc:	sbb    esi,DWORD PTR [ecx-0x71]
  4225df:	or     al,0x7f
  4225e1:	shl    DWORD PTR [edx+esi*8-0x6eac2b84],1
  4225e8:	(bad)
  4225eb:	cdq    
  4225ec:	sub    esp,DWORD PTR [esi+0x3449aefd]
  4225f2:	mov    ds:0x675594e2,al
  4225f7:	dec    ecx
  4225f8:	(bad)  
  4225f9:	jmp    0x42261f
  4225fb:	mov    al,0xc1
  4225fd:	or     DWORD PTR [esi],0xffffffc7
  422600:	(bad)  
  422601:	lods   al,BYTE PTR ds:[esi]
  422602:	neg    eax
  422604:	sub    dh,BYTE PTR [esi+0x652809c4]
  42260a:	repz rcr DWORD PTR [ebx+0x20],1
  42260e:	add    edi,DWORD PTR [eax-0x43406ddf]
  422614:	idiv   DWORD PTR [ecx-0x47fe2657]
  42261a:	mov    cl,0x73
  42261c:	cmp    DWORD PTR [ebx-0x75],0x0
  422620:	jge    0x42264e
  422622:	add    BYTE PTR [esi-0xb],al
  422625:	lea    edx,[esi-0x1a]
  422628:	xor    eax,0x183c031b
  42262d:	pop    ebp
  42262e:	xchg   ebx,eax
  42262f:	mov    bh,BYTE PTR [edi+0x5b]
  422632:	je     0x4225e8
  422634:	daa    
  422635:	xor    edx,DWORD PTR [edi]
  422637:	es nop
  422639:	(bad)  
  42263a:	dec    esi
  42263b:	sti    
  42263c:	pop    ss
  42263d:	sbb    BYTE PTR [eax],bh
  42263f:	or     al,BYTE PTR [edx]
  422641:	mov    dl,0xc1
  422643:	cmc    
  422644:	sub    al,0x50
  422646:	es dec eax
  422648:	test   eax,0x612eb606
  42264d:	cs cli 
  42264f:	adc    DWORD PTR [esi+eax*8-0xd],0x3c86e785
  422657:	test   DWORD PTR [esi+0x2e],0xa946baec
  42265e:	pop    esp
  42265f:	(bad)  
  422660:	adc    DWORD PTR ds:0x1e0bad0c,esp
  422666:	add    eax,0x83ec20ff
  42266b:	pop    edi
  42266c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42266d:	or     esp,edi
  42266f:	cmp    eax,0xd12bc401
  422674:	push   edx
  422675:	xor    esp,DWORD PTR [eax+0x21]
  422678:	in     eax,0x18
  42267a:	out    dx,al
  42267b:	dec    ebp
  42267c:	je     0x422638
  42267e:	(bad)  
  42267f:	stc    
  422680:	shl    BYTE PTR [eax],1
  422682:	push   edi
  422683:	in     al,0xb6
  422685:	pop    edx
  422686:	add    ebp,DWORD PTR ds:0xc7c0c8c3
  42268c:	sbb    edx,DWORD PTR [eax-0x62]
  42268f:	(bad)  
  422690:	loop   0x4226d9
  422692:	les    eax,FWORD PTR [edx-0x25058f44]
  422698:	outs   dx,DWORD PTR ds:[esi]
  422699:	lahf   
  42269a:	jae    0x422669
  42269c:	sbb    cl,BYTE PTR [ebx+0x40]
  42269f:	mov    ah,0x7b
  4226a1:	mov    ds:0xf61aaf4c,eax
  4226a6:	add    al,0x3e
  4226a8:	fwait
  4226a9:	loopne 0x4226e7
  4226ab:	sbb    edi,edi
  4226ad:	mov    dl,0x3d
  4226af:	adc    esp,DWORD PTR [edx-0x4ccb9f26]
  4226b5:	push   0xffffffb9
  4226b7:	(bad)  ds:0x811a42c4
  4226bd:	stos   DWORD PTR es:[edi],eax
  4226be:	dec    ebx
  4226bf:	mov    WORD PTR ss:[eax-0x35],fs
  4226c3:	arpl   WORD PTR [eax+0x52],sp
  4226c6:	or     al,0xac
  4226c8:	xchg   ebp,eax
  4226c9:	adc    BYTE PTR [ecx],al
  4226cb:	pop    ebx
  4226cc:	dec    ebp
  4226cd:	in     eax,dx
  4226ce:	test   esi,ebx
  4226d0:	xlat   BYTE PTR ds:[ebx]
  4226d1:	xchg   esp,eax
  4226d2:	push   ecx
  4226d3:	jecxz  0x422690
  4226d5:	out    0xfa,al
  4226d7:	(bad)  
  4226d8:	ror    bh,1
  4226da:	sti    
  4226db:	mov    esp,0xc159fdf7
  4226e0:	add    bh,BYTE PTR [esi+eax*1]
  4226e3:	mov    ebx,DWORD PTR [edx]
  4226e5:	fcom   QWORD PTR [edi]
  4226e7:	lods   al,BYTE PTR ds:[esi]
  4226e8:	pop    eax
  4226e9:	popf   
  4226ea:	aaa    
  4226eb:	dec    ebx
  4226ec:	repnz or BYTE PTR [eax-0x17],al
  4226f0:	and    al,0x5f
  4226f2:	mov    bh,0xc0
  4226f4:	adc    DWORD PTR [ecx],ecx
  4226f6:	inc    edx
  4226f7:	jno    0x422777
  4226f9:	repnz or edx,DWORD PTR [ebx-0x57907a9d]
  422700:	call   0x9040:0x1b1e3f45
  422707:	xchg   DWORD PTR [ebx+0x15d4ed9e],edi
  42270d:	push   esi
  42270e:	jbe    0x42273a
  422710:	inc    esi
  422711:	inc    ebp
  422712:	sahf   
  422713:	mov    ebp,0xab3dcb1c
  422718:	and    ch,BYTE PTR [eax-0x406e3e08]
  42271e:	xchg   ebx,eax
  42271f:	sti    
  422720:	mul    DWORD PTR [edi+ecx*8]
  422723:	ds dec esi
  422725:	call   0x16be:0x1a25f34c
  42272c:	mov    bh,BYTE PTR [edx-0x77]
  42272f:	mov    ah,0x87
  422731:	(bad)  
  422732:	das    
  422733:	mov    bl,0x11
  422735:	jbe    0x422794
  422737:	pop    es
  422738:	fucomp st(6)
  42273a:	xchg   ebx,eax
  42273b:	cli    
  42273c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42273d:	or     al,BYTE PTR [ecx]
  42273f:	mov    esi,DWORD PTR [ebp-0x3d]
  422742:	int    0x83
  422744:	es and al,0xc8
  422747:	jge    0x422724
  422749:	sbb    dh,0x3f
  42274c:	xchg   ecx,eax
  42274d:	add    BYTE PTR [edx+0x62],dh
  422750:	popf   
  422751:	jnp    0x42270d
  422753:	fnsave [esi+ecx*1+0x12]
  422757:	cli    
  422758:	mov    ebx,0x34369a5c
  42275d:	mov    ebp,0x2088e528
  422762:	sbb    eax,0xaddc5923
  422767:	test   DWORD PTR [edi-0x2b],ebp
  42276a:	sub    eax,0x9dc795ec
  42276f:	lds    eax,FWORD PTR [ebx]
  422771:	daa    
  422772:	mov    bl,0x37
  422774:	psubw  mm7,QWORD PTR [edx-0x67]
  422778:	mov    ds:0x7d38f759,eax
  42277d:	sbb    DWORD PTR [edi+0x68c4192f],ebp
  422783:	(bad)  
  422784:	data16 lods al,BYTE PTR ds:[esi]
  422786:	and    eax,0x88ab1559
  42278b:	stos   BYTE PTR es:[edi],al
  42278c:	std    
  42278d:	dec    ecx
  42278e:	cld    
  42278f:	scas   eax,DWORD PTR es:[edi]
  422790:	jg     0x422799
  422792:	mov    ds:0xae48ece0,al
  422797:	mov    edx,0xb5b257bc
  42279c:	xchg   DWORD PTR [edx],esp
  42279e:	shr    BYTE PTR [esi-0x53759804],1
  4227a4:	sbb    DWORD PTR ds:0xe5372afd,ecx
  4227aa:	sbb    BYTE PTR [eax-0x41],ch
  4227ad:	rcr    eax,cl
  4227af:	call   0xbc21c606
  4227b4:	mov    ebx,0x7aa79a9f
  4227b9:	jp     0x4227d9
  4227bb:	mov    ecx,0xb8472dd0
  4227c0:	mov    ecx,0xe2a3279d
  4227c5:	andps  xmm7,xmm7
  4227c8:	pop    esp
  4227c9:	push   ds
  4227ca:	adc    al,BYTE PTR [edi+0x7b]
  4227cd:	push   esp
  4227ce:	xor    DWORD PTR [ecx-0x40],ecx
  4227d1:	(bad)  ds:0x94ce291f
  4227d7:	fst    DWORD PTR [edx-0x68]
  4227da:	and    ah,BYTE PTR ds:0x467543fe
  4227e0:	into   
  4227e1:	push   0xffffffd7
  4227e3:	pop    edx
  4227e4:	cmp    al,0x67
  4227e6:	mov    esi,0x54cbeefd
  4227eb:	jae    0x422864
  4227ed:	cmp    eax,0xbe3dcaa5
  4227f2:	adc    al,0xd4
  4227f4:	dec    esp
  4227f5:	and    eax,0x235b323b
  4227fa:	jae    0x4227c2
  4227fc:	(bad)  
  4227fd:	ror    DWORD PTR [ebp+0x1e],0xeb
  422801:	push   0xd
  422803:	div    DWORD PTR [esi-0x1c]
  422806:	fstp   QWORD PTR [eax+0x799e0a17]
  42280c:	adc    al,0x5d
  42280e:	stc    
  42280f:	(bad)  
  422810:	adc    eax,0x394f8675
  422815:	sub    al,0x75
  422817:	ins    BYTE PTR es:[edi],dx
  422818:	or     DWORD PTR [edx],eax
  42281a:	xor    edi,DWORD PTR [esp+esi*1+0x2a788079]
  422821:	jns    0x4227d5
  422823:	or     BYTE PTR [ebx+0x24c5954d],0xc3
  42282a:	inc    edi
  42282b:	mov    edi,0x1df002ba
  422830:	push   ecx
  422831:	aad    0x10
  422833:	lahf   
  422834:	mov    bl,0x1e
  422836:	or     eax,0x6b4c1483
  42283b:	and    BYTE PTR [edi],ch
  42283d:	adc    eax,0x11a75867
  422842:	fld    TBYTE PTR [eax-0x63091294]
  422848:	aas    
  422849:	pop    eax
  42284a:	fs mov dh,0x1c
  42284d:	and    ecx,DWORD PTR [ebx-0xf450af0]
  422853:	add    eax,0xfe37169
  422858:	loopne 0x4228a2
  42285a:	rol    ah,cl
  42285c:	iret   
  42285d:	js     0x42288f
  42285f:	inc    esp
  422860:	ins    DWORD PTR es:[edi],dx
  422861:	cmc    
  422862:	mov    esi,DWORD PTR ds:0xb6238223
  422868:	aaa    
  422869:	neg    BYTE PTR [esi-0x7b]
  42286c:	pushf  
  42286d:	pop    ebp
  42286e:	out    0x28,al
  422870:	test   eax,0x57d5b835
  422875:	dec    edi
  422876:	popf   
  422877:	bound  ebp,QWORD PTR [ebx+0x26]
  42287a:	push   edx
  42287b:	mov    edi,0x699ead4f
  422880:	mov    esi,0x8006cfb2
  422885:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422886:	std    
  422887:	mov    DWORD PTR [edi+0x4fdb57ad],edx
  42288d:	in     al,0xb6
  42288f:	stos   DWORD PTR es:[edi],eax
  422890:	(bad)
  422894:	mov    eax,DWORD PTR [esi]
  422896:	mov    DWORD PTR [eax],edx
  422898:	leave  
  422899:	push   ecx
  42289a:	adc    edx,ebp
  42289c:	pop    ss
  42289d:	sub    bh,cl
  42289f:	lea    ebx,[ecx-0x4cf5984d]
  4228a5:	mov    WORD PTR [eax-0x4b97389f],es
  4228ab:	or     eax,0xc51743cb
  4228b0:	or     bh,al
  4228b2:	push   edi
  4228b3:	jecxz  0x4228b2
  4228b5:	std    
  4228b6:	stos   DWORD PTR es:[edi],eax
  4228b7:	int3   
  4228b8:	jmp    0x2f34:0x9a704456
  4228bf:	mov    WORD PTR [edi+0x4e790afb],?
  4228c5:	inc    ebp
  4228c6:	push   ebx
  4228c7:	rcr    BYTE PTR [edi],0x61
  4228ca:	mul    ebp
  4228cc:	jae    0x42289d
  4228ce:	jecxz  0x422917
  4228d0:	out    0xae,eax
  4228d2:	(bad)  
  4228d3:	or     DWORD PTR [edx-0x1f],esi
  4228d6:	inc    esi
  4228d7:	sti    
  4228d8:	into   
  4228d9:	xchg   ebp,eax
  4228da:	ret    0x445f
  4228dd:	and    eax,0x8f9f76cf
  4228e2:	add    DWORD PTR [ecx+0x53],ebx
  4228e5:	sahf   
  4228e6:	or     esi,DWORD PTR [edx-0x1]
  4228e9:	imul   edx,ebx,0x8bfc8c53
  4228ef:	push   0x3c
  4228f1:	adc    DWORD PTR [ecx-0x62],esi
  4228f4:	push   esi
  4228f5:	jnp    0x4228df
  4228f7:	dec    esi
  4228f8:	sbb    BYTE PTR [edx+0x7929efe0],dl
  4228fe:	mov    esi,0x40b333fb
  422903:	mov    ah,0x7e
  422905:	cmp    cl,BYTE PTR [edi-0x453ecc50]
  42290b:	adc    DWORD PTR [ebp-0x2fd40033],ecx
  422911:	mov    eax,DWORD PTR [ebp-0x1c]
  422914:	jmp    0x422972
  422919:	mov    edx,DWORD PTR [ebp+0x14]
  42291c:	xor    DWORD PTR [eax],edx
  42291e:	mov    DWORD PTR ds:0x42a17b,0x16
  422928:	cmp    DWORD PTR ds:0x42a17b,0x0
  42292f:	je     0x42295d
  422935:	cmp    DWORD PTR ds:0x42a17b,0x25
  42293c:	jbe    0x42295d
  422942:	jmp    0x42294d
  422947:	call   DWORD PTR ds:0x42a2a7
  42294d:	mov    eax,ds:0x42a17b
  422952:	dec    eax
  422953:	mov    ds:0x42a17b,eax
  422958:	jmp    0x422928
  42295d:	mov    eax,DWORD PTR [ebp-0x4]
  422960:	mov    DWORD PTR [ebp-0x1c],eax
  422963:	mov    eax,DWORD PTR [ebp+0x10]
  422966:	xor    eax,ecx
  422968:	mov    edx,0xffcd8d11
  42296d:	sub    edx,eax
  42296f:	mov    eax,DWORD PTR [ebp-0x1c]
  422972:	add    DWORD PTR [eax],edx
  422974:	mov    eax,DWORD PTR [ebp-0x4]
  422977:	mov    edx,DWORD PTR [ebp-0x8]
  42297a:	add    edx,DWORD PTR [eax]
  42297c:	mov    DWORD PTR [ebp-0x8],edx
  42297f:	mov    eax,DWORD PTR [ebp+0xc]
  422982:	mov    edx,DWORD PTR [ebp+0xc]
  422985:	xor    edx,ecx
  422987:	xor    eax,ecx
  422989:	lea    eax,[eax+edx*1+0x64e5de]
  422990:	mov    edx,DWORD PTR [ebp+0xc]
  422993:	xor    edx,ecx
  422995:	add    edx,esi
  422997:	imul   eax,edx
  42299a:	mov    edx,DWORD PTR [ebp+0xc]
  42299d:	xor    edx,ecx
  42299f:	sub    edx,eax
  4229a1:	mov    eax,DWORD PTR [ebp-0x4]
  4229a4:	add    edx,esi
  4229a6:	cmp    DWORD PTR [eax],edx
  4229a8:	mov    eax,DWORD PTR [ebp-0x4]
  4229ab:	jg     0x4229c8
  4229b1:	mov    DWORD PTR [ebp-0x1c],eax
  4229b4:	mov    eax,DWORD PTR [ebp+0x10]
  4229b7:	xor    eax,ecx
  4229b9:	mov    edx,0xffcd8d11
  4229be:	sub    edx,eax
  4229c0:	mov    eax,DWORD PTR [ebp-0x1c]
  4229c3:	jmp    0x4229cf
  4229c8:	mov    edx,DWORD PTR [ebp+0x10]
  4229cb:	xor    edx,ecx
  4229cd:	add    edx,esi
  4229cf:	add    DWORD PTR [eax],edx
  4229d1:	mov    eax,DWORD PTR [ebp-0x8]
  4229d4:	mov    edx,DWORD PTR [ebp-0x10]
  4229d7:	mov    eax,DWORD PTR [eax]
  4229d9:	xor    edx,ecx
  4229db:	add    edx,0x3272ee
  4229e1:	not    edx
  4229e3:	and    eax,edx
  4229e5:	mov    DWORD PTR [ebp-0x4],eax
  4229e8:	movsx  eax,BYTE PTR [eax+0x1]
  4229ec:	cdq    
  4229ed:	add    eax,ebx
  4229ef:	adc    edx,0xffffffff
  4229f2:	xor    eax,edi
  4229f4:	xor    edx,0x0
  4229f7:	cmp    eax,0x70941e0f
  4229fc:	jne    0x42397d
  422a02:	cmp    edx,0xffffffff
  422a05:	jne    0x42397d
  422a0b:	mov    eax,DWORD PTR [ebp-0x4]
  422a0e:	movsx  eax,BYTE PTR [eax]
  422a11:	cdq    
  422a12:	add    eax,ebx
  422a14:	adc    edx,0xffffffff
  422a17:	xor    eax,edi
  422a19:	xor    edx,0x0
  422a1c:	cmp    eax,0x70941e1c
  422a21:	jne    0x42397d
  422a27:	cmp    edx,0xffffffff
  422a2a:	je     0x423994
  422a30:	jmp    0x42397d
  422a35:	sbb    dl,dh
  422a37:	pop    edx
  422a38:	rcl    DWORD PTR [eax-0x6348682f],1
  422a3e:	jae    0x422a78
  422a40:	mov    DWORD PTR [edx],esi
  422a42:	xor    DWORD PTR [ecx+edx*1+0x7],0xffffff8b
  422a47:	jns    0x422ac3
  422a49:	dec    edx
  422a4a:	imul   edi,DWORD PTR [edx+0x7a],0x45
  422a4e:	in     al,0x9b
  422a50:	sub    DWORD PTR [edx+0x3b],ecx
  422a53:	in     al,0xc9
  422a55:	das    
  422a56:	xchg   esp,eax
  422a57:	pop    ds
  422a58:	aad    0xb0
  422a5a:	inc    ecx
  422a5b:	adc    al,0x91
  422a5d:	pop    edx
  422a5e:	out    dx,al
  422a5f:	dec    edi
  422a60:	int3   
  422a61:	lods   al,BYTE PTR ds:[esi]
  422a62:	jge    0x422a13
  422a64:	dec    bp
  422a66:	stos   BYTE PTR es:[edi],al
  422a67:	mov    ch,0x88
  422a69:	xor    al,0xce
  422a6b:	inc    ecx
  422a6c:	xchg   DWORD PTR [ebp+0x1e],edx
  422a6f:	mov    edi,0xf4af428f
  422a74:	lds    ebp,FWORD PTR ds:0xf3f39efb
  422a7a:	iret   
  422a7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a7c:	sbb    al,0x14
  422a7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a7f:	popa   
  422a80:	mov    BYTE PTR [ebx+0x51],dh
  422a83:	add    eax,0x5e9e1c33
  422a88:	adc    ch,BYTE PTR [esi+0x30]
  422a8b:	pop    ss
  422a8c:	out    dx,al
  422a8d:	sub    DWORD PTR [edi+ecx*8-0x31],0x66
  422a92:	xchg   ebp,eax
  422a93:	adc    edi,ebp
  422a95:	ret    0xf2e2
  422a98:	add    BYTE PTR [ecx-0x11467fdd],0xad
  422a9f:	lds    esp,FWORD PTR [edx]
  422aa1:	jmp    0x369d:0xf2f9b8a4
  422aa8:	push   edi
  422aa9:	xchg   DWORD PTR [esi-0x7d],esp
  422aac:	fcmove st,st(7)
  422aae:	and    ebp,DWORD PTR [ecx+0x3a61038e]
  422ab4:	mov    ebp,0x9874ee64
  422ab9:	sub    al,0x66
  422abb:	cmp    BYTE PTR [edx+edi*8+0x64dc4e27],al
  422ac2:	arpl   WORD PTR [edx+ecx*8],bx
  422ac5:	mov    ebx,edx
  422ac7:	cmp    eax,0xcc037a74
  422acc:	test   eax,0xa3cb0b00
  422ad1:	daa    
  422ad2:	jmp    0x2582:0xe35e020d
  422ad9:	xchg   DWORD PTR [edx+0x49c98824],edx
  422adf:	jnp    0x422b2e
  422ae1:	mov    ax,0x7177
  422ae5:	xor    BYTE PTR [edi-0x3a],0xcd
  422ae9:	imul   ecx,DWORD PTR [edi-0x3e],0x21c643ac
  422af0:	push   es
  422af1:	ficom  DWORD PTR [esi]
  422af3:	add    BYTE PTR [edi],bh
  422af5:	int    0x75
  422af7:	loop   0x422a80
  422af9:	mov    edi,0x3362eb61
  422afe:	ja     0x422b5b
  422b00:	cmp    ebx,DWORD PTR [edx-0x1a]
  422b03:	out    0x7c,eax
  422b05:	xchg   esi,eax
  422b06:	pop    eax
  422b07:	(bad)  
  422b08:	stos   BYTE PTR es:[edi],al
  422b09:	xor    BYTE PTR [edx],dh
  422b0b:	or     esi,DWORD PTR ds:0x33506a8e
  422b11:	mov    esp,0xe1fdf2d8
  422b16:	jg     0x422aa4
  422b18:	pusha  
  422b19:	out    0xcb,eax
  422b1b:	(bad)  
  422b1c:	jne    0x422b9c
  422b1e:	loope  0x422b38
  422b20:	into   
  422b21:	push   ebp
  422b22:	add    ebp,DWORD PTR [esi]
  422b24:	daa    
  422b25:	cmp    al,0xae
  422b27:	jae    0x422afb
  422b29:	(bad)  [ebx-0x46]
  422b2c:	add    eax,0x651a0225
  422b31:	mov    edi,0x8d197b62
  422b36:	jg     0x422bb5
  422b38:	fisttp WORD PTR [edx]
  422b3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b3b:	lock aam 0x0
  422b3e:	stos   DWORD PTR es:[edi],eax
  422b3f:	outs   dx,DWORD PTR ds:[esi]
  422b40:	jp     0x422b3a
  422b42:	or     bh,dl
  422b44:	arpl   WORD PTR [esi+0x4841f5df],ax
  422b4a:	shr    BYTE PTR ss:0xcdccb5c3,1
  422b51:	mov    ds:0xf7dd2b42,eax
  422b56:	bnd jp 0x422bd0
  422b59:	sbb    BYTE PTR [edi-0x76],bh
  422b5c:	dec    ebx
  422b5d:	into   
  422b5e:	and    esp,DWORD PTR [ebp+0x797413a2]
  422b64:	outs   dx,DWORD PTR ds:[esi]
  422b65:	aad    0xb9
  422b67:	xchg   ebx,eax
  422b68:	in     eax,0xb8
  422b6a:	jns    0x422b67
  422b6c:	adc    eax,0xcc11a95b
  422b71:	pop    ds
  422b72:	xchg   ebp,eax
  422b73:	fistp  QWORD PTR [edi+0x78]
  422b76:	cmp    BYTE PTR [esi-0x2425e40c],0x73
  422b7d:	xchg   edi,eax
  422b7e:	xchg   ebp,eax
  422b7f:	push   es
  422b80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b81:	out    dx,al
  422b82:	outs   dx,BYTE PTR ds:[esi]
  422b83:	inc    ebx
  422b84:	inc    esp
  422b85:	aaa    
  422b86:	dec    eax
  422b87:	aas    
  422b88:	jbe    0x422b2c
  422b8a:	and    ah,dl
  422b8c:	sub    DWORD PTR [esi+0x11],0x16
  422b90:	add    BYTE PTR [ebx-0x18],bl
  422b93:	adc    eax,0x52b9768c
  422b98:	lds    ebp,FWORD PTR [eax+eiz*2-0x3a]
  422b9c:	inc    ebp
  422b9d:	add    al,0x21
  422b9f:	jp     0x422b2d
  422ba1:	inc    eax
  422ba2:	(bad)  
  422ba3:	pop    edx
  422ba4:	cld    
  422ba5:	fsub   QWORD PTR [ebp-0x132dee66]
  422bab:	pusha  
  422bac:	or     ebp,DWORD PTR [esi+esi*8-0x1a3b7927]
  422bb3:	bound  eax,QWORD PTR [esi+0x7e]
  422bb6:	add    DWORD PTR [esi],ebp
  422bb8:	xor    eax,0x6109dd51
  422bbd:	enter  0xdd8d,0x3c
  422bc1:	ss mov ds,esp
  422bc4:	sub    al,0xfd
  422bc6:	sbb    al,0x1c
  422bc8:	sbb    eax,0x9e11391b
  422bcd:	add    BYTE PTR [ebx-0x55],0xeb
  422bd1:	(bad)
  422bd4:	and    cl,BYTE PTR [esi+0x303755cb]
  422bda:	jmp    FWORD PTR [eax-0x16d5b208]
  422be0:	pusha  
  422be1:	lods   eax,DWORD PTR ds:[esi]
  422be2:	nop
  422be3:	cmp    DWORD PTR [ebp+0x7],0x48f34871
  422bea:	mov    cl,0x2f
  422bec:	ds mov eax,0xe5eafb90
  422bf2:	pop    es
  422bf3:	dec    ebp
  422bf4:	push   DWORD PTR [edi]
  422bf6:	push   0xe4d4f956
  422bfb:	mov    al,ds:0x3eaa75bc
  422c00:	loope  0x422b94
  422c02:	lahf   
  422c03:	inc    ebx
  422c04:	ins    BYTE PTR es:[edi],dx
  422c05:	xlat   BYTE PTR ds:[ebx]
  422c06:	inc    esi
  422c07:	or     edx,DWORD PTR [ebx+0x18]
  422c0a:	mov    esp,0xe189de07
  422c0f:	rcl    BYTE PTR [edx],1
  422c11:	mov    al,ds:0xfa029320
  422c16:	xchg   ecx,eax
  422c17:	mov    esi,DWORD PTR [ebx]
  422c19:	icebp  
  422c1a:	mov    bh,0xb3
  422c1c:	ja     0x422c25
  422c1e:	iret   
  422c1f:	arpl   WORD PTR [esi],bp
  422c21:	mov    ?,esp
  422c23:	add    ah,ah
  422c25:	jecxz  0x422c8a
  422c27:	popa   
  422c28:	sub    edi,DWORD PTR [ebx]
  422c2a:	fcmovu st,st(1)
  422c2c:	sbb    dl,BYTE PTR [edi+0x0]
  422c2f:	test   al,0x44
  422c31:	inc    ebp
  422c32:	adc    al,0x97
  422c34:	cmp    cl,BYTE PTR [eax]
  422c36:	loope  0x422c1c
  422c38:	mov    esp,ebx
  422c3a:	push   es
  422c3b:	lahf   
  422c3c:	push   edx
  422c3d:	cli    
  422c3e:	add    BYTE PTR ds:0x5ebdbe91,al
  422c44:	mov    esp,0x6a068302
  422c49:	or     eax,0xe9252837
  422c4e:	inc    edx
  422c4f:	aam    0xca
  422c51:	push   esi
  422c52:	jmp    0x5749:0x81e7070d
  422c59:	dec    edi
  422c5a:	daa    
  422c5b:	retf   
  422c5c:	or     eax,0x7682bbd9
  422c61:	les    ax,DWORD PTR [ebx-0x8f328df]
  422c68:	dec    esp
  422c69:	mov    dh,0x92
  422c6b:	sbb    ebp,DWORD PTR [esi-0x3a]
  422c6e:	stc    
  422c6f:	and    esp,DWORD PTR [ebp+esi*4+0x4d]
  422c73:	daa    
  422c74:	sar    edi,0xa2
  422c77:	mov    ebx,0xb4eb4116
  422c7c:	xchg   esp,eax
  422c7d:	pop    es
  422c7e:	shl    DWORD PTR [ebx+0x46bf24d6],0xce
  422c85:	loopne 0x422cc8
  422c87:	xchg   edx,eax
  422c88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c89:	hlt    
  422c8a:	inc    eax
  422c8b:	adc    bh,BYTE PTR [ebx]
  422c8d:	dec    eax
  422c8e:	ror    BYTE PTR [ebx+0x13b4e79d],1
  422c94:	inc    eax
  422c95:	dec    esi
  422c96:	std    
  422c97:	add    dl,0x5c
  422c9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c9b:	and    ah,cl
  422c9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c9e:	pusha  
  422c9f:	(bad)  [eax-0xb8e322b]
  422ca5:	dec    ecx
  422ca6:	nop
  422ca7:	xchg   esp,eax
  422ca8:	jmp    0x422c76
  422caa:	lods   eax,DWORD PTR ds:[esi]
  422cab:	outs   dx,BYTE PTR ds:[esi]
  422cac:	xor    al,0xf4
  422cae:	mov    ss,ecx
  422cb0:	cmp    ebp,DWORD PTR [edx]
  422cb2:	shl    cl,1
  422cb4:	popa   
  422cb5:	dec    esp
  422cb6:	xchg   ah,ah
  422cb8:	jbe    0x422c6e
  422cba:	arpl   WORD PTR [eax+0x577d0e81],ax
  422cc0:	xor    DWORD PTR [ebx-0x7e],ebx
  422cc3:	cld    
  422cc4:	and    esp,esi
  422cc6:	push   edx
  422cc7:	stc    
  422cc8:	(bad)  
  422cc9:	repz pop es
  422ccb:	mov    edi,DWORD PTR es:[eax]
  422cce:	sbb    ah,BYTE PTR [ecx+eiz*2]
  422cd1:	cmc    
  422cd2:	jl     0x422c70
  422cd4:	lahf   
  422cd5:	fmul   QWORD PTR [ebx+0x79]
  422cd8:	shl    DWORD PTR [eax+0x430d732e],cl
  422cde:	out    dx,al
  422cdf:	shr    BYTE PTR [ebx-0x56],1
  422ce2:	out    0x62,eax
  422ce4:	mov    eax,0x4a5b4693
  422ce9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422cea:	sub    edx,DWORD PTR [edx+0x629f4b01]
  422cf0:	cmp    al,0xf8
  422cf2:	gs js  0x422c92
  422cf5:	repnz push 0x1ac641a
  422cfb:	fiadd  DWORD PTR [eax]
  422cfd:	mov    dh,0xe6
  422cff:	sub    cl,ch
  422d01:	jecxz  0x422d48
  422d03:	sub    edi,edx
  422d05:	mov    ecx,0x5892690e
  422d0a:	mov    ecx,0x17c798a1
  422d0f:	mov    eax,0x31b1da6
  422d14:	fnsave [eax]
  422d16:	push   ss
  422d17:	pop    esp
  422d18:	dec    ecx
  422d19:	outs   dx,BYTE PTR ds:[esi]
  422d1a:	pushf  
  422d1b:	add    eax,0xffffffa6
  422d1e:	sbb    ecx,DWORD PTR [esp+edi*2]
  422d21:	fwait
  422d22:	xor    bl,bh
  422d24:	push   ds
  422d25:	in     eax,dx
  422d26:	adc    DWORD PTR [esi+0x4dc9d8c7],ecx
  422d2c:	xchg   edi,eax
  422d2d:	mov    gs,edx
  422d2f:	mov    bl,0x92
  422d31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d33:	clc    
  422d34:	mov    ebp,0x4d50a864
  422d39:	scas   al,BYTE PTR es:[edi]
  422d3a:	mov    bl,0xd8
  422d3c:	lods   al,BYTE PTR ds:[esi]
  422d3d:	punpckhwd mm0,QWORD PTR [edi-0x7a2ab105]
  422d44:	leave  
  422d45:	sub    ah,BYTE PTR [ebx+0xf060b23]
  422d4b:	test   eax,0x4831a128
  422d50:	or     dl,BYTE PTR [edi]
  422d52:	rcl    bl,cl
  422d54:	cmp    BYTE PTR [esi+0x5f7534de],ch
  422d5a:	inc    ebx
  422d5b:	hlt    
  422d5c:	dec    ebx
  422d5d:	inc    esi
  422d5e:	xchg   ebp,eax
  422d5f:	and    BYTE PTR [edi-0x18],bl
  422d62:	xchg   esi,eax
  422d63:	repnz add al,0x1c
  422d66:	push   ecx
  422d67:	or     BYTE PTR [edi+0x5ac2d738],ch
  422d6d:	mov    bl,al
  422d6f:	inc    ebp
  422d70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d71:	add    eax,0x5e411393
  422d76:	or     DWORD PTR [ebx],ebp
  422d78:	lock inc esp
  422d7a:	push   cs
  422d7b:	cs fdivrp st(4),st
  422d7e:	mov    BYTE PTR [eax+0x24d89b9f],ch
  422d84:	(bad)  
  422d85:	(bad)  
  422d86:	lods   eax,DWORD PTR ds:[esi]
  422d87:	lods   eax,DWORD PTR ds:[esi]
  422d88:	pop    ds
  422d89:	js     0x422d0e
  422d8b:	imul   ebx,esp,0xffffffd1
  422d8e:	add    BYTE PTR [esi+0x1b7a72ec],0xf0
  422d95:	dec    eax
  422d96:	sbb    al,0xf1
  422d98:	xor    al,0x3
  422d9a:	add    al,0x92
  422d9c:	popa   
  422d9d:	mov    fs,WORD PTR [eax]
  422d9f:	fs or  eax,0x5f077e
  422da5:	xor    DWORD PTR [edi-0x47e967f4],edx
  422dab:	fldpi  
  422dad:	dec    ebp
  422dae:	call   0xf7bb7a9c
  422db3:	les    edx,FWORD PTR [edi+eax*4-0x69]
  422db7:	add    BYTE PTR [edx-0x1a],ch
  422dba:	fnsetpm(287 only) 
  422dbc:	stc    
  422dbd:	cmp    edx,DWORD PTR [edx]
  422dbf:	cdq    
  422dc0:	scas   eax,DWORD PTR es:[edi]
  422dc1:	rcl    DWORD PTR [ecx+ebp*4-0x2ab3584a],0xfc
  422dc9:	or     ah,BYTE PTR [ecx-0x13af9450]
  422dcf:	adc    bl,ch
  422dd1:	mov    ch,0xa5
  422dd3:	sar    bl,cl
  422dd5:	ss pop eax
  422dd7:	push   ds
  422dd8:	mov    dh,0xc7
  422dda:	adc    ebp,DWORD PTR [eax-0x3d]
  422ddd:	daa    
  422dde:	repz je 0x422df7
  422de1:	shl    DWORD PTR [ebp+ebx*1+0x79ae1967],0x4f
  422de9:	xor    edx,esi
  422deb:	mov    ch,0xa8
  422ded:	sbb    ah,BYTE PTR [ebp-0x67]
  422df0:	mov    ecx,0xc46a3479
  422df5:	xchg   edi,eax
  422df6:	call   0x7e5c9497
  422dfb:	mov    ebp,0x83043c92
  422e00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e02:	out    0xef,al
  422e04:	test   BYTE PTR [ebp+0x5509846b],dl
  422e0a:	pop    edx
  422e0b:	ins    DWORD PTR es:[edi],dx
  422e0c:	ret    0xa24
  422e0f:	shl    BYTE PTR [eax+edi*1],1
  422e12:	or     ebx,edi
  422e14:	fs lahf 
  422e16:	aam    0xc6
  422e18:	adc    DWORD PTR [ebx-0x49072d2a],eax
  422e1e:	ss cwde 
  422e20:	(bad)  
  422e21:	ss adc al,0x30
  422e24:	inc    edi
  422e25:	retf   0xf4d
  422e28:	and    dh,BYTE PTR [eax+0x65e5fb3]
  422e2e:	sbb    DWORD PTR [esp+ebx*4+0x6a],eax
  422e32:	adc    BYTE PTR [edx-0x30848b83],bl
  422e38:	scas   eax,DWORD PTR es:[edi]
  422e39:	dec    esi
  422e3a:	dec    edx
  422e3b:	adc    eax,0x12b852ef
  422e40:	out    dx,al
  422e41:	cli    
  422e42:	cmc    
  422e43:	pop    es
  422e44:	cmc    
  422e45:	pusha  
  422e46:	sub    dl,cl
  422e48:	loopne 0x422dfe
  422e4a:	(bad)  
  422e4b:	jno    0x422e26
  422e4d:	es popa 
  422e4f:	stos   DWORD PTR es:[edi],eax
  422e50:	mov    ecx,DWORD PTR [ebp-0x1c4b0297]
  422e56:	das    
  422e57:	nop
  422e58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e59:	adc    eax,DWORD PTR [ebp+0x2e2595a5]
  422e5f:	dec    eax
  422e60:	jmp    0x44e1:0x9a939ac7
  422e67:	or     edx,DWORD PTR [edx-0x4b]
  422e6a:	adc    eax,edi
  422e6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e6d:	xor    DWORD PTR [edx-0x3d73c749],ebx
  422e73:	(bad)  
  422e74:	call   0x76e4a2bd
  422e79:	stos   DWORD PTR es:[edi],eax
  422e7a:	push   0xffffff92
  422e7c:	dec    ecx
  422e7d:	repz dec eax
  422e7f:	pushf  
  422e80:	daa    
  422e81:	stc    
  422e82:	mov    bh,dl
  422e84:	jae    0x422e4a
  422e86:	cdq    
  422e87:	fadd   st,st(4)
  422e89:	cdq    
  422e8a:	retf   
  422e8b:	fmul   DWORD PTR [ecx]
  422e8d:	dec    ebx
  422e8e:	rol    ah,0xfd
  422e91:	cmp    al,0xde
  422e93:	sbb    esi,DWORD PTR [edx+0x64ade206]
  422e99:	jmp    0x76603989
  422e9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e9f:	push   edx
  422ea0:	sahf   
  422ea1:	xchg   edi,eax
  422ea2:	outs   dx,BYTE PTR ds:[esi]
  422ea3:	ja     0x422edd
  422ea5:	and    dl,al
  422ea7:	fcomp  DWORD PTR [esi+ecx*1]
  422eaa:	lods   eax,DWORD PTR ds:[esi]
  422eab:	or     BYTE PTR [ebp-0x67cdab85],ch
  422eb1:	sbb    bh,BYTE PTR [esp+ecx*2+0x15]
  422eb5:	ins    BYTE PTR es:[edi],dx
  422eb6:	rcl    DWORD PTR [ecx+0x3c],0x6a
  422eba:	and    al,BYTE PTR [eax-0x43db0450]
  422ec0:	jmp    0x72ae:0xbcc10d
  422ec7:	cwde   
  422ec8:	lods   al,BYTE PTR ds:[esi]
  422ec9:	rcl    BYTE PTR [eax-0xd78af63],1
  422ecf:	test   al,0x8e
  422ed1:	les    edi,FWORD PTR [edi]
  422ed3:	adc    eax,0x1e52ed66
  422ed8:	pop    ebx
  422ed9:	out    dx,eax
  422eda:	jle    0x422ebf
  422edc:	fnstcw WORD PTR [esi]
  422ede:	mov    ch,0x8d
  422ee0:	add    eax,0xea396e49
  422ee5:	mov    ebx,0xfe70c343
  422eea:	out    0x97,eax
  422eec:	mov    ecx,0x64f8d6d9
  422ef1:	aam    0xa2
  422ef3:	ss inc edx
  422ef5:	sahf   
  422ef6:	cmp    ebx,DWORD PTR [edx+edi*8]
  422ef9:	femms  
  422efb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422efc:	xor    ebp,DWORD PTR [ebp+0x19]
  422eff:	pop    eax
  422f00:	jecxz  0x422e9a
  422f02:	jge    0x422e95
  422f04:	loope  0x422e9a
  422f06:	ficom  WORD PTR ds:0x8eedf066
  422f0c:	out    0xd7,eax
  422f0e:	lea    esp,[esi]
  422f10:	adc    al,0xc3
  422f12:	sbb    eax,0x90d0c6ae
  422f17:	push   ebx
  422f18:	ja     0x422eb1
  422f1a:	mov    ch,0x52
  422f1c:	push   ss
  422f1d:	cmp    al,0xdd
  422f1f:	ins    DWORD PTR es:[edi],dx
  422f20:	sub    DWORD PTR [edx+ecx*8-0x1d8a5453],esp
  422f27:	jl     0x422f11
  422f29:	rcr    DWORD PTR [edi+0x27],0x84
  422f2d:	(bad)  
  422f2e:	stos   DWORD PTR es:[edi],eax
  422f2f:	xchg   DWORD PTR [eax-0x41111c12],ecx
  422f35:	out    0x87,al
  422f37:	jmp    0x422f17
  422f39:	loope  0x422f06
  422f3b:	pop    es
  422f3c:	jb     0x422f0f
  422f3e:	xor    BYTE PTR [edx-0x55b722cd],dl
  422f44:	fbld   TBYTE PTR [ecx]
  422f46:	sub    esi,DWORD PTR [ebx]
  422f48:	fnstenv [edi+0x3c34ed98]
  422f4e:	into   
  422f4f:	or     al,0x60
  422f51:	jo     0x422f99
  422f53:	add    BYTE PTR ds:0x5fdc9214,bh
  422f59:	ss dec esp
  422f5b:	mov    ebx,0x1287f028
  422f60:	mov    ch,0xde
  422f62:	add    eax,0x95b9104d
  422f67:	bound  ebx,QWORD PTR [edx+ebp*4-0xa2fbd37]
  422f6e:	pusha  
  422f6f:	add    ebx,DWORD PTR [ecx+0x7a]
  422f72:	xchg   DWORD PTR [eax-0x54150e3e],ebp
  422f78:	out    dx,eax
  422f79:	ss out dx,eax
  422f7b:	call   0x3c0af033
  422f80:	loop   0x422f4f
  422f82:	sub    DWORD PTR [ebp+0x4a],edx
  422f85:	pushf  
  422f86:	adc    eax,0x2f6dc50c
  422f8b:	icebp  
  422f8c:	nop
  422f8d:	xchg   ecx,eax
  422f8e:	jb     0x422f43
  422f90:	xor    eax,0xa61fc2a
  422f95:	retf   0x6314
  422f98:	int    0xb6
  422f9a:	js     0x422fa4
  422f9c:	fwait
  422f9d:	jmp    0x422f6b
  422f9f:	xor    DWORD PTR [ebx-0x26],0xffffffbc
  422fa3:	push   ebp
  422fa4:	or     bh,0x9b
  422fa7:	arpl   WORD PTR [edi],dx
  422fa9:	jl     0x422fd6
  422fab:	cwde   
  422fac:	cmc    
  422fad:	jmp    0xdebea2e9
  422fb2:	popf   
  422fb3:	push   edi
  422fb4:	je     0x423006
  422fb6:	add    BYTE PTR [eax+0x29],ah
  422fb9:	cmp    DWORD PTR [eax-0x1432f9d8],esi
  422fbf:	test   eax,0x1a2ed5b5
  422fc4:	mov    edi,0xf2ab44b7
  422fc9:	cmp    BYTE PTR [edi+0x3200b3c9],bh
  422fcf:	iret   
  422fd0:	xor    bh,BYTE PTR [eax-0x428b5e3a]
  422fd6:	iret   
  422fd7:	mov    ebx,0xc240452
  422fdc:	push   ebp
  422fdd:	mov    al,0xf7
  422fdf:	mov    ds,WORD PTR [eax+0x1b]
  422fe2:	xchg   esp,eax
  422fe3:	mov    BYTE PTR [ecx+0x73b11399],0xb9
  422fea:	mov    ds:0x9f01fa65,al
  422fef:	add    al,0x85
  422ff1:	dec    edi
  422ff2:	jecxz  0x423047
  422ff4:	cdq    
  422ff5:	dec    eax
  422ff6:	mov    esi,0x5677460f
  422ffb:	xchg   ebx,eax
  422ffc:	sar    DWORD PTR [ebx-0x5],1
  422fff:	mov    BYTE PTR [eax-0x3e],ah
  423002:	pop    ebx
  423003:	dec    esi
  423004:	int    0x3c
  423006:	jnp    0x422fbb
  423008:	jns    0x423023
  42300a:	push   ds
  42300b:	sbb    ebp,eax
  42300d:	pushf  
  42300e:	mov    bh,0xd6
  423010:	xor    BYTE PTR ds:0x967f2a6c,al
  423016:	inc    eax
  423017:	push   edx
  423018:	int3   
  423019:	dec    ebx
  42301a:	outs   dx,DWORD PTR ds:[esi]
  42301b:	and    al,0xe9
  42301d:	push   eax
  42301e:	xchg   ebp,eax
  42301f:	imul   ebx,ecx,0x4f
  423022:	ins    DWORD PTR es:[edi],dx
  423023:	inc    ecx
  423024:	dec    eax
  423025:	cs wrmsr 
  423028:	sbb    ebp,ecx
  42302a:	or     ch,ah
  42302c:	cmp    ecx,ebx
  42302e:	clc    
  42302f:	jmp    0x423060
  423031:	mov    edi,0xb0781f57
  423036:	and    BYTE PTR [ebp+0x75],cl
  423039:	inc    esi
  42303a:	sbb    edx,DWORD PTR [ebx+0x4e5b3247]
  423040:	es dec esp
  423042:	inc    edi
  423043:	jmp    0x48a1:0xa01499f7
  42304a:	add    al,0xce
  42304c:	rol    ah,cl
  42304e:	ins    BYTE PTR es:[edi],dx
  42304f:	mov    bh,0xab
  423051:	jbe    0x42306c
  423053:	jmp    0x423024
  423055:	stos   BYTE PTR es:[edi],al
  423056:	adc    DWORD PTR [edx+0x8],esp
  423059:	jns    0x422ff3
  42305b:	in     eax,dx
  42305c:	or     esp,DWORD PTR [esp+ebp*8]
  42305f:	hlt    
  423060:	pushf  
  423061:	and    cl,dh
  423063:	cmp    DWORD PTR [ebx],esi
  423065:	(bad)  
  423067:	nop
  423068:	and    DWORD PTR [esi-0x1d944724],esp
  42306e:	nop
  42306f:	out    0xcf,eax
  423071:	sub    DWORD PTR [ebx-0x64b255ee],0xffffff9d
  423078:	pop    ebp
  423079:	and    DWORD PTR [edi+0x18],edx
  42307c:	xchg   esi,eax
  42307d:	jmp    0x423049
  42307f:	in     al,dx
  423080:	push   eax
  423081:	push   cs
  423082:	inc    esi
  423083:	push   ebp
  423084:	mov    al,ds:0xc544ab98
  423089:	stos   DWORD PTR es:[edi],eax
  42308a:	test   al,0x29
  42308c:	je     0x423054
  42308e:	mov    ch,0x74
  423090:	dec    edi
  423091:	scas   al,BYTE PTR es:[edi]
  423092:	sahf   
  423093:	dec    ecx
  423094:	and    DWORD PTR fs:[ebp*8+0x24d03ef5],edi
  42309c:	lea    esi,[ebx+0x76]
  42309f:	lahf   
  4230a0:	int3   
  4230a1:	sub    al,0x1e
  4230a3:	enter  0xfc40,0xc8
  4230a7:	lods   al,BYTE PTR ds:[esi]
  4230a8:	mov    al,0xa4
  4230aa:	mov    ecx,DWORD PTR [edx-0x40]
  4230ad:	push   ds
  4230ae:	mov    dl,0xa8
  4230b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4230b1:	fnstcw WORD PTR [edi+0x4f]
  4230b4:	in     al,0x38
  4230b6:	xchg   ecx,eax
  4230b7:	push   ebx
  4230b8:	jecxz  0x423100
  4230ba:	iret   
  4230bb:	and    al,0x5d
  4230bd:	mov    esi,0xa69cc224
  4230c2:	mov    bl,0xab
  4230c4:	stos   DWORD PTR es:[edi],eax
  4230c5:	scas   al,BYTE PTR es:[edi]
  4230c6:	call   0xa6f7:0x89f845fb
  4230cd:	lea    edi,[ebp-0x5e]
  4230d0:	lods   eax,DWORD PTR ds:[esi]
  4230d1:	test   BYTE PTR [ecx+esi*1],dh
  4230d4:	jb     0x4230b3
  4230d6:	cmp    ebp,DWORD PTR [ecx]
  4230d8:	(bad)  
  4230d9:	loope  0x42310f
  4230db:	xchg   edx,eax
  4230dc:	add    al,0xc7
  4230de:	jo     0x423070
  4230e0:	inc    esp
  4230e1:	jge    0x42311b
  4230e3:	and    al,0xd
  4230e5:	icebp  
  4230e6:	outs   dx,DWORD PTR ds:[esi]
  4230e7:	sub    esi,DWORD PTR [edi]
  4230e9:	out    0x6b,al
  4230eb:	jno    0x42311b
  4230ed:	mov    DWORD PTR [esi+0x1599d77],esp
  4230f3:	pop    ss
  4230f4:	pop    ds
  4230f5:	lds    ebp,FWORD PTR [esi+esi*1+0x4fd5b44]
  4230fc:	add    BYTE PTR [edi],al
  4230fe:	jmp    0x6ec5:0x92abd320
  423105:	inc    ebx
  423106:	pusha  
  423107:	test   al,0x3c
  423109:	add    DWORD PTR [edi],0xffffffb6
  42310c:	xor    DWORD PTR [esi],esi
  42310e:	call   0xac7c:0x6553c7ba
  423115:	jb     0x4230a8
  423117:	fsubr  DWORD PTR [edx]
  423119:	out    dx,eax
  42311a:	xor    DWORD PTR [eax],ebp
  42311c:	(bad)  
  42311d:	xor    al,0xc0
  42311f:	jge    0x423143
  423121:	push   esp
  423122:	xor    esp,eax
  423124:	or     eax,0x4fd78adc
  423129:	inc    eax
  42312a:	(bad)  [ebp-0x9a79328]
  423130:	and    al,0x33
  423132:	jae    0x4231a7
  423134:	inc    edi
  423135:	mov    al,cs:0xfac478d
  42313b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42313c:	ins    BYTE PTR es:[edi],dx
  42313d:	jecxz  0x4230f2
  42313f:	dec    edx
  423140:	(bad)  
  423141:	mov    ebp,0x9a40e84f
  423146:	and    esi,ebp
  423148:	xlat   BYTE PTR ds:[ebx]
  423149:	test   BYTE PTR [eax],bl
  42314b:	lds    esi,FWORD PTR [eax+0x386105e2]
  423151:	lds    edi,FWORD PTR [ecx]
  423153:	cmp    BYTE PTR [esi+0x343f57ae],dh
  423159:	pop    ebp
  42315a:	js     0x423186
  42315c:	aas    
  42315d:	scas   al,BYTE PTR es:[edi]
  42315e:	in     eax,dx
  42315f:	xchg   esp,eax
  423160:	(bad)  
  423161:	xor    ecx,ebp
  423163:	fwait
  423164:	call   0xa63e2979
  423169:	mov    dh,0xb8
  42316b:	(bad)  
  42316c:	scas   al,BYTE PTR es:[edi]
  42316d:	xor    eax,0xe4433a65
  423172:	sub    ebx,DWORD PTR [edx-0x33576bc7]
  423178:	mov    ecx,0xef4317fd
  42317d:	aas    
  42317e:	mov    eax,0xf7b3eced
  423183:	push   esi
  423184:	retf   0xff8f
  423187:	mov    es,WORD PTR [ebx-0x51]
  42318a:	ret    
  42318b:	mov    ds:0xb8bea99a,eax
  423190:	ret    
  423191:	pop    edx
  423192:	rcl    eax,cl
  423194:	fisubr DWORD PTR [edi-0x2e4a2479]
  42319a:	jmp    0x4be:0x28d0ae7f
  4231a1:	sbb    bh,BYTE PTR [ebx]
  4231a3:	sub    BYTE PTR ds:0x2f98b433,ch
  4231a9:	das    
  4231aa:	(bad)  
  4231ab:	cmc    
  4231ac:	inc    edi
  4231ad:	add    al,0xdd
  4231af:	push   ds
  4231b0:	in     al,dx
  4231b1:	and    al,0x2d
  4231b3:	out    0x9b,eax
  4231b5:	popf   
  4231b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4231b7:	cmp    DWORD PTR [eax],ebp
  4231b9:	adc    BYTE PTR [esi],bh
  4231bb:	xchg   ecx,eax
  4231bc:	adc    dh,BYTE PTR [ecx]
  4231be:	mov    dh,0x96
  4231c0:	inc    esp
  4231c1:	daa    
  4231c2:	inc    eax
  4231c3:	lahf   
  4231c4:	mov    ebx,0xfb863f4
  4231c9:	push   ds
  4231ca:	cwde   
  4231cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4231cc:	cld    
  4231cd:	pop    edi
  4231ce:	ins    DWORD PTR es:[edi],dx
  4231cf:	(bad)  
  4231d0:	ds je  0x42317c
  4231d3:	cmp    cl,BYTE PTR [ebp+0x7f19434b]
  4231d9:	sbb    al,0x6e
  4231db:	scas   eax,DWORD PTR es:[edi]
  4231dc:	jge    0x4231da
  4231de:	dec    edi
  4231df:	mov    bh,0xf7
  4231e1:	xor    bh,BYTE PTR [edx+0x1]
  4231e4:	adc    ch,BYTE PTR [edi-0x73]
  4231e7:	cmc    
  4231e8:	iret   
  4231e9:	out    dx,al
  4231ea:	outs   dx,DWORD PTR ds:[esi]
  4231eb:	ins    DWORD PTR es:[edi],dx
  4231ec:	adc    DWORD PTR [ecx-0x34149d9d],ecx
  4231f2:	stos   DWORD PTR es:[edi],eax
  4231f3:	fcmovbe st,st(2)
  4231f5:	jb     0x4231fd
  4231f7:	sbb    DWORD PTR [ebp+0x5b],esi
  4231fa:	call   0xb91603a4
  4231ff:	ins    BYTE PTR es:[edi],dx
  423200:	xor    DWORD PTR [ebp*1-0x3aa1b15d],esi
  423207:	int    0xf3
  423209:	add    al,0x26
  42320b:	addr16 inc esp
  42320d:	adc    BYTE PTR [esi],bh
  42320f:	xchg   edi,eax
  423210:	in     al,dx
  423211:	retf   
  423212:	push   0xffffffd6
  423214:	xlat   BYTE PTR ds:[ebx]
  423215:	mov    eax,ds:0x566df38e
  42321a:	xlat   BYTE PTR ds:[ebx]
  42321b:	dec    esp
  42321c:	add    eax,0xa2254fca
  423221:	xor    eax,0x531ee454
  423226:	test   ebp,esp
  423228:	cs mov bl,0x8b
  42322b:	fist   DWORD PTR [eax+0x58b11ff8]
  423231:	mov    eax,0xee30bc
  423236:	push   cs
  423237:	sbb    esp,DWORD PTR [edx]
  423239:	mov    ch,0xd1
  42323b:	xor    BYTE PTR [eax-0x80],al
  42323e:	xor    eax,ecx
  423240:	int    0x88
  423242:	in     al,dx
  423243:	cmp    eax,0x38eaa2ca
  423248:	mov    edi,0xe095b8ae
  42324d:	aad    0x78
  42324f:	test   esp,edi
  423251:	inc    ebp
  423252:	dec    esi
  423253:	or     al,0xbe
  423255:	jmp    0x423234
  423257:	fnstenv [edx]
  423259:	or     DWORD PTR [ebx-0x11a94187],0x805d3877
  423263:	pop    ebp
  423264:	shl    DWORD PTR [edx-0x64],cl
  423267:	into   
  423268:	retf   0x4d74
  42326b:	in     al,0x55
  42326d:	dec    ebp
  42326e:	pop    ss
  42326f:	fisttp QWORD PTR [esi-0x36]
  423272:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423273:	sahf   
  423274:	lds    ebp,FWORD PTR ds:0xaea359ea
  42327a:	mov    ebp,0x3eb34432
  42327f:	pop    edx
  423280:	sti    
  423281:	mov    cl,0x5f
  423283:	cmp    BYTE PTR [ebp+0x3149064],al
  423289:	gs aas 
  42328b:	inc    esi
  42328c:	int    0x6f
  42328e:	mov    DWORD PTR [edi+0x59],eax
  423291:	stos   BYTE PTR es:[edi],al
  423292:	inc    ebp
  423293:	fcomp  QWORD PTR [ecx-0x471b29e4]
  423299:	shr    BYTE PTR [ecx+0x5d39d190],1
  42329f:	mov    eax,ds
  4232a1:	xlat   BYTE PTR ds:[ebx]
  4232a2:	jmp    0xce74:0xc5c2f032
  4232a9:	lods   al,BYTE PTR ds:[esi]
  4232aa:	push   0xcd3b07f9
  4232af:	sahf   
  4232b0:	fs inc eax
  4232b2:	mov    eax,0x25eb4e3b
  4232b7:	aad    0x71
  4232b9:	push   edi
  4232ba:	sub    esp,DWORD PTR [ebx+0x275aa7a]
  4232c0:	mov    bl,0x3c
  4232c2:	sbb    DWORD PTR [ecx-0x77],ebx
  4232c5:	in     eax,dx
  4232c6:	sbb    DWORD PTR [edi+0x30ba67ee],esi
  4232cc:	out    dx,al
  4232cd:	pushf  
  4232ce:	imul   edx,DWORD PTR [ebp-0x48af5ec2],0x7877f4d7
  4232d8:	clc    
  4232d9:	sti    
  4232da:	xchg   esp,eax
  4232db:	push   es
  4232dc:	sbb    ecx,DWORD PTR [ebx]
  4232de:	ret    
  4232df:	push   es
  4232e0:	inc    ebp
  4232e1:	pop    eax
  4232e2:	cmc    
  4232e3:	add    eax,0xa46a95bd
  4232e8:	xchg   esi,eax
  4232e9:	mov    eax,ds:0xb461d8f6
  4232ee:	aas    
  4232ef:	and    DWORD PTR [ebx],ebx
  4232f1:	dec    esi
  4232f2:	adc    ebx,DWORD PTR [ecx+0x344b405c]
  4232f8:	pop    es
  4232f9:	xchg   edx,eax
  4232fa:	iret   
  4232fb:	jmp    0x5a305080
  423300:	and    DWORD PTR [ebp+0x4b],esp
  423303:	cmp    ebx,DWORD PTR ds:0x54d69ada
  423309:	or     ch,BYTE PTR [edx-0x30c3b484]
  42330f:	push   ebp
  423310:	call   0x212a:0xdd55e172
  423317:	ins    BYTE PTR es:[edi],dx
  423318:	call   0x3e1c:0x94b16bab
  42331f:	push   edx
  423320:	cmp    al,0x30
  423322:	stos   BYTE PTR es:[edi],al
  423323:	paddsw mm3,QWORD PTR [eax]
  423326:	ins    BYTE PTR es:[edi],dx
  423327:	jl     0x423313
  423329:	dec    edi
  42332a:	jo     0x423389
  42332c:	and    al,al
  42332e:	hlt    
  42332f:	xor    BYTE PTR [edi+0xcd02faf],bh
  423335:	lods   al,BYTE PTR ds:[esi]
  423336:	push   ds
  423337:	in     eax,dx
  423338:	jbe    0x423369
  42333a:	enter  0x1855,0xb2
  42333e:	sahf   
  42333f:	out    0xd5,eax
  423341:	leave  
  423342:	rcl    ebx,1
  423344:	pop    ebp
  423345:	adc    ebp,DWORD PTR [eax-0xe81f8ff]
  42334b:	inc    eax
  42334c:	or     esp,edx
  42334e:	pop    ds
  42334f:	cmp    al,0xae
  423351:	lahf   
  423352:	mov    al,ds:0x12ca3925
  423357:	sub    BYTE PTR [ebx-0x5900da4a],al
  42335d:	fist   DWORD PTR ds:0x8428a350
  423364:	mov    edx,0x4f381b21
  423369:	or     eax,0x4b82de8f
  42336e:	mov    esi,0x206bf358
  423373:	loop   0x423363
  423375:	aas    
  423376:	shr    ebx,0x9d
  423379:	(bad)  
  42337a:	sub    eax,0xcc42f89c
  42337f:	or     DWORD PTR [ecx-0x60582887],esi
  423385:	mov    BYTE PTR [edi+0x6c],ah
  423388:	aam    0x98
  42338a:	push   ds
  42338b:	ror    DWORD PTR [esi-0x1041d033],1
  423391:	in     al,dx
  423392:	sub    DWORD PTR [esi-0x51],edi
  423395:	dec    esi
  423396:	or     eax,0x8c2e0b18
  42339b:	push   edx
  42339c:	scas   eax,DWORD PTR es:[edi]
  42339d:	int    0xb4
  42339f:	test   BYTE PTR [ebx],bl
  4233a1:	xor    eax,0xc15a82a9
  4233a6:	cmp    DWORD PTR [ebx+esi*8],0x7af616a7
  4233ad:	mov    bh,0xa5
  4233af:	(bad)  
  4233b0:	clc    
  4233b1:	cwde   
  4233b2:	je     0x42336c
  4233b4:	push   es
  4233b5:	out    dx,eax
  4233b6:	aad    0x2
  4233b8:	sub    eax,0xa42a681c
  4233bd:	xor    DWORD PTR [esi-0x16ea13ea],0xffffffc5
  4233c4:	mov    dl,0x5e
  4233c6:	clc    
  4233c7:	push   ebx
  4233c8:	push   ds
  4233c9:	cmp    eax,0xd87f1c91
  4233ce:	sbb    al,0xcb
  4233d0:	cmp    dh,BYTE PTR [edx-0x2afd71f4]
  4233d6:	sub    BYTE PTR [edi],bl
  4233d8:	add    DWORD PTR [ebx-0x64],eax
  4233db:	mov    esi,0x318a2386
  4233e0:	fst    QWORD PTR [esi-0x55]
  4233e3:	call   0x917dbc32
  4233e8:	adc    DWORD PTR [ecx+0x4],esp
  4233eb:	sbb    DWORD PTR [eax-0xe037b0d],edi
  4233f1:	push   esi
  4233f2:	out    0xc9,eax
  4233f4:	nop
  4233f5:	stos   BYTE PTR es:[edi],al
  4233f6:	jb     0x42344e
  4233f8:	repnz mov dh,0x20
  4233fb:	stc    
  4233fc:	mov    eax,0x12da0062
  423401:	test   BYTE PTR [ecx+ebp*2],dl
  423404:	mov    ebp,0xdeefa45d
  423409:	mov    eax,ds:0x3b56ef6
  42340e:	iret   
  42340f:	stos   DWORD PTR es:[edi],eax
  423410:	sahf   
  423411:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423412:	mov    ebp,DWORD PTR ds:0x84a48484
  423418:	data16 ficom WORD PTR [eax]
  42341b:	iret   
  42341c:	pop    es
  42341d:	jge    0x4233ba
  42341f:	jl     0x4233ce
  423421:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423422:	dec    edx
  423423:	inc    esp
  423424:	imul   esi,DWORD PTR [ebx],0x4afd6d82
  42342a:	outs   dx,DWORD PTR ds:[esi]
  42342b:	in     eax,0xbf
  42342d:	pop    ebp
  42342e:	xor    DWORD PTR [ecx],ebx
  423430:	jl     0x42340a
  423432:	xchg   edx,eax
  423433:	mov    bl,0xe7
  423435:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423436:	popa   
  423437:	mov    cl,0x78
  423439:	fldenv [esi]
  42343b:	cmp    edi,DWORD PTR [ebp-0x51]
  42343e:	sbb    ecx,edi
  423440:	jle    0x4234ab
  423442:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423443:	int    0x50
  423445:	aas    
  423446:	fst    DWORD PTR [eax-0x15]
  423449:	cdq    
  42344a:	push   edi
  42344b:	dec    edx
  42344c:	lahf   
  42344d:	xor    edx,0x16a70f9b
  423453:	clc    
  423454:	jo     0x42348d
  423456:	pop    edi
  423457:	inc    ebx
  423458:	jno    0x423450
  42345a:	push   esi
  42345b:	out    dx,eax
  42345c:	and    DWORD PTR [ecx-0x56aa60d0],edi
  423462:	dec    ebx
  423463:	cld    
  423464:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423465:	mov    esp,0xcf6ee73f
  42346a:	int3   
  42346b:	push   ds
  42346c:	jo     0x4234a6
  42346e:	lock cmp ch,BYTE PTR [eax-0x36]
  423472:	cs adc al,0xa2
  423475:	mov    bl,0xcb
  423477:	(bad)  
  423479:	dec    ebp
  42347a:	dec    edi
  42347b:	xor    eax,0xb4349e6f
  423480:	daa    
  423481:	inc    ebp
  423482:	or     DWORD PTR [edi-0x63],esi
  423485:	xchg   BYTE PTR [ebx+0x4],bh
  423488:	add    DWORD PTR [ecx+0x1bd28eb8],0x79
  42348f:	cwde   
  423490:	ss jmp 0x708f:0x9f9cf9e
  423498:	ret    
  423499:	add    BYTE PTR [esp+ebp*8-0x22],al
  42349d:	dec    ebx
  42349e:	jl     0x42350e
  4234a0:	scas   al,BYTE PTR es:[edi]
  4234a1:	hlt    
  4234a2:	shld   DWORD PTR [edi-0x5c],esi,cl
  4234a6:	mov    edx,0xc80101c5
  4234ab:	push   ebx
  4234ac:	dec    eax
  4234ad:	pushf  
  4234ae:	jl     0x4234af
  4234b0:	lahf   
  4234b1:	and    al,0x97
  4234b3:	pop    ecx
  4234b4:	ja     0x423519
  4234b6:	jmp    0x91a9e0c1
  4234bb:	or     eax,0xd2d0ddaf
  4234c0:	int3   
  4234c1:	pop    ebp
  4234c2:	jecxz  0x423517
  4234c4:	into   
  4234c5:	(bad)  
  4234c6:	loopne 0x42347c
  4234c8:	inc    eax
  4234c9:	push   ss
  4234ca:	enter  0x1e76,0xa5
  4234ce:	(bad)  
  4234cf:	iret   
  4234d0:	push   cs
  4234d1:	pop    edi
  4234d2:	addr16 jg 0x4234bf
  4234d5:	mov    ebx,0x7c59aa06
  4234da:	inc    eax
  4234db:	push   esp
  4234dc:	mov    eax,ds:0xd5d4aacf
  4234e1:	daa    
  4234e2:	std    
  4234e3:	add    esi,DWORD PTR [eax-0x588456b5]
  4234e9:	js     0x42350f
  4234eb:	ror    BYTE PTR [ebp+0x4e],1
  4234ee:	fiadd  DWORD PTR [esi-0x77]
  4234f1:	mov    edx,0xc00ef87b
  4234f6:	stos   DWORD PTR es:[edi],eax
  4234f7:	fist   WORD PTR [edx-0x56]
  4234fa:	ss out dx,eax
  4234fc:	sub    bh,BYTE PTR [edx-0x13935a5b]
  423502:	mov    ch,BYTE PTR [ebx+0x15]
  423505:	push   edi
  423506:	aas    
  423507:	sbb    esi,DWORD PTR ds:0x4353799c
  42350d:	std    
  42350e:	and    DWORD PTR [ebp+0x51],ebx
  423511:	in     al,dx
  423512:	cmp    DWORD PTR [ecx],edi
  423514:	dec    edi
  423515:	mov    ebp,0xc029d49e
  42351a:	sub    BYTE PTR [eax],bl
  42351c:	inc    esp
  42351d:	push   edx
  42351e:	cmc    
  42351f:	stc    
  423520:	add    al,BYTE PTR [eax+0x4]
  423523:	jmp    0x6bf9:0x2da710b8
  42352a:	arpl   WORD PTR [ebx+0x64ef68d8],si
  423530:	imul   edi,DWORD PTR fs:[ebx],0x71a87edb
  423537:	rol    eax,cl
  423539:	call   0x39ed:0xfd355bd2
  423540:	and    ecx,DWORD PTR [esi]
  423542:	fsub   QWORD PTR [ebp+0x73]
  423545:	jmp    0x4234e4
  423547:	fs xchg edx,eax
  423549:	(bad)  
  42354a:	jecxz  0x423553
  42354c:	or     ebx,ecx
  42354e:	add    dh,dh
  423550:	pop    edi
  423551:	div    DWORD PTR [eax-0x2]
  423554:	pop    esi
  423555:	cwde   
  423556:	inc    esp
  423557:	push   cs
  423558:	inc    edx
  423559:	cmp    esi,DWORD PTR [esi]
  42355b:	jmp    0x42b74c1d
  423560:	add    BYTE PTR [ebp-0x5433238f],dl
  423566:	xchg   edi,eax
  423567:	jp     0x423564
  423569:	dec    esp
  42356a:	and    DWORD PTR [ecx-0x745b85f],0xffffff9c
  423571:	in     al,0x62
  423573:	aas    
  423574:	rcr    BYTE PTR [ebp+ebx*2-0x50],cl
  423578:	xchg   ebp,eax
  423579:	ret    0x7e30
  42357c:	out    dx,al
  42357d:	std    
  42357e:	fsubr  st(2),st
  423580:	les    esi,FWORD PTR [ebp-0x5c9af873]
  423586:	int3   
  423587:	popf   
  423588:	xchg   esi,eax
  423589:	icebp  
  42358a:	stos   DWORD PTR es:[edi],eax
  42358b:	loope  0x42351b
  42358d:	fcomp  QWORD PTR ds:0x90932845
  423593:	ret    
  423594:	pop    ebx
  423595:	arpl   ax,bx
  423597:	inc    esi
  423598:	(bad)  
  423599:	out    0x1d,al
  42359b:	test   BYTE PTR [eax],0xdc
  42359e:	mov    ebp,0x41cfe67d
  4235a3:	mov    esi,0x474d1ef9
  4235a8:	inc    eax
  4235a9:	inc    edx
  4235aa:	out    dx,eax
  4235ab:	jle    0x4235a8
  4235ad:	scas   al,BYTE PTR es:[edi]
  4235ae:	loopne 0x4235f8
  4235b0:	push   cs
  4235b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4235b2:	dec    edx
  4235b3:	leave  
  4235b4:	je     0x423542
  4235b6:	mov    edx,0x14eef838
  4235bb:	xchg   BYTE PTR [ecx-0x743accd8],cl
  4235c1:	aas    
  4235c2:	aad    0xaa
  4235c4:	mov    ds:0xe87b6160,eax
  4235c9:	xor    dl,BYTE PTR [eax]
  4235cb:	test   al,dl
  4235cd:	enter  0xe630,0xe2
  4235d1:	add    esi,eax
  4235d3:	xchg   ecx,eax
  4235d4:	mov    dh,0xd5
  4235d6:	in     al,0x5e
  4235d8:	or     BYTE PTR [ebx+0x31],dh
  4235db:	data16 adc bh,BYTE PTR [edx]
  4235de:	into   
  4235df:	(bad)  
  4235e0:	aam    0x15
  4235e2:	or     eax,0x34a13850
  4235e7:	cwde   
  4235e8:	dec    esi
  4235e9:	mov    esi,0xfc5b5d49
  4235ee:	adc    eax,0xd26ce2b
  4235f3:	ds sti 
  4235f5:	mov    ebx,0x987fb224
  4235fa:	aaa    
  4235fb:	mov    edx,0xec5ed3a5
  423600:	adc    eax,0xaa6162a6
  423605:	data16 cmc 
  423607:	les    esi,FWORD PTR [edi+0x739e602f]
  42360d:	cwde   
  42360e:	mov    dl,0xba
  423610:	adc    al,cl
  423612:	xor    eax,0xf3e3e367
  423617:	mov    ss,WORD PTR [ecx]
  423619:	hlt    
  42361a:	xchg   BYTE PTR [esi+edi*1],ch
  42361d:	dec    eax
  42361e:	std    
  42361f:	dec    edx
  423620:	aam    0xd4
  423622:	gs cs push di
  423626:	adc    ebx,DWORD PTR [ebp+0x25c70bd2]
  42362c:	lea    eax,[edi]
  42362e:	or     al,BYTE PTR [eax-0x7279f2dc]
  423634:	ret    
  423635:	shl    eax,0xab
  423638:	dec    ebp
  423639:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42363a:	stos   DWORD PTR es:[edi],eax
  42363b:	addr16 dec ebp
  42363d:	pushf  
  42363e:	sub    dl,BYTE PTR ds:0xda25ffb6
  423644:	retf   0x4c15
  423647:	jnp    0x42360e
  423649:	loopne 0x423662
  42364b:	sar    DWORD PTR [ecx-0x4e4a0792],0xa8
  423652:	adc    BYTE PTR [esi+0x3efe4332],dh
  423658:	push   ds
  423659:	xchg   dl,dl
  42365b:	cmp    dl,BYTE PTR [esi-0x3180b9d6]
  423661:	cmp    edi,DWORD PTR [ebx+0x3]
  423664:	sbb    BYTE PTR [edi-0x2],0x9e
  423668:	ror    BYTE PTR [ebp-0x1a813583],1
  42366e:	mov    cl,cl
  423670:	sti    
  423671:	ror    DWORD PTR [eax-0x16f8a11e],0xaf
  423678:	sub    BYTE PTR [eax+ebx*1],dl
  42367b:	imul   edi,DWORD PTR [edx+0x547c2c4b],0xa5ec401c
  423685:	jo     0x4236b5
  423687:	out    0xe6,al
  423689:	pop    eax
  42368a:	lock js 0x423631
  42368d:	dec    edi
  42368e:	sti    
  42368f:	pop    ds
  423690:	mov    edi,0x8f3e6929
  423695:	test   DWORD PTR [esi+ecx*1-0x15fb4cb9],ebp
  42369c:	int3   
  42369d:	lock jne 0x423640
  4236a0:	push   ebx
  4236a1:	cdq    
  4236a2:	lahf   
  4236a3:	pop    eax
  4236a4:	cmp    al,0xc8
  4236a6:	xor    eax,0xeeb070d4
  4236ab:	add    ecx,DWORD PTR [esi+0x6b2c9930]
  4236b1:	inc    ebx
  4236b2:	mov    dh,0x63
  4236b4:	hlt    
  4236b5:	shr    BYTE PTR [edi+0x15e3d52d],cl
  4236bb:	or     ch,BYTE PTR [ebx+0x57a77819]
  4236c1:	aad    0x4d
  4236c3:	test   eax,0x964ac58c
  4236c8:	scas   al,BYTE PTR es:[edi]
  4236c9:	pop    ss
  4236ca:	mov    ch,0x45
  4236cc:	enter  0x9a01,0x28
  4236d0:	mov    ecx,0x4b2e20c4
  4236d5:	test   eax,0x92444b79
  4236da:	dec    esi
  4236db:	popa   
  4236dc:	or     DWORD PTR [ebx],esi
  4236de:	imul   DWORD PTR [ebp+edi*2+0x6e]
  4236e2:	or     eax,0xa5e57290
  4236e7:	push   0xffffff8e
  4236e9:	mov    al,ds:0x953a8465
  4236ee:	call   0x923a58c5
  4236f3:	(bad)  
  4236f4:	mov    dl,0x51
  4236f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4236f7:	push   cs
  4236f8:	add    dh,ch
  4236fa:	mov    al,ds:0xd95ef59
  4236ff:	xor    DWORD PTR ds:0x32b05a2d,eax
  423705:	daa    
  423706:	xchg   ecx,eax
  423707:	sbb    BYTE PTR [edx-0x13],ch
  42370a:	jnp    0x423783
  42370c:	xchg   ebp,eax
  42370d:	pop    esi
  42370e:	push   edx
  42370f:	cmp    DWORD PTR [ebx-0x6d],ebx
  423712:	mov    ah,BYTE PTR [esp+eax*1-0x32]
  423716:	aas    
  423717:	ret    0x1a10
  42371a:	shl    DWORD PTR [edx],0x65
  42371d:	sub    BYTE PTR [eax],ah
  42371f:	or     edx,DWORD PTR [ecx+0x7f]
  423722:	lods   eax,DWORD PTR ds:[esi]
  423723:	retf   
  423724:	adc    al,0x75
  423726:	inc    ebx
  423727:	pop    ss
  423728:	jge    0x4236eb
  42372a:	xor    esi,DWORD PTR [esi+0x21]
  42372d:	das    
  42372e:	sar    eax,cl
  423730:	add    DWORD PTR [edx-0x1],edx
  423733:	jl     0x423795
  423735:	(bad)  
  423736:	stc    
  423737:	xchg   DWORD PTR [ebx],edx
  423739:	repz bound ecx,QWORD PTR [esi+0x6229dcc9]
  423740:	adc    eax,0xca8ca489
  423745:	xor    DWORD PTR [ebx-0x52],ebp
  423748:	mov    al,ds:0xf16e5809
  42374d:	and    ebp,DWORD PTR [esi+0x755bdad7]
  423753:	dec    ecx
  423754:	cmp    bl,BYTE PTR ds:0x3f4f894d
  42375a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42375b:	mov    cl,0x1
  42375d:	jmp    0xe5d2:0xe880aa0e
  423764:	cmp    DWORD PTR [edx-0x1e],edx
  423767:	push   es
  423768:	mov    ds:0x8f3d9743,eax
  42376d:	retf   0x691e
  423770:	lock icebp 
  423772:	add    edx,ebp
  423774:	push   ebx
  423775:	mov    ss,WORD PTR [ecx]
  423777:	pusha  
  423778:	dec    edx
  423779:	adc    al,0x7c
  42377b:	cmp    ebx,DWORD PTR [edi+0x5c63fc45]
  423781:	aas    
  423782:	and    eax,0x44fda945
  423787:	jb     0x423754
  423789:	push   edx
  42378a:	shr    DWORD PTR [ecx+0x26],cl
  42378d:	ins    DWORD PTR es:[edi],dx
  42378e:	dec    edx
  42378f:	repz sub al,0xee
  423792:	fs dec edx
  423794:	iret   
  423795:	mov    ?,edi
  423797:	lock and bl,ch
  42379a:	dec    ebx
  42379b:	imul   ebp,DWORD PTR [ecx+ebp*2-0x77],0x38f4843e
  4237a3:	add    eax,edx
  4237a5:	ja     0x423810
  4237a7:	sub    ch,BYTE PTR [edi]
  4237a9:	add    BYTE PTR [eax+0x5a87eccb],ch
  4237af:	data16 into 
  4237b1:	sbb    DWORD PTR [edi+0xf77f016],esi
  4237b7:	in     al,0xd1
  4237b9:	loop   0x423803
  4237bb:	xchg   ecx,eax
  4237bc:	and    ecx,ebx
  4237be:	sti    
  4237bf:	out    dx,eax
  4237c0:	outs   dx,BYTE PTR ds:[esi]
  4237c1:	mul    ecx
  4237c3:	(bad)  
  4237c4:	rcl    ebx,1
  4237c6:	sbb    BYTE PTR [ebx+0x3b],bh
  4237c9:	out    0xec,al
  4237cb:	push   ecx
  4237cc:	pop    ebx
  4237cd:	fld    QWORD PTR ds:[ecx]
  4237d0:	scas   al,BYTE PTR es:[edi]
  4237d1:	mov    ds:0x556f7a98,eax
  4237d6:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4237d8:	cmp    al,BYTE PTR [ebp-0x5074f806]
  4237de:	dec    ebx
  4237df:	jecxz  0x42378b
  4237e1:	(bad)  
  4237e2:	push   0xffffffb7
  4237e4:	jne    0x42384a
  4237e6:	xchg   ebp,eax
  4237e7:	aam    0xb3
  4237e9:	pop    ebp
  4237ea:	push   edx
  4237eb:	sahf   
  4237ec:	aaa    
  4237ed:	imul   edi,DWORD PTR [edx-0x4082a839],0xffffffac
  4237f4:	les    esi,FWORD PTR [ebp-0x551ada1c]
  4237fa:	pop    ebp
  4237fb:	push   0x7a831308
  423800:	jp     0x42383c
  423802:	stos   DWORD PTR es:[di],eax
  423804:	mov    ds:0xc765338b,al
  423809:	xlat   BYTE PTR ds:[ebx]
  42380a:	ins    BYTE PTR es:[edi],dx
  42380b:	jmp    0x42382d
  42380d:	scas   eax,DWORD PTR es:[edi]
  42380e:	jne    0x423833
  423810:	mov    edi,0x54af4d40
  423815:	mov    bl,BYTE PTR [esp-0x43]
  423819:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42381a:	ror    DWORD PTR [ebx],0xc4
  42381d:	stos   DWORD PTR es:[edi],eax
  42381e:	inc    ecx
  42381f:	das    
  423820:	sbb    DWORD PTR [eax-0x39],esp
  423823:	pop    eax
  423824:	sub    BYTE PTR [esi],dh
  423826:	mov    dh,0xb8
  423828:	add    DWORD PTR [eax],edi
  42382a:	sti    
  42382b:	int3   
  42382c:	xor    DWORD PTR [ecx-0x118d37ab],edi
  423832:	mov    bh,0xd8
  423834:	retf   0x17b8
  423837:	mov    eax,0x621ec055
  42383c:	in     eax,0x6f
  42383e:	pop    edi
  42383f:	mov    ah,0x7c
  423841:	jle    0x4238a6
  423843:	(bad)  
  423844:	pop    ds
  423845:	and    ah,BYTE PTR [esi+0x62]
  423848:	dec    ebx
  423849:	mov    edx,0x437670a6
  42384e:	or     dh,bl
  423850:	xor    edx,ecx
  423852:	dec    edi
  423853:	(bad)  
  423855:	fdiv   DWORD PTR [ecx]
  423857:	inc    ebp
  423858:	in     eax,0xba
  42385a:	scas   eax,DWORD PTR es:[edi]
  42385b:	add    DWORD PTR [eax],ebp
  42385d:	js     0xcfded504
  423863:	push   edx
  423864:	frstor [esi]
  423866:	sti    
  423867:	not    DWORD PTR [ebp-0x5d31db22]
  42386d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42386e:	inc    ebp
  42386f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423870:	cmp    ebx,DWORD PTR [edi+0x56]
  423873:	jne    0x423826
  423875:	enter  0xf0d0,0x9b
  423879:	cmp    al,0x77
  42387b:	sbb    al,BYTE PTR ds:0xcde0d22d
  423881:	cwde   
  423882:	mov    WORD PTR [edi-0x54412a0a],gs
  423888:	jne    0x4238dc
  42388a:	in     eax,0xb7
  42388c:	and    eax,0x2f874ab3
  423891:	ret    0x9793
  423894:	dec    ebx
  423895:	xchg   eax,esi
  423897:	pop    ss
  423898:	cmp    BYTE PTR [esi+0x3],cl
  42389b:	les    edx,FWORD PTR [ebp+0x2e]
  42389e:	xchg   esi,eax
  42389f:	xchg   BYTE PTR [esi+0x5759e184],ah
  4238a5:	add    edi,DWORD PTR [eax+0x60]
  4238a8:	imul   edi,eax,0x6c
  4238ab:	adc    al,0x1f
  4238ad:	mov    ah,0xac
  4238af:	dec    ecx
  4238b0:	push   esi
  4238b1:	xor    bl,BYTE PTR [ecx+0x35c002b2]
  4238b7:	fstp   QWORD PTR [eax+0x32]
  4238ba:	stos   DWORD PTR es:[edi],eax
  4238bb:	inc    edx
  4238bc:	or     al,0x1
  4238be:	sbb    ecx,DWORD PTR [esi]
  4238c0:	fs call 0x4a92:0x7e90caf
  4238c8:	cmp    bh,BYTE PTR [ebx+0x4aae0b1c]
  4238ce:	ret    0xea82
  4238d1:	xchg   ebx,eax
  4238d2:	stos   DWORD PTR es:[edi],eax
  4238d3:	or     al,0x73
  4238d5:	jmp    0xca8665dc
  4238da:	fxtract 
  4238dc:	add    esp,DWORD PTR [eax]
  4238de:	fwait
  4238df:	jb     0x423899
  4238e1:	add    DWORD PTR [ecx],ebx
  4238e3:	push   esp
  4238e4:	or     BYTE PTR [ecx+0xda0b03b],bl
  4238ea:	and    al,0x5a
  4238ec:	loopne 0x423933
  4238ee:	xor    DWORD PTR [ecx],ebp
  4238f0:	cmp    al,dh
  4238f2:	jns    0x423935
  4238f4:	pop    esp
  4238f5:	stos   BYTE PTR es:[edi],al
  4238f6:	test   eax,0x81731fdd
  4238fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4238fc:	ss pusha 
  4238fe:	push   esi
  4238ff:	and    DWORD PTR [edx+ecx*8-0x69],ecx
  423903:	je     0x4238bc
  423905:	(bad)  
  423906:	sub    ebp,DWORD PTR [edi]
  423908:	or     cl,cl
  42390a:	jnp    0x423945
  42390c:	push   edi
  42390d:	inc    ebp
  42390e:	lahf   
  42390f:	rcl    dh,0xe3
  423912:	mov    ebx,DWORD PTR [ecx-0x70]
  423915:	mov    ebx,0xcc75a938
  42391a:	ret    
  42391b:	mov    esi,0x572a1a96
  423920:	icebp  
  423921:	sub    ecx,DWORD PTR [eax+0x2a]
  423924:	push   ecx
  423925:	jmp    0xf2b933b1
  42392a:	mov    WORD PTR [ecx-0x18],gs
  42392d:	js     0x423980
  42392f:	and    eax,0xa8d34b60
  423934:	mov    al,ds:0x43f609f3
  423939:	dec    edx
  42393a:	(bad)  
  42393b:	fdiv   DWORD PTR [ecx+0x63]
  42393e:	ds (bad) 
  423941:	loopne 0x423924
  423943:	xchg   ebp,eax
  423944:	jno    0x423959
  423946:	push   es
  423947:	loopne 0x423927
  423949:	ret    
  42394a:	push   edx
  42394b:	adc    al,0x3
  42394d:	icebp  
  42394e:	je     0x4239c3
  423950:	(bad)  
  423951:	mov    al,ds:0xe6e317c4
  423956:	ror    BYTE PTR [edx],1
  423958:	(bad)  
  423959:	cmp    DWORD PTR [ecx],edi
  42395b:	into   
  42395c:	std    
  42395d:	sahf   
  42395e:	and    al,0xd7
  423960:	dec    esi
  423961:	xor    al,cl
  423963:	and    eax,edx
  423965:	out    0xc2,eax
  423967:	pusha  
  423968:	push   0xffffffd4
  42396a:	stc    
  42396b:	push   ebp
  42396c:	push   eax
  42396d:	ss (bad) 
  42396f:	pop    ebp
  423970:	inc    edi
  423971:	mov    ah,0x43
  423973:	popf   
  423974:	dec    eax
  423975:	sub    eax,0x142388e8
  42397a:	shl    DWORD PTR [edi+esi*2-0x75],cl
  42397e:	inc    ebp
  42397f:	lock xor eax,ecx
  423982:	mov    edx,0xffcd8d11
  423987:	sub    edx,eax
  423989:	add    DWORD PTR [ebp-0x4],edx
  42398c:	mov    eax,DWORD PTR [ebp-0x4]
  42398f:	jmp    0x4229e8
  423994:	mov    eax,DWORD PTR [ebp-0x14]
  423997:	mov    eax,DWORD PTR [eax]
  423999:	mov    edx,DWORD PTR [ebp-0x4]
  42399c:	mov    edx,DWORD PTR [edx+0x3c]
  42399f:	lea    eax,[edx+eax*8+0x78]
  4239a3:	mov    edx,DWORD PTR [ebp-0x4]
  4239a6:	mov    eax,DWORD PTR [eax+edx*1]
  4239a9:	mov    DWORD PTR [ebp-0x8],eax
  4239ac:	mov    eax,DWORD PTR [ebp+0x8]
  4239af:	xor    eax,ecx
  4239b1:	add    eax,esi
  4239b3:	mov    DWORD PTR [ebp-0x14],eax
  4239b6:	mov    eax,DWORD PTR [ebp+0x8]
  4239b9:	mov    edx,DWORD PTR [ebp-0x8]
  4239bc:	xor    eax,ecx
  4239be:	add    eax,esi
  4239c0:	cmp    edx,eax
  4239c2:	jne    0x4239e0
  4239c8:	mov    eax,DWORD PTR [ebp+0xc]
  4239cb:	xor    eax,ecx
  4239cd:	mov    ecx,DWORD PTR [ebp-0x8]
  4239d0:	add    eax,esi
  4239d2:	imul   eax,ecx
  4239d5:	mov    DWORD PTR [ebp-0x8],eax
  4239d8:	push   DWORD PTR [ebp+0x18]
  4239db:	jmp    0x423a3b
  4239e0:	mov    eax,DWORD PTR [ebp-0x8]
  4239e3:	mov    ecx,DWORD PTR [ebp-0x4]
  4239e6:	add    eax,ecx
  4239e8:	mov    DWORD PTR [ebp-0x14],eax
  4239eb:	mov    eax,DWORD PTR [ebp-0x14]
  4239ee:	mov    eax,DWORD PTR [eax+0xc]
  4239f1:	movsx  eax,BYTE PTR [eax+ecx*1]
  4239f5:	cdq    
  4239f6:	add    eax,ebx
  4239f8:	adc    edx,0xffffffff
  4239fb:	xor    eax,edi
  4239fd:	xor    edx,0x0
  423a00:	cmp    eax,0x70941e1e
  423a05:	jne    0x4239d8
  423a0b:	cmp    edx,0xffffffff
  423a0e:	jne    0x4239d8
  423a14:	mov    eax,ds:0x42942f
  423a19:	mov    eax,DWORD PTR [eax+0x198]
  423a1f:	mov    DWORD PTR [eax],ecx
  423a21:	mov    eax,ecx
  423a23:	jmp    0x423a4c
  423a28:	mov    eax,DWORD PTR [ebp+0x18]
  423a2b:	cmp    eax,0xf89c85ba
  423a30:	jne    0x423a4c
  423a36:	push   0xf89c85bb
  423a3b:	push   DWORD PTR [ebp+0x14]
  423a3e:	push   DWORD PTR [ebp+0x10]
  423a41:	push   DWORD PTR [ebp+0xc]
  423a44:	push   DWORD PTR [ebp+0x8]
  423a47:	call   0x420148
  423a4c:	pop    edi
  423a4d:	pop    ebx
  423a4e:	pop    esi
  423a4f:	leave  
  423a50:	ret    0x14
  423a53:	push   ebp
  423a54:	mov    ebp,esp
  423a56:	and    esp,0xfffffff8
  423a59:	add    DWORD PTR ds:0x42a177,0x42a1bb
  423a63:	sub    esp,0x1ac
  423a69:	push   ebx
  423a6a:	push   esi
  423a6b:	mov    DWORD PTR ds:0x42a15f,0x573c
  423a75:	push   edi
  423a76:	xor    edi,edi
  423a78:	push   edi
  423a79:	not    DWORD PTR ds:0x42a18f
  423a7f:	call   DWORD PTR ds:0x42a28b
  423a85:	mov    esi,DWORD PTR ds:0x42a2cb
  423a8b:	add    DWORD PTR ds:0x42a14b,0x7d28
  423a95:	push   0xf
  423a97:	and    DWORD PTR ds:0x42a183,0x1edb
  423aa1:	mov    DWORD PTR [esp+0x14],eax
  423aa5:	lea    eax,[esp+0x44]
  423aa9:	sub    DWORD PTR ds:0x42a19b,0x42a187
  423ab3:	push   eax
  423ab4:	push   0x429553
  423ab9:	sbb    DWORD PTR ds:0x42a17f,0x7a6
  423ac3:	push   0x429567
  423ac8:	adc    DWORD PTR ds:0x42a17f,0x6000
  423ad2:	push   0x42958f
  423ad7:	adc    DWORD PTR ds:0x42a1c3,0x42a1b7
  423ae1:	call   esi
  423ae3:	shl    eax,0x15
  423ae6:	mov    DWORD PTR ds:0x42a197,0x6670
  423af0:	cmp    eax,0x1000000
  423af5:	je     0x423b0c
  423afb:	xor    eax,eax
  423afd:	mov    DWORD PTR ds:0x42a12f,0x1037
  423b07:	jmp    0x424bc3
  423b0c:	or     DWORD PTR ds:0x42a187,0x42a127
  423b16:	push   0x4295b7
  423b1b:	call   DWORD PTR ds:0x42a29f
  423b21:	xor    DWORD PTR ds:0x42a15b,0x42a1b3
  423b2b:	test   eax,eax
  423b2d:	mov    DWORD PTR ds:0x42a137,0x194e
  423b37:	jne    0x423afb
  423b3d:	lea    eax,[esp+0x78]
  423b41:	xor    DWORD PTR ds:0x42a173,0x42a157
  423b4b:	push   eax
  423b4c:	push   0x4295d3
  423b51:	sbb    DWORD PTR ds:0x42a1ab,0x42a133
  423b5b:	call   DWORD PTR ds:0x42a2bb
  423b61:	cmp    eax,0xffffffff
  423b64:	mov    DWORD PTR ds:0x42a193,0x52a3
  423b6e:	jne    0x423afb
  423b74:	mov    DWORD PTR ds:0x42a19b,0xfae
  423b7e:	push   DWORD PTR [esp+0x10]
  423b82:	add    DWORD PTR ds:0x42a157,0x42a16f
  423b8c:	push   edi
  423b8d:	sbb    DWORD PTR ds:0x42a1c3,0x76dd
  423b97:	call   DWORD PTR ds:0x42a287
  423b9d:	mov    ecx,DWORD PTR ds:0x42a24f
  423ba3:	mov    ebx,DWORD PTR ds:0x42a267
  423ba9:	sub    ecx,ebx
  423bab:	sub    ecx,DWORD PTR [ecx+ebx*1]
  423bae:	mov    DWORD PTR [esp+0x30],edi
  423bb2:	or     DWORD PTR ds:0x42a16f,0x565
  423bbc:	mov    DWORD PTR [esp+0x20],0xf89c85b9
  423bc4:	mov    DWORD PTR ds:0x42a143,0x78c3
  423bce:	mov    DWORD PTR [esp+0xc],0xf89c85ba
  423bd6:	or     ebx,ecx
  423bd8:	lea    eax,[esp+0x3c]
  423bdc:	mov    DWORD PTR [esp+0x30],eax
  423be0:	add    ebx,edi
  423be2:	lea    eax,[esp+0x38]
  423be6:	mov    edi,DWORD PTR ds:0x42a1e3
  423bec:	mov    ecx,DWORD PTR ds:0x42a21f
  423bf2:	sub    edi,ecx
  423bf4:	and    edi,DWORD PTR [edi+ecx*1]
  423bf7:	mov    DWORD PTR [esp+0x10],eax
  423bfb:	and    DWORD PTR ds:0x42a17b,0x5d3c
  423c05:	mov    eax,ds:0x42942f
  423c0a:	xor    ebx,ebx
  423c0c:	xor    ebx,DWORD PTR ds:0x42a18b
  423c12:	sbb    DWORD PTR ds:0x42a1bf,ebx
  423c18:	mov    eax,DWORD PTR [eax+0x1c8]
  423c1e:	sbb    edi,DWORD PTR ds:0x42a1cf
  423c24:	mov    eax,DWORD PTR [eax]
  423c26:	and    DWORD PTR ds:0x42a173,0x0
  423c30:	mov    edi,DWORD PTR ds:0x42a173
  423c36:	inc    edi
  423c37:	mov    DWORD PTR ds:0x42a173,edi
  423c3d:	cmp    DWORD PTR ds:0x42a173,0xf
  423c44:	jl     0x423c89
  423c4a:	jmp    0x423c62
  423c4f:	push   DWORD PTR [ebp-0x1c]
  423c52:	push   0x42a127
  423c57:	push   0x25af
  423c5c:	call   DWORD PTR ds:0x42a2ab
  423c62:	cmp    DWORD PTR ds:0x42a173,0xe
  423c69:	jne    0x423c7c
  423c6f:	mov    edi,DWORD PTR ds:0x42a173
  423c75:	inc    edi
  423c76:	mov    DWORD PTR ds:0x42a173,edi
  423c7c:	cmp    DWORD PTR ds:0x42a173,0x1d
  423c83:	jb     0x423c30
  423c89:	mov    ecx,DWORD PTR [esp+0x10]
  423c8d:	and    ebx,DWORD PTR ds:0x42a1ab
  423c93:	mov    edi,0x75108a8
  423c98:	xor    ebx,DWORD PTR ds:0x42a173
  423c9e:	xor    eax,edi
  423ca0:	mov    ebx,DWORD PTR ds:0x42a18b
  423ca6:	or     DWORD PTR ds:0x42a13f,ebx
  423cac:	mov    ebx,0x3272ef
  423cb1:	add    eax,ebx
  423cb3:	mov    DWORD PTR ds:0x42a1c3,0x4871
  423cbd:	mov    DWORD PTR [ecx],eax
  423cbf:	mov    eax,ds:0x42a193
  423cc4:	mov    eax,ds:0x429feb
  423cc9:	cmp    eax,0x445cecf9
  423cce:	jne    0x423d4e
  423cd4:	sbb    ecx,0x3851
  423cda:	mov    eax,DWORD PTR [esp+0x20]
  423cde:	sub    DWORD PTR ds:0x42a16b,edi
  423ce4:	mov    ecx,DWORD PTR ds:0x42942f
  423cea:	mov    ecx,DWORD PTR [ecx+0x198]
  423cf0:	adc    DWORD PTR ds:0x42a14b,0x1545
  423cfa:	xor    eax,edi
  423cfc:	add    eax,ebx
  423cfe:	mov    DWORD PTR [ecx],eax
  423d00:	xor    eax,DWORD PTR ds:0x42a19f
  423d06:	mov    eax,DWORD PTR [esp+0x20]
  423d0a:	sub    DWORD PTR ds:0x42a13f,0x2657
  423d14:	xor    eax,edi
  423d16:	add    eax,ebx
  423d18:	mov    ds:0x429feb,eax
  423d1d:	dec    DWORD PTR ds:0x42a18b
  423d23:	mov    eax,DWORD PTR [esp+0x20]
  423d27:	xor    DWORD PTR ds:0x42a15b,0x42a1af
  423d31:	xor    eax,edi
  423d33:	sbb    DWORD PTR ds:0x42a157,0xceb
  423d3d:	add    eax,ebx
  423d3f:	sbb    DWORD PTR ds:0x42a177,0x42a19f
  423d49:	mov    ds:0x429527,eax
  423d4e:	sub    eax,0xfb3
  423d53:	mov    eax,ds:0x42942f
  423d58:	not    DWORD PTR ds:0x42a1a3
  423d5e:	mov    eax,DWORD PTR [eax+0x18c]
  423d64:	sub    DWORD PTR ds:0x42a133,0x42a19b
  423d6e:	mov    eax,DWORD PTR [eax]
  423d70:	not    DWORD PTR ds:0x42a133
  423d76:	mov    DWORD PTR [esp+0x60],eax
  423d7a:	adc    DWORD PTR ds:0x42a1c7,0x42a1af
  423d84:	mov    eax,0xf89c85bd
  423d89:	mov    DWORD PTR [esp+0x18],eax
  423d8d:	sbb    DWORD PTR ds:0x42a17f,0x42a177
  423d97:	mov    DWORD PTR [esp+0x18],eax
  423d9b:	sub    DWORD PTR ds:0x42a143,0x5dcc
  423da5:	mov    DWORD PTR [esp+0x18],eax
  423da9:	mov    DWORD PTR [esp+0x18],0xf89c85b9
  423db1:	sbb    DWORD PTR ds:0x42a1a3,0x2005
  423dbb:	mov    DWORD PTR [esp+0x10],eax
  423dbf:	mov    DWORD PTR ds:0x42a1a7,0x202e
  423dc9:	mov    DWORD PTR [esp+0x10],0xf89c85b1
  423dd1:	mov    eax,DWORD PTR [esp+0x20]
  423dd5:	add    DWORD PTR ds:0x42a187,0x42a19f
  423ddf:	xor    eax,edi
  423de1:	or     DWORD PTR ds:0x42a15b,0x42a163
  423deb:	add    eax,ebx
  423ded:	jmp    0x42409d
  423df2:	dec    DWORD PTR ds:0x42a143
  423df8:	lea    eax,[esp+0x44]
  423dfc:	adc    DWORD PTR ds:0x42a16f,0x2f79
  423e06:	push   eax
  423e07:	xor    DWORD PTR ds:0x42a13b,0x2364
  423e11:	push   0x4295ef
  423e16:	push   0x429603
  423e1b:	push   0x42962b
  423e20:	sub    DWORD PTR ds:0x42a16b,0x2bd1
  423e2a:	call   esi
  423e2c:	mov    DWORD PTR ds:0x42a147,0x6294
  423e36:	shl    eax,0x15
  423e39:	cmp    eax,0x1000000
  423e3e:	jne    0x423afb
  423e44:	dec    DWORD PTR ds:0x42a163
  423e4a:	push   0x429653
  423e4f:	adc    DWORD PTR ds:0x42a1cb,0x42a1af
  423e59:	call   DWORD PTR ds:0x42a29f
  423e5f:	add    DWORD PTR ds:0x42a14b,0x6241
  423e69:	test   eax,eax
  423e6b:	jne    0x423afb
  423e71:	or     DWORD PTR ds:0x42a133,0x259a
  423e7b:	lea    eax,[esp+0x78]
  423e7f:	push   eax
  423e80:	push   0x42966f
  423e85:	xor    DWORD PTR ds:0x42a17b,0x66c
  423e8f:	call   DWORD PTR ds:0x42a2bb
  423e95:	cmp    eax,0xffffffff
  423e98:	mov    DWORD PTR ds:0x42a187,0x7420
  423ea2:	jne    0x423afb
  423ea8:	and    DWORD PTR ds:0x42a167,0x0
  423eb2:	mov    eax,ds:0x42a167
  423eb7:	inc    eax
  423eb8:	mov    ds:0x42a167,eax
  423ebd:	cmp    DWORD PTR ds:0x42a167,0x5
  423ec4:	jl     0x423f0c
  423eca:	jmp    0x423ee7
  423ecf:	push   0x38f5
  423ed4:	push   DWORD PTR [ebp-0x10]
  423ed7:	push   0x7b72
  423edc:	push   0x6a40
  423ee1:	call   DWORD PTR ds:0x42a2af
  423ee7:	cmp    DWORD PTR ds:0x42a167,0x4
  423eee:	jne    0x423eff
  423ef4:	mov    eax,ds:0x42a167
  423ef9:	inc    eax
  423efa:	mov    ds:0x42a167,eax
  423eff:	cmp    DWORD PTR ds:0x42a167,0x12
  423f06:	jb     0x423eb2
  423f0c:	mov    eax,DWORD PTR [esp+0xc]
  423f10:	mov    ecx,DWORD PTR [esp+0x10]
  423f14:	dec    DWORD PTR ds:0x42a15f
  423f1a:	xor    eax,edi
  423f1c:	sub    DWORD PTR ds:0x42a1a7,0x2267
  423f26:	lea    eax,[eax+ecx*1+0x3272ef]
  423f2d:	sbb    DWORD PTR ds:0x42a1bb,0x1a84
  423f37:	push   eax
  423f38:	and    DWORD PTR ds:0x42a15f,0x0
  423f42:	jmp    0x423f52
  423f47:	mov    eax,ds:0x42a15f
  423f4c:	inc    eax
  423f4d:	mov    ds:0x42a15f,eax
  423f52:	cmp    DWORD PTR ds:0x42a15f,0x12
  423f59:	jae    0x423f8a
  423f5f:	cmp    DWORD PTR ds:0x42a15f,0x21
  423f66:	jb     0x423f8a
  423f6c:	jmp    0x423f85
  423f71:	push   DWORD PTR [ebp-0x24]
  423f74:	push   DWORD PTR [ebp-0xc]
  423f77:	push   0x42a1af
  423f7c:	push   DWORD PTR [ebp-0x14]
  423f7f:	call   DWORD PTR ds:0x42a2b3
  423f85:	jmp    0x423f47
  423f8a:	mov    eax,DWORD PTR [esp+0x1c]
  423f8e:	add    DWORD PTR ds:0x42a1c3,0x42a19f
  423f98:	xor    eax,edi
  423f9a:	adc    DWORD PTR ds:0x42a147,0x3c17
  423fa4:	lea    eax,[ebp+eax*1+0x3272f7]
  423fab:	and    DWORD PTR ds:0x42a18b,0x7df0
  423fb5:	push   eax
  423fb6:	mov    eax,ds:0x42a12b
  423fbb:	xor    DWORD PTR ds:0x42a1ab,eax
  423fc1:	mov    eax,ds:0x42942f
  423fc6:	xor    DWORD PTR ds:0x42a147,0x5716
  423fd0:	push   DWORD PTR [eax+0x1bc]
  423fd6:	inc    DWORD PTR ds:0x42a1c3
  423fdc:	call   0x424bcc
  423fe1:	add    DWORD PTR ds:0x42a18f,ebx
  423fe7:	mov    eax,DWORD PTR [esp+0xc]
  423feb:	and    DWORD PTR ds:0x42a18f,0x0
  423ff5:	mov    ecx,DWORD PTR ds:0x42a18f
  423ffb:	inc    ecx
  423ffc:	mov    DWORD PTR ds:0x42a18f,ecx
  424002:	cmp    DWORD PTR ds:0x42a18f,0x23
  424009:	jg     0x42403b
  42400f:	jmp    0x42402e
  424014:	push   0x42a137
  424019:	push   0x3da7
  42401e:	push   0x4290e5
  424023:	push   0x42912b
  424028:	call   DWORD PTR ds:0x42a2b7
  42402e:	cmp    DWORD PTR ds:0x42a18f,0x1c
  424035:	jb     0x423ff5
  42403b:	mov    ecx,DWORD PTR [esp+0x10]
  42403f:	and    DWORD PTR ds:0x42a1a3,0x0
  424049:	jmp    0x42405b
  42404e:	mov    edx,DWORD PTR ds:0x42a1a3
  424054:	inc    edx
  424055:	mov    DWORD PTR ds:0x42a1a3,edx
  42405b:	cmp    DWORD PTR ds:0x42a1a3,0x15
  424062:	jae    0x42408a
  424068:	cmp    DWORD PTR ds:0x42a1a3,0x23
  42406f:	jl     0x42408a
  424075:	jmp    0x424085
  42407a:	push   0x2b36
  42407f:	call   DWORD PTR ds:0x42a2bf
  424085:	jmp    0x42404e
  42408a:	xor    eax,edi
  42408c:	add    DWORD PTR ds:0x42a15b,0x498
  424096:	lea    eax,[ecx+eax*1+0x3272ef]
  42409d:	add    DWORD PTR ds:0x42a1d3,0x5749
  4240a7:	mov    ecx,DWORD PTR [esp+0xc]
  4240ab:	and    DWORD PTR ds:0x42a18f,ecx
  4240b1:	mov    edx,DWORD PTR [esp+0xc]
  4240b5:	xor    edx,edi
  4240b7:	xor    ecx,edi
  4240b9:	add    ecx,edx
  4240bb:	mov    edx,DWORD PTR [esp+0xc]
  4240bf:	xor    edx,edi
  4240c1:	mov    DWORD PTR ds:0x42a15f,0x7e75
  4240cb:	lea    ecx,[ecx+edx*1+0x9758cd]
  4240d2:	mov    DWORD PTR ds:0x42a14b,0x16f9
  4240dc:	mov    DWORD PTR [esp+0x10],eax
  4240e0:	push   0xf
  4240e2:	mov    DWORD PTR ds:0x42a1bb,0x175a
  4240ec:	cmp    eax,ecx
  4240ee:	mov    DWORD PTR ds:0x42a15f,0x2b18
  4240f8:	jbe    0x423df2
  4240fe:	mov    eax,DWORD PTR [ebp+0xc]
  424101:	add    ecx,DWORD PTR ds:0x42a173
  424107:	mov    ds:0x4292b3,eax
  42410c:	mov    eax,DWORD PTR [ebp+0x10]
  42410f:	xor    ecx,ecx
  424111:	xor    ecx,DWORD PTR ds:0x42a1b3
  424117:	sbb    DWORD PTR ds:0x42a1cb,ecx
  42411d:	mov    ds:0x42950f,eax
  424122:	mov    eax,ds:0x4292b3
  424127:	mov    ecx,DWORD PTR ds:0x42a12f
  42412d:	or     ecx,DWORD PTR ds:0x42a15f
  424133:	mov    DWORD PTR ds:0x42a12f,ecx
  424139:	mov    ecx,DWORD PTR [esp+0x34]
  42413d:	adc    DWORD PTR ds:0x42a1c7,0x192d
  424147:	sub    eax,ebx
  424149:	xor    eax,edi
  42414b:	or     DWORD PTR ds:0x42a1af,0x42a1cb
  424155:	mov    DWORD PTR [ecx],eax
  424157:	sub    DWORD PTR ds:0x42a187,0x2768
  424161:	lea    eax,[esp+0x30]
  424165:	and    DWORD PTR ds:0x42a17b,0x51d9
  42416f:	mov    DWORD PTR [esp+0x74],eax
  424173:	lea    eax,[ebp+0x4]
  424176:	mov    DWORD PTR [esp+0x30],eax
  42417a:	lea    eax,[esp+0x44]
  42417e:	xor    DWORD PTR ds:0x42a1ab,0x6aa
  424188:	push   eax
  424189:	sub    DWORD PTR ds:0x42a137,0x42a18b
  424193:	push   0x42968b
  424198:	push   0x42969f
  42419d:	sub    DWORD PTR ds:0x42a12f,0x6538
  4241a7:	push   0x4296c7
  4241ac:	add    DWORD PTR ds:0x42a17f,0x42a1cf
  4241b6:	call   esi
  4241b8:	shl    eax,0x15
  4241bb:	mov    DWORD PTR ds:0x42a1bf,0x1cd6
  4241c5:	cmp    eax,0x1000000
  4241ca:	mov    DWORD PTR ds:0x42a193,0x32c8
  4241d4:	jne    0x423afb
  4241da:	push   0x4296ef
  4241df:	call   DWORD PTR ds:0x42a29f
  4241e5:	xor    DWORD PTR ds:0x42a16f,0x42a177
  4241ef:	test   eax,eax
  4241f1:	jne    0x423afb
  4241f7:	adc    DWORD PTR ds:0x42a16f,0x7895
  424201:	lea    eax,[esp+0x78]
  424205:	push   eax
  424206:	push   0x42970b
  42420b:	call   DWORD PTR ds:0x42a2bb
  424211:	cmp    eax,0xffffffff
  424214:	jne    0x423afb
  42421a:	push   0xf
  42421c:	lea    eax,[esp+0x44]
  424220:	push   eax
  424221:	sub    DWORD PTR ds:0x42a19b,0x42a167
  42422b:	push   0x429727
  424230:	sbb    DWORD PTR ds:0x42a18b,0x654e
  42423a:	push   0x42973b
  42423f:	push   0x429763
  424244:	add    DWORD PTR ds:0x42a15f,0x4c0a
  42424e:	call   esi
  424250:	shl    eax,0x15
  424253:	mov    DWORD PTR ds:0x42a17b,0x49de
  42425d:	cmp    eax,0x1000000
  424262:	mov    DWORD PTR ds:0x42a1a7,0x39fb
  42426c:	jne    0x423afb
  424272:	sbb    DWORD PTR ds:0x42a1bb,0x7658
  42427c:	push   0x42978b
  424281:	call   DWORD PTR ds:0x42a29f
  424287:	test   eax,eax
  424289:	jne    0x423afb
  42428f:	lea    eax,[esp+0x78]
  424293:	adc    DWORD PTR ds:0x42a14f,0x33c9
  42429d:	push   eax
  42429e:	push   0x4297a7
  4242a3:	and    DWORD PTR ds:0x42a187,0x42a1c3
  4242ad:	call   DWORD PTR ds:0x42a2bb
  4242b3:	cmp    eax,0xffffffff
  4242b6:	jne    0x423afb
  4242bc:	add    DWORD PTR ds:0x42a14f,0x42a1b3
  4242c6:	push   0xf
  4242c8:	adc    DWORD PTR ds:0x42a14f,0x42a17b
  4242d2:	lea    eax,[esp+0x44]
  4242d6:	adc    DWORD PTR ds:0x42a197,0x4372
  4242e0:	push   eax
  4242e1:	sub    DWORD PTR ds:0x42a1c3,0x57ed
  4242eb:	push   0x4297c3
  4242f0:	push   0x4297d7
  4242f5:	push   0x4297ff
  4242fa:	sbb    DWORD PTR ds:0x42a143,0x42a1d3
  424304:	call   esi
  424306:	shl    eax,0x15
  424309:	cmp    eax,0x1000000
  42430e:	mov    DWORD PTR ds:0x42a1bb,0x7ab0
  424318:	jne    0x423afb
  42431e:	and    DWORD PTR ds:0x42a1b7,0x42a16b
  424328:	push   0x429827
  42432d:	neg    DWORD PTR ds:0x42a13f
  424333:	call   DWORD PTR ds:0x42a29f
  424339:	test   eax,eax
  42433b:	mov    DWORD PTR ds:0x42a183,0x529e
  424345:	jne    0x423afb
  42434b:	or     DWORD PTR ds:0x42a173,0x42a13f
  424355:	lea    eax,[esp+0x78]
  424359:	push   eax
  42435a:	adc    DWORD PTR ds:0x42a14b,0x42a183
  424364:	push   0x429843
  424369:	call   DWORD PTR ds:0x42a2bb
  42436f:	mov    DWORD PTR ds:0x42a167,0x1720
  424379:	cmp    eax,0xffffffff
  42437c:	mov    DWORD PTR ds:0x42a1b3,0x34b9
  424386:	jne    0x423afb
  42438c:	xor    DWORD PTR ds:0x42a127,0x42a193
  424396:	push   0xf
  424398:	lea    eax,[esp+0x44]
  42439c:	push   eax
  42439d:	push   0x42985f
  4243a2:	sbb    DWORD PTR ds:0x42a13f,0x42a14b
  4243ac:	push   0x429873
  4243b1:	push   0x42989b
  4243b6:	call   esi
  4243b8:	mov    DWORD PTR ds:0x42a183,0x7c87
  4243c2:	shl    eax,0x15
  4243c5:	cmp    eax,0x1000000
  4243ca:	jne    0x423afb
  4243d0:	sub    DWORD PTR ds:0x42a14f,0x1b5
  4243da:	push   0x4298c3
  4243df:	adc    DWORD PTR ds:0x42a15f,0x2d72
  4243e9:	call   DWORD PTR ds:0x42a29f
  4243ef:	test   eax,eax
  4243f1:	jne    0x423afb
  4243f7:	xor    DWORD PTR ds:0x42a177,0x5023
  424401:	lea    eax,[esp+0x78]
  424405:	add    DWORD PTR ds:0x42a19b,0x39d
  42440f:	push   eax
  424410:	push   0x4298df
  424415:	call   DWORD PTR ds:0x42a2bb
  42441b:	mov    DWORD PTR ds:0x42a16f,0xd24
  424425:	cmp    eax,0xffffffff
  424428:	jne    0x423afb
  42442e:	not    DWORD PTR ds:0x42a157
  424434:	push   0xf
  424436:	mov    DWORD PTR ds:0x42a197,0x1e5a
  424440:	lea    eax,[esp+0x44]
  424444:	push   eax
  424445:	push   0x4298fb
  42444a:	push   0x42990f
  42444f:	push   0x429937
  424454:	add    DWORD PTR ds:0x42a17f,0x42a1a7
  42445e:	call   esi
  424460:	mov    DWORD PTR ds:0x42a19f,0x41c3
  42446a:	shl    eax,0x15
  42446d:	cmp    eax,0x1000000
  424472:	jne    0x423afb
  424478:	sub    DWORD PTR ds:0x42a137,0x2237
  424482:	push   0x42995f
  424487:	xor    DWORD PTR ds:0x42a15b,0x42a1d3
  424491:	call   DWORD PTR ds:0x42a29f
  424497:	test   eax,eax
  424499:	mov    DWORD PTR ds:0x42a167,0x62c6
  4244a3:	jne    0x423afb
  4244a9:	and    DWORD PTR ds:0x42a1af,0x5eb4
  4244b3:	lea    eax,[esp+0x78]
  4244b7:	adc    DWORD PTR ds:0x42a15b,0x4918
  4244c1:	push   eax
  4244c2:	or     DWORD PTR ds:0x42a177,0x42a12f
  4244cc:	push   0x42997b
  4244d1:	sbb    DWORD PTR ds:0x42a173,0x42a133
  4244db:	call   DWORD PTR ds:0x42a2bb
  4244e1:	mov    DWORD PTR ds:0x42a12b,0x13e7
  4244eb:	cmp    eax,0xffffffff
  4244ee:	mov    DWORD PTR ds:0x42a1ab,0xa62
  4244f8:	jne    0x423afb
  4244fe:	xor    DWORD PTR ds:0x42a137,0x42a197
  424508:	push   0xf
  42450a:	lea    eax,[esp+0x44]
  42450e:	or     DWORD PTR ds:0x42a18f,0x2cef
  424518:	push   eax
  424519:	push   0x429997
  42451e:	push   0x4299ab
  424523:	sub    DWORD PTR ds:0x42a17f,0x42a16b
  42452d:	push   0x4299d3
  424532:	call   esi
  424534:	shl    eax,0x15
  424537:	mov    DWORD PTR ds:0x42a16f,0x43ec
  424541:	cmp    eax,0x1000000
  424546:	mov    DWORD PTR ds:0x42a1a3,0x18cb
  424550:	jne    0x423afb
  424556:	add    DWORD PTR ds:0x42a18b,0x5057
  424560:	push   0x4299fb
  424565:	or     DWORD PTR ds:0x42a19f,0x48df
  42456f:	call   DWORD PTR ds:0x42a29f
  424575:	and    DWORD PTR ds:0x42a1bf,0x7c0c
  42457f:	test   eax,eax
  424581:	mov    DWORD PTR ds:0x42a187,0x257b
  42458b:	jne    0x423afb
  424591:	xor    DWORD PTR ds:0x42a1cb,0x42a1c7
  42459b:	lea    eax,[esp+0x78]
  42459f:	add    DWORD PTR ds:0x42a197,0x4894
  4245a9:	push   eax
  4245aa:	or     DWORD PTR ds:0x42a12b,0x42a19f
  4245b4:	push   0x429a17
  4245b9:	sbb    DWORD PTR ds:0x42a127,0x42a14f
  4245c3:	call   DWORD PTR ds:0x42a2bb
  4245c9:	cmp    eax,0xffffffff
  4245cc:	mov    DWORD PTR ds:0x42a177,0xc3a
  4245d6:	jne    0x423afb
  4245dc:	push   0xf
  4245de:	lea    eax,[esp+0x44]
  4245e2:	inc    DWORD PTR ds:0x42a1cb
  4245e8:	push   eax
  4245e9:	push   0x429a33
  4245ee:	push   0x429a47
  4245f3:	sub    DWORD PTR ds:0x42a13b,0x42a14f
  4245fd:	push   0x429a6f
  424602:	xor    DWORD PTR ds:0x42a15f,0x6779
  42460c:	call   esi
  42460e:	mov    DWORD PTR ds:0x42a1b7,0x68bf
  424618:	shl    eax,0x15
  42461b:	mov    DWORD PTR ds:0x42a13b,0x5b0c
  424625:	cmp    eax,0x1000000
  42462a:	mov    DWORD PTR ds:0x42a133,0x4026
  424634:	jne    0x423afb
  42463a:	push   0x429a97
  42463f:	and    DWORD PTR ds:0x42a1b7,0x42a147
  424649:	call   DWORD PTR ds:0x42a29f
  42464f:	test   eax,eax
  424651:	jne    0x423afb
  424657:	lea    eax,[esp+0x78]
  42465b:	push   eax
  42465c:	push   0x429ab3
  424661:	call   DWORD PTR ds:0x42a2bb
  424667:	mov    DWORD PTR ds:0x42a1b7,0xded
  424671:	cmp    eax,0xffffffff
  424674:	mov    DWORD PTR ds:0x42a13b,0x163f
  42467e:	jne    0x423afb
  424684:	or     DWORD PTR ds:0x42a1cf,0x42a13b
  42468e:	push   0xf
  424690:	lea    eax,[esp+0x44]
  424694:	push   eax
  424695:	push   0x429acf
  42469a:	push   0x429ae3
  42469f:	add    DWORD PTR ds:0x42a167,0x42a1c7
  4246a9:	push   0x429b0b
  4246ae:	or     DWORD PTR ds:0x42a157,0x42a1a3
  4246b8:	call   esi
  4246ba:	shl    eax,0x15
  4246bd:	mov    DWORD PTR ds:0x42a1a7,0x724c
  4246c7:	cmp    eax,0x1000000
  4246cc:	mov    DWORD PTR ds:0x42a13b,0x4087
  4246d6:	jne    0x423afb
  4246dc:	xor    DWORD PTR ds:0x42a163,0x42a13b
  4246e6:	push   0x429b33
  4246eb:	or     DWORD PTR ds:0x42a143,0x1c84
  4246f5:	call   DWORD PTR ds:0x42a29f
  4246fb:	xor    DWORD PTR ds:0x42a193,0x1623
  424705:	test   eax,eax
  424707:	mov    DWORD PTR ds:0x42a15f,0x197f
  424711:	jne    0x423afb
  424717:	lea    eax,[esp+0x78]
  42471b:	inc    DWORD PTR ds:0x42a137
  424721:	push   eax
  424722:	push   0x429b4f
  424727:	xor    DWORD PTR ds:0x42a1bb,0x42a1b7
  424731:	call   DWORD PTR ds:0x42a2bb
  424737:	mov    DWORD PTR ds:0x42a16f,0x1cd6
  424741:	cmp    eax,0xffffffff
  424744:	jne    0x423afb
  42474a:	sbb    DWORD PTR ds:0x42a17f,0x4eb9
  424754:	push   0xf
  424756:	lea    eax,[esp+0x44]
  42475a:	or     DWORD PTR ds:0x42a1d3,0x42a193
  424764:	push   eax
  424765:	sub    DWORD PTR ds:0x42a17b,0x42a1bb
  42476f:	push   0x429b6b
  424774:	add    DWORD PTR ds:0x42a16b,0x35f5
  42477e:	push   0x429b7f
  424783:	push   0x429ba7
  424788:	sbb    DWORD PTR ds:0x42a1a7,0x42a167
  424792:	call   esi
  424794:	shl    eax,0x15
  424797:	cmp    eax,0x1000000
  42479c:	jne    0x423afb
  4247a2:	push   0x429bcf
  4247a7:	call   DWORD PTR ds:0x42a29f
  4247ad:	test   eax,eax
  4247af:	jne    0x423afb
  4247b5:	lea    eax,[esp+0x78]
  4247b9:	push   eax
  4247ba:	push   0x429beb
  4247bf:	call   DWORD PTR ds:0x42a2bb
  4247c5:	cmp    eax,0xffffffff
  4247c8:	jne    0x423afb
  4247ce:	push   0xf
  4247d0:	lea    eax,[esp+0x44]
  4247d4:	push   eax
  4247d5:	push   0x429c07
  4247da:	push   0x429c1b
  4247df:	push   0x429c43
  4247e4:	call   esi
  4247e6:	shl    eax,0x15
  4247e9:	cmp    eax,0x1000000
  4247ee:	jne    0x423afb
  4247f4:	push   0x429c6b
  4247f9:	call   DWORD PTR ds:0x42a29f
  4247ff:	test   eax,eax
  424801:	jne    0x423afb
  424807:	lea    eax,[esp+0x78]
  42480b:	push   eax
  42480c:	push   0x429c87
  424811:	call   DWORD PTR ds:0x42a2bb
  424817:	cmp    eax,0xffffffff
  42481a:	jne    0x423afb
  424820:	push   0xf
  424822:	lea    eax,[esp+0x44]
  424826:	push   eax
  424827:	push   0x429ca3
  42482c:	push   0x429cb7
  424831:	push   0x429cdf
  424836:	call   esi
  424838:	shl    eax,0x15
  42483b:	cmp    eax,0x1000000
  424840:	jne    0x423afb
  424846:	push   0x429d07
  42484b:	call   DWORD PTR ds:0x42a29f
  424851:	test   eax,eax
  424853:	jne    0x423afb
  424859:	lea    eax,[esp+0x78]
  42485d:	push   eax
  42485e:	push   0x429d23
  424863:	call   DWORD PTR ds:0x42a2bb
  424869:	cmp    eax,0xffffffff
  42486c:	jne    0x423afb
  424872:	push   0xf
  424874:	lea    eax,[esp+0x44]
  424878:	push   eax
  424879:	push   0x429d3f
  42487e:	push   0x429d53
  424883:	push   0x429d7b
  424888:	call   esi
  42488a:	shl    eax,0x15
  42488d:	cmp    eax,0x1000000
  424892:	jne    0x423afb
  424898:	push   0x429da3
  42489d:	call   DWORD PTR ds:0x42a29f
  4248a3:	test   eax,eax
  4248a5:	jne    0x423afb
  4248ab:	lea    eax,[esp+0x78]
  4248af:	push   eax
  4248b0:	push   0x429dbf
  4248b5:	call   DWORD PTR ds:0x42a2bb
  4248bb:	cmp    eax,0xffffffff
  4248be:	jne    0x423afb
  4248c4:	mov    eax,DWORD PTR [esp+0x3c]
  4248c8:	cmp    eax,0xf89c85ba
  4248cd:	je     0x42492c
  4248d3:	mov    eax,DWORD PTR [esp+0x20]
  4248d7:	mov    ecx,DWORD PTR [esp+0x38]
  4248db:	xor    eax,edi
  4248dd:	add    eax,ebx
  4248df:	cmp    eax,ecx
  4248e1:	je     0x42492c
  4248e7:	mov    eax,ds:0x42942f
  4248ec:	mov    eax,DWORD PTR [eax+0x194]
  4248f2:	mov    ecx,DWORD PTR [eax]
  4248f4:	mov    eax,DWORD PTR [ecx+0x3c]
  4248f7:	push   DWORD PTR ds:0x42950f
  4248fd:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  424901:	push   DWORD PTR ds:0x4292b3
  424907:	add    eax,ecx
  424909:	mov    ecx,DWORD PTR ds:0x42942f
  42490f:	mov    ecx,DWORD PTR [ecx+0x194]
  424915:	push   DWORD PTR [ecx]
  424917:	call   eax
  424919:	mov    ecx,DWORD PTR ds:0x42942f
  42491f:	mov    ecx,DWORD PTR [ecx+0x1cc]
  424925:	mov    DWORD PTR [ecx],eax
  424927:	jmp    0x424b50
  42492c:	mov    eax,DWORD PTR [esp+0x20]
  424930:	mov    ecx,DWORD PTR [esp+0x60]
  424934:	xor    eax,edi
  424936:	add    eax,ebx
  424938:	cmp    eax,ecx
  42493a:	jne    0x4249a3
  424940:	mov    eax,DWORD PTR [esp+0x20]
  424944:	mov    ecx,DWORD PTR ds:0x42942f
  42494a:	mov    ecx,DWORD PTR [ecx+0x198]
  424950:	xor    eax,edi
  424952:	add    eax,ebx
  424954:	cmp    eax,DWORD PTR [ecx]
  424956:	jne    0x42497c
  42495c:	mov    eax,DWORD PTR [esp+0x20]
  424960:	push   0xf89c85b9
  424965:	xor    eax,edi
  424967:	add    eax,ebx
  424969:	push   eax
  42496a:	push   0xf89c85bd
  42496f:	push   DWORD PTR [esp+0x18]
  424973:	push   DWORD PTR [esp+0x30]
  424977:	call   0x420148
  42497c:	push   DWORD PTR [esp+0xc]
  424980:	push   DWORD PTR [esp+0x24]
  424984:	call   0x401000
  424989:	mov    eax,DWORD PTR [esp+0x20]
  42498d:	xor    eax,edi
  42498f:	add    eax,ebx
  424991:	mov    ds:0x4294bb,eax
  424996:	mov    eax,DWORD PTR [esp+0x20]
  42499a:	xor    eax,edi
  42499c:	add    eax,ebx
  42499e:	mov    ds:0x4294b3,eax
  4249a3:	mov    eax,DWORD PTR [esp+0x2c]
  4249a7:	test   eax,eax
  4249a9:	je     0x424b50
  4249af:	push   0xf
  4249b1:	lea    eax,[esp+0x44]
  4249b5:	push   eax
  4249b6:	push   0x429ddb
  4249bb:	mov    DWORD PTR [esp+0x70],0xf152c32
  4249c3:	push   0x429def
  4249c8:	mov    DWORD PTR [esp+0x7c],0x712ed2f
  4249d0:	mov    DWORD PTR [esp+0x84],0x373fc01
  4249db:	push   0x429e17
  4249e0:	mov    DWORD PTR [esp+0x7c],0x72670ad1
  4249e8:	call   esi
  4249ea:	shl    eax,0x15
  4249ed:	cmp    eax,0x1000000
  4249f2:	jne    0x423afb
  4249f8:	push   0x429e3f
  4249fd:	call   DWORD PTR ds:0x42a29f
  424a03:	test   eax,eax
  424a05:	jne    0x423afb
  424a0b:	lea    eax,[esp+0x78]
  424a0f:	push   eax
  424a10:	push   0x429e5b
  424a15:	call   DWORD PTR ds:0x42a2bb
  424a1b:	cmp    eax,0xffffffff
  424a1e:	jne    0x423afb
  424a24:	call   0x41da00
  424a29:	mov    eax,DWORD PTR [esp+0x34]
  424a2d:	mov    eax,DWORD PTR [esp+0xc]
  424a31:	mov    DWORD PTR [esp+0x30],eax
  424a35:	mov    eax,DWORD PTR [esp+0x20]
  424a39:	mov    DWORD PTR [esp+0xc],eax
  424a3d:	mov    eax,eax
  424a3f:	mov    eax,ds:0x42942f
  424a44:	mov    ecx,DWORD PTR [eax+0x1c0]
  424a4a:	mov    edx,DWORD PTR [ecx]
  424a4c:	and    DWORD PTR [esp+0x1c],0x0
  424a51:	mov    esi,0xfabdbeda
  424a56:	add    edx,esi
  424a58:	adc    DWORD PTR [esp+0x1c],0xffffffff
  424a5d:	mov    ecx,0x8a29a13b
  424a62:	xor    edx,ecx
  424a64:	mov    DWORD PTR [esp+0x10],edx
  424a68:	mov    edx,DWORD PTR [esp+0x1c]
  424a6c:	xor    edx,0x0
  424a6f:	cmp    DWORD PTR [esp+0x10],0x70941fe0
  424a77:	mov    DWORD PTR [esp+0x14],edx
  424a7b:	jne    0x424a8a
  424a81:	cmp    edx,0xffffffff
  424a84:	je     0x424af3
  424a8a:	mov    eax,DWORD PTR [eax+0x1c8]
  424a90:	mov    eax,DWORD PTR [eax]
  424a92:	cdq    
  424a93:	add    eax,esi
  424a95:	adc    edx,0xffffffff
  424a98:	and    DWORD PTR [esp+0x1c],0x0
  424a9d:	xor    edx,0x0
  424aa0:	mov    DWORD PTR [esp+0x24],edx
  424aa4:	mov    edx,DWORD PTR [esp+0xc]
  424aa8:	mov    DWORD PTR [esp+0x18],edx
  424aac:	xor    eax,ecx
  424aae:	add    DWORD PTR [esp+0x18],esi
  424ab2:	mov    edx,DWORD PTR [esp+0x18]
  424ab6:	adc    DWORD PTR [esp+0x1c],0xffffffff
  424abb:	xor    edx,ecx
  424abd:	mov    DWORD PTR [esp+0x10],edx
  424ac1:	mov    edx,DWORD PTR [esp+0x1c]
  424ac5:	xor    edx,0x0
  424ac8:	mov    DWORD PTR [esp+0x14],edx
  424acc:	cmp    DWORD PTR [esp+0x10],eax
  424ad0:	jne    0x424ae2
  424ad6:	mov    eax,DWORD PTR [esp+0x24]
  424ada:	cmp    edx,eax
  424adc:	je     0x424af3
  424ae2:	mov    eax,DWORD PTR [esp+0xc]
  424ae6:	add    eax,DWORD PTR [esp+0x30]
  424aea:	mov    DWORD PTR [esp+0xc],eax
  424aee:	jmp    0x424b50
  424af3:	mov    eax,ds:0x4294b3
  424af8:	mov    edx,DWORD PTR ds:0x4294bb
  424afe:	xor    eax,edx
  424b00:	mov    ds:0x4294b3,eax
  424b05:	mov    edx,DWORD PTR ds:0x4294b3
  424b0b:	mov    eax,DWORD PTR [esp+0x2c]
  424b0f:	add    DWORD PTR [eax],edx
  424b11:	mov    edx,DWORD PTR [esp+0xc]
  424b15:	mov    eax,ds:0x4294b3
  424b1a:	xor    edx,edi
  424b1c:	add    edx,ebx
  424b1e:	xor    ebx,ebx
  424b20:	add    edx,esi
  424b22:	adc    ebx,0xffffffff
  424b25:	xor    edi,edi
  424b27:	xor    edx,ecx
  424b29:	xor    ebx,0x0
  424b2c:	add    eax,esi
  424b2e:	adc    edi,0xffffffff
  424b31:	xor    eax,ecx
  424b33:	xor    edi,0x0
  424b36:	cmp    eax,edx
  424b38:	jne    0x424b50
  424b3e:	cmp    edi,ebx
  424b40:	jne    0x424b50
  424b46:	mov    eax,ds:0x4294b3
  424b4b:	mov    ds:0x4294bb,eax
  424b50:	push   0xf
  424b52:	lea    eax,[esp+0x44]
  424b56:	push   eax
  424b57:	push   0x429e77
  424b5c:	push   0x429e8b
  424b61:	push   0x429eb3
  424b66:	call   DWORD PTR ds:0x42a2cb
  424b6c:	shl    eax,0x15
  424b6f:	cmp    eax,0x1000000
  424b74:	jne    0x423afb
  424b7a:	push   0x429edb
  424b7f:	call   DWORD PTR ds:0x42a29f
  424b85:	test   eax,eax
  424b87:	jne    0x423afb
  424b8d:	lea    eax,[esp+0x78]
  424b91:	push   eax
  424b92:	push   0x429ef7
  424b97:	call   DWORD PTR ds:0x42a2bb
  424b9d:	cmp    eax,0xffffffff
  424ba0:	jne    0x423afb
  424ba6:	mov    eax,ds:0x42942f
  424bab:	push   0x4
  424bad:	add    eax,0x1cc
  424bb2:	push   eax
  424bb3:	lea    eax,[esp+0x3c]
  424bb7:	push   eax
  424bb8:	call   0x424bcc
  424bbd:	mov    eax,DWORD PTR [esp+0x34]
  424bc1:	mov    eax,DWORD PTR [eax]
  424bc3:	pop    edi
  424bc4:	pop    esi
  424bc5:	pop    ebx
  424bc6:	mov    esp,ebp
  424bc8:	pop    ebp
  424bc9:	ret    0xc
  424bcc:	push   ebp
  424bcd:	mov    ebp,esp
  424bcf:	sub    esp,0x10
  424bd2:	and    DWORD PTR ds:0x42a17f,0x0
  424bdc:	xor    edx,edx
  424bde:	add    edx,DWORD PTR ds:0x42a17f
  424be4:	inc    edx
  424be5:	mov    DWORD PTR ds:0x42a17f,edx
  424beb:	cmp    DWORD PTR ds:0x42a17f,0xc
  424bf2:	jb     0x424c32
  424bf8:	jmp    0x424c0b
  424bfd:	push   DWORD PTR [ebp-0xc]
  424c00:	push   0x4b82
  424c05:	call   DWORD PTR ds:0x42a2c3
  424c0b:	cmp    DWORD PTR ds:0x42a17f,0xb
  424c12:	jne    0x424c25
  424c18:	mov    edx,DWORD PTR ds:0x42a17f
  424c1e:	inc    edx
  424c1f:	mov    DWORD PTR ds:0x42a17f,edx
  424c25:	cmp    DWORD PTR ds:0x42a17f,0x16
  424c2c:	jb     0x424bdc
  424c32:	mov    eax,0xf89c85b9
  424c37:	mov    DWORD PTR [ebp-0x4],eax
  424c3a:	sbb    ecx,edx
  424c3c:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  424c43:	mov    ecx,DWORD PTR [ebp-0x4]
  424c46:	mov    DWORD PTR ds:0x42a1bb,0x13
  424c50:	cmp    DWORD PTR ds:0x42a1bb,0x0
  424c57:	je     0x424c91
  424c5d:	cmp    DWORD PTR ds:0x42a1bb,0x1e
  424c64:	jbe    0x424c91
  424c6a:	jmp    0x424c7f
  424c6f:	push   0x5b3a
  424c74:	push   0x40cb
  424c79:	call   DWORD PTR ds:0x42a2c7
  424c7f:	mov    edx,DWORD PTR ds:0x42a1bb
  424c85:	dec    edx
  424c86:	mov    DWORD PTR ds:0x42a1bb,edx
  424c8c:	jmp    0x424c50
  424c91:	push   esi
  424c92:	sub    DWORD PTR ds:0x42a1c7,ecx
  424c98:	mov    edx,0x75108a8
  424c9d:	add    DWORD PTR ds:0x42a197,edi
  424ca3:	xor    ecx,edx
  424ca5:	neg    esi
  424ca7:	mov    esi,0x3272ef
  424cac:	adc    DWORD PTR ds:0x42a133,0x42a12f
  424cb6:	push   edi
  424cb7:	mov    edi,DWORD PTR [ebp+0x10]
  424cba:	add    ecx,esi
  424cbc:	mov    DWORD PTR ds:0x42a1a7,0x8eb
  424cc6:	cmp    ecx,edi
  424cc8:	mov    DWORD PTR ds:0x42a1a7,0x4f38
  424cd2:	je     0x424e03
  424cd8:	mov    DWORD PTR ds:0x42a1c7,0x14
  424ce2:	cmp    DWORD PTR ds:0x42a1c7,0x0
  424ce9:	je     0x424d44
  424cef:	cmp    DWORD PTR ds:0x42a1c7,0xb
  424cf6:	jle    0x424d44
  424cfc:	jmp    0x424d16
  424d01:	push   0x7f3b
  424d06:	push   0x42a1bb
  424d0b:	push   0x400000
  424d10:	call   DWORD PTR ds:0x42a2cf
  424d16:	cmp    DWORD PTR ds:0x42a1c7,0xc
  424d1d:	jne    0x424d30
  424d23:	mov    ecx,DWORD PTR ds:0x42a1c7
  424d29:	dec    ecx
  424d2a:	mov    DWORD PTR ds:0x42a1c7,ecx
  424d30:	xor    ecx,ecx
  424d32:	add    ecx,DWORD PTR ds:0x42a1c7
  424d38:	dec    ecx
  424d39:	mov    DWORD PTR ds:0x42a1c7,ecx
  424d3f:	jmp    0x424ce2
  424d44:	mov    ecx,DWORD PTR [ebp-0x4]
  424d47:	mov    edi,DWORD PTR [ebp+0x10]
  424d4a:	xor    eax,eax
  424d4c:	xor    ecx,edx
  424d4e:	add    ecx,esi
  424d50:	add    edi,0xfabdbeda
  424d56:	adc    eax,0xffffffff
  424d59:	xor    eax,0x0
  424d5c:	mov    DWORD PTR [ebp-0xc],eax
  424d5f:	push   ebx
  424d60:	xor    ebx,ebx
  424d62:	xor    edi,0x8a29a13b
  424d68:	mov    eax,ecx
  424d6a:	add    eax,0xfabdbeda
  424d6f:	adc    ebx,0xffffffff
  424d72:	xor    eax,0x8a29a13b
  424d77:	xor    ebx,0x0
  424d7a:	cmp    eax,edi
  424d7c:	jne    0x424d95
  424d82:	cmp    ebx,DWORD PTR [ebp-0xc]
  424d85:	je     0x424dfd
  424d8b:	jmp    0x424d95
  424d90:	mov    esi,0x3272ef
  424d95:	mov    eax,DWORD PTR [ebp-0x4]
  424d98:	mov    edi,DWORD PTR [ebp-0x8]
  424d9b:	xor    edi,edx
  424d9d:	add    edi,esi
  424d9f:	mov    esi,DWORD PTR [ebp+0x8]
  424da2:	imul   edi,ecx
  424da5:	mov    ebx,DWORD PTR [ebp+0xc]
  424da8:	xor    eax,edx
  424daa:	add    eax,ecx
  424dac:	mov    al,BYTE PTR [ebx+eax*1+0x3272ef]
  424db3:	mov    BYTE PTR [edi+esi*1],al
  424db6:	mov    eax,DWORD PTR [ebp-0x8]
  424db9:	mov    esi,DWORD PTR [ebp+0x10]
  424dbc:	xor    eax,edx
  424dbe:	xor    ebx,ebx
  424dc0:	add    esi,0xfabdbeda
  424dc6:	adc    ebx,0xffffffff
  424dc9:	lea    ecx,[ecx+eax*1+0x3272ef]
  424dd0:	xor    edi,edi
  424dd2:	xor    esi,0x8a29a13b
  424dd8:	xor    ebx,0x0
  424ddb:	mov    eax,ecx
  424ddd:	add    eax,0xfabdbeda
  424de2:	adc    edi,0xffffffff
  424de5:	xor    eax,0x8a29a13b
  424dea:	xor    edi,0x0
  424ded:	cmp    eax,esi
  424def:	jne    0x424d90
  424df5:	cmp    edi,ebx
  424df7:	jne    0x424d90
  424dfd:	mov    eax,0xf89c85ba
  424e02:	pop    ebx
  424e03:	pop    edi
  424e04:	pop    esi
  424e05:	leave  
  424e06:	ret    0xc
  424e09:	push   ebp
  424e0a:	mov    ebp,esp
  424e0c:	push   ecx
  424e0d:	and    edx,DWORD PTR ds:0x42a15b
  424e13:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  424e1a:	mov    DWORD PTR ds:0x42a14b,0x1b
  424e24:	cmp    DWORD PTR ds:0x42a14b,0x0
  424e2b:	je     0x424e7b
  424e31:	cmp    DWORD PTR ds:0x42a14b,0xe
  424e38:	ja     0x424e7b
  424e3e:	jmp    0x424e53
  424e43:	push   0x42a14f
  424e48:	push   0x85a8
  424e4d:	call   DWORD PTR ds:0x42a2d3
  424e53:	cmp    DWORD PTR ds:0x42a14b,0xf
  424e5a:	jne    0x424e6b
  424e60:	mov    eax,ds:0x42a14b
  424e65:	dec    eax
  424e66:	mov    ds:0x42a14b,eax
  424e6b:	mov    eax,ds:0x42a14b
  424e70:	dec    eax
  424e71:	mov    ds:0x42a14b,eax
  424e76:	jmp    0x424e24
  424e7b:	mov    eax,DWORD PTR [ebp+0x8]
  424e7e:	and    DWORD PTR ds:0x42a19b,0x0
  424e88:	mov    edx,DWORD PTR ds:0x42a19b
  424e8e:	inc    edx
  424e8f:	mov    DWORD PTR ds:0x42a19b,edx
  424e95:	cmp    DWORD PTR ds:0x42a19b,0x19
  424e9c:	jbe    0x424eba
  424ea2:	jmp    0x424ead
  424ea7:	call   DWORD PTR ds:0x42a293
  424ead:	cmp    DWORD PTR ds:0x42a19b,0x13
  424eb4:	jb     0x424e88
  424eba:	movsx  eax,BYTE PTR [eax]
  424ebd:	mov    edx,0x3272ef
  424ec2:	sub    eax,edx
  424ec4:	mov    ecx,0x75108a8
  424ec9:	xor    eax,ecx
  424ecb:	cmp    eax,0xf89c85f6
  424ed0:	jne    0x424eff
  424ed6:	mov    eax,DWORD PTR [ebp+0x8]
  424ed9:	push   esi
  424eda:	mov    esi,DWORD PTR [ebp+0x8]
  424edd:	add    esi,DWORD PTR [eax+0x3c]
  424ee0:	mov    DWORD PTR [ebp+0x8],esi
  424ee3:	mov    eax,DWORD PTR [ebp-0x4]
  424ee6:	mov    esi,DWORD PTR [ebp+0x8]
  424ee9:	xor    eax,ecx
  424eeb:	add    eax,edx
  424eed:	cmp    DWORD PTR [esi+0x54],eax
  424ef0:	pop    esi
  424ef1:	je     0x424eff
  424ef7:	mov    eax,DWORD PTR [ebp+0x8]
  424efa:	jmp    0x424f06
  424eff:	mov    eax,DWORD PTR [ebp-0x4]
  424f02:	xor    eax,ecx
  424f04:	add    eax,edx
  424f06:	leave  
  424f07:	ret    0x4
  424f0a:	push   ebp
  424f0b:	mov    ebp,esp
  424f0d:	sub    esp,0xc
  424f10:	sub    edx,edx
  424f12:	push   esi
  424f13:	mov    DWORD PTR ds:0x42a14b,0x4414
  424f1d:	mov    esi,0xf89c85b9
  424f22:	and    DWORD PTR ds:0x42a147,0x2b27
  424f2c:	mov    DWORD PTR [ebp-0x8],esi
  424f2f:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  424f36:	adc    ecx,ecx
  424f38:	push   edi
  424f39:	mov    eax,eax
  424f3b:	neg    ecx
  424f3d:	mov    eax,DWORD PTR [ebp-0x4]
  424f40:	and    DWORD PTR ds:0x42a173,0x0
  424f4a:	jmp    0x424f5e
  424f4f:	xor    edi,edi
  424f51:	add    edi,DWORD PTR ds:0x42a173
  424f57:	inc    edi
  424f58:	mov    DWORD PTR ds:0x42a173,edi
  424f5e:	cmp    DWORD PTR ds:0x42a173,0x17
  424f65:	jae    0x424fb2
  424f6b:	cmp    DWORD PTR ds:0x42a173,0xb
  424f72:	jle    0x424fb2
  424f78:	jmp    0x424f93
  424f7d:	push   DWORD PTR [ebp-0x14]
  424f80:	push   DWORD PTR [ebp-0x24]
  424f83:	push   0x4290b2
  424f88:	push   0x400000
  424f8d:	call   DWORD PTR ds:0x42a297
  424f93:	cmp    DWORD PTR ds:0x42a173,0xa
  424f9a:	jne    0x424fad
  424fa0:	mov    edi,DWORD PTR ds:0x42a173
  424fa6:	inc    edi
  424fa7:	mov    DWORD PTR ds:0x42a173,edi
  424fad:	jmp    0x424f4f
  424fb2:	mov    edi,DWORD PTR [ebp-0x8]
  424fb5:	mov    ecx,0x75108a8
  424fba:	xor    eax,ecx
  424fbc:	adc    DWORD PTR ds:0x42a183,0x7f13
  424fc6:	xor    edi,ecx
  424fc8:	mov    edx,0x3272ef
  424fcd:	sub    DWORD PTR ds:0x42a183,0x42a13f
  424fd7:	add    edi,edx
  424fd9:	add    eax,edx
  424fdb:	imul   eax,edi
  424fde:	not    edi
  424fe0:	mov    edi,DWORD PTR [ebp+0xc]
  424fe3:	mov    DWORD PTR ds:0x42a163,0x324
  424fed:	cmp    edi,eax
  424fef:	je     0x42504b
  424ff5:	and    DWORD PTR ds:0x42a177,edx
  424ffb:	mov    DWORD PTR [ebp-0xc],esi
  424ffe:	mov    eax,DWORD PTR [ebp-0xc]
  425001:	inc    esi
  425002:	mov    esi,DWORD PTR [ebp+0xc]
  425005:	xor    eax,ecx
  425007:	lea    eax,[eax*8+0x19397f0]
  42500e:	mov    eax,DWORD PTR [esi+eax*1]
  425011:	mov    DWORD PTR [ebp+0xc],eax
  425014:	mov    eax,DWORD PTR [ebp-0x4]
  425017:	mov    esi,DWORD PTR [ebp-0x8]
  42501a:	xor    eax,ecx
  42501c:	xor    esi,ecx
  42501e:	add    esi,edx
  425020:	add    eax,edx
  425022:	imul   eax,esi
  425025:	mov    esi,DWORD PTR [ebp+0xc]
  425028:	cmp    esi,eax
  42502a:	je     0x42504b
  425030:	mov    eax,DWORD PTR [ebp-0x4]
  425033:	xor    eax,ecx
  425035:	mov    ecx,DWORD PTR [ebp+0xc]
  425038:	add    eax,edx
  42503a:	imul   eax,ecx
  42503d:	add    eax,DWORD PTR [ebp+0x8]
  425040:	mov    DWORD PTR [ebp+0xc],eax
  425043:	mov    eax,DWORD PTR [ebp+0xc]
  425046:	jmp    0x42505c
  42504b:	mov    eax,DWORD PTR [ebp-0x4]
  42504e:	mov    esi,DWORD PTR [ebp-0x8]
  425051:	xor    esi,ecx
  425053:	xor    eax,ecx
  425055:	add    esi,edx
  425057:	add    eax,edx
  425059:	imul   eax,esi
  42505c:	pop    edi
  42505d:	pop    esi
  42505e:	leave  
  42505f:	ret    0x8
	...
  425072:	add    BYTE PTR [eax],al
  425074:	mov    ch,0x45
  425076:	out    0x4d,al
  425078:	add    BYTE PTR [eax],al
  42507a:	add    BYTE PTR [eax],al
  42507c:	add    al,BYTE PTR [eax]
  42507e:	add    BYTE PTR [eax],al
  425080:	xor    BYTE PTR [eax],al
  425082:	add    BYTE PTR [eax],al
  425084:	nop
  425085:	push   eax
  425086:	add    al,BYTE PTR [eax]
  425088:	nop
  425089:	inc    esp
  42508a:	add    al,BYTE PTR [eax]
  42508c:	add    BYTE PTR [eax],al
  42508e:	add    BYTE PTR [eax],al
  425090:	push   edx
  425091:	push   ebx
  425092:	inc    esp
  425093:	push   ebx
  425094:	shl    BYTE PTR [ebp-0x75],1
  425097:	or     dl,ah
  425099:	mov    cs,WORD PTR [ebx]
  42509b:	dec    esi
  42509c:	mov    esi,0x7d133855
  4250a1:	mov    ebx,DWORD PTR [edi+0x1bd]
  4250a7:	add    BYTE PTR [esi+0x3a],al
  4250aa:	pop    esp
  4250ab:	push   edi
  4250ac:	imul   ebp,DWORD PTR [esi+0x64],0x2073776f
  4250b3:	inc    esp
  4250b4:	imul   esi,DWORD PTR [edx+0x5c],0x656c6946
  4250bb:	inc    ebp
  4250bc:	js     0x425123
  4250be:	arpl   WORD PTR [eax],ax
  4250c0:	mov    edx,DWORD PTR [ebp-0x14]
  4250c3:	sub    esp,0x108
  4250c9:	push   ebx
  4250ca:	mov    eax,ebx
  4250cc:	xchg   ecx,eax
  4250cd:	mov    eax,DWORD PTR [ebp+0x8]
  4250d0:	cmp    eax,0xf89c85b9
  4250d5:	jne    0x425597
  4250db:	mov    eax,DWORD PTR [ebp+0xc]
  4250de:	cmp    eax,0xf89c85ba
  4250e3:	jne    0x425597
  4250e9:	mov    eax,DWORD PTR [ebp+0x24]
  4250ec:	mov    DWORD PTR [ebp-0x4],eax
  4250ef:	mov    eax,DWORD PTR [ebp-0x4]
  4250f2:	mov    eax,DWORD PTR [eax+0x1d8]
  4250f8:	mov    eax,DWORD PTR [eax]
  4250fa:	mov    eax,DWORD PTR [eax]
  4250fc:	mov    DWORD PTR [ebp-0x8],eax
  4250ff:	mov    BYTE PTR [ebp-0x18],0x13
  425103:	mov    BYTE PTR [ebp-0x17],0x1e
  425107:	mov    BYTE PTR [ebp-0x16],0x11
  42510b:	mov    BYTE PTR [ebp-0x15],0x4f
  42510f:	mov    BYTE PTR [ebp-0x14],0x48
  425113:	mov    BYTE PTR [ebp-0x13],0x7a
  425117:	mov    BYTE PTR [ebp-0x20],0xd
  42511b:	mov    BYTE PTR [ebp-0x1f],0xf
  42511f:	mov    BYTE PTR [ebp-0x1e],0x1d
  425123:	mov    BYTE PTR [ebp-0x1d],0x8
  425127:	mov    BYTE PTR [ebp-0x1c],0x4f
  42512b:	mov    BYTE PTR [ebp-0x1b],0x48
  42512f:	mov    BYTE PTR [ebp-0x1a],0x7a
  425133:	mov    BYTE PTR [ebp-0x28],0xf
  425137:	mov    BYTE PTR [ebp-0x27],0x12
  42513b:	mov    BYTE PTR [ebp-0x26],0x16
  42513f:	mov    BYTE PTR [ebp-0x25],0x3
  425143:	mov    BYTE PTR [ebp-0x24],0x19
  425147:	push   esi
  425148:	mov    BYTE PTR [ebp-0x23],0xa
  42514c:	mov    BYTE PTR [ebp-0x22],0x11
  425150:	push   edi
  425151:	mov    BYTE PTR [ebp-0x21],0x7a
  425155:	xor    esi,esi
  425157:	mov    eax,0xff
  42515c:	lea    ecx,[ebp+esi*1-0x18]
  425160:	movzx  edx,BYTE PTR [ecx]
  425163:	xor    edx,0x7b
  425166:	add    edx,eax
  425168:	inc    esi
  425169:	mov    BYTE PTR [ecx],dl
  42516b:	cmp    esi,0x6
  42516e:	jb     0x42515c
  425170:	xor    esi,esi
  425172:	lea    ecx,[ebp+esi*1-0x20]
  425176:	movzx  edx,BYTE PTR [ecx]
  425179:	xor    edx,0x7b
  42517c:	add    edx,eax
  42517e:	inc    esi
  42517f:	mov    BYTE PTR [ecx],dl
  425181:	cmp    esi,0x7
  425184:	jb     0x425172
  425186:	xor    esi,esi
  425188:	lea    ecx,[ebp+esi*1-0x28]
  42518c:	movzx  edx,BYTE PTR [ecx]
  42518f:	xor    edx,0x7b
  425192:	add    edx,eax
  425194:	inc    esi
  425195:	mov    BYTE PTR [ecx],dl
  425197:	cmp    esi,0x8
  42519a:	jb     0x425188
  42519c:	lea    eax,[ebp-0x2c]
  42519f:	mov    DWORD PTR [ebp-0x8],eax
  4251a2:	mov    ecx,DWORD PTR [ebp-0x8]
  4251a5:	mov    eax,0x7113fccf
  4251aa:	mov    DWORD PTR [ecx],eax
  4251ac:	mov    ecx,DWORD PTR [ebp-0x2c]
  4251af:	mov    esi,0x4e31
  4251b4:	mov    ebx,0x3272ef
  4251b9:	cmp    ecx,eax
  4251bb:	jne    0x425286
  4251c1:	lea    eax,[esi+0x35]
  4251c4:	mov    WORD PTR [ebp-0x78],ax
  4251c8:	mov    eax,esi
  4251ca:	mov    WORD PTR [ebp-0x76],ax
  4251ce:	add    eax,0x4b
  4251d1:	mov    WORD PTR [ebp-0x74],ax
  4251d5:	lea    eax,[esi+0xe]
  4251d8:	mov    WORD PTR [ebp-0x72],ax
  4251dc:	add    eax,0x3f
  4251df:	mov    ecx,eax
  4251e1:	lea    eax,[esi-0xd]
  4251e4:	mov    WORD PTR [ebp-0x66],ax
  4251e8:	mov    eax,esi
  4251ea:	mov    WORD PTR [ebp-0x64],ax
  4251ee:	add    eax,0xfffffff4
  4251f1:	mov    WORD PTR [ebp-0x62],ax
  4251f5:	mov    eax,0x44a
  4251fa:	mov    WORD PTR [ebp-0x60],ax
  4251fe:	mov    eax,0x567b
  425203:	mov    WORD PTR [ebp-0x5e],ax
  425207:	mov    eax,0x611b
  42520c:	mov    WORD PTR [ebp-0x5c],ax
  425210:	lea    eax,[ebp-0xe0]
  425216:	push   eax
  425217:	mov    eax,DWORD PTR [ebp+0xc]
  42521a:	mov    edi,0x75108a8
  42521f:	xor    eax,edi
  425221:	add    eax,ebx
  425223:	push   eax
  425224:	mov    WORD PTR [ebp-0x70],cx
  425228:	lea    ecx,[esi+0xa]
  42522b:	mov    edx,ecx
  42522d:	lea    eax,[ebp-0x78]
  425230:	push   eax
  425231:	mov    eax,DWORD PTR [ebp-0x4]
  425234:	mov    eax,DWORD PTR [eax+0x198]
  42523a:	mov    WORD PTR [ebp-0x6e],dx
  42523e:	mov    edx,0x4f85
  425243:	mov    WORD PTR [ebp-0x6c],dx
  425247:	mov    DWORD PTR [ebp-0x6a],0x4e7e4e38
  42524e:	mov    DWORD PTR [ebp-0x5a],0x4e3bf1e9
  425255:	mov    DWORD PTR [ebp-0xe0],0x1
  42525f:	mov    DWORD PTR [ebp-0xdc],0x255
  425269:	push   DWORD PTR [eax]
  42526b:	mov    eax,DWORD PTR [ebp+0x10]
  42526e:	call   eax
  425270:	mov    DWORD PTR [ebp-0x8],eax
  425273:	mov    eax,DWORD PTR [ebp-0x8]
  425276:	test   eax,eax
  425278:	je     0x42528b
  42527a:	xor    DWORD PTR ds:0x76586876,0x87687666
  425284:	jmp    0x42528b
  425286:	mov    edi,0x75108a8
  42528b:	mov    eax,DWORD PTR [ebp-0x4]
  42528e:	mov    ecx,DWORD PTR [eax+0x18c]
  425294:	xor    eax,eax
  425296:	cmp    DWORD PTR [ecx],eax
  425298:	jne    0x42550a
  42529e:	mov    ecx,DWORD PTR [ebp-0x4]
  4252a1:	mov    ecx,DWORD PTR [ecx+0x17c]
  4252a7:	mov    DWORD PTR [ecx],eax
  4252a9:	mov    ecx,DWORD PTR [ebp-0x4]
  4252ac:	mov    ecx,DWORD PTR [ecx+0x180]
  4252b2:	mov    DWORD PTR [ecx],eax
  4252b4:	mov    eax,0x4e6c
  4252b9:	mov    WORD PTR [ebp-0x9c],ax
  4252c0:	mov    eax,esi
  4252c2:	mov    WORD PTR [ebp-0x9a],ax
  4252c9:	mov    eax,0x4e7c
  4252ce:	mov    WORD PTR [ebp-0x98],ax
  4252d5:	add    eax,0xffffffc0
  4252d8:	mov    WORD PTR [ebp-0x96],ax
  4252df:	mov    eax,0x4f81
  4252e4:	mov    WORD PTR [ebp-0x94],ax
  4252eb:	mov    eax,0x4e3d
  4252f0:	mov    WORD PTR [ebp-0x92],ax
  4252f7:	add    eax,0x41
  4252fa:	mov    WORD PTR [ebp-0x90],ax
  425301:	mov    eax,0x4e3b
  425306:	mov    WORD PTR [ebp-0x8e],ax
  42530d:	mov    eax,esi
  42530f:	mov    WORD PTR [ebp-0x8c],ax
  425316:	mov    eax,0x4e38
  42531b:	mov    WORD PTR [ebp-0x8a],ax
  425322:	mov    eax,0x99fc
  425327:	mov    WORD PTR [ebp-0x88],ax
  42532e:	mov    eax,0x8d6d
  425333:	mov    WORD PTR [ebp-0x86],ax
  42533a:	mov    eax,0xd66e
  42533f:	mov    WORD PTR [ebp-0x84],ax
  425346:	mov    eax,0xd78a
  42534b:	mov    WORD PTR [ebp-0x82],ax
  425352:	mov    eax,0x278b
  425357:	mov    WORD PTR [ebp-0x80],ax
  42535b:	mov    eax,0x478b
  425360:	mov    WORD PTR [ebp-0x7e],ax
  425364:	mov    eax,0x4e3a
  425369:	push   0x8
  42536b:	mov    WORD PTR [ebp-0x7c],ax
  42536f:	mov    DWORD PTR [ebp-0x10],0x316120f
  425376:	mov    DWORD PTR [ebp-0xc],0x7a110a19
  42537d:	lea    eax,[ebp-0x10]
  425380:	pop    ecx
  425381:	mov    dl,BYTE PTR [eax]
  425383:	xor    dl,0x7b
  425386:	dec    dl
  425388:	mov    BYTE PTR [eax],dl
  42538a:	inc    eax
  42538b:	dec    ecx
  42538c:	jne    0x425381
  42538e:	lea    eax,[ebp-0x10]
  425391:	mov    DWORD PTR [ebp-0xdc],eax
  425397:	lea    eax,[ebp-0xe0]
  42539d:	push   eax
  42539e:	mov    eax,DWORD PTR [ebp+0xc]
  4253a1:	xor    eax,edi
  4253a3:	add    eax,ebx
  4253a5:	push   eax
  4253a6:	mov    eax,DWORD PTR [ebp-0x4]
  4253a9:	add    eax,0x66
  4253ac:	push   eax
  4253ad:	mov    eax,DWORD PTR [ebp-0x4]
  4253b0:	mov    eax,DWORD PTR [eax+0x198]
  4253b6:	mov    DWORD PTR [ebp-0xe0],0x1
  4253c0:	push   DWORD PTR [eax]
  4253c2:	mov    eax,DWORD PTR [ebp+0x10]
  4253c5:	call   eax
  4253c7:	mov    ecx,DWORD PTR [ebp+0x8]
  4253ca:	xor    ecx,edi
  4253cc:	add    ecx,ebx
  4253ce:	mov    DWORD PTR [ebp-0x8],eax
  4253d1:	cmp    eax,ecx
  4253d3:	jne    0x4253ee
  4253d5:	mov    eax,ds:0x33730bc0
  4253da:	or     eax,0x22150bcf
  4253df:	mov    ds:0x33730bc0,eax
  4253e4:	add    eax,0x3372e92f
  4253e9:	mov    ds:0x33730bc0,eax
  4253ee:	mov    ecx,0x4e69
  4253f3:	mov    eax,ecx
  4253f5:	mov    WORD PTR [ebp-0x40],ax
  4253f9:	add    eax,0xfffffff9
  4253fc:	mov    edx,eax
  4253fe:	mov    WORD PTR [ebp-0x3e],dx
  425402:	mov    edx,0x4f9a
  425407:	mov    WORD PTR [ebp-0x3c],dx
  42540b:	add    edx,0xffffffe8
  42540e:	mov    WORD PTR [ebp-0x3a],dx
  425412:	mov    edx,0x4f80
  425417:	mov    WORD PTR [ebp-0x38],dx
  42541b:	add    edx,0xf
  42541e:	mov    WORD PTR [ebp-0x36],dx
  425422:	mov    edx,0x4fb6
  425427:	mov    WORD PTR [ebp-0x34],dx
  42542b:	mov    WORD PTR [ebp-0x32],cx
  42542f:	mov    ecx,esi
  425431:	mov    WORD PTR [ebp-0x30],cx
  425435:	lea    ecx,[edx-0x2d]
  425438:	mov    edx,ecx
  42543a:	mov    WORD PTR [ebp-0x54],dx
  42543e:	mov    edx,eax
  425440:	mov    WORD PTR [ebp-0x52],dx
  425444:	mov    edx,0x4e7a
  425449:	mov    WORD PTR [ebp-0x50],dx
  42544d:	mov    WORD PTR [ebp-0x4e],ax
  425451:	lea    eax,[edx-0x1a]
  425454:	mov    WORD PTR [ebp-0x4c],ax
  425458:	add    eax,0xf
  42545b:	mov    WORD PTR [ebp-0x4a],ax
  42545f:	lea    eax,[ecx+0xd]
  425462:	mov    WORD PTR [ebp-0x48],ax
  425466:	mov    WORD PTR [ebp-0x46],cx
  42546a:	mov    WORD PTR [ebp-0x44],si
  42546e:	mov    eax,DWORD PTR [ebp+0x8]
  425471:	movzx  ecx,WORD PTR [ebp-0x54]
  425475:	xor    eax,edi
  425477:	add    eax,ebx
  425479:	xor    eax,ecx
  42547b:	mov    WORD PTR [ebp-0x54],ax
  42547f:	mov    eax,DWORD PTR [ebp+0x8]
  425482:	movzx  ecx,WORD PTR [ebp-0x40]
  425486:	xor    eax,edi
  425488:	add    eax,ebx
  42548a:	xor    eax,ecx
  42548c:	mov    WORD PTR [ebp-0x40],ax
  425490:	xor    eax,eax
  425492:	mov    WORD PTR [ebp-0xf4],ax
  425499:	mov    WORD PTR [ebp-0x108],ax
  4254a0:	mov    edi,DWORD PTR [ebp+0x24]
  4254a3:	lea    eax,[ebp-0xf4]
  4254a9:	lea    edx,[ebp-0x54]
  4254ac:	mov    DWORD PTR [ebp-0xe0],0x2
  4254b6:	mov    DWORD PTR [ebp-0xdc],eax
  4254bc:	call   0x427ef3
  4254c1:	mov    DWORD PTR [ebp-0xd8],eax
  4254c7:	lea    eax,[ebp-0xe0]
  4254cd:	push   eax
  4254ce:	mov    eax,DWORD PTR [ebp+0xc]
  4254d1:	xor    eax,0x75108a8
  4254d6:	add    eax,ebx
  4254d8:	push   eax
  4254d9:	lea    eax,[ebp-0x9c]
  4254df:	push   eax
  4254e0:	push   DWORD PTR [ebp-0x8]
  4254e3:	mov    eax,DWORD PTR [ebp+0x10]
  4254e6:	call   eax
  4254e8:	mov    edi,DWORD PTR [ebp+0x24]
  4254eb:	lea    eax,[ebp-0x108]
  4254f1:	lea    edx,[ebp-0x40]
  4254f4:	mov    DWORD PTR [ebp-0xdc],eax
  4254fa:	call   0x427ef3
  4254ff:	mov    DWORD PTR [ebp-0xd8],eax
  425505:	mov    edi,0x75108a8
  42550a:	mov    eax,DWORD PTR [ebp+0x14]
  42550d:	push   DWORD PTR [ebp-0x4]
  425510:	push   DWORD PTR [ebp+0x20]
  425513:	push   DWORD PTR [ebp+0x1c]
  425516:	push   DWORD PTR [ebp+0x18]
  425519:	push   DWORD PTR [ebp+0x10]
  42551c:	push   DWORD PTR [ebp+0x8]
  42551f:	push   DWORD PTR [ebp+0xc]
  425522:	call   0x426794
  425527:	test   eax,eax
  425529:	je     0x42556d
  42552b:	add    DWORD PTR [ebp-0x4],eax
  42552e:	push   DWORD PTR [ebp-0x4]
  425531:	lea    esi,[ebp+0x4]
  425534:	call   0x425985
  425539:	mov    eax,DWORD PTR [ebp-0x4]
  42553c:	mov    eax,DWORD PTR [eax+0x1c8]
  425542:	mov    eax,DWORD PTR [eax]
  425544:	xor    eax,edi
  425546:	add    eax,ebx
  425548:	mov    eax,DWORD PTR [ebp-0x4]
  42554b:	jne    0x425563
  42554d:	mov    ecx,DWORD PTR [ebp-0x4]
  425550:	mov    ecx,DWORD PTR [ecx+0x1cc]
  425556:	push   DWORD PTR [ecx]
  425558:	mov    eax,DWORD PTR [eax+0x1e0]
  42555e:	call   DWORD PTR [eax+0x28]
  425561:	jmp    0x42556d
  425563:	mov    eax,DWORD PTR [eax+0x17c]
  425569:	mov    eax,DWORD PTR [eax]
  42556b:	add    DWORD PTR [esi],eax
  42556d:	mov    eax,DWORD PTR [ebp-0x4]
  425570:	mov    eax,DWORD PTR [eax+0x1dc]
  425576:	dec    DWORD PTR [eax]
  425578:	mov    ecx,DWORD PTR [ebp-0x4]
  42557b:	mov    ecx,DWORD PTR [ecx+0x1d8]
  425581:	mov    eax,DWORD PTR [eax]
  425583:	lea    eax,[ecx+eax*4]
  425586:	mov    ecx,DWORD PTR [ebp-0x4]
  425589:	mov    ecx,DWORD PTR [ecx+0x17c]
  42558f:	mov    eax,DWORD PTR [eax]
  425591:	mov    ecx,DWORD PTR [ecx]
  425593:	add    DWORD PTR [eax],ecx
  425595:	pop    edi
  425596:	pop    esi
  425597:	pop    ebx
  425598:	leave  
  425599:	ret    0x20
  42559c:	push   edi
  42559d:	push   esi
  42559e:	push   ebx
  42559f:	push   ebp
  4255a0:	mov    ebp,esp
  4255a2:	mov    eax,DWORD PTR [ebp+0x24]
  4255a5:	add    DWORD PTR [ebp+0x28],eax
  4255a8:	push   eax
  4255a9:	cld    
  4255aa:	mov    esi,DWORD PTR [ebp+0x18]
  4255ad:	add    DWORD PTR [ebp+0x1c],esi
  4255b0:	push   esi
  4255b1:	mov    esi,DWORD PTR [ebp+0x14]
  4255b4:	lods   eax,DWORD PTR ds:[esi]
  4255b5:	xchg   edx,eax
  4255b6:	push   edx
  4255b7:	mov    cl,BYTE PTR [esi-0x2]
  4255ba:	or     eax,0xffffffff
  4255bd:	shl    eax,cl
  4255bf:	not    eax
  4255c1:	push   eax
  4255c2:	mov    cl,dh
  4255c4:	or     eax,0xffffffff
  4255c7:	shl    eax,cl
  4255c9:	not    eax
  4255cb:	push   eax
  4255cc:	add    cl,dl
  4255ce:	mov    edi,esi
  4255d0:	sub    esp,0xc
  4255d3:	sub    eax,eax
  4255d5:	inc    eax
  4255d6:	push   eax
  4255d7:	push   eax
  4255d8:	push   eax
  4255d9:	push   eax
  4255da:	push   eax
  4255db:	push   edi
  4255dc:	sub    esi,esi
  4255de:	push   esi
  4255df:	or     ebx,0xffffffff
  4255e2:	mov    eax,0x300
  4255e7:	shl    eax,cl
  4255e9:	lea    ecx,[eax+0x736]
  4255ef:	mov    eax,0x4000400
  4255f4:	shr    ecx,1
  4255f6:	rep stos DWORD PTR es:[edi],eax
  4255f8:	push   0x5
  4255fa:	pop    ecx
  4255fb:	call   0x4258e6
  425600:	loop   0x4255fb
  425602:	lea    esi,[esi]
  425604:	lea    edi,[edi]
  425606:	mov    edi,DWORD PTR [ebp-0x4]
  425609:	mov    eax,DWORD PTR [ebp-0x10]
  42560c:	sub    edi,DWORD PTR [ebp+0x24]
  42560f:	and    eax,edi
  425611:	mov    DWORD PTR [ebp-0x18],eax
  425614:	mov    al,0x0
  425616:	call   0x4258fe
  42561b:	jne    0x4256b6
  425621:	mov    cl,BYTE PTR [ebp-0xc]
  425624:	and    edi,DWORD PTR [ebp-0x14]
  425627:	shl    edi,cl
  425629:	sub    cl,0x8
  42562c:	neg    cl
  42562e:	shr    esi,cl
  425630:	pop    eax
  425631:	add    edi,esi
  425633:	pop    esi
  425634:	lea    edi,[edi+edi*2]
  425637:	shl    edi,0x8
  42563a:	cmp    al,0x7
  42563c:	pop    edx
  42563d:	lea    ecx,[esi+edi*2+0xe6c]
  425644:	push   ecx
  425645:	push   esi
  425646:	mov    esi,0x100
  42564b:	push   eax
  42564c:	mov    al,0x1
  42564e:	jb     0x425684
  425650:	mov    edi,DWORD PTR [ebp-0x4]
  425653:	sub    edi,DWORD PTR [ebp-0x24]
  425656:	movzx  edi,BYTE PTR [edi]
  425659:	mov    ebp,DWORD PTR [ebp-0x34]
  42565c:	shl    edi,1
  42565e:	mov    ecx,esi
  425660:	and    esi,edi
  425662:	add    ecx,esi
  425664:	lea    ebp,[ebp+ecx*2+0x0]
  425668:	call   0x42591d
  42566d:	mov    ecx,eax
  42566f:	shr    esi,0x8
  425672:	and    ecx,0x1
  425675:	cmp    esi,ecx
  425677:	mov    esi,0x100
  42567c:	jne    0x42568c
  42567e:	cmp    eax,esi
  425680:	jb     0x425659
  425682:	jmp    0x425698
  425684:	mov    ebp,DWORD PTR [ebp-0x34]
  425687:	call   0x42591d
  42568c:	inc    eax
  42568d:	inc    esi
  42568e:	sub    eax,0x1
  425691:	sub    esi,0x1
  425694:	cmp    eax,esi
  425696:	jb     0x425684
  425698:	pop    edx
  425699:	inc    edx
  42569a:	cmp    edx,0x5
  42569d:	dec    edx
  42569e:	mov    ecx,edx
  4256a0:	jb     0x4256b1
  4256a2:	inc    edx
  4256a3:	cmp    edx,0xb
  4256a6:	dec    edx
  4256a7:	mov    cl,0x4
  4256a9:	dec    cl
  4256ab:	jb     0x4256b1
  4256ad:	mov    cl,0x7
  4256af:	dec    cl
  4256b1:	sub    edx,ecx
  4256b3:	push   edx
  4256b4:	jmp    0x425705
  4256b6:	mov    al,0xc1
  4256b8:	dec    al
  4256ba:	call   0x42590e
  4256bf:	jne    0x4256d5
  4256c1:	pop    eax
  4256c2:	pop    edi
  4256c3:	pop    edx
  4256c4:	pop    ecx
  4256c5:	pop    edx
  4256c6:	pop    ecx
  4256c7:	push   DWORD PTR [esp]
  4256ca:	push   ecx
  4256cb:	push   edx
  4256cc:	mov    edx,0x664
  4256d1:	mov    cl,0x0
  4256d3:	jmp    0x425748
  4256d5:	mov    al,0xcd
  4256d7:	dec    al
  4256d9:	call   0x42590e
  4256de:	jne    0x42570e
  4256e0:	mov    al,0xf1
  4256e2:	dec    al
  4256e4:	call   0x4258fe
  4256e9:	jne    0x42573e
  4256eb:	pop    eax
  4256ec:	cmp    al,0x7
  4256ee:	mov    al,0x9
  4256f0:	jb     0x4256f4
  4256f2:	mov    al,0xb
  4256f4:	push   eax
  4256f5:	mov    esi,DWORD PTR [ebp-0x4]
  4256f8:	sub    esi,DWORD PTR [ebp-0x24]
  4256fb:	cmp    esi,DWORD PTR [ebp+0x24]
  4256fe:	jb     0x4258d5
  425704:	lods   al,BYTE PTR ds:[esi]
  425705:	mov    edi,DWORD PTR [ebp-0x4]
  425708:	stos   BYTE PTR es:[edi],al
  425709:	jmp    0x42589c
  42570e:	mov    al,0xd8
  425710:	call   0x42590e
  425715:	mov    esi,DWORD PTR [ebp-0x28]
  425718:	je     0x425735
  42571a:	mov    al,0xe4
  42571c:	call   0x42590e
  425721:	mov    esi,DWORD PTR [ebp-0x2c]
  425724:	je     0x42572f
  425726:	mov    esi,DWORD PTR [ebp-0x30]
  425729:	mov    ecx,DWORD PTR [ebp-0x2c]
  42572c:	mov    DWORD PTR [ebp-0x30],ecx
  42572f:	mov    ecx,DWORD PTR [ebp-0x28]
  425732:	mov    DWORD PTR [ebp-0x2c],ecx
  425735:	mov    ecx,DWORD PTR [ebp-0x24]
  425738:	mov    DWORD PTR [ebp-0x28],ecx
  42573b:	mov    DWORD PTR [ebp-0x24],esi
  42573e:	pop    eax
  42573f:	pop    edi
  425740:	pop    ecx
  425741:	mov    edx,0xa68
  425746:	mov    cl,0x8
  425748:	add    edx,edi
  42574a:	push   edx
  42574b:	push   edi
  42574c:	cmp    al,0x7
  42574e:	mov    al,cl
  425750:	jb     0x425754
  425752:	add    al,0x3
  425754:	push   eax
  425755:	mov    ebp,DWORD PTR [ebp-0x34]
  425758:	call   0x42591b
  42575d:	jne    0x425773
  42575f:	mov    eax,DWORD PTR [ebp-0x18]
  425762:	mov    edi,DWORD PTR [ebp-0x34]
  425765:	shl    eax,0x3
  425768:	sub    ecx,ecx
  42576a:	push   0x8
  42576c:	pop    esi
  42576d:	lea    edi,[edi+eax*2+0x4]
  425771:	jmp    0x4257a8
  425773:	mov    ebp,DWORD PTR [ebp-0x34]
  425776:	add    ebp,0x2
  425779:	call   0x42591b
  42577e:	jne    0x425798
  425780:	mov    eax,DWORD PTR [ebp-0x18]
  425783:	mov    edi,DWORD PTR [ebp-0x34]
  425786:	shl    eax,0x3
  425789:	push   0x8
  42578b:	pop    ecx
  42578c:	push   0x8
  42578e:	pop    esi
  42578f:	lea    edi,[edi+eax*2+0x104]
  425796:	jmp    0x4257a8
  425798:	mov    edi,0x204
  42579d:	add    edi,DWORD PTR [ebp-0x34]
  4257a0:	push   0x10
  4257a2:	pop    ecx
  4257a3:	mov    esi,0x100
  4257a8:	mov    DWORD PTR [ebp-0x1c],ecx
  4257ab:	sub    eax,eax
  4257ad:	inc    eax
  4257ae:	mov    ebp,edi
  4257b0:	call   0x42591d
  4257b5:	mov    ecx,eax
  4257b7:	sub    ecx,esi
  4257b9:	jb     0x4257ae
  4257bb:	add    DWORD PTR [ebp-0x1c],ecx
  4257be:	cmp    DWORD PTR [ebp-0x3c],0x4
  4257c2:	jae    0x425878
  4257c8:	add    DWORD PTR [ebp-0x3c],0x7
  4257cc:	mov    ecx,DWORD PTR [ebp-0x1c]
  4257cf:	cmp    ecx,0x4
  4257d2:	jb     0x4257d7
  4257d4:	push   0x3
  4257d6:	pop    ecx
  4257d7:	mov    edi,DWORD PTR [ebp-0x38]
  4257da:	shl    ecx,0x6
  4257dd:	sub    eax,eax
  4257df:	inc    eax
  4257e0:	push   0x40
  4257e2:	pop    esi
  4257e3:	lea    edi,[edi+ecx*2+0x360]
  4257ea:	mov    ebp,edi
  4257ec:	call   0x42591d
  4257f1:	mov    ecx,eax
  4257f3:	sub    ecx,esi
  4257f5:	jb     0x4257ea
  4257f7:	mov    DWORD PTR [ebp-0x18],ecx
  4257fa:	mov    DWORD PTR [ebp-0x24],ecx
  4257fd:	cmp    ecx,0x4
  425800:	jb     0x425875
  425802:	mov    esi,ecx
  425804:	and    DWORD PTR [ebp-0x24],0x1
  425808:	shr    esi,1
  42580a:	or     DWORD PTR [ebp-0x24],0x2
  42580e:	dec    esi
  42580f:	cmp    ecx,0xe
  425812:	jae    0x42582d
  425814:	mov    eax,0x2af
  425819:	sub    eax,ecx
  42581b:	mov    ecx,esi
  42581d:	shl    BYTE PTR [ebp-0x24],cl
  425820:	add    eax,DWORD PTR [ebp-0x24]
  425823:	shl    eax,1
  425825:	add    eax,DWORD PTR [ebp-0x38]
  425828:	mov    DWORD PTR [ebp-0x34],eax
  42582b:	jmp    0x42585a
  42582d:	sub    esi,0x4
  425830:	call   0x4258da
  425835:	shr    ebx,1
  425837:	shl    DWORD PTR [ebp-0x24],1
  42583a:	cmp    DWORD PTR [ebp-0x20],ebx
  42583d:	jb     0x425845
  42583f:	inc    DWORD PTR [ebp-0x24]
  425842:	sub    DWORD PTR [ebp-0x20],ebx
  425845:	dec    esi
  425846:	jne    0x425830
  425848:	mov    eax,0x644
  42584d:	add    eax,DWORD PTR [ebp-0x38]
  425850:	mov    DWORD PTR [ebp-0x34],eax
  425853:	shl    DWORD PTR [ebp-0x24],0x4
  425857:	push   0x4
  425859:	pop    esi
  42585a:	sub    edi,edi
  42585c:	inc    edi
  42585d:	mov    eax,edi
  42585f:	mov    ebp,DWORD PTR [ebp-0x34]
  425862:	call   0x42591d
  425867:	test   al,0x1
  425869:	je     0x42586e
  42586b:	or     DWORD PTR [ebp-0x24],edi
  42586e:	shl    edi,1
  425870:	dec    esi
  425871:	jne    0x42585f
  425873:	jmp    0x425875
  425875:	inc    DWORD PTR [ebp-0x24]
  425878:	mov    ecx,DWORD PTR [ebp-0x1c]
  42587b:	add    ecx,0x2
  42587e:	mov    edi,DWORD PTR [ebp-0x4]
  425881:	mov    eax,edi
  425883:	sub    eax,DWORD PTR [ebp+0x24]
  425886:	cmp    DWORD PTR [ebp-0x24],eax
  425889:	ja     0x4258d5
  42588b:	mov    esi,edi
  42588d:	sub    esi,DWORD PTR [ebp-0x24]
  425890:	mov    edx,DWORD PTR [ebp+0x28]
  425893:	lods   al,BYTE PTR ds:[esi]
  425894:	stos   BYTE PTR es:[edi],al
  425895:	cmp    edi,edx
  425897:	jae    0x42589c
  425899:	dec    ecx
  42589a:	jne    0x425893
  42589c:	mov    DWORD PTR [ebp-0x4],edi
  42589f:	movzx  esi,al
  4258a2:	cmp    edi,DWORD PTR [ebp+0x28]
  4258a5:	jb     0x425606
  4258ab:	call   0x4258da
  4258b0:	sub    eax,eax
  4258b2:	lea    ebp,[esp+0x3c]
  4258b6:	mov    edx,DWORD PTR [ebp+0x20]
  4258b9:	mov    esi,DWORD PTR [ebp-0x8]
  4258bc:	sub    esi,DWORD PTR [ebp+0x18]
  4258bf:	mov    DWORD PTR [ebp-0x4d],ecx
  4258c2:	fidiv  DWORD PTR ds:0x31787ab3
  4258c8:	jp     0x4258df
  4258ca:	stos   DWORD PTR es:[edi],eax
  4258cb:	ins    DWORD PTR es:[edi],dx
  4258cc:	lods   al,BYTE PTR ds:[esi]
  4258cd:	repnz inc BYTE PTR [edx]
  4258d0:	nop
  4258d1:	cmc    
  4258d2:	test   esi,edi
  4258d4:	out    0x31,al
  4258d6:	mov    BYTE PTR [esi+0x748be834],al
  4258dc:	test   DWORD PTR [ebp-0x76b1767b],eax
  4258e2:	xchg   esp,eax
  4258e3:	mov    WORD PTR [eiz*4+0x685ab3de],ss
  4258ea:	jno    0x425946
  4258ec:	cmc    
  4258ed:	push   edx
  4258ee:	sbb    BYTE PTR [ebx+0x88c089a],dh
  4258f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4258f5:	aaa    
  4258f6:	stos   DWORD PTR es:[edi],eax
  4258f7:	call   0x94fe:0x685aab08
  4258fe:	mov    bl,0xba
  425900:	cwde   
  425901:	rcr    DWORD PTR [edi-0x78],0x8c
  425905:	or     al,0x95
  425907:	xchg   ecx,eax
  425908:	call   0xc19d:0x348c9128
  42590f:	pop    edi
  425910:	mov    BYTE PTR [ecx+0x3ab3989a],dl
  425916:	test   al,0xbb
  425918:	ss call 0x9a36:0xbb883185
  425920:	test   DWORD PTR [ebx-0x7a7a7a8c],ecx
  425926:	mov    DWORD PTR [edx-0xb],edx
  425929:	mov    bl,0xb6
  42592b:	adc    eax,0x15168c65
  425930:	add    eax,0x15b671a5
  425935:	not    BYTE PTR [edx-0x9]
  425938:	scas   eax,DWORD PTR es:[edi]
  425939:	leave  
  42593a:	test   BYTE PTR [esi+0x148c6515],dl
  425940:	or     BYTE PTR [eax-0x74dfdbac],cl
  425946:	retf   
  425947:	movzx  edx,WORD PTR [ebp+0x0]
  42594b:	shr    ecx,0xb
  42594e:	imul   ecx,edx
  425951:	cmp    DWORD PTR [esp+0x20],ecx
  425955:	jae    0x42596e
  425957:	mov    ebx,ecx
  425959:	mov    ecx,0x800
  42595e:	sub    ecx,edx
  425960:	shr    ecx,0x5
  425963:	add    WORD PTR [ebp+0x0],cx
  425967:	add    eax,eax
  425969:	lea    ebp,[esp+0x40]
  42596d:	ret    
  42596e:	shr    edx,0x5
  425971:	sub    DWORD PTR [esp+0x20],ecx
  425975:	sub    ebx,ecx
  425977:	sub    WORD PTR [ebp+0x0],dx
  42597b:	add    eax,eax
  42597d:	add    eax,0x1
  425980:	lea    ebp,[esp+0x40]
  425984:	ret    
  425985:	push   ebp
  425986:	mov    ebp,esp
  425988:	sub    esp,0x12c
  42598e:	push   ebx
  42598f:	push   esi
  425990:	push   edi
  425991:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  425998:	mov    DWORD PTR [ebp-0x18],0xf89c85ba
  42599f:	mov    eax,DWORD PTR [ebp+0x8]
  4259a2:	mov    DWORD PTR [ebp+0x8],eax
  4259a5:	mov    ecx,DWORD PTR [ebp-0x10]
  4259a8:	mov    ebx,0x75108a8
  4259ad:	xor    ecx,ebx
  4259af:	mov    eax,0x3272ef
  4259b4:	add    ecx,eax
  4259b6:	mov    DWORD PTR [ebp-0x24],ecx
  4259b9:	mov    ecx,DWORD PTR [ebp-0x10]
  4259bc:	xor    ecx,ebx
  4259be:	add    ecx,eax
  4259c0:	mov    DWORD PTR [ebp-0x40],ecx
  4259c3:	mov    ecx,DWORD PTR [ebp-0x10]
  4259c6:	xor    ecx,ebx
  4259c8:	add    ecx,eax
  4259ca:	mov    DWORD PTR [ebp-0x3c],ecx
  4259cd:	mov    ecx,DWORD PTR [ebp-0x10]
  4259d0:	xor    ecx,ebx
  4259d2:	add    ecx,eax
  4259d4:	mov    DWORD PTR [ebp-0xd8],ecx
  4259da:	mov    DWORD PTR [ebp-0x50],0xf89f05b9
  4259e1:	mov    DWORD PTR [ebp-0x3c],0xf89cb5b9
  4259e8:	mov    DWORD PTR [ebp-0x54],0xf89c85bd
  4259ef:	push   0x25
  4259f1:	pop    ecx
  4259f2:	mov    DWORD PTR [ebp-0x30],ecx
  4259f5:	mov    DWORD PTR [ebp-0x30],ecx
  4259f8:	push   0x65
  4259fa:	pop    ecx
  4259fb:	mov    DWORD PTR [ebp-0x30],ecx
  4259fe:	mov    DWORD PTR [ebp-0x30],ecx
  425a01:	mov    DWORD PTR [ebp-0x30],0x4d
  425a08:	mov    DWORD PTR [ebp-0x30],0x43
  425a0f:	mov    ecx,DWORD PTR [ebp-0x10]
  425a12:	xor    ecx,ebx
  425a14:	add    ecx,eax
  425a16:	mov    DWORD PTR [ebp-0x30],ecx
  425a19:	mov    ecx,DWORD PTR [ebp-0x10]
  425a1c:	xor    ecx,ebx
  425a1e:	add    ecx,eax
  425a20:	mov    DWORD PTR [ebp-0x30],ecx
  425a23:	mov    DWORD PTR [ebp-0x28],0x258
  425a2a:	mov    DWORD PTR [ebp-0x34],0x36
  425a31:	mov    DWORD PTR [ebp-0x14],0x7a
  425a38:	lea    edi,[ebp-0x10c]
  425a3e:	lea    esi,[ebp-0x12c]
  425a44:	call   0x426703
  425a49:	dec    DWORD PTR [ebp-0x14]
  425a4c:	jne    0x425a38
  425a4e:	dec    DWORD PTR [ebp-0x34]
  425a51:	jne    0x425a31
  425a53:	dec    DWORD PTR [ebp-0x28]
  425a56:	jne    0x425a2a
  425a58:	mov    DWORD PTR [ebp-0x28],0x400e
  425a5f:	mov    eax,DWORD PTR [ebp-0x10]
  425a62:	xor    eax,ebx
  425a64:	mov    esi,0x3272ef
  425a69:	add    eax,esi
  425a6b:	mov    DWORD PTR [ebp-0x1c],eax
  425a6e:	mov    eax,DWORD PTR [ebp-0x10]
  425a71:	and    DWORD PTR [ebp-0x94],0x0
  425a78:	xor    eax,ebx
  425a7a:	add    eax,esi
  425a7c:	mov    DWORD PTR [ebp-0x38],eax
  425a7f:	mov    eax,fs:0x18
  425a85:	mov    DWORD PTR [ebp-0x94],eax
  425a8b:	mov    eax,DWORD PTR [eax+0x30]
  425a8e:	mov    DWORD PTR [ebp-0xcc],eax
  425a94:	mov    eax,DWORD PTR [eax+0xc]
  425a97:	mov    DWORD PTR [ebp-0xc0],eax
  425a9d:	mov    eax,DWORD PTR [ebp+0x8]
  425aa0:	lea    ecx,[ebp-0x94]
  425aa6:	mov    DWORD PTR [eax+0x1a0],ecx
  425aac:	mov    eax,DWORD PTR [ebp+0x8]
  425aaf:	lea    ecx,[ebp-0xcc]
  425ab5:	mov    DWORD PTR [eax+0x1a4],ecx
  425abb:	mov    eax,DWORD PTR [ebp+0x8]
  425abe:	push   DWORD PTR [ebp+0x8]
  425ac1:	lea    ecx,[ebp-0xc0]
  425ac7:	mov    DWORD PTR [eax+0x1a8],ecx
  425acd:	call   0x427ec4
  425ad2:	mov    ecx,DWORD PTR [ebp-0x10]
  425ad5:	xor    ecx,ebx
  425ad7:	add    ecx,esi
  425ad9:	cmp    ecx,eax
  425adb:	je     0x425e5e
  425ae1:	mov    eax,DWORD PTR [ebp+0x8]
  425ae4:	mov    eax,DWORD PTR [eax+0x194]
  425aea:	mov    ecx,DWORD PTR [eax]
  425aec:	mov    eax,DWORD PTR [ebp+0x8]
  425aef:	mov    eax,DWORD PTR [eax+0x194]
  425af5:	mov    eax,DWORD PTR [eax]
  425af7:	add    eax,DWORD PTR [ecx+0x3c]
  425afa:	mov    ecx,DWORD PTR [ebp+0x8]
  425afd:	mov    ecx,DWORD PTR [ecx+0x1e0]
  425b03:	lea    edx,[ebp-0xec]
  425b09:	push   edx
  425b0a:	mov    edx,DWORD PTR [ebp+0x8]
  425b0d:	mov    edx,DWORD PTR [edx+0x18c]
  425b13:	mov    edx,DWORD PTR [edx]
  425b15:	add    edx,DWORD PTR [eax+0x88]
  425b1b:	push   0x4
  425b1d:	push   DWORD PTR [eax+0x8c]
  425b23:	push   edx
  425b24:	call   DWORD PTR [ecx+0x1c]
  425b27:	push   DWORD PTR [ebp+0x8]
  425b2a:	xor    eax,eax
  425b2c:	mov    DWORD PTR [ebp-0xa8],0x123f0f31
  425b36:	mov    DWORD PTR [ebp-0xa4],0xb360819
  425b40:	mov    DWORD PTR [ebp-0xa0],0x39081d03
  425b4a:	mov    BYTE PTR [ebp-0x9c],0x7a
  425b51:	lea    edi,[ebp-0x9b]
  425b57:	stos   DWORD PTR es:[edi],eax
  425b58:	stos   WORD PTR es:[edi],ax
  425b5a:	stos   BYTE PTR es:[edi],al
  425b5b:	xor    eax,eax
  425b5d:	mov    DWORD PTR [ebp-0xbc],0x123f0f31
  425b67:	mov    DWORD PTR [ebp-0xb8],0xb360819
  425b71:	mov    DWORD PTR [ebp-0xb4],0x23081d03
  425b7b:	mov    BYTE PTR [ebp-0xb0],0x7a
  425b82:	lea    edi,[ebp-0xaf]
  425b88:	stos   DWORD PTR es:[edi],eax
  425b89:	stos   WORD PTR es:[edi],ax
  425b8b:	stos   BYTE PTR es:[edi],al
  425b8c:	mov    edi,DWORD PTR [ebp+0x8]
  425b8f:	mov    eax,DWORD PTR [ebp+0x8]
  425b92:	mov    edx,DWORD PTR [eax+0x1b8]
  425b98:	mov    DWORD PTR [ebp-0x68],0x80e0f16
  425b9f:	mov    DWORD PTR [ebp-0x64],0x110a151f
  425ba6:	mov    WORD PTR [ebp-0x60],0x7a39
  425bac:	mov    DWORD PTR [ebp-0x90],0x123f0f31
  425bb6:	mov    DWORD PTR [ebp-0x8c],0x16390819
  425bc0:	mov    DWORD PTR [ebp-0x88],0x3419120a
  425bca:	mov    DWORD PTR [ebp-0x84],0x81d150d
  425bd4:	mov    DWORD PTR [ebp-0x80],0x7a391f11
  425bdb:	mov    DWORD PTR [ebp-0x7c],0x123f0f31
  425be2:	mov    DWORD PTR [ebp-0x78],0x16390819
  425be9:	mov    DWORD PTR [ebp-0x74],0x3419120a
  425bf0:	mov    DWORD PTR [ebp-0x70],0x81d150d
  425bf7:	mov    DWORD PTR [ebp-0x6c],0x7a231f11
  425bfe:	call   0x427ef3
  425c03:	push   eax
  425c04:	mov    eax,DWORD PTR [ebp+0x8]
  425c07:	mov    eax,DWORD PTR [eax+0x1a8]
  425c0d:	push   DWORD PTR [eax]
  425c0f:	call   0x427b94
  425c14:	test   eax,eax
  425c16:	jne    0x425c68
  425c18:	mov    eax,DWORD PTR [ebp+0x8]
  425c1b:	mov    eax,DWORD PTR [eax+0x1e0]
  425c21:	mov    edi,DWORD PTR [ebp+0x8]
  425c24:	add    eax,0x4
  425c27:	mov    DWORD PTR [ebp-0x20],eax
  425c2a:	mov    eax,DWORD PTR [ebp+0x8]
  425c2d:	mov    edx,DWORD PTR [eax+0x1b8]
  425c33:	call   0x427ef3
  425c38:	push   eax
  425c39:	mov    eax,DWORD PTR [ebp-0x20]
  425c3c:	call   DWORD PTR [eax]
  425c3e:	test   eax,eax
  425c40:	jne    0x425c68
  425c42:	mov    eax,DWORD PTR [ebp+0x8]
  425c45:	mov    eax,DWORD PTR [eax+0x1e0]
  425c4b:	mov    edi,DWORD PTR [ebp+0x8]
  425c4e:	add    eax,0x10
  425c51:	mov    DWORD PTR [ebp-0x20],eax
  425c54:	mov    eax,DWORD PTR [ebp+0x8]
  425c57:	mov    edx,DWORD PTR [eax+0x1b8]
  425c5d:	call   0x427ef3
  425c62:	push   eax
  425c63:	mov    eax,DWORD PTR [ebp-0x20]
  425c66:	call   DWORD PTR [eax]
  425c68:	mov    eax,DWORD PTR [ebp-0x10]
  425c6b:	mov    ecx,DWORD PTR [ebp-0x28]
  425c6e:	xor    eax,ebx
  425c70:	add    eax,esi
  425c72:	cmp    eax,ecx
  425c74:	je     0x425e37
  425c7a:	mov    eax,DWORD PTR [ebp-0x18]
  425c7d:	xor    eax,ebx
  425c7f:	mov    ecx,0xffcd8d11
  425c84:	sub    ecx,eax
  425c86:	add    ecx,DWORD PTR [ebp-0x28]
  425c89:	mov    eax,DWORD PTR [ebp-0x1c]
  425c8c:	cmp    eax,ecx
  425c8e:	ja     0x425e37
  425c94:	mov    DWORD PTR [ebp-0x34],0x0
  425c9b:	push   DWORD PTR [ebp+0x8]
  425c9e:	mov    edi,DWORD PTR [ebp+0x8]
  425ca1:	mov    eax,DWORD PTR [ebp+0x8]
  425ca4:	mov    edx,DWORD PTR [eax+0x1b4]
  425caa:	call   0x427ef3
  425caf:	push   eax
  425cb0:	mov    eax,DWORD PTR [ebp+0x8]
  425cb3:	mov    eax,DWORD PTR [eax+0x1a8]
  425cb9:	push   DWORD PTR [eax]
  425cbb:	call   0x427b94
  425cc0:	mov    ecx,DWORD PTR [ebp+0x8]
  425cc3:	mov    ecx,DWORD PTR [ecx+0x19c]
  425cc9:	mov    DWORD PTR [ecx],eax
  425ccb:	mov    eax,DWORD PTR [ebp+0x8]
  425cce:	mov    edi,DWORD PTR [eax+0x1e0]
  425cd4:	mov    esi,DWORD PTR [ebp+0x8]
  425cd7:	xor    eax,eax
  425cd9:	lea    edx,[ebp-0x7c]
  425cdc:	call   0x427f29
  425ce1:	push   eax
  425ce2:	mov    eax,DWORD PTR [ebp+0x8]
  425ce5:	mov    eax,DWORD PTR [eax+0x19c]
  425ceb:	push   DWORD PTR [eax]
  425ced:	call   DWORD PTR [edi+0x8]
  425cf0:	mov    DWORD PTR [ebp-0x20],eax
  425cf3:	mov    eax,DWORD PTR [ebp+0x8]
  425cf6:	mov    edi,DWORD PTR [eax+0x1e0]
  425cfc:	mov    esi,DWORD PTR [ebp+0x8]
  425cff:	xor    eax,eax
  425d01:	lea    edx,[ebp-0x90]
  425d07:	call   0x427f29
  425d0c:	push   eax
  425d0d:	mov    eax,DWORD PTR [ebp+0x8]
  425d10:	mov    eax,DWORD PTR [eax+0x19c]
  425d16:	push   DWORD PTR [eax]
  425d18:	call   DWORD PTR [edi+0x8]
  425d1b:	mov    eax,DWORD PTR [ebp+0x8]
  425d1e:	mov    edi,DWORD PTR [eax+0x1e0]
  425d24:	mov    esi,DWORD PTR [ebp+0x8]
  425d27:	xor    eax,eax
  425d29:	lea    edx,[ebp-0xa8]
  425d2f:	call   0x427f29
  425d34:	push   eax
  425d35:	mov    eax,DWORD PTR [ebp+0x8]
  425d38:	mov    eax,DWORD PTR [eax+0x19c]
  425d3e:	push   DWORD PTR [eax]
  425d40:	call   DWORD PTR [edi+0x8]
  425d43:	and    DWORD PTR [ebp-0x8],0x0
  425d47:	mov    DWORD PTR [ebp-0x48],eax
  425d4a:	mov    eax,DWORD PTR [ebp-0x8]
  425d4d:	and    eax,0x7
  425d50:	add    eax,0x31
  425d53:	push   eax
  425d54:	call   DWORD PTR [ebp-0x20]
  425d57:	test   eax,eax
  425d59:	je     0x425d9d
  425d5b:	mov    eax,DWORD PTR [ebp-0x8]
  425d5e:	push   0x19
  425d60:	xor    edx,edx
  425d62:	pop    ecx
  425d63:	div    ecx
  425d65:	add    dl,0x41
  425d68:	movzx  eax,dl
  425d6b:	push   eax
  425d6c:	call   DWORD PTR [ebp-0x48]
  425d6f:	test   eax,eax
  425d71:	jne    0x425d9d
  425d73:	mov    eax,DWORD PTR [ebp+0x8]
  425d76:	mov    edi,DWORD PTR [eax+0x1e0]
  425d7c:	mov    esi,DWORD PTR [ebp+0x8]
  425d7f:	xor    eax,eax
  425d81:	lea    edx,[ebp-0x68]
  425d84:	call   0x427f29
  425d89:	push   eax
  425d8a:	mov    eax,DWORD PTR [ebp+0x8]
  425d8d:	mov    eax,DWORD PTR [eax+0x198]
  425d93:	push   DWORD PTR [eax]
  425d95:	call   DWORD PTR [edi+0x8]
  425d98:	mov    DWORD PTR [ebp-0x14],eax
  425d9b:	jmp    0x425da1
  425d9d:	and    DWORD PTR [ebp-0x14],0x0
  425da1:	inc    DWORD PTR [ebp-0x8]
  425da4:	cmp    DWORD PTR [ebp-0x8],0x10
  425da8:	jb     0x425d4a
  425daa:	mov    eax,DWORD PTR [ebp-0x18]
  425dad:	mov    esi,DWORD PTR [ebp+0x8]
  425db0:	xor    eax,ebx
  425db2:	mov    edi,0x3272ef
  425db7:	add    eax,edi
  425db9:	lea    edx,[ebp-0x10c]
  425dbf:	call   0x427f29
  425dc4:	push   eax
  425dc5:	mov    eax,DWORD PTR [ebp-0x10]
  425dc8:	mov    esi,DWORD PTR [ebp+0x8]
  425dcb:	xor    eax,ebx
  425dcd:	add    eax,edi
  425dcf:	lea    edx,[ebp-0x12c]
  425dd5:	call   0x427f29
  425dda:	push   eax
  425ddb:	call   DWORD PTR [ebp-0x14]
  425dde:	mov    ecx,DWORD PTR [ebp-0x10]
  425de1:	xor    ecx,ebx
  425de3:	add    ecx,edi
  425de5:	cmp    ecx,eax
  425de7:	jne    0x425df0
  425de9:	mov    DWORD PTR [ebp-0x34],0x1
  425df0:	mov    eax,DWORD PTR [ebp-0x18]
  425df3:	mov    ecx,DWORD PTR [ebp-0x1c]
  425df6:	xor    eax,ebx
  425df8:	lea    eax,[eax+ecx*1+0x3272ef]
  425dff:	mov    DWORD PTR [ebp-0x1c],eax
  425e02:	mov    eax,DWORD PTR [ebp-0x34]
  425e05:	test   eax,eax
  425e07:	je     0x425e1b
  425e09:	mov    eax,DWORD PTR [ebp-0x18]
  425e0c:	mov    ecx,DWORD PTR [ebp-0x38]
  425e0f:	xor    eax,ebx
  425e11:	lea    eax,[eax+ecx*1+0x3272ef]
  425e18:	mov    DWORD PTR [ebp-0x38],eax
  425e1b:	mov    eax,DWORD PTR [ebp-0x18]
  425e1e:	xor    eax,ebx
  425e20:	mov    ecx,0xffcd8d11
  425e25:	sub    ecx,eax
  425e27:	add    ecx,DWORD PTR [ebp-0x28]
  425e2a:	mov    eax,DWORD PTR [ebp-0x1c]
  425e2d:	cmp    eax,ecx
  425e2f:	jbe    0x425c94
  425e35:	mov    esi,edi
  425e37:	mov    eax,DWORD PTR [ebp-0x38]
  425e3a:	mov    ecx,DWORD PTR [ebp-0x1c]
  425e3d:	cmp    ecx,eax
  425e3f:	jne    0x425e52
  425e41:	push   DWORD PTR [ebp+0x8]
  425e44:	lea    eax,[ebp-0x40]
  425e47:	push   eax
  425e48:	call   0x428996
  425e4d:	mov    DWORD PTR [ebp-0x24],eax
  425e50:	jmp    0x425e5e
  425e52:	mov    eax,DWORD PTR [ebp-0x24]
  425e55:	mov    ecx,DWORD PTR [ebp-0x18]
  425e58:	xor    ecx,ebx
  425e5a:	add    ecx,esi
  425e5c:	xor    DWORD PTR [eax],ecx
  425e5e:	mov    eax,DWORD PTR [ebp-0x10]
  425e61:	mov    ecx,DWORD PTR [ebp-0x24]
  425e64:	xor    eax,ebx
  425e66:	add    eax,esi
  425e68:	cmp    eax,ecx
  425e6a:	je     0x4265e1
  425e70:	mov    eax,DWORD PTR [ebp-0x10]
  425e73:	mov    ecx,DWORD PTR [ebp-0x40]
  425e76:	xor    eax,ebx
  425e78:	add    eax,esi
  425e7a:	cmp    eax,ecx
  425e7c:	je     0x4265e1
  425e82:	mov    eax,DWORD PTR [ebp-0x10]
  425e85:	xor    eax,ebx
  425e87:	add    eax,esi
  425e89:	jmp    0x425ea7
  425e8b:	mov    edi,DWORD PTR [ebp-0x24]
  425e8e:	mov    cl,al
  425e90:	and    cl,0x1f
  425e93:	or     dl,0xff
  425e96:	sub    dl,cl
  425e98:	add    BYTE PTR [edi+eax*1],dl
  425e9b:	mov    ecx,DWORD PTR [ebp-0x18]
  425e9e:	xor    ecx,ebx
  425ea0:	lea    eax,[eax+ecx*1+0x3272ef]
  425ea7:	mov    ecx,DWORD PTR [ebp-0x40]
  425eaa:	cmp    eax,ecx
  425eac:	jb     0x425e8b
  425eae:	mov    eax,DWORD PTR [ebp-0x40]
  425eb1:	mov    DWORD PTR [ebp-0x28],eax
  425eb4:	mov    eax,DWORD PTR [ebp-0x24]
  425eb7:	mov    DWORD PTR [ebp-0x38],0xf89c85b9
  425ebe:	mov    DWORD PTR [ebp-0xd4],eax
  425ec4:	mov    edi,0xf89c85ba
  425ec9:	mov    DWORD PTR [ebp-0x2c],edi
  425ecc:	mov    eax,DWORD PTR [ebp-0x38]
  425ecf:	xor    eax,ebx
  425ed1:	add    eax,esi
  425ed3:	mov    DWORD PTR [ebp-0xc],eax
  425ed6:	mov    eax,DWORD PTR [ebp-0x38]
  425ed9:	xor    eax,ebx
  425edb:	add    eax,esi
  425edd:	mov    DWORD PTR [ebp-0x8],eax
  425ee0:	mov    DWORD PTR [ebp-0x48],0xf89c8599
  425ee7:	mov    DWORD PTR [ebp-0x4c],0xf89c85b0
  425eee:	mov    eax,DWORD PTR [ebp-0x38]
  425ef1:	mov    ecx,DWORD PTR [ebp-0x28]
  425ef4:	xor    eax,ebx
  425ef6:	add    eax,esi
  425ef8:	cmp    ecx,eax
  425efa:	je     0x4260f9
  425f00:	jmp    0x4260d5
  425f05:	mov    ecx,DWORD PTR [ebp-0xc]
  425f08:	mov    eax,DWORD PTR [ebp-0x28]
  425f0b:	sub    eax,ecx
  425f0d:	mov    ecx,DWORD PTR [ebp-0x48]
  425f10:	xor    ecx,ebx
  425f12:	add    ecx,esi
  425f14:	xor    edx,edx
  425f16:	div    ecx
  425f18:	mov    DWORD PTR [ebp-0x8],eax
  425f1b:	mov    eax,DWORD PTR [ebp-0x4c]
  425f1e:	mov    ecx,DWORD PTR [ebp-0x8]
  425f21:	xor    eax,ebx
  425f23:	add    eax,esi
  425f25:	cmp    ecx,eax
  425f27:	jbe    0x425f33
  425f29:	mov    eax,DWORD PTR [ebp-0x4c]
  425f2c:	xor    eax,ebx
  425f2e:	add    eax,esi
  425f30:	mov    DWORD PTR [ebp-0x8],eax
  425f33:	mov    eax,DWORD PTR [ebp-0x48]
  425f36:	mov    ecx,DWORD PTR [ebp-0x8]
  425f39:	xor    eax,ebx
  425f3b:	add    eax,esi
  425f3d:	imul   eax,ecx
  425f40:	mov    DWORD PTR [ebp-0x8],eax
  425f43:	mov    eax,DWORD PTR [ebp-0x38]
  425f46:	mov    ecx,DWORD PTR [ebp-0x8]
  425f49:	xor    eax,ebx
  425f4b:	add    eax,esi
  425f4d:	cmp    ecx,eax
  425f4f:	je     0x4260c3
  425f55:	mov    eax,DWORD PTR [ebp-0x8]
  425f58:	mov    DWORD PTR [ebp-0x14],eax
  425f5b:	mov    eax,DWORD PTR [ebp-0xc]
  425f5e:	add    eax,DWORD PTR [ebp-0xd4]
  425f64:	mov    DWORD PTR [ebp-0x20],0xf89c85b9
  425f6b:	mov    DWORD PTR [ebp-0x34],edi
  425f6e:	mov    DWORD PTR [ebp-0xe8],0xf89c85bb
  425f78:	mov    DWORD PTR [ebp-0x8],eax
  425f7b:	mov    DWORD PTR [ebp-0x30],0xf89c85bc
  425f82:	mov    DWORD PTR [ebp-0x1c],edi
  425f85:	mov    eax,DWORD PTR [ebp-0x20]
  425f88:	xor    eax,ebx
  425f8a:	add    eax,esi
  425f8c:	jmp    0x426082
  425f91:	mov    DWORD PTR [ebp-0xe0],0xf89c85b4
  425f9b:	mov    DWORD PTR [ebp-0xc4],0xf89c858f
  425fa5:	mov    eax,DWORD PTR [ebp-0x1c]
  425fa8:	mov    ecx,DWORD PTR [ebp-0x44]
  425fab:	xor    eax,ebx
  425fad:	add    eax,esi
  425faf:	imul   eax,ecx
  425fb2:	mov    ecx,DWORD PTR [ebp-0x8]
  425fb5:	mov    al,BYTE PTR [eax+ecx*1]
  425fb8:	mov    BYTE PTR [ebp-0x2],al
  425fbb:	mov    eax,DWORD PTR [ebp-0x1c]
  425fbe:	mov    ecx,DWORD PTR [ebp-0x44]
  425fc1:	xor    eax,ebx
  425fc3:	add    eax,esi
  425fc5:	imul   eax,ecx
  425fc8:	mov    ecx,DWORD PTR [ebp-0xe8]
  425fce:	xor    ecx,ebx
  425fd0:	add    eax,ecx
  425fd2:	mov    ecx,DWORD PTR [ebp-0x8]
  425fd5:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272ef]
  425fdd:	mov    ecx,DWORD PTR [ebp-0xe0]
  425fe3:	xor    ecx,ebx
  425fe5:	lea    eax,[ecx+eax*1+0x3272ef]
  425fec:	movzx  ecx,BYTE PTR [ebp-0x2]
  425ff0:	xor    ecx,eax
  425ff2:	mov    BYTE PTR [ebp-0x2],cl
  425ff5:	mov    al,BYTE PTR [ebp-0x2]
  425ff8:	mov    ecx,DWORD PTR [ebp-0x1c]
  425ffb:	mov    edx,DWORD PTR [ebp-0x44]
  425ffe:	xor    ecx,ebx
  426000:	add    ecx,esi
  426002:	imul   ecx,edx
  426005:	mov    edx,DWORD PTR [ebp-0x8]
  426008:	mov    BYTE PTR [ecx+edx*1],al
  42600b:	mov    eax,DWORD PTR [ebp-0x1c]
  42600e:	mov    ecx,DWORD PTR [ebp-0x44]
  426011:	xor    eax,ebx
  426013:	add    eax,esi
  426015:	imul   eax,ecx
  426018:	mov    ecx,DWORD PTR [ebp-0x8]
  42601b:	mov    al,BYTE PTR [eax+ecx*1]
  42601e:	mov    BYTE PTR [ebp-0x2],al
  426021:	mov    eax,DWORD PTR [ebp-0x1c]
  426024:	mov    ecx,DWORD PTR [ebp-0x44]
  426027:	xor    eax,ebx
  426029:	add    eax,esi
  42602b:	imul   eax,ecx
  42602e:	mov    ecx,DWORD PTR [ebp-0x34]
  426031:	xor    ecx,ebx
  426033:	add    eax,ecx
  426035:	mov    ecx,DWORD PTR [ebp-0x8]
  426038:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272ef]
  426040:	mov    ecx,DWORD PTR [ebp-0xc4]
  426046:	xor    ecx,ebx
  426048:	lea    eax,[ecx+eax*1+0x3272ef]
  42604f:	movzx  ecx,BYTE PTR [ebp-0x2]
  426053:	xor    ecx,eax
  426055:	mov    BYTE PTR [ebp-0x2],cl
  426058:	mov    al,BYTE PTR [ebp-0x2]
  42605b:	mov    ecx,DWORD PTR [ebp-0x1c]
  42605e:	mov    edx,DWORD PTR [ebp-0x44]
  426061:	xor    ecx,ebx
  426063:	add    ecx,esi
  426065:	imul   ecx,edx
  426068:	mov    edx,DWORD PTR [ebp-0x8]
  42606b:	mov    BYTE PTR [ecx+edx*1],al
  42606e:	mov    eax,DWORD PTR [ebp-0x30]
  426071:	mov    ecx,DWORD PTR [ebp-0x34]
  426074:	xor    eax,ebx
  426076:	xor    ecx,ebx
  426078:	add    eax,esi
  42607a:	add    ecx,esi
  42607c:	imul   eax,ecx
  42607f:	add    eax,DWORD PTR [ebp-0x44]
  426082:	mov    DWORD PTR [ebp-0x44],eax
  426085:	mov    eax,DWORD PTR [ebp-0x44]
  426088:	mov    ecx,DWORD PTR [ebp-0x14]
  42608b:	cmp    ecx,eax
  42608d:	jb     0x425f91
  426093:	mov    eax,DWORD PTR [ebp-0x34]
  426096:	mov    ecx,DWORD PTR [ebp-0x14]
  426099:	xor    eax,ebx
  42609b:	add    eax,esi
  42609d:	imul   eax,ecx
  4260a0:	mov    ecx,DWORD PTR [ebp-0x20]
  4260a3:	xor    ecx,ebx
  4260a5:	add    ecx,esi
  4260a7:	or     eax,ecx
  4260a9:	mov    ecx,DWORD PTR [ebp-0x2c]
  4260ac:	xor    ecx,ebx
  4260ae:	add    eax,ecx
  4260b0:	mov    ecx,DWORD PTR [ebp-0x2c]
  4260b3:	xor    ecx,ebx
  4260b5:	add    eax,ecx
  4260b7:	mov    ecx,DWORD PTR [ebp-0xc]
  4260ba:	lea    eax,[eax+ecx*1+0x64e5de]
  4260c1:	jmp    0x4260d2
  4260c3:	mov    eax,DWORD PTR [ebp-0x2c]
  4260c6:	mov    ecx,DWORD PTR [ebp-0xc]
  4260c9:	xor    eax,ebx
  4260cb:	lea    eax,[eax+ecx*1+0x3272ef]
  4260d2:	mov    DWORD PTR [ebp-0xc],eax
  4260d5:	mov    eax,DWORD PTR [ebp-0x2c]
  4260d8:	xor    eax,ebx
  4260da:	mov    ecx,0xffcd8d11
  4260df:	sub    ecx,eax
  4260e1:	add    ecx,DWORD PTR [ebp-0x28]
  4260e4:	mov    eax,DWORD PTR [ebp-0x2c]
  4260e7:	mov    edx,DWORD PTR [ebp-0xc]
  4260ea:	xor    eax,ebx
  4260ec:	add    eax,esi
  4260ee:	imul   eax,edx
  4260f1:	cmp    eax,ecx
  4260f3:	jbe    0x425f05
  4260f9:	mov    eax,DWORD PTR [ebp-0x10]
  4260fc:	mov    ecx,DWORD PTR [ebp-0x40]
  4260ff:	mov    eax,DWORD PTR [ebp+0x8]
  426102:	mov    edx,DWORD PTR [ebp-0x54]
  426105:	mov    eax,DWORD PTR [eax+0x1e0]
  42610b:	xor    edx,ebx
  42610d:	add    edx,esi
  42610f:	push   edx
  426110:	mov    edx,DWORD PTR [ebp-0x3c]
  426113:	xor    edx,ebx
  426115:	add    edx,esi
  426117:	push   edx
  426118:	push   ecx
  426119:	mov    DWORD PTR [ebp-0x30],ecx
  42611c:	mov    ecx,DWORD PTR [ebp-0x10]
  42611f:	xor    ecx,ebx
  426121:	add    ecx,esi
  426123:	push   ecx
  426124:	call   DWORD PTR [eax+0x14]
  426127:	mov    edi,eax
  426129:	mov    eax,DWORD PTR [ebp-0x10]
  42612c:	xor    eax,ebx
  42612e:	add    eax,esi
  426130:	cmp    eax,edi
  426132:	je     0x42618d
  426134:	mov    eax,DWORD PTR [ebp-0x10]
  426137:	jmp    0x42615a
  426139:	mov    ecx,DWORD PTR [ebp-0x24]
  42613c:	xor    eax,ebx
  42613e:	mov    cl,BYTE PTR [ecx+eax*1+0x3272ef]
  426145:	mov    BYTE PTR [eax+edi*1+0x3272ef],cl
  42614c:	mov    ecx,DWORD PTR [ebp-0x18]
  42614f:	xor    ecx,ebx
  426151:	lea    eax,[ecx+eax*1+0x3272ef]
  426158:	xor    eax,ebx
  42615a:	mov    ecx,DWORD PTR [ebp-0x40]
  42615d:	sub    ecx,esi
  42615f:	xor    ecx,ebx
  426161:	cmp    eax,ecx
  426163:	jne    0x426139
  426165:	mov    eax,DWORD PTR [ebp+0x8]
  426168:	mov    ecx,DWORD PTR [ebp-0x50]
  42616b:	mov    eax,DWORD PTR [eax+0x1e0]
  426171:	xor    ecx,ebx
  426173:	add    ecx,esi
  426175:	push   ecx
  426176:	mov    ecx,DWORD PTR [ebp-0x10]
  426179:	xor    ecx,ebx
  42617b:	add    ecx,esi
  42617d:	push   ecx
  42617e:	push   DWORD PTR [ebp-0x24]
  426181:	call   DWORD PTR [eax+0x18]
  426184:	mov    eax,DWORD PTR [ebp-0x30]
  426187:	mov    DWORD PTR [ebp-0x24],edi
  42618a:	mov    DWORD PTR [ebp-0x40],eax
  42618d:	mov    edi,DWORD PTR [ebp-0x24]
  426190:	mov    eax,DWORD PTR [ebp-0x18]
  426193:	mov    ecx,DWORD PTR [ebp-0x10]
  426196:	xor    eax,ebx
  426198:	mov    DWORD PTR [ebp-0x30],edi
  42619b:	add    eax,esi
  42619d:	mov    DWORD PTR [ebp-0x5c],0x39222a22
  4261a4:	mov    DWORD PTR [ebp-0x58],0x37223f22
  4261ab:	jmp    0x4261de
  4261ad:	xor    ecx,ebx
  4261af:	mov    dl,BYTE PTR [ebp+ecx*1+0x327293]
  4261b6:	xor    dl,0x7b
  4261b9:	dec    dl
  4261bb:	mov    DWORD PTR [ebp-0x3c],ecx
  4261be:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272ef]
  4261c6:	movzx  edx,dl
  4261c9:	cmp    ecx,edx
  4261cb:	jne    0x4261e8
  4261cd:	mov    ecx,DWORD PTR [ebp-0x18]
  4261d0:	mov    edx,DWORD PTR [ebp-0x3c]
  4261d3:	xor    ecx,ebx
  4261d5:	lea    ecx,[ecx+edx*1+0x3272ef]
  4261dc:	xor    ecx,ebx
  4261de:	cmp    ecx,0xf89c85b1
  4261e4:	jne    0x4261ad
  4261e6:	jmp    0x4261ef
  4261e8:	mov    eax,DWORD PTR [ebp-0x10]
  4261eb:	xor    eax,ebx
  4261ed:	add    eax,esi
  4261ef:	mov    ecx,DWORD PTR [ebp-0x10]
  4261f2:	xor    ecx,ebx
  4261f4:	add    ecx,esi
  4261f6:	cmp    ecx,eax
  4261f8:	je     0x42636b
  4261fe:	mov    eax,DWORD PTR [edi+0x8]
  426201:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  426208:	mov    DWORD PTR [ebp-0x3c],0xf89cc328
  42620f:	mov    DWORD PTR [ebp-0x48],0xf89cb5b9
  426216:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  42621d:	mov    DWORD PTR [ebp-0x14],eax
  426220:	mov    eax,DWORD PTR [ebp+0x8]
  426223:	mov    ecx,DWORD PTR [ebp-0x20]
  426226:	xor    ecx,ebx
  426228:	add    ecx,esi
  42622a:	push   ecx
  42622b:	mov    ecx,DWORD PTR [ebp-0x48]
  42622e:	mov    eax,DWORD PTR [eax+0x1e0]
  426234:	xor    ecx,ebx
  426236:	add    ecx,esi
  426238:	push   ecx
  426239:	mov    ecx,DWORD PTR [ebp-0x3c]
  42623c:	xor    ecx,ebx
  42623e:	add    ecx,esi
  426240:	push   ecx
  426241:	mov    ecx,DWORD PTR [ebp-0xc]
  426244:	xor    ecx,ebx
  426246:	add    ecx,esi
  426248:	push   ecx
  426249:	call   DWORD PTR [eax+0x14]
  42624c:	mov    edi,eax
  42624e:	mov    eax,DWORD PTR [ebp+0x8]
  426251:	mov    ecx,DWORD PTR [ebp-0x20]
  426254:	mov    eax,DWORD PTR [eax+0x1e0]
  42625a:	xor    ecx,ebx
  42625c:	add    ecx,esi
  42625e:	push   ecx
  42625f:	mov    ecx,DWORD PTR [ebp-0x48]
  426262:	xor    ecx,ebx
  426264:	add    ecx,esi
  426266:	push   ecx
  426267:	mov    ecx,DWORD PTR [ebp-0xc]
  42626a:	push   DWORD PTR [ebp-0x14]
  42626d:	xor    ecx,ebx
  42626f:	add    ecx,esi
  426271:	push   ecx
  426272:	call   DWORD PTR [eax+0x14]
  426275:	mov    ecx,DWORD PTR [ebp-0xc]
  426278:	xor    ecx,ebx
  42627a:	add    ecx,esi
  42627c:	mov    DWORD PTR [ebp-0x20],eax
  42627f:	cmp    ecx,edi
  426281:	je     0x42660e
  426287:	mov    ecx,DWORD PTR [ebp-0xc]
  42628a:	xor    ecx,ebx
  42628c:	add    ecx,esi
  42628e:	cmp    ecx,eax
  426290:	je     0x42660e
  426296:	mov    DWORD PTR [ebp-0x3c],0xf89c85bc
  42629d:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  4262a4:	mov    ecx,DWORD PTR [ebp-0x3c]
  4262a7:	xor    cl,0xa8
  4262aa:	sub    cl,0x11
  4262ad:	mov    BYTE PTR [edi],cl
  4262af:	mov    ecx,DWORD PTR [ebp-0xc]
  4262b2:	xor    cl,0xa8
  4262b5:	sub    cl,0x11
  4262b8:	mov    BYTE PTR [edi+0x1],cl
  4262bb:	mov    ecx,DWORD PTR [ebp-0x54]
  4262be:	xor    cl,0xa8
  4262c1:	sub    cl,0x11
  4262c4:	mov    BYTE PTR [edi+0x2],cl
  4262c7:	and    DWORD PTR [ebp-0xc8],0x0
  4262ce:	and    DWORD PTR [ebp-0xdc],0x0
  4262d5:	lea    ecx,[ebp-0xdc]
  4262db:	push   ecx
  4262dc:	push   DWORD PTR [ebp-0x14]
  4262df:	push   eax
  4262e0:	lea    eax,[ebp-0xc8]
  4262e6:	push   eax
  4262e7:	mov    eax,DWORD PTR [ebp-0x30]
  4262ea:	push   DWORD PTR [eax+0xc]
  4262ed:	mov    eax,DWORD PTR [ebp-0x24]
  4262f0:	add    eax,0x10
  4262f3:	push   eax
  4262f4:	push   edi
  4262f5:	call   0x42559c
  4262fa:	mov    DWORD PTR [ebp-0x3c],eax
  4262fd:	mov    eax,DWORD PTR [ebp+0x8]
  426300:	mov    ecx,DWORD PTR [ebp-0x50]
  426303:	mov    eax,DWORD PTR [eax+0x1e0]
  426309:	xor    ecx,ebx
  42630b:	add    ecx,esi
  42630d:	push   ecx
  42630e:	mov    ecx,DWORD PTR [ebp-0xc]
  426311:	xor    ecx,ebx
  426313:	add    ecx,esi
  426315:	push   ecx
  426316:	push   edi
  426317:	call   DWORD PTR [eax+0x18]
  42631a:	mov    eax,DWORD PTR [ebp-0x3c]
  42631d:	add    eax,0xffcd8d11
  426322:	xor    eax,ebx
  426324:	cmp    eax,0xf89c85b9
  426329:	mov    eax,DWORD PTR [ebp+0x8]
  42632c:	mov    eax,DWORD PTR [eax+0x1e0]
  426332:	mov    ecx,DWORD PTR [ebp-0x50]
  426335:	jne    0x426358
  426337:	xor    ecx,ebx
  426339:	add    ecx,esi
  42633b:	push   ecx
  42633c:	mov    ecx,DWORD PTR [ebp-0xc]
  42633f:	xor    ecx,ebx
  426341:	add    ecx,esi
  426343:	push   ecx
  426344:	push   DWORD PTR [ebp-0x24]
  426347:	call   DWORD PTR [eax+0x18]
  42634a:	mov    eax,DWORD PTR [ebp-0x20]
  42634d:	mov    DWORD PTR [ebp-0x24],eax
  426350:	mov    eax,DWORD PTR [ebp-0x14]
  426353:	mov    DWORD PTR [ebp-0x40],eax
  426356:	jmp    0x42636b
  426358:	xor    ecx,ebx
  42635a:	add    ecx,esi
  42635c:	push   ecx
  42635d:	mov    ecx,DWORD PTR [ebp-0xc]
  426360:	xor    ecx,ebx
  426362:	add    ecx,esi
  426364:	push   ecx
  426365:	push   DWORD PTR [ebp-0x20]
  426368:	call   DWORD PTR [eax+0x18]
  42636b:	mov    eax,DWORD PTR [ebp-0x40]
  42636e:	mov    DWORD PTR [ebp-0x38],eax
  426371:	mov    eax,DWORD PTR [ebp-0x24]
  426374:	mov    DWORD PTR [ebp-0x28],0xf89c85b9
  42637b:	mov    DWORD PTR [ebp-0x3c],eax
  42637e:	mov    edi,0xf89c85ba
  426383:	mov    DWORD PTR [ebp-0x2c],edi
  426386:	mov    eax,DWORD PTR [ebp-0x28]
  426389:	xor    eax,ebx
  42638b:	add    eax,esi
  42638d:	mov    DWORD PTR [ebp-0xc],eax
  426390:	mov    eax,DWORD PTR [ebp-0x28]
  426393:	xor    eax,ebx
  426395:	add    eax,esi
  426397:	mov    DWORD PTR [ebp-0x14],eax
  42639a:	mov    DWORD PTR [ebp-0x48],0xf89c8599
  4263a1:	mov    DWORD PTR [ebp-0x20],0xf89c85b0
  4263a8:	mov    eax,DWORD PTR [ebp-0x28]
  4263ab:	mov    ecx,DWORD PTR [ebp-0x38]
  4263ae:	xor    eax,ebx
  4263b0:	add    eax,esi
  4263b2:	cmp    ecx,eax
  4263b4:	je     0x4265aa
  4263ba:	jmp    0x426586
  4263bf:	mov    ecx,DWORD PTR [ebp-0xc]
  4263c2:	mov    eax,DWORD PTR [ebp-0x38]
  4263c5:	sub    eax,ecx
  4263c7:	mov    ecx,DWORD PTR [ebp-0x48]
  4263ca:	xor    ecx,ebx
  4263cc:	add    ecx,esi
  4263ce:	xor    edx,edx
  4263d0:	div    ecx
  4263d2:	mov    DWORD PTR [ebp-0x14],eax
  4263d5:	mov    eax,DWORD PTR [ebp-0x20]
  4263d8:	mov    ecx,DWORD PTR [ebp-0x14]
  4263db:	xor    eax,ebx
  4263dd:	add    eax,esi
  4263df:	cmp    ecx,eax
  4263e1:	jbe    0x4263ed
  4263e3:	mov    eax,DWORD PTR [ebp-0x20]
  4263e6:	xor    eax,ebx
  4263e8:	add    eax,esi
  4263ea:	mov    DWORD PTR [ebp-0x14],eax
  4263ed:	mov    eax,DWORD PTR [ebp-0x48]
  4263f0:	mov    ecx,DWORD PTR [ebp-0x14]
  4263f3:	xor    eax,ebx
  4263f5:	add    eax,esi
  4263f7:	imul   eax,ecx
  4263fa:	mov    DWORD PTR [ebp-0x14],eax
  4263fd:	mov    eax,DWORD PTR [ebp-0x28]
  426400:	mov    ecx,DWORD PTR [ebp-0x14]
  426403:	xor    eax,ebx
  426405:	add    eax,esi
  426407:	cmp    ecx,eax
  426409:	je     0x426574
  42640f:	mov    eax,DWORD PTR [ebp-0x14]
  426412:	mov    DWORD PTR [ebp-0x34],eax
  426415:	mov    eax,DWORD PTR [ebp-0xc]
  426418:	add    eax,DWORD PTR [ebp-0x3c]
  42641b:	mov    DWORD PTR [ebp-0x4c],0xf89c85b9
  426422:	mov    DWORD PTR [ebp-0x14],edi
  426425:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  42642c:	mov    DWORD PTR [ebp-0x1c],eax
  42642f:	mov    DWORD PTR [ebp-0x30],0xf89c85bc
  426436:	mov    DWORD PTR [ebp-0x8],edi
  426439:	mov    eax,DWORD PTR [ebp-0x4c]
  42643c:	xor    eax,ebx
  42643e:	add    eax,esi
  426440:	jmp    0x426533
  426445:	mov    DWORD PTR [ebp-0xe4],0xf89c85b4
  42644f:	mov    DWORD PTR [ebp-0xd0],0xf89c858f
  426459:	mov    eax,DWORD PTR [ebp-0x8]
  42645c:	mov    ecx,DWORD PTR [ebp-0x18]
  42645f:	xor    eax,ebx
  426461:	add    eax,esi
  426463:	imul   eax,ecx
  426466:	mov    ecx,DWORD PTR [ebp-0x1c]
  426469:	mov    al,BYTE PTR [eax+ecx*1]
  42646c:	mov    BYTE PTR [ebp-0x1],al
  42646f:	mov    eax,DWORD PTR [ebp-0x8]
  426472:	mov    ecx,DWORD PTR [ebp-0x18]
  426475:	xor    eax,ebx
  426477:	add    eax,esi
  426479:	imul   eax,ecx
  42647c:	mov    ecx,DWORD PTR [ebp-0x54]
  42647f:	xor    ecx,ebx
  426481:	add    eax,ecx
  426483:	mov    ecx,DWORD PTR [ebp-0x1c]
  426486:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272ef]
  42648e:	mov    ecx,DWORD PTR [ebp-0xe4]
  426494:	xor    ecx,ebx
  426496:	lea    eax,[ecx+eax*1+0x3272ef]
  42649d:	movzx  ecx,BYTE PTR [ebp-0x1]
  4264a1:	xor    ecx,eax
  4264a3:	mov    BYTE PTR [ebp-0x1],cl
  4264a6:	mov    al,BYTE PTR [ebp-0x1]
  4264a9:	mov    ecx,DWORD PTR [ebp-0x8]
  4264ac:	mov    edx,DWORD PTR [ebp-0x18]
  4264af:	xor    ecx,ebx
  4264b1:	add    ecx,esi
  4264b3:	imul   ecx,edx
  4264b6:	mov    edx,DWORD PTR [ebp-0x1c]
  4264b9:	mov    BYTE PTR [ecx+edx*1],al
  4264bc:	mov    eax,DWORD PTR [ebp-0x8]
  4264bf:	mov    ecx,DWORD PTR [ebp-0x18]
  4264c2:	xor    eax,ebx
  4264c4:	add    eax,esi
  4264c6:	imul   eax,ecx
  4264c9:	mov    ecx,DWORD PTR [ebp-0x1c]
  4264cc:	mov    al,BYTE PTR [eax+ecx*1]
  4264cf:	mov    BYTE PTR [ebp-0x1],al
  4264d2:	mov    eax,DWORD PTR [ebp-0x8]
  4264d5:	mov    ecx,DWORD PTR [ebp-0x18]
  4264d8:	xor    eax,ebx
  4264da:	add    eax,esi
  4264dc:	imul   eax,ecx
  4264df:	mov    ecx,DWORD PTR [ebp-0x14]
  4264e2:	xor    ecx,ebx
  4264e4:	add    eax,ecx
  4264e6:	mov    ecx,DWORD PTR [ebp-0x1c]
  4264e9:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272ef]
  4264f1:	mov    ecx,DWORD PTR [ebp-0xd0]
  4264f7:	xor    ecx,ebx
  4264f9:	lea    eax,[ecx+eax*1+0x3272ef]
  426500:	movzx  ecx,BYTE PTR [ebp-0x1]
  426504:	xor    ecx,eax
  426506:	mov    BYTE PTR [ebp-0x1],cl
  426509:	mov    al,BYTE PTR [ebp-0x1]
  42650c:	mov    ecx,DWORD PTR [ebp-0x8]
  42650f:	mov    edx,DWORD PTR [ebp-0x18]
  426512:	xor    ecx,ebx
  426514:	add    ecx,esi
  426516:	imul   ecx,edx
  426519:	mov    edx,DWORD PTR [ebp-0x1c]
  42651c:	mov    BYTE PTR [ecx+edx*1],al
  42651f:	mov    eax,DWORD PTR [ebp-0x30]
  426522:	mov    ecx,DWORD PTR [ebp-0x14]
  426525:	xor    eax,ebx
  426527:	xor    ecx,ebx
  426529:	add    eax,esi
  42652b:	add    ecx,esi
  42652d:	imul   eax,ecx
  426530:	add    eax,DWORD PTR [ebp-0x18]
  426533:	mov    DWORD PTR [ebp-0x18],eax
  426536:	mov    eax,DWORD PTR [ebp-0x18]
  426539:	mov    ecx,DWORD PTR [ebp-0x34]
  42653c:	cmp    ecx,eax
  42653e:	jb     0x426445
  426544:	mov    eax,DWORD PTR [ebp-0x14]
  426547:	mov    ecx,DWORD PTR [ebp-0x34]
  42654a:	xor    eax,ebx
  42654c:	add    eax,esi
  42654e:	imul   eax,ecx
  426551:	mov    ecx,DWORD PTR [ebp-0x4c]
  426554:	xor    ecx,ebx
  426556:	add    ecx,esi
  426558:	or     eax,ecx
  42655a:	mov    ecx,DWORD PTR [ebp-0x2c]
  42655d:	xor    ecx,ebx
  42655f:	add    eax,ecx
  426561:	mov    ecx,DWORD PTR [ebp-0x2c]
  426564:	xor    ecx,ebx
  426566:	add    eax,ecx
  426568:	mov    ecx,DWORD PTR [ebp-0xc]
  42656b:	lea    eax,[eax+ecx*1+0x64e5de]
  426572:	jmp    0x426583
  426574:	mov    eax,DWORD PTR [ebp-0x2c]
  426577:	mov    ecx,DWORD PTR [ebp-0xc]
  42657a:	xor    eax,ebx
  42657c:	lea    eax,[eax+ecx*1+0x3272ef]
  426583:	mov    DWORD PTR [ebp-0xc],eax
  426586:	mov    eax,DWORD PTR [ebp-0x2c]
  426589:	xor    eax,ebx
  42658b:	mov    ecx,0xffcd8d11
  426590:	sub    ecx,eax
  426592:	add    ecx,DWORD PTR [ebp-0x38]
  426595:	mov    eax,DWORD PTR [ebp-0x2c]
  426598:	mov    edx,DWORD PTR [ebp-0xc]
  42659b:	xor    eax,ebx
  42659d:	add    eax,esi
  42659f:	imul   eax,edx
  4265a2:	cmp    eax,ecx
  4265a4:	jbe    0x4263bf
  4265aa:	push   DWORD PTR [ebp+0x8]
  4265ad:	mov    eax,DWORD PTR [ebp+0x8]
  4265b0:	push   DWORD PTR [eax+0x1cc]
  4265b6:	lea    eax,[ebp-0xd8]
  4265bc:	push   eax
  4265bd:	mov    eax,DWORD PTR [ebp+0x8]
  4265c0:	mov    eax,DWORD PTR [eax+0x1c4]
  4265c6:	push   DWORD PTR [eax]
  4265c8:	mov    eax,DWORD PTR [ebp+0x8]
  4265cb:	mov    eax,DWORD PTR [eax+0x1c0]
  4265d1:	push   DWORD PTR [eax]
  4265d3:	push   DWORD PTR [ebp-0x40]
  4265d6:	push   DWORD PTR [ebp-0x24]
  4265d9:	call   0x427070
  4265de:	mov    DWORD PTR [ebp-0x3c],eax
  4265e1:	mov    eax,DWORD PTR [ebp-0x10]
  4265e4:	mov    ecx,DWORD PTR [ebp-0x24]
  4265e7:	xor    eax,ebx
  4265e9:	add    eax,esi
  4265eb:	cmp    eax,ecx
  4265ed:	je     0x42660e
  4265ef:	mov    eax,DWORD PTR [ebp+0x8]
  4265f2:	mov    ecx,DWORD PTR [ebp-0x50]
  4265f5:	mov    eax,DWORD PTR [eax+0x1e0]
  4265fb:	xor    ecx,ebx
  4265fd:	add    ecx,esi
  4265ff:	push   ecx
  426600:	mov    ecx,DWORD PTR [ebp-0x10]
  426603:	xor    ecx,ebx
  426605:	add    ecx,esi
  426607:	push   ecx
  426608:	push   DWORD PTR [ebp-0x24]
  42660b:	call   DWORD PTR [eax+0x18]
  42660e:	pop    edi
  42660f:	pop    esi
  426610:	pop    ebx
  426611:	leave  
  426612:	ret    0x4
  426615:	push   ebp
  426616:	mov    ebp,esp
  426618:	push   ecx
  426619:	push   ecx
  42661a:	lea    eax,[ebp-0x8]
  42661d:	mov    DWORD PTR [ebp-0x4],eax
  426620:	push   esi
  426621:	mov    esi,DWORD PTR [ebp-0x4]
  426624:	mov    eax,0xf881ba2f
  426629:	mov    DWORD PTR [esi],eax
  42662b:	mov    esi,DWORD PTR [ebp-0x8]
  42662e:	cmp    esi,eax
  426630:	pop    esi
  426631:	jne    0x42663b
  426633:	mov    BYTE PTR [ecx+0xa],0x7a
  426637:	mov    BYTE PTR [edx+0x8],0x2f
  42663b:	mov    BYTE PTR [edx+0xa],0x7a
  42663f:	mov    BYTE PTR [ecx+0x2],0x14
  426643:	leave  
  426644:	ret    
  426645:	push   ebp
  426646:	mov    ebp,esp
  426648:	push   ecx
  426649:	push   ecx
  42664a:	lea    eax,[ebp-0x8]
  42664d:	mov    DWORD PTR [ebp-0x4],eax
  426650:	mov    edx,DWORD PTR [ebp-0x4]
  426653:	mov    eax,0xf88b0bc3
  426658:	mov    DWORD PTR [edx],eax
  42665a:	mov    edx,DWORD PTR [ebp-0x8]
  42665d:	cmp    edx,eax
  42665f:	jne    0x426670
  426661:	mov    eax,DWORD PTR [ebp+0x8]
  426664:	mov    BYTE PTR [ecx+0x9],0xe
  426668:	mov    BYTE PTR [eax+0x7],0x57
  42666c:	mov    BYTE PTR [ecx+0x6],0xf
  426670:	mov    BYTE PTR [ecx+0x3],0x1e
  426674:	leave  
  426675:	ret    0x4
  426678:	push   ebp
  426679:	mov    ebp,esp
  42667b:	push   ecx
  42667c:	push   ecx
  42667d:	lea    eax,[ebp-0x8]
  426680:	mov    DWORD PTR [ebp-0x4],eax
  426683:	mov    edx,DWORD PTR [ebp-0x4]
  426686:	mov    eax,0x7e0da2f
  42668b:	mov    DWORD PTR [edx],eax
  42668d:	mov    edx,DWORD PTR [ebp-0x8]
  426690:	cmp    edx,eax
  426692:	jne    0x426698
  426694:	mov    BYTE PTR [ecx+0x7],0x57
  426698:	mov    eax,DWORD PTR [ebp+0x8]
  42669b:	mov    BYTE PTR [ecx+0x1],0x11
  42669f:	mov    BYTE PTR [eax+0x9],0x2e
  4266a3:	leave  
  4266a4:	ret    0x4
  4266a7:	push   ebp
  4266a8:	mov    ebp,esp
  4266aa:	push   ecx
  4266ab:	push   ecx
  4266ac:	lea    eax,[ebp-0x8]
  4266af:	mov    DWORD PTR [ebp-0x4],eax
  4266b2:	push   esi
  4266b3:	mov    esi,DWORD PTR [ebp-0x4]
  4266b6:	mov    eax,0x7060e30
  4266bb:	mov    DWORD PTR [esi],eax
  4266bd:	mov    esi,DWORD PTR [ebp-0x8]
  4266c0:	cmp    esi,eax
  4266c2:	pop    esi
  4266c3:	jne    0x4266cf
  4266c5:	mov    BYTE PTR [edx+0x4],0xb
  4266c9:	mov    WORD PTR [ecx+0x3],0xb1e
  4266cf:	mov    BYTE PTR [edx],0x3f
  4266d2:	leave  
  4266d3:	ret    
  4266d4:	push   ebp
  4266d5:	mov    ebp,esp
  4266d7:	push   ecx
  4266d8:	push   ecx
  4266d9:	lea    eax,[ebp-0x8]
  4266dc:	mov    DWORD PTR [ebp-0x4],eax
  4266df:	mov    edx,DWORD PTR [ebp-0x4]
  4266e2:	mov    eax,0xf8870b3f
  4266e7:	mov    DWORD PTR [edx],eax
  4266e9:	mov    edx,DWORD PTR [ebp-0x8]
  4266ec:	cmp    edx,eax
  4266ee:	jne    0x4266fb
  4266f0:	mov    eax,DWORD PTR [ebp+0x8]
  4266f3:	mov    BYTE PTR [ecx+0x8],0xf
  4266f7:	mov    BYTE PTR [eax+0x1],0x11
  4266fb:	mov    BYTE PTR [ecx+0x5],0x3
  4266ff:	leave  
  426700:	ret    0x4
  426703:	push   esi
  426704:	mov    ecx,edi
  426706:	call   0x4266d4
  42670b:	mov    edx,edi
  42670d:	mov    ecx,esi
  42670f:	mov    BYTE PTR [esi],0x1f
  426712:	call   0x4266a7
  426717:	push   esi
  426718:	mov    ecx,edi
  42671a:	mov    BYTE PTR [esi+0x5],0x3
  42671e:	call   0x426678
  426723:	push   esi
  426724:	mov    BYTE PTR [esi+0x6],0xf
  426728:	call   0x426645
  42672d:	mov    BYTE PTR [esi+0x2],0x14
  426731:	mov    edx,esi
  426733:	jmp    0x426615
  426738:	push   ebp
  426739:	mov    ebp,esp
  42673b:	push   ecx
  42673c:	mov    ecx,DWORD PTR [edx+0x194]
  426742:	push   esi
  426743:	mov    esi,DWORD PTR [ebp+0x8]
  426746:	mov    esi,DWORD PTR [esi]
  426748:	mov    DWORD PTR [ecx],esi
  42674a:	mov    ecx,DWORD PTR [edx+0x194]
  426750:	mov    ecx,DWORD PTR [ecx]
  426752:	mov    esi,DWORD PTR [edx+0x190]
  426758:	mov    DWORD PTR [esi],ecx
  42675a:	mov    eax,DWORD PTR [edx+0x194]
  426760:	mov    ecx,DWORD PTR [eax]
  426762:	mov    ecx,DWORD PTR [ecx+0x3c]
  426765:	add    ecx,DWORD PTR [eax]
  426767:	mov    DWORD PTR [ebp-0x4],0xf89ca5b9
  42676e:	mov    eax,DWORD PTR [ebp-0x4]
  426771:	movzx  ecx,WORD PTR [ecx+0x16]
  426775:	xor    eax,0x75108a8
  42677a:	add    eax,0x3272ef
  42677f:	pop    esi
  426780:	test   ecx,eax
  426782:	je     0x426790
  426784:	mov    eax,DWORD PTR [edx+0x1c8]
  42678a:	mov    DWORD PTR [eax],0xf89c85ba
  426790:	leave  
  426791:	ret    0x4
  426794:	push   ebp
  426795:	mov    ebp,esp
  426797:	sub    esp,0x70
  42679a:	and    DWORD PTR [ebp-0x20],0x0
  42679e:	mov    DWORD PTR [ebp-0x18],0xf89cb5b9
  4267a5:	mov    DWORD PTR [ebp-0x1c],0xf89c85f9
  4267ac:	mov    DWORD PTR [ebp-0x2c],0xf89c85bd
  4267b3:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  4267ba:	mov    DWORD PTR [ebp-0x2c],0xf89f05b9
  4267c1:	mov    eax,DWORD PTR [ebp+0x20]
  4267c4:	mov    eax,DWORD PTR [eax+0x194]
  4267ca:	mov    DWORD PTR [ebp-0xc],eax
  4267cd:	mov    eax,DWORD PTR [ebp+0x20]
  4267d0:	push   ebx
  4267d1:	push   esi
  4267d2:	mov    esi,DWORD PTR [eax+0x190]
  4267d8:	mov    eax,DWORD PTR [ebp+0x20]
  4267db:	mov    eax,DWORD PTR [eax+0x18c]
  4267e1:	mov    DWORD PTR [ebp-0x8],eax
  4267e4:	mov    eax,DWORD PTR [eax]
  4267e6:	push   edi
  4267e7:	mov    DWORD PTR [ebp-0x4],esi
  4267ea:	test   eax,eax
  4267ec:	jne    0x4267f9
  4267ee:	push   DWORD PTR [ebp+0x1c]
  4267f1:	mov    edx,DWORD PTR [ebp+0x20]
  4267f4:	call   0x426738
  4267f9:	mov    eax,DWORD PTR [esi]
  4267fb:	mov    ebx,DWORD PTR [esi]
  4267fd:	add    ebx,DWORD PTR [eax+0x3c]
  426800:	mov    eax,DWORD PTR [ebp+0xc]
  426803:	mov    ecx,DWORD PTR [ebp-0x8]
  426806:	mov    ecx,DWORD PTR [ecx]
  426808:	mov    esi,0x75108a8
  42680d:	xor    eax,esi
  42680f:	mov    edi,0x3272ef
  426814:	add    eax,edi
  426816:	cmp    eax,ecx
  426818:	jne    0x426a50
  42681e:	mov    eax,DWORD PTR [ebp-0xc]
  426821:	mov    eax,DWORD PTR [eax]
  426823:	mov    DWORD PTR [ebp-0x10],eax
  426826:	mov    eax,DWORD PTR [ebx+0x50]
  426829:	mov    DWORD PTR [ebp-0x68],eax
  42682c:	mov    eax,DWORD PTR [ebp-0x18]
  42682f:	xor    eax,esi
  426831:	add    eax,edi
  426833:	mov    DWORD PTR [ebp-0x64],eax
  426836:	mov    eax,DWORD PTR [ebp-0x14]
  426839:	and    DWORD PTR [ebp-0x6c],0x0
  42683d:	xor    eax,esi
  42683f:	add    eax,edi
  426841:	mov    DWORD PTR [ebp-0x60],eax
  426844:	lea    eax,[ebp-0x70]
  426847:	push   eax
  426848:	mov    eax,DWORD PTR [ebp+0x8]
  42684b:	xor    eax,esi
  42684d:	add    eax,edi
  42684f:	push   eax
  426850:	mov    eax,DWORD PTR [ebp+0x20]
  426853:	add    eax,0xaa
  426858:	push   eax
  426859:	mov    eax,DWORD PTR [ebp+0x20]
  42685c:	mov    eax,DWORD PTR [eax+0x198]
  426862:	mov    DWORD PTR [ebp-0x70],0x4
  426869:	push   DWORD PTR [eax]
  42686b:	mov    eax,DWORD PTR [ebp+0x10]
  42686e:	call   eax
  426870:	mov    ecx,DWORD PTR [ebp-0xc]
  426873:	mov    ecx,DWORD PTR [ecx]
  426875:	mov    edx,DWORD PTR [ebp-0x8]
  426878:	mov    DWORD PTR [ebp-0x6c],eax
  42687b:	mov    DWORD PTR [ebp+0x1c],eax
  42687e:	mov    DWORD PTR [edx],ecx
  426880:	mov    ecx,DWORD PTR [ebp-0x4]
  426883:	mov    DWORD PTR [ecx],eax
  426885:	mov    eax,DWORD PTR [ebx+0x50]
  426888:	mov    DWORD PTR [ebp-0x68],eax
  42688b:	mov    eax,DWORD PTR [ebp-0x1c]
  42688e:	xor    eax,esi
  426890:	add    eax,edi
  426892:	mov    DWORD PTR [ebp-0x64],eax
  426895:	lea    eax,[ebp-0x20]
  426898:	mov    DWORD PTR [ebp-0x60],eax
  42689b:	lea    eax,[ebp-0x70]
  42689e:	push   eax
  42689f:	mov    eax,DWORD PTR [ebp+0x8]
  4268a2:	xor    eax,esi
  4268a4:	add    eax,edi
  4268a6:	push   eax
  4268a7:	mov    eax,DWORD PTR [ebp+0x20]
  4268aa:	add    eax,0xee
  4268af:	push   eax
  4268b0:	mov    eax,DWORD PTR [ebp+0x20]
  4268b3:	mov    eax,DWORD PTR [eax+0x198]
  4268b9:	mov    DWORD PTR [ebp-0x70],0x4
  4268c0:	push   DWORD PTR [eax]
  4268c2:	mov    eax,DWORD PTR [ebp+0x10]
  4268c5:	call   eax
  4268c7:	test   eax,eax
  4268c9:	je     0x4268ee
  4268cb:	and    DWORD PTR [ebp+0xc],0x0
  4268cf:	cmp    DWORD PTR [ebx+0x50],0x0
  4268d3:	jbe    0x4268ee
  4268d5:	mov    eax,DWORD PTR [ebp+0x1c]
  4268d8:	mov    ecx,DWORD PTR [ebp-0x10]
  4268db:	sub    ecx,eax
  4268dd:	mov    dl,BYTE PTR [ecx+eax*1]
  4268e0:	inc    DWORD PTR [ebp+0xc]
  4268e3:	mov    BYTE PTR [eax],dl
  4268e5:	mov    edx,DWORD PTR [ebp+0xc]
  4268e8:	inc    eax
  4268e9:	cmp    edx,DWORD PTR [ebx+0x50]
  4268ec:	jb     0x4268dd
  4268ee:	mov    edx,DWORD PTR [ebp+0x1c]
  4268f1:	mov    ecx,DWORD PTR [edx+0x3c]
  4268f4:	add    ecx,edx
  4268f6:	mov    eax,DWORD PTR [ecx+0xa0]
  4268fc:	mov    ebx,DWORD PTR [ecx+0x28]
  4268ff:	add    eax,edx
  426901:	sub    edx,DWORD PTR [ebp-0x10]
  426904:	add    ebx,DWORD PTR [ebp+0x1c]
  426907:	mov    DWORD PTR [ebp+0xc],edx
  42690a:	mov    DWORD PTR [ebp-0x2c],ecx
  42690d:	mov    DWORD PTR [ebp-0x14],ebx
  426910:	mov    DWORD PTR [ebp-0x8],0x0
  426917:	jmp    0x426993
  426919:	add    edx,0xfffffff8
  42691c:	shr    edx,1
  42691e:	mov    DWORD PTR [ebp-0x18],edx
  426921:	je     0x42697f
  426923:	lea    edx,[eax+0x8]
  426926:	mov    DWORD PTR [ebp-0x4],edx
  426929:	mov    edx,DWORD PTR [ebp-0x18]
  42692c:	mov    DWORD PTR [ebp-0x18],edx
  42692f:	mov    edx,DWORD PTR [ebp-0x4]
  426932:	movzx  edx,WORD PTR [edx]
  426935:	mov    DWORD PTR [ebp-0x24],edx
  426938:	and    edx,0xfff
  42693e:	mov    DWORD PTR [ebp-0x28],edx
  426941:	mov    edx,DWORD PTR [ebp-0x24]
  426944:	shr    edx,0xc
  426947:	add    edx,0xffcd8d11
  42694d:	xor    edx,esi
  42694f:	cmp    edx,0xf89c85bc
  426955:	jne    0x426976
  426957:	mov    edx,DWORD PTR [ebp-0x28]
  42695a:	add    edx,DWORD PTR [ebp+0x1c]
  42695d:	mov    ebx,DWORD PTR [eax]
  42695f:	cmp    DWORD PTR [ebx+edx*1],0x0
  426963:	je     0x426973
  426965:	mov    ecx,DWORD PTR [ebp+0xc]
  426968:	add    ecx,DWORD PTR [ebx+edx*1]
  42696b:	mov    ebx,DWORD PTR [eax]
  42696d:	mov    DWORD PTR [edx+ebx*1],ecx
  426970:	mov    ecx,DWORD PTR [ebp-0x2c]
  426973:	mov    ebx,DWORD PTR [ebp-0x14]
  426976:	add    DWORD PTR [ebp-0x4],0x2
  42697a:	dec    DWORD PTR [ebp-0x18]
  42697d:	jne    0x42692f
  42697f:	mov    edx,DWORD PTR [ebp-0xc]
  426982:	add    DWORD PTR [ebp-0x8],edx
  426985:	mov    edx,DWORD PTR [ebp-0x8]
  426988:	cmp    edx,DWORD PTR [ecx+0xa4]
  42698e:	jae    0x4269a1
  426990:	add    eax,DWORD PTR [ebp-0xc]
  426993:	mov    edx,DWORD PTR [eax+0x4]
  426996:	mov    DWORD PTR [ebp-0xc],edx
  426999:	test   edx,edx
  42699b:	jne    0x426919
  4269a1:	mov    eax,DWORD PTR [ebp-0x10]
  4269a4:	mov    DWORD PTR [ebp-0x6c],eax
  4269a7:	mov    DWORD PTR [ebp-0x70],0x4
  4269ae:	mov    eax,DWORD PTR [ecx+0x50]
  4269b1:	mov    DWORD PTR [ebp-0x68],eax
  4269b4:	mov    eax,DWORD PTR [ebp-0x1c]
  4269b7:	xor    eax,esi
  4269b9:	add    eax,edi
  4269bb:	mov    DWORD PTR [ebp-0x64],eax
  4269be:	lea    eax,[ebp-0x20]
  4269c1:	mov    DWORD PTR [ebp-0x60],eax
  4269c4:	lea    eax,[ebp-0x70]
  4269c7:	push   eax
  4269c8:	mov    eax,DWORD PTR [ebp+0x8]
  4269cb:	xor    eax,esi
  4269cd:	add    eax,edi
  4269cf:	push   eax
  4269d0:	mov    eax,DWORD PTR [ebp+0x20]
  4269d3:	add    eax,0xee
  4269d8:	push   eax
  4269d9:	mov    eax,DWORD PTR [ebp+0x20]
  4269dc:	mov    eax,DWORD PTR [eax+0x198]
  4269e2:	push   DWORD PTR [eax]
  4269e4:	mov    eax,DWORD PTR [ebp+0x10]
  4269e7:	call   eax
  4269e9:	mov    eax,DWORD PTR [ebp+0x20]
  4269ec:	mov    eax,DWORD PTR [eax+0x180]
  4269f2:	add    eax,DWORD PTR [ebp+0xc]
  4269f5:	mov    ecx,DWORD PTR [ebp+0xc]
  4269f8:	push   DWORD PTR [ebp+0x18]
  4269fb:	mov    DWORD PTR [eax],ecx
  4269fd:	push   DWORD PTR [ebp+0x14]
  426a00:	push   DWORD PTR [ebp+0x1c]
  426a03:	call   ebx
  426a05:	mov    ecx,DWORD PTR [ebp+0xc]
  426a08:	add    ecx,DWORD PTR [ebp+0x20]
  426a0b:	lea    eax,[ebp+0x4]
  426a0e:	mov    DWORD PTR [ebp+0x20],ecx
  426a11:	mov    ecx,DWORD PTR [ebp+0x20]
  426a14:	mov    ecx,DWORD PTR [ebp+0x20]
  426a17:	mov    edx,DWORD PTR [ecx+0x190]
  426a1d:	mov    ecx,DWORD PTR [ebp+0x20]
  426a20:	mov    ecx,DWORD PTR [ecx+0x18c]
  426a26:	mov    esi,DWORD PTR [ecx]
  426a28:	cmp    DWORD PTR [eax],esi
  426a2a:	jb     0x426a4b
  426a2c:	mov    esi,DWORD PTR [edx]
  426a2e:	mov    edi,DWORD PTR [edx]
  426a30:	mov    esi,DWORD PTR [esi+0x3c]
  426a33:	lea    esi,[edi+esi*1+0x50]
  426a37:	mov    edi,DWORD PTR [ecx]
  426a39:	add    edi,DWORD PTR [esi]
  426a3b:	cmp    DWORD PTR [eax],edi
  426a3d:	jae    0x426a4b
  426a3f:	mov    esi,DWORD PTR [ecx]
  426a41:	mov    ecx,DWORD PTR [eax]
  426a43:	mov    edx,DWORD PTR [edx]
  426a45:	sub    ecx,esi
  426a47:	add    edx,ecx
  426a49:	mov    DWORD PTR [eax],edx
  426a4b:	mov    eax,DWORD PTR [ebp+0xc]
  426a4e:	jmp    0x426a52
  426a50:	xor    eax,eax
  426a52:	pop    edi
  426a53:	pop    esi
  426a54:	pop    ebx
  426a55:	leave  
  426a56:	ret    0x1c
  426a59:	push   ebp
  426a5a:	mov    ebp,esp
  426a5c:	sub    esp,0x1c
  426a5f:	push   esi
  426a60:	mov    esi,eax
  426a62:	mov    eax,DWORD PTR [ecx+0x190]
  426a68:	cmp    DWORD PTR [eax],0x0
  426a6b:	je     0x426b7b
  426a71:	test   edx,edx
  426a73:	je     0x426b7b
  426a79:	test   esi,esi
  426a7b:	je     0x426b7b
  426a81:	mov    eax,DWORD PTR [esi+0x88]
  426a87:	test   eax,eax
  426a89:	je     0x426b76
  426a8f:	cmp    DWORD PTR [esi+0x8c],0x10
  426a96:	je     0x426b76
  426a9c:	cmp    DWORD PTR [esi+0x34],edx
  426a9f:	je     0x426b76
  426aa5:	mov    esi,DWORD PTR [ecx+0x18c]
  426aab:	and    DWORD PTR [ebp-0x10],0x0
  426aaf:	mov    ecx,edx
  426ab1:	sub    ecx,DWORD PTR [esi]
  426ab3:	add    eax,edx
  426ab5:	movzx  edx,WORD PTR [eax+0xc]
  426ab9:	mov    DWORD PTR [ebp-0x1c],ecx
  426abc:	movzx  ecx,WORD PTR [eax+0xe]
  426ac0:	add    ecx,edx
  426ac2:	je     0x426b76
  426ac8:	lea    ecx,[eax+0x14]
  426acb:	push   ebx
  426acc:	mov    DWORD PTR [ebp-0x18],ecx
  426acf:	mov    esi,0x7fffffff
  426ad4:	push   edi
  426ad5:	test   DWORD PTR [ecx],esi
  426ad7:	je     0x426b58
  426ad9:	mov    edx,DWORD PTR [ecx]
  426adb:	and    DWORD PTR [ebp-0xc],0x0
  426adf:	and    edx,esi
  426ae1:	add    edx,eax
  426ae3:	movzx  edi,WORD PTR [edx+0xe]
  426ae7:	movzx  ebx,WORD PTR [edx+0xc]
  426aeb:	add    edi,ebx
  426aed:	je     0x426b58
  426aef:	lea    ecx,[edx+0x14]
  426af2:	mov    DWORD PTR [ebp-0x14],ecx
  426af5:	test   DWORD PTR [ecx],esi
  426af7:	je     0x426b3a
  426af9:	mov    ecx,DWORD PTR [ecx]
  426afb:	and    DWORD PTR [ebp-0x8],0x0
  426aff:	and    ecx,esi
  426b01:	add    ecx,eax
  426b03:	movzx  edi,WORD PTR [ecx+0xe]
  426b07:	movzx  ebx,WORD PTR [ecx+0xc]
  426b0b:	add    edi,ebx
  426b0d:	je     0x426b3a
  426b0f:	lea    edi,[ecx+0x14]
  426b12:	mov    DWORD PTR [ebp-0x4],edi
  426b15:	mov    edi,DWORD PTR [ebp-0x4]
  426b18:	mov    edi,DWORD PTR [edi]
  426b1a:	test   edi,edi
  426b1c:	je     0x426b24
  426b1e:	mov    ebx,DWORD PTR [ebp-0x1c]
  426b21:	add    DWORD PTR [edi+eax*1],ebx
  426b24:	movzx  edi,WORD PTR [ecx+0xe]
  426b28:	movzx  ebx,WORD PTR [ecx+0xc]
  426b2c:	inc    DWORD PTR [ebp-0x8]
  426b2f:	add    DWORD PTR [ebp-0x4],0x8
  426b33:	add    edi,ebx
  426b35:	cmp    DWORD PTR [ebp-0x8],edi
  426b38:	jb     0x426b15
  426b3a:	movzx  edi,WORD PTR [edx+0xe]
  426b3e:	movzx  ebx,WORD PTR [edx+0xc]
  426b42:	mov    ecx,DWORD PTR [ebp-0x14]
  426b45:	inc    DWORD PTR [ebp-0xc]
  426b48:	add    ecx,0x8
  426b4b:	add    edi,ebx
  426b4d:	mov    DWORD PTR [ebp-0x14],ecx
  426b50:	cmp    DWORD PTR [ebp-0xc],edi
  426b53:	jb     0x426af5
  426b55:	mov    ecx,DWORD PTR [ebp-0x18]
  426b58:	movzx  edx,WORD PTR [eax+0xe]
  426b5c:	movzx  edi,WORD PTR [eax+0xc]
  426b60:	inc    DWORD PTR [ebp-0x10]
  426b63:	add    ecx,0x8
  426b66:	add    edx,edi
  426b68:	mov    DWORD PTR [ebp-0x18],ecx
  426b6b:	cmp    DWORD PTR [ebp-0x10],edx
  426b6e:	jb     0x426ad5
  426b74:	pop    edi
  426b75:	pop    ebx
  426b76:	xor    eax,eax
  426b78:	inc    eax
  426b79:	jmp    0x426b7d
  426b7b:	xor    eax,eax
  426b7d:	pop    esi
  426b7e:	leave  
  426b7f:	ret    
  426b80:	push   ebp
  426b81:	mov    ebp,esp
  426b83:	mov    ecx,DWORD PTR [ecx+0x190]
  426b89:	mov    eax,DWORD PTR [ebp+0xc]
  426b8c:	sub    esp,0x10
  426b8f:	push   ebx
  426b90:	xor    ebx,ebx
  426b92:	push   esi
  426b93:	push   edi
  426b94:	cmp    DWORD PTR [ecx],ebx
  426b96:	je     0x426c1e
  426b9c:	cmp    eax,ebx
  426b9e:	je     0x426c1e
  426ba0:	cmp    DWORD PTR [eax+0x78],ebx
  426ba3:	jne    0x426baa
  426ba5:	xor    eax,eax
  426ba7:	inc    eax
  426ba8:	jmp    0x426c20
  426baa:	mov    eax,DWORD PTR [eax+0x78]
  426bad:	add    eax,DWORD PTR [ebp+0x8]
  426bb0:	mov    ecx,DWORD PTR [eax+0x1c]
  426bb3:	mov    edx,DWORD PTR [eax+0x24]
  426bb6:	mov    esi,DWORD PTR [eax+0x14]
  426bb9:	mov    edi,DWORD PTR [eax+0x18]
  426bbc:	add    ecx,DWORD PTR [ebp+0x8]
  426bbf:	add    edx,DWORD PTR [ebp+0x8]
  426bc2:	mov    DWORD PTR [ebp-0x4],esi
  426bc5:	cmp    esi,edi
  426bc7:	ja     0x426bcc
  426bc9:	mov    DWORD PTR [ebp-0x4],edi
  426bcc:	mov    DWORD PTR [ebp-0x8],ebx
  426bcf:	cmp    DWORD PTR [ebp-0x4],ebx
  426bd2:	jbe    0x426ba5
  426bd4:	cmp    ebx,DWORD PTR [eax+0x14]
  426bd7:	jae    0x426bdf
  426bd9:	movzx  esi,WORD PTR [edx+ebx*2]
  426bdd:	jmp    0x426be1
  426bdf:	mov    esi,ebx
  426be1:	lea    esi,[ecx+esi*4]
  426be4:	mov    edi,DWORD PTR [esi]
  426be6:	test   edi,edi
  426be8:	je     0x426c13
  426bea:	add    edi,DWORD PTR [ebp+0x8]
  426bed:	mov    DWORD PTR [ebp-0x10],edi
  426bf0:	cmp    edi,eax
  426bf2:	jbe    0x426c04
  426bf4:	mov    ebx,DWORD PTR [ebp+0xc]
  426bf7:	mov    ebx,DWORD PTR [ebx+0x7c]
  426bfa:	add    ebx,eax
  426bfc:	cmp    edi,ebx
  426bfe:	jae    0x426c04
  426c00:	mov    esi,DWORD PTR [esi]
  426c02:	jmp    0x426c0c
  426c04:	sub    edi,DWORD PTR [ebp+0x8]
  426c07:	mov    DWORD PTR [esi],edi
  426c09:	mov    esi,DWORD PTR [ebp-0x10]
  426c0c:	test   esi,esi
  426c0e:	je     0x426c1e
  426c10:	mov    ebx,DWORD PTR [ebp-0x8]
  426c13:	inc    ebx
  426c14:	mov    DWORD PTR [ebp-0x8],ebx
  426c17:	cmp    ebx,DWORD PTR [ebp-0x4]
  426c1a:	jb     0x426bd4
  426c1c:	jmp    0x426ba5
  426c1e:	xor    eax,eax
  426c20:	pop    edi
  426c21:	pop    esi
  426c22:	pop    ebx
  426c23:	leave  
  426c24:	ret    0x8
  426c27:	push   ebp
  426c28:	mov    ebp,esp
  426c2a:	sub    esp,0x2c
  426c2d:	mov    edx,0xf89c85b9
  426c32:	mov    DWORD PTR [ebp-0x4],edx
  426c35:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  426c3c:	mov    eax,DWORD PTR [ebp-0x4]
  426c3f:	mov    ecx,DWORD PTR [ebp-0x4]
  426c42:	mov    ecx,DWORD PTR [ebp-0x4]
  426c45:	mov    ecx,DWORD PTR [ebp-0x4]
  426c48:	mov    ecx,DWORD PTR [ebp-0x4]
  426c4b:	mov    ecx,DWORD PTR [ebp-0x4]
  426c4e:	push   ebx
  426c4f:	mov    ebx,DWORD PTR [ebp+0x10]
  426c52:	push   esi
  426c53:	mov    esi,0x75108a8
  426c58:	mov    DWORD PTR [ebp-0x10],0x352eb2f
  426c5f:	mov    ecx,DWORD PTR [ebp-0x4]
  426c62:	mov    ebx,DWORD PTR [ebx+0x190]
  426c68:	push   edi
  426c69:	mov    edi,0x3272ef
  426c6e:	xor    ecx,esi
  426c70:	xor    eax,esi
  426c72:	add    eax,edi
  426c74:	add    ecx,edi
  426c76:	mov    DWORD PTR [ebp-0x18],eax
  426c79:	cmp    ecx,DWORD PTR [ebx]
  426c7b:	je     0x426efc
  426c81:	mov    ebx,DWORD PTR [ebp-0x4]
  426c84:	mov    ecx,DWORD PTR [ebp+0xc]
  426c87:	xor    ebx,esi
  426c89:	add    ebx,edi
  426c8b:	cmp    ebx,ecx
  426c8d:	je     0x426efc
  426c93:	mov    ebx,DWORD PTR [ebp-0x4]
  426c96:	mov    ecx,DWORD PTR [ecx+0x80]
  426c9c:	xor    ebx,esi
  426c9e:	add    ebx,edi
  426ca0:	cmp    ecx,ebx
  426ca2:	je     0x426ef7
  426ca8:	add    ecx,DWORD PTR [ebp+0x8]
  426cab:	mov    DWORD PTR [ebp-0x2c],ecx
  426cae:	mov    ebx,edx
  426cb0:	xor    ebx,esi
  426cb2:	add    ebx,edi
  426cb4:	mov    DWORD PTR [ebp-0x10],ebx
  426cb7:	mov    ebx,DWORD PTR [ebp-0x10]
  426cba:	cmp    ebx,edx
  426cbc:	je     0x426cd0
  426cbe:	mov    edx,DWORD PTR [ebp-0x10]
  426cc1:	mov    ebx,DWORD PTR [ebp-0x4]
  426cc4:	imul   edx,edx,0x14
  426cc7:	xor    ebx,esi
  426cc9:	add    ebx,edi
  426ccb:	cmp    DWORD PTR [edx+ecx*1],ebx
  426cce:	jne    0x426ce7
  426cd0:	mov    edx,DWORD PTR [ebp-0x10]
  426cd3:	mov    ebx,DWORD PTR [ebp-0x4]
  426cd6:	imul   edx,edx,0x14
  426cd9:	xor    ebx,esi
  426cdb:	add    ebx,edi
  426cdd:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  426ce1:	je     0x426ee9
  426ce7:	mov    eax,DWORD PTR [ebp-0x4]
  426cea:	mov    ebx,DWORD PTR [ebp-0x4]
  426ced:	mov    eax,DWORD PTR [ebp-0x10]
  426cf0:	imul   eax,eax,0x14
  426cf3:	add    eax,ecx
  426cf5:	mov    ecx,DWORD PTR [eax+0x10]
  426cf8:	add    ecx,DWORD PTR [ebp+0x8]
  426cfb:	xor    ebx,esi
  426cfd:	mov    DWORD PTR [ebp-0x1c],ecx
  426d00:	mov    ecx,DWORD PTR [ebp-0x4]
  426d03:	mov    edx,DWORD PTR [ebp-0x4]
  426d06:	xor    ecx,esi
  426d08:	add    ecx,edi
  426d0a:	xor    edx,esi
  426d0c:	mov    DWORD PTR [ebp-0x24],ecx
  426d0f:	mov    ecx,DWORD PTR [eax]
  426d11:	add    edx,edi
  426d13:	add    ebx,edi
  426d15:	cmp    ecx,edx
  426d17:	je     0x426d1f
  426d19:	add    ecx,DWORD PTR [ebp+0x8]
  426d1c:	mov    DWORD PTR [ebp-0x24],ecx
  426d1f:	mov    ecx,DWORD PTR [ebp-0x4]
  426d22:	xor    ecx,esi
  426d24:	add    ecx,DWORD PTR [eax+0xc]
  426d27:	mov    eax,DWORD PTR [ebp+0x8]
  426d2a:	lea    eax,[ecx+eax*1+0x3272ef]
  426d31:	mov    DWORD PTR [ebp+0xc],eax
  426d34:	mov    DWORD PTR [ebp-0x28],0xf89c85be
  426d3b:	mov    eax,DWORD PTR [ebp+0x10]
  426d3e:	push   DWORD PTR [ebp+0xc]
  426d41:	mov    eax,DWORD PTR [eax+0x1e0]
  426d47:	call   DWORD PTR [eax]
  426d49:	mov    ecx,DWORD PTR [ebp-0x4]
  426d4c:	xor    ecx,esi
  426d4e:	add    ecx,edi
  426d50:	mov    DWORD PTR [ebp-0xc],eax
  426d53:	cmp    ecx,eax
  426d55:	jne    0x426d69
  426d57:	mov    eax,DWORD PTR [ebp+0x10]
  426d5a:	push   DWORD PTR [ebp+0xc]
  426d5d:	mov    eax,DWORD PTR [eax+0x1e0]
  426d63:	call   DWORD PTR [eax+0xc]
  426d66:	mov    DWORD PTR [ebp-0xc],eax
  426d69:	mov    DWORD PTR [ebp-0x20],0x7f661b22
  426d70:	mov    DWORD PTR [ebp-0x20],0xf89c9852
  426d77:	mov    eax,DWORD PTR [ebp-0x4]
  426d7a:	xor    eax,esi
  426d7c:	add    eax,edi
  426d7e:	cmp    eax,DWORD PTR [ebp-0xc]
  426d81:	jne    0x426da6
  426d83:	mov    eax,DWORD PTR [ebp-0x8]
  426d86:	mov    ecx,DWORD PTR [ebp-0x20]
  426d89:	xor    eax,esi
  426d8b:	xor    ecx,esi
  426d8d:	lea    ebx,[ebx+eax*1+0x3272ef]
  426d94:	mov    eax,DWORD PTR [ebp+0x10]
  426d97:	mov    eax,DWORD PTR [eax+0x1e0]
  426d9d:	add    ecx,edi
  426d9f:	imul   ecx,ebx
  426da2:	push   ecx
  426da3:	call   DWORD PTR [eax+0x24]
  426da6:	mov    eax,DWORD PTR [ebp-0x4]
  426da9:	xor    eax,esi
  426dab:	add    eax,edi
  426dad:	cmp    eax,DWORD PTR [ebp-0xc]
  426db0:	jne    0x426dc1
  426db2:	mov    eax,DWORD PTR [ebp-0x28]
  426db5:	xor    eax,esi
  426db7:	add    eax,edi
  426db9:	cmp    ebx,eax
  426dbb:	jbe    0x426d3b
  426dc1:	mov    eax,DWORD PTR [ebp-0x4]
  426dc4:	xor    eax,esi
  426dc6:	add    eax,edi
  426dc8:	cmp    eax,DWORD PTR [ebp-0xc]
  426dcb:	jne    0x426de4
  426dcd:	mov    eax,DWORD PTR [ebp-0x8]
  426dd0:	mov    ecx,DWORD PTR [ebp-0x18]
  426dd3:	xor    eax,esi
  426dd5:	lea    eax,[ecx+eax*1+0x3272ef]
  426ddc:	mov    DWORD PTR [ebp-0x18],eax
  426ddf:	jmp    0x426ed3
  426de4:	mov    DWORD PTR [ebp-0x14],0x1121b21
  426deb:	mov    DWORD PTR [ebp+0xc],0xe042d2f
  426df2:	mov    ebx,DWORD PTR [ebp-0x4]
  426df5:	xor    ebx,esi
  426df7:	add    ebx,edi
  426df9:	jmp    0x426ec0
  426dfe:	mov    eax,DWORD PTR [ebp-0x4]
  426e01:	xor    eax,esi
  426e03:	add    eax,edi
  426e05:	mov    DWORD PTR [ebp-0x14],eax
  426e08:	mov    eax,DWORD PTR [ebp-0x4]
  426e0b:	xor    eax,esi
  426e0d:	add    eax,edi
  426e0f:	mov    DWORD PTR [ebp+0xc],eax
  426e12:	mov    ecx,DWORD PTR [ebp-0x4]
  426e15:	mov    eax,DWORD PTR [ebp-0x24]
  426e18:	xor    ecx,esi
  426e1a:	add    ecx,edi
  426e1c:	cmp    ecx,eax
  426e1e:	je     0x426e26
  426e20:	mov    eax,DWORD PTR [eax+ebx*4]
  426e23:	mov    DWORD PTR [ebp-0x14],eax
  426e26:	mov    eax,DWORD PTR [ebp-0x1c]
  426e29:	mov    eax,DWORD PTR [eax+ebx*4]
  426e2c:	mov    DWORD PTR [ebp+0xc],eax
  426e2f:	mov    eax,DWORD PTR [ebp-0x4]
  426e32:	mov    ecx,DWORD PTR [ebp-0x14]
  426e35:	xor    eax,esi
  426e37:	add    eax,edi
  426e39:	cmp    eax,ecx
  426e3b:	je     0x426e66
  426e3d:	mov    eax,DWORD PTR [ebp-0x4]
  426e40:	mov    ecx,DWORD PTR [ebp-0x14]
  426e43:	xor    eax,esi
  426e45:	add    eax,edi
  426e47:	shr    ecx,0x1f
  426e4a:	cmp    eax,ecx
  426e4c:	je     0x426e66
  426e4e:	mov    ecx,DWORD PTR [ebp-0x14]
  426e51:	mov    eax,DWORD PTR [ebp+0x10]
  426e54:	mov    eax,DWORD PTR [eax+0x1e0]
  426e5a:	movzx  ecx,cx
  426e5d:	push   ecx
  426e5e:	push   DWORD PTR [ebp-0xc]
  426e61:	call   DWORD PTR [eax+0x8]
  426e64:	jmp    0x426e7f
  426e66:	mov    eax,DWORD PTR [ebp+0xc]
  426e69:	add    eax,DWORD PTR [ebp+0x8]
  426e6c:	mov    ecx,DWORD PTR [ebp+0x10]
  426e6f:	mov    ecx,DWORD PTR [ecx+0x1e0]
  426e75:	add    eax,0x2
  426e78:	push   eax
  426e79:	push   DWORD PTR [ebp-0xc]
  426e7c:	call   DWORD PTR [ecx+0x8]
  426e7f:	mov    DWORD PTR [ebp+0xc],eax
  426e82:	mov    eax,DWORD PTR [ebp-0x4]
  426e85:	mov    ecx,DWORD PTR [ebp+0xc]
  426e88:	xor    eax,esi
  426e8a:	add    eax,edi
  426e8c:	cmp    eax,ecx
  426e8e:	mov    eax,DWORD PTR [ebp-0x8]
  426e91:	jne    0x426ea4
  426e93:	mov    ecx,DWORD PTR [ebp-0x18]
  426e96:	xor    eax,esi
  426e98:	lea    eax,[ecx+eax*1+0x3272ef]
  426e9f:	mov    DWORD PTR [ebp-0x18],eax
  426ea2:	jmp    0x426eb4
  426ea4:	mov    ecx,DWORD PTR [ebp+0xc]
  426ea7:	xor    eax,esi
  426ea9:	add    eax,edi
  426eab:	imul   eax,ecx
  426eae:	mov    ecx,DWORD PTR [ebp-0x1c]
  426eb1:	mov    DWORD PTR [ecx+ebx*4],eax
  426eb4:	mov    eax,DWORD PTR [ebp-0x8]
  426eb7:	xor    eax,esi
  426eb9:	lea    ebx,[ebx+eax*1+0x3272ef]
  426ec0:	mov    eax,DWORD PTR [ebp-0x4]
  426ec3:	mov    ecx,DWORD PTR [ebp-0x1c]
  426ec6:	xor    eax,esi
  426ec8:	add    eax,edi
  426eca:	cmp    DWORD PTR [ecx+ebx*4],eax
  426ecd:	jne    0x426dfe
  426ed3:	mov    edx,DWORD PTR [ebp-0x10]
  426ed6:	mov    ecx,DWORD PTR [ebp-0x2c]
  426ed9:	mov    eax,DWORD PTR [ebp-0x18]
  426edc:	sub    edx,0x3272ee
  426ee2:	xor    edx,esi
  426ee4:	jmp    0x426cae
  426ee9:	mov    ecx,DWORD PTR [ebp-0x4]
  426eec:	xor    ecx,esi
  426eee:	add    ecx,edi
  426ef0:	cmp    eax,ecx
  426ef2:	mov    eax,DWORD PTR [ebp-0x4]
  426ef5:	jne    0x426eff
  426ef7:	mov    eax,DWORD PTR [ebp-0x8]
  426efa:	jmp    0x426eff
  426efc:	mov    eax,DWORD PTR [ebp-0x4]
  426eff:	xor    eax,esi
  426f01:	add    eax,edi
  426f03:	pop    edi
  426f04:	pop    esi
  426f05:	pop    ebx
  426f06:	leave  
  426f07:	ret    0xc
  426f0a:	push   ebp
  426f0b:	mov    ebp,esp
  426f0d:	sub    esp,0x28
  426f10:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  426f17:	mov    DWORD PTR [ebp-0x28],0xf89c85ba
  426f1e:	mov    eax,DWORD PTR [ebp+0xc]
  426f21:	mov    DWORD PTR [ebp+0xc],eax
  426f24:	push   esi
  426f25:	mov    eax,eax
  426f27:	mov    eax,DWORD PTR [ebp-0x4]
  426f2a:	mov    esi,DWORD PTR [ebp+0x8]
  426f2d:	mov    ecx,0x75108a8
  426f32:	xor    eax,ecx
  426f34:	mov    edx,0x3272ef
  426f39:	add    eax,edx
  426f3b:	cmp    esi,eax
  426f3d:	je     0x427064
  426f43:	mov    eax,DWORD PTR [ebp+0x8]
  426f46:	mov    esi,DWORD PTR [ebp+0x8]
  426f49:	add    esi,DWORD PTR [eax+0x3c]
  426f4c:	push   edi
  426f4d:	mov    DWORD PTR [ebp+0xc],esi
  426f50:	mov    DWORD PTR [ebp-0x1c],0xf89c85be
  426f57:	mov    eax,DWORD PTR [ebp-0x1c]
  426f5a:	mov    esi,DWORD PTR [ebp-0x4]
  426f5d:	mov    edi,DWORD PTR [ebp+0xc]
  426f60:	xor    esi,ecx
  426f62:	xor    eax,ecx
  426f64:	add    esi,edx
  426f66:	cmp    DWORD PTR [edi+eax*8+0x19397f0],esi
  426f6d:	je     0x42705e
  426f73:	mov    esi,DWORD PTR [ebp+0xc]
  426f76:	mov    eax,DWORD PTR [ebp+0x8]
  426f79:	add    eax,DWORD PTR [esi+0xa0]
  426f7f:	mov    esi,DWORD PTR [ebp+0x8]
  426f82:	mov    edi,DWORD PTR [ebp+0xc]
  426f85:	sub    esi,DWORD PTR [edi+0x34]
  426f88:	mov    edi,DWORD PTR [ebp-0x4]
  426f8b:	xor    edi,ecx
  426f8d:	add    edi,edx
  426f8f:	mov    DWORD PTR [ebp-0x24],esi
  426f92:	cmp    esi,edi
  426f94:	je     0x42705e
  426f9a:	mov    esi,DWORD PTR [ebp-0x4]
  426f9d:	xor    esi,ecx
  426f9f:	add    esi,edx
  426fa1:	mov    DWORD PTR [ebp-0x8],esi
  426fa4:	push   ebx
  426fa5:	mov    DWORD PTR [ebp-0x10],0xf89c85bc
  426fac:	jmp    0x427048
  426fb1:	mov    esi,DWORD PTR [ebp-0x4]
  426fb4:	xor    esi,ecx
  426fb6:	lea    edi,[ebx-0x8]
  426fb9:	add    esi,edx
  426fbb:	shr    edi,1
  426fbd:	cmp    esi,edi
  426fbf:	jae    0x42702e
  426fc1:	sub    edi,esi
  426fc3:	lea    ebx,[eax+esi*2+0x8]
  426fc7:	mov    DWORD PTR [ebp-0x18],edi
  426fca:	movzx  esi,WORD PTR [ebx]
  426fcd:	and    esi,0xfff
  426fd3:	mov    DWORD PTR [ebp-0x14],esi
  426fd6:	mov    edi,DWORD PTR [ebp-0x14]
  426fd9:	mov    esi,DWORD PTR [eax]
  426fdb:	sub    esi,edx
  426fdd:	add    edi,esi
  426fdf:	movzx  esi,WORD PTR [ebx]
  426fe2:	shr    esi,0xc
  426fe5:	xor    edi,ecx
  426fe7:	mov    DWORD PTR [ebp-0x20],edi
  426fea:	mov    DWORD PTR [ebp-0x14],esi
  426fed:	mov    esi,DWORD PTR [ebp-0x20]
  426ff0:	mov    edi,DWORD PTR [ebp+0x8]
  426ff3:	xor    esi,ecx
  426ff5:	lea    esi,[esi+edi*1+0x3272ef]
  426ffc:	mov    DWORD PTR [ebp-0x20],esi
  426fff:	mov    esi,DWORD PTR [ebp-0x10]
  427002:	mov    edi,DWORD PTR [ebp-0x14]
  427005:	xor    esi,ecx
  427007:	add    esi,edx
  427009:	cmp    edi,esi
  42700b:	jne    0x427023
  42700d:	mov    esi,DWORD PTR [ebp-0x10]
  427010:	mov    edi,DWORD PTR [ebp-0x14]
  427013:	xor    esi,ecx
  427015:	add    esi,edx
  427017:	cmp    edi,esi
  427019:	jne    0x427023
  42701b:	mov    esi,DWORD PTR [ebp-0x20]
  42701e:	mov    edi,DWORD PTR [ebp-0x24]
  427021:	add    DWORD PTR [esi],edi
  427023:	add    ebx,0x2
  427026:	dec    DWORD PTR [ebp-0x18]
  427029:	jne    0x426fca
  42702b:	mov    ebx,DWORD PTR [ebp-0xc]
  42702e:	add    DWORD PTR [ebp-0x8],ebx
  427031:	mov    esi,DWORD PTR [ebp-0x1c]
  427034:	mov    edi,DWORD PTR [ebp-0x8]
  427037:	mov    ebx,DWORD PTR [ebp+0xc]
  42703a:	xor    esi,ecx
  42703c:	cmp    edi,DWORD PTR [ebx+esi*8+0x19397f4]
  427043:	jae    0x42705d
  427045:	add    eax,DWORD PTR [ebp-0xc]
  427048:	mov    esi,DWORD PTR [ebp-0x4]
  42704b:	mov    ebx,DWORD PTR [eax+0x4]
  42704e:	xor    esi,ecx
  427050:	add    esi,edx
  427052:	mov    DWORD PTR [ebp-0xc],ebx
  427055:	cmp    ebx,esi
  427057:	jne    0x426fb1
  42705d:	pop    ebx
  42705e:	mov    eax,DWORD PTR [ebp-0x28]
  427061:	pop    edi
  427062:	jmp    0x427067
  427064:	mov    eax,DWORD PTR [ebp-0x4]
  427067:	xor    eax,ecx
  427069:	add    eax,edx
  42706b:	pop    esi
  42706c:	leave  
  42706d:	ret    0x8
  427070:	push   ebp
  427071:	mov    ebp,esp
  427073:	sub    esp,0xd8
  427079:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  427080:	mov    DWORD PTR [ebp-0x24],0xf89c85ba
  427087:	mov    eax,DWORD PTR [ebp-0x4]
  42708a:	push   ebx
  42708b:	push   esi
  42708c:	mov    esi,0x75108a8
  427091:	xor    eax,esi
  427093:	push   edi
  427094:	mov    edi,0x3272ef
  427099:	add    eax,edi
  42709b:	mov    DWORD PTR [ebp-0x18],eax
  42709e:	mov    eax,DWORD PTR [ebp-0x4]
  4270a1:	xor    eax,esi
  4270a3:	add    eax,edi
  4270a5:	mov    DWORD PTR [ebp-0x8],eax
  4270a8:	mov    ebx,DWORD PTR [ebp+0x20]
  4270ab:	mov    eax,DWORD PTR [ebp-0x1c]
  4270ae:	mov    ecx,DWORD PTR [ebp-0x1c]
  4270b1:	xor    eax,ecx
  4270b3:	mov    DWORD PTR [ebp-0x1c],eax
  4270b6:	add    DWORD PTR [ebp-0x1c],0xf89cb5b9
  4270bd:	mov    eax,DWORD PTR [ebp-0xc]
  4270c0:	mov    ecx,DWORD PTR [ebp-0xc]
  4270c3:	xor    eax,ecx
  4270c5:	mov    DWORD PTR [ebp-0xc],eax
  4270c8:	add    DWORD PTR [ebp-0xc],0xf89c85f9
  4270cf:	mov    eax,DWORD PTR [ebp-0x10]
  4270d2:	mov    ecx,DWORD PTR [ebp-0x10]
  4270d5:	xor    eax,ecx
  4270d7:	mov    DWORD PTR [ebp-0x10],eax
  4270da:	add    DWORD PTR [ebp-0x10],0xf89c85bd
  4270e1:	mov    eax,DWORD PTR [ebp-0x28]
  4270e4:	mov    ecx,DWORD PTR [ebp-0x28]
  4270e7:	xor    eax,ecx
  4270e9:	mov    DWORD PTR [ebp-0x28],eax
  4270ec:	add    DWORD PTR [ebp-0x28],0xf89f05b9
  4270f3:	mov    DWORD PTR [ebp+0x20],0xf89ceff6
  4270fa:	mov    eax,DWORD PTR [ebp+0x8]
  4270fd:	test   eax,eax
  4270ff:	je     0x427588
  427105:	mov    eax,DWORD PTR [ebp+0xc]
  427108:	test   eax,eax
  42710a:	je     0x427588
  427110:	mov    eax,DWORD PTR [ebp+0x18]
  427113:	test   eax,eax
  427115:	je     0x427588
  42711b:	mov    eax,DWORD PTR [ebp+0x20]
  42711e:	mov    ecx,DWORD PTR [ebp+0x8]
  427121:	xor    eax,0x8a8
  427126:	add    eax,0x72ef
  42712b:	cmp    WORD PTR [ecx],ax
  42712e:	jne    0x427588
  427134:	mov    eax,DWORD PTR [ebp-0x4]
  427137:	xor    eax,esi
  427139:	add    eax,edi
  42713b:	mov    DWORD PTR [ebp-0x30],eax
  42713e:	mov    eax,DWORD PTR [ebp-0x4]
  427141:	mov    ecx,DWORD PTR [ebp+0x8]
  427144:	mov    eax,DWORD PTR [ebp+0x8]
  427147:	add    eax,DWORD PTR [ecx+0x3c]
  42714a:	mov    DWORD PTR [ebp+0xc],eax
  42714d:	mov    eax,DWORD PTR [eax+0x50]
  427150:	test   eax,eax
  427152:	je     0x427588
  427158:	mov    DWORD PTR [ebp-0x2c],0xf88c85b9
  42715f:	mov    eax,DWORD PTR [ebp-0x2c]
  427162:	xor    eax,esi
  427164:	add    eax,edi
  427166:	mov    DWORD PTR [ebp-0x2c],eax
  427169:	mov    eax,DWORD PTR [ebp-0x4]
  42716c:	mov    eax,DWORD PTR [ebx+0x190]
  427172:	mov    ecx,DWORD PTR [eax]
  427174:	mov    ecx,DWORD PTR [ecx+0x3c]
  427177:	add    ecx,DWORD PTR [eax]
  427179:	mov    eax,DWORD PTR [ebp-0x4]
  42717c:	mov    eax,DWORD PTR [ebx+0x18c]
  427182:	mov    edx,DWORD PTR [eax]
  427184:	mov    DWORD PTR [ebp-0x20],ecx
  427187:	mov    DWORD PTR [ebp+0x20],edx
  42718a:	cmp    edx,edx
  42718c:	jne    0x4271c0
  42718e:	mov    eax,DWORD PTR [ebx+0x1e0]
  427194:	lea    edx,[ebp-0x18]
  427197:	push   edx
  427198:	mov    edx,DWORD PTR [ebp-0xc]
  42719b:	xor    edx,esi
  42719d:	add    edx,edi
  42719f:	push   edx
  4271a0:	push   DWORD PTR [ecx+0x50]
  4271a3:	push   DWORD PTR [ebp+0x20]
  4271a6:	call   DWORD PTR [eax+0x1c]
  4271a9:	mov    eax,DWORD PTR [ebp-0x20]
  4271ac:	mov    ecx,DWORD PTR [eax+0x54]
  4271af:	mov    eax,DWORD PTR [eax+0x50]
  4271b2:	sub    eax,ecx
  4271b4:	add    ecx,DWORD PTR [ebp+0x20]
  4271b7:	push   ecx
  4271b8:	call   0x427b23
  4271bd:	mov    edx,DWORD PTR [ebp+0x20]
  4271c0:	mov    eax,DWORD PTR [ebx+0x194]
  4271c6:	mov    DWORD PTR [eax],edx
  4271c8:	mov    eax,DWORD PTR [ebp+0xc]
  4271cb:	push   DWORD PTR [eax+0x54]
  4271ce:	push   DWORD PTR [ebp+0x8]
  4271d1:	push   edx
  4271d2:	call   0x427a19
  4271d7:	mov    ecx,DWORD PTR [ebp+0x20]
  4271da:	mov    eax,DWORD PTR [ecx+0x3c]
  4271dd:	add    eax,ecx
  4271df:	movzx  ecx,WORD PTR [eax+0x14]
  4271e3:	lea    ecx,[ecx+eax*1+0x18]
  4271e7:	mov    DWORD PTR [ebp+0x18],ecx
  4271ea:	mov    ecx,DWORD PTR [ebp-0x4]
  4271ed:	movzx  edx,WORD PTR [eax+0x6]
  4271f1:	xor    ecx,esi
  4271f3:	add    ecx,edi
  4271f5:	mov    DWORD PTR [ebp+0xc],eax
  4271f8:	cmp    edx,ecx
  4271fa:	je     0x4272a7
  427200:	mov    ecx,DWORD PTR [ebp-0x4]
  427203:	xor    ecx,esi
  427205:	add    ecx,edi
  427207:	mov    DWORD PTR [ebp-0x8],ecx
  42720a:	mov    ecx,DWORD PTR [ebp-0x24]
  42720d:	movzx  edx,WORD PTR [eax+0x6]
  427211:	xor    ecx,esi
  427213:	sub    edx,ecx
  427215:	sub    edx,edi
  427217:	cmp    DWORD PTR [ebp-0x8],edx
  42721a:	ja     0x4272a7
  427220:	mov    edx,DWORD PTR [ebp+0x18]
  427223:	add    edx,0x8
  427226:	mov    DWORD PTR [ebp+0x18],edx
  427229:	jmp    0x42722e
  42722b:	mov    edx,DWORD PTR [ebp+0x18]
  42722e:	mov    eax,DWORD PTR [eax+0x38]
  427231:	lea    ecx,[eax-0x1]
  427234:	mov    DWORD PTR [ebp-0x38],eax
  427237:	mov    eax,DWORD PTR [edx]
  427239:	test   eax,ecx
  42723b:	je     0x427244
  42723d:	not    ecx
  42723f:	and    eax,ecx
  427241:	add    eax,DWORD PTR [ebp-0x38]
  427244:	mov    ecx,DWORD PTR [edx+0x4]
  427247:	add    ecx,DWORD PTR [ebp+0x20]
  42724a:	push   ecx
  42724b:	call   0x427b23
  427250:	mov    edx,DWORD PTR [ebp-0x4]
  427253:	mov    eax,DWORD PTR [ebp+0x18]
  427256:	mov    ecx,DWORD PTR [eax+0x8]
  427259:	xor    edx,esi
  42725b:	add    edx,edi
  42725d:	cmp    ecx,edx
  42725f:	je     0x427278
  427261:	push   ecx
  427262:	mov    ecx,DWORD PTR [ebp+0x8]
  427265:	add    ecx,DWORD PTR [eax+0xc]
  427268:	mov    eax,DWORD PTR [eax+0x4]
  42726b:	add    eax,DWORD PTR [ebp+0x20]
  42726e:	push   ecx
  42726f:	push   eax
  427270:	call   0x427a19
  427275:	mov    eax,DWORD PTR [ebp+0x18]
  427278:	mov    ecx,DWORD PTR [ebp-0x24]
  42727b:	mov    edx,DWORD PTR [ebp-0x8]
  42727e:	add    eax,0x28
  427281:	xor    ecx,esi
  427283:	lea    ecx,[edx+ecx*1+0x3272ef]
  42728a:	mov    edx,DWORD PTR [ebp+0xc]
  42728d:	mov    DWORD PTR [ebp+0x18],eax
  427290:	mov    eax,DWORD PTR [ebp-0x24]
  427293:	movzx  edx,WORD PTR [edx+0x6]
  427297:	xor    eax,esi
  427299:	sub    edx,eax
  42729b:	mov    eax,DWORD PTR [ebp+0xc]
  42729e:	sub    edx,edi
  4272a0:	mov    DWORD PTR [ebp-0x8],ecx
  4272a3:	cmp    ecx,edx
  4272a5:	jbe    0x42722b
  4272a7:	mov    edx,DWORD PTR [ebx+0x18c]
  4272ad:	mov    ecx,DWORD PTR [ebp+0x20]
  4272b0:	cmp    ecx,DWORD PTR [edx]
  4272b2:	jne    0x4272db
  4272b4:	mov    eax,DWORD PTR [ebx+0x1e0]
  4272ba:	lea    edx,[ebp-0x18]
  4272bd:	push   edx
  4272be:	mov    edx,DWORD PTR [ebp-0x10]
  4272c1:	xor    edx,esi
  4272c3:	add    edx,edi
  4272c5:	push   edx
  4272c6:	mov    edx,DWORD PTR [ebp-0x20]
  4272c9:	push   DWORD PTR [edx+0x54]
  4272cc:	push   ecx
  4272cd:	call   DWORD PTR [eax+0x1c]
  4272d0:	test   eax,eax
  4272d2:	je     0x427579
  4272d8:	mov    eax,DWORD PTR [ebp+0xc]
  4272db:	mov    ecx,DWORD PTR [ebx+0x1c8]
  4272e1:	mov    ecx,DWORD PTR [ecx]
  4272e3:	xor    ecx,esi
  4272e5:	add    ecx,edi
  4272e7:	je     0x4274a4
  4272ed:	mov    eax,DWORD PTR [ebp-0x4]
  4272f0:	xor    eax,esi
  4272f2:	add    eax,edi
  4272f4:	and    DWORD PTR [ebp+0x8],0x0
  4272f8:	mov    DWORD PTR [ebp-0x14],eax
  4272fb:	mov    eax,0xf89c85dd
  427300:	lea    ecx,[eax-0x8]
  427303:	mov    DWORD PTR [ebp-0x58],0xf89c85d7
  42730a:	mov    DWORD PTR [ebp-0x54],0xf89c852d
  427311:	mov    DWORD PTR [ebp-0x50],eax
  427314:	mov    DWORD PTR [ebp-0x4c],ecx
  427317:	mov    DWORD PTR [ebp-0x48],ecx
  42731a:	mov    DWORD PTR [ebp-0x44],0xf89c85b9
  427321:	mov    edx,DWORD PTR [ebp+0x8]
  427324:	mov    ecx,0x8a8
  427329:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  42732e:	mov    edx,0x72ef
  427333:	add    cx,dx
  427336:	mov    edx,DWORD PTR [ebp+0x8]
  427339:	inc    DWORD PTR [ebp+0x8]
  42733c:	cmp    DWORD PTR [ebp+0x8],0x6
  427340:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  427348:	jb     0x427321
  42734a:	mov    ecx,0xf89c852b
  42734f:	mov    DWORD PTR [ebp-0xb0],eax
  427355:	mov    DWORD PTR [ebp-0x9c],eax
  42735b:	mov    DWORD PTR [ebp-0x74],eax
  42735e:	mov    DWORD PTR [ebp-0x70],eax
  427361:	lea    eax,[ecx+0x1]
  427364:	mov    edx,0xf89c85ff
  427369:	mov    DWORD PTR [ebp-0x64],eax
  42736c:	mov    DWORD PTR [ebp-0x60],eax
  42736f:	mov    DWORD PTR [ebp-0xb4],0xf89c85f5
  427379:	mov    DWORD PTR [ebp-0xac],ecx
  42737f:	mov    DWORD PTR [ebp-0xa8],edx
  427385:	mov    DWORD PTR [ebp-0xa4],0xf89c85d2
  42738f:	mov    DWORD PTR [ebp-0xa0],0xf89c85d7
  427399:	mov    DWORD PTR [ebp-0x98],0xf89c85fe
  4273a3:	mov    DWORD PTR [ebp-0x94],0xf89c85d7
  4273ad:	mov    DWORD PTR [ebp-0x90],0xf89c852d
  4273b7:	mov    DWORD PTR [ebp-0x8c],ecx
  4273bd:	mov    DWORD PTR [ebp-0x88],0xf89c8522
  4273c7:	mov    DWORD PTR [ebp-0x84],edx
  4273cd:	mov    DWORD PTR [ebp-0x80],0xf89c8528
  4273d4:	mov    DWORD PTR [ebp-0x7c],ecx
  4273d7:	mov    DWORD PTR [ebp-0x78],0xf89c85fa
  4273de:	mov    DWORD PTR [ebp-0x6c],ecx
  4273e1:	mov    DWORD PTR [ebp-0x68],0xf89c85de
  4273e8:	mov    DWORD PTR [ebp-0x5c],0xf89c85b9
  4273ef:	xor    eax,eax
  4273f1:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  4273f8:	xor    cl,0xa8
  4273fb:	sub    cl,0x11
  4273fe:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  427405:	inc    eax
  427406:	cmp    eax,0x17
  427409:	jb     0x4273f1
  42740b:	mov    eax,DWORD PTR [ebx+0x1e0]
  427411:	lea    ecx,[ebp-0xc0]
  427417:	push   ecx
  427418:	call   DWORD PTR [eax+0x4]
  42741b:	mov    ecx,DWORD PTR [ebx+0x1e0]
  427421:	lea    edx,[ebp-0xd8]
  427427:	push   edx
  427428:	push   eax
  427429:	call   DWORD PTR [ecx+0x8]
  42742c:	mov    DWORD PTR [ebp-0x40],eax
  42742f:	lea    eax,[ebp-0x14]
  427432:	push   eax
  427433:	mov    eax,DWORD PTR [ebx+0x18c]
  427439:	push   DWORD PTR [eax]
  42743b:	mov    eax,DWORD PTR [ebp-0x40]
  42743e:	call   eax
  427440:	mov    eax,DWORD PTR [ebp-0x4]
  427443:	xor    eax,esi
  427445:	add    eax,edi
  427447:	mov    DWORD PTR [ebp-0x34],eax
  42744a:	mov    ecx,DWORD PTR [ebp-0x4]
  42744d:	mov    eax,DWORD PTR [ebp-0x14]
  427450:	xor    ecx,esi
  427452:	add    ecx,edi
  427454:	cmp    eax,ecx
  427456:	je     0x4274a1
  427458:	mov    DWORD PTR [ebp-0x3c],eax
  42745b:	jmp    0x42746c
  42745d:	mov    eax,DWORD PTR [eax]
  42745f:	mov    ecx,DWORD PTR [ebp-0x3c]
  427462:	mov    DWORD PTR [ebp-0x14],eax
  427465:	mov    eax,DWORD PTR [ebp-0x14]
  427468:	cmp    eax,ecx
  42746a:	je     0x427479
  42746c:	mov    edx,DWORD PTR [eax+0x18]
  42746f:	mov    ecx,DWORD PTR [ebx+0x18c]
  427475:	cmp    edx,DWORD PTR [ecx]
  427477:	jne    0x42745d
  427479:	mov    ecx,DWORD PTR [ebx+0x18c]
  42747f:	mov    edx,DWORD PTR [eax+0x18]
  427482:	cmp    edx,DWORD PTR [ecx]
  427484:	jne    0x4274a1
  427486:	mov    ecx,DWORD PTR [ebx+0x190]
  42748c:	mov    edx,DWORD PTR [ebp-0x20]
  42748f:	mov    edx,DWORD PTR [edx+0x28]
  427492:	add    edx,DWORD PTR [ecx]
  427494:	mov    DWORD PTR [eax+0x1c],edx
  427497:	mov    eax,DWORD PTR [ebp-0x24]
  42749a:	xor    eax,esi
  42749c:	add    eax,edi
  42749e:	mov    DWORD PTR [ebp-0x34],eax
  4274a1:	mov    eax,DWORD PTR [ebp+0xc]
  4274a4:	push   ebx
  4274a5:	push   eax
  4274a6:	push   DWORD PTR [ebp+0x20]
  4274a9:	call   0x426c27
  4274ae:	test   eax,eax
  4274b0:	je     0x427579
  4274b6:	push   DWORD PTR [ebp+0xc]
  4274b9:	mov    ecx,ebx
  4274bb:	push   DWORD PTR [ebp+0x20]
  4274be:	call   0x426b80
  4274c3:	test   eax,eax
  4274c5:	je     0x427579
  4274cb:	mov    eax,DWORD PTR [ebp+0xc]
  4274ce:	mov    edx,DWORD PTR [ebp+0x20]
  4274d1:	mov    ecx,ebx
  4274d3:	call   0x426a59
  4274d8:	test   eax,eax
  4274da:	je     0x427579
  4274e0:	push   ebx
  4274e1:	push   DWORD PTR [ebp+0x20]
  4274e4:	call   0x426f0a
  4274e9:	test   eax,eax
  4274eb:	je     0x427579
  4274f1:	mov    eax,DWORD PTR [ebx+0x18c]
  4274f7:	mov    edx,DWORD PTR [ebp+0x20]
  4274fa:	cmp    edx,DWORD PTR [eax]
  4274fc:	jne    0x427518
  4274fe:	mov    eax,DWORD PTR [ebx+0x1e0]
  427504:	lea    ecx,[ebp-0x18]
  427507:	push   ecx
  427508:	push   DWORD PTR [ebp-0x18]
  42750b:	mov    ecx,DWORD PTR [ebp-0x20]
  42750e:	push   DWORD PTR [ecx+0x54]
  427511:	push   edx
  427512:	call   DWORD PTR [eax+0x1c]
  427515:	mov    edx,DWORD PTR [ebp+0x20]
  427518:	mov    eax,DWORD PTR [ebx+0x1c8]
  42751e:	mov    eax,DWORD PTR [eax]
  427520:	xor    eax,esi
  427522:	add    eax,edi
  427524:	je     0x42755d
  427526:	mov    ecx,DWORD PTR [ebp+0xc]
  427529:	mov    eax,DWORD PTR [ecx+0x28]
  42752c:	mov    DWORD PTR [ebp+0x8],0xf89ca5b9
  427533:	mov    esi,DWORD PTR [ebp+0x8]
  427536:	push   DWORD PTR [ebp+0x14]
  427539:	xor    esi,0x8a8
  42753f:	push   DWORD PTR [ebp+0x10]
  427542:	add    esi,0x72ef
  427548:	or     WORD PTR [ecx+0x16],si
  42754c:	add    eax,edx
  42754e:	push   edx
  42754f:	call   eax
  427551:	mov    DWORD PTR [ebx+0x1d0],0xf89c85ba
  42755b:	jmp    0x427567
  42755d:	mov    eax,DWORD PTR [ebp+0xc]
  427560:	mov    eax,DWORD PTR [eax+0x28]
  427563:	add    eax,edx
  427565:	call   eax
  427567:	mov    DWORD PTR [ebp-0x8],eax
  42756a:	mov    eax,DWORD PTR [ebp-0x8]
  42756d:	mov    ecx,DWORD PTR [ebp+0x1c]
  427570:	mov    DWORD PTR [ecx],eax
  427572:	mov    DWORD PTR [ebp-0x30],0x1
  427579:	cmp    DWORD PTR [ebp-0x30],0x0
  42757d:	jne    0x427583
  42757f:	and    DWORD PTR [ebp+0x20],0x0
  427583:	mov    eax,DWORD PTR [ebp+0x20]
  427586:	jmp    0x42758a
  427588:	xor    eax,eax
  42758a:	pop    edi
  42758b:	pop    esi
  42758c:	pop    ebx
  42758d:	leave  
  42758e:	ret    0x1c
  427591:	push   ebp
  427592:	mov    ebp,esp
  427594:	movzx  edx,WORD PTR [ecx+0x6]
  427598:	movzx  eax,WORD PTR [ecx+0x14]
  42759c:	push   ebx
  42759d:	push   edi
  42759e:	xor    edi,edi
  4275a0:	lea    eax,[eax+ecx*1+0x18]
  4275a4:	test   edx,edx
  4275a6:	je     0x4275c7
  4275a8:	mov    ecx,DWORD PTR [eax+0xc]
  4275ab:	lea    ebx,[ecx+esi*1]
  4275ae:	cmp    DWORD PTR [ebp+0x8],ebx
  4275b1:	jb     0x4275bf
  4275b3:	mov    ebx,DWORD PTR [eax+0x8]
  4275b6:	add    ebx,ecx
  4275b8:	add    ebx,esi
  4275ba:	cmp    DWORD PTR [ebp+0x8],ebx
  4275bd:	jb     0x4275c9
  4275bf:	add    eax,0x28
  4275c2:	inc    edi
  4275c3:	cmp    edi,edx
  4275c5:	jb     0x4275a8
  4275c7:	xor    eax,eax
  4275c9:	pop    edi
  4275ca:	pop    ebx
  4275cb:	pop    ebp
  4275cc:	ret    0x4
  4275cf:	push   ebp
  4275d0:	mov    ebp,esp
  4275d2:	sub    esp,0x34
  4275d5:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  4275dc:	mov    DWORD PTR [ebp-0x18],0xf89c85ba
  4275e3:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  4275ea:	mov    DWORD PTR [ebp-0x8],0xf89c85da
  4275f1:	mov    DWORD PTR [ebp-0x20],0xf89c85fa
  4275f8:	mov    DWORD PTR [ebp-0x2c],0xf89c8523
  4275ff:	mov    DWORD PTR [ebp-0x2c],0xf89c85c3
  427606:	mov    DWORD PTR [ebp-0x10],eax
  427609:	mov    eax,DWORD PTR [ebp+0x8]
  42760c:	mov    DWORD PTR [ebp-0x14],eax
  42760f:	mov    eax,DWORD PTR [ebp-0xc]
  427612:	push   ebx
  427613:	mov    ecx,0x75108a8
  427618:	xor    eax,ecx
  42761a:	push   esi
  42761b:	mov    esi,DWORD PTR [ebp-0x10]
  42761e:	mov    edx,0x3272ef
  427623:	add    eax,edx
  427625:	push   edi
  427626:	cmp    esi,eax
  427628:	je     0x427807
  42762e:	mov    eax,DWORD PTR [ebp-0xc]
  427631:	mov    esi,DWORD PTR [ebp-0x14]
  427634:	xor    eax,ecx
  427636:	add    eax,edx
  427638:	cmp    esi,eax
  42763a:	je     0x427807
  427640:	mov    eax,DWORD PTR [ebp-0xc]
  427643:	xor    eax,ecx
  427645:	add    eax,edx
  427647:	mov    DWORD PTR [ebp-0x24],eax
  42764a:	mov    eax,DWORD PTR [ebp-0xc]
  42764d:	xor    eax,ecx
  42764f:	add    eax,edx
  427651:	mov    DWORD PTR [ebp-0x28],eax
  427654:	mov    edi,DWORD PTR [ebp-0x20]
  427657:	mov    ebx,DWORD PTR [ebp-0x8]
  42765a:	mov    esi,0x8a8
  42765f:	xor    edi,esi
  427661:	mov    eax,0x72ef
  427666:	xor    ebx,esi
  427668:	add    edi,eax
  42766a:	add    ebx,eax
  42766c:	sub    ebx,edi
  42766e:	mov    WORD PTR [ebp-0x8],bx
  427672:	jmp    0x427737
  427677:	mov    edi,DWORD PTR [ebp-0xc]
  42767a:	mov    bx,WORD PTR [ebp-0x4]
  42767e:	xor    edi,esi
  427680:	add    edi,eax
  427682:	cmp    bx,di
  427685:	je     0x427779
  42768b:	mov    edi,DWORD PTR [ebp-0xc]
  42768e:	mov    ebx,DWORD PTR [ebp+0xc]
  427691:	xor    edi,ecx
  427693:	add    edi,edx
  427695:	cmp    ebx,edi
  427697:	mov    di,WORD PTR [ebp-0x4]
  42769b:	mov    bx,WORD PTR [ebp+0x8]
  42769f:	je     0x42770a
  4276a1:	cmp    bx,di
  4276a4:	je     0x427713
  4276a6:	mov    edi,DWORD PTR [ebp-0x20]
  4276a9:	mov    bx,WORD PTR [ebp+0x8]
  4276ad:	xor    edi,esi
  4276af:	add    edi,eax
  4276b1:	cmp    bx,di
  4276b4:	jb     0x4276d4
  4276b6:	mov    edi,DWORD PTR [ebp-0x2c]
  4276b9:	mov    bx,WORD PTR [ebp+0x8]
  4276bd:	xor    edi,esi
  4276bf:	add    edi,eax
  4276c1:	cmp    bx,di
  4276c4:	ja     0x4276d4
  4276c6:	movzx  edi,WORD PTR [ebp+0x8]
  4276ca:	movzx  ebx,WORD PTR [ebp-0x8]
  4276ce:	add    edi,ebx
  4276d0:	mov    WORD PTR [ebp+0x8],di
  4276d4:	mov    edi,DWORD PTR [ebp-0x20]
  4276d7:	mov    bx,WORD PTR [ebp-0x4]
  4276db:	xor    edi,esi
  4276dd:	add    edi,eax
  4276df:	cmp    bx,di
  4276e2:	jb     0x427702
  4276e4:	mov    edi,DWORD PTR [ebp-0x2c]
  4276e7:	mov    bx,WORD PTR [ebp-0x4]
  4276eb:	xor    edi,esi
  4276ed:	add    edi,eax
  4276ef:	cmp    bx,di
  4276f2:	ja     0x427702
  4276f4:	movzx  edi,WORD PTR [ebp-0x4]
  4276f8:	movzx  ebx,WORD PTR [ebp-0x8]
  4276fc:	add    edi,ebx
  4276fe:	mov    WORD PTR [ebp-0x4],di
  427702:	mov    di,WORD PTR [ebp-0x4]
  427706:	mov    bx,WORD PTR [ebp+0x8]
  42770a:	cmp    bx,di
  42770d:	jne    0x427807
  427713:	mov    edi,DWORD PTR [ebp-0x1c]
  427716:	mov    ebx,DWORD PTR [ebp-0x10]
  427719:	xor    edi,ecx
  42771b:	lea    edi,[edi+ebx*1+0x3272ef]
  427722:	mov    DWORD PTR [ebp-0x10],edi
  427725:	mov    edi,DWORD PTR [ebp-0x1c]
  427728:	mov    ebx,DWORD PTR [ebp-0x14]
  42772b:	xor    edi,ecx
  42772d:	lea    edi,[edi+ebx*1+0x3272ef]
  427734:	mov    DWORD PTR [ebp-0x14],edi
  427737:	mov    edi,DWORD PTR [ebp-0x24]
  42773a:	mov    ebx,DWORD PTR [ebp-0x10]
  42773d:	mov    di,WORD PTR [ebx+edi*2]
  427741:	mov    WORD PTR [ebp+0x8],di
  427745:	mov    edi,DWORD PTR [ebp-0x28]
  427748:	mov    ebx,DWORD PTR [ebp-0x14]
  42774b:	mov    di,WORD PTR [ebx+edi*2]
  42774f:	mov    WORD PTR [ebp-0x4],di
  427753:	mov    edi,DWORD PTR [ebp-0xc]
  427756:	mov    bx,WORD PTR [ebp+0x8]
  42775a:	xor    edi,esi
  42775c:	add    edi,eax
  42775e:	cmp    bx,di
  427761:	jne    0x427677
  427767:	mov    eax,DWORD PTR [ebp-0x18]
  42776a:	mov    esi,DWORD PTR [ebp-0xc]
  42776d:	xor    eax,ecx
  42776f:	add    eax,edx
  427771:	imul   eax,esi
  427774:	mov    DWORD PTR [ebp-0xc],eax
  427777:	jmp    0x42778b
  427779:	mov    eax,DWORD PTR [ebp-0xc]
  42777c:	mov    esi,DWORD PTR [ebp-0x18]
  42777f:	xor    eax,ecx
  427781:	lea    eax,[eax+esi*1+0x3272ef]
  427788:	mov    DWORD PTR [ebp-0x18],eax
  42778b:	mov    eax,DWORD PTR [ebp-0x24]
  42778e:	sub    eax,edx
  427790:	xor    eax,ecx
  427792:	mov    DWORD PTR [ebp-0x30],eax
  427795:	mov    eax,DWORD PTR [ebp-0x28]
  427798:	sub    eax,edx
  42779a:	xor    eax,ecx
  42779c:	mov    DWORD PTR [ebp-0x34],eax
  42779f:	mov    eax,DWORD PTR [ebp-0x34]
  4277a2:	mov    esi,DWORD PTR [ebp-0x1c]
  4277a5:	xor    esi,ecx
  4277a7:	add    esi,edx
  4277a9:	xor    eax,ecx
  4277ab:	add    eax,0x3272ef
  4277b0:	imul   esi,eax
  4277b3:	mov    eax,DWORD PTR [ebp-0x14]
  4277b6:	movzx  eax,WORD PTR [esi+eax*1]
  4277ba:	mov    esi,DWORD PTR [ebp-0x30]
  4277bd:	mov    edi,DWORD PTR [ebp-0x1c]
  4277c0:	xor    esi,ecx
  4277c2:	add    esi,edx
  4277c4:	xor    edi,ecx
  4277c6:	add    edi,edx
  4277c8:	imul   edi,esi
  4277cb:	mov    esi,DWORD PTR [ebp-0x10]
  4277ce:	movzx  esi,WORD PTR [edi+esi*1]
  4277d2:	sub    eax,edx
  4277d4:	sub    esi,edx
  4277d6:	xor    eax,ecx
  4277d8:	xor    esi,ecx
  4277da:	cmp    esi,eax
  4277dc:	jne    0x427807
  4277de:	mov    eax,DWORD PTR [ebp-0x30]
  4277e1:	mov    esi,DWORD PTR [ebp-0x1c]
  4277e4:	xor    eax,ecx
  4277e6:	add    eax,0x3272ef
  4277eb:	xor    esi,ecx
  4277ed:	add    esi,edx
  4277ef:	imul   esi,eax
  4277f2:	mov    eax,DWORD PTR [ebp-0x10]
  4277f5:	movzx  eax,WORD PTR [esi+eax*1]
  4277f9:	mov    esi,DWORD PTR [ebp-0xc]
  4277fc:	sub    eax,edx
  4277fe:	xor    eax,ecx
  427800:	cmp    eax,esi
  427802:	mov    eax,DWORD PTR [ebp-0xc]
  427805:	je     0x42780a
  427807:	mov    eax,DWORD PTR [ebp-0x18]
  42780a:	pop    edi
  42780b:	xor    eax,ecx
  42780d:	pop    esi
  42780e:	add    eax,edx
  427810:	pop    ebx
  427811:	leave  
  427812:	ret    0x8
  427815:	push   ebp
  427816:	mov    ebp,esp
  427818:	push   ecx
  427819:	mov    cx,WORD PTR [eax]
  42781c:	push   esi
  42781d:	mov    esi,0x3b59
  427822:	sub    cx,si
  427825:	mov    esi,0x8a96
  42782a:	xor    cx,si
  42782d:	mov    esi,0x4e31
  427832:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  427839:	mov    edx,0xf89c85b9
  42783e:	cmp    cx,si
  427841:	je     0x4278a0
  427843:	push   ebx
  427844:	push   edi
  427845:	movzx  ecx,cx
  427848:	mov    edi,0xffcd8d11
  42784d:	mov    esi,0x75108a8
  427852:	mov    ebx,0x4f95
  427857:	cmp    cx,bx
  42785a:	jne    0x42785f
  42785c:	mov    DWORD PTR [ebp-0x4],edx
  42785f:	lea    edx,[edi+0x1]
  427862:	xor    edx,esi
  427864:	mov    edi,edx
  427866:	xor    edi,esi
  427868:	mov    cx,WORD PTR [eax+edi*2+0x64e5de]
  427870:	mov    ebx,0x3b59
  427875:	sub    cx,bx
  427878:	mov    ebx,0x8a96
  42787d:	xor    cx,bx
  427880:	mov    ebx,0x4e31
  427885:	cmp    cx,bx
  427888:	jne    0x427852
  42788a:	mov    ecx,DWORD PTR [ebp-0x4]
  42788d:	pop    edi
  42788e:	pop    ebx
  42788f:	cmp    ecx,0xf89c85b8
  427895:	je     0x4278a0
  427897:	xor    ecx,esi
  427899:	lea    eax,[eax+ecx*2+0x64e5e0]
  4278a0:	pop    esi
  4278a1:	leave  
  4278a2:	ret    
  4278a3:	push   ebp
  4278a4:	mov    ebp,esp
  4278a6:	push   ecx
  4278a7:	push   esi
  4278a8:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  4278af:	mov    esi,0xf89c85b9
  4278b4:	call   0x427815
  4278b9:	mov    cl,BYTE PTR [eax]
  4278bb:	inc    cl
  4278bd:	xor    cl,0x7b
  4278c0:	cmp    cl,0x7a
  4278c3:	je     0x427928
  4278c5:	push   ebx
  4278c6:	push   edi
  4278c7:	mov    edx,eax
  4278c9:	mov    edi,0xffcd8d11
  4278ce:	mov    ecx,0x75108a8
  4278d3:	mov    dx,WORD PTR [edx]
  4278d6:	mov    ebx,0x3b59
  4278db:	sub    dx,bx
  4278de:	mov    ebx,0x8a96
  4278e3:	xor    dx,bx
  4278e6:	mov    ebx,0x4e43
  4278eb:	cmp    dx,bx
  4278ee:	jne    0x4278f3
  4278f0:	mov    DWORD PTR [ebp-0x4],esi
  4278f3:	lea    esi,[edi+0x1]
  4278f6:	xor    esi,ecx
  4278f8:	mov    edi,esi
  4278fa:	xor    edi,ecx
  4278fc:	lea    edx,[eax+edi*2+0x64e5de]
  427903:	mov    bl,BYTE PTR [edx]
  427905:	inc    bl
  427907:	xor    bl,0x7b
  42790a:	cmp    bl,0x7a
  42790d:	jne    0x4278d3
  42790f:	mov    edx,DWORD PTR [ebp-0x4]
  427912:	pop    edi
  427913:	pop    ebx
  427914:	cmp    edx,0xf89c85b8
  42791a:	je     0x427928
  42791c:	xor    edx,ecx
  42791e:	xor    ecx,ecx
  427920:	mov    WORD PTR [eax+edx*2+0x64e5de],cx
  427928:	pop    esi
  427929:	leave  
  42792a:	ret    
  42792b:	push   ebp
  42792c:	mov    ebp,esp
  42792e:	push   ecx
  42792f:	push   esi
  427930:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  427937:	mov    esi,0xf89c85b9
  42793c:	call   0x427815
  427941:	mov    cx,WORD PTR [eax]
  427944:	mov    edx,0x3b59
  427949:	sub    cx,dx
  42794c:	mov    edx,0x8a96
  427951:	xor    cx,dx
  427954:	mov    edx,0x4e31
  427959:	cmp    cx,dx
  42795c:	je     0x4279b5
  42795e:	push   ebx
  42795f:	push   edi
  427960:	movzx  ecx,cx
  427963:	mov    edx,0xffcd8d11
  427968:	mov    edi,0x75108a8
  42796d:	mov    ebx,0x4e43
  427972:	cmp    cx,bx
  427975:	jne    0x42797a
  427977:	mov    DWORD PTR [ebp-0x4],esi
  42797a:	lea    esi,[edx+0x1]
  42797d:	xor    esi,edi
  42797f:	mov    edx,esi
  427981:	xor    edx,edi
  427983:	mov    cx,WORD PTR [eax+edx*2+0x64e5de]
  42798b:	mov    ebx,0x3b59
  427990:	sub    cx,bx
  427993:	mov    ebx,0x8a96
  427998:	xor    cx,bx
  42799b:	mov    ebx,0x4e31
  4279a0:	cmp    cx,bx
  4279a3:	jne    0x42796d
  4279a5:	cmp    DWORD PTR [ebp-0x4],0xf89c85b8
  4279ac:	pop    edi
  4279ad:	pop    ebx
  4279ae:	je     0x4279b5
  4279b0:	xor    eax,eax
  4279b2:	inc    eax
  4279b3:	jmp    0x4279b7
  4279b5:	xor    eax,eax
  4279b7:	pop    esi
  4279b8:	leave  
  4279b9:	ret    
  4279ba:	push   ebp
  4279bb:	mov    ebp,esp
  4279bd:	push   ecx
  4279be:	mov    eax,DWORD PTR [ebp+0x8]
  4279c1:	movzx  ecx,WORD PTR [eax]
  4279c4:	push   esi
  4279c5:	lea    eax,[ecx-0x3b59]
  4279cb:	mov    esi,0x8a96
  4279d0:	push   edi
  4279d1:	xor    eax,esi
  4279d3:	mov    edi,0x4e31
  4279d8:	mov    DWORD PTR [ebp-0x4],edx
  4279db:	cmp    ax,di
  4279de:	je     0x427a0b
  4279e0:	mov    eax,DWORD PTR [ebp+0x8]
  4279e3:	sub    eax,edx
  4279e5:	mov    DWORD PTR [ebp+0x8],eax
  4279e8:	jmp    0x4279ed
  4279ea:	mov    eax,DWORD PTR [ebp+0x8]
  4279ed:	mov    WORD PTR [edx],cx
  4279f0:	add    edx,0x2
  4279f3:	movzx  edi,WORD PTR [eax+edx*1]
  4279f7:	mov    ecx,edi
  4279f9:	add    edi,0xffffc4a7
  4279ff:	xor    edi,esi
  427a01:	mov    eax,0x4e31
  427a06:	cmp    di,ax
  427a09:	jne    0x4279ea
  427a0b:	xor    eax,eax
  427a0d:	pop    edi
  427a0e:	mov    WORD PTR [edx],ax
  427a11:	mov    eax,DWORD PTR [ebp-0x4]
  427a14:	pop    esi
  427a15:	leave  
  427a16:	ret    0x4
  427a19:	push   ebp
  427a1a:	mov    ebp,esp
  427a1c:	sub    esp,0x18
  427a1f:	mov    DWORD PTR [ebp-0x8],0xf89c85b9
  427a26:	mov    DWORD PTR [ebp-0x18],0xf89c85ba
  427a2d:	mov    ecx,DWORD PTR [ebp-0x8]
  427a30:	push   esi
  427a31:	mov    eax,0x75108a8
  427a36:	xor    ecx,eax
  427a38:	mov    esi,0x3272ef
  427a3d:	add    ecx,esi
  427a3f:	mov    DWORD PTR [ebp-0x4],ecx
  427a42:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  427a49:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  427a50:	push   edi
  427a51:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  427a58:	jmp    0x427af9
  427a5d:	mov    ecx,DWORD PTR [ebp-0x4]
  427a60:	mov    edx,DWORD PTR [ebp+0x10]
  427a63:	sub    edx,ecx
  427a65:	mov    ecx,DWORD PTR [ebp-0xc]
  427a68:	xor    ecx,eax
  427a6a:	add    ecx,esi
  427a6c:	cmp    edx,ecx
  427a6e:	jbe    0x427a8b
  427a70:	mov    edx,DWORD PTR [ebp-0x4]
  427a73:	add    edx,DWORD PTR [ebp+0x8]
  427a76:	mov    ecx,DWORD PTR [ebp-0x4]
  427a79:	add    ecx,DWORD PTR [ebp+0xc]
  427a7c:	mov    edi,DWORD PTR [ecx]
  427a7e:	mov    DWORD PTR [edx],edi
  427a80:	mov    ecx,DWORD PTR [ecx+0x4]
  427a83:	mov    DWORD PTR [edx+0x4],ecx
  427a86:	mov    ecx,DWORD PTR [ebp-0xc]
  427a89:	jmp    0x427ad8
  427a8b:	mov    ecx,DWORD PTR [ebp-0x4]
  427a8e:	mov    edx,DWORD PTR [ebp+0x10]
  427a91:	sub    edx,ecx
  427a93:	mov    ecx,DWORD PTR [ebp-0x10]
  427a96:	xor    ecx,eax
  427a98:	add    ecx,esi
  427a9a:	cmp    edx,ecx
  427a9c:	mov    ecx,DWORD PTR [ebp-0x4]
  427a9f:	jbe    0x427ab3
  427aa1:	add    ecx,DWORD PTR [ebp+0x8]
  427aa4:	mov    edx,DWORD PTR [ebp-0x4]
  427aa7:	add    edx,DWORD PTR [ebp+0xc]
  427aaa:	mov    edx,DWORD PTR [edx]
  427aac:	mov    DWORD PTR [ecx],edx
  427aae:	mov    ecx,DWORD PTR [ebp-0x10]
  427ab1:	jmp    0x427ad8
  427ab3:	mov    edx,DWORD PTR [ebp+0x10]
  427ab6:	sub    edx,ecx
  427ab8:	mov    ecx,DWORD PTR [ebp-0x14]
  427abb:	xor    ecx,eax
  427abd:	add    ecx,esi
  427abf:	cmp    edx,ecx
  427ac1:	mov    ecx,DWORD PTR [ebp-0x4]
  427ac4:	jbe    0x427ae9
  427ac6:	add    ecx,DWORD PTR [ebp+0x8]
  427ac9:	mov    edx,DWORD PTR [ebp-0x4]
  427acc:	add    edx,DWORD PTR [ebp+0xc]
  427acf:	mov    dx,WORD PTR [edx]
  427ad2:	mov    WORD PTR [ecx],dx
  427ad5:	mov    ecx,DWORD PTR [ebp-0x14]
  427ad8:	mov    edx,DWORD PTR [ebp-0x4]
  427adb:	xor    ecx,eax
  427add:	lea    ecx,[ecx+edx*1+0x3272ef]
  427ae4:	mov    DWORD PTR [ebp-0x4],ecx
  427ae7:	jmp    0x427af9
  427ae9:	add    ecx,DWORD PTR [ebp+0x8]
  427aec:	mov    edx,DWORD PTR [ebp-0x4]
  427aef:	add    edx,DWORD PTR [ebp+0xc]
  427af2:	mov    dl,BYTE PTR [edx]
  427af4:	mov    BYTE PTR [ecx],dl
  427af6:	inc    DWORD PTR [ebp-0x4]
  427af9:	mov    ecx,DWORD PTR [ebp-0x18]
  427afc:	mov    edx,DWORD PTR [ebp+0x10]
  427aff:	xor    ecx,eax
  427b01:	add    ecx,esi
  427b03:	imul   ecx,edx
  427b06:	mov    edx,DWORD PTR [ebp-0x8]
  427b09:	mov    edi,DWORD PTR [ebp-0x4]
  427b0c:	xor    edx,eax
  427b0e:	lea    edx,[edx+edi*1+0x3272ef]
  427b15:	cmp    edx,ecx
  427b17:	jb     0x427a5d
  427b1d:	pop    edi
  427b1e:	pop    esi
  427b1f:	leave  
  427b20:	ret    0xc
  427b23:	push   ebp
  427b24:	mov    ebp,esp
  427b26:	sub    esp,0xc
  427b29:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  427b30:	push   esi
  427b31:	mov    esi,eax
  427b33:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  427b3a:	mov    edx,DWORD PTR [ebp-0x4]
  427b3d:	mov    eax,0x75108a8
  427b42:	xor    edx,eax
  427b44:	mov    ecx,0x3272ef
  427b49:	add    edx,ecx
  427b4b:	cmp    esi,edx
  427b4d:	je     0x427b8f
  427b4f:	push   ebx
  427b50:	push   edi
  427b51:	mov    edx,DWORD PTR [ebp-0x8]
  427b54:	mov    ebx,DWORD PTR [ebp+0x8]
  427b57:	xor    edx,eax
  427b59:	mov    edi,0xffcd8d11
  427b5e:	sub    edi,edx
  427b60:	add    esi,edi
  427b62:	lea    edx,[esi-0x3272ef]
  427b68:	xor    edx,eax
  427b6a:	mov    DWORD PTR [ebp-0xc],edx
  427b6d:	mov    edx,DWORD PTR [ebp-0x4]
  427b70:	mov    edi,DWORD PTR [ebp-0xc]
  427b73:	xor    dl,0xa8
  427b76:	sub    dl,0x11
  427b79:	xor    edi,eax
  427b7b:	mov    BYTE PTR [edi+ebx*1+0x3272ef],dl
  427b82:	mov    edx,DWORD PTR [ebp-0x4]
  427b85:	xor    edx,eax
  427b87:	add    edx,ecx
  427b89:	cmp    esi,edx
  427b8b:	jne    0x427b51
  427b8d:	pop    edi
  427b8e:	pop    ebx
  427b8f:	pop    esi
  427b90:	leave  
  427b91:	ret    0x4
  427b94:	push   ebp
  427b95:	mov    ebp,esp
  427b97:	sub    esp,0x21c
  427b9d:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  427ba4:	mov    DWORD PTR [ebp-0x14],0xf89c85ba
  427bab:	mov    eax,DWORD PTR [ebp+0x10]
  427bae:	mov    eax,DWORD PTR [ebp-0x4]
  427bb1:	mov    ecx,DWORD PTR [ebp+0x8]
  427bb4:	push   esi
  427bb5:	push   edi
  427bb6:	mov    edi,0x75108a8
  427bbb:	xor    eax,edi
  427bbd:	mov    esi,0x3272ef
  427bc2:	add    eax,esi
  427bc4:	cmp    eax,ecx
  427bc6:	mov    eax,DWORD PTR [ebp-0x4]
  427bc9:	jne    0x427bd4
  427bcb:	xor    eax,edi
  427bcd:	add    eax,esi
  427bcf:	jmp    0x427c80
  427bd4:	mov    ecx,DWORD PTR [ebp+0xc]
  427bd7:	xor    eax,edi
  427bd9:	add    eax,esi
  427bdb:	cmp    eax,ecx
  427bdd:	jne    0x427be4
  427bdf:	mov    eax,DWORD PTR [ebp-0x4]
  427be2:	jmp    0x427bcb
  427be4:	lea    eax,[ebp-0x21c]
  427bea:	mov    DWORD PTR [ebp-0x8],eax
  427bed:	mov    eax,DWORD PTR [ebp+0xc]
  427bf0:	mov    DWORD PTR [ebp-0x10],eax
  427bf3:	mov    eax,DWORD PTR [ebp-0x4]
  427bf6:	xor    eax,edi
  427bf8:	add    eax,esi
  427bfa:	mov    DWORD PTR [ebp+0x10],eax
  427bfd:	mov    eax,DWORD PTR [ebp+0xc]
  427c00:	push   ebx
  427c01:	call   0x42792b
  427c06:	mov    ebx,eax
  427c08:	mov    eax,DWORD PTR [ebp+0x8]
  427c0b:	mov    eax,DWORD PTR [eax+0x14]
  427c0e:	jmp    0x427c68
  427c10:	mov    eax,DWORD PTR [ebp+0xc]
  427c13:	sub    eax,0x8
  427c16:	mov    DWORD PTR [ebp-0xc],eax
  427c19:	mov    eax,DWORD PTR [ebp-0xc]
  427c1c:	mov    eax,DWORD PTR [eax+0x28]
  427c1f:	call   0x427815
  427c24:	mov    DWORD PTR [ebp+0x10],eax
  427c27:	push   DWORD PTR [ebp+0x10]
  427c2a:	mov    edx,DWORD PTR [ebp-0x8]
  427c2d:	call   0x4279ba
  427c32:	mov    eax,DWORD PTR [ebp-0x4]
  427c35:	xor    eax,edi
  427c37:	add    eax,esi
  427c39:	cmp    eax,ebx
  427c3b:	jne    0x427c45
  427c3d:	mov    eax,DWORD PTR [ebp-0x8]
  427c40:	call   0x4278a3
  427c45:	mov    eax,DWORD PTR [ebp-0x14]
  427c48:	xor    eax,edi
  427c4a:	add    eax,esi
  427c4c:	push   eax
  427c4d:	push   DWORD PTR [ebp-0x10]
  427c50:	mov    eax,DWORD PTR [ebp-0x8]
  427c53:	call   0x4275cf
  427c58:	mov    ecx,DWORD PTR [ebp-0x4]
  427c5b:	xor    ecx,edi
  427c5d:	add    ecx,esi
  427c5f:	cmp    eax,ecx
  427c61:	je     0x427c86
  427c63:	mov    eax,DWORD PTR [ebp+0xc]
  427c66:	mov    eax,DWORD PTR [eax]
  427c68:	mov    DWORD PTR [ebp+0xc],eax
  427c6b:	mov    eax,DWORD PTR [ebp+0x8]
  427c6e:	mov    ecx,DWORD PTR [ebp+0xc]
  427c71:	add    eax,0x14
  427c74:	cmp    ecx,eax
  427c76:	jne    0x427c10
  427c78:	mov    eax,DWORD PTR [ebp-0x4]
  427c7b:	xor    eax,edi
  427c7d:	add    eax,esi
  427c7f:	pop    ebx
  427c80:	pop    edi
  427c81:	pop    esi
  427c82:	leave  
  427c83:	ret    0xc
  427c86:	mov    eax,DWORD PTR [ebp-0xc]
  427c89:	mov    eax,DWORD PTR [eax+0x18]
  427c8c:	jmp    0x427c7f
  427c8e:	push   ebp
  427c8f:	mov    ebp,esp
  427c91:	mov    eax,DWORD PTR [ebp+0xc]
  427c94:	sub    esp,0x10
  427c97:	cmp    DWORD PTR [ebp+0x8],0x0
  427c9b:	push   ebx
  427c9c:	push   esi
  427c9d:	push   edi
  427c9e:	je     0x427d53
  427ca4:	test   eax,eax
  427ca6:	je     0x427d53
  427cac:	movzx  eax,WORD PTR [eax+0x20]
  427cb0:	mov    ecx,eax
  427cb2:	mov    DWORD PTR [ebp-0x10],eax
  427cb5:	xor    edx,edx
  427cb7:	and    DWORD PTR [ebp-0x8],edx
  427cba:	mov    eax,0x8a96
  427cbf:	xor    ecx,eax
  427cc1:	add    ecx,0x3b59
  427cc7:	mov    DWORD PTR [ebp-0xc],ecx
  427cca:	and    DWORD PTR [ebp-0x4],0x0
  427cce:	xor    ecx,ecx
  427cd0:	push   0x78
  427cd2:	pop    edi
  427cd3:	cmp    cx,WORD PTR [ebp-0xc]
  427cd7:	jae    0x427d3d
  427cd9:	lea    esi,[edx-0x3b59]
  427cdf:	xor    esi,eax
  427ce1:	movzx  ecx,WORD PTR [ebp-0x4]
  427ce5:	mov    ebx,DWORD PTR [ebp+0xc]
  427ce8:	lea    ecx,[ebx+ecx*4]
  427ceb:	cmp    WORD PTR [ecx+0x2],si
  427cef:	jne    0x427d28
  427cf1:	movzx  ecx,WORD PTR [ecx]
  427cf4:	mov    edi,0x4e31
  427cf9:	cmp    cx,di
  427cfc:	jne    0x427d0a
  427cfe:	mov    ebx,DWORD PTR [ebp+0x8]
  427d01:	movzx  edi,dx
  427d04:	cmp    BYTE PTR [edi+ebx*1],0x0
  427d08:	je     0x427d37
  427d0a:	mov    ebx,DWORD PTR [ebp+0x8]
  427d0d:	movzx  edi,dx
  427d10:	movsx  di,BYTE PTR [edi+ebx*1]
  427d15:	mov    ebx,0x3b59
  427d1a:	sub    di,bx
  427d1d:	xor    di,ax
  427d20:	cmp    cx,di
  427d23:	je     0x427d37
  427d25:	push   0x7a
  427d27:	pop    edi
  427d28:	inc    DWORD PTR [ebp-0x4]
  427d2b:	mov    cx,WORD PTR [ebp-0xc]
  427d2f:	cmp    WORD PTR [ebp-0x4],cx
  427d33:	jb     0x427ce1
  427d35:	jmp    0x427d3d
  427d37:	inc    DWORD PTR [ebp-0x8]
  427d3a:	push   0x79
  427d3c:	pop    edi
  427d3d:	mov    esi,DWORD PTR [ebp+0x8]
  427d40:	movzx  ecx,dx
  427d43:	cmp    BYTE PTR [ecx+esi*1],0x0
  427d47:	je     0x427d5c
  427d49:	inc    edx
  427d4a:	cmp    edi,0x7a
  427d4d:	jne    0x427cca
  427d53:	xor    eax,eax
  427d55:	pop    edi
  427d56:	pop    esi
  427d57:	pop    ebx
  427d58:	leave  
  427d59:	ret    0x8
  427d5c:	mov    ecx,DWORD PTR [ebp-0x8]
  427d5f:	add    ecx,0xffffc4a7
  427d65:	xor    cx,ax
  427d68:	xor    eax,eax
  427d6a:	cmp    cx,WORD PTR [ebp-0x10]
  427d6e:	sete   al
  427d71:	jmp    0x427d55
  427d73:	push   ebp
  427d74:	mov    ebp,esp
  427d76:	sub    esp,0x50
  427d79:	push   edi
  427d7a:	mov    edi,eax
  427d7c:	mov    eax,DWORD PTR [edi+0x1a8]
  427d82:	cmp    DWORD PTR [eax],0x0
  427d85:	jne    0x427d8e
  427d87:	xor    eax,eax
  427d89:	jmp    0x427ebf
  427d8e:	push   DWORD PTR [ebp+0x8]
  427d91:	push   0x2c
  427d93:	pop    eax
  427d94:	call   0x427b23
  427d99:	mov    edx,DWORD PTR [edi+0x1ac]
  427d9f:	lea    eax,[edi+0x22]
  427da2:	mov    DWORD PTR [ebp-0x4c],eax
  427da5:	lea    eax,[edi+0x44]
  427da8:	mov    DWORD PTR [ebp-0x48],eax
  427dab:	lea    eax,[edi+0x66]
  427dae:	mov    DWORD PTR [ebp-0x44],eax
  427db1:	lea    eax,[edi+0x88]
  427db7:	mov    DWORD PTR [ebp-0x40],eax
  427dba:	lea    eax,[edi+0xaa]
  427dc0:	mov    DWORD PTR [ebp-0x3c],eax
  427dc3:	lea    eax,[edi+0xcc]
  427dc9:	mov    DWORD PTR [ebp-0x38],eax
  427dcc:	lea    eax,[edi+0xee]
  427dd2:	mov    DWORD PTR [ebp-0x34],eax
  427dd5:	lea    eax,[edi+0x110]
  427ddb:	mov    DWORD PTR [ebp-0x30],eax
  427dde:	lea    eax,[edi+0x132]
  427de4:	mov    DWORD PTR [ebp-0x2c],eax
  427de7:	lea    eax,[edi+0x154]
  427ded:	push   edi
  427dee:	mov    DWORD PTR [ebp-0x50],edi
  427df1:	mov    DWORD PTR [ebp-0x28],eax
  427df4:	call   0x427ef3
  427df9:	push   eax
  427dfa:	mov    eax,DWORD PTR [edi+0x1a8]
  427e00:	push   DWORD PTR [eax]
  427e02:	call   0x427b94
  427e07:	mov    DWORD PTR [ebp-0x10],eax
  427e0a:	test   eax,eax
  427e0c:	je     0x427ebf
  427e12:	mov    ecx,DWORD PTR [eax+0x3c]
  427e15:	push   ebx
  427e16:	push   esi
  427e17:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  427e1b:	add    esi,eax
  427e1d:	mov    edi,DWORD PTR [esi+0x24]
  427e20:	mov    ecx,DWORD PTR [esi+0x1c]
  427e23:	mov    edx,DWORD PTR [esi+0x20]
  427e26:	mov    ebx,DWORD PTR [esi+0x18]
  427e29:	add    edi,eax
  427e2b:	mov    DWORD PTR [ebp-0x20],edi
  427e2e:	mov    edi,DWORD PTR [esi+0x14]
  427e31:	add    ecx,eax
  427e33:	add    edx,eax
  427e35:	mov    DWORD PTR [ebp-0xc],ecx
  427e38:	mov    DWORD PTR [ebp-0x1c],edx
  427e3b:	mov    DWORD PTR [ebp-0x8],edi
  427e3e:	cmp    edi,ebx
  427e40:	ja     0x427e45
  427e42:	mov    DWORD PTR [ebp-0x8],ebx
  427e45:	xor    ebx,ebx
  427e47:	mov    DWORD PTR [ebp-0x18],ebx
  427e4a:	cmp    DWORD PTR [ebp-0x8],ebx
  427e4d:	jbe    0x427ebd
  427e4f:	jmp    0x427e54
  427e51:	mov    edx,DWORD PTR [ebp-0x1c]
  427e54:	mov    edi,DWORD PTR [ebp-0x20]
  427e57:	movzx  edi,WORD PTR [edi+ebx*2]
  427e5b:	cmp    ebx,DWORD PTR [esi+0x18]
  427e5e:	jae    0x427ebd
  427e60:	cmp    edi,DWORD PTR [esi+0x14]
  427e63:	jae    0x427ebd
  427e65:	mov    ebx,DWORD PTR [edx+ebx*4]
  427e68:	mov    edx,DWORD PTR [ebp+0x8]
  427e6b:	mov    edi,DWORD PTR [ecx+edi*4]
  427e6e:	mov    DWORD PTR [ebp-0x4],edx
  427e71:	lea    edx,[ebp-0x50]
  427e74:	add    ebx,eax
  427e76:	add    edi,eax
  427e78:	sub    edx,DWORD PTR [ebp+0x8]
  427e7b:	mov    DWORD PTR [ebp-0x14],0xb
  427e82:	mov    DWORD PTR [ebp-0x24],edx
  427e85:	mov    edx,DWORD PTR [ebp-0x4]
  427e88:	cmp    DWORD PTR [edx],0x0
  427e8b:	jne    0x427ea8
  427e8d:	mov    eax,DWORD PTR [ebp-0x24]
  427e90:	push   DWORD PTR [eax+edx*1]
  427e93:	push   ebx
  427e94:	call   0x427c8e
  427e99:	mov    ecx,DWORD PTR [ebp-0xc]
  427e9c:	test   eax,eax
  427e9e:	je     0x427ea5
  427ea0:	mov    eax,DWORD PTR [ebp-0x4]
  427ea3:	mov    DWORD PTR [eax],edi
  427ea5:	mov    eax,DWORD PTR [ebp-0x10]
  427ea8:	add    DWORD PTR [ebp-0x4],0x4
  427eac:	dec    DWORD PTR [ebp-0x14]
  427eaf:	jne    0x427e85
  427eb1:	mov    ebx,DWORD PTR [ebp-0x18]
  427eb4:	inc    ebx
  427eb5:	mov    DWORD PTR [ebp-0x18],ebx
  427eb8:	cmp    ebx,DWORD PTR [ebp-0x8]
  427ebb:	jb     0x427e51
  427ebd:	pop    esi
  427ebe:	pop    ebx
  427ebf:	pop    edi
  427ec0:	leave  
  427ec1:	ret    0x4
  427ec4:	push   ebp
  427ec5:	mov    ebp,esp
  427ec7:	mov    eax,DWORD PTR [ebp+0x8]
  427eca:	push   esi
  427ecb:	push   DWORD PTR [eax+0x1e0]
  427ed1:	lea    esi,[eax+0x198]
  427ed7:	mov    eax,DWORD PTR [ebp+0x8]
  427eda:	call   0x427d73
  427edf:	mov    ecx,DWORD PTR [esi]
  427ee1:	mov    DWORD PTR [ecx],eax
  427ee3:	mov    eax,DWORD PTR [esi]
  427ee5:	xor    ecx,ecx
  427ee7:	cmp    DWORD PTR [eax],ecx
  427ee9:	pop    esi
  427eea:	setne  cl
  427eed:	mov    eax,ecx
  427eef:	pop    ebp
  427ef0:	ret    0x4
  427ef3:	mov    ecx,DWORD PTR [edi+0x188]
  427ef9:	push   ebx
  427efa:	jmp    0x427f0f
  427efc:	xor    eax,0x8a96
  427f01:	add    eax,0x3b59
  427f06:	mov    WORD PTR [ecx],ax
  427f09:	add    ecx,0x2
  427f0c:	add    edx,0x2
  427f0f:	movzx  eax,WORD PTR [edx]
  427f12:	mov    ebx,0x4e31
  427f17:	cmp    ax,bx
  427f1a:	jne    0x427efc
  427f1c:	xor    eax,eax
  427f1e:	mov    WORD PTR [ecx],ax
  427f21:	mov    eax,DWORD PTR [edi+0x188]
  427f27:	pop    ebx
  427f28:	ret    
  427f29:	push   edi
  427f2a:	mov    edi,eax
  427f2c:	mov    eax,DWORD PTR [esi+0x188]
  427f32:	shl    edi,0x6
  427f35:	add    eax,edi
  427f37:	jmp    0x427f42
  427f39:	xor    cl,0x7b
  427f3c:	dec    cl
  427f3e:	mov    BYTE PTR [eax],cl
  427f40:	inc    eax
  427f41:	inc    edx
  427f42:	mov    cl,BYTE PTR [edx]
  427f44:	cmp    cl,0x7a
  427f47:	jne    0x427f39
  427f49:	mov    BYTE PTR [eax],0x0
  427f4c:	mov    eax,DWORD PTR [esi+0x188]
  427f52:	add    eax,edi
  427f54:	pop    edi
  427f55:	ret    
  427f56:	push   ebp
  427f57:	mov    ebp,esp
  427f59:	sub    esp,0x14
  427f5c:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  427f63:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  427f6a:	mov    eax,DWORD PTR [ebx]
  427f6c:	mov    DWORD PTR [ebp-0x8],eax
  427f6f:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  427f76:	push   esi
  427f77:	push   edi
  427f78:	mov    DWORD PTR [ebp-0x14],0xead71899
  427f7f:	mov    edi,DWORD PTR [ebp-0x4]
  427f82:	mov    ecx,DWORD PTR [ebp-0x10]
  427f85:	mov    eax,0x75108a8
  427f8a:	xor    edi,eax
  427f8c:	mov    edx,0x3272ef
  427f91:	xor    ecx,eax
  427f93:	add    edi,edx
  427f95:	add    ecx,edx
  427f97:	imul   edi,ecx
  427f9a:	jmp    0x427fe2
  427f9c:	mov    ecx,DWORD PTR [ebp-0x8]
  427f9f:	mov    esi,DWORD PTR [ebp-0x4]
  427fa2:	xor    ecx,eax
  427fa4:	xor    esi,eax
  427fa6:	add    ecx,edx
  427fa8:	add    esi,edx
  427faa:	test   esi,ecx
  427fac:	mov    esi,DWORD PTR [ebp-0x8]
  427faf:	mov    ecx,DWORD PTR [ebp-0x4]
  427fb2:	je     0x427fc9
  427fb4:	xor    ecx,eax
  427fb6:	xor    esi,eax
  427fb8:	add    ecx,edx
  427fba:	add    esi,edx
  427fbc:	shr    esi,cl
  427fbe:	mov    ecx,DWORD PTR [ebp-0x14]
  427fc1:	xor    ecx,eax
  427fc3:	add    ecx,edx
  427fc5:	xor    esi,ecx
  427fc7:	jmp    0x427fd3
  427fc9:	xor    esi,eax
  427fcb:	xor    ecx,eax
  427fcd:	add    esi,edx
  427fcf:	add    ecx,edx
  427fd1:	shr    esi,cl
  427fd3:	mov    DWORD PTR [ebp-0x8],esi
  427fd6:	mov    ecx,DWORD PTR [ebp-0x4]
  427fd9:	xor    ecx,eax
  427fdb:	lea    edi,[edi+ecx*1+0x3272ef]
  427fe2:	mov    ecx,DWORD PTR [ebp-0xc]
  427fe5:	mov    esi,DWORD PTR [ebp-0x4]
  427fe8:	xor    esi,eax
  427fea:	xor    ecx,eax
  427fec:	sub    ecx,esi
  427fee:	cmp    edi,ecx
  427ff0:	jbe    0x427f9c
  427ff2:	mov    eax,DWORD PTR [ebp-0x8]
  427ff5:	pop    edi
  427ff6:	mov    DWORD PTR [ebx],eax
  427ff8:	mov    eax,DWORD PTR [ebp-0x8]
  427ffb:	pop    esi
  427ffc:	leave  
  427ffd:	ret    
  427ffe:	push   ebp
  427fff:	mov    ebp,esp
  428001:	sub    esp,0x38
  428004:	push   ebx
  428005:	mov    ebx,0xf89c85b9
  42800a:	mov    DWORD PTR [ebp-0x4],ebx
  42800d:	lea    ecx,[ebx+0x1]
  428010:	mov    DWORD PTR [ebp-0x24],ecx
  428013:	mov    eax,DWORD PTR [ebp-0x4]
  428016:	mov    edx,DWORD PTR [ebp+0x8]
  428019:	push   esi
  42801a:	mov    esi,0x75108a8
  42801f:	xor    eax,esi
  428021:	push   edi
  428022:	mov    edi,0x3272ef
  428027:	add    eax,edi
  428029:	cmp    edx,eax
  42802b:	mov    eax,DWORD PTR [ebp-0x4]
  42802e:	je     0x428192
  428034:	mov    edx,DWORD PTR [ebp+0xc]
  428037:	xor    eax,esi
  428039:	add    eax,edi
  42803b:	cmp    edx,eax
  42803d:	je     0x42818f
  428043:	mov    eax,DWORD PTR [ebp+0x10]
  428046:	mov    edx,DWORD PTR [ebp+0xc]
  428049:	mov    DWORD PTR [ebp-0x14],eax
  42804c:	mov    eax,DWORD PTR [ebp+0x8]
  42804f:	mov    DWORD PTR [ebp-0x18],0xf89c853e
  428056:	mov    DWORD PTR [ebp-0xc],eax
  428059:	lea    eax,[ebx+0x2]
  42805c:	mov    DWORD PTR [ebp-0x1c],eax
  42805f:	mov    DWORD PTR [ebp-0x10],ebx
  428062:	mov    DWORD PTR [ebp+0xc],ecx
  428065:	mov    DWORD PTR [ebp+0x10],eax
  428068:	mov    eax,DWORD PTR [ebp+0xc]
  42806b:	xor    eax,esi
  42806d:	mov    DWORD PTR [ebp-0x20],edx
  428070:	sub    edx,eax
  428072:	sub    edx,edi
  428074:	mov    DWORD PTR [ebp+0x8],edx
  428077:	mov    DWORD PTR [ebp-0x8],0xf89c85be
  42807e:	jmp    0x42817f
  428083:	mov    eax,DWORD PTR [ebp+0xc]
  428086:	mov    ecx,DWORD PTR [ebp+0xc]
  428089:	xor    eax,esi
  42808b:	xor    ecx,esi
  42808d:	lea    ecx,[eax+ecx*1+0x64e5de]
  428094:	mov    eax,DWORD PTR [ebp+0x8]
  428097:	xor    edx,edx
  428099:	div    ecx
  42809b:	mov    eax,DWORD PTR [ebp+0x10]
  42809e:	mov    ecx,DWORD PTR [ebp+0xc]
  4280a1:	xor    eax,esi
  4280a3:	xor    ecx,esi
  4280a5:	sub    eax,ecx
  4280a7:	cmp    edx,eax
  4280a9:	jne    0x42813e
  4280af:	mov    eax,DWORD PTR [ebp+0x8]
  4280b2:	mov    ecx,DWORD PTR [ebp-0xc]
  4280b5:	mov    dl,BYTE PTR [eax+ecx*1]
  4280b8:	mov    eax,DWORD PTR [ebp-0x10]
  4280bb:	mov    ecx,DWORD PTR [ebp-0x8]
  4280be:	xor    eax,esi
  4280c0:	xor    ecx,esi
  4280c2:	add    eax,edi
  4280c4:	add    ecx,edi
  4280c6:	cmp    eax,ecx
  4280c8:	jae    0x428110
  4280ca:	lea    ecx,[eax-0x3272ef]
  4280d0:	mov    DWORD PTR [ebp-0x4],ecx
  4280d3:	mov    ebx,DWORD PTR [ebp-0x4]
  4280d6:	xor    ebx,esi
  4280d8:	add    ebx,0x7f55d8fb
  4280de:	lea    ecx,[ebp+eax*4-0x38]
  4280e2:	mov    DWORD PTR [ecx],ebx
  4280e4:	mov    ebx,DWORD PTR [ecx]
  4280e6:	cmp    ebx,0x244ecb9c
  4280ec:	jbe    0x4280f6
  4280ee:	add    DWORD PTR [ecx],0x405fcdd
  4280f4:	jmp    0x4280fc
  4280f6:	add    DWORD PTR [ecx],0xfdaf4323
  4280fc:	mov    ecx,DWORD PTR [ebp-0x8]
  4280ff:	xor    ecx,esi
  428101:	inc    eax
  428102:	inc    DWORD PTR [ebp-0x4]
  428105:	add    ecx,edi
  428107:	cmp    eax,ecx
  428109:	jb     0x4280d3
  42810b:	mov    ebx,0xf89c85b9
  428110:	cmp    DWORD PTR [ebp-0x14],0x0
  428114:	jne    0x42811d
  428116:	xor    dl,0x7b
  428119:	dec    dl
  42811b:	jmp    0x428133
  42811d:	mov    eax,DWORD PTR [ebp-0x18]
  428120:	xor    al,0xa8
  428122:	mov    cl,0x11
  428124:	sub    cl,al
  428126:	add    dl,cl
  428128:	mov    ecx,DWORD PTR [ebp-0x1c]
  42812b:	xor    cl,0xa8
  42812e:	sub    cl,0x11
  428131:	ror    dl,cl
  428133:	xor    eax,eax
  428135:	mov    eax,DWORD PTR [ebp+0x8]
  428138:	mov    ecx,DWORD PTR [ebp-0xc]
  42813b:	mov    BYTE PTR [eax+ecx*1],dl
  42813e:	mov    eax,DWORD PTR [ebp+0x8]
  428141:	mov    ecx,DWORD PTR [ebp-0x10]
  428144:	sub    eax,edi
  428146:	xor    eax,esi
  428148:	cmp    eax,ecx
  42814a:	jne    0x42816d
  42814c:	mov    eax,DWORD PTR [ebp+0x10]
  42814f:	mov    ecx,DWORD PTR [ebp+0xc]
  428152:	xor    eax,esi
  428154:	xor    ecx,esi
  428156:	sub    eax,ecx
  428158:	mov    ecx,DWORD PTR [ebp-0x20]
  42815b:	sub    eax,edi
  42815d:	xor    eax,esi
  42815f:	mov    DWORD PTR [ebp+0x10],eax
  428162:	mov    eax,DWORD PTR [ebp+0xc]
  428165:	xor    eax,esi
  428167:	sub    ecx,eax
  428169:	sub    ecx,edi
  42816b:	jmp    0x42817c
  42816d:	mov    eax,DWORD PTR [ebp+0xc]
  428170:	xor    eax,esi
  428172:	mov    ecx,0xffcd8d11
  428177:	sub    ecx,eax
  428179:	add    ecx,DWORD PTR [ebp+0x8]
  42817c:	mov    DWORD PTR [ebp+0x8],ecx
  42817f:	mov    eax,DWORD PTR [ebp+0x10]
  428182:	cmp    eax,ebx
  428184:	jne    0x428083
  42818a:	mov    eax,DWORD PTR [ebp-0x24]
  42818d:	jmp    0x428192
  42818f:	mov    eax,DWORD PTR [ebp-0x4]
  428192:	xor    eax,esi
  428194:	add    eax,edi
  428196:	pop    edi
  428197:	pop    esi
  428198:	pop    ebx
  428199:	leave  
  42819a:	ret    0xc
  42819d:	push   ebp
  42819e:	mov    ebp,esp
  4281a0:	sub    esp,0x420
  4281a6:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  4281ad:	mov    DWORD PTR [ebp-0xc],0xf89c85ba
  4281b4:	mov    DWORD PTR [ebp-0x18],0xf89c86b9
  4281bb:	push   ebx
  4281bc:	mov    DWORD PTR [ebp-0x1c],0xf89c85b8
  4281c3:	mov    eax,DWORD PTR [ebp-0x14]
  4281c6:	push   esi
  4281c7:	mov    esi,0x75108a8
  4281cc:	push   edi
  4281cd:	xor    eax,esi
  4281cf:	mov    edi,0x3272ef
  4281d4:	add    eax,edi
  4281d6:	mov    DWORD PTR [ebp-0x8],eax
  4281d9:	mov    DWORD PTR [ebp-0x20],0xf89c85b1
  4281e0:	mov    DWORD PTR [ebp-0x4],0xead71899
  4281e7:	mov    DWORD PTR [ebp-0x10],0x8
  4281ee:	mov    ecx,ecx
  4281f0:	mov    eax,DWORD PTR [ebp-0xc]
  4281f3:	mov    ecx,DWORD PTR [ebp-0x14]
  4281f6:	xor    eax,esi
  4281f8:	xor    ecx,esi
  4281fa:	add    eax,edi
  4281fc:	add    ecx,edi
  4281fe:	imul   eax,ecx
  428201:	jmp    0x428234
  428203:	mov    eax,DWORD PTR [ebp-0x4]
  428206:	sub    eax,edi
  428208:	xor    eax,esi
  42820a:	mov    DWORD PTR [ebp-0x8],eax
  42820d:	lea    ebx,[ebp-0x8]
  428210:	call   0x427f56
  428215:	mov    DWORD PTR [ebp-0x8],eax
  428218:	mov    eax,DWORD PTR [ebp-0x8]
  42821b:	mov    ecx,DWORD PTR [ebp-0x4]
  42821e:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  428225:	mov    eax,DWORD PTR [ebp-0xc]
  428228:	mov    ecx,DWORD PTR [ebp-0x4]
  42822b:	xor    eax,esi
  42822d:	lea    eax,[eax+ecx*1+0x3272ef]
  428234:	mov    DWORD PTR [ebp-0x4],eax
  428237:	mov    eax,DWORD PTR [ebp-0x18]
  42823a:	mov    ecx,DWORD PTR [ebp-0xc]
  42823d:	xor    ecx,esi
  42823f:	xor    eax,esi
  428241:	sub    eax,ecx
  428243:	mov    ecx,DWORD PTR [ebp-0x4]
  428246:	cmp    ecx,eax
  428248:	jbe    0x428203
  42824a:	mov    eax,DWORD PTR [ebp-0x1c]
  42824d:	xor    eax,esi
  42824f:	add    eax,edi
  428251:	mov    DWORD PTR [ebp-0x8],eax
  428254:	mov    DWORD PTR [ebp-0x18],0xf89c86b8
  42825b:	mov    ebx,ebx
  42825d:	jmp    0x4282c0
  42825f:	mov    ecx,DWORD PTR [ebp-0x20]
  428262:	mov    eax,DWORD PTR [ebp-0x8]
  428265:	xor    ecx,esi
  428267:	add    ecx,edi
  428269:	shr    eax,cl
  42826b:	mov    DWORD PTR [ebp-0x4],eax
  42826e:	mov    eax,DWORD PTR [ebp+0x8]
  428271:	mov    cl,BYTE PTR [eax]
  428273:	mov    BYTE PTR [ebp+0xb],cl
  428276:	mov    cl,BYTE PTR [ebp+0xb]
  428279:	mov    edx,DWORD PTR [ebp-0x8]
  42827c:	movzx  ecx,cl
  42827f:	xor    ecx,edx
  428281:	mov    DWORD PTR [ebp+0x8],ecx
  428284:	mov    ecx,DWORD PTR [ebp-0x18]
  428287:	mov    edx,DWORD PTR [ebp+0x8]
  42828a:	xor    ecx,esi
  42828c:	add    ecx,edi
  42828e:	and    ecx,edx
  428290:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  428297:	mov    edx,DWORD PTR [ebp-0x4]
  42829a:	xor    ecx,edx
  42829c:	mov    DWORD PTR [ebp-0x8],ecx
  42829f:	mov    ecx,DWORD PTR [ebp-0xc]
  4282a2:	xor    ecx,esi
  4282a4:	lea    eax,[eax+ecx*1+0x3272ef]
  4282ab:	mov    DWORD PTR [ebp+0x8],eax
  4282ae:	mov    eax,DWORD PTR [ebp-0xc]
  4282b1:	xor    eax,esi
  4282b3:	mov    ecx,0xffcd8d11
  4282b8:	sub    ecx,eax
  4282ba:	add    ecx,DWORD PTR [ebp-0x10]
  4282bd:	mov    DWORD PTR [ebp-0x10],ecx
  4282c0:	mov    eax,DWORD PTR [ebp-0x14]
  4282c3:	mov    ecx,DWORD PTR [ebp-0x10]
  4282c6:	xor    eax,esi
  4282c8:	add    eax,edi
  4282ca:	cmp    ecx,eax
  4282cc:	jne    0x42825f
  4282ce:	mov    eax,DWORD PTR [ebp-0x1c]
  4282d1:	mov    ecx,DWORD PTR [ebp-0x8]
  4282d4:	xor    eax,esi
  4282d6:	add    eax,edi
  4282d8:	pop    edi
  4282d9:	pop    esi
  4282da:	xor    eax,ecx
  4282dc:	pop    ebx
  4282dd:	leave  
  4282de:	ret    0x4
  4282e1:	push   ebp
  4282e2:	mov    ebp,esp
  4282e4:	mov    eax,DWORD PTR [ebp+0x1c]
  4282e7:	mov    ecx,DWORD PTR [ebp+0x8]
  4282ea:	mov    edx,DWORD PTR [ebp+0x10]
  4282ed:	mov    eax,DWORD PTR [eax+0x190]
  4282f3:	mov    eax,DWORD PTR [eax]
  4282f5:	sub    esp,0x64
  4282f8:	push   ebx
  4282f9:	push   esi
  4282fa:	push   edi
  4282fb:	mov    edi,0x75108a8
  428300:	xor    ecx,edi
  428302:	mov    ebx,0x3272ef
  428307:	add    ecx,ebx
  428309:	cmp    ecx,edx
  42830b:	jne    0x42831c
  42830d:	or     DWORD PTR ds:0x3750c3f,0x4263eb20
  428317:	jmp    0x428818
  42831c:	mov    ecx,DWORD PTR [ebp+0x8]
  42831f:	mov    esi,DWORD PTR [ebp+0x14]
  428322:	mov    edx,DWORD PTR [esi]
  428324:	xor    ecx,edi
  428326:	add    ecx,ebx
  428328:	cmp    edx,ecx
  42832a:	je     0x4287d3
  428330:	mov    ecx,DWORD PTR [ebp+0x1c]
  428333:	mov    DWORD PTR [ebp-0x1c],eax
  428336:	mov    DWORD PTR [ebp+0x1c],ecx
  428339:	mov    ecx,DWORD PTR [ebp+0x18]
  42833c:	mov    eax,DWORD PTR [esi]
  42833e:	mov    DWORD PTR [ebp-0x20],eax
  428341:	mov    DWORD PTR [ebp+0x8],0xf89c85b9
  428348:	mov    edx,0xf89c85ba
  42834d:	mov    DWORD PTR [ebp-0x8],edx
  428350:	mov    eax,DWORD PTR [ebp+0x1c]
  428353:	mov    DWORD PTR [ebp+0x1c],eax
  428356:	mov    eax,DWORD PTR [ebp+0x1c]
  428359:	mov    eax,DWORD PTR [eax+0x190]
  42835f:	mov    eax,DWORD PTR [eax]
  428361:	mov    DWORD PTR [ebp-0x24],ecx
  428364:	mov    ecx,DWORD PTR [ebp+0x1c]
  428367:	mov    ecx,DWORD PTR [ecx+0x190]
  42836d:	mov    ecx,DWORD PTR [ecx]
  42836f:	add    ecx,DWORD PTR [eax+0x3c]
  428372:	mov    DWORD PTR [ebp+0x10],ecx
  428375:	mov    eax,DWORD PTR [ebp+0x8]
  428378:	xor    eax,edi
  42837a:	add    eax,ebx
  42837c:	mov    DWORD PTR [ebp-0x4],eax
  42837f:	mov    eax,DWORD PTR [ebp+0x8]
  428382:	xor    eax,edi
  428384:	add    eax,ebx
  428386:	mov    DWORD PTR [ebp+0x18],eax
  428389:	mov    eax,DWORD PTR [ebp+0x10]
  42838c:	mov    eax,DWORD PTR [eax+0x50]
  42838f:	sub    eax,0xc
  428392:	mov    DWORD PTR [ebp-0x28],eax
  428395:	mov    eax,DWORD PTR [ebp+0x10]
  428398:	mov    eax,DWORD PTR [eax+0x38]
  42839b:	mov    ecx,DWORD PTR [ebp+0x10]
  42839e:	dec    eax
  42839f:	test   DWORD PTR [ecx+0x54],eax
  4283a2:	mov    eax,DWORD PTR [ebp+0x10]
  4283a5:	je     0x4283bf
  4283a7:	mov    eax,DWORD PTR [eax+0x38]
  4283aa:	mov    ecx,DWORD PTR [ebp+0x10]
  4283ad:	mov    ecx,DWORD PTR [ecx+0x54]
  4283b0:	dec    eax
  4283b1:	not    eax
  4283b3:	and    ecx,eax
  4283b5:	mov    eax,DWORD PTR [ebp+0x10]
  4283b8:	mov    eax,DWORD PTR [eax+0x38]
  4283bb:	add    eax,ecx
  4283bd:	jmp    0x4283c2
  4283bf:	mov    eax,DWORD PTR [eax+0x54]
  4283c2:	mov    DWORD PTR [ebp+0x1c],eax
  4283c5:	mov    eax,DWORD PTR [ebp+0x8]
  4283c8:	xor    eax,edi
  4283ca:	add    eax,ebx
  4283cc:	mov    DWORD PTR [ebp+0x18],eax
  4283cf:	mov    eax,DWORD PTR [ebp+0x8]
  4283d2:	xor    eax,edi
  4283d4:	add    eax,ebx
  4283d6:	mov    DWORD PTR [ebp+0x18],eax
  4283d9:	mov    eax,DWORD PTR [ebp+0x8]
  4283dc:	mov    ecx,DWORD PTR [ebp-0x24]
  4283df:	xor    eax,edi
  4283e1:	add    eax,ebx
  4283e3:	mov    DWORD PTR [ecx],eax
  4283e5:	mov    DWORD PTR [ebp+0x18],edx
  4283e8:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  4283ef:	mov    DWORD PTR [ebp+0x18],0xf89c85bc
  4283f6:	mov    DWORD PTR [ebp+0x18],0xf89c85bd
  4283fd:	mov    eax,DWORD PTR [ebp-0x8]
  428400:	mov    ecx,DWORD PTR [ebp+0x1c]
  428403:	xor    eax,edi
  428405:	add    eax,ebx
  428407:	imul   eax,ecx
  42840a:	mov    ecx,DWORD PTR [ebp+0x8]
  42840d:	mov    edx,DWORD PTR [ebp-0x28]
  428410:	xor    ecx,edi
  428412:	lea    ecx,[ecx+edx*1+0x3272ef]
  428419:	cmp    eax,ecx
  42841b:	jae    0x4287cc
  428421:	mov    eax,DWORD PTR [ebp+0x8]
  428424:	xor    eax,edi
  428426:	add    eax,ebx
  428428:	mov    DWORD PTR [ebp+0x18],eax
  42842b:	mov    eax,DWORD PTR [ebp+0x1c]
  42842e:	add    eax,DWORD PTR [ebp-0x1c]
  428431:	mov    DWORD PTR [ebp-0x4],eax
  428434:	push   DWORD PTR [ebp-0x4]
  428437:	mov    esi,DWORD PTR [ebp-0x1c]
  42843a:	mov    ecx,DWORD PTR [ebp+0x10]
  42843d:	call   0x427591
  428442:	mov    DWORD PTR [ebp+0xc],eax
  428445:	mov    DWORD PTR [ebp-0x18],0xf89c85b1
  42844c:	mov    eax,DWORD PTR [ebp-0x18]
  42844f:	xor    eax,edi
  428451:	lea    ecx,[ebp-0x40]
  428454:	add    eax,ebx
  428456:	push   ecx
  428457:	call   0x427b23
  42845c:	mov    eax,DWORD PTR [ebp+0xc]
  42845f:	test   eax,eax
  428461:	je     0x4284b1
  428463:	mov    eax,DWORD PTR [ebp-0x18]
  428466:	xor    eax,edi
  428468:	add    eax,ebx
  42846a:	push   eax
  42846b:	push   DWORD PTR [ebp+0xc]
  42846e:	lea    eax,[ebp-0x40]
  428471:	push   eax
  428472:	call   0x427a19
  428477:	mov    eax,DWORD PTR [ebp-0x4]
  42847a:	mov    DWORD PTR [ebp-0x18],eax
  42847d:	mov    eax,DWORD PTR [ebp-0x18]
  428480:	mov    ecx,DWORD PTR [ebp-0x1c]
  428483:	sub    eax,ecx
  428485:	mov    DWORD PTR [ebp-0x18],eax
  428488:	mov    eax,DWORD PTR [ebp+0xc]
  42848b:	mov    ecx,DWORD PTR [ebp+0xc]
  42848e:	mov    eax,DWORD PTR [eax+0x10]
  428491:	add    eax,DWORD PTR [ecx+0xc]
  428494:	mov    ecx,DWORD PTR [ebp-0x18]
  428497:	cmp    ecx,eax
  428499:	jb     0x4284b1
  42849b:	mov    eax,DWORD PTR [ebp+0xc]
  42849e:	mov    eax,DWORD PTR [eax+0xc]
  4284a1:	mov    ecx,DWORD PTR [ebp+0xc]
  4284a4:	add    eax,DWORD PTR [ecx+0x8]
  4284a7:	mov    ecx,DWORD PTR [ebp-0x18]
  4284aa:	sub    eax,ecx
  4284ac:	jmp    0x42879f
  4284b1:	push   0xc
  4284b3:	push   DWORD PTR [ebp-0x4]
  4284b6:	lea    eax,[ebp-0x4c]
  4284b9:	push   eax
  4284ba:	call   0x427a19
  4284bf:	mov    eax,0xf89c85b9
  4284c4:	mov    DWORD PTR [ebp-0x2c],eax
  4284c7:	mov    DWORD PTR [ebp-0x30],0xf89c85ba
  4284ce:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  4284d5:	mov    DWORD PTR [ebp-0x38],0xf89c85bc
  4284dc:	lea    ecx,[ebp-0x2c]
  4284df:	mov    DWORD PTR [ebp-0xc],ecx
  4284e2:	lea    ecx,[ebp-0x30]
  4284e5:	mov    DWORD PTR [ebp-0x10],ecx
  4284e8:	lea    ecx,[ebp-0x34]
  4284eb:	mov    DWORD PTR [ebp+0xc],ecx
  4284ee:	lea    ecx,[ebp-0x38]
  4284f1:	mov    DWORD PTR [ebp-0x14],ecx
  4284f4:	mov    ecx,DWORD PTR [ebp+0x8]
  4284f7:	xor    ecx,edi
  4284f9:	add    ecx,ebx
  4284fb:	mov    DWORD PTR [ebp-0x18],ecx
  4284fe:	jmp    0x4286fa
  428503:	cmp    eax,0xf89c85bb
  428508:	je     0x42870c
  42850e:	mov    ecx,DWORD PTR [ebp-0x8]
  428511:	xor    ecx,edi
  428513:	mov    esi,eax
  428515:	add    ecx,ebx
  428517:	mov    DWORD PTR [ebp+0x18],ecx
  42851a:	mov    eax,DWORD PTR [ebp-0x18]
  42851d:	xor    esi,edi
  42851f:	lea    eax,[eax+esi*1+0x3272ef]
  428526:	mov    DWORD PTR [ebp-0x18],eax
  428529:	mov    eax,DWORD PTR [ebp-0x8]
  42852c:	mov    ecx,DWORD PTR [ebp-0x18]
  42852f:	xor    eax,edi
  428531:	add    eax,ebx
  428533:	cmp    ecx,eax
  428535:	jne    0x42854a
  428537:	mov    eax,DWORD PTR [ebp+0x8]
  42853a:	xor    eax,edi
  42853c:	add    eax,ebx
  42853e:	push   eax
  42853f:	push   0xc
  428541:	lea    eax,[ebp-0x4c]
  428544:	push   eax
  428545:	call   0x427ffe
  42854a:	mov    eax,DWORD PTR [ebp-0xc]
  42854d:	mov    eax,DWORD PTR [eax]
  42854f:	xor    eax,edi
  428551:	mov    al,BYTE PTR [ebp+eax*1+0x3272a3]
  428558:	mov    ecx,DWORD PTR [ebp+0x8]
  42855b:	xor    ecx,edi
  42855d:	movzx  eax,al
  428560:	add    ecx,ebx
  428562:	cmp    eax,ecx
  428564:	je     0x4286e2
  42856a:	mov    eax,DWORD PTR [ebp-0x10]
  42856d:	mov    eax,DWORD PTR [eax]
  42856f:	xor    eax,edi
  428571:	mov    al,BYTE PTR [ebp+eax*1+0x3272a3]
  428578:	mov    ecx,DWORD PTR [ebp+0x8]
  42857b:	xor    ecx,edi
  42857d:	movzx  eax,al
  428580:	add    ecx,ebx
  428582:	cmp    eax,ecx
  428584:	je     0x4286e2
  42858a:	mov    eax,DWORD PTR [ebp+0xc]
  42858d:	mov    eax,DWORD PTR [eax]
  42858f:	xor    eax,edi
  428591:	mov    al,BYTE PTR [ebp+eax*1+0x3272a3]
  428598:	mov    ecx,DWORD PTR [ebp+0x8]
  42859b:	xor    ecx,edi
  42859d:	movzx  eax,al
  4285a0:	add    ecx,ebx
  4285a2:	cmp    eax,ecx
  4285a4:	je     0x4286e2
  4285aa:	mov    eax,DWORD PTR [ebp-0x14]
  4285ad:	mov    eax,DWORD PTR [eax]
  4285af:	xor    eax,edi
  4285b1:	mov    al,BYTE PTR [ebp+eax*1+0x3272a3]
  4285b8:	mov    ecx,DWORD PTR [ebp+0x8]
  4285bb:	xor    ecx,edi
  4285bd:	movzx  eax,al
  4285c0:	add    ecx,ebx
  4285c2:	cmp    eax,ecx
  4285c4:	je     0x4286e2
  4285ca:	mov    eax,DWORD PTR [ebp-0x10]
  4285cd:	mov    eax,DWORD PTR [eax]
  4285cf:	xor    eax,edi
  4285d1:	mov    al,BYTE PTR [ebp+eax*1+0x3272a3]
  4285d8:	mov    ecx,DWORD PTR [ebp-0xc]
  4285db:	mov    ecx,DWORD PTR [ecx]
  4285dd:	xor    ecx,edi
  4285df:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a3]
  4285e6:	xor    al,cl
  4285e8:	mov    ecx,DWORD PTR [ebp+0xc]
  4285eb:	mov    ecx,DWORD PTR [ecx]
  4285ed:	xor    ecx,edi
  4285ef:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a3]
  4285f6:	or     al,cl
  4285f8:	mov    ecx,DWORD PTR [ebp-0xc]
  4285fb:	mov    ecx,DWORD PTR [ecx]
  4285fd:	xor    ecx,edi
  4285ff:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  428606:	cmp    cl,al
  428608:	jne    0x4286e2
  42860e:	mov    eax,DWORD PTR [ebp+0xc]
  428611:	mov    eax,DWORD PTR [eax]
  428613:	xor    eax,edi
  428615:	mov    al,BYTE PTR [ebp+eax*1+0x3272a3]
  42861c:	mov    ecx,DWORD PTR [ebp-0x10]
  42861f:	mov    ecx,DWORD PTR [ecx]
  428621:	xor    ecx,edi
  428623:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a3]
  42862a:	xor    al,cl
  42862c:	mov    ecx,DWORD PTR [ebp-0x14]
  42862f:	mov    ecx,DWORD PTR [ecx]
  428631:	xor    ecx,edi
  428633:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a3]
  42863a:	or     al,cl
  42863c:	mov    ecx,DWORD PTR [ebp-0x10]
  42863f:	mov    ecx,DWORD PTR [ecx]
  428641:	xor    ecx,edi
  428643:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  42864a:	cmp    cl,al
  42864c:	jne    0x4286e2
  428652:	mov    eax,DWORD PTR [ebp-0x14]
  428655:	mov    eax,DWORD PTR [eax]
  428657:	xor    eax,edi
  428659:	mov    al,BYTE PTR [ebp+eax*1+0x3272a3]
  428660:	mov    ecx,DWORD PTR [ebp+0xc]
  428663:	mov    ecx,DWORD PTR [ecx]
  428665:	xor    ecx,edi
  428667:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a3]
  42866e:	xor    al,cl
  428670:	mov    ecx,DWORD PTR [ebp-0xc]
  428673:	mov    ecx,DWORD PTR [ecx]
  428675:	xor    ecx,edi
  428677:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a3]
  42867e:	or     al,cl
  428680:	mov    ecx,DWORD PTR [ebp+0xc]
  428683:	mov    ecx,DWORD PTR [ecx]
  428685:	xor    ecx,edi
  428687:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  42868e:	cmp    cl,al
  428690:	jne    0x4286e2
  428692:	mov    eax,DWORD PTR [ebp-0x14]
  428695:	mov    eax,DWORD PTR [eax]
  428697:	xor    eax,edi
  428699:	mov    al,BYTE PTR [ebp+eax*1+0x3272a3]
  4286a0:	mov    ecx,DWORD PTR [ebp-0xc]
  4286a3:	mov    ecx,DWORD PTR [ecx]
  4286a5:	xor    ecx,edi
  4286a7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a3]
  4286ae:	xor    al,cl
  4286b0:	mov    ecx,DWORD PTR [ebp-0x10]
  4286b3:	mov    ecx,DWORD PTR [ecx]
  4286b5:	xor    ecx,edi
  4286b7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a3]
  4286be:	or     al,cl
  4286c0:	mov    ecx,DWORD PTR [ebp-0x14]
  4286c3:	mov    ecx,DWORD PTR [ecx]
  4286c5:	xor    ecx,edi
  4286c7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4286ce:	cmp    cl,al
  4286d0:	jne    0x4286e2
  4286d2:	lea    eax,[ebp-0x4c]
  4286d5:	push   eax
  4286d6:	call   0x42819d
  4286db:	mov    ecx,DWORD PTR [ebp-0x44]
  4286de:	cmp    eax,ecx
  4286e0:	je     0x4286ec
  4286e2:	mov    eax,DWORD PTR [ebp+0x8]
  4286e5:	xor    eax,edi
  4286e7:	add    eax,ebx
  4286e9:	mov    DWORD PTR [ebp+0x18],eax
  4286ec:	mov    eax,DWORD PTR [ebp-0x8]
  4286ef:	xor    eax,edi
  4286f1:	lea    eax,[eax+esi*1+0x3272ef]
  4286f8:	xor    eax,edi
  4286fa:	mov    ecx,DWORD PTR [ebp+0x8]
  4286fd:	mov    edx,DWORD PTR [ebp+0x18]
  428700:	xor    ecx,edi
  428702:	add    ecx,ebx
  428704:	cmp    edx,ecx
  428706:	je     0x428503
  42870c:	mov    eax,DWORD PTR [ebp+0x8]
  42870f:	mov    ecx,DWORD PTR [ebp+0x18]
  428712:	xor    eax,edi
  428714:	add    eax,ebx
  428716:	cmp    ecx,eax
  428718:	jne    0x42872b
  42871a:	mov    eax,DWORD PTR [ebp-0x8]
  42871d:	mov    ecx,DWORD PTR [ebp+0x1c]
  428720:	xor    eax,edi
  428722:	lea    eax,[eax+ecx*1+0x3272ef]
  428729:	jmp    0x4287a2
  42872b:	push   0x18
  42872d:	push   DWORD PTR [ebp-0x4]
  428730:	lea    eax,[ebp-0x64]
  428733:	push   eax
  428734:	call   0x427a19
  428739:	mov    eax,DWORD PTR [ebp+0x8]
  42873c:	mov    ecx,DWORD PTR [ebp-0x18]
  42873f:	xor    eax,edi
  428741:	add    eax,ebx
  428743:	cmp    eax,ecx
  428745:	je     0x42875a
  428747:	mov    eax,DWORD PTR [ebp+0x8]
  42874a:	xor    eax,edi
  42874c:	add    eax,ebx
  42874e:	push   eax
  42874f:	push   0x18
  428751:	lea    eax,[ebp-0x64]
  428754:	push   eax
  428755:	call   0x427ffe
  42875a:	mov    eax,DWORD PTR [ebp-0x4]
  42875d:	add    eax,0x18
  428760:	mov    DWORD PTR [ebp+0x18],eax
  428763:	push   DWORD PTR [ebp-0x50]
  428766:	push   DWORD PTR [ebp+0x18]
  428769:	mov    eax,DWORD PTR [ebp-0x54]
  42876c:	add    eax,DWORD PTR [ebp-0x20]
  42876f:	push   eax
  428770:	call   0x427a19
  428775:	mov    eax,DWORD PTR [ebp+0x8]
  428778:	mov    ecx,DWORD PTR [ebp-0x18]
  42877b:	xor    eax,edi
  42877d:	add    eax,ebx
  42877f:	cmp    eax,ecx
  428781:	je     0x428794
  428783:	push   0x0
  428785:	push   DWORD PTR [ebp-0x50]
  428788:	mov    eax,DWORD PTR [ebp-0x54]
  42878b:	add    eax,DWORD PTR [ebp-0x20]
  42878e:	push   eax
  42878f:	call   0x427ffe
  428794:	mov    eax,DWORD PTR [ebp-0x24]
  428797:	mov    ecx,DWORD PTR [ebp-0x50]
  42879a:	add    DWORD PTR [eax],ecx
  42879c:	mov    eax,DWORD PTR [ebp-0x50]
  42879f:	add    eax,DWORD PTR [ebp+0x1c]
  4287a2:	mov    DWORD PTR [ebp+0x1c],eax
  4287a5:	mov    eax,DWORD PTR [ebp-0x8]
  4287a8:	mov    ecx,DWORD PTR [ebp+0x1c]
  4287ab:	xor    eax,edi
  4287ad:	add    eax,ebx
  4287af:	imul   eax,ecx
  4287b2:	mov    ecx,DWORD PTR [ebp+0x8]
  4287b5:	mov    edx,DWORD PTR [ebp-0x28]
  4287b8:	xor    ecx,edi
  4287ba:	lea    ecx,[ecx+edx*1+0x3272ef]
  4287c1:	cmp    eax,ecx
  4287c3:	jb     0x428421
  4287c9:	mov    esi,DWORD PTR [ebp+0x14]
  4287cc:	mov    eax,DWORD PTR [ebp-0x20]
  4287cf:	mov    DWORD PTR [esi],eax
  4287d1:	jmp    0x428818
  4287d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4287d6:	mov    edx,DWORD PTR [ebp+0xc]
  4287d9:	xor    ecx,edi
  4287db:	xor    edx,edi
  4287dd:	add    ecx,ebx
  4287df:	add    edx,ebx
  4287e1:	cmp    ecx,edx
  4287e3:	jne    0x4287f7
  4287e5:	mov    eax,ds:0x7f642dd0
  4287ea:	imul   eax,eax,0x9f15fccf
  4287f0:	mov    ds:0x7f642dd0,eax
  4287f5:	jmp    0x428818
  4287f7:	mov    ecx,DWORD PTR [ebp+0x8]
  4287fa:	xor    ecx,edi
  4287fc:	add    ecx,ebx
  4287fe:	cmp    eax,ecx
  428800:	je     0x42880e
  428802:	sub    DWORD PTR ds:0xf861e30,0x709bead0
  42880c:	jmp    0x428818
  42880e:	and    DWORD PTR ds:0x3343fad0,0x5265ec3f
  428818:	pop    edi
  428819:	pop    esi
  42881a:	pop    ebx
  42881b:	leave  
  42881c:	ret    0x18
  42881f:	push   ebp
  428820:	mov    ebp,esp
  428822:	and    esp,0xfffffff8
  428825:	mov    eax,DWORD PTR [ebp+0x20]
  428828:	sub    esp,0x14
  42882b:	push   ebx
  42882c:	mov    ebx,DWORD PTR [ebp+0x14]
  42882f:	push   esi
  428830:	push   edi
  428831:	cmp    eax,0xf89c85b9
  428836:	jne    0x428842
  428838:	push   0xf89c85ba
  42883d:	jmp    0x428974
  428842:	mov    eax,DWORD PTR [ebp+0x20]
  428845:	cmp    eax,0xf89c85ba
  42884a:	jne    0x428856
  42884c:	push   0xf89c85bb
  428851:	jmp    0x428974
  428856:	mov    eax,DWORD PTR [ebp+0x20]
  428859:	cmp    eax,0xf89c85bb
  42885e:	jne    0x42886a
  428860:	push   0xf89c85bc
  428865:	jmp    0x428974
  42886a:	mov    eax,DWORD PTR [ebp+0x20]
  42886d:	cmp    eax,0xf89c85bc
  428872:	jne    0x42887e
  428874:	push   0xf89c85bd
  428879:	jmp    0x428974
  42887e:	mov    ecx,DWORD PTR [ebp+0x20]
  428881:	mov    eax,0xf89c85b0
  428886:	cmp    ecx,eax
  428888:	jne    0x428944
  42888e:	mov    eax,DWORD PTR [ebp+0x10]
  428891:	mov    DWORD PTR [esp+0xc],eax
  428895:	mov    eax,DWORD PTR [ebp+0x18]
  428898:	mov    DWORD PTR [esp+0x14],eax
  42889c:	mov    eax,DWORD PTR [ebp+0xc]
  42889f:	mov    DWORD PTR [esp+0x18],eax
  4288a3:	mov    eax,DWORD PTR [ebp+0x8]
  4288a6:	mov    DWORD PTR [esp+0x10],eax
  4288aa:	mov    eax,DWORD PTR [esp+0x10]
  4288ae:	mov    ecx,DWORD PTR [esp+0x14]
  4288b2:	mov    edi,0x75108a8
  4288b7:	xor    eax,edi
  4288b9:	mov    esi,0x3272ef
  4288be:	add    eax,esi
  4288c0:	mov    DWORD PTR [ecx],eax
  4288c2:	mov    eax,DWORD PTR [esp+0xc]
  4288c6:	mov    eax,DWORD PTR [eax+0x194]
  4288cc:	mov    ecx,DWORD PTR [eax]
  4288ce:	mov    eax,DWORD PTR [esp+0xc]
  4288d2:	mov    eax,DWORD PTR [eax+0x194]
  4288d8:	mov    eax,DWORD PTR [eax]
  4288da:	add    eax,DWORD PTR [ecx+0x3c]
  4288dd:	mov    ecx,DWORD PTR [esp+0xc]
  4288e1:	mov    ecx,DWORD PTR [ecx+0x1e0]
  4288e7:	mov    ecx,DWORD PTR [ecx+0x14]
  4288ea:	push   0x4
  4288ec:	push   0x3000
  4288f1:	push   DWORD PTR [eax+0x50]
  4288f4:	push   0x0
  4288f6:	call   ecx
  4288f8:	mov    DWORD PTR [ebx],eax
  4288fa:	mov    eax,DWORD PTR [esp+0x10]
  4288fe:	push   DWORD PTR [esp+0xc]
  428902:	xor    eax,edi
  428904:	add    eax,esi
  428906:	mov    DWORD PTR [esp+0x20],eax
  42890a:	lea    eax,[esp+0x20]
  42890e:	push   eax
  42890f:	push   ebx
  428910:	push   DWORD PTR [esp+0x20]
  428914:	push   DWORD PTR [esp+0x28]
  428918:	push   DWORD PTR [esp+0x24]
  42891c:	call   0x4282e1
  428921:	mov    eax,DWORD PTR [esp+0x10]
  428925:	mov    ecx,DWORD PTR [ebx]
  428927:	xor    eax,edi
  428929:	add    eax,esi
  42892b:	cmp    ecx,eax
  42892d:	je     0x42898b
  42892f:	mov    eax,DWORD PTR [esp+0x18]
  428933:	mov    ecx,DWORD PTR [esp+0x14]
  428937:	xor    eax,edi
  428939:	add    eax,esi
  42893b:	imul   eax,DWORD PTR [esp+0x1c]
  428940:	mov    DWORD PTR [ecx],eax
  428942:	jmp    0x42898b
  428944:	mov    ecx,DWORD PTR [ebp+0x20]
  428947:	cmp    ecx,0xf89c85bd
  42894d:	jne    0x428956
  42894f:	push   0xf89c85be
  428954:	jmp    0x428974
  428956:	mov    ecx,DWORD PTR [ebp+0x20]
  428959:	cmp    ecx,0xf89c85be
  42895f:	jne    0x428968
  428961:	push   0xf89c85bf
  428966:	jmp    0x428974
  428968:	mov    ecx,DWORD PTR [ebp+0x20]
  42896b:	cmp    ecx,0xf89c85bf
  428971:	jne    0x42898b
  428973:	push   eax
  428974:	push   DWORD PTR [ebp+0x1c]
  428977:	push   DWORD PTR [ebp+0x18]
  42897a:	push   ebx
  42897b:	push   DWORD PTR [ebp+0x10]
  42897e:	push   DWORD PTR [ebp+0xc]
  428981:	push   DWORD PTR [ebp+0x8]
  428984:	call   0x42881f
  428989:	mov    DWORD PTR [ebx],eax
  42898b:	mov    eax,DWORD PTR [ebx]
  42898d:	pop    edi
  42898e:	pop    esi
  42898f:	pop    ebx
  428990:	mov    esp,ebp
  428992:	pop    ebp
  428993:	ret    0x1c
  428996:	push   ebp
  428997:	mov    ebp,esp
  428999:	sub    esp,0xc
  42899c:	mov    eax,0xf89c85b9
  4289a1:	mov    DWORD PTR [ebp-0x8],eax
  4289a4:	mov    DWORD PTR [ebp-0xc],0xf89c85ba
  4289ab:	mov    ecx,DWORD PTR [ebp-0x8]
  4289ae:	xor    ecx,0x75108a8
  4289b4:	add    ecx,0x3272ef
  4289ba:	mov    DWORD PTR [ebp-0x4],ecx
  4289bd:	mov    ecx,DWORD PTR [ebp+0xc]
  4289c0:	push   eax
  4289c1:	mov    DWORD PTR [ebp+0xc],ecx
  4289c4:	push   DWORD PTR [ebp+0xc]
  4289c7:	lea    eax,[ebp-0x4]
  4289ca:	push   DWORD PTR [ebp+0x8]
  4289cd:	push   eax
  4289ce:	push   DWORD PTR [ebp+0xc]
  4289d1:	push   DWORD PTR [ebp-0xc]
  4289d4:	push   DWORD PTR [ebp-0x8]
  4289d7:	call   0x42881f
  4289dc:	mov    DWORD PTR [ebp-0x4],eax
  4289df:	mov    eax,DWORD PTR [ebp-0x4]
  4289e2:	leave  
  4289e3:	ret    0x8
